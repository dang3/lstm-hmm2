mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
sbb
push
push
push
or
pop
and
add
add
mov
add
ds
pop
pop
pop
add
or
push
mov
mov
or
fsts
mov
inc
or
inc
cmp
negb
cs
jbe
push
pushl
add
lds
adc
xor
movb
and
jnp
xor
jo
pop
ret
xor
xchg
je
pop
add
pop
andl
add
cmpsl
rcrb
mov
cmp
add
xor
add
ret
lea
add
ret
push
mov
xor
jmp
fisubrs
adc
or
add
mov
inc
add
add
sar
mov
adc
push
add
jbe
sub
mov
adcl
ret
mov
xchg
lea
sub
push
push
into
sub
pop
lods
mov
cld
inc
mov
inc
cmp
adc
push
pushf
jl
jne,pn
xchg
add
sbb
jns
inc
bound
into
xchg
adc
jns
leave
imul
dec
fstpt
ja
pop
clc
mov
cmp
xor
lahf
cs
mov
jnp
push
sahf
es
or
add
stos
pop
ret
sbb
adc
int3
pusha
outsb
ret
mov
pusha
mov
mov
loop
icebp
push
cld
ds
pop
sub
add
pop
roll
push
cmp
mov
rcll
or
adc
and
or
inc
or
ucomiss
and
cmp
loopne
or
dec
popa
call
call
call
sub
push
push
ds
aam
push
push
pop
jl
loope
mov
test
push
push
push
js
push
push
push
xor
mov
or
subb
in
icebp
cmp
pop
loopne
push
sbb
lds
push
loope
push
outsb
popa
jbe
loopne
test
adc
add
lods
cmp
add
repnz
inc
lods
push
prefetcht2
idivl
pop
jo
aad
out
pop
or
cs
jge
jo
push
mov
mov
inc
pop
xor
cmp
shl
sbb
mov
cld
arpl
imul
pop
daa
in
jae
mov
pop
or
or
gs
enter
cmp
je
pop
rcl
inc
stos
sbb
fsubrs
pop
mov
shrl
aam
repnz
stos
bound
or
fcomps
sbb
rorl
xchg
adc
pop
daa
fcoml
loop
fdivr
sub
xor
fstps
ss
and
ss
pop
lock
clc
ds
aas
lock
ffree
push
jl
ja
jno
fnstcw
dec
and
or
mov
add
push
mov
adc
adc
mov
xor
fcoml
gs
add
insl
hlt
sbb
or
pop
push
mov
mov
hlt
std
cmpsl
sub
mov
or
or
adc
orb
adc
lds
lods
clc
push
mov
xor
mov
popf
push
cmp
popa
sub
popf
adc
adc
pushf
or
lea
push
lcall
sahf
add
ja
sub
sbb
cmp
sbb
fcomps
rolb
add
cltd
cltd
fcoml
inc
push
mov
xchg
jne
pusha
inc
jmp
pop
push
aam
or
popf
jmp
mov
push
push
and
push
sbb
add
mov
ficoml
xor
or
pop
push
and
push
add
push
push
push
pusha
ja
scas
pop
ss
cmp
pop
dec
test
add
fucomi
inc
mov
mov
jl
daa
add
sub
shlb
loopne
adc
ret
sbb
in
pop
and
push
dec
push
add
add
lods
sbb
dec
jne
xor
push
jmp
inc
push
cmpb
cmpb
outsb
js
andl
or
inc
shl
xor
filds
pusha
ficoms
dec
iret
pop
ds
fstl
sbb
fstpl
push
rcrb
popf
sbb
scas
jl
aad
push
xor
daa
sub
dec
sub
jp
sub
movsb
test
mov
dec
push
pop
data16
inc
xchg
lods
test
mov
inc
aam
jae
repnz
shl
call
xor
push
add
jbe
jmp
mov
popa
mov
repz
xor
insb
inc
fdivs
fcomps
notb
mov
push
icebp
add
jge
add
jmp
lret
loope
rep
fwait
adc
lock
add
add
pop
icebp
push
add
lidtl
or
loop
add
lds
icebp
mov
in
cmp
pusha
inc
loop
sub
pop
negb
add
sbb
out
hlt
cmp
in
add
jbe
add
mov
inc
xor
mov
out
push
or
inc
cmp
jb
pusha
mov
dec
jb
sbb
rcr
cmp
xlat
testl
out
pop
cmp
add
push
aaa
pop
push
jo
dec
jne
icebp
rolb
inc
in
lock
xchg
dec
ss
mov
mov
push
int3
push
push
insb
sbb
loopne
lods
das
push
cmp
sbb
push
push
mov
sahf
push
jno
jecxz
cld
ja
inc
adc
xchg
imul
pop
inc
push
sbb
cmp
addr16
add
push
sahf
jns
sbb
sti
aad
inc
sbbb
add
jne
mov
cmp
insb
je
add
sbb
push
push
cmp
push
cmpsl
xchg
pop
dec
mov
mov
cmp
rcll
stos
popf
jmp
orl
or
pop
addr16
mov
jo
andb
or
add
adc
rorb
stos
stos
mov
mov
cmp
lcall
or
jbe
pop
movsb
or
clc
xor
outsl
cld
cmc
jge
loop
add
out
and
mov
xor
mov
addr16
push
dec
xor
or
mov
mov
push
jne
sbb
mov
push
mov
pop
addl
test
movsl
or
popa
popa
mov
jb
stos
loop
data16
bound
and
data16
out
pusha
pushf
js
jnp
mov
dec
add
adc
and
mov
cmpl
mov
rorb
in
add
pop
jb
js
push
addr16
push
or
or
xorl
or
pusha
jmp
sbb
mov
insb
ucomiss
jl
inc
or
inc
adc
incl
rcr
add
mov
cli
in
imul
pop
test
cmp
jb
cmp
sbb
dec
adc
in
mov
ret
sbbb
roll
ss
fsub
lcall
cmp
inc
or
int3
mov
ja
inc
sub
push
test
or
jbe
mov
xor
add
sti
sbb
dec
jb
and
xchg
inc
lcall
arpl
outsl
or
mov
andb
pusha
imul
pop
mov
xor
or
pop
mov
loop
or
push
add
pop
fldt
push
inc
mov
xchg
add
jae
pop
inc
cmp
inc
lock
dec
adc
jae
aas
add
pop
sbb
add
aam
xchg
mov
pop
shll
iret
jbe
or
dec
jl
data16
push
lock
sbb
in
add
lcall
jae
clc
xor
sbb
mov
mov
sub
dec
fs
dec
xchg
dec
add
inc
jmp
iret
sub
mov
inc
mov
add
mov
ja
mov
ja
mov
jo
mov
or
adc
std
jbe
iret
repz
sarb
ret
mov
cmp
lret
addb
xor
jne
pop
adc
xchg
subl
pop
cmp
je
and
sbb
out
xor
mov
or
push
pop
dec
or
in
pop
cltd
jge
dec
jae
cmpsl
and
pusha
jmp
cmp
or
rol
mov
addl
je
push
jge
flds
pop
dec
mov
test
je
or
add
or
sbb
pop
inc
or
add
mov
push
icebp
aam
xor
push
enter
jbe
aaa
ror
push
nop
and
ja
int3
mov
pop
inc
adc
mull
cmp
sub
cmp
jae
push
fadds
test
jbe
mov
sub
ret
add
addl
mov
repz
push
push
daa
or
pop
sahf
sub
dec
mov
pop
imul
cmpsb
adc
lea
mov
jge
int3
push
call
pop
xor
icebp
and
sbbl
ficomps
add
popf
pop
inc
add
mov
fsubrl
popa
sub
scas
cs
push
xor
testl
or
ja
sbb
pusha
andb
inc
subb
mov
into
xchg
mov
fwait
mov
icebp
pop
stc
call
mov
inc
jmp
sbb
and
mov
push
jge
ds
pop
sahf
cmp
add
add
add
sbbb
addr16
add
cmp
imul
mov
xchg
xchg
sbb
loopne
cmp
cmpsb
rcrb
cmp
pop
pop
mov
push
mov
mov
add
lods
lcall
adc
repz
daa
dec
cmp
add
or
jle
clc
in
adc
pop
rcrl
loopne
push
js
jg,pt
imul
or
push
sub
out
int3
pop
adc
pop
push
ss
roll
adc
sub
daa
ja
pop
call
je
jmp
mov
pushf
bnd
mov
stc
jbe
in
ret
push
cmp
mov
dec
push
sbb
push
add
cwtl
pushf
fdivl
adc
cwtl
cmp
add
sbb
mov
push
dec
add
push
mov
sbb
scas
push
loop
push
rcrb
and
pop
pop
cmp
push
mov
mov
sbb
adc
push
mov
lret
adc
ja
xor
add
test
jmp
popf
shlb
sbb
outsb
jmp
cld
std
xor
push
pop
push
sbb
movsb
sub
mov
sub
pop
push
inc
mov
mov
mov
leave
xor
fsubrs
xchg
or
stos
xchg
pop
push
dec
xchg
popf
cltd
pop
outsb
jnp
loopne
mov
movl
and
or
sbb
and
das
sub
pop
lods
and
sub
push
in
call
lock
adc
lcall
lods
jnp
push
and
cmp
aaa
mov
and
xchg
add
jl
inc
fisubs
call
test
clc
pop
push
mov
mov
ss
push
cmp
add
icebp
add
dec
push
push
cmp
es
and
pop
je
mov
aaa
mov
add
loopne
lock
mov
mov
cs
dec
dec
cld
mov
lea
jmp
daa
inc
subl
add
push
out
nop
aas
push
fmul
into
in
aad
popf
add
clc
push
test
dec
pop
or
dec
cs
jne
lcall
scas
sub
pop
movsl
mov
and
jmp
mov
mov
push
sti
lea
mov
jp
nop
cmp
and
mov
daa
adc
insb
add
or
into
pushl
clc
cld
push
imul
lock
fimuls
mov
adc
mov
sbb
cmp
or
fistps
clc
jecxz
lods
cld
mov
lock
jne
push
rol
or
jne
addr16
or
mov
mov
pop
jge
es
xor
mov
pop
shrb
mov
rcrb
cld
sbb
push
xchg
lcall
or
mov
push
xor
sbb
dec
arpl
push
out
add
mov
out
scas
iret
xchg
cmp
adc
lea
mov
push
push
lods
insb
imul
outsb
imul
sti
setg
dec
cmp
add
jl
and
rcll
mov
push
jne
aam
orb
sbbl
loopne
push
mov
imul
sbb
pop
je
jae
adc
push
jnp
int
or
out
rcll
arpl
pushf
cmp
adc
add
adc
jmp
jb
sub
lret
add
inc
sub
out
and
jnp
mov
pop
jne
js
dec
divl
jge
scas
add
cmpb
lods
xchg
ljmp
push
pop
push
shlb
xchg
out
push
pop
mov
insl
clc
cmc
imul
cmpsl
pop
push
mov
cmpsl
jg
jns
insl
mov
cmp
sbb
mov
movsb
call
les
mov
mov
cwtl
lea
bound
pusha
mov
lcall
sbbl
pop
clc
sahf
mov
cmp
add
popf
in
inc
fstpt
dec
inc
cmp
push
cmpsb
adc
int3
add
mov
sbb
adc
pop
mov
pop
pushf
mov
xchg
out
push
aam
cmp
pushf
xor
adc
cmp
sbb
dec
xchg
ret
jo
shrl
inc
fimull
lds
pop
xor
push
jecxz
cmp
cwtl
jne
push
mov
cmp
les
sbb
lea
fucom
sub
mov
sbb
cmc
in
jmp
movsb
add
arpl
aaa
dec
push
push
jnp
inc
fbstp
rcrb
imul
in
mov
dec
out
int
test
adc
dec
std
stc
fs
cli
mov
push
call
inc
cmp
movsb
jbe
add
shlb
pusha
ljmp
and
cld
je
imul
aam
out
ret
in
inc
sub
pextrw
add
push
push
fisubrl
mov
outsb
push
notl
or
mov
jb
sti
fidivl
mov
mov
fs
sbb
mov
and
dec
mov
mov
push
sahf
mov
je
arpl
pushl
in
add
xor
fucomip
inc
fadd
push
sub
push
mov
lret
pop
cmp
push
xchg
cmc
adc
pushf
incl
pop
es
dec
or
shlb
or
push
xor
jmp
xchg
xorl
inc
sbb
adc
and
pop
xchg
outsb
mov
je
sahf
sub
inc
mov
mov
scas
jnp
push
mov
or
mov
adcb
mov
adc
push
cmc
cmp
sub
sub
cmp
fidivrs
movzwl
push
mov
clc
call
repnz
mov
popa
lds
outsb
je
shll
cmpb
pop
push
iret
mov
adc
add
or
and
repnz
dec
cs
push
push
popa
unpcklps
add
roll
imul
adc
out
imul
add
cs
push
jl
xor
cld
xor
je
add
push
lock
inc
mov
push
push
iret
inc
aas
sbb
cmp
incl
sub
je
add
or
sbb
jp
mov
or
iret
jb
cmp
es
mov
cmp
push
sbb
fdivrp
mov
adc
shlb
pop
sbb
mov
call
gs
sub
sbb
hlt
jne
or
test
jne
and
int
sub
mov
frstpm(287
push
in
dec
notl
mov
add
test
jns
popfw
roll
sbb
push
idivb
rorl
addr16
lods
mov
mov
ja
add
xor
pop
cmp
je
sbb
push
xor
or
push
scas
lea
adc
or
push
call
pop
jnp
add
or
mov
push
test
jne
jb
cmp
pop
popf
fstps
mov
cmp
mov
test
imul
push
fs
or
hlt
out
loop
push
lock
sahf
pop
sbb
sub
addr16
setle
daa
cmp
mov
cmp
addb
hlt
add
lock
mov
lcall
or
cmp
hlt
mov
jne
mov
nop
xchg
add
mov
in
push
push
jns
out
in
adc
adc
sbb
sbb
add
push
fistpl
mov
arpl
jnp
cli
jno
sbb
mov
pushf
jl
xchg
push
sbb
mov
mov
pop
stos
clc
or
scas
jge
add
stc
mov
push
shr
add
loopne
fildl
xor
push
cmp
or
xchg
fcmove
pop
ds
inc
mov
xlat
loopne
rolb
fcomp
shlb
add
bound
test
rorb
mov
add
xchg
mov
sub
add
rol
mov
enter
leave
into
fimuls
mov
pusha
lea
xchg
push
sub
sbb
push
iret
and
in
testl
je
repnz
pop
mov
in
sbb
mov
mov
cmc
inc
push
push
jno
loopne
and
inc
notb
test
jmp
testl
sbb
fnstenv
inc
xor
or
ficompl
adc
fildll
cmp
aam
data16
mov
jne
mov
cwtl
and
jns
sbb
jle
fcompl
cmpl
jmp
add
movsl
out
movl
push
mov
and
sub
sbb
jge
insl
lods
shlb
roll
add
push
or
arpl
mov
push
pop
sarb
dec
repz
popf
sub
outsb
dec
adc
es
jae
int
clc
loope
dec
adc
add
jg
mov
adc
loopne
mov
orb
cwtl
loop
sub
adc
jno
and
and
adc
add
add
cmp
sub
push
push
jo
mov
out
and
adc
ljmp
dec
inc
inc
icebp
sub
or
outsb
xor
nop
add
cmp
test
ja
sbb
pop
sti
mov
je
jmp
je
js
sub
lret
clc
jbe
cld
out
insb
movsb
int3
xchg
or
movsl
mov
cld
test
ljmp
sub
sti
daa
pop
push
hlt
scas
pop
imul
pop
sub
pushf
shll
fsubl
hlt
jb
and
pop
int3
pop
mov
jp
sbb
push
xor
rcll
mov
pop
adc
mov
fisttpll
inc
cld
testb
or
ds
cmp
push
sbb
hlt
pop
dec
data16
mov
cs
jo
mov
ss
push
ficoml
es
xchg
jnp
fxch
adc
clc
mov
iret
cmp
sub
loop
out
frstor
mov
sbb
iret
fs
pop
jnp
jecxz
ror
mov
dec
adc
push
and
bound
loop
push
fsts
ja
or
push
fldpi
js
cmp
mov
je
das
pusha
push
mov
or
outsb
mov
cld
push
clc
fs
pop
adc
test
adc
aas
mov
jnp
js
push
or
pop
stc
dec
xlat
inc
inc
sub
sbb
inc
add
cmp
bound
cltd
mov
scas
mov
push
and
or
and
add
movsl
and
shll
xor
shr
add
add
js
cmp
inc
or
out
cwtl
or
shlb
cli
cmpsb
cmc
enter
test
add
mov
fldt
cwtl
inc
pop
jne
push
fimull
inc
pop
jbe
movsl
jo
arpl
push
sbb
push
push
add
sub
mov
add
inc
or
je
dec
mov
add
mov
jno
mov
hlt
push
ficompl
out
nop
mov
inc
clc
shlb
adc
push
jmp
add
xlat
mov
pop
mov
mov
mov
add
add
mov
mov
add
inc
inc
sub
gs
mov
daa
mov
push
mov
xchg
push
mov
cmp
insl
pop
aaa
cmp
and
jb
mov
dec
es
js
daa
pop
dec
rcrl
cmp
dec
sti
or
call
push
jge
pop
sbb
pushf
inc
lcall
xchg
sbb
push
mov
xor
dec
mov
mov
pop
pop
dec
push
loop
pop
stc
arpl
cmp
push
sbb
dec
sbb
add
dec
xor
jbe
orps
sub
mov
sbb
push
dec
fsubs
adc
push
or
pop
sub
jne
aaa
iret
mov
jmp
push
pop
loopne
add
pop
icebp
mov
cmpb
cwtl
lcall
ss
mov
push
jge
call
dec
lods
pop
or
rclb
jbe
rolb
aam
jno
shlb
test
cmp
cmp
push
lock
les
dec
ja
and
mov
ret
or
sarl
decb
popf
or
add
jne
push
pop
mov
or
mov
cld
stc
jl
pop
inc
sub
sub
int
out
movsb
mov
jmp
push
add
repnz
subb
jno
jae
mov
push
mov
push
mov
jl
mov
cmp
push
aas
scas
jo
add
loopne
cwtl
dec
lcall
mov
inc
xchg
aaa
dec
sti
push
enter
cmp
aaa
jne
push
jno
add
rclb
cltd
xchg
loop
mov
jo
jg
pop
push
inc
fs
enter
pusha
fimuls
scas
sub
push
or
dec
in
ds
je
insb
adc
in
xlat
push
outsb
test
scas
ss
push
sarl
fwait
pop
jmp
cmp
and
mov
rol
cmp
jge
popf
lea
jp
cmc
in
out
sbb
cs
and
adc
imul
jecxz
jl
push
adc
imul
addr16
lds
sbb
push
hlt
aas
sub
mov
mov
mov
shlb
in
movsb
testb
cmp
int3
pop
test
insb
and
inc
sar
mov
and
xchg
mov
adc
pop
jbe
les
and
test
mov
mov
push
push
pop
push
push
mov
inc
shrl
jp
bound
inc
insb
mov
cmpsb
ds
bound
cmc
pop
out
mov
jbe
clc
push
push
lds
loop
push
loop
mov
faddl
or
push
inc
push
repz
repz
cwtl
cmc
arpl
pop
pop
insb
jns
jo
sub
pop
loopne
dec
lods
jmp
fildl
push
dec
mov
das
adc
push
mov
fcom
lcall
lcall
mov
cmp
pop
or
addr16
cmpsb
pop
shll
and
sbb
jg
or
xchg
gs
leave
sbb
test
cwtl
cld
icebp
andl
lret
subb
mov
cwtl
jnp
lcall
inc
adc
jp
sbb
pop
in
lahf
jbe
fisubrl
faddl
je
aam
mov
or
mov
cmp
popa
fcoml
movsl
lret
nop
mov
aaa
or
adcb
xchg
lahf
out
adc
hlt
mov
xor
mov
shr
dec
jae
and
insb
enter
adc
enter
es
dec
loope
jo
sbb
mov
adc
xor
inc
rorl
dec
add
jl
pop
push
hlt
push
add
je
insl
xorb
xor
inc
push
orl
out
and
lret
fcomps
mov
mov
push
mov
rol
inc
inc
lret
jns
inc
jne
sbb
test
stc
jl
push
pop
and
lret
rolb
inc
cmp
adc
into
add
sbb
addb
aad
or
daa
faddl
adc
mov
stc
pop
push
sbb
push
out
in
lock
dec
inc
lock
push
mull
hlt
rclb
jmp
cs
adcl
cmp
sbb
jae
clc
cltd
pop
mov
mov
icebp
or
add
rolb
mov
push
stc
ficoms
inc
jo
clc
push
mov
nop
cli
rcrl
lret
sar
sub
pusha
nop
pop
mov
in
push
mov
mov
push
mov
pusha
sbb
mov
adc
or
push
call
and
out
out
jmp
inc
add
jmp
mov
rorl
clc
push
jns
ja
clc
mov
add
xor
xor
mov
push
enter
inc
pop
mov
pop
sub
inc
push
sti
loop
insb
fcoml
in
sbb
insl
xor
or
bound
fnsave
sbb
lock
inc
inc
cmp
into
lods
xor
lret
xchg
xor
lea
loopne
test
enter
xor
cmp
and
mov
in
or
jb
cmp
insl
rcll
push
sbb
jp
loop
nop
mov
stos
insb
inc
or
pop
push
adc
rorl
pop
add
jne
push
stos
or
jle
mov
movsb
push
gs
lea
inc
xor
cmp
or
sub
inc
and
inc
movl
iret
inc
popf
xor
jb
inc
popa
scas
mov
cmp
inc
sub
pushf
mull
fnstenv
pop
fs
fs
icebp
cmp
sbb
jae
pop
sbb
lock
icebp
fcoms
scas
or
adc
and
data16
pop
iret
xor
push
xor
pushf
test
in
mov
data16
lcall
lods
pop
ljmp
push
xor
mov
jo
jno
fs
cltd
add
mov
das
sbb
adc
jae
lret
or
dec
mov
into
mov
incb
mov
adc
xchg
rclb
add
ja
mov
shr
or
sahf
daa
inc
mov
inc
addl
push
add
and
adc
fidivrs
cmpsb
out
cmp
je
dec
dec
je
inc
ja
je
mov
push
push
dec
pop
dec
xchg
jne
mov
sub
xor
mov
icebp
fcomip
icebp
popa
or
leave
or
sub
inc
addb
das
out
inc
sbb
fdivr
xchg
pop
mov
inc
and
mov
pop
insb
in
dec
cmp
add
push
mov
loopne
sub
pop
sbb
popf
cwtl
or
fmull
dec
adc
push
push
push
inc
into
adc
push
hlt
cmc
pop
dec
jge
rolb
mov
add
push
outsl
lock
inc
rclb
pop
rorb
scas
and
fisttps
aas
stc
or
jo
pop
push
lea
addr16
lock
fstps
mov
push
inc
push
pop
movl
std
cwtl
inc
mov
and
cltd
adc
addr16
sahf
outsb
xor
stc
mov
mov
jmp
pop
add
push
mov
mov
mov
mov
add
leave
push
loop
or
mov
xor
inc
cmp
ret
xor
dec
pushf
in
sub
xchg
rorl
jbe
mov
mov
cltd
cwtl
iret
jae
lea
lcall
popa
or
or
xor
mov
inc
adc
ret
adc
je
mov
push
sbb
or
test
aaa
add
push
sub
jmp
mov
in
add
dec
push
mov
cmp
jae
andb
mov
leave
rcll
mov
xor
je
dec
mov
and
sbb
jo
push
mov
push
ret
mov
into
adc
or
add
cld
push
mov
enter
into
in
mov
clc
jno
mov
adc
adc
call
push
fcmovnb
push
pop
mov
call
sub
cmpsl
and
mov
cmpsb
jge
mov
jmp
popa
sub
push
lock
cmp
cmp
mov
push
mov
add
out
mov
lcall
mov
insb
mov
hlt
fistl
xor
mov
xor
mov
push
dec
fbld
arpl
call
mov
sarl
dec
fmull
xor
adc
sbb
mov
xchg
sbb
pop
push
popa
std
mov
bound
fxch
sub
jmp
jae
cmpsl
or
mov
push
pop
sbb
dec
arpl
sahf
or
push
mov
ret
sahf
je
mov
shlb
jmp
arpl
add
xor
push
mov
popf
sti
ljmp
dec
mov
das
cmp
mov
imul
jo
lea
mov
pop
inc
hlt
and
adc
cmp
mov
je
push
ljmp
dec
sbb
add
push
jne
push
sbb
subps
push
jno
adc
lret
jecxz
cmp
pop
clc
add
insb
cmpsl
ror
test
pusha
inc
lods
pop
push
mov
loop
add
scas
xchg
movsb
rol
sbb
mov
and
dec
mov
test
lods
push
ss
adc
xchg
and
jecxz
shll
mov
movsl
dec
or
adc
movl
and
mov
or
push
sahf
jmp
add
push
cmpsl
stc
fisttpl
jecxz
in
rcrb
pop
lcall
adc
sbb
pop
jbe
insb
pop
aam
push
insl
or
xor
clc
es
mov
push
push
pop
dec
lahf
dec
mov
or
dec
push
pop
loop
push
sbb
mov
mov
dec
add
gs
loopne
push
jl
mov
cmp
loopne
push
adc
call
lcall
je
pop
negb
adc
mov
cltd
cmp
jmp
or
cmc
repnz
mov
push
or
push
popa
out
or
sbb
adc
or
cld
mov
mov
jns
pop
mov
or
pushf
mov
push
stc
lods
or
mov
push
xchg
bound
jne
pop
mov
sbb
xor
push
push
test
mov
subl
int3
cmpsb
mov
add
mov
mov
xchg
cwtl
sarb
push
xlat
xchg
xchg
inc
sub
jae
push
into
aas
xchg
dec
cmp
push
xor
int3
lds
adc
addr16
xor
push
cmpsb
ret
sub
mov
push
push
jae
push
arpl
jbe
cmp
cld
push
jae
inc
inc
insl
test
cmp
into
cltd
xchg
pushf
pop
jp
push
lahf
cmpb
js
rcl
push
pop
mov
push
or
mov
stos
jecxz
jne
jecxz
inc
notb
xchg
inc
inc
lcall
sbb
add
popf
push
xor
lcall
popa
sbb
jmp
xor
inc
push
inc
mov
jmp
les
mov
lcall
or
pop
lods
mov
xor
imul
pop
sbb
je
mov
push
xchg
outsl
and
std
jae
push
cli
lcall
fs
and
add
sbb
push
push
and
cmpsb
xchg
push
jno
cmp
pusha
push
call
push
and
xchg
std
mov
jnp
daa
lds
daa
mov
lea
sbb
pop
push
sbb
push
das
mov
dec
jle
sbb
call
xor
leave
add
mov
cmp
jb
cmpw
add
or
xchg
aad
bound
loope
cmp
mov
sbb
push
or
add
lea
xor
jne
or
or
insb
fcompl
jge
push
iret
lods
add
mov
jno
pop
pop
cmp
pusha
add
pop
add
pop
sahf
bound
adc
es
mov
inc
push
pop
mov
in
in
sbb
and
jp
jae
pop
mov
push
pop
mov
adc
test
dec
rolb
mov
xchg
cvtpi2ps
xchg
pop
or
xor
lret
pop
dec
sbb
and
divb
cmp
push
aam
test
lock
jg
pop
sarl
dec
mov
xchg
sbb
xor
mov
xor
je
int3
movsb
cmp
in
add
mov
push
mov
cmp
pop
jne
inc
aad
dec
cmp
add
sub
aam
popa
clc
ja
inc
dec
adc
hlt
push
dec
mov
mov
shlb
sbb
mov
data16
push
imul
adc
int3
or
push
inc
add
xor
adc
jmp
cs
imul
lret
cs
out
xor
jecxz
and
push
sbb
lock
cmp
and
pop
mov
xchg
mov
mov
mov
sbb
pusha
mov
cmp
sbb
mov
cmp
push
mov
fimull
sbb
pop
adc
sub
call
mov
rcrl
out
daa
mov
les
sarb
xchg
hlt
bound
roll
and
jb
push
inc
outsl
ffreep
add
push
call
insl
mov
cld
and
cmp
jne
xor
adc
push
pushfw
xlat
dec
adc
push
andl
dec
push
icebp
inc
shl
sub
gs
push
inc
xchg
insb
gs
fwait
test
push
popf
mov
jmp
leave
cmp
cld
cmp
mov
fwait
cmpl
cmp
xchg
mov
mov
xor
cmp
je
add
inc
cmpb
jne
xchg
add
les
mov
loope
lea
inc
inc
fs
push
dec
in
inc
aas
or
inc
fld
or
leave
push
pushl
push
mov
in
sub
xchg
mov
lock
push
add
push
test
push
in
out
cli
stc
ret
sbb
lods
xchg
jns
out
in
cmpsl
scas
xchg
jmp
pop
hlt
xchg
push
in
mov
or
add
mov
mov
outsb
inc
aaa
lock
push
ret
pop
clc
add
or
inc
cmp
sub
add
adc
adc
push
jne
cmp
gs
xlat
cmpb
jle
or
mov
test
jb
mov
sbb
push
in
push
adc
push
sbb
pop
sbb
nop
mov
xorl
jbe
in
adc
xchg
mov
sbb
or
js
and
stc
js
mov
cmc
cmpsb
rorl
pop
fmull
sbb
enter
fcoml
inc
fwait
adcb
mov
and
push
mov
or
dec
and
and
jbe
xor
mov
and
adc
imul
xor
xorb
pushf
cmp
call
lret
and
in
in
adc
ret
ret
jb
dec
mov
or
popf
mov
int3
adc
mov
pushf
and
lea
mov
loop
cwtl
cwtl
pop
push
mov
mov
imul
fsub
push
fs
enter
push
push
call
mov
push
add
mov
aas
popa
cmp
les
out
hlt
mov
pop
xchg
xchg
insb
outsb
add
jbe
cmp
add
repnz
adc
or
test
jle
jo
ficoms
fiadds
mov
jb
push
push
clc
adc
mov
pusha
lcall
test
inc
cmp
shr
mov
mov
outsl
sub
out
mov
inc
sahf
cld
in
pop
jmp
lds
imul
loope
pop
push
mov
mov
roll
jl
movsb
jmp
mov
push
pop
or
push
pop
adc
out
push
pop
push
push
and
ljmp
push
scas
pop
scas
cld
cmp
hlt
push
int
test
sahf
mov
xchg
arpl
push
movsw
data16
roll
dec
cs
dec
sar
sub
mov
mov
or
imul
das
jmp
inc
lahf
mov
es
xchg
std
mov
or
push
ss
call
js
fsubr
daa
mov
idivl
xor
pop
jge
lods
push
cmp
dec
std
or
inc
ljmp
lret
sub
cmpsb
rorl
jns
leave
push
push
pusha
pop
sbb
cmp
out
mov
pop
imul
int
dec
push
sbb
jb
or
subb
mov
push
pop
push
push
sub
add
imull
adc
mov
mov
pop
jne
push
sbb
pushl
push
pop
movsb
cltd
push
lods
movsb
out
and
loope
jmp
bound
xor
icebp
mov
push
hlt
sub
or
pop
sbb
test
enter
jle
cli
dec
outsb
xor
inc
pop
loop
ret
jmp
mov
int3
repz
mov
and
scas
data16
adc
sub
inc
repnz
testb
daa
mov
mov
push
xor
cmpsb
pop
jnp
xchg
jge
pop
xor
les
mov
add
adc
test
dec
cli
add
inc
or
jne
ds
sarl
cld
push
test
pop
stc
jae
movsb
fildll
cmp
je
pop
push
lods
or
mov
mov
adc
nop
lret
loopne
out
inc
push
mov
and
inc
pop
sbb
sbb
mov
pop
rclb
fldl
mov
ficomps
sbb
in
pop
or
mov
leave
mov
mov
push
add
add
iret
lcall
sbb
or
jle
jns
mov
and
out
mov
inc
jge
mov
or
add
lret
or
dec
and
add
daa
jns
je
mov
test
mov
cmp
hlt
xchg
or
pusha
pop
mov
jbe
jmp
lret
lret
push
jne
cmp
adc
push
mov
mov
jbe
dec
scas
xor
xor
repz
mov
sahf
cmpsl
xor
out
push
inc
pop
outsb
and
aaa
mov
punpckhdq
test
push
sbb
add
pop
arpl
ret
popf
pop
stos
ficoms
ja
sub
or
jno
in
jns
fisubl
leave
lock
addr16
mov
add
int3
sbb
addr16
mov
or
lock
and
pop
clc
mov
pop
dec
adc
add
add
and
lahf
mov
pop
dec
mov
cs
sbb
jmp
cs
push
or
cmc
inc
in
xor
iret
cmc
mov
mov
clc
cwtl
incl
dec
xor
or
dec
or
xorb
jmp
push
notl
mov
xor
ret
push
cmp
insl
mov
dec
lods
jl
loop
mov
lret
cltd
arpl
adc
push
mov
loope
xchg
lds
mov
leave
mov
testl
mov
push
sbb
addr16
sbb
mov
mov
ds
stc
mov
pop
popa
mov
xchg
mov
xchg
andb
jp
cmp
es
mov
lods
stc
mov
es
push
mov
jnp
push
sbb
pop
movsl
sub
adc
es
dec
or
push
inc
inc
lds
xchg
cld
pop
out
rolb
int3
cwtl
jns
fiadds
in
addr16
pop
xchg
jmp
xor
mov
cmpsl
cmp
xor
das
sub
sbb
das
mov
cli
inc
inc
outsl
leave
xchg
lahf
adc
mov
insb
push
shrl
jmp
clc
xchg
push
push
xchg
sbb
add
movsl
loope
dec
call
push
les
and
test
lock
sbb
test
push
lea
jae
mov
or
add
pop
push
ja
lret
push
xchg
fbld
int
inc
sbb
xchg
call
bound
adc
cmpb
and
sahf
cmc
push
xor
js
xor
and
movb
jno
jmp
cltd
sbb
sub
jns
push
mov
pop
ret
ret
inc
cmp
fsubrs
jb
nop
lds
xchg
mov
jae
adc
insl
add
in
mov
gs
arpl
or
or
loopne
lcall
add
les
ret
sub
cld
test
adc
push
clc
pop
lods
pop
clc
pop
pop
sub
push
shlb
pop
pop
adc
sbbl
mov
cmp
jmp
aam
dec
jno
push
mov
fsts
jb
mov
xor
pop
pop
mov
leave
test
push
mov
imul
push
push
repnz
sahf
das
push
aam
arpl
or
data16
xchg
cmpl
sub
bound
sub
pop
lea
pop
cmp
cmp
push
int3
lahf
stc
and
sbb
ret
push
insb
jl
sahf
popa
or
scas
xchg
add
cli
in
pusha
es
sbb
mov
lret
rcr
addr16
in
xchg
adc
and
mov
aam
cmc
and
pop
pop
das
sub
xchg
insl
jl
inc
mov
xor
das
pop
inc
ss
push
mov
fwait
push
rcll
imul
stos
jbe
or
push
add
sub
mov
dec
aas
sbb
push
fs
inc
into
ret
cmc
cltd
imul
je
xchg
xor
data16
or
sub
lods
mov
das
je
dec
jne
hlt
inc
push
xchg
iret
and
das
mov
jo
enter
js
cmc
cmp
or
push
dec
pop
lods
mov
rolb
mov
popf
sbb
fiadds
pop
ret
cmpsl
rolb
out
dec
ror
test
imul
mov
shll
aaa
andb
add
xchg
pushf
sbb
pop
pop
lret
lock
push
add
pop
call
ljmp
and
into
lret
adc
test
and
inc
daa
lcall
jge
call
push
dec
add
adc
aam
pushf
push
repz
pop
ja
orl
ss
jp
js
clc
jne
adc
jne
xchg
jne
add
lock
lea
sti
lahf
cmp
pop
in
dec
jbe
pop
dec
jp
sbb
push
mov
bound
push
sbb
hlt
es
inc
pop
stos
jns
and
fcomps
punpckhbw
mov
cld
fcoms
lret
into
pop
insl
negl
lret
xchg
push
cmc
popf
pop
pop
clc
pop
in
loopne
pop
js
test
pop
sub
sbb
dec
and
in
push
notl
in
pushl
imul
lcall
mov
mov
fnsave
adc
lds
jp
or
pop
fsubrl
adc
cmp
adc
sub
jecxz
jne
addr16
pop
aad
lret
dec
jnp
sbb
ficompl
push
add
pop
xor
je
adcb
jp
cmp
mov
sti
mov
or
push
or
cmp
push
movsb
xchg
aam
cld
fisubrs
mov
lods
rcr
andnps
push
adc
cmp
in
sub
daa
jns
cmp
test
mov
ds
jne
pusha
imul
lret
ljmp
shl
cmp
in
pop
add
xchg
inc
fadds
out
mov
add
aam
sbb
ljmp
cmc
xor
xor
push
sbb
lock
in
inc
addl
push
sbb
int
ss
call
hlt
sbb
enter
pop
lcall
and
scas
out
push
adc
sbb
adc
dec
jecxz
add
scas
push
adc
inc
sbb
sarb
repnz
or
jne
lea
inc
cld
push
pusha
push
push
mov
mov
push
jns
lds
shlb
inc
and
imul
enter
push
xor
dec
mov
push
cmp
pop
hlt
pop
jns
jne
clc
js
jmp
jbe
out
xchg
fwait
push
mov
add
mull
data16
xor
jge
pushf
in
push
mov
mov
cmpsl
dec
fs
jge
and
int3
out
loopne
bound
push
sub
imul
mov
sbb
cmp
addb
xor
je
mov
fadd
jecxz
in
add
xor
ret
sbb
faddl
sbb
xor
or
jmp
mov
cmp
insl
inc
iret
pop
nop
das
ds
inc
pop
inc
pop
adc
pushl
push
push
jns
add
rcll
push
mov
mov
xor
out
sub
shl
icebp
cmp
mov
lret
mov
ss
sbbb
sarb
xchg
add
jne
shr
push
lret
push
xchg
mov
sar
sti
mov
sbb
arpl
test
push
mov
inc
cmp
ds
adc
fisubl
mov
adc
fildl
push
jge
push
xchg
and
jge
sbb
or
dec
mov
mov
pusha
sbb
mov
lock
adc
or
mov
imul
adc
xchg
test
xchg
jmp
push
add
push
pop
xchg
testl
iret
mov
cmp
xchg
addb
jmp
sub
cmpsl
les
lea
test
cmpl
aaa
rcl
imulb
shl
mov
pop
pop
iret
xchg
shrb
lods
lods
das
xlat
cwtl
and
pop
dec
pop
mov
or
stos
and
inc
and
push
popa
scas
movsl
pop
add
psrlw
stos
xor
orb
dec
call
lret
dec
xchg
inc
lahf
and
cmp
push
je
daa
test
call
insb
pop
jmp
cmp
mov
cmp
adc
push
cld
push
or
cmp
cmp
and
dec
popf
sub
push
aaa
xchg
push
fnstenv
movsb
push
dec
jno
pop
jp
movswl
jo
mov
fadd
dec
mov
jns
push
sbb
pushw
in
pop
shrb
sbb
adc
adc
test
pushf
and
mov
mov
test
cmp
pushf
sbb
lahf
setge
ret
enter
adc
nop
sbb
iret
mov
or
adcb
add
cs
and
inc
cmp
dec
sub
inc
add
add
push
ret
aam
add
inc
repz
xlat
dec
xchg
xchg
mov
incb
je
pusha
add
je
loopne
je
loopne
jne
stos
push
xchg
pop
fwait
test
mov
mov
adc
inc
andl
inc
stos
addr16
ret
xor
inc
sub
mov
fcom
sub
push
ret
call
negb
and
mov
sbb
je
cmp
jl
shr
or
jbe
cmp
jo
cmpb
sbb
lahf
dec
sbb
test
in
sbb
mov
addr16
cmp
mov
jl
je
movl
jb
je
pop
cmp
and
call
inc
cmp
rclb
or
pop
mov
add
jne
movl
addr16
adc
inc
sbb
add
call
jmp
mov
mov
cmp
and
adc
inc
xor
mov
fdiv
lret
sbb
mov
or
sbb
or
cld
outsl
das
sub
push
call
fsubs
jnp
enter
mov
les
into
push
popf
out
cmp
out
jmp
sti
cmpsl
inc
out
dec
cmp
out
sbb
mov
xchg
dec
insb
mov
test
sbb
jmp
and
and
pop
rcrb
adc
or
popf
inc
popf
inc
inc
je
leave
aad
and
lock
outsl
call
outsl
jl
cmp
outsl
mov
xchg
sbb
out
cmp
cmp
mov
es
add
ds
sbb
out
into
pusha
mov
repz
cmp
push
mov
jo
mov
nop
outsb
mov
fxch
icebp
insb
fnop
icebp
pop
flds
jl
jo
jo
out
aaa
fs
insb
iret
int3
fldl
repnz
subb
jno
push
dec
cmp
outsb
mov
out
add
push
rorb
int
repz
insl
mov
fldcw
pop
pop
or
movsb
das
les
sbb
out
inc
loopne
lret
dec
mov
mov
sbb
test
mov
pop
pop
mov
nop
pushf
inc
lcall
arpl
mov
push
cmp
add
cmp
das
hlt
movsl
sbb
mov
jp
inc
je
pop
je
cmp
fwait
adc
repz
sbb
sbb
add
and
sbb
hlt
insb
or
sbb
out
or
js
aam
mov
mov
fxch
js
mov
jbe
jbe
mov
roll
mov
insb
loope
mov
es
in
fs
movsb
jbe
pop
adc
cmp
cmp
cmp
xor
xor
fadds
addb
popa
sahf
adc
into
adc
lods
cmpl
stc
je
mov
movsb
fistpl
mov
adc
loope
fsubl
addr16
cld
addr16
sbb
and
pop
mov
or
movsl
in
mov
mov
jbe
jbe
jbe
mov
and
sahf
jnp
jno
push
je
mov
xchg
shll
push
inc
pop
sbb
fs
movsb
mov
sarb
pop
pop
sub
rclb
and
shlb
popa
jecxz
mov
test
ja
pmuludq
pop
or
push
lock
mov
imul
clc
mov
imul
imul
in
into
imul
mov
es
push
fsts
or
sarl
inc
je
cmp
imul
sub
cmp
je
cmp
push
cld
xchg
lods
mov
pusha
out
sub
xor
pop
push
rcr
lret
push
mov
jne
test
fs
pusha
cld
mov
push
inc
stc
imul
je
push
mov
or
cld
push
xor
cmp
mov
jb
mov
insb
addr16
push
in
loopne,pt
sbb
jp
les
push
jp
mov
ror
jp
pushf
je
jl
cmp
subb
jp
je
call
or
push
jbe
jl
jbe
inc
aam
out
jl
mov
mov
enter
dec
mov
dec
mov
jle
dec
in
fwait
aam
pop
jbe
jne
push
xor
movsb
cmpsb
jmp
sbb
cld
imul
cmp
jl
js
in
ja
fsubrl
enter
into
pop
cltd
popf
cmpsl
dec
jno
flds
push
push
and
imul
in
push
arpl
jl
pop
inc
sbb
into
in
mov
mov
das
pop
mov
fs
pop
lock
xlat
sbb
xor
xor
dec
or
mov
add
addr16
inc
jnp
fdivl
cwtl
mov
cmp
dec
gs
jns
cmp
xor
push
jnp
cwtl
xlat
sbb
mov
movsb
push
aam
aam
lods
jno
fldenv
or
inc
pop
add
push
inc
lea
sbb
cmp
shlb
testl
andl
aaa
xchg
cmp
push
in
aad
pop
mov
aaa
and
inc
movsb
push
pop
dec
popf
dec
mov
push
popf
push
jo
pop
pop
popf
pop
pop
push
pop
pusha
popf
fs
cmp
pop
push
push
pop
jo
je
or
js
jl
lock
aas
cmpb
mov
stos
aas
mov
mov
cmp
cmp
cmp
push
and
jne
sub
adc
push
loop
dec
and
and
and
cmp
je
dec
out
or
je
inc
sub
mov
je
popa
push
push
fcomps
pop
fists
and
add
push
and
or
aam
out
andb
fisubrl
sub
pop
xchg
add
pop
push
adc
pop
sub
sbb
xor
sbb
adc
in
inc
loopne
rolb
add
or
push
and
jnp
pop
jo
jge
add
mov
mov
sub
adc
cli
or
add
add
mov
inc
cmp
or
shlb
add
cmp
inc
andb
add
sbb
je
cmp
or
cmp
inc
inc
cmp
jl
cmp
pop
je
jb
jge
push
rcr
or
test
mov
dec
cmp
rep
lea
test
jl
mov
sbb
adc
jns
or
mov
mov
sbb
dec
cmp
jle
pop
test
cwtl
pop
inc
cltd
add
cmp
pop
jl
or
or
adc
sar
mov
jle
imul
ljmp
push
rclb
into
pushf
fisttpl
mov
jmp
fadd
dec
in
jl
pop
mov
iret
ds
inc
sbb
or
popf
pop
rorb
dec
pop
or
add
mov
add
push
test
lea
fmull
or
add
clc
out
das
push
dec
es
jne
dec
dec
popa
pop
jg
jb
add
ret
idivl
movsb
in
xchg
rcrb
adc
dec
dec
add
pop
adc
mov
orb
pop
jg
add
or
mov
add
lea
or
inc
je,pn
shll
out
cs
adc
test
cli
or
push
inc
push
dec
push
xchg
xor
mov
push
jbe
popf
leave
into
mov
xor
test
xchg
lcall
fs
jge
mov
test
or
nop
mov
add
add
fisubs
inc
adc
pop
push
mov
cmp
data16
xchg
pop
enter
imul
test
xchg
push
push
movsb
ret
inc
cmp
repz
xchg
inc
sub
pushf
xor
mov
inc
jae
inc
push
cmc
adc
or
arpl
das
mov
incb
lret
clc
add
je
lds
jae
add
loope
push
mov
or
mov
dec
das
pop
out
js
add
mov
add
sub
out
pop
pop
or
add
lds
pop
xchg
xchg
and
jne
lods
or
push
adc
mov
pushf
clc
cmp
mov
ret
push
mov
xor
jg
adc
dec
xchg
push
leave
or
xchg
push
inc
or
cmp
xchg
fstpl
xchg
jbe
inc
push
xor
mov
in
or
pop
fcom
jge
test
sbb
movl
lock
loop
add
daa
enter
lret
adc
enter
push
push
or
and
pop
adc
push
insl
jb
scas
mov
or
push
or
push
loop
push
push
outsl
insl
mov
fcmovu
inc
xchg
orb
inc
sub
out
cmp
mov
pusha
jae
mov
adc
cmp
test
mov
xor
jg
jmp
sub
stos
lahf
sub
push
add
pop
sar
test
outsl
push
cmp
fcom
push
lods
fldcw
or
aam
sub
jne
lahf
cs
jmp
leave
add
add
xchg
popf
pop
mov
cmp
pop
in
mov
sub
aaa
addl
jg
add
repz
rorb
lds
adc
push
insb
mov
or
or
adc
push
mov
jp
sub
mov
sbb
xchg
dec
or
mov
ja
scas
aas
push
enter
add
lds
and
rolb
test
andl
push
cwtl
test
addr16
or
js
cmp
test
pop
addl
bound
ret
dec
push
pushf
inc
sbb
test
jo
jmp
cltd
nop
rolb
jbe
je
sbb
push
ja
je
pop
lea
add
adc
movzbl
add
popl
in
cmp
ss
je
sbb
sub
jne
and
mov
push
adc
push
inc
or
lock
add
push
jp
mov
in
adc
mov
mov
mov
xchg
rep
iret
mov
add
add
add
add
add
or
std
cmpsl
and
and
lods
sbbl
jns
mov
cmp
pop
cld
add
fs
mov
and
mov
mov
push
xor
jne
js
cmp
test
cld
mov
cmp
mov
mov
inc
add
cmp
jecxz
mov
adc
sub
xor
je
dec
sub
xchg
jns
mov
jl
jns
jo
cs
idivb
cmpsb
in
loopne
call
pushl
jb
pop
cmp
pop
jns
fdivl
rclb
and
xchg
jl
clc
bound
hlt
jns
pop
sub
cltd
insb
cltd
mov
or
pop
aas
push
aam
int
xchg
ja
sub
dec
jne
push
sub
xor
cmpl
orb
int3
call
pop
mov
adc
test
jo
outsb
leave
sbb
jmp
ja
dec
ret
and
sbb
jp
cmp
and
mov
rcr
and
hlt
jns
sbb
dec
bound
add
or
sub
push
shll
and
pop
sub
add
xlat
testb
mov
jne
orb
and
mull
cmp
pusha
xor
xor
pop
pop
lahf
test
adc
outsl
mov
jns
lcall
jg
mov
inc
orl
lcall
and
sub
fidivl
je
adc
mov
add
xchg
sub
fwait
xchg
pop
nop
inc
insb
pushf
iret
int
cmp
pop
xor
outsb
ret
push
repnz
aas
add
push
mov
inc
loope
sub
mov
mull
or
mov
push
lcall
sub
adc
and
dec
lds
push
mov
fwait
mov
pop
or
push
push
sbb
push
cld
arpl
testb
pop
push
enter
ficomps
sub
dec
cmpsb
sbb
pop
sub
jp
cwtl
jb
imul
pop
inc
mov
push
mov
jbe
leave
mov
bound
fs
insb
inc
jle
fcompl
add
add
push
or
in
bound
adc
lods
and
cwtl
cld
in
inc
addr16
test
sub
jae
ret
xchg
mov
mov
les
xchg
push
push
sub
je
or
or
cmp
out
pushf
popf
and
mov
mov
cmp
test
dec
add
and
sbb
stc
nop
push
cmc
sbb
and
inc
fcoml
es
aaa
push
mov
and
outsl
and
mov
insl
and
es
add
xchg
pop
or
in
les
or
jbe
dec
cld
mov
orb
inc
push
push
push
ror
subb
aaa
pusha
test
cmp
cmp
push
cmp
sahf
gs
push
push
xor
andl
push
sbb
xor
add
jl
or
adc
adc
clc
sbb
push
dec
jmp
jo
xor
lret
repnz
jo
sub
lods
mul
daa
add
mov
inc
push
adc
lea
mov
adc
adc
cs
in
mov
mov
cmpb
das
insb
js
adc
pop
aad
sub
sbb
dec
mov
pop
and
sbb
and
aas
sub
or
xor
hlt
jg
and
in
stos
iret
sub
aam
xor
shr
cmp
lods
aas
cmp
cwtl
mov
iret
inc
into
jo
aas
inc
ds
in
repnz
sbb
sub
push
cmp
jmp
add
stos
push
xchg
dec
das
movsb
pop
mov
and
test
push
xor
inc
xchg
pushf
les
fcmovnb
xor
mov
inc
call
xchg
aad
mov
mov
push
cli
ret
cmp
push
cmp
push
cmp
xchg
negl
mov
jno
cltd
mov
xchg
xor
push
iret
push
jbe
or
dec
pushl
push
sbb
dec
repz
add
rolb
cmp
jnp
jmp
bound
inc
sbb
jo
push
cmp
mov
cld
cmpl
mov
out
push
lret
jl
out
adc
inc
hlt
mov
pop
addps
mov
jnp
pop
je
dec
xor
je
mov
or
xor
xor
pop
inc
mov
inc
andb
push
fdivrl
enter
cmp
je
sub
je
lds
pop
mov
inc
jno
jmp
xor
lock
jo
pop
lds
daa
sub
push
dec
mov
adc
push
jne
into
popa
and
push
inc
mov
mov
call
sub
pop
xor
call
sub
pop
sbb
jge
adc
jge
or
mov
add
push
sub
test
shl
and
call
mov
mov
mov
pop
clc
mov
sbb
push
jmp
call
jns
rclb
rclb
clc
and
les
ret
cs
push
jg
out
sub
or
das
push
out
cld
cmpsl
fcmovnu
sub
sub
mov
lahf
subl
push
and
sbb
loope
or
test
je
lcall
cmc
inc
mov
inc
push
xchg
cmpsb
sub
data16
stos
push
add
pop
lret
mov
iret
je
sub
arpl
mov
ret
add
je
cli
js
mov
and
jmp
lods
push
icebp
por
rolb
inc
xchg
mov
push
push
lock
cmp
mull
pop
push
pop
cwtl
rcr
cmp
jbe
aaa
lea
xor
ret
sbb
cmp
jb
jmp
push
fs
lret
sbb
or
pop
push
inc
dec
inc
xchg
cltd
push
int3
mov
adc
pop
mov
in
enter
lea
bound
dec
leave
orb
inc
repz
mov
mov
push
add
icebp
sbb
cmpsb
mov
push
push
stc
add
jle
lea
push
shr
pop
inc
fdiv
or
lea
mov
add
inc
insb
inc
mov
negb
add
xchg
or
add
rorb
popa
sahf
shr
or
pop
or
add
mov
mov
clc
ljmp
mov
ret
or
insl
xchg
mov
cmpsl
ljmp
cwtl
adc
cmp
je
addl
push
push
push
mov
subl
dec
push
out
cmpsb
xchg
xchg
mov
data16
pop
mov
daa
push
or
sarb
add
cmc
insb
or
add
cmp
jge
pop
add
addl
stos
shrb
loopne
xor
pop
int
fwait
dec
addb
sarb
movsl
int
and
inc
or
aaa
mov
enter
mov
rolb
xchg
movsl
out
pop
jno
push
jbe
xchg
sbb
mov
test
jge
inc
fpatan
xchg
jnp
sbb
call
mov
icebp
divb
xchg
loopne
mov
mov
dec
fcompl
ss
mov
push
mov
decl
or
scas
stos
jecxz
mov
fsubl
push
test
repnz
sub
sbb
fcomps
jb
test
xchg
xor
out
mov
dec
popa
or
insl
lock
out
dec
add
sub
push
xchg
xor
adc
jne,pn
test
jl
jmp
jg
jne
clc
cmp
test
xor
xor
sbb
pusha
mov
shll
jb
cmp
push
xchg
mov
es
xchg
dec
clc
add
add
push
xchg
cltd
adc
hlt
sub
ds
dec
jp
cmp
orb
popf
aam
test
adc
cld
adc
imul
adc
push
push
sbb
sub
add
rolb
movsb
inc
add
loope
push
jp
inc
fwait
mov
outsl
pop
sbb
cmpsb
cmc
add
test
push
push
jns
rcll
mov
addr16
test
and
movsb
shrl
sub
xor
lea
cmp
jmp
adc
jge
mov
fisubrs
fwait
ror
adc
into
loopne
stos
scas
xor
adc
fimull
out
in
and
mov
roll
add
nopl
outsl
daa
jae
fdivrp
movsb
inc
and
clc
sahf
arpl
sub
mov
inc
push
sub
push
xor
add
sbbb
sub
insl
orl
adc
test
lods
jle
sbb
in
into
xor
xchg
rorl
jne
ljmp
fstpl
pop
mov
xor
sub
int3
loope
repnz
or
jle
cmp
push
mov
push
lods
push
or
and
rol
inc
mov
push
push
sub
jmp
sub
jno
dec
in
gs
lcall
jbe
or
dec
xchg
outsl
into
cmp
rorb
sub
push
test
fidivl
add
jno
inc
add
mov
add
jns
push
icebp
dec
divb
lahf
ror
shl
dec
in
jno
out
pop
jne
jge
inc
fmuls
mov
push
inc
jmp
inc
cmp
ja
cwtl
sub
fstp
push
mov
ja
cs
mov
mov
xchg
push
int
fsubs
cmp
add
jne
mov
cmp
sbb
je
or
cmc
scas
sub
pushfw
rclb
mov
or
cmp
les
inc
xchg
xor
jne
jecxz
dec
xchg
into
cs
push
xorl
pop
xor
mov
repz
cmpb
mov
jnp
sbb
sub
loope
pushf
mov
jge
push
adc
sbbl
push
inc
fwait
out
add
dec
dec
inc
dec
sub
xor
push
cmp
mov
div
mov
push
mov
fs
mov
jo
push
push
fmull
cmp
pop
xor
cmp
pop
add
js
jl
negl
sbb
xor
aam
sbb
add
test
mov
out
adc
xchg
pop
pop
and
jo
mov
lock
testl
push
and
mov
sbb
dec
hlt
or
in
lahf
push
xchg
xor
or
int
adc
loopne
mov
xor
add
dec
mov
ret
xchg
mov
pop
inc
and
cmp
jb
push
jo
sbb
test
cmc
stos
lea
sub
mov
xor
out
or
and
sub
pop
add
xor
cmp
pop
mov
mov
sbb
leave
mov
xor
or
push
pop
shl
jno
push
push
inc
mov
mov
repnz
inc
xchg
dec
es
sbb
jne
xor
arpl
sub
push
pop
aam
scas
fmuls
push
mul
push
mov
or
mov
fs
in
push
clc
addr16
push
sub
daa
push
push
fs
nop
sub
lds
inc
test
call
adcl
in
xchg
add
jle
mov
xor
je
cmp
xor
test
pop
popf
pop
cmpl
inc
fadd
std
xor
push
loop
stc
sub
adc
or
push
jns
sbb
lcall
lret
sub
movsb
repz
jl
mov
mov
pop
jg
push
movsb
inc
test
mov
mov
push
mov
int3
je
test
push
sbb
push
xchg
inc
add
rclb
addr16
movsb
sbb
sub
xor
jmp
push
sub
mov
add
lea
test
je
add
dec
mov
dec
or
mov
xor
push
jl
cmpsl
add
xchg
inc
push
pop
je
mov
mov
scas
lods
jge
cltd
and
pop
rcr
test
push
mov
ficomps
dec
out
dec
fldcw
dec
sbb
add
dec
insb
aaa
adc
aad
nop
add
in
jo
jae
movl
les
mov
je
pop
ret
mov
ret
xchg
aam
movsl
inc
lds
out
mov
push
adc
mov
jl
int3
jecxz
push
add
lcall
cli
push
lock
loopne
mov
sub
enter
push
sub
sbb
fisubrs
mov
rorb
jne
add
call
push
daa
out
dec
push
add
std
pop
mov
jmp
add
xor
cwtl
subl
out
push
int3
push
adc
xor
mov
mov
push
inc
popa
dec
pop
clc
push
ror
pop
mov
pop
xchg
dec
es
icebp
ss
test
xchg
mov
arpl
ss
fwait
cld
adc
ss
jmp
js
das
fistl
push
lods
pop
enter
movsl
leave
sub
pop
fldt
adc
push
maxps
lret
push
lock
aaa
mov
adc
jle
int
cmc
loop
repnz
js
leave
xor
inc
hlt
imul
push
inc
pop
fwait
and
ds
mov
or
dec
and
pop
pop
pushl
inc
adc
inc
les
jle
faddp
add
mov
sub
je
in
orb
les
add
pushf
xor
daa
jl
out
lahf
int
and
pop
pop
pop
jnp
adc
jnp
dec
xchg
mov
inc
movl
mov
pop
cmp
mov
sti
inc
jp
cltd
in
arpl
or
sub
fisttpll
inc
dec
jecxz
push
and
iret
sub
fwait
mov
out
sbb
xlat
add
daa
mov
movsb
adc
push
xor
cmp
xor
ret
inc
inc
inc
push
adc
mov
outsl
add
pop
jl
mov
mov
imul
popf
sub
jecxz
pop
fstps
mov
mov
cwtl
pop
loopne
push
pop
lea
mov
mov
andb
sub
add
movsbl
jo
mov
movb
cwtl
xchg
mov
add
or
dec
jns
xor
sbb
push
clc
or
scas
es
es
xor
or
sahf
mov
in
inc
fs
mov
mov
rcrb
add
jne
sbb
test
jae
decl
push
push
adc
sub
sbb
mov
sub
ljmp
push
les
pop
into
adc
mov
adc
jl
fldcw
sbb
push
mov
sahf
negl
xor
sbb
push
js
stos
dec
and
test
cmp
push
sahf
xlat
xchg
daa
mov
fiadds
das
push
mov
jo
movsb
repnz
clc
xor
out
mov
fnstsw
adc
mov
int
add
idiv
shrb
punpcklbw
mov
dec
push
push
inc
sub
cmpl
xchg
lods
inc
push
popf
fadds
mov
js
mov
inc
push
push
repnz
shrb
sbb
sub
push
dec
sub
sub
outsb
xchg
or
mov
sahf
push
stc
scas
fdivrs
sub
daa
add
inc
sbb
fisttps
das
cmp
or
mov
je
pop
jo
jle
sub
push
pop
pop
inc
out
xor
test
push
aaa
pop
sub
pop
jnp
mov
or
adc
je
mov
outsl
sbb
sbb
lret
stos
pushf
pusha
ret
mov
int3
fisttpl
cmp
je
mov
push
pop
je
push
inc
add
or
into
pushf
je
or
mov
loope
add
sbb
jle
pop
ja
ret
out
in
add
inc
or
push
mov
sahf
xor
push
sbb
or
adc
cmpl
adc
loope
lods
into
push
repnz
daa
push
lods
pop
adc
xchg
mov
out
insl
sbb
push
inc
add
mov
ret
push
ds
lahf
push
pop
fadd
in
push
xor
cmp
shrl
loop
xchg
lods
mov
sub
jle
lock
xor
outsl
push
in
iret
cmp
sbb
fadd
aad
sbbb
mov
mov
adc
or
and
arpl
aam
push
sahf
dec
in
or
fcomip
inc
add
jns
fimull
mov
adc
jae
mov
rol
in
idivl
add
pushl
push
add
insl
nop
ret
add
es
mov
imull
mov
sahf
inc
sbb
shrl
xchg
adc
js
push
pop
stos
xchg
sub
stc
inc
or
or
pop
enter
sub
inc
jno
xor
es
loope
stc
shll
push
pushf
mov
and
inc
mov
xor
xchg
cmp
pop
push
out
cmp
or
push
inc
testb
popf
test
jne
mov
imul
dec
into
fbstp
jno
je
mov
add
jl
repz
jmp
lods
xor
fidivs
or
cmpsb
into
adc
inc
rolb
mov
repz
and
mov
pop
scas
mov
dec
pop
pop
lea
cmpb
je
mov
add
mov
mov
mov
or
inc
push
xor
mov
xchg
std
cmpsl
add
cmpsl
push
leave
popa
cmpb
arpl
mov
scas
or
ds
and
mov
adc
and
push
xlat
dec
xor
leave
inc
mov
pop
or
xor
mov
adc
leave
mov
push
xor
or
pop
cmp
mov
xlat
jg
lret
les
cmp
xor
pop
mov
and
pushf
scas
add
lea
mov
cmp
sets
clc
mov
dec
aas
lret
lahf
mov
shl
test
push
out
or
popa
test
and
jne
outsl
mov
xor
push
out
mov
add
xlat
jle
or
cmp
ss
data16
loope
andl
shrb
jl
mov
imul
jl
dec
stos
sub
imul
add
rorb
lea
jecxz
clc
dec
push
cmpsl
or
jmp
jno
lea
jl
lods
jge
lcall
adc
arpl
sbb
pop
gs
js
add
inc
hlt
push
xor
ja
pop
hlt
xchg
pop
je
push
cmp
or
das
mov
jne
mov
imul
mov
xlat
xor
sbb
dec
sub
jecxz
push
jecxz
lea
mov
pop
or
push
icebp
sbb
lods
push
pop
adc
mov
loopne
sbb
and
popa
xchg
mov
or
dec
inc
inc
inc
lods
adc
mov
mov
mov
aad
bound
imul
push
and
scas
pop
pusha
adc
movsb
es
or
repnz
add
pop
jns
inc
adc
xor
or
cmp
push
stc
daa
sbb
sbb
ja
xor
cwtl
pop
jle
adc
jmp
bound
pop
roll
ret
push
in
jns
bound
xchg
sub
inc
push
mul
mov
rolb
mov
rolb
inc
rorl
add
jns
ds
push
clc
bound
dec
sarl
mov
ss
cwtl
and
lcall
ljmp
mov
test
in
test
es
fidivl
xadd
add
mov
add
ficoml
outsl
repnz
fwait
fwait
repnz
or
fldcw
cmp
cld
dec
call
aas
lock
mov
clc
jp
dec
jg
sbb
push
addr16
icebp
cmp
cld
cmp
lock
inc
mov
lret
jl
adc
push
mov
jmp
ds
cmp
clc
je
cmp
dec
pusha
mov
out
adcl
cmp
mov
addr16
add
adc
lret
sbb
mov
les
push
call
sub
pop
punpckhbw
inc
aam
enter
and
popf
sub
dec
add
popf
les
jmp
dec
rorl
dec
pop
jl
shll
icebp
mov
mov
jb
sbb
jbe
sbb
les
les
sub
pop
or
cmp
add
ret
in
lret
ds
into
mov
in
ret
fnstcw
call
mov
adc
fchs
jle
cmp
das
fcoml
testb
clc
mov
mov
int3
mov
enter
shr
inc
inc
in
xlat
push
jg
movsb
ret
mov
cmpsb
pop
movsb
adc
andl
mov
sbb
pop
je
jecxz
mov
clc
fwait
in
push
pusha
xchg
insl
cmp
dec
sbb
fadds
clc
ret
in
xor
cmp
iret
sub
pop
mov
xchg
inc
inc
sbb
mov
jg
hlt
aas
into
push
add
fmul
inc
call
mov
addr16
icebp
jb
loopne
jbe
jg
sbb
roll
int3
clc
mov
cwtl
movb
mov
mov
nop
ret
jbe
and
pop
mov
xor
mov
mov
cmpsl
sbb
sahf
shlb
iret
xchg
pusha
dec
les
adc
mov
in
dec
cmp
cmp
or
xor
hlt
shrl
cld
jbe
jg
sbb
pop
cmp
in
add
sbb
shll
je
jg
sbb
jne
jl
les
cs
jnp
int3
adc
roll
in
cmp
adcb
adc
dec
out
cmp
sar
call
ret
xor
scas
xor
cmp
sti
sbb
push
sahf
mov
cwtl
jecxz
pause
clc
sbb
mov
aas
add
test
icebp
mov
jae
jb
pop
icebp
push
jo
idivb
xchg
xor
insb
jle
fs
xor
pusha
cld
jle
jg
pop
inc
lahf
dec
cs
icebp
add
inc
cld
ds
bound
call
pop
stos
mov
xchg
lds
in
push
push
cld
cmp
lahf
inc
lahf
xor
lret
xor
mov
and
aas
jo
and
out
icebp
adc
jle
jg
pop
sbbb
lock
clc
add
aas
pop
pop
clc
shlb
hlt
icebp
adc
in
cld
adc
lcall
jge
outsl
sub
fadd
fcomps
clc
aam
rorb
fcom
sub
les
cmp
xchg
rcr
sub
mov
xor
adc
call
jl
jle
or
int3
in
pop
adc
adc
inc
cld
mov
adc
dec
clc
cmp
or
lahf
push
mov
sub
push
loope
mov
test
pop
and
mov
sarb
sbb
dec
jbe
popa
jns
movsl
hlt
out
pop
jns
xor
fdivrs
std
mov
repz
lock
psrad
std
cltd
xchg
daa
push
jle
inc
pop
clc
mov
or
jne
ret
je
pop
push
hlt
and
pop
xor
sbb
jne
popf
pusha
dec
and
jno
xor
pop
ja
or
fistl
or
cmc
popf
push
das
lds
popf
mov
and
ljmp
icebp
adc
in
stos
lods
cmp
mov
data16
sub
imul
jle
sbb
xchg
add
mov
jo
ret
cs
mov
lea
pop
or
repz
mov
addb
push
inc
push
aam
xchg
sbb
jne
cmp
and
popa
add
mov
insb
mov
and
sbb
sbb
mov
xchg
addr16
imulb
pop
or
xchg
addr16
roll
lds
aas
push
and
add
dec
mov
or
cmp
adc
and
and
or
in
or
push
push
mov
adc
mov
adc
test
or
pop
dec
dec
repz
icebp
xchg
adc
repnz
lods
je
push
test
add
test
je
and
mov
jb
sub
push
push
scas
mov
cs
movsl
pop
adc
mov
call
rorb
push
loope
pop
mov
mov
xchg
mov
jge
mov
lret
ror
outsb
adc
loope
fadds
stos
and
js
mov
and
jo
sti
pop
and
insb
mov
fs
punpcklbw
pop
mov
andps
dec
mov
cmovs
inc
mov
mov
xor
sti
pop
dec
push
wrmsr
mov
sub
mov
sbb
push
aas
pop
aas
sbb
lret
or
jle
jg
sbb
clc
mov
hlt
psadbw
mov
test
xchg
ds
bound
push
clc
repz
mov
fwait
sbb
fdiv
test
sar
ds
pop
aas
int3
loope
push
icebp
sar
lret
jg
adc
fistpl
and
int
pop
or
rcr
movsb
mov
mov
adc
sub
push
adc
cwtl
mov
seto
mov
jo
icebp
je
leave
and
test
adc
fs
jl
xchg
fsubs
clc
pop
jge
pop
push
xchg
inc
push
clc
dec
jge
pop
or
inc
or
sbb
xor
aas
jl
sbb
jl
jg
je
insl
or
sbb
adc
and
jecxz
clc
or
add
int3
add
mov
clc
clc
jge
sahf
add
lds
clc
call
lea
scas
add
loopne
hlt
aam
cmpsl
and
sbb
cmp
mov
shrl
data16
adc
fbld
sbb
xchg
dec
imul
mov
mov
cs
xor
test
push
push
jg
insb
jecxz
clc
insl
in
js
lock
aam
adc
xor
test
inc
lcall
sub
or
push
mull
out
or
into
xlat
insb
or
push
insl
insb
or
pop
inc
nop
pop
loope
imul
aas
je
call
push
inc
push
push
fstpl
mov
cli
mov
sub
cmp
movsb
repnz
mov
pop
mov
mov
test
sbb
int
push
mov
ss
add
sarl
mov
imul
push
push
test
pop
rcl
cwtl
inc
fsts
rcll
or
or
test
loope
pushf
pop
int3
jae
gs
movsl
cli
adc
aam
shrl
sbb
xor
pushf
sub
mov
cwtd
mov
lcall
pusha
int
inc
mov
adc
sbb
mov
push
add
inc
push
push
push
gs
mov
push
scas
or
jmp
jge
call
or
roll
movsb
out
shrl
lods
les
mov
adc
pop
mov
cmp
loope
adc
movsl
mov
das
mov
out
pop
push
pushf
aam
repnz
and
or
sbb
sbb
and
mov
jns
je
stos
in
repz
jecxz
adc
xor
cmp
setne
push
sbb
push
or
dec
jb
ret
cmp
daa
addr16
push
and
pop
mov
cld
pop
push
call
mov
mov
stc
sti
sub
adc
test
jo
xchg
imul
push
xchg
test
mov
cmc
shr
adc
push
inc
mov
mov
push
mov
sbb
adc
outsl
push
clc
push
test
pop
cli
js
pop
jae
test
stc
jge
mov
cmp
cli
inc
lds
aam
inc
dec
divl
ds
dec
mov
test
adc
inc
sbb
push
stc
push
aam
dec
push
cli
ljmp
ja
mov
dec
xchg
mov
rclb
push
xor
sbbb
es
push
scas
shll
repz
pop
pushf
push
js
jmp
sub
addr16
jns
jp
pop
movsb
push
mov
cmova
pop
cmp
mov
mov
aad
sbb
aam
fs
ret
pop
loop
jle
mov
push
xchg
scas
mov
dec
jecxz
dec
push
cmp
sti
pop
pop
pop
nop
sti
stos
cwtl
clc
xor
add
push
pop
lock
or
shll
lea
fimuls
sbb
or
and
roll
xor
push
mov
inc
push
movsb
cmp
pop
in
or
rcr
sub
adc
mov
cmp
sub
jmp
mov
xchg
enter
imul
cmp
mov
lea
xor
dec
jl
repnz
mov
je
cmpb
and
mov
mov
and
pop
add
lds
push
movsb
scas
add
rorl
jne
pop
je
jno
mov
xor
push
mov
or
stos
movsb
lret
sub
aam
mov
pop
push
notb
and
add
insb
cmpsl
mov
lods
shlb
xchg
gs
or
test
das
jnp
push
mov
mov
daa
loop
pop
ror
mov
and
rclb
rcrb
sbb
xor
mov
iret
jl
int3
push
pop
popf
or
jb
out
mov
je
insl
lret
dec
pushf
or
push
mov
dec
jns
popf
mov
test
or
je
sbb
mov
cmp
jmp
sub
add
push
jmp
mov
add
ss
cmpl
mov
inc
lea
adc
cmp
push
pop
xchg
mov
mov
out
fwait
rol
test
push
cmpsb
inc
jecxz
mov
jmp
adc
adc
sti
xor
pop
push
or
cwtl
scas
jnp
mov
or
cmp
or
push
mov
es
loop
add
inc
xor
rcr
xlat
lahf
and
int3
mov
mov
sub
inc
or
pop
push
push
enter
jo
cld
rcrl
fisubl
jnp
ud0
pop
xchg
jmp
xchg
jae
push
mov
mov
inc
popf
dec
or
lea
adc
test
aas
pop
sub
push
sub
fnsave
ljmp
jne
sub
stc
xlat
pop
sub
rcrl
fsubr
fs
cli
pop
pop
cld
mov
stos
adc
cld
lret
and
push
adc
sti
mov
cld
mov
out
cmp
jno
jo
or
dec
mov
insb
fdivrs
mov
sbb
xchg
fadds
xchg
push
fcoms
cmc
xchg
loope
cld
clc
cmc
cmpsb
stc
or
push
mov
enter
out
cmp
mov
sti
imul
lods
clc
loop
out
stc
and
sub
lock
cmpsl
cmc
fs
push
xchg
sti
xorb
mov
sahf
clc
adc
pushf
push
sti
clc
xchg
mov
cmp
out
aam
or
adc
aam
ljmp
add
sti
stos
popa
mov
and
adc
lods
xor
sub
add
cmp
pop
sbb
pop
jo
repnz
rolb
movzbl
test
mov
call
or
mov
jb
push
jl
pushf
jne
pop
push
popf
adc
repnz
dec
dec
cmp
mov
push
cmp
pusha
stc
lea
lods
repnz
in
dec
push
cmp
out
nopl
out
or
loop
pop
inc
fmulp
cmc
push
xchg
add
mov
out
shl
and
sar
enter
fstpl
sub
out
mov
bound
aam
jo
sub
ljmp
inc
out
jae
stos
out
xor
cmp
fsubrs
sbb
push
mov
add
std
cwtl
loop
pop
sbb
ret
cwtl
jecxz
sbb
adc
push
adc
jns
sbb
sbb
jmp
js
mov
nop
jne
popf
push
inc
or
loop
je
mov
inc
mov
xor
xor
out
ss
adc
and
rcl
jmp
push
into
es
fcompl
ss
ljmp
sbb
sbb
mov
mov
jmp
scas
push
mov
dec
aam
int3
mov
mov
test
lods
jecxz,pn
jmp
shlb
sbb
push
addr16
leave
adc
xor
loop
and
ficoml
lods
movsb
pop
fldenv
negl
out
xor
movsb
clc
es
mov
pop
lock
push
in
mov
lret
sbb
and
out
mov
and
mov
mov
notl
push
cli
xor
int
inc
daa
push
adc
sub
mov
aaa
mov
push
out
in
push
push
rorb
sbb
jmp
ja
daa
insl
or
je
xchg
xchg
pop
add
imul
lret
dec
icebp
rcr
pop
cmp
xlat
leave
xchg
in
in
fisttps
aas
mov
jmp
jne
sbb
cmp
in
popf
push
cs
ds
pushf
push
movsl
jmp
sbb
mov
mov
data16
mov
push
adc
push
cld
inc
xor
std
xor
jne
push
push
inc
dec
add
imul
mov
ja
push
push
mov
mov
push
push
push
add
adc
push
push
add
or
movsb
sbb
add
call
out
adc
outsl
orl
cmp
lret
dec
inc
mov
or
xor
or
imul
inc
pop
into
push
and
xchg
imul
shlb
pop
mov
inc
or
pop
lahf
sbb
mov
aad
adc
fcompl
jl
stos
bound
pop
push
mov
rorl
pop
lds
repnz
fucomip
cmp
mov
outsl
fs
push
dec
popa
cmp
pop
and
dec
nop
das
pop
push
popf
and
push
shr
pop
inc
and
lcall
push
lcall
sbb
jl
je
outsl
mov
cli
cmp
and
rolb
xor
inc
pop
add
mov
mov
and
lds
push
cmp
addl
lods
pop
shlb
stc
nop
loop
cld
mov
cwtl
mov
ret
xchg
faddl
push
cmp
push
stc
inc
sti
inc
xchg
mov
mov
xchg
fwait
lahf
pop
mov
in
fs
add
lods
xchg
jle
stos
sub
mov
ja
xorl
sbb
fnsave
or
push
aad
inc
pop
fmul
sbb
push
mov
iret
push
push
out
aaa
ss
mov
out
pop
lock
sahf
les
das
jbe
cli
xor
mull
sbb
mov
pushf
into
sub
aas
and
pushw
sub
push
push
add
nop
jne
sbb
aas
mov
cmp
cltd
imul
cmp
mov
pop
cmp
and
ror
push
dec
movb
and
popa
add
or
xchg
sub
mov
xor
push
jno
push
or
stc
mov
inc
je
addr16
das
scas
jne
sbb
inc
cmp
mov
or
adc
adc
stc
pop
or
outsb
and
inc
sub
or
sub
push
mov
pop
mov
pop
sub
adc
push
sub
je
xchg
inc
sub
addl
jne
pop
mov
cmpsl
js
jmp
sbb
nop
or
rorl
jl
test
cmp
testl
sbb
pop
ds
pop
test
mov
mov
pop
out
dec
rcr
sub
or
jl
xchg
ljmp
aas
js
xchg
jne
pop
jne
cmp
insb
jl
arpl
inc
shrb
je
push
clc
push
test
sub
scas
cmp
lret
cmp
push
mov
sbb
scas
lods
in
scas
or
jecxz
add
xchg
fdivs
fimuls
and
imul
lret
jns
xor
test
pop
sti
mov
or
loop
and
cltd
push
mov
mov
push
cmp
push
ud2
fs
mov
mov
and
scas
dec
js
jmp
sub
andb
fld
mov
xor
mov
addr16
pop
jl
and
adc
bound
mov
jecxz
sbb
or
sub
test
push
sbb
rcll
scas
shll
push
adc
sbb
pop
add
mov
mov
cmp
add
pop
aad
mov
pop
mov
sbb
cmp
out
sub
call
mov
cs
fbstp
adc
xchg
call
scas
mov
push
dec
loope
call
dec
sbb
push
inc
jmp
sbb
test
call
pcmpgtd
xor
sbb
push
movsl
roll
out
mov
adc
mov
sbbb
scas
mov
scas
adc
cmp
lods
mov
jae
or
cmp
test
adc
and
lret
shrb
xchg
dec
or
mov
andb
inc
clc
pop
fdivp
testl
push
leave
push
xor
lds
bound
add
add
xor
ljmp
push
cmp
stos
testb
popa
sub
jp
into
sbb
lods
jns
xor
int3
mov
adc
inc
int3
dec
lods
jnp
dec
faddl
jmp
adc
pop
mov
inc
icebp
lods
nop
lods
clc
mov
bound
push
pop
jcxz
ret
pop
flds
and
aad
xor
loopne
les
cwtl
mov
mov
test
adc
lods
pop
and
and
push
stc
sbb
cmp
mov
cwtl
sbb
sub
jne
cmp
mov
adc
pop
mov
mov
inc
rclb
or
mul
lcall
insb
mov
loop
add
dec
scas
movsl
mov
mov
stos
in
enter
cwtl
frstor
and
fldt
adc
pop
and
xor
mov
inc
dec
push
movlps
add
push
pop
add
inc
outsb
enter
testl
mov
or
cmp
mov
scas
mov
lret
testl
jecxz
lcall
sbbl
movsl
cltd
idivl
and
xor
imul
jp
and
into
in
rcr
add
mov
cwtl
fstpt
testb
cmpsl
push
or
add
cmp
jne
out
mov
add
mov
pop
mov
sbb
ja
rclb
lods
xchg
cmp
push
aam
xchg
movsl
scas
sub
push
movsl
mov
das
and
imul
pushf
sti
dec
pop
sub
cwtl
and
adc
inc
adc
mov
jg
arpl
bound
inc
push
pusha
cld
sbb
or
daa
cmp
sbb
push
fcmovnb
imul
push
int3
in
into
inc
sbb
pop
dec
or
gs
jno
pop
decl
mov
push
cmc
into
sbb
and
sahf
cld
cmp
cmp
stos
add
je
jmp
mov
and
xor
sbb
adc
jmp
in
movups
insl
in
adc
mov
cmp
xor
aad
imul
dec
in
ss
sbb
inc
in
insl
inc
shl
dec
in
lret
pusha
cld
cld
jl
inc
cmp
aas
out
inc
dec
xchg
call
ret
push
inc
in
test
xchg
call
push
mov
push
shrl
xchg
je
das
je
or
jmp
adc
cmp
xchg
shlb
movsb
je
mov
notl
sub
sbbb
nop
rorl
ss
stc
sbb
sub
fistpl
cmpb
into
push
in
into
sub
dec
in
or
xchg
out
xchg
push
clc
int3
repz
inc
mov
jae
push
lock
adc
sbb
pop
je
addr16
mov
je
lea
stos
sub
mov
push
mov
aam
push
shl
pop
push
icebp
aam
popl
pop
xchg
mov
xor
test
add
int3
dec
test
push
jg
xchg
clc
dec
lods
xor
pop
test
cmp
and
push
movl
adc
int
dec
xchg
sbb
push
hlt
in
bnd
push
or
mov
adc
cmc
test
mov
or
nop
or
add
or
adc
mov
mov
je
call
lods
cmc
ret
lods
test
test
imul
lea
sub
repz
and
mov
dec
jmp
test
or
jg
or
inc
loop
sub
jnp
jle
xchg
shrb
jge
sbb
add
dec
iret
push
les
ret
movsl
sbb
sbb
cmp
les
and
push
xlat
jmp
or
pop
add
pop
or
jo
jae
adcl
inc
int3
add
imul
insb
test
cld
dec
hlt
mov
sbb
pushf
pop
and
dec
into
push
mov
lret
inc
mov
push
lods
sub
add
test
cmpsb
loopne
and
cmp
or
in
test
dec
xchg
mov
arpl
add
add
or
sub
aaa
bound
dec
lahf
lods
xchg
adc
test
adc
add
test
jl
jae
movsb
sbb
push
arpl
cmpsl
mov
imul
les
pop
and
push
xor
or
je
ss
pop
pop
mov
pusha
sub
xchg
cmpsl
and
lcall
shrb
mov
popf
mov
inc
xor
jmp
sub
cmpsb
or
push
adc
outsl
inc
pop
out
xor
push
out
xchg
in
jbe
sarl
sbb
mov
cmp
pop
mov
push
pop
sub
dec
cmpsl
rolb
add
neg
out
mov
push
adc
aaa
call
jle
jo,pt
lcall
cmpsl
scas
lea
cmp
inc
lds
pop
jne
push
push
sbb
test
adc
inc
fisubs
push
xchg
cmpsb
arpl
pop
mov
inc
mov
cld
or
cmpsb
scas
ss
ss
or
movsb
mov
les
pop
pop
aaa
xor
and
and
xchg
loop
adc
pop
or
cmpb
mov
or
jmp
ds
mov
icebp
xor
insl
and
add
shl
in
popa
inc
push
and
jmp
push
sbb
pop
outsl
dec
call
xor
mov
mov
fstps
cwtl
bound
cld
imul
fidivrs
xor
cmpsb
jmp
sbb
mov
insb
jge
mov
repz
jb
in
int3
mov
xor
in
test
ljmp
ds
pop
lock
inc
fisubs
lods
movsl
jg
test
xchg
mov
inc
in
mov
mov
xor
int3
call
into
fidivl
mov
lret
mov
pop
xchg
jmp
push
jno
outsl
cld
push
xor
inc
out
pop
inc
fiaddl
cmpsb
movsl
imul
test
xor
sbb
mov
cmp
jge
mov
add
lea
add
push
je
lea
mov
push
sbb
fnstenv
int
or
movsb
icebp
aas
mov
inc
pop
jecxz
adc
mov
insb
pop
sub
je
ror
mov
into
ret
xchg
rolb
push
and
push
adc
stos
pop
push
and
test
pop
mov
xchg
movsb
mov
push
mov
test
ds
xor
dec
lock
push
push
inc
or
out
or
cmp
sbb
loopne
xor
das
je
in
push
pop
mov
movsb
shl
adc
push
or
dec
movsb
aas
inc
xchg
xor
popa
mov
jo
push
pushl
ds
pop
rolb
jge
sub
and
ret
clc
mov
add
adc
vfmsub213sd
cmp
mov
insb
pop
jg
push
push
imulb
or
xchg
fdivl
out
andb
rolb
inc
sbb
mov
mov
adc
jp
xlat
addb
sbb
mov
inc
stos
push
dec
adc
mov
ficoml
inc
pop
test
push
and
push
push
iret
rolb
repnz
pop
or
add
out
mov
les
cwtl
pushw
xchg
mov
lret
hlt
hlt
push
rorb
xor
push
xchg
mov
rcll
rorb
jl
fcom
je
or
mov
fiadds
mov
aam
hlt
xchg
js
mov
mov
loopne
xchg
adc
xchg
rorl
or
sar
push
push
jmp
adc
gs
repz
enter
sbb
cltd
arpl
adc
push
mov
mov
sbb
inc
cmpsb
out
push
mov
cmp
mov
mov
adc
leave
inc
gs
in
movsl
xchg
fs
lods
xchg
cmpsb
arpl
pushl
xchg
and
add
ljmp
dec
jg
unpcklps
cmp
fprem
loop
mov
cmp
push
or
int
xor
mov
mov
pushf
xchg
jmp
mov
push
in
test
jno
shlb
mov
sbb
loop
mov
or
mov
pop
stos
popf
inc
leave
fiadds
pop
and
mov
push
sbb
je
lcall
cld
or
add
leave
fmul
mov
mov
cmc
mov
dec
pminub
ss
pop
sbb
jle
push
ds
inc
push
ret
ret
lret
and
sub
in
fdiv
out
xor
mov
imul
js
push
fsubr
rcrb
insb
or
mov
into
push
fbld
cmp
adc
aam
pop
mov
in
inc
xor
xchg
mov
sub
test
das
je
addb
sbb
adc
adc
push
add
dec
loopne
dec
cld
dec
push
push
test
sbb
sub
xchg
es
js
push
sbb
sbb
xor
inc
mov
mov
xchg
sbb
xchg
stc
ret
add
or
in
insb
and
dec
adc
movsl
outsb
mov
push
adc
adc
arpl
movsb
xbegin
cld
jne
out
xor
adc
inc
add
jge
add
lret
xor
cltd
fwait
sarb
jmp
jle
xor
add
cmp
or
cmp
arpl
mov
hlt
jecxz
sbb
pop
jge
jl
pop
das
je
push
xchg
push
pop
cmp
push
and
jo
jmp
push
cli
push
pop
mov
cmp
adc
bound
cmc
sub
and
push
js
in
js
test
jne
scas
sub
lds
adc
and
out
xor
loopne
lock
push
mov
or
mov
call
jl
jmp
repnz
sub
sbb
add
popa
jnp
xlat
and
cmp
fs
lea
pop
inc
into
mov
les
les
add
shrl
mov
mov
add
push
push
mov
mov
pop
push
cltd
mov
dec
jne
sub
rcll
or
mov
test
mov
mov
aam
adc
or
fsubs
mov
loopne
jmp
push
push
lods
test
lret
cltd
and
mov
fstl
push
cmc
push
jno
or
or
xchg
call
lret
mov
push
cli
shr
add
push
mov
aam
add
js
fsubrs
xchg
sbb
add
pop
push
gs
mul
inc
lea
jmp
cmp
lds
cmp
and
lret
or
repz
push
dec
adc
jo
sub
jg
pop
aad
mov
push
or
mov
push
jno
push
shld
cld
adc
mov
push
sub
jb
or
or
inc
aam
jle
lods
ljmp
lods
mov
push
xor
xor
pop
mov
sahf
pop
or
cmp
dec
aam
cmpsb
mov
shll
xchg
jo
cmp
sub
pusha
adc
xor
popf
loope,pt
aam
jnp
pop
sbb
call
jbe
pop
push
inc
jecxz
stc
mov
stos
jae
rdmsr
sbb
or
adc
dec
adc
lds
jo
pop
pop
ret
es
ret
adc
out
and
dec
je
adc
mov
and
sub
je
movsb
add
jno
push
jae
lea
enter
in
sbb
enter
rclb
push
xchg
push
mov
jne
xor
mov
push
aam
push
and
loopne
mov
loop
in
loopne
je
push
mov
sti
ds
xor
popa
add
movsl
mov
pop
inc
xchg
lods
dec
jmp
fwait
int3
pop
sub
scas
testl
loop
push
xchg
in
push
sub
lret
je
xchg
mov
into
mov
dec
enter
mov
mov
sti
push
rdpmc
int3
or
in
dec
mov
push
mov
mov
push
cmpsb
push
iret
mov
sbb
inc
adc
flds
les
addr16
lret
push
xchg
out
les
nop
fs
xchg
mov
pop
mov
popf
enter
imul
sbb
lret
jp
fwait
or
movl
loop
push
inc
imul
cmp
xor
es
xchg
insb
push
insb
sub
mov
inc
cmp
lret
out
pop
repnz
xchg
xchg
ds
inc
mov
test
jle
adc
pusha
test
pop
adc
fadds
andb
sub
jle
outsl
leave
dec
int3
adc
mov
sub
xchg
adc
imul
mov
or
gs
rcrb
fwait
add
mov
pop
pop
insb
jp
ret
int
das
lods
pop
mov
xchg
fsubrl
push
sub
push
jmp
jae
bound
add
jne
or
je
jp
mov
jl
add
pop
js
lock
mov
add
jne
mov
clc
pop
push
jne
mov
jo
sub
sub
push
pcmpeqb
pop
add
imul
jns
push
lcall
push
jmp
pop
es
and
pop
enter
pop
cmp
xor
dec
or
and
push
bound
mov
in
pop
jmp
sbb
push
test
data16
pop
rcrb
jbe
dec
push
push
push
or
vcvtss2sd
pushf
aam
xor
inc
mov
out
lea
rolb
dec
xor
je
xor
mov
insb
cmp
or
mov
or
mov
sbb
adc
and
or
movsl
sbb
adc
imul
add
dec
pop
and
jg
add
mov
pop
push
and
aad
adc
push
sub
cmp
push
sub
imul
dec
pop
pop
jnp
in
arpl
aam
pushf
adc
je
inc
inc
jne
mov
dec
jmp
mov
ss
mov
xorb
loopne
ret
bound
add
imul
out
mov
imul
cmp
rclb
movl
aam
int
sarb
out
lods
fs
out
jle
adc
fstp
adc
and
or
cwtl
xor
ljmp
rorb
inc
negl
or
mov
jb
mov
in
lds
mov
add
pop
jbe
into
fsubrl
cwtl
add
xchg
lods
mov
mov
adc
mov
lds
adc
lret
jmp
mov
icebp
stos
mov
pop
adc
lea
xchg
push
jbe
imul
negl
xor
popa
imul
xchg
in
insb
test
mov
fnstenv
mov
or
sub
cmp
or
mov
sbb
addb
push
push
ret
mov
push
pop
adc
sbb
push
sbb
pop
mov
dec
xor
pop
push
inc
sub
sbb
jmp
iret
mov
mov
push
ret
lock
popf
jns
cmpsb
stos
pop
bound
push
cmpsb
ss
in
add
inc
call
cmp
nop
push
mov
xchg
insl
inc
lock
xchg
push
in
mov
jns
adc
out
push
jne
ror
mov
into
adc
sub
data16
pop
and
jb
test
push
popa
pop
addb
add
cmpw
xchg
sub
daa
push
inc
ficoml
lahf
mov
out
nop
cmpsl
lea
sub
ret
xorb
clc
or
pop
shlb
aam
jecxz
into
mov
adc
lock
je
or
arpl
push
and
xchg
or
push
mov
adc
jo
shr
into
push
mov
sarl
pop
shl
loopne
aas
pop
cmp
repz
aas
push
into
inc
mov
test
fwait
and
in
ja
dec
xchg
mov
jns
hlt
out
mov
out
test
mov
xor
jecxz
aam
jmp
es
jecxz
loope
rcr
je
sbbb
hlt
or
jb
xor
sti
addr16
mov
pop
mov
pusha
cld
and
sub
add
pop
sti
push
lcall
push
mov
adc
loopne
sub
adc
call
add
imul
jbe
ljmp
in
mov
cmp
mov
shrl
scas
dec
mov
pop
dec
lahf
insl
pop
dec
insl
in
sbb
push
xlat
pusha
push
cmp
push
sbb
xchg
mov
rcll
adc
xchg
add
loope
xchg
or
cmp
sbb
ss
sbb
push
xlat
ret
fs
adc
icebp
orl
outsb
mov
xor
mov
xor
push
push
pushl
push
out
filds
pop
mov
push
daa
cmp
adc
pushf
test
sarb
push
add
ret
je
dec
je
bound
adc
test
das
popf
mov
xlat
add
mov
sub
sbb
jbe
or
jnp
das
int
xor
add
rorl
add
jbe
cs
push
pop
xchg
fs
or
enter
and
push
sbb
in
and
es
xchg
push
or
push
mov
sub
push
mov
int3
pop
mov
jge
loope
push
into
inc
insb
rolb
lea
add
pop
shll
adc
xor
lock
jmp
and
ficoms
sbb
jb
cld
out
mov
jle
xchg
aas
addr16
xor
add
popf
pop
je
insl
and
adc
lcall
je
stc
icebp
cmpsl
clc
es
test
dec
jecxz
clc
pop
or
pop
mov
push
into
fdivrs
inc
cmp
ret
mov
push
je
loopne
mov
mov
xor
lods
mov
mov
xor
cmpsl
inc
mov
pop
outsb
jne
fimull
leave
mov
xor
in
or
ret
shlb
pop
and
lret
xchg
add
jne
imul
mov
dec
fwait
notl
jmp
cmp
and
addr16
jb
inc
mov
mov
mov
test
dec
test
xor
mov
cmp
add
mov
cmp
stos
add
adc
inc
mov
mov
cmp
lea
mov
ja
or
cwtl
jle
xlat
inc
je
jmp
push
adc
xlat
popa
lcall
jnp
insl
je
push
jno
in
insl
pop
outsl
outsb
popf
push
faddl
mov
xchg
sub
inc
lock
or
lret
cmp
daa
mov
dec
or
into
mov
xor
enter
pushl
cmp
shrb
je
cmp
jg
push
cmp
fmuls
pop
cmp
adc
jmp
cmp
jne
movb
lcall
cli
js
cld
or
add
jmp
xor
mov
or
or
pop
ucomiss
xor
or
inc
mov
es
out
or
xor
jb
push
idiv
pop
push
xchg
ret
ss
lret
clc
lahf
ja
leave
icebp
aas
je
popa
mov
sbb
test
jmp
or
jb
or
push
xchg
popa
jg
sbb
orb
test
jmp
pushf
int
mov
test
inc
in
scas
std
inc
in
sub
lock
inc
push
arpl
les
push
xchg
mov
test
inc
push
mov
sahf
psubsb
mov
or
dec
fidivs
cmp
orb
jg
push
xor
ds
sub
pop
dec
sub
popa
and
in
fcomps
inc
jl
mov
adc
cmp
lret
cmc
or
xor
cmc
inc
xchg
mov
mov
add
rcrb
jae
sub
jl
sarb
push
movsl
test
jae
add
mov
ss
jne
xor
inc
lea
lods
aad
mov
push
xor
aaa
adc
jbe
sub
mov
cwtl
push
rorb
addr16
or
icebp
xor
sti
ret
push
loope
mov
sub
add
push
in
jecxz
xor
add
cmp
pop
mov
mov
outsl
mov
push
push
dec
push
mov
popf
mov
sub
pop
out
sbb
fwait
push
sub
xchg
movsl
push
and
mov
sub
or
div
and
xchg
sbb
push
jbe
push
inc
pop
out
ja
xchg
push
sbb
xchg
push
lret
mov
dec
iret
pop
into
or
dec
pop
adc
mov
ds
cli
pop
lahf
pop
push
dec
jge
movsb
cmp
pop
mov
mov
inc
xor
and
push
or
push
xchg
mov
imul
push
jne
mov
and
add
pop
xor
je
sub
push
jl
cltd
jecxz
mov
push
xor
mov
ds
je
cmp
lods
push
push
fldl
pushf
cs
sbb
push
inc
pop
jmp
mov
repz
add
jns
pop
test
jo
sbb
js
sub
clc
push
je
mov
push
in
xor
jle
nop
and
loopne
pop
and
adc
mov
mov
bound
and
sub
mov
push
scas
mov
xor
mov
loopne
adc
loop
in
out
out
inc
ljmp
xchg
lret
and
sbb
fcoms
sbb
add
pop
rclb
fiadds
jno
adc
rcrb
repnz
adc
cs
popa
faddl
sahf
mov
mov
or
nop
addb
cmp
icebp
int3
push
call
push
fnsave
and
inc
lods
xor
mov
or
aas
addr16
pop
cld
mov
or
jbe
jno
test
mov
cwtl
aad
iret
and
add
dec
mov
int
das
es
or
mov
cmp
sub
or
cmp
mov
sbb
pop
divb
pop
mull
push
push
insb
sub
inc
and
push
xchg
movsb
and
cmp
imul
jne
cmp
ds
and
inc
jl
inc
mov
inc
jmp
inc
cli
repz
loope
jmp
adc
in
loope
je
adc
out
sub
add
or
pop
push
jns
inc
mov
xchg
and
adc
mov
int3
xor
push
sbb
outsl
push
sti
sbb
test
ja
jb
cmp
sub
rcrl
and
fs
adc
lret
std
pusha
addr16
pop
add
pop
jb
add
jae
push
mov
pop
popa
adc
push
jecxz
mov
sub
sbb
sbb
or
or
jae
pop
cmp
sub
pop
sbb
add
adc
xchg
push
push
shlb
and
push
xor
inc
lds
push
push
sub
mov
jno
inc
flds
jbe
dec
dec
popf
inc
xor
leave
mov
lret
or
popf
jo
push
sub
pop
inc
adc
out
dec
imul
pop
sbb
add
into
fs
pop
mov
cmova
pop
loopne
das
cmp
pop
mov
push
sbb
push
popf
adc
clc
test
mov
aas
sbb
stos
cmpsb
or
movsb
add
push
inc
xor
lea
fwait
xor
jmp
mov
and
movl
jb
sbb
sub
pop
lret
jg
push
push
es
loop
test
jns
iret
cltd
sbb
dec
pop
push
push
push
mov
jae
and
or
xchg
insb
jb
push
pop
mov
sbb
push
or
xor
adc
fmuls
dec
adc
fwait
out
push
jp
push
popf
nop
and
aad
ljmp
xchg
in
cmp
add
jl
cli
mov
or
pop
or
pop
out
rol
dec
iret
js
sub
push
dec
rorb
repz
sbb
popa
jae
or
aad
fcoms
ja
sbb
test
add
adc
int
cmp
call
pop
adc
sbb
leave
divb
cmp
cvtps2pi
adc
or
mov
push
ds
jge
xor
pop
cmpsl
sbb
lcall
mov
jns
inc
add
loop
push
fsub
imulb
push
inc
jo
mov
gs
xor
jne
or
xlat
xchg
out
aaa
sub
push
xor
out
adc
outsl
or
xchg
sbb
cmpsl
sub
fcomps
hlt
ljmp
notb
or
jl
jne
int3
mov
test
dec
test
jne
pop
jo
fildll
xor
outsl
ficompl
push
cmpsb
arpl
xadd
repnz
xlat
lret
xor
call
into
xchg
dec
push
out
inc
jne
xor
pop
jae
call
mov
lock
or
or
ret
push
imul
mov
pop
ja
or
jne
cmp
and
jmp
push
dec
xchg
outsb
mov
xchg
ud2
inc
call
fisttps
stos
and
loope
or
jno
cmc
mov
pop
pop
cmp
xchg
decb
pop
mov
dec
fs
insl
leave
stc
mov
loopne
add
adc
ss
lret
add
lar
movsl
push
lods
cmpsb
pop
lea
cltd
sub
sbb
sbb
sbb
icebp
jno
aam
and
je
fisttpll
loop
mov
iret
pusha
loop
xlat
inc
sub
mov
jno
stc
xlat
shlb
sbb
std
mov
or
push
xchg
les
les
push
rep
push
cmp
sbb
aam
pop
push
ljmp
and
jge
xchg
sub
cmp
fnstenv
sbb
movsl
adc
dec
repnz
push
inc
cltd
push
mov
in
lcall
lcall
jne
push
push
clc
push
sbb
fld
fldenv
aam
sbb
lcall
ds
out
ret
push
mov
xchg
inc
aam
addr16
cmp
aaa
push
inc
int
mov
shlb
dec
sbb
lea
jnp
cwtl
daa
lock
stos
jecxz
add
clc
sub
and
out
inc
call
dec
loope
lds
inc
xchg
popf
xlat
adc
add
mov
imul
xor
pop
rol
or
test
pop
xor
cmp
dec
mov
scas
pusha
test
mov
mov
iret
mov
xor
cmp
xor
or
inc
cli
mov
add
mov
pslld
cmp
mov
adc
sub
or
pop
push
rcrb
add
in
adc
out
adc
sub
ja
inc
psrlq
dec
jge
jmp
in
and
push
push
and
inc
imul
cmp
push
movb
ret
push
cli
movb
insb
cltd
sbb
lea
lret
or
push
mov
dec
shlb
in
loop
mov
mov
pop
shll
jne
mov
es
jmp
jbe
jmp
pop
outsl
adc
mov
cmp
lea
les
jne
inc
xor
adc
rorl
xor
movzbl
add
nop
dec
in
add
sub
dec
push
dec
pop
push
push
sbb
test
imul
lods
inc
add
xor
addr16
sarb
jne
sahf
cmp
divb
inc
jae
xchg
dec
jo
jg
pop
mov
mov
and
pop
cmp
adc
push
fbstp
inc
cmpsb
mov
add
push
data16
aam
push
clc
or
add
sbb
jl
out
jmp
push
mov
inc
scas
rcrb
cld
dec
rorl
adc
andl
cmp
sub
sbb
and
pop
andb
pop
inc
push
ret
cmp
cmp
cmp
xchg
pop
rcll
xlat
movl
and
cmpl
sub
mov
gs
fnstsw
ss
mov
cmp
rcrb
cmp
jle
mov
scas
sub
lea
out
mov
insb
ljmp
mov
adc
test
cmpsb
cmp
test
pop
dec
jno
pop
mov
jnp
mov
inc
lea
pushf
and
lock
mov
pop
pop
pop
pop
sub
and
add
lds
fistpll
adc
lcall
lds
mov
inc
cld
cmp
test
jle
push
je,pt
dec
push
jne
push
dec
mov
lcall
ret
pushf
loop
iret
add
pop
sub
std
mov
push
xor
ret
rcl
cmp
jmp
and
mov
pop
inc
and
xchg
xchg
cmp
je
add
or
sbb
mov
inc
test
jnp
jne
cmp
push
out
inc
jl
add
and
sbb
pushw
mov
cmpsb
sub
in
push
scas
popf
mov
lret
push
push
cmp
movsb
cld
sub
nop
lcall
cmp
popf
mov
inc
jns
out
cmp
mov
lods
sub
leave
cmp
xor
pop
push
mov
dec
into
jle
fs
test
mov
movsl
int3
xlat
loopne
jecxz
push
or
test
pop
cli
pop
pop
incb
jo
int3
jbe
rorl
xchg
mov
ds
mov
into
aam
loopne
sbb
out
inc
fdivrl
shr
js
ljmp
iret
sub
icebp
push
push
jns
stos
sbb
push
jae
lock
dec
cmc
mov
mov
outsl
std
fidivl
inc
sub
inc
push
mov
fisubs
dec
cli
push
jnp
push
push
jmp
aas
je
pop
sub
insb
ret
inc
hlt
jmp
das
rcl
pop
cmpsl
icebp
jbe
ret
out
jecxz
lods
rclb
xor
fldenv
movsb
xadd
roll
push
sub
cld
mov
xchg
push
test
arpl
push
adc
push
or
add
test
je
xor
add
mov
jecxz
pop
pushf
and
faddl
lea
inc
push
and
ds
inc
xor
rolb
dec
mov
inc
loopne
mov
test
or
jmp
pop
inc
and
repnz
pushf
clc
jne
or
push
jne
pusha
inc
dec
xchg
push
leave
decb
add
mov
and
inc
andb
and
add
mov
push
mov
or
lds
test
sub
add
push
cmp
jge
cmp
je
sbb
mov
push
dec
add
flds
jl
cmp
jg
mov
test
repz
cmp
jne
mov
into
pop
jge
stos
dec
adc
adc
add
loope
stc
sub
clc
pop
repz
jmp
leave
leave
ds
aad
mov
ss
add
push
mov
sbb
and
add
sub
out
or
mov
jnp
jne
jmp
inc
sub
push
in
icebp
clc
rclb
adc
roll
mov
or
testl
lods
xchg
dec
jmp
mov
inc
lds
push
test
or
xorb
cmp
sub
mov
aaa
in
or
imulb
jo
test
xor
inc
repz
loopne
dec
loopne
inc
inc
loopne
pop
or
nop
push
insl
cltd
movsb
popf
sbb
lcall
inc
loopne
dec
mov
fs
pop
les
outsb
and
pop
daa
push
and
out
aaa
mov
sbb
in
xor
insl
dec
or
cmp
mov
mov
xlat
sub
cs
mov
push
mov
dec
hlt
push
movl
mov
mov
sub
sbb
xor
add
lods
outsb
adc
and
dec
mov
mov
scas
icebp
dec
out
stc
push
sarb
pop
dec
dec
or
loope
mov
mov
pop
test
ret
mov
negb
or
mov
xor
pop
jno
mov
insl
les
push
adc
insl
or
inc
add
insl
loope
ffreep
mov
psubusb
jmp
lock
out
lcall
push
test
sub
ja
push
adc
clc
mov
std
or
inc
or
clc
out
jne
jno
lret
into
xor
inc
mov
pop
add
mov
push
and
ret
int3
add
mov
test
adc
mov
rcrb
push
adc
ja
jle
add
or
rolb
add
pop
test
je
out
cld
sub
xor
decl
andb
int
inc
pop
call
sub
ret
or
cld
sti
mov
lret
pop
in
adc
mov
add
cmp
jbe
xor
jb
test
jmp
add
stc
or
sbb
push
inc
in
mov
add
jb
or
add
enter
pusha
push
cmp
lea
pop
push
nop
mov
jo
add
iret
add
adc
repnz
inc
add
push
or
mov
mov
int3
lods
lea
sub
add
shll
cs
and
sbb
mov
aas
pop
aas
push
sub
add
sbb
adc
or
jecxz
push
orb
inc
in
cmp
call
cmp
lock
iret
hlt
cmp
clc
repz
sar
add
xor
or
lock
insb
loop
call
lock
jae
insb
iret
adcb
pop
in
nop
cmpsl
popf
or
out
adc
mov
jne
add
addr16
cld
jl
and
push
or
ja
loopne
adc
fldenv
nop
push
out
imul
call
nop
clc
mov
inc
out
add
add
jo
add
pop
dec
push
dec
lods
pop
outsb
mov
out
shll
sub
outsb
stos
sub
stos
pop
out
scas
dec
inc
push
pop
mov
pop
mov
movsb
lods
repz
mov
iret
addr16
sbb
jns
sbb
adc
adc
adc
out
sahf
or
or
out
xchg
add
repnz
pop
lock
clc
jecxz
or
sbb
mov
mov
mov
xchg
paddb
fstpt
or
addl
in
or
cmp
subl
sub
jne
mov
cmpsb
xchg
popf
push
push
adc
int
sub
rep
cmp
in
pop
sbb
inc
sub
enter
inc
movsl
pop
xor
cmpl
ja
clc
inc
inc
shll
xor
je
adc
outsb
pop
inc
fiadds
push
mov
cmp
adc
emms
aas
lcall
xor
pusha
dec
clc
add
sub
lea
jo
and
jmp
push
adc
sbb
sti
inc
popw
clc
or
call
ss
push
inc
push
jmp
mov
sbb
xchg
mov
sbb
arpl
mov
jg
jp
push
jb
jo
ret
je
mov
mov
jnp
es
mov
or
out
add
bound
and
jle
or
addr16
mov
ds
sbb
or
fisttpll
push
push
pop
push
and
jg
jo
fstpl
and
push
sbb
xchg
sub
mov
pop
and
pop
push
mov
jo
push
dec
mov
pop
bound
or
add
iret
push
jle
or
jmp
push
inc
adc
adc
fisttps
loopne
jne
aas
pop
clc
loopne
test
jne,pn
or
ds
adc
mov
sbb
outsb
or
dec
xchg
add
mov
movsb
in
cmpsb
in
popa
repz
or
sbb
movl
mov
cmp
aas
jae
jg
push
mov
daa
pushf
mov
pushf
mov
add
hlt
fstcw
fwait
cbtw
push
xor
flds
hlt
mov
or
stos
inc
cmp
sub
ljmp
or
jg
xor
test
ret
out
mov
and
mov
std
test
jmp
pop
push
add
add
xchg
mov
cmc
push
icebp
adc
add
or
xor
push
push
stos
xor
insb
int3
clc
jae
mov
xor
add
sub
imul
dec
cs
fcoms
add
push
add
mov
loopne
add
lds
movsb
enter
lods
mov
in
inc
push
mov
ficompl
or
loopne
bound
test
xchg
push
mov
mull
rcrl
cld
push
test
popa
jnp
or
pushf
pop
cli
cmpl
xor
les
mov
mov
xchg
dec
sub
add
inc
and
add
jne
cmp
push
mov
or
fadd
fcomps
loope
mov
rclb
inc
aam
addr16
pop
or
addr16
jmp
jmp
sub
pop
imul
lret
mov
aam
dec
dec
cli
adc
pop
rcr
lret
repnz
mov
inc
and
insb
pusha
stos
pop
jmp
mov
push
lcall
mov
add
arpl
cmpb
pop
push
mov
imul
arpl
in
dec
add
push
enter
sub
ja
pop
pop
dec
xchg
scas
cs
xor
push
push
cmp
and
xchg
mov
dec
orl
loopne
add
jle
push
mov
divl
inc
jge
mov
cs
mov
add
inc
add
add
lock
inc
faddl
testl
aaa
push
push
push
push
pusha
es
ss
inc
xchg
movsl
movsb
dec
lds
add
pmullw
movsl
jno
add
rclb
push
push
push
cmp
mov
das
sahf
sbb
pop
and
sub
lea
mov
mov
loope
dec
pop
or
mov
adc
push
mov
or
call
jmp
fs
pop
mov
mov
mov
cmpl
push
mov
push
or
cmp
and
fwait
jo
push
mov
or
jmp
add
mov
or
pop
addr16
sub
cmp
pop
push
lcall
or
push
fidivs
inc
sub
and
sub
cmpsb
std
mov
push
int
cltd
enter
rol
js
dec
aas
or
jbe
push
mov
mov
jnp
mov
jo
push
movl
out
mov
jnp
and
cs
push
pop
cmp
xor
sub
and
sbb
repz
aad
fcmovu
or
push
jl
nop
mov
cmpxchg
popa
mov
add
out
push
mov
sub
std
int
outsl
maskmovq
negl
movsb
lret
push
lods
add
out
sahf
aam
out
btc
adc
bound
add
btl
test
sbb
push
sti
enter
mov
or
sbb
sub
mov
fdivs
or
push
push
bound
sub
inc
jne
ret
js
sub
sbb
stc
add
inc
imul
mov
add
push
and
push
scas
loopne
dec
ret
push
xchg
dec
test
or
in
mov
or
or
mov
je
into
aas
or
push
test
mov
inc
mov
push
mov
or
jb
mov
pop
jp
cmp
into
inc
pop
ds
cmp
or
iret
dec
leave
outsl
xor
or
or
in
or
test
fnstcw
jmp
mov
inc
or
add
mov
inc
dec
je
jl
jmp
xor
mov
in
or
and
xrelease
pop
pop
sbb
jae
lret
pop
adc
pop
lds
shlb
mov
cld
mov
test
ret
adc
pop
aad
popf
les
test
xor
mov
mov
jae
cwtl
inc
adc
in
orl
je
xor
stos
mov
add
or
repnz
inc
sbb
dec
push
mov
sub
or
cmp
xor
cwtl
mov
push
cld
mov
sub
mov
push
imul
xor
push
sub
xorl
sub
or
jecxz
push
and
adc
dec
push
cmp
xchg
out
sbb
push
mov
repnz
out
icebp
cmp
cs
jle
stc
je
std
sahf
sub
push
ja
or
sbb
push
jbe
loop
rcr
push
pushf
hlt
push
dec
or
pop
rcrb
clc
mov
mov
add
or
pop
mov
std
inc
andb
mov
or
clc
adc
mov
test
dec
mov
in
mov
cli
mov
loop
push
sbb
adc
cmp
adc
lods
loopne
sub
test
in
pop
push
mov
or
and
push
ret
pushf
repnz
fsubrl
pusha
cmp
add
or
jne
or
ret
or
adc
adc
inc
mov
sbb
adc
int
lods
aad
add
sbb
jne
dec
enter
or
pop
lret
ret
adcl
jmp
adc
inc
test
into
pop
xor
ror
ror
in
fwait
dec
pusha
sbb
pop
dec
inc
fidivrs
insl
loopne
dec
mov
mov
dec
cmpl
add
movzbl
mov
ret
ret
lahf
cmp
inc
mov
mov
inc
or
xchg
dec
addb
jmp
rclb
sub
int3
sub
rorb
xor
mov
adc
inc
das
or
add
addl
shlb
add
addl
add
fstps
inc
mov
mov
dec
fiadds
push
or
mov
or
inc
fs
fiadds
jmp
test
je
push
push
mov
pop
scas
fnsave
adc
jge
mov
xor
addr16
shrb
scas
mov
push
das
add
and
mov
xchg
add
rep
push
pop
cwtl
jne
pop
add
and
add
shl
lea
ljmp
popa
addb
test
mov
daa
lock
pop
pusha
sub
jecxz
inc
out
das
add
test
je
pop
pop
or
inc
jmp
mov
and
push
mov
out
and
pop
shl
test
rcrl
add
push
or
ret
rorl
ret
pop
xchg
orb
movsb
and
fadds
insl
jae
sti
fadd
imul
cmpsl
ja
je
mov
inc
pop
cmp
test
aaa
push
mov
in
or
push
pusha
push
shl
pop
push
or
pusha
rorl
cmp
icebp
pushl
sbb
xor
mov
jne
inc
and
dec
sbbb
out
inc
xorb
jbe
fsubl
fdivs
leave
out
cmp
je
daa
in
aaa
out
jns
adc
push
aam
xchg
sub
aaa
repz
std
jecxz
movsl
mov
out
cli
cltd
sbb
jg
fidivs
or
push
push
xchg
sub
js
mov
add
inc
mov
jmp
movsl
test
xchg
push
les
or
lock
repz
pop
ret
push
cmp
lock
mov
adc
sbb
imul
test
cmp
inc
sub
or
add
mov
pop
pop
pop
loope
adc
pop
daa
lea
add
int3
sub
and
roll
inc
add
sbb
jo
je
sub
mov
icebp
xor
ret
pop
or
lea
or
and
add
aam
push
inc
out
mov
ficoms
xor
push
mov
adc
pop
mov
sbb
scas
jge
pushf
sbb
sub
test
loopne
insb
sub
pop
and
adc
div
add
sbb
jmp
jne
adc
dec
fs
sbb
sbb
or
popf
and
int3
movsb
and
jb
cmp
ss
adc
sub
sub
add
jno
add
pusha
push
cmp
jb
scas
jl
adc
addr16
cmp
xor
push
mov
out
pop
jg
aaa
sub
mov
xchg
adc
add
scas
adc
pop
aad
xor
adc
dec
in
and
adc
sub
loopne,pt
or
in
out
sub
jmp
push
and
dec
pop
adc
jge
divb
adc
push
xchg
imul
ja
fs
xchg
scas
pop
lds
push
icebp
mov
bound
mov
ss
add
and
pop
inc
or
dec
cmp
sbb
cli
sbb
jae,pn
fsts
inc
jo
and
push
adc
out
dec
jns
and
jns
inc
mov
lahf
push
and
add
mov
or
inc
repz
std
dec
pop
psllw
mov
cmp
cwtl
push
xlat
loop
or
jne
or
gs
adcl
or
divb
mov
repnz
aad
mov
mov
jge
mov
mov
in
add
mov
shr
cltd
sub
call
mov
fldenv
inc
jmp
push
hlt
gs
add
add
in
push
xor
inc
insb
xor
xchg
lea
imul
adc
sbb
jae
les
out
or
and
add
jmp
lret
and
push
push
das
push
inc
stos
je
inc
lds
sub
fiaddl
clc
mov
push
jno
mov
push
test
cmp
and
icebp
push
fdivl
jns
shll
jmp
bound
jb
or
pop
sbb
imul
or
jmp
imul
imul
cmp
daa
scas
fldcw
xor
pop
leave
add
movb
or
cmp
push
test
sub
fistpll
pop
cld
pop
jle
inc
mov
push
cmp
sub
xor
shll
fcomps
push
jp
jge
mov
and
sub
outsb
add
inc
sub
imul
or
mov
cmpl
fdivrs
sti
xor
sti
inc
push
hlt
push
sub
or
jb
rol
sub
sub
mov
ss
cs
mov
movsl
pop
sub
push
std
mov
das
and
in
sub
inc
mov
enter
or
jno
mul
ret
push
add
testl
and
sbb
rolb
insl
aad
mov
jo
enter
test
sub
lret
add
or
int3
jns
jmp
lcall
sub
or
addr16
jg
adc
negl
sbb
rorl
jmp
mov
xchg
cmp
fucom
adc
shr
rcr
shr
add
fmuls
leave
jne
div
cs
popf
pop
sbb
rcrb
mul
add
shll
cmp
xorl
sub
dec
ret
jecxz
pop
mov
outsl
mov
dec
outsb
fstl
outsb
je
push
icebp
cmp
adc
neg
adc
adc
add
adc
or
push
or
pushf
pop
sub
jae
or
mov
or
add
outsl
push
push
mov
inc
mov
out
sub
fadds
pop
adc
icebp
in
push
cmp
sbb
mov
aas
dec
es
adc
fsubrs
sahf
inc
add
mov
fcmovne
icebp
mov
sbb
sbb
fcos
aam
sub
cmpsb
jl
push
mov
mov
or
sub
fidivl
jb
rolb
or
add
add
sub
mov
sbb
fs
mov
dec
inc
mov
inc
mov
and
je
push
stos
fwait
and
sub
push
push
je
mov
nop
rcll
or
cltd
jns
aaa
adc
iret
or
push
push
rol
int3
sub
repnz
sub
xlat
sarl
xor
mov
cmp
push
jne
inc
inc
dec
into
xchg
or
mov
cmp
jne
mov
add
or
sbb
call
sbb
and
sub
cmpsl
cltd
bound
cld
mov
cmc
xor
adc
cs
popf
push
sbb
lcall
mov
mov
or
lret
arpl
sbb
out
jne
arpl
adc
sbb
sbbl
cs
pop
int3
popf
cmpsl
and
arpl
or
cmp
shlb
ja
pop
mov
push
mov
ret
jmp
orl
inc
jmp
or
lock
dec
adc
sub
mov
or
mov
and
mov
bound
fmuls
and
cmp
jp
mov
popa
xor
mov
or
add
mov
cmp
ret
pop
fsts
or
pop
mov
dec
adc
add
jne
sub
jne
pop
into
add
pusha
rcrl
inc
mov
sbb
adc
mov
repz
lret
sub
addr16
push
or
sub
and
sub
mov
jmp
jae
mov
in
or
mov
jb
cltd
mov
lret
inc
add
or
ret
icebp
inc
xor
data16
cmp
mov
mov
dec
cld
enter
rorl
pop
cs
shll
jmp
dec
adc
inc
mov
test
add
enter
or
sbb
or
jne
xchg
sbbb
daa
idivb
and
int3
sub
pop
adc
subb
neg
sbb
neg
add
leave
sahf
int3
pop
pop
add
das
add
inc
sahf
lea
add
mov
fwait
or
and
int3
pop
lock
pushf
es
push
addb
cmp
int3
iret
or
cmp
cmp
out
mov
cmp
mov
mov
insl
and
jns
sbb
ret
data16
jno
add
and
xchg
addr16
mov
out
push
pop
mov
cmpsb
xchg
lcall
jns
lock
sbb
leave
mov
push
js
mov
push
imul
xchg
mov
pop
mov
movl
sub
sub
push
mov
fsubrl
mov
sub
pop
decb
cmp
pop
jge
cmp
fs
dec
arpl
imul
mov
jmp
mov
insb
clc
pushf
and
add
or
mov
mov
mov
push
add
add
rorb
cld
push
add
out
push
les
cmp
jns
or
xchg
sub
or
ss
cmpsl
push
pusha
cmp
or
xchg
adc
inc
data16
rcl
clc
dec
out
int
add
jl
iret
and
push
mov
pop
adc
mov
cmp
jbe
xor
pusha
pusha
xor
sbb
cmpb
aaa
mov
adc
inc
inc
cwtl
cmp
pushf
or
lods
or
mov
push
push
jno
shrl
test
inc
test
sub
in
sahf
xlat
cmp
outsl
lea
pushf
je
xchg
cs
sbb
cmp
sahf
sbb
add
and
int
rcrl
push
sub
cmp
pop
loopne
das
jmp
scas
lods
inc
pop
mov
js
sbb
shl
or
xchg
adc
mov
adc
or
add
shrb
xor
cmp
lcall
sbb
add
pop
test
popf
popa
out
add
mov
cmp
pop
mov
and
dec
leave
xor
movsb
sbb
cmp
sbb
sbb
test
scas
push
add
jb
mov
xchg
or
out
add
pop
inc
shr
push
sub
pop
push
push
loopne
fistpl
jne
xchg
popf
xchg
push
stos
jae
or
mov
gs
push
cmp
push
add
and
dec
sbb
xchg
add
out
data16
je
inc
inc
aam
pop
lds
pop
in
les
adc
mov
mov
adc
mov
cwtl
mov
or
pop
je
into
mov
lea
dec
add
inc
daa
jg
iret
mov
sub
shlb
jae
icebp
push
dec
dec
adc
dec
fcoms
and
aad
test
jno
and
dec
cmp
xor
fsts
adc
jge,pn
das
and
adc
es
aad
cld
push
loopne
and
or
cmp
adc
pop
imul
push
in
pop
dec
sarb
cld
inc
es
inc
cmpsb
addl
mov
test
push
sarl
and
scas
lret
int
mov
jb
repz
mov
fs
cmp
pushl
add
dec
not
mov
fs
jmp
enter
stos
sbb
shll
mov
sbb
or
sbb
mov
sub
rcr
scas
jb
xor
xor
and
insb
jmp
adc
adc
les
mov
cltd
jns
adc
sbb
mov
lds
jle
pop
scas
push
int3
pusha
addr16
popa
push
push
push
jo
mov
inc
push
add
pop
pop
pop
xchg
sub
xchg
daa
mov
aam
adc
push
and
fmull
add
or
inc
call
pop
xor
pop
lcall
insl
or
jmp
sti
sub
icebp
dec
mov
adc
or
ret
jl
pop
ret
push
push
adc
inc
imul
sbb
shlb
imul
jae
pushf
xor
push
insl
sti
shll
cwtl
loop
mov
or
sbb
test
les
shl
mov
call
xor
push
xchg
dec
leave
rol
inc
ret
dec
adc
sahf
das
out
and
pop
and
cli
xchg
je
das
imul
pushl
ss
inc
inc
xchg
repnz
jb
pop
notb
xor
mov
cmp
mov
mov
and
inc
mov
pop
mov
dec
fwait
cmp
clc
dec
cmpl
add
add
sub
pop
jno
daa
gs
inc
dec
aaa
inc
add
mov
push
push
sbb
or
pop
push
xchg
cwtl
iret
fcmove
hlt
jmp
sbb
pop
mov
sbb
int3
inc
insb
push
es
pop
pusha
mov
adc
sub
ss
pop
sarb
push
dec
mov
push
mov
lock
adc
dec
pop
popa
repnz
cmp
xchg
or
dec
sbb
sbb
mov
sub
dec
jp
push
add
lahf
add
sbb
js
adc
mov
insb
loope
jb
jne
jb
outsl
inc
xor
sub
xor
nop
shrl
xor
nop
mov
xor
lea
rcrb
adc
jl
cmp
jg
add
and
pop
in
inc
test
ds
push
cmp
stos
pop
xchg
or
test
dec
mov
fs
or
fisttpl
dec
adc
pop
iret
add
push
jns
push
push
addl
ret
je
push
adc
inc
data16
pop
push
add
mov
jmp
cmp
adc
inc
xchg
movsb
or
movsb
mov
cltd
imul
andb
pop
inc
mov
add
rorb
lret
cmp
test
ret
mov
loop
outsb
cmpsl
out
mov
pop
push
dec
dec
adc
fdiv
mov
repnz
dec
iret
xchg
pop
int
aam
test
sub
hlt
ror
pop
cmp
in
fsubs
andl
and
xor
dec
cmp
jecxz
faddl
mov
push
mov
cmp
imul
or
cs
add
jb
int
adc
call
popa
pop
dec
or
mov
sub
fadds
and
or
out
mov
imul
mov
lock
push
dec
into
mov
test
rcrb
adc
lea
xor
cld
fs
test
push
movsl
add
sar
dec
sbbl
aas
jbe
ja
pop
mov
add
dec
orl
pop
in
add
dec
add
add
shll
pop
mov
jne
andl
lea
mov
push
pop
pushf
mov
and
inc
pop
movsb
jp
mov
push
cwtl
mov
add
dec
hlt
mov
xchg
xchg
mov
push
or
jg
pop
addr16
xchg
xchg
hlt
mov
jmp
sub
adc
sbb
cmp
jbe
ljmp
fldl
or
adc
arpl
sub
jno
jo
inc
xorl
mov
out
not
and
dec
add
inc
es
add
jmp
lea
fistpl
mov
mov
mov
pop
push
cmpsl
inc
cmp
or
mov
movl
hlt
into
xchg
mov
push
or
sbbl
jno
pop
ja
sub
faddl
pop
cmp
jne
pusha
mov
pop
push
mov
dec
nop
jecxz
jae
bound
pop
icebp
jne
sbb
insl
push
inc
lods
add
mov
adc
je
mov
into
ret
test
mov
addb
inc
xor
or
or
imul
pop
or
xor
rorl
add
popa
push
addb
shl
push
push
das
call
pop
cmp
jle
push
or
push
fistpll
addl
insb
push
push
ret
dec
inc
lock
sbb
push
pusha
add
adc
cmpl
adc
rcrl
sbb
mov
loop
adc
mov
repz
loopne
ret
sub
enter
push
in
push
lea
push
incl
inc
or
add
adc
adc
fistl
and
rcrl
arpl
xor
gs
lea
shll
loope
cmp
sar
add
cmp
jge
xorl
decl
push
int3
mov
test
pushf
inc
imulb
shr
push
into
negl
addr16
xchg
or
cmp
mov
pop
and
and
decb
iret
jne
add
push
cmp
or
jb
pop
xorb
fidivrl
fdivs
sub
out
jne,pn
and
jae
sbb
aas
mov
in
shll
es
or
out
push
cmp
test
sbb
je
loope
ja
pop
pusha
pop
adc
test
cmp
js
jbe
in
mov
mov
cli
mov
push
cld
mov
mov
insl
nop
inc
test
aaa
pop
mov
sub
adc
lcall
or
add
jne
mov
cld
aam
xor
pop
and
add
mov
pusha
mov
dec
push
into
lods
cmp
pushw
and
iret
add
loope
jmp
pop
mov
push
pop
stc
inc
or
push
and
rolb
incb
or
out
add
dec
mov
dec
or
decl
iret
enter
jl
popf
push
shl
and
inc
mov
or
pcmpeqw
pushf
dec
or
and
jmp
leave
dec
outsb
adc
sub
xchg
ficompl
sub
lods
cwtl
std
sub
test
mov
push
or
pop
mov
jne
or
bound
or
jl
mov
mov
push
mov
pushf
add
fs
or
sub
insb
xchg
pop
or
mov
jno
mov
shr
or
or
scas
jmp
mov
dec
loopne
fisubrs
push
jnp
test
and
leave
and
mov
or
xor
pusha
xchg
lock
mov
add
xor
lahf
int3
shl
and
jne
cmp
enter
mov
loopne
mov
lea
add
fildl
ret
or
jbe
jne
lea
dec
push
sbb
sbb
dec
daa
loope
je
mov
cmp
push
ret
or
inc
xor
repz
mov
adc
roll
and
adc
out
cmp
pusha
lds
add
mov
test
std
push
sbb
push
fidivl
jno
push
inc
or
dec
loopne
int
xchg
imul
clc
xor
addb
inc
or
pop
fwait
shlb
dec
push
sub
test
shl
and
lcall
add
lea
psubd
lea
ja
sbb
xorl
in
lock
movl
push
xchg
shlb
movl
mov
lock
shll
push
or
clc
pop
push
cs
es
mov
or
or
inc
or
inc
ss
or
test
sarb
inc
jne
or
js
mov
not
and
add
cmp
fcomps
jo
sub
jmp
ljmp
dec
cld
dec
cmp
test
pop
cmp
aaa
xchg
xor
sbb
and
add
add
cmp
jg
shl
lock
cmp
pop
mov
jecxz
loop
mov
push
gs
arpl
nop
sub
and
mov
hlt
ret
in
mov
movsl
sbb
into
add
mov
and
incl
bound
pop
pushl
jo
hlt
lea
sbb
mov
or
add
or
or
cmp
pop
pushl
adc
cmp
iret
iret
shl
cmp
jmp
and
inc
xchg
test
movsb
cmp
cmp
inc
inc
xor
test
lea
jno
adc
or
jnp
insb
insl
jnp
mov
lea
cld
or
sub
mov
pop
xor
call
xlat
lea
xchg
sub
cld
scas
add
jbe
and
dec
shlb
cmp
je
push
jns
push
mov
popf
dec
les
fnsave
jbe
jns
jecxz
mov
cwtl
int3
jg
cmc
inc
pop
jp
mov
jnp
pop
mov
dec
dec
jo
or
pop
imul
lods
inc
push
fldenv
call
cmp
popa
sbb
in
mov
cmp
pop
adc
cwtl
dec
sbb
insl
fs
xchg
or
mov
mov
sbb
pop
cli
push
push
bound
shlb
outsl
jno
push
xor
pop
add
mov
sbb
pop
cmp
sub
push
jno
cmp
mov
cmp
sbb
icebp
rorb
mov
mov
or
mov
push
xchg
lea
inc
adc
mov
dec
sbb
jle
adc
icebp
inc
push
add
cmp
setge
add
rorl
mov
popf
nopl
stos
jl
jecxz
pop
in
fs
jo
add
cmp
clc
jae
orb
inc
addb
lds
mov
or
data16
mov
cmp
push
je
and
loop
pop
pop
dec
pop
mov
je
adcl
add
inc
pop
and
pop
inc
in
mov
test
cs
xchg
inc
xchg
sub
in
jns
lea
or
push
lock
push
sub
cmp
les
add
jns
add
inc
lods
adcl
arpl
lret
xchg
adc
int3
fs
or
jmp
inc
sub
test
fstpt
movsb
and
dec
mov
je
sub
jns
pushl
nop
roll
and
out
or
push
mov
lret
out
pop
jne
iret
add
mov
je
inc
mov
jns
mov
xchg
mov
lret
or
add
adc
mov
xor
out
test
jne
arpl
inc
pop
or
cmp
jb
popf
dec
fmuls
jmp
dec
mov
push
push
mov
inc
or
xchg
je
nop
loop
sub
push
stc
or
push
enter
or
mov
add
addl
push
and
popf
loope
es
dec
and
sub
mov
push
shll
jle
fsubrs
jb
xchg
mov
sbb
or
ret
jo
jae
mov
int
cmp
jl
cmp
jbe
adc
xchg
rcrl
ret
cli
inc
mov
in
aaa
jb
enter
sbb
aam
test
inc
or
es
push
jl
dec
adcl
push
pop
fisttpll
es
dec
cmpl
cmp
jge
jb
inc
ret
fdivs
push
jle
mov
sub
lret
mov
orb
jg
out
test
aas
xchg
rcll
add
jmp
sbb
repz
sub
testl
add
push
inc
dec
add
adc
ljmp
out
rorb
arpl
shll
push
in
mov
push
ss
cmpsb
and
pop
cmpsb
mov
jle
mov
mov
push
orb
or
es
mov
adc
inc
ficompl
imul
cmp
ss
cmp
jae
mov
lds
repnz
inc
sub
xchg
mov
sub
or
sub
sub
xchg
xor
sbb
xor
pop
mov
push
sbb
jne
insb
in
jne
imul
and
shrl
push
sbb
bound
mov
or
xor
cmpsl
enter
xor
add
mov
movsl
add
add
sub
int
andl
sub
mov
cmp
jno
cmpsb
add
shlb
push
add
jae
add
xor
cmp
dec
pop
shl
add
inc
sub
notl
jae
cmp
adc
mov
cmp
xor
jmp
lds
jne
jae
lea
lock
mov
push
pusha
xor
jae
sub
jb
pop
mov
mov
loope
sbb
sub
mov
pop
sub
cwtl
jno
xor
fsubs
ret
adc
inc
push
out
jmp
pusha
popa
rolb
sub
cmpsl
aaa
jl
jns
inc
jp
adc
imul
inc
xor
xchg
and
sub
inc
and
push
stos
imul
clc
or
rolb
lea
jbe
roll
add
or
pusha
jae
adc
adcl
jb
rclb
mov
push
hlt
hlt
test
pushf
and
mov
cmp
ja
stos
mov
daa
sub
lock
push
mov
xor
push
pusha
gs
cmpb
pop
fadds
mov
jns
inc
ret
into
jne
push
push
test
add
fstpl
add
push
out
xor
stc
push
movsl
cmp
xor
pop
inc
ret
popf
ret
inc
mov
js
jecxz
or
shrd
pop
inc
and
inc
sbb
icebp
sahf
and
addl
push
push
data16
adc
mov
or
jne
mov
fstpl
or
aam
out
or
movl
cmc
rcll
mov
dec
mov
rcr
xor
add
or
push
or
dec
adc
sub
adc
xor
pop
push
or
adc
add
xchg
and
lret
aam
jl
repz
test
clc
or
nop
lds
pop
std
les
push
mov
add
not
and
addl
out
shl
or
push
mov
or
inc
lret
sbb
sbb
notl
jge
mov
jmp
incl
shr
and
mov
lods
add
push
pop
add
imul
dec
or
sub
or
test
cmpsl
xchg
add
jns
test
push
push
pushf
std
loopne
push
mov
sbb
and
cmp
or
xchg
and
loop
or
inc
cmp
je
cwtl
cmpsl
jmp
or
jo
lret
mov
and
cmp
cmp
add
and
jmp
ret
out
leave
bound
leave
mov
scas
xchg
into
mov
sub
add
lcall
fdivrs
and
in
or
push
fstpl
fstps
push
fsts
bound
into
and
test
pop
mov
inc
mov
flds
push
xor
lock
inc
or
decb
cmp
cmp
add
div
add
sbb
cmpsb
mov
mov
ret
add
dec
jne
add
sbb
and
es
sub
push
add
add
and
mov
cwtl
add
sub
xor
adc
xor
and
shll
jmp
js
add
inc
fstpl
and
push
push
popf
out
lret
mov
add
adc
pop
arpl
mov
push
mov
test
add
sbb
imul
push
shl
sbb
jo
or
adc
and
aam
inc
push
cmp
pop
or
sub
sbb
fldl
fcompl
fldl
sbb
ja
add
loopne
pop
hlt
xor
jmp
outsb
pop
ficomps
sub
or
cmp
into
inc
mov
cmp
fistps
outsl
mov
inc
test
pop
into
sbb
jp
push
je
lret
test
add
cmp
and
rclb
cmp
cmp
push
mov
jb
lea
cli
addr16
or
sti
add
gs
js
jmp
mov
cmp
in
shlb
cli
and
or
sbb
mov
enter
lcall
cltd
adc
hlt
pusha
or
orb
or
dec
sub
xor
ja
push
mov
sub
or
insl
gs
mov
mov
jb
adc
roll
aam
out
sar
pop
pop
adc
and
ja
stos
xchg
bound
in
popa
push
xchg
test
test
inc
jb
lcall
sbb
scas
loop
sub
cltd
mov
ficompl
movsb
lret
add
rcrl
inc
pop
or
aad
pusha
ljmp
popf
sbb
popf
pop
lods
push
jo
jg
inc
push
pop
ret
or
leave
mov
lds
fdivl
pop
sbb
inc
dec
cmp
lods
pop
add
fs
ret
mov
jp
add
add
test
jmp
shrb
test
pop
or
pop
ret
mov
pop
mov
or
cld
ss
les
je
xor
jno
add
or
jo
or
cmpsl
xchg
sub
loopne
lock
or
cmp
sahf
test
cmp
pushl
sub
xor
jg
mov
data16
fistl
mov
pop
pop
push
stc
mov
ret
pop
mov
adc
andb
sahf
sub
push
sub
lahf
xor
popl
pusha
push
push
cmp
push
inc
jbe
je
jno
push
imul
mov
or
imulb
adc
or
or
inc
adcl
dec
jmp
mov
lcall
int
daa
jne
lds
arpl
push
insl
jecxz
or
and
lock
pop
sbb
fstsw
lret
sbb
ds
mov
or
add
enter
or
dec
cld
or
jae
cld
jecxz
sbb
std
pusha
scas
or
sub
fistpl
fwait
push
xlat
repz
sbbb
xchg
insb
adc
roll
jo
call
fmuls
jmp
xchg
xorb
cmp
scas
aaa
pop
pop
std
mov
in
sbb
xchg
lock
fmull
add
or
les
call
cmp
mov
test
pop
sub
pop
adc
or
pop
mov
and
decb
mov
xor
and
mov
fbld
je
inc
test
fsub
sbb
push
lret
aam
or
xor
push
inc
mov
mov
sub
roll
repz
aam
xchg
or
cmp
incl
mov
inc
in
hlt
sahf
adc
cmp
add
mov
mov
jbe
dec
cmpb
je
cmp
mov
inc
pop
jg
mov
imulb
sbb
sbb
pop
mov
pop
in
sbb
sti
lods
daa
shlb
inc
inc
test
lods
rol
movsl
push
mov
adc
and
lret
jo
sub
or
ret
pusha
aad
setg
rcll
cmp
add
push
rorl
mov
incl
loope
roll
xor
popl
push
ret
ds
xor
cmp
inc
add
mov
sahf
jnp
idivb
movb
inc
mov
jle
pushf
or
xor
inc
enter
or
or
loope
cmp
enter
inc
pop
sbb
enter
add
mov
xor
add
pop
add
jns
negl
adc
fs
xor
mov
push
mov
mov
mul
dec
and
add
sbb
xchg
mov
pop
dec
dec
xor
jne
into
xchg
fisttpll
mov
xor
fsubr
xor
scas
or
es
xchg
inc
jmp
or
lds
add
popa
jp
inc
xor
lea
add
jg
push
push
pop
pop
add
pop
xor
xor
add
pushf
sbb
mov
adc
pop
push
jp
inc
pop
ret
sub
scas
xor
fisubrs
jl
mov
sub
push
push
xchg
iret
int3
adc
repnz
scas
or
test
mov
insb
mov
or
push
push
cmp
push
mov
push
mov
or
dec
je
pop
cmp
add
pushf
rorl
and
sub
cld
mov
popa
and
mov
mov
stc
and
push
mov
xor
xchg
push
mov
adc
mov
sub
movsb
mulb
inc
push
movb
mov
and
mov
push
test
and
lds
fildl
sub
and
sub
jne
hlt
adc
adc
sti
sahf
jns
out
push
pop
xchg
sbb
sbb
push
or
push
paddb
or
je
inc
xchg
out
sbb
push
mov
cmp
inc
je
je
fs
test
add
movsl
outsl
mov
or
adc
cld
ds
push
push
sbb
add
cmp
insl
loopne
xchg
push
sbb
int
insb
sbb
and
push
lret
cmp
cmp
inc
cltd
or
mov
pop
out
add
and
notl
nop
push
xor
imul
ret
inc
push
or
lock
add
cmp
jl
test
jg
ret
jne
jle
pushf
push
inc
cmp
jb
dec
push
push
imul
pop
mov
sbb
das
adc
stc
push
rolb
add
adc
or
fcompl
push
cmp
dec
sbb
call
insl
loop
in
dec
mov
out
mov
cmp
cmp
cmp
jg
lds
cmpsb
into
arpl
or
jb
xor
pushf
push
dec
jbe
dec
aaa
fmuls
xchg
lahf
insb
negl
push
call
fs
loope
adc
or
pop
xor
ret
and
and
cmpsb
sbb
xchg
mov
sub
inc
leave
inc
add
add
and
or
xchg
and
adc
mov
lahf
inc
ret
xchg
notl
sub
inc
imul
xor
xor
and
inc
jae
in
jns
push
mov
sar
dec
cmp
sbb
jnp
jg
ljmp
insb
rcrl
push
xor
xorb
pop
mov
push
add
imul
jmp
jmp
test
sbb
sub
js
and
in
mov
rorl
xchg
les
mov
stc
jne
mulb
push
add
or
pop
and
mov
mov
test
mov
loope
or
inc
add
lret
fwait
add
sbb
repnz
fldl
or
jo
je
mov
cmp
push
sub
push
inc
lock
mov
jne
push
xchg
xchg
jmp
add
inc
xchg
lcall
jmp
pop
xor
pop
add
cmpsb
mov
and
and
dec
mov
and
jo
movsb
xor
sbb
adc
xor
push
sub
xchg
popa
add
inc
sub
jno
add
out
rcrl
ret
jb
ss
push
int
stos
add
sub
mov
sbb
xchg
sub
loop
dec
lds
scas
jge,pn
inc
sbb
cmpsb
aaa
xor
addl
mov
pushf
or
inc
fchs
push
push
sub
fisttps
adc
pop
cld
mov
sbb
dec
mov
xchg
aam
pop
cmp
icebp
add
sub
arpl
xchg
aaa
mov
aad
pop
pop
test
inc
in
xchg
jmp
xchg
je
out
test
data16
mov
mov
mov
push
daa
enter
and
sub
pop
cmp
cltd
into
ret
je
jae
dec
push
fwait
cli
outsb
jmp
fdivs
cmpl
adc
outsb
xchg
cwtl
stos
fs
push
imul
imul
adc
pusha
or
jl
and
inc
testb
filds
push
lds
mov
push
xor
jp
movsb
rolb
add
imul
sbb
adc
dec
xchg
push
add
xor
push
mov
dec
jae
in
add
jecxz
into
mull
and
mov
inc
mov
mov
mov
xchg
test
sbb
test
jne
cmp
mov
je
ja
xor
popf
pushf
push
push
pop
mov
imul
je
xor
sahf
push
add
cltd
rolb
mull
mov
fidivrl
sbb
ret
mov
xchg
push
repnz
jp
js
test
cltd
xchg
inc
ret
stos
je
ss
jns
adc
push
push
pushl
pushf
push
sbb
shll
xchg
sarb
xor
inc
sbb
push
pusha
cmp
test
xor
sbb
rcrb
lret
pop
fwait
mov
sub
idivb
out
insl
pushf
jp
imul
mov
add
jmp
stc
movsb
repz
mov
mov
pop
pop
popa
mov
or
loope
incl
mov
push
lea
sub
push
rorb
jb
pop
mov
cmp
test
pop
or
cmp
sub
sbb
push
gs
pop
adc
lea
pop
inc
add
test
mov
out
mov
mov
mov
sub
je
and
and
or
adc
or
jbe
and
sub
or
js
jne
stos
clc
mov
adc
ror
pop
shlb
or
je
push
sub
ds
pop
add
pop
and
dec
sbb
pop
xchg
xor
lcall
rorl
push
mov
xor
loope
insb
mov
and
clc
cmp
enter
rcrb
dec
cmpsb
add
je
push
add
icebp
fwait
mov
pop
mov
or
mov
pop
push
lds
popa
call
pop
and
setl
and
or
or
jl
xorl
rclb
testb
loop
in
mov
adc
hlt
push
pop
mov
sbb
pop
push
or
push
or
jl
sti
and
add
jg
andb
or
mov
jge
fsubl
movhps
in
cmp
pusha
mov
ja
push
and
out
mov
adc
jbe
push
int3
mov
fadd
loopne
in
cld
fdivrl
movsb
mov
call
add
je
in
scas
pop
dec
dec
je,pn
or
in
rorl
daa
outsl
or
add
add
cmpb
cmp
sub
daa
inc
test
popf
lea
mov
xor
mov
rcll
jmp
in
pop
add
cld
jo
roll
fdivl
pop
mov
jnp
fistps
jae
dec
je
addl
and
or
data16
imul
aas
ss
dec
cmpb
xor
push
inc
inc
leave
daa
sbb
sbb
imul
fwait
divb
sbb
mov
add
mov
jmp
xor
inc
pop
push
add
addr16
gs
xchg
lods
fcomps
lcall
sub
inc
insl
xor
jo
add
sti
push
test
add
sbb
xor
rol
inc
inc
and
stos
mov
sbb
and
or
or
pop
or
mov
rorl
push
aam
cmpw
sbb
add
inc
inc
jmp
xchg
call
jo
inc
lea
cmp
mov
cmp
lock
dec
jmp
xchg
mov
push
xchg
hlt
mov
jge
push
fdivr
jmp
mov
pop
inc
jo
call
jl
jmp
ret
pop
pop
mov
dec
pop
sbb
dec
int
add
xor
testb
je
movswl
sub
call
out
xor
sub
mov
negl
test
or
add
orb
and
in
mov
mov
push
jnp
mov
push
lock
push
rorb
inc
cld
mov
mov
inc
cwtl
push
jmp
mov
add
xor
dec
fsub
push
cli
dec
xor
test
test
ficoms
jbe
mov
adc
add
mov
inc
pop
mov
mov
imul
or
test
inc
test
in
dec
lret
adc
leave
add
aam
daa
jmp
shlb
imul
test
imul
test
icebp
addr16
es
aam
test
xlat
addb
adc
movb
add
aad
mov
jmp
jmp
and
or
jmp
lods
xchg
in
and
cltd
or
mov
add
cmc
mov
mov
mov
ret
or
cmp
mov
jmp
cmp
add
mov
cltd
das
jmp
or
and
jmp
pop
xor
cmp
push
je
jecxz
jg
jl
mov
push
lock
imul
jmp
jne
and
lcall
or
stos
cld
testl
sbb
fs
fs
pop
imul
lmsw
cltd
push
push
push
es
les
popa
or
pushf
or
rorb
cmp
shlb
add
add
or
or
pushf
sub
add
jg
and
sub
bound
test
inc
ud2
movb
sbb
rclb
cld
test
shlb
mulb
gs
enter
pop
or
sub
or
add
and
loopne
jne
bound
hlt
sbb
js
test
and
ds
mov
adc
dec
ljmp
mov
mov
popf
xor
sbb
imul
js
xor
add
inc
enter
mov
push
ret
push
xor
pop
outsb
pop
mov
adc
cmp
ja
lods
push
add
movsl
mov
push
repz
in
shrb
stos
xchg
cmp
test
sbb
stos
jnp
push
mov
add
or
mov
mov
adc
incl
xor
jmp
aam
push
xor
xor
adc
mov
lret
sahf
clc
test
adc
inc
icebp
xchg
mov
or
and
and
imul
dec
sbb
lret
xor
push
inc
mov
lds
cmp
loop
pop
es
add
jb
push
hlt
or
int3
mov
sub
sub
fiaddl
movsl
sbb
jo
int
cmp
inc
push
cld
cmp
jmp
push
jmp
dec
iret
nop
pop
and
outsb
out
add
mov
or
add
jmp
inc
fidivrs
jnp
and
mov
or
cmpsb
mov
push
mov
add
int3
xchg
or
cltd
cmp
cmpsb
mulb
stos
pop
jl
rol
icebp
ss
jbe
push
nop
pop
push
and
rorb
lods
test
inc
mov
popf
push
mov
mov
ds
popl
iret
add
cmp
repnz
shr
xor
arpl
add
loopne
fdiv
repz
dec
rorb
test
push
and
xchg
fcomps
sub
mov
hlt
and
gs
add
je,pt
bound
sub
sti
or
push
andl
rolb
aaa
mov
jmp
add
sub
add
cwtl
push
mov
rolb
gs
imul
bnd
xorl
pop
xor
xchg
ja
cmp
icebp
cs
cmp
add
jmp
sbb
dec
repz
sti
cmpb
xchg
pushf
or
rorb
out
mov
sub
aam
jmp
adc
mov
dec
or
inc
mov
mov
dec
xchg
in
adc
add
and
leave
xor
outsb
mov
les
pop
arpl
je
and
ss
stc
outsl
jmp
ljmp
and
loopne
cmp
cmp
pop
shlb
jg
or
ds
or
jecxz
fs
add
jle
jle
mov
imul
lcall
push
and
add
pop
xchg
sub
cmc
pop
sub
add
add
jp
or
out
sbb
or
adc
sbb
jns,pt
push
insl
cmpsl
cltd
ds
test
ret
loopne
xchg
nop
hlt
pop
out
jle
cltd
mov
test
or
fists
jle
ds
es
pushf
push
repnz
rclb
push
inc
mov
inc
mov
mov
sub
outsl
and
sub
inc
insl
mov
bound
gs
add
data16
sub
gs
sub
mov
es
mov
cmp
and
stos
movswl
cmpsb
mov
jae
imul
or
sahf
dec
add
andb
jne
mov
cltd
aam
popa
dec
aam
mov
lds
daa
push
push
jne
lcall
loopne
sub
mov
jle
sub
mov
adc
sbb
sbb
call
pop
xchg
adc
pop
and
add
cmpsb
or
jae
bound
jmp
mov
stos
jb
mov
popa
jb
and
and
mov
cmp
xor
and
fstps
inc
xchg
sbb
add
xor
inc
inc
sarl
js
je
mov
pop
or
or
js
push
dec
ret
pop
loop
test
cmp
lret
xor
adc
pop
mov
roll
jmp
aaa
setle
lcall
pushf
xorb
addr16
add
or
cmpsl
and
std
mov
push
lret
mov
cmp
je
and
xor
inc
mov
mov
cmp
jae
add
shr
add
mov
cmp
ja
and
pop
rolb
lock
repnz
mov
mov
inc
test
pushf
add
jne
xor
sub
mov
add
shrl
dec
cwtl
movsl
xor
mov
add
pop
push
fs
sbb
jmp
pushw
aam
subl
movsl
jge
xor
enter
fs
mov
pop
call
push
sar
or
dec
or
shll
je
into
test
mov
nop
mov
inc
enter
inc
or
push
sbb
decl
add
xor
and
pop
lods
lcall
inc
and
sbb
popf
aam
js
pop
mov
pop
push
test
sub
int
jg
fcmovnbe
in
loop
je
adcl
addb
dec
xchg
jecxz
jne
aaa
jmp
xlat
out
pushf
sbb
rorb
add
jae
jecxz
dec
test
movsl
pop
iret
mov
popf
or
mov
or
mov
mov
push
mov
fidivs
mov
inc
push
jmp
sub
mov
mov
cmp
repz
add
data16
xchg
or
pusha
sbb
out
lea
add
add
lret
add
xor
call
in
jb
mov
icebp
mov
sub
or
or
pop
sahf
push
ds
je
add
jo
cmp
push
popf
jbe
or
insb
shl
jmp
add
jmp
xor
pop
push
xor
jecxz
fnstsw
add
fbstp
fabs
lret
into
add
clc
adc
les
out
fmull
repz
popa
add
cmp
incb
mov
or
in
inc
jp
dec
lcall
ret
jne
lcall
mov
push
daa
push
enter
sahf
mov
dec
sub
jne
je
pusha
imulb
inc
sub
push
xor
aaa
out
daa
inc
pop
and
fdivrl
adc
int3
push
sbbb
xchg
cmpsl
dec
mov
jne
push
jle
and
dec
es
psrlq
dec
mov
out
das
out
bound
xor
sbb
incl
dec
add
or
or
push
adc
add
je
dec
mov
mov
push
ss
lds
or
sbb
push
in
movsb
xor
lods
mov
mov
ja
ds
mov
inc
jmp
addr16
push
xor
mov
es
push
dec
and
push
jb
xor
push
add
std
movb
adc
adc
push
or
dec
mov
aad
pop
and
push
inc
or
cltd
popa
sub
cmp
cmp
addl
arpl
out
lea
shl
xor
shlb
add
mov
fsubs
ds
push
mov
pop
push
sub
xchg
xor
mov
sbb
sub
push
std
fdivrl
dec
adcb
sbb
mov
sbb
push
dec
into
or
adc
andl
or
in
xchg
xor
lea
sbb
pushl
addl
andl
lea
push
sub
loope
add
jns
cmpsb
pushf
inc
dec
notb
scas
xlat
pop
adc
ret
mov
add
inc
or
xchg
inc
fsub
xor
test
sbb
xchg
sub
int3
fcomps
xchg
enter
into
cmpsl
out
aaa
test
repnz
pop
push
test
jle
leave
jae
lock
or
call
and
std
xor
pop
inc
or
xor
rcll
fimuls
mov
xor
or
xor
jle
mov
aad
mov
add
mov
test
jecxz
loope
adc
jne
mov
js
sbb
adc
fwait
popf
sbb
fisttpl
or
into
dec
dec
lds
cmp
je
jmp
aaa
shlb
mov
or
mov
or
inc
jno
xor
xor
imul
insl
dec
cmp
je
mov
mov
or
xorb
dec
push
sub
stc
adc
mov
sar
push
push
cmp
cmp
sbb
add
and
orb
push
or
jbe
cmp
jne
cs
lock
scas
or
dec
addr16
leave
push
xchg
xchg
mov
mov
and
dec
xchg
inc
enter
jge
mov
cmpsb
stc
xor
je
sbb
loopne
cmp
pop
and
loope
add
jl
or
adc
mov
add
pop
mov
ret
dec
mov
xchg
imul
pusha
ds
sub
sub
push
sbb
push
xlat
sub
dec
pop
lods
pop
dec
xor
push
add
insb
adc
cli
or
jmp
add
or
cwtl
xchg
inc
sbb
sub
add
jmp
dec
loopne
test
jne
es
test
je
push
loop,pn
inc
lea
push
jne
fwait
adc
inc
ficompl
push
bound
or
adc
sbb
mov
test
lret
push
fidivrs
or
rorb
outsb
inc
cmp
push
inc
adc
xor
xor
lret
dec
jge
ja
inc
xor
rcrb
pop
jmp
or
sub
mov
int3
ret
cmpsl
faddl
aad
jle
mov
mov
cmp
je
testb
push
inc
add
cmp
jl
stos
aas
push
mov
jmp
popa
repnz
or
add
lret
or
fchs
icebp
cmp
cmp
rorl
cmp
je
roll
outsb
bound
lds
mov
add
sbb
int
pop
pop
xchg
daa
mov
pextrw
add
stos
mov
mov
push
lret
mov
arpl
call
rcrl
add
mov
mov
pop
lds
push
add
cmp
je
sbb
adc
into
inc
inc
adc
inc
out
popa
icebp
add
add
push
mov
xor
push
cmp
xor
lret
add
adc
or
mov
mov
notb
outsb
pop
fmull
push
hlt
add
xchg
notl
das
fs
cmp
rcrb
addb
or
or
mov
and
inc
mov
mov
enter
loope
dec
adc
pop
sub
sub
je
ret
mov
decl
dec
cmp
les
loopne
inc
cmpb
xchg
pop
movb
inc
loop
jmp
repz
fsubrl
or
call
or
or
je
repnz
pop
or
mov
inc
mov
or
inc
xor
inc
add
decl
or
sbb
imul
dec
leave
cmpsl
sbb
add
ja
mov
inc
stos
cmc
adc
pop
xchg
je
xor
jp
in
push
mov
sub
mov
dec
int
cli
stos
fimuls
popa
pop
cmp
mov
jns
lock
push
jae
push
pop
out
jnp
and
aas
mov
mov
push
pop
adc
scas
push
push
aam
in
int3
daa
cltd
ljmp
xor
push
dec
out
sahf
push
pop
push
sarb
dec
or
bound
mov
or
aaa
sub
or
lock
inc
mov
inc
sbb
pop
xchg
sub
sub
pop
inc
sbb
cmp
pop
jns
or
xorl
jl
into
sti
cmp
mov
mov
mov
sub
mov
cmp
inc
or
mov
adc
pusha
mov
lea
hlt
fildl
or
shll
mov
cmpsl
sub
pushf
repnz
jae
cmp
or
jns
mov
inc
fldcw
loop
cmp
mov
lock
inc
push
add
mov
les
inc
cmp
adc
rcrl
jb
pusha
add
ja
xchg
push
jo
add
pop
fsubrl
mov
cmp
pop
or
add
or
jbe
add
ret
pusha
sbb
jecxz
mov
popa
or
adc
push
je
push
mov
mov
mov
mov
and
cmp
mov
add
add
mov
or
cmc
popf
pop
xor
or
add
jl
pop
dec
xchg
mov
lret
sub
inc
push
dec
xor
pop
xor
cmp
lahf
jae
and
inc
test
dec
cmp
cmp
mov
mov
test
and
fsts
sbb
mov
inc
fcoml
test
and
je
lret
mov
cmp
adc
push
imul
push
outsl
hlt
sub
js
sbb
movsl
rorl
mov
and
cmp
je
add
inc
or
ds
js
sub
aad
jg
fidivrl
xor
cmpsl
push
add
gs
jge
mov
icebp
faddl
adc
xor
mov
jge
fbstp
in
in
addr16
je
jb
xor
mov
or
mov
repnz
fstpt
ljmp
addr16
gs
sbb
cmpsb
or
mov
int3
or
jge
shlb
add
imul
leave
imul
lods
mov
dec
pop
ja
mov
mov
push
and
and
shlb
push
jae
sbb
cmp
xchg
mov
insb
add
test
push
add
inc
lds
hlt
subb
pop
insl
out
or
add
add
pusha
lock
xchg
inc
xchg
xor
imul
add
sbb
and
enter
inc
sahf
add
push
jl
mov
cmp
and
or
ja
int3
xchg
push
cmp
out
pop
mov
insl
cmp
mov
je
add
push
push
shll
arpl
arpl
add
cmp
test
lds
in
test
aam
ljmp
jne
adc
pop
lea
inc
mov
mov
or
adc
addl
or
pop
adc
push
cmpsb
pushf
cwtl
jne
test
je
sbb
adc
push
add
data16
ficomps
mov
pop
mov
loop
pop
push
fnstcw
sbbb
mov
xor
in
push
jne
fldt
pop
push
or
mov
xor
pop
push
xor
es
mov
test
sub
push
sarl
jge
call
xor
sti
push
mov
rcrb
or
stos
sub
mov
ret
incl
add
ret
xchg
shll
inc
jmp
outsb
push
jo
lea
push
nop
adc
pop
add
lea
rclb
sub
and
bound
add
sbb
fs
mov
or
repz
inc
inc
cmpb
jae
mov
cld
add
roll
pop
add
or
lods
dec
or
lea
adc
pop
mov
push
lds
call
xchg
mov
in
jb
dec
pushf
cmp
sub
push
into
cli
or
add
aad
sbb
in
mov
sub
int3
mov
movsl
and
push
dec
add
or
dec
jmp
and
adc
mov
jle
int
dec
leave
cmp
cwtl
stc
call
dec
lcall
add
or
add
cltd
insb
xchg
xchg
mov
jmp
mov
ret
sub
into
add
fwait
out
or
push
shll
or
add
add
jb
mov
pusha
push
ljmp
or
mov
sarb
shll
enter
sub
mov
cld
lcall
inc
inc
mov
ret
ror
cld
adc
pop
mov
xor
push
inc
enter
in
and
jmp
push
das
push
xor
scas
push
sti
mov
jne
mov
sbb
adc
loopne
adc
js
sbb
mov
sbb
jmp
andb
cmp
add
mov
inc
jb
sbb
fldcw
add
mov
jecxz
push
adc
push
ja
dec
cmpsl
sbb
loopne
dec
icebp
dec
mov
push
movsb
cltd
rcrl
std
mov
pop
cld
in
idiv
rcr
cmp
cmp
xor
adc
fs
push
jl
arpl
lods
push
cmp
dec
and
je
pop
or
inc
sbb
and
insb
adc
in
pop
adc
jmp
andb
xchg
add
dec
int3
rcrb
lea
rcrl
pop
ss
pop
xchg
push
cmp
jae
enter
mov
lea
sub
mov
sub
xchg
pop
jmp
movsl
shr
scas
pop
inc
sbb
loopne
repz
adc
mov
mov
imul
out
test
xorb
mov
les
mov
dec
pop
imul
dec
cmpl
ret
add
sub
inc
shl
or
sub
addr16
xor
sbb
sub
sar
fsub
pop
mov
ret
sub
cmp
jae
and
add
inc
jmp
mov
sbbb
rclb
imul
xchg
dec
adc
ja
sub
fisubrl
shll
or
xchg
imul
push
jo
push
out
xchg
xor
stc
ror
bound
adc
pop
jno
jae
inc
push
jp
xor
lds
mov
inc
mov
test
ja
loop
mov
pusha
or
js
data16
cmc
inc
int3
in
dec
or
add
pop
jmp
push
loope
ret
sbb
inc
in
or
lea
adc
mov
jbe
sub
cmp
imul
or
dec
test
or
or
sbb
inc
gs
cmp
or
cltd
data16
add
push
cmp
lret
rcll
sub
popa
add
inc
jne
push
dec
jne
pop
mov
cmp
dec
mov
jo
cmp
inc
pop
cmp
sbb
test
cmp
sbb
xchg
cmp
mov
pushl
rcrl
mov
xchg
jmp
cli
mov
scas
cmp
jecxz
std
jmp
or
mov
pop
xchg
cmp
mov
pop
je
jns
cmp
shlb
jae
add
adc
lea
pop
pop
add
enter
push
sbb
rclb
adc
pusha
scas
and
push
into
iret
pop
dec
sbb
adc
loope
jecxz
out
cmp
rolb
cmp
jbe
push
inc
or
and
cmp
jmp
enter
xor
lods
bound
pop
jecxz
add
cmp
insl
mov
lea
and
xchg
lock
stos
in
pop
or
adc
push
cmp
je
push
mov
pop
mov
or
cmpb
or
push
inc
cmpsb
in
mov
fistps
dec
pop
in
or
add
aaa
add
pop
fiaddl
mov
mov
xchg
movzbl
sub
mov
push
jl
mov
add
cmp
xorl
pop
mov
push
sbb
into
fsubrs
out
dec
mov
and
add
xchg
xor
mov
call
mov
pushf
dec
shr
sbb
jo
and
iret
in
mov
lret
xor
aaa
push
andb
cmp
fwait
inc
mov
adc
cli
mov
shlb
jns
xor
jo
mov
mov
inc
inc
aad
jmp
mov
dec
add
sub
inc
sbb
jmp
adc
mov
add
inc
inc
pminub
andl
lret
iret
push
gs
or
jne
mov
insb
dec
mov
decl
xchg
aas
dec
inc
je
pop
add
je
jnp
jmp
xchg
sbb
jmp
test
and
add
inc
jmp
rcll
xchg
xor
in
sbb
mov
or
adc
jmp
jmp
or
cmp
pcmpgtd
adc
push
inc
rorb
inc
mov
dec
jne
mov
fwait
inc
jl
mov
je
cmp
das
je
mov
daa
push
pop
xchg
sbb
mov
lcall
mov
iret
mov
daa
mov
test
repz
in
arpl
cmp
add
sub
test
xor
add
sub
je
ss
pop
sub
fsub
ljmp
insb
imul
rorb
daa
ret
cmp
into
jae
push
inc
inc
or
sbb
push
shl
mov
clc
mov
inc
add
add
push
sahf
add
jmp
xor
jb
xor
and
push
add
adc
and
sbb
imul
mov
ret
enter
push
jb
dec
into
movsl
test
or
pusha
mov
xchg
sub
jnp
sti
add
imulb
movl
and
dec
push
fwait
mov
rorl
les
xchg
sub
lock
inc
cmp
xchg
xor
xor
out
jo
mov
ret
sbb
jae
sbbb
add
push
bound
loop
loope
insb
lds
or
add
jo
inc
in
mov
sbb
mov
or
push
cmp
mov
int
or
cmpl
pop
lea
pop
sbb
inc
loope
lar
add
mov
in
aad
sarb
pop
mov
pop
sti
ret
sarl
sbb
dec
xorb
dec
add
leave
cmp
inc
fistl
or
push
push
xchg
sbb
pop
test
or
mov
jmp
add
ret
add
jl
fsts
in
cmp
push
push
or
jne
cmp
mov
negb
jmp
ret
gs
mov
pop
xor
push
xchg
inc
pop
push
popaw
or
mov
dec
rolb
inc
bswap
in
or
or
addr16
or
inc
pusha
je
jl
pop
mov
test
ret
int3
push
inc
xor
pop
inc
xor
mov
leave
bound
push
add
inc
es
xor
lock
inc
je
push
bound
and
jnp
shlb
jbe
push
push
add
imul
push
ret
pop
in
or
ljmp
imul
push
xor
pop
mov
mov
bound
in
or
xor
push
mov
jmp
adc
lock
mov
pop
push
push
aas
mov
fistl
add
mov
mov
mov
pop
push
add
pop
push
and
ret
mov
pushf
or
std
sbb
pusha
sub
push
add
shlb
fdecstp
ljmp
bound
xor
and
jb
arpl
aam
add
loopne
jl
push
or
or
add
xchg
sbb
push
sbb
jne
sub
pop
repz
cmc
push
popl
cli
shll
or
sbb
cmp
dec
in
pop
dec
dec
sbb
rcl
mov
pop
adc
push
xor
imul
cwtl
xor
jbe
sbb
daa
inc
inc
xchg
clc
or
push
add
adc
aas
fs
adc
adc
or
sub
sub
mov
mov
shrb
add
daa
loope
shlb
jmp
bound
fidivl
inc
test
pop
or
push
scas
leave
sub
lret
push
ret
add
fcoml
push
test
mov
andb
dec
loop
rcrb
mov
adc
shrl
fildl
loop
rcll
ret
mov
cmpsl
push
adc
inc
aas
leave
push
inc
repnz
mov
xor
lds
or
not
and
and
lock
or
adc
insl
or
mov
fstl
imul
dec
lock
jp
daa
push
pop
std
rolb
nop
push
rcll
adc
xchg
nop
sub
or
dec
pushf
jecxz
add
adc
add
repz
dec
or
lret
mov
sarl
sub
inc
mov
sub
pop
or
das
or
jmp
pop
or
incl
pop
mov
cmp
lods
xchg
hlt
inc
and
pop
or
adc
outsb
cmp
push
push
jp
push
insl
jmp
jle
jns
adc
push
test
test
mov
mov
mov
je
es
pop
sbb
lret
int3
push
or
or
sub
sbb
cs
pop
es
xor
fisttpll
sub
or
and
adc
rcrb
push
popf
popa
pushf
lahf
cltd
mov
pop
push
or
shl
not
add
inc
xor
add
adc
and
mov
into
out
or
pop
jl
mov
dec
out
ja
push
scas
cmp
dec
adc
lea
popa
push
pop
pop
ja
push
add
loopne
and
stc
loop
cmp
pop
sbb
cmp
adc
push
or
sub
repz
or
sbb
pop
xchg
loop
pop
add
retw
pop
cltd
insb
mov
xchg
imul
inc
dec
stos
cmpsb
loop
adc
into
mov
inc
push
fcoms
int3
loopne
repnz
js
int
sub
cs
pop
pop
mul
sub
shlb
inc
inc
cmp
mov
enter
fstps
rep
das
stos
and
mov
sub
sbb
pop
xor
dec
sbb
pop
lea
dec
add
inc
sar
bnd
adc
dec
or
sub
lods
mov
test
gs
add
and
and
xlat
stos
test
sub
not
es
enter
mov
push
pop
ljmp
dec
ror
in
push
jne
dec
or
push
rolb
pop
int3
int3
add
pextrw
shll
add
out
add
adc
xchg
pusha
in
dec
sub
add
loopne
cmp
sbb
dec
sbb
push
add
ret
add
pop
and
or
sub
clc
rcrl
sti
and
sarb
hlt
xor
and
gs
notl
adc
pop
dec
cmp
add
mov
ja
jl
int
jg
dec
inc
imul
in
dec
dec
mov
cmp
jg
sub
or
mov
or
dec
roll
and
sub
pop
idivb
add
sub
push
adc
es
mov
addl
push
ss
pop
inc
push
loopne
andb
mov
sub
sbb
popf
sbb
jg
xchg
dec
adcl
or
icebp
or
cmp
xor
and
hlt
push
xor
add
mov
or
and
imul
pusha
shrb
and
je
cmp
repnz
in
adc
shll
dec
mov
mov
rolb
outsl
jne
stc
pop
aam
jns
sub
dec
inc
or
add
movb
test
add
pop
sub
rol
je
movsbl
bound
add
pop
sbb
inc
jmp
andb
adc
or
xchg
jg
add
jmp
popa
add
xor
incl
and
adc
or
adcl
call
sbb
push
mov
or
cmpsl
gs
xorb
push
sahf
and
adc
inc
push
inc
or
nop
mov
lahf
xchg
add
mov
add
mov
add
lods
in
xchg
lret
add
fsubl
inc
push
mov
pop
popa
lock
insb
shl
frstor
leave
push
lea
iret
flds
cmp
into
and
dec
cld
mov
mov
cmc
mov
and
jne
push
shll
data16
mov
pop
dec
es
or
pop
hlt
enter
dec
cs
or
cwtl
lret
mov
orb
mov
shr
pop
or
lea
mov
adcl
jmp
mov
dec
dec
or
push
insb
sbb
xchg
xor
sub
je
leave
mov
movsb
jne
call
bound
lcall
jmp
mov
push
pop
push
add
or
into
xor
jl
inc
test
test
adc
or
lea
ja
adc
fs
mov
int
mov
aam
divl
pop
popa
sbb
or
sbb
inc
roll
inc
ret
pusha
mov
adc
addr16
stos
fwait
inc
jmp
cmp
fs
ret
mov
pusha
in
xchg
pop
mov
xchg
and
add
ret
sbb
dec
mov
pusha
adc
shlb
bound
sub
jl
xor
mov
and
test
fidivrl
or
xchg
and
or
pop
and
pop
scas
into
andb
and
inc
and
push
push
cmc
push
repnz
data16
data16
ja
xor
or
sbb
lds
push
mov
fmuls
nop
fdivs
dec
adc
adc
push
sbb
push
mov
add
adc
pop
ljmp
cmp
cmp
test
jne
shlb
je
lretw
cmp
add
and
fsubl
mov
jle
sub
inc
adc
xor
lret
push
mov
cs
sub
jne
loopne
jb
cmp
add
mov
jge
shlb
mov
lret
push
push
clc
jbe
in
jge
and
push
cmp
jae
add
and
pop
movsl
ret
mov
shlb
and
xor
jne
adc
mov
mov
xor
xor
xchg
jl
pop
outsl
mov
inc
xchg
adc
dec
movl
push
test
inc
je
call
mov
je
adc
shll
mov
dec
incl
xor
xor
sub
loope
enter
out
ret
cmp
ss
fsubrl
aad
lret
mov
sbb
jo
in
jmp
sbb
ret
push
loope
adc
adc
stos
call
aam
arpl
sbb
xchg
sub
sbb
lods
pop
push
xor
and
psrlw
jmp
sbb
mov
cmp
inc
and
jecxz
out
sbb
xor
cmp
inc
push
div
enter
push
push
les
sub
jmp
scas
std
mov
std
pop
std
cmp
popa
dec
loopne
jns
into
sbb
mov
mov
sbb
mov
lea
pop
outsl
xchg
sub
inc
les
mov
jecxz
lea
jae
push
filds
stos
shlb
sub
cwtl
popf
sbb
mov
mov
and
mov
rcr
dec
fildl
in
int3
inc
lret
dec
sti
repz
adc
loop
adc
shl
test
insl
out
jle
push
movsl
adcb
es
xor
sarb
imul
or
outsl
add
hlt
jmp
movb
rclb
jo
pop
mov
xor
inc
pop
fistps
push
insl
sub
jbe
xchg
cmp
pop
nop
shl
adc
add
jne
ret
enter
sbb
je
je
ja
add
or
lds
out
jns
xchg
mov
jb
xchg
div
add
or
ret
fnstsw
ds
cmp
sub
roll
and
adc
dec
enter
adc
sbb
cmp
dec
pop
or
roll
inc
arpl
in
mov
or
andb
sbb
mov
mov
test
mov
cmp
mov
incl
or
mov
adc
sbb
shll
aad
and
adc
cmovo
pop
mov
lea
push
push
sbb
xor
xchg
popa
and
adc
lcall
lock
loope
and
mov
jg
je
jo
sub
iret
mov
cmp
imul
jl
clc
inc
into
aaa
push
ja
or
cs
jmp
sub
add
push
fiaddl
push
dec
cs
lods
and
xchg
es
bound
mov
test
or
loop
adc
mov
mov
sbbl
popa
mov
notl
insl
lea
push
inc
jbe
add
iret
xor
fbstp
sbb
mov
out
dec
push
or
xchg
push
push
icebp
xchg
jne
stos
fwait
sub
cmpsb
ficoml
bound
gs
mov
mov
push
sbb
mov
repz
orb
repnz
dec
xor
add
push
js
push
je
clc
or
je
int3
sub
or
dec
popf
push
pop
fsubr
pop
aas
ss
pop
and
jb
push
test
ja
jne
cmpb
int
push
lock
mov
inc
cmp
adc
sbb
mov
data16
jns
inc
lahf
sbb
sbbb
pop
fwait
lea
or
faddl
or
push
sbb
xor
jmp
xor
dec
popa
icebp
sub
sbb
add
in
int
cmc
xchg
adc
sbb
mov
inc
js
dec
pop
movlps
mov
sub
shrb
popw
cmp
pop
mov
adc
icebp
sbb
cmp
daa
adc
mov
pop
vmovntpd
daa
sbb
je
into
mov
add
mov
push
push
mov
sbb
push
push
dec
pop
dec
popa
xor
insb
addr16
push
mov
aas
dec
pop
or
mov
inc
outsb
ds
sub
mov
outsb
lret
mov
mov
sbb
fisubs
sbb
es
pop
test
pop
adc
nop
popf
dec
sbb
adc
lcall
inc
das
sub
pop
popa
mov
std
push
mov
movsb
aad
push
and
int3
add
xchg
les
mov
xor
ret
inc
arpl
inc
dec
cwtl
inc
sub
pop
cmp
jg
push
inc
jmp
xor
in
roll
cmp
push
add
cmpsl
sub
shll
sti
cli
daa
dec
gs
sbb
repz
sahf
stos
ret
mov
sub
mov
je
mov
icebp
xor
inc
ret
cmp
and
fmuls
pop
mov
leave
pushf
mov
add
xorb
sub
or
or
dec
or
popaw
adc
out
push
cmp
jp
js
jne
mov
mov
popf
jb
push
push
pop
jne
pop
push
adc
and
loopne
adc
add
popa
cmp
push
mov
es
and
jne
sub
and
push
rcll
and
into
pop
push
test
jbe
ja
dec
mov
push
mov
in
mov
bound
xor
adc
out
adc
push
push
mov
adc
mov
sbb
cmp
jge
rcrl
push
pusha
lods
adc
ja
movhps
or
jge
ret
popa
or
adc
ret
shrl
xchg
ljmp
add
add
push
orb
leave
arpl
mov
dec
rorl
rolb
or
sub
adc
add
mov
or
adc
fdiv
sbb
cwtl
push
xchg
hlt
mov
shll
imul
call
push
sar
add
pusha
test
pop
and
sbb
cmp
jg
orb
add
stc
xlat
or
sub
add
decl
mov
mov
clc
loopne
into
jle
add
sbb
mov
jbe
pop
pop
or
jle
dec
popa
and
add
jbe
lods
cmp
jecxz
sub
in
or
cld
loope
xor
push
sub
mov
cmpsl
popa
sub
shl
or
dec
insb
or
cmp
mov
lds
int3
repnz
shll
loope
call
nop
dec
bound
test
inc
jne
cmpsb
sbb
xor
lods
jg
inc
mov
and
les
or
push
pusha
inc
add
push
rclb
scas
pop
mov
push
mov
nop
adc
or
xchg
in
mov
or
rclb
xor
xchg
adc
add
mov
add
cmp
or
mov
mov
lea
test
jb
lds
sbb
pop
mov
sahf
jl
mov
pushl
shl
pop
nop
pop
or
adc
iret
pop
pop
jns
or
cmpsl
cmc
xchg
sbb
sbb
js
mov
mov
lea
aas
shr
or
mov
and
add
pop
shl
test
jecxz
sub
cs
pop
daa
out
sbb
or
into
mov
or
pushf
sub
and
adc
out
adc
orps
add
ret
add
jbe
daa
adc
pop
repz
movsl
xor
popf
push
insl
add
or
jns
add
push
adc
mov
add
or
inc
lret
xchg
xchg
push
xchg
aas
add
lret
inc
cmpsl
outsb
dec
add
out
adc
loope
enter
ret
xor
lret
jae
add
jmp
mov
xor
gs
jmp
pop
jmp
mov
mov
or
in
pop
mov
and
popa
scas
rcrb
movsl
call
fcompl
pop
aam
shl
in
clc
push
in
mov
cmp
and
arpl
or
inc
jmp
pusha
mov
inc
cmp
ja
and
fsts
inc
lea
xchg
add
adc
int3
cmc
loope
out
cmp
adc
cmpsl
lock
mov
push
mov
push
movsb
in
aam
cmp
sbb
repnz
arpl
push
cmpsl
sbb
inc
xor
jmp
dec
jo
lock
add
dec
push
lds
add
je
xorl
push
addl
or
add
or
xchg
add
xchg
sub
dec
push
mov
movsl
inc
or
jne
pop
pop
or
xchg
ret
push
jge
adc
jno
push
out
xor
std
dec
pop
dec
aad
add
dec
add
sbbb
rorl
sbb
adc
cmp
adc
mov
in
push
and
pop
add
fdivl
jbe
sbb
outsb
jo
sbb
adc
and
or
mov
or
xor
mov
pusha
push
mov
fistl
dec
dec
decb
daa
inc
iret
je
fs
mov
loopne
int3
add
xor
dec
repnz
lods
imul
jmp
jnp
loopne
or
es
dec
or
xor
inc
lret
mov
je
pop
jno
pushl
insb
mov
shlb
test
or
loope
pop
fldt
lods
pop
or
dec
pop
jg
or
xchg
dec
adc
fidivrs
xor
mov
adc
push
pop
adc
jg
ret
mov
jne
dec
ja
aaa
or
dec
jmp
fisttpl
mov
jecxz
cmp
adc
pop
inc
cld
add
cmpb
jl
adc
inc
mov
dec
and
hlt
mov
pop
jbe
mov
imul
inc
mov
jne
adcb
fs
jne
adcb
and
pop
cmp
fsub
sub
es
xor
int
in
mov
push
jecxz
push
and
pusha
bound
mov
add
mov
fwait
pop
cmp
or
lea
stc
cmpsl
jl
mov
cmpl
jecxz
cs
pop
mov
xchg
mov
xor
jmp
mov
cmp
add
adc
mov
mov
or
loop
pop
jno
mov
add
xor
mov
cs
bound
jge
add
sahf
cmp
shl
push
test
sahf
das
jns
sahf
out
movsb
icebp
push
inc
mov
enter
insl
mov
adc
push
and
int3
add
call
jmp
in
cmp
out
jo
out
aas
mov
xor
jmp
add
and
lds
sbb
add
andw
imul
xchg
loope
jmp
mov
sbb
filds
cmp
clc
jne
jmp
xor
call
add
xchg
adc
cmp
dec
js
jne
pop
push
rdmsr
je
or
push
inc
or
imul
push
push
roll
iret
push
and
jmp
dec
inc
jmp
and
or
rcrb
imul
dec
movl
or
mov
incb
sti
push
repnz
lds
push
sub
imul
rolb
cmpw
jb
and
out
popa
push
popa
add
add
xor
push
adc
xor
jg
fmull
jmp
call
adc
cli
sub
in
gs
pop
lret
or
or
mov
add
neg
and
or
lds
repz
cmp
add
jle
pusha
stc
adc
jne
pop
pop
adc
call
mov
in
test
adc
mov
adc
or
mov
fs
or
inc
mov
dec
push
push
stc
xor
xor
shll
mov
icebp
test
jns
lcallw
lea
add
ret
sub
mov
sbb
sbb
inc
lcall
lret
inc
hlt
sub
flds
fadds
xor
andb
inc
lcall
pop
adc
add
lret
subb
push
and
xor
sub
sub
pop
mov
or
pushf
cmp
call
in
push
mov
add
and
cwtl
or
in
push
xor
inc
fimuls
stc
pop
cmp
jmp
adc
int3
sbb
xor
mov
inc
or
mov
push
jno
jge
lea
lods
add
adc
xor
jo
ret
dec
mov
inc
push
es
mov
lods
pop
bnd
icebp
ja
popa
add
mov
sub
sbb
mov
mov
adc
fnstcw
jne
inc
add
hlt
xchg
sub
cmpsb
adc
sub
imul
push
loopne
xchg
xor
andl
mov
sbb
cs
push
or
or
fcomps
iret
or
test
push
nop
loopne
movsb
lock
rcrb
cmp
shll
sub
adc
push
jmp
push
daa
sub
stos
loope
xchg
pop
les
inc
out
inc
fbstp
inc
sbb
push
mov
mov
adc
pop
and
pushl
sub
and
add
leave
mov
sahf
int
push
sbb
cmp
xor
xor
enter
push
cmp
or
push
das
push
pop
outsb
adc
or
loopne
ja
outsl
adc
into
add
roll
jbe
daa
inc
je
cmp
std
xchg
mov
or
push
xor
push
fistl
cmp
sbb
xlat
sbbl
add
mov
cmp
or
dec
cmp
jge
lahf
lods
adc
cmpsl
mov
movsl
sub
sub
testb
dec
mov
adc
scas
or
or
insb
xchg
adc
or
out
xchg
jae
pop
stos
dec
mov
fmull
lods
clc
jb
mov
mov
pushf
sbb
fists
andb
push
rcrb
xor
push
xor
nop
fadd
cmp
push
pop
jbe
adc
cmpb
jne
inc
xor
xor
jae
movl
rorl
mov
add
xchg
xchg
andl
push
push
adc
sbb
das
stc
mov
clc
and
and
orl
adc
fwait
and
shrb
jg
jbe
add
std
mov
mov
ljmp
out
sbb
jb
popa
push
cltd
cmp
loop
sbb
cmp
jne
in
push
icebp
pop
punpcklwd
push
mov
jo
push
cmp
sbb
inc
cmp
mov
dec
icebp
jl
mov
call
lock
test
stos
jle
dec
add
mov
dec
repz
dec
out
or
jb
add
or
add
dec
push
mov
push
scas
outsb
movsb
ljmp
hlt
add
lds
cltd
or
pop
or
or
adcl
and
add
jns
pop
clc
cmp
jbe
das
jg
push
pop
cmp
sub
push
sub
adc
pop
cli
fdivs
in
in
test
lret
inc
dec
test
ljmp
sbb
fsubl
ja
popa
xchg
fsubl
addr16
or
and
fimuls
sub
loope
add
or
pop
jge
in
or
xor
or
push
leave
loop
jmp
jns
loop
cld
fidivs
cmpsb
adc
sbb
dec
push
push
pop
pop
cmp
add
push
fcoms
jmp
push
neg
sbb
mov
dec
push
add
pop
xor
inc
sub
add
jo
leave
sub
pusha
cmp
cmp
push
scas
outsb
jno
push
adc
mov
and
inc
and
inc
ret
push
inc
int3
add
and
mov
je
inc
out
nop
or
adc
jge
movsl
lret
add
negb
mov
ficoml
sbb
adc
fnstcw
xor
jle
sbb
push
sub
dec
add
loope
ds
mov
orb
add
imul
dec
inc
adc
mov
or
xchg
daa
lcall
cld
nop
in
icebp
pop
in
mov
inc
stos
repnz
pop
sub
sub
loop
and
push
pop
stos
ljmp
pop
push
mov
sbb
je
lret
adc
add
mov
js
out
mov
jecxz
loop
lds
push
add
push
ss
sbb
push
test
enter
mov
sub
cmpsl
and
xor
ja
out
enter
out
pop
add
inc
push
mov
lods
fisttps
ss
cmp
cwtl
sbb
inc
repz
mov
orl
lods
mov
jne
cmp
jle
inc
push
xor
adc
cmp
adc
mov
pop
mov
sbb
les
dec
pop
or
shlb
cmc
mov
popf
jns
pop
or
and
mov
or
sbb
js
lret
pushf
cs
pop
pop
cmp
jg
inc
dec
and
sbb
and
mov
add
mov
lret
pop
lret
sub
xor
shll
dec
inc
pusha
test
jb
add
lret
inc
pop
popf
xor
test
jmp
mov
movsl
stc
popf
icebp
xchg
sbb
or
cmp
loop
sub
sbb
pop
test
push
and
cmp
inc
push
iret
push
test
mov
push
movsb
and
mov
cmp
xchg
test
or
pop
push
je
push
cmpsb
cld
lea
push
jns
pop
dec
jl
dec
jns
loopne
cwtl
popa
lea
sub
jb
cld
adc
fmuls
xchg
xchg
xor
sti
je
sbb
dec
inc
cmp
push
cmp
jnp
mov
bound
mov
lea
stos
or
inc
mov
dec
xchg
pop
xchg
sub
loop
ret
stos
mov
adc
je
push
lock
clc
push
stos
pop
pop
test
adc
xchg
pushf
test
rcll
xchg
ret
sbb
hlt
jb
or
sub
sub
inc
popa
or
cmp
mov
inc
testb
cmp
test
out
add
pop
dec
cmp
je
mov
js
jne
adc
into
clc
mov
xor
daa
dec
dec
mov
mov
pop
jl
sbbl
ds
jb
xor
xor
lea
xchg
fisttpl
cmp
inc
inc
add
and
movsl
dec
or
add
xor
mov
xor
cmp
jb
test
sbb
daa
fs
or
adc
fs
mov
mov
jl
je
mov
lahf
xchg
or
insb
negl
sbb
pop
sub
rorl
fildl
sbb
not
and
jno
adc
imulb
das
mulb
xor
in
pop
xchg
jmp
enter
sub
mov
push
and
js
push
xlat
mov
sub
clc
xchg
sub
inc
insb
or
test
mov
lea
adc
xor
cmc
int3
add
mov
mov
shrb
fists
xor
sbb
stos
loop
jmp
sbb
pop
inc
mov
pop
xchg
sbb
cmpsb
jne
cmp
nop
fwait
iret
ds
sub
pop
inc
sarb
test
call
jp
lds
shlb
push
xchg
cmp
cmp
adc
cmp
or
jmp
lods
jmp
push
cmc
adc
sub
or
rcrl
dec
gs
or
pop
cmp
mov
int3
cld
add
jmp
and
sbb
xchg
push
imul
pop
ja
add
mov
and
add
cmp
in
addr16
and
inc
inc
outsb
data16
aaa
cmp
je
jmp
mov
cmp
push
adc
xor
inc
mov
mov
or
pop
inc
push
inc
gs
fsubrs
addr16
inc
fmul
mov
or
sub
pop
pop
bound
sbb
xor
lret
push
jns
dec
fdivl
loopne
add
jae
adc
xchg
sti
cmc
jmp
je
add
jne
push
into
std
add
cmp
xor
mov
je
lret
xor
fwait
and
jle
psadbw
xor
push
push
adc
push
dec
lods
into
and
lods
jb
or
xchg
lods
sti
lds
add
lods
lahf
mov
sti
mov
add
mov
mov
add
xor
cwtl
xor
aad
add
ljmp
ja
sbb
inc
in
add
push
sub
data16
push
mov
and
push
or
clc
rcrl
insb
mov
fdiv
push
outsb
hlt
xor
fwait
addr16
fidivs
push
push
push
mov
enter
and
int3
pop
push
jl
cmp
adc
cltd
mov
cmp
xrelease
or
rol
mov
xor
or
movups
xchg
je
sbb
inc
xchg
mov
push
dec
mov
clc
push
dec
fdivl
movsb
pop
out
adc
enter
rorb
fimull
mov
les
inc
adc
sbb
cmp
fs
jg
jecxz
mov
sbb
sbb
push
out
pop
dec
add
mov
arpl
inc
cmp
cli
in
sbb
lcall
out
lret
shrb
fs
xlat
gs
dec
aam
imul
inc
lds
popl
and
mov
push
fistl
inc
add
push
mov
ja
xor
cmp
cmpsb
pop
inc
push
add
lea
bound
orl
insl
je
imulb
aaa
sbb
je
sbb
ds
xchg
inc
adc
push
sub
outsl
inc
cltd
ret
pop
lea
add
and
add
fcoms
push
lds
mov
adc
pop
sbb
pop
lods
sbb
pop
pop
or
cmp
sarb
adc
lock
nop
jmp
mov
and
les
popf
das
aad
ja
inc
inc
push
and
das
and
push
push
das
xor
xor
je
cmp
and
jne
push
jp
je
outsl
outsb
pusha
adc
addr16
outsl
or
or
mov
add
dec
ret
jno
add
mov
imul
sub
push
out
mov
sbb
insl
pop
hlt
push
jo
movsl
arpl
mov
xor
faddl
jns
jmp
rolb
xchg
sub
mov
pop
sub
mov
mov
repnz
mov
test
jmp
mov
add
movl
test
fs
bound
std
in
leave
mov
add
adc
insb
push
arpl
cli
cmc
or
outsb
adc
pop
adc
aad
add
mov
inc
add
add
std
test
or
insb
add
mov
mov
xor
pop
filds
or
cmp
fldenv
cmp
add
push
adcb
push
add
mov
and
les
iret
verr
add
or
mov
and
jmp
outsl
das
adc
dec
push
sarl
inc
fdivl
add
add
adc
out
mov
mov
push
movsl
in
lahf
xor
aam
call
xor
stc
add
mov
cwtl
push
loope
or
cmp
fs
add
pop
arpl
hlt
push
imul
popa
insb
sbb
xor
dec
add
insb
jnp
movsl
add
shl
adcb
pmaddwd
fnstenv
mov
ljmp
mov
bound
sub
rorl
pop
popa
mov
into
cwtl
sub
add
mov
add
fisttps
xchg
fsubs
shll
push
sbb
outsb
xor
mov
sarb
sub
add
xor
or
fnstsw
add
add
adc
or
leave
and
test
outsl
and
aam
mov
into
push
stc
ficomps
leave
add
sub
cwtl
shlb
pop
cmp
add
lods
insb
push
mov
mov
mov
lcall
shlb
ljmp
fildl
add
fdivl
or
test
cmp
push
or
jp
iret
push
in
add
or
mov
sahf
pop
jge
xchg
rolb
mov
add
incb
ret
pop
push
test
jno
insb
sbb
add
imul
aam
loopne
sub
mov
ficoml
int3
ss
frstor
stc
out
mov
mov
aad
mov
add
mov
shll
cmp
fisttps
icebp
addr16
cmpsb
add
push
mov
dec
ss
add
sub
scas
add
dec
add
pusha
jp
inc
add
out
pusha
fists
addr16
out
mov
jns
imul
sbb
shrb
ss
push
add
inc
or
and
es
mov
mov
xchg
pop
mov
add
mov
add
iret
shlb
sub
scas
ficomps
mov
fs
es
add
insl
add
test
ss
jmp
test
jb
push
add
xchg
adc
mov
mov
cmp
mov
add
mov
out
fdivrl
fisttpl
add
rcl
xchg
aam
add
mov
push
add
push
mov
testb
ja
outsl
ja
mov
ss
jge
jo
ud0
cmp
add
or
adc
sahf
add
sar
imul
insb
push
js
or
xlat
push
addl
mov
add
popa
cmpsl
notl
add
dec
inc
imul
dec
push
scas
fcompl
fldenv
filds
cmp
fdivs
push
scas
mov
mov
inc
jmp
sbb
mov
mov
push
cmpsb
mov
sarb
int
push
ficoms
add
and
jp
mov
dec
add
add
push
outsl
sub
mov
add
sbb
add
add
mov
push
inc
add
push
ret
add
push
xchg
xchg
sbbb
and
dec
insb
pop
outsl
or
pop
lock
cmp
ficoms
mov
pop
repz
push
loop
jbe
or
pop
and
xor
sbb
fwait
outsl
imul
lret
jl
sub
add
jge
in
jge
insb
outsb
sub
gs
gs
xor
jle
add
lock
mov
pop
pop
inc
add
inc
dec
pop
dec
inc
add
pop
push
inc
dec
inc
inc
or
add
orb
inc
push
push
cli
je
pop
pop
jns
add
xor
add
jne
jo
or
outsl
sbb
jns
mov
popa
bound
out
ljmp
daa
push
cmp
sbb
fwait
inc
imul
arpl
hlt
cmp
std
ret
jb
inc
add
popa
adc
xor
cmp
je
jmp
xor
fistps
repz
sarl
pop
daa
pop
sbb
mov
sarb
js
sarb
jae
jb
mov
jae
xchg
or
insb
push
jne
jae
test
dec
inc
push
pop
dec
clc
xor
add
xchg
push
pop
into
setge
or
movsb
pextrw
pop
movsb
lock
cmpsl
mov
and
or
test
loop
dec
in
dec
popf
add
addr16
lahf
sahf
mov
mov
addb
add
add
mov
add
push
shrb
and
add
push
pop
pop
or
aaa
pusha
cmpsb
push
push
pop
mov
add
pusha
faddl
or
jo
js
or
add
or
in
or
add
add
sub
les
iret
xor
sub
outsb
jne
insb
jns
fmuls
sub
mov
fdivrl
and
insl
gs
jb
push
jb
sub
push
inc
pop
push
push
or
dec
sub
add
pop
inc
adc
adc
cmp
inc
adc
xor
leave
rcr
or
mov
jo
cmp
cmp
dec
in
je
roll
ja
push
ja
cmp
xor
out
aaa
ds
imul
or
lea
cmp
lds
arpl
insb
fldt
mov
xchg
pop
sub
pop
das
into
pop
push
pushf
fsubr
loop
pop
das
xor
test
pop
xor
cmpb
xor
arpl
repz
in
test
hlt
push
call
insl
mov
mov
popa
fs
and
imul
out
pop
jle
inc
fs
cs
add
cmp
jo
inc
addr16
pop
insl
and
dec
insl
lret
ss
lock
mov
inc
les
insl
ja
cs
popa
jb
pop
jne
es
movsl
popf
pusha
sub
sub
outsb
sahf
push
jno
je
cmp
adc
pop
fs
dec
pushf
sub
pusha
adc
stos
add
sub
push
jl
dec
sub
bound
or
push
leave
inc
mov
push
jecxz
cmp
add
popa
add
cmp
in
loopne
and
sbb
xchg
out
sub
sbb
aam
push
jne
push
test
popa
mov
popa
lcall
or
jno
inc
dec
jo
jns
mov
test
insb
inc
mov
push
les
outsl
jbe
cltd
lahf
rorb
pop
mov
inc
sbb
xchg
inc
push
cltd
jbe
jb
or
adc
mov
sbb
dec
loopne
popa
addr16
sub
js
add
and
inc
dec
add
ret
add
pop
inc
fsts
pop
rcrb
pop
loopne
fmuls
dec
add
ret
or
or
inc
or
inc
or
into
mov
pop
cmp
or
sub
inc
sub
mov
add
jo
jne
out
popf
add
sbb
push
mov
cwtl
adc
inc
test
adc
xor
rclb
fstl
mov
jle
or
loope
push
cld
js
xor
mov
into
sti
mov
pop
in
icebp
adc
aaa
lds
mov
mov
lods
cmp
push
inc
sbb
push
xchg
jne
pop
inc
popf
dec
out
jle
scas
dec
add
or
lahf
je
sub
sub
js
dec
pop
pop
jmp
push
rorl
mov
imul
jo
in
roll
outsb
pop
cmp
rcrb
out
js
add
mov
xchg
fcomps
and
mov
push
daa
movl
imul
add
push
js
dec
ja
pop
mov
fidivrs
in
mov
mov
daa
js
push
out
pop
loopne
ret
cltd
push
loope
and
ds
and
int3
mov
loopne
jl
aam
loop
shl
rclb
ret
and
adc
adc
push
inc
daa
pop
push
imulb
add
shl
ret
cmp
mov
jp
push
pop
cmp
cs
push
cmp
bnd
int3
and
icebp
or
sbb
out
sahf
cwtl
jns
mov
ret
jns
out
out
mov
and
push
iret
push
xchg
iret
movsb
cmp
shl
loopne
in
cmp
or
and
cmp
dec
jns
jb
sbbb
into
sahf
loopne
lock
jecxz
daa
and
push
rep
iret
test
stos
repz
cmp
cld
icebp
or
and
out
sahf
jo
xchg
jns
loopne
lock
cmp
cmp
push
iret
pop
cmp
test
xchg
iret
cmpsb
cmp
repz
repnz
sub
sbb
sub
cmp
dec
pop
out
sahf
je
jle
out
sahf
shr
or
cmp
jae
adc
add
or
add
pop
iret
adc
xchg
testl
push
xor
cs
sbb
or
insb
arpl
add
sbb
pop
inc
cwtl
xchg
je
gs
mov
dec
outsl
sub
jne
sub
imul
lock
inc
imul
dec
fs
xor
cmp
loop
mov
sbb
push
lds
xor
scas
pop
jns
push
pusha
adc
outsl
inc
jne
cld
add
mov
lock
outsb
or
imul
xorb
ret
pop
outsl
adc
push
popf
jb
subb
dec
popa
mov
insb
push
mov
fstpl
or
inc
push
fistpll
inc
or
cmp
lahf
mov
mov
clc
or
sbb
insl
inc
imul
inc
push
push
jne
push
jns
add
arpl
test
inc
bound
daa
jns
fdivrs
xchg
std
pop
inc
cmpsb
xchg
jbe
cld
or
gs
mov
cmovle
push
jb
adc
mov
mov
mov
adc
mov
shlb
das
fs
sub
cmpsb
fnstsw
in
dec
dec
icebp
je
ljmp
mov
lahf
mov
push
dec
outsl
adc
jns
pop
in
nop
push
push
enter
fbstp
jge
stc
push
dec
bound
aam
stc
push
xor
iret
cmp
and
mov
jb
aaa
les
rclb
inc
lahf
mov
adc
xor
ret
jne
sbb
lds
xor
stc
stc
and
push
outsb
or
jnp
jno
jo
gs
outsl
data16
dec
pmuludq
pop
hlt
sbb
mov
inc
outsl
pop
pop
pop
das
inc
or
nop
pop
mov
push
mov
out
aaa
jae
leave
es
push
push
jo
push
push
imul
sbb
mov
je
cltd
ljmp
jnp
mov
leave
outsb
adc
dec
xchg
out
push
jp
gs
hlt
jnp
je
xor
test
test
push
insb
popa
jecxz
popa
push
ja
adc
bound
xor
push
imul
sub
popa
push
imul
cmp
jo
jmp
inc
jne
insb
in
je
icebp
outsl
push
mov
inc
fptan
inc
xor
jns
jge
movsb
insl
imul
jae
push
jbe
jg
and
imul
jb
sub
xlat
sub
cmpsl
sbb
sub
cmp
ja
js
jbe
fisubrs
dec
repnz
loop
cld
mov
push
je
insb
ja
sarb
jno
and
dec
test
cmp
jb
push
in
jo
js
insl
mov
push
xlat
fnsave
rcrl
inc
stos
les
xor
inc
cmc
xchg
xchg
stc
popa
sub
js
add
testl
fwait
jp
push
cmp
inc
ja
inc
pop
cmpsl
jmp
push
jl
inc
addr16
add
or
or
adc
or
push
imul
dec
mov
push
push
fistps
mov
push
daa
dec
xchg
lods
lds
fiaddl
jmp
insl
sub
cmp
in
pop
sarl
inc
aad
mov
inc
insb
bound
rolb
data16
jle
jecxz
fs
push
pop
out
gs
mov
adc
movsb
fstpl
push
add
inc
add
push
xchg
shlb
or
add
ret
fcoml
sub
outsl
fndisi(8087
nop
inc
jns
rorb
clc
setae
outsb
pop
andl
arpl
or
xor
aaa
pop
adc
push
inc
and
push
push
dec
add
and
dec
inc
push
adc
popl
dec
add
imul
add
ret
addr16
pushf
aaa
push
or
xor
xchg
dec
and
xor
or
push
mov
xor
add
sbb
xor
jae
pop
fstpl
adc
mov
jg
add
dec
inc
sub
inc
stos
pop
inc
add
rolb
mov
cmp
iret
add
call
inc
inc
inc
loopne
inc
dec
dec
dec
pop
dec
movsl
dec
add
push
push
push
push
push
push
or
pop
pop
lea
addr16
insb
insl
outsb
lds
jbe
ja
jns
xor
ss
or
cmp
das
inc
push
add
push
mov
call
ss
call
or
jbe
push
lret
adc
or
aas
icebp
cli
xchg
xor
call
fildl
mov
cwtl
jbe
push
mov
mov
pop
xor
adcb
call
pushf
stos
imul
pusha
call
or
add
addl
addl
arpl
mov
and
mov
push
cmp
pushl
push
mov
bound
mov
mov
mov
fcomip
scas
je
inc
jmp
add
add
sbb
pusha
mov
loopne
mov
mov
clc
add
stc
cmp
sbb
or
jmp
mov
cmp
je
add
testb
int3
std
add
xor
pop
adc
push
and
iret
dec
add
inc
mov
adc
dec
sbb
jmp
cmp
add
add
xor
rclb
pop
ror
add
xchg
addb
and
jne
mov
and
mov
mov
sbb
mov
xor
ret
add
mov
les
xlat
cld
call
cmp
out
cmp
cld
rorb
lods
test
pop
pushf
lret
adc
and
pop
mov
pop
adc
mov
test
sarb
orb
push
or
or
inc
xor
jl
pop
push
mulb
jmp
adc
into
jno
push
popl
jb
repnz
loopne
push
push
sub
add
mov
add
iret
add
push
jmp
nop
iret
add
sub
pop
or
arpl
and
push
cmc
adc
push
add
adc
mov
es
adc
andl
ds
addr16
dec
jmp
jno
lahf
es
sub
cmp
lds
mov
push
sbb
xor
jae
xor
add
ja
inc
mov
sub
xor
ja
mov
cmp
loop
fdivrl
add
jmp
pop
dec
xor
add
add
loop
jmp
call
cltd
cwtl
add
imul
test
flds
xchg
adc
ljmp
loope
add
mov
lea
stos
je
into
enter
or
xchg
add
push
in
xchg
rol
add
jo
pop
adc
add
lcall
inc
fistps
or
push
out
or
adc
outsb
sbb
xchg
adc
lcall
pusha
or
lret
iret
or
gs
push
push
lock
leave
add
push
cwtl
repz
adc
pop
sahf
fwait
cltd
sahf
and
pop
adc
ficomps
mov
insl
sbb
add
adc
insl
stos
inc
sbb
rclb
pop
jnp
adc
mov
pop
pop
fbstp
fimuls
add
or
fisubs
adc
std
into
pop
jno
xor
pusha
enter
add
shlb
ja
pop
jno
addr16
or
cld
in
leave
shlb
jmp
ljmp
in
cld
imul
fsub
das
lock
or
cltd
aad
clc
std
aad
lock
out
or
loopne
add
ljmp
cmpsb
fcomps
sbb
adc
lock
pusha
cmp
cli
xor
xor
cltd
jo
push
outsl
je
popa
insb
cmp
faddl
mov
test
popa
jbe
pop
pushw
mov
insb
outsl
into
xchg
jne
mov
fs
xor
popa
xor
pop
cs
lcall
cmp
pop
sbb
inc
mov
mov
fs
jae
lds
mov
loope
jb
adc
push
sub
jg
ds
push
push
pop
lds
insb
fdivrl
lds
cmp
stos
and
pop
addr16
ss
cmpsl
sub
popa
mov
mov
je
or
popf
rcrl
or
int
out
lahf
lret
push
push
insb
je
sbb
aam
mov
scas
add
sub
int3
jae
mov
xorl
xor
bound
xor
insl
jno
push
cmp
or
mov
mov
sub
data16
mov
outsl
outsl
pop
or
leave
cmc
clc
std
adc
xor
lahf
mov
pop
cmpsb
shl
arpl
and
ja
and
xor
add
add
popa
or
dec
inc
pop
pop
sub
lds
loop
xor
dec
or
imul
inc
push
fcmovb
jb
pop
sbb
sahf
push
jnp
fstl
inc
sub
insl
jo
pop
sub
sub
insb
mov
inc
pop
cmp
add
hlt
rolb
dec
sbb
add
int
inc
cmpb
adc
sbb
cmp
dec
popf
pop
push
lock
sbb
dec
aas
aam
mov
mov
aas
js
insb
iret
dec
cmp
sub
cmp
or
in
dec
cld
das
test
push
xchg
dec
jecxz
push
das
cmp
in
icebp
das
lock
cld
das
mov
out
out
stc
cmp
push
mov
sub
clc
lock
clc
fdivrl
pop
nop
lahf
jo
and
lock
clc
mov
inc
jg
lahf
push
jecxz
inc
clc
cwtl
jl
jg
lahf
dec
lahf
sub
in
inc
loope
inc
cld
jle
jg
lahf
sbb
inc
icebp
insb
jns
and
add
pop
das
rolb
movsb
inc
loop
stc
pop
xor
jle
aas
hlt
inc
xchg
inc
mov
cmp
jle
jg
clc
inc
xchg
inc
icebp
test
xchg
jp
push
push
sub
and
pop
inc
pop
loope
inc
icebp
sar
mov
lahf
pusha
out
mov
aas
sub
clc
aas
pop
hlt
add
mov
insb
aas
loop
out
dec
mov
repz
hlt
paddsb
loope
ds
mov
sub
add
jns
cmp
sbb
ja
mov
sbb
je
out
dec
bound
sbb
data16
push
outsb
or
wrmsr
les
jnp
iret
aaa
xor
shrl
cmp
mov
xor
inc
outsb
ja
arpl
imul
jp
add
cltd
adc
gs
mov
adc
pop
dec
push
push
dec
pop
xor
and
je
ja
and
data16
jo
bound
lds
bound
sub
pop
sbb
xor
inc
test
fisubs
lret
mov
je
lea
dec
add
sub
add
mov
fnstsw
push
stos
ja
insb
insb
sbb
mov
pop
pop
inc
test
mov
fs
fldcw
sbb
xor
and
or
mov
dec
mov
push
inc
and
pop
jp
test
cltd
or
sti
mov
insl
bound
mov
adc
sub
pop
pop
sub
pop
loop
cltd
or
bound
pop
adc
mov
add
jnp
sub
push
arpl
nop
inc
xor
mov
xor
jne
mov
sti
aas
ja
ret
out
aad
pop
punpckldq
aam
out
inc
lahf
sub
mov
outsb
fnstenv
jp
mov
inc
mov
cmp
push
xchg
insl
and
pop
je
inc
fcompl
inc
dec
push
dec
dec
inc
es
inc
xor
popa
bound
mov
xor
jg
inc
insb
cwtl
sbb
imul
sub
inc
push
jae
fisttpll
ss
popa
arpl
imul
mov
dec
notl
jle
jmp
cmp
clc
xor
add
test
cs
push
test
xor
mov
outsl
addr16
repz
jp
and
cmp
add
popf
lods
xlat
adc
add
pop
out
inc
jae
rolb
outsl
inc
push
aaa
fucomp
out
nop
or
cmp
lret
popf
pop
addr16
cmp
in
aas
sbb
push
add
jb
jne
jge
sti
es
lahf
dec
in
sahf
adc
mov
inc
mov
mov
dec
lds
push
out
repz
dec
fmull
in
jnp
inc
jb
imul
inc
jo
add
fisttps
sbb
sti
popf
and
mov
mov
mov
and
dec
fstps
stos
xor
jbe
mov
insb
xlat
pop
out
sub
push
adc
xor
pop
aaa
cmp
ja
les
fldl
dec
inc
out
jae
pop
scas
notb
and
pop
jmp
inc
cmpsb
fwait
sub
push
fstl
dec
mov
xor
pop
push
arpl
push
push
divl
sti
repnz
inc
bound
xor
enter
je
jbe
dec
jmp
lock
xor
xor
je
je
out
lock
shlb
push
iret
jg
push
xchg
cltd
lret
aad
cwtl
lds
sub
outsl
lea
inc
addr16
lods
mov
sub
push
mov
cltd
cmp
fsubl
gs
lock
imul
idivb
clc
dec
dec
sub
push
sbb
inc
xchg
jbe
lds
frstor
mov
lds
mov
dec
daa
insb
and
enter
lea
das
frstor
dec
fs
adc
repnz
xor
sub
jo
das
push
push
xor
add
xor
mov
xchg
push
fisubl
sahf
fdivs
arpl
sub
dec
pop
iret
fnsave
pop
in
punpckldq
imul
dec
push
dec
data16
movsl
aaa
push
adc
jmp
xor
inc
repz
aaa
jb
movb
xor
in
arpl
xchg
dec
int
ss
rorl
imul
aad
outsl
pusha
xor
movsl
in
mov
fs
sub
idivb
and
out
dec
das
loopne
outsl
push
adc
inc
xor
inc
lcall
adcb
sub
aas
lds
lret
iret
pop
sbb
mov
xor
jno
and
pop
insb
lods
adc
mov
fidivrs
ficoml
leavew
es
or
pop
push
not
out
cmp
inc
jne
xchg
and
push
dec
add
sub
sahf
mov
pop
pop
inc
xorl
ds
cwtl
ja
ja
sbb
xchg
cltd
addr16
inc
pop
and
cmp
or
lods
sbb
bound
and
jnp
jae
jns
sub
pop
and
jge
rcrl
add
jnp
enter
jbe
sub
stos
fmull
push
adc
loop
cmp
test
dec
jae
mov
cmpsl
inc
dec
pop
mov
dec
or
bound
mov
push
ret
jmp
popf
in
mov
sbb
add
mov
inc
push
or
mov
addr16
lods
cltd
js
jo
scas
movlps
inc
into
outsb
out
pop
inc
arpl
and
out
lret
shrl
xor
in
jmp
cmp
iret
pop
loop
ror
pop
fisubrl
ja
add
stc
sub
or
and
jns
in
fs
sti
imul
pop
jecxz
inc
outsl
pop
out
jb
dec
adc
pop
sbb
xchg
imul
movsb
cmp
je
aas
loopne
fs
or
cld
mov
mov
inc
in
or
jns
jo
dec
push
or
sbb
inc
xchg
push
push
dec
sahf
adc
lods
xchg
cmp
cli
daa
or
mov
aam
mov
xchg
out
pop
add
test
lret
roll
repz
inc
push
je
pop
cs
pop
cmp
xor
andl
pop
cld
and
fbstp
popa
inc
push
inc
mov
sbb
xor
and
cli
push
iret
xor
xchg
xchg
inc
xor
stos
add
jns
ds
pop
test
mov
repz
mov
fwait
push
sub
sub
add
pop
xlat
add
add
mov
jmp
gs
or
jmp
out
repz
nop
add
imul
pop
xchg
lret
scas
pop
test
and
outsb
push
lret
aam
push
jbe
cs
jbe
lcall
jbe
je
adc
xor
aas
jns
sbb
cmp
ds
inc
add
dec
inc
imul
int
push
pusha
jae
in
pop
xor
sbb
dec
bound
cmp
in
xchg
sub
push
inc
push
push
iret
and
gs
inc
and
nop
xor
sbb
inc
in
data16
xchg
arpl
xor
add
lds
popa
xchg
daa
jnp
ror
insl
adc
in
lods
jno
popa
adc
push
mov
cmp
in
insl
into
and
sub
call
popa
jae
or
push
das
sub
fnstenv
push
or
add
dec
pop
adc
dec
add
sbb
or
mov
dec
je
inc
add
lods
sbb
movsl
push
push
jns
sbb
jp
shlb
xor
fstl
adc
jnp
inc
test
cmp
adc
addr16
push
mov
cs
cs
mov
aaa
cmpsl
mov
cld
dec
cwtl
xchg
jns
arpl
jo
outsl
mov
inc
das
xchg
fcompl
cs
dec
push
inc
xor
inc
push
pop
push
pop
adc
les
dec
icebp
adc
aaa
je
add
sub
inc
jns
rolb
add
adc
and
pop
sub
push
add
imull
inc
cmpb
leave
adc
sub
sub
mov
cmp
add
add
sbb
scas
imul
add
lret
add
test
add
push
add
mov
sbb
add
push
or
xor
inc
je
xor
jmp
dec
jnp
cwtl
jb
jg
lret
add
dec
inc
dec
inc
xor
xor
shrb
pusha
cmp
outsb
mov
or
fists
rcr
adc
je
ja
in
loope
xor
leave
xchg
inc
stc
push
pop
fs
jae
inc
sub
mov
jecxz
push
dec
push
jae
jne
fcmovu
sub
cmp
or
add
pop
or
pop
sub
ficoms
or
push
mov
scas
aam
dec
dec
dec
push
lcall
repnz
neg
mov
and
into
jnp
pop
xchg
push
mov
inc
test
je
and
lods
dec
xlat
pop
sahf
inc
js
push
pop
inc
push
cld
fsubrl
aaa
and
das
and
inc
arpl
fs
mov
xor
cmp
gs
movsl
aas
in
mov
stos
lret
repnz
jns
je
clc
sbb
xor
mov
lcall
xor
xor
ficoms
es
inc
xchg
in
jae
sub
imul
xor
subl
or
arpl
sub
push
and
cmpsl
and
cmp
daa
lcall
mov
dec
and
insl
jns
outsl
nop
fs
arpl
sub
daa
insb
cmp
mov
xchg
jae
mov
sub
xor
sub
into
or
ja
cmp
xchg
sub
popf
adc
mov
sahf
adc
inc
mov
push
popa
lret
popa
sbb
fstpt
adc
add
push
adc
cmp
cmpsb
lret
das
sbb
mov
ss
ret
call
fbld
cmp
scas
cmp
mov
dec
xchg
and
add
aaa
das
outsl
inc
xor
fwait
push
adc
or
push
adcl
xor
mov
rolb
xchg
dec
in
push
cmp
add
arpl
pop
add
pushf
or
aam
dec
imul
jb
adc
dec
dec
cmp
ds
test
sbb
das
and
inc
or
dec
inc
pop
mov
loopne
dec
dec
ds
dec
push
jne
mov
cmpsl
or
jae
icebp
xor
adc
pop
sub
jl
mov
daa
cmp
jge
cwtl
inc
pop
add
xchg
in
xchg
movsb
push
inc
xorl
sbb
mov
inc
in
jb
ret
das
imul
mov
push
pop
fs
cmp
je
jae
pop
pop
cmp
out
lret
jae
fcmovne
jmp
xlat
repnz
lds
in
mov
cmp
sub
daa
das
mov
inc
and
sbb
lds
jmp
je
pop
cmp
insb
and
das
clc
add
mov
aad
mov
dec
cs
add
sbb
mov
shlb
pop
into
inc
cmpsl
jp
or
jmp
not
out
xchg
push
mov
imul
shll
call
jmp
mov
xor
sbb
jno
sbb
cmp
mov
mov
dec
xor
mov
inc
cmp
faddl
das
inc
inc
jp
dec
push
and
ss
and
icebp
leave
add
imull
cltd
in
jl
xor
push
lds
ds
xlat
outsb
xor
pop
pop
or
dec
push
mov
xor
fcoml
jo
pop
sbb
lahf
mov
and
adc
and
or
arpl
sti
ss
dec
cmpsb
out
cmp
repz
push
push
movsb
fcmovu
dec
cmp
dec
inc
sub
dec
pop
dec
pop
adc
ljmp
int3
xor
outsl
jo
dec
sub
push
stos
xor
in
push
cmp
jge
stos
aaa
sub
adc
stos
movsl
cmp
jne
sub
xchg
daa
iret
push
faddl
sbb
push
push
inc
pop
push
mov
push
jo
addb
faddl
shrb
cmpsl
push
call
xor
testl
into
xor
push
mov
je
std
push
movl
jmp
jbe
or
shl
push
add
ja
into
cmp
mov
je
std
push
lds
jns
lods
xor
push
jno
jp
adc
clc
xor
jnp
xor
xor
rol
adc
add
pop
xor
xor
or
push
push
in
xor
or
aam
inc
shrb
xor
push
and
cmpsb
mov
pop
xor
sub
lahf
xor
lahf
ss
aaa
sbb
cmp
cmp
lret
mov
fs
xchg
mov
push
pop
aam
dec
mov
sub
inc
sbb
adc
test
mov
cld
or
call
inc
mov
out
mov
mov
aam
jns
jns
or
aaa
repz
repz
movsb
sbb
imul
movl
mov
fldt
icebp
or
push
and
ja
jge
nop
jb
popa
repz
push
jae
add
add
movsb
fs
inc
test
inc
repnz
je
pop
inc
add
or
inc
adc
movl
test
mov
mov
loop
dec
aam
jns
insb
outsb
or
add
mov
cmp
daa
or
xchg
jp
jecxz
mov
jle
je
mov
or
aam
jns
jbe
or
add
inc
pop
jno
aam
dec
outsb
outsb
or
add
dec
add
or
dec
adc
lahf
sub
cmp
mov
add
push
cmp
das
clc
jle,pn
jns
pop
icebp
jl
daa
cmp
pop
inc
inc
cmc
or
push
icebp
out
pop
xchg
jl
or
jns
sti
push
out
daa
push
call
int
aas
push
jno
xchg
test
pop
mov
aaa
push
mov
push
push
pop
jle
inc
add
rcrb
dec
inc
pop
pop
push
mov
fildl
dec
inc
push
fildl
jmp
inc
inc
mov
cld
push
add
inc
xchg
pop
xor
add
ror
inc
cltd
cmp
mov
fadds
dec
or
push
pop
push
push
add
aas
push
dec
add
pop
push
inc
xor
push
xor
sub
sbb
sub
sub
dec
fldt
fwait
push
lret
jnp
push
shll
xor
jno
aam
imul
in
icebp
pop
xor
xor
xchg
lods
lods
xor
arpl
cmp
mov
test
out
cmp
test
out
cmp
mov
cmp
lea
cmpsl
cs
add
cmp
push
and
and
cmp
inc
jae
push
mov
roll
mov
pushw
and
adc
jb
fs
xlat
fsubrl
xor
popa
jo
adc
push
xchg
jb
cmp
or
addr16
inc
sbb
or
imul
jbe
sub
sbb
dec
retw
jnp
rorb
mov
in
clts
in
adc
xor
xorl
mov
inc
push
add
pop
arpl
push
dec
loope
dec
outsl
bound
out
push
xchg
sub
pop
jp
sub
push
les
dec
sbb
inc
xor
pop
jecxz
out
lock
adc
sub
jb
pop
mov
je
lods
adc
imul
push
into
lods
call
push
or
jo
xor
das
inc
and
sbb
lea
lret
popf
cmp
repz
fs
inc
outsb
pop
bound
mov
inc
lret
lret
fs
std
cmpps
aam
out
aas
into
or
in
popa
push
dec
inc
jl
inc
mov
in
and
iret
adc
push
test
mov
in
adc
pop
cmpsl
pusha
or
sub
das
loope
arpl
cmp
popf
lret
inc
and
ror
mov
jne
add
adc
xor
sbb
sub
es
fxch
dec
stos
or
adc
and
popf
push
jb
inc
mov
mov
adcl
adc
fldenv
dec
mov
mov
push
jno
adc
lahf
adc
mov
dec
push
fiadds
push
out
sbb
mov
sub
sbb
mov
xor
into
sub
xor
push
jns
adc
cvtdq2ps
sub
inc
mov
sbb
ret
lret
mov
add
sbb
bound
push
aaa
stos
adc
mov
in
or
pop
push
dec
das
je
pop
cmp
jno
outsl
mov
hlt
pop
push
outsb
insb
std
rorl
mov
mov
sub
push
imul
push
inc
scas
inc
cwtl
popa
jo
or
dec
imul
mov
dec
jae
xor
mov
arpl
testb
arpl
add
pop
dec
jae
jecxz
lret
xchg
jp
movaps
inc
imul
and
nop
mov
bound
adc
inc
cmp
or
fcoml
adc
mov
mov
and
xor
push
stos
push
and
repz
xchg
sub
push
dec
fisttpl
in
jae
ds
inc
fstpl
fstpt
mov
adc
and
or
push
jnp
cmovae
dec
jb
jb
adc
es
outsl
popa
sub
pushl
dec
outsl
adc
mov
mov
xor
push
sub
das
mov
pop
jmp
xor
andps
test
adc
aas
pop
inc
jnp
cmpsl
adc
mov
jecxz
addr16
mov
push
sbb
mov
or
js
cmp
lea
cmpsb
push
fstl
imul
jae
imul
bound
aas
or
popa
cmp
mov
adc
dec
cmp
jnp
sub
ljmp
lahf
mov
push
dec
es
push
jg
dec
xor
hlt
sbb
inc
enter
mov
mov
sbb
push
test
xchg
inc
dec
mov
xchg
outsb
xchg
pushf
adc
addr16
psrlq
and
mov
mov
call
addr16
aaa
hlt
sahf
push
mov
push
imul
insb
mov
pop
mov
mov
add
pusha
inc
cmpsb
scas
in
or
rolb
rorl
lds
inc
mov
jo
sbb
dec
out
std
sbb
shr
sbb
dec
outsl
sbb
inc
dec
ds
pop
mov
adc
push
imul
sbb
inc
fs
mov
mov
call
fnsave
push
and
stos
aaa
loope
dec
push
pop
inc
sub
or
sub
or
jne
inc
rcll
les
and
imul
and
arpl
or
add
mov
data16
cmp
jo
in
and
xchg
and
push
xor
or
imul
and
xor
fwait
jecxz
bound
addl
das
sub
sahf
and
sbb
adc
stc
add
cld
jae
mov
in
jae
mov
aam
mov
sti
inc
inc
xchg
jecxz
ja
mov
test
test
fs
imul
xchg
filds
cmp
dec
leave
pop
fs
xchg
mov
mov
pop
arpl
sbbl
push
and
leave
cmpsb
mov
push
rorb
es
fbld
sub
sti
daa
mov
daa
cmp
daa
cmpsl
bound
std
sbb
aas
inc
outsb
movsl
jns
stos
fistl
mov
jg
push
push
xor
and
xlat
xchg
sbb
mov
pop
pop
lock
push
sub
sub
sti
leave
mov
add
pop
dec
int3
or
cmpsb
mov
push
fcoml
dec
arpl
adc
nop
movswl
jae
jg
lds
aam
sbb
fs
xor
cmp
cmc
mov
and
aaa
lcall
lds
out
xchg
and
cmp
or
jne
mov
ja
int3
mov
addr16
xor
jo
loopw
popa
out
dec
sbb
sub
hlt
scas
sub
add
incb
mov
inc
outsb
jmp
scas
int
ja
in
pop
pushf
arpl
ljmp
dec
push
insl
push
jne
hlt
xor
daa
xchg
imul
pop
addr16
adc
dec
jecxz
psubq
popf
ret
mov
cmpsb
cmpsl
dec
or
dec
scas
or
adc
or
dec
and
test
ljmp
popa
rorl
adc
gs
insl
jle
mov
mov
pop
lock
xchg
insl
mov
add
cld
lret
sub
inc
jb
fdivl
insl
addr16
and
jge
mov
sub
xchg
lcall
fucomi
xor
int
push
imul
mov
xor
or
push
mov
or
and
mov
push
mov
push
adc
pop
outsb
or
or
mov
pop
lcall
inc
inc
and
rclb
ja
gs
add
pop
xchg
sub
add
test
sbb
mov
jnp
ret
cmp
shl
and
sub
mov
jne
add
rcll
pushf
insb
add
pop
gs
push
insl
js
call
cmp
push
arpl
imul
or
add
and
jnp
or
jmp
fwait
outsl
fisubs
jge
lods
or
pop
testl
push
test
xor
push
jae
push
xor
sub
popa
es
hlt
mov
cmp
adc
lcall
mov
push
push
pop
add
shll
push
add
stos
push
dec
scas
cwtl
repz
dec
mov
mov
sbb
mulps
dec
inc
mov
imul
ficompl
lret
movsb
xor
sbb
adc
sahf
je
out
push
mov
dec
sub
ret
jnp
or
inc
and
shlb
push
jb
mov
push
add
jne
jecxz
fsubs
mov
inc
push
shlb
les
and
and
dec
add
inc
jne
testl
cmp
in
or
mov
and
sti
mov
ljmp
ficoml
inc
push
xchg
sub
cmc
arpl
out
scas
out
fwait
shrl
jns
sahf
mov
int
push
xchg
mov
rcl
out
lods
dec
repnz
aaa
cmc
inc
add
jge
cmp
and
push
inc
mov
outsl
sub
xchg
aad
movsb
or
faddl
sub
pushfw
pop
in
daa
lods
mov
outsl
mov
push
rcrb
mov
mov
jmp
das
jmp
aad
outsl
nop
jge
or
mov
mov
mov
sub
aam
outsl
insb
jecxz
and
or
xchg
add
out
or
pop
dec
mov
movsl
enter
loope
xor
icebp
push
negb
pusha
push
cmpsb
xor
dec
adc
and
daa
int3
outsl
jb
rcll
cli
rol
aam
mov
out
dec
mov
aam
adc
cs
aaa
inc
push
ja
into
push
mov
lcall
dec
pop
dec
mov
stc
pop
mov
je
mov
dec
or
fcmovu
sub
push
pop
insb
imul
dec
xchg
in
dec
jmp
sahf
mov
cmp
mov
or
mov
push
and
mov
pop
cmpsl
clc
dec
add
pop
pop
add
addr16
out
sub
pop
push
dec
dec
inc
push
dec
jb
mov
sub
daa
cmp
sti
and
pop
push
inc
push
mov
jge
aas
dec
mov
sub
imul
dec
jbe
pop
shll
pop
insl
ds
out
pop
pop
push
out
push
daa
sbb
mov
pop
xchg
add
sbb
and
int3
icebp
cmp
pop
into
and
inc
out
into
and
and
es
into
sub
sub
das
out
into
pop
cld
cmp
daa
out
into
pusha
cld
jle
into
and
arpl
cmp
mov
pop
stc
and
popf
inc
stc
and
popf
and
es
sub
popf
sub
das
stc
pop
fistps
popf
daa
stc
pusha
fistps
xchg
cs
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
pop
jp
lea
cld
and
into
and
in
gs
pop
ja
in
into
out
jmp
and
into
and
and
and
and
xlat
out
cmp
jecxz
mov
adc
orb
dec
and
mov
dec
dec
inc
pop
dec
sub
push
inc
push
out
xchg
out
repz
jmp
adc
xor
or
pop
push
pop
push
inc
loop
sub
gs
mov
jns
das
lcall
add
jl
push
cs
inc
dec
jg
and
adc
gs
pop
cli
add
ja
faddl
cwtl
xchg
push
cwtl
ss
dec
inc
or
push
in
lock
inc
push
add
add
jae
imul
mov
rorl
and
mov
pop
fdivrs
gs
xor
test
cli
push
push
cmpsl
add
pop
sbb
insb
add
jb
mov
es
dec
mov
repnz
punpckldq
dec
mov
dec
xor
pop
and
shll
insl
sub
lcall
or
xor
sub
add
call
jmp
adc
nop
sbb
insb
cmp
add
aaa
jns
je
je
roll
das
jno
pop
push
xchg
xchg
iret
rorl
lcall
xchg
outsb
sbb
jno
xor
xor
xor
mov
xor
sub
das
push
outsb
pushf
jne
loope
dec
inc
add
xchg
mov
sub
jae
lock
aam
pop
add
loopne
aam
int3
cmp
mov
cmp
cwtl
pause
iret
mov
je
push
dec
repz
iret
cmp
and
sbb
adc
add
jns
add
clc
mov
in
sbb
mov
jo
shlb
enter
mov
mov
cmp
nop
mov
jl
mov
insb
jns
pop
out
mov
cmp
jo
xor
loope
mov
sbb
adc
add
hlt
mov
mov
int3
mov
sahf
sbb
test
mov
mov
or
cmp
jo
insb
iret
push
pop
iret
push
cmp
inc
repz
xor
sub
repz
sbb
xor
repz
or
cld
jno
hlt
out
sahf
in
push
fdivl
aam
loop
out
rcrb
cwtl
sahf
nop
jns
test
sbbb
pop
sahf
dec
jns
cmp
xor
jecxz
sahf
hlt
cmp
call
cmp
shl
iret
mov
lods
movsb
repz
iret
xchg
cmp
mov
test
jl
je
repz
pop
cmp
insl
sahf
pop
leave
mov
dec
adc
cmp
sbb
sahf
cmp
and
adc
or
lods
pop
or
popf
loope
popf
call
enter
sarb
out
sahf
mov
push
sbb
popf
cmp
pushf
popf
loope
popf
mov
mov
test
je
xchg
pusha
popf
sbb
popf
cmp
inc
jo
inc
popf
loope
popf
ret
xor
xchg
sbb
cmp
popf
add
popf
clc
pushf
loope
pushf
ret
lock
xchg
pushf
push
in
sbb
pushf
cmp
pushf
int3
jo
rcrb
xchg
pushf
pushf
cmp
pushf
loope
pushf
ret
jo
xchg
pop
pushf
sbb
pushf
cmp
dec
jo
inc
pushf
loope
pushf
ret
xor
xchg
push
and
pushf
add
pushf
add
cld
fwait
hlt
sahf
in
jns
fsub
rcrb
out
sahf
lods
jns
pushf
out
sahf
mov
je
push
pop
out
sahf
dec
jns
cmp
xor
out
sahf
or
add
lcall
aam
enter
sarb
mov
cmp
mov
test
cmpb
repz
pop
cmp
push
repz
iret
dec
cmp
inc
repz
cmp
xor
sub
sub
and
sbb
sbb
adc
or
or
add
clc
cltd
lock
call
enter
mov
out
sahf
cmpb
out
sahf
pusha
jns
dec
out
sahf
cmp
xor
out
sahf
sbb
adc
out
mov
cwtl
cmp
in
repz
fdivrl
int3
repz
iret
mov
movsb
iret
pushf
cmp
mov
test
jl
je
repz
pop
cmp
dec
repz
iret
cmp
xor
repz
and
adc
cwtl
pop
add
clc
jno
in
out
sahf
fdivrs
enter
mov
mov
mov
sbbb
pop
sahf
push
jns
inc
out
sahf
xor
sub
out
sahf
adc
or
jecxz
xchg
hlt
cmp
in
fmul
aam
int3
repz
movsb
repz
iret
xchg
cmp
test
jl
je
insb
fs
iret
push
cmp
inc
repz
xor
sub
repz
adc
or
icebp
cld
xchg
hlt
sahf
in
jns
fsubr
fstl
aam
sbb
xchg
cmp
xchg
mov
loope
xchg
ret
test
xchg
sbb
xchg
cmp
js
loope
xchg
ret
push
push
pop
xchg
sbb
xchg
cmp
jo
xor
and
xchg
xchg
push
sbb
sbb
xchg
cmp
xchg
loope
xchg
ret
hlt
xchg
push
dec
bound
scas
xor
dec
xor
cmp
xor
ss
aaa
cmp
cmp
mov
faddl
pop
pop
sub
ret
adc
inc
xlat
add
add
inc
inc
adc
dec
add
inc
dec
push
sbb
dec
dec
adc
inc
push
rorl
inc
dec
inc
pop
push
sub
dec
push
insl
jae
pop
mov
push
push
dec
inc
adc
pop
xor
ss
pop
pushf
xor
lcall
xor
xor
push
aas
add
add
add
xor
xor
pop
lahf
ss
xor
aas
pop
aas
cmp
aaa
aas
ss
xor
aas
xor
xor
xor
cmp
cmp
cmp
cmp
aaa
lahf
aaa
lahf
aaa
lahf
aaa
lahf
aaa
lahf
aaa
lahf
aaa
lahf
aaa
lahf
aaa
lahf
aaa
lahf
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
xor
lahf
xor
lahf
xor
add
mov
popa
jae
clc
bound
repnz
jb
and
popf
pop
mov
jb
push
pop
mov
push
icebp
pop
jb
push
pushf
pop
stc
push
iret
pop
push
popf
pop
xchg
jb
rcl
inc
xor
jl
jbe
fisttpl
jae
cmpsl
add
insl
lea
out
pop
das
idivl
pop
jns
lret
pop
push
into
pop
pop
pop
jo
xor
clc
xor
xor
sbb
xor
fisttpl
push
xchg
adc
xchg
xor
mov
out
ja
sahf
mov
ja
das
ja
inc
jns
lds
popf
add
insb
lock
imul
push
lds
xor
push
cmp
add
mov
gs
ja
jae
push
jno
jp
jno
ja
gs
es
pop
jb
add
add
add
popa
ja
pushf
mov
pop
jl
jl
stc
pop
into
outsl
jae
pushf
orl
cld
jg
cmp
into
add
add
jl
jl
jl
cmc
add
mov
xchg
xor
dec
xor
sarb
xor
xor
xor
popf
lea
imul
push
and
stos
les
in
inc
push
and
and
and
add
es
sub
repz
add
fsubrs
and
add
inc
and
and
jle
cld
pop
add
add
in
add
cmp
outsb
or
add
jl
jl
jl
hlt
add
lret
cmp
pop
add
cmp
mov
out
out
movl
inc
insb
aaa
mov
xchg
add
jecxz
mov
jl
jl
jl
hlt
add
lret
add
outsb
or
add
add
add
add
add
push
xor
or
add
jl
jl
jl
testb
mov
add
cmp
mov
out
out
movl
push
insb
pop
xor
jecxz
mov
jl
jl
jl
cmc
add
lret
xor
pop
add
cmp
mov
out
out
movl
inc
ss
pop
xor
lret
add
jno
fdivl
aas
pop
add
add
add
jno
ja
mov
mov
xor
or
cmp
xor
cmp
test
add
or
aam
adc
jle
je
call
mov
add
add
rolb
pop
push
adc
jns
notl
insl
popa
sbb
sub
add
shlb
xchg
popa
imul
mov
and
pop
push
pop
inc
jae,pn
mov
cmpsl
test
or
imul
and
shrl
insb
mov
pop
outsl
adc
mov
bound
xor
sbb
pop
xlat
push
ret
cmpsl
sub
dec
pop
cmpsl
sbb
punpckldq
and
cmpsl
pop
cmp
popf
daa
mov
fisubrs
jmp
jne
cmp
mov
loop
outsl
into
sub
insb
fsubrs
arpl
data16
shll
sbb
arpl
xchg
sub
fdivr
xchg
ret
popf
bound
sahf
pop
fs
pop
iret
xor
inc
imul
dec
inc
gs
or
or
mov
stos
outsb
dec
imul
bound
adc
pop
jae
xor
push
mov
xor
or
js
insl
aad
mov
data16
mov
push
push
bound
pop
cmpsb
sub
lret
push
add
adc
shll
flds
inc
int
pop
addr16
pop
ret
xor
mov
inc
ja
ror
out
adc
mov
mov
cmp
ja
or
ss
shr
pop
test
mov
push
imul
add
gs
pusha
les
insb
mov
push
cs
je
lea
divb
lods
jns
jnp
add
lret
fwait
sbb
adc
mov
insl
movsb
shl
ret
outsb
mov
je
shlb
out
stos
das
int3
xor
pop
aas
xor
pop
movsb
jne
popf
add
add
pop
add
add
add
add
push
jo
leave
addr16
daa
ss
mov
or
cmp
popa
fs
add
push
mov
movsb
pop
mov
addr16
fwait
dec
pop
ja
daa
pusha
imul
push
inc
ror
leave
mov
popf
jne
lea
loop
addr16
lret
mov
ja
sbb
jmp
lahf
and
cmp
dec
jge
shlb
xor
dec
subl
je
addr16
mov
inc
fldl
lahf
jae
ss
cli
or
jb
xchg
push
cmp
imulb
in
cmovne
and
jbe
xor
and
aad
mulb
inc
out
insl
and
out
inc
xchg
add
inc
test
test
xchg
punpckhbw
lret
xor
add
loopne
add
and
inc
mov
in
push
adc
inc
dec
dec
push
push
mov
cmp
sub
cmp
sbb
dec
insl
js
test
insl
mov
mov
bound
rcrl
or
dec
shll
inc
rcll
into
and
in
push
decl
pop
xor
mov
je
xchg
push
mov
fisubrs
pop
push
dec
fnstsw
jle
pop
xchg
push
scas
mov
imul
mov
int
pop
movsb
xchg
fnstenv
int3
mov
ds
daa
mov
cmp
dec
out
test
pop
xchg
push
inc
push
push
inc
or
push
add
fdivl
push
addr16
aaa
push
or
dec
xor
push
xor
push
lahf
mov
cmp
push
cs
test
mov
aam
stos
aam
mov
dec
or
outsl
pop
gs
int
movsb
inc
dec
mov
scas
pop
jb
mov
mov
das
fs
cmp
je
movsl
or
push
mov
and
hlt
xchg
das
dec
inc
adc
pop
push
dec
pop
mov
dec
push
xor
movsl
lret
jge
push
dec
daa
out
mov
imul
je
pusha
cs
aas
ja
dec
ja
iret
xor
pop
jp
outsb
cmp
aaa
inc
mov
add
lods
mov
lds
add
test
push
mov
imul
data16
sbb
push
sahf
cmp
push
push
hlt
jns
cmpsl
cmpsl
jmp
roll
mov
push
push
in
fistps
mov
mov
popf
and
fldenv
xchg
lahf
jnp
inc
mov
subl
and
pop
pop
sub
cmp
mov
test
data16
cmp
jnp
ljmp
imul
outsl
outsl
sahf
adc
outsl
outsl
mov
cmc
and
hlt
dec
sti
movsl
dec
jge
xchg
push
div
pop
mov
ss
es
add
fstl
mov
push
jl
aaa
pusha
push
daa
xchg
stc
adc
xchg
outsl
adc
es
jb
popf
push
dec
in
cltd
mov
stos
xorb
xchg
inc
mov
loop
outsl
sub
and
insb
imul
pop
xchg
push
out
pop
cmpsb
push
jmp
ja
out
outsl
out
imul
idiv
sub
daa
dec
mov
mov
pop
aam
add
adc
ret
cmp
shll
sub
inc
add
test
ret
insb
pop
jns
cmpsl
stos
mov
pop
js
sbb
shl
dec
dec
mov
leave
push
jmp
mov
movsb
cli
xlat
jge
and
lcall
and
and
mov
lcall
xchg
jns
push
test
jae
rorl
ljmp
push
imul
pop
out
repnz
sti
sbb
rolb
das
pop
xchg
outsl
mov
mov
ja
push
dec
push
popf
jmp
jae
outsl
jne
sbb
test
movsb
add
push
adc
mov
and
out
cmpsb
sub
mov
in
inc
lret
inc
and
pop
cmpsb
rcll
mov
mov
push
mov
ret
xor
pop
in
sbb
popa
push
arpl
mov
cmp
and
fadds
insl
cs
inc
jnp
push
pop
aaa
jbe
push
fstl
add
mov
xchg
mulb
push
dec
fists
repz
movsb
imul
mov
and
inc
and
mov
sbb
sub
pop
fucom
mov
sbb
push
xchg
xor
sub
jecxz
xor
decl
std
pop
inc
lods
iret
gs
js
insb
xor
sub
push
sub
mov
cmpsl
test
push
xor
subl
rcrl
or
arpl
xor
push
es
dec
test
xchg
push
scas
jl
or
dec
dec
movsl
and
sbb
shll
cmp
jb
inc
ja
and
xor
arpl
lahf
push
fwait
fwait
stos
jnp
shll
push
xor
lds
xchg
arpl
das
adc
xor
stos
pop
mov
push
push
inc
inc
push
inc
or
xchg
push
movsb
test
and
mov
out
push
pop
ja
inc
mov
push
movsb
cmp
mov
aaa
pop
inc
daa
je
inc
jne
popa
push
jns
add
pop
inc
inc
pop
and
sti
adc
xchg
or
pop
sub
push
pop
aad
jae
aad
push
pop
push
jmp
cmp
fsubrs
pop
jge
addr16
nop
movsbl
xor
idivl
mov
cmp
fidivrl
fs
mov
mov
in
pushf
das
and
popa
xor
enter
popa
jb
lahf
repz
sbb
stos
ja
fldt
cmp
mov
dec
pop
dec
mov
sti
lods
xor
pop
call
mov
test
xchg
inc
dec
jns
lcall
dec
lds
inc
xor
fdivr
cmpl
ret
push
xor
imul
outsb
cmp
cmp
xchg
push
adc
pop
sub
mov
xlat
and
sub
adc
inc
andl
push
add
mov
int
sbb
jle
lahf
rcrb
lret
out
sahf
push
jp
outsb
jl
pop
popa
mov
lcall
cltd
push
std
mov
in
mov
push
sub
ret
pop
stos
fnstenv
jle
lret
mov
dec
adc
imul
mov
push
xchg
outsl
fs
jb
jns
cmp
imul
idiv
xor
or
dec
pop
add
andb
rolb
inc
push
xchg
movsb
push
xchg
jae
pop
push
xlat
lret
out
ja
xor
out
cmp
rcrl
mov
push
push
test
xor
scas
and
pop
inc
vpshuflw
cld
jns
jo
daa
sbb
out
cli
xor
mov
push
jo
add
inc
mov
jg
out
and
push
sbb
fdivr
or
addr16
arpl
or
xchg
mov
imul
addr16
test
test
jne
mov
mov
jo
dec
imul
dec
nop
adc
sub
cmp
and
mov
xchg
sub
je
jge
sbb
xor
mov
xor
sarb
jne
add
cmp
or
or
sub
loopne
lret
je
pop
jae
push
sbb
jns
roll
test
jne
add
fs
sub
mov
xchg
add
movsb
add
jo
pop
rcr
pop
fimuls
cs
add
add
popa
dec
cmpsl
cmovl
cmp
cmp
fbstp
shl
lods
imul
adc
pop
pop
jns
add
lds
testl
mov
mov
xchg
or
mov
in
sub
loop
add
je
idivl
mov
jo
out
sti
ret
fldl
and
mov
jae
movsl
mull
movsb
add
std
mov
xor
or
pop
enter
xor
sbb
and
mov
xchg
mov
xchg
pop
fsubrs
inc
inc
jmp
cs
and
jecxz
aam
lret
xchg
lea
sbb
outsl
mov
cmp
imul
inc
push
jae
jo
imul
outsb
inc
movsl
adc
outsl
popa
mov
je
popa
inc
mov
push
lcall
mov
sbb
lods
sti
xchg
imul
imulb
adc
aaa
lret
jmp
sub
pop
add
stos
imul
les
arpl
add
push
mov
cld
cmpsb
jmp
pop
mov
in
inc
pushf
fildl
mov
outsb
daa
mull
stos
outsb
rcrb
inc
inc
jae
dec
data16
fnsave
mov
aas
cmp
lret
push
pop
fisttpl
xor
mov
repz
arpl
push
xchg
sub
fwait
popf
pop
rdmsr
cmp
mov
into
pop
add
addr16
ja
cmovle
cwtl
xlat
pop
imul
xor
imul
ret
mov
mov
mov
push
out
add
iret
sbb
addr16
idivl
add
js
cmovnp
iret
mov
cmp
jmp
jno
xor
jno
or
dec
fdivrs
dec
data16
fbld
inc
fs
mov
bound
ficomps
test
mov
jnp
pop
xchg
test
je
adc
pop
adc
inc
out
pop
into
adc
jo
mov
or
pop
inc
jns
or
ret
jo
adc
pop
insb
into
or
jno
jecxz
test
ret
or
cltd
xchg
repz
icebp
jmp
pop
sbb
shrb
icebp
repz
pop
outsl
call
or
test
fldenv
daa
xor
mov
pcmpeqw
je
movsb
mov
movsl
xor
xor
negl
jae
jb
test
jae
sbb
outsb
or
in
add
pop
cmp
push
pop
iret
push
push
cmp
mov
mov
dec
out
sub
in
sub
push
fistpl
sub
sub
imul
or
dec
jns
mov
mov
mov
aas
das
jbe
popf
addr16
xchg
aam
mov
ds
movsl
out
or
inc
cmp
and
shll
test
or
jle
fxch
repnz
mov
idivl
jmp
imul
mov
lcall
aam
ss
push
daa
fcmove
ljmp
sbb
outsb
sbb
fimull
aaa
adc
push
jne
and
ds
push
lods
daa
lret
daa
mov
xorl
push
xor
repz
jns
aam
test
jg
dec
and
mov
jae
jns
into
pop
shld
pop
mov
mov
mov
inc
jbe
mov
inc
test
inc
movsl
and
sbb
sbb
mov
and
sub
inc
push
sar
lcall
and
nop
and
test
and
cmp
sub
xchg
sub
loop
popa
add
in
jne
pop
dec
das
imulb
mov
test
sti
movsl
test
hlt
xchg
scas
xlat
jae
popl
mov
inc
push
outsl
and
fisubl
ja
inc
cmpsl
mov
out
cmp
jno
mov
repz
push
inc
in
or
push
pop
mov
inc
push
imul
test
add
xchg
fwait
dec
cmp
jmp
mov
arpl
mov
xor
push
je
inc
cmp
pusha
out
jg
testb
push
dec
push
dec
jge
in
xor
pushf
inc
js
xor
xor
lret
cwtl
cmp
dec
dec
das
mov
add
add
jecxz
arpl
outsb
repnz
dec
sahf
aaa
fcoml
sarl
inc
imul
loop
jg
inc
aad
dec
mov
movlps
sbb
xchg
popf
dec
int3
int3
jo
mov
xor
test
mov
xor
out
dec
mov
and
lods
cli
jl
cld
fwait
add
mov
and
mov
xchg
jg
aaa
xor
in
call
mulb
les
cs
cltd
mov
sub
pop
cmpsl
popf
dec
repz
testb
roll
mov
or
or
fsubl
xlat
das
mov
shrb
not
ljmp
cmp
fcmovnb
iret
jecxz
xchg
jg
nop
pop
mull
cmp
negl
outsb
aas
repnz
mov
arpl
push
add
mov
stos
cli
xchg
loope
pop
rolb
jb
mov
test
dec
and
pop
inc
add
xchg
mov
jbe
mov
adc
cmp
xchg
pop
xor
mov
mov
outsl
lcall
mov
jmp
mov
inc
jl
add
add
dec
popa
jmp
push
lds
jb
dec
inc
xchg
xor
push
shlb
or
outsl
xor
jmp
inc
sti
dec
and
lret
and
enter
into
shlb
cld
pop
cld
jno
clc
jae
hlt
iret
lock
inc
cmp
fsubrp
pop
js
inc
inc
dec
dec
inc
testl
fucomi
dec
push
lahf
push
inc
sbb
mov
test
add
js
and
jecxz
out
push
lret
push
cmp
jge
mov
pop
mov
inc
jne
jae
jae
mov
jno
fdivl
mov
fnsave
pop
pop
dec
sub
mull
push
push
test
mov
push
aad
mov
out
aaa
jmp
arpl
xor
dec
fbld
mov
dec
dec
jmp
jbe
shlb
mov
and
or
xchg
cmpsl
mov
dec
int
add
or
xchg
jo
jno
and
mov
lods
fcomi
dec
xchg
cmp
push
outsb
jb
mov
adc
dec
cmp
pop
pop
ja
sub
mov
loop
pop
mov
jmp
pop
fcmovnu
movsb
cwtl
and
inc
pop
inc
das
lret
push
out
inc
push
cli
rsqrtps
inc
out
addr16
nop
popf
aaa
lds
mov
cmp
fwait
jae
xor
pop
jno
fdivr
xor
adc
or
jp
das
insb
inc
addb
add
add
add
leave
mov
xorb
pop
inc
loop
pop
mov
out
or
pusha
ja
add
and
roll
jmp
or
push
lea
add
add
add
add
mov
inc
and
add
pusha
push
pop
push
adc
adc
inc
jne
mov
popa
or
je
cltd
or
ret
adc
mov
test
pushl
repnz
push
xor
adc
lret
pushf
cmp
adc
imul
cmp
cld
add
call
call
test
loopne
ret
pop
pop
pop
or
in
push
sahf
add
mov
xlat
rep
mov
stos
push
push
and
and
daa
add
add
or
rol
sub
in
imul
jmp
arpl
out
aaa
imul
add
cwtl
push
jne
xor
add
sub
stc
and
mov
fcmovb
xchg
fsubp
pop
imul
jnp
popf
and
mov
dec
xchg
pop
push
insb
push
fisubrl
inc
dec
sub
pop
inc
push
push
push
andb
sub
jp
cwtl
testl
push
movsb
mov
cmp
sbb
pop
dec
scas
push
repnz
ds
dec
xor
es
jnp
sub
inc
test
or
push
fs
gs
adc
out
mov
addr16
push
imul
in
loop
dec
ret
add
jns
and
outsl
push
add
xor
in
orl
inc
cmp
stos
adc
dec
inc
lds
adc
dec
inc
xchg
gs
lods
and
dec
push
stc
aam
movsl
xor
push
dec
outsb
mov
mov
sub
add
ret
pop
fistl
das
push
dec
std
aam
in
pop
add
shr
addr16
loopne
inc
imul
or
and
clc
xchg
pop
adc
sub
cmp
enter
push
dec
jbe
inc
adc
test
dec
inc
iret
hlt
push
cmp
mov
rcrl
and
daa
cmpsb
and
pop
mov
inc
push
push
fldenv
out
ja
jmp
insb
mov
push
sbb
pop
insb
jg
adc
inc
push
push
ja
inc
inc
notb
add
fldl
stc
jns
add
push
pop
repz
and
pop
arpl
add
pop
ja
mov
pop
mov
jno
jne
xor
add
cltd
add
rcl
pop
pop
add
mov
add
pop
ja
mov
roll
popf
flds
pop
push
xchg
incl
lret
lock
push
push
xor
push
adc
and
or
sbb
repz
sbb
pop
repz
or
pop
push
sahf
lock
call
jns
fsub
add
int3
out
sahf
enter
out
sahf
mov
adc
movsb
out
sahf
pushf
jns
xchg
out
sahf
mov
test
pop
sahf
jl
and
and
out
add
clc
add
movups
pop
and
xor
inc
inc
and
addb
fldl
xchg
sbb
outsl
pop
mov
mov
xor
mov
sub
add
cs
ljmp
lret
dec
mov
add
into
xor
repz
subl
cmp
lahf
arpl
dec
push
lods
adc
cltd
add
scas
insl
cmpsb
aas
rcrl
jae
or
pushf
sub
ss
pop
or
cmp
or
push
cmp
push
das
xorps
das
adc
mov
xor
inc
xchg
push
xor
push
pop
in
repnz
push
stc
pop
pop
jl
insb
mov
mov
xchg
push
xchg
xorb
repz
xor
stc
inc
xchg
inc
ss
pop
sahf
comiss
iret
cmpsl
lret
mov
in
repz
xlat
icebp
sbb
cmp
pop
add
add
add
cmpb
js
cmpsb
pop
filds
pop
mov
loopne
mov
test
das
shll
cmpl
das
jle
inc
js
iret
mov
add
mov
xor
mov
loopne
ficompl
ficompl
sbb
rcr
sbb
loopne
das
xor
cmp
rcrb
cs
xchg
sahf
lea
ja
popf
out
jns
fidivs
popf
xchg
out
stc
mov
push
or
sbb
sbb
lods
pop
repz
pop
sbb
aaa
xor
scas
out
sub
ret
push
ja
mov
loope
js
movhps
push
sbb
clc
loopne
sbb
ret
mov
test
js
cwtl
sbb
jp
mov
sub
and
mov
es
mov
or
cld
lea
shll
cmpl
out
add
pushf
repnz
mov
inc
sti
jecxz
sti
dec
add
push
xor
in
push
aas
inc
push
in
sbb
add
mov
or
push
fnstcw
pop
xchg
or
mov
aam
repz
pop
xor
dec
rep
fnsave
inc
cmp
arpl
xchg
scas
sub
add
int
ja
daa
xchg
das
add
mov
enter
cli
or
push
inc
pushf
or
push
ret
por
and
adc
push
add
mov
mov
xor
mov
ret
dec
inc
and
sahf
mov
add
test
lds
pop
std
and
sbb
jmp
inc
jno
xlat
xchg
inc
add
add
inc
stc
add
adc
inc
mov
or
dec
pop
js
add
loopne
jmp
mov
add
divl
loopne
inc
mov
add
push
inc
mov
int3
repnz
test
andl
stos
clc
add
cli
inc
jmp
cmpsl
aam
imul
loope
jp
xchg
iret
inc
gs
xchg
push
add
mov
pop
or
addl
in
xchg
cmp
add
dec
cmpsl
in
pop
cmp
sahf
xchg
add
pop
cmpsb
lock
movsl
mov
popa
sar
mov
pop
mov
and
add
xchg
clc
repz
mov
fldl
add
pusha
les
pop
int3
add
in
sti
add
jno
or
mov
add
pop
fs
dec
lea
cmc
aas
ret
shrl
gs
pop
pop
mov
icebp
add
rorb
and
lds
mov
imul
add
xor
aad
xchg
mov
std
std
add
popa
test
ja
stos
in
aas
das
dec
pop
loope
les
leave
aas
xchg
les
cmp
int
mov
fisubs
xchg
cmp
add
mov
xchg
aas
and
movb
mov
mov
aas
popa
push
pop
sarl
add
pop
aas
xlat
out
das
add
adc
aas
movsl
add
cmp
sub
aas
jge
mov
add
fstl
arpl
add
and
call
cli
cmp
jp
and
lods
cmp
mov
add
addb
add
xlat
add
fmull
call
add
movb
jne
fldt
add
xor
shlb
add
dec
nop
pop
cmp
push
fisubl
add
loop
mov
cmpsl
push
lahf
add
adc
ss
push
scas
into
imul
pop
add
rcr
add
call
mov
pop
push
xchg
cmp
push
andl
sbb
gs
std
orl
adc
ror
add
frstor
cmpsl
adc
add
push
add
div
add
add
add
pop
add
add
add
add
add
mov
roll
add
ret
push
mov
push
push
mov
icebp
call
xchg
mov
pop
test
pushl
or
dec
add
push
push
push
mov
sarl
loope
loopne
cld
cli
sbb
test
je
addb
mov
add
add
mov
jne
add
jo
out
sti
adc
subl
adcb
in
mov
lea
in
jmp
fbld
pop
cmp
push
out
adc
sub
adc
mov
leave
pop
or
ljmp
movsb
sbb
add
mov
loopne
mov
inc
xor
mov
cmp
fcos
lock
adc
jmp
ja
mov
pop
ret
push
push
sub
xor
jnp
dec
or
xor
or
std
jg
insb
imul
jo
and
and
and
inc
or
add
xor
cmp
sub
xor
fcoms
dec
addl
sub
and
ret
insb
hlt
pop
sbb
addr16
or
sbb
test
pop
ret
mov
push
sub
inc
incb
cmp
sub
mov
and
sbb
call
xor
xor
push
push
sub
and
pop
sub
lea
or
add
bndldx
push
or
push
sbb
ret
mov
and
xor
or
mov
add
cmpl
je
lock
inc
test
push
mov
repnz
ja
out
loop
ret
call
dec
sub
fcoms
push
mov
sbb
call
sarb
sahf
sbbl
add
subl
jnp
xor
push
sub
push
inc
das
je
mov
sbb
jne
loopne
adc
rcll
push
adc
loope
jmp
pop
int3
xor
xor
sub
lret
add
inc
pop
push
aas
or
iret
push
push
repz
xchg
mov
add
sti
push
cli
xchg
addl
dec
pusha
jo
add
jae
movb
add
cwtl
lret
adc
inc
add
inc
in
adcl
mov
addr16
jle
jle
int3
adc
pop
pop
pop
pop
ret
or
push
data16
mov
mov
sbb
outsb
add
and
imul
movsb
roll
gs
jo
arpl
out
imull
repnz
and
xor
inc
insb
pushl
pop
bound
iret
dec
popa
cmp
cmp
fistpll
js
insl
clc
arpl
and
or
push
arpl
insb
ja
lods
inc
rcrl
outsb
in
popa
or
mov
add
gs
xor
cmp
jp
stc
hlt
popa
incb
outsl
js
push
ja
lds
imul
insb
xor
inc
js
sub
aaa
push
add
mov
cld
xchg
push
or
call
jmp
adc
and
iret
rolb
push
call
cmp
adc
shll
jle
roll
sbb
sbb
fcmovb
inc
in
cld
enter
adc
pop
orl
add
loopne
fcmove
sbb
and
je
cli
add
add
outsl
and
cmp
jge
inc
add
pop
fdivrs
ret
je,pt
xchg
ja
inc
notb
repz
jns
mov
aas
nop
enter
cwtl
xchg
repnz
or
nop
fldcw
adc
add
add
in
push
xchg
ret
mov
and
sti
clc
shr
or
outsb
mov
add
dec
xchg
shr
mov
js
jne
push
sub
mov
dec
pop
cmp
mov
into
jl
mov
adc
push
and
inc
outsl
add
push
mov
adc
cmc
sti
add
adc
iret
jge
inc
out
inc
add
cmp
xor
adc
nop
mov
cmp
sbb
sub
cmpsb
add
js
sbb
pop
cmpsl
fsubs
test
adc
enter
sahf
jmp
fldl
scas
pop
pop
sbbl
sub
cmp
xor
in
add
push
lret
mov
dec
enter
dec
pop
cmpsl
aad
pusha
dec
stos
ljmpw
or
inc
pop
lds
adc
xchg
ds
mulps
dec
ja
addb
adc
and
mov
addl
repz
mov
add
cld
movl
cs
add
ds
push
mov
adc
adc
xchg
dec
xchg
dec
nop
inc
and
sbb
inc
and
xlat
gs
mov
leave
js
daa
push
rcll
add
movsl
mov
lret
sbb
jle
imul
and
jmp
sbb
push
adc
push
mov
lcall
pop
add
pop
dec
pop
lea
add
jmp
xchg
mov
test
inc
cld
mov
push
lea
fiaddl
sbbb
pop
jb
push
pop
adc
or
push
movsb
and
xchg
stc
mov
cmp
pop
mov
out
add
dec
ret
inc
dec
mov
or
outsl
xor
adc
stos
adc
xchg
xor
loop
mov
sar
push
add
in
sbb
dec
shl
adc
or
stc
cmp
adc
out
push
push
je
daa
fldcw
and
mov
jle
xor
and
sbb
push
adc
push
adc
dec
inc
or
jmp
shrb
sarb
fsubp
outsb
or
inc
or
sbbl
pusha
adc
mov
ja
push
imul
mov
push
nop
fidivrs
jge
pop
sub
inc
shlb
popf
lds
and
pop
mov
and
or
add
add
jo
add
decl
enter
push
adc
push
dec
add
adc
jb
pop
lods
int
or
stos
fadds
pusha
mov
mov
mov
cld
xor
mov
cmp
je
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
les
or
in
add
loopne
add
dec
pop
or
sbb
or
sbb
or
add
inc
add
add
add
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
lea
mov
mov
push
push
pushl
push
mov
add
mov
call
mov
push
mov
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
lea
pushl
popl
push
push
push
call
pop
add
mov
mov
mov
mov
add
sub
mov
mov
mov
mov
push
mov
call
mov
mov
pop
add
push
push
push
call
mov
pop
pop
pop
pop
pop
jmp
add
xor
add
adc
pop
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
add
dec
add
add
and
mov
test
inc
movsl
and
sbb
jo
mov
and
pop
sub
add
jns
ss
and
nop
and
test
and
cmp
sub
sub
sub
sub
rolb
mov
test
dec
das
icebp
inc
ljmp
imulb
mov
test
jl
sub
hlt
xchg
scas
fnstsw
call
jae
mov
roll
outsl
and
fisubl
ja
inc
cmpsl
call
jg
cmp
jno
mov
repz
push
inc
in
or
push
pop
mov
jg
inc
push
imul
xchg
mov
cmp
jmp
clc
pushl
mov
arpl
mov
xor
push
je
inc
dec
pop
pusha
clc
pop
std
out
jg
testb
push
dec
push
imul
or
cwtl
pushf
in
mov
xor
lret
cwtl
cmp
dec
lcall
and
add
jecxz
arpl
outsb
repnz
dec
sahf
aaa
fcoml
sarl
inc
clc
incl
fistpll
daa
loop
jg
inc
aad
dec
mov
movlps
decl
dec
int3
int3
jo
mov
xor
test
mov
mov
ss
out
dec
mov
and
lods
cli
jl
cld
fwait
add
call
out
mov
and
mov
out
fdivrl
aaa
xor
in
call
cs
lcall
mulb
les
jp
mov
sub
pop
cmpsl
popf
dec
repz
testb
lcall
sub
mov
inc
or
fsubl
xlat
das
mov
dec
std
incl
shr
scas
cwtl
fcmove
leave
and
adc
in
fcmovnb
iret
jecxz
mov
jg
nop
pop
mull
imul
outsb
aas
repnz
mov
lods
mov
sbb
add
lods
stos
cli
xchg
loope
pop
rolb
jb
mov
test
dec
and
jg
pop
cltd
mov
adc
xchg
mov
jno
jno
insb
adc
cmp
push
std
testb
xor
test
adc
incl
test
push
jmp
mov
inc
jl
add
add
pushl
dec
popa
jmp
push
lds
jb
dec
inc
xchg
xor
push
shlb
fs
fwait
call
pop
pop
jmp
inc
sti
dec
and
lret
fs
or
rclb
pushl
cld
pop
cld
jno
clc
jae
hlt
iret
lock
inc
cmp
fdivrp
fnstsw
das
incb
inc
dec
dec
inc
and
cmp
push
lcall
std
lahf
push
inc
sbb
cmp
rcrl
test
add
and
jecxz
out
push
lret
push
fidivrl
mov
pop
mov
inc
and
jae
jae
mov
jno
fdivl
mov
pop
clc
push
fnsave
pop
dec
sub
xchg
mov
ljmp
cmc
mull
push
xor
mov
push
aad
mov
mov
popa
bound
js
xor
pop
mov
mov
push
mov
ljmp
call
mov
and
or
xchg
cmpsl
mov
int
add
or
xchg
outsl
cmc
arpl
jo
push
and
mov
lods
fcomi
dec
xchg
cmp
push
es
sar
ljmp
cltd
mov
adc
dec
cmp
pop
int
call
jo
mov
pop
mov
jmp
pop
fcmovnu
movsb
mov
inc
pop
inc
das
lret
cs
push
cli
rsqrtps
inc
out
addr16
nop
popf
decl
mov
jo
gs
pop
pushf
movsb
xor
mov
std
cli
pushl
inc
cmp
pop
jno
fdivr
xor
adc
or
jp
das
insb
inc
addb
add
jbe
mov
sbb
mov
mov
push
call
inc
ret
pop
mov
out
or
pusha
ja
add
and
roll
or
lea
add
add
add
pop
ljmp
je
mov
mov
add
add
pusha
push
pop
push
adc
adc
mov
add
je
cltd
or
ret
adc
mov
and
pushl
repnz
push
xor
pushf
int
movsl
cmp
adc
cli
jmp
in
and
call
add
call
call
test
loopne
ret
pop
das
push
hlt
mov
or
in
push
sahf
mov
dec
inc
call
decl
mov
stos
push
push
and
and
daa
pop
push
push
call
add
incl
mov
ret
mov
in
mov
jmp
arpl
out
fnstsw
aaa
imul
mov
cwtl
push
jne
xor
add
ret
fnstcw
stc
and
mov
fcmovb
xchg
fsubp
pop
fidivrl
jae
sti
pop
jae
jnp
aad
dec
mov
ljmp
and
push
insb
push
fisubrl
inc
dec
sub
pop
test
lcall
and
sub
jp
cwtl
testl
push
movsb
mov
in
call
sbb
pop
dec
scas
push
repnz
ds
dec
xor
mov
test
sub
inc
test
or
icebp
dec
aas
ds
jmp
out
mov
cmc
filds
fsub
push
sbb
or
adc
or
cmp
ljmp
cmp
and
outsl
push
add
xor
in
orl
inc
cmp
dec
rorb
pop
adc
dec
inc
lds
sub
fdivl
dec
dec
inc
xchg
gs
lods
and
fdivr
aam
movsl
xor
push
ss
clc
pop
mov
cwtl
sub
add
ret
pop
fistl
shrb
das
push
dec
std
aam
in
pop
add
xor
stos
cli
xchg
cli
mov
push
or
and
clc
push
adc
sub
lcall
lods
enter
push
dec
jbe
inc
adc
test
dec
inc
iret
hlt
push
cmp
mov
cli
ljmp
xchg
rcrl
and
daa
cmpsb
adc
inc
jge
mov
inc
decl
push
fldenv
out
ja
jmp
insb
mov
push
sbb
pop
insb
jg
adc
inc
push
push
ja
incl
loop
inc
notb
add
inc
stc
jns
js
cld
lcall
push
pop
repz
and
pop
arpl
add
pop
ja
mov
pop
mov
jne
cmp
addb
cltd
add
decl
pop
or
scas
add
sub
xchg
push
mov
jmp
mov
roll
popf
flds
pop
push
xchg
incl
lret
lock
icebp
add
ljmp
push
push
xor
push
adc
and
lea
repz
je
sbb
cmp
sbb
fimull
test
mov
decl
sahf
lock
call
jns
fsub
add
pop
test
out
sahf
enter
out
lahf
or
sub
out
sahf
pushf
jns
xchg
out
das
push
test
sahf
jl
and
and
incb
or
add
add
mov
jl
xorb
inc
and
addb
call
test
mov
mov
movsl
fistpll
roll
or
decl
inc
add
mov
stos
lret
dec
mov
add
ds
xor
repz
adc
and
cmp
lahf
arpl
dec
push
lds
cltd
incl
pop
std
add
scas
insl
cmpsb
aas
pop
push
sub
aam
sub
lods
mov
aas
pop
or
cmp
or
push
pop
push
int3
call
adc
iret
adc
adc
mov
xor
inc
xchg
push
xor
push
pop
in
repnz
push
stc
lcall
jl
insb
mov
mov
xchg
push
xchg
xorb
repz
std
jg
incl
xchg
inc
ss
pop
sahf
dec
mov
iret
cmpsl
lret
mov
in
outsb
ljmp
mov
pop
das
pop
add
add
add
jns
pushl
filds
pop
mov
loopne
mov
test
das
shll
mov
ds
sub
inc
js
iret
mov
add
mov
mov
cmp
push
add
jo
pop
ficompl
push
pushl
jo
fcomps
loopne
mov
pop
or
ljmp
sbb
xchg
sahf
lea
ja
popf
out
jns
fidivs
popf
xchg
out
stc
mov
push
push
or
sbb
sbb
lods
pop
repz
pop
sbb
aaa
xor
scas
out
sub
ljmp
ret
push
ja
mov
loope
js
movhps
push
sbb
clc
loopne
sbb
ret
mov
jno
mov
cwtl
sbb
jp
mov
aam
xchg
pop
mov
inc
sbb
lds
lcall
incl
mov
mov
sbb
movsl
loopne
inc
add
and
imul
add
inc
sti
clc
decl
scas
cli
sbb
and
fistpll
in
push
aas
inc
push
in
sbb
add
add
mov
or
aas
pop
xchg
ss
jg
clc
or
mov
repz
pop
xor
dec
rep
fnsave
ret
sbb
arpl
scas
sub
add
int
ja
daa
xchg
repnz
insb
lea
mov
add
aaa
mov
push
inc
pushf
or
push
ret
invd
and
adc
push
pop
mov
lcall
loopne
mov
xor
mov
ret
inc
and
sahf
mov
decl
lds
pop
std
and
sbb
addl
xlat
xchg
inc
add
add
inc
stc
add
adc
inc
mov
cmp
cmpsb
iret
or
dec
pop
js
add
loopne
jmp
mov
std
pop
and
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
int3
repnz
test
andl
stos
clc
add
cli
mov
jmp
aam
imul
loope
jp
xchg
and
int3
xchg
push
mov
mov
add
or
addl
in
xchg
fstpt
mov
cmpsl
in
cmp
sahf
xchg
add
insl
lcall
lock
movsl
mov
popa
sar
mov
mov
mov
stos
xchg
clc
aad
add
pop
fldl
add
incl
push
mov
les
pop
int3
add
in
sti
add
inc
sti
mov
cmp
push
cmp
dec
mov
outsb
adc
sub
sbb
pop
pop
pushl
rorb
and
lds
mov
imul
scas
add
xor
aad
xchg
mov
std
std
add
popa
test
xchg
jg
adc
stos
in
dec
pop
loope
les
xchg
les
cmp
mov
mov
mov
add
mov
xchg
aas
and
movb
mov
repnz
jp
push
pop
sarl
jl
mov
mov
mov
inc
mov
aas
movsl
add
ljmp
mov
jge
mov
add
fstl
jnp
incl
ja
call
cmp
jp
and
lods
cmp
mov
roll
cmp
std
xlat
sbb
mov
cmpsb
mov
sbb
mov
ljmp
jne
fldt
js
jno
shlb
add
dec
nop
pop
cmp
mov
movsl
andb
mov
cmpsl
push
lahf
add
xchg
fmuls
cld
or
push
ret
ljmp
pop
add
rcr
jge
call
mov
push
xchg
cmp
shlb
dec
dec
gs
std
orl
scas
push
xchg
jge
subb
add
cmpsb
fmuls
add
or
add
test
inc
add
mov
mov
add
fs
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
push
div
in
jg
add
andl
andl
ret
push
mov
push
push
mov
icebp
call
ljmp
call
add
je
loope
add
push
push
push
mov
sarl
loope
jmp
sbb
cli
sbb
test
je
addb
mov
add
add
mov
call
jne
add
jo
out
sti
adc
subl
adcb
in
mov
lea
jmp
in
jmp
fbld
pop
cmp
adc
sub
adc
mov
add
adc
pop
or
ljmp
movsb
sbb
add
mov
loopne
mov
inc
xor
lcall
mov
cmp
fcos
lock
adc
jmp
ja
mov
incl
clc
pop
pop
ret
push
push
sub
xor
jnp
dec
or
xor
or
incl
mov
jg
insb
imul
jo
and
and
and
inc
or
add
xor
cmp
sub
decl
xor
fcoms
dec
addl
sub
and
ret
insb
hlt
pop
sbb
addr16
or
sbb
test
in
lcall
cli
repz
push
sub
inc
incb
cmp
sub
mov
and
ljmp
jo
pusha
fdivl
push
push
push
push
sub
and
pop
sub
lea
decl
cld
add
bndldx
push
or
push
sbb
ret
mov
and
xor
or
decl
ljmp
mov
add
cmpl
adc
test
push
mov
repnz
jnp
push
loop
ret
call
dec
sub
fcoms
push
or
pushl
ret
inc
push
call
sarb
sahf
sbbl
or
incl
dec
leave
test
mov
xor
push
sub
push
inc
das
je
mov
sbb
das
cld
sbb
loopne
test
sub
xorb
and
lea
pop
int3
xor
xor
sub
lret
enter
aas
or
iret
push
push
repz
mov
add
sti
push
cli
xchg
addl
dec
pusha
jo
add
incl
jae
movb
add
cwtl
lret
adc
inc
add
inc
in
adcl
mov
addr16
jle
jle
int3
jg
call
pop
pop
pop
pop
ret
or
fidivl
mov
mov
in
sbb
outsb
pushl
and
imul
movsb
roll
gs
jo
sti
arpl
out
imull
repnz
and
xor
inc
insb
pushl
pop
bound
iret
dec
popa
sub
jg
cmp
fistpll
js
insl
clc
arpl
and
or
push
arpl
ljmp
popa
insb
ja
lods
inc
rcrl
outsb
in
popa
or
mov
add
gs
xor
cmp
push
jp
stc
hlt
popa
incb
outsl
js
push
ja
lds
imul
insb
xor
inc
js
ljmp
je
fidivs
push
add
mov
cld
xchg
push
or
call
jmp
adc
addr16
pushl
dec
iret
rolb
push
call
cmp
adc
shll
jle
sar
incl
sbb
sbb
fcmovb
inc
in
cld
enter
adc
pop
orl
add
loopne
fcmove
sbb
and
mov
xor
test
pop
leave
inc
outsl
and
cmp
jge
inc
add
pop
fdivrs
ret
je,pt
lcall
ja
inc
notb
repz
jns
mov
aas
nop
enter
cwtl
xchg
dec
push
in
or
nop
fldcw
adc
add
add
in
push
xchg
ret
enter
jmp
cli
punpckhwd
sti
clc
shr
or
outsb
mov
add
dec
xchg
shr
mov
out
pushl
push
sub
mov
dec
pop
cmp
mov
into
jl
mov
adc
pop
sbb
outsl
add
push
mov
adc
cmc
sti
add
adc
dec
jge
inc
out
inc
add
cmp
xor
adc
nop
mov
cmp
sbb
jmp
cmp
js
sbb
pop
cmpsl
fsubs
test
adc
int3
fistps
bound
fldl
scas
pop
pop
sbbl
sub
cmp
xor
in
add
cli
aaa
data16
push
lret
mov
and
pushf
dec
pop
cmpsl
aad
ljmp
stos
ljmpw
das
inc
pop
lds
adc
jmp
pop
out
ja
addb
adc
and
mov
incl
jl
repz
mov
add
cld
movl
cs
add
decl
mov
push
mov
adc
adc
xchg
dec
xchg
dec
nop
inc
and
sbb
inc
and
xlat
gs
call
mov
js
daa
push
rcll
add
movsl
mov
lret
sbb
jle
imul
pushl
pop
sub
xchg
inc
leave
mov
test
xchg
adc
push
adc
push
lods
ficompl
sub
dec
push
dec
pop
add
pop
dec
pop
lea
add
jmp
xchg
mov
test
incl
mov
push
lea
fiaddl
sbbb
pop
jb
push
pop
adc
or
push
push
movsb
and
xchg
stc
mov
cmp
pop
mov
out
add
dec
ret
inc
dec
push
mov
lcall
les
cmp
xor
loop
cld
mov
pushl
dec
add
in
sbb
shl
adc
rorb
or
cmp
adc
out
ljmp
scas
push
je
daa
fldcw
and
mov
jle
xor
and
sbb
push
adc
imul
sbb
push
rorb
or
jmp
shrb
sarb
fsubp
outsb
or
inc
or
xor
lcall
fldenv
imul
push
imul
mov
push
nop
fidivrs
incl
pop
sub
inc
shlb
popf
lds
and
pop
mov
and
sub
add
add
jo
add
dec
push
push
aaa
jl
push
adc
push
dec
adc
les
adc
jb
pop
lods
int
ja
lods
enter
add
and
jl
sub
xor
loopne
sbb
cmp
je
movsb
mov
call
xor
neg
repz
or
shr
and
inc
mov
call
movsl
jg
shlb
aas
stos
jmp
dec
or
inc
pop
fnstsw
outsl
jmp
lods
shr
je
jno
sbb
dec
popa
loopne
ja
lods
call
jge
or
add
fcompp
clc
jg
inc
inc
xchg
mov
mov
xchg
lock
jo
pop
jmp
jecxz
rol
je
jne
mov
call
jl
push
jb
ret
sub
mov
dec
les
in
pop
mov
outsb
pop
loopne
or
sbb
sbb
in
mov
add
pop
adc
mov
lea
loopne
decb
and
adc
movb
ret
lret
aad
mov
iret
ret
mov
jno
popl
pop
lea
xor
mov
mov
push
or
das
pop
pushl
push
adc
lret
push
cli
std
push
mov
inc
and
or
insl
mov
sbb
repnz
adc
scas
pop
pusha
push
in
adc
popl
push
push
push
call
pop
bndldx
inc
or
lock
outsl
ja
sub
mov
dec
and
adc
mov
call
mov
and
dec
sbb
ja
call
inc
testb
pop
rcrl
loopne
add
xchg
push
adc
mov
orb
adc
adc
nop
push
add
or
enter
jmp
adc
pop
add
dec
outsl
popa
fs
imul
inc
gs
push
pushl
outsl
arpl
fs
jae
orps
je
popa
insb
inc
insb
insb
adc
inc
sbb
dec
add
add
add
and
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
ja
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
ja
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jle
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
sub
push
mov
mov
mov
inc
sub
cmp
ja
mov
mov
xchg
rol
xchg
sub
sub
add
mov
add
mov
loop
pop
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
push
mov
push
dec
repnz
push
call
pop
or
je
mov
add
jmp
popa
ret
popa
jmp
