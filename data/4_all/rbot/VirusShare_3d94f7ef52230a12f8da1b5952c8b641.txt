cmp
or
enter
adc
inc
shlb
pop
cmp
repz
or
and
sub
sarb
jmp
jb
cmp
jmp
sub
jne
in
cmpsl
push
inc
mov
cmp
popa
scas
loopne
xchg
loop
push
lret
xchg
fisubrl
push
xor
mov
or
mov
ret
lods
dec
pushf
cmp
pop
pop
inc
dec
int
mov
pop
out
or
loope
les
popl
lahf
aad
inc
stos
mov
jle
push
pop
enter
xchg
ss
cmpsb
sahf
mov
punpckhwd
inc
mov
mov
imul
mov
int
mov
lea
mov
icebp
cmp
and
rcrb
xchg
pop
xor
add
inc
mov
into
popa
and
jne
push
mov
inc
pop
mov
pop
addr16
sub
mov
insl
addr16
xorl
in
aas
add
rorb
push
push
mov
mov
sub
ror
xor
add
add
loop
call
pop
and
add
add
add
call
pop
pop
pop
add
pop
pop
add
mov
jmp
push
mov
sub
push
push
push
and
mov
mov
add
xor
add
rol
loop
pushl
pop
add
mov
mov
mov
sub
sub
mov
sub
sub
sub
sub
ror
add
not
add
xor
sub
sub
rol
rol
xor
xor
ror
bswap
neg
sub
add
add
xor
sub
rol
xor
not
ror
rol
ror
add
sub
bswap
add
sub
ror
sub
ror
add
mov
test
jne
call
push
push
push
push
push
mov
call
add
mov
push
push
push
push
push
push
mov
call
add
mov
test
je
push
push
push
push
push
push
mov
call
add
mov
test
je
push
push
push
push
push
push
mov
call
add
mov
test
je
push
push
push
push
push
push
mov
call
add
mov
test
je
lea
push
mov
add
push
pop
rep
pop
mov
mov
mov
mov
push
push
push
push
push
call
pop
test
jne
push
push
push
push
call
test
je
mov
mov
mov
push
mov
add
mov
rep
pop
add
add
mov
add
movzbl
lea
push
push
pop
rep
pop
mov
test
je
push
mov
add
mov
mov
mov
add
rep
pop
dec
jne
mov
sub
je
mov
mov
add
mov
test
je
add
mov
test
je
lea
shr
lea
movzwl
push
mov
shr
mov
and
add
add
pop
dec
jne
mov
shr
jmp
dec
jne
movzwl
add
jmp
dec
jne
add
inc
inc
loop
add
jmp
mov
mov
add
mov
cmpl
jne
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
mov
jmp
cmp
je
mov
jmp
mov
test
je
mov
add
mov
test
je
mov
add
mov
mov
test
jne
mov
add
mov
add
push
mov
call
test
je
mov
mov
mov
test
je
test
je
and
jmp
add
inc
inc
push
push
mov
call
mov
mov
addl
addl
jmp
add
jmp
mov
mov
mov
mov
mov
cmp
je
push
push
push
call
pop
test
jne
mov
add
mov
test
je
add
xor
push
push
pop
repz
pop
je
mov
add
mov
sub
jb
cmp
jbe
add
jmp
push
lea
push
push
call
lea
push
push
pushl
pushl
call
test
je
push
mov
lods
test
je
sub
add
stos
jmp
lea
push
pushl
pushl
pushl
call
pop
jmp
mov
cmp
jne
mov
add
mov
pop
pop
pop
leave
ret
movl
movl
movl
movl
ret
faddp
faddp
ret
ret
lea
getsec
sbb
out
add
xchg
mov
sub
lret
cmpsl
out
mov
mov
outsb
in
mov
xchg
xchg
sbb
pop
jb
inc
and
ljmp
ficomps
dec
daa
cmp
xchg
js
mov
mov
icebp
xchg
inc
arpl
xchg
or
and
rorl
cmp
mov
sar
adc
int3
jno
mov
adc
adcb
and
sbb
mov
or
jge
imul
scas
jl
push
fisubl
push
lds
mov
test
push
push
int
or
lods
pop
fwait
test
shll
lahf
pop
dec
sub
or
in
enter
cmc
popa
sbb
push
lods
in
sub
pop
inc
mov
cli
and
movl
incl
pop
lea
stc
test
mov
push
neg
neg
pop
clc
sub
test
push
or
pop
sar
jmp
jmp
call
test
clc
add
mov
stc
cmp
push
add
pop
jns
jg
lea
push
push
jae
sub
pop
pop
clc
mov
push
inc
dec
pop
cmc
jle
push
cltd
pop
jo
add
push
add
pop
cld
stc
clc
push
add
pop
push
movzbl
js
jns
push
sub
pop
push
sub
pop
cmp
stc
jnp
add
cmp
nop
sub
loop
pop
nop
pushl
pop
jno
je
jae
cmc
ja
push
xor
pop
mov
push
jnp
jne
clc
pop
cmc
push
pop
and
cmp
je
push
call
cmp
xchg
icebp
jle
sarb
sbb
cli
gs
pop
jp
fmul
decb
cmp
test
idivb
dec
sub
jp
mov
popf
fnstcw
lahf
and
push
mov
add
pop
push
movzbl
jns
je
xor
jne
and
push
mov
pop
loop
pop
ja
push
push
and
pop
pop
js
jp
push
add
test
nop
rol
push
mov
xor
pop
push
push
push
pop
pop
stos
push
push
pop
pop
pop
jno
jbe
sub
loop
jecxz
mov
push
pushf
leave
jo
and
pop
inc
xchg
push
test
push
push
cmp
pop
pop
jno
push
push
inc
pop
pop
cmc
test
shr
sub
loop
jecxz
test
jae
sub
pop
jmp
int3
mov
push
je
ja
dec
xchg
push
xor
jg
push
in
cltd
sbb
aam
sub
jne
jmp
push
loopne
mov
scas
int
loopne
mov
nop
and
dec
xchg
inc
mov
add
ss
jmp
jae
test
or
cmpsb
mov
psllq
arpl
ss
test
mov
mov
add
add
add
push
mov
pop
test
leave
in
cmp
shlb
subl
xlat
cwtl
aad
in
cmpsl
inc
mov
mov
xchg
jmp
outsb
lahf
or
mov
ja
idivl
mov
push
outsl
aas
jp
pusha
fsubl
std
jb
movsb
dec
out
shrl
pop
loope
mov
lcall
jecxz
fdivrp
out
int3
arpl
lret
jp
iret
xchg
popf
ret
in
je
ror
cmc
js
js
push
rol
pop
mov
push
add
test
loopne
inc
mov
in
rcrl
mov
pop
sarb
dec
jl
mov
mov
pusha
sbb
mov
mov
stos
ljmp
pop
stos
pop
add
ljmp
test
ret
xor
dec
ret
scas
mov
cwtl
aad
icebp
or
jnp
mov
sub
fmuls
pop
mov
dec
sbb
pop
dec
jp
jno
cltd
sub
jle
adc
inc
insl
mov
test
insl
jg
fisttps
mov
adc
cld
or
mov
sub
idivl
int
mov
xchg
lcall
iret
mov
aaa
cwtl
lds
dec
dec
imul
scas
cmp
adc
mov
fwait
adc
stc
movsl
shl
or
pop
fwait
jnp
js
sahf
push
sbb
dec
outsb
pop
mov
push
mov
jae
sbb
add
mov
add
cmpsb
scas
dec
dec
shll
sub
fimuls
shl
jbe
and
jnp
and
adc
and
gs
add
test
ja
cmp
push
cmpsb
adc
jb
jge
and
fistpl
lcall
sub
scas
in
mov
mov
xlat
insl
mov
popa
lods
cltd
lea
sbb
sbb
clc
or
jl
cs
rep
adc
jle
adc
sbb
jns
loop
inc
mov
sbb
mov
cmp
aas
adc
out
mov
in
insb
jo
mov
xchg
xor
push
cli
dec
pop
push
insb
sbb
data16
sub
pushf
inc
repz
pop
daa
adc
jp
outsb
shrl
push
adc
push
sbb
adc
popl
pusha
push
xor
ja
repz
and
xchg
add
xor
cmpsl
iret
fsubrl
xor
cmpsl
lret
inc
lahf
push
out
xchg
adc
addb
xchg
and
push
std
movsl
cltd
mov
ds
pushf
cltd
lock
mov
popa
adc
inc
xchg
imul
xchg
daa
mov
mov
loopne
adc
xchg
lods
cmpsb
fistpl
rcrl
mov
iret
jne
sbb
jg
cmp
adc
sbb
ja
mov
in
lea
lods
mov
cmp
cld
stos
shrl
add
cmp
loop
sub
ret
sbb
int3
jp
call
repnz
push
push
rolb
or
and
aas
pop
popa
gs
sub
nop
mov
sbb
incl
dec
out
popf
lret
outsb
mov
rol
adc
pusha
movsl
pop
jns
sub
int3
cmp
fcoms
pop
jb
nop
das
jp
iret
stos
loope
sbb
subb
push
push
sub
push
repz
sti
insb
jns
sub
imul
cmpsl
mov
lcall
into
outsb
in
inc
xchg
mov
cmp
rcrb
mov
mov
data16
xor
shll
jmp
inc
loop
xchg
popa
pop
cmp
and
mov
sub
mov
push
jecxz
mov
test
push
cli
jle
cs
push
dec
dec
mov
movsl
gs
js
push
xor
mov
ja
shll
sbb
cmpb
dec
xlat
sbb
xor
int
repnz
add
jbe
addr16
imul
dec
addr16
mov
outsl
ficoms
clc
pop
fisubrl
lcall
mov
mov
enter
fisubl
pusha
mov
mov
movl
pop
into
out
xchg
mov
dec
in
stc
jecxz
insb
and
mov
rclb
xchg
xchg
adc
pop
gs
sub
push
pop
jo
imul
pushf
addr16
xchg
push
mov
inc
loop
stos
add
mov
lds
xor
mov
dec
movsb
mov
mov
insb
push
rclb
adc
mov
pop
imul
lret
dec
ds
iret
stos
jmp
lret
push
rclb
push
fidivrl
mov
stos
dec
shlb
cs
das
std
and
out
addb
insb
daa
jno
sub
mov
mov
ss
xchg
jl
push
push
jmp
in
mov
lret
or
add
pusha
addr16
mov
adc
shlb
daa
out
or
loope
dec
mov
mov
jg
jecxz
stos
sti
aas
mov
cmp
int3
imull
xchg
mov
and
test
iret
test
mov
mov
fidivrs
xor
mov
test
sarb
shl
xchg
cmp
icebp
sti
push
inc
sarl
bound
or
shrl
dec
sbb
sbb
call
push
jge
mov
dec
push
mov
aas
out
int3
jmp
int3
pusha
psubusw
pusha
mov
push
dec
pop
dec
das
push
mov
rol
arpl
dec
inc
stos
das
xchg
jmp
into
ret
and
mov
push
push
jae
mov
xor
push
sbb
cmp
jge
fcompl
movsb
cmp
sbb
xchg
loop
jecxz
into
jno
repz
inc
mov
lds
aam
sbb
decl
or
daa
in
mov
cmpsb
jnp
push
dec
jb
pop
mov
xchg
stos
pop
std
in
push
and
movl
in
sbbb
gs
mov
xor
and
icebp
lods
aam
ds
xorl
dec
and
shrl
sub
in
aad
popf
mov
test
and
xchg
mov
repz
shlb
mov
xchg
stos
push
xchg
pop
add
mov
imul
jecxz
mov
sub
or
lea
shl
rclb
xor
lcall
and
insb
lods
rcrb
daa
or
sub
mov
out
dec
sub
cmp
jmp
cld
inc
subl
or
pop
adc
lods
cmova
sub
dec
int3
jb
adc
int3
xor
in
jle
jle
xlat
mov
mov
pop
insl
push
mov
in
test
or
stc
push
or
int3
add
js
jecxz
rorl
test
pop
pop
test
pusha
adc
xchg
shll
sub
sub
mov
out
adc
and
outsl
in
pop
out
lock
int
pop
dec
lds
pop
cmp
dec
pop
aaa
cmp
pop
mov
lods
cmp
xchg
mov
jl
aaa
idivb
cmp
ljmp
sbb
arpl
lret
ja
and
pop
cld
push
out
jecxz
mov
ror
and
sbb
dec
pop
aaa
push
mov
scas
ds
jg
pop
cmp
push
aaa
das
scas
xor
cmc
jb
pop
lds
add
int
mov
pop
sub
cmpsb
setb
fnclex
outsl
dec
xlat
xchg
mov
rcr
into
loopne
xchg
mov
mov
lret
nop
jmp
fdecstp
fs
lock
cmpsl
sbb
push
wrmsr
adc
aaa
or
cmp
stos
nop
pop
cmpsl
movsb
fimull
cmp
xor
mov
int
xchg
dec
std
in
xlat
mov
or
dec
sbb
gs
adc
es
sub
xchg
in
loope
xor
jp
and
adc
dec
xchg
movsl
xlat
or
push
adc
pop
mov
add
loope
aam
push
decb
out
rolb
mov
dec
fdivs
mov
sub
das
es
iret
cmp
daa
xor
lret
push
test
dec
mov
jecxz
mov
rcll
call
das
push
cmp
icebp
jo
ja
ficompl
sub
mov
and
or
xor
pop
inc
shlb
enter
cmc
xchg
mov
js
sbb
shlb
sub
xor
lret
xchg
lds
push
cltd
sahf
sarl
sub
xchg
and
stc
outsb
inc
mov
or
jnp
fbld
xchg
jb
sbb
lock
adc
push
cmc
cmp
ret
mov
mov
lahf
ret
mov
push
or
in
in
sbb
iret
xchg
pusha
jge
insb
xor
mov
inc
jns
pop
push
repz
cltd
jo
mov
faddp
out
push
mov
mov
push
or
jae
scas
or
sbb
fcmovbe
xor
sbb
inc
dec
mov
xchg
mov
adc
subb
and
dec
out
jbe
lret
or
pop
push
and
es
mov
add
lcall
insl
jae
inc
mov
clc
push
loop
sub
mov
cmp
pmaxsw
ret
dec
fistpll
movsl
fucomp
in
dec
movl
inc
xchg
adc
jne
test
test
sarb
repnz
in
push
inc
cs
int
dec
ret
frstor
push
insb
cmp
int3
lock
mov
and
lret
add
jp
lcall
xor
add
mov
sbb
sbb
lds
arpl
test
loopne
adc
out
call
fs
cmp
pop
cmpsb
push
push
mov
push
or
cmp
mov
xchg
dec
inc
pushf
fdivrs
xchg
dec
inc
test
jno
xchg
fldcw
das
sbb
lahf
push
mov
inc
rcll
xchg
mov
call
dec
xlat
mov
ljmp
repnz
xor
shlb
cmp
or
lret
dec
shl
sbb
inc
mov
jmp
sub
pusha
xchg
mov
sbb
test
cmp
mov
and
out
jl
mov
cmp
push
ror
ret
into
mov
add
aam
fstps
sbb
insl
mov
jl
inc
lret
fistpl
add
cmp
and
int3
out
push
cmp
loop
push
orl
movsl
fcmovnb
mov
lret
in
dec
xchg
cli
fmulp
pop
and
push
sbb
xchg
bound
mov
sarl
ja
sub
push
fisttps
push
call
testb
sub
pop
arpl
js
loopne
in
sub
adc
xchg
js
sbb
bound
mov
push
add
cmp
imul
xor
dec
push
aad
add
cmpsl
and
mov
mov
cmp
stos
in
je
adc
repz
stos
and
outsl
xchg
pop
pop
mov
xchg
push
jg
rclb
out
aas
in
or
ljmp
movsl
ljmp
icebp
xchg
add
add
sub
xor
repnz
aam
sbb
pop
inc
imul
add
or
fcoms
xor
das
stos
xor
xor
mov
add
jb
jge
insb
mov
lea
repnz
push
push
sbbl
mov
and
dec
out
jne
push
test
lret
sub
mov
loop
cmp
push
ja
pop
or
dec
sbb
lock
push
inc
dec
aam
je
mov
loop
aas
dec
add
lods
xchg
inc
cmpl
loope
sahf
adc
xchg
sub
sbb
decb
xchg
jle
into
inc
mov
cwtl
cmp
cmp
cmp
fs
mov
in
xchg
mov
mov
stos
imul
mov
sbb
jne
roll
xor
in
aas
lret
in
jne
push
lret
iret
xchg
push
pop
clc
movsl
mov
imul
cmc
mov
fisubrs
lock
js
insb
mov
mov
adc
jb
jmp
arpl
ds
popa
rorl
lods
push
push
mov
push
dec
pop
ljmp
lret
jge
push
and
inc
xor
cltd
packsswb
out
jne
jecxz
sarl
test
or
mov
jle
mov
loopne
inc
cmp
js
ja
mov
xchg
or
pop
shrl
jg
jp
inc
inc
add
mov
mov
nop
add
scas
test
je
sahf
lret
ds
cmpsl
push
pushf
aam
mov
fucomp
cwtl
push
cmp
add
push
pop
dec
shlb
shll
sbb
aas
and
add
nop
pop
enter
push
shl
lods
es
sti
xchg
icebp
or
pop
outsb
jbe
cwtl
rcrb
test
in
ljmp
lcall
add
das
sub
sar
lret
mov
rcr
sub
icebp
lahf
add
cmp
sahf
push
or
sub
add
ror
ror
mov
sbb
xor
leave
cmp
orl
adc
rorl
fnsave
add
push
nop
mov
pmullw
and
push
jp
bound
cmp
add
out
gs
mov
aam
sub
mov
inc
and
dec
lock
in
mov
push
lret
push
sbb
imulb
rolb
jge
stc
repz
add
adc
push
aaa
ja
inc
mov
mov
mov
jne
pop
in
mov
stos
ljmp
xchg
xchg
pop
pop
mov
in
stos
mov
movsl
push
add
test
jle
scas
lock
pusha
loop
mov
rolb
notb
xor
lods
jecxz
dec
ret
popf
mov
iret
mov
jmp
fists
in
lods
out
and
xchg
ret
test
fcompl
daa
sbb
inc
movsl
cs
lret
mov
cmpb
mov
xor
xor
xchg
jno
pop
and
xor
jp
jo
mov
sahf
jmp
test
clc
iret
jb
js
loope
jne
test
mov
ljmp
adc
inc
dec
and
int
ret
sub
bound
ljmp
sbb
pop
subb
mov
ss
pop
pop
push
jno
inc
shlb
ret
push
add
push
in
cwtl
rcll
arpl
cs
pop
test
pop
pop
pusha
shlb
cli
jno
xchg
sub
pop
imul
push
xor
popa
dec
insl
in
scas
xor
cmp
cltd
or
nop
jmp
mov
push
cmp
test
adc
rorb
mov
movsb
fxch
in
mov
mov
std
mov
sarb
pop
out
sarl
dec
jae
adc
imul
jo
and
jmp
or
jo
cmp
ficoml
sub
ret
xor
lret
inc
mov
lods
aad
div
inc
xor
or
add
cmp
test
dec
fwait
iret
ficoms
xor
sub
shll
cmp
sub
and
push
cltd
scas
pop
mov
push
leave
xchg
xchg
aas
cmp
sbb
and
inc
xor
sub
lret
xlat
cmp
add
jne
mov
push
xchg
out
adc
dec
arpl
dec
loop
jo
cwtl
adcl
mov
sub
mov
fdivs
push
pop
insl
xor
test
ljmp
sbb
sbb
cltd
pop
js
inc
andl
ds
pop
mov
and
jae
mov
or
xchg
or
mov
dec
mov
xchg
and
into
pop
cltd
or
mov
jp
pop
lds
push
bound
ret
sub
jl
inc
inc
mov
mov
mov
dec
cs
cwtl
iret
test
scas
shll
mov
daa
or
add
int
push
mov
cmp
lret
nop
icebp
scas
mov
adc
mov
jl
lock
cmc
jle
outsb
ds
test
aas
leave
pop
xor
jg
pop
sub
int3
xlat
inc
xchg
lret
inc
mov
xchg
aad
clc
lret
cmc
aas
es
popa
out
and
int3
xor
pop
xchg
in
and
dec
jne
add
iret
mov
leave
repnz
cld
insb
inc
xor
test
sbb
push
jg
sbb
lcall
sbb
pop
repnz
or
pusha
mov
in
loopne
add
shll
mov
push
test
cmpsb
add
cmp
test
mov
push
mov
das
aas
loopne
pop
mov
jae
stc
loope
mov
mov
pop
or
div
mov
ror
mov
nop
push
jns
and
sub
js
cmp
test
insl
and
daa
pop
mov
iret
nop
mov
loope
xchg
aas
jae
push
sub
lret
fiaddl
out
adc
leave
xlat
outsl
xchg
xchg
mov
pop
pop
lret
das
push
mov
mov
in
mov
lret
mov
movsl
pop
pop
adc
roll
push
daa
imul
jp
fs
push
rcll
out
sbb
in
stc
jle
pop
inc
push
cmpl
pop
xor
pop
push
and
mov
xor
stos
pop
lcall
pop
or
in
dec
sbb
add
xor
cld
pop
or
push
xor
jle
inc
in
add
adc
repz
lahf
xchg
jl
aas
or
lret
inc
test
sbb
dec
pop
lods
dec
dec
movsb
sub
lock
lock
or
orb
jo
fdivs
aas
in
jnp
mov
sbb
cmp
out
repz
jns
sbb
insb
push
aaa
push
mov
int3
lds
xlat
jecxz
cmp
dec
inc
inc
jae
int3
decb
fdivrp
dec
aad
cmp
cwtl
rolb
jmp
fs
sbb
lret
mov
ss
adc
fisttpll
jmp
mov
sub
loope
outsb
test
cli
lret
push
scas
xor
pop
popl
rorl
test
nop
into
push
xchg
push
or
mov
mov
dec
jnp
sbb
push
mov
dec
cmpsl
and
lock
in
test
loop
lret
xor
jae
into
test
dec
jg
cmp
lods
lods
lods
mov
clc
xchg
mov
jns
enter
inc
xchg
inc
inc
mov
pop
in
jo
divb
xchg
addr16
push
outsl
pop
insb
mov
sarb
mov
in
fcompl
mov
jns
mov
mov
movsl
imul
int3
aam
cvttps2pi
enter
pop
addr16
cmp
mov
fwait
daa
pushf
ret
jl
or
adc
pop
add
out
cmp
inc
test
sbb
test
sarl
ret
sbb
orl
push
sub
popf
insb
aad
sub
int
inc
push
sbb
cmpb
and
sub
lods
je
sub
inc
inc
mov
mov
pop
push
mov
jl
xchg
repnz
pusha
inc
outsb
cld
out
loop
add
test
mov
xor
lea
xchg
mov
and
imul
out
adc
insl
xor
push
push
pop
scas
push
insl
rorb
jmp
fs
xchg
pop
test
dec
dec
gs
cmp
inc
scas
int3
test
xchg
jb
lret
mov
adc
dec
jle
mov
outsb
repnz
add
mov
jnp
loop
mov
out
sub
jae
dec
int3
icebp
test
test
sbb
adc
addr16
push
xor
bound
mov
xchg
enter
xchg
imul
dec
stos
push
in
push
lock
mov
adc
shlb
dec
mov
sbb
and
loop
xchg
frstor
mov
add
gs
sub
xchg
loope
jo
mov
adc
xchg
loop
rorb
insb
out
inc
sbb
mov
sub
sahf
dec
push
fwait
std
loope
das
push
or
jae
cmp
aam
in
mov
adc
add
fs
jnp
in
mov
jl
push
push
idiv
xor
xor
sub
je
orl
jmp
mov
mov
xchg
into
push
jo
insl
jns
leave
movsl
ret
adc
adc
push
std
dec
nop
icebp
inc
add
enter
gs
addr16
fmuls
add
mov
not
add
xor
push
out
dec
pop
aad
mov
neg
rolb
mov
clc
lods
cmp
into
sub
popa
sub
fs
cmp
dec
iret
lods
sub
aam
or
push
or
pop
pop
test
xchg
das
sbb
out
cmpsl
or
ljmp
gs
sahf
sbb
popa
das
shl
jb
rcrl
cmpsl
test
cs
jge
push
test
dec
mov
push
sub
push
pop
sbb
push
xchg
xchg
sahf
push
dec
pop
orb
enter
sbb
push
int3
mov
ficomps
cwtl
daa
mov
int
and
mov
faddl
sub
sub
xchg
nop
testb
jp
das
sbbl
int3
jl
scas
cmp
pusha
jne
lcall
sub
loope
add
nop
repnz
fdivs
sub
jmp
xor
sahf
jno
out
lock
test
cli
pop
cltd
and
mov
add
xor
mov
icebp
loope
aas
mov
insl
xchg
imul
jge
ds
in
dec
push
loopne
rcrb
call
jo
cmp
stc
les
pop
pop
inc
lea
imul
pop
test
popf
and
jecxz
rorl
dec
push
push
bound
fildll
or
xchg
jb
daa
test
outsb
les
push
hlt
inc
pop
pop
fcomp
xchg
insl
mov
pop
arpl
add
sti
xchg
mov
mov
ffreep
lret
data16
inc
repz
mov
nop
int
adc
fsubs
add
xchg
lret
sub
xorb
jg
lcall
and
dec
mov
repz
push
mov
ja
dec
cli
mov
lret
and
sub
cmp
jne
pushf
xlat
lock
clc
mov
and
rcrb
aas
adc
call
into
call
inc
sbb
jno
ficoms
or
stos
jmp
mov
ss
inc
mov
jp
pop
ficoms
dec
push
in
faddl
dec
lret
push
repz
leave
sbb
cltd
pop
aaa
pushf
inc
lret
jl
or
jae
bswap
adc
aaa
sbb
mov
lret
or
icebp
aaa
xchg
jo
push
mov
inc
in
xchg
pop
jns
jp
sahf
aad
popa
and
add
mov
cld
mov
dec
je
jl
fimuls
jns
pop
mov
popf
push
aaa
push
call
and
cmpsb
mov
pop
add
sub
cli
popf
jb
sbb
add
pop
cmp
ds
dec
fbld
cld
mov
and
aad
rcll
fstl
push
sbb
push
mov
push
push
stos
push
test
lock
jae
pushf
sub
int
dec
imul
push
arpl
lods
cmp
mov
scas
andl
push
dec
inc
in
or
jno
mov
lds
push
in
push
nop
mov
cs
into
lods
les
jbe
ficoms
outsl
vpmacswd
push
jno
cmpsb
mov
negl
daa
outsl
out
dec
pop
mov
xchg
fadds
test
cli
pop
inc
sub
cmp
xchg
mov
mov
push
sub
jg
jbe
sbb
lret
mov
pop
pushf
xor
adc
lret
adc
push
mov
adc
mov
sbb
push
incl
xlat
push
mov
mov
insb
mov
pop
rorb
xchg
mov
outsb
pop
inc
inc
pop
push
xor
aad
mov
cwtl
movsl
dec
push
js
icebp
xor
push
push
js
rolb
adc
pop
mov
mov
cli
lret
popa
pop
sub
mov
push
enter
sub
mov
cwtl
adc
and
divb
out
shl
cltd
into
push
negl
inc
mov
fbld
mov
mov
repnz
xchg
int
add
cmp
jl
mov
push
test
sub
adc
inc
clc
jnp
mov
cmp
jg
mov
xor
mov
jb
lods
movsl
fdivrl
out
inc
push
xor
push
les
iret
lods
aaa
add
xlat
dec
fldt
outsl
cmp
cmc
movsl
jne
sbb
pop
push
andl
int
and
std
xlat
xchg
jb
and
mov
pop
fimull
in
arpl
fs
push
cltd
cli
push
repz
inc
dec
push
fdiv
adc
push
outsb
mov
loop
inc
adc
fidivrl
sub
testl
pop
stc
cwtl
sarb
js
mov
push
das
ja
pop
mov
add
rorl
cmp
jp
mov
movsb
jge
add
andb
xor
test
aaa
js
or
outsl
ja
addr16
mov
loope
loope
lods
ljmp
jae
aam
jno
xchg
lods
push
inc
or
dec
or
xchg
push
jl
jl
mov
mov
into
or
shrb
int
nop
scas
addr16
gs
add
mov
mov
mov
pop
jecxz
or
movsb
je
push
inc
fwait
cld
inc
test
pop
repz
fsts
or
sub
adcb
test
repz
scas
hlt
jno
sbbl
je
mov
cmp
lcall
imul
dec
stos
andb
cmp
push
iret
jl
roll
add
cmp
cmpsl
inc
and
lcall
jno
and
in
pop
jbe
roll
jl
or
push
lcall
jne
movsl
push
shlb
mov
or
in
xchg
inc
mov
xlat
mov
mov
dec
mov
cmp
pop
jno
mov
push
andl
mov
lods
mov
lods
adc
aam
das
xchg
lret
and
fisttpl
mov
jg
mov
pop
or
sbb
mov
daa
outsl
xchg
push
or
cmp
leave
mov
adc
and
pop
xor
adc
sbb
cmp
pusha
stos
sub
sub
mov
dec
std
ss
xor
mov
pop
xor
in
lret
jecxz
inc
lcall
cmpsl
xchg
jp
jp
cmp
movsl
scas
push
xchg
dec
cmp
xchg
mov
ret
in
and
fsubs
stc
dec
mov
gs
call
mov
test
mov
adc
ds
cmp
mov
into
inc
pushf
xchg
jg
mov
jmp
scas
repnz
inc
in
cmpsb
fstpl
push
loope
add
and
xchg
stos
xor
cltd
push
sub
sbb
add
test
filds
loopne
xchg
es
jge
hlt
adc
mov
or
push
sbb
xchg
aaa
imull
fbld
es
ljmp
or
inc
int3
movups
or
mov
push
xor
pop
push
jp
sbb
jle
lds
test
mov
mov
loopne
adc
data16
mov
add
or
lods
roll
jb
add
and
bound
lods
cmp
insl
xchg
hlt
sbb
jecxz
or
ret
sub
push
ffree
sti
sub
outsb
rorl
ficoml
jae
mull
jle
mov
loop
popf
jge
cmp
jne
in
xchg
dec
mov
or
push
enter
add
mov
push
pop
mov
xchg
je
fimull
xor
push
dec
jmp
mov
cmc
push
mov
daa
cmp
negb
dec
pop
stc
movsl
pop
pop
adc
add
mov
cli
xor
rcr
into
scas
dec
xor
lret
or
mov
in
stos
cmp
stos
mov
out
jb
loop
in
jl
sti
rcrb
dec
stos
loope
stc
sub
mov
scas
mov
push
mov
mov
mov
cmp
aaa
pusha
adc
bound
mov
sub
dec
mov
scas
outsb
jl
mov
rclb
jbe
int3
data16
and
mov
popf
insb
mov
enter
int
bound
jmp
fneni(8087
andl
test
mov
or
test
sbb
xor
sbb
jecxz
inc
sub
arpl
push
adc
lods
mov
add
mov
adc
popf
cwtl
shrl
test
popa
sbb
sub
push
out
xor
jae
movsb
or
pop
gs
cmp
cmp
loopne
test
xchg
fldl
ja
popa
idivb
xchg
push
xor
inc
xlat
aas
mov
pop
jne
add
mov
jmp
cmp
fs
push
or
adc
outsl
xchg
add
pushf
js
fsubrp
push
rolb
movsl
clc
xor
sahf
mov
sbb
push
or
arpl
add
insb
lods
js
xlat
fsubrs
mov
adc
sti
movsl
xchg
sub
adc
xchg
arpl
ret
push
sahf
sbb
test
aaa
leave
mov
repz
adc
and
mov
mov
movsl
ficoml
rol
fnstcw
mov
lret
and
mov
call
sbb
ljmp
or
clc
fildll
in
pop
cmpsl
mov
lahf
pop
cs
ret
pop
dec
dec
dec
stos
and
ljmp
in
and
fdivp
pop
add
mov
insl
pop
mov
dec
xchg
imul
dec
mov
lds
jne
push
or
jl
sbb
mov
push
jl
subb
adc
cmpsl
cmp
scas
mov
jl
mov
or
mov
and
addr16
cltd
mov
lock
mov
stos
dec
sbb
inc
insb
pop
in
shrl
xorb
adc
imul
cmp
fsubrp
outsb
mov
pop
outsb
outsb
add
pop
xlat
out
scas
pop
inc
insb
jne
sbb
dec
into
sub
ret
shrl
pop
bound
cld
hlt
negl
imul
jo
push
out
xchg
aaa
mov
sahf
sarb
add
jnp
mov
ret
xlat
sti
out
add
inc
add
sub
adc
add
mov
scas
lds
cmp
add
icebp
fnstenv
ret
push
xorl
rcr
and
mov
and
mov
mov
pop
lret
ficoms
push
inc
arpl
mov
movsl
sub
inc
in
movsb
das
call
repz
lret
fstps
push
aaa
movsl
adc
jne
out
jnp
or
movsl
dec
mov
lret
jns
xor
sbb
or
stos
shlb
and
mov
mov
in
dec
dec
mov
loopne
in
ds
inc
adc
jmp
sbb
cmpsb
out
fldl
xchg
lods
addb
imul
fnstsw
push
repnz
jo
jno
add
dec
dec
int3
test
mov
mov
lea
scas
add
add
fst
stos
divb
adcl
jne
fcmovnb
les
mov
cmp
pop
push
rcrl
push
lea
inc
fwait
or
mov
add
sub
mov
pop
adc
inc
add
xor
pop
push
or
fstpt
adc
add
push
icebp
das
and
sub
aam
das
lock
or
inc
insl
out
jg
stc
fidivrl
or
jmp
jb
sub
stos
stos
ljmp
das
sub
fmuls
dec
call
jg
push
mov
rolb
repz
dec
shlb
jo
out
and
mov
outsb
sbb
jb
mov
cmp
insb
stc
rol
jnp
mov
jg
lods
pop
cmp
loope
cmpsl
fisttpll
push
dec
movsl
xor
adc
jmp
aam
cli
fbstp
mov
addr16
jle
or
xchg
lret
mov
cmpsb
mov
js
ja
mov
das
std
sahf
outsb
gs
loope
mov
lahf
sub
test
adc
mov
fdiv
and
mov
inc
xchg
sbbl
xchg
pusha
mov
jecxz
in
mov
sub
mov
mov
in
or
sahf
imul
lods
adc
bound
leave
cltd
lods
or
fs
mov
cmp
dec
mov
adc
and
dec
ja
pop
mov
stos
sub
shl
negl
jbe
adc
push
push
xchg
inc
outsl
repz
pop
sbbb
mov
adc
or
inc
lahf
mov
xor
stc
test
dec
jle
mov
ficoml
fnstenv
cli
in
sbb
repnz
ret
xchg
and
mov
cmp
fbstp
rolb
mov
xchg
leave
and
sahf
or
out
or
imul
rolb
aad
push
fnsaves
xchg
lods
inc
ds
sar
mov
imul
ret
cmp
addr16
nop
lods
pop
cmovl
inc
call
je
out
shlb
xor
sub
lods
xchg
enter
or
popa
stos
repz
jbe
pusha
cmp
inc
jl
inc
imul
sti
js
mov
mov
inc
mov
int3
int
out
pop
loop
movl
mov
and
lret
mov
test
lea
nop
dec
or
leave
add
int
sarb
push
mov
dec
xchg
movsl
jo
clc
imul
cmc
or
leave
cmp
xor
jl
adc
sbb
fcmove
int
adc
addr16
js
push
jmp
test
jb
push
adc
push
jl
call
jns
inc
sbb
popa
pusha
cmp
fistpll
lahf
pop
test
dec
mov
xor
adc
cmc
rorl
xor
cmp
xor
data16
js
cmpsl
bound
pop
and
mov
push
xchg
lcall
loop
mov
mov
jne
out
pop
push
mov
shll
push
out
nop
xorl
std
rorl
rclb
cmpsb
js
and
lock
rolb
shrl
sar
outsl
lock
mov
mov
enter
ds
out
outsb
mov
dec
repnz
mov
xorb
cmp
or
or
aam
lcall
cltd
inc
jmp
icebp
comiss
les
out
lret
push
call
xor
inc
fstl
push
jle
mov
in
mov
mov
dec
mov
jl
or
mov
dec
movsb
dec
mov
jge
scas
add
dec
addr16
inc
pop
jnp
es
mov
mov
push
test
cmp
jge
cmpl
lcall
shlb
int3
mov
insl
pop
and
repz
bound
adc
int3
jge
mov
jge
cltd
push
cmc
xor
mov
jne
sub
jnp
mov
test
insb
push
push
cmc
jmp
jae
leave
ret
gs
aad
sbb
push
jge
jne
stos
test
stc
jecxz
and
lret
ret
fcoml
cmpsb
push
movsb
xor
and
aas
mov
mov
sub
enter
and
pushf
sub
std
cltd
cs
and
mov
push
xchg
jecxz
push
dec
ret
jmp
outsb
test
insl
mov
jne
sbb
push
iret
bound
mov
mov
xlat
es
scas
lods
and
dec
fadds
lret
add
or
and
adc
aam
xchg
push
loop
loopne
mov
icebp
cwtl
xor
pop
inc
xchg
pand
xor
inc
jmp
shr
fcmovnbe
test
enter
dec
push
xchg
jno
adc
add
xchg
sub
xor
loopne
out
loopne
add
and
cmpsl
inc
hlt
ret
push
dec
cmp
add
push
add
xchg
pop
jns
or
movsl
iret
jle
jp
or
shrl
push
loopne
out
neg
or
nop
sub
cmp
stos
mov
sub
xor
pop
and
loop
cltd
repz
nop
mov
adc
test
jb
xchg
and
in
sub
loop
jmp
push
lcall
push
inc
insl
mov
push
adc
or
shlb
in
cmp
and
fs
sub
fsubl
xor
icebp
lock
mov
outsb
jg
clc
xor
daa
pop
sub
lea
rcrl
mov
jecxz
mov
and
sbb
jnp
mov
stos
push
dec
inc
sub
mov
into
inc
or
les
push
adc
stc
hlt
gs
cltd
or
cmp
cmp
jo
pop
aam
xchg
adc
push
dec
sub
push
xor
mov
xor
xor
mov
aas
and
gs
loope
inc
lods
out
in
pusha
or
ret
outsl
or
push
mov
xchg
xor
shrb
std
pop
inc
arpl
test
jns
cmp
adc
add
push
jp
sbb
xor
add
pop
jnp
out
imul
dec
ret
or
insb
and
adc
je
adc
mov
sbb
popf
push
push
pop
pop
adc
and
lods
push
add
ud1
pop
adc
lcall
ljmp
in
data16
loop
insb
adc
in
pusha
pop
sti
mov
dec
out
xlat
pop
scas
fwait
jl
jae
sbb
test
addr16
push
inc
add
and
rcrl
scas
xchg
mov
add
hlt
or
outsl
fisubs
outsl
sar
lahf
iret
or
pop
call
shl
leave
rclb
dec
fcomps
shll
int3
dec
hlt
inc
mov
fucomip
aam
pop
jnp
xchg
adc
sub
jnp
push
arpl
push
inc
xchg
dec
test
add
xchg
xlat
mov
cmpsl
jmp
in
inc
dec
xchg
xlat
sub
das
xorb
mov
loop
sub
or
mov
mov
ret
inc
and
cltd
addb
xchg
dec
sub
sub
cmpsl
xchg
cli
push
aaa
xchg
shrb
rcr
jecxz
fucomp
bound
lret
mov
hlt
mov
ret
and
mov
cli
mov
push
mov
std
mov
mov
xchg
push
xor
push
lret
insb
insl
mov
or
mov
jns
jmp
out
test
cmp
inc
or
add
callw
jne
adc
sarb
bound
mov
cmp
push
addr16
or
lret
clc
ljmp
mov
jmp
popa
shl
lock
repnz
pop
jne
shll
pusha
jle
clc
sbb
add
add
aam
sub
add
movsb
cmp
stos
and
aas
das
dec
movsb
sbb
xor
xor
stos
jb
sub
aad
lea
jge
lock
mov
das
cmp
addb
sti
jns
pop
xchg
jecxz
xlat
shl
fs
dec
sub
jae
movsb
fstl
cmp
call
sbb
push
lahf
lock
cmpsl
adc
std
faddl
inc
es
xchg
imul
add
fwait
xlat
faddl
cmp
sbb
popf
outsl
outsl
adc
inc
hlt
mov
nop
cmp
dec
in
loopne
inc
pusha
in
les
inc
push
mov
jmp
and
dec
daa
jmp
lahf
sub
int
idiv
cmp
ret
int
popf
cmp
pop
adc
xlat
xor
lahf
push
mov
pusha
push
cmp
add
cmp
adc
xor
xchg
lret
mov
outsb
mov
ret
mov
add
cmp
dec
ja,pn
push
sbb
pop
jl
mov
outsb
loope
add
sahf
xchg
xor
cltd
dec
rcll
loop
xor
xchg
mov
xbegin
fdiv
jle
stc
jnp,pn
sarl
ret
adc
orb
mov
xlat
inc
loope
inc
mov
subb
das
adcl
inc
pop
jg
cmp
aad
in
and
shll
enter
stos
mov
in
popa
repnz
jmp
stos
loopne
inc
or
push
test
or
test
lret
cmpsb
shrl
ror
mov
or
jnp
xlat
lret
inc
sahf
scas
aas
xchg
daa
dec
lret
test
dec
jne
lahf
fcom
cmp
sub
push
sub
sbb
notb
orb
lock
mov
lods
retw
insb
rorb
fdivs
inc
sub
shl
push
mov
mov
int3
sar
hlt
and
iret
adc
mov
ficomps
xchg
gs
rol
push
and
cmp
cmpsb
pop
jb
stc
mov
lret
aaa
jbe
cmpsb
push
stos
lea
push
in
push
lock
inc
xchg
xor
cmc
out
adc
inc
adc
xor
push
sbb
pushf
sbb
or
xor
movb
push
and
mov
jecxz
push
and
xchg
and
out
nop
jl
pop
mov
dec
or
lret
fiaddl
cli
or
fidivrs
das
sub
enter
lods
inc
stos
xchg
sub
push
ljmp
push
lods
inc
insb
push
and
ret
sub
xchg
mov
cmp
mov
sbb
dec
and
imul
je
cmp
cmp
push
adc
lahf
mov
cmp
adc
les
sub
mov
dec
cmp
pusha
or
mov
xchg
gs
jl
pop
or
mov
and
xchg
jg
xor
jns
jne
loope
sahf
adc
aad
sbb
xchg
hlt
scas
stos
das
cmpsl
enter
sbb
icebp
out
mov
mov
inc
push
xor
adc
sbb
es
les
adc
sahf
mov
js
int
or
and
pop
mul
push
packuswb
test
jge
cli
stc
bswap
ret
sti
push
std
negb
adc
mov
sub
pop
push
mov
sbb
cs
stos
stos
scas
pop
orb
mov
push
lods
xchg
xor
push
xchg
jle
mov
stc
inc
cmp
sbb
cmpsb
mov
mov
pop
and
xor
jge
inc
cmc
sub
adc
orb
sbb
cs
ds
and
mov
xchg
mov
mov
out
int3
fsubl
mov
push
out
flds
or
negb
loopne
inc
je
int3
adc
dec
ret
cmpl
lcall
fldcw
insw
daa
dec
inc
jl
dec
scas
stc
push
ror
adc
outsl
cmp
fcmove
fwait
adc
mov
dec
dec
notl
ljmp
push
ficoms
mov
test
mov
aam
lods
movsb
add
out
pushf
sbb
inc
rcrb
dec
lea
sbb
dec
inc
pop
test
xchg
mov
addr16
jl
lcall
or
cmp
cs
and
xor
sahf
test
cs
sbb
aas
inc
sahf
out
adc
sbb
mov
movsl
or
or
cs
inc
mov
call
inc
push
push
test
gs
nop
jns
or
or
mov
adc
popa
repnz
cwtl
mov
and
mov
loopne
add
fisubl
sahf
dec
push
mov
cmpsl
and
insl
pop
daa
nop
shll
cmp
push
jne
testl
push
xor
push
pop
ficomps
sub
fcmovnb
incb
pop
and
adc
out
mov
clc
mov
pop
sub
cmp
ret
and
nop
mov
sub
and
jl
aam
clc
and
or
fldenv
js
mov
sbb
imul
xor
jle
push
mov
stos
lods
xchg
or
add
and
push
dec
push
sub
pop
loopne
cmp
jae
es
lcall
xlat
push
push
sbb
pop
arpl
push
cmpsl
lret
fisubs
jns
call
or
mov
cmpsl
adc
inc
imul
das
fwait
push
push
jp
ror
inc
insb
jno
sub
lods
mov
mov
ljmp
and
pop
dec
int
mov
sub
cmp
xor
mov
clc
sbb
mov
test
movsl
sub
add
sbb
inc
out
mov
sub
dec
cmp
or
rcrl
test
mov
push
adc
add
mov
xchg
and
xchg
xchg
cmp
push
pop
pushl
adc
push
call
insl
or
imul
mov
stos
lea
jo
jae
xchg
mov
jmp
inc
and
lds
xchg
decl
and
mov
movsb
jno
mov
icebp
mov
jl
jg
fcomps
aaa
lods
cld
inc
hlt
std
sub
push
fmulp
xor
fnstsw
ljmp
fisubrl
sbb
and
push
jle
stos
leave
push
jg
xor
push
outsl
sub
sti
nop
sbb
daa
je
movsb
imul
cwtl
mov
stc
jmp
div
sbb
arpl
and
cltd
add
adc
push
jle
mov
jl
movsb
es
mov
mov
js
jle
ja
adc
xor
nop
cs
mov
and
js
aad
cmp
out
and
in
or
mov
mov
cltd
or
les
inc
add
sub
mov
sub
dec
ljmp
add
dec
xchg
sub
movb
push
xchg
cld
out
sub
sbb
xchg
fs
pop
mov
sbb
imul
into
and
push
fsts
dec
mov
out
sub
sub
push
xor
dec
nop
or
sub
stos
ror
aam
andb
fdivrs
popf
into
les
pop
into
inc
cmp
dec
jae
fwait
das
push
jp
in
inc
and
imulb
jns
rcl
cmp
cs
inc
rcrb
sbb
mov
js
in
aam
jns
mov
mov
mov
push
fs
adc
out
adc
or
add
jle
inc
mov
setg
inc
inc
xchg
pop
imul
rol
push
movsl
adcb
cmp
or
jns
sub
cmp
add
leave
jae
out
or
inc
daa
mov
jbe
dec
jo
pop
test
dec
pop
mov
sub
test
xor
loope
mov
ds
xor
jno
mov
adc
mov
inc
jb
je
cmp
or
fs
pop
and
jo
loopne
push
xchg
das
int3
push
and
cwtl
fsubrs
adc
popa
xor
xchg
movl
push
pop
lds
outsl
push
dec
xchg
enter
pop
dec
push
loop
mov
movsl
xor
pop
adc
popa
nop
aad
adc
mov
cltd
jmp
movsb
pop
shrb
repnz
mov
rorb
push
adc
bound
dec
in
mov
fcoml
clc
sub
loop
imul
stc
aam
push
inc
orl
pop
jnp
sahf
fwait
inc
cmp
fcmovu
inc
gs
and
push
in
cli
add
popa
or
cmpsb
mov
mov
imul
cwtl
or
mov
jnp
and
mov
jae
int
loopne
ret
and
pop
shlb
jg
mov
and
insb
test
xchg
cmpsl
in
gs
sbb
xchg
sbb
mov
mov
dec
adc
out
dec
scas
in
call
inc
cli
sub
inc
mov
arpl
sub
lret
xchg
add
ret
lahf
mov
pop
lahf
hlt
xlat
adc
fcomp
sub
xor
int3
lods
sbb
pop
and
aas
fwait
out
mov
sbb
pop
aam
pushf
sub
jno
frstor
mov
xchg
sahf
and
sub
xor
fistpl
jns
enter
xchg
into
mov
mov
pop
nop
and
mov
es
push
dec
and
call
and
pop
fwait
add
cmp
adcl
push
mov
mov
sbb
jle
mov
cld
jno
or
mov
jp
xchg
fcmove
ja
and
dec
sbb
mov
or
in
or
sbb
inc
adc
out
testl
in
int3
int3
mov
stos
and
push
mov
popf
pop
adc
je
nop
pop
in
data16
xchg
jns
fsubrl
leave
daa
imul
xchg
fldt
push
nop
sbb
loope
mov
scas
test
sub
out
movsl
add
pusha
scas
push
loopne
mov
arpl
arpl
sub
jg
clc
lods
mov
jecxz
push
test
jmp
cwtl
ficomps
inc
cmc
aam
jle
fmulp
loopew
ret
sbb
push
rcr
loopne
adc
cmp
lods
inc
push
aad
mov
fnstcw
mov
je
test
notb
in
repnz
int
scas
dec
mov
jnp
leave
jl
daa
dec
loope
fisttpl
adc
xor
jg
stc
sbb
adc
push
insl
test
out
push
mov
push
push
jae
jp
mov
sbb
int
sub
xchg
mov
dec
sub
clc
sti
and
je
push
jle
dec
stos
adc
lcall
inc
push
sub
sbb
test
sub
mov
scas
sbb
and
xchg
aaa
push
fldenv
mov
adc
push
cmp
insb
cltd
inc
jp
pop
loop
xor
lea
jl
or
push
scas
pop
icebp
out
or
sub
out
ret
mov
jmp
clc
mov
push
add
sub
das
movsb
lods
jnp
sbb
fnsave
mov
popf
scas
call
jecxz
repz
push
andps
mov
std
imul
xchg
cmp
inc
jp
cmp
aaa
cmpsb
xchg
divl
ret
into
out
leave
inc
pop
faddl
fcompl
inc
mov
jp
pop
jge
mov
test
add
adc
popf
pop
jno
jb
xchg
rclb
scas
ret
out
aas
mov
xchg
xor
out
push
pop
cwtl
cmp
stc
xchg
movsb
lds
test
pop
pop
movsb
pop
push
aam
add
pop
cmp
inc
aaa
repnz
das
add
pop
iret
xchg
or
lods
aaa
lods
dec
stc
fidivrl
xor
mov
adc
mov
inc
imulb
mov
in
lcall
lods
fmul
mov
jb
sub
mov
jl
xlat
les
sub
loope
std
dec
pop
dec
jle
movsb
ljmp
adc
bound
mov
lcall
xor
xchg
xchg
aad
push
mov
test
movl
and
jmp
and
add
jno
out
shll
subl
pop
mov
or
test
sbb
or
sbbl
cmpsb
test
aad
sbb
cmp
sarb
cmc
in
fs
push
enter
pop
xchg
push
in
xlat
test
leave
pop
sub
push
xor
aaa
pop
scas
mov
iret
pop
jo
cltd
push
gs
out
mov
fildll
les
mov
jns
jne
ret
jmp
fs
pop
popa
lret
outsb
movsb
pop
ficomps
bnd
mov
cmpsl
cwtl
mov
mov
aam
sbb
dec
sub
ss
aaa
lret
cmp
int
aam
imul
lods
insl
cmc
pop
sub
cwtl
int3
sar
scas
xor
popa
cmpsb
add
sahf
out
add
push
leave
push
cmp
stc
mov
mov
icebp
xchg
dec
js
adc
mov
test
int3
dec
xchg
clc
mov
cld
dec
mov
jno
dec
int3
out
adc
inc
xchg
mov
jae
jg
mov
lcall
fstpt
pushl
lea
inc
shlb
inc
dec
jl
adc
stos
insl
in
sbb
sub
sahf
aas
pop
xorl
jae
cs
push
push
inc
in
mov
fstpt
xor
mov
sti
mov
dec
inc
xor
pop
test
pop
push
jne
out
ja
push
lret
jne
jnp
stos
rcrl
fmul
add
ret
xor
rcrl
dec
sub
mov
es
lock
jmp
testl
xor
and
mov
mov
sub
mov
mov
das
pushf
out
sahf
hlt
sub
inc
dec
push
jb
stos
add
cmp
sbb
pop
testl
cmp
pusha
jge
pushf
add
mov
sbb
lods
or
or
bound
jb
xchg
or
lock
sbbl
inc
mov
pop
scas
xchg
and
movq
imul
push
jb
rcll
dec
cmc
push
jbe
pop
inc
sti
pushf
popa
xor
add
lcall
adc
cmp
xchg
lcall
mov
cmp
xchg
enter
adc
push
cmp
push
shr
insb
lods
test
leave
shl
cld
mov
push
mov
xor
jo
pusha
xchg
loop
xor
sbb
stos
push
lock
adcb
jg
push
lcall
xchg
sbb
popa
scas
addr16
jge
jle
ss
jnp
jns
in
das
rolb
cmpsl
push
mov
mov
stos
jo
or
ror
lcall
inc
divb
dec
out
xchg
stos
pushf
sub
xor
in
hlt
lcall
xchg
bound
iret
add
cmp
ret
stos
pop
pop
cld
shr
sbb
and
inc
out
or
xchg
or
sub
fnstenv
inc
mov
outsb
out
sbb
mov
xor
cwtl
push
movsb
push
cmpsb
or
std
mov
xor
mov
mov
jl
mov
cwtl
jp
xor
sub
mov
push
aaa
out
sub
orl
cld
pop
xor
mov
xchg
mov
mov
imul
data16
mov
lcall
fucom
xlat
lcall
mov
mov
push
mov
jmp
cs
push
in
aam
jns
mov
scas
ljmp
dec
lock
lods
dec
jg
cmpsb
ja
cmp
addr16
push
mov
mov
mov
sub
inc
sahf
scas
hlt
fidivl
inc
sbb
inc
cmp
nop
mov
mov
jg
sbb
arpl
dec
fdivr
add
movsb
pop
shlb
mov
outsl
xor
mov
cmpsl
leave
xor
or
xchg
loopne
inc
xchg
xchg
add
cwtl
leave
mov
mov
dec
ss
mov
mov
icebp
xor
ja
mov
inc
repz
push
mov
scas
add
popa
fistps
call
add
fisubs
inc
sub
cmp
aas
loopne
lds
js
sub
cmpsb
aaa
xchg
adc
xor
loope
push
pop
dec
push
sub
mov
inc
shll
orl
jb
inc
int3
popf
popf
daa
fmuls
mov
out
repz
jle
dec
jno
dec
mov
xor
hlt
jae
push
loop
push
cmpsb
adcl
dec
rclb
scas
mov
mov
xor
pop
mov
lahf
jg
add
aas
dec
jmp
add
mov
sti
es
and
aaa
pop
es
jno
sti
inc
and
scas
pop
xor
cli
jecxz
fdivs
mov
cmp
std
loopne
jecxz
outsl
mov
and
aad
or
push
adc
stos
or
xchg
and
ljmp
out
push
ljmp
sbb
jne
mov
xor
mov
mov
adc
push
fisubrs
out
shll
jle
dec
push
leave
fstl
xchg
xchg
cld
lahf
xchg
fs
les
push
dec
mov
cli
sbb
loope
cmp
mov
adc
cs
enter
inc
cli
lahf
outsl
or
test
bound
add
add
dec
test
jmp
mov
loope
jp
gs
cmpb
loopne
xchg
scas
mov
mov
dec
fnstsw
add
jge
mov
pop
cmp
mov
adc
lahf
xchg
jbe
and
lds
scas
addb
mov
gs
jbe
push
push
movsb
leave
pop
pop
out
mov
push
call
das
or
scas
lock
adc
push
pushf
mov
hlt
sbb
and
repz
xchg
fstps
test
cli
push
xor
mov
xchg
jne
mov
popf
and
scas
push
pop
insb
leave
cmp
rol
outsb
pop
loop
xor
ljmp
insb
das
lods
or
pop
pop
xchg
rclb
push
popf
sub
sub
xchg
arpl
pop
lret
movsb
and
addr16
fistps
iret
push
add
test
cs
add
aam
fistpll
dec
sub
cmp
mov
out
add
and
ja
scas
test
jmp
insb
mov
mov
or
mov
and
xchg
pop
std
das
sbb
aam
mov
and
mov
pop
in
add
push
leave
xchg
mov
int3
push
subl
pop
jnp
lods
xchg
pop
mov
movsl
mov
addl
or
add
add
xchg
push
in
cmpsb
jo
push
inc
mov
enter
xchg
pop
inc
lods
and
int3
fldcw
or
ret
dec
inc
pop
xor
xchg
in
xchg
inc
jns
ficoml
jae
cltd
mov
sbb
mov
cmp
jae
push
push
in
dec
xchg
dec
mov
xchg
jbe
negl
xchg
inc
cmp
lahf
xchg
sbb
lods
stc
sbb
mov
jmp
cmp
inc
lret
cmp
cltd
loopne
cmp
jle
push
sbb
pushf
dec
push
cwtl
xor
mov
call
lcall
movsb
jne
pop
outsl
popa
lods
enter
sub
sbb
and
cmp
xorl
ds
hlt
ljmp
arpl
add
mov
in
int3
xor
adc
mov
add
mov
dec
inc
nop
or
rolb
xorl
lods
andb
cmp
xor
mov
push
mov
aas
xchg
mov
jb
push
xchg
fcomps
scas
xor
push
cmp
js
scas
and
xchg
and
mov
lock
orl
jne
mov
sub
dec
imul
loopne
sbb
daa
scas
data16
and
cli
push
movsl
xor
out
fstps
mov
fmull
bound
imul
out
std
sub
inc
mov
pusha
cli
jno
cmp
fldenv
jl
or
gs
and
repnz
pop
xchg
dec
popf
je
sub
outsl
add
xor
jge
xor
lea
xchg
sbb
in
pop
lret
insb
test
addl
hlt
daa
test
xchg
xlat
dec
xchg
dec
push
jmp
push
sbb
sub
and
nop
ja
out
inc
repz
inc
cmpsb
in
push
or
jge
sub
cmc
jbe
push
adc
imul
xor
movsl
icebp
aad
popf
shl
outsb
das
adc
nop
mov
mov
mov
test
loope
adc
fs
fcomps
mov
lock
dec
or
or
dec
mov
adc
inc
js
lods
ss
mov
cmpsl
sub
add
dec
hlt
mov
xor
or
jb
mov
imul
sbb
subl
fs
fists
jae
cld
cmc
push
xor
iret
jl
jbe
adc
loope
xor
nop
and
xchg
inc
sub
cmp
insl
fimull
mov
jb
test
inc
hlt
adc
adc
scas
jecxz
pop
pop
pop
xchg
or
xchg
test
repz
js
and
ds
ljmp
dec
fwait
scas
stc
movsl
xchg
push
pop
aad
in
hlt
jecxz
jae
sbb
inc
jne
pop
pop
jmp
xor
mov
pop
add
sbb
insl
and
jnp
jae
addb
lea
enter
fwait
lods
ret
cmp
mov
sbbb
add
or
inc
mov
insb
je
xor
shrl
test
mulb
add
push
cmpsb
iret
inc
sbb
sub
mov
incl
call
cltd
mov
sbb
in
jbe
enter
mov
lock
jg
xor
dec
cmp
sub
lock
into
fs
cld
pop
adc
jp
sub
lcall
mov
data16
jle
out
jno
xor
mulb
adcl
testb
dec
ds
testb
mov
cli
add
ficompl
inc
sar
inc
mov
inc
gs
push
lea
test
push
stos
bound
ja
pop
mov
or
sbb
sbb
and
cmp
les
popf
movsl
notb
xor
shl
mov
dec
sti
aas
sets
shl
fwait
mov
dec
push
mov
mov
popf
test
jecxz,pt
sarl
addr16
pop
iret
xchg
popf
jnp
mov
sti
pop
mov
in
and
lock
fists
adc
adc
lret
idiv
sub
in
push
shrb
loopne
ret
out
rep
xor
loop
add
xorb
stos
xor
fstp
je
stc
and
test
push
jge
test
xchg
arpl
cmp
lods
mov
stc
in
push
cmp
test
jecxz
shl
les
mov
jle
push
aas
adc
fs
movsb
jecxz
adc
push
arpl
add
cli
imul
jmp
adc
ljmp
push
rcr
cmpsl
add
inc
ss
xchg
jl
jecxz
xchg
push
das
sub
ficoms
mov
sahf
jo,pt
pop
sub
mov
fbstp
mov
sub
imul
or
xor
popa
adcb
imul
imul
sbb
lock
xor
scas
fwait
ljmp
xchg
enter
sbb
pop
mov
fsubrp
fdivl
mov
xor
push
insl
lret
aaa
rol
leave
out
push
push
xor
push
jmp
adc
cltd
or
icebp
or
pushf
xchg
mov
loopne
inc
test
ja
mov
sub
repz
lahf
sar
jle
ljmp
mov
jne
data16
sbb
fmulp
jbe
jbe
jecxz
adc
jmp
fsub
insb
xlat
lea
xchg
xchg
fsts
stos
pop
lcall
in
sbb
das
aas
sahf
int3
jno
lret
pop
push
cld
push
fistpl
pop
fbld
xor
inc
sbb
mov
mov
addr16
or
push
dec
int3
outsl
fiadds
cmp
repz
in
fldenv
shr
mov
adc
shrb
movsb
xchg
cwtl
jbe
and
cmp
lret
mov
mov
jecxz
pop
hlt
ljmp
jmp
gs
cmpsl
pop
loope
and
mov
imul
addr16
adc
or
xchg
in
in
fldln2
cli
orps
scas
xor
mov
add
mov
stos
inc
outsb
push
shlb
sti
dec
push
mov
add
push
pop
cmpsl
dec
cmp
cmc
mov
push
das
scas
je
mov
cmp
adc
fsubl
dec
fwait
dec
mov
lahf
out
ljmp
fdivl
fwait
ljmp
sahf
cmp
sub
jnp
popa
push
add
mov
in
cltd
fldenv
inc
pop
xor
stos
add
decl
sub
enter
cwtl
push
test
mov
pop
inc
gs
std
les
mov
lock
and
repz
mov
mov
outsl
xor
and
addr16
or
adc
adc
xor
or
mov
dec
push
add
fbstp
jle
mov
andl
jmp
enter
lcall
push
xchg
push
mov
sbb
movsb
jno
cmp
je
lods
xchg
sub
mov
out
incl
dec
push
ret
mov
inc
add
mov
jns
sub
std
pop
clc
mov
cmpsl
orb
mov
ret
and
pop
mov
icebp
fiadds
lods
adc
and
shrl
inc
pop
test
xchg
sub
aas
add
xchg
sub
pop
push
add
subb
mov
mov
adc
cmp
out
daa
pop
pop
and
pop
stc
push
ret
leave
ror
imul
int
mov
dec
stc
mov
or
enter
push
xchg
sbb
lds
fstpl
push
mov
pop
mov
jae
outsl
leave
insb
sub
cli
rolb
mov
sbb
xor
pop
mov
cli
aad
fs
pushf
and
or
icebp
mov
push
ss
aam
shlb
popa
xchg
or
cld
ljmp
xchg
pop
sub
inc
inc
jp
jmp
addr16
dec
xchg
xchg
and
cli
mov
pop
in
pushf
sbb
pop
jecxz
pop
pushf
push
or
push
test
lahf
add
lret
and
rcll
push
clc
push
adc
cli
scas
hlt
xchg
hlt
inc
enter
enter
popa
push
movsl
pop
jae
je
push
movsb
scas
xor
lret
mov
xor
mov
rcrl
or
aam
out
test
sbb
stos
jmp
pop
into
test
and
push
mov
pop
jb
scas
out
xor
fstps
rclb
and
mov
test
sub
add
xchg
adc
jb
and
xor
cli
loopne
cmpsl
movsl
ds
and
test
dec
jo
pop
cwtl
and
cmp
adcb
popa
in
jp
mov
jp
sub
aas
xchg
fidivl
ret
cmc
lds
push
flds
push
movsbl
push
inc
sbb
call
pop
xchg
shll
dec
dec
pop
cli
mov
and
and
adc
push
xor
xor
cmp
push
jb
lret
jnp
repnz
push
cwtl
jp
jecxz
movsb
hlt
dec
jo
sub
xchg
dec
dec
pop
push
and
adc
divb
pop
out
addb
dec
imul
inc
int3
hlt
sub
mov
adc
add
push
sbb
ds
or
mov
bnd
push
add
scas
or
in
gs
in
jg
inc
aaa
fidivs
mov
lea
scas
pop
push
mov
dec
and
loope
cmp
pusha
cmp
cmp
ja
sti
js
sahf
popa
repz
adc
aam
sub
xor
sbb
xchg
dec
pop
rclb
hlt
inc
cmpsl
add
rorb
call
mov
push
lea
mov
cwtl
call
pusha
in
stos
cmp
or
fisttpll
es
loop
push
sbb
xchg
call
jae
adc
jecxz
test
ret
les
sbb
sub
mov
mov
lret
popf
imulb
std
shll
lahf
adc
gs
jge
jbe
test
repz
nop
xor
jne
test
inc
and
pop
mov
fisttpl
mov
inc
mov
fstpl
mov
pop
xor
repz
mov
gs
sub
add
mov
std
or
stc
lea
xor
jl
std
cwtl
sbb
pop
shrl
sub
imul
sbb
mov
pusha
sub
push
test
sbb
dec
ss
les
rcrb
dec
xlat
cmc
sub
push
xchg
mov
and
bound
pop
daa
inc
mov
jo
stos
setle
shll
push
rcrb
xchg
test
jmp
lcall
call
mov
mov
jmp
out
pop
mov
jmp
xor
cmp
mov
push
adc
mov
dec
cwtl
or
inc
push
mov
push
nop
adc
push
hlt
pop
and
dec
pushf
xchg
mov
nop
sbb
in
dec
popa
in
xchg
and
sbb
in
mov
icebp
mov
pop
mov
xchg
push
cmp
jne
ljmp
cmp
dec
cmpsl
xchg
sti
add
mov
lds
arpl
pop
bound
push
push
inc
stos
cmp
lods
subl
or
in
jae
aam
sti
lods
dec
ss
bound
test
cld
jmp
push
lahf
nopl
cmp
fstp
and
inc
add
jp
pusha
dec
mov
in
lcall
das
orb
xchg
into
xchg
mov
cmc
aad
dec
cmp
jno
lods
adc
sub
mov
lds
jae
sub
int3
sub
adc
xchg
and
ret
aaa
stos
jne
mov
xor
fwait
xor
push
bound
sub
mov
iret
lea
fisubrl
leave
cld
push
xlat
inc
or
fwait
repnz
mov
mov
dec
or
jns
aad
adc
and
pusha
inc
arpl
hlt
jg
mov
lock
xchg
js
in
jmp
and
aad
movsb
and
ljmp
fildl
ja
mov
push
cmpl
pop
mov
pop
lods
and
inc
imul
inc
imul
jns
ret
mov
out
lret
lods
mov
sbb
push
xor
ljmp
xchg
adc
xchg
in
mov
out
cld
stc
lea
ret
les
mov
pop
xchg
pusha
push
sbb
xlat
cwtl
or
fdivrs
mov
scas
sbb
lock
jne
cmp
sbb
jg
nop
lock
js
scas
insb
mov
dec
fincstp
xor
adc
lcall
xchg
mov
and
shlb
jl
imul
popf
sbb
mov
ficoml
mov
add
mov
sub
pop
orl
movsb
jge
cmp
hlt
aas
xor
cmp
stc
push
xlat
xchg
data16
mov
jmp
sbb
adc
in
mov
dec
inc
dec
inc
cmp
mov
mov
js
xchg
jbe
rclb
jge
insl
inc
fs
mov
fsts
das
mov
popf
adc
and
andb
fcmovnbe
cli
and
lock
xchg
mov
mov
into
test
xchg
imul
jg
repnz
outsb
int
push
jae
movsl
movsb
negb
arpl
mov
and
lock
mov
inc
scas
mov
sub
lret
mov
inc
and
orl
fisubl
pop
insl
out
lock
scas
or
aaa
aas
sub
ret
cmpsl
mov
loopne
adc
dec
sti
ss
pop
mov
scas
int3
cmp
or
cmp
stc
sub
pop
stos
addr16
leave
mov
clc
in
fsin
test
fwait
subb
mov
fwait
lods
xchg
fwait
lahf
inc
mov
jae
sub
push
adc
arpl
cwtl
mov
xchg
cmp
add
stos
sbb
and
inc
shlb
and
xor
and
icebp
dec
test
loope
dec
lahf
icebp
dec
cmpsb
lea
sbb
iret
out
jae
lret
sub
cld
or
dec
adc
push
movsb
arpl
scas
push
cltd
cmp
out
and
pop
out
out
inc
mov
fsubp
mov
or
sbb
out
mov
enter
add
add
xchg
cmp
sub
mov
jnp
shrb
outsl
inc
push
mov
sahf
enter
testl
dec
loopne
aam
sub
arpl
mov
jbe
outsl
lods
inc
js
mov
xchg
xor
insb
stos
adc
stos
idivb
lret
inc
test
xor
adc
push
mov
mov
popf
stc
cmp
xchg
mov
jge
sbb
cmp
inc
sub
or
sub
rclb
adc
das
and
mov
repnz
stc
or
call
push
pushw
adc
stos
imull
adc
sbb
das
push
and
mov
dec
data16
xor
push
scas
stos
pop
xchg
mov
leave
jno
mov
loope
ret
fwait
pop
push
xorl
lods
inc
dec
mov
scas
mov
test
lcall
xlat
ret
push
sahf
jnp
add
ljmp
dec
es
sub
pop
lds
inc
push
pop
xor
and
addr16
xchg
pop
test
cmpsl
inc
push
inc
add
xor
test
lar
push
jne
xor
sbb
lret
mov
sbb
jp
mov
mov
cmpsb
dec
or
sub
pop
mov
insl
sub
pop
push
mov
xchg
dec
jns
pop
and
jmp
mov
or
fadd
repnz
shll
into
int3
aam
jno
in
cwtl
scas
push
push
cmp
xor
shl
xor
jae
add
fwait
aam
jae
sub
push
icebp
rol
int
sub
fsubrs
cmp
loop
sbb
jl
inc
xchg
das
mov
mov
xchg
orl
xlat
fwait
push
adc
test
jl
sub
inc
jp
lock
movsb
push
dec
mov
stos
syscall
adc
das
xor
xchg
negl
test
imul
sbb
xor
cld
adc
mov
inc
cltd
jno
mov
sbb
push
rcl
test
xor
test
rcr
and
mov
or
sub
jo
cmp
cmp
mov
xchg
es
and
xchg
mov
ljmp
mov
lcall
push
decb
mov
in
mov
add
punpckldq
dec
lods
cmp
dec
adc
inc
pop
sbb
adc
mov
sub
outsl
add
mov
fistpll
mov
testb
ss
inc
clc
sbb
sarb
movsb
rcrl
sahf
add
inc
cmp
mov
out
jne
and
rorl
inc
mov
adc
out
mov
inc
jmp
inc
mov
mov
add
mov
mov
and
jmp
push
shrl
cld
mov
rorb
icebp
ljmp
std
inc
aas
imul
insb
fcomps
xchg
lea
std
xor
mov
sub
leave
cmp
cmpsl
xchg
fildl
adc
mov
fidivrs
sub
int3
imul
sbb
cmp
imul
cmp
push
int
loope
aaa
mov
jmp
test
push
in
pushf
int3
fs
mov
and
push
and
cld
iret
and
lods
mov
nop
inc
mov
dec
lret
sbb
insb
movsl
scas
fistpll
in
push
push
pop
cltd
adc
pop
es
pop
andl
rorl
fistpl
call
js
xchg
scas
inc
pop
stc
repnz
out
jnp
add
in
sub
cli
rcrb
xlat
lahf
sub
cmpsb
cmp
adcl
adcb
jbe
xlat
dec
outsl
add
rcl
mov
into
fidivs
inc
mov
jnp
pop
pop
dec
test
into
sub
ljmp
adc
stos
jbe
in
stc
out
adc
push
cmp
mov
push
iret
pop
mov
cmp
and
icebp
and
cmp
push
xchg
popa
imull
push
sbb
push
lods
push
fmull
jp
stc
cmp
scas
or
or
dec
push
xabort
dec
es
les
cmp
xor
dec
mov
mov
pop
cmpsl
aaa
repz
jae
dec
addl
dec
sub
add
pushl
popa
jg
in
jg
iret
adc
es
lods
sub
ss
mov
mov
lret
std
inc
cltd
push
pop
dec
lock
add
cmp
cltd
mov
ljmp
fists
sbb
xlat
add
ljmp
pop
and
jl
incb
inc
aaa
push
mov
mov
ja
cmpsb
push
inc
rol
out
shlb
jmp
decl
fs
aas
pop
out
mov
pop
inc
cmp
in
bound
jle
sub
pusha
cmpsl
shrl
fpatan
cmp
jb
xor
sbb
inc
push
das
mov
jecxz
ret
in
inc
pop
movsb
xor
mov
outsl
imul
inc
daa
adc
inc
in
fadds
test
jecxz
push
push
xchg
enter
push
push
mov
mov
insl
dec
ret
ficomps
or
pushf
push
inc
and
xchg
insl
lcall
fcomip
in
mov
adc
js
mov
popf
sbb
mov
arpl
pop
xchg
xchg
mov
aaa
dec
push
lock
ficomps
adc
movsl
adc
jp
jmp
cmp
lods
cs
push
rcrl
pop
fisttpl
jb
dec
xchg
lret
movsw
mov
dec
sbb
rorb
jno
inc
mov
mov
xchg
pushf
int
outsb
cmp
and
jae
adc
testb
push
sbb
dec
insl
lcall
loope
daa
inc
push
xchg
sahf
pop
adc
mov
add
mov
sahf
jbe
inc
pop
es
hlt
sub
pop
mov
mov
sub
push
xchg
cwtl
mov
xchg
cmp
sbbb
in
mov
adc
push
fstps
aas
adc
cmp
jge
jecxz
dec
js
or
adc
lock
fdivl
je
mov
lret
cli
mov
sbb
xchg
lds
add
inc
mov
add
dec
sbb
cmpsb
sti
xor
hlt
jmp
mov
repz
push
repnz
sbb
sub
or
add
mov
sbb
push
pop
mov
scas
jl
xlat
je
or
loop
pop
inc
test
pop
lock
push
dec
or
push
je
and
in
and
push
add
imul
xor
or
push
jp
movsl
adc
xor
mov
cld
mov
adc
stc
icebp
mov
and
sbb
mov
sahf
test
pusha
popf
sub
repnz
or
dec
into
sbb
xchg
jge
ljmp
add
mov
sti
es
fnstenv
jo
cmp
iret
jnp
add
dec
aam
in
dec
or
sub
sbb
lds
dec
or
mov
add
imul
cmp
jb
popa
inc
popa
and
xchg
xchg
rcrb
jmp
call
lods
mov
cltd
mulb
aas
repz
aad
shrl
jecxz,pn
out
fisttpll
or
cmc
nop
popf
mov
lock
xchg
repnz
test
jae
stos
sti
jne
sbb
les
std
cmp
fistpll
cmp
cmpb
dec
mov
sub
std
xchg
jne
jne
mov
loop
mov
jge
dec
cs
dec
inc
mov
lret
sub
mov
or
call
outsb
lahf
xchg
stos
jnp
jb
lahf
sti
mov
aas
sti
push
mov
and
mov
add
jge
hlt
push
dec
xchg
xchg
mov
mov
pop
mov
enter
add
int3
jbe
add
or
les
scas
mov
mov
add
xchg
in
sub
pop
test
xor
pop
js
cmp
xlat
bound
jns
lods
push
push
pop
mov
xchg
dec
out
cld
pushf
mov
xor
and
js
inc
adc
xchg
pop
jmp
out
jg
mov
fldcw
mov
jb
push
xchg
adc
dec
cltd
push
mov
mov
loope
roll
mov
xlat
jmp
fisubl
enter
xor
jae
push
or
dec
pop
push
push
popa
sub
testb
jecxz
mov
inc
mov
imul
std
loop
cli
into
inc
mov
aad
fiadds
faddl
sbb
pop
push
xchg
adc
repz
mov
pop
fistps
jno
int
fsts
outsl
add
adc
fcom
out
aad
xchg
lds
jg
dec
daa
dec
dec
getsec
or
pushf
stos
rcrb
jg
leave
fnsave
outsl
das
dec
dec
mov
sub
in
jl
sbb
inc
pop
xor
test
xor
xor
mov
pop
cld
lock
mov
mov
mov
lea
or
jg
pop
sub
jecxz
xor
push
outsl
push
cmp
xchg
push
out
hlt
add
loop
lcall
rclb
js
gs
loope
xchg
arpl
outsb
cmp
int
gs
and
jae
outsl
add
shlb
xchg
inc
mov
lahf
mov
inc
insl
imul
addr16
imul
cli
mov
imul
sarl
sbb
mov
dec
aad
ss
cmp
or
jae
mov
adc
inc
add
negl
repnz
mov
movhps
mov
lds
insb
xor
popf
push
cmp
xor
fists
shlb
mov
and
loope
fisttpll
jl
arpl
xchg
bound
and
scas
pop
and
lcall
nop
imul
sub
or
pusha
push
aam
leave
das
or
and
ss
and
pop
inc
add
sub
neg
into
mov
sub
jmp
decl
or
xchg
mov
jns
in
inc
adc
xchg
xchg
xchg
es
lock
inc
sub
mov
fisttpl
or
pop
sub
in
pushf
sti
and
lock
ljmp
enter
add
push
aaa
mov
enter
lahf
pop
cmp
std
aad
popf
dec
xor
mov
lret
jp
push
gs
es
xor
xchg
out
mov
xchg
subl
sbb
and
les
je
mov
imul
jae
out
lcall
arpl
push
imull
in
loopne
inc
inc
mov
or
and
jae
out
mov
sub
cmp
sahf
insl
fs
je
adc
test
jb
push
sub
movsl
imul
bound
imul
mov
imul
les
jbe
jne
test
and
movsb
lock
add
and
push
mov
mov
push
or
ds
js
pop
into
bound
clc
push
ss
or
sbb
mov
inc
je
or
repnz
pop
in
pop
insl
test
jmp
adc
push
jl
xchg
loope
xor
jmp
rcll
pop
daa
fldcw
adc
pop
xlat
sbb
pop
xchg
jb
push
mov
and
sti
fcoml
xchg
pushf
push
mov
mov
aam
push
jno
inc
out
fimull
push
jb
fstpl
push
sub
je
iret
int3
pushf
cmp
push
aaa
sbb
ret
xor
movsl
movsl
repz
xorl
mov
sbbl
imul
stc
divb
sti
enter
adc
movb
lcall
or
mov
jnp
jg
mov
pop
pop
xor
mov
dec
hlt
daa
ss
dec
pop
xchg
repnz
iret
add
lcall
xor
push
js
pop
hlt
cmp
jne
and
enter
push
push
sub
dec
popf
sbb
mov
mov
outsb
inc
imul
pop
sti
inc
pop
mov
ror
jecxz
shrl
pop
pusha
adc
mov
push
shll
pop
lea
jnp
xor
pop
pop
sbb
xchg
jp
xor
fs
jne
out
xor
cmp
cmp
inc
sbb
mov
loopne
in
mov
repz
sub
xor
push
inc
stos
subb
mov
or
mov
aaa
push
mov
mov
inc
push
inc
mov
add
mul
jno
das
sub
cmc
loop
sbb
xor
add
xchg
cmp
aaa
and
xor
std
pop
pusha
out
scas
loope
out
mov
outsb
jnp
ss
loope
mov
shll
pop
mov
push
sti
imul
and
adc
mov
mov
adc
ror
pshufw
mov
cltd
in
dec
xchg
stc
fdivr
dec
unpckhps
mov
movb
test
pop
imul
or
adc
fnstsw
add
push
adc
adc
add
loopne
aas
jecxz
xorb
cmpsb
cwtl
in
movsb
leave
push
cmp
pop
les
jge
add
cmp
add
mov
push
xor
es
shr
cltd
imul
std
cld
dec
rcrl
popf
es
mov
popa
sahf
cmp
insb
int
xchg
sbb
inc
push
imul
hlt
adc
inc
mov
mov
add
pop
jecxz
aaa
mov
push
mov
cltd
out
mov
out
test
loopne
xchg
add
fs
and
dec
sti
ss
lds
outsb
lods
sbb
cmpl
pop
mov
fsts
push
loopne
adc
js
push
jno
aad
stc
xchg
xchg
fsubl
lods
push
cmp
lods
xchg
popa
push
sahf
jl
sub
sub
inc
or
mov
pop
push
popf
lea
mov
jb
ret
push
adc
mov
push
subl
push
lret
and
mov
lds
cld
jae
mov
fadds
inc
push
fistps
pop
add
lods
sub
nop
sub
loop
xor
mov
adc
test
aaa
and
lds
push
mov
arpl
xor
adc
mov
js
xor
sbb
or
cmp
push
pop
mov
or
push
or
jl
ror
mov
cs
lret
jp
jge
mov
cmpsb
pop
xor
test
mov
dec
sub
scas
jmp
test
jle
mov
enter
je
fsubrl
je
mov
mov
and
jns
pop
lods
call
sahf
xor
inc
and
mov
mov
sbb
shlb
out
push
aaa
mov
sbb
stos
stc
xor
dec
inc
loope
mov
push
push
lods
aaa
push
sbb
jg
mov
or
testb
xor
jbe
lahf
addr16
cmp
clc
leave
out
mov
lret
out
imul
sub
lods
xor
adc
cmp
fsts
mov
cmp
idivb
push
pop
out
repnz
cmpsb
push
mov
dec
popa
scas
sbb
cs
push
cmp
pop
pop
jmp
jae
mov
push
mov
and
cli
aad
mov
sub
cmpsb
aam
jae
cmp
cmc
arpl
jno
dec
ja
adc
xor
int
add
push
dec
xchg
je
mulb
test
mov
dec
push
std
cld
jo
out
call
shr
test
adc
and
int
into
sub
mov
loope
mov
mov
xor
jae
ret
adc
outsl
insb
decl
stos
add
test
aad
sarl
and
and
and
sub
pop
add
fs
push
cltd
int3
movl
xor
jl
fiaddl
mov
xchg
ljmp
jl
jno
rcrl
into
mov
cmp
repz
gs
lods
pop
add
mov
xlat
enter
outsl
jne
sbb
cmpb
cwtl
cmp
shll
or
imul
dec
jnp
outsl
mov
in
imul
loop
into
fcomi
xchg
ja
adc
out
adc
dec
fisubs
pop
push
pop
in
daa
dec
inc
xchg
lods
xor
and
cmp
cs
jbe
loopne
mov
cmpsl
test
add
subb
dec
aas
in
push
adc
jp
movsb
sti
xchg
push
add
xchg
jne
jns
test
aaa
add
out
addr16
sbb
mov
sub
inc
arpl
test
fwait
jp
inc
repnz
out
fidivl
nop
inc
push
out
sbbb
adc
scas
cli
cltd
sub
shll
aam
pusha
jno
lcall
std
mov
call
rolb
lret
je
and
jp
sub
xor
lock
pop
icebp
call
mov
jmp
cmc
xchg
sub
sub
push
push
data16
inc
shrb
xor
push
lds
xchg
adc
or
mov
loopne
cmpsl
lods
and
pop
add
xor
lahf
lcall
daa
test
xchg
mov
inc
push
mov
add
dec
adc
push
sub
and
insl
das
adc
ds
sbb
dec
iret
mov
fwait
andb
lods
jae
mov
cmc
cltd
jne,pn
xor
jge
out
adc
pop
inc
loop
jae
addl
push
xor
into
loopne
jns
nop
sbb
add
push
sbb
cltd
insl
int
xchg
mov
mov
push
jb
lock
aad
mov
adc
xor
cmp
shr
pop
pop
pop
inc
inc
popa
test
xchg
jmp
shrl
inc
xchg
sub
cmp
cmp
mov
cs
jae
cmp
sarb
lret
xlat
mov
pop
mov
jb
or
jle
daa
repnz
adc
sbb
shlb
dec
call
jmp
cmpsb
xchg
leave
hlt
xchg
mov
jmp
pop
jmp
mov
jle
ljmp
movsl
ss
sub
test
xor
icebp
lcall
jmp
ds
add
and
push
mov
push
repz
test
mov
fcoml
sahf
sub
adc
fcmove
inc
fisubl
xor
clc
mov
xchg
inc
push
adc
xor
and
push
cmpsl
sbb
and
cltd
mov
int3
imul
xor
or
add
mov
imul
or
stc
fwait
and
add
outsb
mov
pop
jne
xor
mov
xchg
in
push
xchg
inc
sahf
scas
dec
mov
xchg
mov
xchg
sub
stc
dec
repz
stc
pusha
fwait
js
out
inc
jge
in
and
ret
jl
imul
mov
mov
or
jne
lret
arpl
in
mov
lahf
test
push
loope
or
xchg
cmp
mov
cmp
push
popf
mov
popa
lahf
fwait
stos
sbb
popa
cmp
sub
pop
push
fcomps
xchg
jmp
push
jo
or
adc
mov
or
bnd
in
dec
fwait
add
icebp
mov
push
cmp
mov
mov
cmp
pushf
or
sbb
push
je
xor
test
nop
inc
aad
xchg
in
mov
and
mov
int
popa
inc
addl
lahf
mov
jmp
mov
data16
out
jmp
outsb
daa
inc
out
lods
test
mov
cmp
pushf
pop
shrl
pop
inc
inc
sahf
mov
dec
scas
or
pusha
and
popf
or
push
add
xor
jmp
out
negb
adc
xchg
pusha
sub
xor
fs
jo
sub
inc
pushf
insl
ds
dec
test
lcall
test
jp
cmp
rclb
add
mov
inc
aaa
daa
rep
in
bound
mov
popa
add
pop
loop
and
xchg
or
lock
ret
mov
inc
sbb
test
mov
pushf
push
mov
push
sbb
je
enter
add
in
cmp
inc
and
sbb
xchg
mov
sbb
xor
pop
pop
pop
adc
pop
iret
test
in
icebp
mov
loopne
and
movsl
mov
push
jle
stos
scas
fs
sub
out
sub
inc
mov
in
push
clc
test
ljmp
popf
divb
push
xchg
ljmpw
sti
lods
lods
ja
test
lahf
and
pushf
mov
cmp
cmc
mov
sbb
pop
sub
mov
pop
jbe
mov
repnz
mov
mov
mov
jnp
fwait
mov
call
hlt
shl
add
jp
xor
push
in
shll
push
call
mov
cmp
hlt
loopne
int
adc
push
lds
cmp
cmp
or
push
xchg
shlb
jb
jb
divb
inc
push
out
mov
xor
sbb
add
jecxz
and
std
fldt
loop
xchg
int3
or
mov
mov
mov
mov
fcmovbe
mov
cmp
lcall
insb
add
cli
int
sbb
sub
loope
movsb
mov
iret
fcomi
bnd
stos
push
ljmp
push
jecxz
mov
and
in
push
jne
sub
adc
cmpsb
inc
xchg
mov
sub
mov
xchg
div
jb
pop
clc
mov
inc
stos
push
cmc
add
ljmp
sub
push
mov
jle
cld
int
or
jb
jg
mov
imul
push
es
stos
or
jecxz
movl
jb
sbb
cmp
dec
stos
pop
inc
xor
stos
push
inc
repnz
sbb
pop
mov
test
jnp
xor
int3
scas
in
xchg
jbe
js
leave
insb
mov
cwtl
popa
dec
outsl
mov
repz
or
arpl
movsb
push
mov
inc
test
mov
icebp
add
pop
insl
jl
dec
test
dec
data16
stos
ss
popf
icebp
xlat
xchg
and
scas
sbb
jp
dec
sti
sub
jle
pop
scas
fxch
in
xor
popa
inc
cmovne
cmpl
mov
repz
pushf
adc
xor
or
cmp
scas
imul
xor
mov
adc
popa
dec
xlat
xor
xor
outsl
inc
adc
sbb
lahf
or
adc
xchg
lods
pusha
repz
popf
xlat
outsb
add
and
push
dec
mov
lret
pop
sahf
mov
jge
and
jle
pop
add
out
xchg
repnz
cmp
pusha
jne
js
loopne
lcall
mov
jmp
jl
mov
mov
aam
inc
add
jb
leave
add
ss
xchg
pop
fldl
xor
cmpsl
pushf
dec
jo
shrl
pop
idivl
ljmp
push
cltd
mov
nop
push
inc
xchg
push
sub
pusha
cltd
getsec
scas
movsl
cmc
xor
lret
push
dec
and
add
sub
push
movsb
mov
out
xor
jbe
and
and
dec
pop
scas
sub
push
pop
pop
push
scas
shll
pop
pop
inc
sub
inc
lret
adc
cli
sbb
sbb
sahf
push
sbb
in
mov
xchg
aas
dec
rcl
mov
push
and
sbb
frstor
or
das
neg
xchg
fcompl
fbld
mov
in
jmp
inc
push
mov
sbb
dec
add
jbe
ds
repnz
lock
push
lcall
mov
dec
xorl
xchg
aam
in
xor
sahf
or
sti
prefetch
loop
cmpsl
dec
imul
test
push
push
in
out
fistpll
inc
mov
and
aaa
mov
xlat
gs
int
les
sbb
or
fisubrs
enter
int
in
add
mov
mov
dec
inc
loop
xchg
das
and
and
loop
fildll
push
popf
mov
and
lods
repnz
std
aad
mulb
stos
pop
aad
sbb
fidivl
out
jo
mov
loopne
repnz
mov
pop
in
and
pushf
dec
mov
mov
imul
mov
out
push
rolb
mov
adc
pop
insl
in
out
and
mov
dec
out
insl
aaa
mov
push
push
loopne
movl
icebp
pop
ja
lahf
dec
xchg
jmp
in
pop
scas
in
inc
dec
sub
xor
mov
dec
xchg
lret
mov
sub
ret
ljmp
leave
add
and
fwait
cmc
xchg
fnstcw
mov
loopne
xchg
js
lds
fwait
sbb
cmp
fildll
stos
enter
roll
mov
inc
mov
mov
insb
mov
add
cmp
sub
in
les
out
cmp
cmp
push
and
ret
movsl
pusha
jmp
pushl
xchg
rclb
mov
jecxz
inc
mov
in
es
sub
or
lret
inc
popf
xor
dec
arpl
ret
jns
inc
adc
xchg
mov
das
movsbl
imul
jecxz
add
rcrl
es
std
punpckldq
xor
lods
inc
mov
shlb
mov
jmp
arpl
call
pop
push
movsb
lods
pusha
fdivs
hlt
jle
arpl
inc
push
adcb
insl
data16
xlat
sbb
and
mov
rorb
adc
mov
call
pop
rcll
sub
cmp
jae
add
fwait
cmp
sbb
sti
dec
cmp
das
cmp
scas
pop
add
fdivl
pop
push
sbb
jmp
enter
scas
cmpl
and
mov
cmpl
pop
cmc
and
icebp
loopne
push
and
jl
push
inc
fs
fcomi
orb
fimuls
cli
idivl
inc
addr16
cmp
mov
addr16
and
dec
enter
jle
cmp
into
cmp
mov
out
or
popf
enter
push
mov
addr16
jmp
mov
push
inc
rcll
and
add
or
pop
jae
icebp
in
mov
scas
jae
stc
js
push
push
push
icebp
mov
icebp
shrb
sub
pusha
call
cmp
xchg
rcrl
sti
lds
sbb
xor
pop
sahf
hlt
imul
test
xor
mov
out
lea
pop
push
test
ficomps
inc
xchg
xlat
push
pop
rcr
push
call
daa
mov
aam
jp
pop
imul
inc
push
call
stos
in
and
fbld
je
mov
les
pop
sub
sub
pop
xchg
int3
dec
jno
loop
shlb
loop
leave
scas
in
enter
cltd
imul
fwait
icebp
pop
sub
pushf
ret
aam
repz
inc
cltd
enter
cwtl
push
scas
cmp
ljmp
xor
jns
std
xchg
dec
pushf
movsb
ss
push
sbb
add
jo
push
lret
inc
test
lods
sbb
dec
imull
push
or
pop
cmc
xor
es
jb
mov
inc
pusha
movsb
stc
jge
dec
fisubs
test
ss
imul
adc
mov
cs
ror
rcrb
inc
inc
enter
test
lea
ficoms
mov
outsb
jne
mov
daa
popf
fists
cmp
loop
mov
mov
insb
pop
pop
mov
cmp
fisubl
sub
in
mov
dec
mov
ja
sbb
or
les
mov
jae
xchg
pop
stc
test
dec
test
pop
out
mov
test
xor
dec
stos
and
andb
sbb
pop
imul
aad
movsb
or
jl
mov
xor
mov
sbb
fidivs
sarl
out
xchg
jb
cld
in
test
outsl
shll
xor
sbb
stos
lret
inc
fadd
rcll
mov
adc
scas
cmp
outsb
cs
ljmp
sbb
mov
lcall
fcos
int
stos
push
imull
js
cmc
aad
add
fisubl
imul
cmc
jl
or
add
clc
inc
dec
sti
and
add
mov
pop
jecxz,pt
cld
loop
pop
int3
ret
jmp
movsl
shrb
mov
out
rolb
mov
fcompl
push
or
xchg
and
notl
shl
loope
sbb
mov
repnz
inc
sarl
inc
mov
mov
mov
fwait
jp
arpl
jno
jno
sub
inc
mov
xchg
cld
mov
adcb
ret
adc
pop
gs
mov
mov
and
mov
gs
mov
sahf
daa
jmp
or
enter
out
add
ja
push
pop
dec
xor
adc
sarb
imul
xor
rorl
cli
xchg
jnp
mov
sbb
push
xchg
out
or
pop
and
sub
or
scas
adc
xlat
mov
fistl
pushf
or
jl
jg
fsts
inc
dec
dec
sbb
cltd
outsb
adc
xlat
or
test
imul
xor
aaa
sahf
sbb
ss
lock
mov
jle
cli
mov
jl
pop
mov
lea
rol
ja
lods
jno
pop
data16
les
adc
sbb
cltd
mov
shl
or
or
dec
fwait
jae
sub
adc
mov
imul
std
xlat
jle
test
fimull
fs
push
test
jmp
jns
cmpsb
lcall
not
in
inc
shr
mov
pop
mov
aas
inc
and
ss
pop
movsl
push
or
mov
mov
sub
call
jp
test
sbb
ds
or
arpl
in
ror
test
mov
mov
mov
mov
mov
mov
xlat
xor
sbb
rolb
aaa
xor
cs
lods
xchg
out
mov
fxch
cmc
lods
mov
mov
sub
cmp
test
aad
and
sbb
pop
mov
cs
adcb
fnstcw
mov
lds
ljmp
push
fbld
or
hlt
iret
hlt
sub
adc
cs
js
jns
xchg
icebp
lods
adc
mov
sub
fidivs
punpckhwd
sarb
int
out
xchg
xchg
xor
dec
dec
add
test
mov
fcomps
adc
andl
test
xchg
rorl
lret
pop
inc
fcmovnb
add
fsub
cmp
cmp
in
in
nop
mov
cltd
sbb
or
sarb
jp
rcrb
popa
mov
mov
ficoml
pop
push
les
or
dec
jb
cs
fisubrs
andl
pop
and
negb
orb
jl
sbb
inc
jae
dec
mov
fsubrs
xchg
push
inc
sbb
fwait
dec
push
jg
dec
pop
insl
xchg
mov
jnp
sbb
stos
cmc
add
rolb
mov
pop
adcl
rolb
xorl
pop
sub
jnp
enter
mov
sbb
inc
jb
das
imul
inc
mov
ljmp
inc
push
add
popf
jne
jmp
je
lds
and
xor
repz
rcll
sbb
cmc
inc
aaa
pop
jl
pop
xchg
jp
aam
pop
pop
sbb
cs
test
cmp
mov
adc
gs
lods
inc
insl
push
dec
or
xor
psrlw
jge
rcll
push
andl
xor
cmp
jne
xor
cmc
popa
adc
jge
and
imull
fbld
int
and
icebp
cs
sub
mov
and
out
inc
rolb
pop
out
jecxz
push
xor
enter
add
ficoms
roll
xchg
dec
sarl
push
aas
out
sbb
pop
lods
ss
and
sti
mul
outsb
lret
lahf
subb
out
xchg
rcl
jecxz
jns
and
roll
ret
mov
jne
cs
sbb
lcall
out
sub
daa
and
cmp
dec
jle
and
movsb
pop
ret
mov
xchg
lahf
cmp
push
punpckhwd
sub
xlat
push
cld
cld
ja
repnz
fsub
fistps
cmp
aaa
push
sub
dec
cwtl
sbb
dec
shll
fldcw
lret
cwtl
clc
in
adc
insl
pushf
dec
jp
leave
mov
repnz
std
mov
out
inc
nop
test
push
mov
jbe
ret
loop
xchg
inc
pop
sbb
ljmp
in
inc
mov
fmul
inc
dec
jl
fbld
cmp
pop
sbb
data16
dec
adc
or
out
dec
lods
push
xchg
push
je
leave
jnp
loope
sub
push
lock
xor
xchg
stos
testb
xor
data16
inc
pop
gs
jae
insb
jp
and
pop
subl
std
xlat
sub
add
popf
cmp
sbb
dec
push
and
fldz
negb
addr16
jae
repnz
rorb
xchg
rolb
jmp
bound
stc
fwait
ds
or
adc
test
out
push
adc
addr16
bound
iret
inc
and
xchg
lret
xlat
cld
pop
xchg
lods
in
sarl
mov
add
push
push
sbb
pop
xor
popa
bound
cli
jp
mov
mov
push
or
mov
roll
mov
fisubl
mov
nop
xor
lds
adc
scas
sbb
lods
mov
push
inc
push
mov
inc
int
push
cmp
jge
aaa
mov
dec
xorb
jo
xor
inc
xchg
testb
std
bnd
das
push
xlat
jo
jmp
inc
xchg
in
push
inc
push
push
mov
es
jns
push
sbb
mov
lahf
and
cmpsl
cmpsb
pop
jns
icebp
or
xchg
jge
lds
or
mov
fsubl
and
scas
rcrl
xchg
int
mov
test
add
add
jle
fdivp
lods
fcmovne
mov
adcb
fldcw
add
adc
into
pusha
and
push
rol
test
popf
adc
divl
into
mov
sahf
mov
adc
mov
jle
inc
adc
shr
fsubrl
je
inc
loopne
mov
js
loopne
fdivs
and
push
and
dec
sbb
insb
repnz
adc
pop
lret
pusha
jnp
add
inc
pop
int
jp
loop
sbb
inc
or
push
dec
es
mov
idivb
iret
mov
repz
and
mov
iret
pushf
hlt
fsub
add
call
and
iret
repz
push
movsl
movd
imul
jg
mov
or
mov
pusha
mov
mov
inc
inc
xorb
nop
cltd
es
xchg
sub
sahf
dec
les
jae
in
adc
push
jb
mov
sbb
sub
clc
shr
ds
lds
filds
jle
lret
inc
mov
movsl
test
mov
lcall
outsb
mov
xor
dec
scas
in
pop
in
fistpl
outsl
cmp
push
insl
dec
out
cli
mov
addr16
pop
dec
scas
cld
aam
jbe
cli
insl
dec
js
flds
fsubs
xor
fnstcw
out
adc
cltd
inc
out
sbb
mov
push
xadd
cmp
aam
mov
pop
sub
stc
cmp
add
lods
js
lcall
sbb
call
fwait
into
push
adc
cli
scas
pop
pop
xor
inc
mov
lock
int3
lret
mov
iret
jns
aas
push
cmp
push
xchg
hlt
fidivs
and
jno
leave
pop
jno
jno
mov
adc
mov
mov
gs
scas
xchg
mov
pop
outsb
jnp
fsubrp
cmpsb
lcall
out
adc
sbb
inc
fwait
mov
sbb
xor
adc
xchg
ljmp
lods
mov
mov
in
pop
mov
insl
mov
sahf
sub
int
push
lock
repz
jnp
cmpsb
mov
jnp
push
inc
adc
adc
push
cmpsb
daa
pop
fistl
cmpsl
or
xor
mov
lock
inc
jb
lcall
fsts
jae
leave
loopne
addl
lea
movsb
xchg
es
subb
loopne
ret
xor
stos
dec
frstor
iret
pop
pop
leave
test
jo
outsl
movsb
mov
mov
repz
cmp
xor
pop
push
or
pop
add
ds
cmp
adc
jnp
idivb
outsl
pop
leave
inc
xchg
or
lret
aad
xchg
mov
push
loopne
pop
stc
adc
je
cltd
add
or
dec
jp
adc
or
mov
add
jbe
inc
pop
or
movsb
inc
xor
movups
pop
push
out
pop
xchg
or
arpl
outsl
or
mov
add
cmpsb
test
repz
ja
push
lahf
mov
insl
push
xchg
push
xor
adc
imul
jg
mov
cld
sub
pusha
nopl
and
sbb
dec
aas
arpl
push
sub
dec
stos
mov
jp
dec
xchg
and
fistpl
mov
and
fldl
ret
xlat
mov
xor
jns
stc
mov
xor
dec
fcoms
or
fldz
jo
mov
lret
shl
shrb
cmpsb
push
repz
lea
sub
jno,pn
jbe
stc
stos
pop
xor
mov
push
lcall
es
xchg
inc
xchg
fbstp
push
push
out
adc
push
call
xchg
inc
sbb
ss
mov
aam
push
xchg
jbe
pop
lret
ror
jg
xor
sub
or
jle
mov
scas
imul
popw
mov
loope
mov
and
xor
mov
je
scas
cmp
push
mov
mov
push
in
cmpsb
lahf
test
adcl
jno
add
jle
dec
push
push
sbb
jmp
das
add
outsl
jg
pop
jecxz
in
xor
mov
decl
arpl
mov
xchg
rcrb
mov
push
cmp
xchg
jbe
cs
mov
int3
xor
xor
pop
or
sti
push
into
mov
subl
int
cmp
lret
adc
inc
inc
mov
fldcw
jb
push
dec
inc
addr16
movsl
dec
sbb
mov
inc
cmp
dec
jmp
fnstcw
xor
sbbl
push
dec
scas
fwait
imulb
push
and
shlb
cmpsl
loope
mov
icebp
jno
mov
imul
sub
repz
lods
addr16
pop
ja
insb
cmp
pushf
gs
pop
jg
mov
pop
test
in
xorb
cmp
and
sbb
mov
cmp
mov
cmp
ficoml
pushfw
sti
xor
mov
cmpsb
sub
dec
sbb
stc
jmp
in
xchg
mov
push
dec
pop
jp
or
cwtl
in
cmp
mov
lds
das
cmp
in
cmp
aad
lahf
xor
pushl
jmp
scas
icebp
xchg
jae
inc
addr16
pushf
push
gs
adc
xlat
sbb
int3
add
xchg
call
aad
sbb
mov
test
inc
sbb
fcmovnb
stos
or
data16
leave
sarl
xor
das
mov
xchg
aad
dec
sbb
xor
sti
int
jle
fstpt
push
or
dec
call
mov
mov
es
mov
cmp
lret
inc
lea
push
mov
xchg
pop
js
dec
es
adc
cmpsb
pop
jnp
xchg
adc
ljmp
jo
or
sub
in
inc
out
adc
stos
shr
cmovb
xor
inc
mov
loopne
ja
addr16
cld
jno
notb
inc
in
hlt
and
push
cwtl
ja
mov
jl
flds
mov
cmp
es
adc
add
dec
mov
lock
in
lods
out
insb
jnp
aad
pop
sarl
push
mov
stos
push
mov
stos
loop
pushf
aaa
dec
outsl
jne
push
out
mov
aam
xor
aaa
mov
xchg
fidivrs
insl
push
hlt
lret
pop
andb
es
jp
fisubrs
jp
jle
or
dec
or
ficoms
xchg
rcrb
fs
xor
mov
lods
popa
stos
gs
scas
xlat
dec
repz
int
push
mov
and
inc
and
cmp
xchg
fprem
sbb
pop
mov
cmpsb
push
mov
sbb
cmp
fistl
loope
sbb
inc
ljmp
push
lock
xchg
ds
les
or
adc
fstps
mov
pushf
jne
sti
rep
int
sbb
cmpsb
xchg
cmpsl
movsl
or
ljmp
hlt
xchg
jge
fwait
stc
xchg
lods
pop
cmp
xor
rorb
sbb
and
jne
std
pop
pop
lret
jg
call
jns
daa
or
xor
mov
push
xchg
aaa
cmp
jg
jno
push
mov
rcl
dec
xor
xchg
mov
push
out
mov
jge
mov
int
mov
fdivl
mov
stc
in
int
pop
mov
sub
xchg
pop
mov
lret
mov
sahf
cmpsb
cmp
jp
imul
imul
cs
mov
dec
cwtl
ret
pusha
cmp
jae
mov
shlb
stos
cli
pushf
push
add
shlb
arpl
pop
imul
sub
jae
orl
fwait
aas
into
add
dec
lcall
xlat
mov
xchg
dec
ffree
inc
dec
ret
jle
xor
test
pusha
sbb
mov
push
pop
mov
jno
jne
jp
mov
jecxz
scas
dec
ss
push
dec
add
xchg
lock
mov
test
push
leave
cld
push
inc
and
jae
test
movsb
or
jb
dec
andb
sub
and
stos
test
jmp
add
jbe
das
in
jl
lahf
cmpsl
inc
adc
stos
test
fadds
std
mov
mov
ja
xchg
arpl
dec
or
jns
into
jp
mov
mov
and
enter
out
idiv
or
hlt
jmp
fimull
push
roll
lahf
lahf
scas
and
ljmp
and
fidivs
mov
jns
jge
test
in
inc
jecxz
jne
adc
xchg
cltd
dec
stos
cs
stos
jbe
push
sbb
push
or
xchg
cmp
cld
aas
dec
mov
cmpsl
mov
pop
aad
movsb
xchg
hlt
pop
cwtl
int3
jg
and
in
in
movsl
mov
mov
ret
fs
pop
shll
movsb
mov
mov
inc
cmc
mov
add
xchg
das
inc
push
inc
pop
out
pop
ss
adc
ret
scas
fs
fwait
pop
clc
cmp
mov
outsb
inc
push
push
or
sbb
cld
or
jecxz
pop
cltd
inc
and
mov
xor
pop
mov
mov
scas
pushf
stos
dec
stos
xor
mov
in
mov
fwait
inc
sbb
lcall
push
sub
push
sbb
jecxz
mov
mov
movsb
mov
xchg
in
mov
pusha
lahf
adc
xchg
sbb
imul
lret
ds
insb
inc
xchg
jbe
mov
pop
shll
fwait
lcall
int3
jp
lret
data16
push
test
push
push
mov
sbb
lods
push
dec
lea
aas
mov
ss
dec
jp
pop
iret
and
xchg
clc
lret
push
mov
mov
xor
push
cmpsb
ss
or
mov
ffreep
mov
ljmp
and
xchg
sub
lods
add
shll
cmp
mov
fadd
push
push
sub
adc
cmp
in
mov
adc
aas
cmpl
gs
sub
pop
cmpsb
inc
mov
pop
insl
adc
pop
sbb
in
sub
push
jp
je
lcall
sub
ret
std
imul
cmp
lea
or
add
cmp
ret
jg
dec
and
pop
add
mov
cs
jmp
pop
nop
mov
fwait
pop
test
fnsave
mov
sub
inc
std
cltd
and
lcall
mov
xchg
pop
in
mov
mov
fldcw
jno
sbb
add
xchg
cs
sub
mov
inc
push
mov
dec
xorl
shrl
jns
inc
push
mov
pusha
push
jmp
cmp
and
repz
popa
subb
mov
fbld
subb
xchg
pop
int3
stc
movsl
stc
mov
lds
test
into
xchg
pushl
sbb
xchg
cmp
dec
mov
je
xchg
sbb
bnd
ret
cmp
jno
lods
push
push
cmp
cmp
dec
std
mov
hlt
mov
cld
dec
icebp
cmp
clc
add
nop
and
popa
mov
loope
mov
clc
arpl
and
inc
xchg
test
xor
fmuls
xchg
sub
int
mov
int3
in
jp
mov
mov
dec
inc
jnp
enter
mov
lds
int3
push
jmp
inc
add
push
mov
incb
mov
shrb
mov
mov
imulb
jns
pop
mov
scas
jmp
clc
lret
and
incb
bound
xor
mov
push
sub
and
mov
scas
movl
cli
loop
sbb
cmp
fcomi
sub
lock
adc
jns
roll
sub
mov
pushf
lret
push
cltd
lods
lock
or
repz
popfw
jnp
into
cmp
xor
dec
not
inc
pop
fisttpl
or
xor
orb
mov
cmpsb
ret
and
push
add
iret
mov
test
notb
imul
ret
mov
aam
pop
frstor
cmpsb
inc
in
inc
push
jae
mov
cmpsl
ds
sti
addr16
mov
addl
adc
jecxz
das
shrl
mov
push
xlat
and
inc
mov
push
cwtl
dec
pop
inc
jmp
stc
mov
ficompl
mov
sub
in
hlt
stc
scas
jne
std
aaa
das
aas
xlat
hlt
js
push
dec
mov
mov
and
xor
xlat
andl
pop
nop
sbb
std
sbb
sub
xchg
clc
and
insl
push
pop
and
pushf
or
popa
sbb
mov
adc
cwtl
mov
in
mov
into
push
push
mov
and
cli
and
inc
mov
push
loopne
push
lret
or
in
inc
in
fistl
outsb
addr16
dec
xchg
mov
add
xor
aam
pop
mov
push
test
test
mov
mov
jb
or
gs
pop
int3
lcall
lods
lock
pop
sahf
push
test
jns
mov
push
ret
int3
ret
fistl
jnp
mov
mov
cmc
sub
push
cmpsl
push
imul
push
jmp
cmp
mov
js
lods
mov
dec
shrl
push
jg
adc
outsl
jb
cli
lcall
in
mov
adc
jns
movsb
xchg
xchg
mov
mov
xchg
mov
jo
stos
push
push
sub
mov
dec
iret
push
aaa
add
jno
sub
lahf
pushf
movsl
stos
jnp
mov
dec
out
stc
add
dec
mov
and
dec
push
mov
in
subb
cwtl
sub
rorb
int
ret
pop
out
imul
mov
mov
insb
lcall
sbbl
xor
or
jbe
out
enter
jne
mov
leave
xlat
popf
lea
jmp
push
dec
pop
add
shlb
idivl
cmp
cmpsl
test
es
popf
push
incb
add
and
mov
pop
sarl
mov
cmp
in
je
jp
mov
loop
sbb
sahf
jmp
fistps
fucomi
in
filds
data16
jecxz
pop
sbb
mov
out
mov
mov
add
imul
or
push
shr
mov
iret
add
ror
cmpsl
rcrl
out
adc
mov
or
or
xor
fistpll
ficoms
testl
sti
fdivl
sbb
or
mov
inc
orl
data16
and
stos
xchg
mov
push
addl
xlat
pop
xchg
cld
xchg
jg
jnp
rcll
add
lods
add
jne
aaa
adc
pop
pop
xchg
test
xor
out
aad
test
pusha
cmpsl
aas
mov
push
xchg
out
mov
rorl
inc
testl
mov
sti
mov
lds
xor
mov
pusha
ret
pusha
mov
iret
mov
int3
mov
fsubrl
inc
das
pop
mov
lods
pop
out
xor
adc
dec
xor
das
push
mov
xchg
insb
mov
mov
adc
hlt
add
push
and
and
loopne
imul
jnp
cmp
mov
mov
lds
sub
js
mov
mov
bound
and
imul
mov
leave
call
xor
loopne
in
orl
mov
iret
jnp
fisttpll
cmp
outsb
inc
int3
cwtl
push
xchg
dec
and
sub
sti
iret
xadd
add
jae
push
scas
or
cmp
xor
pop
out
lea
loope
sub
mov
pop
inc
inc
test
std
push
sub
inc
push
push
sahf
orl
outsb
dec
pushf
cwtl
stos
adc
dec
cmpsl
mov
add
inc
xor
ds
ja
pusha
push
adc
out
dec
ja
inc
jmp
int3
push
insl
pop
sub
xor
inc
in
mov
fiaddl
mov
mov
lcall
pop
rclb
add
lahf
mov
and
adc
sbb
addr16
sbb
testb
dec
push
dec
test
inc
in
mov
mov
cs
xchg
ret
pop
push
mov
je
add
jo
fs
xor
gs
div
xlat
mov
jno
test
lods
sbb
pop
outsl
adc
ret
dec
or
scas
popf
jae
push
icebp
pop
xchg
pop
xlat
jp
xlat
mov
cmp
loopne
dec
pand
push
xchg
loop
sbb
and
loop
inc
dec
push
or
out
out
xchg
stc
sbb
in
fwait
push
das
lock
jae
pop
je
mov
sbb
push
cwtl
aas
negb
popf
xchg
xlat
stos
std
adc
imul
mov
xchg
test
pop
push
add
js
sub
push
pop
push
adcb
adc
mov
hlt
es
subb
js
fstl
xorl
sub
push
fimuls
mov
ljmp
pop
add
xorb
or
mov
cltd
cmp
call
icebp
iret
xchg
scas
sub
cmp
fnsave
jmp
fimuls
repnz
lret
sbb
sti
mov
add
aad
sarl
dec
dec
pop
js
das
daa
push
mov
xor
pop
lret
ds
xor
aaa
xor
cmc
in
mov
mov
into
in
add
pop
daa
ds
pop
pushf
aaa
mov
pop
fcoms
movsl
and
jae
nop
arpl
push
imul
insl
test
adcl
sbb
or
jmp
mov
xchg
clc
movsb
iret
mov
inc
ss
les
sbb
xchg
jo
out
inc
loop
pushf
mov
mov
mov
cmpsl
sub
xlat
mov
xchg
cmp
and
aad
jb
adc
add
adc
ficoml
add
inc
adc
jnp
mov
adc
or
fstl
daa
popf
enter
sub
dec
dec
xchg
inc
nop
inc
sbb
push
mov
decl
outsl
lcall
cmpsb
mov
fwait
cmp
fwait
repz
sarb
mov
xlat
and
popa
sahf
imul
xor
push
cmc
ss
sti
rclb
movhps
nop
push
std
fisttpll
mov
fiadds
outsb
mov
fsubl
loope
pop
pushf
loope
cmp
dec
xchg
jne
fxch
mov
mov
jg
out
cmp
call
adc
cmp
into
mov
inc
fdivs
jno
push
std
inc
jns
int
xchg
mov
js
test
dec
pop
insl
std
call
sbb
or
lahf
cltd
movsl
dec
mov
insl
push
mov
loope
int3
decb
cld
movsb
inc
xor
lcall
dec
shr
test
mov
in
std
aam
push
pop
push
out
xor
push
pop
sbb
push
mov
dec
fmull
or
aaa
pop
dec
sarb
notb
adc
mov
outsl
popf
inc
push
clc
or
xchg
xchg
pop
pop
ds
ret
or
pop
iret
pop
jg
cmp
or
xor
ret
addb
xchg
jg
xor
mov
test
out
mov
les
xchg
add
ja
int
out
adc
cmp
popa
mov
ror
and
mov
dec
sub
mov
repnz
or
jecxz
pop
lods
and
aad
mov
mov
push
pop
xchg
lahf
fdivl
subb
and
mov
sar
cmp
mov
pushf
jb
aam
push
clc
xor
cmpb
mov
xchg
jp
imul
icebp
into
cmp
add
pop
sahf
ja
add
test
orl
adc
or
mulb
cmpsl
cmp
fmull
popf
mov
out
andb
xor
dec
jne
ja
xor
scas
sti
inc
mov
and
mov
mov
out
iret
inc
jl
push
jnp
mov
test
cwtl
mov
xlat
xor
and
adc
js
ret
jno
xor
addr16
lods
addl
test
pop
pop
int
imul
dec
popf
sti
mov
ret
lret
mov
daa
xor
or
mov
mov
jo
jp
cmp
pop
adc
mov
ret
inc
imul
add
jmp
or
dec
cmp
xor
repz
pop
adc
sbb
mov
add
mov
add
lock
cmp
jecxz
das
push
in
insb
xchg
lds
pop
fadd
sub
push
hlt
in
pop
lret
jecxz
sub
mov
jecxz
lods
xchg
cmp
xchg
fucomip
fldt
test
pop
add
xor
lcall
add
ss
repnz
fsubrl
push
sbb
lret
scas
popa
in
mov
divl
sbb
push
jle
jg
cmp
jne
lds
stos
xchg
stos
push
mov
sbb
dec
into
xor
mov
jmp
push
dec
mov
add
les
stc
rorb
lcall
test
fstpl
ret
mov
cwtl
adc
sub
in
testb
ljmp
test
push
add
dec
mov
pusha
out
mov
cmp
mov
movsl
push
rclb
mov
aas
lods
push
xchg
popa
jno
xor
sub
add
dec
roll
mov
or
leave
and
sbb
or
push
nop
daa
and
or
inc
inc
pop
lcall
sahf
sbb
adc
movsb
mov
daa
fwait
sub
sbb
jno
les
and
shll
xlat
ficoml
cltd
enter
stos
rcrl
imul
inc
jp
int
or
stos
cmp
adc
jp
stos
mov
xlat
fcmovnu
pop
cmp
pop
ljmp
pop
push
insl
xchg
shrb
inc
orb
push
and
test
incb
out
fsubs
in
cmovp
aad
cmpsb
xchg
stos
fmull
out
cmpsl
sub
lahf
pop
xor
mov
dec
stc
inc
xorl
dec
jmp
add
add
in
in
lea
mov
pop
lea
xor
test
mov
inc
ret
and
clc
movsb
mov
and
mov
movsl
test
jmp
fwait
bsr
daa
mov
fs
insl
repnz
add
jmp
push
xor
mov
bnd
iret
andl
mov
add
sbb
loopne
fcomps
sbb
or
adc
fdivrl
adc
sbb
stc
push
test
adc
fidivrs
lahf
inc
int3
loop
subb
push
pop
mov
imul
add
xchg
cmp
ja
lock
xchg
push
mov
cmp
movsl
cwtl
in
frstor
in
cli
and
sbb
imul
dec
push
adc
push
inc
jne
jp
jo
or
pushf
sbb
adc
insl
cmpsl
or
add
enter
loope
mov
adc
fs
in
mov
fs
out
and
test
ret
iret
sbb
add
js
enter
jg
iret
sahf
out
lret
ljmp
int
enter
inc
out
testb
popa
adc
jecxz
subl
outsb
cmpsl
int3
sub
pop
leave
imul
mov
inc
mov
and
adc
sub
lret
mov
mulb
jae
int3
mov
or
push
movsl
in
xchg
das
pop
pop
cmpl
jnp
mov
ja
cs
lea
push
scas
jge
scas
dec
inc
mov
pop
movsl
lret
negl
push
ret
mov
imul
out
test
sbb
in
dec
movsl
roll
pusha
jge
push
lods
mov
sarb
addr16
mov
push
test
lret
mov
lret
or
push
cld
or
shll
aad
enter
sub
iret
sbb
jle
lahf
xor
mov
mov
push
push
xor
mov
int
stos
cmpsb
fdivl
xor
ja
adc
loop
andl
dec
shrb
std
cmp
mov
cs
adc
cli
subb
test
adc
xchg
cmp
mov
pop
movsl
jne
int
adc
xchg
outsl
jmp
cmp
ret
mov
push
cmp
dec
pop
jecxz
movsl
cmpsl
inc
aam
mov
sahf
mov
xchg
xchg
bound
ret
iret
sub
jae
divb
repz
decl
out
jno
push
jmp
mov
out
mov
fiadds
bnd
sbb
adc
mov
call
xchg
mov
jge
push
repz
cld
push
sti
cld
fsubr
int3
fimuls
ret
mov
xchg
in
ja
out
repz
sub
xchg
mov
push
cwtl
sti
ja
inc
mov
repz
adc
fsub
mov
lret
or
sahf
or
mov
in
fdivrs
xchg
movsl
mov
xor
push
enter
push
rcll
arpl
stc
xor
dec
out
out
minps
outsb
jge
adcb
addb
cltd
inc
mov
cmp
dec
call
repnz
scas
cmp
cmp
jne
jnp
nop
mov
adc
lock
lret
cmpl
inc
adc
mov
icebp
loope
leave
hlt
out
and
mov
pop
sub
adcb
push
shll
add
adc
add
sub
fmull
mov
mov
cld
popl
cmpsb
pop
pop
arpl
stos
int3
sub
jo
xchg
and
cmc
and
test
cmp
mov
push
and
push
rcr
and
push
inc
mov
int
ret
repz
mov
insl
mov
cmpsb
lea
js
push
cmpsb
xor
sub
sub
lds
call
xchg
and
xchg
xchg
shl
roll
mov
or
shrd
or
mov
or
mov
lahf
add
or
and
or
inc
jns
sbb
mov
imul
adc
xor
dec
jl
add
push
ljmp
stc
or
rorb
shl
int3
mov
insl
sbb
push
adc
sbb
lea
add
xor
out
and
cmp
ficoml
fdivl
loop
mov
push
cmp
faddl
add
in
sbb
inc
sbb
pop
imul
rol
jge
sbb
dec
pusha
loope
fidivl
sbb
dec
lea
jl
pushf
adc
jo
xor
xor
popf
repnz
movsb
divb
mov
xlat
add
mov
cld
fwait
aaa
and
add
addr16
fbld
and
mov
sbb
mov
scas
cltd
mov
jne
lea
out
jle
or
insb
mov
mov
loope
or
sbb
hlt
jns
popa
cwtl
in
inc
jge
dec
add
ds
push
rclb
bswap
loopne
lret
jg
pop
outsl
addb
dec
sub
lds
dec
ljmp
jmp
mov
ljmp
add
out
jp
test
mov
mov
mov
push
mov
xchg
imul
add
and
mov
in
mov
cmp
adc
dec
xchg
jmp
inc
mov
aam
dec
mov
adcb
rorl
dec
das
xchg
jae
out
pop
sti
decl
mov
or
stos
push
sbb
mov
movsl
mov
sub
es
mov
cmpsl
cmp
add
call
push
jmp
fadd
cwtl
mov
fs
jno
jmp
mov
xor
daa
pop
in
ljmp
or
iret
iret
cltd
in
aas
pop
mov
xor
mov
paddusw
dec
pmaddwd
lret
cmp
inc
jbe
loop
mov
lret
push
jge
push
push
cltd
shrl
ret
and
fwait
inc
dec
jmp
das
add
repz
mov
les
stc
adc
dec
add
sarb
test
loopne
push
sub
or
sbb
pop
mov
into
js
fstpt
adc
jb
push
fisubrl
negb
jne
and
pop
pop
aam
pop
cmovp
lods
add
sbb
pop
push
ret
lahf
rcl
loop
das
sarl
mov
mov
stos
inc
bound
xchg
dec
pop
push
push
jecxz
adc
xor
scas
fsub
loopne
sub
out
rorl
pushl
dec
mov
outsl
lods
mov
xchg
shl
or
nop
inc
pushl
cmpb
push
cmp
popf
sbb
or
test
shrl
jns
cwtl
rcrl
lods
mov
mov
lcall
sbb
mov
call
rorl
in
sbb
icebp
mov
repnz
adc
arpl
or
dec
push
or
pop
mov
mov
cmpsl
push
xchg
movsl
xchg
add
xchg
xchg
push
movsl
jg
enter
ljmp
cld
push
insl
loope
mov
or
lds
gs
ljmp
pop
sbb
pop
es
insb
test
lea
movsl
and
insb
inc
sbbl
and
push
jge
test
mov
mov
or
rol
or
out
ret
xchg
push
stc
and
xor
movsl
lock
nop
iretw
test
jb
push
push
cmp
bound
movsb
ss
jnp
daa
hlt
cmp
and
adc
repz
pop
mov
shlb
sub
arpl
int3
mov
sub
xchg
iret
pop
push
inc
jb
jle
inc
aam
push
lcall
aas
insl
out
push
mov
jg
arpl
popa
and
rorl
std
movsb
clc
push
ret
aaa
cmp
stos
pop
cmp
rcrl
mov
xor
and
lds
in
xchg
clc
push
mov
loopne
rcl
out
inc
cmp
mov
ja
loope
dec
and
sbb
pop
pop
std
addr16
mov
sub
data16
inc
inc
xchg
lds
adc
lea
jns
sub
jb
daa
into
scas
icebp
push
xor
xchg
lods
scas
sysexit
imul
dec
outsl
shll
pop
inc
pop
mov
mov
add
xor
mov
cs
jmp
and
cmpb
xor
aam
sub
sbb
cltd
test
jo
sti
data16
cltd
dec
popa
cmc
int3
jge
pop
aad
cli
add
inc
jnp
test
mov
mov
mov
pop
pop
cltd
inc
jmp
jp
imul
sbb
jmp
inc
add
lods
and
inc
sub
inc
std
ja
and
bnd
xor
xor
inc
lahf
dec
push
pop
push
out
iret
xchg
mov
sbb
dec
ds
sub
push
xor
movsl
addr16
pusha
call
jle
or
pop
pusha
and
lods
push
clc
mov
sub
nop
or
into
sbb
sub
shrb
int3
cmp
addb
int
fistl
aas
or
out
in
shlb
lret
mov
ss
xchg
xor
jmp
dec
mov
insb
adc
push
mov
push
jb
mov
xorl
loope
dec
in
inc
cmp
or
iret
inc
mov
sar
or
jl
adc
pop
cmp
cmp
sbb
push
call
push
call
xchg
pop
call
xor
movsb
std
mov
push
mov
xor
jo
xor
jno
jae
data16
aas
ret
add
lds
mov
ret
clc
ret
xor
mov
dec
sub
jbe
repnz
sub
es
and
aam
mov
lret
inc
inc
pusha
call
add
sub
cs
adc
repz
mov
ret
xorb
ret
pop
cmp
fistpl
subl
xor
std
jne
test
mov
jge
push
xorb
add
mov
mov
repz
ds
cli
cmp
inc
mov
lcall
out
jle
jo
inc
jmp
add
xlat
sub
loope
mov
adc
cmp
mov
in
rol
mov
or
mov
add
mov
dec
xchg
stc
or
push
enter
fisubl
mov
add
mov
xor
xlat
jmp
cmp
pop
lahf
sbb
mov
pop
pop
sbb
cltd
iret
mov
push
jbe
sub
lcall
pop
mov
int
pusha
mov
js
fidivrs
dec
dec
rsqrtps
js
mov
aad
mov
push
pop
sub
mov
popa
cwtl
jg
fs
lahf
xor
mov
sbb
push
mov
mov
test
iret
icebp
movsb
enter
into
pop
xor
dec
popa
inc
mov
or
leave
lret
pop
lods
mov
repnz
fisubrs
or
xor
loop
add
xor
jl
xor
xor
insl
and
push
enter
lods
in
in
dec
add
inc
add
stos
call
into
stos
ljmp
inc
cmpsb
mov
fs
mov
orl
call
test
imul
and
ss
xlat
lea
add
mov
xor
dec
loop
pop
sub
xchg
lret
std
mov
adc
mov
xlat
lods
pusha
pop
lock
jne
std
aam
andb
push
roll
fldenv
scas
add
sbb
adc
stc
dec
loop
fmull
push
loop
pop
nop
pop
cltd
pop
inc
dec
bound
push
mov
adc
push
fs
popf
or
std
outsl
aaa
lcall
loop
lock
popf
add
adc
pop
mov
fwait
dec
lock
cltd
dec
cmp
inc
mov
or
cmp
out
pop
out
rol
std
dec
dec
jmp
in
push
mov
mov
int
jecxz
adc
ljmp
out
loop
insl
mulb
rclb
xor
mov
dec
jge
les
lret
add
adc
sti
stos
mov
push
xchg
pop
cmpsb
add
roll
das
sbb
cld
jnp
orb
test
lods
hlt
and
loope
sbbl
adc
out
test
push
xchg
mov
pop
mov
add
popa
int3
mov
int
daa
sub
cmp
pop
or
add
icebp
imul
cli
clc
mov
imul
pushf
mov
lahf
popa
fs
and
xor
or
outsl
pop
xchg
pop
jmp
jge
adc
mov
out
mul
push
mov
ret
icebp
mov
jp
adc
insb
outsl
mov
pop
in
sub
mov
imul
xor
mov
add
leave
fs
mov
out
xor
mov
xchg
mov
gs
pop
push
aaa
test
sti
lret
mov
dec
mov
jmp
xor
lds
imul
sarb
mov
inc
jae
xchg
fmull
imul
cmp
loopne
jecxz
arpl
pop
or
add
call
stos
pop
jae
inc
clc
jo
ret
lret
or
out
push
adc
lock
push
scas
and
iret
cmpsl
test
test
ljmp
repnz
scas
dec
mov
pop
and
icebp
cmp
iret
xor
mov
test
sub
aam
sahf
inc
pop
imul
xor
loopne
fistl
push
sbb
test
insb
mov
negb
fiaddl
adc
fistpl
push
adc
jae
nop
enter
add
jl
adc
mov
imul
xchg
dec
sub
mov
fwait
inc
xchg
xchg
jl
pusha
push
int3
and
imulb
mov
cmp
pop
clc
sti
xchg
push
mov
lret
clc
mov
cmp
sub
mov
jge
jb
inc
jo
fwait
jnp
mov
adc
shll
cmp
cmpsb
frstor
mov
addr16
mov
sub
pop
shlb
mov
dec
aam
dec
dec
pop
mov
cmp
int
std
in
fidivrl
fnstsw
xor
xor
fldcw
loopne
xchg
jo
jl
mov
scas
sub
and
adc
mov
lock
xchg
fwait
jmp
and
pushw
pop
imul
xor
mov
push
scas
dec
pop
mov
xchg
orb
bound
incb
dec
cmp
cwtl
and
pop
dec
pusha
lahf
cmpl
pop
ror
dec
mov
popf
add
mov
jns
sub
fwait
sbb
js
dec
sub
movsb
pop
jno
popf
mov
rcrl
cmp
lret
outsb
and
aam
xchg
cld
inc
jo
push
outsl
mov
gs
int3
cmp
cmp
int
popa
xor
orb
cmp
cmp
inc
test
adc
or
add
mov
inc
xchg
mov
add
jne
cs
sti
xchg
stc
shlb
mov
push
std
fnsave
inc
imul
cmp
sbb
lds
in
in
and
test
xchg
shll
cmp
and
out
cmp
nop
jae
in
enter
or
cmp
push
mov
sub
xor
idivl
cmp
mov
jbe
cmpsb
out
cmp
or
loope
push
add
adc
mov
sbb
xchg
scas
inc
dec
pop
push
xchg
loope
daa
cmp
clc
rol
mov
and
fcomi
pop
jecxz
loopne
mov
fldl
mov
ficompl
aas
popf
cld
lds
call
add
or
jecxz
shll
prefetchw
cs
stc
shr
mov
and
cmc
lcall
push
add
add
pushf
bound
xlat
cmp
and
lods
or
inc
mov
out
or
xor
rorb
and
add
jbe
fistpll
mov
movsb
adcl
mov
in
jg
mov
push
imul
ret
lods
xor
fadd
xchg
dec
or
sbb
push
push
mov
dec
mov
push
inc
inc
jbe
sarl
popf
mov
ja
inc
jnp
jb
in
es
call
pop
mov
pusha
mov
aas
xchg
aam
jno
icebp
aad
inc
jmp
dec
lret
fucomip
push
call
push
in
cmpsb
fucomp
push
lds
jle
test
imul
mov
out
cmp
cmp
xchg
mov
enter
fbld
in
xor
sub
or
les
cmp
cli
pop
push
rep
inc
out
iret
xchg
inc
xchg
add
xor
pusha
fmull
add
out
push
dec
push
push
lahf
sbb
inc
cld
fstpl
fwait
mov
lods
pusha
sarl
arpl
fmull
add
push
xchg
push
mul
aam
sub
fs
iret
inc
inc
stc
jbe
or
scas
pop
adc
inc
and
xor
ret
subl
xchg
inc
testb
cltd
mull
add
and
inc
nop
xor
fmull
mov
mov
imul
aaa
inc
enter
hlt
and
xor
xchg
add
mov
pop
add
xchg
mov
cmp
sub
push
scas
int3
ljmp
in
cld
insl
stc
iret
inc
sub
push
ja
sbb
sbb
cmp
sub
rcr
lcall
add
lock
and
add
repnz
icebp
cmp
xchg
or
xchg
push
pop
loope
mov
push
rcl
adc
xor
inc
test
loopne
dec
stos
xchg
decl
orb
arpl
in
add
mov
add
lods
add
cmpl
negb
imul
xchg
cmp
mulb
or
loope
sub
dec
sub
mov
lock
cmc
mov
stc
mov
lods
inc
pop
push
aaa
mov
push
out
cmp
faddl
pop
cs
test
xlat
aam
insl
add
add
stc
test
mov
sarb
sbb
aaa
xlat
mov
and
int3
out
dec
pop
add
cmp
jnp
and
shrb
aam
shrb
lods
jle
add
ljmp
push
rcr
cmp
ret
cmp
scas
aaa
ret
mov
adc
jns
adc
mov
data16
inc
fstpt
inc
cltd
ss
sbb
xor
or
mov
mov
mov
push
add
icebp
mov
loopne
xchg
shrb
xor
fstpl
push
xor
adc
dec
inc
cltd
xchg
adc
pop
rcpps
jae
pop
in
dec
cld
aad
cmp
and
pushf
pop
jle
loop
mov
cwtl
adc
jp
push
lret
pop
pop
arpl
mov
or
cmpsb
ljmp
xchg
shl
test
out
xor
gs
push
fnstcw
subb
mov
in
push
inc
call
test
jl
jnp
arpl
jg
shll
scas
int
adc
cmpsl
cld
dec
lcall
and
stos
fcomp
pop
pop
and
lea
shr
mov
fldt
inc
jmp
shll
sbb
and
std
adc
jp
mov
lods
ficoml
lret
and
ss
shrl
lock
sbb
jle
or
int
adc
rcll
mov
popf
dec
jecxz
iret
loopne
les
adc
adc
mov
add
nop
js
cmp
outsl
shrl
sbb
loopne
jb
jno
outsl
push
and
xchg
roll
xor
lods
xor
fcompl
into
adc
pop
xor
dec
and
xor
fstpt
je
dec
jns
out
repnz
fxch
lretw
mov
sub
cwtl
jg
out
and
lret
xor
ds
test
addr16
mov
or
or
dec
mov
xchg
push
mov
out
addr16
sub
add
cmp
jg
cmpsb
mov
sub
and
in
mov
jmp
push
into
jl
test
ljmp
xchg
mov
into
aam
ljmp
imulb
dec
xor
and
push
sub
pusha
xchg
jmp
push
mov
and
subl
aas
add
into
mov
test
insl
mov
dec
mov
add
addr16
push
adc
or
push
cmp
and
repnz
push
es
jbe
xchg
inc
pop
push
or
and
pop
lret
bound
pop
in
inc
cmp
stos
adc
test
lahf
rcl
inc
std
jmp
or
mov
bound
and
subb
jmp
aam
and
mov
mov
out
push
push
sbb
cmp
sahf
xchg
cmp
adc
sub
mov
mov
sub
popf
call
jo
aaa
fisubrl
sbb
test
xchg
sti
ss
xchg
mov
add
fbld
pop
ret
stc
scas
or
sbb
fldcw
scas
xchg
shr
scas
pushf
out
movsb
sbb
sbb
add
pop
jne
mov
pushf
pop
add
xor
pop
shl
dec
add
out
iret
lods
pop
loope
mov
xchg
mov
sub
lcall
xchg
mov
add
pop
add
sub
inc
scas
jne
xlat
sbb
adc
sub
sahf
dec
mov
sub
adc
and
mov
mov
cmpsl
pushf
jo
sub
iret
mov
dec
or
ret
sub
jp
sbb
lock
mov
inc
push
idivl
fimuls
out
test
lods
jg
test
add
dec
shll
mov
cmp
adc
add
imul
adc
call
push
sub
repnz
imul
xor
mov
cld
loope
adc
cmp
mov
xor
in
push
ret
icebp
test
jne
leave
in
xor
ds
xchg
jp
enter
xor
add
inc
add
lock
dec
adc
fsubrl
xchg
cli
lcall
push
es
aas
movsb
clc
mov
out
inc
mov
movb
inc
and
in
inc
es
adc
xchg
push
in
andl
jb
and
mov
push
cli
bound
out
jnp
or
sbb
test
pop
add
aaa
into
mov
rcrb
xor
pop
or
loop
inc
clc
mov
add
mov
jbe
mov
inc
inc
outsl
in
jp
mov
js
popf
loop
mov
or
push
cmp
ret
mov
pop
push
dec
cmp
mov
test
into
cmp
push
popf
cwtl
rorl
xchg
push
lahf
jb
sbb
mov
mov
lahf
push
lret
and
lds
dec
mov
mov
mov
aam
filds
mov
rcll
hlt
sti
rcrb
out
push
loope
or
xor
sbb
dec
push
xchg
repnz
pop
jmp
data16
outsb
and
cmpsl
ficomps
movsb
adc
push
pop
jb
inc
xchg
scas
sbb
in
sbb
dec
pop
enter
fwait
xor
iret
lret
and
cmp
iret
pop
cmp
inc
adc
add
or
into
jge
in
ret
mov
icebp
adc
jmp
cmp
jle
pop
stos
out
mov
pop
test
mov
scas
addl
scas
fcomps
xlat
pop
push
mov
mov
push
sub
jbe
pop
push
popa
xchg
dec
loope
lahf
mov
data16
test
pop
sbb
ljmp
push
xor
dec
popa
or
lret
les
cmp
mov
and
lahf
rcr
cwtl
sub
sbb
xor
pop
push
scas
lcall
cmp
ss
daa
int
xor
mov
pop
sti
lock
out
mov
ret
mov
dec
xchg
mov
push
out
sbb
add
ss
sub
sub
aam
addb
jl
sub
cmp
insb
aad
or
mov
xchg
cs
sbb
mov
xchg
cmp
mov
sub
push
test
mov
mov
cltd
fucomip
lahf
ja
mov
not
push
add
adc
xorl
mov
rcr
lods
xor
inc
sbb
pop
fsubs
and
and
mov
sbb
stc
loope
jmp
mov
iret
dec
rcr
cs
cli
aaa
gs
add
aad
divb
int3
xchg
bound
call
fmulp
push
mov
scas
push
and
cmp
stos
sub
hlt
insb
jge
jne
rorb
outsl
pushf
push
sbb
jno
jle
jg
or
pushf
pop
jle
mov
mov
inc
clc
sub
cwtl
emms
mov
sub
outsl
outsl
and
mov
lods
jbe
push
mov
mov
push
outsb
push
or
jl
pop
inc
sub
cmp
push
ret
mov
push
mov
test
mov
in
mov
mov
mov
jne
xchg
add
mov
lock
cmp
fadds
adc
jl
cmp
adc
sti
testl
adc
inc
add
mov
pop
sub
add
inc
and
or
sub
das
popa
sub
lret
mov
movsb
cmp
xchg
push
push
jp
movsb
dec
sub
and
decb
push
pushf
mov
pop
js
repnz
jle
cmp
push
adc
jne
inc
popa
test
pusha
pop
mov
imul
inc
loopne
in
cmp
add
loope
idivl
imul
mov
test
andl
lock
icebp
mov
adc
xor
inc
push
jmp
add
out
and
jp
mov
lds
pop
mov
sbb
mov
mov
adcb
sbb
cs
cmpsb
fstp
pop
pop
stc
lss
inc
push
into
mov
out
pop
mov
jne
adc
rorl
fs
lcall
rorb
inc
outsl
in
xchg
lret
ljmp
int
leave
mov
jb
push
or
sbb
lock
pop
mov
lahf
sub
fbstp
xlat
test
push
gs
test
int
inc
pop
jo
mov
xchg
outsl
scas
mov
negl
and
adc
mov
push
imull
xchg
adc
rclb
add
and
decb
mov
sub
test
sbb
rorl
loopne
dec
pop
mov
popf
inc
pop
jecxz
scas
outsb
jg
call
rsqrtps
xlat
add
cmp
adc
imul
jle
pshufb
dec
lcall
push
push
ret
lock
cli
push
sbb
lret
shll
add
test
sar
and
push
mov
ror
push
inc
mov
mov
xor
mov
or
test
push
out
subl
jecxz
int3
loope
cli
adc
ret
gs
sbb
int
adc
aam
ljmp
ret
stos
js
mov
cmp
rolb
mov
call
lods
adc
out
lock
cmp
mov
jbe
xrelease
jmp
aad
dec
ja
mov
mov
nop
scas
sub
ds
pop
sub
leave
mov
gs
nop
in
sarb
leave
cltd
addr16
mov
push
jg
or
jp
jno
mov
inc
xchg
inc
icebp
negl
and
out
add
mov
dec
inc
or
xchg
xchg
push
arpl
dec
fdivr
push
xor
les
sarb
jp
hlt
pop
out
shll
iret
shld
cld
in
movsb
push
and
lds
fwait
pop
xor
mov
out
fs
sbb
jae
mulb
arpl
decb
dec
pusha
stos
call
add
mov
xchg
repnz
insl
lret
int
idivl
adc
dec
pop
jge
into
jle
inc
pop
ret
sbbb
push
rorb
es
pop
in
push
jno
into
in
enter
fdivr
call
push
dec
pop
ljmp
push
jle
test
jle
rcll
pop
arpl
jo
ret
out
lret
mull
sub
jecxz
inc
push
mov
sub
data16
push
pop
mov
pop
int
sub
repnz
out
repz
add
push
cwtl
in
lret
fdivr
pop
jg
and
mov
mov
je
mov
fcomps
push
sbb
movl
jmp
jg
fstpl
lods
shlb
mov
sarl
aam
pop
bound
int3
faddp
mov
das
sahf
adcb
imull
fimuls
pop
lret
aas
jno
cmpsb
imul
movb
mov
js
stos
pop
and
in
out
lds
stos
xlat
dec
adc
sbb
xor
inc
xchg
dec
js
enter
fcmovnu
add
and
lahf
js
jns
popa
mov
sahf
push
imul
sti
jo
loopne
aaa
test
mov
mov
push
mov
sub
mov
cs
popa
adc
and
insb
inc
les
mov
test
int3
mov
dec
nop
int3
xchg
into
mov
jo
fisubl
hlt
decb
add
sub
mov
loopne
xor
repnz
bnd
out
fsubrl
shll
iret
test
movups
push
sbbl
pop
outsl
cwtl
sarb
lahf
divb
fldln2
inc
loop
inc
or
mov
stc
call
cltd
shrb
or
xor
outsb
inc
push
cltd
rcrb
test
nop
cmp
jge
imul
test
insb
dec
cld
dec
lods
xchg
in
push
push
xrstor
scas
xor
and
sbb
sub
push
enter
mov
mov
mov
cmp
mov
xchg
sub
pop
xor
and
xchg
data16
sbb
sub
lea
xchg
sarb
and
notl
mov
fcomps
push
or
int3
xchg
sti
sub
icebp
stos
jnp
add
les
push
rorb
xlat
sub
outsb
add
ljmp
aad
icebp
cs
xchg
lods
mov
icebp
int3
fisttpll
or
mov
jbe
xor
jmp
mov
jne
lds
test
jbe
xchg
push
aam
xor
fs
daa
dec
repnz
test
jl
and
popa
push
cmc
pop
scas
lock
mov
pop
int
mov
lahf
aas
pop
and
mov
sti
ja
lods
dec
or
lret
mov
roll
push
pop
push
lea
xor
outsl
lods
sarb
adc
jg
aad
mov
sbb
das
pop
sub
mov
call
and
repnz
sti
jl
test
lret
scas
mov
scas
loope
fwait
mov
sbb
mov
insb
dec
int
mov
mov
mov
cltd
jle
xor
pop
lods
push
test
mov
jnp
scas
jge
ljmp
fmull
sub
add
adc
adc
ljmp
incb
repz
loop
cmp
inc
test
imul
xchg
orb
push
jg
notl
lret
ja
mov
xor
aam
leave
sahf
inc
sbb
dec
mov
push
sub
repnz
inc
mov
out
sub
push
adc
mov
xor
mov
cmp
push
outsl
test
mov
mov
pop
and
fstl
and
daa
pop
cmpsl
and
data16
int3
mov
sub
call
lods
sti
fdivl
jl
or
mov
popl
jg
or
mov
mov
icebp
push
cmp
mov
out
and
and
mov
xchg
adc
cmpsl
bnd
aaa
pop
cmpsb
out
gs
cmp
cmp
mov
loopne
fwait
or
jbe
adc
aad
lahf
or
inc
inc
insl
stc
int3
dec
adc
cmc
fistpl
cltd
int3
ffreep
test
je
fadds
push
xchg
movb
aad
sub
pop
dec
shll
dec
rorb
out
fisubrs
fdivrl
lock
imul
pop
sahf
mov
sbb
lods
xchg
sbb
decb
pushf
mov
sub
or
in
fndisi(8087
ja
xor
imul
cltd
out
xlat
scas
add
cs
adc
sbb
ret
jp
aaa
mov
push
loopne
fnstsw
adc
xor
fadd
test
mov
and
repnz
and
add
sbb
sbb
dec
cmp
cld
sbb
push
ss
int3
xchg
mov
sbb
adc
insb
lret
dec
pop
pop
les
inc
mov
fisttpll
inc
add
and
popa
pop
lods
mov
mov
pop
hlt
sarb
jmp
cld
xor
xchg
enter
jmp
rorl
mov
add
divl
mov
mov
nop
fsubrl
xchg
icebp
cmp
jecxz
xchg
jl
cwtl
in
and
mov
ret
lds
adc
push
in
inc
sub
or
add
pop
mov
jmp
xor
jmp
or
jle
stos
jno
popa
inc
hlt
loop
cmpsl
shll
sbb
call
mov
fwait
mov
stos
loop
mov
and
orl
jmp
ret
ds
les
dec
pop
pop
sub
insb
push
mov
inc
stos
in
lock
lock
cwtl
add
inc
dec
sbb
dec
and
shlb
jnp
scas
clc
pop
xchg
outsb
jge
xchg
adc
pusha
stc
out
mov
sti
ljmp
ret
inc
test
popa
jb
nop
sbb
gs
cmp
pushf
in
or
inc
and
pop
mov
aas
jg
dec
xchg
aas
js
cmp
insb
imul
fwait
out
adc
mov
out
jnp
stos
fwait
jbe
lds
jle
sub
addr16
das
pop
mov
xchg
xchg
std
insl
dec
sbb
out
in
out
jno
dec
and
sahf
shrl
inc
pop
sti
icebp
inc
ja
mov
divl
mov
and
pop
int3
gs
cmc
pop
es
sar
ss
and
popf
movsl
adc
out
jmp
mov
iret
sub
ret
adc
jg
pop
inc
pop
aad
xor
dec
pop
inc
cmp
pop
jne
daa
xor
mov
jb
nop
add
sub
inc
inc
loope
mov
sarl
or
xchg
mov
jno
cmpsl
jecxz
inc
xchg
int3
dec
xchg
das
outsl
stos
rorl
pop
cmp
insl
nop
js
mov
or
add
or
push
rolb
lcall
fsubr
mov
mov
mov
add
sub
ljmp
cmpsb
or
inc
out
sub
xchg
mov
inc
cmp
xchg
in
dec
call
push
dec
sti
sahf
or
jne
loopne
lds
jmp
dec
vpunpcklqdq
jbe
inc
lret
popf
xchg
mov
add
sub
test
cmp
and
repnz
jb
rcrb
add
xor
leave
mov
insb
hlt
imul
sbb
add
dec
mov
cwtl
maxps
mov
inc
adc
mov
shll
lds
sbb
xchg
mov
cmp
or
rorb
std
cmp
or
les
out
loope
out
mov
dec
mov
cmp
fnstcw
ja
mov
sbb
push
pop
mov
test
pop
mov
lods
in
fnstsw
cmp
inc
ljmp
mov
inc
lret
add
orl
fistpl
mov
stos
jle
cld
fisttps
test
adc
fisttpl
jp
frstor
xchg
jg
cmp
cli
and
and
gs
imul
mov
int
das
and
sbb
enter
rclb
add
sbb
cmpsb
hlt
pushf
pop
movsl
repz
mov
sbb
dec
imul
push
int3
cmp
movsb
jecxz
xor
fcoms
mov
and
cmp
dec
mov
nop
imul
push
or
xchg
cmpw
cmp
dec
and
scas
sub
cmp
mov
sbb
in
repz
cld
jmp
xor
mov
cmp
rclb
mov
mov
and
lds
adcb
mov
add
filds
or
sbb
cmp
and
icebp
push
repnz
scas
andl
add
lds
inc
sbb
popa
push
adc
add
or
xchg
mov
sub
push
gs
fdivrl
add
ss
mov
fistl
or
mov
inc
push
int3
lret
icebp
push
dec
leave
lods
movsb
add
push
xchg
pop
sahf
xlat
cld
adc
out
arpl
leave
sub
hlt
sti
test
xor
jge
adc
dec
lahf
gs
push
jmp
shlb
inc
fistl
pop
cld
adc
push
cmpl
xchg
andb
dec
mov
xor
fsubs
test
cltd
xor
outsb
jbe
xor
jbe
or
mov
call
mov
insb
sbb
jmp
cmp
repnz
mov
pop
fbld
push
inc
xor
mov
sbb
sbb
gs
imul
in
fsubp
pop
inc
sarl
mov
inc
popw
xchg
stos
fwait
ljmp
addb
jle
mov
lret
flds
jbe
dec
incl
cmp
xchg
imul
les
ja
jmp
imul
add
push
enter
cmp
add
jg
lahf
jmp
dec
icebp
push
cmpsb
insb
mov
add
mov
repnz
pop
into
mov
sbb
xchg
mov
jge
xor
stos
dec
sahf
pop
jg
lahf
bound
stos
call
xor
pop
in
jg
addr16
daa
dec
daa
push
jno
sub
mov
sbb
in
out
cmc
xor
icebp
stc
in
cmp
sbbl
jnp
fimuls
dec
mov
mov
outsl
nop
xchg
sbb
mov
shlb
hlt
aam
cmp
add
lds
jp
or
lea
loopne
ret
push
fnstcw
imul
sbb
cmpsb
call
fcoml
adcl
push
lret
mov
leave
jecxz
lahf
jae
test
arpl
dec
jb
add
aam
stos
mov
xchg
ret
fstl
push
xchg
inc
push
add
pop
jo
test
cmp
ret
sbb
das
test
cmp
mull
ficoml
push
add
sub
popf
aad
jo
push
test
mov
les
mov
rcrb
mov
loopne,pt
mov
test
test
add
ficompl
push
push
sub
push
aad
push
mov
jg
jle
stos
add
mov
insb
fsts
sub
cmp
test
loop
mov
push
dec
inc
push
inc
out
mov
hlt
cs
jl
pusha
fwait
in
push
push
jecxz
out
enter
push
cmc
jmp
adcl
push
sbb
xchg
or
fs
daa
or
xor
ret
fucomi
add
cmp
loopne
fcomps
push
je
xor
call
dec
sbb
adc
outsb
mov
pop
fimull
es
iret
jo
push
mov
mov
repnz
push
shl
adc
mov
dec
sbb
in
repnz
fnstcw
stos
cltd
dec
cmp
orl
insb
popa
xor
inc
sub
jns
push
hlt
scas
pop
scas
data16
lret
sub
jne
ret
pop
adc
ds
fidivrs
jno
inc
fwait
cmp
pop
pop
fnstcw
push
pop
lret
cmp
arpl
ds
and
call
and
or
loope
shrb
jle
mov
pop
test
fwait
sbb
dec
xchg
mov
lret
xor
loop
pop
push
jns
popa
sti
or
shll
ds
scas
leave
call
or
clc
push
jge
cmp
pop
lahf
pusha
insb
and
jo
cltd
cmp
enter
nop
rcll
xor
sarl
lea
sub
or
sbb
pop
ret
mov
sub
or
mov
dec
pop
negb
jnp
std
cmp
shrb
mov
in
int
mov
pop
xor
js
inc
mov
add
cmpsl
mov
popf
inc
nop
shll
push
mov
outsb
lds
movsl
inc
outsb
xor
jnp
cld
cmp
pop
loop
bound
mov
out
push
mov
fcmovnbe
data16
pop
or
cmp
popf
mov
lcall
xchg
xlat
and
dec
xchg
ljmp
mov
push
mov
leave
call
lcall
insb
fwait
dec
sub
lods
mov
mov
shlb
loope
test
mov
fmulp
dec
notb
rorb
ret
jp
cmc
sub
mov
xchg
js
stos
adc
xchg
test
cli
jge
inc
movsl
arpl
addb
pushf
add
inc
sbb
dec
dec
mov
imulb
jb
dec
dec
push
jecxz
xor
push
ja
enter
iret
mov
rolb
test
in
add
inc
imul
inc
push
xor
cmc
push
xlat
cmc
xchg
inc
jmp
mov
inc
jmp
mov
call
sub
fsubrp
or
jp
adc
lods
inc
aad
or
pop
aaa
cmp
mov
pushf
rclb
scas
popa
les
inc
xchg
pop
xchg
imul
add
repnz
sbb
insl
popa
js
pop
adc
mov
cwtl
call
pop
fiadds
out
je
add
ret
inc
mov
int
mov
push
mov
sarb
sbb
fidivrs
aaa
fidivrs
inc
jb
aaa
faddl
ret
loopne
dec
rcr
out
adc
fisubs
stc
xchg
jns
clc
mov
and
xor
popf
pop
mov
add
push
mov
push
mov
int
xchg
les
mov
daa
jmp
add
repz
xorb
aam
xor
mov
xor
sbb
aas
and
enter
adc
lret
mov
dec
ljmp
jmp
xor
jge
and
sar
add
push
jmp
sub
les
sbb
adc
add
out
mov
stos
and
jbe
sahf
inc
sub
fisubs
out
xchg
movsb
mov
mov
jecxz
lea
xchg
scas
push
movsb
lock
les
std
sbb
cmp
ljmp
mov
loopne
push
push
mov
xlat
ret
lock
cltd
jo
fisttpl
add
fdivp
arpl
daa
mov
stc
xchg
xchg
cmp
mov
outsl
add
add
pop
mov
mov
pop
in
stos
std
ficoms
add
int3
inc
outsb
mov
mov
xchg
add
aam
or
ret
push
aas
test
adc
inc
inc
xchg
icebp
push
lea
mov
inc
add
das
stc
push
lcall
sbb
mov
fcoml
cltd
mov
cmp
and
jp
xchg
dec
lea
pop
aaa
repnz
push
jno
hlt
push
pop
arpl
mov
xchg
dec
inc
and
mov
sti
mov
mulb
push
cmp
add
std
push
hlt
pushf
sbb
pop
sbb
out
pop
xlat
jg
push
out
sub
imul
cmc
sub
mov
in
enter
js
inc
aad
xchg
rcl
cmp
daa
lahf
and
or
jmp
test
add
or
xorl
sub
ret
stc
jge
mov
xor
aad
jle
pop
xor
lds
mov
out
movsb
adc
jg
lcall
popf
xlat
rcrb
lcall
movb
loop
mov
into
cmpsl
loop,pn
cmpsb
mov
orl
nop
xlat
iret
gs
sbbl
cwtl
pusha
imul
iret
daa
lock
pop
je
ja
push
test
setl
push
daa
aad
movsl
mov
into
imul
ss
inc
push
pop
pop
stc
dec
mov
out
inc
test
aam
inc
push
mov
pop
testb
cmpsb
mov
insb
inc
mov
fsubrs
jno
daa
mov
nop
push
jmp
scas
imul
test
loope
cmc
loop
sbb
and
out
pcmpgtw
inc
test
lret
sti
fadds
push
pushf
clc
imul
lret
jle
aaa
incb
add
push
mov
fdivr
adc
pop
shlb
add
sbb
addb
data16
scas
imul
popf
cmp
int
std
cs
daa
call
in
jle
push
push
adc
pop
jmp
ljmp
xchg
mov
or
scas
xchg
pop
and
sub
jbe
shl
jle
imul
repz
or
sub
cmp
mov
fcom
sbb
push
dec
jg
xor
dec
arpl
dec
adc
loop
fisttps
pop
or
in
xchg
xor
mov
sbbl
call
mov
fistpll
xchg
outsb
sub
cmp
js
lcall
push
sbb
jmp
mov
jmp
sub
rol
inc
adc
sub
inc
mov
pushf
pop
xchg
repnz
outsb
pop
add
xchg
and
leave
shll
aas
lcall
notb
push
push
clc
inc
adc
cld
push
push
or
mov
outsl
jae
push
jmp
test
mov
xor
xor
mov
mov
sbb
sub
enter
jecxz
mov
jmp
aas
mov
inc
pop
cmp
mov
adc
mov
ds
movsl
xchg
xchg
sti
gs
out
gs
cmp
dec
mov
mov
popf
into
cmp
and
mov
imul
xchg
mov
mov
add
ss
inc
les
ret
cli
adc
cs
jns
lret
out
sbb
movsl
int
or
stos
adc
scas
ret
fisubrs
jb
in
in
and
jne
push
aas
in
xchg
call
sbb
shll
sarl
inc
dec
mov
mov
push
js
iret
and
jb
int3
mov
ja
stos
xchg
outsl
mov
push
fmuls
cmp
nop
add
sbb
cld
add
rol
in
shll
xchg
aas
sar
jmp
popf
dec
sub
dec
sbb
jge
sub
push
fcoms
int3
repz
loope
and
pusha
mov
lods
aas
or
sub
icebp
lds
loop
mov
mov
and
inc
loop
cld
pop
inc
mov
shrl
cltd
sbbb
jo
dec
jmp
out
out
ret
dec
outsb
xchg
cld
mov
or
mov
lahf
sbb
push
sub
jno
aas
xchg
xor
and
fwait
movsb
push
mov
aam
repnz
ret
mov
imul
stos
inc
stc
pop
sarl
xlat
mov
mov
aas
mov
xchg
pop
nop
enter
push
xor
roll
fwait
mov
rol
jnp
fisubs
xor
dec
imul
xchg
test
out
adc
sub
sub
jnp
lret
xlat
inc
out
push
fbstp
cld
hlt
cmp
sbb
xchg
push
loope
movsl
push
popa
mov
leave
sub
mov
pop
or
ret
mov
filds
add
pop
xor
ds
adc
dec
std
scas
mov
call
jg
adc
rcl
hlt
stos
pop
fnstsw
push
lock
xchg
fs
and
or
push
inc
test
cmp
aad
adc
popw
movsb
jmp
xchg
mov
adc
pop
lods
divb
xor
stc
add
pop
nop
pusha
outsl
pop
hlt
xor
jbe
out
out
inc
movsb
arpl
mov
mov
test
dec
sahf
inc
lock
sub
lods
mov
cltd
fmulp
fcomi
mov
jmp
cmp
loopne
cwtl
int3
or
test
push
sahf
bound
out
and
ljmp
ficomps
xchg
add
cwtl
inc
mov
jle
test
mov
mov
std
inc
lret
and
ljmp
xchg
and
push
mov
sub
call
mov
dec
data16
mov
sub
and
mov
enter
push
movsb
xorl
lock
hlt
pop
pop
movsl
scas
mov
sbb
xorb
movsl
mov
test
mov
add
xor
add
das
into
outsb
add
inc
mov
push
in
sub
xor
push
pop
outsl
pop
push
cli
push
mov
xchg
and
in
cld
fildl
lea
das
push
mov
cltd
mov
ja
jns
movsl
adc
pop
test
mov
repnz
popa
cmp
imul
and
rcr
out
xor
and
and
nop
scas
adc
push
insb
shll
dec
jecxz
mov
push
in
mov
ret
mov
dec
ffreep
insl
cmp
mov
jle
sbb
aad
in
movsl
pop
mov
mov
ja
inc
stc
or
pop
into
dec
push
sbb
xor
stos
mov
push
dec
push
mov
insb
jae
cmp
cmp
leave
mov
sbb
pushf
mov
dec
jg
pop
mov
gs
nop
pop
les
in
mov
jb
mov
dec
xchg
rolb
fnsave
cmp
mov
xchg
or
and
cmp
mov
or
push
sub
cmp
movsl
mov
jl
sbb
mov
push
lods
mov
outsl
xchg
pop
lds
push
mov
and
inc
lcall
jle
dec
xchg
adc
imul
das
pop
mov
mov
adc
and
dec
mov
jno
or
aad
cmp
adc
mov
xchg
rcrl
test
jecxz
mov
into
jno
add
cmp
inc
push
pop
or
inc
mov
ja
mov
xchg
pop
push
xor
and
loop
push
dec
sub
cwtl
push
shl
stc
sahf
sahf
add
sbb
adc
sbb
cltd
xchg
cld
mov
xor
lds
rolb
sbb
gs
sub
mov
movsb
test
insl
je
jge
dec
sarb
dec
adc
mov
jecxz
arpl
push
repnz
ljmp
std
pop
nop
push
scas
aad
cmp
test
jns
or
add
mov
and
add
jp
push
mov
mov
push
mov
sti
jecxz
xorl
mov
out
lcall
out
or
xchg
xor
mov
addr16
imul
fcmovu
xor
stc
mov
fimull
out
xor
lahf
idiv
std
push
add
xchg
jl
movsb
shll
mov
pop
jl
mov
or
out
jmp
iret
shlb
jp
loopne
lods
cmp
or
push
sub
leave
mov
inc
cld
jae
dec
mov
roll
push
pop
psubsw
sbb
aas
pop
sbbb
fiaddl
and
sub
or
lahf
push
fprem
movsl
scas
and
push
imul
in
sbb
shll
jae
test
jae
out
roll
and
sub
or
cmpsb
mul
mull
mov
sbb
pxor
xchg
sbb
leave
shrb
adc
ror
adc
ret
out
fsub
xchg
sbb
jo
fisubrl
add
xchg
or
cld
lock
xor
and
mov
dec
nop
mov
les
leave
adc
rcrl
loope
nop
es
je
imul
in
mov
rclb
jnp
scas
lret
js
notb
dec
cmp
cmp
and
out
inc
add
fisubrl
imul
stos
mov
insl
push
arpl
and
inc
test
or
hlt
popf
sbb
xor
dec
sti
cmc
mov
sti
xor
fists
or
push
dec
nop
fwait
in
cwtl
pop
hlt
sub
and
jmp
push
clc
add
int3
pop
movsb
cmpsl
cmp
cli
jp
incl
aas
xchg
out
test
es
leave
or
jg
jle
inc
push
shrl
cmp
mov
pop
sar
cs
push
jmp
outsl
stos
fs
push
repnz
push
lea
sub
xchg
cmpsb
cmc
fwait
insl
jg
loopne
das
stc
xor
push
xlat
mov
xor
xchg
add
mov
sbb
pop
daa
adc
mov
ret
pop
fwait
cli
sbb
popa
mov
scas
cld
push
mov
xor
mov
sbb
mov
data16
sahf
sahf
call
cmp
mov
fbld
fcmovb
adc
fisttpll
std
test
mov
jp
adc
jno
in
je
mov
ja
mov
sahf
test
and
clc
ficoms
mov
rcll
jp
inc
inc
lds
arpl
ficomps
inc
ja
js
push
and
mov
mov
loopne
aad
or
push
inc
pop
xchg
pop
shl
test
or
cmp
sbb
sti
and
inc
push
mov
adc
dec
rcr
int
mov
sarl
add
int
mov
sub
add
fiaddl
orl
and
or
cld
mov
jg
outsl
pop
or
xor
loope
dec
out
test
in
push
mov
fadds
sub
mov
ss
and
movsl
add
gs
enter
sarl
sahf
adc
jo
sub
and
pop
cmpsb
or
not
pop
icebp
es
pop
push
test
cld
dec
xchg
sub
fwait
rcl
out
push
cmpsb
mov
sti
mov
pop
xor
jmp
inc
enter
xor
arpl
out
cmc
push
fisubrl
addr16
das
jo
movl
xchg
repnz
enter
gs
inc
mov
subl
outsl
cmp
push
faddl
inc
pop
ss
cmp
hlt
mov
mov
sub
ljmp
mov
pop
jmp
lea
popa
cs
sub
sbb
fisttpll
addr16
into
xchg
or
jecxz
jmp
addb
mov
dec
mov
ret
addr16
push
jl
fsub
lcall
xor
jo
xchg
loope
data16
xchg
fildll
xor
jo
inc
jecxz
pushf
sbb
cmp
addl
cltd
xchg
mov
outsb
jmp
push
insb
pop
lods
pushf
adc
loop
and
jp
lods
jns
pop
sahf
ljmp
cmpb
mov
push
ss
inc
pop
push
dec
xor
dec
js
gs
js
pop
pop
mov
iret
nop
jmp
ret
pop
cmp
cld
fwait
jg
fcmovnbe
mov
sahf
cmp
inc
mov
sahf
dec
hlt
aam
insl
push
ror
insl
into
sub
mov
sbb
aas
push
aam
jp
imul
dec
pop
mov
mov
stos
push
xchg
lods
adc
inc
or
jae
loope
sub
xchg
int3
dec
cmpsb
xchg
int3
mov
adc
rcrb
xor
fnstcw
mov
mov
xchg
adc
insl
repnz
xor
mov
fimuls
ficomps
int
outsl
lahf
in
cwtl
pop
mov
lret
stc
inc
dec
dec
and
sbb
jno
mov
xor
push
test
scas
xchg
jae
popf
adc
imulb
push
shrb
sbb
sbb
movl
cmp
push
shr
outsb
xor
jp
push
sti
pop
into
mov
mov
cmp
sbb
xlat
sub
or
jo
cs
fwait
je
test
in
test
imulb
data16
lahf
cmp
inc
cltd
xchg
add
das
ljmp
push
scas
jmp
mov
mov
or
inc
lcall
lds
xor
xor
ljmp
cmp
rol
push
pop
shlb
mov
cmpsb
leave
je
test
pop
popa
lods
add
stc
cs
jb
dec
or
les
cmp
hlt
subb
jmp
jecxz
je
in
jae
mov
cmp
and
cmp
dec
push
adc
notl
subl
movsb
lods
dec
fnsave
pop
test
in
icebp
fiadds
scas
push
lret
mov
jecxz
xchg
ja
sub
cltd
or
cmp
lds
test
ljmp
push
popf
dec
adc
test
adc
push
add
cs
fnstsw
mov
enter
mov
xor
dec
pop
xchg
mov
js
pop
icebp
sbb
xchg
sbb
cltd
mov
push
jae
sub
cmpsb
pop
mov
jle
jecxz
clc
inc
jns
cwtl
pop
imul
fsubr
loopne
xor
movsb
sub
add
xor
sbb
fdivl
inc
push
xor
aam
push
movsl
scas
dec
dec
xchg
cmp
subb
mov
data16
lock
cltd
and
repz
push
or
addr16
and
and
imul
push
xchg
mov
adc
cmp
pop
faddl
lret
pop
cmc
sub
jb,pn
adc
mov
test
cmp
cs
addl
sbbb
mov
mov
sbb
jl
fwait
and
stos
mov
fs
mov
xor
jp
push
call
cmp
call
mov
ja
dec
rcll
jnp
rcll
aas
jne
mov
sbb
push
nop
mov
xchg
cmp
push
cltd
add
lock
add
pop
push
inc
pop
xor
or
stos
mov
inc
je
push
loopne
dec
mov
aam
sub
fcomi
in
imul
adc
scas
mov
xor
mov
adc
and
je
iret
or
icebp
xor
and
adc
fcoml
xlat
notb
imul
inc
mov
add
pusha
mov
or
call
notb
jnp
or
or
lock
sbb
pop
jne
outsl
scas
mov
pop
or
cmpsb
cwtl
cmp
add
shll
dec
movsl
jge
addl
and
mov
mov
xchg
into
and
nop
imul
jmp
push
mov
mov
mov
jne
in
mov
or
mov
repnz
push
mov
xor
push
jmp
daa
lods
and
ficoms
jo
sub
into
sti
push
loop
mov
arpl
loop
out
js
and
popa
sahf
sti
xchg
insb
dec
in
roll
push
xor
pop
pop
pop
adc
mov
cld
cmp
lea
shll
es
lret
aaa
mov
or
jmp
pop
outsb
pop
lds
lcall
jg
insl
xchg
push
mov
addr16
xchg
dec
int
dec
pop
or
fidivrs
mov
mov
fs
sub
dec
mov
out
xor
imul
lahf
aad
lea
fwait
ja
mov
cmp
xchg
fcmove
mov
icebp
fildll
test
aad
and
xor
stos
xor
mov
and
stos
add
mov
in
shll
arpl
inc
scas
mov
mov
inc
mov
addl
mov
rorl
mov
jecxz
rcrb
xor
insl
aas
outsl
cmp
mov
push
dec
lcall
add
and
orb
sub
push
push
xchg
fstpl
enter
dec
lret
cmp
es
fsubl
pop
jnp
das
stc
mov
xor
rcr
hlt
dec
inc
sahf
clc
cmp
ds
cltd
dec
iret
jp
popf
jae
movsl
stc
mov
lods
mov
inc
aas
pop
mov
sbb
jb
clc
inc
shll
push
cmpl
pop
inc
test
test
in
mov
xor
pop
fwait
jb
fwait
add
push
stc
in
xchg
sub
mov
dec
xor
into
xchg
pop
jae
jecxz
lock
jle
or
loope
rorb
out
mov
clc
cmp
mov
imul
enter
arpl
or
jnp
lahf
aam
push
add
lods
fistpl
pop
cmpsb
pop
mov
push
lods
dec
daa
sub
pop
jecxz
sub
fisttps
sub
stos
sbb
mov
sbb
mov
lock
fisttpl
pop
fcoml
stos
push
jmp
dec
dec
mov
inc
xchg
pop
jl
mov
or
popf
jecxz
addr16
sub
push
aaa
insb
push
cmpsl
scas
jnp
lret
mov
push
add
dec
frstor
dec
out
push
xor
adc
adc
add
and
ss
in
jge
adc
or
flds
into
mov
cmp
pop
lcall
stos
fisubrl
sti
or
out
shlb
mov
mov
mov
dec
pop
into
xor
out
cs
fwait
shlb
lret
test
stos
into
jle
mov
test
add
aaa
sahf
out
or
or
je
arpl
push
inc
ret
mov
sub
jl
xor
out
push
mov
ret
ja
mov
mov
dec
mov
or
add
push
es
dec
test
arpl
xor
dec
lcall
ret
mov
push
adcl
jle
loop
push
adc
fisubrs
cmpsb
in
fcmove
loope
jmp
cld
inc
daa
insl
add
inc
mov
sub
cli
add
push
dec
pxor
negb
lods
fbstp
call
mov
into
cld
xchg
mov
dec
push
jns
push
in
or
lahf
mov
rol
sahf
rorl
add
in
dec
pop
mov
jbe
push
xchg
mov
xlat
push
add
aaa
sbb
je
pop
call
popf
xchg
lret
xchg
pusha
aam
xor
or
je
pop
sbb
mov
jbe
cmp
jecxz
cwtl
mov
jp
mov
std
out
push
jecxz
mov
sub
and
inc
mov
cmp
jmp
notl
ret
mov
test
pop
jns
jecxz
jno
les
pusha
inc
ja
jbe
shl
and
jae
push
add
mov
mov
inc
jno
sub
mov
cmp
pusha
loope
mov
cmpl
xor
jno
paddq
xchg
pushf
mov
nop
adc
sbb
cmp
into
test
sbb
adc
insl
mov
xchg
aad
jle
jp
movsb
cmp
lcall
or
or
inc
jne
inc
out
jle
out
clc
xchg
jmp
lods
mov
lods
xchg
in
push
mov
rcrl
and
or
pop
mov
lahf
push
inc
das
adc
push
clc
int3
dec
xchg
jmp
insb
xor
jecxz
mov
adc
cmp
add
in
sbb
imul
repz
sbb
inc
stos
das
stos
mov
cmp
jg
xor
imul
dec
cmp
mov
adc
pop
push
sti
dec
je
push
scas
xchg
pop
test
cltd
in
aaa
aad
add
pop
xor
int3
dec
sbb
xchg
xor
xor
mov
mov
setnp
imul
movsb
inc
test
add
or
call
sbb
in
pop
inc
jnp
push
sub
and
inc
mov
fsubs
cmc
movb
xor
mov
loopne
iret
add
faddl
ret
ja
outsl
fnstsw
and
mov
shrb
add
daa
pop
addb
clc
dec
xor
stos
push
push
out
scas
mov
js
in
push
dec
fnstenv
sahf
movb
leave
xor
mov
xor
jo
imull
in
mov
inc
leave
jno
dec
sub
mov
xor
push
pop
js
loop
sbb
xlat
rolb
mov
sub
jp
pushf
cmp
mov
int
out
mov
jmp
jmp
sbb
out
mov
xchg
sbb
xor
data16
lods
mov
ljmp
movsl
push
jmp
bound
add
data16
loop
mov
insb
inc
sbb
mov
mov
inc
push
loop
imul
push
leave
enter
out
jae
xchg
mov
mov
das
pop
xor
xchg
sbb
in
jmp
push
pop
mov
xchg
popf
or
jg
sti
mov
aad
adc
mov
inc
and
dec
cmp
sbb
jle
mov
je
jo
movsl
addr16
ret
mov
popf
or
stc
sar
add
xchg
dec
or
adc
and
nop
dec
push
xchg
or
into
or
leave
inc
rolb
push
pop
jbe
arpl
pop
jmp
xor
and
and
call
test
scas
xlat
rclb
jne
cmp
lods
mov
sub
mov
icebp
mov
ficoms
fwait
sub
adcl
clc
xor
jb
enter
cmp
aas
jge
mov
int3
movsb
mov
inc
jmp
cmp
in
mov
hlt
mov
jmp
fsubp
sets
or
dec
xchg
iret
outsb
cmp
dec
mov
mov
mov
fucomp
imul
cltd
sub
jns
sahf
and
jecxz
pop
and
sarb
cmp
pop
push
mov
nop
sbb
ja
mov
fwait
int3
jae
ffreep
cmpsl
dec
jnp
cmp
adc
xchg
fstps
xor
and
out
in
fidivs
movl
ja
cmp
push
mov
jge
je
les
setno
mov
xor
gs
sub
sbb
ljmp
leave
xor
adc
sti
cld
mov
pop
fbld
mov
hlt
mov
mov
cmp
bound
test
xlat
hlt
cmp
mov
mov
shll
dec
aas
cmpsl
das
mov
fwait
jnp
xchg
adc
into
xchg
push
pop
xor
add
pop
xor
ret
icebp
repnz
movsb
xchg
data16
jmp
sub
outsb
dec
or
jg
dec
mov
xor
cmp
aas
scas
jle
dec
pop
xchg
add
mov
cmpl
testl
xchg
into
inc
pop
loop
push
mov
call
xor
mov
push
cmp
xchg
pop
jg
in
inc
ss
or
jo
ret
sbb
xor
add
in
xchg
repz
call
mov
into
or
aad
jmp
pushf
mov
and
sub
ljmp
or
scas
fs
loop
xchg
rcr
fisubrs
mov
out
repz
mov
mov
in
das
lcall
xchg
or
fs
mov
cmp
mov
inc
lret
mov
cmp
adcl
xor
add
int
or
add
dec
xor
add
mov
fnsave
push
insl
push
push
out
jns
cmpsb
mov
inc
lods
pop
in
xor
cmpsb
and
mov
xchg
hlt
mov
rclb
sbb
scas
adc
cs
mov
movsl
rcrb
xchg
popf
in
les
sub
sub
loopne
xchg
mov
imul
ds
add
rol
xchg
fdivl
mov
int
xchg
mov
jp
sbb
das
and
ljmp
mov
mov
jae
arpl
mov
xchg
mov
popa
xchg
arpl
cmp
lcall
cmpsl
rorb
or
cmc
sarl
inc
cmp
inc
inc
push
lret
flds
cmp
lret
iret
pop
sbb
dec
mov
pop
jae
test
mov
push
dec
adc
test
fidivrl
cmp
cmp
inc
xor
xor
dec
jbe
sbb
adc
ja
outsb
cwtl
jg
sbb
mov
lock
pushf
dec
fcoms
mov
adc
xor
test
bound
mov
aam
lret
sub
sbb
in
jnp
add
repnz
lret
mov
xchg
loopne
add
scas
push
dec
mov
sbbl
push
jns
dec
mov
mov
roll
jns
in
cltd
in
aas
iret
bound
cmp
loope
sub
or
ljmp
insb
rorl
out
loope
lock
cmpsb
icebp
jmp
lods
shrl
sti
test
pop
sarb
fnsave
out
push
insb
fisubrl
dec
ud1
or
lahf
lret
lret
jns
lcall
ds
fcmove
mov
mov
arpl
in
push
shrb
fsts
jle
sub
aad
ret
sbb
stos
shlb
out
xchg
sub
lahf
mov
fdivr
bound
jmp
loop
xchg
mov
ja
jl
int3
fucomi
loope
shll
sub
adcb
pop
ret
pop
sub
jle
mov
sti
mov
cld
push
push
add
xor
stc
add
sub
pop
jnp
xor
lds
fwait
sahf
lahf
inc
push
or
cmp
dec
pop
dec
je
sbb
fwait
xor
lahf
repnz
push
mov
pop
jp
mov
add
int
adc
inc
or
adc
fiadds
xchg
cmpsl
int3
push
outsl
lret
mov
add
repnz
shrl
hlt
enter
in
pop
jl
enter
adc
and
fimuls
loopne
pop
sbb
mov
dec
fwait
jne
stc
push
push
sarl
xor
mov
add
inc
fnsave
fwait
inc
mov
cmc
mov
add
cmp
mov
clc
xchg
push
sub
xchg
test
push
inc
scas
mov
mov
outsb
adc
daa
test
aam
sbb
jp
xchg
or
pop
movsb
popf
mov
pop
xchg
scas
inc
daa
pushf
mov
mov
addr16
enter
mov
cld
fbld
test
xchg
push
fld
test
stos
push
push
stos
addr16
push
jne
int
ss
pop
aam
in
sub
in
jp
jmp
xchg
mov
xchg
in
lret
sub
dec
sub
jns
add
jp
pop
cwtl
stos
add
jp
inc
imul
sbb
add
loope
testb
dec
mov
das
mov
mov
jno
sub
push
loope
roll
cmp
fimull
imul
mov
adc
mov
outsb
mov
pop
mov
stos
dec
add
fwait
int
push
in
sbb
aas
sbb
imul
fdivs
push
pushf
sub
cmpsb
mov
loope
jp
frstor
jo
sbb
imul
aaa
cmc
arpl
mov
inc
mov
mov
leave
leave
mov
inc
fisttpll
mov
add
sti
mov
or
adc
shrl
mull
sbb
mov
flds
fwait
push
mov
sbb
out
xor
and
scas
or
ret
xor
pop
aas
cmp
inc
or
call
push
fcomp
mov
nop
mov
sbb
cmp
inc
jb
hlt
dec
xchg
cmp
dec
andl
mov
leave
rolb
mov
jnp
loope
cmp
dec
incl
pop
push
in
sbb
push
pop
push
inc
xor
sub
pop
xchg
inc
inc
fs
and
jecxz
jl
popf
jno
add
dec
out
jmp
inc
mov
lds
sbb
push
pop
mov
mov
lods
xor
mov
aaa
add
shrb
aam
fstps
cmc
push
lock
imul
out
add
movsb
fisttps
xchg
xlat
outsb
mov
mov
xchg
inc
test
lods
adc
mov
cmp
mov
repz
pop
shrl
stos
push
out
xchg
es
mov
adc
pusha
pop
fdivrp
sbb
aaa
adc
jmp
idiv
divl
pusha
call
xor
nop
es
mov
jg
xchg
sbb
sahf
cmpsl
vandnpd
aas
mov
jno
clc
mov
jp
in
mov
jo
aaa
test
xorl
repnz
daa
jg
xchg
mov
lods
movsb
cs
stos
xchg
call
and
sbb
js
out
inc
stc
imul
movl
or
and
mull
pop
pop
scas
dec
fwait
and
popa
ljmp
in
mov
in
pop
in
pop
lret
arpl
pop
lret
add
jl
pop
sbb
mov
push
dec
jae
adc
pushf
inc
mov
or
jecxz
push
mov
int3
dec
mov
fcmovu
xor
mov
pop
and
in
or
mov
imul
sub
mov
inc
push
xchg
mov
push
sub
dec
jae
cmp
mov
test
sub
pushf
rcr
mov
jle
adc
mov
mov
push
loop
lret
pop
outsl
fcompp
push
push
stc
insb
std
test
cmp
movsb
lret
jle
in
xchg
mov
pop
mov
divb
gs
dec
stos
mov
imul
mov
pop
mov
dec
and
jno
or
cmp
push
pop
mov
jmp
filds
aas
ljmp
xor
cmp
sar
xchg
dec
stos
or
jae
pop
jnp
mov
out
and
arpl
pop
inc
daa
push
or
inc
push
mov
adc
push
js
xor
fistpll
xchg
xorb
negb
inc
dec
loop
add
ret
repz
push
pop
call
pmuludq
mov
subl
push
pusha
imul
loope
shlb
cmpsl
int
ljmp
mov
hlt
sbb
jle
mov
mov
cs
or
jl
pop
int3
rorl
pop
mov
cmc
mov
mov
roll
cmc
dec
cs
inc
adc
push
outsl
int
in
jns
cltd
inc
ds
ret
cmp
cmp
nop
cmp
mov
cmpsb
mov
mov
bound
ljmp
ja
mov
das
lret
pop
sarl
loop
leave
cmp
sbb
inc
or
cmpb
jle
dec
or
notl
ljmp
inc
sarb
jge
adc
lea
sbb
rcrl
sarb
dec
or
xchg
push
fildll
xchg
stc
lods
sbb
sbb
pop
pop
push
daa
mov
push
jp
push
and
jp
js
adc
ja
cmp
cmp
nop
dec
fildl
movl
cs
das
out
xchg
and
pop
inc
and
fsubrl
imul
mov
fwait
pushf
push
mov
bound
lcall
sub
mov
gs
ficoms
mov
fidivrs
mov
inc
dec
daa
pop
or
and
ja
xchg
loopne
imul
xchg
sub
push
add
mov
push
sub
pop
mov
sub
movsb
ja
mov
cmp
and
sub
add
addr16
add
xchg
fs
mov
frstor
pop
punpckhdq
add
or
pop
fsub
stos
sbb
push
or
je,pt
sbb
bts
imul
inc
jns
movaps
push
pusha
aad
aaa
xchg
cmp
ja
sub
mov
ficoms
push
xchg
inc
pop
jo
sbb
inc
fiadds
pop
int
and
mov
push
fmuls
pushf
jo
outsb
shll
mov
scas
sarl
scas
mov
mov
push
and
mov
cmp
ss
test
fsubrl
cmpsl
pop
adc
pop
in
shll
pop
sub
add
pop
add
xor
hlt
push
cld
xchg
inc
and
xchg
mov
xchg
cmp
xchg
in
shll
addr16
push
mov
cmp
pop
das
roll
in
inc
in
lret
insb
imulb
aaa
pop
sub
lcall
or
xor
fldenv
jp
mov
sahf
sbb
pusha
dec
mov
mov
sub
jmp
cmp
jae
mov
xchg
loopne
mov
fsubl
test
xor
mov
jno
inc
in
add
fcoms
xchg
divl
mov
in
jg
sub
cmp
adc
pop
add
movsl
jno
cmp
iret
dec
fstl
aad
xchg
int3
jbe
or
mov
lea
jns
aas
xor
imul
mov
pop
add
mov
sub
imul
pop
loopne
inc
pop
inc
mov
cmp
push
dec
aas
xchg
push
add
sub
cmp
or
adc
jg
and
into
shlb
aam
jecxz
enter
into
fistpll
sub
sub
adc
cltd
std
push
and
scas
movsl
ficoms
popf
dec
stos
test
mov
jp
stc
andl
mov
pop
lods
xor
push
jmp
shrb
fwait
rorb
bound
out
mov
test
xchg
mov
mov
mov
in
jp
sub
clc
mov
loope
sti
pop
pusha
pushf
fwait
xchg
xchg
stc
js
jge
xchg
fistpl
mov
jl
push
cltd
inc
dec
sbb
mov
test
lret
adc
sar
movb
andb
sti
inc
jne
loope
and
movsb
sahf
clc
loopne
cmp
lods
lahf
mov
jg
mov
xchg
sbb
call
aas
sahf
faddp
xorb
imul
xor
or
push
icebp
jnp
test
fstpt
pop
jecxz
aam
stos
pop
fcoml
mov
loope
bound
cmpsl
jl
loope
jl
and
mov
imul
mov
fmuls
mov
ffreep
and
jg
fnsave
cmp
lea
or
xchg
jge
jns
int3
ret
mov
xlat
inc
hlt
stos
pop
jge
pop
imul
and
push
inc
pushf
divb
scas
lods
jg
mov
jo
inc
ss
clc
dec
aaa
movsl
lock
jg
adc
out
mov
dec
fnstenv
mov
sti
call
sub
push
std
lea
fisubl
mov
repnz
jne
mov
cmp
mov
ljmp
mov
mov
aad
cld
xchg
push
mov
xchg
or
cs
xchg
popa
xchg
div
xchg
ss
outsb
ja
xor
cmpl
sbb
lcall
mov
cmp
jnp
out
mov
push
jmp
outsl
int3
scas
adc
ret
nop
cmpsb
sarb
or
jb
movsb
sbbb
sahf
movsl
jbe
mov
rorl
sbb
mov
jl
xchg
and
je
cmp
js
mov
push
mov
push
out
aam
jb
cwtl
add
neg
arpl
rol
mov
incl
sbb
cld
incl
cltd
nop
xchg
cmc
add
sbb
ja
xchg
ljmp
add
cmp
pusha
int3
std
xchg
test
rolb
mov
test
inc
sbb
mov
sahf
aas
cmp
fidivl
or
jg
lret
sbb
add
fdivrl
addr16
dec
or
fldt
clc
mov
hlt
pop
fldl
xchg
into
cmp
gs
xchg
xchg
movb
je
sbb
dec
add
idivl
stos
test
aad
push
push
jmp
insl
mov
mov
mov
ss
mov
enter
cmp
push
and
stc
jge
cwtl
push
and
jo
xchg
call
sahf
nop
iret
mov
pusha
mov
jo
push
iret
bound
scas
jns
ret
mov
mov
in
out
addr16
or
mov
dec
clc
call
dec
je
or
cmp
xchg
or
inc
inc
cs
mov
shll
into
pop
faddl
popa
cwtl
cmp
scas
imul
jl
lcall
imulb
pop
mov
push
imul
xor
rcrb
xchg
pop
mov
jo
mov
add
int3
adc
loop
movsb
adc
cmpsb
loop
dec
fdivrp
mov
adc
mov
xor
out
movsl
lods
mov
sbb
mov
ljmp
jecxz
adc
ja
push
repnz
or
pop
out
ds
push
pop
in
cmp
cmp
jne
sub
or
xchg
mull
push
jl
mov
outsl
aad
int3
in
lret
push
or
outsb
cmp
test
lods
and
mov
pop
xor
push
adc
sti
popa
test
inc
addl
mov
sbb
sbb
push
sbb
lret
mov
dec
xchg
jp
ss
jo,pn
cltd
scas
loopne
pop
iret
cmp
or
xchg
into
push
pushf
cltd
push
movsl
mov
shll
jb
and
sub
lds
data16
jl
mov
pop
inc
in
pop
test
icebp
dec
mov
nop
dec
sarb
cmc
mov
daa
leave
fsubl
inc
adc
and
lcall
in
movsl
pop
cs
push
and
jno
fs
lahf
loopne
xchg
mov
cmp
xor
scas
shrb
outsb
inc
xor
mov
mov
xlat
fsubs
cmpsl
mov
lds
xchg
inc
js
pop
shrl
cmovle
jmp
jmp
mov
sbb
jge
rorb
push
pop
mov
aam
sbb
xchg
les
xlat
ret
cli
mov
xor
inc
pop
fs
xchg
xchg
inc
fildl
fwait
xchg
jne
dec
pop
push
xchg
andl
jmp
inc
pop
xchg
dec
cmp
lcall
mov
push
xor
add
xchg
inc
mov
aad
adc
push
sub
dec
mov
dec
repz
xlat
push
les
out
rcll
ror
jb
std
mov
mov
dec
add
icebp
xchg
fistl
xor
jae
mov
xor
int
dec
sub
jns
sahf
dec
test
std
push
aad
sub
inc
sub
fwait
test
add
cmpsb
rolb
or
pop
inc
dec
movsl
dec
xchg
loopne
push
repz
mov
xchg
pop
and
jecxz
mov
inc
sub
xchg
cmp
int
pop
lock
and
aad
inc
rclb
loope
lret
into
mov
cli
pop
fucomp
and
push
call
xor
aad
mov
push
in
stos
jg
xor
add
shr
pop
jg
push
movsl
push
push
into
sbb
sbb
sbb
and
and
icebp
mov
add
and
mov
xchg
fcmovnu
cmpsl
fwait
sbb
lock
mov
test
in
and
nop
jl
dec
sbb
ret
sbb
fcmovbe
jnp
or
movsl
sbb
sbb
xor
fsts
call
pop
cmpsb
adc
loop
sub
in
or
dec
push
insl
out
push
cmp
add
fcoml
insl
dec
sbb
arpl
adc
push
es
inc
adc
popa
out
xchg
push
lods
pop
mov
stos
decl
int
inc
pop
inc
stos
or
lcall
daa
lock
mov
mov
adc
or
insl
cld
xchg
push
pop
daa
gs
push
out
mov
xor
mov
dec
xor
movsl
jl
adc
jns
les
jns
cli
ret
push
test
data16
imul
int
adc
clc
out
jno
in
movsl
nop
adc
xor
enter
and
mov
and
leave
jle
jmp
outsl
out
lret
int3
cs
lods
xor
sbbb
enter
pop
cwtl
sbb
dec
fadds
fildl
jp
inc
scas
call
cmp
mov
push
xchg
inc
dec
push
xor
ds
mov
lds
xchg
xchg
iret
enter
mul
dec
inc
scas
xlat
cmc
push
xchg
cmp
fdivrl
fstpt
and
scas
jae
mov
add
jne
lock
push
xchg
mov
sub
mov
hlt
cld
dec
mov
lret
cli
into
sarl
lcall
mov
inc
subb
lea
subl
mov
sub
daa
pop
lret
test
out
mov
jne
mov
add
mov
lcall
inc
lret
push
dec
mov
jecxz
pop
mov
push
push
dec
sbb
pop
xchg
xor
inc
push
pop
addr16
stc
cmpsl
xchg
or
into
push
push
inc
or
xchg
dec
mov
pop
test
les
jns
push
sub
pop
in
out
nop
insl
fwait
and
js
lret
push
cs
sbb
testb
lds
and
pop
mov
mov
add
xchg
or
dec
popf
push
inc
push
lcall
movsl
leave
mov
xchg
popf
daa
cld
lods
push
pop
add
mov
push
pusha
cmp
mov
orl
int3
cwtl
push
pop
das
mov
fs
sbb
das
sub
movsl
loope
or
inc
mov
ljmp
dec
fisttps
or
jle
xor
outsb
imul
xchg
jae
lret
xchg
adcl
leave
xchg
dec
aas
and
sahf
lock
mov
mov
mov
out
and
cmp
jmp
fbstp
repz
call
mov
xor
dec
rcrl
imul
rcr
or
jne
push
mov
cmpsl
mov
movsl
ljmp
ret
loop
xchg
xchg
stc
or
mov
movsl
or
sub
cld
imul
ret
fldt
pushf
dec
ret
cs
jg
sbb
pushf
leave
dec
cmp
mov
push
push
mov
sbb
adc
push
push
movsb
dec
mov
ds
xchg
ret
stos
fs
xor
hlt
pop
xchg
and
lods
lahf
xchg
mov
icebp
popl
lds
fstl
pusha
or
test
pop
rclb
shlb
mov
cli
lock
fstl
inc
and
and
mov
outsl
mov
loopne
push
dec
sbb
stos
xlat
cmp
xchg
inc
repz
repnz
pop
dec
in
mov
push
fsubl
push
pop
cmp
insl
into
fnstcw
fldt
std
out
add
jbe
rol
inc
outsb
imul
icebp
fwait
mov
fcoml
or
jl
out
popa
hlt
flds
dec
inc
cmpsl
lahf
xor
mov
push
rcl
test
fucomip
mov
bound
xchg
sub
repz
jno
pop
cmp
sub
imul
sbb
dec
into
inc
test
mov
cmp
jo
outsl
pop
inc
stos
jmp
inc
rcrb
jecxz
sbb
xor
xchg
cmpsb
push
popa
fistpl
insb
iret
push
ljmp
outsl
test
cmpsb
js
mov
lds
dec
adc
cmp
add
jo
sub
push
jns
adc
or
dec
xor
in
xor
mov
jne
test
cld
adcl
pop
cltd
loopne
mov
sti
and
pop
js,pn
mov
xchg
fcoml
xchg
inc
adc
dec
jp
movsl
and
je
inc
lahf
cmpsl
cmp
call
es
in
and
fimuls
pusha
outsl
out
xchg
rcrb
xchg
inc
movsl
pop
sbb
mov
sub
adc
cs
mov
sbb
popf
mov
scas
shll
cmp
sub
push
shll
cmp
adc
mov
iret
imul
fstl
andl
ljmp
je
ret
jg
insl
ret
aaa
jb
mov
inc
rorb
lock
adc
push
xor
bnd
jg
and
sub
loopne
ret
je
lea
arpl
addr16
adc
insl
cli
clc
pop
scas
and
pop
bound
rcrb
loop
cwtl
cltd
sahf
sbb
cld
push
mov
add
es
mov
or
adc
push
gs
movb
mov
xchg
ret
mov
popf
xor
insl
xor
in
xor
adc
sub
mov
lahf
call
or
mov
sub
subb
xchg
mov
int3
enter
mov
jg
outsl
cmp
rcrl
cwtl
xchg
jnp
mov
test
push
jbe
dec
jb
jmp
int3
scas
jne
add
dec
jns
xor
pop
ficompl
cs
sbb
adc
xchg
nop
xchg
movsl
cmp
push
cmp
cmpsb
push
out
xchg
or
inc
imul
xchg
test
cmp
int
mov
sbb
xor
out
repnz
rorl
jl
fnstenv
mov
and
lea
adc
je
pop
test
fnstcw
mov
out
outsb
mov
mov
into
lods
aas
jne
imul
push
adc
fisubl
push
jno
mov
leave
and
add
mov
sub
jne
cmp
dec
dec
sub
fwait
lret
cld
cwtl
cmpsl
jl
test
out
mov
adcb
popf
addr16
dec
jo
fmull
shl
cmc
divb
sub
add
ret
insb
push
push
push
stos
and
mov
pushl
out
mov
cmp
jl
repz
lock
pop
sahf
cmp
lcall
mov
pop
push
outsb
bound
es
xchg
xchg
in
rolb
dec
and
xchg
aas
inc
sbb
out
pushf
dec
add
popa
cmp
mov
push
mov
dec
jg
fisttpll
stc
fistl
bound
pusha
jmp
sbb
xor
push
dec
movsb
dec
inc
push
loope
cmp
shl
push
cmp
sub
decl
neg
jne
mov
sub
shll
dec
mov
jb
add
or
lds
gs
hlt
cltd
mov
fnstcw
mov
jns
std
clc
shll
std
add
and
pop
lea
ss
add
rol
sti
xchg
push
jmp
push
adc
xchg
aas
cltd
jnp
mov
pop
mov
ljmp
or
lahf
add
pop
insb
mov
xor
int
ret
push
pop
out
and
mov
adc
insl
nop
out
mov
ja
push
loopne
je
mov
adc
mov
nop
add
pusha
ja
jl
mov
clc
decl
adc
pop
dec
sbb
shrb
mov
fiaddl
cmpsl
adcl
std
inc
sbb
dec
lods
movsb
ja
cmp
adc
fbstp
push
sub
shlb
sub
inc
cmc
cmp
xchg
add
cmp
pop
ss
adc
stos
xchg
and
sub
hlt
mov
dec
sub
push
shlb
add
dec
jg
shll
test
xchg
pop
fisubrl
fsubrs
push
inc
jae
xchg
push
pop
adc
shrb
int3
pop
pusha
into
inc
sub
ret
mov
push
jne
xor
push
shrb
sbb
imul
sub
sbbl
fmuls
jle
mov
cmpl
in
bound
movsb
push
aaa
add
xchg
addr16
pop
xchg
sbb
mov
inc
in
xchg
sbb
shl
out
jb
sbb
aad
popf
fisubs
xchg
sub
push
pop
bnd
xchg
add
mov
js
cmc
fwait
push
or
dec
jle
aam
daa
mov
ljmp
je
int
int3
faddl
jg
rcr
sarb
sbb
cs
scas
dec
pop
cli
push
sub
gs
mov
mov
clc
repnz
popf
shlb
or
stc
pop
or
pop
jp
jne
sbb
and
mov
push
xor
pop
push
insb
or
sub
push
popa
mov
mov
push
lea
push
mov
ret
test
add
dec
dec
inc
mov
adc
call
ss
cmp
dec
sub
adc
shll
mov
or
test
dec
adc
std
lods
addr16
xor
inc
pushf
pop
dec
pusha
faddp
aaa
sub
fwait
xchg
out
js
in
push
inc
and
xchg
stos
xchg
cli
mov
out
cmpl
imul
imul
in
lea
outsl
aaa
mov
frstor
fldenv
xchg
imul
idivb
loop
gs
adc
stos
lods
sbb
cmc
jae
lods
jecxz
insb
add
sbb
dec
xorl
dec
in
test
insb
or
mov
xor
incl
repnz
mov
dec
xlat
xchg
add
fisubrl
push
outsl
lahf
negb
outsb
movsl
js
outsl
cwtl
adc
inc
aad
cltd
inc
in
add
js
sbb
fsubr
mov
sbb
iret
orb
push
cmp
lret
into
insl
jg
outsl
mov
sbb
pop
cmp
gs
stos
cld
xor
adc
cmc
out
mov
xor
jle
xchg
and
xor
mov
pop
xchg
sbb
call
scas
mov
and
fcompl
fldcw
test
movsl
cmp
daa
or
xlat
push
aam
rcr
or
mov
adc
cwtl
xrstor
shrl
mov
cli
push
xor
lods
add
sahf
add
xchg
rcrl
jp
inc
mov
fucom
into
and
push
je
cmpsb
cmp
adc
repz
mov
jno
stc
cmp
xor
jb
fsubrs
std
mov
imul
inc
pop
sahf
clc
mov
adc
mov
adc
jp
and
popaw
rcrb
push
cmp
repz
inc
pop
decb
aaa
add
ljmp
pop
daa
mov
mov
fldl
popa
cli
sub
and
test
cmp
mov
dec
dec
adc
adc
fisttps
sahf
andl
ljmp
out
pusha
sahf
fisttps
and
lahf
add
lods
ffree
mov
in
dec
sbb
shlb
andl
inc
xor
ret
stos
fisttpl
test
adc
push
jno
cltd
test
xchg
out
fistpll
or
repnz
push
pushf
sahf
mov
in
inc
fcmovb
test
mov
adc
cmc
sub
add
mov
cmpsl
mov
jecxz
pushf
lods
add
mov
pop
ja
addl
xlat
push
xor
adc
test
test
insb
mov
hlt
mov
mov
cmc
sub
sub
gs
aam
adc
sub
sbb
mov
pushf
mov
sti
jbe
insl
lods
sub
push
setg
adc
mov
scas
inc
popf
or
mov
gs
lret
jmp
add
jae
shl
jbe
insb
inc
or
and
inc
mov
test
pop
sbbl
nop
bswap
sub
imul
inc
in
insb
adc
je
repnz
jl
pop
les
adc
mov
cmpsb
fists
adc
sbbl
nop
cmp
dec
loopne
mov
xchg
pop
push
js
inc
mov
dec
data16
testl
mov
sbb
int
mov
sub
or
fcmovnbe
xchg
xchg
fdivs
fs
sbb
and
xchg
sub
das
daa
push
into
add
push
jg
jecxz
or
mov
xchg
ficoms
inc
fbstp
push
jl
hlt
and
cmpb
sub
mov
pop
jae
push
or
aas
cmp
rcrb
dec
push
loope
pop
add
mov
lods
js
sar
out
mov
and
dec
fiaddl
movsb
fidivl
repz
xchg
cwtl
xchg
ss
stos
call
aam
out
sbb
je
repz
test
cmp
jecxz
cmp
mov
cld
loope
sub
fsubrp
xor
push
or
cs
jae
pusha
in
cmc
mov
sti
lods
cmp
mov
add
sti
imul
enter
add
aam
in
pusha
push
jmp
cmpsb
adc
adc
js
pop
push
cs
movsb
js
inc
and
iret
dec
pop
mov
aad
mov
aam
mov
adc
int3
pop
add
popa
and
addr16
push
nop
fidivs
xchg
lods
xor
push
imul
and
cltd
outsl
cmpl
inc
stos
adc
addb
sbbl
data16
bnd
jg
sbb
call
adc
mov
push
push
sbb
add
inc
or
daa
push
pop
cltd
lock
outsb
ficomps
xchg
sub
invd
dec
push
and
out
inc
xchg
out
jge
adc
push
jnp
cmp
and
add
mov
aaa
add
fmull
sbbb
add
cwtl
lahf
rorl
sbb
int3
insb
or
js
sahf
sti
andl
popf
pop
jnp
cmp
nop
pop
sbb
std
xchg
aaa
push
push
cmp
imul
lock
pop
insl
stos
fists
cltd
test
mov
push
mov
ss
inc
dec
inc
outsl
nop
insl
je
imul
jns
shlb
hlt
vpavgw
cltd
movsb
mov
jae
test
shll
ret
mov
sbb
adc
mov
and
arpl
adc
imul
push
inc
pop
push
mov
sub
pop
ftst
cmp
ret
aaa
in
and
rorl
lret
push
cmp
cmp
mov
sarl
jb
sbb
sub
xor
cmpsb
inc
sbb
lock
jp
out
ror
adc
mov
xor
in
sbb
push
in
jnp
jno
dec
lret
int
xor
push
mov
cs
add
sbb
movsb
mov
xor
and
mov
push
inc
push
xchg
call
jbe
int
push
dec
fcmovnu
dec
sub
mov
mov
push
popf
mov
ss
and
daa
jbe
es
stos
addb
mov
add
jo
arpl
inc
mov
repz
mov
rcll
mov
aas
nop
fwait
iret
sti
push
cmpsl
mov
loope
jbe
outsb
andb
loop
mov
je
out
out
jg
sub
lock
outsl
aam
mov
lods
xor
inc
dec
xchg
ud1
cmp
je
xor
fimuls
sub
dec
sub
inc
ffreep
add
aam
sub
sti
pop
std
pop
out
add
mov
es
sbb
aam
mov
pop
push
gs
mov
nop
jae
popa
ds
call
call
dec
roll
idivb
pop
jmp
shll
sbb
stc
cmp
inc
and
gs
std
or
clc
repnz
pop
bound
or
push
or
jne
adc
add
and
mov
cmpsb
sub
sbb
divl
ljmp
out
push
aas
mov
sub
or
hlt
gs
rep
mov
test
cmpsl
mov
movsl
rcrl
mov
inc
rcr
push
or
adcl
pop
loope
mov
iret
and
adc
pusha
ret
aaa
adc
cmc
sub
dec
dec
jecxz
push
in
mov
ja
loope
or
stos
mov
push
jb
jnp
pop
jns
and
ficomps
call
xor
iret
ja
fistpll
jbe
mov
mov
and
adc
pop
lahf
out
sbb
fwait
or
mov
adc
pop
inc
setp
or
jecxz
mov
lcall
and
adc
or
push
sti
xchg
mov
push
daa
addb
dec
out
add
jmp
pop
fbld
loop
jecxz
mov
mov
mov
add
xchg
imul
in
mov
add
dec
xor
mov
roll
sub
push
sbb
mov
mov
push
addr16
push
icebp
js
or
pop
fwait
cmp
vprotd
pop
cmp
gs
insb
xchg
movsl
push
out
repnz
dec
shrb
inc
cltd
inc
lcall
push
sarl
test
int3
outsb
xchg
jno
inc
std
ljmp
mov
adc
adc
repnz
mov
xchg
mov
cmpsl
mov
sbb
mov
insl
roll
loopne
nop
push
in
ret
pop
hlt
and
jo
cmpsl
pop
popa
push
ret
loope
dec
mov
addr16
add
xor
mov
clc
int3
cmp
adc
mov
imul
repz
adc
out
cmc
rclb
rcr
pop
mov
jbe
or
mov
mov
pop
dec
test
dec
pushf
adc
stc
jmp
out
js
enter
jnp
inc
jl
je
xor
repz
lret
shl
xor
dec
nop
jbe
addl
inc
in
and
mov
sbb
cs
jo
repz
push
xor
jp
mov
aad
jmp
sahf
outsl
jae
ret
sti
mov
mov
xor
sub
sub
mov
fistpll
or
pop
adc
divb
dec
lea
inc
lcall
pop
mov
adc
dec
pop
lahf
mov
pop
jmp
jbe
cld
add
mulb
outsb
mov
mov
inc
out
jle
inc
pop
add
jb
repz
xor
cltd
dec
dec
in
jb
repnz
adc
xchg
dec
repnz
lds
aas
sub
xor
aad
mov
jmp
jmp
or
adc
or
stc
sub
aad
ljmp
outsb
out
xor
add
pop
cmp
mov
stos
mov
inc
repz
push
stos
and
fidivrs
cmp
adc
andl
sahf
aas
ljmp
add
and
scas
mov
ljmp
jecxz
push
xlat
mov
jno
jmp
pushf
jge
aaa
mov
loope
push
dec
and
out
mov
jecxz
adcl
jecxz
mov
fwait
and
pop
jg
add
daa
je
fisubrl
mov
popa
pop
lcall
loope
xlat
xchg
xchg
inc
fidivrs
or
cmp
fs
add
out
mov
into
push
inc
xchg
clc
rol
inc
cs
mov
mov
lret
jne
pop
push
push
push
out
in
cld
cmc
movsl
jl
mov
pop
mov
lea
fisubs
add
mov
fs
test
sbb
xchg
mov
inc
subb
add
mov
dec
mov
push
nop
push
sahf
mov
scas
xchg
sub
mov
cwtl
fmulp
scas
xor
fnstenv
insl
pop
jbe
and
jno
inc
sti
dec
push
sti
out
jge,pt
sub
cs
pop
je
and
cwtl
add
gs
sbb
test
push
in
lds
pop
inc
lea
inc
mov
lea
fisttpl
push
xor
push
insb
int3
xorb
mov
mov
and
push
clc
sub
rcr
mov
ds
jnp
aas
sarb
pop
inc
pushf
sbb
add
bound
ss
fsts
mov
jae
pop
mov
xchg
or
jo
cmc
rclb
cli
pusha
or
fisttpl
gs
pop
jmp
adc
jnp
cmp
xor
cmpsl
das
scas
stos
xchg
xchg
push
dec
aam
out
push
xlat
aam
loopne
inc
adc
gs
fadds
or
pop
inc
lcall
sahf
mov
scas
xchg
fcomps
mov
fldcw
xlat
pop
mov
jae
repnz
fimuls
in
sarb
sti
popa
dec
mov
movsl
push
pop
push
in
in
mov
ds
inc
mov
in
xchg
rorb
add
call
mov
mov
jae
ficoml
mov
jl
inc
mov
in
adc
push
insl
lock
jne
sbb
ret
inc
ret
dec
mov
outsb
pop
popa
icebp
pop
sbb
inc
in
mov
inc
push
pop
lret
xchg
movsl
inc
xchg
enter
outsl
repnz
inc
mov
and
scas
push
imul
adc
add
sti
test
mov
orl
xchg
fwait
sub
sbb
or
cltd
jbe
movsb
popa
sub
aaa
mov
adc
clc
mov
push
clc
aas
pop
fnstcw
mov
iret
or
add
dec
adc
add
sbb
mov
int
orl
add
outsb
or
mov
sub
div
in
mov
loopne
dec
jo
mov
mov
cmpsb
pop
inc
jge
aas
dec
lods
cmpsl
dec
mov
push
rcrb
imul
mov
or
int
fbstp
mov
loop
push
jge
dec
jbe
xchg
dec
sbb
cmp
pop
cmp
push
xchg
xchg
dec
data16
push
out
lock
cwtl
lcall
sub
enter
addl
in
push
push
lahf
inc
add
test
dec
mov
push
in
or
es
pop
rcll
int
cmp
mov
addr16
enter
add
lds
adc
sub
add
jp
pop
lret
cmp
int
stos
addr16
shlb
mov
pusha
addb
ljmp
fs
dec
test
jbe
add
mov
mov
xchg
outsb
stc
fwait
jo
out
or
iret
pop
addr16
jns
addb
dec
mov
mov
inc
mov
imul
inc
jle
mov
fists
arpl
int
movsl
dec
and
mov
sub
xchg
insb
mov
popf
sbb
shll
mov
mov
and
mov
lahf
ds
dec
imul
inc
ja
push
andl
xor
shrb
popf
dec
outsb
inc
bound
stos
insb
push
push
jns
push
pop
test
mov
hlt
sbb
loope
fwait
pop
ja
mov
rcr
sti
je
xchg
in
movsl
or
je
jge
cmpsl
pop
push
xchg
int
jne
fdivrs
cmp
or
cltd
lods
jbe
mov
adc
xor
or
sarb
fldcw
mov
adc
push
shl
in
push
fbstp
insb
inc
aad
adc
rcll
xchg
fildll
and
loopne
jnp
mov
pushf
cli
cltd
sub
add
sbb
ret
shlb
jbe
mov
shlb
dec
scas
movsb
fdivr
or
ss
inc
xchg
dec
pop
ss
rorl
jg
movsb
cwtl
jecxz
ret
test
dec
xor
subb
adc
test
sub
sub
into
xchg
test
mov
mov
pushf
in
es
test
aam
shrl
in
pop
sub
push
xor
cmp
mov
push
fstps
jmp
fcoms
in
cmc
sbb
xor
out
hlt
xchg
cmpb
mov
adc
in
or
jne
inc
xlat
leave
mov
cmpsl
hlt
inc
out
lcall
scas
mov
mov
iret
fwait
roll
mov
in
mov
adcb
jle
jns
xor
pusha
in
dec
xchg
sub
sub
push
iret
in
inc
add
jmp
push
and
rcr
pop
mov
fmull
mov
jnp
mov
push
add
ljmp
imul
cmp
mov
mov
push
pusha
fildll
mov
mov
lahf
ss
jecxz
push
adc
ret
mov
pop
add
popf
das
sbb
negl
das
jbe
mov
ss
sbb
adc
lea
test
inc
dec
leave
adc
outsb
mov
sbb
sub
xor
test
push
mov
fbld
dec
iret
mov
aas
lret
add
scas
es
xchg
lods
and
out
mov
dec
loopne
stos
jecxz
imul
andl
push
mov
jmp
and
adc
movsl
push
cmp
pusha
out
fwait
ljmp
mov
nop
out
mov
fidivl
jmp
mov
mov
jb
cmc
inc
push
mov
inc
mov
sti
icebp
push
sbb
dec
mov
ret
xchg
xchg
jno
push
ret
stc
xor
cmp
repnz
cli
mov
in
pop
clc
pop
mov
push
test
arpl
es
xchg
mov
dec
cld
pusha
pushl
in
shlb
test
loop
mov
adcl
daa
xor
testl
stos
aam
repz
int
lret
adc
ja
out
mov
aad
or
add
add
mov
adc
ljmp
sbb
outsl
hlt
dec
std
xchg
jge
adc
push
or
bound
cmc
xchg
lret
hlt
adc
sub
ds
pop
pop
pop
je
jl
sub
mov
ds
xchg
cld
xchg
cltd
jns
wbinvd
cmp
lret
lcall
lahf
movsl
ror
pop
fisubl
imul
mov
sbb
xchg
mov
les
mov
jae
sbb
and
xor
push
cmp
das
inc
lock
out
cmpsl
stc
pop
xchg
and
pop
mov
mov
test
dec
inc
xchg
data16
xchg
cmp
push
dec
mov
xor
push
adc
lcall
pop
lea
dec
jb
ljmp
outsb
dec
jle
leave
test
push
or
push
xor
out
clc
inc
xor
xchg
roll
dec
fsts
mov
dec
xchg
mov
iret
scas
mov
mov
testl
fcmovu
int3
stos
pushf
jecxz
cmpb
and
rcrb
lret
inc
in
dec
sbb
rorl
inc
into
cwtl
fidivs
popa
pop
pop
pop
popa
push
pop
cmp
int
inc
sub
movsb
std
data16
xor
add
and
mov
sub
cltd
out
testl
jnp
lcall
ljmp
push
and
and
jbe
fdivrs
mov
or
aas
jg
les
and
cmp
nop
mov
sbb
jecxz
mov
inc
dec
pop
sub
movsl
xor
mov
cwtl
adc
inc
jno
in
loop
pop
add
push
push
in
bound
in
cld
ret
popa
push
jb
outsb
push
aam
daa
scas
sbb
push
test
pusha
sbbb
mov
inc
daa
xor
pusha
call
xchg
lret
jecxz
jb
sbb
pop
stc
pop
xor
mov
cmp
lea
inc
inc
inc
xchg
inc
loopne
mov
cmc
adc
addl
adc
pop
xlat
bound
repz
mov
xor
push
das
aam
cmp
mov
loop
adc
sbb
mov
test
aad
cmp
idivb
daa
fwait
out
and
sbbb
dec
push
pop
repnz
aad
in
mov
mov
loope
xchg
mov
mov
cmpsb
and
sarb
dec
in
addb
jno
out
sbbb
inc
or
xchg
lods
push
mov
js
pop
or
loope
mov
xor
rcrb
ja
int3
or
dec
cmp
loop
fdivrl
and
pop
pop
out
int3
imul
pop
ret
sarl
repnz
mov
loopne
and
mov
or
push
xorl
or
inc
test
sbb
pop
sahf
addr16
or
or
test
inc
mov
ret
arpl
out
mov
enter
pushf
xor
ds
jle
iret
mov
push
mov
adc
in
xchg
jns
pusha
pop
dec
adc
es
fmuls
lea
pop
mov
int
cli
or
pop
and
bswap
insb
fildl
adc
pushf
repz
loop
pop
lret
push
mov
daa
push
adc
jl
push
ret
and
ficoml
mov
ss
inc
mov
sarb
xchg
add
stos
insl
fisubs
lds
pop
push
in
mov
xor
or
mov
popfw
mov
add
dec
imul
hlt
rcr
shl
shrb
add
jo
movsb
fwait
dec
push
imul
jnp
jmp
repnz
lcall
rcrl
inc
daa
cwtl
ficoml
rol
add
push
int3
sub
push
scas
xchg
mov
xchg
inc
pusha
sbb
sbb
pop
dec
mov
aad
sub
xor
mov
lods
mov
sub
adc
pop
shll
push
add
cli
clc
jp
lret
aas
cmp
test
xor
cmpsb
daa
aam
pop
xor
adc
jmp
pop
int
jo
inc
cmp
je
orb
cwtl
pusha
dec
popf
mov
or
arpl
dec
jg
ret
mov
push
push
addr16
pop
stos
push
xor
pop
jl
jbe
sub
pop
clc
addr16
aaa
adc
repnz
sbb
xchg
repnz
pushf
fidivs
fs
sbb
sub
jae
test
dec
mov
cmpsl
inc
out
sbb
icebp
scas
push
or
je
mov
addl
mov
cmp
and
and
movsl
jle
enter
test
jge
aaa
sti
push
push
inc
addr16
mov
fiadds
clc
pop
cwtd
shr
jns
sbb
out
mov
fldenv
dec
adc
pop
lods
or
aad
adc
xor
add
cmp
rol
imul
sub
or
pop
push
xlat
cs
fcompl
mov
mov
lea
mov
mov
sub
mov
insb
jmp
cwtl
push
mov
and
add
add
push
inc
pushl
adcl
pop
ljmp
test
fistpl
sbb
je
mov
dec
and
jnp
int
and
jnp
pop
faddl
sbb
inc
int3
bound
sbb
cmp
add
sahf
xchg
and
push
outsb
push
call
fsubrl
std
and
dec
xchg
call
shlb
lods
aaa
dec
adc
adc
push
cmp
fadd
jnp
cwtl
pop
std
out
pop
or
jno
ds
mov
gs
mov
cmpsl
test
fs
ljmp
fwait
insb
lcall
sub
fisttpll
stc
shr
sar
cmp
inc
aad
push
jno
xor
jbe
mov
pop
shlb
or
mov
push
std
fdivrl
cmp
cmp
aad
push
movb
inc
pop
fistpll
cltd
mov
sub
loop
in
idivl
shll
mov
stos
push
push
cmp
cltd
push
inc
xor
adc
stc
fnsave
mov
fwait
push
les
push
sbb
pop
sbb
arpl
jo
aas
cld
std
xlat
nop
pop
jmp
inc
addr16
aaa
sbb
push
in
rcr
mov
dec
xchg
push
es
rcrb
ffree
les
mov
call
popf
mov
out
loop
fistps
imul
push
dec
fdiv
or
in
fwait
ret
ljmp
add
xor
loopne
mov
ds
fwait
divb
mov
pop
jecxz
sub
loopne
xor
adc
in
stos
push
sub
mov
lahf
in
lds
add
lret
pop
fsubl
into
lock
mov
bound
xor
out
addr16
sbb
push
dec
cmp
fstpt
mov
lods
dec
add
jle
pusha
push
pop
xchg
dec
xchg
in
or
pop
mov
and
push
mov
sub
mov
jb
mov
out
scas
pop
adc
push
sbb
test
xchg
imul
std
jae
or
std
sub
js
push
or
lods
jno
mov
cmpsl
lcall
lods
call
add
mov
jecxz
jge
imul
sbb
stos
test
adc
jg
xor
adc
insl
xchg
test
jl
out
jae
pop
and
adc
enter
mov
fimuls
test
inc
push
mov
lods
and
lods
arpl
loop
add
and
int3
test
negb
mov
push
test
ja
add
add
fistpl
addl
sahf
push
push
sbb
inc
out
imul
dec
test
add
shrb
pop
jne
mov
jg
leave
dec
push
dec
sti
adc
ffreep
pop
inc
lods
enter
or
mov
xor
ljmp
wrmsr
or
das
inc
decl
mov
pushf
sub
push
dec
jmp
adc
inc
mov
jne
dec
dec
xchg
dec
es
adc
orb
push
mov
jmp
jae
and
pushf
jmp
and
roll
stos
xor
jg
xor
sub
enter
mov
mov
ud0
les
and
pop
lret
jnp
xchg
insb
pop
pop
mov
pop
cmp
adc
xorb
call
xor
jne
call
xchg
ret
pop
or
movl
push
sub
insb
and
mov
subl
inc
pop
cmp
clc
in
out
popf
dec
adc
insl
xchg
xchg
xchg
jmp
jb
cmpsl
sbb
push
dec
inc
push
sbb
movsl
insb
lods
pop
aam
lretw
inc
in
push
jbe
push
bound
sub
rcrl
lods
hlt
dec
ljmp
jmp
fs
fs
sbb
sbb
xor
insl
fwait
aad
sub
ror
xchg
add
jmp
or
dec
aaa
cmp
iret
cmp
push
bound
cmp
ret
inc
leave
rorb
or
and
sub
iret
jo
fidivl
jg
mov
test
mov
lcall
and
jb
aaa
jp
cmpsl
in
inc
xchg
xchg
divb
inc
cmp
add
inc
aas
mov
add
jne
sub
push
push
inc
loope
inc
xchg
aad
jo
cmp
ja
add
pusha
and
out
jmp
pop
ja
pop
out
in
dec
jecxz
pop
jl
push
sub
fcomps
jl
mov
dec
int3
push
int3
mov
push
jbe
push
mov
rorb
ds
cs
test
pop
pop
lret
dec
jb
into
add
in
inc
shll
ret
test
mov
adc
sbb
or
icebp
bound
pop
mov
out
cmpsb
movsb
cmp
sub
pop
inc
fwait
pop
stos
mov
xchg
cmp
add
jo
imul
jne
xorl
test
sbb
add
pop
adc
add
jnp
mov
xchg
pushf
jb
jns
cltd
cmc
hlt
mov
sub
out
pusha
aad
notl
int3
sti
xor
fwait
mov
iret
mov
push
andl
mov
mov
mov
shll
xchg
lret
mov
dec
std
lcall
inc
imull
mov
lahf
inc
inc
mov
jge
call
push
fisttps
es
xchg
outsl
add
mov
movb
out
jmp
ds
int3
ljmp
xchg
sub
sahf
stc
repz
push
mov
jge
xor
xchg
insb
scas
es
sbb
mov
sbb
lcall
dec
sarb
add
rcll
cwtl
dec
sahf
dec
scas
cld
insl
and
xchg
test
shlb
lret
mov
popa
enter
inc
enter
ret
xchg
adc
in
imul
and
jl
rcrb
int3
in
sbb
inc
lret
mov
adc
jmp
xchg
addr16
inc
add
xlat
ret
les
lods
je
adc
in
cmpl
call
scas
nop
sub
sub
xchg
xchg
out
dec
add
fcomps
xchg
outsb
lret
pop
pop
in
fisttpll
dec
out
in
into
mov
xor
adc
movsl
jmp
popa
cmp
repz
ds
pop
jae
lock
jae
dec
andb
and
ss
out
mov
mov
shlb
test
adc
inc
loope
fnstcw
arpl
mov
cltd
or
add
subb
xchg
clc
fistpl
cmpl
and
xchg
dec
dec
in
ja
sub
mov
scas
popf
popf
or
or
pop
or
fnstcw
xor
mov
or
adc
icebp
aas
call
adc
inc
and
adc
push
out
leave
aaa
mov
pop
fdivrs
mov
iret
jno
lock
jnp
cmp
cmpsb
bound
imul
xchg
adc
pop
aad
ret
arpl
push
and
call
clc
inc
mov
push
mov
jae
cltd
repz
ficomps
addr16
popl
cmp
push
mov
hlt
aam
or
lcall
in
push
icebp
sbb
jg
jecxz
pop
xchg
iret
stc
mov
sbb
in
or
es
test
sbb
scas
cli
outsl
pop
or
pushf
hlt
mov
dec
in
dec
repnz
sub
loope
cmpsl
jmp
out
repz
xlat
cwtl
jl
pop
jge
stc
adc
loopne
push
cwtl
cmp
cmc
imul
int
call
daa
pop
mov
jp
gs
notb
or
add
aam
xchg
enter
mov
xchg
add
or
add
xlat
es
adc
repz
vmptrst
push
dec
jnp
std
push
int3
popf
sar
loope
pop
lods
cmp
sub
aam
push
into
rorb
fdivrs
xor
scas
mov
jne
pop
mov
mov
mov
lea
jae
fisubrs
xchg
nop
add
std
ret
js
fchs
push
test
ret
push
push
push
lds
add
mov
shll
mov
cwtl
xchg
xor
fldl
in
scas
cmp
cmp
lret
mov
sahf
cli
sbb
jmp
dec
inc
pop
shll
dec
jle
jb
js
scas
std
aaa
or
and
mov
pop
cmp
es
repnz
pop
sbb
sub
adc
and
jp
push
mov
cmpb
xor
xor
adc
pop
fisttps
test
aad
dec
push
xor
in
lods
pop
les
push
test
mov
adc
out
add
arpl
and
lds
fists
ror
pop
cwtl
push
jno
mov
pop
or
mov
xchg
cmpsl
daa
xchg
jo
dec
cmovl
jecxz
imul
push
or
xlat
lahf
or
repnz
cmc
mov
decl
jle
mov
inc
movsl
mov
shr
into
sbb
fwait
addr16
ljmp
decb
push
insl
cld
jmp
inc
daa
fsubl
mov
shr
sub
mov
aaa
dec
sub
pop
dec
cmp
out
jecxz
or
sbb
mov
push
stos
out
inc
fucomip
out
adc
mov
push
cmp
mov
lds
hlt
enter
pop
mov
xor
fsts
add
inc
jb
dec
into
lods
in
sarl
stos
push
mov
fldt
dec
pushf
push
push
lcall
mov
subl
lcall
movsl
ret
dec
or
insb
shrl
mov
inc
scas
mov
pop
mov
pop
jmp
loop
cmp
adc
mov
jp
aas
or
mov
addl
pop
inc
dec
ss
movsl
fwait
jp
pop
sbb
outsb
mov
clc
jle
rcll
xor
sub
add
mov
ret
push
add
out
jle
mov
xor
sbb
insl
xchg
fprem
nop
cwtl
xchg
push
xor
mov
aaa
fcoml
jae
mov
or
test
cmc
addr16
sub
jnp
daa
jp
jecxz
cmp
sbb
inc
mov
xlat
repz
cmp
and
pop
int3
mov
jmp
aad
or
push
popf
xor
cmp
rorl
cmp
add
adc
mov
subl
arpl
hlt
popa
and
mov
mov
cmpsb
je
int
fistpl
push
and
dec
push
push
inc
cmpsb
inc
aaa
mov
add
dec
cmc
movsb
mov
ror
scas
fsubrs
add
into
or
nop
lds
mov
sbb
ds
cmp
icebp
js
adc
or
das
and
sub
inc
sti
jecxz
cmp
lods
test
loopne
es
lock
loop
jae
dec
arpl
lret
push
pusha
rclb
jge
aad
push
bound
add
jl
les
in
sbb
or
scas
adc
lods
cwtl
push
fwait
test
or
xor
push
rclb
mov
dec
sahf
out
cmp
jmp
bnd
es
xlat
lds
in
insb
imul
cmc
and
mov
icebp
jbe
addr16
dec
mov
pop
or
add
je
push
rdmsr
mov
les
cmpb
hlt
js
rcrb
adc
fisubrs
dec
adc
dec
int3
push
add
lods
or
test
lret
pop
imul
in
add
xchg
or
dec
or
ljmp
cmp
pop
loope
sub
outsb
push
mov
jge
int3
push
lock
loop
push
sub
and
push
sub
sub
mov
imull
fidivl
xchg
sub
mov
push
sbb
mov
mov
pop
loope
and
lods
xchg
sub
ja
lods
sbb
mov
and
icebp
mov
or
repz
inc
mov
imul
ret
sti
movsb
ret
jae
mov
mov
mov
add
loop
loop
or
fimuls
pop
test
mov
ror
pop
cmp
lock
or
faddp
xchg
outsb
push
cmp
push
imul
es
add
mov
shlb
insl
inc
lret
repnz
rcrl
sub
xchg
lds
stc
fninit
sahf
push
add
mov
xchg
xor
dec
adc
jge
or
inc
addr16
cmpsb
es
adc
aam
mov
sbb
xchg
push
jmp
mov
je
and
xor
loopne
jno
pop
xor
loop
adc
lds
xchg
add
push
lret
shlb
cmpsb
add
fistpll
pop
aaa
jle
push
mov
daa
jmp
out
push
addb
xchg
mov
fcmovu
cmp
ja
repz
sahf
pop
and
outsb
cltd
or
sbb
fildll
fdivs
sub
jne
das
push
ret
pop
inc
push
xchg
mov
mov
and
sub
and
fimuls
in
ljmp
fidivl
mov
lcall
dec
ret
adc
add
scas
sbb
add
dec
push
mov
xchg
inc
xchg
stos
cmpsl
into
and
mov
cld
pop
dec
pop
aas
cmp
in
test
sbb
testb
in
sbb
sti
inc
cmp
jbe
lds
les
cld
jo
mov
push
rolb
dec
xchg
enter
dec
cmp
add
adc
sub
push
mov
lret
outsb
mov
push
les
mov
loop
dec
jmp
sub
push
adc
sub
inc
jg
xchg
test
lds
gs
scas
xor
fldl
sbb
in
dec
mov
imul
out
dec
inc
xchg
adc
fnstcw
dec
mov
pop
test
mov
clc
mov
outsl
scas
cmpsl
xchg
mov
dec
lret
xor
add
pop
jb
cmpb
sub
vmovsd
pop
sti
test
in
into
and
mov
mov
mov
jmp
adc
fisubs
iret
and
add
xor
or
fldt
push
imul
cmpsl
lret
xor
dec
decl
jecxz
mov
out
ficoml
decl
fsubs
adc
roll
mov
es
mov
test
push
bound
jbe
pop
clc
sub
arpl
mov
add
lock
dec
mov
pop
addr16
jae
xchg
bound
and
fwait
mov
inc
into
and
ss
cwtl
sbb
mov
dec
das
inc
inc
idivb
push
jp
outsb
add
pop
lea
push
pop
push
call
mov
push
inc
testl
gs
out
jbe
push
mov
mov
rorl
add
sbb
inc
ds
cs
sub
mov
inc
out
xchg
sbb
adc
and
cmp
outsl
stos
int
sub
aad
mov
out
int
iret
enter
sbb
push
rcl
add
cmp
xchg
mov
sub
mov
orl
ret
adc
in
das
leave
sbb
and
lods
divl
cli
cwtl
mov
xlat
dec
or
fs
pop
ljmp
ja
xchg
add
jb
jmp
dec
sahf
testl
incb
gs
or
mov
orl
test
in
out
mov
loopne
add
xchg
outsl
ljmp
xchg
movsl
cmp
gs
in
jae
lret
ret
add
fsubrs
aam
xchg
or
imull
cmp
mov
jno
cmpsl
sbb
jle
pop
sub
xlat
mov
pop
push
or
movsb
push
jns
out
lret
inc
jns
jmp
and
add
sub
or
lcall
pop
fcoml
pop
push
jnp
pop
xchg
dec
mov
or
xor
clc
sbb
dec
mov
xor
stos
std
xor
or
dec
sbb
xor
popa
cmpsl
or
js
aad
inc
aas
mov
cld
mov
dec
sub
push
mov
into
fucom
nop
or
sub
test
ljmp
outsl
jg
dec
outsb
data16
gs
mov
sbb
jl
xor
into
add
stc
inc
int
out
mov
loope,pt
push
lret
cmp
cmpsl
mov
mov
testb
in
int
dec
es
aas
push
jo
add
pop
arpl
callw
adc
cmp
ficomps
and
and
xchg
pop
lods
notb
and
inc
cmpsb
test
push
sti
pop
nop
dec
test
popa
push
movsl
cmp
jbe
cmp
mov
push
clc
xor
mov
add
pop
aas
jnp
pop
fnstenv
std
ljmp
jb
mov
push
pop
push
push
repnz
call
push
mov
add
push
mov
rorl
imul
mov
add
sbb
sbb
pop
push
jge
mov
inc
in
sub
add
inc
lret
jno
add
jmp
popf
ja
xchg
cmpsl
cltd
aam
jne
cs
push
xor
jl
inc
add
leave
dec
gs
jo
sbb
cld
das
mov
mull
push
imul
pop
daa
leave
fildll
fcom
inc
sahf
jg
or
xchg
jo
xor
mov
push
or
or
cmpsl
ljmp
fwait
gs
jl
xor
xchg
adc
mov
xchg
imul
bound
or
mov
lock
int
or
add
into
int
push
add
xor
jg
jne
push
stc
lea
add
mov
jbe
cmp
fwait
adc
les
das
std
add
subb
popa
xor
push
mov
fmull
and
inc
mov
dec
mov
xlat
jae
shrb
jmp
test
sub
arpl
or
sbb
gs
mov
adc
lds
imul
jmp
sbbl
adc
int3
mov
fidivl
pop
dec
pop
insl
stos
fistps
sub
push
shl
pushf
mov
mov
jle
mov
inc
and
jle
and
test
les
sub
jg
mov
ss
cmp
inc
call
jge
mov
inc
std
jae
xor
push
int3
ja
roll
mov
aaa
aas
inc
sub
cmp
add
mov
sbb
fidivrs
dec
push
cmp
xchg
outsb
sbb
addb
mov
fwait
lea
test
movsl
fs
lret
sti
add
cmp
lret
push
mov
mov
sti
fisubrl
cwtl
cmpl
scas
mov
add
jmp
sub
xchg
sbb
fcompl
mov
or
mov
mov
mov
adc
addr16
xor
jl
xor
push
push
push
lods
cmpsl
jecxz
xor
cltd
pop
jl
inc
pop
mov
or
out
jne
sbb
mov
into
fldenv
in
jbe
inc
ret
mov
in
mov
and
test
in
push
dec
mov
pushf
popf
mov
jns
mov
outsl
jmp
push
jmp
xchg
cltd
std
mov
inc
mov
insb
sahf
insb
hlt
mov
icebp
pop
gs
js
cs
arpl
shll
xchg
ss
cmp
jnp
in
sbb
dec
add
jmp
adc
jno
rcll
sbb
add
jecxz
lret
mov
jg
sub
mov
lods
sub
data16
dec
cli
call
rorl
imul
shrb
insl
xchg
push
pop
out
mov
mov
fidivl
sahf
mov
xchg
ret
inc
xchg
mov
lcall
in
jae
jl
mov
mov
mov
lretw
cmp
inc
shl
cltd
or
cmp
dec
daa
ljmp
addr16
pop
sbb
in
repnz
cmp
sub
jle
cmp
fdiv
adc
data16
xlat
pop
xchg
jecxz
flds
dec
fcoml
jne
jecxz
push
mov
inc
cld
push
cmp
movsl
lcall
rorl
inc
or
dec
and
push
addr16
stc
adc
daa
and
fwait
mov
xchg
bound
jbe
sub
or
ss
xlat
mov
or
add
jo
leave
lret
cmpsb
daa
push
lcall
out
and
pop
shlb
jecxz
and
cli
jmp
jns
push
push
sub
jmp
or
mov
sbb
push
adc
in
rorb
cmp
or
das
test
xchg
sbb
xor
inc
out
mov
add
cmp
xchg
ja
in
std
int
lcall
jl
mov
push
adc
in
test
inc
pusha
and
dec
mov
jnp
insb
sub
jne
pop
bound
cltd
inc
test
aas
dec
adc
in
pop
pushf
repz
lds
xchg
mov
jl
and
jecxz
push
sbb
jb
outsl
sar
bound
aad
out
in
add
cmpb
js
pop
lods
push
mov
test
cmp
mov
loopne
lcall
xor
nop
push
adc
adc
and
cmpl
lods
outsl
push
lret
xor
insb
loopne
outsb
sub
xchg
mov
imul
sti
push
add
push
mov
aas
das
subl
pop
addr16
int3
cs
jno
dec
fstps
sahf
ljmp
jp
xchg
pop
and
jo
dec
daa
and
lcall
cmp
dec
das
xor
lock
movsb
mov
fs
lea
jle
rol
mov
mov
adc
aas
out
mov
jo
jbe
xor
cmc
sbb
lea
and
repz
shl
sarb
add
dec
sahf
mov
mov
cmpsl
dec
inc
shlb
data16
pop
nop
jge
add
pop
test
iret
jmp
sub
clc
aad
cmp
mov
lcall
xchg
push
cmp
arpl
adc
insb
lock
cli
test
inc
int
pop
std
pop
in
data16
stos
jl
lahf
ja
test
or
cmpsl
lds
out
jo
out
jne
mov
clc
aam
adc
jne
adc
push
int3
lret
pop
js
sub
pop
and
sbb
jmp
divl
jbe
mov
outsl
addr16
mov
pop
lcall
and
shrl
shlb
sti
xor
insb
mov
sub
int3
sub
xor
popf
xor
les
mulb
dec
push
je
push
dec
cld
xchg
test
pushf
arpl
xor
mov
add
lock
test
and
rol
sbb
xor
shr
push
call
das
imul
repz
jecxz
insl
enter
unpckhps
jge
mov
adc
and
fildl
mov
jae
cmp
and
leave
pushf
and
bound
and
movsb
mov
dec
xchg
ret
jmp
add
add
or
call
add
call
mov
lods
adc
jmp
xor
mov
ret
jmp
enter
mov
mov
push
add
fmulp
adc
repnz
jne
test
hlt
cwtl
dec
nop
popf
lcall
xchg
hlt
mov
nop
jb
aas
adc
mov
jp
addb
cmova
inc
clc
hlt
pop
jne
push
jbe
push
cmp
add
lods
add
mov
jmp
popf
xchg
sbb
les
xchg
int
push
movsl
sti
mov
cmpsl
jl
stos
fidivl
and
fmul
adcl
cmpsl
adc
add
push
pop
push
lcall
cmp
mov
fnstsw
fwait
movsl
dec
mov
adc
subb
rdtsc
push
mov
jo
add
shrb
loop
mov
or
ret
push
xchg
mov
pop
rclb
stos
push
sbb
ret
dec
sub
mov
mov
mov
stos
popf
push
mov
push
outsl
adc
stc
scas
je
pop
push
sarb
mov
pop
mov
push
movsb
cli
test
inc
nop
push
mov
pop
xor
mov
lock
das
sbb
rol
pusha
push
cmpsl
push
call
cli
in
mov
jge
call
mov
mov
jne
pop
pop
push
iret
out
in
xor
shlb
mov
rcrl
xor
add
inc
push
mov
xchg
xchg
and
jecxz
xchg
mov
stc
call
cwtl
pop
aaa
jo
jnp
stos
jge
sub
outsb
das
dec
push
pop
leave
mov
xchg
in
pop
dec
inc
cmpsl
dec
es
inc
dec
mov
mov
xor
in
adc
mov
or
mov
jmp
add
pop
jg
call
xlat
addr16
out
mov
add
and
push
mov
push
ss
sti
icebp
add
rcll
in
pop
jo
dec
mov
mov
pop
pushf
push
cwtl
dec
lret
and
ret
mov
int
dec
pop
push
mov
cwtl
xor
pop
and
ficomps
mov
dec
push
inc
loope
sbb
mov
push
pop
jb
or
in
push
lock
mov
xchg
jbe
pop
sbb
jnp
aad
jmp
pop
mov
das
jno
and
add
popf
mov
inc
sbb
mov
pop
ljmp
cmp
cmp
cwtl
push
mov
xor
rcrl
cmp
lods
jg
repz
dec
lea
or
mov
cld
scas
push
mov
iret
push
and
mov
mov
sbb
jmp
or
test
push
clc
dec
mov
mov
lcall
arpl
aad
rcrb
ret
add
stos
mov
pop
dec
test
movsb
fnsave
add
or
lcall
sbb
pop
adc
insb
inc
mov
jge
cmp
jo
adcb
aaa
sbb
xchg
popa
or
enter
fnsave
pop
mov
lods
adc
pop
push
add
scas
push
cmp
dec
test
out
fnstenv
mov
in
lock
iret
inc
sub
test
stc
stos
cmpsb
push
and
mov
mov
loope
cli
movsl
into
pop
jae
mov
fisubrs
xor
ss
sub
and
in
push
mov
and
fcompl
lds
xchg
mov
add
or
mov
jb
xor
mov
lds
dec
leave
push
enter
mov
mov
jb
pop
and
inc
inc
mov
adc
sahf
ljmp
xor
xor
add
mov
jbe
ret
icebp
sub
cmp
xlat
pusha
and
push
pushf
test
inc
or
outsl
xor
cmp
popf
sahf
mov
add
std
je
testl
mov
sbb
subb
jp
fs
mov
bound
xchg
cs
jnp
lahf
repnz
mov
hlt
int
mov
cmc
outsb
push
addr16
jecxz
arpl
dec
in
xor
push
fbstp
pusha
mov
fwait
jp
cmp
out
sahf
enter
sub
sti
sbb
cld
ja
sahf
pop
push
insb
mov
ljmp
sbb
xchg
jle
push
add
sar
je
addr16
loopne
sub
mov
les
scas
jge
movsb
add
hlt
test
dec
xchg
and
xchg
jnp
outsb
lcall
out
mov
pop
cli
fdivrl
in
pop
scas
or
repnz
aad
or
std
in
mov
out
fdivl
aaa
xchg
xorb
pop
std
and
fidivrs
fs
pop
push
test
in
push
ret
jne
loope
sub
aam
cmp
ja
lahf
lds
and
push
shrl
stc
jp
jge
sub
mov
jns
and
mov
xor
out
jne
mov
sub
popw
push
cltd
pop
jge
dec
dec
mov
repz
xchg
fsubrl
xor
xchg
out
rcr
ret
outsb
subps
sti
jmp
imul
test
push
es
mov
lret
pop
outsl
and
sub
std
inc
jnp
pop
das
mov
xchg
fidivl
jbe
jne
inc
push
push
daa
or
dec
movsl
gs
inc
enter
adc
xor
jno
inc
movsb
add
adc
pop
vzeroupper
outsb
loop
scas
push
xorb
xor
push
lock
jmp
dec
mov
mov
mov
mov
pop
scas
imul
movsl
vmovdqu
das
adc
dec
mulb
cmpsl
out
jmp
mov
repz
xor
dec
fs
loope
out
lods
sub
out
ret
test
outsb
jb
cmp
adc
push
lock
xorl
imul
mov
mov
leave
popa
jo
mov
frstor
bound
fs
sbb
adcl
cmp
and
pop
ret
mov
outsl
and
movsb
insb
arpl
aaa
or
into
inc
pop
pop
pop
cli
mov
out
push
and
jo
or
shll
aas
test
mov
shr
pop
testb
xor
cmp
xor
inc
jne
xchg
and
fistps
fmuls
xor
insl
mov
push
xor
mov
add
cmpsb
or
pop
inc
stos
mov
cs
sarl
jl
and
fwait
cmp
adc
push
daa
stos
jecxz
adc
gs
mov
sbb
mov
shl
push
mov
xchg
dec
in
jne
in
mov
lahf
and
cwtl
fs
fldl
jo
nopl
and
push
sub
xor
stos
mov
xor
lret
sub
mov
mov
cld
xchg
mov
xchg
dec
into
inc
cltd
and
fnsave
dec
ljmp
std
js
push
or
andb
cwtl
xchg
inc
repnz
jmp
dec
add
pop
fldcw
repnz
sbb
mov
xorb
push
inc
pop
adc
push
fninit
push
dec
mov
mov
clc
les
test
mov
push
call
lea
cld
xor
push
popf
movsl
dec
mov
fldenv
ret
std
stos
pop
test
dec
push
sbb
push
dec
lds
xchg
or
stc
jns
mov
nop
push
aam
and
mov
stc
cs
mov
push
dec
repz
mov
gs
cmpb
loop
and
jae
cmp
sub
jb
iret
ds
xchg
outsb
lods
insl
and
adc
js
push
dec
stc
xchg
or
jo
inc
xchg
divl
mov
loopne
lret
cmpsl
jns
jo
push
mov
inc
fs
pop
sti
lock
pop
sub
sbbb
into
sub
push
xchg
jns
mov
push
repz
inc
sbb
sub
shrl
test
ja
xchg
in
jbe
inc
mov
lods
adc
jae
inc
pushf
jl
jns
jbe
cmp
sub
ret
int3
test
ret
test
stc
hlt
loope
fldl
jg
mov
movsl
inc
mov
sub
sub
sbb
ds
scas
pop
hlt
push
mov
xor
fistl
lret
push
icebp
cwtl
mov
and
mov
outsb
add
xor
and
and
mov
inc
mov
sahf
ljmp
rorb
fildll
inc
lret
das
dec
cs
cmp
mov
loopne
repz
mov
sub
dec
inc
je
xchg
xchg
push
sub
xchg
shl
dec
insb
jl
aas
or
sarl
stc
stos
mov
pop
push
mov
mov
cwtl
and
mov
into
sbb
imul
imul
rolb
xlat
xchg
inc
popf
dec
pop
loope
mov
pop
mov
pushf
out
mov
fldenv
add
movsb
sub
fsub
loopne
xor
push
lret
mov
pushf
pop
pop
ret
jle
in
cmpl
and
push
ljmp
sbb
mov
inc
aas
jno
cmp
jle
sub
pop
cmp
fsubs
mov
inc
frstor
cli
and
sbbb
enter
sbb
push
push
and
icebp
faddp
sub
outsl
add
lods
fwait
mov
and
sbb
roll
idivl
call
aaa
dec
fcoml
dec
sub
dec
into
xor
das
out
stos
mov
daa
push
test
sub
fisubrs
inc
inc
pushf
clc
push
dec
adc
scas
sbb
gs
push
fadd
mov
mov
movsl
stc
sub
jle
sti
out
sub
push
daa
sub
mov
xchg
adc
and
jb
icebp
stos
in
pusha
dec
cmpsb
push
mov
lods
cli
xchg
jnp
dec
xchg
xchg
scas
cmpl
add
sahf
add
mov
sti
inc
insl
and
pop
xor
dec
push
mov
mov
jns
adc
xchg
dec
push
xchg
popf
addl
dec
mov
xchg
fwait
sbb
adc
stos
sub
jp
imulb
movsb
jle
lahf
rcll
jnp
mov
jl
out
cmc
mov
mov
lcall
movsb
add
sahf
and
dec
lret
inc
mov
or
jno
xor
mov
call
int
test
mov
loopne
fwait
addr16
shrb
leave
in
or
loopne
cwtl
aas
rolb
mov
sbb
addb
es
cli
outsl
fnstsw
xchg
or
jecxz
and
fadd
add
mov
mull
lcall
shl
xchg
push
fistl
fcmovb
movsb
inc
out
mov
jnp
call
idivl
daa
popl
push
lods
sahf
push
xor
test
test
std
sub
vpmacswd
pop
lahf
adc
mov
mov
push
icebp
dec
xor
adc
aam
lea
out
outsl
mov
xor
pop
or
xchg
pop
pop
bound
adc
cltd
mov
js
inc
push
in
inc
xor
mov
gs
pop
sub
adc
and
test
mov
ret
ret
lds
call
mov
fwait
dec
inc
xchg
loopne
test
xchg
std
jp
inc
mov
push
push
sub
sbb
ret
andl
test
int3
ds
mov
inc
jo
xchg
idivb
outsl
lret
into
in
mov
dec
nop
sbbb
xor
mov
fldcw
xor
in
jl
add
lret
loope
push
daa
jp
sbb
push
gs
inc
addr16
and
push
and
test
jge
cmp
hlt
jp
dec
pop
stos
mov
add
jecxz
lahf
lods
jb
dec
inc
jp
cltd
imul
push
mov
insl
xchg
pop
adc
cmc
js
cltd
add
jo
or
ljmp
les
push
dec
addl
gs
mov
jnp
into
pop
fiadds
stos
ret
push
add
mov
flds
stos
mov
outsl
pop
xchg
mov
int
dec
xor
mov
mov
sbb
insl
pop
sub
or
xor
repnz
push
iret
notl
cmp
ficoms
gs
out
pusha
in
addr16
aas
add
adcl
into
sub
mov
mov
push
sub
bnd
jecxz
sub
add
dec
clc
mov
ss
jb
or
and
xchg
out
js
sub
sub
fiaddl
mov
xor
repnz
or
pop
fimull
imulb
or
mov
push
jmp
aas
pop
sbb
xchg
sbb
mov
add
aam
sub
and
lret
int
xchg
out
fmul
mov
jo
fildl
mov
inc
sbb
push
adc
ds
add
inc
push
stos
out
sbb
jnp
inc
and
lods
inc
fiadds
jae
add
enter
mov
dec
xlat
ds
jg
jecxz
sub
leave
pop
cld
jp
shlb
cmp
loop
jmp
mov
jnp
pop
in
mov
rcr
cmp
mov
ja
xchg
or
out
adc
dec
daa
je
cmp
adcb
cmovg
lock
pop
lahf
dec
stos
in
aaa
test
xchg
pop
imul
popf
ljmp
mov
or
fnstcw
rorb
sub
scas
movsl
dec
pushf
push
into
pop
ret
aaa
mov
aaa
sbb
mov
std
mov
xor
cmpsb
bound
shlb
lahf
enter
mov
inc
push
lahf
aam
sub
test
and
shr
pop
xchg
mov
rcrb
enter
rcr
jo
dec
mov
fsub
cld
cld
testl
notl
ret
mov
add
add
push
dec
das
push
ret
jo
dec
mov
fistl
fs
pop
sub
xchg
pop
jecxz
and
gs
rorb
jb
lods
adc
rcrb
bound
aaa
jecxz
push
mov
mov
cwtl
pop
outsb
pop
ret
sbb
outsb
jmp
mov
stos
xchg
push
pusha
pop
imul
push
mov
pop
push
adc
dec
push
jns
pop
scas
dec
xor
inc
inc
jns
outsl
add
pop
sbb
adc
sub
inc
jmp
and
xor
cmp
repnz
lock
outsb
xor
movsb
fsub
jns
addb
cmpb
sbb
fsubl
jno
mov
ret
or
icebp
pushf
fsubl
data16
cwtl
es
pop
addr16
or
add
lcall
cmc
jg
cmp
scas
lret
mov
dec
jno
adc
int
jne
mov
in
adc
push
mov
mov
pop
punpcklwd
aaa
xor
and
sbb
data16
jne
xchg
inc
dec
enter
xchg
mov
popa
push
adc
xchg
mov
mov
fisttps
push
fsts
int3
pop
lretw
push
push
out
cld
lock
arpl
xlat
sahf
inc
jge
das
lretw
out
scas
in
ret
inc
dec
pop
push
sbb
cmpb
mov
in
lret
in
cmpsl
dec
imul
mov
mov
mov
scas
pop
js
dec
cmp
ret
add
sarl
jae
xor
mov
scas
movsb
loop
cltd
push
dec
mov
cmp
call
mov
insl
lods
add
sub
fs
sahf
push
push
sbb
cwtl
mov
orl
pushf
dec
push
fs
les
jecxz
inc
inc
mov
pushf
roll
aaa
pop
stc
xor
push
mov
push
movsl
xchg
mov
xchg
jbe
xor
cmp
rolb
arpl
inc
aam
mov
ja
out
xchg
adc
mov
leave
push
shll
cmp
movsl
xlat
add
add
pushf
sub
mov
ret
sbb
cmp
mov
add
mov
push
mov
dec
in
mov
repnz
pop
mov
fs
aas
mov
inc
inc
xor
mov
ficomps
sbb
cmp
sub
jecxz
jg
dec
sbb
js
int
loop
insb
nop
mov
jle
jns
push
xlat
in
cmp
mov
les
ret
dec
ja
add
mov
lahf
cmp
inc
cld
ret
push
lahf
push
jg
push
inc
add
push
xchg
sarb
jbe
das
mov
push
test
negl
mov
mov
out
sub
out
xchg
jae
jb
scas
call
or
sub
mov
mov
shlb
cmpsl
mov
push
in
sbb
inc
adc
pop
bound
insl
sbb
mov
inc
cmpl
xor
fdivs
cmp
sbb
pop
loopne
js
sub
jmp
cmp
insl
xor
ja
stc
xor
dec
mov
or
les
add
inc
aaa
pop
out
mov
cmp
sbb
adc
loope
pop
and
les
arpl
lods
clc
pop
repz
dec
dec
lea
xchg
lds
jmp
orl
aad
xor
popf
popf
cmp
pop
mov
mov
in
cmp
cltd
push
inc
das
or
inc
aam
sbbb
xchg
scas
push
outsb
or
cmpsl
cmpsb
sahf
xchg
pop
pushf
pop
lea
loopne
xchg
shll
sub
jne
inc
jns
mov
icebp
mov
lock
rcl
dec
or
lcall
jae
mov
andb
popa
in
xor
push
add
cmp
dec
or
or
enter
mov
insb
inc
roll
rcrl
jp
ja
mov
mov
fcmovbe
cmpsl
test
flds
xor
pop
jae
es
out
xchg
inc
and
push
inc
sbb
and
inc
inc
jnp
jmp
add
push
test
stc
out
pop
push
jo
int3
aaa
test
loopne
lock
sarl
addr16
aad
pop
addb
orl
movsb
popa
cmp
dec
popf
inc
jmp
jne
aaa
jle
hlt
das
sub
ss
pusha
fdivr
jecxz
cmp
add
mov
outsl
cli
sub
imul
pop
mov
adc
jecxz
ja
pop
lret
pushl
xor
push
inc
stos
iret
fisubrs
jl
lahf
gs
lods
jge
call
jmp
and
cwtl
scas
rcrl
fucom
cli
mov
jl
inc
adc
inc
push
mov
cmp
fiadds
lret
and
jge
jae
repnz
nop
addr16
lahf
ja
cmp
idivb
adc
jbe,pn
mov
mov
iret
std
inc
push
pop
push
clc
xlat
cs
mov
pop
mov
adc
push
adc
dec
addl
in
inc
fdivs
sub
cmp
clc
adc
rclb
adc
in
shr
lret
nop
and
xchg
cmp
inc
dec
adc
xchg
xchg
mov
mov
aaa
in
aam
shlb
in
jnp
pushf
mov
push
into
out
cld
sbb
stos
mov
inc
js
pusha
xor
test
dec
lea
mov
mov
mov
inc
jae
cmp
mov
stos
lods
frstor
pop
add
test
or
xor
mov
pop
fmuls
push
xchg
sti
pop
insl
sbb
jno
popf
pop
or
mov
adc
mov
test
mov
in
aas
mov
in
pop
or
xor
inc
push
inc
push
mov
inc
cmpsl
roll
cs
jge
repnz
das
fstl
xor
test
and
mov
rclb
pop
lahf
mov
out
pop
test
xchg
add
in
fbld
mov
insl
jo
and
out
aaa
xchg
pop
add
mov
out
pusha
outsb
shlb
cmp
mov
out
ljmp
ja
popl
movsb
xchg
and
roll
das
pop
aaa
andl
rcrl
sub
cld
les
in
inc
decl
add
add
test
push
add
xor
int3
out
loop
pop
cmp
add
jg
sarl
pushf
lea
fsubp
or
inc
pop
lcall
imul
xor
fs
pushf
push
imul
jnp
mov
jl
xor
lahf
push
mov
ljmp
inc
js
cwtl
cmp
clc
add
movsb
jecxz
xchg
out
mov
insb
dec
mov
xchg
insl
repnz
fcmovnb
pop
std
outsl
movsl
aaa
fmull
imul
sub
mov
xchg
fs
scas
popa
rcrb
cld
fs
and
push
mov
jnp
dec
imul
adc
add
ss
jno
xor
in
sbb
not
mov
ds
popa
out
mov
sbb
jmp
jge
pop
bound
lods
frstor
cmp
pop
es
and
jnp
and
ficoml
sub
or
sub
rol
or
test
xor
rclb
jp
lods
mov
jecxz
pop
xchg
xor
xor
cmp
xchg
cltd
push
push
iret
fbstp
xor
popa
sbb
int
mov
sub
arpl
push
repz
int
xchg
xchg
mov
rclb
and
sub
hlt
add
lea
inc
fimull
mov
mov
jnp
stos
fprem1
xchg
jge
pushf
ficomps
sbb
rcrl
push
in
or
push
mov
mov
push
add
mov
cmp
test
into
int3
sub
test
jmp
movsb
out
mov
mov
inc
arpl
and
mov
outsl
fiadds
jl
out
jb
mov
sub
mov
xchg
xor
or
popa
fists
pop
js
ja
je
push
mov
addr16
and
push
push
bound
jge
fnstenv
xadd
push
jno
call
xchg
inc
shlb
loopne
cmp
inc
sbb
enter
fcmovbe
fcmovnbe
gs
stos
mov
add
cmp
repnz
cmp
ficoms
fistpll
pop
or
and
sbb
fisubrs
popa
mov
xor
xor
sahf
cld
mov
mov
leave
fs
icebp
repnz
lahf
cs
dec
and
and
push
fwait
mov
ja
sbb
pop
std
xchg
sbb
jge
and
or
addr16
sahf
in
lret
inc
pop
sti
sub
pop
push
sub
adc
lods
mov
daa
xorb
add
ret
lret
stos
xchg
jle
xchg
or
add
mov
inc
push
cld
fmuls
adc
outsb
jp
mov
enter
inc
xchg
adcb
les
push
jnp
cmc
stos
in
adc
sbb
lods
cli
fistl
pop
dec
mov
xlat
sbbb
jge
cmp
fxch
repnz
lods
pop
dec
xor
pushf
jge
jbe
inc
bound
aas
mov
lods
out
sub
add
adc
push
push
lock
push
cmpsb
mov
arpl
sub
xchg
xor
pop
jecxz
movsb
div
aam
sub
rcr
cwtl
mov
gs
les
bound
mov
inc
xor
lea
sub
inc
jns
in
jl
in
add
arpl
xor
adc
inc
adc
mov
call
dec
adc
icebp
mov
sbb
sub
dec
jle
xchg
mov
and
inc
std
mov
jge
jb
cld
cmp
fs
ret
in
sahf
test
sbbb
pop
mov
xorb
pop
adc
push
fbstp
xchg
xor
sbb
xchg
gs
push
ljmp
jg
mov
hlt
cld
or
cmp
and
inc
pushf
dec
cmp
xlat
out
jb
aas
xor
inc
enter
out
in
mov
cwtl
jp
popa
and
jne
inc
add
movsb
out
xor
mov
dec
int
movsb
mov
xlat
inc
jbe
loop
sub
or
inc
rorb
add
or
dec
rorb
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
