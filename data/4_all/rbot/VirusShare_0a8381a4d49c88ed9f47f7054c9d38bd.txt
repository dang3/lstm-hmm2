push
call
mov
add
jmp
or
jle
xor
add
mov
in
mov
fidivrl
dec
jmp
mov
cmp
xchg
mov
pop
cmpsb
ret
aad
fsts
push
in
imul
push
cmp
mov
cmp
bound
call
in
insl
jbe
push
mov
cmpsb
fwait
add
cmp
inc
jmp
sub
sub
sbb
sub
cmp
je
mov
das
add
fwait
push
pushl
dec
mov
ss
rorl
std
mov
and
rcrb
cwtl
ret
lods
dec
push
mov
mov
stc
dec
fisttpll
and
add
fwait
test
pop
or
mov
cmp
faddl
in
or
and
jge
jecxz
ja
cmc
fwait
sub
xor
inc
sub
mov
jnp
sub
cmp
push
std
out
stc
xor
ret
aad
es
sbb
sub
stc
jmp
in
shrl
and
stc
in
fstp
ds
ret
sub
stc
loope
fdivl
popa
in
repnz
ret
stc
in
fdivl
jg
sub
sub
stc
fldenv
fucomp
fisubs
sub
cmp
mov
shll
and
aad
enter
cmp
aas
add
in
leave
mov
sbb
cmp
aas
add
in
int
enter
xor
aaa
or
adc
in
mov
test
js
imul
repz
insb
decl
mov
stc
xor
scas
hlt
sti
or
jns
mov
lods
mov
sbb
xchg
shlb
mov
xchg
test
jle
stc
mov
fldt
dec
gs
mov
add
mov
icebp
mov
int
fsubrl
mov
ljmp
call
jge
jae
bound
aad
pop
push
iret
xor
ds
ljmp
sub
inc
jg
in
js
inc
cmp
rorb
mov
mov
out
cmp
mov
jb
mov
dec
inc
sbb
stc
stos
mov
cmp
mov
sub
dec
iret
and
sbb
scas
insb
hlt
cld
out
into
xchg
pop
lahf
iret
mov
adc
test
shlb
mov
add
pop
dec
incb
gs
cmp
movb
jl
test
cli
sarl
sbb
in
pusha
mov
popl
or
icebp
sahf
xor
out
addl
ret
and
ret
outsb
shrl
and
out
ret
dec
in
and
adcl
or
push
test
das
ja
pushf
cmp
out
in
jecxz
jecxz
mov
stc
cld
jne
push
rcr
fbld
pop
push
aad
mov
mov
add
test
sub
rolb
in
push
lahf
out
rol
fsubrl
les
popa
adc
test
test
jbe
jg
mov
out
shrb
adc
fsubs
rep
xchg
jo
lcall
adc
not
sarb
out
and
enter
sbb
mov
out
jno
outsb
lahf
dec
cmpsl
fadds
xorl
flds
call
rcr
subl
pushf
inc
xor
or
jge
in
xor
mov
xor
and
mov
adc
imul
push
dec
jp
mov
iret
jns
mov
pop
jmp
es
mov
jnp
xlat
popf
jg
mov
pop
dec
fsubrl
sbb
outsl
lcall
call
mov
sub
inc
in
mov
setl
xor
adc
cmpl
cmc
xor
lahf
sub
push
mov
out
or
push
xchg
inc
mov
mov
shlb
clc
cmp
push
sbb
xchg
jae
and
lcall
gs
fucomi
icebp
iret
jae
shll
enter
cmpsb
push
adc
cmp
jg
out
xor
std
cmc
shll
cmp
stc
das
pop
adc
adc
out
insl
stc
insl
ret
jg
test
xchg
in
in
aaa
std
lock
inc
clc
mov
call
in
or
jne
arpl
or
mov
fs
popa
mov
pop
aad
and
mov
test
mov
inc
fistps
and
add
or
aam
sub
push
popa
xor
mov
enter
adc
gs
aas
std
iret
xchg
add
jg
push
mov
mov
jl
cmp
mov
lock
add
mov
xchg
fcomp
out
test
mov
in
jns
jns
icebp
or
in
xchg
fsubs
jmp
dec
popa
cld
lds
iret
lret
xor
lret
stos
stc
sbb
repz
mov
out
sub
and
xor
inc
clc
stc
iret
mov
mov
in
mov
xorl
mov
pop
loop
call
out
jge
mov
std
mov
std
std
imul
inc
mov
fistl
lds
push
cmp
fcoml
jmp
mov
sarb
inc
out
push
lock
inc
mov
dec
pop
or
pop
and
jns
sub
add
add
test
fcmovnbe
mov
into
push
rcll
aam
js
jge
xchg
mov
shll
lods
popa
or
jne
mov
mov
xor
pop
sbb
icebp
cwtl
mov
push
ror
xchg
aad
and
mov
and
out
adc
fwait
stc
jo
ss
es
jns
or
fsubl
xchg
fucomp
mov
mov
stc
jae
inc
adc
jge
movl
outsl
js
out
pop
mov
push
adc
or
cmp
hlt
dec
aaa
js
frstor
je
lret
push
in
mov
pusha
dec
notl
push
negl
imull
clc
jb
lods
xchg
mov
lret
adc
add
icebp
add
sbb
cld
add
in
in
std
xor
pop
aad
in
push
es
pop
jmp
jae
shlb
cmp
xor
dec
outsl
jge
in
jge
mov
push
test
shrb
xor
sub
ja,pn
pusha
jge
xor
and
pop
or
pcmpgtw
mov
xchg
loop
push
ljmp
hlt
fnstenv
dec
int
shrb
xor
fmul
adc
cmp
arpl
inc
test
pshufw
ss
cld
push
push
or
or
in
lds
int
dec
sub
pop
jmp
in
ss
or
or
inc
stos
pop
in
fpatan
test
in
jns
popa
dec
jns
jge
insl
fmull
lea
jecxz
les
lcall
jmp
out
std
inc
mov
lock
in
cwtl
and
fsubl
stc
jmp
in
and
jle
pop
jbe
clc
enter
push
das
and
jecxz
aam
lret
cmp
push
adc
les
loop
stc
pop
cmp
imul
fmul
mov
mov
push
mov
cmpsl
in
xchg
ja
lods
outsl
js
mov
dec
clc
adc
js
in
pop
gs
dec
cltd
mov
popf
push
shlb
inc
cmc
sub
push
mov
inc
add
inc
sub
cwtl
and
sbb
add
add
xor
dec
ss
lock
js
js
out
jecxz
mov
loope
mov
jecxz
sbb
cwtl
sbb
xor
cwtl
xchg
lahf
inc
mov
pop
fldl
pop
xchg
sti
data16
cmovnp
stc
lcall
push
test
in
ds
scas
in
iret
cmpl
mov
mov
dec
cwtl
arpl
sbb
push
daa
stc
dec
stc
sbbl
stos
loope
cmp
daa
jmp
cmc
int
in
adc
fldl
xor
vpaddusw
int
popa
add
lock
lahf
and
push
pop
test
mov
or
outsl
xor
lods
sub
pop
jmp
xor
push
sbb
mov
fld
push
fcomp
imul
bound
in
fiaddl
rclb
jno
addr16
cmp
ds
or
dec
test
into
mov
sbb
in
push
enter
push
aam
addr16
sbbb
push
mov
rolb
add
cmc
aaa
jbe
jecxz
aam
push
test
out
in
inc
jecxz
mov
roll
lret
mov
ss
add
or
mov
xor
arpl
sub
shr
clc
xchg
add
clc
jle
in
test
and
clc
cmpsl
out
popf
dec
and
xor
pop
or
popa
jg
push
insb
test
xor
inc
dec
lret
mov
pop
sbb
ret
cmp
sub
adc
cwtl
fs
jmp
decl
mov
inc
mov
cmpsl
mov
rolb
xor
mov
popf
mov
insb
mov
negl
dec
in
adc
mov
in
or
rolb
lods
pusha
movsl
test
sti
pushf
jp
inc
jg
push
mov
mov
xor
lods
popf
push
dec
add
cmc
call
gs
lahf
js
inc
int3
scas
mov
xchg
sbb
daa
cld
pop
das
mov
inc
lea
repnz
fcmove
mov
sti
shrl
pop
xor
enter
outsl
sbb
gs
sbb
ficomps
lds
shlb
call
and
xor
cli
lret
pop
add
or
les
in
sbb
dec
or
scas
dec
sub
mov
ret
out
sbb
mov
test
add
add
push
jmp
mov
sub
dec
insl
mov
xor
repnz
jno
push
pop
into
and
das
jg
popa
sbbb
pop
mov
in
pop
gs
mov
dec
ret
ja
mov
mov
out
push
mov
adc
lret
int
in
popf
sub
jg
dec
into
daa
mov
fimull
pop
xchg
sbb
lahf
jmp
imul
pushf
iret
inc
das
inc
mov
out
stos
orl
xlat
scas
xchg
enter
divl
mov
nop
stos
jnp
adc
dec
popl
test
and
imul
ljmp
inc
shrl
push
jle
das
dec
xchg
popf
dec
test
jmp
aaa
jno
mov
loopne
mov
pop
xchg
rcll
mov
mulb
or
mov
jbe
mov
push
mov
jo
mov
int3
leave
stc
aam
pop
leave
mov
or
int3
xlat
jle
cltd
rclb
push
sbb
cmp
jmp
rorb
loope
movsb
aas
mov
lods
std
ret
jge
neg
test
in
insl
movsl
shlb
in
out
add
pop
out
mov
icebp
xchg
pushf
jl
mov
sti
jg
int
xor
divl
mov
jmp
jmp
xor
fsubl
test
leave
in
dec
fldt
lret
int
pop
std
fbld
mull
fstpl
fiadds
jnp
mov
daa
mov
dec
mov
lock
mov
pop
cmp
jae
adc
push
in
push
imul
pop
dec
mov
pop
mov
orl
rcl
movsb
mov
lds
mov
lea
xchg
lahf
and
push
int3
repz
lahf
lds
cmp
jae
xchg
call
pop
repnz
fdiv
dec
loopne
fs
cmpl
mov
jle
test
mov
stc
cmp
jbe
out
das
mov
pop
mov
push
jl
mov
jae
das
ret
dec
stc
sbb
mov
push
pop
outsl
sbb
xchg
sub
mov
xor
aaa
movb
outsb
insb
inc
cwtl
in
cmpsl
jmp
jge
xor
into
ficompl
jnp
outsl
je
jmp
inc
int3
mov
mov
int
jb
lock
std
rorl
pusha
leave
loope
pop
popf
movsb
lahf
test
adc
sub
mov
and
pop
inc
cli
icebp
jmp
inc
mov
and
scas
movsl
xchg
in
push
arpl
hlt
jmp
push
pop
sbb
xor
out
dec
mov
jno
and
stc
das
jbe
arpl
mov
testb
les
fildll
iret
jmp
and
fcoms
sub
stc
rcrb
out
rclb
mov
cmp
mov
adc
and
sbb
and
ljmp
jae
push
dec
dec
xchg
insl
loope
pop
sub
enter
enter
sarb
or
insl
adc
lods
rorb
lahf
add
or
and
lret
or
fdivr
outsl
xor
arpl
in
sub
push
imul
jbe
cltd
imul
push
ficoml
stc
int3
data16
add
aad
mov
pushl
and
push
adc
push
and
xor
pushf
xchg
mov
mov
mov
xchg
xchg
mov
mov
fsubp
push
fstpl
jp
stos
pusha
cmpsb
mov
out
fnsave
inc
test
pop
dec
sbb
or
sbb
sbb
into
push
mov
pusha
push
fiadds
pop
in
repz
dec
stc
dec
sub
shrl
and
mov
cli
aaa
divl
clc
les
xchg
sub
push
sbb
push
mov
les
push
pushf
sub
stos
mov
test
dec
clc
push
adc
push
mov
cli
movsb
add
sub
shll
inc
fildl
push
mov
lock
call
mov
cmc
inc
adc
in
mov
cmpl
pop
cmova
outsl
pop
lret
and
loopne
popa
loopne
push
pop
pop
dec
pop
repnz
test
sub
xchg
fcomip
in
mov
icebp
out
jl
xor
xchg
ret
xchg
mov
inc
push
lcall
mov
mov
cmpl
aaa
aad
cwtl
cltd
jg
sub
jb
mov
out
mov
mov
mov
andl
aam
dec
sbb
sbb
cli
dec
push
leave
push
decb
iret
push
jbe
je
mov
jbe
jno
mov
das
aaa
add
leave
mov
orl
mov
mov
rcrb
arpl
call
stos
js
ret
push
repnz
mov
ret
mov
imul
cmp
pop
xchg
int3
mov
or
repnz
push
mov
jno
fistpl
stc
sti
xchg
xor
aad
sbb
lds
fists
and
inc
jle
pop
lds
call
push
popf
cld
popf
stos
pop
pop
add
leave
std
div
sub
push
stc
out
xor
mov
mov
xlat
push
pop
or
out
add
pop
in
adc
or
push
repz
pusha
push
out
je
decb
sub
inc
pop
daa
cmpsb
addr16
inc
sub
scas
in
enter
std
movsl
mov
out
sub
cmp
sub
stc
pop
scas
adc
cli
jl
cmovge
dec
inc
fisttpl
mov
in
push
sub
ja
ja
dec
cmp
jno
adc
stos
mov
or
pop
xor
and
xchg
push
sbb
mov
push
jne
int
rcrl
xor
adc
push
fstpl
jge
leave
jne,pt
xchg
sarb
aam
jle
or
push
testb
sarb
cmpsb
fisttpll
push
or
in
adc
sbb
les
adc
ljmp
push
scas
in
push
cli
in
fsubrs
add
rorb
jb
jae
sahf
out
rorb
icebp
mov
test
das
es
pop
lods
jne
jns
je
shrl
lahf
xchg
int
pushf
mov
xor
in
mov
aaa
push
fmull
cld
loopne
cmp
negl
inc
clc
pop
das
fistpl
jno
popf
push
incl
daa
out
insb
je
xchg
inc
xor
mov
inc
insb
filds
mov
js
sarb
icebp
and
jb
iret
shlb
clc
hlt
xor
pop
in
test
sbb
push
call
mov
mov
xchg
xor
dec
in
test
shll
mov
mov
jne
mov
sub
mov
lahf
loop
int
push
push
pop
outsl
fstl
xlat
jg
dec
jle
ret
gs
cld
mov
add
push
mov
idivl
bound
in
je
mov
int
fmull
divb
loopne
cli
out
insl
leave
sbb
dec
mov
shrb
or
push
lcall
dec
rcll
and
arpl
pop
jae
cli
jb
cmp
mov
addr16
cmc
into
mov
call
push
xor
sub
out
lds
ret
imul
popf
iret
mov
loop,pn
stc
jnp
sub
push
in
push
mov
and
and
in
dec
and
cmpsb
setge
fsubr
loopne
adc
adc
aam
mov
movb
sbb
sbbl
pop
xchg
mov
arpl
stc
dec
cmp
lcall
ds
popf
jbe
movsb
jbe
mov
rcrb
pop
lahf
mov
jecxz
dec
cs
mov
adc
inc
cs
repnz
hlt
adc
divl
cmp
lea
mov
cwtl
mov
jb
dec
ljmp
adc
pop
jl
mov
push
shlb
mov
dec
inc
sti
xor
xchg
adc
nop
push
repnz
inc
inc
cmpsl
mov
xor
mov
push
xchg
ss
cmpsb
or
out
out
pop
pusha
sahf
shrb
mov
cmpsb
cwtl
sahf
mov
pop
bound
int
jl
into
jmp
xchg
stc
repnz
mov
aad
mov
lahf
and
add
faddp
adc
jmp
cmp
adc
popa
mov
repz
push
stc
call
xchg
jge
fisubs
lcall
push
insl
movsb
stc
mov
test
repnz
outsl
cs
ret
pop
call
mov
in
adc
push
icebp
dec
loopne
dec
lret
clc
mov
scas
xchg
outsb
cs
cmpsl
bound
mov
adc
bound
ljmp
fildll
and
sub
add
mov
push
sbb
lcall
popa
test
rcrb
push
mov
mov
stos
dec
lds
das
repnz
jp
jo
test
sbbl
add
xchg
dec
mov
adc
dec
xor
mov
test
in
imul
dec
inc
sbb
xlat
rcll
ret
lds
xchg
push
and
insb
jmp
adc
loopne
rol
push
inc
xchg
inc
stc
or
cltd
std
aaa
das
sahf
jmp
mov
ds
popf
pushf
or
sbb
gs
inc
pop
mov
sub
cmp
xlat
negl
cld
xchg
pushf
inc
jecxz
lea
cwtl
test
pop
and
mul
push
mov
shlb
pusha
sbb
test
inc
mov
ds
stc
imul
mov
lods
pop
stc
fimuls
add
dec
pusha
mov
leave
xor
aaa
shr
adc
dec
inc
and
in
pop
push
dec
int
jg
mov
jne
mov
push
xor
jmp
loopne
jg
js
notb
cmp
sbb
adc
int
xor
sub
or
cli
pop
pop
mov
out
adc
dec
mov
gs
mov
addr16
arpl
in
pop
test
pop
in
xor
js
js
jl
ret
cwtl
stc
test
mov
cmp
fsubs
or
xchg
enter
cmp
mov
lds
jecxz
or
stos
icebp
inc
lret
daa
out
pop
sub
or
repnz
sub
popa
fwait
push
dec
les
imul
jmp
mov
dec
ret
imul
xorb
cmp
cmpsl
fdivrl
dec
sub
lock
mov
inc
mov
jnp
mov
out
scas
jp
stos
mov
addr16
jle
and
dec
jge
add
or
xor
lds
test
inc
add
or
in
test
mov
mov
and
xlat
mov
xor
mov
iret
and
insb
dec
jecxz
cmp
and
insb
lahf
stos
js
stos
into
mov
xchg
in
fstpl
hlt
mov
gs
inc
out
adc
mov
mov
jp
loope
insl
mov
cld
bound
jno
adcb
mov
test
and
movsl
imul
loop
in
add
lds
fnsave
jno
and
cmpsl
cmp
cld
mov
mov
mov
in
fsubr
dec
pop
test
test
inc
adc
sub
sbb
sub
les
retw
out
sub
inc
xchg
inc
js
jb
daa
mov
push
inc
scas
add
ret
clc
mov
dec
in
sub
mov
xor
mov
mov
sbbb
stc
popa
lea
or
cltd
test
pushf
cmpb
jnp
mov
jns
mov
mov
aaa
jge
je
clc
out
push
in
push
movsb
adc
std
aas
jo
out
cmpl
lahf
cmp
dec
in
add
add
in
inc
out
inc
mov
cli
cmpsb
cmc
xchg
xchg
mov
dec
aad
or
sub
jmp
inc
xchg
rcrl
fwait
and
sbbl
loopne
out
pop
ficoms
dec
push
flds
ljmp
or
inc
adc
lret
test
mov
mov
ljmp
aad
in
adc
test
je
mov
aaa
shrb
je
flds
test
add
mov
push
mul
lea
ret
mov
adc
inc
rolb
sarb
dec
shl
push
lock
xchg
mov
adc
jl
jecxz
sarb
loopne
jmp
cmpsb
in
and
loop
fisubrl
sti
repz
fistps
aaa
cld
add
addr16
mov
mov
stos
mov
sub
cli
icebp
and
movsb
std
jns
fdivs
repnz
mov
push
adc
mov
and
xor
dec
sub
jl
bound
sbb
in
cmp
mov
and
xchg
aad
repnz
fldcw
sbb
lods
sub
dec
lret
test
or
lock
add
in
sub
js
out
or
and
clc
xlat
jmp
sub
std
xor
sub
adc
jg
in
cltd
stos
jns
mov
sub
mov
cmpl
adc
insb
addb
add
aad
imul
out
fst
popa
loopne
pop
stos
push
insl
pushf
lods
cmpsb
lock
daa
jge
cmp
lds
std
ljmp
mov
rclb
int
scas
pop
in
lahf
imul
scas
mov
xchg
sbb
aas
and
les
ss
test
lea
insl
and
ret
fsubr
jno
push
repnz
jmp
inc
cmp
imul
outsb
sub
xor
stos
add
scas
push
sbb
std
mov
push
sub
stc
lcall
mov
cmp
push
sarb
jns
fildl
jmp
movsb
stos
dec
dec
mov
sub
repz
cwtl
cmp
lret
subl
xor
sbb
out
mov
cli
push
adc
gs
aas
mov
stos
mov
jae
fld
or
xchg
mov
pop
mov
and
fstl
stos
fsubrl
inc
xor
sar
in
cmp
mov
xor
inc
jne
adc
adc
test
and
sbb
adc
outsb
push
and
xchg
or
dec
repz
push
std
sub
in
push
cmp
in
js
dec
add
mov
cwtl
andl
jmp
fstps
or
pop
mov
std
pop
mov
lret
neg
or
stc
sbb
push
adc
in
negl
xor
flds
popa
and
pop
stos
lock
in
loopne
and
aad
push
out
adc
jo
in
test
and
pop
xchg
lods
mov
jecxz
and
mov
vfrczsd
loope
pop
popf
enter
inc
lret
cmpsl
inc
stos
enter
dec
cs
sbb
xor
fcompl
mov
mov
lods
or
inc
rcrb
mov
mov
test
aaa
roll
mov
lret
mov
imul
cld
shl
mov
out
leave
pop
mov
lret
dec
fisttpl
and
es
in
negl
dec
pop
adc
jge
in
jne
pop
lcall
inc
stc
or
and
push
add
adc
daa
xor
mov
xlat
int3
mov
xchg
adc
in
mov
jno
std
shr
out
push
xor
jnp
dec
das
jecxz
call
or
cmp
inc
jne
test
rorl
pop
mov
jl
cmp
jle
inc
sti
into
aaa
pusha
inc
sbb
cmpsl
add
mov
std
push
mov
cs
dec
das
push
sar
imul
mov
xchg
jg,pt
test
notb
insl
sbb
orl
loopne
hlt
stos
mov
xchg
sub
add
lret
push
mov
mov
jnp
mov
popa
sub
mov
lret
js
fcmovne
in
cli
cmp
lock
aas
xlat
mov
js
fdivr
imul
icebp
imul
add
les
xchg
jg
clc
nop
jecxz
cwtl
insl
insl
sbb
lds
fs
loopne
out
push
sbb
pop
shll
pop
lods
stos
jmp
ret
pop
jne
ficompl
loop
cltd
jl
pop
inc
int3
xchg
add
das
into
pop
psllw
test
insb
xchg
test
clts
cmpsl
pushf
inc
or
push
or
inc
sbb
mov
aas
fnstcw
fdivrl
dec
lret
movsl
add
and
fwait
imul
inc
mov
jns
or
shll
cmpb
repz
mov
in
xorl
inc
sub
dec
jo
mov
ljmp
mov
push
fsts
aad
mov
fs
loope
mov
xor
and
mov
in
sbb
out
pop
insl
popf
jp
repz
inc
add
jecxz
mov
stc
in
inc
std
mov
int3
and
mov
in
and
movsb
cmp
es
mov
and
push
lods
bts
test
frstor
or
aaa
lret
mov
pop
push
mov
inc
ret
ljmp
jbe
mov
repz
fwait
add
in
xor
or
cmpsb
ror
or
pop
xor
inc
sbb
xlat
pop
sub
fcom
cmp
inc
mov
mov
lahf
aaa
sti
shrb
xor
rcll
sbb
cli
jb
pop
into
add
or
cmc
pop
es
adc
je
add
mov
in
sub
cmp
out
pop
jecxz
xchg
shll
fcom
push
fsubrl
pop
cmp
cld
movsb
ret
outsb
js
and
lret
lds
jnp
je
imul
imul
mov
push
sub
inc
xchg
mov
imul
stos
ret
jno
push
or
pop
test
insl
mov
or
lock
out
pop
xchg
test
push
jo
repz
xchg
push
lret
mov
ret
or
jb
cmpl
dec
pop
mov
lret
das
movsb
fisubrl
jae
vpackssdw
stc
pop
inc
push
in
insb
jnp
shrb
sub
out
movsl
loopne
cld
xchg
adc
fidivs
mov
loope
pop
adc
je
and
xchg
sub
jg
inc
nop
jae
in
pop
jmp
popf
insb
mov
push
int
push
jns
dec
inc
jmp
in
cmp
sub
add
mov
jbe
mov
xchg
lahf
pop
or
ret
cmp
shl
insl
xchg
mov
fsub
fwait
jb
and
lret
or
ja
xchg
clc
mov
add
pushf
cs
mov
out
in
mull
movsb
pop
add
shrb
mov
inc
in
rclb
sub
lea
in
or
mov
xor
jge
cmp
push
pop
loope
xor
sbb
push
cmp
dec
js
xchg
lods
popf
in
nop
inc
test
lcall
jle
sbb
cmp
jmp
cmp
enter
or
es
sbb
movsb
fstps
xchg
fwait
out
mov
inc
fiadds
inc
pop
pop
leave
out
push
mov
mov
dec
or
lds
andb
aaa
jl
jne
adc
loopne
adc
jmp
scas
gs
dec
sbb
jno
mov
xchg
mov
push
mov
adc
fistl
insl
icebp
sahf
scas
adc
mov
mov
push
sub
xor
std
loop
dec
out
scas
jle
in
xlat
std
test
mov
arpl
sbb
sbb
mov
pop
cmp
addr16
insl
mov
xor
sbb
pop
repnz
leave
mov
and
mov
leave
pop
das
es
jbe
popa
dec
fisubl
or
mov
call
mov
push
subb
or
dec
or
adc
loop
fildl
add
mov
ja
mov
cmp
ss
jle
mull
mov
inc
hlt
dec
push
push
nop
loope
sbb
mov
mov
dec
aaa
idivb
mov
into
or
mov
test
cmp
cli
fstpt
mov
mov
jae
mov
dec
addl
mov
test
and
adc
popf
jo
ljmp
stc
es
cwtl
cmp
push
js
js
xchg
sbbb
rcrl
xor
pop
pop
add
adc
pop
push
sub
push
mov
iret
jae
test
std
test
jl
aad
fcomps
rcl
jns
jl
jne
ja
sbb
sahf
orl
adc
push
jge
pop
mov
add
movsb
add
push
loope
inc
lret
orl
mov
and
es
sbb
dec
enter
mov
cs
xlat
mov
xchg
out
dec
dec
push
setl
fisttpll
movsl
mov
test
fstpt
or
mov
cmp
ljmp
or
pop
fcomp
shll
push
popf
jbe
les
ror
loop
addl
jb
pop
mov
cmc
pop
mov
mov
out
hlt
inc
outsl
and
loop
push
pop
jl
insl
inc
mov
jg
sbb
add
popa
jo
xchg
mov
or
sub
test
mov
fadd
cmp
mov
add
mov
mov
xor
loop
sarb
adc
inc
int
imul
lret
aas
sub
sub
xor
movsb
or
push
or
jno
inc
sbb
jecxz
mov
push
pop
shlb
xlat
inc
test
rorb
mov
out
imul
mov
dec
pop
dec
into
ja
into
push
xchg
test
addr16
aas
shll
inc
or
adc
into
jmp
mov
lahf
fdivr
jo
mov
pop
hlt
push
call
movsl
mov
movb
daa
and
mov
or
dec
mov
ret
inc
jne
test
inc
xchg
lahf
inc
jle
fdiv
cltd
jmp
in
xor
jmp
outsb
jns
ss
inc
and
adc
mov
stos
jnp
imul
dec
mov
adc
mov
sbb
xlat
out
dec
pop
xor
fcomps
jne
or
fsubrp
pushf
pushf
inc
call
jge
loope
add
in
paddq
insl
cmp
and
repz
lock
loop
icebp
xor
cmc
icebp
movsl
push
bound
cltd
cmp
xor
inc
roll
mov
out
cmc
mov
shll
cli
in
push
clc
pop
subl
cmp
push
add
je
ss
add
into
jo
shl
pop
push
push
cmc
insb
movsb
push
xor
push
mov
mov
pop
cld
fwait
mov
enter
xchg
pushf
pop
mov
inc
lret
pop
mov
bound
mov
sub
shlb
pop
mov
add
mov
mov
mov
dec
iret
pop
rcrb
movsb
mov
stos
insb
je
scas
mov
xadd
mov
arpl
es
xor
mov
sbb
test
sbb
orl
pushf
mov
shlb
jnp
lods
mov
sbb
je
sbb
push
leave
jo
fisttpll
dec
ret
pop
adc
clc
repz
or
aam
cmp
cmc
movsb
jno
bound
jae
xlat
daa
lds
push
test
iret
lret
xchg
dec
in
movsb
xor
scas
rcrl
mov
dec
fsubrl
cmc
mov
fadds
outsb
push
in
fnstsw
insl
daa
sbb
pop
sbb
cmp
imul
mov
call
cmc
sbb
data16
xchg
jl
add
popa
and
jg
ds
xor
and
sar
and
cmp
aad
mov
dec
mov
sti
pop
cli
xchg
mov
mov
xor
mov
and
mov
test
jecxz
inc
mov
in
inc
sbb
mov
fdivrl
xchg
xchg
cmpsl
imul
mov
mov
push
jl
js
inc
leave
stc
fcompl
inc
int
inc
cmp
jno
mov
lret
imul
pop
test
pop
xor
pusha
jne
pop
sbb
aaa
xor
imul
mov
je
xchg
in
stc
cmp
bound
mov
sbb
mov
sub
sbb
fs
lret
js
adc
or
enter
jbe
scas
scas
loope
xchg
push
in
mov
add
push
mov
std
push
orl
jge
xor
sti
std
iret
mov
popl
jns
fmul
jg
scas
shlb
push
pop
dec
mov
cli
aam
ret
add
xchg
xchg
mov
inc
mov
orb
dec
orl
leave
lods
dec
dec
inc
pop
xchg
adc
stos
cmpsb
adc
xchg
lcall
fwait
sbb
aad
mov
imul
mov
nop
xchg
mov
push
and
jno
xor
dec
movsl
movsb
hlt
push
xor
cmp
cmp
inc
xor
mov
adc
popf
push
xchg
push
lods
sub
jo
xchg
adc
pop
in
mov
sub
inc
insb
pushf
mov
fsubr
mov
jb
dec
mov
cmc
sbb
mov
cmp
jnp
sub
jg
sub
cli
lods
sub
add
xchg
fxch
and
xchg
add
arpl
inc
mov
stos
shll
std
mov
push
jl
loopne
sbb
sti
outsb
mov
push
fs
sbb
lds
repz
int
push
mov
jl
push
imulb
sub
into
and
add
stc
iret
pop
in
adc
sub
clc
sbb
out
fldcw
leave
sub
pop
add
ja
add
mov
jge
cmp
aad
mov
leave
insb
cmpsl
imul
int
cmp
dec
fmul
mov
pop
in
xor
mov
mov
push
jl
loope
fdivr
fdivr
push
movsl
mov
xchg
pop
sub
inc
cltd
push
xor
insl
cmp
pop
mov
jge
sbb
push
or
popa
cltd
mov
mov
mov
subb
scas
popf
pop
sub
and
fstl
fxch
add
gs
inc
push
movsl
mov
mov
ror
jnp
mov
testl
sub
sbb
pop
mov
adc
or
inc
pop
inc
scas
mov
lea
or
xchg
xor
int3
inc
scas
arpl
or
jl
dec
dec
add
out
adc
test
mov
jmp
call
imul
jmp
addr16
inc
hlt
fbld
shlb
adc
out
mov
or
inc
fprem1
rolb
xchg
mov
mov
les
add
repz
sub
enter
call
push
insb
lret
cmp
daa
std
cmpsb
lret
cmpsl
cmpsl
xchg
leave
mov
fsubrl
lret
sahf
lret
jge
cwtl
jp
inc
sub
sub
mov
fnstsw
pop
pop
xor
shll
les
stos
inc
mov
cmp
lods
movsb
adc
decb
or
or
data16
inc
mov
imul
push
push
std
aam
dec
aam
mov
ret
stc
mov
les
mov
loope
test
insb
fldcw
lods
mov
and
aam
cwtl
lods
sbb
mov
div
xchg
subl
imul
mov
into
pop
js
rclb
loopne
icebp
movsb
rcr
cmp
loop
jae
arpl
fistl
stos
pop
into
sub
pop
test
sub
dec
mov
hlt
in
xchg
sti
and
test
mov
scas
jecxz
mov
jle
pop
jl
jmp
push
aas
fs
test
sbb
aaa
xor
fxch
or
xchg
subb
mov
lcall
ret
sbb
cs
enter
mov
pop
aas
hlt
xor
cmp
jmp
xor
test
mov
mov
int
aam
lea
lcall
lods
or
jle
mov
push
or
les
pop
hlt
mov
jae
or
add
imul
pop
test
std
sarb
lcall
dec
insl
mov
scas
mov
idivl
mov
cmc
out
jge
je
mov
xor
std
leave
addr16
and
or
filds
pop
and
xchg
mov
inc
xchg
fbld
sub
scas
loope
push
fidivrl
popf
in
mov
sbb
inc
icebp
pop
cmpsb
push
hlt
sub
outsb
popa
sub
incl
pop
xor
je
mov
or
hlt
pushf
movsl
ljmp
in
fs
les
addl
sbb
rorb
adc
mov
in
xchg
popa
xor
enter
fisttpl
adc
xchg
mov
push
cltd
cwtl
sub
insb
jg
mov
xlat
sahf
scas
xchg
mov
gs
cld
lahf
dec
call
dec
jbe
pushf
cmp
rolb
pop
cltd
pop
cmc
leave
and
jge
or
adc
xchg
sub
jl
mov
sub
add
lret
push
jmp
jl
inc
filds
mov
mov
xor
pop
sbb
and
ljmp
mov
nop
data16
add
lret
jge
in
and
add
add
adc
xchg
jne
mov
push
sub
les
adc
lret
fstpl
sbb
xor
xor
jge
leave
lcall
push
insl
sahf
jmp
dec
pop
mov
xorl
mov
inc
pop
mov
inc
jp
jp
lds
sarl
leave
out
or
in
or
fdivl
aaa
test
jmp
std
int
loop
dec
stos
popa
sub
data16
ror
jge
push
sti
testb
fdivrl
push
push
arpl
cmc
cmp
mov
jno
stos
xor
enter
inc
push
dec
pop
xor
mov
cmp
xchg
enter
sub
inc
jge
hlt
enter
cmp
pop
pop
out
fsubrl
sbb
push
cmp
je
jp
jae
adc
loop
sbbl
mov
lock
add
enter
adc
pop
ds
lods
pop
fistl
pop
xor
jecxz
movsl
mov
cltd
mov
push
in
popa
repz
and
scas
fwait
xor
pop
loop
cld
mov
jmp
std
mov
rcr
push
loope
sub
cltd
addr16
dec
ljmp
inc
lret
scas
xor
les
sbb
dec
fdiv
ret
jp
dec
incl
aam
mov
insb
and
mov
popa
pop
ja
lods
push
jne
dec
jnp
movsb
scas
mov
or
jns
sarl
test
loope
xchg
cmp
popf
decl
mov
leave
mov
and
gs
lods
push
lret
pushf
cwtl
jnp
xlat
clc
sub
inc
movsl
lret
push
iret
gs
inc
or
jge
out
adc
dec
out
mov
xor
xchg
insb
out
and
lea
cs
out
inc
int
dec
dec
iret
xor
adc
xchg
jns
pop
adc
je
jo
int
cmpb
fs
aas
lea
jle
push
or
rep
cs
pop
push
scas
in
mov
jbe
rolb
lahf
call
and
rcrb
sti
fcoms
pop
push
push
sti
sbb
sub
cmp
mov
ret
scas
lcall
popf
xor
cmpsb
add
rcll
shlb
or
push
data16
push
in
pop
mov
mov
fisubrl
xchg
dec
jl
pusha
cmp
pop
aad
les
nop
lock
mov
loope
dec
xchg
adc
sub
mov
fistps
fmul
push
xchg
jle
sahf
mov
and
add
inc
in
pop
out
sbb
fucom
mov
or
and
push
in
pop
ljmp
xchg
inc
in
lds
mov
jl
add
sti
adc
aas
cmp
loop
adc
mov
cmp
loope
shlb
mov
fists
pop
pop
pushf
mov
shll
sahf
rcrb
mov
enter
mov
dec
add
sbb
mov
sbb
inc
mov
push
in
xchg
adc
sarb
in
lahf
mov
scas
stc
pop
push
stos
std
scas
dec
sbb
push
and
fsubs
loope
stos
movl
cmp
add
movsl
int
int
sbb
pop
xchg
and
or
cmp
mov
mov
mov
cltd
sbb
push
jmp
and
cmpsl
sti
jmp
mov
rclb
xor
cmp
and
cli
test
mov
test
dec
inc
sbb
xor
xor
xor
in
jg
mov
adc
xchg
xchg
icebp
inc
xchg
adc
lds
aad
mov
or
testl
push
fucomip
inc
aaa
cmp
push
in
mov
movsb
xor
sbb
std
adc
imul
fwait
dec
movsl
dec
insb
cwtl
hlt
and
rclb
shlb
imul
js
dec
sbb
fiadds
jle
mov
in
cmpsb
movsb
data16
adc
push
mov
inc
mov
mov
sbb
add
aas
adc
imul
dec
xor
loop
xlat
mov
mov
xchg
jge
push
xlat
into
loop
popa
fwait
push
mov
sbb
test
pop
or
insl
sbb
jl
or
push
ja
iret
aas
sub
pop
adc
push
mov
push
push
outsl
jnp
pop
cmpsb
and
bound
ljmp
int
icebp
pop
mov
shlb
inc
aad
out
sub
scas
fs
cmp
jo
fwait
adc
rcl
dec
sub
insl
inc
loope
je
xchg
test
mov
test
adcl
dec
inc
je
roll
movsb
push
push
xchg
or
lock
push
or
mov
adc
pop
std
push
clc
setl
cmc
ret
repnz
fwait
mov
inc
addr16
loope
mov
hlt
adc
or
xchg
mov
fildl
andl
fcmovu
push
shrl
xor
rcl
adc
loopne
pop
lret
loopne
out
arpl
push
xchg
lret
cmpsb
mov
pop
orb
aaa
and
aas
jno
fs
arpl
inc
jno
and
cld
std
insb
cli
mov
movsb
dec
mov
int3
jg
in
jle
mov
outsl
xchg
mov
test
xor
aad
repz
pusha
dec
outsl
xchg
mov
out
dec
decl
dec
inc
lahf
mov
xor
pop
out
insb
mov
xchg
lods
inc
cmp
je
pusha
sub
cltd
les
jge
sbb
push
lcall
xchg
adc
cmpsl
fisttpll
xor
xchg
faddp
fildll
mov
negl
imul
sub
pop
fst
dec
sub
cmpsl
adc
pop
pop
pop
inc
push
ret
sarl
insl
dec
jae
in
jg
mov
mov
cmpsb
inc
jmp
xor
cli
iret
pop
push
rorb
rorl
push
mov
sub
cli
insb
or
mov
int
add
mov
push
movsb
sbb
cli
aas
xor
outsl
push
sub
popf
movsl
lahf
mov
scas
mov
or
enter
jns
pop
and
adc
xchg
jns
cmp
cmpsl
mov
enter
enter
popf
mov
in
loopnew
cs
lret
pop
cld
fcoms
mov
jg
imul
jns
pmullw
inc
or
jmp
scas
fldenv
fldenv
sub
addr16
out
jmp
cmp
xlat
sarb
std
inc
adc
add
sbb
aaa
cmp
push
dec
int3
adc
sub
aad
rcl
jecxz
nop
loop
xchg
shll
jecxz
test
lock
mov
fistpl
idiv
stos
pop
dec
lcall
addr16
add
test
lahf
push
inc
mov
or
aas
out
or
adc
or
pop
xor
xor
ss
push
pop
dec
dec
mov
notl
orl
mov
mov
pop
mov
push
es
pop
shll
mov
shll
aaa
inc
sub
sbb
cltd
mov
in
adc
loope
popa
ret
add
jns
in
cmpsl
lret
cwtl
push
popa
movl
adc
mov
ret
or
cmpsb
cli
sti
dec
rorl
mov
push
loope
pop
xchg
sbb
dec
and
sbb
mov
stos
addr16
mov
xlat
orb
mov
sbb
jle
out
pop
in
sbb
repz
stc
jecxz
and
add
dec
in
sub
sub
in
cwtl
in
xor
jge
adc
sti
jecxz
push
fsubrl
sub
sbb
push
fildl
filds
iret
loopne
or
sbb
jle
xor
outsb
loope
dec
arpl
xor
mov
xor
loop
les
mov
addr16
jmp
push
adc
cli
enter
dec
mov
bound
and
movsb
in
mov
stc
aas
and
repnz
push
fs
jo
mov
dec
sbb
repz
and
scas
sbb
leave
out
cltd
divl
cmp
push
jge
and
lea
cmc
sbb
mov
and
cltd
pop
in
mov
insl
dec
cmp
stc
inc
cmp
iret
iret
and
xchg
test
icebp
jmp
push
cmp
imul
jge
cmp
out
aam
cmp
add
lds
mov
xlat
enter
push
pop
shrb
pop
push
sub
jmp
or
push
aad
mov
xorl
push
js
je
or
psrad
fsub
lret
jecxz
loope
clc
mov
insl
icebp
clc
sti
add
je
ds
sub
ds
stos
lret
jle,pt
mov
xchg
cmpsb
rorl
lahf
xor
push
push
jo
add
nop
jle
arpl
mov
mov
repz
ja
sahf
cmpsl
mov
add
out
cwtl
mov
push
addr16
lea
orb
rcll
lods
and
inc
cmpl
inc
bound
add
test
push
fmulp
or
xlat
aaa
daa
out
lods
mov
xor
xchg
or
sbb
adc
andl
insb
or
sub
mov
jge
push
xchg
insl
dec
cmpl
in
or
mov
jae
test
cs
dec
adc
test
xchg
or
sbb
mov
and
cmp
cmpsl
and
aaa
ljmp
ret
push
lea
jmp
or
fisubrl
jle
and
decb
mov
outsb
inc
js
xor
lds
lret
sbb
sub
xorb
and
pop
test
addr16
xchg
leave
shll
std
sbb
aam
lret
mov
inc
in
hlt
adc
cmp
sbb
test
mov
pop
sbb
in
xchg
jb
add
insb
jmp
sub
sub
or
lock
pop
sbb
hlt
loopne
or
sbb
insb
lret
or
mov
daa
mov
insb
pusha
daa
xor
fmulp
inc
dec
cltd
ja
adc
mov
push
inc
add
mull
push
insl
scas
mov
mov
mov
adc
or
xlat
decb
jp
in
jl
dec
or
sbbb
pop
and
rcll
pop
ficoml
pushf
loopne
fcomps
mov
aad
jae
imul
mov
adc
sub
inc
add
push
mov
movsl
je
movsl
jmp
call
inc
push
dec
shrl
orb
leave
push
pop
bound
stos
mov
adcb
jle
or
jbe
jp
cmpsb
icebp
clc
xchg
lcall
or
test
xchg
cmpl
fcomps
movsl
lods
pop
push
jno
jl
adc
mov
push
mov
lahf
inc
jns
push
mov
xchg
mov
cmp
sahf
stos
aaa
pop
cmp
inc
mov
inc
mov
cmpsl
xor
movsl
cmp
int3
out
sbb
inc
xchg
orl
inc
xorb
and
cmp
out
cltd
adc
mov
nop
stos
sbb
mov
popf
push
lahf
cld
xchg
rcl
ljmp
cltd
mov
movsb
push
in
test
mov
movsb
jo
into
ds
xchg
imul
lret
testb
scas
cmpsb
addr16
in
outsl
dec
mov
ret
lods
mov
arpl
sub
into
out
in
mov
fst
ret
sub
xchg
mov
jecxz
ret
sub
rcrb
jle
enter
lret
pushf
test
stc
xor
xchg
movsb
iret
clc
sub
mov
lea
ljmp
dec
sub
popf
sbb
pop
loope
stos
push
inc
xchg
idivl
daa
mov
inc
mov
pop
and
mov
pop
stos
insb
xchg
pushf
jb
cmpsl
sbb
enter
push
adc
sbbb
leave
xchg
mov
mov
aam
in
jp
dec
mov
or
insl
jno
cltd
jns
dec
cmc
imul
ss
sub
or
lods
and
sahf
mov
push
push
cmpsb
in
pushf
cmp
aaa
push
test
mov
les
pop
mov
jnp
add
clc
dec
or
pop
adc
xchg
gs
inc
sub
pop
les
outsl
add
mov
inc
idivl
stc
jns
shl
pop
mov
push
fisubs
cmc
jge
and
lahf
pop
pop
dec
cmp
fwait
pop
loop
push
bound
insl
test
fidivrs
or
push
fbstp
jns
lds
lret
jg
xchg
jo
xor
add
test
xchg
leave
xchg
sarb
mov
inc
popa
cmp
cmpsl
xlat
inc
into
dec
xor
lcall
test
mov
shll
and
jb
xchg
and
in
xchg
or
rdpmc
in
mov
fldenv
jl
popa
int3
pop
mov
dec
cmpsl
pop
mov
dec
add
cmpsb
test
fisttpl
pop
test
repz
cltd
xchg
enter
push
int3
mov
scas
out
ja
xchg
pusha
in
in
in
stc
mov
test
repnz
inc
sub
repz
lret
test
jbe
inc
out
push
pop
test
mov
sbb
roll
xchg
scas
dec
js
pop
mov
add
jno
pusha
mov
lcall
test
rorb
mov
fistpll
test
push
test
pop
jmp
lea
push
sbb
push
stos
adc
jmp
adc
push
pop
xchg
insb
add
outsb
inc
jno
jne
insb
mov
and
lods
in
add
pushf
pop
shl
js
negb
dec
pushf
imul
pop
jae
enter
push
mov
loopne
lahf
push
mov
mov
scas
mov
pop
into
scas
and
ror
fdiv
pop
test
sbb
daa
es
fnstenv
sub
mov
xorl
ja
out
out
mov
inc
popf
adc
push
leave
mov
pop
mov
xor
mov
test
mov
xlat
mov
adc
scas
rcl
bound
test
inc
push
dec
movl
or
xor
in
es
add
sub
mov
add
push
jp
fildl
in
xchg
ds
ret
loope
movsl
mov
mov
std
sub
loope
cs
add
fcomp
flds
jecxz
and
incb
lods
mov
mov
mov
xchg
mov
flds
stos
cmp
and
cmp
adc
out
addr16
das
movsl
xchg
into
dec
cmpsb
mov
jne
or
pop
into
dec
fucomp
lret
mul
sub
idiv
xchg
and
pop
loope
push
inc
xor
add
call
test
imul
pop
xlat
mov
stos
pop
call
pcmpeqw
stos
data16
in
add
loop
mov
bound
xchg
leave
jmp
ret
stc
push
nop
mov
xor
loope
xor
inc
ds
jecxz
icebp
jb
lret
push
sbb
xchg
push
mov
push
sub
scas
xchg
mov
nop
add
addb
or
mov
icebp
cltd
movsl
flds
pusha
pusha
sub
lods
jno
mov
arpl
jno
or
ret
push
jae
ficomps
cltd
push
dec
lods
cmp
cmp
inc
mov
scas
cmp
cmp
fwait
mov
mov
in
cmp
frstor
lea
cmp
cmp
nop
sbbb
mov
insl
outsb
lock
fisubrs
popa
fs
pop
popf
subb
dec
lds
loop
sub
es
imul
jbe
push
push
std
es
dec
dec
je
cli
rorb
inc
imul
or
movsl
repnz
or
dec
imul
call
lcall
mov
imul
repnz
jo
jo
repnz
dec
imull
pop
mov
in
loope
scas
jmp
arpl
sub
rorl
cmp
stos
and
xchg
xchg
push
cmc
sbb
call
inc
xchg
jle
insb
and
sti
mov
mov
icebp
decl
dec
cltd
jae
lahf
scas
fdivrl
sahf
mov
fcompp
sub
pop
cmp
das
test
call
or
negb
into
imul
aaa
dec
push
stc
inc
cmp
mov
xor
mov
sbb
jno
push
inc
sbb
mov
pop
shlb
mov
jae
or
fwait
push
dec
rcll
lahf
pop
fwait
test
and
mov
add
movl
jge
arpl
hlt
mov
mov
inc
gs
push
pop
mov
imul
jae
lds
je
and
fidivs
shll
filds
cmp
cmp
outsb
or
push
test
inc
movsl
lret
adc
jne
stos
jp
in
cmpsl
jg
and
push
pusha
rclb
mov
mov
lcall
mov
inc
adc
rcrb
in
mov
pop
stos
fidivrs
xchg
mov
adc
ret
sahf
lods
xor
mov
stc
inc
or
movl
jmp
std
jae
mov
add
mov
sti
sub
nop
jl
mov
mov
loop
adc
hlt
xchg
orl
cmpl
push
loope
mov
dec
xchg
xor
or
jmp
sub
leave
ds
loope
jecxz
add
sbb
sbb
mov
and
movsb
loopne
mov
mov
outsb
cmpsl
stc
dec
int3
push
aaa
dec
in
xor
jge
jg
push
dec
xor
push
pop
add
nop
sbb
aam
mov
pop
adc
mov
cmpsb
cli
in
dec
hlt
insb
shlb
and
jge
loop
and
lods
mov
in
enter
lahf
adc
ficoml
xchg
mov
gs
shll
mov
hlt
lea
test
cmp
testb
sbb
in
sbb
bound
mov
mov
rolb
or
mov
xor
orb
xlat
push
les
push
mov
int
and
fdivrs
aaa
cmp
cmc
fsubrl
shlb
iret
outsb
int
in
outsb
pushf
jmp
movaps
adc
outsl
jge
sahf
xor
fdivl
popf
ss
xchg
in
mulb
loope
sar
rcl
das
imul
pop
jl
mov
scas
dec
mov
int3
push
mov
mov
jmp
lock
out
imul
inc
lahf
aam
mov
push
fcmovb
test
stos
mov
mov
push
push
mov
mov
lcall
mov
outsl
mov
add
and
pop
iret
add
stc
dec
das
clc
sar
or
aam
sbb
rclb
fidivs
fcmovu
add
idivl
dec
stc
jp
sub
shrl
add
addr16
and
pushf
mov
xchg
xlat
fdecstp
inc
xchg
nop
cmpsb
inc
push
dec
jnp
push
push
repz
cmp
push
repz
rcl
fildll
mov
pop
dec
enter
loope
lods
mov
adc
sub
lahf
mov
jge
and
stos
call
push
mov
daa
pop
push
inc
push
cli
dec
cwtl
mov
dec
lea
mulb
loopne
add
rcrl
aam
out
inc
fists
cmp
bnd
lods
cmp
sbb
call
std
adc
inc
pop
imul
test
push
mov
xor
dec
mov
and
jae
int
xchg
dec
fimuls
sarb
pop
cmpsl
aam
mov
mov
dec
push
popa
jge
lods
divb
add
mov
lret
or
push
out
dec
test
and
test
mov
stc
mov
adc
mov
idivl
jnp
or
stc
mov
xor
mov
add
fnstenv
fs
stos
arpl
in
push
jns
mov
jle
lea
cld
or
mov
loope
mov
dec
pusha
mov
negb
inc
aad
insb
int
and
addb
es
pop
int3
xchg
inc
popa
jg
add
sub
shl
sbb
lock
int3
pop
ds
lea
arpl
in
mov
push
mov
sti
inc
daa
ret
or
inc
adc
pop
xchg
cmp
icebp
dec
ficoms
stos
and
or
scas
imul
dec
mov
push
in
clc
inc
cltd
lret
push
cmpsb
cli
or
inc
add
out
add
xchg
cld
es
sbb
mov
pop
outsl
xor
pop
cmp
iret
test
mov
adc
cmp
in
xchg
ret
lods
dec
lahf
add
repnz
repz
in
rol
sub
lret
jne
mov
xchg
cmc
les
lds
sub
jmp
xor
repz
out
pop
test
repnz
mov
shll
sub
cmp
repz
adc
xor
imul
aaa
pop
imul
push
mov
neg
jmp
and
addr16
pop
mov
fwait
and
xor
jg
lret
push
aad
dec
shl
jl
mov
out
lahf
aad
add
lea
or
enter
int
xor
pop
sbb
adc
mov
xchg
mov
lods
leave
lret
pop
leave
cmp
mov
jo
and
out
add
xor
add
xor
lret
jnp
sub
sbb
xor
sub
loope
sarb
mov
lods
cmpsb
in
fbstp
inc
xorl
and
dec
mov
push
jmp
sarl
fs
or
push
je
enter
sub
subl
fwait
fwait
movsb
daa
xor
insb
test
ret
jo
insb
add
nop
adc
scas
in
into
outsl
into
mov
int
cmc
jmp
hlt
and
clc
inc
jge
mov
int
dec
cwtl
in
rcrl
mov
movsb
int
jne
test
xchg
dec
push
pop
nop
mov
pop
jl
out
fldcw
xor
inc
cwtl
mov
jl
dec
aam
jnp
xor
loope
push
dec
std
int
test
lret
mov
cmp
ret
mov
mov
stos
jb
and
lret
add
int
or
bound
stc
ret
adc
mov
out
fistps
cmp
shl
cmpsb
mov
xchg
sbb
sbb
sarl
mov
in
mov
repz
out
fsub
xchg
clc
and
push
add
push
jp
ret
out
adc
pusha
movb
outsl
test
sti
xor
sub
mov
add
addr16
in
jnp
sub
fadds
sbb
push
inc
and
mov
xchg
adcl
pushf
cmp
pop
decb
sub
jo
sbb
sub
add
iret
push
dec
dec
lock
inc
pushf
icebp
shll
test
mov
sub
adc
push
fldt
lods
mov
ror
mov
jl
mov
push
mov
adc
xchg
cmpsb
insb
rcll
out
loop
fstl
push
wrmsr
sbb
fldt
hlt
add
xor
add
stos
scas
out
and
xchg
das
pop
sbb
in
cmp
dec
rol
cmp
adc
repz
add
jnp
cmp
push
mov
lock
test
mov
lahf
dec
cmpsl
xchg
std
icebp
mov
push
inc
or
scas
push
div
mov
xchg
cld
cmpsl
mov
les
push
stos
mov
push
mov
mov
mov
leave
or
mov
test
fmuls
lock
add
xor
aad
add
lods
dec
int3
sbb
fdivl
movsb
into
dec
jne
lcall
cli
dec
scas
mov
mov
or
addl
hlt
xorl
daa
cmpsl
sbb
pop
jp
fsub
rol
js
mov
clc
xchg
inc
inc
ljmp
mov
jnp
hlt
xor
cwtl
stos
das
and
in
pop
cmp
sub
lock
shl
cld
stos
icebp
sub
in
jecxz
leave
clc
out
and
dec
adc
gs
adc
js
inc
adc
out
int
sbb
xlat
sbb
rorl
add
jecxz
pop
in
lcall
cmpb
hlt
cs
and
mov
sub
insb
icebp
cwtl
sbb
jmp
and
mov
and
dec
dec
ljmp
jge
xchg
fists
stos
imulb
push
sbb
lea
xchg
test
cmpsb
mov
add
cmpsl
fistl
nop
loopne
adc
push
movsb
loop
jecxz
mov
and
movsb
sub
cwtl
sub
mov
mov
rcrl
fs
xchg
popa
inc
jnp
cmpl
dec
sbb
stos
add
mov
jne
in
iret
in
mov
fidivs
outsb
sarb
dec
and
push
repnz
jmp
scas
rcrb
or
pextrw
jbe
xor
push
xor
test
cmp
adc
cmp
xor
jo
mov
cmp
ret
mov
dec
mov
aas
xchg
icebp
add
adc
mov
xor
into
divl
dec
fldenv
fildl
and
movsb
iret
mov
movsl
cmc
mov
and
adc
jge
shlb
cmp
push
push
jle
jmp
cmovle
push
add
pop
add
hlt
sub
and
dec
mov
jno
je
lea
xor
lahf
and
xor
mov
imul
pusha
mov
sub
push
xor
je
cmp
loop
pop
aaa
jae
sbb
rolb
sub
push
fmul
loop
dec
mov
fwait
sub
mov
lds
in
dec
add
mov
add
lret
cmpsl
lods
jo
pop
jl
add
push
shl
adc
aad
inc
inc
jge
pop
std
pusha
jge
push
aas
jle
and
cli
out
out
pop
stos
or
adc
out
and
sub
push
pop
in
test
sbb
add
or
int
shll
aas
mov
sbb
jg
mov
imul
xchg
and
mov
jne
mov
inc
int
scas
aad
and
test
int
pop
das
push
test
adc
dec
or
fdivl
add
cmp
cmp
int3
sbb
je
aas
mov
sbbl
fwait
movsl
dec
fsubl
lds
jbe
push
jecxz
pusha
cmp
dec
push
push
cld
ss
pop
stc
jmp
jecxz
jmp
mov
test
jae
orl
xchg
negl
adc
add
leave
ljmp
pop
mov
inc
add
sbb
mov
lods
daa
ljmp
xchg
inc
mov
stc
fsubrs
xor
adc
push
mov
mov
xor
jbe
andl
jp
fsincos
adcl
flds
jmp
adc
lods
xor
sbb
les
das
sahf
hlt
rcrl
int3
out
mov
arpl
jmp
xchg
sti
bound
cmpsl
popa
scas
jae
out
xorb
mov
lock
xchg
imul
sub
loop
les
iret
or
add
cmp
test
cmp
jecxz
scas
in
sub
addr16
push
cld
stos
aad
xlat
mov
notb
adc
add
sar
or
ret
bound
bound
jne
insl
fidivl
out
push
inc
sbb
inc
fsubrs
scas
fidivs
insl
sbb
xor
or
pop
jno
out
xchg
cmp
pop
jmp
dec
test
or
lods
add
inc
jp
imul
ficoml
mov
mov
popf
je
addr16
inc
jne
ds
movsb
xorl
pop
dec
mov
std
sbb
cmpsb
xlat
mov
dec
fs
sub
or
mov
aas
push
or
pop
push
inc
cmc
or
jne
fmuls
mov
inc
pushf
mov
out
in
inc
dec
push
cmp
in
cmpsb
adc
mov
and
out
mov
inc
jle
fisubl
xchg
int
movsb
jo
mov
xor
or
sbb
into
inc
cmp
dec
inc
std
mov
mov
mov
ret
outsl
push
sub
jmp
insl
mov
dec
mov
outsb
adc
sti
imul
gs
pop
scas
rcrl
mov
cmp
sbb
pop
pusha
shl
add
rolb
pop
push
gs
and
inc
mov
cmp
pop
pushf
icebp
or
movaps
add
pop
mov
cli
gs
loope
mov
fs
pusha
and
lcall
adcl
mov
movsl
loop
xlat
or
jae
shrb
int
mov
test
sub
mov
cmp
pop
sub
fs
jmp
and
hlt
xchg
repz
add
enter
mov
add
xor
lahf
sub
push
addps
mov
in
and
shll
cli
aad
stos
in
out
xchg
mov
push
xchg
test
mov
into
or
shrl
push
stos
mov
or
les
call
fstpt
or
aas
mov
cmp
inc
dec
out
sub
fs
fildll
cmp
adc
sar
xor
cwtl
xor
pop
mov
dec
int
stc
rolb
jle
sub
in
jg
xchg
jns
icebp
testl
std
ljmp
fidivrs
cmp
xchg
imul
xchg
push
cld
xchg
loope
stos
jecxz
test
cmc
loop
imul
jle
mov
stos
and
add
dec
dec
pop
sub
dec
stos
sbb
shr
mov
in
in
movsl
push
pop
sbb
mov
jecxz
bnd
cmp
cmp
icebp
lret
mov
aaa
jmp
jl
andb
std
jg
push
and
mov
jnp
push
sub
pop
xlat
sub
rcpps
dec
adc
mov
mov
adc
adc
gs
cmp
mov
jge,pn
in
pop
shlb
add
jl
push
push
or
inc
enter
jmp
in
xor
push
dec
and
aad
push
mov
dec
mov
xlat
push
popf
xchg
js
and
push
mov
scas
push
dec
test
mov
adc
pop
mov
jecxz
std
jl
mov
mov
aaa
cmpb
cmp
mov
scas
dec
in
sub
loopne
jne
sub
inc
call
aas
pop
lods
pop
pop
mov
inc
cmp
repz
enter
sub
xchg
sbb
mov
push
enter
pop
popf
andb
loope
aad
loopne
gs
aam
or
push
sti
adc
sbb
in
mov
mov
adc
inc
jecxz
aad
mov
dec
dec
stc
dec
insb
xchg
add
pusha
and
cmp
add
iret
dec
hlt
adc
std
cmp
inc
xor
int
fmuls
xchg
dec
xor
out
jl
pop
clc
dec
or
mov
pusha
aam
xor
movsl
cmpsl
sub
and
add
fsubrs
cmp
inc
cwtl
divb
pushl
stos
jecxz
shlb
insl
dec
sbb
out
mov
rorb
xor
sahf
fdivr
mov
outsl
std
pop
cmpb
mulb
call
or
rcr
aam
stos
dec
cmp
xor
pop
dec
insb
mov
iret
ficomps
roll
adc
jae
sbb
xchg
mov
push
jge
clc
mov
out
pop
sub
jmp
xchg
lods
xlat
sub
ror
push
sub
jmp
mov
xor
xchg
jmp
jle
test
xchg
inc
popf
inc
pop
scas
lcall
out
sbb
or
test
dec
pop
add
or
pop
adc
test
or
scas
and
jne
xor
shll
pusha
ljmp
xchg
mov
push
cmpsb
or
mov
notb
jmp
jo
repz
cs
sti
rorb
popf
daa
loop
xor
fwait
negb
rcr
mov
mov
cmp
add
mov
rcrb
adc
aam
adc
hlt
jb
out
insb
xchg
xchg
dec
imul
repz
sbb
pop
pushf
cs
sbb
cs
push
fnstenv
lods
xor
inc
inc
cltd
lcall
leave
lret
arpl
cli
jmp
ret
fwait
dec
pop
xor
jno
jbe
or
arpl
cmp
jo
mov
test
aam
lods
and
stos
movsl
xchg
cmpsl
inc
dec
shrb
jle
xchg
cmp
daa
mov
loopne
movsb
dec
fistl
pop
push
or
cmpsl
or
leave
cli
in
xor
call
dec
sbb
ds
or
sti
daa
rclb
inc
ret
pusha
call
adc
int3
push
lods
les
lods
in
xchg
inc
mov
fsubrs
scas
and
cmpsl
out
call
pop
aad
mov
inc
pop
xchg
aas
fsubrp
add
imul
pop
aad
push
xor
in
outsl
sbb
cli
arpl
mov
add
test
push
nop
jns
dec
xlat
jnp
mov
pop
int
movsl
negl
mov
push
imul
dec
mov
pushf
popa
cmpsb
mov
cltd
arpl
scas
or
inc
or
mov
in
add
xchg
inc
sbb
mov
stos
jle
in
lcall
pusha
adc
xchg
mov
test
xchg
fwait
daa
aaa
xchg
or
push
out
out
or
mov
lods
lret
dec
xor
push
test
jmp
call
inc
ds
xchg
jo
std
add
std
or
je
jg
das
inc
mov
iret
jns
movsb
inc
test
mov
xlat
xchg
jecxz
popa
pop
insb
xor
hlt
outsb
ret
loop
pop
inc
pop
test
push
fs
sarb
jo
pushf
shlb
sbbl
or
stos
call
cs
int
jmp
lea
jb
inc
push
ret
stc
dec
adc
gs
pop
scas
xchg
pop
push
aas
incl
addr16
mov
fcomip
cs
popa
sbb
push
rcl
cs
pop
xchg
or
mov
imul
dec
mov
gs
jbe
outsb
mov
arpl
pusha
push
rcl
addr16
mov
incl
pusha
adc
pop
out
dec
pop
cmpsl
mov
cltd
sub
xor
add
push
mov
mov
and
push
fsubr
into
mov
xor
aaa
pusha
xlat
pop
inc
das
shr
jmp
cmpsb
out
push
fildll
mov
gs
popf
cs
scas
add
addl
xor
or
ret
in
mov
sub
or
jo
out
mov
lret
test
inc
leave
jg
jns
ficompl
mov
dec
ficomps
jmp
push
and
adc
jmp
movsb
inc
mov
pushf
repnz
notb
enter
test
loopne
mov
cltd
js
cmp
adc
mov
jnp
pop
movsb
lock
mov
xor
out
dec
add
dec
adc
dec
loope
adc
scas
jae
enter
jle
repz
xor
popa
mov
enter
dec
add
mov
mov
cld
sub
jns
in
push
jae
or
es
lds
mov
xor
push
lret
and
aas
sbb
and
aaa
add
icebp
sub
push
into
pop
jno
mov
fisttpll
add
test
add
pop
icebp
sahf
leave
fcmove
inc
jge
pop
cmp
fs
xor
hlt
pop
jno
out
ret
or
jge
or
mov
in
lcall
bound
jecxz
jo
sti
fadd
sbb
mov
imul
xlat
dec
xor
sub
clc
sbb
mov
sub
lock
dec
sahf
out
add
dec
loop
jb
js
xor
das
int3
cmpsl
mov
xchg
mov
or
in
stos
data16
fmull
outsl
dec
daa
mov
out
pop
and
push
jg
pop
push
movsb
fsub
inc
jmp
push
cmpsb
xchg
or
pop
cmp
mov
push
lods
loopne
movsl
add
repz
aaa
pop
dec
adc
push
dec
cmpl
inc
cli
add
mov
mov
jge
leave
and
dec
xchg
out
adc
mov
aaa
std
bound
xchg
ljmp
cli
mov
enter
data16
cld
pop
into
rol
pop
mov
scas
inc
cmp
test
or
inc
daa
adc
test
inc
cmp
xor
outsb
mov
cmp
data16
stos
jns
or
rcr
out
mov
or
xor
das
mov
lods
mov
adc
sbb
in
jno
popa
cmpsl
add
push
movsl
mov
or
cmpsl
mov
pop
shlb
jbe
and
push
jnp
adc
int3
rolb
ret
data16
iret
stos
xor
or
mov
mov
sub
mov
cs
fisttps
daa
inc
stc
xor
les
mov
pusha
loope
jbe
xor
xchg
xchg
imul
addr16
jb
xor
xlat
insb
xchg
add
lds
loope
aam
lcall
push
in
dec
xchg
out
fbld
xchg
or
fsubl
mov
lcall
scas
lcall
in
pop
jp
aaa
jmp
call
stos
pop
popf
cltd
and
xchg
adc
ss
mov
popf
xor
sbb
out
insl
test
add
shlb
cld
lock
add
std
rol
pop
jnp
cmc
dec
mov
in
les
int
fisttpll
addr16
pop
sub
or
adc
les
sti
and
xor
movsl
addr16
addl
movsb
mov
or
cmpsb
add
inc
jnp
and
ret
pushf
test
rol
xor
adc
jge
into
movsb
cmp
pusha
lcall
mov
mov
adc
adc
fbstp
mov
call
je
aad
cmp
push
pop
mov
test
aas
push
ret
in
adc
lret
insl
mov
mov
lret
add
cmc
adc
icebp
cmpsb
sub
mov
movsb
jno
loope
filds
imul
cs
sbb
loopne
jmp
add
repnz
sub
xor
repnz
and
mov
insl
adcb
iret
jo
daa
inc
jp
icebp
ss
mov
cmpsb
nop
lret
dec
mov
xchg
xor
addl
daa
ds
and
push
test
nop
jo
adc
xor
test
adc
push
fstpl
sbb
mov
pop
loopne
cmc
mov
cmp
movsb
pop
jns
sbb
test
pop
mov
pusha
fiaddl
and
jno
add
cs
mov
sbb
jae
andl
out
jbe
push
test
jmp
and
stc
fcmovnu
pop
cmp
sbb
xor
clc
dec
xchg
or
push
cmpsl
adc
lret
scas
test
pop
pusha
mov
bound
jle
dec
jo
xlat
sub
xchg
xchg
sahf
fiadds
cmpl
cli
adc
mov
and
mov
ds
aam
jns,pn
xor
rorb
jmp
dec
loopne
pop
xchg
aam
iret
sahf
sarb
xchg
out
lds
jo
jnp
jl
add
sub
adc
inc
xor
in
ss
out
jns
lods
loope
and
ljmp
frstor
sub
ret
lods
inc
enter
adc
and
in
xor
dec
fs
loope
loope
popa
jo
call
mov
and
lock
fs
add
add
aas
ss
lahf
stos
inc
mov
cltd
and
mov
testb
cmp
out
test
and
cmp
and
idivl
out
cmp
addr16
sarl
ds
sarl
stc
incb
mov
mov
pop
jecxz
lahf
and
adc
push
sbb
jns
mov
mov
fimuls
iret
pop
mov
std
mov
fildll
std
clc
adc
cmpsb
aam
cmp
and
mov
out
mov
pop
sti
xor
sti
rorl
fidivrs
les
mov
sub
sarb
xchg
hlt
pusha
ss
iret
dec
lds
stc
push
push
movsb
push
mov
fmull
loopne
andb
das
push
stc
mov
das
mov
xor
mov
das
xor
jp
sar
mov
loope
cmpsb
mov
mov
sbb
and
in
scas
xchg
stc
into
or
mov
shrb
pushf
jns
loope
jnp
jbe
inc
push
dec
scas
inc
sub
enter
adc
mov
fstpl
das
xor
std
sub
push
jp
pop
xchg
aam
adcl
stc
je
add
cs
inc
leave
sbb
insb
aaa
dec
inc
ret
lret
mov
je
aas
test
mov
jge
mov
fwait
cmpsl
cmc
cmp
sub
cmp
scas
cld
fiadds
and
std
in
mov
insl
xchg
lcall
insl
adc
xchg
mov
mov
ret
ret
jle
inc
pop
sbb
pop
ret
xor
or
dec
call
add
enter
pop
das
mov
fbld
jl
add
ret
loop
jae
push
imul
mov
or
loopne
sti
shrl
das
leave
add
sbb
repz
add
xor
pop
sbb
cmc
pop
iret
repnz
jmp
jns
sbb
jns
push
mov
pxor
aaa
sub
sub
aaa
ljmp
cli
icebp
jae
jnp
and
inc
pop
or
inc
rol
lock
dec
push
push
sub
mov
rclb
out
mov
sub
cmpsb
lods
mov
je
push
sub
pop
pusha
xchg
jnp
clc
push
movsl
push
xchg
fists
or
xor
inc
ljmp
adc
inc
movsl
or
daa
or
call
rorl
iret
mov
in
xchg
sub
pushf
clc
jecxz
and
xchg
inc
jbe
in
xor
mov
loope
loopne
rolb
stc
mov
lea
pop
pop
aaa
loop
movb
pop
std
scas
xchg
inc
mov
push
push
data16
shlb
jne
push
aaa
shlb
push
ror
sub
imul
mov
lcall
in
iret
movsl
mov
insb
push
adcb
adc
stc
add
or
mov
dec
xchg
in
xchg
mov
xor
dec
mov
hlt
xchg
popa
aad
test
das
movsb
cmc
in
ret
mov
mov
cld
cmp
aad
in
icebp
out
shrb
lahf
mov
mov
mulb
idivl
roll
mov
pushf
sar
adcl
fs
movsl
mov
push
nop
test
xchg
dec
jb
inc
mov
imul
adc
ss
lret
inc
cltd
lahf
or
xchg
rcrl
or
mov
imul
out
mov
jmp
fwait
cli
push
std
mov
ljmp
jmp
or
shlb
pop
add
add
inc
dec
pop
in
aad
xchg
xor
and
mov
stos
cli
push
leave
rolb
or
out
or
dec
adc
pusha
jp
int
sub
dec
movsb
jg
mov
adc
push
stos
shl
stos
xor
mov
js
mov
nop
pop
loop
lret
xor
inc
mov
add
js
insb
mov
subl
xor
xchg
pop
rcll
add
sub
pop
sub
std
push
push
pop
mov
sub
mov
and
test
test
mov
loopne
nop
scas
sub
adc
pushf
and
jl
cld
sbb
shrb
les
shlb
test
push
ljmp
jo
mov
into
andl
add
pop
cli
jecxz
mov
and
jle
loop
mov
jg
pop
mov
jge
andl
mov
into
pop
cli
out
insb
or
xor
adc
adc
cs
sbbl
pop
adc
test
inc
lods
dec
and
dec
lds
pop
pop
scas
lcall
sbb
push
dec
push
mov
fists
xor
lds
dec
jle
inc
stos
shlb
lods
sti
hlt
ss
mov
fisubl
mov
push
or
fwait
lock
cmp
add
sbb
sub
repz
inc
cmpsb
insl
insl
add
mov
jo
lret
or
std
test
cmpsl
mov
subb
xor
add
lods
mov
or
or
into
mov
fnstenv
lcall
pushf
sbb
inc
gs
jnp
stc
xchg
push
pop
mov
ja
xchg
adc
xchg
xchg
popa
mov
adc
out
jg
insb
das
sbb
push
in
lcall
dec
dec
in
pop
lcall
dec
push
in
mov
add
outsl
sbb
leave
pop
sar
xchg
popf
pop
xlat
fidivl
rcrb
popf
push
sub
hlt
jmp
pop
cli
popf
insb
jo
scas
insb
xor
xchg
sti
inc
dec
stc
mov
out
iret
sahf
cmpsl
sub
lods
xchg
sub
loop
sbb
mov
rclb
xor
jno
lock
pushf
add
and
lds
insb
into
pop
ss
and
jae
cmp
sub
jne
xor
data16
fs
rcrb
mov
xchg
cmp
clc
push
inc
mov
mov
dec
popf
push
xchg
xor
fistpll
xchg
pop
push
repz
sub
sub
les
inc
es
stc
xor
adc
mov
xchg
mov
fisubl
xlat
rorl
aam
in
ds
mov
lods
cmp
leave
lea
loope
rorl
mov
dec
cmp
outsl
int3
push
cmp
and
lcall
popf
push
inc
stos
mov
rcrb
shlb
lods
add
test
or
insb
ret
stos
push
jns
mov
xor
cmp
sub
insl
addl
pushf
xchg
xlat
dec
in
std
mov
jb
call
jmp
rorl
add
jmp
loopne
cmpsl
int
jb
pushf
jne
xor
cmp
rcl
iret
or
xchg
add
inc
ret
cmpl
test
cmp
mov
scas
out
ja
in
pushf
mov
popf
decb
or
mov
rcll
insl
cltd
testl
inc
and
xor
mov
mov
popf
jl
add
jmp
xchg
mov
or
outsl
mov
lcall
int
push
mov
adc
into
sbb
sbb
xchg
ljmp
in
sbb
bound
call
mov
test
mov
jno
sbb
mov
negl
inc
xorl
or
push
fildll
cmpsb
fs
jl
or
fsts
add
push
inc
lods
xlat
lret
jg
mov
test
xor
sbb
fcmovnb
imul
cli
stos
cmp
add
insl
adc
dec
mov
out
mov
sub
fucom
je
imul
scas
push
dec
out
inc
test
mov
sti
and
into
inc
or
repnz
aaa
cmpsb
idivl
inc
xor
stc
hlt
cmp
dec
adc
mov
inc
adc
adc
sti
loope
out
mov
ret
icebp
fldenv
or
andl
sub
aas
sti
aas
mov
sub
jnp
xor
add
push
or
stos
int3
les
in
stc
ret
mov
popf
jmp
cmpsl
jmp
je
fnstsw
mov
rorb
shlb
hlt
movsb
icebp
pop
into
mov
jo
mov
jmp
iret
loop
movsl
xchg
jb
push
insb
clc
push
xchg
jns
jmp
lock
adc
xor
inc
sti
in
cmpsb
add
jecxz
call
mov
add
scas
cmpl
mov
repz
test
inc
or
mov
cmp
adc
push
cmp
in
repz
sbb
enter
outsl
loop
add
push
mov
jno
dec
push
dec
out
adc
aas
jle
inc
add
pop
or
jne
arpl
inc
shlb
clc
push
adcl
lret
or
test
cmp
sbb
movsb
aas
mov
and
fistpll
imul
fisttps
cltd
lahf
mov
and
sbb
icebp
mov
fmul
lods
int
cmpsb
pushf
adc
mov
adc
adc
mov
in
adc
push
loope
leave
jns
fwait
call
es
popf
test
sbb
cmc
jns
sbb
int
mov
je
lods
sbb
mov
dec
test
aas
xchg
rcrb
xor
in
xchg
and
mov
mov
mov
and
dec
insb
lahf
and
mov
jecxz
repnz
pop
aad
inc
and
arpl
stos
add
and
or
rolb
out
inc
lcall
je
pop
xchg
stos
jno
jo
add
js
xor
mov
xorb
mov
dec
lahf
dec
clc
mov
pop
or
popa
sbb
sub
inc
aaa
pushf
xor
pop
sar
icebp
clc
insl
insb
xor
mov
adc
xor
aad
iret
xchg
push
rcll
mov
push
push
mov
fs
std
sahf
jecxz
adc
lahf
ss
mov
daa
in
aam
xchg
pop
mov
push
imul
adc
mov
pusha
mov
lret
mov
movsl
sbb
and
sbb
mov
jmp
lret
lods
pop
sub
mov
jae
cmp
mov
add
jae
test
std
js
andl
fs
jno
cwtl
mov
paddsb
jo
lret
jmp
or
subb
mov
pushf
popf
enter
fildl
push
scas
fnstcw
out
cmp
jne
pop
mov
test
aaa
lret
lahf
xchg
dec
loope
jbe
movsl
stos
dec
andb
insl
fcompl
and
push
stos
daa
sub
mov
aad
xor
dec
inc
jmp
push
adc
int
fdivp
lret
push
lods
lcall
inc
insl
in
es
mov
inc
inc
fimull
adc
ret
adcl
jns
out
jmp
out
imul
ja
jo
cmp
mov
adc
test
cmp
sahf
push
push
shlb
sub
pop
add
fbld
pop
pop
rcrb
mov
rcr
mov
into
adc
std
dec
sub
mov
mov
pop
ljmp
jne
adc
bound
lods
adc
stc
ror
mov
mov
int3
pop
jecxz
add
cmc
enter
cs
mov
xor
cmpsb
gs
insb
or
mov
jb
inc
jns
xor
into
divl
sub
push
adc
nop
or
mov
stos
adc
mov
pop
xlat
sbb
out
push
adc
popa
xor
mov
pmaxsw
ljmp
loopne
das
js
sahf
outsl
rcl
xchg
xchg
mov
xchg
stos
lock
bound
movsl
popa
sub
jb
jo
xor
mov
lret
aas
dec
orb
push
cmc
repz
fwait
sbb
sub
push
push
xchg
push
lcall
inc
pusha
cmp
jge
xor
lods
pushl
dec
sub
not
outsl
int
arpl
pushf
push
mov
imul
mov
out
lret
jae
push
push
call
jno
and
cmp
jmp
sub
mov
hlt
push
cmp
jbe
in
inc
or
mov
mov
outsl
adc
dec
out
add
or
add
testl
repz
stc
mov
cmpsb
sub
xor
cmp
adc
std
xlat
fstp
mov
imul
xorb
pushf
jo
mov
mov
ds
add
in
cmp
push
or
inc
xor
adc
sub
lods
jmp
jnp
xor
loopne
and
mov
sbb
sti
ret
dec
int
add
mov
jp
xlat
ja
lret
cmp
jle
mov
adc
mov
adc
xchg
icebp
sub
insb
das
push
insl
pushf
push
cli
out
push
daa
imul
das
andb
mov
sub
std
in
ja
add
lret
mov
setg
sbb
pop
inc
mov
xor
sbb
dec
pop
mov
popfw
mov
negl
xchg
test
in
lods
mov
sub
testl
mov
jo
sub
jmp
cmp
hlt
in
cmp
push
or
xlat
roll
and
add
xchg
fsubr
xor
stos
lea
aad
stos
pusha
je
adc
in
adc
mov
adc
mov
pushf
sbb
adc
rcrl
mov
xor
sahf
pushf
cmp
pusha
mov
stos
stos
add
pusha
adc
mov
lahf
mov
int3
aaa
xor
mov
fwait
mov
outsl
loope
clc
jl
push
out
mov
sub
and
jle
movsl
int
dec
aam
mov
pusha
icebp
xor
mov
pushf
ret
xchg
sbbb
popf
push
fists
mov
lea
popf
mov
sti
lret
clc
sbb
int3
lock
shrb
inc
je
lock
hlt
adc
rclb
gs
fmull
popa
decl
test
into
pop
lea
pushf
pop
pop
mov
testl
and
scas
sub
lahf
test
arpl
ret
add
ss
push
mov
push
insl
cli
icebp
dec
sarb
mov
sub
xor
sahf
mov
pop
sahf
push
in
sub
pushl
idivl
aas
into
sbb
dec
cmpsl
cmp
aas
sbb
xchg
mov
mov
mov
dec
xchg
inc
jmp
popf
mov
push
xor
pop
sbb
stc
scas
mov
loopne
daa
xchg
mov
mov
outsl
fidivrl
iret
mov
int
test
dec
stc
cmp
sbb
out
inc
mov
jle
in
jp
fmull
sub
aas
movsb
mov
outsl
leave
outsb
xchg
repz
or
jo
mov
jge
and
push
adc
dec
clc
cmpsl
inc
aad
or
shlb
inc
push
mov
cmp
sbb
inc
negb
push
xchg
jo
pop
ror
subl
cmp
jecxz
xor
pop
lods
daa
mov
movsb
in
fwait
leave
in
icebp
fwait
sub
loop
shll
xor
dec
mov
cmovl
lds
dec
icebp
nop
jecxz
lret
pop
cmp
pop
insb
popf
shlb
cmp
push
in
push
dec
jno
push
sbb
fwait
dec
je
ret
add
lret
ret
scas
cmp
jecxz
or
mov
xor
pop
dec
ds
insb
or
fnsave
fucomi
or
mov
push
repz
jbe
scas
or
cld
push
outsb
cwtl
in
fxch
repnz
fisttpl
push
fsubs
pop
mov
call
ltr
dec
arpl
fidivrs
fists
cmp
or
jmp
cld
cld
xchg
jb
adc
imul
out
int
test
or
sahf
mov
rcl
add
inc
cmc
sbb
out
out
mov
pop
ljmp
mov
popf
test
arpl
lret
add
inc
in
out
xor
sbb
in
int
aas
jmp
decl
test
or
into
and
jnp
adc
popf
adc
or
add
addr16
jo
xor
push
mov
mov
push
inc
dec
ret
cld
iret
rcr
aaa
pop
xor
ret
in
es
mov
add
rorb
jno
aad
scas
sbbl
or
das
xor
lret
add
inc
adc
sahf
sub
pushl
out
jne
in
xor
insb
dec
in
inc
jg
mov
adcl
gs
sahf
mov
push
addl
mov
lret
mov
cmpsl
or
dec
std
rcrl
adc
test
xchg
divb
pop
rclb
lahf
or
or
sbb
push
mov
nop
lret
out
loopne
mov
popf
xchg
movsb
fdivs
lods
insl
cmpsb
mov
ficomps
lock
clc
in
inc
and
add
test
jae
mov
or
jns
push
movsl
into
mov
cmp
xor
bound
mov
sbb
fstpl
sub
sarl
int3
add
int
push
fstpt
mov
xor
adc
lea
mov
repnz
into
in
js
jnp
test
stos
xor
pop
fwait
iret
std
mov
test
mov
mov
inc
add
pop
xchg
sti
xchg
and
pop
xor
and
jns
adc
push
mov
jmp
xchg
add
ljmp
cmp
or
inc
inc
pop
lds
aad
mov
rorl
xor
repz
inc
mov
sarl
sub
aas
pop
subb
cli
loope
pop
inc
xor
jb
fnstenv
jmp
jecxz
jge
faddl
pop
or
push
cmp
or
je
pop
scas
sti
or
sti
sub
pop
ljmp
jo
lds
push
jmp
add
inc
fcmovnb
adc
pcmpgtb
sub
imul
mov
ja
cld
ret
daa
out
cmp
mov
repnz
mov
rcl
mov
bound
scas
stos
fmuls
mov
or
aam
cmp
cmc
push
std
stc
pop
jmp
xchg
fldl
test
addl
jbe
sub
jne
fs
out
lret
mov
rolb
rcrl
ss
sbb
insl
cmp
lahf
jp
add
xor
ss
daa
loope
dec
xchg
dec
xchg
or
les
scas
or
cmp
pop
aad
inc
jp
jns
dec
or
add
mov
repnz
iret
aas
lock
stc
pop
xor
pusha
sub
cmp
sub
and
les
xchg
push
iret
dec
cmpsb
mov
push
dec
inc
pop
jmp
fcoml
fistpl
in
mov
dec
push
jae
push
hlt
mov
std
mov
popa
shl
fucomip
push
mov
pop
enter
mov
or
sarl
xchg
bound
test
fwait
int
cwtl
hlt
lcall
out
dec
add
in
mov
push
rcll
scas
mov
mov
negb
mov
push
adc
les
cmp
std
jae
mov
add
jno
cmp
jne
jbe
mov
mov
addr16
call
add
fcmovnu
iret
jno
pushf
or
jae
cs
inc
cmp
hlt
add
mov
sarb
ja
fs
lret
int
cld
in
sub
inc
leave
lock
push
out
adc
std
mov
push
sti
jge
lret
jae
mov
mov
cmp
stos
xor
mov
movsb
rcrl
xor
or
mov
das
sbb
mov
lahf
int
push
in
insl
out
adc
repnz
xchg
scas
fmul
jb
sbb
addr16
iret
repnz
cli
movsl
push
aad
mov
push
shll
push
lret
das
sbbl
mov
andb
xor
in
shll
mov
cmc
cmc
scas
js
pop
test
aam
xor
xchg
jbe
lahf
and
lods
lods
cmpsb
lcall
push
in
lcall
arpl
sub
test
aaa
popa
pop
add
mov
jl
clc
iret
aam
pop
lea
sahf
push
cmpsb
in
xor
mov
ret
test
jnp
push
jecxz
pop
jno
inc
fs
and
or
inc
movsl
sub
fadds
push
dec
enter
leave
push
out
xchg
cmp
push
je
pop
add
stos
int3
fdivrl
into
scas
cmpsb
push
cli
loopne
jl
shl
pop
jge
xor
mov
pop
mov
pushf
cli
fcompl
aam
push
xchg
or
adc
and
outsl
push
xchg
data16
out
or
popa
addr16
jns
popf
add
pusha
int
ficompl
dec
repz
flds
sub
xchg
sahf
sub
aas
int
jg
out
mov
inc
loope
cmp
pop
mov
in
lods
add
daa
orl
cmp
xor
mov
lock
ror
mov
test
stc
lods
test
andb
stc
popf
inc
add
adc
pushf
scas
int
and
jmp
loopne
clc
adc
jg
bound
aas
iret
adc
add
je
jmp
lret
lcall
dec
xchg
aam
insl
mov
cmpsl
jnp
sub
and
xor
divl
push
out
hlt
out
stos
inc
inc
out
jne
dec
cmp
in
or
dec
push
in
xor
or
cmp
enter
movsb
push
push
pop
and
pop
and
pop
jbe
inc
out
popf
popf
jle
std
sbb
sbb
aas
pop
fistpll
sbb
cmpsb
jg
icebp
call
out
repz
xor
mov
dec
mov
cli
fsubrl
test
and
int3
in
push
popf
mov
rclb
outsb
pop
xchg
fadds
int
mov
cltd
inc
or
cmp
movsl
or
pop
and
mov
pop
and
es
dec
dec
sbb
sub
mov
push
popf
vpshuflw
out
mov
push
lret
add
xchg
inc
shll
sub
cmp
sti
mov
inc
sub
sub
adc
int
xor
mov
jo
sbb
xor
cmp
mov
aad
mov
sbb
repnz
pop
add
repnz
sbb
divb
out
pop
loopne
pusha
outsl
negl
cs
std
fsubrl
fidivs
movsl
pushl
xchg
fs
enter
push
fs
hlt
pop
loop
xchg
mov
dec
rcr
sbb
mov
jl
popf
in
cmc
xchg
cmp
jb
dec
jne
xchg
enter
daa
int
dec
add
daa
cltd
or
repz
mov
add
sub
aaa
adcl
pop
add
fs
bound
push
add
mov
cld
fwait
insl
das
pop
xchg
iret
lcall
sbb
push
scas
pop
mov
push
arpl
pop
scas
dec
xchg
shll
out
xor
dec
add
xorb
inc
enter
push
sub
mov
nop
pushf
or
enter
mul
aam
adc
mov
aad
mov
sti
adc
mov
mov
mov
or
xchg
call
int3
xchg
fsqrt
sbb
out
fwait
cmc
xchg
or
daa
sbb
negl
fwait
jge
lea
inc
push
cli
xor
push
mov
pop
fidivrl
mov
and
out
rorl
xchg
outsl
jecxz
or
mov
into
orl
negb
mov
add
xlat
pop
std
fsubr
jmp
jno
adc
in
cltd
nop
int3
xor
int3
cmpsb
repnz
push
ss
testl
and
das
mov
pop
pop
ja
aas
imul
dec
push
std
jb
mov
lods
push
jge
adc
loope
out
insb
xchg
inc
push
sbb
stc
inc
pop
into
les
lds
or
mov
jge
aad
inc
in
lods
movsb
test
nop
mov
mov
sub
xchg
or
inc
add
mov
mov
mov
or
sub
add
inc
sbb
and
xchg
cmc
rorl
leave
sub
xchg
cs
mov
int3
xlat
mov
jo
hlt
inc
imul
pusha
jmp
mov
or
jge
xor
icebp
lds
ss
mov
fwait
jl
enter
cmp
int3
push
mov
push
fs
xor
fiadds
je
cli
not
jo
scas
loope
or
mov
mov
sbb
out
adc
add
data16
rcrl
sub
sbb
dec
sti
xor
cmpl
pop
xchg
out
mov
dec
stos
mov
inc
test
add
sbb
mov
bnd
xlat
xor
jns
cltd
jns
dec
xor
test
cmp
jo
pop
xchg
mov
sbb
pusha
stos
dec
sub
dec
mov
fwait
inc
hlt
and
pop
sbb
cmp
into
cmp
xchg
dec
outsb
add
jmp
scas
mov
fwait
out
xlat
jo
sar
add
jmp
xor
or
loop
dec
push
out
or
push
hlt
fimull
adc
pop
aas
scas
sub
xor
mov
and
in
inc
mov
enter
adc
in
idivl
cmc
test
xor
lret
test
xor
sti
push
shl
dec
pop
jno
cmp
inc
sub
jae
push
pop
lret
sahf
jge
popf
push
scas
push
mov
movsl
aas
fdivrl
pop
jmp
push
fnstenv
pop
movsl
xor
daa
cli
das
sub
mov
adc
gs
ds
fdivs
mov
jecxz
sub
mov
add
or
movsb
sub
and
pusha
pusha
clc
mov
jno
pushf
bound
mov
mov
inc
push
insb
mov
out
inc
or
cmp
mov
hlt
mov
pop
or
adc
jo
inc
popa
fisttps
pop
fisubl
sub
pop
add
jl
push
jno
ss
aad
dec
push
adc
or
andl
hlt
shll
xchg
repz
js
pusha
jo
push
mov
stc
movsb
xchg
jns
pusha
and
scas
mov
inc
push
cld
mov
or
addb
pushf
pop
sbb
imull
outsl
push
movsl
sbb
xchg
mov
cltd
fldcw
arpl
adc
jnp
or
push
and
dec
hlt
dec
mov
jge
and
add
repnz
sub
or
lea
outsl
fistpll
inc
push
mov
imul
sbb
push
mov
pop
sub
std
mov
fs
mov
mov
cmpsb
int3
push
sarb
ret
mov
push
insl
push
fnstenv
jg
popa
cmp
in
mov
popa
jmp
addl
int
cmpsl
fwait
mov
pop
gs
pop
std
faddl
inc
aam
push
xchg
out
fcmovnb
out
in
xchg
jns
pop
mov
outsl
enter
adc
popf
dec
mov
dec
adc
xchg
push
fstpt
mov
popf
rcrl
lods
pop
test
add
fmuls
fptan
aad
mov
popa
and
pop
dec
outsb
inc
int3
push
clc
push
dec
sub
mov
adc
xchg
sbb
ds
addl
adc
call
mov
ljmp
je
dec
sbbb
mov
cmp
imull
lock
fsubs
ljmp
mov
and
adc
daa
pop
inc
push
and
mov
adc
or
and
fwait
in
lahf
lds
dec
dec
decl
sub
inc
sub
cmp
add
rcrb
add
or
out
test
adc
xchg
xchg
test
dec
mov
jmp
insb
movsl
xor
pusha
jp
xchg
jns
imul
fs
stos
xor
popa
push
sbb
and
push
aaa
sbb
lahf
push
sarl
and
xchg
jg
inc
xchg
mov
mov
adc
insl
sbb
clc
aaa
lock
dec
in
xchg
mov
jne
cwtl
push
ror
push
sbb
mov
xor
mov
or
mov
dec
loope
outsl
mov
add
cmpsb
push
bound
sub
in
aam
cs
and
std
rcrb
and
lock
sahf
iret
mov
dec
int3
stc
mov
push
sahf
popf
movb
sar
push
xlat
dec
xor
jge
cmpsb
call
lea
pushf
inc
or
jecxz
jno
in
cmpsw
rorb
outsb
jmp
icebp
lds
shlb
jbe
mov
aad
jmp
jecxz
mov
test
jecxz
pop
mov
sbb
xchg
sti
in
xchg
cmp
leave
scas
mov
ljmp
cli
mov
addl
adc
int3
fs
and
clc
cmpsl
mov
dec
sar
je
mov
pop
jmp
subl
or
test
pusha
aam
imul
in
popf
jmp
orl
inc
das
add
popa
push
mov
lock
les
push
scas
xor
test
aas
pusha
pop
call
je
ljmp
pop
pop
adc
mov
lret
xor
stos
sbb
outsb
adc
das
and
and
push
and
push
inc
loope
popf
in
inc
mov
out
dec
loop
add
andl
xchg
sbbb
adc
lret
in
xchg
xchg
mov
inc
sbb
out
jbe
xchg
inc
loopne
imulb
int3
loopne
loope
xor
jg
popf
pop
je
fucomi
aam
xchg
aas
mov
ret
aad
pop
jmp
jne
jecxz
ss
or
mov
mov
inc
loopne
mov
int
into
push
dec
and
sahf
inc
jbe
jno
jecxz
mov
mov
and
inc
lods
mov
out
ficoms
arpl
lret
repz
pushf
cltd
loope
cmpl
push
dec
mov
xchg
cmc
aad
jbe
movsb
xchg
push
adc
mov
push
repz
adc
leave
hlt
dec
sbbl
push
jae
xor
rcrb
jle
pop
aaa
in
popa
xor
clc
rcl
leave
xbegin
lret
mov
jbe
mov
cli
movsl
xchg
pushf
push
xor
adc
into
aas
lahf
sbb
aad
imul
xchg
dec
popf
or
cmpb
ret
inc
mov
pop
jbe
and
xlat
popf
imul
add
ss
mov
aaa
mov
clc
pop
in
cmp
fnsave
cltd
sbb
out
mov
push
jnp
xchg
push
sbbl
fs
jno
add
mov
add
stos
sbb
sbb
mov
js
sbb
loopne
xor
js
movsl
popf
pop
je
outsb
test
push
imul
push
jg
repz
add
jb
cmp
fldenv
rorb
in
in
and
inc
jo
insb
jbe
ja
inc
and
into
repz
cltd
int3
mov
popf
sbb
mov
adc
ds
mov
xor
pop
cli
sbb
lret
test
and
and
enter
fldenv
leave
mov
gs
mov
inc
jmp
xorb
stos
inc
adc
add
xchg
pop
in
xchg
mov
jecxz
test
push
pusha
aad
ss
movsl
pop
fildl
xor
cmpsl
sub
aaa
stc
dec
cmpsb
aad
push
lds
pop
jl
movb
dec
push
lcall
fcomi
out
std
push
sti
adc
jo
dec
jl
je
xchg
jp
bound
pop
sbb
in
adc
mov
data16
mov
loopne
mov
jmp
mov
sub
xchg
inc
insb
or
inc
repz
stos
lret
addr16
add
loop
test
push
imul
std
andb
nop
pushf
aas
mov
movsl
scas
jnp
sbb
and
sbb
popfw
push
cmpsl
push
mov
in
ds
scas
cmpsl
pop
sbb
or
jle
xchg
sahf
jmp
push
call
and
mov
push
sti
inc
cmc
stc
dec
mov
xor
loop
ss
xchg
jmp
mov
jnp
and
test
ret
jne
and
stos
dec
mov
mov
dec
cmpsb
test
push
ficomps
mov
cmpsb
or
pop
fidivrs
lods
call
fldl
inc
push
or
and
std
inc
adc
pop
aas
cmp
or
mov
fwait
dec
mov
pop
test
cmpsl
addr16
lods
ret
mov
pop
mov
ret
jno
int
aam
pop
mov
xor
mov
dec
fmuls
insl
xor
and
pushf
and
lcall
outsl
xchg
jae
add
lds
pop
push
and
in
clc
pop
fwait
mov
xchg
mov
mov
lcall
call
cld
leave
push
sbb
rcll
mov
movsb
xchg
jne
cmp
sarl
int3
jle
fsubrl
jg
dec
mov
sbb
lcall
pop
mov
cmp
rol
xchg
mov
ficoml
in
enterw
jne
pop
sbb
jno
pop
jecxz
outsb
inc
lock
mov
xchg
pop
dec
inc
stc
ret
add
mov
hlt
jge
outsb
rcrl
dec
sbb
fdivrl
jge
mov
popa
xchg
mov
adc
inc
aas
std
add
mov
stc
out
inc
or
scas
iret
inc
and
cmpsb
adc
adc
dec
fisttpl
out
insl
cmp
test
mov
inc
call
js
dec
into
inc
gs
leave
mov
cltd
arpl
jl
inc
scas
imul
addr16
inc
or
xlat
push
push
pop
sub
or
repnz
arpl
inc
popa
sar
in
cli
in
fs
repz
pop
or
push
or
cwtl
insb
cmc
mov
pop
insb
xchg
mov
stc
test
inc
dec
ror
gs
call
cld
movsb
sbb
mov
data16
pop
xor
add
jp
bound
adc
ret
mov
pop
icebp
outsl
lods
std
cmp
jle
loop
cli
mov
cwtl
jbe
fimuls
popa
push
fnstsw
orb
mov
push
insl
pop
nop
push
insb
les
mov
imul
adc
call
mov
push
push
int
jno
idivb
pushf
sub
inc
mov
hlt
subl
sbb
daa
cmp
mov
mov
xchg
xchg
out
adc
rcrl
push
aad
pop
clc
test
in
adc
lahf
sti
stos
adc
xchg
jb
cmpl
sbb
ret
push
inc
sbb
jo
scas
xchg
jp
pop
or
shl
dec
cmpb
mov
mov
sarl
jl
mov
shll
lahf
dec
add
arpl
push
out
push
stc
in
mov
xchg
sbb
cmp
out
shlb
int
dec
popf
inc
fsubl
imul
sbb
xor
dec
in
data16
add
dec
jmp
sub
loop
repz
ljmp
pop
adc
ficompl
pop
repz
and
sub
pop
mov
lock
int3
lods
cltd
shrl
in
icebp
push
bound
arpl
movsb
sub
arpl
mov
sub
mov
insb
mov
xor
nop
lods
movsb
or
dec
loope
ljmp
int
dec
out
idivl
xacquire
xor
test
bound
das
je
or
pop
pop
out
aad
pop
cmpsb
ffreep
sub
jnp
mov
fnsave
pop
cmp
mov
out
ds
adc
jo
cli
int
xchg
xor
pusha
cmpsl
dec
jbe
rcrb
pop
pop
mov
leave
add
jne
pop
ret
xor
cmpsl
dec
push
ja
cmpsb
ret
movl
cmp
sti
test
push
and
lock
lret
lret
jp
imul
mov
jo
pusha
or
or
incl
jbe
mov
pop
out
or
mov
sbb
addb
in
dec
cltd
fidivrs
jo
cli
repz
dec
pop
pop
cmp
popf
in
sub
imul
push
dec
clc
push
pop
in
test
test
mov
sub
mov
jp
and
enter
mov
les
mov
push
ja
xchg
enter
adc
imul
fnstsw
mov
aad
sbb
bnd
cmpsl
xor
popf
sbb
clc
mov
inc
pop
mov
outsl
jno
and
cwtl
sub
mov
shlb
dec
sub
movsb
cmp
mov
movsb
xchg
pop
sarl
clc
fwait
cmp
jge
mov
push
stos
push
fs
mov
loopne
addl
arpl
or
pop
movsb
xor
cmp
xchg
mov
jae
repz
xchg
xor
inc
popa
sub
xor
js
lahf
pop
rorl
jle
mov
jae
dec
lods
imul
mov
xchg
jne
sbbl
sub
jns
push
jl,pt
jb
inc
mov
xor
pop
mov
jne
or
mov
inc
leave
jb
cmp
push
jl
inc
test
jnp
mov
test
inc
push
ret
adc
mov
rcr
ss
nop
pop
repz
popf
adc
js
inc
mov
enter
jns
inc
outsl
sub
lret
add
scas
mov
xor
rclb
stos
mov
pop
lea
mov
push
into
idivl
nop
popa
push
sub
add
movsb
xor
outsl
sub
ret
jl
les
add
sub
aad
xchg
cmp
inc
aam
shll
push
xchg
mov
insb
xchg
insl
jne
fwait
dec
icebp
ret
andl
push
mov
jbe
fdivs
mov
clc
mov
lret
push
xor
out
push
mov
clc
rorl
lods
sub
lret
xchg
das
sub
cli
mov
clc
inc
mov
cmp
enter
lret
test
push
push
cltd
and
cmpsb
fistps
or
insb
ret
push
xor
mov
in
outsl
repnz
mov
adc
add
into
int
xor
stc
fcomps
out
inc
xchg
mov
test
leave
or
ficoml
shll
adc
mulb
repnz
repnz
call
iret
cmc
lods
xchg
sti
mov
bound
xchg
loopne
in
xchg
xchg
cmc
push
sahf
push
stos
push
mov
clc
stos
negl
cmc
lahf
xchg
movsl
out
fcomps
sub
mov
test
mull
stos
aad
adc
pop
and
test
cmpl
rorl
mov
jmp
push
cmpsb
mov
gs
adc
jb
add
insl
inc
or
rol
mov
andb
mov
sub
outsl
movsb
sti
xchg
das
mov
push
mov
dec
cs
jne
lahf
cs
cmpsb
jge
sbb
sub
cmp
std
sbb
or
sub
mov
inc
loope
and
sbb
or
sbb
aad
sub
shll
and
push
idivb
lcall
xor
jno
mov
sub
push
sbb
shlb
rclb
std
daa
rcll
cwtl
mov
aad
clc
pusha
outsb
add
jns
mov
imul
mov
outsl
jns
jae
mov
push
pop
or
dec
sub
cmpsb
mov
je
sbb
add
icebp
mov
aaa
xchg
jp
iret
push
sub
or
repz
enter
aaa
xor
add
mov
xor
fsub
ja
popa
fwait
cmc
lods
shrl
lret
frstor
adc
out
or
jns
push
pop
out
xor
pop
rol
popa
out
xchg
sbb
sub
sbb
clc
xchg
call
pop
vmptrld
add
popa
xchg
fiadds
jg
mov
mov
and
les
mov
mov
iret
subl
or
test
cmc
and
mov
rolb
fs
mov
adc
fsubrs
enter
clc
sbb
add
dec
cmc
shll
bound
jno
ss
mov
test
pushf
inc
mov
pop
sti
and
sub
mov
je
shlb
cmp
xchg
fwait
test
cmpsb
dec
rclb
js
fcmovnu
hlt
jae
xor
lock
gs
imul
sub
cmpsb
mov
sub
adcl
stc
jg
test
aad
repz
pusha
mov
xchg
cs
arpl
xchg
jg
jo
jo
enter
stc
mov
jecxz
jbe
fsubr
xchg
push
push
push
sub
xchg
or
imul
loope
mov
fwait
mov
inc
andb
sbb
jge
dec
mov
hlt
pushf
push
xor
mov
mov
xchg
mov
mov
sti
loopne
xor
push
in
dec
add
adc
fucompp
je
jge
idivl
xchg
mov
jno
das
ds
fs
data16
sbb
and
inc
es
mov
push
push
xchg
mov
cmpsl
gs
sbb
popf
or
or
cli
push
les
test
push
pop
pop
lods
xchg
scas
out
and
imul
in
and
lods
push
fstps
pop
fistpll
push
cmp
test
inc
or
mov
jbe
jns
inc
sahf
adc
cltd
push
sarl
jb
pop
call
inc
fdivr
push
addr16
sbb
insb
adc
lds
outsb
pop
dec
dec
sar
mov
or
icebp
movsl
jne
dec
mov
xchg
cmp
mov
jge
jbe
inc
mov
cmpb
or
mov
aad
sub
pop
cmc
nop
add
mov
gs
mov
int3
jecxz
bnd
mov
dec
inc
sahf
ficoml
lret
lods
pop
cmpsl
rolb
cs
mov
xor
mov
pop
adc
xchg
pop
sbb
repnz
xchg
bound
nop
lods
push
xor
pop
mov
push
test
out
sub
xchg
push
mov
out
or
lcall
lds
jp
push
popa
sbb
in
mov
push
xchg
pop
sbb
shl
sti
mov
out
or
sbb
dec
in
and
sbb
out
xchg
xchg
movsb
xchg
subl
into
push
push
mov
dec
lods
dec
insl
daa
dec
iret
sti
scas
mov
sti
xchg
sbb
add
mov
leave
insl
cmp
xchg
push
rolb
push
sub
mov
lret
xchg
mov
and
adc
jbe
les
stos
imul
cmc
dec
cmc
sub
int3
nop
ficoms
jmp
sub
out
adc
loop
adc
std
orb
inc
test
loope
gs
mov
call
xchg
fstpl
insb
loop
lahf
mov
fwait
test
lds
cmpsl
mov
jl
push
popa
pop
lahf
leave
lock
mov
test
js
pop
daa
mov
add
bound
or
mov
cltd
jo
add
fiadds
cltd
cmp
fldcw
test
movsb
nop
hlt
loop
cmp
outsb
add
push
iret
andb
mov
jo
push
lahf
and
out
sbb
shll
inc
sbb
and
mov
ffree
orb
mov
sub
pop
mov
jp
jbe
popf
push
sbb
pushf
pushf
jge
icebp
push
jg
pushf
in
les
fbld
lods
dec
daa
shr
lea
in
xchg
jmp
leave
push
ds
stc
gs
adc
push
ljmp
test
mov
xchg
pop
add
stos
xchg
lds
mov
jmp
mov
dec
iret
sti
pop
popa
repz
sbb
and
inc
and
and
test
js
out
stc
jg
sub
cmc
and
sub
mov
daa
pop
add
lret
sub
idivl
mov
imul
xor
sahf
xchg
xor
shrb
das
aam
mov
jle
cli
lods
xorl
mov
idivl
cmp
cmp
jbe
sbb
lret
mov
xlat
sbb
mull
sub
cmovl
scas
rclb
adc
cwtl
sbb
sub
sub
imull
jmp
mull
mov
cmp
fcoml
sbb
scas
mov
xor
popa
mov
test
iret
scas
lock
push
push
lods
xchg
inc
lahf
push
cmc
mov
mov
popf
ss
xor
fabs
fidivl
stos
pop
push
or
push
sub
imul
pop
dec
aad
cmp
js
inc
mov
mov
pop
mov
insl
or
les
scas
in
enter
jne
xchg
insb
rcll
jb
dec
add
jl
mov
sbb
rep
push
adc
orb
xor
mull
pop
in
sub
fwait
push
mov
popa
iret
out
xor
cmc
mov
rclb
dec
mov
js
fwait
insl
loope
sub
es
popf
js
aam
xor
cmp
jle
ss
movsb
jae
sbb
adc
xor
mov
cmpsb
div
cmpsl
out
cltd
sub
cmpsl
and
iret
es
ds
sub
add
cmpsb
mov
je
sarb
push
lahf
ljmp
mov
adc
or
dec
pop
sub
inc
lods
sbb
jl
adc
jnp
in
fmuls
cmp
inc
insl
scas
xlat
outsb
in
mov
adc
mov
js
cld
cmp
sub
inc
imul
aaa
pop
pushf
add
aas
sbb
cmpsl
xchg
inc
in
icebp
call
fcomip
sub
aam
movb
imul
cmp
mov
dec
add
test
addr16
daa
jo
jnp
pop
xchg
or
sbb
add
mov
xor
or
sti
mov
jae
mov
shlb
and
jns
mov
pop
ljmp
ljmp
xchg
xchg
out
iret
adc
push
mov
mov
push
gs
leave
mov
out
fcmovnbe
orb
movsb
jmp
inc
cmp
shll
mov
subl
adc
push
lods
jl
lret
xor
loope
testb
fldt
je
into
popa
aad
push
xor
aam
dec
in
mov
cmp
mov
xorl
jmp
lret
cwtl
mov
rorb
fwait
add
and
push
jp,pn
adc
into
mul
add
pop
jno
in
add
fs
or
cld
jle
and
cmp
flds
dec
or
stc
lea
out
movsl
or
lds
lock
out
xlat
push
or
repz
dec
mov
test
pop
push
scas
mov
shrb
lods
negl
or
jmp
jl
popf
cld
pop
inc
lods
mov
addr16
pop
adc
fldl
in
lahf
movl
mov
xor
lahf
mov
stc
sti
push
popa
mov
xchg
fisubrl
mov
shlb
pop
mov
jg
enter
iret
push
mov
xchg
pushf
dec
sbb
mov
rol
pop
xchg
ja
mov
jns
push
sbb
test
sti
and
jbe
movsb
mov
repnz
repz
mov
scas
scas
jne
repnz
jae
ds
insl
or
mov
popf
and
mov
in
gs
and
mov
xchg
dec
shrl
sahf
mov
dec
stc
arpl
mov
jae
xlat
push
fnsave
fs
mov
cmpsl
je
lock
ja
lock
lods
cmpsl
dec
xor
in
cld
xchg
and
out
loope
mov
inc
ret
cli
scas
stos
mov
int
mov
sti
inc
sub
pop
jmp
mov
mov
insb
scas
mov
inc
mov
sub
mov
pop
icebp
ret
jo
xor
out
stc
ljmp
outsl
notl
js
lret
bound
test
mov
jo
aaa
frstor
sti
jo
mov
sbb
in
sbb
inc
pop
push
jo
and
popa
pop
jo
ret
lcall
call
lret
fildl
xchg
push
jns
in
jae
xchg
outsl
mov
nop
in
xor
lcall
mov
jae
addl
jno
movsb
mov
sahf
pop
inc
cmp
sbb
jne
roll
xor
adc
into
push
inc
xchg
sbb
jge
sub
push
insb
inc
orl
ror
enter
fsubr
loopne
dec
push
xor
mov
lods
pusha
push
mov
jecxz
push
clc
leave
jl
pop
add
push
sbb
std
push
inc
out
mov
iret
adc
xchg
xor
cmp
push
push
add
scas
sti
mov
and
scas
mov
ja
adc
cwtl
push
add
xor
adc
cld
sbb
dec
test
movsb
or
xchg
mov
adc
adc
aaa
sub
dec
fs
fldt
imul
test
daa
sahf
hlt
arpl
jecxz
dec
mov
daa
jae
push
pop
and
inc
lods
fwait
scas
dec
jo
mov
fnstcw
or
jle
aam
mov
mov
xor
stc
ljmp
pop
lock
mov
lcall
mov
dec
stc
out
test
ror
sub
sub
cmpsl
repz
js
cmp
clc
adc
out
adc
add
and
movsb
xor
pop
mov
arpl
into
scas
jg
out
daa
push
mov
sbb
xorl
and
push
jo
enter
out
int3
push
sahf
addl
les
mov
push
adc
ret
aam
mov
jle
iret
stos
sub
add
bound
mov
xchg
add
std
xor
mov
inc
add
push
stc
jmp
mov
jl
and
fs
cmp
pusha
lcall
ds
hlt
and
pop
std
sbb
daa
mov
bound
add
add
jle
adc
clc
jle
imul
sbb
mov
cs
inc
mov
in
or
fdivr
sti
cmp
cs
out
inc
loop
out
arpl
daa
dec
mov
xchg
jno
ds
cmpsb
shrb
sarl
jle
mov
sub
inc
sub
mov
sbbl
aad
mov
out
sub
mov
push
mov
sub
pop
mov
dec
push
sti
sub
int
lret
lock
jo
popa
adcl
add
push
test
andb
add
rol
loopne
in
ret
or
jge
push
fimuls
sbb
pusha
cld
fldpi
jg
lods
inc
loopne
loope
jl
loope
fisttps
aam
fdivl
movsb
aam
arpl
jno
jge
cwtl
pop
push
mov
enter
inc
mov
jl
and
stos
cmp
je
cmc
dec
in
jp
push
in
xor
xor
jp
es
and
sbb
aad
loop
jno
xor
stos
mov
inc
lret
icebp
fcomip
lods
outsl
shll
xor
lea
sti
mov
cmpsl
leave
sbb
xchg
cmp
mov
leave
scas
int
out
sub
jae
add
rcl
mov
or
push
xor
pop
in
add
loopne
jl
in
test
inc
sti
addl
mov
push
outsl
fs
and
shrl
imul
movsb
xchg
add
lds
fsts
sarl
adc
aad
push
repz
jle
jg
mov
xchg
jno
aaa
in
insl
daa
mov
mov
es
push
ud0
in
sub
mov
ret
out
mov
cmpsb
mov
pop
out
clc
popf
adc
popf
pop
xor
pop
fadds
jnp
out
test
lods
mov
sti
mov
daa
mov
and
xchg
outsb
mov
fldl
mov
sbb
dec
in
inc
adc
cli
fsubr
shlb
les
pushf
int
je
subl
out
ret
rorl
insl
icebp
jecxz
in
repz
fldenv
or
sarl
push
stos
push
push
fidivs
cmp
dec
jns
shll
in
sbb
jecxz
inc
scas
pop
mov
push
mov
in
inc
mov
xlat
jle
test
in
mov
adc
subl
jb
cs
clc
sub
das
mov
mov
lahf
mov
ret
pop
inc
add
mov
nop
lds
subl
adcb
fcmovb
jns
ret
sbb
cmp
xchg
adc
test
mov
test
call
sbb
lea
sub
sub
xor
stc
pop
je
lret
jg
xor
loope
fwait
xchg
cmp
jns
jecxz
push
sbbl
add
xor
push
pop
xchg
ret
inc
mov
or
aam
mov
shlb
cmp
pop
add
imul
imul
lret
jbe
lret
xchg
int3
in
jne
scas
pop
pop
mov
in
add
ja
push
mov
fbstp
aam
aaa
js
icebp
imul
mov
fdivs
jns
fld
push
sub
arpl
gs
sti
push
add
dec
subb
ja
outsb
xchg
lock
xchg
or
inc
push
loope
push
fwait
stc
out
xor
adc
stc
add
insb
mov
mov
sub
inc
add
daa
arpl
cmpsb
ljmp
xor
sbb
push
pushf
sub
out
int
lds
inc
mov
aad
xchg
or
and
and
mov
add
in
push
fsts
mov
adc
adc
mov
and
int
rcl
dec
push
pop
add
fidivl
jge
in
and
icebp
lock
cmc
call
push
lea
push
leave
add
pop
mov
xor
pop
mov
stc
icebp
mov
insb
dec
sbb
push
bound
inc
push
mov
lock
daa
pop
push
pop
sub
xor
jmp
jne
stos
push
sub
daa
sbb
sbb
and
mov
jne
ret
imul
jae
fimuls
movsb
dec
lret
pop
and
lods
xor
jle
out
pop
pop
inc
cli
lock
and
pushf
sub
mov
mov
xchg
ss
sbb
xchg
leave
and
lods
jl
add
lcall
sbb
xchg
push
das
lods
mov
or
xchg
leave
call
pop
dec
xchg
sub
mov
mov
jo
in
lods
movsl
aaa
stc
inc
sbb
xor
cmp
sub
push
stos
aaa
push
into
aam
popa
add
push
xor
jl
mov
jne
lret
mov
fdivr
sbb
jl
mov
dec
xchg
sahf
sahf
lock
or
cmpsb
pusha
dec
jns
jns
popa
into
jno
pop
push
jo
push
bound
inc
sti
sbb
std
jecxz
cwtl
sarb
gs
out
cltd
sbb
fwait
inc
sbb
jne
and
js
popa
sub
fsubs
inc
xor
mov
jecxz
mul
xchg
inc
cmp
ret
js
sbb
jle
push
iret
adc
int
push
int3
push
scas
outsb
das
add
in
push
adc
sub
addl
xchg
push
pop
sbb
adc
or
decl
daa
daa
mov
mov
popf
pop
popf
and
insl
movsb
cmp
ret
or
sbb
scas
fcoms
das
pusha
or
das
xchg
adc
adc
fs
xor
jmp
add
mov
icebp
scas
fidivl
faddl
loop
jp
fwait
movsl
xor
in
sub
negl
daa
dec
jbe
fstl
push
xor
push
test
cmp
cmpsb
aad
xor
jbe
inc
stos
push
nop
movsl
or
push
sbb
out
inc
inc
fimuls
stc
movsb
jecxz
adc
std
scas
sysexit
das
jb
mov
lcall
popa
loopne
movsb
loopne
popf
in
xlat
or
shl
sub
fwait
pusha
dec
mov
hlt
data16
ret
subl
test
pop
mov
lahf
mov
pop
mov
cmpb
xor
loop
in
adcb
add
icebp
adc
call
aas
outsl
mov
mov
ja
xchg
repz
sbb
inc
or
gs
fistps
stos
xor
jnp
mov
data16
popf
aad
and
push
push
add
mov
jo
in
loop
sbb
xor
lods
push
addl
sub
sub
mov
push
sub
mov
dec
and
dec
and
or
push
fidivs
xchg
or
adc
stc
in
sti
cmp
mov
mov
mov
in
or
xchg
movsb
test
pop
or
repz
idivb
mov
stos
out
lock
out
cmpsl
lahf
cltd
mov
dec
repnz
pop
fistpl
mov
jmp
rclb
push
mov
loop
cld
and
mov
fmul
div
add
push
cmc
js
cli
dec
jnp
or
jb
xor
out
in
stos
jmp
xchg
pop
out
inc
jp
mov
lock
lds
push
loopne
aam
mov
xor
imul
lds
fabs
push
js
xchg
jge
add
mov
in
scas
lahf
test
mov
pop
inc
stos
xor
jae
inc
repz
sub
aam
dec
repz
cs
dec
dec
xor
jno
lret
icebp
mov
lods
jl
das
in
icebp
call
loope
sbb
or
adc
mov
push
mov
test
adc
xor
cmp
cmc
xchg
iret
js
jne
mov
jg
xchg
daa
and
or
dec
stos
mov
pop
push
add
jg
fwait
add
and
mov
es
and
fisubrl
adc
cmpsb
xchg
mov
and
iret
test
or
je
mov
repnz
cwtl
pop
js
mov
push
sub
pop
mov
add
and
mov
pmaxsw
int3
enter
xlat
js
pop
dec
outsl
sbb
push
cmp
inc
out
test
aas
push
cmp
bound
in
lret
dec
mov
pop
fwait
push
xor
into
ljmp
cmp
mul
shll
shl
push
dec
cmp
test
subb
int
sub
aaa
arpl
inc
adcb
icebp
mov
or
stc
mov
xchg
ss
xchg
sbb
sub
add
adcb
add
mov
sbb
btrl
pusha
and
popa
out
addb
adc
call
filds
cmp
ret
out
inc
push
int
lods
insb
jo
and
mov
movsb
inc
je
in
or
mov
lock
mov
sub
sbb
xor
mov
nop
jae
add
adc
int3
inc
dec
les
mov
icebp
mov
adc
pop
rcrb
adc
jmp
pop
aas
xchg
sbb
sub
in
dec
fists
fmuls
cmc
insl
jl
mov
or
jle
insl
push
push
adc
pop
adc
pop
inc
movsl
adc
jae
mov
dec
fimuls
push
xchg
out
mov
pusha
subl
mov
fnstsw
push
add
sbb
rcll
not
dec
push
xor
push
hlt
xchg
test
rcl
cld
out
adc
pushf
mov
xor
pushf
out
sbb
sub
pop
mov
lds
push
lds
arpl
sbb
add
lret
jmp
mov
iret
cmp
xchg
pop
cs
mov
sub
mov
flds
add
xor
inc
out
cmpsb
pop
or
or
shlb
rorb
call
movsl
outsl
pop
std
adc
scas
mov
jbe
sbb
imul
push
inc
shr
repz
sub
outsb
sahf
lods
into
pop
cmc
jb
or
push
jg
xchg
adc
mov
addr16
xor
pop
or
arpl
xor
adcl
jmp
push
stc
mov
adc
jl
shlb
cmp
aam
or
push
jno
dec
aam
inc
pusha
push
and
sub
sub
pop
mov
sub
jp
hlt
add
push
lahf
add
into
jbe
cmp
daa
lret
popf
outsl
xor
sub
adc
lods
pusha
push
sarl
rclb
push
mov
daa
jno
xor
sub
aaa
dec
icebp
push
jmp
xchg
push
adc
stc
rcl
std
cs
pop
pop
cmpsb
or
movl
jle
mull
jns
test
xchg
mov
sub
mov
outsl
mov
mov
incl
push
sbbl
sub
leave
jne
dec
xchg
inc
jecxz
clc
jbe
cmp
int
xchg
push
lahf
mov
push
loopne
push
xor
adcb
adc
add
aas
mov
insb
loopne
jmp
sar
jo
or
jmp
adc
sub
mov
sub
mov
push
fstp
mov
adc
mov
sbb
cld
dec
into
cmp
ljmp
adc
scas
scas
leave
pop
pop
cmc
out
in
mov
cltd
scas
das
and
adc
sub
sub
mov
test
out
pop
or
jle
aaa
push
push
mov
xchg
cld
and
cs
cwtl
xor
jecxz
adc
and
es
outsb
mov
xchg
dec
mov
sahf
jno
dec
out
hlt
inc
cs
lret
pushf
andl
xor
call
and
lods
sbb
gs
mov
out
xlat
dec
jle
sbbl
or
push
lock
xchg
cmp
jae
xor
test
xor
pusha
push
into
ds
mov
and
arpl
filds
fnstsw
fildl
testl
clc
js
sub
out
xchg
cmp
adc
adc
daa
sar
mov
and
movsb
test
cmpsb
jo
xor
daa
call
or
movsb
xchg
cmp
repnz
jnp
in
fisubl
and
push
faddl
in
push
adc
cmc
aad
mov
or
xchg
xor
push
fimuls
andl
hlt
stos
pusha
mov
mov
and
rcrb
test
pop
cmc
call
pop
lds
pop
mov
cwtl
or
or
fsubl
loope
dec
xlat
fs
fistpl
cwtl
fistpl
add
loop
mov
es
inc
cld
inc
xor
int
add
mov
mov
popa
mov
pushf
movsl
and
scas
xor
bound
out
dec
jg
push
jecxz
into
xor
in
mov
cs
and
out
xor
ljmp
inc
clc
inc
in
or
icebp
pop
mov
jmp
jl
in
jecxz
lcall
push
push
ret
sub
lret
push
loopne
jne
loope
xchg
hlt
negl
dec
std
inc
out
and
adc
sbb
ss
lods
lahf
clc
mov
sbb
sbb
push
loope
aam
icebp
xor
enter
pop
inc
movsb
dec
cmp
movsl
shlb
int3
aam
repz
and
lret
repz
cmc
xor
bound
sub
aam
xor
add
jmp
push
sarl
mov
dec
mov
pop
loopne
xchg
outsl
mov
inc
and
imul
sbb
fsubs
add
in
jo
mov
outsl
pusha
jg
push
jae
mov
dec
imul
pop
and
cmp
xchg
rcrl
icebp
popa
xchg
scas
and
or
cmp
mov
popa
mov
pop
daa
fisubrl
xchg
cmpsb
scas
mov
push
fnsave
sub
test
das
in
inc
pop
add
xchg
sbb
lret
insb
xor
jbe
xchg
stc
mov
mov
xchg
xor
dec
fsts
cmpsl
push
or
sub
and
jb
stos
jno
inc
or
cmp
roll
movsb
adc
call
in
jg
repnz
sbb
fnstcw
and
ja
adcb
fld
add
push
rclb
dec
jnp
inc
xlat
dec
testl
mov
and
cmp
shll
mov
add
dec
sti
insl
stos
test
rep
jb
jno
mov
cmp
dec
in
dec
xlat
mov
fnstsw
mov
test
aaa
aam
mov
clts
cs
out
ret
test
jo
xlat
mov
and
sbb
and
cs
xor
in
mov
xchg
cs
mov
leave
mov
push
outsb
push
fs
sbb
xor
dec
add
xchg
addr16
test
sbb
jb
outsb
addl
aad
add
in
jle
lcall
push
xchg
xchg
push
pop
fucom
dec
xchg
movsl
in
mov
dec
in
and
sbb
sub
je
dec
mov
adc
imull
xor
aam
dec
sbb
es
and
mov
daa
lea
mov
mov
rcr
es
test
xchg
rorl
imul
mov
es
mov
mov
pushf
xchg
aam
dec
ss
scas
fstpl
pop
mov
pop
bound
stos
into
xor
pop
or
mov
lds
push
dec
aaa
xchg
or
mov
jle
dec
add
pop
dec
ret
dec
pop
mov
cmpsb
mov
in
cwtl
orl
jle
mov
aas
xor
jae
into
and
dec
daa
jmp
cmovae
xlat
stc
cmp
and
dec
and
cmp
sub
add
dec
add
sub
xor
inc
roll
mov
mov
jb
lock
jg
adc
add
mov
and
mov
dec
pop
aam
mov
mov
loopne
outsl
fwait
or
shrl
jnp
scas
movsl
pop
scas
jo
fisubrl
mov
sti
aaa
lret
push
aaa
je
add
ja
in
out
jmp
inc
test
or
or
xchg
add
loopne
lret
ret
mov
jecxz
add
inc
jns
adc
jae
mov
fsubrs
xor
sub
xchg
and
lret
push
dec
xor
push
data16
push
cld
shlb
mov
test
stc
lea
mov
fs
mov
ret
cld
dec
ja
mov
sbb
ret
stc
mov
and
adc
insl
in
lea
lret
lock
cld
sub
lret
in
pop
lcall
jmp
lds
std
je
test
xor
shl
shll
mov
scas
shll
sbb
xor
adcl
pushf
js
jge
xchg
mov
pop
unpcklps
aad
lahf
imul
adc
jbe
orl
push
cmp
inc
stos
aas
pop
adcb
push
inc
mov
std
in
fwait
xchg
scas
push
xchg
shll
in
or
aad
jl
mov
inc
add
mov
adc
mov
into
adc
call
pusha
or
and
mov
scas
adc
lea
jle
shl
push
leave
movsb
add
mov
leave
sub
add
inc
pop
sub
mov
icebp
daa
push
push
sbbb
jae
add
lcall
cmp
adc
int
mov
pop
outsb
daa
pop
scas
add
scas
mov
cmpsl
iret
cmp
mov
jge
out
addr16
add
rcrl
es
insb
pop
js
jns
arpl
popf
int
scas
and
cli
insl
notl
dec
or
mov
dec
xchg
fisubrs
clc
aaa
xor
fwait
sahf
xchg
cmp
sbb
push
in
outsb
xchg
xchg
aaa
negl
pusha
mov
hlt
mov
ret
mov
dec
jnp
xchg
imul
repz
pop
mov
pusha
push
lds
mov
pop
mov
mov
imul
xor
test
cltd
add
repnz
hlt
dec
mov
lods
push
sbb
and
push
mov
aam
pop
call
or
xorl
mov
xor
jmp
test
hlt
or
sbb
sti
lret
aam
push
daa
lcall
xor
gs
mov
add
mov
lret
dec
sarl
dec
lods
push
lea
notb
imul
mov
adc
mov
mov
call
jmp
jb
in
jp
int
out
mov
push
or
xchg
mov
push
mov
add
mov
in
cld
notl
mov
pop
or
testl
inc
rcll
sub
insl
push
sbb
push
popf
adc
adc
and
fwait
jecxz
movsb
repnz
mov
pop
es
rcr
repz
bound
add
mov
loope
test
xchg
and
dec
pop
mov
pop
ljmp
or
jnp
jge
roll
jg
insl
jmp
loopne
mov
mov
cwtl
ret
xlat
adc
dec
call
inc
mov
mov
mov
movsl
mov
mov
repz
cmp
into
lods
push
xor
mov
fistpll
add
xchg
sub
mov
push
mov
sub
test
pop
lods
pop
jbe
adc
add
loop
add
mov
mov
jb
push
lahf
jo
ja
and
pop
cmp
in
mov
mov
push
aam
pusha
lret
stos
movsb
mov
sti
addr16
push
jle
sti
loope
scas
sub
adc
or
xor
push
xchg
jle
jno
ja
loopne
and
outsl
or
xchg
sbbl
xchg
xlat
pop
jge
adc
or
and
test
mov
jmp
sub
ss
or
jle
cs
push
xor
insb
sub
arpl
sub
dec
hlt
data16
cltd
in
icebp
les
or
mov
mov
push
cmp
ret
sub
popf
or
cmc
ret
dec
imul
and
out
sbb
das
mov
mov
ja
xor
lret
addr16
shl
test
inc
dec
xlat
in
xchg
inc
mov
adc
inc
imul
dec
in
mov
jmp
or
xor
out
push
dec
jnp
mov
push
and
push
adc
out
sbb
jl
push
ds
push
out
insl
inc
jae
popf
or
test
jnp
jb
push
cli
pop
cmp
mov
aaa
push
adc
push
popa
mov
mov
dec
insb
fiaddl
in
ficomps
jl
xchg
jo
cmc
and
les
push
lahf
ss
sub
sbb
pop
lahf
xor
cmp
mov
mov
fldl
adc
lret
mov
inc
ja
cmp
mov
imul
pop
xchg
adc
lods
mov
push
xchg
mov
popf
or
jl
xor
mov
dec
or
stos
out
daa
out
mov
inc
mov
int3
sub
or
jbe
xor
stos
sbb
jbe
sbb
js
pop
jmp
push
cli
das
negb
imul
bound
cltd
pushf
mov
pop
insb
lcall
and
mov
add
pop
shll
push
ret
lret
push
je
cmpsb
jns
ficoms
inc
cmpsb
cmpsl
pop
mov
cltd
aaa
repnz
inc
jnp
test
push
cmp
adc
test
jbe
loopne
mov
dec
push
sub
push
adc
sub
mov
in
mov
xchg
iret
jnp
xchg
data16
lea
test
cld
leave
cmp
in
mov
iret
into
xchg
int
jns
data16
lret
addb
or
pop
push
repz
pop
iret
push
cmp
fcmovnb
repz
in
test
xchg
mov
in
js
mov
jmp
sbb
mov
xor
jmp
jmp
arpl
jae
gs
ret
mov
or
out
mov
jo
scas
push
scas
push
std
push
stos
inc
pushf
call
adc
cwtl
dec
fnop
call
inc
inc
imul
adc
fs
jnp,pt
imul
lret
popa
cmc
cli
sbb
leave
fcoml
xchg
mov
add
iret
test
cmp
push
push
ja
pop
mov
dec
or
out
das
jo
les
cltd
int
std
mov
jle
push
mov
int3
mov
or
jne
mov
inc
int
rorb
pop
lods
push
test
orb
bound
xchg
pop
lahf
mov
push
jp
cld
xchg
outsb
xor
lret
or
int3
or
fwait
cmp
adc
xchg
mov
cld
dec
add
iret
mov
pop
mov
sahf
shlb
sbb
jnp
sbb
inc
and
dec
in
dec
fidivl
lds
adc
jg
sahf
addl
leave
mov
pushf
jl
sub
ret
into
mov
rolb
add
pslld
in
cmpsb
xlat
pop
daa
xor
in
scas
aaa
push
mov
into
pop
dec
stos
std
xchg
hlt
mov
mov
lahf
add
outsb
mov
push
dec
dec
adc
insl
iret
jle
fisttpl
int3
mov
cmp
adc
fcmovbe
xchg
out
adc
add
cld
mov
and
rclb
mov
mov
imul
or
fisttpll
ret
mov
rcr
adc
jno
out
cmpsb
lcall
dec
loope
pop
sub
iret
test
incb
mov
dec
adc
pop
jle
and
jg,pn
fdivrs
lock
std
ss
inc
adc
mov
or
fwait
jnp
fbld
mov
mov
gs
loop
push
inc
incb
js
dec
cs
mov
cmp
cmp
popf
insl
loop
mov
cmpsb
jp
add
adc
adc
scas
mov
cmp
mov
sarl
sub
out
fwait
dec
jecxz
mov
lret
aam
sub
dec
mov
pusha
sub
call
loopne
leave
lods
mov
popf
xchg
inc
repnz
inc
insb
shlb
das
lcall
aaa
jl
movsl
loop
push
sbb
dec
fidivrs
add
pop
sub
vsqrtpd
out
or
xchg
and
aad
test
mov
divb
mov
push
int
cmp
out
test
xchg
cmp
insb
scas
js
push
pop
mov
inc
mov
pop
mov
jl
jne
dec
enter
in
testb
ficoms
adc
xchg
daa
push
ss
or
subl
lods
fisubrs
sar
cmpsb
mov
jne
testb
xor
ret
rcl
jmp
shrb
mov
setg
push
add
dec
inc
out
je
popa
loope
or
mov
leave
or
lods
std
add
adc
rcll
test
adc
loopne
into
pop
cmpl
dec
add
clc
inc
test
ss
pop
outsb
xor
lock
dec
lahf
push
inc
ret
cld
addr16
out
stc
icebp
push
out
test
nop
testb
testl
jecxz
add
into
mov
ret
and
inc
nop
rcrb
roll
pusha
dec
inc
mov
xchg
rcrl
flds
jle
mov
xor
ss
inc
or
icebp
mov
pop
jae
lods
inc
arpl
aas
mov
addb
lret
int
or
aas
test
and
xchg
addr16
and
sbb
push
pop
outsl
mov
lods
cwtl
or
push
lcall
push
cmp
je
jb
mov
clc
xor
mov
and
push
sbb
mov
pop
jae
shlb
inc
adc
mov
int3
cmp
xlat
xchg
fdiv
dec
in
or
mov
std
insb
insl
pop
repnz
rorb
jge
outsl
popa
mov
fdivrs
lret
fcoms
xchg
and
movsl
rclb
sub
push
gs
std
push
and
dec
ljmp
outsl
int
gs
das
movsl
mov
inc
icebp
sbb
lcall
sti
cmp
int3
imul
inc
add
movswl
and
pushl
push
sbb
inc
pop
loopne
cmp
cmp
pop
jns
pusha
imul
scas
mov
insl
dec
xor
push
and
dec
in
ret
sbb
pop
in
mov
movsb
mov
scas
jg
mov
lods
pop
jp
scas
divl
lret
or
pushf
jl
dec
mov
fadd
cld
repz
dec
mov
cmp
jno
sub
je
out
mull
scas
mov
add
les
icebp
sub
jne
aad
mov
dec
sbb
lock
pop
out
jno
aas
jmp
aam
test
mov
lret
fbstp
mov
and
test
xor
lahf
into
imul
adc
and
mov
push
xchg
fdivrl
inc
in
mov
push
xor
int
cmpsb
ja
neg
cmp
xchg
cli
sub
dec
pop
in
mov
icebp
mov
sub
clc
and
push
in
gs
sub
cld
inc
mov
out
popf
out
push
pop
sti
shll
aam
cmp
out
pop
repz
fiaddl
push
std
jnp
psrlq
shrl
xor
fldenv
aam
pusha
pop
xchg
dec
aam
jmp
mov
rcl
aad
rcrb
in
cld
or
insl
adcb
sub
loopne
mov
inc
int3
push
movsb
mov
rcr
push
push
cmp
lods
push
scas
lods
in
dec
sbb
clc
mov
or
pop
sub
jbe
sub
jne
cli
cld
cmc
loop
sar
mov
sbb
arpl
sahf
leave
pop
push
popl
mov
mov
xor
movsb
icebp
push
sar
aaa
jb
and
sbb
push
lret
lcall
fistps
push
jl
xchg
push
bound
fisubrl
and
iret
adc
mov
incb
push
out
mov
cmp
out
mov
pop
push
fidivl
gs
test
ss
pushf
xor
fwait
mov
and
cli
adcb
shlb
xor
outsb
lahf
in
std
jle
jbe
adc
xlat
mov
and
sbb
cmc
sub
test
add
pushl
mov
insl
arpl
cwtl
mov
sbb
xor
call
inc
pop
in
mov
lcall
sarb
fstpl
push
xchg
sbbl
xor
dec
mov
inc
xor
or
dec
xchg
fs
cmp
rorb
mov
bound
nop
cli
je
cld
push
daa
aam
mov
push
mov
mov
sti
lret
repz
cli
cld
inc
enter
es
cmp
leave
cmp
mov
pop
movsl
loope
or
dec
ror
insb
adc
pop
mov
cmpsl
stos
xchg
out
cmpl
bound
imulb
in
std
repz
out
xor
or
divb
push
sub
sarl
adc
aad
mov
push
mov
arpl
popf
das
fwait
pushf
mov
pop
ret
shll
lret
icebp
add
cmpxchg
fwait
loop
pop
inc
jne
bound
test
sub
in
int3
jnp
popf
fidivs
imul
add
and
pop
sbb
clc
sbb
aad
in
les
sarb
lock
push
insl
add
mov
xor
cmp
adc
in
out
jns
aam
sbb
shrb
aas
xor
hlt
into
outsb
pop
mov
lods
jecxz
mov
pop
stc
push
out
out
dec
pushf
mov
dec
and
pusha
aam
aam
ja
loop
sub
enter
and
fcomp
cmp
icebp
inc
cs
loope
aas
adc
lods
stc
hlt
cs
aam
lods
pop
in
test
lret
js
fbstp
std
mov
leave
outsb
pop
shll
push
push
bnd
pushf
movsl
jp
dec
icebp
out
clc
push
jle
push
adc
int3
les
xor
stos
in
push
and
pop
movsl
ret
testl
xchg
inc
mov
or
mov
in
push
push
mov
fwait
xchg
rcrl
jbe
leave
leave
sbb
inc
lcall
int
push
clc
divb
cld
push
xchg
xchg
sub
pop
mov
pushf
int3
adc
clc
mov
adc
popf
arpl
sbb
cmp
push
std
push
and
and
lahf
pop
pop
lods
push
dec
push
inc
in
fcmove
leave
push
or
into
push
fnstcw
xchg
jl
dec
jle
dec
pusha
cltd
stc
push
pop
insl
insb
xchg
push
mov
ds
inc
cltd
xchg
cli
lret
stos
mov
xchg
sti
addl
movsb
or
lret
pushl
or
push
xchg
inc
xchg
movsb
push
dec
test
stos
mov
aam
push
jge
pop
sar
adc
jne
imul
mov
jecxz
add
jnp
cmp
jle
shll
js
std
jge
push
and
gs
pop
xlat
scas
aas
repz
add
jmp
jecxz
in
into
js
push
xlat
ret
inc
test
ss
sarl
jge
ficoml
mov
pushf
pop
pop
and
push
and
notl
imul
loopne
jmp
push
mov
rcl
aad
adc
jecxz
add
mov
iret
lds
fistl
testb
inc
icebp
ret
setg
mov
insl
pop
mull
out
imul
mov
cmp
cli
scas
push
pop
xchg
mov
add
stos
stc
in
or
sub
mov
mov
mov
adc
mov
es
mov
data16
push
mov
sti
jmp
mov
jp
cmpsb
loop
pop
stos
mov
jg
mov
add
xor
rclb
jle
pop
addr16
jns
das
push
jmp
push
sarb
adc
mov
jp
cwtl
aam
adc
js
sbb
jl
ljmp
cmp
jmp
dec
clc
ljmp
shlb
ljmp
mov
pop
leave
mov
enter
mov
push
pop
out
icebp
stos
jno
lds
jnp
pop
leave
shl
and
pop
in
jecxz
add
fistpl
sub
dec
lods
xor
popf
pop
out
movsl
mov
enter
hlt
dec
push
js
mov
pop
aas
mov
clc
lods
cmpsb
add
mov
jg
popa
jb
leave
fs
mov
and
mov
jnp
or
repnz
lds
insl
jmp
sbb
ret
or
jo
jecxz
inc
in
fdivrl
jo
dec
xchg
addl
lods
int3
stos
mov
xchg
adc
repnz
or
or
out
jno
insb
lds
movsl
testl
iret
jae
and
inc
jle
mov
cld
mov
cmp
lar
cmp
xchg
scas
mov
mov
aaa
mov
or
aas
inc
imul
add
pop
pop
aas
lock
dec
mov
mov
sbb
pop
lods
les
push
in
jge
or
andl
lock
test
mov
shlb
mov
test
push
pop
or
pop
test
and
std
cmpl
sub
mov
rorl
lods
mov
insb
shl
sbb
jge
out
xor
adc
xor
jne
mov
sar
les
dec
cld
cmp
movsb
mov
movl
xlat
mov
test
icebp
mov
ret
sbb
sbb
and
cmp
insl
out
jl
lcall
in
movsb
flds
mov
ret
cmp
fisttpll
jbe
orl
cmp
lcall
sbb
mov
lock
inc
pop
or
cwtl
mov
mov
mov
ret
mov
jg
mov
rol
mov
sahf
and
rolb
lret
mov
mov
test
fcmovbe
adc
mov
sahf
out
pusha
sti
movd
repnz
std
or
xchg
orl
sahf
cmc
fs
cmp
push
jo
push
rorb
rclb
jne
push
or
xchg
adc
push
repnz
pushf
cmp
mov
and
lahf
test
gs
fldenv
lods
lahf
xchg
push
mov
in
out
enter
mov
ljmp
ss
cmp
xchg
aad
in
or
ja
jecxz
subb
out
and
push
lods
xor
pusha
inc
xchg
cs
inc
xchg
cld
pop
lret
aam
lea
iret
jo
icebp
stos
ljmp
mov
and
ja
cmpsl
ljmp
pop
or
adc
xor
cmovs
cmc
sti
mov
outsb
aam
js
adc
sar
bound
inc
xorb
mov
dec
jb
pop
or
sub
mov
js
jecxz
in
les
ja
out
push
shll
and
sub
mov
sbb
roll
in
popf
dec
ret
fistpl
out
mov
call
sbbb
mov
xchg
fsub
xor
aam
xchg
push
arpl
cli
mov
das
sbb
inc
jne
and
loope
fwait
nop
imul
dec
pushf
mov
mov
sbb
out
push
xor
mov
and
dec
dec
lock
in
push
sbb
jo
push
lahf
and
gs
jl,pn
sbb
mov
mov
mov
push
lret
pop
cmp
and
jge
xchg
fwait
jnp
repnz
mov
aam
cmc
mov
out
loope
mov
js
and
add
sbb
cltd
and
aaa
xchg
flds
iret
pop
mov
sbb
cld
adc
adcb
pop
fsubr
nop
push
xor
push
test
and
ljmp
sarl
adc
addr16
fisubs
stos
push
mov
into
mov
mov
inc
cmp
mov
fcoml
addb
or
call
test
subl
xor
dec
inc
lock
aad
daa
add
inc
dec
mov
dec
pop
data16
ja
stos
mul
xchg
out
xchg
inc
fmull
adc
jb
mov
inc
test
scas
pop
mov
and
leave
psubusw
arpl
in
movsl
mov
shr
or
data16
cmp
shrb
idiv
xchg
mov
mov
jnp
fbld
dec
add
repnz
and
enter
popf
push
loop
mov
adc
jl
or
clc
jnp
pop
add
ror
into
arpl
aad
pop
cli
mov
sbb
out
cmpsl
fwait
shll
lret
cltd
xchg
jp
in
mov
mov
inc
adc
call
sub
jle
and
mov
mov
lret
or
xchg
jmp
aad
mov
xchg
jno
push
pushf
daa
adc
in
out
mov
cmc
loope
xchg
iret
push
xchg
in
xchg
movsl
movsb
mov
mov
cmp
enter
sub
jecxz
lods
or
lock
out
mov
cld
push
ja
xor
pop
jne
lods
dec
xor
add
mov
into
xor
or
scas
inc
pop
std
sub
and
push
push
imul
outsl
lods
mov
ficoml
xor
xchg
shlb
les
sub
movsl
dec
lock
or
dec
mov
icebp
push
stos
sbb
adc
jge
dec
sub
dec
sbb
out
sbb
mov
ficoml
stos
scas
pop
sub
dec
dec
mov
ret
data16
popa
mov
dec
mov
mov
int3
sub
jo
mov
add
mov
into
popf
cmp
xor
shlb
jl
inc
cltd
mov
mov
fsubr
jo
or
push
mov
jo
xor
adc
or
and
dec
mov
movsb
push
stos
lcall
in
daa
fcomi
scas
lods
sbb
lods
cs
sub
adc
enter
in
add
scas
push
xor
lahf
in
stc
sbbl
adc
pushf
and
add
jno
xchg
cmp
mov
lcall
xchg
or
and
aaa
fs
xor
lret
imul
mov
push
sbb
inc
xchg
test
popa
sub
clc
mov
stos
sarl
dec
dec
pop
lret
fs
mov
pop
sub
jge
popa
je
mov
mov
jne
sub
std
std
xchg
push
inc
insb
and
mov
popa
cmp
imul
adc
pushf
pop
rcl
xor
xor
sub
mov
ret
cmp
subl
mov
bound
je
mov
lds
repnz
cwtl
popa
aaa
sti
cmp
insb
push
mov
mov
ret
dec
pop
sti
sub
ja
add
jns
fsubl
dec
sub
fists
jo
mov
imul
xor
xor
dec
int3
into
into
outsl
aas
push
aad
rorb
scas
movsb
js
jle
stos
sahf
sbb
ja
xor
fwait
jno
jl
rcrb
mov
push
sbb
dec
or
hlt
lock
mov
imul
xor
lcall
lahf
sahf
jbe
or
fucompp
aad
hlt
scas
cmpsb
push
jmp
idivb
fcoml
fs
xchg
and
stc
mov
jmp
pop
clc
and
pop
and
popa
inc
dec
mov
or
pop
pop
xchg
call
add
sub
or
mov
rolb
outsb
sbbl
jecxz
add
std
mov
cs
dec
mov
mov
jp
cli
imul
adc
cmp
sub
cmpl
xchg
dec
jns
les
iret
leave
dec
inc
pop
push
inc
xor
icebp
xor
and
dec
mov
icebp
call
push
ds
fnsave
mov
ja
ljmp
mov
lahf
mov
jle
add
movsb
jecxz
push
add
cmp
sti
ud0
mov
xor
sbb
jle
sub
pop
cmp
int
add
lock
cmp
notl
push
mov
test
xchg
fwait
rorb
out
int
int
adc
adc
jg
dec
gs
les
es
mov
in
push
pushf
inc
lock
popf
in
mov
xchg
imul
enter
lcall
pop
jle
in
xchg
dec
jge
imul
cmpsl
and
shrb
fucom
push
lea
push
and
out
sub
add
cmp
xor
jmp
adc
xor
pop
popa
xchg
icebp
mov
lea
xchg
push
icebp
xchg
dec
dec
enter
pop
jecxz
je
div
mov
xchg
sar
aam
cmc
mov
xlat
and
cltd
repnz
rol
xchg
push
ljmp
cli
neg
inc
sbb
mov
sahf
out
cmc
inc
cmc
or
sbb
aaa
jae
sbb
push
stc
in
scas
cltd
in
bound
fidivrs
mov
bswap
sbb
pop
inc
pop
in
fistps
lahf
shll
xor
sub
cmp
in
sbb
xchg
mov
mov
out
sub
int
push
test
popf
sti
sbbb
dec
push
fadds
aaa
pop
jge
enter
rorl
sub
lret
or
mov
test
mov
addl
inc
ret
shrl
cmp
pop
add
loope
sub
cwtl
xor
xchg
mov
imul
orl
add
dec
cmp
test
outsb
mov
xchg
outsb
mov
xchg
jne
movsl
jns
sub
lods
lock
adc
stos
es
xor
jge
stos
cmc
adcl
lock
mov
sub
add
icebp
cmp
push
out
sbb
jnp
xchg
add
insb
push
daa
dec
and
and
gs
es
insl
ret
idivb
aaa
mov
mov
xchg
out
inc
and
ror
lret
imul
dec
scas
mov
mov
pop
push
test
mov
aam
mov
mov
lret
sbb
in
lret
insl
xor
out
cmp
sbb
push
aam
add
inc
in
mov
inc
out
dec
adc
sbb
loopne
int
mov
int3
in
je
in
enter
mov
shl
sub
push
pusha
arpl
das
or
loopne
jge
mov
mov
push
ja
int3
js
xchg
imul
mov
fxch
jecxz
fsub
lods
cmp
scas
jmp
aam
mov
xor
mov
push
dec
rcrb
and
inc
pop
out
push
mov
pop
or
xor
push
lret
mov
fisubrl
sub
scas
lcall
into
inc
and
in
mov
jmp
pop
and
cmp
pop
pop
add
int
jl
cmp
sbb
xchg
mov
dec
cmpl
aad
test
adc
push
pop
pop
jecxz
dec
mov
adc
mov
repz
pop
repnz
push
mov
add
push
frstor
xchg
mov
clc
out
mov
jb
icebp
lret
pop
adc
adc
push
sbb
mov
gs
push
pop
jle
inc
xor
jp
add
lea
pop
jnp
push
or
out
pop
aas
lea
leave
shrl
mov
lret
add
or
and
mov
add
sbb
outsb
xlat
cmp
and
push
test
mov
pop
add
mov
stc
hlt
lcall
sbb
leave
push
cli
mov
int
dec
inc
jnp
call
in
sub
pop
push
and
mov
popf
sub
movsb
test
mov
scas
imul
in
ja
cmc
test
rolb
inc
inc
icebp
add
ds
shr
jbe
adc
std
and
xchg
test
pop
in
mov
ds
insb
dec
add
add
daa
leave
iret
pusha
push
mov
xor
fildll
ja
je
das
rclb
fisubs
leave
push
in
subl
pusha
push
mov
cmp
shlb
das
xor
repz
sarl
fwait
imul
sbbb
int3
xchg
and
push
insl
movsl
sti
mov
mov
out
sbbb
adc
sbb
pop
adc
sti
out
sbb
dec
std
mov
pop
cmpsb
das
mov
imul
cmp
ja
cmp
rclb
aas
popf
outsw
xor
xchg
push
add
mov
lods
xor
xor
stos
xchg
stos
ret
pop
das
test
ret
lret
lea
pushf
imulb
loopne
mov
mov
addl
inc
mov
push
xorl
sbb
jge
xchg
xchg
clc
xchg
jo
and
dec
or
jecxz
daa
movb
inc
in
lds
les
cmp
mov
cli
daa
test
dec
loope
call
jnp
lea
sti
int
les
in
xchg
cmp
mov
inc
daa
repnz
sbb
xchg
inc
sbb
fcomi
daa
and
mov
test
repz
mov
out
adc
pop
mov
in
sub
jmp
add
xchg
cmp
stc
mov
jo
in
adc
xchg
or
inc
or
inc
stos
sbb
cmp
test
into
leave
or
lahf
pop
cld
add
popf
add
in
aas
or
sbb
cmp
xchg
test
xor
das
pop
xlat
ds
rolb
fisubrs
add
xor
fstl
mov
lret
shlb
mov
mov
in
jbe
lret
repz
inc
fidivrl
fs
or
mov
rol
cli
mov
mov
popf
popf
sar
mov
lahf
xlat
and
or
sbb
stos
xor
js
xchg
xor
fimull
out
loope
sti
ja
cld
into
fdivrs
les
sbb
movsl
cmp
imul
popf
xorl
cli
mov
in
add
imul
xchg
clc
repz
push
inc
leave
dec
sbbb
dec
insb
pop
stc
cmpsl
cmp
nop
loopne
xchg
wbinvd
data16
sub
cmp
dec
jns
or
aad
sub
xlat
jne
jno
pop
je
adc
cli
and
mov
data16
jne
add
mov
xchg
ret
ret
mov
in
push
movsl
test
ljmp
out
bound
into
movsl
push
jmp
lods
xor
ljmp
inc
in
and
and
adc
aam
mov
movsb
push
fcoms
test
scas
repnz
mov
movl
sub
fucomp
into
xlat
dec
xor
movsl
xchg
adc
addl
lds
or
mov
mov
mov
cmp
jb
cmp
bound
push
jge
cld
inc
xchg
xor
lds
mov
mov
jecxz
mov
das
cmp
dec
jbe
push
or
enter
stc
push
fsubr
arpl
aam
das
sbb
and
cmp
cmp
xchg
push
xor
xor
std
inc
in
repz
js
in
mov
cmpsl
fwait
sti
dec
aam
add
popa
xor
insl
loope
push
aaa
pop
ss
imul
and
out
inc
repz
pop
lea
sbbl
cmp
push
imul
stos
ret
fsubs
ret
in
lahf
xchg
mov
daa
fldenv
mov
daa
mov
arpl
shrl
movsl
sub
daa
testl
push
mov
add
push
push
xor
cmp
jmp
ds
xchg
xor
mov
das
cmpsl
push
stc
pop
sbb
add
mov
sbb
dec
xchg
sar
loope
xchg
or
add
xchg
fcmovne
das
cmp
fs
push
hlt
loop
rclb
add
imul
inc
xorb
cmpsb
stc
add
inc
icebp
lea
push
mov
ficoml
shrl
leave
cmpsl
mov
mov
daa
fidivs
outsb
adc
repz
fwait
sbb
and
jae
dec
dec
push
loop
cmp
sti
jo
popa
mov
test
fcmovnb
xor
fnsave
cmp
xchg
xor
aad
add
test
jae
fsincos
loop
cmp
fwait
inc
repnz
aam
push
sub
aas
mov
lods
fcoml
sbb
xor
fimuls
mov
call
repnz
mov
mov
addb
and
pop
pop
das
jl
aam
dec
pop
add
data16
orb
jmp
loopne
movsl
ds
lcall
cli
cmp
cld
fidivrs
sbbb
pushf
sbb
in
shlb
test
call
push
sarl
xor
je
scas
fisttpl
loopne
lock
fdiv
out
sub
jb
inc
xchg
xchg
mov
inc
and
xor
push
hlt
cltd
divb
fldcw
dec
jmp
rcrl
nop
pusha
cmc
arpl
fmull
in
sahf
fiadds
movsl
jae
int3
negb
xchg
mov
add
and
lcall
out
sbb
mov
fmulp
jo
sub
lahf
in
add
mov
popa
mov
aas
add
aad
stos
pop
testl
push
jmp
dec
inc
fmuls
lea
sbb
sbb
mov
lock
in
inc
imull
cmpsl
je
out
popf
jns
push
push
std
loopne
jnp
pop
fdivs
adc
jmp
pop
cmp
sbb
sub
push
sarb
imul
mov
mov
sbb
cmp
push
and
lock
cmpsl
fimuls
popa
inc
clc
cmp
loop
in
xchg
mov
jecxz
adc
inc
mov
in
mov
sbb
lds
movsb
push
out
sub
dec
mov
or
in
mov
dec
mov
iret
cmp
and
loope
dec
add
imulb
clc
into
mov
fisttpll
cmc
mov
mov
loopne
pop
stos
divb
jmp
xchg
push
cmp
cli
js
imul
and
movsb
es
fs
je
sub
mov
mov
sbb
sahf
cmp
ret
stos
repnz
in
lods
outsb
shlb
xor
dec
jns
xchg
sbb
fidivrl
lret
in
xor
inc
sbb
xlat
div
cmp
test
outsl
fs
test
sub
outsb
and
mov
loope
test
repnz
in
roll
adc
adc
cmp
inc
mov
push
pop
xchg
loopne
call
push
andb
cmovge
push
inc
push
mov
xchg
test
js
mov
aam
lds
xchg
ret
shrb
enter
mov
fcmovnu
mov
xorb
cld
dec
mov
dec
pop
xchg
aad
or
insl
cmpsb
or
movsb
sbb
adc
mov
popf
dec
dec
mov
pop
in
cmp
mov
incb
int
pop
sarb
enter
mov
out
stos
mov
sahf
fsubs
lock
sahf
fstps
pop
fistl
push
dec
cld
fmull
jnp
mov
xchg
sub
and
mov
cmp
jmp
cli
movsl
jo
std
out
stc
adc
jo
inc
rcrl
daa
mov
pusha
cmpsl
jmp
frstor
mov
out
out
add
cmp
inc
test
and
and
add
ret
leave
loopne
gs
push
shrb
out
loopne
jmp
mov
sarb
std
js
pop
imul
jns
ret
outsb
xchg
outsb
sub
dec
or
push
sbb
push
jns
jl
adc
ret
int3
mov
lock
mov
push
addb
push
cmp
scas
lea
fcompl
push
inc
leave
mov
mov
push
fmul
je
pop
or
aas
in
sub
sub
insl
ret
std
lods
cs
cmp
and
iret
scas
loope
repz
arpl
lea
xchg
add
test
jle
jnp
pop
xchg
or
or
jle
inc
fbstp
movsb
pushf
std
xchg
mov
mov
dec
scas
add
mov
fs
ja
in
sbb
movsl
lods
stc
push
fldenv
push
test
popf
and
leave
push
push
and
in
bound
hlt
roll
popf
or
in
or
fstps
jg
mov
ret
cmp
daa
popa
shll
popf
cmp
and
outsb
ret
pop
mov
jne
push
sbb
mov
push
sbb
mov
pop
pushf
in
shrl
or
fmuls
xchg
cmp
cmp
cli
in
dec
dec
push
cli
aaa
push
les
add
adc
test
movsb
push
arpl
mov
hlt
je
push
repz
mov
lret
fneni(8087
dec
into
or
xchg
and
xchg
popa
pop
sbbl
xor
add
test
xlat
je
fcmovne
xlat
mov
lret
hlt
sub
fldcw
cmpsl
das
repnz
paddusb
sub
out
repnz
push
loopne
nop
insl
or
adc
pop
cmpsl
outsb
and
pop
fidivl
and
sub
dec
or
mov
mov
lret
mov
int
lcall
xorl
fmull
enter
cmpsl
mov
jg
add
add
insl
jnp
in
lea
xlat
aam
pop
shl
dec
pusha
pop
data16
inc
dec
ret
gs
jnp
jmp
adc
adc
dec
adc
dec
add
push
jno
out
push
cmp
subb
lock
pop
or
jg
aam
rep
shrl
pop
loope
ja
cltd
jge
mov
ljmp
cli
lea
push
inc
sarb
adc
fistpl
pop
adc
sub
test
sahf
mov
negb
stos
jl
add
lods
dec
cs
mov
push
pop
lods
fistps
cld
or
push
pop
sbb
xor
es
mov
push
mov
sub
movsb
jp
push
repz
pop
cmp
mov
sbbb
roll
jno
es
icebp
cmp
clc
pop
push
or
inc
sbb
lods
jmp
jmp
sbb
sub
inc
pushf
ja
mov
mov
dec
lds
mov
fs
out
add
xchg
adc
in
jb
jl
mov
insb
dec
inc
dec
xchg
pushf
and
popf
cmp
pop
xchg
adc
data16
dec
mov
sbbb
test
fisubrl
mov
mov
dec
fsubrs
hlt
inc
cmc
in
loopne
xchg
leave
adc
jb
ja
mov
xchg
movsb
fisttps
dec
fistps
sbb
add
jecxz
jecxz
adc
mov
ja
and
ror
movsb
sbb
sarb
cwtl
mov
cs
sub
cmpsb
adc
imull
sbb
and
and
in
mov
loop,pn
pop
sahf
mov
stc
push
adc
jnp
jnp
pop
jae
inc
movsb
pusha
cmpsl
insb
dec
cmp
shll
mov
leave
mov
mov
lds
pusha
cmp
or
mov
mov
fdivrp
data16
sub
js
and
lods
push
jo
stos
nop
sub
mov
xor
outsb
repnz
loop
test
mov
xor
push
sbb
mov
mov
hlt
mov
push
mov
aas
into
fs
inc
mov
lds
inc
shrb
and
or
inc
jno
and
fmul
fstps
sbb
jmp
xor
sbb
pop
aam
mov
je
and
mov
div
jmp
push
xor
popf
mov
mov
xchg
fdivs
je
data16
movsb
fnstenv
jno
xchg
adc
jl
jge
lods
aas
sbb
mov
mov
lds
scas
mov
push
aas
ljmp
cmp
inc
fisubrl
sarl
jmp
push
repnz
add
cltd
cld
jge
fwait
mov
fwait
inc
cmp
fwait
dec
daa
inc
ficomps
mov
imul
imul
and
aad
cmp
popa
cmpsb
addr16
push
xlat
daa
cmp
pusha
jbe,pn
stos
mov
stos
mov
lods
sbb
add
rcrl
sbb
ljmp
inc
pop
stos
imul
imul
sub
int
mov
stc
push
cwtl
dec
xor
sbbb
lcall
lds
lods
mov
push
iret
stc
add
xchg
jmp
cmp
call
faddl
cwtl
aam
add
aas
lret
adc
jno
ret
mov
xchg
rcrb
cmp
mov
dec
jo
jp
fucomip
cmp
jbe
aas
mov
sub
sub
mov
dec
dec
and
mov
es
dec
insb
adc
inc
insb
out
inc
ds
add
out
push
and
sbb
mov
sub
sbb
movsl
push
or
lcall
add
pop
push
xlat
sub
cwtl
pop
push
jo
or
mov
xor
ss
inc
push
loop
inc
imul
rcll
loopne
add
in
test
mov
popa
rcrb
and
stos
sbb
lods
or
sub
sti
xchg
lods
cltd
mov
inc
into
dec
sti
mov
loop
jmp
pusha
add
test
imul
mov
lea
adc
jae
mov
mov
pop
and
daa
jge
cs
mov
int
pop
in
subb
iret
insb
sbb
sub
loope
int3
sub
out
subl
aas
mov
jb
lcall
or
stc
and
nop
or
jle
inc
xchg
fs
ret
lods
lods
pop
js
sub
mov
mov
or
sub
pusha
ljmp
adc
pusha
stos
pop
adc
ret
add
iret
loop
or
repnz
inc
mov
daa
orl
mov
pop
imul
inc
push
xchg
mov
fwait
int
das
out
push
inc
mov
out
pop
fildll
shl
sarl
pop
inc
mov
jnp
subl
dec
dec
cmp
lret
in
aas
mov
data16
mov
repz
cmp
jp
cmp
fstpl
cmc
mov
push
push
ja
mov
out
pusha
add
test
mov
jmp
sbb
pop
cmc
lcall
push
pop
lret
and
mov
sbb
leave
add
lea
xor
push
push
sub
out
fwait
push
and
mov
adc
daa
mov
movsl
xor
cmc
fdivs
adc
xorl
push
push
mov
add
xor
movsl
inc
mov
loope,pt
outsl
pop
ret
jmp
lret
mov
movsl
pushf
sub
xor
sbbl
in
sbb
les
andl
push
pop
inc
ljmp
lahf
enter
dec
and
repnz
je
in
xor
xor
adc
lea
les
imul
mov
dec
aas
mov
sahf
inc
fcmovb
imul
pop
sbb
inc
adc
xchg
imul
mov
push
sbb
in
inc
in
in
mov
and
loope
es
add
jecxz
dec
or
adc
stos
mov
mov
jnp
sbb
xchg
mov
mov
pop
push
inc
add
add
sbb
ret
ljmp
xchg
and
cld
jnp
xchg
mov
lret
ja
xchg
leave
stc
cmpsb
je
leavew
push
pushl
cmp
jmp
cwtl
xor
cmp
inc
push
sub
callw
movsl
jae
outsb
inc
pop
sub
or
sbb
mov
cmp
popl
jo
xor
or
daa
mov
jns
mov
aas
or
stc
test
mov
push
fcoms
prefetch
sahf
dec
fdivs
in
pop
scas
mov
sub
push
mov
cmpsl
mov
loope
cld
mov
popa
scas
push
push
mov
ffreep
mov
push
clc
fcomps
std
idivb
into
push
cld
and
pop
test
enter
scas
insl
icebp
shr
and
dec
sbb
mov
cmpsl
pop
cmpsb
dec
or
add
jo
aas
inc
stos
mov
nop
popf
sub
xchg
adc
dec
sbb
shlb
stos
ss
sub
das
test
inc
out
sub
xor
insl
jmp
and
ds
sub
aam
les
sbbb
lret
mov
in
fsubr
pop
mov
dec
mov
aas
rol
jae
imul
fcmovnb
and
shrb
or
shll
aad
jp
pop
xchg
sub
pop
mov
mov
inc
dec
cmp
sbb
icebp
mov
mov
jecxz
mov
mov
addr16
adc
xlat
inc
pop
inc
pushf
andl
inc
sub
mov
mov
daa
push
movsl
mov
stos
dec
mov
xor
sub
push
iret
iret
nop
inc
cmpsb
jno
out
mov
add
mov
jp
push
adc
and
loope
mov
ret
arpl
inc
cmc
into
lods
ljmp
cld
fnsave
add
shrl
dec
cmp
push
test
add
cmp
movsl
aas
lret
sub
jmp
daa
jg
mov
mov
push
out
popf
incb
lock
rep
jae
push
aam
rol
clc
push
sub
cmp
arpl
push
jmp
jge
jmp
in
in
push
leave
pop
int3
push
pop
or
jns
jp
cld
movsb
int3
pop
add
mov
add
movsb
mov
push
and
loope
iret
dec
mov
pop
cmp
mull
in
or
addr16
sbb
test
dec
in
inc
sahf
adcl
sub
rep
xlat
inc
movsb
sbb
roll
mov
std
adc
xor
stc
jo
call
movl
dec
testl
fcoml
sub
fidivs
int
in
jmp
lods
lcall
cli
sbb
and
out
das
xlat
fldt
jne
xor
mov
or
cmp
or
jnp
add
adc
xlat
cmc
test
shl
mov
in
mov
jmp
lea
rcrb
dec
cltd
or
out
hlt
jg
mov
fistl
sub
mov
fnstsw
jg
int
popa
mov
push
out
cmp
hlt
cmp
loopne
stc
xor
lret
dec
pushf
into
stos
xchg
mov
repnz
clc
lret
lds
fs
mov
lcall
add
sub
dec
xor
cmp
jle
in
dec
rolb
push
jg
add
mov
inc
and
fs
outsb
inc
mov
lock
mov
dec
ret
pop
clc
cltd
movsb
sub
ror
mov
cmp
into
int3
movsb
xor
lret
cmpsb
stos
das
sbb
test
jae
das
rorl
bound
test
sbbl
icebp
sbb
mov
shlb
jecxz
sub
test
cmp
sub
clc
adc
adc
pushf
lret
mov
dec
jno
aam
pop
mov
pop
xor
dec
bound
ja
mov
xchg
mov
loope
mov
fisttpl
jl
test
jns
movsl
scas
lsl
imull
stc
ja
mov
mov
sti
shr
scas
and
sbb
mov
mov
pushl
pop
fisttpll
icebp
sbb
test
cs
xchg
movsb
add
or
mov
mov
sbb
ss
xchg
sbb
std
in
out
jg
out
iret
cltd
pop
daa
mov
out
mov
jns
mov
std
aam
pop
jp
repz
lods
movsb
jle
jne
movsb
icebp
cmp
cmp
shrl
or
push
ja
insb
cmp
lcall
lods
fimull
adc
pushf
cmpsb
inc
pop
sub
mov
cwtl
lretw
dec
jl
add
call
push
pop
stos
cwtl
orl
or
movsl
bt
dec
pop
add
mov
and
cli
jno
push
dec
fucomp
js
sbb
xor
movsb
sbb
sbb
ret
xor
push
std
outsb
dec
ret
push
adc
xchg
xor
lds
cmc
add
shr
mov
push
mov
jbe
call
imul
iret
shlb
lret
push
faddl
shrl
lods
mov
inc
insb
push
arpl
mov
push
jg
dec
mov
xor
xchg
movsl
xchg
mov
cmpsb
jnp
fldenv
dec
mov
xchg
xchg
xchg
xor
sbb
fisubs
nop
and
loope
and
in
in
sahf
ret
push
inc
iret
push
daa
ret
xchg
test
sub
xchg
adc
and
xchg
or
scas
jns
mov
clc
sbb
data16
dec
fnstcw
cmc
and
xchg
roll
xlat
les
add
add
ret
inc
adc
shlb
mov
clc
jmp
shl
loopne
add
cmpsb
xorl
fistpll
inc
sub
loope
fsubp
out
stos
sbb
add
add
rol
aaa
xor
data16
or
testb
mov
jge
pop
popf
fs
outsb
fadds
loope
ljmp
stos
mov
jo
ss
lods
insb
sub
sub
icebp
push
pop
pop
aad
sbb
push
jp
xor
cmc
jno
enter
mov
inc
add
push
les
icebp
pop
cmp
sbb
mov
js
or
mov
andl
loope
push
fstps
mov
mov
je
mov
mov
mov
lds
rol
imul
sarl
mov
cmp
jbe
mov
scas
jmp
jno
push
mov
push
out
std
aad
inc
xchg
xorb
adc
jmp
decb
fxch
mov
mov
out
push
jb
mov
push
mov
stc
in
sub
dec
jnp
inc
leavew
dec
cmpl
and
cli
fildl
sbb
dec
adc
fs
push
popl
mov
les
add
ret
sbb
retw
jns
mov
daa
orl
xchg
mov
xor
iret
pop
or
push
pop
test
push
leave
pop
lea
repz
xor
xor
in
mov
xor
mov
sbb
xor
sub
push
ljmp
mov
pop
dec
lds
mov
push
inc
scas
or
roll
mov
sahf
aas
jne
sub
cli
scas
xchg
test
mov
cmpsb
fs
pushf
mov
test
in
lret
testl
inc
lret
inc
out
mov
inc
ss
pop
sbb
adc
test
clc
cmpsb
rorb
aaa
popa
ret
mov
sub
daa
in
repnz
mov
repz
popf
clc
addr16
sub
stc
sbb
cmpsb
pop
in
sahf
or
xor
or
loop
dec
clc
mov
xor
pop
sti
jns
dec
mov
xor
xchg
mov
dec
out
jecxz
int
pop
ljmp
jb
sbb
xor
fmuls
sub
in
aaa
sub
push
cltd
lcall
stos
or
sbb
addr16
rorb
mov
dec
cli
mov
cmp
xor
fs
scas
sub
jle
adc
pop
int
sbb
push
add
rcr
cmc
xor
test
sbb
cmp
mov
fstl
or
stos
jbe
pop
pop
adc
cmp
notl
dec
and
cmp
out
das
xor
xchg
cltd
add
ret
ror
xor
xor
sti
jns
and
cmpl
out
or
repz
mov
or
mov
repz
in
xor
repnz
cltd
push
insl
cltd
mov
cmp
bound
mov
or
inc
cwtl
cmp
mov
loopne
sbb
ret
push
xchg
jns
rorl
insb
adc
inc
test
inc
cld
mov
lret
addr16
movsl
mov
push
filds
mov
fldl
in
add
add
loop
fs
popa
inc
push
pop
dec
xor
xor
lds
and
jmp
lahf
imul
pmulhw
xchg
push
pop
out
stc
add
js
mov
and
dec
int
push
dec
gs
xor
das
out
inc
jae
sub
popf
add
enter
out
add
jmp
mov
adc
add
sub
jne
call
pop
push
mov
inc
dec
dec
mov
pop
repnz
inc
jns
ret
adc
addl
call
inc
ja
jmp
cmp
cmpsb
dec
add
icebp
add
aaa
cld
add
sbb
test
and
call
in
rol
mov
mov
cmp
leave
std
mov
lea
xchg
mov
mov
jp
mov
gs
pop
jno
std
pop
dec
push
and
add
xchg
xchg
in
ja
movsl
hlt
push
dec
pop
hlt
data16
shlb
lods
repnz
xchg
arpl
es
cltd
push
xchg
vpshad
push
cmpsl
stos
pop
cmpsl
stc
cld
adc
bswap
pop
sbb
int3
sbb
push
cli
mov
pop
addb
je
xchg
das
dec
jne
mov
adc
inc
pusha
sbb
xor
stc
cmp
sbb
xchg
jge
push
daa
fdivs
dec
mov
mov
divl
repnz
xchg
mov
sbb
add
repnz
add
lcall
insl
imull
test
insl
je
leave
mov
pop
jmp
mov
lds
fsubl
lahf
mov
or
mov
test
or
decl
ret
push
mov
pop
in
enter
stos
fsubl
std
aad
mov
mov
test
push
sbb
xor
dec
ja
pop
mov
fstps
jnp
mov
cld
lock
pop
pushl
or
mov
dec
dec
lods
aas
in
std
xor
insb
lock
loopne
fistpl
popf
mov
jl
sbb
sub
stos
loope
dec
sub
outsb
adc
sbb
dec
adcl
inc
add
pop
in
cmpsl
loop
mov
and
leave
mov
out
scas
aad
lret
test
loop
xlat
xchg
jg
jge
ljmp
lcall
jae
or
enter
push
mov
arpl
stc
inc
pusha
sub
xor
xor
sbb
stos
xor
bound
call
fstpl
sub
hlt
mov
mov
retw
adc
je
push
gs
dec
lods
adc
push
out
cwtl
in
jmp
aad
vexp2pd
mov
mov
push
movsl
dec
xchg
mulb
jp
pop
jbe
ficoms
cltd
mov
and
mov
aaa
and
std
or
mov
les
and
lret
lcall
je
xchg
popf
lret
pop
pop
xor
fcomi
mov
add
shll
inc
fldenv
dec
pusha
mov
gs
into
jmp
mov
stc
daa
std
aam
fistpl
pop
jnp
shlb
mov
data16
cmp
jmp
sub
xchg
rclb
lods
jecxz
sub
fcmovnb
mov
bound
jne
fnstsw
sub
xchg
push
push
adc
sub
dec
cmp
pop
adc
inc
push
jae
das
push
add
inc
movsl
dec
adc
jecxz
cld
mov
cli
inc
pop
idivb
out
fldt
mov
in
dec
shrb
daa
mov
std
pop
sbb
mov
inc
cld
cmc
adc
or
jp
scas
loopne
mov
sbbb
push
icebp
bound
test
outsl
adc
pushf
mov
mov
inc
adc
sub
rorl
outsb
in
lods
jne
stc
mov
jp
aas
gs
rolb
rcll
xchg
lret
pop
jl
cmp
sub
scas
mov
pop
roll
shl
dec
icebp
xchg
dec
mov
jp
pop
decl
sub
aad
aas
sbb
movsb
mov
ss
mov
mov
shrb
dec
stos
ret
mov
xchg
divl
fmull
and
rorl
or
push
fmuls
out
shr
fsubrl
sbb
push
dec
fstpt
shll
jg
or
fiadds
fisttpll
cmp
test
push
jge
xchg
or
adc
push
dec
in
jle
cmpsl
movsl
shlb
pop
frstor
dec
jo
jno
loopne
fs
mov
pop
sahf
shlb
js
bound
push
mov
loopne
movsl
pcmpeqb
aaa
cmpsl
js
aam
not
pop
dec
mov
jmp
lret
fdiv
xor
jl
out
lds
inc
add
sub
add
push
mov
inc
cli
mov
mov
jl
sti
jg
lock
push
popa
cmp
pusha
sti
loopne
sbb
aad
loop
and
shll
out
lods
lds
adc
jg
sbb
sbb
mov
mov
jge
cmpsl
push
mov
cmpsb
dec
xor
xlat
add
sub
not
sub
out
iret
insl
in
fincstp
clc
hlt
loopne
jl
cld
enter
fadds
movsb
sbb
sti
outsl
mov
dec
mov
xor
out
dec
jmp
sar
ljmp
cmp
popa
pop
jg
jo
mov
sbb
outsb
in
bound
dec
sub
repnz
pop
mov
cmpl
and
cmpsb
cld
sbb
repz
xchg
mov
inc
enter
aam
mov
push
sub
movsl
push
lods
scas
arpl
inc
divps
xchg
clc
pop
or
imul
cmp
sub
shlb
sti
sub
je
fldenv
push
push
mov
fisubrl
mov
in
fisubrs
mov
jmp
mov
mov
in
out
xchg
fdivrl
sbb
andl
mov
sarb
or
mov
or
cld
xlat
push
mov
enter
jmp
and
xor
cmp
sub
test
fdivr
push
inc
andb
add
dec
xchg
pusha
pop
pop
or
std
inc
fistl
xchg
adc
into
in
outsl
out
jne
mov
jno
adc
mov
push
int3
xchg
cmp
roll
popf
jge
cmp
adc
mov
stos
xor
imul
enter
and
xor
dec
rcrb
adc
push
lods
dec
insl
scas
mov
testb
mov
sbbb
mov
sbb
loop
mov
dec
test
mov
xlat
fadds
or
jmp
sbb
sub
lock
inc
cwtl
ds
dec
mov
jl
mov
sub
sbb
push
mov
and
push
stc
aas
data16
outsb
xor
xchg
jp
jmp
out
stc
jbe
repz
pop
xchg
pop
xchg
fidivl
dec
in
and
clc
rcrb
push
inc
or
shrb
shl
pop
fstpt
call
xor
jecxz
jmp
fldl
mov
into
out
dec
shrb
pop
loope
mov
mov
mov
fs
insl
mov
test
xchg
and
mov
std
int
sbb
negb
mov
push
jp
mov
lcall
and
test
loop
rolb
icebp
into
jb
lcall
fwait
pop
stos
sub
test
stos
add
add
into
pusha
movsb
sahf
cmpsb
or
scas
push
sub
imul
sub
sbb
sub
fnsave
loope
adc
test
pop
cmp
xchg
and
cmpsl
jns
in
fcoml
xchg
push
mov
in
add
dec
lcall
sbb
cmp
xor
loop
subb
roll
test
and
rcr
sbb
mov
and
adc
out
js
push
out
push
mov
xor
pop
aaa
aam
imul
jae
pop
loope
les
sbb
fdivrs
faddl
mov
xlat
int
loope
js
dec
push
pop
mov
dec
or
pop
data16
lcall
and
movsl
outsl
orl
fsubp
shl
mov
mov
popf
mov
lret
cwtl
rep
mov
ljmp
xor
in
aam
sbb
pop
stc
lock
xchg
mov
inc
mov
lret
push
scas
sub
xor
mov
aad
lret
xchg
xchg
pushf
scas
aaa
pushf
and
jno
sub
or
inc
jmp
adc
daa
and
mov
adcl
xorb
das
mov
andl
mov
test
nop
jb
mov
add
loop
mov
sbb
orl
rcrb
icebp
loope
fstpt
ss
clc
and
or
jge
rcl
imul
or
popa
cs
push
cmp
pop
aaa
rcrl
nop
subl
movsb
xchg
bnd
in
dec
xor
jp
lock
add
sbb
mov
movsb
fsub
mov
sahf
mov
xchg
jl
mov
enter
inc
sub
push
sarb
push
mov
jle
lcall
nopl
mov
push
mov
cltd
sub
inc
xchg
into
inc
sbb
sbb
xor
mov
xchg
sbb
push
jmp
lret
mov
lret
call
in
pop
sbb
mov
enter
leave
mov
stos
es
adc
mov
loop
mov
hlt
and
loop
pop
cli
shl
stos
mov
add
adc
mov
pop
jge
into
xchg
pop
xor
lds
add
bound
and
xor
cmp
add
sti
mul
dec
cmpsl
mov
sub
push
mov
hlt
add
jno
mov
jl
add
jl
and
sbb
lock
sub
loop
ficompl
sbb
jnp
je
sbb
xor
sub
mov
pop
adcb
mov
dec
in
cmp
inc
addb
out
fisubrs
mov
insl
adc
mov
add
mov
cld
ljmp
popf
pop
rorl
and
push
aam
mov
push
fidivrs
pop
inc
and
imul
jnp
push
cmpsl
cmpb
mov
push
cs
das
push
sbbb
or
dec
outsl
cld
nop
jl
rcr
sbb
inc
sahf
adc
push
push
cmpsl
or
aas
roll
mov
fldl
or
xor
xor
arpl
and
xchg
xor
hlt
jle
jg
test
jnp
movsl
jmp
jecxz
sub
je
ja
sub
std
mov
ret
or
jo
std
pop
adc
pop
into
xchg
adc
jns
pop
mov
test
xchg
jo
loop
or
and
sub
shll
in
inc
fcoml
xchg
js
int3
mov
mov
aad
push
inc
mov
enter
or
mov
xor
lcall
jmp
icebp
jp
nop
loope
stc
lods
sbb
push
or
pop
jmp
dec
mov
invd
or
in
popa
loope
sti
push
push
or
add
out
in
cmpsl
dec
pop
fisttpll
jmp
ret
out
lahf
pop
dec
lods
aad
inc
push
lds
mov
in
lret
icebp
aaa
es
pusha
sub
sbb
cmp
ja
adc
dec
mov
add
pop
imul
pop
jg
cmp
or
push
lret
insl
out
mov
aaa
daa
fsubrp
pusha
call
jnp
mov
lock
push
mov
ret
pop
pop
clc
adc
dec
sub
xor
test
aaa
js
sub
mov
and
add
enter
leave
sub
fdivs
stc
jmp
or
and
ffree
sti
imul
sub
aam
pusha
enter
sti
adc
cli
ss
jp
popa
leave
gs
hlt
incl
cmc
repnz
sahf
sub
stc
adc
inc
xchg
divps
not
ds
fs
add
fcmove
stc
mov
das
pop
out
mov
xlat
sbb
lods
repz
dec
push
mov
out
mov
cmp
inc
xchg
inc
movsb
aam
push
jne
mov
dec
add
out
ror
stos
add
and
or
data16
loope
cmp
push
cmpsl
inc
jae
sbb
rcll
sahf
rorb
icebp
out
leave
ja
notl
loopne
popf
fildll
jle
push
mov
jb
push
leave
out
jmp
clc
loopne
cs
xchg
pop
das
push
mov
cmp
cmpsb
xchg
cmp
in
imul
push
adc
mov
lahf
cmp
pop
jo
out
outsl
jns
shrl
fcompl
lock
pop
cmpsl
loopne
or
mov
push
bound
sub
lock
add
sbb
enter
bound
jnp
xorl
mov
and
push
int
icebp
fisubl
mov
in
popf
daa
push
rolb
xor
lock
stc
popl
push
cmc
stc
or
clc
dec
popf
adc
in
push
popa
cmc
or
pop
out
mov
cltd
xchg
popa
sub
aam
dec
dec
mov
push
out
xchg
jb
inc
sar
sbb
lcall
outsb
add
lret
mov
or
pop
fmull
jp
int
rol
ret
xchg
cmp
and
jae
jecxz
mov
daa
imul
test
adc
dec
xor
sti
stos
scas
mov
test
mov
push
mov
pusha
repnz
mov
cmove
mov
stc
sbb
dec
nop
jno
fisubs
rolb
shlb
gs
and
mov
insb
pop
mov
adc
add
enter
pop
lds
fwait
das
roll
sub
std
inc
adc
jnp
movsl
xchg
adc
adc
lret
push
int
dec
inc
mov
mov
stc
adc
cmc
scas
mov
in
fsub
mov
fwait
jg
mov
sar
adc
ljmp
je
cmpl
pop
jmp
popf
sbb
inc
out
bound
inc
add
jbe
dec
movsb
test
ret
sub
scas
adc
fcompl
std
fdivrl
mov
mov
mov
pop
std
icebp
fcmovnb
inc
movsb
icebp
lcall
incl
lsl
loope
jl
xchg
clc
out
xor
mov
jecxz
jo
adc
in
sbb
sub
dec
jg
shll
shrb
int
mov
daa
popa
imul
sbb
lret
mov
adc
mov
ret
mov
fildll
dec
add
frstor
aam
lods
ljmp
add
add
repnz
lods
xchg
xor
mov
or
xchg
scas
test
mov
cmp
and
popf
lret
cmp
mov
sub
mov
sarl
mov
idivl
mov
sbbl
xor
mov
jo
mov
add
jae
pop
loope
dec
jecxz
and
shl
jb
mov
xchg
mov
xchg
je
add
pop
add
popf
sbb
leave
add
xor
lret
add
cltd
lock
pop
lea
orl
pop
cmp
icebp
push
pop
jmp
fcoml
mov
xchg
dec
push
test
push
jle
cmpsb
xlat
fs
sub
pop
sbb
push
xchg
add
outsl
mulb
lock
pop
mov
pop
pop
sbb
cmpsl
je
stc
sbb
mov
lcall
aad
movsl
push
sbb
shll
stc
jge
xlat
clc
pop
mov
pop
icebp
mov
adc
and
push
int
sti
xchg
mov
or
sbb
sub
sbb
push
dec
popf
sub
mull
addb
jecxz
in
mov
lods
aad
cmc
xacquire
mov
and
enter
cmp
adc
lahf
faddl
xor
jg
pop
xor
mov
cmpsl
mov
jmp
add
repz
fidivl
pop
ret
add
add
dec
popa
iret
sbb
xchg
jns
stc
scas
jle
mov
popa
jae
ss
sub
cmpsb
or
jp
jno
subl
mov
int
jno
dec
sub
cwtl
ja
add
movsl
sub
and
js
push
lret
je
repnz
cmc
dec
mov
lret
rorl
cmp
insl
fsubr
adc
xchg
inc
jb
xchg
ds
and
lods
dec
rcr
adc
rcl
xor
popa
mov
jb
and
lret
jo
pop
cmp
jmp
and
xor
push
jle
pushf
xchg
gs
jl
push
popf
sbb
shr
push
lea
xchg
push
repnz
push
iret
jnp
push
or
push
fisttpl
push
shrb
add
or
cld
hlt
xor
loope
loopne
and
lahf
in
in
lods
lahf
pop
dec
pusha
dec
mov
adc
xor
sub
add
push
inc
inc
fdivs
inc
push
loopne
stc
incl
adc
outsl
stc
mov
xchg
mov
or
xchg
mov
add
mov
inc
sub
push
lahf
dec
les
sub
out
xor
das
push
dec
xlat
mov
movsb
test
int3
push
sbb
add
outsl
inc
adc
arpl
push
or
xchg
mov
cmp
mov
jg
mov
sub
scas
les
jmp
cmp
push
movsb
jle
lea
repnz
sub
jg
sbb
lcall
aad
rorl
mov
push
iret
inc
roll
push
insb
mulb
scas
iret
jl
mov
cmc
in
gs
adc
orb
mov
std
mov
xchg
pop
scas
inc
subb
pop
xchg
cmp
fiaddl
ror
stos
fsubrl
lods
cmc
jns
mov
rcrb
fstpt
cmpb
imulb
cmpsb
stos
bnd
imul
sbb
rolb
adc
inc
fwait
xchg
shrl
push
mov
xchg
mov
or
mov
cli
mov
rol
shlb
inc
out
jecxz
je
sub
lret
jo
sub
mov
jecxz
ss
xlat
mov
in
shl
jno
mov
jne
cld
and
loope
and
xchg
repnz
sub
mov
xor
loopne
fldenv
xor
xchg
lods
imul
movsb
ror
iret
cltd
roll
push
insl
mov
insb
clc
test
pop
fsubp
rol
popf
sbb
push
adc
out
adc
in
cmp
insl
xor
fcoms
andb
icebp
sbb
dec
insb
out
outsl
scas
jbe
popa
lahf
sti
pop
pusha
mov
mov
mov
pop
or
das
icebp
mov
adc
stos
daa
and
push
inc
shll
imul
sbb
in
xor
adc
pop
xor
cmp
into
leave
mov
adc
lea
add
pusha
mov
test
sub
sbb
loopne
pop
rcrb
enter
fcoml
enter
test
js
sbb
filds
jg
jne
fisttps
ret
arpl
xchg
push
rorb
insb
jns
push
sub
xchg
sbb
cwtl
movsl
aad
jae
cmp
xchg
add
cmp
in
dec
movsb
andb
out
dec
stc
stc
xchg
stc
movsb
push
fwait
jl
xor
call
sub
dec
add
into
sbb
out
fimuls
out
fwait
rclb
mov
sub
mov
mov
mov
fidivs
mov
pop
fdivl
imul
dec
imul
sub
ss
jecxz
mull
lret
shll
cwtl
pop
inc
pop
sbb
mov
xchg
add
xorb
cli
std
and
lcall
dec
test
adc
mov
out
and
mov
sbb
lock
test
inc
mov
jge
iret
inc
sbb
add
insb
pusha
out
mov
dec
cld
loopne
push
mov
aad
cli
lods
in
or
sbb
jae
inc
sbb
jge
jl
jbe
push
inc
adc
lock
mov
shll
mov
xchg
ja
mov
xchg
jle
and
cmpsl
xchg
popa
cwtl
adc
push
or
cmpb
xchg
pop
in
and
and
lcall
jle
scas
sbb
sub
push
push
sbb
scas
sbb
cmpsl
stos
movsl
and
sub
ss
mov
insl
inc
mov
mov
insl
xor
inc
cmp
iret
xchg
mov
xor
and
or
or
mov
adcl
std
aaa
movsl
fdivrs
xchg
push
addr16
fadd
cld
or
sub
sbb
out
push
push
push
adc
insl
jge
or
ret
andl
ja
fildll
insl
lea
ds
test
adc
push
xlat
and
sbb
jg
cmp
xchg
decl
dec
and
push
jns
push
jmp
sti
cmpsl
fsubrs
adc
pop
xchg
popf
mov
jmp
ret
xchg
push
lret
rcrl
lods
das
mov
cmp
xor
in
fiadds
cli
pop
ret
int3
cmpl
hlt
sub
test
mov
xor
jecxz
mov
xor
imul
lock
jbe
into
aad
leave
jmp
testl
in
cmp
int
mov
fsubrl
in
out
push
mov
repz
add
mov
add
mov
daa
xor
mov
ljmp
sub
ss
jns
repz
xchg
shlb
enter
pop
mov
cs
mov
sub
sbb
inc
int3
mov
mov
and
jl
jns
iret
adc
jnp
popf
fistpll
jne
into
ret
popa
mov
test
loopne
and
mov
sub
incb
sub
adcb
into
test
pop
loopne
jmp
jno
dec
pop
leave
out
sub
test
mov
ret
jp
cs
jmp
jo
insb
std
cltd
stc
jno
fnstcw
mov
cmpb
jb
not
push
pop
aam
out
mov
daa
in
push
stc
aas
sbb
popf
jb
xchg
lock
sbb
push
insb
add
add
cmp
test
cmp
pop
or
lcall
cmp
or
ja
push
push
stos
xchg
inc
add
into
or
xor
mov
mov
jne
cmp
and
mov
inc
lock
out
icebp
dec
mov
lahf
mov
mov
add
xor
dec
cmp
xor
cwtl
jle
jae
stos
jne
movsb
and
push
mov
fs
test
ljmp
das
aam
mov
fisubs
sbb
icebp
inc
jl
std
pop
inc
cmp
jmp
jg
je
push
jmp
mov
sub
dec
mov
rol
repz
enter
dec
movsb
gs
std
cltd
push
sbb
mov
lcall
jle
stos
cmp
jge
and
push
fld
cld
aad
xor
je
sub
or
loopne
cli
fadds
pop
scas
frstors
je
lret
rolb
push
fsub
sahf
icebp
xlat
pop
rol
shrb
fld
loope
sbb
xchg
lea
pop
sbb
or
xor
aas
idivb
cmp
fidivl
icebp
lods
outsl
xchg
and
cld
pop
movsb
leavew
mov
mov
xlat
mov
in
xchg
shrb
movsl
fs
xchg
fildl
mov
push
push
in
lret
dec
js
insb
int
and
sarb
stc
mov
mull
jecxz
fdivr
mov
gs
jg
loope
stos
or
sbb
arpl
add
sub
jb
out
cli
push
daa
fsubs
negb
add
lahf
pushf
mov
aaa
or
inc
insl
mov
adc
ret
loopne
jns
rclb
sbbl
xor
dec
mov
inc
outsb
int3
sti
add
sub
js
in
xor
xchg
fldl
ja
aaa
aad
push
mov
mov
movb
mov
test
test
xchg
fcomip
mov
mov
cmp
inc
daa
rorl
push
add
sbb
dec
rcrl
cmp
insl
or
test
sarb
andb
dec
sbb
cltd
daa
and
sti
sbb
loope
imul
dec
subl
ss
jae
mov
std
push
insb
sti
cltd
orb
add
inc
jl
xchg
mov
lods
decb
or
sbb
sbb
in
test
lcall
mov
push
or
repz
lret
push
rorb
mov
in
sub
lsl
rorl
jb
mov
in
jno
mov
jnp
aam
mov
mov
mov
dec
rolb
ljmp
mov
and
or
xor
jno
dec
lret
js
sbb
mov
xchg
pop
gs
sub
inc
test
and
cwtl
mov
mov
jl
in
fimuls
mov
mov
mov
pushl
lods
cmpsl
mov
int
lcall
xor
adc
sbb
add
scas
lahf
in
mov
add
ljmp
adc
sub
in
cs
ja
enter
adc
mov
jbe
pop
stc
hlt
mov
mov
andl
mov
xor
mov
and
sti
dec
sub
test
jo
fnstenv
push
out
bound
adc
arpl
mov
fsubs
jne
cmp
inc
bound
add
mov
or
popa
nop
mov
insb
or
and
jmp
loop
push
cmp
test
stos
repz
neg
or
sub
in
mov
ffree
mov
pop
sub
jo
inc
aaa
sbb
shrb
les
xor
fcmovnbe
lock
ficomps
jae
arpl
pop
int
xor
hlt
cmc
cmp
frstor
arpl
call
rcr
cmpsl
xor
std
sub
ret
xchg
adc
push
mov
sbb
sbb
cmp
gs
aaa
jmp
pop
pop
lahf
pop
mov
sbb
jb
aas
inc
lods
add
ja
adc
push
xchg
adc
shlb
push
sub
sarl
adc
jno
sbb
ret
lods
mov
cmpb
cltd
sbb
lods
enter
xor
inc
mov
add
and
addr16
aam
add
loop
mov
and
push
cmp
std
push
fs
scas
mov
jecxz
cmp
shlb
out
aas
or
lods
loope
lods
sub
inc
inc
loope
push
addr16
lahf
add
sbb
dec
arpl
shrb
mov
int3
cltd
nop
arpl
sahf
or
popa
pop
aam
push
fdivrl
cmp
pusha
stc
in
sub
cmp
into
pop
test
mov
mov
mov
out
lea
pop
mov
and
lret
daa
and
sarl
adc
pop
ja
lock
aas
or
add
insb
pop
xor
inc
jno
arpl
mov
pop
ret
maskmovq
negl
sti
sub
loop
lcall
fwait
mov
test
orb
sub
push
jo
sub
ret
xor
mov
loop
enter
cli
leave
popf
les
test
shll
int
outsl
fcomps
push
sti
iret
xchg
jg
icebp
jne
adc
rorb
pop
ret
fnstenv
pop
inc
xor
sti
sti
push
in
lcall
add
ret
inc
inc
add
and
jmp
lock
sub
add
push
cmc
in
push
popa
outsl
jo
shrb
add
add
vfmaddsub132pd
shll
sti
scas
in
shl
xchg
gs
push
scas
int
movl
rcrl
add
inc
incb
pop
or
jno
add
add
lock
fucomp
push
mov
xchg
and
add
and
push
dec
cwtl
in
cmp
jecxz
out
cmp
clc
sub
and
mov
xor
jecxz
hlt
rcr
adc
imul
aas
shlb
cwtd
push
inc
pop
jle
daa
add
enter
je
into
daa
js
mov
out
jle
and
adc
scas
pop
and
jo
mov
enter
push
sbb
push
xchg
or
in
loope
in
loope
xor
pop
test
mov
sbb
push
fucomip
sbb
cmpl
repz
and
scas
and
loope
push
lret
in
fcomip
lods
incl
dec
push
push
aam
lods
data16
dec
hlt
rcrl
mov
cmp
frstor
aam
push
stos
push
mov
pop
out
xrelease
iret
xchg
repz
fidivrs
xchg
sub
mov
dec
dec
pop
mov
pop
or
aad
adc
pop
shll
or
sub
int
test
push
clc
pop
out
fcompl
mov
adc
jecxz
pop
aad
rcl
aaa
test
sahf
jns
pop
ficomps
sub
cld
inc
lret
nop
js
pop
repz
dec
sub
rcll
push
es
jo
ret
int
pop
jecxz
outsl
xor
push
cli
int
popa
mov
mov
sub
push
sbb
adc
call
adc
sub
sahf
push
xchg
jecxz
add
push
stos
mov
out
test
sbb
jge
popf
stos
test
mov
add
inc
pop
sbb
mov
int
xchg
mov
imul
and
adc
shll
pushf
pop
jno
xor
mov
mov
mov
ret
xchg
int
js
movsb
loop
mov
dec
jge
rcr
xor
je
cmpl
mov
mov
dec
cmp
cmpsl
fidivrl
pusha
sub
sub
inc
or
mov
stc
push
push
xchg
cld
xor
test
mov
fnstcw
fwait
loopne
int3
push
mov
push
push
aad
je
cld
in
xor
pushf
ja
add
xor
int3
in
insb
xchg
and
pop
sahf
fcompl
pusha
xor
enter
cld
and
mov
jne
mov
jp
test
xchg
test
pop
xor
pop
js
mov
cmp
dec
out
enter
inc
xor
or
out
out
lock
lahf
in
repnz
cmp
dec
jnp
imul
cmp
xor
add
sub
push
es
pop
js
sti
dec
dec
add
rolb
lret
lret
pop
sbb
jne
or
or
dec
in
mov
repz
jno
xchg
inc
cmp
xor
mov
test
cltd
stos
mov
repz
cld
insl
testl
mov
and
outsl
aam
stc
adc
sub
js
xor
sub
sub
ret
jo
insb
mov
xchg
sahf
ficompl
into
aad
xor
cmp
js
mov
xor
cmpb
mov
sub
mov
push
icebp
jl
fs
xor
cmp
jle
mov
adc
mov
les
jno
jno
sub
cmpsl
mov
sbb
nop
arpl
arpl
and
mov
xlat
out
push
loop
inc
rcrl
into
loopne
jp
into
stc
mov
jge
dec
out
test
inc
int3
insl
lock
mov
pop
sub
mov
ret
imul
aaa
pop
decb
ds
cmc
enter
movsb
pop
loop
loopne
adc
mov
test
mov
ss
ljmp
neg
or
fnstsw
sbbl
xchg
leave
inc
mov
fs
pop
sub
lock
mov
lock
push
jge
jmp
int3
or
sbb
jl
loope
in
jo
fwait
std
daa
fildll
je
popf
call
push
lds
daa
or
mov
pop
arpl
test
leave
cltd
int
push
cmp
cmp
rorb
outsb
nop
cmp
fwait
mov
or
cld
adc
ja
mov
pop
rcrb
test
outsb
jl
frstor
call
xor
or
add
or
rcrb
pop
inc
jno
decb
fidivrl
xor
imul
sbb
scas
mov
push
icebp
mov
xor
sbb
andb
adc
loopne
jge
inc
pop
add
pop
hlt
into
mov
cmp
mov
mov
lods
int
js
int
mov
mov
or
mov
mov
cmp
ds
lahf
push
push
scas
adc
pop
inc
lahf
dec
movsb
fwait
std
test
pop
pushf
push
loope
sub
movsb
cmpsl
xor
pushf
in
andl
fdivrp
or
mov
lahf
out
add
push
sarb
mov
and
in
into
xor
dec
pop
mov
test
xchg
addr16
negl
push
out
pop
mov
cld
jo
pop
stc
and
push
xor
lock
andb
push
insb
push
ja
or
cltd
mov
and
dec
fisubs
sub
push
jns
xor
fidivs
dec
xor
je
scas
jg
ss
cmp
jne
and
and
xchg
sbb
mov
xor
xchg
iret
xor
stos
mov
fwait
push
repz
jo
cld
std
bound
cmp
or
hlt
test
stos
pop
inc
fcmovne
or
and
xchg
dec
into
gs
xchg
shrl
rorb
xor
test
in
imull
and
jbe
outsl
fsubr
jno
pop
xchg
out
xchg
xor
in
xchg
sahf
sub
stc
pop
mov
int
jae
xchg
mov
jecxz
sub
cmpsl
add
inc
in
outsl
in
popa
sub
data16
and
push
mov
leave
jl
fs
aam
rclb
fistpll
std
addb
and
xor
stos
mov
jne
cltd
mov
cmpsl
xor
imul
adc
sti
nop
imul
stos
jo
mov
cmp
push
mov
or
int3
dec
and
andl
inc
movsl
cmp
gs
mov
adc
in
in
jge
clc
sahf
or
adc
fnsave
das
pop
pop
xor
xor
sbb
stos
hlt
push
and
mov
ret
lret
out
faddl
jmp
movsb
enter
cwtl
loope
sbb
mov
mov
in
xchg
push
cmpsb
sub
nop
jnp
loopne
add
jns
add
mov
xor
mov
iret
fpatan
adc
into
jle
rcrl
dec
sarl
mov
xchg
jg
mov
xchg
pop
mov
ret
push
cmp
mov
xchg
mov
aam
loop
int
ss
adcb
cld
pop
mov
mov
add
mov
clc
scas
xor
lds
inc
sbb
mov
popa
repz
daa
movsb
repnz
loopne
stc
fimull
je
loope
jbe
sti
adc
daa
mov
out
test
repz
mov
je
mov
jmp
adc
push
ret
mov
int
and
inc
loope
dec
xchg
mov
sahf
daa
add
das
mov
aad
push
sarb
xor
js
jp
stos
and
sbb
mov
in
rol
mov
inc
insl
lods
popf
or
rcrl
out
rolb
xchg
jae
lret
push
jo
cmp
movsl
stos
rcl
clc
xor
in
mov
stos
hlt
mov
cmp
addr16
cwtl
sbb
xor
xchg
icebp
imul
loope
cmp
cli
ficomps
mov
test
mov
imul
xor
jne
xchg
data16
je
cwtl
push
xchg
sbb
jns
imul
shr
insb
cmpsl
sub
stos
sbb
mov
call
sbb
inc
mov
xlat
aaa
je
fs
inc
push
das
mov
xchg
pop
sbb
mov
mov
divb
push
add
rcr
and
cmp
pop
pop
xchg
fwait
jae
jae
jns
xchg
xor
xchg
adc
mov
sub
rclb
push
pop
cltd
inc
daa
lods
mov
in
pop
sti
shl
js
push
clc
jnp
xor
xor
jle
sbbl
mull
rorb
push
inc
cli
iret
shll
popa
lds
jbe
addl
shlb
push
jo
xor
rcll
neg
xor
cltd
inc
inc
dec
negb
aas
dec
xlat
les
jp
fisubs
sbb
lahf
sti
cmp
jge
div
ljmp
xchg
out
imul
mov
dec
and
scas
shl
andb
fcmovnbe
mov
xorl
ret
dec
stos
jmp
push
inc
mov
add
jo
or
xlat
test
mov
sbb
in
shr
test
cmpsl
jne
imul
aam
cmp
fdiv
mov
inc
xchg
pusha
adc
xchg
rclb
rcrb
aam
sti
scas
in
push
cmp
dec
jno
fucomp
outsl
pop
in
mov
mov
sbb
aaa
and
aam
xchg
cmc
sub
dec
loope
sahf
fdivl
ja
dec
sbb
bnd
daa
fstps
out
and
clc
dec
jnp
sbb
add
mov
inc
sub
lea
gs
sub
rol
sub
cmp
arpl
push
aas
in
mov
sti
xchg
aas
sti
sub
add
movsb
add
and
testb
jne
jo
fiaddl
mov
sub
dec
in
mov
hlt
add
adc
addr16
dec
sub
fadd
push
fs
inc
aam
fisttpll
ret
cs
cmp
call
lods
sub
dec
mov
xor
sub
lds
cltd
inc
and
sub
daa
mov
pop
lock
roll
sbb
jbe
dec
pop
add
xchg
lea
ljmp
nop
inc
rcrb
addl
add
rorb
sbb
mov
push
mov
cltd
mov
dec
or
int3
rclb
lods
sub
ret
xorb
movntps
jle
test
repnz
andl
jbe
leave
adc
push
fiaddl
lods
sub
jp
jl
cltd
or
xchg
inc
scas
bound
hlt
and
sbb
or
jne
fst
xchg
pop
popa
ds
dec
push
test
pop
stos
pop
bound
pop
fsubrs
outsl
or
mov
pusha
inc
dec
outsb
loope
cltd
mov
repnz
xchg
inc
loop
inc
pop
xchg
dec
fbld
shrb
pop
pop
inc
push
fstp
and
outsl
cmp
mov
rorb
mov
dec
stos
or
mov
test
mov
xchg
push
ds
hlt
bound
xchg
mov
inc
sbb
dec
xchg
sbb
mov
dec
mov
aam
mov
or
insl
jo
jge
adc
stos
cmpsb
popa
pop
fdivrs
sub
loope
leave
xor
jno
adc
out
dec
sahf
inc
inc
jbe
or
enter
fstl
out
out
ds
daa
js
testl
ja
push
pushf
and
ja
jmp
mov
push
xchg
sub
repz
mov
push
iret
test
mov
stc
test
ror
adc
data16
js
jge
mov
dec
lahf
cmp
or
sub
lret
fdivs
lcall
hlt
push
mull
cli
jg
mov
push
jge
imul
pop
dec
mov
and
and
into
jb
jge
repz
xlat
push
inc
dec
jg
xor
mov
std
jb
jno
es
sub
in
incl
xlat
outsb
orb
jl
std
aaa
cwtl
cmp
es
pop
lods
test
mov
test
xchg
pop
push
jg
fs
pusha
ss
adc
and
dec
incl
cmpl
ret
nop
aas
test
add
xchg
xchg
sub
lods
dec
mov
lcall
jns
cmp
inc
scas
jmp
mov
into
add
fists
mov
cmp
push
inc
mov
outsl
imull
scas
pop
cwtl
fnstenv
aam
lret
inc
test
pusha
xor
mov
mov
mov
lahf
sub
add
sub
fs
in
stc
mov
movsb
mov
lods
lock
ss
push
add
and
shll
movsl
mov
add
rclb
ljmp
mov
ret
iret
jp
lds
xor
scas
adc
cmp
add
add
call
imul
push
inc
pop
sbb
sarl
add
pop
daa
mov
xchg
ljmp
xor
daa
and
mov
push
mov
movsb
xchg
stc
jg
outsb
cli
ja
ret
clc
sar
mov
pusha
xor
cli
jl
mov
sbb
mov
cmc
xor
add
lcall
repz
add
insl
fstps
cltd
push
add
sbb
mov
mov
das
inc
sahf
shl
test
push
pop
jne
pop
insb
insl
movsb
xchg
scas
fnsetpm(287
mov
fcom
xchg
sub
dec
or
sahf
jo
pop
add
ret
fsub
adc
jns
inc
in
pop
ret
in
adc
filds
les
incb
insb
pop
and
repnz
movsb
divl
jl
dec
negl
mov
std
loopne
jmp
lret
clc
sar
test
sbb
fcmovb
repnz
test
outsb
cli
sbb
inc
adc
sarb
lods
xlat
cmp
push
push
in
test
mov
ljmp
add
call
test
aas
test
stos
rcrb
adc
mov
sarb
push
xor
daa
testl
mov
sbb
sbb
adc
pop
lret
or
mov
mov
inc
cld
pop
pushl
push
out
incb
lds
push
insl
aad
cmp
inc
add
push
out
and
scas
adc
fsubl
aad
xchg
rcr
or
test
xor
vpsllq
pop
xchg
jo
ds
push
adc
pop
xor
aaa
outsb
or
mov
cs
mov
fnstsw
jns
jo
cmpsl
pushf
test
mov
xor
test
pop
imulb
sti
pop
loopne
or
mov
adc
movsl
cmp
sbb
scas
cld
xchg
jge
xor
mov
fwait
cmp
pop
adc
into
and
lcall
stos
sub
icebp
push
aad
adc
adcl
push
xor
push
call
idivb
icebp
xchg
or
pop
call
mov
adc
dec
jp
xchg
and
pushf
pop
out
lret
pop
dec
and
aad
dec
jmp
stc
scas
jne
mov
mov
jmp
cltd
leave
pop
cs
popf
mov
icebp
mov
or
push
dec
jo
std
mov
push
dec
mov
adc
mov
jl
aam
int
call
aad
push
lock
sub
xchg
jecxz
jo
jle
mov
cmpsl
xchg
loopne
xor
dec
cs
mov
dec
jmp
shll
int
and
packssdw
jge
test
loope
sbb
sub
xchg
enter
pop
lds
adc
inc
mov
sub
mov
jecxz
das
loopne
cmp
pusha
aad
cmp
xor
hlt
inc
jmp
test
pop
add
fstp
mov
je
adc
int
cmp
jmp
push
iret
xchg
mov
fcoml
jb
dec
loop
in
shlb
aad
or
mov
xor
fisubl
jbe
ds
jmp
mov
out
cmp
daa
and
std
inc
jns
fadd
sbb
mov
loopne
cmp
push
xchg
sbb
or
cmp
or
xchg
or
xchg
cltd
bound
cmpsb
jecxz
pop
jg
test
iret
mov
decl
xor
loop
pop
xor
sbb
or
sub
add
add
jmp
in
jmp
xchg
out
mov
gs
sbb
pop
hlt
dec
dec
out
mov
push
push
daa
iret
cmpsl
lods
sub
push
xor
mov
jmp
movsb
push
mov
mov
sahf
jnp
xchg
or
cmp
fstps
popf
in
and
cltd
stc
add
fdivrl
loop
ficomps
out
jmp
popf
cs
push
mov
mulps
pop
test
lahf
mov
xchg
xchg
pop
or
movsl
stos
jo
mov
jb
fstp
outsb
jno
popf
sub
jae
pop
cld
mov
mov
pop
xor
xor
std
jp
and
std
jnp
sub
inc
add
pop
popf
sub
gs
cld
xor
sahf
packssdw
cs
rcrb
pop
stc
nop
mov
cli
jne
arpl
push
jno
daa
lcall
jno
xor
iret
or
data16
cs
repz
out
cld
outsb
push
xor
sub
jg
adc
out
call
mov
cmpsb
loope
dec
int
push
xchg
or
in
sub
sbb
push
in
out
shrl
out
jno
shlb
pop
fisttpl
imul
jle
je
jp
sbb
nop
in
add
push
gs
std
jno
cmp
inc
popa
inc
inc
pop
sarb
dec
les
push
cld
xor
je
xchg
leave
mov
das
mov
enter
and
add
mov
push
popa
scas
in
adc
adcb
sbb
jp
mov
pop
sub
icebp
sbb
je
loopne
mov
es
cmp
gs
xor
push
add
movsb
sbb
adc
pop
ss
jl
dec
dec
pop
cmp
sub
enter
push
dec
push
pop
cwtl
pop
scas
outsb
push
cmp
sahf
add
push
jbe
inc
test
ds
aaa
mov
pop
scas
cmp
lret
mov
inc
out
adc
mov
aad
aad
js
roll
rclb
subb
xor
test
jae
lea
mov
xor
jo
pop
or
movsb
sar
rorl
ret
xor
fistpl
jl
ret
mov
aas
ss
idivb
repnz
loop
std
fdiv
mov
sub
inc
arpl
jmp
test
push
cwtl
lret
dec
xor
jecxz
stc
and
lahf
ret
js
sti
or
xchg
inc
jmp
cmp
xchg
mov
aaa
and
aam
ret
push
sahf
in
cmp
fldt
push
dec
cmpsl
imul
rorb
clc
cmp
daa
fisttpl
or
stos
repz
mov
pushf
sahf
icebp
test
call
inc
icebp
sub
call
lods
ficomps
dec
out
mov
pop
mov
push
sub
lahf
cvttps2pi
loope
sbb
sub
daa
cmp
jmp
movsb
push
cld
loopne
or
add
cmp
iret
int3
movsl
cs
das
jns
das
jecxz
insl
in
xchg
xlat
inc
jnp
incb
cmp
push
xchg
daa
cmp
in
cmp
add
aad
mov
inc
out
bound
scas
mov
es
push
ds
bound
inc
fs
inc
gs
in
mov
pusha
and
adc
dec
cmp
pop
test
mov
addr16
jmp
mov
dec
in
das
mov
and
inc
xchg
popa
out
xor
imul
rorb
dec
fcompl
sbb
xchg
cmp
test
push
adc
adc
lret
push
test
jecxz
push
dec
cmp
hlt
pop
repz
or
pop
xor
push
mov
jge
mov
sbb
or
insb
or
sbb
jg
in
inc
insb
js
gs
sub
jg
bnd
lret
ret
mov
cmpl
in
imul
dec
mov
push
mov
add
je
jno
rol
test
ja
out
sbb
and
cs
insb
jp
test
xchg
inc
ja
scas
in
jle
pusha
call
rcl
dec
mov
jg
mov
and
and
aaa
gs
cmpsb
aas
fcomp
scas
testl
sub
lret
dec
mov
negb
pusha
in
clc
aaa
filds
add
data16
inc
cli
jno
pop
mov
pop
adc
push
add
test
sbb
cltd
movsb
subl
mov
sbb
and
rcrb
mov
xor
push
lea
dec
cmp
jle
mov
mov
movsl
ss
popf
cld
jb
and
mov
repnz
pop
pop
add
in
pop
sbb
lea
jg
rorb
hlt
imull
mov
sarb
negl
mov
pushaw
lcall
add
adc
xchg
mov
shrb
shrb
pop
inc
push
out
cltd
out
je
push
mov
mulb
sar
add
add
ljmp
aas
test
push
bound
pushf
lds
bound
stc
in
rcrl
jb
mov
je
fs
push
gs
fadd
xor
and
imul
fisubrs
mov
jns,pn
mov
pusha
jmp
in
ret
cmc
cmp
out
add
mov
loope
in
jno
lock
aam
rol
and
test
nop
sbb
inc
sub
sub
ret
pop
into
push
out
out
enter
mov
mov
adc
or
sbb
mov
pusha
jo
aad
aam
fs
jge
pop
xchg
mov
test
mov
xchg
adc
mov
sbb
aam
push
push
pushf
add
test
sub
inc
jbe,pt
mov
xor
jp
mov
mov
hlt
fmulp
push
frstor
push
frstor
mov
sarb
push
call
jno
jl
xlat
insl
mov
daa
mov
add
gs
cmp
sub
mov
cmp
shlb
xchg
pop
xor
dec
popa
sub
dec
pop
mov
cmp
mov
ffreep
insl
pop
mov
mov
loope
xchg
out
jns
in
icebp
mov
jl,pn
jmp
push
cmp
push
adc
enter
xor
pushl
cmpsl
cmpsb
xchg
and
cli
mov
in
sti
and
rclb
jne
psubsw
xor
addr16
push
jg
loopne
xor
iret
out
icebp
leave
js
out
or
ror
add
jno
negl
imul
jo
imul
call
loop
mov
xor
cmpb
push
cmp
xor
mov
jle
in
insb
aas
and
jb
cmp
fst
sbb
rolb
and
mov
jle
les
mov
movsl
sbb
sbbl
push
jns
in
cmp
out
loopne
dec
lret
cli
dec
pop
pop
mov
movsb
inc
aaa
mov
cmp
adc
int
shl
and
call
daa
pushf
cmc
cmp
xchg
movsb
ret
pop
cmpsl
popf
jmp
cmpsb
clc
adc
imul
pop
cs
inc
xor
jae
sti
sbb
rol
sub
stos
movsb
in
mov
jns
sub
jo
mov
leave
pop
ficoms
hlt
shrl
sub
sub
pop
or
lds
mov
lcall
in
xor
jle
cmp
lahf
nop
dec
outsb
mov
cmp
dec
popl
in
jl
icebp
aad
jno
fwait
mov
lea
mov
push
rorb
sarl
sub
dec
jge
adc
lods
int
pop
test
out
sbb
scas
xor
das
in
push
xchg
xor
dec
mov
and
gs
gs
aaa
nop
xchg
jp
popf
mov
mov
repz
in
xor
jne
mov
mov
mov
hlt
jle
push
sbb
sarb
movzwl
test
aad
loopne
stc
outsl
inc
fisubl
mov
jno
loopne
mov
es
insb
inc
mov
pop
lods
jo
ljmp
loop
xchg
lds
xchg
push
dec
xor
ljmp
lods
int
es
fbstp
das
adc
mov
cmpb
fxch
rorb
imul
cmc
addl
mov
dec
addw
xchg
loopne
cld
imul
insb
insl
sahf
fst
popa
push
sbb
ret
inc
adc
mov
insl
xchg
imull
inc
lds
fsubs
mov
gs
lds
push
jbe
test
stos
enter
ds
push
xchg
add
aas
push
sbb
jl
in
sub
jg
in
cmp
push
cmc
adc
dec
shrb
sbb
repnz
sbb
leave
add
cmp
or
mov
pusha
out
push
imul
ret
loop
xor
xchg
in
daa
repz
fs
jns
inc
dec
xor
pop
fisubrl
fsubs
push
scas
stc
pop
and
xor
pop
cld
popf
adc
stc
inc
jb
mov
leave
push
pop
push
mov
xchg
jle
lcall
bound
mov
pushf
jb
shll
or
mov
and
daa
std
icebp
fiadds
scas
jge
popa
cmp
inc
xor
daa
testl
mov
push
fs
pop
pusha
mov
inc
ret
subl
pop
dec
add
and
jnp
push
cmp
in
cmp
adc
std
daa
fisttpll
out
mov
push
nop
sub
and
movsb
mov
push
vmovdqa
and
xchg
adc
aas
adc
cwtl
cld
mov
incb
cmp
fcompp
lds
mov
fisubl
pop
push
lfs
mov
imull
insl
jle
dec
jae
mov
ror
bound
sbb
fcoms
scas
jge
xor
loop
sahf
out
jno
mov
insb
jmp
xchg
stos
mov
mov
pop
pop
fmull
pop
out
in
stc
mov
mov
pop
push
ror
push
jne
mov
sbb
adc
out
mov
test
inc
fs
pop
pop
jp
loope
aas
fisubrl
fwait
cmp
iret
pop
add
movsl
aaa
jb
insb
imul
ljmp
mov
pusha
dec
jns
jge
mov
data16
popa
and
xchg
std
rolb
add
inc
dec
shrb
enter
jne
insl
imul
jne
mov
push
mov
in
icebp
pop
mov
sbb
adc
sbb
pop
mov
popa
xlat
insb
adc
vmovaps
ljmp
inc
std
dec
add
inc
mov
push
mov
xchg
adc
mov
pop
fwait
loope
pop
rcl
popa
inc
js
mov
cmpb
loop
ja
fists
add
insl
inc
shr
pop
leave
xor
inc
cwtl
dec
repz
in
sbb
lret
ret
push
inc
cmp
lret
pop
mov
notb
aad
sub
rorb
aaa
push
adc
cmp
add
repz
notl
mov
cmp
mov
rolb
cli
repz
or
enter
sub
jnp
addl
aaa
insb
sahf
mov
mov
bound
clc
scas
mov
jmp
xchg
pop
fimull
out
mov
insl
mov
insl
dec
data16
aas
xor
mov
dec
repnz
cmp
out
ret
cs
add
and
sub
jmp
and
mov
imul
inc
clc
addb
js
pop
adc
pop
sub
pop
and
gs
mov
cld
inc
xchg
cld
shrb
test
add
pop
cmp
cmp
push
inc
pop
push
cmp
cmp
inc
arpl
add
and
dec
mov
iret
lcall
mov
add
loope
jb
pusha
jecxz
ja
mov
pop
js
inc
mov
push
jl
add
ds
scas
lahf
call
idiv
les
lahf
and
popa
sub
sub
js
xor
imul
ja
bound
push
sub
mov
cmp
pop
add
out
push
hlt
cmp
xor
xchg
fcoms
sbb
or
mov
fs
loope
stos
insb
movsb
sub
add
pop
pop
retw
xlat
push
xor
cmp
lea
cmp
cmp
sarb
test
stos
cmpb
mov
mov
jne
pop
inc
rol
movsb
jno
sub
jg
push
hlt
cmp
loop
mov
xchg
insb
push
adc
jb
int
pushl
lds
push
and
jno
or
add
negb
mov
fwait
movl
cwtl
adc
inc
cld
out
mov
and
bound
push
in
aaa
call
inc
mov
out
xchg
aam
fsubrp
inc
dec
pop
inc
iret
test
into
popf
sbb
idivl
bound
dec
mov
and
xchg
xchg
mov
in
popf
xor
js
push
xchg
test
ret
rol
shrb
out
and
mov
rcll
test
ljmp
jnp
fld
mov
leave
pop
testl
dec
sbb
jns
mov
jl
sbb
daa
ljmp
mov
pop
cmp
out
mov
add
loop
out
push
hlt
call
sub
cld
sahf
in
xor
lret
in
push
dec
mov
insl
sbb
push
push
sub
or
xor
in
aas
sub
jecxz
mov
cmp
les
test
pop
push
jle
mov
std
insl
fldcw
cld
pusha
cmp
mov
mov
and
les
pop
rcl
mov
mov
popa
jns
inc
inc
xor
mov
loopne
out
pop
mov
mov
cltd
add
test
push
and
fwait
scas
jne
mov
mov
mov
pusha
pop
imul
loopne
sbbl
sbb
sbbl
sub
pushf
adc
xor
push
pushf
loopne
test
jl
mov
enter
popf
das
cli
jecxz
ret
outsl
sub
cltd
inc
lds
jmp
jns
pop
popa
cltd
fisubl
xor
mov
aad
inc
adc
jbe
rcrl
test
out
call
cmc
scas
fwait
jp
popa
aad
mov
sub
out
pusha
sub
rcrb
iret
or
scas
ret
mov
xchg
sub
shl
cmp
out
xor
cmpl
les
push
or
jae
in
sbb
stc
hlt
in
in
imul
pop
sti
rcr
jmp
movsl
xor
fstl
clc
adc
call
jno
or
aam
mov
jns
out
push
sbb
xor
add
jg
subb
inc
or
sbb
sub
add
stc
mov
push
sbb
jge
in
cld
jp
pop
leave
outsb
loop
in
aaa
inc
add
leave
sti
jmp
jns
xchg
pop
mov
mov
outsb
outsb
jae
dec
jnp
add
mov
stos
jge
mov
cmp
mov
sbb
xor
shlb
das
xlat
cmp
inc
xchg
or
adc
loop
pop
out
jb
xchg
out
int3
sub
and
sbb
pop
push
mov
nop
sahf
push
fwait
sub
mov
adc
aad
pop
pop
or
sti
ror
lahf
imul
test
and
adc
adc
mov
mov
push
scas
mov
sti
or
sbb
repnz
sbb
js
add
inc
hlt
mov
imul
cwtl
inc
mov
loopne
and
loope
icebp
dec
sarb
jno
jnp
and
in
xor
cs
mov
cmpsl
gs
ljmp
xlat
fwait
mov
idiv
into
push
and
imul
out
out
add
int
jb
sbb
jle
int3
fs
shr
lock
arpl
lahf
test
leave
pop
out
pop
sub
mov
in
pop
mov
mov
pushf
push
xor
pop
dec
sub
xor
and
mov
addr16
pusha
mov
mov
fistps
decb
aas
jo
xor
jb
hlt
or
dec
add
jo
jl
pop
loop
jl
cli
sbb
pop
nop
dec
push
xchg
int3
jbe
cmp
and
add
and
in
movsl
push
cmp
xor
cmpsb
cmp
dec
scas
push
leave
stos
sbb
sub
mov
loope
sti
cltd
std
std
divb
push
in
jns
cmp
nop
pop
aam
and
sti
add
cmp
rcl
ss
rcrb
dec
daa
gs
icebp
out
jmp
clc
fmuls
sub
movsl
mov
sbb
test
std
out
arpl
icebp
cld
je
popf
mov
mov
or
enter
jg
cld
ja
dec
fisubrl
int
out
add
icebp
xchg
cmp
and
int
xor
mov
loope
jmp
pop
fisubl
test
rcrb
dec
popf
push
jbe
jge
cli
in
in
lods
and
lret
hlt
dec
cmp
add
jp
adc
out
or
loop
xor
push
and
push
jo
xor
dec
repnz
leave
test
sub
or
sbb
mov
add
and
and
inc
add
nop
stos
repz
testl
cmp
mov
scas
sti
fimuls
imul
lcall
mov
mov
xor
add
jp
xor
sbb
mov
gs
mov
dec
add
cld
dec
mov
enter
mov
sbbb
imul
notl
mov
and
dec
not
xor
add
movsl
insb
sbb
nop
stos
pop
std
mov
hlt
popa
jmp
dec
pop
mov
icebp
aaa
jnp
mov
cli
dec
cmpsb
mov
xchg
mov
sub
jbe
lods
cmp
ljmp
aad
adc
xor
sbb
iret
pop
idivb
clc
pop
pushf
sub
push
iret
iret
mov
pushf
repnz
les
call
jmp
mov
add
xchg
movsl
jns
mov
inc
mov
cmp
mov
xchg
aad
out
cmp
or
inc
jle
adc
pop
inc
ficoms
jl
add
sti
fisttpl
sbb
rcll
sub
mov
push
sbb
shr
add
inc
shll
scas
lock
pusha
aad
push
mov
pop
incb
insl
frstor
jg
bound
inc
and
add
insb
out
inc
aad
ljmp
push
sbb
into
xor
fisttpll
xlat
and
loop
std
notb
imul
rolb
test
lcall
in
sub
loope
push
or
and
and
jne
fsubs
cmp
iret
insl
js
out
jmp
icebp
jae
sub
mov
cld
cltd
sub
sti
and
scas
imul
xor
inc
ss
add
mov
ljmp
cmp
adc
shl
and
or
test
call
repz
adc
lcall
mov
repnz
ret
gs
popf
and
jmp
pop
cmp
cltd
pop
push
loop
pop
cmp
stos
push
xor
ss
stc
mov
jg
lahf
jecxz
push
repz
fidivrs
jmp
data16
ret
xor
or
leave
and
jo
nop
fidivrs
or
das
sub
ja
sarb
pusha
rcl
gs
or
inc
jge
mov
push
or
insb
jnp
adc
mov
or
pop
sub
pushf
or
scas
mov
je
in
mov
aaa
pusha
or
inc
mov
sbb
xor
push
mov
dec
and
xor
je
ss
nop
add
fcoms
insb
xchg
pop
shr
imull
jne
aad
fistpll
cmpsl
xchg
in
jb
xchg
scas
inc
popa
sub
lea
fwait
addr16
pushf
jb
dec
cmp
mov
jne
cmp
movsb
add
cli
icebp
rcll
lret
sahf
ret
dec
push
fnstenv
call
xchg
push
arpl
imul
pop
lea
and
stc
bound
mov
sbb
adc
xchg
movsl
cmpsl
adc
sbb
fsubr
loop
out
mov
fisubrl
xor
lds
push
xchg
insl
fwait
jmp
popa
jmp
jne
mov
pop
scas
or
inc
hlt
pushf
adc
in
adc
cmp
pop
mov
mov
cld
xor
xlat
mov
dec
test
cmpsb
out
roll
sub
int
repnz
cltd
sahf
cmp
fiadds
dec
pop
mov
cmp
test
fildll
jbe
dec
lds
adc
fwait
xlat
sub
inc
jge
test
and
test
mov
shrl
sbb
push
stos
das
dec
je
cmpb
sbb
pop
xchg
xchg
lods
add
in
add
loop
inc
daa
mov
pusha
mov
icebp
lret
and
sub
mov
push
jo
sbb
pusha
xchg
push
and
jbe
or
pushf
xor
loope
fcmovb
cmp
cmpb
pop
xchg
hlt
ret
rorb
xchg
cmpsl
fmull
dec
xlat
je
xor
loop
jne
fisttpl
fwait
ja
jne
test
imul
pushf
data16
icebp
adc
push
add
and
cs
movsb
aas
pop
movl
mov
xchg
or
sbb
add
jge
mov
jle
fcmovbe
fisttpll
xlat
test
scas
loopne
inc
cld
test
mov
dec
cmp
dec
jbe
inc
push
push
dec
mov
dec
sbb
aam
jb
neg
inc
jecxz
jne
popa
lahf
sub
and
inc
fcomp
lcall
inc
out
add
jbe
mov
mov
stos
std
std
pusha
add
push
aaa
cli
nop
xor
orl
mov
cmp
gs
pop
or
or
xchg
aam
push
fcmovu
sub
or
cmpsl
out
shrl
push
pop
mov
jno
jle
sub
jmp
jae
dec
push
mov
xchg
or
sbb
adc
jmp
or
test
adc
into
ret
popa
jmp
lahf
add
inc
cmpsb
fldl
add
xchg
mov
cmp
sti
int
loop
dec
lret
stos
imul
jae
jnp
mov
sbb
stc
inc
aaa
loopne
mov
pop
aam
dec
sub
test
pop
sbb
inc
shrb
pop
xchg
test
adc
xor
ja
ret
into
mov
jae
push
aaa
and
cmpb
cld
inc
mov
cli
sub
daa
mov
mov
push
in
mov
xchg
and
and
fldcw
push
mov
aaa
jae
pop
lods
pop
jnp
inc
pop
test
xchg
cmpsb
stc
cmpb
sti
and
mov
xchg
data16
in
cs
sbb
dec
pop
outsl
sbb
mov
jecxz
or
dec
sbb
cld
lock
les
sarb
mov
jae
out
das
shr
test
cmp
or
push
mov
dec
push
cmp
xchg
mov
iret
inc
or
rcr
jle
idiv
push
sub
int3
jmp
xsavec
mov
mov
mov
scas
leave
fstps
or
iret
add
sahf
frstor
sub
cmpsb
dec
insl
mov
ljmp
icebp
mov
and
mov
xchg
das
repnz
dec
jecxz
cmc
xor
add
in
mov
xor
fistpll
mov
mov
lret
test
mov
jge
ds
ret
jmp
sbb
pop
lock
fstps
loope
sbb
xchg
gs
ficompl
mov
aad
lods
call
lahf
xor
sub
sti
xchg
lea
sbb
stos
mov
mov
int3
sbb
iret
scas
lcall
and
jnp
nop
cmc
divb
loop
pop
lret
push
enter
xchg
les
adc
sbb
push
adc
popf
pushl
push
and
lea
mov
or
and
sbb
or
movsl
add
xchg
inc
xor
mov
jge
mov
imul
dec
dec
jno
mov
and
lahf
push
fwait
inc
test
mov
xorl
mov
mov
lock
jb
imul
adc
imul
inc
mov
add
sbb
sbb
mov
xchg
ret
out
jle
arpl
add
fsub
icebp
mov
int
cwtl
fs
int
add
pop
or
add
pop
mov
xchg
roll
in
dec
push
push
faddp
adc
fcomps
push
arpl
test
cli
sbb
mov
pop
idivl
imull
adc
mov
push
rolb
out
and
fcmovne
sarl
outsl
sti
into
mov
sub
pop
stos
data16
data16
push
in
roll
je
dec
adc
and
shll
mov
inc
xor
addr16
push
jbe
test
jnp
xchg
dec
and
and
bound
add
xor
mov
loopne
int3
kmovw
mov
jmp
daa
sub
inc
ss
or
sti
out
aad
jg
cltd
in
femms
stc
pop
mov
aam
arpl
loope
mov
movsb
sub
movsl
push
ja
sub
lods
aaa
sub
andl
dec
sti
daa
lahf
jecxz
pop
sub
or
mov
ret
fsubrl
and
outsl
inc
test
popa
testl
mov
std
xor
xchg
fildl
in
jecxz
mov
negl
xchg
ja
mov
cltd
xlat
mov
jmp
cmp
mov
scas
lahf
int
aas
ljmp
mov
scas
add
pop
pop
sahf
in
loope
jo
push
mov
and
ss
push
adc
mov
sub
dec
scas
call
sub
inc
cltd
mov
leave
hlt
push
addb
iret
popl
xchg
sbb
jno
cmpsb
xchg
ljmp
pop
and
shl
lods
adc
xor
mov
cmp
test
popf
push
test
imul
xor
hlt
dec
cmpsb
and
dec
mov
pop
cmpsl
pushf
adc
mov
pop
xor
add
movsl
xchg
and
out
das
cli
dec
push
pushf
xchg
sub
inc
or
jnp
addr16
inc
or
add
cmp
and
cmc
mov
call
add
xchg
icebp
xor
idivb
movsb
push
ljmp
das
cmp
push
push
lds
adc
inc
jno
mov
cmpsb
or
dec
dec
adc
lods
push
into
ret
mov
movsb
mov
and
sti
mov
push
sbb
xchg
out
test
jnp
aam
lods
imul
cmp
jno
and
je
lock
sarb
sahf
mov
mov
jae
imul
out
add
test
or
outsb
in
cmc
idivl
fcoml
jnp
mov
lea
pop
scas
rol
push
hlt
movsl
stc
mov
lret
test
cmp
push
cmp
aaa
sbb
out
test
sbb
mov
xor
fcompl
inc
fwait
xchg
jmp
int3
lock
out
sbb
xchg
std
lret
mov
iret
ds
pop
inc
xchg
jae
mov
cmp
lcall
enter
mov
popa
in
or
mov
ljmp
loop
jle
out
mov
sti
rcll
xchg
shrb
mov
sbb
lods
mov
mov
mov
sub
xchg
jne
rcrb
cld
jge
pop
mov
or
sbb
cld
jo
je
pop
xor
add
rcll
shll
loopne
xchg
notb
mov
lahf
inc
sahf
dec
push
hlt
add
int3
xchg
jle
out
pop
out
mov
and
push
std
orb
ljmp
call
out
dec
sbb
lods
inc
xor
pushf
fdivl
addl
sbb
pop
fisttpl
jmp
sub
hlt
push
shl
dec
mov
add
insb
insl
sub
inc
inc
xchg
shll
xor
lret
in
jg
cmpsl
subl
js
jae
popf
or
daa
or
dec
pusha
xchg
bound
lcall
cmpsb
loope
and
adc
dec
xchg
cmp
cmp
jmp
add
stc
inc
insb
mov
inc
xor
daa
into
adc
xchg
mov
ret
loope
mov
std
or
popf
jb
adc
adc
imul
push
daa
xor
xchg
pop
xchg
and
bound
iret
repz
lods
iret
mov
shlb
jg
test
ret
iret
jecxz
roll
xchg
fiadds
lahf
mov
cltd
push
dec
and
push
xor
adc
lock
or
and
xchg
sarb
mov
outsl
dec
xchg
jmp
loop
lret
repnz
mov
aaa
shl
lds
lods
int
mov
pop
icebp
cld
rcrl
pushf
mov
neg
lret
lahf
xor
loope
in
lods
call
cmpsl
jbe
call
mov
fwait
inc
idiv
push
int3
jae
arpl
pop
inc
jns
jbe
icebp
sbb
mov
dec
shll
adc
fyl2xp1
sahf
pop
or
lock
pusha
adc
xor
xchg
sub
and
push
ss
neg
mov
in
movsl
sub
aad
pop
mov
mov
pop
mov
in
popf
rcll
push
or
or
jp
out
lahf
sub
movl
inc
xchg
xchg
xor
daa
mov
out
pop
call
pop
xor
subl
adc
push
out
cmpb
sub
rcrb
dec
jns
pop
out
sub
lods
outsb
out
jmp
ljmp
sbb
shrb
outsb
xchg
push
jo
dec
xchg
push
or
mov
ds
outsl
ret
loopne
jl
cmp
push
jecxz
cld
int
dec
jae
vmovhps
aad
pop
scas
mov
xor
jo
xor
pushf
xor
mov
fwait
cmpsb
sbbl
xchg
into
dec
add
popa
jb
push
xchg
pop
push
adc
cmp
fcmove
adc
push
fwait
sbb
adc
sahf
imul
into
movsb
lret
pushf
bound
cmp
add
ss
sub
out
inc
pushf
add
mov
adc
loop
and
pop
fs
xlat
psrad
jl
xchg
xchg
dec
rcrb
jnp
mov
mov
frstor
push
iret
push
cmpsb
int3
movsl
push
cmpsb
mov
in
inc
sub
insb
xor
pusha
pop
or
add
adcb
sbb
adc
push
out
test
fcmovbe
xchg
xlat
ret
es
or
testb
and
xchg
xchg
ret
pop
pop
cmpsl
test
stos
push
pushf
gs
mov
pop
pop
aam
fwait
sub
fisttps
adc
mov
add
dec
jnp
push
mov
mov
pop
and
out
xlat
jl
jp
or
mov
stos
mov
loop
xchg
or
mov
dec
sbb
and
lahf
push
fnstenv
pop
sbb
push
xor
out
jg
in
pop
jge
cwtl
das
push
inc
scas
notb
lret
cmp
mov
inc
xor
pop
mov
pop
popf
repz
and
sahf
mov
aas
rol
int3
adc
and
inc
mov
xchg
cmp
add
nop
out
or
jcxz
arpl
add
pop
fisubrs
cld
sahf
shlb
jns
mov
je
insb
ss
and
fcomps
out
inc
or
mov
push
loopne
cmp
xor
xor
jbe
movsl
jmp
pop
movsl
adc
push
push
push
xor
aad
xor
pop
sbb
lret
xchg
add
inc
movsb
push
jle
imul
jecxz
in
ds
push
leave
xor
push
mov
test
pusha
aaa
popa
mov
add
iret
cmpsb
inc
xchg
sub
repz
mov
into
fadd
push
fldpi
pushf
sbb
xor
pop
pop
mov
inc
jno
imul
push
mov
push
cmp
rorb
call
rcrl
jmp
xchg
mov
xor
sbb
int
pop
pop
or
sub
test
push
adc
pusha
inc
test
cmpsl
mov
pop
sub
subl
insb
mov
pop
push
push
sub
scas
dec
add
test
js
xchg
sbb
sub
adc
rorb
lahf
jg
mov
adc
dec
push
mov
pop
cmp
idiv
fwait
lret
hlt
mov
ror
addr16
jge
add
inc
xchg
pop
push
pop
push
icebp
into
add
bound
rol
sbb
mov
mov
pop
fildl
int3
in
adc
and
jb
idiv
mov
jmp
test
add
cmp
mov
jnp
push
mov
mov
inc
push
arpl
loopne
pushf
xor
out
sub
and
dec
test
ret
in
and
cmp
push
push
jl
out
icebp
inc
subb
dec
fs
icebp
sbb
test
sub
sbb
push
jb
out
or
ret
pop
mov
in
aad
jl
std
adc
jbe
add
mov
jnp
ja
ret
insl
and
jae
pop
jbe
adc
popa
sbb
js
in
insl
jle
out
jns
sbb
xchg
mov
lret
and
lea
jo
div
dec
inc
out
nop
loope
push
js
inc
pop
addr16
xlat
cmp
sti
inc
mov
dec
rorl
stc
jo
and
xor
pop
lea
push
sub
xchg
adc
xor
cmpsl
into
popf
clc
mov
mov
jnp
les
push
loopne
jbe
fucomi
mov
mov
ja
sarb
ja
andl
xor
push
xor
pop
fstps
pop
or
mov
mov
test
popf
cwtl
rclb
mov
jecxz,pt
jne
adc
mov
and
adc
icebp
test
xor
outsl
mov
gs
hlt
pop
push
arpl
ss
adc
xchg
std
mov
push
shll
mov
cmp
add
inc
imulb
and
cmc
rcrb
lea
inc
mov
sbb
loope
jne
xchg
and
fsubp
mov
add
adc
push
bound
push
pusha
sbb
mov
pop
and
pop
lods
push
add
cltd
cli
imul
mov
aam
lods
stc
insb
sar
test
mov
fldt
pop
add
flds
dec
inc
lret
out
push
testl
int3
xor
cld
adc
std
push
jl
orl
and
pop
xchg
test
xchg
enter
pop
sub
mov
pop
push
sbb
sti
mov
out
shll
cmpsl
and
je
sub
out
mov
fsub
insl
popa
and
stos
mov
push
mov
outsb
mov
in
lcall
lcall
cmp
into
fs
lods
xchg
fisttps
xchg
out
call
clc
jl
nopl
iret
addr16
cmp
mov
mov
mov
xor
adc
xor
mov
fcmovnbe
das
add
cmp
dec
into
jno
ljmp
imul
sub
jae
fildl
icebp
out
inc
imul
mulb
dec
and
rcrl
xchg
push
fstpt
adcl
xlat
pop
ffreep
sub
fcoms
lahf
sub
push
pop
rcll
push
in
bound
pop
out
xchg
or
mov
push
sub
lds
cmp
mov
push
scas
mov
sbb
jne
outsb
fidivl
xchg
jnp
rclb
sub
adc
xor
mov
fstp
les
xor
ds
pop
rclb
shlb
jmp
test
or
mov
out
adc
test
xchg
pop
hlt
stc
insl
adc
inc
pop
out
mov
sbb
movsb
repnz
addr16
cmp
sbb
pushf
sub
pop
mulb
popf
jge
xor
push
push
dec
bound
cli
mov
push
jmp
mov
lahf
push
sbb
push
mov
adc
sub
xchg
mov
aam
lods
movsl
push
sbb
int
push
mov
outsl
insl
insb
xorb
mov
rcrb
ficompl
mov
mov
mov
push
push
sbb
mov
into
cs
rorl
adc
loop
dec
fdivrp
adc
test
aam
inc
mov
imul
ret
cmpsb
and
xor
add
push
dec
xchg
mov
add
outsl
mov
mul
add
in
adc
pop
pop
jne
push
cmpsl
insb
jo
shll
xchg
fildll
mov
push
cmpsl
jne
add
movq
pushf
pushf
das
icebp
rcrb
orb
jmp
lods
rol
jge
shlb
jmp
jmp
fisubs
lods
sarb
and
mov
nop
daa
push
test
lret
out
test
cmp
arpl
test
inc
pop
pop
rcl
cmpsl
stos
movsb
mov
insl
ficoms
adc
push
mov
loope
cmc
repz
dec
xchg
icebp
adc
int
sbb
mov
xor
pop
mov
lods
push
inc
es
nop
inc
std
pop
inc
adc
jne
xchg
jle
insb
je
mov
push
jo
test
mov
test
pop
jle
in
fscale
add
std
sbb
into
mov
pushf
mov
cmp
jmp
push
insl
inc
in
mov
cmp
dec
shrb
leave
mov
mov
cwtl
gs
shrl
mov
insl
sub
fisttpl
jo
add
mov
lds
mov
fldt
dec
popf
mov
push
std
xor
addr16
sbb
aad
mov
push
cmp
adc
pop
sbb
xorl
dec
fldl
cmc
pop
cmc
mov
add
lcall
hlt
fcoms
cmp
push
out
js
popf
inc
sbb
pushf
mov
ds
insl
xchg
ret
jl
sbb
pushf
dec
xor
sbbb
incb
inc
mul
xchg
fcoms
icebp
add
daa
pop
sbb
push
lahf
testb
sub
fnclex
xor
mov
dec
sbb
enter
pusha
sub
mov
xlat
sub
xchg
sbb
arpl
push
les
pop
test
xchg
push
inc
lock
adc
dec
jge
and
lahf
mov
adc
add
sbb
fxch
loopne
cmp
mov
xorl
jno
out
mov
popa
ret
sbb
movq
cmp
xchg
int3
dec
pushf
jg
fisubs
pushf
push
out
mov
aam
fiadds
jl
sbb
cli
icebp
jle
or
dec
insb
cs
mov
les
aaa
cmpsb
call
xchg
pop
pop
xor
inc
scas
mov
into
out
inc
mov
int3
mov
and
mov
sub
mov
mov
scas
cmpl
pusha
sub
std
lods
and
rcll
ljmp
adcb
mov
dec
jle
jg
inc
outsl
xor
pop
cmpsb
inc
ror
dec
incb
subl
sub
cmp
mov
jnp
jo
out
test
cmpsb
lds
xchg
and
push
hlt
mov
in
lods
jg
out
in
dec
popf
inc
jle
iret
dec
inc
and
or
bound
pop
movsl
pop
mov
hlt
test
mov
gs
in
bound
pop
lds
ja
mov
outsb
dec
mov
jbe
add
pusha
inc
das
bound
test
adc
test
into
cmp
push
adcl
in
pushf
mov
and
int
xchg
in
jae
mov
mov
or
inc
add
jle
in
pop
clc
xchg
pop
inc
or
pop
jle
enter
leave
in
xor
xor
test
adc
std
insl
adc
insl
cmpsb
or
sbb
xchg
insl
inc
inc
sbbl
fadds
sar
sub
pop
xchg
nop
pushf
das
sub
daa
or
add
mov
lret
rclb
sbb
cmp
iret
les
push
out
cld
cmp
sub
ljmp
test
rcrl
stos
mov
movsl
movsb
ds
orb
sarb
inc
repnz
jmp
in
cmp
jecxz
adc
lods
push
push
sub
scas
fs
stos
pop
inc
movq
xchg
push
push
shlb
or
icebp
clc
push
jno
sbb
jae
insb
cmp
lods
add
aas
adc
rcll
popf
test
int3
mov
in
daa
cwtl
sbb
icebp
stc
cs
fcomp
dec
adc
or
aam
shll
push
sub
lods
inc
mov
and
mov
js
adc
cwtl
pop
lds
leave
and
gs
pop
add
or
sbb
adc
cmp
outsb
add
shr
sbb
jmp
mov
push
xchg
movsb
mov
xchg
jmp
cmp
add
nop
cmpsw
scas
mov
sar
mov
in
lret
add
ds
or
addb
fstps
and
mov
bound
add
mov
inc
adc
fnstsw
push
and
ror
cmp
ficoms
notb
aaa
lret
popf
inc
mov
shll
ret
pop
aam
popf
sub
add
mov
mov
sub
outsb
pop
scas
ds
sbb
add
leave
xor
nop
xor
jne
lds
xchg
jl
cmpsl
inc
or
mov
popl
sti
sbb
leave
mov
repnz
mov
xchg
das
jnp
arpl
or
mov
xor
jecxz
mov
sub
loopne
rcl
and
dec
imul
std
in
test
enter
jne
cmp
stos
ljmp
mov
push
pusha
jbe
cmp
movsb
clc
out
aas
cmpsl
cmpsl
fcom
dec
jne
aas
in
aas
sarl
dec
mov
js
lret
int
jae
pushf
ja
dec
sub
push
add
inc
and
pop
aam
mov
inc
inc
xor
mov
mov
popa
xchg
or
in
stos
adc
push
pop
cli
cmp
sti
inc
cli
mov
push
adc
adc
ss
mov
xor
sub
jp
test
jae
lods
mov
inc
inc
leave
sti
lea
pop
loop
sub
imul
cmpsb
sub
pop
mov
jle
rclb
dec
xchg
lcall
rol
lock
call
dec
mov
pop
inc
cli
scas
add
lahf
mov
hlt
jno
scas
aaa
cmp
pop
popa
cmc
dec
imul
fstps
inc
js
js
xchg
lahf
dec
mov
pusha
cmc
mov
js
in
push
divl
fstpt
cmp
imul
dec
adc
mov
enter
les
sub
inc
icebp
lds
lret
hlt
mov
inc
mov
push
mov
shrb
add
clc
dec
xchg
out
ss
xchg
jg
jecxz
stc
mov
jl
jb
in
lcall
rcr
stc
mov
movsl
jle
and
dec
sub
dec
mov
lea
sub
insl
mov
fldenv
push
repnz
icebp
sahf
orb
out
and
mov
sbb
sti
jl
mov
stos
jg
lds
dec
xchg
inc
add
mov
jb
mov
subb
cwtl
lock
hlt
fimull
lock
push
ret
add
inc
mov
mov
data16
mul
xchg
inc
mov
xchg
cwtl
out
jg
jmp
insl
push
stos
fistl
xlat
jle
cld
ds
push
dec
mov
inc
sub
mov
int
and
jp
add
sbb
int3
stc
test
pop
dec
inc
sbb
sub
jno
xchg
sti
out
loopne
push
pop
in
sahf
push
loopne
push
adc
popf
cmp
cwtl
cmc
ret
dec
xchg
cs
dec
mov
sub
mov
shrb
cmp
enter
fnsave
inc
loop
rol
sub
repz
xchg
mov
cmp
movb
das
fmull
shr
dec
sub
mov
scas
xchg
jo
imul
pop
push
cmp
shl
xchg
xchg
xor
dec
sub
push
cmp
xor
push
imul
xchg
sbb
aaa
xchg
or
aad
fchs
and
jl
mov
into
adc
mov
cmp
daa
and
push
scas
movsl
xor
jmp
xchg
mov
leave
jmp
jmp
mov
xlat
adc
sub
faddl
and
push
mov
mov
out
stos
sub
jmp
and
push
adcb
mov
xor
cmp
cmp
and
gs
movsl
jmp
pop
xchg
mov
ret
add
push
int
mov
out
dec
sbb
std
jl
fnsave
je
lret
fs
dec
sub
mov
pop
clc
and
inc
cmpsb
push
sub
ret
mov
stc
test
out
xor
mov
xor
mov
push
mov
mov
cmp
adc
push
adc
icebp
mov
cmc
inc
stc
gs
std
xor
cmp
outsl
dec
mov
jecxz
push
int3
ret
and
add
mov
cltd
data16
jnp
dec
adc
lahf
sub
push
bound
or
mov
mov
jo
cmp
das
adc
mov
lret
addr16
and
out
add
cli
push
ljmp
mov
dec
mov
pop
testb
add
movsb
mov
xchg
fsubr
sub
add
dec
cmpsb
mov
popa
push
scas
and
pop
mov
lret
mov
out
add
xor
or
xor
sarb
loope
and
pop
and
pop
stos
mov
popf
popf
mov
aam
or
test
mov
inc
enter
cld
aaa
fsub
dec
movsb
fdivl
adc
mov
xchg
gs
mov
in
and
cmp
xor
cmpsb
clc
fnstcw
and
mov
or
mov
ja
sti
movsl
add
outsb
fisttps
leave
repnz
add
cmpsb
cmc
jp
dec
push
jo
pop
repz
xchg
sub
fistpll
mov
or
movb
push
das
adcb
movsb
push
cltd
int
or
hlt
out
aam
lds
shr
int
cmc
xor
clc
sub
push
sub
int
loope
loop
je
in
mov
dec
ret
hlt
js
in
add
or
cltd
mov
mov
loopne
mov
jecxz
in
gs
ret
es
out
lretw
movsl
xchg
adc
mov
scas
add
sub
leave
mov
dec
xchg
cmp
movsl
mov
sahf
xlat
ja
mov
enter
fcmovb
mov
adc
sub
cld
push
xlat
aam
xor
mov
test
cmp
cmp
sti
jp
call
sbb
pusha
push
out
sub
mov
inc
inc
cmpl
movsb
imul
mov
imul
push
adc
scas
and
pop
stc
add
inc
rorb
call
out
sarl
and
jg
loope
add
jecxz
adc
data16
cmp
lahf
popa
jmp
inc
aad
xchg
out
push
std
xor
fs
and
rolb
aad
mov
sub
or
or
into
stos
es
mov
push
add
mov
add
lret
mov
subb
sbb
movsb
mov
subl
xor
xlat
fnstsw
mov
mov
jno
pop
inc
mov
stc
xchg
loop
cmp
pusha
jo
cld
mov
cld
mov
sbb
std
lods
lea
mov
xor
leave
jns
incb
push
adc
push
sub
cli
xchg
xor
out
nop
adc
repnz
sbb
fwait
pop
cltd
mov
mov
sub
push
enter
aam
sti
jmp
pusha
push
lock
js
xchg
sub
int
and
into
loope
dec
cli
xor
insb
aad
xor
je
jno
xchg
fcoml
imulb
jmp
mov
ljmp
outsb
in
iret
fs
jns
pop
fsubrl
mov
push
sbb
ficoms
cmpsl
mov
and
sub
mov
enter
cmpsb
xchg
ds
xorl
and
test
outsb
enter
enter
cmpl
fcomp
xchg
sar
dec
cwtl
vmovapd
jle
mul
cld
fnstsw
sub
pop
xchg
push
inc
mov
mov
mov
sub
jbe
xor
push
inc
mov
out
sub
fmuls
sbb
mov
fldt
dec
mov
movsb
sahf
jp
cmp
xchg
sbb
cmc
cmp
addl
bound
pop
mov
test
jae
pushf
dec
mov
pop
mov
cmpsl
je
dec
out
bnd
and
leave
jo
jns
lock
in
mov
arpl
leave
test
sub
jno
and
in
or
call
int
jns
xor
aam
jne
inc
mov
xchg
inc
je
mov
aaa
add
cli
xchg
xchg
mov
notl
fwait
jae
and
xchg
pop
xor
sub
xor
pop
in
mov
cmpsl
lea
clc
cmpsb
bound
xorb
repnz
cltd
cmpsb
lods
mov
jmp
out
rcrl
cmpsb
pop
sbb
push
add
xchg
sarl
ret
jecxz
insl
inc
jl
call
push
pop
loope
es
sub
pop
popa
xor
orb
gs
dec
jl
jmp
subl
std
mov
lahf
fmuls
fld
icebp
push
adc
or
xor
cltd
sbb
mov
pop
inc
sub
enter
mov
jnp
shrb
sbb
ljmp
cli
mov
orl
mov
popa
cltd
inc
xchg
adc
push
stc
mov
xor
xchg
rcrb
jg
insl
shrb
add
loop
xchg
mov
cmp
and
in
mull
dec
mov
lods
nop
imul
std
mov
subb
pop
clc
mov
sbb
mov
sahf
or
xchg
and
loopne
push
stos
fdecstp
popf
in
fucomi
inc
mov
insl
inc
or
jmp
mov
pop
iret
dec
push
mov
pop
call
dec
sbb
inc
push
mov
or
fwait
inc
fistps
loop
dec
inc
push
cmp
fdivrs
dec
in
cli
dec
sub
add
cmpsl
test
jge
push
sub
subl
psrlw
and
inc
gs
add
cld
push
rcll
pusha
dec
mov
cmp
xchg
fisttpl
outsl
dec
test
inc
and
xchg
sub
insb
ret
lds
and
dec
dec
andl
lods
out
into
jmp
daa
ljmp
jge
inc
or
pop
push
mov
scas
sbb
inc
mov
cmpsl
fisttpl
jl
bound
adc
lahf
dec
pop
or
inc
xor
push
fcomp
adc
fistpl
test
pop
fildl
add
in
and
or
xchg
or
pusha
and
stos
daa
inc
cmp
popf
adcb
test
push
dec
std
push
icebp
icebp
testb
daa
aam
mov
in
cmp
int
scas
cwtl
pop
xor
mov
inc
fnstenv
xchg
lcall
mov
jg
enter
jg
call
fcomps
and
push
lea
jmp
gs
cmp
xchg
faddl
xor
cmp
push
out
cwtl
xchg
add
or
popf
inc
les
jne
daa
cld
mov
jbe
mov
jp
jmp
enter
mov
daa
testl
sbb
jmp
mov
adc
add
js
push
inc
sub
nop
iret
data16
xchg
mov
stc
mov
or
outsb
pop
sbb
push
xchg
fsubrs
and
lds
movsl
sbb
stos
movsl
jge
cmp
je
inc
sbb
adc
xchg
xor
mov
fidivl
int
shlb
xor
leave
sti
sbb
repnz
test
fmul
add
or
outsl
bound
sbbl
out
push
enter
pop
jne
xchg
les
aaa
enter
loope
int
cmp
xor
outsb
stos
ljmp
sbb
xchg
ja
xor
sbb
in
xchg
cli
push
cmp
das
and
ficoml
pop
push
dec
mov
sbb
add
insb
les
inc
adc
sub
aaa
ficoms
pop
mov
mov
outsb
xlat
sti
mov
or
popf
xchg
mov
adc
incl
outsl
and
pop
xchg
lret
inc
push
push
test
fisubrl
jg
push
fdivs
into
jnp
pop
mov
stos
xor
xlat
cmp
out
movsl
adc
aam
pop
or
xchg
add
mov
jnp
mov
sub
adc
jg
adc
jp
idiv
cmc
loop
aad
les
mov
call
mov
cwtl
in
ljmp
jecxz
and
push
hlt
mov
pop
pushf
pop
scas
cmp
mov
repz
add
sub
add
aad
mov
popw
fwait
jb
cmpsl
cmpsb
dec
cltd
call
xchg
adc
test
mov
fldcw
imul
jns
fiadds
lahf
cmpsb
mov
lock
cli
and
rcrl
sbbb
sub
cmpsl
cmp
into
scas
mov
cmp
sahf
mov
jo
xchg
mov
or
enter
pushf
lds
popa
mov
inc
insb
repz
and
test
dec
pushf
sub
leave
mov
pop
mov
lock
enter
dec
nop
fs
push
out
shlb
push
imul
sbb
sub
and
scas
dec
mov
xchg
cld
add
mov
divb
fistl
daa
pop
imul
notb
into
mov
cmp
dec
sub
adc
and
jno
aas
pop
pushf
sub
add
ljmp
fs
call
popa
sarl
xchg
jnp
cmpsl
lods
pushf
nop
jecxz
cli
jp
push
out
inc
pop
arpl
lods
aam
mov
test
cld
shrb
stc
xchg
pop
stos
stos
repz
inc
dec
pop
ficompl
jle
arpl
pop
loopne
fdivrp
xchg
lods
fwait
pop
test
in
pop
bound
loope
dec
sbb
xchg
pusha
stc
adc
push
mov
bound
or
test
sbb
pop
or
ss
cmp
enter
dec
sbb
jmp
rolb
lock
jb
adc
es
jo
push
movsb
mov
clc
pop
jge
adc
dec
stos
out
pop
lock
or
adc
mov
cmpsb
lret
jg
mov
stc
addb
mov
stos
xor
sbb
iret
pop
pusha
cmpsl
sahf
xchg
mov
clc
sub
fldt
in
out
mov
sub
cmpb
fadds
mov
dec
jg
popa
jge
mov
jp
test
pop
sbb
cmpsl
lcall
pop
sbb
insb
or
lds
and
divb
in
mov
fwait
pop
in
fwait
int3
cmpsb
sbb
lds
sbb
enter
xor
mov
push
pop
add
loope
xor
push
adc
push
adc
test
in
add
roll
xlat
push
pop
mov
cld
and
fcoms
and
and
cmp
ja
adc
fsubs
jbe
popf
lahf
jecxz
adc
and
arpl
fldt
jp
push
hlt
mov
inc
xchg
pop
cmp
mov
orb
inc
mov
repnz
inc
push
xchg
jge
cmp
js
lcall
aad
clc
cmp
into
cmp
cmpsl
cmpb
xchg
push
adc
pop
jbe
pop
sub
aad
fstpt
lcall
pop
add
aaa
sarb
call
cmp
out
movsb
bound
adc
call
enter
cmp
imul
pop
vprotb
icebp
jecxz
imul
mov
cmp
loop
insb
ret
add
add
and
and
rol
lahf
xor
and
add
jo
leave
pushl
mov
cmp
mov
int3
adc
xor
int
pop
push
test
shr
pop
adc
add
lock
data16
in
push
scas
push
push
jge
arpl
scas
aaa
mov
add
jbe
sub
imul
stos
lret
add
mull
xor
xchg
mov
cmpsb
rclb
mov
popf
mov
jg
xor
jo
ljmp
mov
ror
sarb
inc
push
test
adc
ret
ret
sbb
sbb
test
clc
lods
out
andb
test
mov
ds
outsl
fidivs
aas
mov
push
push
sbb
ret
cmp
adc
cmpsl
pop
jns
dec
cwtl
stos
test
cld
lahf
lret
adc
and
dec
data16
jp
xor
jae
and
jbe
mov
fists
imul
loope
leave
arpl
xor
sarl
rcrb
out
mov
addl
push
mov
jns
push
jg
mov
jmp
mov
cmp
jp
sbb
imul
out
mov
jne
stos
ss
and
jmp
push
mov
icebp
iret
sub
and
jg
add
add
cld
icebp
enter
lods
jns
add
arpl
stos
adc
bound
mov
fxch
ret
out
ss
cmp
cmp
push
xor
mov
dec
inc
dec
rolb
jb
cmp
inc
rorl
jl
cmp
jp
cmpsb
inc
aaa
popf
xor
cmp
psrlw
xor
and
and
sbb
cmpsb
cmp
mov
mov
add
jb
mov
or
pusha
aaa
dec
in
dec
adc
movsl
lret
inc
or
lahf
ds
cli
sbb
pop
ficoml
or
addr16
sbb
jecxz
mov
insl
jg
jp
in
mov
movzwl
popf
in
test
lahf
std
mov
mov
test
fcmovnb
mov
mov
xchg
jne
out
mov
xlat
outsb
out
xor
adc
cmp
movb
aaa
cmp
adc
arpl
pusha
add
and
mov
rclb
imul
popl
sbb
xchg
add
mov
ret
pop
test
decl
ss
jecxz
fwait
negl
inc
test
imul
sbb
ljmp
shrd
xchg
xchg
dec
push
mov
test
fwait
mov
xchg
sahf
pushf
xchg
psllq
mov
ljmp
mov
fucomip
jmp
dec
or
fadds
lcall
sub
pop
mov
out
push
cld
inc
xor
dec
cmp
cld
inc
imul
fucomip
adc
xchg
mov
jne
xchg
fadds
dec
and
repz
jns
inc
cmpsl
adc
dec
fistpll
stc
jmp
aad
fmulp
pushf
inc
sahf
mov
fcompl
shll
sub
cmpsb
push
out
mov
sub
add
jno
fmuls
loop
insl
xchg
add
mov
in
mov
lods
ljmp
sbb
push
movsb
and
test
mov
lret
popf
fwait
or
push
ja
imul
aaa
popf
addr16
rcrb
pop
lret
xor
jnp
jnp
mov
je
fcompl
imul
fisttpll
cmp
scas
sti
inc
mov
xchg
add
adc
fiadds
cmp
bound
cld
loop
inc
test
adc
adcb
fdivrl
cmpsb
movlps
and
jg
inc
cmc
fs
test
fldenv
ret
mov
cmp
jecxz
std
cmp
aad
push
test
std
out
push
inc
push
mov
push
mov
pop
mov
shl
push
fcmovnb
or
les
push
mov
movsl
filds
orb
jbe
jle
gs
xchg
aam
push
cwtl
fwait
cmp
clc
data16
jns
stos
push
pop
jecxz
insb
mov
jne
sub
or
imul
add
jo
ljmp
push
nop
push
add
mov
sub
adc
lea
sub
inc
repnz
jae
adc
add
push
mov
xor
dec
nop
push
dec
mov
jae
lds
in
insb
inc
xor
mov
bound
stc
jge
mov
or
xchg
aaa
in
out
mov
lods
dec
pop
cli
into
in
jmp
mov
cmp
xlat
and
dec
dec
out
cmp
pop
sbb
out
aaa
mov
push
mov
in
into
push
and
pop
rolb
adc
ror
aam
shl
sbb
lock
jno
xor
mov
sbb
mov
addb
pop
add
pop
dec
inc
mov
mov
add
int
mov
push
aas
pop
jnp
jp
fiaddl
xor
pop
out
gs
pop
sub
adc
fistl
mov
add
lock
leave
sub
in
daa
pop
subl
stos
sahf
sub
dec
imul
xchg
jo
push
cltd
dec
inc
pop
jmp
pushf
add
inc
mov
ss
fisttpll
push
mov
or
movsl
cmp
mov
push
mov
in
mov
mov
cwtl
push
in
mov
adc
jmp
jmp
push
aas
xchg
cmpsl
xchg
adc
mov
xchg
sbb
loopne
das
mov
jecxz
add
mov
sub
dec
test
lock
mov
negb
rcl
fdivrs
inc
cmpsl
and
and
mov
shrl
adc
jle
daa
pop
in
clc
icebp
rcrb
in
data16
mov
loopne
mov
lcall
lock
lock
std
mov
cli
in
call
push
adcb
clc
dec
aaa
add
xor
ljmp
std
dec
in
int3
les
pushf
sbb
push
out
mov
inc
repnz
jo
mov
mov
sbb
icebp
stc
xchg
in
mov
int
fiadds
inc
in
in
adc
out
adc
loopne
sbb
mov
leave
push
aad
scas
adc
shr
or
ds
mov
leave
jnp
mov
jg
mov
repz
dec
mov
jo
xchg
push
push
mov
mov
mov
sbbl
icebp
hlt
xchg
cltd
mov
leave
test
rcll
scas
add
mov
pop
lcall
jecxz
cmpsb
mov
and
xlat
and
jns
test
gs
scas
jns
pop
lock
add
pop
frstor
push
fwait
jae
test
mov
aad
jns
jle
sahf
fbld
mov
subb
push
mull
les
cmp
loope
clc
mov
outsl
ret
inc
std
outsl
mov
xor
adc
call
fidivrl
outsb
fldcw
in
inc
daa
jo
rcll
aam
mov
outsl
push
popa
ja
mov
arpl
insb
jg
out
pop
movsb
movsb
jecxz
cltd
cwtl
stos
dec
push
mov
xchg
mov
pop
int3
mov
out
pop
ja
jge
leave
in
gs
gs
and
imul
insb
fistps
mov
mov
mov
or
movaps
stos
outsb
hlt
iret
xorl
jecxz
popa
cltd
adc
and
insl
hlt
xor
sub
ret
out
shrl
xchg
adc
das
loopne
mov
cmp
stos
xchg
push
lcall
add
mov
sbb
pavgb
aas
aam
ss
and
jmp
inc
sbb
sarl
stc
into
hlt
cld
mov
push
dec
aad
push
adc
out
sub
into
dec
andl
push
bound
push
adc
jp
mov
movsb
popa
lcall
sahf
das
xchg
push
inc
jl
jne
movsl
jae
dec
std
fidivrs
stc
push
inc
scas
gs
loope
icebp
insl
mov
inc
in
mov
scas
inc
popf
in
clc
pop
push
jnp
je
test
ja
xchg
mov
test
cmp
cmc
cmpl
fs
dec
sub
cmpsb
mov
or
mov
insb
ds
mov
sbb
jl
add
fwait
cmp
mov
aaa
mov
xchg
shll
dec
mov
adc
xor
int3
pop
daa
mov
roll
popf
and
mov
and
jmp
enter
sub
gs
mov
in
inc
pop
ljmp
push
push
fs
or
xor
or
hlt
clc
scas
or
in
leave
fistpll
shrl
jo
jecxz
int
mov
ds
sbb
iret
in
shlb
push
xlat
fcmovnu
rolb
sub
cmp
inc
and
aam
sub
mov
and
sub
inc
sbb
insb
cli
aad
inc
imul
int
js
shll
mov
lock
ljmp
mov
mov
sbb
icebp
fwait
xchg
fldt
repnz
mov
jnp
imulb
mov
inc
int3
stc
xchg
fildll
mov
loop
mov
jmp
cltd
sub
sbb
mov
adc
ss
fadd
mull
insb
xlat
mov
jns
cmp
sub
lahf
nop
add
ret
xor
lret
and
lea
cmp
dec
cmp
push
lods
lods
mov
jno
jnp
jbe
cmp
aas
and
out
hlt
dec
add
das
xchg
dec
adc
insb
scas
outsl
xor
pop
sub
ror
jmp
sbb
and
setne
stos
mov
add
inc
jp
std
jle
cmp
sbb
insb
js
push
lcall
data16
lock
cmpsb
je
xor
in
out
int
push
sub
mov
jns
stos
fistl
pop
adc
loopne
inc
clc
cmp
rolb
std
cmp
shrb
xor
jmp
cmp
mov
and
lahf
dec
sub
imul
mov
sub
sbb
loop
mov
cmp
sahf
mov
jns
cmpsl
clc
and
xchg
pop
push
xchg
sti
mov
ds
mov
dec
pop
pop
stc
pop
xchg
ror
fs
lret
jb
sbb
fistps
xor
jp
fisubs
lds
movsl
clc
mov
mov
loopne
popa
sbb
push
test
mov
jo
xchg
in
fiadds
shr
frstor
jg
xchg
in
mov
add
push
jp
sub
stc
jmp
shll
xchg
sarb
xor
scas
xor
mov
adc
mov
and
jge
lcall
jg
lods
inc
mov
test
pop
jo
xlat
pushf
movsb
cmp
js
jb
cld
test
jne
stos
cmp
addr16
pop
push
aas
bound
adc
and
lea
mov
scas
xor
dec
lcall
xchg
and
mov
insb
into
hlt
sub
js
push
mov
xchg
xor
xor
popf
sub
sub
pusha
cmp
fimull
mov
xchg
loopne
jno
dec
jns
push
ljmp
int
add
fidivl
cltd
test
pop
js
sbb
cwtl
push
fdivr
push
stc
roll
jle
aas
add
mov
scas
jne
jns
js
mov
insl
dec
jecxz
push
sbb
subb
push
xor
pop
mov
xchg
xorb
xchg
shl
je
pop
loope
test
pop
sbb
add
add
mov
mov
test
fists
or
movsb
stc
xchg
cmp
mov
lret
out
pop
add
sahf
xchg
insl
bound
out
jbe
and
insb
inc
movsb
stc
jb
add
and
popf
into
popf
bound
lods
jbe
call
loopne
out
das
jb
add
fcoml
mov
shlb
rorb
push
notl
rcl
rclb
or
push
out
jg
xchg
pop
movsb
popf
cli
sbb
cmp
out
ljmp
and
mov
or
jle
int
js
sub
imul
incb
inc
cwtl
stos
sbb
push
imul
xor
sbb
iret
scas
pop
xor
xor
pop
sub
pop
iret
mov
test
popa
mov
movsl
mov
jns
sti
push
insl
mov
mov
shl
shrl
fisttpl
sbb
arpl
scas
or
fwait
imul
icebp
into
mov
cmp
dec
or
lods
jecxz
pop
push
fstpt
pop
jae
in
push
jne
addl
popa
push
movsb
pop
js
and
push
pop
scas
jmp
inc
xchg
insl
jl
fdivr
outsl
push
das
sub
mov
not
jl
mov
xlat
cmp
std
or
insl
imul
faddl
test
packssdw
push
insb
loope
clc
lret
adc
gs
fldcw
scas
inc
mov
std
push
dec
call
jne
ret
pop
scas
xchg
into
dec
incl
mov
fcom
ds
pushf
xor
je
dec
add
add
int
fwait
sub
pop
mov
test
call
sahf
shl
int3
inc
outsl
xchg
push
mov
in
dec
movsb
fimuls
loopne
sub
addl
ja
lret
sub
cmp
and
add
mov
xlat
mov
sub
mov
pushf
arpl
add
jne
or
dec
mov
arpl
test
incb
cmp
and
dec
lods
add
cld
pop
cmpsl
cld
mov
pop
lds
jae
call
mov
cmp
add
jle
cmp
inc
push
cmpsb
shl
mov
icebp
pop
mov
push
scas
xlat
ljmp
sar
sbb
mov
pop
popf
lea
ljmp
insl
dec
xor
or
mov
push
int
xchg
mov
outsl
xor
aas
outsl
mov
cltd
test
lret
jmp
iret
xchg
shrl
mov
adc
imul
or
mov
or
inc
out
adc
xrelease
cld
push
jge
stos
scas
movsb
stos
inc
inc
enter
andl
jno
mov
cmp
pusha
inc
xchg
fcom
push
jno
aam
aam
or
ds
mov
pop
pop
add
int
mov
lcall
push
lcall
xor
push
jle
shr
stos
cmc
out
inc
pusha
mov
jecxz
lcall
pop
gs
loope
cmp
ss
jns
mov
push
gs
xor
sbb
xchg
pop
push
mov
lret
mov
sbb
stos
cmp
cmc
je
pop
ret
insb
push
or
fwait
sub
inc
jecxz
mov
stos
or
mov
adc
adcb
ja
ljmp
inc
inc
xor
xchg
dec
mov
cmc
sbb
out
out
mov
inc
aaa
test
push
aad
movmskps
add
js
xlat
adc
pop
mov
sbb
enter
sub
push
mov
pop
push
mov
jg
add
lret
loopne
sbb
iret
sub
and
jmp
xlat
jae
popl
mov
mov
add
jmp
in
in
imul
cld
dec
and
shl
pop
adc
pop
and
sub
fmul
int
fcomps
insl
ret
lahf
into
mov
mov
inc
inc
test
inc
xchg
or
mov
push
and
cmpsl
xor
xor
test
imul
add
negb
pusha
mov
cmp
lock
es
pop
sbb
adcl
and
sub
arpl
jge
rcll
push
loope
or
xor
mov
decb
stos
repz
push
adc
jne
cmp
enter
fsubrl
pop
inc
xchg
push
sbbl
xchg
sub
stos
mov
pop
repnz
mov
push
pushf
adc
pop
xor
sahf
cld
push
add
in
ljmp
jbe
or
aad
pop
mulb
lcall
pop
insb
std
in
dec
push
icebp
jbe
cmp
dec
jg
mov
mov
fdivs
push
pushf
mov
fsubrl
push
sahf
sbb
cltd
stc
adc
loopne
mov
ds
dec
out
mov
arpl
mov
xor
jmp
cmp
pop
lock
xlat
inc
jg
addb
cwtl
xchg
jne
push
pop
popf
imul
mov
orl
fisttps
in
andl
cmp
xchg
add
cmp
dec
inc
out
pop
adc
enter
mov
push
call
ret
shll
sbb
jno
mov
jnp
scas
inc
jle
mov
pop
dec
insb
push
fnstenv
out
cwtl
dec
pop
mov
xchg
fsts
or
outsl
aad
mov
data16
cmp
cmpsb
sti
push
jnp
out
mov
xor
pop
icebp
mov
out
repnz
in
mov
sub
mov
adc
mov
push
and
rcrl
lock
pop
inc
cmpsb
xor
jae
pop
imul
ja
xchg
ret
imul
inc
test
jl
push
lahf
dec
push
add
jbe
lcall
mov
mov
sub
xor
or
mov
jbe
kortestw
pushf
mov
cmp
lea
es
into
add
jae
pusha
lahf
leave
in
xchg
hlt
lcall
divb
inc
out
cmpsl
xchg
add
subl
dec
fwait
test
rolb
mov
jnp
sbb
mov
adc
jle
scas
stos
add
shll
mov
inc
jne
sbb
aaa
adc
add
insl
hlt
imul
movsl
insl
lret
jns
nop
loope
mov
pushf
xchg
pmovmskb
fnstsw
fstps
cmp
icebp
loop
cmc
mov
dec
sub
xchg
xorl
ds
into
xorb
sub
repz
pushf
sub
xchg
jmp
and
push
jb
sub
cli
xchg
ficoms
mov
loopne
sahf
cmp
test
lret
mov
lods
stos
mov
add
push
mov
iret
mov
insl
push
mov
mov
negb
imul
and
sub
jno
mov
xor
mov
lds
int3
jne
aaa
jne
gs
std
fisttpll
or
xchg
pop
call
gs
in
pop
add
adc
xor
push
jle
repz
ret
outsl
sahf
ds
data16
jmp
leave
enter
stos
push
mov
fwait
dec
push
mov
cmp
bound
sti
and
jg
xor
push
xchg
ret
sbb
jge
dec
inc
mov
lods
subl
cmpsb
and
arpl
sub
call
xchg
jecxz
add
inc
jae
rcrl
jno
mov
jo
or
movsl
jne
jno
cli
dec
stos
or
sub
gs
icebp
inc
mov
test
sub
fidivrs
inc
sbb
daa
jp
mov
in
sarl
add
shrb
inc
int3
pop
jne
test
fidivrs
jge
xchg
cld
and
jmp
cmp
sub
out
jne
stc
adc
jbe
rcr
andb
outsb
aad
imul
ret
mov
xor
jmp
inc
aas
std
cmpsl
dec
sti
stos
inc
push
push
fdivrs
cmp
cmp
dec
lret
xor
js
jmp
mov
into
std
jb
out
xchg
sahf
dec
ffree
sbb
jae
sub
mov
sahf
pop
repz
pushf
xchg
hlt
rorl
popf
out
mov
pop
xchg
push
jbe
out
clc
adc
xchg
je
and
push
loopne
insb
dec
dec
fwait
and
daa
adc
sbb
leave
mov
and
jns
faddp
fnstenv
sti
sti
push
sub
jno
ret
cs
push
out
dec
pop
add
inc
cwtl
pop
in
mov
aad
jge
lahf
mov
and
sub
fs
or
and
and
imul
xchg
mov
or
add
jg
pop
aam
jae
jl
sub
adc
xor
mov
cmp
fldenv
or
jns
popf
push
or
outsb
jmp
js
xor
lds
sti
es
out
push
out
or
inc
lea
out
mov
dec
in
sbb
inc
stc
mov
or
icebp
fs
in
sar
pop
mov
and
aaa
daa
test
out
add
xchg
add
imul
fs
mov
xor
jle
jmp
jge
mov
jmp
loope
ret
std
enter
sub
sub
loopne
mov
sti
pop
adc
faddl
es
loopne
out
push
cmp
dec
lds
adc
outsb
mov
lcall
xchg
shl
xlat
pop
ret
mov
insb
js
mov
movsb
xor
mov
test
adc
test
sahf
out
push
mov
insb
outsl
insb
add
pop
andb
outsl
or
pop
jae
in
mov
dec
notl
sbb
das
push
scas
cltd
mov
inc
mov
daa
jno
jl
and
addb
repz
outsb
lret
pop
push
daa
lea
cmp
jns
sbb
repz
iret
and
mov
pop
mov
and
inc
outsb
mov
sub
cltd
jmp
sbb
fsubrs
inc
ficoml
or
js
out
popa
js
enter
out
iret
sub
in
inc
cld
mov
add
fstps
sub
sarl
lahf
mov
int
ja
movsl
adc
xor
push
in
repz
stos
cltd
jns
andl
push
adc
mov
ja
and
stos
xor
pop
dec
mov
pop
adc
jg
mov
cmp
sub
fiaddl
call
add
sub
fisubrs
cmc
cmpsb
and
sub
cmpsl
mov
push
inc
test
dec
cmp
jbe
sub
sbb
dec
xlat
loopne
notb
lds
aaa
push
add
fsubl
sbb
shr
out
or
adc
sub
roll
inc
adc
mov
rcrb
mov
xchg
ja
aaa
push
fwait
lret
push
loope
int3
adc
xor
jle
pop
inc
mov
lcall
mov
sbb
jns
sbb
adcb
ret
mov
mov
lret
xlat
sub
dec
js
aaa
or
mov
pop
popa
fsubs
inc
stc
dec
scas
out
sti
jg
ljmp
add
test
xor
inc
mov
fxtract
sub
fsubrs
ljmp
xor
jae
andb
aam
mov
mov
mov
loopne
lods
jno
rclb
mov
dec
xchg
cwtl
cmp
orb
lcall
aaa
mov
inc
and
pop
sbb
sub
mov
mov
or
jnp
sub
sub
pusha
and
jae
pop
pop
sbb
mov
mov
jp
cmp
sti
push
pop
int
or
fmull
mov
arpl
or
ljmp
jle
iret
mov
xchg
push
xchg
push
lock
shrb
jnp
loope
cmp
lock
jp
in
outsl
nop
call
ficomps
ret
daa
inc
cmc
push
jb
lods
ret
hlt
repz
aas
ds
xchg
scas
loop
mov
jl
lahf
or
rorb
int3
fnstsw
fldl
xchg
shrl
jo
inc
mov
push
sub
iret
out
mov
xlat
out
sarb
sub
pop
and
pushf
adc
int
inc
repnz
sbb
inc
add
sahf
pop
or
movsb
mov
and
cmp
aaa
out
sbbl
addr16
mov
xor
jle
and
mov
sub
sub
call
or
cmpsl
in
xchg
int
mov
or
or
pop
shl
imulb
sub
sahf
xor
xor
movsb
ret
cmp
sub
cmp
xchg
jecxz
inc
test
cmp
iret
popa
mov
outsb
push
aad
daa
je
ret
repz
imul
cwtl
cmp
dec
push
addr16
adc
adc
lods
outsl
popa
aad
lcall
mov
lock
push
mov
ljmp
cmp
cld
les
push
movsl
aaa
call
loope
add
sub
out
dec
xchg
icebp
xchg
xchg
jle
insl
mov
mov
test
and
push
jo
sbb
adc
movsb
inc
fucomi
jbe
hlt
pop
sub
or
xchg
jae
jl
mov
das
adc
sbb
inc
les
imul
test
pop
mov
inc
dec
sarb
filds
push
push
pop
js
mov
daa
data16
mov
ret
imul
inc
faddl
cltd
jno
sbb
dec
lock
adc
add
negb
dec
jns
add
and
shrb
xchg
add
cmp
push
xor
fsubs
push
scas
sarb
adc
mov
incl
cld
jge
mov
xchg
add
fiadds
bnd
popa
jno
iret
rclb
in
test
inc
dec
std
insl
push
xor
and
or
xchg
mov
dec
lcall
xchg
sbb
add
jmp
inc
mov
sbb
repnz
ja
mov
dec
cli
dec
mov
ret
xor
sbb
insb
xchg
push
xchg
and
adc
xor
xchg
inc
loope
inc
inc
shrb
testb
push
push
incb
push
inc
sbb
jg
rolb
mov
xchg
ficomps
mov
daa
imul
xchg
mov
test
test
rcrb
jnp
popa
push
orl
fdiv
push
ljmp
fistpl
pop
and
xchg
inc
mov
sbbb
movsl
sbb
nop
cmp
sub
sahf
cmpsl
or
mov
shll
ret
cmp
push
pop
ror
into
pop
mov
repz
es
sbb
int
sub
rolb
ret
pop
pop
or
jl
int3
mov
stos
and
cli
mov
xchg
daa
dec
add
and
dec
xor
mov
pusha
pop
je
rcr
xor
fnstenv
add
in
cltd
mov
insb
js
sbb
cwtl
pop
int
jb
sbb
movsb
jo
stos
push
mov
pop
dec
js
push
aas
loopne
jecxz
std
xchg
pushf
lahf
inc
jne
fstps
imul
popa
insl
push
push
in
sub
cs
lahf
loope
loop
loop
sti
xchg
out
push
xchg
inc
stos
mov
subb
aaa
push
mov
pop
sbb
lret
dec
push
pop
scas
stos
pop
call
ret
loope
loopne
mov
out
adc
jo
xchg
xlat
jne
xchg
mov
repnz
jecxz
sbb
mov
fidivl
test
leave
ljmp
mov
fisttps
mov
mov
pusha
sub
lret
cmpl
bound
rclb
inc
clc
test
dec
je
fisubs
add
mov
les
addr16
sahf
or
jne
stos
jge
pop
movl
ret
lret
jp
lea
sub
jle
in
jae
jecxz
in
mov
jbe
aaa
mov
or
inc
mov
in
mov
jge
fwait
pop
dec
mov
cwtl
aam
cmp
mov
out
inc
lods
std
sbb
jmp
dec
out
push
push
push
aam
dec
call
sahf
dec
lret
out
and
and
cmc
add
dec
hlt
xchg
xlat
mov
sarb
sbb
sbb
hlt
in
mov
rolb
mov
in
call
jl
push
notl
and
or
stc
and
cwtl
mov
lea
loopne
cld
imul
mov
jl
mov
mov
aaa
aaa
cmpsb
ljmp
lahf
out
xor
jno
pop
cs
mov
jecxz
inc
xor
push
mov
dec
lea
and
and
mov
das
cltd
neg
inc
inc
aaa
cwtl
or
bound
or
sub
call
adc
nop
and
jns
push
mov
sbb
idivl
cmp
lock
jmp
loop
scas
in
mov
iret
jg
out
xor
xor
fstpt
push
pushf
aad
icebp
outsb
iret
mov
shl
int
push
inc
ret
gs
cltd
mov
sub
cmpsl
sub
notb
in
dec
jp
sahf
add
lds
pop
out
cld
mov
sbb
jbe
xor
or
jecxz
movsl
aaa
dec
adc
pop
repz
mov
mov
xor
out
rcll
lods
mov
sub
cmp
inc
mov
loopne
jbe
and
xlat
ret
movsb
imul
push
lds
sahf
divb
jecxz
call
sub
enter
mov
loope
inc
leave
jnp
shl
pop
repz
sub
into
cli
das
loopne
mov
in
popa
dec
int
popf
add
pusha
pusha
lret
xor
call
jge
push
cmc
pop
clc
mov
movsl
repz
push
jno
adc
pop
mov
sub
mov
cwtl
filds
loopne
std
mov
sbb
pushf
add
sub
sbb
adc
or
loope
mov
cld
sbb
mov
aad
xor
adc
ja
je
jbe
xor
negb
in
je
xchg
test
rclb
shl
mov
jns
ljmp
dec
push
es
pop
and
xchg
and
jns
xorb
mov
pop
jmp
mov
or
movsl
flds
sub
pop
sub
ret
sbb
cmp
cmpsb
into
dec
and
push
cmp
sbb
out
nop
lock
cmp
push
ret
imul
mov
into
sbb
fcmovb
repnz
lock
mov
lock
cwtl
popf
int3
dec
mov
outsl
popa
xchg
call
push
ret
fdivl
mov
clc
pop
daa
leave
and
mov
imull
jmp
jecxz
inc
jecxz
ljmp
lcall
add
aad
sahf
ljmp
and
inc
adc
leave
dec
shll
arpl
xchg
rorb
lahf
add
dec
xchg
in
loopne
enter
ja
dec
adc
hlt
out
lahf
call
mov
subl
push
mov
cmp
cmpsl
sbbl
popf
and
popl
cmp
in
in
stos
inc
into
notl
aas
inc
cmp
rcrb
xor
push
es
and
cmpsl
mov
adc
lds
jb
push
movsb
rol
cmp
inc
je
arpl
mov
add
out
mov
enter
push
pop
lret
pusha
sbb
push
add
negl
push
or
cli
add
jl
insb
imul
add
rorb
push
cli
cmp
sbb
stos
mov
pop
aam
push
dec
lods
adc
stc
and
addr16
in
dec
inc
mov
push
mov
or
call
mov
test
pop
or
ret
outsl
adc
inc
stc
pop
addr16
jle
push
lock
std
and
fwait
sbb
cld
ljmp
imul
sub
rcll
jp
loope
roll
and
and
mov
mov
xchg
mov
pop
push
ljmp
test
cli
xor
lret
add
inc
dec
mov
and
and
cmpps
push
xlat
cmp
int
add
mov
pushf
aad
in
jae
mov
or
sbb
mov
jl
jo
ljmp
movsl
jmp
add
and
fs
xorl
push
imul
push
inc
jle
lods
iret
xlat
dec
sub
sahf
dec
ljmp
rcrb
pop
ds
mov
pop
sbb
or
jg
adc
xchg
or
sahf
push
push
in
sahf
iret
gs
stos
mov
out
stos
loope
jo
pop
dec
cmp
sbbl
xchg
lret
mov
das
test
sub
int
ret
paddq
xor
cmp
push
jo
in
inc
inc
mov
mov
rorb
push
pop
adc
cmpsb
rclb
cmp
jle
outsw
ret
mov
in
push
pop
fldenv
inc
aaa
dec
sub
mov
js
push
test
xchg
into
call
enter
ja
les
jnp
inc
std
jbe
test
mov
leave
fmulp
aam
sahf
pop
arpl
pushl
push
stos
mov
jae
enter
mov
outsb
leave
bound
fiaddl
data16
enter
popa
jle
sbb
cld
sub
je
lea
dec
mov
imul
jg
movsb
fstpl
fwait
iret
inc
add
ss
pusha
rcll
arpl
mov
test
xchg
ja
and
mov
cmp
scas
jle
mov
sbb
mov
xorl
in
inc
mov
icebp
and
roll
addr16
mov
sti
pop
inc
clc
cmp
push
in
arpl
jbe
insl
outsb
inc
daa
dec
fwait
add
inc
push
pop
cmp
ror
test
test
out
mov
and
adc
add
mov
mov
call
push
sub
es
fdivrs
fidivl
xchg
es
in
mov
push
inc
pushf
sub
jecxz
inc
push
shlb
pop
out
adc
rorb
out
mov
repz
or
or
cmpsb
xor
hlt
jbe
daa
xchg
daa
outsb
xor
pop
fistl
mov
ffree
jp
inc
test
pop
rorl
fimull
cs
cmp
shr
jecxz
pushf
mov
mov
scas
and
add
mov
inc
jecxz
sub
je
daa
jecxz
pop
fisubl
clc
es
nop
test
fnstcw
sbb
xchg
and
mov
scas
jp
sbb
out
ljmp
bound
jno
mov
mov
iret
mov
jmp
adc
adc
sub
mov
fisttps
cmp
jne
outsb
bound
adc
jno
fistpl
loop
and
pop
fucomip
mov
sti
mov
fsubrs
mov
or
sub
sbb
cmp
wbinvd
add
in
cmpl
inc
fisttps
stos
out
push
xor
addr16
fmull
mov
insl
mov
mov
into
pop
out
push
rcr
inc
dec
popf
dec
jns
insb
xor
sbb
dec
cltd
shl
pop
mov
daa
mov
lods
and
cmpsl
pop
and
in
dec
cmc
leave
adc
fs
out
mov
outsl
mov
mov
xchg
ret
jns
xchg
es
mov
jbe
or
mov
or
inc
movsl
jle
mov
sbb
or
mov
nop
ret
push
ret
xor
cmc
fistpl
push
inc
bound
push
jmp
dec
aam
dec
mov
cld
add
or
scas
jg
push
std
xchg
sahf
ja
push
xor
movsl
and
shr
mov
mov
xchg
fdivrl
imul
add
add
movsb
sub
aas
loope
cmp
pop
xor
ret
inc
jbe
aad
jecxz
jge
dec
sub
mov
adc
cmp
mov
add
jbe
nop
mov
xlat
pop
icebp
add
xlat
mov
cmpsl
test
push
jg
bound
or
mov
rcll
notl
push
hlt
xor
jo
leave
jo
fisubrs
imul
movl
fdivl
test
mov
sti
icebp
add
insb
out
mov
sete
cmc
dec
mov
int3
add
xor
je
cmp
lret
out
cld
lret
dec
or
sbb
ljmp
xor
sarb
mov
mov
sub
es
loopne
pop
xor
sub
mov
xchg
push
dec
addl
xchg
cli
and
push
xchg
fmuls
das
in
xchg
ljmp
mov
sahf
es
mov
fidivrl
test
mov
ja
fs
mov
inc
je
daa
sub
xor
add
add
xor
lahf
xor
xchg
or
sbb
mov
lahf
xchg
sbb
iret
and
std
sarl
xor
rcrl
jae
mov
rclb
dec
add
loop
sbb
aas
xor
inc
nop
clc
mov
mov
scas
sti
sbb
popa
xor
cli
cwtl
dec
and
loope
sbb
xchg
into
hlt
mov
jae
sub
mov
mov
popl
pop
sub
mov
push
mov
inc
mov
adc
ffreep
or
cmpl
or
and
adc
mulb
jle
xor
add
cmp
popf
sbb
ret
roll
cmp
jae
mov
add
mov
cmp
iret
ja
rcl
outsl
jg
js
cmp
gs
dec
test
mov
enter
and
push
xchg
push
pop
insl
shll
shll
arpl
das
in
ficoms
adc
int3
cmp
jl
cld
lock
xchg
icebp
jno
mov
dec
pop
std
movl
out
movsb
dec
sub
test
mov
jbe
stos
out
cwtl
inc
xchg
ret
insl
sub
test
mov
jl
cltd
gs
push
cs
cltd
push
test
filds
and
add
sbb
adc
int3
cltd
sbb
rorl
pop
hlt
mov
les
jecxz
das
ljmp
nop
jl
stos
xchg
lret
jmp
popl
test
cwtl
jne
aad
cmp
xchg
adc
mov
in
std
mov
mov
cmp
mov
dec
xchg
popf
fs
negb
jle
in
stos
in
loop
lock
jnp
mov
inc
push
jnp
test
fstpt
sub
in
rcrl
stos
xor
cmp
jmp
jp
jne
adc
mov
push
dec
mov
lods
or
movsb
xchg
push
mov
jno
aam
ljmp
jo
jge
subb
pop
dec
jno
sbb
scas
sbb
xor
fsub
lcall
leave
jg
ss
addr16
push
dec
loope
inc
and
mov
mov
neg
dec
iret
xor
cmpsl
xchg
movsl
pop
pop
xchg
fcoml
dec
pop
cmc
adc
add
lcall
jl
repz
fmuls
fsubl
lahf
fsubrl
jne
jle
add
mov
adc
test
mov
dec
jnp
cmc
cmp
fisubl
inc
xchg
bound
lcall
sbb
cld
mov
lock
gs
mov
dec
cld
fsubrs
insb
aam
in
xchg
mov
pop
adcb
in
data16
and
outsl
movsb
roll
and
loope
sub
mov
jno
xor
mov
sahf
scas
push
movsl
pop
pop
inc
lods
push
mov
fsubp
mov
xorb
lds
jb
stc
mov
fisubrl
pusha
mov
jne
xor
mov
add
pop
lret
inc
out
das
cmpsl
movsl
fdivs
in
adc
push
xchg
pop
pop
sarb
into
push
cmc
mov
sbb
loope
out
adc
cmc
shll
inc
adc
out
and
out
movsb
scas
inc
rcrl
pop
cmpsb
or
push
mov
stc
mov
pop
or
jmp
xchg
cmp
aas
push
push
xlat
loope
pop
lret
cmp
add
test
test
sub
pop
test
jge
in
arpl
adc
cmp
adc
lret
add
or
fcoml
xchg
jae
and
into
adc
inc
pushf
adc
mov
bound
xor
jmp
mov
jl
jecxz
decl
push
dec
jno
mov
cmp
push
cwtl
push
and
dec
add
add
cmp
clc
inc
inc
aad
xor
mov
adc
fwait
mov
leave
pushf
pusha
ret
xor
jp
mov
cmc
dec
lret
push
outsb
enter
xor
test
popa
inc
cld
cld
xchg
pop
lret
mov
stc
lret
out
fwait
jmp
xlat
addl
push
xchg
mov
in
divb
cltd
and
rorl
insb
xor
in
ljmp
insb
shl
mov
out
js
in
loopne
adc
loope
out
push
or
dec
shll
sahf
in
test
aad
cld
dec
add
jmp
push
ffree
jae
lret
push
pop
push
lret
inc
inc
sbb
call
mov
out
add
fisttps
pop
loopne
xchg
and
pop
mov
not
incb
ficoms
aad
imul
shll
jno
jns
loopne
dec
sbb
push
jecxz
in
inc
mov
rcrb
mov
subb
fisubl
fs
pop
shrl
dec
cli
adc
sub
or
sti
fisubrs
push
add
mov
mov
jecxz
test
loopne
sub
aas
imul
xchg
jmp
scas
adc
adc
mov
neg
in
and
xor
adcl
add
dec
out
icebp
sub
int
push
dec
jle
mov
pop
cmp
push
sti
inc
pop
dec
inc
rolb
aam
out
out
imul
ja
cli
jae
and
jle
xchg
data16
call
xor
add
sbb
add
mov
xlat
repz
loop
sub
xchg
lret
out
add
pop
and
pop
outsb
shll
insl
popa
mov
pop
test
mov
dec
nop
jo
pop
in
or
cli
dec
fildll
fistpll
insl
dec
test
in
jp
aad
push
pop
in
mov
dec
divb
or
xor
push
rclb
popa
rcll
and
lock
rcrl
dec
cmpsl
out
in
mov
and
dec
test
lock
insl
add
int3
xor
js
loope
in
xchg
aaa
jbe
aaa
pop
insl
mov
adc
push
aam
dec
lahf
lret
push
mov
inc
or
push
repnz
les
push
add
lds
lret
shrb
inc
iret
out
cltd
loop
addr16
sbb
out
popa
mov
fptan
movl
or
insl
xor
movsl
in
and
cmc
jmp
and
sahf
inc
push
pop
outsb
ss
sbb
nop
adc
pop
sbb
mov
leave
add
mov
shll
mov
shll
cmp
jle
repz
push
xlat
pusha
cmp
or
mov
in
daa
insl
test
jle
out
pop
jns
sbb
pop
cltd
test
or
sahf
lds
mov
dec
ljmp
clc
mov
hlt
adc
gs
lods
hlt
mov
or
fdivr
mov
mov
sbb
push
jae
and
add
jg
in
das
ja
pop
adc
xor
enter
lcall
pop
and
and
sub
inc
cmc
es
cmp
adc
aaa
mov
sub
shl
mov
clc
sub
jmp
movsl
adc
add
in
call
sub
mov
pop
outsl
adc
fwait
or
imull
lahf
push
jbe
mov
mov
jl
sbb
pushf
inc
lds
mov
iret
pop
xchg
mov
test
or
test
enter
dec
movsl
shll
sbb
mov
sub
movsl
in
loope
and
jecxz
mov
xor
mov
jecxz
push
push
jle
mov
mov
dec
sub
sub
xor
mov
pusha
mov
cmpsl
mov
dec
movsl
idiv
jge
xor
or
pop
lea
stc
cmp
cmp
xor
inc
out
scas
mov
cltd
aad
mov
adc
mov
or
roll
shl
rol
shl
outsl
out
pop
add
mov
fucomip
cwtl
pop
pop
int
inc
jmp
cmc
sub
std
adc
dec
mov
insb
pop
arpl
push
dec
add
mov
cmp
xchg
dec
fwait
jne
inc
mov
jl
test
scas
add
adcl
rcll
imul
adc
shll
out
pushf
sbb
xor
adc
nop
add
loope
inc
test
sbb
mov
sbbl
rsm
and
loopne
dec
hlt
insl
mov
in
mov
daa
aas
push
cmpsb
jne
mov
movsl
xchg
subl
push
jns
push
rcrb
mov
pop
push
outsl
rdpmc
daa
stc
adc
loop
daa
jo
pushf
imul
sahf
inc
push
adc
mov
in
inc
in
inc
sti
in
imul
add
inc
mov
dec
fnstenv
into
xor
ret
es
mov
mov
clc
xor
leave
sbb
cld
not
jmp
jno
adc
stc
lret
cli
loope
cmp
and
std
clc
mov
gs
xor
stc
aas
sub
shrl
add
adc
hlt
cmpsb
adc
inc
sub
mov
fmull
mov
int
sti
out
in
mov
push
mov
jnp
xchg
and
scas
jae
xchg
pop
sahf
insb
subb
pop
je
inc
push
jl
xchg
sbb
lea
mov
xchg
jge
and
stc
inc
in
scas
xlat
mov
test
jo
lds
and
xchg
push
mov
mov
push
adc
xchg
inc
outsb
repnz
loope
jne
sbb
xchg
aas
mov
ljmp
inc
push
lahf
lret
xchg
jo
je
fsts
cmp
pop
xchg
sub
xchg
in
mov
ret
pop
xor
test
or
push
mov
add
pop
inc
xchg
mov
rol
cmp
int3
cltd
in
out
roll
cmc
add
and
sbb
add
xor
jmp
cmp
das
jg
gs
pushf
inc
or
sub
mul
rcl
adc
idiv
adc
stos
ss
pop
adc
xchg
cmpsl
rol
int
test
arpl
xchg
ret
mov
and
fnsave
or
aaa
push
jne
cs
sub
sbb
push
stos
dec
int
nop
je
or
jecxz
adc
loop
mov
sbb
mov
or
jmp
push
repz
pop
sahf
inc
mov
mov
iret
dec
sti
mov
jno
rorb
subb
mov
jl
sarl
inc
mov
xchg
sti
sub
jl
cmpsl
cld
jnp
into
movsb
add
fucomip
outsb
jmp
xor
sub
xor
insl
push
xlat
aas
adc
outsb
inc
inc
outsl
inc
jp
add
scas
aaa
jge
pop
xor
mov
mov
imul
gs
sub
jp
lea
ficoml
subb
pop
popa
fisubs
test
dec
cmpsl
ja
jmp
addr16
mov
mov
outsl
mov
lock
arpl
imul
out
pop
inc
daa
sbb
addr16
jno
add
ss
imul
lds
stos
imul
into
rolb
push
std
fsubrl
std
mov
sbb
jae
xor
and
test
or
inc
aaa
push
dec
stos
mov
aas
dec
mull
decb
mov
js
mov
cmp
xlat
in
sub
out
cmp
repz
test
or
dec
aaa
imul
mov
mov
outsl
js
out
movsl
scas
mov
addb
mov
mov
popa
mov
ret
ret
pop
jb
fcoml
leave
xchg
repz
in
je
movsb
lcall
xlat
jae
movsl
imul
stc
xlat
jge
push
mov
pop
test
push
add
mov
cmp
std
or
outsb
rolb
ljmp
dec
cwtl
jne
add
sti
xorl
cmpsb
test
sbb
sub
mov
add
xchg
int3
imul
addl
jg
pop
pop
into
sbb
lods
dec
and
sub
hlt
mov
call
xchg
imul
xchg
popf
sub
pushfw
lahf
adc
rorb
fisttpl
xchg
outsb
mov
fwait
pusha
and
jmp
shrb
xor
inc
pop
out
data16
arpl
sbb
push
adc
xchg
dec
mov
sbb
adc
push
ja
mov
roll
sub
mov
test
xor
xchg
mov
sub
mov
cli
sar
outsb
aam
push
testb
sarl
ss
and
mov
out
test
cmpsl
mov
cmp
cwtl
movsl
les
push
pushf
lods
jle
movsl
push
push
fldl
int
xchg
adc
mov
jle
fiadds
fcompl
adc
or
xchg
jbe
xor
jbe
inc
dec
pop
lea
cmc
cwtl
inc
or
ret
jbe
jle
fisttps
cld
mov
sub
in
mov
jne
add
jb
pop
js
fildl
imul
jg
pop
sbb
movsb
repnz
movsb
xchg
test
cltd
xor
xchg
xorl
mov
and
aaa
cltd
les
in
and
jbe
cld
je
mov
cli
xchg
aam
sub
add
sahf
jae
sbb
push
dec
add
push
int3
inc
imul
scas
and
jo
xchg
les
push
mov
lock
sub
xchg
sbb
ds
xchg
xchg
jo
inc
sbb
imul
test
xchg
shll
cmp
fsub
rcr
xchg
je
fimull
fwait
adc
test
xor
inc
add
or
jecxz
stc
adc
aam
ljmp
fdivl
scas
mov
lds
or
pusha
pop
jb
sti
mov
jnp
in
pop
enter
outsb
fwait
out
jne
and
into
lods
leave
xchg
adc
cltd
adc
xchg
lea
xor
pop
dec
xor
add
rcr
push
jae
pop
inc
imul
and
fisttps
dec
push
adcl
out
aad
ja
inc
mov
dec
int
adc
adc
mov
ja
add
xor
xor
mov
out
gs
or
in
jle
mov
sub
and
leavew
in
mov
lret
fistpl
fdivl
mov
call
popa
add
xchg
cltd
mov
jg
lds
adc
xchg
repz
push
adc
xchg
rcrl
mov
pop
aam
mov
popf
icebp
dec
lock
dec
in
or
fwait
push
dec
mov
add
dec
sbb
out
fists
insb
jb
outsb
mov
inc
mov
mov
push
inc
add
mov
push
cs
xor
imul
ds
fdivs
pop
and
cmp
push
mov
sub
popf
scas
repz
push
push
xor
add
iret
mov
call
jnp
xor
mov
adc
jge
add
addb
or
or
popl
data16
ret
or
push
jnp
dec
sbbl
or
or
pusha
and
mov
sbb
and
dec
dec
imul
add
inc
and
xlat
sbb
sbb
lret
mov
xor
inc
push
add
cmp
ja
ja
sbb
popa
dec
adc
xor
cmp
add
mov
bound
xor
out
mov
or
andb
mov
sub
jb
push
adcl
adc
and
in
popf
pop
adc
cmp
sbb
pop
ss
sbb
cmpsl
pop
movntps
lgs
mov
sbb
mov
push
sarl
repnz
or
xor
in
jno
adcl
pand
dec
pop
ds
scas
test
inc
xchg
mov
jg
jae
fcomps
xorl
fistl
sub
inc
add
inc
dec
popa
cmp
stos
pop
mov
sub
add
cmp
adc
cmp
jns
sbb
jae
adcl
data16
lds
cmc
loop
inc
or
sbbl
fiadds
divb
pop
adc
and
mov
out
outsb
sbb
inc
pop
add
dec
xchg
mov
mov
mov
lods
popa
lods
scas
cli
cltd
rcrb
pop
lret
outsl
scas
jge
sub
movsb
adc
sub
inc
out
js
or
mov
sub
push
xchg
mov
pop
inc
jnp
dec
or
pusha
inc
outsl
xor
out
xor
ret
jne,pt
sub
nop
sub
cmp
fwait
cmp
jle
pop
inc
jns
pop
fstpl
push
ffree
repz
nop
xor
flds
scas
fisttpll
insl
xchg
movsl
in
or
divb
add
add
ds
jb
sub
leave
shlb
outsb
scas
gs
out
pop
sub
sbb
xchg
jns
rorl
push
pop
pop
imul
insl
add
lds
inc
and
add
dec
jmp
inc
inc
arpl
daa
or
jns
push
je
pusha
add
inc
lret
pop
add
ljmp
and
sbb
cmp
cmpsb
insl
out
jge
cmp
push
clc
sbb
pop
sub
jb
jne
push
cwtl
jae
inc
pusha
sbb
cmp
adc
das
daa
test
aad
jl
mov
into
sub
inc
fisttps
xchg
shll
je
or
and
insb
xchg
xor
orb
arpl
sub
mov
pop
adcl
or
jns
inc
pop
imul
sub
cwtl
cmp
jno
ret
jl
inc
push
addb
dec
insl
pop
cmp
ficomps
and
lds
aaa
mov
add
in
ds
insl
lahf
pop
das
inc
dec
push
jno
icebp
mov
xor
jg
and
mov
into
inc
inc
leave
inc
mov
int
nop
pop
push
cmc
lock
add
mov
lahf
or
xor
dec
ret
in
add
sbb
lahf
sbb
and
pop
hlt
daa
xor
mov
dec
popa
enter
mov
daa
in
aaa
dec
push
mov
mov
dec
jg
cmp
jno
rclb
jo
push
notl
and
inc
js
andl
sub
js
mov
popf
ss
imul
inc
sbb
popa
add
xlat
push
push
inc
mov
inc
das
shrl
pop
sub
push
sub
add
or
push
hlt
outsb
dec
aaa
push
jno
mov
cld
push
dec
pop
call
push
fsubp
push
mov
ret
insb
push
loope
push
push
add
xorl
pop
sahf
add
jo
into
xchg
xchg
mov
daa
cmp
sub
das
in
add
push
jecxz
jae
jle
into
cmp
or
mov
fstps
or
jb
fs
mov
iret
cs
cmp
pop
add
or
pop
cmc
daa
jb
pop
push
jns
das
cmp
mov
sub
sbb
sub
dec
or
int3
push
pop
lds
sbb
pop
or
repz
dec
pushf
push
stc
pop
or
pop
adc
or
inc
pop
js
mov
dec
pop
cld
sub
pop
cwtl
fldl
pop
or
arpl
adc
sub
xor
and
mov
pop
or
das
pop
mov
aad
pusha
fildl
mov
sub
sub
xchg
fidivl
inc
loopne
inc
pop
inc
int
lds
imull
es
inc
dec
ss
pop
in
es
and
pop
clc
aaa
jb
cmp
imul
pop
repnz
out
test
inc
repz
enter
int
push
mov
dec
ds
and
sbb
movsb
mov
jge
test
dec
or
dec
addr16
and
popa
or
jae
mov
daa
test
cmpsb
mov
pusha
jo
arpl
ss
aam
xchg
je
xlat
and
into
test
insb
pop
sub
scas
cmp
push
add
jecxz
sub
inc
cmpl
aad
std
das
lods
push
cmp
xor
shll
cmp
ljmp
dec
test
pop
adc
test
icebp
mov
sbb
dec
dec
push
jno
int
aad
push
cmp
jns
push
cmp
jno
adc
shrd
and
jae
dec
push
mov
inc
lahf
adc
lock
cwtl
add
sub
sub
sbb
sbb
fisubrl
sub
psubusw
inc
out
adc
and
pop
mov
mov
jne
jns
dec
ss
push
and
sbbl
fldcw
jmp
imul
lret
jge
sub
mov
push
inc
imul
lock
dec
and
pop
xor
fwait
jmp
jmp
mov
sub
sbb
sbb
pop
sbb
adc
lock
dec
and
pop
sub
fwait
icebp
imul
cmpsb
jae
jge
sub
sbb
sbb
lock
jnp
and
pop
jno
sub
and
jle
aaa
jge
sub
enter
sbb
sbb
fidivrl
imul
dec
dec
roll
fidivl
push
punpcklwd
add
inc
adc
push
and
and
pop
int
std
add
fwait
int
in
dec
fisttpll
jge
sub
mov
sbb
adc
lock
xor
pop
cmp
fwait
in
int
std
out
shlb
sub
sbb
sbb
pop
push
inc
push
adc
lock
and
pop
add
add
xor
dec
jmp
out
mov
lahf
sbb
sbb
lcall
inc
addr16
inc
sub
callw
mov
adc
and
pop
xchg
cs
test
xchg
mov
cmpl
aad
push
ja
test
pop
add
adc
and
stc
out
sarb
sub
sbb
adc
enter
sbb
stos
outsl
adc
sub
cvtps2pi
inc
xlat
adc
and
pop
lea
mov
imul
inc
inc
fidivl
push
push
rolb
pop
lock
and
pop
int
std
add
fwait
int
in
dec
fisttpll
jge
sub
jns
jp
push
push
call
jg
fmuls
adc
or
sub
cmc
xlat
shrb
sub
sbb
sbb
inc
dec
and
imul
jae
jge
sub
enter
sbb
sbb
outsl
cmc
inc
cltd
sub
mov
sbb
fwait
jns
jns
dec
jg
ss
enter
sbb
sbb
fcmove
sub
psubw
inc
xchg
fdivp
xchg
jnp
and
push
fcomps
jae
jge
sub
ss
adc
sub
fidivl
sub
mov
call
out
adc
and
pop
mov
xchg
add
sbb
sbb
sbb
outsl
adc
sub
iret
dec
xchg
adc
and
pop
subl
xchg
imul
inc
dec
fisubrl
pop
nopl
sbb
inc
sub
lock
and
pop
shrl
add
fldcw
dec
mov
shr
jae
jge
daa
dec
js
test
arpl
jae,pt
ja
inc
pop
sbb
sbb
fcmovbe
sub
xadd
inc
notl
into
lock
jnp
and
pop
pop
sub
enter
sbb
sbb
cmp
cmp
cmp
inc
ret
adc
and
pop
in
movsl
add
dec
test
jnp
inc
dec
push
inc
jne
inc
sub
insl
dec
call
sub
data16
jnp
and
pop
stc
cs
add
dec
mov
shr
jae
jge
sub
mov
and
sbb
sbb
fidivrl
mov
dec
sahf
inc
xlat
adc
and
pop
subl
xchg
imul
cs
add
push
imul
sub
enter
sbb
sbb
outsl
stc
inc
int
loope
mov
xchg
dec
out
inc
cmpsl
adc
lock
push
inc
mov
dec
and
adc
lock
and
pop
and
fwait
cmc
imul
mov
cmpl
xchg
enter
sbb
mov
pop
adc
lock
and
pop
add
fwait
sbb
dec
icebp
rcl
stos
jae
jge
sub
enter
sbb
sbb
push
mov
das
push
cmp
jae
dec
inc
add
sbb
outsl
and
sub
psubw
inc
adcl
lock
jnp
and
pop
push
and
xchg
sbb
push
jae
subl
xor
dec
jmp
out
jge
sub
enter
sbb
sbb
ret
pop
and
jnp
and
pop
popa
and
adc
add
shlb
aas
jge
sub
enter
sbb
sbb
outsl
popf
inc
lods
fimull
call
dec
push
jne,pn
inc
fwait
inc
imul
sub
enter
sbb
sbb
outsl
lds
sub
stos
dec
out
mov
push
dec
adcb
dec
ss
outsb
and
pop
in
add
fwait
std
imul
ret
jge
sub
sbb
mov
inc
adc
lock
jnp
and
add
dec
add
aaa
jge
sub
enter
sbb
sbb
fidivrl
lret
dec
stc
mov
jno
inc
inc
inc
fisubrl
pop
movups
adc
inc
and
jp
xor
and
pop
std
cs
loope
mov
xchg
rcl
jae
jge
sub
jbe
inc
inc
dec
dec
inc
arpl
cmp
jge
sub
enter
sbb
sbb
outsl
roll
sub
psubsw
inc
xchg
adc
lock
jnp
inc
dec
imul
addr16
sub
enter
sbb
sbb
fcmovbe
sub
pextrw
scas
call
notl
ret
jnp
and
pop
movsl
sub
pop
push
sub
and
sbb
sbb
outsl
add
fidivl
xchg
fisttps
inc
out
adc
and
pop
mov
fwait
popf
pop
push
cmp
sbb
sbb
gs
ret
wbinvd
push
call
cmp
mov
jnp
and
pop
loope
test
imul
sbb
jne
push
ficompl
sub
and
inc
xor
mov
ret
jnp
and
pop
in
mov
imul
add
dec
inc
jns
jns
dec
lods
dec
ss
sbb
and
pop
and
in
aad
cmc
imul
mov
sub
sbb
sbb
pop
push
inc
pop
adc
lock
and
xchg
cs
imul
mov
jge
sub
enter
sbb
sbb
fisubrl
cmp
add
dec
mov
push
ds
sbb
push
lock
jnp
and
pop
stc
cs
loope
movsl
imul
mulb
fiaddl
inc
cmp
jae
and
pop
jnp
and
pop
and
loope
rcrl
vaddsubps
sub
sbb
sbb
pop
push
inc
push
adc
lock
and
xchg
cs
imul
subb
enter
sbb
sbb
rcrb
adc
popa
push
push
in
sub
cmp
fwait
sahf
outsb
out
add
add
divl
sbb
and
jns
mov
dec
aam
loope
push
push
cmp
call
cmp
inc
cli
add
adc
inc
jge
in
imul
jp
cmp
loopne
cmp
and
jo
and
insb
cmp
jno
rcl
pop
imul
sub
fnsave
cmp
movsb
push
dec
pop
les
gs
sub
inc
sub
jmp
jne
pop
and
out
dec
pop
adc
and
sbb
push
mov
jecxz
push
inc
push
loopne
add
cmp
les
or
movsb
ds
cmp
jne
cmp
in
and
aas
inc
push
sbb
jg
mov
and
inc
and
ja
imul
daa
jno
and
loopne
cmp
add
ret
jge
xor
jp
loopne
iret
sbb
fs
dec
push
jmp
adc
jno
and
sub
push
pop
and
add
xor
outsb
jo
loopne
adc
xor
negl
lar
fsubrp
or
dec
add
sti
add
bound
adc
or
push
orl
repz
xor
xor
pop
aas
ds
and
push
cmp
inc
or
xchg
ret
xor
add
cmp
shlb
cs
insl
pop
push
adc
scas
aaa
push
repz
daa
cmp
das
int3
imul
jecxz
pop
mov
inc
imul
jno
test
sbb
sub
sbb
fists
aad
sbb
pop
pop
daa
dec
cmpsb
pop
cmp
jo
mov
adc
push
dec
scas
sub
adc
jae
je
mov
outsl
jg
into
add
insl
and
imul
shlb
sbb
std
push
stc
lods
enter
fdivrs
add
ss
orl
movsl
inc
xchg
cmc
or
ds
inc
sbb
lcall
and
jno
and
dec
cmp
rorl
ret
jno
sub
call
dec
adc
cmp
sub
dec
mov
sti
push
rclb
lock
xor
push
ret
xor
jmp
push
inc
lret
cmpsb
loop
mov
and
mov
pop
cmpsl
or
popf
jp
push
and
add
sbb
aas
or
shlb
sti
add
pop
les
push
and
jno
xor
pop
inc
dec
arpl
aam
dec
sti
push
test
into
pop
and
in
sub
cmp
es
jo
pop
ja
shlb
xchg
sub
xchg
cmp
jno
dec
arpl
lret
es
cs
dec
xchg
adc
adc
sub
mov
stc
dec
jb
xlat
and
and
jns
inc
lret
sub
das
push
addr16
push
cmc
xchg
pop
push
outsb
mov
push
orb
cmp
adc
das
jne
xor
std
add
pop
push
mov
dec
loop
push
jmp
push
and
jecxz
sti
pop
lahf
or
shlb
jo
dec
pop
arpl
pop
cmp
pop
dec
data16
lret
sbb
inc
adc
xor
or
push
lahf
mov
adc
mov
add
mov
js
arpl
adc
dec
add
jno
jno
xchg
mov
sub
loope
in
aaa
test
sub
xor
mov
push
xor
insl
arpl
aas
or
aaa
mov
adc
cmp
adc
jo
push
sbb
fidivrs
xchg
sub
pop
insb
push
mov
gs
imul
xchg
push
into
test
repz
cmp
addr16
lea
out
mov
pop
pop
sahf
xchg
push
xchg
and
out
negl
adc
orl
sub
pop
sti
sbb
jae
pop
imul
mov
mov
xor
xchg
adc
push
inc
test
scas
jns
adc
int3
inc
mov
inc
shll
loop
das
int3
out
aas
fisttpl
adc
les
and
imul
or
jecxz
mov
and
inc
add
test
sub
xchg
push
orl
scas
sbbl
gs
xor
clc
sbb
pop
push
adc
sbb
imul
pop
outsl
jmp
xchg
shr
mov
test
daa
sub
cmpsl
addr16
lock
ljmp
ret
jo
add
xor
xor
jno
and
sahf
push
xchg
pop
cmc
mov
add
les
cs
sub
test
ficompl
inc
mov
xor
mov
cmc
add
jge
pop
adc
and
loopne
pop
jb
inc
adc
mov
nop
js
in
arpl
add
rcll
imulb
pop
imul
stc
andl
xchg
dec
cmp
push
test
iret
fcoml
mov
cmp
dec
sbb
dec
push
ret
jne
adc
cmp
out
or
insl
xchg
sub
shrl
sub
and
xchg
int
lds
and
leave
xchg
stc
stc
dec
sbb
sbb
add
stc
fsubrs
icebp
sbb
leave
inc
sub
clc
xchg
popf
and
imul
xor
daa
xchg
sbb
cmp
int3
sbb
add
sti
repnz
and
mov
loope
lahf
inc
and
mov
iret
shll
dec
dec
xchg
jo
jae
push
insl
push
jne
adc
sub
in
cmp
outsl
mov
push
sbb
dec
aam
aas
push
test
sub
into
fnstsw
loopne
aam
das
xorb
sbb
and
jle
sub
or
push
sub
add
jo
pop
sbb
sub
mov
jns
shll
dec
je
sbb
cmp
es
jecxz
test
pusha
jno
icebp
add
and
stos
pop
das
sbb
adc
movzbl
roll
ss
or
daa
data16
jb
popa
addr16
adc
cmp
scas
adc
cmp
gs
jnp
pop
sbb
add
sub
pop
add
jae
into
test
arpl
push
rcll
or
mov
addr16
fmull
out
insb
data16
xchg
daa
in
aam
scas
jbe
jno
stc
arpl
cld
movsb
imul
test
fsubrs
dec
cltd
arpl
insl
add
out
pop
xor
push
mov
push
xchg
fstpl
imul
gs
insl
shrl
inc
xor
in
xor
js
mov
incb
repnz
adc
in
inc
dec
pop
sub
in
aas
and
inc
dec
cmp
xor
hlt
rclb
mov
adc
push
insb
sbb
dec
rclb
into
xchg
xor
mov
out
xor
inc
add
adc
imul
inc
mov
jo
dec
test
ret
into
cmp
pop
add
xchg
sarl
or
imul
in
daa
xor
push
sbb
loop
sahf
jge
outsb
mov
xor
or
push
sub
add
movl
push
cmp
outsl
data16
dec
lods
push
push
jge
xchg
cmc
sbb
jp
sub
add
sub
roll
ret
push
js
xchg
push
push
xchg
push
test
dec
dec
add
loope
ret
inc
aas
clc
lods
pop
xor
sbb
mov
push
adc
sub
aas
jo
ds
jno
jecxz
sub
enter
cs
and
inc
movsb
popa
sub
hlt
inc
int3
add
outsb
je
add
lods
imul
sub
pop
xor
jno
insl
sub
xor
lds
insl
fdivl
test
push
inc
mov
iret
out
adc
dec
mov
sbb
imulb
pop
and
sbbb
mov
pop
and
das
call
pop
add
jae
push
iret
push
xor
nop
js
sbb
jo
por
fsubs
jne
out
push
ret
jb
mov
arpl
les
cmp
jecxz
push
xor
mov
loopne
aas
mov
pop
mov
out
and
fstps
jns
pop
cs
repnz
jae
adc
lahf
call
shlb
jne
jnp
mov
or
mov
jne
sub
mov
addr16
pop
xor
or
dec
mov
lret
cmpsb
or
rorb
std
push
xor
jp
sub
outsb
jno
xchg
push
leave
pop
shrl
and
arpl
fdivrs
sub
fdivrs
cmp
xchg
jae
cmc
cs
sahf
iret
insl
in
add
jl
in
cmc
aas
js
mov
mov
inc
loopne
jne
push
pop
in
dec
jge
inc
adc
sbb
push
mov
loop
sbb
sub
add
push
jle
sub
sbb
sub
cmp
adc
mov
lret
mov
js
mov
nop
sub
jge
in
fisttpll
scas
sbb
dec
mov
imul
incb
imul
aam
imul
or
cmp
push
je
push
pop
mov
push
push
js
xor
dec
lret
sub
add
add
cmp
pop
dec
sub
dec
adc
in
js
mov
cwtl
push
mov
fwait
ret
push
lcall
inc
test
fdivr
pop
ss
gs
ds
dec
insb
sub
pop
aaa
jp
ds
cmp
aam
and
adc
sub
adc
push
shlb
shll
add
or
test
add
add
mov
inc
les
or
pop
xor
pusha
outsb
push
cmp
mov
push
mov
dec
sub
cld
push
insl
loop
lods
and
ja
jno
cmp
inc
mov
and
xacquire
and
insb
jo
cmp
dec
aam
jne
jno
or
pop
mov
gs
aaa
dec
or
jbe
ljmp
xchg
jmp
add
aas
and
popa
jno
cli
fidivs
or
or
sub
adc
fcomps
jo
xor
sub
in
stc
ficoms
push
and
push
cmp
xor
lea
lds
dec
inc
jmp
adc
loope
cmpsl
inc
push
jne
xor
popa
shlb
push
cmc
aas
dec
jl
ret
dec
and
sbb
in
mov
and
insl
adc
xor
imull
push
shlb
testb
pop
popf
mov
and
in
imul
mov
inc
dec
jo
loope
xor
mov
ret
int
push
imul
and
sti
mov
adcl
mov
inc
call
test
push
mov
pop
jg
sbb
mov
cmp
xor
pop
xor
daa
xchg
cltd
and
inc
into
data16
gs
ljmp
or
xchg
loope
dec
in
js
mov
adc
push
lds
cmp
mov
inc
or
loope
adc
cmp
lock
cmovns
push
and
push
daa
es
fmulp
out
add
add
or
jge
mov
add
fldl
test
inc
call
testb
jae
imul
push
xchg
inc
jae
cwtl
lods
sbb
lret
lods
out
dec
out
fcoms
fidivl
adc
xchg
gs
jno
inc
cmpsl
or
aad
add
jmp
cmpsl
aam
sbb
cmp
insb
aaa
dec
jge
dec
push
cmp
pop
xchg
jno
sub
inc
adc
or
add
mov
push
lretw
rol
inc
cmp
and
sub
push
rcrl
xor
adc
ljmp
inc
pusha
shl
je
push
xor
repnz
shrb
jno
lret
pop
outsl
mov
mov
xadd
lds
stos
int3
int3
popf
inc
xchg
in
dec
in
leave
inc
repz
mov
sub
sbb
mov
xor
mov
jb
out
sub
add
cmp
adc
push
insl
dec
shrb
adc
stos
insb
push
add
jo
pop
add
fdivrs
cmc
push
xor
push
sub
cmp
sub
cmp
into
cmp
lret
and
insl
imul
jno
sub
es
mov
mov
sub
add
and
dec
push
xor
pop
lahf
stos
faddl
adcb
das
mov
mov
imul
jmp
sub
jno
fdivl
xor
adc
dec
mov
jnp
sbb
push
sti
aam
mov
sbbl
cmp
and
enter
insl
les
dec
dec
or
sbbl
sbb
add
loop
bound
add
outsl
cmp
lret
cmp
jns
mov
arpl
int3
sarl
stos
sub
mov
push
sbb
add
pop
xor
sub
fcomps
in
loope
inc
and
pop
adc
jbe
insb
mov
mov
jns
dec
les
in
xor
fldt
das
lret
jmp
pop
imul
pop
cmp
or
or
das
and
pop
imul
hlt
mov
jno
xchg
add
outsl
add
xabort
xor
cld
shll
inc
mov
addl
das
in
in
enter
jo
rcrl
test
push
subl
cld
sbb
add
enter
aaa
cmpsl
insl
add
lret
enter
xchg
or
and
ret
xchg
imul
cs
aas
add
ret
movsl
stos
ds
mov
fbstp
test
leave
in
aas
mov
in
aam
leave
push
mov
mov
add
pop
icebp
test
xchg
dec
test
inc
adc
into
sbb
es
ss
xor
shlb
ss
mov
push
inc
bound
fidivs
xor
inc
add
add
mov
ljmp
xor
adc
inc
xor
inc
js
lea
or
jg
mov
jno
outsl
cmp
xor
inc
hlt
inc
sub
out
mov
inc
cmp
push
sahf
cmp
lds
fdivrl
scas
mov
push
ss
mov
popf
ds
incl
jnp
dec
clc
int
inc
dec
int
shll
dec
call
int3
cwtl
xchg
dec
outsl
mov
sbb
das
lcall
and
dec
sub
js
inc
mov
aaa
sub
inc
js
out
rcr
dec
call
insb
bound
inc
jno
dec
mov
imul
stos
fdivrs
shll
mov
push
js
or
stos
sbb
adc
lds
inc
pop
aaa
sbb
fstl
jno
sub
fmuls
test
mov
inc
or
adc
incl
lret
sbb
push
rorl
inc
insl
cld
mull
dec
and
xor
test
call
push
imul
jo
jb
popf
jecxz
popf
dec
and
jns
xor
shll
add
mov
xor
je
lahf
or
insb
cmp
rcrl
or
cmc
and
rcrb
imul
pusha
je
push
lahf
lcall
jne
mov
lock
scas
in
and
push
or
imul
aam
jns
push
ficomps
scas
arpl
test
xchg
sbb
imul
fdivl
rorl
push
sbb
jno
ss
or
push
adc
xor
push
es
adc
in
pop
sub
pop
imul
jae
sbb
pop
add
ficomps
push
lods
mov
xchg
inc
jns
in
iret
xchg
mov
push
xor
fistpll
sub
adc
js
popa
jno
xor
jns
xor
cvtdq2ps
popf
sbb
pop
inc
sbb
rclb
xor
dec
push
scas
add
cli
mov
ficomps
adc
pop
addl
push
test
repz
or
fs
andl
add
inc
jb
rorl
add
fidivrs
insb
icebp
push
jecxz
orb
mov
inc
fisttps
xor
add
jbe,pn
pop
push
jecxz
xchg
data16
cmp
into
addr16
sbb
ret
jno
cmp
loop
adc
outsl
dec
popa
xor
rorb
and
addr16
in
xor
dec
xor
dec
sbb
push
add
sub
dec
ret
inc
or
mov
stc
nop
jno
hlt
pop
pop
inc
push
sarb
xlat
sbb
inc
and
das
dec
arpl
sbb
pop
ret
aaa
fisttps
pop
xchg
inc
push
sti
ja
adc
ss
pop
imul
pop
mov
add
xchg
movsl
push
aaa
jns
sub
shl
sub
mov
imul
mov
test
sub
addr16
pop
imul
das
xorb
and
cmp
mov
popf
jo
addr16
shrb
xor
xor
std
sub
add
ret
sbb
cmpb
cwtl
adc
push
data16
aas
cmp
add
sti
pop
and
add
push
and
xor
cmp
ss
lea
and
mov
lea
pop
outsl
push
cmpsb
movsb
aad
aam
adc
xchg
xor
inc
xor
jno
xor
lahf
and
jmp
ds
cwtl
imul
inc
outsb
pop
scas
push
cmpsb
jno
xchg
sbb
adc
or
scas
mov
test
jg
xlat
xchg
addr16
fsubrs
xchg
adc
xor
lock
aaa
inc
or
cld
popf
and
les
in
inc
adc
je
push
and
mov
add
adc
sub
addr16
in
push
inc
int
call
add
jns
and
arpl
sbb
pop
sbb
push
or
push
in
test
lods
mov
jo
xor
xor
inc
push
je
push
inc
sub
out
insl
sahf
inc
out
jb
jl
lahf
mov
pushf
pop
or
cmpsb
shrl
sbb
gs
imul
xchg
stos
adc
and
out
jno
adc
or
cmp
push
jecxz
push
mov
push
iret
enter
jp
ss
fstp
cltd
pop
andb
pop
jmp
aam
movl
push
cmp
xchg
es
int3
shl
pop
mov
outsl
and
push
jns
cs
add
fldl
jae
pop
imul
inc
popf
addb
daa
xchg
sbb
pop
sbb
rcr
sub
sub
dec
fnstcw
lahf
xor
and
pop
imul
cmp
xor
cmp
ds
mov
test
test
pop
sti
xchg
push
ret
repz
or
movsb
sub
pop
jno
pop
insl
dec
icebp
dec
inc
add
je
cmpsl
lahf
daa
pop
sub
sti
jp
sbb
cmp
int3
jo
in
xchg
jg
mov
in
push
xchg
or
sbb
push
notb
shrl
stos
inc
loopne
pop
xor
cmp
imul
push
aas
pop
mov
enter
jae
jl
jae
fstl
xor
leave
push
pop
outsb
cld
dec
into
or
imul
xor
sub
sbb
pop
andl
inc
call
inc
lea
inc
lds
pop
dec
ud0
mov
pop
dec
jo
frstor
dec
and
jo
and
mov
cs
inc
jp
add
and
addr16
iret
orl
imul
cs
outsl
ds
cwtl
imul
push
pop
or
lods
and
psubb
push
inc
js
adc
mov
ret
and
rclb
jns
xchg
dec
outsb
add
lret
loop
sbb
dec
sbb
sub
cs
jle
outsl
jle
cmp
mov
outsl
imul
ds
dec
lahf
sub
in
sbb
inc
dec
push
fstpl
repnz
add
cmp
add
xor
mov
sub
mov
xor
addl
repnz
aam
sub
sbb
jmp
jl
lds
fistpl
inc
lods
cmpsl
mov
mov
aas
or
outsb
hlt
aaa
push
pop
xor
pop
sahf
inc
jmp
insb
cmp
pop
dec
xor
sbb
push
add
xor
lret
pop
repz
cmp
sbb
cmp
sbb
dec
imul
cmp
xor
or
mov
push
loope
imul
leave
cmpsb
inc
popf
and
dec
or
pop
or
arpl
imul
pop
call
push
push
gs
cwtl
test
sub
xor
insl
adc
mov
jle
notl
lock
imul
push
sbb
push
cmp
xor
pop
lods
pop
les
imul
or
push
ret
jae
fcom
add
arpl
in
cmpsl
cs
mov
sub
das
popa
into
test
notb
adc
les
mov
add
jae
inc
sub
cmp
pop
sub
adc
push
adc
xchg
int
icebp
add
pop
xchg
and
std
add
pop
push
sbb
add
xchg
dec
inc
scas
push
mov
jns
push
test
test
mov
inc
aad
daa
daa
cld
test
imul
je
leave
xchg
in
mov
rcl
popf
dec
lock
pop
movsl
sbb
xchg
sub
mov
dec
dec
mov
jl
dec
adc
push
dec
adc
dec
aaa
fs
pop
and
xor
dec
cmc
push
and
mov
cs
fstps
xchg
push
and
jbe
pop
movsb
add
jno
fistpl
pop
ficoms
sub
xchg
pop
and
dec
push
sbb
add
xor
jne
sbb
andl
xchg
cld
fdivrl
mov
push
js
sbb
dec
sub
loopne
fdivrs
popf
lcall
cmp
or
pop
push
dec
cs
dec
dec
out
add
and
push
push
jp
jnp
cmp
insb
inc
push
push
sahf
inc
mov
in
or
and
addb
pop
insl
lahf
rcrl
jecxz
xchg
add
pop
sub
mov
sbb
inc
inc
jno
jecxz
dec
or
pop
or
test
cmp
dec
jg
data16
insb
mov
dec
cs
cmpsl
pop
mov
push
pop
mov
stos
fstpt
je
sti
cmp
nopl
push
sub
loopne
cmp
sbb
std
dec
and
and
inc
dec
mov
cli
add
pop
or
adc
inc
cltd
pop
pop
add
aaa
ja
push
mov
int
lock
adcl
data16
cwtl
adc
aam
in
out
and
das
pop
mov
adc
aaa
in
or
iret
out
cmpsb
mov
int
leave
aas
repz
add
and
mov
hlt
lahf
shll
sbb
mov
cmp
xchg
in
rclb
pop
sub
push
addr16
dec
gs
arpl
add
cmp
mov
add
jge
shll
add
stos
cmp
ret
push
mov
lods
movsl
ss
leave
loope
mov
xor
adc
imulb
je
cld
sub
in
dec
adc
mov
cmc
and
roll
or
dec
jg
pop
and
sbb
inc
xchg
and
xor
arpl
jns
bound
push
js
repnz
push
cmp
in
arpl
je
ds
mov
push
jp
clc
mov
into
icebp
push
jmp
pop
xchg
pop
dec
imul
mov
lods
lods
jl
push
cmpsb
imul
stos
imul
inc
push
jl
cmc
lea
xor
or
mov
jecxz
es
xor
dec
push
loope
shlb
insb
clc
cmp
xor
and
or
pop
mov
out
pop
arpl
pop
aam
xor
and
jbe
adc
push
es
shll
nop
inc
jno
insb
pop
daa
add
out
stos
mov
cmp
mov
nop
add
add
cmp
push
pop
push
jo
and
mov
adc
call
orl
pop
cmc
inc
adc
fwait
enter
popl
push
sub
and
pop
cmp
push
sub
jno
inc
fnstenv
jae
jae
cmpsl
and
addl
and
pop
pop
xchg
push
sbb
mov
ret
adc
int3
out
dec
addr16
xor
xor
ss
mov
dec
adc
orl
jns
jg
fcomp
mov
hlt
and
movsl
scas
pop
out
cmpsl
stc
pusha
or
les
adc
adc
or
loope
adc
fs
mov
pop
push
sub
test
mov
jmp
cmp
mov
push
int
cmc
sbb
jp
loop
bound
std
mov
xor
outsb
sahf
js
test
dec
repnz
pop
jno
inc
mov
dec
pop
push
adc
jno
dec
clc
jb
repnz
nop
push
fidivl
xor
xor
sub
es
pop
or
lds
or
ss
in
mov
dec
xor
ss
sub
sub
mov
movsb
pop
mov
aad
pop
adc
movsb
scas
pop
leave
cld
sti
push
push
push
dec
cs
or
xchg
outsl
mov
in
movl
xor
insl
test
pusha
rcrl
xchg
xchg
cmpsb
xor
sub
mov
push
jnp
repz
sbb
sub
aas
in
fisubl
inc
int3
clc
jno
jnp
pop
dec
push
lcall
ret
sti
addr16
pop
push
es
mov
out
aaa
outsl
stos
cmp
or
or
sbb
dec
xchg
or
out
insl
sbb
out
adc
lock
jmp
inc
xor
mov
cld
imul
popa
rclb
and
inc
dec
outsl
sbb
ret
or
icebp
mov
lcall
ss
inc
pop
pop
push
add
and
out
add
jno
dec
or
sar
pinsrw
in
sbb
adc
and
mov
sub
sub
cmpsl
xor
or
dec
jno
mov
inc
insb
or
push
xor
rorb
insl
fiadds
dec
inc
fildll
lahf
mov
mov
inc
cmp
add
jne
int
out
ret
add
inc
cmp
jne
cmpsb
push
adc
stos
cmpsb
mov
in
mov
mov
pop
or
pop
stc
out
out
imul
in
std
js
jmp
lds
lret
adc
cs
shrl
jne
push
fs
sub
gs
add
xor
sub
push
jge
repz
jle
outsb
frstpm(287
mov
movl
scas
xchg
pop
call
sub
out
int3
movsb
xchg
sbb
call
gs
fsubs
push
addb
imul
imul
lods
aas
xor
lock
dec
aaa
jg
aam
inc
sbb
sbb
pop
movsl
pop
xor
push
lcall
es
sbb
pop
dec
and
cmp
xorl
repz
insb
inc
dec
jno
cmpsl
xor
jb
fxch
push
xchg
push
adc
xchg
bound
dec
jno
gs
sbb
push
mov
sub
inc
int
out
xor
dec
idivl
pop
push
push
insl
jg
jg
dec
add
cs
into
cs
loope
dec
push
add
xchg
mov
inc
fsubs
xor
jo
cmp
repz
add
inc
xor
jne
mov
mov
xor
sti
inc
addb
out
xchg
bound
cmc
mov
pop
jne
pop
aaa
imul
ss
jne
pushf
test
add
daa
inc
push
mov
sub
sbb
ja
sub
xchg
aaa
sbb
aad
mov
pop
in
cmp
lock
movsb
das
add
sbb
out
inc
jg
mov
and
adc
dec
mov
dec
data16
xor
push
not
mov
cmp
cmp
pop
aaa
in
adc
lock
popa
and
dec
ss
dec
outsb
dec
or
jle
lods
sbb
jnp
lret
sahf
aas
xor
cmp
icebp
jle
and
jne
inc
dec
xchg
xor
jle
sbb
in
sub
fnsave
mov
jmp
lds
lock
mov
ds
in
sub
jb
fwait
push
sub
les
xor
cwtl
pop
mov
fsubs
fcmovnu
in
pop
ret
test
push
mov
es
jmp
xor
adc
dec
pop
inc
mov
add
lods
mov
clc
ss
mov
mov
lahf
dec
or
and
stc
mov
dec
out
or
sub
ret
jnp
dec
xor
out
xlat
and
pop
pop
mov
fstpl
xorps
mov
add
push
lahf
push
sbb
cmp
inc
lods
mov
ss
adc
cli
dec
fiadds
push
mov
xor
lcall
in
adc
fistl
or
fst
insb
pusha
add
ja
stos
mov
outsl
jae
add
cmc
push
fildl
ds
push
push
std
loope
mov
mov
outsl
lods
mov
sbb
pop
aad
pop
cmp
sbb
ja
cmc
aas
inc
loop
xchg
push
loop
sbb
sub
loop,pn
jecxz
test
out
filds
or
or
pushf
fldenv
mov
cmp
dec
lahf
adc
ss
pop
cmp
add
int3
pop
imul
cmc
pop
notl
daa
mov
mov
iret
sti
mov
xchg
jp
lret
testl
and
pop
loop
push
jb
repz
sbb
pop
jno
shrb
pop
lds
mov
cmp
scas
or
ja
aam
nop
in
call
out
jno
outsl
and
push
cmc
xorl
sub
int
xchg
sub
dec
inc
insl
or
pop
dec
lock
imul
sub
xchg
ds
xchg
dec
in
sbb
pop
adc
popf
aas
cmp
mov
rorl
mov
inc
xchg
cld
xor
xchg
loop
js
loope
ss
pop
movsl
popf
adc
loope
in
outsl
insl
outsb
add
ficoml
lds
test
ficompl
ds
dec
xor
shrl
sub
push
pop
call
and
arpl
xchg
lods
mov
mov
dec
imul
xor
pop
aas
arpl
imul
das
push
repz
jb
dec
mov
sbb
adc
test
inc
push
mov
ds
mov
inc
cmp
inc
sub
sub
mov
daa
outsl
pop
std
jnp
xlat
iret
mov
dec
xor
jp
jbe
or
popa
les
out
pop
or
xor
mov
jns
call
sub
and
adc
jnp
outsl
movsb
pop
nop
enter
shll
ss
cmp
jecxz
add
dec
ret
cmp
cwtl
call
adc
cmp
sarb
fs
arpl
fstl
xor
inc
inc
jns
jns
cmp
push
inc
jnp
js
cmpsl
lock
add
gs
std
out
movsb
lcall
xchg
dec
inc
push
das
adc
push
jl
leave
loope
stos
inc
push
or
ud0
incl
scas
rcrb
adc
popa
addr16
mov
pop
pop
and
mov
cs
jecxz
push
ror
shrl
push
and
adc
jl
clc
fdivs
out
xor
xor
stc
xor
out
negl
jae
sbb
ret
push
aas
or
outsb
dec
in
jge
aaa
adc
mov
outsb
sub
or
sub
out
mov
jl
cs
cmp
testb
cltd
loop
arpl
mov
mul
jo
cwtl
cmp
scas
gs
es
sbb
sbb
jge
ljmp
pop
enter
jns
xor
xor
ss
xor
cltd
or
xor
hlt
push
and
push
pop
and
mov
push
pop
jae
mov
out
dec
imul
mov
dec
mov
fcoml
popa
pop
xchg
imul
cmpb
test
fdivs
lahf
fmuls
mov
xor
pushf
add
ss
mov
scas
pop
insl
movsb
pop
incb
in
cmc
adc
mov
jo
sbb
push
rol
pop
cmp
push
or
orb
pop
std
jne
mov
insl
ret
int3
clc
and
cmpsb
jge
insb
mov
mov
das
lock
dec
int
or
mov
dec
enter
imul
sub
outsl
mulb
repz
sbb
sbb
je
mov
and
mov
scas
shl
lock
cmp
jp
cld
test
leave
inc
les
int
inc
fwait
jno
dec
in
pop
push
sahf
in
incl
pop
jmp
daa
push
adc
cmc
sub
and
into
iret
out
lea
adc
imul
adc
mov
xor
ss
sub
mov
dec
or
jle
mov
out
xor
push
or
insb
add
addr16
mov
lock
dec
add
cwtl
cwtl
test
jp
lret
iret
mov
mov
rclb
and
dec
and
pop
and
into
dec
mov
adc
xlat
in
cmpsb
xchg
lcall
cltd
int
test
test
dec
inc
stos
adc
aad
and
dec
incb
jne
push
cld
and
out
loope
add
inc
cmp
push
bound
fwait
pop
stc
pop
xor
test
push
in
ss
clc
jge
sbb
add
gs
rcll
lret
mov
jns
jno
test
mov
jmp
testb
or
pop
fwait
cs
and
and
cmp
sbb
add
sahf
xchg
out
scas
push
and
repnz
push
out
leave
push
mov
lcall
in
xchg
jb
andl
jge
outsl
mov
cld
lock
pop
jle
outsl
add
add
add
sbb
jo
sbb
pusha
add
std
sbb
fdivrl
into
adc
aas
inc
mov
sub
dec
xchg
sub
mov
dec
nop
repz
or
add
sub
mov
xor
es
aam
notl
inc
cld
jb
shr
jbe
xor
sbb
jo
push
andl
rorl
jmp
scas
xor
outsl
rcl
mov
mov
arpl
sbb
pop
dec
gs
aas
hlt
data16
cmovl
enter
adc
test
mov
test
xor
cmp
mov
mov
js
sbb
jle
lds
and
ja
in
mov
pushf
test
adc
jb
mov
rcrb
nop
xor
or
jbe
fs
js
add
cs
pop
int3
js
push
lds
jmp
xchg
scas
das
std
push
mov
mov
lds
fdivs
pop
lret
shrl
stos
mov
lret
dec
aam
movsl
or
pop
push
bound
jno
int
add
jge
jae
fs
in
imul
pop
and
push
gs
mov
mov
imul
jae
jne
inc
movsl
dec
xchg
xor
push
or
sub
xor
sbb
xor
dec
cmp
scas
pop
xchg
nop
pop
dec
cmp
pushl
xor
idiv
push
jae
sub
cld
xor
mov
push
push
mov
dec
add
jb
movsl
jge
xor
cmp
mov
jge
jmp
and
and
xor
and
out
pop
rorl
insl
lods
cmp
dec
pop
cld
xor
jmp
mov
aaa
xor
mov
test
xor
test
xor
mov
cmp
sbb
mov
adc
jge
dec
in
imul
out
fcomp
push
shlb
cmp
xchg
jl
dec
dec
xlat
and
and
test
mov
and
and
imul
jge
jmp
dec
pop
jmp
hlt
mov
mov
popa
mov
cmc
cmpsb
sbb
outsl
pop
mov
dec
out
scas
pop
sbb
out
insl
or
mov
sub
cld
fnstenv
jp
fcompl
mov
xor
and
inc
sub
in
es
arpl
imul
xchg
pushf
dec
xchg
sbb
not
add
pop
les
cld
adc
mov
adc
sbb
cltd
pop
mov
ret
jmp
inc
and
lods
inc
movsl
pop
push
pop
sbb
je
mov
mov
inc
loope
xor
cs
aaa
or
sub
das
sbb
out
inc
xor
jg
inc
cmp
xor
dec
ds
mov
in
lods
pop
jae
push
in
push
setb
in
xor
lret
fsubs
daa
cwtl
inc
dec
out
repz
fstps
insl
fsubs
xor
lahf
push
inc
aad
inc
adc
jle
mov
xchg
or
cmp
lret
mov
pushf
mov
push
xor
or
mov
loopne
ds
insl
ficomps
cli
lods
fcoml
popa
into
sbb
mov
pop
repz
or
ret
push
add
leave
add
out
fists
dec
and
fidivs
mov
or
and
jle
repnz
mov
pop
adc
int
mov
inc
add
inc
loope
clc
stos
fdiv
sbb
cmp
sahf
push
mov
popa
in
repz
xchg
mov
xor
jp
or
add
cmp
inc
fnclex
insb
xor
int3
sbb
inc
inc
cmp
pop
std
mov
out
dec
arpl
xchg
jg
mulb
test
icebp
jmp
mov
push
add
cmp
and
call
or
cmp
jb
sarb
outsl
inc
mov
imul
shlb
push
ss
fwait
pop
xchg
push
pop
inc
sbb
sbb
push
xchg
fsts
js
out
xchg
cmp
lret
dec
mov
inc
lret
imul
dec
or
pop
bound
lods
into
scas
xor
pushf
pop
clc
and
xorb
push
sub
mov
or
sbb
mov
xor
or
xor
lcall
cmpsl
or
xchg
or
mov
xor
pop
push
xor
cmpsb
fsubl
popf
pop
in
lcall
mov
insb
pushf
xorl
sub
mov
xor
and
push
xchg
pusha
push
rolb
push
mov
pop
sub
pop
clc
clc
rcr
pop
pop
fidivrs
mov
or
cmp
js
and
int3
push
pop
mov
sbb
or
jg
aas
imul
ljmp
cmove
push
jnp
dec
cmovae
push
inc
pusha
or
icebp
jb
aaa
cmp
add
adc
sbb
out
arpl
out
fcompl
mov
cmp
das
out
adc
or
sub
fwait
mov
test
pop
dec
outsl
pop
sbb
pop
or
mov
push
pusha
aaa
rorb
dec
xlat
lret
sbb
iret
lds
cmp
ljmp
push
outsl
sbbl
jg
xchg
xorl
stc
repz
inc
fidivs
outsb
xchg
ret
sub
mov
dec
mov
sti
and
in
push
push
in
fcoms
cmp
repz
test
ret
inc
popa
xchg
fcompl
fwait
rorl
jno
pop
sahf
sbb
roll
pop
inc
dec
add
popf
into
xchg
sahf
jge
adc
xchg
dec
push
add
aaa
adc
fdiv
inc
xchg
mov
test
jnp
xchg
or
sub
imul
insl
test
xchg
test
xchg
or
jb
cmp
or
add
mov
test
pop
add
sub
jae
xor
and
sbb
dec
jno
in
xchg
adc
pop
push
mov
and
fsubrs
inc
fwait
arpl
mov
jnp
out
push
movsb
cmpsl
cmp
jns
jge
mov
cmp
push
adc
ds
xchg
movsl
out
dec
mov
fwait
xchg
movsb
adc
xlat
mov
clc
xchg
push
repnz
addl
scas
mov
xchg
mov
stos
imul
loopne
jns
movsb
push
lods
fists
gs
rol
jge
xchg
mov
mov
xor
lock
mov
mov
adc
imul
ja
xchg
jns
rclb
sub
stc
pop
or
aad
dec
or
in
movsl
movsb
adc
xor
adc
and
movsl
dec
sbb
ret
aas
xor
fucom
jo
pop
and
mov
outsb
sti
mov
or
imul
add
push
aam
outsl
xor
sbb
les
xor
add
lods
dec
lock
mov
roll
cmp
or
in
insl
mov
in
pop
adc
jg
insl
mov
in
dec
dec
imul
mov
shll
mov
insl
mov
adc
outsb
mov
insl
arpl
inc
push
add
call
in
push
push
fmull
jg
cmp
push
xor
fcomp
lahf
andb
fmulp
add
adc
je
jno
ja
xlat
add
das
fisubs
or
dec
aas
add
sub
inc
sahf
jbe
sbb
adc
inc
push
hlt
lcall
sub
jle
mov
fwait
aas
add
push
test
insb
aas
push
or
or
add
lahf
bnd
push
pop
jno
pop
dec
repnz
adc
insb
and
push
pop
or
dec
dec
sbb
fwait
dec
push
std
xchg
sub
mov
dec
pop
push
jmp
pop
inc
xchg
mov
and
cmp
pop
cmp
xchg
in
mov
imul
rorl
add
popa
xchg
sub
sub
iret
dec
sub
push
insb
pop
inc
jp
push
adc
rolb
pushf
nop
imul
pop
jp
dec
jns
lods
push
push
bound
or
insb
mov
icebp
push
cmp
or
and
imul
sti
mov
bound
lods
cmp
dec
arpl
pusha
pop
push
fisubrl
bndstx
mov
mov
popf
and
or
dec
repnz
scas
out
clc
lds
cmpsl
test
sub
cmp
rorb
sub
ret
jnp
addr16
addb
jmp
testb
sub
pop
cwtl
pop
dec
mov
arpl
std
sbb
addr16
in
inc
push
push
call
xchg
repnz
jo
push
aaa
fistps
sub
push
loop
jae
adc
dec
dec
dec
sub
cltd
sbb
orl
add
add
xchg
dec
mov
fmull
or
inc
push
sbb
mov
imul
sbbl
dec
nop
in
loope
adc
add
push
std
add
inc
push
or
pop
pop
add
sbb
inc
inc
push
cmpl
mov
mov
push
cmc
imul
dec
sub
and
xchg
cltd
arpl
mov
adc
inc
lahf
pop
mov
loope
push
xchg
stc
pop
outsb
or
ljmp
leave
or
xlat
push
int3
ja
push
xchg
jb
push
mov
inc
mov
dec
and
cmp
mov
pushf
mov
cmpb
out
xor
mov
push
dec
pop
in
sarl
hlt
mov
stos
fsubrs
out
and
sbb
pop
in
jg
push
xchg
xchg
pop
js
pop
bound
inc
pop
jg
lret
stc
aas
enter
clc
or
cmp
stos
scas
add
dec
loopne
cmp
inc
cwtl
inc
xchg
add
ret
lahf
add
and
mov
jle
inc
sub
dec
sti
movsb
dec
xlat
xchg
mov
mov
xchg
mov
test
adc
or
dec
sbb
test
cmp
mov
cwtl
push
push
sub
daa
js
in
and
jecxz
sbb
cmp
sbb
xchg
jnp
jg
lods
pop
xor
push
dec
or
flds
popa
or
scas
fcmovbe
inc
movb
mov
fildll
mov
inc
imul
flds
insl
xor
cli
mov
add
fistpll
leave
pop
imul
popa
jmp
xor
xor
inc
sbb
sahf
and
in
inc
sbbl
mov
cmp
sub
ja
mov
out
in
test
cmp
shrl
icebp
inc
stos
push
pop
loop
add
mov
out
sub
jmp
icebp
sub
sbb
pop
movl
push
inc
cmp
push
lahf
bound
xchg
sti
iret
inc
dec
insb
scas
ret
mov
pop
inc
dec
nop
lods
jno
mov
mov
xchg
ret
dec
lret
xor
dec
cmc
enter
gs
cld
mov
icebp
push
outsb
das
push
xlat
dec
ret
imul
sbb
nop
push
pop
pusha
xchg
cmp
inc
aas
in
dec
xchg
xchg
hlt
cmpsb
pushf
mov
in
int3
ret
test
dec
xchg
mov
fsubs
push
pop
mov
insl
in
stos
sbb
cmpsb
enter
test
mov
out
das
mov
in
das
xchg
xor
int
adc
adc
dec
dec
frstor
sub
push
popa
push
xlat
push
js
dec
and
xor
cmp
mov
sub
push
les
sbb
or
lods
mov
out
inc
mov
leave
xchg
inc
cmpsb
cmp
mov
test
cmp
icebp
test
sub
pop
les
mov
pop
inc
inc
out
and
adc
lcall
mov
and
cmp
jo
idivb
ficoms
das
push
adc
cmc
cld
inc
hlt
xchg
xchg
ret
call
ljmp
rcrb
loope
xchg
cwtl
ljmp
gs
into
inc
int3
dec
or
fs
arpl
and
inc
cmp
push
inc
push
adc
dec
js
out
pop
sbbl
movsb
lods
cmp
out
enter
pop
popl
add
lahf
sahf
or
and
rorl
pop
xor
push
ljmp
aaa
es
cs
adc
loopne
dec
or
and
pusha
mov
mov
roll
jno
stos
pop
ja
mov
cmpsl
dec
pop
daa
outsl
jo
imul
jno
pushf
jb
sub
addb
pop
mov
and
test
push
dec
in
das
adc
test
sarl
orl
test
mov
jae
fadd
xor
or
or
jno
add
xchg
pop
mov
mov
xchg
jne
dec
into
decb
test
dec
mov
aas
or
bound
xchg
cmp
and
xor
stos
jno
into
jmp
xlat
inc
fs
rclb
pop
lods
fstps
push
aaa
mov
pusha
insb
loope
mov
or
pusha
push
rcrb
pop
lret
ja
xchg
fwait
scas
or
lods
scas
nop
sub
and
and
out
inc
mov
roll
xlat
jl
add
aas
aaa
inc
push
lahf
jne
inc
pop
sbb
test
and
mov
in
pop
mov
outsl
pop
adc
jne
jbe
inc
mov
sbb
jge
push
es
xor
ficoml
fdivrs
outsb
lea
stc
dec
hlt
dec
insb
sbb
addl
cmp
outsb
inc
ret
and
inc
lahf
pop
push
fldz
arpl
add
cmp
inc
leave
cmp
mov
jecxz
pop
jne
sbb
cld
out
sbb
adcb
xchg
js
pop
aaa
in
xchg
mov
or
outsl
cmpsb
or
inc
push
xchg
xchg
jp
mov
cmp
pop
push
mov
cltd
or
ss
sub
cmp
lock
and
or
or
pop
inc
jg
pop
in
arpl
mov
data16
fistpl
cmp
or
push
popf
leave
dec
arpl
push
cltd
inc
pop
and
jns
xchg
lds
push
in
scas
lret
test
pop
lods
mov
loopne
sbb
pop
and
std
insb
jne
sub
jae
dec
arpl
stos
aas
jge
pop
pusha
arpl
loop
and
adc
aad
or
sbb
pop
xor
or
popa
sbb
push
cmp
cmp
dec
cmp
push
and
pusha
or
add
mov
sub
jae
xor
popa
js
aas
push
jl
xor
jbe
xor
int3
cltd
pusha
rcl
in
mov
xor
jae
cmp
xchg
push
inc
andl
dec
test
dec
das
push
or
mov
stos
mov
mov
jge
adc
push
jp
jmp
sahf
fwait
ror
aaa
shrb
rorb
push
js
cltd
pop
arpl
fimull
sbb
into
bound
push
xchg
stos
cmp
add
andl
ja
mov
stc
cmp
stos
andl
or
mov
add
imul
aad
mov
mov
icebp
xor
add
add
rclb
ds
mov
mov
adc
push
in
add
ficoms
jo
adc
cmpsl
or
push
push
sbb
mov
xlat
push
outsl
or
xor
ss
pop
pop
xchg
in
mov
add
loope
mov
out
andl
mov
pop
cltd
mov
cs
mov
imul
out
xor
push
cmp
imul
xchg
dec
xor
cmp
jle
add
gs
clc
out
mov
dec
or
pop
and
dec
or
cmp
fidivrl
outsb
pusha
lds
or
jecxz
adc
push
push
dec
and
push
push
mov
push
cwtl
mov
cmpsl
subb
sbb
push
je
bound
sarl
fdivr
lods
cmp
push
pop
movaps
fscale
inc
cmp
or
or
test
out
push
xor
push
jg
popf
sub
push
dec
aaa
xor
pop
dec
cwtl
fsubs
jae
or
insl
rorl
dec
jno
daa
out
in
bound
inc
pop
adc
int
popa
adcl
sub
dec
fsts
or
fs
xchg
hlt
xchg
shrb
ret
mov
jmp
lods
xchg
push
dec
dec
pop
pusha
xor
in
shl
into
lcall
ds
or
test
lret
test
mov
mov
xchg
loop
adc
jmp
jbe
dec
sub
jge
loope
arpl
pop
orl
cmp
imull
sbb
mov
frstor
and
pop
sti
sub
adc
or
std
push
sbb
pop
cld
sahf
push
lahf
lods
sbb
lcall
scas
mov
jg
xor
sub
data16
sub
xchg
inc
sbb
repz
fwait
lahf
pusha
and
lret
and
mov
pop
icebp
movsl
jno
rcrl
arpl
or
xchg
or
shll
mov
addr16
mov
xor
push
or
dec
shll
mov
xor
daa
sahf
ljmp
bound
mov
add
push
jno
xchg
or
imul
mov
dec
pop
fmul
jo
mov
loopne
testl
in
enter
loope
fwait
jbe
pop
int3
adc
pop
inc
fiaddl
adc
jmp
sub
mov
mov
mov
add
pop
inc
push
cwtl
dec
pop
mov
clc
push
imul
add
outsl
xchg
add
add
mov
test
push
mov
push
sub
imul
std
adc
adc
xor
ljmp
mov
jne
in
icebp
orl
inc
imul
dec
or
imul
and
movsb
mov
jno
lods
xor
mov
ljmp
sbb
ljmp
add
dec
jecxz
ja
pop
sahf
sbb
dec
sub
bswap
dec
jbe
adc
dec
inc
jnp
cmp
dec
pop
inc
arpl
push
dec
xor
js
add
addr16
push
dec
sbb
dec
imul
inc
push
clc
adc
test
ljmp
test
mov
movzwl
arpl
push
fstps
cmpsl
pop
andl
xor
or
adc
jbe
ja
popa
sahf
mov
add
movsb
jb
and
push
popw
xor
shlb
cmpsb
lds
xor
add
dec
das
testb
or
jne
ljmp
movsb
jp
test
cwtl
mov
insl
and
add
imul
fisttpl
sti
dec
mov
sub
xor
jns
insb
aad
pop
cmp
sub
clc
inc
jg
pop
and
imul
xor
sti
outsb
xor
dec
mov
add
flds
push
imul
and
jns
push
adc
push
cltd
insb
rolb
cld
ss
mov
testb
push
inc
lods
cmp
cmp
add
pop
cs
or
inc
add
data16
es
pop
fcoml
inc
xchg
pop
sbb
dec
gs
and
jecxz
mov
int3
jle
shrl
ja
pop
pop
mov
jp
lea
and
pop
dec
xor
in
test
fiadds
adc
jge
xor
xchg
mov
ja
pop
cltd
sbb
lods
push
fisubl
and
sub
shl
scas
lods
addb
leave
pop
cltd
dec
sub
dec
ljmp
xchg
dec
xor
dec
repnz
dec
mov
mov
call
shll
fnstenv
out
dec
fs
or
sub
out
fs
cmp
xchg
jo
mov
test
fs
shll
movups
pop
fldt
in
dec
cmpsl
mov
and
in
add
inc
loop
insb
mov
sbb
sub
stos
dec
movsb
mov
add
dec
es
xchg
cmp
sbb
scas
ss
jbe
push
adc
mov
sahf
jns
sub
or
push
dec
sbb
mov
icebp
add
sbb
je
sahf
xchg
lock
imul
pop
call
rorb
fnstenv
sbb
add
out
es
aas
xchg
loopne
jae
xchg
add
inc
push
and
out
div
cld
je
pop
mov
sub
cli
pop
mov
mov
xchg
out
outsl
hlt
lods
push
movsl
push
pop
aas
loop
in
jns
andb
jmp
insb
xchg
add
rolb
jmp
dec
in
cmp
sub
dec
pushf
filds
adc
pop
fs
cmp
and
push
movsb
jmp
xor
lret
imul
and
cmp
das
sbb
cmp
jmp
dec
inc
sbb
jecxz
add
cmp
xchg
imul
rcll
mov
push
shll
inc
mov
xchg
and
aad
dec
sub
pop
sub
pop
arpl
sbb
jo
mov
lock
or
sbb
jae
shrl
xor
jmp
add
xor
xor
cltd
cmc
cmp
stos
xor
jne
ljmp
inc
gs
sbb
imul
shrl
dec
cmp
add
jno
inc
aaa
push
hlt
addr16
lods
in
pushw
fistps
mov
mov
add
pop
or
in
enter
sub
or
loop
sub
call
clc
cmovae
push
lea
mov
mov
dec
pop
enter
inc
sbb
mov
mov
aad
xlat
add
fldcw
pop
inc
push
out
test
mov
dec
aaa
push
icebp
add
sub
insl
sub
sbb
gs
aad
pop
add
mov
fst
lret
xor
aam
xor
mov
notl
dec
imul
pop
sub
pop
cltd
add
fnstcw
outsb
dec
push
std
inc
cmp
dec
mov
xor
cmc
mov
mov
push
clc
jmp
xlat
lods
dec
and
and
pop
mov
loop
shr
sahf
xchg
fxch
fwait
lock
pop
movsb
mov
in
xlat
mov
sbb
jecxz
testl
dec
cmp
jno
test
inc
pop
inc
xor
pop
arpl
xor
sbb
adc
sbb
xor
mov
int
or
pop
aam
jne
xor
dec
icebp
xchg
popa
xor
adc
sbb
adc
pusha
xchg
popl
dec
loop
fcompl
sbb
data16
out
ss
cs
popa
enter
daa
and
xor
lods
clc
data16
xchg
mov
pop
and
or
mov
jnp
sub
mov
xchg
dec
inc
lods
fwait
dec
mov
into
mov
test
cwtl
sbbl
popa
xchg
clc
lock
sbb
imul
adc
or
mov
push
dec
cmp
push
mov
cmpsl
jge
cmp
fcompl
cmovp
or
xor
mov
addb
jne
imul
pop
inc
cmp
inc
jecxz
cmp
xor
mov
and
stc
inc
cmpsb
cmpsb
ss
lret
cmp
notb
lcall
inc
les
sub
mov
pusha
adc
xor
jnp
insb
aaa
aam
push
mov
dec
mov
adc
sub
add
ficompl
dec
lods
push
enter
shrl
scas
lea
push
enter
and
pop
and
sbb
cmp
dec
scas
sub
arpl
or
jg
push
pop
pop
push
dec
inc
add
push
or
and
pop
mov
test
push
jnp
inc
imul
dec
data16
push
and
les
adc
push
ds
aas
push
ja
out
pop
cmp
incb
push
xchg
pop
pop
dec
dec
das
pop
sbb
cld
or
insb
jae
or
pop
push
pusha
fsubs
pop
jae
out
idivl
int
sbb
imul
jmp
mov
dec
push
dec
daa
add
js
xor
inc
cmp
push
push
dec
orb
mov
sub
lds
inc
push
pop
das
mov
xlat
pop
push
inc
fildll
mov
jae
push
dec
cs
inc
pusha
jb
bound
push
push
in
pop
les
dec
fcompl
daa
and
dec
push
lock
aaa
lock
jb
jne
rclb
jl
push
data16
pop
pop
das
mov
add
scas
mov
push
mov
cld
bound
sbb
xchg
dec
into
xor
dec
pop
push
inc
or
xor
loop
mov
mov
test
push
pop
cmp
inc
ss
push
pop
pop
push
mov
add
cltd
pop
and
addr16
jl
push
ds
pop
mov
push
fbld
sbb
mov
push
mov
mov
repz
xor
push
lahf
pusha
jns
add
fists
pusha
add
add
inc
cld
inc
pusha
pop
push
les
or
push
xor
arpl
push
imul
or
push
adc
insb
add
dec
sbb
dec
sub
pusha
fisttpll
jg
jle
inc
pusha
or
push
xchg
adc
call
dec
adc
push
dec
in
xor
and
dec
mov
gs
xor
hlt
jge
add
push
mov
stos
inc
sbb
adc
add
subb
sbb
inc
cwtl
push
pop
pusha
dec
movlps
and
lods
pop
xor
push
and
pop
fwait
in
pop
dec
inc
sbb
cmc
or
or
mov
data16
repz
pop
lcall
dec
ret
out
or
das
mov
jle
rcrb
push
cmp
outsb
pop
sbb
xor
data16
decb
cmc
or
cs
stos
data16
test
lods
inc
lret
xchg
jmp
stos
adc
jbe
mov
mov
push
divl
fcoms
xchg
pushf
add
cmp
dec
das
out
jb
sub
in
cmp
sbb
cmp
outsl
xchg
or
fcompl
push
lods
and
inc
cs
jno
mov
mov
add
loopne
cmp
add
bound
xor
add
dec
aam
insl
aam
arpl
pop
push
fiadds
cmp
push
add
mov
jo
adc
aad
inc
jb
push
push
test
pop
arpl
cs
pushaw
jno
es
js
icebp
or
xor
outsb
xorl
stos
and
jbe
cmp
push
repz
inc
xchg
push
or
clc
inc
push
into
and
pop
cmp
test
push
sub
mov
add
aas
mov
movsl
daa
out
jb
inc
mov
je
je
sub
pop
int3
mov
arpl
inc
xchg
sub
or
clc
inc
push
leave
das
popf
adc
js
cwtl
push
ret
sbb
pop
mov
lea
mov
add
dec
mov
sub
inc
lcall
cmpsb
sbb
cmpsl
ja
or
push
leave
cs
outsb
fsubrp
dec
xor
inc
mov
lea
pop
or
subl
inc
mov
lea
out
mov
jns
loope
jmp
dec
push
roll
pop
and
mov
fstpl
popf
cwtl
popf
in
mov
push
dec
dec
loop
pop
jns
or
jmp
popf
lahf
jns
sub
dec
lret
dec
adc
scas
jns
imul
stos
ja
cs
xorl
pop
sbb
mov
arpl
sbb
pop
or
mov
adc
outsl
cmp
push
adc
aas
jnp
shl
xchg
adc
cmp
push
cmp
cmp
dec
jnp
xor
cmp
or
mov
popa
mov
mov
cmp
inc
mov
ret
mov
push
sbb
jno
add
fs
js
cmp
pop
push
or
das
mov
adc
xchg
daa
mov
imul
mov
leave
push
add
test
sar
fsubrs
lahf
jecxz
shll
add
xor
adc
inc
sbb
out
xchg
repnz
jle
pop
or
das
or
in
xor
dec
jnp
js
pop
outsl
xchg
mov
imul
fidivrs
adc
push
mov
in
in
adc
int3
incl
out
ljmp
nop
sub
in
repnz
push
jle
data16
aas
jg
popf
xor
das
ljmp
aas
repz
inc
loop
jae
mov
das
outsw
add
loope
or
mov
add
inc
dec
pop
jmp
or
hlt
jbe
sbb
test
jne
mov
lea
fistl
push
outsl
jg
xor
imul
leave
dec
dec
movsl
xchg
jl
push
mov
adc
mov
or
sbb
pop
jae
dec
mov
cmp
inc
mov
rcrb
cmc
mov
jno
bound
popa
adc
pop
aaa
pusha
lret
adc
rolb
mov
dec
jmp
stos
sub
push
shll
aaa
sti
add
mov
ja
jg
mov
bound
sub
test
fisttps
jle
aas
out
mov
xor
pop
push
jno
arpl
ja
xchg
adc
adc
xor
ds
popf
push
scas
xor
push
stos
addr16
or
mov
push
fstpl
movb
adc
cmp
dec
xor
dec
dec
lahf
mov
rorl
adc
ds
fwait
mov
es
movsb
pop
data16
lahf
loopne
es
arpl
cmp
jae
sbb
lahf
xor
xor
inc
and
push
in
xor
rcll
and
lock
lock
lret
pop
call
testl
pop
pop
cmc
and
pop
inc
in
fistpll
nop
mov
das
jg
test
adcb
pop
or
and
fs
fadds
xor
and
decl
in
mov
std
imul
xchg
loope
idiv
frndint
sbb
and
bound
jg
outsb
cmp
mov
fs
adc
push
dec
inc
sbb
movl
xlat
jno
loopne
mov
push
mov
sbb
dec
adc
out
idivb
sub
leave
inc
jmp
mov
mov
shrb
fsubs
lock
imul
daa
fwait
sbb
dec
lds
test
cltd
pcmpgtw
jge
sbb
in
push
lcall
mov
gs
fdivs
lock
sbb
xchg
js
hlt
inc
sub
sahf
sub
mov
inc
icebp
inc
hlt
adc
jge
fwait
push
xor
jo
jnp
es
xchg
sahf
clc
repz
lret
jnp
and
mov
jle
das
mov
xchg
push
call
fwait
subl
cmp
enter
and
in
xchg
repz
pop
shrl
push
xchg
gs
xor
cmp
fildl
sahf
inc
jae
int3
cmp
xchg
push
out
call
push
push
inc
shll
rcll
sub
xchg
aad
inc
out
xchg
cmp
ficoml
dec
inc
xchg
and
stos
push
inc
dec
push
cmp
scas
xchg
sti
jge
sub
jnp
mov
mov
or
not
fwait
mov
cmp
adc
inc
adc
xchg
and
pop
stos
mov
sub
sub
pop
jns
add
in
add
repz
pop
mov
jmp
push
jno
jns
imul
inc
xor
adc
sarl
and
test
imul
sbb
movsl
sub
aaa
ds
mov
mov
fiaddl
add
pusha
push
scas
dec
mov
lea
inc
data16
push
outsb
mov
inc
pushw
sub
xor
aas
movsl
pop
add
adc
xor
mov
movsl
sub
inc
fstpt
xchg
xchg
or
pop
arpl
bound
ds
jne
cmp
movsl
repz
insl
sub
out
lret
jecxz
std
jg
inc
adc
dec
popl
les
cmp
shlb
push
push
int3
mov
cmp
jl
out
lods
int3
pop
das
sub
lcall
sbb
popa
add
das
imul
sbb
pop
nop
add
sub
in
inc
inc
cmp
or
inc
ljmp
and
add
js
jge
gs
or
dec
cmp
mov
cmc
adc
and
mov
loop
lret
and
jecxz
fsubs
adc
xlat
xorl
repnz
push
aaa
add
jp
pop
mov
test
pop
or
adc
xchg
daa
xor
mov
push
fmuls
mov
int
lcall
arpl
cltd
repnz
sbb
outsl
sbb
mull
add
cmc
sub
arpl
stc
stos
inc
rcrl
jbe
xorl
sbb
push
inc
dec
pop
add
aaa
dec
sub
out
aad
imul
xchg
push
sub
or
and
iret
or
imul
jns
inc
into
pop
popa
pop
sub
dec
adc
dec
negb
sarb
xchg
pop
inc
call
xchg
adc
fsubrs
sbb
xchg
push
aaa
repnz
and
cld
sbb
cmp
jle
push
bound
data16
pop
add
mov
imulb
scas
adc
jbe
aaa
bound
sub
loop
push
sti
push
int3
pop
stos
push
sbb
push
loopne
and
adc
aaa
out
loopne
jg
lock
xor
imul
push
sub
sub
in
ja
pop
out
jbe
dec
jnp
and
in
pushf
aas
cli
enter
add
push
js
sbb
or
repz
in
enter
enter
xchg
stc
outsb
jne
xchg
iret
xchg
into
push
lock
aas
mov
bound
push
pushw
cwtl
jbe
add
sub
aas
and
add
mov
add
pop
pop
jg
and
cmp
js
adcl
dec
jnp
jbe
jg
outsl
sbb
fimuls
andb
lods
xor
into
insl
adc
lds
sti
repnz
fmul
fiaddl
inc
inc
lcall
pop
into
xlat
out
out
lock
and
xor
add
sub
or
cmpb
adc
or
mov
ret
arpl
mov
dec
xor
jecxz
xchg
add
into
xor
sbb
push
inc
bound
mov
or
cmp
punpckhdq
push
mov
and
pop
out
arpl
sbb
inc
sarl
adc
scas
cli
inc
in
lret
mov
aad
cld
adc
sbb
repnz
jle
dec
andl
sbb
adc
pop
sbb
dec
add
push
out
movsl
and
pop
pop
cmp
mov
scas
xchg
jns
fs
pop
xor
add
aam
aas
ds
loope
and
pop
dec
fists
inc
mov
mov
inc
and
add
fidivs
dec
or
adc
aas
push
inc
data16
lods
mov
push
dec
popa
jo
mov
sub
pop
adc
jl
ss
mov
inc
scas
lock
pop
inc
insl
jge
dec
gs
aad
hlt
ljmp
add
adc
jl
scas
xor
pop
xor
mov
in
stos
mov
insl
xchg
pop
pop
push
repnz
pop
push
leave
cmpb
xchg
ret
push
cmp
sahf
and
jno
imul
push
push
adc
mov
push
lods
loop
arpl
repnz
filds
xchg
and
or
push
push
jl
lret
imul
or
dec
cwtl
adc
dec
aas
and
push
adc
cwtl
and
pushf
or
jge
cld
cmp
imul
lcall
fidivrs
inc
outsb
add
vmread
outsl
adc
popa
int3
shrl
sbb
test
jbe
xor
mov
sti
sub
dec
outsl
gs
aaa
lahf
lock
es
ds
xor
out
in
jnp
pusha
aad
cmpsb
scas
testb
enter
test
mul
and
dec
out
icebp
adc
hlt
and
repnz
in
mov
sbb
out
test
cmpsl
or
jb
add
cmp
imul
mov
test
cld
imul
out
inc
shl
shl
push
sahf
shl
mov
sbb
lods
sub
mov
iret
shlb
push
mov
repnz
gs
xchg
shlb
xchg
mov
cmp
test
hlt
pop
inc
out
and
addr16
dec
inc
xorl
dec
and
insb
ljmp
add
shll
sbb
inc
std
fdivrs
arpl
outsl
push
ficoml
insl
popa
ds
frstor
push
jae
xor
jbe
xchg
stos
sbb
icebp
push
jecxz
dec
add
aas
pushf
xor
movsl
mov
rcrl
pop
inc
add
or
mov
adc
inc
test
xor
lds
clc
or
sub
cmpsl
add
repnz
add
jns
sub
jns
loopne
cmpsb
scas
daa
cmp
es
or
dec
pop
sub
insl
xchg
jno
dec
cmp
adc
in
sub
ds
into
fdiv
test
stos
scas
sbb
pushf
shl
mov
dec
loop
and
movsl
in
push
lock
cmp
mov
ret
arpl
dec
or
cmp
mov
push
xchg
insl
adc
lea
inc
std
jnp
sbb
cltd
mov
clc
mov
lock
jbe
sub
sbb
lds
gs
mov
dec
mov
jns
int
inc
and
out
and
pop
cld
sbb
jmp
jbe
add
mov
and
movsl
lods
cmp
cmp
dec
test
out
add
ds
cmc
xor
mov
dec
inc
imul
jp
not
pop
push
sbb
jbe
mov
bound
ja
lds
insb
and
ljmp
sbb
sbb
outsl
sub
sub
paddusw
inc
fists
xchg
lock
jnp
and
pop
jmp
dec
movsl
adc
jae
jge
sub
sbb
sbb
cltd
push
movsl
lret
nop
dec
pop
imul
dec
dec
jns
shrb
jae
jge
sub
ss
or
cmp
inc
or
sub
sbb
flds
inc
jmp
mov
and
pop
subl
xchg
imul
sbb
imul
pop
dec
outsb
inc
daa
adc
iret
jnp
and
pop
jmp
fwait
test
mov
jnp
xchg
dec
push
inc
jne
inc
sub
imul
lock
and
pop
in
add
fwait
stc
imul
into
jae
jge
sub
mov
cmp
push
push
jae
jge
sub
ss
adc
inc
or
pmullw
inc
sti
adc
and
pop
popa
fwait
popf
pop
push
incl
sbb
sbb
popa
inc
and
adc
xor
add
and
inc
aaa
adc
and
pop
jmp
fwait
mov
test
cmpsl
shl
jo
scas
mov
inc
add
pop
imul
pop
sub
enter
sbb
sbb
outsl
roll
fcmovb
sub
pmaddwd
inc
adc
lock
and
pop
mov
fwait
lea
dec
xchg
mov
divb
scas
add
push
sub
dec
push
call
imul
lock
and
pop
sbb
imul
sub
enter
dec
push
data16
outsl
push
and
add
add
pop
stc
sub
jb
scas
sbb
xchg
adc
inc
fldcw
pop
orl
adcl
xchg
jge
sub
sbb
add
inc
dec
push
inc
imul
lock
xor
fnstenv
jl
add
test
xor
jg
inc
xor
adc
cmp
das
dec
insb
inc
sub
lock
and
pop
cmp
pop
add
fwait
punpckhwd
xor
dec
jae
jge
sub
enter
sbb
sbb
outsl
sbb
sub
movlps
pop
dec
push
inc
adc
dec
lock
adc
xor
out
mov
sahf
js
push
test
push
mov
and
aaa
sub
xor
or
sbb
push
sub
aaa
test
sub
aaa
in
lret
adc
and
cmpsb
sub
or
push
rcr
jle
jmp
js
push
and
scas
and
mov
or
xor
push
pop
js
sub
adc
xor
push
mov
fildll
sub
mov
into
das
int
sub
je
mov
jae
sbbl
dec
adc
sub
sbb
lods
fwait
inc
lret
mov
inc
cmp
shll
jle
jecxz
cmp
dec
or
dec
push
adc
sub
dec
popf
aad
push
push
dec
notl
push
jl
sbb
push
repnz
ret
das
and
pop
addr16
es
rorb
icebp
pop
lahf
xchg
pop
ret
xlat
and
int
sub
popa
inc
add
popl
cmpsl
inc
addb
mov
lahf
cltd
sbbl
daa
and
or
inc
std
test
xor
xor
incl
pop
mov
or
cmpsb
icebp
pop
pop
stc
lods
add
imul
inc
mov
popf
pop
jge
sbb
and
inc
jl
inc
pop
sbb
xor
sbb
jo
and
ds
sub
ficoml
and
jo
mov
mov
into
insb
cltd
aam
xor
sbb
dec
push
and
and
mov
xor
push
and
adc
jle
ljmp
andl
cmp
push
mov
dec
adc
outsl
xor
mov
cli
aaa
pop
dec
add
inc
push
adc
sbb
loopne
jnp
mov
xor
or
xor
push
jge
lcall
lret
dec
sub
test
jp
cmc
lcall
jno
jno
xchg
ret
and
out
mov
iret
mov
inc
stc
nop
daa
pop
clc
lea
das
dec
lcall
or
test
mov
lret
in
popa
inc
mov
sti
adc
jge
sub
xor
in
push
cwtl
sub
fcomps
ja,pn
mov
ret
adc
or
adc
sub
dec
sub
pop
ds
sbb
pxor
push
dec
inc
jbe
xchg
popf
jae
inc
mov
mov
sub
xchg
dec
cmp
pop
fists
jmp
dec
es
inc
pop
ficomps
setb
pop
add
sub
push
fisubrl
mov
into
lcall
lret
dec
shrb
xchg
and
mov
push
push
insl
cmp
sbb
jge
out
push
ja
insb
stc
aas
imul
lea
inc
cs
dec
push
and
adc
push
xor
add
pop
xchg
and
ret
cmpb
insb
popf
mov
ds
sub
jb
mov
mov
jge
cli
inc
pop
push
out
jo
fnstcw
cld
adcl
data16
xor
and
inc
add
lcall
sub
leave
xlat
dec
jl
push
pop
add
daa
mov
clc
cmp
dec
arpl
enter
cmp
lea
bound
xor
sbb
sub
pop
inc
push
cmpsw
xor
cmp
cli
sbb
out
cltd
sub
sub
ss
pop
inc
dec
pop
ss
xor
jnp
xchg
daa
insl
fsubs
dec
movsl
and
push
push
pop
dec
addr16
mov
jle
shrl
daa
aad
and
push
and
cmp
push
adc
ljmp
cmp
outsb
jae
xchg
mov
out
xor
imul
cs
xlat
mov
mov
dec
int
push
out
mov
pop
or
xchg
adc
js
or
fisubrs
ljmp
add
sbb
cmp
test
mov
es
pop
shll
pop
adc
add
lea
loop
pop
cmp
mov
inc
jo
rolb
push
sub
push
das
sti
or
inc
xor
fldln2
cwtl
in
add
insb
ret
adc
inc
stc
xor
or
inc
lret
aas
das
outsw
pushf
ret
sub
cmpsb
cmp
jmp
nop
add
xor
out
je
jno
imul
gs
jp
cmp
dec
push
arpl
stc
ja
push
pop
and
adc
in
cmp
in
nopl
enter
hlt
cmp
inc
cmpsb
in
lret
jmp
push
outsl
fwait
dec
mov
insb
lret
or
xor
outsb
lret
movsb
or
and
mov
add
xchg
add
loopne
hlt
inc
into
lock
add
inc
dec
ds
movsb
cltd
jb
hlt
sub
mov
and
dec
and
xchg
xor
icebp
cmp
jbe
leave
or
fists
ja
xor
std
sbb
scas
push
cmp
jmp
push
xor
jae
jae
lods
repnz
je
add
mov
mov
fsubp
jge
lea
fsubrl
or
and
push
sub
xchg
push
mov
cmp
std
les
ljmp
mov
stc
leave
jns
sbb
rclb
jae
pusha
xorb
xchg
jae
jge
sub
enter
sbb
sbb
das
lahf
andb
dec
fildll
jge
mov
fstps
or
xor
imul
jne
inc
mov
cmp
xchg
lea
inc
adc
mov
sub
imul
inc
lods
addb
outsl
mov
clc
imul
cmp
divb
out
mov
movsb
inc
clc
mov
xchg
push
aad
and
arpl
mov
mov
lcall
cmp
call
pusha
ja
or
nop
push
stos
pop
push
jae
mov
cmc
cmp
sub
imul
sub
shrb
sbb
adc
sub
fdivr
bound
loopne
call
dec
push
xor
jle
mov
jp
aaa
jmp
add
dec
arpl
daa
addr16
movsb
sub
mov
jecxz
sub
clc
scas
push
std
ss
cmp
pop
fldcw
shlb
dec
lret
ja
loopne
jp
push
xchg
pusha
sub
adc
cmp
or
inc
test
lret
shrb
mov
test
fwait
jne
sbb
mov
les
pop
sahf
fcomp
stos
sub
ret
popa
insb
dec
xorl
in
ds
xor
mov
xor
mov
cmpsb
or
loope
cmp
mov
add
add
jecxz
cmp
in
xchg
pop
and
cmp
adc
inc
mov
mov
sub
adc
mov
mov
test
dec
out
pop
dec
mov
sbb
cmp
cmpsl
fsubs
adc
das
push
loop
fmuls
or
jbe
je
loope
mov
fldt
sbb
stos
add
aam
sub
push
jns
stos
jge
cmp
int3
and
sbb
std
out
cmp
fldt
arpl
lcall
inc
pop
in
cs
and
push
loop
inc
or
out
sub
add
inc
mov
adc
stc
sbb
xchg
add
jns
and
mov
sub
scas
or
shll
icebp
arpl
push
ljmp
ret
mov
popf
xlat
int
cmc
mov
stos
bound
pop
fxch
or
sub
adcl
or
ds
out
push
dec
outsb
cmp
inc
cld
jns
jecxz
jg
dec
adc
adc
mov
mov
aad
mov
jo
addr16
stc
not
sub
mov
or
ret
inc
ds
aam
mov
arpl
cmp
int3
push
lods
inc
lahf
pop
add
arpl
inc
mov
aad
jne
in
mov
xchg
sub
fimull
mov
outsl
lret
sarl
dec
popf
mov
arpl
push
int3
dec
stos
xchg
insb
push
jnp
popf
push
hlt
cmp
mov
cmc
pop
int3
sbb
push
mov
fcoml
pusha
fldcw
inc
aad
adc
mov
add
insb
adc
dec
inc
sbb
inc
inc
xor
inc
sub
mov
adc
sbb
push
or
shrb
scas
je
jns
loopne
jl
outsl
cmp
aas
repz
sti
xor
jno
push
imul
daa
mov
mov
mov
lock
jnp
xchg
jbe
cli
sub
xchg
jp
imul
mov
pop
mov
adc
arpl
add
push
aaa
cld
ret
in
jle
pop
adc
rorl
pop
and
add
jge
fucomi
jns
dec
scas
add
cmc
insb
lret
xchg
or
int
dec
sub
in
xchg
push
ljmp
sbb
cs
push
sub
adc
sub
repz
movsb
aas
and
jne
imul
jecxz
push
cmp
push
mulb
adc
mov
cs
jg
outsb
inc
outsl
xor
cld
cmp
jnp
and
push
test
cmp
hlt
sahf
in
jno
xor
jae
dec
adc
and
subl
bound
jns
xchg
dec
fcmovne
pop
ret
pusha
lds
call
ret
jne
lret
mov
dec
in
lea
cmp
jl
sbb
movsl
notb
sarl
mov
les
dec
stos
aad
subb
push
fdivrs
jae
push
dec
cmp
push
imul
xchg
sbb
add
arpl
inc
or
inc
lock
and
pop
shrl
add
fwait
mov
insl
iret
pushf
adc
sbb
lock
fsubl
lret
movsl
jge
or
xchg
and
movhps
cmp
inc
fists
orb
test
addr16
adc
aas
insl
inc
pop
jmp
dec
sub
jmp
inc
out
push
imul
adc
mov
add
gs
jns
faddl
xor
outsl
lds
movsl
sub
or
icebp
push
xchg
push
xor
int
in
call
adc
aas
call
inc
and
mov
sbb
pop
push
sub
out
lods
insb
shrb
add
sbb
bound
iret
je
inc
lret
aas
pop
cmc
xchg
sti
pop
insb
xor
xor
xor
idivl
jge
xor
xchg
push
sub
insb
mov
or
nop
lret
mov
add
inc
push
cmp
push
fistps
mov
lret
fnstcw
cs
aad
stos
mov
mov
sarb
pop
mov
pop
rolb
xor
xchg
lea
and
push
dec
fldcw
outsb
movsl
inc
xchg
inc
lods
leave
adc
outsl
and
das
pop
push
add
aaa
std
xor
repz
sbb
jb
lods
mov
sbb
in
icebp
sbbb
dec
cmpsl
out
scas
or
cld
xor
push
loope
je
inc
call
add
sbb
addr16
and
xor
addr16
repnz
cmp
jne
mov
jmp
rep
lods
int3
das
out
stc
outsl
xor
add
mov
fsubl
sub
pushf
jb
mov
inc
push
lds
adc
xor
mov
adc
sub
frstor
or
adc
mov
mul
jg
pop
sbb
repnz
xchg
jg
popa
mov
xor
jecxz
and
jle
or
mov
cmp
jns
das
mov
xchg
js
aas
imul
or
and
dec
sbb
xchg
add
pop
fstps
shrb
shr
insl
dec
or
sub
shll
jbe
je
dec
jbe
fimull
imul
xor
lcall
jne
push
sbb
lret
dec
inc
cmp
pop
test
int
iret
ds
cli
inc
cltd
jae
and
gs
cmp
mov
test
pop
es
cmp
inc
or
test
jg
jnp
mov
enter
cmc
adc
icebp
pop
dec
sbb
ja
and
push
repz
lods
adc
cmp
sub
imul
fnstcw
popl
lods
mov
jno
ds
in
add
inc
shll
imul
inc
int
popl
movsb
push
mov
arpl
das
pop
push
adc
ucomiss
xchg
mov
fildll
shr
or
arpl
sti
arpl
sub
std
daa
xor
cmp
int3
sahf
jmp
add
xchg
xchg
aaa
ffree
lea
sub
aad
cmp
mov
jae
jnp
add
xor
xor
mov
push
mov
out
push
je
add
sub
int3
jno
or
dec
jo
int3
shrl
stos
or
pop
xor
pop
inc
push
jg
inc
sub
xor
pop
cmp
jo
fwait
jmp
js
sub
pop
rol
push
mov
push
adcl
mov
out
addl
out
mov
xchg
push
or
and
aaa
call
and
adc
or
and
aas
push
mov
xchg
sarb
stos
cmpsl
daa
sub
lcall
mov
adc
aam
pushf
les
lret
adc
lods
add
and
stos
xor
push
sub
loopne
xor
adc
sbb
rcrl
arpl
mov
scas
stos
adc
out
cld
cmp
lock
push
push
and
xor
not
pushf
xor
arpl
dec
out
mov
pop
negl
xchg
add
lea
push
in
flds
pusha
cmp
movsl
inc
sub
imul
dec
push
je
sub
pop
cltd
js
pop
mov
nop
mov
adc
push
jo
les
or
sahf
dec
push
dec
jno
mov
or
in
cmc
clc
jg
push
gs
xor
add
enter
pop
jp
pop
push
dec
ret
jmp
sub
repz
ret
mov
in
adc
sbb
adc
into
dec
outsl
cmc
pop
dec
dec
xchg
js
adc
push
sbb
iret
dec
mov
arpl
lock
or
mov
pop
push
lret
sub
notb
mov
imul
pop
or
sbb
lds
push
xor
lods
mov
mov
xchg
xorl
cwtl
xor
xchg
adc
lret
dec
or
aam
loop
and
out
add
jmp
mov
fadd
pop
imul
test
pop
push
mov
jns
mov
lret
push
sbb
adc
push
testb
or
inc
jg
push
inc
push
add
inc
lcall
push
add
jne
dec
sbb
dec
fstl
inc
cmp
or
out
sbb
ds
sbb
xor
pop
add
add
sbb
fs
mov
push
pop
imul
lock
das
enter
sbb
jns
lods
pop
cld
add
dec
mov
inc
or
dec
imul
inc
mov
sub
sbb
sbb
fimull
mov
inc
dec
ret
inc
lret
add
mov
push
leave
imul
rcrl
std
add
cmc
imul
jae
jge
sub
jle
pop
sbb
sbb
add
sub
or
call
add
add
mov
cmp
lret
inc
ljmp
jno
enter
cmp
xchg
test
xlat
dec
pop
or
hlt
iret
sub
add
pop
adc
dec
jle,pn
push
ds
inc
mov
xor
sub
dec
mov
sarb
adc
add
inc
sub
leave
pushf
xchg
jge
adc
inc
dec
out
or
lock
js
test
gs
or
jb
fistl
push
shlb
pop
mov
xchg
jle
orl
aas
or
xor
adc
in
mov
cmp
inc
add
sbb
sti
jns
mov
dec
sbb
lds
and
pop
and
sahf
add
sbb
int
inc
imul
mov
push
push
pop
xchg
dec
mov
lret
jns
imul
push
jg
imul
rcl
push
or
sbb
add
insb
cmp
push
add
sbb
sbb
sub
jne
insl
jp
add
iret
insb
pop
and
cmp
or
sub
or
pop
push
fisttps
inc
adc
sbb
add
pusha
jne
dec
jl
outsb
insl
or
xor
test
add
adc
sub
mov
dec
aad
mov
movsl
push
adc
xor
push
adc
dec
aaa
out
jo
or
sbb
jb
inc
push
pop
dec
mov
or
push
adc
and
xchg
add
sub
mov
test
or
dec
js,pn
push
jp
mov
pop
or
scas
cmp
icebp
pop
stc
adc
dec
and
dec
cs
and
add
addr16
pop
sub
push
xchg
adc
push
jp
add
imul
fldcw
jb
sbb
movsl
inc
inc
pop
or
sbb
daa
je
scas
push
incl
scas
dec
out
add
jmp
adc
cmp
push
jne
jns
add
add
aam
cs
gs
pop
fmul
dec
push
test
jne,pn
push
imul
sar
push
dec
into
sbb
popa
jne
jle
xor
inc
dec
jns
cmp
pop
adc
inc
mov
icebp
adc
scas
adc
push
cmp
dec
jno
and
gs
sar
add
xchg
or
aad
cltd
adc
dec
dec
cmp
dec
and
jl
push
iret
jne
pop
in
and
into
jo
sbb
cmc
add
add
pop
inc
enter
test
jns
dec
inc
sub
dec
pop
jns
add
imul
push
sbb
mov
andl
jo
push
stos
fst
dec
mov
cmpsb
test
cmp
shrl
inc
and
push
shll
adc
and
sysexit
dec
pop
rcl
in
imul
adc
cmp
pop
icebp
imul
insl
push
shl
mov
imul
pop
push
push
mov
pop
cmp
imul
cmp
inc
leave
pop
add
inc
adc
loop
or
dec
pop
lar
push
push
add
movsl
pop
mov
fidivrl
sbb
stc
repz
sti
pop
push
gs
cmp
roll
int
sbb
inc
gs
xor
pop
out
xchg
and
clc
sub
jge
add
mov
or
pop
mov
sarb
sub
clc
or
int
shrb
test
push
aas
inc
test
push
icebp
xor
push
push
pop
repnz
fwait
repz
fldt
cli
out
inc
dec
ret
pushf
mov
inc
mov
test
pop
cmp
in
dec
add
aaa
test
mov
ja
dec
dec
cmp
loope
or
cmp
push
inc
xchg
adc
lock
jnp
and
pop
icebp
cs
add
fwait
jmp
aaa
shlb
aas
jge
sub
enter
sbb
sbb
outsl
sbb
cmp
push
sbb
aam
mov
mov
addl
imul
cs
rcrb
cmp
dec
sti
test
imul
add
fcompl
xor
int3
mov
cwtl
not
in
add
stc
or
inc
mov
lock
cs
pop
push
push
loope
rcrl
dec
mov
push
fiadds
pop
stos
mov
pop
cli
inc
mov
jb
int3
mov
jbe
dec
mov
outsb
mov
adc
pushf
int3
dec
outsl
dec
pop
xchg
lret
stc
dec
outsl
cmpsb
fcomps
out
sub
mov
sub
movl
ljmp
jecxz
leave
dec
sbb
pop
pop
std
adc
xlat
aam
dec
icebp
mov
pop
in
pop
test
clc
dec
fisttpll
loopne
sbb
repnz
push
jmp
mov
stc
xchg
mov
int3
lds
xchg
int
ficoml
iret
jmp
jmp
loop
push
jg
int
jl
add
cmp
mov
add
out
jno
out
cmp
pushf
lds
adc
sub
jl
fistpl
pop
push
call
fisubs
test
fwait
test
cli
fdivrl
arpl
cmp
push
xchg
xor
mov
sub
add
into
fs
lods
ljmp
mov
sti
cltd
fwait
pop
add
inc
out
lods
mov
or
std
xor
dec
in
pop
int
or
in
sbb
in
out
movsb
sbb
cmp
mov
cmp
int
xchg
bound
sete
out
shl
mov
dec
sbb
jg
xchg
jne
outsl
jp
xor
xor
cmp
cmp
and
fisttpll
cmc
lret
je
sbb
jecxz
mov
push
jecxz
loop
out
stos
test
cmp
or
jp
bound
cmc
lock
fwait
jno
or
sub
mov
ss
push
fistpl
push
popf
fldcw
test
mov
cltd
int3
in
sbb
data16
sarb
ja
data16
push
mov
fnstcw
popl
leave
or
jb
fisttps
fisttpl
ret
imul
stc
dec
or
sbb
dec
cmp
dec
es
outsb
adc
dec
jge
inc
xor
les
mov
push
gs
cltd
aam
mov
mov
rcll
fisubl
xor
pop
sub
adc
mov
test
inc
pop
sahf
sbb
add
fsubrs
pop
push
jmp
adc
div
pop
in
sub
sbb
cmp
add
popf
xor
mov
cmc
ficoms
mov
xchg
pop
dec
pop
dec
adcl
daa
mov
jp
je
pop
sbb
in
pusha
add
and
sbb
out
ds
leave
mulb
cmp
ja
xor
push
sub
or
xor
insb
lods
xchg
adc
je
js
fcmovb
dec
and
add
add
add
add
and
add
cmp
add
add
add
add
add
push
add
addb
add
add
add
mov
add
addb
add
or
add
add
add
add
add
mov
add
add
add
add
add
add
push
add
dec
add
dec
add
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
ja
ja
ja
pop
add
add
pushl
add
or
ja
ja
ja
ja
ja
jo
add
pushl
add
or
pushl
add
or
ja
jo
ja
ja
ja
jo
add
pushl
ud0
pushl
add
or
push
lock
pushl
add
or
ja
ja
cmp
add
pop
jo
add
or
push
sti
divl
xor
add
or
aas
mov
add
or
ja
ja
ja
mov
add
or
aas
mov
add
push
sti
testl
ja
ja
ja
ja
ja
mov
add
or
push
add
add
add
decl
add
or
ja
ja
ja
ja
add
int3
inc
or
push
or
dec
rorb
decl
rorb
ja
ja
ja
ja
ja
dec
iret
int3
inc
or
pushl
rorb
pushl
lret
rorb
ja
ja
ja
ja
ja
jo
int3
lock
pushl
dec
rorb
pushl
add
or
pushl
add
lock
lock
lock
lock
lock
lock
lock
lock
vpmacssdqh
mov
add
add
add
aas
rolb
pop
addb
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
pop
addb
add
add
add
add
add
add
add
add
add
add
add
add
or
addb
xadd
add
in
dec
jg
add
add
add
and
add
add
lock
add
or
mov
sldt
add
add
rorb
and
ltr
rorb
sub
rorb
cmp
verw
rorb
inc
rorl
lock
push
rorl
clc
rorb
pop
rorl
add
sldt
add
add
jb
sldt
rorl
movsb
rorl
mov
sldt
add
add
rorl
add
add
iret
rorl
add
add
ffree
sldt
add
add
rorl
add
add
sti
rorl
add
add
or
sldt
add
add
add
addb
add
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
jb
fs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
gs
fs
outsl
outsb
outsb
arpl
outsb
xor
add
add
add
pusha
idivb
hlt
push
adc
icebp
setbe
xchg
add
inc
push
int3
push
or
add
push
mov
arpl
fiaddl
test
lods
lcall
sub
insl
add
movsb
sbb
jno
js
add
mov
xor
hlt
pop
or
sbb
inc
out
and
cmove
add
add
bound
xchg
insb
add
xor
cmp
fsubl
in
adc
adc
adc
mov
shlb
add
icebp
and
sub
lahf
dec
sbb
add
les
dec
mov
or
mov
jnp
mov
mov
or
mov
push
cmpsl
shrl
or
pop
test
pushf
out
push
mov
and
cmpsb
adc
sub
push
ljmpw
mov
mov
pop
bnd
lcall
xchg
inc
clts
xchg
xchg
xor
or
push
daa
xor
xlat
mov
push
lret
or
int
add
cli
cmp
push
stos
xchg
andb
lods
fistps
aas
sbb
sub
lea
pop
pop
pop
ds
andl
js
rorl
pop
mov
push
movsl
jbe
add
int
ja
std
testb
add
cltd
aaa
jl
jg
add
push
nop
jge
pushf
adc
dec
pop
push
push
pop
dec
xchg
xor
sub
inc
rcrb
mov
and
xchg
mov
cwtl
or
test
repnz
add
adc
jp
test
insl
inc
les
test
loopne
outsl
push
mov
imul
inc
pop
adc
nop
xor
test
add
push
push
fbstp
ja
ret
xchg
rolb
aas
jmp
or
adc
in
and
jl
push
dec
mov
push
or
add
mov
mov
pushf
leave
mov
sub
cwtl
and
and
nop
add
aaa
into
popf
pop
xchg
fdivr
mov
jl
mov
or
add
cmpb
or
cmpsb
push
pop
imul
jo
ret
pop
jge
repz
jmp
movsb
dec
and
push
hlt
pop
or
dec
xchg
lods
cmp
les
dec
and
and
fdivs
pop
jne
leave
sbb
adc
fsts
call
adc
iret
inc
pop
push
mov
xchg
and
fwait
add
mov
pushl
add
rclb
mov
add
sub
loop
add
std
cmpsl
dec
pop
test
fiadds
xor
mov
jle
je
or
or
and
jns
faddl
leave
fwait
dec
sub
add
divl
repz
pop
js
cmp
addl
adc
clc
add
cltd
push
sahf
push
and
push
ret
push
cld
xchg
pop
mov
mov
dec
add
into
mov
mov
addr16
inc
or
sub
xor
or
push
or
dec
es
lret
or
or
inc
and
cmc
xor
dec
arpl
or
or
ja,pt
or
dec
mov
push
inc
lds
movsb
or
into
test
jne
int3
dec
push
mov
loop
mov
add
movsl
fdivrl
pop
xchg
les
mov
mov
icebp
dec
dec
or
sbb
imul
cltd
fstpl
cmp
cmp
dec
add
xchg
or
cltd
mov
jnp
mov
fwait
inc
sub
lea
fimull
adc
dec
sub
or
mov
dec
stos
cli
aad
xor
cld
monitor
ja
lret
popa
sbb
movsl
lcall
pop
leave
lahf
xor
out
fiaddl
jmp
aas
add
es
das
inc
outsl
adc
rcll
mov
and
push
xor
in
clc
sbb
sub
or
stc
je
pop
inc
sub
addr16
cwtl
or
arpl
xchg
mov
fwait
mov
mov
xchg
inc
or
movsb
iret
or
xchg
dec
int3
and
mov
or
rclb
xor
cmc
into
adc
iret
adc
aad
pop
and
and
xchg
ret
sbb
fisttps
shrb
adc
adc
xor
lret
or
adc
adc
sub
adc
push
cmpsb
inc
lret
pop
inc
test
inc
mov
subl
mov
add
nop
xchg
push
rorl
pop
jge
sahf
pusha
pushf
pusha
cmp
jnp
addr16
xchg
adc
sahf
sub
andb
jg
aad
cmpsl
or
es
add
adc
mov
icebp
je
sahf
add
mov
adc
js
mov
orb
je
add
les
arpl
stos
push
cwtl
cs
test
stc
adc
dec
add
xor
sbb
inc
jg
sub
fmul
into
adc
cmpsl
arpl
and
push
xor
jbe
xchg
repz
and
aaa
add
cmpsl
mov
and
adc
shrb
inc
das
in
xor
xchg
add
add
add
add
push
add
push
add
pop
push
imul
pop
js
pusha
or
popa
add
andb
cmp
lds
or
adc
mov
xor
mov
add
dec
rorl
ja
jp
jno
sbbb
cltd
mov
or
xchg
add
xchg
add
xchg
add
cwtl
add
cltd
push
icebp
or
ljmp
pushf
and
sahf
and
and
mov
mov
mov
cmpb
pop
mov
daa
ret
ret
subb
xchg
lret
cmp
gs
or
rorl
mov
or
or
or
or
stc
add
adc
sbb
aas
and
inc
add
or
adc
adc
cmp
into
cmp
cmp
cmp
xlat
push
add
add
aam
fwait
mov
add
add
inc
lock
or
popf
xlat
cmp
ds
mov
xchg
jmp
lock
jno
subb
cmp
xor
add
nop
mov
ljmp
sub
sub
sbb
jno
sbb
or
sbb
inc
pop
xchg
xchg
or
adc
and
xorl
xchg
ret
outsb
inc
push
jno
nop
mov
push
push
adc
adc
adc
pop
adc
pop
adc
pusha
adc
popa
adc
bound
gs
add
nop
popa
jp
jns
adc
adc
mov
adc
sbb
out
xchg
adc
cwtl
adc
cltd
xor
or
lcall
adc
adc
adc
adc
das
inc
ret
add
add
add
add
xchg
or
and
addb
dec
sub
pusha
or
inc
das
movsb
mov
xor
xor
and
cmpb
add
orl
add
or
and
sub
into
inc
add
dec
add
add
add
bound
or
incl
or
adc
add
jns
movsb
add
mov
add
mov
sbb
fimuls
sahf
dec
xchg
fisubs
mov
cmp
push
es
or
mov
roll
or
pop
adc
cmp
imul
xorl
leave
addl
roll
lcall
inc
and
jp
xor
or
mov
or
mov
sub
pop
es
data16
adc
sbb
rorl
jp
or
push
xor
mov
or
and
shrl
insl
add
outsl
add
add
add
lods
add
lret
and
into
add
fwait
pop
cmpsl
clc
add
xchg
icebp
imul
push
lds
int3
cwtl
test
ss
inc
aad
push
mov
cmpsb
lahf
mov
adc
cmp
lret
mov
aas
and
dec
add
nop
sbb
or
or
xchg
std
sub
or
jns
roll
clc
or
arpl
int3
inc
fs
jae
xchg
in
stos
add
jne
dec
xchg
pop
pop
xor
inc
adc
add
jecxz
push
sub
cmp
xor
nop
ds
push
xor
cmpb
lock
cmpb
cmpb
xor
cmp
andb
movsb
bound
mov
push
and
jns
inc
dec
je
push
mov
loop
and
xchg
inc
ret
notl
adc
and
pop
loop
adc
and
dec
xchg
xchg
add
and
outsb
adc
into
add
iret
movsl
jmp
add
add
add
sub
out
pushf
add
add
addb
rcrl
inc
add
lods
cld
sub
sbb
push
sti
aad
ljmp
add
mov
adc
cs
xchg
add
mov
insb
push
add
xchg
mov
jbe
mov
xor
or
lods
add
fildll
arpl
xor
sub
push
add
shl
mov
sub
or
sbb
cmp
sti
adc
insb
push
mov
jb
lcall
daa
sub
cltd
decl
into
xor
jle
sub
jmp
in
xor
cmp
push
add
xchg
pop
push
or
mov
sbb
dec
mov
sub
dec
push
push
call
xchg
enter
out
cmpsl
mov
aad
or
out
mov
mov
adc
push
jb
jbe
jp
jns
push
shlb
add
repz
add
insb
data16
stos
popa
or
cli
or
mov
mov
mov
les
jnp
or
xchg
out
xchg
push
add
jl
call
sub
xor
add
sbb
dec
pushf
pop
movl
movsb
jo
out
inc
mov
xchg
jb
mov
pop
cmp
push
int3
or
es
lret
imul
data16
or
xchg
or
cmp
and
and
sub
inc
sub
sahf
adc
and
lret
sub
push
xor
adc
jg
xchg
push
inc
cmp
cmp
inc
cmp
mov
and
mov
add
dec
add
dec
add
mov
or
add
push
add
inc
push
add
push
pop
push
sbb
icebp
sbb
pusha
add
adc
and
push
jne
jmp
aaa
addb
mov
fisubs
or
jmp
add
xchg
roll
or
inc
ret
push
aad
xchg
push
add
maskmovq
testl
pop
add
add
ret
ja
jbe
adc
adc
cmp
xor
jo
inc
int
add
or
pop
push
fadd
mov
add
mov
sarb
xor
leave
add
or
add
cltd
or
adc
scas
fs
cmpsb
add
lahf
xchg
std
jo
add
mov
movsb
mov
loopne
ljmp
push
mov
and
sti
ret
add
and
rolb
mov
push
dec
adc
fwait
ja
lahf
pop
xchg
pop
data16
nop
mov
xchg
xor
aam
and
sahf
inc
stos
mov
dec
testl
inc
mov
push
add
cltd
nop
jecxz
sbb
dec
adc
mov
add
rorl
bound
sbb
icebp
mov
cmpsl
and
dec
addl
or
add
rclb
dec
cwtl
out
mov
or
mov
add
add
aas
pop
dec
adc
roll
add
mov
addb
pop
adc
or
scas
xor
aaa
dec
mov
and
adc
mov
sahf
xor
jg
sbb
and
push
test
repz
xchg
outsl
push
xchg
jnp
ret
rolb
push
adc
and
fsubrs
xchg
dec
mov
data16
adc
aam
and
out
fs
icebp
mov
xorl
inc
push
xor
out
testl
jbe
mov
jmp
test
jp
pop
lcall
neg
xchg
je
movb
add
in
add
or
or
bound
add
mov
sbb
inc
fwait
jns
or
and
mov
adc
int
add
and
in
bound
loop
xchg
cltd
dec
pop
mov
xchg
inc
adc
out
addr16
jl
inc
ds
imul
incl
add
xor
pop
push
add
ret
cmp
xor
popf
xor
js
sbb
dec
and
push
xchg
fldcw
aam
andb
add
scas
adc
pusha
mov
pusha
arpl
insb
mov
shl
or
enter
lds
pop
adc
push
das
add
dec
cld
addb
dec
pop
leave
jns
pop
sub
ss
sahf
push
or
roll
xor
add
lock
clc
push
lahf
xchg
and
inc
push
inc
scas
ror
sub
or
test
or
and
jo
adc
and
or
adc
into
pop
inc
test
add
nop
or
mov
addl
push
jp
ficomps
add
or
test
sbb
xchg
or
inc
pop
mov
loop
stos
mov
inc
call
call
mov
mov
mov
push
hlt
shrl
jg
xor
xor
cwtl
and
cmpsb
fiadds
push
sbb
mov
dec
test
add
rdtsc
je
push
in
sub
and
push
mov
add
jnp
mov
mov
push
xor
sub
and
push
xor
add
clc
push
pop
dec
loop
push
fstl
cmp
sub
popf
mov
mov
rcrb
in
push
cmp
push
add
mov
pushf
fcompl
xor
xchg
shll
outsb
add
cmp
out
imul
arpl
in
push
sub
or
add
mov
testl
adc
add
xor
sbb
fnstcw
ljmp
pop
cmp
dec
and
or
leave
das
fmull
add
jmp
mov
jns
aaa
dec
adc
lret
dec
and
dec
and
inc
push
pop
or
adc
add
movsb
in
xchg
cmpsl
xchg
add
stos
or
jge
filds
mov
repz
add
push
sbb
pushf
pop
ret
cwtl
add
xchg
or
or
dec
pop
shll
test
dec
pop
add
or
xchg
add
xchg
add
push
sbb
or
dec
adc
dec
adc
push
cmp
pop
inc
arpl
xor
or
mov
xor
jl
inc
xchg
mov
xor
insl
dec
or
fs
jnp
mov
clc
int3
rcr
pop
add
mov
push
je
sbb
xchg
jge
and
jp
mov
push
xorl
fs
jno
and
xlat
insl
add
mov
xor
es
xchg
mov
push
and
add
jo
push
add
call
fistpl
inc
push
pushf
and
and
int3
ja
push
add
sbb
lods
lret
call
movsb
and
mov
dec
pop
lock
cli
out
insb
addr16
xchg
inc
movsl
dec
mov
shl
loope
cwtl
out
dec
add
push
xchg
and
rorb
sbb
aaa
xchg
sbb
adc
cmp
jg
inc
push
add
xlat
mov
les
aas
jns
xchg
add
rol
mov
or
add
shll
loope
ja
scas
mov
or
jg
and
stos
inc
or
add
xor
jbe
or
and
inc
mov
mov
scas
sbb
xchg
dec
mov
sbb
or
add
aas
divl
add
xor
clc
xchg
sbb
and
lea
inc
add
or
lea
jle,pn
sbb
mov
pop
add
in
sbb
add
jecxz
jo
fldenv
mov
push
in
or
es
xor
add
jle
pop
mov
sbb
into
inc
adc
dec
jl
mov
aam
and
or
adc
sbb
xor
or
add
add
xchg
adc
cwtl
mov
ficompl
jbe
pop
lcall
cmp
and
mov
lret
inc
lahf
xor
or
inc
andb
mov
shrl
adc
fadd
xchg
inc
add
xor
adc
dec
jns
lcall
repz
sbb
movsb
in
mov
mov
push
test
pop
adc
fs
inc
add
xchg
add
push
dec
dec
in
jge
loop
nop
or
xor
fsubs
push
sbb
adc
push
sub
adc
and
icebp
xor
aas
xor
cmp
mov
xchg
xchg
adc
and
or
inc
adc
add
insb
add
jg
fs
mov
inc
lods
or
cltd
sbb
sub
add
push
jno
addl
xor
or
les
xor
fstl
loope
cmp
jle
or
out
push
mov
add
push
inc
stos
pusha
pop
xchg
gs
mov
mov
dec
and
sbb
hlt
pop
in
pop
add
mov
add
gs
cmpsl
or
cmp
mov
sahf
lock
and
jmp
cli
sbb
lock
aas
inc
ret
and
adc
xchg
adc
loop
ret
jge
xchg
ret
sbbb
in
pushf
pop
add
inc
jle
cmc
jbe
xor
cmp
scas
mov
notb
push
sub
sarb
movsb
or
xorb
add
test
inc
mov
and
repnz
data16
add
mov
sub
enter
add
lods
mov
or
clc
adc
add
pop
inc
and
jne
mov
js
xchg
sub
or
add
repnz
les
and
mov
mov
mov
xor
jne
outsl
stos
ret
sarb
lret
mov
dec
sbb
and
fisttpl
add
decb
dec
and
dec
hlt
jmp
ficomps
cmp
pop
add
dec
inc
lret
into
mov
aaa
loop
or
push
or
inc
xor
inc
or
add
adc
les
adc
lret
xor
and
mov
inc
enter
or
inc
lcall
jae
addr16
scas
testb
mov
push
sbb
add
fwait
push
fsubrp
mov
dec
and
mov
adc
and
and
pop
fwait
cmp
pop
out
ja
faddl
mov
iret
ss
dec
cmp
pop
cmp
dec
mov
in
pop
movq
mov
xchg
push
add
test
into
or
repz
mov
xchg
xor
mov
jo
pop
adc
stos
ds
and
arpl
adc
inc
cmp
adc
mov
aas
mov
or
sar
arpl
push
push
pop
inc
popl
xchg
add
cmp
mov
adc
jecxz
fwait
xor
scas
mov
loopne
aaa
test
adc
test
mov
mov
add
lds
adc
int
add
mov
mov
andl
scas
addl
inc
or
shlb
popa
mov
add
jecxz
push
inc
clc
punpckldq
lcall
fadds
add
pop
sbb
faddp
loop
add
ret
dec
call
xor
jnp
mov
add
sub
dec
call
or
mov
les
add
xor
sbb
ror
cmp
movsb
movl
movswl
mov
cmp
jmp
shl
gs
add
fisttpll
push
call
mov
aas
add
mov
inc
xor
inc
add
idiv
cmp
cwtl
sbbl
sti
fsts
dec
movzwl
mov
daa
fistpll
test
loopne
lret
jmp
mov
cmp
sbb
jle
lret
jno
sahf
hlt
jecxz
adc
jl
and
cmpsl
sbb
adc
dec
mov
mov
mov
into
pop
push
cmp
imul
jmp
icebp
inc
pop
jge
stos
cmp
mov
test
call
or
jae
push
fdivs
cwtl
xor
jne
adc
scas
pusha
cmp
sbb
data16
sub
inc
mov
iret
and
sbb
sbb
shl
and
stc
add
ret
inc
inc
repnz
inc
pop
jp
addb
test
mov
shl
jle
mov
dec
sbb
xor
loopne
and
add
dec
inc
clc
add
sbb
lret
add
in
mov
add
not
add
mov
cwtl
idivb
int
fwait
pop
push
pop
pop
inc
inc
cmp
stos
or
xor
dec
mov
dec
movsl
pop
mov
dec
jle
and
mov
seta
sbb
or
dec
mov
cmpsb
rorb
dec
dec
stos
incb
cwtl
inc
test
mov
sub
xor
scas
data16
jl
add
repz
xchg
mov
add
roll
or
xchg
inc
icebp
push
adc
bswap
xor
insb
pop
outsl
add
into
call
aad
insl
not
inc
or
pop
adc
mov
fcomps
pop
sub
lret
mov
test
lcall
out
call
fnsave
andb
enter
insl
xchg
mov
inc
jecxz
jno
int
or
and
cmpsb
into
jns
and
pop
cs
mov
inc
and
jo
aaa
pop
and
insl
pop
bound
mov
call
mov
stos
loop
neg
sub
mov
push
xchg
mov
icebp
inc
xor
sub
sub
shrl
test
pop
dec
push
or
or
push
pop
mulps
leave
ror
iret
outsl
bound
inc
cwtl
mov
push
dec
sbb
sub
and
cltd
and
mov
repz
add
adc
repnz
out
xor
cmp
xor
add
neg
setp
inc
dec
add
lret
xchg
call
into
test
ror
sbb
loopne
imul
arpl
add
aaa
insb
adc
add
or
mov
daa
stc
stos
or
call
pop
test
pop
mov
cmp
in
aad
scas
mov
fucomip
inc
in
push
and
and
not
mov
mov
stos
inc
jmp
sahf
add
push
pop
pop
sub
ljmp
push
hlt
dec
dec
add
cmp
mov
aas
into
fildl
xchg
pop
pop
cwtl
ljmp
add
xlat
inc
inc
jnp
jae
enter
xor
je
jno
jnp
dec
and
call
cmp
lods
gs
cmp
pop
loop
push
ret
push
pop
sub
and
jecxz
sub
dec
xor
vpshuflw
mov
aam
sub
into
adc
xor
bound
cwtl
mov
mov
fwait
lcall
push
out
lret
rorl
loopne
cmp
and
mov
and
add
mov
cs
rorb
xor
push
call
xchg
movsl
adc
in
clc
notl
or
loope
cmp
dec
and
rcrb
mov
fwait
jl
pinsrw
jmp
mov
insl
daa
cmp
icebp
push
inc
push
push
pop
adc
decb
push
push
lock
or
and
add
xor
push
in
out
mov
push
rol
pushf
and
add
pop
xchg
mov
mov
jno
and
add
mov
inc
test
test
mov
adc
or
ds
test
fbld
lods
mov
pop
inc
adcl
xchg
mov
xor
or
push
ds
fildll
jne
ret
pop
les
adc
fldcw
mov
notb
testl
int3
dec
mov
pop
push
dec
stos
dec
add
leave
jge
negb
push
pop
pop
mov
add
pop
inc
cmp
push
lret
lret
xchg
xchg
xor
lea
cmc
cmp
push
adc
mov
xchg
es
enter
sbb
push
int
ljmp
mov
add
add
int
xor
add
mov
stos
add
adc
sub
pop
cmpsl
out
add
jecxz
clc
xor
out
sub
lret
push
shlb
addr16
push
cmp
adc
sub
push
es
jmp
int3
imul
mov
lock
inc
jmp
mov
ficoml
cwtl
out
cwtl
add
or
int
rcll
and
cmpsl
bt
sbb
add
cmc
cltd
ret
pmuludq
sub
lcall
push
pop
pop
mov
jmp
in
pop
shll
cmp
inc
jg
jecxz
sbb
dec
sbb
arpl
jne
mov
cmp
fistl
loop
sub
loopne
subb
jno
popa
mov
inc
test
and
fisubrl
shl
xchg
repnz
mov
mov
push
sbb
inc
loop
test
imul
test
sbb
add
pop
dec
xor
xchg
repz
jmp
add
fsubs
ret
pop
outsl
loope
pavgw
nop
out
adc
int3
xor
xor
push
sub
sahf
outsb
movsb
js
cmc
repz
subl
hlt
sahf
dec
ret
fimuls
push
cmpsl
fidivl
lret
inc
inc
dec
pusha
sbb
ss
cmpsl
xchg
or
jns
mov
adc
insl
ficoms
mov
cld
or
cs
mov
in
cmpsb
sub
and
shlb
mov
out
popa
jl
lcall
lock
rolb
leave
mov
cmc
push
adc
loopne
cmp
sub
lds
stos
fs
push
addl
cmp
jno
xchg
sahf
push
pop
stc
xor
dec
and
sub
adc
fs
out
in
enter
cmp
sub
ret
mov
stos
push
xchg
mov
jnp
inc
mov
mov
cli
cwtl
mov
cmp
adc
int3
mov
dec
cmp
cmpsl
popf
push
sarb
xor
and
and
mov
sub
xor
sarb
push
xor
jne
test
and
add
out
lds
rcrb
fldl
or
push
movsl
sbb
test
addl
xor
or
faddl
int3
cmpsb
not
setge
aaa
adcl
mov
adc
hlt
aaa
inc
test
xchg
inc
add
sub
xor
aaa
sbb
sbb
roll
jo
pusha
int
in
and
pop
mov
inc
fmuls
dec
xor
ret
sbb
push
pop
jno
push
addr16
and
or
les
or
int
inc
sbb
roll
push
xchg
shlb
cmp
subb
push
cmc
ss
cltd
pop
xchg
push
push
add
imul
xlat
and
fwait
mov
sub
sbb
add
test
out
inc
fadd
out
sub
mov
pusha
mov
add
adc
leave
sub
add
ret
lcall
enter
in
sub
stos
mov
das
jg
pop
clc
jge
scas
inc
ljmp
adc
cmp
sbb
iret
setbe
enter
cmp
lods
xchg
add
outsl
andl
notb
movsl
sub
daa
and
mov
add
loopne
mov
rcll
scas
lahf
roll
mov
or
xlat
daa
fs
ret
pushaw
and
pop
pop
sbb
notb
xlat
scas
jae
or
cmp
fcompl
ds
mov
bound
sub
add
or
and
sbb
lret
push
dec
mov
jp
jecxz
or
shrl
neg
inc
je
hlt
movntq
out
pop
dec
inc
add
icebp
ret
fwait
adc
xor
outsl
sub
adc
fldt
push
addl
pop
dec
mov
push
aad
into
add
jnp
mov
push
sub
cmp
xor
test
cltd
aam
fmulp
movsl
addb
lret
fcmovbe
xor
sti
pop
adc
xor
mov
pop
pop
lock
mov
cli
mov
cs
push
mov
and
stos
jle
add
adc
fs
ret
testl
pop
adc
inc
cmpsb
rolb
ret
fcoml
jo
sub
in
movl
pop
int
push
push
adc
add
nop
xor
ja
push
mov
cltd
or
shrl
add
xor
rorl
push
mov
mov
adcb
xchg
sbb
jp
wbinvd
enter
or
dec
pop
loop
cltd
movb
jmp
mov
push
or
es
mov
inc
hlt
add
mov
and
cmpb
mov
sub
jl
les
dec
add
mov
xor
mov
ja
dec
getsec
sti
into
pop
mov
jp
inc
popf
ds
add
je
out
dec
adc
xchg
dec
fadd
add
jg
mull
aas
insl
push
fstl
jecxz
stc
xlat
out
cmpsl
mov
repz
add
fisttpl
clc
sub
jns
cmc
adc
in
mov
sub
lret
lds
out
mov
not
push
icebp
fcompl
add
sub
xor
mov
repz
mov
dec
out
inc
cmp
mov
testl
xor
sub
dec
lds
or
mov
out
dec
leave
xor
mov
mov
inc
push
xor
pusha
stc
data16
dec
fcoms
cmc
mov
mov
sbb
mov
pop
adc
popa
sub
push
orl
adc
pop
fsts
add
push
out
jo
sub
dec
jae
jg
std
cwtl
addr16
icebp
jbe
jge
add
push
pop
pop
mov
testb
dec
fimull
scas
stc
cltd
into
xchg
fldl
iret
fwait
aas
mov
arpl
sub
push
add
sti
fnsave
mov
push
push
ljmp
lods
adc
mov
xchg
test
test
and
mov
jne
push
jle
dec
sub
enter
divl
mov
aas
not
sbb
sub
movsb
pop
mov
and
fistps
add
mov
or
and
dec
les
into
lods
cmpl
add
jle
repnz
xchg
mov
and
popf
or
mov
test
jbe
sub
inc
inc
dec
filds
dec
sub
push
mov
sbb
test
pusha
sbb
idivl
cli
pop
outsb
sub
pop
xor
dec
clc
adc
cmp
xchg
shlb
xor
repz
fsts
aam
and
sbb
xchg
in
jb
pop
lret
in
dec
inc
sbb
addl
push
mov
jp
fwait
inc
mov
gs
mov
test
xor
clc
cmp
repnz
mov
insb
add
xchg
sub
sub
push
xor
pop
enter
les
adcb
jnp
and
push
out
aad
xor
add
cmpsl
adc
movsl
shlb
push
xchg
pop
add
orl
and
std
cmpsb
cmpsb
push
out
addl
sbb
dec
dec
fld
inc
pushf
faddl
add
aaa
lds
push
push
pushf
leave
fiadds
ffree
mov
xadd
xchg
test
jmp
fmul
and
sbb
cld
push
inc
imul
inc
xor
dec
pop
addr16
jl
and
ror
sub
add
movb
add
std
lds
add
mov
jle
add
das
shll
dec
inc
jae
mov
hlt
jecxz
add
mov
in
gs
sub
andb
sbb
stos
fiadds
mov
pop
adc
adc
inc
pop
loopne
mov
push
pop
pop
add
dec
dec
mov
sbb
ret
xorb
jp
mov
sbb
cmp
and
mov
mov
ds
push
pop
pop
xlat
or
outsb
xchg
lret
mov
subl
mov
xor
dec
cwtl
or
add
xchg
sub
imul
add
push
rorl
setae
cwtl
jb
add
mov
shlb
cmpsb
lahf
or
inc
push
cmp
shl
lea
dec
cmpsb
rclb
cs
imul
ret
cmp
xchg
fisttpll
push
or
dec
jne
push
mov
mov
add
adc
mov
mov
xor
dec
iret
fwait
xor
or
mov
and
push
ret
dec
arpl
out
sbb
fldl
bound
add
push
sti
add
xor
xor
pavgw
stos
xchg
or
mov
sbbl
stos
mov
sub
and
sbb
push
jge
add
mov
mov
das
jecxz
mov
rolb
push
pop
pop
ret
pushf
lds
aam
in
imul
inc
sbb
lahf
das
xchg
and
or
nop
loope
outsl
xchg
je
out
adc
xchg
push
call
aam
mov
xchg
lods
mov
fmulp
add
xor
push
mov
fwait
outsb
cmpl
pushf
lcall
nop
test
jmp
or
hlt
push
repnz
int
sub
xor
jmp
dec
aas
addb
sub
lcall
sbb
mov
add
jno
stos
pop
orb
leave
jo
add
lret
push
push
xlat
out
addr16
and
bound
or
jo
pushf
scas
or
sub
pop
lea
mov
jecxz
faddl
out
and
test
pop
pop
add
add
or
push
mov
shrl
xlat
sbb
test
nop
das
adc
dec
xor
ret
cmpsb
stos
adc
xchg
mov
jb
mov
mov
inc
mov
sub
push
adc
sahf
das
test
or
jno
or
int3
jo
arpl
enter
push
je
dec
push
or
mov
and
btc
xor
out
and
dec
frstor
mov
nop
scas
in
adc
cwtl
ds
cmp
addb
xor
dec
nop
add
dec
dec
mov
in
add
inc
es
adc
adc
pop
dec
int3
lds
divb
into
cwtl
mov
adc
call
fisubrl
mov
xlat
dec
pop
dec
aas
add
inc
and
jp
jg
movsb
dec
shrl
imul
aas
fs
push
xor
inc
xor
pop
ja
mov
cmpb
inc
adc
ret
sub
jl
int3
mov
and
sub
lcall
inc
jmp
lret
mov
push
sbb
add
test
or
cmp
ljmp
je
mov
or
int3
les
cmp
or
cmp
comiss
adc
add
adc
or
shlb
xchg
push
cmpsl
add
pop
popa
ss
xchg
cltd
mov
imul
push
jp
inc
inc
leave
fstpl
in
cmpsb
stos
add
pusha
fcoml
imul
mov
sbb
mov
mov
lods
sub
pusha
jmp
int
aad
push
insl
and
lret
aas
enter
mov
xchg
cmc
xor
and
adc
out
cmp
scas
lcall
or
cld
mov
cwtl
mov
dec
popf
cltd
mov
add
jp
mov
fstpt
xor
sti
and
cmc
mov
ret
ficoms
push
enter
dec
aas
fistpl
cmp
adc
pop
pop
bsf
and
sbb
push
addr16
sahf
lea
pushl
std
test
shr
mov
cmpsb
jl
pusha
pop
push
sbb
or
scas
fstpt
cmp
inc
sahf
es
mov
inc
daa
mov
out
sbb
mov
sub
dec
or
sub
aad
sbb
dec
sub
mov
out
je
out
inc
add
cwtl
cmp
inc
and
xchg
test
mov
cmp
mov
loopne
pop
mov
les
and
iret
int3
pop
jge
fistl
neg
call
cmpsb
rcrb
mov
pop
inc
add
aam
sar
lret
push
pop
xor
cld
jl
pop
pop
icebp
mov
out
sub
push
dec
fwait
add
mov
add
cmp
push
das
movsb
lods
incb
gs
sti
mov
lahf
adcl
mov
xor
lds
fwait
or
or
and
push
inc
ja
and
lret
add
stc
xor
ret
add
dec
mov
push
mov
inc
mov
xor
push
xchg
mov
inc
clc
lock
pop
add
or
pop
or
pop
mov
cli
jns
xchg
mov
inc
jge
gs
cmpsl
or
xchg
ljmp
xchg
fcomp
xchg
mov
addl
mov
mov
push
bnd
dec
ljmp
mov
add
imul
xchg
test
push
adc
das
aas
in
or
pushf
push
mov
sub
add
xor
add
imul
pop
or
imul
push
jge
add
inc
test
rolb
popa
pop
jnp,pt
lods
cld
add
clc
dec
mov
and
clc
ret
movsb
sub
inc
adc
fcomps
or
or
hlt
inc
sbb
cmp
add
dec
movsb
pop
int3
fs
lock
sub
lods
sub
les
lods
inc
filds
inc
sbb
jp
push
leave
adc
lock
cs
arpl
dec
or
mov
movsb
pop
push
das
inc
adc
add
inc
rol
pop
mov
loope
mov
enter
lds
pop
push
loop
adc
decb
push
fiaddl
shrb
jp
xlat
adc
or
imul
pop
or
and
pop
push
adc
and
xchg
inc
mov
dec
roll
fs
adc
mov
xchg
rcll
clc
cmpsl
jge
sbb
leave
push
testb
inc
sti
or
adc
adc
push
testb
xor
lds
pop
sub
call
pop
sub
sub
dec
push
cmpl
jmp
xchg
add
push
adc
adc
int3
pop
test
ret
lods
mull
lret
out
sub
orb
sbb
or
cmp
sbb
add
add
xchg
add
sbb
inc
sbb
aaa
adc
scas
sbb
push
add
das
push
nop
daa
mov
lret
adc
aad
outsb
or
inc
nop
xchg
ds
psubb
and
dec
xchg
dec
lret
test
jmp
imul
adcb
mov
das
movaps
mov
test
sti
sbb
les
pop
xor
cmovle
mov
and
inc
aad
push
push
add
les
data16
xchg
adcb
je
pusha
js
lods
push
lret
cmp
out
cmp
jns
sub
xchg
adc
nop
adc
push
adcb
mov
aas
xor
int3
fwait
inc
xchg
inc
cwtl
mov
xor
pop
and
push
notb
dec
mov
bound
mov
popa
outsl
aaa
adc
mov
inc
stos
add
fdivl
lods
add
sbb
mov
xchg
cwtl
pop
add
pop
mov
mov
cmp
ja
xchg
xor
adc
outsl
and
cmc
inc
sub
fstps
xchg
add
jmp
lea
mov
xor
jecxz
xlat
xchg
test
jecxz
or
orb
lcall
nop
xabort
mov
sub
cmp
cmp
cwtl
adc
jge
mov
bound
xor
lock
fisttpll
or
xchg
cmp
data16
or
cmp
add
fisubrl
add
xlat
addr16
bound
jne
xor
cwtl
daa
add
call
imul
xor
add
loope
add
dec
add
insb
mov
pop
xchg
xor
ja
sub
push
out
mov
sbb
insl
inc
hlt
push
xor
mov
mov
fisttpl
movsb
mov
aad
neg
add
xchg
sub
mov
pop
sub
pop
mov
pusha
repnz
mov
test
jge
ficompl
jmp
push
mov
hlt
movl
test
fs
add
in
leave
mov
add
adc
insb
push
arpl
cmc
or
outsb
cmp
pop
adc
in
pusha
aad
jb
addr16
add
aam
add
std
test
or
insb
cwtl
mov
add
leave
mov
lods
jge
add
xor
filds
or
cmp
sbb
cmp
ficoms
and
enter
sarb
and
add
iret
shld
sub
mov
or
and
or
das
adc
add
sub
inc
fdivl
jno
add
mov
adc
out
pop
mov
mov
movsl
in
mov
call
js
stc
add
mov
cwtl
push
loope
or
cmp
fs
add
pop
arpl
hlt
push
imul
popa
cli
sbb
fdivs
test
inc
repnz
xchg
push
hlt
jnp
add
sbb
hlt
or
cmc
fnstenv
mov
ljmp
mov
bound
pop
ficoml
gs
aam
add
popa
mov
into
subl
mov
dec
sbb
xchg
fadd
roll
movsb
sti
hlt
shrl
imul
xor
mov
lods
sarb
add
inc
in
add
pop
dec
or
stos
leave
jl
fnstsw
add
add
adc
or
leave
and
test
or
aam
mov
push
add
ficomps
leave
fldcw
and
rolb
mov
test
pop
cmp
or
mov
mov
in
mov
mov
lcall
mov
cmp
inc
aad
scas
ja
popf
adc
adcl
jae
or
jecxz
cmp
push
sbb
jp
iret
push
in
decl
sbb
daa
scas
add
mov
pop
jge
hlt
lock
add
push
inc
push
imul
xorb
aas
sbb
subb
sbb
loopne
sub
mov
ficoml
int3
add
outsl
fistpll
cmp
aad
mov
call
add
fdivrs
push
add
fisttps
addr16
cmpsb
fldl
push
mov
dec
ss
fiaddl
sub
scas
idivb
dec
add
pusha
jp
inc
ret
out
fcomp
push
in
ja
add
imul
sbb
shrb
ss
push
xchg
add
int3
add
mov
and
es
mov
mov
pop
mov
sub
mov
cmpsl
call
add
xor
shlb
sub
scas
ficomps
lock
es
arpl
pushf
mov
xchg
insl
add
ss
add
test
jb
push
rolb
adc
mov
mov
cmp
mov
fwait
add
aad
mov
out
fdivrl
fisttpl
aam
rcrl
icebp
clc
mov
push
pop
int
mov
mov
outsl
int3
inc
mov
sbb
pop
add
push
dec
add
push
pop
or
adc
sahf
add
ror
imul
insb
add
js
or
xlat
push
addl
mov
add
popa
cmpsl
notl
pusha
add
dec
inc
imul
dec
push
scas
fcompl
add
or
inc
lock
aas
aaa
push
add
jg
iret
mov
jmp
cmp
mov
lret
mov
cmpsb
add
shr
mov
xlat
int
add
push
mov
add
mov
dec
popa
les
add
push
sub
add
or
cld
filds
add
leave
push
mov
add
or
dec
or
jp
pusha
pop
inc
inc
push
and
daa
dec
pop
cs
shlb
xor
jae
cmp
and
jne
push
popa
std
cmp
popa
and
mov
cmpsb
cmpsl
or
jno
mov
aas
push
add
or
pop
push
aas
loope
and
mov
js
inc
and
sbbb
lcall
push
bound
arpl
cmp
adc
pop
outsl
adc
pop
mov
sub
jp
add
cmp
sbb
stos
or
outsb
je
sub
push
cmp
push
rorl
insl
popa
popa
jns
mov
icebp
push
and
insl
sti
lret
cmp
jns
xor
arpl
fs
sahf
repz
jo
ljmp
imul
dec
gs
xor
jns
ss
dec
not
test
and
mov
sub
in
lock
movsb
dec
scas
and
es
mov
cmpsb
push
outsb
adc
jno
addr16
add
je
sbb
mov
sub
jo
imul
mov
dec
jmp
sbb
popa
cmp
jo
push
gs
and
sub
jae
mov
push
push
ja
movsl
pop
insb
lahf
dec
into
inc
dec
rclb
sub
outsb
or
pushf
and
xor
sarb
aas
inc
pop
clc
out
mov
pop
mov
nop
jno
andb
es
push
push
adc
dec
jae
xchg
cwtl
adc
sbb
cwtl
nop
mov
mov
cmp
inc
xchg
pusha
into
mov
jb
fsubp
cmp
fsubrp
xor
pushf
cli
inc
mov
and
ret
std
and
pop
pushf
test
and
push
or
inc
push
pop
dec
inc
mov
pop
and
adc
push
aaa
lods
shll
sub
inc
scas
sub
int3
cmp
sbb
xchg
pop
jp
dec
stc
notl
push
cltd
push
inc
inc
xchg
inc
sub
mov
cmp
pop
pushfw
pop
movsl
pushf
xchg
push
dec
fs
lret
xor
sub
test
jp
sub
xchg
cmpsb
adc
xchg
inc
gs
xor
pop
sbb
sub
xchg
cs
mov
inc
xchg
clc
cltd
inc
cltd
jo
data16
in
scas
cld
xchg
and
sub
rclb
add
shrb
ljmp
jno
jmp
mov
loop
push
scas
dec
lcall
dec
inc
inc
push
inc
out
call
and
in
dec
out
mov
hlt
dec
push
cs
mov
jmp
loop
add
or
mov
gs
ja
jg
jne
cmp
repz
int
pop
sub
jmpw
ljmp
bound
or
fs
punpcklwd
mulb
stc
movsb
jle
push
xchg
repnz
pop
lahf
js
shlb
in
xchg
aaa
test
jl
pop
ja
jnp
xchg
aaa
push
jp
cmp
and
xor
mov
fmull
push
fsubrs
idivb
in
cmp
and
cs
lods
fidivrl
lods
in
dec
into
inc
jne
lcall
push
fistps
pushf
push
pop
jae
imul
stos
pop
dec
leave
xchg
dec
aad
fsubs
mov
and
add
push
sbb
in
arpl
in
cmp
pop
stos
pop
sub
pop
xor
dec
xor
dec
xchg
adc
xor
and
outsb
xchg
xchg
xchg
jl
je
mov
jb
xor
push
in
and
sub
test
lret
mov
jae
clc
in
or
icebp
lock
cmp
mov
xor
jp
js
push
and
cmp
nop
inc
or
je
aam
adc
sbb
sbb
sbb
mov
jp
enter
inc
sbb
lcall
rclb
inc
jnp
sub
adc
js
leave
mov
jo
xchg
dec
sbb
sub
adc
pop
bound
inc
enter
jo
leave
cmp
sbb
lahf
cmp
jae
cmpsb
jno
push
push
imul
popa
xchg
inc
jp
push
sarl
jg
test
lods
dec
data16
mov
pop
xchg
cmp
xor
fs
rolb
sbb
arpl
mov
xor
inc
jno
cwtl
cwtl
cmp
jge
jb
fidivrl
sub
xor
movl
xchg
add
bound
mov
rcll
cmp
push
cmp
dec
lahf
pop
pusha
dec
mov
dec
ret
mov
mov
or
mov
or
inc
dec
mov
xor
or
mov
xchg
repnz
push
nop
xor
jo
fwait
and
stos
in
adc
and
mov
jmp
lock
lcall
pop
sti
push
push
push
aaa
je
sub
cmp
outsb
or
jb
sarl
jo
insb
jae
sahf
bound
addr16
movsb
add
xchg
mov
adc
insl
sbb
fidivrl
aam
pusha
sub
mov
adc
xchg
or
cmc
fs
and
and
lea
jnp
jle
icebp
mov
insb
sti
pop
je
mov
adc
add
xchg
add
add
push
or
pop
pop
or
aaa
xor
push
repz
and
inc
pop
push
pusha
push
loop
filds
testl
out
add
outsb
arpl
insb
push
ljmp
pop
pop
mov
sub
push
adc
bound
test
mov
test
mov
dec
hlt
mov
or
or
xchg
or
push
mov
inc
xor
lods
mov
data16
arpl
and
mov
leave
outsl
mov
dec
jp
mov
and
ss
lret
jg
mov
xor
aad
push
cmp
jbe
dec
xor
push
or
stos
or
mov
xor
or
xor
mov
dec
mov
inc
fisttpl
sahf
pop
cmp
dec
inc
cmp
xchg
dec
xor
jo
xor
lret
adcl
or
adc
or
sbb
sub
push
rcrl
sub
inc
shlb
inc
adc
or
adc
rorl
push
or
ja
sub
in
dec
xor
fcompl
loop
or
aam
dec
inc
mov
adc
loope
or
dec
pop
lret
in
sbb
lods
lods
add
sbb
dec
pop
daa
inc
push
ljmp
xor
je
jecxz
jae
dec
pop
cs
call
leave
or
out
rcrb
repnz
mov
or
imul
jb
stos
mov
sub
xchg
mov
push
jecxz
adc
jb
mov
inc
es
adc
push
xor
cmp
pop
sub
and
xchg
sbb
cmp
inc
aaa
pop
sbb
je
or
jae
popa
andl
push
imul
cmp
xor
fs
es
stos
cs
or
mov
sub
pusha
repnz
jno
lcall
xchg
xor
pop
clc
pop
stos
popf
outsb
test
and
jl
movsl
sub
cmp
and
dec
pop
movsl
or
stc
insl
jno
inc
lods
and
mov
stos
xor
aaa
sbb
xor
pop
push
inc
mov
stos
mov
jns
lds
dec
push
rorl
imul
and
pop
push
pop
sub
and
sub
dec
fildll
lods
cmp
xorb
push
aaa
mov
add
daa
adc
jno
in
cmp
mov
pop
cmpsb
fadd
inc
test
shlb
lret
adc
push
pop
fs
arpl
ret
daa
clc
sub
rclb
popf
fimull
pop
rolb
jo
insl
ficoml
test
andl
xchg
xchg
subb
lcall
movsb
sub
mov
test
outsl
xlat
or
in
mov
xchg
push
lock
fwait
and
dec
hlt
push
mul
mov
add
sbb
or
push
lahf
fsubrl
push
cmc
test
sub
inc
jge
mov
push
push
cmp
jp
jne
push
or
jb
mov
adc
mov
leave
push
pop
jne
mov
sbb
insl
adc
mov
aam
push
pop
sbb
movsl
and
jp
shlb
jne
adc
pop
pop
fs
jno
inc
push
jo
nop
mov
mov
pop
and
into
insb
cltd
xchg
inc
and
push
dec
adc
and
ss
mov
adc
xchg
js
fsubrs
mov
jl
fs
or
cmovns
mov
or
iret
xchg
mov
imul
push
stos
adc
lds
fs
add
jne
test
jne
pop
adc
mov
test
pop
es
repz
mov
mov
inc
addb
push
test
jl
movsb
stos
push
jbe
bound
nop
rorb
sub
outsl
adc
dec
rcrl
popa
jp
gs
fists
aam
push
or
sbb
adc
dec
lret
xchg
sti
stos
cmpsb
sbb
xchg
dec
push
and
dec
mov
adc
add
subb
rcrb
popf
inc
out
dec
xor
sub
adc
frstor
and
stos
adc
fwait
subb
es
sub
insl
int
dec
adc
push
mov
inc
nop
iret
push
pop
loop
lods
stos
adc
ret
lret
and
sbb
adc
pop
sahf
adc
bound
jb
mov
fisttpll
sub
jb
adc
mov
adc
dec
lea
mov
dec
jecxz
push
dec
ret
jp
jb
outsb
cs
sbb
xor
jae
dec
adc
movsb
imul
dec
loop
aas
sub
jb
pop
jle
add
js
pop
aad
mov
scas
adc
in
js
pop
push
pop
jp
adc
mov
xor
data16
insb
movsl
dec
sub
test
ja
daa
sub
in
insb
lods
lods
scas
xchg
cwtl
dec
jmp
push
and
push
addb
sbb
sub
sbb
jp
mov
bound
dec
push
cmpsb
outsb
mov
xchg
cmp
pop
scas
cmp
mov
aad
sbb
add
dec
inc
mov
adcl
mov
je
outsb
lret
rorl
dec
stc
aad
sub
lock
lock
cmp
mov
lea
or
or
aad
jbe
in
je
adc
movsb
call
and
jp
or
inc
push
roll
sarb
adc
xor
sbb
and
inc
in
or
inc
test
sbb
sbb
insl
jecxz
imul
and
push
push
fisubrs
mov
cmp
inc
adc
imul
outsl
jbe
xchg
je
or
push
push
jle
adc
jae
test
fldcw
imul
inc
jo
repnz
in
bound
roll
xor
dec
shrl
or
shll
pop
inc
push
adc
dec
push
inc
xchg
jno
inc
push
inc
inc
cmp
xor
cli
je
movsb
lea
push
or
es
leave
push
pop
mov
push
jne
or
adcb
jne
or
mov
sub
and
and
das
jo
je
or
xor
push
dec
xor
movsb
adc
and
ja
fistl
loopne
mov
mov
iret
stos
stos
mov
jp
jae
sti
mov
test
int
mov
aad
adc
outsl
xchg
or
or
je
pop
xor
loop
cs
or
clc
ficompl
xor
pop
adc
adc
sub
outsb
jno
xor
add
lcall
imul
xor
mov
js
pop
and
mov
adc
fs
cmp
push
dec
insb
bound
test
nop
inc
mov
loop
test
push
mov
push
gs
push
cs
jecxz
clc
stos
xchg
or
arpl
loopne
sub
mov
mov
sbb
pop
movsl
shlb
dec
test
push
cs
lods
add
arpl
and
add
loope
push
xor
or
mov
mov
mov
sbb
push
push
and
loop
push
les
inc
cmp
imul
test
push
enter
mov
inc
adc
loop
clc
add
push
push
enter
cmp
lock
inc
dec
loop
jecxz
mov
and
add
pop
mov
sbb
push
adc
in
outsl
and
xor
enter
xchg
les
mov
push
inc
adc
cmp
or
stos
inc
insl
add
and
adc
andb
sbb
lret
test
sbb
in
fadds
stc
es
mov
mov
and
insb
xchg
add
lods
lret
pop
and
adc
repnz
les
add
mov
inc
mov
push
add
add
imul
or
mov
insl
adc
fwait
and
mov
sbbl
push
jmp
shr
adc
or
lock
fimull
ret
fstl
es
and
cmp
ljmp
jbe
mov
mov
data16
xchg
ljmp
ret
mov
adc
int3
add
lods
dec
mov
data16
jb
aad
clc
std
mov
stos
adc
loope
sbb
inc
xchg
ja
roll
add
adcl
les
and
out
dec
loop
pop
and
dec
mov
and
jecxz
inc
mov
push
in
push
adc
int
and
out
mov
out
push
dec
push
xchg
pop
adc
aad
inc
jmp
mov
rorl
xchg
sti
dec
sub
dec
sub
pop
jmp
mov
mov
in
andb
andl
lret
icebp
or
mov
ljmp
hlt
add
cmc
or
lds
lret
testb
cmp
or
xchg
aaa
and
popa
xchg
adc
or
sti
and
mov
frstor
and
push
or
cmp
add
mov
das
or
nop
and
mov
mov
adc
add
and
jecxz
jg
add
and
dec
lahf
mov
and
and
jp
inc
addl
inc
inc
aaa
jbe
in
cmp
dec
lcall
cmp
daa
push
mov
hlt
cmp
enter
aad
hlt
loopne
sbbl
dec
pop
xchg
and
mov
and
dec
hlt
lea
inc
rcll
mov
mov
inc
andb
jno
and
dec
mov
xor
mov
and
ja
fists
jns
mov
jp
mov
lcall
adc
and
cwtl
add
dec
pusha
xchg
insb
adc
and
sbb
into
mov
adc
mov
mov
mov
or
or
or
rorb
shll
rolb
movsb
or
cmpsb
fiaddl
dec
decb
fistps
das
pusha
and
in
inc
out
inc
call
addb
fsubrs
or
adcl
hlt
add
stc
or
xchg
sti
adc
cli
and
sar
sbb
add
adc
insb
inc
sbbb
push
xchg
inc
or
mov
adc
add
cltd
inc
mov
cs
adc
and
sub
xor
dec
orl
inc
and
push
dec
inc
xchg
sub
pusha
enter
dec
or
hlt
jne
adc
add
jns
xor
out
add
jl
pop
or
xchg
add
add
xor
pop
and
dec
orl
arpl
push
fwait
inc
imul
adc
sahf
add
inc
push
lahf
or
mov
or
mov
shlb
inc
sub
and
and
inc
sahf
push
inc
stos
into
mov
stos
fsubrs
or
mov
data16
add
mov
mov
lret
or
loope
subb
xchg
and
push
cs
and
call
jmp
or
sbb
adc
inc
cmp
and
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
or
or
mov
xor
xchg
and
adc
xchg
and
xchg
and
jmp
or
pop
fstl
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
adc
fisttpl
mov
pop
and
pop
dec
mov
je
movsb
pop
adc
xchg
or
je
sbb
jl
sbb
push
in
dec
hlt
xchg
cld
adc
and
adc
mov
sub
xor
cmp
inc
and
pop
mov
and
dec
jl
test
mov
mov
xor
mov
or
push
and
insb
sub
and
xchg
je
movsb
pop
and
pop
dec
mov
je
movsb
pop
and
pop
dec
mov
or
and
cmp
inc
and
dec
insb
xchg
nop
and
call
and
dec
inc
xchg
dec
and
cwtl
mov
dec
lock
clc
adc
jae
dec
adc
je
jl
mov
aam
clc
pop
push
and
xchg
push
and
jl
mov
dec
fsubrl
sub
xor
pop
and
test
enter
fsubs
loopne
call
push
daa
mov
or
xchg
sbb
and
mov
adc
dec
dec
push
xchg
pop
and
push
andb
nop
xchg
cwtl
and
mov
dec
rclb
call
fisubrl
jmp
shrb
xchg
je
movsb
pop
and
pop
dec
mov
je
movsb
pop
and
pop
dec
mov
je
movsb
pop
and
pop
dec
mov
and
jmp
shrb
xchg
je
movsb
pop
and
pop
dec
mov
or
and
adc
test
lods
inc
mov
mov
dec
les
rcl
mov
adc
and
dec
in
call
hlt
mov
adc
or
adc
or
mov
sbb
dec
and
push
cs
push
enter
add
pop
push
cmp
add
pop
sysret
lcall
mov
loopne
loope
mov
sbb
mov
mov
int
jge
addr16
or
jae
and
outsl
xor
daa
jne
je
bound
iret
push
outsb
cltd
push
fs
arpl
mov
or
sub
push
arpl
push
or
add
pop
inc
sub
loopne
mov
mov
add
adc
int3
mov
sbb
js
xchg
push
stos
or
cmp
xor
or
jo
or
push
arpl
or
push
or
dec
pusha
jno
xchg
mov
sbb
inc
dec
inc
inc
or
in
fsub
movsb
dec
add
shll
push
xchg
inc
inc
push
in
call
sbb
sbb
xor
mov
and
loopne
sbb
shrb
fs
je
test
adc
inc
adc
push
cmp
movsl
push
shrb
rclb
gs
and
nop
and
sub
and
push
shrb
jecxz
xchg
arpl
and
push
lock
sub
lret
cmc
aas
add
add
xchg
adc
add
nop
sbb
or
push
xor
addr16
sbb
adc
cmp
cmp
sbb
or
inc
inc
call
sub
pop
push
dec
bound
arpl
je
and
mov
xchg
adc
pushf
cmp
mov
and
enter
jb
cmp
mov
and
cmp
sbb
mov
and
or
cld
cld
inc
adc
hlt
or
push
add
and
or
test
nop
cmp
inc
and
sub
je
movzwl
mov
cmp
pop
mov
sub
xor
aam
enter
jb
cmp
add
mov
cmpl
jne
cmp
push
int3
push
mov
jecxz
mov
test
jne
xor
pop
lret
inc
cmp
add
rorb
inc
cmp
add
push
mov
inc
push
inc
cmp
jne,pt
js
adc
push
into
pop
nop
fcoms
out
inc
pop
inc
repnz
call
imul
or
push
add
or
into
adc
inc
push
add
iret
mov
push
push
adc
mov
push
push
pop
push
mov
into
adc
mov
xchg
add
push
pop
pop
nop
fnstcw
xchg
push
or
aaa
or
ret
and
call
inc
mov
sub
or
inc
add
jmp
add
cmp
ljmp
jne
jb
sbb
call
lahf
add
push
mov
inc
mov
cltd
push
cmp
jb
jecxz
add
insb
call
ja
and
sbb
mov
or
into
inc
cmp
dec
jmp
aas
pop
inc
jp
add
nop
pop
cmp
sub
or
sti
inc
scas
and
in
lock
jae
or
jb
js
or
or
cmp
out
sbb
pop
xchg
sub
or
cmp
push
mov
cs
out
adc
dec
lea
shlb
test
je
loopne
mov
xor
dec
addb
add
scas
dec
stos
stc
aad
fs
mov
xchg
mov
call
sbb
inc
or
xchg
push
sub
jns
push
xchg
and
loope
ja
sub
decb
xchg
in
jecxz
or
scas
push
push
add
add
out
cmp
dec
and
push
repz
jae
xchg
out
ja
mov
out
xor
push
push
or
sti
imul
mov
pop
lea
rorl
filds
cmpsl
cmc
cwtl
pusha
add
adc
adc
pcmpeqb
adc
sbb
adc
sub
hlt
mov
ljmp
add
and
dec
lock
or
outsb
ljmp
cmp
jle
add
adcl
clc
incl
lea
and
adc
and
push
pop
sub
test
dec
rcpps
or
pop
je
sub
or
fs
xor
sahf
jmp
cmp
aas
ret
clc
sub
push
sbb
outsl
or
out
hlt
lea
std
xor
addl
xchg
andl
cwtl
inc
call
add
out
rcrb
cwtl
cld
sub
sub
xchg
xlat
inc
pop
call
ja
jge
pop
inc
dec
frstor
mov
jg
pop
leave
stos
add
and
and
int3
mov
cmp
pop
movsl
pop
and
adc
push
or
pop
fwait
or
push
adc
cli
adc
xchg
in
add
xor
push
cmc
add
mov
lea
jno
push
lods
rcll
fisttps
gs
xorb
aaa
or
leave
push
xchg
inc
push
mov
cmpsb
mov
jmp
lds
inc
jne
dec
mov
test
rcrb
sbb
jp
dec
mov
test
adc
lea
or
pop
xor
aad
mov
stc
inc
lds
xchg
test
or
cmp
jae
testl
adc
mov
inc
dec
cmpsb
mov
test
je
dec
mov
ret
mov
cmp
movsl
adc
imulb
adc
sub
out
jmp
jnp
push
mov
pushf
cmp
dec
pushl
int3
mov
test
sub
ss
loopne
jle
or
and
push
or
and
cmp
dec
movaps
mov
cmp
pop
mov
add
rolb
xacquire
mov
jae
bound
xchg
add
mov
mov
push
xchg
pop
and
cs
les
inc
je
adc
sbb
jo
mov
lahf
inc
push
cmpsb
mov
hlt
xchg
adc
cmp
mov
dec
add
les
pop
push
xor
pop
or
or
sub
jbe
or
in
fistpl
loopne
cmp
or
adc
stc
lods
test
loopne
pop
add
rcrl
push
int
mov
jmp
pop
push
mov
sbb
sub
hlt
sub
mov
scas
or
and
cwtl
mov
dec
in
pop
shll
jbe
movd
adc
cmp
push
adc
test
mov
lcall
test
sbb
mov
adc
movl
shr
outsl
stos
xchg
popa
mov
xchg
leave
add
or
incl
rolb
loop
ret
in
or
add
adc
mov
or
jl
xchg
lret
sub
push
lret
cmc
sub
or
ret
and
lds
ss
xor
dec
or
je
sub
add
fcmovb
push
xchg
add
xor
test
and
and
cmpsl
add
sub
cmp
bound
push
and
pop
push
stc
add
adc
fs
fdivs
mov
addr16
and
pusha
fsubs
add
in
repz
stos
xor
andl
hlt
xchg
mov
push
or
jo
dec
imul
mov
stos
pop
mov
call
aaa
sub
dec
jg
push
clc
jae
mov
jge
xchg
fiadds
ljmp
and
sub
adc
push
call
mov
and
aad
fs
fwait
lods
mov
pop
add
lea
mov
xor
out
stos
xchg
fimull
xchg
dec
jo
repnz
fisttps
add
sub
cltd
inc
sbb
aaa
mov
test
dec
dec
ret
gs
xor
adc
mov
jmp
cmp
xor
adc
stos
ja
cld
sub
jg
or
push
daa
mov
mov
cltd
lret
test
test
adc
jle
and
xchg
sub
fwait
pop
adc
sub
cwtl
shll
adc
pop
xor
test
aam
es
xor
sbb
lea
movsl
jo
call
inc
or
cmp
sbb
pop
push
add
cmp
xorl
sub
add
int3
and
or
ljmp
pop
or
pop
insb
xchg
and
and
lods
lret
xchg
jno
js
outsl
imull
andl
and
adc
fxam
sahf
aam
icebp
adc
and
lea
dec
mov
sub
inc
add
pop
and
jecxz
bound
lea
nop
mov
mov
in
pusha
test
dec
add
pop
jg
push
aaa
je
push
addb
jne
or
ljmp
dec
mov
int3
stc
or
or
test
mov
jnp
xchg
sbb
xor
mov
jmp
pop
sub
je
hlt
es
push
in
shll
adc
aad
jne
sbb
pop
lcall
push
cmp
cmpl
arpl
loope
mov
add
icebp
cs
das
out
cmp
in
sub
dec
cmc
mov
es
sub
mov
xchg
cltd
gs
std
repnz
xor
pop
cltd
lods
scas
sbb
pop
mov
dec
push
into
xchg
das
shlb
arpl
mov
je
or
clc
and
jle
nop
mov
xchg
jp
leave
push
push
xor
ret
pop
popf
xor
ficompl
lea
jg
mov
lcall
movb
xchg
scas
inc
and
sub
sub
or
jl
pop
hlt
jmp
xchg
lret
mov
sbb
mov
fimull
or
pop
notl
mov
sbb
inc
cwtl
sarb
sbb
dec
sub
sub
add
sbb
xchg
lcall
call
pop
adc
inc
mov
mov
push
pop
mov
xor
sbb
loopne
sub
mov
adc
jp
jb
or
js
xor
or
test
jne
cmovae
or
jmp
sub
mov
inc
les
add
je
inc
mov
addb
ljmp
aas
nop
or
cmp
sbb
les
daa
loop
clc
cmp
sub
jno
push
adc
sbb
jle
xor
int
and
add
test
je
jae
or
add
cld
inc
or
aaa
orl
push
sub
sub
push
sub
or
loop
mov
mov
sub
mov
and
mov
scas
mov
or
nop
mov
add
scas
fcmovnb
fcomps
enter
pop
stc
add
insl
ffree
dec
adcl
sub
pop
call
cmp
or
sub
repz
add
xchg
push
cltd
pop
sub
cmp
add
ljmp
fists
mov
add
movsl
pop
xchg
mov
xor
mov
lret
test
inc
lahf
jno
jl
jns
push
push
sbb
sub
movsb
adc
add
add
aaa
and
shll
mov
stc
jmp
fbld
mov
dec
add
stos
dec
xchg
clts
pop
cmp
jl
in
sub
test
rcr
in
lods
shlb
clc
xor
dec
loop
push
jl
jb,pn
and
inc
or
lret
mov
dec
sti
and
or
jmp
or
sbb
mov
inc
repnz
xor
xor
and
add
adcl
lock
jmp
ss
dec
adc
clc
add
ret
push
fcoms
jge
cmp
inc
add
xchg
call
inc
fists
mov
lahf
or
test
jle
jb
jbe
dec
inc
xor
lods
jmp
add
out
pop
sub
je
cmp
rorb
test
leave
je
sbbb
push
cmp
pop
or
sbb
add
push
jmp
enter
jne
enter
adc
xchg
out
nop
fcoms
and
xor
cmp
sub
or
or
cmp
cmp
ja
jne
ret
xchg
cwtl
inc
test
or
pop
call
lods
andl
jg
jmp
push
push
push
cmp
pop
pop
jne
clc
xor
cwtl
imul
mov
imul
jns
add
mov
add
divl
je
pop
insl
vmread
rep
incb
and
je
xchg
sbb
jl
xchg
sbb
std
sbb
sbb
push
lcall
xor
add
xor
mov
pop
push
fsubrs
lods
or
sbb
fistl
fldcw
push
cmpsb
repnz
sub
or
outsb
jl
add
or
movups
and
in
aam
pop
pop
pop
mov
cmp
enter
cmovns
addl
mov
inc
jmp
fsubs
sbb
cmp
mov
loop
je
lret
loopne
es
and
loope
icebp
dec
add
in
mov
and
sub
push
jle
xor
mov
add
das
or
arpl
mov
mov
data16
jne
sbb
lock
and
and
je
in
test
jmp
or
sti
dec
loopne
or
push
fs
xchg
lods
movsb
dec
add
mov
add
loopne
mov
sarl
inc
or
stos
movsb
adc
stos
pop
rcr
or
fldt
adc
add
mov
dec
popf
xor
lea
dec
insb
nop
rol
dec
mov
mov
inc
sbbb
popf
push
sub
aad
add
js
pop
add
push
add
sub
or
pusha
call
or
and
or
cmp
inc
and
in
rcll
and
int
xor
aam
push
jmp
stc
addb
fdivrs
js
push
pop
sub
movb
inc
out
pushf
dec
mov
sub
test
add
or
adc
add
or
mov
jmp
add
mov
cmp
add
mov
sbb
pusha
js
loope
ljmp
adc
cmpsb
es
sub
jmp
dec
or
cmpl
test
or
lea
and
cmc
cld
xchg
fisttpl
push
fwait
sub
rol
pop
xchg
jns
push
pcmpeqb
sbb
shrl
add
fsubs
inc
addr16
sub
jmp
cld
mov
inc
inc
stc
pop
and
jae
sbb
pop
stc
jmp
push
fstp
dec
stos
xchg
imul
mov
out
enter
pop
or
or
aas
test
add
pushf
or
push
ret
nopl
hlt
adc
adcb
and
out
sbb
pusha
cmp
mov
mov
movsl
aam
xchg
pop
and
out
je
notl
xor
adc
mov
andb
xor
add
leave
sbb
cs
shll
or
shlb
call
mov
add
lods
inc
addb
xlat
fadds
lods
outsb
xor
js
xchg
mov
or
push
push
mov
ret
hlt
mov
popa
push
pop
into
push
ror
sbb
push
hlt
cmp
mov
daa
lret
into
pop
hlt
test
or
pop
hlt
in
or
mov
dec
addr16
leave
repnz
rclb
push
jl
cld
mov
test
lods
lds
iret
decl
pop
js
mov
add
stos
mov
cmp
jmp
xchg
test
stos
pop
add
jg
mov
add
daa
cmp
jl
xor
cmp
call
dec
mov
jle
push
inc
add
sarb
pop
jbe
int3
repnz
test
nop
fneni(8087
daa
cmp
clc
scas
adc
cli
add
mov
pop
mov
inc
aam
imul
loope
push
jp
iret
mov
mov
mov
xchg
push
cmpsb
scas
mov
adcl
int3
jbe
add
in
xchg
cmp
xor
push
in
cmp
sahf
add
and
push
shld
add
addr16
repz
mov
subb
xchg
and
pop
and
loopne
adc
cmp
das
and
jl
push
cwtl
dec
sbbl
clc
pop
jne,pt
sub
or
and
or
mov
aas
cs
scas
inc
nop
repnz
hlt
movzwl
inc
clc
int
push
push
xchg
sub
dec
or
repz
dec
xor
push
push
pushl
xor
hlt
xchg
sbb
push
aaa
or
push
mov
adc
push
jl
daa
and
pusha
adc
mov
call
mov
clc
mov
je
and
mov
or
push
cmovg
push
adcb
inc
outsl
pop
jb
popa
outsb
addl
push
push
dec
add
push
dec
popa
jae
je
adc
sbb
fwait
push
out
and
or
xor
mov
adc
movsb
xchg
les
inc
sbbl
mov
sbb
sub
sbb
sub
je
ret
mov
bswap
lret
or
popl
sub
sbb
sub
pop
mov
push
or
push
cld
sub
mov
fdivs
rclb
pop
insl
push
adc
popf
mov
fs
mov
push
and
add
sbb
in
cmp
jle
repnz
add
jae
sub
cmp
cmpl
xor
or
cmp
jecxz
jbe
scas
js
jb
icebp
out
fwait
jbe
jp
pop
mov
fadds
jge
adc
jmp
movsb
mov
add
add
test
mov
in
add
scas
loope
pop
inc
push
testb
ret
pop
add
sub
clc
je
jnp
fucomi
pop
cmpl
inc
mov
cwtl
repz
xchg
in
mov
cmp
and
xor
or
mov
push
outsb
call
mov
add
pop
jmp
pushf
xchg
sbb
test
push
push
xorl
hlt
ja
popf
add
adc
cmp
movl
mov
or
shr
fistpl
and
xor
mov
push
xchg
pop
dec
pop
jno
dec
addr16
adc
push
clc
mov
push
or
and
jg
js
mov
jnp
cmpb
jbe
push
scas
pusha
in
push
adc
adc
sbb
pop
pop
push
xchg
push
cmp
in
or
push
dec
sbb
add
pop
add
push
push
jmp
xchg
filds
sbb
jmp
jmp
or
outsb
mov
push
add
push
pushf
bound
imul
mov
pop
pop
lds
sub
adc
and
loop
pop
push
fistpl
mov
mov
jecxz
mov
enter
jae
lahf
mov
jl
or
cmp
inc
mov
push
sbb
cld
inc
inc
and
mov
adc
or
test
push
lcall
mov
dec
cmpl
push
je
call
inc
and
jbe
xchg
das
popf
ja
jmp
mov
xchg
js
adc
ret
lret
xor
dec
cmp
push
mov
adc
or
ja
cmp
lock
cli
add
push
sbb
dec
sbb
fldt
adc
jle
fstpl
adc
xchg
fs
mov
or
push
or
add
inc
out
push
push
or
stos
outsl
insb
xchg
sub
mov
jmp
add
sub
xlat
or
xor
je
pop
dec
lcall
push
push
and
call
mov
pop
mov
fcomps
das
call
push
push
push
es
push
inc
inc
pop
stos
adc
and
lret
xchg
mov
or
xchg
add
andl
mov
or
popf
cmp
pop
test
or
mov
jnp
lea
movsb
cmp
pop
fs
push
lahf
mov
loop
or
das
fs
int3
sub
lret
or
lea
cmp
sub
jns
push
mov
adc
add
mov
cmp
push
pusha
add
sub
cwtl
ss
xor
push
fstl
cmp
inc
adc
push
and
cmp
std
nop/reserved
push
mov
sub
enter
leave
cmp
ror
rcrl
popf
and
sbb
into
sbb
push
sbb
fstps
imul
push
movsb
leave
das
push
or
cltd
pop
ret
fwait
enter
es
push
repz
mov
jno
sub
and
out
xor
pop
imul
push
adc
inc
sbb
sti
push
cli
loopne
mov
std
out
sbb
jl
or
xchg
sub
or
inc
push
adc
outsb
adc
and
xor
cs
mov
add
or
test
jmp
push
pop
xchg
and
sbb
dec
cmp
jne
insb
sbb
jp
sbbl
pushl
add
cmp
mov
xor
xor
dec
mov
add
popa
inc
test
jle
ja
ret
xor
push
dec
lcall
outsb
adc
adc
xor
and
enter
ss
ret
nop
movsb
pusha
sub
xchg
xor
ss
add
repz
sbb
sbb
shrl
push
in
pusha
mov
xor
jge
mov
movsl
popl
dec
adc
sbb
jnp
adc
les
leave
cmpl
sbb
mov
and
inc
xlat
push
daa
int
mov
or
lods
aad
out
mov
mov
pop
enter
rclb
in
adc
push
and
xchg
mov
dec
xor
adc
cmp
cmpl
movb
cmp
dec
orps
outsb
mov
sbbb
mov
lea
in
inc
push
push
in
enter
sarl
dec
jne
pop
pop
pop
lea
iret
add
jbe
sbb
or
dec
and
fs
loope
outsl
ret
mov
idiv
add
xor
fs
sub
dec
das
sbb
xorb
shl
inc
mov
test
xchg
push
shr
jb
and
or
cmpb
adcl
aaa
sbb
sbb
outsl
adc
ja
sahf
push
and
jbe
pop
pop
leave
call
inc
loopne
add
adc
int
popa
adcl
jbe
mov
sbb
or
out
push
push
push
call
xor
add
and
inc
ret
pop
ret
adc
sub
sbb
dec
push
xchg
or
push
cmpsl
pop
pop
and
out
sub
mov
ret
push
cwtl
cmpb
jbe
cmpl
mov
shl
inc
mov
call
and
cmpsb
adc
popa
xor
pop
sub
stos
imul
or
jne
jle
cmpsl
and
lcall
int3
push
inc
dec
adc
add
mov
out
out
xor
push
test
xor
jne
mov
je
sbb
ret
cmpl
test
repnz
loopne
push
sbb
or
mov
stc
lock
sti
cmp
jmp
int3
add
ja
test
mov
mov
shrb
clc
dec
add
dec
jl
lock
mov
pop
and
or
mov
push
sbb
inc
add
push
or
mov
dec
cld
fcmove
xlat
nop
push
and
inc
inc
jg
js
pop
inc
stc
adc
sub
jnp
and
dec
popf
cmpsl
negb
jmp
gs
xchg
jl
dec
pop
test
scas
sub
call
and
andl
testl
xchg
push
rorb
mov
ret
pop
fwait
and
add
cmp
sub
cwtl
sbb
xchg
mov
dec
lock
outsb
in
fmuls
sub
imul
mov
and
xchg
add
les
cld
jne
cmp
mov
dec
sub
lea
subl
jge
dec
push
push
pop
xchg
mov
pop
and
call
cmp
xchg
nop
lret
call
xchg
lock
fcmovne
pop
sar
adc
dec
shrl
pop
xor
sbb
ret
xor
in
mov
loop
jmp
pop
nop
mov
push
cmp
push
pop
inc
dec
add
cmp
add
sub
test
inc
mov
pop
jae
imul
xor
bound
or
xchg
push
xchg
or
jmp
or
movsb
add
sub
orb
fiaddl
mov
nop
insl
daa
repnz
inc
or
shrl
add
lret
repnz
mov
std
nop
push
je
cmpsb
mov
ret
cmp
mov
mov
adc
pop
testb
mov
inc
jl
cmp
jecxz
mov
add
imul
sub
rorl
int
inc
cld
add
cltd
xchg
sti
adc
mov
fwait
movsl
cli
inc
arpl
push
and
pop
pop
and
mov
mov
jno
lret
or
push
sub
sbb
test
incl
xchg
adc
cli
je
cmp
xor
cld
adc
add
push
or
and
cmp
jne
arpl
call
cld
arpl
add
dec
sub
or
inc
cmp
or
add
xor
xchg
or
sub
xchg
dec
lds
xchg
pop
lea
decl
popf
inc
and
dec
rolb
daa
xlat
push
ljmp
ja
add
push
and
ljmp
pop
cmp
jne
dec
notb
lahf
sbb
inc
int
into
andl
pop
divl
sub
mov
pop
pop
ja
jbe
push
sbb
and
loope
push
jae
or
shr
popa
mov
pop
adc
pop
or
jmp
nop
sbb
aam
push
clc
inc
fdivs
add
cmpb
sub
out
ret
xor
std
into
cmp
pop
adc
ds
xlat
adc
js
inc
rclb
rcrb
mov
mov
in
cld
lods
jb
es
jl
cmp
jge
pop
sub
push
mov
add
std
or
jge
xor
push
in
fstps
pop
xchg
insb
lret
sub
call
lcall
sub
push
jle
sub
and
flds
mov
repnz
outsb
xor
adc
push
and
std
and
ss
push
dec
dec
stc
bound
xchg
test
cmpl
jne
fsubr
out
adc
loopne
arpl
jmp
fldl
out
cld
fmuls
jmp
int3
fwait
pushf
stos
xor
push
std
cmp
icebp
jl
dec
popf
movsb
sub
adc
mov
push
or
mov
xor
dec
or
shrb
mov
lret
mov
mov
sub
popa
mov
mov
push
push
dec
inc
mov
jge
cltd
and
rclb
dec
xchg
rorl
jl
push
sahf
pop
daa
jo
mov
imul
leave
or
shlb
sub
push
lret
jmp
cs
cmp
sbb
push
sbb
or
sbb
je
adc
sbb
imul
inc
jb
jp
enter
or
adc
out
jmp
jl
add
mov
orl
popa
rolb
cmpb
pushf
xor
sbb
push
lock
subb
mov
mov
inc
je
call
fld1
and
cmp
loope
loopne
movsl
loop
loopne
and
pop
mov
pop
jecxz
sbb
adc
rcl
sbb
iret
jmp
icebp
mov
dec
sbb
shr
lret
or
outsb
sub
sub
pop
repz
or
mov
inc
xor
push
xor
jmp
inc
add
cmp
cmp
adc
or
mov
cmp
sbb
add
loope
mov
add
outsl
cld
call
push
or
sarl
sbb
add
xchg
fisubl
or
sahf
add
and
movsb
or
sbb
popf
or
xor
or
adc
push
xchg
pop
mov
xor
cld
adc
jge
test
sub
adc
pop
les
xor
or
or
ret
inc
xor
sub
cmp
shll
push
mov
dec
sbb
pop
mov
movsb
adc
fbstp
movsl
lock
das
add
test
sbb
ljmp
inc
ds
adc
xchg
cld
test
adc
maskmovq
negl
or
inc
popa
and
xchg
mov
push
push
testb
add
scas
push
xor
icebp
jmp
and
push
decl
outsb
sub
data16
dec
inc
cltd
cmp
adc
ja
dec
incb
jb
gs
inc
ljmp
stc
rolb
add
sub
mov
cmp
loop
mov
push
adc
movsb
arpl
sub
inc
in
and
movsb
aaa
nop
cs
mov
inc
xor
mov
ds
sarl
add
fisubl
ret
dec
cmp
shlb
jne
xchg
pop
bound
mov
imul
add
and
mov
inc
cld
pop
pop
push
sbb
jae
cmp
or
mov
cltd
mov
and
aaa
push
cltd
pusha
lock
stc
call
sbb
sub
jmp
push
adc
push
call
xor
pop
adc
insl
call
mov
inc
or
fndisi(8087
std
cmp
and
xchg
add
jne
mov
mov
cmp
sbb
mov
scas
xchg
mov
sub
push
cmp
loopne
push
dec
in
fstpl
scas
ret
jmp
decl
pop
lods
mov
fmul
adc
lea
in
mov
outsb
sub
inc
sbb
mov
sbb
sbb
push
cs
adc
arpl
call
push
enter
scas
and
test
out
cmp
movl
mov
or
pop
push
aam
cmp
ret
push
pusha
cmpl
sub
int
or
or
add
jl
inc
outsb
sbb
and
lea
ret
or
inc
and
out
lret
mov
pop
fists
in
popf
push
andl
lret
or
push
inc
inc
xor
dec
clc
jne
sub
dec
cwtl
push
push
dec
adc
push
arpl
out
popa
loope
imul
and
pop
inc
and
xchg
pop
adc
adc
push
push
push
mov
and
pop
pop
pop
adc
lods
or
andl
adc
push
jmp
sbb
call
add
cmp
adc
push
mov
jne
jp
out
jae
int
or
clc
jge
adc
je
sbb
or
and
call
inc
adc
cld
jecxz
jmp
add
fwait
inc
mov
mov
cli
pop
jne
xor
xchg
jge
clc
adcl
in
or
add
push
push
clc
push
xchg
das
pop
lods
jmp
cmpsl
fs
repz
call
es
cmp
mov
jo
or
incl
call
orb
jb
xchg
lea
adc
in
mov
movb
fisubrs
mov
adc
push
push
cmp
mov
inc
sub
adc
cmp
lahf
or
dec
mov
xor
jle
dec
push
mov
je
or
mov
xor
in
and
test
sarb
jg
adc
test
sub
dec
xchg
movsl
dec
xor
inc
dec
inc
mov
mull
mov
mov
ret
imul
outsb
pop
insb
xor
cs
xor
addb
dec
outsl
push
outsb
addr16
popa
out
dec
inc
insl
aad
adc
mov
mov
lea
jecxz
jo
cltd
cmp
iret
push
jns
clc
sti
jne
add
pop
dec
rcll
enter
sbb
xchg
cmp
stc
adc
xchg
test
ret
insb
and
inc
push
enter
lods
jne
and
call
bound
push
jno
dec
lds
lds
and
fdiv
adc
bound
popa
inc
dec
je
int3
mov
scas
add
rcll
xor
adcb
xor
jge
xorl
or
and
sub
les
push
adc
push
xchg
add
cmp
push
push
adc
fdivs
or
mov
sub
fmuls
ret
movsl
rclb
test
xchg
jb
add
push
movsl
jne
add
sbb
repz
or
test
ss
xchg
push
sbb
push
outsl
data16
popa
jb
mov
ja
repz
jae
xor
pop
cld
clc
lret
test
sub
mov
sub
enter
or
dec
push
mov
clc
mov
add
mov
and
cmp
jne
fidivs
ret
in
ror
mov
push
iret
push
and
lods
rolb
into
out
add
mov
push
inc
jmp
pop
mov
push
mov
adc
push
cld
jne
pop
outsb
sub
shr
jb
ret
sti
pop
dec
leave
add
aas
fnstcw
sbb
je
and
jb
popl
leave
jne
mov
mov
je
movaps
jo
cld
jg
or
inc
mov
repz
out
add
ror
or
sbb
mov
mov
sub
aaa
test
mov
je
stos
or
push
lock
cmc
fiaddl
xchg
dec
inc
push
cld
cmc
push
adc
adc
fbstp
or
lds
mov
push
cld
shl
xchg
jo
inc
jae
test
popf
dec
push
gs
jmp
int3
int
movsb
jmp
adc
add
and
mov
sbb
loopne
ja
daa
or
dec
sub
clc
cmpsb
nop
adcl
add
push
lds
sahf
mov
divb
adc
adc
or
add
iret
pop
jmp
adcl
dec
sbb
mov
in
push
call
cmp
xchg
adc
pop
and
je
dec
adc
rcrb
cmp
jbe
or
mov
and
pop
out
jns,pt
adc
jmp
sub
das
fldlg2
mov
aas
fsts
int3
lods
mov
cli
add
cmpl
fstl
loop
scas
or
mov
movsl
adc
mov
out
cmp
xchg
call
sbb
pop
test
bt
js
pop
push
push
insl
jns
adc
cmp
sbb
jnp
xchg
sub
push
add
mov
sub
sbb
es
adcb
lcall
pop
adc
lret
stos
inc
test
or
lea
sub
sub
testb
xlat
cmc
sbb
ret
and
or
call
pushl
xor
inc
inc
dec
sub
shll
mov
inc
out
xchg
les
adc
imul
xchg
cmp
mov
push
inc
jo
fsubl
in
pop
xor
push
cmp
inc
mov
and
mov
push
mov
test
sbb
jo
push
xor
mov
sbb
adc
or
loop
adc
lock
or
mov
and
xchg
push
stos
js,pt
test
jg
xchg
repnz
pop
insl
cltd
adc
lahf
int3
insb
push
mov
std
addps
and
jno
or
adc
adc
sbb
xchg
and
and
sub
call
daa
inc
adc
cmp
cld
add
and
nop
outsb
nop
and
les
inc
push
mov
pop
lock
icebp
mov
and
xchg
hlt
enter
jb
cmp
sbb
mov
and
xchg
cld
enter
ja
in
jb
cmp
sbb
mov
and
mov
call
sub
ljmp
in
xchg
in
enter
jb
cmp
sbb
mov
and
xchg
aad
in
jb
cmp
sbb
mov
and
xchg
fsubp
fbstp
cmp
sbb
mov
and
xchg
vshufps
jb
cmp
sbb
mov
and
xchg
int
into
in
jb
cmp
mov
mov
mov
mov
mov
mov
mov
and
mov
rorb
adc
or
push
gs
mov
jle
or
and
icebp
sub
or
or
pop
xor
or
js
gs
imul
mulb
lds
push
js
inc
dec
gs
jo
pop
nop
sub
push
pop
shlb
push
mov
cmpsl
xchg
mov
push
inc
dec
jne
pusha
dec
gs
outsl
daa
jb
add
and
xchg
and
inc
dec
outsb
fnstsw
in
pop
nop
in
adc
mov
data16
les
popa
insb
add
cmp
mov
ret
pop
nop
pop
loop
push
xchg
insb
lds
push
mov
gs
or
cmp
inc
icebp
adc
or
or
imul
outsl
adc
call
insb
sbb
rolb
outsb
xor
nop
movsb
stos
and
les
or
jbe
data16
outsl
ja
mov
scas
pop
dec
inc
daa
fs
and
js
cmpsb
mov
nop
pop
pop
fstps
mov
push
bnd
mov
imul
mov
inc
rclb
xchg
shlb
or
les
mov
insb
dec
popa
movsb
ret
mov
and
outsb
fs
pop
nop
push
mov
in
mov
mov
dec
punpcklbw
xchg
test
pop
pop
xchg
and
or
hlt
es
jo
cmpsl
pop
inc
push
jae
imul
push
adc
push
mov
int3
pop
pop
enter
notb
pop
adcl
mov
push
mov
mov
mov
cld
aad
pusha
in
cmc
mov
int3
les
sarl
gs
in
push
test
test
add
je
arpl
orl
inc
loopne
rorl
je
imul
cmp
xor
lahf
enter
cmp
dec
popa
or
xchg
pop
pop
enter
mov
xchg
enter
or
ret
popa
outsl
and
enter
in
hlt
test
nop
xchg
jo
inc
bound
jb
jae
mov
pop
rclb
in
imul
test
lods
test
push
adc
add
data16
add
cmp
rolb
pop
add
push
dec
cwtl
or
push
sbb
push
inc
insb
neg
aas
sub
lcall
dec
lcall
mov
adc
repz
pop
jbe
clc
add
push
adc
xchg
pop
mov
lret
jg
sub
and
xchg
imul
pop
and
loopne
lahf
sub
adc
insb
xlat
repnz
xchg
movsl
xchg
ds
out
test
xchg
std
pop
mov
jno
mov
add
jb
inc
pop
ja
add
mov
inc
xor
sub
dec
cmp
cwtl
cmp
lahf
loope
loop
movsb
test
add
repz
jne
mov
fldenv
inc
ret
or
rclb
rolb
push
neg
call
mov
inc
dec
adc
push
push
xor
div
ja
insb
popa
cli
cmp
xchg
pop
mov
push
add
pop
pop
sub
nop
lret
xsetbv
mov
add
jmp
mov
insb
inc
dec
xor
mov
jns
xor
xorl
sub
pop
or
inc
pusha
push
movb
sub
cmp
push
xchg
in
add
pop
pop
loopne
data16
fs
mov
inc
mov
arpl
adc
inc
fildll
cmpsb
pop
or
ret
xchg
adc
jmp
cmp
aaa
add
dec
aaa
clc
mov
fdivl
stc
mov
and
cmp
mov
cs
add
loope
sub
pop
add
ffree
cmp
cmp
adc
push
lret
inc
iret
cmp
clc
and
adc
mov
movsb
jp
mov
fmull
scas
ret
pop
cld
out
cwtl
cwtl
and
loopne
or
shll
arpl
add
ret
push
inc
daa
and
scas
cmpsl
jns
inc
sub
xchg
aad
clc
pusha
enter
add
push
jg
mov
pushl
lahf
push
popf
xchg
push
adc
jne
dec
sbb
jg
or
cmp
mov
add
jnp
cmp
sub
je
mov
mov
ficoms
push
pop
jne
push
rorl
mov
sti
jl
push
and
inc
addl
mov
cwtl
cs
clc
add
xor
dec
sub
into
push
in
push
lods
movsl
xchg
dec
mov
mov
cmp
add
push
lea
mov
mov
pop
cmp
fsts
fists
imul
add
lea
push
or
mov
adc
mov
out
clc
imull
shr
stos
data16
sbb
push
popf
jmp
jmp
je
pop
and
les
jne
ds
lock
sbb
xchg
pop
enter
rcll
xchg
mov
ja
adc
push
adc
enter
or
stos
dec
lea
outsl
adc
aam
push
push
mov
sub
jge
out
popa
pop
enter
jmp
inc
pusha
movsb
pop
pop
ret
lret
push
push
sbb
movsl
dec
push
pop
imul
aam
mov
filds
aad
bound
pop
xchg
xor
add
das
cmp
fs
subb
push
sti
popa
nop
fwait
sbb
or
xchg
add
and
shlb
inc
push
mov
or
inc
das
xchg
jecxz
inc
mov
mov
mov
add
xchg
mov
cmp
jmp
nop
daa
fcoms
inc
clc
nop
sti
pop
jbe
je
xchg
testb
dec
movsb
nop
xlat
and
xchg
dec
shrb
movb
cmp
pop
sarl
fmull
inc
push
lea
add
mov
pop
or
push
xor
or
in
subl
ficompl
call
pop
fnstsw
popf
inc
repz
xor
das
xchg
pop
cmpsb
sub
popf
loope
into
inc
ljmp
jge
or
in
mov
or
je
ja
nop
loop
cmp
shll
pusha
shl
nop
lahf
cmp
inc
jmp
das
repnz
inc
dec
mov
mov
call
sub
fsubrl
xor
or
hlt
andl
lods
jmp
adc
mov
mov
daa
mov
fcompl
pop
cltd
sbb
rorb
push
cmpb
xchg
or
dec
and
fstps
mov
and
push
cwtl
xor
jge
lock
shll
pop
mov
mov
sub
cmp
imul
gs
incl
add
cmpsb
push
in
xchg
cmp
push
jg
jmp
decb
nop
ret
add
es
je
push
lret
and
mov
mov
cmp
jne
lea
mov
pop
pushf
push
add
and
lds
push
or
or
mov
iret
or
nop
loop
and
dec
push
xor
mov
call
push
jo
movsl
fsubrs
gs
cld
sub
mov
add
jbe
xchg
add
addr16
dec
stc
dec
dec
and
bswap
into
push
adc
enter
sbb
mov
cmpsl
push
pop
enter
insb
stos
sbbl
inc
jmp
jle
test
cmp
dec
ret
setno
cmpw
jbe
movsl
mov
imul
inc
add
push
leave
and
inc
mov
dec
lods
adc
enter
js
inc
int3
ja
jbe
unpckhps
jne
and
and
lds
pop
jp
jle
or
mov
sti
add
jle
push
or
pop
jmp
mov
mov
jecxz
std
jle
or
sub
pop
inc
push
or
stos
test
push
mov
ret
and
jmp
int
inc
je
jmp
push
inc
ja
je
push
inc
out
adc
add
push
mov
mov
mov
cmp
ret
mov
jne
int3
adc
cwtl
and
cmp
xorl
xor
movsl
and
pop
cli
rol
xchg
ret
xor
pop
pop
dec
ret
rcl
push
mov
lcall
int
outsl
daa
movsl
or
and
sti
lret
push
or
adc
das
into
jo
or
call
add
aam
mov
sbb
push
mov
shr
and
xor
clc
sarb
mov
movsl
xchg
jno
imul
cltd
sar
dec
insb
dec
push
cld
lea
sbb
mov
notl
enter
ret
inc
jmp
push
mov
push
shll
test
pop
push
inc
push
cmp
loope
xchg
push
sub
xchg
push
in
and
mov
xor
stos
or
xchg
negb
jge
mov
idivl
in
or
movsl
add
mov
xor
mov
stos
repz
aas
mov
sub
in
inc
leave
jg
addb
add
pop
pop
jg
inc
aam
mov
xchg
jp
xchg
mov
mov
push
orb
and
mov
push
orl
dec
enter
repnz
js
xchg
sbbl
sbb
cwtl
or
daa
dec
jge
adc
jb
ljmp
pop
test
jge
xor
mov
sub
inc
jae
pusha
pop
call
add
dec
xor
enter
mov
jmp
ret
pusha
das
pop
adc
or
or
mov
jle
add
test
xor
or
shrl
gs
or
lret
dec
aaa
test
dec
imul
inc
and
js
mov
cmp
xor
stos
ljmp
xor
jg
cmp
jl
sbb
xor
dec
stos
cmpb
dec
cmp
fnstcw
sbb
push
jmp
xor
inc
pop
lea
loop
or
adc
stos
or
pop
inc
clc
adc
les
xchg
lods
xor
dec
loope
dec
push
push
jns
mov
xchg
mov
add
imul
adc
mov
add
sti
xor
incl
add
mov
jmp
sub
add
or
add
repz
inc
nop
push
dec
je
cmovnp
mov
cli
test
aas
in
pusha
ss
xor
sub
sahf
shll
stos
jecxz
sahf
jnp
inc
or
jne
xchg
das
out
test
lea
adc
or
icebp
add
lret
inc
cwtl
mov
and
imul
mov
push
push
gs
in
ret
orb
lods
ja
pusha
loopne
pop
pop
inc
loop
xchg
sub
cmpsb
xchg
add
icebp
and
inc
mov
sbb
pop
lahf
pop
cltd
sub
sub
sub
add
dec
sub
shll
mov
adc
adc
xor
popf
sub
pop
mov
insb
aam
loopne
mov
test
bound
adc
ss
and
inc
push
pop
or
push
xchg
add
ret
mov
cmp
divw
inc
push
fs
adc
jle
add
add
sbb
inc
mov
jmp
sub
rclb
dec
or
clc
mov
pop
or
and
call
repz
xlat
ljmp
lock
imul
popf
mov
je
fidivl
pop
fbstp
push
call
jnp
mov
cwtl
dec
add
call
add
cwtl
sub
sahf
or
xor
stos
mov
jae
adc
jns
add
mov
dec
or
daa
cmpb
icebp
and
push
dec
js
adc
in
jmp
data16
or
adc
sahf
xchg
and
xor
cld
push
or
test
ljmp
add
rorb
pop
fisubrl
or
adc
mov
sub
add
add
rorl
test
mov
xorl
or
rcl
mov
pop
mov
sub
add
repnz
add
and
cwtl
push
in
bound
cli
mov
or
fimull
mov
push
imul
add
dec
mov
sub
aam
jo
and
pcmpeqw
dec
adcl
xor
and
xor
add
lea
sub
push
pop
call
imull
jmp
cmp
call
mov
pop
loope
inc
loop
pop
loop
dec
xchg
sub
fistps
pop
call
mov
xor
or
add
mov
xchg
movsb
add
pop
dec
lods
mov
enter
and
clc
sub
and
bnd
mov
shl
testb
nop
add
icebp
add
stos
fcmovne
dec
test
mov
push
cli
popf
inc
cmp
cmpsb
std
xchg
mov
call
cmpsb
jg
add
cwtl
xor
fsubl
in
data16
incb
getsec
addb
daa
xor
incl
jb
js
or
lock
sbb
movl
dec
nop
pop
jle
xor
incb
or
sub
lock
sub
mov
aas
mov
mov
sub
test
stc
test
sub
fistl
fstpl
push
fwait
cmpsl
add
or
xchg
clc
repz
cmp
fsubrp
inc
mov
das
mov
sub
pusha
fldl
xchg
sarl
mov
lahf
dec
sub
pop
or
jne
push
dec
or
mov
enter
cs
test
sbb
cld
xor
ds
or
or
mov
xor
rolb
les
in
cmp
mov
mov
add
jl
add
pushf
dec
adc
gs
and
jge
xchg
ret
mov
mov
mov
pop
pop
xchg
add
ja
decl
subl
fs
xor
sub
pop
mov
dec
sub
loopne
mov
dec
int
xchg
push
pop
lods
xchg
dec
int
rcl
cld
push
and
sarb
push
int3
jp
mov
mov
arpl
cwtl
xchg
cmp
jb
fsts
jmp
aam
lcall
mov
or
add
insb
mull
push
hlt
mov
xchg
bound
and
cmp
push
or
jno
mov
es
pop
sahf
dec
clc
adc
push
cmpsl
and
push
mov
inc
dec
rorb
or
sub
push
fstpl
icebp
dec
fwait
daa
push
sbb
les
insl
add
cmp
and
or
xor
adc
int
adc
add
mov
mov
and
push
push
mov
and
add
add
popf
jnp
and
testb
xor
cmpsl
das
dec
arpl
xchg
or
mov
mov
push
fnsave
nop
jns
push
push
add
pop
jno
or
mov
movsb
push
push
cwtl
aam
push
push
or
testb
pop
rcll
dec
call
rcll
lcall
or
test
inc
xor
aad
xorb
scas
movsb
popa
clc
out
and
ss
es
fdivl
or
mov
in
mov
and
fptan
sub
jae
sub
sar
adc
jne
push
adc
push
push
out
lea
imul
xorl
and
or
mulb
jle
je
xchg
cmp
popf
dec
stos
nop
pop
dec
lock
push
or
mov
xchg
les
jns
xchg
pop
inc
leave
aam
repnz
fs
sub
movsb
dec
leave
sub
push
add
mov
pushf
rcll
mov
cld
jae
insl
in
jb
dec
aam
lock
leave
popa
push
sbb
mov
or
cmpsl
xor
outsl
xlat
mov
push
outsb
testl
dec
add
cmp
add
mov
mov
mov
push
lock
jne
push
lods
sub
xchg
stos
mov
jb
xchg
push
pop
mov
je,pt
clc
dec
jo
mov
push
sub
mov
sbb
std
xor
jg
push
loop
je
or
clc
xchg
ret
and
addb
inc
scas
popa
sbb
fimull
sub
adc
fdivrs
xor
inc
push
ljmp
rcrl
mov
fdivr
push
adc
call
into
loop
out
adc
cmp
jle
jmp
lods
aad
push
inc
and
adc
jae
out
mov
pop
or
mov
sub
push
imul
cmpl
call
jne
sbb
xor
subb
nop
mov
jmp
test
push
sub
cmc
test
add
jne
aaa
inc
mov
jmp
add
cmp
mov
jmp
ficomps
je
in
mov
in
addr16
dec
hlt
push
add
sbb
test
cmp
mov
cld
dec
mov
cltd
sub
sbb
inc
mov
ja
pusha
add
fdivr
fiaddl
test
mov
push
push
and
xor
xorl
popa
cwtl
out
std
adc
call
jne
sbb
mov
sbb
pusha
pushf
jmp
sub
popf
xor
pop
testl
dec
je
shlb
and
decb
add
add
test
push
add
jp
adc
iret
and
aaa
popf
scas
jo
mov
and
mov
sar
adc
ljmp
aad
mov
mov
and
dec
inc
add
xchg
popa
test
xchg
hlt
xchg
mov
iret
push
and
or
data16
or
es
mov
push
xchg
sbb
inc
mov
sub
push
cli
mov
adc
push
lea
outsb
mov
jbe
mov
fldenv
or
mov
dec
and
mov
testl
addb
aam
mov
pop
sbb
or
int
sub
push
sub
dec
pop
mov
hlt
pop
jae
popf
popf
jmp
pop
jae
or
mov
leave
cmp
add
aam
sub
push
je
adc
xchg
arpl
mov
stos
lods
test
xchg
shl
jmp
inc
out
inc
add
in
lods
or
test
jge
add
rclb
enter
ja
test
push
mov
or
push
daa
pop
jge
insl
cld
mov
ja
xchg
jle
cmp
push
mov
rcll
mov
je
imul
push
lret
push
leave
mov
js
clc
cs
into
jmp
js
mov
push
lea
or
enter
arpl
test
enter
call
pop
jmp
inc
sar
jg
cmp
jne
orl
clc
adc
push
adc
imul
sbb
test
jo
ljmp
mov
or
pop
xor
sub
push
orb
stc
jns
cmpl
dec
lret
xor
adc
add
push
jb
jmp
sar
sub
js
sub
xchg
and
aad
in
add
lds
dec
test
xchg
pop
xchg
ret
insb
or
ret
push
imul
jb
sub
dec
popl
leave
or
xor
and
sub
pop
mov
sahf
scas
push
cmp
in
std
or
divb
push
lock
and
dec
clc
nop
sub
dec
mov
loopne
cltd
mov
cli
dec
pop
and
inc
rorl
js
xchg
mov
leave
xor
in
mov
scas
xchg
mov
push
mov
xchg
shll
lcall
pop
int3
lret
push
pop
push
inc
jnp
insb
xchg
jnp
nop
pop
mov
cmp
xchg
jmp
jo
loopne
cld
aaa
cld
inc
test
xor
jmp
sbb
sbb
ret
insb
add
add
add
or
adc
and
or
nop
outsl
xor
repnz
test
nop
decb
jnp
out
mov
or
xchg
and
inc
fistpll
dec
xor
cld
adc
movups
mov
pop
jae
xchg
mov
pusha
sub
xchg
mov
jge
pop
scas
adc
dec
popa
xchg
push
cmpsb
dec
in
mov
test
cld
mov
and
xchg
or
popf
jns
push
mov
call
mov
les
or
dec
dec
enter
lahf
dec
mov
or
fs
icebp
mov
mov
mov
and
sbbb
mov
pop
xchg
fs
xor
xor
mov
and
inc
nop
and
nop
sub
out
adc
mov
xchg
dec
mov
mov
cmpsl
icebp
aad
out
cmpsb
mov
shlb
cld
push
rolb
ljmp
adc
or
cmp
push
push
das
outsl
lods
fs
xor
cmp
pop
fs
loope
lock
call
icebp
adc
mov
dec
subl
mov
insl
inc
push
idivb
or
ret
cmp
sbb
sbb
adc
pop
dec
pop
xchg
or
mov
mov
cmpb
mov
and
push
cwtl
or
inc
jl
pop
pop
adc
xor
je
and
aam
push
mov
sbb
sub
or
cmpsb
nop
enter
adc
mov
cmpsl
pushf
and
test
std
pop
or
adc
aad
adc
add
add
xchg
xchg
pop
push
push
call
push
inc
and
enter
jns
int3
or
mov
sbb
jne
mov
mov
or
push
or
adc
pop
xor
push
pusha
and
cli
clc
adc
cmp
ljmp
fwait
inc
das
mov
outsb
loopne
divl
out
int3
test
add
or
and
add
push
inc
sub
and
add
cmpb
or
inc
mov
push
add
adc
add
mov
cmp
or
leave
divps
dec
sarl
jg
mov
push
leave
push
sub
adc
inc
faddp
sub
mov
lock
add
ret
cmpsb
pop
dec
outsb
hlt
pop
movsl
push
adc
andb
push
xor
sub
aad
addl
dec
ret
xchg
cmp
sub
das
jae
sbb
loopne
adc
cmpsb
adc
sbb
mov
cmc
mov
mov
rcll
clc
inc
cmp
lret
push
mov
sub
adc
je
add
inc
jb
push
xor
mov
enter
mov
sbb
mov
inc
sbb
and
hlt
xor
push
or
pop
pop
out
mov
sub
dec
enter
mov
inc
out
push
je
sbb
sub
pop
mov
jb
inc
mov
out
js
xchg
movsb
push
stos
xor
jae
pop
lret
jne
cld
cmp
loopne
or
jmp
add
jg
addr16
cwtl
movsb
clc
pop
and
pop
icebp
mov
ret
xchg
shl
dec
jo
push
push
add
xor
adc
call
push
mov
sbb
cmp
mov
add
adc
rorl
sbb
mov
mov
iret
push
rep
pusha
or
jne
pop
jne
les
mov
pop
loope
push
dec
sub
jbe
or
adc
jne
mov
mov
and
sbb
setne
mov
or
pop
xor
xchg
adc
cmp
lea
push
and
add
mov
cmpl
cwtl
xchg
rorl
pop
inc
sbb
jmp
lock
adc
xchg
int
inc
sbb
dec
lea
pop
mov
pop
in
adc
stc
and
inc
adc
sub
mov
sti
pop
arpl
loop
popa
mov
daa
orb
lock
das
and
stos
or
sbb
fwait
mov
sub
sub
ljmp
loopne
dec
jmp
pop
mov
mov
fwait
sub
mov
dec
in
outsb
sbb
in
test
xchg
aaa
inc
test
fsubl
add
inc
pop
mov
bound
shl
mov
sub
adc
xlat
or
sub
push
movsl
insl
nop
nop
enter
mov
js
shrb
mov
or
inc
sub
and
hlt
or
enter
push
adc
xor
cmp
sub
rol
push
and
jmp
and
bound
mov
call
out
push
sbb
push
hlt
mov
inc
sub
enter
stc
or
push
dec
out
leave
loop
stos
nop
cltd
sahf
mov
stc
leave
enter
insl
das
fs
jne
or
insl
add
cmp
pushf
and
sub
or
jo
or
pop
out
les
push
lret
test
adc
and
into
test
sbb
push
mov
push
and
pop
or
aad
repnz
mov
pop
push
lods
imul
icebp
or
xchg
jns
xor
jl
push
xor
mov
adc
pop
cltd
xchg
jns
jo
imul
sbb
push
jo
arpl
pop
mov
lods
call
push
lock
adc
xchg
adc
int3
aam
enter
adc
xor
and
dec
jo
test
les
shll
cwtl
fsubl
nop
dec
hlt
adc
and
dec
js
nop
xorl
repnz
and
inc
pop
or
push
adc
and
dec
mov
inc
xor
xor
xor
dec
cmp
sbb
xor
or
imul
lcall
sbb
adc
push
call
sbb
ret
xchg
sbb
xchg
inc
enter
fucom
inc
mov
rclb
dec
and
inc
dec
and
loope
sbb
mov
or
mov
mov
mov
dec
or
mov
rorl
inc
test
and
xchg
mov
pushf
sub
xor
xchg
xchg
sub
cmpsb
pusha
inc
mov
cmpsb
sbb
cmpsb
cmp
test
cld
cltd
and
adc
or
adc
je
dec
xor
in
fs
dec
and
fs
fs
mov
pusha
dec
clc
in
dec
rcrb
inc
pop
and
scas
jae
sbb
hlt
adc
mov
pop
jnp
mov
dec
bound
sub
add
adc
mov
mov
push
adc
xor
add
sbb
sub
push
mov
and
pop
adc
sub
mov
insb
aas
and
adc
out
or
movsb
cmp
mov
or
cwtl
fs
sub
test
and
rolb
xor
lcall
mov
imul
subl
sbb
xchg
mov
pop
pop
loope
fidivl
inc
mov
xor
lods
push
icebp
or
jno
cwtl
lret
jb
stos
jp
adc
jae
add
add
in
outsl
int3
adc
mov
push
inc
push
inc
push
pop
cld
test
icebp
test
jbe
mov
add
sbb
clc
loopne
dec
xor
inc
adc
out
cld
inc
mov
jns
add
push
and
pop
xchg
mov
xchg
mov
ret
into
addl
mov
jg
loopne
dec
outsb
push
js
add
sbb
dec
daa
movsl
push
sub
scas
or
dec
ljmp
push
cli
sub
or
testl
scas
push
cs
mov
stos
test
push
aas
orb
scas
push
sub
xchg
clc
xchg
out
out
or
jne
sarl
je
daa
and
sub
and
sbb
popf
mov
in
pushf
xchg
stc
aam
inc
sbb
lods
mov
jge
imul
push
outsb
or
dec
push
adc
shl
movsl
jge
sub
mov
xchg
gs
mov
jbe
xlat
xlat
xor
clc
aam
test
enter
scas
pop
jo
pop
add
cs
lods
insl
imul
mov
pop
or
xchg
jne
sub
xchg
loopne
jmp
pop
jle
int3
roll
dec
mov
sbb
lret
scas
xor
dec
add
or
sbbl
jmp
xchg
dec
rorl
aas
notb
or
pop
cmc
inc
add
popa
mov
pop
cld
sub
cli
xor
shr
cwtl
mov
test
into
lea
outsb
in
inc
pusha
jae
rol
loop
xchg
adc
jmp
push
andb
cmp
jne
xchg
insb
or
shl
push
dec
cmp
push
sbb
or
loope
loopne
pop
and
fsubrs
mov
sbb
xchg
sbb
push
adc
enter
or
inc
push
mov
inc
push
jb
sbb
sbb
and
and
xchg
and
mov
sub
or
mov
push
jne
mov
mov
push
add
mov
fs
mov
das
rorl
sbb
imul
mov
and
and
mull
loopne
push
xor
sbb
sub
fsubl
mov
lea
mov
movl
mov
mov
xchg
cmp
sub
sub
push
dec
sub
cltd
and
fimull
sub
jb
and
sub
dec
sbb
pop
inc
jns
jb
push
xchg
jp
scas
jbe
adc
int
adcb
pop
je
sub
mov
cmp
fcomps
seta
fisubl
lret
cmp
xchg
rorb
fwait
push
lret
xchg
cmc
lret
jmp
adc
lret
xor
adc
jg
or
push
push
inc
lock
clc
adc
add
mov
inc
jp
mov
pushf
xchg
cwtl
push
int
shlb
dec
test
or
out
add
sub
sub
outsb
and
xlat
inc
in
mov
inc
add
sbbl
ret
pop
dec
and
add
dec
sbb
add
sti
push
cs
dec
dec
push
pop
mov
pop
adc
push
pop
and
dec
popa
xchg
mov
mov
and
push
mov
mov
cmp
js
or
popf
jno
arpl
test
pop
adc
cmpsb
mov
pop
gs
and
outsl
sub
xchg
cmp
arpl
std
pop
jo
adc
or
push
dec
jo
nop
push
in
cmp
mov
cltd
js
std
lahf
xchg
es
dec
aaa
xchg
xor
sbb
pop
and
movsb
pushf
fstl
int3
xchg
scas
sub
loopne
dec
outsl
xchg
mov
and
out
js
out
xchg
out
sbb
sub
mov
cmp
insb
dec
xchg
in
pop
icebp
pushf
out
jg
leave
inc
aas
xor
push
xor
and
xchg
pop
jo
adc
icebp
sbb
mov
adc
and
loop
les
out
adc
and
and
adc
lock
jb
cmp
cs
mov
cs
mov
enter
mov
sbb
mov
and
in
jb
cmp
pop
mov
and
inc
enter
jb
sbb
int3
mov
mov
das
ljmp
das
or
xchg
int3
sbb
pop
ret
push
xchg
xchg
scas
fsubl
jne
mov
push
inc
cltd
test
and
cmp
shl
fistl
test
cmpsb
pop
push
mov
mov
inc
sbb
sub
xor
cli
xor
fbld
call
lock
mov
and
cmp
daa
mov
dec
xchg
sbb
repz
loop
and
add
cmp
push
in
imul
repnz
adc
pop
int3
jne
or
inc
rclb
mov
mov
test
or
mov
test
inc
push
outsb
imul
jae
xchg
jo
pop
jae
fildll
test
mov
xchg
adc
shll
pop
cs
push
aam
in
ret
out
mov
cltd
push
and
cld
sub
out
add
inc
xor
jge
jge
cmp
clc
mov
add
jne
out
loopne
inc
lcall
lcall
dec
cmpb
je
sbb
cld
cmp
aas
add
or
mov
dec
push
clc
jbe
push
dec
call
jge
mov
ds
xlat
insb
repnz
scas
pushf
cwtl
mov
call
jge
ret
int
mov
icebp
gs
lea
or
fs
lret
sbb
xchg
inc
xchg
mov
fwait
inc
lahf
pop
mov
call
adc
adc
pusha
cs
jge
xor
dec
rolb
shlb
sbb
push
ds
movsl
sahf
or
stos
jle
jbe
mov
add
jmp
sub
mov
dec
out
pop
dec
jp
pop
push
sbb
sbb
int3
ljmp
popa
jno
push
pusha
aas
push
push
sbb
ja
push
inc
xor
scas
dec
nop
mov
lcall
orb
inc
psrld
adc
jae
sub
dec
sub
rorb
lods
push
unpckhps
rorb
je
push
push
sub
xchg
pop
mov
add
jbe
jb
mov
push
sub
mov
push
or
xchg
jmp
rorb
inc
mov
lds
cmp
sbb
push
inc
inc
inc
movb
mov
mov
subb
pop
or
mov
sbb
pop
sub
mov
sbb
cmp
mov
psubusw
aas
lret
xchg
xchg
adc
dec
inc
xor
push
add
addr16
adc
adc
cmp
adc
sub
cmpsl
dec
shl
bound
pop
sub
cmp
add
repz
nop
mov
sub
shlb
pop
mov
movsb
fcmovu
fcmovnu
loopne
adc
fs
dec
mov
dec
sarl
lcall
out
fistpll
pusha
and
inc
cmp
xchg
inc
lahf
xor
adc
out
inc
fwait
lock
sub
sub
dec
mov
xor
push
clc
xor
add
in
or
insl
dec
sub
cmp
cltd
dec
and
xorl
cmp
dec
adc
cmp
inc
or
inc
adcb
jb
mov
test
xchg
dec
loope
arpl
out
clc
data16
mov
leave
adc
or
xchg
int3
and
and
add
mov
inc
sub
adc
jl
xor
mov
pop
lahf
insl
mov
adc
inc
add
and
pop
push
inc
or
test
test
test
test
and
addl
and
jo
and
sbb
inc
sub
arpl
clc
jecxz
jl
mov
inc
jp
push
cmp
fs
addr16
xchg
xchg
xchg
sub
iret
jmp
dec
push
es
in
inc
shll
pop
mov
pop
push
adc
call
cmp
imul
cmpsb
push
pop
mov
fcoms
stos
inc
push
clc
mov
stos
orb
push
or
jae
adc
popf
jnp
mov
jl
jl
es
jmp
outsb
in
jns
lock
push
arpl
lret
mulb
and
sub
dec
incb
dec
xchg
loopne
dec
or
pop
jge
imul
sub
sbb
add
insb
jmp
sahf
call
and
mov
cmp
xchg
dec
add
popa
xor
dec
popa
std
pop
test
popa
push
mov
sub
sub
sub
test
lea
add
loope
mov
sbbb
ret
data16
or
mov
or
cmpsl
sti
insb
int3
mov
outsb
sub
jns
filds
adc
or
dec
add
jl
push
xchg
repz
lock
cltd
dec
mov
adc
pop
pop
sub
cmp
ret
nop
dec
or
push
adc
jg
jne
loopne
push
faddl
bound
push
test
add
loopne
mov
xor
and
push
and
sbb
push
fisubl
adc
add
jno
cmp
in
jae
outsb
popa
cmp
xchg
mov
cmp
lods
inc
pop
lcall
jb
lds
sbb
clc
ss
in
push
or
pop
fidivs
test
dec
or
adc
xchg
pop
pushf
shlb
mov
inc
test
loop
fwait
mov
gs
incl
popf
icebp
aas
andb
jmp
stc
or
dec
push
lahf
iret
mov
jmp
mov
cltd
out
inc
jmp
mov
xchg
loope
sbb
data16
sbb
repnz
xchg
leave
cmpsb
sahf
repnz
cmp
ds
bound
mov
jp
mov
aaa
jp
pop
add
add
out
lret
adc
mov
in
xor
inc
popa
and
add
out
jne
frstor
push
push
add
sub
jmp
inc
les
data16
and
jns
and
xchg
and
shlb
push
and
xor
adc
cltd
adc
dec
and
sbb
ljmp
fadd
and
mov
cld
inc
std
or
nop
sbb
add
jb
dec
cmp
pop
test
inc
scas
mov
mov
xchg
xchg
scas
mov
pop
inc
fsubs
test
jns
dec
or
orl
es
divb
fs
ss
lock
outsl
mov
mov
jns
pop
or
adc
loopne
jp
push
push
xchg
pushf
movsl
push
push
xor
sbb
je
or
jne
pusha
adc
push
add
aaa
push
mov
or
and
and
or
sub
and
sub
fisttps
cmpl
push
xchg
cmp
xchg
adc
jo
lods
xchg
mov
enter
das
or
push
mov
ret
or
sbb
int3
call
jnp
or
pusha
jb
sub
orb
cmpsl
sub
lret
lods
call
nop
add
sbb
lret
add
enter
and
sbb
sub
imul
mov
inc
repz
andb
ljmp
or
mov
mov
jbe
mov
add
les
mov
repnz
and
inc
mov
adc
sbb
orl
sbb
pop
sub
jbe
dec
push
ja
xor
cmpsb
dec
or
popa
outsb
jge
jbe
cmp
jne
push
nop
add
or
and
adc
jmp
mov
loop
pop
scas
add
clc
lods
or
jne
xor
es
cs
mov
sub
lret
aam
sub
cli
or
ja
mov
or
jmp
pop
sub
ja
mov
cmp
fadds
mov
cmp
xlat
out
xchg
sub
rcl
jbe
in
push
or
movb
pusha
ja
mov
orb
sbb
or
ret
mov
fwait
or
movsb
jne
and
push
cmp
adc
test
and
pop
test
push
les
fs
or
cmp
ja
sub
loope
add
pushf
xor
sub
mov
shr
sbb
loop
fisttps
sahf
xor
inc
nop
jge
cwtl
lcall
and
sub
insl
or
or
adc
sub
sub
or
mov
jae
sub
popf
sbb
jmp
xor
int3
jae
pop
inc
mov
adc
mov
xor
jg
and
mov
mov
and
dec
jbe
imul
cmp
sbb
or
and
cmp
adc
jmp
orl
test
dec
faddl
cwtl
imul
and
sub
push
jb
mov
in
cmpsb
call
lock
lretw
clc
enter
lcall
dec
scas
xor
or
ja
fldl
je
mov
inc
pushf
push
inc
adc
mov
ret
adc
insl
fistpl
fisttps
dec
mov
scas
insb
sub
inc
sub
jne
mov
add
inc
cld
jne
jmp
jno
xor
xlat
cld
sub
dec
xor
pop
sub
xor
insl
fs
add
enter
inc
sahf
fldl
lock
sbbl
cs
xor
pop
movb
sbb
xor
hlt
loop
fwait
or
lock
xor
popa
test
jne
mov
adc
xor
or
xor
push
and
sub
pusha
mov
xor
push
dec
adc
push
mov
pop
adc
mov
xor
sub
dec
xlat
sbb
adcb
dec
movsb
notb
sub
jecxz
sbb
xchg
adc
jl
fs
add
or
xor
xor
xchg
jmp
cmp
je
cmpsb
xor
xchg
adc
sbb
xchg
into
or
rcll
je
jl
jb
sbb
mov
jbe
nop
inc
mov
adc
sub
xor
mov
sub
aad
mov
hlt
sbb
sub
mov
mov
dec
and
push
popf
inc
jmp
inc
jb
xchg
xor
es
and
pop
sub
leave
cmp
or
add
xchg
xchg
sahf
cmp
gs
inc
inc
out
jo
cmp
lds
add
add
mov
or
or
int
cmpl
xor
fcomip
loop
and
or
lds
pop
inc
dec
cmp
sbb
mov
cmpxchg
fisttpl
test
or
mov
dec
roll
call
cmpsl
cli
loope
xchg
cmpsb
cmpsl
in
stc
adc
dec
xor
xor
ficomps
or
std
fbld
adc
adc
xor
mov
push
fwait
and
test
mov
xchg
jmp
mov
cmp
cmp
cmp
notb
and
add
adc
sub
sub
rolb
js
call
xlat
xchg
hlt
or
pop
dec
leave
adc
or
xorb
mov
ret
adc
mov
pop
sub
push
pushf
cmp
and
sahf
add
es
mov
sub
inc
fistl
mov
jmp
out
jae
cmp
push
fisttps
and
inc
call
adcl
xchg
dec
or
shrl
std
pop
add
pop
dec
test
sbb
sbb
dec
adc
int3
jb
sbbl
int
into
cmp
pop
orb
sbb
cli
push
cld
out
pop
push
dec
inc
lock
imul
add
test
int
add
cmp
add
js
xchg
push
mov
push
cmp
inc
and
pop
inc
lret
sub
jmp
push
icebp
xchg
add
ret
shll
daa
cmp
aaa
jp
js
fbstp
repz
int
cs
inc
movsl
imul
insb
cmp
pop
pop
sahf
jge
mov
pop
push
xchg
test
push
test
add
mov
inc
add
call
inc
add
xchg
mov
jle
je
xchg
xor
inc
dec
add
nop
push
push
sti
cli
mov
add
mov
jbe
aam
mov
cmp
xlat
cmp
and
inc
adc
and
je
mov
sub
jb
lds
dec
push
inc
jnp
mov
std
xchg
fcmovb
sbb
pop
mov
nop
sub
adc
xor
cmp
push
xor
sahf
mov
sti
inc
adc
sar
adc
mov
out
fldcw
mov
adc
push
punpcklbw
sarb
aam
inc
pop
push
repnz
inc
stos
adc
flds
repz
pusha
push
lea
push
sarb
shlb
popa
daa
cmp
nop
add
je
or
out
add
jo
adc
cmp
adc
and
jne
mov
jmp
jo
push
repnz
adc
or
adc
adc
cmp
cmp
clc
ja
pop
adc
jne
or
out
and
pop
sahf
mov
fbld
inc
clc
nop
sub
jmp
lods
movsb
mov
and
inc
mov
push
cld
inc
sbb
fdivs
dec
call
stos
cmp
and
adc
push
or
out
push
test
das
mov
or
dec
mov
push
shl
cmp
insb
icebp
mov
and
fsubs
xchg
addl
or
subl
adc
xchg
les
mov
and
nop
cs
cmp
jmp
shlb
sub
pop
outsl
lret
stos
sub
inc
add
sub
cs
xor
mov
inc
fisubrl
fiadds
pop
inc
and
nop
fmulp
loop
inc
out
jmp
dec
nop
jno
lcall
rorb
popa
stos
or
mov
mov
stc
aas
sub
pop
jmp
loope
mov
rclb
test
test
aas
fidivs
and
pusha
sti
jo
enter
or
insl
fs
enter
jecxz
and
out
enter
daa
mov
pop
les
adc
xchg
in
mov
adc
mov
and
pop
push
adc
jo
adc
js
xchg
xor
xor
and
add
pusha
inc
insb
add
xlat
mov
lods
sbb
aam
xor
and
fisttps
lds
add
unpckhps
xorb
and
mov
xor
inc
or
fstpt
jo
adc
imul
and
add
sarl
lock
adc
scas
inc
cmc
repnz
call
or
xchg
adc
test
sbb
adc
inc
xor
add
add
fcomps
sub
test
sbb
pop
jmp
xor
mov
add
aaa
cmpb
xchg
jno
std
js
add
cmpsb
fiadds
inc
add
mov
inc
out
pop
bound
test
xchg
test
imul
adc
mov
mov
out
push
pop
pop
es
out
ret
xchg
xor
call
les
das
push
test
subl
test
bound
add
and
roll
jae
sti
shl
mov
add
out
loope
pop
test
add
pop
aaa
std
js
out
testl
mov
cmpsb
jae
in
adc
inc
mov
movsb
out
cmp
outsb
test
add
js
push
je
add
flds
outsl
addr16
test
add
dec
sub
xchg
orb
push
add
movsb
fstl
jno
xchg
sub
popa
or
fwait
mov
ret
popf
jl
mov
or
mov
ret
iret
fimuls
shlb
test
mov
inc
or
mov
jp
jle
fwait
sub
ret
sub
cmp
cli
test
out
aam
std
popa
inc
les
hlt
sarb
aam
fnstcw
mov
cltd
fistl
jl
pop
jbe
xor
clc
adc
mov
xor
push
lods
les
not
es
je
fstpt
adc
sub
mov
mov
mov
decl
sub
or
inc
lds
nop
xlat
add
pxor
cwtl
push
adc
mov
test
mov
lods
test
add
int3
or
scas
test
bound
inc
fistpll
sub
incl
sub
dec
jle
test
test
imul
test
out
and
adc
inc
add
mov
test
jle
testl
loope
jnp
dec
out
add
outsl
test
xchg
roll
daa
and
xchg
cmp
cli
inc
outsb
push
or
push
test
xchg
les
shr
and
mov
movl
addr16
adc
mov
fdivrl
push
sub
adc
xchg
divb
or
or
je
negb
inc
adc
adc
sti
dec
cwtl
icebp
rol
sbb
fbstp
add
jl
iret
push
jbe
jmp
cli
mov
inc
mov
cmp
ja
mov
mov
fmuls
inc
lock
stos
xchg
repz
adc
xchg
in
loope
add
xor
lds
mov
movb
cmpl
jb
cmp
push
pop
xchg
push
int
inc
pop
add
fwait
pop
mov
sub
movsl
jo
mov
icebp
jnp
push
adc
inc
xchg
test
push
pop
pop
imul
cli
rorl
xor
push
fdivrl
mov
jl
xchg
stc
pop
adc
adcl
clc
inc
leave
inc
and
mov
pop
xor
mov
inc
bt
outsb
xchg
out
cli
inc
add
bnd
ljmp
dec
and
mov
movsl
icebp
repz
pop
in
inc
aad
in
jnp
jge
test
jl
inc
mov
dec
xor
cmp
js
jae
pop
jl
mov
xchg
call
testb
cmp
jl
cmp
mov
or
fdivrs
add
pop
xor
ret
mov
jo
add
xlat
mov
inc
incl
adc
mov
repnz
pop
add
sbb
pop
fnstenv
jl
shr
sub
mov
add
add
inc
inc
inc
add
inc
dec
dec
dec
dec
add
push
push
push
push
push
push
mov
pop
inc
pop
jo
loopne
add
mov
sbb
push
fwait
jecxz
fs
cmp
jae
mov
movsb
add
testl
fisttpl
jl
xchg
sbb
adc
xor
pop
cmp
or
and
or
dec
insb
ret
sbb
call
adc
movsb
ret
sahf
mov
push
xchg
lock
jl
mov
nop
jmp
fiadds
mov
mov
scas
int
ds
aam
push
mov
ret
orl
inc
nop
lret
xchg
xchg
push
push
pop
hlt
jns
pop
xchg
mov
xchg
mov
jo
shr
jb
stc
dec
test
lods
shrb
dec
call
jne
inc
inc
xchg
sbb
test
dec
and
fistps
xor
jl
jecxz
sbbl
test
jae
movsl
jbe
outsw
out
insl
jnp
dec
loop,pn
test
lds
pop
mov
inc
rol
adc
push
push
mov
daa
pop
adc
add
call
mov
push
and
je
xor
or
call
int3
push
adc
mov
push
dec
add
jae
pop
test
dec
xor
sub
xor
xor
pop
pop
dec
pop
lock
shlb
shrb
mov
bswap
arpl
or
rolb
repnz
or
or
pop
loope
xor
lods
xchg
dec
stos
ljmp
push
inc
or
pop
push
push
inc
xchg
xor
popa
push
ror
mull
xchg
mov
cmp
jae
inc
leave
push
stc
int3
or
loope
push
xorl
inc
jo
icebp
xor
jge
rcrl
cmp
mov
fstl
fists
or
adc
rep
mov
sbb
mov
xor
mov
leave
jl
sub
sub
or
les
movsl
adc
mov
add
and
push
mov
sub
jge
push
cmp
fiaddl
or
add
daa
sti
pop
jg
push
adc
cltd
sbb
adc
jbe
mov
inc
out
mov
leave
and
xrelease
jb
adc
jmp
lret
push
lea
clc
nop
rcll
mov
lret
mov
and
add
loopne
loopne
add
pop
jb
ja
push
inc
xchg
movl
cmp
repz
cld
pop
and
ja
ja
push
and
lret
dec
mov
xor
sbb
cmp
stos
repz
nop
cmp
jb
out
repz
ds
je
and
push
dec
dec
dec
adc
mov
xchg
sbb
and
mov
sub
or
push
push
fstl
loopne
jg,pt
dec
add
adc
or
out
dec
mov
scas
ret
jb
add
nop
jg
or
je
or
and
lea
jmp
and
movb
push
dec
sbb
cmpl
in
in
dec
nop
loop
aas
xor
mov
inc
int
and
iret
add
and
xor
push
hlt
or
add
push
orb
add
mov
xor
nop
je
xchg
jmp
cmp
sub
lea
out
dec
inc
icebp
in
mov
dec
data16
cmp
es
pusha
movsb
sbb
jns
movsl
imul
push
cmp
je
dec
add
pop
ja
enter
or
shl
mov
mov
ja
nop
ffreep
lcall
or
or
idiv
xor
cwtl
xchg
pusha
clc
in
add
jae
lcall
xor
and
int
ds
roll
mov
dec
ljmp
lret
inc
inc
pusha
or
or
jne
xchg
mov
add
std
sbb
xchg
xchg
mov
imul
inc
jae
inc
sbb
loop
dec
decb
adc
xlat
rorb
pop
adc
jge
testb
xor
pop
xlat
xor
add
jmp
jmp
or
insb
lea
clc
shl
xor
int3
lret
cli
pop
je
jle
inc
in
mov
dec
ds
inc
fisttps
sub
or
mov
or
pop
nop
inc
ljmp
iret
loop
pop
adc
jmp
sti
out
adc
xlat
xchg
nop
call
jmp
ljmp
or
loopne
stc
stc
cli
add
adc
inc
stos
les
jb
or
xchg
bnd
call
mov
mov
cltd
loop
adc
sbb
push
lcall
and
adc
loop
adc
and
push
sahf
mov
adc
sub
push
mov
insb
and
and
push
lods
dec
jmp
xor
inc
stos
les
jb
or
cmpsb
mov
inc
mov
test
mov
lahf
mov
stos
cs
mov
mov
pop
lods
rolb
fildl
outsl
shlb
incb
mov
inc
imul
or
cmp
rorb
popa
and
and
cmpb
mov
ret
lods
xor
popa
jne
fisubrl
mov
or
in
mov
inc
mov
mov
mov
dec
mov
push
jle
sub
cmp
test
stos
sbb
aad
add
sbb
and
sbb
adc
aad
and
daa
push
pop
pop
adc
mov
into
and
popf
stos
rorl
add
inc
ret
adc
jle
mov
cmp
mov
push
mov
out
nop
inc
xor
push
leave
mov
jbe
movsb
sbb
xor
pushf
mov
iret
push
sarb
push
iret
mov
and
dec
adc
push
mov
scas
mov
adc
bound
rorl
cltd
dec
lods
sub
mov
aad
or
adc
fstpt
and
cli
loop
adc
sub
push
fildl
xor
stos
fldl
shlb
push
jbe
test
je
or
push
loopne
adc
mov
rcrb
xorb
adcl
in
and
jbe
test
inc
mov
iret
jbe
test
cmp
jbe
test
and
mov
in
sub
xorb
test
and
pop
stos
out
jmp
or
int3
jmp
inc
push
cmp
and
sub
and
pop
push
leave
hlt
in
in
push
test
aam
xor
insb
lcall
adc
stos
out
stos
sbb
ret
lcall
popf
stos
icebp
mov
push
and
inc
or
mov
inc
mov
aad
sub
nop
add
aad
pop
mov
stc
push
mov
shlb
cmp
stos
sti
mov
inc
popf
aam
sbb
push
std
mov
popl
mov
inc
mov
daa
lret
mov
mov
push
sub
stc
add
int
or
in
dec
mov
add
mov
rcrl
jbe
nop
dec
xchg
pop
mov
stc
xor
das
add
mov
icebp
int3
sbb
adc
push
in
push
jmp
addb
or
jae
or
ret
inc
test
mov
out
fdivrs
loopne
dec
ret
push
xchg
jp
add
test
jbe
or
mov
aas
adc
loopne
xlat
ror
adc
jbe
dec
jne
jb
pop
ljmp
mov
in
mov
stc
dec
push
pop
jmp
mov
push
adc
push
adc
fst
or
rorb
stos
je
daa
mov
int
push
sti
leave
jae
jp
sbb
add
xor
lret
notl
mov
mov
mov
xlat
xchg
jae
xor
push
xor
inc
movsb
jne
mov
aam
add
aad
inc
fs
mov
frstor
bound
or
and
out
sub
mov
hlt
push
aam
inc
and
mov
dec
inc
mov
mov
adc
or
adc
out
std
fidivrl
adc
dec
mov
push
add
out
adc
push
push
push
push
xchg
xor
mov
ret
loopne
rol
sub
ficoml
or
adc
and
test
movb
cmpl
jne
scas
lahf
adc
push
movsl
test
pushf
inc
xor
pop
inc
xor
and
lret
pmullw
mov
add
sbb
lock
hlt
sub
mov
rorb
dec
sub
jb
jecxz
or
and
jae
cmpsb
push
push
mov
inc
sbb
iret
mov
jnp
or
xchg
pop
dec
lea
mov
clc
pusha
aad
fs
xor
cmp
pusha
jmp
jle
iret
xor
xor
pop
and
call
add
andb
sub
outsl
test
sub
push
mov
lock
or
int
daa
sub
and
imul
cmp
stc
push
adc
mov
sbbb
xorps
push
and
or
insl
pop
pop
cmp
jbe
jae
pop
cmp
sets
inc
mov
add
and
imul
pushl
lret
cmpsb
pop
sub
push
jle
jbe
into
push
adc
mov
sub
mov
sub
adc
sub
cmp
or
test
adc
enter
cli
push
push
loope
jmp
mov
jmp
mov
mov
sub
ret
movsb
test
adc
or
ret
add
mov
les
push
xor
cmp
jl
incl
xlat
pop
xor
inc
cwtl
fsts
test
push
fisttpl
sbb
and
fiaddl
add
hlt
lea
xor
decb
pop
dec
adc
xor
test
mov
xchg
or
push
sbb
mov
push
xchg
stc
lods
mov
movsb
shll
and
xchg
mov
mov
and
ljmp
movsb
push
sbb
call
test
jmp
fbstp
stos
aad
sbb
and
mov
adcb
mov
dec
and
and
or
test
inc
call
or
adc
rclb
jnp
adc
shl
mov
sarb
or
adc
xor
loop
or
js
or
push
xchg
scas
push
ljmp
loopne
lahf
cltd
repnz
js
mov
outsb
mov
fs
mov
ret
push
inc
jns
fists
adc
cmpsl
and
lcall
movsl
out
loopne
xchg
or
test
jo
loopne
mov
adc
push
mov
pop
test
mov
add
sub
adc
or
jmp
mov
pushf
je
and
shrl
jne
scas
ret
sbb
enter
cmp
into
jne
or
test
push
cmpb
je
add
ffree
adc
inc
ds
sbb
add
pop
adc
push
mov
fistl
sub
jbe
adc
cmp
mov
and
sbb
and
inc
xchg
cltd
and
and
or
repz
shl
mov
push
or
imul
aas
push
movhps
mov
sbb
inc
fs
pushf
cs
dec
push
stos
inc
shl
fnstsw
pop
adc
jno
push
push
push
pop
ret
adcl
dec
adc
mov
cmp
dec
out
adc
dec
sub
mov
movl
lds
cltd
push
in
or
js
adc
call
pop
fidivs
jmp
aaa
cltd
xor
inc
std
or
mov
pop
xor
sbb
ret
adc
mov
add
mov
mov
pop
mov
mov
push
add
ja
pop
pop
xlat
adc
xchg
push
inc
dec
filds
push
mov
adc
mulb
pop
sbb
mov
jle
pop
pushf
pop
inc
mov
push
loope
loopne
and
cmp
add
lock
pushfw
push
cltd
and
mov
cmp
fistpl
push
mov
sarl
ror
ret
mov
jge
or
dec
in
or
daa
shll
fsubrl
xlat
xchg
in
ret
pushf
jl
cwtl
jb
adc
mov
lods
or
xchg
lret
xor
ljmp
cwtl
incb
pop
loope
arpl
mov
jb
mov
arpl
lea
adc
sub
jmp
movsl
jnp
ret
icebp
inc
repnz
push
mov
mov
add
dec
add
mov
aam
cmp
mov
cmp
mov
cmp
cmpsl
sbb
adc
dec
outsb
xchg
inc
inc
and
cs
pop
outsl
jp
enter
inc
jmp
gs
push
cmp
fwait
jne
dec
xor
or
push
dec
outsl
popa
fs
push
inc
cwtl
sub
rcrb
movsl
sahf
call
mov
jecxz
jmp
jns
add
jo
clc
inc
or
bound
and
xor
push
add
jns
adc
pop
xchg
dec
test
jo
mov
ss
flds
hlt
dec
call
stos
scas
cmp
xchg
jg
or
mov
adc
and
mov
inc
ret
ja
movl
pusha
pop
xor
inc
and
ds
jle
and
fs
jne
aas
cs
push
hlt
and
xchg
mov
mov
enter
inc
loope
in
test
pushl
jecxz
lods
sub
out
gs
add
ret
xchg
je
sub
jmp
mov
call
xor
push
mov
movsb
push
pop
fbld
call
mov
fisubrl
inc
int
mov
movsl
fwait
xchg
jge
adc
push
add
xchg
push
pop
mov
test
test
and
call
out
inc
fmul
jmp
and
fsub
mov
fimull
iret
ret
iret
ds
mov
nop
jae
cmp
movsl
nop
fsub
lcall
xchg
idivb
sub
ret
aas
mov
rorl
adc
jle
jo
fildl
mov
in
inc
stos
test
lea
lods
inc
fldenv
shlb
adc
adc
fsub
push
in
add
call
jno
aas
mov
mov
and
mov
rorb
dec
fmuls
adc
mov
inc
sub
loopne
and
in
jne
test
leave
or
fcoml
inc
int3
adc
ds
jmp
or
int3
movsl
ljmp
pop
in
xchg
adc
icebp
adc
jmp
jne
inc
add
and
jl
ljmp
lahf
aam
fs
sbb
jmp
ret
rcrl
mov
ficomps
stc
add
loop
adc
add
sbb
in
mov
or
shll
addl
mov
repz
ud0
addb
ljmp
adc
mov
xchg
in
ljmp
jns
mov
push
mov
pop
orl
xchg
enter
mov
or
lea
pop
add
test
jne
leave
push
repnz
data16
or
ret
sti
or
adc
sub
push
pusha
loope
ret
and
in
leave
jge
inc
sbb
jo
test
inc
jmp
add
lock
loop
std
pusha
mov
adc
clc
data16
push
mov
mov
and
cli
lret
push
adc
push
fsubl
cli
mov
loop
jno
and
inc
call
add
add
cwtl
push
add
adc
cmp
push
lret
add
adc
mov
sbb
pop
dec
adc
stos
sub
and
sbb
pop
jecxz
and
lret
xor
jmp
mov
shlb
xor
shrb
loopne
ret
jno
mov
sbb
mov
inc
cwtl
xchg
in
mov
in
imul
and
and
push
xlat
lock
jb
xchg
mov
mov
push
or
and
cs
ds
xchg
leave
mov
call
adc
xchg
cmp
pop
jmp
pop
sbb
cmp
mov
imul
sub
mov
push
movsl
sbb
iret
neg
dec
les
loop
xor
outsl
jmp
pop
ja
pusha
push
push
mov
fldl
mov
mov
movsb
aaa
dec
std
mov
push
test
scas
loopne
iret
push
cmpsb
jo
test
cld
clc
push
xchg
push
xchg
clc
mov
xchg
dec
sub
jmp
aad
dec
dec
test
push
and
adc
out
test
outsb
test
sub
fiaddl
sub
dec
fdiv
sbb
jg
adc
pop
in
daa
loop
adc
adc
loope
shlb
iret
test
xor
or
repz
fiadds
sarb
inc
mov
mov
jo
sub
aaa
xchg
adc
sub
mov
or
push
jae
or
jecxz
push
inc
inc
mov
dec
pop
push
inc
loop
adc
mov
aad
fadds
or
push
jmp
imul
adc
lret
addb
jne
data16
push
dec
enter
scas
sub
push
and
lods
cmp
sub
ja
cmp
mov
or
fisttps
mov
lret
pop
mov
mov
pop
jg
clc
and
inc
lock
loope
fiadds
imul
sub
push
or
js
xor
mov
out
jns
mov
sbb
inc
pop
out
pop
mov
fsubs
bound
sub
cltd
es
movsb
jbe
xor
pop
push
xor
add
nop
adc
add
stos
fistpll
cmpsb
add
movsl
push
adc
or
mov
fimuls
lods
es
pop
add
dec
cltd
cld
popf
pop
es
imul
ficoms
out
lahf
mov
ret
test
or
and
into
mov
or
sbbl
cmp
int3
cmp
push
mov
push
sub
les
adc
ret
popa
cld
lock
ljmp
sub
add
ja
jmp
in
or
mov
hlt
orl
dec
loopne
mov
orb
push
inc
adc
xchg
push
xor
adc
or
adc
fnsetpm(287
xchg
inc
jecxz
and
inc
hlt
sahf
jecxz
shrb
xor
add
xor
or
adc
push
cmp
pop
data16
dec
cmp
jo
ja
sbb
nop
mov
push
xorb
mov
adc
int3
dec
push
or
movsb
das
mov
imul
cmc
dec
xorb
mov
loop
shr
add
adc
xor
jne
inc
pushf
lcall
dec
pop
mov
jle
mov
in
popa
add
nop
adc
test
push
dec
call
jmp
int3
clc
lahf
je
imul
pusha
add
inc
lds
sbb
and
pop
jmp
adc
inc
sti
dec
in
push
or
xchg
sbb
xchg
xor
mov
mov
sbb
jp
push
ds
cmp
xor
les
loop
cmp
lcall
mov
orb
sar
mov
inc
dec
call
inc
lea
lahf
adc
sbb
mov
jmp
addr16
daa
or
je
add
mov
incl
or
adc
je
rorb
xor
mov
and
or
leave
push
mov
cmc
bound
push
dec
call
sbb
sub
jmp
and
jg
jp
mov
mov
xchg
dec
lret
icebp
pushf
push
aas
data16
or
shr
jne
inc
movzwl
push
mov
add
filds
jl
push
inc
rolb
jge
lret
push
sbbb
pusha
sbb
push
jne
inc
add
cmp
jne
iret
ljmp
flds
inc
clc
mov
stos
mov
mov
scas
and
adc
jb
add
mov
shl
add
inc
xchg
add
cmp
jne
lahf
or
dec
or
call
ret
inc
test
xlat
enter
jle
and
ss
jge
or
push
sub
mov
pop
jae
push
lcall
jmp
push
push
pushl
and
cmpsl
mov
fcoml
and
mov
push
or
je
aad
orb
sub
dec
ds
xchg
and
jnp
or
jb
aas
and
sti
inc
inc
adc
loopne
push
scas
pop
mov
mov
adcb
jmp
inc
push
pop
mov
enter
jne
mov
lret
jge
in
or
mov
std
pop
sub
nop
testl
jne
and
cld
lcallw
pop
je
xchg
scas
mov
or
add
add
jne
cmp
data16
inc
jmp
mov
lret
outsl
test
sbb
jns
fcmovbe
loop
cmp
movswl
es
aaa
adc
sbb
sbb
adc
shrl
addr16
sti
push
push
and
sub
scas
inc
inc
mov
pop
gs
test
fucom
and
in
cmp
hlt
mov
hlt
repnz
fmuls
cmp
xor
xlat
or
lods
je
rorl
mov
inc
lcall
push
jae
jg
or
ds
add
push
enter
mov
pop
dec
gs
add
stc
xchg
and
or
xor
out
popa
add
mov
les
inc
mov
arpl
pop
push
push
push
pop
pusha
pusha
rorb
shlb
and
or
or
ds
add
add
xchg
pop
lret
push
mov
lahf
xor
cs
mov
xchg
jns
jge
fmuls
inc
dec
add
inc
decl
mov
ffreep
hlt
sub
add
test
jb
cmp
lret
and
das
or
push
pushl
cmpsl
or
insb
mov
mov
pop
mov
mov
sbb
leave
sti
sub
pop
pop
testl
mov
mov
jns
inc
cmp
std
inc
mov
call
sbb
add
addb
pushf
adc
mov
cmc
ds
movsl
and
cmp
out
push
xchg
clc
xor
sbb
push
sub
lock
and
xor
inc
pop
lds
repnz
xchg
orb
xchg
mov
mov
rep
stos
or
pop
and
rorl
sub
xor
lock
movsl
cli
jno
pop
icebp
pop
and
repnz
pop
ja
ss
sar
adc
adcl
inc
data16
xor
je
push
andl
mov
cmp
repnz
mov
mov
repnz
pop
inc
lret
jns
dec
push
sub
pop
insb
imul
mov
push
mov
lret
icebp
stos
pop
pop
jmp
scas
and
mov
inc
ja
and
and
jmp
or
inc
sbb
mov
sub
ret
into
outsl
gs
imul
or
outsl
icebp
pop
nop
dec
sti
xorb
jne
push
popf
in
lahf
popa
push
ret
cmp
lret
iret
fistl
hlt
mov
jae
xor
or
jno
xchg
fcomp
and
andb
xchg
mov
dec
js
xchg
cmp
xchg
xor
call
adc
repz
cmc
push
mov
js,pn
hlt
cmpsl
push
adc
sub
inc
push
repnz
mov
mov
lods
ja
xor
aas
sub
ret
lea
push
out
lret
jns
mov
and
cmc
aaa
push
push
pop
or
scas
and
imul
add
fcom
push
add
aad
jecxz
icebp
dec
out
inc
and
jne
arpl
jae
les
fs
imul
insb
cmpsb
das
cmp
ljmp
ret
stos
push
les
add
shl
fimull
mov
push
mov
mov
xlat
mov
sub
out
jb
push
push
sbb
ljmp
ret
add
mov
test
add
adc
lods
push
mov
jl
mov
cmp
jle
jns
mov
mov
adc
stos
out
mov
test
ret
call
xor
repz
mov
jecxz
jmp
adc
loopne
inc
jmp
or
test
pop
or
test
xor
jne
lea
add
fs
dec
xor
lock
sub
adcl
enter
loopne
xorb
call
das
cmp
shll
jmp
cmp
jne
ja
loope
dec
xchg
fistl
sbb
xchg
or
xor
aas
ret
jne
mov
sbb
sbb
call
fsubrl
sub
popf
add
add
stc
dec
pop
je
jne
dec
mov
xor
sarl
sub
add
dec
outsl
nop
rolb
pcmpeqw
and
xchg
insb
add
push
xchg
das
stc
or
push
jne
mov
cld
daa
lea
jo
dec
inc
fidivs
fsubp
jno
and
orl
pop
test
clc
stos
fldl
cmpsl
mov
cmpl
xchg
inc
jbe
sub
enter
pop
test
fnstsw
and
xchg
js
cli
lahf
mov
mov
cli
xor
jns
fistps
fbstp
jp
movsb
fistpll
jnp
out
dec
fistpll
pop
mov
jl
mov
daa
xor
jl
dec
pop
adc
clc
outsl
xchg
mov
outsl
lea
jle
xchg
xchg
inc
adc
mov
xchg
xchg
adc
mov
popl
pop
or
sbb
cmp
sub
popf
add
or
imul
pop
cmpl
add
lcall
cmp
cmpsl
dec
into
cmp
add
push
aaa
add
test
arpl
cmp
or
push
or
add
inc
ret
and
dec
fbstp
add
dec
jne
jne
js
lds
cmp
das
dec
test
or
xchg
rorl
fwait
cs
adc
stos
int3
bound
sbb
repnz
xorb
jl
mov
jne
outsb
aaa
inc
cmp
ret
xor
mov
js
nop
adc
mov
or
inc
hlt
xchg
sbb
add
sub
cmp
push
and
jne
push
sbb
cmp
cmp
mov
mov
and
jns
je
insl
add
sbb
fs
jb
jae
add
js
jo
out
mov
inc
or
xchg
or
adc
es
xor
call
test
cmp
repnz
scas
or
aam
adc
inc
ret
xor
lock
test
xlat
push
or
cmpsl
arpl
call
lock
movsl
aam
inc
clc
sub
out
into
sub
adc
mov
mov
fists
mov
loopne
and
pcmpeqw
push
jmp
into
hlt
or
pop
sbb
xor
adc
jae
add
push
and
xchg
mov
adc
inc
and
add
jne
mov
movsl
xor
cld
sbb
jae
xchg
repnz
in
adc
pop
rorl
or
mov
mov
push
clc
sbbl
sbb
ret
ljmp
fs
lods
sub
cmp
or
ja
jne
mov
sub
sbb
dec
je
add
dec
fs
sbb
adc
movsl
pop
jae
ljmp
jnp
adc
lret
jbe
dec
add
push
ficomps
fiadds
or
arpl
test
mov
mov
mov
leave
dec
mov
or
and
or
or
rclb
xchg
je
hlt
test
subb
dec
ret
scas
pop
and
push
nop
add
cli
dec
dec
push
daa
pop
and
out
xchg
and
dec
in
and
push
push
inc
or
xchg
dec
fs
adc
clc
adc
xchg
xchg
icebp
sbb
mov
and
mov
and
add
lds
leave
ja
dec
pop
jb
shll
fmull
and
aas
mov
and
mov
add
ret
adc
inc
add
loop
jb
fwait
cld
or
inc
mov
and
sbb
js
adc
xor
or
sub
or
test
sbb
jb
pop
sub
or
pop
shrl
xchg
lahf
add
gs
add
or
adc
inc
cmp
push
ret
xchg
js
xor
inc
push
mov
test
rcll
and
je
roll
cmp
aaa
or
and
sbb
adc
inc
ljmp
adc
sbb
sub
xor
inc
xchg
dec
sub
cltd
pop
adc
or
jle
mov
and
adc
and
mov
adc
and
adc
sbb
and
adc
or
and
dec
dec
xchg
push
sub
xchg
and
test
mov
dec
mov
inc
loope
nop
inc
push
add
out
mov
adc
and
push
or
inc
adc
mov
adc
and
dec
xor
inc
dec
push
mov
pop
and
dec
insl
xchg
je
jnp
orb
sahf
dec
movsl
xchg
lods
and
enter
dec
fisttpll
or
sub
or
sub
or
jg
and
sub
dec
aaa
mov
sbb
sbb
outsb
xchg
or
xchg
mov
dec
into
xchg
fisubrl
out
xchg
repnz
decb
or
sub
inc
adc
push
dec
push
xchg
pop
and
insb
jae
jp
andl
and
mov
mov
test
fs
fmull
xchg
ljmp
push
sbb
sbb
xchg
sub
xor
mov
dec
and
dec
fs
imul
inc
jle
mov
adc
mov
jecxz
cmp
inc
mov
int3
sub
shll
pop
ficoml
call
xchg
sub
xor
add
or
jmp
or
mov
and
add
fisubs
jg
fisubs
pop
mov
mov
dec
jp
lahf
in
sbb
cltd
xor
pop
dec
xor
mov
sbb
std
dec
or
daa
popf
stos
sub
sub
sub
cmpsl
pop
stc
add
test
into
sub
loop
dec
push
mov
pushf
shl
add
cmp
in
add
je
fadd
nop
rcll
xchg
xchg
cmp
fs
orb
mov
mov
mov
jg
je
jae
jns
ds
int
nop
push
inc
or
jmp
and
inc
addl
sub
adc
and
dec
sub
push
sbb
push
dec
or
sti
add
shl
cmp
cli
xor
or
aaa
jecxz
sub
shlb
popf
gs
test
sbb
adc
dec
scas
sub
leave
shrl
fmul
mov
cmpb
scas
fildl
cmp
inc
push
xorb
inc
inc
dec
aaa
push
or
jae
mov
mov
add
hlt
xor
popf
bound
inc
mov
push
gs
mov
mov
pop
sti
lock
shlb
addr16
jbe
xor
sbb
je
insb
inc
jo
sahf
outsb
imul
cmp
cmp
mov
das
ret
jne
cmpsb
ret
xor
repz
imul
jmp
jecxz
lret
aas
mov
iret
mov
sbb
in
test
push
rol
loopne
test
addb
jns,pt
ret
and
cmp
cmp
lock
cmpsb
inc
adc
or
sub
cmpsl
inc
test
mov
test
or
mov
sub
lds
inc
add
push
and
mov
test
push
cmp
pop
adc
adc
pcmpeqw
das
adc
jg
xchg
mov
pop
or
rcr
out
les
adc
loope
sub
inc
test
push
cmp
cli
or
ds
cmp
cltd
sub
fildl
ret
cmpsb
rolb
js
data16
popf
inc
dec
test
aas
shrl
inc
adc
cmpb
ds
mov
pop
and
or
or
push
and
or
inc
adc
cmp
and
adc
jae
inc
adc
bound
adc
outsb
repnz
cmp
outsb
repnz
cmp
outsb
repnz
cmp
ret
sbb
mov
push
cld
ret
jp
push
inc
push
add
pop
adc
and
sub
nop
or
push
cli
adc
pop
cmp
hlt
and
push
jo
lods
pop
cltd
and
sahf
push
cmp
daa
lds
daa
int3
cmpb
hlt
cmp
inc
cmpsl
jns
jo
and
and
les
and
out
pop
sbb
lods
pop
sbb
mov
pusha
cmp
mov
xchg
dec
adc
jne
lods
adc
mov
bound
test
stc
enter
sub
xchg
and
inc
or
adc
or
stos
or
pop
push
or
cld
dec
clc
test
mov
lcall
add
das
cmp
or
in
xchg
imul
mov
xchg
or
or
testl
ss
push
mov
pusha
mov
popa
xchg
push
sub
notl
pop
pop
pop
mov
or
out
aaa
and
loopne
movsb
std
cmp
stc
aaa
dec
je
add
call
and
les
cmp
dec
mov
jb
sbb
aam
in
repnz
push
sub
mov
xchg
xor
xor
push
jge
or
int3
in
pop
push
xchg
hlt
cmp
cmp
or
adc
cmpsb
pop
sub
mov
pop
aad
jg
or
mov
hlt
jbe
xchg
mov
xchg
mov
stos
lret
mov
mov
nop
and
je
push
scas
pop
scas
stos
mov
sub
enter
add
repnz
push
lock
push
jp
push
je
mov
stos
outsb
test
adc
xchg
arpl
add
adc
push
loop
push
mov
add
addr16
mov
or
fmuls
mov
inc
and
popa
and
add
pop
add
std
cli
cmp
adc
loop,pn
sahf
push
inc
xor
fistl
mov
jns
dec
push
sub
call
push
lret
jns
or
sahf
push
push
lret
sub
movsl
sbb
push
jno
dec
and
or
push
loop
sub
jns
pop
pop
jmp
scas
and
cmp
or
pop
lcall
in
dec
dec
shrl
pushf
mov
jnp
cmp
test
rcr
push
adc
cmpsl
shl
es
mov
imul
mov
mov
and
movsb
es
dec
fisttps
lea
movsw
and
cmp
fsubrs
rol
lds
adc
xchg
inc
dec
aas
push
pop
mov
jmp
pushf
pop
inc
or
inc
inc
dec
sbb
fnstcw
imul
xchg
lret
inc
por
mull
inc
lret
inc
and
mov
les
jle
pop
cwtl
mov
cmp
jae
movsb
xor
adc
add
sub
cmpsl
and
cmp
sbb
pop
mov
pmaxsw
inc
faddp
mov
push
fldcw
add
inc
jne
push
cmp
cmpsb
jp
mov
fstpl
inc
mov
dec
js
sbb
push
inc
pop
cmp
inc
repz
xchg
or
and
add
adc
cs
sbb
xor
jne
sub
cs
out
xchg
mov
andl
or
mov
movb
mov
rcrb
xchg
jnp
scas
fbld
or
leave
xor
jecxz
mov
int
in
cmp
rolb
xor
outsb
sbb
rorb
jns
cwtl
and
push
lea
add
push
or
dec
sbb
dec
sub
pusha
cmp
sete
push
js
adc
hlt
jmp
fisubrs
cltd
mov
push
mov
or
adc
push
sub
out
mov
adc
inc
das
fisttpll
add
mov
mov
push
adc
or
or
nop
cvtdq2ps
iret
mov
das
scas
mov
mov
jnp
icebp
mov
xchg
dec
sti
imul
inc
adc
pxor
and
stos
jne
inc
data16
xchg
or
and
je
sub
mov
arpl
nop
push
inc
dec
push
pop
inc
jne
and
je
jno
sahf
push
sti
aaa
pop
or
jae
mov
sbb
fisubl
dec
sbb
fistpl
dec
leave
cld
data16
jne
imul
fmuls
in
or
jmp
sub
and
xchg
mov
xchg
and
adc
adc
sbb
sbb
mov
add
add
mov
jl
or
sub
fwait
sub
lret
dec
cmpb
add
mov
mov
mov
call
loopne
ja
out
sahf
cmpb
jbe
push
jne
call
add
inc
or
jnp
out
mov
addl
push
sbb
inc
mov
int3
cmp
xchg
adc
mov
inc
sahf
pop
fs
scas
xor
fsts
mov
inc
sarl
sbb
sub
les
mov
ret
inc
push
pop
pop
mov
mov
mov
sti
aas
cli
xor
mov
popa
push
mov
mov
dec
push
dec
and
or
pop
ret
and
aas
aas
inc
dec
push
call
insl
push
repz
testb
sub
cmpsl
push
lret
fsubr
dec
and
dec
sub
xor
ljmp
and
push
pop
mov
enter
dec
inc
dec
cmp
push
cmpsl
push
xchg
push
pop
rolb
and
dec
dec
sbb
and
es
sub
sub
outsl
adc
xor
jmp
mov
sbb
add
and
popf
push
push
scas
ficomps
cs
inc
leave
xorb
or
xchg
xchg
nop
mov
mov
adc
sti
and
jne
out
fisubrs
outsb
or
fldl
or
pop
or
sub
push
jnp
gs
clc
clc
fwait
nop
inc
mov
aaa
adc
daa
push
ret
push
jns
adc
dec
inc
das
mov
inc
cwtl
xor
iret
and
loop
in
and
leavew
xor
jnp
push
sbb
pop
dec
cmp
test
repnz
js
aad
imulb
je
int
cmp
cmp
adc
xchg
xor
adc
adc
add
pop
push
repnz
rorb
call
call
and
movsl
or
add
call
or
stos
and
xchg
lahf
push
lock
cmp
in
or
dec
jae
jl
adc
ljmp
adc
mov
lods
js
sti
xor
push
sub
push
xchg
push
ja
push
mov
lret
dec
mov
sub
out
stc
mov
dec
out
mov
adc
movsb
out
addb
pop
inc
imul
es
and
mov
ja
test
fs
movsb
out
jmp
imul
jmp
add
pop
add
xor
icebp
pop
jmp
push
je
pop
movsb
xor
or
negl
xor
mov
popf
or
ja
xor
dec
or
add
adc
inc
leave
mov
out
call
sub
or
and
xorb
mov
or
pop
punpckhbw
cwtl
cmc
push
mov
popf
lret
xor
push
sbb
sbb
or
pushf
fisttps
inc
jecxz
and
rclb
je
sub
inc
push
or
pop
push
sub
test
mov
divl
push
mov
stos
push
xorl
fwait
cmp
je
add
nop
adc
call
sahf
scas
push
mov
jp
push
inc
or
or
popf
aam
mov
push
pop
mov
adc
xor
stos
shrb
inc
sti
fstl
pusha
mov
sbb
pop
inc
fildll
sub
hlt
or
mov
or
or
add
in
sub
popf
rcll
cmp
leave
sbb
xchg
sbb
push
andl
add
mov
and
movsb
das
inc
add
sub
out
xor
mov
add
or
sub
fs
adc
add
and
test
in
sbb
mov
and
ret
movsl
or
sti
lret
pop
or
pop
pop
and
aaa
pop
les
xchg
and
es
gs
sub
cltd
bound
xor
dec
stos
adc
cmp
cwtl
adc
push
adc
jae
pop
dec
push
insl
sub
push
mov
xchg
add
ror
xchg
mov
cmp
nop
dec
add
sbb
jne
mov
mov
scas
sub
adcl
lods
mov
mov
xor
sub
iret
sub
mov
cmp
xor
mov
aaa
jo
les
push
or
xchg
aaa
imul
mov
sti
pop
fs
aas
sub
inc
push
movsl
mov
cmp
int
aaa
mov
inc
test
push
lods
lea
or
push
inc
lods
xchg
push
adc
pop
pop
or
mov
sub
add
push
xchg
mov
add
push
adc
in
das
call
add
sub
pop
and
push
test
mov
push
gs
pop
mov
les
mov
xor
inc
imul
pushf
cmp
sahf
sbb
and
inc
add
mov
mov
sbb
scas
sbb
sbb
xchg
inc
aaa
jnp
adc
sub
inc
xor
jp
call
adc
adc
sub
inc
data16
call
push
inc
cltd
and
jae
sub
mov
sub
inc
push
push
loope
inc
jle
jl
test
ret
imul
orl
push
dec
inc
ja
lahf
jb
cld
jo
popa
jae
ja
push
fs
out
out
es
js
ja
dec
bnd
sbb
push
push
dec
dec
dec
adc
dec
pushf
and
inc
push
lds
mov
xlat
or
inc
movl
inc
add
pop
adc
sbb
and
lret
add
adc
dec
jg
fs
pop
push
sbb
sbb
pop
and
sub
sub
int3
jnp
movl
dec
fs
xor
add
sub
mov
push
sbb
or
mov
pop
push
mov
push
nop
mov
push
inc
enter
popf
or
loopne
shll
or
jmp
or
mov
fwait
lcall
push
in
and
lahf
rclb
push
push
fs
and
jp
dec
cmp
cmp
fs
mov
cmpsl
fistpll
aad
mov
sahf
cs
and
add
xor
pop
cld
push
jo
sbb
dec
push
cmp
inc
ja
mov
loope
pop
or
pop
sbb
push
lock
mov
mov
int
sub
fildll
mov
cmc
push
test
push
xchg
sub
lcall
dec
push
sub
popa
call
scas
sub
and
jns
pop
sub
jmp
dec
and
add
sub
jns
pop
pop
jmp
scas
and
into
xor
fadds
aas
lcall
or
pop
inc
sbb
repnz
and
bound
lret
xchg
scas
inc
ljmp
das
or
dec
add
dec
lock
inc
push
repnz
mov
adc
xor
lock
in
sub
xchg
dec
lret
jns
pop
sub
jmp
and
cmc
sahf
push
sub
xor
bound
inc
aaa
adc
and
lock
mov
mov
rclb
cmp
add
ja
clc
push
dec
outsb
arpl
loop
ljmp
rcll
aas
cmp
inc
xchg
mov
xor
mov
cmp
test
inc
cmp
dec
test
mov
inc
sub
xor
or
push
and
pop
outsl
test
out
xor
adc
mov
and
push
mov
or
jne
fcoms
or
sub
xor
popf
in
pop
imul
cmp
je
mov
mov
xchg
sub
cmpsl
rol
push
xchg
call
nop
inc
mov
sub
rorb
add
shr
inc
loop
inc
sarb
push
pop
mov
push
add
dec
or
add
inc
ret
and
stos
inc
mul
sub
sub
or
mov
sbb
mov
xchg
lds
arpl
jecxz
out
sub
pop
lods
cmp
movsl
or
ret
push
mov
jmp
inc
stos
mov
sub
cmc
pop
mov
mov
cli
rorb
pop
add
mov
add
push
cwtl
lea
cmpsb
shlb
pop
sub
cmp
cmp
add
push
dec
in
jmp
add
adc
les
enter
scas
xor
and
movb
push
pop
xor
or
je
pop
push
fcoml
incl
and
roll
jne
push
arpl
icebp
mov
test
inc
push
dec
sub
mov
sub
hlt
mov
shll
js
xor
xchg
and
inc
adc
das
and
push
sbb
add
add
sub
cmp
cmp
in
lods
inc
add
inc
pop
sub
pop
dec
or
mov
enter
add
scas
mov
ret
fucom
pop
test
inc
dec
push
xor
adc
jecxz
jo
and
dec
mov
push
inc
or
xor
jmp
xchg
mov
pop
js
repnz
jns
add
shll
pop
fs
int3
adc
repnz
test
cmp
lods
xor
stos
aam
aaa
mov
xor
mov
shlb
inc
add
mov
lock
xor
mov
data16
adc
cmp
xchg
rcrl
jmp
cmp
clc
xchg
movsb
and
gs
pop
xchg
in
jp
and
stos
inc
pop
sbb
mov
and
adc
lret
inc
dec
dec
or
jecxz
push
or
pop
or
mov
xchg
ret
inc
or
mov
clc
mov
xor
data16
sbb
dec
rcl
xchg
mov
cs
jae
sahf
adc
rcl
ja
add
sub
sbb
push
push
inc
leave
jne
outsb
xor
lcall
xchg
ds
imul
xchg
insb
gs
cld
stc
xchg
aas
adc
divb
in
jo
push
ljmp
and
cltd
push
or
xor
outsb
icebp
push
mov
inc
push
inc
mov
xor
and
mov
leave
dec
push
mov
sub
cmp
push
or
data16
adc
jb
test
mov
adc
stc
inc
lcall
shll
sub
aas
repz
mull
popa
or
mov
push
fs
mov
lods
je
jl
popa
add
mov
js
push
daa
fcmovu
inc
pop
add
add
xor
into
xor
std
mov
push
push
push
bound
mov
cs
push
les
or
inc
adc
loopne
push
cmp
ret
movl
cwtl
mov
xor
mov
adc
and
cmp
xorb
je
lahf
xor
push
lods
ss
inc
test
inc
adc
inc
add
push
int
imul
cmp
call
cmpsb
int3
sbb
pop
movsb
addl
adc
push
icebp
je
dec
and
call
aaa
pop
xor
pop
mov
in
mov
cmp
jno
lret
mov
or
or
fcoml
shlb
sbb
jae
les
and
sub
sub
jo
mov
call
test
xor
xor
or
cld
std
adc
push
push
and
cmp
cmp
clc
xor
sbb
clc
and
inc
mov
fs
cmp
xchg
and
enter
or
xchg
and
nop
shl
in
sbb
pop
mov
and
add
shlb
and
pusha
and
mov
roll
fs
loopne
and
cmp
xchg
and
enter
or
xchg
and
nop
loop
sbb
aam
xlat
aam
mov
mov
rolb
fs
xor
adc
enter
enter
and
nop
mov
xor
sbb
les
test
lods
xchg
and
or
leave
iret
xor
subb
pop
push
cmp
pop
mov
cmpsl
cs
cli
loopne
pushf
mov
and
cmc
sbb
xchg
sbb
push
mov
mov
pop
cmpb
pop
adc
xchg
test
xchg
push
sbb
xchg
js
pop
lret
pop
or
xor
fildl
xor
xchg
stos
std
sub
ficoml
cltd
add
and
push
ds
adc
xchg
lods
pop
pop
in
stos
adc
push
sub
fistpl
and
mov
xchg
les
push
test
xchg
movsb
lock
cmp
adc
out
mov
adc
add
incb
test
mov
sub
mov
sbb
in
mov
inc
mov
nop
lcall
and
inc
mov
cwtl
xchg
pushf
xchg
xor
push
lret
jno
movd
pop
dec
add
sbb
mov
dec
subb
pop
test
cmpb
fsubs
sub
mov
dec
ljmp
enterw
sub
movzwl
ret
inc
push
inc
insb
and
call
js
lahf
push
das
sub
out
mov
lea
aam
lock
popa
sbb
in
mov
xchg
xchg
enter
test
in
out
jno
pcmpgtb
cwtl
cmp
xchg
les
jb
dec
cmp
pop
xchg
xchg
jns
add
cmp
mov
xchg
mov
xor
push
addr16
or
adc
push
cmpsl
imul
sbb
inc
lret
mov
pop
data16
shlb
mov
push
outsb
add
dec
or
mov
mov
movsb
cmp
jne
push
add
je
mov
dec
loopne
es
sub
inc
mov
inc
inc
mov
pop
or
ficompl
push
pop
and
cmp
cmp
in
bound
xor
enter
push
and
or
sub
inc
sub
loop
pop
xchg
or
and
pop
or
test
or
add
sbb
movsl
pop
push
sbb
adc
and
adc
fs
stos
cmp
fucomi
fs
sub
or
testb
inc
je
mov
mov
mov
adc
inc
or
fwait
pop
adc
push
stos
add
sub
pop
fstps
je
ss
into
enter
or
and
jbe
or
mov
pop
mov
jnp
ljmp
jle
leave
jno
inc
out
sub
xchg
jmp
add
mov
insb
adc
test
mov
inc
xor
leave
mov
cmp
pop
mov
add
or
jne
pop
jbe
dec
cs
pop
imul
inc
iret
mov
mov
inc
push
imul
dec
outsl
fs
pop
test
sarl
dec
and
lock
mov
add
addr16
imul
adc
sbb
inc
outsl
jne
movsl
mov
sub
test
push
jo
arpl
callw
fwait
out
push
push
xchg
and
or
cmpsl
push
mov
push
inc
dec
push
pop
orb
inc
cmp
dec
inc
dec
cmp
in
sub
adc
xchg
adc
adc
hlt
dec
adc
imul
mov
scas
stos
data16
cwtl
jmp
push
pop
inc
inc
dec
sbb
dec
push
xor
xchg
out
ret
dec
inc
xor
imul
push
rcrb
divl
repnz
jp
and
mov
jmp
pop
fisttpll
lods
mov
dec
mov
jne
pop
hlt
insb
in
push
mov
and
and
out
lret
and
js
jnp
push
and
mov
jle,pt
mov
inc
imul
cmpsl
inc
movsl
ret
into
push
lret
pop
dec
push
cli
adc
fs
iret
pop
push
in
sub
mov
insl
xor
fsubs
stos
cmp
adc
dec
push
dec
andb
out
adc
gs
adcb
sub
stos
push
inc
fs
icebp
dec
arpl
sub
adc
mov
push
and
dec
or
lods
sbb
add
js
sub
sub
cltd
orb
pop
push
mov
sub
push
sub
mov
xchg
adc
sub
adc
and
cltd
fsubs
xor
xor
cmp
notb
inc
test
pop
sub
xor
loop
jnp
xor
push
pop
js
inc
test
xchg
adc
cltd
push
push
jg
loopne
adc
pusha
mov
mov
imul
sbb
sbb
daa
jne
nop
add
popf
leave
mov
loopne
push
jne
cld
adc
mov
js
dec
loopne
xor
cmp
jge
fcoms
add
mov
cmp
loopne
jnp
or
pop
sbbl
sahf
push
subl
mov
lea
fstpl
cmc
outsb
dec
jb
cmp
std
cmpsb
movsl
arpl
adc
cmpsb
sbb
add
mov
or
and
mov
dec
dec
or
pop
push
inc
mov
and
ffree
jnp
mov
or
fcom
je
test
sarb
data16
shr
adc
push
xor
test
and
xor
fisttpl
mov
push
sub
add
je
mov
roll
jne
dec
mov
pop
dec
adcb
cmpsb
jmp
adc
mov
inc
jne
out
gs
adc
push
push
sbb
mov
subl
ja
ja
pop
push
icebp
test
jns
or
ret
je
mov
pop
sti
sub
pop
or
jmp
scas
shll
mov
test
adc
mov
bound
sbb
insl
sub
repnz
xor
popf
push
xor
and
pop
cltd
xchg
arpl
cmp
cltd
xchg
and
mov
dec
cmp
scas
sbb
push
sub
mov
jle
mov
inc
push
adc
cmpsb
sbb
and
adc
shll
int3
push
cmp
pushf
push
xchg
lds
or
mov
mov
push
sbb
mov
inc
das
push
add
inc
adc
out
inc
ret
jb
ljmp
jne
inc
sub
jl
push
out
and
mov
push
sbbb
ret
nop
jl
inc
jmp
adc
mov
insb
sbb
mov
sbb
jmp
push
lods
lock
hlt
pop
rcl
scas
gs
add
or
pop
mov
repnz
add
mov
jns
aam
scas
into
xor
adc
loop
xor
push
bound
sub
mov
adc
or
aam
jno
sub
push
mov
leave
pop
push
gs
mov
pusha
adc
call
adc
cmpsb
push
cmp
and
jmp
and
add
insl
mov
mov
dec
xor
jmp
outsb
js
imul
sub
cmp
or
iret
adc
adc
call
aaa
clc
pop
movsl
xor
daa
push
and
cli
xor
ret
call
dec
cmp
movsl
or
lods
sbb
aad
inc
ret
fs
sub
hlt
mov
lret
push
or
clc
pop
mov
or
push
stc
xchg
add
cltd
xor
adc
mov
xchg
sbb
cmp
xlat
push
fistpll
push
lods
adc
rorl
popf
add
sub
xchg
pushf
sbb
and
add
xorb
dec
lret
jmp
mov
dec
add
cmp
xchg
sbb
and
xchg
mov
push
mov
jne
or
je
push
xlat
sbb
adc
pop
pop
mov
pop
inc
and
mov
fs
or
push
push
adc
sub
lock
xor
cmp
sbb
and
test
jecxz
aaa
jns
or
pop
lods
jl
aaa
mov
call
les
adc
xchg
cmp
xchg
or
test
and
icebp
mov
inc
clc
int3
outsl
call
rcrb
ljmp
sub
ja
adc
add
dec
pop
into
mov
sbb
test
xchg
push
push
or
mov
scas
mov
mov
pop
pop
sbb
push
loop
stos
mov
push
push
int3
test
sbb
pop
call
push
inc
adc
push
in
and
enter
in
cmp
pop
call
mov
jmp
push
lods
sub
mov
adc
test
xor
and
add
push
or
sub
inc
mov
mov
xlat
xchg
int3
mov
dec
sbb
adc
out
dec
in
push
lret
inc
mov
push
pop
movsl
sub
test
ffree
sbb
call
inc
xchg
push
mov
aaa
roll
popf
pushf
and
adc
xor
mov
mov
add
aad
xchg
xchg
or
jbe
push
push
int3
sub
mov
movsl
ret
rolb
cmp
stos
movsl
cmp
add
push
push
popa
cmp
lea
sub
push
test
and
imul
pop
dec
or
call
push
icebp
mov
mov
fbld
sbb
movsb
mov
pop
mov
rol
cwtl
stos
or
movb
call
bound
and
push
and
imul
nop
cs
cmp
popf
push
push
push
pop
sub
inc
push
sub
jb
xchg
es
dec
cmp
mov
push
bound
mov
push
pushf
push
push
mov
mov
loop
pop
and
sarl
adc
in
ret
pop
enter
cmc
push
mov
mov
movb
add
pop
add
pop
inc
insl
jmp
and
push
dec
mov
sbb
jl
lahf
movsb
sbb
cmc
inc
jne
dec
jmp
fldt
mov
cs
jle
out
pop
adc
mov
mov
imul
repnz
stos
mov
leave
add
in
sti
ret
add
sahf
test
inc
fstl
add
ret
mov
add
cmp
pop
add
jmp
mov
scas
adc
js
popa
imul
jns
add
movsl
ret
fidivl
push
rolb
cmp
inc
std
mov
fcomp
xchg
adc
adc
add
mov
xchg
stos
ret
and
sbb
je
imul
pop
cmp
mov
adc
inc
rorl
call
leave
lock
loop
sbb
jl
sub
inc
jg
cmp
adc
or
lret
int
dec
fldenv
loopne
xor
jmp
fstp
and
cmp
add
or
add
adc
movsb
mov
ds
movb
outsb
add
cmp
push
out
ret
ficompl
sti
sub
cmp
loop
push
add
xor
pusha
std
fdivs
add
jns
xor
out
add
lock
add
mov
pushf
add
add
xor
jle
adc
xchg
mov
or
push
sub
push
in
fs
bound
mov
push
les
iret
dec
mov
in
pop
dec
sbb
mov
andb
pop
negl
add
add
in
pushf
bsf
mov
jae
int3
add
or
jle
mov
sti
cmc
push
inc
rcrl
add
pop
movsb
insb
add
add
stos
repz
insl
out
lea
push
add
das
dec
call
add
movsb
mov
rorb
popf
inc
ficompl
out
push
dec
test
add
outsb
mov
popf
psrld
mov
cltd
add
or
pop
fcoml
cwtl
aaa
sub
push
scas
pop
cltd
out
in
add
inc
inc
sbb
inc
or
mov
mov
add
std
xlat
add
cmpl
jne
test
cs
sub
add
imul
jne
sub
outsl
movsl
or
cmpsb
jp
cmc
call
or
inc
sbb
add
dec
repnz
adc
pushf
aaa
add
mov
movsb
lods
add
fdivrl
and
sarb
btc
jp
je
add
popf
or
dec
add
dec
mov
rolb
ja
xchg
add
fbstp
sub
xor
xchg
mul
test
out
call
enter
add
pushf
and
ljmp
repz
or
inc
jb,pn
and
dec
add
mov
fwait
jnp
leave
push
mov
fstl
fnstcw
jmp
out
imul
std
add
fnstsw
sub
rolb
adc
mov
cmc
bnd
sbbb
mov
iret
mov
mov
xchg
gs
sbb
out
loopne
add
and
fs
testl
jnp
leave
imul
sarb
fcmovnb
loop
add
enter
mov
clc
ljmp
ficoms
push
inc
out
faddl
outsb
sub
inc
pop
sub
in
mov
or
cmp
add
xchg
ss
pop
inc
and
in
sub
inc
pop
sbb
outsb
les
sub
add
xchg
push
fsubs
push
mov
xchg
and
sbb
add
mov
insb
add
jmp
inc
add
fs
add
rclb
aam
cmpsb
das
add
ds
dec
add
in
es
jnp
jg
packssdw
jo
shlb
adcb
pusha
add
sub
jge
pop
bound
mov
cli
lret
sbbl
lcall
xor
xlat
loopne
cli
add
js
sbb
push
cmp
cld
rorl
call
jp
jne
add
shrl
pushf
push
xchg
insb
jae
cmp
aad
sub
fadd
add
dec
movsb
add
mov
xchg
ss
cs
icebp
add
sahf
inc
je
test
pop
stc
dec
insl
pcmpgtb
shlb
into
in
scas
leave
and
xchg
xchg
and
clc
icebp
pop
sub
pushf
jmp
test
pop
and
into
ret
lea
mov
jge
cld
or
lahf
filds
movsb
jb,pn
cs
jno
cmc
inc
jbe
data16
add
sbb
jge
insb
push
push
inc
repnz
pop
out
push
mov
add
dec
clc
bound
call
gs
loop
push
xor
pop
push
inc
int
and
cwtl
cmp
outsb
add
cmpsl
aad
mov
scas
add
lds
mov
mov
std
in
lock
add
jmp
scas
pop
icebp
aas
push
pop
cmpb
rolb
rolb
popf
sbb
dec
adc
stc
aad
add
in
mull
add
mov
hlt
fidivrs
mov
out
clc
dec
test
xchg
addl
shl
aas
add
add
xchg
xchg
xchg
cmpb
mov
or
dec
fsubrl
adc
pop
cmp
pop
xchg
mov
mov
call
jno
push
add
test
hlt
scas
add
out
jb
mov
push
aas
pop
aam
cmpsb
aad
mov
adc
push
cltd
jmp
sbb
mov
mov
jae
into
sub
sub
add
testb
add
lcall
mov
inc
repz
pop
sbb
dec
ret
inc
dec
jnp
call
add
mov
add
loop
aad
or
ljmp
add
sbb
hlt
xchg
gs
mov
jle
xor
xchg
mov
ds
loopne
stos
xor
add
inc
fcompl
add
in
or
je
test
fldenv
push
push
aaa
add
xor
pop
hlt
pusha
pinsrw
je
lds
add
outsb
iret
add
pop
jnp
push
mov
js
add
jg
push
pop
add
arpl
iret
fisubrs
or
pop
call
ffree
and
cmp
add
clc
addl
add
pop
inc
push
leave
jae
and
sbb
mov
in
mov
popl
popa
imul
mov
jecxz
push
sbb
xor
inc
jmp
repz
sub
push
and
mov
adc
cmp
mov
mov
pop
add
enter
ds
inc
sub
pop
mov
fdivr
sbb
mov
stos
jmp
mov
xlat
add
mulb
int
cmp
xchg
add
test
add
cmp
aad
cmp
xor
push
lock
pop
and
pop
or
mov
mov
cs
outsl
mov
pusha
enter
mov
or
fldl
add
iret
repz
add
mov
xor
cld
mov
loopne
push
sub
mov
push
daa
aad
shrb
mov
in
je
push
xor
test
adc
or
les
sub
mov
push
add
and
int
hlt
mov
add
sbb
push
pop
jae
in
cmp
cli
sahf
jl
ds
aaa
or
push
decl
sbb
mov
cltd
pop
push
jp
fistps
cmp
push
xchg
mov
cmp
xor
mov
mov
loop
add
pop
popa
mov
add
fwait
jge
dec
and
add
dec
mov
xor
stos
jp
mov
jnp
add
xor
mov
dec
push
sbbl
lds
and
cltd
daa
sti
dec
fnstsw
aaa
add
insl
mov
cmpsb
pop
loopne
clc
add
leave
nop
sti
scas
add
je
dec
mulb
enter
add
or
push
cmp
imul
shrl
clc
mov
in
lea
pop
mov
adc
and
sar
push
hlt
fsubl
cmp
cmpsl
sbb
cmp
jl
push
jbe
stc
leave
clc
add
pop
out
xchg
subl
jle
mov
jmp
jns
and
push
add
xchg
imul
fidivrl
mov
xor
mov
or
and
xor
sahf
imul
dec
in
testl
or
repnz
rcrl
je
mov
sarb
fsubs
fdiv
add
sub
int3
add
jo
adc
mov
jns
in
pop
xchg
mov
sahf
add
scas
sub
rcr
push
jbe
or
pop
jnp
mov
pushf
test
cmpsb
xchg
sbb
arpl
add
mov
sbb
ds
test
js
imul
rolb
cmp
add
lds
shll
push
pop
lock
scas
add
push
into
jp
add
loopne
cmp
sbb
xor
xchg
je
add
xor
push
add
into
pop
outsb
mov
xor
and
sub
or
push
repz
fstpt
loope
imul
adc
and
mov
clc
addb
mov
std
popf
inc
or
add
fmull
push
pop
push
insb
fiaddl
xchg
mov
add
mov
push
and
add
aaa
in
sahf
jp
add
das
test
rcrl
out
sub
dec
mov
rclb
faddl
sbb
pop
popa
sbb
adc
adc
js
mov
jge
mov
cmp
add
xlat
mov
fstpl
cwtl
cltd
push
into
add
test
push
fimull
movsl
shl
in
movsb
add
add
and
add
xchg
ret
pop
jl
cltd
test
nop
js
ret
adc
push
add
xchg
sti
inc
jg
add
sbb
add
jecxz
pop
js
clc
lock
dec
sub
inc
pop
add
push
inc
sub
xchg
ja
mov
sub
adc
adc
add
push
adc
cmpsb
xchg
addl
pop
je
int3
add
stos
add
inc
xchg
xor
shll
imulb
addr16
pop
and
imul
jecxz
xchg
inc
decl
sub
sub
dec
add
and
fidivrs
mov
ret
inc
add
leave
pop
lea
fwait
jbe
dec
xchg
mov
cmp
mov
popl
lds
xlat
je
es
out
and
cmp
add
fmul
andl
daa
xlat
loopne
jne
lds
cmp
cmpsl
clc
arpl
sub
mov
mov
adc
sub
lahf
xchg
sahf
xchg
xchg
fwait
xor
add
cmp
loopne
movsb
fstpt
ret
add
pusha
in
call
fwait
jmp
cmp
aaa
jl
mov
enter
jp
rolb
movb
out
mov
mov
inc
nop
mov
pop
adc
xor
js
out
inc
cwtl
push
and
mov
js
and
push
jmp
sbb
push
cmpsb
dec
and
pop
sbb
ss
and
lock
mov
notl
lods
cmp
out
icebp
or
insb
ljmp
mov
mov
and
je
pop
and
sbb
or
mov
test
insl
cmp
inc
sub
cmpsb
notl
add
push
insl
mov
jae
int3
cs
xor
lods
inc
imul
mov
fstps
mov
ss
jns
adc
loope
jns
js
adc
or
mov
lret
in
and
outsb
or
loop
loop
jnp
decl
dec
pushf
xchg
cmp
outsl
lea
inc
outsl
shlb
test
cmp
jns
xchg
xor
and
lea
pop
aam
pop
mov
mov
in
icebp
cld
pop
sbb
fdivrl
je
mov
mov
push
test
jo
dec
inc
jle
or
push
jo
test
jo
xchg
fwait
lret
pop
mov
cmp
fwait
test
jo
adc
jge
push
jno
loop
xchg
inc
inc
push
in
fwait
mov
call
pushf
jno
test
jge
lret
jno
adc
jno
imul
test
sub
pop
mov
pop
pop
and
loop
jle
lds
and
jb
push
fildll
mov
jno
cmp
mov
adc
sidtl
xlat
hlt
stc
aas
inc
add
mov
xchg
adc
add
lea
stc
jg
inc
jae
and
bound
and
mov
jg
test
dec
inc
mov
insb
lea
es
fistl
fstpt
out
jae
sub
xor
lea
je
popf
xor
mov
jbe
mov
sbb
push
mov
dec
adc
add
push
ljmp
loop
cmp
xchg
ja
or
stos
scas
adc
repnz
pop
push
adc
jne
inc
lods
sub
add
mov
addb
xchg
xchg
pop
clc
test
movsl
and
xorl
test
subb
jbe
pop
movsl
inc
adc
jb
les
jp
mov
push
mov
jbe
fdivs
test
addl
adc
mov
dec
ja
cmp
mov
pushf
movsl
into
clc
adc
sub
pop
fwait
in
or
cmp
or
add
mov
ror
loope
js
inc
and
aaa
pushl
inc
pop
mov
or
mov
cmp
ficoms
adc
add
push
daa
pusha
ja
add
mov
inc
aam
add
cltd
imul
mov
adc
jo
test
ss
pop
mov
pop
inc
sub
cs
in
push
sub
aaa
dec
bound
pop
mov
jns
lock
inc
jns
lock
out
xor
xchg
inc
popf
pop
inc
xchg
jne
cmp
lock
adc
jp
es
sub
inc
test
test
mov
adc
mov
mov
inc
popf
pop
push
lods
mov
jp
sarb
lock
imul
ja
jnp
rolb
push
inc
jnp
pop
jo
jge
or
push
nop
mov
xchg
jo
jge
mov
pop
sub
mov
jnp
in
lods
sbb
ret
sbb
and
sbb
fcmovne
out
adc
sbb
or
lock
in
mov
rcrb
mov
mov
lahf
adc
push
test
loopne
mov
pop
cmp
into
enter
fidivl
xchg
mov
inc
ret
call
pop
inc
push
jge
jg
test
jge
or
mov
mulb
cwtl
jge
jg
xchg
test
dec
ss
and
jge
cli
jle
and
mov
loopne
mov
fisubs
rorl
std
mov
jb
popl
jle
jnp
xchg
mov
mov
inc
mov
jo
mov
cmp
adc
lds
sbb
in
or
jg
and
bound
and
les
mov
adc
push
mov
mov
es
in
or
inc
jg
adc
or
mov
xorb
or
jo
push
and
mov
mov
mov
and
mov
mov
jge
inc
mov
int3
mov
rorb
test
shl
mov
int
mov
fcoml
pop
psubsw
nop
call
mov
cmp
test
in
mov
hlt
and
xchg
ret
sbb
in
xor
inc
cmpsb
and
imul
int3
mov
adc
imul
mov
cmp
ret
jno
ja
or
cmpl
nop
push
mov
insb
and
scas
xorl
cli
adc
xorl
loope
test
adc
pop
rolb
mov
jmp
jns
sub
pushf
test
mov
bound
int
outsl
mov
cmc
test
imul
pop
inc
out
sbb
arpl
push
imul
jbe
pop
or
lea
addr16
mov
test
push
subl
cmp
int3
cs
xor
dec
xrelease
adc
and
adc
arpl
xchg
aas
rol
cmp
xchg
adc
xchg
aas
sub
cmp
ret
xchg
aaa
inc
xchg
mov
push
xchg
mov
pop
xchg
push
inc
nop
adc
addl
sbb
pop
xchg
in
iret
inc
xchg
clc
ret
test
xchg
adc
xchg
les
mov
testl
pop
movsb
xor
sarl
mov
inc
xchg
adc
clc
xchg
xchg
divl
adc
xchg
scas
adc
les
insb
mov
and
mov
aaa
xchg
aaa
cli
cmp
ret
pop
fwait
and
xor
mov
adc
xchg
add
and
pop
mov
cli
cli
adc
sub
inc
xchg
test
mov
iret
xchg
cmp
in
out
mov
aas
and
les
mov
xor
mov
dec
mov
mov
loop
xchg
push
inc
nop
adc
jnp
outsl
cli
adc
xchg
mov
mov
adc
leave
inc
mov
bnd
test
xchg
adc
xchg
les
mov
testl
adc
cli
aaa
inc
xchg
adc
clc
subb
sbb
sub
movsb
adc
sub
xor
jb
int3
cmc
in
or
adc
loope
cs
lret
cmc
xor
les
cwtl
jae
int3
cs
fwait
adc
dec
fstl
or
das
lock
stos
ret
cwtl
cmp
inc
mov
adc
mov
aas
adc
lret
in
and
lock
lea
push
inc
lea
cwtl
inc
imul
xchg
lea
ds
inc
mov
lea
test
lea
testl
or
iret
adc
loope
xchg
or
sub
cwtl
jno
mov
mov
lret
ret
in
ljmp
data16
dec
xor
fs
xchg
mov
and
and
int3
lods
in
or
mov
adc
shll
inc
call
hlt
and
addr16
jmp
sbb
cltd
pop
add
mov
test
loope
shll
stc
adc
mov
push
mov
nop
fsubl
cs
inc
sbb
adc
fidivs
test
popf
xchg
nop
cmp
mov
test
loopne
gs
xor
xchg
fstps
adc
mov
inc
xchg
loope
xchg
push
pop
xor
push
pop
mov
mov
rorb
je
dec
aam
int3
jg
cld
jle
push
pop
add
popf
lds
loope
xlat
adc
sahf
iret
sub
mov
hlt
or
mov
int
fadds
jbe
pop
lds
jbe
jp
addr16
pop
push
sahf
xchg
mov
xchg
xchg
inc
hlt
popf
sbb
ficoms
push
ficompl
int
pop
mov
sbb
sub
inc
mov
dec
xchg
mov
jb
insb
and
mov
xchg
push
test
push
adc
popf
mov
movsl
xor
repz
jo
and
or
xchg
pop
pop
or
sahf
loop
xchg
pop
adc
out
adc
pop
aam
fsubrs
xchg
clc
mov
fldl
movsb
adc
push
mov
sub
ret
mov
jmp
sub
jmp
xchg
std
mov
sub
inc
mov
das
in
xor
sub
xchg
les
inc
xchg
notl
mov
sub
pushf
repnz
mov
out
or
inc
repnz
int3
mov
fistl
call
pop
loop
xchg
ss
test
xchg
xchg
cld
mov
mov
adc
out
popf
in
loope
int3
jb
repnz
repnz
or
or
and
aaa
mov
mov
mov
xchg
shrb
loope
shlb
fisubrl
xor
xchg
rcrb
or
cwtl
repnz
sub
fistl
cmp
rcl
inc
cmp
pop
call
xor
out
nop
lahf
js
and
movsb
punpckhbw
xor
fdiv
mov
enter
mov
and
das
fsubl
push
ret
movsb
cmp
cltd
test
movsb
cmp
daa
sub
sbb
push
mov
enter
cltd
sub
inc
movsb
mov
out
sbb
cmpsb
or
inc
movsb
sbb
icebp
mov
or
inc
lcall
jno
test
or
inc
test
movsb
lret
push
rorl
cmpsl
xchg
jo
scas
xor
movsb
ja
fwait
adc
mov
cmp
push
sbb
or
push
and
test
shrb
stc
fwait
dec
sbb
sbb
lret
mov
lods
sbb
test
test
and
mov
push
pop
cmp
pop
sbb
mov
test
and
pushf
push
push
push
dec
sub
popf
icebp
inc
popf
cmp
sbb
push
popf
les
cmp
sbb
sbb
lret
pop
sti
xchg
adc
shrb
arpl
mov
and
add
nop
popa
jmp
test
sub
test
dec
in
lret
mov
jmp
sbb
or
clc
or
out
sub
push
ss
add
mov
push
addl
lahf
pop
and
cmpl
sahf
sahf
ret
lret
popa
xor
add
jb
loop
push
add
and
pushfw
xchg
mov
inc
xor
or
aam
shlb
out
add
sbb
ret
xlat
popf
mov
popl
jmp
shll
cmpsl
ljmp
mov
rclb
push
test
sahf
push
mov
dec
out
dec
pushf
stc
jmp
or
outsl
repnz
mov
shll
outsl
repz
jne
test
lods
mov
test
js
xor
jmp
mov
call
and
addr16
pop
add
mov
lahf
sbb
mov
sbb
ficoms
push
fstps
jmp
xor
and
mov
jo
mov
dec
sub
out
bound
and
scas
fcoms
mov
and
stos
jo
stos
xchg
xor
jo
xchg
filds
adc
jno
mov
jmp
or
daa
dec
sbb
inc
inc
movb
and
ret
ds
mov
sbb
dec
adc
and
scas
push
and
scas
mov
mov
iret
imul
es
mov
fmuls
mov
arpl
dec
lret
inc
mov
cmpsb
inc
mov
dec
bound
jl
xchg
jg
sub
mov
mov
add
mov
pop
cmpsb
sbb
xor
js
movsl
out
ds
sub
push
aam
shlb
and
shr
pop
test
test
jne
insb
pop
subb
mov
arpl
mov
or
popa
dec
adc
and
xchg
and
pop
xchg
xor
push
les
test
jmp
and
jo
push
mov
mov
mov
int3
adc
inc
add
inc
dec
inc
and
cmp
cmc
out
jmp
in
in
inc
dec
insb
push
and
inc
sti
sahf
or
dec
notb
test
pop
or
and
inc
inc
dec
push
pop
jmp
inc
into
mov
arpl
and
dec
es
inc
push
into
adcb
mov
dec
sbb
dec
xor
aam
push
push
dec
dec
mov
push
mov
add
jae
push
inc
insl
aam
lods
mov
sbb
cmp
pop
push
add
dec
pop
fildll
inc
adc
stc
mov
mov
xchg
and
out
cltd
sub
insb
xchg
pusha
or
clc
dec
inc
movsb
enter
or
push
sub
loop
out
insb
mov
in
bound
push
adc
cltd
and
and
inc
and
mov
lods
adc
and
mov
adc
in
mov
aam
rorl
and
inc
cmp
aad
adc
pushf
flds
insb
das
mov
loope
sbb
inc
cmpsl
movsl
dec
pop
sub
dec
xchg
adc
js
or
clc
out
add
inc
js
and
or
push
loopne
or
add
and
pop
and
sub
lock
add
sub
lods
and
cs
dec
jo
inc
and
das
and
fdivs
fsubrs
or
cmp
mov
test
and
dec
test
or
pop
sub
cld
pop
or
or
rclb
cmp
pop
mov
sbb
call
sub
add
xor
mov
stos
inc
push
or
push
pop
sbb
in
or
sub
int3
enter
call
fcomp
fxch
push
loopne
jecxz
imul
jge
clc
dec
mov
pushl
push
push
popa
je
xor
inc
shll
jle
movsl
stos
out
push
add
test
and
and
push
sbb
inc
push
push
or
add
adc
jo
pop
lcall
cmp
add
jbe
imul
sarl
andb
es
or
dec
rclb
call
adc
cmp
enter
adc
sbb
mov
adc
cs
and
push
pop
mov
push
xchg
andb
inc
nop
cwtl
mov
dec
mov
inc
rcr
mov
adc
mov
add
inc
add
enter
push
inc
or
inc
push
and
jno
pop
sbb
and
adc
les
loopne
test
inc
pop
clc
xchg
mov
cmp
or
les
and
rcrl
and
mov
cwtl
or
dec
mov
inc
rcr
mov
adc
leave
jmp
shl
or
rclb
jmp
shrb
xchg
je
movsb
pop
and
pop
dec
mov
je
movsb
pop
or
dec
rclb
call
pop
and
shrb
xchg
je
movsb
pop
and
pop
dec
mov
je
movsb
pop
and
pop
dec
mov
or
gs
sbb
mov
inc
fsub
mov
lret
mov
xor
inc
push
in
dec
add
pop
test
dec
jne
insb
and
cmp
test
add
push
into
push
jle
or
pop
punpcklbw
or
or
or
push
mov
adc
adc
adc
sbb
sbb
add
xchg
movsl
adc
adc
aad
jmp
mov
aad
stos
cmpsb
add
xchg
xor
ja
popa
push
out
add
les
hlt
add
xor
inc
add
xor
pop
fdivrl
xorb
xchg
add
dec
mov
mov
pop
sub
mov
mov
repnz
mov
test
add
sbb
in
insl
push
mov
hlt
add
test
adcl
adc
shrb
std
add
leave
mov
add
fldcw
and
add
enter
pop
adc
imul
push
addr16
add
aam
dec
add
test
movsl
cmp
test
xor
leave
add
lods
jecxz
fdivs
add
filds
or
cmp
fldenv
jo
sbb
push
addb
mov
and
les
mov
mov
sub
mov
or
and
jo
mov
das
adc
stos
sbb
sub
fdivl
push
jno
add
adc
out
mov
add
lahf
xor
add
js
stc
loopne
cmp
test
xchg
sbb
add
insl
shl
fs
add
pop
arpl
hlt
push
imul
rcl
fmuls
xor
dec
push
xor
xchg
push
call
sbb
hlt
or
cmc
fnstenv
add
jmp
mov
add
fistps
fidivrl
adc
gs
aam
pop
or
dec
into
add
mov
aam
movsl
fisttps
xor
movsb
add
hlt
shrl
sbb
flds
outsb
xor
mov
sarb
sub
add
xor
or
fnstsw
add
daa
jno
add
mov
and
mov
outsl
mov
add
stc
ficomps
cwtl
leave
fldcw
and
mov
test
xlat
pop
cmp
hlt
add
pop
mov
rolb
cmpl
cmp
cmp
adc
je
inc
aad
cmp
ja
popf
adc
push
add
jae
or
test
add
push
or
dec
add
in
decl
xchg
daa
scas
loopne
pop
mov
pop
jge
mov
add
xchg
add
inc
add
imul
add
jno
insb
sbb
cld
imul
sbb
loopne
rorl
adc
dec
frstor
outsl
fistpll
mov
mov
jbe
add
fdivrs
push
shll
push
repnz
icebp
addr16
cmpsb
fldl
mov
add
mov
fisubrl
or
or
pusha
jp
add
ret
out
fists
addr16
mov
add
imul
sbb
outsl
and
push
xchg
ja
int3
add
inc
or
add
es
lds
add
sub
add
ret
add
mov
sahf
fldcw
mov
fs
es
add
insl
add
test
ss
jmp
addr16
pop
jb
push
add
add
mov
jnp
cmp
mov
fwait
mov
xchg
add
out
fdivrl
or
lock
add
mov
push
add
push
mov
testb
ja
outsl
pusha
inc
mov
out
cwtl
jle
jo
ud0
cmp
subpd
add
and
push
clc
rorl
popa
add
push
js
add
mov
push
addl
dec
ret
cmp
add
notl
pusha
rorb
add
ds
push
shrl
or
filds
cmp
aaa
push
clc
mov
mov
inc
add
xor
sbb
mov
mov
push
cmpsb
mov
ss
pusha
push
xlat
int
push
add
push
mov
jp
data16
dec
popa
les
sbb
push
sub
mov
mov
clc
filds
add
mov
xor
jle
jbe
mov
mov
pop
movsb
sti
or
fisttpl
sub
mov
fiadds
adc
filds
pusha
and
inc
or
or
xchg
mov
cmp
and
and
aam
or
call
fcompl
push
test
cwtl
stos
test
imul
call
cld
outsl
in
icebp
nop
or
test
jle
sbb
or
adc
dec
pusha
xchg
insb
jo
int
lret
test
daa
and
enter
sub
dec
js
popf
cltd
and
mov
in
xchg
mov
push
mov
mov
sbb
mov
in
jl
rcrb
sub
loop
in
test
icebp
sub
inc
js
cmp
shr
cmp
mov
fs
ss
stc
xchg
gs
sub
adc
adc
mov
xchg
or
or
inc
sbb
xchg
sahf
popa
shlb
xorb
cmp
xchg
adc
mov
and
xchg
and
push
out
xchg
jp
inc
fsubrs
cwtl
stc
call
lret
dec
fisubrs
imul
cmp
clc
mov
pop
xor
nop
xor
mov
sbb
leave
pop
int3
cwtl
gs
pop
mov
and
mov
or
sbb
int3
cltd
mov
xchg
jle
cltd
orb
or
dec
stc
sbb
add
inc
test
enter
cld
cmp
std
xor
test
fcomps
shlb
and
lock
cwtl
xor
movsb
sub
je
add
fs
cmpl
movsl
cmp
mov
push
les
loop
pop
add
pop
roll
adc
hlt
sub
adc
push
sub
mov
lods
repnz
and
jl
inc
sbb
adc
in
dec
ds
push
inc
mov
icebp
insb
and
pop
adc
push
add
jb
mov
or
in
hlt
or
inc
cmp
pop
adc
jle
mov
rcl
out
cld
and
push
add
dec
cs
inc
and
mov
push
add
mov
fcoml
adc
add
xor
or
sub
sbb
dec
or
mov
sahf
inc
stos
mov
sbb
shl
mov
adc
sbb
add
inc
adc
or
je
adcb
mov
and
and
inc
sbb
inc
adc
bound
xchg
mov
sahf
inc
scas
mov
movsl
ret
xor
cld
adc
sbb
xor
test
push
pop
or
js
mov
sahf
dec
lods
xchg
mov
lock
sbb
cs
cmp
outsb
orb
dec
enter
loop
add
adc
sbb
orl
push
inc
sahf
mov
xchg
enter
or
lock
sbb
dec
ss
inc
and
data16
mov
pushf
and
dec
mov
inc
repnz
push
sbb
push
dec
fs
jp
nop
inc
mov
or
ficoml
ljmp
push
or
cmp
insb
jl
mov
pushf
and
dec
mov
inc
testb
sbb
xor
ds
dec
pop
xchg
push
addb
mov
dec
repnz
and
adc
and
mov
lea
out
lret
stc
cmp
jb
mov
push
pop
fistps
jbe
pop
movsl
cmc
adc
xchg
sbb
dec
sbb
jmp
loopne
push
mov
or
cmp
dec
push
mov
lret
sbb
jle
repnz
adc
idivb
or
mov
outsl
fmull
int
das
ljmp
dec
push
push
dec
test
cmp
out
push
dec
sub
lcall
std
inc
repnz
push
jo
cmpsb
or
arpl
or
sbb
jb
jns
sub
mov
test
cmp
test
jle
dec
jl
jnp
jae
xor
dec
fstpl
dec
dec
mov
jp
into
xor
lods
dec
cmpsb
enter
jmp
mov
xchg
aam
data16
or
pop
test
dec
inc
ds
jae
inc
jge
cmpsb
lea
jo
push
fbstp
data16
mov
xchg
and
movsl
repnz
jne
cmp
scas
mov
jns
cmpl
std
daa
inc
insb
pop
repnz
push
addr16
sub
jp
ljmp
mov
mov
sbb
dec
jbe
jo
sub
icebp
xor
jmp
push
popf
jl
sub
outsb
movsb
rorb
and
mov
push
je
adcb
inc
daa
movsb
jns
adc
pop
xor
pop
nop
push
lods
push
nop
sti
cwtl
scas
push
je
dec
push
inc
lea
mov
dec
into
fidivl
ljmp
lock
imul
add
dec
into
xchg
imul
ret
lcall
sahf
push
scas
hlt
lods
imul
xor
cmp
inc
fldt
lret
push
mov
jne
jmp
push
inc
insl
les
mov
xchg
cmp
rcll
mov
stos
adc
ret
pop
dec
cli
ret
fistl
pop
out
enter
mov
pop
lea
in
out
aam
sub
movsb
or
inc
sbb
sub
jle
outsb
dec
sub
insb
adc
test
adc
lea
lret
in
inc
ds
and
lds
shll
pop
sub
dec
cmp
sub
xlat
lcall
mov
mov
fwait
inc
push
es
cmpsb
cmp
xchg
or
popa
sub
mov
adc
mov
mov
arpl
push
aam
lret
or
jns
insl
xchg
mov
push
xchg
test
ret
pushf
insl
loope
mov
push
sbb
outsl
jns
mov
push
data16
pop
shlb
dec
pop
fsubp
and
stc
ds
sbb
push
sub
rcrb
jae
dec
in
mov
stos
adc
movsb
daa
in
jae
sub
test
push
insl
dec
inc
mov
dec
negb
xlat
and
pop
lret
and
and
fcmovbe
push
mov
inc
andb
and
es
dec
push
js
xor
in
enter
fucompp
adc
push
and
mov
shlb
out
cltd
lock
adc
in
loopne
insl
sbb
push
dec
mov
push
xor
es
dec
insl
push
jb
jbe
jne
push
push
cmc
insl
sub
jmp
fs
insb
push
mov
jmp
dec
cmc
lretw
push
push
adc
inc
gs
imul
push
shl
mov
aam
dec
jp
pop
das
fimull
fidivl
clc
int
cmp
test
push
lods
cmp
xor
cmp
sub
mov
push
xor
movsl
xchg
and
mov
pop
lret
popf
adc
push
pushf
sahf
negb
push
les
daa
push
pop
dec
scas
xor
xlat
dec
mov
adc
mov
push
xchg
adcl
adc
xchg
sub
push
jno
cmp
fs
push
xchg
jae
mov
cltd
jno
push
sbb
ret
enter
sahf
inc
xchg
ficomps
sbb
pop
addr16
add
loope
xor
das
xchg
int3
jae
sub
and
cmp
adc
divl
dec
leave
push
inc
pop
iret
and
out
mov
in
inc
xor
xchg
and
inc
xchg
push
xchg
push
xchg
pop
xchg
pop
xchg
pusha
xchg
fs
push
xchg
adcb
xchg
mov
xchg
mov
xchg
rclb
ljmp
xor
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
addr16
jo
ja
mov
test
dec
fiadds
xor
or
jb
sbb
cmp
outsl
pushf
jp
test
pushf
stos
pushf
rcrl
les
clc
fadds
cmp
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
sbb
cmp
pushf
cmp
pushf
xchg
pushf
rolb
push
cmp
sbb
cmp
pushf
fistps
cmp
and
sub
cmp
inc
daa
arpl
mov
ds
insb
leave
jb
fmulp
in
hlt
leave
std
enter
dec
jb
jb
jb
jb
jb
jb
loope
ret
push
add
xor
inc
xchg
push
xchg
pop
xchg
arpl
jae
js
jle
xchg
adc
xchg
lock
notb
sub
xor
dec
xchg
adc
mov
fimull
or
inc
dec
pop
dec
fs
insb
dec
rorl
dec
in
jmp
sti
inc
add
push
xchg
pop
xchg
ret
and
xchg
jl
test
xchg
xchg
mov
in
in
in
in
in
cmp
dec
cmp
nop
cmp
cmp
cmp
push
mov
dec
fiadds
aaa
add
jb
jb
sbb
cmp
pushf
xor
push
xchg
push
into
cmp
in
in
in
in
in
or
repnz
aas
push
leave
and
fbld
dec
daa
jle
lcall
daa
xlat
sub
sysret
ret
xor
cmp
lods
daa
mov
and
xor
jae
mov
ljmp
pushf
pusha
xchg
imul
or
push
enter
push
jo
jbe
jnp
orl
dec
movsb
dec
test
dec
dec
icebp
dec
cli
subl
xchg
jo
pushf
xchg
cmpsl
xchg
les
std
nop
pop
pmulhuw
in
in
in
in
in
in
in
in
in
cmp
das
cmp
bound
popf
cmp
cmp
sub
lahf
pushf
adc
sbb
xor
mov
in
in
in
cmp
aas
push
lds
inc
push
cmp
push
daa
bound
imul
stos
leave
mov
mov
jmp
push
cmp
dec
adc
dec
sbb
and
dec
sub
dec
pop
dec
gs
outsl
dec
xchg
dec
stos
dec
mov
sub
dec
fimuls
dec
out
dec
testb
dec
xchg
arpl
mov
mov
leave
ror
in
leave
cld
enter
sbb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
sbb
or
pushf
sub
pushf
dec
pushf
push
pushf
pop
pushf
bound
dec
orb
fdivrl
lcall
cmp
cmp
cmp
cmp
and
mov
aas
or
adc
sbb
and
sub
xor
cmp
xchg
lods
push
xchg
pop
xchg
bound
jp
adcb
mov
lret
adcb
add
das
xor
leave
dec
leave
pop
les
jo
mov
jb
jb
jb
jb
dec
mov
cmp
cmp
cmp
cmp
cmp
add
cs
xor
mov
xor
test
xchg
sbb
sub
out
daa
cmp
inc
daa
dec
daa
push
daa
pop
daa
pusha
daa
push
daa
andb
daa
nop
daa
cwtl
daa
mov
and
enter
fmuls
inc
call
mov
pushf
adc
sub
pushf
cmp
pushf
pop
pushf
pusha
xchg
push
orb
nop
dec
cwtl
dec
mov
dec
mov
dec
rorb
dec
loopne
out
mov
leave
and
sub
inc
xor
leave
dec
leave
push
leave
push
xor
pop
lcall
cmp
cmp
sarb
cmp
cmp
cmp
cmp
push
add
or
adc
dec
sbb
dec
and
dec
sub
dec
inc
dec
pusha
dec
push
je
js
jl
andb
daa
mov
cwtl
daa
mov
daa
enter
shlb
aam
fsubs
fsubl
loopne
lock
xor
and
and
sub
sub
xor
xor
cmp
push
sahf
pushf
js
jl
sbbb
fs
cmpsl
pushf
test
enter
aam
fcoms
nop
call
lock
and
sub
je
mov
cmp
pushf
dec
pushf
pop
pushf
js
sbbb
nop
pushf
xchg
pushf
cwtl
pushf
pushf
pushf
mov
pushf
fcompl
cmpsb
ret
cmp
fxtract
leave
clc
leave
cld
enter
sub
xor
leave
cmp
inc
leave
inc
leave
dec
leave
dec
leave
push
leave
push
leave
fs
test
mov
nop
leave
xchg
leave
cwtl
leave
pushf
leave
mov
leave
lods
leave
mov
enter
ret
cmp
pushf
hlt
pushf
clc
pushf
cld
mov
adc
xor
cmp
inc
pushf
inc
pushf
dec
pushf
dec
pushf
push
pushf
push
pushf
pop
pushf
pop
pushf
insb
pushf
mov
pushf
mov
pushf
lods
pushf
mov
mov
enter
pop
or
addr16
daa
cld
cs
cmp
or
in
in
mov
pop
dec
pop
or
cmpsl
xor
daa
mov
daa
mov
mov
push
mov
adc
jo
cmp
cmp
adc
adc
sbb
sbb
and
and
sub
cmp
pop
cmp
cmp
insb
cmp
je
js
jl
cmpb
cmp
les
pushf
rcrb
cwtl
in
jl
adc
sbbb
sub
test
pushf
push
pushf
js
jl
sbbb
nop
pushf
test
enter
aam
fcomps
test
sbb
add
and
sub
xor
add
inc
leave
movsb
dec
leave
pusha
leave
or
leave
mov
nop
leave
xchg
leave
cwtl
leave
pushf
leave
mov
gs
call
icebp
in
pop
cmp
adc
movsl
mov
push
nop
shll
in
in
in
in
in
in
in
in
in
push
inc
xor
stc
dec
std
inc
add
lcall
pop
pushf
popa
pushf
imul
daa
sub
sub
xor
insl
cmp
lret
cmp
daa
jne
jmp
test
jo
enter
push
xor
aam
cmp
cmp
cmp
add
cmp
mov
stos
cmp
sub
cmp
dec
dec
mov
mov
lock
leave
leave
leave
out
sub
push
pop
xor
fs
mov
mov
leave
mov
int3
leave
aad
push
jb
mov
mov
in
in
cmp
adc
cmp
cmp
mov
aad
pushf
setl
pushf
jbe
jge
push
dec
call
xor
xchg
mov
cmp
mov
jb
jb
jb
jb
jb
jb
jb
sbb
ds
pushf
or
adc
pushf
sub
and
arpl
xchg
xchg
xchg
dec
mov
jb
jb
jb
jb
sbb
aas
adc
xchg
pop
ret
push
test
ret
xchg
stc
push
mov
adcb
add
mov
mov
cmp
xchg
mov
add
cmpsl
dec
in
sub
xor
leave
and
leave
inc
leave
push
leave
pop
leave
xchg
leave
mov
into
jne
jo
inc
xchg
data16
pushf
xchg
xchg
popf
dec
push
lret
dec
fimuls
inc
add
inc
dec
and
xchg
push
xchg
ffreep
pusha
adc
xchg
inc
xchg
arpl
mov
roll
ret
daa
shll
aaa
and
cmp
jl
xor
pop
in
in
mov
jb
jb
jb
jb
jb
jb
pop
adcb
mov
mov
mov
les
enter
sarb
aam
fsubrs
pop
sbb
or
adc
sbb
sbb
xor
mov
pusha
sub
mov
jo
js
jl
test
xor
mov
in
in
in
in
in
mov
and
lret
mov
mov
pushf
adc
sbb
dec
xor
dec
cmp
into
dec
xor
je
js
into
jb
jb
jb
jb
pop
pushf
or
sbb
aam
shlb
jb
pop
fcomp
cmp
cmp
cmp
or
cmp
sub
in
cmp
daa
addr16
insl
and
sarb
xchg
cmp
pushf
jb
pop
mov
cmp
cmp
cmp
cmp
cmp
cmp
daa
add
dec
sbb
xchg
inc
xchg
dec
xchg
pop
xchg
jae
jg
xchg
movsb
xchg
test
nop
or
adc
sbb
sbb
and
fcompl
cmp
push
in
xchg
stos
jb
mov
jb
jb
dec
mov
rol
dec
lret
dec
fimull
dec
ljmp
or
and
cmp
push
xchg
pop
js
jb
jb
jb
jb
jb
nop
fidivs
jb
dec
stos
in
mov
rcrb
pushf
repnz
cli
xchg
aaa
or
adc
sbb
and
sub
xor
cmp
inc
daa
dec
daa
push
and
icebp
pop
pusha
inc
jb
jp
and
in
in
in
in
in
in
in
in
in
in
in
in
in
cmp
adc
mov
pop
sarb
daa
jno
add
rcll
dec
es
leave
push
je
mov
pop
sub
xor
mov
out
jb
jb
jno
jb
mov
and
xchg
test
lods
xchg
mov
es
in
in
in
in
test
leave
les
in
xchg
and
clc
pushf
xchg
add
sub
scas
cwtl
xchg
dec
push
nop
dec
mov
jge
xchg
popl
push
jbe
cmp
push
pop
cmp
dec
sub
pop
cld
push
and
fdivrl
mov
nop
xchg
cli
jae
shlb
xor
xorl
in
in
in
inc
mov
in
or
mov
mov
sbb
cmp
xchg
cmp
pop
and
rolb
lods
sysret
pop
xor
xor
push
xchg
sub
xchg
inc
subb
dec
sahf
xor
mov
in
in
in
xchg
push
adc
ret
add
xchg
dec
xchg
push
xchg
push
xchg
pop
xchg
popa
xchg
dec
sbb
leave
cltd
leave
movsl
leave
stos
leave
scas
leave
mov
cmpsb
adc
roll
or
mov
ret
dec
loopne
repnz
or
leave
test
movsb
and
sub
cs
mov
jnp
xchg
add
pop
aas
daa
xchg
push
xchg
outsl
dec
jg
mov
popa
movsb
in
icebp
lret
loopne
shrl
cmp
das
sti
xchg
lret
jbe
pop
xchg
fs
insb
jnp
xchg
dec
test
push
xor
dec
jbe
cmp
cmp
daa
and
je
loopne
pushf
in
in
fdivrs
dec
ret
or
loop
sahf
ss
dec
std
dec
add
inc
dec
test
iret
enter
adc
jb
jb
dec
in
pop
les
cmp
je
jle
xchg
xchg
dec
outsb
stos
dec
mov
movsb
daa
jmp
xchg
push
mov
loopne
aas
jb
adc
mov
andl
fsubl
loopne
enter
ss
pop
or
leave
mov
stos
cmp
cmp
cmp
jo
nop
sbb
pushf
inc
xchg
push
xorl
xchg
jp
push
scas
leave
dec
daa
xor
inc
in
mov
int3
add
hlt
out
cmp
imul
in
in
mov
cli
pop
or
pop
cmp
mov
stos
xor
cmp
cwtl
sbb
pushf
xrelease
cmp
daa
lea
cmp
dec
enter
mov
xchg
loopne
dec
lret
or
xor
dec
cmp
lret
in
xchg
shlb
daa
cmp
pushf
sti
xchg
sub
cmp
aas
fidivrs
loop
out
ljmp
cmp
sub
dec
inc
adc
add
xor
in
in
in
in
in
in
in
in
in
pushf
adc
xor
pushf
inc
pushf
inc
pushf
dec
pushf
dec
pushf
push
xchg
push
ret
dec
ret
push
outsb
leave
jb
jbe
or
pop
jp
xchg
jl
push
jle
xchg
mov
andb
xchg
pop
mov
ret
push
mov
mov
ficoms
xchg
and
sub
cwtl
movsb
or
lods
pushf
and
sub
mov
es
push
cmpsb
adc
mov
ds
test
dec
popa
scas
push
sub
mov
data16
pushf
jp
jle
adcb
xchg
in
in
xchg
test
mov
popa
into
mov
or
mov
or
rol
fadd
pop
ficoms
ljmp
or
popa
rolb
leave
or
push
leave
adc
push
leave
sbb
push
leave
and
es
sub
cs
daa
add
pop
idivb
daa
inc
daa
inc
and
lods
push
cmp
push
and
cmp
cmp
outsb
es
pushf
jp
jle
sbbb
xchg
pushf
xchg
pushf
lcall
xchg
stos
dec
mov
mov
movsb
enter
shl
in
in
in
in
xchg
pop
lcall
cli
and
test
cmp
cmp
cmp
cmp
das
push
pop
fs
daa
and
es
sub
out
and
scas
loopne
inc
in
in
in
in
in
in
in
in
in
in
in
mov
jle
adcb
xchg
in
in
in
in
in
in
sahf
sahf
sbb
pushf
mov
mov
xchg
dec
cmp
dec
shl
scas
fcmove
xor
push
cmp
push
adc
dec
xchg
push
xchg
push
xchg
out
push
lret
cmpl
sbb
cmp
dec
and
insb
jb
dec
jbe
sub
and
mov
and
fisttps
cmp
cmp
dec
xchg
fs
fdivs
jb
pop
ret
cmp
out
hlt
inc
and
mov
xor
lcall
imul
xchg
leave
stos
leave
mov
in
pushf
and
dec
test
in
jb
sbb
xor
cmp
insb
dec
jl
cmpsl
daa
shlb
and
mov
sbb
or
addr16
mov
je
leave
lods
leave
mov
aam
xchg
jnp
decb
push
mov
and
insb
jg
add
rorb
fistl
jb
sbb
aaa
or
sbb
jne
adcl
lahf
or
mull
adc
and
mov
mov
das
push
sahf
jbe
movsl
dec
fcompl
add
int3
in
in
cmp
das
cmp
and
leave
mov
mov
outsb
jmp
cmc
dec
std
inc
adc
push
xchg
rcll
stc
inc
sbb
pop
cmp
jbe
dec
pusha
pop
sub
jg
mov
shlb
aas
aaa
in
in
xchg
mov
add
mov
add
add
cmp
mov
cmp
adc
cltd
dec
mov
xor
xchg
sub
inc
scas
leave
ret
sub
jle
dec
repz
add
pop
xchg
adc
daa
leave
inc
leave
pop
and
outsb
in
xchg
fdivs
jb
jb
dec
or
jmp
inc
push
cwtl
leave
dec
in
sysexit
adc
xor
xchg
sbb
cmc
leave
dec
leave
pusha
leave
imul
push
mov
dec
scas
dec
mov
add
mov
cmp
aaa
cs
push
and
out
repz
adc
sbb
xchg
popa
leave
mov
sub
xchg
mov
dec
hlt
push
pop
dec
cmovns
rolb
cmp
pop
cmp
jecxz
call
mov
cmp
in
in
mov
adcw
jb
inc
movsl
mov
lcall
pushf
cmpsl
cmpsl
mov
test
xchg
xchg
jb
push
das
pop
xchg
pop
and
inc
add
or
cmp
dec
popa
repnz
jne
jo
mov
cs
cmc
xchg
pop
and
aam
xchg
pop
inc
sub
jo
cwtl
and
and
jmp
pop
xor
daa
adc
mull
inc
daa
inc
daa
push
and
mov
mov
pushf
mov
mov
ljmp
sbb
pushf
sub
pushf
dec
pushf
push
pushf
popa
pushf
imul
aam
mov
mov
ss
loopne
pop
sahf
out
cmp
test
sbb
xchg
or
xchg
cmp
xor
mov
adc
and
shlb
call
test
or
lock
enter
loop
in
in
daa
cmp
daa
dec
daa
push
daa
jo
andl
dec
lcall
daa
jl
pop
ror
js
es
lret
mov
push
jo
inc
nop
pop
xor
push
rcll
xchg
mov
pusha
pop
cmc
cmp
pop
loopne
push
xchg
add
mov
xchg
or
cmp
mov
mov
xor
loopne
insl
in
xchg
add
fnstcw
pop
xor
and
pop
daa
ret
and
shr
aam
out
add
xchg
jb
jb
jb
jb
sbb
aas
setl
cs
addr16
xchg
sahf
xchg
pusha
nop
cmp
shrb
test
dec
mov
jb
jnp
xchg
mov
jo
jb
jb
dec
arpl
stos
adcb
mov
in
icebp
sbb
xor
pushf
aaa
xchg
inc
dec
cld
insl
dec
jae
jnp
clc
mov
or
cs
ficoms
daa
ret
daa
daa
sub
fdivs
fadds
xor
push
or
dec
icebp
mov
in
sbb
pushf
xchg
pushf
mov
pushf
jecxz
sbb
and
test
cmp
cld
mov
aad
test
js
cmp
aam
push
xchg
dec
or
and
mov
rolb
cmp
dec
cmpsl
ret
jmp
je
ret
mov
push
xchg
fs
and
in
xchg
add
jge
fwait
in
popf
xchg
and
ds
cmpsl
push
pushf
daa
aad
sbb
mov
jmp
fucomp
and
push
aam
dec
fsubrl
mov
out
pop
xchg
dec
or
pop
insb
popa
dec
test
hlt
cmp
je
popa
add
subb
push
mov
add
ret
je
sbb
xchg
in
add
xor
in
es
xchg
mov
out
cwtl
sahf
mov
stos
jb
sbb
cmp
ret
rolb
mov
cli
lock
xorl
inc
movsl
out
xchg
sahf
jnp
push
jmp
icebp
dec
adc
push
stos
out
in
cmp
cmp
add
cli
mov
test
in
cmp
push
ds
pop
dec
pop
out
subb
xchg
adc
inc
jo
leave
lods
leave
mov
sub
cmp
and
daa
mov
shrb
adc
cmp
xorl
push
push
rorb
movsb
fcompl
xchg
cmp
mov
mov
inc
nop
rcrb
js
pop
dec
scas
add
ret
or
add
dec
pop
ret
shlb
mov
mov
mov
xor
push
lret
imul
dec
loope
add
test
scas
lock
cwtl
aaa
xchg
add
xchg
push
mov
lock
jle
leave
mov
dec
sbb
nop
and
jb
dec
mov
pop
test
push
hlt
cs
test
mov
out
fcompl
cs
jp
or
js
cmp
das
faddl
sbb
daa
call
cmp
xchg
in
in
mov
xchg
inc
loopne
cmpsb
xchg
pop
jp
daa
repz
aas
inc
leave
leave
xchg
leave
xchg
and
popf
in
in
in
test
cmp
push
push
cmp
rcrl
dec
xor
pushf
jmp
hlt
xchg
inc
daa
dec
daa
dec
daa
push
daa
push
and
mov
xchg
out
ret
js
pop
jne
dec
cmp
dec
xor
xchg
mov
out
in
mov
loop
pop
mov
ret
jl
add
and
fcoms
jb
pop
jne
cmp
inc
movb
lret
mull
cmpsl
and
mov
aad
ficomps
das
xor
daa
inc
and
lods
in
int3
and
cmp
js
jb
dec
xchg
cmp
aas
add
leave
mov
lods
cmp
xor
dec
rcpps
push
pop
dec
sbb
fsubs
movsb
push
faddp
dec
and
aaa
cmp
leave
pop
leave
jns
vpsubusw
test
push
leave
pop
leave
imul
leave
mov
mov
push
mov
push
mov
orl
xchg
mov
xchg
jecxz
sbb
daa
int3
and
mov
xor
pop
daa
xchg
pop
dec
mov
daa
repz
xor
leave
cmp
pop
insb
or
scas
daa
cld
loope
add
or
or
cld
dec
adc
incb
dec
mov
xor
pop
push
sbb
cld
lods
pop
cmp
pop
in
lahf
cltd
jle
enter
xlat
ss
fs
xor
xchg
adcl
or
ljmp
scas
xchg
cli
sbb
xchg
sti
loopne
xor
push
mov
jb
jb
jb
jb
adc
pop
mov
xchg
or
cmp
leave
and
push
test
pop
in
add
pop
clc
xchg
jo
jle
cmp
lcall
sub
leave
jecxz
mov
pushf
sbb
or
xor
inc
xchg
push
xchg
pop
xchg
jmp
sub
mov
dec
adc
jb
jb
jb
dec
stos
or
lock
loop
dec
push
inc
gs
jg
lret
popa
cmp
leave
adc
mov
sti
sbb
aas
and
xchg
jns
js
daa
ds
lock
std
or
push
xchg
cmp
xchg
and
dec
roll
cmpsb
pop
addl
scas
cmp
sarl
xor
xor
add
jo
je
cmp
jl
cmp
mov
mov
pushf
imul
movsb
movsb
ret
jp
mov
dec
mov
dec
adc
sbb
push
adc
mov
in
call
dec
out
dec
cld
pop
and
cmp
or
adc
adc
sbb
and
mov
cmp
aam
inc
gs
insb
loopne
je
js
add
mov
mov
cli
pushf
in
in
mov
push
lods
mov
mov
dec
rcll
jns
hlt
pop
into
push
mov
or
mov
cmp
cmp
add
cmp
xchg
sub
outsb
or
jo
pop
xchg
sbbb
push
movsb
ret
leave
xchg
mov
or
pop
les
adc
loopne
fcoml
push
popa
sub
xor
cmp
fisubs
dec
loope
pop
jnp
inc
je
sub
dec
movsb
push
and
sbb
cmp
add
jb
xchg
xchg
add
fidivl
clc
xchg
cld
xchg
add
fsubrl
add
jl
js
leave
mov
push
fcoms
pushf
leave
mov
cmp
dec
mov
mov
scas
mov
sarb
stos
fs
in
sub
adc
cmp
aam
sbb
xchg
dec
ret
into
push
xchg
pop
xchg
pop
pop
call
mov
cmp
call
mov
and
mov
insb
inc
fstpt
clc
and
leave
or
sub
sub
cmp
inc
mov
cld
push
mov
into
pusha
test
cmp
insb
loope
je
outsb
sub
mov
lods
in
in
in
in
in
xchg
pop
sbb
xchg
int3
testb
mov
test
add
filds
push
and
adc
cwtl
inc
std
mov
adc
and
dec
loopne
pop
pop
push
clc
inc
lret
add
daa
adcb
or
xchg
sub
mov
push
movsl
sub
inc
push
repnz
pop
nop
jo
addb
stc
mov
call
xchg
dec
loope
bound
shr
adc
or
shl
fadds
cmp
adc
imul
insb
pop
adc
jno
pushf
and
pop
xchg
inc
pop
push
push
inc
sub
inc
into
or
or
dec
cmp
inc
cmp
dec
cmp
dec
mov
cmp
popa
cmp
cmp
fs
pop
cltd
jne
imul
jno
popf
and
jbe
insl
adc
inc
adc
adc
enter
dec
or
push
and
lret
adc
inc
pop
imul
stos
pushf
aas
push
ds
push
sub
inc
xchg
jae
lret
outsb
sub
or
sub
bound
dec
pop
mov
inc
dec
addr16
jo
adc
mov
add
jae
pop
xor
jno
sub
xor
in
adc
pop
push
ss
lds
jp
gs
insb
mov
jae
jmp
cmp
sub
push
jbe
imul
mov
stos
push
in
adcb
push
js
jne
xor
mov
je
xor
imul
mov
popf
jo
pop
test
outsl
pop
sub
xchg
imul
outsl
jb,pt
adc
inc
xor
test
inc
mov
sub
and
xchg
arpl
es
sub
pushf
pushf
inc
sub
sbb
popa
inc
xchg
cltd
push
adc
and
arpl
and
je
int
test
inc
xor
cld
insb
mov
push
insb
sub
stos
cwtl
cmpsb
mov
dec
push
and
cltd
sub
insb
push
cmp
lods
dec
inc
ret
scas
dec
bound
lret
outsl
adc
aas
cmp
test
mov
mov
sub
mov
movsb
gs
xor
aad
dec
js
mov
aad
sahf
rcll
in
add
fisubs
call
and
test
movsb
shll
fs
push
xchg
jne
sahf
xchg
xchg
dec
sub
dec
test
dec
mov
adc
push
sarb
arpl
pop
std
movsb
inc
pop
adc
loopne
mov
imul
add
or
push
push
cmp
sub
jns
dec
in
push
sbb
aaa
fdivrs
addr16
lods
dec
hlt
shll
jne
xchg
push
push
sarb
push
pop
mov
test
or
int
lret
dec
arpl
into
sarb
sub
push
insl
dec
dec
jl
jmp
mov
sub
push
xchg
bound
push
inc
scas
movsl
sbb
hlt
push
outsl
adc
in
and
sub
jae
sbb
add
push
movsb
adc
addr16
sbb
add
mov
push
mov
dec
jbe
mov
xchg
cmp
es
movsb
and
xor
data16
jo
rorl
movsl
sbb
clc
or
mov
into
in
mov
jbe
sbb
data16
movsb
mov
cs
mov
lret
push
jo
popa
sub
push
rorb
adc
push
lret
xchg
imul
jns
pop
push
ljmp
or
imul
out
adc
inc
xchg
jb
loopne
pushf
jo
sub
loopne
inc
js
jae
hlt
push
les
jp
into
and
or
fs
cmp
mov
movsb
dec
jno
sub
mov
icebp
and
dec
hlt
cmpsb
inc
hlt
mov
jbe
fs
enter
mulb
add
cmp
add
mov
pop
fwait
das
cmp
sbb
icebp
dec
aas
lret
js
sub
push
inc
push
dec
xor
repz
in
popa
dec
fwait
das
dec
pop
add
inc
pop
push
test
xor
mov
push
daa
pop
inc
xor
cltd
imul
inc
outsl
insl
outsb
sbbb
add
pop
lods
pop
push
push
dec
pop
push
fcomi
aam
loop
ficompl
imul
mov
bound
mov
cltd
adc
pop
sbb
sbb
mov
loopne
jns
dec
inc
and
in
xor
jo
bound
iret
inc
push
add
jecxz
sbb
call
enter
mov
push
add
cs
push
push
gs
adc
sub
inc
jno
aad
loop
sub
lock
xor
xchg
xor
js
dec
jp
enter
inc
fwait
or
inc
xor
push
xor
jle
aad
mov
adc
inc
mov
adcl
insl
loope
add
cmp
sub
insl
leave
adc
leave
sbb
inc
call
inc
and
jo
lods
jge
daa
sub
xchg
and
dec
outsb
ja
push
jo
lret
jb
sbb
dec
shlb
sub
mov
ret
dec
pop
dec
stos
sub
xchg
arpl
sub
push
nop
pop
repnz
bound
cltd
sbb
daa
nop
xchg
in
jl
popf
mov
jp
jae
sub
stos
add
add
or
add
add
hlt
pop
jmp
fucomp
mull
in
or
add
std
out
push
mov
adc
shl
xor
bt
xor
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
stos
lea
mov
shl
bsf
add
bts
inc
xor
neg
mov
add
call
lcall
mov
xlat
bsf
add
btr
cmp
adc
call
lcall
add
neg
mov
bts
xor
shl
adc
shr
shl
or
call
lcall
add
btc
btr
and
and
adc
bsf
xor
bt
call
lcall
lea
shr
or
or
adc
bts
sub
btc
cmp
call
lcall
ret
adc
divl
add
shr
mov
neg
mov
call
lcall
in
mov
out
mulb
shll
stos
and
add
add
add
lcall
mov
add
or
or
mov
bswap
or
shr
call
lcall
dec
out
push
mov
pop
mov
xor
inc
jb
cmp
mov
jns
lods
fidivrs
pop
push
lcall
fidivrs
pop
mov
push
mov
inc
js
jp
pop
mov
fdivp
fidivrs
ja
int3
cmp
movsb
arpl
dec
jle
daa
mov
push
cmp
jecxz
mov
test
cmp
jecxz
dec
mov
imul
jp
shll
int3
mov
inc
ret
push
jne
fidivrs
pop
jb
mov
push
xchg
mov
jl
pop
inc
inc
inc
inc
cmp
mov
jp
inc
dec
pusha
cmp
cmp
in
jno
sbb
cmp
jp
jg
xchg
lahf
mov
push
or
cmp
adc
cmp
mov
imul
adc
iret
neg
cmp
repnz
mov
dec
xor
or
mov
aas
dec
out
out
aas
lods
pushf
repnz
jl
inc
ljmp
push
arpl
jae
leave
in
dec
fiadds
mov
cmp
xor
js
jbe
cmp
cmp
jl
xor
dec
popa
mov
fiadds
test
mov
dec
dec
fdivp
fimuls
fidivrs
jae
cwtl
dec
outsl
push
mov
pop
mov
xor
popf
clc
fidivrs
jle
xchg
fdivp
dec
outsl
fidivrs
dec
mov
xchg
mov
icebp
mov
dec
adcb
cmp
inc
js
jp
pop
mov
mov
dec
dec
cmp
test
xor
add
cmp
push
mov
dec
fidivrs
mov
notb
mov
jl
sarb
mov
cmp
clc
mov
cmp
mov
fwait
dec
inc
js
pop
sub
fidivrs
pop
cmp
leave
or
cmp
xchg
dec
push
mov
inc
inc
cmp
mov
jp
inc
dec
pusha
cmp
cmp
scas
jb
cmp
or
push
addl
add
fidivrs
jp
stos
fidivs
push
sub
mov
pushf
mov
inc
push
mov
pushf
mov
cmp
mov
js
cmp
push
mov
fsts
push
push
xchg
cmp
mov
mov
push
mov
push
mov
and
aaa
mov
push
mov
push
mov
xor
cmp
rcrb
jns
nop
xchg
dec
mov
mov
dec
mov
jno
xor
and
mov
jns
js
mov
jns
jmp
push
insb
cmp
fwait
jne
mov
fidivrs
pop
fimull
cmp
fiadds
je
cmp
mov
rcrb
inc
lock
ja
add
fidivrs
pop
es
mov
dec
jns
jp
cmp
int3
push
mov
cmp
int
mov
jg
scas
fidivrs
js
pmaxub
fidivrs
dec
arpl
mov
pop
sbb
add
mov
mov
mov
pop
pmaxub
mov
or
add
dec
jle
fwait
sbb
stos
imul
pushf
mov
inc
push
mov
pushf
mov
cmp
mov
js
cmp
push
mov
fsts
push
push
xchg
cmp
mov
mov
push
mov
push
mov
and
aaa
mov
push
mov
push
mov
fidivrs
pop
leave
idivb
inc
jp
xchg
or
pop
cmp
loope
out
dec
aaa
icebp
aaa
fdivrs
mov
mov
mov
fimuls
fimuls
inc
cmp
outsl
xchg
arpl
jns
and
aam
clc
push
mov
mov
inc
lea
cmp
fidivrs
add
mov
push
popf
mov
push
sbb
pop
mov
push
mov
std
mov
in
mov
cmc
test
push
mov
mov
jp
mov
js
push
mov
push
movsb
cmp
gs
stos
insb
fidivrs
imul
dec
out
add
mov
push
mov
fcoms
mov
inc
push
mov
pushf
mov
cmp
mov
js
cmp
push
mov
fsts
push
push
xchg
cmp
mov
mov
push
mov
push
mov
and
aaa
mov
push
mov
push
mov
mov
inc
dec
jp
out
int
cmp
stos
inc
loope
jle
add
fidivrs
pop
stos
lock
rcrb
push
fidivs
sub
push
jg
xchg
pop
cmp
cmp
jb
cmp
scas
mov
andb
inc
cmp
fidivrs
inc
sarb
js
cmp
cmp
sbb
jmp
xor
dec
imul
data16
dec
mov
pop
js
add
cmp
lea
push
mov
fcoms
mov
inc
push
mov
pushf
mov
cmp
mov
js
cmp
push
mov
fsts
push
push
xchg
cmp
mov
mov
push
mov
push
mov
and
aaa
mov
push
mov
push
mov
mov
aam
fcmovnu
dec
outsl
fidivrs
dec
mov
js
into
mov
fidivrs
pop
push
cwtl
fwait
imul
push
mov
cmp
xor
mov
inc
int
inc
int
push
mov
mov
jno
push
push
mov
mov
xor
mov
inc
push
int3
mov
cmp
popf
int3
mov
push
pop
xchg
hlt
mov
cmp
cmp
push
outsl
xchg
in
mov
cmp
cmp
cmp
push
jo
jp
mov
pushf
xor
pushf
nop
inc
or
xor
mov
scas
test
lret
push
mov
scas
test
lret
repnz
push
mov
push
cmp
mov
mov
push
js
push
mov
push
js
push
mov
push
js
push
mov
push
js
mov
mov
push
sbb
mov
push
mov
push
js
push
mov
push
push
cmp
int
add
push
mov
push
jno
push
mov
push
push
out
xor
push
dec
sbb
push
loopne
inc
inc
lock
mov
mov
mov
push
mov
push
jno
push
mov
push
push
test
mov
mov
xor
jle
sbb
push
mov
inc
iret
mov
xor
jle
sbb
push
mov
mov
push
int3
stos
cmp
xor
xor
jle
sbb
push
push
inc
inc
inc
xor
cld
pushf
pushf
xor
pushf
movsb
fnstcw
mov
jl
dec
outsb
cmp
inc
push
xor
jns
aam
outsb
fiadds
mov
fstl
and
xor
data16
push
push
call
dec
js
pop
and
push
jp
cmp
cmc
fdivp
push
mov
add
inc
test
mov
cmp
cmpsb
fidivs
add
add
out
cmp
cltd
fidivrs
jae
jl
add
push
mov
cmp
push
cmp
xor
jbe
inc
push
ja
sbb
mov
je
jns
jae
jns
insl
or
mov
cmp
scas
mov
mov
mov
subl
jno
cmp
mov
dec
push
cmp
shll
push
mov
cmp
out
mov
add
mov
pop
cmp
jecxz
cmp
dec
fidivrs
jp
imul
mov
mov
pop
mov
popa
mov
dec
outsl
cmp
mov
int3
fidivrs
imul
mov
dec
push
js
ss
arpl
mov
jl
mov
movsb
fidivrs
lea
xchg
gs
fs
cmp
fiadds
adc
arpl
add
mov
clc
dec
arpl
jae
lcall
xchg
add
add
fidivrs
push
fdivrs
mov
mov
bound
mov
jl
icebp
int
dec
popa
cmp
xor
addr16
cmp
sbb
stos
jae
pop
add
scas
iret
xchg
push
mov
cmp
mov
sbb
adc
dec
je
pop
jno
mov
daa
pop
addr16
lcall
jns
aas
lcall
dec
cmp
lcall
jno
jmp
cwtl
cltd
cltd
cltd
add
pop
popf
sbb
adc
adc
sbb
outsl
inc
lcall
push
lcall
xchg
and
jb
data16
stc
jno
cltd
cltd
cltd
cltd
cltd
data16
push
mov
sbb
and
pop
pop
sbb
jb
data16
pop
clc
jb
jae
mov
popf
mov
test
jb
sbb
test
sbb
adc
adc
cltd
cltd
cltd
cltd
jb
pop
or
clc
jb
cmpsl
adc
int
cltd
cltd
sbb
cmp
sahf
sbb
mov
lcall
jno
xchg
and
stos
push
mov
xchg
es
outsl
pop
pop
sbb
jge
inc
outsb
pop
and
inc
and
jae
pop
sbb
jno
xchg
int3
ret
jb
add
call
jb
dec
ljmp
jmp
mov
adc
and
sbb
adc
sbb
imul
xchg
and
sbb
jecxz
ljmp
xchg
es
xchg
and
sbb
jno
cltd
cltd
cltd
add
pop
popf
adc
and
xchg
lcall
pop
sbb
adc
lcall
popa
cltd
test
dec
mov
stc
jno
cltd
cltd
cltd
cltd
cltd
data16
push
mov
sbb
and
pop
pop
sbb
jb
data16
pop
clc
jb
jae
mov
popf
mov
test
jb
sbb
test
sbb
adc
adc
cltd
cltd
cltd
cltd
jb
pop
or
clc
jb
cmpsl
adc
movsl
outsl
pop
push
xchg
and
jmp
dec
xchg
and
xchg
and
lcall
imul
sbb
adc
daa
xchg
sub
xchg
and
sbb
sbb
clc
imul
into
lahf
xchg
lds
xchg
pop
jge
sbb
sbb
mov
fidivrs
sub
inc
add
adc
and
dec
xchg
xchg
and
xchg
and
call
jno
lcall
sbb
sbb
adc
popa
cltd
cltd
cltd
and
pop
jne
call
and
bound
xlat
call
xchg
and
cwtl
imul
call
sbb
jmp
pop
dec
inc
push
rcrb
imul
scas
out
cwtl
cltd
cltd
cltd
add
pop
popf
sbb
xchg
sbb
xchg
and
lcall
pop
jbe
call
popa
icebp
sbb
insb
jle
xchg
es
ljmp
or
jne
adc
pop
nop
addr16
lcall
js
add
lret
lcall
jno
push
lcall
ret
lcall
popa
push
pop
jno
cltd
cltd
cltd
add
pop
popf
sbb
adc
icebp
sbb
sbb
xlat
dec
xchg
and
addr16
sbb
cmp
mov
sbb
jb
data16
stc
jno
cltd
cltd
cltd
cltd
cltd
data16
push
mov
sbb
and
pop
pop
sbb
jb
data16
pop
clc
jb
jae
mov
popf
mov
test
jb
sbb
test
sbb
adc
adc
cltd
cltd
cltd
cltd
jb
pop
or
clc
jb
cmpsl
adc
mov
jns
das
jbe
xchg
and
pop
jns
xchg
sub
jns
mov
inc
and
xchg
es
jno
cltd
cltd
cltd
add
pop
popf
lcall
push
xchg
and
lcall
pop
fwait
sub
xchg
and
mov
and
xchg
and
jmp
sbb
out
cmp
ljmp
mov
jl
xchg
and
and
inc
and
outsb
pop
sbbb
imul
push
push
mov
xchg
outsl
adc
xlat
xchg
cs
xchg
cs
jmp
adc
mov
addr16
sbb
movsl
xchg
or
sbb
adc
outsb
pop
dec
and
cmp
in
jno
cltd
cltd
cltd
add
pop
popf
adc
lcall
push
or
sbb
pop
mov
pop
iret
xchg
and
lcall
push
hlt
mov
outsb
pop
loopne
repz
rcr
pop
cwtl
jnp
lcall
imul
push
pusha
test
sbb
lcall
dec
or
sbb
jl
push
lret
mov
pop
popf
xchg
and
addr16
sbb
lcall
addr16
sbb
fstpl
jns
sbb
mov
inc
jno
cltd
cltd
cltd
add
pop
popf
jo
data16
push
je
mov
icebp
mov
bound
pop
lcall
jno
adc
outsb
inc
outsb
dec
xchg
and
icebp
cltd
mov
fwait
sbb
mov
and
pop
push
ds
and
xchg
and
pop
xchg
and
icebp
cltd
cltd
fwait
cltd
xchg
and
lcall
sbb
outsb
inc
sbb
lcall
jno
repnz
lcall
dec
outsl
loopne
sbb
ljmp
sbb
sbb
xchg
sub
add
mov
mov
lea
pop
xchg
cltd
int3
rcrl
mov
and
push
outsb
pop
subb
prefetcht2
out
cwtl
sbb
and
ss
jns
push
outsb
lcall
inc
lcall
dec
xchg
xchg
sub
and
lcall
push
mov
lcall
xchg
xor
out
sbb
cmpsl
cmp
ud0
out
add
imul
pop
jno
xchg
and
jno
cltd
cltd
cltd
add
pop
popf
adc
cltd
mov
xor
inc
outsb
dec
xchg
cmp
sbb
pop
sbb
test
call
addr16
cwtl
outsb
sbb
add
push
pop
cli
outsb
pop
aaa
jmp
ret
sbb
insl
xor
xchg
fnstenv
cltd
cltd
cltd
add
pop
popf
adc
sbb
and
jno
mov
xor
sbbl
xchg
lcall
dec
cmc
in
sbb
pop
xchg
sub
lods
stc
jno
cltd
cltd
cltd
cltd
cltd
data16
push
mov
sbb
and
pop
pop
sbb
jb
data16
pop
clc
jb
jae
mov
popf
mov
test
jb
sbb
test
sbb
adc
adc
cltd
cltd
cltd
cltd
jb
pop
or
clc
jb
cmpsl
sbb
cltd
fstps
pop
jmp
pop
pop
sbb
mov
pop
repnz
pop
movsl
cmpsb
mov
sbb
negb
imul
and
and
xchg
sub
and
outsl
dec
pop
jno
sbb
cwtl
cltd
cltd
cltd
add
pop
popf
adc
outsb
pop
cmp
push
add
jno
xchg
cs
jmp
pop
hlt
sbb
adc
popf
call
lcall
sbb
sbb
xorl
and
sbb
out
sbb
xchg
sbb
lcall
dec
jge
push
lcall
jno
mov
dec
sbb
cmp
pusha
xchg
and
outsl
inc
lcall
jno
mov
pop
out
lcall
addr16
scas
mov
and
pop
jne
ljmp
pop
mov
int3
xchg
cltd
cltd
cltd
add
pop
popf
sbb
xchg
das
pop
sbb
sbb
xor
in
daa
pop
sbb
aas
xchg
xlat
lcall
pop
jbe
mov
outsb
pop
in
shrb
addr16
or
push
nop
into
sbb
ljmp
xchg
and
lcall
jnp
cwtl
cltd
cltd
cltd
add
pop
popf
sbb
xchg
sbb
call
sahf
jno
cltd
cltd
cltd
add
pop
popf
sbb
adc
cltd
cltd
dec
jno
adc
jb
data16
stc
jno
cltd
cltd
cltd
cltd
cltd
data16
push
mov
sbb
and
pop
pop
sbb
jb
data16
pop
clc
jb
jae
mov
popf
mov
test
jb
sbb
test
sbb
adc
adc
cltd
cltd
cltd
cltd
jb
pop
or
clc
jb
cmpsl
sbb
jno
cltd
cltd
cltd
add
pop
popf
sbb
in
stos
call
sahf
mov
jno
cltd
cltd
cltd
add
pop
popf
cwtl
test
xchg
sbb
lcall
push
lods
sar
sbb
icebp
sbb
mov
popa
push
xchg
mov
pop
popf
sbb
adc
lcall
pop
dec
fsubrl
xchg
and
sbb
ror
idiv
pop
jno
xchg
and
enter
adc
pop
jge
mov
xchg
and
jmp
jno
xchg
and
sbb
push
and
rcrl
pop
fwait
sbb
loope
and
cli
xchg
orb
and
mov
mov
jo
addr16
cs
sbb
push
or
push
lcall
dec
cmpsb
hlt
sbb
mov
imul
enter
mov
addr16
addr16
lcall
xchg
pop
jle
and
dec
aaa
xchg
and
outsl
inc
lcall
bound
cwtl
cltd
cltd
cltd
add
pop
popf
cwtl
jno
dec
lcall
xchg
and
and
sbb
imul
jno
cltd
cltd
cltd
add
pop
popf
pushf
cmp
cltd
cltd
xchg
daa
popa
es
faddl
mov
push
lcall
pop
dec
jle
data16
test
cwtl
cltd
cltd
cltd
add
pop
popf
and
cltd
cltd
lcall
push
sub
sbb
lds
xchg
sbb
sbb
in
test
cltd
cltd
cltd
add
pop
popf
and
cmpsb
shrl
push
xchg
cmp
pop
jb
xchg
and
mov
sub
push
sbb
popf
insb
cmpsb
outsb
inc
jno
cltd
cltd
cltd
add
pop
popf
test
sbb
mov
add
outsb
pop
add
lcall
push
movsb
push
sbb
repz
mov
cltd
cltd
add
pop
popf
fsts
inc
addr16
lcall
jle
hlt
sbb
xchg
out
lcall
dec
jmp
sbb
xchg
and
jno
cltd
cltd
cltd
add
pop
popf
shr
xor
outsb
shrb
and
arpl
js
dec
sbb
xchg
in
xchg
pusha
jno
cltd
cltd
cltd
add
pop
popf
jb
add
jae
cltd
fildl
adcl
movsl
add
andl
xor
adc
inc
das
call
pop
fldenv
out
call
data16
ljmp
sbb
adc
cs
adc
outsl
out
popw
clc
sub
adcl
subl
sbb
pop
cmpsl
andl
sbb
xchg
ret
out
out
out
or
sub
insb
mov
pop
out
out
daa
and
daa
out
or
sbb
outsb
and
int3
fs
in
out
daa
or
bound
subl
in
outsb
out
subl
out
out
in
ja
xchg
fldenv
out
arpl
out
out
out
fs
insb
mov
and
outsb
jecxz
or
jge
jb
daa
call
xchg
cld
out
out
fs
push
jmp
and
outsb
jecxz
or
jge
jb
daa
call
out
jge
and
fs
xchg
orl
out
out
out
or
sub
insb
mov
pop
out
out
daa
and
daa
out
or
sbb
outsb
and
int3
fs
in
out
daa
or
bound
subl
in
outsb
out
subl
out
out
in
ja
xchg
fldenv
out
arpl
out
out
and
outsb
lret
ret
mov
sbb
out
out
fs
fs
out
insb
stos
out
and
outsb
jecxz
and
outsb
repz
out
cs
out
out
fs
sahf
out
fs
outsb
jmp
or
push
jmp
out
jge
and
fs
outsb
jmp
fs
outsb
jecxz
or
jge
jne
daa
call
fs
outsb
mov
aaa
call
mov
call
pop
pop
push
adc
andl
fs
fs
or
sbb
xchg
ret
out
out
out
or
sub
insb
mov
pop
out
out
daa
and
daa
out
or
sbb
outsb
and
int3
fs
in
out
daa
or
bound
subl
in
outsb
out
subl
out
out
in
ja
xchg
sbb
sbb
fs
out
out
fs
fs
push
ficomps
sbb
bound
andl
lea
pop
jno
data16
je
mov
fimull
shl
out
out
idiv
mul
andl
adc
mov
cmc
sbb
test
xor
ja
mov
or
outsb
lret
ret
data16
dec
adc
xor
cmp
and
stos
jns
cmp
insb
mov
lods
jne
adc
push
jp
pop
push
jecxz
or
call
add
pop
push
es
out
out
fs
insb
mov
cli
andl
rorl
ds
add
pop
sub
loope
adcl
sbb
and
mov
stc
adc
inc
gs
data16
cmc
and
andl
insb
out
es
hlt
xor
hlt
xchg
andl
data16
add
sub
pop
sbb
or
sbb
xchg
ret
out
out
out
or
sub
insb
mov
pop
out
out
daa
and
daa
out
or
sbb
outsb
and
int3
fs
in
out
daa
or
bound
subl
in
outsb
out
subl
out
out
in
ja
xchg
out
out
jge
and
out
sbbl
cmp
push
sub
sti
call
xor
pop
or
addr16
or
outsb
rol
andl
fstps
cmp
sbb
addr16
data16
call
data16
call
aaa
sbbl
pop
pop
adc
xor
out
adc
jo
pop
or
scas
sbb
addl
and
cmpsl
mov
out
and
in
bound
call
sub
pop
adc
andl
out
out
fs
fs
outsb
jecxz
pop
push
sbb
leave
data16
sub
call
push
scas
sahf
andl
andl
sbb
xchg
ret
out
out
out
or
sub
insb
mov
pop
out
out
daa
and
daa
out
or
sbb
outsb
and
int3
fs
in
out
daa
or
bound
subl
in
outsb
out
subl
out
out
in
ja
xchg
fldcw
es
mov
xor
loopne
stos
andl
sub
sbb
call
out
out
fs
insb
mov
add
andl
mov
add
sub
xor
dec
or
pop
adc
out
andl
sbb
aam
andl
roll
or
out
fs
fs
outsb
jecxz
daa
push
adc
pop
sbb
popw
jmp
sub
add
sub
in
push
mov
adc
adc
out
and
mov
test
sub
sub
adc
add
cwtl
add
push
cltd
jmp
mov
pop
add
ja
add
nopl
inc
xchg
loopne
movsb
add
add
jmp
xor
add
enter
sbb
pop
fnstcw
xor
add
aam
dec
jnp
mov
push
lahf
dec
cld
add
test
add
xor
shlb
and
mov
jle
add
xchg
jl
lods
mov
sbb
mov
jmp
in
clc
inc
jle
xor
and
lock
popa
dec
pop
sbb
add
inc
adc
jae
inc
add
cmp
mov
add
sbb
fnclex
mov
xchg
push
adc
mov
rorb
test
adc
pop
jno
xchg
push
add
outsb
subl
in
mov
cmp
add
adc
icebp
xor
jl
sub
mov
push
adc
jge
sub
fwait
ss
xchg
push
lcall
xchg
adc
rorb
jne
and
add
pushf
adc
sub
and
sbb
dec
or
aas
mov
scas
push
or
xor
rolb
sub
leave
decb
xor
or
jne
xor
jbe
sbb
push
and
adc
mov
xor
into
or
xchg
in
cli
rcrl
push
jmp
add
loopne
ds
fildl
inc
add
aam
jp
mov
lret
jg
push
inc
dec
stos
clc
pusha
fwait
mov
mov
xchg
cmp
pop
dec
test
pop
jmp
dec
push
lock
loop
call
push
divb
jb
clc
dec
notb
fbld
inc
sbb
xor
sbb
pop
jl
into
dec
dec
iret
push
cmp
push
cmp
cwtl
or
push
cmp
xor
inc
fcoml
cmp
inc
xchg
pop
xchg
ss
fcoms
push
jle
jl
loope
add
push
pop
cmp
in
dec
je
sbb
inc
dec
rclb
add
push
xor
es
pop
int
in
pop
loop
out
and
dec
mov
aad
inc
out
inc
inc
and
cmp
inc
icebp
jle
push
pop
out
inc
iret
dec
xor
xor
inc
out
xorl
xchg
cmp
ljmp
inc
inc
push
inc
push
outsb
jno
movsl
push
scas
sub
add
inc
test
pop
inc
bound
push
mov
je
arpl
repnz
jae
out
push
repnz
xor
and
call
dec
popa
jns
out
xor
arpl
in
jo
insb
imul
push
dec
stc
push
push
out
dec
clc
gs
push
pushaw
je
sub
dec
insb
loop
sbb
adc
fwait
inc
jb
xchg
js
mov
and
outsl
addr16
imul
aam
mul
inc
jle
fmull
and
push
push
addr16
popa
insl
lock
imul
inc
adc
add
ja
adc
enter
add
and
data16
mov
popf
jbe
xor
outsw
aad
and
inc
xor
sbb
pop
jge
xor
mov
mov
insb
mov
outsb
imul
scas
cmp
sbb
cs
stos
jb
shlb
out
jns
dec
out
cs
jp
add
or
std
sti
out
pop
jno
cmp
jns
sub
and
cmp
movsl
jne
xor
sub
fnstenv
inc
fnsave
sub
mov
inc
and
push
insb
icebp
lods
and
mov
bound
push
xchg
cmp
jo
stos
popa
cmp
das
xchg
idivb
sahf
add
loop
add
mov
add
arpl
push
mov
aad
xchg
add
jg
lret
rorl
jge
popa
jne
xchg
testl
cmp
dec
add
xchg
sti
fldl
jno
sbb
dec
dec
repz
idivl
adc
jmp
movsb
xchg
andb
jns
mov
sti
push
push
xchg
sbb
or
mov
iret
out
adc
mov
inc
cs
cs
fistpll
repnz
mov
insl
pop
push
jne
adc
mov
mov
push
outsb
leave
shrb
sub
add
dec
shlb
sbbb
dec
inc
push
push
inc
adc
pop
inc
mov
leave
jp
or
dec
inc
add
mov
