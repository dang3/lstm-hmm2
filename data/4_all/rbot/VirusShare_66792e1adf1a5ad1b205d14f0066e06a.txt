mov
push
pushl
push
xor
mov
push
inc
inc
outsl
insl
pushl
arpl
ficoms
jmp
xlat
mov
lods
inc
jae
sbbb
cmp
lock
es
movsb
pop
fs
dec
push
push
loopne
fwait
mov
push
insb
shlb
push
in
mov
xchg
lret
fcoml
aaa
insl
arpl
js
mov
fidivrs
fstpl
jge
loopne
lea
aad
push
fwait
lret
test
nopl
xor
ljmp
cltd
xor
jbe
add
daa
mov
jge
mov
idivb
adc
sbbl
cmp
push
pop
cmpsb
pop
out
test
stos
mov
lret
push
outsl
dec
adc
mov
nop
jmp
data16
fcomip
ffree
movsl
out
into
mov
addb
pop
cmp
push
sbb
xchg
or
clc
std
xchg
scas
or
lcall
mov
aas
mov
jmp
xchg
movsb
jp
push
ljmp
ljmp
mov
add
iret
ret
cld
imul
add
push
stos
inc
arpl
add
cmc
ss
push
or
push
pop
add
sub
inc
mov
bound
and
pushl
xor
leave
dec
mov
cmp
push
pop
daa
pop
mov
mov
mov
or
push
call
push
loope
cltd
sub
pop
xchg
sarb
xor
jnp,pn
rcr
pop
add
aaa
inc
inc
push
push
sub
dec
std
or
inc
aam
lods
stc
sti
fmuls
ret
xchg
sub
mov
clc
loopne
push
push
lahf
pop
mov
in
lds
call
push
hlt
ss
out
jl
jmp
in
call
stos
out
popf
fimull
insl
mov
dec
es
ja
mov
addr16
sar
pushl
int
ret
into
and
in
jmp
mov
mov
mov
cltd
punpcklbw
fnstsw
jp
sbb
sub
and
mov
sbb
mov
cli
mov
ret
roll
pop
jg
adc
push
sti
and
mov
lock
bound
jmp
and
adc
bswap
pop
jno
and
jle
jnp
shlb
xor
jmp
jae
or
push
decb
scas
sub
movsb
jecxz
fildll
inc
xchg
addr16
movl
decl
daa
xor
cmp
push
mov
sbb
cmp
add
dec
sbb
cmp
int
dec
dec
decl
incl
mov
pop
jae
hlt
hlt
sub
lahf
mov
cmp
jo
lcall
popf
dec
jmp
mov
pop
das
push
std
cmp
fwait
add
and
shl
sahf
lock
push
das
sahf
incl
or
lods
jo
dec
cmp
addr16
addr16
jg
and
decl
lods
into
or
cmpsl
fiadds
insl
fdivrl
xor
loope
fisttpl
push
jmp
sbb
iret
fcomps
push
adc
es
es
addr16
bnd
out
incl
ja
fdivrl
rol
push
ljmp
cmp
or
inc
aad
inc
or
ljmp
add
jns
jbe
add
and
sub
clc
mov
mov
in
xchg
aas
ret
scas
xor
sbb
incl
fwait
adc
mov
mov
jnp
aad
dec
test
clc
sti
lcall
lods
add
push
outsl
rorb
sub
adc
mov
icebp
lods
push
jg
andb
hlt
or
cmpsb
imul
sbb
les
xor
sbb
add
popf
cmpsb
mov
or
sub
bound
aad
cmp
stos
sbb
pop
out
sbbl
push
divl
mov
imull
insb
inc
jl
int3
in
clc
xchg
sbb
aam
test
mov
adc
decl
cmp
jp
aaa
ficoml
fs
cmp
jno
idivb
adc
das
pop
or
call
dec
add
sbb
rcl
mov
xchg
fmul
or
sbb
xchg
xor
inc
fs
decl
outsl
jnp
mov
add
push
mov
mov
pop
jae
sub
pshufw
call
decl
sub
inc
sahf
sbbb
push
bound
cltd
scas
dec
inc
and
inc
jg
mov
mov
push
fildl
add
jl
cmp
or
scas
pop
push
jne
incl
inc
jnp
mov
das
movsl
pushf
into
fs
fdiv
jns
mov
pop
daa
scas
loopne
xchg
daa
xor
inc
add
xor
mov
and
jne
xor
dec
sti
dec
push
shr
incl
fisubl
lods
mov
aam
popa
xchg
je
or
decl
lcall
add
pushf
xchg
mov
shl
daa
push
push
std
bnd
jnp
mov
fwait
mov
cmp
mov
jnp
or
in
andb
dec
adc
inc
lea
pushl
mov
aam
repz
imul
cmp
sti
imul
ljmp
scas
stc
jl
xor
xor
xorb
cmc
out
inc
push
out
add
lcall
dec
push
fisubrl
pop
mov
jecxz
xchg
out
mov
jge
sahf
test
testb
arpl
into
xor
xchg
mov
popa
xchg
outsb
jl
shll
add
sbb
dec
mov
push
cld
adc
mov
sbb
cmpsl
mov
sbb
imul
cmp
ds
call
xlat
pop
push
inc
enter
inc
pop
add
cld
ss
lret
add
dec
jns
fwait
clc
lcall
adc
lret
xor
sbb
or
pop
enter
out
adc
ljmp
loope
mov
add
arpl
pop
aaa
adcb
mov
jo
xchg
or
cmp
clc
adc
and
xor
jmp
jle
cmpb
rcr
sarl
clc
ss
cwtl
std
push
outsb
popf
lcall
inc
mov
sub
fs
lods
je
movsb
fwait
mov
fwait
insl
scas
mov
aaa
and
pushl
nop
pop
in
in
adc
push
clc
xchg
loopne
mov
jmp
fdivr
push
pop
or
and
sub
subl
xlat
add
cmp
jb
sub
mov
orl
or
xchg
enter
incl
enter
adc
pusha
jns
pop
adc
push
xor
addb
xchg
adc
daa
call
dec
mov
xchg
addr16
test
int3
xor
dec
imul
mov
adc
icebp
loopne
cmp
dec
xor
lret
cmp
or
push
loope
jl
into
lret
mov
fiaddl
sbbb
in
cmp
add
shll
cmp
je
std
addr16
xor
out
pusha
inc
pusha
cmp
jg
andl
popf
sbb
sarl
negb
cli
lods
inc
mov
xor
cs
cmc
stos
push
outsb
mov
push
jno
jecxz
jle
int
xchg
add
movsl
call
jne
outsl
sbb
sbb
stos
std
pop
mov
mov
add
lret
ljmp
icebp
daa
or
jne
adc
dec
test
bound
test
mov
in
pushl
into
fimull
movsl
xor
in
stos
xor
outsl
jmpw
and
loopne
stos
fdivrp
mov
mov
xchg
jnp
inc
jno
jae
mov
or
pushl
outsb
daa
into
jno
jae
sahf
cs
push
mov
mov
xchg
dec
cli
fidivrl
fildll
dec
xchg
xchg
or
jle
mov
cmpsb
xor
imul
push
mov
sbb
inc
jnp
lret
mov
ljmp
sbb
cmp
jns
xchg
adc
shlb
aad
rcll
loop
jbe
icebp
jecxz
sbb
jns
pop
xor
decl
addr16
jae
sub
push
xchg
insb
pop
mov
push
push
into
mov
adc
sbb
addr16
je
sbb
pop
push
mov
iret
lods
jae
lcall
insb
cmp
mov
add
pop
inc
jg
add
gs
mov
jae
cltd
push
mov
xchg
xchg
gs
lret
push
jecxz
sbb
insl
imul
and
jb
and
or
sti
sub
jo
ja
xor
jmp
jmp
in
cltd
mov
pop
push
bound
or
je
push
decb
je
mov
mov
decl
jl
testb
push
scas
test
mov
stc
fsts
sahf
aas
xchg
les
pop
sub
sub
push
out
mov
push
xor
jns
xchg
mov
sti
ret
add
pop
cmp
pushl
pop
xchg
ljmp
or
xor
jb
cld
mov
pushl
mov
jecxz
mov
inc
mov
pop
jecxz
insl
or
sub
sub
enter
leave
popl
ret
addr16
jg
jmp
push
xchg
xchg
xchg
jo
rcl
push
mov
jmp
jge
hlt
cmp
pusha
addl
inc
push
push
xor
fsubrs
jno
push
pop
clc
das
js
int
push
ljmp
inc
mov
arpl
cmpsl
lcall
lods
cmp
cmc
aaa
inc
cs
push
mov
xchg
aad
jp
add
lods
jge
data16
lea
incl
pop
dec
mov
mov
adc
inc
inc
lock
sbb
outsb
and
les
test
pop
das
hlt
cli
mov
inc
and
out
adc
xchg
lcall
dec
and
add
push
xor
cmp
ds
adc
aas
mov
adc
inc
pop
int
xor
in
inc
call
jo
dec
pop
ds
push
cltd
pushf
popf
or
sbb
cltd
movsb
sub
sbb
mov
xor
cld
bound
mov
test
add
mov
repz
sarb
fs
outsl
icebp
sar
jl
push
movsl
push
loop
test
jae
dec
xor
xor
rolb
jle
jb
add
jmp
rol
cmp
popa
js
inc
jae
adc
mov
nop
mov
mov
mov
jle
sub
mov
xor
insl
push
xlat
iret
jle
sub
pop
xchg
mov
pop
je
call
incl
mov
mov
repnz
xchg
arpl
test
gs
mov
stc
ljmp
test
rolb
jbe
cwtl
jb
sbb
xchg
inc
decl
mov
in
imul
lahf
inc
adc
test
mov
dec
push
js
cli
xchg
mov
mov
xor
data16
adc
mov
xchg
sbb
dec
es
jne
in
xlat
pop
pop
fcmovnb
mov
scas
push
jo
push
inc
or
decl
and
dec
sbbl
rcrl
sub
clc
mov
push
and
daa
inc
mov
inc
rolb
mov
push
sub
cmc
clc
movsb
outsl
scas
xchg
or
xchg
call
test
sbb
stos
lcall
mov
imul
stos
mov
pop
cli
cli
in
adc
mov
out
mov
outsl
sbb
repz
pusha
ljmp
cmp
adc
jbe
addl
inc
rcrl
add
jmp
sub
fisttps
mov
rolb
neg
enter
xor
incb
dec
cld
fimuls
imul
mov
lods
leave
sahf
adc
aaa
ret
test
push
decl
fidivl
cli
cli
add
push
js
xchg
pushf
push
fmull
jg
push
adc
enter
cmp
lds
lea
add
pushl
loopne
lahf
shrb
lret
add
xor
or
xor
scas
cmp
add
or
jno
je
push
push
pop
sti
shr
lret
rcr
das
and
je
cmc
decl
cmp
pop
cli
incl
dec
mov
shl
aam
lods
int
and
push
and
sub
daa
sub
push
orb
inc
inc
pop
ljmp
sarb
pushf
rcrl
movsl
mov
mov
push
mov
mov
sbbl
mov
xor
iret
xor
ljmp
jae
or
mov
xchg
sub
cmp
add
sbb
mov
into
push
and
pop
mov
and
xchg
clc
js
jmp
cld
and
jns
xchg
push
mov
bound
sbbb
adc
mov
dec
outsl
das
sbb
test
cmp
js
pusha
xor
insb
rcrb
icebp
push
add
loop
std
ficoml
int3
dec
int3
push
mov
clc
sbb
xor
add
lcall
ret
sbb
negl
test
sub
imul
push
std
ljmp
sub
lds
sbb
mov
cmpb
or
mov
and
aad
inc
sbb
into
or
mov
fnstsw
push
mov
repz
addr16
lahf
cmp
js
lds
sub
ficomps
aaa
jmp
mov
loop
popf
int3
hlt
sub
sbb
add
cmp
mov
xor
xchg
sbb
mov
pop
sti
add
xchg
add
pop
dec
push
inc
and
sar
mov
adc
add
xor
mov
fsubr
push
xchg
mov
or
push
incl
xchg
inc
jae
sahf
std
jns
jg
mov
jmp
std
sbb
test
loop
sahf
out
lret
or
jle
adc
push
xchg
push
jb
test
inc
mov
icebp
incl
add
mov
push
lcall
call
xchg
cltd
add
push
mov
stos
mov
xchg
cwtl
jp
push
xor
push
xor
rol
sar
mov
js
imul
fdivr
xor
sahf
icebp
xchg
repz
iret
dec
jne
enter
mov
test
fistpl
sar
shl
xchg
jne
lcall
sbb
pop
test
and
pop
pop
pop
sbb
movsl
mov
cmc
pop
cli
jmp
decl
add
cmp
cmp
mov
jmp
cmp
in
sar
cmp
push
add
sbb
mov
jle
adc
into
fisttpll
out
lcall
pushl
int3
pop
rol
mov
loop
sub
in
sbb
mov
ret
push
sub
sbb
add
push
int3
mov
mov
mov
es
ljmp
and
add
push
jge,pt
fldt
jo
cli
sti
xchg
add
dec
and
call
push
clc
enter
pop
push
xor
push
push
and
mov
lcall
fs
jg
mov
mov
sarb
mov
ljmp
clc
out
stos
lcall
out
in
push
aad
pop
ljmp
incl
jb
sahf
cwtl
cmpsb
fdivs
pop
mov
rclb
adc
or
inc
in
lods
call
mov
inc
out
divl
mov
iret
test
fsubr
cli
xchg
cwtl
add
xchg
pushl
decl
sub
int3
stos
aam
and
pop
and
std
fcmovb
cmp
jl
mov
inc
imul
test
adc
sbb
repz
jp
in
subl
xchg
and
das
lea
push
cmp
mov
cld
movsl
decl
mov
jae
xchg
inc
inc
in
int3
fisubrl
mov
cld
push
sbb
test
cmp
sbb
sbb
pop
xor
ret
ja
out
call
and
les
movsb
in
daa
sbb
jge
fistpll
stos
mov
dec
xchg
dec
jb
sbb
jle
pop
ss
cmp
insl
cmpsb
cld
push
insl
push
and
lock
fildll
das
outsl
scas
fsubp
dec
fstps
lahf
xchg
adc
mov
adc
sbb
cmp
jmp
push
xchg
inc
inc
pop
loopne
ljmp
sub
dec
inc
sbb
push
xor
xor
or
cmc
pop
pop
imul
repnz
adc
call
jg
mov
in
or
dec
inc
push
inc
out
fdivp
jg
cmpsl
addr16
xlat
aad
incb
xor
negb
incl
adc
pop
pop
sbb
nop
add
rclb
ss
dec
ljmp
aam
cmp
cmp
and
lock
xchg
out
decl
cmp
add
adc
and
add
xchg
fnstenv
ljmp
std
xchg
cmpsl
int
pop
sbb
stc
mov
arpl
pushl
inc
fxtract
or
movsb
imul
in
mov
jno
lcall
lcall
shlb
pop
pushf
adc
jg
sub
adc
jo
jecxz
mov
js
rcr
sub
insl
push
in
test
push
dec
mov
pop
cli
cmp
scas
in
inc
movsl
push
dec
inc
in
mov
int
xchg
jp
aaa
clc
push
stos
pop
cmp
gs
call
jbe
pushf
jo
inc
pushl
cmp
cmc
jne
pop
push
xchg
mov
repz
clc
das
cld
sahf
lret
push
adc
sub
adc
adc
dec
rcrb
lcall
int
jns
mov
movsb
push
inc
sti
les
adc
lcall
or
out
aas
inc
lea
fldcw
sub
movsb
fmull
test
addr16
movsb
lods
jle
xor
jb
lcall
in
movsl
lcall
imul
imul
jns
outsl
mov
fistpll
lcall
ror
push
inc
xor
xchg
mov
push
adc
push
lcall
mov
fs
icebp
jecxz
js
arpl
pop
bound
xchg
repnz
mov
rcl
lret
mov
mov
aaa
jle
cld
xor
bound
and
cld
dec
lods
adc
icebp
sbb
insl
sbb
call
loop
in
mov
lcall
movsl
repnz
xchg
xor
mov
cs
aad
adc
push
xchg
enter
pushl
and
pop
fldt
movsl
mov
mov
cmc
or
add
lds
pushl
nop
mov
jno
or
pop
cmp
mov
ret
ret
jg
mov
inc
cmc
ret
stos
in
and
mov
int3
inc
clc
dec
pop
cltd
pusha
push
mov
cmp
lds
dec
jp
leave
cld
pop
mov
cmc
jg
pop
clc
jno
push
les
adc
data16
sbb
pop
sbb
cwtl
enter
sbb
cld
lods
daa
pop
jne
loope
add
leave
imul
neg
sar
idiv
ret
sbb
dec
add
sbb
out
outsb
filds
xor
hlt
pop
fcomp
cli
inc
es
idiv
or
sbb
sub
cmp
aaa
cld
std
mov
int3
dec
adcb
pop
sahf
pop
cmp
or
sub
fldenv
or
icebp
sti
cmp
in
mov
lret
cmp
push
outsl
or
dec
mov
decl
imul
sbb
cmc
fidivrl
adc
sbb
clc
subl
sub
pop
popf
push
lds
dec
or
adc
jg
jbe
js
or
pushf
sub
js
je
sbb
nop
cmp
decl
pop
lahf
in
push
xor
push
and
mov
sub
cmp
jg
mov
xor
pushl
cmp
jmp
pop
push
mov
pop
int3
pop
loope
jbe
lods
mov
in
ret
gs
push
ljmp
or
lea
outsb
jge
mov
push
or
cli
pop
in
js
sti
cmpsl
lret
inc
mov
jmp
adc
jecxz
cmp
push
add
rol
clc
adc
fdivs
daa
inc
shrl
jbe
push
incl
pop
pusha
out
push
sub
and
movsb
jb
xor
fimuls
test
mov
aaa
mov
movsl
push
mov
lret
and
imul
in
in
std
jnp
popw
mov
sub
cmp
jns
and
jle
cmp
cmpsb
xchg
jge
shlb
loopne
lcall
cltd
fsubrs
stc
pushf
flds
add
cld
adc
xor
fisttpll
imul
repz
jp
pop
mov
cmp
fidivrs
je
jae
mov
rcll
cld
repnz
test
pushl
imul
orl
inc
mov
add
movsl
loopne
pop
dec
adc
decl
leave
repz
popa
mov
pop
js
sbb
xorl
jmp
push
mov
pop
pusha
int
mov
xor
sbb
stos
jl
cmp
xchg
pop
and
jl
or
je
fisubrs
or
add
or
repz
inc
sub
add
mov
ret
addr16
inc
lds
nop
jne
ror
out
cmp
push
loopne
repz
incl
add
cltd
int
out
dec
pop
out
xor
insb
or
dec
shll
xor
cmc
mov
leave
mov
xorb
dec
imul
sub
repnz
ljmp
aad
outsb
xlat
mov
pop
and
fdivr
lcall
pop
add
push
push
push
cmp
loopne
mov
push
mov
push
adc
push
push
or
test
sbb
call
inc
mov
or
aad
leave
sbbb
xchg
mov
sbb
outsl
ljmp
pusha
xchg
popf
fs
add
sahf
xchg
sbb
or
insb
shl
clc
out
ja
rorb
and
push
push
test
sbbl
xchg
jmp
mov
scas
je
fcmove
or
inc
sub
int3
jle
fwait
mov
jmp
cmpb
mov
adc
cmc
fdivr
ja
lret
dec
pop
clc
jmp
cmp
pop
mov
fstp
xor
inc
loope
cmp
decl
fsubrs
lea
shr
dec
jnp
mov
inc
fcoml
pop
loopne
out
je
lahf
out
outsl
mov
mov
push
sti
ljmp
cld
jmp
pop
inc
sbb
repnz
cmp
add
jne
mov
jg
cmp
xor
aam
ds
loop
xor
outsb
or
or
sub
jmp
dec
cmc
sbbl
ficoms
loope
sbb
mov
fsubs
clc
nop
inc
outsl
pushl
mov
inc
or
add
jne
fcmove
outsb
pop
pop
fs
je
decl
sbb
mov
bnd
cmp
xor
pop
das
xchg
push
ljmp
xchg
imul
add
sub
loopne
or
icebp
call
daa
call
dec
jl
xlat
jae
mov
call
dec
mov
loopne
inc
mov
jnp
xor
fcomip
in
add
push
orl
jns
orl
jae
sub
imul
fdivl
inc
mov
call
xchg
add
push
cmpsl
fcmovne
add
sbb
mov
cmp
incl
push
mov
fcoml
cmp
shll
call
pop
pushf
sub
push
scas
ds
ret
clc
dec
cmp
insb
mov
imulb
jecxz
into
jno
pushl
mov
roll
movb
inc
xor
mov
adc
ficoml
push
or
jg
xchg
das
loope
cld
cmp
xchg
movsb
mov
sub
mov
or
cld
aad
mov
movsb
in
in
adcl
in
xlat
jge
mov
xchg
mov
mov
push
pushf
stos
call
clc
mov
enter
cs
je
in
ret
andl
fucomip
jg
add
sbbl
inc
mov
add
idivb
lcall
in
push
in
add
pop
jne
stc
rolb
xor
mov
mov
lret
mov
inc
les
xorb
das
popa
dec
shll
mov
insl
addr16
jg
call
icebp
lcall
add
andl
jmp
stos
and
lock
imul
fbld
and
ds
in
fdivp
popa
sub
inc
pop
xchg
xor
sbb
jns
jmp
idiv
mov
incl
mov
jp
dec
adc
jp
std
push
rorl
outsl
mov
jnp
mov
mov
das
cld
call
div
scas
cld
pop
jae
adc
mov
mov
xchg
loop
pop
ljmp
mov
jae
shlb
imulb
incl
lcall
into
in
callw
fimull
negb
mov
adc
incb
dec
inc
das
outsb
mov
jne
ljmp
std
lock
shlb
cmp
add
inc
dec
add
push
ljmp
sar
call
loopne
cld
push
cmp
pop
xchg
mov
inc
js
jg
hlt
add
cmp
push
ljmp
mov
xor
lods
jo
xchg
cmp
movsb
or
push
pop
jo
sub
mov
std
jg
jnp
ss
popf
push
clc
or
popa
push
stc
dec
and
jb
sti
lcall
into
lcall
push
loopne
mov
cmp
sub
sub
adc
sub
cltd
negb
dec
incl
sub
movsb
cmc
call
ljmp
add
inc
pop
adc
out
scas
mov
dec
in
in
in
outsl
push
into
inc
iret
xor
ret
fwait
ret
xchg
jl
ficompl
or
repnz
jmp
pushl
adc
repnz
inc
int3
cli
push
lock
mov
add
imul
sbb
cmpsl
fldcw
in
sub
dec
nop
ds
push
decl
inc
pop
movsl
push
mov
pushl
scas
lcall
pushf
fcompl
shrb
fdivrl
xor
sbb
push
sahf
jo
lods
rorb
fsts
aaa
jge
stos
lahf
in
call
xchg
rorl
ds
ja
out
int3
mov
mov
xor
sub
jmp
or
dec
adc
jg
mov
inc
dec
dec
xchg
call
call
fistpll
inc
fldl
call
inc
or
mov
cmpsb
mov
shlb
push
cmp
inc
stos
hlt
test
mov
in
xor
pop
mov
add
pop
jl
sub
mov
fcmovnbe
incl
daa
xchg
mov
js
subb
aad
push
roll
xchg
xchg
int3
mov
incl
testb
and
lds
cmp
shlb
xor
jecxz
rcll
cli
in
inc
mov
cmp
cvtps2pd
test
js
das
std
mov
xor
push
dec
fdivr
or
clc
cs
lahf
lock
loope
shlb
loopne
push
fucomi
mov
fdivrl
call
dec
insb
xor
mov
sbb
mov
cmp
rorb
scas
or
sub
cmp
sbb
cld
loopne
sbbb
mov
mov
cmp
and
aas
fstps
pop
call
lock
sub
and
cwtl
mov
cmc
sub
ljmp
in
ds
fdivp
mov
outsb
pushf
in
or
clc
push
mov
mov
cli
nop
adcb
pop
je
out
jge
jns
push
xchg
rclb
lcall
jecxz
push
idiv
xchg
aas
and
dec
out
in
fdivp
and
addr16
pop
js
cmpl
sbb
cmp
inc
out
into
sbb
add
outsl
cld
or
push
rcr
dec
xor
filds
adc
lcall
cmp
pop
cmp
daa
dec
ret
and
lcall
sbb
sti
jg
pop
dec
stos
sbb
inc
hlt
out
test
iret
mov
pushf
subl
enter
call
dec
mov
adc
fcoml
ret
mov
xor
jmp
aas
sub
ret
les
jecxz
in
sbb
inc
cmp
dec
cld
ljmp
inc
rorb
mov
xorl
or
lahf
test
incl
adc
add
loope
fldenv
or
mov
sub
dec
xchg
adc
jg
mov
iret
cmc
mov
subb
ljmp
mov
mov
aaa
cli
jmp
leave
mov
int3
or
fidivl
outsb
dec
mov
mov
ljmp
lock
mov
roll
xchg
lds
loope
add
call
inc
add
cwtl
mov
lock
in
fistpl
scas
ret
lods
repz
call
inc
xchg
pop
sub
add
mov
jl
subb
xor
ljmp
add
xchg
jnp
cmpsl
aam
push
pop
mov
xchg
and
out
and
int
xor
cmp
cmp
clc
incl
push
das
mov
xor
xlat
rcll
popf
mov
insl
addr16
ljmp
cmc
pushf
add
sbb
jl
sub
imull
add
lods
mov
ljmp
out
mov
loope
int
sub
mov
into
aaa
leave
mov
pop
push
mov
mov
inc
mov
incl
mov
lret
outsl
addr16
inc
fisttps
lock
inc
xchg
adc
mov
jmp
dec
pop
mov
pop
shrl
xor
clc
jg
add
mov
popf
rep
lcall
ljmp
iret
ljmp
cmp
ret
dec
cwtl
cmp
lcall
inc
xorb
popa
xor
push
arpl
addr16
decb
cld
pushl
iret
jl
mov
push
push
imul
push
int3
mov
incl
mov
sbb
jns
mov
ret
jmp
inc
xchg
repnz
enter
push
pushl
push
std
in
xchg
xor
xchg
dec
lds
mov
push
loope
ljmp
sahf
lahf
cs
cmp
lods
in
lods
xor
jg
push
sahf
insl
or
imulb
call
cld
insb
sub
arpl
test
mov
aaa
pop
xchg
icebp
cltd
insl
inc
lea
inc
dec
or
inc
shll
popa
in
sub
das
fs
push
mov
mov
sub
cmp
cltd
aad
cmp
fldcw
add
sbb
in
incl
fdivrl
cmpsb
outsb
enter
xor
cld
movzbl
dec
cwtl
lcall
mov
dec
fldcw
sbb
push
popa
pop
hlt
pushf
call
xchg
pop
fcmovnb
cltd
and
das
incl
mov
push
sti
test
jae
fs
and
fwait
lret
ljmp
addl
mov
and
ljmp
rcr
and
push
pop
aad
push
incl
sti
movsl
add
in
fsubrs
test
or
inc
mov
jecxz
movsb
mov
jmp
out
fstl
lcall
aas
cltd
aam
outsl
sub
lcall
popa
xchg
aaa
pushf
enter
lahf
scas
add
ljmp
fstpl
int3
bound
pop
cli
test
push
mov
xchg
xorb
mov
jl
loopne
fcomip
cld
pop
push
les
aas
lods
test
mov
dec
decl
sbb
pushf
repz
pop
pop
shrl
cmpsl
mov
ljmp
out
push
hlt
xchg
add
pop
xor
pop
aas
jno
data16
test
xor
into
inc
jmp
lahf
pop
jmp
adc
ljmp
dec
jnp
cmp
xor
inc
imul
cmp
pop
lods
cmpsl
sbb
jo
and
mov
loope
lret
jl
daa
mov
pop
push
cmp
outsl
lock
push
add
cmp
push
inc
pop
scas
cmp
inc
sbb
hlt
jmp
imull
mov
lods
xchg
popa
out
mov
jecxz
and
nop
into
js
mov
outsb
push
dec
sti
nop
add
pushf
cmpsl
das
sti
jp
in
call
cmp
neg
int3
gs
push
mov
cmpsl
hlt
pusha
jmp
call
xchg
fdivl
sbb
clc
sbb
jl
lcall
in
hlt
sub
int
push
mov
sbb
pusha
rolb
incl
xor
std
data16
loopne
int
and
push
mov
cmp
rcl
hlt
out
shlb
dec
lcall
or
cmp
dec
jo
adc
repnz
loopne
cld
sub
mov
mov
sbb
les
decl
mov
mov
pop
daa
push
popa
outsl
frstor
xchg
xchg
xor
pushl
mov
stc
push
inc
push
ret
xchg
mov
fsubs
xchg
push
lcall
add
icebp
fidivrs
push
mov
push
cmc
dec
adc
sbb
cmc
icebp
jg
enter
cmpl
inc
jmp
aam
mov
dec
andb
stc
and
xor
and
push
pushf
movsl
stos
or
cmpsl
ja
pusha
xchg
sarb
jmp
lret
aam
sbb
nop
call
cli
or
imul
loop
fcmovbe
cmp
scas
fstpl
pop
lods
jge
aas
mov
mov
incl
scas
repnz
cmp
in
push
cmp
adc
jle
mov
mov
ret
fwait
ljmp
pop
sub
xor
stos
jl
mull
add
cmp
std
out
mov
mov
pushf
cld
push
dec
mov
push
push
stos
jb
push
jp
sahf
adc
ljmp
cmc
lret
and
stos
ljmp
and
ret
imul
mov
lock
ret
ficomps
cmp
sbb
out
inc
mov
mov
pop
adc
adc
repnz
pop
loop
loopne
loop
xchg
mov
adc
mov
cmp
cld
mov
in
clc
js
in
mov
loopne
jbe
jge,pt
aam
out
mov
dec
repnz
cmc
mulb
pop
sti
scas
jns
or
inc
jnp
ljmp
or
sub
int
add
or
inc
lret
dec
push
add
mov
xchg
inc
push
lret
adc
je
inc
dec
pop
xlat
std
jmp
int
repz
or
or
call
cltd
sbb
push
decl
dec
rcrl
jmp
pusha
mov
aas
scas
sub
cmpsb
mov
stc
call
pushl
xor
ss
sbb
stos
pop
call
rol
lods
call
fldl
dec
lret
mov
mov
call
mov
push
movsl
mov
cmpsl
sahf
add
movl
xchg
push
pushl
ss
scas
xor
addb
and
test
and
pavgw
call
rclb
into
sub
loop
out
xor
lret
out
icebp
scas
fisubs
movsb
dec
std
xchg
sub
in
mov
mov
push
pushf
mov
adc
mov
lahf
mov
lret
cmp
shl
sub
mov
mov
jmp
pop
sub
aaa
dec
insl
pop
add
into
lods
mov
sbb
adc
ror
mov
xchg
ljmp
icebp
loop
ljmp
adc
cmp
iret
mov
adc
andl
pop
loopne
pop
js,pt
sbb
and
in
xchg
es
jg
decl
aam
movsb
lock
test
mov
sbb
cltd
xchg
inc
hlt
daa
push
mov
testb
mov
pop
call
icebp
movsb
stos
scas
adc
fwait
pop
adc
jge
data16
xchg
xlat
mov
das
cld
fldt
ror
xor
pushf
out
jbe
mov
lods
push
mov
sbb
pop
andl
lcall
fmull
inc
rorl
dec
cmc
push
mov
out
or
push
xor
sub
test
cmp
es
sti
mov
add
mov
cwtl
stc
les
aas
mov
dec
mov
inc
adc
roll
aad
arpl
rolb
inc
cmp
sbb
imul
scas
or
and
sub
dec
xchg
addr16
xchg
jmp
ljmp
cmp
push
aad
aas
jne
bound
sbb
jno
shlb
lcall
pop
pusha
jl
or
ss
ret
addr16
cmpb
imull
mov
push
pop
outsl
call
cli
pop
loop
out
add
inc
cwtl
push
xchg
cmp
js
daa
fldt
in
mov
call
shll
gs
pop
sti
call
lahf
inc
jo
xor
cmp
movsb
ljmp
and
mov
fwait
dec
out
or
mov
cwtl
test
xchg
inc
jmp
out
cwtl
xor
sbb
mov
pusha
nop
scas
sub
xor
decl
lods
cmp
fimull
add
in
dec
in
jno
fildll
popa
enter
or
imulb
mov
push
fs
push
jnp
push
andl
inc
jg
cs
mov
mov
inc
add
or
imul
test
testl
dec
xchg
xchg
lods
pop
sub
aad
adc
fiadds
jns
sbb
ljmp
sub
xor
loop
push
lods
sbb
incl
xchg
xchg
add
into
or
adc
xchg
cli
jbe
fcomip
inc
arpl
pop
mov
jne
leave
ds
ret
cmp
mov
pushl
int
popa
mov
jl
rolb
and
lods
mov
sti
jnp
iret
leave
dec
nop
xor
cmc
cmc
test
in
loope,pn
stos
lods
pusha
mov
xchg
test
lcall
outsl
neg
pop
jno
mov
pop
inc
xor
sub
pop
and
hlt
incl
notb
jo
shll
mov
pop
jmp
adc
leave
jns
pop
ljmp
add
or
movsl
xor
mov
pop
test
ss
adc
jnp
std
cmc
xchg
lahf
movsl
in
sarb
push
fmuls
sub
dec
pop
loope
mov
je
inc
jmp
mov
movsl
scas
jns
mov
loope
leave
cli
and
push
and
push
pop
push
inc
stos
mov
insb
dec
mov
ficompl
test
mov
inc
xchg
jg
aam
inc
adc
fsubrl
incl
xor
and
test
jmp
xor
push
addb
ljmp
pop
loopne
mov
mov
insl
adc
outsb
xchg
push
jo
and
iret
cld
call
lret
pop
loope
cli
push
test
cmp
cmp
outsl
sub
mov
pop
mov
mov
add
decl
outsb
hlt
shll
and
push
iret
mov
decl
js
pop
pop
cmp
loope
or
xchg
mov
xchg
mov
int
lcall
into
mov
xchg
xor
sub
addr16
or
aam
mov
aad
test
mov
adc
jge
xor
les
push
decl
hlt
outsl
icebp
das
mov
add
lahf
shll
dec
jg
dec
mov
xchg
inc
xchg
adc
cli
mov
push
add
mov
jmp
into
xchg
inc
out
sbb
inc
inc
fwait
loope
inc
inc
insl
jg
call
sub
pushf
cmp
push
shrb
loopne
dec
pop
cltd
adc
scas
cmp
add
jge
jbe
jle
sub
outsb
dec
adc
scas
ret
int3
dec
jle
dec
sahf
add
mov
loope
rcr
cmovo
jle
rolb
scas
jnp
lcall
cmp
popa
sbb
shll
test
lret
test
dec
pushl
stc
shr
xchg
inc
in
adcl
push
fbld
aad
adc
incl
outsl
jmp
jp
jae
fstpt
stc
inc
mov
push
push
mov
and
pop
loop
ljmp
inc
leavew
sub
xor
cmpsb
cmp
jecxz
loop
out
fstpt
add
imul
pushl
jbe
inc
scas
cmp
adc
fidivrl
call
mov
call
int
arpl
movups
nop
lret
movsl
incl
xor
ret
adc
neg
pop
pop
push
mov
jmp
mov
outsb
outsb
insl
addl
les
mov
daa
xchg
clc
mov
das
mov
lock
flds
clc
push
cmpsb
loopne
dec
jne
leave
mov
add
rorb
enter
movsb
inc
inc
jl
xor
pop
mov
inc
test
sub
cli
lcall
jnp
add
fisubrl
sbb
mov
add
cli
jg
call
repz
aaa
or
outsb
outsl
hlt
dec
mov
xchg
mov
jmp
and
es
incl
es
and
shl
enter
cmp
dec
scas
and
jg
clc
adcl
mov
je
xor
out
ja
in
jg
std
aas
xchg
repnz
daa
je
nop
scas
pop
and
mov
stc
decl
mulb
mov
jae
and
mov
lds
call
push
and
ja
adc
cli
scas
push
iret
or
push
and
jnp
mov
inc
incl
xor
jmp
cmp
adc
sub
push
lcall
int
mov
stos
push
sub
imul
push
insl
incl
mov
popa
mov
aas
das
inc
dec
sub
and
scas
loopne
mov
add
cmp
push
mov
popa
lea
leave
and
ficomps
popa
data16
stos
movsb
negl
test
fisttpll
sbb
incl
in
jmp
pushf
clc
or
jne
jo
je
xor
test
test
repnz
in
pop
xor
sbb
addr16
fcomip
inc
cld
pushl
int
pop
mov
shlb
cltd
ss
jnp
mov
in
fs
out
into
and
and
lahf
xchg
mov
imul
jmp
push
js
xchg
jb
bound
xor
add
or
or
mov
and
pop
jp
mov
sbb
dec
sub
sub
incl
shl
and
mov
movsl
mov
cld
popf
add
test
cmp
jg
or
push
aaa
sub
nop
clc
sbb
je
mov
ss
jno
jmp
cs
scas
and
push
sbb
xchg
jg
dec
or
lds
jmp
add
es
mov
mov
lret
popa
popf
repnz
call
sbb
test
pop
in
leave
out
mov
mov
std
lcall
ds
in
sbb
jb
rcrl
adc
outsl
lods
or
cmpsl
and
dec
xlat
and
lret
lock
add
cltd
inc
pop
mov
addr16
arpl
ret
sub
push
filds
mov
push
mov
mov
push
push
cld
mov
movsl
incl
and
arpl
dec
adc
les
or
sbb
mov
mov
test
pop
ror
xchg
lret
push
fldenv
push
inc
test
inc
decl
or
fisubl
gs
jl
lods
test
ljmp
or
fmull
inc
jno
add
push
push
jbe
inc
arpl
imul
decl
aaa
cld
xchg
aaa
lret
bound
fcomip
ljmp
sub
jno
jl
jae
inc
popa
mov
jb
test
xchg
loope
jne
pushl
fbstp
mov
mov
mov
and
dec
xor
xchg
jb
lods
push
jge,pn
cmp
sub
pop
loopne
or
dec
and
cmp
outsl
std
pop
loopne
rcr
enter
sbb
stos
cli
or
jg
fmuls
enter
rclb
xchg
nop
mov
push
je
mov
lcall
pop
je
testl
clc
mov
mov
push
outsb
cmp
push
or
call
stc
outsb
push
mov
mov
push
xor
sub
inc
std
jecxz
mov
cld
lcall
adc
fldenv
shlb
aaa
mov
mov
jecxz
loope
imulb
xchg
pop
add
or
cld
lods
stos
and
call
mov
add
or
fs
mov
scas
enter
jno
pop
sub
or
sar
fsubr
testl
dec
jb
cwtl
sahf
sub
xchg
lcall
xchg
pop
add
adc
cmp
push
pop
and
push
xor
push
pop
jmp
test
push
ret
sbb
sbb
jl
fisttps
cmc
inc
sbb
rclb
jmp
pop
xor
js
inc
aaa
shlb
leave
in
movsb
cwtl
cwtl
or
push
outsl
inc
push
mov
and
dec
push
je
pop
outsl
add
cmpsb
cmp
repnz
ljmp
cld
sbb
iret
push
repz
test
imul
mov
popa
lahf
add
leave
jl
mov
js
mov
clc
fsubrl
test
fistl
push
cmpsl
in
aad
insl
fnstsw
out
setg
cli
or
jmp
decl
in
mov
aad
out
aad
les
mov
cmp
out
aam
xor
push
pop
enter
ret
popa
sub
jmp
push
and
stc
jle
push
cmp
jmp
xchg
popa
aam
push
imul
adc
jmp
hlt
decl
int
sub
jle
xchg
xor
dec
mov
pop
ljmp
insb
daa
sbb
ds
lock
adc
fdivrp
lcall
mov
push
roll
push
push
dec
sarl
scas
out
mov
out
icebp
js
jmp
and
fmull
sbb
movsb
push
mov
leave
mov
jnp
push
mov
xchg
inc
and
int3
fstpl
lcall
loopne
ljmp
and
fwait
ss
mov
sub
add
jmp
cli
decl
fdivl
stos
iret
or
push
aad
imul
lcall
lret
imul
jg
dec
xchg
loop
pop
and
cmp
fbld
mov
push
iret
imul
push
jne
aaa
clc
and
mov
sub
mov
jnp
mov
cmpsb
jmp
pushf
push
int
push
cmpl
fs
aaa
loop
add
in
and
js
cltd
jecxz
pop
stos
adc
mov
lea
faddp
decl
pop
and
xchg
test
cmp
std
popf
mov
pusha
in
or
outsb
mov
mov
pushl
push
pop
rcl
push
add
into
sbb
enter
nop
pop
sub
push
jmp
cmp
lods
int3
sbb
ficoms
mov
loopne
out
adc
shlb
ljmp
lahf
in
sub
sbb
pop
sahf
decb
std
lods
jnp
inc
dec
ljmp
repnz
or
popf
pop
in
out
movsl
dec
lcall
inc
cmc
std
clc
cmpsl
lds
in
or
int
mov
mov
inc
out
nop
fwait
cmpsb
jb
test
xchg
jne
sbb
stc
call
in
fldl
sbb
arpl
out
test
lcall
dec
clc
sub
fmull
cmpsb
pop
mov
mov
stos
pushf
ja
call
xchg
mov
xchg
das
lea
cltd
insl
push
inc
icebp
mov
xor
pushl
jge
in
and
and
in
xor
add
ret
pop
je
pop
add
or
sarb
xor
mov
mov
ljmp
jecxz
fwait
dec
sbb
gs
loop
dec
ss
das
mov
fcoms
add
std
jae
dec
in
leave
jns
add
xchg
xor
in
int
fadds
call
mov
jge
push
xchg
bound
popl
xor
pop
xor
ljmp
add
in
add
inc
ss
loop
lock
cmp
out
xchg
sahf
mov
xor
mov
add
fdivrs
xor
pop
stos
fcmovb
jno
jnp
pop
xchg
data16
xor
mov
cmp
negl
sbb
into
rcrl
loop
adc
pop
call
adc
sub
xchg
xor
jmp
lahf
mov
pushl
cs
jno
daa
jo,pn
ljmp
adc
aaa
clc
out
or
pop
and
jecxz
shlb
and
pushl
mov
jg
outsl
lcall
push
xchg
fsubrs
sub
data16
call
push
push
push
and
mov
sahf
jecxz
loopne
sbb
sbb
sti
incl
addr16
out
mov
or
popf
xchg
xchg
add
imul
sarb
and
push
xchg
movsl
ja
jno
mov
repnz
sbb
jmp
push
mov
fwait
mov
sub
rol
cmp
test
xlat
push
es
mov
int3
dec
rclb
aas
push
fnstsw
decl
shrb
mov
push
adc
dec
addr16
cli
add
mov
push
popa
test
jle
rol
sbb
cli
test
adc
mov
popa
es
pop
xor
inc
push
jnp
adc
insl
scas
pop
movsb
jo
xchg
push
out
ljmp
xchg
insb
or
sbb
xchg
icebp
hlt
ds
ss
fsubrs
mov
js
call
cli
pusha
inc
imul
addr16
push
pop
js
adc
sar
mov
or
jl
jp
es
pop
cmc
cmp
addr16
and
jle
lcall
sub
aad
cld
mov
frstor
rcll
mov
pop
lcall
sahf
hlt
shrl
data16
hlt
or
jg
int3
test
ljmp
sbb
add
sub
movl
jl
loope
or
pop
and
push
jmp
aaa
clc
mov
and
incl
scas
out
stos
mov
adc
ret
inc
ljmp
xchg
push
rorb
idivl
mov
sbb
mov
in
lods
imul
sbb
stos
aam
xchg
mov
jmp
fmuls
daa
inc
lock
mov
cwtl
lock
push
or
lcall
mov
mov
daa
dec
push
call
xchg
lods
and
push
pop
xor
or
ljmp
cmpsl
sub
jnp
jmp
lret
in
mov
inc
flds
push
ret
iret
fisttpll
decl
mov
inc
cmp
ljmp
jmp
loope
inc
sar
ljmp
sbb
fucomi
lock
sub
jmp
pop
inc
out
mov
enter
mov
lods
lds
lods
icebp
push
sbb
xor
mov
push
xorb
mov
mov
lcall
lock
bound
outsb
add
cltd
inc
incl
xchg
lds
lods
fbstp
sub
lds
add
pop
js
shrl
mov
out
test
or
pop
mov
push
push
or
call
test
inc
dec
push
out
fwait
xor
mov
lods
mov
jb
dec
fsts
clc
arpl
shlb
pop
clc
cmpsb
inc
pop
add
adc
push
sub
and
clc
pop
mov
xor
dec
and
mov
paddsw
aaa
sbbb
push
pop
ljmp
cmp
lods
orl
push
sti
cs
cmp
add
push
int
call
lcall
jno
mov
xor
dec
push
sub
cmp
aam
lcall
cli
in
ja
popa
or
ljmp
andl
sbb
sar
mov
mov
jmp
add
imul
shrl
les
cld
mov
adc
mov
hlt
decl
pop
push
int
jl
sub
adc
imul
cmp
ss
add
push
cmp
mov
and
jae
repz
dec
dec
hlt
xchg
mov
mov
push
dec
xchg
sub
add
adc
add
mov
mov
sahf
add
cmp
push
leave
jae
dec
popf
and
call
imull
cmp
jo
cmovl
out
or
aaa
inc
aam
sbbb
jno
sbb
ljmp
insb
inc
dec
or
in
stos
jle
mov
and
sbb
cmp
loope
mov
bound
cmpsl
mov
in
lcall
icebp
push
subl
adc
cmp
mov
aas
push
aad
rcr
test
jmp
into
mov
lea
call
xor
iret
movl
mov
mov
dec
outsl
lea
roll
fidivrs
jno
in
fimuls
lods
ljmp
fiaddl
xor
push
repnz
cmp
call
call
mov
xchg
insb
out
sbb
imul
sbb
mov
rorl
pop
clc
ja
xor
pop
sub
mov
sbb
movsl
mov
xchg
pushl
movsb
or
testl
orl
shll
out
add
push
push
in
push
xor
jmp
out
mov
dec
pop
les
call
jne
pop
in
insl
cmc
incl
or
cltd
mov
inc
das
nop
js
pop
shlb
mov
pop
mov
je
js
mov
mov
hlt
stos
mov
cld
mov
dec
inc
scas
and
iret
jb
int
jbe
pop
aas
rolb
cmp
nop
or
decl
mov
xchg
xchg
mov
mov
jg
fistps
push
stos
or
imul
mov
lahf
add
cmp
pop
xor
orl
jp
or
scas
inc
mov
xor
popf
inc
in
lock
incl
push
fwait
aam
imul
cmpsb
in
push
sub
imul
pop
sar
pusha
or
dec
sub
das
lock
or
xlat
push
sbb
ret
adc
jne,pt
cmp
adc
decl
js
call
nop
aam
gs
cli
xchg
int3
xor
cmp
jne
jle
outsl
std
ljmp
xchg
shlb
jg
inc
neg
mov
sub
fistpll
out
scas
in
add
fidivl
clc
outsl
icebp
add
add
dec
popf
xor
call
jle
add
mov
xor
push
fcoms
sub
nop
cmp
sbb
jg
leave
jmp
sub
sbb
xchg
mov
dec
dec
cwtl
sbb
movsb
lcall
push
pushl
fsts
in
add
jno
scas
dec
or
add
stos
mov
cmp
mov
and
push
adc
jae
or
add
dec
inc
xchg
mov
fistpll
xchg
clc
ret
enter
adc
lret
xchg
ljmp
cmc
pop
sub
daa
mov
inc
popa
xor
sar
lcall
movsb
adcb
adc
pusha
gs
sbb
fldt
mov
or
jmp
ret
dec
dec
shll
lea
cs
adc
add
inc
push
push
movups
xchg
lahf
push
mov
movsb
inc
mov
sahf
pop
xor
jecxz
and
outsl
icebp
lcall
jmp
in
and
adcl
imul
ljmp
in
lcall
jge
xchg
je
jae
lods
popf
shrb
decl
mov
mov
movsb
stos
jns
stos
stc
mov
mov
fsubp
dec
lods
cli
add
in
push
insb
mov
fidivrs
test
iret
leave
sub
xchg
push
push
sbb
mov
fidivrs
std
or
loop
pop
inc
pop
adc
in
xchg
pop
mov
or
or
jmp
adc
aas
push
mov
pop
mov
mov
fists
push
mov
in
jbe
jmp
mov
test
scas
jecxz
fld
je
fildll
cmc
mov
cltd
cmp
fcom
leave
loop
jne
mov
ljmp
sbb
inc
andl
iret
outsb
push
imul
mov
jl
inc
xchg
pop
sub
push
pop
adc
add
ss
mov
scas
shlb
fistpl
les
pop
fstpl
lds
pop
cli
decl
sbb
ret
imul
mov
outsb
data16
fucomip
jmp
imul
adc
pop
inc
aad
cmc
pop
mov
stc
sahf
in
jno
nop
mov
pop
jns
xlat
or
repz
push
inc
scas
adc
icebp
cmpsb
pop
mov
xor
ljmp
rcll
push
nop
cmp
xchg
nop
aad
mov
leave
clc
inc
int
repnz
ljmp
mov
xchg
mov
inc
and
xchg
test
js
pop
and
and
call
incl
jae
lea
outsb
cmpsl
arpl
cwtl
mov
mov
movsl
pop
call
or
out
push
sbb
hlt
iret
daa
adc
mov
movsl
mov
and
push
cmp
sbb
jmp
sbb
int3
jg
adc
iret
xor
mov
fxtract
loopne
pop
mov
lcall
enter
popa
xor
or
inc
mov
cmp
rcrb
incl
dec
mov
xchg
mov
push
xchg
fwait
clc
lcall
xchg
jl
outsb
mov
jl
mov
sub
clc
jno
pushl
ficompl
cmp
and
ljmp
jo
mov
nop
jp
lea
cmp
inc
in
push
call
pusha
test
sti
mov
or
shl
fbld
mov
data16
mov
rcrb
xor
rcrb
add
or
in
fadd
mov
je
aad
or
add
jl
shlb
loope
cli
mov
sbb
iret
mul
push
sar
loop
aaa
jmp
sbb
mov
pop
sub
imul
decl
rolb
repz
sbbb
popa
dec
and
xor
lret
pop
stos
sub
aas
sub
cmp
sti
jmp
mov
add
mov
repnz
xchg
add
outsl
xor
inc
pop
xor
xor
pusha
test
jmp
int
xor
jp
sahf
mov
xor
mov
jecxz
mov
shrb
add
push
pusha
aad
ljmp
ret
sbbb
pop
ret
dec
adc
sbb
xchg
sbb
mov
xor
dec
and
sar
mov
cmp
shl
ret
adc
call
call
test
in
mov
mov
or
mov
sub
or
pop
jl
insl
inc
cmp
mov
mov
cltd
jb
ret
mull
push
aaa
cmp
data16
sbb
aam
sbb
aaa
pushl
fldcw
out
fildl
divl
fs
pusha
ljmp
lcall
push
dec
inc
xchg
jb
insl
adc
mov
fdivrl
cmp
xchg
fs
push
call
shrd
cli
test
fisttps
pop
cmp
jmp
out
mov
mov
dec
fnsave
cmpsl
movsl
lcall
mov
cld
in
je
jne
push
inc
cmp
ljmp
and
cmc
pop
int3
xchg
jge
outsl
mov
outsb
enter
cs
push
add
mov
pop
sbb
or
aam
cli
jnp
pop
call
out
push
cmp
es
mov
fwait
les
mov
xor
mov
call
sub
sub
jmp
push
fildll
cmp
stc
icebp
inc
sti
lcall
mov
lcall
lahf
or
shll
jne
rcl
jle
and
mov
fnstsw
jmp
dec
mov
sbb
dec
cmp
adc
mov
pop
mov
xchg
ljmp
mov
mov
aas
mov
jae
ficompl
mov
mov
rcr
pop
mov
or
cmp
fs
push
jecxz
call
movsl
lret
mov
jp
outsl
mov
arpl
js
xchg
dec
lcall
xlat
insb
mov
xor
adc
cltd
cmp
in
fwait
or
rolb
add
arpl
in
call
xchg
stos
dec
pop
cmp
mov
cmp
clc
mov
pop
push
repz
and
daa
jp
push
leave
mov
xchg
stos
insl
rcl
pushl
pop
stos
fiaddl
xchg
cs
push
cltd
stc
push
jle
push
insb
decl
fucomi
movsl
movsl
sub
push
dec
stos
inc
pop
cmpsl
xchg
mov
mov
ret
lods
dec
dec
fmul
sbbb
push
stos
gs
xchg
js
outsl
push
enter
cli
call
cmc
jae
test
mov
dec
das
inc
rcll
and
inc
sar
mov
push
clc
push
xchg
out
insb
fsubs
xchg
xchg
shlb
mov
ljmp
faddl
imul
xchg
sbb
sub
test
clc
nop
push
adc
jmp
push
mov
imul
fs
jmp
lock
jg
insl
fstpt
sbb
and
jle
xchg
std
ljmp
test
arpl
add
xchg
dec
jno
or
inc
call
jnp
cmp
hlt
jecxz
push
mov
in
pop
out
inc
pop
push
movsl
cmpsb
sub
pop
decl
jmp
mov
test
push
mov
add
dec
pop
outsb
mov
std
xor
scas
dec
dec
daa
xchg
jecxz
decl
cs
dec
in
addr16
sub
jae
mov
into
jne
cmc
and
sub
ljmp
pushl
je
push
cld
mov
das
pop
mov
movsl
and
call
mov
adc
lret
les
idivb
decl
ss
jecxz
mov
or
in
decl
pushl
jnp
clc
or
fists
and
pop
mov
xchg
repnz
cld
mov
mov
sub
adc
lods
pusha
out
mov
out
fbstp
decl
sub
xorl
lods
fildl
mov
jno
decl
lock
xor
xchg
lds
aam
mov
mov
or
incb
jg
dec
into
iret
rorl
lahf
fistpll
ljmp
jecxz
out
adc
out
add
rol
std
nop
push
aaa
fistps
cli
ret
incl
fldt
addr16
andl
or
sub
xchg
lcall
iret
jns
add
inc
jb
pop
inc
fmul
loopne
out
add
decl
cwtl
imul
lods
cmpsb
fwait
mov
iret
lcall
mov
call
dec
push
or
or
jl
loopne
mov
dec
mov
pop
mov
pop
cld
fsubl
lock
cltd
pusha
lods
mov
xor
subl
jp
or
mov
pop
push
fdivp
cmpsb
insb
lcall
pushl
rorb
sbb
mov
loope
sbb
in
jl
jg
and
fisttps
push
lret
xor
push
push
repz
das
cwtl
hlt
lods
jo
std
jl,pt
out
jbe
xor
outsl
pop
movsl
int
leave
hlt
aam
mov
data16
call
cmp
cmp
scas
sti
into
imul
data16
maxps
and
incl
out
mov
cld
cli
lahf
sbb
mov
pop
pop
xchg
into
dec
sub
jbe
scas
jmp
add
into
or
scas
inc
inc
sub
lret
and
jo
mov
pop
mov
je
shr
sahf
adc
push
sbb
pop
dec
mov
sti
inc
or
or
jbe
fucomi
test
daa
push
xor
add
incb
or
aam
adc
test
out
mov
mov
cwtl
add
iret
push
out
test
pop
sub
pop
loop
fistl
in
or
and
popf
sub
inc
and
push
cld
in
ds
jne
fcomps
data16
and
ljmp
mov
lods
fs
push
or
es
outsb
cmp
jl
pop
lcall
pusha
jmp
or
cmp
add
mov
lea
add
pop
jb
and
in
jb
or
jmp
enter
mov
in
sub
in
inc
aam
sub
ljmp
push
adc
xchg
je
and
and
or
mov
mov
dec
cvttps2pi
ds
ss
ja
es
sbb
sub
fildl
aaa
lret
pop
ss
pusha
lfs
inc
push
ljmp
dec
in
mov
push
xor
in
fsubrp
out
adc
bound
cli
mov
fcos
call
xchg
bound
xchg
xor
jnp
insl
inc
ljmp
int
or
lock
divl
sub
pop
test
shlb
ja
dec
or
xor
out
outsl
incl
out
sub
cmp
pop
add
xchg
pop
rclb
dec
aaa
and
out
enter
stc
xor
jp
push
xchg
cmp
jge
inc
cmp
mov
call
bound
mov
jg
mov
in
mov
test
jle
cmpsb
mov
fisubl
mov
cmp
inc
test
pop
mov
inc
jne
dec
sbb
enter
mov
insb
jns
xor
rcl
pop
hlt
xchg
stc
jnp
xor
pop
and
lahf
mov
add
jle
imulb
ja
iret
ret
adcl
sbb
call
cmp
pop
rcrl
mov
ss
jno
test
dec
push
push
fiaddl
incl
sub
mov
cmpl
cmpl
lcall
cmp
lahf
cmpsb
mov
out
cld
mov
dec
mov
pop
push
cmp
dec
call
pushl
mov
jg
sub
jp
xchg
out
inc
mov
test
loop
rcl
inc
lret
scas
ret
aaa
adc
rorl
dec
out
push
dec
pushf
xchg
mov
inc
sub
js
dec
xchg
repz
sub
sahf
test
outsl
fstl
rcrl
int
stos
out
imul
cmc
jg
sub
ret
cmpsb
jno
push
int
push
sbb
mov
mov
sbb
xor
pop
bound
mov
mov
pop
mov
mov
insb
sub
mov
cli
test
decl
lcall
lret
pushf
cs
lea
xchg
pop
jae
insl
sahf
inc
roll
call
push
mov
xchg
sub
pop
inc
mov
adc
jp
repz
mov
hlt
das
cld
jg
adc
cmpsb
and
add
pop
test
or
popf
xchg
mov
push
int3
mov
fldl
test
dec
in
out
movsb
into
cwtl
mov
outsb
fsub
hlt
adc
inc
push
sbb
jmp
mov
inc
pop
jne
sub
xor
xchg
scas
imul
mov
cmp
ss
ljmp
ja
xor
rclb
test
fldt
gs
jnp
inc
mov
inc
mov
sub
aad
inc
and
and
stos
les
xor
call
nop
mov
sub
sub
mov
mov
xchg
sahf
sarl
mul
std
jmp
es
or
sbb
fbstp
outsb
mov
rsm
repz
jmp
jle
pop
xchg
inc
jg
lds
in
push
inc
repnz
scas
test
out
pop
nop
pop
inc
js
xchg
xor
push
shlb
cltd
mov
loope
pusha
int3
mov
rcrl
adc
into
dec
icebp
pop
pusha
fsts
lret
loop
mov
enter
jb
sub
jmp
cs
pop
gs
leave
mov
movaps
shll
clc
ljmp
mov
push
sub
sbb
scas
int3
mov
inc
mov
arpl
pop
out
jnp
mov
cmp
mov
mov
add
das
in
test
pop
jb
aam
dec
mov
pop
out
hsubps
inc
jne
in
js
nop
wrmsr
mov
ret
pushl
mov
mov
fisubrl
ret
lds
inc
sarb
test
fmuls
add
jno
xchg
pop
push
cltd
aaa
ficoml
jecxz
mov
lcall
aam
pop
pop
bswap
outsl
push
imul
insb
stc
pop
xor
cmp
or
mov
call
adc
xlat
lods
int3
cmp
lcall
outsl
pop
cli
lcall
add
push
sub
cmpsb
sbb
movsb
lods
pop
mov
cld
jmp
stos
mov
cld
pcmpeqb
das
and
bnd
mov
fs
in
cmp
movsl
stos
shrl
push
add
das
mov
lahf
cltd
hlt
lret
inc
sbb
pushl
mov
mov
cmc
subb
sarb
aaa
stos
hlt
ljmp
or
lock
lea
fildl
dec
aam
insl
cmp
lcall
mov
je
ror
mov
push
or
jecxz
push
pop
jecxz
stc
decl
cmp
out
out
out
mov
pop
xor
push
pop
sub
jae
lods
sti
cmc
lcall
mov
mov
mov
inc
jg
lcall
pop
fwait
pop
ss
scas
push
cmpsb
stc
xlat
in
and
cld
decl
ss
xchg
add
sub
data16
cli
mov
ljmp
cmc
out
dec
repnz
sarl
aas
add
sbb
lcall
incl
lcall
stos
xor
mov
inc
jnp
inc
andl
or
mov
ljmp
pop
inc
cmp
mov
data16
ljmp
mov
paddb
pushl
adc
sub
jp
jl
add
mov
lret
add
mov
pop
mov
pop
mov
out
cs
lods
sbb
jp
ja
ljmp
hlt
add
mov
shll
jecxz
pusha
dec
stos
push
pop
mov
dec
incl
pop
stc
in
push
pop
out
inc
or
xchg
mov
or
mov
mov
pop
xchg
cli
xchg
cli
mov
mov
ss
ret
repz
insb
jbe
mov
jmp
test
ret
test
pushl
orb
adc
lods
not
pop
cmovl
adc
pushl
stos
popf
inc
xlat
push
push
mov
enter
mov
fcmovu
add
mov
rol
jmp
gs
lret
mov
jg
mov
ss
lock
mov
ds
daa
out
xchg
std
aam
test
seta
shll
dec
shlb
push
sbb
data16
mov
push
cld
fimull
dec
add
addr16
sbb
call
add
sub
cmpsb
mov
fnstsw
jl
sbb
daa
cmpsl
cmc
push
cmpsl
sti
and
es
inc
in
ret
pop
aam
pop
and
mov
dec
sub
stc
mov
cmpsl
outsb
out
enter
nop
cmp
inc
pushf
cltd
and
ficomps
ficompl
in
push
push
scas
sbb
es
mov
dec
pop
mov
incl
jge
xchg
in
sub
inc
fiaddl
mov
add
jmp
add
loopne
in
stos
call
insl
jecxz
shlb
mov
inc
mov
icebp
lcall
xor
out
ja
mov
pop
pop
loopne
fucomip
mov
test
imul
cmpsb
std
mov
adc
icebp
xor
fucomip
das
xor
mov
pop
arpl
xor
loope
jg
mov
ljmp
std
sub
jge
jl
inc
in
sbb
mov
fstpt
in
xlat
rolb
stos
mov
popf
aas
imul
daa
lret
fmuls
scas
imul
push
jb
mov
mov
test
sbb
mov
jmp
jno
pop
sarb
out
push
dec
xchg
out
nop
mov
fdivr
mov
xchg
enter
dec
pop
test
js
orb
mov
lea
mul
inc
jns
add
xchg
faddp
lret
jg
out
and
movsb
rclb
ljmp
inc
sub
add
xlat
out
inc
pop
loope
mov
loope
mov
shll
lcall
pop
dec
adc
xor
xchg
inc
cwtl
adc
mov
push
jo
lods
jge
lock
fbstp
sub
mov
and
xchg
mov
call
sbb
repz
jecxz
add
fcompl
xchg
mov
outsl
hlt
mov
cmpb
scas
ficoml
lea
stos
int3
mov
aad
jp
mov
and
mov
pop
pop
mov
mov
inc
jne
jl
xchg
pop
movsl
cmc
cli
aad
cli
clc
sub
je
fstpt
cmpb
add
icebp
je
stos
jno
cli
push
leave
ficoml
or
lods
std
ljmp
adc
sti
adc
stos
subb
adc
xor
mov
pop
std
das
pop
add
pop
xor
loopne
jp
outsl
push
call
push
mov
cmpsl
addr16
mov
and
scas
jg
imul
mov
lcall
mov
jno
insb
rcrl
jmp
dec
test
dec
nop
sub
sbb
sar
fs
mov
notb
mov
pop
mov
das
cld
mov
imul
and
jae
lods
dec
jae
mov
ljmp
or
sti
cmp
outsl
icebp
add
xchg
out
rol
push
inc
and
in
push
jecxz
jmp
std
add
aad
jecxz
ret
nop
ds
mov
or
pop
imul
push
mov
or
pushf
sub
cmpsb
mov
int
fs
imul
xchg
sar
mov
inc
sub
jp
dec
mov
xor
adc
fistpll
mov
push
xchg
sub
mov
sbb
inc
enter
sbb
ljmp
xchg
add
imul
sarl
gs
scas
outsb
jnp
out
sbb
inc
std
xchg
jg
pop
cli
cmp
push
xor
and
mov
push
or
push
sbb
cli
pop
pop
cs
loop
cmp
dec
test
rcll
movsl
sbb
ficoms
jmp
cmp
int3
sbb
mov
jo
add
clc
pushl
xor
push
jl
pop
xor
ljmp
ljmp
xor
daa
xor
pop
jbe
adc
testb
push
repnz
or
incl
test
int3
mov
sar
cld
xchg
cli
out
dec
dec
push
out
mov
jbe
jmp
mov
fsubrp
sub
fs
mov
jne
rcrb
test
jmp
jp
enter
mov
popa
jp
insl
cmp
jmp
mov
xor
cmp
hlt
dec
push
lea
test
mov
rolb
jg
loop
clc
add
jne
cmp
inc
loope
push
xor
inc
jae
push
cmp
push
decl
inc
mov
jnp
push
jbe,pn
rol
adc
mov
jmp
push
pop
mov
or
mov
ja
or
pushl
dec
cmpl
movb
mov
imul
shrl
andl
leave
push
mov
outsb
cmpsb
sti
sbb
leave
mov
scas
jg
add
xchg
and
repz
cmp
insb
dec
inc
mov
test
hlt
rclb
jae
ficoml
jge
rcrl
adc
fnstcw
dec
nop
lods
inc
call
div
je
movsl
xchg
cmp
into
std
arpl
pushf
fistpl
sub
addr16
mov
inc
cwtl
call
addr16
xchg
cmc
jnp
mov
cmpb
mov
mov
icebp
mov
push
dec
and
dec
push
jnp
not
pop
inc
enter
out
sbb
pop
std
incl
push
cmc
jo
addr16
addr16
into
cmp
pushf
jmp
call
cmp
pop
mov
xorb
shrl
mov
lods
pop
mov
sbb
adcl
xor
data16
call
clc
cmp
rcrl
int
sub
xchg
jecxz,pn
cli
incl
lock
into
xor
push
mov
push
or
std
idiv
pop
loopne
xchg
fnstsw
hlt
fldenv
js
inc
das
je
ljmp
mov
jmp
mov
orb
dec
out
dec
pop
or
push
mov
loopne
sub
movsl
es
dec
clc
lcall
jno
lret
push
cmp
push
pop
sub
aaa
xor
fsubrs
mov
adc
jae
xchg
xchg
stos
push
int
rcrl
and
cmp
sub
pop
test
cmc
decl
adc
movsl
adc
test
lea
jmp
jne
pop
xor
mov
adc
push
xor
push
loop
sub
xchg
in
sbb
shl
ljmp
xor
es
jns
jecxz
sub
icebp
xchg
xor
lret
lds
into
mov
sub
jb
ljmp
cmp
incl
movsb
mov
mov
in
popf
test
iret
lret
pop
jb
rclb
sub
xchg
loop
sub
mov
insl
push
fldenv
mov
mov
icebp
mov
pop
loopne
cmc
inc
leave
adc
lods
mov
int3
pop
inc
addl
or
sbb
fwait
in
and
sar
mov
jl
gs
mov
bound
mov
jae
test
add
jmp
sar
ds
out
pop
mov
mov
int
stc
popf
jmp
push
fdivrs
push
and
mov
gs
add
mov
sub
dec
sti
stos
mov
mov
dec
or
int3
lods
lods
mov
insl
pop
sarl
pop
cmc
es
jae
scas
cmp
jmp
xor
mov
cmp
push
fistpll
and
into
outsl
pop
or
mov
std
outsl
cld
jmp
jl
cmp
mov
adc
repnz
insb
test
jp
pop
lcall
cmp
sub
inc
adcb
call
mov
icebp
lret
pop
das
pop
enter
ljmp
inc
add
pop
fs
jns,pt
or
cmp
xor
std
push
mov
mov
ljmp
pop
je
jnp
push
lods
and
nop
lods
xor
pop
enter
fidivl
and
pop
mov
jo
lea
sub
ljmp
sbb
dec
cmp
pushf
cmc
push
outsl
lock
mov
dec
aas
fcoml
pushl
jle
fwait
jmp
sub
xchg
lret
pop
imul
std
and
into
ljmp
push
lods
out
call
jmp
jle
pop
mov
cmpsb
pop
call
push
inc
lret
jo
jne
mov
mov
inc
jns
sbb
out
or
in
loopne
js
shll
push
dec
adc
dec
jne
push
dec
aas
daa
mov
aad
test
mov
es
xchg
or
stos
sub
popl
in
jae
loop
daa
testb
jecxz
adc
adc
mov
mov
jg
adc
leave
add
mov
pop
pop
lcall
jbe
movsb
rorl
jg
inc
mov
cmpsb
push
jnp
xor
shll
push
aam
aam
push
xchg
jmp
cmp
loop
xchg
movl
add
cld
xor
cmp
out
mov
loopne
pushl
adc
notl
dec
ss
xchg
cmpsb
lcall
cwtl
stos
jg
fists
mov
loop
xor
nop
push
movsb
push
idivb
decl
sbb
push
movsl
xchg
arpl
fstps
std
shrb
bound
ljmp
sbb
popa
inc
inc
push
shl
arpl
sbb
cmp
sub
imul
xor
mov
call
push
sbb
xchg
lods
repz
fsts
addr16
inc
and
cs
lcall
std
mov
sti
dec
loopne
pop
pop
inc
pusha
loope
and
out
mov
stc
mov
ljmp
cmc
mov
pop
daa
ret
and
mov
shl
jb
fsts
mov
std
and
adc
mov
adc
inc
xchg
inc
mov
adc
inc
inc
and
mov
loop
int
daa
repnz
pop
call
inc
xor
jmp
fdiv
lahf
out
dec
test
or
push
in
push
jae
dec
sbb
ds
mov
pushl
std
aad
push
jb
xchg
add
rcl
stos
in
fwait
sub
lea
rclb
xchg
fucomip
mov
inc
popf
jo,pn
mov
mov
mov
ljmp
stos
cmp
dec
or
insb
sbb
pusha
cmp
fnstcw
call
pop
subb
int3
sub
and
or
jp
idiv
call
inc
mov
xchg
pcmpgtd
and
mov
and
lods
cld
mov
ds
aaa
cmp
xchg
je
lods
pop
cld
decl
dec
loopne
xchg
push
push
xor
test
rcrb
fnstsw
dec
add
xchg
call
adc
and
notl
outsl
cmc
ljmp
fucomi
sbb
int3
aaa
loopne
loop
rorb
jmp
mov
sbb
mov
mov
mov
lahf
jmp
lcall
ljmp
out
loop
dec
push
gs
out
xor
fwait
dec
cld
ds
int3
incl
cmc
shrl
sbb
in
lahf
pop
mov
cmc
decl
xchg
dec
rclb
inc
scas
xor
sub
and
mov
sub
xchg
mov
jecxz
ret
popl
outsl
hlt
lcall
dec
mov
and
mov
test
int3
jle
push
and
sub
das
push
jbe
xor
mov
pop
inc
xchg
pop
jp
call
scas
jp
push
xchg
mov
pop
mov
mov
or
popa
popf
add
dec
sbb
lods
sbb
out
dec
jns
pop
jnp
andb
leave
data16
test
mov
hlt
mov
mov
xlat
push
cltd
fcmovbe
mov
ds
decl
push
aaa
inc
inc
pop
les
jmp
cld
lcall
or
push
sub
insb
or
scas
mov
stc
nop
bound
mov
outsb
pop
call
jne,pt
arpl
pushf
outsl
dec
mov
inc
xchg
add
xchg
inc
mov
pop
xor
and
add
pop
cmp
push
lret
loop
push
push
push
bnd
add
in
mov
dec
mov
xchg
mov
ljmp
ror
xchg
mov
inc
push
ret
es
sub
mov
clc
sbb
loopne
xor
daa
fadds
and
cld
lcall
data16
fisubrs
jge
das
mov
lcall
call
and
lahf
mov
mov
sub
mov
xchg
in
lcall
ljmp
or
in
outsl
js
lods
lds
jo
jo
inc
repnz
push
cmp
and
push
scas
data16
rorb
sbb
incl
insb
push
mov
call
fcmove
into
stos
xchg
pop
jle
jecxz
or
jmp
fistl
push
add
cmp
stc
push
adc
dec
cmovno
jg
jne
ds
sub
movsl
adc
loopne
pusha
das
insl
sbb
imul
outsb
or
cld
lcall
int3
add
cmpsb
push
je
int3
insl
adc
xchg
dec
xchg
lds
outsl
faddl
test
nop
jo
mov
pop
imul
lret
testb
ret
test
js
imul
pop
jo
jp
bound
js
mov
mov
mov
decl
pop
cltd
push
das
dec
movsb
gs
adc
addr16
cmpb
cmc
test
sbb
and
fnstsw
fnstsw
xchg
push
sbb
ret
leave
push
jle
mov
sahf
mov
push
push
or
in
and
or
lcall
shll
mov
test
lock
pop
pop
xchg
xchg
or
xchg
jg
call
stos
xchg
xor
lock
fists
scas
or
mov
in
fidivl
inc
and
add
mov
xor
adc
xchg
pop
push
cwtl
pushf
jne
inc
pop
and
pushl
data16
push
daa
lahf
aam
ds
inc
dec
mov
xchg
add
jecxz
fwait
add
mov
jns
les
mov
ret
sbb
mov
icebp
mov
fs
call
xchg
inc
lea
shlb
movsb
xor
inc
dec
pop
mov
outsb
std
das
icebp
decl
mov
arpl
ds
cli
loop
orb
mov
cmp
dec
mov
je
dec
jne
ja
xor
cmp
mov
in
stc
lcall
xchg
mov
pop
inc
fistpll
clc
or
jp
les
call
notb
adc
cmp
xchg
adc
lcall
addb
lods
in
jl
jnp
mov
cmpsl
iret
imul
xlat
mov
jno
mov
lcall
inc
adc
and
push
mov
sub
test
mov
mov
sbb
dec
xchg
xor
mov
aam
xor
or
leave
jns
scas
rorb
cmp
leave
mov
pop
loopne
clc
dec
mov
aad
mov
in
jge
test
decl
jb
cs
xor
push
xor
mov
adc
mov
test
mov
aas
fidivrl
and
aaa
xor
ficompl
xor
aaa
and
dec
add
xor
or
cmp
or
push
movsb
cmp
incl
subl
xchg
pop
dec
es
bound
push
xor
je
inc
jg
inc
or
insl
testb
ds
jo
or
lods
mov
xchg
adc
outsl
add
clc
mov
dec
in
movsb
push
std
incl
xchg
pop
add
adc
xor
cmp
adc
int3
mov
inc
mov
jg
pop
outsl
pop
cmp
fwait
mov
sbb
mov
mov
jg
xchg
stos
ficoms
in
out
or
mov
mov
jp
pop
pop
pop
mov
in
shl
out
out
add
outsl
push
incl
inc
cmp
int
out
rol
mov
cs
mov
das
in
loopne
mov
test
xchg
jae
sbb
lcall
cs
pop
pop
dec
jecxz
ljmp
mov
push
push
outsl
cmc
ljmp
push
out
mov
pop
push
movsb
pop
ret
lods
jno
cmp
xchg
adc
jmp
or
jbe
test
mov
sbb
out
insb
arpl
call
mov
and
in
mov
push
mov
mov
pop
out
push
in
push
test
decl
rorl
fs
std
gs
mov
stos
sbb
cmp
lcall
adc
adc
xchg
sahf
int
jo
xchg
cmp
sub
lcall
std
mov
jge
sbb
inc
push
jbe
xor
incl
jo
and
cmpsb
pop
test
xchg
mov
mov
js
sbb
cmpsb
ds
mov
cli
dec
int
popa
jbe
and
hlt
in
decb
lret
add
dec
lea
jmp
jg
test
xor
cmc
mov
stos
faddl
ret
inc
jmp
adc
rorl
sub
jmp
ljmp
jae
aas
in
xlat
test
inc
imul
jne
out
popf
sbb
outsb
push
fwait
test
mov
fs
dec
xlat
xor
int3
lcall
in
pop
push
jo
fsub
shlb
and
jns
out
incl
call
cmp
lock
mov
orl
sbb
xchg
cmp
push
pop
mov
mov
idiv
mov
push
mov
aad
hlt
cltd
inc
sti
sbb
es
orb
jl
inc
nop
cmp
push
das
push
into
cwtl
sbb
int3
in
adc
dec
out
mov
adc
stos
lcall
adc
cmp
inc
push
ljmp
jnp
aad
mov
das
and
pop
cld
outsb
sbb
mov
xor
pusha
or
and
push
xchg
pop
cmpsb
xchg
test
xorl
rorl
pop
xor
in
in
xor
mov
popa
sbb
iret
and
inc
sbb
jg
dec
push
test
es
or
scas
loopne
loop
pop
or
ret
cmp
push
aaa
dec
iret
loop
fs
inc
cmp
cmp
mov
pop
or
mov
stos
add
or
inc
cmp
fcompl
aam
call
dec
loopne
adc
mov
pop
pop
aas
out
jge
or
jecxz
call
fwait
lock
inc
cmpsl
popa
shll
xor
and
cwtl
and
lea
and
jg
repnz
fiadds
bound
push
push
fisubrs
push
or
incl
pop
mov
add
or
push
cmp
add
mov
cmp
inc
bound
and
aas
cmpsb
xchg
into
enter
ljmp
repnz
popl
pop
and
adc
jnp
mov
and
arpl
clc
fistps
repnz
aad
or
insl
imul
shlb
ljmp
movsb
mov
jg
pop
insl
xor
add
fs
or
fiaddl
int3
xchg
mov
cld
xchg
or
lock
cld
outsl
xor
xor
jg
incl
or
hlt
pop
outsb
aas
pop
ss
int3
loopne
mov
ret
std
dec
flds
and
mov
je
mov
stc
ficoml
mov
sbb
sub
or
adc
inc
sub
lock
sbb
inc
and
stos
inc
adc
ficompl
jb
out
jp
int
lret
stos
dec
cmp
dec
jae
popf
pop
jg
call
jecxz
daa
test
fnstcw
jecxz
jae
add
cli
xchg
mov
jge
fucomip
call
sub
or
sarl
xor
sbb
imul
nopl
cld
insl
cmp
fwait
or
mov
push
add
add
fisubrs
lahf
pop
inc
sub
or
js
arpl
jnp
call
insl
dec
inc
lods
pop
scas
mov
pushf
lcall
cld
dec
frstor
sub
xor
jo
push
xchg
sti
ljmp
aad
mov
fwait
adc
insb
sub
push
in
jp
int
and
repz
stos
outsl
cld
inc
shll
fstps
inc
insl
stos
ja
decl
mov
sub
clc
dec
movsb
fldt
jnp
cltd
pop
aad
xchg
clc
sahf
popf
and
loopne
movsb
cmp
aad
test
pop
pop
sub
xchg
push
mov
mov
jg
les
sub
mov
fwait
call
sbb
jge
inc
or
push
or
bound
xchg
ss
ret
mov
adc
out
cmp
and
sub
mov
nop
mov
and
jne
mov
or
push
or
sti
cmp
xor
inc
push
insb
push
mov
inc
mov
push
sub
ss
xor
fisubrs
push
xor
add
jmp
inc
lahf
imul
fnstsw
sub
std
xor
ljmp
sbb
fcoms
push
roll
je
icebp
or
inc
add
sub
and
jg
decl
jl
icebp
jnp
mov
lods
and
pop
sub
ljmp
jo
stos
cli
sbb
xorb
stc
pop
mov
incl
pop
dec
mov
push
arpl
lahf
pop
test
pop
stc
fildl
dec
xchg
push
les
popf
enter
jg
aas
out
je
sub
and
mov
xor
lock
ljmp
dec
pushl
pmaxsw
lret
dec
stos
sbb
xchg
scas
xlat
mov
mov
clc
loop
fidivrs
scas
test
lcall
jg
pushf
xchg
add
dec
xor
mov
sub
out
in
push
ljmp
test
ficoms
add
xchg
mov
incl
pop
movb
pop
inc
xor
cld
pop
clc
test
jo
pop
push
sbb
movsb
int3
xchg
cmpsb
imul
mov
jmp
rcrb
dec
lahf
popf
outsl
pushf
cmp
push
xchg
clc
jmp
xor
dec
mov
fstpl
push
cltd
push
or
movsl
into
pushf
sbb
inc
movsl
movsb
lock
pushl
enter
out
mov
out
repnz
pop
cmp
sbb
jmp
ljmp
stos
cmp
dec
lods
xlat
imul
mov
sbb
push
jmp
push
xor
std
pusha
lret
pop
pop
sbb
scas
push
add
sub
clc
mov
jnp
mov
out
xchg
sub
fadds
push
mov
mov
xchg
fisttpll
ljmp
pop
push
sar
inc
pop
movsb
mov
mov
mov
loopne
mov
dec
pop
sbb
xor
fwait
shlb
mov
dec
movsl
adc
std
mov
push
mov
jne
int
les
sub
xor
dec
jmp
mov
rcrb
pop
cld
ret
in
fdivs
fnstenv
rorl
das
cmc
incl
mov
popf
hlt
rorb
sub
dec
fimull
push
ud0
dec
push
inc
and
cld
add
cld
adc
jmp
aas
insl
std
call
ljmp
lock
ljmp
jnp
inc
and
je
mov
mov
call
clc
andl
sub
aam
ret
sub
or
call
bndldx
pop
and
or
mov
scas
ljmp
pop
and
fs
cmpb
or
add
out
cmp
mov
xorl
mov
pop
cltd
lods
pop
sbb
lcall
out
xor
out
sahf
lea
push
ja
nop
xchg
mov
sbb
xchg
or
pushl
xchg
dec
mov
mov
cmpsl
or
in
aam
fwait
push
mov
stos
inc
jle
cmp
incl
jns
cwtl
je
mov
mov
mov
cmp
pushl
loop
adc
xor
jnp
std
mov
aaa
pusha
fwait
or
cmp
pusha
ficoml
aam
and
mov
das
mov
jnp
pop
xchg
push
lret
in
sahf
in
jne
pop
or
lcall
leave
or
movsl
push
add
mov
lcall
int
sbb
xchg
syscall
cli
cmp
push
ret
push
lods
int3
jne
ja
push
icebp
adc
sbb
xor
or
push
cwtl
mov
lods
scas
das
lds
jmp
adc
ja
push
ret
imul
incl
add
clc
mov
cmp
push
loopne
sbb
and
mov
enter
ljmp
and
movsb
push
pop
loop
in
ret
mov
fisttpl
nop
fbstp
jb
xchg
mov
ljmp
mov
pop
xor
adc
lcall
mov
flds
call
mov
xchg
shll
xor
arpl
push
inc
js
call
mov
mov
xchg
enter
lea
bound
data16
jg
mov
jnp
inc
jno
test
imul
pushl
shrl
lret
ficoms
call
ljmp
inc
loope
adc
je
mov
inc
or
hlt
dec
rcrl
fsubrl
ljmp
jg
shr
cmp
and
dec
in
stc
inc
mov
stos
dec
bnd
jmp
insl
or
icebp
sbb
cmp
sbb
hlt
push
xchg
jecxz
test
scas
mov
clc
mov
mov
nop
scas
test
xchg
xchg
cmpsl
cwtl
pop
push
clc
jg
xchg
jne
mov
pushf
mov
jb
cmp
sarb
adc
cmp
fistps
test
push
prefetch
or
out
push
xchg
sbb
pop
cmp
mov
sbbl
push
test
shrb
jne
mov
cs
andl
xchg
push
inc
pop
ss
jb
pop
mov
and
or
jmp
mov
subl
test
stos
js,pt
pop
jne
shl
imul
pushl
inc
iret
lods
push
nop
sbbl
pop
jo
call
cli
ds
es
imul
decl
jp
inc
mov
nop
call
add
push
call
pop
dec
mov
movsb
aas
popf
aas
inc
sbbb
push
idiv
lcall
mov
xor
push
xchg
and
or
mov
pushl
addr16
push
js
shll
cmp
fldz
or
jne
imul
pop
jnp
push
decl
sub
decb
movsb
test
xchg
hlt
push
or
mov
jg
ret
sub
mov
test
xor
in
and
clc
xor
aaa
mov
push
lcall
jg
pop
aad
out
dec
paddb
sbb
inc
ljmp
icebp
adc
adc
les
test
mov
push
cmc
jae
aas
lcall
incl
adc
sub
gs
adc
dec
cmp
mov
dec
fistpl
or
ret
and
mov
adc
ss
lcall
jmp
sbb
push
mov
rol
fcmovnu
incl
ljmp
jb
nop
fnsave
test
xchg
jno
sti
data16
mov
sub
pop
pop
fwait
sbb
push
je
jno
imul
adcl
lcall
jecxz
ss
jmp
or
test
xchg
cmpb
xchg
xlat
mov
dec
fcoms
cs
cmp
mov
test
jmp
lahf
xchg
cld
xchg
adc
add
dec
faddp
fisttpll
ja
xor
movsb
xchg
sub
mov
and
cltd
adc
mov
lods
push
mov
mov
aad
fmull
push
dec
xchg
pop
aaa
js
int3
mov
call
bound
push
mov
inc
jp
iret
test
repz
mov
xchg
shlb
decl
loop
sub
int3
pop
dec
xlat
mov
dec
mov
in
es
call
xchg
test
into
mov
pushf
scas
xchg
pop
outsl
call
mov
push
cltd
sub
insb
pusha
data16
fwait
mov
sbb
cwtl
fsubs
lret
cmp
push
out
dec
fstpl
scas
mov
and
xchg
cmp
push
scas
movsb
jl
vandps
push
ja
pushl
lret
cld
pop
dec
cmpsl
jecxz
je
push
push
sbb
pop
fldcw
jg
dec
mov
imulb
pop
sbb
sbb
mov
cmp
mov
ds
filds
inc
sub
and
push
icebp
pop
sub
or
or
call
push
inc
les
jmp
mov
mov
in
or
shll
dec
adc
cmp
insl
stos
xchg
insl
inc
adc
in
sbb
jns
dec
pop
add
ret
lcall
dec
sub
mov
jno
xor
pop
fs
fnsave
cmp
outsl
hlt
fildl
lea
and
je
fidivl
ljmp
cmc
pushl
lods
cmc
pusha
push
fadds
bound
pop
and
mov
lcall
cld
xchg
mov
push
adc
cltd
cwtl
cmp
jg
outsl
icebp
sbb
adc
pop
pop
add
aam
ljmp
lcall
xchg
pop
fidivrl
xor
cmp
push
pop
hlt
mov
jae
sbb
push
das
cld
jmp
dec
andb
sbb
fldl
mov
pop
sbb
mov
inc
pusha
mov
adc
sbbl
xchg
inc
lcall
mov
fwait
sub
sub
aam
aas
xor
pop
cli
pop
cli
sti
aam
mov
push
lock
sahf
pop
imul
dec
mov
cmp
pop
push
push
jb
addl
xor
ljmp
mov
int3
ds
mov
popw
push
dec
jo
cmp
mov
dec
testl
xchg
dec
pushl
ret
pop
insb
imul
les
push
aad
pushl
push
inc
push
movsb
mov
imul
insb
push
stos
pop
xor
xchg
push
decl
mov
into
insb
icebp
fnstcw
leave
ja
imull
out
sbb
pop
ljmp
pop
xlat
pop
jg
cli
mulb
shr
push
mov
or
push
out
inc
std
pop
add
cmpsl
and
push
sub
std
ljmp
or
mov
pushf
out
jb
lock
and
pop
movsb
jno
out
xor
das
mov
jb
cmp
or
sub
mov
mov
cmp
mov
clc
sub
jns
pop
jg
cmpl
mov
pusha
jl
daa
xchg
sub
pcmpgtw
cs
sbb
aam
sub
inc
mov
cmp
mov
jle
pop
sbb
std
lods
hlt
loopne
xchg
rorl
dec
imul
incl
daa
xor
inc
out
pop
or
lds
mov
pop
aas
mov
xchg
cs
mov
lods
fs
lret
decl
gs
sub
mov
mov
fcmovb
mov
mov
fucomip
call
and
sbb
les
es
lcall
push
into
add
push
jnp
jo
cltd
and
cmc
or
decl
push
xor
in
mov
push
pop
in
js
js
pop
stc
xchg
adc
ret
jmp
push
dec
les
test
rclb
xor
adc
std
shll
shl
dec
mov
push
mov
aaa
pop
add
jg
ljmp
loope
addb
cmp
cld
aaa
push
xchg
pop
addr16
notb
mov
sahf
testl
mov
mov
mov
pop
outsl
mov
call
mov
pop
adc
mov
enter
aaa
cli
sub
loope
lods
jo
pop
mov
adc
mov
and
test
lret
into
pop
xchg
cmp
dec
into
mov
lods
lods
push
fdivr
adc
jg
mov
xchg
push
push
ficoms
pop
movsl
xor
aad
mov
cmpsb
or
je
out
out
pusha
xchg
sbbl
push
pop
push
imul
ss
mov
xor
xchg
js
sub
inc
movsb
add
lcall
shll
call
insl
adc
jg
add
lahf
xor
push
sbb
mov
outsb
xchg
cs
pop
mov
xor
mov
mov
pop
adc
es
decl
aaa
popf
cmp
xchg
add
shll
mov
mov
mov
xchg
outsl
push
push
xchg
test
jbe
xchg
push
movsl
stos
xchg
cli
das
icebp
jne
movsb
inc
dec
sahf
push
and
mov
ljmp
arpl
jmp
shlb
in
sbb
pop
mov
and
jl
fs
or
jnp
push
out
push
xchg
cmp
cmp
call
out
xor
movsb
adcb
pop
shrb
int3
orl
lcall
into
inc
pop
jecxz
ss
call
pop
cmp
sub
lcall
pop
xchg
xchg
adc
aaa
mov
rcr
sbb
not
xor
cld
mov
mov
mov
xchg
out
ljmp
cs
or
push
sub
dec
ret
ja
cmp
mov
adc
mov
cmp
sub
sbb
iret
sub
sar
jge
daa
mov
pop
push
lods
test
and
push
ror
lahf
pop
push
mov
and
mov
out
mov
add
sub
cmp
decl
adc
fdivp
sbbb
sub
jle
sbb
push
fdivl
sarl
mov
dec
and
int
inc
lcall
pop
push
xor
mov
sbb
lcall
cmpsl
push
rcrl
shl
mov
jl
or
jnp
es
mov
dec
pop
outsb
decl
pmaxsw
cwtl
ja
sub
movsb
add
lcall
std
aaa
lcall
push
mov
xor
stos
adc
xor
aad
mov
ljmp
sub
sti
fwait
xchg
notb
sti
fistl
test
cli
out
imul
jmp
mov
nop
pop
pop
add
enter
lret
fs
jmp
lahf
sahf
push
or
sub
aam
cli
jmp
inc
push
xchg
jnp
mov
ret
inc
insb
xor
dec
sarb
mov
jbe
dec
sub
fildll
ja
and
mov
lret
jl
pop
sub
insl
lcall
movsb
incl
fisttpll
loope
dec
rcrb
lret
aam
movsl
pop
and
mov
enter
xchg
inc
les
incl
xchg
inc
pusha
fnstenv
mov
incl
adc
mov
int
mov
mov
popa
mov
movsl
test
dec
repnz
dec
mov
shlb
ficompl
lods
out
adcb
xor
adc
sarb
dec
lcall
fmuls
mov
pop
mov
hlt
adc
aas
test
incl
add
data16
pushf
xchg
incl
popf
cmp
pop
mov
lcall
xor
sub
sbbl
push
xor
pop
sub
ljmp
mov
outsb
sbb
adc
enter
data16
mov
mov
jl
cmp
adc
rcll
call
inc
xor
aam
pop
sub
or
or
cli
call
mov
not
or
stos
aad
mov
jnp
ljmp
decl
cmpsl
jb
push
xor
mov
sbb
cmp
xor
addr16
add
or
aad
pop
les
rcr
fwait
jno
in
std
ret
ljmp
fincstp
cwtl
out
jp
cmp
xor
insb
or
and
movsb
icebp
aaa
xchg
mov
or
pusha
and
out
stc
leave
popa
push
jb
mov
cmp
cld
add
scas
incb
mov
shl
jmp
push
mov
and
pushl
scas
jge
xor
cmp
jg
lock
sahf
pop
je
lcall
cmpsl
lods
sub
jmp
or
dec
mov
jb
lods
fimull
daa
gs
mov
add
icebp
pop
cmc
imulb
sub
push
dec
lock
cld
das
jbe
or
pop
mov
push
pop
jo
adc
push
push
mov
push
add
cmp
icebp
movsl
dec
adc
adc
ret
fwait
das
ss
call
test
cmp
int
jg
pop
pop
cld
jmp
ljmp
xchg
dec
test
dec
push
mov
sar
xchg
mov
jmp
lahf
or
ficompl
pop
lcall
ret
mov
psraw
jmp
xchg
or
lahf
movb
hlt
sysret
inc
or
incl
subb
mov
rcll
add
or
call
decl
ss
xor
inc
cmp
push
lcall
xchg
ljmp
xchg
jb
cld
pop
push
lock
lea
mov
call
xchg
das
fst
mov
push
shll
scas
ss
jae
imul
ds
lcall
cmp
push
loopne
sbb
push
aaa
test
adc
adc
inc
mov
xor
outsl
cld
cmp
fstpt
into
decb
movsb
mov
out
stos
mov
ljmp
popf
mov
jnp
ljmp
loopne
add
imul
incl
xor
mov
inc
add
cmpsb
and
fwait
mov
pop
lahf
pop
ja
call
jl
loop
xchg
hlt
xor
ss
cmp
dec
enter
call
sub
ljmp
fidivl
ret
mov
scas
addr16
sbb
and
adc
ljmp
in
dec
jl
cmpsb
xchg
scas
sub
xor
adc
add
insb
insl
push
fistpll
mov
cmp
test
and
sub
fs
xchg
and
mov
call
in
pop
ret
and
jno
sbb
movsl
jmp
cmp
xchg
inc
mov
out
out
pop
std
inc
incl
xor
jbe
popa
sti
push
leave
shrb
adcl
sbb
and
call
mov
inc
lea
out
pop
lcall
das
insb
fs
push
inc
fisubrl
add
jge
dec
ljmp
std
jle
in
adc
imull
scas
adc
repz
incl
fisubrs
cmp
mov
out
and
cmpsb
jmp
ljmp
icebp
push
and
or
movsl
icebp
lret
outsb
adc
lahf
movsb
jg
icebp
cltd
lock
mov
jg
addr16
jmp
dec
movsl
movl
add
pop
shrl
punpckhwd
bound
mov
lds
cld
jg
adc
gs
lods
and
jg
jo
mull
lock
dec
add
push
mov
rorb
les
fwait
pop
xchg
lcall
rcll
repnz
add
stos
adc
fiadds
and
or
scas
les
cmp
int
or
imul
dec
test
or
addb
cld
inc
sub
or
pop
ficoml
sub
mov
xchg
cltd
cltd
dec
das
cmc
incl
sahf
mov
fs
movsl
mov
rolb
lcall
jmp
mov
aaa
in
and
adc
leave
das
ljmp
cmp
lock
aas
push
leave
cmp
and
fsubrl
fs
cmp
lea
inc
fsub
mov
mov
mov
jp
mov
jge
push
add
mov
imul
mov
subl
adc
sti
mov
push
push
mov
sbb
jg
and
out
pop
cltd
lret
xor
cli
sbb
and
scas
push
xor
sbb
or
dec
cmp
mov
in
enter
call
movsl
mov
adc
adc
cs
dec
fstl
sub
sti
lcall
mov
or
jp
xor
mov
in
mov
clc
lds
and
mov
push
mov
add
and
rorb
mov
outsl
pop
call
lea
mov
add
jg
into
or
divl
cmp
out
aam
sub
fildll
pop
aam
pusha
cmp
adc
rcrb
ljmp
in
xchg
repz
ja
notb
jae
xchg
lcall
div
dec
jno
lcall
in
das
lret
addr16
mov
mov
fwait
jmp
scas
out
add
ret
cmp
test
outsl
call
popf
js
ja
and
scas
cmp
xor
popa
arpl
add
inc
mov
out
dec
xchg
pop
inc
mov
rcr
jno
lcall
mov
cmp
sub
push
iret
out
addl
jo
dec
pop
inc
mov
sbbl
into
rcll
orb
clc
jae
in
popa
pop
mov
das
adc
cmpsb
pop
cmp
stos
in
push
mov
jle
or
dec
mov
aad
push
fidivs
fimull
pop
mov
addr16
pop
test
mov
test
loope
sub
ret
loope
pop
lcall
call
loope
cmp
out
imull
clc
outsb
call
xchg
cmp
scas
pop
lahf
dec
xor
push
lock
pop
mov
call
push
fcompl
fsubr
xchg
xor
dec
flds
mov
pusha
sub
xor
and
lcall
add
gs
inc
push
hlt
out
xlat
test
addb
iret
enter
je
fisttpl
icebp
and
push
subl
mov
and
lea
jg
ljmp
mov
jp
dec
mov
mov
lcall
setns
jl
sti
add
and
mov
add
movsl
push
push
add
push
fsub
xchg
insb
mov
ljmp
std
push
pop
shlb
ret
dec
sbb
das
rolb
repnz
js
int
lock
cmc
sbb
es
shl
iret
dec
dec
loop
adc
pop
xor
sbb
and
sbb
mov
lcall
lods
push
sti
jle
mov
add
shlb
xor
cmc
test
sub
mov
decl
stos
addr16
and
push
jle
and
and
aad
mov
xchg
mov
popl
lcall
xchg
idivl
pop
js
rcrb
cmp
popl
mov
jecxz
mov
incl
and
sarb
cwtl
mov
pcmpeqb
out
lret
sub
push
xlat
out
scas
cld
imul
or
out
popa
jbe
jo
scas
es
jmp
lods
or
sbb
std
je
mov
sarl
lret
ss
inc
add
pop
pop
mov
lods
cwtl
out
add
mov
outsl
hlt
mov
adc
xchg
lods
es
jg
stos
xchg
nop
cmp
pushl
push
xchg
pusha
int
pop
dec
mov
xchg
movsb
imul
mov
inc
lcall
sbb
aas
movsl
jle
decl
jg
inc
xchg
mov
movsl
sub
add
inc
inc
adc
push
outsb
lret
addl
cwtl
aas
mov
sbb
lcall
xchg
mov
xor
dec
insb
cmp
mov
fisttpll
leave
mov
sbb
std
jg
into
add
xor
mov
out
push
mov
dec
movsb
mov
lock
xchg
sbb
add
jae
mov
cwtl
push
jg
or
popa
insb
push
call
fcomip
addr16
arpl
filds
jle
out
cmc
add
fucomip
incl
outsl
prefetch
mov
loopne
mov
pop
test
lret
movsb
mov
inc
sbb
pop
aaa
mov
push
dec
clc
sti
test
jno
xor
inc
in
outsl
push
or
outsl
pop
push
adc
call
pop
std
pop
jb
movntq
or
das
loop
inc
jae
dec
ficoml
mov
jg
pop
es
les
loope
cwtl
dec
xlat
jg
ja
mul
sbb
ljmp
lret
pop
std
sahf
jo
lods
adc
push
cmpb
jae
sbb
sbb
pushl
cmp
sahf
cs
and
sbb
lcall
cmp
jns
or
ret
incl
push
jl
pop
dec
add
scas
dec
arpl
lret
fwait
dec
sbb
cmp
icebp
les
decl
mov
test
push
dec
ss
in
scas
adc
push
mov
std
test
shlb
cld
aaa
jmp
ja
bound
outsb
mov
lcall
std
cltd
pushf
and
aas
rcl
xchg
mov
das
sbb
outsb
jge
mov
filds
in
push
inc
push
popa
hlt
adc
loope
dec
add
mov
out
stos
out
jmp
and
sbb
sarl
push
jae
enter
lods
cs
ljmp
mov
arpl
push
mov
mov
push
lods
push
loopne
jmp
jmp
std
sti
hlt
push
xchg
sbb
mov
push
dec
mov
clc
sbb
int
fbld
lock
incl
rcrl
pop
jmp
cmp
cmpl
jg
das
dec
fsts
mov
xor
iret
rcl
decl
push
jge
cmpsl
insb
jo
test
call
out
rcrl
ljmp
icebp
push
cmp
aad
jmp
out
pop
scas
arpl
jo
sub
adc
ss
push
mov
cmp
cmp
push
adc
pop
ja
clc
jno
js
bound
push
and
mov
cmpsb
and
sbb
aaa
jp
js
call
ljmp
adc
scas
ret
and
mov
jno
mov
lock
fstl
push
xor
lds
cli
dec
incl
movsb
and
xor
inc
mov
aad
add
pushl
jp
lret
cli
cli
inc
ret
sub
xchg
out
mov
sahf
shll
decl
mull
repz
ret
es
push
jmp
lods
cmp
or
adc
insb
push
xchg
clc
mov
dec
test
adc
outsb
rorl
push
fcmovne
dec
push
int
push
mov
mov
adc
and
xchg
cli
dec
jbe
pushl
clc
jmp
enter
stos
jae
sub
mov
push
and
mov
js
xlat
cld
test
or
test
arpl
cs
jmp
mov
frstor
mov
fistpll
lcall
sbb
or
popf
rorb
rcrb
andl
mov
std
jg
sbb
clc
add
jecxz
fs
aas
mov
mov
pop
mov
add
cmp
jg
and
xor
fdivrp
incl
cli
jle
lcall
xlat
xlat
divl
xchg
mul
es
addl
push
ljmp
push
xor
jb
cltd
add
jnp
jb
and
mov
test
pushl
lcall
lcall
inc
sbb
inc
movsb
sub
jg
xchg
clc
icebp
adc
les
sahf
adc
lods
loopne
and
hlt
jae
push
jp
decl
or
repnz
mov
dec
outsl
sub
movsb
adcl
cmpsl
jmp
mov
inc
movsl
into
jge
jle
ror
mov
push
pop
mov
mov
jmp
hlt
in
dec
int3
mov
in
xchg
out
movsb
loopne
aas
lcall
add
push
ja
push
xlat
jnp
std
fistps
pop
sbb
or
and
mov
fiaddl
push
mov
iret
fsts
out
aad
ret
pop
lcall
std
dec
clc
mov
ds
test
dec
dec
jge
xchg
xchg
ljmp
jmp
xchg
rcll
fisubs
ss
adc
rclb
inc
jle
and
and
cld
inc
jle
ret
pusha
xor
push
xchg
push
jp
outsb
mov
lock
mov
jne
outsl
pushl
mov
adc
xor
mov
mov
int3
add
lcall
sub
mov
mov
aas
cmpsl
sub
xlat
lahf
sub
scas
stos
inc
loop
pushl
push
push
imul
sub
repnz
pop
int
mov
clc
mov
mov
mov
mov
loope
lcall
out
mov
dec
rol
cmp
push
notb
and
cld
outsl
add
push
add
xor
lds
sar
test
int
inc
out
jge
mov
jo
jmp
icebp
push
lcall
call
test
xchg
xor
mov
jmp
lret
cmc
cmc
fs
daa
imulb
leave
mov
pushl
xchg
popf
popf
test
push
in
mov
cld
in
das
call
clc
decl
fwait
ljmp
mov
lea
shrl
stc
jl
lcall
cmp
pop
mov
push
push
int
mov
fnstenv
insb
decl
push
pusha
sbb
aas
stc
inc
scas
hlt
sub
shll
in
pushf
data16
add
popw
mov
ljmp
cmc
in
mov
jg
in
mov
or
std
mov
loope
jg
pushl
nop
roll
daa
mov
or
call
lods
sbb
dec
popa
lret
xlat
push
add
or
lcall
fimull
or
jns
jmp
les
pop
cli
mov
rorl
and
sub
ljmp
ret
fcmovu
or
add
or
push
jmp
cmp
sbb
cli
out
incl
shr
adc
iret
ss
pop
dec
lahf
inc
ret
adc
lcall
mov
inc
cmovle
stos
mov
ja
rcll
jbe
int
xchg
ficoms
aam
pop
icebp
mov
lret
xchg
ljmp
inc
out
xchg
jnp
push
bswap
push
sbb
fucomip
push
adc
inc
or
ljmp
iret
fidivs
add
jl
loop
int3
cmp
jl
lcall
jmp
mov
cmp
dec
fwait
or
or
in
aam
cs
mov
add
call
decl
test
enter
icebp
xchg
add
mov
jmp
mov
pushl
out
es
lret
ljmp
inc
jg
sbb
test
rolb
lods
and
mov
scas
xchg
cli
das
jl
in
sbb
lcall
fistps
wrmsr
and
lcall
inc
adc
fstpt
loop
adc
inc
mov
outsl
cli
add
shlb
not
xchg
xchg
pushf
mov
mov
push
inc
xlat
data16
inc
sbb
push
imul
popf
mul
es
adc
loop
std
xor
imul
addr16
mov
rolb
loopne
inc
fnsave
andb
std
lods
loopne
fisttps
rcrb
fst
movsb
cli
insb
ja
and
inc
int
es
jp
ret
inc
aas
loop
pop
lods
mov
push
mov
fdivrl
adc
cmc
incl
loope
cmovns
xchg
mov
pop
inc
ds
hlt
mov
cltd
stos
repnz
push
sti
xchg
shll
pop
shl
in
mov
mov
inc
adc
movsl
ljmp
dec
je
leave
mov
mov
xchg
inc
mov
gs
jo
cmc
das
jae
mov
fs
int3
xor
add
jne
arpl
jge
sbb
inc
xchg
mov
pushl
clc
add
sbb
adc
aaa
push
in
and
cld
dec
enter
out
cmc
incl
and
mov
mov
repnz
sbb
inc
ss
inc
ljmp
sub
sti
test
hlt
enter
mov
out
push
dec
fcmovnu
mov
push
mov
ror
jno
int
cld
pop
mov
in
mov
mov
lea
sub
mov
xchg
cmp
lcall
fcomps
inc
mov
cmpsb
daa
xchg
mov
xchg
aas
out
pop
push
add
xor
rcll
fs
lcall
aaa
insl
fcmovb
push
ds
hlt
inc
sbb
stc
jo
mov
fsubrl
decl
xlat
cmp
xchg
pinsrw
dec
cld
out
es
jo
pop
inc
leave
xlat
popa
ret
sbb
jge
ret
cmp
lea
push
dec
pop
stos
fsubs
push
ret
das
hlt
fbld
hlt
mov
cmc
jl
sub
xchg
and
sub
loopne
clc
jmp
cmpsl
sbb
lret
lods
scas
push
dec
push
mov
lcall
dec
add
leave
mov
jnp
test
adc
cmp
lods
add
mov
clc
lods
dec
pop
pop
hlt
and
xor
xchg
outsl
cmpb
and
call
cli
jge
rol
push
mov
aam
sbbb
das
add
mov
sahf
ds
sub
sub
mov
pop
rcrb
pop
out
cli
scas
or
pop
shrl
cmp
mov
ja
mull
dec
and
mov
or
popf
pop
in
test
cmp
mov
sbb
xchg
test
lock
mov
dec
and
xchg
jg
dec
out
mov
pop
adc
aaa
enter
sub
stos
push
jle
aaa
clc
mov
sti
dec
sub
out
mov
cltd
push
pop
add
dec
rcll
call
adc
test
pusha
adc
inc
cmpsb
cmp
or
lock
lcall
add
enter
dec
daa
cmp
add
rclb
outsb
movsb
dec
sub
ljmp
ss
mov
dec
call
out
inc
push
int3
aaa
mov
mov
enter
mov
jecxz
pop
dec
movsl
dec
lahf
jg
ljmp
cmp
jg
mov
js
jge
jmp
inc
js
jle
test
pop
and
pop
cld
adc
add
xchg
pusha
loopne
mov
repz
add
jb
or
mov
mov
insl
cmc
sbb
xor
xor
aas
xor
sub
lcall
fnstcw
loope
mov
xor
jg
mov
lock
push
jmp
or
mov
jb
js
dec
adcb
and
insb
test
decb
stos
push
sub
adc
sbb
out
xchg
mov
pushl
clc
lcall
jge
dec
jbe
movsb
jb
dec
fsubr
leave
push
pop
inc
ja
mov
sarl
dec
addl
push
xchg
xchg
out
fdivr
mov
push
lock
aam
std
in
mov
ss
mov
inc
inc
inc
inc
pushf
jmp
call
test
imul
gs
adc
lcall
stos
pop
mov
lcall
mov
dec
pusha
xor
adc
xor
icebp
in
call
and
xchg
test
lds
insl
inc
lret
jae
xlat
mov
sub
arpl
xor
xlat
fadds
sbb
xchg
mov
negb
lcall
mov
leave
xor
mov
lcall
lea
ret
fs
rcll
inc
data16
mov
xchg
cli
fildl
pop
add
cld
mov
call
push
pop
negb
lahf
outsl
cmp
push
inc
outsb
insl
and
jmp
cwtd
cmp
push
int
mov
lods
mov
mov
out
testl
scas
je
movsb
inc
mov
xor
xchg
mov
xchg
shlb
out
test
les
xor
movsl
bound
adc
mov
jnp
jne
stos
loopne
inc
in
mov
xor
push
mov
mov
test
mov
std
jge
xor
outsb
lock
pop
fsubp
mov
pop
cmp
mov
decl
int3
test
cmp
fbstp
fadd
push
lret
adc
pop
cld
call
cmpb
mov
daa
pop
rol
bsr
cmp
cmp
push
add
and
repnz
ljmp
jmp
dec
jmp
lret
xor
arpl
adc
pop
sub
movsl
jmp
movsl
jle
push
jnp
add
dec
es
test
rcr
or
ja
out
inc
lock
jg
jne
mov
inc
or
loopne
cli
in
stos
push
push
inc
push
outsl
cltd
repnz
mov
fucomip
mov
sbbb
add
movsl
sub
xchg
imulb
ss
addr16
cmp
cmc
jmp
popa
sub
inc
das
or
add
adc
cmp
call
and
cmpsl
ret
push
or
hlt
es
daa
mov
jmp
push
jne
jmp
in
pushl
inc
je
or
int3
ja
pop
adc
push
mov
push
jg
mov
mov
cmp
nop
hlt
pusha
sahf
test
cld
lods
mov
data16
dec
push
pop
mov
lcall
mov
ret
inc
push
divb
push
pop
xor
cmp
lcall
shll
mov
ficoms
scas
push
and
shll
aam
call
and
or
xchg
pushl
clc
mov
mov
mov
notl
add
sub
mov
test
cmpsl
cwtl
sbb
pop
jae
sbb
xchg
jno
jg
jg
mov
pop
fstl
inc
mov
imul
adc
decl
clc
cltd
xor
sbb
inc
out
xor
sub
aam
lea
call
jmp
add
mov
cmpb
scas
and
push
test
jns
daa
pop
mov
sub
pushl
mov
push
icebp
jg
mov
cmpl
xchg
call
dec
rclb
leave
out
fdivrs
ss
mov
pop
dec
into
inc
mov
outsl
lock
inc
jle
pop
into
pop
push
fidivs
push
xor
add
lcall
sar
mov
add
int3
lea
mov
and
jecxz
mov
cwtl
cmp
xlat
popf
sbb
pushl
push
add
jmp
stc
jmp
jp
setg
jne
pop
cmp
test
hlt
and
push
dec
pop
pop
je
inc
jbe
push
inc
test
add
jl
pop
arpl
pop
mov
xor
and
clc
mov
push
mov
dec
data16
cli
call
xor
dec
test
dec
xor
cmp
incl
filds
lcall
and
sub
inc
sarl
adc
outsl
jbe
lea
mov
add
pop
nop
jne
arpl
xchg
mov
mov
cmp
ljmp
insb
cli
or
xchg
xor
das
movsb
mov
fisttps
mov
rorb
xor
jle
xchg
arpl
adc
sbb
add
dec
xchg
aam
sti
imul
mov
inc
bound
cmp
sbb
jne
mov
jg
pop
loop
push
adc
inc
ljmp
push
add
pushf
push
dec
out
lcall
xor
and
fwait
pop
jo
sbb
adc
adc
pop
mov
mov
ds
cmp
call
mov
gs
call
jbe
and
in
lret
sbb
xchg
jp
notl
nop
enter
mov
inc
jbe
or
shl
or
xchg
mov
nop
push
mov
add
decl
std
lcall
push
aad
ret
pop
ret
ffree
sub
or
lcall
incl
lock
repnz
pop
fildll
movsb
and
stos
sub
ret
add
adc
jns
xchg
movsl
jno
decl
jmp
cmpsb
dec
les
jl
xchg
or
enter
push
ss
pushl
lea
push
sbb
shrb
ljmp
cmc
or
ret
jae
add
in
repz
pushl
mov
adc
jge
sub
or
out
loop
lcall
in
fcoms
repnz
scas
stc
leave
xchg
and
aaa
cli
decl
mov
dec
and
xor
or
xchg
clc
repnz
in
ljmp
iret
out
push
pop
pop
scas
ss
mov
sarb
jg
dec
inc
icebp
addb
aad
mov
pop
test
push
mov
mov
test
or
inc
mov
mov
out
pop
mov
pop
aaa
xlat
xor
lret
daa
jmp
mov
mov
xor
mov
jno
add
sbb
jne
or
arpl
aaa
mov
inc
pop
cmp
push
add
or
ljmp
enter
sub
orb
jl
test
shrl
mov
mov
sbb
test
dec
loope
jg
rcll
push
xchg
leave
fimull
mov
pushl
aaa
sbb
push
mov
andb
decl
out
les
inc
imul
stos
lock
adc
fsubl
cmp
call
clc
bound
push
movsb
jmp
or
aas
outsb
adc
cltd
mov
incb
mov
call
popa
xchg
dec
sahf
sub
pop
imul
jns
clc
and
int
xchg
xlat
es
sahf
in
call
mov
or
and
jo
adc
sahf
mov
ljmp
nop
daa
dec
test
cltd
dec
aad
sbb
inc
pop
or
stos
iret
sti
push
push
jne
and
scas
sub
jle
or
push
loope
push
adc
int
sbb
xchg
jecxz
das
std
mov
or
rolb
inc
xchg
jb
nop
and
outsl
addr16
scas
jg
call
sub
sub
rcll
es
int3
or
inc
xchg
pop
cmp
repz
pop
jb
mov
cmc
xor
jecxz
sbb
jb
mov
sbb
ljmp
jno
inc
jmp
scas
sbb
dec
fcoml
in
and
mov
fwait
into
or
sbb
jns
lock
lock
mov
lock
std
push
idiv
out
daa
icebp
add
scas
ja
add
adc
ss
decl
fbstp
dec
repnz
or
movsb
push
in
adc
sub
dec
jg
incl
ljmp
adc
shl
and
rcrb
repz
test
jns
pop
inc
ljmp
outsb
inc
mov
dec
fidivl
data16
hlt
out
jg
sub
mov
jmp
jmp
lods
jae
inc
lock
and
das
cmc
fstpt
sahf
pop
xchg
push
imul
fisubs
ja
in
sbbl
aaa
mov
mov
sub
mov
cmc
and
sub
xor
pop
pop
ret
pop
clc
decl
push
inc
lret
faddp
or
out
or
rorb
pop
out
cmp
les
les
add
dec
pop
insb
mov
test
aaa
les
fnstsw
out
sar
xor
testb
fwait
adc
sahf
mov
mov
fldt
aad
lock
in
jae
adc
ret
fisttps
sbb
incl
xchg
sub
mov
out
dec
data16
add
ja
ljmp
pop
loopne
mov
cmp
push
fidivrl
clc
fsubr
ret
clc
jge
enter
repz
xchg
enter
dec
imul
ljmp
outsb
jge
shrb
xchg
jge
rcll
imul
fisubs
decl
jle
jo
fmul
dec
xchg
stos
cmc
inc
jge
or
jl
enter
mov
adc
push
or
outsl
std
cmp
sbb
repz
int
imul
hlt
aaa
mov
pushf
fistpll
push
addb
in
push
cmp
cmp
inc
mov
shr
stos
aad
xchg
dec
cmp
insl
les
jmp
sub
xlat
ljmp
jnp
and
leave
sub
jno
xchg
lret
mov
inc
call
bnd
push
xchg
adc
add
stc
adc
decl
divb
js
xchg
mov
mov
fs
push
mov
clc
adc
sub
scas
sub
mov
jl
xchg
sub
lock
lcall
enter
loop
adc
sbb
mov
or
jge
pop
mov
addr16
mov
lret
imul
dec
int3
mov
pop
repz
pushl
cmp
stos
xchg
test
xor
dec
or
xor
mov
xchg
sbb
inc
sbb
ret
enter
xchg
mov
xchg
adc
or
sbbb
dec
mull
mov
and
pop
sbb
jecxz
sub
push
xchg
lret
mov
icebp
hlt
popa
scas
repnz
mov
fdivrl
push
cmpsl
fwait
rorb
out
lods
xor
xlat
or
fdivr
mov
icebp
vcvttss2si
imul
mov
iret
cltd
sub
loopne
pop
loop
and
xchg
lods
push
xor
xchg
cli
mov
cmp
inc
dec
rclb
sub
icebp
add
jmp
sub
pushf
inc
leave
jo
mov
ljmp
dec
jge
call
test
testl
push
pushf
scas
cmpsb
stos
or
sete
sub
loop
add
pop
loop
mov
ljmp
insl
lock
jno
dec
dec
sbb
movsl
inc
fwait
mov
mov
lcall
push
cmp
decl
inc
arpl
mov
mov
add
sti
aad
xchg
loopne
lods
das
icebp
pop
cld
mov
in
xchg
mov
xor
mov
jecxz
push
mov
repnz
mov
add
jl
mov
mov
cmp
add
cld
pop
lcall
or
call
jmp
ficomps
sahf
ss
mov
xchg
hlt
mov
lods
fcomps
or
cmovg
inc
mov
xchg
mov
ljmp
sub
aaa
sbb
adc
inc
cld
jl
xchg
xor
and
sbb
dec
add
scas
pop
ljmp
inc
adc
push
shrl
std
ljmp
lock
and
rorl
pop
insb
mov
add
fnstsw
call
lods
dec
leave
loop
out
push
or
fwait
push
jge
inc
cld
mov
pushl
cmp
cmp
mov
push
imul
mov
lcall
in
sub
mov
lods
icebp
mov
mov
cli
rorb
inc
jns
mov
push
add
sub
pop
xchg
lcall
std
decl
das
push
popf
cmp
into
inc
test
dec
inc
xor
pop
sbb
dec
std
mov
or
dec
or
pop
mov
push
cmp
call
imul
out
inc
aam
fiadds
scas
in
data16
testl
clc
movsl
incl
xchg
sbb
dec
lahf
adc
mov
loope
hlt
call
fisttps
repz
ret
dec
rcrl
jmp
lods
jno
push
aam
cmp
mov
mov
decl
inc
adc
xchg
mulb
imul
out
lds
push
jae
fdivrs
cmp
call
lods
int
xchg
push
addr16
or
iret
mov
decl
shrb
hlt
pop
fsts
jmp
and
xor
jb
pushl
cmp
outsl
adc
adc
repz
mov
mov
dec
pushl
mov
shl
movsb
xchg
pop
jb
cmp
dec
rol
ja
mov
in
dec
adc
call
jmp
jnp,pn
xor
out
dec
xor
test
add
dec
xchg
clc
sbb
ficomps
pop
lods
std
sub
sub
xchg
adc
cmpsb
mov
or
dec
dec
mov
in
fdivrl
repz
orl
push
ljmp
jecxz
out
cmp
inc
sub
pop
cli
jmp
ret
fwait
in
lret
xchg
dec
xchg
call
sbb
jno
sbb
mov
stos
iret
stos
into
rcrl
pushl
or
push
pop
lea
or
xor
mov
dec
jo
add
mov
call
sbb
shrl
imul
shlb
in
insl
or
pop
std
jo
xor
xchg
sbb
orb
inc
lahf
xor
sub
jg
stos
jno
imul
and
test
cmp
xor
mov
popf
add
scas
int3
stos
jmp
out
shrl
subb
sbb
int3
pop
std
lcall
xchg
inc
sahf
pop
arpl
and
rcpps
jns
pop
mov
or
ljmp
or
inc
pop
sbb
aaa
inc
or
adc
in
inc
aam
xlat
lret
fimull
notb
pop
jne
insl
mov
jg
test
movsb
jbe
rorl
push
out
mov
cmp
and
or
mov
add
addr16
mov
pop
mov
adc
call
cmpsb
lcall
mov
xchg
int
mov
or
dec
cmpsb
lret
stc
lret
clc
call
or
ljmp
cltd
push
jo
pop
and
hlt
incl
stc
cwtl
enter
and
cli
pushf
push
pushl
cmpsl
and
movsb
out
mov
jg
dec
sub
xor
cltd
mov
cli
lret
mov
imul
ljmp
pop
lea
mov
pop
mov
incl
mov
push
mov
adc
out
test
outsl
aam
aam
mov
xor
jmp
decl
push
stc
or
mov
and
dec
sbb
or
xchg
jle
jmp
pop
repnz
pop
cs
lret
and
and
xor
lock
pop
mov
xor
jg
jmp
popf
cmp
test
or
push
mov
js
or
loope
cli
jmp
scas
push
lret
cld
pop
fimull
leave
push
nop
test
or
adc
mov
jg
sbb
je
rclb
mov
jg
pushf
push
ja
imul
dec
mov
pushl
sbb
les
stc
scas
inc
push
lock
add
push
insb
xchg
lcall
neg
xor
cmp
pusha
cmpsl
inc
adc
ja
in
in
in
adc
sub
xchg
ss
incl
ret
les
or
pusha
clc
mov
pop
loop
add
cwtl
xchg
inc
or
push
jbe
xchg
sub
call
es
stc
xadd
mov
and
cbtw
xchg
jp
jns
fidivrs
lcall
ljmp
scas
cmp
in
inc
repz
cltd
and
and
pop
loop
lret
inc
ss
xchg
jle
mov
popa
mov
fsubl
ret
lret
jb
jge
leave
push
in
fcoml
shll
adc
jg
jg
push
bound
cmp
insb
fnop
jl
iret
pop
jecxz
lcall
loopne
insb
adc
push
iret
aaa
pusha
xor
sub
and
ljmp
addb
lcall
mov
movsb
dec
andb
mov
call
jns
out
xchg
aam
les
sahf
mov
jg
incl
jbe
xorb
mov
push
out
push
ss
mov
lods
mov
push
or
xor
inc
jmp
sub
add
sub
cmp
cld
and
out
lret
and
ljmp
hlt
sbb
insl
repz
cltd
jo
js
mov
jle
shl
and
push
jbe
movsb
inc
push
inc
outsb
pushf
js
pusha
ds
js
iret
push
cmpsb
jl
cli
call
add
sbb
hlt
sub
mov
pop
xor
pop
fistpll
imul
ret
repz
pushf
jge
mov
imulb
rcr
lcall
add
push
push
xor
bsr
incl
sbb
pop
fidivl
pusha
cmp
xor
pop
idiv
or
incl
into
and
xchg
sbb
aam
jbe
pop
cmpsb
mov
clc
unpckhps
ljmp
jnp
loopne
mov
in
mov
push
sahf
shrl
xchg
enter
jns
sbb
lcall
push
inc
andl
jge
adc
flds
imul
add
or
sub
mov
xor
setb
fsubrp
andl
and
je
aam
xchg
fcomp
push
inc
mov
jg
jp
jg
fdivr
jg
hlt
sbb
add
jl
pop
mov
gs
push
cld
je
daa
inc
sti
bound
rol
out
pop
in
aam
mov
lcall
pop
xor
outsl
add
popf
rcrb
jmp
fnstenv
cltd
lcall
push
jmp
and
aas
clc
inc
cmpsl
out
sbb
inc
testb
aas
push
or
add
ljmp
or
lea
cmp
or
iret
jmp
cwtl
jp
in
in
mov
stos
decl
push
mov
dec
inc
jno
adc
ficomps
fiadds
push
adc
ljmp
inc
pop
in
inc
fiadds
adc
and
or
std
pop
lcall
scas
repz
int3
xor
fucomi
xor
ja
scas
shll
jmp
or
sbb
sbb
jp
fcoml
subl
imul
cmpsb
push
fucomi
incl
mov
pop
or
push
xchg
cmpsl
out
push
out
cli
jg
lcall
adc
filds
mov
or
rcrl
add
test
pushl
jge
addr16
int3
cmpsl
push
arpl
in
cmpl
mov
divb
jg
call
sahf
subb
repnz
mov
mov
test
ljmp
push
scas
ret
push
push
add
adc
loop
push
incl
dec
jl
xchg
pop
decl
bnd
adc
pop
cmp
jg
mov
dec
aaa
call
cmpsb
lds
mov
lcall
push
or
pop
bound
add
call
jle
mov
push
int
sahf
mov
popf
push
out
leave
xchg
or
add
push
jne
push
sar
cli
icebp
sbb
xor
mov
lock
inc
decl
mov
imul
addb
lcall
jno
xchg
js
dec
xor
popl
jecxz
into
push
mov
push
sub
push
pop
inc
jmp
pop
xchg
push
fisubrs
cmp
movsb
stc
mov
lahf
add
ljmp
je
cmp
mov
in
push
lahf
loope
inc
subb
imul
xor
das
cmc
push
add
mov
push
sarb
mov
ljmp
jmp
arpl
jmp
sahf
ljmp
jg
jmp
jmp
call
fstpt
inc
jmp
iret
repz
cmpsb
lods
mov
in
inc
pop
sbb
sbb
mov
xor
lods
cmp
std
nop
dec
jmp
scas
pop
stos
sub
sub
adc
aas
fisubrs
sub
adc
mov
enter
pushl
lds
fsts
lret
adc
stos
jns
or
lcall
scas
ja
push
xorl
les
mov
int
call
fistpll
addb
cli
push
and
hlt
or
call
icebp
jae
pop
and
jg
mov
and
movsl
fwait
pop
pushf
movsl
aad
icebp
lock
rcrb
mov
decl
jmpw
inc
iret
push
test
sub
int3
and
out
adc
cmc
icebp
mov
in
push
mov
test
push
fs
stos
push
lret
or
dec
fidivrl
mov
mov
scas
push
adc
leave
enter
es
inc
sub
clc
subb
mov
pop
decl
ret
add
scas
test
aaa
out
jmp
popa
subb
sbb
or
jle
lcall
sub
out
cli
xchg
mov
arpl
das
sbb
sti
cli
or
sub
or
das
movsl
cmp
push
xorl
jge
xchg
ljmp
lock
sbb
gs
inc
mov
cld
inc
cmpsb
mov
pop
data16
mov
nop
pop
xchg
and
cmc
fs
loope
sub
incl
aad
popf
mov
sub
lods
cmp
icebp
sarl
dec
xchg
ds
test
cmc
mov
ret
mov
xor
mov
push
mov
dec
mov
icebp
in
mov
repnz
lea
jle
lret
cmp
test
inc
and
adcl
sub
fs
into
lods
jbe
adc
pop
jmp
mov
test
lods
loope
jo
inc
mov
push
call
xchg
fdivrs
adc
mov
xor
repz
clc
fbld
dec
and
dec
mov
stos
pop
call
ljmp
sub
out
scas
inc
outsl
cld
rcr
lahf
pop
push
pop
clc
fistpll
leave
lret
call
clc
sti
adc
mov
daa
stc
mov
lret
lcall
das
cmc
insl
jp
clc
xchg
arpl
jle
insl
jae
ljmp
pop
ljmp
cmp
std
dec
iret
mov
filds
sarb
add
rcrl
or
pop
inc
sti
push
jp
je
jg
mov
addr16
add
jne
add
pop
jg
cmp
or
jne
inc
pop
add
inc
pop
pushf
xchg
mov
mov
lock
jg
inc
mov
stc
xchg
sbb
adc
add
lret
ljmp
sti
je
imul
jno
nop
adc
xchg
dec
test
loop
jg
pop
mov
xchg
or
dec
or
dec
mov
inc
jae
decl
or
and
std
push
mov
scas
ljmp
mov
insb
cmc
xor
mov
sarl
call
das
aam
jge
mov
aas
push
insl
adc
cmp
mov
out
jg
incl
repnz
pop
jbe
addr16
mov
jb
jg
mov
aam
addr16
xlat
or
das
xor
clc
and
xchg
mov
sar
mov
outsb
out
outsl
mov
lock
lret
icebp
inc
ljmp
mov
test
mov
add
std
dec
fcmovne
mov
and
mov
fidivs
and
pop
into
pushf
nop
inc
arpl
std
sbb
call
lret
jl
mov
mov
lea
ljmp
cld
negb
sbb
push
ret
ja
xchg
orl
push
push
sub
in
and
adc
clc
idiv
add
and
int3
or
inc
jl
pop
int3
add
dec
ljmp
push
cwtl
stos
hlt
jnp
gs
push
and
ret
sub
ret
fnstsw
fildll
jg
pop
int
cmp
loopne,pt
add
or
inc
frstor
cmp
sbb
cmp
jecxz
adc
mov
outsl
std
in
daa
sub
mov
or
cld
sub
mov
fwait
xlat
jb
incl
incl
fisubs
push
loope
mov
or
jnp
push
xchg
sub
rorb
or
rorb
lahf
xchg
mov
out
mov
pushl
repnz
dec
sahf
lret
sbbl
test
das
push
lcall
pushf
inc
mov
ljmp
push
and
mov
lea
ret
roll
cmp
pop
imul
mov
cwtl
push
or
sti
fwait
adc
cmc
mov
push
xchg
dec
xchg
pop
or
jns
pushf
mov
das
js
icebp
add
decl
cld
inc
das
push
or
mov
cmp
je
frstor
out
clc
jmp
mov
scas
arpl
dec
fwait
mov
inc
jp
mov
inc
out
or
pop
loop
mov
leave
add
adc
mov
fisubrl
rclb
cld
pop
cli
and
xchg
movsl
inc
inc
es
mov
cmp
test
lcall
jb
popa
xorb
stc
xorl
shll
incl
incl
pop
mov
aam
scas
lods
mov
mov
mov
stos
out
notl
stc
pop
cwtl
adc
cs
fisttpll
call
add
out
cmp
cmc
add
fisttps
sbb
jmp
dec
jbe
imul
incl
mov
lcall
shll
push
inc
lcall
loopne
lock
jle
mov
push
sbb
lock
or
inc
cmp
aaa
or
insl
outsl
fists
add
insb
add
mov
dec
pusha
xchg
inc
ds
pushl
push
or
mov
scas
xchg
lret
decl
mov
lret
idivb
ret
in
shrb
jmp
icebp
pop
xlat
sbb
jmp
add
in
neg
sub
dec
jle
dec
movsb
insl
icebp
xchg
and
inc
and
loope
lock
cli
xchg
in
fidivs
jns
aad
sub
fimuls
lods
clc
ljmp
pop
jae
std
jl
inc
push
mov
mov
lahf
sti
sbb
and
call
out
out
int3
leave
popl
pushl
sti
in
sub
fcos
xchg
dec
push
xlat
jecxz
dec
shr
push
jg
call
jecxz
fs
filds
in
sar
call
lahf
add
and
inc
int3
outsb
outsb
loopne
mov
mul
cs
dec
imul
call
and
cmp
repz
xlat
or
mov
pop
xchg
cmp
test
cli
lcall
cmp
xchg
sub
mov
data16
jl
arpl
and
jae
in
pushl
mov
jb
pusha
cs
mov
sub
mov
or
movsb
xchg
pop
push
mov
push
in
push
mov
mov
sbb
in
out
dec
and
or
loope
inc
subl
xchg
lcall
incl
jb
loopne
gs
sbb
popf
mov
hlt
not
jg
jg
adc
pop
add
jmp
or
pop
mull
xchg
inc
incl
mov
mov
push
loopne
inc
in
cmp
add
aad
xor
jg
ljmp
stos
jp
jmp
jp
jne
loop
xchg
or
lods
ds
call
cwtl
daa
mov
sbb
inc
repz
or
pop
xchg
adc
call
jb
jecxz
arpl
outsl
in
cmp
data16
movsl
pop
pop
addr16
std
lcall
int
cltd
shll
fdivl
xor
pop
push
or
decl
addr16
dec
dec
ret
xchg
pop
jge
sub
mov
pop
test
int3
push
call
incl
sahf
push
movsl
mov
loopne
insl
pop
loop
mov
pop
mov
sbb
push
mov
sbb
jne
imul
push
xor
or
out
pusha
loop
mov
xor
jl
xchg
mov
sbb
mov
cmp
jp
pop
pushl
rorb
mov
popa
test
rcr
popf
out
decl
lret
in
add
xchg
loopne
ds
mov
dec
mov
jnp
mov
ss
imul
add
adc
mov
push
stc
jle
mov
xor
sbb
push
sbb
cltd
pop
pop
sub
sub
sbb
jmp
aas
repz
out
cld
incl
lcall
lock
mov
sub
mov
lods
mov
pop
cld
ljmp
sti
mov
popf
jp
aas
dec
sbb
imul
sub
out
jnp
aas
movl
add
loope
and
jns
mov
jo
call
push
pusha
mov
dec
sub
or
lds
fsubr
dec
xlat
dec
xor
cli
fnstsw
pop
or
inc
push
jo
and
fnstsw
jmp
lret
inc
sbb
adc
and
and
repnz
lea
lret
xchg
mov
clc
aad
clc
nop
push
jae
sahf
rorb
dec
cmp
xchg
mov
push
jg
sbb
mov
mov
jnp
std
js
mov
mov
xchg
lea
mov
push
ljmp
push
add
xchg
mov
jle
push
pop
stos
aam
xchg
mov
jmp
adc
dec
sbb
mov
add
es
in
cmp
pop
movsb
fdivrs
decl
inc
je
sub
stc
in
jecxz
int3
cmc
es
je
sbb
sbb
jb
mov
and
adc
clc
popf
movsl
jl
mov
jmp
call
jne
push
inc
sbb
jg
ret
lds
sub
or
xchg
or
jg
mov
mov
sti
inc
push
dec
or
into
cmp
mov
scas
faddl
xor
lcall
cmc
call
push
jne
pushl
add
sbb
cmpsb
aad
jo
jp
fidivrl
in
mov
pop
mov
ds
shlb
push
sub
lcall
xchg
jne
mov
add
mov
bndstx
out
xlat
xor
sbb
arpl
mov
sbbb
pushl
dec
addr16
pop
lahf
xchg
jg
rorl
pop
inc
mov
and
cmp
inc
add
lcall
mov
pop
xchg
mov
rorl
jp
daa
xchg
out
call
pop
push
cli
pop
gs
movsl
movl
mov
mov
fldl
pop
scas
sub
push
in
fcompl
jg
jae
je
jg
lods
or
lahf
bound
out
sahf
or
push
popf
sub
cs
je
pop
aam
or
add
and
ss
rolb
pushl
push
repz
xchg
lret
lea
push
out
test
mov
cmp
call
sub
rcrl
sbbl
dec
sahf
jne
lods
push
out
mov
or
dec
outsb
int3
dec
xor
xchg
pop
out
and
mov
sub
and
out
out
sbb
mov
rorb
mov
rolb
lods
push
aaa
popf
adc
xor
test
ljmp
std
imul
mov
cmp
call
shll
push
out
xchg
cmp
push
insl
pop
adc
in
mov
sbb
pop
dec
and
incl
stos
ljmp
jmp
lcall
mov
mov
lcall
stos
ds
xor
jno
pop
and
pop
cmpsl
in
push
mov
enter
sub
jge
pusha
mov
sbb
sarl
push
into
add
imul
inc
push
nop
inc
cmp
xchg
repz
add
cmp
rcrl
push
lcall
and
jnp
addr16
adc
clc
sub
hlt
cmp
fimull
xchg
adc
call
cmp
pop
mov
inc
dec
jmp
xchg
or
cmp
jnp
cmp
addr16
cld
xchg
divps
iret
popf
call
jb
and
cmc
sbb
std
and
lods
push
cli
lcall
sbb
cmp
sti
fidivrs
mov
jae
pushf
adc
jg
lcall
dec
cmp
sahf
ret
stc
stos
fadd
dec
jg
mov
jnp
dec
xchg
adc
iret
push
in
xor
jg
add
cmp
and
aaa
mov
ss
cmp
shl
and
orl
decl
push
je
jb
dec
hlt
mov
lods
pop
ret
inc
xchg
cmpsl
std
pop
xchg
in
pop
shrl
pop
push
mov
mov
lds
dec
lds
push
xchg
xor
mov
aaa
mov
mov
mov
xchg
icebp
lret
shr
cmc
jg
sbb
shr
adc
stos
cld
mov
xlat
ror
call
and
rorb
cmp
stos
jne
jecxz
mov
mov
decl
fwait
icebp
mov
std
sub
fld
lcall
pop
mov
or
lcall
sahf
or
fistpl
push
arpl
rcrl
xor
daa
cld
push
mov
sub
ljmp
out
rolb
sub
inc
rclb
mov
insb
sbb
cmp
mov
ret
decl
xor
stos
add
pusha
mov
outsl
mov
ljmp
mov
jecxz
fcompl
shll
or
ljmp
cmc
test
shlb
adc
xchg
outsb
mov
loopne
jmp
mov
sahf
aam
mov
repz
stos
pop
add
clc
cmp
je
or
and
ljmp
test
clc
cmp
or
xor
push
sub
lds
sub
out
sarl
dec
jmp
iret
xchg
fsubs
int3
push
mov
mov
and
push
pop
sahf
xchg
clc
test
sbbb
cmp
aaa
cli
mov
fidivrs
bound
outsb
jb
xchg
mov
jmp
test
sbb
in
pop
mov
movsl
lahf
dec
mov
pop
ljmp
icebp
outsl
xor
out
push
xchg
aam
xor
dec
xchg
out
add
nop
call
cmp
aaa
loope,pn
iret
test
jno
pop
nop
cmpsl
mov
decl
adc
aad
mov
ds
xchg
and
lcall
lds
or
cmp
mov
hlt
add
jg
push
ljmp
or
ret
hlt
lahf
jae
in
adc
xchg
fisttpl
les
lea
scas
inc
or
lret
sar
inc
std
pop
test
xchg
hlt
xor
in
arpl
enter
ficoms
jmp
mov
or
stos
push
pop
mov
call
fcompl
push
pop
jae
mov
outsl
pop
test
xchg
in
mov
incl
or
mov
cltd
repnz
aam
mov
incl
in
add
or
int
mov
lock
ljmp
mov
pop
arpl
or
stos
mov
push
fidivrs
ljmp
mull
lods
je
loopne
incl
pop
cmp
push
mov
jp
jmp
flds
mov
out
repz
decl
sub
sti
aam
and
ret
jle
mov
ljmp
xor
std
test
into
mov
in
cwtl
sub
jmp
mov
shll
sti
out
pop
push
dec
movsl
incl
pop
scas
dec
cmp
outsl
icebp
lcall
wbinvd
arpl
add
ffree
nop
imul
sbbb
decl
in
sub
test
mov
stos
ds
mov
dec
dec
lock
jmp
jbe
fs
test
fistpll
pop
jl
mov
aas
lret
mov
push
xchg
test
stos
rclb
sahf
iret
mov
pop
push
jmp
jecxz
subb
pop
lea
jg
mov
or
adc
and
sti
mov
lds
dec
add
mov
pop
sub
pop
push
cltd
aaa
popa
dec
dec
ljmp
or
enter
pop
or
in
fisubs
std
mov
and
int3
cmp
pop
sub
das
xor
mov
mov
adc
sti
stc
in
mov
dec
jns
out
addr16
sbb
cli
imul
sbb
mov
push
decl
cld
das
fs
jnp
out
mov
xchg
dec
lds
jns
mov
pop
leave
xor
call
mov
shlb
mov
bound
notl
incl
mov
adc
pushf
mov
inc
sbb
incl
xchg
cmp
ja
mov
inc
sbb
dec
out
lods
cmp
or
pop
pop
in
ret
out
inc
incl
cmp
sbb
jge
jns
in
inc
insl
movsl
insb
jnp
das
cmc
pop
cld
inc
or
xchg
mov
aas
or
sub
inc
xor
call
xchg
pop
xor
in
or
pop
movsl
popf
into
cwtl
insb
fsts
das
mov
lcall
icebp
adc
push
loope
sbb
nop
sub
in
push
xchg
stos
xchg
sub
cwtl
dec
cmpsb
jg
mov
leave
imul
sahf
push
rcl
jg
xor
jge
mov
push
mov
fiadds
cld
mov
out
fs
sbb
enter
cli
sbb
cmp
pushl
clc
ljmp
repnz
sub
cmc
xchg
popa
ret
or
mov
push
sub
jmp
popf
and
sarb
add
cs
pushf
push
and
xchg
adc
jle
push
inc
int3
jg
call
pop
cwtl
adc
cmc
lcall
pop
cmc
dec
mov
dec
jge
add
stc
repnz
xor
iret
xchg
pushf
in
push
test
fistpl
cmp
icebp
cmp
sbb
pop
sti
jp
sub
ljmp
lock
daa
mov
sete
pop
sti
jl
ljmp
ljmp
sub
loope
sub
mov
xor
lcall
cmp
repnz
stos
or
jo
xchg
ficoml
call
or
pop
dec
incl
add
mov
orl
pop
fdivl
jmp
fisttpl
ja
jmp
push
adc
and
cmc
stos
test
into
js
arpl
lods
mov
pop
js
hlt
fwait
and
ds
das
pop
dec
jge
hlt
fadds
cmp
movsb
lret
in
push
notl
rcrb
jg
pop
dec
cmpsb
adc
inc
mov
sub
mov
mov
mov
add
clc
testl
sbb
es
cli
fimull
xchg
adc
popa
adc
dec
scas
xlat
sub
loop
push
stos
xchg
clc
mov
mov
inc
sbb
lret
mov
inc
jp
enter
jmp
incl
sbb
bound
mov
les
sub
mov
sbb
fbld
std
call
add
and
xorb
xor
arpl
dec
mov
jg
ljmp
lret
xchg
xchg
xlat
xchg
or
shll
mov
imul
jg
icebp
lahf
pop
arpl
repz
add
clc
push
mov
jg
add
filds
xchg
fdivrp
daa
add
jbe
cmp
jmp
rorb
xor
cmc
xchg
neg
sub
hlt
imull
test
mov
inc
mov
loope
insb
insl
test
xchg
xor
movntq
insb
pop
xchg
jg
mov
and
jge
add
push
sub
mov
sub
es
movsl
xor
mov
and
push
mov
push
lock
ljmp
jecxz
push
outsb
jmp
push
cmp
jmp
sbb
idivb
ja
pop
mov
and
hlt
jmp
sahf
scas
or
ljmp
clc
mov
push
adc
mov
cs
ljmp
inc
jae
or
inc
mov
dec
and
fistl
cmp
jns
hlt
mov
repnz
sub
adc
das
cs
cmp
jle
adc
lock
sub
out
imul
pavgb
imulb
aaa
lock
lods
cld
ljmp
sti
loop
pop
stos
push
out
das
and
pop
dec
jge
xchg
mov
xchg
xor
dec
inc
add
sub
jno
mov
loop
out
icebp
aam
inc
lahf
inc
push
cmp
xor
jmp
loope
sbb
add
sar
xchg
dec
mov
into
outsl
fistl
dec
gs
imul
mov
xchg
and
test
mov
lcall
js
adcl
mov
inc
mov
insb
repnz
xor
mov
adc
xchg
mov
sbb
pop
call
pop
leave
xchg
loop
loopne
mov
sub
jg
nop
jbe
jno
js
xorb
adc
popf
sbb
incl
xor
cli
push
into
cmp
loop
jp
sbb
xchg
sub
adc
bt
jg
dec
shlb
and
outsb
jecxz
mov
je
insb
stc
test
pushl
add
sub
cld
sti
sbb
add
test
incb
sbb
jmp
and
dec
lods
dec
rorl
jnp
lock
pushl
adc
xchg
jb
sub
push
xchg
ret
mov
js
and
or
jo
outsl
pop
push
cwtl
pop
fnstsw
cmp
inc
jnp
arpl
mov
mov
add
pop
jnp
loopne
int
cmp
imul
decl
mov
xor
mov
lods
lahf
inc
lret
xor
dec
cmp
loope
dec
sub
hlt
lcall
xchg
push
stos
mov
mov
jge
mov
add
mov
push
push
xorb
jae
sbb
in
in
xchg
mov
dec
adc
idiv
xchg
clc
jmp
cli
aad
xor
repnz
adc
mov
push
loopne
ret
pushl
lea
loopne
jl
push
jae
cmp
insl
int
mov
ss
filds
cmp
icebp
mov
sbb
das
fstps
stos
popa
fcomps
xor
jg
pop
inc
es
adc
cmc
bound
xchg
add
jb
cmp
pushl
add
mov
ret
pop
sbb
xor
push
jp
add
inc
xor
and
sbb
incl
enter
scas
fcmove
push
ret
js
xchg
push
cwtl
out
sub
sbb
lcall
scas
idivb
stos
rol
adc
jo
cmp
inc
inc
jge
xor
insb
add
or
inc
mov
lcall
clc
pop
int
mov
push
loope
inc
fucom
lcall
mov
cli
add
sbb
pop
xor
jle
cld
adc
mov
add
out
fisubrs
pusha
dec
call
push
push
dec
add
pop
lock
add
cs
push
lock
pop
jle
cmp
jg
ljmp
mov
popa
xchg
pop
mov
outsl
lods
int
shll
rcr
add
stos
mov
inc
das
lcall
mov
and
arpl
iret
push
jp
scas
cmp
mov
mov
or
push
push
jge
adc
jecxz
push
push
jne
bound
pop
lret
loopne
movsl
sub
lret
fucomip
xchg
icebp
stos
jae
insl
in
sub
xor
es
mov
xchg
lcall
sub
cmp
inc
ss
mov
dec
push
cs
arpl
pushf
mov
inc
mov
mov
mov
mov
jg
mov
fcoms
jb
inc
sbb
stos
cmp
sub
lcall
add
add
notb
xor
lcall
xchg
or
aaa
aam
insl
std
je
lcall
mov
fcmove
push
pushf
out
ljmp
jl
out
movsl
adc
lahf
rcrl
cmpsl
stos
repnz
lcall
and
push
popa
aaa
cltd
sub
movsl
leave
popf
adc
pop
adcl
adc
popa
lret
outsl
fdivs
jg
and
inc
push
mov
imul
dec
addb
pop
fsub
sbb
mov
mov
idivl
add
push
xchg
adc
movsl
mov
fistps
inc
aaa
push
push
xchg
jae
test
scas
idiv
pushl
cli
stos
lock
imul
dec
test
xor
xchg
cmp
jb
push
cmc
addr16
jns
lcall
and
dec
iretw
popf
addl
push
pusha
or
lret
nop
mov
jmp
mov
dec
mov
iret
mulb
mov
out
dec
std
pushl
pop
mov
into
adc
push
loop
rorl
clc
movsl
pop
sub
fstps
stos
inc
mov
pushl
sbb
jg
cs
push
xchg
push
mov
sar
lcall
pop
sarl
xchg
push
loopne
call
add
mov
sbb
adc
adcb
lcall
cmp
cmpsl
daa
add
cmpl
or
mov
lret
lock
enter
incl
mov
push
xchg
pusha
int
out
inc
push
daa
aaa
adc
inc
cld
mov
xor
andb
inc
jmp
xchg
cmp
add
cld
andb
into
jae
mov
pushf
mov
call
sbb
sub
aaa
mov
ljmp
test
iret
pop
test
lcall
je
cmp
sarl
lcall
sahf
pop
inc
lret
jecxz
ljmp
lock
and
leave
mov
repnz
dec
pop
cmp
imul
fwait
loopne
jae
out
pop
gs
xor
pop
xchg
icebp
scas
sbb
mov
ror
jp
cli
inc
movsl
xchg
fsubl
fs
xchg
out
clc
mov
inc
dec
jb
pushaw
andl
sbb
in
xchg
fwait
sub
and
fdivrp
push
dec
dec
inc
shl
mov
sub
mov
ljmp
jmp
pusha
ja
mov
inc
insb
shrb
inc
jb
sti
mov
arpl
mov
sarl
fisttpll
jecxz
or
fs
call
ficompl
mov
cltd
mov
inc
mov
enter
mov
stos
jp
call
insl
xchg
pop
adc
cwtl
fiadds
inc
adc
push
push
repz
in
loopne
mov
jb
sub
aas
das
lock
jns
push
sub
pop
sbb
inc
imul
ret
lods
cmp
jg
jge
scas
das
mov
push
push
idivl
lret
jle
dec
in
cli
lcall
cld
xor
mov
les
jmp
imul
movsl
decl
popa
std
xor
cs
pop
push
pushl
sbb
call
and
daa
mov
cld
call
andb
push
and
xchg
mov
ljmp
jle
dec
in
xorb
xchg
adc
mov
js
std
mov
js
pop
jmp
in
sti
pop
sub
or
aad
xor
call
lret
decl
pop
mov
mov
xchg
popa
cli
out
dec
inc
andl
sbb
jecxz
incl
ja
jmp
pop
jnp
loope
jg
imul
les
add
push
jo
in
sbbl
jmp
pushl
jbe
xlat
xchg
mov
fdivrl
jg
lock
mov
int3
jne
ds
and
inc
sbb
cmp
pop
cli
pushf
negl
cmp
pop
repnz
fldt
push
ljmp
xchg
pop
je
shrl
insb
mov
dec
dec
and
add
fcompl
loope
lret
lcall
jns
jb
imul
sti
mov
in
notl
adc
decl
testb
repnz
dec
mov
push
jnp
std
inc
xchg
dec
adc
mov
inc
mov
xchg
insl
imul
orl
xchg
andl
out
sarl
in
aad
call
and
mov
shrl
in
rcrb
and
fwait
dec
aad
rorb
and
ret
loopne
lcall
lcall
test
xor
scas
push
lcall
out
popa
mov
icebp
cmp
int
xchg
inc
lods
xor
cmc
ja
and
ljmp
jmp
inc
hlt
lods
jno
inc
jge
ret
insb
mov
mov
mov
das
fmul
nop
fimull
clc
push
jmp
in
mov
out
outsl
cmc
fbld
mov
sbb
fstl
mov
int3
adc
adc
call
dec
cli
nop
sarl
push
daa
jb
mov
outsl
cmc
xchg
mov
fxch
fcmovne
add
shrl
mov
aas
loopne
test
ret
jmp
and
nop
xor
fsubrs
mov
stc
push
nop
mov
mov
rcl
pop
jb
idivl
ret
sub
xchg
cli
jl
xchg
jg
test
sahf
sub
pop
call
jbe
incl
outsl
jecxz
jnp
xchg
xor
push
movsl
and
jne
in
in
xor
into
mov
adc
mov
ret
shl
dec
inc
jnp
mov
stos
lcall
sub
push
mov
ja
mov
pop
sbb
inc
out
pop
call
dec
fwait
jbe
mov
xchg
push
push
movsl
ljmp
lcall
mov
fimull
add
mov
sbb
inc
rcr
rclb
ret
shl
mov
scas
dec
into
dec
xchg
loope
pop
and
iret
lock
aas
test
ret
cli
cmp
ljmp
mov
sar
push
push
je
pushf
scas
mov
cmpsl
repz
xchg
xlat
fcomi
sub
jmp
mulb
inc
push
jmp
xchg
aam
push
loopne
mov
clc
sbb
imul
mov
xchg
jbe
ljmp
das
pop
cmpb
inc
cmp
pushf
pop
xor
xlat
push
ljmp
inc
lret
dec
fildll
adc
addr16
or
dec
xchg
cmp
cs
cwtl
rclb
hlt
movsl
fdiv
bound
mov
jmp
and
in
adc
es
hlt
xor
jg
dec
sub
ljmp
inc
lret
push
test
pop
xlat
pop
sub
mov
pop
out
pop
int3
shll
sbb
in
loope
pushl
cmp
or
mov
or
bound
pop
pop
push
mov
mov
add
lods
inc
xorb
sbb
incl
scas
mov
push
hlt
jne
pop
jb
outsb
sahf
mov
addr16
fsts
sarb
test
int
push
insl
cli
test
push
inc
dec
inc
hlt
jns
push
loop
stos
or
jecxz
stc
inc
push
aas
daa
addb
sub
loope
cmp
clc
sarl
cmp
enter
lods
mov
sbb
stc
int3
dec
lcall
js
stc
mov
cmp
dec
xchg
add
imul
inc
xchg
ds
xor
jnp
fcomps
insl
add
outsl
inc
lods
loop
out
aaa
pop
jb
scas
ret
movsl
xor
test
push
imul
add
leave
call
popf
int3
push
inc
mov
pop
in
lock
xchg
xor
mov
aaa
xchg
iret
xor
sub
lcall
inc
jmp
add
mov
jl
call
mov
incl
mov
xor
lods
ret
jecxz
test
fiadds
sbb
pusha
mov
test
jg
mulb
jne
fdivrl
pop
dec
ficompl
in
mov
and
sbb
jnp
in
call
lcall
mov
je
fmuls
add
mov
sbb
rorb
lcall
arpl
mov
xlat
test
pop
inc
cmpsb
dec
mov
jmp
jg
xor
add
xchg
sbb
stc
movsl
or
cli
pop
or
jle
call
aad
ljmp
add
clc
jmp
or
pop
dec
icebp
pushf
fnsave
jo
dec
popf
xchg
aas
xchg
mov
ds
add
jbe
iret
ljmp
cs
call
mov
test
rclb
pop
loop
out
push
jb
and
fwait
adc
xchg
pushl
pusha
mov
sub
outsb
in
pop
ss
jge
inc
insl
push
jns
dec
mov
inc
mov
jg
mov
add
test
and
jle
adc
in
jnp
js
aaa
push
xlat
fdivs
push
inc
lcall
and
popf
ja
inc
and
inc
mov
cli
sub
adc
out
rolb
mov
out
icebp
cld
push
xchg
fdivl
addr16
mov
mov
sar
ljmp
int3
jb
clc
dec
mov
sub
sahf
bound
insb
or
inc
scas
lcall
jmp
or
push
push
sub
add
stos
popa
aam
cltd
dec
mov
cmpsb
ret
mov
inc
and
mov
js
or
decl
inc
daa
insb
mov
cmp
sbb
out
pop
jne
pushf
into
pop
mov
fwait
jg
jg
lea
gs
insb
shlb
inc
decb
fists
xchg
push
movsl
mov
mov
dec
lock
xchg
jne
and
and
in
int
sti
pop
decl
aam
in
lods
loope
cmp
filds
inc
fstps
lods
jg
aas
pop
fstpt
pop
mov
enter
inc
sti
xor
jg
mov
inc
pop
jg
push
cmpsb
pop
aam
sub
ficoml
jl
xchg
arpl
mov
jg
incl
inc
cmp
and
xchg
xlat
iret
orb
push
xor
push
sbb
scas
mov
mov
lds
dec
xor
sub
adc
test
cmpsb
ja
lods
xchg
cli
call
or
jp
and
ljmp
xchg
ljmp
mov
and
push
lods
in
jmp
call
filds
into
ljmp
xor
lret
add
test
enter
imul
xor
or
pop
pop
cli
incl
cmpsb
jno
bswap
data16
les
cmpsb
lods
adc
cmp
into
xchg
movsb
insl
ds
in
cmp
das
pop
push
push
mov
incl
lahf
add
xchg
inc
mov
jecxz
stos
pusha
and
daa
mov
and
lcall
pushf
nop
xchg
mov
push
jmp
xor
and
out
adc
cmp
jmp
xlat
pop
and
sbb
mov
negb
arpl
in
jno
fld
test
sarl
cmp
fs
push
test
lea
mov
pop
lcall
popf
mov
mov
jecxz
leave
jg
sbb
or
rolb
jecxz
dec
mov
int
call
pop
js
je
mov
movl
scas
pmaxsw
mov
test
lcall
insl
pop
push
loop
xchg
push
mov
or
cmp
pop
test
pop
loopne
sub
jp
push
xchg
mov
jecxz
roll
icebp
adcl
pushf
cmp
sub
jmp
mov
adc
mov
rclw
out
mov
ret
jbe
hlt
call
jg
into
dec
mov
dec
add
or
mov
shrl
popf
add
mov
jno
mov
jecxz
cli
xchg
popf
jo
pop
call
xor
shl
adc
ret
sub
es
adcl
loop
jmp
sub
sti
stos
test
pushl
sub
sub
shlb
push
addr16
push
test
and
dec
ljmp
call
out
lods
or
pop
xor
bt
dec
jno
xor
js
ljmp
pop
sub
fmuls
pop
imul
cmp
mov
cmc
loopne
cld
push
mov
xor
cmp
dec
inc
ret
das
lock
stos
inc
test
push
dec
xor
cld
push
mov
push
scas
push
mov
mov
lock
or
sub
cmp
lret
cmpsb
cld
fwait
lcall
cmpsl
lret
xor
sub
repz
sbb
xchg
xchg
icebp
or
jg
sub
in
jno
aad
scas
mov
dec
mov
mov
dec
jecxz
iret
inc
pop
inc
fdiv
jl
aas
icebp
shlb
ljmp
jo
dec
pushl
add
stos
sub
ds
push
add
aaa
inc
dec
decl
sti
mov
fsub
loopne
sub
push
pop
mov
mov
cmp
cmpsb
sbb
test
dec
bound
jle
daa
xor
xchg
adc
and
insb
dec
fimuls
adc
ljmp
lock
jmp
xchg
cmp
mov
mov
ret
divb
popa
mov
sbbl
and
cmpsb
imul
cmp
cmp
mov
in
pop
cmp
daa
aaa
fsubp
mov
sbbl
lods
shll
or
jno
dec
ljmp
mov
xchg
push
add
pop
push
inc
xchg
mov
mov
sub
push
gs
lea
ffree
adc
adcb
incl
into
inc
pop
lret
scas
cmp
loopne
test
dec
xor
mov
adc
dec
leave
decl
or
ret
ret
fildll
das
ret
push
stos
adc
cmpsl
xor
inc
add
je
in
jl
jbe
sahf
mov
repz
leave
cmp
adc
movsb
jns
decl
fiadds
cmpsl
aad
cmpsb
popf
xor
add
xchg
lahf
pop
fimull
push
mov
pop
clc
enter
or
dec
iret
daa
mov
test
das
lock
sub
or
divb
push
shrl
jmp
pushl
shlb
or
outsb
and
push
jb
jg
dec
in
cs
dec
dec
xchg
sub
mov
mov
sub
dec
lea
decl
icebp
aad
mov
fs
gs
sbb
pushf
or
inc
int3
int3
mov
lcall
dec
jle
neg
pop
scas
push
cmp
xor
rcll
pop
add
stos
mov
dec
std
push
sub
push
popf
add
cmp
sbb
shrl
mov
pop
cmp
sbb
pushf
sarb
decl
mov
jo
in
mov
pop
pop
dec
dec
aaa
mov
aam
dec
lock
incl
popa
jb
push
cs
inc
std
repz
push
in
lea
push
aad
inc
add
sbb
jecxz
outsl
jns
rol
hlt
cmp
xchg
cld
fisubs
or
pop
loopne
xchg
loope
add
test
cwtl
movsl
jmp
sbb
incl
stos
adc
in
fs
mov
mov
mov
mov
repz
lcall
cmc
mov
rcrl
jg
xor
or
cli
pop
jg
lret
out
shll
mov
sti
roll
inc
mov
test
rol
in
dec
sti
std
cld
imul
or
jl
mov
aam
lock
xor
lcall
enter
test
jmp
cmpsb
and
cmp
subl
test
xchg
lods
xor
into
cmp
jmp
mov
xchg
push
movsb
add
fisttpl
jns
mov
mov
xchg
test
sbb
adc
not
mov
loopne
xchg
jmp
imul
enter
jb
pop
out
pop
or
je
inc
or
mov
pop
das
dec
pushl
cmc
sbb
ror
mov
shlb
push
cmp
test
fwait
sub
decl
std
into
mov
push
pop
cmp
mov
pop
stos
push
mov
lcall
ljmp
loopne
fwait
adc
xor
jb
int
cld
cmp
repnz
and
cmpsb
lcall
xorb
jp
jo
incl
aaa
jno
or
bound
gs
fs
mov
lock
cmp
das
hlt
dec
cld
stos
fsubrs
dec
mov
mov
xor
pop
dec
adc
push
pop
jmp
pop
cmp
push
pushf
aad
je
push
ds
loope
cli
jmp
adc
sti
mov
imul
mov
fistpl
shlb
shll
adc
or
int3
and
inc
inc
insb
add
jae
lods
test
clc
mov
stc
jp
push
ljmp
mov
mov
mov
int3
pop
inc
or
lret
xor
mov
decl
test
aam
sub
dec
popf
xor
negb
jmp
cld
dec
or
cmp
test
outsb
fdivr
push
mov
pushl
fisubl
test
das
mov
enter
int3
cmp
test
push
cmp
aaa
cli
rcll
sub
adc
out
inc
fwait
out
ja
add
jge
fadds
daa
pop
cwtl
pusha
xchg
sub
xor
scas
test
enter
inc
mov
jmp
test
push
xchg
sbb
fldl
xlat
adc
push
ljmp
aas
mov
shlb
inc
test
sub
mov
iret
jge
sub
lock
pop
pop
cmp
or
jo
fildll
nop
cmp
ja
fdivr
jg
mov
sbb
add
movsl
loopne
xchg
adc
jg
bound
loop
ljmp
push
jl
mov
test
dec
xor
xchg
incl
popa
or
in
sbb
or
xor
sub
loope
and
cmp
in
cmpsb
jmp
stos
out
mov
das
cld
inc
and
push
xor
ja
insb
jmp
icebp
lods
mov
xchg
inc
lret
test
mov
call
call
inc
arpl
xchg
push
xlat
jp
pop
mov
test
popf
push
mov
loope
dec
ljmp
inc
cwtl
xchg
jbe
add
fucompp
jg
add
cs
mov
mov
cltd
add
movsb
mov
lods
cmc
rcl
mov
mov
push
inc
and
inc
sub
jecxz
stos
in
pop
lea
std
call
mov
mov
hlt
and
push
xlat
mov
mov
ljmp
sub
movsl
insl
es
jle
insl
out
cld
jp
jp
jg
jge
scas
xor
pop
and
push
in
mov
leave
add
lods
pop
mov
loop
push
ret
ljmp
into
aas
cmp
or
jecxz
loop
jbe
shrb
sub
pop
xchg
cmpsb
data16
push
add
fdivrp
shll
cmp
jp
dec
test
aad
in
decl
cmpl
push
xor
enter
mov
xchg
push
fisttpll
sti
or
call
adc
cli
int
xor
icebp
lods
dec
nop
imul
lock
aad
inc
jns
cmp
icebp
icebp
loop
js
pop
mov
pop
cli
mov
aad
test
mull
ret
or
mov
fldt
sub
or
cld
push
aas
adc
mov
stos
icebp
or
add
sub
push
pushl
out
ja
fcomi
lcall
inc
dec
aam
cli
ficoml
dec
stos
jle
outsl
push
negl
fldt
stos
loopne
xchg
jns
adc
push
push
into
iret
js
sar
fcomip
hlt
sub
outsl
repz
mov
jecxz
mov
lea
dec
daa
addl
out
mov
filds
mov
imul
cmp
lret
adc
and
das
cmc
sbb
repnz
test
jno
sub
imul
or
incl
pop
pop
xor
stc
add
lahf
icebp
jg
insb
mov
rcrb
lods
mov
jne
std
insb
cmc
ret
ja
jb
mov
mov
outsl
ret
lret
outsb
mov
je
dec
pop
outsl
push
cmc
sub
sbb
add
pop
loopne
incl
inc
fldt
and
push
xor
sbb
outsb
push
push
jmp
jge
cmc
xor
mov
les
add
sbb
jecxz
jnp
pushl
xchg
mov
mov
dec
sub
cmpsl
mov
cmpsl
and
xchg
mov
cmp
loop
mov
sbb
ficomps
clc
pop
shrb
ffree
aas
nop
arpl
mov
test
fs
decl
or
sub
pop
movsl
sahf
ljmp
les
mov
cld
xchg
pop
popf
arpl
xchg
pop
js
fld
cli
ljmp
mov
dec
sbb
pop
sub
push
xor
cld
sbb
xchg
mov
pop
insb
add
fnstcw
lock
jmp
lock
xor
pusha
xor
test
cmp
adc
cwtl
sub
imul
cwtl
fs
aad
cltd
out
pop
push
das
hlt
das
rorl
and
sub
shll
movsl
jg
incb
pop
inc
cld
testb
sub
loopne
push
sub
lea
mov
addb
and
push
mov
jmp
out
xor
pop
cld
shll
and
or
lods
in
sbbb
ljmp
pop
ds
scas
pop
imul
cmp
mov
sbb
sar
decl
jb
pushf
xchg
out
das
cltd
jecxz
or
cmpl
sub
or
pop
cld
xor
mov
jae
mov
mov
cli
xor
inc
mov
jecxz,pn
pop
dec
adc
lods
mov
jb
or
dec
cld
add
lcall
adc
push
mov
pop
jb
push
mov
push
loopne
pusha
push
xchg
mov
inc
in
pop
test
or
decl
stos
xor
dec
and
pop
cmp
mov
test
inc
xchg
dec
pop
fimull
ljmp
bound
cld
xchg
call
mov
xchg
mov
cmp
fimuls
mov
incl
std
sbb
rclb
aas
adc
out
std
mov
mov
std
aam
lcall
test
pop
fidivrl
or
push
mov
sub
inc
adc
dec
cld
out
test
mov
roll
dec
aad
daa
sbb
out
fmuls
jle
or
in
xchg
nop
mov
push
shlb
inc
sar
cld
adc
pushl
imul
sub
inc
dec
add
lahf
dec
jge
and
in
dec
incl
rolb
jno
mov
mov
cmp
incl
adc
lods
data16
jnp
mov
imul
stos
xchg
imul
jbe
test
and
xchg
xchg
mov
push
mov
sti
dec
jg
or
rolb
adc
sarl
cmp
cli
jg
call
negb
inc
loopne
add
sti
jns
cmpsb
push
sbb
sbb
pushl
add
push
add
pop
aam
sub
iretw
mov
dec
jp
mov
mov
shll
ret
leave
lock
mov
inc
lods
ficompl
cmpsb
jmp
xchg
enter
sahf
pop
cld
jmp
sub
rcl
les
je
int
xchg
sub
mov
mov
incl
decl
addr16
dec
xchg
pop
pop
add
loop
pushf
icebp
jmp
cmp
insl
adcb
insb
call
xor
sub
insb
mov
push
and
cli
fstl
xchg
sub
rcll
out
ret
inc
jmp
add
andb
cmp
ds
cmpsl
add
add
pushf
fisubrs
lcall
aam
jae
out
das
sbb
xchg
cs
gs
repz
mov
into
repnz
adc
sub
mov
imul
xor
mov
and
call
shrb
mov
fs
xor
jmp
xor
jge
pop
call
jmp
mov
sbb
push
push
ret
push
loop
fucomip
lea
pop
jl,pn
push
jp
pop
or
aam
scas
movsl
andb
decl
loop
lea
in
push
push
mov
das
mov
mov
test
lret
inc
dec
cli
ss
cld
ret
mov
dec
cld
das
cld
nop
sub
mov
scas
push
push
jae
sahf
decl
shll
push
push
jo
fs
mov
cmp
cmpsb
out
mov
divb
out
mov
outsl
shr
jne
push
mov
jg
add
lods
mov
add
outsb
imul
incl
out
jnp
int
xor
mov
les
idiv
call
push
ficoml
call
pop
xor
ret
xchg
gs
mov
and
in
mov
push
and
cli
leave
pushl
lcall
in
outsl
xchg
xchg
push
fwait
push
pop
addr16
loopne
inc
jnp
mov
les
mov
lds
pop
popa
jg
mov
loope
xor
xor
inc
jge
cmp
test
decl
addb
mov
stos
xchg
lcall
or
test
add
adc
adc
ficomps
and
push
scas
insl
in
sub
jmp
aad
in
sub
dec
cmpl
dec
test
aaa
pop
test
lods
mov
rorb
jno
push
cmp
cmp
mov
jno
cmp
cmp
ljmp
or
push
insb
mov
jp
ret
ret
pop
in
pop
lcall
sbb
jg
out
xchg
mov
adcb
hlt
stos
in
dec
mov
cmc
jle
lcall
push
outsl
popf
or
movsl
mov
pop
loope
lods
dec
outsl
lea
ss
add
movsl
movsl
sub
adc
add
mov
mov
add
aaa
clc
jmp
aam
mov
push
fistpl
pop
mov
sub
push
and
les
or
xor
jns
pop
jp
adc
insl
icebp
enter
adc
push
inc
dec
inc
jbe
lret
mov
in
decl
or
imul
arpl
sub
push
sti
jbe
mov
ljmp
jns
out
push
les
into
dec
jo
adc
push
cmp
out
adcl
lock
stc
and
negl
insb
mov
dec
fnstenv
loope
xchg
push
pop
jmp
and
cmp
sarb
cmp
inc
lcall
mov
sub
mov
mov
gs
inc
push
cli
call
mov
push
mov
andl
pop
adc
loope
add
push
jge
call
add
add
inc
xor
cltd
pop
xchg
xor
pop
mov
roll
cs
inc
add
leave
dec
dec
cltd
cmp
push
out
pusha
mov
sub
xchg
fwait
ss
lret
and
lret
stos
jae
out
jg
inc
test
daa
pop
push
aam
mov
sarb
and
lods
fucom
pop
jo
push
ror
sub
push
xchg
or
mov
repz
pop
dec
cmc
mov
pop
pop
repnz
je
add
inc
or
insl
push
in
mov
xchg
cmp
lcall
std
xchg
aaa
frstor
hlt
lock
pusha
dec
inc
dec
int
cmp
hlt
mov
cli
fwait
push
push
mov
pop
test
fsts
sbb
lcall
ljmp
xchg
xor
insb
sbb
stos
dec
fisubrl
cli
outsl
icebp
mov
rcl
ss
arpl
adc
stos
mov
mov
ljmp
adc
std
nop
lds
lret
fisttpll
incl
cmp
xor
stos
cmpb
insl
xor
inc
hlt
sbb
test
fidivl
push
shlb
sahf
push
pop
das
leave
call
or
testl
dec
fnsave
sub
adc
lret
xchg
or
cld
mov
push
push
jmp
cmpsb
inc
cwtl
add
jmp
cli
das
cmc
lcall
mov
sbb
shr
pop
ljmp
jg
sbb
pop
es
dec
bound
xor
ljmp
jae
mov
out
mov
outsl
cs
xor
jae
add
incl
out
adc
mov
jne
out
aad
sbb
movl
mov
decl
push
xchg
adc
js
xor
cmp
mov
lcall
ljmp
cmpsl
jb
aad
addr16
fmuls
sub
add
jp
mov
psubw
mov
cld
negl
mov
xor
ret
mov
xchg
iret
add
in
dec
inc
add
jp
mov
ficompl
add
fabs
in
lret
enter
sub
movsl
sbbb
int
dec
je
mov
mov
call
js
decb
aam
cmp
or
popa
jle
ja
in
outsb
adc
ljmp
enter
add
das
cmp
sub
add
mov
add
push
or
shlb
add
jbe
je
dec
push
push
lcall
add
jmp
and
mov
es
cwtl
mov
push
bound
aad
or
icebp
jmp
sub
lea
popf
aas
rcl
push
push
add
jg
jg
sbb
rcll
mov
gs
sbb
stos
pop
pushl
movsl
js
add
imul
mov
popa
mov
rcrl
mov
dec
outsl
scas
daa
mov
test
mov
icebp
lcall
add
insb
push
mov
mov
popa
cltd
lahf
and
ljmp
push
fldenv
xchg
lock
pop
movsb
popf
pop
insb
mov
xchg
add
lahf
pusha
decl
ss
pusha
cmpb
mov
adc
lods
add
jle
mov
sahf
data16
jmp
movsb
aaa
add
movb
fwait
adc
or
sbbl
clc
lcall
aaa
cmp
jecxz
mov
mov
mov
icebp
dec
xchg
and
std
push
mov
jle
inc
pop
cmp
sbb
out
es
inc
fstpt
aas
cmpsl
xchg
mov
mov
inc
nop
add
outsl
cmc
rol
pushf
test
ljmp
pop
push
ds
pop
jno
je
cli
push
mov
fadds
or
decl
add
test
push
cmp
adc
stc
fs
xchg
lods
in
cmp
adc
insl
mov
mov
jp
out
repnz
fbstp
ja
faddl
lods
das
lock
mov
jmp
mov
enter
decl
out
pop
pop
imul
mov
gs
pop
fiadds
out
lahf
int3
add
inc
mov
sbb
in
cli
lods
jge
mov
jmp
out
hlt
out
repnz
outsb
lcall
adc
in
push
test
jmp
sahf
mov
adc
push
cmpsb
cmp
pop
je
pop
mov
add
push
fbld
test
fsubrp
cmc
scas
push
mov
pop
clc
stc
or
sti
in
mov
xchg
adc
mov
leave
call
incl
mov
cld
and
iret
test
lea
sti
cmpl
lcall
fcomi
ja
mov
fldt
jmp
test
jg
lcall
testl
xor
adc
loop
stc
imul
loop
inc
lcall
xor
adc
out
leave
ja
aas
and
lea
push
jns
insl
add
stos
mov
stos
arpl
dec
jmp
mov
add
jne
or
pop
and
fwait
cmpl
imul
or
push
jne
call
mov
je
jne
cmpsb
mov
out
mov
push
sub
inc
add
mov
sub
test
lea
or
mov
int
fnsave
and
or
lock
idivl
loop
in
aaa
roll
ljmp
jne
pop
jle
mov
inc
inc
cmpl
jg
decl
call
mov
xor
aad
mov
pop
popa
sub
jle
pop
sub
jnp
jns
mov
inc
insl
mov
mov
xor
xor
cmp
add
aad
mov
or
xor
xchg
mov
sar
cmp
mov
dec
lods
pop
adc
test
and
mov
lea
pushl
divb
in
mov
xor
lahf
cmp
fistl
or
fyl2xp1
sub
xchg
xchg
stos
add
std
mov
cmpsl
pop
jns
mov
int3
sarb
adc
mov
add
lds
icebp
pop
orb
lock
mov
shrb
cmp
sar
cs
icebp
push
sbb
and
sarb
jl
decl
mov
cmpsb
mov
loopne
jge
xchg
jnp
mov
mov
xor
shll
adc
lea
cmp
mov
repnz
data16
test
xor
adc
aam
das
adc
pop
jb
pop
mov
js
loop
push
cli
pushl
sti
jg
insl
mov
inc
shrl
dec
and
imul
mov
push
clc
in
scas
les
mov
test
loope
pop
mul
sbb
pushl
pop
fadd
scas
orl
mov
mov
or
rorl
push
fidivl
adc
pop
rcrb
pop
in
pmaxub
test
or
aam
lahf
js
ljmp
clc
call
push
frndint
cmp
shll
ljmp
sbb
jmp
out
pop
mov
in
scas
scas
mov
pop
clc
fimuls
jle
negb
mov
stos
mov
cld
dec
sub
shll
mov
sbb
lock
adc
inc
xor
pop
sti
and
andb
lret
xor
or
incl
xchg
ja
and
test
dec
sbb
pop
test
out
call
bound
insb
dec
mov
sub
push
incl
cmpsl
cmp
mov
sbb
test
adc
pushl
stos
cmp
sub
push
icebp
cmc
aaa
mov
dec
inc
push
jno
mov
call
aaa
rcrb
dec
jl
ljmp
decl
pushf
test
das
cld
push
and
jb
adcl
ss
scas
pop
mov
add
dec
cmp
cmp
jmp
inc
loope
mov
mov
inc
inc
in
sahf
mov
decl
ret
mov
sbb
mov
xchg
insb
pop
and
push
pop
sbbl
push
das
cld
in
mov
or
jecxz
cltd
insb
xchg
clc
sub
mov
fistpll
inc
push
out
dec
xlat
dec
std
call
mov
addr16
add
dec
adc
cmpsl
cmp
fiadds
std
decl
addr16
insl
sbb
mov
fsubrs
jge
rorb
cmp
xor
mov
aam
mov
push
jo
loopne
loope
jl
mov
pop
std
jmp
dec
fs
xor
sahf
mov
mov
repz
hlt
jle
inc
jne
push
dec
fcomps
icebp
mov
sub
inc
add
decl
insb
mov
jmp
xchg
sbb
adc
inc
push
addr16
idiv
pop
test
in
popl
mov
iret
push
icebp
xchg
sub
push
fidivrs
mov
fisttps
clc
push
adc
addb
test
jg
push
or
dec
xchg
jns
rclb
mov
xor
cmp
out
jae
cmp
incl
xor
mov
adc
mov
test
cli
inc
lea
incl
int3
mov
cmp
stc
pop
out
dec
mov
sahf
cmp
mov
das
inc
cmc
clc
decl
sbb
inc
sbb
mov
adcb
iret
jg
pushl
pop
pop
sbb
cmp
pop
aam
inc
and
or
cmp
jg
in
jne
outsb
ret
in
fisubrs
fbstp
fstpl
test
add
push
pop
push
pusha
shll
pushl
cmpxchg
add
cmp
inc
sub
outsl
pushl
das
ds
or
or
rcll
lcall
ljmp
add
adc
pop
push
jp
fcomps
push
jmp
cli
lret
sahf
fidivl
mov
test
mov
mov
hlt
add
cli
ja
adc
sub
jp
fnstcw
insb
pop
push
jbe
das
adc
or
testl
cmpsb
push
pop
jp
and
push
lcall
std
inc
ret
inc
xor
clc
inc
cmpsb
add
mov
or
test
push
enter
push
stos
mov
ret
idivb
ja
xor
mov
or
xchg
mov
mov
jg
mov
push
out
lea
jmp
in
inc
mov
xor
xlat
mov
movaps
mov
add
jmp
test
push
and
mov
popf
stc
out
daa
jb
test
movsl
mov
fbld
fsts
xchg
rcrb
fnsave
hlt
cmp
movsb
cmp
xlat
repnz
xor
inc
and
fucomip
call
sub
xchg
pop
aas
jle
cli
rcrl
sub
cmp
ret
mov
ret
rep
mov
mov
cmpsb
mov
sub
pop
call
mov
and
js
out
aas
mov
cli
decl
push
xor
ss
cmp
inc
push
push
jmp
and
and
cld
sub
xor
mov
xor
movsb
cltd
pop
loopne
call
outsb
pop
and
and
xor
jmp
loopne
cmp
inc
push
in
cmpsb
clc
movsl
fistps
adc
cmp
mov
ds
call
dec
xchg
mov
add
fsubrs
sbb
xor
xchg
into
pop
jl
mov
cli
jmp
inc
mov
mov
std
inc
loope
lds
pop
test
call
outsl
jle
jb
and
push
xchg
aaa
divb
add
inc
mov
es
cmp
in
sub
lcall
fldenv
xchg
out
mov
rcrb
mov
sbb
cmp
xchg
jbe
scas
push
sahf
pop
jbe
mov
push
push
jo
cmc
icebp
div
and
sahf
push
xchg
adc
push
or
mov
enter
mov
icebp
push
add
orb
mov
cli
jo
icebp
or
test
in
pop
dec
xchg
lcall
rol
lea
repnz
iret
jbe
clc
pop
sub
loope
cmpsb
cwtl
jg
incl
rcl
rcll
pop
or
les
pop
out
cwtl
lcall
jp
dec
mov
out
rcrl
jecxz
mov
ljmp
sbb
addr16
lret
pusha
pop
xchg
rorl
add
pop
add
ljmp
xchg
out
daa
push
lods
adc
sbbb
cs
aam
insl
int3
aad
ljmp
hlt
mov
push
sub
out
out
inc
sub
rclb
ss
jmp
jg
lcall
aam
aaa
or
dec
addl
mov
iret
jns
ljmp
inc
movsb
mov
enter
daa
rorl
lcall
les
sub
inc
xchg
mov
xchg
xlat
pop
cmp
test
xchg
xchg
aas
pop
ljmp
dec
mov
fwait
rorl
inc
out
push
xor
nop
sub
incl
cli
mov
stos
daa
mov
dec
pop
pop
or
in
incl
mov
imul
inc
aaa
icebp
scas
arpl
xor
aad
incl
lods
outsb
and
jl
in
sbb
jmp
push
inc
dec
shl
mov
inc
inc
ds
lahf
inc
rcrl
inc
cmp
pop
mov
mov
sbb
les
test
jl
filds
adc
add
aaa
int
pop
inc
decl
aaa
cmp
mov
dec
mov
call
or
imul
out
mov
popa
test
les
xchg
subl
mov
pop
sub
xor
or
inc
bound
hlt
or
cmc
test
ljmp
imul
xlat
sbb
daa
mov
pop
sub
out
add
inc
ret
cwtl
cmpsl
xor
pop
fldlg2
xor
aaa
loopne
cmp
mov
ljmp
ret
data16
out
mov
inc
imul
cmp
inc
fwait
mov
incl
rcrl
hlt
icebp
mov
aad
or
sbb
jno
leave
and
mov
std
jg
ljmp
dec
sub
push
cmpsl
push
testl
pop
lret
xchg
xchg
xchg
repnz
mov
pop
mov
push
mov
mov
bsf
out
inc
call
inc
sbb
xor
adc
mov
pushl
mov
sub
call
sbb
lahf
mov
sub
xor
mov
decl
clc
cmp
pushf
cmp
gs
add
in
lret
sbbb
pushl
pop
sbb
jl
ds
jae
popf
sub
inc
or
aam
mov
fcos
cmp
xor
fwait
xchg
outsb
sub
jp
out
cmpsb
test
fidivrs
insb
sbb
jmp
js
mov
movsl
lcall
sar
add
movsl
fidivrs
pop
inc
sti
push
fidivrl
and
cli
insb
call
dec
ss
mov
xor
sub
xchg
sar
data16
lods
xchg
nop
mov
jp
sub
stos
ss
or
jo
jb
pop
cwtl
hlt
scas
in
pop
ljmp
icebp
cmp
cmpsl
out
sbb
and
adcl
mov
add
or
lea
push
in
xchg
ja
mov
cmc
push
push
mov
xchg
sub
lds
dec
and
xchg
mov
pop
adc
pushl
cli
arpl
dec
push
xor
cmpl
mov
sub
jecxz
bswap
sbb
decl
lods
xor
fnstenv
pop
test
and
aam
cmpb
sbb
lcall
lret
cld
adc
xor
sub
xchg
es
xlat
push
stos
pop
xor
sub
push
sub
push
xor
nop
in
add
inc
cs
call
push
cmpsb
dec
and
mov
jg
sub
addr16
or
sbb
ja
rcrb
push
jge
sub
pop
call
dec
sarb
sub
xor
push
adc
jl
add
lods
pop
mov
insb
mov
dec
std
cmp
add
add
sbb
xchg
and
jno
cmp
test
inc
mov
xor
mov
push
arpl
aaa
cli
fstpt
mov
xchg
dec
jg
es
pop
test
mov
or
mov
pushf
loop
int
or
xchg
cmpsb
pop
xchg
movsl
std
test
adc
call
inc
imul
ja
ja
repnz
lock
mov
mov
add
or
das
xor
fsubl
xor
ret
mov
movsb
call
add
aas
lret
push
dec
jge
dec
cmp
es
mov
push
sahf
inc
jno
xor
es
xor
decl
cld
repz
sbb
or
push
or
xchg
adc
ficoml
mov
mov
cltd
sub
imul
push
xlat
push
xlat
mov
fstps
sub
test
pop
xchg
inc
inc
movsb
scas
loopne
pop
shlb
lcall
cld
jbe
ficoml
jmp
adc
lea
push
je
sysexit
pushl
popf
inc
adc
push
clc
mov
sub
or
pushl
jbe
movsl
sub
cmp
stc
decl
std
outsl
outsl
fwait
xchg
sarl
mov
movsl
xor
adc
jg
mov
push
in
push
xorb
mov
adc
mov
mov
leave
add
incl
lcall
sub
dec
aam
adc
in
sbb
fcompl
cmpl
xorb
movsl
ljmp
sti
or
int3
fadd
xchg
cld
pop
andl
dec
dec
push
inc
lock
sub
mov
aaa
sbb
push
int3
adc
inc
mov
push
mov
outsl
mov
xor
outsl
icebp
faddp
mov
arpl
jmp
pop
call
cs
mov
mov
cwtl
rolb
and
cmp
cmp
add
mov
inc
shrl
inc
jle
add
lcall
decl
jl
and
xchg
shll
push
jne
mov
fnstcw
jle
cmp
in
lcall
std
lret
sub
out
mov
mov
xor
cli
sti
shrl
das
fisubrl
mov
sbb
sbb
adc
add
cmp
ja
sub
pop
ljmp
push
mov
into
mov
jmp
jnp
adc
imul
sub
add
mov
cmp
push
mov
sbb
stos
pop
pushf
fs
es
or
xchg
push
inc
ret
into
incl
imul
pop
mov
adc
cltd
dec
aam
add
jns
fld
add
cld
inc
dec
shrl
xor
cwtl
sbb
hlt
sub
cmpsl
xchg
sub
ret
jg
mov
test
inc
sti
sbb
sahf
clc
jbe
popf
or
scas
jle
outsl
hlt
jle
adc
mov
mov
dec
sub
add
jo
pushl
push
cs
push
sub
test
add
pop
mov
xor
ret
mov
icebp
sub
popa
cli
aam
push
mov
push
jae
sub
xchg
movsl
jmp
xchg
out
inc
outsl
out
popf
mov
outsl
jae
das
mov
inc
lcall
test
fmuls
gs
mov
or
add
mov
ljmp
mov
leave
ret
pop
popa
xchg
std
stc
lods
test
lret
and
sahf
mov
call
mov
jmp
and
cld
dec
sbb
fists
and
push
jge
push
mov
jp
add
mov
fadd
lcall
adc
scas
push
xorb
lea
test
incl
call
mul
or
xor
pusha
dec
mov
mov
fdivrs
imul
ljmp
xor
lods
outsl
cmp
inc
push
btc
push
mov
icebp
sbb
push
mov
shlb
pop
sbb
movsb
lods
dec
mov
int3
xchg
lods
call
call
or
add
or
bound
mov
jg
cltd
xor
clc
pop
jmp
or
mov
sahf
mov
std
je
cwtl
mov
daa
out
jmp
or
rcll
lds
jo
mov
mov
nop
movsl
ljmp
hlt
mov
xchg
pop
mov
push
outsb
mov
sub
aad
int3
enter
aam
dec
push
xchg
mov
mov
pop
push
jle
mov
add
and
rcrb
cmp
sbb
pop
pop
decl
das
xor
cmp
in
jmp
divl
call
int3
mov
mov
xor
lgs
push
lds
pop
push
cmp
lahf
mov
lea
ljmp
jo
nop
cmp
mov
jmp
cmp
or
and
shl
mov
push
popf
fidivl
out
std
xor
test
xor
les
mov
mov
icebp
dec
cli
fiadds
nop
and
adc
shll
stc
lcall
lcall
ljmp
jmp
jo
mov
fucom
push
push
pop
call
jle
scas
jg
xlat
push
ret
out
xor
nop
mov
and
xor
xchg
jno
pop
faddl
or
daa
inc
push
sbb
hlt
or
mov
adc
jns
xor
pop
sete
rcr
ret
jg
mov
shlb
add
jo
adc
or
sbb
mov
pushl
call
fwait
push
add
call
outsb
leave
popa
addr16
ljmp
aam
dec
fcompl
hlt
xchg
adc
ficoms
fists
mov
dec
loop
or
mov
or
add
mov
movsb
mov
addb
shll
add
adc
add
sub
lcall
mov
inc
xchg
daa
adc
fisubl
lods
jb
ret
and
mov
mov
and
mov
scas
or
outsl
rorl
xor
push
aam
hlt
mov
pushf
ljmp
inc
hlt
xchg
lret
jmp
pop
repnz
mov
jns
jg
cmc
repz
lcall
and
mov
xor
stos
dec
or
daa
bswap
imul
sbb
lds
test
incl
ljmp
mov
adc
xchg
popa
test
fidivrs
test
mov
jmp
adc
or
adc
pop
dec
or
idivb
in
mov
ret
fisttpll
inc
xchg
mov
fdivrl
popl
inc
std
rorl
movsl
sub
jg
adc
inc
sub
xchg
or
xor
and
cmpsl
jge
addw
pusha
mov
outsl
cld
call
cli
and
hlt
shll
outsb
fcomps
movsb
push
push
inc
cmp
std
jmp
fwait
xchg
jg
test
cltd
sub
test
aam
xor
jg
and
dec
cmc
sti
outsl
cli
push
cwtl
lahf
out
aad
dec
mov
cltd
cmp
scas
jbe
pop
aaa
xor
cld
dec
std
and
mov
add
push
ljmp
mov
daa
xor
jns
mov
push
cli
in
and
pop
mov
sub
push
sub
dec
pusha
popa
xlat
lret
cmpsb
xor
sub
decl
lods
jne
lea
sbb
lret
pop
lret
push
mov
mov
pop
jl
cmp
sub
sahf
add
decl
test
cmpsb
mov
lods
mov
dec
sbbl
movsl
jmp
jb
push
jb
fcomps
ret
xchg
gs
aam
lods
cs
faddl
outsl
and
int
dec
pop
ss
xchg
jo
clc
incl
xchg
and
sub
test
jb
pop
sbb
add
sub
pop
popa
dec
adc
loopne
push
aam
mov
test
sbb
add
sti
fs
fisubs
lret
setle
dec
sahf
lret
add
scas
jmp
daa
out
in
jmp
imul
xor
push
adc
mov
pushf
xlat
cmp
test
xor
rcr
push
push
nop
mov
test
xor
and
push
push
scas
cs
jno
in
jnp
xor
cmp
repnz
add
inc
mov
sbb
inc
loop
pop
stc
adc
decl
xchg
int3
xchg
mov
mov
pop
xchg
jge
in
je
test
imul
loope
cmc
rolb
in
dec
pop
cmp
call
inc
add
sarb
sbbl
testb
cld
test
test
cld
lea
call
and
jno
jno
pusha
ss
ljmp
jae
jo
insl
mov
gs
jmp
cltd
rcrl
hlt
repnz
js
and
pushl
push
rol
dec
rcrl
xor
or
fwait
imul
jnp
scas
xor
movsl
decl
stos
call
jne
test
pop
insl
push
mov
clc
call
andl
xchg
xchg
clc
inc
cmp
adc
aam
lods
jmp
mov
sbb
stos
stos
test
mov
in
sahf
and
mov
mov
into
ret
cmp
jmp
adc
ret
jno
mov
xchg
jno
mov
push
mov
push
pop
mov
xor
in
ljmp
cwtl
xor
cmp
add
mov
xor
xchg
stos
outsb
jecxz
into
push
push
rcrb
push
ljmp
les
aam
sbb
ds
daa
or
inc
mov
cmp
dec
adcb
ds
adc
ss
xor
je
xor
lcall
xor
mov
mov
pop
adc
jl
movsl
xor
ss
mov
sbb
out
jg
test
inc
mov
aam
push
enter
decl
jg
scas
cli
add
sbb
mov
dec
out
cmp
clc
into
in
dec
and
inc
sub
sub
daa
movsl
sti
loope
cmp
or
pushl
cmp
mov
lods
enter
rcl
pop
jmp
mov
mov
lock
sbb
in
cmp
and
js
push
leave
ljmp
sub
negb
mov
lcall
rclb
sub
mov
add
lret
sbbb
repnz
loope
orb
sub
ja
push
bound
es
cld
shll
xchg
or
stc
xor
lods
pop
cli
mov
add
jb
add
andl
jle
xchg
inc
std
fucomip
shlb
sbb
testl
rol
mov
mov
fimull
lea
cmc
stos
cmc
in
and
pop
insb
stos
pushl
cli
loop
xor
cwtl
or
jo
incl
adc
aam
adc
stos
lcall
sub
nop
add
mov
push
and
jg
cmpsb
cs
jmp
sub
div
aas
push
mov
xchg
push
inc
jb
dec
xor
jmp
inc
pop
scas
fxch
add
jl
faddl
inc
js
dec
push
push
xor
ljmp
pop
mov
dec
in
nopl
pop
xchg
xchg
insl
lcall
xchg
maskmovq
divl
lods
call
cli
incl
out
cmp
push
fcmovu
push
jae
mov
jno
mov
cmc
and
pop
fisttps
push
outsl
add
call
inc
pop
outsl
sbb
testb
cli
pushl
mov
add
mov
test
icebp
iret
inc
adc
inc
aaa
jle
repnz
adc
xor
adc
sub
lods
je
sbb
lcall
ljmp
mov
mov
jae
mov
loope
sub
stc
mov
pushl
mov
add
out
aad
xor
dec
mov
jmp
xor
dec
push
mov
imul
mov
das
cli
lcall
pop
inc
shlb
mov
les
or
jae
pop
cmp
fildll
mov
outsb
and
fiadds
xor
hlt
inc
dec
hlt
loope
call
mov
sahf
mov
mov
arpl
sub
imul
loop
data16
lcall
lea
fs
inc
cmp
ret
add
lret
ds
ljmp
lock
dec
or
imul
fiaddl
jp
push
jo
xor
xchg
std
lcall
mov
div
loopne
testl
xchg
aam
bound
mov
mov
inc
out
lahf
add
dec
fmull
mov
push
jnp
pushl
xor
popa
out
or
test
lods
mov
int3
jmp
in
push
imul
and
or
cmc
adc
fldl
jno
lds
jge
ret
hlt
inc
fucomip
hlt
fwait
push
pop
xchg
sbbb
mov
popf
pop
les
pop
xchg
add
or
hlt
decl
jno
push
mov
inc
dec
ret
decl
movsl
pop
cli
inc
enter
mov
imul
cltd
fdiv
and
lcall
jl
jmp
mov
sbbl
mov
and
das
insl
inc
pminsw
ja
pop
lock
mov
mov
push
pop
pop
std
adc
incl
mov
jge
jb
lods
fcmovnu
iret
push
jle
fnstenv
popa
sub
dec
adc
popf
in
and
xchg
mov
cmp
aam
push
add
repnz
repz
lret
xor
arpl
es
in
stc
into
mov
mov
jmp
jae
leave
xchg
aas
ficoml
xchg
mov
push
fdivp
mov
inc
add
mov
cmp
push
loope
aad
jmp
pushl
test
clc
ret
mov
imul
ret
pusha
xor
or
lcall
push
adc
sbb
xor
mov
push
add
cwtl
xor
adc
lcall
cld
mov
pop
aad
es
mov
mov
dec
jbe
lock
mov
or
sub
in
iret
leave
call
test
xor
pop
cmp
pop
shrl
incl
xchg
repnz
bound
push
cmp
sbb
xchg
inc
or
sub
pusha
mov
incl
cmp
out
loopne
faddl
decl
aas
pop
mov
ljmp
mov
push
les
out
stos
fcomps
lock
adc
addr16
test
shrb
out
cli
lret
xor
fwait
aad
dec
icebp
insl
mov
aaa
out
sub
subb
sbb
mov
pushf
imul
scas
roll
jg
pop
add
fld
mulb
or
or
mov
sbb
iret
xchg
mov
push
sbb
jmp
add
cmc
inc
pop
lds
mov
insl
aaa
clc
inc
call
sti
push
inc
cli
jae
xor
jg
cmc
xor
aad
add
pushf
ret
adc
sbb
enter
lahf
and
popa
cltd
sbb
add
jg
insb
outsb
sub
jo
xchg
fnstcw
cmp
cmp
cmp
or
dec
add
xchg
in
jmp
inc
xor
call
insl
xor
add
sub
push
mov
std
int3
adc
sbb
pushl
lcall
sbbl
or
cld
lea
and
jmp
dec
xor
js
xor
mov
test
idivl
shlb
hlt
push
mov
ljmp
lcall
std
cmp
push
arpl
popf
jle
jg
and
lcall
or
enter
inc
and
iret
mov
xchg
push
cmp
cmpb
gs
lcall
sahf
push
ljmp
cmpsb
sub
call
dec
xchg
lret
stc
and
popf
dec
fdivrs
push
scas
mov
mov
outsl
repnz
cs
mov
or
sub
lret
orb
inc
sub
cs
sub
mov
cmp
bnd
aad
push
push
adc
cmp
add
sti
xchg
repnz
push
jne
sbb
cmp
mov
fsubrs
fcmovbe
sbb
jg
rcr
adc
xchg
cmpsl
ja
sar
mov
xor
jg
mov
and
dec
bound
push
jle
stc
pop
fstps
pop
lcall
xor
mov
icebp
dec
sbb
pop
adc
lock
fucomip
mov
insl
repnz
add
fistps
je
jns
xchg
and
mov
fcmovnb
test
ret
ret
std
push
pop
push
inc
mov
lods
push
jg
in
and
mov
pop
jo
pushf
shll
arpl
mov
test
shrl
pop
sub
mov
jg
in
xor
sarl
or
cld
pop
ljmp
idiv
add
insl
cmp
add
dec
icebp
sbb
push
and
push
lcall
add
les
cli
aaa
loop
pop
mov
incl
adc
js
std
jp
and
mov
rcl
decl
movsl
fldl
xor
xchg
push
cld
mov
orb
push
stos
xchg
xchg
aas
mov
pusha
cmpsb
jp
leave
ficoms
hlt
das
mov
xchg
call
xor
cmpsl
pop
fdivrs
lods
push
imul
jmp
jno
ss
or
fsubs
repz
nop
ret
jns
shrl
jmp
or
cwtl
inc
fstpt
push
aas
int3
addr16
mov
pushl
sub
fucomp
mov
popl
xor
mov
daa
movsb
pop
xchg
insl
or
pushl
decb
sarb
lret
shlb
mov
icebp
sub
or
cli
mov
ret
imul
scas
adc
mov
or
dec
push
std
xchg
mov
lcall
mov
sbb
aad
jne
nop
in
xor
repz
shll
jmp
iret
or
jnp
add
pop
rolw
mov
mov
mov
ljmp
leave
jg
test
push
jbe
jmp
popf
mov
add
mov
cwtl
xor
dec
in
sbb
call
repz
push
mov
adc
insl
mov
fisubl
jo
inc
ret
imul
push
das
mov
dec
add
shll
push
sbb
popa
insl
cmpsb
rcrl
jbe
and
fs
repz
pop
dec
jg
jg
and
fimuls
push
push
add
lea
adc
ljmp
and
das
or
cltd
sbbb
xchg
out
or
fists
or
pop
cmpl
rorb
pushf
ficompl
dec
or
je
xchg
xor
lret
lock
mov
jns
jge
push
push
lock
fcmovnbe
inc
pop
dec
mov
ljmp
arpl
inc
sbb
lcall
and
mov
mov
sti
push
cs
ret
jl
jae
jnp
dec
push
jne
mov
aam
pop
clc
xchg
fwait
xor
pop
and
into
sub
fildll
stc
movsl
jmp
mov
cmp
dec
jae
mov
xor
sbb
jmp
mov
mov
ljmp
jae
pop
out
dec
ja
or
mov
sub
push
call
add
imul
mov
ja
inc
repnz
mov
jno
push
into
dec
ss
call
scas
mov
push
pusha
nop
lods
stc
jo
push
and
mov
imul
inc
dec
loopne
adc
inc
mov
out
js
lahf
dec
push
scas
dec
lods
pop
mov
ljmp
stc
sub
dec
movsb
cs
xor
ret
mov
pop
pushf
xor
decl
mov
scas
mov
movsl
dec
cld
fdivs
mov
cmp
cmp
out
fdivrp
incl
test
insb
sbb
inc
cmp
xor
sub
cmp
int
add
scas
outsb
ds
sar
ljmp
insb
mov
pop
jle
push
pop
ffree
cwtl
cmp
ds
jg
push
or
iret
lcall
jno
sbb
inc
mov
out
adc
jo
insb
daa
mov
pop
arpl
jge
mov
mov
movl
jg
xchg
jnp
pop
or
sbb
adc
in
push
popa
xchg
adc
mov
mov
mov
aaa
shlb
cmp
xor
mov
inc
fisubrs
mov
jae
xor
xor
hlt
ljmp
push
dec
xchg
jmp
pop
fisttps
mov
xor
stos
push
cli
call
inc
jbe
jnp
jl
dec
sub
lds
push
call
cmpsl
shr
xchg
pop
call
xchg
les
mov
push
into
js
das
lcall
in
sub
sub
lret
les
icebp
jmp
scas
mov
popf
out
in
fisubrs
jno
inc
mov
xchg
xorl
ud0
inc
mov
mov
push
mov
fistl
push
dec
outsl
rolb
push
sub
push
mov
stc
int3
lods
jg
call
nop
pushf
push
mov
repnz
inc
push
int
insb
adc
inc
jg
out
incl
out
sub
repnz
int3
cmp
pop
out
jno
cmpsb
lock
jmp
rcrb
jne
mov
loope
dec
mov
mov
ss
cmp
jmp
cmp
add
fldl2t
push
xor
loop
or
mov
sbb
aam
push
mov
lea
pushl
inc
cmpsl
mov
mov
xchg
in
imull
jg
imul
adc
test
loop
js
lahf
mov
inc
out
aaa
cli
jmp
dec
mov
cmp
jp
push
xor
adc
jne
lea
lcall
std
lcall
and
fimuls
mov
das
aam
lahf
insb
xchg
das
hlt
movsl
pop
sti
test
ficomps
dec
xor
or
or
xor
sub
pop
out
aaa
sub
xor
clc
fildl
inc
jno
ljmp
std
pop
xchg
sub
xorl
test
dec
fisttpl
aas
push
aas
lds
lcall
loop
insl
mov
fsubp
xchg
push
dec
dec
jno
push
mov
outsl
pushl
jnp
adc
flds
movsb
arpl
mov
insb
push
enter
das
or
repnz
lcall
jecxz
and
mov
pop
imul
call
mov
sbb
clc
adc
cmc
cltd
inc
in
xchg
mov
sbb
or
or
jmp
inc
jmp
xor
dec
addr16
pop
dec
mov
notl
dec
inc
xor
or
pushl
jmp
mov
popa
int3
add
loope
push
and
sbbb
pop
adc
dec
nop
mov
dec
add
sbb
pop
jo
pop
dec
mov
pop
xor
xor
shlb
sbb
pop
icebp
out
or
lods
xor
shll
xchg
cmpsb
ret
dec
imulb
sbb
test
outsl
lahf
xchg
dec
push
adcl
mov
jmp
sbb
add
dec
cmpsb
mov
cs
repz
repz
cwtl
mov
dec
or
popf
sub
daa
pop
push
mov
std
incl
jno
or
push
cmpsb
shlb
enter
mov
add
adc
adc
xchg
xchg
aaa
jle
imul
mov
popa
push
cmp
sar
adc
movsl
add
adc
xor
ucomiss
insl
daa
push
mov
xor
or
movsl
pop
push
inc
mov
inc
dec
xchg
pop
jnp
pusha
notb
pushl
int
adc
sti
inc
and
jg
and
xor
jg
sbb
mov
out
mov
push
popa
ret
fdivl
push
roll
mov
popl
pop
cs
andl
push
add
cmpsb
mov
aad
ret
xor
xchg
jmp
fcoms
mov
mov
xor
xchg
ja
sub
sar
outsb
imul
cld
pop
cli
decl
repz
sbb
pop
pop
mov
jbe
fptan
jae
adc
movsl
call
outsl
notb
ja
pusha
sub
fidivl
cmpsl
push
cli
adc
stos
call
bound
sub
inc
sbb
jp
int
and
pop
jns
fists
test
mov
sti
or
mov
lock
inc
test
sti
insl
pop
shll
sbb
sbb
aaa
ljmp
push
push
jo
mov
mov
mov
jmp
jb
bound
pop
cmpsb
xchg
fmull
inc
fldt
out
fdivp
das
std
incl
fwait
aas
sbb
push
arpl
adc
pop
adc
ds
lret
shrb
sbb
lret
stos
orb
fwait
jge
ljmp
push
pop
stos
inc
test
movsl
pop
addr16
int3
sti
jno
sar
mov
mov
addr16
jl
pop
sbb
jo
outsl
jmp
pop
add
dec
mov
vpmulhuw
fisttps
ljmp
mov
and
and
ljmp
lods
fists
pushf
mov
sbb
in
pop
lret
mov
out
test
fistpll
test
inc
clc
lock
filds
movsb
enter
or
repnz
jecxz
jns
aas
insb
mov
jb
call
mov
test
mov
and
inc
cwtl
xor
enter
sti
push
in
int
jge
scas
inc
xor
sub
pop
aam
imul
push
ret
sbb
mov
push
loopne
xchg
mov
xchg
inc
mov
out
stos
shlb
ljmp
jg
fbstp
and
pop
int
stos
xor
push
sbb
add
negl
xchg
lret
fdivrp
jle
sahf
rcrl
push
test
xchg
int
cmpsb
ss
ds
mov
stos
in
or
call
push
xchg
sub
lcall
aas
add
pop
sbb
mov
cltd
or
icebp
pop
sbb
or
xor
push
int3
call
xor
jg
sub
mov
push
pusha
push
les
cmp
cmp
jmp
sbb
cld
xchg
popf
pop
idivl
jg
push
or
les
dec
rdtsc
or
test
pop
or
mov
mov
jmp
fmull
icebp
jle
inc
fimuls
mov
xchg
jge
fxtract
into
les
std
cmp
sarb
add
push
jae
sar
insl
loopne
lret
bound
or
pusha
popa
cmpsb
inc
or
jmp
in
jnp
mov
push
jmp
pop
sub
mov
mov
pushf
jbe
sti
sub
mov
lahf
push
call
sub
jne
fdivrl
inc
mov
jne
xchg
fwait
xor
and
repnz
sbb
cld
inc
fbld
inc
xor
add
icebp
test
lcall
aaa
sbb
mov
sbbl
pop
xor
insl
call
mov
add
lock
jo
mov
in
stos
push
mov
or
mov
mov
rcr
iret
into
addr16
aaa
ret
ljmp
call
jno
push
jb
negl
lret
rol
inc
stc
js
mov
rorl
pushl
iret
pop
orl
aaa
or
jo
fmuls
push
ret
lcall
mov
mov
inc
and
jp
insl
lea
sub
lock
or
cld
push
pushf
push
les
ljmp
add
or
and
aad
std
mov
xor
daa
fnstenv
int3
jo
push
jmp
add
mov
xchg
jo
pop
iretw
dec
push
sbb
sub
pop
jbe
sbb
sub
test
loope
jg
sbb
int3
lahf
inc
cli
xor
mov
xchg
sub
cwtl
and
jg
call
add
cmpsb
orb
mov
xchg
iret
sbb
incl
inc
mov
mov
or
cs
dec
stc
shlb
rcll
test
lcall
pop
fwait
in
sti
test
pop
scas
vmovmskpd
adc
std
jbe
inc
stos
decb
in
lahf
pop
xchg
cli
jmp
jmp
jae
and
or
arpl
mov
mov
in
aas
movsl
add
shll
inc
pusha
out
dec
add
pop
shll
inc
mov
push
push
pop
sub
int3
push
mov
jle
pop
sbb
jg
push
std
xorb
test
mov
jmp
ss
ret
ja
pop
and
and
push
xor
cmp
loop
cmc
and
ljmp
addl
fcmovbe
imul
jl
outsl
rolb
add
mov
or
inc
sbb
cld
incl
out
mov
add
in
insb
xchg
ret
std
lcall
push
xchg
inc
jl
and
sbb
int3
sbb
js
adc
jl
ljmp
lods
jle
and
fnsave
out
sub
add
lcall
mov
adc
jns
lahf
gs
stc
push
sti
inc
pop
jg
pop
cmc
xor
ljmp
and
cmp
movb
cmpsb
in
incl
scas
jns
jno
mov
mov
std
out
clc
aas
scas
lahf
ds
arpl
jg
mov
loop
call
jp
enter
sbb
xchg
out
dec
pop
jo
mov
scas
fs
xchg
dec
pop
inc
inc
xor
xor
jecxz
popa
jns
faddp
sub
clc
sar
jo
cmpsl
cltd
movsl
subl
test
cmc
lcall
call
mov
xchg
sub
nop
adc
jmp
xchg
push
cmp
inc
jg
decl
and
dec
shrl
addl
mov
out
mov
sub
gs
sarl
sub
dec
jl
push
adc
call
sbb
sbb
and
cld
sbb
jb
push
push
inc
jae
adcb
add
jg
decl
push
movsb
shr
inc
rorb
jo
imul
out
mov
adc
call
sbb
or
hlt
lock
add
loopne
cmp
xchg
push
out
les
mov
push
shlb
rcr
loopne
push
adc
js
and
ja
add
push
jb
xchg
adc
cmp
sti
sbb
fisttpl
fsts
xorb
fnstenv
cwtl
mov
flds
scas
cld
push
mov
or
repz
lea
je
inc
stos
setp
xchg
mov
pop
ljmp
sub
cltd
jns
dec
xor
in
stc
dec
inc
mov
mov
inc
inc
aas
cltd
pop
ror
push
jl
and
fsubrl
sar
inc
ljmp
mov
dec
pop
jecxz
mov
scas
add
jmp
push
int3
loopne
push
add
loope
sarb
xchg
in
ljmp
jmp
pop
cmc
lods
mov
cmpsl
loope
jmp
push
xlat
xlat
cmp
jmp
fiaddl
sbb
lea
mov
lret
xchg
lods
pop
fsts
cli
imul
ljmp
out
clc
xor
or
fs
lahf
loop
cmp
shrb
mov
fbld
fcoms
jns
mov
push
dec
xor
fwait
and
mov
xlat
pushl
clc
pushl
sbb
repz
cwtl
lret
imul
mov
xchg
inc
xchg
jp
cli
ljmp
and
push
cmpb
rcrb
aad
pop
pop
add
fwait
rclb
shll
aad
sub
subl
decl
andl
push
mov
mov
cmpsl
cmp
je
movsb
gs
mov
lds
xchg
pop
mov
jp
bound
pop
std
mov
sahf
cmp
sbb
sbb
adcb
jb
mov
jne
shr
lods
jg
sub
ss
lcall
inc
jmp
fsubl
repz
loopne
inc
dec
inc
jp
lods
dec
push
aam
negb
xor
popf
mov
push
insl
cmpsb
pop
leave
pop
pop
cwtl
incl
int
dec
test
mov
enter
divb
out
pusha
dec
nop
idiv
mov
scas
outsl
fdivrp
in
sub
dec
cmp
gs
push
popf
gs
cwtd
std
insb
jmp
lods
inc
push
aaa
cmpsl
movsb
pop
mov
data16
fmuls
inc
xlat
ret
dec
sub
jg
inc
stc
out
and
fadd
add
in
int
xchg
pusha
inc
outsb
arpl
pop
in
popa
sbb
mov
lods
sbb
pushl
test
jmp
xchg
push
out
inc
mov
mov
imul
sub
add
imul
jne
aas
push
outsl
aam
xchg
push
test
pop
aaa
test
aas
cli
jecxz
flds
out
test
sub
fidivrl
mov
mov
mov
cli
mov
cmpsl
push
adc
push
aas
fimull
or
jb
cli
lcall
dec
repnz
enter
xchg
scas
shrl
leave
pushf
mov
jmp
cmpsb
jnp
scas
and
imul
push
xchg
js
arpl
outsb
dec
fs
mov
repz
divb
enter
xchg
ljmp
je
sub
ljmp
adc
sti
vpshrdvq
xor
incl
sub
pop
mov
insb
jl
push
aad
mov
cmp
jnp
push
xchg
cli
sub
insl
cmp
clc
jg
xor
sub
shlb
loope
pop
and
fsubrl
inc
out
or
arpl
shll
adc
pop
out
mov
repz
inc
int
add
popf
pop
popf
cmp
lahf
jg
pushl
pushl
aaa
inc
pop
filds
and
lock
mov
in
idiv
int
dec
sti
xchg
jne
repz
jne
jl
sbb
js
ds
and
decl
xchg
pop
movsl
lret
popf
insb
fidivl
xor
xor
adc
lods
inc
cli
decl
pushf
cmpsb
pushf
popf
test
add
loop
push
leave
rorb
push
call
mov
je
add
mov
jle,pn
pop
pop
jle
arpl
decl
inc
pop
das
adc
mov
push
cld
sbb
bound
imul
mov
jmp
fsubs
dec
sbb
data16
sub
push
pop
int
les
cwtl
movsb
dec
dec
push
scas
call
push
lahf
push
push
lcall
incl
pop
ljmp
mov
push
cmp
out
cmp
out
and
mov
sbb
jecxz
out
ljmp
fs
cmp
mov
std
mov
xchg
push
push
pop
xchg
into
adc
ljmp
or
movsl
sbbl
push
ss
adc
stos
mov
fxch
adc
cmpsl
hlt
mov
ds
mov
sbb
scas
mov
ljmp
pop
ja
pop
ss
roll
inc
mov
add
loope
fistps
push
cmp
jle
push
mov
out
pop
jge
and
xchg
mov
pop
xchg
jg
xchg
ror
sahf
adc
in
adc
jae
xchg
push
pop
std
clc
cmpsb
or
popa
mov
xchg
ljmp
mov
pop
ljmp
cmpsb
xlat
pop
or
out
pushf
test
pusha
xchg
repnz
cs
call
pop
ss
leave
adc
icebp
or
mov
dec
or
mov
pusha
test
iret
mov
push
jge
jae
cmc
out
cli
mov
mov
or
in
xor
cs
lahf
jns
es
test
outsl
loop
xor
rcrl
jbe
adc
dec
out
mov
loope
das
add
mov
in
xor
push
mov
jae
pop
push
add
into
in
mov
fiadds
dec
jnp,pt
push
scas
or
ljmp
flds
adc
pusha
aaa
call
fcomi
loope
sbb
mov
or
sub
mov
aad
cmc
cmp
xor
pop
addr16
sbb
add
inc
mov
jle
dec
push
inc
sbb
mov
push
mov
cmpsb
mov
enter
scas
out
out
testl
pop
idivb
mov
xchg
lcall
scas
push
lea
lret
lods
pop
mov
adc
cmp
scas
xchg
mov
cmp
insl
popf
push
in
xor
outsb
jne,pn
mov
subb
add
or
scas
jmp
fsub
inc
into
out
aaa
cli
xchg
push
xchg
out
lret
stos
sbb
rcll
xchg
push
inc
cs
sarb
cmp
sbbl
cli
or
arpl
ret
mov
mov
xor
adc
sbb
mov
arpl
pop
or
lcall
inc
xchg
pop
cwtl
std
jmp
stos
push
adc
test
mov
call
int3
repz
das
lock
mov
inc
pop
sub
pop
andb
lcall
mov
xchg
mov
pop
jg
fistps
push
loop
cli
je
jo
mov
cli
push
and
sub
dec
in
inc
shrb
arpl
rolb
std
lcall
ja
mov
scas
jo
xchg
repz
clc
retw
jge
aaa
push
decl
pop
pcmpgtb
notb
popa
xchg
mov
repz
loopne
cli
cld
xchg
inc
ret
stc
mov
or
addb
cli
jmp
stos
mov
jbe
add
mov
insl
fwait
adc
dec
das
hlt
jmp
out
imul
lods
cmp
inc
fsubrl
fdiv
push
jle
xchg
test
xchg
add
mov
sbb
add
xchg
loopne,pt
pop
clc
mov
cmp
mov
icebp
movsl
jo
jg
pushl
popa
cs
inc
shlb
add
rep
hlt
dec
jl
rcrb
shr
jle
jae
call
xor
jns
pop
cwtl
sbb
shrl
cmpsb
mov
cmp
jp
jl
sub
xchg
fdivr
push
add
jge
pop
sbb
out
sbb
es
loop
mov
pop
std
pop
lahf
sub
repz
and
lods
lahf
fisubrs
sub
inc
inc
sub
mov
ljmp
jbe
push
dec
je
pop
push
adc
in
push
ret
enter
in
xor
sbb
pop
cli
ljmp
sub
pop
aam
test
dec
call
mov
pop
in
mov
dec
ljmp
push
sbb
decl
fistpl
inc
fiaddl
xchg
in
ret
repnz
mov
pop
inc
call
pushf
jns
xchg
mov
or
in
and
mov
or
outsl
std
ljmp
cltd
pop
out
adc
mov
pushf
andps
inc
lahf
ljmp
cmc
fbstp
xorb
rcl
sub
std
icebp
mov
sbb
jmp
adc
je
cmpsb
shll
ret
xchg
push
loopne
popf
mov
cld
jmp
xlat
cmp
xlat
stos
sub
jmp
mov
fdivs
sti
sahf
xchg
insb
inc
ljmp
ljmp
lcall
jge
int3
mov
sahf
sbb
lea
add
and
push
add
dec
cli
stos
pop
add
xchg
rolb
movsl
mov
pop
xchg
push
in
das
add
incl
adc
jae
push
mov
pushl
push
pop
subl
stc
inc
mov
sbbb
cmpl
sar
imul
mov
lea
mov
lds
jae
xlat
dec
adc
mov
jnp
xor
imul
jmp
pop
jg
pushf
adc
push
fistpl
icebp
jo
xor
ljmp
add
mov
test
fstl
aad
push
mov
push
jmp
hlt
jno
xchg
cmp
jecxz
scas
fcoms
push
pop
loopne
pop
lea
push
call
and
mov
lods
push
jg
movsb
out
add
stos
dec
mov
adc
push
inc
mulb
scas
or
aas
dec
push
into
pushf
cmpsl
test
sub
ret
nop
arpl
fcompl
sahf
lods
adc
mov
or
fistl
push
in
pop
loopne
in
add
pop
push
decl
imull
iret
out
cmp
stos
add
add
insl
push
cmp
movsb
mov
je
xchg
out
ret
push
push
xor
jb
into
lret
dec
mov
dec
call
cwtl
mov
fcmovu
nop
aam
xchg
test
and
push
xor
loopne
pop
lock
out
outsl
lcall
sub
jmp
mov
jb
xchg
pushf
sub
mov
gs
loope
push
cmp
mov
add
sbb
cmpsb
jmp
mov
push
pop
call
lods
fstpl
ljmp
inc
sub
mov
lock
iret
lock
inc
mov
mov
fsubrs
fildl
mov
xchg
pop
lock
outsb
xor
and
push
or
push
sub
jg
mov
aam
mov
mov
fs
movsl
decl
pushl
jb
jmp
mov
adc
cmp
je
xor
icebp
decl
aas
sub
dec
js
in
add
icebp
dec
inc
insb
fstpt
dec
dec
mov
add
aaa
ror
cmc
and
js
cmpsl
dec
push
xchg
addr16
std
out
popa
dec
sbb
jo
adc
cwtl
inc
bound
jno
decl
iret
lret
sub
dec
push
adc
aaa
out
mov
mov
cmp
mov
xchg
jg
xchg
incl
xor
and
mov
jmp
xchg
aas
inc
pop
inc
lods
sub
ds
or
xor
in
ljmp
lahf
cmpsl
stos
jp
inc
incl
xchg
je
lret
ret
mov
insb
insb
ret
insl
mov
xchg
fcomps
inc
call
lcall
inc
shrb
adc
mov
ja
pop
mov
pop
jnp
cmp
lods
mov
xor
jns
cmpsl
lods
push
or
enter
cltd
xor
sub
incl
roll
dec
adc
push
lock
dec
inc
xor
roll
cli
insl
std
sbb
add
popa
xchg
adc
repz
in
test
ret
mov
mov
push
xchg
mov
xchg
sub
and
test
ljmp
xor
adc
les
mov
pop
push
sahf
mov
add
dec
rcrl
add
imul
int3
or
fdivrp
lcall
cmpsb
enter
pop
sub
sub
add
js
adc
inc
pop
clc
call
fnstcw
mov
stc
pop
push
sub
sub
xchg
mov
jg
mov
daa
push
adc
dec
jge
fwait
adc
cmp
in
ss
jno
lea
nop
fdivs
jg
pusha
cmp
jle
push
into
inc
in
mov
add
xchg
sub
sub
ljmp
cmp
test
scas
jns
out
jno
sbb
jmp
pop
mov
shll
push
jns
and
mov
cltd
ss
jmp
xorl
or
xor
xchg
movsb
dec
sub
das
lock
loope
cmp
insb
sti
ss
sbb
fcoms
movsl
mov
mov
fisttps
sub
pop
fisttps
das
movsb
das
push
scas
or
jg
push
addr16
xlat
xchg
lret
xchg
imul
lret
int
sahf
cmc
xchg
or
xlat
xchg
cmp
sub
push
int3
shl
rcrb
scas
adc
mov
or
dec
inc
xor
movsl
inc
fsts
dec
mov
mov
ljmp
dec
arpl
push
or
pop
add
lret
xchg
push
cli
rorb
mov
fsubl
add
ljmp
or
inc
mov
lret
aas
xor
add
fisubrs
cld
push
pop
adc
cs
in
xor
push
stos
addr16
pop
icebp
push
shrl
call
mov
dec
adc
lahf
pop
popf
lock
loop
mov
mov
lods
ret
pop
jno
cmp
addr16
dec
mov
add
jbe
pop
outsb
mov
shl
push
cmp
outsl
cmc
or
cmp
je
cmc
mov
mov
jmp
imul
add
cwtl
fistps
pop
sbb
das
hlt
pop
lock
outsl
fsubl
mov
decl
adc
sub
hlt
pop
popa
cmp
push
sbb
outsl
hlt
pushl
mov
popf
pushf
fdivl
out
enter
push
scas
decl
inc
mov
inc
in
cltd
or
inc
jg
push
std
ljmp
mov
decl
cld
shl
stos
mov
mov
xchg
cmc
and
add
sub
test
lahf
push
jo
sbb
jecxz
repz
dec
pop
and
mov
pop
lds
testb
fcmovbe
push
sub
mov
enter
js
add
dec
inc
mov
xchg
mov
mov
push
push
sub
incl
nop
bound
adc
dec
mov
lds
jecxz
icebp
inc
lret
clc
push
lds
mov
push
aas
mov
and
movsb
mov
add
cltd
loop
scas
movsl
fmuls
loopne
dec
mov
lods
sbb
sub
lods
inc
repz
push
jl
mov
std
xchg
push
cmp
fistps
mov
mov
data16
mov
mov
mov
lcall
adc
inc
pop
je
dec
fsts
push
push
movsb
sbb
cmp
jmp
lods
fcmovnbe
call
push
mov
sbb
inc
and
jg
pushl
nop
sbb
push
or
pushf
xchg
cmp
jne
jge
xchg
loopne
std
or
push
imul
adc
jmp
cmove
inc
incl
es
mov
movsb
lahf
pop
or
lcall
pop
xor
bnd
jge
jae
fdivr
push
adc
cld
pushl
aam
in
sbb
incl
shlb
js
push
out
mov
or
jo,pt
js
adc
or
sahf
mov
pop
aaa
scas
xor
repnz
cmpsl
mov
daa
in
loopne
cs
pop
fs
jg
push
cld
sub
decl
adc
fcomi
hlt
mov
sub
pop
mov
daa
jns
sub
cmpb
fnstenv
clc
pushl
in
in
mov
repnz
gs
lods
add
popa
xlat
push
jge
outsl
ljmp
cmp
cmpb
aam
jg
jg
filds
push
inc
in
fwait
jne
inc
push
hlt
daa
xchg
sahf
xor
decl
dec
loopne
dec
dec
ret
repnz
movsl
daa
test
add
cld
call
int3
xor
add
bound
mov
std
jmp
mov
or
jecxz
fstpt
fs
addr16
jmp
mov
jmp
fdivr
in
stos
push
push
jo
cmp
or
mov
outsb
aas
add
fucomip
pushl
ret
movsl
bound
pushf
mov
in
movsl
lret
push
add
mov
decl
mov
sahf
adc
mov
call
pop
add
ljmp
sub
fiadds
les
mov
aad
add
sbb
cmp
fnstsw
int
ja
jnp
int
or
jle
mov
mov
mov
negb
stos
pop
pop
les
sti
std
aaa
or
xchg
or
lods
mov
and
xor
pop
ljmp
sti
into
pop
xchg
or
cmpsb
pop
sbb
add
or
call
fldcw
inc
sbb
or
jg
jge
cltd
or
xchg
in
xchg
aam
mov
inc
clc
cmpsl
jl
push
out
adc
jae
jnp
cld
decl
and
mov
loope
xor
mov
mov
push
ljmp
inc
adc
lea
and
pop
xor
and
sbb
call
ljmp
and
negl
mov
mov
xor
cwtl
inc
out
jmp
pop
mov
addb
fldl
sub
pop
mov
and
sub
sahf
add
jp
cmp
push
iret
fucomi
shlb
ljmp
decl
std
push
cli
ret
cwtl
negl
cs
jo
add
push
push
loop
lcall
in
sti
pusha
jnp
jb
rol
mov
cmp
adc
mov
bound
aaa
cli
jmp
movsl
add
cwtl
and
stos
cltd
pop
std
xchg
lret
ljmp
cs
pop
sbb
lcall
sbb
js
out
sub
jge
dec
ja
xor
cli
dec
and
lret
divl
popa
dec
jb
pop
push
out
cmc
in
mov
pop
test
jg
daa
cmpsl
or
rcrl
or
push
outsl
lock
loope
cmpl
xor
xor
rcr
clc
pushl
xor
push
push
aam
sbb
jne
mov
call
clc
out
dec
lock
out
movsl
ds
mov
lahf
popl
movsb
loop
xchg
jg
decl
in
test
in
mov
fdivr
out
dec
dec
push
jno
ret
xchg
pushl
cmpsb
mov
xor
call
in
mov
adc
or
xor
shlb
or
push
std
pushl
in
add
mov
in
jae
and
and
mov
call
mov
mov
fistpll
decl
mov
lret
jg
dec
lret
jo
and
pop
js
in
cli
outsl
hlt
mov
lcall
inc
int3
add
inc
inc
out
clc
xchg
xchg
dec
aam
daa
sub
out
mov
xlat
jae
sub
testb
es
call
repz
mov
mov
shlb
jne
and
leave
mov
inc
xor
pop
jb
shl
ljmp
cmc
push
jae
inc
push
sarl
jge
inc
xor
mov
std
mov
jo
int
push
testl
std
adc
lock
jnp
outsb
mov
add
call
mov
insb
lods
mov
xchg
xchg
leave
scas
jmp
mov
test
je
pop
push
fiadds
jbe
into
das
mov
sarb
ja
out
xchg
and
jl
fld
or
adc
lcall
loopne
cwtl
insb
jp
adc
addr16
fs
ljmp
mov
lods
inc
mov
call
pushl
dec
push
jo
fisttpll
ret
or
jp
inc
ljmp
lahf
xchg
out
lea
dec
mov
xchg
add
sbb
adc
mov
js
ljmp
mov
add
sub
pushl
faddl
hlt
push
mov
out
mov
arpl
roll
cli
dec
mov
lea
mov
test
call
aas
mov
and
inc
push
dec
xor
adc
outsl
lcall
mov
orb
insl
pop
int
cwtl
mov
js
std
aam
inc
stos
and
cmp
call
jo
les
insl
in
jg
jb
js
sub
add
mov
jmp
lret
pop
lcall
decb
adc
ret
adc
add
xorb
and
std
adc
decl
sbb
or
fsubr
test
lods
xchg
fisttps
lcall
subl
das
out
movsl
out
adc
arpl
cmp
lods
jmp
mov
cmp
mov
cmpsl
nop
call
pop
inc
aas
notb
ljmp
and
pop
in
jnp
xchg
jg
inc
push
cmpsl
push
mov
and
out
ljmp
cmp
loop
sub
fisubrs
stos
jg
add
outsb
fsubs
les
add
jp
add
sbb
or
jge
mov
or
jge
out
inc
int3
scas
ds
pop
jbe
int
inc
or
mov
test
fwait
jmp
adc
adc
nop
imul
cltd
pop
mov
loopne
lret
daa
sti
add
and
dec
or
dec
es
and
and
push
cli
in
sbb
jmp
jae
inc
stc
push
mov
sbb
sahf
mov
add
mov
lcall
sub
inc
pop
jno
movsb
inc
xlat
pusha
add
lret
out
sub
lds
jecxz
incl
incl
aaa
sbb
repnz
jnp
xor
xchg
mov
sbb
sbb
fldt
aas
mov
aaa
cmp
mov
mov
sahf
pushl
mov
repnz
push
stc
mov
incl
dec
lods
inc
push
sarb
push
jae
pop
loope
shll
pop
lea
outsl
in
call
call
xchg
in
or
mov
sti
fwait
push
repnz
clc
loop
popf
add
lds
lock
fcomip
jg
add
mov
test
test
roll
fsubl
aas
lds
data16
ljmp
std
es
mov
icebp
xchg
mov
dec
pop
xlat
and
xchg
stos
nop
ljmp
call
in
mov
cltd
xchg
stc
pop
imul
movsl
hlt
mov
push
sub
mov
jl
jle
pop
adc
lcall
cld
popl
jns
adc
inc
mov
jnp
dec
into
mov
movsb
insb
inc
cwtl
jle
jg
jns
testb
mov
cld
jg
jp
popf
arpl
rolb
lret
loop
outsb
std
dec
adc
dec
std
sub
enter
ljmp
mov
jbe
mov
xor
fcmovnb
clc
incl
daa
add
fistpll
sbb
jb
jmp
test
adc
jecxz
push
pushl
jp
adc
bound
int
push
inc
les
ret
dec
mov
jg
scas
scas
imul
insl
call
jmp
pop
sbb
cmp
pop
mov
add
sbb
lcall
xchg
in
fistpll
imul
ret
fdivl
mov
hlt
jmp
mov
inc
popf
cmp
stos
inc
loop
mov
xchg
das
mov
fisubs
lcall
cmp
jns
out
fwait
adc
mov
mov
hlt
dec
push
add
xlat
pop
mov
jb
scas
incl
jecxz
jge
hlt
xchg
cmc
repnz
add
stos
cmp
dec
outsb
lahf
stos
pop
mov
hlt
roll
fldcw
pop
daa
cli
popf
lods
sbb
aad
ja
mov
pop
incl
pushl
outsb
xor
lea
es
adc
imul
das
hlt
call
jmp
popf
adc
adc
outsl
lock
jno
out
dec
imul
lock
dec
inc
testb
cmc
fsubrs
and
mov
jnp
stos
shlb
pmuludq
cmp
fiaddl
mov
xor
inc
sbb
jg
xchg
dec
inc
jns
adc
cmp
add
cmp
decl
push
jmp
push
jnp
aaa
ret
adc
lahf
xor
mov
inc
push
dec
xchg
mov
ret
inc
es
sar
jg
stos
je
mov
outsl
adc
mov
add
sbb
lds
decl
rcll
sbb
out
ljmp
nop
xchg
xchg
sar
sti
push
xor
je
aad
sbb
shlb
sbb
scas
inc
sub
sub
mov
cs
mov
add
mov
mov
mov
call
decl
lahf
mov
push
mov
cmp
xchg
xor
call
mov
jge
jmp
sahf
sbb
nop
jbe
xchg
mov
adc
jge
cmc
fistps
add
lret
movsl
xor
jmp
mov
inc
test
mov
jp
repz
stos
lods
cwtl
bound
ds
in
and
test
mov
lret
iret
xchg
xchg
outsb
xor
xor
mov
adc
call
jne
xchg
outsb
je
clc
addb
pushf
scas
push
xchg
loope
mov
jae
cltd
jp
movsb
stos
in
adcl
dec
scas
xor
je
cli
push
pop
jne
movsb
and
push
or
sahf
jle
decl
ficompl
bsr
rorb
add
xor
mov
cmpb
add
xchg
lods
mov
cmp
shlb
mov
xchg
loope
stos
pop
and
fucomip
call
out
data16
jmp
and
jmp
ret
push
idivb
ss
call
or
xchg
lock
push
pop
pop
mull
loop
xchg
repz
push
in
scas
hlt
call
incl
pop
scas
fists
cmc
in
push
sahf
shll
mov
ljmp
jl
ret
repz
ret
mov
test
addr16
add
stc
mov
or
xchg
rcrb
push
imul
mov
sti
frstor
and
push
add
bound
fsubrl
cmpsb
inc
lret
dec
ret
lcall
aaa
pop
loope
push
nop
sub
push
xchg
js
sub
xorb
popa
icebp
lea
mov
push
mov
jns
cmpsb
add
add
and
sbb
incl
outsl
imul
xchg
dec
ds
xor
adc
jg
lcall
lahf
jl
sbb
je
popa
sbb
test
dec
xchg
pop
js
and
sub
mulb
sub
in
int3
fucomip
dec
push
and
mov
inc
xchg
adc
icebp
adc
push
stos
in
mov
insb
xlat
mov
lcall
std
pushl
aad
sub
jne
out
xchg
xchg
mov
mov
push
xchg
mov
decl
cmp
add
lock
inc
sbb
jbe
dec
sub
jmp
mov
or
dec
jg,pn
cmp
or
popf
stc
adc
inc
mov
call
iret
ss
mov
inc
inc
fists
das
mov
popa
push
out
insl
sub
sbb
mov
xor
loopne
cmpsl
outsl
xchg
andl
hlt
popf
push
mov
or
dec
or
jnp
jmp
ret
pop
addr16
cltd
fcoms
and
push
xchg
js
jg
push
xchg
jns
test
xor
fwait
pop
jg
sbb
jbe
test
xor
hlt
test
inc
sub
incl
xlat
push
dec
jno
icebp
or
cmp
mov
subb
not
mov
xchg
adc
and
push
xchg
push
mov
mov
ljmp
lcall
xor
in
and
push
movsb
in
outsl
lods
sahf
pop
rcll
fidivl
cld
popa
daa
adc
arpl
std
mov
aaa
out
rorb
je
fimuls
aas
mov
out
jns
pop
xor
fnstsw
push
out
mov
rcr
es
add
sbb
xor
int
dec
cmp
pop
in
jno
clc
dec
imul
cli
dec
mov
xchg
or
nop
pop
dec
nop
inc
cmp
out
notb
mov
mov
sbb
iret
repnz
pushl
sub
mov
jmp
cld
rcrb
repz
ljmp
test
or
jg
add
pop
iret
or
jo
cmp
jecxz
cltd
test
fistps
insb
sar
cmp
jle
sbb
lods
lcall
jg
or
in
mov
push
cmp
dec
cmp
add
push
xor
out
icebp
and
xor
sbb
scas
or
jmp
and
hlt
cmp
rcrl
mov
mov
sub
ljmp
push
dec
mov
jno
call
inc
test
pop
jno
mov
mov
dec
pop
inc
add
mov
xor
jnp
and
xchg
jle
mov
pop
lock
cli
pushl
frstpm(287
imul
jle
fists
pop
std
ljmp
mov
pop
xchg
jg
sub
sahf
or
dec
dec
xchg
xlat
push
jne
add
fildll
insl
lods
adc
jb
mov
xor
mov
and
incl
movaps
mov
or
mov
aaa
cmp
mov
push
incb
hlt
xor
int
jb
icebp
loope
cmp
test
or
hlt
jno
test
incl
test
js
jns
mov
cmp
fmulp
adc
mov
mov
xchg
add
sbb
and
inc
dec
or
xchg
mov
iret
mov
aas
push
sub
add
sahf
add
leave
loop
loopne
les
mov
lods
and
sbb
jo
xchg
xchg
adc
test
jo
repz
std
sub
adc
scas
addr16
or
or
adc
smsw
cmpsb
push
push
ja
arpl
cmp
pushl
xchg
sbb
ficoms
movsb
gs
mov
fsubrl
mov
and
fnstsw
or
loop
fiaddl
dec
test
inc
mov
incl
jg
jl
mov
mov
in
push
xchg
xchg
jp
sub
call
cmp
cmp
xchg
sub
loop
cmc
test
testl
out
mov
in
add
xor
into
jmp
push
fnstenv
movsb
xor
cmp
aas
pop
lock
dec
pop
decl
dec
fcoml
sbbl
mov
jns
sahf
xlat
std
outsl
std
or
andl
std
add
xchg
ret
ljmp
mov
ret
lock
daa
mov
push
aad
cmp
aam
das
rcll
ret
cmpl
insl
addr16
pop
push
sbb
mov
adc
inc
dec
or
sbb
mov
pushl
or
stos
cwtl
stos
mov
rol
sbb
fdivl
cmp
xor
mov
icebp
mov
out
stc
imul
mov
in
adc
sub
inc
insl
and
lods
ss
fwait
or
pushf
in
or
ja
insl
add
adc
jmp
jb
and
loop
fbstp
cmpsb
insb
push
xor
test
mov
subl
xchg
xchg
lock
mov
lds
scas
cmp
sbb
sub
loopne
mov
or
lock
into
je
outsl
add
sub
cmpsl
call
inc
mov
aaa
mov
adc
fcompl
lea
push
nop
imul
sub
rorl
dec
stos
cmp
push
cli
jg
pop
lock
push
xchg
mov
inc
and
imul
add
jg
mov
push
pop
xchg
insb
mov
sub
call
orl
movsl
and
dec
clc
jne
xchg
inc
js
add
sarl
pop
ret
cmp
div
and
sub
mov
shll
inc
adc
adc
jle
std
or
int
and
dec
sbb
outsl
cld
andb
subb
pop
daa
mov
pop
jge
ss
mov
ljmp
xchg
in
fs
outsl
dec
inc
jns
clc
insb
mov
xchg
pop
das
sahf
aam
jns
adc
fwait
fs
lea
sub
imul
mov
call
jg
fimull
jecxz
fists
out
dec
jae
pop
lret
push
inc
inc
rcr
pop
int
test
cwtl
adc
clc
add
jg
sbb
dec
sub
lcall
mov
mov
sbb
mov
pop
imul
nop
lcall
test
aam
jnp
xor
jp
in
fisubl
test
jecxz
and
dec
cld
lcall
outsb
or
jnp
add
xor
cs
push
cmp
jg
jg
std
sbb
xchg
xlat
jne
es
sbb
scas
stc
stc
jecxz
jb
or
iret
addl
lea
push
les
and
sub
dec
icebp
push
inc
fsubrl
in
inc
je
int
push
loope
jge
push
pop
cld
ljmp
xchg
jb
mov
cli
nop
mov
sarb
cmp
jg
mov
rcrl
mov
call
mov
jle
test
lret
sahf
in
mov
adcb
cli
call
js
xbegin
inc
mov
jecxz
add
dec
icebp
cld
fsts
pop
std
lcall
fidivl
xchg
call
cmp
pushl
test
xor
test
cs
enter
scas
mov
sbb
test
jmp
sbb
xlat
lret
stos
aam
pop
and
stos
mov
movsl
je
mov
ficoml
lea
call
jmp
add
pusha
insb
add
sbb
lcall
mov
dec
pop
mov
pop
push
out
pop
adc
ja
gs
decl
ds
mov
loope
dec
inc
xchg
dec
jo
cld
adcb
mov
repnz
cmp
lcall
adc
aad
lea
jg
jg
pushf
or
fwait
pusha
mov
and
pop
jl
shrl
mov
sub
jbe
aad
rcr
pusha
into
jle
cmp
shl
sahf
shlb
decl
mov
fdivs
and
add
or
cmpl
call
add
mov
inc
xchg
pop
daa
sbb
aad
cmp
sti
lret
xor
pushl
mov
nop
push
imul
and
in
lret
add
mov
ds
xchg
or
push
test
hlt
rclb
data16
loopne
pxor
dec
cmpsb
jmp
mov
push
mov
xchg
cmp
add
or
mov
push
and
mov
movsb
pop
ja
sbb
incb
push
xchg
test
pop
jg
xchg
push
clc
or
fistpll
arpl
ret
mov
add
pop
cli
ljmp
jne
and
jmp
dec
in
das
rol
and
call
mov
sbb
and
push
insl
fdivrs
ss
push
jg
mov
mov
cmp
cmp
ljmp
ljmp
inc
gs
loope
jno
bound
cmp
mov
add
add
jl
jns
movsl
cwtl
daa
iret
adc
popf
inc
and
jne
js
in
xchg
hlt
decl
cmp
push
adc
push
std
sub
imul
push
insb
cmpb
in
cwtl
inc
ljmp
dec
cmpsl
push
xchg
push
xchg
lods
pop
inc
mov
mov
add
std
push
ljmp
add
xor
mov
add
and
lcall
loopne
repz
pop
add
aas
div
pusha
xchg
loopne
xchg
push
mov
adc
mov
in
mov
loop
in
mov
shlb
push
sahf
mov
test
inc
pop
into
movsl
ds
icebp
int3
outsl
popa
mov
xchg
dec
mov
mov
shl
xchg
clc
lret
sbb
lock
mov
stos
dec
ja
mov
mov
outsl
jne
push
and
or
cmp
dec
int3
xchg
jl
dec
lods
adc
fsts
mov
ret
sub
sbb
scas
xor
push
ljmp
mov
pop
mov
xchg
cmpsb
sbb
ret
aad
pop
test
icebp
add
lcall
loop
pop
dec
outsl
dec
fnstenv
out
or
xchg
fs
inc
bound
adc
cmp
fwait
jbe
les
test
adc
jne
cmpsl
jge
lock
pop
xlat
out
lds
sub
mov
loope
ret
pop
and
mov
mov
ret
leave
mov
pushl
punpckhwd
adc
push
icebp
cmp
mov
jb
test
adc
call
ljmp
inc
bound
sub
repz
push
sbb
lcall
mov
arpl
lock
lds
adc
push
push
ljmp
rclb
icebp
push
jmp
fwait
inc
in
push
dec
clc
pop
ja
mov
cmpl
sbb
pop
hlt
mov
iret
icebp
call
inc
ret
in
cmc
insb
pop
inc
and
inc
xchg
or
fdiv
jl
sbb
fwait
cwtl
mov
or
pop
add
inc
cmpsl
mov
mov
sbb
lcall
addr16
stc
into
stos
xchg
popf
pop
loop
push
sub
scas
in
push
out
scas
inc
daa
and
enter
lcall
hlt
loope
cmp
lds
pop
xchg
add
incl
add
and
push
sbb
or
incl
mov
mov
mov
jae
inc
mov
ljmp
ja
sbb
dec
js
dec
xchg
pop
addl
pop
bound
imull
jo
cmp
xlat
xchg
mov
mov
pop
add
inc
inc
xchg
mov
jmp
pop
leave
movsl
bound
mov
popf
icebp
inc
pop
cld
mov
cli
jg
mov
rclb
pop
pop
int3
xchg
ds
jg
mov
scas
push
ret
cmp
sti
adc
hlt
addr16
xor
mov
or
repz
jbe
xchg
test
sbb
cli
inc
je
dec
mov
enter
mov
inc
bound
adcb
icebp
xchg
cmp
lods
add
lds
call
leave
lods
xor
call
pop
icebp
mov
add
mov
mov
mov
xor
pushl
aad
test
icebp
and
cli
fildll
jecxz
cmp
lods
jno
inc
cli
pushl
push
loope
jl
pushf
pop
rol
jl
inc
xor
outsl
xor
mov
mov
leave
and
cmc
inc
scas
xor
push
push
lcall
js
rcrb
cmp
sub
fdivl
mov
ss
jp
mov
test
outsl
hlt
aam
sbb
sub
jecxz
and
fiaddl
cmp
ret
xor
lcall
and
pop
adc
lds
or
inc
data16
sub
insl
das
mov
dec
dec
sbb
lock
call
movl
or
test
pop
jle
jb
pop
cs
aaa
aaa
pop
lret
mov
fnstsw
sub
dec
fidivl
cltd
aas
push
cmpsb
jae
inc
hlt
lods
push
aaa
fsubrs
scas
shld
mov
xchg
adc
mov
xchg
xchg
and
sbb
fs
sub
lock
pop
ljmp
sbb
jmp
add
fdiv
xor
sbb
ret
mov
cs
mov
insb
lods
testb
mov
pop
scas
or
incl
pop
adc
pop
add
inc
cli
or
cmpsl
mov
adc
xchg
ljmp
inc
sub
subb
popa
push
and
outsl
aas
adcb
call
jmp
mov
ret
or
and
daa
lcall
jecxz
add
idivl
add
outsb
inc
and
mov
cs
inc
pop
out
pop
imul
push
fsubr
call
push
and
nop
mov
sbb
push
lret
push
stc
jg
stos
lcall
sbb
mov
lret
mov
fwait
mov
pop
loopne
adc
xchg
pop
sbb
into
das
div
das
mov
clc
dec
insb
shll
push
stos
das
das
hlt
call
xchg
dec
xchg
mov
dec
fnstenv
call
ljmp
insl
sbb
popa
mov
fdivrl
outsb
push
aas
es
insb
enter
or
inc
push
dec
insb
loope
roll
cmp
sub
lcall
xchg
test
jo
or
popf
xor
out
mov
mov
and
imul
incl
repz
dec
cwtl
stc
fsub
test
insb
pop
cwtl
jg
add
xchg
xchg
jmp
decl
push
js
test
dec
pop
jmp
in
xchg
pop
decl
out
dec
xor
mov
add
sbb
pop
movsb
xlat
sub
adc
mov
mov
testl
xchg
bound
jae
mov
lcall
rorl
add
dec
push
sbb
and
popf
adcl
mov
aaa
jle
insl
ljmp
int
xor
mov
xor
jno
and
and
cs
movl
pop
cli
push
mov
and
jmp
lock
testl
pushf
jmp
sarl
call
movsb
stc
dec
fs
mov
insl
cmpsl
shl
rorb
inc
mov
pop
lret
aad
mov
cmp
pop
test
mov
cltd
mov
jns
les
cli
in
inc
and
xchg
hlt
dec
sub
and
jg
addr16
add
adc
lahf
js
arpl
out
das
cld
ljmp
xor
mov
in
test
mov
or
mov
call
movsb
jno
or
adc
pop
cmp
je
loopne
mov
outsb
insb
jmp
aad
das
hlt
movsl
jge
sub
dec
shlb
mov
mov
pop
bound
stos
nop
inc
pop
enter
sbb
ljmp
mov
dec
divb
aaa
out
mov
out
lods
mov
subl
stc
mov
in
push
sub
mov
call
das
popa
daa
fdivrp
loope
fadd
sbb
js
mov
cmp
add
test
lock
imul
jmp
test
data16
incl
jmp
dec
mov
pop
add
mov
imul
and
push
or
clts
or
xor
jmp
pop
adc
adc
lahf
icebp
inc
and
test
lock
cmpsl
push
mov
jg
mov
xchg
mov
outsb
call
and
push
xchg
xchg
cli
lcall
xor
add
movsb
lahf
std
mov
outsl
std
pushl
mov
xchg
addl
add
shll
pop
adc
repz
incl
cwtl
push
test
dec
jne
push
xchg
addr16
lcall
jmp
xor
push
imul
cmpsl
mov
hlt
and
and
jp
mov
and
and
jge
xchg
dec
dec
jne
dec
out
mov
pop
dec
out
cmp
mov
jne
nop
scas
push
data16
or
test
mov
pushl
xchg
sub
inc
dec
cmp
inc
mov
fmuls
fucomip
cwtl
lods
pop
mov
cld
lahf
andl
and
sub
lods
jle
cmpb
das
std
pushl
adc
cmp
dec
pop
roll
pop
push
fimuls
sub
test
aas
dec
in
ret
jge,pt
gs
fwait
push
mov
dec
jecxz
loop
dec
sub
or
push
jecxz
ret
pusha
mov
pop
add
inc
sub
out
push
dec
lahf
mov
dec
in
ud0
xchg
mov
mov
sub
dec
pop
mov
inc
sub
push
fucomip
inc
ss
lods
cwtl
pop
dec
je
pop
push
sti
xchg
adcl
lcall
mov
or
adc
inc
xlat
dec
xchg
fstp
pop
mov
or
incl
push
fdivl
dec
movsb
mov
sub
pop
xor
jecxz
daa
jo
pop
dec
inc
lret
adc
push
push
icebp
in
xchg
push
dec
add
adc
jg
fucomip
sbbl
outsb
sub
nop
xchg
rcrb
jg
call
imul
or
push
xchg
mov
int3
mov
or
sar
decl
sbb
aad
jnp
sbb
mov
xor
mov
mov
xchg
cld
mov
stos
test
sbb
movb
stos
or
jns
push
hlt
cmp
fnstsw
es
jmp
mov
iret
rcl
and
je
repz
jge
fbld
mov
cmpsb
push
adc
jmp
out
lret
xchg
js
aad
sbb
icebp
shll
cltd
sub
cwtl
cmp
fimuls
xchg
jle
mov
in
out
add
adc
scas
push
jns
scas
iret
fcmovnbe
mov
clc
outsl
fwait
lea
xchg
clc
sbb
sub
dec
scas
cs
icebp
push
lcall
xchg
adc
ds
ficoml
jmp
jnp
stos
fidivl
repz
cmpsl
adc
lahf
lds
jmp
pop
and
lcall
xchg
inc
pushf
out
add
out
mov
mov
ret
add
insl
inc
adc
dec
add
test
xor
cltd
cmp
mov
mov
aaa
fdivs
xor
cmp
mov
xor
cmc
jmp
mov
lea
cmpsl
out
and
lahf
xchg
mov
push
lcall
dec
push
xor
sbb
stc
mov
sti
cmp
test
decl
std
lcall
sbb
add
sub
cli
jo
ljmp
int3
or
shlb
jp
xor
fnstsw
jmp
sbb
popa
xorl
pop
inc
mov
lea
pop
loopne
xchg
mov
in
or
cmc
jno
sub
mov
inc
cmp
xchg
push
jo
insb
ret
adc
sahf
xchg
cli
outsl
sarb
push
icebp
loopne
pop
xor
jmp
insb
xor
sub
pop
or
push
loope
xchg
in
jno
sub
icebp
xlat
imul
ljmp
pop
data16
icebp
push
mov
mov
cmc
xor
mov
mov
inc
pop
sar
call
fstps
fadds
js
dec
sahf
mov
hlt
sbb
jnp
lcall
mov
in
test
add
and
loope
or
inc
ljmp
or
jg
add
mov
mov
jne
sub
xchg
push
jmp
mov
out
movsl
ret
or
xchg
int
imul
lret
mov
dec
std
pushl
or
xlat
bound
cmp
icebp
scas
mov
call
inc
dec
enter
xorb
loope
jge
ss
adc
in
ljmp
mov
mov
bound
sub
das
fs
sahf
test
incl
rclb
xchg
ret
push
test
dec
insb
pop
pop
jno,pn
push
les
popf
test
mov
stos
add
inc
outsb
xchg
stc
aas
fisttpll
jmp
mov
sbb
addr16
push
jl
ljmp
les
mov
jecxz
push
mov
dec
dec
jbe
pop
and
incl
mov
pop
push
imul
mov
adc
fldt
mov
xchg
jnp
mov
mov
xchg
cli
inc
addr16
pushf
shr
stc
mov
decl
push
cli
add
lods
mov
sbb
jns
inc
popf
mov
mov
jg
xor
lret
out
aaa
out
mov
jge
call
jmp
mov
adc
aas
test
add
adc
call
fsincos
pop
aad
sub
or
push
add
imulb
pop
adc
mov
cli
in
in
lea
je
pop
into
dec
jmp
lds
and
push
pop
in
jle
dec
sbb
pop
mov
and
jge
sub
cmc
cli
jg
jecxz
xor
daa
dec
jne
cmp
mov
jo
inc
fbld
test
arpl
into
sub
loope
test
xchg
cmp
aaa
clc
loope
xchg
mov
xchg
sub
or
cs
decb
sub
or
ljmp
adc
bound
push
or
mov
repnz
cmpb
push
mov
adc
add
sbb
in
and
nop
adc
push
adc
fmull
sbb
lock
jg
mov
pop
imul
scas
nop
pop
outsl
stos
call
push
cmp
add
and
sub
ja
sti
iret
push
cld
outsl
icebp
jmp
cli
rorb
push
add
mov
loopne
incb
mov
rcll
lock
das
or
call
cvtps2pd
test
ljmp
sbb
pop
lods
aam
adc
in
clc
test
std
ljmp
cmc
aad
subl
jl
xor
movsl
movsl
xorb
outsb
pop
lcall
repnz
mov
lds
bound
mov
outsl
mov
pushl
dec
push
sub
test
lock
movsl
std
out
sti
xchg
mov
inc
pop
loop
jg
inc
pop
jge
sbb
jns
add
data16
inc
data16
fildll
iret
out
push
and
jge
cmp
mov
loopne
xchg
into
lcall
clc
jp
add
dec
femms
arpl
cmpsb
push
mov
jbe
loop
pop
ljmp
cmc
xor
cs
fisttpll
dec
pop
outsl
jp
inc
mov
movsb
sub
gs
lret
lcall
xchg
subb
out
inc
pop
inc
icebp
mov
popf
push
mov
loop
ljmp
and
movsb
pop
aad
sahf
into
mov
mov
lds
pop
loopne
jecxz
pinsrw
jge
jmp
sbb
xlat
pop
pop
or
dec
pop
decl
test
loopne
icebp
movsl
xchg
push
xor
mov
mov
push
repz
jmp
pop
and
ss
cmc
lods
mov
jle
inc
sub
push
and
or
movsl
shll
loop
cld
jmp
xlat
outsl
sub
js
cmpsb
pop
popl
xor
out
in
call
stos
imull
jmp
add
and
push
pop
fstps
call
dec
jne
ret
mov
adc
mov
jl
inc
lods
adc
pop
dec
or
test
test
incl
sub
fbld
push
pop
rclb
jge
lea
sub
arpl
xchg
pop
lea
cli
ljmp
stos
mov
insl
mov
or
fnstsw
sbb
ljmp
lock
fdivrs
shlb
lods
loop
sub
mov
imul
gs
and
push
ret
inc
stos
mov
xchg
push
jmp
xor
fdivl
cmpb
or
add
mov
in
or
scas
hlt
lock
mov
add
dec
lcall
lock
orl
fsin
mov
cmp
jl
and
sub
sbb
add
aad
or
xor
mov
mov
negb
pushl
faddp
pop
pop
push
lahf
pop
lods
loopne
jl
fimull
or
push
std
sbb
incl
mov
dec
fdivrl
mov
icebp
outsl
fdivr
in
cltd
mov
out
pop
cld
xlat
mov
sti
xor
and
or
mov
jl
or
cmp
push
leave
mov
ja
pushl
cli
aas
adc
push
push
or
push
test
out
mov
scas
lcall
aad
jl
xchg
sub
or
mov
loop
push
jge
gs
decl
lahf
xor
fcmovnu
lcall
daa
in
mov
das
adc
adc
xchg
pop
or
js
gs
mov
outsl
icebp
decl
push
lcall
je
pop
testb
insl
sub
or
lcall
es
ds
mov
pop
fisubl
mov
mov
imul
mov
icebp
dec
addr16
adc
fildl
dec
xchg
jmp
pushl
ret
sbb
or
loope
cmpsl
mov
imul
jo
mov
clc
mov
incl
scas
xor
sbb
cmp
mov
pop
lret
test
icebp
inc
cmp
mov
jmp
dec
jnp
outsb
loope
sahf
cmp
cmpsb
test
ret
insl
sti
xchg
adc
call
aad
cmpsb
and
push
or
pusha
fadd
lea
jle
dec
pushl
inc
and
mov
pusha
adc
aam
fisttpll
ret
call
and
imul
sarb
loope
out
lahf
or
stc
sbb
outsb
cld
and
mov
ffree
int
inc
jge
out
cmp
fs
aaa
popf
mov
cmp
adc
js
and
add
add
jae
rcrl
jbe
jns
repnz
fdivrl
jo
sbb
les
repnz
inc
sbb
push
mov
mov
xchg
push
lahf
push
mov
mov
adc
dec
es
icebp
out
push
push
cmp
cld
std
movsl
daa
shr
add
xor
mov
pushl
js
sub
scas
lods
add
cmp
outsb
xlat
push
pop
pop
and
and
sahf
dec
dec
inc
ret
imul
add
aam
lret
mov
sbb
js
stos
inc
sub
int
sahf
test
push
mov
jge
push
mov
mov
adc
cld
sbb
mov
jecxz
inc
in
nop
lea
clc
loop
movsl
mov
sbb
xchg
cmpsb
cmc
ret
daa
sub
inc
xchg
popf
idivb
push
in
int3
aas
outsl
subb
add
icebp
in
cmp
cld
call
rolb
scas
cli
fwait
ret
jae
sub
incl
sahf
shr
xchg
repnz
mov
mov
test
aas
pusha
stos
inc
and
pop
lcall
out
jecxz
es
aaa
pop
mov
push
mov
pop
adcl
mov
sbb
idiv
incl
jg
xlat
sarb
mov
scas
jb
mov
test
inc
call
push
fwait
push
iret
dec
jns
dec
dec
rcr
sti
aam
mov
test
jle
in
subb
mov
js
ret
dec
out
and
pop
mov
into
aad
push
shll
fmull
xor
jae
adc
int
xorb
add
mov
xchg
jl
fstpt
loopne
dec
lods
mov
pop
test
stos
fucom
or
shrb
or
clc
add
dec
cmp
sar
xor
fwait
out
push
mov
adc
inc
ljmp
add
sbb
es
jmp
xchg
sbb
pushl
and
inc
aaa
mov
inc
lock
ror
out
hlt
mov
sbb
movq
sub
aaa
repz
jno
dec
fs
add
ljmp
cmc
push
lret
in
pop
shll
cmpsl
ja
mov
pop
movsl
xchg
bound
add
sahf
sub
clc
jg
sar
pushl
xor
lret
imul
roll
movd
outsl
jo
dec
push
pop
decl
mov
cmpsl
mov
aad
cmp
push
ret
cmpsl
jns
jmp
push
outsb
loopne
jb
imul
dec
sbb
arpl
push
ss
scas
lock
mov
cld
dec
repnz
jle
mov
lcall
xor
adc
mov
jmp
pop
pusha
adc
jmp
je
push
push
int
xorl
sarb
popf
shrl
clc
ljmp
dec
dec
push
mov
js
in
dec
sub
xlat
popa
inc
dec
ds
adc
bound
push
mov
rcll
pop
inc
int
cmp
cld
call
pop
adc
and
add
cmpsb
push
fildl
flds
sbb
jle
mov
add
fsts
aaa
and
add
cmpsb
pushl
mov
jecxz
and
loop
xchg
xchg
inc
js
pop
jbe
mov
std
decl
lods
fcompl
xchg
xchg
repnz
dec
mov
add
mov
add
lcall
test
in
pop
in
stos
sub
inc
ffreep
idivl
mov
shrb
outsb
sbb
mov
lock
xchg
add
sub
pop
fidivs
setae
inc
jge
dec
stos
clc
incl
icebp
loope
xchg
pusha
dec
pop
or
neg
dec
jo
mov
lock
jmp
cmp
push
cs
xorl
sar
std
fcomip
dec
call
sbb
out
jnp
inc
rorb
cmp
mov
loop
int3
arpl
and
or
fmuls
ret
les
adc
push
pushl
lods
repnz
ja
in
fsubr
or
call
cmp
mov
push
cmpl
inc
inc
mov
popa
sti
jecxz
sarb
insb
inc
lea
mov
orl
arpl
dec
inc
in
pop
lcall
incl
scas
ljmp
xchg
pop
adc
xchg
or
xor
adc
sbb
popa
js
pushl
rorb
out
imul
mov
fnstsw
xorl
pusha
add
mov
subb
clc
push
inc
pop
jecxz
ljmp
pop
sbb
test
sub
pop
scas
mov
popl
pop
jne
stos
lods
ja
mov
jg
into
stos
ret
xchg
jg
outsl
insl
cmp
xor
andl
xchg
mov
hlt
iret
xor
xchg
dec
rcrl
push
dec
fcos
decl
movsb
into
dec
les
jp
fbld
sbb
jecxz
xchg
cmp
dec
int3
inc
push
ljmp
outsb
sbb
xor
stc
cmpsb
mov
sub
jne
imul
movsl
mov
lcall
or
dec
lock
mov
arpl
jle
jecxz
rcrb
daa
shll
fbld
lret
fdivrl
call
int3
add
movsb
jecxz
sbb
imul
adc
jno
pushl
lcall
addl
sarl
dec
popf
data16
sub
jb
ljmp
dec
jmp
ret
out
stos
pushf
sub
mov
outsl
push
sbb
inc
lcall
andb
jo
out
out
sbb
std
push
test
cmp
testl
fistpl
pop
xor
test
mov
mov
je
imul
icebp
decl
sbb
push
movsb
inc
icebp
add
jb
or
inc
mov
out
lods
pushl
repz
imul
out
lcall
jmp
imul
mov
cmp
mov
lods
lods
add
and
shll
shl
outsl
mov
push
fimuls
dec
push
fwait
std
jg
jmp
test
bound
mov
popf
stos
gs
jns
jbe
ljmp
inc
or
push
test
lahf
xchg
mov
pop
leave
daa
cmc
dec
ss
pushl
adc
clc
xor
scas
or
in
test
stos
jg
or
dec
sarb
or
jmp
jns
push
mov
mov
fnstsw
mov
xchg
mov
enter
push
das
hlt
lods
mov
fadds
shlb
ret
call
mov
dec
shll
popa
ret
mov
aas
out
fucomip
pop
and
ret
mov
mov
pop
sets
pushl
pop
leave
pop
popa
push
sarl
js
fstps
mov
mov
aad
in
fdivl
push
test
pop
jg
icebp
stos
aam
add
repnz
mov
inc
test
xor
popa
sub
inc
dec
and
mov
mov
adc
xchg
cli
rol
mov
mov
popa
in
mov
mov
addr16
push
lcall
subb
imul
je
jne
aas
pop
lgs
jg
stos
pushl
icebp
test
es
and
in
fsubl
aas
xchg
imul
imul
cltd
in
fs
adc
std
inc
fdivrp
push
pushl
sub
sti
push
push
mov
testb
mov
sub
sub
lret
rorb
sub
dec
in
test
fcmovne
inc
popf
pushl
ss
pop
adc
inc
inc
insb
cmp
push
adc
stos
mov
fbstp
call
sub
rolw
test
lcall
decl
xor
jmp
pop
call
xor
insl
add
inc
and
movsb
jge
mov
lahf
shr
iret
or
mov
setb
inc
hlt
aaa
xchg
cld
add
xlat
repnz
cmp
sti
es
jne
cwtl
dec
outsb
movsb
std
jmp
enter
xchg
push
pop
inc
enter
aaa
xor
adc
mov
xor
ljmp
ja
adc
aam
mov
add
inc
insl
aaa
idivl
call
or
push
push
out
and
aam
mov
pop
pushf
in
cmp
insl
rcll
addl
mov
push
outsb
lods
repz
fcoms
or
sbb
aas
cwtl
cmp
or
mov
push
mov
cmp
mov
mull
push
and
pushf
mov
adc
incl
lcall
mov
and
xchg
dec
mov
dec
mov
cld
mov
mov
mov
jb
adc
mov
push
adc
push
mov
pop
divl
les
jmp
and
sti
call
jg
cmp
add
lea
cmp
cmp
mov
bound
pushl
mov
sbb
xor
and
lret
call
inc
loop
scas
repz
or
scas
lds
lcall
jno
and
jno
mov
lcall
outsb
out
adc
sbb
int
lea
push
mov
inc
xor
dec
sub
iret
mov
ds
das
adc
push
lret
in
out
jg
jnp
clc
pushl
pop
xchg
test
or
stc
mov
sub
mov
sub
pushl
loop
mov
pushf
mov
jmp
inc
arpl
pop
add
das
pop
mov
dec
lods
scas
push
lea
dec
mov
sti
mov
inc
xchg
cwtl
pop
das
adc
out
psllw
jae
or
dec
dec
call
clc
movsl
nop
sbb
ret
inc
or
adc
lahf
pop
shr
jmp
jb
push
xchg
adc
enter
ljmp
dec
imul
add
aam
inc
pushl
pop
clc
es
xorl
cmp
shll
xor
pop
sti
ss
ret
stos
add
inc
pop
mov
and
lcall
pushl
dec
mov
repnz
pop
xchg
inc
mov
fcoml
mov
idivl
pushl
dec
push
push
xchg
fcmovu
mov
cmp
sub
cli
push
pop
rclb
test
dec
shrb
dec
pop
loop
mov
fistps
icebp
jbe
lahf
inc
xchg
mov
adc
insb
popf
lcall
fidivs
mov
loopne
sub
pop
mov
bound
das
lods
cmp
ljmp
push
pop
fdivrl
shl
lods
dec
add
xchg
cmpsb
add
lcall
or
clc
pop
rorl
cmp
xchg
inc
and
in
adc
xor
add
dec
lea
add
fisttpl
incl
leave
jae
pusha
push
pop
inc
cmp
pop
inc
stos
loope
jbe
sarb
movsb
and
mull
xor
sbb
rcl
loop
adc
or
lea
sar
jg
aad
inc
xchg
mov
loopne
xchg
popa
mov
repnz
out
push
and
push
das
mov
add
or
call
adc
stos
rorl
popa
mov
xchg
add
fldcw
jg
xor
pop
and
lcall
into
pop
enter
lret
in
pop
clc
loopne
add
lods
outsl
hlt
lahf
cmc
dec
int3
jbe
movb
xor
or
add
cmp
das
xchg
adc
or
and
pop
outsl
cmc
sbb
adc
mov
fwait
inc
pusha
push
call
cmp
out
psadbw
loop
adc
and
lcall
in
pushf
aas
pop
mov
mulb
adc
xor
stos
push
xchg
roll
jl
jle
mov
pop
stc
mov
movl
mov
jle
jp
jg
jg
cli
xchg
mov
cwtl
jmp
stos
jge
loope
mov
loop
push
sbb
adc
decl
xchg
loop
call
out
mov
push
adc
add
outsw
cli
incl
popl
mov
cs
cmpl
cmpl
dec
xor
cmp
std
cmp
outsl
std
jg
sbb
mov
ficoms
stos
dec
hlt
jbe
jg
ljmp
mov
xlat
inc
jo
mov
rorl
cli
inc
xchg
clc
jns
mov
mov
jne
ss
call
out
test
movsb
repz
ret
add
push
jp
outsl
rcrb
nop
ret
inc
pop
pop
jnp
popf
inc
jmp
fistps
mov
jmp
sub
in
out
add
mov
dec
xor
call
mov
mov
or
adc
fildll
mov
push
in
stos
test
cmc
and
jmp
movsl
and
push
mov
test
movups
out
inc
gs
pop
push
in
decl
cld
incl
aaa
popf
jmp
push
sbb
inc
ficoml
in
repnz
jo
inc
push
cmc
mov
xor
cmp
filds
call
inc
or
ljmp
imul
sub
rcr
and
mov
lcall
sub
and
or
inc
stos
inc
cmp
adc
sub
adc
dec
jmp
loope
pop
out
xor
shl
jge
in
dec
jns
pop
mov
cmp
loopne
imul
push
das
push
daa
das
mov
dec
dec
fisubrl
divb
decl
mov
jmp
mov
add
and
gs
incl
imul
cmp
and
lock
lret
xchg
mov
ret
cli
decl
ljmp
es
push
loopne
xor
mov
inc
push
stc
popl
pushl
icebp
dec
lahf
gs
aad
lret
iret
ds
das
xchg
into
inc
mov
lcall
pushl
cmpb
pop
rcl
fwait
in
xor
ret
pop
xor
jbe
mov
mov
push
mov
jmp
lcall
xor
push
sbb
mov
or
rcrb
lcall
in
insl
test
mov
sub
fmull
aas
mov
aad
mul
les
xor
mov
mov
rol
jo
in
push
push
push
dec
loopne
pop
std
pushl
jecxz
pop
decb
mov
scas
push
insl
sub
sbb
call
xchg
sbb
ficompl
cmp
mov
cli
call
into
std
xchg
lret
popf
or
mov
lcall
jg
jmp
ss
xchg
fidivs
mov
pop
or
cmc
imul
cmpsl
decl
icebp
cmp
in
adc
push
addb
adc
gs
lcall
sub
cmp
inc
pop
mov
out
xor
xor
or
dec
pop
test
mov
jmp
rorl
and
cli
int
jmp
mov
rclb
lcall
pop
jg
fildll
mov
sbb
or
jmp
push
mov
push
cld
or
pushl
adc
xchg
in
negb
and
xchg
push
ljmp
inc
cmc
hlt
lret
stos
and
pop
shlb
adc
rol
lcall
mov
cmpsl
fsubs
mov
mov
or
push
bound
fucomip
mov
decl
ja
sahf
outsb
and
out
push
jo
adc
jmp
xorl
dec
pop
xchg
int3
mov
in
sub
decl
sbb
daa
lret
shlb
adc
xlat
pop
fcmovnb
out
ja
mov
mov
daa
das
push
into
sub
jg
and
adc
inc
push
cmp
je
pop
ja
insb
ja
mov
jge
mov
mov
xor
fsubs
dec
mov
lods
cs
mov
addr16
fwait
sub
dec
adc
push
inc
mov
ja
out
cmp
das
cld
lret
and
rolb
idiv
in
std
pusha
fidivs
dec
lds
pop
sbb
inc
sbb
incl
jmp
call
or
loop
out
mov
int
push
lea
inc
xor
sbb
in
into
mov
fsubrl
scas
std
sbb
fildll
das
adc
ret
iret
cvtps2pi
inc
pusha
inc
jae
incl
mov
lods
or
fdivrs
insb
lcall
pusha
mov
pop
inc
repnz
push
jp
lods
jo
icebp
incl
cmpsl
hlt
das
idivb
cwtl
adcl
xlat
scas
in
push
jbe
and
ljmp
mov
dec
sbb
jmp
insb
call
sub
test
add
jg
pop
int3
jno
arpl
adc
sub
test
jmp
pop
jb
decl
pop
sub
cmpsl
adc
pop
mov
pusha
in
fsts
addr16
aam
sbb
cld
fbstp
mov
mov
aas
add
mov
fisttps
pop
and
movsb
popf
pop
mov
jae
pop
decl
out
les
jo
pop
fisubrl
inc
mov
jmp
and
mov
pop
lods
aad
and
rcrl
sbb
and
inc
pop
mov
rorl
mov
add
xchg
jno
xchg
cltd
subl
mov
inc
cwtl
rclb
mov
cmp
cld
ljmp
scas
out
sbb
dec
clc
adc
das
pop
shl
iret
fcmove
xor
jns
int3
dec
mov
repnz
mov
scas
mov
test
incl
dec
cli
daa
imul
lret
stos
scas
add
mov
jo
call
fnstcw
iret
lea
mov
lahf
das
repnz
and
pop
pusha
sub
add
pushl
inc
xlat
push
icebp
das
mov
loop
mov
insl
pop
add
decl
cld
ret
push
mov
xor
lods
call
fmulp
pop
in
mov
sub
sub
hlt
sub
mov
xchg
pop
lea
cmp
mov
add
decl
std
mov
xchg
nop
mov
mov
das
xor
inc
fisubrl
mov
and
pop
sub
pop
xlat
or
rorb
fistpll
inc
sbb
inc
lcall
rclb
gs
sub
ljmp
xlat
sbb
das
xchg
out
out
popa
stos
lods
std
aad
pop
cld
pushl
add
in
jp
jp
aaa
mov
jmp
add
and
sbbb
mov
fldenv
inc
cmp
dec
adc
mov
fisttpl
in
mov
dec
inc
mov
jnp
icebp
lea
adc
lret
sahf
insw
push
xchg
std
sar
in
sti
jo
jl
push
mov
movsl
xor
scas
push
and
sarb
negb
or
pushl
jne
or
decl
icebp
jl
sub
decl
mov
mov
aam
mov
xchg
push
sub
sbb
adc
call
vucomiss
popf
call
movsl
mov
pop
iret
movsl
cmp
int
jl
xor
mov
push
lds
rcl
cmp
pop
jmp
movq
cmp
pushl
mov
mov
nop
dec
sbb
sbb
cmp
in
push
data16
mov
outsl
hlt
mov
popa
mov
ss
sub
push
aad
inc
rclb
xor
shrb
xchg
gs
mov
push
xor
lock
repz
and
push
call
imul
inc
imulb
mov
testb
notb
call
incl
jp
mov
insl
cmp
xchg
test
and
xor
outsl
or
adc
decl
push
push
es
and
pop
jnp
dec
add
adc
add
cmp
cmc
outsl
lods
sub
lahf
lcall
scas
push
sub
shrl
pop
cli
xchg
in
push
icebp
mov
sbb
pop
ret
sub
das
sbb
std
lds
cmp
jg
mov
cli
cli
fstp
jmp
add
mov
int3
mov
xchg
sub
push
stc
icebp
xorl
loopne
shrb
incl
add
dec
sbb
ret
aaa
dec
scas
mov
mov
mov
mov
inc
xchg
out
dec
loop
sbb
hlt
lcall
push
push
dec
mov
pop
jecxz
notb
div
push
push
mov
das
ds
stos
data16
xlat
ss
test
fwait
adc
ljmp
ja
jle
fwait
lods
or
jne
out
inc
inc
subl
push
inc
jnp
push
call
fstpt
xor
fucomi
cwtl
ficoml
xor
jnp
push
push
mov
lcall
shlb
push
test
sub
mov
mov
movsl
dec
jae
and
aaa
ss
aaa
mov
mov
mov
cli
cmpsb
mov
mov
inc
ljmp
call
sub
mov
jle
and
add
xor
les
lcall
mov
add
sub
outsb
inc
or
pop
mov
orb
lcall
dec
push
cmp
jle
pop
ret
pop
sub
stc
pop
scas
mov
aam
jno
dec
cmpsl
dec
inc
and
call
mov
stos
into
lahf
insb
mov
dec
fildll
mov
fcmove
out
cmpsb
inc
js
dec
mov
and
dec
in
scas
lahf
and
mov
negl
jg
ja
and
int
call
sub
xor
cli
pop
fs
stos
rcr
or
pop
rorl
cld
aas
mov
in
lahf
or
rolb
mov
aas
std
mov
lcall
and
and
and
movsl
clc
or
push
sub
movsb
cwtl
mov
aaa
sub
mov
pop
cmp
movsb
cmp
mov
xchg
stos
and
cmp
xchg
outsb
mov
repz
push
hlt
imul
pop
out
mov
xlat
adc
xchg
cmp
cmp
lock
dec
or
dec
cmp
outsb
in
push
xchg
cmp
or
fldt
pop
cmpsl
sbb
jbe
xchg
mov
test
add
jge
hlt
outsl
sub
das
xchg
sbb
cmpsl
inc
ljmp
cmp
jnp
pop
imul
xor
mov
lahf
and
sbb
ljmp
out
xchg
lock
jmp
inc
sbb
push
mov
jo
ss
mov
mov
fstl
pop
popf
and
xchg
stos
cmp
mov
and
mov
mov
ljmp
sbb
add
filds
sub
sbb
rorb
xor
mov
stos
nop
repnz
pop
ficoms
jle
jno
push
xchg
daa
ror
push
sbb
mov
mov
addb
leave
xchg
fwait
aaa
jg
call
stos
pushf
xor
xchg
or
push
mov
inc
push
decl
fildll
inc
xor
xor
jge
push
stc
pushf
fists
and
stos
add
rcrb
cmp
pop
movmskps
sbb
xor
into
aas
shlb
mov
push
jae
iret
in
sahf
mov
sub
roll
inc
fidivrl
adc
or
push
adc
or
decl
pop
inc
or
xchg
push
bound
daa
sar
es
shlb
and
lcall
mulb
loopne
and
or
das
nop
xchg
loopne
fcompl
lcall
mov
imul
pop
mov
push
or
rcrb
mov
add
test
pop
jg
jne
and
call
mov
les
mov
outsb
addr16
in
pop
pop
jl
stc
ljmp
mov
lods
aaa
xchg
decb
pushf
mov
ljmp
dec
scas
jg
cmc
or
lea
das
mov
xor
pop
je
insb
jg
mov
or
fcmovnu
push
ljmp
shrd
sti
decl
mov
push
cmc
lcall
out
push
test
insb
hlt
insb
in
out
mov
pop
and
call
mov
mov
jl
jne
loopne
call
arpl
sub
xor
mov
mov
int3
imul
mov
xor
lret
out
fldl
mov
out
outsl
and
push
inc
fdivl
inc
sub
jg
pop
pop
ret
cs
push
ljmp
sbb
repz
jns
hlt
pushl
jp
sbb
idivl
push
into
ds
decl
nop
xor
leave
je
push
rcrl
push
or
mov
jo
push
popl
pushf
mov
sbb
lret
icebp
sarl
pusha
dec
cmc
jg
call
pusha
leave
out
pop
sub
std
xor
sbb
or
ljmp
shlb
mov
sub
das
aad
mov
adc
das
hlt
pushl
cmp
xor
out
mov
cmp
fwait
loope,pt
mov
cltd
leave
mov
xor
lods
pop
lods
out
mov
cmp
lret
sub
lods
pushl
cmpsl
dec
sub
mov
or
jbe
daa
out
ret
outsl
jno
jmp
push
inc
sub
flds
add
adc
popf
xchg
lcall
andb
daa
dec
cltd
popf
jecxz
addr16
fst
jnp
mov
and
clc
inc
cmc
jmp
dec
xlat
push
rolb
jg
jmp
dec
mov
icebp
pop
xor
and
pop
call
xchg
fbld
mov
push
out
or
jne
jg
daa
ret
lcall
and
rclb
daa
dec
fsubrl
jo
rcrl
jg
call
out
sbb
push
gs
cld
lock
iret
icebp
mov
lcall
roll
sbb
mov
ret
and
jo
cli
push
decb
addr16
ret
push
sbb
icebp
inc
mov
push
cmc
outsl
jge
test
mov
scas
xchg
and
mov
adc
icebp
mov
sub
inc
sbb
call
push
test
dec
mov
addr16
das
cli
lea
sbb
sbbl
aaa
clc
aad
lea
add
fnstsw
sbb
pop
jp
sbb
cmp
sbb
sbb
in
cld
inc
ljmp
mov
sub
ret
mov
mov
dec
and
loopne
mov
pop
inc
add
adc
pop
jmp
adc
mov
scas
inc
adc
scas
adc
jmp
xor
cmp
aas
js
fnstcw
bound
scas
cmp
sub
xchg
cli
addr16
pusha
ja
add
xchg
mov
sub
xor
rol
movsb
pop
mov
mov
in
out
inc
sub
and
ficomps
add
arpl
cmp
inc
lahf
add
je
sbb
xchg
sbb
pop
loop
push
shrb
jl
aas
xchg
test
repz
adc
adc
adc
pop
mov
decl
ss
sbb
bound
xchg
pop
or
setnp
xor
sbb
push
cmp
shrb
ds
into
jle
mov
mov
jne
in
call
sub
in
andb
mov
rcr
dec
xor
and
iret
decl
lcall
fidivl
mov
jae
or
jbe
mov
mov
pop
clc
in
lret
push
mov
cltd
mov
scas
xor
adc
aam
enter
jle
fs
rol
lods
pop
mov
scas
outsl
xchg
jmp
push
leave
mov
jne
xchg
lahf
jg
push
jg
neg
insl
push
push
cld
adc
mov
pusha
mov
mov
mov
mov
xor
lahf
out
stos
cmpsl
jg
dec
and
ret
fwait
sti
jecxz
jmp
outsb
add
ret
cmpsb
stos
xor
mov
jg
xchg
mov
movsl
fstp
cld
fdivs
fldenv
inc
push
aam
jg
mov
xchg
jne
inc
decl
inc
push
inc
insl
aaa
inc
and
imul
sahf
pxor
mov
jmp
lcall
in
imul
fucompp
cltd
stc
mov
pushl
ret
fmull
sarl
lcall
lds
lahf
mov
pushl
mov
call
jns
jle
icebp
dec
sahf
sub
dec
or
fadds
mov
mov
pop
cmovns
dec
and
int3
inc
divb
arpl
ds
incl
pop
and
inc
pop
xlat
pop
xchg
add
or
scas
imul
call
pop
mov
jmp
push
shl
es
and
aam
dec
imul
decl
ljmp
ror
dec
aam
mov
mov
rcr
sti
shrb
incl
inc
sub
pop
xchg
xor
xchg
mov
hlt
rcrb
sbb
imul
not
popf
into
xchg
insl
and
inc
push
sub
jl
sbb
je
ss
adc
fwait
int
andb
and
adc
and
jno
cmp
loop
inc
lret
jge
fwait
mov
leave
into
mov
stos
incl
fucomip
mulb
jg
pushf
adc
idiv
sub
jo
and
iret
aas
mulb
ljmp
fistpll
ret
adc
push
leave
inc
adc
loope
or
imul
add
decl
adc
jp
repnz
and
loop
xorb
insb
mov
push
enter
enter
jae
cwtl
jae
lods
rolb
xchg
adc
pusha
bound
call
outsb
and
push
mov
lea
out
addr16
pushl
jg
add
outsl
in
and
xor
mov
mov
test
jg
dec
movd
mov
addb
nop
mov
ljmp
xlat
push
lods
dec
and
inc
jl
aas
pop
sub
push
insl
and
xor
sti
aaa
mov
mov
inc
inc
ljmp
imul
mov
addr16
cmp
aaa
push
popa
xor
push
mov
repnz
adc
dec
jp
in
stos
and
rorb
loop
cld
sbbl
dec
mov
stc
sahf
dec
loopne
sbb
pop
xlat
dec
incl
jge
int3
leave
push
xor
fisttpl
push
rcll
cli
jmp
loopne
mov
add
mov
push
orb
ret
dec
icebp
std
out
cmp
cli
call
xchg
push
mov
leave
insb
ficoms
dec
inc
scas
das
mov
jmp
das
adc
ljmp
mov
adc
xchg
imul
sbb
incl
jecxz
std
ljmp
daa
je
sub
loop
imul
pop
imul
cli
add
mov
outsb
adc
mov
xchg
adc
or
dec
push
call
mov
inc
mov
mov
sbb
cmp
push
pushf
int
movsb
test
mov
jp
decl
or
ret
iret
mov
pop
pop
lods
ret
popf
push
vmaxsd
pop
mov
sahf
test
cld
mov
sbb
or
in
sbb
xor
out
ret
clc
mov
pop
decb
fnstsw
inc
adc
arpl
adc
das
jmp
jmp
pop
cmp
sbb
inc
mov
mov
push
lcall
lods
adc
repnz
dec
cmp
cltd
mov
clc
shr
mov
aad
xor
sub
ljmp
popf
jmp
add
shrl
movsl
or
iret
jnp
or
das
lock
mov
xor
inc
sbb
pushl
ds
outsb
stc
ficoml
mov
push
jo
fisubl
clc
lcall
adc
add
loopne
xor
icebp
push
ficomps
xchg
lcall
pop
sub
pop
aaa
push
jmp
js
sub
jmp
inc
lea
in
dec
jmp
iret
pop
movsl
xor
ljmp
pop
jbe
mov
cmpsl
arpl
pop
mov
fwait
mov
mull
insl
sub
scas
insb
dec
cmp
js
xchg
pop
call
cltd
jno
and
cmp
call
test
les
cmp
enter
daa
mov
lock
incl
inc
je
push
shl
repnz
adc
test
push
scas
repnz
loopne
ret
in
pushl
imul
pop
lcall
jle
push
test
imul
pop
mov
adc
leave
inc
xlat
xor
sub
das
das
fdivrp
push
pop
mov
push
mov
pop
ljmp
loope
shll
arpl
xor
sbb
call
mov
sub
fnstsw
sti
stos
mov
sti
lea
leave
mov
cs
cmp
jnp
push
pushf
sahf
lods
mov
popa
add
xchg
or
inc
pop
popa
jns
and
faddl
pop
mov
mov
call
aad
sahf
add
jmp
xor
inc
push
sub
jle
sub
and
pop
aad
jle
jne
incl
fsubl
sub
incl
pusha
int3
add
cmp
repnz
fdivr
ljmp
push
jae
in
std
pop
xor
lods
pop
fmuls
or
decl
cltd
xchg
rcrb
sbb
pop
adc
add
pop
loop
pushl
fisubl
mov
movsb
daa
aaa
fsubrs
add
incl
pop
mov
push
loop
shll
imul
add
adc
incl
xor
pushf
dec
js
scas
pushf
add
int
stos
mov
sti
xor
idiv
sbb
cld
aad
pop
pop
rorb
jns
mov
dec
xor
mov
inc
popf
pop
in
dec
rorb
lcall
call
sbb
jecxz
movsb
pop
jae
xchg
push
iret
imul
ret
xor
cld
pushl
ja
repz
push
sbb
adc
pop
add
add
pushl
xchg
jecxz
clc
jmp
loopne
xor
mov
and
cmpsl
insb
cmpsl
jmp
repz
adc
jp
gs
pop
mov
sub
cwtl
push
xchg
dec
test
xchg
or
jmp
mov
sub
aaa
cmp
mov
lods
subb
jg
and
int3
stos
push
inc
ljmp
pop
pop
aaa
sub
mov
lcall
std
repnz
ret
ret
jno
stc
int
inc
cld
call
pushf
sbb
inc
nop
out
dec
jbe
and
lds
orb
out
push
inc
or
popa
push
std
mov
or
out
loope
cld
call
lds
or
sbb
cld
movsl
aaa
lds
and
fnsave
out
mov
jp
mov
lret
mov
dec
flds
push
test
jmp
outsl
cmp
and
sub
inc
add
das
inc
mov
hlt
inc
movsl
cltd
loopne
jg
enter
daa
xchg
test
push
dec
cmp
jle
out
mov
pop
pushl
push
lods
dec
mov
stc
fildl
mov
mov
pusha
decb
decl
push
mov
movsb
ret
lret
mov
fwait
xchg
pop
pushf
push
addr16
aaa
and
aaa
sub
call
ljmp
or
ret
movups
push
mov
sti
pop
ljmp
icebp
xor
cltd
lock
mov
mov
js
inc
mov
popf
fdivr
mov
shr
sarb
mov
dec
sub
mov
stos
test
out
adc
jno
pop
ror
dec
into
dec
call
sbb
pop
mov
jne
mov
shr
lcall
cli
mov
push
into
jne
ljmp
jg
push
dec
xor
insl
dec
aas
or
movsl
fs
iret
push
divl
gs
pop
xor
call
aam
test
xor
xor
gs
push
mov
outsl
add
aaa
aam
jno
fcomps
ss
or
xchg
dec
adc
sbb
xchg
sub
outsl
incl
arpl
xor
jecxz
mov
jl
push
test
or
adc
decl
psubq
mov
jbe
lods
xchg
fmull
lods
ret
mov
xchg
decl
dec
mov
lcall
js
aaa
inc
dec
cmpsb
jns
lcall
adc
jnp
call
shr
ss
mulb
jg
fwait
add
rcrb
xchg
mov
or
fimuls
dec
scas
loop
fdivrl
sub
inc
mov
shrl
mov
ja
cld
fisubl
mov
popf
inc
sar
jg
pop
in
jb
and
pop
adc
lahf
push
pop
adc
lahf
shld
sarl
clc
jno
mov
pop
dec
xor
xchg
xchg
sbb
test
imulb
sub
or
jg
fcmovbe
outsb
jg
int
or
and
xor
mov
xchg
ss
incl
ljmp
mov
jbe
fdivr
push
aad
pop
insl
add
shll
fidivrs
pop
sarl
jmp
stos
out
jl
mov
test
cmp
gs
xchg
mov
inc
dec
push
mov
cmp
into
test
xchg
jmp
sub
push
add
mov
shrl
push
jl
popa
cli
pushl
mov
popl
mov
setae
dec
push
mov
mov
xor
jg
idiv
mov
inc
pop
out
sub
or
sub
mov
push
xor
or
incl
sbb
cmp
aam
fcmovnb
mov
insb
ss
enter
cmp
test
out
xor
fisttpl
dec
out
push
inc
dec
cmp
orl
mov
stos
imul
imul
inc
sbb
inc
and
pop
adc
sbb
ljmp
push
cwtl
and
push
pushf
test
xor
inc
outsl
and
movsl
lret
insl
mov
dec
jmp
and
or
jne
movsb
sbb
mov
mov
clc
dec
push
or
loopne
les
dec
sbb
sbb
mov
ja
popa
mov
pop
lcall
mov
mov
in
mov
lcall
add
ficomps
ds
or
jo
pop
frstor
mov
xor
lcall
inc
cmp
lret
jmp
inc
je
aam
adc
push
outsb
lods
push
push
js
jmp
cltd
sbb
jg
and
repz
cmc
icebp
and
sub
mov
data16
push
popa
cmp
cmp
call
pop
mov
sahf
lret
xchg
orb
imul
leave
lods
cmp
push
adc
mov
js
lods
in
and
inc
mov
mov
aam
call
enter
jle
jns
lds
or
adc
scas
cld
scas
mov
leave
fisubrs
jne
mul
lret
adc
mov
ljmp
or
jo
std
shll
or
adcb
xor
cmp
inc
stos
jg
xor
adc
pusha
pop
push
stos
add
dec
ds
ret
pop
or
jns
fmull
insl
mov
ret
xchg
or
sbb
insb
frstor
shl
sbb
xor
enter
out
aam
das
sbb
ficoms
push
dec
std
jecxz
push
cs
nop
insb
lods
addr16
jp
lcall
call
notl
xchg
addr16
in
pop
xor
incl
inc
cmp
int
sahf
pop
test
jle
decl
mov
jg
mov
pop
adc
int
hlt
lcall
mov
or
mov
sahf
xchg
insb
and
call
lods
jg
lea
dec
mov
cld
addl
jp
dec
jno
and
cmp
movsb
insb
push
inc
mov
xchg
push
jnp
outsl
adc
repnz
cld
rclb
mov
incl
test
xchg
loopne
sub
leave
xor
fbstp
push
mov
and
clc
mov
fistps
mov
incb
icebp
mov
loop
cmp
mov
shl
pop
ljmp
out
xchg
cmpsl
stos
stos
ljmp
aam
and
cli
jmp
jnp
out
mov
dec
sub
jge
int
addr16
dec
sub
fisttps
fnstenv
fs
lcall
inc
fscale
jg
ret
sbb
mov
pop
lea
sbb
dec
loope
stos
scas
inc
mov
mov
push
ljmp
cmp
xlat
loopne
fnstsw
lcall
dec
sub
arpl
mul
xchg
inc
fldt
cmp
or
call
or
shrb
cmpsb
addr16
mov
decl
adc
lock
or
or
arpl
repz
lods
subb
pop
scas
sbb
fucomip
decl
or
lahf
ds
sbb
cmp
rcll
call
fs
icebp
mov
adcl
and
xchg
aam
cmc
cld
xor
loop
adc
pop
scas
cli
lods
cli
jecxz
mov
mov
pushl
fidivrl
sub
xor
mov
test
jmp
inc
jmp
or
sar
in
inc
adc
jmp
dec
or
rolb
pshufw
out
mov
outsb
int3
cs
adc
incl
cmp
cltd
test
fildll
inc
inc
mov
pop
push
js
push
pushf
fbld
data16
incl
or
mov
dec
enter
pop
dec
inc
inc
call
xlat
inc
mov
jge
rcll
rcrl
cmpsb
mov
fildl
cli
outsl
xchg
clc
push
mov
shlb
sbb
adc
stos
call
test
js
pop
loop
outsl
jp
lock
test
pusha
push
xor
inc
push
roll
dec
mov
nop
push
xor
cli
adc
pop
filds
negb
pop
dec
jg
pushl
dec
mull
mov
leave
js
mov
iret
cmpsb
subb
adc
pop
pop
in
pop
add
fs
xchg
fdivrs
pop
std
xchg
or
cwtl
insb
dec
xorb
sbb
sarl
lcall
out
test
lods
call
sti
sbb
jne
push
adc
into
sub
aaa
cli
push
and
xor
inc
cmp
adc
sub
and
adc
aaa
in
filds
mov
aas
notb
and
sub
push
ret
cli
or
mov
pop
jae
push
inc
or
xchg
pop
jmp
mov
leave
out
mov
fdivl
stos
mov
daa
loop
fwait
mov
cli
ljmp
or
pop
mov
xor
add
movsb
lcall
xor
jmp
pop
push
aad
jecxz
mov
insl
xchg
adc
fdivrl
jg
pushl
sbb
je
test
mov
mov
aam
adc
pop
adc
push
rclb
nop
xor
cli
out
mov
pop
fsub
add
out
xchg
push
movsb
cmpb
fs
ss
mov
adc
adc
addr16
xchg
push
fisttpll
out
cld
imul
push
rcll
lock
and
mov
add
std
ljmp
xchg
scas
mov
push
mov
outsb
cmp
call
or
xor
inc
outsl
enter
jne
pushl
out
outsb
mov
negb
mov
xchg
sahf
decl
dec
aaa
in
arpl
xchg
xchg
mov
sarb
das
hlt
incl
aad
push
inc
sahf
or
push
cmp
gs
sbb
rorb
iret
jns
mov
jae
incl
je
or
sbb
sub
xor
jl
in
fldt
dec
cld
decl
fisttpl
jg
std
jl
xchg
mov
imul
mov
mov
push
shrb
pop
xchg
mov
cli
clc
pop
call
and
adc
jg
in
in
enter
push
aam
inc
sarb
in
jle
adc
dec
jge
inc
fbstp
orl
lcall
out
push
sti
std
cmp
add
insl
aas
pop
pop
fwait
push
dec
sbb
incl
xchg
mov
inc
jbe,pn
inc
lahf
inc
push
push
lcall
aaa
pop
add
stc
cmp
jl,pt
cmp
add
adc
aam
testl
pop
adc
pusha
push
jo
stc
xchg
cmpsb
popf
test
xchg
stos
jmp
add
cmp
repz
dec
mov
push
inc
sub
pushl
xor
pop
push
jmp
mov
push
jmp
ljmp
sub
pop
inc
fdivs
jno
dec
hlt
inc
jmp
pand
pop
jmp
xchg
fwait
inc
pop
pop
bound
out
nop
lret
movsl
xchg
sub
lcall
fmuls
and
bound
ljmp
lock
xor
pop
cmp
clc
jge
int
jnp
pop
call
decl
push
inc
xchg
insl
repnz
das
and
xorb
int
cmp
inc
mov
inc
out
call
popf
test
out
popf
repnz
fsts
aad
pop
add
idivb
add
mov
lahf
push
ljmp
sub
sbbb
inc
cmp
xor
outsl
std
mov
iret
sub
cwtl
lods
hlt
aad
adc
ljmp
mov
jl
mov
xchg
or
sbb
decl
mov
mov
loopne
pop
inc
adc
and
cltd
or
inc
xchg
movsl
call
lret
ret
leave
xchg
outsl
add
pop
jo
and
lret
push
decl
dec
and
mov
call
fsubrs
es
pushf
stos
fmull
call
mov
insl
and
inc
and
insb
je
inc
sbb
or
push
test
test
out
incl
insl
imul
lea
jp
inc
mov
sbb
mov
xor
sbb
divb
repz
aas
test
sbb
mov
sbb
xchg
mov
xor
loop
cs
ja
mov
push
ret
out
jge
xor
cltd
jp
inc
sub
scas
test
mov
bound
lods
test
push
push
pop
outsl
mov
shlb
push
push
fistpll
das
std
lcall
in
idivb
jo
inc
cmp
ss
add
mov
mov
lock
repz
mov
aad
pushf
adc
push
fcomps
add
test
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
pop
adc
jb
fldt
jmp
add
faddl
add
push
outsl
add
add
add
sub
call
popf
stos
pusha
leave
fildll
push
dec
decb
dec
loope
push
push
push
push
mov
jmp
test
je
push
out
or
outsb
insb
xor
cs
push
mov
cmp
xor
jb
jne
insb
inc
gs
push
add
mov
call
incl
xor
sbb
mov
jl
sar
sbb
adc
ss
clc
cmpl
aas
mov
push
push
jbe
push
or
lea
inc
aad
stc
mov
add
adc
push
push
call
incl
je
or
push
addb
rolb
add
pop
pop
pop
pop
ret
call
or
orl
jne
jne
inc
adc
mov
ret
mov
roll
inc
and
push
repnz
ljmp
je
or
xchg
ds
pusha
push
mov
add
dec
or
push
inc
add
je
mov
call
mov
or
rol
or
cmp
outsl
dec
jne,pn
mov
in
mov
inc
push
jl
gs
iret
pop
mov
xor
mov
mov
shll
cmp
jb
push
cmp
sub
dec
add
andl
dec
jecxz
or
fiadds
fmuls
nop
mov
incl
pop
pop
ret
xchg
add
mov
jl
loope
xchg
or
or
imul
jmp
or
jg
cmp
jae
push
fbld
push
addb
lods
sub
sar
add
mov
cmp
ljmp
add
jmp
jb
inc
sub
pop
frstor
fwait
xlat
push
sbb
rorb
sar
cmp
ljmp
paddw
inc
std
adc
jge
pop
sub
push
loope
adc
pushl
lea
add
push
call
xchg
into
adc
mov
enter
or
shl
rcr
call
fldt
or
adc
push
orl
sub
out
jbe
cmp
add
decb
adc
cld
pushl
shl
sbb
cmp
scas
sbb
pop
pop
mov
pop
mov
sbb
insb
ljmp
rcll
or
test
jl
xchg
nop
rclb
adc
push
jbe
and
decl
xchg
pop
dec
add
mov
addl
xchg
fildl
cmp
cmpsb
decl
lcall
sbb
outsl
ret
ds
gs
mov
lcall
sub
adc
push
testb
div
jne
xchg
or
sbb
push
push
js
pushl
cltd
and
pushf
or
sbb
sub
adc
mov
sub
jmp
push
lods
lods
or
popf
push
adc
cmp
loope
addr16
jo
sbb
inc
out
lea
push
mov
add
call
or
out
mov
push
lock
in
adc
fsubl
je
ss
cmp
fisttpl
push
cmp
imul
call
push
pop
jmp
das
cld
mov
ljmp
rcll
loopne
rep
adc
popw
decl
andl
or
mov
andl
addl
call
in
test
sbb
test
adc
push
mov
clc
lea
push
mov
das
add
inc
dec
dec
jp
std
sti
int3
pop
test
in
clc
and
loop
inc
add
mov
sub
sahf
inc
shr
mov
add
movsl
add
pop
inc
push
or
push
pop
movl
call
and
or
mov
fsts
cltd
sbb
pop
movntq
out
xor
mov
decl
mov
jge
cld
nop
or
decl
or
sbb
out
add
clc
jmp
incl
and
jmp
aam
lea
andb
loope
or
movsb
jnp
movsl
fistps
add
lcall
adc
and
inc
bsr
lock
cmp
xor
inc
push
fdivl
cmp
ud0
jg
arpl
lds
push
inc
orb
clc
xchg
mov
lcall
mov
enter
dec
lock
jnp
idiv
cmp
jmp
test
in
mov
ljmp
cld
jae
lock
mov
cmpb
push
mov
sub
decl
dec
loopne
or
movb
mov
sbb
lcall
or
inc
or
dec
clc
add
jl
push
xchg
dec
cwtl
mov
jge
scas
mov
sarb
push
fisttpl
fcomps
dec
xor
add
jecxz
add
stc
dec
lret
add
sub
jge
lea
call
push
test
cld
xor
sub
push
icebp
or
fsubr
cs
pushl
test
movsb
dec
fdivrs
push
mov
xchg
cs
sub
shl
mov
pop
test
js
ss
ja
daa
sbbl
stc
inc
lcall
xchg
add
inc
inc
call
mov
cmp
pop
scas
subb
lock
or
jb
pop
cmc
pushl
inc
pop
sub
cmc
pop
pop
leave
pop
push
test
notb
push
add
les
add
pop
cli
mov
sbb
adc
cmc
hlt
sbb
sub
push
lahf
and
negb
incl
cmp
int
dec
sub
ljmp
xor
push
or
sbb
dec
loope
adc
or
sbb
rorb
sbb
fsubl
sub
lods
fsubrs
or
call
add
inc
or
adc
inc
dec
rolb
dec
jp
lock
jbe
lcall
repnz
arpl
xor
dec
add
jae
test
push
mov
mov
fstpt
jnp
cli
rep
xor
xchg
out
pop
add
outsl
add
or
push
call
clc
mov
in
nop
add
sbb
cmp
and
mov
lea
decl
incl
lods
stc
adcb
loope
test
adc
cmp
inc
push
int
das
mov
pop
loop
sub
sub
inc
and
mov
inc
add
je
stos
sub
adc
lcall
lret
or
jmp
popa
or
sub
je
push
and
jnp
and
jg
call
push
push
js
call
pushf
pusha
stos
inc
push
aas
push
sub
fimull
xchg
or
pop
or
or
mov
push
clc
add
or
jmp
jne
or
inc
int3
roll
add
movb
shrb
mov
or
jne
fucomip
daa
mov
push
mov
or
call
test
adc
pop
call
xchg
clc
jmp
add
pop
sub
push
add
push
call
cltd
sbb
call
testl
testb
cld
inc
pop
sbb
ret
in
ljmp
ljmp
push
xchg
adc
repnz
push
xchg
xchg
push
pop
out
daa
decl
call
pop
add
hlt
cmpsb
pop
lea
push
sbb
les
ficoml
jmp
leave
dec
cmp
or
les
cmp
push
jmp
sub
dec
jmp
pushl
and
or
jae
mov
js
mov
jg
pop
adc
add
add
jge
push
ds
jg
sbb
sub
shll
or
dec
mov
jne
sub
rorb
or
outsl
lock
xor
xchg
push
push
add
lahf
decl
pop
pop
mov
popf
xor
call
push
psubsw
jmp
cld
add
push
mov
clc
xor
mov
or
and
pop
mov
dec
decl
mov
inc
dec
push
mov
mov
pop
dec
inc
xchg
in
outsl
std
fmulp
inc
in
push
je
jno
sbb
loopne
pop
testb
rcll
repz
jmp
jnp
jl
dec
inc
push
cli
movsb
outsl
rcrl
stos
lea
sbb
stos
pop
into
pusha
cmp
cmp
sar
inc
and
popa
pop
jp
pop
pushf
lcall
push
enter
call
mov
pop
push
test
mov
outsb
adc
lcall
ss
xchg
or
and
lret
dec
push
adcl
push
hlt
push
dec
or
cmp
movsl
sti
int
cwtl
mov
push
push
push
in
pop
xor
aas
ror
xchg
mov
pushl
mov
mov
adc
fsubrs
lret
nop
cli
cmp
push
test
iret
jg
stc
inc
fiaddl
xorl
add
or
movsl
out
fwait
sub
ljmp
or
xchg
movsb
pop
or
mov
lds
cld
outsl
cld
xchg
sub
jae
sbb
mov
pop
or
lret
ljmp
decl
movl
sbb
adc
dec
test
cmp
or
inc
lds
adc
fnstcw
sbb
mov
mov
adc
pop
call
xchg
dec
jle
int
lock
xchg
dec
jmp
das
lock
jmp
lret
dec
test
mov
inc
xchg
test
add
lcall
fs
dec
data16
ret
inc
push
pop
test
pop
loopne
in
jmp
lcall
cld
sbb
inc
mov
cmp
and
xchg
call
incl
push
fs
add
mov
mov
rcl
out
push
cld
mov
sar
jmp
xor
icebp
mov
loopne
lds
fstpl
dec
or
mov
ss
cld
ds
inc
movsl
or
aaa
inc
cmp
pop
or
pop
clc
outsl
jge
lea
daa
inc
jmp
scas
sbb
push
pop
pop
cli
cmp
inc
pop
add
repnz
sbb
sub
pop
sbb
mov
fstpt
call
mov
mov
fiaddl
repnz
or
je
cmp
inc
ljmp
popa
je
outsb
and
outsb
push
push
jo
arpl
clc
jns
mov
cli
in
bnd
outsb
je
std
in
mov
push
mov
cli
mov
jecxz
pop
push
inc
dec
inc
repnz
jmp
sub
and
outsl
mov
inc
sbb
inc
imul
pop
ljmp
cmp
mov
jo
jae
mov
sbb
in
addr16
outsl
js
pushl
gs
call
adc
pop
xor
pop
lcall
or
add
inc
js
add
imul
dec
mov
repnz
pushl
jo
pop
sub
inc
mov
out
insb
sbb
lret
aaa
mov
arpl
stos
ljmp
sbb
clc
mov
and
add
addr16
and
dec
jmp
stos
loopne
je
and
jl
sub
xor
xor
movsb
mov
jnp
sti
int
insl
jae
xor
call
shr
and
out
out
jle
mov
call
jae
jne
stos
jmp
call
jne
mov
sub
jmp
xchg
dec
shl
jg
testl
cmp
cmp
jae
cmp
ja
ljmp
lds
lock
pop
jmp
mov
pop
shlb
xchg
lods
xchg
push
inc
ret
jne
call
mov
push
jb
ret
sub
sahf
cli
sbb
ret
les
js
pop
pop
jmp
fcmovnbe
pop
or
mov
sbb
std
ja
add
pop
adc
mov
lea
inc
add
sar
dec
pop
mov
movb
shlb
lret
das
cmc
mov
rol
mov
popl
push
inc
test
push
push
lea
push
sbb
pushl
sbb
jae
push
mov
add
mov
call
pop
mov
push
fnstcw
das
xor
or
mov
jae
andb
fimull
dec
call
jmp
inc
or
pop
aaa
stos
cld
subl
dec
and
or
push
push
sub
add
xchg
int
mov
pop
jmp
je
aam
outsl
mov
push
aaa
mov
pop
mov
mov
xchg
out
xor
adc
outsl
popa
fs
imul
inc
gs
pop
clc
pop
ja
outsl
arpl
sub
orps
inc
insb
insb
adc
inc
sbb
add
insb
gs
dec
add
add
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
ja
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
ja
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jle
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
sub
push
mov
mov
mov
inc
sub
cmp
ja
mov
mov
xchg
rol
xchg
sub
sub
add
mov
add
mov
loop
pop
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
push
mov
push
dec
repnz
push
call
pop
or
je
mov
add
jmp
popa
ret
popa
jmp
