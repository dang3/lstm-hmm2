push
ljmp
imul
outsb
xor
jp
or
fcmove
xor
dec
cltd
in
jmp
add
out
jge
rclb
push
or
mov
xor
sbb
mov
js
or
sbb
popa
divb
cltd
pushf
aam
push
out
mov
inc
ljmp
cmp
jns
repz
or
in
jp
inc
jns
loope
test
cmp
push
sbbb
xor
push
subl
jg
xchg
dec
call
sbb
pop
jb
fldenv
test
sbb
out
in
xchg
pushf
push
adc
xchg
inc
test
cmpsb
ja
lods
pop
xor
lods
aas
and
jns
and
xchg
sub
ret
add
imul
mov
pop
pop
cmp
movsb
testl
sub
cli
mov
pushf
mov
lret
dec
push
jbe
pop
inc
and
xchg
leave
outsl
rcrl
dec
or
mov
cmp
push
dec
push
or
cmp
ds
inc
lahf
xor
fcmove
aaa
mov
push
inc
sub
cmp
mov
cmp
mov
fisubrs
xor
in
adc
test
adcl
sti
sub
add
and
call
cwtl
cmc
sti
sbb
push
mov
pop
add
cmp
mov
subb
rcrb
aad
out
test
xchg
sbb
mov
cld
popf
push
jp
movsb
xor
mov
movsb
data16
pop
psubusb
mov
dec
icebp
test
or
jge
or
sbb
pop
call
cmp
cmp
rorb
les
lret
cwtl
dec
push
cli
cmp
and
out
inc
sub
and
mov
ds
mov
dec
or
mov
idivb
shll
xchg
cmp
sub
push
jl
push
rolb
js
outsl
arpl
or
jg
jno
sbb
outsb
mov
leave
into
lret
mov
and
inc
lods
popf
bnd
cmp
inc
test
stos
daa
cs
ds
das
mov
push
adc
lret
push
repnz
ss
adc
rcrb
cmc
repnz
inc
xchg
ror
popl
push
add
cltd
and
inc
pop
mov
test
mov
repnz
mov
outsb
sub
jno
xlat
jmp
jge
ds
mov
dec
pop
stos
dec
jmp
aam
or
cwtl
xchg
sub
dec
cmpsb
lahf
and
mov
jae
xchg
shll
inc
scas
push
hlt
in
ret
orps
and
xor
popf
fbstp
or
ret
fidivrs
mov
cmp
mov
cmc
inc
mov
in
add
ja
rcrl
outsl
mov
jno
in
jg
mov
into
andl
loope
in
les
xchg
sbb
mov
adc
cmp
add
add
jns
loopne
push
sarb
mov
push
cmc
pop
mov
popf
adc
adc
mov
cmp
xor
xor
andl
out
les
xchg
fsqrt
out
push
pusha
fisubs
test
push
scas
pop
and
add
pop
jge
push
repnz
or
ret
add
pop
pop
pop
push
mov
movl
xchg
outsb
test
mov
stc
inc
push
xchg
aad
popf
xor
xchg
mov
pop
and
int3
das
jo
add
mov
sbb
xchg
or
call
iret
sti
push
movsl
xchg
push
jg
mov
sbb
fs
push
imul
xor
clc
add
xor
loopne
scas
pop
mov
es
mov
jae
lahf
lock
and
imul
test
cmpsb
xchg
mov
add
push
fs
roll
mov
std
lods
and
adc
sbb
jae
dec
in
inc
scas
xchg
jle
mov
adc
xchg
push
push
cmp
cli
imul
pusha
shlb
sarb
jp
jns
or
outsl
or
sub
jae
popf
arpl
jle
ljmp
test
jae
cli
sbb
lock
in
inc
inc
push
sub
mov
mov
out
in
mov
jp
pop
stc
pop
push
jle
test
or
roll
cmp
jge
jl
cld
adc
mov
inc
cwtl
inc
js
lods
stos
push
test
and
out
lods
iret
add
test
sti
pop
mov
popf
repz
lds
and
lock
xchg
sti
push
jnp
jne
lods
mov
xchg
cltd
movsb
push
je
scas
inc
xorb
pop
xchg
push
inc
pop
movsb
lds
shll
jge
lcall
inc
pop
pusha
xor
sahf
xlat
lds
imul
xchg
sbb
mov
sub
in
lcall
pop
shl
or
sub
daa
inc
sbb
inc
sbb
icebp
mov
out
cli
dec
cmpl
jbe
jns
and
es
jae
mov
or
movsl
unpckhps
lds
xlat
pop
loopne
dec
int3
loop
lcall
pop
cld
fdivrp
js
mov
scas
mov
clc
xchg
mov
aaa
jge
addr16
ss
imul
mov
add
gs
mov
xor
pushf
mov
adc
dec
out
xor
xor
sub
and
stos
mov
or
push
jns
jp
rcl
addr16
outsl
lahf
lahf
adc
data16
sbb
loop
cmp
lods
jle
jl
insl
addb
xor
dec
jl
jae
and
popf
out
fcoms
rcrl
mov
int
fwait
cltd
mov
adc
push
or
je
mov
lret
aam
pusha
sbb
jae
xchg
lret
xor
outsb
popf
mov
or
lcall
dec
lds
arpl
sbb
inc
out
adc
cmpl
inc
cmp
or
pop
jecxz
xor
lcall
mov
sbbl
add
mov
add
dec
mov
int3
or
out
nop
pop
fwait
jp
mov
xor
dec
mov
lret
mov
or
les
pop
jmp
pop
mov
xchg
sbb
dec
cmpsl
or
dec
xchg
das
push
mov
xchg
cli
test
mov
inc
xor
fdivrl
cmp
xchg
push
clc
mov
push
adc
pop
scas
out
loope
mov
mov
repz
stos
out
pop
add
stos
sub
mov
inc
pop
mov
inc
xchg
mov
clc
jp
fistpl
decb
adc
xchg
icebp
mov
mov
xor
jo
and
imul
xchg
cmpsl
orb
lret
scas
ret
fwait
pop
es
outsl
cli
addr16
ss
movsl
inc
nop
push
sub
sub
test
cmp
repz
mov
or
pushfw
lock
or
test
push
or
ja
aas
cmpsb
pop
loop
sub
jb
movl
jmp
stc
mov
xor
and
inc
scas
fs
xlat
outsb
push
mov
add
pop
mov
xor
mov
xchg
inc
fcmovnbe
into
out
pusha
xchg
inc
lret
mov
adc
push
jno
cmpsb
push
cmc
mov
pop
dec
dec
loope
sbb
ljmp
jl
cmp
jecxz
push
lahf
push
ljmp
xchg
pop
bound
xchg
fnstcw
xchg
stos
pop
jmp
subl
add
push
outsb
push
fidivrl
pushf
pop
cwtl
stos
cmp
jecxz
push
clc
ret
adc
hlt
push
repz
add
out
ret
js
xchg
sub
dec
fprem1
xchg
in
ss
fdivs
out
and
cmp
mov
shlb
mov
and
or
es
insl
dec
lods
fisttps
dec
inc
cltd
aas
scas
mov
popa
stos
jl
nop
mov
adc
pop
in
lahf
pop
sub
stc
inc
inc
push
xor
or
divl
sbb
push
inc
sbbb
clc
xor
out
dec
push
test
dec
loope
cmp
lahf
mov
in
adc
dec
out
pusha
pop
cmp
and
cmc
sbb
mov
pop
pushf
jl
mov
inc
stos
daa
add
xor
out
mov
jne
lcall
inc
sub
das
in
out
sub
xor
iret
into
add
cmpsb
inc
mov
mov
test
ret
bound
sbb
mov
in
loop
sbb
addr16
pop
and
notl
imulb
cmp
cwtl
mov
shl
leave
scas
test
repnz
inc
movsl
nop
mov
dec
stc
dec
cld
dec
fs
lahf
adc
and
lds
xor
es
push
in
pop
and
jne
push
adc
push
xchg
xchg
ret
push
outsl
or
cs
sub
inc
out
adc
in
sbb
jne
jl
push
cwtl
icebp
inc
xchg
pop
inc
imul
rcrl
sbb
dec
add
icebp
push
rorl
stc
lds
add
mov
jmp
das
mov
insb
fildll
mov
lcall
push
pusha
mov
inc
sbb
xchg
into
dec
sbb
mov
mulb
or
mov
js
xchg
mov
lcall
xchg
lret
imul
push
add
lret
add
std
dec
sahf
out
out
cmp
adc
mov
inc
jne
push
andl
jo
cmc
addl
dec
adc
dec
xor
lret
pop
fwait
loope
pop
test
jnp
mov
jecxz
stos
jbe
test
xlat
dec
daa
mov
xchg
repnz
inc
push
add
push
call
adc
ss
jg
es
mov
cmp
or
cmpsl
mov
inc
fstps
push
mov
ljmp
js
cmp
push
sbb
cmp
mov
xchg
pop
cmpsb
jmp
push
dec
sub
pusha
sub
test
xchg
testl
xchg
mov
or
sbb
jo
sbb
shll
daa
add
pop
sub
mov
cmp
pop
push
mov
xchg
pop
rclb
aam
pop
pop
not
rcrb
sbb
jecxz
in
cmp
jae
xor
sahf
sti
outsb
outsl
fdivrs
pop
in
stos
ljmp
hlt
mov
das
cld
mov
add
jb
addl
lret
clc
inc
adc
xor
cmp
dec
jo
push
cmpl
lcall
jne
lea
adc
jg
fsubrs
ss
sbb
cmc
leave
mov
out
mov
mov
push
push
mov
pusha
stos
cs
sbb
lret
hlt
addl
loopne
cmp
jno
push
adc
mov
xlat
mov
xchg
fstps
insb
push
mov
cs
mov
pop
mov
xor
insl
imul
cli
in
pop
arpl
pop
mov
cmpsl
daa
lcall
xchg
sbb
int3
adc
outsl
pusha
jo
in
cmpsb
shrl
int
xchg
fsubrl
into
ret
inc
dec
repnz
loopne,pt
gs
popf
out
or
push
lret
in
xchg
sbb
movsl
adc
mov
mov
adc
pop
sub
xlat
mov
imull
xor
adc
push
dec
nop
pop
add
add
adcl
mov
push
sbb
jbe
in
dec
sbb
ds
push
mov
out
xchg
jns
outsl
adc
or
sub
ret
add
fisttps
vaddsubps
shr
jne
hlt
mov
lcall
pop
stos
or
pop
cltd
or
loopne
out
decl
jmp
xchg
outsb
jmp
out
roll
shlb
dec
je
ljmp
mov
sub
orb
sbb
mov
insb
jecxz
test
cli
xchg
add
sub
lock
rcrb
and
inc
add
mov
push
iret
shl
icebp
xchg
jge
pop
pop
xchg
mov
dec
daa
mov
cmc
mov
cwtl
js
adc
in
mov
mov
inc
jns
rclb
add
test
imul
lret
and
fsubl
lret
push
xor
cmp
jl
pop
push
inc
pop
fildl
loopne
xchg
sti
shlb
fwait
in
xchg
sub
mov
rcl
hlt
mov
arpl
adc
adc
mov
dec
mov
lods
add
lret
in
mov
jp
shl
cmp
mov
mul
jb
pop
sahf
dec
inc
inc
sbb
or
lds
test
sub
inc
test
out
cmc
mov
stos
pop
cmc
cmp
jno
gs
adc
jp
pop
repz
mov
loope
int3
push
gs
jmp
push
shl
push
mov
dec
adc
adc
xchg
inc
jl
movsb
clc
xor
repnz
fsubrl
pusha
xchg
sti
jmp
inc
pop
out
lods
pop
cmp
fisttps
pop
lahf
clc
arpl
jmp
ljmp
ja
imul
test
push
aam
mov
icebp
fsubrl
mov
hlt
jnp
mov
dec
cli
add
loopne
imul
scas
cli
insb
mov
mov
sub
cmpsb
mov
mov
inc
inc
or
pop
stos
into
data16
jge
jmp
jl
test
add
xchg
loope
or
lcall
xchg
fisubl
or
jb
call
dec
push
cmp
inc
xchg
inc
pop
mov
adc
mov
repnz
sub
mov
jl
sub
mov
and
enter
xor
mov
inc
and
sbb
lea
inc
jno
addb
lods
fisttps
mulb
xchg
fwait
daa
cli
daa
jmp
pop
movsb
and
pop
xlat
lock
out
xor
xchg
pusha
lret
imul
mov
pop
xor
aam
scas
lds
nop
lock
aam
stos
cmp
add
outsl
pop
sbb
jl
pop
rcrl
and
das
nop
and
jae
adc
adc
xchg
fsubs
leave
cltd
add
push
jno
mov
jecxz
ret
add
add
iret
aad
cli
jb
pop
sahf
out
mov
add
xchg
mov
negb
sbb
sarb
sbb
lods
mov
dec
movsw
pop
cli
cmp
shll
pop
cmp
aas
insl
ds
lahf
scas
leave
gs
sub
or
xor
lcall
adc
sbb
xchg
mov
rclb
daa
mov
jne
mov
sbb
sarl
push
mov
test
in
cli
loop
aam
sbb
es
mov
push
inc
fwait
aam
in
xchg
inc
out
jmp
gs
mov
call
xor
add
out
stc
adc
add
mov
das
inc
testb
jnp
and
lods
jle
or
sub
inc
inc
or
pop
cmpsl
pusha
ret
sbb
imul
dec
je
fbstp
insb
xchg
mov
test
cmpsl
lcall
mov
add
loope
mov
outsl
dec
ljmp
js
xor
stc
nop
movq
push
xchg
scas
or
mov
imul
add
scas
outsl
cs
mov
loopne
popa
sbbb
sbb
mov
sub
sub
sub
clc
xchg
out
jae
rcll
cs
jg
leave
cwtl
ret
cld
pop
xor
dec
cmp
jl
push
adc
inc
nop
xchg
push
xchg
xchg
add
xchg
mov
cmpsb
in
fidivl
std
xor
mov
icebp
xchg
lcall
cmova
sub
sub
mov
mov
xchg
into
sbb
sub
sbb
and
mov
jnp
sub
shrl
leave
cmp
pusha
sub
xchg
add
mov
and
rcrb
dec
push
scas
mov
bound
insb
mov
lret
mov
jae
imul
mov
aaa
cmp
push
sbb
xor
ds
sti
xor
insb
mov
ljmp
stos
lahf
rorl
popa
or
or
fwait
pusha
and
pusha
data16
or
pop
shlb
lea
add
nop
rclb
sub
cmp
int
test
lret
mov
add
sbb
jae
adc
add
mov
dec
and
add
fs
pop
mov
mov
push
imul
sbb
inc
fimull
jge
stos
dec
fnstenv
js
sbb
xor
imul
jbe
xor
aad
or
sarb
mov
jmp
mov
loope
jl
or
movsb
scas
jp
xor
dec
lock
arpl
dec
and
lcall
repz
jmp
pop
mov
cmpsl
jnp
sbb
popa
ds
int
mov
clc
xchg
idivb
cmp
cmp
sbb
push
out
jo
inc
rcrl
lds
std
push
and
mov
insb
pop
sbb
push
jge
pop
insl
xchg
sbb
test
loope
outsb
jno
jno
fdivl
dec
stos
dec
lock
mov
add
dec
out
sbb
xor
pop
mov
dec
les
jb
push
scas
lods
in
push
ret
lcall
cmc
outsb
push
frstor
jo
into
cmpsb
in
sbb
out
in
sub
in
paddd
xchg
xchg
idivb
dec
nop
dec
cs
lods
je
add
mov
dec
mov
nopl
and
iret
jo,pn
and
mov
xchg
movd
ds
lea
pop
xor
jae
lds
mov
js
aad
jbe
xor
in
out
gs
fsincos
dec
cmp
xchg
mov
aam
sub
inc
stos
dec
sbb
les
outsl
jo
pop
xchg
cli
mov
adc
sub
pop
cmp
push
clc
mov
lahf
test
imulb
insl
lds
in
jmp
jnp
xor
jns
or
mov
imul
ljmp
js
pushl
pop
or
mov
and
xchg
cmp
fistps
into
mov
or
xor
dec
xchg
arpl
dec
xchg
out
das
ret
adc
jno
pop
pop
mov
jo
sub
push
pop
adc
out
out
and
arpl
fcmovb
test
ret
jmp
mov
test
std
xchg
das
jge
jo
sti
in
testb
inc
push
hlt
push
pop
xchg
imul
enter
pop
adc
mov
popf
rorl
fcmovne
popl
inc
push
imull
vmwrite
push
xor
adc
ds
mov
faddl
adc
jns,pn
and
cmp
and
in
les
orb
leave
fmuls
mov
adc
sbb
inc
add
mov
jge
ds
sbb
sti
aad
add
pop
adc
hlt
push
add
cli
addl
test
pop
push
jge
loope
mov
adc
aaa
xchg
fnstcw
jne
sbb
fadd
mov
push
js
pop
mov
or
incl
mov
pop
xchg
push
or
fidivl
sbb
bnd
adc
and
inc
jge
xor
mov
mov
add
mov
pop
sbb
mov
or
popa
rcr
fildl
push
adc
cmp
xchg
add
cld
jns
mov
sub
test
mov
sbb
adc
es
pop
and
addb
daa
sbb
add
inc
loop
xor
sub
cmp
jne
leave
adc
or
mov
and
cmp
mov
mov
lods
mov
mov
xor
or
and
push
sub
mov
fs
cmpsl
loope
inc
dec
aas
mov
mov
clc
stc
int
shrb
mov
cmpsb
js
jnp
lea
lds
mov
jl
iret
jp
ficomps
faddl
xchg
push
ljmp
mov
and
jle
imul
pop
std
pop
jns
inc
add
mov
push
add
or
aas
jmp
lock
pop
mulb
mov
cmp
rorl
push
data16
mov
or
inc
pop
and
imul
stos
mov
icebp
jbe
test
sub
scas
insl
loop
inc
push
push
lods
add
and
test
inc
loopne
int3
insb
pop
mov
insb
lods
loop
daa
ljmp
scas
scas
jae
insb
scas
jmp
das
inc
sar
xchg
call
pop
ja
test
out
dec
stos
inc
dec
out
iret
test
out
inc
pop
lahf
xor
mov
int3
cmp
dec
add
fwait
scas
jg
push
mov
stos
cltd
mov
xor
pop
jbe
pop
fbld
test
mov
cli
mov
scas
or
pop
pop
faddp
cs
mov
stos
adc
mov
jmp
movl
das
push
fdivrs
movsb
popf
xchg
jnp
cmc
xor
rorb
or
decb
aad
inc
or
out
sbb
jecxz
mov
out
mov
push
ja
mov
int
or
out
sbb
sahf
jmp
mov
loope
pop
fldl
enter
loop
movsb
lcall
xor
dec
jb
pop
inc
jne
xchg
jnp
mov
or
cmc
popa
jl
cltd
xlat
pusha
cmpb
cmpl
lret
notb
inc
fwait
dec
xchg
pop
lods
jecxz
xor
xchg
push
ret
in
or
repz
mov
xchg
mov
push
xor
jle
mov
dec
sub
push
push
ja
xchg
inc
imul
sbb
popf
mov
testl
lds
icebp
jbe
mov
jo
xchg
inc
mov
ljmp
mov
ret
pop
push
push
cmpsb
adc
test
test
xor
xchg
push
and
call
rcrb
jbe
jmp
fcmovu
fbstp
jbe
push
nop
or
imul
fisttpl
cmp
xchg
popa
xchg
shll
setns
shrl
js
or
jl
scas
in
in
and
fincstp
jae
lods
jns
sub
dec
jmp
mov
push
arpl
xor
lods
jle
mov
jbe
xchg
enter
fsubrl
push
shrb
mov
or
scas
or
pop
fs
pop
inc
pop
sarl
popf
aad
mov
into
pop
xchg
pop
pop
mov
sbb
int3
inc
jns
mov
stc
mov
data16
arpl
and
push
xchg
out
ja
push
mov
test
dec
jne
or
mov
orb
cld
and
adcl
mov
loope
adc
flds
call
mov
aas
pop
adc
shl
dec
scas
or
fucomp
loop
call
out
xchg
jmp
jg
jnp
pop
outsl
mov
mov
ret
mov
or
xor
jp
xor
cmp
mov
pop
fcomps
out
push
sub
imul
xorl
fildll
mov
mov
xchg
fwait
rclb
jg
jae
cmp
cmpsl
rcrb
dec
cmp
ret
ja
xchg
adc
je
hlt
dec
xchg
das
aam
jle
xor
mov
cmpb
xchg
enter
xchg
push
add
cltd
arpl
int
cmpsb
cmpsb
addl
mov
cmp
add
xchg
cmp
mov
aad
je
int3
lahf
xorb
testb
sbb
jno
xor
loopne
call
std
inc
xor
inc
xlat
pop
js
jno
lret
ret
popf
fisubs
xchg
inc
mov
mov
add
jmp
mov
mov
fsubrs
outsl
lods
sbb
movsb
aad
pop
push
xchg
aad
jb
pop
cmp
add
out
sahf
push
in
pop
dec
inc
leave
adc
ljmp
and
pushf
mov
pop
cmp
cltd
fbld
les
addr16
mov
mov
das
lods
jmp
clc
repz
fwait
adc
test
mov
mov
fdivl
pop
pop
dec
mov
add
rclb
enter
lahf
mov
sub
push
dec
inc
stc
push
lock
mov
lret
popa
mov
aad
fisttpl
jmp
repnz
cmp
repz
pop
dec
addr16
jns
push
ret
fwait
mov
jmp
je
pop
mov
sbb
mov
shll
rcrl
dec
popf
cmp
pop
dec
jnp
pop
xor
fwait
jo
mov
and
div
aam
test
addl
ret
test
and
push
xchg
and
dec
mov
push
mov
adc
mov
push
sub
clc
and
clc
std
std
ret
mov
daa
xor
shl
cmp
mov
sub
push
jae
mov
out
cwtl
cmp
shll
xchg
nop
mov
jbe
pushf
xchg
inc
cmpl
rcll
mov
or
fcompl
sub
pushf
mov
jnp
fwait
push
inc
js
cmp
and
inc
out
adc
push
sbb
insb
jge
cmp
scas
in
dec
mov
out
mov
idiv
fcomps
test
sub
nop
mov
mov
mov
insl
dec
fstpt
and
dec
xor
jnp
mov
cld
mov
jmp
outsl
mov
mov
outsl
and
cmp
and
inc
jecxz
cld
cmc
xchg
pop
xchg
in
les
inc
inc
cmp
sbb
sub
inc
leave
js
fld
mov
pop
jl
add
int
jno
cltd
inc
dec
out
idivl
ljmp
rorb
sub
and
ss
loopne
inc
inc
insb
add
adc
jne
xchg
das
outsb
xor
std
mov
jne
sbb
nop
sub
push
out
cld
ds
out
add
mov
in
rcr
adcb
sbb
cmp
add
and
loopne
inc
fs
cmc
daa
aaa
call
pop
cmp
jae
pop
xorl
push
adc
stos
es
out
data16
mov
mov
cltd
jmp
repz
mov
jmp
lock
repz
sbb
in
mov
jg
movl
adc
scas
into
push
leave
and
lods
sbb
mov
push
sub
xor
or
outsb
push
xor
push
ucomiss
mov
hlt
inc
pop
and
in
xlat
push
sahf
dec
xchg
xchg
lcall
jo
mov
mov
xor
adc
push
arpl
jb
outsb
xlat
mov
and
mov
pop
data16
mov
adc
int3
mov
pop
data16
test
dec
lock
cmpb
rclb
inc
jl
fbstp
mulb
push
aam
pop
orl
cmp
lods
dec
cltd
cmp
pop
jg
xor
js
test
sbb
stc
imul
test
je
or
call
call
daa
jbe
xor
mov
jmp
fs
negb
es
lock
test
insl
add
add
add
jmp
pop
jne
pop
jmp
aam
and
scas
mov
iret
shlb
fwait
xchg
mov
pop
push
out
mov
out
dec
insl
mov
lcall
mov
jl
push
outsb
adc
lods
aad
adc
les
out
and
xorb
mov
rcl
pop
sar
clc
je
sub
push
fildll
pop
and
rorb
xchg
sbb
loopne
sbb
bound
xor
jle
cmc
mov
or
cld
add
es
aaa
fistpll
mov
mov
ljmp
pop
imul
jae
stos
testb
insb
add
popf
stos
ds
aas
inc
xchg
in
cwtl
cld
jb
loopne
pusha
jle
lods
cs
es
cli
inc
inc
int
or
cmp
xor
les
fisubrs
mov
popf
xchg
sub
loope
push
dec
loop
or
sub
fucomip
cltd
repz
jp
jno
cli
xchg
xchg
cmpsb
jno
cmp
mov
lahf
cmp
mov
jg
jnp
fs
clc
sub
outsb
lea
push
mov
clc
inc
aaa
lock
and
xor
add
hlt
pusha
xchg
xchg
shlb
mov
xlat
pop
pop
ret
cmp
mov
stos
cli
std
movsl
xchg
jl
jp
xchg
sub
pop
pop
loope
pusha
push
add
clc
fbld
jecxz
adc
xchg
inc
pop
dec
stos
push
and
notb
out
mov
mov
lea
adc
push
xchg
popf
xchg
dec
mov
lds
push
sub
jl
shlb
pop
push
adc
outsl
lea
lods
out
ja
cmp
divb
xchg
js
push
popa
cmc
jb,pn
jbe
jno
inc
fiaddl
jno
pushf
sbb
pop
jecxz
mov
cmp
adc
ret
mov
push
out
shrb
xchg
and
stc
fadds
filds
cmp
sbb
pop
jne
xchg
insl
cmp
dec
jl
test
pop
test
mov
scas
es
dec
inc
lret
mov
movsb
add
jne
loope
pop
pop
mov
imul
imul
push
xchg
inc
mov
outsl
fidivrs
pop
adc
jo
pop
pop
scas
and
sbb
lods
jno
push
dec
push
mov
mov
mov
cmp
aaa
push
enter
fdivrs
jnp
mov
pushf
cmp
xor
mov
sbb
mov
pcmpeqw
clc
std
mov
xchg
jp
repnz
gs
ret
mov
pop
adc
fsubrl
pop
fidivs
call
sahf
dec
sbb
mov
adcl
xchg
shlb
push
pop
dec
test
push
in
cmpsb
and
mov
xchg
inc
out
popf
push
sbb
mov
push
push
xlat
sbb
mov
dec
jb
xchg
mov
mov
aaa
mov
and
lret
cmp
dec
insl
mov
xchg
repz
std
inc
idivb
pop
inc
cmc
xor
xlat
inc
fnstsw
and
daa
mov
fcom
push
xlat
cmp
cmpsb
sahf
in
enter
xchg
das
pop
imul
cmp
xor
leave
push
and
aad
add
scas
lret
testl
fwait
pop
hlt
mov
movsb
cmpsl
xor
add
add
std
xchg
cmp
nop
mov
inc
mov
daa
and
dec
rcrb
lcall
in
jg
mov
xor
inc
inc
aaa
pushf
fisttpll
stos
arpl
sub
mov
xchg
mov
push
mov
hlt
leave
xchg
lcall
aam
xchg
xchg
mov
fwait
ret
pusha
xchg
dec
pop
arpl
notb
xlat
mov
mov
daa
cld
jl
clc
lods
sub
scas
adc
lods
fwait
inc
data16
enter
aaa
lods
jl
insb
rolb
jns
shrb
movntq
or
inc
inc
ror
cmp
les
incl
sub
mov
and
scas
out
fsubrs
sti
mov
jmp
in
in
mov
repz
dec
mov
push
adc
jae
adc
imul
push
int
mov
mov
add
fnstenv
popa
pop
fistpl
out
cld
fst
sub
mov
clc
in
xor
test
push
fisubl
hlt
mov
inc
lahf
or
push
pop
pop
in
pop
mov
jb
mov
das
ljmp
push
lahf
sbb
stos
sarl
pushf
jmp
inc
mov
and
push
push
push
cmpsb
pop
pop
leave
icebp
mov
mov
icebp
je
xchg
lret
popf
mov
and
mov
cli
scas
aas
pop
addl
xchg
lahf
pop
fninit
mov
xor
cwtl
cltd
push
ljmp
idivl
sbb
add
dec
arpl
fcmovu
or
pop
sti
dec
or
mov
stos
jl
mov
mov
stos
in
lcall
jl
sub
push
cmpsb
push
pushf
cmp
add
mov
jle
xor
stos
sbb
test
fcompl
lret
loope
xchg
scas
adcl
adc
jmp
iret
rolb
das
test
aad
xor
in
and
mov
mov
jno
jmp
push
js
inc
cmp
pushf
push
repz
pop
out
pop
arpl
add
xchg
fmull
leave
jp
adc
pop
call
leave
lret
jp
in
xchg
sub
or
iret
test
popf
ret
ss
pushf
outsl
mov
movsl
cmpsl
cmp
enter
push
and
out
pop
imul
and
in
and
add
inc
rorl
or
stos
adc
sbb
scas
arpl
addb
mov
sub
push
xchg
xor
ret
jl
in
and
pop
pop
push
popf
mov
clc
outsb
roll
xchg
jg
bound
ret
cmpsb
lcall
orl
xor
iret
inc
mov
ljmp
mov
push
xor
xor
lea
adc
inc
movsb
loop
incb
scas
inc
lret
adc
push
inc
jge
sub
aam
imul
ret
or
das
dec
stc
in
xor
add
test
shll
pop
lcall
enter
leave
jo
mov
add
imul
stc
pop
je
xchg
push
fstpt
loop
push
packssdw
in
xor
fcompl
mov
stos
dec
mov
jmp
sbb
push
jmp
ret
clc
fcoml
ss
adc
cld
out
std
pop
loopne
repnz
jg
cmp
pop
or
lret
and
xchg
movsl
lahf
pop
ljmp
dec
adc
push
lret
stos
cmp
lret
mov
dec
fisubrs
outsb
mov
jbe
and
insb
sbb
icebp
mov
add
ds
fisubl
sub
stos
sbb
ljmp
xor
adc
fdivrs
lret
jp
ljmp
pushl
mov
sbb
shl
fwait
out
stos
jecxz
jae
mov
aam
add
stos
int3
mov
loopne
jno
xor
and
mov
jns
sbbb
mov
add
loope
outsl
adc
sub
shll
adc
mov
ds
sbb
xchg
enter
push
repnz
rclb
sti
jge
cltd
pop
add
lods
lds
ret
addr16
jmp
or
pop
incb
popf
mov
test
mov
lods
push
rolb
push
jle
hlt
adc
ss
movsl
mov
repz
sahf
cmp
sub
inc
shl
and
aam
ja
or
jl
pushf
add
lcall
ds
lock
stc
add
nop
sub
cmpsl
fimull
fsts
dec
add
jbe
jo
lods
jmp
ss
xchg
insb
xchg
push
clc
cmpl
sub
sbb
jp
sub
pop
mov
out
cs
or
inc
lret
cld
addr16
mov
inc
jg
xchg
pop
outsl
push
imul
stc
cmp
and
scas
sahf
sub
insl
divl
xchg
push
ret
ja
in
and
mov
mov
in
lods
add
cli
cld
inc
lret
ret
je
and
pop
call
or
out
loope
cli
push
fs
dec
mov
test
popa
mov
push
xchg
insl
nop
cld
push
sub
sub
cmpsl
xchg
loope
add
mov
ret
dec
jge
push
outsb
push
xlat
xchg
pop
mov
imul
inc
daa
lret
inc
inc
xor
call
or
and
test
les
dec
xchg
outsb
sub
mov
sbb
pop
arpl
out
pop
xor
aaa
add
aaa
iret
cmp
pop
xlat
rorb
pop
jae
push
xor
add
jns
push
lds
xchg
lods
icebp
lcall
jmp
xor
cmpsb
xor
jl
jb
adc
rolb
int
xchg
mov
mov
sub
mov
pop
movsb
loopne
je
xor
movsb
movsl
jp
inc
xchg
inc
push
imul
test
loop
mov
cmp
je
cld
aaa
add
in
nop
jle,pn
mov
mov
cld
cmp
dec
mov
lcall
lret
cmp
cmp
sub
call
dec
jge
or
or
and
dec
cld
pop
mov
mov
mov
mov
dec
adc
add
pop
or
js
xchg
jb
sahf
add
xor
push
iret
jmp
sub
pop
sbb
xor
pop
imul
je
lods
jge
ss
mov
fs
shlb
je
push
out
sub
add
loope
sbb
inc
enter
or
mov
cmc
xor
push
mov
jae
or
xor
adc
jb
rcr
inc
rol
add
repz
xchg
sbb
test
cmp
add
stos
icebp
stos
mov
inc
sbb
popa
inc
sbb
jns
stos
adc
sbb
mov
add
fsts
clc
addl
leave
ja
daa
loop
into
pop
loop
popa
rorb
movsb
lods
insb
mov
cltd
xor
in
mov
or
jg
std
int
outsb
cmp
pop
mov
push
mov
add
clc
mov
push
inc
inc
dec
xchg
cmpsl
inc
stos
xchg
mov
popa
jbe
push
les
into
xor
cwtl
stos
idivl
push
notb
dec
push
sub
stos
fistl
popf
rorb
int
push
mov
fsubl
cmp
popa
jecxz
imull
out
lret
xor
jno
pop
cmpsb
sub
fildl
aas
jno
sbb
cmpsl
pop
push
dec
and
lea
dec
gs
jmp
inc
movsl
nop
mov
subb
scas
jo
pop
sub
mov
icebp
cs
cmp
pop
mov
fstpt
fs
int3
push
pusha
pop
xor
mov
mov
or
xchg
pop
add
test
mov
xor
xchg
or
jae
sub
add
leave
jnp
jno
add
or
and
cmp
sub
dec
xor
ds
xor
sbb
cmp
test
out
imul
jb
addr16
aas
mov
sarl
inc
les
mov
push
adcl
sub
or
aam
gs
mov
cmp
mov
push
test
cltd
outsb
pop
mov
lods
mov
xor
fs
pop
pop
cmp
inc
jmp
lock
adc
adcl
fld
xchg
fsts
icebp
jbe
sti
adc
lcall
adcl
pop
cmp
lret
bound
dec
cmc
jbe
aad
ret
push
or
cmp
out
arpl
adc
push
sbb
sbb
jae
push
xchg
dec
lcall
xchg
shl
jge
push
pop
and
pusha
sbb
andb
xor
mov
mov
pop
mov
lods
push
push
jecxz
fdivl
cmp
fldenv
xchg
mov
add
rcl
push
insb
repnz
jo
outsb
sub
nop
xor
push
push
cwtl
and
jno
lods
xchg
ret
mov
dec
sbb
movsl
inc
int3
popf
mov
mov
mov
cmp
vphaddubq
or
jns
setp
cli
subb
rcll
add
mov
xor
arpl
push
cmp
test
out
add
mov
dec
lret
lea
rorl
cs
jmp
mov
mov
cltd
xchg
insl
push
push
and
xor
call
inc
mov
xor
nop
shlb
dec
jge
shlb
or
dec
xor
addr16
lahf
add
jno
adc
and
cmova
jns
orl
out
fs
xor
push
shr
into
out
enter
and
test
or
pop
fisubrs
pop
mov
mov
mov
mov
lahf
cmp
mov
clc
mov
cmpsb
aas
mov
mov
rol
jnp
sub
add
mov
xchg
nop
xchg
xor
pop
pop
cmp
subl
mov
inc
std
fmulp
mov
gs
stos
inc
pusha
aas
pusha
int3
addl
sbbb
imul
je
pop
pop
int
loope
sub
cmp
call
movsl
or
imul
mov
jl
lods
xchg
ljmp
pop
aad
iret
fmull
inc
inc
enter
push
addl
imull
jp
dec
sub
test
mov
pop
ficoms
mov
loop
popf
loop
imul
ficompl
push
adc
xchg
outsl
in
aaa
in
bound
mov
jp
ret
jp
gs
jmp
dec
sarl
dec
jg
xor
faddl
test
subb
mov
jmp
push
test
ret
ret
test
in
jnp
mov
repz
mov
pop
cwtl
out
jecxz
push
shrl
mov
xchg
push
mov
imul
hlt
pop
cld
pop
jmp
and
push
jp
cmp
pop
mov
mov
adc
sbbl
shlb
vucomiss
mov
adc
and
cltd
shl
movsl
jge
pop
sub
lret
xchg
negb
hlt
insb
push
scas
push
cwtl
push
rclb
and
or
aaa
stc
fwait
lods
enter
push
out
ror
ret
ret
sub
roll
outsl
or
hlt
mov
stc
mov
aas
add
push
push
push
sbb
hlt
inc
and
cmp
jae
mov
pop
gs
push
or
stos
popf
aad
popf
pop
mov
shlb
les
push
xchg
pushf
sbb
or
add
adc
add
jb
or
sbb
das
scas
mov
out
cld
cwtl
outsl
sbb
aaa
sbb
or
fsubrl
adc
std
sub
aam
xchg
insl
fcmovu
mov
sahf
imul
jl
dec
pop
or
push
dec
mov
lcall
stc
addr16
lcall
lea
lods
out
push
pushl
xchg
pushf
add
ljmp
pop
mov
add
sti
pusha
xlat
mov
sahf
test
popf
jae
and
mov
roll
gs
xchg
sahf
lds
push
lcall
lods
push
inc
mov
mov
jae
fs
outsl
cmpb
stc
cmp
fdivl
push
iret
mov
or
jg
sub
daa
xchg
fnstcw
and
push
sub
mov
push
div
fmull
mov
jl
aaa
inc
ret
outsb
mov
movsb
add
pop
pop
cli
std
mov
icebp
test
jg
adc
mov
inc
sub
pop
repz
out
xchg
and
fisttps
rol
xchg
push
div
je
sbb
mov
jecxz
into
aaa
jo
or
mov
push
sub
out
sti
push
mov
ds
dec
jmp
ljmp
inc
sub
add
push
repz
ja
or
mov
inc
pop
orb
shrb
inc
jle
adc
pop
or
adc
out
cmc
and
jmp
ss
int3
pop
and
pop
in
push
test
aas
in
and
lds
mov
jecxz
adc
loopne
mov
fstps
mov
cli
fsubl
insb
aam
xor
xor
add
movsb
nop
mov
mov
push
pop
aam
stos
mov
movsb
scas
mov
pop
jae
mov
pop
push
test
push
imul
fbstp
mov
cwtl
dec
aas
rcrb
insb
movsl
dec
lret
cmp
repnz
dec
repz
call
pop
add
mov
ja
pushfw
mov
cmp
pop
in
xchg
in
fists
ds
jge
sbb
sti
adc
cmpsl
mov
push
ret
mov
sub
shr
fldcw
stos
ljmp
pop
aaa
jae
mov
xor
repnz
bsf
mov
mov
jle
hlt
push
jle
fldcw
int
int3
scas
out
in
ds
fsubrl
insb
lgs
sub
cmp
cli
hlt
lea
inc
inc
add
xor
in
xchg
pusha
lods
repnz
shlb
loop
push
sub
pop
add
adc
aad
push
fdivs
ds
mov
arpl
out
xor
int3
inc
adc
pop
mov
sbbl
cmp
lods
arpl
mov
mov
jns
and
mov
mov
sti
add
pop
push
repz
push
push
shll
stos
jnp
jl
cmpsl
out
xor
sub
js
bound
lahf
inc
and
dec
jb
or
not
fwait
or
dec
mov
add
cmc
testb
and
adc
lock
sbb
lret
les
fisubs
icebp
ljmp
jo
mov
sahf
daa
sbb
mov
sub
scas
mov
xchg
dec
arpl
sub
xorb
xchg
mov
cmp
push
mov
es
add
push
or
lods
mov
pop
push
scas
push
jecxz
push
xor
je
aaa
ss
addr16
outsl
mov
fwait
inc
xchg
pop
mov
lret
sti
addr16
inc
mov
mov
sbb
sbb
test
mov
aam
movl
fisttps
in
dec
xor
inc
test
fs
pop
mov
jge
jmp
scas
jmp
setb
fstl
loope
push
insl
repnz
adc
out
inc
sub
xor
push
or
into
mov
nop
or
js
mov
push
int3
or
lock
sbb
inc
fstpt
scas
repz
cltd
stos
dec
out
test
ficoml
pop
add
lds
fsubl
iret
pusha
sti
xor
shrl
push
xchg
test
jne
cmp
add
frstor
pop
mov
dec
lods
jp
cltd
sbb
mov
add
notb
push
xchg
adc
sti
and
pop
enter
mov
sbb
stos
pop
and
mov
xchg
xlat
jnp
cld
push
mov
inc
adc
xchg
fwait
or
inc
xchg
jl
or
dec
inc
js
cld
push
les
xor
mov
push
push
cs
mov
test
or
xor
leave
bound
das
lds
fs
out
or
ret
xchg
or
adc
in
xchg
nop
jle
divl
cs
sbb
pop
mov
fwait
pop
or
fisubrl
xchg
and
jg
testb
cld
sahf
imul
add
int
mov
or
jg
sub
movsb
push
cmp
jmp
movsb
insb
dec
sti
mov
push
mov
mov
lahf
push
imul
cmp
mov
pop
daa
xchg
daa
leave
inc
pop
or
sub
rorb
sarb
sbb
hlt
xor
and
inc
das
cmp
test
nop
push
jae
fs
mov
gs
test
xchg
scas
lret
dec
lea
adc
loope
pop
clc
adc
out
add
lea
int3
sbb
sbb
or
add
les
add
jns
jns
dec
gs
jns
jnp
xchg
push
inc
add
imul
insb
daa
lret
repz
adc
stc
mov
call
sub
and
pop
pop
fsubp
xlat
inc
dec
xchg
jns
mov
jmp
cmp
gs
ret
lret
push
or
not
push
insb
aad
orb
mov
sub
sub
shlb
lcall
popa
lods
xchg
mov
push
cmpsl
out
stc
inc
pop
push
std
clc
xor
stos
mov
shll
push
dec
cmpsl
xchg
mov
dec
inc
xor
jl
test
aad
bound
sub
or
xchg
or
das
mov
in
inc
and
sub
je
dec
lahf
or
call
sub
ret
jle
dec
sbb
push
sub
ljmp
scas
dec
sahf
cs
push
jp
aam
xchg
pop
outsb
imul
fisttpll
cmp
xorl
mov
addr16
into
lcall
xchg
in
xchg
sub
shlb
push
push
mov
mov
sub
push
out
push
das
fisttpl
inc
jns
pop
imul
cmp
push
enter
mov
mov
dec
andb
cmp
jbe
mov
xor
outsb
pop
iret
push
inc
lods
lahf
repz
addl
and
idivl
or
dec
xchg
ds
mov
and
imul
call
jg
cmp
and
sub
fmulp
xchg
adc
cmpsl
divb
and
bound
fcmovb
pop
pop
dec
add
scas
mov
pop
test
mov
mov
ds
scas
mov
pop
push
data16
js
pop
shrl
push
lahf
push
or
dec
popa
pop
shlb
rol
mov
inc
push
inc
xor
xchg
shlb
stos
add
inc
cli
adc
adc
insb
popf
loop
jae
xchg
xchg
sahf
test
fmulp
cltd
sbb
aad
xor
push
stc
jns
inc
imul
js
jecxz
dec
loop
ljmp
xor
xchg
xchg
and
int
mov
jno
rcl
int
nop
vmovdqu
push
or
aad
sbb
dec
loop
push
gs
aam
sub
mov
and
je
cmp
xor
bt
bound
sbb
call
movsb
js
fidivs
or
je
add
push
lds
and
enter
xchg
sub
jg
stos
xchg
lahf
insb
pop
xchg
outsl
sbb
push
sti
jecxz
ret
inc
pop
cmp
mov
arpl
les
outsb
push
adc
jecxz
pop
pop
xchg
mov
push
imul
mov
cli
out
hlt
mov
lock
jle
out
das
inc
loopne
sahf
sub
call
xchg
inc
push
cmp
xchg
std
push
ficompl
sub
xor
pop
xchg
mov
push
and
enter
out
bound
inc
xchg
dec
subl
mov
flds
test
push
bound
jecxz
xchg
or
in
jl
ds
mov
cld
cmp
repnz
nop
xor
push
xor
or
mov
es
push
mov
jne
ret
aaa
and
push
sub
push
out
jae
pop
ret
mov
movl
fwait
int
les
ret
test
xchg
dec
lods
sarb
cmpsl
jns
inc
popa
sub
int
mov
add
or
sar
imul
mov
push
push
and
test
loop
pop
outsb
jae
mov
xchg
jg
dec
push
shlb
fists
or
lret
out
imul
sub
sub
xor
inc
inc
mov
insb
jl
fdivrs
call
adc
cmc
xor
pop
push
cld
mov
xor
dec
fld
jbe
fstp
hlt
push
mov
mov
xchg
dec
push
xorb
cltd
mov
aas
xchg
and
leave
insl
and
ret
cmp
inc
hlt
adc
and
in
aad
sbb
xchg
shl
stos
fwait
jno
out
mov
mov
lea
mov
dec
lahf
roll
jle
push
fsts
xlat
cli
sub
xor
nop
push
cmp
cmpl
inc
in
and
pop
andl
and
roll
outsb
add
call
andl
stos
add
sbb
pop
decl
push
inc
hlt
icebp
inc
lods
je
xchg
push
cmp
jle
jb
jno,pt
pop
xchg
jo
pop
imul
add
jno
cwtl
dec
in
push
inc
mov
stos
lods
popa
fcomps
movsl
xchg
pop
push
jae
in
add
jo
sbb
and
data16
xor
pop
jae
cmp
xchg
ljmp
daa
mov
mov
outsl
jns
neg
lods
into
cli
loopne
jge
cs
outsl
push
mov
loopne
sbbb
xchg
adc
ret
lods
mov
fmull
dec
fs
das
xchg
and
jecxz
pop
orl
mov
mov
mov
js
pop
out
filds
ret
shlb
ret
or
out
add
fsubp
test
out
lcall
call
xchg
or
xchg
xchg
push
flds
nop
xchg
lock
aaa
inc
enter
ds
jnp
daa
push
add
add
daa
adc
sbb
inc
mov
nop
add
ds
mov
push
out
pop
cmp
mov
fs
pop
mov
scas
pop
lea
pop
or
lcall
mov
push
negl
xchg
iret
pop
stos
lcall
outsl
insb
int3
shll
out
pushf
add
fmuls
subl
sti
ss
cmp
mov
adc
rcr
push
mov
leave
test
xlat
lock
cmp
mov
and
cmp
mov
shrb
fcoms
cmp
fsubrl
fisubrl
lahf
dec
cmp
mov
inc
adc
test
in
jb
jbe,pt
ja
mov
sub
mov
mov
lods
jp
sbb
enter
rcrb
jl
js
pusha
aam
fbld
jbe
and
sub
mov
and
mov
mov
cld
pop
sti
cmp
cld
add
arpl
fidivrs
sub
and
pop
xor
jno
adc
in
adc
inc
mulps
test
xlat
pop
ja
and
lcall
mov
xchg
cli
mov
fdivrs
mov
in
and
sahf
iret
jnp
jb
lods
pop
dec
add
mov
fldl2e
sbb
mov
out
popa
popa
ja
cmp
les
mov
add
lret
xchg
stos
sahf
xchg
aas
mov
lock
pop
out
lods
decl
imul
or
cmp
nop
test
mov
sub
mov
pop
gs
loope
adcl
sarl
mov
repz
imul
fidivrs
cmp
repnz
lret
xor
and
popa
das
sbb
mov
lret
xor
xchg
jecxz
ds
lods
imul
dec
imul
fsubs
out
jge
push
cld
fsubrs
mov
iret
pop
push
fdivl
add
add
pop
movsl
xchg
lods
sbb
leave
cmp
out
mov
inc
lds
push
push
das
int
push
orl
fisubrs
cmp
shll
in
mov
loope
pop
syscall
imul
bound
mov
mov
pop
daa
or
shlb
fsubl
xchg
inc
js
cltd
mov
fs
mov
push
mov
rcrb
jns
mov
sbbl
dec
push
xchg
stos
out
pop
repz
push
nop
movsb
imul
in
add
xchg
cwtl
mov
aaa
jae
lcall
sub
daa
adc
add
arpl
pop
sarl
pushf
fildll
push
add
jl
mov
mov
add
gs
test
scas
arpl
inc
or
out
clc
mov
adc
inc
cld
mov
mov
xor
pop
sub
xchg
cmp
dec
sbb
push
sbbl
lds
mov
adc
lcall
cmp
test
fcomps
mov
inc
or
ret
aas
jp
mov
nop
popw
and
inc
push
xor
dec
sub
pop
xor
jmp
stos
mov
lea
mov
push
push
add
sahf
cmp
insb
popf
sbb
xchg
aas
cwtl
push
push
roll
mov
ficompl
inc
cli
sbb
or
sbb
lods
jno
int3
mov
adc
rorl
lods
dec
jle
xchg
icebp
push
inc
and
icebp
lods
cld
shlb
xchg
in
inc
push
adc
mov
push
push
add
xor
pop
fadds
mov
cld
cmpsl
mov
stos
insb
jecxz
inc
in
mul
push
sub
ss
push
mov
shl
mov
push
imul
dec
push
repnz
cmp
stos
das
cmp
test
es
jne
scas
add
test
adc
out
int3
and
jecxz
pop
arpl
pop
ret
mov
mov
adc
ja
or
sub
ss
and
jo
addr16
stc
daa
in
in
add
lcall
aam
inc
jl
xor
cmp
popf
in
sub
js
fidivs
push
outsl
pop
lahf
das
sbb
ret
aad
stos
xor
mov
cmc
pop
xchg
bound
jecxz
imul
test
loopne
dec
out
ret
pusha
imul
cmc
mov
pop
mov
xchg
stc
fisubrl
cmp
lahf
jmp
adc
ss
popf
lock
sti
and
mov
test
cli
dec
sbb
mov
imul
sbb
lahf
test
das
xor
stos
inc
std
leave
sbb
push
test
pop
lahf
xchg
loope
and
jmp
scas
xchg
xor
push
rcr
in
mov
jg
icebp
fidivrl
nop
in
jg
inc
cmpsb
adc
sub
adc
lcall
add
mov
dec
push
ss
mov
mull
pusha
popf
notl
dec
stos
js
jo
push
sub
gs
scas
ror
fcmovu
mov
sbb
jl
aaa
in
ret
or
sub
and
add
jno
lcall
popa
hlt
xchg
and
test
shrl
xor
push
idivl
test
in
mov
rolb
popa
jno
nop
rcll
nop
xor
jns
xorb
cmpsl
or
popf
cmp
insl
scas
test
adc
pop
push
jg
jne
fnstenv
cmp
les
pop
sbb
fsubrs
dec
and
xchg
or
enter
push
daa
and
es
fbld
sub
rorb
sub
into
xchg
jl
or
inc
jl
pop
popa
scas
mov
daa
sbb
or
iret
inc
pop
xlat
pop
push
loop
call
stos
lret
cmp
test
movsb
push
mov
cld
add
dec
sub
push
sub
cmp
arpl
mov
add
jmp
fstpt
cmp
and
xor
mov
jle
push
or
ret
icebp
jle
and
push
cmp
mov
jae
sbb
sbb
sub
test
pop
xor
out
jp
cmp
xchg
sub
and
xchg
int
aaa
loopne
test
das
jmp
out
shll
test
cmp
jbe
cwtl
test
in
jo
sbb
jecxz
outsl
xchg
pop
es
mov
adc
mov
lret
push
pop
lret
mov
lods
fdivrp
roll
add
sub
loopne
xor
push
mov
xor
mov
cmpsl
inc
inc
xchg
push
mov
pop
movsb
stos
test
stos
push
xor
or
pop
mov
dec
mov
mov
jge
pop
mov
mov
add
clc
jle
mov
fisubrl
push
mov
cmp
mov
push
mov
push
cmpsb
xchg
sbb
adc
icebp
mov
andb
or
jge
fstpt
inc
adc
jo
or
test
sub
scas
mov
out
subps
scas
sahf
rcll
std
cmp
xor
arpl
clc
pushf
push
inc
xchg
add
std
sbb
adc
inc
in
out
in
mov
jb
test
jp
shrb
mov
in
rcl
cmpl
fstl
adc
les
dec
xor
lcall
clc
mov
or
data16
mov
outsb
mov
loopne
xor
cmp
pushf
fcomip
leave
add
mov
movsl
mov
mov
jmp
jmp
add
lea
mov
push
or
mov
fwait
mov
bound
cmp
aas
iret
mov
movsb
or
icebp
lahf
mov
and
or
cmp
jo
sbb
mov
insb
mov
pop
in
out
fwait
add
xchg
adc
imul
xchg
movsb
and
cli
dec
repnz
lds
sar
and
push
pushf
mov
test
adc
xchg
inc
fdivr
outsl
fsub
in
adc
cmp
subl
sbb
push
jecxz
add
jge
lds
sbb
stos
jns
cltd
fdiv
out
mov
push
cltd
fstpt
lods
mov
scas
cmp
lods
inc
fs
leave
cmpsb
mov
lcall
imul
cmp
lret
lret
lahf
sub
jne
imul
or
fwait
inc
mov
clc
mov
dec
xor
movsl
insb
sbb
mov
mov
shl
inc
mov
mov
fs
mov
jmp
add
pop
test
push
mov
jo
mov
sub
mov
ret
xor
loop
scas
loope
cmpsb
adc
decb
lock
mov
push
pop
pop
jmp
cmovs
xchg
mov
push
and
sahf
call
incb
xchg
out
test
adc
jge
pop
mov
dec
mov
adc
add
dec
mov
and
mov
jge
ds
int
cld
cltd
out
dec
mov
jmp
loop
shl
sar
data16
je
ja
ljmp
loope
daa
adc
and
or
icebp
mov
mov
aas
repnz
mov
sbb
sub
repz
imul
mov
xor
mov
imulb
push
xor
jecxz
inc
sbb
leave
mov
push
daa
pop
loopne
aas
xchg
mov
mov
xchg
pop
sbb
push
push
pop
mov
mov
mov
inc
rdpmc
stc
popa
scas
repnz
fldl
xchg
stc
dec
mov
push
imul
push
mov
pop
negb
mov
rcrl
aaa
cli
and
mov
test
and
mov
rol
fidivrs
dec
add
or
mov
and
jbe
sub
jge
push
sbb
shll
push
mov
pop
into
dec
jne
cltd
inc
and
push
ds
ret
or
cmpsl
int
dec
xchg
ja
leave
cwtl
or
pop
sti
ds
stc
idivb
xor
test
setnp
lcall
mov
pop
xchg
add
mov
testb
xchg
roll
mov
xchg
push
nop
mov
in
les
jnp
jo
out
testl
imul
mov
cmc
cltd
mov
cmp
mov
mov
and
cmpsl
adc
mov
cmp
ds
pop
or
sbb
icebp
jnp
fidivrl
mov
adc
loope
mov
pop
invd
mov
in
sub
test
repnz
hlt
sbb
jo
movsb
fmull
and
mov
mov
cmpsb
dec
inc
les
xchg
sbb
sub
into
inc
inc
lahf
mov
out
or
mov
xchg
rorb
add
push
cltd
mov
mov
mov
fldl
leave
mov
setae
dec
loopne
cmp
out
inc
add
mov
fistps
cli
push
fldenv
shr
fstl
leave
xor
push
imul
sti
inc
dec
mov
popf
insl
cmp
dec
push
or
push
pextrw
push
stos
pop
sarl
mov
adc
fidivs
pop
call
ror
sub
add
sub
sbb
add
jmp
dec
je
xchg
incb
or
xor
mov
push
insb
adc
xchg
mov
movsl
jle
popf
daa
cmovp
jp
das
sub
push
push
sub
ja
inc
cltd
lock
jle
test
mov
repz
repz
dec
aad
mov
xor
pop
movsb
or
test
sbb
push
push
out
mov
sbb
adc
lret
aaa
cmp
push
and
push
jmp
repz
pop
jle
push
sti
xor
gs
and
dec
xor
cmc
test
xchg
mov
and
push
mov
mov
inc
enter
lds
pop
sbbb
push
push
stos
leave
scas
clc
fildl
xchg
or
sub
sbb
dec
jl
mov
dec
fnstcw
add
xchg
cmp
push
fldl
mov
sbb
fimuls
xor
imull
xchg
push
mov
jno
inc
daa
out
hlt
mov
rcll
xor
js
leave
or
dec
pop
data16
push
out
jno
adc
les
inc
popa
jns
repnz
pusha
sub
xrelease
mov
out
movsl
and
sub
adc
les
roll
or
fs
cltd
push
fldl
sbb
clc
dec
mov
adc
iret
jb
push
inc
iret
ljmp
test
je
outsl
fcmovbe
xchg
cld
test
adc
cld
outsb
or
arpl
mov
xchg
cli
inc
and
sub
popa
cli
shl
andb
push
adc
popa
popf
mov
pop
mov
pop
inc
sti
push
inc
sbb
ds
fildll
mov
scas
lock
rcr
mov
xchg
jle,pn
adc
test
int
in
jne
add
arpl
xchg
xor
neg
dec
std
or
lea
subl
jle
add
cmc
int3
addb
sbb
push
cs
pushf
pop
dec
dec
add
sub
gs
enter
cmpsb
cmp
in
pop
pop
idivl
pop
bound
cmp
incl
aas
or
cmpsb
scas
je
js
popl
test
stc
je
inc
cmpsl
cmc
sub
out
je
sbb
fprem1
mov
scas
sub
push
addr16
out
inc
pushf
lret
mov
sub
xchg
jle
mov
aad
push
jb
or
andb
mov
sub
sub
adc
sbb
dec
pop
insl
arpl
fsubl
pop
rolb
dec
push
and
xchg
cmp
push
ret
mov
and
xchg
aaa
sub
pop
outsb
xchg
push
mov
or
icebp
popa
pop
jl
cmc
push
and
out
inc
mov
or
inc
or
mov
arpl
pop
int3
push
fidivrl
hlt
mov
add
adc
cmp
push
lea
push
imul
sub
int3
int
outsl
cmp
int3
jno
lcall
mov
pop
and
jo
bsr
cld
fildl
mov
mov
stos
mov
inc
addr16
jbe
pop
fnstsw
jno
inc
mov
cmpsb
mov
or
rolb
mov
xchg
rcr
dec
sub
or
fs
push
lcall
jle
adc
test
das
clc
mov
int3
push
cmp
xor
mov
or
sbb
aaa
iret
popf
lret
mov
push
addl
icebp
cmpsl
push
and
lods
div
sub
add
std
mov
int
xchg
std
lret
cmp
addl
add
roll
xchg
shl
fcmove
fwait
gs
js
fucomi
fisubs
in
inc
adc
fidivrs
loopne
push
mov
gs
or
push
xchg
mov
mov
loopne
inc
xor
add
add
scas
push
mov
stos
or
sub
aad
xchg
xor
stos
cmp
hlt
ljmp
push
iret
lods
mov
adc
mov
test
movsl
dec
push
pushf
adc
cmp
out
mov
sahf
sbb
stc
sbb
aad
out
push
loopne
mov
or
divl
push
movsb
in
mov
bnd
cmp
mov
lds
jge
or
xor
pusha
lret
out
push
or
mov
fists
pop
pop
jbe
jl
lret
clc
lds
xchg
pop
cmp
aad
add
lret
and
and
jno
jle
sub
mov
in
lods
sbb
inc
mov
xchg
jg
jae
data16
xor
andl
push
mov
pop
enter
adc
rcrl
and
pusha
in
or
cs
push
fmul
imul
mov
outsb
add
mov
pushl
xor
jns
adc
mov
scas
das
sbb
movsb
add
mov
test
xor
iret
add
hlt
cld
insb
enter
in
xchg
mov
push
mov
outsb
popf
pop
pop
pusha
scas
jns
ds
mov
int3
pop
pop
sub
dec
push
fdivs
imul
incl
daa
or
xchg
imul
xchg
cwtl
and
negl
orl
out
sbb
shl
xor
or
into
in
popf
jl
or
lret
pop
xchg
pop
sbb
xlat
xor
icebp
jb
xchg
popa
mov
xchg
inc
mov
test
sub
sti
rolb
pop
jmp
or
push
test
xchg
pop
push
negl
xchg
sbbl
repz
mov
shl
xor
insb
xchg
aad
rcrb
fcoms
movl
mov
sar
xchg
cli
xor
stc
lea
shl
lcall
mov
into
ds
repz
lea
into
sahf
bound
clc
xchg
jle
js
inc
mov
dec
jno
cmp
add
sbb
mov
dec
fildl
or
push
inc
mov
xor
enter
adc
fnsave
ja
fdivrs
stc
xor
adc
ja
in
cmp
jecxz
lret
cltd
and
jmp
jg
mov
ret
jecxz
out
cmp
vpunpcklqdq
insl
loope
leave
mov
jmp
popl
adc
dec
test
in
xor
pop
jne
cmp
repz
fsts
push
in
sub
adc
into
jl,pn
dec
xor
mov
andl
sbb
cmpsb
xor
push
sbb
cltd
dec
xchg
cwtl
in
repz
out
in
adc
decb
push
sbb
stos
jo
sbb
jne
cmp
add
adc
xchg
cmpl
mov
add
mov
mov
and
mov
repz
imul
adc
adcb
ds
int
fwait
cltd
aas
inc
rcr
dec
ds
adc
cmc
fwait
fwait
jl
mov
add
shll
jne
lret
inc
or
pop
push
cmp
push
pushf
jnp
sarb
adc
and
mov
xor
les
cmp
leave
add
xor
fisttpll
jle
mov
rorl
xchg
ds
pusha
or
or
testb
and
hlt
or
popa
clc
or
dec
clc
lret
stos
lods
lret
in
orb
aam
test
in
jl
pop
add
inc
xchg
popf
aas
sbb
jp
lahf
mov
decl
gs
repnz
fsub
fiaddl
xchg
push
xor
and
shll
stc
mov
dec
je
aaa
sub
or
std
rclb
je
mov
jge
push
shrl
sbb
call
nop
xchg
sahf
shlb
adc
mov
lds
mov
sbb
push
push
mov
sbb
stos
scas
ja
lds
jmp
cmp
insl
enter
add
or
mov
mov
fstpl
xchg
arpl
mov
fwait
loope
inc
out
mov
xchg
push
out
fwait
xchg
ror
pop
jmp
jns
pop
mov
subb
mov
nop
lret
adc
cmp
fisubrs
gs
aam
iret
cmp
das
mov
mov
cmp
cmp
data16
mov
adc
sbb
enter
dec
xorl
jmp
dec
cld
icebp
or
pop
dec
push
cmp
or
bound
pop
push
ja
sbb
fstl
mov
std
out
xchg
in
adc
in
ud1
xchg
stc
mov
mov
decb
cmp
outsb
test
xor
sbb
mov
mov
xchg
out
pop
ficoml
sub
pop
movsb
stc
mov
adc
std
mov
mov
test
mov
inc
pop
imul
addr16
sub
out
les
out
mov
insl
jnp
xor
les
dec
jo
je
bound
mov
ds
push
stos
adc
mov
pop
mov
stos
cmpsb
mulb
push
pop
jle
pop
sarl
mov
dec
or
pop
js
sub
adc
mov
fnsave
push
imul
imul
sub
cmc
scas
cli
repnz
xchg
inc
mov
pop
imul
inc
adc
rolb
clc
scas
fdivs
mov
lahf
dec
cmp
adc
lret
inc
dec
rolb
iret
clc
movsl
xchg
or
sbb
xchg
lahf
push
imul
xor
adc
subl
push
sbb
add
fisubrl
mov
and
xchg
mov
sti
adc
inc
push
push
pop
iret
jo
xor
pop
and
icebp
pop
adcl
imul
sub
test
fidivrs
scas
push
adc
in
das
fsubrs
movsl
dec
out
mov
mov
pushf
sbb
add
push
xchg
pusha
pop
data16
and
pop
mov
ret
push
mov
add
xlat
mov
das
or
mov
dec
sub
pop
jb
xor
test
xor
bound
vmwrite
push
fisubrl
mov
fdivrl
xchg
pop
xchg
or
int
repz
out
fisttpl
jno
dec
push
jns
jge
cmpsl
arpl
test
pop
movsl
sti
fildll
fcomip
test
pop
incb
xor
adc
aas
ljmp
adc
mov
in
adc
sbb
int3
jno
xchg
adc
mov
lods
mov
sub
mov
jbe
pop
xchg
jle
inc
roll
es
add
push
pop
jbe
nop
inc
cltd
pop
sub
testb
pop
cmpsl
sbb
fs
jg
sbb
in
data16
or
push
xchg
stc
xlat
xchg
inc
js
iret
jo
mov
pushf
adc
sarl
lods
cmp
push
mov
and
addb
inc
aad
push
addr16
jg
xor
fs
testl
sub
sub
cli
mov
in
mov
cmp
cltd
int3
pop
insl
xchg
testl
sbb
sub
insb
insl
sub
push
test
mov
sbb
test
rorb
add
mov
or
gs
sarb
dec
xchg
dec
xor
cmp
jno
mov
stc
mov
lahf
cmpsb
fstl
jno
lret
out
push
mov
call
ss
js
mov
popf
adc
dec
test
int
jns
cmc
inc
nop
je
lcall
mov
enter
or
scas
scas
jo
cmpsb
adc
inc
mov
mov
outsb
adc
rolb
dec
es
inc
jae
xchg
cmp
jecxz
jle
or
add
xlat
or
push
fwait
pop
aas
or
push
and
mov
dec
jge
or
xchg
inc
shll
aam
test
pusha
movsb
movsb
rclb
or
add
ss
in
test
dec
inc
jge
push
jle
mov
and
shll
in
fwait
sbb
push
aaa
push
imul
mov
xchg
enter
xchg
aas
flds
adc
xor
cs
jge
add
add
test
adc
mov
push
addl
cmpsl
mov
mov
cli
fidivs
sub
imul
popa
inc
and
cmp
dec
inc
rol
das
xor
dec
adc
insb
jo
pop
repz
sub
scas
popf
je
arpl
pushl
or
cmp
lea
and
psubusw
and
cmp
fcoms
cltd
loop
cwtl
dec
push
inc
call
cmpsl
scas
pop
pop
mov
adc
cmpsl
xchg
pushw
mov
rcl
mov
push
pop
cmp
out
test
pop
sbb
sbb
test
dec
mov
loopne
div
cs
push
cmp
loopne
or
or
mov
jmp
stos
int
loop
cwtl
dec
mov
imul
js
rcr
dec
mov
std
and
ljmp
add
or
popf
ljmp
mov
iret
add
pushf
and
add
mov
mov
mov
rcrb
push
out
sbb
inc
jl
clc
inc
adc
rcrl
mov
pop
stos
mov
mov
push
mov
jnp
push
and
mov
cli
dec
enter
scas
or
stos
lret
orb
or
mov
push
ret
mov
test
int
fldt
fistps
mov
add
jne
fidivl
fisubrs
sbb
roll
shlb
fs
push
ljmp
das
pop
jl
xchg
mov
xor
loope
fdivrl
idiv
je
push
ss
sub
out
je
mov
inc
push
shlb
lcall
mov
lahf
xchg
lock
or
jae
push
or
aad
fsubs
cs
mov
in
out
inc
sub
mov
adc
js
push
inc
mov
xlat
cmp
sti
xchg
or
xlat
out
pop
cmpb
xorb
mov
or
sbbl
cmp
shll
gs
mov
stos
cmp
jge
push
test
out
dec
clc
idivb
sub
lock
mov
mov
stc
inc
push
pop
mov
cmpl
push
fwait
jp
lret
sbb
movsl
enter
pop
add
pop
lock
mov
xor
jo
jb
jns
repnz
out
out
mov
or
in
je
outsb
nop
std
cs
insb
lret
movsb
mov
cwtl
dec
push
ss
fdivr
push
sbb
adc
in
fs
aad
add
js
adc
aaa
stos
cmpsl
pop
call
xchg
mov
xor
mov
popf
mov
push
repnz
clc
into
mov
xchg
lods
and
jmp
arpl
rorb
xchg
imul
inc
lahf
cwtl
aaa
xchg
or
add
cli
shl
movsl
inc
ret
mov
int3
rolb
or
mov
mov
incb
pop
mov
frstor
orl
jl
repnz
dec
jecxz
mov
push
dec
cmp
xor
cli
pop
out
ljmp
adcb
mov
cmp
pop
lahf
and
pop
pop
cmc
mov
xor
loope
push
or
js
pop
mov
push
jge
mov
in
mov
test
push
lret
inc
repz
mov
adc
js
dec
sbb
aas
lret
xchg
stos
and
xor
jle
sahf
push
int3
xchg
shl
xchg
test
ds
mov
and
or
sbb
insb
fdivrs
or
das
xor
pop
mov
pushf
add
jbe
jno
xor
in
inc
pop
cmp
xor
pusha
adc
test
cld
flds
or
scas
mov
hlt
mov
test
push
jge
xlat
lret
push
outsw
loopne
lods
adc
adc
insl
and
cs
vpmaddwd
test
sti
in
lcall
xchg
lea
cmp
and
insl
lods
or
lds
sbb
fisttpl
dec
inc
jae
fcomps
mov
test
add
mov
fidivrs
sbbl
stc
xchg
sahf
mov
push
jb
or
incl
dec
iret
mov
int
pop
or
insl
outsl
jns
lock
hlt
or
jns
cmp
test
push
inc
sahf
or
int
addr16
fistpl
jno
push
cmpsl
ljmp
push
insb
jno
sub
enter
inc
jp
and
cmp
fcompl
mov
mov
cwtl
testl
inc
nop
pop
inc
fwait
loopne
mov
fisttpll
cld
outsl
mov
xchg
cmp
cmpsl
sbb
jg
sub
dec
sbb
jae
scas
loopnew
mov
mov
or
sub
cmp
mov
fidivrs
movsl
data16
or
js
jnp
addr16
dec
aaa
cmp
mov
dec
repz
pop
push
jo
and
sub
aas
mov
pop
inc
or
cmp
lods
mov
inc
jne
in
and
mov
nop
iret
xor
jo
notl
shll
pop
dec
jg
xor
cwtl
dec
dec
dec
pop
lret
xor
fidivl
sub
addr16
fbstp
mov
std
push
lea
cli
loope
insb
addr16
jge
jecxz
mov
cli
ljmp
popf
lret
mov
and
std
shl
mov
loope
push
xor
aaa
sbb
jmp
subl
pop
inc
fnstcw
out
gs
add
jge
xor
addr16
jl
sub
out
ss
cmpb
or
inc
icebp
mov
sbb
insb
jmp
and
or
mov
scas
xchg
imul
xchg
loop
inc
inc
xchg
dec
mov
fyl2xp1
in
leave
pusha
xor
enter
faddl
jp
inc
loope
mov
mov
jmp
outsl
incl
inc
cmpsb
shrl
cmp
mov
sbb
fcoms
mov
or
jmp
mov
vmread
rcrb
int3
into
or
pop
in
and
and
loop
mov
sbb
sub
pop
mov
xchg
popw
fcmovne
mov
xchg
negl
cwtl
out
and
sti
fisttps
rolb
jmp
or
lret
das
popf
sub
or
push
dec
or
inc
in
or
in
cli
adcb
jno
mov
inc
scas
adc
icebp
js
js
scas
inc
jl
repz
pop
sbb
scas
lret
lret
inc
or
lret
mov
scas
xchg
ret
jg
push
sbb
add
inc
scas
lfs
sub
pop
test
adc
cmp
push
add
pop
fnstenv
in
inc
mov
fisttpl
bound
popf
popa
sbb
daa
pop
ret
cwtl
sbb
inc
pop
ret
lahf
add
rorb
push
adc
xchg
mov
xor
mov
sbbb
pop
mov
popl
add
les
in
mov
stos
or
outsl
jmp
movsb
xor
xor
sahf
inc
std
out
mov
cli
in
bound
jle
ret
pop
roll
imul
sbb
add
cmpsb
adc
mov
out
xchg
pop
das
pusha
lret
enter
cmp
mov
or
mov
pop
and
xlat
add
int
jo,pn
loopne
push
rcll
inc
enter
cld
sbb
arpl
sub
fldt
insb
xor
sbb
fs
cwtl
pop
mov
pop
add
cmp
lods
idivb
in
pop
add
lcall
mov
push
xor
std
inc
shlb
shll
jns
add
dec
xlat
jno
imul
mov
loope
out
jo
clflush
xor
add
in
gs
enter
test
adc
mov
dec
iret
adc
ljmp
lcall
xor
adc
ds
and
pop
insb
test
shrb
cmpsb
repz
jmp
xchg
dec
jae
stos
rolb
xlat
aam
jp
adc
adc
inc
push
outsb
xchg
mov
xor
mov
sahf
test
in
xchg
shlb
cmc
cmpsl
mov
les
jle
push
sbbb
ficoms
daa
jmp
dec
pusha
push
lret
push
aaa
out
cmp
sti
or
mov
or
int
jmp
mov
shrl
scas
dec
inc
xor
mov
mov
daa
cli
arpl
out
cmpsl
popa
sub
jle
aas
cmp
lods
mov
rcrb
xchg
daa
xchg
add
and
xor
push
sub
xor
outsl
inc
jmp
push
add
fdivl
repz
out
loope
xchg
fidivrs
jo
pusha
cmp
into
out
movsl
hlt
jae
rclb
xchg
in
or
daa
push
inc
mov
sbbb
scas
loopne
pop
insb
or
test
xchg
jecxz
xchg
ret
pop
movsl
cmpsb
cmpsl
and
xor
insb
ljmp
inc
lcall
movsl
jb
jl
or
rep
scas
outsb
add
inc
insb
pop
push
xor
cmpsl
sbb
mov
rclb
lods
fldt
lahf
das
fnstenv
mov
jmp
xchg
pop
add
xor
dec
les
sbb
pop
call
push
add
xchg
scas
movsl
lds
add
cmc
arpl
pop
shrb
mov
pop
aad
mov
repz
je
jl
sub
sub
push
dec
xchg
ja
dec
sub
cmp
push
xchg
test
std
pop
leave
fwait
sbb
jne
mov
dec
push
repz
and
xchg
add
fmul
cmp
mov
lcall
push
xchg
add
in
addl
lds
cmp
test
roll
dec
cmp
lea
call
adc
mov
xchg
mov
xchg
test
lahf
or
xor
movsb
int3
pushf
mov
in
mov
adc
pop
ds
out
sbb
loope
mov
sub
roll
push
jle
outsb
mov
fistpll
xchg
inc
ja
mov
mov
mov
dec
adc
sarl
sbb
sahf
cwtl
jle
cmp
adc
dec
and
add
in
xchg
mov
lods
popa
gs
mov
enter
mov
movl
add
aaa
lea
adc
scas
and
orl
sbb
loopne
push
sbb
push
adc
insl
push
mov
push
daa
cmpl
sti
jge
push
inc
rclb
insl
ret
outsl
mov
adc
outsb
repz
xchg
and
pop
loop
mov
mov
adc
gs
lcall
mov
lretw
test
loop
shlb
push
xor
cltd
jne
cwtl
icebp
cmp
pop
out
push
push
popf
xor
jle
mov
call
jle
js
fcom
jmp
push
mov
fs
pop
rcl
fs
cmp
push
int3
jl
ljmp
xor
stos
cmp
push
inc
jge
inc
aas
bound
mov
aam
inc
cli
cltd
jmp
aam
cld
in
in
and
fst
frstor
mov
mov
pop
mov
cmp
sub
mov
sub
iret
cmp
stc
aam
lret
das
js
lahf
adcl
push
xchg
clc
lcall
sbb
jbe
push
nop
cmpsb
icebp
in
inc
in
and
loopne
xchg
and
pop
addl
mov
mov
adc
sbb
cmpsb
inc
pop
pop
mov
ret
lock
sub
pop
scas
icebp
lds
sbb
rcl
push
sbb
lods
in
mov
mov
mov
dec
in
gs
jb
xor
movsl
rcrb
shr
sub
test
adc
js
out
fstps
test
fdivl
popa
push
movd
and
out
dec
ret
pop
sahf
xchg
outsl
push
jmp
popa
sub
outsl
lea
daa
mov
cltd
cmc
xor
addb
loope
jns
int3
xor
insb
movsb
loop
sbb
aam
les
pop
mov
shlb
ljmp
cmp
dec
lea
cmp
mov
xor
mov
push
jmp
and
ret
lret
pop
mov
ja
xlat
jb
ja
xchg
lcall
and
pop
xchg
es
mov
and
test
mov
js
push
movsb
out
add
imul
gs
dec
adcb
or
push
and
sbb
test
lcall
sbb
jns
cld
mov
push
fisubrs
jle
and
pop
pop
cwtl
rol
lcall
out
int
or
je
xchg
ret
or
leave
mov
push
push
mov
psllq
cmp
mov
push
sbb
pop
clc
mov
int
cmp
mov
sbb
pop
xor
sub
jne
pushf
int
outsl
aam
test
jbe
push
insl
aaa
fmull
ss
fidivrs
mov
cs
cmp
mov
sub
pop
pushf
outsb
stos
mov
mov
ss
ret
push
jno
xchg
lods
jnp
inc
pop
cmp
jmp
scas
xor
sub
xchg
adc
inc
push
adc
or
lea
xchg
les
pop
mov
xchg
in
add
fs
ljmp
or
lcall
ss
cmp
sub
jne
xor
add
pop
inc
hlt
dec
add
adc
mov
int
and
loopne
roll
arpl
imul
push
lret
out
lods
jbe
test
sub
insl
mov
adc
insl
icebp
aaa
cmpl
push
dec
push
and
xchg
cmp
xor
push
or
or
inc
or
subl
les
pushw
add
xchg
shrl
xchg
loopne
mov
jecxz
xchg
mov
out
mov
aam
xlat
fwait
insb
dec
and
jbe
dec
es
add
jo
unpcklps
cld
hlt
add
and
repz
dec
lret
dec
data16
in
test
lock
pop
das
adc
std
cmp
sbb
push
repz
es
enter
xor
adc
xchg
pop
pop
in
dec
push
loop
je
sahf
test
rcrl
icebp
stc
call
fstpl
or
push
or
inc
hlt
jle
ljmp
lret
mov
jmp
inc
shll
sbb
dec
je
rorl
aaa
xchg
cmpsl
loope
arpl
jg
sub
imul
int3
leave
lret
fistps
and
lods
dec
or
cmpsl
xchg
jbe
ljmp
sbb
pop
cli
pusha
jg
pop
aam
inc
cmc
sbb
sub
pop
sbb
iret
jp
lcall
inc
in
js
hlt
dec
out
addb
pop
cwtl
mov
add
mov
sbb
or
cmp
push
xchg
sbb
or
scas
test
sub
jge
repz
jmp
cld
cmp
rcrb
aad
jbe
in
sbb
pusha
push
sbb
sbb
cltd
lock
popa
das
ja
inc
inc
and
xchg
insb
dec
ja
out
jecxz
sub
lods
pop
negb
add
or
das
jp
cmp
mov
inc
xchg
xchg
mov
fs
psubd
dec
mov
mov
pop
mov
stos
inc
jae
mov
pop
ret
out
mov
or
cli
test
sbb
ficomps
stos
pop
andl
daa
mov
lods
insb
mov
push
sub
push
idiv
sub
lock
xchg
push
sarl
cmpsl
stc
sub
dec
call
xchg
xor
xchg
out
mov
mov
mov
enter
test
inc
cmpsl
mov
xor
pop
dec
pop
cmp
stos
xchg
std
rcrl
les
mov
xchg
sti
or
push
pop
or
inc
inc
xchg
mov
add
and
jp
inc
jno
mov
divl
pusha
and
jbe
out
xchg
enter
jg
pop
or
or
fwait
push
lods
bound
or
out
leave
push
mov
pop
add
and
in
les
sbb
int3
cmp
sbb
adc
xchg
aaa
daa
pop
scas
pop
andl
loope
cmp
test
out
imul
movsl
dec
push
pop
sub
stos
dec
or
xor
jb
inc
inc
push
lods
pop
cltd
stos
mov
inc
inc
dec
jge
fstps
mov
add
loop
or
sbbb
add
jb
stos
in
and
sub
add
loopne
cmp
out
add
icebp
mov
outsb
mov
pop
popa
popa
mov
fs
xchg
loope
inc
push
xchg
in
lea
cmc
fwait
leave
addr16
sbb
out
sbb
and
jmp
fwait
and
mov
push
mov
dec
jb
adc
dec
mov
push
ljmp
push
pusha
adc
mov
loopne
or
adc
es
lock
pusha
inc
fbld
loop
out
test
mov
filds
push
pop
or
sbb
pop
add
xchg
enter
cmp
pop
xlat
ljmp
mov
and
je
int
add
xor
sbb
jne
not
inc
rcrb
negb
adcb
aas
jle
inc
xor
pop
mov
mov
adc
sub
stos
mov
xor
es
sbb
xor
or
or
popa
mov
aam
jbe
xchg
outsb
pop
cmc
scas
imul
xchg
xor
test
xchg
dec
mov
fiaddl
andl
in
inc
les
test
scas
mov
push
cmp
mull
enter
mov
push
add
lret
decl
mov
clc
ss
fmull
sahf
ret
fwait
loope
test
sub
and
scas
ljmp
xchg
dec
mov
adc
lock
push
push
jae
add
push
pop
pop
into
cmp
jg
sbb
lods
mov
int
jns
cmpsl
pop
mov
popf
mov
mov
mov
call
cwtl
jecxz
int3
pop
add
xchg
mov
mov
mov
mov
out
ja
jae
aam
xchg
push
jnp
mov
add
loop
aad
mov
aad
push
jo
push
int
and
out
and
push
sub
mov
mov
je
mov
int
int3
jb
out
xchg
imul
aam
js
jb
stos
add
test
lcall
pushf
or
fdivs
inc
and
xor
lea
pop
dec
mov
aaa
inc
mov
push
icebp
ja
sbb
jno
xchg
cmc
lcall
jecxz
lcall
leave
sbbb
add
push
aas
jns
add
scas
int
add
ljmp
into
insb
enter
rcll
es
jg
ja
lcall
pop
mov
loop
aam
daa
mov
lods
loop
adc
sbb
adc
pop
sbb
jno
jmp
stos
lret
jb
mov
es
and
push
lds
movsb
les
pop
movsb
pop
or
pusha
sbb
nop
enter
loope
inc
repz
rcrb
xchg
push
dec
lds
inc
es
cmpl
sub
dec
ljmp
fwait
jne
jp
lcall
adc
or
arpl
push
jl
push
xchg
or
icebp
pop
xor
movsl
sbb
in
mov
fnstsw
test
leave
mov
cmp
push
or
in
dec
movsb
fdivs
pop
scas
jle
insb
push
jb
jl
xorb
daa
scas
mov
aaa
mov
sub
xor
add
pop
js
aas
popa
adc
stos
enter
mull
and
out
negl
dec
push
xor
pushf
sbb
push
mov
les
insl
pop
pop
outsb
xchg
pop
adc
daa
adc
js
jmp
adc
dec
test
mov
int
out
loop
lock
incb
lods
and
and
xchg
cmpsl
sbb
sub
icebp
rorb
or
lock
cmpsb
xchg
xchg
xor
bound
scas
imul
mov
fcomps
cmpsb
mov
mov
and
lret
pop
dec
notl
sub
sub
mov
rcr
lea
pop
xchg
out
adc
imul
and
dec
adc
ficoml
xor
scas
loop
pop
add
inc
sbbb
or
push
pop
sbb
and
add
shll
insb
cwtl
mov
jmp
push
jns
adcl
push
cmp
push
fstl
push
in
xchg
inc
pop
adc
fwait
push
dec
mov
sub
rclb
nop
dec
push
insl
scas
pushf
mov
sarl
es
cmp
sub
dec
cs
inc
pop
out
jl
shrl
sbb
fistl
jmp
fisttpl
ss
ror
push
or
jnp
xchg
xchg
jbe
mov
outsl
sahf
cli
pop
dec
pop
popf
push
jge
jbe
fucom
xor
ficoms
mov
adc
cltd
loop
in
mov
lea
icebp
sub
or
pop
xchg
inc
fnsave
data16
lds
cmp
fidivs
cltd
add
leave
lea
sbb
lea
shrb
fwait
inc
lock
test
lcall
xor
rol
repnz
adc
mov
pop
int3
pop
and
shrb
push
out
push
xchg
imul
out
fmull
out
cli
fstl
jge
jp
ja
das
pop
jg
mov
sub
xchg
aad
in
and
std
jo
xchg
jg
push
mov
and
clc
jl
xlat
testb
ret
insl
cmpsl
or
aas
imul
faddl
xor
mov
mov
jmp
popf
in
adc
out
lock
shl
ds
mov
roll
mov
ret
sub
xchg
xchg
jecxz
inc
adc
insl
jg
pop
mov
adc
jmp
arpl
sub
addr16
sbb
pop
test
shlb
and
outsl
jnp
inc
xlat
xchg
xchg
mov
xchg
mov
repz
xlat
cli
push
xchg
lahf
fdivrp
push
rorl
cmp
push
jo
je
rorb
stos
fidivrs
cmp
fdivrs
mov
cld
push
mov
dec
sub
stc
cmp
lahf
pop
scas
jp
stc
and
mov
sub
and
loope
dec
mov
ja
std
inc
test
cmp
xor
and
sahf
ja
out
lret
mov
xor
and
xchg
aas
ds
cs
ret
movsb
dec
pop
mov
movsb
idivl
or
jle
test
add
std
cwtl
or
mov
addr16
mov
es
negl
xchg
pop
leave
ds
adc
push
ss
mov
xor
inc
mov
shll
pop
mov
jae
psubq
mov
mov
les
jo
fcoml
inc
inc
cli
jecxz
stos
movsl
and
loopne
fmul
xchg
lea
insl
mov
std
adc
daa
je
pop
into
movsl
dec
xor
inc
addb
xchg
add
out
xor
cmp
jns
mov
mov
out
sti
insb
in
bnd
leave
inc
cld
xchg
xor
pop
inc
lcall
cs
or
and
mov
inc
shll
mov
jno
pushf
pop
outsb
dec
arpl
outsb
cli
push
popa
pop
and
xlat
jp
int3
and
scas
push
jno
jecxz
loop
mov
mov
or
int3
jnp
jg
sub
icebp
jp
xor
fistps
cmp
mov
int
lea
or
jecxz
shll
les
outsl
test
cltd
xchg
mov
sub
jl
sbb
jle
movsl
xor
into
hlt
popa
cs
sbb
fdivrs
test
xchg
ja
cmp
xor
push
push
jne
add
ficoms
insl
pop
jmp
add
jmp
push
imul
inc
daa
lea
jne
mov
cli
dec
jg
lds
popf
imul
add
mov
ret
jb
and
cmovs
out
xor
jmp
and
in
cmpsl
lret
cwtl
lret
leave
sub
sub
cmp
out
pushf
pop
jecxz
jnp
movsb
mov
js
stos
jne
shll
lods
add
and
sub
push
xor
inc
inc
loopne
mov
mov
loop
add
xlat
xor
je
push
cmp
xlat
push
add
adc
lods
out
ds
mov
mov
icebp
pminsw
mov
sahf
lds
test
dec
cs
repz
jecxz
inc
inc
mov
add
add
mov
pop
mov
jg
pop
scas
and
jnp
sub
mov
adc
sbb
push
int3
divb
lahf
dec
test
mov
imul
mov
cmp
dec
lods
sub
ljmp
mov
cwtl
cmpsb
dec
pushf
enter
push
xchg
sbbl
sbb
rorb
mov
dec
dec
mov
xchg
cmpsb
dec
aas
xlat
in
repnz
stos
dec
mov
int
mov
or
leave
sbb
sti
push
or
rolb
adc
popf
je
adc
repz
dec
xchg
jb
aad
pop
and
mov
cmp
out
orb
in
cmp
jmp
subb
xor
ja
movl
pushl
inc
xchg
mov
mov
pop
arpl
dec
xchg
jo
lea
xor
psrlw
jge
out
xor
lret
divl
mov
test
sub
dec
dec
lods
sbb
mov
in
push
std
popf
iret
sahf
in
mov
jp
ds
sub
mov
push
jle
adc
xchg
loope
adc
int
push
jmp
les
jae
test
xchg
cld
sub
test
pop
push
js
outsl
jmp
xchg
dec
cmp
nop
add
and
xor
jle
adc
faddl
or
inc
dec
inc
jge
out
cmp
jmp
jmp
sbb
push
sub
pop
push
sub
dec
jae
hlt
test
adc
sub
sahf
pop
loopne
jmp
cmp
sub
lods
fmull
dec
loopne
push
mov
mov
in
jb
pop
aad
sub
lock
mov
enter
insl
push
es
mov
push
push
mov
sti
jb
mov
dec
mov
cltd
xchg
subb
sub
aas
or
jl
pop
in
jmp
mov
cmc
cld
push
push
test
es
xor
inc
arpl
jp
and
cltd
cmpsl
push
jecxz
and
xlat
imul
imul
xor
pop
fiaddl
mov
pop
popf
mov
fucomp
popf
imul
xor
bound
mov
cmpsb
nop
hlt
mov
out
inc
jns
sbb
das
out
or
pop
mov
dec
fmulp
inc
nop
outsl
dec
xchg
loope
subl
adc
shrl
push
mov
pop
xor
in
push
test
cmpsb
dec
dec
xor
jae
mov
jb
sub
xchg
xchg
jb
outsl
mov
push
and
cmp
xor
mov
mov
dec
mov
arpl
js
push
add
and
lods
rorl
roll
push
lea
xor
xchg
enter
stos
scas
push
fistl
sbb
mov
mov
or
test
test
lret
mov
stc
sahf
cmc
rcr
and
sbb
cmp
outsb
popf
shlb
pmaddwd
bound
stc
or
jg
mov
loop
iret
mov
cltd
jmp
ljmp
es
add
push
pop
jno
je
out
mov
jb
in
sub
aam
cs
lret
mov
sbb
mov
and
lret
inc
lock
push
insb
int
lock
pushf
ljmp
jne
push
dec
xchg
jb
daa
in
lock
sar
mov
add
push
inc
daa
mov
inc
pop
xor
push
bound
iret
hlt
fdivp
pushf
test
inc
and
int3
xchg
cld
insl
sub
and
fisttpl
mov
inc
lahf
adc
test
mov
fcmovnu
pop
cmp
xchg
outsl
push
cmpsb
gs
add
push
subl
mov
or
and
outsb
loope
xchg
xor
sbb
jbe
data16
lret
mov
inc
pop
fstpl
mov
jbe
rep
cltd
jmp
and
mov
test
push
test
stos
or
pop
les
shll
mov
stos
mov
push
lea
adcb
mov
jne
mov
cmp
leave
sub
leave
sahf
jl
ds
hlt
jge
js
popa
ficompl
and
sub
push
lcall
insl
jno
jg
fnstcw
pop
fidivl
add
filds
repz
mov
stc
cmpsl
or
fstpl
xchg
jl
sub
xchg
insb
test
and
iret
enter
frstor
mov
dec
dec
xchg
push
mov
in
loop
in
mov
push
jne
inc
pop
outsl
and
sbb
fstpt
cld
dec
push
mov
mov
fistpl
dec
add
xchg
outsl
jecxz
pusha
or
in
adc
and
out
inc
sbb
add
pop
inc
inc
es
mov
popf
loop
xchg
xchg
or
xor
add
jecxz
sub
leave
cmp
sbb
bnd
pop
in
out
rol
mov
leave
insl
pop
jo
cmc
ror
jbe
add
and
cmp
add
mov
push
ret
loopne
cmpsb
popa
insb
dec
aad
int
pop
mov
test
push
jne
aam
mov
imul
pop
aas
sub
inc
mov
adc
jmp
addr16
jnp
mov
loopne
lcall
in
cmpb
xor
jbe
cmp
loopne
loope
dec
ret
xchg
out
push
jbe
xorl
js
push
inc
shl
mov
pop
or
icebp
pop
add
ljmp
test
sub
shr
enter
lret
and
mov
push
leave
cltd
and
je
das
popa
xchg
aad
es
xor
xchg
ret
dec
mov
mul
mov
add
pop
pavgw
xor
dec
test
add
jp
jae
sbb
les
lea
mov
test
cs
imul
or
faddl
push
mov
aad
stos
push
push
sbb
or
cmc
push
fucomp
test
push
xchg
mov
jl
out
std
fwait
out
cmp
xchg
push
outsb
or
loopne
mov
cmpsl
jb
cmpsl
popa
add
sti
aad
add
jmp
stc
cli
pop
jle
ret
fistpl
ret
xchg
push
je
or
shll
push
add
in
sub
or
xor
cmc
mov
dec
add
and
inc
clc
cmp
dec
mov
nop
xchg
mov
or
pop
xor
cmp
jb
xchg
mov
cmpb
dec
sbb
xor
pop
popa
xchg
fsubrl
or
gs
pop
vminpd
mov
pop
lret
pop
push
xor
adc
sbb
fisubs
xor
test
push
shlb
sbbl
xchg
repz
mov
pop
xchg
cmp
mov
mov
shl
stos
xchg
mulb
movsb
fisubrl
push
loop
xor
movsl
mov
loop
daa
std
push
aas
inc
jae
sub
or
xchg
mov
arpl
mov
cmpsl
and
push
pop
jnp,pt
loopne
aas
inc
popl
scas
and
cmp
pop
nop
mov
shrl
stos
xor
out
mov
test
bound
xchg
in
shrb
lds
mov
xchg
jno
xor
xor
aad
repnz
es
outsb
fldcw
dec
sahf
cmp
flds
mov
add
inc
mov
out
int3
inc
add
push
xchg
xorb
or
test
lods
mov
lret
mov
dec
popf
xor
ret
pop
mov
cltd
lea
mov
shl
jge
mov
xchg
dec
jbe
cmpl
or
sub
sub
cmp
sbb
outsl
lea
fidivs
repz
fucomp
sbb
adc
xor
jmp
jne
cld
pop
nop
pop
cli
std
or
xchg
movsl
enterw
add
dec
push
call
insb
jbe
xchg
mov
push
adc
sbb
xorl
out
xchg
mov
cmp
andl
push
dec
push
test
mov
fcompl
jns
cmp
dec
sub
repz
push
mov
inc
cmp
and
lds
sti
mov
jns
addr16
push
xor
inc
shlb
sbbl
xor
adc
rol
testb
mov
cmp
and
shrb
xlat
xchg
push
mov
insb
inc
sahf
pop
ja
mov
xchg
sahf
hlt
clc
imul
lcall
mov
mov
sbb
sub
xor
out
mov
lret
sbb
clc
mov
pusha
sub
fimull
mov
repz
loopne
jae
out
out
dec
mov
mov
inc
push
aas
scas
cmpsb
pop
out
nop
test
stos
cmc
cltd
mov
faddl
ss
cmp
push
daa
pop
push
or
cmp
sbb
sub
cld
push
int
rorl
add
dec
mov
push
sbb
jns
das
inc
iret
subb
nop
mov
cmp
sub
push
xchg
inc
cmp
jg
sbb
insb
or
add
xor
jns
mov
in
or
push
xchg
inc
pop
and
jbe
out
or
ret
lods
and
mov
xor
popa
or
test
sahf
xchg
add
dec
rcrl
and
jecxz
mov
scas
cmp
sbb
fldl
dec
stos
fisubl
xor
pop
movb
int
inc
shl
sbb
leave
mov
dec
adc
clc
push
loope
sbb
dec
es
xchg
cmp
decb
in
fcmove
not
loope
pop
iret
adc
arpl
insb
daa
stos
sar
cli
or
sarl
mov
xchg
cmp
ds
loop
imulb
inc
add
rcr
add
dec
out
jnp
movsb
and
mov
fmuls
inc
mov
push
sbb
neg
test
mov
fwait
mov
add
outsl
push
dec
mov
dec
push
sbb
jae
ficoml
inc
pop
adc
push
cmp
popa
mov
cmp
and
mov
and
push
jnp
mov
fs
leave
jle
xor
or
and
push
jge
fcmovbe
mov
faddl
out
int3
xchg
or
cmp
cwtl
mull
icebp
stos
faddl
add
adc
sbbl
ljmp
xchg
push
push
inc
out
push
dec
jp
ja
jg
loope
sub
fnsave
xchg
and
je
ret
pop
enter
outsb
add
mov
scas
jne
sbb
leave
ds
push
out
sbb
popf
and
or
jae
lock
pop
push
or
fstl
popf
sub
mov
aam
adc
test
fistpl
cmc
mov
sub
xchg
jb
xor
add
or
loopne
jmp
add
popf
sarl
mov
mov
mov
js
sbb
pop
cmpsb
adc
scas
push
repnz
dec
test
pop
lret
or
mov
aas
push
pop
pushf
loope
xor
mov
xor
xlat
imul
mov
dec
add
jmp
lock
sbb
push
mov
jne
dec
cmp
call
jnp
outsl
into
pop
push
movsl
pop
lods
mov
push
orb
movsb
jp
gs
ret
movsb
or
cmp
inc
xorb
jl
xchg
inc
aaa
ss
test
jecxz
jmp
and
add
or
lock
jl
jle
popf
clc
sbb
jmp
mov
inc
pmullw
cwtl
mov
cltd
ljmp
inc
int
mulb
fcmove
stc
into
sub
lock
sbb
or
push
mov
hlt
xor
mov
cmp
ljmp
cli
mov
dec
sub
out
ret
cs
push
aaa
std
mov
arpl
mov
dec
mov
cld
nop
push
insl
addb
fmul
data16
and
mov
test
mov
ss
loope
cmp
mov
enter
adc
out
or
addr16
add
loop
cs
jl
push
mov
in
ljmp
mov
xor
inc
fcomps
nop
mov
testb
inc
arpl
jb
push
jne
cmpsb
mov
loope
jbe
test
mov
pop
or
jbe
push
lcall
inc
cs
xchg
pop
inc
out
sahf
subb
push
and
rolb
fadds
popl
cmp
cwtl
andl
xor
inc
xchg
jo
rorb
setge
imul
imul
mov
cltd
xor
pop
fbstp
xchg
cmp
leave
add
sub
jecxz
cmp
adc
and
or
loop
shrl
xlat
adc
sub
cs
popaw
dec
mov
movsb
xchg
sbb
and
adcl
mov
fucomip
push
rcr
jecxz
mov
ss
lahf
and
loopne
adc
push
repz
mov
jp
xor
arpl
sub
std
adc
sub
stc
mov
mov
jae
jns
or
fs
inc
inc
into
push
jo
cld
and
sub
mov
sbb
stos
sbb
dec
xchg
nop
aaa
in
push
int3
push
movsb
inc
cmpsb
add
cmpsl
mov
sbb
jnp
jnp
jg
pop
scas
insb
xor
idivb
sar
dec
in
out
popf
jnp
lret
shll
sub
les
jb
sarl
scas
rclb
scas
mov
or
sbb
add
addr16
lret
rcrb
daa
enter
mov
adc
mov
push
and
stc
cld
xor
aaa
add
shlb
cld
inc
xchg
cltd
xchg
add
or
mov
test
call
iret
pop
test
cs
mov
aad
repz
movsl
inc
rcr
mov
xor
lods
adc
add
lcall
mov
mov
in
add
jmp
divb
mov
hlt
lahf
cmp
jae
inc
pop
lods
push
adc
fidivl
mov
sbb
mov
mov
out
adc
pushf
loop
sub
out
enter
adc
mov
sub
scas
out
fwait
das
xchg
sub
rcrl
inc
dec
mov
pop
jnp
lock
or
mov
jg
clc
pop
mov
stc
or
push
mov
testl
and
aam
pop
dec
adc
mov
std
ffree
ds
cmp
mov
into
sub
ss
out
xor
adc
es
sbb
xlat
ret
cmpsl
insb
loop
std
adc
jmp
shll
mov
mov
mov
roll
mov
jae
je
xchg
ret
pop
or
jne
mov
xchg
aaa
idivl
inc
xchg
sbb
mov
xchg
testl
sub
movsl
outsb
pop
inc
mov
dec
mov
sarl
mov
xchg
shlb
cmp
data16
lock
pop
or
add
fsubrs
jae
jbe
leave
mov
xchg
xlat
loopne
mov
aad
push
stos
mov
dec
cmc
dec
xor
sub
jg
xor
popf
mov
jae
xchg
xchg
mov
and
sbb
xor
jo
inc
int3
dec
pushf
cmp
cs
or
cmp
mov
inc
rcrb
or
insl
imul
cmp
sub
in
imul
cltd
addr16
sbbl
cltd
popf
outsb
ljmp
cmp
ja
xor
xor
or
adc
mov
fcoms
scas
dec
movsb
stos
add
icebp
and
sub
sub
and
xchg
xor
mov
mov
insl
test
enter
add
push
cmp
jns
ljmp
push
in
add
mov
daa
addr16
andl
fisubl
jb
and
pop
mov
lock
jmp
sbb
jge
andb
push
jnp
ds
mov
xlat
adcb
mov
outsl
cld
lcall
adc
movsl
das
addr16
xor
xchg
pop
testb
cmp
out
sbbl
dec
out
and
arpl
adc
mov
mov
xchg
xchg
js
into
iret
jle
adc
adcl
daa
rcr
mov
fiadds
xor
xchg
sub
les
repnz
or
mov
sarb
lods
or
cltd
lret
add
test
mov
push
sbb
mov
out
fwait
icebp
sbb
and
xlat
inc
and
push
or
dec
dec
mov
sub
or
sbb
sub
and
sbb
scas
movntps
adc
stc
stos
sub
jmp
fimull
sbb
push
leave
adc
dec
mov
inc
lock
lret
inc
xchg
push
insl
aaa
popa
mov
in
cmp
lds
xchg
notb
cmc
cmp
cli
fs
push
cwtl
subl
adc
pop
push
push
lret
mov
cmp
std
adc
sub
andl
mov
adc
pop
adc
repz
adc
ror
sti
mov
mov
lahf
dec
sub
imul
xor
xor
leave
jne
aam
lock
lods
xchg
push
insb
fcomps
adc
mov
sarl
repnz
ljmp
jb
je
push
jno,pn
inc
out
inc
or
ljmp
ret
xchg
push
ficomps
roll
dec
jg
addr16
mov
cmp
mov
dec
dec
stos
xchg
dec
xchg
dec
lret
movsl
inc
push
das
jbe
das
rcr
xchg
push
push
mov
out
xor
xor
adc
cltd
pusha
inc
iret
in
lret
xchg
pusha
mov
lds
inc
out
mov
xlat
lret
cltd
sub
fsubs
push
aam
aas
mov
jle
pop
repz
add
xor
jne
daa
call
sub
fcom
cwtl
cmp
adc
outsl
mov
fdivr
pop
call
call
addr16
xor
or
or
lret
sub
sub
inc
test
repz
dec
aad
jecxz
sysexit
adc
dec
mov
rclb
loopne
ret
lds
aad
add
stc
stos
cmp
roll
sbb
add
js
loopne
clc
push
pop
stos
mov
push
xlat
cmp
aad
push
jnp
ja
jg
pop
mov
fldcw
mov
fsubrs
shrl
shll
loopne
fwait
cmpsl
repz
jns
fistpll
sbb
push
leave
ljmp
jns
arpl
add
mov
popa
push
loop
fs
cmc
xchg
adc
aad
loopne
fisttpl
adc
sub
xlat
js
mov
cmpsb
add
mov
dec
int
mov
lret
dec
add
sub
pop
lret
stos
stos
push
in
hlt
cltd
dec
adc
cmp
insl
aad
dec
mov
or
enter
and
xor
xor
dec
pop
mov
adc
cmc
mov
pop
pusha
out
imul
arpl
push
pop
jne
mov
lahf
mov
push
pop
rcll
xchg
shll
cmp
rcr
lea
sub
test
lods
dec
out
pop
add
loope
dec
or
pop
sub
sahf
jmp
rcrb
inc
push
and
fwait
out
cmpsb
xor
and
or
mov
daa
mov
pop
gs
in
out
mov
adc
es
push
add
insl
push
ss
xchg
adc
enter
mov
xchg
stos
add
imul
and
test
push
fwait
and
xchg
inc
sbb
shlb
cmp
test
add
cmpsl
dec
inc
lods
int
fadds
jo
push
shll
or
pop
push
inc
sub
mov
out
lcall
xlat
or
arpl
in
mov
aad
jbe
dec
daa
pop
sbb
mov
push
cli
fs
or
sbb
adc
jns
inc
cmpsb
xlat
inc
cli
js
ss
addl
bound
adc
into
pop
or
in
mov
mov
lret
js
es
mov
mov
test
imul
pop
rcrb
push
and
add
mov
xor
cmpsl
mov
loopne
sbb
fsubp
lock
xchg
aas
aaa
inc
inc
add
pop
mov
pop
mov
call
aad
fstpt
das
push
xor
add
jmp
shll
shrl
mov
and
test
xchg
add
push
cmp
and
aam
sbb
in
clc
lea
mov
ljmp
push
es
inc
daa
push
inc
adc
cli
xor
push
inc
nop
mov
das
notb
cmp
lods
ss
cmp
iret
rcll
push
xlat
lods
cmp
scas
call
aam
inc
or
adc
shl
lods
rcrb
jg
cmp
cmp
fwait
jne
xchg
jp
inc
inc
pop
push
mov
push
jo
and
ja
xor
cmp
jl
out
jo
daa
mov
into
pop
lds
push
xchg
sbb
inc
xor
dec
cmpsb
andb
xor
nop
pushf
in
repz
push
push
mov
xlat
sub
add
inc
xor
add
into
mov
pop
adc
inc
dec
out
cmp
repz
push
push
mov
or
in
xlat
jecxz
push
xor
push
bound
xchg
in
gs
cmp
aas
xchg
rorb
mov
popl
mov
ret
lret
loop
shr
mov
stos
inc
imul
sbb
inc
fistpll
jmp
push
iret
out
mov
scas
mov
adc
xchg
fdivrs
gs
add
pop
mov
mov
ret
pop
repz
xchg
repnz
cmp
jmp
jp
jno
push
mov
adc
pop
xor
or
stc
insl
add
xchg
bnd
mov
rclb
push
lock
enter
jmp
sub
out
ds
fwait
in
mov
adc
dec
mov
test
or
stc
inc
mov
imul
nop
push
jne
or
clc
fists
je
dec
jle
dec
sbb
mov
mov
jnp
scas
jb
mulb
jb
shlb
cmc
inc
sbb
fstl
or
sub
mov
xlat
fisttpll
jns
inc
ljmp
add
push
fcmovu
fxch
mov
push
mov
out
pop
push
fwait
cs
movsb
or
loopne
hlt
push
sti
ffree
fidivs
dec
xchg
enter
mov
xchg
mov
andb
nop
sbbl
cmpsb
mov
rolb
cmp
jne
flds
mov
frstors
pop
xchg
inc
mov
mov
ds
addr16
outsb
xor
mov
int3
ljmp
push
fmull
mov
sbb
paddw
divl
js
or
imul
or
ss
inc
pusha
imul
push
mov
inc
xchg
dec
iret
divb
xchg
jb
out
lds
and
cwtl
sti
lea
xchg
cwtl
sbb
roll
xlat
mov
cmp
pushf
pop
mov
rcrl
das
adc
cli
pop
cmp
inc
adcb
push
pop
es
orb
lcall
test
mov
pop
add
xchg
es
aad
jnp
stc
mov
mov
xchg
xchg
scas
push
nop
jl
or
or
ljmp
lds
add
aam
mov
mov
push
pop
xchg
outsl
pop
mov
lahf
ds
mov
mov
outsb
pop
cmp
enter
movsb
orl
sbb
push
mov
rcrb
lret
jno
xor
xchg
mov
jno
mov
or
scas
lahf
dec
push
mov
sub
or
mov
in
sub
cmp
jle
mov
mov
inc
xchg
movsl
cs
pop
adc
pop
mov
fcoms
cmp
nop
jno
lock
sbb
xchg
or
nop
or
shll
scas
cwtl
shrl
sub
pop
cmpsl
gs
cmp
push
add
xchg
std
inc
scas
leave
dec
cmp
push
mov
in
sub
and
ss
xor
ret
inc
jmp
mov
mov
push
addr16
push
adc
gs
pop
stc
mov
jno
shrb
cld
sbbl
cltd
adc
mov
adc
lahf
or
int
and
sarl
add
lds
add
dec
add
idivb
cmpsl
icebp
outsb
mov
mov
xchg
pop
repz
jo
into
pop
push
mov
and
push
stos
test
adc
subl
mov
fstl
ret
xchg
jbe
mov
xchg
imul
jmp
xchg
lock
cmpsl
push
insl
scas
push
and
sub
iret
sub
cmpsb
jmp
jge
mov
pop
mov
fisttps
das
adc
mov
int
in
dec
mov
stc
lahf
jb
leave
fcmovbe
sub
jmp
add
cmc
xchg
es
sti
mov
ljmp
sub
mov
lods
bound
push
or
in
xchg
icebp
pop
inc
xchg
pushf
push
clc
dec
add
and
out
pop
std
mov
int3
inc
out
dec
in
pop
mov
ret
mov
inc
fisubs
mov
xlat
je
jae
cli
leave
xor
mov
cmp
scas
inc
jle
mov
dec
lahf
push
cmp
cld
scas
lret
aam
insb
xchg
sbb
add
sbb
pop
and
push
add
dec
shlb
call
aam
cld
xor
loopne
add
xor
enter
push
ret
loop
stc
out
push
out
mov
dec
cs
or
xor
ss
in
fcompl
lods
mov
pop
pop
jle
dec
pusha
pop
loop
je
mov
js
sbb
sbb
imul
pop
cmpsl
push
test
lahf
inc
inc
lds
push
jne
inc
adc
mov
xchg
lea
jae
lds
pop
daa
push
push
out
dec
pop
xchg
ss
pop
mov
cmp
xchg
mov
mov
xchg
or
jb
filds
movl
xchg
push
wrmsr
decl
fs
shrb
mov
fadds
fdivrs
jno
mov
out
jo
pop
popf
or
popa
or
lea
xchg
sub
clc
js
cltd
inc
sub
popa
je
sbb
out
inc
jo
data16
jns
sbb
fldl
mov
sub
mov
and
stc
mov
push
jnp
inc
sub
pop
shr
dec
xchg
xchg
stos
sbb
rcll
xchg
dec
fsub
mov
outsl
push
sub
decl
imul
cltd
setno
sbb
inc
pop
aad
notb
lret
jle
shlb
insb
dec
jo
int3
jnp
jno
jnp
test
test
sbb
dec
ret
pop
or
in
test
xor
sti
or
inc
dec
add
push
xor
and
dec
aam
cmp
add
loope
dec
daa
jle
inc
mov
in
cmp
xchg
jno
push
shl
enter
fdivrs
je
cmp
cs
jb
or
mull
mov
mov
mov
aam
insl
pop
aas
into
push
stos
dec
xor
jbe
mov
fcoml
loop
xor
icebp
xchg
shl
lods
and
xor
jecxz
pop
call
xor
inc
cltd
add
push
xchg
andb
arpl
mov
test
ret
out
lds
sbb
out
cld
stos
mov
stc
stc
outsl
jp
and
rcl
jae
fdivl
cmp
add
sbb
popf
in
mov
pop
jns
pop
negl
adc
je
rol
outsl
pop
adc
dec
subl
xchg
test
rcrl
mov
jb
into
push
push
test
and
inc
push
ror
pop
mov
mov
xor
outsb
cltd
in
xchg
or
fstps
xor
lret
xchg
ret
nop
fisttpl
and
out
cmpsl
mov
dec
fildl
xchg
and
repnz
jecxz
cwtl
mov
das
mov
sarb
aas
pop
in
or
xor
sub
aas
pop
hlt
test
rcrb
xchg
movsb
cmp
and
fcoms
cmp
lods
mov
mov
xchg
xor
in
jnp
test
ret
xor
pop
sti
pusha
jnp
jae
std
cmpb
push
jmp
xor
out
or
pop
scas
adc
push
mov
ja
inc
xchg
out
push
leave
pusha
mov
pop
aad
or
fcomi
in
jb
loop
mov
push
or
loope
mov
test
pusha
push
insb
lea
push
sbb
testl
ds
jecxz
or
in
adc
fcomi
filds
dec
int3
mov
sbb
in
movsl
fisttpl
mov
stc
aad
xor
out
add
test
pushf
push
mov
cwtl
sbb
cmpsb
ret
mov
jmp
fdivrs
jne
pop
jl
out
lret
fsubr
sbb
fsubl
cmp
or
and
adc
sbb
add
mov
and
push
jae
xchg
scas
movsb
mov
addr16
cmpsl
iret
stos
push
cmp
sub
mov
in
bound
mov
push
xor
mov
sub
pusha
sbb
pop
test
mov
test
sbb
inc
jns
xlat
movsb
mov
out
into
mov
cli
adc
std
andb
fdiv
lock
jb
adcl
add
mov
test
lock
add
sti
xorb
mov
iret
xchg
test
lods
sub
push
rol
outsb
xchg
scas
into
jl
das
shll
cmp
lcall
sbb
jns
popa
negb
int3
push
rcrb
cs
xor
imul
mov
das
repz
jle
pop
mov
or
test
xchg
int
xchg
jmp
pop
out
pop
dec
rcl
xchg
add
stos
inc
pop
mov
mov
push
jg
pop
pop
pop
dec
cmp
xchg
lds
mov
mov
sbb
fs
fiadds
outsl
test
testl
mov
jbe
jb
add
add
jbe
or
stos
fisubrl
pop
push
adc
adc
xor
or
inc
jne
mov
in
mov
seta
pop
cmp
outsl
cmp
call
and
xorl
sub
jecxz
adc
or
jbe
pop
mov
test
call
or
ds
mov
lret
or
and
push
aaa
jns
call
fwait
sub
add
mov
push
mov
pop
jmp
jns
push
cmp
or
cltd
aas
sub
sti
push
inc
push
or
cmp
adc
arpl
scas
sbb
push
mov
loope
xchg
stos
lods
loop
mov
lods
dec
xor
xor
aaa
leave
fbstp
lea
adc
jecxz
imul
jl
pop
imul
int
iret
adc
xchg
jne
imul
xchg
ja
xchg
in
ja
rcrl
gs
repz
jmp
negl
jae
inc
repz
pop
sahf
scas
testl
ljmp
mov
or
incb
jb,pn
pop
loopne
outsb
add
lods
sbb
cs
sub
push
mov
push
aad
mov
cs
out
push
xchg
aas
int
pop
lods
inc
inc
imul
xchg
lcall
mov
out
aas
mov
mov
or
mov
jl
rorb
push
adc
mov
cmpsl
and
lret
mov
jecxz
or
push
pop
push
mov
jle
xor
fld
sub
test
pop
inc
pop
lock
or
sbb
daa
jge
push
pop
push
xchg
repz
sbb
es
lds
or
cmpsb
fdivr
je
cmp
or
jl
add
gs
fs
or
fdivrs
jne
subb
push
jns
call
aas
sbb
xor
xor
insl
scas
dec
aad
andl
popf
sub
push
sub
xor
cmpsb
push
out
xor
mov
xchg
scas
push
or
das
adc
data16
aaa
cmp
xchg
adc
push
mov
jne
mov
test
xchg
mov
imul
ss
pop
jl
sub
xchg
ljmp
call
es
xor
inc
pop
out
inc
std
shrl
push
cmp
filds
orb
xchg
pop
sub
lcall
mov
ret
sub
mov
dec
push
xor
subl
mov
and
subl
mov
adc
adc
mov
in
mull
add
stc
pop
and
xchg
aad
mov
mov
lods
or
jecxz
out
fcomps
mov
inc
insl
in
test
je
inc
pop
jmp
aad
xorl
fisubs
push
test
dec
sbb
lcall
lret
jbe
jp
in
adc
push
jl
sbb
jbe
shrl
jns
mov
add
mov
add
push
testb
incb
jbe
mov
decb
cmpb
cmpsl
ja
in
dec
mov
adc
jg
in
cmpsl
jnp,pn
cmp
xor
adc
cmp
dec
mov
jnp
mov
nop
jnp
mov
mov
test
pop
mov
adc
test
out
jb
sar
xchg
jp
stos
iret
les
test
dec
loopne
pop
mov
fiaddl
data16
pop
out
in
cwtl
jno
pop
cmp
lret
lds
mov
xor
int
gs
idivl
mov
jg
lds
test
push
pop
xchg
fucomp
dec
inc
xchg
mov
insl
icebp
outsb
daa
jne
push
inc
scas
adc
adc
movsl
repz
nop
push
testb
mov
mov
push
inc
fcomip
mov
ljmp
imul
jb
jmp
lcall
je
push
push
repz
pop
repz
and
pushf
lret
lock
sbb
push
sub
loopne
into
ljmp
or
cmc
add
roll
and
jo
rclb
xchg
pop
cwtl
cwtl
sbb
inc
adc
mov
mov
lds
dec
cltd
and
push
cltd
insl
mov
and
jne
repz
xorb
jns
pop
push
daa
imul
sbb
frstor
pop
lret
push
or
out
mov
inc
inc
mov
xchg
sahf
test
cld
add
outsl
data16
mov
testb
insb
adc
jecxz
mov
nop
out
dec
xchg
scas
sbbl
filds
fists
fwait
jg
cmp
cwtl
je
cmp
dec
test
mov
xchg
pop
mov
mov
add
pusha
movsl
and
and
sub
mov
sub
fs
outsb
ret
enter
iret
inc
cmp
sub
mov
add
xchg
xchg
sub
jb
mov
xchg
mov
ret
cmpb
push
lahf
jp
popf
out
mov
dec
cmp
inc
cltd
fstps
add
mov
out
sub
and
sbb
int3
enter
push
mov
mov
add
jle
incb
fldenv
adc
mov
ss
inc
gs
fisubl
notl
adc
mov
ss
mov
dec
aam
pop
and
push
add
push
adc
dec
jecxz
lea
loope
bound
jmp
or
lret
rcl
ret
jl
or
pop
jns
popf
pop
mov
cmpsb
push
sub
loop
popa
imul
out
cmp
xor
mov
loope
add
mov
jmp
xor
movsl
imul
fisubs
dec
stc
lcall
mov
nop
mov
fmul
mov
mov
js
enter
pop
addb
sbb
je
add
ficoms
and
aas
insb
inc
mov
pop
pop
jge
dec
mov
dec
mov
mov
jbe
pushf
sub
and
out
sti
movsl
out
jp
ss
cmp
mov
out
insb
xchg
mov
daa
xor
cmp
mov
xchg
arpl
adc
and
and
in
cs
add
push
je
pop
dec
inc
hlt
push
push
xor
out
sub
repnz
sub
imul
sub
add
add
inc
dec
mov
mov
stos
cmp
dec
test
insb
mov
sahf
insl
in
and
int
push
ljmp
repnz
push
inc
sub
pusha
rclb
or
or
cmp
mov
lods
mov
pop
ljmp
xor
pusha
or
ss
ror
lret
dec
push
bound
andl
sub
jp
stos
lea
xchg
das
cmpsl
xor
out
push
inc
idiv
mov
mov
popa
lds
lcall
ja
dec
std
and
jne
inc
shl
jp
sbb
in
jo
cmp
or
clc
imul
add
xor
aaa
sub
jp
std
inc
sahf
leave
sub
mov
addr16
xchg
mov
gs
sbb
fnstsw
es
les
sbb
pop
xlat
jns
addr16
and
popl
xor
mull
inc
add
add
adc
jns
pop
movsb
cltd
cmp
pop
daa
xchg
mov
pop
pop
pop
jne
push
sti
xor
or
cmp
inc
and
and
stc
ret
cmp
adc
in
sub
mov
push
aam
cmp
lock
jbe
dec
pop
jge
out
pusha
xchg
adc
pop
mov
push
xor
movsb
pop
daa
sbb
dec
mov
shrl
xlat
ret
mov
jns
fisttpll
adc
mov
xchg
int3
adc
cld
mov
fidivrl
iret
das
movl
inc
fwait
mov
int3
xor
movsb
jmp
repnz
add
jb
cmp
or
add
into
jno
cli
inc
xchg
notb
imul
jl
add
ror
cmp
sti
hlt
dec
jns
mov
sub
mov
mov
in
shrb
imul
in
xor
pop
push
inc
insb
nop
test
sub
adc
cli
cltd
mov
lds
push
pop
xchg
loopne
popw
test
fmull
mov
out
loopne
scas
mov
les
adc
ja
mov
push
fnsave
shlb
rcr
leave
add
cmp
add
int3
and
aam
mov
or
insl
std
pop
lods
dec
jle
inc
leave
mov
jnp
stos
cmp
sbb
lcall
test
xor
loopne
fisubrs
fwait
xor
insb
push
jmp
sbb
pop
std
test
lret
ss
add
inc
add
stc
and
inc
push
cmp
and
fidivrl
cmp
out
cmpsb
push
mov
inc
sbb
xor
push
addl
push
pushf
loop
lret
add
out
das
icebp
sahf
cmp
shll
pop
enter
mov
pop
nop
and
xchg
outsb
pop
js
inc
mov
aas
hlt
popf
sub
pop
ror
fdivs
cltd
mov
xchg
addb
iret
cs
push
mov
aaa
aaa
enter
adc
xchg
push
and
pop
and
mov
mov
fimuls
mov
cli
cmp
and
jns
adc
fstps
dec
lahf
pop
pop
push
addr16
jecxz
cli
sahf
loop
cmpsl
cmp
cmp
sahf
lcall
adc
xchg
out
daa
or
inc
xor
jecxz
jbe
jne
and
cmp
inc
and
filds
iret
fs
cmpsb
loop
push
test
jl
mov
mov
bt
adc
add
push
adc
adc
xchg
shlb
mov
or
mov
mov
inc
jle
xor
mov
and
mov
shlb
addl
dec
into
cmp
popf
aad
sub
sub
push
xor
and
test
mov
aaa
xchg
or
adc
and
xor
fdivrl
in
std
adc
push
mov
insl
aam
fidivs
cmp
fisttpl
push
adc
movsl
add
pusha
push
mov
sahf
fdivrl
xor
es
inc
lret
mov
push
inc
xor
mov
nop
add
shll
lds
lret
inc
pushf
pop
xchg
das
push
dec
out
and
or
iret
enter
xor
mov
mov
push
into
and
adc
and
aad
push
sahf
mov
ret
push
adc
das
xchg
mov
push
and
ss
jb
add
add
mov
dec
movsl
jne
push
cmp
movsb
lret
mov
jg
repz
cmpb
scas
mov
pop
loopne
xchg
stos
jb
repnz
and
les
stos
jae
mov
sbb
adc
out
xchg
jns
jecxz,pt
mov
dec
adc
mov
shl
out
into
inc
mov
cmpsb
push
ds
cmp
lods
rorb
rcl
repnz
mov
icebp
adc
lret
push
pushf
pop
shr
jl
mov
aam
mov
add
enter
pop
inc
nop
insl
jnp
lret
mov
xor
repz
cmpsb
jb
popf
push
loopne
mov
imul
addr16
xor
mov
push
jae
and
inc
out
mov
outsb
cmpsl
sahf
xchg
mov
push
int3
xor
dec
out
xor
push
mov
sbb
push
jo
adc
into
test
iret
shrb
cmp
adc
fsubrs
ret
movsb
repnz
jmp
push
insb
imulb
jle
repnz
pop
inc
je
loop
das
inc
inc
mov
jge
jb
imulb
push
addl
pop
mov
push
out
add
insb
lods
mov
dec
popf
or
xor
or
mov
test
jno
mov
sahf
dec
sub
dec
outsb
lret
movsl
dec
sbb
inc
ret
xchg
pop
dec
mov
repz
add
mov
lds
pusha
daa
cmp
lods
mov
repz
shl
adc
leave
in
dec
jge
jns
lock
dec
test
cmpsl
xchg
jmp
out
dec
and
push
repz
lock
lock
ja
push
repz
insl
scas
jg
pop
rorl
shrl
pop
popa
insl
pop
jbe
fdiv
in
xlat
push
jp
inc
cs
adc
shlb
sbb
or
cwtl
rcr
mov
fisubrs
jle
cmp
inc
out
push
adc
adc
jge
pop
icebp
sbb
and
jbe
xchg
ffree
jle
xor
sbb
inc
lea
add
sub
and
xchg
loope
popa
aad
adc
outsl
aas
and
outsb
sub
jecxz
inc
mov
stos
icebp
aam
popf
shlb
int3
and
adc
imul
test
fbld
cmp
outsb
out
add
loopne
int3
xchg
jo
dec
daa
xor
inc
inc
sti
mov
ja
jo
cs
mov
add
test
faddl
push
loop
mov
ja
add
push
enter
dec
dec
movlps
pop
shrl
movsl
mov
in
mov
int3
dec
or
out
jg
sbb
imul
hlt
mov
adc
pop
adc
psllq
faddl
xchg
stos
inc
cltd
sbb
mov
pusha
cwtl
adcb
jmp
in
js,pt
cld
lds
movsl
push
cmpb
add
lahf
adc
cmpsb
bound
sub
mov
lcall
ja
xchg
jp
sub
fwait
pop
lods
xchg
rolb
jp
stc
xor
vdivsd
leave
mov
or
or
movb
out
sub
out
push
ret
sbb
jmp
aas
jo
push
jge
sub
cmc
ss
lea
push
rcll
in
lods
mov
xor
aam
lret
mov
sub
push
xchg
xchg
and
lahf
inc
cs
lods
mov
insl
out
dec
xchg
and
add
cmpsb
xchg
movsl
mov
jl
movsb
add
repnz
sub
jnp
sbb
sbb
test
sbb
pop
xorb
xlat
jne
inc
nop
andl
sub
mov
dec
addr16
jns
lea
xor
scas
daa
setnp
xor
clc
dec
mov
push
flds
jp
lods
lcall
pop
imul
adc
aad
add
or
aaa
mov
lock
sub
xchg
lock
add
test
mov
xchg
insb
sub
inc
adc
adc
mov
and
ss
mov
mov
jmp
hlt
mov
out
fwait
test
mov
or
scas
out
fdivs
or
add
mov
sbb
inc
inc
and
push
xlat
mov
in
sub
sahf
mov
je
mov
cmp
in
scas
jno
xchg
and
jns
pop
inc
in
popf
gs
or
rclb
pop
insl
in
sbb
and
push
sbb
insb
imul
inc
arpl
fmull
jno
inc
push
xor
repz
xchg
sub
cmp
mov
fsubrs
adc
out
pop
xchg
aaa
push
jb
jb
cld
sub
hlt
lea
popf
icebp
inc
in
xchg
data16
iret
nop
js
test
mov
sbb
cli
pop
xchg
lcall
mov
out
out
adc
cmp
test
jp
or
repz
and
mov
xor
leave
or
cwtl
xchg
lock
test
not
push
lods
jl
cmp
mov
push
or
and
movl
out
lods
pop
test
cmp
ljmp
dec
jns
xchg
jp
mull
mov
lock
adc
out
dec
mov
push
cmp
add
out
mov
cli
xchg
or
cltd
mov
jl
dec
jbe
push
or
cmp
jne
mov
cwtl
aam
sbb
lds
movsl
pop
clc
or
sti
pushf
dec
loop
cli
pop
inc
push
jae
push
jno
push
sub
cli
or
fcompl
xchg
cmpsl
into
pop
imul
bnd
ficompl
inc
in
push
sub
mov
push
or
lds
mov
fcmovne
movsl
xor
xor
test
cmp
mov
aaa
mov
mov
mov
hlt
out
hlt
jge
aam
enter
mov
jno
mov
in
xor
xchg
aad
or
std
aas
xchg
ret
push
mov
jns
push
add
in
shll
pusha
and
xorb
mov
mov
inc
push
out
insb
mov
dec
dec
icebp
pusha
push
xchg
mov
cmp
enter
cmp
push
xorb
jnp
jb
mov
std
je
mov
mov
lods
mov
mov
push
in
mov
xlat
lcall
in
std
pop
xchg
int3
mov
repnz
dec
mov
imul
cmp
jne
lcall
xor
punpcklwd
lods
mov
neg
enter
xchg
out
hlt
mov
or
idivl
ret
cmp
push
jne
sub
mov
pushf
jb
adc
xor
ss
adc
mov
fs
sbb
and
mov
aad
in
mov
add
dec
push
or
jne
ljmp
xor
cmc
pop
lahf
jns
jae
repnz
ja
sti
aas
addr16
int3
mov
scas
insl
lcall
push
test
mov
pop
aas
jo
mov
into
inc
jbe
sub
loope
pop
ja
inc
or
cmpsl
and
test
fxch
jbe
sub
mov
inc
cmp
xchg
aam
shrb
andb
lea
repnz
push
jo
xchg
push
mov
mov
nop
or
and
mov
test
cmpsl
mov
jae
and
enter
movsl
pop
in
fwait
inc
dec
add
fwait
ror
lret
inc
std
xlat
into
test
and
icebp
mov
neg
inc
pop
jmp
dec
test
push
ljmp
sbb
out
cltd
mov
fmulp
push
fsubrs
pop
push
in
adc
sarb
push
sahf
les
inc
adc
xorb
gs
sbb
movnti
stc
inc
mov
cltd
adc
in
inc
setae
jmp
mov
lret
das
lock
sbb
jp
sub
rcl
rorb
shr
shl
test
mov
aad
mov
fstl
mov
dec
imul
aas
cmpsb
les
cmp
add
xchg
push
repnz
incb
gs
mov
push
sub
sarb
subl
rorb
mov
test
lcall
adcb
hlt
in
mov
call
pop
ss
fcoms
lods
or
xor
jmp
and
jg
pop
out
daa
pop
push
mov
sbb
cmpsl
movsb
pop
mov
inc
inc
scas
jp
jns
dec
jno
jae
je
movsl
pop
lahf
outsl
inc
lret
or
repnz
cmc
cmp
ret
fmuls
andl
stos
ljmp
pop
out
pusha
fists
lcall
js
cmp
and
test
sbb
pop
jl
lds
inc
out
mov
ljmp
sub
jae
cmpsb
adc
push
pop
adcb
imul
outsl
push
in
sbb
dec
int3
push
pop
or
or
mov
push
bound
add
jb
add
into
push
adc
loope
xor
cmp
jp
xchg
xor
push
mov
inc
fcomps
sub
mov
pop
negb
out
ja
addl
rcrb
lods
call
xchg
cli
dec
outsl
xor
loope
push
jle
pop
push
lret
adc
xor
add
nop
loopne
mov
push
movsl
out
es
xor
mov
pop
push
xchg
pop
icebp
jecxz
jge
outsb
leave
fld
sub
xchg
clc
jmp
aaa
jp
movsb
push
push
outsl
sti
mov
dec
add
push
push
in
or
cli
cltd
push
xchg
cwtl
int
mov
pop
in
cwtl
jge
pop
aaa
in
hlt
leave
sbbb
decb
push
and
jecxz
mov
popf
mov
xor
out
fimuls
mov
dec
mov
out
das
sub
push
inc
sbb
lret
or
pop
iret
adcl
and
out
add
fidivl
or
mov
lods
sub
adc
jmp
lea
dec
inc
cmp
pop
adc
jae
push
add
and
nop
mov
mov
jbe
outsl
fisubl
inc
inc
mov
sbb
add
gs
jne
sbb
dec
cmp
cmp
lods
popf
fstps
std
inc
xchg
adcb
xchg
and
popa
cmp
aaa
insl
mov
in
stc
lret
fldcw
mov
xor
mov
cmp
das
mov
repnz
pop
cmp
jl
xchg
scas
lcall
int
cltd
sbb
mov
test
mov
adcl
xchg
cli
jmp
in
xor
stc
push
inc
mov
notl
in
call
aam
cmpsb
ret
test
or
fucomp
outsb
mov
jns
dec
add
iret
mov
test
adc
into
adc
fldcw
push
icebp
pop
add
push
xchg
int
out
sbb
cmp
jp
mov
call
inc
pop
mov
mov
cmpsb
xchg
ret
loopne
scas
lods
popa
dec
mov
testl
pop
sub
or
adc
xlat
mov
xor
sub
aaa
inc
add
js
adc
incl
stos
fmuls
fcomps
sub
mov
cld
mov
icebp
out
in
aaa
mov
fcoms
mov
mov
mov
sub
dec
jmp
pop
ret
jg
inc
sar
scas
pop
js
xchg
mov
arpl
dec
enter
ja
adc
shlb
sbb
sbb
outsl
and
repnz
orl
pop
xchg
js
lcall
push
cmp
clc
xlat
mov
lods
inc
test
sarl
jp
add
mov
jo
push
and
pop
jnp
popf
sarl
dec
aas
fnstcw
repz
or
cwtl
mov
add
shrl
push
call
jb
cmp
sub
fmul
mov
inc
sub
mov
pcmpeqb
push
pop
mov
pop
stos
cli
add
sbb
mov
adc
sub
popf
shlb
cwtl
push
fisttpl
xchg
cmp
inc
fdivp
push
lret
jmp
mov
repnz
and
xor
dec
jge
sahf
data16
mov
adc
cmpsb
xor
std
test
mov
jne
adc
push
mov
pusha
mov
cmp
pop
jmp
xor
adc
nop
gs
add
lcall
repz
add
pusha
gs
ss
dec
inc
xor
mov
ljmp
jns
out
xchg
es
jo
dec
inc
adcb
bound
push
push
int
imul
adc
inc
icebp
pushl
mov
add
rcrb
test
xor
loope
fcmove
jnp
push
das
push
mov
mov
jbe
scas
popa
hlt
testl
arpl
push
pop
mov
mov
push
insl
mov
and
sbb
adc
dec
jmp
mov
cmp
mov
push
sbbb
cmpsl
pop
stc
xchg
add
jbe
aas
int3
xor
mov
mov
cmc
push
pop
inc
fildll
pop
pop
ret
icebp
sahf
cltd
inc
lahf
cld
push
push
mov
shl
sub
pop
popf
jp
mov
stc
xchg
int3
push
jle
shll
je
add
add
stos
cmp
shll
mov
in
testb
daa
mov
pop
push
sub
movsb
pop
cltd
cld
push
dec
push
data16
jae
lret
js
insb
js
push
cmp
xor
inc
mov
ret
xchg
and
cmc
mov
mov
movsl
jbe
out
mov
ds
mov
pop
push
and
mov
rcr
aad
adc
add
in
push
out
cmpsl
inc
test
repnz
inc
push
js
test
imul
xchg
clc
fcom
or
out
dec
mov
jp
push
int3
pop
xor
and
mov
jno
pop
jae
in
xor
add
or
xor
jle
sub
sbb
iret
inc
mov
popa
sti
or
test
sahf
xor
mov
mov
pop
push
and
sbb
cs
sbb
mov
cltd
shlb
je
daa
push
pop
sub
push
cmpsb
and
repz
xor
cmp
jae
inc
jnp
pop
rclb
sar
hlt
rclb
into
clc
mov
add
xor
mov
shrb
xchg
xchg
lds
sub
imul
js
push
or
popl
mov
mov
sbb
popf
xchg
push
cld
adc
mov
or
xchg
test
and
push
and
pop
arpl
xchg
jbe
ds
pop
ret
mov
add
mov
mov
sub
pop
out
testl
jl
sti
or
push
leave
es
xor
mov
fidivs
sbb
sti
loopne
aad
jg
push
fiaddl
rcrl
inc
cmp
dec
int
inc
outsl
insb
mov
bound
int
push
pop
pop
btsl
lret
sbb
out
sbb
js
rcrl
mov
xchg
mulb
rclb
aad
sbb
sahf
add
push
jp
call
orb
mov
inc
xchg
insb
dec
and
je
jbe
and
sbbl
add
imul
cmpb
inc
inc
adc
insl
mov
daa
pusha
repnz
xor
outsl
mov
xchg
dec
inc
jno
push
xor
lods
roll
push
xor
add
inc
xchg
out
cmc
ret
mov
sbb
cmp
mov
dec
xor
xorl
mov
clc
and
int3
push
or
lds
dec
cmp
sbb
rclb
test
mov
data16
ja
and
xchg
bound
lock
ret
xor
jbe
xchg
repnz
movl
out
cmpsl
cmp
push
sbb
cmp
loopne
mov
aam
aaa
decb
sbb
fsubl
jb
aad
fcomip
sub
pop
repnz
mov
inc
cli
lret
loop
mov
aam
cmpsb
push
xchg
sbb
cld
call
popf
dec
std
out
xchg
mov
push
pusha
xor
repz
and
push
hlt
mov
sbb
dec
les
mov
fcomi
or
mov
pop
cli
out
sbb
pop
movsb
dec
jg
cmp
fadds
aaa
out
andl
gs
subb
xor
lock
movsl
sarl
push
ret
adc
mov
repz
idiv
mov
mov
shrb
cmp
iret
cld
in
lret
sub
jg
push
push
mov
xor
enter
les
call
add
adc
cmp
dec
mov
or
push
mov
and
mov
jo
and
or
loope
shrl
inc
sub
or
xlat
push
adc
xlat
push
shl
arpl
rorl
mov
into
push
js
pop
inc
dec
int
push
pop
dec
popf
repnz
or
cmp
dec
int
sti
lea
xor
xor
imul
ja
into
subb
hlt
mov
fidivrs
idivl
push
inc
clc
outsl
shlb
test
stos
and
cs
jo
add
push
push
addb
imul
sti
insl
not
addr16
shr
imul
push
mov
pop
pop
pop
adc
or
insl
seta
fsub
adc
ret
mov
ss
mull
and
mov
push
and
dec
jp
subb
xchg
xlat
sub
rclb
call
ret
xlat
xchg
pop
pusha
stos
jg
mov
into
and
dec
sub
adc
icebp
cli
pop
or
rcrl
rolb
add
enter
subb
push
das
mov
out
pcmpeqw
pop
cmp
nop
xlat
clc
mov
divl
loop
lods
or
imul
push
test
mov
lods
out
fcompl
pop
dec
jg
sbb
inc
repnz
push
mov
in
push
sbb
xchg
ljmp
dec
jno
adc
shr
mov
pop
out
out
cmp
sbb
mov
cmp
adc
cli
cmc
adc
lea
popf
clc
dec
mov
mov
xor
xor
cwtl
mov
sahf
pop
pop
scas
imul
jnp
out
out
das
outsb
stc
or
push
jmp
enter
pop
pop
xchg
or
sub
fs
dec
xor
pop
stos
push
add
out
arpl
pop
loope
div
rcl
lret
xchg
sarb
mov
jo
xchg
mov
stc
repnz
lock
mov
inc
out
lret
sbb
aas
orb
in
jle
adc
xchg
addr16
pop
push
sub
pop
sub
jle
pop
aaa
xchg
cs
pop
or
inc
repnz
sub
xor
and
iret
push
movsb
jae
push
test
daa
inc
jne
fiadds
sbb
in
pop
mov
stos
cmp
out
jmp
push
cmc
mov
or
rorl
stc
cmpsl
jb
dec
add
xor
imul
out
add
mov
cmp
cmp
sbb
mov
or
push
std
rorb
test
mov
stc
dec
dec
push
xchg
jnp
mov
jno
subb
sub
lret
mov
mov
jmp
jbe
in
xor
popf
push
into
nop
mov
in
mov
mov
push
sbb
or
popf
inc
mov
xor
aad
mov
or
leave
sub
jmp
mov
jae
stos
mov
and
cmp
test
test
mov
jg
mov
into
and
cmp
sub
push
iret
jno
mov
or
add
sbb
and
fsub
pop
dec
clc
into
pop
inc
ds
stc
mov
popf
ja
fstl
loop
jp
aaa
int
mov
std
scas
stc
aam
ds
jnp
add
push
cli
add
popf
inc
or
out
jnp
test
rclb
push
lods
adcl
jg
or
std
cmpsl
mov
or
xor
loop
cmp
cmpsl
xor
iret
rcrl
fldt
leave
imul
dec
mov
pop
dec
iret
sbb
cmp
ja
inc
daa
sub
cmpsl
test
sar
loope
sub
mov
pop
dec
xor
jge
sbb
jmp
mov
cld
lods
push
xor
adc
inc
sbb
xchg
faddl
int3
insl
mov
insl
pop
fdiv
push
lock
sbb
cmp
int
sbb
mov
jl
push
xchg
cwtl
adc
imulb
or
xor
jno
aaa
add
push
in
push
ljmp
and
pop
xor
push
jle
dec
inc
jo
or
fs
mov
test
inc
fld
stos
adc
outsb
test
xor
leave
movsl
inc
jl
jmp
xor
sub
push
sub
imul
sbb
mov
adc
xor
mov
sbbl
popa
adc
inc
sahf
loope
mov
clc
push
and
xchg
daa
imul
lea
iret
cmpsl
dec
xor
xorl
test
mov
adc
cmc
xor
xchg
imul
mov
in
mov
adc
int3
pop
out
cmpl
mov
addl
inc
xchg
sahf
add
loopne
cwtl
mov
daa
shrb
aaa
aad
repnz
loope
lret
ljmp
ret
push
push
xchg
xchg
dec
xchg
mov
repz
iret
xchg
call
shrl
xor
in
xchg
dec
lcall
mov
adc
call
addr16
cmpsb
pop
popf
shrb
shrl
test
jno
out
fisubl
pop
add
daa
mov
push
add
xchg
cmp
jnp
mov
xor
mov
jns
jae
add
jbe
sub
mov
ret
stc
rclb
and
and
inc
push
fwait
add
cmpl
pop
add
in
push
fldl
xchg
aad
scas
jmp
fstps
out
cmp
xor
nop
and
pop
psrlq
cmp
std
aam
xor
sbb
daa
sub
hlt
pop
push
mov
lods
movsb
cld
cmpsb
inc
ret
push
xlat
adc
sahf
or
int
hlt
stos
hlt
fisubl
fisubs
les
or
and
stos
in
sahf
pop
imul
mov
loop
push
cmp
imul
xlat
pop
add
and
jg
fdivrp
pusha
addr16
ficompl
and
xor
addr16
jno
es
cld
roll
xacquire
mov
jb
inc
sub
pop
xor
jg
dec
scas
sbb
pop
dec
outsl
cmp
idivl
cmp
fmul
inc
repz
mov
adc
inc
jp
jl
or
pop
mov
pop
int3
lods
sarl
adc
cmp
push
adc
ds
dec
and
and
cld
mov
jmp
mov
xchg
pop
or
pop
shlb
xor
lock
dec
mov
stos
jbe
dec
xchg
lret
out
push
imul
out
lock
mov
adc
xchg
cli
push
dec
push
cmp
inc
movsb
mov
negb
outsl
push
leave
scas
lret
arpl
mov
mov
adc
mov
adc
movsl
pop
inc
xlat
xchg
jle
mov
add
dec
cmp
ljmp
test
jbe
cmc
lds
test
repnz
hlt
push
mov
idivb
cmpsl
and
gs
pop
hlt
movsl
sub
mov
pop
dec
push
scas
push
les
fst
jl
das
gs
ret
inc
subb
sub
cmpsl
xor
test
aaa
mov
nop
jecxz
out
fstpt
mov
push
fmull
inc
arpl
jmp
dec
jo
loopne
sub
shr
dec
inc
fsts
mov
popa
es
pop
and
outsb
in
stc
mov
push
int
sub
push
mov
enter
hlt
sahf
add
cs
fildl
clc
loopne
push
decl
jecxz
fidivs
test
pushf
fsubs
hlt
test
mov
or
inc
stc
dec
lods
jae
sahf
adc
pusha
push
int
or
inc
rol
mov
sarb
dec
inc
inc
inc
mov
dec
jbe
out
xorb
cmc
push
jle
lds
int
ja
outsl
xchg
mov
rcll
jl
push
scas
mov
xchg
and
dec
or
mov
mov
sbb
ds
mov
repnz
adc
and
sbb
dec
adc
pop
fdecstp
push
fcoml
inc
mov
jecxz
test
mov
lock
cmpsb
xor
stos
mov
sub
pop
xorb
cmp
or
andl
cmpsb
adc
push
cmc
mov
mov
dec
inc
xchg
lds
or
pop
lret
xchg
js
aam
pop
pushf
ficomps
cmp
pop
out
lds
and
out
dec
es
or
pusha
inc
gs
insb
pop
xchg
fwait
syscall
push
jo
cmp
aam
dec
mov
mov
mov
adc
xor
push
jg
xor
jae
cwtl
addr16
in
dec
rol
cli
or
rclb
inc
sbbl
or
push
add
pop
mov
sbb
aas
cmp
in
test
sbb
mov
xchg
xor
iret
pusha
addb
mov
out
xchg
cmp
mov
inc
test
jl
pushf
clc
mov
mov
das
ss
xorl
les
mov
xchg
and
adc
sbb
jecxz
lret
xlat
fsub
sub
popa
push
mov
and
xor
jns
cwtl
hlt
xchg
fbstp
daa
aad
sbb
dec
insl
fnstenv
push
cli
sbb
int
push
fisttps
jle
mov
movsl
xlat
fldpi
insl
dec
dec
test
idivb
mov
ljmp
out
push
popf
add
cltd
adc
jno
iret
pushf
cmp
mov
mov
icebp
cmp
mov
sub
pop
test
popf
andb
repz
inc
sti
insb
jl
and
cli
mov
push
inc
dec
roll
xor
and
sub
gs
and
mov
or
adc
push
jmp
lock
dec
cmpsb
mov
das
sbb
and
cmpsl
repz
sahf
movsb
mov
dec
subb
push
jo
push
dec
jo
data16
push
mov
cld
pop
pop
imul
je
mov
mov
lds
inc
lret
shrb
or
inc
add
and
adc
inc
scas
push
in
ret
clc
mov
loope
sub
loope
push
xor
jg
push
jp
sub
ljmp
xchg
lea
leave
sub
mov
xchg
repnz
les
jnp
mov
xchg
cmp
cli
outsb
push
aad
dec
cltd
adc
test
fwait
iret
ljmp
leave
inc
into
icebp
xchg
dec
adc
pinsrw
jge
adc
xchg
mov
xor
loopne
mov
and
call
enter
out
or
xor
mov
shr
mov
in
mov
lret
jp
sbb
sbb
add
cmp
rcr
pop
jle
xor
cld
push
hlt
ret
cmp
adc
scas
push
pusha
adc
loop
add
push
inc
aad
ret
or
and
add
mov
or
dec
sbb
rclb
outsl
push
setle
sub
and
fstpl
pop
or
jne
jnp
push
cmp
sub
xchg
push
push
mov
xor
bnd
fcoms
and
adcb
pop
repnz
or
xchg
cmp
push
sahf
mov
insb
inc
shll
push
sub
sub
jmp
lret
and
and
nop
inc
fidivrs
lea
testb
adc
outsb
pop
movsl
ss
es
aas
cmp
repnz
adc
jg
fchs
sbb
mov
popf
fdivrp
jecxz
aas
mov
jle
inc
adc
es
sbb
jmp
push
and
ljmp
mov
test
push
cmpsb
xchg
jmp
loopne
in
sub
outsb
mov
aaa
or
sbb
sbb
or
pop
mov
int3
xor
cmp
in
adc
sbb
mov
dec
xor
or
jp
xor
jae
mov
popf
subl
mov
cmp
push
push
xchg
lods
jae
sbb
addb
or
test
in
and
stc
mov
mov
lea
aaa
pop
push
pop
adc
insl
loop
inc
cli
shrl
stc
sub
sbb
mov
pop
mov
fldcw
mov
sbb
mov
mov
mov
or
xchg
or
sbb
clc
testl
sti
fstp
push
fmulp
ljmp
pop
les
jge
arpl
push
cmp
sbb
jae
add
cmp
inc
jno
cmp
adc
pop
gs
pop
push
pop
das
mov
pop
cmp
lods
addr16
fidivrl
push
pop
dec
mov
adc
jge
push
scas
jecxz
lods
popa
in
xchg
sbb
shll
dec
or
in
fcomps
push
fwait
repnz
jo
mov
xor
cmp
daa
cli
int3
and
dec
cmpl
mov
call
enter
dec
mov
lods
lret
fwait
pop
cmp
je
xchg
in
lods
das
push
das
cwtl
xor
icebp
out
popa
pop
mov
add
jae
inc
repnz
pop
jmp
mov
jp
push
mov
clc
insb
dec
jmp
sub
mov
js
test
stos
dec
out
adc
mov
mov
dec
mov
pop
jmp
movsb
addr16
adc
dec
je
inc
adcb
scas
adc
mov
loope
out
aaa
push
dec
or
mov
pop
pop
sbb
sub
jge
adc
xor
push
rol
mov
scas
cmpsb
lcall
mov
lods
clc
test
cmp
push
inc
cwtl
dec
addr16
mov
aam
mov
push
xor
inc
fwait
outsl
xchg
fstps
push
scas
mov
notl
jae
jbe
xor
leave
call
jbe
scas
cmp
jle
and
ret
xchg
cmp
push
lods
sti
xchg
test
imul
mov
test
xor
pop
cmpsb
sub
fnstsw
popa
xor
aad
xlat
inc
loop
dec
je
jecxz
xchg
lods
or
test
inc
ss
mov
test
out
fwait
xor
fists
sar
cmc
cmp
nop
jne
dec
mov
fwait
sub
mov
std
aam
lahf
push
filds
movsl
xor
mov
xorb
pop
dec
pop
cmpsb
jle
aaa
into
rcrb
jge
mov
aam
mov
arpl
mov
inc
sbb
mov
mov
xor
cmpsl
jge
movl
jmp
cmpsb
fstpt
test
test
mov
and
fs
fwait
out
outsl
mov
xlat
scas
adc
sub
stc
loopne,pt
das
lods
std
push
leave
mov
inc
add
cmpsl
push
imul
and
rcrb
adc
daa
nop
loop
scas
xchg
mov
adc
sub
fisubrl
dec
repnz
mov
sbb
movsb
and
pop
js
test
cmp
aad
inc
push
dec
inc
sub
inc
xor
fcmove
jbe
jns
lods
les
xchg
mov
adc
scas
dec
int3
cld
sbb
xchg
mov
jge
inc
in
xchg
sti
jne
aam
cwtl
mov
jecxz
jo
jle
push
ret
sbb
outsb
mov
mov
orl
in
rcr
cmp
cs
shll
or
mov
aaa
popf
mov
push
leave
pushf
jmp
stc
xchg
pushw
sub
shr
xor
lds
sbb
fidivl
inc
jo
or
add
jp
inc
mov
inc
cmp
xchg
ret
insl
push
in
rolb
sahf
jno
xor
shrl
lock
mov
adc
cld
jle
sbb
inc
and
fimuls
testl
xchg
dec
xchg
xor
xchg
mov
enter
icebp
or
xchg
pop
push
or
xor
pop
les
rorl
jmp
popa
scas
dec
or
divb
jae
je
or
jno
adc
mov
cmc
addb
ss
insl
sbb
imul
stos
rorl
sbb
fnsave
mov
insl
rorl
xchg
cmp
out
ja
orb
jo
negl
and
ss
sahf
xchg
mov
push
inc
sbb
lods
loop
xchg
mov
bound
pop
or
inc
test
sub
cmp
mov
jp
mov
or
cwtl
add
jp
bound
and
mov
push
outsb
mov
lret
push
xchg
sbb
adc
ret
clc
push
in
lock
jns
cmp
xchg
and
xchg
bound
adc
stc
clc
sub
mov
push
push
into
jl
xor
mov
adc
leave
xchg
enter
pop
xchg
xor
or
cmovo
inc
or
inc
push
pop
cmp
pop
adc
xchg
shlb
loop
sahf
push
imul
cmp
or
outsb
sbb
out
ret
leave
add
lret
icebp
jno
inc
add
outsl
test
add
inc
add
leave
lret
fcmovnu
and
nop
or
dec
mov
mov
push
xchg
rolb
add
adc
mov
cmp
and
insb
sub
inc
add
xchg
xchg
sbbb
mov
inc
mov
adc
cltd
cmp
aas
sbb
imul
pusha
mov
repnz
out
fnstcw
ds
in
mov
adc
xchg
pop
adc
orl
test
loop
std
fiadds
mov
xchg
clc
into
sbb
push
and
repnz
sub
adc
lods
inc
je
mov
mov
fistpll
clc
sbb
hlt
and
aas
sbb
test
sarb
mov
pusha
in
mov
and
daa
rcl
jo
lcall
out
push
mov
pop
mov
lret
js
push
imul
cs
enter
push
sub
dec
ficomps
mov
xor
in
fidivrs
sub
sbb
loop
adc
push
sahf
shlb
sub
adc
jmp
ja
int
mov
fstps
data16
mull
push
sbb
rcll
out
iret
lock
xor
jg
mov
imul
dec
cmpsb
int3
xchg
aam
mov
mov
jno
lock
push
xor
inc
repnz
bound
out
jge
fcompl
outsl
push
xor
jnp
push
cli
icebp
mov
orb
into
hlt
sti
jmp
mov
sar
fwait
subb
pop
mov
and
cli
notl
les
xor
or
inc
int
les
es
jbe
pop
aaa
mov
enter
lock
cmp
pop
fwait
mov
push
jae
mov
jmp
jl
cmp
test
adc
mov
movsl
pop
adc
cli
jmp
add
xchg
add
xchg
push
mov
bound
inc
lcall
or
and
jo
cwtl
mov
cmp
dec
shrb
movsb
mov
hlt
icebp
inc
cwtl
ds
mov
pusha
adc
push
fsubl
andb
sti
sbb
pop
cmpsb
push
lret
inc
shll
pop
inc
push
jp
cmp
pushf
insb
addr16
test
sbbb
jmp
mov
aas
xchg
shr
int3
inc
jo
xchg
sbb
ds
xchg
or
imul
ja
or
lods
mov
out
fistpl
add
sub
iretw
hlt
mov
dec
ss
mov
add
out
adc
sbb
adc
test
insb
jnp
dec
jnp
sub
les
jae
sbb
loop
into
fcoms
jg
push
icebp
sub
jnp
gs
mov
inc
and
inc
orb
push
mov
lods
mov
or
movsl
stos
mov
pushf
ds
lock
pop
cmc
and
cmp
ret
negb
das
mov
ret
push
je
pop
loop
pop
or
test
pop
out
mov
jbe
aad
sbb
adc
cmp
cmp
testb
push
sbb
subb
sbb
insb
pusha
imul
xor
imul
push
std
rcll
xchg
pop
ss
push
aaa
ljmp
jmp
into
xlat
jb
add
pop
mov
fldl
ds
mov
leave
sarl
subb
push
loopne
mov
mull
imul
cmpsb
xor
in
jbe
cmp
ret
mov
or
mov
inc
cmp
push
mov
cmovb
adc
adcl
jno
lret
sar
in
pop
push
pop
jno
pop
fistpl
xchg
push
sbb
push
mov
sub
adc
xchg
adc
sub
outsl
aas
outsb
jle
xchg
xor
cli
jno
cmp
mov
lods
adc
hlt
clc
mov
inc
daa
mov
shlw
push
lcall
lret
dec
push
int3
dec
jge
lods
daa
mov
xchg
lahf
mov
inc
xchg
stos
jmp
notl
bound
ja
xor
insb
shld
popa
pop
mov
fdiv
inc
js
adc
outsl
ss
add
xor
pushf
roll
jecxz
mov
jno
jns
jo
outsb
add
cmp
mov
mov
mov
loop
hlt
sub
pop
lcall
mov
xor
mov
cmp
iret
jmp
mov
jecxz
adc
lods
mov
je
ds
cmpsl
and
push
fldl
push
inc
pop
mov
andb
sti
push
push
xlat
out
xchg
shlb
push
or
push
jg
xorb
leave
lock
adc
out
fwait
sbb
std
xorl
rorl
fsubrl
add
in
ja
lods
pop
ljmp
sti
xchg
loopne
pop
inc
jno
mov
mov
xchg
lea
inc
cmpsb
jo
mov
cmpsb
mov
pop
pop
xor
cltd
adc
aas
or
xchg
pop
add
icebp
sbb
or
dec
cmp
cs
and
sub
mov
lahf
lret
push
and
fcoml
cmp
lea
fldt
lret
cmpsl
sarb
inc
into
icebp
adc
pop
jnp
pop
or
dec
mov
imul
in
into
rol
mov
xchg
fwait
mov
push
sub
fsubrl
xor
mov
int3
inc
sahf
cmp
adc
movb
cld
shrl
and
into
aad
or
pop
and
aas
inc
imul
lods
popf
sub
mov
sbb
push
add
inc
sub
cmp
sub
and
dec
fsts
lcall
mulb
jbe
sbb
enter
sub
sbb
loopne
cs
pop
enter
sub
into
xchg
pop
mov
cmpsl
dec
push
mov
loop
cs
loope
iret
divl
jp
push
jbe
add
pop
sahf
into
jno
flds
aam
jp
cltd
call
jbe
icebp
in
out
popa
cmp
mov
or
sbb
jno
jmp
sub
fmuls
xchg
lea
pop
cmc
pop
fmull
aam
enter
fidivs
cld
mov
adc
lcall
js
lds
xor
cltd
fs
add
xchg
enter
add
test
push
mov
packuswb
aaa
mov
cld
add
mov
xlat
xor
dec
xchg
fcomps
aam
ret
mov
out
shlb
cli
call
mov
fisubrl
xchg
leave
or
ss
fiaddl
inc
dec
pop
or
repz
jns
sbb
lahf
xor
in
stc
add
pop
xchg
ja
int
mov
hlt
sbb
into
or
in
pop
pop
bound
sub
mov
fldt
xor
push
pop
mov
inc
sub
adc
xorb
in
daa
xchg
sub
mov
fwait
jb
xchg
inc
pop
push
je
imul
or
jbe
adc
sub
inc
in
mov
addr16
fwait
mov
leave
jnp
repnz
repnz
popa
xchg
inc
pusha
sbb
ss
stos
stc
fcoml
push
mov
or
xor
jne
dec
in
iret
js
stos
out
leave
fldenv
mov
jmp
pop
inc
push
cmp
das
lea
xchg
jge
and
mulb
shl
cmpsl
push
ds
popf
push
stos
js
test
testl
and
mov
xchg
mov
sbb
je
sbb
mov
jno
addr16
ja
shll
ds
sbb
clc
adc
push
test
sub
scas
xchg
mov
xor
push
lds
popa
aad
adc
dec
xchg
mov
push
lea
mov
insb
addr16
mov
pop
rcrl
jle
scas
lods
adc
gs
xchg
pop
aas
arpl
mov
insl
aam
insl
ss
cld
jo
adcl
in
and
cld
jecxz
ret
and
je
xor
xchg
into
fxch
mov
mov
pushf
pop
or
jae
mov
jnp
adc
call
daa
arpl
repnz
push
pop
sub
cwtl
fisttpl
shrb
cmp
inc
lret
cmp
lret
ljmp
aaa
ja
sahf
dec
stos
cli
pop
test
hlt
xor
mov
xchg
adc
sbb
push
icebp
xor
mov
push
sarb
fcmovnbe
mov
rolb
lea
pusha
and
test
add
repz
and
pop
mov
ljmp
out
jne
xor
mov
lock
and
inc
xchg
lret
xchg
mov
lods
dec
xchg
mov
add
and
aad
push
hlt
imul
mov
jnp
jbe
pop
push
outsb
rorb
push
xchg
ficomps
pop
sub
sbb
mov
jo
or
xchg
adc
lods
hlt
cmp
lret
push
push
lds
pop
mov
xchg
push
int
lret
imul
repnz
jno
cmp
scas
adc
clc
lahf
mov
fdivs
xchg
imul
aaa
mov
ret
lock
cwtl
daa
loope
jg
dec
push
mov
dec
xor
and
in
cld
hlt
cli
clc
push
inc
ret
nop
jmp
cmp
cmp
daa
sub
lret
cmp
mov
xchg
xchg
inc
mov
and
sarl
mov
test
cmp
mov
ja
les
jecxz
iret
arpl
jno
inc
js
mov
fcmovu
popf
mov
xchg
pop
jge
adc
xchg
push
and
scas
stos
ss
scas
das
dec
pop
pushf
lods
and
sub
sbb
pop
push
xor
push
and
push
xchg
or
push
add
popf
mov
push
stc
pop
mov
sub
je
jae
mov
lcall
jbe
in
pop
div
jg
fs
addr16
inc
mov
inc
psubd
inc
sbb
stos
nop
mov
fisubrs
adc
xor
ss
push
adc
sti
pop
icebp
mov
bound
fists
test
or
add
push
xchg
stos
sahf
loope
cmc
adcl
aad
adc
out
cld
mov
hlt
imul
stc
add
loop
add
jp
push
pop
scas
and
pop
cmpsb
sar
jbe
add
inc
push
mov
sub
jbe
adcb
inc
mov
jne
in
sbb
cmp
aas
xchg
lock
jno
push
aas
std
stos
adc
jae
sbb
andl
imul
xchg
fists
mov
pop
xchg
sub
inc
inc
mov
hlt
sarl
push
cmpsl
andl
pop
and
add
sub
orl
and
jge
jnp
js
es
add
aad
pop
pop
cmp
xor
and
scas
inc
fucomi
sarb
movsl
shll
dec
aaa
mov
pop
mov
jbe
mov
push
jle
sbb
sub
pop
or
mov
cltd
and
mov
loopne
add
psubsw
scas
mov
int
fs
xchg
loopne
pusha
test
daa
arpl
add
xor
in
cwtl
xchg
aaa
sbb
mov
or
cmp
fmulp
adc
js
adc
inc
lods
and
fdivrs
and
in
mov
add
and
push
mov
adc
dec
jnp
test
dec
rcl
push
xchg
insb
and
jb
in
push
jne
repz
mov
lods
jp
or
dec
inc
pop
imul
leave
sub
sbb
jae
xchg
mov
ds
and
incl
and
aaa
rol
pushf
jo
inc
setnp
loop
cli
pop
lods
dec
dec
push
mov
out
jo
jae
dec
in
jne
movsl
andl
pop
mov
add
fisubrl
dec
loop
lds
bound
pushf
xchg
stos
jl
push
inc
lret
mov
aad
sbb
xchg
cld
add
mov
icebp
in
push
test
std
pop
xchg
leave
xorl
xor
sub
js
cmp
xchg
push
xor
jbe
inc
int
or
pop
fisttpl
ffreep
loop
mov
sub
xor
lds
shll
push
xor
shll
pop
mov
inc
or
dec
icebp
andps
jp
mov
cld
jns
stos
inc
xlat
xlat
cltd
hlt
sbb
sub
xchg
dec
jp
rcrl
add
mov
fcomps
mov
fadds
mov
sub
mov
add
out
inc
inc
rcr
or
test
dec
pop
lds
sti
dec
cmpsl
jmp
mov
punpckldq
insl
inc
inc
mov
xchg
push
xorb
and
sub
xchg
aad
into
mov
add
cmp
mov
cmp
stc
clc
ret
je
push
jle
jmp
inc
cli
inc
sbb
lret
pushf
adc
enter
bound
imul
call
lods
fwait
insl
cwtl
and
jge
inc
xchg
xacquire
cmp
inc
leave
rclb
push
into
fldl
adc
push
cmp
shrb
adc
adc
aam
sti
js
cmc
push
xchg
mov
pop
popa
xor
jmp
and
adc
mov
cli
hlt
cwtl
ffree
adc
xchg
fs
shlb
clc
xbegin
aaa
xchg
sbb
and
or
xchg
or
mov
dec
frstor
outsb
ljmp
popl
cmp
dec
pop
jmp
push
mov
aas
mov
sub
sub
jge
stos
push
sbb
ds
loopne
or
jns
dec
lret
mov
mov
std
adc
or
daa
or
pop
stos
pop
xlat
xchg
push
lret
pop
and
push
or
xchg
loopne
adc
xchg
inc
test
out
scas
and
fmul
push
mov
rorl
ret
mov
rol
pop
out
mov
mov
xchg
ret
imulb
js
repnz
jno
loopne
pop
pop
xchg
jl
mov
xlat
add
sbb
xchg
or
add
ja
into
adc
push
test
push
adc
pop
stc
mov
add
stos
and
stos
pushf
rcrb
pushl
addr16
mov
add
ja
or
out
movsb
lods
lcall
push
fisubs
xor
mov
push
cltd
mov
lods
and
pop
enter
loopne
cmpsb
and
dec
inc
fidivrl
xor
sbb
loope
dec
inc
pop
pop
mov
mov
imul
sbb
popa
cmp
cltd
adc
sbb
xchg
and
cmp
mov
outsb
lret
inc
es
bound
daa
enter
fisubs
adc
adc
lahf
scas
fsubs
mov
add
in
mov
push
mov
jecxz
dec
cmpsb
divl
mull
in
aad
inc
and
scas
stos
dec
fdivl
call
pop
in
jb
cmp
orb
push
fcompl
xor
cmp
loop
adc
ret
shr
aad
mov
shll
fwait
repz
pop
call
lea
outsb
jo
mov
pop
adc
cmp
lahf
lahf
add
push
sbb
jg
push
mov
shrb
pop
adc
push
pop
mov
sub
push
add
je,pn
jnp
lcall
test
imul
inc
inc
repnz
lcall
mov
fcompl
mov
xchg
pop
pop
sbb
fsubr
jp
ret
and
add
test
ret
iret
and
dec
add
jae
fsubrs
cmp
pusha
mov
mov
notb
xchg
xchg
push
inc
in
mov
push
xchg
fmull
es
fs
shrb
mov
push
fistl
pusha
dec
jne
pop
leave
xchg
inc
jecxz
lcall
mov
roll
int3
dec
stc
xor
mov
cli
push
fnstsw
and
insl
ret
inc
add
jecxz
je
jecxz
shl
cltd
xchg
pop
lods
mov
fisubs
mov
cmc
pop
cmovp
sub
addr16
push
out
push
mov
sbb
out
jo
xor
rclb
fmuls
or
jp
mov
mov
call
leave
sar
jecxz
aad
test
xchg
movsl
rcrb
fisubl
pop
fnstsw
sub
xchg
xchg
mov
pop
inc
push
pop
mov
out
jbe
or
inc
pusha
shl
mov
in
movsl
lahf
dec
pop
xchg
and
clc
mov
std
xor
call
std
dec
sub
out
and
loope
lds
data16
aaa
push
iret
cmc
fdivp
mov
cmpb
pushf
fidivrs
loop
clc
xchg
dec
sbb
out
pushf
mov
cmp
clc
lock
in
sbb
inc
in
pop
cmp
loopne
leave
shrb
ja
mov
mov
popf
outsl
push
test
push
sbb
cltd
orb
mov
movsb
mov
sbb
in
xchg
and
shll
add
adc
or
jecxz
inc
inc
push
cmc
aad
pop
sbb
xor
mov
repz
mov
dec
pop
int
test
mov
loope
arpl
ss
sbb
divb
push
rorl
lret
pop
mov
pop
ljmp
cwtl
xchg
jo
mov
xchg
pop
cmpsl
inc
rcr
lea
mov
adc
enter
inc
and
cli
fadds
flds
imul
or
xorb
jbe
xor
add
fsub
hlt
dec
les
das
stos
inc
add
aaa
pop
mov
xor
cltd
shlb
inc
jp
mov
and
jmp
adc
out
sub
in
jne
add
cld
bound
or
xchg
das
and
lret
sahf
mov
jecxz
fstl
add
sbb
scas
xchg
mov
mov
fidivrs
popf
xor
sub
movsl
js
aad
stc
or
lcall
test
push
jne
enter
push
cmc
pop
sbb
cli
push
mov
push
mov
pop
mov
jne
inc
iret
cs
lods
mov
dec
lcall
push
xchg
movsb
or
xlat
sbb
loopne
add
rorb
jne
mov
bts
pop
mov
sahf
mov
inc
pop
and
cmp
dec
cltd
cli
in
push
std
cs
ss
push
cmp
jl
add
fbld
clc
sbb
push
push
ret
adc
sarl
imulb
pop
dec
xchg
sahf
inc
fstpl
std
je
lcall
xchg
cmpsl
or
ret
ret
stos
jg
pop
insl
popf
cmp
and
jecxz
cmp
jp
incb
and
scas
inc
sbb
insl
inc
es
out
fcoml
leave
and
xchg
xchg
inc
push
sbb
jns
mov
jecxz
sub
push
loope
add
sbb
inc
inc
shl
movsl
pop
rol
inc
cmp
pop
mov
addr16
and
mov
out
pop
jae
cmp
mov
cmp
inc
jecxz
sahf
adc
mov
aas
push
sub
stos
aas
jp
and
cmp
fstl
xchg
pop
sbb
in
adc
xorl
cmp
pusha
lea
pushf
add
arpl
call
out
fsubr
xchg
gs
cmp
jmp
xchg
xor
or
sbb
insl
xor
ret
shrl
inc
data16
push
jg
cmp
jns
sub
mov
jns
out
sub
outsl
mov
sbb
inc
outsl
aaa
and
jbe
test
jmp
dec
adc
mov
mov
or
iret
cwtl
out
and
push
xchg
jb
mov
push
adcb
pop
and
xlat
hlt
out
lret
adc
adc
mov
push
dec
or
das
mov
ret
mov
mov
icebp
pop
out
loopne
aas
inc
jns
outsb
dec
xchg
arpl
xchg
mov
and
push
mov
mov
dec
sti
inc
mov
ja
adc
sub
ja
xor
iret
faddl
cmpb
pop
pop
lcall
and
jnp
bnd
push
das
or
hlt
lock
lahf
push
adc
and
int
mov
mov
mov
xor
lods
push
pop
insb
sbb
mov
xchg
lcall
xor
dec
das
push
aad
daa
rorb
ret
and
ficompl
decb
and
movsb
mov
jns
or
inc
push
loop
and
test
dec
rol
shll
bound
jae
add
dec
dec
dec
mov
cmc
into
scas
je
leave
push
pop
stos
mov
jns
add
dec
in
popa
lret
and
jne
outsl
inc
pop
fwait
loopne
push
out
lcall
iret
jo
sbb
stc
frstor
in
mov
xchg
add
pop
cs
jno
adc
or
jl
pop
xlat
cmp
inc
frstor
rorl
jmp
lds
fsub
loopne
outsb
inc
xchg
ret
andnps
jns
jg
mov
inc
ret
inc
out
cmp
cmp
subl
fneni(8087
mov
inc
nop
out
mov
pop
or
aas
frstor
dec
mov
mov
scas
outsl
cs
push
jl
mov
sub
jecxz
aad
jl
and
pop
loop
lret
sbb
jb
sbb
cmp
test
pop
cltd
pop
roll
sbb
es
sti
pop
fildl
xor
xlat
loop
mov
jp
mov
call
dec
pminsw
adc
shr
ja
jnp
xor
pop
mov
mov
cmp
push
testl
push
gs
lret
insb
int
lret
push
xor
insb
jae
notb
dec
jbe
sbb
pop
insl
xchg
shl
rcr
mov
popa
mov
test
inc
sbb
and
xchg
js
pop
loopne
xor
ret
push
dec
loope
or
insl
ror
adc
pop
ret
pop
test
nop
pop
out
lret
xlat
inc
add
mov
scas
push
in
or
push
adc
cld
cmp
inc
leave
popa
std
pop
adc
in
std
ds
int
popa
lds
xor
sbb
adc
fnstenv
stos
into
and
movsl
lods
sbbl
jnp
mov
sub
or
enter
pushf
faddl
jmp
jp
arpl
push
in
stos
xlat
inc
dec
sbb
adc
loop
xor
rorl
addr16
shl
adc
sbb
jno
hlt
mov
cwtl
xchg
inc
jae
roll
lcall
adc
jle
inc
loop
add
dec
dec
xchg
pop
cmpsb
hlt
pop
outsl
mov
push
cmp
jo
addr16
bound
push
mov
xchg
cwtl
shrl
hlt
int
mov
jns
pop
sub
and
shrb
vcvttsd2si
cmpsl
insl
pop
cmp
adc
jb
jmp
add
xorb
inc
ret
fisttpll
lods
and
call
pop
imul
in
ret
mov
mov
push
fcomp
mov
les
call
scas
jmp
pop
xchg
xor
pop
xor
pop
icebp
sub
mov
out
push
push
inc
adc
decb
jae
fisubrl
fcmovbe
gs
sbb
add
sub
imul
ljmp
call
mov
dec
int3
gs
jbe
pop
sbbb
popl
add
imul
test
pushf
sbb
arpl
xchg
push
scas
mov
push
pop
add
or
aam
or
in
nop
fnstcw
divb
push
pop
lods
add
mov
inc
aaa
lret
lcall
inc
and
loope
aas
mov
daa
mov
xchg
dec
sub
mov
sarl
loope
dec
lahf
loop
add
iret
push
pop
pop
adc
aaa
and
inc
mov
outsl
das
dec
addr16
adc
and
test
lds
cmp
inc
out
adc
dec
mov
inc
push
lret
inc
lock
mov
mov
fsubl
out
ljmp
sbb
mov
push
fs
xlat
in
xor
enter
jge
xor
js
ret
or
push
in
gs
test
mov
xchg
xchg
dec
call
xlat
push
pusha
outsl
sub
xor
andl
fwait
lret
xor
inc
adcl
mov
jne
and
shll
addb
jmp
stc
xchg
cmp
rcll
jnp
cld
mov
inc
sub
mov
std
in
gs
iret
push
sub
into
pop
in
or
sahf
cmp
sub
insb
aam
imul
outsl
or
ss
push
mov
stos
xchg
cmp
divb
push
sbb
aam
push
jae
mov
imul
pop
js
test
inc
daa
sbb
repz
enter
fsubl
pop
shrl
mov
arpl
inc
into
bound
add
gs
jle
adc
jmp
fisubl
pop
pop
out
mov
cwtl
repz
repnz
sbb
loope
mulb
stc
sbb
out
roll
cmpsb
jecxz
stos
or
push
sahf
xchg
xchg
daa
push
push
pop
call
sub
xchg
iret
pop
arpl
mov
int3
lahf
dec
into
sbb
pop
mov
xlat
sub
jo
cmp
fmul
jnp
movsb
add
out
jge
clc
test
xor
loope
lahf
cmp
inc
mov
inc
addl
ds
sub
mov
lret
pop
pop
mov
xor
push
mov
les
push
push
cmp
jmp
negb
jp
in
mov
imul
and
mov
in
xor
int3
stos
decb
inc
insl
push
mov
fwait
xchg
fwait
in
repz
xor
jmp
push
inc
sbb
mov
mov
lret
sbb
insl
outsl
push
int
push
fists
ss
mov
scas
adc
cmp
lods
pop
xchg
outsl
xchg
or
xchg
cmp
ljmp
js
js
mov
inc
call
adc
decb
dec
dec
mov
and
aad
jo
aaa
test
loop
xor
aad
jae
mov
leave
testb
ret
inc
mov
sbb
adc
das
cmpl
mov
mov
adc
inc
xchg
inc
stos
pop
adc
and
shr
in
inc
das
sbb
dec
mov
push
xor
push
push
aad
lret
mov
stc
mov
and
je
push
jae
in
mov
jle
js
ja
or
mov
in
out
adc
repz
hlt
pop
lods
mov
mov
push
in
push
inc
cmpsb
cltd
inc
clc
mov
js
mov
adcl
jns
shll
jg
inc
sti
lcall
mov
cwtl
bound
xor
cmpsb
push
bnd
pop
pop
cmpsb
sbb
sub
cwtl
addr16
repz
push
cs
xchg
inc
or
jg
repz
fstpl
or
inc
jb
out
mov
repz
fiadds
in
daa
imul
and
sarb
sub
mov
test
mov
mov
xchg
add
ljmp
pop
push
mov
test
popf
std
rcrb
pop
or
mov
adc
lret
aaa
mov
scas
lahf
js
sub
jbe
lock
jns
or
mov
push
adc
add
sub
sub
xor
ret
imul
xor
dec
clc
or
mov
scas
mov
push
inc
jbe
sbb
push
cld
pop
sbb
dec
and
and
rcl
push
xchg
mov
jnp
cmp
cmp
push
ljmp
dec
and
push
aad
push
out
push
sti
push
sub
leave
add
inc
dec
add
cmc
sub
sti
jnp
sti
loopne
xchg
xor
sbb
cmp
pop
xor
bsr
data16
shl
adc
pop
repz
mov
and
fndisi(8087
addr16
sub
jbe
loop
xchg
pushf
leave
jns
daa
orb
dec
sbb
add
jo
or
sahf
mov
stos
cmp
scas
and
dec
pusha
nop
icebp
test
mov
pop
mov
sarl
icebp
mov
popa
mull
ss
lcall
pop
repnz
je
cs
xor
push
push
mov
out
pop
arpl
jl
cmp
sahf
out
mov
idivl
adc
add
pxor
dec
sub
rcll
fs
std
xchg
xchg
repz
out
inc
xor
cmp
stc
jl
jb
scas
pusha
in
int3
jecxz
dec
call
popa
in
and
inc
push
pop
mov
int3
or
mov
cltd
or
js
push
inc
pop
push
xor
dec
sahf
andb
cli
test
push
aam
dec
es
test
and
mov
sub
mov
fcoml
jmp
pop
sub
ljmp
repnz
pop
mov
outsb
mov
xlat
nop
sub
push
xor
cmp
shl
in
ror
out
leave
mov
push
cli
jecxz
sub
iret
int
jb
sbb
xchg
test
daa
sub
sub
nop
cmp
mov
jmp
aas
add
aam
sbb
fistl
add
jle
fisttpl
or
mov
inc
insb
adc
xchg
shl
gs
cmp
iret
aas
sti
push
mov
into
bound
cmp
fiaddl
in
and
sbb
dec
mov
lret
ret
push
jmp
ret
les
add
xchg
mov
adc
cmp
daa
xchg
test
adc
flds
leave
xchg
stc
ret
inc
add
daa
push
lcall
mov
cmpsl
dec
addl
mov
int
lret
push
call
inc
pop
call
xor
mov
daa
adc
sub
inc
jecxz
or
mov
stos
mov
and
jg
pop
xchg
xor
dec
ffreep
xchg
stos
insb
jmp
or
cltd
cltd
dec
push
inc
es
loope
popa
addl
test
shr
dec
test
in
daa
sub
dec
or
cli
add
xchg
call
movsl
push
and
push
test
int3
lock
push
sub
not
jbe
sbb
inc
push
jecxz
sti
subb
sub
into
and
clc
scas
enter
test
fwait
xchg
adc
shll
dec
xor
pop
xor
call
dec
les
xor
adc
jg
popl
jb
push
jmp
lea
fisubl
push
adc
sub
or
and
adc
pop
xor
fisubs
sti
ret
add
aam
outsb
dec
adc
ror
add
xor
xchg
push
pushf
sbb
jle
rcrb
lret
cmp
popa
inc
pop
cmp
or
mov
popa
data16
add
outsb
in
fldenv
es
aas
xchg
mov
sbb
lods
xchg
aas
std
pop
out
out
push
sti
add
add
pushf
out
insl
adc
mov
jp
push
cmp
mov
lret
pop
mov
jne,pn
pop
xchg
repnz
mov
inc
adc
add
insl
fldl
and
insb
and
mov
pop
jb
lcall
pop
inc
or
negl
cmp
cmp
xchg
push
mov
cltd
mov
shl
lods
jno
add
rorb
cmc
inc
ljmp
in
in
fimuls
in
xchg
loopne
add
aad
bound
push
push
call
mov
fldenv
jae
inc
stc
fildl
sarl
and
rorb
jmp
pushf
dec
aas
push
dec
int
and
clc
out
mov
jns
mov
xor
in
push
add
inc
cwtl
or
orl
mulb
mov
dec
push
in
test
orb
fwait
aad
dec
bound
bound
xor
xchg
xchg
es
fbstp
lahf
in
pop
stos
aad
inc
cmpl
imul
adc
mov
jnp
lods
push
jmp
xor
mov
mov
stos
and
cmp
xchg
rorl
xchg
mov
and
lods
xor
cwtl
mov
push
jecxz
sub
xor
idivl
out
adc
fwait
cmp
das
std
sbb
cmpsl
inc
das
xchg
sub
cld
pop
ror
pop
dec
add
dec
pop
or
jns
daa
mov
and
lahf
jge
adc
les
or
test
inc
bound
leave
push
push
push
ds
pusha
mov
adc
dec
ss
sbb
imul
pop
out
pop
clc
imul
jno
xchg
xchg
xchg
hlt
jg
add
mulb
stc
fdivrl
inc
mov
cwtl
mov
hlt
into
les
les
inc
or
mov
dec
movsl
jae
lret
test
cmpsb
jmp
adc
push
and
arpl
bound
insb
jp
cld
or
pop
mov
loope
scas
movsb
cli
repnz
lock
inc
out
aad
or
xchg
cmp
mov
or
daa
pop
mov
mov
hlt
into
sub
rclb
xchg
icebp
sub
mov
add
fbld
or
stos
jae
mov
fildll
push
mov
pusha
bound
les
outsb
es
dec
dec
cmc
pop
fs
sub
mov
mov
cmp
jo
push
mov
repnz
mul
test
fdecstp
jl
fdivrp
lahf
or
sahf
cmp
or
mov
mov
idivl
rolb
cmpsb
sbb
xchg
add
fbld
adc
xchg
xlat
bound
pop
call
inc
ss
mov
pop
push
loop
cld
es
mov
mov
fisubrl
aaa
add
sbb
out
loop
sub
inc
outsb
js
adc
mov
movsl
idivb
jmp
lods
mov
cmp
pushf
sbbb
cmovl
pusha
divb
sti
imul
shl
xchg
mov
repnz
push
and
movsb
sbb
out
xor
mov
mov
push
mov
cmp
sahf
faddp
lods
jo
data16
testb
xchg
cmp
xchg
js
pusha
fsubrl
push
in
or
mov
movsb
jno
jne
repnz
inc
jg
pop
jb
adc
bndstx
mov
jecxz
outsl
adc
push
out
mov
xchg
cmpsl
lcall
mov
inc
hlt
jmp
mov
jle
mov
or
jne
ret
out
and
pushaw
je
or
fmuls
hlt
dec
outsl
fcomp
add
loopne
mov
lcall
cmpsl
jmp
and
in
mov
sbb
repz
lds
mov
xchg
in
xchg
mov
stos
std
xor
out
rcll
movsl
or
xchg
or
in
test
out
cmpsl
jb
cmp
mov
mov
je
loope
push
icebp
sub
mov
pushf
iret
test
xorl
add
iret
xchg
pop
lods
ds
cwtl
mov
inc
push
iret
jecxz
mov
pushf
cmp
xor
subb
mov
or
ret
fld
adc
dec
std
outsl
mov
adc
test
cmp
cltd
push
and
pop
loop
negl
adc
jo
outsb
scas
or
xchg
cmp
jmp
arpl
mov
add
pop
test
cmpsl
inc
scas
or
cmp
lcall
sbb
mov
lret
shll
mov
or
cli
cmp
add
add
mov
xchg
jmp
jmp
scas
mov
gs
les
iret
pop
shr
xor
mov
dec
fs
jge
lahf
movsl
xchg
imull
jae
xor
mov
mov
and
or
or
mov
fildl
sbb
inc
push
jo
adc
adc
bound
sbb
xor
jp,pn
mov
inc
loope
testb
mov
or
iret
call
mov
jecxz
xor
subl
sti
pop
aam
mov
jne
sub
sub
pop
dec
test
fisttps
leave
into
dec
test
push
xchg
jns
pushf
test
cmp
pop
pop
iret
dec
push
and
popl
mov
test
mov
std
sbb
leave
and
dec
hlt
xor
ret
cmp
or
cmp
mov
mov
popa
stc
sub
mov
sbb
inc
sbb
shr
jecxz
mov
addr16
mov
imul
xchg
xchg
movsb
mov
mov
sbb
pushf
lcall
sbbb
std
negb
mov
jp
or
push
jl
pop
jo
dec
dec
add
fildll
jg
mov
push
fwait
xchg
xchg
insl
dec
cmp
xchg
leave
push
cmp
pop
dec
fiadds
mov
xchg
pop
repnz
popf
jmp
pop
jg
imul
ds
inc
sub
enter
sub
data16
incl
sarl
cmp
pop
jge
scas
stc
shll
add
xchg
xor
adc
and
mov
arpl
mov
lds
mov
push
push
sub
iret
ret
int3
sbb
push
pop
sub
push
jmp
enter
sahf
jb
jge
add
mov
adcl
push
sbbl
mov
jne
aaa
sub
out
sub
mov
add
push
inc
in
jmp
mov
mov
rclb
xchg
lret
and
adc
cmp
loopne
lea
push
mov
cmp
push
mov
iret
sahf
out
sarb
and
xchg
stc
pop
cmp
fwait
sti
inc
sbb
sub
jb
jne
xchg
icebp
sar
lret
add
push
push
mov
push
push
aaa
stos
cmpsw
add
inc
xchg
cwtl
test
fimull
das
test
push
mov
adc
or
in
cmp
shr
jp
nop
push
int
xlat
adc
nop
idivb
fwait
icebp
inc
add
cltd
hlt
adc
xchg
ret
sub
inc
and
testb
jbe
dec
mov
jg
mov
shl
sbb
loope
popf
scas
jno
xchg
mov
mov
dec
sti
or
stos
jnp
cmpb
loopne
adc
pushf
in
test
sbbl
dec
jp
fdivrs
sti
pusha
lods
mul
cmovo
sbb
xchg
cwtl
hlt
into
call
inc
popa
pop
notl
cmc
push
mov
mov
lock
insb
add
fadds
xchg
dec
push
sub
xchg
out
adc
sahf
inc
roll
es
cmp
sbb
into
xor
cmpsb
add
sbb
out
push
jae
test
jmp
fnstenv
loopne
jns
xchg
mov
fistpll
in
ret
adc
test
xchg
adc
cli
gs
out
test
jne
xorl
cmp
xor
loopne
mov
mov
and
xor
je
fbstp
int
mov
sub
xchg
bound
cld
pop
loope
xchg
repz
out
adc
or
mov
popf
cld
pop
sbb
pop
movsl
jbe
lods
mov
les
insl
enter
nop
mov
enter
push
and
xchg
xor
jl
fnsave
std
mov
ret
mov
pop
ficompl
dec
xchg
or
fistpll
sbb
loope
out
out
adcb
xchg
xor
mov
imul
xor
add
xor
inc
orl
cmp
cli
jnp
sub
xchg
iret
jle
xlat
push
or
jecxz
xor
test
out
jle
repz
inc
jo
lret
cmpsb
imul
outsb
lods
jl
jns
mov
fidivs
leave
rorw
inc
xor
cmp
push
add
mov
xor
sbb
pop
pop
xlat
nop
add
inc
orl
loopne
adc
inc
inc
dec
mov
fdivp
adc
push
sahf
jnp
data16
lods
push
rcll
sbb
out
int3
enter
sahf
scas
cmp
push
pop
mov
in
sbb
inc
sarl
test
sarb
mov
ja
mul
test
sbb
dec
mov
lock
test
sub
mov
cld
repz
cmp
cmp
inc
cmpsb
pop
mov
inc
decb
or
sarb
movsl
cmp
jmp
jl
shlb
pop
cmc
mov
gs
cmpsl
push
call
jg
adc
pop
aas
add
mov
and
pop
sbbl
mov
mov
xor
movsb
xchg
aas
or
cmp
pushf
adc
push
mov
out
test
mov
inc
cmp
mov
mov
mov
iret
xor
or
cmpl
dec
stc
dec
xchg
loope
popa
scas
je
test
dec
sub
pop
sbb
or
das
scas
inc
push
imul
into
movsl
and
and
lcall
fdiv
insb
adc
jmp
popa
or
rcrb
and
add
ficompl
xlat
fucomp
mov
add
cs
xlat
out
mov
stos
xor
imul
push
repz
subb
ljmp
push
movsl
jle
mov
shl
push
sbb
dec
aam
dec
sbb
in
loope
addr16
mov
notb
addr16
xchg
dec
pusha
or
push
int
sub
pop
add
pop
jecxz
jbe
mov
push
and
outsl
mov
push
xchg
xor
adc
adc
jns
mov
mov
aaa
jbe
mov
lods
inc
mov
loopne
lock
or
dec
pop
mov
aas
div
inc
ss
popf
add
cs
sub
jmp
sti
or
sub
ja
stos
test
lea
mov
xchg
push
mov
popf
lock
lret
int3
outsb
loope
jns
dec
or
pop
loopne
imul
fs
lret
push
push
out
push
fistpl
adcb
in
shrl
pop
push
ja
xchg
xchg
movsl
rol
xchg
inc
popf
jle
bound
jl
popf
cmp
mov
loopne
and
jle
daa
cli
dec
cmp
jb
incl
das
mov
loope
or
sahf
nop
adc
jbe
mov
add
cmp
sahf
cs
jae
stos
inc
ret
xchg
test
push
call
mov
push
push
clc
imul
lea
movsb
pop
int3
icebp
aas
popa
movsb
cwtl
sub
inc
xor
sbb
jg
or
fistpl
xor
sbb
jge
rcll
cmp
out
fidivl
sbb
pop
cmpsl
pop
mov
mov
push
shll
mov
cmpsb
jns
pop
dec
and
inc
cmp
test
sbb
xchg
and
rolb
jg
aad
popa
insb
aam
daa
and
cmc
pop
inc
dec
enter
mov
adc
push
jnp
aad
xor
pop
add
sti
pop
out
andb
bound
in
std
lods
mov
or
imul
add
mov
sbb
out
lret
sbb
jge
dec
nop
sti
mov
xchg
or
out
jnp
dec
insb
or
push
xor
lea
fs
pop
sub
xor
mov
sub
cmp
xchg
nop
ret
or
enter
jmp
aas
lea
jne
cltd
mov
test
sub
out
cltd
xor
adc
fwait
mov
jecxz
push
ja
addr16
inc
mov
fcomp
push
mov
jbe
outsb
sti
jge
rol
cmc
inc
aam
sbb
mov
mov
or
ret
shlb
mov
jo
fucomi
nop
and
fsubrs
sub
sarl
cmp
ficoml
add
mov
mov
cmp
dec
inc
or
mov
cmp
jge
lret
outsl
push
pushl
push
push
xchg
cmp
idivb
push
cmp
fnstcw
popa
dec
add
ljmp
fbstp
fnstsw
mov
in
int3
lods
jmp
add
adc
or
jbe
mov
mov
cmpl
mov
test
jo
daa
and
or
jb
pop
adc
ret
js
daa
je
ret
fiaddl
xchg
jecxz
loopne
push
cmpsb
dec
bnd
mov
push
mov
lret
mov
jb
pop
xor
pop
lea
rolb
leave
pop
hlt
testl
jns
ds
dec
xlat
xor
js
push
popf
mov
into
mov
int3
adc
sub
mov
rcl
iret
sub
cmp
aas
jno
fdivr
dec
ljmp
mov
outsl
imul
sbb
out
outsl
lret
sti
xor
test
mov
pop
adc
mov
sbb
aas
sbb
add
insb
je
gs
or
mov
pop
loope
jbe
fs
in
shll
insb
mov
stc
aad
loopne
or
mov
rclb
ja
mov
scas
pop
clc
push
mov
mov
sbb
addr16
addl
xor
pushf
fidivl
cwtl
mov
jae
addr16
push
or
inc
je
out
int3
jl
mov
pop
test
and
mov
cmp
or
mov
pushf
fldenv
pusha
in
js
push
pop
pop
mov
pushf
sbb
shrb
and
add
xchg
out
adc
mov
mov
je
lock
insl
sub
push
aaa
dec
push
sbb
cmc
mov
out
jns
into
out
lcall
jmp
fwait
mov
xchg
scas
cmpsb
gs
cmpsl
ljmp
cmp
xchg
adc
cmp
push
in
or
cltd
mov
and
mov
movsb
lret
nop
xchg
cmp
dec
repnz
inc
cs
jmp
dec
xor
jge
mov
fsubl
jl
lock
fbld
addr16
jno
frstor
jl
sbb
jl
xchg
mov
icebp
cmp
lcall
test
and
call
push
mov
or
sahf
dec
sub
pop
xchg
add
icebp
push
js
stc
das
out
mov
dec
jge
push
fwait
in
sub
mov
lock
orb
push
out
sbb
ret
adc
into
pop
or
adc
nop
fimull
sahf
fwait
subl
iret
sbb
add
push
fsubs
mov
ljmp
and
imul
inc
movsl
in
sbbb
js
dec
cmp
loop
dec
adc
sbb
jns
sahf
pop
xor
adc
adc
or
mov
xor
in
fisttps
adc
iret
ja
mov
mov
loop
pusha
inc
arpl
shlb
lahf
fimuls
mov
scas
sahf
cmp
push
shll
inc
xchg
aam
or
cmp
leave
push
scas
or
and
popf
or
cmp
mov
push
imul
popf
xor
loop
arpl
sub
jno
xchg
cmp
inc
scas
stos
or
xchg
xchg
push
dec
and
daa
ss
pusha
scas
aad
xchg
sti
lahf
mov
cmp
into
mov
jnp
sub
mov
adc
mov
push
stos
popf
xchg
mov
sub
push
adc
fs
mov
call
int
sub
gs
pop
and
inc
insb
inc
js
into
movsl
sub
aam
in
jp
ljmp
in
mov
in
ss
insb
sbb
addr16
pop
push
sub
push
inc
inc
cltd
out
pop
pop
ret
xchg
xchg
xor
push
mov
adc
cmp
lock
aam
mov
sub
scas
mov
pop
pusha
sti
xchg
aad
rcrb
mov
sbb
out
aam
test
pop
jae
push
cmpsl
call
shl
pop
mov
out
xor
addr16
addr16
jmp
mov
call
or
sahf
out
pop
add
pop
fnstenv
aaa
or
jp
mov
xor
pop
scas
add
push
fisttps
or
xchg
sbb
cli
dec
fsubrs
das
xchg
cld
movb
sbb
mov
dec
int
rcr
test
insl
cmpsb
sbb
inc
lods
jo
ss
add
rorb
je
in
imul
jp
ret
jns
pop
scas
cltd
test
cmp
mov
dec
xor
js
jl
cli
push
dec
popa
xchg
pop
pop
cmp
std
call
sub
nop
int3
scas
xorb
pop
insb
dec
stos
rcr
mov
xchg
fcoms
cltd
addb
push
aaa
xchg
jg
push
and
adc
xor
jge
inc
dec
out
cmp
je
jle
pop
jno
push
dec
xor
fidivl
in
scas
push
and
jmp
pop
pop
nop
adc
fnsave
inc
adcb
mov
test
mov
cmp
lret
mov
add
orl
jmp
gs
mov
xor
xchg
scas
xchg
negb
sub
into
pop
lds
stos
sub
adc
test
outsl
aaa
dec
pop
imul
cmp
movsb
push
pusha
jbe
jmp
mov
enter
jmp
pop
adc
inc
or
push
neg
sbb
es
xor
or
mov
pop
stos
pop
add
mov
push
out
and
bsf
sub
shl
pop
mov
or
xor
cmpsl
mov
sbb
test
jmp
sbb
scas
lods
icebp
dec
pop
data16
jbe
nop
sbb
or
adc
jge
xchg
in
push
and
ss
sub
adc
iret
xchg
push
pop
mov
sbb
pusha
fnstenv
pop
imul
int3
pop
inc
mov
and
cwtl
sbb
pop
jmp
jae
push
ss
mov
stos
or
adc
pop
iret
fldcw
mov
or
inc
jl
push
cmp
mov
fucom
movsb
jmp
xchg
loop
pop
iret
jo
mov
dec
adc
int
fwait
loope
js
insb
int3
je
cmp
in
ret
mov
lcall
loope
in
inc
dec
xlat
mov
cmp
call
add
pop
mov
andl
in
jnp
inc
or
sbbl
mov
dec
mov
lods
dec
movsb
or
aam
mov
jne
cltd
add
roll
movsb
pushf
call
jne
es
shlb
data16
or
jb
popf
adc
mov
std
dec
push
add
jmp
sahf
ret
jg
push
add
pop
loope
pop
jns
jno
in
jl
xchg
jb
insl
or
ror
nop
pushf
nop
add
jmp
mov
xor
pop
enter
xor
in
scas
notb
shll
mov
loopne
push
lods
roll
jnp
ret
mov
or
mov
test
fs
sbb
loopne
aad
inc
sbb
ljmp
and
gs
sub
mov
outsb
aaa
arpl
or
fdivrl
inc
mov
push
push
pop
sub
inc
test
pop
sub
mov
fwait
out
sub
pop
cli
dec
in
aad
jl
cli
sti
iret
push
jo
arpl
or
fcom
rcl
sub
lret
jae
sub
int3
mov
cmp
js
in
je
aam
inc
shrb
mov
xlat
adc
adc
inc
daa
ja
cmp
push
jne
in
mov
ljmp
mov
ficoms
xor
sbb
mov
outsl
mov
into
into
push
dec
clc
xor
jbe
hlt
jns
sub
rcll
sahf
sbb
sarb
out
xchg
or
xchg
xor
cmp
xchg
shr
scas
insb
enter
xchg
pop
es
inc
cmp
sub
in
sbb
shrb
mov
outsb
movsl
and
mov
mov
mulb
sbb
call
push
inc
out
stos
push
lds
mov
jge
ja
mov
fsubs
mov
xor
or
lods
mov
pop
cwtl
jae
psubd
outsb
xor
adc
inc
pop
fnstcw
adc
pop
xchg
cmp
adc
call
mov
out
mov
psubsb
push
andl
inc
xor
or
in
jne
out
fbld
test
inc
xchg
push
popf
sbb
icebp
ret
icebp
test
xchg
dec
std
sbb
loope
bound
cmp
cmp
mov
sbb
das
cmpsb
daa
cmpsl
aaa
aaa
add
pushf
bound
pop
fnstenv
in
adc
das
es
pop
cmpsb
cmpsl
sbb
bound
sahf
mov
inc
cmpsl
jg
in
dec
pop
xchg
or
lahf
add
mov
sbb
mov
out
add
loop
fisubl
jo
out
mov
or
clc
lock
add
mov
icebp
mov
ds
cs
push
neg
jg
fidivl
daa
insb
ficomps
mov
call
jns
call
push
pusha
sbb
ja
xor
push
cmp
fs
cmc
xor
lea
jmp
imul
dec
popa
push
push
add
out
cmc
xchg
shlb
dec
int
xor
sahf
sti
and
loop
bound
mov
scas
xchg
xlat
xchg
sbb
adc
imul
xchg
notb
sbb
adc
sub
sbb
add
sbb
dec
das
andb
insb
xchg
fstpl
pop
sub
hlt
cld
stc
js
sbb
jp
cmp
ret
inc
mov
or
adc
andb
jae
add
mov
and
fldl
mov
mov
bnd
fcom
into
mov
cmp
or
cmpsb
jno
and
jl
int
push
xor
sti
data16
mov
xchg
insb
lcall
in
dec
xlat
sub
inc
mov
push
mov
mov
or
mov
mov
mov
adc
xchg
pop
cmp
jle
pop
cld
inc
inc
mov
dec
jl
cwtl
cwtl
sub
iret
orb
xchg
pushf
sbb
pop
insl
ficompl
jp
sbb
orl
cld
cmp
push
in
mov
adc
pop
das
add
repz
sub
sbbl
ss
cld
jmp
scas
js
dec
negb
inc
inc
std
pop
pop
es
jno
ja
lea
cmpsb
pop
jmp
and
push
mov
scas
imul
aas
test
and
call
or
xor
std
pop
and
sbb
ljmp
ja
lahf
lods
repnz
scas
xor
repz
dec
out
push
or
insb
pop
jno
aad
js
or
pushf
xchg
mov
vcvttps2dq
fimuls
ljmp
or
repz
jb
xchg
xchg
mov
in
mov
fimuls
cltd
mov
inc
ds
out
sbb
mov
sub
lods
aad
outsl
mov
aad
addl
ja
pop
cmpsl
jle
fisubrs
daa
repnz
jp
imul
stos
sbb
scas
dec
scas
arpl
mov
push
rorb
scas
mov
xchg
scas
sahf
add
and
inc
lods
scas
xor
sbb
popf
loopne
jne
in
inc
scas
adc
push
jmp
xor
inc
ljmp
jns
movl
daa
dec
mov
xchg
adc
dec
ror
or
mov
push
out
test
sbb
and
pop
or
xchg
xchg
ja
xor
push
movsb
xlat
insl
sub
dec
fadds
pop
ljmp
mov
movsb
push
cs
inc
aad
mov
cli
outsb
push
scas
fs
xchg
or
out
jne
mov
scas
push
ficompl
xchg
push
or
ds
cli
xchg
xchg
dec
popa
xchg
shlb
xor
mov
sub
push
or
or
cld
cld
and
mov
cmpb
nop
shlb
popw
mov
cmpsb
lret
lods
mov
stos
ljmp
add
out
push
jge
jns
cltd
push
jae
dec
ja
adc
adc
loop
repnz
inc
cmc
lcall
fidivrs
sub
or
aad
pop
sbb
add
ljmp
jmp
mov
add
or
imul
xor
inc
inc
jo
or
cmp
mov
stc
jbe
into
or
repnz
inc
inc
out
or
jno
out
mov
hlt
es
jno
xchg
cmpsl
xor
pop
not
inc
jle
cli
sbb
fisttps
aam
ret
xor
repz
ja
je
or
pop
mov
sub
mov
fld
mov
call
lods
js
mov
sti
gs
mov
pop
add
dec
xor
imul
fadds
xor
ffreep
jg
adc
sub
dec
and
sub
stos
cmp
push
sub
int
mov
arpl
push
setno
clc
mov
int
ss
enter
loope
pop
sub
mov
repz
shr
shlb
push
mov
das
push
xchg
lret
and
mov
push
repnz
lcall
or
pop
and
imul
mov
cmp
push
cltd
cmp
jae
out
fidivrl
clc
jae
fsub
js
mov
xchg
imul
sahf
lods
in
call
adc
xchg
or
insb
das
sub
movsl
rorb
in
hlt
and
xor
into
pop
lds
imul
xchg
fcmovb
int3
pop
fnstsw
shll
rcl
jnp
jmp
cltd
outsl
idivb
jg
ljmp
pop
mov
mov
into
repnz
adc
cmpsl
lods
hlt
mov
xchg
push
sahf
fwait
je
add
icebp
stos
and
mov
and
loope
test
movb
or
pop
push
pushf
les
out
mov
add
dec
xor
enter
jle
cli
inc
lcall
push
xchg
sub
test
pushf
jmp
cmp
addr16
ds
aad
test
sbb
sbb
mov
call
stos
or
xor
pop
jge
mov
sub
and
xchg
stc
cmp
mov
mov
jl
lea
test
nop
pushf
cmovnp
dec
sbb
bound
inc
in
jnp
jbe
leave
jno
fildl
ret
mov
lahf
and
das
mov
inc
outsl
hlt
mov
sbb
fmuls
and
dec
int
dec
or
xor
sbb
dec
les
xor
mov
sbb
outsl
lods
mov
in
movsb
mov
out
aad
xchg
dec
cmp
iret
xchg
push
cltd
shrl
xchg
lret
mov
jmp
loopne
sbb
adc
pop
lret
mov
int
lahf
jns
int
jmp
pop
cltd
cltd
sub
inc
push
mov
mov
repz
xor
xchg
push
jmp
push
loopne
jp
cli
popa
cld
icebp
les
sub
jge
rcl
int3
fimull
sub
cltd
outsb
shll
mov
xchg
into
jae
pop
test
fldt
xlat
aad
pop
xchg
fisubl
leave
jno
xor
mov
push
lods
mov
add
repz
lock
mov
leave
adc
and
popl
stc
cmp
pop
call
jle
aad
aam
lods
cmpb
jge
iret
pop
lcall
adc
into
push
xor
leave
pop
fldt
push
lret
pop
cmp
adc
in
mov
mov
ficompl
addr16
and
call
fisubrs
adc
xchg
lea
mov
stc
sbb
lret
and
imul
jl
push
sbb
mov
jno
sub
js
fistl
xchg
adc
sub
test
stc
sub
ja
bswap
push
mov
or
dec
pop
inc
fmulp
dec
cli
rcrb
push
iret
push
cltd
lods
mov
mov
adc
inc
pop
pushf
cwtl
mov
mov
mov
lahf
pop
fwait
cmpsb
ljmp
xor
jmp
jmp
dec
scas
cli
dec
mov
fiadds
jbe
push
repnz
sbb
xor
xchg
or
mov
movsb
out
dec
cmpsb
lcall
jmp
mov
sub
jp
divb
jmp
outsb
sbb
mov
and
cli
sarl
pop
adc
cli
jnp
fisttpl
shlb
jno
cld
cltd
shlb
cwtl
cwtl
scas
aad
imul
mull
inc
add
pop
dec
fs
fdivs
pop
std
dec
icebp
je
xor
out
mov
out
mov
and
cmp
cli
jl
dec
repnz
lahf
sar
repnz
test
jns
movsl
jne
jb
push
stos
adcl
jnp
dec
jb
cli
outsb
out
or
mov
pop
sbb
adc
iret
int
adc
mov
flds
je
sub
cld
mov
lahf
mov
stc
dec
dec
cltd
or
test
dec
xor
rcl
and
imul
push
dec
incl
fwait
xchg
jno
loop
sub
jae
mov
out
insl
mov
ficoms
imul
jmp
mov
lds
stos
cmpsl
call
sub
int3
cld
xchg
scas
bound
fbstp
pop
lahf
add
test
lods
popa
or
push
mov
cmp
adc
dec
mov
testb
dec
and
push
sti
dec
insb
mov
pop
mov
dec
cmp
or
adc
ficompl
dec
loopne
cmpsl
es
dec
sar
push
mov
inc
sar
mov
clc
addr16
xchg
ret
stc
inc
adc
insl
inc
mov
xor
into
mov
repz
inc
inc
mov
xchg
shll
or
jle
jb
or
in
insb
dec
das
les
sbb
cmc
mov
jmp
push
push
mov
push
data16
mov
adc
pop
cmpsb
push
std
insb
fldl
and
mov
lret
mov
jp
cwtl
xchg
fnstsw
mov
pop
incl
lock
mov
aad
lret
xor
lret
jnp
inc
ret
push
or
lods
jnp
mov
sahf
shll
mov
sbb
or
jecxz
cmpsl
sbb
cmp
enter
cwtl
push
out
test
mov
pop
in
gs
pop
sarb
int3
mov
cli
inc
into
jecxz
fisttps
lods
dec
push
mov
data16
in
sub
popf
test
adc
mov
pop
sbb
push
xlat
inc
jae
subb
sub
test
push
das
mov
cmp
cmpsb
xor
cltd
mov
pusha
and
adcl
jle
test
or
mov
daa
fadd
aad
sub
inc
jl
push
mov
mov
pop
shll
jno
lds
into
cmp
push
add
fcompl
movsl
mov
iret
mov
outsl
ss
mov
inc
nop
xlat
jns
adc
inc
mov
add
jp
jl
cmpsl
insb
xchg
clc
push
call
inc
mov
jmp
mov
cs
xchg
sub
pushf
xchg
icebp
cmp
movsl
fwait
outsb
dec
lret
sub
add
std
sub
jp
ds
bound
ss
cmp
inc
gs
mov
ljmp
popa
into
enter
inc
jne
lahf
xchg
sub
push
and
pop
mov
sti
add
je
pop
jo,pt
cwtl
xlat
iret
dec
xchg
push
and
notl
dec
pop
fs
sbb
cli
cmp
or
in
outsl
xor
mov
mov
shlb
push
fs
pop
loopne
xchg
xor
inc
movsb
xchg
pop
mov
in
gs
fisubl
mov
push
xor
xchg
xchg
rcll
roll
jmp
out
movsl
fcmovb
mov
imul
jno
in
fisttpl
out
push
cmpsl
mov
aaa
int
in
xor
daa
mov
jno
xchg
aam
popl
cmpsl
mov
pop
int
add
push
lret
lahf
sbb
ds
sub
mov
or
mov
mov
push
ficoml
adc
lea
mov
cmc
mov
imul
pusha
mov
ja
and
add
mov
push
int3
loope
cmp
pop
pop
mov
push
adc
shlb
aas
dec
scas
adc
sub
fdiv
outsl
jge
or
inc
popf
or
jno
cmp
inc
adc
hlt
inc
lea
pop
jae
std
das
lret
stc
fidivrl
xor
lods
stos
mov
out
mov
mov
sub
idivb
out
mov
jl
pusha
cmpsl
jecxz
mov
inc
mov
xlat
in
stc
cmp
sub
pusha
jl
xor
ja
mov
jns
adc
mov
call
and
jnp
sub
jns
sbb
add
xchg
mov
sbb
push
ret
jae
push
mov
loopne
and
jmp
mov
scas
shlb
or
xchg
add
ja
lcall
jg
xchg
mov
adc
repz
sbb
lret
daa
mov
in
push
scas
roll
pop
mov
adc
stos
icebp
fimull
pop
popf
dec
xchg
mov
frstor
jbe
or
mov
shrb
sub
sbb
sub
xor
jne
shrb
scas
push
mov
xchg
loopne
pop
imul
into
sub
cmpsb
repz
outsb
dec
shll
xchg
in
pop
push
and
ds
adc
lret
jbe
mov
add
aas
in
xchg
stc
test
adc
jg
je
jo
xchg
lods
in
lret
popl
inc
mov
sub
leave
test
lahf
pop
lock
cld
notl
rcrb
push
addl
or
xor
into
ds
pop
pop
iret
mov
les
fsts
mov
insl
mov
mov
call
imul
pusha
mov
sub
sahf
xchg
in
or
das
dec
jae
mov
test
sbb
push
push
push
or
sbb
cmc
adc
test
jp
stos
insl
addr16
xor
repz
dec
push
cmpsl
cmpsl
mov
push
inc
cmpsb
inc
mov
adc
sahf
jmp
jae
std
push
or
lock
pop
xchg
pop
cmc
cmp
cmp
adc
push
pop
cmpsb
mov
les
jle
or
push
adc
out
icebp
shll
ljmp
pop
sub
out
mov
sbb
stos
cmp
inc
sbb
into
xchg
fs
mov
rclb
cmpsl
xor
jl
sahf
add
sbb
mov
out
int3
shll
sub
push
dec
outsl
push
cmpsl
dec
xchg
fbstp
aas
scas
shlb
mov
in
cmp
stos
xor
or
ds
leave
sbbb
repnz
cmpsl
mov
cmp
ret
ret
inc
into
add
lock
dec
mov
scas
fildl
and
ss
jge
test
adc
lods
push
aaa
faddl
push
mov
sub
xorb
pop
push
std
std
test
dec
repnz
inc
xchg
jle
cld
mov
and
nop
inc
inc
bound
pop
cmpsl
or
into
aaa
inc
xchg
js
add
add
movsl
xlat
jae
shlb
jbe
scas
das
push
or
shll
clc
lret
cmpsl
cld
hlt
aaa
imul
loope
and
sarb
jmp
cmpsl
push
stos
lret
aaa
dec
ja
or
xor
cmc
pop
add
aad
xchg
push
lds
sbb
cs
sbb
enter
pop
in
std
add
ds
and
jno
out
adcb
mov
mov
sbb
repz
jl
jae
popf
std
fcoms
xchg
ljmp
mov
mov
mov
xchg
js
mov
enter
jne
adc
jb
repz
mov
mov
ss
dec
shll
or
jb
jno
test
mov
rol
shrl
add
inc
push
adc
jo
push
push
push
push
push
sub
loopne
jo
aad
aas
jecxz
dec
hlt
hlt
idivl
jl
fimuls
or
popf
rol
push
rcr
insl
insl
mov
test
mov
xchg
push
cmpsb
or
xchg
ficoml
mov
mov
adc
inc
pop
push
xor
mov
add
push
xchg
xchg
cmpsb
es
mov
cli
fs
sub
jg
sahf
xchg
adc
ret
jo
in
xchg
mov
lods
mov
cmpsb
test
push
dec
leave
test
int3
repnz
or
jbe
addr16
mov
repz
out
cltd
adc
dec
outsl
jnp
loop
or
ja
pop
rclb
push
bound
nop
ljmp
pop
fs
xor
add
aam
inc
mov
cmp
xchg
mov
push
mov
stc
fcmove
or
sub
dec
inc
mov
aam
mov
pop
lock
mov
add
fbld
adcb
gs
imul
mov
xchg
js
lcall
mov
add
aam
lock
iret
cltd
or
push
sub
xchg
mov
movsl
add
mov
jnp
shrb
and
cmp
stos
sub
add
mov
rcll
xchg
pop
fwait
or
push
daa
popl
in
repnz
das
and
in
mov
jnp
aad
lds
mov
outsl
push
or
cmp
or
jmp
cmp
push
cmp
sbb
lret
loopne
jbe
fxch
stc
cmp
popa
mov
jae
test
outsl
or
mov
pop
test
lds
sub
lahf
out
push
inc
sub
subb
push
mov
clc
loopne
fwait
pushf
movsl
bound
xor
ret
shl
inc
lahf
xor
and
and
divl
push
jg
cltd
or
mov
sbb
shlb
scas
je
push
pop
rcrl
sbbl
xor
push
fdivrl
clc
and
imul
mov
enter
leave
mov
xchg
mov
subl
sbb
int3
mov
jecxz
test
jae
dec
xchg
rorb
popa
popf
popa
mov
aam
push
loop
in
gs
dec
es
xor
xchg
pop
and
sbb
lods
push
sbb
push
cld
fisubrl
aam
scas
sub
mov
xorb
bound
inc
xchg
cmp
add
push
cmpb
mov
xor
mov
test
cmp
mov
repz
std
movsl
or
dec
es
jb
xor
pushf
inc
mov
das
cmp
out
es
shrb
inc
mov
or
pop
rorl
mov
insb
movsb
lret
pop
fdivr
jge
lock
pop
loop
cmp
call
adc
mov
cmp
push
cmpb
mov
loope
push
iret
lret
loopne
outsb
lcall
stos
mov
mov
cmpb
pop
adc
in
movsb
mov
andb
ljmp
fsub
mov
out
aad
dec
cmp
and
shlb
push
or
add
rcrl
lds
stos
mov
push
or
inc
int3
subb
add
hlt
push
lcall
mov
in
cmp
fiaddl
cs
test
imul
imul
and
pop
and
ljmp
jno
cmpsb
xor
cmp
push
pushf
ret
lea
dec
and
dec
cltd
pop
hlt
pop
adc
lock
push
mov
aad
int
adc
and
repz
and
cmp
loop
xor
ret
into
jno
mov
pop
pop
sbb
and
icebp
dec
mov
dec
xor
dec
and
inc
jl
push
dec
icebp
add
leave
add
ss
jns
icebp
xor
lea
sub
cs
icebp
fadds
xchg
add
ret
lret
dec
imul
jle
xchg
inc
sbb
add
das
cmc
adc
arpl
aaa
addr16
icebp
fdivl
rcrb
test
imul
cltd
test
push
adc
add
out
stos
std
daa
jle
popa
or
cli
shlb
mov
and
cmpsl
call
inc
add
out
ficompl
jg
push
in
popf
mov
lcall
addr16
sarb
fisttps
sub
dec
xchg
jmp
outsl
popa
test
sub
sbb
push
sub
push
ret
jnp
xor
in
and
pop
daa
fisubrl
lods
rcrl
sub
fisttpl
inc
fwait
stos
ret
ret
or
cmpsb
stos
icebp
rorl
std
test
mov
push
mov
int
push
insl
cmpsl
mov
mov
mov
es
jmp
pop
or
inc
roll
clc
sahf
lods
testb
push
pop
clc
std
push
in
repz
cmp
pushl
in
cmp
and
add
mov
pusha
pop
repz
loope
sub
dec
lcall
jbe
adc
add
mov
mov
adcb
jle
dec
popa
xchg
mov
cld
dec
idivl
outsb
adc
mov
scas
scas
or
xchg
inc
mov
mov
imul
or
rcll
add
xchg
push
andl
dec
sti
mov
mov
push
mov
jge
lahf
out
pmulhuw
leave
bound
mov
dec
call
enter
jb
add
dec
rcll
and
push
jnp
aas
std
ds
xor
sbb
subl
mov
adc
xor
lret
cwtl
or
cwtl
inc
call
and
xchg
movsb
mov
mov
std
push
repz
pop
or
dec
pop
pop
pop
inc
into
jo
add
fcomp
lcall
xor
mov
scas
in
or
ror
and
insl
xor
in
cmc
push
popf
outsb
fmul
int
push
mov
fnstcw
sbb
sbb
es
arpl
xor
sbb
sbb
mov
dec
add
push
daa
ret
das
loop
pop
and
sub
andb
push
es
das
stos
push
mov
push
rcrb
bound
dec
in
push
cwtl
jl
jo
and
cli
jne
mov
pusha
xchg
jge
sbb
js
dec
mov
movsb
dec
pop
sub
pop
push
or
fistl
pop
jle
pushl
adc
into
mov
mov
testl
loop
jmp
mov
xchg
jns
pop
push
icebp
insl
popa
outsb
pop
adc
sub
dec
fistpll
loopne
mov
mov
push
lahf
add
out
int3
sub
mov
xchg
ret
lret
push
sbb
roll
jno
cmp
mov
or
setg
loopne
shr
jge
mov
mov
cmpsb
ja
rcrl
cltd
jbe
fsubl
sti
cmpsl
lods
mov
sarb
mov
hlt
test
mov
sti
jbe
sub
jmp
stc
call
cmp
out
adc
lret
enter
cmpsl
pop
dec
xchg
xor
leave
sbb
xchg
pop
outsb
es
or
pop
fldl
sbb
ficomps
xchg
scas
xchg
stos
out
pop
mov
fwait
push
pop
ja
in
rcr
je
es
sbb
cmp
xor
sub
xchg
xchg
in
pop
sahf
xor
int
mov
ja
push
inc
jno
or
mov
sbb
push
sub
scas
mov
jmp
dec
mov
test
mov
sbb
sbb
lea
flds
sbb
cltd
scas
or
or
inc
mov
fwait
adc
or
cmp
sub
push
mov
pop
fsubl
daa
lret
cmp
inc
cmpsl
rep
lea
jae
test
mov
stc
cli
pop
imul
push
jno
push
and
mov
push
fcmovnbe
mov
add
out
fcomp
bound
jns
dec
sbb
into
push
push
fildl
inc
mov
dec
mov
insl
mov
jge
sbbb
leave
jns
pushf
pop
xchg
xor
mov
dec
and
jmp
mov
imulb
ss
out
into
sti
push
sbb
int
add
mov
push
or
out
pop
je
push
fwait
mov
mov
mov
cmpsl
loopne
pop
lret
xor
xchg
call
in
fmulp
in
into
push
outsb
js
stos
ficoml
nop
lret
jmp
inc
sub
aas
push
sbb
mov
mov
add
dec
lods
dec
or
dec
test
out
addl
outsb
fucomp
cmp
idivl
leave
in
mov
mov
or
ja
stos
test
mov
xchg
outsb
ja
add
adc
xor
shlb
test
sub
jns
xchg
lods
dec
dec
sti
popa
sbb
xor
mov
sbb
mov
jp
scas
xchg
cmp
dec
mov
inc
ret
push
jb
add
insb
fsubs
lock
jns
cmp
adc
inc
mov
popa
lahf
push
sar
cwtl
repnz
mov
cmpsl
mov
mov
add
cmp
add
shrb
cli
insb
nop
mov
lret
scas
dec
jmp
mov
jg
repz
push
sar
inc
mov
shl
adc
dec
out
stos
icebp
mov
fidivs
mov
cmp
aaa
subb
ret
cmp
sub
jmp
inc
pop
adc
ret
xor
sbb
sti
mov
loopne
das
or
addr16
int
adc
pop
lcall
dec
pusha
scas
adc
inc
dec
xchg
push
fldcw
jmp
xchg
pop
and
stc
xchg
xchg
xchg
fsts
lcall
push
jbe
icebp
movsb
mov
movsl
xchg
and
sbb
stos
ret
in
mov
xor
lock
cmp
sbb
sbb
insb
and
push
mov
repnz
iret
mov
aas
enter
mov
faddl
dec
sbb
out
xchg
fisubrl
jno
xchg
sbb
xor
out
outsb
cmpsb
inc
sbb
out
dec
xchg
cmpsl
movsb
ljmp
jne
and
repz
jb
nop
xchg
mov
andb
lods
push
mov
movsb
scas
fistps
sub
dec
fisttpl
pop
mov
enter
cli
lock
addr16
std
movsl
pop
lock
jmp
sti
ret
dec
push
mov
inc
ljmp
das
and
adc
mov
addr16
mov
ljmp
orb
xchg
aas
aas
fwait
mov
or
in
inc
add
leave
jno
push
dec
jns
cmp
test
or
orb
fwait
jb
xlat
sub
mov
xchg
cmc
cld
fistpll
stos
and
xchg
pop
outsl
pop
sub
stos
das
stc
shrb
xor
loope
insb
xor
xchg
add
mov
lock
js
dec
push
mov
add
jp
mull
mov
cs
xchg
in
inc
xorb
fwait
push
adc
jecxz
mov
push
or
scas
call
in
fidivrl
cmp
mov
dec
mov
shl
popf
mov
inc
test
cmp
loop
mov
sub
mov
ljmp
pop
jno
push
xor
in
loope
cld
lahf
imul
mov
arpl
test
scas
or
xor
pop
shrb
or
in
dec
push
lcall
ret
out
subl
cld
jmp
cld
xor
xor
add
xchg
cwtl
data16
repz
xchg
push
jmp
adc
mov
mov
dec
flds
idivb
outsb
add
adc
add
add
stc
lret
and
xchg
mov
or
iret
jae
jnp
push
pop
push
loope
mov
aaa
das
pop
inc
gs
pop
out
insl
jno
cmovg
and
mov
pop
jbe
xchg
imul
stc
es
enter
lret
cmp
push
fimuls
aam
mov
into
scas
cmp
push
flds
xlat
sub
mov
jne
jb
dec
jne
xor
mov
inc
sbb
movb
xlat
cwtl
mov
popf
and
fnstenv
sti
add
ss
push
rorl
mov
sti
les
xor
lcall
inc
xchg
mov
push
es
aam
fs
aam
adcl
jmp
sub
pop
add
test
pop
enter
sub
ja
shl
pushf
imul
ja
popl
mov
clc
adc
loope
into
adc
jnp
mov
jb
jl
add
inc
fstps
jl
mov
int
scas
andb
xor
or
rclb
sbb
push
xor
ret
out
repz
lahf
or
mov
push
pop
in
orb
loope
inc
add
out
xlat
orl
mov
in
sub
stc
xor
xchg
fs
js
and
in
or
sbb
cmp
imul
bound
pop
test
pop
cmp
mov
dec
stc
mov
popa
sub
pop
mov
rorl
in
or
or
daa
cmp
insl
inc
pop
lods
loop
jno
mov
push
mov
push
and
sub
xchg
sub
cmp
push
lods
cmp
es
inc
jne
pushf
xchg
sbb
sbb
pop
dec
push
js
inc
add
xor
dec
or
lret
movsb
pop
xlat
sub
xchg
xor
jnp
sub
and
fnsave
cmpb
inc
arpl
shl
sbb
xchg
mov
jecxz
fs
lea
out
xchg
ja
ret
es
jo
mov
mov
push
movsl
adc
aam
xchg
sub
mov
cmp
das
int
jmp
xchg
xchg
mov
or
jnp
enter
fdivl
ss
mov
and
mov
sub
and
xchg
xor
loope
adc
movsb
or
scas
mov
rcll
mov
fisttpl
mov
lcall
into
testb
and
shrl
pop
jne
ret
pop
push
push
pusha
leave
push
inc
test
sbb
bound
das
pop
mov
dec
pop
adc
ret
dec
cltd
outsl
lret
inc
adcl
mov
mov
dec
das
adc
movsl
out
xchg
pop
std
loop
aam
mov
jmp
loopne
leave
out
push
inc
js
jmp
mov
test
dec
lods
xchg
in
jb
xor
cld
push
loopne
and
inc
push
mov
xchg
or
jno
and
stc
cmpsl
xchg
pop
push
emms
dec
or
sbb
jle
pop
mov
xor
sub
popa
scas
dec
sub
sub
inc
jae
or
xchg
and
cmp
cmpsb
xchg
inc
inc
gs
push
ja
movsb
add
mov
addr16
add
mov
movb
add
xor
fnsave
ficoml
clc
fnsave
add
mov
out
or
scas
shll
out
aad
push
inc
iret
cmc
aad
aaa
cmp
add
insb
mov
dec
pop
ficoml
mov
or
jne
aam
mov
mov
push
pop
mov
jnp
les
stos
cmp
mov
aad
std
mov
addr16
jg
xchg
test
dec
movsl
sub
dec
sub
mov
lea
popf
sbb
mov
pop
les
js
mov
std
mov
add
or
in
mov
mov
xchg
and
popa
pop
lods
sub
dec
jmp
push
sahf
nop
cld
lret
das
push
jecxz
lahf
repz
mov
jne
xor
or
mulb
leave
xchg
in
loop
loop
inc
mov
adcb
lds
jl
insl
push
int3
mov
cs
icebp
ds
cli
or
sti
cli
mov
jmp
roll
testb
sbb
sbb
pop
mov
test
jno
pop
sub
mov
mov
adc
aaa
push
shl
cmp
pop
and
imul
pusha
sbb
insl
insl
fsubrs
jg
pushl
lret
inc
fsubrp
jo
out
or
mov
bswap
xor
test
jecxz
and
or
sub
mov
add
push
leave
clc
push
push
pop
sbb
repnz
js
cmp
clc
fildl
lods
nop
dec
lahf
mov
fwait
inc
adc
neg
dec
or
arpl
ljmp
aam
add
insb
popf
mov
lea
test
ds
xor
push
repnz
mov
pushf
fcmovbe
fcmovnb
sub
fisubrs
jp
int3
pusha
fucomi
mov
pop
push
inc
pop
stos
cmp
dec
das
test
and
jl
dec
shr
xor
flds
push
insl
inc
sbb
inc
and
jp
out
push
stos
or
loope
lock
add
xchg
testl
test
imul
mov
ret
fcmove
or
inc
mov
int
test
imul
cmp
adc
test
xchg
imul
pop
sbb
mov
inc
mov
dec
sub
sbb
ret
clc
and
in
insl
xor
outsl
std
das
lahf
or
sub
out
and
add
xchg
aaa
adc
adc
je
jne
jle
call
inc
cld
fwait
mov
inc
fdivrs
push
push
in
dec
fisttpll
fstpl
imul
addr16
lret
shl
clc
cli
sbbb
pop
xchg
lret
xchg
mov
lods
add
lahf
fwait
mov
decb
mov
popa
jecxz
pushl
popl
test
sahf
xor
cmpsl
xchg
out
movsb
imul
jmp
inc
xlat
push
mov
in
mov
bound
lcall
adc
int3
aad
lods
inc
add
push
gs
clc
imul
mov
xor
repz
dec
push
xor
mov
mov
jp
xchg
fwait
xlat
mov
push
stos
add
lds
inc
xor
cmpsl
or
syscall
pop
cwtl
mov
mov
mov
xchg
add
stc
inc
mov
jmp
enter
push
and
aam
xchg
fsubrp
cmpsl
fisttps
mov
jge
mov
ja
adc
std
insb
or
sub
inc
repz
mov
jbe
pop
pusha
lods
jnp
imul
jmp
test
shrl
jmp
cs
jns
or
pop
add
inc
data16
adc
push
and
jo
scas
shrl
cmpsb
in
or
add
push
lods
push
lret
inc
push
gs
inc
jecxz
jbe
das
in
das
int3
shlb
jg
pop
mov
mov
inc
mull
inc
push
hlt
insl
jecxz
dec
mov
pop
and
adc
xchg
jnp
mov
xchg
mov
xchg
bnd
adc
and
adc
push
repnz
aad
xor
xor
lods
and
icebp
or
jo
jbe
fistpl
or
nop
sbb
dec
mov
icebp
ljmp
lahf
jne
aam
scas
cmpsl
adc
insl
mov
out
jne
adc
inc
inc
lret
cmp
push
fildll
adc
jge
add
pop
sbb
mov
call
and
mov
iret
jl
hlt
shrd
add
xorb
rorl
ret
and
or
in
jmp
mov
fcmovb
push
movsb
sub
fisttpl
fists
adc
jb
test
xor
mov
ret
stc
fcompl
adc
test
prefetchw
in
in
pop
jecxz
sbb
cld
push
dec
stos
in
enter
pop
dec
sahf
sub
test
xor
cmc
out
test
cmp
pop
mov
push
pop
push
xor
adc
repz
add
pop
daa
xchg
nop
stos
test
loopne
cli
lods
scas
loopne
ret
fildll
cmp
push
ja
pop
mov
xor
inc
jae
sub
cmc
sbbl
add
mov
movsb
fwait
jl
incl
pop
addb
mov
sub
pop
pop
and
dec
adc
inc
repnz
cmp
daa
cmp
xor
fsubl
mulb
pop
mov
mov
sahf
jmp
jmp
jno
jne
sti
sbb
movsl
outsb
or
xlat
in
inc
movntq
outsl
sub
mov
sbb
mov
sub
popf
adc
stc
inc
lcall
sbb
jp
test
add
mov
xchg
inc
cld
into
pop
rsm
loop
js
push
sub
rol
xor
sbbb
ffreep
arpl
aad
sub
sbb
cmp
pop
lods
jae
xchg
dec
cmp
subl
fimuls
into
xor
icebp
adc
cmp
adc
fmul
sahf
and
inc
sbb
pop
pusha
fbstp
rcrl
add
out
sahf
push
std
std
push
jae
push
jnp
or
ret
xchg
mov
push
and
pop
jno
jp
lcall
add
into
lcall
mov
adc
push
sub
nop
add
push
insl
nop
dec
jno
mov
xchg
mov
mov
adc
inc
mov
push
jne
popa
mov
jl
xchg
lcall
add
add
mov
xchg
aaa
xchg
pop
iret
mov
dec
sahf
xor
jbe
xlat
add
cmp
movb
sbb
xor
or
mov
popf
ret
stos
pusha
xor
fwait
cmp
jl
in
xchg
gs
lea
out
or
push
pop
jmp
clc
ret
cmpsl
or
mov
jne
sahf
das
std
lahf
imul
lods
xchg
rorl
jl
pop
pushf
xchg
or
fcmovu
rorb
and
cwtl
aad
lcall
xchg
jge
mov
adc
jl
clc
mov
mov
or
mov
pop
sub
dec
repz
test
jg
out
cmpsb
sub
test
push
mov
ljmp
rcrb
adc
ret
dec
cli
dec
js
cmp
or
sahf
in
fldt
adc
mov
mov
xor
jae
nop
lods
adc
loop
stos
movsb
jb
pop
push
das
pop
xlat
xchg
je
sbb
outsl
xchg
sbb
icebp
std
dec
sbb
push
dec
mov
in
mov
cmp
out
inc
dec
xorb
pusha
es
inc
out
or
xlat
mov
iret
lahf
call
in
ja
lcall
data16
fstps
push
sub
stos
pop
cmp
mov
fnstenv
xorb
scas
mul
test
push
cwtl
testl
iret
xchg
in
mov
jmp
mull
leave
inc
fnstcw
push
sbbl
mov
jne
js
cmp
cmp
aad
loopne
hlt
popa
pop
dec
icebp
ljmp
out
shrl
insb
adc
cltd
add
shlb
xchg
stc
inc
movb
imul
jmp
or
fbld
xor
inc
mov
inc
outsb
ficomps
push
or
jo
jp
mov
lcall
pop
cmp
cmp
xchg
mov
es
pushw
lret
add
adcl
out
pusha
je
repnz
xor
fstpl
ret
bound
xchg
test
repnz
mov
popf
fiaddl
into
cmpsb
or
lret
xor
push
xlat
sub
mov
jmp
and
mov
aad
xchg
push
decb
test
jae
mov
iret
and
pmulhw
cltd
sbb
jo
adc
push
cmc
fdivl
repz
or
std
pusha
int3
adc
in
arpl
ret
fidivrs
or
jmp
int3
bound
rcrb
sub
faddl
addb
cmc
imul
aad
sbb
jns
push
adc
jle
or
push
sbbb
pushf
pop
test
cmpsb
sub
cmp
pop
mov
lahf
adc
ljmp
rol
std
gs
cmp
push
ss
pop
xor
mov
pushf
dec
cmc
out
sub
insl
pusha
xor
add
popa
add
iret
xchg
repz
mulb
mov
lods
scas
cmpsl
mov
xchg
pop
and
fcmovnb
inc
sahf
xchg
sbb
leave
adc
mov
pop
andl
adc
mov
mov
xchg
imul
xchg
jo
arpl
icebp
adc
aad
xor
add
cmp
scas
push
leave
cs
xlat
mov
dec
out
cmp
mov
inc
pop
repnz
shll
fnstsw
and
fnstcw
push
stos
lahf
out
sarl
sub
lods
in
sbb
addr16
jns
or
mov
in
pop
repnz
cmp
test
dec
test
aas
gs
int
jmp
fwait
cltd
push
xchg
icebp
stos
mov
or
lahf
arpl
jp
enter
dec
cmp
mov
mov
out
imul
xchg
push
nop
sub
jne
or
pushl
or
adc
inc
adc
inc
inc
xchg
loopne
call
cmp
lret
call
mov
pop
ret
cld
jno
scas
pop
mov
or
pop
psrld
out
xchg
xchg
xchg
out
mov
and
pusha
lcall
cmp
sub
pop
lea
add
lods
jbe
mov
sbb
adc
or
lods
inc
rcl
inc
xchg
inc
out
scas
sbb
sbb
mov
mov
push
cli
jno
ss
data16
stos
das
orb
ret
jle
pop
shlb
cwtl
call
mov
pop
push
aaa
pop
cld
out
aaa
xchg
in
add
cmc
outsl
add
sub
out
scas
xlat
and
cmpsl
cmc
pop
shlb
cmpsb
out
xorb
pushf
push
test
inc
ljmp
lods
je
sarl
pop
or
out
sub
push
jne
lahf
nop
mov
scas
pop
cltd
mov
push
imul
icebp
sbb
mov
or
lret
mov
ret
rorl
jae
mov
sbb
pop
sub
cltd
lret
push
pop
inc
repnz
adcb
scas
fstpl
test
cmpsb
dec
mov
pop
jbe
and
or
jmp
ds
adc
cli
testl
js
inc
daa
frstor
gs
mov
push
out
pop
mov
jb
lcall
mov
in
push
sbb
cmc
push
setp
jnp
psllq
shrb
rorb
xor
mov
jns
sbb
ss
pop
iret
xor
dec
pop
push
and
imul
pop
dec
repnz
xlat
inc
lods
int3
lahf
mov
or
mov
call
push
push
mov
in
sub
push
mov
loop
cmpb
adc
pop
inc
jns
rcrb
cli
mov
movsb
mov
and
sub
inc
inc
mov
cmp
push
mov
imul
jb
inc
push
sub
daa
add
setl
mov
jae
popa
fistpll
pop
stc
cmp
xchg
std
ja
xchg
mov
shl
fdivrs
daa
push
fdivs
cmp
push
mov
lret
pop
jg
adc
enter
stc
cs
mov
mov
adc
mov
xchg
popf
push
ficomps
aad
cmpsb
lret
mov
xlat
xchg
xchg
xchg
aad
push
mov
ljmp
jne
loop
jo
sarl
sub
stos
lret
or
lret
mov
test
icebp
sub
out
data16
push
cmpsl
repnz
mov
popf
out
leave
adcl
mov
pop
divb
rcrl
cmovo
mov
add
pop
iret
fmuls
std
in
pop
in
jg
mov
inc
pushf
lret
jge
or
fildl
mov
bound
filds
or
std
ds
dec
or
addr16
std
out
or
lahf
repnz
sti
stc
bound
jle
jle
pop
jmp
or
sarb
push
xchg
mov
pop
test
inc
mov
out
rcr
fsubs
outsl
test
in
out
lcall
ret
jmp
adc
into
jb
push
lds
hlt
enter
inc
lret
pop
shrb
pop
stos
xor
fisttpll
add
push
or
arpl
fisubs
cmc
jns
sti
and
inc
jp
inc
pop
mov
push
out
rcrl
mov
or
push
jbe
adc
adc
and
fs
add
mov
lea
sbb
stos
leave
add
pop
jle
pop
xchg
mov
xchg
mov
and
adc
fldcw
into
pop
mov
mov
inc
push
jle
popa
jbe
pop
mov
mov
ja
mov
push
cli
pop
inc
sti
cmpsb
adc
xchg
mov
pop
xchg
add
idiv
fxch
or
stc
ljmp
in
jmp
mov
pop
stos
and
push
xor
mov
ret
test
iret
movsl
mov
jle
scas
mov
or
dec
mov
fwait
xchg
add
int
mov
movsl
out
imul
ficoms
jne
pop
ret
hlt
xor
jbe
loop
sbb
cmpl
jg
pop
pushf
inc
adc
in
and
jmp
adc
mov
or
js
scas
inc
mov
aaa
rol
out
insl
fldt
in
jp
cwtl
xchg
push
push
rolb
jnp
shlb
mov
test
out
int3
pop
add
in
dec
out
test
adc
loop
les
mov
es
push
cli
out
mov
popf
jp
jae
inc
aad
outsb
or
fwait
mov
push
xor
cmpsb
jl
ljmp
cmpb
add
aas
jmp
orb
jl
outsl
jmp
fs
ret
fimull
mov
scas
incb
mov
addr16
cmpsb
push
mov
cmp
mov
mov
push
sub
inc
pop
rorl
addb
lds
pop
stos
jmp
ror
mov
mov
mov
ret
jnp
push
test
xor
repnz
xor
shl
cltd
roll
add
mov
adc
sbb
daa
sbb
jle
das
inc
in
fcomi
dec
aas
scas
repnz
lahf
ds
aad
jne
sbb
das
std
cwtl
cwtl
mov
xchg
pop
cmpsb
push
cmpb
sub
push
lret
jb
mov
ficomps
js
dec
mov
lretw
les
adc
popa
mov
repz
mov
xadd
cmpsl
sub
jl
inc
cmc
rcrb
pop
aad
lahf
add
ficoms
cmp
call
aas
mov
lcall
xor
mov
jae
arpl
and
fdivs
movsl
enter
movsb
cmp
sbb
jb
xchg
pop
sbb
cs
mov
mov
jmp
dec
in
insl
mov
packuswb
xchg
push
pop
scas
ret
jnp
btr
pmulhw
inc
fstpt
sti
loope
adc
repnz
sarl
jl
testl
or
or
stos
dec
cmp
xchg
jp
cmp
mov
xlat
mov
cld
fcmovnu
pop
push
out
mov
and
mov
call
clc
push
xorl
out
xchg
sti
jb
or
dec
cmp
mov
shrl
adc
popa
shll
mov
jnp
or
jns
ret
mov
scas
out
mov
dec
into
addr16
std
inc
xor
push
inc
pusha
and
lds
ficoml
shll
inc
rcrl
and
ret
ds
mov
push
or
mov
into
jns
sbb
dec
outsb
sbb
iret
jae
xchg
sub
adcb
testl
mov
jae
sbb
sbb
std
sub
pop
xchg
divl
dec
addr16
inc
mov
pop
js
or
dec
and
lret
mov
lds
cwtl
mov
fwait
jp
orl
cmp
stc
push
cmc
pushf
xchg
adc
or
xchg
sahf
jno
lds
fbstp
inc
imul
dec
ljmp
mov
int3
cmp
into
or
mov
mov
or
into
mov
popa
imul
out
ret
ret
popf
sti
push
hlt
shrl
xor
pop
or
cmc
cmp
mov
lcall
cmpsb
mov
ds
xchg
sbb
out
mov
cld
jbe
xchg
xchg
xor
sub
ljmp
lds
dec
or
lea
loop
hlt
ret
bound
mov
adc
push
aad
hlt
mov
dec
or
cmpsb
sbb
push
xchg
imul
ror
adc
pop
or
mov
fs
addr16
pop
pop
out
addr16
mov
ljmp
xor
cmpsb
inc
stos
jp
push
sbb
loope
mov
loopne
or
or
add
fimull
mov
mov
mov
cmpsl
cli
stc
inc
jecxz
xchg
movl
and
out
adc
ret
into
aam
push
cltd
jmp
xor
lock
sbb
rolb
pop
adc
dec
and
insl
loop
push
add
scas
cmp
add
mov
or
adc
shll
push
adc
pop
jmp
push
xchg
test
clc
xchg
xor
sbb
push
inc
sub
and
jl
jbe
inc
dec
pushf
fwait
das
daa
jnp
inc
cmp
pushf
mov
test
icebp
ss
mov
xchg
mov
adc
icebp
xchg
bound
testl
jle
jge
xor
add
test
lahf
shll
es
jb
imul
lock
xor
test
mov
pop
roll
pop
fsubrl
sbb
test
fcoml
aam
mov
jle
daa
xor
mov
jmp
jne
mov
mov
cmp
cmpsb
cmp
sbb
jmp
mov
or
push
mov
daa
arpl
pop
cmp
mov
js
sahf
dec
dec
shl
or
in
test
fstpt
xor
in
push
adc
dec
data16
dec
js
or
xchg
arpl
inc
scas
cltd
pusha
cmc
sbb
ret
or
cmp
pop
sub
sbb
repz
repnz
icebp
cld
xlat
loopne
mov
and
lea
pop
call
cmp
cli
xchg
push
xlat
xchg
in
pop
inc
ret
lcall
sub
mov
frstor
and
pop
gs
dec
mov
call
enter
adc
push
dec
shrb
adc
mov
adc
cltd
xchg
pushf
loope
dec
jbe
adc
test
add
cmpsl
add
or
mov
sbb
jne
pop
bnd
push
icebp
add
gs
jo
hlt
inc
std
in
jp
cmpl
aas
sub
inc
fxch
adc
xchg
xor
mov
xchg
lea
sub
mov
and
clc
mov
xchg
and
outsb
push
lds
xchg
add
xlat
push
add
pop
pop
cmp
cmpsb
jb
mov
outsb
cmc
dec
aad
insb
pop
push
mov
mov
ljmp
popf
les
pop
dec
fbld
and
aad
aaa
cli
mov
or
cmc
sbb
xchg
jp
adc
push
pop
mov
out
lds
jb
and
inc
sbb
mov
push
pop
lcall
push
dec
mov
insb
call
popa
pop
imul
daa
sahf
xchg
sahf
cltd
mov
inc
pop
imul
adc
enter
add
fistps
pop
or
lcall
dec
lahf
dec
imul
mov
jp
sbb
call
lea
dec
adc
pop
mov
cld
adc
idivl
out
mov
testl
es
or
xchg
push
fcmove
mull
xor
adc
add
int3
loope
push
mov
mov
mov
out
xchg
sub
outsl
data16
les
in
test
push
jge
adc
mov
shrl
xchg
test
int
mov
cwtl
test
add
leave
shrb
or
pop
insb
sub
dec
push
mov
dec
jnp
mov
pop
out
add
xchg
mov
std
inc
ljmp
punpckhdq
add
cli
lods
popf
pushf
aaa
pop
fstl
rorl
mov
cltd
adcl
ds
out
push
ret
xchg
int3
xor
pop
push
cli
pavgb
adc
jecxz
lea
lret
push
aas
push
jo
in
shlb
lret
adc
and
mov
inc
xchg
adcl
aam
ror
loope
test
mov
ret
lods
test
in
in
jge
mov
inc
adc
sbb
clc
sti
xchg
mov
test
out
int
fsubl
jmp
out
push
out
pushf
jle
cltd
aaa
inc
leave
xchg
daa
pop
icebp
ficompl
les
fnstcw
insl
ljmp
insb
ficoml
stos
push
test
mov
mov
push
xchg
cmc
outsl
xchg
sti
jmp
push
push
or
fcmovnu
sub
jmp
inc
cmpsl
in
jbe
pop
nop
ds
mov
mov
xchg
testl
mov
dec
inc
test
shlb
jne
adc
sti
cld
data16
mov
cmp
jae
stc
out
push
mov
add
int
mov
int
dec
mov
shlb
push
mov
popf
cltd
movsb
sbb
lods
pop
or
stos
inc
sub
ret
adc
pop
mov
add
ds
mov
cmp
movsb
mov
ljmp
hlt
mov
aas
lds
rcr
jmp
test
mov
shll
lock
xchg
repnz
insb
push
es
hlt
push
jmp
aas
push
push
loope
adc
jp
inc
pop
aad
lcall
lock
sub
jmp
fistpll
xor
jge
xchg
mov
lds
add
xlat
mov
add
mov
push
push
hlt
jns
lcall
dec
inc
jne
dec
hlt
jecxz
enter
insb
repnz
xor
add
inc
xchg
jo
sbb
mov
push
inc
push
mov
std
fwait
movsb
add
gs
xor
mov
cli
sar
xchg
push
js
mov
fistpll
xchg
mov
xchg
test
jmp
and
inc
xchg
push
mov
adc
insb
push
add
fmul
mov
xchg
sub
cmpb
imul
inc
stos
cltd
aad
sub
add
cs
cmp
xor
inc
popf
mov
push
and
add
subl
jmp
movsb
addl
jmp
test
loop
xchg
push
jb
pop
inc
push
mov
hlt
cmpsb
popf
jg
xlat
jecxz
push
cmp
fwait
insb
mov
add
mov
xlat
shl
adc
jmp
mov
in
jns
movsb
xchg
mov
sbb
cmp
test
arpl
div
mov
mov
and
fs
cmpsb
mov
mull
mov
push
xchg
addr16
test
mov
pop
movsb
mov
dec
pop
mov
sbb
inc
in
ret
hlt
push
cs
lea
test
repz
dec
mov
xchg
add
ret
add
mov
sarb
or
cmp
lea
out
in
jae
lahf
dec
rorl
cmp
lcall
mov
mov
sahf
xor
xor
arpl
cwtl
dec
push
cmpb
jbe
inc
les
in
sbb
jnp
stos
dec
adc
xchg
push
cmp
push
mov
push
mov
add
sub
test
push
adc
inc
cmp
cmp
iret
adc
sbb
adc
xor
int3
lahf
rol
dec
les
ret
adc
push
fsubp
fidivrs
dec
xor
push
sbb
ljmp
pushf
mov
dec
call
fldenv
cmp
arpl
stc
jmp
inc
lahf
inc
lock
xchg
or
fwait
ds
adc
loop
rolb
xor
jmp
mov
shll
cmp
fcompl
and
inc
sti
fs
test
in
fldcw
int3
jle
sbb
leave
pop
mov
jge
ljmp
bound
add
std
mov
and
mov
pusha
xchg
cmp
loopnew
or
iret
mov
std
cmpl
mov
mov
adc
xor
sub
call
mov
loope
popa
test
sbbb
imul
popf
pop
push
cltd
stos
xor
jne
jnp
add
inc
jg
cmp
and
rolb
mov
movsb
jbe
mov
das
fwait
xchg
fsubs
rolb
sub
lret
aad
rorl
stos
scas
push
idivl
pop
jne
popa
xor
sahf
xor
pop
cmc
cs
mov
sbb
mull
mov
mov
add
andl
lds
xor
rorl
lea
cld
xchg
fcompl
filds
and
cmp
xchg
jl
loop
push
imul
bswap
in
or
adc
and
shl
aam
test
lcall
sti
dec
mov
dec
xor
gs
out
ljmp
lea
cld
or
cmp
push
fsubl
xchg
mov
subl
mov
call
cmp
mov
int
mov
xchg
push
cmc
push
aam
cmp
mov
lods
lea
or
loopne
icebp
xchg
add
das
add
xor
lock
rclb
test
jno
ja
call
sub
pop
lds
sahf
xorb
push
int3
in
sti
mov
pop
insl
fsub
movsb
mov
or
aam
push
fcoms
push
inc
jecxz
cmp
mov
xor
or
popf
lcall
mov
mov
stos
xorl
insb
push
arpl
mov
nop
push
sub
lods
lods
xchg
enter
jne
inc
and
mov
jl
and
or
negb
out
cmp
fwait
push
pop
add
ret
pop
in
mov
inc
mov
idivb
cmp
js
sahf
movsl
popf
jno,pt
ljmp
pop
stc
fldcw
xchg
inc
xchg
outsl
jmp
ret
mov
adc
adc
and
pop
sub
jge
mov
sub
testl
xchg
popa
lcall
xor
ljmp
movsl
std
es
xchg
lret
mov
lods
dec
out
add
out
stc
out
mov
rorb
dec
pop
xchg
jb
iret
adc
lret
xchg
and
out
xchg
lret
in
pop
push
xor
aam
or
imul
jle
dec
push
and
xchg
lods
xchg
hlt
iret
or
cltd
pop
add
inc
les
push
xor
je
sbb
xor
js
or
fmul
test
sbb
cs
xor
lea
jg
push
sub
movsl
push
inc
in
and
fmull
adc
adc
and
out
jae
or
or
enter
and
leavew
int3
fcmovne
test
in
push
mull
and
out
iret
les
sub
shl
dec
rcll
and
inc
xchg
mov
test
jb
dec
add
bound
xor
scas
test
rolb
inc
mov
jl
ret
xchg
outsb
cltd
cmp
mov
adc
fmuls
adc
add
lds
dec
fistpl
jmp
jle
ja
dec
mov
mov
mov
inc
pop
ljmp
test
xor
lock
test
popf
adc
mov
test
sahf
cli
mov
jo,pt
fiadds
pop
adc
int
pop
test
hlt
iret
xchg
mov
push
fsubrs
mov
sub
xchg
test
orb
out
in
test
test
push
push
insb
sub
in
jbe
cmp
mov
adc
and
shll
cmpsl
daa
push
xchg
jg
popf
orb
sahf
lahf
cmp
addb
dec
dec
outsb
push
xlat
jmp
push
jnp
ljmp
lret
mov
ret
insb
insb
push
scas
mov
or
and
jp
xchg
jnp
shll
adc
mov
jmp
scas
enter
bound
push
inc
push
rcrl
lds
jge
in
mov
cltd
dec
xor
pop
lret
jne
repnz
pop
dec
jae
lahf
fbstp
add
repnz
nop
fisubs
xchg
pop
mov
cs
inc
xchg
mov
inc
and
adc
insb
sbb
fwait
test
jg
cmp
mov
arpl
inc
mov
xorl
mov
inc
and
fldl
dec
cli
movsb
push
xchg
popa
and
lea
add
loopne
ja
or
into
aad
adc
mov
sar
repnz
xchg
ljmp
mov
jge
dec
add
pop
cli
sbb
add
inc
stos
ljmp
push
lock
xorl
ss
sbb
jae
sbb
mov
push
pop
mov
lret
fs
sub
fisubs
xchg
not
push
push
cwtl
xchg
movsb
dec
into
call
sbb
sbb
daa
inc
lock
ljmp
xor
inc
popa
outsl
mov
push
mov
jnp
test
fimull
jl
popa
or
sub
das
rcr
add
fstl
mov
cmp
fs
jmp
lds
sbbl
movsl
rcll
je
or
add
pushl
mov
add
xchg
mov
test
xor
inc
and
jmp
xchg
sub
add
xchg
adc
rcll
insl
xchg
xor
leave
mov
jecxz
inc
adc
loop
xchg
fmuls
pop
dec
add
inc
push
jae
xchg
sbb
popf
mov
push
das
loop
fwait
dec
inc
mov
and
testl
pushf
scas
shl
lret
mov
in
or
mov
mov
fldcw
push
push
ja
jno
arpl
int3
cli
lahf
lods
add
hlt
test
pushf
int3
xchg
cmc
cmp
push
adc
xchg
sbbl
pop
hlt
xchg
xchg
aam
jae
jg
push
pop
ds
jo
scas
popf
xchg
icebp
dec
repz
mov
ret
packsswb
rcr
mov
loope
cmpl
pop
stos
push
lahf
jo
pop
fsubs
push
sarb
mov
sub
mov
or
xchg
mov
mov
and
es
movsb
push
xor
add
inc
dec
dec
out
sbb
cmp
xor
mov
cli
in
fcoml
mov
mov
mov
jbe
adc
pop
pop
fsts
es
mov
in
push
jmp
adc
jp
xor
push
sub
mov
outsl
jno
push
scas
cs
mov
call
lret
pop
push
cwtl
push
xor
push
lock
adc
and
std
xchg
mov
push
cli
into
adc
test
lds
or
cs
clc
shll
gs
ds
insl
xor
lahf
pop
fsincos
xor
dec
es
pop
push
adc
test
sub
adc
dec
sahf
pusha
xchg
mov
inc
into
sub
adcb
insb
negl
test
cmp
mov
xor
test
fisubrl
mov
mov
mov
adcl
and
gs
mov
cmpb
push
stos
lods
nop
add
test
outsl
xor
fiadds
xor
push
imul
mov
dec
imul
or
arpl
scas
add
rcrb
aad
cmp
lock
lea
andl
test
sbb
xchg
push
arpl
nop
and
sub
adcl
sbb
mov
sub
outsb
jnp
leave
mov
lret
mov
fldcw
and
jo
in
iret
mov
and
jg
lahf
imull
jnp
es
push
xlat
hlt
push
xor
xorb
cmp
cmp
out
dec
sbb
loopne
std
xchg
decb
in
lock
mov
dec
jmp
dec
pop
jecxz
jg
or
icebp
mov
xchg
mov
dec
push
xor
retw
jg
ja
in
mov
imul
cmpsl
inc
pushl
adc
jmp
stc
jmp
push
mov
pusha
arpl
subb
loopne
hlt
adc
sub
pusha
mov
pusha
lret
movsl
hlt
push
in
femms
fcoml
iret
push
adc
dec
cld
out
scas
pop
jae
movsl
test
andl
dec
fs
js
pop
and
xchg
mov
adc
out
lea
pop
sub
mov
jo
inc
pop
push
mulb
popf
xor
aad
ljmp
cmp
inc
dec
cmpsl
cmp
dec
xor
repnz
dec
ljmp
jmp
popf
add
mov
xchg
icebp
mov
cmp
in
pop
push
pushf
out
jns
jecxz
fidivl
es
or
mov
xchg
fistps
js
push
xchg
push
adc
cmp
test
test
mov
fsubs
ja
mov
stc
and
test
sbb
sub
nop
addr16
jbe
out
xchg
ret
add
sti
lcall
les
fisttpl
dec
push
std
subb
data16
and
add
and
cmp
fs
cli
and
xor
push
stos
xchg
out
push
addr16
mov
xchg
fdiv
rcl
rcrl
cmp
push
addr16
shll
mov
das
mov
fcomps
out
xor
rclb
pop
dec
or
add
inc
cltd
cmp
push
imul
movsl
dec
cli
scas
push
xchg
pop
inc
fsubl
mov
int3
xor
mov
mov
cli
aad
hlt
add
cmp
movsb
out
fwait
mov
push
mov
jo
push
jge
in
popf
and
movsb
mov
rcrl
mov
mov
push
lods
dec
inc
dec
stc
cmp
out
std
je
xor
sbb
xor
repz
jbe
mov
jns
outsb
scas
clc
jmp
pop
push
arpl
nop
and
xchg
or
dec
push
test
mov
xchg
adc
jp
mov
push
imul
or
ret
testl
movsb
mov
movsl
sahf
clc
mov
mov
push
mov
subb
mov
ja
jo
inc
aad
cmpsl
stos
push
pop
ds
leave
sbb
jmp
mov
insb
push
cli
stos
xor
pop
pop
push
fs
cmpsb
into
inc
cli
xchg
push
mov
pop
mov
sti
mov
les
add
movsb
idiv
aam
xor
mov
mov
stos
xchg
ja
out
lea
mov
pop
mov
mov
xor
loopne
hlt
and
pop
ljmp
xor
sahf
repnz
jle
es
dec
fs
xor
sti
cwtl
test
push
ret
and
gs
stos
mov
sub
cmc
xchg
pop
int
in
xchg
fcmovbe
sub
jge
dec
int
clc
pop
jmp
adc
mov
xchg
mov
addl
inc
jbe
aam
adcl
push
sahf
test
sbb
out
adc
mov
adc
cmpps
sub
xchg
add
jge
dec
mov
out
push
sbb
iret
sysexit
add
addb
push
xor
lds
mov
and
in
into
pop
out
lds
dec
and
into
shlb
lcall
adc
ss
inc
mov
jae
incl
lret
sbb
nop
and
orb
adc
mov
dec
push
cmp
sbb
in
fistps
pop
loop
pop
aad
pop
cmp
cmp
fs
jl
xlat
outsl
jecxz
shl
pop
xchg
adc
xchg
mov
fsubrl
sbb
arpl
sub
xchg
inc
fiaddl
call
subb
int3
sub
mov
xchg
clc
push
adc
xor
jno
ret
mov
and
and
xlat
ss
fdivl
sbb
pop
push
sub
mov
in
adc
mov
mov
xchg
jne
lret
jno
clc
mov
cltd
adc
mov
jp
pop
repnz
js,pt
icebp
cmp
jecxz
icebp
test
mov
xor
or
aam
sbb
ds
aaa
cmpsb
jnp
pop
es
inc
les
outsl
pusha
add
sahf
notb
jbe
and
dec
ss
jbe
jo
lahf
xchg
push
lret
mov
outsl
arpl
out
jmp
xchg
sahf
insb
push
cmpsl
fldt
outsl
shrl
mov
loopne
push
je
ss
inc
gs
push
jns
bound
or
fldt
xor
cmpsl
enter
in
adc
inc
pushf
minps
hlt
push
inc
push
push
cmp
jbe
mov
cmpsl
xchg
sbb
clc
xor
fwait
aaa
sub
add
push
dec
ljmp
mov
es
std
mov
mov
xchg
and
clc
sub
outsb
mov
add
fildl
je
fnsave
push
hlt
push
jmp
sub
add
adc
fwait
mov
sbb
lods
mov
gs
sub
jmp
sub
out
and
movsb
add
xlat
and
lret
popa
js
cmp
fimuls
std
pop
stos
cvtps2pd
sbb
inc
inc
sbb
imul
mov
std
inc
out
lock
leave
adc
cmp
into
sbb
aaa
adc
or
sub
je
movsl
iret
cmp
cmpsl
pusha
iret
adc
mov
xchg
push
ja
dec
mov
jmp
faddl
popf
hlt
push
fdivrp
fsubs
add
int3
dec
push
add
jb
sbb
jp
xor
ja
cli
cmp
inc
sbb
sbb
ficoml
inc
mov
cmp
daa
and
movsl
mov
and
mov
cmp
fadds
dec
jp
mov
scas
push
push
aam
and
mov
fisttps
pushf
mov
lret
rclb
cwtl
add
mov
gs
jl
hlt
push
shrl
mov
and
mov
ljmp
xchg
orl
inc
outsl
xchg
aam
or
daa
rclb
aaa
jle
filds
out
fiaddl
repnz
divl
in
popa
mov
bound
dec
jno
jns
mov
mov
addr16
or
sub
fsubrl
adc
mov
mov
cmp
insb
nop
add
cmpsb
jbe
ja
jmp
cmp
and
jbe
clc
lods
insl
out
jecxz
push
inc
mov
stos
pop
mov
outsb
or
xchg
outsl
or
imul
loop
int3
test
mov
add
rorl
jb
jnp
mov
add
push
pop
test
jle
xor
jmp
xchg
or
or
scas
xor
lret
ja
mov
push
cmc
mov
les
pop
mov
adc
push
dec
sub
test
xchg
mov
dec
xor
pop
add
aad
push
mov
gs
inc
aam
pop
les
jmp
lock
push
nop
test
rcrl
add
gs
or
in
mov
sbb
mov
add
mov
inc
mov
mov
iret
aaa
ffree
mov
dec
stc
mov
aas
ret
enter
jns
leave
mov
int
pop
lahf
icebp
sbb
call
xchg
shll
outsl
adc
and
mov
repnz
roll
sti
adc
loope
fnstcw
ss
mov
repnz
pushf
and
jns
mov
pushf
sub
xchg
test
les
inc
mov
mull
movsl
mov
inc
repz
popf
push
rcr
adc
mov
xlat
xor
mov
mov
popf
mov
push
mov
popa
jecxz
jnp
lea
adc
jle
mov
pop
sub
fldcw
in
jmp
hlt
inc
jp
aas
jg
push
jl
ret
mov
nop
ficompl
jnp
lea
ret
mov
cmp
in
mov
mov
sbb
xchg
arpl
push
popf
mov
mov
dec
add
dec
xchg
xchg
popa
lret
shll
cmp
mov
push
pop
mov
jp
stos
xchg
lret
add
jge
pop
pushf
dec
add
insb
pushf
cmp
test
dec
subl
incb
xchg
or
jp
xchg
or
mov
cld
jae
pop
lret
outsb
mov
inc
mov
dec
in
fidivrs
pop
rcll
ljmp
jle,pt
in
jbe
mov
sbb
jne
fldt
xchg
out
sub
cmp
lds
loop
lcall
mov
xor
jge
loope
mov
leave
mov
js
xchg
add
outsl
push
and
xchg
fstpl
mov
int3
mov
fucom
bound
jl
lock
dec
sub
inc
mov
into
aaa
push
es
pop
popa
cmpb
lods
data16
not
insb
fsubl
pushf
xor
push
cwtl
mov
xor
call
xchg
bound
jae
pop
cltd
das
adcb
mov
fidivrl
xor
mov
jb
xsaveopt
and
xchg
mov
outsb
sbb
int3
aaa
mov
adc
es
push
pusha
cld
repz
push
inc
and
aas
inc
sub
sahf
xorl
fdivrl
cmp
in
loope
inc
xchg
xchg
repnz
push
push
in
iret
mov
pop
test
adc
fcompl
sbb
push
jge
outsl
sub
ret
aaa
adc
aad
movsl
and
jns
jp
dec
inc
aas
stc
lahf
add
sbb
adc
fs
cmp
repz
gs
pop
or
xchg
mov
or
xor
sub
lock
jg
pop
sahf
add
add
cmp
into
adc
pusha
iret
int
pop
inc
mov
stc
stos
leave
in
in
cwtl
scas
sar
or
sub
ss
push
dec
lds
out
jg
nop
pop
sbb
and
jp
xchg
mov
dec
orl
fsubrl
sub
std
sti
mov
addb
xor
fwait
push
push
sarl
test
adc
sbb
sbb
testb
add
add
aaa
mov
stc
aas
nop
mov
jnp
cmc
call
xchg
jns
xor
negl
lret
jle
aad
aaa
je
call
iret
pop
push
popa
jnp
xlat
add
shrd
ja
enter
mov
add
jp
rclb
imul
int
stos
in
mov
lahf
bound
jb
push
leave
ss
lcall
lock
aad
lret
mov
arpl
and
loop
cmp
fsub
dec
mov
mov
pop
xchg
pop
prefetch
or
je
test
stos
imull
into
sub
push
movsl
add
lods
shlb
ja
sbb
mov
aad
cmp
ss
mov
lahf
push
cs
stos
shll
jno
std
push
in
popa
aam
lret
and
sbb
gs
sub
addr16
jbe
and
push
pop
popf
addb
or
xchg
stc
push
mov
fcomps
cmp
mov
adc
aaa
movsl
les
loop
jo
sub
fisubrl
mov
fisubl
xor
cltd
gs
out
popl
cmc
scas
pop
mov
lock
and
pop
push
adc
xor
xor
sbb
outsb
in
mov
dec
xor
push
mov
stos
outsb
or
jae
fiaddl
pusha
add
rcrl
xor
cltd
enter
xchg
mov
jecxz
rorl
xchg
aaa
cld
mov
sub
xor
pop
roll
ljmp
jle
fwait
dec
imul
push
dec
pop
lret
imul
jo
int
mov
push
cmova
mov
test
outsb
scas
out
out
sbb
mov
ljmp
ficomps
inc
in
out
sbb
mov
xchg
xor
and
movsb
sub
rcr
xor
xor
adc
xchg
jno
or
in
fcom
fcmovb
sbb
jb
outsl
jbe
fucomp
jmp
fucom
xor
add
lcall
inc
lret
fwait
add
push
xor
pop
scas
test
xchg
sbb
cmp
orl
sub
or
mov
test
not
cmp
mov
push
and
adc
and
iret
in
push
mov
lret
lret
aaa
mov
xor
fsubl
sub
dec
int3
std
cld
int
hlt
and
std
dec
ret
xchg
leave
mov
inc
mov
stos
fs
mov
iret
loopne
stc
popf
xor
arpl
lea
cmp
sub
cmpb
inc
pusha
add
je
xchg
adc
repnz
out
push
or
sub
inc
push
pop
mov
lcall
and
xor
shrl
xor
lods
pop
outsl
ja
push
adc
or
out
sub
out
insl
arpl
cmp
and
push
clc
sub
xchg
scas
dec
ljmp
int
sub
push
jne
cmpl
scas
or
ss
sbb
mov
imul
adc
repz
cwtl
mov
addb
pop
or
shll
fs
leave
sub
jns
cmp
adc
or
std
fsubs
inc
les
xlat
push
ljmp
inc
xor
orl
mov
lahf
cmp
inc
push
mov
addr16
add
and
cld
dec
pop
fisubs
jecxz
in
mov
push
int3
cld
jl
inc
pop
call
jg
push
out
bound
jne
and
ja
mov
adc
enter
add
iret
nop
inc
sbb
divl
mov
movb
addb
or
mov
adc
sub
mov
in
pop
ljmp
add
cmpl
addr16
jnp,pt
add
sbb
push
sub
mov
les
xor
les
and
rcr
sub
cli
pushf
vpaddsw
xor
jg
mov
push
or
mov
pusha
inc
cmp
xchg
std
xchg
fsubp
and
xchg
std
xchg
jmp
cmp
xchg
xor
jne
mov
mov
push
pop
shrl
sbb
jp
add
mov
sbb
pushl
adc
mov
lea
pop
pop
rcrb
hlt
and
div
arpl
fucomp
test
cli
inc
sbb
push
mov
mov
pop
sahf
mov
repz
or
pop
lock
mov
imul
xchg
or
fchs
xchg
stc
addr16
and
inc
fisubs
ret
dec
push
adc
push
les
cmpsl
movsb
pop
mov
push
push
pop
insl
mov
push
lahf
cmpsl
lret
test
adc
popa
jo
xchg
roll
pop
xchg
mov
jae
xchg
push
aaa
pop
jecxz
lods
popa
sub
add
iret
mov
leave
mov
xor
push
cmp
xor
push
xchg
mov
stos
cmc
loope
push
jno
pushf
xchg
ret
sbb
cltd
sub
push
cmovns
cmpsl
jo
shlb
stos
outsb
and
dec
test
xor
xor
sub
and
or
or
cmp
repz
test
pop
gs
and
movsb
mov
dec
mov
ret
sbb
aaa
imul
xor
adc
push
push
rcrb
xchg
jb
dec
mov
shrl
jo
adc
add
jl
add
stos
pop
nop
test
xchg
clc
cli
and
testb
in
sub
or
or
jo
clc
fs
scas
clc
ret
fistps
bound
cmp
mov
mov
sbb
test
xchg
push
cltd
shrb
xor
leave
popa
adc
adc
cmp
insl
inc
mov
pop
dec
xchg
push
xor
shll
push
inc
and
pusha
outsl
aaa
in
push
inc
jo
cld
icebp
mov
pop
jne
sti
jno
repnz
sbb
out
push
adc
sbb
orb
inc
xchg
push
sub
push
push
imul
xor
repnz
jbe
popf
test
adc
sbb
movsl
jae
ds
pushf
xor
scas
je
scas
aas
repz
cmpsl
popf
out
adc
pop
iret
adc
lods
mov
jno
jge
out
or
movsb
jns
jl
sahf
mov
adc
rcr
inc
in
cmp
pop
mov
ds
cmp
repz
mov
push
aaa
or
incl
lock
push
pushf
imul
or
adc
sub
iret
inc
jo
cs
cs
iret
subl
clc
push
mov
lock
mov
sub
jmp
jg
daa
fisubs
add
inc
cld
fsubp
pop
mov
mov
mov
xchg
cli
adc
mov
mov
mov
or
cltd
popf
nop
fsubl
std
dec
fistps
pop
enter
mov
movsl
sti
mov
imul
adc
repz
mov
xchg
add
mov
xor
or
and
stc
mov
push
mov
in
icebp
push
xchg
inc
jbe
stos
jle
inc
gs
mov
adc
cmpsl
das
xchg
inc
ljmp
mov
or
pusha
adc
ljmp
fs
ret
inc
add
sbb
jle
popf
mov
imul
stc
mov
cmp
mov
out
mov
lea
inc
jp
sub
push
int3
and
sub
shl
dec
lock
sbb
add
pop
xchg
loop,pn
pop
std
lahf
jo
test
and
cli
push
push
in
inc
mov
mov
sub
and
push
shr
xor
lock
notb
jb
mov
xchg
xchg
dec
inc
daa
mov
sub
xchg
inc
cld
popf
ja
add
jge
cmpsl
mov
push
sub
inc
add
add
jns
add
inc
pop
out
mov
jecxz
mov
dec
and
jo
mov
insl
pop
add
jno
pop
movsl
arpl
cmc
and
and
xchg
and
mov
arpl
rorb
and
lahf
push
aaa
sub
nop
outsb
inc
sub
mov
add
insl
les
dec
data16
mov
jge
nop
cmc
mov
push
cmp
test
pushf
mov
inc
subb
outsl
aaa
or
aad
mov
push
iret
test
popa
das
inc
roll
cld
mov
arpl
iret
sub
xor
inc
adc
mov
hlt
inc
xorb
jb
scas
sarb
jmp
jmp
push
insb
test
mov
dec
insl
ficomps
inc
enter
aam
mov
mov
sub
or
mov
pop
aad
push
int3
push
cltd
push
or
insl
mov
or
inc
lds
dec
test
jp
out
test
and
pop
outsb
stos
mov
cmpsb
stc
or
push
idiv
ret
cltd
aam
in
push
push
daa
popf
cltd
mov
mov
mov
pop
and
adc
xor
lods
and
inc
mov
push
push
lods
fs
cmp
add
shlb
sbb
jecxz
cmp
lret
or
bound
push
push
xlat
adc
popa
out
jbe
inc
fcmovnb
in
fstps
adc
int
dec
icebp
mov
pop
push
pop
pop
jo
out
je
shrb
int
or
mov
inc
ja
xor
xchg
mov
jle
pop
cld
push
sbb
add
inc
cwtl
outsl
jmp
lret
sbb
inc
jb
les
adc
jmp
loopne
jnp
mov
insl
les
mov
iret
fcom
idivb
bound
cmp
ds
scas
dec
test
outsb
int
icebp
jae
mov
mov
in
jb
notb
jge
fbstp
ljmp
sub
inc
mov
sub
adc
push
xchg
repz
xor
fsubrp
jle
inc
sbb
test
jnp
pop
sub
push
test
mov
add
xchg
mov
stc
and
cwtl
pop
sub
push
stos
stos
push
nop
mov
into
sahf
sbb
out
xor
fisttpl
jp
loop
dec
dec
inc
addr16
pop
mov
pushf
cwtl
and
lods
jle
add
fwait
xchg
or
into
cld
push
out
mov
xor
fildl
scas
pushf
adc
push
or
push
push
stos
sarl
ljmp
adc
iret
fs
jne
mov
dec
hlt
mov
sub
std
dec
and
cmp
sbb
ret
daa
jmp
repz
xlat
xchg
lcall
jo
push
xor
jbe
xlat
inc
lock
or
mov
xchg
ror
mov
outsb
lret
mov
xchg
jg
or
pop
movsb
leave
pop
cli
in
cld
cltd
negl
sub
cmp
flds
jb
jl
jbe
add
fstl
xor
mov
mov
mov
lods
out
ds
mov
lea
ds
loopne
push
mov
sub
xchg
mov
inc
ret
in
jp
sbb
loopne
mov
cmp
pop
gs
lock
stc
cmp
dec
sbb
lret
fstpl
outsl
push
lret
sbb
out
lds
imul
cmp
sub
cli
repnz
mov
add
and
jns
shlb
inc
hlt
cmc
aaa
int
push
jne
movsl
je
adc
cwtl
sbb
push
imul
in
jae
xchg
mov
rorl
enter
mov
sub
push
mov
sub
sbb
and
cmp
jbe
mov
xchg
gs
test
cmpsl
in
lea
xor
cmc
push
into
dec
xchg
movsb
xchg
mov
call
ss
inc
jns
iret
push
xor
jge
xchg
aam
imul
movsl
stos
jg
mov
mov
shl
xor
dec
mov
in
and
cmp
imul
mov
outsl
push
lea
int3
clc
test
xchg
xlat
mov
inc
inc
adc
cmp
mov
lcall
push
mov
imul
jns
mov
stc
pop
test
popf
cmpsl
imul
mov
jg
jg
pop
out
int3
popf
push
lds
jno
xchg
mov
pop
cmpl
insl
test
mov
xchg
out
cmp
push
jno
and
in
sbb
enter
xchg
mov
push
movb
dec
movsl
hlt
sti
dec
inc
jo
call
ja
add
pop
add
mov
push
xor
fsubs
cmp
lret
in
sahf
mov
xchg
lcall
xor
mov
jmp
imul
movsb
outsl
decl
and
pushf
jge
shlb
cmp
call
scas
imul
ficoml
jo
xor
jecxz
mov
adcb
lcall
or
ret
in
jg
push
and
mov
xor
in
add
lret
xchg
mov
mov
out
insl
mov
push
jg
imul
ss
inc
xor
sub
dec
xor
je
cmpsb
nop
xchg
fistpl
push
xor
lock
out
jns
push
cmpsb
dec
and
jg
pop
cltd
movsl
add
out
xchg
and
push
lret
imul
popf
and
ss
in
sbb
pop
or
xor
mov
in
fwait
insl
cmp
xchg
push
sub
pop
xchg
pushf
pushf
das
jg
cltd
and
aaa
xor
es
lods
or
mov
mov
out
mov
scas
and
ret
test
push
lds
nop
push
int
fisttps
lret
xor
adc
mov
icebp
mov
push
push
xlat
mov
repnz
dec
jnp
daa
and
rcll
imul
test
pusha
ds
push
jecxz
ror
mov
outsl
or
sub
aas
loope
not
pop
jo
xorb
repnz
shrl
mov
add
push
inc
cmp
mov
add
sti
dec
pop
xor
lods
shlb
popa
aam
push
insb
movsl
repnz
fisttps
and
dec
cmp
sti
add
ja
lret
add
xchg
push
pop
repz
sub
loop
xchg
or
addb
mov
xchg
das
std
les
cmpsl
mov
adc
mov
add
and
repz
push
movb
adc
dec
in
cltd
adc
add
test
movsb
or
xor
xchg
mov
cmp
and
mov
mov
outsb
push
lock
mov
mov
stos
notl
mov
or
inc
loopne
ret
testl
ret
mov
enter
mov
push
push
movsl
mov
test
scas
or
push
aam
sbb
mov
adcb
sarb
enter
pop
movsb
sub
scas
inc
into
into
xor
sub
or
add
inc
sub
xor
sub
pop
stos
and
outsl
push
jo
mov
test
mov
xacquire
mov
mov
add
xchg
mov
clc
fisubrs
repz
fiadds
imul
inc
jnp
jnp
lea
imul
and
cmc
iret
imul
popa
xchg
mov
shrb
test
inc
enter
iret
push
insb
mov
lret
sub
sub
popf
push
mov
in
fiaddl
inc
add
fwait
fwait
xor
inc
push
mov
ja
push
ficoml
fisttpl
jbe
fsubs
mov
lret
js
out
mov
xor
rcl
test
das
inc
fcoml
dec
mov
push
out
or
sbb
jns
insb
push
dec
pop
mov
faddl
int
or
negb
enter
pop
xor
sbb
xlat
icebp
mov
cli
adc
js
loop
mov
cmp
dec
add
test
test
xorb
sbb
sbb
dec
push
insl
inc
mov
or
jge
cld
in
jnp
xchg
jmp
xor
test
cwtl
andb
fwait
mov
pop
mov
mov
in
mov
sbb
idiv
and
add
lret
out
mov
mov
inc
mov
jo
cltd
jmp
scas
inc
out
jle
and
xor
push
mov
xlat
add
fists
ret
dec
dec
ret
mov
test
push
inc
push
jecxz
pop
js
lret
jp
scas
orb
xor
cli
adc
popa
push
scas
adc
scas
icebp
lods
jge
jmp
fmull
jmp
cmpb
int
test
out
testl
rorl
loop
pop
lcall
out
sti
push
push
push
push
push
hlt
pop
adc
inc
dec
out
out
push
stos
lcall
dec
cmp
xchg
push
xor
inc
mov
sbb
and
push
loop
adc
mov
rorb
cs
daa
es
and
popf
maxps
mov
push
and
test
pop
xor
das
aam
fsubl
jo
push
stos
mov
out
test
std
push
testl
mov
std
cmpsl
mov
xlat
xchg
pop
push
jle
mov
pushf
inc
stc
pop
fisttpll
lds
xchg
push
cmp
inc
sti
aaa
pop
xor
mov
cmp
sahf
add
cmp
jl
lret
test
andb
xchg
dec
inc
js
lea
xchg
mov
xor
fcoml
push
imul
stc
push
dec
ljmp
sbb
lcall
jnp
xchg
mov
sbb
xor
mov
stc
cmpsl
xor
cltd
addr16
push
imul
cmc
test
add
sbb
loopne
imul
fwait
cwtl
inc
out
sub
push
sbb
sub
push
pop
and
call
jge
dec
pushf
shll
jl
dec
repz
inc
ret
cltd
pushf
mov
sbb
cs
xor
or
sbb
idivb
adc
inc
xor
dec
cmp
and
cmp
lcall
sub
push
jp
adc
jle
xlat
sti
pop
push
xchg
xchg
fcoml
and
rcrb
or
mov
stc
adc
into
mov
xchg
outsb
add
pop
ja
xor
dec
stos
cwtl
orl
test
adcb
sub
out
dec
leave
call
pop
cmpsb
mulb
mov
push
add
sub
inc
sbb
scas
push
lds
lea
inc
dec
test
lahf
xchg
cld
xor
sbb
jl
push
lcall
push
jo,pt
cltd
or
pop
push
jb
push
xchg
stc
add
jb
test
ret
cmp
inc
decl
and
call
inc
jle
in
mov
mov
dec
pop
js
mov
and
fstps
dec
int3
rcrl
jbe
mov
xchg
sbb
jae
pop
inc
aad
sub
sbb
push
fldcw
inc
movsb
pop
jbe
xchg
xchg
sbb
cmc
rcrl
push
pcmpgtd
ljmp
lds
hlt
in
mov
mov
loope
arpl
xchg
lret
scas
xor
add
aam
pushl
lods
lahf
adc
xchg
or
pop
push
jmp
add
pop
add
xor
stos
inc
std
xor
in
fsub
inc
js
cmp
add
inc
pop
sub
jbe
jo
inc
jg
loope
mov
cmp
je
sbb
iret
dec
cld
jle
and
push
mov
out
push
pop
in
in
fstpl
in
out
xor
add
leave
sbb
sbb
data16
inc
lahf
mov
std
push
cmovs
int
push
inc
cmp
jae
push
test
andl
push
jbe
sahf
bound
fisttps
inc
or
jo
mov
scas
jne
enter
pop
adc
std
movw
shll
xchg
je
mov
andl
scas
or
xchg
mov
lods
arpl
je
push
sar
sbb
dec
jns
mov
adc
sbb
movsb
and
and
pop
mov
xchg
das
sbb
mov
jbe
lods
push
popf
push
jecxz
adc
pop
adc
push
sbb
inc
sub
pop
in
mov
std
outsb
das
sbb
scas
scas
jbe
push
sbb
loop
jle
ljmp
xchg
xor
mov
mov
push
push
ss
stos
fisttpll
xchg
mov
push
cmp
cmpsl
lahf
pop
call
ret
pop
scas
jbe
cmp
roll
pop
call
mov
arpl
test
push
inc
and
iret
lcall
cli
xorl
xchg
pushl
enter
jl
mov
push
ds
cmp
pop
pop
xchg
clc
sub
lock
test
mov
and
out
bound
cmpsl
mov
aam
inc
repz
dec
out
and
jnp
xchg
pusha
sbb
lock
mov
inc
mov
leave
sarb
out
sub
mov
imul
jge
or
lret
pop
mov
ljmp
sbb
orb
mov
adcb
xchg
repnz
cmp
lret
or
or
inc
jge
mov
out
add
jae
lods
outsl
jp
fucomp
pop
call
push
dec
out
dec
push
jmp
aad
jp
ds
cmp
push
or
lahf
mulb
cld
or
scas
into
dec
push
or
aam
adc
ljmp
outsl
bound
dec
xchg
lcall
ljmp
or
xchg
mov
or
inc
movsl
enter
repz
pushl
jno
inc
popf
je
sarl
shrb
pusha
jg
outsl
mov
dec
loopne
aad
aad
sbb
test
cs
testl
inc
dec
nop
push
enter
fcomi
jno
inc
push
or
sti
mov
push
jmp
xchg
or
dec
cmpsb
push
mov
jnp
xlat
xor
dec
gs
cld
lods
mov
enter
test
inc
test
ficomps
iret
fdivl
push
ret
cs
push
mov
lock
movsb
sbb
mov
pop
lods
push
pop
rcrl
std
mov
mov
jnp
jp
es
and
loop
arpl
jle
or
stos
jbe
cmp
enter
push
in
je
xchg
add
xchg
mov
cmpsb
xlat
and
mov
in
xor
push
js
test
adc
xchg
aas
inc
addl
dec
fsubrl
jnp
cmp
cs
fwait
or
push
sbb
add
xchg
inc
sub
sbbb
cld
add
fnsave
mov
and
dec
out
test
dec
jnp
add
push
test
in
je
imull
out
daa
incb
aas
addr16
inc
mov
or
mov
in
xchg
mov
mov
sbb
scas
sti
jle
in
aas
mov
test
push
jns
add
popf
jbe
mov
fucomi
aas
xchg
sbb
imull
adc
insb
fwait
into
sbb
and
ss
mov
mov
test
cld
out
out
fs
andb
fwait
mov
pushw
adc
popf
pop
std
cmp
xchg
inc
mov
imul
std
or
stos
sarl
fwait
xor
imul
insb
add
sarb
hlt
jge
popa
adc
adc
shrl
push
iret
adc
negb
add
pushf
sbb
or
aaa
gs
leave
mov
cmp
cli
leave
mov
inc
pop
mov
inc
mov
imul
mov
pop
adc
daa
mov
cmp
andb
movsb
fimull
mov
sub
out
xchg
inc
mov
adc
mov
xor
cmpl
test
mov
sub
ljmp
mov
xchg
movsb
mov
or
fisttps
rcr
ret
call
ret
rorl
push
movb
sbb
adc
es
lret
pop
scas
jle
push
push
rep
xchg
mov
mov
fstpl
add
scas
add
or
adc
adc
adc
data16
fwait
imulb
lods
out
scas
sub
mov
lcall
jno
scas
fidivrs
adc
into
inc
pop
and
lahf
jno
jae
sbb
dec
test
add
fdivrs
cmp
pusha
push
mov
sub
sub
or
pop
or
lret
test
xor
imulb
dec
imulb
lahf
mov
sti
add
xchg
not
cli
pop
dec
add
inc
mov
clc
std
inc
out
call
add
aad
jmp
jbe
movsb
pop
mov
fs
stos
inc
add
cli
push
imul
jnp
fldt
sti
sbb
out
ss
test
not
cli
push
dec
push
pop
inc
mov
lock
inc
out
call
push
pop
aad
lret
in
jbe
cmpsb
pop
xor
add
cli
push
push
fistpll
shrl
sti
add
xchg
not
cli
pop
dec
add
inc
mov
clc
std
inc
out
call
add
aad
jmp
jbe
movsb
pop
mov
fs
stos
inc
add
cli
push
imul
jnp
fldt
sti
sbb
out
ss
test
clc
sarb
inc
mov
mov
mov
sbb
push
aad
lret
lods
jbe
cmpsb
pop
xor
inc
push
cmp
lret
mov
jnp
sarl
testl
jbe
mov
inc
mov
mov
cmp
sbb
aad
jmp
jbe
movsb
pop
mov
mov
mov
lret
or
xchg
adc
scas
ss
mov
inc
mov
mov
mov
sbb
push
aad
lret
lods
jbe
cmpsb
pop
xor
inc
push
cmp
lret
mov
jnp
sarl
testl
jbe
mov
inc
mov
mov
cmp
sbb
aad
jmp
jbe
movsb
pop
mov
mov
mov
lret
or
xchg
adc
scas
ss
.byte
.byte
.byte
