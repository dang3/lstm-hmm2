dec
cltd
pop
popf
push
mov
cwtl
popa
icebp
add
mov
pushf
aas
sbb
cmpsl
jnp
inc
inc
and
movzbl
cmp
add
lock
cmp
sbb
repz
stos
mov
in
mov
push
loop
pop
insb
shr
pop
rcll
jae
das
mov
gs
notb
and
adc
sti
cmp
push
sbb
xchg
test
push
xchg
ds
popf
jno
jb
stos
cmp
clc
addr16
xlat
mov
mov
dec
add
jge
or
loop
and
stos
cmpsl
out
mov
inc
aad
int3
ret
jp
xchg
cltd
push
pop
into
daa
inc
add
sbb
les
repnz
push
jns
int
dec
les
stc
pop
aam
and
or
push
dec
mov
or
punpckhbw
ljmp
arpl
push
cmc
pop
test
sahf
xchg
outsb
add
adc
jle
hlt
jle
iret
adc
mov
xor
xor
adc
sbb
xchg
xchg
jb
or
dec
or
jg
xlat
pop
mov
push
fs
das
dec
outsl
in
shl
mov
dec
xchg
out
jmp
lret
mov
ret
add
daa
test
mov
rolb
cmp
iret
dec
bound
adc
adc
je
in
xchg
ja
xchg
lret
cld
xor
xlat
xlat
sbb
cmpsb
test
jge
jnp
bound
cmpsb
stos
iret
setl
fnstenv
cli
xchg
cmp
or
jo
incb
sbb
shrb
aaa
fsubrl
test
cmp
idiv
jbe
xorl
xchg
jl
lret
xor
inc
xchg
push
xchg
jo
lods
lahf
insb
xadd
xchg
push
push
js
mov
das
pop
xchg
imul
cld
adc
push
dec
pop
inc
fs
insl
repz
shlb
jae
or
pop
xor
xor
shr
mov
push
mov
cmc
add
sub
push
outsl
push
dec
mov
mov
adc
or
scas
ja
xchg
dec
pushf
pusha
or
inc
fildll
fadd
mov
pop
push
adc
xchg
inc
test
push
aas
push
dec
sub
sahf
and
cld
ljmp
in
out
push
lds
pop
mov
mov
sub
int
ret
and
repz
mov
dec
xchg
jge
loopne
ja
mov
sti
cmp
gs
cmpl
dec
push
mov
and
mov
add
pushf
sarb
bound
scas
dec
test
inc
std
fcmove
clts
sbb
scas
outsb
gs
and
testb
xchg
mov
mov
dec
inc
fsubrp
or
mov
push
jns
push
jp
adc
sub
jbe
dec
insl
jp
ret
xchg
or
xchg
in
data16
mov
lock
rorl
std
lcall
sti
dec
gs
adc
mov
in
cld
rcll
movsl
in
xchg
mov
enter
cmp
mov
insb
mov
lock
jns
ljmp
jl
int3
adc
sbb
fistps
lock
or
and
clc
adc
pop
test
or
bound
dec
test
imul
loop
dec
ret
inc
mov
ficoms
js
lods
pop
sbb
mov
ret
in
xchg
ficompl
lea
inc
xchg
iret
mov
nop
repz
std
push
mov
roll
xchg
sbb
jl
orb
ljmp
fstp
sub
test
pop
cmc
mov
sbb
movlps
pop
lcall
jle
push
das
sbb
or
sub
sub
ss
or
xor
sarl
out
pop
pop
das
or
dec
jnp
sub
xchg
mov
je
loopne
pop
ss
hlt
sti
mov
cmpsl
cmp
pop
test
stc
arpl
dec
fidivrs
add
xlat
xchg
jnp
mov
sbb
dec
nop
xor
and
adc
adc
nop
pop
stos
mov
jmp
aaa
fidivl
jge
insl
pop
dec
fists
iret
push
std
loope
lret
dec
arpl
fdivl
mov
mov
lods
or
inc
fprem
test
movsb
test
in
pop
or
int
push
sbb
aad
shll
mov
fs
adc
mov
xorb
add
iret
repnz
arpl
les
ja
pop
aad
addr16
push
lods
or
lods
int
aam
push
pop
incl
inc
push
fdivs
fs
call
mov
es
jno
adc
sti
stos
and
sbb
jbe
sub
pop
test
dec
push
xchg
and
jno
popf
nop
pushf
xchg
xor
int
cmpsl
int3
loope
cmp
test
inc
push
in
add
test
push
push
fistpll
les
mov
sub
in
mov
arpl
jb
lret
or
or
adc
xlat
add
jmp
sahf
jmp
or
jecxz
mov
jae
icebp
in
push
push
icebp
lret
bound
pop
pop
push
pop
sti
xor
add
mov
gs
insb
cmp
jmp
xchg
lcall
aam
push
xor
mov
push
es
popa
lcall
cmpsl
or
sahf
lods
add
dec
test
lahf
jg
movsl
jmp
adc
inc
push
lods
add
cli
cmc
jns
cli
addr16
popa
repnz
push
sub
jmp
repz
mov
cmp
lcall
clc
repnz
sti
pop
cmc
in
shlb
adc
mov
jnp
out
or
in
jg
push
je
ss
dec
daa
dec
mov
push
adc
test
out
mov
add
pop
pop
movsb
fstp
out
arpl
add
inc
sahf
rolb
or
imull
test
inc
fwait
rcr
or
and
cltd
and
fs
and
and
xor
dec
mov
loopne
rcrb
push
iret
jecxz
fsubp
add
dec
pop
mov
rcrl
push
aam
add
and
je
add
imul
scas
int3
aam
cmp
mov
cmp
imul
inc
cltd
sub
movsb
jecxz
loope
xchg
add
mov
xchg
push
xchg
dec
xchg
mov
xor
pop
imul
adc
push
xor
cmp
xor
mul
jae
mov
int3
lock
push
pop
cmpb
lock
push
es
push
mov
jns
repz
jne
fisubl
pop
stos
or
sbb
repnz
xchg
mov
xchg
cltd
xchg
pushf
gs
sbb
popf
xor
adc
bound
cs
jo
test
cmp
mov
xchg
xchg
push
mov
aam
fsubp
push
sub
pop
push
mov
cmc
and
xchg
push
adc
cmpb
popf
mov
mov
dec
lods
aaa
inc
or
loope
aaa
mov
push
outsb
sbb
outsl
outsb
aaa
push
jns
dec
mov
cmp
pop
jmp
cs
ja
test
mov
bound
in
add
das
loopne
push
and
int
dec
addr16
arpl
push
mov
adc
jmp
bound
test
or
jae
or
sti
test
in
push
fst
test
fldcw
dec
sti
lret
jg
pop
aaa
movsl
andb
outsl
inc
das
add
pop
xor
popf
and
outsl
mov
ret
sub
lods
inc
pop
xchg
or
push
pop
pop
xor
loope
sub
pop
sub
ret
out
cmp
push
ret
xor
inc
add
jo
clc
sub
shlb
cmc
in
fisubrl
xor
js
push
xchg
mov
lods
repz
aam
add
ljmp
insb
lds
inc
jp
mov
aad
dec
dec
pop
mov
jne
clc
pop
pop
jl
rcll
ret
cld
adc
cmp
cs
pop
leave
aas
stc
xchg
dec
mov
xlat
out
fmull
aad
cld
adc
or
cmp
lcall
or
fnstcw
cmp
imul
jno
leave
cwtl
packuswb
fcoms
mov
sbb
ja
mov
es
and
mov
cltd
leave
mov
jle
adc
or
mov
mov
add
push
pusha
ss
fnstsw
mov
mov
arpl
add
and
mov
jmp
mov
fistpll
jnp
call
stc
test
ret
sbb
dec
das
and
aaa
mov
loop
stos
sub
loop
aaa
jmp
scas
das
jo
push
sbb
es
mov
mov
sub
xchg
outsl
sub
aas
clc
fsubrs
stc
mov
popf
nop
inc
cmp
push
fimull
or
ss
ds
or
subb
loope
jl
dec
jns
out
rcr
inc
outsb
mov
sub
cmp
jecxz
stc
rcrl
ss
pop
inc
call
adc
ja
test
cmp
insb
mov
ficompl
sub
adc
andb
mov
cmp
fcoms
in
pop
inc
adc
xchg
xchg
das
movhps
push
mov
stc
pop
lahf
jecxz
repnz
inc
xchg
mov
gs
aaa
and
cmovo
loope
fimull
push
mov
addr16
fidivrl
rcrl
xor
leave
sti
mov
fwait
mov
roll
insb
les
and
mov
adc
int3
or
fwait
cwtl
shlb
push
mov
xchg
mov
sub
sbb
pop
loop
fs
rclb
std
push
gs
rcll
je
sbbb
mov
sub
mov
into
hlt
add
in
and
sbb
insb
inc
cmp
pop
inc
les
and
das
ja
push
mov
push
gs
cvtps2pi
loop
insl
dec
aaa
pop
jae
sahf
adc
sti
inc
scas
ss
mov
imul
movsl
in
dec
pushf
cmc
jae
push
rcr
mov
frstor
aaa
jg
xor
mov
cmp
jae
mov
adc
xorl
xor
cmp
aad
nop
cld
cmp
rclb
dec
mov
ret
aaa
mov
mov
popa
sub
ss
or
ljmp
cmp
je
or
ret
jbe
movsl
sub
sbb
std
dec
or
xchg
add
adcl
inc
fnsave
dec
push
fwait
aas
sub
mov
aas
cmpsb
add
adc
lret
or
xchg
iret
mov
iret
jnp
inc
mov
mov
cli
push
mov
cltd
cmp
popa
inc
mov
lods
jo
xchg
push
mov
mov
fs
mov
jecxz
mov
push
int3
mov
jp
imul
push
mov
fsubrp
frstor
xor
sub
js
jecxz
lods
mov
adc
cmc
add
fsub
inc
dec
sbb
push
cmp
sbb
enter
mov
cmp
inc
jo
orl
xchg
mov
and
mov
lds
jae
mov
fs
push
adcb
sarb
mov
jno
inc
push
sub
mov
fs
insb
lahf
xchg
lret
sbb
mov
and
mov
sbb
in
dec
cmpsl
daa
andb
sbb
dec
stc
lret
shlb
mov
and
hlt
xchg
mov
sbb
shlb
test
jecxz
fwait
mov
pop
rorl
and
das
mov
push
fnstcw
mov
pop
mov
adc
xor
les
xor
xchg
push
pop
xor
test
mov
dec
sub
inc
sub
mov
sbb
out
lds
push
stos
jecxz
insb
and
pusha
lret
cmp
cmp
add
es
jns
dec
pop
aas
ret
push
jp
nop
inc
mov
cs
pushf
mov
into
jne
pop
lret
fs
sti
jg
adc
cltd
in
popf
loope
fimull
inc
pop
loope
icebp
ljmp
stc
pop
stc
xchg
aas
movsl
stos
mov
pushf
and
pop
push
je
add
adc
int
stc
mov
push
stos
int
mov
push
arpl
andl
daa
sbb
divl
sub
loope
pop
lock
lcall
adc
inc
lods
or
dec
mov
sarb
mov
mov
mov
or
add
int3
sbb
sahf
out
outsl
data16
inc
mov
or
pop
daa
mov
mov
push
ret
mov
dec
ficoms
mov
repnz
pusha
xchg
lret
jecxz
lods
cmp
test
add
fdivr
adc
mov
iret
pop
jnp
or
mov
pop
icebp
xchg
clc
cltd
add
mov
arpl
jbe
xchg
adc
xchg
push
push
sub
gs
inc
out
jmp
fldt
mov
pop
mov
sub
fimull
or
imul
mov
add
rcll
leave
movsl
shll
leave
add
pop
jl
sub
or
cltd
in
cmp
aaa
mov
fnstcw
cld
jle
jne
sbb
mov
or
jns
ror
jns
xchg
jg
xor
pusha
ds
cmp
iret
sbb
sbb
adc
cmp
scas
mov
fcomps
jmp
or
test
lret
adc
and
lds
xchg
in
pushf
cld
in
scas
adc
push
push
push
mov
arpl
sbb
sbbb
jnp
fs
mov
sbb
scas
leave
mov
or
nop
cmp
aas
int3
ret
stos
jg
dec
inc
xchg
mov
mov
fildl
push
call
scas
cmp
sub
pop
fdivrs
sub
mov
sarb
mov
leave
push
adc
into
push
or
jp
arpl
ret
stos
lahf
pop
notb
mov
cmpsb
pop
xchg
mov
shl
add
dec
test
xor
mov
mov
jo
mov
and
dec
or
mov
push
fdivrs
xor
sub
xor
push
jg
call
addr16
xchg
int3
stc
lahf
inc
inc
and
scas
pushf
loope
sbb
jmp
jmp
stc
aam
loopne
add
pop
jne
in
cmp
pop
lods
sahf
pop
inc
aas
mov
dec
dec
cmpsl
loopne
loope
jno
mov
dec
cmpl
mov
cs
bound
mov
test
insw
rcrl
mov
aaa
sbb
sub
xchg
xor
add
and
fabs
cmp
fwait
pusha
mov
mov
sti
cmp
dec
repz
inc
inc
inc
iret
dec
sub
pop
dec
dec
mov
mov
jge
jb
or
push
push
sub
scas
leave
adc
and
push
shrl
xor
sub
add
xor
jb
lret
les
jae
lret
push
inc
pop
add
ja
sbb
or
cli
ret
pop
lock
rcrb
test
mov
loopne
add
xor
daa
sub
sub
jmp
test
cwtl
outsl
pop
mov
es
cmp
pushw
cwtl
mov
push
addl
test
sbb
das
icebp
iret
cltd
jnp
jle
mov
mov
jecxz
inc
jb
mov
push
add
mov
pop
sub
jbe
push
pop
js
ja
cmp
xor
or
es
pop
xor
cld
sub
int
xor
xchg
icebp
lods
pop
ljmp
jae
pusha
mov
pop
xchg
test
loope
jb
sub
icebp
popf
filds
mov
movsl
imul
adc
je
push
repnz
stc
repz
int
arpl
imul
cmp
into
push
cmp
mov
add
push
sbb
adc
mov
sbb
cmc
movsl
notb
xchg
dec
xor
sub
jns
sbb
xor
xor
fiadds
mov
xchg
iret
out
inc
cld
push
ret
in
ljmp
aas
xlat
stos
mov
insb
mov
push
test
lea
fs
hlt
jg
pop
jmp
dec
inc
jle
repz
jecxz
test
cs
lret
jno
imul
sbb
fisubs
aas
ja
ret
jbe
incl
cld
and
inc
add
adc
int
pop
cmpb
adc
pop
pop
jge
cmp
stos
popa
rcrb
insb
jae
push
mov
outsl
andnps
xchg
daa
adc
xchg
xlat
adc
movsl
mov
into
ret
cs
sti
xchg
jge,pn
in
movsb
xchg
dec
mov
cmp
lret
pop
repz
jae
add
jcxz
dec
out
dec
push
xchg
xchg
push
pop
flds
test
in
jb
les
sub
xlat
cmp
xor
int3
in
sbb
mov
es
or
out
in
cmp
push
adc
xor
inc
pop
inc
stos
in
pushl
daa
outsl
fadd
aaa
inc
adc
sub
push
xchg
xchg
and
ret
xchg
bound
sub
inc
push
in
jge,pt
xchg
rcrl
ljmp
icebp
inc
bound
add
mov
or
xor
ljmp
cmc
ds
inc
aaa
xchg
das
inc
mov
cmp
std
inc
nop
fisubs
sub
mov
pushf
xchg
stos
cltd
ljmp
test
test
inc
movsl
in
sub
out
inc
xorb
push
mov
xor
call
loopne
dec
int
adc
rolb
or
ret
pusha
xorb
aam
sub
in
cld
stc
pusha
push
fidivs
pushf
loop
add
fsts
inc
xchg
mov
xor
pop
jno
jl
sarl
sub
loope
leave
xor
xchg
push
hlt
repnz
push
mov
leave
pop
jmp
sub
lret
sbb
movsl
push
lock
jnp
lcall
and
lods
cli
sbb
in
push
xchg
scas
in
fcoml
or
fs
cli
and
jmp
rorb
xchg
hlt
xor
cmp
stos
mov
cwtl
mov
and
imul
loopne
fimuls
fiaddl
subl
add
sub
sbb
adc
jge
pop
add
add
movsb
movsw
loopne
xor
push
add
dec
pop
pop
shl
cmp
iret
jge
loop
sbb
pop
shll
std
movb
icebp
sub
ljmp
pop
inc
imul
mov
jbe
and
mov
das
push
dec
add
aad
movsl
test
sbb
mov
sbb
jp
xchg
lret
cld
dec
xchg
add
push
cmp
popf
cmpl
sub
adc
lods
out
ss
mov
test
outsb
mov
in
imul
jnp
insb
mov
int
mov
mov
mov
ficompl
popa
push
jle
int
inc
xor
mov
jp
jno
dec
mov
xlat
pusha
lds
sbb
add
loop
xor
xchg
inc
mov
cmpsb
lock
dec
cmp
pop
xor
and
ja,pn
clc
idivl
cmpsl
les
mov
adc
xor
xchg
push
sub
mov
inc
dec
in
das
cli
enter
mov
sbb
push
mov
sub
pusha
pop
mov
testb
js
jb
xchg
xchg
push
jae
ds
rcl
push
pop
stos
rol
xor
xor
mov
scas
fistps
jo
add
xchg
mov
add
add
push
icebp
jnp
fildl
xchg
cmp
and
add
jo
int
mov
sbb
test
arpl
lods
xchg
aaa
aaa
gs
icebp
jbe
in
popf
pop
sub
and
test
dec
out
xchg
and
pusha
or
lcall
or
cltd
imul
int
fstps
inc
fidivs
cmpsb
clc
pop
mov
sub
pop
jl
mov
testl
bound
leave
lods
lds
mov
leave
adc
mov
popl
addb
sub
push
daa
and
mov
in
aas
xchg
xor
repz
cmc
cltd
adc
out
jno
repz
sbbl
in
or
and
xor
pop
add
cmp
jg
insl
fld
aaa
lods
jl
sub
fsubp
jo
popf
lea
fstpt
xor
out
fstl
ret
add
ss
lret
pop
gs
inc
adc
int3
adc
dec
pop
imul
adc
jb
in
xchg
addr16
jbe
xchg
outsl
es
int
lahf
out
cld
adc
or
inc
leave
sbb
or
push
add
mov
enter
sub
lock
inc
mov
je
mov
and
jne
out
cltd
popf
xchg
in
mov
stos
popf
not
mov
sub
pop
inc
mov
xchg
push
subl
jecxz
je
push
push
mov
sub
mov
dec
and
jns
cmc
cmp
pop
or
mov
int
cmp
xchg
lock
dec
paddd
in
fcmovnu
cmp
push
pusha
rolb
loop
pusha
fsubr
mov
int
bound
mov
loop
push
fld
mov
daa
sub
aaa
push
ficompl
ljmp
rorl
or
or
xchg
pop
push
popa
aad
stos
mov
cmp
mov
lea
or
pop
pop
sbb
lret
out
xchg
popf
xchg
ret
sbb
ljmp
add
mov
filds
sub
xor
inc
test
push
out
call
and
lea
xor
jmp
repnz
adcb
clc
mov
xor
push
mov
push
repz
mov
stos
bound
mov
adc
ljmp
push
sbb
lods
mov
adc
push
xor
jo
cmp
or
adc
dec
repz
pop
stos
pop
ljmp
inc
and
rorb
pop
push
inc
subl
adc
fdivs
nop
and
push
mov
sub
nop
mov
cli
push
cltd
cmp
and
icebp
sbb
cs
sub
xchg
into
mov
dec
loopne
fs
jno
loop
data16
push
loopne
aaa
mov
pop
jne
pop
mov
adc
xor
in
dec
push
xchg
inc
je
call
sbb
and
push
es
insl
xor
xor
loope
das
call
mov
or
add
scas
mov
fnsave
incl
mov
pop
repz
pop
inc
es
sarb
loop
scas
dec
movsb
push
hlt
cmc
jg
mov
xor
sub
lds
inc
lods
sbb
adcl
sbb
dec
fistpl
sub
mov
cltd
jae
inc
lahf
shlb
inc
leave
cwtl
xor
cmp
loope
mov
lcall
sbb
stos
data16
js
fldenv
pop
push
cmp
xchg
inc
fwait
enter
xlat
and
aas
repz
add
pop
insl
mov
fildl
inc
or
sub
lds
jo
mov
in
out
and
jo
push
xorl
inc
xor
imul
cmp
sbb
loop
stc
cwtl
repz
hlt
movsb
mov
inc
je
fldenv
add
sub
inc
fists
mov
aaa
iret
popf
jl
mov
mov
imul
mov
rep
nop
pop
dec
mov
add
das
inc
jmp
insl
test
xchg
lret
lea
cltd
xchg
mov
gs
addr16
adc
push
xlat
mov
je
mov
pop
mov
cs
leave
stc
cld
arpl
sub
jbe
mov
sbb
cmpsl
dec
std
lods
in
fstpl
jne
je
jns
xchg
push
or
jge
dec
and
pop
in
xchg
adc
mov
in
sahf
mov
adc
fiadds
dec
sub
sub
clc
lret
push
or
fstl
xor
adc
rcrb
clc
test
sub
test
xchg
std
xchg
push
push
adc
outsl
or
push
mov
and
and
add
inc
push
add
xor
inc
push
enter
sahf
ja
push
jmp
ret
mov
hlt
repnz
and
inc
pop
mov
dec
arpl
aas
repnz
idivb
notb
ficoms
dec
xchg
xor
mov
sub
push
dec
pop
jae
xchg
xchg
loop
jle
cmp
sbb
push
rcrl
sub
jp
addr16
pop
imul
add
lods
sub
and
aaa
iret
movsl
aas
clc
sbb
jmp
and
mov
add
sahf
cmp
pop
mov
in
sbb
in
xor
dec
xor
mov
sahf
mov
push
jno
imulb
or
jecxz
imul
fwait
pusha
out
jb
cmp
push
fidivrl
das
or
cmp
push
and
loope
dec
sbb
daa
mov
lea
js
clc
adc
ret
push
test
test
and
sub
adc
mov
rcl
dec
adc
cmpsl
icebp
jno
test
and
in
jnp
xchg
dec
lret
imul
imul
xor
mov
pop
addr16
xchg
test
jge
lret
testl
mov
pop
jge
xchg
fidivrl
es
cmc
mov
in
pop
cmp
aad
sbb
xchg
mov
push
jmp
cli
mov
cltd
cld
addl
pop
dec
shll
cmp
fistpll
loopne
and
movsl
outsl
xor
jne
inc
rorb
mov
xchg
jecxz
mov
cltd
mov
xchg
mov
mov
add
xchg
sbb
stc
pop
sub
es
sub
stos
bound
xchg
mov
in
jae
cmc
inc
xchg
xchg
mov
lahf
xchg
or
jp
iret
aad
outsb
roll
push
mov
xchg
pop
fisubrs
jno
lahf
jnp
pop
rorl
add
pop
sar
es
lret
in
inc
push
scas
cmc
jne
jecxz
dec
jo
fs
ret
mov
jno
adc
fisubrl
pop
mov
sbb
shrl
dec
repz
mov
insl
xchg
xor
sti
sub
ud0
push
mov
dec
pop
out
add
aaa
or
mov
mov
mov
cmp
inc
negb
mov
mov
mov
call
pop
in
and
push
fdivrl
pushf
std
popa
or
mov
push
ja
mov
bound
mov
mov
sub
cltd
sbb
xchg
mov
cld
push
push
stc
out
ficoms
pop
xchg
mov
or
into
xchg
jbe
sbb
cli
cld
stos
daa
lret
outsl
movl
das
mov
push
mov
shl
call
xor
jge
dec
cltd
jp
jnp
negb
adcl
cmp
decl
mov
daa
mov
dec
loope
hlt
jnp
icebp
push
sahf
lahf
aas
and
xchg
decb
push
lds
hlt
sub
xchg
sbb
sbb
adc
lods
or
mov
pop
out
inc
push
inc
int
pusha
xchg
push
mov
mov
cmp
push
data16
movsl
test
call
jp
in
mov
pop
popa
pusha
add
mov
pop
sbb
xor
shrb
jmp
adc
mov
mov
push
and
icebp
xor
cmp
gs
xor
and
scas
push
fcoms
aaa
cmp
popa
and
leave
imul
add
test
clc
cmp
divb
push
mov
imul
int
adc
xchg
dec
sub
cli
inc
xchg
or
dec
cmp
lock
test
adc
and
ds
push
insl
mov
xlat
aad
iret
int
push
add
xchg
shrl
repz
pop
mov
sub
sbb
adc
pop
cmpsb
rcrb
subl
push
stos
xor
movsb
add
mov
into
push
test
dec
sbb
les
jp
scas
dec
leave
mull
mov
cmp
loope
cmc
fsubr
and
sbb
mov
clc
mov
xchg
sbb
leave
mov
xorl
cwtl
imull
xchg
loopne
adc
push
jns
int
fucomp
aaa
ljmp
mov
inc
xchg
shlb
in
mov
test
jg
mov
test
cli
dec
inc
sbb
and
pop
sarl
andl
sbb
sahf
lods
cmpsl
sbb
pushf
scas
and
dec
jbe
paddsb
mov
jecxz
mov
mov
out
mov
pusha
rep
call
xor
js
bnd
std
test
mov
mov
insb
adcb
lea
jl
stos
jnp
cld
xor
popa
mov
jle
scas
fistpl
mov
outsb
mov
xor
ffreep
and
and
push
cmp
int
ja
ja
outsb
push
loopne
lea
adc
shl
push
inc
scas
or
out
push
jp
jae
test
mov
adc
cwtl
xor
adc
and
lret
mov
mov
inc
iret
in
xchg
dec
fwait
mov
jl
cld
clc
sub
pop
out
into
xor
xchg
movsb
das
inc
ja
mov
mov
mulb
inc
or
lods
mov
pop
cs
mov
mov
pusha
shll
cmp
and
push
dec
adc
mov
hlt
scas
cltd
or
cmpsl
stos
stos
push
xor
xchg
pop
and
or
jo
insb
push
out
pop
jae
dec
popf
scas
mov
out
cwtl
dec
adc
pop
sbb
aad
push
sub
stos
mov
lock
mov
mov
sbbl
mov
inc
mov
push
aas
outsb
cwtl
xor
pop
push
inc
stos
push
paddd
dec
loopne
mov
fs
dec
ret
in
pop
gs
daa
dec
fs
and
xlat
sbb
xor
or
xchg
aaa
sti
int3
cmp
or
push
sbb
and
inc
adc
fwait
mov
bound
xchg
sarl
inc
ja
in
ret
mov
xlat
jl
inc
dec
lcallw
lahf
jb
jnp
and
push
push
ret
mov
inc
dec
repnz
mov
cmp
call
pop
int3
pop
xchg
rorb
std
push
fisubrl
fwait
xchg
xor
lods
aad
mov
mov
ret
push
xorl
xchg
mov
gs
add
rol
mov
inc
aas
cmp
jne
out
jle
into
call
faddl
cwtl
pop
int
nop
xor
sti
sti
xchg
xchg
add
push
fsubr
mov
inc
pop
fiadds
lods
jge
sub
and
loopne
xchg
push
insb
sub
jp
xor
inc
xchg
jb
adc
test
mov
outsb
out
xchg
xchg
out
pop
sbb
xor
push
loope
imul
gs
scas
mov
sbbl
push
lock
pop
orb
int3
xchg
ljmp
lods
jb
dec
loope
out
jb
orb
xchg
push
bound
fsub
sbb
in
dec
neg
cmpsb
dec
push
es
fadds
imul
xchg
sbb
mov
outsb
test
push
jmp
push
sbb
xor
ja
jno
cli
cli
mov
or
push
lods
cmpl
or
jb
pushf
pop
rcl
orl
pop
lock
cld
insl
mov
imul
sub
dec
daa
or
sbb
les
and
push
dec
sti
mov
ret
inc
imul
cmp
sbb
inc
es
insl
adc
cmc
fadd
and
add
call
xor
lahf
jne
jle
addr16
cmp
xchg
add
lock
dec
jbe
stos
adc
lock
lock
pop
dec
xchg
xchg
das
cmp
jb
cld
inc
insb
jge
loop
mov
loope
das
xchg
popf
cmp
in
rcll
pushf
adc
pop
jb
orl
cmpsb
inc
out
jp
inc
jl
push
sub
and
inc
movsl
rclb
jge
mov
jp
or
jo
cmp
aaa
pop
pop
sub
cltd
movsb
aam
aam
mov
ds
mov
sahf
jo
scas
sub
sarb
fistl
push
ljmp
cltd
push
sbb
sbb
pop
mov
push
cmp
sub
lods
mov
add
or
es
subl
jns
das
shlb
dec
sub
fcomps
push
sub
mov
outsb
clc
adc
push
add
sub
bound
add
outsl
mov
or
jne
andl
or
jg
stos
mov
movl
out
inc
sub
and
pushf
add
test
push
xchg
xlat
js
in
xchg
push
aas
std
mov
xorb
mov
mov
cld
lahf
and
les
lahf
stos
sbb
mov
icebp
jmp
mov
mov
push
cmp
sbb
mov
insl
add
into
lahf
jle
jb
orb
cmp
xchg
inc
xchg
js
call
or
mov
inc
fimuls
sub
push
hlt
dec
add
nop
call
ds
adc
imul
in
push
dec
enter
out
iret
mov
pop
mov
mov
sub
pop
pop
negl
leave
adc
jmp
pop
push
adc
sub
movsb
and
mov
mov
fldenv
test
fdivr
pop
add
mov
push
in
insb
pushf
mov
inc
xor
dec
je
add
push
loop
nop
fnstsw
dec
ss
in
cmp
sub
insl
xor
push
ret
pop
mov
cmp
pop
xor
leave
dec
jp
push
fnstcw
pop
aaa
out
jae
cs
psrlq
push
pop
and
lret
pop
ret
imul
shl
xor
adc
xlat
loopne
scas
mov
in
cmp
lcall
data16
mov
filds
sub
or
mov
call
jecxz
dec
and
jo
stos
iret
ja
jmp
stos
lret
mov
js
daa
cs
adc
or
pusha
orl
cmp
in
aad
pop
clc
lea
adcl
mov
pop
xchg
mov
or
mov
inc
neg
mov
dec
cli
lea
or
test
ds
mov
test
push
jnp
rcrb
cmp
inc
ss
loope
push
bound
das
push
popa
sub
jbe
daa
cmpsb
repnz
lahf
das
mov
xchg
orb
imul
cltd
iret
addl
mov
jecxz
dec
and
cmpsl
pop
popf
pop
ss
popf
adcb
xchg
mov
testl
clc
sub
nop
sub
test
cmp
and
dec
mov
xchg
mov
lahf
mov
push
push
xchg
adc
adc
lahf
mov
dec
imul
adcb
mov
mov
mov
test
stc
loopne
push
cwtl
mov
adc
loopne
pop
jno
or
aas
dec
mov
test
loopne
jp
cmp
cltd
gs
das
push
push
ja
mov
jle
xchg
jg
adc
mov
push
inc
mov
int
repnz
cltd
jecxz
inc
mov
scas
mov
push
sub
in
and
adc
popa
inc
mov
daa
pop
inc
es
leave
lds
cmc
adc
repz
imul
xchg
pushf
cmp
pop
inc
scas
xchg
push
xchg
fs
push
aad
test
lcall
xor
push
xor
cmpsb
dec
das
lret
lods
jmp
int
inc
pop
in
push
lea
mov
mov
sbb
fwait
mov
nop
stc
pop
enter
cmp
imul
inc
mov
add
mov
shrb
popa
sahf
out
hlt
fstl
mov
sub
mov
and
scas
rorb
out
flds
cltd
mov
jl
xor
clc
out
lods
cmpsb
dec
add
dec
mov
pop
cmp
outsl
lock
callw
fimuls
sahf
idivl
nop
cmp
out
enter
mov
lgdtl
jb
adc
add
sahf
push
hlt
sub
dec
adc
dec
test
std
cli
add
fscale
aad
js
dec
xor
aam
add
test
xor
cmpsl
fdivs
outsb
add
je
dec
ret
cmc
sbbb
adc
inc
fwait
mov
and
cmp
jb
mov
or
sub
std
dec
add
cmp
push
ja
popf
mov
or
pop
mov
rcrb
fcmovnbe
and
shlb
cmc
xorb
enter
add
iret
inc
mov
dec
jne
sub
inc
test
mov
outsb
inc
outsl
pop
in
sbb
mov
adc
fsubl
ret
fsubrs
xchg
and
iret
scas
adc
mov
adc
stos
lret
pop
sbb
ja
xchg
add
dec
inc
push
mov
lcall
lahf
insl
leave
rclb
xor
stos
add
jnp
push
cmpsb
xor
push
dec
dec
aam
hlt
xor
fwait
insl
push
ret
add
fmuls
mov
jns
rolb
xlat
popf
push
std
loop
loopne
cmpl
inc
push
jmp
loopne
out
or
and
push
dec
mov
cld
and
mov
ficoms
sahf
dec
xchg
pop
mov
adc
sahf
jp
test
jle
mov
cli
mov
cs
xchg
leave
jg
mov
jecxz
pop
push
fisttps
pushf
push
aam
sub
mov
add
sahf
enter
stos
jne
clc
adc
push
inc
or
shlb
cmp
cli
adc
push
cld
imul
fdivs
in
jecxz
scas
jmp
sarb
jno
mov
in
loope
cmp
jge
pop
fidivl
inc
ljmp
mov
push
push
mov
add
sahf
lahf
jp
test
xchg
xchg
insl
outsl
mov
scas
xchg
xor
popa
sub
mov
iret
cmc
sub
lret
mov
jle
sub
push
pop
mov
or
arpl
push
rolb
mov
cmp
mov
je
mov
mov
jb
sub
jp
mov
jg
or
inc
push
mov
mov
rcrl
or
das
add
adc
std
imul
sub
sbb
jbe
push
into
mov
pushf
and
mov
and
cmpl
mov
test
pop
scas
lcall
adc
pop
mov
gs
or
popa
mov
pop
mov
pop
pop
push
gs
jl
pop
aaa
pop
cmpsb
fisttpll
inc
insb
pop
div
lock
outsl
adcb
test
bound
sub
js
arpl
mov
bound
scas
dec
jl
and
inc
loope
lods
mov
scas
in
in
mov
out
cmp
cmp
adc
and
cld
xchg
jp
insl
or
fs
jnp
nop
lret
lahf
mov
dec
out
dec
imul
imul
add
add
jp
push
jno
add
into
jl
les
nop
daa
roll
jp
loopne
dec
call
mov
js
add
in
dec
popa
das
idivb
add
lret
iret
jmp
sti
aad
mov
sbb
fwait
add
xchg
xor
jp
add
outsl
cmp
mov
jp
std
into
jno
pop
ljmp
xor
sahf
lock
adc
gs
sarl
fisubrl
cli
sub
add
mov
testl
fs
sbb
cld
push
imul
cmpsl
mov
inc
sbb
cmp
mov
dec
inc
adc
mov
clc
fcmovb
aas
sub
pop
movsl
cwtl
fsubr
ljmp
in
mov
push
pop
stc
add
sub
lret
shrb
add
je
xchg
outsb
dec
ret
movsb
xlat
mov
mov
jbe
xor
lock
pop
xor
pop
cmc
loopne
jg
out
movl
jl
xchg
in
ja
nop
xlat
mov
cmp
inc
insl
icebp
arpl
jb
std
jne
dec
out
sahf
ret
add
jmp
in
mov
stos
sbb
dec
into
push
mov
cmpsb
out
push
dec
add
or
pop
arpl
dec
popf
mov
lahf
push
pop
inc
lcall
lods
mov
adc
cmp
fwait
fs
stc
xor
xchg
xchg
dec
ja
daa
out
cmpsb
xchg
fcmovnb
enter
push
lret
insb
loope
fucom
int
mov
dec
test
adc
daa
adc
mov
in
mov
cs
idivb
xor
test
lock
xchg
orl
lods
push
pop
push
cmp
ss
dec
addr16
xor
ret
inc
sbb
arpl
std
pop
mov
dec
outsl
out
inc
adc
subl
mov
daa
xchg
jno
aam
les
test
inc
addr16
mov
call
inc
cmp
sahf
jle
std
fcoml
insl
pop
popa
movsb
lock
adc
and
dec
fnsave
pop
int3
pop
lcall
push
test
icebp
outsb
adc
mov
scas
or
sub
add
jno
or
cltd
out
cs
xchg
ret
and
push
cmpsb
mov
ljmp
inc
mov
and
mov
rcl
lahf
jo
xor
lahf
je
aaa
push
leave
movsb
xor
push
adc
inc
divl
cwtl
inc
and
jnp
push
or
pop
dec
push
xorl
jp
ljmp
jns
xor
cli
aam
in
pop
fprem1
imul
xchg
iret
daa
std
in
lock
jne
push
inc
outsl
mul
dec
roll
or
stos
mov
dec
push
mov
out
xor
mov
mov
repnz
cmpsb
adc
jns
out
jbe
hlt
out
mov
lahf
mov
fmull
fwait
lahf
iret
pop
dec
cmp
jne
es
inc
in
mov
gs
in
sbb
lret
insb
mov
test
and
dec
mov
mov
sbb
lods
movsb
sub
xchg
adc
pop
sti
pop
loopne
out
mov
adc
aad
icebp
cmp
inc
ret
jo
fs
cmp
cld
xchg
lea
jb
scas
push
jne
outsl
mov
pop
xchg
sub
fstpl
fcoml
mov
cmpsb
or
repnz
scas
mov
adc
sbb
and
mov
insl
cmpb
xchg
testb
mov
fcoms
xor
lods
fnstcw
jno
xchg
aas
xor
adc
jne
rcll
loop
mov
inc
jecxz
jb
and
adc
xchg
hlt
out
mov
sbb
pop
loopne
into
push
lcall
test
sti
cmp
mov
push
lock
or
mov
aaa
mov
jg
jo
mov
inc
mov
jne
imul
test
mul
pop
cmp
cmp
push
push
jl
mov
dec
mov
fldl2e
or
jno
call
xchg
push
cmpsb
mov
aad
ds
mov
inc
jmp
jle
sti
pusha
fnclex
xchg
add
pop
xchg
imul
arpl
mov
rorl
pmulhuw
repz
jg
cmpsb
push
cmp
mov
inc
divb
sub
inc
fwait
inc
int
sub
inc
pop
out
pop
andl
scas
mov
add
fidivl
roll
lcall
fimuls
jnp
mov
inc
stc
into
mov
inc
aam
and
xor
jle
ss
std
enter
xor
sbb
ljmp
mov
daa
pop
mov
jno
rolb
popa
sarl
jbe
lret
sbb
jg
and
insl
aad
fisubl
fxch
add
cmp
loop
ret
lret
xchg
jbe
jns
sti
sub
not
jl
xchg
cmp
xor
fists
shl
sub
and
mov
repnz
or
pop
mov
inc
inc
inc
pop
js
sub
and
scas
or
push
and
fstpl
jbe
insl
xchg
adc
movsb
jl
inc
aaa
shlb
xchg
mov
inc
lcall
push
cld
test
test
imul
insb
adc
and
jle
or
sub
subl
and
pop
mov
mov
pushf
add
and
jge
jmp
mov
enter
inc
into
jno
ffreep
jmp
das
xchg
or
mov
test
jmp
sub
jne,pt
adc
adc
js
adc
cmp
and
loop
std
cs
lods
xorb
daa
imulb
repz
inc
js
dec
enter
xchg
push
aad
or
mov
cmpsl
enter
dec
out
add
mov
dec
jge
or
aas
and
add
outsb
cmpsl
fnstcw
into
mov
repz
inc
jle
in
lcall
pop
stos
mov
xor
sbb
jbe
pop
pop
jle
movsb
mov
adc
jp
inc
loop
stos
and
sub
cmp
adc
and
inc
xor
and
hlt
cmc
stos
bswap
jb
mov
addr16
fiadds
pop
nop
push
cmp
dec
test
sbb
lods
dec
or
in
outsb
adc
cmc
mov
stc
in
pop
push
jae
jp
mov
cmp
movsb
xchg
or
fisttpl
lret
sub
push
arpl
mov
stos
jg
pusha
iret
dec
jnp
xchg
and
dec
and
mov
enter
push
xchg
mov
or
rclb
adc
out
lahf
cmp
sbb
das
cmp
xor
bound
dec
push
fistl
int
xlat
negl
es
inc
notl
ret
in
dec
negb
in
pop
jbe
aad
or
xorb
xchg
push
dec
mov
push
das
push
sub
mov
jge
pop
pop
hlt
mov
pop
mov
mov
ret
mov
cmc
popa
push
fs
cmp
inc
jae
mov
push
inc
ja
xchg
fimull
repz
adc
arpl
stos
out
fisttpl
adc
mov
mov
ljmp
lcall
out
push
or
lds
stos
xorb
push
dec
in
sbb
jo
pop
movsb
inc
loopne
mov
les
mov
cmp
and
mov
push
push
enter
adc
leave
movsb
es
and
outsb
dec
lret
dec
xor
jge
movsl
lret
imulb
jmp
dec
insl
push
sbb
test
xchg
data16
movsb
data16
imul
ffree
or
insl
mov
testb
decb
xor
push
sbb
pushf
jo
mov
xor
inc
sbb
mov
cmp
sub
adc
mov
cmpsl
aaa
add
pusha
sahf
jmp
enter
loop
jae
sub
push
xor
cwtl
and
or
or
push
sbb
pushf
adc
fsubr
fwait
in
jg
lock
imul
movsb
outsl
out
jg
ja
pop
pop
pop
cli
xor
cmp
in
imul
fsubp
sbb
or
std
dec
mov
mov
push
addr16
push
pop
or
pushf
mov
scas
mov
aas
xchg
imul
gs
je
ja
xchg
pusha
repnz
add
out
lods
jp
cs
mov
movsb
mov
std
and
jb
xchg
pop
aad
in
clc
mov
cmpsb
cmpsb
pushw
ja
stos
jnp
call
mov
mov
sub
cmp
lret
into
adc
scas
xor
inc
repnz
jb
and
icebp
adc
add
jno
iret
insb
es
cmp
test
pop
arpl
jb
loop
and
test
mov
or
cs
xchg
and
push
shlb
lret
xchg
mov
mov
jae
pop
mov
xchg
or
or
shl
es
mov
mov
int3
jae
sub
and
test
xor
jg
movsb
push
dec
addl
and
outsb
inc
loop
mov
sub
popa
adc
repnz
pop
or
and
xchg
mov
hlt
cmp
mov
shll
push
pop
mov
sar
and
ktestw
in
les
pop
mov
std
mov
insl
inc
je
mov
sub
mov
pop
inc
enter
dec
cli
aad
jns
mov
mov
pop
add
inc
pop
loope
inc
fxch
mov
mov
or
add
pop
clc
xchg
nop
stc
popl
jo
xchg
sub
cltd
fsubs
cltd
push
inc
xor
cmp
xor
fiadds
ljmp
adc
loope
pop
push
outsl
test
iret
cld
dec
mov
bound
sbb
inc
mov
jo
xor
jle
jge
push
mov
mov
cmp
sbb
test
or
stos
outsl
lret
or
push
notl
or
jl
jle
jp
stos
fwait
pop
dec
add
add
imul
mov
ja
push
int
out
adc
ja
stos
sbb
test
fdivl
shlb
mov
scas
sub
mov
xor
pop
loopne
sub
inc
and
mulb
addl
das
stos
fdivrs
jno
and
jne
pop
aaa
push
in
or
test
movsl
enter
push
xlat
ja
icebp
add
push
out
inc
mov
imul
or
or
adc
stos
sbb
adc
mov
fisubl
pop
mov
imul
mov
in
or
cld
jge
jb
stc
and
cmp
test
cmp
rol
test
cltd
out
dec
nop
call
adc
push
into
and
fwait
xchg
add
or
movsb
outsb
xchg
mov
js
fiaddl
ss
jno
pop
inc
add
movsl
push
inc
lock
xchg
inc
mov
lea
sub
daa
dec
inc
jmp
shr
pusha
cmp
in
cmp
pop
push
in
int
in
mov
mov
pop
sbb
je
or
jle
pusha
mov
or
mov
scas
dec
rolb
mov
stos
inc
adc
xchg
inc
in
out
jg
out
xchg
push
imulb
adc
aam
mov
lds
movl
mov
in
xorb
sbb
pusha
add
lods
push
test
lcall
fwait
and
xchg
cmp
sbbb
mov
add
xor
bsf
push
pop
das
pusha
mov
outsb
push
push
xchg
add
ja
mov
jnp
mov
out
sbb
popa
push
push
mov
movsl
bound
outsb
adc
jmp
arpl
call
std
push
xor
pop
cmp
andl
jmp
gs
cmp
cmp
mov
jmp
lahf
neg
push
mov
cmp
xor
test
mov
outsb
sub
fildll
mov
mov
test
push
daa
lds
add
mov
and
xlat
scas
clc
lods
sbb
out
rcrl
inc
dec
mov
adc
stc
scas
push
sbb
ds
js
mov
mov
mov
jno
jge
cwtl
and
gs
or
fnstcw
inc
outsl
add
jo
xchg
cmp
push
lods
pop
adc
mov
lods
cmc
push
mov
dec
inc
in
push
dec
inc
sbb
mov
in
add
nop
imul
mov
popa
push
xchg
sti
mov
sbb
push
and
adcl
ljmp
data16
bound
pop
das
cmp
pop
push
xor
mulb
mov
cltd
mov
jno
dec
mov
adc
mov
aam
insl
stos
adc
pop
cld
test
cmp
mov
cmp
push
inc
lds
loopne
les
xchg
sahf
xor
cmpsl
sbb
popl
out
add
mov
stos
shrl
or
jns
sbb
mov
add
adc
jg
bound
add
shl
int
and
into
dec
iret
sub
test
sub
dec
ljmp
je
mov
mov
dec
jge
mov
and
pop
into
xor
lret
rcrl
rcl
pop
sub
je
inc
xor
mul
mov
cmp
sbb
and
jl
xchg
adcb
push
fistpll
lret
mov
cmp
add
push
testl
data16
or
in
cs
outsb
adc
and
popa
out
add
fmull
xor
pop
pop
es
repz
pop
cld
xor
aam
and
fsubl
insl
pop
push
add
test
sbb
adc
sbb
into
inc
pop
xor
fstps
in
lcall
sbb
ljmp
jge
jns
jge
popf
adc
pop
mov
add
mov
adc
jg
aam
je
dec
and
fs
mov
mov
test
es
popf
mov
incb
into
ljmp
mov
mov
jmp
mov
push
inc
mov
xchg
inc
loope
cmp
inc
dec
sub
mov
inc
out
cmp
mov
aaa
out
repnz
js
jp
lods
inc
sbb
fwait
nop
popf
lock
xor
pop
fnsave
int3
fldt
xor
call
inc
mov
pop
mov
out
mov
and
sub
xchg
sbb
xor
je
fimuls
xor
inc
addr16
and
pusha
adcl
pop
xlat
dec
fwait
lds
mov
mov
jns
ljmp
add
dec
fwait
iret
test
je
idiv
inc
xor
jnp
lahf
insl
mov
jge
sbb
add
cwtl
sti
stos
call
mov
cltd
adc
pushf
xor
and
fildll
cltd
ja
jmp
out
hlt
cltd
xchg
and
lcall
mov
pop
push
loopne
pop
jle
mov
add
inc
aad
xchg
or
inc
icebp
aad
cmpsb
push
sbb
cmp
pop
div
sbb
cmp
jle
xchg
jae
mov
out
xorl
lods
inc
jnp
xchg
pusha
rolb
mov
xlat
add
sti
ljmp
cmc
pop
movsb
imulb
je
aaa
push
in
sarl
or
inc
or
pop
dec
fsubrs
push
cmc
mov
fsubrs
lds
push
push
or
int
adc
bound
test
sub
pop
mov
mov
rorb
rolb
and
imul
cmp
repz
cld
fdivr
std
mov
scas
insb
push
or
int3
xchg
nop
push
stos
inc
repz
cmp
out
test
fidivl
lret
xlat
xchg
xor
popa
fs
xor
mov
fstps
aam
add
push
sahf
push
push
jo
out
add
aas
hlt
je
mov
popf
fs
dec
fdivl
sti
inc
xor
pop
es
scas
dec
and
test
mov
leave
push
inc
mov
add
jg
cmpsb
push
sub
rorb
test
mov
addr16
and
mov
insl
in
xchg
jg
in
sub
fcmovb
xor
mov
push
jae
mov
push
outsl
fistl
ret
jmp
cmpsb
fnstcw
cmp
mov
sbb
mov
das
fldl
jae
pop
xor
add
mov
mov
or
mov
andb
icebp
cmp
movsb
sub
int3
or
dec
pop
idiv
mov
leave
mov
or
leave
push
or
pop
loopne
adc
push
jbe
sbb
bound
in
mov
jb
stos
mov
mov
mov
sbb
ds
mov
cmp
mov
inc
adc
add
add
mov
jb
mov
xor
in
dec
mov
pop
or
fisubs
gs
pop
sarb
mov
adc
push
dec
sahf
mov
aad
gs
sub
ss
dec
ucomiss
add
addl
inc
ret
and
aaa
aam
das
incb
and
xor
cwtl
mov
aas
es
push
test
sbb
mov
icebp
fmull
test
or
mov
add
cmp
push
fs
stos
aad
cli
push
fnstcw
imul
xchg
inc
ficoms
test
fstps
mov
mov
inc
xor
jno
movb
mov
jecxz
popa
and
add
pop
lret
lcall
push
mov
test
rcrl
add
inc
push
test
and
adc
imul
dec
push
ja
movl
clc
sbbl
aas
sub
jp
orb
in
inc
enter
sbb
leave
cmpsb
push
sbb
repz
fnstenv
ja
inc
fstpl
sbb
sub
or
push
dec
stos
mov
aam
mov
pop
sbbb
imul
enter
shll
add
les
out
or
pop
sub
dec
mov
sahf
ja
test
test
pop
dec
inc
das
js
into
call
inc
cmp
jg
mov
xchg
sbb
insl
xchg
mov
and
dec
push
nop
das
push
insl
leave
xchg
lret
paddusb
adc
in
fisttpll
leave
loope
adc
mov
shlb
dec
cmpsl
popf
les
mov
lea
lds
test
test
cmpsb
andl
fcoms
je
xchg
jge
inc
jmp
mov
outsb
xchg
xor
repz
ret
gs
add
xchg
fbstp
aam
xchg
shl
jmp
sbb
ljmp
idiv
or
fcompl
xchg
out
fwait
xchg
inc
mov
or
mov
cwtl
cli
push
mov
jle
xor
push
ljmp
xchg
fs
pop
dec
sbb
inc
cmp
sub
js
sbb
mov
cmc
xchg
outsb
mov
xlat
pop
lock
push
cmp
test
clc
sahf
pusha
push
lods
push
test
wrmsr
and
leave
fildl
sbb
cld
insl
sub
in
divb
or
ds
leave
jge
in
test
andl
test
add
out
inc
dec
mov
cld
frstor
push
pop
and
pop
into
jecxz
movsl
pop
or
nop
fsubrl
mov
loop
pop
stos
fs
sbb
push
test
sbb
push
inc
inc
sub
sub
sbb
pusha
xchg
sbb
mov
mov
or
loopne
out
xchg
js
shrb
nop
adc
ljmp
jae
bound
sbb
les
movsl
jne
xlat
prefetch
sbb
ljmp
cmc
aas
dec
or
int3
clc
insb
and
fwait
push
fucomi
fmul
fadds
daa
pop
dec
movsb
aaa
fisttps
cmp
test
xchg
shrl
loope
pop
xor
and
sbb
es
mov
mov
subl
and
pop
push
mov
aad
addl
leave
xor
aaa
jl
xor
mov
jmp
dec
out
cmp
mov
push
notb
adc
cmpsb
pop
in
fnstcw
sbb
jne
push
dec
rclb
and
dec
fnstenv
pop
jno
sub
push
enter
out
in
xchg
es
icebp
int3
and
mov
sub
push
js
and
jl
push
pop
xor
cmc
out
xor
fcmovne
xchg
inc
sahf
add
dec
push
jns
dec
sbb
kmovw
andl
scas
mov
inc
xchg
test
mov
pop
mov
xlat
popf
adcl
add
mov
pop
mov
dec
cli
mov
in
out
pop
das
push
das
pop
pop
int
shrl
lods
xchg
shlb
sbb
mov
scas
cmp
lds
cld
fnclex
mov
inc
cmp
icebp
dec
mov
int3
jle
xor
lret
mov
imul
sbb
dec
pushf
cmc
jb
and
fstpl
xchg
push
jbe
sub
out
inc
es
rorl
adcl
leave
add
dec
sahf
rol
xchg
push
xchg
ljmp
call
test
xchg
xchg
out
andl
cwtl
xor
loope
incl
push
fadds
adc
and
cli
add
mov
pusha
or
mov
icebp
mov
jo
cltd
and
ds
xchg
jecxz
dec
stc
inc
inc
add
stos
into
add
xchg
xor
mov
cmpsl
or
adc
popa
pop
add
adc
xor
ss
roll
cmpl
jnp
xor
xor
shrl
or
popa
aad
pop
pop
jo
add
rol
mov
mov
das
jb
or
scas
subb
aaa
inc
push
sahf
fcoml
loop
or
lds
jle
sub
dec
jns
xor
addr16
cmp
fs
dec
jge
ds
xchg
sbb
sbb
mov
adc
cmp
lret
rcl
xchg
das
scas
mov
out
mov
or
adc
seta
aam
or
cmp
push
pop
int3
jle
in
movsb
sub
lahf
xor
loope
pop
push
add
stos
fisttpl
mov
jnp
outsl
stc
cmc
filds
add
lods
jo
out
sahf
sub
mov
js
mov
and
ficoml
out
pusha
ret
loope
sub
lcall
pop
mov
les
or
sub
incl
insb
push
pop
xor
adc
loope
shrl
lock
nop
rorl
mov
enter
xor
add
sbb
lea
imul
add
cmp
movl
pop
mov
in
bound
roll
into
rorl
pop
mov
icebp
lods
push
xchg
mov
push
incl
push
in
shl
out
in
jl
add
mov
sbb
out
fs
shlb
push
add
mov
int3
loopne
sub
or
icebp
test
jne
popa
daa
sub
adc
or
sbb
and
cmp
mov
jmp
in
cmc
sti
call
fwait
movsb
loope
andb
pop
ret
lret
jle
jle
dec
sub
push
divl
cmpb
pop
sub
mov
cmp
cmc
mov
js
ds
loopne
outsl
dec
push
push
int3
imul
aas
cmp
adc
cmpsl
sbb
xchg
dec
and
loope
movsl
mov
xor
mov
xchg
pop
dec
push
or
xchg
cmp
orb
sar
div
mov
mov
add
dec
pop
mov
push
lods
mov
insb
negb
les
popf
cmp
mov
stc
stos
notb
in
sbb
adc
adc
js
adc
shlb
sbb
add
xor
loope
sub
and
adc
popf
mov
mov
mov
cmp
push
fisubs
dec
test
fnstsw
and
bound
std
stc
hlt
mov
xor
or
add
or
out
int
mov
clc
nop
or
dec
and
push
pop
stos
adc
push
in
repnz
cs
sbb
sbb
mov
sub
iret
faddl
mov
repnz
inc
adc
dec
in
out
gs
out
shrl
inc
mov
ss
ret
out
scas
pusha
int
scas
fisttps
test
lea
push
cmp
daa
ret
jle
or
in
pop
push
lods
movsb
push
mov
mov
mov
mov
stos
lahf
sub
dec
cmpsl
jo
cmc
jb
bound
cmp
popf
push
lret
aam
mov
push
xor
fcom
subb
in
and
int3
ljmp
and
dec
out
dec
mov
shlb
push
or
aad
fimull
iret
mov
leave
test
rorb
xchg
ds
enter
lahf
aas
mov
fisubs
adc
mov
fwait
mulb
jnp
fisubrs
push
add
insb
dec
call
fiadds
mov
out
mov
jecxz
sbb
std
sbb
dec
fisubs
fisubrs
mov
cmp
lds
inc
fildl
gs
xchg
orb
mov
push
pop
repnz
jmp
enter
mov
je
mov
sub
add
dec
dec
in
or
mov
das
test
lret
test
scas
lds
and
lds
ja
mov
imul
daa
add
cmc
cmp
loopne
imul
enter
fwait
mov
pusha
sbb
adcb
inc
push
shrl
sbb
std
add
repnz
les
shl
jp
in
cld
mov
inc
hlt
pop
sbb
popf
sbb
mov
pushf
cmpsb
adc
insb
sbb
xor
xchg
mov
push
push
stos
out
jmp
iret
fcoms
aas
mov
jge
out
cmp
insb
jmp
out
mov
add
outsb
and
cmp
shlb
dec
mov
nop
mov
jecxz
and
push
les
and
adc
sub
jmp
movsl
and
or
insl
push
out
sbb
or
rcrl
dec
xchg
in
insl
lods
ror
lret
mov
popf
jecxz
out
mov
pop
mov
cs
push
fprem
mov
mov
shll
jae
add
sub
and
ficoml
dec
sbb
inc
and
jne
aas
mov
pop
mov
and
lret
addr16
or
inc
cmc
cmpl
out
lret
cltd
or
arpl
jg
mov
repz
sbb
sbb
pushl
or
stos
inc
icebp
xchg
mov
ret
mov
or
pop
subb
jae
fidivs
pusha
mov
adc
test
jnp
mov
add
out
in
adc
jne
xchg
xchg
mov
pop
add
xchg
sti
stos
or
rolb
mov
std
push
in
cmc
out
xor
jns
rolb
hlt
jae
xchg
ja
lcall
and
adc
mov
fisttpl
sbb
push
cmp
or
cmpsb
add
sub
ds
sbb
cld
mov
lds
call
aaa
inc
dec
sub
cwtl
sbb
xchg
lahf
gs
fwait
push
dec
cmp
lods
sub
ds
pop
mov
inc
cmp
and
xor
mov
xchg
push
adc
test
stos
dec
inc
jae
inc
or
ljmp
stos
repz
into
pusha
adc
lahf
incb
and
ja
xor
fidivl
enter
js
push
mov
pop
sarb
xor
xlat
aam
cmp
xchg
in
pop
leave
sub
mov
inc
nop
adc
lods
daa
jge
outsl
sarl
ljmp
jmp
movsl
dec
insb
int
add
hlt
lds
cltd
subl
push
sarb
push
rclb
lea
adc
outsl
iret
sti
mov
fdivrl
mov
or
inc
ror
and
cmp
cmp
std
aad
sub
imul
inc
jle
push
ja
dec
and
inc
sbb
stc
fdivs
xchg
dec
push
cmp
cwtl
sbb
daa
or
add
sbb
or
pushf
sbb
mov
loop
cmp
ljmp
jmp
mov
nop
test
and
inc
push
movsl
push
and
and
sub
mov
mov
in
mov
pop
fldt
jle
mov
adc
xor
ds
cmp
inc
test
xor
ret
leave
daa
fcompl
cmpsb
sti
dec
in
repnz
pushf
mov
adc
aam
cmc
add
add
cli
push
leave
aaa
add
bound
mov
lods
xor
js
hlt
lock
mov
ss
xchg
push
stc
cmp
mov
lock
std
xchg
adc
or
jo
sub
jg
test
adc
inc
xchg
jo
les
call
rol
hlt
inc
sbb
scas
sub
stc
jl
fnstcw
adc
mov
jp
xchg
lcall
push
push
cld
call
dec
shl
push
mov
sbb
icebp
sub
adc
fnstenv
xchg
mov
pusha
sbb
dec
jl
push
cmp
xor
add
cmp
jge
addr16
roll
push
iret
mov
mov
test
mov
dec
and
and
add
popa
ja
dec
xchg
popf
cwtd
jae
cmp
loopne
sub
shll
push
fisttps
mov
pop
mov
add
inc
pop
int
popa
ret
cmpsb
xlat
push
pop
inc
cmp
pop
push
sbb
adc
cli
shll
cmc
sahf
rcrl
fwait
shll
movsb
scas
clc
fcompl
fdivrs
je
popa
andb
mov
sub
mov
pop
or
fcmovbe
and
jmp
lods
std
push
push
jo
sbb
cmp
xor
jg
arpl
xor
addl
das
mov
xor
jmp
ret
repz
add
mov
push
fsubrl
dec
loopne
mov
popf
in
xor
jmp
dec
js
rorb
mov
test
jne
pop
mov
inc
cmc
xchg
mov
pop
das
add
fdivp
pop
rolb
hlt
mov
hlt
das
mov
mov
pop
sub
imul
repnz
inc
aad
sbb
push
pop
dec
mov
mov
enter
sti
xor
and
ds
cmp
test
cwtl
inc
loope
leave
mov
test
cmp
icebp
mov
lret
mov
or
loopne
push
aaa
fxam
mov
adc
adcb
sub
or
mov
cmp
jle
fidivl
xor
scas
fs
jg
stc
pop
add
jbe
mov
sahf
push
pop
or
leave
or
scas
inc
scas
sti
sbb
jecxz
add
sti
dec
add
mov
push
push
pop
enter
xor
mov
mov
cmp
or
cmp
inc
or
cmp
xor
sahf
in
pop
int
adc
iret
mov
test
nop
lret
mov
rcl
aad
sub
sahf
cmp
mov
test
aad
cmp
cld
and
pusha
loope
add
mov
insl
pop
lea
mov
cwtl
mov
dec
inc
push
cltd
inc
add
lock
push
ds
or
out
mov
out
add
jo
repz
into
das
lcall
jb
je
mov
cmp
loopne
cs
push
pop
test
insl
push
mov
pop
lods
jae
stos
loop
in
scas
push
js
mov
in
mov
xor
push
mov
enter
bound
xorl
les
mov
adc
leave
add
cmp
dec
sub
jo
push
clc
into
cmpsl
xor
inc
data16
dec
das
dec
dec
jecxz
jne
mov
xchg
xor
push
subb
adc
xchg
dec
pop
movsl
xlat
dec
sti
and
xchg
pushf
mov
aas
adc
notb
mov
stos
add
test
adc
loop
frstor
sbb
dec
add
push
es
push
inc
dec
or
xchg
shlb
mov
adc
xor
pop
and
push
mov
sbb
pop
adc
fdivl
xchg
jecxz
mov
push
stos
imul
notl
or
ficoml
xchg
cli
repnz
push
movsb
je
leave
and
ja
pop
xor
js
jl
push
bound
xchg
xchg
loope
lcall
mov
daa
imul
cli
imul
rorl
jb
jecxz
lods
pop
mov
lods
pop
sbb
insb
ret
mov
aaa
or
js
sub
aas
lds
es
sbb
ds
adc
ret
enter
js
sbbl
subl
fildl
xchg
sub
int
data16
jno
cwtl
xchg
outsl
sub
xlat
jmp
mov
mov
aad
out
leave
push
roll
std
xchg
rclb
inc
imul
cmp
insb
push
lock
push
in
scas
lret
jo
mov
test
jmp
js
negb
shl
out
loope
jne
and
jp
aaa
cmp
rorl
test
sbb
loope
outsb
mov
icebp
mov
call
daa
test
divb
mov
mov
or
rolb
adc
mov
nop
sub
not
adc
inc
pop
xchg
mov
add
push
mov
pop
ror
mov
loop
push
enter
aaa
movsl
pop
aaa
mov
xor
fisttps
je
jno
mov
ljmp
ss
les
sarb
loope
lret
inc
mov
or
test
adc
sub
dec
aaa
cld
xchg
es
dec
aam
push
filds
push
fcompl
in
pop
popa
iret
movsb
or
dec
jae
inc
sbb
into
out
sub
icebp
inc
sbb
sub
sbb
sbb
pop
lods
in
lahf
sahf
jbe
lods
mov
push
push
mov
sub
fwait
retw
mov
fwait
test
push
in
sbb
test
fcmovnb
in
mull
cmp
and
mov
xchg
dec
mov
imul
mov
xlat
scas
out
lcall
add
fucomi
push
jb
mov
fidivrs
xchg
xchg
or
pop
cmp
mov
push
mov
out
sahf
movsb
into
push
pushf
xchg
shr
out
outsl
scas
out
cmc
pop
inc
add
sbb
data16
mov
imul
push
and
hlt
dec
xor
mov
add
jle
sub
xchg
js
lds
xor
add
or
add
pop
out
lods
jmp
mov
sbb
sahf
and
add
jbe
adc
inc
sbb
hlt
jmp
sahf
pushl
test
repnz
inc
in
daa
into
mov
mov
and
lods
pop
les
xor
dec
test
inc
jmp
sbb
jnp
inc
into
xchg
push
sbb
popf
cwtl
mov
xchg
mov
xchg
jo
mov
dec
inc
add
sub
pop
sbb
dec
mov
jae
push
cmp
push
ficoms
adc
xchg
cmp
jbe
xor
push
push
adc
sbb
jno
mov
inc
xchg
rolb
push
sbb
push
mov
add
cmp
push
dec
or
inc
push
add
inc
inc
push
jge
dec
mov
dec
dec
and
sub
icebp
movsb
out
cld
mov
and
push
or
cmp
jg
xchg
jecxz
ja
jg
popa
xor
data16
idivl
pop
dec
and
arpl
cmp
mov
pop
mov
in
leave
jnp
shll
cwtl
ljmp
jg
test
sahf
outsb
pop
iret
cmp
mov
sbb
xor
mov
mov
pop
stos
fistpll
adc
stos
lods
lcall
pusha
inc
jns
inc
popa
pop
mov
imul
mov
ja
or
testl
andb
popa
or
cmp
or
mov
mov
in
dec
jnp
lret
jbe
xchg
mov
push
es
loope
pop
ds
mov
xor
sub
cmp
push
cmp
and
and
mov
iret
cmp
js
int
mov
into
push
mov
hlt
fidivs
lock
pop
sbb
imul
push
jnp
push
adc
push
pop
mov
and
lret
lods
jne
movsb
pusha
outsl
call
jns
inc
sub
push
lret
pusha
mov
mov
add
and
stc
lahf
hlt
test
push
fsts
mov
mov
cmpl
sbb
xor
ret
push
sbb
outsl
movsb
dec
pop
lea
push
jne
add
imul
outsb
pop
jmp
xor
outsb
jle
loop,pn
movsb
push
xchg
and
cmpsb
adc
push
sub
inc
iret
or
fstpl
mov
xchg
dec
jl
inc
mov
arpl
push
pop
sub
shll
in
sbb
mov
sub
mov
adc
pop
cmp
pusha
jp
cltd
jge
mov
xchg
inc
test
aad
mov
in
test
fdiv
adc
push
repz
xchg
or
jns
fadds
loope
xchg
mov
mov
mov
push
mov
xchg
inc
addr16
fdivs
xor
adc
jg
adc
sbb
xor
xor
xchg
inc
pushf
push
cmpb
cmp
xchg
loop
cmpsb
push
leave
pusha
nop
nop
movsl
rcrb
sub
dec
and
ret
enter
inc
aam
nop
pop
outsb
in
add
lcall
mov
jne
adc
add
and
add
xchg
mov
push
sub
add
cmp
pop
xchg
adc
sub
fistpl
xor
jbe
dec
or
xorl
mov
xor
lret
mov
subl
sarb
or
in
adc
adc
cmpsl
mov
or
cwtl
roll
out
mov
pop
sbb
fwait
addr16
out
jne
add
shll
xlat
adc
mov
mov
arpl
inc
shrb
ror
bound
xor
dec
aad
fs
adc
fisubrs
push
imul
arpl
negb
int
jae
xchg
xchg
hlt
inc
mov
jmp
int3
inc
adc
jno
push
aas
int
push
mov
fildll
in
xlat
xchg
jbe
rolb
ret
xchg
scas
sahf
mov
mov
xor
jae
popf
leave
jno
int3
fistpll
stc
fists
mov
aam
xor
aam
ret
jle
out
shlb
or
enter
arpl
incl
xchg
sbb
sarb
sub
dec
push
and
sub
lods
sub
inc
xchg
scas
repz
idivl
xor
mov
pop
icebp
jns
adc
fdivrp
lods
jnp
lahf
ret
gs
leave
mov
repz
push
xor
data16
stos
lahf
jl
cltd
and
push
cmp
xchg
cmp
repz
xor
push
xchg
sub
cmp
push
and
movsl
movsb
xor
adc
decl
jle
repnz
icebp
inc
ret
ja
jp
sub
push
aam
loopne
cmp
outsb
aad
out
call
gs
mov
pop
or
mov
xor
popf
stc
loope
sub
cwtl
dec
mov
shrl
add
push
adc
dec
dec
cwtl
mov
fwait
movsl
test
sub
and
inc
sbb
adcl
adc
cmp
dec
int
inc
cmp
xchg
test
out
movsl
xchg
cmc
add
dec
jecxz
dec
call
mov
pop
pop
int3
int3
jle
cmc
ss
xor
jmp
cmp
out
push
out
dec
ja
pop
or
mov
int
mov
jl,pt
xor
cmp
das
mov
sbb
pushf
xchg
gs
dec
andl
and
aas
hlt
cmp
jmp
lods
imul
xchg
jecxz
les
pushf
cmp
inc
inc
pop
push
mov
ljmp
dec
hlt
dec
xor
fprem
aaa
scas
test
addr16
imul
into
fwait
ds
xchg
pusha
fistpll
and
inc
clc
jp
adc
inc
aaa
hlt
add
mov
cmpsb
scas
je
mov
and
xchg
push
push
pusha
mov
shrb
push
scas
or
add
xchg
les
lret
mov
add
fstpl
popf
jns
stos
mov
sbb
sub
cwtl
stc
adc
or
pop
xchg
mov
and
jo
xchg
notl
cli
ss
add
push
mov
in
sahf
xchg
iret
lods
jne
out
mov
lahf
insb
mov
xchg
dec
sahf
sbb
pop
fnstenv
cmp
aas
mov
add
shlb
lods
mov
lds
std
inc
sbb
cmp
popf
pop
es
cmp
inc
push
xor
inc
mov
aad
sub
pusha
enter
push
pushl
xchg
xchg
dec
cmp
iret
mov
push
push
sbb
push
dec
jge
add
fstps
test
pop
adc
xchg
shll
out
push
pop
enter
movsl
lahf
adc
loopne
push
frstor
cmp
int3
dec
mov
ret
jecxz
andl
cld
popa
stos
push
test
sub
fiaddl
mov
inc
data16
scas
mov
xor
dec
or
jbe
popl
xor
add
mov
lock
cmp
jg
adc
or
adc
subb
cwtl
pop
mov
pop
push
enter
outsb
fsubl
mov
inc
fwait
or
mov
cmp
and
xchg
xorb
dec
jnp
or
les
pop
sub
pop
shlb
xor
mov
out
push
dec
int
mov
nop
jl
push
rol
ret
adc
inc
mov
mov
adc
popa
cwtl
aam
and
sub
mov
jp
adc
and
pop
pop
mov
inc
popf
movsb
sub
jecxz
lahf
mov
sbbb
dec
xchg
inc
adc
pop
cli
cli
addr16
jo
adc
xor
leave
dec
push
dec
test
pminsw
rcr
insb
cmpsb
ds
xchg
mov
or
int
shll
rcl
xchg
or
lcall
mov
daa
test
cmp
or
loopne
rcl
aad
push
rcrl
cmc
fistps
in
sub
add
gs
hlt
and
bnd
mov
inc
ljmp
int
aad
call
jl
pop
mov
orl
call
jmp
lods
mov
mov
je
mov
cli
adc
aaa
xchg
les
out
pop
xchg
xchg
ror
cmp
xlat
arpl
test
lret
add
push
mov
and
push
fwait
jmp
jl
jp
shlb
fldt
mov
leave
add
jmp
imul
movsl
sahf
aad
mov
popf
jo
sub
ss
out
leave
xchg
ror
loopne
int3
push
add
mov
stos
mov
lock
pushf
lock
mov
leave
cli
and
filds
xchg
mov
pop
pop
pop
xchg
cs
aaa
js
pop
add
sbb
xchg
cmc
leave
cmc
enter
and
dec
sbb
inc
cwtl
and
cltd
dec
push
mov
outsl
fs
cmpsb
xor
ret
scas
loopne
pop
jno
fwait
mov
lods
dec
adc
push
cmp
push
repz
stc
and
loopne
dec
shrb
mov
sub
push
mov
mov
inc
jbe
sti
sbb
bound
sti
push
addl
mov
pushf
outsb
mov
jns
jne
mov
push
loopne
lcall
lock
addb
jb
std
jnp
lahf
imul
mov
scas
push
sub
pop
xchg
popl
int3
je
or
adc
dec
pop
int
push
pop
pop
jle
lret
add
pop
mov
pop
pop
mov
sbb
repnz
stos
rorb
dec
pop
notb
push
pop
adc
into
dec
movsb
lods
mov
cmp
popf
mov
insl
repnz
pop
mov
sarl
jbe
popf
push
mov
scas
loopne
into
xor
test
icebp
push
push
pushf
or
xchg
andb
decl
std
xor
push
xchg
pop
mov
int3
sarl
cmp
out
into
sbb
jb
xchg
jp
test
sbb
loope
mov
stos
dec
push
jae
in
xchg
pop
loopne
sub
pop
test
mov
pop
fs
jae
fcoml
fdivrs
outsb
mov
jns
in
clc
jmp
fistpl
pop
les
and
cmp
aad
stos
jmp
xor
fwait
mov
inc
push
sub
lret
add
cmp
pop
test
sub
lret
jns
das
fisttps
test
adc
dec
fidivrl
dec
bound
lods
aad
cmp
mov
jo
data16
pop
jae
sbb
pop
xor
int
idivl
imul
push
and
cmp
ret
mov
xor
in
ret
ret
lds
repnz
jb
add
pause
popw
push
enter
mov
mov
repz
in
pop
clc
sbb
xor
or
inc
mov
add
pusha
cmp
cmp
xor
aaa
stos
lret
out
and
xor
inc
push
out
negl
cmp
xor
test
push
dec
cli
push
or
xchg
and
dec
pop
cmp
cmpsl
dec
aaa
mov
dec
clc
dec
add
arpl
jne
jmp
push
jmp
test
stos
aam
jns
and
insb
les
inc
add
ss
lock
test
push
dec
mov
pop
scas
fisubs
adc
pop
pop
sub
movsb
mov
aad
js
cmp
lahf
mov
inc
xchg
data16
and
mov
ret
lods
test
fldcw
cmp
sub
mov
dec
je
test
repnz
xor
cmp
xlat
scas
dec
into
mov
add
push
fldenv
shll
xchg
inc
fsubl
mov
or
cmovne
movsb
scas
pop
push
mov
shlb
enter
mov
sub
jg
fprem
xchg
mov
jno
out
dec
inc
cltd
js
add
xchg
movsb
jno
into
push
pop
mov
inc
clc
pop
push
cmc
mov
rcrl
hlt
stos
ret
test
push
xchg
out
in
add
xchg
stos
pop
pop
pop
popf
popa
mov
outsl
jmp
shlb
xchg
arpl
mov
dec
or
arpl
subb
inc
es
push
xor
sti
addl
aas
ret
sbb
lock
inc
jnp
outsl
test
movsb
push
cmp
mov
add
ret
outsb
popa
mov
sarb
rclb
cmp
aaa
addb
outsl
mov
in
cmp
sub
jle
repnz
aas
jae
je
inc
dec
jb
push
or
aam
adc
insl
xchg
pop
and
adc
add
sahf
push
inc
mov
adc
adc
das
dec
fcomps
dec
dec
rcl
xlat
insb
mov
pop
dec
mov
shrb
ljmp
cli
loop
lods
or
dec
adc
mov
arpl
fbld
xor
int
idivb
mov
hlt
sub
shrb
stos
iret
iret
in
popf
mov
insl
mov
xor
push
pusha
mov
ret
or
in
fadd
call
mov
test
pop
mov
inc
lret
adc
std
dec
mov
jno
xchg
clc
inc
sti
and
into
je
xor
push
xchg
pop
mov
lds
in
in
push
idiv
clc
add
insb
orb
push
fisttpll
int3
or
ret
sub
xchg
xchg
cmpl
push
push
mov
xchg
test
mov
xchg
ljmp
arpl
mov
gs
mov
adc
out
test
mov
mov
and
les
test
fcompl
andb
pop
sub
mov
bound
push
mov
fisttpll
nop
inc
dec
loop
xlat
sub
sbb
pop
pop
inc
sub
mov
into
call
jo
scas
test
push
adc
rclb
mov
xchg
clc
adc
sub
fsubl
sub
dec
daa
sbb
mov
aaa
push
sbb
add
fdivrp
sub
dec
mov
push
js
adc
sahf
push
into
sub
cmc
call
shl
ljmp
xor
cmpsl
push
mov
iret
xchg
add
mov
shlb
in
mov
jle
cmpsl
shll
add
xor
lea
outsb
push
ja
sbb
add
xor
mov
push
adc
outsb
add
dec
les
xchg
sub
xchg
jo
pop
and
imul
jg
ss
xchg
jns
into
ret
cmc
dec
push
fcomps
mov
and
mov
mov
mov
sahf
mov
push
cmp
ja
cmpsb
mov
push
cltd
fldcw
push
sarb
mov
jge
in
jbe
cmpsb
movsb
or
imul
rorl
mov
out
adc
add
adcb
pop
cs
jle
add
jl
dec
imul
insl
mov
push
std
xor
pop
cmpsl
xor
shl
sti
je
sub
or
dec
call
js
out
jno
dec
test
ret
xor
fcomi
int
or
movsb
xor
shlb
inc
loope
cmp
xlat
icebp
js
jb
or
jb
adc
sub
call
xchg
xor
xchg
daa
and
jbe
test
int
int
enter
or
frstpm(287
mov
cmp
push
xorl
push
leave
loopne
xchg
mov
std
push
incb
cld
imul
fcmovb
lock
cltd
sub
cmp
jg
lret
dec
pop
rorl
addb
jmp
adc
jo
mov
fwait
enter
addl
push
hlt
add
pop
adc
addb
int
dec
lea
xchg
stc
test
and
adc
xor
sbb
leave
stos
shrl
sub
movsb
push
iret
negb
inc
add
push
fldt
test
imul
pop
icebp
nop
shlb
push
add
jl
pop
lahf
fsubrs
mov
lret
andl
adcl
dec
in
out
xor
jge
push
push
stc
dec
add
data16
pop
sbb
stc
jl
in
xchg
aad
push
jns
jno
pop
int
scas
cmp
xor
inc
stos
adc
iret
push
jnp
adc
mov
mov
lods
scas
sbb
cmc
in
js
pop
shlb
dec
xor
mov
imul
or
mov
jmp
out
add
int3
fsubrl
std
ja
imul
inc
mov
cmp
xchg
pop
daa
or
adc
in
jne,pn
adc
dec
mov
pop
dec
mov
mov
mov
idivl
es
mov
in
mov
adc
in
xor
cmp
or
sub
ss
inc
mull
mov
mov
pop
cmp
icebp
or
ja
nop
mov
pusha
or
lock
adc
mov
adc
mov
frstor
dec
stc
pop
mov
jbe
rcrb
cs
add
push
rsqrtps
int3
adc
pop
out
insb
mov
fwait
xor
mov
lock
and
mov
xchg
lret
push
cmp
stc
sti
add
sub
jg
sub
sbb
inc
pop
cmp
fcomi
popf
dec
ja
pop
scas
orl
sbb
mov
mov
cmp
fstps
sbb
dec
pop
jne
or
cmp
test
cmp
adc
les
cmpsb
pop
push
daa
fs
xor
adc
mov
and
jg
sub
mov
stos
jle
push
or
ja
scas
in
inc
sbb
xchg
loopne
xchg
popl
or
xchg
jnp
mov
and
dec
push
mov
jp
sbb
and
ds
js
and
mov
fdivs
mov
mov
ret
in
sub
stos
cmpsb
adc
fnstcw
push
xchg
xor
or
fstpt
adcb
or
dec
cmp
adc
jne
pop
cmp
mov
push
cmp
adc
mov
sbb
add
pop
adc
mov
shl
xchg
push
jae
jo
adc
testb
stc
ret
in
mov
popf
jo
fists
out
jecxz
insb
scas
push
in
add
lock
push
or
mov
mov
cmp
push
daa
or
in
icebp
aaa
jns
clc
sti
pop
shlb
loop
inc
cs
jg
scas
xor
out
sti
jp
mov
int
inc
inc
mov
stos
mov
sub
mov
xlat
shl
mov
int
push
or
inc
mov
xor
dec
jle
stc
jae
ss
fcomi
sti
pop
ret
adc
mov
jnp
mov
out
xchg
aam
rcll
popa
lretw
jbe
adc
lds
or
es
and
jae
lds
rol
scas
cmp
mov
loop
push
push
push
fldenv
dec
imul
mov
add
mov
xor
mov
mov
sbb
loope
je
es
xchg
imul
xor
loope
loop
push
mov
inc
xchg
push
cmp
xchg
mov
hlt
fs
push
xchg
mulb
clc
mov
mov
pusha
xchg
pop
xor
cmp
adc
and
xor
and
xlat
sbb
xor
lods
insl
add
pop
out
lahf
mov
dec
out
into
inc
loope
mov
mov
mov
and
sbb
and
sub
aam
mov
fnstenv
lret
cltd
cmc
xor
out
jmp
pushf
cmp
sub
xchg
pushf
jge
test
stos
insb
test
xor
fidivrl
push
out
fdivl
adc
mov
insl
add
pop
gs
es
icebp
repnz
push
insb
mov
dec
pop
mov
data16
roll
mov
jge
sbb
lods
push
dec
dec
jecxz
jae
push
xor
adc
pusha
scas
movsb
aaa
pop
push
cmp
decb
mov
push
adc
lock
lods
iret
xchg
lock
lret
outsl
div
adc
mov
push
inc
mov
pop
roll
jne
fisubs
pop
xchg
cmp
movl
in
mov
call
dec
dec
inc
mov
out
stos
cmp
and
and
dec
sub
cmc
mov
mov
cmpsl
imul
inc
cmp
inc
out
push
jo
xchg
cmc
shlb
inc
xor
push
daa
ret
mov
es
pop
inc
aaa
jl
pop
pusha
lcall
adc
xor
or
and
pop
mov
push
lea
jne
fistpll
test
xlat
inc
xchg
enter
js
jbe
lahf
lock
jbe
add
push
pop
cltd
sub
xor
je
dec
inc
push
sub
ret
sbb
adc
add
cmpsb
xchg
clc
push
xlat
rorl
cmp
pop
mov
cmp
ret
xchg
inc
inc
inc
and
test
xchg
sub
mov
arpl
aam
shrb
sbb
mov
dec
mov
cld
std
lret
and
xchg
aad
aas
push
add
jb
mov
pop
cmp
sbb
jnp
imul
push
outsl
pop
push
jmp
enter
cmpsb
dec
gs
cli
into
int3
pop
sub
inc
or
pop
mov
addr16
cmp
pushl
popa
adc
dec
xchg
dec
and
push
imul
add
push
xor
push
test
fildl
cmpsl
inc
add
repnz
leave
pop
or
lods
imul
fiadds
sti
out
sub
data16
jmp
push
xor
ret
cmp
sbb
mov
mov
pop
sbb
mov
dec
pop
push
je
mov
je
sbb
mov
and
ljmp
fmuls
or
test
or
data16
ficoms
xor
cmpsb
mov
mov
pop
cmp
inc
add
jge
xor
dec
push
fdivrs
shrl
mov
pop
dec
mov
stc
ds
in
xor
add
push
fucomp
adc
push
arpl
ret
or
and
ss
cmp
push
sub
jns
jnp
movsl
je
icebp
add
jb
push
pop
xchg
into
jle
push
jns
movsb
cmp
push
push
mov
in
lea
mov
out
cwtl
outsl
stos
sti
mov
add
and
in
je
xor
add
xor
loopne,pn
push
sti
cmp
mov
mov
jne
clc
stos
jp
mov
in
pop
mov
inc
test
mov
adc
cmp
adc
pop
insl
pop
xchg
scas
mov
and
mov
icebp
pop
sahf
adc
cmp
enter
scas
mov
xor
repnz
cmc
movsb
sbb
jbe
mov
push
xchg
movsb
rorb
cltd
cmp
popa
cmpsl
mov
ljmp
xchg
mov
pop
xor
in
in
or
inc
sub
adcl
scas
pop
cmp
ret
rcl
shrb
mov
mov
xchg
pop
push
jbe
jmp
outsb
xchg
movsb
dec
cmpsb
ret
and
sbb
mov
loopne
inc
aam
lock
or
jmp
jb
mov
adc
sbbb
cli
mov
ja
aad
pop
shlb
scas
or
test
adc
sbb
mov
sbb
adc
pop
add
pop
sbb
and
lcall
clc
fld
dec
mov
aas
lds
adc
mov
adc
in
insb
pushf
adc
pop
std
out
lea
rorl
cmp
add
sub
std
xorb
sub
stc
xor
and
pop
inc
adc
cld
cmp
or
adc
je
pop
jno
jnp
inc
adc
push
test
cmc
inc
hlt
xchg
cmp
or
or
sbb
push
mov
pop
pop
daa
jbe
and
push
sbb
pop
push
mov
dec
xor
jo
push
lods
dec
push
mov
call
or
cmp
js
cltd
cmp
xchg
andb
xchg
cmp
xchg
xchg
jmp
mov
clc
xchg
mov
out
push
repz
jp
popf
aas
push
sbb
jns
std
mov
movsl
cmc
mov
mov
popa
insl
add
pop
nop
daa
mov
rolb
or
mov
icebp
mov
push
stos
in
aaa
movsb
ds
jl
loope
pop
shl
or
push
rolb
sub
or
pop
fucom
xor
jle
cld
inc
or
jns
stos
dec
mov
xchg
cmp
mov
aam
or
dec
insb
ficomps
scas
leave
les
imul
je
int3
or
aad
jbe
scas
mov
push
lcall
es
mov
inc
movsl
cltd
cmp
dec
es
pop
aaa
idivl
add
dec
addb
ret
aas
loopne
mov
ret
pop
neg
jp
in
inc
inc
mov
pop
cs
sub
enter
aam
mov
es
out
xor
jg
mov
fmuls
mulb
mov
das
in
pop
sub
cmc
sub
mov
mov
nop
in
and
scas
dec
loopne
jp
sub
and
push
insb
sub
xchg
aam
cmp
lock
push
mov
clc
and
ss
xor
add
adc
dec
cld
es
mov
jns
out
sbb
jg
dec
lods
out
adc
and
sbb
stc
inc
add
push
dec
xchg
jl
dec
stos
fstpl
cli
sub
pop
bound
pop
test
enter
je
xchg
into
sub
mov
int
mov
fmul
das
mov
push
dec
add
mov
fdivl
ficoml
cmpsl
sub
sub
push
push
stc
pop
dec
mov
sbb
jg
mov
inc
lahf
jle
or
mov
lock
and
out
jno
sbb
cmp
inc
test
outsb
outsl
cmpsl
mov
addl
fldt
sarb
rcrb
fs
pop
pop
add
pushf
in
pop
cli
jb
movsb
sub
add
fs
push
loop
mov
js
add
or
pop
test
push
or
jg
adc
stos
inc
shlb
inc
dec
test
push
pop
push
jo
imul
in
inc
out
int3
inc
xchg
xor
cltd
imul
stos
mov
jecxz
xor
gs
insl
xchg
enter
sbb
sub
mov
sub
and
lods
jb
push
xchg
je
sahf
xchg
stos
xor
jecxz
inc
sbb
push
lods
or
les
mov
cmp
fimull
pop
inc
jg
out
jae
add
inc
cwtl
jecxz
pop
mov
cmpsl
push
hlt
push
sub
jne
imul
sbb
inc
mov
lock
cmp
imul
cld
and
dec
stos
fstl
insb
sbb
mov
in
mov
mov
ret
mov
repnz
cmpsb
nop
out
cmpsb
jb
mov
lds
leave
in
xor
mov
xchg
push
mov
es
unpcklps
and
lret
inc
test
inc
xor
in
sbb
inc
mov
and
mov
and
cmc
hlt
add
sti
mov
fisttps
inc
std
lods
or
lcall
cmp
mov
arpl
in
out
stc
xor
lret
fsubr
dec
pop
inc
inc
cmp
in
push
pop
sub
ds
pop
xchg
mov
xchg
aam
addr16
rcl
lea
push
out
repnz
outsb
pop
xlat
mov
lods
xchg
push
add
add
insb
inc
sbb
mov
pop
jno
ljmp
fnstenv
lcall
jmp
sub
fdiv
jno
mov
dec
mov
subps
es
cmpsb
mov
add
push
sbb
in
dec
jo
mov
loopne
cmpsl
mov
js
addr16
fbstp
add
cs
rcrl
mov
cltd
mov
hlt
hlt
sbb
lea
stos
cmp
mov
mov
xorl
out
pop
movsb
or
icebp
cli
daa
pop
lds
stos
or
and
mov
xor
stos
idivb
loopne
ss
rorl
adc
xchg
test
mov
movsl
cmpb
in
mov
sarb
mov
int
test
out
add
pop
pop
push
cs
xchg
cmp
fdivl
ret
inc
mov
movsl
push
pusha
push
lock
dec
in
cmp
ds
jno
or
imul
inc
fistl
lock
xor
and
scas
jne
pusha
fwait
lock
negl
push
and
sahf
push
mov
cltd
and
shlb
or
fwait
loop
imul
inc
xchg
call
mov
mov
pop
mov
fldt
pop
icebp
xlat
and
jge
insb
pop
xor
out
adc
sub
pushf
jmp
mov
add
mov
fstpl
jmp
dec
mov
test
xchg
mov
push
addr16
pop
sub
adc
jno
mov
inc
insl
cmp
stos
repnz
push
or
out
scas
mov
pand
dec
jmp
stos
ds
mov
jbe
cmp
adc
popf
iret
bound
xchg
pushf
xchg
mov
jne
clc
inc
push
stc
out
jnp
setbe
fmulp
sub
loope
inc
push
push
or
outsb
pop
push
jmp
push
mov
imul
inc
out
add
xor
xchg
ljmp
loopne
lcall
push
fdivrs
lds
adc
jno
push
adc
fidivs
insb
push
adc
in
sub
push
mov
rol
mov
inc
pop
xchg
enter
adc
or
xor
addl
sbb
mov
ja
push
jmp
push
dec
push
imul
lahf
inc
and
add
sub
fistps
out
dec
push
jecxz
sub
out
jp
imul
rol
dec
adc
add
fstps
push
pop
push
js
insb
cmpsl
insl
popf
repz
call
sti
cmp
sbb
mov
in
mov
scas
es
test
lret
movb
xor
mov
fsubr
push
add
fdivl
jno
psubq
dec
push
sbb
cmpsb
mov
data16
jns
subb
sub
lock
mov
sbb
and
into
xchg
cmp
icebp
rcll
aam
xchg
popl
mov
xor
test
xchg
fdivrl
pusha
decl
adc
in
xlat
addr16
into
push
fwait
imul
movsb
cmpsl
aaa
fdivrs
or
mov
mov
inc
xchg
push
fildl
mov
mov
xchg
fmulp
xor
imul
inc
inc
fstpt
and
pop
sbb
push
hlt
data16
fs
sbb
loope
je
or
dec
and
testb
adc
pop
leave
jecxz
pop
or
imul
js
push
sub
pop
adc
fdivl
lret
cld
daa
stos
pop
xchg
loopne
dec
test
xor
sbb
data16
cld
sahf
movl
aas
cmpsl
mov
xchg
mov
out
fwait
ss
cmp
lods
jmp
inc
dec
fimuls
outsb
fs
xchg
xchg
pop
ret
aad
xor
pop
xchg
or
ljmp
movsl
in
fcom
sub
xlat
dec
xor
pushf
ds
sti
sub
mov
xchg
scas
sub
int3
dec
inc
rclb
loop
mov
pop
lret
xlat
loope
or
or
test
in
jbe
jbe
and
jb
test
inc
insb
jl
mov
xor
sub
std
rcrb
adc
fwait
push
push
pop
ja
mov
push
enter
test
push
repz
movsb
pusha
outsl
cmc
mov
movsb
icebp
xchg
mov
hlt
or
xabort
inc
dec
popa
loop
cld
es
jge
pop
je
push
dec
adc
cwtl
inc
imul
sbb
stc
pop
jae
scas
enter
out
push
sub
fsts
sti
cmpsb
jp
cmpsb
mov
ds
pop
loopne
cltd
call
out
lret
xor
xlat
inc
sub
je
in
loopne
mov
out
dec
mov
mov
lods
xor
repz
inc
cmp
stos
sbb
sbb
adc
and
pop
and
icebp
repnz
xor
xchg
cmp
mov
arpl
scas
cmp
fistpll
ret
pop
std
loope,pn
rorl
icebp
pop
aad
xchg
adc
mov
mov
jecxz
adc
pop
shr
js
adc
cmpsl
flds
mov
jmp
xchg
pop
mov
pushf
insl
imul
je
mov
inc
mov
and
mov
mov
stos
lock
bound
fisubrl
lds
jae
xchg
adcb
inc
mov
sbb
add
or
in
popa
jnp
dec
fmull
jb
mov
ja
aaa
and
test
mov
ss
ret
dec
sbb
sub
daa
pop
stc
inc
rcrb
popa
js
lock
fwait
faddl
mov
mov
adc
repnz
jp
jno
xchg
push
aaa
push
and
je
addr16
sarb
stos
arpl
pop
jmp
sbb
das
das
fisubs
ret
shl
xchg
pop
mov
xor
insb
test
xor
test
ret
aaa
sub
pop
add
dec
dec
push
jle
and
push
nop
and
xlat
sbbl
imul
fsubl
rorl
inc
push
mov
mov
cld
jmp
jge
mov
or
jecxz
fisttps
test
loopne
sbb
int3
roll
add
popa
scas
sahf
mov
fcmovnu
or
fucomi
push
nop
out
movsl
cmpsl
mov
xchg
pop
or
or
cltd
in
into
daa
sub
jb
dec
cli
xor
ljmp
out
repz
fwait
addb
stos
cmpsb
pusha
push
rcrl
xchg
mov
mov
jg
test
sbb
xchg
push
stc
sub
push
mov
rclb
adc
cmp
cs
mov
fwait
lcall
or
or
adc
inc
test
pop
fisttps
lcall
stos
clc
idivl
sub
stos
or
sub
repnz
daa
or
aaa
push
enter
divb
sub
cmp
and
lea
pop
xchg
andl
dec
or
ret
inc
fwait
xor
imul
sub
sub
cli
popl
loopne
das
daa
xchg
ja
int3
orb
adc
jge
and
icebp
pop
dec
bts
rep
cmp
push
cmp
mov
cmp
add
xchg
jecxz
fadd
cmp
jb
insl
pop
inc
pushf
sti
cs
mov
inc
or
pop
cmp
jno
xor
add
cli
adc
mov
push
addb
add
xchg
pusha
int
push
loope
lds
xchg
sbb
add
out
pop
cmp
jae
push
mov
xchg
cmpsl
shr
mov
pop
dec
call
jle
cwtl
lahf
ds
ss
sbb
out
lret
jg
shlb
sub
xor
ficompl
push
ret
loopne
push
sbb
test
movsb
push
push
adc
fwait
dec
test
sub
xor
inc
pop
bound
mov
imul
loop
push
mov
dec
lods
push
icebp
adc
lds
int3
pop
shll
les
cmpsl
shrb
xor
pop
xor
mov
fs
in
ficompl
sub
or
loop,pt
mov
sub
mov
inc
cmc
adc
int3
adc
and
and
std
xchg
pop
shlb
sahf
xchg
movsb
mov
xor
push
pop
mov
inc
rcrl
int3
dec
pop
es
sub
into
pop
jg
mov
lret
pop
mov
aaa
lods
adc
sub
out
out
lods
jb
xchg
insb
cmp
inc
cmp
push
lcall
call
dec
cmp
dec
dec
jmp
pushf
ja
mov
sbb
adc
sbb
cmp
aam
in
pop
pop
xchg
cmp
js
push
in
pop
push
pop
jg
scas
sub
and
adc
dec
lret
dec
in
js
test
ret
jnp
cli
aam
ficoms
icebp
xor
repz
inc
xchg
push
inc
cs
push
xlat
std
adc
test
cwtl
xor
aad
mov
popa
aam
enter
ds
les
xchg
and
xchg
sub
outsb
sbbl
sbb
dec
xchg
xor
sbbb
adc
or
lock
nop
fistps
mov
les
nop
cmp
shrb
xorb
and
jmp
pop
pop
inc
insl
stos
bts
shl
and
inc
in
cmpsb
push
ljmp
xchg
sub
mov
pop
and
xor
loope
into
aas
add
stc
xchg
mov
dec
mov
add
in
adc
xlat
adc
scas
pusha
ficoms
inc
scas
cltd
push
pop
xchg
repnz
and
movsb
jle
hlt
pop
mov
add
pop
hlt
fdiv
test
sub
cmp
add
iret
movsl
aam
icebp
mov
xchg
std
jo
push
xor
outsb
repz
loopne
push
nop
sbb
mov
pop
cmp
jmp
pop
push
jb
imul
insb
dec
dec
pop
mov
popa
xor
pushf
ds
inc
roll
hlt
js
mov
lret
dec
in
mov
stos
inc
fstpl
int3
sbb
mov
std
jbe
inc
out
and
outsb
roll
jl
repnz
and
cltd
mov
adcl
sbb
orl
jbe
push
jl
jno
lcall
add
and
fists
push
loopne
das
push
mov
adcb
lret
xchg
leave
xchg
test
cmpsb
adc
lcall
xchg
and
pop
mov
sbb
mov
sti
jmp
mov
enter
adc
sarb
pop
outsl
shll
mov
mov
loop
outsb
adc
es
fldt
negb
leave
mov
pushf
leave
add
mov
or
inc
jge
lret
ss
lods
mov
std
jl
cmp
push
jg
ret
data16
cld
outsb
jp
inc
movsl
in
add
xchg
dec
xchg
lahf
cmp
jns
adc
repz
add
cmc
daa
rcll
les
sbb
bsf
or
fldenv
insb
cmp
inc
push
add
cmpl
movsb
mov
xchg
mov
test
adcl
fstpt
xor
pop
ljmp
idiv
out
int3
jle
test
sbb
es
or
inc
mov
pop
int3
xchg
call
hlt
notb
xor
popf
paddd
sub
push
test
movsl
mov
mov
sub
ror
les
dec
dec
mov
imul
shll
int3
jle
ret
cmp
xchg
test
and
popa
mov
in
xor
push
mov
inc
cltd
insb
arpl
daa
pushf
sbb
lcall
sahf
icebp
mov
dec
decb
pusha
movsl
lret
inc
jl
loope
repz
insb
mov
sbb
adc
scas
inc
jne
hlt
les
push
jge
xor
mov
mov
sbb
xchg
nop
push
fnstenv
dec
repz
cmpsb
scas
jg
decb
push
mov
in
dec
or
mov
mov
and
test
in
mov
mov
xor
push
out
enter
inc
aas
lods
or
sbb
or
xchg
cld
push
xor
mov
cmpsb
scas
mov
mov
loopne
shrl
scas
lahf
mov
inc
loop
mov
and
in
mov
enter
sti
dec
cli
imul
loopne
pop
scas
mov
jbe
call
insb
leave
dec
cs
jg
mov
jecxz
fistpll
fwait
and
loop
aam
hlt
mov
fcmovnu
xchg
test
in
mov
inc
sbbb
adc
mov
mov
aaa
add
add
fnsetpm(287
push
outsb
push
ja
stos
add
lcall
pop
mov
test
mov
jbe
push
lcall
cmpb
or
ret
xor
cmp
pushf
sarb
cltd
pop
mov
loopne
dec
lods
dec
xlat
xchg
aas
mov
icebp
push
adcb
or
movd
popf
mov
inc
imul
mov
sub
inc
add
test
hlt
pop
fisubrs
hlt
mov
add
fdivrp
sub
push
sub
iret
inc
shll
loope
push
mov
adc
dec
jge
fsts
dec
repz
mov
dec
scas
test
arpl
xchg
popf
movsl
mov
lcall
fisttps
mov
or
dec
jl
popl
xchg
imul
mov
ffree
push
out
dec
dec
in
lret
mov
iret
rolb
xchg
jmp
adc
call
sbb
cwtl
ret
cvtps2pd
xor
jl
mov
pop
pop
mov
pop
loopne
and
jmp
jle
movsl
jne
pop
nop
push
push
inc
in
xorl
dec
push
sarb
sub
leave
xchg
rol
out
jle
sbb
jns
sub
inc
dec
dec
sub
es
sub
mov
pop
test
hlt
xor
or
or
adc
mov
add
dec
fsubl
lock
cmp
pop
lock
les
add
clc
movsl
fsub
es
cld
and
sbb
push
jp
jmp
aad
push
fs
lods
jecxz
imul
adcl
popf
cltd
adc
outsb
dec
pop
jnp
mov
lret
add
cmpsb
lds
popa
jo
dec
fsts
fnstenv
divl
and
sub
out
mulb
or
adc
and
mov
xchg
pop
mov
dec
rcr
repnz
mov
lods
jns
cmp
or
adc
push
xchg
jp
fistpl
xchg
fcoml
mov
xchg
int
and
int3
iret
push
bound
jae
mov
push
rcr
loop
into
adc
adc
fdivl
dec
lods
push
shl
inc
cmp
xorb
leave
ljmp
orb
mov
lahf
repz
jo
xor
jne
int3
sub
jnp
cmp
xchg
push
push
lea
sbb
cmp
xchg
mov
jns
out
inc
or
adc
rorl
pop
jmp
mov
into
dec
in
mov
loop
subb
cmp
mov
push
mov
inc
or
jae
arpl
popa
push
into
add
in
adc
mov
pushf
aam
push
fimuls
jb
repz
jge
repnz
decb
push
scas
add
jb
cmpl
enter
stos
jecxz
mov
sbb
rcl
and
ret
test
pop
inc
jmp
mov
sbbb
ss
jge
cwtl
aad
lods
scas
cwtl
pop
sahf
push
sub
stc
fiadds
out
mov
sti
lcall
jg
or
fildll
xor
repnz
cwtl
ficoms
push
dec
lods
dec
into
push
dec
lods
mov
add
mov
push
scas
mov
rcr
sbbl
push
aas
push
enter
dec
adc
push
mov
inc
call
jae
negb
cmpsb
out
popa
stos
vphaddbw
in
and
mov
test
shlb
mov
out
inc
pop
xchg
and
pop
cld
jmp
or
pop
icebp
xor
dec
or
mov
imul
hlt
mov
into
test
jecxz
cmp
and
fists
push
outsl
jnp
shl
push
push
or
lcall
and
cli
dec
clc
das
in
movsl
push
les
jno
daa
call
xchg
sarl
push
and
aad
cmp
outsb
arpl
add
in
or
pop
jo
leave
lcall
cwtl
test
pop
mov
push
xchg
pop
es
dec
add
dec
sub
push
rclb
dec
sub
popa
cmp
sub
push
jmp
outsl
fst
idiv
clc
repnz
xchg
ss
inc
and
mov
ficompl
sti
test
sub
aaa
das
cmp
rorl
xchg
or
push
adc
test
stos
sahf
enter
add
int
mov
mov
inc
sub
nop
lock
cmp
pop
mov
test
and
stos
pusha
sbb
xchg
ret
shlb
mov
push
loope
lahf
and
fs
and
push
xor
out
into
or
push
sub
jp
or
stos
jmp
cwtl
or
inc
push
and
pop
sbbb
sarl
mov
cmp
mov
mov
inc
fwait
mov
cld
popa
xchg
cwtl
aas
mov
sbb
sub
hlt
inc
imul
xchg
push
in
loope
test
dec
ljmp
mov
push
orl
xchg
jo
in
inc
lret
clc
inc
lret
jl
and
pop
add
lret
pop
mov
fidivs
sbb
shlb
sbb
add
int
pop
push
fsubl
popl
cwtl
sub
inc
pop
dec
call
mov
stos
ljmp
or
into
push
in
dec
push
mov
in
mov
mov
outsl
fwait
cmpsl
pop
sub
mov
add
lods
jmp
in
and
jecxz
leave
rcr
sbb
lea
mov
out
inc
sub
cwtl
xchg
xchg
add
pop
mov
cmp
mov
sarb
lock
daa
pop
daa
inc
idivb
or
sar
cli
out
fisubrl
aam
aas
pusha
adcl
jns
addl
imul
out
shlb
cwtl
inc
mov
insb
ret
inc
das
sti
inc
xchg
dec
push
inc
and
xchg
lods
xchg
pushf
inc
fiadds
sbb
std
mov
cmp
or
sub
js
mov
cs
addr16
add
insl
aam
jp
pop
loope
cmp
das
outsb
xchg
dec
mov
int
and
adc
in
inc
rcrb
add
xor
push
add
mov
pop
cld
and
lret
push
mov
inc
jg
dec
fstpt
mov
sarl
sbb
sub
xor
dec
xor
insl
mov
in
xchg
xor
daa
int
jno
or
adc
in
sub
jg
sub
inc
mov
aas
idivb
mov
add
jne
xchg
jo
out
push
add
imul
fisttpl
out
and
lds
popf
xor
adc
cmc
pop
jae
mov
adc
jnp
dec
out
gs
pop
aad
leave
ret
sbb
mov
in
mov
jns
cmp
inc
cmp
lds
dec
adc
cwtl
loop
pop
and
add
adc
in
lret
dec
mov
sub
je
inc
nop
mov
aaa
out
dec
fdivrs
jecxz
jae
add
gs
sub
mov
inc
fistpll
inc
scas
scas
inc
arpl
lret
divl
ja
in
cld
dec
xchg
in
push
out
ds
adc
in
xchg
dec
sbb
into
test
xchg
std
inc
push
insl
mov
pushf
sarb
arpl
jae
cmp
gs
sbb
xchg
push
shlb
imul
lea
pop
cmp
enter
cmp
aaa
mov
pop
mov
out
fidivrl
pop
jle
mov
mov
xor
or
cs
stc
std
repnz
push
sbb
cmc
sub
sbb
ret
pusha
push
imulb
jno
mov
sbb
xor
je
sub
sub
pop
clc
fcmovbe
shl
cmp
push
jae
or
push
out
mov
ret
mov
cmp
sub
xchg
fcmovnb
push
xor
shrb
xchg
es
fcmovbe
lret
push
adc
inc
rcrb
fs
stos
pop
jle
mov
xchg
ljmp
loope
adc
mov
jo
mov
sub
add
inc
jns
call
int
movsl
dec
sbb
push
hlt
ret
adc
add
das
inc
mov
xchg
sbb
mov
lret
inc
sti
stos
fcmovne
or
xchg
test
sub
orb
aad
push
push
sti
and
nop
or
adc
sub
jo
sahf
jo
outsl
out
mov
cld
inc
mov
mov
dec
adc
adc
xor
aam
dec
push
xchg
sti
add
xor
and
mov
dec
mov
stos
stos
lahf
jae
rclb
imul
das
mov
movsb
push
mov
out
mov
add
pop
lods
lret
xor
xchg
stc
outsb
adc
xorl
decl
jge
push
jl
test
mov
popl
aas
imul
xor
outsl
xchg
cwtl
inc
in
jo
mov
mov
js
aaa
sbbl
fildll
or
xchg
insb
mov
data16
ret
xchg
rolb
ss
and
sub
stos
and
jmp
mov
fstl
clc
addl
lret
loop
mov
pop
cmp
imul
mov
sub
loopne
xchg
push
jo
mov
cmpsb
jb
sub
in
xchg
pusha
jmp
lret
push
xchg
adc
and
sbb
fimuls
pusha
cmpsl
stos
or
xchg
xorb
out
inc
mov
cmpsl
dec
cmpb
out
xchg
je
popf
xchg
jb
int
inc
mov
or
jge
rol
hlt
std
xchg
jmp
in
out
shrl
dec
xchg
icebp
cld
jns
mov
lods
mov
jp
adc
push
mov
inc
cmp
lock
mov
and
aam
jb
les
leave
xor
out
inc
sbb
movsl
ss
adc
or
cmp
fwait
sub
pop
std
xchg
ss
xor
repz
das
and
inc
cmpsb
jne
or
and
push
dec
inc
push
aaa
dec
aaa
sbb
and
lods
pop
fimuls
sub
jle
mov
add
lret
or
xorl
adc
mov
pop
jmp
iret
and
mov
push
fcoms
enter
out
xchg
lret
cs
in
adc
xorl
nop
inc
mov
out
pop
popf
test
jle
loopne
jle
decl
outsl
movl
rcrl
flds
pop
push
push
mov
pop
icebp
add
pop
jb
sub
xlat
out
xlat
inc
inc
icebp
add
lock
ret
movsl
dec
sbb
inc
gs
bswap
fidivl
push
fs
dec
sub
repnz
mov
lods
idivl
pop
dec
ficoms
stc
xchg
mov
cmpsl
push
mov
sub
push
popa
xchg
insl
aad
mov
sbb
and
jo
or
sub
add
daa
sbb
fstpl
inc
ss
or
jb
cwtl
jg
xchg
hlt
negl
or
add
or
stc
lahf
jno
push
popf
xchg
sbbl
leave
mov
jp
push
jp
lret
add
xchg
mov
jb
shlb
dec
cmc
fs
and
push
cmp
inc
mov
popf
lcall
xchg
loopne
inc
jge
test
jno
lock
and
adc
adc
iret
or
inc
nop
cs
pop
sbb
push
cmp
call
jne
mov
xchg
cmpsl
pop
cwtl
imul
popa
jmp
sub
push
add
mov
mov
adc
in
xor
or
mov
lret
aaa
iret
in
add
or
into
xchg
adcl
cmp
enter
mov
cmpsb
pop
or
adc
lret
popa
adc
mov
pop
lods
stos
imul
out
and
icebp
mov
or
jmp
push
pop
orb
stos
jle
icebp
imul
daa
or
lret
repnz
mov
inc
lods
mov
mov
in
xor
mov
fisttps
aaa
xor
lret
mov
loope
lods
push
in
jle
mov
push
std
push
mov
js
cmpsb
jbe
sub
push
inc
add
ffree
jne
dec
mov
push
xchg
inc
adc
nop
inc
mov
sub
div
out
stos
push
mov
movsl
lods
addl
pop
inc
rcrl
stc
fbld
mov
mov
je
loop
loope
imul
je
push
ret
jmp
jno
aad
jp
mov
jg
and
movsl
arpl
cld
fs
xor
fnsave
push
rorl
fldt
add
mov
sub
push
cmovs
inc
pushf
jle
push
dec
test
stos
sub
popf
aas
stos
ror
mov
sub
cmpsb
loope
cmp
clc
enter
ficoms
sub
adc
sbb
mov
jecxz
lock
inc
sbb
jmp
sbb
cmp
xor
insl
push
ja
cwtl
test
aam
xchg
inc
movsb
pushl
test
cmp
andb
clc
mov
jo
cmp
ja
xchg
pop
mov
mov
and
pop
test
lcall
jns
cmp
xor
mov
jp
pop
push
in
lods
pop
shlb
dec
mov
fstps
inc
pop
jle
xlat
add
lret
inc
pop
jmp
mov
mov
adc
pushf
mov
loop
jb
rcrl
adc
dec
imul
cmp
js
mov
shlb
xchg
loope
jge
mov
outsb
dec
setnp
pushf
sub
cmp
inc
jae
cs
dec
mov
popa
jns
mov
stos
dec
fadds
adc
mov
jg
das
call
daa
repz
aas
xor
pushf
sub
scas
imulb
sub
inc
mov
jno
rorb
lds
adc
loope
jmp
xor
bound
mov
push
or
ficoml
das
out
mov
cmp
add
jnp
add
call
fs
xchg
jle
adc
mov
xor
fnstenv
adc
mov
jmp
sub
sbbb
cwtl
inc
popf
idivb
or
sbb
into
mov
outsl
fidivl
xchg
mov
mulps
fs
jl
inc
jno
jae
push
cmp
hlt
xor
pop
sub
lods
popa
mov
pop
nop
mov
cld
mov
call
push
dec
xchg
addb
out
cmp
andl
fwait
add
cmp
mov
jp
adc
out
cmpsl
xlat
loop
push
int3
pop
lods
int3
or
mov
sub
inc
dec
mov
add
and
pop
cltd
enter
adc
outsl
pop
in
jmp
and
lods
and
mov
sub
sahf
sub
into
clc
xchg
lods
iret
and
gs
xor
inc
inc
or
cld
sti
cmpsb
repnz
out
mov
jp
and
xchg
ds
mov
jg
out
lea
cltd
movsb
mov
mov
outsl
add
xlat
das
xor
into
jmp
mov
imul
mov
frstor
es
add
xchg
out
lret
mov
push
pop
subb
xor
stos
push
pop
addr16
gs
inc
add
enter
inc
aam
fsubs
push
mov
add
lods
jecxz
pop
stc
cli
cmp
mov
pop
in
bound
sbb
outsb
add
inc
stos
inc
cmp
aad
insb
pop
lret
inc
mov
inc
test
bswap
xchg
dec
lcall
lcall
scas
addr16
lods
sub
inc
sarl
inc
jle
and
xchg
push
mov
mov
pop
push
cmp
scas
adc
mov
test
sub
lret
out
inc
arpl
icebp
inc
push
mov
dec
cmp
scas
mov
jmp
clc
into
and
mov
xchg
xlat
adc
fnstenv
push
adc
and
ret
mov
clc
ret
ret
les
repz
add
lret
cmp
or
enter
xor
dec
jmp
mov
xor
ds
aas
sti
out
fldenv
comiss
iret
scas
xlat
mov
ljmp
fisttpl
jno
mov
repz
pushf
int
xchg
cltd
mov
mov
cmp
fcmovnbe
stc
or
pop
dec
jnp
sub
lea
stos
out
in
enter
pop
sbb
es
stos
jecxz
mov
push
push
roll
inc
push
mov
dec
mov
adc
sbb
scas
pushl
jnp
pop
jns
les
jp
enter
lods
pop
cld
push
lds
cmc
xor
int3
aaa
int3
nop
xlat
inc
sub
shlb
dec
and
stc
or
enter
les
repz
mov
mov
ljmp
adc
lds
xor
and
dec
ret
adc
or
xor
push
xor
dec
hlt
mov
sbb
popa
xor
adc
push
and
cmp
push
and
mov
aam
add
push
rorl
push
jg
mov
cmp
out
outsb
xor
subl
out
outsl
outsb
imul
cli
add
icebp
in
mov
ret
pop
mov
pop
lea
pop
xchg
sbb
lea
jne
xchg
scas
inc
mov
lds
xchg
pop
cmpsl
pusha
fsubrl
push
mov
cmp
xor
inc
cmpsb
cmp
push
cltd
push
ret
test
and
adc
out
cli
in
negl
jmp
xor
lds
sub
and
sbb
rclb
sbb
inc
push
jo
and
lock
in
test
push
roll
jne
cmpsl
and
lea
pop
adc
mov
adc
das
mov
gs
sbb
sbb
test
xchg
add
fdivrs
xlat
dec
mov
mov
cmp
std
fisttpll
sahf
inc
cltd
sti
cmp
pusha
xchg
xchg
cli
daa
cmp
sub
in
xchg
mov
xlat
bound
sbb
push
dec
divb
add
pop
sub
adc
int3
mov
sub
mov
jns
or
jmp
int3
mov
add
jle
sbb
ds
jg
add
imul
jne
rorl
in
movsb
mov
addl
ret
adc
jbe
movsb
dec
adc
icebp
popa
pop
fdivrs
aaa
popl
ja
sub
or
xchg
jae
inc
aad
add
lret
int
fwait
pop
shll
addr16
js
add
cmp
xchg
aas
dec
push
sbb
or
mov
xchg
pushf
scas
cmpsl
mov
jns
ret
pop
pop
aam
shrl
movsb
jb
xor
jo
mov
mov
cmp
int3
ljmp
rep
inc
push
int3
add
xor
movsb
mov
in
insb
push
sub
sbb
cmpsb
dec
adc
sub
xchg
mov
popl
subb
and
sarb
and
out
push
in
rolb
loopne
icebp
fisubs
or
mov
invd
test
test
xchg
loop
jl
xor
popa
xchg
stc
dec
mov
out
lods
imul
mov
test
cmp
loope
mov
xchg
lahf
dec
ror
stos
fiaddl
sbb
adc
push
xor
adc
dec
or
leave
int
stos
in
popa
pop
lret
mov
insb
xor
mov
daa
and
les
push
scas
lret
ss
into
cwtl
cmp
sub
push
mov
int
jne
adc
stc
sub
sub
sbb
jg
movnti
push
and
jnp
add
xchg
popf
push
iret
jle
out
add
pop
aad
add
mov
jmp
and
lret
inc
xchg
das
inc
cmp
or
out
in
shl
inc
es
xlat
pop
enter
stos
mov
cmc
data16
aas
inc
jg
lea
add
mov
shlb
mov
mov
imul
adc
xor
enter
ror
addr16
mov
lret
mov
je
sub
jp
sub
mov
sub
les
rorb
fxch
add
sbbl
and
fdivl
sbb
scas
pop
inc
inc
mov
dec
stos
lds
outsb
adc
sbb
sti
fucomip
into
pop
mov
lods
inc
mov
andb
jge
sbb
sub
jle
jge
or
mov
push
loopne
je
std
loop
hlt
add
mov
into
add
mov
stos
and
push
int
mov
lret
stc
adc
insb
pop
pop
lret
out
ret
add
inc
cmp
jecxz
lods
xor
cmp
adc
mov
inc
xchg
testl
add
pop
into
dec
sub
inc
pop
sub
fcmove
xlat
mov
mov
std
mov
ficomps
push
mov
mov
jecxz
jecxz
sub
sahf
xchg
xchg
lahf
ss
mov
jl
add
sub
repz
out
in
jp
clc
push
int
jae
pop
das
dec
ficoms
mov
mov
cmp
gs
xchg
adc
xor
rcl
fcmovbe
add
dec
xchg
aas
ljmp
subb
mov
test
jg
xchg
imull
lcall
not
fwait
sbb
mov
outsb
scas
lock
movsb
cmpxchg8b
into
fmull
dec
movsb
pop
or
cmp
lret
jnp
push
icebp
enter
clc
fcompl
call
push
mov
jmp
jns
insl
insl
inc
ljmp
cmp
aam
data16
mov
out
mov
int3
sub
dec
addl
nop
adc
dec
pop
insb
out
mov
sub
push
and
sub
lds
es
xor
xchg
adc
in
cmp
dec
lcall
ret
push
sub
sbb
loope
add
adc
or
and
or
pop
scas
shll
nop
or
aad
sub
xlat
rcl
ret
mov
and
mov
inc
fwait
cmp
popa
pop
or
pushf
xorb
pop
sub
je
js
pop
sarl
pop
mov
and
push
shlb
stos
insl
lds
stos
fstp
fcoms
ds
xor
mov
repnz
aam
insl
mov
mov
pop
cwtl
rcrb
addr16
xor
push
push
inc
pop
repnz
push
lcall
fdivrp
lds
jns
dec
dec
cltd
orl
push
fbld
push
fld1
ret
hlt
sbb
test
jns
mov
test
dec
sbb
jg
sbb
aas
dec
and
sbb
stc
ja
mov
adc
call
xchg
adc
aam
push
sti
inc
insb
inc
daa
pop
enter
aad
inc
in
mov
cmp
push
out
dec
icebp
fistps
dec
in
ja
mov
jl
adc
or
cmp
mov
mov
repz
ja
mov
pusha
data16
push
test
mov
cmp
test
xlat
rolb
mov
xor
daa
pushf
xlat
out
sti
jnp
andl
dec
mov
nopl
jns
sbb
aas
cs
ds
mov
mov
sub
out
int3
sub
mov
sbb
je
jns
push
je
int3
int
add
cwtl
loop
popf
jbe
mov
cmp
repnz
push
or
xchg
hlt
rorb
inc
in
faddl
aaa
clc
repz
shrb
movsb
mov
jnp
out
fildl
out
loopne
lods
mov
push
jg
bswap
rcrb
jmp
xchg
iret
sbb
lds
scas
xor
xor
in
test
and
dec
stos
pop
push
fidivl
ja
icebp
or
call
fbld
stos
jmp
or
rorb
cmpb
shrl
movsl
mov
xchg
or
in
jbe
movsb
call
sbb
movsb
inc
fstp
scas
repz
notl
sub
dec
mov
les
mov
xlat
pop
and
into
fistpl
mov
push
jg
ret
xor
mov
pusha
jno
inc
mov
mov
xor
das
std
in
outsl
out
mov
mov
test
mov
cli
xchg
xor
fs
ret
cmc
out
lret
out
and
in
mov
adc
daa
mov
xchg
jb
inc
es
lret
jne
sbb
stc
addr16
sbb
pop
lret
cltd
xchg
scas
pop
adc
cmp
adc
inc
mov
sbb
mov
aad
sbb
mov
xchg
xor
cmp
mov
inc
ljmp
lea
scas
and
sbb
jmp
imul
push
movsl
lods
mull
pop
imul
jp
rcr
incl
dec
inc
lret
sti
xor
out
clc
jg
cs
loop
xor
mov
mov
sub
outsl
xor
outsb
xchg
js
pop
dec
push
popf
fs
add
mov
inc
sub
lock
outsb
or
pushf
loopne
sub
imul
lcall
push
xchg
or
dec
push
and
adc
movsl
adc
mov
push
mov
les
jo
pop
aaa
adc
adc
xor
mov
and
out
out
sub
lds
push
pop
clc
lea
pop
jns
dec
or
xor
ss
dec
xchg
xchg
inc
jo
aam
lods
lret
lods
ficoms
pop
inc
loope
popf
mov
sub
insl
inc
into
jne
ficompl
pop
shl
push
jge
or
xchg
mov
add
dec
inc
jo
add
shrb
inc
stos
mov
cmp
shl
andb
xlat
inc
jb
mov
inc
jnp
mov
es
inc
xchg
mov
xchg
push
loopne
cmpsl
push
adc
sti
rorl
shrl
mov
rcll
mov
int3
mov
and
inc
orb
pop
inc
test
lcall
lret
xor
mov
pop
sub
mov
adc
scas
mov
push
dec
pushf
mov
cmpsl
mov
fcomps
xchg
test
adcw
insb
ret
scas
sub
das
xchg
add
dec
mov
mov
adc
sbb
cmp
imul
mov
jecxz
adc
fisttpl
push
das
adc
fistps
fmuls
bound
or
cwtl
clc
movsb
lock
out
or
lcall
cmpsb
repz
add
pop
stc
jae
jmp
imul
je
dec
cltd
leave
cli
mov
scas
in
cwtl
mov
stc
jecxz
mov
loope
das
insl
test
lods
inc
div
imul
mov
mov
out
jp
mov
mov
testb
push
out
jo
sahf
push
or
jne
or
insb
mov
sub
imul
mov
cmp
arpl
mov
xor
ljmp
insl
js
aam
cs
js
sbb
jno
popa
dec
mov
ficoms
jecxz
pop
adc
xor
lret
adc
pusha
dec
repnz
dec
arpl
push
gs
out
cwtl
insb
cltd
int
mov
je
inc
add
jno
lahf
push
js
dec
fldcw
adc
call
inc
shl
xchg
das
xor
imul
inc
mov
jmp
adc
lods
out
imul
daa
mov
sbb
lea
outsl
mov
sub
mov
or
xchg
xchg
cld
xor
mov
jle
ret
gs
mov
xchg
fs
aaa
cmp
mov
mov
cli
cli
push
push
mov
mov
pop
fldl2t
popf
inc
jle
adc
cltd
mov
push
cld
or
sub
divb
jnp
or
jo
pop
dec
mov
push
cmp
int
inc
aas
arpl
out
xchg
in
mov
mov
mull
adc
frstor
dec
lods
in
sbb
aad
loopne
test
xchg
repnz
cmpsb
adcb
and
imul
xor
sahf
cltd
cmp
mov
pusha
addr16
cmpsb
bound
repnz
loopne
xchg
dec
repz
in
add
or
xlat
mov
push
dec
arpl
scas
mov
pop
jae
and
fwait
insl
shll
fldt
nop
mov
imul
pop
icebp
mov
push
and
jmp
or
and
movsl
push
push
ffree
fcomp
aam
inc
movsl
stos
sub
daa
fscale
dec
adc
adcb
sbb
cmp
loope
cli
mov
scas
mov
pop
repnz
cmp
mov
push
test
and
inc
add
out
cmpsb
lcall
jge
push
dec
or
leave
cs
pop
ljmp
and
aad
bound
orb
scas
mov
jbe
add
adcl
xchg
inc
mov
into
cli
sbb
fildll
sti
mov
adc
or
rcrb
in
ljmp
push
int
dec
jmp
js
push
pop
mov
cmc
testb
subl
jl
loope
nop
lcall
cmc
dec
mov
and
shlb
mov
fbstp
and
pop
mov
movsb
adc
push
mov
xchg
mov
push
sbb
sub
pop
cmp
xor
inc
cmpsb
jo
adcl
cld
mov
xchg
or
dec
shrb
subl
dec
dec
ljmp
adc
into
int3
adc
cmpl
jp
jmp
lds
jne
test
mov
inc
aas
lret
sbb
mov
push
ret
xchg
inc
sahf
scas
xchg
ja
js
dec
pop
in
ror
imul
fstps
ljmp
and
sbbl
jg
lret
cmp
sbb
add
test
dec
je
andl
pop
pushf
in
push
add
pop
xchg
push
or
out
mov
call
je
leave
dec
imul
push
cmpsl
sub
loop
or
xchg
rcl
into
rcl
cmpsb
bnd
sub
std
adc
outsb
mov
and
mov
fstpl
add
adc
mov
push
pushf
jns
pop
sti
fcompl
and
mov
adc
sbb
or
jg
xchg
jb
xchg
js
inc
cmp
mov
cmp
lahf
clc
push
jg
imul
or
adcb
in
in
cmpsl
and
pop
xlat
xor
test
int3
dec
fwait
cld
xor
filds
mov
lods
xchg
adc
scas
ret
ret
dec
or
shlb
fadd
adc
sbb
loop
add
cmpsl
fld
scas
cltd
and
test
mov
outsb
imul
inc
mov
bound
xor
inc
shll
mov
and
or
sahf
and
jecxz
repz
test
pop
add
dec
mov
dec
mov
filds
pop
xor
out
ret
fstp
push
jle
jle
scas
out
fs
pop
orl
aam
mov
adc
inc
mov
icebp
jo
aam
stc
sbb
sub
ret
inc
inc
insb
and
test
cmp
add
push
dec
stos
stos
adc
shl
aaa
add
mov
pop
das
add
rcll
shrl
mov
je
enter
jecxz
sbb
out
cmp
sub
in
add
mov
or
ds
aas
bound
or
outsl
mov
loop
icebp
imul
cmc
mov
inc
stos
pop
push
push
je
and
pop
clc
sub
xchg
loope
and
stos
pusha
push
repnz
adc
mov
outsl
aaa
xchg
fidivrl
ljmp
call
push
shll
sub
pop
pop
in
add
pusha
jg
inc
mov
jo
aad
xchg
repnz
jne
cmpsl
xor
aaa
iret
sbbb
pop
int3
ret
pop
xchg
mov
fsubrs
test
mov
out
movsl
mov
xor
ret
jecxz
cmp
sub
dec
xor
lcall
xor
mov
and
test
hlt
xor
clc
xor
mov
adcl
mov
xchg
lea
daa
sbb
popl
ficomps
pop
mov
jbe
cmp
jns
cmpsb
xlat
inc
ds
lods
adc
pop
jmp
jmp
icebp
gs
sbb
jnp
pop
iret
jmp
cmp
fwait
rclb
mov
push
mov
ds
jnp
in
fchs
in
cmp
cmp
push
mov
popa
xchg
mov
push
mov
pop
xchg
pop
out
aam
call
pop
scas
or
push
popf
fwait
aad
mov
cwtl
out
or
mov
push
adc
popa
adc
jae
imul
xchg
mov
sbb
pushf
add
cltd
sbb
movsb
dec
jmp
pop
andl
push
mov
jp
mov
sub
lods
in
xchg
dec
dec
add
mov
xchg
int3
dec
popa
jns
and
cli
bound
push
sbb
cld
sbb
push
lea
adc
xor
out
inc
push
adc
movsb
cmp
sbb
mov
ljmp
clc
jb
rsm
shlb
das
sub
in
push
outsb
push
hlt
pop
jno
sbb
je
mov
gs
shl
pop
ss
sbb
adc
or
cmp
ret
xor
fwait
test
inc
add
jp
pusha
add
add
stos
mov
xorl
pushl
sub
hlt
push
and
pushf
sbb
aad
inc
imul
push
shll
fdivrp
xchg
cwtl
outsb
std
or
imul
pop
xor
xlat
lods
xchg
aad
insb
movsl
loop
and
sub
add
jns
jg
sbb
ds
aas
xor
subb
stos
xchg
stos
outsl
test
add
cmpsl
mov
int3
cmp
cmp
scas
std
rolb
dec
xchg
and
out
mov
jns
test
mov
jmp
push
or
sbb
inc
adc
pop
test
test
fcoms
cmpsl
push
subl
inc
xchg
lds
ret
das
rcrl
subb
mov
dec
or
pop
mov
push
or
add
cmc
cwtl
les
pop
testb
cltd
pop
xchg
iret
push
cmp
lock
jno
pop
or
adc
and
push
push
xor
inc
in
shrb
push
sbb
sahf
jmp
fucompp
mov
sti
in
daa
out
cmp
scas
pop
jecxz
sub
sbb
fcompl
andb
pop
add
sub
xchg
cmc
lret
pop
jp
jno
daa
nop
and
cs
les
sbb
push
jmp
jg
ja
push
call
dec
cmp
mov
jae
rclb
inc
das
lret
push
pop
std
adc
xor
iret
mov
lret
xor
call
and
dec
fildll
dec
daa
and
inc
mov
or
movsb
idivl
aad
lods
mov
fsts
clc
cmp
pop
test
fs
test
jns
sub
rcl
mov
scas
sbb
inc
ljmp
cmp
sbb
imul
or
ds
cmp
and
cmp
pop
movsb
lea
dec
xchg
push
xor
xchg
push
addb
inc
xchg
addb
sarb
jp
push
add
mov
jns
push
mov
push
std
inc
push
outsl
bound
stos
mov
mov
inc
fildll
loop
mov
jmp
leave
rcl
dec
subl
or
mov
sbb
pop
bound
xchg
inc
pop
in
stos
xlat
and
jge
jo
sub
outsl
cmp
imul
sahf
jnp
sub
fisttps
sahf
loopne
inc
jmp
pop
cmp
add
outsb
sub
mov
xchg
push
inc
clc
xchg
ss
fsubrl
into
je
in
stc
jne
scas
icebp
push
jl
out
gs
jo
mov
pop
imull
cltd
jl
fs
shlb
xor
stos
shl
sub
jne
out
mov
lret
and
lret
in
popf
imul
dec
mov
repz
cmp
sti
pushf
jecxz
xchg
lahf
out
pop
xor
addr16
mull
sub
xor
mov
mov
cld
jbe,pt
jmp
test
pop
sahf
iret
jge
jp
mov
inc
and
xchg
cmpsl
inc
pop
movsb
inc
daa
js
xor
mov
insb
decl
int
inc
xchg
sbb
aad
sbb
testb
pusha
fucomi
or
xchg
scas
dec
push
push
aas
sub
xchg
push
inc
pop
fdivrs
ljmp
pop
packuswb
pusha
shr
push
xchg
xchg
pop
cmp
psubsb
imul
mov
out
jl
dec
sbb
outsl
push
sbbl
xchg
add
add
jp
and
sub
sbb
mov
loope
lea
test
fcoml
mov
aaa
jp
push
push
repz
mov
cmc
and
outsl
xchg
jg
sub
jo
xchg
rorb
mov
cmp
fnstsw
adc
out
cs
inc
mov
jle
and
lret
clc
mov
cmpl
ss
xchg
outsl
fdivs
sub
imul
jmp
sahf
and
sub
fstp
negl
fisttps
loope
imul
pop
xchg
sbb
or
filds
pop
test
cmpsb
sub
les
sbbl
sahf
insb
jne
repnz
hlt
lods
mov
repz
or
in
imul
leave
jne
insb
data16
aam
pop
inc
mov
iret
in
lahf
mov
addr16
push
dec
cli
mov
add
rcrb
in
sbb
xchg
out
daa
lds
imulb
ja
mov
mov
stos
jb
arpl
imul
movsb
lcall
stc
mov
iret
dec
addr16
cmp
and
cltd
or
mov
call
stos
add
pop
jns
inc
dec
or
lea
jbe
cwtl
xor
adc
jecxz
das
push
xlat
pop
sbb
clc
into
rol
cld
xchg
push
cmpl
pop
pop
pop
shlb
xor
daa
popf
jbe
loop
mull
pop
jmp
jle
xor
push
add
stos
dec
dec
movsb
dec
sarb
push
cmpb
and
stc
cli
in
sarb
inc
insb
cs
pop
cmpb
shll
das
int3
jae
fdiv
sbb
shlb
rcr
ljmp
fisubrl
cmp
sub
dec
xchg
or
aaa
xchg
les
and
and
divps
mov
cmp
pusha
cmpsl
jg
sbbb
aam
mov
aad
jmp
dec
push
int
xor
and
inc
xorl
push
cmp
gs
je
popf
movsl
cltd
repz
xor
jl
jne
sbb
xchg
cmp
fisubs
outsb
sub
push
loop
cmp
in
lods
test
jle
out
mov
add
mov
inc
sub
and
sbbb
popa
arpl
mov
out
imul
fsubrl
pop
hlt
int3
mov
popa
sbb
int
ret
enter
and
enter
imul
out
dec
xchg
dec
ret
addr16
outsb
cmp
jmp
lods
fiadds
and
sub
hlt
pop
ret
cmp
aas
sahf
add
imul
sbb
fidivs
sub
negl
rcll
pop
jbe
mov
imul
dec
daa
xchg
push
mov
cmc
mov
lea
int3
push
stos
ret
dec
mov
push
pop
lods
lcall
add
shl
push
xor
loopne
dec
and
hlt
dec
subb
push
inc
insb
dec
add
lea
imull
lret
cmp
and
fnstsw
out
adc
fwait
push
mov
icebp
mov
movsl
push
push
xchg
sub
pop
mov
mov
mov
out
addl
jecxz
adc
jl
cmp
aam
dec
out
pop
and
cld
pushf
cmpsl
out
mov
cmp
cmpsl
dec
out
push
mov
test
pop
movsb
nop
and
mov
cmp
push
pop
jbe
in
pusha
dec
push
cld
pop
insb
jnp
test
inc
adc
inc
clc
add
xor
and
adc
inc
jb
dec
sub
cmp
jge
ja
imul
aam
leave
mov
mov
sti
mov
fwait
cmp
cmpsb
loope
cmp
and
clc
inc
into
cmp
loope
mov
rcr
push
inc
mov
mov
out
jge
mov
pop
sub
dec
xchg
outsb
fisubl
mov
test
cmp
lcall
pop
xor
in
adc
icebp
enter
mov
pop
sti
into
jae
notb
ds
fmull
loopne
dec
icebp
flds
and
lds
pushf
xchg
mov
movsl
sub
push
aad
mov
add
hlt
jge
or
xchg
sub
std
push
cmpsl
js
idivl
dec
cli
popf
pop
pop
inc
xor
and
es
mov
push
push
dec
dec
int3
and
lcall
and
fmuls
cmc
jo
dec
sbb
mov
bts
inc
out
inc
scas
add
mov
fimuls
fcom
leave
xchg
lret
adc
cmpsb
push
add
cmp
xor
stos
mov
mov
push
xchg
int3
inc
vmovaps
fcmovnbe
mov
lds
push
jb
inc
push
cmp
sbb
dec
fdivl
sbb
aaa
dec
pop
jae
bound
fcompl
std
push
xchg
aas
test
and
sbb
rcll
inc
adc
mov
and
testb
xor
inc
in
ja
cmc
inc
int
mov
int
jnp
cmp
into
push
in
aad
into
stos
xor
cltd
sahf
xlat
adc
or
shll
and
dec
jp
fcmovbe
das
cwtl
mov
subb
out
sbb
push
dec
jbe
ret
fmul
inc
pop
mov
rcll
ds
mov
mov
pop
imul
outsb
and
out
xchg
addl
mov
or
mov
mov
fidivl
ret
xchg
or
idivl
xchg
mov
sub
dec
insl
push
rcrl
gs
popf
push
cld
movsl
cld
rcr
mov
es
inc
push
cmpsb
or
fnsave
in
sub
xorb
mov
mov
dec
pop
fstl
test
adc
ficoms
addr16
imul
add
mov
fildl
xchg
mov
pusha
mov
divl
cmp
xchg
test
insl
rorl
in
mov
iret
or
ficomps
push
int3
jo
fisttpll
aam
push
inc
or
movsb
xor
movsl
jg
test
mov
sti
pop
lret
ljmp
test
push
les
mov
push
jg
mov
popf
stos
repnz
shr
cmpsb
mov
xchg
push
mov
in
jecxz
dec
ja
int
repnz
push
or
cmp
iret
fildll
or
mov
mov
xlat
adc
mov
sub
and
cmp
or
es
insb
pop
insb
mov
jbe
outsl
ss
in
dec
out
push
inc
adc
data16
je
out
pop
mov
outsb
mov
xor
ret
inc
inc
adc
arpl
push
fadds
out
or
lods
adc
xchg
inc
decb
aad
sbb
daa
inc
sub
scas
into
xor
mov
jo
add
or
aam
pop
lods
sub
stos
sub
adcb
or
or
call
pop
add
pop
mov
in
sub
mov
inc
out
movsl
xor
pusha
test
fnsave
xor
dec
in
fldcw
dec
mul
cmpsb
jnp
outsl
adc
imul
adc
or
ja
or
iret
les
ror
mov
pop
rclb
and
inc
test
fnstsw
or
int
mov
mov
dec
shrb
pop
movsb
pop
jns
ficoml
jmp
sbb
mov
fwait
in
hlt
lcall
sub
sub
sbb
cmpsl
xchg
imul
jmp
fwait
addb
call
add
in
sahf
stc
mov
divb
punpcklwd
xor
push
movb
mov
icebp
fildll
mov
xchg
dec
fsubrs
out
inc
js
sbb
maxps
inc
push
dec
adc
out
sub
add
in
xchg
fsts
mov
mov
xchg
hlt
ret
xlat
loope
icebp
enterw
lds
push
andb
addb
pop
or
and
aam
arpl
das
ja
push
adc
enter
mov
fists
shl
test
push
ljmp
push
outsb
jae
shl
decb
ja
jnp
mov
out
inc
jecxz
test
push
sbbb
test
push
int3
jb
jg
mov
xor
cmp
insl
sbb
scas
and
pop
jle
xor
push
mov
out
jmp
rcrb
adc
xor
lar
sub
xchg
test
xor
lock
push
sub
sbbl
cld
stos
jnp
sub
inc
icebp
xchg
hlt
cmpl
mov
and
fisubrs
jp
in
push
xor
mov
cmp
and
notb
sub
add
lret
add
loop
xchg
ja
and
scas
mov
test
and
ret
mov
dec
sub
fndisi(8087
or
sbb
fidivrs
dec
cmc
adc
mov
push
pushl
data16
push
pop
dec
call
add
push
jp
xlat
in
mov
scas
fnstcw
hlt
sbb
mov
sub
jae
lcall
xor
scas
sti
add
xchg
int
adc
mov
jmp
jnp
xor
inc
and
pop
data16
insb
loop
ret
and
inc
ljmp
xor
sbb
cli
lods
fcoml
pop
into
aaa
mov
xchg
sti
out
std
xlat
popa
pop
lahf
jmp
mov
icebp
push
jmp
sbb
fimull
lock
pop
inc
jne
enter
out
int
and
add
push
pop
gs
mov
fstl
xorps
rorb
jb
clc
sub
or
dec
mov
mov
cwtl
mov
imulb
ja
pusha
mov
xor
push
push
push
outsl
jle
gs
test
add
jge
jmp
inc
hlt
ss
jnp
jge
inc
adc
dec
add
loope
jmp
daa
adc
dec
cmp
pop
xor
fs
sub
data16
shrl
xor
fcmovnb
or
cmp
push
mov
call
rcrl
inc
repnz
push
aad
push
jg
xlat
loopne
dec
aad
decl
bnd
pop
lock
dec
dec
adc
and
jle
adc
mov
lret
add
call
xchg
push
pop
nop
gs
mov
fsubl
push
lods
push
pusha
in
mov
jns
int3
jge
jo
ret
inc
jl
or
add
decb
pop
mov
jns
in
inc
adc
or
dec
mov
cmpl
mov
lods
nop
mov
xchg
clc
push
fisubrs
repz
popf
loop
loope
cld
cwtl
adc
shrb
pop
xlat
aad
inc
add
jnp
je
shrl
fisubs
lcall
jo
pop
add
dec
mov
mov
das
daa
lea
xchg
in
sbb
cli
fidivl
push
imul
push
inc
jbe
adc
cmpsb
sahf
subl
mov
mov
ja
mov
hlt
orl
fistps
lock
push
dec
ftst
pxor
sbb
xchg
jb
sub
sysret
push
pop
enter
clc
dec
jae
repz
pop
pop
sbb
inc
pusha
jmp
test
adc
cmp
fnstsw
xlat
cmp
xor
mov
ds
xor
push
push
rcrb
ret
xor
xchg
mov
pusha
out
and
mov
push
rclb
fwait
in
sbb
std
xchg
xor
les
movsb
incl
or
or
or
test
in
adc
outsl
std
repz
test
ljmp
dec
push
or
adc
pop
cmp
dec
jae
push
xor
movsl
dec
cmp
inc
dec
lcall
push
dec
loop
jl
push
add
mov
jne
test
cltd
jg
mov
adc
push
xor
pop
xor
mov
mov
shlb
popf
adc
mov
outsb
cmpsb
lret
imul
loope
push
inc
push
inc
out
out
xchg
imul
push
cmp
ficomps
movsb
or
mov
xor
add
icebp
cld
jae
cmc
jae
in
xchg
sbb
sti
sarl
adc
xlat
add
and
adc
into
jb
scas
je
and
mov
add
js
mov
repz
scas
mov
movsb
test
and
fsts
xchg
mov
sub
xchg
je
sbb
jg
fwait
outsb
mull
stos
jmp
icebp
mov
scas
int
jo
mov
or
movsl
dec
push
dec
mov
jne
mov
pop
adc
and
pusha
sbb
add
mov
mov
stc
mov
and
mov
fs
lret
fisttpl
jge
imul
push
cmpsl
xchg
pop
adc
out
loop
pop
stc
repnz
test
dec
pop
sti
repnz
and
and
pop
clc
out
fs
rcrl
pop
test
cli
test
in
pop
data16
leave
imul
dec
pushf
repz
adc
inc
push
jmp
pop
push
push
data16
cmpsb
or
mov
in
std
jge
std
les
test
dec
push
jp
mulb
push
sbb
push
pop
jecxz
push
mov
mov
xor
xchg
inc
mov
xchg
xchg
jns
cmp
jp
test
in
daa
out
fdivs
cs
jge
outsb
and
xchg
pop
nop
xchg
dec
pushl
sub
push
pop
call
dec
push
lods
js
imul
xor
div
lock
jo
lods
pop
or
cmpsl
jo
leave
adc
cmp
sub
sbb
fcoms
mov
or
stos
jns
outsl
sub
mov
dec
xchg
lea
pop
mov
mov
out
jne
test
lods
mov
rolb
dec
push
movsb
ljmp
test
loop
xchg
iret
mov
cltd
push
lcall
nop
mov
xchg
push
loope
xlat
ja
hlt
xchg
addr16
dec
psubq
mov
mov
cmp
and
int
lods
push
les
mov
out
std
xchg
pop
mov
daa
fcmovu
cld
xchg
movl
mov
pushf
adcl
jp
dec
int
pop
mov
pop
dec
dec
mov
or
ret
arpl
sbbl
iret
cmpsl
xchg
pop
push
dec
mov
jle
inc
scas
mov
xchg
jle
cmp
adc
cmp
fs
pusha
add
jbe
sub
or
loope
ds
adc
push
addr16
imul
inc
mov
xor
repz
fcompl
or
mov
orl
hlt
ja
lods
inc
aas
sub
ficomps
xor
jl
adcl
inc
dec
inc
fadds
std
mov
pop
cmc
mov
lahf
dec
mov
mov
jl
xor
or
adc
and
inc
mov
sti
and
push
fdivrp
xchg
sub
rclb
cmp
cmpsb
or
addr16
lea
xor
mov
inc
add
lds
cmpsl
or
popa
clc
xchg
push
jmp
xor
dec
lcall
and
dec
or
arpl
movsl
fisubl
out
mov
push
stc
xchg
adc
clc
cld
push
mov
fldcw
repnz
mov
sbb
or
mov
js
mov
dec
movsl
das
dec
insl
mov
scas
insl
movl
jbe
ret
test
sbb
es
mov
out
mov
mov
xchg
sub
jno
jnp
idivl
sub
xor
cmc
xor
jbe
cmp
stos
cwtl
int
stos
mov
rcrb
xor
xbegin
inc
neg
ret
popa
and
into
jne
idivb
mov
pop
test
mov
inc
fldenv
test
sbb
pop
std
in
data16
xor
mov
mov
mov
addr16
mov
cli
sub
push
mov
popa
jae
pop
xchg
or
mov
adc
scas
mov
jle
fwait
xchg
stos
int
fisubs
fsubrp
icebp
in
push
in
cmp
aaa
icebp
sub
jp
pop
ror
adc
jae
and
ret
dec
imul
mov
pop
dec
adc
imul
cmp
idivl
inc
adc
add
ja
pop
xchg
inc
in
mov
lds
pop
push
sub
cs
add
je
push
jmp
pop
xchg
xor
adc
xor
fsub
inc
inc
mov
shrb
jns
push
adc
and
aaa
jmp
inc
int3
pop
dec
sub
adc
mov
in
dec
jecxz
dec
jecxz
mov
push
inc
mov
rorl
lock
pusha
cmp
xchg
inc
jmp
xchg
popa
mov
dec
fadds
call
push
cmp
mov
popa
push
data16
push
out
insb
gs
lcall
xor
faddl
adc
mov
shr
dec
xchg
pop
stos
sbb
and
mov
fisttpll
sahf
dec
mov
in
inc
fimull
cmpb
dec
insb
inc
adc
xchg
mov
cli
adc
jg
adc
sbb
shrl
jge
lock
pop
mov
dec
xchg
pop
cld
push
call
nop
cmpsb
dec
inc
test
push
add
dec
std
push
pop
pop
sub
adc
add
adc
orb
and
jmp
pop
int3
lea
mov
call
push
sub
pop
mov
pop
lods
je
aad
addr16
sbb
arpl
insl
lret
in
xchg
cmp
pop
arpl
sub
adc
icebp
ds
inc
bound
or
rcll
es
les
xchg
and
int
cmc
adc
sub
aam
add
shrb
loop
xor
jne
dec
imul
dec
stos
add
mov
sub
dec
or
mov
popl
loopne
aas
push
cmp
faddl
shl
lret
test
scas
fwait
jne
pop
in
jp
mov
arpl
inc
les
mov
fwait
xor
push
cld
xchg
decb
xchg
cltd
inc
jbe
ret
jns
nop
adc
add
xchg
inc
mov
pop
adc
cltd
push
mov
insb
bound
mov
popf
lcall
icebp
sahf
mov
push
push
pmaxsw
mov
fstpt
stc
mov
dec
cs
sbb
je
iret
xor
addr16
loope
push
roll
out
mov
cmp
xchg
add
xlat
mov
sub
xor
int3
jo
push
cmp
pop
lods
mov
fsts
or
loopne
xor
aaa
sub
mov
cmp
ljmp
and
sub
gs
push
push
fwait
icebp
sub
jle
cmp
push
std
dec
mov
xor
sbb
sub
pop
std
clc
jns
sbb
push
push
pop
add
jb
add
out
lret
outsb
add
pop
mov
and
pop
mov
inc
xchg
outsl
test
cmp
leave
andl
lea
cmp
and
xor
leave
and
pop
mov
out
fcomps
mov
cmp
lea
jno
sbb
xchg
mov
mov
add
xlat
fisttpl
fistpl
insb
mov
enter
insb
fwait
aad
imul
mov
nop
dec
inc
adc
inc
popa
mov
and
rcrl
out
dec
push
sbb
xor
xor
fs
test
and
add
cli
push
rol
ficoml
xchg
stc
enter
fiadds
and
sub
mov
sbb
jmp
fimull
jae
xlat
stos
rclb
xchg
movsb
testb
out
mov
fdiv
push
fstpl
push
sub
xchg
mov
out
pop
jo
nop
jle
dec
push
mov
add
out
mov
xchg
add
std
inc
jecxz
fsubs
mov
mov
stos
imul
hlt
xchg
cs
inc
inc
test
push
lret
push
cmc
clc
test
fs
sub
xchg
xor
repz
test
lret
cmpsl
cmp
lret
into
or
insl
insb
mov
ficoms
je
aas
sbb
cmp
sbb
movsb
sub
lahf
cmpsl
push
lcall
mov
xor
mov
imul
adc
xchg
int3
add
rcl
test
iret
loope
repz
je
rclb
test
nop
test
cld
xchg
int
lret
sarb
lods
jb
sub
fld
fs
dec
mov
shrl
jl
loopne
rorl
adc
cmp
jns
xchg
jmp
jecxz
into
mov
and
or
xchg
sub
shrl
orb
scas
mov
lret
add
mov
in
test
dec
fwait
mov
mov
lret
jbe
out
and
pop
sub
dec
and
mov
imul
mov
lods
je
or
in
xor
movb
xor
movsl
les
jecxz
shrb
test
push
jl
mov
pop
mov
pop
cmp
cmpsb
ja
and
lea
xchg
lret
sub
adc
imul
jbe
mov
cmpl
aad
adcl
aas
jnp
and
fwait
jg
iret
test
sub
pop
repz
inc
in
rorl
jecxz
andb
add
adc
ret
or
imul
push
aaa
les
call
xor
fs
xorl
jnp
mov
cmp
aad
mov
pushl
nopw
pop
pop
mov
cwtl
dec
mov
fmuls
mov
mov
xor
in
push
adc
mov
addr16
xor
out
mov
cli
bound
push
aaa
add
xor
xchg
mov
xchg
movsl
ja
fisttpl
adc
aad
dec
mov
das
movsb
push
imul
pop
outsb
pop
mov
arpl
push
dec
push
mov
jae
mov
imul
mov
and
bound
xchg
enter
mov
stos
in
adc
dec
jmp
mov
dec
pop
je
add
jo
cwtl
and
mov
sahf
outsb
jge
stos
repz
movsl
jg
mov
xchg
dec
push
or
inc
insb
inc
rorb
test
int
sbb
dec
xorb
sub
push
scas
sti
out
add
mov
nop
mov
hlt
pushf
dec
ljmp
mov
xchg
cmp
and
push
sub
rcl
adc
xchg
or
inc
cmp
repnz
fsubs
cmp
xor
pop
mov
cmp
sub
outsl
cmp
jge
das
push
imul
inc
loopne
lock
sahf
in
rorl
xorb
sub
add
int
jae
dec
ljmp
call
jp
dec
push
sub
jge
xchg
pop
mov
push
js
js
jge
inc
push
mov
cmp
inc
fisubs
sti
sbb
test
rclb
shll
inc
addr16
enter
mov
div
jno
loop
lret
test
jge
out
out
sti
jl
ljmp
hlt
mov
out
data16
push
movsl
pop
das
or
mov
sub
pop
add
imul
les
and
out
mov
cmpsl
push
js
inc
mov
inc
test
inc
gs
cmp
icebp
push
jo
xlat
les
shrb
add
jp
inc
xchg
fimuls
mov
lds
stos
push
cwtl
mov
arpl
adc
out
xor
insb
xor
rcrl
stos
sbb
popa
cmpsl
lcall
cmp
cwtl
shrl
arpl
push
and
shrl
mov
inc
andl
jmp
add
mov
pop
lods
inc
dec
cmp
fiaddl
add
aas
xchg
push
xchg
mov
popa
test
mov
sbb
or
into
call
js
mov
ffreep
ds
bound
push
fisttpll
jmp
jbe
mov
js
cmpsl
and
in
popf
cli
cltd
test
adc
xor
lret
dec
pop
pusha
fdivs
jne
jp
fnstenv
stc
inc
add
mov
xchg
inc
inc
addr16
xchg
dec
dec
jg
jo
xlat
dec
icebp
popf
aam
ss
mov
scas
not
lahf
stos
shlb
push
pop
call
xchg
inc
jge
fdivrs
mov
rcrl
inc
push
lods
pop
ret
mov
push
popl
jle
aas
add
adc
insb
dec
sub
orb
xchg
out
fstpt
xchg
dec
nop
addl
push
shll
cmpsb
xchg
imul
icebp
push
repnz
jmp
test
dec
daa
icebp
push
dec
inc
add
inc
mov
push
stos
lcall
rolb
cmpsb
fdivrs
pop
jp
pop
cmpsl
xchg
xchg
push
enter
mov
cmp
add
lret
lret
or
adc
xor
ljmp
arpl
pop
test
bound
xchg
movb
cmp
or
adc
aaa
xchg
loop
lods
lret
mov
pop
inc
ja
loopne
cli
xor
test
outsb
loop
imul
mul
call
mov
dec
mov
outsl
jp
push
pop
lea
lock
add
sbb
jo
inc
mov
shlb
cmp
mov
mov
push
testb
or
ret
neg
aad
scas
or
adc
test
lret
inc
cmp
mov
cmp
lods
or
sub
cmp
pop
add
adc
sbb
jge
orb
xchg
scas
rolb
jge
sbb
shr
inc
lods
mov
fwait
jle
jb
sbb
or
movsb
in
arpl
add
std
dec
and
mov
xor
in
mov
fs
lea
ja
mov
add
orb
sbb
push
pusha
or
out
aaa
xchg
cs
mov
inc
js
mov
xchg
leave
jns
dec
fldl
push
or
sbb
jbe
pop
push
inc
sahf
cmp
xchg
cmp
mov
out
add
jl
push
push
push
and
test
inc
jne
mov
insl
mov
inc
add
vpmullw
pop
aas
test
lds
jo
push
cltd
sahf
clc
pop
jns
cmpsl
imul
or
jp
pop
push
andl
pop
test
mov
pop
add
or
mov
insb
push
mov
push
inc
mov
in
sub
ss
bound
dec
jp
mov
jecxz
inc
dec
push
xor
cmp
dec
jg
js
aaa
in
adc
movsl
popf
je
push
fmulp
stos
insb
or
loope
mov
push
add
aad
imulb
testl
xor
or
xor
jge
adc
cwtl
or
mov
cmpb
pop
push
pop
add
and
sbb
aad
inc
push
mov
push
pusha
adc
rol
mov
dec
sbb
xchg
rcr
in
dec
jg
pop
pop
push
adc
iret
or
es
jl
pop
jno
out
cs
das
clc
inc
mov
into
jmp
hlt
xor
jle
imul
cpuid
sub
xor
sarl
jg
jae
dec
fistpl
clc
test
mov
mov
imul
lcall
cwtl
xlat
jno
and
popa
sbb
ljmp
jmp
test
mov
ds
and
pop
add
dec
ljmp
dec
pop
sbb
addb
ret
lea
repnz
repz
in
loopne
jecxz
jle
or
rorb
dec
das
mov
das
jae
pop
test
cltd
into
out
xchg
and
in
pop
mov
and
pop
or
dec
jmp
mov
push
cmp
jg
push
pop
jne
push
jg
fs
icebp
push
jecxz
jnp
fwait
stos
lcall
mov
popa
or
and
and
out
push
arpl
pop
inc
sbb
inc
mov
sbb
std
dec
sub
pushf
dec
mov
loopne
xor
lahf
scas
js
dec
cmovae
lret
or
or
push
jb
push
inc
shlb
insb
loopne
cmp
js
lahf
call
call
fsubl
xchg
cli
loop
pop
sbb
fwait
xchg
mov
pop
mov
aad
pushl
push
add
dec
scas
shrb
adc
jbe
ret
pop
inc
sbb
cmp
or
push
push
adc
fidivl
or
mov
addr16
xchg
jp
jl
sbb
and
cmp
push
lret
ret
popf
cmp
or
dec
fistpl
sbb
jno
popf
jb
mov
outsl
adc
push
inc
pop
mov
inc
shrl
ror
cli
and
add
loopne
mov
xor
cwtl
sbb
mov
inc
lcall
mov
and
fldt
mov
stos
outsb
pop
loope
xor
mov
and
jmp
pop
sbb
aaa
xor
jl,pt
sub
fucom
scas
xor
nop
or
dec
roll
daa
push
or
adc
sbb
ds
xchg
xchg
insb
js
mov
add
xchg
pusha
loop
adc
mov
xor
xchg
xchg
ret
jp
adc
add
int
push
cmp
hlt
ret
adc
jle
dec
es
sbb
cmp
push
xchg
sub
insl
inc
xchg
js
nop
imul
mov
stos
pusha
adc
andb
adc
repz
add
pop
loop
fwait
adc
or
loopne
add
inc
xchg
hlt
xchg
cmp
ss
mov
fistpll
mov
fsubl
cmpl
inc
inc
xchg
lods
cmp
sbb
movzbl
aas
mov
dec
or
mov
fildll
out
lods
hlt
cld
sbb
rol
xchg
sub
cmp
scas
cmp
pop
add
or
mov
add
notl
mov
inc
enter
fwait
sbb
lahf
xchg
xchg
test
add
jg
xchg
pop
or
pop
jmp
dec
push
cs
je
data16
jge
sub
cmp
loope
adc
adc
daa
pop
sub
add
xchg
shrb
sbb
pop
iret
mov
xchg
cmpl
mov
adc
mov
adcb
adcl
mov
xchg
mov
inc
mov
mov
mov
imul
lock
adc
in
add
mov
inc
jo
hlt
and
mov
pusha
xor
std
xchg
rcrl
clc
mov
mov
fpatan
push
xchg
and
mov
insl
cmp
jbe
jl
leave
xchg
repnz
mov
outsl
das
cmp
fs
movsb
push
scas
pop
inc
xchg
and
int3
xor
sbb
aaa
sbb
push
xchg
mov
mov
mov
pop
pop
lock
jge
mov
jns
xor
insl
push
mov
xorl
int3
mov
dec
mov
or
pop
xchg
je
jge
lahf
cmpsb
ffree
add
add
jp
pop
or
lcall
push
sub
leave
out
adc
leave
mov
xor
mov
mov
cmp
xor
out
addr16
xchg
fwait
xchg
out
int
aad
push
and
mov
and
insb
and
out
in
enter
cmp
dec
sub
je
out
pop
movsb
fstpl
ja
int3
int3
mov
jb
push
test
insb
xchg
mov
rorb
mov
jge
push
xor
repnz
test
mov
dec
jo
in
cmp
imul
jp
fisubrl
push
mov
ficomps
cmpsl
sbb
ds
iret
sti
adc
sahf
jmp
mov
or
dec
dec
and
and
xlat
mov
adc
insb
jmp
gs
mov
jbe
in
bound
cmp
enter
hlt
out
pop
dec
mov
loop
rcl
ss
mov
cmp
in
and
insb
or
xor
mov
sahf
call
push
sub
jnp
faddl
adc
add
and
lds
jl
push
inc
addb
xlat
pop
jno
scas
push
push
loope
sbb
lcall
mov
add
and
mov
movsb
push
mov
jg
mov
xchg
mov
loop
cli
loopne
jg
pop
iret
xor
rorl
jmp
dec
xchg
rclb
xchg
jmp
adc
idivb
jle
add
dec
ret
mov
pop
testl
mov
sub
test
fidivl
fdivl
subb
stc
mov
inc
addl
outsb
sub
sbb
dec
sub
inc
out
mov
cld
lds
add
mov
notl
dec
inc
or
push
hlt
sarl
notl
icebp
arpl
fnsave
cmp
or
cmp
push
mov
dec
loopne
out
mov
lret
jl
movsl
mov
in
outsl
sub
js
mov
dec
fxch
pushf
mov
ds
xchg
xchg
js
and
dec
push
notb
inc
xchg
xchg
fs
inc
popf
mov
mov
test
pop
rcll
cmp
jns
in
or
mov
cwtl
out
add
xor
out
sahf
mov
add
dec
mov
xor
sub
les
lahf
jecxz
mov
cmpsb
push
dec
insl
xor
mov
rolb
inc
es
pop
push
mov
pop
pushf
std
fwait
mov
mov
imul
sub
mov
aaa
push
xor
bound
add
test
movsl
shlb
mov
push
enter
out
push
sub
mov
in
add
lret
cld
and
repnz
pushf
call
hlt
push
inc
scas
jb
test
mov
insb
fcompl
mov
popa
mov
mov
fs
subl
mov
outsl
out
sub
xchg
sbb
mov
mov
scas
push
repz
inc
fistpll
pop
popf
inc
enter
lahf
aaa
gs
jge
jbe
jb
movsb
push
fdivr
push
mov
jmp
pop
adc
or
mov
sbb
add
sbbl
xor
rorl
pop
clc
test
xor
in
imul
sbb
dec
iret
add
lea
jg
dec
jns
mull
in
inc
or
addl
pop
dec
fs
push
insb
stc
push
jae
add
je
mov
pop
sbb
push
cltd
mov
lods
mov
loop
arpl
ror
xor
lock
stc
mov
in
cli
pop
and
popf
push
and
push
mov
push
mov
repz
or
mov
jp
jmp
xchg
dec
testl
cmp
jecxz
jb
add
cmp
push
roll
iret
adc
dec
mov
push
fstpt
loope
rorb
les
imul
add
movsl
ja
lahf
sub
mov
push
mov
cltd
or
and
xor
ret
jne
negb
sub
push
les
subb
add
test
jmp
out
sbb
lret
add
call
loope
cltd
pushf
and
add
jne
cs
enter
je
stos
jne
inc
sarl
clc
cmpsl
in
pushf
mov
xor
les
into
inc
mov
jo
push
outsl
fnstenv
in
data16
mov
outsl
lahf
insb
mov
lcall
mov
pop
cmpsb
pop
aaa
lock
cmpl
mov
cmp
mov
lret
or
loope
popf
or
cmp
lods
mov
daa
adc
add
neg
scas
jbe
adc
pop
and
adc
pusha
jae
sub
xor
std
push
xchg
mov
jo
adc
das
dec
shl
shll
sub
daa
push
pop
push
nop
sarl
adc
enter
out
ficoms
ss
ror
mov
scas
mov
jp
in
push
xlat
addr16
or
xor
and
arpl
jno
test
push
addb
insb
dec
jae
out
sbb
testb
mov
jbe
cmp
xchg
and
in
imul
cmc
bound
push
test
js
cmovg
mov
fnsave
outsb
xor
xor
pop
fstl
adc
mov
clc
sbb
inc
inc
push
jp
jg
mov
sbb
add
push
mov
arpl
scas
inc
lcall
hlt
jae
outsl
ljmp
ljmp
iret
ret
test
or
and
jne
jge
das
dec
push
clc
xor
push
xor
js
loopne
cmp
mov
inc
xchg
cmp
push
popf
mov
outsb
mov
adc
fcmovne
pop
xor
stos
mov
stc
fmul
jbe
adcb
add
jmp
pop
push
adc
push
lahf
dec
jl
jo
pop
orl
stos
repz
loope
adc
or
dec
cmc
lods
xlat
pop
loop
pop
popa
mov
fsubr
adc
test
repz
inc
adc
movsb
jbe
xlat
sub
into
movzwl
fistpl
push
jecxz
lds
add
jmp
mov
test
lods
outsl
sbb
sub
test
insb
xlat
jne
pop
gs
xor
push
or
push
aad
dec
inc
scas
ljmp
mov
jp
sub
lods
mov
mov
jg
and
dec
pop
fcomps
rclb
sbb
lret
sbb
and
repnz
roll
negl
roll
push
in
test
pop
xchg
sub
arpl
js
dec
jp
mov
lods
xchg
js
lret
xchg
inc
inc
push
mov
xchg
push
imul
mov
jle
enter
dec
mov
jbe
insb
cmp
pusha
ja
cmp
ret
insb
pop
scas
pop
sbb
aad
sbb
mov
jo
dec
pop
mov
sbb
push
mov
nop
jle
push
mov
adc
mov
ret
xchg
sbb
mov
and
rcrb
xor
xchg
or
sub
inc
dec
lds
int3
arpl
jl
in
mov
cmc
jle
adc
fwait
jnp
and
mov
stos
scas
sahf
xchg
fcoms
or
push
jle
or
ficoml
iret
cli
xor
push
imul
cmp
sub
xor
dec
mov
repz
mov
pop
push
iret
inc
push
aaa
hlt
lock
mov
loop
insb
pushf
lea
es
cmp
sbb
sbb
call
movsb
push
movsb
add
dec
call
xchg
addr16
sbbl
outsl
cmpsl
push
fimull
cmp
lret
mov
xchg
nop
or
cld
push
fsubs
push
and
fxam
daa
or
movsb
dec
mov
push
inc
aad
cmc
mov
in
mov
in
in
pop
adc
dec
mov
imul
push
mov
pop
insb
loopne
sbb
dec
jno
add
push
repz
jne
test
notl
jne
andl
daa
push
mov
ficoms
mov
enter
pop
sub
insl
lret
mov
outsl
insl
xchg
push
imulb
dec
out
dec
push
call
push
cmp
xchg
add
and
xor
and
or
dec
pop
mull
adc
dec
push
adc
daa
shrl
inc
pop
xchg
pop
and
clc
cmp
or
dec
ret
int
lahf
out
sub
adc
cmp
xchg
inc
mov
shlb
out
jbe
pop
fsubl
or
lods
adc
cmp
divb
dec
or
adc
lods
fidivrs
lea
sbb
xchg
test
ret
jl
aad
mov
ds
idiv
in
addb
xor
xor
popa
sub
pop
addr16
movsb
add
roll
and
cmp
pop
je
pop
or
dec
sbb
mov
push
ljmp
mov
mov
ljmp
dec
xor
adc
jne
cmc
cwtl
sub
and
std
mov
lea
cmpsl
lods
and
add
cmpsb
xchg
mov
enter
mov
dec
sbb
jmp
push
movsb
add
add
roll
xchg
adc
xchg
into
inc
and
sub
adc
cmovns
jg
movsb
movsb
sbb
sub
leave
mov
jp
stc
lahf
add
into
jns
shl
push
and
xor
pop
or
int3
push
jb
es
les
sbb
lods
std
pushf
fisttps
xor
lret
les
es
adc
out
cmp
ss
ret
call
adc
dec
inc
bnd
mov
pushf
je
dec
and
adc
dec
pop
inc
pop
loope
inc
cmp
mov
jns
out
imul
xchg
js
imul
pop
push
mov
lret
jno
sarb
xlat
shll
lods
cltd
es
sbb
sbb
imul
fbld
mov
fs
ljmp
mov
jecxz
lcall
xor
loopne
outsl
shrl
mov
inc
sub
mov
xchg
int
nop
fcos
daa
xchg
int
pop
xchg
jecxz
int3
in
dec
jb
roll
push
pushf
pop
jae
cli
negb
jbe
adc
sti
xorb
aam
repnz
lods
sarl
add
lret
xor
mov
sub
loopne
in
addr16
mov
pop
or
adc
xor
jae
in
mov
xor
push
xor
int3
xchg
push
jge
fistpll
dec
aam
into
fimull
hlt
pop
nop
cmpsl
sbb
jo
cld
bound
mov
push
fsubrl
cmpsl
ljmp
pop
pop
into
adc
xor
testl
lea
sub
mov
add
sbb
mov
insl
mov
outsl
and
cmpsl
mov
fnsave
push
movb
push
sub
adc
dec
mov
sub
mov
int3
sarl
int3
and
mov
pushf
lahf
pop
dec
pop
cmp
repnz
and
pop
cmp
pop
sar
jl
push
hlt
xchg
frstor
shlb
cmp
lods
mov
xchg
pop
stc
pushf
cmpsl
push
idivl
sbb
mov
mov
dec
lods
adc
into
dec
xchg
scas
and
leave
aas
daa
subb
inc
sysexit
mov
xchg
dec
ftst
and
and
inc
push
lods
rol
lret
je
lret
aaa
mov
mov
stos
jle
lahf
rcll
incl
idiv
int3
int
jne
out
das
and
sub
popa
inc
pushf
adc
out
subb
insl
fwait
jmp
es
shrb
push
adc
pop
mov
sub
cmp
jno
cs
xchg
cmp
jmp
enter
mov
shlb
mov
pop
ss
or
call
xor
fstpt
repnz
out
out
bound
call
add
iret
xchg
sbb
jg
das
sar
shll
std
jle
loope
ret
push
and
fwait
pop
mov
push
sub
xchg
jb
add
or
mov
jl
fneni(8087
data16
arpl
dec
inc
add
inc
pop
dec
lods
jne,pn
dec
lds
loopne
cli
in
cmc
shrl
add
inc
pop
add
jl
lods
sti
aad
subb
gs
sbb
rorl
jmp
jne,pn
ret
in
popa
sub
iret
inc
sbb
call
scas
jg
lds
and
mov
sbb
outsl
pusha
jns
push
xor
xchg
in
lea
add
cli
dec
imul
jns
in
sub
lds
mov
jl
push
and
cmc
and
jp
scas
lahf
pop
cmp
add
or
add
js
sbb
mov
jecxz
adc
and
mov
shlb
test
sti
pop
mov
and
xchg
test
xchg
xchg
fcom
and
jmp
in
pop
inc
mov
mov
pusha
mov
mov
add
push
mov
out
or
adc
test
jae
shl
mov
push
add
sub
fildll
test
xchg
aas
outsb
push
dec
push
mov
pop
push
lret
aaa
clc
gs
icebp
xor
jge
shll
xor
adc
push
iret
mov
std
add
mov
and
loopne
out
sub
dec
dec
stos
xchg
pop
mov
push
cmp
scas
fwait
packssdw
lock
imul
push
inc
inc
sub
xchg
pop
sub
insl
jb
sbb
rcll
cmp
pop
fisubl
pop
cmp
rcl
xor
loope
fcompl
into
ret
sbb
imul
pop
and
andl
pusha
xchg
in
sahf
pmaddwd
popf
nop
data16
stos
mov
jbe
push
das
mov
lret
mov
fldenv
clc
adc
loopne
into
out
lcall
and
inc
out
addr16
dec
fidivrs
jg
jge
andl
mov
push
repnz
sbb
imul
out
imul
jp
shl
cli
ljmp
dec
dec
test
out
enter
xlat
sub
fs
dec
inc
xor
push
es
test
and
push
add
andb
scas
stos
rorl
fdivrs
mov
stos
mov
sahf
dec
mov
mov
adc
lea
mov
cmp
repz
xor
je
test
cmp
mov
push
mov
xchg
test
jne
adc
jge
cmpsl
ljmp
cmp
loopne
push
test
add
sbb
fwait
loopne
push
add
std
xchg
push
roll
inc
pop
imul
in
push
stos
mov
and
jne
cmp
fistpll
popa
inc
push
jae
pusha
pop
mov
rcr
movl
sbb
aaa
inc
add
mov
sub
xchg
xchg
negb
jle
sbb
or
cmpsl
cli
cmp
mov
movsl
lods
adc
inc
inc
dec
sub
mov
sub
inc
adc
scas
js
jle
cmp
idivb
iret
cmpsb
dec
loop
jmp
in
dec
push
mov
mov
pop
dec
shll
jae
cmp
mov
icebp
cmp
xor
pop
arpl
sbb
test
push
mov
adc
je
lods
mov
add
lret
jle
out
call
rcr
dec
bound
mov
push
fwait
hlt
repnz
jecxz
xor
mov
inc
loope
cli
add
lods
mov
pop
repnz
sarb
aad
inc
bound
dec
or
ret
mov
sbb
inc
stc
in
mov
sbb
imul
adc
fidivl
mov
push
psllq
test
clc
popa
out
pop
cmp
add
add
sbb
mov
xchg
int3
popf
sbb
out
movsl
int
popf
lds
insl
aas
scas
rdtsc
inc
fstps
xchg
pop
ret
push
dec
js
cli
lods
xchg
add
mov
mov
pop
icebp
pop
outsb
enter
ret
insl
xchg
ja
adc
sub
insl
cmp
pop
or
mov
add
mov
mov
add
xchg
out
fdiv
call
cmp
push
fldenv
or
pop
jb
jg
dec
ds
shrb
ds
push
cmpsl
pop
jmp
loopne
mov
jae
mov
xchg
dec
pop
add
scas
out
fdivrl
or
xchg
push
jecxz
icebp
sub
lcall
cmpl
daa
fs
gs
sbb
cmp
jl
sub
cli
repnz
and
in
fwait
sbb
divl
and
arpl
xchg
mov
push
pop
ljmp
push
inc
in
or
xchg
or
sub
data16
dec
fadds
mov
mov
adc
sub
iret
lock
mov
loope
jb
push
fwait
movsb
mov
cwtl
sarb
sbb
jp
push
test
test
lahf
lock
mov
dec
adc
loope
sub
out
dec
and
outsl
push
pop
jbe
into
enter
xor
fstpt
pop
repz
inc
loope
gs
stc
add
mov
in
inc
arpl
out
adc
inc
xchg
insb
xchg
addl
bound
jl
data16
sub
icebp
into
cmp
outsb
int3
and
cmp
ljmp
xor
shl
iret
xchg
outsb
repz
mov
divb
shrb
mov
out
fstp
or
adc
sub
fmulp
sbb
aas
jp
movsb
mov
cmp
inc
push
or
loope
push
jmp
test
fildll
fcomps
push
ror
inc
mov
mov
movsl
lret
xchg
sub
sahf
arpl
or
push
adc
jb
jbe
xchg
rclb
movw
aaa
jp
dec
adc
add
out
push
imul
pop
pop
xchg
aad
adc
pop
xchg
in
xchg
mov
mov
or
int3
jae
mov
jecxz
mov
lcall
push
dec
dec
pop
push
dec
lret
ja
pop
sahf
cli
inc
orb
jmp
int
cwtl
xor
xchg
cmp
lcall
stos
popf
int
or
sarb
jnp
mov
adc
sahf
aam
pop
ss
shr
fxch
pop
fsubp
rcrl
les
iret
lock
mov
push
dec
mov
stos
daa
cld
sub
jno
sarb
daa
cli
jl
fwait
outsl
popf
movsb
adc
sbb
xchg
sbb
xchg
push
fcoms
jmp
sbb
push
push
mov
shlb
mov
push
mov
add
pusha
jb
jne
popa
ljmp
and
fbld
dec
shll
ja
and
pushw
jb
adc
xlat
int3
call
and
stos
movsl
pop
push
cmp
xchg
pop
mov
adc
push
outsb
xchg
push
lahf
jp
pop
and
xchg
cmp
movsb
pop
pop
xchg
cltd
or
sbb
sahf
cmpsl
inc
and
pop
pusha
mov
sub
jbe
loop
sti
push
cli
add
fsts
xor
add
in
xchg
imul
pop
ficoml
xor
xor
test
lods
bound
sti
cmp
jecxz
idivb
scas
icebp
jae
mov
jg
data16
xchg
idiv
shll
xchg
lods
mov
sbb
stos
add
sti
sbb
test
xchg
jp
sub
mov
mov
jle
push
dec
test
lcall
ljmp
jmp
cmpsl
or
sbb
push
push
sbb
das
movl
xor
sub
jge
dec
dec
mov
mov
jl
imul
push
je
mov
inc
push
pop
lock
scas
mov
aad
adc
jmp
push
mov
mov
rolb
cmp
fdivrl
push
out
adc
and
movlps
sahf
arpl
mov
dec
je
adc
insb
push
stos
repnz
ljmp
mov
lcall
outsl
dec
cmp
inc
or
dec
jmp
fstpt
jb
ja
cmp
in
stos
pop
push
out
and
mov
ljmp
mov
and
je
outsl
fistpll
popf
add
fimull
push
sarb
std
js
mov
push
insb
push
sarb
mov
push
loope
sbb
jmp
es
frstpm(287
gs
mov
push
xor
repnz
leave
push
shlw
push
xor
sub
jp
outsb
test
cli
dec
sbb
lds
xchg
mov
xchg
repnz
out
jmp
pop
aam
adc
cmpsb
repnz
test
js
adc
sub
ljmp
mov
xor
sub
pop
movsl
add
loop
cltd
xor
popa
js
sub
jbe
jno
les
int3
rcrb
insl
orps
pop
out
repz
dec
sub
aas
mov
cltd
sbb
out
fnsave
clc
loopne
jns
inc
leave
and
push
jge
in
outsb
and
sahf
int3
lahf
cwtl
xor
mov
mov
or
push
inc
shlb
out
ljmp
xorb
daa
sti
call
mov
mov
test
imul
mov
nop
imull
nop
lcall
xchg
mov
nop
fidivl
cli
cs
push
fisubrs
mov
rorb
xor
ret
aam
xchg
xor
xchg
pop
fadd
nop
dec
aam
or
in
xor
pop
les
inc
fstpl
cli
vphaddubd
pop
xchg
fwait
xchg
or
mov
inc
mov
inc
adc
lcall
insb
sbb
inc
addr16
sti
mov
cmp
out
add
mov
sbbb
hlt
push
cltd
sti
aaa
xchg
in
sahf
jle
fbld
lods
stc
psllq
mov
xchg
add
les
cli
mov
mov
test
stos
shrb
dec
clc
int
or
sub
leave
xor
xor
inc
xlat
adc
rcr
pop
mov
push
jnp
sub
lods
addr16
push
mov
adc
sub
adc
mov
jecxz
data16
pop
fistl
rcrl
rcrb
xor
jnp
imul
cld
call
aaa
decl
sbb
add
and
mov
dec
sub
jae
cmpsb
loop
rcl
push
mov
push
jge
test
add
adc
push
push
xchg
lods
add
inc
pop
aas
cld
sbb
add
loope
popa
imul
push
flds
jmp
out
arpl
inc
cmp
cmp
icebp
cmp
xchg
adc
inc
xor
and
push
rorb
dec
fnstenv
sub
or
lea
stos
or
pop
mov
icebp
adc
enter
es
sbb
dec
inc
mov
mov
outsb
inc
ret
push
push
iret
in
sbb
dec
fmuls
sub
or
xchg
fdivrl
aam
gs
in
cmpsb
mov
mov
stos
sub
fs
cmp
add
aam
dec
or
xchg
scas
lods
cmpsl
call
adc
add
cld
pusha
in
mov
fcoms
mov
rcr
inc
mov
xor
push
or
insb
loopne
push
pop
jp
inc
xchg
or
lcall
mov
or
out
inc
movsl
shlb
or
hlt
jb
out
pushf
xchg
loopnew
fnstsw
movsb
cmp
jnp
adc
mov
dec
jbe
pop
test
cmp
mov
test
data16
mov
xor
sub
add
sub
pop
sub
fiaddl
das
or
push
fnstsw
sbb
aad
jmp
mov
xchg
fdivl
adc
jns
sbb
push
sarl
sbb
test
subl
in
mov
je
test
iret
pop
sub
cmp
xchg
push
adc
es
or
mov
and
add
add
loopne
dec
push
icebp
mov
movsb
sbbl
ret
mov
imul
popf
push
xchg
inc
jns
add
fsubrs
jnp
xchg
sub
or
mov
cs
js
pusha
add
scas
pop
adc
pop
jge
xchg
add
rclb
and
or
xor
insl
inc
fcomps
fnstcw
sbb
dec
mov
pop
dec
incl
cs
add
mov
xor
loop
xchg
stc
xor
push
sbb
mov
push
adc
xchg
les
mov
inc
test
hlt
xchg
jmp
test
mov
int
mov
dec
fmulp
push
mov
mov
dec
push
add
adc
xor
sbb
dec
mov
sub
sbb
enter
sbb
lret
xchg
and
es
pop
sbbb
xor
repz
inc
and
sbb
sbb
ret
outsl
test
xchg
add
and
sbb
inc
aaa
lock
and
daa
dec
mov
adc
mov
into
jecxz
cmp
sti
fsubrl
or
push
icebp
mov
hlt
sbb
pop
stos
and
mov
jmp
mov
mov
mull
pop
mov
mov
rcll
popf
sbb
cmpsb
push
sti
int
push
adc
mov
push
nop
lods
jmp
pushf
push
fwait
test
test
xor
push
sbb
movsl
mov
lds
rcll
xor
iret
ss
or
rcr
xor
adc
in
sub
inc
add
xchg
mov
xchg
jmp
pop
cmp
test
push
mov
push
sti
mov
int3
or
and
cmp
mov
nop
push
mov
call
push
in
add
mov
je
add
rol
push
xchg
int
push
inc
pop
loop
filds
fnstsw
add
call
push
stos
scas
mov
icebp
dec
outsl
popa
adc
popa
dec
repz
data16
push
dec
jle
dec
xor
mov
stos
jl
and
stos
push
testb
inc
insb
pushf
add
jmp
jae
xchg
out
lcall
out
repz
cld
stos
in
inc
int
cmpsb
cmp
dec
push
adc
int
stos
aam
test
add
scas
outsb
mov
int
pop
xor
int3
add
xchg
push
mov
cmp
jbe
imul
fs
dec
push
xchg
fdivs
push
cmp
xor
sbb
test
test
add
inc
pop
xor
ja
fimull
stc
xchg
pop
pop
cmp
xor
cmpsb
clc
in
scas
cmp
push
sbb
cmpsb
push
inc
mov
sbb
testl
jle
fcoms
jmp
lds
iret
test
jae
sub
cld
outsb
rcrl
mov
mov
popa
imul
sbb
fstps
or
sub
cmp
sar
lods
neg
enter
lret
sbb
bnd
jp
mov
jecxz
mov
aaa
aas
mov
jns
pop
add
movsl
ds
repnz
lods
xchg
dec
push
add
sti
mov
mov
mov
jns
pop
lds
mov
leave
iret
sub
pop
sub
ret
mov
int
pop
loope
cli
jle
or
or
push
add
out
dec
testb
xchg
es
add
jnp
jmp
imul
and
sbb
push
adc
adc
lahf
lcall
lret
sbb
mov
repnz
inc
dec
cmc
in
lock
jbe
aam
mov
pop
fwait
add
mov
cli
sbb
cmp
ficoms
mov
addr16
hlt
push
push
sbb
test
mov
pop
ret
adc
dec
mov
sub
inc
repnz
mov
mov
fbstp
sar
jmp
mov
push
push
sti
xor
shlb
sbb
xor
out
sbb
cwtl
jmp
cmpsl
sub
pop
arpl
call
and
and
cmp
jno
adc
in
add
dec
pusha
lea
cmp
aam
in
xor
dec
es
add
lret
dec
sub
add
fcmovb
xlat
xor
shlb
dec
ja
push
dec
mov
pop
sbb
push
out
icebp
aam
inc
shll
neg
and
mov
in
xor
jae
aaa
addr16
pop
push
push
mov
fildl
int3
sub
aaa
popf
sbbb
js
or
int3
test
aaa
out
enter
jecxz
sti
cmp
outsl
adc
add
fiaddl
inc
push
mov
mov
cmp
bswap
in
add
in
lds
push
inc
jne
lret
mov
mov
test
cltd
jne
mov
sbb
sbb
xor
sub
push
mov
jmp
xor
das
and
xor
outsl
or
lock
rcrb
insl
out
out
push
adcl
cmc
pop
xor
hlt
fcmove
outsb
repnz
rolb
sub
shrl
sbb
les
pop
mov
lret
into
nop
je
stos
xchg
dec
test
mov
jp
ss
push
cmp
movsb
inc
icebp
dec
or
rorl
push
in
aad
ret
mov
call
cli
push
lods
jp
jo
fistps
pop
cmp
popa
shll
repnz
lret
lahf
scas
xor
scas
or
mov
dec
push
xchg
push
sub
sub
bound
cmp
movsl
je
sti
inc
imul
adc
adc
cmp
fsin
imul
and
fcos
xchg
adc
jmp
inc
mov
push
push
add
lea
mov
je
cmp
jle
jb
or
cmp
mov
add
pop
jne
call
fsts
into
inc
mov
jo
std
push
shrb
std
jnp
xchg
jp
add
ds
add
sbb
xchg
mov
add
jmp
fs
ja
xor
stos
mov
les
xchg
jne
ljmp
cs
jo
xchg
sarl
inc
xor
push
cmp
add
cmp
jo
adc
lods
test
in
cli
es
mov
int3
dec
sub
std
inc
imul
lahf
mov
xlat
aad
dec
fs
lea
sbb
hlt
inc
lahf
xchg
jmp
push
es
dec
jg
cld
ss
sub
sub
mov
xor
inc
cmp
sbb
stc
leave
dec
clc
pop
ds
shlb
cld
int3
mov
inc
and
sub
shrl
push
mov
pop
cmp
stc
mov
cmpsl
cmpsb
outsl
sub
int
xchg
inc
loop
aas
aam
test
lea
scas
fwait
mov
mull
and
add
dec
nop
cmpsb
test
stos
ret
data16
xor
mov
in
mov
repz
divb
xchg
lcall
sti
cmp
dec
ficoml
cmpsb
sbb
out
mov
and
mov
andb
cli
xchg
cs
push
jp
lock
and
mov
xor
aas
addr16
in
mov
mov
movsb
sub
pop
cmp
fldcw
aas
xor
repnz
xor
insl
adc
push
fcoms
call
mov
mov
fwait
test
outsl
lock
cmp
inc
jecxz
xchg
or
mov
outsl
mov
rcrl
sbb
imul
scas
sbb
sub
stos
cli
lock
ret
in
jnp
testl
jns
cmp
sbb
lock
inc
mov
stos
jne
iret
addl
sbb
pop
add
jne
push
scas
sub
push
inc
mov
out
inc
rorb
nop
pop
aaa
or
xor
neg
stos
int3
fstpl
icebp
sub
jno
sub
loop
mov
mov
fbstp
xchg
pop
push
xor
icebp
sti
pop
frstpm(287
xchg
jne
shrb
idivb
push
icebp
adc
cmpsb
add
mov
cmpsl
lock
scas
pusha
js
mov
mov
add
cmp
jno
rcr
les
test
notb
adc
or
cltd
mov
xor
jle
dec
mov
adcl
hlt
repz
xchg
xchg
inc
sbb
inc
jmp
cli
lock
and
sub
mov
add
mov
jp
out
mov
pop
stc
aas
xchg
popa
mov
popa
adc
insb
aaa
and
xor
mov
pop
lea
adc
je
shl
in
dec
test
arpl
sub
xchg
ret
fisubl
dec
or
rcrb
outsl
xor
xor
loopne
jae
loop
dec
psllq
adc
jo
xchg
scas
bound
xor
push
loopne
stos
shll
jno
cmp
push
push
sub
adc
mov
xor
dec
lock
pop
fwait
xlat
or
dec
jle
addr16
imul
nop
ror
xchg
ret
xor
sbb
in
jae
adc
jle
rorb
test
loop
add
dec
mov
daa
hlt
mov
fcoml
cwtl
cmp
stos
push
lea
ret
sbb
jle
push
pop
lret
jmp
mov
jmp
inc
decl
out
xlat
pushf
inc
loop
lahf
ja
out
fwait
sti
cmc
stos
mov
vfrczpd
cmp
andb
push
pushf
dec
and
lahf
lea
xor
fsts
loopne
mov
in
jg
xchg
inc
xchg
movsl
pop
hlt
dec
add
sbb
stos
mov
cltd
stc
aad
lods
js
or
push
add
xlat
std
xor
adc
inc
loop
std
push
je
mov
jae
test
gs
ljmp
pop
jnp
mov
adc
xchg
loop
dec
inc
xorl
imul
popf
cwtl
popa
pop
shlb
mov
add
loop
inc
outsl
mov
sub
cmc
les
fmull
inc
push
fsubrp
xchg
aam
out
bound
fstl
popa
mov
push
int3
leave
and
xchg
sbb
mov
push
ret
dec
jmp
adc
loopne
dec
movsb
xlat
push
mov
xor
clc
pop
push
inc
in
jmp
test
xchg
popa
fistpll
jl
push
mov
adc
in
inc
sbb
imul
cmp
push
jmp
les
loopne
push
sbbb
cmp
jae
dec
add
xchg
sub
ljmp
pop
jle
iret
jns
xchg
ret
lcall
and
dec
mov
ljmp
in
enter
xor
xor
pop
push
xlat
icebp
mov
cmp
test
enter
dec
jnp
aaa
xor
mov
mov
outsl
mov
mov
movsl
jge
cmp
pop
xchg
xor
inc
hlt
jge
ret
insl
mov
sbb
call
xchg
popa
xchg
mov
xorb
out
xchg
adc
imul
rclb
cld
jb
jno
cltd
stc
pop
rcr
push
and
mov
mov
movsl
daa
scas
pop
mov
cltd
inc
subb
scas
dec
in
inc
cmpsl
sub
add
fisubrs
js
push
in
pop
dec
jbe
xchg
je
jb
incb
stos
adc
scas
fcmovu
push
mov
pop
cmp
push
mov
mov
sbb
xchg
icebp
sbb
movsl
pop
imul
fadds
call
sub
mov
clc
lahf
mov
adcl
fs
add
cmp
jge
movsb
xchg
mull
jnp
push
cmp
sbb
pop
inc
lds
int3
mov
sarl
mov
test
test
int
xor
or
nop
ljmp
push
dec
xchg
jo
cwtl
adc
arpl
repz
jo
lods
clc
xchg
add
lea
popf
jns
in
jecxz
jp
test
pop
xchg
sahf
sub
dec
rcr
andl
scas
add
mov
push
jg
or
loope
addr16
mov
lahf
cmp
das
and
cmp
lahf
outsb
sbb
and
cmpsl
dec
das
fimull
adc
lcall
sbb
xor
mov
push
inc
mov
sub
icebp
push
loopne
out
shl
lcall
push
lods
or
int3
addr16
loop
fwait
aaa
xchg
pop
dec
imul
mov
push
cmpsb
movb
or
sbb
inc
pop
cmpsl
aam
popf
inc
ret
push
repz
out
icebp
or
pop
test
dec
dec
and
lret
leave
fildl
push
jo
out
mov
inc
mov
inc
lcall
add
jnp
lock
adc
cmp
mov
rolb
cmp
lods
sub
xor
xchg
and
aaa
out
pop
popa
jl
rcl
push
jb
jno
iret
fwait
sub
cmp
add
sbb
fxam
mov
ss
bound
pop
add
imul
ret
sbb
mov
push
pushf
adc
andl
dec
inc
test
or
dec
mov
push
out
add
add
frstor
cltd
jmp
inc
jno
inc
push
fs
and
mov
add
jae
in
aam
stos
cmpsl
xchg
pop
inc
mov
aad
std
sbb
dec
or
lock
out
outsb
cwtl
pushf
lock
sbb
sbb
push
bound
iret
inc
lahf
and
mov
pop
gs
iret
imul
movsb
cli
jb
mov
lock
std
arpl
inc
mov
clc
mov
adc
push
jb
mov
mov
adc
jbe
xor
xchg
ss
jmp
dec
mov
lods
mov
aaa
inc
mov
adc
mov
in
cmpsb
dec
pop
mov
into
jns
dec
jae
in
or
cmp
xchg
mov
scas
or
push
scas
in
inc
scas
or
mov
xchg
out
push
sbb
test
pop
add
xchg
xchg
or
aas
add
pop
push
cld
daa
imul
je
inc
adc
iret
pop
sahf
pop
repz
xchg
data16
int
clc
jmp
push
mov
inc
mov
fs
loope
add
jne
lock
je
outsl
pop
mov
or
push
pop
push
str
orl
mov
mov
hlt
and
fldt
ret
lods
cmpsl
mov
aam
dec
dec
adc
xchg
rcrb
repnz
pop
dec
lods
cwtl
inc
mov
xlat
push
inc
out
jae
and
rolb
sbb
stos
cmpsl
outsl
lahf
xor
and
ss
dec
cmc
mov
sub
jo
sbb
in
push
scas
jecxz
mov
jb
in
stos
xchg
test
movsl
push
or
adc
cli
cmpsl
int3
sub
popf
jbe
add
movsb
cli
sti
lds
pop
xor
and
mov
push
aad
pop
pop
sbb
mov
ret
js
sbb
loope
cmovs
jb
notl
and
stc
cmp
cld
enter
xor
pop
pop
add
jge
cmp
push
mov
adc
jbe
sbb
push
jg
out
add
inc
lds
mov
fistl
mull
out
vpaddusb
and
outsl
in
popf
adc
mov
jmp
ds
inc
mov
push
mov
movsl
adc
imul
aad
jle
add
dec
jbe
dec
fcmovu
adc
es
popf
cmp
int
xchg
loopne
test
xor
mov
xor
mov
inc
lret
decl
push
stc
add
mov
js
cwtl
nop
loop
xor
push
xchg
shll
add
lret
add
and
fstps
sti
adc
cmp
add
aaa
adcl
stc
xor
fistpl
jnp
push
aaa
fldpi
fdivrs
push
cmp
out
mov
stos
fwait
sarl
cmp
jmp
jo
xchg
push
arpl
sbb
mov
in
adc
adc
dec
aad
jae
sub
popf
pop
mov
in
jnp
das
mov
testl
pop
jmp
fldl
pop
or
lock
fcmovnu
cmp
out
cmp
push
ja
xor
jle
lret
aam
or
out
xor
pusha
mov
cmpsl
jne
xor
cmp
sub
push
or
sbb
sahf
aam
jae
movsl
push
push
cmpb
mov
inc
ja
push
into
sahf
iret
sub
lds
push
out
dec
sahf
gs
mov
push
sbb
orl
in
inc
popa
jle
and
inc
mov
int3
or
ficoms
lods
adc
add
jmp
in
sub
mov
cmp
xchg
cmc
pop
lds
fisubs
xchg
divl
movsb
mov
xchg
out
inc
and
add
mov
dec
push
jmp
mov
in
sbb
add
xor
cmc
int
push
pushf
sahf
loopne
dec
inc
mov
dec
jne
mov
push
xchg
cmp
mov
xor
push
pop
xchg
rolb
popf
mov
aas
in
popf
lods
shrb
push
cmpl
out
xor
in
pusha
xor
push
inc
stos
adc
loop
jle
adc
xchg
dec
mov
and
add
mov
mov
call
push
adc
jno
and
rclb
stc
lret
pmuludq
into
fwait
xchg
testb
cs
jbe
dec
xor
cmpsl
mov
mov
repz
xor
xchg
lret
into
jl
jnp
jl
imul
icebp
jo
cmp
outsb
inc
mov
enter
arpl
iret
dec
xchg
js
mov
sub
mov
fidivl
and
data16
adc
push
into
repz
popa
cwtl
test
push
dec
push
xchg
loopne
nop
pop
aam
stc
das
mov
dec
xchg
cmp
pop
js
stos
daa
or
std
in
mov
push
cs
inc
mov
push
adc
loope
mov
es
mov
sub
pop
hlt
aad
add
lea
test
in
inc
repz
or
xlat
add
fucom
mov
loope
adc
push
jb
cmc
sbb
sub
orl
fs
insl
mov
pop
push
int3
push
mov
xchg
xadd
add
out
push
push
test
inc
jae
and
call
xchg
sub
cmp
dec
jb
insb
push
int3
add
mov
jnp
imul
ja
outsb
cmpsb
out
xor
mov
adc
push
jecxz
mov
add
imul
in
adc
inc
test
cmp
jbe
lret
ja
lahf
insl
adc
jge
cmp
out
mov
sub
sbb
sub
mov
sub
cmp
cmp
cmp
loop
inc
rorb
mov
out
fcomp
add
inc
push
out
dec
push
outsl
add
xchg
sub
xor
mov
jb
pop
xor
das
out
pop
sbb
loopne
pop
movsl
xchg
dec
imul
mov
scas
cld
push
jl
mov
sub
movsl
inc
jl
or
aam
test
pushf
gs
add
sub
lcall
cld
mov
movsl
cs
fucomp
stos
repz
and
push
in
dec
imul
fistpl
jl
int3
dec
cmpsl
sub
sub
inc
xchg
sub
xchg
lcall
xchg
cmpb
loopne
fisttpll
adc
mov
inc
mov
push
and
popl
jg
stos
sbb
enter
or
imul
mov
xchg
xor
daa
mov
in
xor
dec
imul
jne
dec
fnstenv
loopne
sarl
iret
aaa
insl
xor
mov
mov
fistl
inc
mov
mov
cmc
ret
or
pop
inc
xor
and
stc
mov
inc
cltd
arpl
mov
js
jnp
jno
popa
repz
mov
ret
add
inc
add
add
cmpsl
out
sbb
xor
dec
les
sbbl
fstpl
dec
pop
imul
stos
sub
pop
stc
jnp
cmp
test
push
jbe
lahf
push
dec
push
xor
push
ret
loop
stos
insb
outsb
int
sub
loop
sub
std
insl
xchg
cld
push
mov
out
push
mov
aam
les
or
pop
addr16
scas
mov
push
mov
mov
outsl
negl
into
mov
push
inc
mov
movsb
sti
cmp
push
dec
out
sti
cs
jge
lods
imul
xchg
ficompl
js
lret
lahf
adc
je
mov
das
mov
test
pop
cli
aad
add
sti
cmp
outsl
test
push
cs
push
xor
inc
add
xchg
push
mov
push
pop
mov
add
pop
aaa
push
popaw
enter
mov
xchg
push
in
jb
mov
cmp
in
mov
rcl
fwait
mov
mov
jp
test
fcomps
std
push
adc
cmp
mov
add
int
jns
scas
loope
pop
jl
xchg
dec
and
and
sarl
js
into
testb
outsb
gs
addr16
xchg
ret
lret
lock
into
sbb
dec
xor
jp
mov
loope
stos
or
jnp
dec
sbb
push
cwtl
pop
lods
xchg
jno
ljmp
inc
les
cs
lods
pop
jae
adc
adc
loopne
xor
jo
mov
test
orl
add
mov
aas
add
or
push
leave
cwtl
xchg
popf
aas
ljmp
push
sbb
jge
jmp
push
or
movsb
pusha
push
nop
xchg
es
pop
dec
jp
je
lcall
cmp
push
pushf
ss
cli
gs
xchg
push
test
icebp
sbbl
ja
add
adc
ja
mov
outsb
pop
cmp
jmp
insb
shrl
push
stc
sarb
and
mov
mov
out
cli
xor
push
jno
int3
adc
into
cli
bound
cmp
dec
movsl
test
cmpl
scas
mov
fwait
scas
mov
sbb
cltd
or
pop
xor
les
ficoml
sub
addr16
push
lahf
ds
jg
or
mov
lods
xchg
sub
push
and
cmp
lods
inc
les
negb
testb
scas
lea
pop
sub
xchg
adc
icebp
pop
jp
mov
mov
jge
mov
lods
scas
les
repnz
push
mov
lret
loop
cmp
scas
mov
gs
and
xchg
lret
cmc
push
adc
add
inc
ja
addl
mov
mov
repnz
dec
loop
mov
pop
cmp
stos
das
xchg
ljmp
xchg
arpl
mov
lock
push
lret
sub
fdivr
ja
jg
addl
dec
inc
or
cmp
jp
dec
inc
lea
stos
fsubr
orb
jecxz
pushf
es
clc
sbb
popa
push
test
shll
daa
dec
mov
fs
fsubr
mov
leave
xchg
pushf
cld
lds
cwtl
adc
inc
ret
mov
mov
inc
test
jns
daa
cmp
lods
int3
jmp
inc
cmp
pop
adc
xchg
push
sub
cmp
movsl
add
add
adc
adc
sti
pop
lds
mov
mov
cmp
dec
loope
les
icebp
gs
pop
mov
out
sub
test
rcr
mov
adc
loopne
jmp
push
das
rolb
in
xchg
dec
or
mov
je
imul
mov
loop
pop
sub
popa
out
xchg
sbb
rclb
cmpsb
imul
test
mov
or
fdivs
jg
sub
xchg
in
addl
or
das
cs
jb
jmp
mov
push
add
sub
enter
repz
jbe
in
jg
bound
sub
loope
aad
mov
mov
cwtl
out
scas
push
pusha
idivl
or
or
push
cmp
les
iret
xor
sub
rep
jl
js
out
fs
pop
test
ds
scas
sahf
das
test
clc
sbb
sarl
push
cmp
jecxz
jle
adc
xchg
je
movb
sti
pop
rorl
gs
cmp
fmul
loopne
xchg
test
mov
adc
jb
lahf
dec
mov
nop
cmp
jmp
add
int3
in
les
fwait
stos
mov
push
sbb
insb
dec
jmp
cmpl
jmp
adc
sub
je
stos
inc
xchg
mov
aas
inc
push
mov
jmp
xchg
scas
lret
sbb
fimuls
push
idivb
inc
xchg
mov
dec
xchg
adc
data16
cmp
or
imulb
outsb
and
adc
aas
ljmp
xchg
mov
mov
mov
adc
stos
test
sbb
iret
loopne
jns
sub
sub
or
jns
xchg
xchg
rorl
leavew
mov
xchg
sbb
xchg
jp
stos
sbb
std
fs
out
or
jne
push
lret
mov
adc
adc
test
add
mov
leave
sub
cmc
hlt
mov
or
dec
in
cmp
popf
cli
mov
jns
mov
pop
sub
aas
mov
inc
jb
xor
addl
adc
push
xor
aad
nop
jo
aam
fcmovu
push
xchg
sbb
xchg
ljmp
dec
mov
cmp
psrad
adc
pop
arpl
pop
fcompl
sub
cwtl
gs
and
test
xor
sub
mov
cmp
jl
mov
pushl
inc
jl
add
mulb
pusha
out
popa
xor
sbbl
xor
gs
leave
dec
xchg
js
mov
es
cmc
std
mov
ss
mov
js
sbb
cwtl
xor
cmp
xchg
add
and
repnz
ds
mov
arpl
xor
inc
out
arpl
xchg
xchg
sub
enter
add
adc
pop
cmp
cmc
fidivrs
in
mov
jae
jmp
es
ror
xor
lods
xchg
js
sbb
clc
pop
scas
xor
fwait
mov
or
cmc
out
lods
xor
xchg
jmp
sub
cmc
sbb
lds
aad
xchg
in
addr16
adc
je
inc
mov
push
pop
push
add
adc
into
int
pop
and
and
inc
mov
pop
add
sbb
cmp
mov
dec
xlat
and
pop
je
test
je
cmp
int3
add
inc
pop
insl
scas
pop
arpl
and
orl
sbb
sbb
sub
jb
cmp
repz
xlat
mov
mov
hlt
mov
cmp
pop
daa
mov
add
add
pusha
cli
mov
fwait
dec
rorl
inc
sahf
and
mov
jmp
ja
fnstenv
fisttps
push
xlat
das
mov
pop
aaa
mov
mov
imul
adc
mov
mov
rcr
mov
add
in
leave
in
lods
sbb
loope
fcomps
iret
and
shlb
mov
sbb
mov
call
add
push
sub
mov
and
add
mov
pop
jl
das
xlat
push
pushf
lret
lds
and
and
shlb
jae
xchg
out
test
lds
mov
xchg
sub
inc
mov
mov
sbb
das
ret
ss
daa
in
icebp
std
or
sub
clc
test
dec
sub
xchg
aam
ret
mov
dec
fnstenv
dec
jl
fsubrs
aad
scas
dec
test
filds
jbe
or
xchg
mov
push
icebp
aad
xchg
xchg
roll
mov
mov
mov
jno
sbb
sub
and
aaa
int3
rcrb
mov
push
je
jp
ret
sbb
lcall
dec
arpl
sub
dec
fwait
sbb
mov
lret
inc
arpl
mov
insb
stos
dec
mov
or
lods
adc
add
les
movsb
repz
cmp
lods
adc
ret
cltd
push
popa
mov
push
rolb
push
mov
into
jmp
cmp
or
data16
les
xchg
in
out
dec
fisubrs
and
inc
jno
sub
sti
test
out
insb
push
stc
ret
mov
enter
sbb
xor
imul
packssdw
jb
std
add
dec
dec
icebp
add
enter
ja
flds
xor
xlat
pushf
mov
arpl
fs
jns
add
fnstsw
out
mov
push
stc
aam
sub
mov
fildll
inc
pop
pushf
movsl
pusha
addr16
or
jg
pop
mov
mov
int
pop
push
imul
test
mov
sbbb
fisubl
mov
loop
jg
mov
pop
mov
jno
inc
sub
jmp
sbb
fadds
cs
addr16
fwait
push
jecxz
sti
push
jns
mov
mov
stc
testl
mov
sub
pop
mov
jl
xor
mov
std
jl
jmp
push
sub
add
and
es
push
shrb
mov
rclb
xchg
mov
push
adc
repz
stos
je
hlt
loope
pop
pop
daa
push
jle
test
xchg
lahf
dec
fdivrs
inc
in
ret
mov
pop
mov
cmp
movsb
insl
scas
push
push
pop
shr
insb
mov
inc
ss
insl
inc
sbb
ret
cwtl
mov
pushf
ja
and
mov
inc
or
mov
lods
mov
aad
popf
cmp
pop
sarb
lds
les
mov
lret
les
dec
sbb
pop
roll
sbb
xchg
aaa
xchg
push
add
fdivp
ljmp
mov
js
fildll
ret
in
or
fs
xor
pop
pop
notl
cmpsb
jge
mov
add
fstps
and
xchg
popf
sahf
fsubl
ljmp
pushf
xor
sbb
adc
cmp
jno
repnz
cli
sar
xchg
clc
lds
mov
loopne
bound
imul
lahf
scas
jle
xchg
sti
bound
cs
jmp
flds
mov
lods
out
call
mov
rcll
leave
inc
in
or
addr16
dec
adc
es
jle
cmp
ljmp
cmpsl
inc
sarl
adc
sbb
xor
jg
rcll
inc
inc
aad
daa
pop
roll
or
mov
push
ss
dec
imul
mov
lcall
mov
mov
int
lea
mov
dec
dec
xchg
pop
dec
xchg
xor
daa
sub
dec
xorb
mov
mov
lret
add
pop
and
xchg
stc
fcomps
in
movsl
pusha
rolb
add
sahf
ljmp
clc
gs
insl
ficompl
fdecstp
mov
adc
rorl
mov
daa
mov
cmc
arpl
and
lcall
in
push
sahf
push
leave
movsl
imul
aaa
shr
mov
pop
sbb
ficoml
sub
enter
sarl
incl
ret
jg
subl
sarl
roll
pop
ljmp
push
in
aad
inc
adc
push
add
jnp
xchg
mov
sub
mov
scas
scas
fists
decb
outsl
icebp
ja
mov
xchg
les
push
sub
dec
stos
lahf
sti
mov
push
pop
loopne
cwtl
jmp
clc
or
imul
addr16
mov
and
sub
push
mov
popa
jge
jbe
inc
pushf
arpl
incb
inc
push
ret
pusha
movsb
jp
es
mov
xchg
test
pop
sub
add
jl
ss
out
pop
mov
into
aaa
xchg
push
or
jae
pushf
ss
cmp
nop
push
jge
out
mov
aas
jns
into
mov
xchg
cli
jne
mov
inc
and
xchg
fcmovb
mov
xchg
xchg
push
mov
pop
add
pop
cmp
fsubp
popl
mov
push
push
xchg
mov
pop
mov
sub
jo
inc
imul
push
mov
mov
imul
dec
lret
inc
sahf
mov
push
mov
fs
pusha
inc
and
sbbb
mov
jne
dec
inc
mov
loopne
out
push
cwtl
push
adc
loope
cmp
pop
add
add
or
adc
fs
lea
dec
pop
je
dec
cmp
sub
enter
xor
lahf
mov
sbb
into
ja
ljmp
sbb
mov
sahf
sub
div
hlt
xlat
daa
adc
inc
dec
jl
scas
add
adcb
sbb
das
xor
push
xor
jo
in
or
jge
into
mov
and
mov
mov
int
jp
inc
mov
lret
fstps
nop
ja
xor
in
shl
test
fldenv
sub
or
fmuls
xor
mov
pop
rorl
jmp
mov
adc
pop
mull
xor
xchg
shll
lret
dec
mov
sub
scas
and
outsb
adc
mov
push
lret
icebp
insl
jne
lret
sub
xor
sbb
pop
cmp
or
sbb
and
int
or
loop
mov
aad
pop
lods
xor
outsb
xchg
cmp
cmp
jns
cs
dec
inc
or
negb
nop
mov
jo
jg
xlat
fnstsw
mov
mov
push
iret
pop
push
data16
outsb
xor
sahf
mov
sub
stc
mov
rolb
das
push
jge
aad
mov
pop
repnz
or
xor
jmp
adc
fdivrs
fiadds
inc
into
insb
ss
outsb
jmp
lods
mov
push
cs
fisubs
dec
jbe
or
mov
shll
xchg
dec
shrl
lds
mov
repz
push
lahf
aas
popf
push
out
dec
cmp
lret
add
int
insb
out
sub
xchg
iret
les
in
xchg
test
push
inc
fisttpll
jle
mov
mov
ja
mov
mov
incl
sbb
sub
or
sub
inc
es
inc
cmp
xchg
mov
scas
and
xor
push
cmpb
cmp
lahf
sub
cmp
cmp
cmp
imul
cmp
aad
jno
mov
fwait
cmp
pushf
mov
inc
sbb
pop
jne
push
fdivl
add
jbe
mov
shll
fbstp
popa
mov
daa
sub
mov
jg
out
mov
mov
pop
in
xchg
dec
mov
lret
xchg
ljmp
movl
fidivs
push
fbstp
inc
mov
dec
mov
movsl
xor
popa
insb
and
and
outsl
dec
xchg
pop
mov
lock
push
sbb
jp
add
inc
mov
fmul
jmp
jmp
push
cmp
mov
negb
mov
es
xor
mull
sub
mov
inc
outsb
ret
jecxz
icebp
sub
inc
mov
enter
sbb
lods
es
mov
jle
jb
mov
jo
jno
jb
iret
mov
stc
outsl
push
jg
or
sub
push
xor
inc
iret
sub
pop
mov
leave
jno
push
mov
aaa
or
lds
mov
sbb
loop
push
ds
sbb
inc
adc
xchg
pop
pop
jmp
out
dec
fldcw
or
cltd
iret
and
push
cmp
cs
push
mov
ds
or
stc
pushf
imul
bound
out
mov
jp
inc
loope
pop
lahf
inc
and
cmp
sahf
xchg
sub
sbb
sarb
add
xchg
push
adc
sbb
ljmp
and
imul
push
dec
push
in
inc
or
push
bound
add
aaa
pop
pop
hlt
addr16
sub
and
gs
mov
pop
sahf
lea
cmp
jmp
cmp
lcall
pop
mov
add
aam
push
xchg
call
pop
lds
outsl
sarb
mov
ljmp
je
xchg
mov
jmp
xor
shrb
sarb
out
push
data16
dec
or
sbb
push
fsubl
lret
movsl
shrl
ljmp
lret
dec
inc
add
into
jle
in
mov
cli
inc
nop
fs
pusha
push
mov
mov
sbb
sbb
dec
dec
add
sub
dec
jae
nop
adc
sbb
push
pop
out
out
mov
cmpsl
and
jne
push
push
cltd
and
and
inc
sub
movsl
imul
xchg
rcrl
mov
mov
in
jg
cs
dec
sub
cmpb
cld
movb
and
aam
xor
jge
jmp
sahf
dec
addr16
jle
ffree
enter
enter
jmp
nop
mov
pop
outsl
push
aas
cmp
mov
aad
jnp
stc
sbb
movsl
pop
cmp
dec
sub
adc
daa
mov
adcl
cmc
push
mov
sub
pusha
add
lods
adc
popf
popf
sub
adc
push
adc
enterw
dec
inc
les
mov
and
cmp
inc
mov
test
xor
lods
adc
xchg
add
scas
xor
push
inc
daa
adc
add
add
jno
dec
pushl
imul
cmc
popa
jb
adc
test
push
lods
testb
ret
fbld
fwait
loop
into
or
xchg
dec
cwtl
push
ja
xor
cmp
das
inc
jp
push
ja
aam
adc
testl
pusha
xchg
mov
in
ret
lret
pop
fbstp
push
stc
cmp
or
sahf
stos
scas
sbb
xchg
push
mov
mov
and
mov
pop
adc
mov
outsb
cs
sbb
addb
cmp
lahf
jbe
in
push
adc
sbb
lods
insb
sbb
addr16
sti
mov
testb
pop
or
pop
inc
lret
lock
inc
inc
mov
xchg
iret
mov
mul
rorb
and
test
sub
imul
in
in
stc
div
add
dec
sub
cmp
sub
std
movsb
xchg
test
into
movsl
mov
adc
addb
inc
adc
loop
je
fsubrp
xor
pop
sbb
add
call
jbe
and
jb
push
mov
or
lahf
data16
cmp
mov
imul
adc
mov
in
mov
in
cmc
fdivl
insb
dec
clc
cmp
fnstenv
pop
jle
jecxz
roll
aas
scas
xchg
jmp
dec
inc
sub
fwait
mov
jne
dec
mov
cmp
movsb
xor
adc
jae
adc
ja
sub
cmp
push
sbb
pop
jbe
jge
sub
dec
test
jno
adc
out
and
jp
or
and
loopne
idivl
into
cmc
rclb
nop
cwtl
loopne
enter
pop
pop
addr16
pushf
cmp
and
pop
cmpsb
sbb
push
ret
add
hlt
mov
cmpl
cli
jp
push
mov
push
push
lret
inc
dec
pop
test
inc
mov
inc
inc
jle
sbb
ds
pop
stos
push
sbb
pop
add
adc
daa
test
out
xchg
push
sbb
or
ja
fistpll
adc
mov
faddl
mov
mov
push
push
pop
jl
out
hlt
mov
push
or
icebp
push
inc
ficompl
cmpb
and
ret
movsl
cwtl
inc
fwait
call
sbb
jnp
push
pushf
xchg
int3
and
xchg
and
xchg
aad
and
push
test
pop
bnd
sbb
push
cs
mov
fwait
bound
sti
or
sarb
inc
fnstcw
cs
jl
or
sbb
mov
out
jo
test
std
mov
lret
pop
rcrl
push
aaa
aad
stos
cmpsl
arpl
jne
cmpsb
push
sbb
add
lods
fs
test
sub
sbb
mov
sbb
xchg
lahf
lea
rorb
lret
jecxz
adc
adc
ret
inc
pop
mov
sub
and
test
or
lcall
xchg
cmp
gs
hlt
push
loopne
pop
arpl
cmp
jno
pop
mov
movsb
and
add
push
mov
cld
movsl
into
in
out
loop
aad
push
dec
cld
in
outsb
pop
sub
mov
ljmp
xchg
push
hlt
cmp
and
sbb
mov
mov
fcmovnb
in
outsb
mov
in
mov
mov
pop
mov
jb
lock
aam
sahf
dec
sbb
or
lret
roll
inc
sbb
sbb
jns
arpl
ds
jns
jo
hlt
ja
pop
add
lea
dec
mov
mov
lods
xchg
pushf
out
fadds
inc
imul
lods
jns
dec
push
xlat
loopne
sub
repnz
int3
sub
or
pop
es
inc
jge
adc
test
insb
ret
push
cltd
sahf
mov
mov
jl
test
cmpsl
jns
cmp
notb
insl
aad
loope
jp
fisubrs
pusha
pusha
pop
push
fldt
lret
call
pop
jae
mov
pop
in
ret
pop
xor
mov
mov
adc
andb
cmp
jb
lret
fldcw
mov
outsb
cmp
and
cmc
stos
fwait
and
icebp
mov
lret
ret
jl
sbb
adc
and
push
mov
mov
lret
test
negl
cs
jmp
cmp
lds
inc
jge
addr16
daa
cmpsl
lods
int
outsb
hlt
jbe
xor
cli
scas
adc
or
jb
out
jle
push
sbbl
xchg
dec
les
lea
mov
jp
lods
mov
adc
xor
mov
cmc
inc
inc
das
repnz
push
inc
pop
arpl
ds
mov
stos
jg
in
and
inc
sbbb
cmpsb
mov
stos
cld
xchg
es
push
dec
js
and
aas
into
sti
inc
outsb
xchg
mov
cwtl
sub
orl
push
retw
stc
fisttps
ffree
adc
pop
jne
sub
movsb
pop
mov
mov
test
aaa
jnp
mov
mov
lock
inc
outsb
jbe,pn
mov
jl
movsl
sbb
shrl
shlb
scas
fildl
mov
push
dec
mov
dec
call
nop
test
xor
or
out
lcall
xchg
cmp
and
push
aaa
cwtl
lods
inc
sbb
dec
iret
stc
inc
mov
pop
int3
pop
dec
call
mov
dec
pop
call
jbe
stc
shll
xor
mov
scas
popa
nop
or
insl
into
mov
push
xchg
ret
sbb
adc
clc
mov
dec
mov
cs
ret
test
shll
pusha
gs
pop
jle
imull
jns
push
mov
and
call
pop
rorb
rcrl
or
loop
std
cmp
out
lret
popa
and
jmp
inc
mov
cmp
mov
dec
jb
cltd
jo
xchg
mov
leave
and
pushf
and
pop
std
pop
mov
stos
push
repz
mov
test
outsl
xor
ds
iret
jle
pop
xchg
push
mov
jo
fistpll
fs
add
test
orb
fadd
add
inc
cli
inc
aaa
mov
dec
xor
push
ror
insb
ss
movb
cmp
stc
fdivl
xor
mov
test
push
adc
stc
repz
jmp
sahf
xor
ret
add
in
xchg
test
cmpsl
cmp
xchg
scas
leave
sub
lods
popf
mov
mov
lods
sbb
imul
out
mov
stc
mov
inc
sbb
in
std
ret
addr16
test
shrb
add
xlat
movsb
test
das
xor
in
pushf
aad
inc
ja
xor
xchg
and
pop
dec
shl
in
pop
in
shrb
pusha
jge
notl
cmp
jno
fistpl
inc
or
cmp
lods
mov
cmp
cmp
shlb
rcrb
mov
cmp
sub
xchg
sbb
mulb
cmp
adc
ss
pop
aas
mov
js
jae
lods
cli
push
sub
xor
cmpb
mov
orl
xchg
dec
in
jae
shrb
jl
and
pop
daa
aam
or
fsubr
loopne
and
jecxz
dec
mov
xchg
rcl
pop
stos
andb
mov
scas
repz
add
mov
in
test
or
cmp
mov
inc
jp
popa
xchg
xchg
inc
ret
pop
mov
in
add
cmp
inc
data16
std
aad
repz
jge
bnd
cltd
mov
lods
and
in
mov
jmp
sub
out
adc
adc
push
rcl
js
divl
jne,pn
xchg
lea
cmpsb
nop
test
movsl
pop
insb
popf
sarl
mov
push
sub
out
scas
xor
aad
cmp
add
push
lods
mov
notb
aas
jmp
push
push
jmp
inc
mov
sub
and
jle
movsb
mov
xchg
or
fsts
xchg
jl
dec
clc
push
popf
lock
inc
loope
icebp
ret
lret
jecxz
arpl
test
and
test
mov
xchg
notb
ja
arpl
ret
hlt
cmpsl
ss
shll
sbbb
and
lock
and
ljmp
je
mov
jns
pop
add
cli
js
xlat
xchg
test
inc
repnz
aas
daa
repnz
lods
es
sub
cmp
inc
cmpb
cmp
mov
dec
pusha
or
pushf
jb
inc
bound
xchg
sub
sti
push
lds
lret
add
and
xor
aam
aad
add
xchg
add
jle
int3
jns
scas
call
mov
insb
pop
push
enter
insb
cmp
cmp
dec
push
adcb
mov
and
xchg
mov
movsb
mov
test
xlat
mov
addr16
mov
fstps
or
sub
repz
jg
xor
add
out
addr16
jno
roll
enter
lcall
orl
int3
jne
sbb
fbstp
jle
scas
jp
scas
dec
pop
dec
xorl
ret
decb
add
test
sbb
mov
jbe
and
mov
mov
test
add
xchg
bound
jg
lcall
cmpb
xchg
sbb
jno
insb
and
repnz
xchg
das
mov
fdivl
xchg
mov
add
jae
mov
fsubl
xchg
dec
mov
stc
test
stos
sub
jne
xor
lods
mov
jecxz
jg
inc
adc
ds
inc
aad
jne
popa
mov
loope
mov
std
or
xor
addr16
lds
fimuls
inc
nop
adc
adc
and
shrl
sub
js
aas
xchg
mov
push
js
gs
cmp
mov
fwait
loopne
jno
cmp
inc
ss
add
xor
push
sbb
out
add
push
in
daa
fs
dec
adc
inc
subb
mov
ret
scas
inc
test
jno
dec
cmp
mov
pop
arpl
mov
sahf
js
cmp
nop
inc
xchg
outsb
mov
imul
ret
inc
pop
nop
in
mov
fadds
nop
sahf
pop
shll
lods
aas
mov
dec
and
and
cmp
int
in
loope
popa
out
mov
push
cmc
dec
push
stc
cwtl
cmp
and
inc
sbb
push
inc
jb
cltd
mov
fcomps
imul
xor
jnp
fldenv
shr
sbb
out
inc
sub
insl
jle
inc
inc
into
in
xchg
outsl
ret
lods
loopne
negb
enter
and
jae
int3
add
xchg
mov
test
cmp
pop
popf
out
or
aaa
imul
shlb
jg
gs
std
daa
jae
cwtl
in
sub
jmp
cmc
xchg
incl
insl
cli
mov
jecxz
es
xchg
ret
pop
xchg
cmpsl
and
movsb
cwtl
sub
and
les
shl
test
sub
mov
sub
dec
jo
lds
ss
push
outsl
repnz
mov
loope
popa
jnp
lahf
jae
std
mov
js
leave
stos
nop
sbb
push
dec
addr16
sbb
mov
aaa
repz
pop
mov
test
scas
lret
xor
pop
jb
jno
adcb
add
add
jge
ficoml
sbb
outsl
and
sbbl
push
fiaddl
outsb
mov
or
xor
sub
enter
mov
mov
sahf
add
in
sub
or
adc
sbb
fistpl
aas
adc
cmp
popf
adc
cmp
xchg
xchg
pcmpeqb
gs
ficoms
xchg
add
addr16
mov
stos
icebp
loope
dec
loope
mov
ret
pop
push
sbb
push
adc
push
shrb
out
push
lods
ficoms
dec
pop
mov
sub
movsb
rclb
mov
jecxz
sahf
and
icebp
in
mov
lcall
stos
shr
in
pusha
mov
pop
pop
dec
cmp
rorl
test
test
add
dec
mov
fadd
inc
popf
sub
add
lret
fldenv
add
inc
mov
cs
sub
test
xchg
call
push
push
jno
repnz
mov
rcrl
aas
ret
jbe
sbb
sub
adc
sub
ja
mov
xchg
aam
sahf
adc
loop
loopne
jno
inc
jge
insl
dec
jg
mov
sbb
adc
aam
mov
imul
jmp
jge
mov
add
int
loop
inc
dec
jge
jecxz
xchg
imul
xor
lods
scas
cltd
mov
cmp
dec
jl
das
clc
jl
das
in
cltd
jecxz
dec
repz
shl
sbb
ja
ret
cmp
xchg
std
mov
mov
xor
mov
adc
iret
in
mov
insl
add
cmpsb
mov
adc
mov
rcrl
xchg
or
rorb
sub
jno
jb
jno
cmp
dec
es
dec
pop
fidivrs
dec
xchg
adc
test
jae
mov
or
adcb
insb
leave
add
xor
sbb
inc
rol
cmp
or
pushf
inc
imul
int3
or
popa
js
xor
xlat
cmp
std
pusha
jo
and
daa
pop
out
rcll
test
xchg
adc
testb
xor
or
ret
daa
cltd
mov
orb
imul
add
loop
mov
icebp
adc
stos
ja
shrl
sbb
jbe
pop
movsl
cld
hlt
dec
adc
jnp
lret
xchg
xchg
sbb
and
sahf
sub
test
and
into
or
push
mov
mov
push
test
pop
and
lock
sbb
or
inc
mov
dec
mov
cmp
cmpsl
pop
dec
sbb
jbe
ss
adc
or
jns
and
jmp
dec
arpl
cmp
shl
cwtl
push
pinsrw
leave
enter
add
outsl
bound
mov
popa
pop
lret
xor
repz
shl
fs
sub
cmpsl
cmp
lock
fldt
mov
shlb
inc
push
adc
ret
and
call
dec
icebp
daa
call
in
fs
stc
ja
cmpsb
scas
sub
or
outsb
rcr
mov
and
iret
imul
mov
lret
jbe
add
and
push
jg
popf
mov
mov
inc
shrb
aaa
insb
rorb
jns
in
mov
scas
pop
mov
jne
jmp
loop
and
je
daa
loopne
gs
ret
lcall
out
in
outsl
mov
daa
shll
mov
test
add
pop
adc
out
dec
lcall
or
mov
in
push
shlb
clc
cmp
mov
push
jg
lcall
mov
or
and
sub
mov
xor
cmc
loop
lret
rcr
movsl
mov
in
pop
pop
push
movsl
sbb
push
fmull
mov
pushf
sbb
dec
jne
loope
test
test
sub
adc
pusha
divb
lods
in
dec
test
or
push
cmpsl
push
enter
lcall
cmp
in
les
mov
pop
xchg
cmc
jge
or
in
xchg
das
push
jp
gs
and
hlt
xchg
jns
hlt
xchg
fiadds
je
stc
dec
dec
mov
adc
xchg
xor
mov
sarl
iret
sbb
pop
sbb
bound
aad
push
push
test
add
pop
lods
xor
sbb
xchg
addr16
jnp
push
jae
repz
jne
or
imul
outsb
xor
loopne
adc
scas
outsl
loop
stc
icebp
xor
ret
xor
lcall
xchg
mov
push
loopne
insl
out
xor
sbb
cmp
xchg
jmp
popf
mov
pushf
sub
outsl
lahf
mov
stos
fwait
notrack
lret
jo
dec
test
cld
push
cli
or
loopne
mov
pop
hlt
daa
xchg
test
dec
cmpsl
xchg
cs
clc
add
loope
mov
push
mov
imul
popa
sbb
push
xchg
enter
std
inc
sti
movl
movsl
loop
aam
xchg
mov
sti
add
adc
scas
or
arpl
int3
or
lea
lea
jecxz
mov
outsl
mov
dec
shll
xor
ljmp
adc
xchg
test
sub
gs
sti
xchg
pop
push
enter
mov
test
dec
leave
xor
mov
enter
jecxz
shll
nop
xchg
mov
inc
cmp
bound
push
xor
ror
movsb
xchg
jb
movsl
movsb
mov
out
negl
in
push
push
and
das
pop
inc
stos
mov
jnp
popf
or
push
push
xor
jns
and
sub
aad
fists
fnstenv
mov
jns
adc
mov
mov
jp
and
xor
and
cmp
daa
pop
add
xor
xor
pusha
push
rclb
cmp
pop
jo
dec
jg
inc
data16
aad
inc
adc
movsb
je
mov
mov
dec
push
mov
jmp
push
inc
sub
inc
mov
addl
dec
packsswb
xor
xor
pop
out
cmp
xchg
push
jecxz
xchg
ljmp
push
int
jae
stc
outsb
adc
rcll
push
mov
push
js
bound
xchg
mov
jno
fstl
sub
push
pop
inc
test
jno
mov
sub
jo
xchg
outsb
sbb
movsb
fdivr
xchg
sub
adc
xor
jecxz
push
outsb
pop
pushl
rcll
xor
mov
cmpsb
cmovns
loopne
je
or
pop
daa
out
insb
add
inc
jo
iret
mov
jns
adc
dec
push
lds
sti
jo
mov
pushf
and
dec
sub
or
jge
sub
jge
mov
lcall
aam
stos
test
mov
mov
push
push
sub
cmpsb
and
mov
adc
jnp
cmp
add
mov
sbb
jge
icebp
cmp
or
popf
pop
xor
xor
jecxz
scas
addl
pop
jnp
inc
and
loope
lret
in
mov
xchg
jecxz
or
mov
and
imull
test
and
aas
mov
push
sub
adc
movb
cmp
loopne
xor
xchg
pop
mov
into
cmp
dec
mov
icebp
push
mov
scas
add
jbe
fistpll
xchg
adc
sbb
gs
and
ljmp
adc
dec
cmova
shl
iret
push
mov
scas
jnp
lsl
adc
shlb
or
push
xchg
inc
int
and
mov
cmp
stos
or
stc
addr16
xor
fcmovbe
stos
pop
stc
clc
in
xor
cld
popf
dec
test
ja
mov
xchg
fmuls
lds
sub
cmp
push
sub
inc
adc
jle
mov
adc
repz
inc
xchg
jmp
scas
push
xchg
dec
lahf
iret
sahf
fnstcw
adc
es
frstor
jae
movsl
inc
andl
jno
jmp
xor
scas
sbb
outsl
jmp
mov
xor
inc
shlb
pop
inc
xorl
movsl
inc
lret
lds
inc
xchg
repnz
ds
mov
adc
cld
mov
xor
pop
xor
data16
inc
xchg
or
pop
into
xchg
outsb
mov
imul
add
or
mov
into
icebp
ret
add
addb
popf
mov
mov
insl
mov
stc
cs
pop
mov
int3
pop
mov
daa
xchg
mov
xlat
popf
pop
ret
scas
push
pop
push
es
gs
ljmp
loopne
out
test
int3
addr16
insb
outsl
xchg
fsubrs
inc
lahf
adc
les
add
mov
cmp
mov
adc
jg
andb
leave
mov
push
std
fsts
lock
dec
sti
movsb
mov
pop
lea
mov
or
aas
mov
fwait
cmpl
xor
or
js
sti
cmp
sub
mov
add
jnp
out
adc
fdiv
je
sub
inc
mov
adc
mov
shlb
sarb
imul
adc
mov
jg
jg
scas
mov
in
repnz
shlb
hlt
and
fwait
jl
jg
cmp
or
cmp
fldl
jle
into
adc
shrb
pop
lcall
lret
test
fisubrs
add
hlt
ljmp
in
aas
in
out
sbb
popf
jne
cwtl
jge
inc
mulb
jo
inc
fs
out
dec
inc
mov
nop
in
jnp
into
cmpsl
mov
or
xchg
mov
sbb
and
mov
dec
cld
or
mov
ljmp
xor
add
mov
adc
out
fsubr
mov
adc
pop
mov
cli
lahf
adc
xchg
popa
add
enter
or
outsl
dec
call
leave
pop
dec
cs
sbb
insl
roll
loop
pop
aam
jns
fstp
inc
and
out
fmul
ds
lcall
lds
and
jl
insb
add
xchg
lahf
sbb
popa
movsl
sub
cmp
rorl
ret
mov
dec
mov
add
out
jae
jmp
xchg
dec
lret
lds
js
pop
jmp
jg
aas
lock
sub
mov
sbbl
ds
stc
xchg
test
or
mov
jecxz
adc
into
shl
stos
mov
add
pusha
jecxz
or
jecxz
ss
aam
push
dec
je
push
fmul
xchg
lea
xchg
mov
push
clc
rcr
jae
pop
mov
push
or
pop
mov
cmp
adc
std
mov
out
lods
mov
rcrl
icebp
lret
test
outsb
adc
imul
rolb
shl
and
mov
xchg
int3
or
fistpl
fwait
je
notb
stc
cmp
sti
jnp
loopne
pusha
cli
push
out
or
mov
pop
fcmovbe
or
mov
add
push
in
mov
and
punpckhwd
jnp
roll
fwait
shlb
test
mov
repz
mov
jo
lahf
xchg
lret
xchg
sbb
xchg
pop
sub
mov
push
push
js
dec
jno
sbbl
or
cmp
mov
mov
mov
cld
and
push
pop
iret
sbb
xor
test
push
adcl
lahf
imul
push
shl
adc
arpl
es
mov
movsb
adc
xor
pop
movsb
repnz
mov
mov
mov
add
das
pop
insl
mov
mov
cmpsb
push
aas
iret
rcrl
adcb
movsl
popf
cmp
jb
sub
jl
xor
mov
jnp
lahf
in
repnz
cmpsl
cmc
insb
push
out
and
enter
push
dec
icebp
adc
sub
mov
aas
push
int3
xlat
ljmp
mov
mov
sbb
jge
int
and
cld
ficoml
jns
cvtps2pd
fisubs
xor
gs
dec
inc
stos
outsw
cmp
inc
fdivr
gs
push
jbe
sbb
xchg
je
faddl
in
dec
xor
inc
push
fabs
add
cmpl
mov
jae
xor
in
mov
xchg
outsb
mov
ljmp
int3
xor
outsl
mov
test
adc
xchg
push
jg
in
pop
outsb
xchg
imul
orb
push
cmp
daa
dec
fisttps
fdivr
mov
shlb
mov
dec
mov
fwait
push
test
fists
xor
xor
es
shlb
xchg
subb
andl
cmp
sbb
push
mov
fstpl
in
cmc
mov
mov
xor
outsb
pop
mov
icebp
jg
cmp
mov
push
adc
xchg
push
insb
mov
mov
xor
ss
clc
dec
ret
aad
arpl
scas
fiadds
sahf
jecxz
subb
push
lea
data16
xchg
inc
jne,pn
jecxz
fstpt
out
sbbl
or
adc
pop
and
xchg
jmp
pop
mov
or
cmp
sbb
movsb
sub
cmc
cld
test
stos
fwait
loope
adc
test
cmc
sahf
das
jmp
fstl
test
dec
push
and
xchg
out
ret
pop
sar
xchg
adc
aaa
ret
movsb
hlt
add
lcall
lret
insb
dec
bound
inc
ss
fcomip
mov
add
and
pop
xor
into
imul
cwtl
xor
push
fcoml
mov
jmp
xchg
shlb
mov
pop
adc
call
mov
ret
or
mov
in
arpl
es
xlat
insl
iret
test
mov
xchg
out
cmp
sub
rorl
xor
sbb
mov
mov
nop
fisubl
out
or
dec
fistpl
inc
les
xchg
inc
mov
test
jb
mov
jnp
sub
fwait
pusha
jg
add
in
in
xchg
mov
sbb
std
mov
xchg
fs
and
fcmovnb
lret
or
mov
push
inc
sbbl
fisubrs
mov
pusha
andl
sub
test
sbb
cld
jne
push
dec
push
add
outsb
cmpsb
fcoms
pop
das
inc
dec
mov
outsb
mov
lods
pusha
out
cmp
in
sti
ret
inc
clc
jge
xlat
int
ljmp
in
mov
adc
gs
pop
inc
mov
stc
xchg
cmpsb
lret
and
cmp
bnd
outsb
cmp
int3
bound
sahf
mov
cmp
dec
inc
xorl
out
jns
push
movsl
mov
sahf
loopw
arpl
ficomps
or
dec
shl
enter
fisubs
clc
cltd
ret
ret
pusha
mov
or
int3
and
repz
xchg
xchg
or
shlb
sub
dec
sbb
cs
in
lret
dec
pop
mov
mull
cmp
lahf
cwtl
repz
aam
jbe
mov
xor
or
lret
negb
push
or
inc
clc
pop
cmp
jecxz
push
out
int3
sbb
dec
adc
rorb
add
icebp
sbb
add
mov
negl
mov
push
push
mov
jge
bound
xchg
dec
push
push
orl
push
cmpsl
out
push
jae
lds
add
jle
sub
pop
popa
les
sbb
insb
add
mov
pushf
add
jno
mov
outsb
out
pop
aaa
das
pop
adc
jl
jns
cmp
pop
inc
popf
mov
add
lret
dec
fnsave
mov
sub
fndisi(8087
mov
call
ja
js
or
clc
dec
pop
pop
push
add
dec
pop
aaa
mov
push
mov
add
or
push
fdivrs
fistps
dec
subb
cmp
lds
xor
xchg
dec
fimull
rcrb
mov
xchg
into
aas
fs
das
dec
andb
stos
ja
sbb
dec
mov
aaa
pop
sbb
xchg
aas
mov
daa
sti
inc
push
pop
pop
enter
and
sti
push
mov
jns
cmp
and
jo
into
popf
jle
jno
jg
xchg
lods
xor
loope
sub
popl
in
xchg
pop
shll
jb
add
or
mov
fs
push
mov
mov
push
jle
dec
mov
mov
push
iret
outsb
mov
mov
jmp
test
andl
sbb
and
mov
data16
nop
sbb
pop
rcl
setae
xor
aam
aas
push
pushf
mov
fs
mov
push
dec
mov
mov
ljmp
mov
mov
out
lock
dec
mov
fmull
and
shlb
cmp
js
je
sub
fs
dec
and
call
pop
je
movl
arpl
idivb
push
in
int
sub
jl
sahf
or
push
jae
aaa
mov
push
push
push
cmc
fcmovnbe
or
and
sbb
sbb
xchg
dec
push
gs
pop
dec
sbb
inc
ret
jae
mov
rep
cwtl
inc
ficoml
lods
outsb
and
and
cmp
out
add
movsb
pop
outsl
adc
test
fdiv
pusha
scas
sbb
mov
xchg
mov
sarb
adc
stc
sbb
and
jne
movsl
addr16
stos
pop
xchg
movsl
push
rcll
pop
in
push
xchg
sub
in
icebp
fadds
and
cli
pop
popa
and
fcomip
mov
iret
int
mov
mov
pop
cwtl
pop
out
mov
jmp
sub
std
arpl
jbe
cmp
xor
sub
dec
into
push
xor
xchg
xor
imul
cmp
mov
ret
leave
dec
push
sahf
cs
insl
xor
xchg
pop
adc
insl
xchg
and
gs
xchg
mov
push
insb
jp
jge
addr16
push
roll
mov
es
add
div
sub
push
sbb
pop
enter
push
sub
jo
insb
adc
mov
test
inc
mov
cld
sub
fistpll
out
sbb
leave
xchg
in
mov
stos
movsl
inc
jp
imul
mov
ja
std
push
jbe
and
pop
fwait
shld
cmp
jmp
lea
sub
cmc
ficoms
pop
pop
jno
xchg
cmp
lcall
imul
lds
dec
lds
mov
ficompl
adc
scas
adcb
imul
loopne
mov
or
andb
push
cmpsl
mov
divb
repnz
xor
fimuls
fnsave
jl
fs
pop
push
push
push
adc
sbb
dec
shll
aad
pop
sub
push
lds
add
imul
xchg
jecxz
inc
lock
cmp
xchg
div
push
call
stc
xchg
cmpsl
and
test
sub
lds
repz
scas
imul
jno
inc
mov
nop
cwtl
imul
xchg
adc
mov
fs
ja
dec
fmuls
mov
xor
mov
fbld
fsubr
mov
ljmp
cltd
mov
push
add
sbb
icebp
into
loope
ficompl
jmp
cmp
cmp
sub
push
pop
xor
push
inc
aaa
ja
sti
push
repnz
pushf
filds
dec
mov
adc
push
sar
xchg
cmpsl
xchg
stos
push
mov
clc
into
push
lods
fdivrl
in
push
mov
mov
and
adcl
scas
dec
fstl
cli
rorb
lret
cld
subl
daa
in
scas
std
sub
dec
jl
notl
int3
sbb
add
jns
hlt
icebp
imul
or
and
call
in
push
mov
pushf
fwait
sbb
fbstp
xchg
jne
xorl
test
sub
mov
jb
idivl
sub
sbb
xchg
outsb
xor
mov
add
cmp
test
roll
test
inc
aas
pusha
jae
cltd
and
insw
inc
xorb
xlat
or
mov
and
push
iret
dec
adc
cmp
icebp
xor
stos
lds
lds
jns
test
ret
int3
ret
fs
pop
leave
jge
add
shlb
repz
adc
pop
test
arpl
jp
aam
test
pop
dec
scas
shl
es
push
sbb
shl
std
aas
pop
movsb
popl
scas
imul
mov
or
add
in
jl
pushl
mov
test
adc
push
xor
xchg
pop
sahf
lret
mov
add
shlb
fidivrs
fwait
test
jnp
push
sub
mov
nop
lods
push
sub
clc
jmp
dec
imul
xchg
xlat
ret
xchg
jnp
jbe
addl
gs
ret
add
push
imul
loope
cs
in
and
fcompl
int3
int3
mov
pop
mov
out
xchg
and
adc
push
add
movsl
cli
push
adc
jge
lret
stos
mov
jne
and
dec
jno
dec
mov
mov
insb
iret
daa
sub
mov
sbb
xor
pushf
aam
pop
imull
mov
xor
sub
sub
inc
les
xchg
imull
xor
test
test
jb
push
cmp
or
cmp
test
bound
cltd
push
cmp
adc
adc
xchg
data16
sub
imul
mov
push
notl
or
mov
in
cmp
movsl
pop
out
lock
xchg
add
xchg
sub
iret
push
stos
xor
push
into
xor
push
imul
stos
mov
ljmp
dec
jp
dec
mov
fldenv
int3
xor
mov
lret
mov
and
push
dec
fstpl
pushf
jne
and
mov
imull
lds
aaa
xchg
leave
js
aad
and
subb
cltd
inc
shll
daa
in
pushf
sub
pop
imulb
rorb
scas
or
xchg
inc
jbe
push
cmpsl
dec
or
inc
into
jle
outsl
cmpl
mov
pop
fistps
sbb
test
ja
sbb
or
cmp
adc
sub
inc
aam
loopne
mov
ret
inc
jae
fsubrl
push
xorl
arpl
iret
adc
cltd
fidivs
mov
push
sbb
inc
dec
ja
mov
subb
jns
fimuls
push
jnp
pop
ret
pushf
xor
xchg
jae
sub
mov
fsubrs
jb
and
ljmp
lods
mov
jle
gs
jbe
inc
jl
outsl
sahf
test
and
lahf
xchg
ljmp
pop
push
in
adc
or
sub
cmp
and
punpcklwd
jnp
mov
into
mov
xchg
xchg
repnz
stc
aam
fs
imul
into
enter
mov
lock
in
sbb
into
inc
xor
cwtl
lahf
int3
repnz
ss
bound
testb
aad
in
push
notl
aas
and
stc
int
sbb
int
in
add
hlt
arpl
arpl
lahf
dec
loop
out
mov
roll
lods
popf
or
pop
cmpb
pop
sbb
pop
outsl
and
xor
sbb
popf
fwait
and
pop
xor
insl
std
push
int
pop
sub
jae
push
imul
orb
es
mov
cmp
negb
adc
dec
lea
shll
je
jp
pop
loopne
jb
test
in
dec
popa
andl
jns
cmc
dec
push
jge
push
test
adc
xor
hlt
pop
jbe
iret
add
sbb
movsl
mov
ret
inc
cmpsb
xchg
hlt
pusha
aas
int
jbe
clc
mov
sbb
dec
fldenv
or
sar
iret
or
jns
repnz
pop
insb
adc
loope
shr
xchg
jne
cmp
sahf
fwait
mov
jl
fstpt
dec
test
cwtl
push
fmulp
push
xor
fnsave
and
popf
fisubrs
push
int3
cmp
arpl
ret
xchg
xchg
out
xchg
pop
add
ret
cmp
les
cmp
mov
pop
clc
push
adc
inc
lcall
fwait
rorb
call
and
jl
loop
cmp
js
pop
dec
add
inc
xchg
xor
repz
pop
mov
fstl
xchg
and
mov
push
gs
ss
shll
xlat
inc
call
cmp
xor
test
lods
sub
sbb
insl
jnp
xchg
popa
out
mov
and
adc
xor
stos
cltd
mov
mov
jo
leave
pop
scas
inc
fnstcw
sbb
mov
fcompl
or
mov
cmpsl
mov
ret
mov
aas
pop
js
lahf
mov
movsl
or
es
cwtl
int
ret
mov
xor
bnd
outsb
adc
jmp
mov
jae
cmp
and
mov
add
mov
pop
sub
in
enter
inc
xor
jne
adc
mov
sti
push
je
jp
xchg
ds
in
sarb
or
call
mov
jae
lds
mov
mov
lahf
pushf
add
mov
loope
mov
mov
push
mov
rol
mov
cwtl
out
aas
loopne
inc
adc
sbb
adc
and
lods
lock
imul
and
out
or
sbb
or
jmp
xor
xor
lea
fildll
xor
ljmp
rcrl
jecxz
jns
dec
mov
popa
adc
out
pop
std
cmpsl
mov
out
pop
add
in
sbb
cmp
pop
push
jbe
push
jns
cmp
ror
cs
out
mov
adc
testl
or
pushf
push
cmc
jbe
test
lret
lods
sub
cwtl
jne
mov
jb
lret
adc
pop
mov
mov
cmpsb
and
inc
in
inc
hlt
jbe
sub
dec
cltd
arpl
xor
xor
add
inc
sub
icebp
imul
inc
xchg
sub
sub
cmp
xchg
mov
inc
mov
insb
repz
mov
mov
aaa
fsts
arpl
jl
sub
jns
push
scas
icebp
push
ret
mov
subl
push
fimull
ret
dec
jg
insl
repz
jecxz
dec
mov
xchg
ret
adc
aam
in
or
insl
iret
pop
daa
gs
in
pop
roll
sub
sbb
pushf
movsb
pop
jne
xchg
inc
loopne
and
dec
xchg
sub
pop
xchg
mov
movsl
mov
mov
or
mov
and
adc
cmp
loopne
push
loopne
je,pt
movsl
sbb
cmp
pop
ret
lret
rol
lea
inc
lods
push
mov
dec
pop
mov
sbb
popa
into
je
arpl
mov
inc
dec
out
mov
int
sbb
lret
stos
ss
adc
pop
enter
lock
in
xor
mov
popf
cmp
test
adc
mov
xor
ucomiss
sbb
popa
aaa
pop
dec
fidivs
in
mov
or
jns
icebp
lods
into
in
push
and
rcrb
sub
xchg
push
pusha
popa
xor
and
mov
mov
add
or
addr16
inc
test
addr16
mov
lods
pop
out
sub
mov
fdivr
fistpll
pusha
mov
mov
sarl
in
mov
sbb
cmp
dec
cmp
pop
test
cmp
or
jg
dec
addr16
fs
test
js
iret
pushf
mov
aaa
mov
and
imul
push
push
ret
rclb
shrl
cmpsb
addb
test
and
les
mov
push
mov
mov
pop
inc
pop
push
subl
idivb
lods
sub
in
add
testl
addr16
dec
dec
pop
and
cmp
xchg
ljmp
cmp
test
decb
push
aad
aaa
mov
icebp
data16
fidivl
inc
cli
dec
xor
and
cltd
ja
imul
fcomps
jle
inc
adcb
fdivrl
iret
mov
aad
imul
or
mov
fcomps
or
mov
mov
add
imul
pushf
cwtl
out
or
push
mov
adc
pop
xlat
out
jno
sub
test
push
in
int3
leave
sub
fimull
rcrb
inc
or
mov
popa
bound
or
cltd
mov
and
xor
mov
inc
rcll
pop
sub
int
push
ret
xlat
xchg
scas
push
inc
mov
sub
clc
mov
pop
pop
test
and
rorl
push
clc
push
pop
jge
pushf
inc
sub
inc
pop
and
dec
inc
sub
movsl
pop
sub
lcall
or
movsl
sub
or
jno
pop
xor
mov
fldl
arpl
add
mov
in
fidivrs
adc
imul
mov
xor
insb
mov
jle
ja
pusha
insl
fs
mov
and
push
xchg
dec
push
add
aas
je
sub
aam
filds
xchg
inc
xor
pcmpgtd
pop
push
push
mov
hlt
sub
je
aas
imul
cli
into
cmp
stos
sbb
js
das
sub
sbb
push
inc
loope
dec
jae
or
dec
cltd
setg
xor
lret
idivb
mov
cwtl
xchg
popf
mov
scas
jmp
xchg
adc
out
out
ret
addr16
cmp
mov
inc
cmpsl
les
dec
adc
fistl
sub
mov
loop
clc
pop
clc
ds
ljmp
jbe
cmp
or
mov
mov
jns
repnz
mov
cmpl
scas
cld
add
out
repz
mov
push
data16
mov
push
mov
stc
das
lcall
and
ret
cmp
subb
pop
shrb
mov
pop
ja
aad
mov
push
add
add
pop
push
lahf
test
in
push
inc
out
xchg
fldl
in
es
jnp
lods
popf
jnp
sti
pop
mov
push
lods
cmp
js
mov
std
jle
lods
xor
mov
inc
jmp
cmp
cbtw
aaa
les
pop
cmp
pop
xor
lcall
push
mov
and
mov
mov
in
sbb
add
frstor
mov
ss
out
mov
arpl
ss
insl
arpl
mov
mov
scas
lcall
test
iret
les
sahf
movsb
int
mov
adc
ret
inc
mov
lock
or
push
jno
hlt
sbb
mov
enter
push
stos
imul
cmpsb
aas
aad
outsl
push
jae
pop
sbb
dec
cld
xor
add
dec
rep
mov
xor
mov
inc
jecxz
mov
clc
push
mov
and
jbe
iret
nop
movsb
mov
loope
and
jle
dec
imul
xchg
jg
jae
clc
jmp
push
nop
mov
mov
mov
xor
cmpsl
arpl
jle
pop
daa
add
sub
or
dec
in
or
xchg
popa
lret
aad
lods
cmp
xchg
adc
popl
mov
out
jb
js
mov
inc
aam
mov
fsts
adc
xor
mov
lret
pop
stos
add
dec
inc
add
fsubrl
push
stos
fnstsw
decl
test
sub
sahf
lret
int3
xor
std
cltd
xchg
push
mov
fisubrs
repnz
shl
pop
or
sbb
push
loope
lahf
inc
add
mov
fldenv
and
push
lcall
jle
sarb
orb
mov
into
add
enter
das
mov
shlb
push
push
xor
stc
call
roll
fdivrl
inc
in
cmp
in
and
xchg
pop
sub
lahf
lret
inc
xorl
push
jb
fs
xchg
xchg
loope
shrl
dec
push
aam
push
jno
inc
mov
out
ss
jle
adcb
pop
push
pop
add
cmc
lret
xchg
fidivrl
mov
outsl
sarb
in
mov
aaa
lret
xchg
jne
inc
inc
into
inc
inc
add
fmull
sbb
sub
add
jge
hlt
cwtl
ret
lahf
mov
test
cmp
push
fnstsw
jl
insb
add
add
or
push
fs
test
jmp
mov
nop
cwtl
jns
dec
cld
xchg
nop
mov
adc
filds
out
jno
adc
inc
adc
push
in
icebp
push
sahf
push
sub
aam
lret
and
sti
mov
jg
icebp
sbb
pop
cli
hlt
sbb
sub
xlat
dec
ret
bound
into
mov
lahf
roll
mov
mov
hlt
js
inc
push
sarb
inc
add
repnz
mov
push
rorb
leave
dec
jnp
cmp
jb
cmpsb
loopne
add
mov
sti
or
xor
adc
mov
dec
cltd
outsl
out
mov
xchg
jo
push
jmp
push
imul
cmp
mov
cmpsb
cmp
inc
nop
cltd
xor
ds
rcrl
aad
xchg
mov
mov
xor
push
pop
stos
mov
inc
loope
xor
ret
pop
add
dec
fldcw
sbb
neg
xor
std
lret
lods
push
sti
test
xor
mov
pop
sub
rolb
jns
pop
popa
pop
jno
cltd
push
out
lods
jl
out
pop
loop
xchg
sub
icebp
inc
mov
std
loop
leave
ret
push
aad
lret
push
inc
dec
insl
push
xchg
dec
imul
inc
aaa
sub
xchg
push
pop
xor
mov
jp
push
out
insl
sbb
sbb
xchg
inc
cmpsl
ss
imul
popf
out
fchs
cmpsb
cmp
push
mulb
jmp
es
scas
sub
xchg
cmc
sbb
and
test
rorb
aad
scas
cmpsb
lcall
and
dec
cltd
sub
mov
cltd
dec
rcrl
or
xchg
dec
pop
lock
xchg
call
add
mov
enter
popa
push
jmp
aaa
dec
fmulp
lahf
pusha
in
aad
xlat
or
out
das
iret
cmp
or
jae
xchg
jecxz
jecxz
cs
js
arpl
xor
pushf
outsb
xchg
aaa
or
mov
hlt
and
sbb
sbb
jo
pop
inc
test
pop
fs
pop
loop
inc
js
es
and
ja
adc
xor
inc
mov
xor
addr16
sub
lcall
jl
sahf
roll
xor
or
pop
fistps
ljmp
adc
data16
arpl
mov
sbb
mov
xor
xchg
xor
shll
pop
xorl
out
scas
out
ret
mov
mov
dec
lcall
jno
push
jo
or
ja
mov
cmpsl
jae
gs
int3
push
jo
mov
aam
jae
mov
faddp
jl
add
decb
sbb
imul
repz
jb
sub
inc
sbb
out
ljmp
and
xchg
stos
inc
dec
aad
imul
popa
pop
cmp
cmp
aas
sbb
loope
outsb
lret
das
pop
movsb
fdivrs
aaa
popa
les
fildll
leave
and
stos
sub
rcll
and
push
dec
push
add
cmp
inc
cld
fistpll
cld
out
push
fwait
inc
lds
mov
pop
clc
add
cltd
pop
decl
fbld
sbb
inc
and
jne
mov
cli
xchg
mov
fmul
or
dec
fdivs
cmpsl
test
pop
es
repnz
stos
rcr
je
pop
leave
test
leave
out
mov
inc
orb
mov
jmp
or
mov
pop
xchg
filds
lods
mov
jle
inc
jle
pop
fbstp
mov
add
mov
es
rolb
xor
rclb
movsb
daa
add
in
adc
out
or
jns
jle
aam
icebp
sub
ljmp
les
outsl
pop
out
std
popf
lret
jle
push
div
movl
outsb
mov
xchg
dec
es
jle
enter
out
xchg
mov
shlb
push
mov
pop
push
or
es
sbb
cmc
mov
bound
dec
popa
ja
inc
adc
test
sahf
adc
dec
push
and
sub
adc
pop
or
dec
adc
addr16
adc
jno
sub
sbb
pop
dec
and
lods
sub
push
gs
test
dec
pushf
fwait
rcr
outsb
dec
sub
ja
cltd
leave
call
es
fildll
ja
ror
xorps
nop
mov
push
aam
sub
lret
sarl
pushf
pop
push
clc
es
push
xor
and
sub
scas
sub
and
jno
and
mov
mov
mov
dec
sbb
mov
fwait
mov
xor
outsb
js
sbbb
jb
xchg
push
xor
or
cmp
clc
push
jge
insb
aad
sub
jg
pushf
arpl
faddl
in
push
push
loope
mov
inc
and
insb
or
jp
jecxz
push
scas
xor
cld
ret
dec
int3
lcall
lea
fstl
mov
arpl
ds
inc
mov
xlat
push
xchg
push
rcll
push
or
mov
movsb
pushf
cmc
mov
or
push
dec
inc
fbld
ljmp
sub
xchg
icebp
cs
or
jmp
je
pop
xchg
xor
hlt
mov
out
and
es
insb
gs
or
fwait
jmp
scas
push
pop
aas
push
inc
hlt
mov
sbb
mov
cmc
ja
cmp
inc
add
aaa
mov
mov
jl
jno
std
dec
cmpsl
inc
std
mov
sbb
xchg
loopne
cld
sahf
xor
jle
js
jae
das
daa
dec
push
mov
push
sbb
adc
lea
in
loopne
mov
jb
cli
les
repz
adc
push
lods
inc
inc
ljmp
movsb
je
sub
xor
fisubrs
cmc
fidivl
mov
push
inc
pop
xchg
mov
out
movups
out
jbe
je
movsl
dec
dec
mov
and
push
push
pop
sbb
mov
or
cli
mov
cs
mov
or
or
sub
sarl
pxor
lock
je
or
loopne
in
pop
test
roll
dec
jne
repnz
adc
xor
sbb
cmp
std
cmc
repz
lret
inc
jmp
jle
stos
adc
pusha
mov
cmc
cmpsl
stos
addr16
push
push
push
scas
adc
xchg
mov
mov
inc
xor
out
fiadds
enter
arpl
push
outsb
in
mov
or
inc
jb
adc
sbb
loop
xchg
pop
test
dec
int
sub
adc
mov
lods
xchg
js
or
mov
cmp
lahf
in
xlat
sti
ds
cmp
fbld
xchg
dec
sbb
pop
mov
inc
cmp
add
in
js
mov
and
icebp
sbb
mov
sbb
ret
aas
adc
enter
fsts
lods
xchg
xor
pop
loope
shl
push
add
jle
push
cmp
sahf
jmp
out
push
push
adc
iret
std
push
rcrl
mov
cld
loopne
lret
js
pushf
popa
cltd
adc
mov
idivb
aaa
cmp
cmp
push
jl
xor
inc
cld
or
imul
mov
inc
mov
push
dec
imul
lret
jb
mov
cmpsb
scas
int
and
push
mov
shll
addr16
std
mov
jno
ds
fwait
lods
xchg
jne
dec
imul
pop
dec
shr
and
xor
sti
mov
inc
call
xchg
lds
push
pop
out
push
or
clc
icebp
xchg
loope
or
jae
imul
mov
clc
leave
mov
popf
loope
cmp
jne
lods
cmp
int3
mov
jge
jecxz
add
out
std
sarb
mov
loop
fildl
hlt
xchg
fwait
xchg
push
jnp
outsl
mov
jp
add
sbb
jns
mov
sub
mov
cmp
mov
shr
or
pop
mov
adc
jge
aas
xchg
scas
test
jmp
call
mov
fcompl
mov
sub
paddusb
inc
lret
pop
sbb
insb
and
adc
lret
inc
or
out
mov
fcmove
loope
lods
pop
into
or
mov
add
popa
mov
insb
mov
out
lcall
imul
lds
sub
sub
jae
ficompl
outsl
jae
mov
add
test
incl
in
outsb
dec
adc
movsb
lcall
idiv
mov
mov
mov
jnp
mov
cmp
lock
xorb
xor
pop
subl
imul
pop
arpl
xchg
fiaddl
iret
xchg
jp
data16
jmp
pop
inc
es
loope
add
and
int3
mov
lret
insl
jp
gs
mov
mov
loope
xchg
orl
sub
jo
sbb
xor
lret
repnz
shr
fisubs
das
mov
sti
jmp
ds
pop
inc
in
sbb
mov
lahf
fisttpll
pop
lret
xchg
lret
sbb
inc
ja
es
xchg
add
or
fsubrl
sbb
out
xchg
loop
xor
addr16
les
sti
outsb
stos
pop
cmp
movsl
lahf
cltd
lds
cmp
stos
out
pushf
nop
mov
repnz
xor
dec
pop
sub
jno
inc
cltd
popa
inc
add
icebp
test
xchg
hlt
or
cmp
mov
dec
fildl
movsl
rorl
movsl
dec
cmp
sbb
popf
imul
fcomi
jbe
mov
inc
dec
push
xor
mov
out
push
rcrl
mov
rclb
lahf
shll
lds
mov
mov
pop
outsb
mov
orl
and
xchg
hlt
subb
push
outsl
and
repnz
mov
mov
jle
mov
sub
ret
sbb
aaa
xor
in
jo
mov
lahf
and
movl
nop
xchg
pop
rorb
push
pop
pop
xchg
gs
inc
into
push
pushf
mov
sbb
mov
std
addr16
imul
arpl
mov
cmp
orb
jp
or
cmp
sbb
es
movsl
xor
shll
test
in
dec
ljmp
pop
repnz
cld
push
or
dec
mov
movaps
lods
dec
lcall
ds
push
std
adc
repnz
cmp
push
xchg
jmp
in
push
push
mov
sbb
loope
cmp
fnsave
sub
mov
int
pusha
scas
iret
inc
enter
or
mov
and
ja
ljmp
insl
stos
xor
inc
test
daa
mov
sub
imul
jmp
push
dec
nop
mov
mov
cmp
jge
arpl
test
testb
call
inc
icebp
dec
fadds
decb
in
leave
push
sbb
and
stos
ds
lcall
push
aaa
in
scas
push
xor
push
mov
lods
mov
fst
jge
movsl
pop
std
mov
xchg
test
dec
test
push
jl
xchg
sub
stos
mov
push
lods
cmpb
into
dec
aad
andl
inc
into
lock
leave
shlb
xor
and
clc
inc
jno
mov
sbb
cmp
mov
ss
loop
cli
dec
lods
or
int
aas
mov
shl
xor
aam
push
xchg
jae
cmpb
xchg
imul
test
clc
sub
push
push
stos
inc
inc
mov
bound
jg
add
push
cs
js
adc
sbb
mov
cmp
arpl
shlb
aas
lock
mov
xchg
int
ja
sti
in
sub
jl
pop
es
call
adc
in
sub
rolb
and
sbbb
adc
cmp
hlt
sti
xlat
jg
ss
xlat
aad
in
fidivrl
arpl
int3
aaa
out
and
sti
xor
mov
cmp
mov
dec
mov
je
push
call
repnz
cwtl
xchg
out
outsl
ficoml
insb
mov
mov
push
mov
mov
or
mov
mov
rcl
jno
pop
xchg
lret
pop
jge
push
movsb
sub
pop
scas
hlt
insl
ss
sti
sarb
cmpsl
jmp
lahf
lds
rorl
mov
inc
shrl
int
ret
push
mov
and
in
jns
jg
xchg
inc
adc
or
pushl
dec
fst
push
scas
imul
ret
scas
or
test
pop
hlt
xor
push
in
mov
or
mov
fdivl
cmp
in
mov
jmp
fsts
gs
movsl
add
jmp
jno
sbb
pusha
ror
push
pop
ret
testb
loopne
sarb
fcoms
imul
xchg
aas
inc
int3
enter
adc
jbe
adc
lds
je
scas
imulb
inc
mov
xor
cltd
int
daa
xlat
lret
inc
test
jne
cmp
addr16
icebp
lods
scas
jp
clc
dec
loopne
scas
test
adc
data16
js
pop
lret
dec
add
inc
flds
dec
subb
push
stos
cmpb
xor
mov
out
push
loop
inc
mov
mov
out
ret
lods
imulb
add
jae
pop
aaa
fwait
or
add
xor
and
push
add
aad
push
or
inc
pop
push
and
iret
ja
cmp
mov
div
or
fwait
incl
jecxz
ss
and
mov
inc
enter
jp
sbb
popa
cli
stos
ja
xchg
mov
mov
js
push
sarb
addl
mov
push
call
xor
shrb
scas
lock
inc
push
mov
popa
push
scas
xor
jnp
inc
in
scas
out
imul
mov
push
sbb
int3
arpl
pop
cmpb
int3
das
mov
clc
lods
sti
sub
aas
mov
pop
lcall
xchg
es
push
pop
cmp
jmp
mov
popa
lahf
sti
shll
mov
adc
cmp
xchg
cmp
mov
lret
adc
jns
lahf
cltd
repnz
mov
imul
std
xchg
mov
sbb
jge
or
jns
xchg
pop
test
and
test
aaa
test
aad
mov
cmp
lret
shrb
dec
xchg
fiadds
xchg
cmp
or
popf
rorl
inc
push
sub
cmpsl
rcll
inc
or
gs
jg
sbb
insb
mov
mov
sub
call
xor
mov
push
pop
imul
jo
test
cs
push
mov
ljmp
add
std
sahf
sub
push
xor
mov
test
faddl
xchg
sbb
pop
leave
jno
icebp
sub
sub
and
lock
out
in
mov
insb
mov
std
repnz
pop
jg
cmpsb
dec
das
push
cmc
roll
stos
test
daa
pop
jb
movsl
std
mov
addl
pop
stc
or
movsb
je
shl
lea
sub
popf
xor
adc
push
pop
lods
fwait
cmpsl
push
call
shrl
jbe
sub
bound
xorb
leave
shr
lea
cmp
cmpsl
xor
xchg
mov
pop
jb
xchg
imul
or
lcall
test
sbb
test
negl
inc
in
xchg
add
fcomi
sbb
lahf
das
stc
imul
int3
es
test
aas
mov
jb
mov
sub
imul
test
jno
je
dec
xor
dec
pop
test
call
inc
sti
aaa
test
xor
add
test
fcmovbe
pop
sarl
fisubrs
pop
clc
jg
dec
jge
loop
or
and
pop
pop
add
insb
das
xor
adc
rolb
ss
stc
les
push
sarb
lea
outsl
adc
repnz
pop
mov
and
repnz
movsb
sub
adc
popw
jge
pop
fwait
cmp
mov
les
out
mov
movb
lret
addl
dec
in
test
ficoms
adc
add
mov
xchg
pop
pop
push
xlat
inc
sti
ja
xor
lret
aad
loope
adc
dec
mov
lcall
packssdw
sbb
lods
xchg
add
push
mov
adc
clc
fucom
mov
jl
mov
pusha
negb
sbb
cmc
push
mov
insb
cwtl
aad
pop
mov
push
mov
subb
or
aaa
push
mov
inc
movsb
aam
jnp
pop
sti
cli
loope
push
das
ficomps
mov
pop
inc
je
insl
jmp
xchg
mov
mov
fimuls
call
test
mov
cmp
call
mov
ljmp
bound
fwait
inc
push
cmp
ret
adc
mov
call
in
and
cmp
dec
xchg
xchg
mov
cs
test
adc
cmc
orb
adc
in
push
add
popa
mov
dec
loopne
jno
and
pop
mov
mov
mov
and
out
cmp
xor
lret
jecxz,pt
int3
inc
mov
mov
cmp
jnp
insb
pop
movsl
decb
and
xchg
je
enter
aas
pop
add
push
out
ds
or
in
jne,pt
or
fnstsw
dec
xor
inc
xchg
mov
divl
fstpl
ljmp
aam
in
lods
pop
and
mov
dec
or
out
repnz
push
xchg
pop
xor
inc
add
sarl
cmp
jl
lods
jl
xor
or
rcrb
cs
bswap
cmpsl
dec
push
scas
cmp
ret
mov
mov
cmpsl
movsl
ret
cs
fwait
aaa
popa
ret
jbe
sarl
pop
mov
pop
loopne
cwtl
mov
rclb
enter
mov
mov
inc
popl
jns
adc
sbb
scas
cmpsl
push
dec
xchg
mov
adcb
push
fsubrl
aam
std
cmc
pop
ss
lahf
xchg
sub
jmp
arpl
jp
ds
inc
rcl
les
pop
lret
inc
push
jbe
popf
jmp
and
test
lock
imul
inc
push
jmp
sar
pushf
pop
in
pop
or
xchg
sbb
insb
xor
sbb
push
adc
cmp
pop
mov
mov
cwtl
cmp
add
popa
lret
movsl
ret
jle
mov
xchg
test
add
repnz
jge
lods
push
lock
test
push
flds
inc
lods
je
inc
sbbl
popa
mov
pushf
dec
sbb
lcall
cmp
inc
push
mov
sarl
cmp
mov
jbe
pop
sbb
scas
xchg
xor
inc
sub
stc
jmp
jp
jle
test
mov
addr16
lods
sbb
jne
les
ss
mov
jbe
jbe
mov
or
add
push
or
and
ds
nop
in
dec
out
and
push
mov
insb
push
dec
sahf
sub
xchg
or
cld
insl
jge
sub
sub
cld
adc
cwtl
data16
mov
jl
sub
mov
stc
adc
out
daa
repnz
gs
fisubrl
stc
iret
stc
cltd
xchg
pushf
mov
cmp
stos
lds
add
cmp
aaa
arpl
jmp
orb
sub
aam
std
fistpll
fsubl
sahf
push
pop
dec
insl
add
xchg
stos
cmc
sbb
adc
jbe
mov
sub
cmp
and
out
jno
jb
add
xor
and
arpl
andb
inc
adc
popf
pop
xchg
jp
adc
push
test
movsl
pop
push
test
fsubs
cmp
cmp
xor
iret
addr16
xor
xor
cmp
pop
mov
or
xchg
or
jae
or
adc
pop
pop
jmp
jb
adc
loopne
icebp
mov
jmp
stos
cmpl
xor
xchg
cmp
pusha
jb
sbb
xlat
mov
mov
addb
stos
inc
iret
mov
jo
ja
bound
mov
mov
and
mov
imul
adc
mov
ljmp
mov
movsl
aad
inc
dec
ret
scas
cld
jp
fwait
xchg
cli
lock
push
mov
shrl
out
fsubr
aad
sbb
push
mov
pop
pusha
movsb
loopne
pop
xor
pop
test
adc
jle
fidivrs
cmp
jecxz
sbb
movsb
xchg
imul
jbe
jecxz
jge
adc
xor
cmp
mov
fcmovbe
leave
pop
pop
loop
dec
sbb
orl
lds
test
push
push
xor
mov
sbb
mov
clc
iret
mov
addb
pop
or
add
sbb
movsl
js
aad
add
subl
jmp
cs
mov
and
fldcw
adc
insb
aaa
lods
pop
sub
hlt
insb
iret
xor
push
idivb
xor
pushf
mov
jp
inc
adc
sbb
mov
sub
jne
shl
bnd
cmp
cmp
lcall
sbb
leave
or
jp
cltd
sarl
dec
cmove
xlat
insb
push
lret
push
push
sub
sbb
imul
pop
mov
adc
je
leave
sub
xor
xor
and
sti
xchg
sub
jge
icebp
push
or
jnp
lahf
ret
insb
outsl
addr16
or
in
mov
dec
jae
mov
cwtl
mov
cmc
mov
push
aas
push
cwtl
lds
xor
lahf
xor
pushf
gs
rorl
or
int3
sbb
pop
ds
dec
mov
push
int
scas
lock
mov
shl
adc
stc
aam
daa
cmp
push
fidivs
xchg
xor
filds
lods
in
outsl
cmp
adc
test
mov
call
andl
test
int
pop
int
fsubs
lds
frstor
or
sub
scas
sub
test
idivb
inc
lea
lock
out
and
push
dec
cmp
repnz
xor
ficoms
sub
ss
push
adc
mov
stc
in
jo
cli
ret
and
sub
clc
cmpsl
mov
mov
insl
test
push
in
pop
stos
call
and
mov
lcall
cld
aad
push
stc
pop
push
test
pushf
test
dec
loope
inc
mov
jecxz
addr16
xor
cs
lods
inc
pusha
xchg
insl
je
mov
push
mov
aaa
xchg
and
out
or
das
hlt
addr16
inc
test
xchg
cli
mov
popa
and
or
in
xchg
ja
jnp
jmp
mov
je
pop
inc
jne
in
cmp
repz
jg
mov
add
fstpl
mov
stos
cs
dec
movsb
outsl
xor
mov
mov
sub
fdivrs
scas
int
cmp
fcmovnbe
popf
cmpsb
xlat
inc
cmpsl
pop
orb
addr16
aaa
lods
out
xchg
mov
or
cli
fistps
jmp
mov
cld
add
mov
push
push
shr
mov
popf
inc
aam
mov
inc
fwait
in
mov
test
jmp
adc
push
rcrb
sbb
xor
mov
lea
push
rorl
pop
and
xorl
arpl
stos
push
adc
das
loopne
cmpsl
fsub
xlat
mov
stc
cli
sub
push
dec
dec
ret
ret
xor
lods
push
inc
scas
lahf
dec
sbb
cmp
leave
add
or
ds
stos
sbb
dec
cwtl
sbb
movsb
inc
xchg
jns
lea
sbb
sub
pop
push
cltd
fsubrs
cmp
fstpl
imul
or
cmp
out
pop
jnp
push
jmp
lahf
lock
add
dec
popa
pop
pop
xchg
sbbb
jo
mov
xchg
out
enter
mov
mov
mov
pop
mov
pusha
jae
inc
test
lods
push
push
testb
mov
pop
xchg
test
fsubr
xchg
pop
xchg
pop
nop
out
popf
cmp
jnp
or
xchg
xor
cld
lock
fwait
loope
out
sbb
sub
jmp
jg
sbb
mov
in
push
jmp
mov
inc
pop
loopne
ja
xlat
and
sub
es
ret
push
stos
adc
pop
sub
xrelease
test
outsb
adc
inc
mov
push
sub
popa
jne
imul
popa
push
inc
js
outsl
or
push
mov
pop
jg
cmpsb
leave
push
rolb
lock
adc
jo
aaa
dec
and
fsubs
cmp
pop
pop
jl
jb
or
and
sbb
sbb
lahf
movsb
fucomp
or
out
jmp
jne
pop
sub
sarl
aas
jmp
les
loope
inc
clc
and
mov
lods
sbb
stos
cs
xchg
cwtl
pop
lret
sub
out
nop
and
pop
loope
sub
dec
xchg
mov
into
sbb
push
jns
pusha
push
mov
jo
sbb
xchg
adc
sbb
dec
inc
test
xor
mov
or
scas
jno
test
push
sub
jl
int
fisubl
and
push
add
push
bound
stc
and
add
test
faddl
fs
sub
mov
or
loope
xor
ret
clc
test
mov
adc
popa
push
pop
inc
aad
mov
or
push
aam
out
pusha
outsb
and
jne
fldcw
pop
sarl
lahf
pop
dec
mov
xor
adc
in
leave
out
fidivs
mov
sub
outsb
xor
repz
lcall
lahf
push
mov
aam
cmp
adc
sub
pop
inc
lahf
add
ret
mov
sbb
and
xchg
sbb
sahf
repnz
call
fcoms
lahf
cli
stc
jo
scas
outsb
add
fldcw
je
scas
fcmovnu
xchg
add
push
jle
scas
int3
repnz
lret
mov
bound
lock
adc
mov
sub
test
push
int
jo
popf
adc
xlat
xor
jg
jne
mov
add
loope
sbb
movsb
pop
jmp
xchg
test
iret
xor
sbb
loope
adc
mov
cmc
sbbl
jne
bound
push
ffreep
insb
hlt
jae
and
insl
imulb
sbb
movsl
push
pop
jne
pop
adcb
xor
and
push
jp
stos
cmp
jo
std
rcr
mov
adc
test
xor
sub
testb
int3
or
iret
mov
dec
xor
or
data16
test
int3
jmp
clc
aaa
mov
les
imul
imul
dec
fs
lea
and
fisubrs
add
jmp
jmp
fld
jno
inc
inc
add
call
cmp
test
rorb
jno
ss
cmp
push
fucom
sarb
push
cmp
shrl
aas
xlat
inc
popf
cmp
repnz
out
dec
adc
popa
js
cmp
cmp
lahf
jbe
push
xchg
cmp
push
sub
int
cmp
xchg
mov
adc
andb
lods
push
add
cltd
and
jns
rcll
cli
test
sub
pop
mov
xor
and
retw
stos
inc
sarb
loopne
adc
aas
daa
pop
sahf
jae
leave
aaa
sbb
push
pop
aas
mov
lret
out
pushl
lret
ficoms
insl
dec
or
xor
and
data16
iret
dec
add
enter
sbb
sbb
scas
push
push
mov
mov
subb
or
je
cmp
adc
loopne
nop
jb
mov
sub
fs
push
ja
cmp
push
add
push
adc
mov
mov
filds
ljmp
das
jno
xchg
repnz
add
push
add
leave
aam
mov
out
aad
aam
push
xlat
sbb
jo
pop
mov
lea
out
mov
sbb
fdivr
jb
mov
movsl
cmp
inc
out
inc
shl
leave
mov
and
ret
loopne
in
rcrb
cli
push
fisttpll
inc
aas
push
mov
cli
jae
sahf
jno
dec
out
and
cmpsb
ret
sub
loopne
push
sbb
mov
jg
movzwl
sbb
inc
mov
sub
or
mov
push
push
not
gs
repnz
aas
jp
xchg
cli
mov
cmpl
sbb
adc
xchg
fisttpl
adc
mov
xor
sti
inc
cwtl
jl
cmpsl
mov
jecxz
arpl
jno
mov
iret
mov
cmp
mov
add
mov
clc
in
xorl
std
aas
cmp
sbb
xor
adc
cs
roll
lock
cmp
out
dec
jp
jle
scas
movsl
in
cmp
cmpsb
test
movsb
xchg
mov
xchg
inc
les
iret
adc
xchg
pop
jbe
pop
int
cmpsl
test
insb
loop
xchg
inc
cwtl
pop
pop
shrl
aas
pop
rolb
out
loope
mov
clc
shrl
popf
mov
xchg
ss
inc
bound
sbb
cmp
outsb
outsl
cmp
loop
inc
xor
out
lahf
jne
lcall
inc
and
adc
inc
sub
scas
xchg
neg
subb
ja
mov
pushf
movl
insb
xchg
int3
xchg
mov
cmp
and
add
sub
sti
sbbl
mov
mov
push
in
clc
les
add
cmp
out
dec
sub
popa
out
add
outsb
enter
jge
cmp
jl
cld
lret
pop
xor
sub
test
mov
std
add
nop
fcompl
push
nop
lret
loop
sub
inc
and
movsb
jg
mov
xchg
and
adc
inc
dec
pop
dec
in
dec
jne
mov
dec
sbb
hlt
je
jmp
ss
ficoms
xlat
adc
orb
fs
dec
mov
cmp
inc
inc
or
inc
lock
int3
xchg
mov
loope
mov
jno
adc
repnz
push
pop
les
mov
and
push
jo
pop
enter
mov
jns
lods
mov
cmp
cli
xor
call
cwtl
and
lret
mov
inc
movsb
xorl
jne
data16
push
dec
jns
jge
pop
dec
mov
dec
inc
xchg
insl
das
arpl
xchg
pop
imul
push
cltd
test
mov
push
je
mov
inc
pop
and
fwait
rcll
adcl
cmp
xchg
das
cmp
sti
mov
mov
js
imul
pop
pop
sbb
inc
call
pop
fdivp
mov
testb
lea
xor
sub
lahf
gs
adc
test
stos
in
sub
ret
cmp
dec
jae
out
xchg
xorb
rclb
nop
subb
lock
cmpsl
aam
pop
stos
nop
repz
shl
push
int
mov
or
sarl
fisubl
pop
movsb
shlb
je
repz
adc
sub
add
xor
test
cmpsb
aas
inc
dec
xchg
push
inc
pop
loopne
mov
mov
inc
and
mov
test
movsb
in
ljmp
sub
pushf
sub
jg
lret
into
push
mov
flds
loop
subb
xchg
pop
int3
cli
xchg
mov
add
adc
jbe
hlt
prefetchw
int
call
aaa
out
mov
ljmp
mov
cmp
pop
fdivl
scas
xchg
mov
xchg
mov
sub
sbb
cmp
lods
shrb
test
inc
mov
jmp
mov
sbb
mov
mov
int3
jo
es
stos
insb
stos
out
hlt
xchg
rol
jnp
sub
mov
mov
sub
shrb
mov
call
sub
lret
test
cmp
dec
jae
dec
xchg
xlat
aad
cmp
cmp
jmp
jmp
xchg
dec
movsb
jge
adc
stc
rorb
in
jne
sbbb
repnz
dec
mov
cmc
xor
jnp
aad
lods
insl
cmpb
pop
aam
ss
fidivrl
sbb
pop
mov
or
sbb
jle
gs
test
xor
idivl
aam
dec
cmp
add
popl
xlat
xchg
hlt
bound
scas
jne
pop
xor
xchg
ret
fs
or
dec
les
ljmp
int3
adc
lahf
mov
push
mov
das
int
mov
xchg
aad
aad
xchg
inc
js
mov
fs
inc
fidivs
dec
inc
cmpsb
dec
mov
xchg
inc
ret
fnstcw
pop
int3
ss
and
inc
dec
repnz
xor
cmc
mov
shr
mov
push
aaa
int3
ss
decl
imul
sub
push
xor
fs
jb
push
ret
and
lcall
loop
push
push
push
je
shl
push
pop
movsb
movsb
sti
mov
cwtl
mov
and
bound
adc
inc
jge
fcmovnb
outsb
inc
fists
hlt
sti
pop
ja
fildll
add
pop
repnz
or
jecxz
aam
mov
or
and
cmp
mov
pop
loope
jo
std
in
insl
and
push
mov
jmp
inc
add
out
cmp
push
test
and
mov
ret
fninit
push
mull
stos
cld
sarl
rcl
push
pop
lret
sarl
daa
fmull
repz
bound
mov
pusha
ret
and
pop
lods
in
xchg
rcll
mov
mov
push
fwait
mov
jg
popf
addr16
jmp
cld
lea
iret
adc
flds
xor
jae
push
cs
mov
pop
push
sbb
xchg
jb
mov
fistl
cmpsl
lds
stos
fsincos
into
cmc
stos
mov
repz
cli
mov
sbb
dec
mov
aaa
adc
enter
dec
notl
mov
stos
mov
ss
jle
out
out
ljmp
lahf
pop
and
cmp
sub
shr
push
and
pop
cli
push
push
mov
mov
jg
pop
outsl
fildl
loopne
shrl
cmp
or
add
pusha
mov
xchg
aad
push
and
out
inc
mov
jmp
sbbb
test
sbb
sub
inc
lods
loope
rep
and
push
push
jno
jmp
adc
inc
fsqrt
pop
or
int
xchg
lods
push
jp
fisttps
scas
xor
adc
js
int3
int
pop
out
mov
nop
fwait
add
into
lcall
dec
ficompl
push
and
cmp
add
jge
mov
xor
sti
xchg
jbe
dec
add
subb
jg
lcall
adc
aad
cltd
cmp
fildll
mov
test
sub
out
fsubl
out
xchg
sbb
leave
mov
xor
lret
adc
das
stc
mov
stc
lret
sti
inc
int3
jmp
mov
and
ret
and
add
or
daa
in
fldl
out
add
sti
imul
push
xlat
sbb
dec
cmp
loop
leave
and
dec
pop
shrb
sub
ja
movsb
xchg
inc
in
into
ljmp
dec
inc
ja
add
cmp
mov
cmpsl
mov
mov
mov
dec
fisubl
mov
lea
sbb
scas
sbb
jmp
xor
es
sub
movsb
je
sub
lret
jb
ds
add
stc
mov
fcomip
fbstp
lock
dec
sub
mov
out
jecxz
pop
in
pushl
sbb
or
xchg
daa
fisubrs
dec
inc
mov
cmpsb
orl
inc
pusha
ds
and
flds
in
cs
test
popa
fucomp
inc
mov
fsubl
jl
cmp
xchg
pop
aas
add
and
or
jno
idivb
insb
stos
repnz
rolb
aaa
pushf
shll
jge
xor
push
fwait
jle
xlat
jbe
sahf
mov
test
scas
mov
pop
fsubrs
sti
add
mov
pop
hlt
js
shlb
imul
loopne
leave
mov
xchg
lods
into
xor
push
shl
mov
lock
fdecstp
sbb
loop
xchg
fcmove
sub
clc
shr
pop
xor
mov
fidivrl
stc
aam
fs
imul
fwait
test
enter
lret
pop
leave
dec
sbb
or
dec
mov
xor
clc
mov
add
xchg
out
push
roll
xor
sbbb
xchg
mov
mov
scas
ja
pop
sarb
adc
push
pop
int
sbbl
xor
negl
out
test
mov
call
xchg
leave
xchg
sbb
dec
das
sub
adc
lret
mov
ja
test
sbb
add
jl
int3
test
add
xchg
leave
test
push
cmp
add
xor
test
xor
or
lret
xor
pop
dec
rcr
testb
mov
push
sbb
insl
push
and
je
push
xchg
xchg
jg
in
clc
add
je
mov
cli
xchg
pop
cli
jge
jecxz
insl
mov
imul
add
mov
inc
bound
rorb
cmp
sbb
int3
iret
push
fsts
inc
pop
jge
inc
jo
insl
inc
ds
and
arpl
fdiv
dec
in
and
shl
out
mov
or
jge
lea
rol
or
repnz
push
andl
inc
dec
je
add
in
mov
loopne
leave
mov
add
mov
xchg
cmp
cli
sub
and
pushf
pop
mov
mov
mov
dec
nop
mov
loopne
jmp
jo
fidivrl
rcll
or
das
sahf
adc
adc
inc
loopne
dec
push
outsl
and
adc
or
fcoms
arpl
dec
fs
fistpl
inc
je
mov
xchg
jns
test
adc
ds
mov
movsb
movsl
stos
push
xchg
push
cmp
xchg
push
fisubrl
xor
jg
inc
add
cmp
out
pop
aam
push
in
sub
cmpb
fsubrp
repz
leave
mov
push
or
sub
or
and
ljmp
jmp
cmp
mov
scas
xchg
dec
pop
jecxz
sub
call
lahf
mov
xchg
xchg
imul
inc
push
dec
clc
bound
xchg
sbb
in
jne
nop
push
out
into
and
sub
inc
int3
ret
lds
push
pop
push
enter
push
pusha
in
dec
mov
xchg
subb
call
jb
xchg
pop
sti
cmp
pop
negl
dec
pop
mov
cmpsl
push
sub
repnz
jno
sub
inc
push
mov
sbb
pop
pop
and
jl
popf
lock
push
push
jl
mov
mov
sub
adcl
out
stos
cmp
popf
les
ljmp
xor
push
jne
loope
push
pop
cld
fwait
sbb
cmp
mov
pop
pusha
pop
andl
scas
mov
stc
xor
inc
pop
stos
add
sub
mov
sub
js
push
lahf
lods
jl
ficoml
cmp
call
bound
or
aas
out
and
push
jb
jp
cmp
out
nop
test
dec
push
cltd
cmp
xor
mov
js
inc
jae
sti
gs
mov
add
lcall
rorl
inc
fcomp
mov
sbb
sub
sub
and
out
lret
mov
jae
enter
push
dec
fstpt
and
and
add
or
js
fbld
gs
push
cmpsl
xchg
movsb
repz
out
int
mov
adc
push
subl
aad
sub
dec
mov
and
fptan
mov
outsb
add
push
mov
jecxz
or
js
mov
xor
inc
out
outsl
dec
rcrl
xchg
loope
mov
push
stc
psrlq
lods
inc
mov
xchg
lock
cmp
inc
inc
xchg
mov
jge
xchg
daa
ret
xor
call
cmp
push
cltd
push
inc
ss
jmp
iret
imul
cmpsl
in
add
repnz
scas
mov
cld
lods
dec
lret
outsb
sbb
iret
jns
int3
mov
xor
scas
mov
pop
repnz
sti
out
cld
xchg
sbb
mov
jbe
add
je
push
dec
add
lds
and
inc
mov
aas
push
pop
repnz
iret
jmp
or
loop
fs
ret
rcrl
testl
out
sbb
cmp
inc
sbb
inc
repz
pop
xchg
adc
xchg
and
jbe
sub
scas
mov
xor
shrl
cmc
out
fcmovnbe
cmp
stos
std
out
shrl
insb
jno
cmp
xchg
les
sub
jns
fs
mov
push
xchg
and
mov
scas
pop
jno
pop
fildll
pop
and
imulb
ret
stos
jno
lock
imul
jo
xor
lret
pop
mov
pop
cmp
xchg
push
test
insb
loope
mov
sub
pop
xchg
ljmp
mov
add
or
sbb
aam
movsb
cmp
jle
sti
popf
pop
mov
add
pop
pop
lcall
jbe
icebp
sbbl
xchg
xlat
lods
jnp
cmp
loopne,pn
sub
mov
imul
xlat
mov
fiaddl
ds
add
and
pop
pop
popa
notb
in
add
dec
aam
sbb
dec
mov
mov
idivl
mov
sbb
cmp
jg
dec
and
cmp
cmp
fwait
pop
pusha
mov
es
adc
mov
lcall
cmpsb
imul
add
fnstsw
mov
pop
adc
pushf
int3
ret
enter
out
fcompl
dec
lods
or
outsl
cmp
jle
push
cwtl
andl
adc
popa
xchg
test
enter
mov
outsb
cmpsl
xchg
std
lcall
mov
pop
mov
jns
mov
call
mov
lock
das
dec
mov
sbb
ljmp
subl
pop
push
call
mov
pop
jle
loop
dec
enter
cmp
aas
inc
mov
add
addr16
fs
pop
ja
jmp
dec
ljmp
add
sub
insl
jno
mov
in
test
xchg
fldl
sbb
adc
movsb
mov
pop
int
inc
aad
shll
icebp
int3
push
fldt
iret
dec
mov
fs
cmpsb
fstpt
pop
test
pop
ljmp
cmp
js
loop
pushf
lcall
push
lcall
mov
inc
loopne
out
clc
add
imul
lahf
adc
mov
cli
sti
cld
cmp
xchg
out
mov
push
push
mov
or
mov
aas
jno
jo
xchg
mov
cmc
xor
popa
cmp
sti
shlb
xchg
mov
aas
jbe
icebp
cli
push
or
sub
gs
rcrl
pop
jl
cmp
sbb
or
pop
imull
ficoms
and
adc
rorb
adc
fdivrp
push
xchg
dec
clc
in
repnz
rolb
sbb
mov
jmp
lods
add
dec
addr16
sbb
shl
daa
repnz
gs
or
mov
imul
push
fldz
xchg
jl
push
fwait
std
mov
rorb
fldenv
jo
lret
in
adc
mov
and
sbb
cmc
fincstp
lock
inc
xchg
ret
ljmp
xor
aas
out
fldt
iret
mov
dec
lock
xchg
jp
xchg
xchg
repnz
imul
ljmp
mov
je
sbb
cmp
xlat
cmpsl
addr16
inc
sbb
sahf
into
mov
es
sbb
pop
in
xor
jo
imul
or
jns
data16
mov
sbb
pusha
push
lret
mov
inc
aas
das
add
mov
lret
jl
sub
cmp
pop
jle
or
mov
popf
jb
mov
push
mov
and
dec
xlat
mov
inc
cld
cmp
shl
insb
ss
shl
pop
jmp
or
inc
mov
ja
mov
xorl
in
sahf
jnp
add
jae
paddd
ljmp
iret
aaa
mov
mov
orb
push
jae
adc
stos
jp
rcrb
mov
out
out
xchg
divb
fstl
inc
adc
inc
jne
mov
dec
dec
test
pop
das
sbb
xor
ret
sub
insb
jge
cli
sbb
jmp
cmp
lock
dec
sbb
pop
mov
dec
mov
inc
out
cli
bnd
xchg
xchg
mov
xor
lea
push
add
insb
cli
sbb
insl
shll
mov
lods
cwtl
bound
rcrl
cmpsl
xchg
adcb
xchg
in
adc
divl
imul
in
pushf
add
xchg
cld
push
mov
or
fnsave
loopne
sbb
xchg
call
adc
mov
pop
in
imul
sbb
dec
or
inc
and
enter
fmuls
loopne
out
mov
jb
mov
lret
dec
les
daa
fcomps
ljmp
imul
mov
dec
mov
mov
lods
dec
mov
jecxz
pop
sbb
fisttpll
sti
mov
adcl
adcb
jmp
or
cmp
cmp
fsubl
sbb
out
fidivs
or
icebp
or
outsb
pop
mov
mov
dec
jb
adc
testb
mov
mov
data16
roll
in
rorl
xor
pop
push
outsb
imul
ds
ja
jecxz
dec
dec
or
incl
lret
pop
mov
andb
add
jbe
jg
out
jmp
cs
sbb
push
pushw
test
pop
icebp
outsb
movsb
cli
inc
lret
xor
fisttpl
lods
scas
adc
aas
mov
fimull
fmuls
int3
xchg
rcrb
xchg
dec
and
fwait
cwtl
btr
cmp
lea
push
xchg
pusha
aaa
mov
jne
lea
mov
mov
adc
pop
int
mov
or
cs
inc
xor
mov
adc
xchg
ljmp
xchg
xor
jge
mov
mov
sbb
xchg
shr
popf
out
ret
cmp
leave
add
jae
xor
pop
popl
pop
icebp
subl
mov
rolb
imul
adc
xchg
std
loope
ljmp
lock
mov
dec
stos
xor
idiv
not
cmc
pop
fs
mov
sbb
jle
push
mov
mov
mov
int
mov
inc
lahf
cld
fsub
add
push
mov
jo
cs
lahf
call
sbb
mov
mov
addr16
xor
jp
cltd
pop
rol
nop
mov
jp
sub
and
mov
mov
cmp
cmp
testb
test
stos
inc
js
or
fcomps
pop
insl
test
adc
dec
movsl
mulb
or
clc
xchg
in
xchg
xchg
lea
add
test
lock
sub
stos
mov
inc
movsb
lcall
bts
mov
fsubrs
popf
push
cltd
scas
inc
pop
inc
jns
iret
cmp
and
testl
test
cmp
les
js
fsubrp
mov
jbe
clc
xchg
sub
mov
jge
bound
push
add
xor
lods
add
dec
push
call
test
jp
sti
sbb
pop
fisttpll
fistpl
push
cmc
dec
inc
out
test
ja
or
loop
sub
push
popa
adc
stc
mov
push
push
sbb
lock
aaa
int3
mov
cmc
pop
push
xchg
and
xchg
hlt
add
push
cwtl
addr16
xchg
mov
ljmp
jp
mov
sub
jmp
push
or
mov
adc
addl
xchg
lea
mov
stos
xorl
test
stos
sbb
loop
sbb
mov
lds
fists
lock
xor
dec
mov
mov
int
lret
push
xchg
mov
addr16
testb
jo
inc
sbb
data16
repnz
xor
xor
scas
pop
bound
aad
lods
lock
in
sbb
fisttps
bound
dec
jg
inc
popf
dec
jns
test
andl
xchg
push
cwtl
mov
cmp
push
inc
mov
imul
adc
adc
orb
movsb
loopne
sub
cmp
data16
mov
int3
sti
or
fsub
leave
pop
sbb
mov
mov
les
in
out
xchg
push
ud1
inc
sbb
lods
push
jp
call
add
pusha
mov
ljmp
jno
cs
sbb
pop
cmp
fisubrs
js
xchg
and
mov
jmp
lds
out
mov
lea
fsubs
shrb
add
adc
pop
pushf
fistpl
and
and
cmc
scas
insb
pop
inc
mov
jmp
or
cmp
mov
fs
xchg
pop
xchg
push
add
or
and
repz
ja
sahf
jg
bound
inc
into
or
mov
or
sbb
in
sub
add
pop
jecxz
je
lcall
imul
lds
push
xchg
mov
lock
call
xchg
xchg
inc
les
jbe
inc
dec
subl
sti
mov
sbb
pop
pop
outsl
test
sbb
imul
rorb
mov
test
out
sbb
int
cmp
adc
lret
fcompl
int
xchg
dec
out
jmp
cli
mov
rorl
stos
jne
cmp
xchg
xchg
mov
test
dec
call
hlt
push
sarl
lds
or
mov
xor
test
call
stc
inc
pop
dec
data16
popf
shll
and
call
and
repnz
sahf
push
out
dec
popf
stc
sub
imul
repnz
cmp
shll
mov
mov
cmp
jle
arpl
xchg
mov
inc
ret
push
add
imul
and
xchg
jge
jb
xchg
sbb
pop
insl
sbb
loope
sbb
outsl
lock
mov
adc
gs
xor
cmp
adc
push
loop
lods
cmp
push
mov
jnp
xor
mov
aaa
jbe
shll
dec
adc
frstor
or
xchg
fadds
ret
popa
fabs
push
bound
out
pop
jle
out
xlat
pushf
add
pop
sbb
dec
icebp
jo
xchg
popf
out
xchg
ffree
lds
jecxz
add
mov
test
inc
push
push
pop
int
mov
jnp
xchg
je
adc
sahf
mov
adc
loope
lret
mov
hlt
inc
xlat
mov
jno
jmp
std
or
les
cwtl
adc
mov
leave
push
aas
push
xchg
jbe
bound
dec
test
mov
push
add
popa
mov
xlat
jle
xlat
cli
hlt
mov
pop
xchg
push
mov
movsl
inc
bound
data16
fs
cmp
jo
rorl
mov
mov
inc
jno
pop
cltd
repnz
ljmp
or
aaa
andl
mov
loop
push
fsubr
cmp
rclb
sti
dec
ss
sub
xor
and
loope
mov
or
inc
adc
mov
frstor
leave
aad
stos
mov
outsl
pop
faddl
inc
pop
int3
lods
rclb
mov
hlt
mov
jg
push
outsb
lds
pop
iret
jb
mov
js
jge
inc
jge
jmp
push
out
sbb
aas
hlt
mov
scas
adcb
lods
sub
popf
clc
jnp
mov
ljmp
iret
lcallw
xchg
fisubrl
into
sub
hlt
xchg
mov
jno
mov
and
add
into
adc
xor
and
mov
in
jb
aaa
mov
lods
mov
out
loope
mov
push
mov
sbb
cld
insl
jp
dec
adc
pop
ret
call
sbb
xorl
loopne
cs
xor
ds
push
xchg
divl
out
inc
sub
mov
jecxz
lds
pop
and
xchg
mov
mov
rol
sbb
mov
inc
fisubs
dec
dec
inc
push
fwait
and
js
push
adc
add
push
into
mov
mov
dec
aaa
dec
ss
mov
cltd
mov
fbld
popa
cmp
in
out
and
mov
cmp
dec
xchg
sbb
imul
incl
jmp
cmpsb
xlat
in
inc
fwait
jno
jp
inc
adc
mov
or
jnp
xchg
mov
sub
arpl
jmp
sub
inc
in
gs
pop
sub
aas
cmpsb
mov
jmp
pop
js
pop
orb
aas
sub
cmc
and
adcb
popa
daa
decl
xchg
andl
mov
cmpl
dec
push
sahf
mov
pop
add
dec
scas
cwtl
add
sub
xor
out
outsb
xor
xor
fdivrs
scas
lahf
push
out
arpl
sahf
xorl
stos
std
hlt
cmc
xchg
hlt
add
dec
xor
mov
repnz
sbb
jl
ds
aas
fidivl
aam
rolb
mov
cltd
mov
inc
inc
in
mov
push
mov
or
outsb
pushf
call
jg
dec
call
mov
nop
mov
pop
shll
in
ljmp
gs
lods
ss
das
icebp
js
orl
adc
sti
mov
aaa
dec
cs
xchg
rol
pop
add
fs
icebp
int
adc
jge
vunpckhpd
rorl
ds
mov
jb
les
mov
mov
mov
lods
test
fs
and
fsubrl
outsb
adc
lcall
aas
or
cld
daa
into
dec
ficomps
push
popa
jp
push
rol
push
xor
or
dec
xor
scas
sub
outsl
lods
xchg
dec
jnp
leave
aam
pushf
lcall
inc
js
outsl
pop
pop
testl
or
sbb
pop
icebp
js
leave
lds
sbb
dec
xchg
loop
mov
xor
dec
ljmp
and
jg
fdivs
popa
xchg
xor
test
push
xchg
jecxz
test
jmp
jmp
add
mov
test
ss
stc
out
fisttps
test
mov
lret
fidivrs
push
in
imul
pop
jae
mov
cltd
stos
lea
mov
repnz
imul
lret
mov
hlt
sbb
adc
test
test
call
lods
outsl
in
cmp
sub
adc
sub
in
xchg
xor
xchg
je
int
insl
adc
cmpb
dec
xchg
popf
push
xchg
cmp
add
int
xlat
mov
cmp
in
lcall
sbb
scas
push
loopne
xchg
dec
cltd
jg
ds
divl
jae
jno
and
stos
adc
sub
mov
xchg
mov
arpl
push
movsb
movsl
fisttps
movsb
mov
adc
or
in
xor
mov
add
mov
mov
add
mov
iret
cmpsb
xlat
sti
les
inc
mov
push
lods
sbb
icebp
aad
sub
aad
fcmovne
push
xchg
shlb
iret
xor
xchg
in
scas
dec
xchg
xor
push
push
adc
mov
rcl
adc
mov
jnp
daa
stos
lods
xchg
sub
es
sbb
and
add
and
divps
push
pop
mov
aam
test
push
jno
mov
xchg
pusha
mov
jmp
call
pusha
adc
dec
or
fdivl
and
arpl
or
fldt
int3
flds
sub
cltd
jge
data16
inc
cwtl
inc
gs
and
test
dec
popf
rcll
subb
xchg
daa
adc
es
fsubrl
inc
js
xor
call
mov
dec
pop
clc
jo
sti
sub
jae
orl
mov
cmp
mov
std
sbb
adc
xchg
and
push
dec
pop
test
inc
cmp
pushf
xchg
or
inc
xor
pop
out
in
pop
pop
hlt
pop
mov
mov
in
imul
push
dec
cmc
lds
jmp
test
aam
push
rcl
mov
test
push
sahf
movq
out
std
test
add
fdivr
popf
pop
or
push
daa
outsl
sbb
dec
icebp
cmp
or
popa
and
xor
xchg
int3
mov
xchg
mov
push
ret
xor
cmp
notb
adc
cmpl
mov
cltd
pop
add
xor
adc
ljmp
cmpsb
in
pop
sahf
add
xchg
or
popa
fisubl
outsl
inc
int3
lret
dec
sbb
pop
ljmp
cli
cmp
int
aad
fstpt
pushf
fidivs
stos
mov
aam
mov
gs
fnstenv
ret
stos
adc
or
jno
cmpsb
xchg
push
into
hlt
add
or
mov
dec
jecxz
cli
push
push
addr16
shrb
cmpsb
adc
xor
push
sub
jns
decb
sbb
sub
movsb
mov
pop
dec
loopne
stos
push
sub
mov
and
aas
push
mov
rcr
sbb
jnp
clc
sbb
in
xchg
test
pop
xchg
test
mov
imul
jae
lcall
aam
inc
push
mov
outsb
inc
xor
sub
clc
sarl
push
loop
imul
and
adc
jae
add
push
lock
sarl
imul
cmp
mov
sahf
pop
push
fs
add
xchg
adc
fwait
jns
jno
jb
lret
adc
inc
jl
cwtl
add
inc
sbb
xchg
aas
nop
mov
test
rcrl
pop
dec
xor
dec
outsl
data16
push
call
adc
mov
or
jae
in
push
sub
xchg
cs
jnp
mov
xchg
or
mov
rorl
arpl
pop
sub
scas
les
xchg
inc
mov
addr16
mov
and
push
lret
pop
xor
mov
jne
jle
mov
pop
pop
frstor
fmul
test
cmp
or
sbb
xchg
je
mov
lret
inc
decb
das
cltd
icebp
add
push
mov
add
shl
and
notl
xchg
fcompl
dec
xor
adc
lea
sbb
mov
test
jo
stc
stos
sbb
mov
in
daa
mov
or
rorb
addb
test
mov
fimuls
dec
sbb
push
ss
icebp
sbb
pop
andl
outsl
cmp
outsl
mov
cld
or
mov
push
pop
dec
dec
xlat
jp
mov
or
int3
jmp
sbb
add
push
cmpsl
jnp
cmp
adc
jbe
push
icebp
jb
jl
sbbb
adc
pop
int3
mov
ja
insb
pop
sti
pop
xlat
rolw
in
hlt
cmp
and
xor
fsubl
push
pop
cmc
xor
rcrb
jge
scas
in
dec
andl
sub
add
enter
cli
jno
jp
adc
jg,pt
ffree
iret
xchg
data16
loop
in
out
xchg
stos
mov
pop
cs
stos
sar
dec
cld
add
pop
fwait
pop
cmpsl
xor
sarb
test
ss
cmpsb
mov
cmp
test
pop
int3
pop
jle
or
setbe
jge
repnz
mov
push
scas
mov
add
inc
dec
addb
xchg
fldt
xchg
imul
repz
add
dec
bound
jmp
js
cmc
push
pop
movsb
xor
gs
xor
fiaddl
inc
mov
int3
movsl
dec
jae
mov
mov
pop
js
das
cmpsl
ror
push
jo
enter
inc
ljmp
sbb
scas
fnsave
xor
pop
sbb
adc
xlat
in
mov
loope
test
xchg
mov
jge
push
or
mov
clc
out
or
mov
mov
inc
cs
push
inc
pop
mov
xor
add
cmpl
scas
sbb
rol
push
jp
pushf
inc
shll
imul
cld
inc
out
leave
jmp
mov
sub
xchg
xlat
mov
frstor
inc
jg
pusha
and
mov
out
aaa
insb
inc
xchg
mov
xchg
fistpll
je
ret
outsb
jne
cld
pop
gs
mov
xor
dec
lea
xchg
aam
cmp
fldl
pushl
add
test
xchg
cmp
fildl
cmpsb
popa
cmp
xorl
rcrb
jno
push
sbb
adc
insb
fs
enter
jecxz
pop
xor
roll
push
rcrb
repz
pop
inc
mov
jns
addl
xor
rolb
lds
shlb
sbb
xor
jne
hlt
mov
iret
aaa
and
lret
xchg
nop
sbb
adc
in
xchg
xor
jns
repnz
lahf
mov
enter
ja
push
push
lods
jg
xor
shrb
outsl
popa
repz
jne
adc
mov
jbe
fwait
xchg
inc
or
cmc
outsl
xor
fcomp
cld
mov
lods
icebp
in
push
dec
sbb
stc
xchg
outsl
aaa
jns
xor
sub
pusha
ret
adc
aaa
jl
addl
cs
add
jmp
pop
movsl
leave
sub
jg
lcall
imul
cmp
imul
les
inc
cmp
push
sbb
imul
loopne
add
pop
aad
sub
dec
test
push
adc
stc
iret
in
mov
sbb
outsl
inc
fidivl
subb
sub
sub
sub
push
stc
pop
cmp
ss
inc
cmp
xor
addl
fldcw
mov
dec
add
mov
mov
or
lods
jl
push
arpl
daa
dec
fprem1
sbb
imul
mov
xchg
lret
push
fidivs
sti
adc
es
je
push
mov
and
sub
push
adc
fadds
call
shr
movsb
pop
jnp
fldcw
mov
mov
xchg
ret
adc
in
xor
adc
xor
lock
or
stos
xchg
fdivs
jg
push
or
stos
fidivrl
lret
fidivs
inc
mov
mov
dec
cli
sub
inc
mov
xchg
push
mov
mov
fisttpl
inc
dec
movsb
addr16
incb
das
cld
daa
sarl
repz
xor
xor
lahf
lods
mov
fistpl
push
inc
pop
lods
xchg
mov
push
cltd
das
shrb
sbb
push
out
shlb
sub
and
dec
addb
push
int3
inc
adc
jl
push
mov
push
and
test
cmp
loope
xchg
dec
sarb
sbb
jo
je
xchg
pop
imul
or
push
call
call
add
imul
stc
xor
push
pop
in
hlt
scas
jl
jl
sarl
mov
mov
jge
and
xor
push
push
cmpsb
sbb
leave
pop
pushf
push
mov
ds
inc
aad
push
mov
hlt
pop
jb
cmp
inc
mov
std
imulb
xor
fdivrs
add
jne
or
sub
andl
out
sbb
dec
js
xchg
gs
iret
int
mov
sbbb
push
mov
insb
jbe
jecxz
add
mov
lret
push
mov
mov
out
sub
lcall
in
fbstp
add
xor
push
add
test
jbe
jmp
gs
and
sub
insl
jnp
pusha
sub
push
xchg
into
mov
jp
and
fs
xchg
inc
jge
push
mov
xchg
jl
mov
inc
jle
faddl
add
xchg
sub
and
cs
inc
push
cmpsb
stos
mov
stc
mov
xchg
jno
fdivrs
xchg
fldcw
or
jge
mov
stos
rcr
jbe
xchg
pop
cmc
jno
gs
adc
xchg
and
mov
loopne
pop
xchg
push
daa
in
xor
mov
xor
aam
outsl
sbb
loopne
push
sti
sbb
dec
mov
repnz
outsl
in
aad
loop
pop
dec
sbb
mov
jle
mov
int3
sbb
dec
push
leave
and
in
sti
mov
cmp
or
jle
test
and
pop
inc
sub
dec
jno
pop
cwtl
push
leave
xchg
sub
dec
jmp
or
rol
cmp
icebp
fiadds
sbb
pop
cmp
out
repnz
in
andl
testl
pop
notl
rep
es
loope
ret
and
or
std
sbb
scas
mov
out
jp
mov
loop
out
jae
jae
in
add
mov
js
repz
cmp
xlat
out
shlb
rcll
jnp
push
and
push
xor
call
jbe
cmp
xchg
push
fwait
and
sub
call
sbb
jmp
ss
imul
out
xchg
push
adc
dec
popf
lock
jmp
inc
inc
jge
mov
out
fcomi
cwtl
cmp
icebp
lret
push
cmp
jge
insb
and
fildll
test
push
sahf
shll
loope
push
icebp
lea
inc
int3
int
jecxz
inc
push
fistl
mov
sub
decl
ret
xchg
adc
sub
lcall
xchg
xchg
sub
mov
xor
cmpsb
mov
push
subl
jns
and
xchg
xchg
cld
mov
fists
in
or
int
mov
mov
cmc
aad
mov
aas
xlat
pushf
test
xchg
mov
iret
sahf
lods
bound
aad
xor
mov
and
xchg
or
mov
sbb
mov
mov
mov
push
mov
outsb
and
in
cmpsl
jmp
xchg
pop
sahf
xchg
xchg
mov
rol
std
popa
dec
stos
xchg
iret
jns
fdivrp
shll
hlt
fstps
push
push
sarb
rclb
mov
out
push
mov
lahf
adc
mov
in
push
jge
cltd
daa
addr16
movsl
pusha
sub
mov
push
hlt
sarl
fdivrl
mov
sbb
xor
cwtl
imul
or
ljmp
add
push
push
mov
test
call
cmp
in
sbb
test
dec
lods
xor
xchg
mov
lea
and
dec
cmp
xlat
and
xor
pop
fdivp
cmc
popa
lret
and
shl
fistpl
dec
xlat
lock
movsl
lock
or
ret
outsb
cmp
mov
mov
xchg
ljmp
jle
inc
ljmp
cmc
pop
mov
sub
pop
xchg
and
movsl
push
loop
test
mov
popa
jge
pop
rorb
pop
fstps
dec
pop
cmp
xchg
imul
push
dec
aaa
int3
orb
iret
fsubl
lret
in
lret
out
rcr
jnp
ffree
inc
mov
jl
adc
in
add
jnp
jbe
cmp
jbe
iret
aas
arpl
repnz
adc
cmc
mov
pop
sub
jg
pop
lods
lds
in
adc
pop
jp
pushf
push
push
and
out
and
lods
movsb
lret
int3
cli
or
lea
negb
dec
int
or
mov
arpl
mov
pop
pop
enter
rcl
xor
imul
pop
add
fcomps
or
shll
loop
cltd
xchg
and
mov
andl
outsl
mov
mov
mov
adc
sbb
jno
iret
int3
fld1
loop
dec
test
rorl
sub
rclb
jecxz
dec
mov
int3
loope
push
inc
sub
pop
dec
frstor
inc
loop
pop
outsl
adc
sbb
stc
cmp
xchg
stc
xor
rorl
fdivrs
in
mov
inc
pop
and
mov
bound
outsl
sub
pop
jb
ds
xchg
orl
arpl
out
jb
dec
mov
add
les
dec
repnz
test
xchg
dec
mov
cmp
sub
adc
jp
addl
mov
jge
jno
repz
cmp
dec
xor
fbld
jle
cltd
cmp
shlb
out
in
inc
xor
add
push
jp
sti
inc
fxam
jmp
cmp
cmp
cltd
push
pop
or
movsb
mov
mov
jne
arpl
nop
jb
es
jmp
xchg
sahf
adcl
loope
and
and
lods
outsl
mov
das
adc
mov
hlt
cmp
in
ret
dec
cld
mov
pop
pop
cmp
das
push
xchg
jmp
mov
inc
ds
push
adc
sub
mov
and
mov
add
adcb
daa
sahf
push
dec
and
fisttps
mov
xor
jl
loop
pop
jmp
cmpsl
je
adc
in
fidivrl
sub
xchg
sbb
push
and
xor
mov
das
aam
xchg
cmpsl
fs
adc
cmpsl
cmp
je
and
xlat
dec
inc
inc
dec
fsubrl
push
xchg
das
add
mov
jo
inc
mov
jnp
dec
test
and
push
fldenv
movsl
adc
ljmp
mov
in
mov
imul
push
mov
mov
pop
daa
pusha
mov
push
push
call
leave
lock
outsb
mov
adcb
mov
adc
sbb
push
or
cmpsb
fidivrl
sub
fldenv
xorb
xor
xor
lcall
mov
ds
out
adc
and
shlb
ljmpw
xchg
bnd
sbb
fimull
fistl
xchg
sub
dec
cmp
jmp
jp
hlt
dec
outsl
mov
and
mov
aad
jl
mov
std
mov
and
push
fiaddl
lret
loope
mov
mov
push
pop
lret
and
and
popa
push
stos
rol
mov
xor
add
jl
sub
sarb
outsb
push
jmp
cld
mov
xchg
cmp
xor
mov
bound
inc
outsl
jp
xor
or
pop
cmp
pop
xchg
iret
push
leave
out
jmp
cmp
stc
xor
hlt
sbb
mov
mov
mov
ja
ret
sarl
mov
insb
inc
mov
ljmp
mov
add
out
mov
inc
pop
cmp
xchg
popf
psubq
xchg
pop
pop
sbb
ja
fcomi
push
cld
out
mov
and
js
lds
inc
into
loope
jnp
das
mov
out
mov
add
or
pop
fcmovu
mov
dec
out
inc
push
imul
mov
js
pop
mov
jge
push
scas
cmpsl
ja
and
sbb
addl
mov
jle
inc
jno
and
insl
adc
dec
push
lahf
mov
lahf
mov
daa
inc
jns
or
push
in
subl
add
inc
cmp
sbb
push
push
iret
ret
pop
push
roll
and
rcrb
sti
mov
lcall
fistps
test
aas
inc
inc
lahf
push
push
hlt
nop
mov
jns
mov
and
stos
mov
cs
sub
cmp
mov
gs
in
dec
loope
or
lret
incb
movsb
or
ljmp
mov
ds
popa
sbb
out
sub
dec
out
adc
jbe
fidivrl
inc
rcr
dec
or
out
mov
mov
andl
call
cmp
inc
mov
inc
aad
adc
mov
cld
and
into
lock
adc
loope,pt
fstp
sub
dec
inc
jo
icebp
pop
fildl
fbstp
sbb
aas
mov
xor
cmpsl
xchg
stos
nop
sbb
rclb
jle
mov
inc
repz
ljmp
mov
jno
ret
pushf
inc
scas
test
outsb
jle
dec
loope
pop
push
xlat
push
or
fidivrs
ror
pushf
loop
xor
lea
mov
cmp
mov
ja
inc
loope
ja
jae
insl
push
aas
icebp
adc
ljmp
dec
xchg
imul
add
out
mov
push
int3
insb
lea
lods
fdivrs
jbe
xchg
shrl
and
cmp
dec
ret
adc
outsb
mov
outsb
arpl
inc
push
and
sahf
add
std
dec
xchg
ret
mov
out
mov
mov
pop
inc
stos
sub
or
ja
sub
gs
mov
mov
mov
les
popa
nop
pop
addb
and
sbb
cli
add
repnz
dec
mov
push
ret
mov
mov
repnz
xor
das
xchg
dec
cmp
mov
lds
in
or
ja
push
int
ret
cmpsl
mov
jns
pushf
pusha
lcall
cwtl
das
jb
out
jp
addl
sub
movsl
or
out
fdivrs
xchg
lds
sub
and
jmp
lods
mov
xchg
lods
xchg
rep
lods
mov
rep
lods
push
xchg
push
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
pop
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
mov
inc
lods
test
je
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
or
add
add
add
add
jmp
add
