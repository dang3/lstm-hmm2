xor
cmpps
lcall
orb
aam
sarl
cmp
mov
enter
mov
iret
fimull
mov
mov
loop
dec
out
into
sbb
scas
push
out
add
sub
jmp
fnsave
sub
add
push
push
push
inc
scas
icebp
pop
stc
xchg
mov
stos
and
lds
push
pop
sbb
pop
mov
cs
sbb
pop
pop
lock
sub
inc
push
push
inc
sub
push
adc
inc
inc
es
dec
xchg
dec
cmp
inc
fiaddl
pop
nop
gs
jae
hlt
repz
pusha
cmc
xor
push
xchg
scas
push
push
js
inc
fnstsw
mov
ret
jb
push
shlb
enter
mov
fcom
pop
out
mov
into
adc
in
adc
roll
jne
stos
insb
test
rcl
mov
jp
scas
cmpsb
mov
loopne
aad
fdivl
and
aaa
push
xor
rcl
insb
sbb
add
adc
pop
mov
sub
lock
xlat
inc
jmp
fistpll
cmp
shl
and
out
das
and
push
xlat
js
cld
adcl
pop
push
cmp
sbb
inc
ljmp
dec
cmpsb
or
aaa
sbb
adc
dec
sbb
inc
inc
inc
sbb
xor
sbb
std
cmovl
xor
scas
hlt
push
cmp
mov
pusha
fdivrp
loope
sbb
pop
push
and
imul
sub
jne
lods
sbbl
cmp
mov
jo
mov
jns
dec
xchg
xor
ret
xchg
pusha
popf
add
add
mov
mov
xchg
push
dec
in
in
cmpsb
ret
xor
sbb
lret
and
je
lods
data16
cwtl
sub
mov
inc
aad
push
xchg
xchg
adc
push
sub
shrl
test
lods
xchg
les
and
fisubs
mov
movsl
dec
add
cld
repnz
test
lods
in
push
jmp
adc
push
push
inc
push
ljmp
aam
hlt
call
sub
rclb
xorl
aaa
test
fcompl
xor
mov
arpl
dec
mov
push
dec
pop
sub
sbb
cmpxchg
les
pushw
popf
addl
push
xchg
scas
shll
xchg
pop
pop
push
jge
jle
aas
lcall
jne
mov
dec
mov
ljmp
hlt
xor
scas
test
add
jo
enter
jmp
jmp
rol
iret
xchg
mov
and
push
mov
mov
or
iret
push
sub
and
ficompl
add
adc
mov
repz
inc
push
sahf
xor
sti
arpl
sbb
into
cmp
shlb
into
or
cmp
jae
sti
movsb
push
data16
push
add
ja
sbb
jle
or
pop
fdiv
xor
jo
repz
cmp
and
push
xchg
sub
and
movsb
sbb
xor
dec
pop
lods
push
sbb
cmp
pop
pop
pop
and
andl
addr16
pushf
outsb
insl
insb
popa
push
shrb
ja
jno
xchg
xchg
outsl
shlb
arpl
dec
call
into
mov
mov
inc
pop
xchg
jns
push
fdiv
lahf
mov
mov
fbstp
sar
add
add
jb
mov
jl
mov
pop
and
or
aad
in
cmp
fbld
mov
fcmovnu
fdivrp
fmul
jns
es
in
cld
push
or
testl
or
or
dec
jecxz
add
rcrl
jno
leave
push
fstp
es
das
cs
push
push
sti
out
sets
jo
inc
not
jl
cs
or
cmc
xor
push
and
cli
inc
aaa
cs
xchg
push
dec
dec
leave
cmc
mov
xchg
xchg
subl
cmpsb
xor
pushf
mov
outsl
jecxz
test
sub
movsb
cmpsl
mov
push
call
in
test
ljmp
mov
xor
xlat
int3
mov
lods
mov
aas
pop
test
cwtl
lret
or
fcoms
ja
mov
shll
inc
mov
cld
mov
push
dec
or
aam
push
add
pop
roll
mov
and
sbb
pop
jne
loopne
inc
xlat
daa
sub
adc
mov
stc
fldenv
mov
roll
push
pop
gs
push
or
sahf
sbb
push
adc
or
push
les
sub
sbb
and
jg
mov
es
inc
adc
pop
mov
inc
aaa
inc
push
jle
cmpsl
cmp
aad
daa
scas
fs
fisttpl
push
jge
aas
mov
pop
xor
hlt
dec
pop
mov
mov
addr16
push
cmpsb
icebp
call
outsb
pusha
mov
push
xchg
pop
sar
rcll
sub
in
pushf
testb
lret
adc
lret
shrb
pop
repz
mov
stos
cmpb
fcompl
outsl
scas
lahf
clc
jne
mov
ja
shrb
hlt
mov
push
test
lods
ret
and
fstp
fidivrl
sbb
mov
push
sub
jle
sbb
fisubrs
mov
in
in
lcall
push
cld
sti
add
push
adc
into
mov
push
add
dec
dec
dec
xor
das
mov
and
sbb
mov
dec
mov
cmp
sbb
cmp
mov
mov
addr16
repz
xor
cmp
xor
in
mov
cwtl
cmc
xor
xchg
iret
cltd
je
or
ret
mov
push
aaa
ja
pop
xchg
fnstcw
jnp
loope
fsubl
inc
jecxz
sahf
jle
mov
pop
cwtl
cmpsl
fisubrs
mov
jno
dec
xchg
add
push
mov
cmp
stos
stos
cmp
xchg
jmp
xor
fwait
xchg
pop
cld
stos
popa
iret
fidivrs
or
add
scas
aaa
fcmovnu
pop
xchg
push
cmc
and
inc
inc
inc
in
mov
sub
stc
xchg
ss
inc
aas
ds
jmp
inc
mov
sbb
mov
or
cwtl
aam
pop
sub
push
hlt
xor
jns
sbb
test
out
pop
sbb
in
cs
shrl
sub
inc
push
sbb
inc
sub
fidivrs
dec
mov
sub
nop
ret
mov
dec
or
ds
xchg
sbbb
pop
stos
fnstcw
daa
cltd
test
xor
xor
shll
or
pop
fsts
rcl
in
jb
mov
lds
imul
jae
xchg
mov
leave
fdivrs
out
jns
push
loopne
mov
repnz
out
lret
xor
jg
or
xchg
rcl
rol
jne
std
stos
xor
or
lea
push
setnp
leave
mov
mov
mov
movsl
insb
inc
fcmovu
sbb
and
roll
jo
xchg
lods
in
imul
xor
fcompl
inc
push
in
pop
stc
std
loope
dec
cmp
or
icebp
mov
or
pop
std
jl,pt
adc
cs
or
adc
adc
sub
mov
int
js
jbe
xchg
sar
inc
insl
mov
lea
inc
xor
mov
sti
stc
xchg
or
cmp
mov
mov
dec
push
andl
xchg
outsb
jo
lds
sub
mov
cmp
cmp
jnp
ja
shlb
mov
jg
loopne
int
pusha
jnp
push
xor
fisubrl
pushf
sahf
mov
pushf
mov
cmc
popa
add
lock
lcall
cmc
lret
adc
mov
mov
add
int
shr
iret
pop
int
push
aas
jb
stc
dec
lds
or
lret
sbb
fisubs
or
xchg
div
adc
add
int3
xchg
push
inc
aas
mov
out
sbb
push
lods
mov
ljmp
xchg
lret
sbb
pop
sub
and
mov
cmp
ss
inc
pop
dec
test
outsb
jns
sub
and
mov
inc
sub
ds
push
push
push
or
andb
pop
pop
nop
test
push
pop
ds
sbb
scas
repz
pop
mov
popa
call
jg
cmpsl
pushf
mov
outsl
jle
push
mov
jle
ss
mov
jge
test
sbb
nop
mov
push
loop
or
out
mov
aad
jae
lahf
sub
cmp
out
ret
ret
sbb
in
daa
or
cli
jns,pn
sbb
add
outsb
loopne
movsb
loope
adc
jge
aas
jnp
sbb
mov
pop
cmpsl
out
int
mov
dec
scas
jmp
push
scas
push
adc
xchg
lahf
cs
adc
pop
ds
add
cmp
dec
sbb
stos
les
sbb
aam
repz
mov
mov
mov
push
inc
and
lret
mov
add
insb
loopne
xchg
notb
scas
cli
cmpsl
xchg
loopne
cmp
or
inc
and
xchg
loop
xor
pop
icebp
push
outsb
xor
icebp
dec
stos
xchg
add
sbbl
push
push
ja
jne
leave
xchg
lea
jecxz
loopne
xchg
in
sahf
je
mov
xor
aaa
mov
xchg
lcall
pop
cmp
jg
mov
xchg
add
into
sbb
cli
jge
mov
mov
test
push
fists
frstor
jae
ds
out
xor
xlat
movb
pushl
sub
sub
lock
mov
and
rcrb
gs
sbb
ja
cli
stc
xchg
push
adc
fstps
orl
cli
ss
and
fcomi
jp
pop
clts
sbb
pop
pop
lock
sub
xchg
imull
sbb
sub
push
js
mov
xchg
push
les
lds
pop
shl
sbb
dec
js
add
pop
push
push
ja
pop
mov
mov
imul
cmpsb
fwait
xor
jo
sub
pop
jbe
xchg
dec
push
push
jg
je
xchg
shll
xchg
mov
je
out
cwtl
push
push
stc
fwait
ss
js
aas
fst
adc
rclb
fadds
incl
mov
mov
add
test
push
test
insb
xlat
add
jecxz
or
mov
jae
jno
or
int
push
sbb
sbb
decb
add
out
xor
fchs
dec
cmp
and
adc
push
inc
jnp
ss
inc
dec
and
mov
ja
mov
or
push
and
ja
sbb
or
mov
sbb
push
push
cmpl
outsl
inc
addl
xchg
jg
aas
aas
xchg
popf
addr16
roll
insb
mov
repz
cmp
stc
and
addr16
push
lock
lods
subb
outsb
pop
inc
cmp
jle
add
cwtl
jbe
push
subb
xchg
andl
mov
xchg
cmp
aaa
push
pushf
fwait
lcall
ret
mov
in
in
jmp
cli
jge
mov
rcl
adc
and
in
mov
outsl
sbb
out
mov
pop
add
pop
sub
ficoms
iret
and
lret
xlat
add
loop
scas
jmp
mov
dec
pop
lea
dec
push
mov
mov
pop
push
test
icebp
adc
scas
popa
push
dec
sbb
icebp
pop
loopne
adc
sub
or
add
pop
aas
imul
test
jb
ja
lcall
enter
push
inc
pop
leave
push
sub
movsb
test
stos
inc
icebp
repz
nop
hlt
repz
push
bound
cltd
test
jl
xchg
icebp
pop
mov
scas
scas
jp
popa
sub
mov
xchg
cltd
cmpb
mov
mov
inc
in
loop
aad
jbe
xchg
cwtl
mov
xchg
pop
lahf
shll
xor
in
mov
xor
xor
xor
xchg
mov
dec
ret
mov
shrl
out
sub
cli
xor
inc
test
and
aas
mov
push
add
or
cmp
sbb
fstp
jae
pop
adc
ret
in
cmc
sub
xchg
in
push
push
stc
sub
mov
cs
sbb
inc
xor
xchg
insl
mov
inc
and
rorl
and
push
push
push
push
repz
jnp
sbb
fs
add
xchg
lods
xchg
or
es
inc
inc
xor
mov
add
pop
inc
sub
xorb
sub
dec
dec
dec
mov
bound
icebp
sbb
popf
xor
out
gs
pop
push
mov
shll
pmaxub
ret
loope
mov
shlb
xchg
jg
jns
pop
cwtl
out
push
jp
aaa
in
mov
in
xchg
shlb
mov
aas
xchg
lret
xchg
fsubrl
jb
test
std
ret
lcall
lret
mov
or
push
lret
iret
mov
rcl
leave
mov
ret
ljmp
sahf
into
flds
sbb
les
jae
cmp
add
div
add
sub
mov
add
and
repz
or
jb
sbb
push
sub
pop
push
mov
add
jo
or
arpl
xchg
xchg
dec
dec
sub
fidivrs
stc
and
sub
jle
sahf
mov
ljmp
fwait
cmp
xor
data16
pop
mov
ss
pop
xor
pop
lahf
and
jg
rclb
insl
scas
aam
sub
xchg
test
hlt
jp
or
popf
pushf
nop
lret
sub
rol
xchg
leave
jge
movsb
mov
negb
push
adc
cltd
test
inc
pop
pop
mov
mov
mov
add
adc
and
xlat
clc
fmuls
insl
scas
jmp
inc
stc
push
inc
es
mov
dec
insl
and
adc
out
xor
cmp
dec
sbb
out
lret
or
sub
dec
cs
push
sub
pop
sub
fstps
pop
push
nop
pop
pop
aad
lock
and
outsb
orl
xlat
jne
fcoml
cmp
jnp
add
arpl
out
xchg
xor
nop
test
jo
pop
mov
xchg
mov
ja
pop
dec
popf
jg
icebp
push
cmpsl
pusha
dec
test
pop
pop
cld
push
stos
shrb
push
xchg
cmp
dec
lahf
jle
jl
mov
xchg
arpl
dec
mov
mov
stos
cld
xchg
lcall
ret
mov
mov
pop
xchg
mov
mov
mov
in
stos
push
jg
add
or
lods
cmp
push
iret
loope
mov
mov
rcll
add
add
fcmovnu
je
and
gs
add
sar
pop
call
mov
fbstp
add
dec
or
idivb
std
movsb
loop
imulb
xchg
push
or
or
dec
inc
jnp
pop
outsl
and
inc
aam
cmp
outsb
lcall
test
sbb
push
push
jne
je
ja
cli
cmp
repz
mov
test
cmp
popa
fcoms
push
cwtl
insl
xchg
push
dec
cmpsb
popf
dec
push
in
fdivrs
out
outsl
insb
imul
into
mov
fisttpll
jle
jg
xchg
and
in
movsl
out
arpl
sar
nop
xchg
movsb
mov
mov
jnp
mov
pushf
sahf
test
ret
mov
scas
mov
subl
mov
rcrb
mov
leave
inc
test
adc
inc
test
pop
fsubl
stc
mov
or
sub
in
xor
clc
xchg
and
sbb
jns
sbb
les
cmp
mov
push
or
push
ss
mov
dec
cmp
clc
dec
sbb
rorl
adc
mov
dec
pop
sahf
fcompl
push
shll
xchg
inc
inc
mov
scas
jle
cs
inc
outsb
arpl
imul
adc
xchg
dec
dec
dec
and
cmpsb
cmp
pop
flds
dec
mov
fstp
push
push
cmp
jbe
pop
add
call
xchg
repnz
in
scas
in
xchg
ja
lea
xchg
xchg
orb
cmp
add
movsb
mov
xchg
inc
add
adc
fidivrl
mov
xlat
icebp
pop
pop
lcall
mov
scas
lods
cmpsl
out
add
cmp
cld
mov
adc
fcomps
les
outsl
enter
std
xchg
flds
or
in
out
inc
cmp
pop
mov
pop
cmpsl
out
out
lcall
inc
sub
mov
jmp
sub
add
adc
ljmp
in
xor
and
and
sub
or
or
cmp
cmp
sbb
push
sbb
mov
cmpsl
out
xchg
inc
sub
sub
ljmp
mov
rep
adc
inc
fs
iret
or
mov
test
inc
nop
mov
or
rcll
sbb
cmp
mov
push
mov
loopne
mov
add
jnp
jg
insb
jl
imul
cmp
lea
xchg
lcall
pop
cmpsl
in
adc
mov
jmp
scas
xor
jmp
cli
aad
mov
inc
mov
push
and
pop
xchg
sarb
jnp
fisubs
jbe
add
add
jmp
mov
shl
adc
sub
cmp
dec
ljmp
loop
adc
stc
push
inc
and
dec
fcom
jno
stc
pop
sub
push
mov
and
sub
sub
divb
push
xchg
dec
test
dec
pop
xor
cmp
xor
and
test
and
fwait
mov
cwtl
insl
sbb
lahf
xor
fldenv
addr16
jle
stos
sub
mov
ja
insl
insb
cmpl
add
xchg
adc
mov
in
or
jge
mov
mov
cwtl
test
sbb
ss
cmpsl
mov
sbb
add
subl
xor
stos
xchg
pop
sbb
lahf
pop
and
cli
mov
fnstenv
bswap
lret
sbb
push
lock
fcmovne
and
and
xor
mov
das
pop
mov
adc
inc
out
stc
sti
cli
lock
inc
pop
lock
and
adc
push
pop
dec
dec
dec
sub
jns
push
push
fnstenv
or
and
gs
jae
out
sub
xchg
popf
mov
imul
sub
lea
icebp
scas
push
imul
push
dec
dec
inc
xchg
dec
jo
xchg
push
push
xchg
jae
andl
dec
mov
add
movsb
xor
mov
jbe
mov
xchg
lea
mov
movsb
fmull
mov
xor
mov
mov
in
test
dec
cmc
fnstcw
jmp
loope
cmp
mov
xlat
mov
add
adc
aas
or
xchg
je
jecxz
xor
clc
xchg
sbb
mov
cmp
fucomp
in
lock
dec
fchs
inc
cmp
and
inc
aas
sbb
or
and
adc
pop
scas
dec
dec
dec
inc
push
push
sub
jmp
and
pop
pop
xor
subl
insb
subl
lret
mov
fidivrs
push
aaa
cmp
cmp
insl
hlt
cmpsl
aad
xchg
cmp
insl
std
push
xor
pop
imul
and
pusha
scas
lods
aam
repz
repz
jbe
les
sbb
xchg
xchg
xchg
sti
jle
leave
pushf
xchg
mov
rorb
fdivs
out
negb
nop
fstps
imull
mov
mov
popf
in
pushf
push
mov
and
sti
mov
sbb
rorb
sbb
add
std
add
sbb
in
inc
or
sub
outsl
mov
je
push
lock
lock
xchg
inc
out
jmp
inc
stc
push
sbb
nop
mov
gs
sub
je
stc
inc
inc
fbstp
push
pushf
enter
popa
push
sub
pop
jecxz
in
sub
arpl
negb
addr16
xchg
sar
aas
xchg
fistl
jge
mov
jg
in
bound
nop
pop
lock
or
push
dec
aas
push
cmp
fs
sbb
out
daa
addr16
les
repnz
push
mov
push
shrl
jecxz
dec
leave
jnp
loope
lea
mov
xchg
mov
sub
xlat
loop
je
add
or
lahf
dec
add
mov
in
mov
idivl
add
mov
aad
js
into
sarb
or
push
loope
mov
mov
imul
sbb
cmc
adc
push
lock
insl
mov
fdivl
sub
add
push
push
pop
sub
or
sti
adc
incb
int
insl
sbb
or
pusha
cmc
pop
adc
repz
mov
and
outsl
pop
pop
out
xor
js
sub
sub
insl
lea
sub
sub
cmpb
aad
cmp
or
xchg
push
scas
dec
dec
leave
cmc
movsb
dec
aas
jns
xchg
xchg
subl
mov
inc
test
or
jo
lods
roll
aam
fwait
pop
cmp
pop
mov
xchg
loop
mov
adc
jno
mov
es
mov
or
in
xchg
fsubr
js
in
mov
mov
and
cld
fmuls
and
in
popa
insl
push
mov
xchg
or
adc
sbb
sbb
adc
fmul
or
es
in
cld
push
or
cmc
testl
aaa
ljmp
cmp
xor
arpl
sbb
test
shlb
cld
inc
addr16
dec
pop
pop
sbb
ret
add
dec
pop
jne
lret
aaa
sub
mov
push
sub
mov
cmp
outsl
lods
repz
cmp
bound
mov
out
pop
dec
insl
daa
pop
push
mov
gs
jge
push
jp
hlt
xchg
les
or
xor
xchg
out
fnstsw
mov
pop
mov
xchg
mov
sbb
or
cmp
mov
je
pop
cmpsl
test
inc
imul
and
xchg
rcrl
sbb
mov
in
push
insb
jmp
lret
fidivrl
pop
or
xor
fbstp
push
fwait
cmpsb
out
or
test
cld
loopne
icebp
inc
xor
adc
flds
outsb
pushf
xor
outsb
into
es
pop
pslld
lods
dec
dec
push
std
sarl
and
sbb
inc
es
mov
aas
jno
sbb
aaa
stos
clc
cmp
jbe
sahf
sti
push
ja
aas
mov
aaa
and
repz
sub
out
mov
leave
push
and
loopne
xor
adc
in
movsb
mov
addb
push
dec
ss
lahf
frstor
rcll
mov
mov
movsb
mov
in
add
dec
mov
push
xchg
les
lods
lea
test
clc
clc
stos
stos
lods
cltd
fwait
xor
ret
lcall
xor
pop
sbb
loope
imul
xchg
jne
subb
aad
enter
int
fcoml
je
lds
inc
inc
je
in
mov
push
test
aam
in
out
out
ds
int
data16
and
imul
adcl
mov
adc
outsb
imul
dec
cli
push
sbb
sub
pushf
leave
jne
dec
ja
leave
xchg
std
cmp
inc
ret
fimull
dec
dec
dec
bound
mov
cwtl
lea
jb
pusha
aam
lds
fldenv
addl
adc
adc
or
pop
adc
mov
pop
mov
and
cmc
sbb
pop
jp
int
xor
iret
adc
mov
movsb
ds
fcmovnu
fnstcw
dec
add
loope
js
cmpsl
cltd
mov
cmc
lret
adc
sti
add
inc
mov
mov
mov
sbb
add
and
je
sbb
mov
les
inc
push
je
out
in
in
jb
lea
cmp
mov
adc
add
mov
daa
dec
inc
sbb
cmp
inc
movsl
dec
xor
xchg
xorb
add
aaa
pop
or
or
mov
int
push
and
push
popa
mov
fnstsw
cmp
out
popf
pusha
mov
add
push
sub
ficomps
inc
repnz
xchg
xchg
xorb
adc
lahf
ret
xchg
mov
mov
ret
aam
shrb
insl
aam
sub
cmp
mov
mov
push
nop
loop
adc
cwtl
mov
mov
pop
lcall
out
add
mov
in
in
add
mov
sar
push
adc
cmp
adc
xor
pop
stc
or
cld
jle
iret
and
hlt
mov
or
xlat
lret
add
or
rcrl
roll
mov
or
mov
loopne
in
out
aam
xor
mov
xchg
sub
test
add
adc
push
jo
dec
dec
sub
pop
lods
push
dec
cli
adc
pop
clts
and
pop
pop
cmp
vmwrite
gs
mov
mov
rcll
cmp
mov
sahf
fidivrl
push
or
or
cmp
mov
fcomip
xor
inc
dec
stc
sbb
mov
push
sub
pop
push
iret
or
xchg
mov
jge
jb
jle
mov
sahf
out
dec
out
inc
bound
push
xchg
mov
fimull
sbb
sahf
rorb
mov
subb
in
enter
rcl
mov
add
xor
mov
daa
or
adc
push
xchg
cmp
mov
out
int3
in
pop
adc
sbb
mov
les
jp
xchg
cmpsl
in
jmp
js
sub
arpl
or
add
repz
inc
aas
mul
push
sbb
adc
and
inc
test
stos
pop
dec
inc
ret
scas
leave
je
or
lods
das
adc
out
sub
pop
pop
pop
ret
add
out
push
nop
loop
insb
add
insb
notl
sub
cmp
dec
sub
jp
pop
mov
push
sub
mov
out
mov
icebp
popa
dec
rclb
sahf
push
adc
cltd
test
jl
test
jmp
jbe
mov
adc
rcrl
xchg
popa
mov
dec
nop
jbe
and
testb
les
lods
lea
xchg
lea
cmp
ja
adc
mov
mov
pop
notb
shll
xlat
pop
lret
lods
ret
sbb
fisttpll
jb
test
fisttpl
sbb
xor
pop
jp
int
sbbb
imulb
inc
lock
and
notl
addr16
aas
mov
cmp
roll
dec
pop
jbe
or
sbb
divb
or
gs
orl
sbb
sub
mov
cmpsb
cs
mov
mov
sub
rcl
or
inc
mov
jae
add
jecxz
mov
daa
mov
xchg
insl
lods
pop
or
cmpb
fsubr
xchg
xor
dec
sahf
dec
cmp
xchg
in
inc
jmp
repz
add
shll
xchg
mov
fidivl
push
shlb
outsl
stc
sbb
lds
xchg
js
inc
iret
into
lcall
mov
inc
push
stos
add
mov
lock
sub
popf
aad
lea
iret
into
stos
shll
ficoms
stos
fisttpl
push
sti
test
into
dec
test
push
xlat
add
mov
cmp
leave
fmul
push
mov
push
dec
push
inc
cs
push
fldt
stos
inc
ljmp
inc
jmp
idiv
stc
or
adc
movsb
or
and
xor
inc
mov
push
push
cmc
cmpsl
mov
repz
cmpsb
adc
pushw
add
jmp
rorl
inc
cmc
xor
xchg
xchg
sub
sub
mov
xchg
popa
jg
or
cmp
int
mov
xor
js
dec
dec
sahf
xor
inc
push
dec
out
push
add
lods
lods
mov
sbbl
pop
mov
js
mov
cmc
push
sbb
mov
icebp
xor
loopne
mov
test
mov
mov
icebp
ljmp
aam
cli
std
mov
mov
pushf
push
in
loop
fnstenv
shl
jo
mov
lds
fucompp
xor
jp
mov
xlat
xor
xlat
bnd
testl
out
sahf
cmp
cmp
adc
mov
dec
dec
je
sub
mov
mov
cli
aam
icebp
pusha
pop
sub
and
imul
cmpsl
sub
sub
sbb
inc
sbb
cmpb
dec
sub
cmpsb
dec
popa
ds
aaa
icebp
sub
lea
adc
bound
adc
mov
shrb
cmpsb
xchg
test
pop
xchg
pop
divl
cmp
jne
mov
push
out
xor
pop
push
mov
xor
fsts
xor
arpl
or
push
test
jne
xchg
push
pushf
repnz
adc
add
inc
subl
lods
addr16
and
xchg
cs
int3
lret
xor
js
in
adc
into
sbb
scas
dec
add
jmp
fnsave
sub
add
in
xor
push
inc
pop
pop
pop
stc
jmp
and
fsubrs
imulb
cmp
inc
pop
jnp
sbb
in
add
bt
repz
cmp
je
filds
dec
xchg
int3
cmp
fs
and
stos
jle
cmp
cmp
aas
shll
mov
adc
dec
leave
xor
movsl
pop
dec
mov
xchg
pop
and
pop
mov
mov
push
mov
insb
outsl
add
imul
mov
inc
jl
add
jns
into
loopne
mov
mov
xchg
je
in
mov
fdivp
out
pushf
cltd
fs
lahf
pop
add
cmc
test
cmpsl
jmp
ljmp
loop
mov
and
push
xchg
xchg
mov
out
daa
cmp
fcmovne
loop
or
sub
adc
sub
and
xchg
jmp
sub
dec
call
sarl
lock
fistps
and
dec
mov
in
xor
or
clc
mov
mov
adc
or
sbb
int3
aaa
pop
dec
cwtl
push
push
movl
cmp
push
xor
in
jle
and
push
or
mov
dec
dec
int
sarb
cmp
ljmp
pop
pop
daa
pop
push
data16
les
sub
xor
clc
adc
out
enter
mov
xchg
mov
jge
adc
mov
xchg
sahf
popf
pushf
lea
in
or
add
sub
push
lods
stos
stos
adc
pushf
fisttps
adc
mov
enter
jae
or
insl
int3
into
dec
js
mov
loopne
jae
add
int
add
call
sbb
loope
out
outsb
and
pop
and
and
and
or
sbb
push
mov
jecxz
in
arpl
scas
push
dec
or
or
mov
in
mov
mov
push
repz
pusha
push
lret
cli
out
sbb
imul
mov
imul
insl
push
mov
inc
xchg
push
aad
jae
das
fs
push
mov
dec
dec
push
arpl
or
mov
inc
jl
subl
stos
dec
push
addl
pop
xor
push
jne
mov
push
jns
int
and
xor
dec
nop
rol
scas
or
push
fdivrs
ss
push
sahf
popf
pushf
gs
icebp
bound
push
jae
stos
mov
mov
rcl
adc
repnz
scas
add
add
int
adc
call
add
jmp
pop
inc
rcr
int3
jp
insl
sub
sbb
clc
testl
pop
push
pop
xor
add
pushf
clc
das
jns
repz
arpl
ror
or
and
inc
fisttpl
mov
ficomps
adc
add
ret
cmp
and
jl
sub
and
jns
jbe
popa
sub
cmp
pusha
jb
pop
fstpt
or
lret
add
mov
dec
push
rcrl
lahf
xor
add
pop
in
add
imul
mov
sub
cmp
icebp
mov
mov
dec
or
jns
cli
movsl
test
jae
mov
lock
fcmovnb
les
adc
pusha
dec
in
in
enter
div
fwait
adc
or
movsl
mov
sub
mov
mov
cmpsl
pop
push
inc
fistpl
test
and
in
cld
push
or
cmc
divl
fs
rcl
add
push
cmp
test
dec
inc
and
nop
xor
jg
push
pop
mov
mov
sarb
outsb
or
mov
adc
sbb
jne
das
jg
pusha
push
push
out
mov
mov
cwtl
ljmp
mov
inc
das
jb
push
push
cmp
fs
and
in
fisubrl
pop
data16
cltd
iret
dec
sub
push
test
sbb
rorl
mov
mov
mov
xchg
js
cs
into
lcall
movsb
jnp
aaa
jb
gs
out
ljmp
dec
dec
and
arpl
dec
cmpsb
test
jns
div
adc
dec
into
scas
movsl
push
pusha
cld
sti
xlat
stc
sahf
cwtl
test
int
dec
jbe
mov
push
add
adc
mov
pop
aam
jp
sbb
jb
lock
in
inc
es
in
out
fmull
inc
fstl
decb
lds
jg
cmc
inc
cmc
add
arpl
into
inc
dec
dec
dec
inc
sahf
je
sahf
and
xor
add
sbb
sub
push
out
inc
or
mov
sbb
cmp
and
push
or
cmp
cmp
gs
shr
mov
imul
xor
mov
imul
lcall
or
rorl
insl
push
stos
nop
ret
pushf
cli
xchg
adc
mov
cmp
xor
push
lea
stos
or
mov
mov
ror
loope
dec
hlt
xor
stos
int
movsb
arpl
mov
aaa
int3
push
inc
dec
fsubs
or
stos
daa
popf
shrb
clc
in
push
jne
sarb
and
jle
mov
sub
into
push
insb
mov
sub
xor
mov
fwait
cmpsb
out
jl
les
aad
push
xor
adc
ljmp
decl
dec
adc
dec
adc
pop
push
dec
dec
sbb
push
adc
jns,pn
mov
mov
xchg
add
sub
es
subl
bound
imul
leave
jb
push
mov
push
inc
pop
inc
fildl
movl
clc
sbb
and
sti
test
push
xor
sbb
push
mov
pusha
xchg
inc
jl
pop
push
pop
ja
mov
sub
cmp
mov
test
pushf
data16
arpl
movsl
sbbl
xor
in
xchg
add
dec
sbbb
stos
lods
jo
mov
mov
dec
inc
adc
mov
adc
jl
movsb
stos
in
pop
or
test
adc
jb
cmp
mov
xchg
mov
sub
unpckhps
or
inc
or
xor
fcompl
insl
fistpl
out
in
add
std
lret
test
aad
cmp
test
loope
into
adc
fists
push
mov
ds
fst
inc
and
bound
pop
sub
adc
and
adc
insl
cmp
inc
sbb
xchg
xchg
pop
cwtl
dec
mov
and
insb
out
imul
jle
mov
pop
icebp
popa
mov
dec
insb
dec
arpl
lods
push
popf
outsb
jo
lret
xchg
mov
lcall
lcall
popa
mov
nop
dec
xchg
mov
jl
cmp
enter
mov
sbb
cltd
fwait
sbb
cwtl
iret
sub
xor
xchg
ror
ljmp
jg
cmp
movb
mov
adc
cli
jl
mov
rcll
xor
jg
daa
daa
jl
mov
lds
sub
test
pop
mov
add
pop
int
inc
cmpsb
imul
out
and
mov
cmp
xlat
mov
ljmp
sbb
sbb
pop
sub
and
pusha
pop
sub
rclb
sbb
aaa
jp
push
xor
xor
daa
outsl
xchg
jge
cmp
bound
mov
in
mov
sub
repz
jmp
insl
mov
fs
data16
mov
ljmp
push
cmp
jg
jle
mov
adc
in
push
push
je
testl
push
xor
xor
cmp
xor
lahf
xchg
xchg
scas
lods
stos
test
cltd
mov
mov
adc
bound
sub
test
sbb
stos
jae
lret
lret
xor
jecxz
in
test
ficompl
in
add
je
int
in
lea
cmp
fildl
push
push
mov
push
and
mov
popf
and
inc
mov
push
push
sub
mov
add
mov
das
lods
fsubs
mov
loope
js
jnp
mov
xchg
xchg
push
mov
mov
cmp
jnp
xor
cmp
mov
sub
add
insb
les
fwait
pushw
mov
outsl
pop
push
pushf
add
mov
add
outsl
cmpsb
add
imul
mov
loope
je
jecxz
dec
push
xchg
ljmp
push
mov
mov
jns
ret
ret
mov
fwait
xor
popa
jmp
loope
fcomps
xchg
push
pop
xchg
data16
and
imul
xor
inc
out
mov
lock
fildl
add
orl
push
cwtl
pop
repz
or
and
fistpl
out
out
pushf
cmp
arpl
adc
ja
ror
cwtl
sub
mov
jg
lret
pop
xchg
or
in
xchg
xor
int3
jg
inc
xor
adc
mov
fstpl
cmp
cmp
pop
add
addl
inc
sbbl
repz
dec
arpl
jge
xchg
repnz
cmpxchg
sbb
xchg
xorb
push
mov
cld
enter
mov
enter
mov
shrb
sub
xor
xor
jle
leave
mov
push
mov
aas
loopne
sbb
call
in
loop
in
jmp
push
les
pop
sti
cli
or
daa
clc
jbe
call
mov
mov
movsl
sbb
pushf
fprem
das
push
add
loopne
leave
pop
mov
das
and
call
xor
sahf
aas
bound
pop
push
imul
push
pushf
arpl
push
push
mov
pop
imul
data16
and
pop
push
pushf
cmp
adc
mov
or
cs
sbb
lret
daa
repnz
shrb
push
out
fldenv
pop
ds
lret
popf
popf
and
jb
pop
es
sbb
mov
movsl
lds
pop
repnz
test
mov
mov
jae
enter
mov
jl
mov
fcoml
mov
jae
mov
mov
outsb
or
xor
cltd
mov
mov
imul
adcl
in
lds
and
mov
or
add
scas
sub
int3
jecxz
xchg
sbb
sub
pop
adc
inc
xor
sti
sub
cmp
std
adc
lock
xchg
ds
dec
inc
mov
or
std
xor
push
mov
mov
pop
xor
adc
adc
stos
cmpsl
jge
add
xchg
cmp
push
std
cmp
js
bound
test
cmp
push
mov
mov
popa
dec
mov
lahf
sahf
push
push
roll
test
stos
push
insb
jo
in
or
stos
test
aam
cmp
outsb
movsl
stos
js
shl
aam
movsb
dec
scas
xchg
imul
sbb
xor
mov
je
int
jl
cmp
aam
mov
add
mov
cmpsb
movsl
cmpsl
sahf
mov
adc
fcmove
stos
les
sti
cli
es
jecxz
ret
and
mov
ret
imul
rcrb
cs
mov
fwait
cmpsb
out
lds
add
fiadds
ror
ljmp
and
fs
add
cmp
adc
adc
idivl
pusha
cmp
mov
mov
ss
rcrl
addr16
push
mov
xchg
outsl
outsb
cmp
xlat
js
jnp
aas
inc
aas
mov
imul
movsb
mov
mov
cwtl
insl
sub
repnz
sahf
xor
inc
dec
nop
outsl
into
pusha
adc
mov
and
jle
ret
lahf
stos
enter
in
lahf
mov
fsubrs
mov
cs
dec
fisttps
lock
adc
jo
movsl
shll
popf
imul
jbe
imul
out
rcl
cltd
shrb
ds
inc
lods
je
mov
fnsave
jno
iret
or
push
or
cmp
mov
pop
jp
fndisi(8087
icebp
dec
sbb
ficomps
and
mov
out
lods
mov
lcall
add
in
insb
jecxz
adc
cmp
sarl
or
pusha
repz
jns
hlt
push
cltd
out
movsl
insl
inc
aas
jle
cmp
push
push
dec
fdiv
inc
jo
bound
js
add
cli
inc
test
daa
stos
cmp
in
cmp
push
xor
out
fs
popf
xor
cmpsl
pusha
dec
test
sbb
repz
aam
xor
popf
packuswb
cltd
mov
dec
mov
xor
rcl
popf
cmpb
movsl
lret
xlat
inc
jns
or
mov
lock
je
test
out
test
adc
incl
mov
int3
es
into
add
mov
add
mov
in
push
rcll
js
sbb
pop
es
in
or
xchg
data16
aaa
iret
popf
add
out
aad
movsb
mov
dec
loopne
adc
add
aad
push
push
cmp
pop
inc
sbb
loope
or
dec
pop
xchg
pop
and
das
adc
sbb
sbb
data16
sub
adcl
iret
jne
jo
mov
cmp
dec
dec
nop
inc
fmull
sub
pop
xor
decl
jbe
sahf
xchg
adc
jne
test
jl
pop
repnz
stos
test
jmp
sub
xchg
shrb
mov
push
and
jb
stc
xor
xchg
cmp
scas
in
or
cltd
mov
mov
stos
lods
sub
lahf
loopne
jg
mov
adc
ret
repz
and
stos
push
dec
mov
aaa
int
fcmovbe
lret
loope
mov
out
out
and
ret
adc
mov
mov
notl
jb
xchg
push
inc
in
inc
jp
cmp
enter
mov
dec
pop
or
pop
xor
shl
repnz
add
or
sub
mov
inc
cs
xor
jp
inc
sbb
sub
jp
mov
push
imul
pop
pop
xchg
adc
lea
adc
cmc
mov
push
shrb
out
or
aaa
imul
jecxz
aam
add
xchg
add
xchg
sub
sbb
in
xlat
cmp
shrb
mov
adc
jno
mov
add
mov
cld
in
jmp
xor
scas
stos
into
int
cmc
jge
enter
rorb
and
int
jecxz
test
enter
mov
sub
movsl
in
pushf
das
sub
add
out
xor
aas
fisubrl
and
sub
pop
cmp
push
push
jl
dec
clc
popa
fcomip
and
add
push
repnz
popa
mov
or
or
mov
sbb
sbb
daa
xor
std
out
jo,pn
out
clc
cmp
sahf
push
push
jne
push
adc
cmp
pop
inc
sub
popa
or
mov
cltd
cmp
fwait
scas
pop
pop
sub
movsb
out
pop
push
bnd
ffreep
outsl
sub
call
jne
jbe
pop
pushl
sub
xchg
cld
nop
mov
scas
adc
jecxz
js
xchg
xchg
cmp
scas
cwtl
fbstp
cmpsl
xchg
into
je
xor
push
mov
in
in
enter
jle
lods
ret
hlt
add
mov
aam
add
movsl
mov
sti
cwtl
mov
pop
or
test
mov
imull
dec
loope
cmp
add
pop
divl
cmc
xchg
lahf
pop
in
push
cmp
fnstsw
add
dec
mov
pmaddwd
xchg
sbb
and
xor
adc
adc
mov
in
fildll
and
xor
pop
xchg
loop
insl
cmp
inc
test
jae
jle
ds
xchg
aaa
cs
flds
popf
dec
dec
dec
push
or
popf
jmp
xchg
arpl
test
xor
sbb
dec
xor
movsl
les
outsl
jo
insb
jnp
dec
lds
xchg
sbb
inc
and
xor
rcrb
leave
fstl
cmp
mov
mov
xchg
jmp
add
mov
in
in
jmp
jle
adc
push
mov
mov
mov
mov
mov
push
fcoms
jno
je
ljmp
sbb
cmc
aad
stos
mov
lds
jae
adc
xchg
popf
sub
out
xor
cmp
dec
inc
inc
sbb
jbe
or
movaps
and
jno
xor
sbbl
stc
mov
xor
addl
push
std
mov
adc
cs
xchg
dec
cmp
cltd
lret
and
xor
inc
add
das
negl
fcomip
xor
call
mov
adc
push
ret
mov
dec
rorb
adc
in
sarb
lret
sbb
cwtl
popf
in
ja
inc
into
int
jns
subb
aad
fsubrs
ljmp
mov
add
mov
loop
ljmp
rcll
adc
cmp
scas
add
mov
test
add
orl
xlat
mov
ljmp
ficompl
mov
into
mov
or
cld
push
dec
dec
adc
xchg
mov
xchg
push
inc
or
add
cmp
adc
movsl
popa
sbb
cld
adc
scas
dec
dec
pop
cmp
jmp
pusha
pop
pop
push
icebp
lock
out
jmp
inc
xor
jne,pt
jnp
sub
push
daa
push
adc
jne
xchg
pop
mov
hlt
scas
jl
scas
mov
in
push
aas
xor
lea
push
pop
icebp
cmp
xor
dec
inc
dec
lea
lods
repz
pop
cwtl
fiaddl
shlb
mov
out
test
pushf
jb
fcoms
mov
ret
ljmp
xor
sahf
mov
jp
push
scas
scas
cmc
fbstp
sbb
fsubrl
sbb
stos
sti
fnstsw
mov
out
cs
xchg
xlat
out
hlt
jns
mov
jnp
js
mov
push
scas
popa
lods
out
stos
add
adc
jmp
aaa
dec
out
orl
or
xchg
jecxz
clc
das
xor
jbe
push
mov
inc
sbb
and
push
rcr
ficompl
pop
push
popl
dec
push
push
sbb
cs
mov
sbb
add
jne
mov
out
and
repz
adc
mov
lods
jmp
pop
push
pop
sti
pop
pop
ja
dec
xchg
pop
cmpsb
movsl
pop
add
jno
les
and
pop
pusha
xchg
cmpb
scas
push
mov
xor
mov
mov
movsl
dec
loop
pop
push
xchg
jmp
scas
pop
scas
nop
xchg
aas
xchg
mov
inc
outsl
scas
xchg
frstor
inc
mov
div
aam
fstpt
test
mov
imulb
push
shlb
test
cmovp
aam
add
icebp
imul
sahf
sbb
scas
shll
jb
pop
mov
push
and
bound
fdivr
add
cmp
testb
pushf
mov
dec
adc
pop
xor
jnp
pop
add
mov
sahf
sti
stos
inc
inc
inc
sbb
movaps
outsb
insl
clc
rcrb
hlt
xor
ljmp
packsswb
arpl
in
dec
lds
adc
mov
xchg
xor
cwtl
add
sbb
shll
andl
lods
fsubrs
addl
sub
mov
xchg
xchg
insb
or
loope
xchg
push
nop
loop
std
imul
or
ret
addr16
pushf
fwait
cwtl
mov
push
adcb
mov
cmp
jg
jle
cmp
jnp
mov
mov
ret
lret
cwtl
mov
jl
inc
add
mov
sbb
sub
popa
int3
inc
cmp
lock
mov
xchg
aad
neg
mov
xor
aas
movsl
fxch
cli
out
jno
cmpsl
dec
inc
clc
sbb
aam
dec
dec
or
push
push
push
cltd
push
icebp
push
add
mov
and
andl
iret
imul
inc
pop
ret
ss
adc
add
fwait
rclb
mov
cmp
xor
xor
jno
pushw
popf
push
dec
or
ret
ret
aam
es
pusha
mov
pusha
loopne
xchg
adc
or
inc
scas
loope
mov
ja
inc
into
int
lret
mov
fmul
movq
push
ss
xchg
add
dec
fs
lahf
hlt
add
xchg
cltd
pop
push
clc
test
jo
mov
jae
inc
icebp
xchg
jo
adc
aam
push
or
stc
xchg
int3
cmpsl
adc
out
sub
out
aad
mov
rcl
add
fnstsw
lock
adc
mov
incb
dec
dec
inc
dec
je
pop
jecxz
mov
and
mov
or
push
pop
aad
outsb
insl
jmp
xchg
jbe
fnstenv
xchg
cmp
mov
mov
arpl
sub
add
mov
sbb
or
pop
js
xor
addl
pop
sub
mov
add
addr16
mov
and
mov
xchg
int3
lret
pop
dec
movsb
push
xor
movsb
ficompl
loopne
mov
stos
stos
stos
lcall
mov
mov
mov
fstl
push
xchg
xor
xlat
mov
cmpsl
lcall
popa
add
fxch
inc
out
pusha
fdivl
stos
idivl
fwait
notb
adc
fldpi
push
inc
aas
jecxz
clc
mov
insl
mov
clc
dec
and
fistps
and
mov
fwait
mov
push
push
add
out
inc
mov
inc
push
imul
push
popa
push
daa
push
call
fildll
sub
sub
cmp
cmp
pop
pushf
stc
push
hlt
repz
dec
xor
mov
push
jo
dec
scas
addl
stos
test
xchg
nop
mov
jns
jg
enter
xchg
dec
jno
sbb
push
lea
mov
xlat
aad
add
pusha
popf
lods
add
mov
mov
in
sahf
insl
stos
scas
cltd
cwtl
sub
testb
shlb
std
leave
xchg
pop
sub
loop
loopne
mov
orb
lock
insl
inc
inc
fcmove
loope
sbb
daa
stos
mov
xor
in
loopne
ljmp
lock
pop
cmp
dec
push
mov
mov
add
orl
fwait
jge
mov
inc
and
xchg
pusha
pop
pop
orl
add
cmp
cmp
jne
xchg
cmovo
ds
push
aaa
lods
xchg
sub
push
fs
jo
inc
sbb
sahf
popf
inc
sbb
gs
stos
aam
insl
outsl
pop
push
je
lods
lods
mov
addr16
mov
mov
dec
xchg
jg
adc
int
xchg
xor
popl
fcmovnb
ds
insb
xchg
test
shl
scas
test
test
sbb
adc
mov
in
ret
jb
jmp
mov
mov
std
stos
lcall
pop
fsub
call
lods
inc
test
push
addr16
ss
std
or
stos
addl
femms
or
cmp
adc
sub
cmpb
mov
jbe
sub
sub
and
push
push
cs
imul
sub
pop
aas
jbe
pop
cmp
add
mov
outsl
cmpsb
dec
pop
push
mov
les
pop
pop
push
ja
lods
stos
stos
dec
dec
or
jb
mov
mov
sarl
enter
inc
lret
fcoml
arpl
in
mov
sbbl
mov
cmpsl
imul
shlb
inc
test
roll
mov
or
popf
aas
loopne
pusha
jl
stc
push
std
jg
cli
push
sub
fistpll
and
xor
sub
aaa
pusha
adc
call
stc
sti
cli
ljmp
lret
femms
push
inc
lahf
not
sbb
fbstp
sti
ficompl
push
mov
inc
add
dec
pusha
inc
jo,pn
dec
pop
idivb
push
cltd
sbb
imul
outsl
jne
xor
movsb
cltd
outsl
pop
or
mov
je
xchg
imul
pop
popf
xor
fs
cmpsl
pushf
ljmp
stos
pop
test
pop
inc
fsubr
jle
push
sbbl
nop
mov
rol
fwait
push
cwtl
mov
sub
aad
add
pusha
popf
lods
add
movsl
cmpsl
aad
mov
mov
sti
jecxz
ret
sub
jnp
mov
icebp
push
std
aam
rsm
ss
popa
insl
and
mov
pushw
or
sbb
mov
test
sbb
and
mov
jg
repz
xor
call
cmc
jmp
mov
out
or
aas
lea
shlb
add
and
dec
and
pop
lock
push
adc
sbb
sub
mov
imul
inc
or
mov
pop
enter
shrl
in
movsb
icebp
popa
es
cmp
mov
mov
dec
push
into
ljmp
push
mov
loopne
xchg
xor
cwtl
adc
sbb
push
inc
pop
inc
dec
fsts
push
ret
in
sub
adc
test
in
insl
jge
jl
orl
pop
loop
mov
addr16
pop
cwtl
mov
lret
pop
popf
sbb
in
movsb
lods
movsl
movsl
les
add
sbbb
mov
lahf
test
adc
mov
rolb
jp
iret
dec
nopl
mov
jbe
mov
popf
repz
pop
jns
mov
inc
in
mov
pop
out
fs
xor
xor
fmull
cmp
push
lea
int
mov
dec
pop
adc
sbb
push
xchg
push
insb
rcrb
mov
pop
sarb
inc
or
or
pop
into
dec
adc
fldt
lea
cmp
xor
fildl
out
xchg
or
out
mov
pusha
dec
and
imul
sti
cmpsl
cmpsb
jle
sub
loop
mov
inc
scas
addr16
adcl
cmp
push
mov
cli
daa
jecxz
in
xor
js
mov
out
xor
lcall
out
imul
stos
cmpsl
cltd
mov
jl
rolb
cmp
mov
mov
add
enter
dec
xchg
xlat
mov
mov
mov
fmul
sbb
pop
sub
ja
add
inc
in
andb
dec
xor
incb
jmp
add
out
mov
xchg
dec
dec
lret
dec
insl
repnz
pop
cmp
jno
aam
pop
jo
sub
adc
inc
xor
pop
leave
int
insl
daa
dec
jg
xor
inc
sbb
jle
mov
jecxz
xor
nop
xor
dec
dec
dec
push
push
mov
mov
dec
cmp
lods
popa
aaa
data16
cmpsb
mov
mov
xchg
jbe
mov
or
mov
mov
mulb
add
lock
mov
cmpsb
lcall
scas
ret
adc
aam
lds
adc
add
inc
adcl
call
stos
mov
and
xchg
or
mov
call
jae
mov
fldt
fld1
fmul
xor
lock
std
jmp
ljmp
add
popa
imul
or
and
pop
pushf
or
iret
bound
icebp
xor
or
push
push
decb
or
rcrl
xchg
dec
nop
push
pop
in
xorb
adc
insb
imul
mov
add
sub
popf
mov
and
add
cmp
imul
mov
pop
pusha
inc
mov
pop
sti
pushf
fwait
ja
pop
data16
jo
test
and
js
imul
xchg
sbbb
out
mov
cmp
push
nop
loop
mov
into
int
xchg
push
aaa
fcom
imul
jno
lea
call
ret
sub
out
push
jmp
push
clc
in
outsl
push
add
fbld
lods
call
andl
cld
outsb
femms
shr
jo
dec
sbb
out
iret
sub
sbb
cmpsl
add
sub
out
insb
cwtl
pop
dec
stos
in
sub
or
dec
mov
jae,pt
cltd
cmp
adc
arpl
push
in
les
repz
xor
mov
pop
sub
into
push
pop
fldt
mov
mov
push
push
xor
sbb
cmp
cmp
cmp
pop
dec
push
dec
aas
cmpb
pusha
pop
inc
lea
add
add
jo
outsl
imul
pop
repnz
test
add
rcl
in
push
jns
js
fldenv
js
inc
iret
into
lcall
mov
lock
xor
mov
mov
jo
adc
dec
rol
aam
out
shlb
add
sbb
or
aad
cld
rcrb
xor
aad
push
hlt
jecxz
add
into
insb
int
sub
out
stos
and
sbb
push
out
and
out
imulb
lret
popa
push
dec
inc
inc
sbb
add
dec
imul
sbb
cmpsb
loop
imul
pop
addb
jge
imul
push
xchg
je
cmp
leave
mov
sti
dec
dec
dec
dec
pop
cmp
lcall
cmc
mov
call
movsl
pop
push
stos
xchg
aam
inc
add
cmpb
js
or
mov
jnp
addr16
inc
into
int
xchg
pop
xor
xlat
ret
fidivl
xor
fstl
out
pop
inc
outsl
scas
add
add
dec
mov
mov
sahf
jp
faddp
shrb
sub
loope
mov
ss
fcom
mov
lret
out
jecxz
addb
in
int
push
orb
or
xchg
inc
test
adc
enter
cld
in
add
dec
clc
pushf
and
mov
scas
dec
dec
add
pop
aas
repnz
sbb
push
loop
jne
inc
inc
inc
mov
mov
xchg
pop
push
xor
out
inc
mov
jl
push
pop
popa
in
mov
lret
in
cwtl
xchg
arpl
jle
cmp
or
test
stc
and
fistpll
js
mov
gs
mov
loop
fstpl
xchg
in
in
andl
jmp
call
js
or
lods
mov
mov
popf
pop
push
adc
xchg
adc
lret
inc
jecxz
arpl
shrb
fisttpl
aad
addl
inc
pop
xchg
sbb
dec
sub
loop
pop
mov
fimull
hlt
pop
xor
mov
jmp
dec
cmpsl
inc
fs
subl
daa
and
adc
pop
push
fistl
jb
cs
mov
push
addr16
mov
outsl
jecxz
outsl
cmp
es
dec
xchg
les
cmp
inc
ja
mov
fldenv
out
pop
push
aad
cwtl
jb
add
xor
fwait
lcall
lock
shlb
addb
addl
jns
xchg
mov
mov
iret
cmpsl
jp
xchg
fldt
fcom
ret
mov
loopne
add
push
test
fwait
mov
les
mov
les
adc
imull
mov
scas
sub
and
xchg
jle
mov
fidivl
iret
in
xor
fucomi
inc
cmp
out
lret
xchg
cs
jmp
js
das
cltd
rcll
add
xchg
or
cmp
adc
adc
stc
push
inc
aas
ljmp
push
push
out
imul
sbb
lds
movsl
sti
int3
add
cmp
inc
subl
jmp
insl
andb
xor
lret
xchg
xchg
add
pop
arpl
fisubl
cmc
mov
pop
push
mov
in
xor
stos
add
shll
mov
nop
outsb
push
adc
out
jns
js
dec
push
mov
mov
mov
pop
cmp
pop
in
pusha
popf
xchg
add
fwait
movsl
cmpsl
and
adc
sti
nop
test
popf
mov
adc
xchg
jle
mov
outsb
std
adc
xor
add
je
sbb
loopne
sbb
in
stos
mov
in
sub
jmp
pushf
sub
out
pushf
cmp
add
in
dec
dec
sbb
jp
dec
inc
xor
and
out
jbe
sbb
and
push
sub
cs
mov
xlat
js
bound
mov
dec
sub
call
pop
mov
mov
xor
jmp
push
push
mov
punpcklbw
sti
enter
cmpsb
addr16
movl
scas
lods
mov
xchg
xchg
adc
sbb
iret
fistpl
movsb
mov
cs
into
lcall
mov
xor
adc
mov
xor
jmp
bound
adc
mov
inc
pop
xchg
shlb
mov
movzwl
jecxz
insl
and
mov
insl
push
or
insb
je
xlat
add
enter
push
ljmp
add
inc
lock
or
and
adc
mov
cmc
or
fstpl
and
sbb
mov
cld
inc
push
ds
inc
and
add
push
cmp
roll
or
xorl
aaa
daa
push
or
jne
cs
xchg
cmp
enter
cs
test
dec
dec
dec
push
xchg
xchg
xorl
fisubrl
push
cmpsb
movsl
xchg
pop
ret
dec
cmp
pop
push
shll
add
mov
lea
leave
call
mov
andl
scas
ret
xchg
in
mov
xchg
pushf
mov
mov
pushf
ds
adc
xchg
adc
stos
and
mov
jp
lret
lret
mov
mov
out
mov
sbb
cmpsl
fxch
adc
cmc
aad
loop
inc
sub
int
jmp
loopne
daa
lret
add
icebp
cmp
out
cli
stc
or
sub
and
push
sbb
call
pop
add
pop
inc
in
cmp
cmp
popa
out
sub
inc
push
js
sub
and
ja
mov
cmp
popf
dec
xchg
icebp
hlt
push
sub
add
mov
or
aas
add
mov
ret
xchg
add
push
mov
repz
and
shll
stos
test
push
jle
mov
pop
and
fsubrs
nop
jno
int3
or
ffree
leave
fcom
clc
xor
add
popf
pushf
fwait
and
cmpsl
cmpsb
insl
in
sti
test
xor
movsl
mov
aam
pop
and
test
pop
dec
leave
adc
pop
jb
test
fisttpl
stc
hlt
xor
mov
jmp
loop
mov
sub
cld
push
test
out
push
dec
div
xchg
mov
mov
fstpl
adc
fld
bound
dec
inc
jle
popa
cmp
popf
aam
icebp
sub
sub
or
sbb
push
mov
inc
xchg
cmp
mov
in
lahf
aas
ss
in
lea
repz
jo
inc
xor
fwait
or
popf
xchg
add
jo
xchg
inc
ss
jp
es
jne
push
lret
push
cld
jns
jp
andl
dec
in
mov
cmp
lret
pop
adc
xor
ret
sub
test
out
shrb
pop
jo
popf
xor
dec
jmp
dec
rol
ds
mov
enter
sbb
mov
sbb
cmpsb
movsb
outsl
or
sbb
add
cli
mov
jg
sbb
sbb
xor
lock
daa
cmp
cmc
mov
movl
loopne
cmp
mov
sub
pop
sti
adc
mov
pop
popf
mov
or
adc
cmp
test
scas
in
sub
mov
int3
push
inc
and
xchg
xchg
push
js
loop
cli
inc
push
push
mov
ljmp
mov
pushf
mov
icebp
pusha
hlt
outsb
dec
inc
push
sti
pushf
fwait
ja
jle
cmpsb
fwait
xchg
lock
pop
push
testl
popf
or
xchg
add
jb
outsb
gs
push
mov
pop
inc
ljmp
adc
lock
xor
popf
pushf
sbb
mov
rcl
clc
adc
lods
mov
lcall
cmc
lret
testl
sarl
pop
adc
sub
shl
xchg
das
fidivl
xchg
aad
fwait
sub
mov
push
sbb
jp
add
xor
ret
mov
call
fstpt
push
push
or
or
imul
fadd
inc
and
ret
mov
mov
push
xor
cmp
pop
sub
adc
addr16
test
xor
sub
sti
jp
inc
aas
xchg
jbe
sbb
cmp
xor
xchg
mov
dec
push
xchg
cltd
lods
notl
mov
push
mov
cmpb
dec
lods
stos
insb
imul
pop
aam
mov
ja
pop
inc
test
push
shl
dec
mov
xor
adc
dec
fld1
shl
sbb
adc
out
mov
test
adc
repnz
jl
fmuls
push
in
popa
insl
and
mov
insl
push
or
xorl
loope
mov
pop
push
ljmp
add
and
fistpll
xchg
cmp
adc
paddsw
mov
jmp
shlb
int3
and
and
or
sbb
das
test
fstpl
add
insb
and
es
pop
or
ljmp
stc
cld
push
sahf
push
inc
xor
jno
jle
aaa
pop
arpl
in
aam
outsl
rcrl
push
push
jg,pt
push
push
in
leave
dec
outsl
insl
mov
push
xchg
repz
and
shll
mov
xchg
addl
xor
mov
mov
loopne
in
dec
push
xchg
mull
mov
ret
rcll
fcmovu
push
movsb
jo
in
cmpsb
repz
lcall
arpl
mov
clc
cmp
cs
sarl
lret
pop
lret
xchg
mov
xlat
in
push
out
aad
bound
aam
imul
clc
sub
and
mov
push
sbb
jl
inc
lret
pusha
add
cmp
cmpsb
pop
push
xor
xchg
mov
pop
push
pop
pop
icebp
mov
cmp
mov
pop
xchg
cmp
sub
sub
pop
rolb
cli
dec
dec
jg
cld
pop
inc
pop
adc
imul
test
sub
pop
icebp
pusha
xor
insb
dec
arpl
jge
movsl
jp
aaa
cmpsb
in
imul
in
and
xchg
adc
mov
push
jne
shlb
test
inc
ror
fwait
cltd
int3
loope
push
hlt
xor
mov
loopne
stos
add
push
pop
xor
cmpsl
cltd
mov
xor
adc
push
jnp
std
adc
adc
and
mov
or
push
lods
pop
jae
adc
jae
cmc
and
lret
jp
daa
es
push
add
icebp
das
and
push
xlat
pusha
div
xchg
lahf
cs
les
dec
faddl
push
add
cli
fcom
sti
mov
notl
push
push
fpatan
pop
push
sbb
roll
or
out
inc
xor
sub
fmuls
imul
sub
fstpt
or
cmpsb
and
xchg
or
dec
dec
dec
mov
adc
add
inc
mov
popf
pushf
fwait
sbb
push
dec
mov
ret
ret
inc
xchg
adc
xchg
adc
and
pusha
enter
sub
jbe
lea
mov
loop
pop
cli
stos
mov
test
inc
out
and
fs
jecxz
jmp
xchg
shl
ret
repnz
mov
or
dec
imul
dec
add
enter
push
adc
into
lds
sbb
mov
cmp
dec
in
in
push
and
aaa
and
adc
push
inc
aas
mov
popa
push
dec
push
add
cmp
out
lret
adc
dec
dec
and
fistps
popf
mov
push
mov
and
push
add
jne,pt
xchg
sub
lea
sub
dec
jb
inc
sub
jg
jge
rclb
insb
xchg
imul
rcll
jae
mov
jnp
mov
cmp
or
addb
push
jne
jecxz
lcall
jp
pop
inc
ljmp
jp
xor
mov
mov
aaa
jae
scas
loopne
lcall
push
movsb
jo
xchg
leave
divl
into
mov
sub
rcl
sarb
sbb
xlat
xchg
out
or
test
out
cmp
xlat
xor
adc
popf
jecxz
sub
flds
add
lods
in
test
mov
adc
cmp
incb
dec
flds
and
jp
out
ja
and
or
sbb
cmp
mov
push
xchg
and
cmp
sub
popf
add
pop
gs
dec
lds
sub
sub
js
xchg
rolb
inc
pop
or
cmp
nop
pushw
repz
mov
inc
dec
push
dec
pop
add
cmp
pusha
cmpsl
pop
pop
pop
pop
ds
or
popa
jge
insl
aam
cmpsl
imul
xchg
cmp
and
fstps
movsb
popa
ja
loop
dec
lea
jg
fsubs
iret
xor
fwait
lcall
add
jg
scas
lods
sub
lcall
jp
sbb
mov
mov
std
inc
bound
pop
mov
leave
fcom
or
cmp
push
call
fcmovnu
fcmovu
push
mov
or
test
das
and
sub
ret
jbe
adc
sbb
mov
ret
xorl
cmp
push
rorl
xor
add
repnz
add
out
fidivrl
push
imul
xlat
outsb
mov
dec
aad
inc
sbb
xchg
xchg
adcb
sub
jns
xchg
test
insb
in
nop
xor
dec
dec
pop
adc
xor
outsb
movsl
adc
popf
pushf
fwait
orb
je
addb
addr16
ss
adc
jg
mov
cmp
js
lods
sbb
negl
mov
shrb
xlat
pop
xor
lahf
sahf
lods
add
int3
cltd
test
in
mov
fmuls
in
jmp
lds
adc
add
btr
in
popa
insl
cld
shlb
and
sbb
push
jmp
sub
sbb
fsub
fbstp
jb
roll
fcoms
inc
out
jmp
or
add
inc
pop
add
jmp
lock
push
icebp
push
add
into
stos
aaa
dec
push
or
push
stos
fdivs
adc
sbb
fs
pop
dec
ret
add
cmpsl
lods
in
jle
gs
fwait
sub
cmp
out
push
inc
ss
repnz
mov
dec
leave
add
repz
fistpl
pop
out
cltd
mov
jo
stc
out
imul
lahf
and
shll
pop
pop
mov
insl
pop
mov
test
scas
or
pop
lahf
scas
mov
outsl
push
stc
retw
shr
out
jmp
repnz
jmp
std
je
cmc
adc
pop
ljmp
mov
aad
fsubl
stc
sti
dec
mov
dec
orb
mov
into
out
es
fcmovnu
ret
dec
fmuls
lea
sub
and
out
fcmovnu
fdivl
cmp
adc
mov
mov
test
dec
pushl
push
mov
mov
pop
popf
arpl
push
mov
or
loope
pop
pop
xor
pop
repz
in
sub
loop
jnp
lea
jbe
pop
fdivrs
cmp
jnp
fwait
pop
fcompl
jns
and
pop
cmp
clc
mov
pusha
outsl
cmpsb
dec
cmpsb
pop
pop
dec
popa
sysret
test
xchg
stos
sarb
ret
sbb
notb
mov
cmp
xor
iret
pop
loope
mov
jp
dec
mov
fnstenv
lahf
pop
in
stos
mov
out
push
imul
mov
icebp
and
fwait
rcll
adc
push
mov
loope
and
fisttpll
add
or
sti
push
xor
mov
inc
faddl
fldenv
mov
jb
gs
shr
push
outsb
push
dec
stos
testl
adc
xorb
cli
stc
getsec
dec
fisttpll
and
adc
lods
dec
dec
fidivs
adc
wrmsr
addr16
sbb
or
sub
or
addb
lods
mov
xor
inc
aas
mov
cmp
jp
pcmpgtb
mov
dec
dec
bound
dec
out
mov
xor
mov
jnp
push
sub
cmpsb
cwtl
dec
aaa
imul
jg
outsb
movsl
stos
js
mov
mov
loope
hlt
notl
into
jl
pop
xor
fiadds
mov
popa
cmp
adc
in
xchg
or
js
in
mov
scas
cmpsb
adc
std
cld
nop
xchg
add
pop
iret
into
aam
dec
jbe
shll
je
sbb
inc
stos
or
sub
adc
jns
push
mov
in
test
dec
iret
sbb
and
or
mov
cmp
push
adc
and
mov
or
pop
push
outsl
push
sub
or
in
fldenv
in
inc
and
aaa
pusha
sub
adc
sbb
jp
ja
jne
in
aas
ds
pop
jp
test
mov
mov
xchg
push
cmp
mov
in
pop
hlt
out
addb
cmpsb
subb
out
aaa
and
cltd
pop
pop
xchg
mov
sbb
dec
jge
jnp
jns
xchg
movsb
mov
outsl
xchg
daa
into
int
pop
lret
push
repnz
test
fcmovu
pop
addr16
mov
scas
lods
jbe
in
add
mov
in
sahf
xchg
jg
adc
stos
jmp
jae
ljmp
lret
scas
out
mov
out
iret
call
mov
sub
out
push
xlat
ljmp
ss
inc
aas
lds
out
fwait
push
push
lea
cmpsl
arpl
ss
sti
adc
inc
pop
mov
cmpsb
sbb
daa
pop
push
xor
cs
cmp
lcall
jle
mov
xchg
sub
add
mov
push
mov
xor
daa
popa
cmpsl
xchg
enter
xchg
jmp
and
jle
rcl
jnp
jl
iret
xchg
test
mov
dec
jne
cmpsb
iret
xchg
and
repnz
push
jno
mov
ret
push
call
mov
jae
lods
stos
xor
pop
icebp
xor
mov
mov
enter
movsl
iret
pop
and
sub
int
and
fcom
shll
into
push
adc
movsb
add
in
nop
inc
xor
push
fwait
inc
clc
divl
pop
clc
or
popf
ds
add
adc
sbb
dec
fs
pop
pop
inc
in
fnsave
xor
push
aad
ficompl
or
ss
or
aas
not
pop
in
sub
xchg
es
fdivrl
pop
pop
mov
mov
dec
dec
dec
mov
mov
insl
lahf
xor
sbb
addr16
mov
repz
insb
adc
mov
push
inc
xchg
sub
pop
orb
aam
stos
mov
test
mov
jecxz
jg
cwtl
inc
int
repnz
loope
call
nop
jecxz
mov
pop
inc
out
imul
stos
ss
push
mov
aam
fwait
mov
xchg
mov
outsl
ss
dec
test
call
add
hlt
push
out
cmp
cmp
push
push
adc
int
dec
addb
loopne
jmp
inc
and
sbbb
sub
orl
mov
cltd
inc
fs
xor
or
dec
dec
dec
out
sbb
push
hlt
push
and
pop
pusha
mov
add
sbb
inc
jb
jmp
jmp
notl
sub
inc
jb
mov
add
popa
push
pop
push
jle
dec
inc
mov
pop
push
xchg
repz
sub
sbb
mov
mov
ret
jl
sub
adcl
out
dec
aas
scas
aas
jl
cltd
mov
adc
shlb
jns
push
rorl
add
xor
ficomps
andl
jbe
outsl
scas
add
xchg
arpl
imul
rclb
xchg
call
pop
push
mov
mov
lea
adc
mov
cmp
add
inc
inc
xor
insl
stos
jmp
inc
dec
cmp
mov
push
inc
xchg
mov
sti
push
add
jecxz
push
inc
gs
and
insl
pop
add
jne
es
sbb
test
aas
iret
mov
shr
sub
pop
jmp
mov
cmp
jle
inc
push
jns
mov
js
or
das
lret
adc
pop
pusha
pop
pop
and
fwait
mov
dec
stc
movl
push
inc
inc
lcall
pop
ret
jbe
xchg
or
enter
mov
jns
adc
dec
mov
add
xor
ficomps
andl
scas
add
xchg
xlat
fisubrs
ret
ja
rclb
xchg
add
mov
or
test
pop
push
mov
adc
into
enter
cwtl
fmuls
sub
cli
mov
cmp
add
cmc
inc
xor
mov
jmp
cmc
dec
cmp
rcll
push
xor
mov
dec
dec
enter
jne
push
push
lret
or
jne
push
das
jg
jl
xor
pop
sbb
dec
fldenv
and
ljmp
jae
clc
cmp
std
rcrb
push
sub
repz
cmp
adc
insl
pop
fs
mov
push
push
xchg
inc
push
mov
insb
cld
rcrl
xchg
pushf
mov
cmpl
loopne
mov
push
push
xchg
xor
in
cli
dec
mov
mov
xchg
inc
add
fistl
pop
jno
icebp
sahf
cwtl
fisttps
orb
pop
cmpsb
mov
mov
sbb
int3
jb
test
xchg
shl
das
mov
in
mov
xchg
or
out
mov
mov
test
xchg
jb
jmp
pop
sbb
pop
les
sub
lods
mov
and
dec
push
xor
icebp
cmp
mov
pop
fs
bndldx
dec
inc
xchg
roll
pop
mov
pop
out
arpl
sbb
in
sbb
in
sub
test
cmp
clc
xor
aas
xchg
stos
xor
pop
inc
gs
aam
and
aam
xchg
outsb
mov
push
pop
pop
pop
pop
pop
inc
pushf
mov
gs
cmpsb
loopne
je
xor
mov
add
pushf
push
subb
xor
jp
testb
inc
mov
dec
iret
stc
repnz
rol
push
pusha
mov
lds
mov
add
pop
js
fsubrs
cmpsb
leave
test
inc
jnp
fistl
jle
mov
adc
mov
mov
out
or
out
mov
adc
fdiv
out
sbb
cltd
les
es
inc
inc
lods
in
pop
es
sub
test
push
push
jae
mov
inc
and
insl
stos
mov
or
lret
pop
mov
xor
adcl
mov
fcoms
push
ss
adc
xchg
mov
jae
loopne
inc
sbb
adc
dec
dec
mov
push
push
xchg
fwait
adc
and
xrelease
in
andl
insb
mov
clc
ss
add
jle
push
jg
pushf
call
cmc
dec
shrl
xor
mov
or
cld
rcrl
rorb
mov
lahf
jno
test
add
push
ja
jb
stos
movsl
fdiv
int
mov
inc
pop
adc
xchg
jge
fistpl
jge
enter
add
fisttpl
cwtl
fadds
sub
adc
jmp
push
sbb
adc
cmp
sti
mov
pop
push
clc
and
dec
xor
or
cmp
sub
jl
int
mov
lcall
mov
inc
mov
addr16
fldt
pop
lahf
or
jp
xchg
or
xor
ljmp
data16
sub
stc
cmp
push
sbb
bound
outsl
into
or
mov
mov
jl
push
dec
xchg
mov
jnp
sbb
test
jp
add
aaa
xor
imul
sub
pop
movsl
push
jle
fwait
dec
cmp
dec
test
mov
dec
mov
pop
pusha
inc
mov
mov
pop
sahf
loopne
addl
pop
inc
add
jno
stos
xlat
push
imul
fcmovb
cmp
jmp
mov
dec
mov
or
lahf
xchg
cli
xchg
jae
add
ret
cltd
out
and
mov
inc
pop
mov
and
rcll
xor
mov
mov
lret
ret
psubw
mov
or
fimuls
aad
or
jg
fcompl
cwtl
add
pop
shr
sbbl
notb
xchg
scas
pop
jb
cmp
inc
xchg
or
js
dec
dec
imul
sbb
dec
jle
fstpl
pop
popf
xlat
xor
daa
test
push
lock
mov
push
out
sub
xor
ss
xchg
shr
inc
and
cmpsl
cmpsl
cmp
add
mov
lea
xchg
leave
and
repz
pop
lcall
ret
popf
sarb
lods
out
sbb
mov
stos
jne
rclb
mov
xlat
jge
enter
mov
int3
into
int
or
dec
xchg
xlat
sbb
cmp
and
mov
jge
out
cmp
scas
out
push
leave
cmp
cmp
mov
std
icebp
cmp
mov
jge
and
gs
inc
lret
or
mov
hlt
lret
pop
cmp
jge
ret
inc
jne
popf
das
cs
divl
jns
mov
xorb
sti
cmp
inc
cltd
movsb
out
cmovg
sub
cwtl
out
sbb
pop
pop
pop
rcrl
jp
les
sbb
lods
lret
ja
cmp
aam
adc
jg
fidivl
idivb
xchg
jp
in
and
lcall
xchg
ret
je
mov
lahf
stos
pop
adc
push
cmpsl
sar
stc
add
test
mov
insb
ja
loop
or
push
jg
lret
cld
cmp
xchg
jb
sbb
movsb
iret
ficompl
inc
or
and
or
cld
rcrl
pushf
faddl
out
add
add
das
test
dec
mov
jno
adc
adc
es
shrb
cs
and
inc
loope
into
push
push
jp
adcb
and
jno
repz
out
fstpl
mov
jecxz
add
data16
sub
divl
imul
inc
sub
cli
cmp
mov
arpl
dec
mov
push
push
xchg
adc
and
repz
sub
movsl
fistpll
fisttps
movsl
sub
jbe
add
rcll
jle,pt
in
aaa
cmp
add
in
push
ret
dec
mov
pop
repz
pusha
pop
fwait
mov
std
call
mov
add
in
push
insb
ja
loop
or
xchg
jg
lret
cld
idivb
jb
sbb
fldt
imul
dec
mov
xlat
leave
fcom
sub
lock
out
cmpsb
mov
popf
ficompl
cmpsb
roll
xor
leave
mov
adc
pushf
pop
fistpll
cld
or
stc
or
inc
mov
loop
leave
clc
sub
or
outsl
scas
inc
jbe
sub
mov
inc
fldt
mov
or
sahf
mull
pop
out
sub
xor
sub
std
cmp
dec
repz
test
loop
push
pop
fwait
les
mov
add
sbb
fldenv
andl
sub
in
and
btr
xchg
xchg
xchg
cmp
jge
mov
dec
test
cmpsl
dec
loope
hlt
sub
and
addr16
pop
fwait
xchg
enter
movsl
out
push
into
subl
jge
jno
shrl
mov
add
in
add
cmp
pop
testl
dec
cmpsb
jns
popf
fidivl
cld
les
pusha
test
out
mov
mov
sub
add
sbb
cmp
pop
inc
cltd
sbb
and
xchg
int
sub
outsl
dec
movsb
sub
ja
dec
jb
sbb
cmp
in
inc
lock
dec
nop
cmc
xor
and
cmp
fcomps
inc
pusha
lock
mov
push
xlat
adc
mov
lahf
xor
cmp
inc
orb
out
sub
js
imul
mov
addr16
aad
cwtl
mov
xchg
scas
popa
mov
cwtl
lret
aad
push
pusha
mov
fwait
mov
jmp
mov
fcmovu
imul
repnz
dec
push
xchg
sarb
add
jl
sti
inc
lods
pop
sbb
leave
cwtl
daa
in
int3
or
xchg
je
adc
pusha
sahf
fisubs
dec
inc
sbb
push
add
cld
cmp
sub
es
pusha
sub
push
aad
adc
test
sti
xchg
or
add
loop
popa
xchg
ret
xorl
repz
out
inc
fstpl
mov
ret
cmpsb
add
data16
sub
divl
imul
inc
sub
mov
pushf
xchg
in
bound
and
mov
adc
xor
sbb
test
xor
popa
sub
sub
jno
adc
xchg
xchg
addb
jnp,pt
adc
fstpl
mov
test
stc
repnz
rorl
nop
shll
pusha
mov
dec
pop
push
add
incb
out
call
loopne
xchg
mov
out
aas
add
daa
or
enter
mov
dec
mov
inc
and
mov
into
adc
lahf
stc
push
push
stos
fimull
ret
or
imul
sbb
aas
sarl
xor
add
iret
punpcklwd
mov
lret
sbb
xor
hlt
mov
dec
or
in
inc
and
sub
js
cmc
xor
rclb
cmp
add
inc
pusha
mov
xchg
aam
movsb
xchg
sub
mov
cld
mov
push
sahf
mov
andl
mov
jbe
mov
cmp
fwait
ja
dec
mov
inc
push
nop
scas
xor
out
scas
rcr
cli
aad
enter
mov
bound
inc
inc
add
mov
scas
rcrb
scas
cmc
scas
fwait
pop
aas
add
lret
ret
mov
hlt
sbb
mov
fimuls
stos
push
xor
in
jno
mov
movsl
mov
pushf
fprem
das
push
add
loopne
leave
out
movsb
xor
out
or
adc
xchg
cmp
repnz
cmp
or
mov
or
sbb
fcoms
and
or
add
mov
push
addr16
imul
fbstp
xchg
mov
mov
cmp
jp
or
pusha
xchg
push
dec
dec
dec
cmp
in
cwtl
xchg
dec
xorb
movsl
ja
popf
pushf
out
push
mov
jo
xchg
mov
out
cmp
pop
jne
mov
cmp
jge
jecxz
adc
mov
sahf
pushf
iret
les
jno
fdivs
pop
push
pop
pushf
mov
fcoml
sbb
test
xor
roll
jne
jno
test
aam
mov
cltd
mov
lret
loopne
or
dec
imul
stos
dec
cwtl
fadds
ficompl
sub
rol
fstl
or
push
lock
aad
nop
sub
add
and
or
cmp
push
inc
jnp
lcall
pop
push
fs
repz
or
adc
scas
dec
dec
fnsave
je
xor
cwtl
sbb
sbb
and
mov
inc
orl
mov
insl
insb
mov
mov
dec
bound
dec
cmp
inc
fiaddl
adc
xor
in
push
fs
cmp
dec
outsb
insb
lahf
xchg
loop
pop
mov
and
mov
xchg
loope
notb
pop
xchg
push
rcl
inc
mov
cmp
cwtl
iret
ljmp
popl
xchg
fstl
cmp
adc
fwait
daa
push
std
comiss
mov
in
xchg
test
js
in
sub
sarb
cld
sti
rcl
je
fsubrl
or
and
adc
push
inc
aas
repz
out
out
sub
pushf
fmul
jecxz
jle
sbb
add
push
in
jmp
fidivl
mov
aaa
out
and
push
sbb
ja
cmp
pop
pop
repz
rclb
sbb
fcomps
or
adc
aam
loopne
sub
lret
daa
mov
or
sbb
cmp
xor
rcr
jb
mov
cld
cmp
dec
jl
jnp
and
push
sub
mov
or
push
repz
bound
pop
adc
lahf
push
push
fwait
or
pop
mov
out
or
loop
or
cmp
jp
int
incl
jo
jge
mov
dec
test
ljmp
mov
int3
lret
mov
cli
fincstp
add
sbb
mov
imul
subb
test
test
test
repz
mov
xlat
cli
fildll
and
stc
mov
or
sbb
aad
je
mov
test
add
fnstsw
cmp
mov
in
cmp
jg
sub
outsl
enter
or
nop
into
push
adc
psubusb
jae
push
or
sub
out
dec
push
addr16
inc
shr
adc
jl
mov
xor
cli
dec
dec
jg
cld
pop
inc
xchg
cs
push
dec
dec
cmp
mov
push
shl
subl
pop
fdivr
push
sub
pop
movsl
jp
mov
imul
xchg
jbe
movsb
cmp
push
jg
data16
into
sub
mov
loope
sbb
frstor
inc
xor
xchg
scas
data16
pop
lcall
xor
jmp
sub
lcall
shl
or
cmp
shll
or
jae
and
adc
int3
dec
orb
sahf
xorl
mov
sub
cltd
out
int
mov
xor
ja
inc
out
repz
push
push
mov
jg
or
push
imul
subl
inc
aas
mov
sbb
and
addr16
call
rcrl
out
and
aas
andb
ljmp
adc
ds
inc
lea
mov
inc
mov
mov
popa
or
xchg
inc
mov
dec
dec
movsb
into
hlt
js
and
addr16
jo
mov
call
adc
movsl
fstps
push
movsl
sbb
mov
sub
push
es
mov
hlt
jmp
xlat
pop
cltd
mov
sahf
lods
add
mov
test
iret
popa
aam
mov
lods
in
mov
ljmp
adc
into
add
inc
cmp
in
outsl
mov
cwtl
mov
mov
push
xlat
lret
sti
clc
mov
mov
inc
push
repz
fmuls
mov
lock
dec
daa
mov
in
sub
and
out
and
fldenv
push
inc
aas
or
xchg
pop
push
imulb
xchg
or
xchg
jl
ds
and
mov
adc
push
pop
pop
pop
sub
xor
sub
lods
fdivrs
cmp
jmp
testb
aas
inc
test
jno
or
cwtl
jno
dec
dec
lret
lods
sbb
push
hlt
rep
cmp
fucomip
lret
pop
push
cmpsb
movsl
pop
cmp
outsb
insl
insb
jnp
sbb
pop
sbb
fs
jg
test
xor
into
lcall
stos
ret
out
mov
lcall
out
sar
icebp
sbb
xor
cld
clc
idivl
mov
mov
mov
scas
mov
call
inc
leave
fcoms
xchg
loop
sbb
out
into
lds
imulb
outsl
mov
fsubrl
sub
fdivl
push
in
inc
sahf
je
cmp
pop
scas
daa
push
out
arpl
or
dec
dec
and
and
jb
scas
icebp
pusha
and
mov
pop
pop
outsb
pop
pushf
inc
inc
pop
mov
sub
outsl
outsb
adc
dec
jg
lods
push
push
rcr
js
sub
sub
mov
xchg
mov
dec
dec
pop
xor
lds
sub
push
cltd
mov
dec
arpl
lcall
jo
pop
xchg
pushf
jnp
popf
add
test
ret
push
mov
aas
push
xchg
nop
push
sub
xchg
xchg
bound
lret
cli
xor
mov
fbld
test
testb
lods
stos
stos
cmp
sbb
ret
adc
dec
mov
adc
inc
movsb
in
pop
and
sub
or
fsubrs
add
mov
leave
ljmp
add
stos
mov
jmp
sub
sbb
adc
mov
or
cmp
cmc
push
add
mov
sub
or
loopne
and
mov
push
dec
fs
fstpl
lods
ss
push
or
sbb
stos
clc
cmp
movsb
sbb
ds
inc
imul
xchg
sarb
and
xchg
dec
dec
cmp
xor
pop
pop
insl
dec
fs
lcall
sub
pop
push
js
lods
lods
inc
stos
xorl
and
outsb
gs
inc
mov
movsb
mov
cmp
iret
fwait
jb
sbb
xor
mov
fiadds
mov
rcll
cs
and
ljmp
shrb
jns
inc
pop
stc
sbb
fidivrs
or
out
sbb
out
cmpsb
icebp
das
fcmovnu
lret
xor
daa
sub
stos
and
xlat
in
cs
cmc
and
sti
mov
push
sub
add
jl
popa
push
sbb
jnp
sbb
fsubp
mov
mov
stc
fwait
xchg
pusha
pop
add
fisubl
ss
mov
lret
sub
imul
sub
or
ret
dec
xor
and
loop
movsb
xor
addb
mov
cwtl
lea
push
pusha
fadd
push
pop
pop
pop
dec
xchg
iret
xor
dec
push
mov
scas
scas
notl
pusha
rol
sub
xor
int3
and
xchg
in
mov
jge
push
fstpt
fsubl
ficompl
dec
jnp
into
clc
movsl
ret
call
in
mov
cltd
faddl
adc
repz
jl
test
mov
test
add
int3
shlb
outsl
or
shll
or
sub
jmp
les
jp
push
lret
jae
in
jmp
rcr
div
cmc
mov
push
push
xor
stc
xchg
loop
adc
stc
cmc
lahf
movsl
dec
dec
add
dec
xor
pop
or
les
sbb
lock
out
push
gs
hlt
scas
in
sub
push
inc
daa
push
enter
cs
dec
xorb
or
push
mov
js
adc
mov
je
xchg
outsb
aam
push
inc
add
sahf
popf
push
js
cltd
sahf
mov
inc
push
popf
pop
scas
lods
clc
shlb
pushf
fnsave
in
jge
jnp
shlb
mov
adc
jge
jg
lds
fcompl
sub
jae
cmp
pushf
fwait
lcall
shlb
mov
lods
stos
stos
xchg
fwait
lods
popf
dec
add
push
dec
adc
cmp
mov
jno
outsb
jmp
int
into
int
push
and
cmc
ja
in
pushf
rolb
popa
in
loop
dec
call
inc
dec
cmp
shr
aam
pop
stos
clc
call
xor
std
or
pop
xchg
or
rolb
arpl
out
or
or
or
dec
inc
push
sub
jmp
and
pop
pop
xor
adcl
popf
sub
sub
cwtl
inc
shlb
inc
adc
cmpb
stc
pop
cmp
sub
aam
call
cmp
test
jbe
ja
fld
addr16
sub
insb
outsb
hlt
add
rep
insb
test
jge
jg
test
arpl
icebp
push
lea
popf
inc
mov
mov
popf
pushf
stos
fst
clc
mov
dec
pop
ret
ret
mov
std
cmp
aaa
rcl
iret
stos
push
fldl
mov
pusha
jae
sub
aam
loop
lret
pop
jmp
enter
cmp
jb
pop
lods
arpl
lock
or
or
sbb
in
inc
cmp
cmp
lods
inc
imul
sti
out
push
rcll
pop
or
fwait
aam
push
nop
cmpsb
mov
test
movsb
je
xchg
sub
mov
dec
ja
subl
xchg
jecxz
cmp
bound
rclb
imul
mov
fdivs
dec
fs
fwait
lcall
ret
mov
fbstp
ficompl
js
and
add
outsl
fwait
mov
mov
mov
ret
lret
ret
jp
mov
stos
add
cmpsl
cmpsb
movsl
cltd
loope
aad
out
add
jb
fs
add
xchg
fdivrl
push
mov
call
sub
sub
push
mov
mov
inc
shrl
divb
cld
dec
sub
out
in
das
and
fidivs
adc
call
das
ds
imul
bound
mov
pop
sti
cmp
test
jnp
sub
sub
sahf
or
mov
mov
sub
sub
pop
sbb
sbb
jl
jp
loopne,pt
cs
xchg
mov
pusha
scas
imul
pusha
clc
mov
adc
popa
mov
mov
into
iret
xorb
dec
fmul
mov
xchg
pop
jg
xchg
xchg
subb
xchg
test
jne
adc
xor
je
jae
sub
xchg
sbb
fwait
cmpsl
cltd
test
int3
mov
js
popf
xor
in
jmp
jle
rcl
shl
mov
movsb
mov
in
sti
icebp
mov
into
mov
or
ds
imul
arpl
fistpl
out
aad
add
inc
sub
mov
and
xchg
xchg
sahf
mov
out
out
ds
or
sbb
fldenv
int
jno
or
adc
and
popf
mov
int
mov
inc
pop
aad
out
cs
insb
inc
push
adc
adc
jo
int3
dec
xorb
jl
mov
sub
mov
dec
lea
cmp
jne
lahf
dec
sahf
repz
hlt
pop
hlt
push
cmc
pop
ret
in
sub
ror
mov
or
jge
inc
out
bound
dec
mov
jp
in
mov
xchg
mov
pop
mov
mov
push
movsl
les
jbe
sbb
scas
xor
mov
mov
inc
movsb
in
add
int
push
and
xor
in
lret
jb
push
add
sbb
sub
add
fstp
jnp
fdivl
mov
sub
and
pop
incb
in
lds
aas
jno
loop
ljmp
or
push
and
mov
cli
imul
fcompl
out
or
gs
inc
inc
roll
mov
stos
loope
fs
daa
pop
jl
inc
pop
fmuls
data16
dec
dec
jl
mov
and
mov
fidivl
hlt
sbb
pop
sbb
dec
xchg
add
cmpsb
jle
icebp
cwtl
mov
pop
xor
jns
mov
stos
mov
mov
sub
dec
mov
xor
mov
xchg
std
xor
fdivrs
mov
out
sbb
sub
stos
test
inc
or
lods
xorl
int3
and
mov
cmp
pop
pop
bswap
lret
mov
sbb
jb
loopne
mov
js
cmpsl
fxch
rcrb
jb
jg
add
test
adc
sub
sbb
iret
push
adc
leave
adc
push
int
dec
arpl
je
cld
lods
push
test
mov
and
mov
or
mov
es
sub
cmpb
xor
inc
push
inc
std
loopne
jns
mov
clc
popa
push
fs
ds
addr16
cwtl
lea
push
pusha
dec
xor
inc
mov
mov
adc
pop
xor
mov
daa
cmpb
aam
fwait
and
add
or
pushf
jns
rolb
mov
popf
pop
nop
shll
add
mov
pushf
xor
imul
mov
jge
cmp
stos
shll
pop
mov
ror
ficoms
add
enter
push
adc
jle
push
ljmp
stos
jle
ret
xor
ja
inc
out
mov
push
push
ljmp
cmp
cmp
push
add
and
cmp
sbb
push
add
mov
sbb
mov
mov
pop
arpl
out
xor
jb
mov
xor
pop
aas
mov
cs
sti
and
test
and
cmp
dec
dec
pop
xor
nop
cmp
push
dec
xor
adcb
ds
dec
inc
test
dec
push
push
mov
imul
mov
jle
ja
loop
inc
xchg
jnp
mov
lea
xchg
hlt
imul
jmp
test
pushfw
retw
mov
lods
sub
mov
lods
lcall
stos
push
mov
je
push
sti
adc
inc
addl
aam
jb
pop
es
call
sbb
sbb
sbb
repnz
sbb
js
das
add
cmpl
mov
movsb
pushf
and
cmp
pop
lea
push
repz
sub
arpl
sbb
pop
pop
push
pop
pop
ds
mov
pop
xchg
inc
in
sub
addl
dec
test
ja
sbb
cmp
shlb
popa
cmp
dec
dec
aas
xchg
imul
push
std
enter
movsl
stos
popa
add
outsb
insl
insb
ljmp
nop
cltd
pop
sbb
in
mov
mov
xchg
imul
fisttps
jae
fists
int
push
xor
or
mov
movsl
jecxz
scas
adc
stos
stos
test
aam
xchg
rol
mov
mov
lds
push
int
lret
rcll
je
out
fiaddl
cmp
sub
fwait
out
add
dec
and
out
push
leave
in
jmp
shll
mov
adc
or
push
mov
cmpsl
and
adc
add
ja
or
inc
out
or
stc
xchg
mov
pusha
fwait
shlb
push
or
or
pop
in
jmp
adc
cmp
xor
push
adc
movsb
mov
xor
cli
inc
lea
or
arpl
push
xchg
push
adc
lahf
adc
and
repnz
daa
es
push
pop
sarl
stos
sub
je
mov
sub
jl
push
xchg
enter
jl
jg
xlat
xchg
dec
and
mov
lea
mov
fwait
mov
mov
fwait
mov
add
jo
jle
insb
stos
jo
js
and
cmpsb
cmpb
scas
mov
sub
xor
sub
ds
cmp
cmp
inc
jecxz
fstp
ljmp
add
add
pushl
das
inc
sbb
xor
pop
mov
cmp
insl
dec
test
stos
cmp
push
ret
inc
stos
and
and
sub
pop
pop
add
and
inc
in
mov
dec
mov
clc
cmp
jbe
mov
cld
ds
xchg
cmp
mov
mov
arpl
movsl
push
add
pop
dec
das
insl
ljmp
imul
pop
lea
xchg
jp
xor
xor
jb
xchg
je
xchg
enter
fnstsw
jnp
nop
push
outsl
out
movsb
lret
out
push
lea
repnz
dec
xchg
faddl
pop
pop
adc
lahf
in
test
cli
pop
test
fsubs
test
xor
mov
mov
mov
repnz
pop
sti
cli
mov
sbb
int
xchg
xlat
mov
pop
push
jmp
lock
popa
pop
adc
inc
pop
icebp
sbb
orl
fs
sub
cmp
mov
push
inc
aas
ds
cmp
enter
popa
inc
data16
shll
popa
dec
ret
mov
ud2
push
aas
mov
or
cmp
sbb
scas
jbe
dec
jle
bound
add
inc
push
push
movsb
jo
pop
mov
sahf
mov
xor
mov
dec
test
outsb
dec
enter
les
cmpsl
mov
outsb
xor
mov
xchg
xchg
adc
xchg
lret
jne
mov
repnz
into
cmpsb
aaa
jl
cmpsl
mov
xor
in
jns
cwtl
pop
pushf
cmpl
pop
cmpsl
xor
out
add
shrl
adc
xor
mov
lahf
xchg
aam
push
xchg
adc
cmpsl
aad
jge
mov
rorb
push
ror
dec
imul
adc
in
faddl
cmp
sbb
sub
loopne
jae
jno
bound
mov
sar
repz
aaa
paddd
paddsw
mov
in
dec
sbb
mov
or
sti
push
adc
mov
push
aas
sti
pop
fcompl
sbb
add
test
sbb
push
mov
adc
push
push
cmp
jle
inc
nop
mov
pop
lods
mov
popa
push
mov
xor
push
push
pop
pusha
dec
jnp
xor
movsl
mov
xorb
jo
stc
in
stos
jmp
cmpsb
les
xchg
jnp
outsb
shl
mov
sub
xchg
mov
or
sub
les
cwtl
fbstp
cmpsl
mov
jne
pop
popf
in
and
jecxz
test
or
xor
test
shlb
stos
pop
shr
loop
fnsave
mov
mov
cltd
iret
es
in
loopne
cld
jmp
xor
sub
adc
inc
cmp
push
push
adc
idivb
aas
xchg
sbb
and
dec
or
icebp
mov
or
pop
and
dec
push
or
or
mov
lds
xor
xor
dec
cmpsl
xchg
aam
jge
add
aaa
outsb
xchg
repz
push
pop
aas
jbe
pop
cmp
sbb
pop
icebp
pusha
xor
lahf
xor
sbb
addr16
fnstsw
push
mov
loop
xchg
jbe
jo
lods
sbb
add
test
ljmp
mov
scas
in
stos
add
divl
ret
xor
int3
add
xor
cltd
addr16
loop
cmc
ljmp
xor
and
fwait
mov
mov
or
inc
sbb
aas
adc
cmp
inc
out
scas
lock
and
cmp
sub
pop
cmp
push
push
jl
vmwrite
inc
mov
add
decb
pop
mov
mov
sti
sbb
pop
or
popf
cmp
ja
subb
outsb
daa
mov
cmp
inc
ja
aad
sbb
ds
das
in
lock
popa
push
mov
les
vprotb
pop
pop
fildl
xchg
mov
jbe
lods
scas
addl
loope
mov
lds
jg
cld
sub
loope
bound
inc
xchg
in
popf
popf
xorl
lret
add
mov
pop
or
pusha
popf
mov
lret
cmpsl
and
sar
or
mov
std
lahf
xchg
rclb
test
mov
mov
rorl
and
rorb
add
inc
lods
push
shlb
jecxz
mov
aad
fnstenv
jno
insb
xor
out
insb
cwtl
pop
jno
or
in
notb
flds
arpl
jl
lahf
cli
adc
and
arpl
xchg
adc
repz
test
cmp
pop
lcall
ret
in
repnz
scas
clc
sub
icebp
pop
and
mov
dec
dec
cmp
mov
inc
popa
arpl
dec
outsl
add
mov
xor
push
lods
bound
test
push
mov
sbbl
xchg
cmp
mov
imul
lcall
int
lea
or
sbb
mov
testb
aad
xor
sti
xor
aam
shl
lods
adc
std
cld
nop
lahf
and
insb
arpl
into
aam
and
ljmp
jecxz
xchg
xorb
xor
pop
sub
lret
inc
lahf
repnz
mov
mov
and
scas
xchg
std
or
add
std
and
xchg
adc
xchg
rcl
pop
in
and
aam
icebp
pusha
add
jns
sub
outsb
in
cmpsl
inc
inc
jmp
and
loope
outsb
insl
daa
dec
inc
inc
jge
lods
jne
daa
push
sub
call
shll
pop
xchg
or
dec
dec
mov
dec
aas
jmp
jo
insl
movsl
ja
popf
pushf
dec
nop
cli
add
inc
dec
inc
shr
insl
mov
xor
dec
gs
add
push
xor
cmp
iret
jmp
xor
jmp
mov
fcom
pop
mov
repnz
scas
in
xchg
lcall
fs
sahf
mov
inc
in
jmp
fisttps
sub
cltd
repz
add
mov
or
mov
mov
or
out
add
imul
pop
xchg
into
mov
scas
in
sti
push
int3
into
div
mov
xor
jmp
testb
xchg
xchg
cmp
sub
shrb
dec
loopne
jne
mov
pop
sub
pop
push
out
or
mov
push
push
push
imul
imull
insb
inc
sbb
jno
xchg
add
pop
arpl
push
cmp
out
mov
arpl
aad
xchg
xchg
dec
jns
xor
stc
lcall
xorb
jbe
pusha
or
mov
jo
imul
jo
sbb
xchg
xchg
js
cs
into
repnz
fdivrl
xchg
xor
aas
cmp
fistl
rcrl
push
out
pop
mov
mov
jp
mov
mov
mov
lods
andl
mov
push
inc
or
mov
xor
jg
sbb
scas
mov
sub
out
in
mov
cwtl
sub
add
in
adc
lea
add
cmp
ret
fs
xchg
outsl
into
or
icebp
cs
push
adc
aam
icebp
pusha
or
adc
push
scas
lret
out
jo
sbb
cld
out
xor
inc
dec
xchg
cmp
inc
cmp
fxam
xchg
xchg
aaa
fimull
cwtl
and
arpl
adc
xor
push
addl
or
addb
addr16
cld
sub
mov
sbb
add
pushf
jae
push
xchg
pusha
xor
jb
lods
xchg
stos
add
aaa
fcmovu
mov
inc
in
jo
xchg
popa
dec
out
in
xchg
mov
js
in
sub
lods
les
sti
cli
aam
mov
and
aam
outsl
dec
jne
or
xchg
mov
cmpsb
stc
ds
fucompp
xor
in
lods
out
jb
mov
cli
add
aas
jae
aaa
ss
popf
mov
or
add
test
adc
push
mov
or
jae
or
test
sub
pusha
xor
outsl
xor
shrb
lahf
insb
popa
lret
imul
push
push
xor
bound
cmp
ds
xchg
dec
inc
mov
mov
xor
jg
dec
jl
sub
xor
movsb
and
mov
std
sbb
insb
ret
test
xor
stos
mov
push
into
lcall
lret
pop
repz
sahf
adc
nop
jecxz
aam
pop
out
stc
mov
stos
test
cld
hlt
cmc
adc
inc
jp
mov
mov
andb
and
sbb
or
cmp
mov
jp
inc
cwtl
loope
jl
jl
add
sbb
dec
arpl
sub
adc
enter
cld
or
filds
push
iret
and
dec
shll
and
jnp
jl,pn
adc
mov
push
mov
jae
jbe
cmc
mov
in
sub
sub
push
xor
xchg
cmpb
mov
pop
test
aaa
fsubl
inc
imul
dec
xor
arpl
sbb
dec
popf
dec
jns
add
jo
dec
jae
scas
lods
rorb
mov
adc
jg
xchg
mov
and
mov
mov
mov
aaa
fcom
stos
add
aam
add
dec
bound
iret
sar
clc
scas
pop
adc
fistpll
mov
ret
add
scas
jge
iret
into
dec
test
in
add
push
insl
cmp
inc
ljmp
data16
add
jns
push
xlat
mov
jmp
sar
sarb
adc
movl
or
push
int
loope
and
push
or
lret
cwtl
mov
mov
je
loopne
adcl
add
inc
ja
xor
lods
xchg
dec
inc
push
cmp
xor
dec
mov
push
hlt
and
pop
cli
inc
mov
arpl
js
adc
push
dec
dec
pop
pop
repnz
repz
ja
sbb
pop
ret
je
sub
mov
or
outsl
outsb
in
xchg
xchg
mov
fstl
mov
mov
js
jo
mov
push
dec
mov
rcrl
pop
push
xor
imull
pop
pop
pushf
add
stos
bound
cmpsb
movsl
shrb
sub
aam
or
mov
jge
mov
xchg
push
adc
loope
push
xchg
fstps
lahf
loop
xchg
jae
mov
dec
rcr
fnstsw
out
push
push
inc
push
jmp
notb
adc
out
out
xor
xor
mov
jne
xchg
pop
or
daa
pop
lods
test
aaa
test
mov
push
mov
aas
pop
push
xchg
iret
insl
insb
dec
jg
loop
push
inc
sbb
mov
lds
xor
mov
in
mov
push
lahf
ljmp
pop
xor
popa
cmpsl
jg
cmp
xor
loop
imul
dec
jbe
imul
adc
imul
xor
cwtl
and
jbe
push
xchg
cmpsb
pop
rcrb
xor
fwait
sbb
mov
add
adc
stos
stos
enter
clc
jle
ret
fidivl
stos
into
add
inc
subl
fnsave
out
jbe
movsl
aad
aad
in
cmp
adc
jecxz
nop
push
adc
sbb
addl
inc
adc
sub
adc
add
push
sahf
aas
loop,pt
add
inc
add
sti
stos
aaa
dec
in
int3
or
inc
pop
mov
cmp
lds
adc
out
into
dec
mov
mov
loop
sbbl
pop
leave
push
xor
xchg
fnstsw
dec
jnp
xor
and
mov
dec
dec
scas
push
lcall
xchg
adc
sbb
hlt
test
dec
scas
repnz
adc
scas
scas
mov
aaa
xchg
mov
jle
sub
mov
in
imul
and
sub
xchg
pop
mov
mov
fld1
lahf
shr
imul
scas
loop
ds
sarl
aam
repnz
les
sti
cli
lods
arpl
rcrl
adc
int
sarb
sbb
repnz
cmp
mov
into
lds
sbb
divl
add
scas
lock
data16
and
sub
mov
cwtl
pop
inc
xchg
pop
push
push
inc
repz
mov
cmp
sahf
dec
cmp
hlt
jbe
or
adc
mov
push
cmpsb
or
push
fisubrl
dec
or
sti
inc
lea
add
mov
cmp
ret
push
push
push
pop
mov
mov
xchg
fisttpl
sbb
mov
inc
bound
lea
push
pusha
push
inc
mov
sahf
popf
dec
mov
xchg
repz
jg
push
mov
lods
lods
mov
xchg
pop
shl
sub
popa
call
pushf
test
jo
lea
arpl
push
xor
xor
lds
fst
adc
rorb
mov
scas
xchg
in
paddsw
or
adc
and
mov
sti
cli
mov
jecxz
jno
lods
scas
int
dec
jbe
sub
jae
mov
rol
mov
push
sbb
in
adc
clc
incl
sub
popf
sub
jne
xor
xor
idivb
out
out
fldenv
and
xlat
dec
cmp
imul
sbb
and
fcompl
ficompl
ss
pop
repz
out
or
inc
sub
aad
lods
mov
fs
sub
inc
inc
xor
or
aam
mov
and
popa
push
dec
sbb
push
out
mov
push
hlt
repz
sub
pop
pop
push
cmpsb
out
or
jmp
ja
scas
aas
push
jne
xchg
mov
pushf
pop
cmp
mov
fldl
ret
test
loopne
nop
jge
mov
cmpsb
jmp
in
xor
cwtl
iret
xor
imul
sahf
test
test
stc
or
xchg
mov
test
push
mov
iret
iret
into
fnstsw
out
add
or
rcrl
rcr
sbb
fmul
sub
and
jmp
loop
scas
int3
adc
add
inc
xor
jns,pt
insb
in
das
rcr
and
adc
push
sbb
dec
push
xor
sub
call
mov
addr16
out
shr
sbb
sub
sub
fs
pop
jge
xor
dec
sub
frstor
jp
cmovbe
in
mov
adc
jge
sbb
popa
dec
cmpsb
adc
mov
movl
js
popl
pushf
push
fdivrs
xchg
fistpll
insb
xchg
shl
cltd
mov
aaa
fcom
pop
cmpsb
sahf
mov
fimuls
cmp
adc
scas
lods
lods
pushf
jae
cltd
rcrb
jg
mov
cmpsl
xor
std
clc
popa
xlat
push
inc
pop
push
add
int
dec
adc
sbb
and
adc
jne
and
mov
push
and
jno
stos
ljmp
cmp
aas
ds
push
sbb
cmp
mov
or
sub
push
push
sub
sub
pusha
push
fcompl
or
pop
inc
inc
xor
inc
xchg
negb
das
and
mov
jecxz
xchg
xor
in
inc
inc
inc
jecxz
dec
pop
shll
ja
lret
mov
lea
popa
xor
xchg
hlt
hlt
and
cltd
sahf
enter
out
pop
roll
stos
scas
cmc
adc
xchg
pop
rcrb
jo
jmp
test
loope
adc
lret
ret
cwtl
fcoms
sbb
sub
xchg
push
xor
lahf
xor
cmp
lcall
pop
imul
leave
inc
jle
les
or
ror
dec
mov
out
pop
sbb
in
loope
mov
movsl
adc
pushf
fprem
das
push
add
orl
aas
pop
sub
mov
pusha
jb
call
xor
sub
dec
pop
fisubl
mov
sbb
and
dec
sub
loopne
jbe
testl
pop
cmp
stos
push
nop
mov
cmpl
stc
adc
das
es
jge
pop
arpl
push
cmp
nop
mov
push
addr16
repnz
xchg
xchg
push
dec
cmpsl
or
mov
pop
sbb
sub
xor
pop
andl
mov
imul
into
arpl
mov
jg
xor
leave
scas
cld
lret
shl
pop
sahf
lock
leave
test
testb
aad
mov
lds
xchg
shrb
dec
test
lods
cmpl
ss
in
sub
xor
outsb
sub
lret
dec
xchg
into
adc
pop
ss
or
frstor
add
cmpsb
or
popa
lret
pop
cli
mov
ret
dec
inc
and
dec
push
pop
or
push
pusha
addr16
or
xor
push
sub
cmpl
dec
mov
sbb
repnz
das
sbb
or
js
cmpb
fmull
cmp
or
arpl
push
inc
aaa
or
mov
cmp
fistl
popf
xchg
mov
dec
and
ret
test
in
sub
mov
fdivl
sarb
sbb
dec
ss
bound
mov
xchg
or
xchg
inc
mov
xchg
lea
dec
add
mov
in
in
add
clc
notl
in
shrl
and
repnz
into
int
rol
or
jecxz
xor
in
fs
sahf
popa
jecxz
loope
int
jp
add
sti
test
cli
cli
push
pop
loop
cmc
xchg
inc
cmp
pop
cli
cld
jp
insl
pop
xor
sbb
clc
sub
or
sub
pop
movsl
imul
sub
hlt
sub
cmovbe
in
sub
sbb
xchg
ud1
cmp
jo,pt
iret
insl
bound
adc
xchg
pop
jle
mov
repz
lds
arpl
adc
push
sub
loopne
mov
jo
stos
lret
flds
jge
xchg
repnz
arpl
mov
scas
mov
mov
mov
mov
mov
mov
xchg
push
inc
loope
pushf
jae
lods
lret
lret
inc
fstpt
xor
test
or
jns
test
ret
out
out
shrl
sti
testb
add
int
and
test
clc
lods
jb
aad
sub
mov
les
pop
loopne
test
in
inc
mov
cmc
adc
sahf
gs
push
inc
aas
ds
or
nop
into
push
mov
dec
call
xor
push
std
inc
push
hlt
repz
icebp
push
pushf
fstps
jg
aas
es
cmpb
adc
ljmp
notb
jns
scas
ds
pop
pop
in
push
sub
add
mov
cmp
in
cwtl
xchg
adcl
les
pushf
fwait
out
xor
push
add
aam
lods
lods
stos
nop
push
mov
jne
insb
shlb
inc
jmp
xchg
mov
stos
or
add
ds
mov
aam
cltd
push
cmp
mov
ret
inc
add
popa
outsl
push
push
loope
xchg
lcall
push
xchg
mov
fninit
mov
pop
xchg
ss
iret
test
testl
in
push
lret
imul
sub
movsl
in
in
in
jmp
mov
dec
jno
fistl
clc
cmp
xchg
shrb
sub
pop
push
or
cmp
or
jno
lret
mov
cmp
and
mov
pop
mov
inc
ret
insl
xor
adc
icebp
rcll
movsb
jl
cmp
sbb
in
pusha
nop
test
or
jle
mov
xor
fwait
lcall
ret
ret
push
sub
fnstenv
adc
in
mov
imul
pushf
into
xor
into
lcall
fistl
cmp
sbb
dec
cmp
fnstenv
add
lea
aas
test
imul
scas
xor
mov
adc
push
cmc
test
lret
add
int
push
and
mov
je
pop
rolb
or
sbb
dec
jae
sbb
les
add
pop
xor
cmp
adc
adc
popa
gs
sahf
cmpsb
adc
adc
hlt
std
push
sti
dec
inc
scas
dec
popa
fists
hlt
sub
icebp
push
int3
sti
out
pextrw
sbb
sbbl
lods
xchg
ds
sub
cmp
inc
adc
stos
cmp
xchg
adcb
rcr
mov
and
out
mov
dec
dec
pop
dec
aaa
inc
clc
xchg
xchg
inc
mov
adc
sub
inc
cmpb
scas
shrl
push
insl
push
xchg
cmp
enter
mov
lret
enter
loope
mov
cmpsb
lcall
cmp
loopne
test
cltd
mov
fadd
inc
outsl
scas
xchg
push
pop
mov
xor
stc
sahf
pop
rcl
rcll
fdiv
add
lret
lea
or
or
pop
sub
or
loopne
push
ficomps
jecxz,pn
call
push
xor
in
das
in
sub
rcrb
ss
mov
add
les
ja
dec
inc
and
sbb
dec
dec
daa
and
mov
divl
rcrb
and
mov
or
jbe
jo
scas
shrb
pop
int
jbe
popa
inc
sub
popf
or
js
popa
push
into
ljmp
mov
repnz
insb
ret
js
mov
cmpsl
lcall
fidivs
pop
repnz
imul
jg
mov
mov
mov
loope
rorb
mov
aad
in
jno
xchg
sbb
insb
out
and
add
mov
js
in
loope
popf
dec
testl
lcall
rorl
push
sbb
and
and
outsl
or
iret
mov
jb
fsubp
add
in
int3
mov
jecxz
inc
inc
inc
mov
shrb
adc
adc
std
in
add
lcall
and
lcall
cmovb
aam
hlt
repz
pop
pop
pop
ss
xorl
outsl
outsb
test
gs
xchg
sub
jg
dec
jnp
push
mov
mov
push
mov
inc
push
notb
xchg
inc
pop
pop
ret
pop
sub
gs
stos
push
jo
jecxz
and
outsl
mov
cmp
mov
rcrl
dec
mov
pop
dec
xlat
ror
iret
into
or
xor
jbe
loopne
in
lock
inc
movsl
les
lcall
ret
shlb
adc
jns
test
push
sbb
ret
test
sti
xchg
lret
enter
shll
je
mov
inc
int
and
mov
mov
pop
flds
xlat
push
mov
jg
div
fucomi
pop
out
jmp
pop
in
cmp
add
jmp
inc
loop
pusha
ds
adc
pop
push
adc
pop
or
sbb
cmpsl
jecxz
add
dec
outsb
inc
xor
jmp
js
jbe
es
jge
xor
ds
jp
cltd
in
bound
or
dec
push
xchg
xor
cmp
loopne
xor
add
inc
test
shll
xchg
add
jae
adc
sbb
jo
es
jg
pushf
into
int
test
outsl
mov
neg
jno
sbb
mov
shr
push
mov
cmp
xchg
push
mov
stos
test
lahf
jnp
ret
add
mov
jecxz
mov
fwait
xchg
mov
mov
or
fdiv
xor
ja
imulb
cmpsb
out
aad
push
mov
sahf
lods
ljmp
xchg
sahf
gs
sbb
pushf
jmp
cmp
sbb
mov
clc
push
push
dec
dec
sbb
dec
pop
push
pop
adc
repz
mov
mov
push
inc
test
out
clc
cmp
lds
push
inc
push
sub
jne
sbb
dec
xor
repnz
ds
ja
push
mov
mov
push
push
or
mov
pop
fcoml
xchg
and
inc
adcl
scas
push
negb
sub
mov
lcall
add
adc
sbb
outsl
test
cltd
sti
sahf
jle
fwait
int
lret
cmpsl
leave
outsb
enter
call
sbb
mov
shr
push
enter
cmpsb
in
add
stc
aam
mov
adc
cmpsl
mov
xchg
mov
lret
lret
sti
ja
pop
loope
sbb
pop
xchg
loope
xchg
jno
inc
inc
out
out
std
out
inc
and
mov
inc
fucom
std
jl
adc
lods
ljmp
in
fsubrl
ds
mov
rcrl
jb
fisubl
ss
aas
cld
inc
inc
and
out
sbb
sbb
pushf
arpl
dec
loopne
orb
dec
inc
cmp
movsb
dec
pop
xor
ja
movsb
push
xchg
roll
test
xor
xor
js
add
stc
movsl
les
mov
and
jg
outsb
call
sti
dec
inc
movsb
fisubrs
hlt
push
lea
mov
icebp
inc
push
xor
xor
or
cmpsl
and
sbb
fisttps
jmp
iret
inc
in
fwait
loope
adc
int
xor
cld
sti
cli
push
adc
insb
sti
mov
or
pop
pop
add
push
xlat
es
mov
and
mov
pushf
cmpsl
out
lods
inc
xchg
les
jno
mov
das
cs
ljmp
adc
jle
dec
icebp
mov
add
aaa
ret
arpl
jns
cld
adc
dec
dec
dec
and
repz
adc
test
repz
push
pop
in
test
cmp
outsl
outsb
das
inc
imul
adc
dec
rolb
aas
aaa
jnp
push
and
xor
xor
inc
into
fs
cmp
testb
stc
xchg
jne
sbb
jg
xor
outsb
sub
xchg
push
js
pop
into
je
aas
xchg
shr
insl
psllw
jns
mov
mov
jecxz
sahf
aad
pop
mov
xlat
pop
xor
es
shll
test
mov
cwtl
ja
enter
xor
mov
sti
add
mov
pop
and
fdivl
int3
lret
fcom
or
lock
xor
push
jecxz
js
jecxz
popa
out
lds
inc
inc
add
pop
hlt
ljmp
mov
out
test
stc
fiadds
jmp
cmpsl
bound
sbb
arpl
clc
je
push
std
mov
cs
hlt
into
stc
in
ss
xor
pop
insl
loope
insl
cmp
and
ja
bound
sub
jno
jle
dec
nop
jo
inc
fs
sub
cmp
mov
mov
popa
dec
sahf
negl
lods
mull
hlt
dec
or
pop
hlt
mov
stos
stos
xchg
lcall
outsb
mov
push
test
push
mov
gs
cmp
mov
fstpl
out
xor
cmpsl
cmpsb
outsl
fisubrs
cmp
popf
cs
or
gs
imul
ds
sbb
mov
imul
scas
sbbl
mov
insl
push
or
aad
sbb
jns
int3
jecxz
jns
sbb
daa
sbb
loope
out
insl
test
pop
cmp
jno
xchg
cmp
mov
push
inc
xor
out
pop
add
arpl
push
inc
push
ljmp
xor
mov
push
mov
jg
inc
dec
test
push
ljmp
imul
xchg
dec
jg
inc
jns
in
aaa
cs
add
movsb
pusha
xchg
sbb
mov
push
sti
negl
xor
inc
test
xchg
stos
jo
cmp
data16
xchg
gs
ss
or
scas
and
popa
mov
xchg
mov
loope
xchg
repnz
nop
pop
mov
je
xchg
xchg
xchg
dec
inc
in
mov
dec
in
in
enter
div
jns
loopne
mov
enter
add
jmp
loopne
testl
add
movl
clc
fmul
mov
sub
int
jmp
sub
mov
push
sub
fidivrs
out
pusha
mov
loope
inc
jg
sub
push
jp
arpl
push
dec
adc
pop
popf
jle
lock
sbb
cmp
push
inc
sbb
jne
mov
pushw
jne
js
sti
cmp
sub
orb
pop
mov
push
mov
jge
inc
mov
fwait
mov
mov
mov
iret
stos
and
xor
pop
rorb
rorb
jbe
mov
in
push
xchg
scas
dec
mov
xchg
ret
movsb
jnp
ss
lods
lods
add
pop
test
xchg
mov
add
idivl
pop
out
out
xchg
sbb
mov
jl
cltd
add
cmp
mov
stc
or
push
or
lret
lret
shlb
push
pushf
fdivp
daa
fidivl
pop
test
jle
cmp
loopne
mov
jns
shl
and
xor
cld
sti
icebp
dec
in
add
stos
jecxz
sbb
dec
ss
leave
or
cli
adc
mov
gs
cmpsl
sbb
cmpsl
jecxz
push
or
aas
jbe
fsubrl
sbb
ficomps
cmp
dec
inc
push
ss
or
xor
and
adc
adc
dec
inc
pushf
cmc
popf
pushf
ja
sbb
ret
scas
insb
imul
sub
cwtl
mov
mov
pop
inc
mov
vaddps
ret
fwait
jb
mov
xchg
mov
pop
mov
loopne
add
fcmovnu
jo
in
pop
add
les
lcall
xchg
mov
mov
push
pop
push
add
mov
xchg
and
add
lret
test
negl
hlt
stos
daa
aas
add
lock
sub
mov
sub
pxor
mov
cmp
and
dec
in
das
femms
mov
lods
dec
pop
inc
pop
js
repz
xchg
ret
sbb
add
out
test
add
repnz
cmp
hlt
push
push
pop
xchg
out
adc
pop
aas
mov
push
test
add
or
dec
xor
js
push
and
push
and
push
pop
pop
sarl
gs
les
das
xor
in
or
imul
mov
mov
mov
xchg
pushf
in
dec
subb
popa
icebp
mov
pop
lds
fwait
sbb
mov
push
testl
fisubrs
dec
jnp
sub
mov
xchg
in
xor
dec
dec
out
pop
into
push
mov
fcom
sub
and
push
lcall
rcrl
add
or
pushf
scas
jmp
in
shlb
mov
out
mov
mov
sbb
stc
loop
into
test
pop
icebp
sub
cmp
dec
pop
push
imul
iret
jno
jo
dec
pop
pop
pop
add
in
mov
add
icebp
sub
jnp
cmp
repz
add
push
sti
push
pop
xchg
cmp
inc
mov
test
or
call
lahf
sti
ja
repz
jp
pop
pop
pop
pop
mov
pushf
fwait
lcall
cltd
addl
mov
mov
xchg
imul
loop
jns
jp
shr
orb
js
subb
into
int
mov
push
cmc
xor
xor
in
mov
leave
andb
shrl
mov
push
je
stos
mov
in
push
xchg
jg
jl
in
stos
ret
stc
or
mov
and
gs
fdivs
jae
adc
fsubr
inc
fldl
je
pop
inc
dec
mov
scas
jmp
aam
mov
roll
in
add
dec
repz
push
mov
or
sub
push
xor
sbb
jg
sbb
pop
pop
hlt
ds
out
or
divb
xor
test
fcoml
inc
pop
adcl
stc
cmp
fistpll
mov
jp
iret
or
mov
repz
mov
pop
shll
xchg
cli
cmpsb
movsl
xchg
cmp
das
insb
shrl
stos
stos
test
lea
rcl
lea
xchg
mov
insl
ffreep
in
loop
cmp
test
jg
sub
aad
mov
adc
pushf
fwait
sbb
mov
xor
fcompl
outsl
scas
xchg
lock
xor
jns
xchg
das
mov
mov
push
add
adc
iret
jmp
jno
pop
and
rorl
shll
lock
fsubr
fildl
mov
fst
xor
out
gs
stc
or
xor
int3
push
bndldx
or
cmp
mov
sub
pop
cltd
lds
and
jmp
cmp
sbb
xchg
xchg
xchg
adcb
and
inc
push
mov
popa
push
into
ljmp
mov
pushf
mov
icebp
pusha
hlt
outsb
dec
inc
mov
cltd
jle
cmpsb
fwait
xchg
lock
in
and
mov
mov
addb
jl
mov
test
push
int
mov
mov
xlat
nop
mov
out
es
fwait
sbb
cwtl
popl
sahf
mov
add
cmp
sahf
adc
add
lahf
in
add
lret
stos
ret
stc
or
repz
jecxz
or
mov
imul
push
mov
lret
imul
push
jl
adc
das
movsb
xor
sti
cwtl
sub
and
or
push
sbb
inc
adc
cmp
insl
inc
pop
dec
push
adc
push
mov
outsb
inc
sub
pop
icebp
push
dec
sti
out
outsl
or
mov
lds
subl
jbe
aad
ficompl
xorb
and
push
xor
dec
dec
lcall
ret
sbbl
shr
test
outsb
insl
addr16
add
pusha
into
push
mov
mov
sarb
imul
loop
xchg
lea
mov
push
jmp
mov
jb
mov
out
fcmovbe
clc
icebp
mov
add
dec
rcl
shrb
cld
xlat
xlat
push
fstl
loop
sarl
enter
out
pushl
pop
pop
push
ret
cltd
out
sub
insb
add
je
jns
je
push
sub
push
push
push
inc
pop
fdivrp
stc
fidivrs
repnz
and
jmp
xchg
sti
sbb
add
sbb
add
push
stc
add
pusha
pop
inc
sbb
jo
scas
and
adc
xorl
sub
jg
or
xchg
xchg
xchg
xchg
insb
daa
and
inc
fwait
push
adc
test
dec
mov
push
push
push
inc
cmp
outsb
outsb
movsl
jp
pop
out
lret
pop
repz
sbb
mov
bnd
mov
xchg
cmc
int3
movsb
mov
ja
xchg
pusha
sub
fsubrl
xchg
gs
int
lret
jg
jge
mov
roll
faddp
adc
push
call
loope
push
outsb
push
cmp
in
in
fwait
mov
test
push
inc
adc
jge
shrl
pop
shll
filds
xlat
xor
out
mov
lock
fwait
xor
fcmovne
loop
sbb
sub
test
ljmp
adc
sbb
cmp
and
dec
fst
inc
arpl
and
lret
mov
nop
repz
lea
imul
orl
inc
jnp
icebp
dec
jmp
jp
scas
xchg
xchg
mov
dec
inc
inc
sub
adc
imul
push
push
dec
cmp
push
ret
cmp
hlt
pop
pop
pop
inc
sub
lods
inc
mov
lods
cmpl
xor
add
pushf
jl
jg
enter
dec
fcmovnb
arpl
into
int
lcall
xchg
mov
jno
lods
rcrb
jg
lcall
roll
mov
adc
mov
add
rcl
std
shll
sti
and
sbb
and
pop
in
or
pop
adc
inc
imul
fmuls
jmp
and
ss
cmpb
jmp
inc
mov
pop
popa
xor
or
pop
push
hlt
repz
sbb
or
push
stc
filds
leave
dec
jmp
push
push
xor
inc
out
dec
inc
sub
push
dec
dec
dec
dec
les
inc
ds
mov
cmpsb
popf
and
call
jl
movsl
les
inc
movsb
scas
lods
lods
pop
pusha
ss
xor
xchg
test
outsb
fs
js
sahf
jle
add
int3
lret
pop
adc
cs
sahf
popf
lea
xchg
lea
jbe
leave
insl
stos
in
loope
das
inc
div
ret
pop
add
lret
and
jo
loope
and
jb
mov
or
in
pop
push
adc
or
loope
fstpt
int
add
lock
pop
sbb
adc
inc
fldt
add
andl
mov
and
leave
hlt
sub
or
sbb
push
or
sbb
pop
push
and
aaa
pop
pop
pop
push
aas
lds
dec
mov
das
cs
mov
gs
arpl
jns
pop
ds
icebp
xor
cs
xchg
test
leave
dec
dec
dec
scas
xchg
dec
cmp
pushl
ja
dec
xchg
pop
pop
rcll
cmpsl
xchg
stos
std
cmc
outsl
outsb
mov
ja
rorl
cld
jbe
adc
loop
add
jge
push
mov
fiaddl
test
jle
dec
int
lret
cmpsl
fsubrp
shll
xor
je
in
stos
fnstcw
mov
sub
imul
lcall
fmuls
stos
ret
stc
or
sub
mov
iret
in
cmc
repz
jb
pop
jne
adc
nop
lret
adc
adc
shll
in
lock
cmp
fcompl
pop
adc
and
aas
jb
std
aas
mov
lock
and
cltd
add
rorb
repz
sub
push
outsl
ljmp
lret
loop
outsl
cmp
insb
popa
xchg
test
adc
xchg
xchg
mov
jl
jp
or
cwtl
loope
dec
dec
push
push
mov
ret
arpl
dec
mov
cmpsl
or
pop
pop
bound
movsb
and
loope
mov
stos
test
xchg
adcb
add
mov
and
gs
int3
lret
pop
push
rclb
rcrb
in
mov
out
lds
add
lock
fdivs
mov
and
mov
stc
sahf
call
ret
jmp
int3
and
loope
xlat
mov
cmp
mov
into
lds
xlat
into
cmp
and
scas
in
sti
push
int3
lods
div
out
dec
xor
inc
adc
ds
dec
inc
lret
xchg
loop
push
dec
out
or
cwtl
aam
call
cld
add
xchg
mov
psubsw
add
mov
xlat
leave
push
js
add
xchg
adc
cmp
cmp
xchg
movsl
and
lea
ret
pop
mov
push
pop
pop
repnz
fwait
pop
jne
lcall
sub
imul
pop
subb
jb
ja
cmp
mov
loope
iret
jns
in
imul
add
fwait
popf
pushf
ficoms
mov
mov
xchg
in
sar
fidivl
lret
cmc
adc
adc
test
mov
loop
rcl
mov
femms
or
sbb
mov
iret
shll
into
popa
cmc
lods
rorl
ret
lock
cmp
clc
in
fbstp
incb
hlt
stos
cmp
cmp
in
inc
lds
dec
dec
lds
or
pop
add
mov
ja
mov
icebp
pusha
outsl
pop
icebp
sbb
daa
pop
adc
test
sub
mov
loop
js
arpl
clc
aas
sbbb
bnd
jp
cs
fiadds
or
dec
dec
mov
cwtl
xchg
xchg
lcall
dec
lcall
dec
push
cld
ret
ret
sub
lods
lods
push
sub
aam
pop
popf
push
jnp
jo
sbb
fsubrl
vzeroall
mov
das
int3
lret
mov
sub
aad
mov
fisubrs
call
subb
test
push
div
jnp
iret
push
jl
mov
stos
scas
and
and
clc
fnstsw
or
in
sub
xor
out
in
and
into
xlat
push
jns
and
in
in
bound
fidivs
pushf
aam
inc
ficoms
jmp
cli
stc
cmp
mov
inc
inc
std
dec
dec
rorb
or
inc
xchg
sarl
mov
xchg
fildll
pop
pop
pop
insb
and
mov
dec
add
addl
adcb
xor
xor
fists
sub
push
mov
mov
orb
xchg
xor
dec
jbe
lahf
sahf
jbe
mov
hlt
dec
or
aam
imul
mov
rcrl
sarb
xchg
or
into
or
idivl
nop
lret
fistl
jns
cwtl
jb
loopne
lret
out
lcall
add
inc
adc
ret
jg
jb
sar
in
xchg
mov
mov
or
stos
rcr
and
and
push
or
je
ds
push
mov
dec
clc
adc
aad
movsl
add
icebp
xchg
out
adc
stos
idivl
insl
mov
aas
adc
rcrl
aam
inc
fs
jmp
incl
inc
pop
push
push
xor
cmp
mov
out
jbe
out
ja
mov
outsb
adcl
ss
adc
xchg
xchg
dec
outsb
movsb
fisubrs
stc
jnp
jns
xor
mov
lea
repz
pop
stos
pop
testb
les
push
mov
scas
push
mov
sub
outsl
aaa
xchg
xchg
jne
mov
xchg
mov
jae
mov
loopne
pop
xchg
xor
jb
add
fnsave
mov
mov
add
jne
stc
insb
test
aam
cmc
lea
jae
add
and
scas
aam
add
shlb
enter
push
adc
dec
xchg
sbb
xor
leave
or
sub
ficomps
xor
inc
aas
ds
add
dec
inc
lret
xchg
inc
loop
push
push
mov
or
daa
or
insl
mov
push
fldt
data16
adc
sbb
or
test
mov
in
push
inc
cld
stos
cmp
xorb
push
dec
cs
xor
xchg
dec
dec
ret
aad
cld
mov
insb
xchg
xor
xchg
sbb
xchg
mov
data16
jecxz
addb
dec
aaa
imul
mov
rol
mov
mov
mov
ret
je
jg
mov
pop
lret
les
shl
lahf
add
mov
xchg
int
ret
ret
pop
outsl
lods
mov
dec
clc
negl
jae
mov
inc
jge
in
stos
and
mov
test
lret
lret
psadbw
loopne
jae
sbb
sub
in
out
inc
inc
pop
daa
das
in
sub
sub
cmp
add
decb
push
mov
and
add
test
dec
insb
push
leave
das
aad
test
adc
sbb
rorb
and
cmp
jbe
out
sub
mov
sub
rcrb
aas
ds
repz
inc
pop
out
ret
dec
push
std
outsb
or
sahf
jge
repz
mov
repz
lcall
and
outsb
insl
insb
repz
call
pop
cltd
jg
popa
int
cmp
pop
xchg
sahf
mov
mov
xor
xchg
mov
push
cmp
out
add
mov
mov
adc
cwtl
push
lock
out
xchg
stc
fsubrs
mov
sbb
sti
loopne
or
dec
imul
or
inc
sub
cs
fistpl
sbb
add
sbb
jns
cld
jle
pop
loop
in
add
out
and
push
out
repz
push
test
ret
test
js
cmc
subw
cmc
imul
jno
and
push
or
push
sub
adc
cmpb
inc
xor
aam
imul
mov
mov
push
outsb
lcall
dec
dec
aas
out
mov
fs
xor
xor
js
push
test
shll
xchg
dec
jne
adc
lods
pop
mov
jno
xor
xchg
jbe
add
in
lahf
loope
adc
stc
xor
or
jecxz
pop
loop
adc
nop
cli
call
mov
lahf
mov
sahf
push
lahf
pop
or
mov
sbb
mov
iret
loope
and
add
inc
negl
jge
mov
pushf
push
sbb
add
in
inc
xor
in
sub
sub
in
dec
daa
lcall
cmp
int
mov
sub
or
jb
jmp
push
adc
hlt
repz
mov
add
pop
int
add
paddsw
inc
imul
jmp
push
mov
cmp
push
jp
lods
mov
popa
push
push
ja
lret
mov
mov
addr16
ds
xchg
xor
cmpsl
fwait
das
pop
pop
dec
enter
sub
inc
inc
jo
mov
xor
clc
mov
notb
mov
aam
xor
std
pop
fstpt
rorl
xchg
push
loop
shl
pop
insl
dec
cwtl
cmpsl
fidivrs
xor
and
popl
mov
ret
mov
movsl
lds
sahf
xchg
or
in
jmp
pop
imul
or
jle
enter
jns
pop
push
and
lds
sarb
or
sbb
mov
and
ret
into
fs
std
cmpsl
jmp
loopne
inc
jne
repnz
fisubl
push
inc
aas
mov
or
fadds
and
imull
dec
dec
sbb
jle
and
repnz
test
loop
or
addb
cmp
pop
push
mov
jne
xchg
pop
cmpsb
dec
movsb
rcll
cmp
das
lds
aaa
insl
jecxz
lea
adc
hlt
mov
jl
popf
pushf
repz
in
addl
inc
scas
lods
lods
mov
scas
xchg
xchg
xchg
xchg
insb
pop
ret
jnp
jle
mov
and
enter
jge
int
lret
stos
jb
sub
je
jb
add
or
lock
pop
lea
pushf
xlat
add
rcl
std
rorl
cmpsb
vphaddwd
mov
mov
int3
lret
iret
rcrb
int3
sbb
leave
and
jno
cmpsl
jp
sahf
fildl
xchg
out
fcmove
inc
out
int3
mov
shrb
lret
test
adc
cmc
call
imul
pop
adc
fsub
in
pop
popa
mov
dec
or
mov
or
jmp
fistps
stos
xlat
sub
sbb
test
jne
dec
repz
ljmp
sbb
nop
sub
outsb
cmp
push
int
add
dec
dec
popa
push
mov
push
mov
sbb
inc
sbb
pop
dec
movsl
pop
mov
sti
mov
push
js
imul
ja
rclb
xchg
dec
push
push
ds
mov
xchg
daa
rclb
icebp
sahf
in
dec
lcall
jns
mov
cltd
jne
mov
add
mov
lcall
fistpl
jg
iret
jecxz
or
sbb
aad
fwait
mov
or
loope
sbb
mov
xor
test
aam
inc
push
inc
std
cld
mul
or
mov
and
add
arpl
add
sbb
adc
sbb
sub
inc
inc
sbb
sub
cmp
jne
dec
push
or
out
cmpb
dec
adc
sbb
or
and
loop
dec
dec
and
pop
hlt
fwait
imul
pop
repz
pushf
pusha
xchg
xor
cmpsb
movsl
sub
aaa
ret
imul
sub
add
xchg
xchg
imul
jnp,pt
lods
push
xchg
lcall
int
repnz
inc
dec
push
xor
push
pusha
popf
add
outsb
sbb
ret
push
ljmp
xor
adc
test
mov
in
enter
mov
leave
and
mov
and
sbb
ret
lock
ret
scas
jmp
bound
div
lock
inc
mov
dec
cld
pop
cmp
arpl
xlat
pop
jae
iret
lret
in
aad
data16
inc
push
sbb
fisubl
outsb
lods
loopne
inc
or
inc
test
mov
cltd
cli
dec
notb
ds
lea
addl
and
sysret
dec
dec
dec
inc
xchg
dec
insl
mov
mov
xor
sub
sub
aam
cwtl
insb
imul
sub
cs
adcb
ret
xchg
arpl
mov
xchg
mov
xor
mov
repz
fwait
add
lea
cmpsl
adc
mov
xchg
cltd
outsb
imul
rorb
cmpsl
and
rorl
sbb
jp
int3
rcl
or
lock
sbb
mov
sbb
pop
mov
fwait
cmpsb
add
bound
out
out
call
clc
aas
imul
adc
fiaddl
pop
xor
cmp
cmp
cmp
cmpsb
loop
cmp
fs
push
adc
jb
data16
jmp
sbb
and
ds
data16
jp
addb
jmp
adc
push
test
and
stc
stc
inc
lea
mov
popa
inc
cmp
ja
push
popa
sbb
test
sub
cltd
pop
stos
in
addl
insb
shrl
js
imul
lds
popf
jle
ja
sarl
xchg
lods
repz
mov
mov
push
xor
outsb
sahf
popf
xor
into
vfmaddpd
lods
adc
jns
mov
push
sahf
push
fnstcw
jnp
enter
in
stos
adc
mov
rcll
leave
jecxz
mov
ret
jb
sbb
sub
cmc
pmulhw
stos
rol
shr
mov
ss
jmp
stc
push
rcr
and
jmp
add
or
and
call
xlat
mov
jmp
and
mov
pop
and
pop
arpl
and
add
jbe
sub
cs
sub
inc
sub
icebp
std
std
cmp
cmp
inc
pop
or
cltd
mov
dec
push
push
repz
imul
or
push
jo
jge
push
jecxz
lods
stos
stos
dec
rcl
rol
xchg
out
loop
lcall
std
sbb
loope
hlt
jnp
dec
cwtl
fucomip
addr16
xchg
jp
xor
jns
pop
lcall
ret
ljmp
jmp
cld
xor
jne
aam
jp
xchg
xchg
mov
mov
pop
scas
stc
nop
ror
mov
leave
and
mov
cmp
sbb
mov
sub
cmp
cmc
out
mov
inc
leave
sti
cli
incb
inc
sti
pop
lock
iret
and
cli
xchg
int
or
out
add
adc
cmp
ficompl
adc
and
xor
inc
jle
aam
aaa
ss
push
adc
inc
xchg
or
aas
inc
mov
inc
cmp
bound
pop
add
push
dec
xor
push
push
dec
cmp
push
sbb
push
inc
cmc
sbb
lods
das
inc
addb
push
imul
les
push
xchg
enter
jl
cmpl
mov
bound
jae
cbtw
xchg
mov
cwtl
in
xchg
pop
sahf
popf
xchg
and
pop
cmpsl
out
lods
xchg
ret
ret
out
ret
add
ret
js
sar
jl
cli
mov
in
mov
int
sbbl
aaa
jae
les
sub
xor
leave
das
popa
ljmp
adc
insl
sar
adc
cmp
dec
add
pop
add
in
push
push
fisttpl
or
decl
and
or
pop
sbb
mulb
and
sub
inc
add
ljmp
aas
push
es
lea
aas
or
add
sbb
dec
dec
push
xchg
dec
test
test
icebp
pusha
dec
fldenv
sbb
gs
dec
ret
dec
or
insb
imul
sub
jne
andl
xchg
into
data16
flds
inc
arpl
mov
xchg
ret
adc
xor
fwait
add
lea
cmpsl
adc
add
xchg
xor
std
out
mov
rcl
adc
xchg
mov
stc
or
lea
int
jnp
mov
sbb
xor
jae
cltd
les
mov
fld1
fmul
and
add
and
adc
lret
or
adc
cmp
movsb
mov
jmp
outsl
cld
xor
and
aad
inc
push
adc
jne
pop
pop
add
and
xor
clc
sub
push
dec
fsubs
or
cmpb
mov
jecxz
dec
outsl
int
into
dec
dec
dec
leave
out
push
imul
push
push
pop
pop
push
inc
gs
lods
das
addb
push
loop
js
cmpl
jl
cmpl
mov
bound
jae
pop
cwtl
xchg
mov
cwtl
in
jg
sahf
popf
xchg
orl
pop
cmpsl
out
lods
ja
ret
out
ret
add
ret
js
sar
cpuid
mov
mov
in
mov
int
add
adc
aaa
fadd
das
xor
add
out
xor
leave
cmc
ljmp
adc
insl
out
adc
cmp
dec
add
pop
add
loope
push
adc
or
push
jbe
pop
or
lods
jb
sbb
or
inc
sub
andl
jae
notl
daa
inc
aas
push
es
lea
aas
or
or
dec
xchg
int
dec
dec
dec
push
xchg
dec
test
lcall
mov
pop
shrl
gs
dec
ret
dec
inc
mov
add
cmp
subl
xchg
into
data16
xchg
in
loop
inc
fbstp
fcmove
lret
add
rcrb
lahf
out
mov
out
clc
nop
gs
mov
std
xchg
outsl
subl
shll
cltd
jecxz
mov
lea
loope
int
rcl
or
sbb
subl
popf
fiaddl
fsub
in
int3
inc
out
lret
outsl
inc
in
jmp
and
fisubrs
adc
cmp
dec
add
pop
add
fsubr
repz
sbb
or
hlt
sbb
aad
push
sbb
test
call
inc
xor
inc
jle
pop
mov
mov
test
sub
cmp
das
popf
lcall
data16
push
sahf
insl
inc
repz
cmp
mov
push
mov
inc
jo
lret
pop
insb
imul
insb
mov
xchg
rcrl
cmp
rol
ja
movsb
mov
test
dec
jnp
mov
shl
icebp
dec
push
xor
nop
sahf
popf
xor
xor
ret
in
add
test
adc
cltd
mov
stos
popf
adc
mov
nop
xlat
jge
in
sub
ror
jecxz
or
sbb
aad
in
inc
cltd
or
into
fld1
fmul
and
jb
out
xor
test
adc
cmc
call
cmpsb
jmp
pop
cmp
hlt
lret
enterw
dec
add
or
adc
push
and
aaa
insl
add
jno
sub
or
or
xchg
or
sbb
xchg
xor
adc
mov
inc
cmp
cmp
arpl
pop
lahf
push
cltd
and
push
push
dec
cmp
push
ret
cmp
dec
pop
pop
popf
xchg
mov
subl
push
stos
outsl
mov
xchg
mov
loope
mov
stos
insl
mov
aad
xchg
jl
iret
cmp
xchg
faddl
xchg
mov
out
xchg
xchg
cmpsl
cmpsb
call
subl
mov
les
or
testb
jecxz
test
or
and
loopne
or
sub
sub
imul
mov
ret
inc
sbb
push
cmc
ficoml
sti
cli
cmp
push
into
cmpl
adc
push
pop
adc
mov
push
sub
push
je
sbb
sbb
pusha
mov
sub
arpl
lret
lock
sub
push
es
lea
xchg
fdivr
adc
adcl
dec
cmpsb
ds
jne
inc
mov
dec
addb
push
mov
mov
cmp
lea
jnp
jo
xor
hlt
xlat
fs
cwtl
fucomip
jl
xor
jns
lods
lcall
pop
test
clc
popa
xchg
lods
lods
mov
jmp
adc
jbe
and
scas
mov
lods
and
mov
mov
add
lahf
data16
xchg
jae
insl
mov
sbb
sub
test
in
es
push
mov
push
imul
jmp
push
clc
inc
fldl
mov
loope
ror
add
adc
dec
and
push
sub
jno
popl
data16
cmp
das
addl
aaa
jle
push
push
push
sbb
nop
and
push
push
mov
add
dec
dec
popa
push
mov
inc
sahf
push
hlt
repz
test
jg
pop
fs
and
outsb
insl
repz
pusha
shlb
pop
sub
rol
add
outsb
cmpl
xchg
jbe
sub
int3
ror
icebp
mov
xor
lods
pop
popf
mov
stos
mov
add
mov
lock
out
test
xor
clc
idivl
rol
mov
mov
popw
push
mov
mov
dec
leave
fsub
mov
lcall
fldenv
xchg
int
mov
sbb
mov
sub
mov
or
fld
pop
in
idivb
inc
fs
pop
or
mov
repz
inc
std
fstps
sub
sbb
and
xor
and
push
or
cmp
dec
jo
das
lea
xor
inc
mov
popa
push
fs
lea
push
subl
pop
pop
repnz
adc
and
outsb
insl
push
pop
das
sub
xor
xchg
xchg
mov
rolb
push
jnp,pt
lods
insl
xchg
je
orl
bound
fucomp
mov
xor
dec
test
les
dec
out
out
shlb
aam
daa
and
mov
mov
shrl
xchg
int
mov
add
aad
jg
enter
or
and
cmpsb
in
adc
in
sarl
jmp
testl
mov
dec
cli
stc
cmp
in
and
or
sbb
ficomps
into
aad
pop
popl
push
sbb
imul
js
inc
push
jmp
ja
fs
das
nop
ja
dec
pushf
fs
dec
notb
aas
mov
and
or
pop
xchg
popa
push
mov
ud2
pop
lahf
imul
hlt
roll
pop
pop
repz
pop
subl
push
stos
outsl
test
xor
jle
xchg
test
dec
cwtl
cmp
jbe
mov
jg
out
xor
rcrl
fwait
mov
subl
ja
or
and
mov
jno
enter
fisubrl
into
mov
push
lret
add
sarb
mov
push
add
sahf
lcall
inc
cmp
leave
in
in
lock
in
adc
fnsave
xor
std
cld
bound
inc
lahf
jmp
les
neg
sbb
dec
jo
xor
sbb
je
call
or
sbb
push
pop
cmp
insl
daa
sbb
ljmp
aas
ds
movsb
lea
dec
cmp
popf
in
test
je
adc
xor
pop
push
gs
cmp
sbb
pop
push
dec
sbb
pushf
jnp
repnz
or
add
aas
jle
mov
xchg
es
hlt
push
jl
imul
jb
lds
test
les
stc
popa
add
mov
mov
add
mov
cmc
out
xchg
sbb
loope
push
add
ds
lret
or
lea
jb
sbb
sub
mov
in
dec
inc
mov
out
stc
ds
sub
js
mulb
pop
mov
arpl
stc
xor
push
js
and
jmp
sbb
dec
decb
jg
hlt
stc
cmp
sub
mov
daa
sbb
dec
mov
sbb
jnp
out
sub
jmp
cmp
sub
xchg
cmp
xchg
inc
fimuls
jle
shll
mov
push
cmp
aad
or
pushf
mov
cli
mov
adc
jg
cmpsl
cmp
xchg
ror
arpl
pop
rolb
mov
aas
dec
test
gs
mov
dec
mov
and
jecxz
repz
fwait
lahf
mov
out
or
negb
xchg
adc
mov
shll
daa
pushl
inc
or
or
push
mov
int
adc
adc
jmp
dec
sbb
dec
fwait
movsl
add
iret
fsubr
in
add
and
sub
pop
mov
push
inc
mul
jbe
mov
and
push
jmp
jo
test
pushf
rcll
xchg
outsl
mov
jge
test
xchg
or
imul
sbb
pop
mov
mov
jecxz
jp
shll
sub
xor
push
cmpsl
in
lahf
sahf
flds
dec
mov
fdivs
mov
cmp
sub
jg
loope
jnp
xchg
push
pop
fwait
inc
movsb
lret
stos
push
mov
xchg
adc
mov
iret
loopne
aas
adc
xor
mov
and
sbb
enter
lock
mov
inc
mov
aad
xor
mov
pop
loop
femms
fidivrl
pop
fwait
pop
das
xor
out
and
addr16
push
dec
add
incl
mov
sub
sub
push
push
jge
dec
add
ljmp
insl
leave
inc
mov
jb
jecxz
push
pop
and
ficompl
inc
jno
popl
sbb
sbb
jge
inc
sarb
push
jo
iret
insl
and
js
dec
cmpsb
xchg
dec
cmpsl
xchg
call
xor
int
and
xor
jo
pop
adc
pusha
daa
push
sbb
pop
shl
outsl
mov
test
dec
mov
aam
nop
imul
xchg
xchg
rcrl
cmp
rol
addb
jb
add
mov
leave
dec
push
xor
jnp
popf
xor
fs
add
push
xor
mov
popf
adc
mov
nop
pop
xchg
xchg
or
lods
ror
jecxz
or
sbb
aad
mov
mov
sbb
and
jecxz
daa
es
test
jmp
insl
ja
imul
fstl
fsubrl
std
cld
ds
rolb
rol
and
stos
nop
adc
and
dec
adc
int
push
adc
mov
rcrl
sbb
xor
inc
jnp
ss
rclb
xor
daa
xchg
out
inc
jns
xor
xchg
jmp
dec
xchg
int
dec
dec
dec
push
xchg
dec
test
inc
adc
pusha
xor
inc
ret
sbb
push
andl
test
dec
mov
nop
cmp
enter
jl
cmpl
mov
push
and
dec
mov
push
xchg
xchg
mov
add
add
mov
retw
ljmp
jmp
cld
xor
or
mov
jg
and
dec
enter
and
adc
int
add
xor
xor
sbb
push
out
sub
push
stos
lea
insl
ljmp
fistpll
push
dec
jecxz
mov
pop
dec
lods
xchg
and
jmp
push
push
or
dec
das
gs
shlb
mov
pop
and
imul
orl
pushf
fldlg2
sub
cmp
xchg
xor
cmp
jl
xchg
push
leave
adc
dec
dec
popa
push
mov
push
or
push
daa
fimull
push
pop
ret
addr16
dec
ret
addr16
gs
insl
insb
scas
mov
aaa
xchg
mov
xchg
mov
gs
enter
pushf
jb
dec
cmp
or
cwtl
mov
mov
jle
je
sahf
loopne
jmp
push
push
pop
cmpsb
in
scas
and
out
ret
in
mov
jnp
outsl
xchg
mov
mov
sbb
and
sbb
fcomps
imul
jae
mov
test
lods
test
les
cmp
imul
lock
in
cmp
sub
adc
mov
mov
push
add
repz
inc
or
dec
inc
push
mov
in
popf
pop
push
mov
pop
pop
insb
and
pop
and
clc
out
sub
jmp
cmp
sub
xchg
cmp
cmp
adc
or
inc
iret
popa
push
fs
lea
ss
push
push
cwtl
insl
ret
sbb
psubsb
pop
push
cmpsb
pop
mov
dec
cltd
jo
roll
ja
insl
adc
xchg
shrb
mov
mov
inc
arpl
mov
xchg
into
xor
jae
out
rorb
cltd
lock
test
add
stos
stos
in
loope
jle
xorb
mov
mov
in
add
jnp
lret
mov
pop
xlat
lret
xlat
inc
mov
push
adc
mov
xor
add
sub
sub
cmp
cmc
fcmovnu
dec
or
push
hlt
cmp
inc
orl
inc
sbb
mov
into
or
in
cwtl
pop
push
or
repz
test
int
sbb
lock
out
imul
insb
xor
jmp
ss
fcoms
cmp
dec
cmp
test
xchg
cs
dec
dec
nop
gs
mov
pop
or
outsl
jae
icebp
push
dec
sahf
repnz
inc
sbb
aam
bound
in
imul
mov
enter
xchg
adc
int
sbb
cmp
mov
jno
enter
lret
mov
pop
fsubs
xor
mov
mov
inc
adc
ret
pushl
pop
insl
stos
adc
aaa
mov
test
fwait
arpl
sbb
or
mov
iret
sbb
cltd
es
push
jmp
test
mov
call
call
out
in
das
and
rorl
mov
add
cmp
dec
pop
push
dec
sbb
loope
push
into
or
or
call
insb
add
fisubl
outsb
lods
out
inc
or
sbbb
mov
test
jg
adc
or
cmp
aas
inc
mov
inc
addr16
popa
mov
and
dec
mov
pop
cmp
push
ret
int
pop
pushf
xchg
mov
cmc
sbb
inc
outsb
insl
xor
leave
fsts
inc
ss
lods
cmp
xchg
adc
lods
lret
jmp
xchg
mov
fstp
shl
outsb
popa
pop
gs
subb
sti
xor
sbb
adc
and
lods
and
mov
mov
add
mov
sbb
loopne
jae
sbb
sub
in
cld
push
test
push
adcl
xor
pop
incb
dec
loop
sarl
and
add
idivl
sbb
dec
cs
push
lret
lea
sbb
and
js
xlat
mov
addb
add
jmp
jg
dec
push
push
aaa
sbb
les
cmp
xchg
or
cwtl
loope
dec
dec
push
push
mov
push
or
scas
es
adc
jge
gs
dec
ret
dec
pop
insb
insb
imul
ss
mov
xchg
gs
test
pop
ret
inc
dec
mov
scas
cwtl
xchg
mov
cwtl
in
dec
pushf
sahf
popf
lea
mov
xchg
nop
shll
insl
test
cltd
fdiv
ret
icebp
add
lret
and
mov
stos
or
and
fdivl
sahf
or
clc
cwtl
mov
pop
xor
sub
adc
adc
inc
xor
push
mov
xor
cmp
or
or
aas
mov
loop
adc
push
push
push
dec
sbb
cwtl
xchg
aad
ficoms
add
cltd
out
pop
ds
repnz
lret
sbb
into
outsl
outsb
sub
pop
repnz
arpl
cmpb
push
inc
and
sub
add
sub
jne
xchg
xchg
andl
push
popa
ret
scas
test
xchg
repz
nop
and
mov
pop
xrelease
stos
test
xchg
nop
stos
cwtl
jl
stc
and
and
lahf
jl
lds
dec
pop
cwtl
or
mov
fists
jb
add
mov
add
mov
mov
stos
in
fwait
jno
adc
int
adc
dec
xchg
je
lods
dec
scas
and
mov
add
pop
or
icebp
lahf
fbstp
fxch
rolb
daa
adc
fnsave
sub
push
cmp
jg
xor
xor
pop
movsl
inc
inc
fs
push
push
in
dec
dec
dec
dec
das
jns
jmp
mov
or
jg
push
add
jg
scas
push
js
mov
test
pop
cmp
cmp
das
sbb
dec
mov
add
js
repnz
cmp
addr16
push
mov
in
scas
scas
mov
aaa
xchg
mov
xchg
mov
xorb
or
pop
loope
mov
shlb
mov
fisubrs
movsl
inc
dec
push
push
roll
mov
ljmp
mov
adc
jae
adc
stos
or
bound
sarl
fidivl
sbb
jno
mov
cmp
xor
sub
icebp
mov
movsb
stc
rorb
adc
xor
push
mov
adc
testl
pop
hlt
repz
leave
ficomps
sub
adc
xor
pop
in
sub
xorb
xor
xchg
jle
push
mov
and
jp
push
xchg
pop
mov
data16
inc
mov
and
push
gs
movsb
inc
icebp
pusha
xor
les
dec
inc
lods
cmpsb
movsl
xchg
icebp
pop
xor
scas
scas
push
sub
mov
sbb
mov
dec
ds
xor
test
rolb
repz
or
rcrb
sar
mov
sbb
clc
loop
lcall
pop
leave
sti
mov
add
aam
push
dec
jne
enter
push
adc
and
inc
dec
lret
sub
adc
sub
aad
push
sub
shl
add
push
jle
and
jnp
inc
inc
push
pop
nop
bound
inc
dec
inc
xchg
dec
inc
mov
fnstsw
mov
push
xor
icebp
ss
push
mov
data16
ja
lods
outsl
outsb
jg
and
push
push
push
sub
daa
inc
aad
jge
pop
mov
arpl
pop
call
mov
or
insl
outsb
repz
mov
js
dec
bound
cltd
test
sub
inc
outsl
mov
xchg
outsb
icebp
mov
mov
or
rorl
mov
stos
lahf
movsb
mov
lcall
fdivl
xor
aad
fsub
jnp
pushf
fwait
adc
popf
mov
adc
push
stos
lods
lods
cmpsb
fwait
xor
push
jmp
imul
pop
stos
ret
stc
or
jae
test
in
mov
out
xlat
mov
mov
push
xor
sbb
mov
push
cltd
das
jae
dec
jns
sub
and
fnstsw
push
push
lock
xchg
ds
pop
and
jmp
adc
dec
dec
sti
insb
rcll
dec
mov
add
decl
mov
das
sub
arpl
dec
jae
popa
or
or
xor
jp
or
pusha
xchg
mov
dec
dec
pop
cmp
negl
test
sub
fiaddl
insl
dec
push
outsb
adc
jg
push
clc
pop
lods
lods
xchg
xchg
nop
shlb
jo
mov
pop
aaa
frstor
adcb
ds
xchg
scas
leave
lret
mov
test
pop
test
fnstenv
out
xor
call
punpckhdq
jmp
adc
lods
ret
mov
cli
stc
aad
js
loope
in
inc
int
sbb
sbb
push
jmp
loope
ss
push
ljmp
es
push
cmp
xor
push
and
aaa
pop
push
cmp
outsl
dec
add
lcall
dec
dec
add
sti
sbb
rcrb
adc
and
js
dec
sub
sbb
jbe
pop
dec
aas
adcb
inc
insb
jno
mov
and
pop
add
mov
xchg
bound
xchg
mov
or
test
xchg
cld
adc
popa
xor
mov
or
rorl
mov
sbb
pop
dec
mov
xchg
les
jb
and
and
cltd
cmp
add
xor
clc
mul
loop
fadds
std
adc
cmpsl
mov
pop
and
xor
das
push
mov
jno
mov
push
and
cmpsl
fprem
scas
push
mov
add
lcall
inc
adc
mov
mov
cs
iret
cmp
sarb
and
shll
movsb
or
pop
jnp
mov
addr16
xchg
push
and
roll
or
or
mov
inc
outsb
insl
sbb
bound
in
ds
lahf
pop
inc
inc
xchg
sub
nop
xor
pop
push
mov
dec
cmp
mov
xchg
mov
enter
jge
scas
lods
test
xchg
xchg
jbe
push
loope
insl
dec
xchg
pop
mov
mov
iret
into
int
lret
fstpt
mov
xor
or
add
leave
popa
out
in
in
mov
jecxz
lcall
add
sti
cli
mov
sbb
int
fidivrl
sbb
cmpsl
pop
xchg
into
loope
subb
je
mov
loopne
or
mov
and
push
cmp
mov
xor
dec
leave
mov
gs
adc
das
dec
push
dec
cmp
fstpl
cs
in
fcompl
insl
push
nop
and
pop
dec
push
ljmp
imul
aas
or
dec
jp
in
insb
xor
dec
xchg
lcall
repz
xor
dec
inc
sar
pushf
fwait
das
shlb
adcl
jnp
repz
stos
test
aam
mov
sarb
test
fdivrs
aad
cmpsb
mov
jge
sub
jnp
pushf
fst
adc
jmp
sub
cmp
fwait
sahf
movsb
dec
cmc
adc
inc
mov
cli
stc
cs
sub
or
sbb
xchg
pop
push
sarb
out
cmp
lahf
jns
inc
add
dec
jno
cmpsb
nop
sub
jne
jl
xor
cmc
cld
mov
mov
scas
sub
stc
adc
push
adc
pop
add
pop
out
sub
mov
or
cmp
bound
pop
dec
pop
or
test
rclb
push
ficomps
sbb
push
add
inc
xor
cli
inc
sub
cmp
test
mov
pop
hlt
test
cmc
xor
inc
xchg
mov
roll
dec
mov
xchg
hlt
add
jl
pop
pop
push
mov
movb
cmp
jns
push
inc
rcrl
sti
mov
jbe
inc
int
frstor
xchg
xchg
xor
repz
jb
mov
adc
ss
mov
add
push
xchg
bound
pop
div
jnp
mov
and
shrb
or
sub
call
lea
adcb
int3
outsb
push
adc
out
sbb
in
nop
lret
cmc
mov
decl
fstl
push
xchg
aas
or
stos
push
add
loope
pushf
push
dec
daa
push
or
xlat
sahf
ret
fistl
adc
and
or
ds
outsl
cmc
cs
and
sbb
mov
push
sub
jp
xor
push
dec
add
aas
push
dec
pushf
mov
lods
out
fdivr
cmp
cmc
mov
push
cmp
jno
xchg
or
andb
mov
imul
mov
xor
xlat
mov
fldcw
sahf
popf
mov
arpl
cld
jae
adc
out
out
movsl
mov
aam
pop
and
pop
mov
aad
inc
push
test
loop
sbb
lret
xor
out
jecxz
andl
loope
dec
jge
daa
dec
ret
mov
sbb
lods
jmp
loope
adc
xchg
inc
aas
in
jmp
xor
cmp
mov
out
ret
dec
dec
dec
add
lods
pop
push
xor
stc
ja
pusha
pop
add
fisubl
ss
out
adc
inc
aas
and
test
outsb
insl
adc
push
push
rcr
inc
es
jge
sub
push
xor
mov
mov
cwtl
lea
dec
adc
or
mov
mov
insb
movsb
scas
lods
rcrl
cmp
test
mov
mov
in
addb
mov
xlat
mov
pushf
cltd
test
pop
add
add
lods
stos
rsm
fs
xor
rcl
adc
pop
push
mov
scas
testl
and
pop
int
mov
xchg
fcom
incl
cld
iret
loopne
inc
rcll
fld1
into
push
int
mov
in
lods
ljmp
xchg
sahf
xor
popa
fnstenv
dec
sbb
add
or
and
jno
adc
and
mov
or
ss
push
jl
test
aas
addl
aaa
ss
xchg
push
push
inc
push
xchg
lods
sbb
stc
cmp
mov
mov
adc
pop
pop
or
pop
push
jg
xorl
sbb
mov
jl
xorl
mov
mov
add
int
lret
mov
movsl
xlat
insb
scas
je
jb
mov
add
sbb
gs
ret
push
pop
lods
lods
sub
stos
mov
stos
or
adc
mov
mov
sbb
and
insl
mov
jp
fsub
mov
jno
mov
sub
cwtl
out
add
jg
cli
pop
loopne
fucomp
sti
push
jge
div
faddl
sub
mov
cli
stc
adc
aam
and
popa
add
or
and
jno
adc
and
mov
or
ss
sbb
push
sub
sub
push
out
aas
xchg
mov
xor
inc
sbb
int3
clc
mov
adc
add
pop
dec
push
ret
fwait
sbb
sub
fsubrs
lods
mov
xor
rol
ja
rcr
or
enter
push
inc
loope
je
cmp
cwtl
lret
jns
xor
out
dec
fwait
lcall
jl
add
add
xchg
pop
dec
in
in
cltd
mov
cmpsl
mov
push
adc
int3
and
addl
clc
data16
or
mov
push
shrl
mov
inc
daa
aad
stos
ljmp
ss
or
or
imul
pop
les
lret
push
js,pt
or
das
mov
repz
sub
and
push
jmp
loope
das
cmp
or
aaa
sbb
xchg
add
cmp
mov
arpl
mov
dec
pop
mov
inc
sbb
xchg
xchg
icebp
pusha
sbb
xchg
xchg
es
cmpsb
movsl
jge
aam
shrl
fistps
jbe
ds
mov
rol
mov
pop
int3
enter
cmp
movsl
adc
inc
xchg
xchg
fsubrs
aad
jae
mov
mov
ficoml
add
das
scas
lods
lods
mov
jmp
rol
cmpsb
out
cmp
mov
pop
stos
scas
cmp
add
add
push
mov
sbb
mov
and
aad
rcl
es
inc
lea
sub
cmc
and
stos
movb
or
cmp
loope
adc
adc
or
dec
dec
pop
ds
and
push
gs
pusha
sub
add
push
pop
push
adc
cs
sub
imul
mov
jg
mov
bnd
jg
inc
adc
sbb
push
cmovl
and
mov
sbb
mov
jnp
addl
pop
hlt
mulb
mov
inc
sarl
jnp
andb
enter
xor
icebp
repz
push
in
fcmovu
push
lahf
sahf
mov
fisttpl
in
das
dec
add
out
or
std
dec
leave
rcl
aas
pop
inc
ret
jmp
stos
test
fisubl
dec
inc
stc
in
lds
pop
movsb
jae
or
push
inc
inc
int
push
mov
es
xor
jb
pop
shrb
xor
sub
ds
and
cmp
fadd
arpl
push
pop
loopne
or
inc
stos
pop
sub
dec
icebp
pusha
and
and
push
push
mov
xorl
inc
jle
cld
push
push
das
inc
sub
xchg
pop
sbb
arpl
in
pop
push
aaa
leave
jnp
lea
xchg
xchg
cmp
outsb
outsb
and
ja
cltd
sahf
cwtl
arpl
adcl
aas
push
in
jbe
lret
shlb
hlt
and
mov
test
mov
bound
mov
jp
iret
rcll
int
fbstp
cmpsb
movsl
outsb
xor
ret
mov
aam
ret
lcall
pop
leave
adc
mov
in
shrl
push
fldenv
adc
mov
pop
aam
sbb
sbb
sub
xlat
sbb
and
xor
push
pushf
lock
popa
cmp
imul
pop
ret
fs
movsl
or
std
lock
pusha
push
push
pop
sub
pop
push
pushf
enter
or
push
js
inc
sub
sbb
jbe
pop
jo
das
es
jge
push
push
push
inc
popf
adc
pop
mov
dec
inc
cmp
pop
lods
repnz
pop
aam
push
out
push
es
cmpsb
fwait
mov
outsb
jge
hlt
loop
stos
stos
ds
xor
cmp
cli
es
fisttpll
mov
jecxz
jl
aam
int
bnd
into
rclb
call
out
sbb
mov
cmpsl
mov
mov
movsl
pushf
mov
pop
lret
and
mov
push
mov
and
out
jecxz
mov
mov
clc
push
sbb
mov
add
das
cs
std
mov
xor
test
mov
in
lock
inc
jmp
lods
adc
repnz
dec
pop
insb
aam
hlt
or
lock
sub
adc
or
imul
xor
lods
leave
cmp
mov
leave
push
fs
popf
bound
inc
ds
inc
iret
sub
pusha
inc
aaa
leave
mov
ret
mov
xorl
pop
popa
dec
lock
xorl
lods
icebp
clc
dec
pop
aaa
ja
into
mov
lcall
dec
cmp
imul
leave
out
dec
mov
mov
fnstcw
es
scas
jb
push
add
cwtl
call
mov
outsl
stc
cmc
out
in
sub
les
mov
enter
test
fwait
xor
iret
cwtl
rcl
aam
and
or
out
cmp
mov
in
inc
push
test
call
es
sbb
cmp
jmp
fistpll
ss
mov
insb
clc
out
int
inc
inc
lods
jmp
sbb
or
daa
pop
pop
push
jbe
pop
pop
sub
and
push
add
jne,pt
adc
sub
pop
aad
jne
imul
inc
cmp
enter
cs
test
push
xchg
sahf
mov
add
xchg
cmp
push
cmpsb
movsl
ss
loop
pop
cmc
dec
sbb
xchg
mov
cmp
jns
cmp
in
xchg
loope
mov
pop
rcr
xlat
scas
loope
xchg
add
sarl
lock
movsl
cli
add
out
out
std
lahf
sub
push
rcl
shrb
cld
mov
push
test
adc
fwait
pop
push
or
sbb
mov
pop
push
loope
dec
int3
iret
cmpl
xchg
das
fsqrt
push
or
xchg
push
or
cmp
ljmp
test
int
cli
adc
pop
push
or
sbb
aaa
sbb
jge
data16
aas
jbe
inc
sub
mov
cmp
jne
inc
push
je
jp
push
or
ret
pop
pop
nop
test
push
pop
ds
pop
jmp
stos
pusha
pop
pop
rcrb
inc
test
cltd
xchg
dec
sub
cmc
pop
sub
test
mov
cmp
inc
jns
dec
inc
sbb
sahf
rcl
in
ror
repz
xchg
loope
aad
test
cmpsl
xchg
nop
out
pop
out
popa
xor
movsl
xchg
enter
jl
aam
ror
imul
jmp
mov
femms
fidivrl
pop
fwait
jb
loopne
out
and
addr16
jecxz
and
gs
cs
cmc
and
idivl
jo
sti
xchg
mov
cmp
les
popf
pop
jno
or
or
cld
xchg
xor
cs
jp
sbb
data16
outsb
adc
jl
cld
push
inc
roll
lea
sub
lea
add
push
mov
cmp
ret
outsb
dec
inc
jae
pushf
fwait
ja
cltd
dec
and
cmpxchg
ja
mov
jo
aad
mov
into
pushf
jle
mov
jbe
jno
int3
jns
movsl
test
jae
lods
lods
test
pop
test
mov
fst
mov
lea
out
in
jle
and
cmpsb
cmp
je
cld
adc
cmpsb
mov
shll
imul
push
lods
ss
pusha
jl
inc
pop
nop
push
sbb
and
mov
inc
rcll
das
pop
sbb
mov
pop
add
cmp
push
inc
adc
or
push
icebp
into
add
les
cld
lcall
pop
push
jno
jb
shl
test
loop
jnp
cmp
int
insl
xor
mov
loope
pop
jg
xchg
xchg
xchg
push
fdivrl
aad
push
or
fs
inc
cmpsl
out
mov
mov
popa
lock
xchg
andl
push
ja
outsb
repz
xchg
pop
add
mov
imul
pop
pusha
into
push
mov
mov
dec
sbb
jl
iret
push
sbb
ror
into
ret
sub
inc
push
xor
jmp
mov
mov
cmpsb
movsl
xchg
mov
clc
add
mov
test
xchg
sarl
sarb
cld
sti
rcl
or
sarl
fidivl
add
mov
in
int
or
sbb
adc
js
in
in
jb
bound
sub
cmp
lcall
or
push
ljmp
cmp
pop
sbb
icebp
jmp
push
adc
stc
jmp
pusha
pop
orb
addr16
jp
addb
es
cli
push
push
aaa
sbb
test
stc
mov
mov
frstor
mov
mov
adcl
dec
arpl
lcall
ret
jg
imul
or
aam
cmpsw
adc
mov
inc
vaddps
jb
clc
xchg
xchg
mov
jae
push
xor
cwtl
mov
aad
mov
clc
mul
loop
stc
or
lret
lret
in
cmpsl
mov
add
and
xchg
sub
lret
push
mov
jno
mov
push
and
cmpsl
fprem
scas
cmpsb
cmpsb
add
out
sub
mov
cs
adc
mov
inc
push
push
or
bound
push
cmp
and
stc
add
popa
out
dec
dec
dec
loopne
push
xlat
mov
jmp
and
mov
pop
and
or
inc
mov
jo
outsb
arpl
imul
incl
push
push
push
xor
xchg
fnstsw
jl
repz
xchg
mov
mov
repz
fs
fwait
lcall
ret
mov
mov
lret
push
cmpl
sbb
mov
xchg
mov
lds
or
xor
xchg
cmpsl
jb
movsb
lds
dec
call
add
add
fsubrs
add
mov
lcall
repz
xor
loop
and
outsb
adc
addr16
lahf
xlat
mov
mov
fucomi
inc
das
mov
in
push
lret
mov
into
adc
xor
inc
aas
ds
dec
int3
push
mul
adc
push
mov
or
cli
adc
pop
push
fistl
and
cs
xor
daa
es
or
loop
xor
and
sub
cmpb
xor
jno
xchg
dec
movsb
jbe
jl
push
mov
in
cmpsl
aaa
lea
push
popa
popf
pop
push
repnz
pop
mov
pushf
fwait
das
push
dec
xorl
test
pop
repnz
test
push
orb
xchg
shlb
jno,pn
iret
jno
jb
mov
xor
adc
lahf
lahf
sahf
xor
mov
loopne
cmpsl
xchg
mov
fs
shlb
outsb
stos
movsl
adc
mov
jns
push
rol
mov
jo
enter
pop
push
pop
jb
iret
into
adc
or
mov
mov
jle
enter
clc
das
push
add
mov
xchg
es
ret
sub
xchg
in
dec
xor
mov
mov
cld
add
into
femms
mov
std
fimuls
or
sbb
sub
push
mov
inc
inc
mov
xchg
outsl
outsb
cmp
mov
xor
inc
aas
and
cmp
mov
ljmp
nop
popl
pop
hlt
fwait
imul
ret
or
pop
pop
mov
xor
push
mov
pop
sarb
ja
pop
les
mov
mov
sbb
inc
mov
lea
fistpl
xor
xchg
add
lock
movsl
les
add
test
or
mov
sarl
mov
popf
mov
pop
in
shl
and
and
int
cld
jecxz
fldl
sbb
xchg
aaa
iret
sahf
sbb
out
inc
push
mov
and
adc
inc
notb
adc
sbb
stc
or
dec
sbb
push
and
adc
or
and
fidivs
push
mov
or
repz
mov
xchg
sub
sbb
imulb
ljmp
sub
xor
out
test
jge
ss
push
dec
cmp
mov
pushf
push
pop
nop
push
hlt
dec
xchg
push
cmpsl
sbb
pop
popa
mov
xchg
pop
mov
sahf
fwait
jo
pop
xor
stos
nop
fidivrl
outsb
inc
out
jnp,pt
popf
out
xchg
in
push
inc
stos
dec
mov
notl
xchg
add
out
loopne
sarl
jo
lea
out
adc
out
cmpsb
adc
mov
jp
sti
rcl
sarb
or
test
or
and
out
xor
jmp
xlat
or
dec
sbb
inc
jecxz
fiaddl
out
sbb
sub
dec
add
fs
jns
xlat
fisubrs
clc
testl
adc
dec
add
arpl
data16
add
rcll
decb
sbb
sti
jno
pop
std
inc
xor
cli
inc
icebp
sbb
pop
or
jle
addr16
cmp
cmp
push
mov
dec
dec
sub
ljmp
cmp
dec
xchg
int
mov
pusha
mov
repnz
jmp
cmp
mov
pop
loop
andl
jg
push
ja
and
jo
mov
fbld
jns
mov
inc
je
shll
lea
scas
stc
fsubr
fs
lea
cltd
lock
cmc
cmp
lods
lods
adc
cmc
div
cmc
lret
xlat
dec
and
test
mov
and
ffree
mov
xlat
or
loope
mov
cmpsl
xor
sahf
fucomi
inc
outsb
fsubp
in
push
ss
cmp
out
and
inc
xchg
shl
adc
fistl
fcmovb
push
sti
cli
lock
mov
inc
inc
pop
inc
sbb
cld
push
and
pop
push
cld
sbb
adc
pop
pop
xor
inc
data16
outsb
insl
and
push
js
xchg
adc
xchg
cmp
inc
lahf
out
xchg
test
dec
pop
nop
shll
std
dec
push
push
arpl
cmp
xchg
bound
js
push
test
xchg
xchg
rcrl
lcall
jbe
jge
or
xchg
fiaddl
loop
cmpsb
xor
ret
std
lret
mov
movsl
fcompl
xor
ficoms
call
pop
add
test
pop
xor
test
or
rcl
mov
enter
rcrb
jge
ror
xchg
jno
lret
xorl
mov
clc
lock
mov
sbb
push
daa
mov
inc
xor
ja
adc
in
dec
xor
pop
cmp
xlat
repz
jo
in
and
pop
or
mov
mov
je
addr16
cmp
and
push
sbb
cs
inc
adc
mov
aaa
inc
jge
xor
xor
inc
mov
inc
jl
sub
mov
dec
dec
push
xchg
xchg
sbb
pop
pop
pop
insb
sahf
xchg
xor
orl
lds
cwtl
push
lods
lods
mov
cltd
mov
push
mov
outsl
inc
mov
mov
and
leave
fsubrs
stos
jno
rorl
out
dec
test
int
mov
test
cmc
jns
cltd
cmpb
mov
mov
sub
lret
pop
lret
sub
push
xor
clc
push
sbb
cltd
cmp
sti
shlb
fs
sub
sub
hlt
fistpl
dec
xchg
push
or
arpl
data16
sti
adc
arpl
push
mov
daa
dec
add
push
hlt
repz
sbb
pop
sub
jg
imul
stos
xlat
jp
js
pop
aad
jne
imul
jl
out
pop
repz
dec
int3
clc
mov
cmp
hlt
lcall
dec
fs
fwait
lcall
test
cmp
sub
mov
js
shll
addr16
test
xor
mov
loopne,pn
xchg
mov
lods
aad
neg
mov
nop
movsb
add
lock
fsub
mov
cmp
dec
loope
lcall
shrl
mov
xor
into
loop
push
add
and
ss
fadds
mov
inc
es
cmp
fcmovu
clc
sbb
test
jmp
sbb
sub
jb
cwtl
sub
or
movl
popa
out
incl
add
pop
or
or
sbb
mov
fimull
jno
push
add
insb
js
inc
inc
ljmp
xor
sub
push
data16
push
ds
cmp
cmp
inc
lahf
out
xchg
repnz
idivl
inc
cmp
xor
insb
sahf
push
jne
lcall
ss
pop
hlt
loop
stos
stos
test
cmp
sbb
jbe
int3
add
das
ror
repz
dec
xchg
cmpsb
mov
xor
cmp
add
mov
fdivl
outsl
mov
retw
imull
add
and
add
dec
or
sbb
mov
mov
loope
xchg
adc
mov
enter
aad
sbb
jns
in
lret
xchg
daa
cld
dec
test
push
adc
mov
in
add
jge
jo
pop
pop
stc
xor
mov
and
sti
bound
cltd
hlt
adc
sbb
orb
test
pop
pop
adc
adc
addb
dec
mov
cmp
std
add
adc
push
xchg
cmp
aas
ds
dec
ficomps
repnz
sub
test
pop
mov
sbbb
cmpsl
xchg
cs
sahf
flds
add
mov
mov
jo
loopne
ja
aas
aaa
test
mov
jecxz
xchg
mov
push
sub
add
xchg
je
scas
out
xchg
fwait
lcall
mov
jmp
enter
enter
aam
cltd
fiaddl
cmpsb
lock
std
cld
scas
lock
stos
lods
aas
or
mov
adc
or
mov
test
lahf
fsubr
inc
dec
out
adc
int3
cmp
cld
push
cmp
clc
divl
add
and
sub
inc
mov
leave
fisubrs
lret
or
cmp
jae
sti
and
pop
repz
js
sbb
jg
or
or
add
aaa
andl
incl
sbb
mov
lds
mov
mov
jbe
adc
fwait
xchg
xor
pop
lcall
xchg
test
cmpsb
movsl
jp
pop
mov
insl
scas
lods
test
pop
aaa
xchg
enter
rorb
insl
test
mov
icebp
jns
nop
jp
jbe
es
pusha
mov
push
xor
fisubrl
lahf
sahf
movsb
lds
mov
xchg
mov
sahf
xchg
sbb
jmp
ss
shl
stc
imul
mov
rcrl
or
stos
jmp
mov
inc
orb
mov
sbb
mov
in
int
push
jp
sbb
adc
js
in
in
cli
cwtl
sub
mov
xor
std
jnp
mov
dec
inc
adc
push
and
neg
cmpsl
dec
dec
sub
sbb
xor
pop
std
fstps
and
xchg
mov
jle
xor
test
push
fcomip
aaa
dec
push
insb
pop
mov
aas
dec
add
lea
push
movsb
jns
or
or
mov
je
xor
xchg
stos
inc
es
pop
sub
inc
outsb
aam
push
xor
ja
mov
mov
mov
mov
xchg
mov
jno
adc
lret
mov
xor
call
mov
sahf
pushf
std
arpl
add
pop
xchg
pop
xor
mov
push
jl
popf
xchg
ror
dec
mov
sub
pop
push
stos
mov
mov
or
out
js
adc
and
adc
inc
pop
rcrl
orl
xor
cli
in
and
cmp
jle
push
jl
push
jns
add
or
jecxz
hlt
movsb
mov
jb
adc
push
pop
nop
xor
hlt
or
push
xchg
pushf
ficompl
test
pop
or
aas
sub
inc
and
notb
jmp
dec
mov
xor
jnp
push
mov
cwtl
js
dec
dec
mov
popa
cwtl
lea
and
popf
imul
dec
add
outsl
jle
mov
stos
push
sub
mov
push
push
xchg
shl
jne
xchg
in
push
bound
mov
xchg
mov
lret
jl
loopne
and
mov
retw
roll
pop
subl
jle
xor
push
mov
adc
movsb
sbb
inc
pop
push
lods
sub
jecxz
int3
push
mov
call
jae
jnp
mov
fadds
fld1
shlb
fidivl
leave
sahf
push
lock
fnstenv
dec
push
cmc
cmc
adc
inc
add
or
add
cmp
add
push
or
test
pop
je
xor
sub
sbb
shll
sbb
sub
push
dec
push
js
jp,pn
aaa
aas
ds
xchg
cmp
cmp
xchg
dec
inc
xor
pop
push
sbb
push
xor
sub
sbb
imul
std
insl
outsl
outsb
mov
xchg
dec
ss
mov
inc
ror
jge
cmpb
mov
loope
mov
xchg
xchg
pop
je
xor
mov
popa
pop
cltd
fneni(8087
inc
mov
aas
cltd
scas
lods
xchg
jmp
stos
mov
xchg
push
mov
mov
mov
enter
xchg
int
dec
movsl
or
loop
fst
xchg
jb
pmovmskb
fnsave
sbb
adc
add
add
fsubrs
aaa
ss
bound
cli
stc
out
lock
inc
adc
or
add
dec
dec
dec
insl
lods
incl
in
repz
adc
icebp
dec
inc
inc
daa
or
push
adc
arpl
std
xchg
sbb
push
xchg
cmp
js
inc
fs
mov
push
out
nop
pop
cmp
clc
mov
xor
push
lahf
sahf
popf
xchg
int3
scas
mov
cmpsl
cmpsb
add
or
push
mov
mov
mov
push
loope
push
mov
xlat
outsl
push
notl
daa
jb
mov
jmp
inc
and
fwait
addr16
out
adc
out
cltd
xchg
sub
imul
add
das
and
cli
stc
rorb
adc
or
popf
cld
cmc
xor
mov
bound
jae
cmpsb
into
cmpsb
add
stos
pop
inc
inc
call
clc
sub
pop
cmp
mov
popf
in
cli
popa
scas
dec
cmp
scas
ds
shlb
or
aas
pop
push
hlt
sbb
jnp
jnp
fistps
jno
pop
pop
or
test
sub
es
sub
mov
cmp
add
icebp
xor
mov
mov
cmp
stos
insl
xor
xor
mov
gs
dec
pop
rol
shrl
push
test
xor
push
rclb
mov
out
enter
cmc
jne
mov
xchg
mov
jl
out
jb
in
mov
cmp
add
adc
jmp
cmpsl
sahf
mov
cmc
adc
mov
int
std
leave
test
push
add
adc
ss
out
lods
add
jb
loope
ss
push
les
das
sbb
dec
je
in
cs
out
daa
inc
push
push
push
push
lds
push
cmp
cmp
iret
and
add
repz
dec
fistpll
imul
sahf
adc
fstpl
push
pop
add
add
xchg
cmp
push
icebp
mov
push
xchg
adc
push
inc
enter
daa
fwait
adc
xchg
icebp
dec
push
hlt
cmp
push
insb
in
movsl
mov
scas
iret
mov
push
cmp
jns
scas
lods
pop
icebp
jmp
leave
push
pop
or
mov
mov
outsb
push
fdivrl
sbb
fisubrs
xor
xchg
xchg
out
mov
outsl
and
fsts
mov
clc
mul
loop
cltd
out
add
lret
and
call
stos
dec
adc
adc
mov
push
test
mov
jae
sbb
jecxz
or
sbb
sub
fiadds
lock
rcll
sub
sub
and
ss
out
sub
xor
adc
push
sbb
sbb
aas
lods
sti
push
mov
mov
dec
pop
pop
or
ret
popw
and
pop
xorl
push
inc
jl
notb
xor
jl
cvtps2pd
repnz
dec
dec
pop
cmp
shr
mov
repz
or
dec
fcoms
xor
scas
scas
jns
inc
cmp
mov
cmp
jmp
sub
movsb
mov
or
pop
cwtl
mov
fmul
mov
push
mov
out
mov
cmpsb
movsl
outsb
xchg
in
int3
imul
ljmp
shlb
cld
pop
pop
jb
mov
iret
mov
loope
aas
in
icebp
in
je
sbb
std
out
lea
jbe
sbb
sarb
inc
inc
inc
inc
sub
dec
sub
cmp
fstpt
mov
mov
pop
push
in
loopne
sbb
lea
xchg
in
jbe
jae
adc
stc
daa
mov
pop
add
sub
ss
sub
inc
orl
jo
outsb
sbb
cld
rcll
inc
dec
xchg
cmp
xor
sub
push
xor
dec
aas
popf
lock
xchg
addl
popf
push
jo
cltd
test
fs
mov
and
addr16
int3
mov
aam
fistps
jl
loop
scas
xchg
inc
jecxz
pop
jmp
jae
rcrb
mov
jb,pn
mov
lret
stos
mov
rcl
imul
xchg
xchg
mov
dec
adc
mov
mov
test
mov
push
adc
xchg
leave
call
jae
mov
in
inc
dec
or
out
mov
push
fcomps
add
loopne
xchg
aaa
and
push
inc
aas
jmp
cmp
testb
lock
push
or
test
dec
inc
inc
pop
cli
out
push
repnz
pusha
xchg
dec
mov
inc
inc
imul
sub
mov
popf
push
push
push
xchg
push
jno
mov
jl
jp
pop
mov
mov
dec
jbe
or
mov
out
inc
popf
dec
fs
fwait
lcall
jo
jbe
dec
ljmp
adc
pop
sarb
mov
push
xor
shrb
dec
xchg
pop
xor
xor
mov
ja
pushf
fwait
out
xor
fcmovu
insl
hlt
inc
test
notl
scas
fs
enter
jge
push
xchg
rcll
cwtl
lret
std
jb
btr
popa
insl
cld
fisubs
out
mov
push
or
out
lods
out
adc
popa
inc
imul
cmpsb
add
jecxz
out
out
mov
push
cld
pop
clc
neg
xor
push
jle
std
arpl
cmp
sbb
dec
jae
push
or
or
xchg
je
addr16
xor
jg
push
hlt
das
cs
inc
andb
push
dec
int3
jbe
aad
sbb
jg
jge
lods
pop
adc
xchg
nop
sub
cli
mov
xchg
sub
xor
mov
pop
lcall
out
adc
mov
lret
dec
ss
or
xchg
xchg
xchg
or
mov
lods
jmp
idivb
mov
xorb
mov
mov
pushf
sahf
cmp
adc
or
mov
or
pop
stos
test
push
div
jns
push
cmpb
aad
lods
sbb
sbb
or
sbb
inc
sbb
mov
into
lds
sbb
imull
xor
es
shl
ljmp
ss
inc
rcrl
pop
cmpsb
inc
inc
lret
loope
sbb
sbb
mov
repz
sub
and
cmp
inc
mov
outsl
outsb
cmp
incb
or
cmpb
lods
nop
or
mov
scas
mov
mov
divb
daa
ficomps
pop
push
mov
pop
cmp
push
mov
scas
pop
repnz
or
pop
rcrl
sarb
ljmp
loop
xchg
dec
jecxz
int3
lret
ret
int
pop
jnp
repz
fwait
lahf
mov
dec
mov
bound
add
xor
pop
jmp
xchg
ror
dec
out
mov
popw
push
mov
loopne
sbb
and
mov
loop
pmaxsw
lds
imulb
incb
and
mov
fucomip
inc
xchg
aaa
ss
cmpsb
dec
adc
std
repz
xchg
lods
lds
cmp
lret
or
test
xchg
je
xor
inc
sbb
cltd
lds
in
mov
push
imul
xchg
xchg
xor
jp
in
push
mov
lea
xchg
xchg
loopne
mov
jbe
sahf
xor
popf
addr16
in
scas
scas
jns
shrl
push
xchg
mov
rol
mov
jmp
int
xchg
mov
shlb
int
lret
lret
fsubr
adc
sub
pop
fwait
add
inc
out
add
arpl
and
jecxz
enter
aam
push
pop
inc
iret
adc
sti
loopne
or
cwtl
cmp
int3
mov
and
or
or
pop
aas
loopne
mov
xchg
push
adc
rclb
daa
es
sbb
imul
mov
mov
adc
aam
inc
fs
inc
movsl
pusha
adc
adc
adc
cmpsl
js
sub
punpckhwd
das
cs
cmp
mov
movsb
jbe
dec
xchg
xchg
xchg
cs
shufps
repnz
xchg
mov
push
cmp
jmp
xor
add
push
lcall
push
dec
fs
shll
stos
xchg
jo
aad
mov
into
pushf
mov
xchg
jbe
inc
int
jns
movsl
test
jae
lods
lods
test
ficomps
mov
call
mov
lahf
jns
out
in
jle
and
cmpsb
cmp
je
cld
adc
cmpsb
mov
dec
mov
lret
mov
lahf
jno
mov
testb
ja
daa
es
test
cli
xor
cs
fs
ss
inc
adc
cmp
dec
mov
and
arpl
sbb
dec
sti
adc
mov
and
imul
adc
or
test
outsb
insl
and
lret
sbb
and
jne
daa
push
xor
xor
flds
pop
lret
cmovl
xor
push
push
lock
mov
push
and
arpl
lcall
es
movsl
icebp
pop
push
scas
scas
push
xor
mov
outsl
data16
mov
int
xchg
xchg
jne
cs
lret
mov
sub
jb
lods
lods
adcl
cmpsl
mov
out
mov
rorb
in
jge
and
movsl
cmp
cmpl
sti
add
movsl
mov
dec
nop
int
xor
or
xor
sbb
push
lahf
loope
push
sbb
xchg
daa
es
mov
shr
aad
mov
mov
and
scas
sbb
std
or
add
cltd
cmp
dec
sbb
sbb
dec
dec
inc
jge
dec
pop
pop
push
xor
pusha
pop
pop
xchg
aad
dec
es
pop
mov
inc
inc
and
test
outsb
insl
adc
xor
inc
aas
dec
cs
jp
fxtract
xchg
pop
mov
mov
mov
cmpsl
sahf
lock
fs
or
outsb
movl
jg
jbe
imul
mov
sti
cmp
mov
movsb
sub
je
repz
ja
xchg
leave
scas
or
sub
xor
xor
or
fld1
insb
dec
inc
xorl
scas
in
jmp
es
and
adc
das
cmp
pop
push
mov
mov
mov
int3
or
popf
hlt
repz
sub
xor
pop
pop
xchg
daa
sub
stc
mov
sub
cmp
jg
andb
cli
stc
cmp
mov
inc
inc
lret
inc
xlat
mov
jno
leave
push
pop
adcl
shl
icebp
pusha
out
add
push
ret
add
orl
inc
iret
insl
and
js
dec
cmpsb
jns
ds
or
daa
fwait
adc
xchg
icebp
jl
hlt
cmp
push
insb
in
movsl
mov
scas
iret
mov
push
cmp
jns
scas
lods
pop
icebp
mov
rorl
pop
mov
int
mov
mov
movl
leave
sar
jnp
jae
jno
add
mov
call
jns
add
out
xor
sbb
div
cltd
ficompl
ds
les
or
and
shlb
pop
idiv
je
icebp
jge
mov
jmp
xor
mov
jb
inc
xor
sar
imul
lock
popf
ds
pushf
push
arpl
testb
stc
inc
inc
and
repz
out
ss
out
xor
pop
inc
shrb
frstor
xchg
es
hlt
jg
xchg
outsl
and
frstor
and
jno
dec
dec
mov
mov
mov
inc
adc
lock
pop
sub
xor
insl
pusha
mov
nop
scas
insl
cmp
jge
rol
mov
mov
iret
mov
loope
lret
xor
xor
jno
fisttps
insl
inc
ret
ret
divl
je
stos
xor
repnz
xchg
ljmp
pop
std
cld
scas
lock
stos
lods
pop
andl
mull
aam
push
or
ljmp
ljmp
int3
cmp
out
jmp
stc
inc
in
sbb
ficompl
push
inc
movb
sahf
pop
push
add
jmp
cld
push
cmp
or
in
push
push
xor
out
mov
pop
pusha
dec
add
pop
rolb
sub
aaa
lea
aas
push
xchg
jg
sbbb
inc
push
or
xchg
sub
mov
mov
xor
mov
ljmp
subb
inc
xor
mov
into
inc
mov
aam
scas
mov
mov
fsts
sub
sub
test
out
jmp
mov
incl
out
pop
test
push
test
div
cmc
loope
mov
cltd
sti
sti
cli
lock
psrld
imul
push
adc
and
fcmovnu
loop
fcoml
push
and
xor
ljmp
aaa
ficompl
xor
pop
jmp
enter
mov
outsb
inc
loop
repz
add
dec
pop
push
fcmovne
jb,pt
lea
sbb
and
push
sbb
test
das
cmp
idivb
push
mov
jne
das
jg
sbb
jge
mov
xchg
sub
call
sbb
or
push
repz
cld
divb
mov
sbb
jle
stos
insl
retw
ret
sbb
lods
lods
mov
xchg
cmp
xchg
mov
cld
sub
nop
or
fnstcw
loope
iret
add
xchg
int
aad
cmc
pusha
xor
in
mov
insb
ja
xorl
in
adc
call
jp
jnp
mov
ljmp
loop
sbb
int
push
add
outsl
sahf
icebp
mov
pop
pop
xchg
sub
or
inc
inc
stos
sub
aad
mov
push
or
cmp
dec
inc
mov
inc
es
push
and
dec
dec
adc
fldt
aaa
jb
clts
xchg
mov
ljmp
xchg
sbb
outsl
outsb
pop
sub
pop
cmp
jbe
add
sti
cmp
cmp
and
push
stos
int
pusha
mov
cmp
cwtl
xchg
xchg
dec
andl
push
sarb
cmpsl
jl
test
pop
hlt
sub
mov
cwtl
add
leave
xchg
mov
leave
movsl
inc
mov
sub
shl
scas
cld
pop
push
push
repnz
out
in
lcall
loope
dec
xor
test
push
div
lcall
mov
cmp
cli
nop
mov
mov
js
das
lret
adc
in
jbe
movsb
add
sbb
sbb
pop
sub
inc
inc
insl
mov
fdivl
sub
sub
add
outsb
aas
ds
decb
movsb
dec
inc
inc
sbb
fsubrs
das
iret
or
inc
jge
sub
pop
push
fstpt
sub
hlt
add
cmp
daa
pop
ds
imul
addl
jns
pop
pop
notl
movsl
mov
sub
sub
arpl
inc
push
lahf
xlat
popf
jl
push
push
cmp
dec
dec
sub
cmp
test
xor
pusha
ret
sub
or
jbe
and
mov
lcall
ljmp
loop
int
in
dec
push
xchg
pusha
adc
enter
aaa
lcall
ret
cs
lock
popf
fisubs
xchg
or
mov
mov
jl
js
shlb
pop
add
adc
mov
or
pop
popf
ffree
sbb
in
dec
adc
outsb
lods
in
je
cmp
int3
div
adc
sbb
lock
xchg
or
cmp
add
arpl
pop
pusha
out
nop
dec
inc
sar
imul
test
mov
icebp
montmul
cmpsb
add
push
mov
cld
jecxz
jo
mov
jle
adc
push
sub
sub
jno
jle
mov
sbb
clc
mov
cltd
dec
dec
dec
inc
jns
aad
adc
cmp
push
push
pop
dec
test
cld
test
icebp
xchg
sub
sub
pop
lods
ret
push
jne
les
inc
and
jb
outsb
add
pushf
jecxz
mov
fwait
repnz
stos
dec
xchg
fucomp
pop
aad
xchg
xor
data16
fnsave
xchg
mov
out
out
xor
and
jmp
ror
adc
imul
push
jb
jecxz
mov
cwtl
lret
into
iret
mov
loopne
es
and
jae
lods
or
and
into
shlb
movsb
add
lock
add
int
adc
stc
dec
xchg
lods
dec
cli
sub
sbb
sbb
jo
ss
pop
dec
inc
inc
scas
lret
xor
xlat
hlt
xchg
sub
push
jno
insb
adc
aas
cld
inc
test
inc
add
jns
hlt
xchg
rorb
dec
int3
add
aas
xchg
lock
inc
cmp
outsl
xor
scas
int
addr16
mov
sub
jg
cmpsb
dec
sub
mov
icebp
push
xchg
xchg
xchg
addr16
add
cmpb
insb
scas
leave
jne
lret
loop
or
mov
xor
fsts
add
out
aam
mov
mul
ficompl
pushf
xor
enter
rolb
sub
rcrl
jno
sub
lret
mov
sub
jecxz
mov
push
rorl
xchg
scas
out
insb
cwtl
mov
fstp
into
fwait
rcll
add
cmp
out
out
xor
cmp
shlb
cld
sti
bound
in
fmuls
add
cmpsl
fstpt
ja
and
push
dec
pop
pop
dec
and
inc
inc
negl
out
sub
sub
sbb
add
cmp
mov
add
loope
dec
mov
add
insl
negl
repnz
sahf
xor
inc
data16
sub
ret
test
dec
sub
mov
movsl
dec
xchg
jecxz
xchg
jo
icebp
sarb
pop
movsb
mov
ja
loopne
int
cmpsl
cmpsl
leave
add
int3
into
mov
lahf
cmc
dec
rclb
test
out
rolb
pop
add
loopne
imul
adc
mov
adc
loop
enter
mov
aaa
mov
rorb
mov
push
adc
inc
xchg
out
out
in
add
in
outsl
jmp
jmp
insb
cmp
inc
mov
push
in
jnp
fs
push
or
call
pop
dec
dec
xor
and
pop
push
repz
sub
adc
test
sti
je
sub
sbbl
ss
jbe
push
xchg
or
jge
adc
add
mov
dec
dec
popa
adc
ss
jbe
jle
sbb
or
data16
cmpsb
jle
add
mov
sahf
imul
mov
cmp
jl
mov
xor
xchg
enter
jp
jae
shlb
xchg
xchg
mov
mov
test
fldcw
ret
mov
ljmp
test
gs
lods
std
jl
stc
shrb
cwtl
das
fmull
sbbl
movsl
inc
fcmovu
fstps
and
and
in
mov
pop
mov
and
repnz
cld
jp
dec
dec
push
cmp
hlt
adc
and
pop
int3
or
pop
sub
mov
mov
rcrb
add
aaa
outsb
fldl
inc
inc
es
and
sub
imul
insl
rolb
inc
sub
movsl
mov
xor
cmp
xor
dec
dec
dec
push
push
repz
xor
pop
sub
adc
test
pop
xchg
test
jmp
ficomps
or
or
mov
xchg
mov
js
loopne
bound
sub
scas
jno
fsubs
cltd
fneni(8087
scas
mov
mov
stos
mov
mov
rcl
jnp
adc
fstps
push
sbb
loopnew
push
ret
aaa
pop
insl
push
or
sub
ja
and
clc
xchg
lret
int
jbe
sbb
jno
sub
scas
add
outsb
mov
fnsave
mov
fmull
inc
push
push
lds
add
and
push
sbb
cmc
cmpsl
stos
dec
dec
daa
and
inc
and
rcrl
cltd
lds
add
dec
jecxz
mov
cmp
mov
push
mov
je
jg
repz
out
xor
dec
mov
dec
mov
sbb
xorb
and
sti
cmpsl
cmpsb
movsl
jp
mov
insb
imul
enter
jo
aas
xchg
dec
xor
jb
bound
in
loop
cmc
je
add
lret
lea
out
daa
in
shlb
jmp
fwait
cmp
clc
ret
sbb
movsb
add
enter
mov
cmpxchg
mov
das
mov
into
add
fmuls
adc
sub
out
in
in
loopne
cmp
outsl
fcoml
fdivl
inc
inc
notb
imull
pushf
mov
sub
pop
popa
mov
dec
pop
cmc
xchg
pop
push
adc
fstpl
call
pop
add
push
enter
outsl
test
push
cmc
aaa
pop
jne
push
cld
mov
dec
mov
adc
cmp
dec
dec
aas
sub
add
xchg
popa
movsb
and
or
loopne
mov
icebp
jl
push
aad
push
xchg
outsl
subl
mov
pop
mov
jne
adc
stos
push
cwtl
adc
cld
mov
je
and
sarl
add
fdivp
lds
add
dec
jno
jnp
mov
cmc
mov
stos
jmp
and
xchg
dec
add
or
dec
sbb
lock
cltd
and
inc
dec
ds
lods
dec
test
push
dec
out
clc
fimuls
push
dec
adc
std
jnp
outsb
out
lret
ja
in
adc
xor
pop
xlat
or
add
fbstp
add
fstps
push
inc
pop
pop
dec
and
inc
inc
and
adc
rclb
xor
inc
aas
das
es
fistpll
pop
cwtl
scas
xchg
mov
lcall
test
icebp
icebp
pusha
inc
xchg
imul
adcb
dec
xor
bound
adc
jmp
jne
pop
pop
or
add
je
xchg
dec
jge
aaa
aam
iret
cwtl
xchg
xchg
jp
sub
test
push
mov
xchg
int3
rcrl
out
in
enter
add
rcrl
or
adc
sub
adc
into
int
or
aad
in
jge
out
mov
pop
mov
pop
cmpsl
out
push
pusha
lods
push
adc
ss
jmp
jecxz
inc
and
push
cmp
cld
std
in
add
cmp
cmp
lds
push
or
push
stos
sarl
mov
das
cmovbe
pop
ja
pusha
push
call
cmp
andl
ljmp
in
pushf
xchg
xchg
adcb
shrb
inc
inc
in
mov
movsb
jns
or
cmp
xchg
mov
pop
xchg
xor
add
andb
scas
scas
lods
jns
mov
call
lea
adc
test
out
fwait
dec
mov
out
sarb
adc
pop
loop
mov
fst
lock
adc
xor
mov
std
sub
rcl
aas
pop
push
cmpsb
cld
je
aam
push
mov
push
and
adc
or
or
mov
jmp
fcmovnu
fidivs
pop
jno
mov
jb
incl
das
sti
xorb
inc
aas
mov
popa
dec
push
add
push
sub
sbb
fisubrs
push
icebp
pusha
pop
push
mov
and
subl
jmp
push
js
inc
pop
lods
push
pop
dec
mov
inc
jp
mov
mov
cmp
fwait
inc
mov
dec
cmp
es
dec
mov
cmpsl
jl
les
ljmp
pop
loopne
shll
mov
inc
jp
loope
nop
sbb
je
mov
lret
mov
lods
pushf
sti
jno
test
add
lea
cmpsl
mov
mov
mov
jg
jbe,pt
cli
in
mov
das
test
test
mov
dec
ss
lret
rcll
inc
in
fdivrs
jle
push
or
mov
loopne
add
jmp
sub
mov
test
cmp
into
test
and
dec
inc
out
xchg
and
adc
repz
or
fstps
adc
and
in
das
pop
insl
inc
inc
insl
andb
xor
adc
xchg
cmp
and
pop
sbb
dec
arpl
bnd
scas
dec
xchg
push
fistpll
das
or
mov
cmp
cmp
imul
cmp
jecxz
mov
ja
or
add
outsl
pop
add
ljmp
dec
movsl
xchg
int3
mov
mov
push
xor
cli
lahf
add
rcl
jns
adc
or
adc
dec
xchg
scas
and
stos
jecxz
iret
into
xchg
push
dec
mov
xchg
add
cmp
jmp
inc
clc
out
sbb
lret
jae
movsb
mov
mov
or
pop
cltd
and
xor
std
add
jns
cmp
stos
and
and
pushl
xchg
sbb
dec
dec
adc
xor
fstpl
loope
adc
cmp
adc
fs
adc
arpl
movsb
xchg
andb
sti
dec
push
mov
bound
xor
nop
pop
xor
push
mov
clc
xor
sub
push
cmp
mov
popf
inc
jmp
stc
sbb
sbbb
sbb
rorl
xchg
mov
jecxz
js
xchg
jl
imul
xor
es
movsl
mov
imul
mov
in
shl
cmc
mov
push
testl
add
shr
push
or
cmpsb
cwtl
xor
loop
inc
jne
pop
ret
fiadds
outsb
aas
add
outsl
mov
bound
call
xor
out
in
fwait
cmp
pop
cmp
pop
les
pop
test
mov
stc
add
push
push
inc
pop
xchg
pop
icebp
pusha
mov
pop
bnd
in
push
pop
fnsave
das
in
clc
cmp
and
push
inc
push
sub
jne
sbb
dec
ds
lods
xor
mov
aaa
mov
test
inc
xchg
push
jecxz
mov
cmp
rcll
js
and
pop
loop
leave
fildll
loope
filds
xchg
inc
mov
dec
cwtl
icebp
lret
insl
in
xor
adc
stc
push
pop
cmpsb
mov
cmpsb
out
mov
or
push
rol
aam
mov
scas
mov
shlb
adc
lret
xchg
adc
repnz
cmpsb
adc
data16
popa
lret
push
or
and
imul
clc
or
push
ljmp
jmp
cmpsb
inc
popf
or
add
int
push
push
cmp
aas
test
and
or
push
mov
inc
lea
sub
enter
mov
push
cmp
cmp
ret
loopne
push
cmp
dec
push
popl
mov
jg
mov
jle
dec
and
or
pop
pop
aam
shlb
lods
ret
push
jne
mov
xchg
outsb
movsl
pop
add
jmp
mov
dec
mov
inc
les
sbb
lahf
push
test
xchg
push
inc
dec
adc
stc
minps
loope
adc
mov
jle
ja
dec
hlt
sarb
enter
or
daa
loope
dec
push
ljmp
jmp
movsb
sbb
sub
jb
lret
mov
inc
inc
call
mov
xor
enter
lods
std
aas
push
mov
test
iret
and
push
sub
or
mov
enter
sbbb
cmp
add
pusha
pop
pop
sbb
cmpsb
pop
cmp
gs
sub
ja
dec
mov
cmp
ds
mov
cmpsl
leave
cmovl
jle
sub
imul
ret
cmp
cltd
test
int3
jnp
out
push
jp
scas
scas
push
jae
data16
xchg
mov
sarb
mov
inc
mov
lcall
mov
xchg
mov
js
sbb
sahf
movsb
mov
inc
push
jmp
fwait
cmp
push
or
adc
mov
mov
icebp
pop
mov
into
xchg
adc
mov
xor
hlt
orb
cmp
aas
lea
mov
fmul
xor
das
inc
dec
leave
mov
in
leave
adc
lcall
sub
cld
jecxz
mov
cmp
mov
fcomps
mov
pop
out
cmp
clc
jg
fcompl
sbb
fs
adc
aas
jbe
movsb
sub
mov
sbb
adc
push
movsl
mov
push
pop
inc
push
ss
repnz
dec
dec
popa
push
cmp
ret
push
fcomip
pusha
repz
inc
popf
dec
nop
ret
lret
xchg
test
pop
xor
push
lods
xchg
outsb
cmpb
aam
ret
add
xchg
jge
jecxz
sbb
lods
mov
mov
xor
jae
lret
negb
faddl
cmp
xchg
xor
sub
test
push
out
pop
outsl
adc
pop
mul
dec
pop
mov
add
push
sysret
rol
push
mov
lret
inc
jno
aad
fs
adc
inc
in
sbb
flds
fmuls
push
out
sub
jb
jbe
iret
div
adc
sbb
ljmp
fldcw
cmp
int
inc
mov
pushf
xlat
or
jns
pop
push
adc
push
lcall
es
cmp
loope
ljmp
pop
stos
cld
lahf
cs
inc
inc
xlat
jge
pop
movl
jne,pt
mov
push
push
mov
inc
nop
lret
mov
pop
push
loopne
pop
das
outsl
jp
scas
movsb
push
lods
mov
adc
nop
adc
mov
bound
int3
clc
xchg
mov
jne
int
lret
lret
pop
aad
enter
add
enter
out
mov
cmp
xor
lock
sub
lret
stos
push
movsl
and
rsm
enter
lds
sarb
stos
or
and
mov
fimuls
call
jb
inc
stc
pop
inc
push
int3
cs
jno
mov
add
push
push
or
clc
jmp
xor
sbb
or
aas
mov
rep
mov
pop
xchg
jo
or
mov
cmp
imul
cld
test
xorb
push
dec
sahf
add
insl
out
mov
mov
add
adc
sbb
lret
push
addl
dec
xor
fiadds
cmp
add
ja
movsb
arpl
jbe
mul
movb
jge
incb
mov
jge
add
popa
sbb
and
add
cmpl
mov
fwait
mov
dec
out
and
addr16
out
cld
lret
jne
movsb
xlat
aad
jae
jno
enter
push
sbb
mov
cld
dec
ss
in
jmp
inc
icebp
aas
push
adc
adc
popa
fs
cld
rolb
int
pop
adc
cwtl
pop
inc
or
push
and
and
xchg
sahf
fcompl
and
daa
es
dec
or
das
scas
cmp
cmp
test
xchg
js
mov
icebp
push
and
or
popa
push
push
ja
cmp
mov
push
hlt
pop
andb
outsb
daa
pop
push
inc
loope
sbb
jge
movsl
lcall
pop
repnz
fidivrs
mov
in
cs
cmp
mov
cmpsb
xor
jecxz
dec
push
xchg
faddl
movsb
jnp
push
jb
gs
out
ljmp
rcr
out
mov
xor
push
clc
div
lret
and
adc
inc
pushl
pop
add
or
shrb
lret
jbe
test
fidivs
ret
cltd
out
daa
sbb
subl
shl
add
add
sar
mov
les
and
mov
int
cmc
dec
sti
adc
pop
xor
or
test
es
fisubl
ss
out
push
inc
inc
and
outsb
add
divb
jl
sti
xchg
and
loop
dec
cmp
mov
xchg
dec
dec
push
dec
scas
imul
xor
fwait
or
jge
stos
xor
sbb
test
or
shlb
lods
sti
cmp
lret
mov
mov
xchg
lods
fistpll
inc
mov
in
nop
push
lods
mov
push
sbb
insl
push
mov
rcrl
stos
adc
pushf
ror
mov
sarb
cld
xchg
out
xchg
mov
and
loope
test
repz
mov
xchg
mov
testb
sbbl
mov
out
in
jmp
push
or
div
xchg
lahf
bound
sub
aaa
or
add
dec
inc
sbb
mov
sub
mov
dec
dec
xor
dec
and
test
icebp
pusha
sub
js
mov
sub
shlb
xchg
add
sub
pop
push
into
inc
stos
adc
mov
sahf
push
mov
jo
bound
iret
subl
push
adcl
xchg
sbbb
cmpsl
inc
inc
lahf
sahf
flds
hlt
dec
mov
ret
xlat
push
adcb
ja
fidivrs
cli
push
addb
jl
mov
or
test
das
jb
sarl
jp
fcom
stos
add
aam
add
dec
fidivs
mov
dec
lock
mov
jmp
adcb
repnz
ds
std
cld
jno
stc
mov
lock
pop
int3
lret
lret
stos
insb
sbb
in
and
push
sbbl
add
out
ss
sub
mov
and
scas
push
std
adc
pop
sbb
add
in
push
ret
popa
es
sbb
jl
das
jge
jmp
mov
mov
mov
enter
outsb
push
in
inc
fistpll
push
jp
mov
push
inc
dec
sub
mov
sub
inc
ja
inc
dec
dec
dec
fsubs
mov
sub
pop
pop
dec
popf
xor
and
subb
sub
imul
xor
addr16
push
mov
jle
mov
cwtl
popa
mov
arpl
in
or
jg
test
jae
stos
or
mov
imul
mov
stos
scas
scas
jmp
dec
clc
in
sub
rolb
scas
movsl
fwait
pop
cld
sti
out
xchg
jb
outsb
leave
into
int
shrb
lret
adc
xchg
mov
and
sub
sbb
dec
sbb
dec
sub
inc
inc
insl
mov
fdivl
mov
sub
push
adc
mov
dec
push
mov
lahf
push
jecxz
std
popa
inc
loopne
leave
or
push
das
je
cmp
fstpt
jns
add
scas
fisubl
pop
ds
subl
jmp
mov
sbb
push
ja
dec
pushf
or
cmp
ret
and
or
mov
push
dec
arpl
test
mov
lcall
ret
in
cltd
lock
dec
arpl
or
imul
int3
ja
lea
pop
push
mov
xchg
mov
jmp
iret
or
lds
jbe
xlat
ret
cmp
fmul
sbb
fwait
clc
lea
popf
cmp
stos
lods
test
aas
jne
adc
fistpll
jg
lret
xchg
stc
fs
add
int
or
sbb
ds
ret
push
sbbl
jb
lock
mov
inc
rcll
out
jae
push
push
push
pop
dec
or
mov
cmp
outsb
dec
xchg
push
inc
fs
stos
cmp
cmc
jmp
dec
dec
daa
pop
jb
test
mov
shrb
negb
bound
add
adcl
aaa
ss
xlat
shll
and
frstor
xchg
das
cld
popa
push
dec
xor
cmp
inc
jge
sbb
jo
notl
pop
pop
inc
rolb
gs
mov
lret
test
mov
addr16
hlt
mov
cmp
xor
js
gs
stos
aad
dec
mov
push
hlt
int
pop
push
cli
jle
movsb
mov
jge
shlb
outsl
outsb
das
retw
jmp
outsl
lods
cmpsb
mov
mov
pop
and
jmp
testb
or
push
push
mov
lret
repz
loop
mov
inc
adc
jg
movsb
push
xlat
or
cs
cmp
mov
push
inc
into
and
stc
std
idivb
daa
dec
icebp
adc
out
scas
push
dec
jae
xor
pop
es
sbb
push
pop
push
pop
cmp
adc
data16
inc
mov
dec
mov
rcr
insl
inc
sub
fidivrs
dec
mov
cmp
inc
adc
mov
pop
mov
mov
and
shl
xor
fdivrp
lods
lahf
aam
add
addr16
sahf
nop
arpl
xorl
sbbl
jle
popa
mov
insl
mov
cli
imul
es
cwtl
xchg
xchg
jp
sub
and
cmpsl
fwait
xchg
int
rol
sahf
ja
mov
stos
fwait
jb
mov
das
or
cmpsb
fimuls
xlat
call
cltd
test
lea
loope
loope
orl
add
sbb
jb
loopne
pop
inc
in
ljmp
aad
jle
add
fs
sbb
sbb
mov
movsb
mov
popf
cmp
mov
push
popa
sbb
arpl
hlt
push
add
push
popa
outsl
or
jne
dec
xchg
mov
pop
sbb
addb
push
jbe
pop
sbb
push
xor
jge
jnp
xor
pop
mov
jno
pop
lahf
imul
inc
mov
ja
xchg
xor
mov
jns
xchg
mov
lods
sarl
xchg
jmp
dec
nop
loop
fstl
xchg
leave
adc
ror
or
add
sbb
out
sub
cmpsb
in
movsl
aam
rcll
aam
rcl
jo
shrb
jb
mov
shr
outsb
mov
in
jb
adc
das
movl
add
push
call
fisttpll
fimull
pop
lock
sbb
std
cld
sti
out
sbb
ret
and
and
arpl
xlat
or
push
das
jnp
dec
cmp
fstpl
cs
scas
fcompl
outsl
pop
dec
js
inc
push
mov
mov
imul
jne
outsl
jne
push
and
int
inc
mov
xchg
push
mov
add
repz
loop
jp
popf
xchg
cld
lcall
out
test
insl
test
in
ljmp
jbe
hlt
mov
aam
mov
add
les
mov
inc
into
add
shll
aad
xchg
cltd
test
test
sahf
out
adc
sub
sbb
stos
stos
add
cmp
ror
mov
mov
mov
fst
add
mov
aad
inc
jecxz
inc
int
and
iret
adc
in
orl
or
push
pusha
loopne
adc
mov
out
mov
in
pop
jno
sbb
negb
stos
adc
dec
add
std
xor
jae
sub
push
sub
fsubl
xor
inc
inc
and
sbbl
insb
andl
pop
test
lds
cmp
and
or
and
mov
dec
push
xchg
xor
jl
dec
mov
pop
pop
pop
fwait
adcb
loopne
sub
dec
xor
lods
lcall
jns
rcl
push
and
scas
mov
jge
mov
and
fnstsw
xor
out
mov
jb
test
or
adc
bnd
cmp
cmp
subb
ds
mov
sbb
mov
jmp
daa
adc
inc
and
jmp
in
pop
mov
hlt
ds
add
arpl
adc
push
mov
andl
fldenv
insl
scas
repz
popa
inc
inc
loopne
inc
pop
jnp
jns
push
push
push
dec
sub
pop
shll
sub
cwtl
enter
ret
dec
jl
rorb
repz
rcll
lcall
in
addb
pop
xchg
xchg
mov
mov
mov
push
fidivrl
cs
das
mov
push
mov
push
push
cmp
cmp
addb
stc
stos
add
out
leave
ja
sbb
pusha
popf
or
push
pop
or
adc
adcb
imul
insb
cmp
and
idiv
sbb
dec
daa
sbb
subl
dec
addr16
bound
inc
pxor
or
cmp
and
cmp
dec
daa
data16
scas
sub
sbb
sbb
loop
push
mov
inc
adc
hlt
xor
xor
jbe
insl
sar
es
or
push
mov
sbb
pop
push
mov
test
pop
pop
pusha
dec
inc
xchg
data16
mov
push
sarb
movsb
cmpsb
lods
mov
mov
fcomps
les
xchg
add
sub
xor
aad
xor
jl
fistpl
xor
jmp
loop
push
subb
cmp
cmpsl
loopne
jb
bound
loop
mov
jae
xor
fstp
lret
lret
xchg
add
in
inc
add
lahf
fcmovnu
fstpl
test
scas
mov
cmpsb
add
pushl
jmp
js
pusha
add
or
cmovbe
xor
push
int
xor
and
imul
push
or
xchg
rclb
roll
pusha
xor
es
das
pop
divb
adcb
aad
push
push
out
mov
bound
cwtl
out
nop
pop
xor
pop
push
push
je
xor
ret
insl
fs
stos
push
push
jns
icebp
xchg
lods
fisubs
jno
jo
je
stos
test
jo
cmpsl
imul
inc
push
mov
mov
xor
mov
xor
ret
mov
flds
loopne
mov
cmp
out
mov
mov
mov
pushf
dec
sti
in
enter
pop
enter
fstpt
into
sub
mov
or
mov
mov
shll
push
push
fldt
sbb
sub
int3
fstpl
cmpb
hlt
insl
xchg
js
ljmp
roll
idivb
jmp
push
pop
xchg
mov
clc
bound
jo
es
mov
js
jge,pn
pop
aaa
mov
sub
or
pusha
xor
andl
jbe
push
inc
dec
cltd
sub
nop
adc
dec
inc
push
das
test
pop
jne
adc
insb
lcall
mov
rol
js
mov
pop
jge
or
push
sbb
mov
cmp
mov
call
mov
mov
nop
ja
sbb
sub
pop
leave
out
xlat
sub
pop
cmpsl
fnstcw
cmp
lods
xor
in
cmp
push
rcl
inc
pop
inc
mov
stos
sti
mov
adc
sbb
push
inc
mov
xchg
sub
shld
or
sub
sub
lock
pop
push
sti
fxam
rorl
es
in
push
push
push
push
enter
sahf
aaa
nop
cmc
dec
adc
sub
or
pop
add
mov
lahf
mov
outsb
sbb
pop
aas
gs
movb
clc
mov
cmc
sub
sbb
xorl
mov
inc
addb
xor
bound
daa
sbb
or
xchg
pushf
addr16
cwtl
lea
and
sahf
mov
sti
addr16
push
pushf
outsb
add
outsl
push
lods
mov
ja
mov
mov
test
rcl
mov
outsb
cwtl
inc
vaddps
push
dec
mov
xchg
mov
add
stos
xor
scas
cmp
fcmovu
mov
mov
out
mov
std
pop
and
adc
pop
ljmp
xlat
push
xor
pop
add
fnstsw
or
movsl
hlt
xor
jmp
mov
pop
clc
int3
lcall
cld
loop
sbb
outsb
lods
in
sti
cwtl
sub
mov
cmovbe
pop
sti
cli
sbb
lock
and
cmp
call
fcoml
push
mov
or
popf
mov
into
out
push
dec
mov
or
jo
sbb
adc
inc
adc
test
sti
cmp
in
xor
fs
dec
test
mov
andl
add
mov
push
addl
scas
scas
lods
push
jno
scas
xor
inc
xchg
mov
mov
xchg
mov
mov
jne
sub
lret
pop
jbe
push
xor
fldcw
aad
popf
sbb
shll
mov
mov
add
lock
lcall
cmc
mov
adc
add
mov
sti
inc
adcb
lods
andb
ficoms
or
xchg
sbb
aad
int3
and
cli
outsb
push
pop
push
in
in
jb
icebp
pop
in
mov
add
push
inc
aas
sub
inc
clc
sbb
popf
pop
or
je
or
movsl
and
push
or
and
and
and
loop
inc
sub
cmp
jbe
push
push
dec
inc
loopne,pt
sbb
jp
mov
add
data16
mov
mov
xchg
imul
pusha
imul
push
shll
xchg
adc
jg
mov
mov
mov
js
mov
mov
xchg
nop
ss
or
mov
and
add
test
iret
fistl
repz
std
leave
adc
stos
and
fldt
mov
shrl
insl
sbb
add
and
mov
in
je
cmp
jae
lock
inc
mov
les
imul
adc
inc
fs
leave
jbe
dec
pop
dec
bound
aad
push
adcl
pop
push
mov
and
sbb
jmp
idivb
repnz
lahf
jb
push
es
das
jae
jge
add
and
insl
lea
sub
inc
mov
adc
repnz
jns
xor
dec
jmp
test
jl
les
jnp
mov
sub
outsl
enter
jg
jge
insb
xorl
mov
xchg
daa
loop
sub
inc
int3
lret
mov
sbb
cmp
popl
mov
push
mov
adc
fidivl
lods
out
stc
in
add
sbb
aam
mov
adc
cmpsl
mov
mov
fistpll
cwtl
fcoms
sbb
je
or
ret
loop
lcall
test
fnsave
sub
add
cwtl
push
push
pushf
out
xor
cmpsl
and
mov
std
ret
dec
dec
sub
es
adcb
mov
pop
repz
out
push
pop
das
cs
cmp
and
push
lahf
push
push
inc
sub
dec
xor
faddl
out
nop
inc
xor
adc
cmp
xor
insb
es
pushf
mov
lahf
mov
add
pop
mov
insb
imul
subb
ror
shll
mov
shll
mov
mov
in
into
push
mov
xor
push
in
leave
lcall
mov
adc
add
mov
mov
shrl
mov
mov
or
push
pop
adc
mov
shl
sub
mov
inc
popf
push
sub
leave
pushf
dec
inc
inc
inc
mov
nop
mov
div
add
xchg
mov
clc
or
pop
cmpsb
or
test
js
jmp
cmpsb
bound
pop
push
sbb
push
repnz
and
aam
icebp
pusha
sub
pop
repnz
in
or
and
loope
outsb
insl
daa
dec
inc
imul
xlat
xchg
dec
pop
ss
sub
loopne
xchg
test
mov
dec
fdiv
mov
divl
xor
jne
popf
xor
mov
xchg
ret
addr16
repz
movsb
mov
mov
stc
mov
xor
and
fwait
into
jecxz
sbb
mov
in
push
jb
loopne
xor
dec
out
jmp
mov
xchg
mov
movsl
mov
mov
mov
add
xor
adc
jmp
cmp
mov
loop
sarl
fidivrl
pop
add
mov
in
inc
dec
call
int
jns
inc
mov
pusha
scas
jmp
push
scas
inc
div
add
pop
xchg
adc
dec
popf
dec
inc
inc
sbb
dec
dec
dec
sbb
pop
mov
push
pop
cmc
adc
icebp
pushf
enter
insb
mov
cmp
addb
cmp
sub
inc
jbe
sub
push
push
inc
lds
icebp
cmp
mov
in
cmp
cwtl
xchg
cmp
mov
sbb
add
jp
cmpsl
cmpsb
xchg
sub
les
mov
fiadds
jge
push
les
mov
pop
iret
in
or
adc
sub
pushf
fwait
cwtl
mov
dec
jo
shrl
rol
iret
push
out
add
insb
ja
xor
dec
mov
lods
add
xlat
xlat
push
frstor
jecxz
push
insb
push
mov
cmp
leave
or
sbb
testl
dec
lret
inc
mov
daa
mov
and
ficompl
cmp
push
xchg
cs
adc
es
arpl
mov
mov
fisubs
jecxz
sbb
popa
lahf
ss
test
test
add
sub
pop
bnd
jne
adc
push
mov
aas
lea
adc
add
repz
das
or
test
inc
xchg
mov
test
pop
pop
mov
jle
pop
mov
cs
outsl
add
mov
dec
mov
adc
jnp
mov
mov
and
mov
in
cmp
xor
je
pop
cmpsl
jmp
push
xchg
fdivs
in
add
xchg
aam
out
cmpsb
fldenv
movsl
out
fidivs
xor
jmp
and
orl
daa
cli
enter
cmpsb
jnp
lret
sbb
daa
adc
cmp
adc
loopne
cmp
and
lahf
sub
std
in
add
cmp
cmp
icebp
mov
add
arpl
adc
and
push
std
inc
push
hlt
repz
sbb
sbb
popa
lret
mov
adc
cmpb
pop
jo
sub
xor
push
push
jbe
xchg
dec
dec
xchg
add
aaa
js,pn
test
mov
mov
cmp
lahf
inc
jl
dec
jo
inc
mov
mov
fwait
test
push
popf
icebp
cwtl
fidivs
mov
fwait
test
mov
mov
cli
dec
mov
push
enter
stos
loopne
mov
pushf
into
jecxz
js
xchg
jl
aaa
jmp
mov
sarb
cld
int
cmc
inc
movsb
inc
add
xor
out
jo
xchg
shll
jp
mov
fidivrl
xor
aam
or
or
add
mov
jecxz
sbb
sbb
sub
loope
inc
outsb
mov
add
and
cmp
or
push
add
push
mov
add
mov
xchg
outsb
or
ljmp
mov
cmc
pop
and
aaa
sbb
pop
inc
xor
inc
sbb
insl
mov
dec
inc
adc
adc
jae
pop
cmp
mov
scas
sub
sub
out
push
add
pop
pop
inc
test
enter
insb
jae
lcall
and
pop
ret
pop
shrl
or
mov
popa
or
dec
test
push
mov
dec
cmpb
lret
mov
push
mov
fildll
pop
in
test
xor
ret
xchg
sbb
mov
stc
ret
jl
testl
loope
lods
imull
cmp
data16
mov
insl
call
movsl
cmpsb
fsubrs
jle
mov
std
call
cld
lcall
jge
daa
stos
and
negb
push
addr16
test
std
enter
mov
add
push
mov
push
sbb
adc
enter
dec
test
test
andb
fmuls
jns
dec
mov
bound
fwait
jae
sbb
repnz
outsl
dec
dec
inc
mov
ja
mov
jecxz
xor
push
mov
js
jbe
lods
push
pop
subb
pop
jae
mov
fldenv
jecxz
cmpsl
mov
insb
mov
lret
lret
ds
popf
sbb
fcmovnu
test
lea
ret
dec
xlat
popa
adc
insb
test
sbb
cmc
adc
fadds
in
mov
jp
or
and
and
out
jbe
insl
inc
repnz
aad
xor
sarb
mov
and
leave
ds
cmp
sub
cld
push
mov
mov
push
ja
dec
cmp
decl
gs
dec
push
test
push
stos
aaa
shll
sarl
mov
sahf
cmp
pop
sbb
jle
dec
data16
pop
push
hlt
outsb
insl
insb
dec
sub
insl
aad
jne
dec
jae
or
nop
js
inc
fs
sub
mov
aas
xchg
in
adc
repnz
sbb
popf
pushf
pop
push
cmpsb
push
inc
add
sub
cwtl
rorb
or
jg
adc
mov
insb
stos
mov
js
and
pop
loope
add
test
mov
pop
lahf
mov
mov
push
jo
aam
fstpt
outsb
scas
and
push
in
test
pop
jge
inc
xchg
rol
test
icebp
dec
and
mov
aam
stc
and
loop
aaa
xlat
leave
fsub
or
mov
enter
push
les
clc
scas
stos
push
cmpsb
add
push
dec
out
in
sti
fldcw
cmc
in
jle
push
push
enter
sub
mov
inc
cmp
lods
cld
push
shll
daa
pop
sbb
mov
sub
cmp
and
js
ds
adc
inc
jle
js
push
inc
pop
xchg
and
push
mov
mov
jle
cmp
mov
sub
dec
cmp
in
xchg
stos
call
sbb
jp
icebp
adc
mov
sbbl
rol
mov
sbb
test
out
loope
mov
sub
fadd
movsb
jnp
aaa
jb
lods
lea
jle
out
add
mov
lock
out
in
mov
test
jbe
dec
mov
push
and
jbe
and
loope
fcmovb
adc
sbb
mov
mov
jno
ljmp
adc
mov
in
ljmp
sub
data16
or
jmp
push
adc
push
or
sbb
and
std
das
push
hlt
repz
sub
sub
and
out
das
cs
push
cmc
sub
mov
imul
lret
dec
xorb
or
xchg
push
sub
mov
or
push
repz
push
out
mov
pop
dec
movsb
adc
das
inc
aad
adcl
xorl
aaa
xchg
mov
inc
jge
les
je
mov
loope
jp
jb
ficoml
aad
and
mov
add
mov
xchg
lea
lahf
fs
mov
aam
rcl
adc
es
scas
lock
enter
mov
dec
pop
mov
cmp
ror
lcall
sbb
sbb
or
scas
idiv
imul
add
add
pop
push
push
push
in
pop
cmp
jecxz
jmp
or
fsubs
adc
and
call
repnz
in
ret
mov
inc
jmp
test
in
divl
inc
es
pop
push
stos
cmp
outsb
mov
jecxz
mov
and
nop
popl
in
xchg
xchg
xchg
sub
mov
lcall
ret
ret
xchg
scas
lods
clc
mov
addr16
aam
mov
nop
xbegin
repnz
mulb
iret
in
imul
scas
pop
xor
fdivl
pop
test
inc
cmp
insl
add
jl
imul
fs
mov
enter
cmp
mov
out
fidivrl
sbb
lods
into
mov
mov
into
lds
sbb
cmp
jmp
and
aaa
and
adc
xor
aas
je
cmp
cmp
js
and
add
jmp
or
add
mov
push
inc
hlt
dec
xchg
sahf
fcompl
rcrb
pop
push
test
fwait
out
sub
xchg
dec
test
ss
sub
xchg
push
push
push
fisttpl
inc
mov
jns
xchg
movsb
mov
div
mov
adc
xor
imul
dec
push
cmpsb
cld
cmpsl
cmpsb
xchg
test
scas
fs
lods
stos
stos
mov
jbe
mov
mov
pop
inc
jns
xlat
ja
push
mov
push
push
shrb
ret
push
repnz
popf
pop
nop
jecxz
mov
rolb
and
insb
lods
mov
push
clc
das
test
popa
add
test
add
or
test
fisttpll
push
or
xor
loopne
jnp
pop
pop
xchg
push
push
es
jmp
sbb
sub
adc
das
cmp
test
push
or
add
dec
mov
push
or
clc
push
les
popa
push
ljmp
sbb
ss
xor
mov
pop
imul
popl
sbb
fsubp
repz
lods
mov
mov
repz
cltd
cmpsb
mov
cmp
incb
xchg
ret
test
xor
imul
jecxz
push
pop
pushf
mov
cmp
jo
int
jo
sbb
dec
lds
popa
mov
cwtl
mov
mov
cmp
xor
nop
loop
out
push
pop
subl
cmc
test
out
pop
out
or
sbb
pop
push
mov
jl
into
fnsave
mov
sbb
or
frstor
jl
fidivs
mov
mov
aad
adc
sti
cld
stc
or
cmp
adc
push
idiv
ds
cmp
dec
fsubl
sbb
mov
inc
lods
into
pop
mov
outsl
test
in
divl
adc
pop
roll
adc
fimuls
inc
lcall
xor
push
js
pop
mov
xchg
fsubs
std
repz
mov
mov
mov
pop
test
inc
push
mov
pusha
xchg
fnstenv
cmpsl
jp
icebp
xlat
test
std
sarb
outsb
movsl
jecxz
mov
js
xor
mov
fdiv
fimuls
sarl
movsl
fdivl
cmp
fcmovnu
jo
aam
add
aad
fwait
jb
xchg
add
movsl
pushf
mov
adc
into
add
inc
adcl
in
cmpsl
mov
sub
or
sbb
ja
or
popf
fstpl
sbb
in
or
pop
cmc
push
jl
push
clc
clc
mul
xchg
push
push
inc
dec
fnstenv
cmp
cmp
test
cmp
xor
push
push
mov
clc
bound
pop
outsb
hlt
push
ss
or
addb
sbb
push
into
push
inc
and
xchg
push
pop
test
js
inc
fs
test
mov
xchg
jmp
xchg
xor
dec
xor
and
cltd
test
cmpsb
cmp
and
shll
mov
pop
rorl
aam
pop
adc
mov
mov
lret
js
nop
mov
test
xchg
fsubrs
pop
pop
popf
fbstp
cmpsl
mov
lea
add
add
adc
push
cmpsl
sahf
adc
cmc
adc
mov
and
jo
daa
mov
in
fnstcw
pop
push
stos
int
mov
in
int
xchg
sbb
sub
aaa
push
mov
imul
dec
notb
and
hlt
imul
add
pop
ljmp
addr16
jns
pop
sub
mov
inc
mov
insl
test
sbb
mov
gs
mov
jae
orb
cmp
jns
add
test
inc
int3
imul
jb
pusha
inc
neg
lahf
sahf
dec
jp
xorb
ret
test
dec
sub
ret
xor
adc
rcl
inc
adc
cmp
cwtl
iret
ljmp
add
sub
aaa
cmpsb
xchg
sub
je
js
loopne
fisubrs
call
mov
lock
dec
in
jmp
repnz
adc
add
sti
mov
or
sub
into
loop
fimull
aad
mov
test
rcrl
fucomi
out
lret
cwtl
mov
loopne
loope
push
sbb
clc
divl
push
adc
inc
aad
mov
cltd
loop
iret
cmc
cmp
xor
and
push
hlt
push
dec
sbb
pop
push
pop
lock
adc
jo,pn
out
insb
imul
jns
push
push
inc
xor
and
mov
inc
hlt
mov
jns
dec
arpl
mov
xchg
lock
sbb
xor
dec
bound
cltd
test
hlt
dec
add
ret
dec
mov
mov
sarb
mov
daa
jecxz
sahf
shlb
cs
lret
fcomip
aaa
xlat
mov
loopne
add
ds
jle
cmp
add
jbe
lods
lods
sub
ljmp
rcl
mov
and
scas
sbb
iret
into
shrb
dec
push
aad
jae
loop
out
and
ljmp
add
lea
adc
in
in
xchg
jae
mov
adc
cmp
cmpsl
outsb
ljmp
es
arpl
sbb
lret
push
hlt
data16
pop
push
cmp
rsm
push
push
les
pop
push
test
pusha
lret
push
push
jo
std
pop
push
sbb
repnz
push
cmp
mov
gs
xchg
mov
mov
pop
mov
adc
lahf
dec
add
adcb
sbb
js
aaa
jge
mov
jbe
loop
mov
jnp
stc
pop
mov
push
mov
sub
lret
lahf
add
xor
mov
jmp
mov
idiv
std
lods
stos
mov
clc
mul
ret
lcall
sbb
enter
add
int
mov
sbb
je
add
stc
sbb
sbb
nop
push
lret
inc
push
fsubs
in
jmp
or
adc
adc
xchg
out
in
xor
cmp
movl
dec
or
jae
daa
xchg
lods
push
hlt
mov
pop
daa
subl
iret
data16
fwait
mov
enter
imul
arpl
sbb
leave
xchg
orb
test
add
in
mov
pop
mov
mov
jb
xor
outsb
movsl
dec
lds
out
mov
and
mov
and
mov
aam
jo
push
mov
mov
sbb
lret
loop
or
jnp
sbb
leave
fadd
fstpt
ss
add
test
cltd
fcmovnb
cmp
push
jbe
push
insl
stos
jmp
push
xor
les
add
lods
add
mov
add
int
mov
ds
mov
lock
clc
push
xchg
push
pop
test
and
inc
inc
xor
jae
clc
div
cli
xor
pop
aas
ds
movsb
popf
inc
fs
clc
mov
jl
push
pop
mov
repnz
test
shrb
or
mov
stc
push
push
fcoml
jle
les
dec
jle
jno
imul
fsts
sub
mov
push
addr16
in
repz
xor
dec
movsb
dec
jns
cltd
jle
xchg
repz
jle
pop
push
jmp
lods
stos
xchg
jno
jle,pt
mov
mov
enter
stos
sbb
mov
fsubrs
mov
data16
mov
outsl
scas
and
sti
jp
push
div
lods
adc
imul
mov
sub
fldt
and
jp
femms
iret
cs
fcom
je
inc
mov
scas
xchg
and
inc
cmp
call
sbb
loope
out
mov
jmp
ljmp
add
das
xchg
push
push
and
adc
adc
fisttpl
gs
pop
xchg
test
push
adc
fs
push
addl
aam
es
inc
jmp
outsl
inc
ss
adc
bound
cmpsl
ds
mov
ror
mov
aas
aaa
loopne
adc
adc
sti
loop
ficompl
dec
arpl
inc
andl
icebp
mov
xchg
xchg
pop
lcall
subl
jecxz
mov
mov
movsb
jnp
jae
jno
mov
stos
fcoml
jmp
shll
js
mov
jge
adc
stos
sahf
jp
faddp
shrb
mov
add
xor
inc
cwtl
aad
in
inc
mov
inc
es
push
sbb
sub
outsl
fs
or
or
pop
xchg
leave
pop
adc
push
or
pop
pushf
dec
inc
lret
ss
push
push
mov
or
pop
mov
push
hlt
repz
pop
push
mov
outsb
xchg
gs
sub
sub
aam
add
addr16
push
mov
push
add
push
aaa
das
repz
cmpsl
jle
cld
leave
add
sbb
add
insb
dec
push
ds
addr16
shlb
jecxz
mov
pop
lret
push
xchg
ss
inc
cmp
jo
or
out
lahf
jmp
sub
ljmp
mov
popa
pop
fwait
mov
movsl
out
in
pop
das
insl
lods
popf
jns
pop
ja
fwait
sbb
and
ljmp
fnsave
and
mov
ret
cwtl
fcoms
aad
inc
int
cmp
sbb
cmc
in
andl
insb
movsb
cltd
mov
ljmp
ljmp
ljmp
ljmp
push
adc
scas
adcl
sub
jbe
jp
mov
pop
pop
push
cmp
adcl
aaa
ss
leave
ljmp
test
pop
ds
push
mov
dec
push
cltd
ret
aam
repz
pusha
pop
fistl
sbb
mov
lods
movsl
hlt
repnz
clc
adc
shlb
mov
xchg
jg
aas
stc
and
lods
xchg
jecxz
into
xchg
xchg
xchg
movsb
je
mov
mov
add
or
mov
add
shll
into
clc
cmpsb
popf
rcrl
adc
xlat
adc
je
mov
je
push
ror
dec
imul
or
mov
mov
push
movsl
jl
pushf
fprem
das
push
add
orl
clc
call
xor
inc
adc
dec
xor
inc
mov
or
pusha
ret
stos
push
sbb
pusha
pop
cmp
jns
shr
pop
xchg
sbb
and
out
das
mov
aam
jmp
fistl
push
daa
sbb
inc
push
out
pop
inc
sub
cmp
adc
dec
push
push
cwtl
std
adc
movsl
ffree
repnz
shlb
pusha
cs
xor
dec
jmp
adc
clc
adc
xchg
xchg
sahf
outsb
cmc
sub
xchg
xchg
ja
pop
sbb
in
lahf
xchg
mov
orb
jo
xor
mov
mov
aam
jmp
or
and
in
jmp
std
lahf
sbb
mov
inc
pop
cli
stc
je
or
sub
iret
cwtl
inc
mov
out
sbb
pop
jnp
into
add
int3
decl
movsb
inc
inc
cld
cld
loopne
sbb
cmp
popf
gs
adc
add
inc
cmp
in
maskmovq
testl
pop
imul
inc
dec
hlt
sub
clts
adc
pop
pop
pop
inc
into
xor
xor
ret
push
arpl
dec
test
jg
jge
aam
mov
in
rol
dec
sub
mov
lods
xchg
xchg
xor
js
insl
les
pop
push
test
mov
hlt
testb
stos
test
std
fdivrl
cld
sub
mov
mov
ja
inc
into
int
jns
outsb
sub
nop
shll
pusha
pop
fsave
pop
movsl
mov
loopne
or
sahf
aad
xchg
test
movsl
pushf
mov
scas
movsl
inc
pop
cld
sti
je
push
sti
insl
mov
rclb
add
in
add
add
in
lret
subb
decl
dec
mov
rcrb
cld
add
jge
push
push
mov
and
and
sbb
int3
or
fidivs
aad
and
fwait
mov
int3
daa
daa
es
aaa
enter
inc
inc
lret
cmp
mov
loope
js
or
xlat
xchg
xchg
dec
cs
push
jns
shl
test
lret
cmp
out
xchg
xchg
sbbb
dec
popf
xor
and
les
scas
arpl
xor
mov
jne
shll
fwait
jge
jle
xlat
xchg
loope
jbe
cmc
dec
jb
sbb
xor
idivl
push
jnp
jnp
test
aam
cmp
cmpsb
mov
repz
xor
frstor
stc
mov
inc
fcmovne
lods
add
lods
fildll
shlb
mov
cmp
sbb
cmc
arpl
add
pop
int
or
icebp
push
mulb
xchg
mov
or
or
jl
or
test
imul
dec
leave
pop
or
or
subl
and
or
scas
mov
popa
xchg
adc
pop
lret
daa
fwait
dec
sub
mov
lcall
addr16
pop
andb
repnz
jle
mov
xchg
jge
dec
xorb
ret
in
test
in
cmpsl
add
xchg
scas
movsb
adc
mov
jno
in
shrb
mov
movsb
push
adc
and
mov
in
cmpsb
xor
enter
sbb
pop
call
mov
or
lods
mov
pop
loop
aaa
dec
gs
and
fsubr
jb
movb
in
loop
push
sbb
ret
xlat
dec
jo
clc
stc
movsb
jb
jae
popa
test
sub
out
ds
push
mov
insl
adc
push
adc
sbb
dec
or
push
or
hlt
jnp
jns
nop
fwait
mov
aam
xor
push
mov
xor
jl
lahf
mov
insb
dec
popa
xchg
lea
je
cmp
test
and
cmp
ret
idivb
shrl
mov
push
mov
gs
mov
movsb
data16
and
push
pusha
pushf
xchg
fidivl
sub
pop
sti
jg
jge
lahf
xchg
jbe
inc
movsb
movsb
mov
js
mov
lret
inc
push
xor
xor
stos
int
stc
ja
push
inc
mov
out
add
dec
or
test
sahf
jno
mov
sti
lret
mov
xor
jecxz
and
bnd
cmp
aas
push
or
jno
and
vpsubsb
jne
out
out
std
pop
leave
sub
push
mov
jae,pn
adc
fisubrl
inc
or
pop
pop
dec
jmp
dec
push
and
adc
mov
sbb
arpl
dec
cmp
shrl
popa
push
dec
and
sbb
push
das
mov
pop
mov
aaa
jp
cs
jne
outsl
rcr
popf
gs
into
pop
jg
loopne
das
movsl
inc
aad
xchg
test
ss
ljmp
or
cmp
imul
xchg
mov
les
or
pusha
xor
insb
push
sarl
gs
insl
jae
xchg
mov
loope
jne
jne
cwtl
jl
mov
push
xchg
push
mov
xchg
cmc
subb
mov
rcrb
pusha
cmc
adc
xchg
into
add
inc
subl
cmc
pop
adc
aaa
mov
lods
dec
push
pop
dec
aam
pushf
jno
call
xchg
mov
xchg
xchg
xor
xor
mov
cmp
fcoml
les
mov
add
imul
dec
icebp
or
shrb
loop
ror
into
adc
and
ds
gs
xor
push
cmp
push
test
nop
cmp
jmp
add
ret
lods
imul
add
push
push
hlt
repz
xchg
ja
inc
xchg
dec
loope
dec
lret
mov
mov
mov
in
js
mov
jnp
xchg
lret
mov
outsb
imul
mov
or
out
test
loop
push
lahf
popf
loope
or
lock
fisubrl
sbb
ljmp
push
ds
add
gs
dec
in
iret
dec
faddl
pop
call
or
adc
pop
ficompl
test
and
sbb
inc
inc
out
in
jno
push
pop
jne
sub
adc
out
inc
pop
in
popl
ss
test
inc
sub
insl
adc
push
mov
xchg
notb
sbb
pop
iret
into
mov
imul
icebp
jg
dec
xor
ja
lds
je
lret
cwtl
fsubs
cmp
inc
inc
fs
jle
xchg
popa
int
dec
lret
cli
pop
test
xchg
pop
or
sbbb
pop
xor
in
rclb
insl
adc
test
addb
mov
inc
xchg
xor
lds
dec
mov
pop
mov
and
jge
sahf
mov
out
lcall
xor
sub
call
pop
lds
roll
dec
movsl
sub
inc
roll
sbb
test
into
dec
jne
push
insb
ds
and
fcompl
stos
mov
fs
and
add
insl
mov
xchg
sub
scas
pushf
add
incb
or
push
mov
mov
push
mov
sbb
es
xor
dec
and
fs
dec
adc
pop
mov
push
hlt
cli
jp
pusha
sbb
inc
push
or
jo
fidivl
insb
mov
push
js
out
ds
sbb
inc
shlb
pop
pop
lea
popf
gs
js
test
fsts
cmp
jp
jbe
mov
out
mov
out
add
mov
xor
xchg
cmc
xchg
mov
jle
xor
stc
xchg
shlb
rcrb
loop
mov
lods
mov
scas
xor
lods
mov
pop
adc
scas
loopne
pop
hlt
add
into
push
adc
dec
outsl
push
jp
ja
pop
ja
fisttpll
loop
xchg
pop
sbb
push
fildll
je
vpsubsw
divl
pusha
movsl
data16
add
loope
in
dec
adc
std
int
fisubs
daa
je
push
inc
loopne
sti
ds
mov
dec
gs
sub
ret
enter
rcrb
shrb
add
push
inc
cmp
cmp
arpl
xchg
push
int3
jg
leave
out
sar
mulb
sbb
arpl
mov
cwtl
outsb
push
cwtl
jbe
mov
adc
jg
sarl
int3
cli
xchg
mov
or
inc
in
xchg
jns
xchg
loope
pusha
xor
mov
cwtl
push
cmpsb
adc
insb
scas
leave
test
stos
les
cmpsb
fsubl
adc
lock
cli
aam
rcrl
mov
add
in
loope
into
and
dec
int3
adc
dec
or
dec
ficomps
ljmp
mov
mov
adc
push
sbb
cld
int3
push
loope
fmuls
add
or
mov
push
push
dec
sbb
arpl
adc
cs
pop
sub
cmp
jle
daa
pop
cmp
inc
inc
test
outsb
sub
ss
push
xchg
rorl
sti
xor
jg
mov
pop
lcall
les
jo
fsubrs
test
or
jnp
push
jg
mov
int3
daa
insl
scas
in
cs
aad
mov
jge
jbe
lahf
xor
xor
jmp
mov
xchg
mov
push
scas
scas
sub
sti
pop
clc
pop
pop
pop
pop
push
addl
in
jecxz
pusha
and
loop
rcr
cli
mov
cwtl
mov
add
xorl
fcmovbe
in
sbb
stc
add
cs
push
jge
adc
xchg
mov
in
out
mov
mov
pop
xor
or
pop
enter
cli
inc
sbb
or
inc
mov
out
loope
repnz
adc
sbb
aas
sahf
dec
jge
add
lock
out
xor
sub
dec
scas
sub
imul
bound
and
pop
jbe
outsl
adc
rorb
pop
stos
dec
je
mov
and
push
lds
icebp
jge
loope
xchg
out
push
outsl
pop
mov
test
xchg
adc
pushl
arpl
push
dec
dec
mov
cmpsl
mulb
sbb
fisubrl
adc
mov
aam
fwait
mov
mov
scas
subb
mov
sub
or
in
push
mov
mov
fcoml
rcr
push
add
ljmp
ljmp
push
cmp
or
sbb
popw
and
popa
outsl
mov
es
adc
pop
push
out
hlt
mov
jno
push
icebp
mov
sub
mov
jl
cmp
in
sub
xor
daa
push
mov
repnz
icebp
out
popf
scas
dec
pop
adc
mov
leave
xchg
dec
sahf
cmp
cmpsl
jno
add
lds
mov
dec
xlat
or
insl
insb
pusha
xor
gs
repnz
iret
mov
aaa
test
ljmp
divl
insb
or
mov
or
xor
push
lahf
nop
inc
popf
dec
add
mov
xor
xchg
mov
in
loop
pushf
cltd
fdivl
test
inc
adc
or
add
in
pop
movsb
loope
iret
ficoms
push
xchg
cmp
add
inc
lds
mov
pop
xlat
push
in
lods
add
sub
in
in
lock
loopne
in
fwait
push
and
lock
out
cli
sub
push
je
pop
and
push
push
loopne
lret
push
dec
mov
or
add
mov
add
mov
test
inc
dec
ja
xchg
sti
xchg
iret
cmp
jl
popf
rcr
dec
dec
fwait
mov
rol
jle
push
arpl
aam
stos
cmp
repnz
pop
dec
dec
pushf
mov
pop
dec
mov
popa
cmpsl
xchg
push
iret
sbb
test
xchg
sar
pop
xchg
mov
jge
mov
int
mov
test
xchg
xchg
movsl
jl
sti
nop
mov
ficomps
push
movsl
pushf
pop
bound
sti
mov
xor
lds
xchg
mov
cmp
mov
cs
jmp
test
imul
xor
push
sub
and
shlb
popa
adc
rorb
sarl
sub
mov
push
push
clc
mov
out
xorb
data16
cmpxchg
cs
jo
cmp
ds
sbbl
xchg
cmp
lcall
mov
push
in
cmp
jns
pop
cmp
mov
dec
cmpsb
cmp
subl
aaa
adc
lret
ja,pt
cmp
notb
test
jl
pop
xchg
mov
mov
push
add
cmpsb
shl
jle
jne
pushf
scas
add
jns
jnp
ret
cmpsl
mov
xchg
mov
mov
cmp
sahf
sbb
bndldx
mov
fimuls
jmp
pop
push
jecxz
cli
test
mov
cmp
push
lods
out
cld
lods
and
iret
dec
outsb
int
loope
jle
lds
outsl
in
fcmovne
and
fst
es
dec
adc
stos
adc
in
add
lock
imull
dec
js
adc
ljmp
pusha
and
cmp
inc
sbb
or
or
or
jg
sub
repnz
mov
pcmpgtw
cmp
xchg
cmp
xor
push
push
sbb
jl
cmp
hlt
arpl
and
mov
xor
cmp
dec
insl
xchg
cmp
imul
lods
out
xchg
repz
scas
les
aam
pop
mov
push
adc
inc
xor
and
pop
or
cmp
xchg
xchg
mov
jmp
sahf
loopne
jmp
and
push
pop
mov
loope
sub
mov
rcrb
loop
jmp
jns
mov
mov
push
aam
dec
push
imul
into
pushf
cmp
pop
jae
std
mov
stc
iret
mov
out
push
mov
jle
push
idivl
out
pop
jb
cmp
add
jo
cwtl
push
sub
inc
aad
push
testl
inc
std
mov
lcall
push
dec
xchg
stc
and
push
nop
adc
push
mov
adc
insb
mov
sbbl
cli
cmp
rclb
xchg
inc
mov
adc
lret
in
dec
or
xchg
js
xchg
pop
in
fcoms
das
lea
movsl
pop
or
push
adc
and
push
pop
sub
jle
cmpb
dec
xchg
enter
in
xor
int
notb
xchg
xchg
xchg
xor
add
icebp
divb
aam
push
out
ret
ret
add
notb
lcall
ret
or
hlt
mov
vpavgw
and
adc
or
shll
ficomps
mov
fsubr
out
adc
out
in
lock
cli
pop
insb
sub
in
jmp
and
push
call
sbb
cmp
out
dec
sbb
dec
push
pop
andl
cwtl
imul
cwtl
sbb
cmp
call
add
and
in
lret
sub
aaa
repz
inc
mov
sub
stos
cmp
cmp
xor
sbbl
mov
lods
test
lret
pop
mov
jo
and
sahf
fisttpl
stc
mov
cmpsb
jns
iret
out
cmc
movsl
enter
cmp
dec
inc
inc
inc
arpl
push
dec
dec
nop
int3
ret
push
mov
xchg
jecxz
std
cwtl
cmp
shll
iret
lds
clc
movsl
and
mov
fidivrs
stos
sub
push
mov
lock
lret
lret
mul
mov
mov
adc
leave
std
sbb
popa
in
sub
imul
adc
push
or
call
sti
pusha
out
test
adcb
push
push
inc
testl
pop
inc
push
or
push
pop
push
mov
xorl
aas
cmpl
push
xchg
inc
mov
ds
or
popa
mov
xchg
fistl
mov
jo
dec
dec
inc
jg
scas
into
jnp
dec
push
movsl
push
mov
movsb
aad
mov
xchg
pop
mov
xchg
imul
mov
xchg
jge
cld
icebp
sub
test
mov
dec
mov
rcll
add
jae
mov
pop
lods
out
or
sub
sti
xorb
push
leave
mov
gs
ljmp
jmp
dec
cmp
add
repz
sub
sub
popa
cli
sbb
aaa
in
inc
out
hlt
cli
stc
xchg
ljmp
cmp
push
arpl
cli
cs
pusha
and
push
push
lret
test
dec
xchg
xchg
ja
lods
repz
mov
dec
movsl
xchg
ret
xor
pop
dec
xchg
dec
popf
push
repz
hlt
cmp
cwtl
dec
in
jbe
push
das
lcall
mov
jo
outsb
pop
scas
ljmp
xchg
xchg
mov
jge
jecxz
or
subb
mov
dec
mov
fidivrs
xor
and
xchg
mov
lods
xor
sbb
ret
xchg
out
mov
ja
fimuls
gs
pop
iret
int
and
jmp
or
dec
imul
nop
dec
fcom
mov
fst
pop
jnp
pop
sub
shl
cmp
inc
daa
in
mov
sub
rcr
rcll
incb
test
pop
adc
push
inc
inc
and
push
sbb
mov
ret
fistpl
lcall
addr16
hlt
das
andl
iret
pop
js
xchg
shll
cmp
cmpb
mov
mov
nop
mov
cmp
jbe
repnz
sahf
and
adc
push
hlt
dec
jnp
int
sub
outsb
insl
insb
repnz
pusha
pushf
xchg
jb
xadd
shlb
inc
gs
loope
mov
xchg
mov
das
lods
xchg
and
jb
inc
fwait
cmpsl
cmpsb
and
inc
mov
mov
in
test
sbb
rol
adc
mov
sti
push
aaa
mov
pop
or
roll
mov
mov
jb
outsl
and
loopne
ljmp
adc
int
push
jge
out
out
out
in
add
inc
jne
pusha
int
xchg
xchg
adc
jns
cmp
dec
in
icebp
mov
or
mov
div
lcall
lods
repnz
push
pusha
sbb
insb
aam
daa
es
lret
mov
mov
aaa
xor
sbb
pop
ds
ficomps
cmp
xchg
andb
mov
dec
aam
mov
fwait
addl
loope
lods
bound
dec
cmpsl
pop
mov
push
and
sbb
jbe
lea
add
add
ror
out
sub
lea
xor
scas
cmpsb
xchg
cmp
and
cmp
adc
jmp
mov
inc
pop
inc
lds
faddl
out
adc
stos
jbe
ss
leave
rcll
lret
out
jmp
jmp
in
lret
adc
sub
xlat
xchg
xor
aas
and
popf
test
inc
sbb
pop
inc
jo
jle
scas
mov
clc
inc
ret
push
mov
push
xchg
pop
pop
in
push
and
and
das
pop
push
mov
pop
dec
push
dec
pop
pop
insl
out
xchg
aad
test
push
sbb
movsb
sbb
cmpb
mov
cmp
mov
ss
xor
adc
xchg
inc
out
insb
test
inc
jp
enter
out
xchg
int3
xor
das
out
in
xchg
data16
gs
pop
push
outsb
cmp
test
xor
aaa
ss
inc
aas
ds
jl
lahf
add
dec
xchg
cltd
adc
seto
ret
and
in
sarl
mov
bound
test
mov
dec
sar
or
sbb
int
ljmp
das
jae
pop
rcrb
sbb
fldenv
add
in
ljmp
add
je
cli
test
insl
pop
adc
lret
outsb
add
pop
push
pop
xor
jle
dec
idiv
ficompl
rcrb
pop
pop
dec
and
inc
inc
ja
mov
loopne
jne
push
dec
xchg
iret
pop
cmp
ret
push
mov
bound
mov
rorl
push
popf
int3
arpl
xor
adc
push
js
dec
mov
jp
push
xor
repnz
jne
data16
rcrl
pushf
jnp
sbb
outsb
cs
mov
ficoms
inc
or
or
sub
lret
mov
fimuls
cmp
lods
cmp
adc
roll
rcrb
inc
lret
mov
gs
jne
xchg
xchg
xchg
cmpb
mov
mov
or
and
sub
xlat
imul
das
fstpt
stc
fistps
fldln2
cld
and
or
xor
jnp
mov
fwait
cltd
cmp
shll
mov
pop
andb
loope
xchg
sbb
mov
mov
mov
cwtl
ss
sub
xor
pushf
push
cmp
aam
aam
aas
jns
inc
clc
div
cmc
adc
adc
add
fs
inc
cwtl
cmp
lahf
jg
xchg
gs
add
adcl
jbe
pop
xor
lods
fwait
pushw
aam
adc
scas
mov
jne
mov
adc
ret
loope
mov
sahf
int
inc
sub
mov
notl
mov
outsb
xchg
daa
xchg
jno
add
movsl
aam
popf
jno
and
dec
push
dec
pop
dec
push
inc
inc
jno
icebp
adc
and
and
cmp
int
or
inc
mov
add
or
fmuls
test
ljmp
shll
push
fs
cs
cld
or
pop
adc
sub
data16
xor
sub
ret
sbb
sbb
ja
push
dec
dec
push
cmp
xor
push
pop
aas
sbb
cmp
lret
mov
inc
jecxz
fs
das
andb
leave
sub
fwait
push
jo
mov
mov
rclb
mov
aam
stos
mov
loop
mov
xchg
xchg
xchg
xorb
jg
jo
xor
push
js
out
cmpsb
xlat
shll
jne
scas
out
push
jge
sahf
loopne
sub
fisubl
leave
jecxz
in
cmpsb
xor
sub
sbb
xor
lods
cmpsl
loopne
cmpsl
pop
lods
aad
lods
loopne
fs
int3
add
pop
cltd
or
inc
out
insb
or
aad
inc
in
dec
rcrl
into
dec
scas
jo
push
xlat
sub
push
xchg
and
or
pop
jl
aaa
cld
push
addl
daa
rcll
pop
adc
cli
stc
mov
mov
mov
sub
sbb
cmp
jle
insb
xor
mov
ficomps
lcall
cmpsl
pushf
pop
repnz
cmp
jmp
sahf
mov
dec
dec
mov
test
fcomip
dec
jne
fs
mov
pop
jnp
dec
imul
pop
test
loope
jle
jge
jo
adc
inc
mov
les
push
testl
or
test
dec
daa
xchg
mov
or
push
sub
cmp
out
mov
sub
mov
sub
loope
mov
jge
jbe
or
sbb
cmp
fidivs
mov
pop
xor
mov
sbb
bound
test
fwait
xor
dec
rep
sbb
cmp
dec
js
xchg
sbb
cmp
inc
ret
stos
dec
ds
repnz
pusha
and
dec
mov
outsl
mov
jg
mov
mov
cld
lret
jo
jp
mov
jl
cli
pop
jns
nop
dec
pop
cmpsb
into
sub
rcl
lock
push
push
je
cmp
adc
notb
or
xor
adc
imul
mov
lcall
or
shrl
mov
test
mov
notl
shl
mov
jns
cmp
push
mov
inc
out
or
add
int
scas
pop
cmc
jg
test
adc
lret
lds
pcmpgtd
push
popa
insl
and
aam
pop
push
jge
xlat
std
and
mov
ret
mov
mov
loope
add
arpl
sub
sbb
cmovl
ficompl
cmp
das
cli
mov
vucomisd
pop
push
je
or
push
jmp
out
and
dec
fs
out
nop
ljmp
adc
sub
repz
arpl
mov
jae
push
jg
fiadds
xchg
adc
xor
imul
cmpl
dec
lahf
movsl
pop
popf
push
repz
jg
out
aaa
xchg
jo
div
cmc
mov
imul
pop
movsl
adc
push
xchg
xlat
pop
stos
pop
mov
fldl
out
xor
xchg
push
sbb
fbld
ret
fwait
cwtl
adc
cltd
lock
mov
add
rclb
xlat
inc
pushl
xlat
and
sub
inc
lret
lret
bsr
leave
movb
cmp
ret
or
out
jb
sti
inc
xlat
sbb
movsb
mov
div
xchg
mov
fs
std
cld
jp
cltd
dec
mov
and
ud2
or
stos
or
dec
in
jb
push
movsb
or
orb
mov
or
sub
and
mov
es
adc
movsb
fisubrs
insb
imul
rclb
push
cmp
mov
into
push
and
jo
lahf
and
push
jns
mov
lret
mov
xorl
outsb
in
sbb
cs
loopne
aam
loopne
fiaddl
push
fdivrl
and
mov
outsl
shl
lods
sbb
push
out
out
scas
scas
negl
push
push
shlb
mov
xchg
pop
xlat
or
gs
jecxz
sbb
iret
cmp
iret
pop
xor
shr
out
int3
add
lret
push
bound
rcrl
cmc
or
sub
jecxz
jno
iret
cmc
adc
add
pop
push
aad
aad
mov
sbb
sbb
sbb
out
inc
sbb
jo
cmc
lahf
insb
mov
jbe
sbb
cmp
jl
outsl
and
pop
pop
xor
mov
and
repnz
push
push
jae
xchg
test
push
andl
or
pop
cltd
jae
das
insb
mov
mov
push
addr16
cmp
sub
loop
lcall
add
repnz
jb
mov
stos
test
test
or
fstl
add
adc
test
xchg
ljmp
or
mov
mov
movsb
sbb
fbld
add
clc
bound
lock
subl
out
mov
add
aam
ljmp
adc
std
sti
cmp
ds
and
or
pop
dec
inc
mov
pop
xorb
pop
pop
in
cmp
mov
pop
inc
cmp
cmp
xchg
outsl
test
js
fwait
pop
incb
repnz
arpl
jne
aaa
mov
jg
subb
xor
into
cwtl
fisttpl
stc
mov
int
lods
mov
stc
idivl
adc
sbb
mov
test
lret
mov
dec
xchg
pop
xor
sahf
popf
xor
imul
shrb
jno
out
add
xchg
mov
adc
cltd
int
daa
adc
sub
lds
mov
loope
or
jae
sbb
enter
push
mov
enter
out
inc
lret
push
std
push
lock
clc
in
jne
aaa
push
add
ret
ret
scas
scas
adc
dec
adc
mov
push
icebp
out
or
xchg
add
push
push
inc
lcall
and
inc
pop
mov
jge
test
mov
mov
pusha
xchg
sub
das
daa
dec
cmp
rol
repnz
sub
jge
mov
push
gs
mov
hlt
pop
movsb
fbstp
pop
bound
xchg
lret
dec
mov
insb
fwait
sbbl
mov
xor
ja
add
test
iret
rorl
mov
pushf
adc
clc
cmc
push
mov
xchg
xchg
xor
lea
lret
jmp
xchg
adc
xor
inc
add
gs
fbld
sbb
in
mov
cld
fstpt
mov
call
mov
xor
adc
jno
fwait
jecxz
fcmovu
addr16
adc
stos
cmp
popf
leave
mov
sbb
jae
and
fnstcw
cli
stc
or
ja
leave
aaa
and
ja
mov
jl
fidivrs
repz
test
out
pop
or
pop
sub
sbb
test
jmp
ja
sub
popa
lret
jle
aaa
push
push
xchg
imul
ret
inc
mov
jl
xchg
dec
xor
rorl
out
hlt
repz
jmp
mov
sub
das
cmpl
mov
lds
lds
xchg
mov
mov
popf
je
add
lret
jl
mov
fistl
push
jae
test
lock
xlat
pop
aam
ljmp
ljmp
cld
vunpcklps
ds
adc
xor
adc
lret
sub
mov
push
or
lods
xor
jb
sbb
sbb
or
add
dec
sub
pop
notb
dec
mov
push
add
incb
mov
in
pop
mov
clc
sbb
adc
mov
arpl
addl
mov
push
repz
add
or
sub
sub
pop
sahf
push
lret
es
ret
and
movsl
dec
pop
fs
jne
bound
js
sub
mov
insb
fistl
xor
sbb
xchg
into
jne
inc
inc
addb
pop
rolb
push
push
mov
mov
test
outsl
fisttpll
jbe
jbe
int
mov
ret
rcr
cltd
sahf
popf
sbb
mov
or
xor
cmp
mov
repz
bound
and
sbb
mov
repnz
cwtl
iret
xchg
lret
fnstenv
repz
enter
push
fs
xor
add
xchg
jmp
js
pop
fistpl
push
or
outsl
lcall
inc
and
adc
xchg
lods
add
jge
mov
icebp
or
sbbl
aaa
adc
mov
or
arpl
sbb
cmpsl
test
inc
insb
push
lret
sub
xchg
sub
loopne,pt
inc
lahf
popf
cmp
je
adc
fcomip
jne
loope
aas
cmpsl
popa
out
lods
xor
outsl
pop
stos
mov
mov
fdivr
push
call
adcl
movsb
mov
fwait
dec
lea
mov
cmp
or
fldenv
sbb
mov
xchg
sub
cmp
mov
push
sti
sbb
mov
out
push
cmp
enter
inc
in
popa
adc
lret
imul
push
jb
pop
adc
fld1
addr16
jns
cmp
dec
lock
insl
push
nop
in
aas
std
push
div
jne
std
or
fs
stc
or
inc
cli
jmp
icebp
insb
or
xchg
ret
cmp
pop
push
and
sti
insl
dec
sbb
shll
mov
pop
cmpb
aaa
mov
ds
js
pop
dec
test
cltd
cmp
inc
xchg
sub
xchg
push
fistpll
jp
popf
adc
inc
ret
xor
ljmp
addl
in
and
sbb
or
sbb
jnp
stc
test
in
mov
fnsave
adc
push
call
push
mov
pop
les
mov
jno
cs
pop
jge
mov
lcall
cmpb
push
hlt
add
shl
fmull
add
lods
adc
jno
mov
add
push
cmp
and
sub
push
mov
xor
sti
pop
add
popa
jae
jp
in
lret
and
mov
mov
mov
pop
call
cmp
pop
sbb
cltd
and
inc
inc
dec
pop
cmp
push
hlt
inc
mov
jns
push
push
dec
addr16
ret
rep
enter
sub
out
addr16
mov
movsl
test
sbb
test
stos
loope
dec
push
dec
xchg
sti
mov
push
insb
outsb
insl
push
and
popa
ss
addr16
cmpsl
adc
jp
outsl
in
adc
sti
mov
cwtl
ficoml
icebp
pusha
out
dec
lds
cltd
test
es
inc
jae
jo
popl
repnz
xlat
dec
pop
les
sarb
mov
in
nop
pop
jmp
aaa
dec
cli
imul
inc
cmp
or
in
clc
push
inc
leave
popa
out
cmc
aad
mov
xor
ja
pop
ficompl
add
stc
or
movsb
dec
std
push
adc
push
pop
cmc
pusha
mov
adc
and
jns
sbb
and
inc
push
sub
mov
lret
sbb
mov
inc
aas
das
data16
mov
movsb
dec
pop
inc
aaa
ja
adc
out
clc
mov
icebp
in
cmpsl
arpl
and
xorb
push
out
imul
mov
mov
cmp
insl
mov
xchg
leave
imul
adc
rol
xor
xor
push
sbb
and
jae
leave
dec
xor
test
imul
mov
mov
jecxz
lcall
add
fdivr
dec
pushf
test
mov
or
dec
fcom
add
repnz
loopne
fs
sbb
negl
push
inc
mov
test
and
fmulp
xor
push
adc
and
decb
inc
mov
xchg
aas
scas
or
jmp
test
stos
or
pusha
mov
mov
insl
jmp
das
lods
xchg
xor
adc
pop
xchg
sbb
pop
pop
mov
out
xchg
mov
mov
pusha
repnz
sti
mov
push
mov
mov
push
mov
loopne
ficoml
arpl
jne
les
push
gs
xchg
mov
int3
jae
mov
xchg
xor
cmp
popf
pushf
sub
cmp
adc
ret
mov
sub
adc
call
rol
mov
add
pop
inc
jo
pop
sub
ror
fiaddl
imul
xor
incb
sbb
imul
int3
adc
ss
je
aas
fcomip
xor
outsb
adc
adc
adc
std
jnp
sahf
mov
and
and
cmp
pop
sub
pop
mov
pop
push
mov
mov
push
cmp
sub
das
jl
ja
jl
jnp
push
inc
aas
push
nop
pop
jnp
imul
fiaddl
pop
mov
fmuls
dec
dec
lahf
aaa
sahf
cmp
repnz
dec
add
xchg
sbb
popa
jmp
dec
rcrl
stc
in
std
push
test
lock
movsl
mov
push
lods
xorb
and
mov
lods
add
xchg
xor
and
sub
outsl
add
xor
jl
fadds
aad
in
mov
pusha
sub
adc
lret
fcom
aam
in
and
add
push
or
hlt
mov
adc
and
addr16
int3
mov
jl
out
out
out
pop
jae
mov
sub
lret
push
daa
xchg
aas
inc
xor
sub
inc
cmpsb
lea
push
das
xchg
stos
jno
push
mov
sbb
punpckldq
cmpsb
inc
popf
inc
jbe
mov
sub
arpl
inc
dec
lahf
fisubrs
dec
mov
repz
insl
lea
mov
lea
sar
xchg
xor
adc
pusha
repnz
pusha
inc
ja
adcl
fdivrs
mov
jle
test
push
sbb
adc
mov
mov
iret
xor
xchg
mov
daa
xlat
inc
rolb
stos
add
shll
xchg
adcl
sub
das
stos
lds
xlat
popa
aam
or
hlt
lods
jb
xchg
jmp
loopne
push
les
lret
lret
pop
lret
jmp
in
and
in
int3
and
add
orl
aas
xor
push
dec
and
mov
mov
popa
jb
push
add
sub
push
pop
cld
push
pop
sub
jge
fst
pop
int
push
sbb
cmp
cltd
push
popa
xor
insb
pop
pusha
jp
sub
out
imul
cmp
mov
and
or
popa
aaa
adc
pop
dec
add
pop
icebp
dec
inc
ret
iret
popf
mov
jg
dec
rorl
leave
pop
add
rcr
test
or
rclb
jo
xlat
lahf
out
and
lds
lret
jns
subb
jno
cmp
test
aam
fsubrp
shrb
lock
cmp
ljmp
add
leave
mov
jecxz
lods
and
sarb
or
daa
test
ljmp
sbb
test
sti
dec
je
mov
sub
push
fstps
push
fwait
inc
in
xor
outsb
nop
adc
jne
fadd
add
pop
jle
and
sbb
and
imul
das
scas
notb
push
lcall
inc
jb
jl
cmp
mov
stos
arpl
cmpb
cmp
xlat
mov
pop
ja
ret
es
shrl
gs
push
jb
imul
adc
fcmovu
mov
pop
jne
rcrl
xchg
int3
mov
mov
je
adc
cwtl
fiaddl
adc
mov
xchg
loope
iret
shl
and
or
pop
pushf
aaa
sbb
mov
cmp
or
bound
stc
lret
dec
xor
pushf
imul
mov
lfs
fadds
xchg
push
mov
dec
inc
jecxz
notb
or
iret
aas
mov
outsl
stc
or
sti
dec
push
ljmp
fimull
jne
xchg
notb
pop
dec
stos
pusha
inc
sti
or
aam
dec
mov
repnz
nop
inc
cs
aas
push
and
sub
fisubrs
lahf
fldcw
xchg
js
orl
pop
fsubrs
roll
push
xor
pop
out
fisubl
xor
aam
ljmp
dec
faddl
pop
mov
shr
sbb
sbb
out
and
inc
or
cmpsb
aad
jae
mov
or
adc
lret
test
out
or
aad
xor
pushf
filds
jl
roll
push
mov
sbb
jb
sub
adc
je
dec
es
pop
test
xchg
ror
movsb
adc
test
sbb
aas
cs
fldenv
mov
add
cmp
fwait
dec
mov
and
push
cmc
cmp
cld
dec
jo
jmp
mov
xchg
jnp
push
pushf
ror
insl
in
push
sbb
and
xor
lods
jecxz
jle
cmp
lret
sbb
popl
cmp
pop
lcall
add
pushf
push
bound
hlt
jae
mov
scas
inc
pop
in
stos
and
addl
shr
jp
pusha
mov
xchg
and
jle
jp
jns
ja
call
es
cmpsb
adc
leave
xchg
cmp
pop
sbb
ret
aad
in
fs
xor
test
daa
cmp
cs
call
loop
sub
pop
int
lret
cmp
mov
jae
mull
in
inc
sbb
call
adc
ret
dec
add
lret
aaa
and
fistpl
push
inc
mov
cmp
fs
cmp
inc
sub
cld
pop
mov
mov
pop
jmp
repz
jmp
push
fisubl
arpl
test
test
sbb
xchg
sub
pop
scas
push
imul
push
inc
ds
pop
mov
inc
popa
pop
mov
lods
pop
xchg
int3
mov
dec
dec
dec
sahf
mov
icebp
cmp
arpl
add
jp
scas
xor
icebp
scas
xchg
test
xchg
fstpt
test
outsl
jp
into
pop
and
iret
mov
lea
adc
mov
lahf
sahf
movsb
lds
push
nop
out
shlb
push
add
popa
cmpsl
adc
pop
mov
push
dec
loop
shlb
and
xor
lret
fmull
mov
push
xchg
incl
xchg
lret
cmp
fcmovbe
pusha
fmul
out
andb
shr
and
push
pop
aas
push
adc
div
inc
sbb
test
test
jo
bound
dec
cmp
adc
jle
cmp
data16
pusha
dec
mov
movsb
and
xor
sbb
push
addr16
xchg
sbbb
mov
cltd
fiaddl
ja
popl
inc
sub
repnz
jecxz
add
pop
mov
cmpsl
mov
or
dec
imul
ljmp
pushf
mov
aas
jl
add
and
push
je
scas
nop
lea
ficoms
add
lahf
pushf
fwait
sbb
cmpsl
ljmp
clc
scas
mov
adc
stc
sahf
mov
rcl
push
lock
or
push
inc
jmp
mov
push
mov
aaa
lret
clc
insl
aad
aas
cmp
fadd
push
push
iret
cli
dec
addr16
aaa
int3
insl
add
out
aad
frstor
idivl
lods
div
cmc
xchg
mov
or
push
das
mov
pop
mov
ret
push
push
pop
popa
es
dec
push
lods
pusha
fistpll
mov
mov
add
or
popa
sbb
and
dec
jecxz
repz
sub
and
sub
dec
inc
mov
enter
outsb
nop
push
bound
pop
mov
jmp
xchg
push
cwtl
insl
mov
cmpsb
mov
pop
pop
pop
pop
inc
push
pop
test
ret
scas
xor
rcr
loopne
jne
pop
ljmp
push
cli
lcall
int3
mov
addr16
mov
mov
xchg
out
pop
sbb
es
popa
mov
mov
mov
lods
aad
jno
push
cld
rcrl
mov
fcomp
in
leave
loopne
rcll
stos
mov
or
sbb
inc
xchg
mov
ds
insb
testb
mov
mov
xlat
mov
das
imul
push
xchg
sbb
mov
mov
push
jno
jmp
testb
jbe
push
push
pop
adc
jp
xchg
jae
sbb
mov
int3
inc
inc
sub
dec
sahf
and
sbb
aad
xchg
push
mov
push
ret
inc
inc
cmp
xorb
pop
rcll
out
jns
aas
xchg
cmpsl
aas
push
icebp
pusha
pop
xor
in
data16
cmpsb
addr16
mov
jp
repz
jbe
hlt
jno
dec
xchg
mov
mov
stos
idivl
xchg
sub
pushf
out
push
scas
mov
mov
jns
and
pusha
popf
movsb
in
in
jbe
push
loope
mov
mov
cmpsl
adc
mov
or
mov
leave
test
fcomps
loope
lea
cmp
adc
jno
ds
jecxz
pop
xor
push
xchg
cmp
inc
inc
inc
inc
push
nop
out
push
pop
div
cmc
jmp
fiaddl
sbb
push
pop
in
and
adc
rorl
adc
pop
mov
xor
pop
add
out
es
and
cs
inc
sub
gs
sbb
xlat
push
push
fiaddl
fmull
add
xchg
lret
insb
sub
mov
jle
pusha
cltd
scas
xor
mov
addr16
dec
fistl
aam
std
insb
mov
jbe
xchg
mov
in
pop
jle
jl
and
xor
mov
or
mov
xor
xchg
xchg
out
mov
mov
lock
mov
cmp
mov
rcll
mov
lods
mov
loope
mov
loop
int3
push
and
push
aaa
or
mulb
cmp
inc
or
call
dec
andnps
add
hlt
loopne
and
xchg
cwtl
les
cmp
hlt
sbb
lock
jg
decb
add
or
pop
jae
jno
pop
sub
addr16
cld
pop
pop
punpckldq
dec
outsb
mov
mov
xchg
mov
adc
or
ret
fisttpl
cmp
fs
dec
mov
mov
cmc
outsl
cmpsl
rcrl
pop
pop
pop
call
dec
out
jo
push
xchg
add
fwait
in
and
cmc
and
subl
xchg
cmpsb
shll
mov
mov
sub
mov
mov
fsubrs
popf
cltd
rorl
andl
lods
cmpsb
ret
ret
notb
test
xor
fwait
adc
int
rep
je
dec
pop
pop
out
and
loope
jecxz
inc
push
pop
push
mov
push
cmp
mov
jae
testl
jmp
in
call
scas
in
aad
add
ja
cmc
adc
push
or
push
pop
in
jge
clc
and
cmp
sub
push
inc
jge
arpl
movsb
pop
arpl
inc
or
xchg
xor
insb
imul
xlat
popa
jns
cmp
cmp
lea
inc
loope
outsb
push
dec
fsubrs
push
test
stc
repnz
pusha
fistpll
pop
xchg
outsl
pushf
mov
cmpl
cwtl
popf
add
pop
test
pop
pushf
fistpll
jge
notb
mov
mov
xchg
ret
pop
fdivrs
lahf
sahf
popf
mov
add
ret
cmc
xchg
enter
xor
sbb
mov
mov
add
rdtsc
mov
xor
add
js
adc
push
add
or
adc
cld
lock
xlat
dec
xlat
sub
in
cmp
cmp
push
or
mov
jo
ss
mov
testl
icebp
fs
dec
stos
adc
mov
pop
icebp
dec
rclb
adc
iret
xchg
mov
xchg
addl
ja
cmpsb
mov
test
out
mov
pop
cmp
jmp
sbb
dec
dec
cmp
aas
xor
push
mov
pop
pop
icebp
pusha
shrl
cmp
dec
lret
dec
repnz
push
adc
xchg
mov
mov
imul
xchg
cmc
leave
fwait
loopne
call
and
fwait
cli
loopne
out
fnsave
mov
ljmp
ljmp
test
push
xor
std
mov
rorb
adc
jecxz
test
shlb
into
push
iret
mov
dec
rolb
ficompl
call
hlt
push
mov
pop
mov
add
dec
addr16
roll
cmp
gs
leave
xchg
xchg
inc
cmc
and
leave
movsl
push
cmc
cmp
jno
pop
jns
fcmovnbe
and
inc
shl
sub
inc
out
inc
in
inc
cmp
cmp
xor
xor
sbb
aas
add
mov
shl
mov
xor
xor
mov
icebp
inc
repz
cmp
push
dec
sub
jo
pop
add
lcall
addl
jb
xchg
sub
enter
inc
pop
mov
je
mov
loope
xchg
repnz
sub
pushf
fwait
test
out
sub
data16
shrl
imulb
fdivl
adc
lcall
or
push
scas
test
iret
into
mov
aam
sbb
pop
jae
jno
lods
fwait
and
test
loope
add
add
in
push
stos
inc
shll
adc
inc
sub
in
push
or
or
adc
iret
fxch
or
orl
xor
std
ret
jo
sub
sarb
inc
pusha
or
lds
adc
or
sub
stc
xor
mov
dec
leave
cld
sti
mov
jnp
mov
stos
add
shr
ja
hlt
pusha
repnz
pusha
outsl
jge
jge
pop
roll
gs
push
mov
popf
lea
xchg
jno
cmpsl
xchg
cli
js
cmp
mov
scas
enter
mov
mov
leave
xchg
xor
fs
mov
mov
enter
movsl
dec
or
loop
scas
stos
lods
lods
stos
adc
popf
clc
dec
call
out
filds
mov
cmp
push
test
push
ror
lret
lret
xlat
aad
mov
loopne
xchg
sub
and
popa
sub
stos
mov
out
insb
movsb
mov
xchg
mov
add
push
push
and
stc
xchg
imul
push
push
or
or
adc
xor
jge
dec
sbb
mov
xor
xor
dec
cmp
ss
sarb
dec
push
test
inc
xor
lods
push
dec
lea
xchg
das
sarb
lods
mov
inc
sbb
cmpsb
call
lahf
idiv
pop
lods
out
lcall
cmpsl
xchg
mov
fwait
out
lods
mov
or
js
or
mov
rcr
movsb
movsl
xlat
in
xchg
shl
lahf
jno
mov
aas
ret
clc
lea
shll
stos
test
dec
div
xchg
pop
pop
jo
cmpsb
add
rorl
or
subl
mov
push
sbb
mov
pop
in
mov
xchg
shlb
sbb
mov
xlat
test
push
out
sbb
adc
jge
rcr
rcll
cmp
mov
loope
imul
push
pushf
arpl
imul
and
test
add
jo
or
or
mov
inc
fs
sbb
dec
sub
push
mov
dec
ds
mov
dec
jo
inc
rcll
popf
push
js
data16
int3
out
xor
inc
scas
imul
addl
adc
mov
imul
dec
adc
sub
lret
xor
xor
jae
fistps
les
les
pop
or
lock
adc
rcll
outsl
aas
and
mov
in
popa
pop
lea
in
pop
mov
inc
mov
in
or
sub
xor
outsb
xchg
pop
icebp
push
cmc
stos
sbb
xor
lcall
sbb
pop
sub
push
lds
aam
push
aam
mov
mov
pop
and
movsb
push
dec
daa
inc
and
pop
xchg
lods
mov
dec
pop
sub
inc
sbb
cltd
dec
mov
lods
push
mov
in
aam
lods
push
inc
fwait
dec
push
fiaddl
cmp
jp
sub
ljmp
dec
iret
jg
mov
push
ja
pusha
jb
push
pusha
rorl
cmp
xchg
leave
orl
and
aad
or
xor
je
scas
lock
mov
aad
mov
mov
mov
stos
mull
fidivrs
mov
xlat
stc
mov
loope
paddsw
dec
in
pop
and
je
mov
ss
cld
push
fstps
and
roll
inc
das
test
stos
idiv
test
mov
call
adc
stc
add
jge
aaa
and
or
sub
or
xchg
pop
mov
ficompl
in
jecxz
dec
inc
xchg
inc
inc
xor
insl
dec
test
pop
sub
fwait
mov
lods
hlt
push
inc
ret
es
ljmp
hlt
mov
fistl
sahf
dec
mov
mov
dec
dec
faddp
mov
into
push
mov
jne
dec
xor
pop
xor
jno
gs
clc
stos
or
daa
mov
out
jns
scas
imul
mov
jle
jge
add
sahf
test
ss
call
lret
enter
or
lods
xor
pop
xor
pop
mov
fldenv
sbb
fldenv
pop
imul
fs
rclb
sub
js
cmp
and
jge
and
pop
call
push
leave
mov
loopne
ljmp
xor
adc
cwtl
or
test
push
insl
jmp
icebp
insl
cmc
inc
push
inc
pop
jbe
sub
jle
adc
and
test
movsb
sub
jmp
bound
ss
repz
push
inc
inc
aaa
jno
insb
fiadds
sub
jbe
cmpsb
clc
push
jge
push
cmp
repnz
inc
mulb
clc
test
lds
add
adc
hlt
popf
and
xchg
fisttpll
mov
sub
push
mov
xchg
mov
in
sbb
sub
mov
jl
sti
aas
out
out
sbb
cltd
test
xor
xor
dec
ds
sbb
mov
mov
sub
pop
cmpsl
lock
leave
daa
shr
scas
jae
stos
clc
cs
sub
xor
cmp
inc
fcoml
ds
dec
sub
leave
add
add
and
fisubs
jno
hlt
fsubl
icebp
fildl
test
daa
test
pop
gs
inc
sub
imul
insb
data16
push
cmp
aam
arpl
xchg
inc
test
imul
mov
lahf
fwait
push
push
push
push
shlb
int3
mov
lods
jle
dec
jecxz
xor
push
inc
dec
pop
push
add
cmp
dec
outsl
cmp
pop
push
hlt
dec
jno
outsl
outsb
insl
jno
icebp
push
pop
lahf
movsl
pop
lods
addr16
mov
in
test
movsl
mov
push
jb
xor
mov
xor
adc
pop
sahf
fidivrl
cltd
loope
jle
and
jo
scas
mov
sbb
loopne
jb
mov
cmp
sub
sub
shlb
lret
daa
push
icebp
mov
insl
std
pminub
test
jl
ret
adc
adc
clc
adc
hlt
pop
cwtl
push
nop
and
jnp
cmpb
adc
jne
jp
popf
sub
loopnew
push
insb
xchg
push
fs
icebp
push
sbb
out
inc
xor
inc
or
popa
repz
cwtl
stos
ja
sub
fdivp
in
push
inc
out
orl
inc
dec
popa
push
ss
lret
idivl
jns
stos
mov
imul
xchg
dec
fcomp
xchg
nop
xor
push
xor
xchg
push
xchg
test
addr16
ret
xchg
xchg
movl
rorb
mov
pushl
movsb
lds
mov
inc
nop
jb
jno
jmp
sbb
sub
fcomps
pop
mulb
aas
lock
add
je
adc
inc
and
pop
pop
push
shl
addr16
testb
mov
fisubs
rorb
arpl
cmp
mov
nop
xchg
push
repz
and
cmc
pop
les
add
push
mov
xchg
pusha
sub
insl
sarl
cmp
lods
cmp
lcall
pop
jbe
ss
sbb
mov
mov
xor
dec
push
sbb
jmp
mov
scas
jecxz
jle
xchg
cmpsb
data16
ret
push
cmp
repnz
aad
pop
push
pop
outsl
pop
das
mov
aad
mov
xchg
rolb
ret
cmp
jo
push
and
imul
cmp
rclw
sub
push
inc
mov
mov
cmpsb
mov
iret
popa
lcall
dec
test
inc
lcall
test
mov
test
mov
insb
inc
push
inc
in
mov
loope
movsl
movsb
cmp
lret
int
and
in
fdivs
or
fcmovnb
xor
adc
pop
add
sbb
dec
sahf
jmp
ret
xchg
and
inc
std
stc
fs
pop
mov
fs
rcrb
inc
sub
sbb
mov
das
cs
xchg
mov
aam
jae
dec
pop
aas
ds
ja,pn
xor
ficoms
mov
cmp
cmp
mov
mov
push
ja
cmp
shl
fwait
or
gs
sbb
or
mov
leave
popf
ljmp
sub
mul
xchg
jle
std
jnp
cli
mov
fwait
mov
mov
adc
lahf
call
push
ret
ret
xlat
sub
inc
lods
out
das
mov
cmp
push
add
cli
push
inc
bnd
enter
add
out
sbb
cli
push
sub
in
imul
sbb
ja
adc
and
mov
add
popf
insl
sbb
inc
dec
imulb
or
inc
mov
cmp
mov
and
xchg
dec
mov
inc
inc
xor
hlt
or
mov
sbb
les
das
insl
xchg
fisttpl
cmp
dec
fidivrl
cmp
inc
clc
cmp
inc
lds
dec
andb
andb
jo
shl
psraw
and
adc
mov
stos
sbb
lock
mov
lods
mov
mov
xor
lea
mov
cmpsl
aam
sti
sbb
jae
test
and
lret
jmp
rcll
pop
lret
inc
data16
push
add
add
loope
cmp
adc
sarb
popa
jmp
mov
iret
cmp
pop
stc
or
inc
jo
sbb
int3
stos
in
arpl
add
add
std
cld
dec
cli
adc
inc
ljmp
sub
sub
dec
outsl
mov
or
ficompl
pop
jo
cmpsb
dec
lea
mov
inc
mov
sub
push
xchg
pushf
jbe
fcomip
xor
push
xor
push
push
aas
sub
xor
or
cmp
push
mov
add
mov
out
cmp
enter
repnz
bound
jo
adcl
pop
sub
fstpl
cmp
mov
in
dec
xchg
movsb
mov
mov
push
xchg
jg
lods
sti
mov
jae
insl
popf
pushf
fwait
mov
test
cmpsb
movsl
sti
cmp
sub
arpl
cmp
test
hlt
and
jmp
sub
stos
adc
and
adc
jne
and
aad
es
cmp
cs
int3
and
aas
mov
xchg
repz
test
jmp
shl
or
sbb
add
addb
sub
test
mul
stos
push
or
adc
stc
cmp
sbb
and
mov
cmp
and
sub
fsts
mov
xor
sub
std
xchg
addr16
xor
or
pop
pop
push
jo
adcl
lahf
shlb
ja
adc
cmpl
movsb
mov
mov
xor
out
fldcw
mov
push
ficoml
iret
sub
rcll
imul
xor
fs
adc
fcoml
icebp
outsl
mov
mov
negl
test
loope
divl
add
mov
sub
pop
sbb
push
jnp
adc
mov
testb
addr16
adc
or
ljmp
loope
adc
xchg
add
addr16
mov
and
inc
mov
orl
mov
ss
sub
das
xchg
jae
cmp
cmp
arpl
dec
sarl
jl
cmp
mov
jbe
inc
mov
in
cltd
add
lods
push
xor
fcomps
pop
jmp
fimull
xchg
cmp
adc
loop
stos
lock
mov
pop
nop
mov
sbb
mov
popf
pushf
sbb
lock
fmuls
or
dec
scas
lods
lods
pushf
mov
mov
cld
adc
pop
stos
add
pop
stos
sub
test
push
int
lds
mov
imul
lret
cmpsl
add
in
je
out
lock
aad
pusha
add
cmp
sbb
add
out
xor
push
dec
lock
insl
inc
popf
subb
sub
or
push
adc
std
cld
mov
and
aaa
rcrl
xchg
mov
and
movsb
aas
xor
mov
add
or
inc
mov
sub
ret
jno
add
insl
out
addr16
push
jl
testb
sub
pusha
pop
fsubrp
ret
dec
mov
in
cmc
and
push
push
xorl
icebp
lcall
out
mov
jo
in
mov
insb
lahf
jmp
ds
jbe
fisttpll
out
sub
mov
popf
addr16
xor
jb
xor
ficoms
mov
scas
mov
fnsave
out
adc
ret
in
and
stos
adc
sub
mov
imull
je
dec
hlt
loopne
ficomps
mov
dec
dec
cmp
or
out
in
in
imul
add
inc
adc
popa
add
cli
jns
sub
ss
js
insl
adc
fisubrs
ds
adc
pop
movsb
outsb
and
imul
or
xor
fs
dec
push
adc
cmp
jbe
xchg
cmp
jl
push
movsl
and
push
mov
cmp
xchg
hlt
cmpsb
jno
pusha
pop
pop
fs
cmc
cmpsb
add
in
hlt
cmpsb
dec
mov
xor
test
xor
orb
jl
stc
mov
jl
fldenv
popf
jmp
mov
xor
call
fwait
lahf
add
rcr
lahf
jmp
lods
mov
ret
mov
jne
lahf
cmc
int
cmc
ljmp
and
in
into
loop
mov
jecxz
cwtl
mov
add
int
mov
inc
adc
out
mov
pop
xchg
shlb
jmp
jmp
aaa
push
clc
adc
ds
add
pop
xor
imul
sbb
popa
sbb
je
jb
lods
mov
jp
dec
mov
xorl
mov
add
sub
cmp
hlt
mov
in
xchg
mov
pop
lahf
mov
mov
out
lret
xchg
sahf
pushf
dec
fwait
pusha
test
push
dec
xchg
jo
icebp
call
repz
push
ja
or
into
inc
push
call
cltd
add
mov
outsb
cltd
nop
jl
loop
fnsave
mov
ds
pop
xchg
adc
jmp
inc
xlat
mov
sub
mov
jne
mov
mov
test
mov
cld
xchg
and
and
mov
mov
jmp
aad
and
mov
dec
dec
jecxz
adc
int
pop
xchg
das
jo
fildll
clc
cmp
and
pop
ds
aaa
ss
or
sbb
push
and
icebp
lahf
dec
and
xchg
sbb
pop
dec
dec
dec
xchg
lods
push
sbb
mov
mov
xchg
jne
ds
sub
xchg
les
xchg
cs
outsb
cmp
mov
dec
das
das
jbe
sbb
aas
lcall
daa
out
dec
inc
into
add
push
dec
dec
push
jne
lcall
sbb
shrb
xchg
or
lods
stc
cmpsb
xorl
jb
stos
movsb
lods
mov
fcmovbe
mov
mov
jp
inc
jmp
ret
lock
loop
hlt
push
shrb
and
jns
lock
nop
cmp
nop
add
loope
stos
fwait
or
les
sbb
cmp
cmp
pop
cmp
inc
imul
leave
fdiv
and
jmp
imul
push
in
add
fcoms
jae
pop
ds
pop
jmp
mov
inc
jle
dec
jnp
dec
outsb
imul
arpl
daa
es
add
inc
mov
push
aas
mov
rorb
push
mov
fisttps
mov
fcoms
push
pop
ds
aas
movsb
mov
out
enter
lods
sbb
adc
push
pop
fs
xchg
hlt
xchg
scas
xor
pop
aam
scas
inc
loopne
addr16
add
pop
inc
and
ljmp
test
in
rol
into
orl
daa
aad
scas
mov
cwtl
xchg
xchg
mov
push
fldcw
push
lock
iret
cmp
ret
ret
hlt
adc
cmp
imul
cli
push
std
rcl
insb
cmp
inc
push
push
js
ror
into
mov
ret
lret
xlat
mov
jns
mov
inc
cmp
push
adc
subb
cld
push
insl
xor
xor
cmovl
push
inc
icebp
cld
xor
and
and
lea
nop
dec
dec
pop
insl
dec
dec
dec
push
stos
sub
mov
sbb
sbb
inc
js
test
inc
xchg
sub
jbe
add
movsb
mov
inc
inc
inc
mov
pop
movsb
pop
mov
loopne
dec
dec
inc
add
adc
dec
lahf
movsl
xchg
arpl
mov
lret
pusha
xorb
stos
pop
pushf
jecxz
ja
inc
mov
lods
mov
xchg
pop
jg
in
xchg
mov
xor
sub
aad
addr16
inc
dec
push
or
jecxz
adc
xor
cmp
rcrl
cld
rolb
sbbb
mov
jmp
in
mov
adc
shrb
push
das
js
or
in
inc
pop
and
iret
scas
fs
lods
dec
leave
test
aam
jae
or
out
fildl
inc
test
in
add
xor
icebp
inc
daa
sub
mov
adc
mov
push
scas
jg
repnz
push
stc
pop
push
popa
sbb
xchg
push
loope
push
mov
lock
mov
int3
push
sbb
les
int
and
mov
movsl
loopne
js
aaa
or
scas
roll
mov
pop
pop
movsb
adc
and
lret
icebp
cwtl
cli
aaa
insb
jnp
js
nop
mov
test
test
lods
test
dec
jmp
in
adc
mov
xor
fwait
out
jmp
xchg
mov
push
test
jo
mov
mov
mov
push
vdivps
in
mov
mov
fcom
mov
jae
idivl
push
inc
inc
fildl
into
add
or
fdivs
ljmp
inc
xchg
cltd
adc
jmp
es
in
pop
push
dec
add
xchg
sbb
ja
dec
push
push
mov
jbe
outsl
int
and
test
nop
mov
jbe
lret
xchg
pushf
push
push
icebp
xchg
and
dec
xchg
data16
jl
fs
sub
xchg
sub
adc
pop
icebp
cmp
negb
inc
dec
test
repnz
jnp
push
xchg
scas
into
jae
ret
in
fstps
nop
jno
in
mov
in
lcall
hlt
xchg
repnz
cld
fstpt
mov
sbb
arpl
mov
cwtl
jno
and
cld
sub
jmp
jmp
ret
sbb
inc
sub
lods
inc
lret
mov
data16
xorl
or
jl
xchg
and
push
fcmovu
call
xchg
das
call
es
clc
neg
es
and
inc
and
ljmp
add
dec
cmpsl
ja
dec
outsb
sti
dec
adc
cmp
or
or
ret
and
test
jecxz
dec
push
mov
fstpl
and
push
hlt
mov
stos
arpl
in
shll
or
xlat
cltd
push
xor
repnz
inc
mov
sarb
dec
mov
mov
lods
xorl
lods
lods
pop
test
jl
out
ret
mov
ret
jmp
sbb
fwait
in
jecxz
mov
xchg
add
cmp
jae
movsl
inc
sbb
add
mov
xor
shll
jb
xchg
mov
movsl
pushf
push
pop
adc
test
adc
les
aam
xlat
adc
xchg
jmp
out
bound
mov
xlat
sbb
push
jl
lea
out
in
in
push
or
and
rcrb
sbb
inc
cltd
data16
shrb
stc
insl
pop
push
add
adc
mov
inc
divl
stc
cmp
push
pop
cmp
js
aas
mov
gs
cmp
jmp
adc
pusha
loop
push
fwait
daa
pop
fadds
sbb
dec
sub
lods
mov
test
xchg
add
test
arpl
xchg
fcmovnbe
xor
cmpsb
or
insl
mov
push
pop
fcomps
cmp
test
in
cli
mov
test
in
sub
adc
lret
stos
mov
sahf
sahf
gs
fwait
cmpsl
cltd
lock
test
lock
xchg
adc
add
mov
cmc
xchg
mov
aam
push
sbb
cld
jp
cmp
jmp
fstpl
adc
lahf
std
dec
int3
mov
adc
dec
push
movsb
mov
jno
mov
out
lea
aad
mov
insl
lods
out
xor
loopne
and
decl
inc
xor
lock
mov
int
mov
dec
dec
pop
incl
jge
jmp
iret
pusha
pop
lcall
ret
movsb
pop
cld
add
sub
jle
xchg
adc
inc
jge
xchg
jne
xor
mov
xor
sub
stos
mov
pop
hlt
cmp
dec
jecxz
mov
movsb
popa
or
scas
push
mov
push
ret
lods
arpl
jbe
fcompl
lea
sub
dec
subl
and
popa
insb
push
lcall
or
sub
cli
mov
enter
add
nop
push
iret
es
xor
cmp
add
stos
aad
or
xor
sahf
add
fdivrl
sti
sub
movsb
push
mov
or
or
loop
sbb
add
adc
jno
clc
cs
clc
das
sub
add
leave
or
add
je
mov
mov
sbb
cmpsl
inc
add
dec
or
or
das
imul
adc
rorb
adc
js
fisttps
mov
push
sub
and
imul
dec
es
or
or
sbb
mov
xchg
push
andl
cmp
ds
lahf
sub
loop
shlb
dec
pop
ds
movsl
cmp
dec
sbb
imul
mov
icebp
push
dec
out
push
test
movsb
mov
add
std
jae
add
xor
inc
test
mov
jnp
xchg
jg
jg
xlat
insl
repz
and
add
mov
push
scas
add
test
std
aas
adc
adc
loopne
mov
je
test
in
stos
lock
call
jmp
outsl
dec
sbb
pushf
pop
xchg
test
aaa
shlb
rol
fidivrl
add
sub
xorl
flds
pop
rcll
xchg
xor
push
out
inc
mov
and
and
or
ja
fiadds
mov
sbb
mov
inc
arpl
inc
sub
pop
cmp
out
xchg
push
mov
dec
jmp
push
loop
dec
dec
xchg
cmp
gs
push
aad
pop
cltd
jl
pop
pop
arpl
gs
xchg
hlt
dec
mov
pop
scas
in
loop
mov
test
sbb
sbb
xor
clc
xchg
lret
icebp
xor
mov
mov
mov
mov
idivb
in
mov
sbb
shlb
sub
fs
push
xor
fdivrs
fucomp
movsl
lret
jno
sub
orb
in
add
add
cmp
pop
or
aas
push
popa
mov
pop
int3
xor
push
adc
pop
std
mov
lahf
ja
sub
daa
pop
mov
mov
sub
cs
inc
cmc
pop
sub
lahf
addr16
rorl
xchg
mov
sub
lods
ja
in
push
mov
push
push
stos
xor
movl
sti
add
jns
pop
mov
imul
mov
mov
rclb
jns
xchg
mov
fstpt
adc
scas
popf
lock
cltd
in
fidivs
inc
out
inc
stos
mov
sub
imul
loop
sub
sbb
jp
mov
sub
or
push
mov
push
xchg
cmp
das
cmpsl
jmp
and
ljmp
inc
pop
sbb
and
sub
pop
ds
mov
xor
cmp
mov
cmp
push
cmp
js
sbb
add
push
dec
repnz
inc
dec
dec
cs
push
sub
insl
mov
jbe
sbbl
inc
sub
pop
jo
sub
fs
lcall
decl
cmp
cmp
jecxz
xor
mov
fstpt
repz
in
cli
call
in
dec
inc
andl
mov
inc
les
jge
jnp
jo
add
pop
inc
mov
mov
or
outsb
mov
cmp
mov
jo
cltd
adc
dec
or
jb
fisubrl
popf
stc
loope
mov
jp
mov
mov
das
inc
pop
inc
push
mov
ror
into
dec
test
sbb
aad
sbb
fucom
fsubl
jg
add
add
ljmp
clc
adc
jmp
xor
test
outsl
jae
or
cmp
add
push
sub
dec
bnd
popa
jnp
xlat
mov
icebp
pop
mov
test
push
mov
in
mov
pop
xchg
adc
jg
mov
cltd
push
sbb
stc
cmp
inc
and
arpl
push
imul
popw
mov
lcall
sti
arpl
cmpl
fnstsw
cmpsb
sbb
repnz
mov
or
imul
mov
inc
mov
jnp
xchg
xor
pop
cmp
sahf
popf
out
outsb
push
cltd
test
xor
mov
push
cwtl
cld
nop
mov
loop
inc
cmc
aam
mov
adc
aad
add
and
int3
into
int
jo
rolb
insl
jae
jb
fisubs
in
pop
lret
dec
test
cmpxchg
or
jb
xchg
mov
push
ljmp
gs
roll
and
pushf
or
sbb
idiv
pusha
mov
ds
daa
stos
cwtl
sub
xchg
int
jno
sbb
pushf
aaa
outsb
js
inc
inc
es
pusha
xchg
push
insb
inc
cwtl
cmp
sbb
aas
mov
jns
das
repz
sbbl
xorl
adc
sahf
xor
sbb
jecxz
outsl
pop
ret
fadds
and
fcmovnu
xchg
lea
dec
sarl
imul
mov
lea
insb
leave
fdivrs
xchg
xchg
mov
test
and
int3
or
sbb
lods
popf
lods
out
lcall
sbb
add
mov
out
enter
in
dec
out
xor
mov
std
dec
sub
cld
mov
sub
es
imul
js
pop
imul
ljmp
mov
sbb
push
inc
inc
pop
pop
dec
or
icebp
dec
jb
push
je
fucom
fbstp
sbb
sub
or
inc
shll
sbb
mov
xchg
sub
xchg
icebp
addr16
dec
pop
sub
pop
cmp
and
arpl
push
cmp
aaa
push
pop
inc
xchg
cmpl
push
js
mov
mov
dec
sub
mov
xchg
push
fistpl
jl
jp
cltd
rcrl
cltd
arpl
jl
loope
mov
ss
mov
fst
mov
add
incl
and
jecxz
jmp
xchg
xchg
roll
aaa
sarb
ret
mov
add
fidivrl
in
cs
add
mov
sbb
unpckhps
xor
pop
fnstenv
mov
addr16
dec
movsl
adc
sti
mov
test
clc
push
dec
xchg
inc
fidivs
sbb
xchg
adc
popa
adc
repz
inc
mov
push
pop
and
adcl
ret
adcl
imul
jbe
insl
xchg
pop
mov
cmp
fnstcw
sub
pop
cmpb
pop
mov
cwtl
insl
mov
sbb
mov
loopne
adc
int3
jnp
loop
scas
mov
jne
mov
sarl
mov
lds
imul
push
loopne
addr16
mov
sbb
cmpsl
cmpsl
hlt
in
pop
aad
mov
mov
push
adc
mov
std
scas
mov
in
push
adc
xlat
loope
mov
loope
pop
adc
inc
jnp
shlb
es
sub
add
sub
shll
fiaddl
shl
sbb
adcl
dec
addl
cli
sbb
or
push
pop
sub
fistpl
imul
push
jne
xorl
push
repnz
mov
pop
xchg
dec
lods
mov
push
sub
js
fistps
into
movsl
dec
popa
adc
xchg
repnz
cmp
inc
jnp
mov
jns
repz
mov
pop
sbb
stos
and
lret
push
cmpsb
xchg
mov
or
xchg
xor
mov
and
push
add
pop
enter
mov
mov
jno
cmpsl
mov
rolb
das
mov
xor
dec
ljmp
jge
add
stc
je
or
lds
outsb
aam
dec
xchg
mov
in
mov
out
mov
fld1
mov
add
out
out
insb
xor
or
fmull
inc
gs
add
sub
out
mov
pop
daa
outsl
negl
pushf
xor
push
daa
add
push
mov
and
pop
push
mov
add
xchg
push
push
xchg
jg
xor
sbb
daa
mov
ror
jge
cs
repnz
sub
sub
fnstenv
test
xchg
push
hlt
add
mov
clc
shr
pop
stc
out
into
jl
les
stc
lods
jmp
sbb
cmpsb
xchg
scas
jg
jge
inc
mov
test
les
mov
inc
loopne
mov
mov
sahf
popf
mov
rorb
popf
cmp
xchg
mov
scas
aam
stos
in
sahf
jno
popf
repz
inc
mov
adc
and
in
loop
in
sub
xchg
xchg
int3
xor
or
sbbl
jp
push
and
adc
into
and
mov
lock
inc
sub
imulb
push
pop
sarl
mov
outsl
popf
arpl
stc
cmp
lcall
bound
or
or
xchg
sarl
cmp
inc
mov
mov
inc
or
adc
mov
bound
lcall
inc
xorl
fisubl
dec
dec
cmc
mov
mov
lahf
scas
repnz
repz
push
ret
pop
pop
pop
push
pusha
iret
dec
fdivl
outsl
in
and
movsb
fdivrp
fcomp
jbe
xchg
imul
jge
jle
mov
int
push
xchg
dec
aam
xchg
mov
jge
pop
pop
enter
cld
push
push
add
test
lea
fs
rcll
test
in
les
out
dec
scas
or
inc
in
arpl
mov
roll
mov
aaa
mov
fs
add
out
sub
rolb
lock
pop
icebp
xchg
hlt
jecxz
notl
adc
int3
std
cmp
outsb
les
out
and
adc
outsb
fisttpl
or
jnp
jle
in
je
stc
pop
push
sbb
sub
ds
into
mov
sub
sub
push
xchg
dec
movsl
fldt
sub
dec
inc
lea
movsl
adc
mov
or
push
push
hlt
xchg
stos
sub
jmp
aas
andl
xlat
in
int
imul
fdivl
cmp
les
and
xor
mov
mov
mov
jo
xor
lret
sbb
sahf
mov
fists
jns
mov
sbb
or
lret
dec
roll
lods
das
stos
popa
popf
jns
sbb
xchg
cs
sarb
push
cli
aad
in
cmp
jecxz
mov
lret
popa
push
inc
movsb
cli
jmp
dec
mov
popa
inc
rclb
inc
cli
lahf
cld
sti
add
std
mov
inc
dec
add
sub
jne
test
push
sub
pop
cmp
or
and
pop
sub
inc
push
lahf
jge
aam
xchg
daa
cwtl
push
jo
sub
mov
ret
imul
mov
shlb
cltd
popa
mov
pop
imul
sahf
repz
pushf
inc
sahf
imul
xchg
fidivrs
fidivl
fidivrl
lret
loop
xchg
je
rorl
mov
ret
jae
cmc
fdivl
nop
or
adc
in
movsl
lcall
jmp
xor
repnz
mov
mov
xor
psubw
ljmp
loopne
fdivl
jb
sub
adc
jb
inc
inc
aas
outsb
mov
fxam
and
aas
das
jbe
ss
mov
or
stc
notb
cmp
mov
iret
and
add
cld
stos
imul
push
mov
inc
shrl
or
ss
push
push
push
xor
cs
jecxz
pop
int3
sub
sbb
xchg
xchg
and
mov
lods
mov
in
mov
add
xchg
jmp
cmp
mull
outsl
dec
pop
les
stc
add
sahf
mov
mov
mov
sarl
cltd
xchg
push
shrb
test
xchg
xchg
and
mov
jne
add
mov
mov
pop
mov
mov
mov
outsb
sub
xor
loop
pop
mov
xchg
add
scas
repz
lods
mov
std
in
lea
fcom
addr16
shlb
mov
push
inc
pop
out
and
cmp
sti
cmpxchg
lods
xor
je
add
inc
mov
popa
shlb
mov
mov
js
pminsw
adc
fcoms
inc
sub
sahf
mov
push
into
add
imul
jmp
sub
lea
mov
aas
ds
mov
fildll
jl
movsl
dec
sahf
adc
push
ds
outsl
mov
mov
icebp
xor
outsb
jo
outsb
pop
add
loop
mov
push
adc
mov
mov
mov
mov
mov
jle
cwtl
ret
cmc
jg
fnsave
aam
mov
and
in
hlt
cwtl
aas
xchg
aas
enter
inc
jecxz
repz
loopne
mov
or
out
jecxz
sub
outsb
fxch
dec
test
add
push
idivb
out
out
insl
ljmp
add
or
decb
sbb
je
loopne
mov
inc
inc
shlb
xor
adc
cmp
inc
adc
push
or
push
cmc
cltd
es
adc
addr16
repz
push
pop
aaa
sbb
pusha
inc
sub
subl
insb
cmp
fcos
pop
ss
cld
sub
sub
cmp
ss
mov
ss
jnp
mov
jns
pusha
repnz
pusha
cmpsb
data16
push
mov
stos
jo
outsb
sbb
sbb
js
jbe
xchg
enter
jg
adc
mov
mul
stc
jbe
add
fidivs
cwtl
xchg
xchg
repz
add
jb
cmp
fstpt
push
mov
inc
dec
loop
loope
into
int
call
scas
push
sbb
mov
cmovb
into
mov
xchg
add
leave
out
mov
call
sbb
into
inc
cld
pop
inc
cld
jmp
xor
in
fsubr
adc
std
push
in
push
ss
fcmovnb
stc
out
inc
dec
mov
fwait
and
push
movsw
orb
clc
je
cld
lods
push
sub
aaa
movsb
flds
jnp
cmp
xchg
inc
xchg
fdivrl
aaa
cwtl
outsl
pop
lcall
xor
test
in
sarl
nop
test
sub
pop
ds
push
bound
xchg
push
pusha
push
repnz
lcall
pop
sub
cmp
scas
lods
pusha
test
pop
and
jae
sarb
stos
test
in
loop
aam
lea
xchg
xchg
jmp
popa
lret
and
popf
sbb
fldl
adc
loop
shrl
push
push
lods
mov
cmpsl
jno
and
adc
xchg
fucom
jns
sbb
mov
leave
clc
aam
sbb
lods
aad
mov
mov
fs
inc
sbb
sbb
or
leave
mov
dec
cs
and
or
imul
sbb
adc
add
inc
cli
mov
cld
mov
mov
ldmxcsr
ja
adc
adc
loop
xor
pop
enter
or
scas
insl
das
sub
jae
mov
hlt
push
test
insb
inc
xor
outsl
aaa
dec
int
addr16
jns
add
icebp
outsl
push
in
sahf
xor
les
pop
or
stos
and
jmp
pop
aam
cmpsb
xchg
sbb
add
lock
stos
adc
jmp
inc
mov
jns
mov
stos
mov
jae
ljmp
lds
inc
mov
negb
xor
jae
inc
out
divl
ljmp
cmp
sti
jae
rolb
lret
iret
mov
call
xlat
mov
jmp
fwait
inc
sub
jg
decb
sbb
ss
insl
mov
push
ja
cmc
or
inc
incb
jmp
or
cld
push
sti
mov
rolb
adc
pop
and
loopne
fidivs
push
pusha
xor
daa
es
sbb
sbb
insl
mov
aaa
xchg
in
xor
inc
aas
ds
popl
inc
mov
push
popa
xor
sbb
dec
dec
mov
fs
xchg
repnz
test
sbb
sahf
rcrl
addr16
dec
insb
addb
or
and
or
jns
xchg
mov
jmp
clc
xchg
mov
or
call
xor
pop
lcall
ljmp
lods
stos
sub
lret
adc
adc
xor
fiadds
mov
fstl
filds
out
add
jb
jae
and
in
mov
mov
fidivl
notb
mov
xlat
and
mov
fistpll
jmp
ret
ret
in
ljmp
push
mov
or
aas
jge
jae
jg
pop
push
jo
popf
sbb
sub
mov
dec
jecxz
push
in
jmp
sbb
fwait
rcl
xchg
dec
fwait
cs
mov
icebp
insl
push
cmp
lahf
mov
dec
aas
pop
mov
imul
ret
out
lcall
hlt
sub
pop
jle
add
scas
lods
clc
mov
fldenv
push
fnstcw
dec
push
test
les
cmpsl
jg
pop
imul
mov
test
cltd
test
fistps
add
in
cmp
pop
mov
rcl
rcl
shll
aam
and
or
scas
ljmp
and
aam
and
mov
insl
or
repz
jb
cmp
cli
and
add
push
int3
inc
cli
ljmp
mulb
xor
mov
adc
cmp
std
sbb
loope
or
out
inc
and
push
or
sbb
or
or
fwait
sbb
pop
int3
decb
in
mov
xor
mov
jo
sub
jl
xor
xorb
push
bound
mov
add
push
sahf
push
hlt
repz
imul
sbb
gs
loopne
addl
insb
mov
jbe
pop
ja
aam
inc
fidivrl
jnp
arpl
push
mov
jle
xor
lret
pop
sbb
xor
and
xor
fld1
lahf
shll
mov
adc
cmp
jmp
stos
push
dec
pop
rol
shrl
and
stc
or
and
dec
mov
xor
outsb
popf
sub
cli
pop
push
pop
test
fmul
inc
daa
es
in
cld
push
mov
fdivp
ss
lods
outsl
ds
dec
inc
lret
jb
int
push
push
das
jle
dec
dec
in
out
mov
cli
xor
pusha
sub
dec
mov
out
jne
xor
or
adc
aaa
inc
jge
js
push
mov
cmp
xorb
bound
push
pop
mov
mov
sbb
sbb
xor
rol
xchg
mov
stc
mov
jbe
ret
jp
gs
mull
imul
sub
mov
mov
cli
adc
pop
cmp
popf
lcall
adc
rcll
push
adc
shll
cmp
lods
sub
test
stos
mov
adc
jmp
or
push
jae
inc
rcr
out
bound
nop
and
mov
nop
shl
push
cmp
cmc
push
out
xor
add
std
and
iret
jo
negl
inc
push
or
sbb
cli
pusha
mov
test
push
adc
pop
pop
sbb
add
mov
mov
pop
cmp
mov
jge
lahf
xor
mov
sbb
xor
fcoms
xor
pusha
inc
mov
jne
push
cmpsb
jle
add
out
lods
push
das
jmp
ja
add
mov
std
fldl
lods
mov
mov
xchg
loopne
rcll
xchg
xlat
scas
xchg
xchg
jb
adc
aam
addr16
fmuls
addl
sarl
ret
test
sbb
int
mov
jnp
xlat
mov
cmp
ror
int3
push
inc
sub
sti
sbb
enter
pop
sti
popa
call
mov
in
in
push
sub
ss
fmull
lock
repz
push
pop
or
hlt
in
jo
dec
sub
xor
push
je
dec
and
pop
pop
and
pop
sub
push
mov
cmp
in
cmp
clc
push
xor
and
ret
add
test
lds
outsl
jns
and
add
jo
lods
andb
icebp
mov
xchg
shlb
das
leave
cmpsb
mov
mov
pop
dec
ss
mov
lods
dec
push
xchg
mov
cmpsb
int3
sub
lahf
hlt
das
in
sub
cwtl
lea
xchg
movsb
je
xor
add
lods
and
out
and
scas
add
mov
idiv
sahf
leave
div
adc
pop
cmp
mov
sub
fmulp
cmp
sub
pop
mov
arpl
xor
dec
test
mov
cwtl
xchg
xchg
xchg
xor
xor
mov
mov
cs
cwtl
xor
mov
cmp
cwtl
testb
xor
dec
decb
sahf
dec
sbb
or
jle
stos
push
adc
insb
and
mov
aas
lea
inc
push
stos
popa
xor
popa
xor
je
xchg
xor
ret
repz
pop
ret
jg
ss
cmpsl
mov
outsl
movsl
mov
mov
icebp
test
int
jecxz
fwait
dec
je
mov
js
fidivs
xchg
ficompl
mov
cmpb
jne
into
arpl
mov
mov
mov
jp
xor
xor
mov
mov
daa
push
in
and
stos
ret
jge
lods
add
lcall
jno
stos
jo
and
testl
xor
jecxz
push
or
sbb
scas
out
and
movsb
in
and
fbld
sub
pop
push
adc
ss
push
cmp
js
sbb
bound
in
fmuls
pop
jmp
push
adc
stc
lret
push
sbb
push
arpl
dec
addr16
insb
popa
fwait
sbb
js
mov
jge
cmpb
inc
adc
imul
aas
dec
in
dec
stos
push
cmp
jno
pop
pop
adc
dec
xor
in
jle
mov
cwtl
lods
lods
divl
jg
mov
adc
pop
mov
sahf
xchg
jecxz
outsb
jnp
fcmove
sar
xor
lods
lret
mov
fnstenv
aam
in
sbb
out
mov
add
addr16
add
jnp
cs
mov
jbe
xchg
xchg
xchg
xchg
cmpb
mov
in
inc
enter
fs
shlb
movsb
cmp
adc
mov
add
xor
div
adc
cs
adc
sti
jp
subl
int3
push
adc
in
or
pop
xchg
pop
add
mov
pop
daa
and
adc
es
in
das
jo
sbb
and
aaa
push
push
adc
push
in
cld
ds
sbb
cmp
aad
les
cmp
aaa
push
xchg
sahf
dec
aas
xchg
push
jae
icebp
loopne
pop
fstl
in
push
cwtl
add
das
xor
push
fdiv
jae
xor
ror
xchg
pop
fwait
jl
sbb
and
aaa
and
or
mov
dec
mov
and
rcr
out
mov
mov
inc
fcmovb
pop
mov
je
pusha
test
lods
mov
adc
mov
xchg
mov
mov
nop
loop
cltd
mov
aam
rcll
mov
add
es
loope
into
and
sub
adc
mov
or
push
je
jno
fidivs
mov
sbb
xchg
add
add
divb
and
adc
or
adc
mov
push
stc
jmp
call
es
std
lock
sbb
inc
push
jno
cli
mov
pop
xor
jle
daa
lcall
jo
sub
inc
adcb
cmp
aas
sarl
xchg
pusha
cmp
jl
xchg
iret
pop
mov
ret
jl
and
rorb
and
jbe
jne
mov
lds
pop
add
clc
daa
aam
daa
lds
mov
xor
mov
jne
cltd
test
and
xor
mov
add
les
mov
mov
mov
jne
nop
loop
out
into
insl
pop
aam
leave
call
js
mov
sbbb
xor
rol
in
sbb
lret
push
out
lea
push
jmp
cmp
fistpl
jl
std
jns
jo
ljmp
enter
or
adc
push
mov
cld
ds
ds
dec
push
add
sub
das
scas
icebp
sub
shlb
jl
inc
imul
xchg
cmp
mov
pop
cmp
insb
inc
add
or
mov
es
xor
repnz
cs
jmp
push
inc
dec
nop
dec
cmpsb
push
mov
hlt
cwtl
icebp
ret
cmp
pushfw
bound
outsb
les
insb
mov
divb
repnz
pop
jl
jns
xchg
lcall
cmp
lods
pop
jns
lods
xor
dec
mov
adc
mov
xchg
mov
call
out
into
mov
lret
rclb
push
into
ljmp
faddp
or
lds
fcmovnbe
and
int3
or
cs
mov
jno
neg
push
adc
push
cld
out
stc
add
sbb
nop
mov
std
push
sti
cltd
out
dec
sub
push
cld
mov
repnz
sbb
sbb
add
das
cmp
xchg
push
push
xchg
int3
push
push
fbld
mov
je
hlt
ss
in
add
out
jo
dec
jo
xor
cs
repz
hlt
popa
lcall
pusha
jbe
out
cmpsb
xchg
push
scas
mov
js
jbe
pop
or
das
stos
fucomp
jnp
add
push
adc
testl
mov
filds
adc
call
repnz
pop
xchg
fsubrp
popa
mov
testl
xlat
out
std
std
mov
mov
loopne
fs
int3
fst
rcl
push
add
push
push
aad
inc
cli
in
dec
pop
imull
movsl
jbe
push
divb
stos
jle
daa
and
repz
in
push
jmp
shl
cli
stc
ret
jo
lret
ja
adc
lea
cmp
icebp
push
arpl
sbb
mov
pmuludq
movsb
mov
pop
insl
push
pop
sub
ss
adc
jge
sub
cmpsl
jno
add
cmp
cltd
jge
mov
sbb
cmpsb
insl
es
push
popf
fwait
bound
jo
leave
in
loopne
lods
push
jge
inc
movsl
cmpb
inc
push
scas
jns
xchg
les
testl
xchg
arpl
jns
pop
jg
ficoml
mov
leave
les
out
or
lahf
or
test
mov
rcrb
mov
mov
mov
xor
xchg
mov
jne
pop
mov
sub
or
xchg
movq
sti
idiv
push
mov
sub
in
push
cmp
call
push
inc
call
adc
push
sbb
shl
or
cmpb
and
popf
lds
mov
insb
cmpsb
push
or
xchg
inc
pop
cmpsb
sbb
imul
daa
push
mov
inc
cmp
xchg
lea
js
dec
dec
dec
dec
inc
pop
xlat
push
push
cmp
or
jbe
shl
sub
xchg
rolb
xor
lock
test
mov
xchg
sbb
inc
push
scas
jns
xchg
push
aam
jae
mov
xchg
xchg
xor
flds
cmp
sub
and
push
xchg
fdivr
sub
sti
mov
dec
push
loope
push
dec
ror
cmp
scas
jno
or
jecxz
iret
into
mov
jbe
stc
aad
aad
jb
jb
test
rcr
fs
movsb
mov
out
lock
inc
xchg
scas
fs
decl
and
dec
xchg
push
jge
cld
sti
push
pop
test
ljmp
ret
pop
push
pop
outsl
mov
push
sbb
shrb
mov
cmp
loope
cwtl
sub
arpl
xchg
test
dec
inc
inc
mov
dec
dec
dec
push
xchg
mov
push
cmp
shr
inc
nop
pop
cmc
testb
xor
roll
jo
insb
test
sub
je
push
ja
jne
adc
or
add
sub
divl
xchg
xchg
xor
fisubl
jb
movsb
mov
sub
adc
lods
push
jbe
scas
scas
pop
adc
out
mov
aam
sbb
lods
adc
hlt
lods
add
pop
fcompl
fnstenv
and
add
xchg
leave
mov
and
mov
adc
aad
push
xor
scas
add
push
int
jmp
push
out
sub
jmp
std
jnp
cld
mov
xchg
dec
in
ja
test
daa
imul
push
push
cli
dec
icebp
mov
dec
and
mov
ret
sbb
push
nop
sbb
dec
pop
aaa
xchg
xchg
push
sbb
and
pusha
iret
icebp
pusha
jno
mov
pop
mov
dec
adc
xor
fcomip
xor
mov
sub
outsl
jp
shrl
push
ja
sahf
jecxz
jg
pop
xchg
adc
jo
sahf
shlb
ret
loopne
test
shlb
std
xchg
xchg
mov
lock
gs
inc
dec
adc
and
jmp
or
aas
filds
pop
push
add
jno,pn
stos
sub
insl
mov
push
jmp
lret
jmp
xor
jge
add
add
add
pop
aad
pusha
xchg
sub
pop
pop
xor
push
cld
sti
cli
in
xor
jns
jbe
scas
add
push
xchg
mov
dec
mov
inc
push
sub
pop
pop
pop
push
sbb
das
mov
jo
mov
cmp
xchg
jecxz
lahf
dec
push
les
cmp
aad
xchg
pusha
inc
mov
fimuls
push
out
dec
cmpb
ret
dec
idivl
push
addl
insb
insl
push
movsb
lret
xchg
fists
pop
jl
jp
xor
fstl
popf
ljmp
jae
or
mov
jmp
popf
pushf
test
lock
cmpsb
movsl
cmpsb
ret
dec
inc
enter
mov
lcall
dec
cli
or
mov
sub
loop
sub
aaa
out
cmp
test
insl
sbb
jns
es
dec
add
add
add
xor
jmp
jmp
adc
adc
or
jnp
cld
or
stc
mov
pop
stos
and
stos
sbb
xchg
mov
jle
pushf
sti
sbb
mov
mov
cmp
xor
jbe
xor
aas
mov
inc
mov
adc
stc
dec
fucom
or
xor
cltd
or
jg
mov
lahf
ljmp
jge
nop
lock
outsb
mov
shlb
adc
adc
xchg
jp
imul
mov
loop
mov
aaa
mov
xchg
ds
adc
imul
mov
es
push
pop
inc
in
adc
jae
rorb
aas
int
dec
jbe
push
stc
push
mov
aad
sbb
loop
div
into
cmovns
jno
jb
inc
mov
clc
call
flds
aam
xor
pop
add
out
inc
mov
imul
ret
sti
jne
cld
aas
jns
inc
or
scas
add
insb
aaa
call
insb
pop
test
mov
jge
jbe
xchg
xor
inc
subl
jb
or
jmp
push
xchg
add
scas
xor
mov
or
fisttps
mov
dec
nop
cli
mov
pop
mov
mov
repz
jbe
push
jne
sbb
pop
andl
les
mov
lds
jg
adc
adc
adc
adc
faddl
sbb
cmpsl
mov
add
add
sbb
ret
icebp
cmpsl
loopne
aam
cmp
out
push
pop
adc
rcll
cmp
subl
jns
sbb
push
jne
iret
int
mov
cwtl
jl
repnz
fstpl
mov
cltd
sbbb
sahf
out
inc
imul
jmp
sahf
lret
and
cmc
test
xchg
orps
insl
mov
mov
pop
inc
mov
mov
dec
mov
stos
jg
dec
pop
dec
sub
call
mov
rcll
cwtl
pop
imul
dec
dec
jns,pt
cmp
in
inc
xchg
aaa
pop
popa
jp
add
test
addl
insb
pusha
fwait
and
adc
roll
ret
mov
int3
add
in
js
mov
cwtl
xchg
xchg
ss
xor
xor
in
cmpsb
movsl
xchg
int3
shll
fdiv
mov
jmp
loope
movsl
fmull
or
or
pop
jb
mov
ja
loopne
inc
dec
ljmp
addr16
mov
inc
inc
push
repnz
fucomi
and
sub
loopne
jns
push
or
nop
add
cmp
push
sub
xor
dec
add
imull
xchg
int
cld
push
movsl
sub
stos
push
push
xor
inc
pop
pop
pop
jg
cmp
js
in
outsl
outsb
inc
popf
mov
pop
into
popa
mov
je
jg
push
jne
add
xchg
repnz
mov
push
out
push
arpl
outsl
pop
mov
nop
add
sub
jb
das
mov
ficoms
jmp
jg
jge
add
enter
js
adc
inc
addb
add
pushl
xchg
and
dec
in
and
test
add
mov
add
dec
clc
notl
and
jle
std
aad
sub
jno
aaa
or
js
or
mov
loop
add
out
out
and
dec
lret
and
push
adcb
push
out
out
xor
pop
jns,pt
ss
cmp
add
dec
imul
mov
mov
arpl
xchg
xor
ret
es
add
mov
cmp
xorl
cs
outsl
sub
dec
pop
cmp
sub
sub
repnz
call
sub
pop
movsl
ss
mov
in
test
fildl
cltd
pusha
sbb
inc
lods
sbb
dec
pop
roll
and
in
mov
call
mov
push
jg
in
mov
stc
ficoms
fdivs
jge
into
int
test
movsb
fucomp
vpcmpeqb
cmp
shlb
fwait
call
clc
pop
mov
mov
add
ret
lret
xchg
enter
sbb
test
push
mov
sbb
pushf
or
jge
inc
aam
mov
flds
outsl
lods
or
xor
mov
or
sbb
xor
mov
inc
std
je
loope
or
stos
fs
ljmp
cli
push
fadds
lret
pop
jg
mov
enter
sbb
outsb
movsb
test
add
adc
cmp
mov
ja
test
mov
push
loopne
mov
sbb
popa
push
xchg
push
rorb
adc
int3
stos
xor
mov
ja
arpl
popf
inc
pop
pop
leave
mov
pop
bound
push
pop
js
pop
push
rol
mov
add
out
mov
ja
in
xchg
fidivs
lret
sub
cmp
fsts
mov
and
nop
and
out
ret
push
cmc
push
xor
push
and
jne
fstpl
mov
mov
sti
mov
xchg
cmc
ror
out
mov
lret
or
test
out
xlat
lret
xlat
lret
sbb
loopne
je
ljmp
call
incb
pop
cli
stc
out
aaa
sti
pop
popf
push
jmp
adc
push
aad
jb
or
jbe
jno
imul
sbb
out
dec
es
pop
notb
imulb
ljmp
call
icebp
and
mov
insl
dec
rep
sub
or
movsl
dec
in
insl
sbb
lods
push
outsb
cwtl
jge
inc
mov
stos
outsb
ret
dec
popf
pop
arpl
ss
loope
inc
dec
sub
ficompl
das
repz
addb
les
orb
xchg
push
sub
fsubrs
xor
fwait
xchg
fcoml
pop
jo
out
mov
mov
cli
loop
je
mov
push
mov
mov
mov
lds
enter
inc
push
mov
in
or
push
jno
mov
cmp
push
shlb
cmp
out
add
fs
cmp
jae
cmc
div
mov
leave
aam
sbbb
popa
out
pop
stc
or
adc
adc
sub
aas
or
inc
andl
repnz
pop
and
mov
addr16
cmc
hlt
das
jbe
call
mov
js
adc
fsubr
xchg
cmpb
or
js
xchg
sub
cmp
mov
repz
xchg
stos
xor
and
push
popa
pushf
fwait
movsb
lcall
out
or
clc
int
mov
cmp
xchg
dec
mov
insl
sub
nop
xchg
pop
insb
dec
mov
sti
in
loopne
cli
adc
pop
lcall
mov
lret
out
xchg
ljmp
jne
shrb
lea
mov
fldcw
daa
daa
movsb
iret
in
adc
add
in
sbb
dec
lods
mov
int3
push
mov
movsl
add
dec
cmp
lods
notl
push
pop
mov
stc
dec
fldl
loop
sbb
or
dec
xorl
cmp
in
cmpsb
test
imul
dec
sub
popa
das
sub
xchg
xor
pusha
rcll
dec
push
dec
xor
push
dec
ds
mov
mov
ja
shl
sarb
sbb
popa
data16
add
imul
dec
add
fs
jle
cmp
fistl
pop
adc
push
aam
fwait
loopne
cld
in
pop
mov
and
gs
stos
mov
out
jne
pushf
imul
lahf
shl
mov
xchg
jno
enter
sarl
shl
rolb
jmp
cwtl
sub
je
sbb
iret
mov
mov
je
aad
scas
cmp
and
pop
mov
test
cmp
or
xor
mov
sti
cmp
sbb
inc
int3
pop
and
cld
or
insl
fdivs
and
and
fnstenv
fistpll
or
pop
add
out
mov
repnz
sub
sbbb
imul
add
cmp
and
sub
dec
js
mov
cmovbe
cmp
pop
pop
xor
dec
pop
push
popa
push
dec
sbb
daa
sahf
js
ja
scas
jl
addl
andb
xchg
lret
dec
aaa
xchg
pop
test
xlat
setg
jae
int
sti
sbb
aad
pop
and
mov
out
aas
mov
jnp
mov
xchg
fdivp
inc
shrb
arpl
std
dec
mov
xor
out
out
xor
and
or
jno
mov
mov
sbb
sbb
jbe
cmp
mov
loop
cmp
lahf
aam
fsubrl
sahf
es
or
int3
cmp
aad
cmp
cmp
cmc
fistpl
out
dec
jge
dec
cli
add
mov
arpl
ljmp
xchg
pop
pop
or
cmc
inc
jmp
mov
mov
inc
sbb
scas
in
daa
sbb
sbb
push
pop
in
cwtl
sub
sbb
ja
test
pop
xor
pop
lods
or
push
imul
rcrl
jnp
pop
pop
fnstsw
in
shl
mov
aas
mov
insl
ror
icebp
inc
nop
dec
cmp
sbb
in
add
push
movb
push
gs
lea
xchg
std
xchg
ret
insb
push
xor
jecxz
pop
rolb
mov
mov
test
lock
rorl
pop
rcr
in
incb
add
loop
mov
cmp
scas
mov
popf
adc
cmpsl
pop
push
faddl
mov
jmp
lock
in
push
fmull
stos
iret
stos
testl
lcall
sbb
push
push
jno
stc
and
inc
jne
dec
leave
sub
out
lret
xchg
je
add
sbb
and
lock
sub
jbe
sub
sub
and
popf
sbb
inc
cld
insb
inc
pop
jns
addr16
test
daa
mov
xchg
push
adc
pop
mov
inc
pushf
xchg
addr16
test
xchg
repnz
sarl
insb
pop
mov
ss
mov
sbb
cmp
mov
and
insl
fisubrs
dec
mov
mov
mov
push
addr16
outsl
inc
out
add
jb
out
sbb
int
rcrl
dec
rcll
jb
add
xchg
cmc
sarb
or
add
or
jmp
mov
stos
or
call
push
movsb
cli
call
lock
pushw
std
sub
xor
add
pop
and
adc
nop
scas
repnz
cli
dec
cwtl
scas
testl
jb
sub
pop
pop
or
cmp
sbb
scas
dec
pop
aaa
imul
xlat
daa
adcb
lcall
xchg
cwtl
add
nop
push
mov
mov
repnz
test
inc
mov
dec
and
pop
ret
mov
pop
push
outsb
int3
iret
xchg
cwtl
cmpsl
xchg
xchg
pushf
pushf
popaw
mov
and
ja
cmc
setnp
popf
je
pop
int3
lret
push
fmuls
xor
mov
adc
lret
xchg
sbb
scas
aaa
shll
mov
or
jno
add
fdivrl
fwait
loop
ror
push
pop
rorl
or
jecxz
subl
pop
mov
call
mov
jns
outsb
lret
push
jae
jae
or
mulb
arpl
xor
cld
sti
in
notb
dec
mov
inc
inc
nop
lods
xchg
lea
pop
adc
mov
fdivl
xor
pop
test
mov
lahf
xor
sub
and
out
push
mov
cmp
jge
ss
mov
xchg
dec
pop
xor
rcrl
aad
nop
dec
jnp
cmp
pop
pop
rclb
jp
dec
and
dec
xorb
ret
aam
push
lods
stos
divb
call
xor
rclb
push
out
dec
mov
ljmp
mov
xchg
mov
aad
test
adc
gs
add
mov
adc
and
fs
bswap
add
or
pusha
cmp
pusha
pop
inc
cmc
dec
orl
and
fs
loopne
pop
add
mov
cli
pop
shlb
sub
xor
cmp
inc
cld
jo
stc
or
mov
idiv
or
adc
adc
mov
jne
lret
sbb
and
mov
xchg
sbb
mov
adc
and
inc
ja
jne
mov
xchg
cmpb
lods
inc
xchg
xorb
mov
mov
xor
xor
dec
jp
push
xchg
jecxz
push
lods
inc
movsl
jno
stos
xchg
xchg
fisubs
insl
in
mov
jmp
lods
mov
jnp
xchg
jp
mov
jge
xor
mov
add
and
iret
push
mov
cwtl
repnz
mov
push
stos
adc
test
add
lods
pop
adc
inc
pop
mov
xchg
rcll
rolb
cmp
adcb
in
arpl
popa
fisubs
cmp
repnz
jae
cmp
jp
cmp
lahf
sbb
daa
sar
add
or
push
outsb
mov
imull
pusha
idivb
xor
mov
push
xor
icebp
pusha
pop
or
dec
cmp
outsb
daa
addr16
js
xorl
add
xor
mov
imul
js
push
lea
test
rorl
fs
mov
enter
mov
scas
mov
inc
lret
dec
jo
lahf
stos
sarl
rcll
add
jge
sub
outsb
xchg
adc
mov
fcompl
leave
mov
aaa
aad
mov
pop
mov
mov
test
adc
ljmp
and
fstpt
pop
stos
cli
shrl
or
std
rcll
mov
push
enter
or
loop
xchg
iret
and
pop
xor
nop
sti
push
insl
mov
mov
pop
xchg
xchg
orb
sbb
incw
pop
inc
movsb
pushf
push
in
sbb
push
or
movsl
je
xchg
stos
adc
test
in
outsb
pop
sbb
and
add
inc
cwtl
divb
push
sub
mov
xchg
sarl
dec
xchg
test
enter
rolb
xchg
mov
dec
dec
adc
push
aad
repz
test
fisubs
aad
and
out
icebp
pop
pop
xor
add
test
pop
push
cmpb
mov
xchg
jbe
push
xchg
xor
xor
inc
dec
fiadds
adc
and
std
lock
daa
cmp
ret
mov
js
adc
mov
mov
adc
stos
loopne
cmp
or
and
cltd
int3
push
mov
or
or
jecxz
mov
jecxz
das
sbb
sbb
lret
inc
sbb
mov
cmp
cmp
cmc
adc
cli
mulb
lock
push
ljmp
and
dec
loop
or
stos
icebp
inc
rcrb
or
dec
sbb
imul
sub
movsb
xorb
mov
ds
cmp
lds
into
add
test
mov
inc
mov
mov
mov
cmpsb
hlt
jne
cmp
aaa
imul
dec
ss
lds
pop
fidivrl
sbb
cmpl
enter
mov
or
mov
mov
jns
jns
enter
inc
scas
ljmp
inc
rclb
test
xor
sbb
jmp
mov
loopne
or
sub
and
jecxz
xchg
fsub
and
mov
jb
scas
push
enter
mov
sub
loop
add
add
mov
jmp
daa
inc
sbb
push
adc
jns
btr
nop
pop
push
icebp
negb
or
jb
pop
fdivrp
or
xor
jle
jo
cmpsl
mov
inc
xor
scas
in
jle
jle
aaa
ss
ror
cs
movsl
mov
and
add
movsb
shl
data16
xchg
fsubrs
push
sbbl
xor
les
xor
jo
outsb
in
popf
shrl
pop
adc
ja
cli
sbb
mov
sbb
aad
cmp
sub
lret
jle
in
jnp
xor
fwait
lcall
jle
shrl
xchg
adc
div
mov
pop
and
mov
xor
push
fsts
push
mov
mov
mov
or
fcompl
sub
add
je
sub
inc
in
notl
or
rolb
pop
push
inc
mov
cmp
cld
dec
pop
jmp
jbe
loop
icebp
fisttpl
jbe
xchg
notl
sti
xchg
cmp
das
sbbb
push
dec
mov
fs
adc
sub
sub
outsl
mov
push
push
pusha
adc
sbbb
outsl
fldcw
insb
fisubrs
js
xor
push
xchg
in
js
push
cmpsl
push
fcomi
pusha
pop
xchg
aam
xchg
loope
cwtl
cli
test
sti
test
jge
xor
lods
mov
or
insb
inc
cli
es
fnstsw
cli
nop
test
les
sbb
lods
fcomps
iret
mov
ret
ret
mov
xor
sti
xor
sahf
scas
add
int3
pop
lods
push
xor
jge
enter
in
shl
imul
iret
int3
lret
lret
cmp
pop
push
adc
or
fidivl
mov
je
inc
add
loopne
in
jmp
add
fdivp
aaa
fisttpl
call
jo
jae
mov
inc
adc
adc
xchg
mov
or
mov
mov
pop
popf
lods
sbb
insb
pop
test
mov
lret
pop
xchg
sub
sub
pop
lahf
popf
pop
lods
push
daa
out
sahf
inc
push
aas
cli
xor
ret
das
jo
cmp
cmp
decb
dec
mov
adc
repz
sbb
pop
cwtl
in
and
andl
sub
imul
ja
or
add
cli
into
mov
imul
dec
mov
xchg
xor
inc
pop
jns
mov
inc
loope
dec
arpl
add
leave
ljmp
jno
pop
repz
pop
flds
sbbb
outsb
add
push
in
or
jmp
outsl
xlat
leave
fcom
mov
mov
jp
fdivrl
or
int
sti
daa
leave
inc
pop
daa
popa
or
and
jne
adc
rcll
mov
cltd
mov
and
shrb
sub
in
or
mov
rclb
sub
aas
test
insl
aam
daa
es
clc
imul
mov
arpl
ja
push
push
sbbb
pop
ret
cmp
dec
xsha1
cmpsb
and
xor
out
in
lret
insb
rorb
cwtl
push
dec
sahf
and
bound
mov
popf
pushf
pop
add
add
and
rcll
imul
rcll
gs
fisubs
mov
in
int3
adc
jne
leave
loopne
pop
fsub
xchg
xor
call
int
cmpsl
mov
imul
xchg
pushf
fstpl
call
out
push
out
adc
or
js
cwtl
push
jmp
inc
jecxz
sbb
out
into
add
in
call
lods
jb
pop
inc
loopne
inc
cmp
adc
bound
xor
movsb
inc
cmp
adc
dec
inc
pusha
out
les
mov
xor
stos
pop
mov
sbb
sbb
push
imul
addb
mov
push
jo
test
ds
js
mov
faddl
jge
pop
pop
cmp
aam
sti
cmp
js
inc
nop
mov
mov
shl
out
push
lea
xchg
ljmp
xor
mov
sbbl
mov
pop
mov
mov
leave
daa
sbb
shlb
inc
cmpb
mov
int3
sti
mov
lret
ret
mov
mov
add
je
dec
and
or
andl
push
mov
sbb
mov
adc
int3
or
sbb
mov
mov
fwait
push
cmp
loop
jge
fstp
mov
das
xor
outsl
inc
fldl
dec
push
les
xchg
mov
pushf
cltd
mov
cmc
movsb
subb
or
hlt
fwait
mov
cwtl
cmp
adc
push
add
sbb
mov
pop
jp
mov
inc
jne
sub
sub
mov
lret
pop
pop
inc
cmp
pusha
cltd
icebp
mov
iret
mov
inc
mov
xchg
addl
xor
pop
pusha
js
dec
mov
jle
mov
push
imul
fildl
push
fcmovnb
or
fldcw
loopne
int
xchg
jecxz
xchg
testl
mov
jle
flds
nop
or
out
fadd
xor
jmp
jecxz
lahf
adc
cmp
je
sub
sub
inc
dec
add
aas
lret
xlat
out
inc
hlt
mov
insb
pop
push
push
lds
add
sub
movsb
fildl
dec
mov
jmp
inc
repnz
mov
jl
add
out
dec
movsb
pop
cmpxchg
and
fadds
aas
xchg
add
gs
sti
punpckldq
sti
addl
sub
xlat
jno
adcb
mov
inc
cs
scas
mov
sbb
bound
int3
add
push
push
push
mov
in
adc
sbbb
sub
adc
pop
adc
ret
sub
lods
lods
sub
pop
outsl
call
loopne
in
out
fildl
popf
out
xlat
push
lea
add
int
mov
test
aam
cmpsl
rclb
loop
xchg
iret
or
or
xchg
mov
out
fnsave
cmpsl
pop
out
and
lock
and
add
push
adc
add
std
inc
and
and
or
mov
je
and
cmp
cmp
push
push
jge
jo
cmp
loop
and
frstor
das
mov
repz
dec
pusha
dec
cltd
cmp
mov
das
cs
dec
xor
dec
inc
in
jg
dec
imul
jae
jnp
outsl
lods
xchg
int
aam
or
mov
jns
xor
jns
data16
in
fdivr
out
xchg
jae
add
mov
mov
in
cmpsl
adc
lods
jp
int
ret
lcall
mov
or
lods
add
enter
fisubs
ret
sti
xor
and
xchg
das
mov
int3
adc
xor
cld
sti
loopne
or
sub
dec
mov
cwtl
or
adc
aam
fbstp
bound
sbb
leave
mov
push
mov
fcomp
sbb
fildl
es
mov
inc
xor
insl
adc
xchg
rcll
xchg
pop
xlat
xor
mov
xor
iret
push
js
push
or
loopne
sbbb
repz
mov
cmp
sub
loop
shll
xchg
rcll
cmp
stos
test
outsb
push
dec
dec
inc
xchg
ficompl
test
arpl
enter
pop
fsubrs
cmp
int3
divb
gs
adc
jo
or
adc
lds
iret
into
mov
lods
jno
xchg
xchg
arpl
xchg
mov
cmpsb
mov
out
add
int
stos
in
loope
jmp
and
fsubs
xchg
jmp
or
dec
imul
or
xor
cwtl
aad
icebp
mov
loopne
ljmp
stos
or
jno
xlat
dec
inc
cwtl
or
shl
out
out
in
in
mov
or
cmp
pop
sti
dec
pushf
popa
push
xorl
inc
pop
push
or
pusha
push
add
pop
mov
gs
pop
sbb
jne
sub
xor
jb
aaa
cwtl
fistl
sub
aas
cmp
cmp
dec
xor
stc
xor
icebp
sbb
pop
pop
pop
pop
push
dec
jo
test
pop
push
out
int3
mov
dec
cmpsl
xchg
cmp
xchg
cmp
inc
xchg
in
imull
mov
xchg
push
mov
addr16
lcall
fcoml
mov
call
icebp
push
mov
mov
mulb
neg
push
roll
fdivl
adc
rcl
stc
mov
pop
clc
inc
mov
mov
cmc
mov
and
fmuls
and
in
push
jmp
sub
cmp
or
out
push
pop
dec
aas
mov
cmp
outsl
cmp
js
iret
and
or
adc
mov
mov
mov
sub
sbb
popa
jge
inc
cwtl
xchg
xchg
pop
in
sub
nop
popa
imul
xor
ds
ret
add
cmpsl
fisubl
or
jo
cwtl
lea
push
pusha
dec
sahf
mov
js
pop
push
add
pop
xchg
adc
mov
movsb
or
mov
gs
int3
gs
jae
sub
fildll
xor
cmpsb
lret
loopne
in
xchg
leave
stos
nop
mov
cmp
push
es
in
adc
shrl
xor
add
and
push
lahf
fcoms
adc
jl
mov
jno
or
pop
push
add
out
xchg
aas
or
ja
push
enter
lds
sbb
insb
call
xchg
inc
outsl
das
in
jmp
sub
fstpt
sbb
popa
aaa
loop
fs
dec
add
cmp
dec
pushl
fbstp
cmp
sbb
sbb
pop
ds
cmp
mov
sbb
ret
dec
push
dec
dec
adcb
repnz
mov
test
sub
jns
mov
ja
inc
mov
pop
adc
rcll
lods
dec
pop
push
mov
scas
sarb
cmp
sar
scas
and
sbb
in
jecxz
cmpsb
in
xchg
int3
shll
into
mov
stos
lret
mov
mov
add
pop
add
mov
ja
ljmp
mov
sub
fidivrl
mov
fcmovnu
mov
clc
ds
popf
push
mov
inc
es
fcmovbe
sbb
cmp
jns
scas
arpl
hlt
pop
popa
push
sub
idiv
bound
into
sub
pop
imul
or
das
and
xchg
add
xor
or
lods
aad
dec
xor
fnsave
fadds
aas
or
jnp
add
adcl
push
les
push
outsb
ret
sbb
xor
add
orb
mov
int
aas
popf
js
xchg
or
movd
subb
arpl
test
test
int
orl
je
xor
mov
jecxz
in
cmovb
neg
xchg
dec
jmp
rorb
ss
cmc
adc
test
rcr
pop
and
xor
out
mov
jmp
orl
lods
cmp
loopne
leave
and
fst
fidivl
iret
ret
inc
aad
hlt
loopne
pop
ja
data16
adc
inc
movb
jo
push
daa
cmp
outsb
dec
fistps
inc
fs
push
push
cmp
dec
dec
incl
inc
sbb
daa
repz
pop
pop
push
in
sub
das
pop
lods
int3
sub
in
outsb
lods
shl
jb
push
cs
ja
sbb
cmp
nop
sub
xchg
mov
cmp
mov
push
dec
cmp
cmp
stos
hlt
js
xchg
andl
hlt
stos
mov
loopne
jb
mov
mov
add
inc
add
fwait
cld
ja
xchg
idivb
cwtl
xor
cwtl
loopne
cmp
into
cltd
in
test
je
mov
lods
pop
popf
repnz
out
jecxz
cmpsl
test
ret
lret
or
push
jno
shrl
mov
call
push
mov
in
adc
ret
dec
das
jne
daa
es
dec
mov
stc
ja
repnz
in
in
adc
gs
dec
test
and
stos
pop
and
inc
dec
add
stos
aaa
cmp
mov
sbb
sbb
icebp
xchg
in
cmp
clc
mov
arpl
sarl
push
xchg
inc
push
and
pop
mov
sbb
cwtl
sub
mov
outsl
scas
test
ret
shl
into
jne
inc
lods
and
ret
xorl
mov
fidivrl
ljmp
jl
ja
xor
jle
jnp
iret
into
dec
cltd
loopne
lods
fcom
cwtl
jnp
xchg
stos
add
sbb
ficompl
add
pop
pop
in
roll
xchg
aam
mov
sub
or
imul
gs
xor
cs
insb
add
nop
or
dec
nop
or
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
pop
push
push
popa
jb
sub
imul
push
je
popa
insb
je
sub
arpl
je
arpl
jne
jo
jb
inc
ja
bound
insb
insl
popa
jae
gs
arpl
and
ja,pn
bound
insb
insl
popa
jae
gs
arpl
add
add
add
in
mull
inc
add
add
add
jmp
jmp
add
jmp
jmp
sub
add
jmp
add
sub
mov
nop
lea
mov
lods
clc
sub
sub
xor
xor
sub
add
clc
clc
sub
clc
xor
sub
xor
sub
add
sub
xor
sub
sub
sub
xor
xor
sub
add
clc
clc
sub
clc
xor
sub
stos
loop
jae
ret
je
aam
clc
xor
xchg
ss
fs
and
push
or
pop
data16
xchg
insl
adc
jne
es
lock
icebp
jp
pop
repnz
ss
and
lahf
push
out
sbb
xor
out
movsb
mov
cltd
iret
enter
or
xchg
pusha
out
icebp
inc
pop
or
sbb
inc
cwtl
aas
inc
das
pushf
pop
cmp
adc
into
inc
adc
xchg
cmpsl
std
sub
and
iret
cmp
add
mov
imulb
icebp
cltd
lods
phsubd
fildl
outsl
mov
ficompl
ficomps
loopne
je
stos
mov
fsubs
mov
sub
inc
lcall
hlt
ret
hlt
cli
iret
jno
push
sbb
xlat
pop
push
repnz
shlb
cmp
jno
out
push
ret
shl
sub
cmp
inc
or
mov
ss
or
push
add
mov
ror
call
ss
repnz
add
jg
lods
imulb
mulb
cld
xorb
xor
pop
pop
hlt
jbe
gs
cmpb
aam
cwtl
cmpsb
fwait
popf
push
mov
sub
push
cld
lcall
fs
add
sub
cltd
iret
repnz
inc
add
mul
in
pop
xorl
lcall
insb
out
ss
inc
push
xchg
test
mov
repnz
xor
push
dec
popf
sbb
mov
sbb
in
and
clc
testb
or
es
dec
mov
test
lock
scas
in
adc
sub
inc
mov
mov
out
leave
cmp
bswap
jbe
mov
sub
hlt
gs
popf
rorb
inc
mov
mov
cmp
cmp
inc
inc
lcall
or
xlat
ss
sti
fsubrl
cwtl
and
xor
ss
cli
adc
gs
js
inc
call
sti
xchg
adc
in
shr
mov
rorl
lcall
xor
andb
dec
add
in
sbb
jg
mov
adc
test
cmp
shr
adc
inc
cmp
iret
lds
aaa
xor
fdiv
hlt
ljmp
stc
and
xlat
adc
and
test
call
mov
xor
out
pop
movsl
jmp
sti
not
cmpsb
mov
jmp
cli
pusha
iret
pop
shl
es
out
hlt
ljmp
pop
js
out
jp
pop
cmp
mov
or
lcall
idivb
pop
fisttps
pop
test
jge
int
cli
clc
push
jae
push
push
mov
mov
ss
es
rcr
inc
ss
push
je
in
in
or
mov
and
or
xchg
in
mov
pop
andw
nop
lods
test
pop
adcb
in
cmp
arpl
xchg
push
arpl
popf
mov
xor
push
mov
ss
sbb
push
and
jbe
sbb
js
aaa
add
dec
out
pop
pop
stc
clc
popf
push
div
cli
test
in
add
jl
lock
inc
or
adc
js
movsb
idivb
jp
pushf
xchg
stos
in
cmp
cmpsb
int3
cmp
inc
lret
mov
cwtl
out
and
test
rolb
dec
cld
dec
pop
clc
fcmovne
out
mov
ss
push
pop
test
fsubs
or
fcomps
aad
xchg
loop
mov
mov
push
aaa
jns
or
in
call
scas
or
clc
iret
inc
repnz
out
lret
insl
insl
inc
jnp
cmp
push
shl
jno
insl
push
sti
xor
cmp
movsb
xchg
ret
push
cmp
xor
clc
or
or
shrb
leave
xchg
int
hlt
testl
mov
ja
cmp
lds
sub
jnp
pop
cmp
inc
inc
xchg
enter
mov
mov
sub
hlt
fstl
fwait
pop
lahf
inc
pusha
push
iret
shl
cli
clc
iret
sbb
jnp
sbb
call
div
cmp
fcoml
push
xor
cli
lock
sbb
cmpsb
scas
sub
adc
cmp
lahf
sbb
mulb
push
or
clc
repnz
fcoms
aad
lock
call
push
negb
inc
fistps
xor
popf
or
xor
icebp
push
add
in
add
jg
imul
pop
shl
es
loopne
jmp
loop
and
sbb
push
mov
inc
lcall
add
push
push
xorb
mov
xor
or
push
push
leave
repnz
or
pop
jecxz
call
daa
cltd
dec
xor
in
ret
divb
es
sbb
scas
fsubs
lock
mov
clc
iret
cmp
add
xor
in
mov
testb
sti
subl
gs
mov
push
dec
addr16
jbe
ret
sbb
cld
lds
lahf
insb
mov
adc
repz
add
sbb
jmp
pushl
dec
jnp
add
filds
xchg
repnz
jns
sub
xor
cmp
int3
mov
fxch
sub
pusha
and
sub
pop
shr
jecxz
xor
clc
popf
repnz
out
add
into
pop
ds
jmp
icebp
popf
dec
addr16
cmc
out
jmp
xor
xlat
lret
aaa
incb
lret
jno
xchg
ss
inc
mov
and
sub
add
std
sub
push
push
and
mov
clc
xor
insl
decb
sbb
aam
jb
int3
ja
imul
insb
into
rorl
inc
hlt
sbb
sub
stc
pop
imul
mov
cmpsb
add
jns
fidivs
test
add
sbb
jnp
jle
out
int
dec
xor
in
loop
dec
xchg
or
mov
ss
repnz
mov
aad
cwtl
and
movsl
lahf
cmp
adc
jg
adc
pop
mov
cmp
mov
add
xchg
loope
pusha
arpl
jmp
xchg
fistpll
inc
mov
jne
in
dec
ficoml
pusha
push
mov
cmp
rcrl
mov
in
pop
sbb
lods
pusha
gs
pop
sbb
les
xor
inc
test
andb
mov
scas
js
pop
mov
xor
movsl
jbe
cli
clc
push
lret
ret
in
lods
jbe
ljmp
in
lcall
pop
ret
mov
or
scas
cwtl
cmpsb
movsb
das
mov
fwait
mov
clc
push
add
rclb
call
div
cli
clc
push
add
fsub
in
push
popf
xchg
ljmp
inc
lcall
xor
sub
xor
cmp
push
cld
inc
movsb
stos
pop
movsl
xor
mov
add
mov
gs
ljmp
add
fsub
in
call
div
cmp
inc
inc
lcall
xor
sub
xor
cmp
lcall
xor
sub
xor
clc
push
add
pop
data16
div
ljmp
add
fsub
in
call
div
cmp
inc
inc
lcall
xor
sub
xor
cmp
lcall
xor
sub
xor
clc
push
add
pop
data16
div
ljmp
add
fsub
in
call
div
cmp
inc
inc
lcall
xor
sub
xor
cmp
lcall
xor
sub
xor
clc
push
add
pop
data16
div
ljmp
add
fsub
in
call
div
cmp
inc
inc
lcall
xor
sub
xor
cmp
lcall
xor
sub
xor
clc
push
add
pop
data16
div
ljmp
add
fsub
in
call
div
cmp
inc
inc
lcall
xor
sub
xor
cmp
lcall
xor
sub
xor
clc
push
add
pop
data16
div
ljmp
add
fsub
in
call
div
cmp
inc
inc
lcall
xor
sub
xor
cmp
lcall
xor
sub
xor
clc
push
add
pop
data16
div
ljmp
add
fsub
in
call
div
cmp
inc
inc
lcall
xor
sub
xor
cmp
lcall
xor
sub
xor
clc
push
add
pop
data16
div
ljmp
add
fsub
in
call
div
cmp
inc
inc
lcall
xor
sub
xor
cmp
lcall
xor
sub
xor
clc
push
add
pop
data16
div
ljmp
add
fsub
in
call
div
cmp
inc
inc
lcall
xor
sub
xor
cmp
lcall
xor
sub
xor
clc
push
add
pop
data16
div
ljmp
add
fsub
in
call
div
cmp
inc
inc
lcall
xor
sub
xor
cmp
lcall
xor
sub
xor
clc
push
add
pop
data16
div
ljmp
add
fsub
in
call
div
cmp
inc
inc
lcall
xor
sub
xor
cmp
lcall
xor
sub
xor
clc
push
add
pop
data16
div
ljmp
add
fsub
in
call
div
cmp
inc
inc
lcall
xor
sub
xor
cmp
lcall
xor
sub
xor
clc
push
add
pop
data16
div
ljmp
add
fsub
in
call
div
cmp
inc
inc
lcall
xor
sub
xor
cmp
lcall
xor
sub
xor
clc
push
add
pop
data16
div
ljmp
add
fsub
in
call
div
cmp
inc
inc
lcall
xor
sub
xor
cmp
lcall
xor
sub
xor
clc
push
add
pop
data16
div
ljmp
add
fsub
in
call
div
cmp
inc
inc
lcall
xor
sub
xor
cmp
lcall
xor
sub
xor
clc
push
add
pop
data16
div
ljmp
add
fsub
in
call
div
cmp
inc
inc
lcall
xor
sub
xor
cmp
lcall
xor
sub
xor
clc
push
add
pop
data16
div
ljmp
add
fsub
in
call
div
cmp
inc
inc
lcall
xor
sub
xor
cmp
lcall
xor
sub
xor
jae
or
xlat
xor
ljmp
xorb
cs
rclb
cmp
lcall
add
sbb
or
xor
rcrb
and
test
fildll
cmp
pop
adc
arpl
movsl
hlt
ljmp
push
push
push
sbb
mov
call
dec
push
push
mov
pop
xor
sub
xor
in
or
adc
jge
ss
sub
insw
pop
adc
jl
fs
div
cmpsl
inc
andb
pop
push
in
call
mov
dec
es
ss
shll
and
adc
push
jge
and
sub
add
add
dec
pop
add
