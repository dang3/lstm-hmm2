jmp
mull
and
add
jb
cs
mov
jmp
mov
cmpb
add
xor
jmp
or
inc
jmp
xor
pushl
add
jmp
call
mov
add
jmp
xchg
jmp
xchg
push
jmp
stos
xor
jmp
add
ret
jmp
add
cli
add
add
add
call
jmp
idivb
jne
add
out
and
jmp
xchg
jne
add
push
adc
popl
jmp
sub
add
jmp
fld1
cmp
add
lahf
adc
pop
inc
adc
mov
adc
pop
lea
bsr
dec
push
into
int
or
dec
sub
add
xlat
fsubr
mov
cld
insb
sbb
stos
daa
loope
imul
sub
sub
xor
xor
test
pop
cmpsb
xor
and
inc
fisubs
cmp
sub
pop
cmpsl
mov
add
jne
jnp
xor
mov
adc
mov
in
outsb
inc
mov
loope
push
pop
mov
cltd
test
lea
aaa
prefetch
or
daa
in
mov
sbb
jge
sub
lcall
int3
lahf
lcall
and
fs
pop
aaa
push
add
add
jb
test
sar
lahf
je
pop
stos
xlat
dec
mov
lock
sarb
jg
xchg
ljmp
push
push
cmp
roll
lahf
or
lods
jnp
stos
cld
xor
faddl
test
fimull
outsl
test
push
iret
push
push
inc
push
movsb
icebp
mov
stos
ret
loope
sbb
fcoms
loope
pop
data16
inc
insb
subl
cmp
insl
mov
pop
lahf
cld
shlb
inc
inc
sub
xchg
rcrl
flds
subb
push
sub
adc
pop
outsb
xchg
xor
out
cli
push
pop
sub
jge
jmp
jg
jmp
mov
lods
arpl
or
mov
stc
jns
pop
icebp
loope
pop
mov
arpl
jbe
inc
xchg
and
dec
lea
inc
dec
and
stos
test
mov
or
add
in
fs
jns
lock
fsubl
push
out
add
xchg
aad
jae
stc
pusha
push
out
jle
mov
fildll
fbld
test
mov
sti
adc
sbb
push
xor
leave
sbb
adc
clc
leave
push
xlat
cmpsb
test
stos
dec
and
inc
adc
sbb
pop
fcomip
stc
aaa
jle
repz
dec
std
mov
jno
jae
test
mov
inc
xor
xchg
and
add
cmpsb
sub
lahf
jle
cld
and
and
loopne
imul
add
push
xor
or
jno
adc
movb
into
jmp
or
iret
fdivs
inc
int
inc
xor
loope
aad
or
outsl
fnsave
pop
adc
mov
insl
sub
xchg
out
cs
pop
test
shll
or
xchg
enter
nop
cld
addr16
out
leave
jns
add
add
push
mov
xchg
adc
mov
push
repnz
xor
movsb
dec
fbld
adc
xor
lock
enter
cmp
push
aaa
popa
pop
mov
aam
and
mov
cmp
out
xchg
push
arpl
ret
inc
cmp
jp
pop
or
imul
xchg
cmc
lret
test
stos
scas
mov
in
in
add
mov
sbbb
sbb
pushf
sub
jp
push
int3
mov
popa
nop
mov
lock
mov
movsl
jb
in
jmp
std
mov
and
jecxz
sahf
repnz
add
cmp
mov
lret
pusha
fstl
sub
mov
jae
test
dec
lods
pop
add
pusha
mov
xor
enter
test
bound
cwtl
repz
test
shrl
fsubrs
and
xlat
jae
iret
cmp
leave
pop
jp
mov
out
mov
andl
insl
in
xlat
pop
xor
jp
push
and
xor
bound
xorl
inc
pop
sahf
stos
popf
dec
jb
mov
sub
fcoms
mov
lds
loop
inc
pop
jg
sub
and
outsl
push
outsb
sub
push
insb
test
mov
pushf
sti
arpl
mov
adc
or
push
sub
cmp
xchg
add
sbb
mov
out
into
add
inc
cmp
pop
out
int
call
mov
sar
xchg
cmp
cmp
dec
pop
clc
mov
aad
xchg
sub
insb
loope
les
fdiv
movsl
mov
gs
mov
fs
pop
mov
cmp
stos
fcoml
aad
daa
inc
test
inc
push
int3
rol
punpcklbw
outsl
cmp
rorb
mov
and
jbe
push
and
mov
cmp
fcmovnb
inc
stos
sub
cmpsl
aad
and
sbb
mov
jne
sbb
push
arpl
sbb
divl
adc
incb
in
movsb
inc
int
or
call
pusha
scas
mov
popf
xor
popf
dec
lods
inc
es
push
or
xor
pop
mov
shlb
push
aam
cmc
jb
lea
xor
inc
sti
mov
push
mov
fcoms
sub
and
or
stos
test
sbb
fwait
out
lds
lock
cmp
sub
mov
lods
xor
and
jo
ds
in
rcr
push
inc
xor
mov
loop
ret
push
iret
int3
sahf
cmp
xchg
clc
lds
inc
aam
aas
pop
repnz
adc
xor
rorl
ret
jb
pop
jbe
lahf
stc
dec
pop
loope
sub
add
xlat
inc
mov
jno
push
lret
jno
imul
sub
mov
sub
xor
aaa
sub
push
mov
in
xchg
adc
cli
xchg
cmpsb
ret
mov
cli
inc
xchg
cltd
stc
push
ja
ret
dec
daa
stos
add
ljmp
xchg
icebp
scas
push
inc
repnz
and
mov
out
dec
pop
data16
push
lret
mov
pop
jmp
in
sbb
aam
stos
pop
mov
fisttpll
jne
sti
xchg
rcl
loop
adc
dec
std
xor
pop
subb
xchg
loop
inc
movsl
ja
fisttpl
in
sub
push
pop
sti
add
test
sbb
nop
setno
push
and
sarl
cs
subb
hlt
and
dec
sub
cmp
insb
inc
ret
dec
std
js
add
arpl
leave
sbb
cmp
jbe
gs
wbinvd
dec
adc
arpl
jmp
fdivrs
lock
xchg
sub
jae
jb
jl
xor
add
push
rorb
add
jae
cmpsb
jle
and
push
pop
cmp
lret
pushf
or
xor
ret
push
mov
push
repnz
cld
fists
cmp
or
and
imul
push
je
hlt
shrb
insb
clc
aam
aad
add
loopne
pop
pop
in
lcall
mov
bnd
push
ja
pop
mov
clc
mov
pop
jg
inc
rcl
xchg
dec
jmp
notl
sbb
xchg
fcoms
adc
mov
test
lcall
and
insb
fldl2e
push
leave
mov
cmc
add
push
xchg
fs
xchg
or
in
jge
or
inc
mov
sbb
mov
xor
addl
sub
mov
ja
inc
mov
mov
cld
je
enter
xlat
dec
xchg
loop
jo
xchg
pushf
rcrl
filds
movsb
push
arpl
add
inc
fs
sub
je
jbe
jle
jge
pop
xchg
rolb
shr
leave
lret
jle
inc
popf
or
push
dec
jmp
scas
xchg
adc
outsl
sub
dec
sub
push
or
jo
ficoml
adc
and
hlt
ret
jl
movsb
jno
or
fidivs
sub
rclb
fwait
adc
inc
mov
pop
and
sbb
fsub
adc
div
mov
sti
cli
inc
lahf
fmuls
cld
sub
inc
roll
test
popf
outsb
out
insb
pop
rcrb
mov
lods
je
mov
inc
cmpsb
movsl
jnp
movsl
cli
icebp
loope
int
out
or
arpl
cwtl
dec
mov
xor
mov
and
jmp
and
cwtl
movsl
mov
pop
xor
scas
ds
call
pop
push
jp
xchg
add
or
mov
and
outsb
jo
mov
push
imul
loopne
and
outsl
xor
push
mov
jg
lret
test
mov
inc
mov
aaa
rorb
lea
xchg
cmp
int
lahf
inc
sub
mov
and
ret
pop
mov
and
mov
mov
add
mov
ja
addr16
push
push
mov
push
lds
gs
dec
xlat
xchg
lods
movsl
fsubs
shll
dec
stos
addl
mov
sti
push
xor
push
cmp
xchg
lods
test
or
lea
xchg
adc
loopne
sub
andl
stc
stc
scas
mov
je
mov
sar
xor
out
in
leave
dec
jae
and
mov
leave
call
nop
xlat
inc
pop
or
fidivrs
mov
push
cmp
das
stos
in
mov
es
shll
das
dec
dec
sbb
push
nop
addl
pop
add
cmp
cmp
or
data16
pushf
push
cwtl
jg
insl
mov
movsl
sbb
fldt
jnp
push
mov
or
xor
test
mov
lret
add
jp
or
xchg
es
inc
cmc
mov
sahf
adc
movsl
mov
test
lods
push
xchg
mov
cld
mov
mov
pop
add
shll
jno
jbe
enter
js
in
bswap
insl
rcrb
call
xlat
and
arpl
sub
fidivs
mov
ds
pop
test
fwait
mov
push
xchg
dec
xchg
mov
lret
or
pop
inc
jle
mov
or
cmpsl
mov
cmp
mov
fwait
clc
sub
iret
push
inc
jl
mov
into
subb
int3
roll
mov
flds
jmp
or
in
test
outsl
es
cmpl
fldl
mov
test
jl
xchg
cwtl
out
loope,pn
pop
mov
xor
ret
push
adc
lods
lock
es
jg
xchg
jns
adc
or
and
scas
scas
dec
xorb
movb
loopne
ss
orl
or
cld
aam
cmp
xor
sbb
cmp
cwtl
stc
mov
loop
lahf
dec
pusha
xlat
add
gs
cltd
iret
push
ret
test
loopne
in
jbe
sbb
aas
push
xchg
cmp
xlat
mov
push
jbe
sahf
jno
xor
adc
test
repz
pop
out
dec
orl
jmp
es
lret
roll
xor
out
mov
inc
lea
xchg
jl
pushf
or
xchg
stc
das
mov
loope
js
sbb
inc
mov
jne
jne
push
insb
scas
test
lods
imul
aad
insb
insb
mov
aaa
aaa
mov
cmp
xorb
insb
mov
xlat
or
add
into
adc
mov
stos
loope
js
push
xor
lahf
imul
or
je
mov
mov
sbb
mov
fstpt
xchg
js
inc
in
cmpsb
rcr
pop
mov
sbb
inc
jne
repz
shlb
pop
cs
mov
fistpll
js
andl
sub
stos
cld
sbb
cmp
mov
jl
mov
push
push
jle,pn
mov
shlb
add
stos
leave
pusha
test
sbb
pop
mov
test
cltd
push
add
arpl
sbb
adc
addr16
mov
xchg
test
and
mov
sub
pop
lret
fmuls
push
test
stos
decb
test
cwtl
mov
lds
cmp
arpl
jb,pt
enter
iret
data16
push
fistpll
aas
mov
mov
and
in
in
js
mov
test
jle
cmp
cmpsl
jo
loope
mov
and
fdivr
les
mov
ss
jno
pop
psubq
lret
inc
gs
int3
push
outsb
addr16
inc
adc
movsl
out
and
jl
pop
inc
xorl
imul
push
cmp
test
lock
jp
dec
int
sub
rep
lock
xchg
mov
sbbb
cltd
sbb
andb
mov
sbb
cli
dec
jo
call
bound
bound
jg
jge
arpl
jae
test
jmp
jae
inc
cld
nop
jp
xchg
data16
btc
cmc
pop
push
rcl
mov
ja
add
ret
ret
idivb
pop
gs
cmpsl
jo
jne
clc
jp
int3
stc
sbb
stos
cwtl
sbb
push
sahf
push
mov
js
insb
pop
lock
adc
lea
repz
dec
mov
mov
mov
loope
add
xorl
cmpsb
mov
mov
push
ror
xor
xchg
push
call
scas
stos
int
mov
fldt
fcmovnu
test
mov
dec
outsb
sbb
push
outsb
pusha
adc
adc
jmp
xchg
mov
xchg
mov
cmovae
adc
neg
mov
push
xchg
inc
jns
sub
xor
adc
or
fmull
cmp
mov
test
jle
cmpsb
jp
lret
mov
mov
or
add
loop
popa
repz
push
add
xchg
jmp
cltd
pop
xchg
xchg
aad
stos
out
mov
movsb
push
lahf
ret
dec
aas
sbb
pop
outsb
mov
loope,pn
movsb
inc
lods
mov
std
pushf
mov
xchg
mull
mov
imul
leave
cltd
inc
sbbb
mov
mov
or
dec
repz
test
and
or
out
xor
popl
int3
loope
push
lahf
pop
andl
mov
into
mul
xor
cmpsl
or
xchg
inc
pop
sbb
push
loop
in
jle
enter
jg
push
popf
jae
movsl
push
scas
adc
jb
cltd
xor
in
cmp
inc
int3
push
nop
adc
loop
ret
pop
jb
aaa
sbb
add
aam
sub
vcvtpd2dqx
pop
push
jge
mov
mov
add
or
add
adc
xchg
pop
and
out
repz
ljmp
mov
mov
or
or
mov
call
insb
xor
movsb
push
jo
adc
icebp
mov
pop
jbe
push
pop
movsb
pop
jl
push
dec
mov
in
and
push
fs
push
clc
hlt
pop
and
shlb
inc
addl
sub
xor
cmp
inc
fcompl
push
les
mov
std
push
inc
xor
leave
sahf
or
mov
sbb
fidivl
adc
mov
jns
jge
lret
cmpsl
aad
mov
mov
sbb
and
or
std
push
sahf
subl
daa
adc
clc
jae
inc
movsl
pop
mov
ja
cmc
dec
pop
push
dec
enter
movsb
mov
add
adc
inc
addr16
hlt
cmpsb
in
sub
pop
and
enter
jge
in
jo
rcrb
scas
add
push
mov
sub
jo
inc
popf
sub
arpl
popa
icebp
push
inc
mov
xchg
flds
push
mov
hlt
in
daa
aas
daa
sub
in
in
cmp
faddl
mov
outsb
movsl
sub
jne
jbe
mov
adc
aas
sti
jg
mov
inc
lock
push
mov
xchg
subb
sub
dec
mov
mov
addr16
in
and
push
or
mov
data16
xchg
push
icebp
and
cmc
loope
and
lret
xchg
or
shlb
icebp
jp
push
xchg
inc
push
inc
das
out
fdiv
ret
dec
pop
test
and
xor
push
push
mov
adc
aas
out
xor
pop
adc
pop
test
sub
mov
add
xor
mov
and
je
insl
xchg
jmp
jle
and
xchg
and
std
stos
int
insl
mov
stc
cmp
jle
mov
pushf
xchg
ffreep
jg
repz
and
mov
jo
movsb
sbbb
jo
xchg
adc
jne
inc
xchg
popf
cmc
or
lret
lret
insb
cmpsb
fisubl
gs
icebp
and
xor
mov
xchg
in
push
mov
repz
jecxz
fdivr
js
push
fisttpl
xor
pushf
inc
adc
and
hlt
sbb
mov
adc
decb
sbb
cwtl
inc
adc
ljmp
push
push
jmp
fcompl
xchg
and
imul
insb
mov
aad
jnp
imul
sub
enter
and
xchg
and
pop
test
out
frstor
es
jb
and
aas
loop
push
cmp
mov
inc
add
and
xchg
xchg
jmp
fisttps
lcall
inc
ret
or
sbb
rcr
or
pusha
leave
push
test
add
and
nop
sub
mov
sbbl
lods
mov
es
bound
int
cmp
inc
inc
int
mov
inc
cltd
sub
add
and
lahf
or
fsubr
inc
in
cmp
nop
push
movsb
sub
les
cltd
or
dec
insb
cli
push
ss
sub
ljmp
in
mov
or
mov
mov
sub
jbe
js
add
inc
sub
inc
daa
xchg
mov
push
sbb
leave
mov
ss
enter
into
cs
pop
adc
jnp
out
outsl
repnz
push
cs
pop
in
ficoms
inc
xchg
xchg
mov
lods
rorl
mov
or
push
xchg
and
lahf
xor
in
sbb
lea
jp
lret
lret
test
push
push
fisttpl
loop
rorl
jp
xchg
addr16
sub
cmpsb
ret
xchg
cld
cmp
fstps
ret
xor
jno
divl
arpl
xchg
lahf
fs
int
inc
cmp
jmp
insb
add
insl
bound
ljmp
pop
insb
dec
dec
pop
dec
fdivrs
adc
mov
fldl
and
push
std
inc
iret
loope
js
and
sbb
test
mov
add
enter
sahf
push
push
mov
mov
sbb
mov
xorb
jb
mov
jle
bound
push
inc
xchg
faddp
inc
add
inc
sbb
test
nop
inc
mov
cmp
jbe
xchg
addr16
orb
or
and
mov
adc
pop
dec
sub
ja
add
rcr
int
ljmp
add
enter
inc
in
xchg
add
sub
imul
mov
out
pop
pusha
pop
ja
jg
out
test
ja
and
mov
xchg
mov
mov
pop
pop
jnp
lret
pop
push
mov
cmp
bound
in
xchg
add
and
flds
mov
or
loope
idivb
into
xor
setbe
es
in
xchg
pop
mov
daa
imul
popf
push
cmp
pop
mov
add
adc
ret
or
test
mov
iret
mov
or
hlt
sbb
dec
jbe
xor
lods
cmc
scas
inc
int3
and
mov
xor
cmp
test
fisubrs
pop
repz
loop
andl
jmp
inc
nop
add
cltd
xchg
je
negl
in
notb
or
sahf
int
roll
adc
cmc
out
sub
cmpsb
mov
xchg
shl
mov
test
add
inc
leave
jo
out
int
sbb
mov
iret
add
inc
insb
pop
push
xor
jae
jmp
std
xor
xchg
loop
mov
popf
sar
xchg
scas
call
fmul
sbb
call
dec
push
inc
jecxz
jae
sub
stos
jp
jl
repnz
mov
adc
loopne
pop
push
cmp
dec
out
inc
div
push
clc
sahf
add
scas
fisubl
aam
sub
notl
adc
xlat
inc
aam
add
nop
mov
nop
pop
or
mulb
test
clc
dec
xchg
or
push
ljmp
xchg
dec
dec
pop
cld
test
shrb
sub
dec
cmp
aam
inc
cwtl
jge
or
fbld
xor
lods
pop
pop
jg
sub
andb
adc
arpl
xchg
sub
pushf
dec
or
jae
xchg
je
clc
jecxz
sti
dec
xor
movsb
push
fidivrs
push
idiv
jnp
int3
push
std
in
ret
cmp
push
fisttps
cld
jns
mov
jle
or
mov
push
mov
outsl
loopne
out
inc
cld
iret
inc
out
pop
and
mov
mov
cmp
ret
repnz
mov
lret
pusha
test
stc
out
add
in
rorl
mov
dec
fldl
and
data16
bound
cltd
aaa
stos
jne
mov
add
mov
in
jge
or
dec
lret
mov
cltd
icebp
mov
push
in
popf
and
cmpsl
xor
sub
clc
incl
jb
shl
adc
or
push
sbb
loop
push
test
push
and
and
jecxz
sub
and
add
scas
in
adc
stos
movsl
xchg
cltd
pop
js
dec
or
cltd
leave
pop
push
clc
lret
dec
lahf
dec
push
mov
ficomps
jp
mov
divb
add
jmp
mov
jg
push
ret
sub
repz
push
push
lods
lret
stos
xor
in
mov
sub
mov
shlb
fistpll
fdivrs
in
mov
lret
stos
mov
jle
repnz
out
add
test
mov
outsl
mov
fldcw
mov
dec
or
cmp
sub
idivb
out
or
lahf
inc
testl
js
imul
repz
push
sti
adc
jg
jno
shr
rclb
jne
nop
push
cmpsl
sti
jb
cs
mov
mov
repnz
add
insl
cld
repnz
enter
cmp
inc
add
popa
mov
shlb
sub
jle
mov
cmc
xchg
inc
rcll
push
cmp
fs
dec
rorl
sub
test
inc
sbb
pusha
enter
xchg
lcall
jmp
dec
pop
in
adc
std
jnp
scas
jb
ljmp
ret
loope
je
sub
insb
mov
xchg
icebp
sub
inc
inc
cmpsb
fidivrs
movsb
sbb
cltd
int
dec
cld
insb
pop
les
mov
popf
xchg
clc
loopne
or
add
adc
pushw
sub
loope
mov
fs
fmull
int3
push
test
pop
stos
iret
mov
jmp
pop
xchg
test
in
sbb
adc
push
pop
cmp
fstps
outsl
mov
popl
jge
push
or
test
cs
cmp
inc
add
xchg
shl
mov
dec
mov
imul
jmp
push
scas
iret
xchg
lret
mov
pop
fcompl
dec
dec
or
aaa
and
outsb
dec
pop
clc
loopne
adc
repnz
imul
mov
cmp
mov
cltd
and
mov
dec
mov
jecxz
inc
ja
add
push
xor
jecxz
das
lea
scas
mov
jge
xor
cmp
int3
xor
jo
mov
push
fs
mov
loop
mov
and
lcall
dec
cli
add
xor
ja
ds
adc
fs
subl
fimuls
push
push
icebp
ds
add
loop
loopne
adc
cmp
popf
sbb
call
mov
mov
and
cmpb
cmp
movsb
inc
xchg
cmp
stos
mov
mov
std
cmp
and
pop
test
addr16
dec
sub
mov
scas
pop
cmp
fidivs
sub
cmc
jl
mov
and
xchg
sahf
jo
aas
aam
out
stos
cmp
adc
movsb
cld
cltd
inc
cmp
out
nop
xchg
test
push
scas
sahf
test
in
push
loop
mov
ss
mov
roll
add
add
lods
sbb
outsl
loope
into
pop
lods
push
xor
add
sbb
int3
sub
imul
enter
call
int
sti
aas
jl
xchg
sub
fsubp
mov
sahf
push
ja
movsb
xchg
iret
popf
pop
add
dec
push
rorl
daa
xchg
imul
sahf
mov
pop
nop
add
xchg
faddl
mov
jmp
adc
xchg
mov
scas
es
fnstsw
dec
add
jb
adc
and
ds
xor
add
dec
out
out
adc
add
xchg
lods
sbb
jnp
xchg
mov
inc
mov
scas
mov
xchg
sahf
clc
pusha
shl
scas
call
ret
cmp
mov
inc
cmc
fmull
ds
lock
pop
cmpsl
pop
jg
jae
cld
pusha
iret
sbb
inc
pop
inc
test
or
int
popa
sbb
pop
rolb
pop
repnz
bound
mov
popa
sahf
mov
sbb
inc
arpl
or
sub
je
cltd
adc
fidivrs
sbb
push
popa
pushf
push
stc
mov
or
sti
add
mov
pop
and
xchg
jecxz
in
imul
push
jne
mov
xorl
mov
jno
les
mov
pusha
or
movsb
or
and
inc
imul
fidivl
or
ss
mov
aad
adc
hlt
js
cmp
lock
push
or
push
fiaddl
loop
inc
lahf
jns
test
mov
stc
test
lret
inc
inc
popf
test
into
fldenv
add
cld
inc
ret
jne
push
pop
xchg
push
iret
push
daa
ds
test
scas
xor
add
stos
push
rcrb
stos
xor
std
jno
xchg
fisubl
pop
fnstcw
add
in
xor
inc
xor
arpl
adc
sti
cmp
aaa
mov
push
inc
xor
mov
adc
add
imul
push
and
inc
bound
adc
xor
push
pushf
pop
push
jle
and
mov
sbb
mov
mov
mov
sbb
arpl
inc
xchg
cmpb
lahf
loop
xor
mov
imul
mov
out
sub
adc
movsl
stc
adc
mov
push
xchg
adc
stc
fildll
arpl
sub
push
cs
in
jecxz
lods
mov
push
int3
dec
push
jp
and
adc
cmp
test
test
mov
repnz
hlt
push
jno
sbb
xor
jle
call
xor
mov
cli
push
cmp
cltd
cs
hlt
push
xor
ds
push
mov
rclb
into
roll
or
adc
or
jnp
cltd
scas
fimull
adc
ret
mov
sub
jg
orl
fbstp
push
loopne
ljmp
or
test
jb
loopne
dec
ds
mov
ss
out
and
adc
jge
jmp
pop
lea
aam
je
inc
ret
les
sbb
push
sub
dec
mov
cwtl
insl
push
ja
je
in
pop
aam
fcmovnbe
jmp
ja
dec
push
mov
inc
mov
test
aam
dec
mov
cmp
pop
cmp
aam
pop
jg
out
pop
subl
ret
sub
mov
daa
mov
cmpsb
push
push
lret
mov
outsb
sub
sahf
cwtl
push
ss
out
in
adc
sbb
int3
pop
mov
sarb
sub
mov
push
lret
push
inc
sahf
int
add
mov
jmp
or
ljmp
adc
mov
test
sbb
rorl
ljmp
sub
xor
mov
push
mov
jns
mov
mov
mov
movsl
jmp
jne
pcmpgtb
into
and
and
mov
adc
mov
enter
mov
outsb
mov
jp
mov
sbb
sbb
push
dec
add
fs
xchg
mov
pop
lods
mov
cmp
int3
into
cli
scas
loop
leave
inc
xor
pop
in
sbb
es
push
sarb
lock
sbb
imul
sti
sbb
pop
fwait
cld
xchg
cltd
pusha
or
iret
mov
dec
adc
inc
lea
sbb
pop
mov
fildll
fbstp
dec
movsl
adc
scas
loop
mov
dec
movsb
shrl
sti
ret
rorb
and
imul
cli
pop
sub
mov
sub
and
outsl
mov
pop
sbb
bound
ljmp
mov
imul
push
pop
js
mov
pop
fucomp
cmp
hlt
mov
into
or
shll
xchg
nop
mov
ret
xor
xchg
ja
jg
push
call
and
or
test
outsl
cmpsb
stc
inc
jmp
mov
push
or
xor
pop
pushf
mov
lds
into
xor
je
cwtl
xor
push
jnp
pop
lock
inc
add
rcrb
cmp
ljmp
or
test
fisubrl
sti
mov
cs
jae
push
movsl
out
daa
ficomps
jb
ret
cwtl
push
cmp
inc
mov
jg
cli
aaa
ret
pop
xchg
ja
adc
inc
mov
fwait
cwtl
sub
call
fimull
movsl
out
mov
repnz
jle
in
dec
das
insb
pop
popa
inc
xchg
sbb
jecxz
fs
stos
jno
insb
sub
cli
std
out
inc
dec
xlat
pop
jmp
cwtl
dec
dec
jnp
es
not
fmul
scas
fistps
addl
call
cmp
add
pusha
cmpsb
add
push
rcrl
and
and
ljmp
jns
daa
sete
imul
andl
sub
scas
lods
pop
xor
mov
outsl
popw
sub
pop
fildll
or
subl
mov
dec
cmp
pushf
mov
data16
pop
jb
cmp
jmp
jge
loope
xchg
jle
adc
das
mov
sbb
xchg
pop
mov
sub
and
roll
adc
loope
fstpl
out
imul
mov
add
push
psrlw
cmp
and
gs
ja
xchg
leave
pushf
fnstenv
fdiv
jo
inc
dec
cmpl
dec
sbb
cmp
jge
add
mov
adc
js
xor
imul
add
add
jne
cmpsl
pop
loopne
rcrl
and
add
arpl
add
sbb
add
dec
icebp
sbb
sbb
add
jae
stc
mov
mov
lret
ja
and
in
ss
jge
ljmp
sbb
adc
jle
int3
dec
add
imul
cmp
xor
es
cltd
dec
adc
negl
add
and
xor
aas
clc
push
in
adc
imul
sub
mov
fs
jg
pop
xor
ss
data16
fcomi
fdivp
add
movsb
movsb
sub
jae
sbb
in
das
lret
in
ret
call
mov
xor
push
in
fcoms
push
push
leave
fcomip
sbb
ret
stos
mov
xchg
mov
js
xchg
pop
fimull
push
pop
xchg
fbstp
pop
loopne
add
xchg
mov
stos
adc
jecxz
pushf
or
and
stos
insl
pushf
sti
cltd
push
insl
inc
vpmulhw
stc
shlb
xchg
xchg
dec
rcrb
adc
leave
mov
nop
repnz
sahf
sub
sub
clc
mov
shll
ficomps
in
sub
adc
enter
jmp
mov
shll
mov
add
outsb
lods
addb
cwtl
lds
cld
sub
test
mov
adc
sbb
shlb
aas
add
stos
insb
and
in
scas
mov
cmpsl
sbb
mov
lds
push
inc
dec
subl
push
lods
int
sub
clc
cmp
roll
into
adc
ljmp
push
fxch
icebp
dec
pusha
lods
ficomps
xlat
sarb
cmp
cld
mov
movsb
push
aas
jns
outsb
popa
inc
pop
or
jo
cli
stos
adc
cmc
adc
ss
push
and
pop
mov
int
mov
hlt
int3
dec
xchg
xchg
xchg
push
repnz
sub
adc
xchg
outsl
and
decl
ffree
ds
inc
adc
cltd
scas
insb
cmc
stos
sub
int3
cmp
sarl
pop
shl
stos
lds
xchg
rclb
ss
add
adc
push
xor
pop
pop
insl
fwait
mov
adc
or
inc
les
insl
or
in
movl
js
test
jp
sahf
repz
mov
sub
push
add
rcrb
push
test
clc
jae
pop
addr16
and
enter
push
and
stc
jb
jle
add
jmp
add
and
inc
add
inc
add
mov
addb
subb
clc
jae
cmpsb
es
xor
add
add
add
clc
jae
jmp
rorl
stc
jb
das
xlat
dec
pop
xorb
clc
jae
pop
sarl
stc
jb
jp
add
clc
jae
scas
lahf
cwtl
popa
sub
ljmp
popa
movsl
sub
jne
clc
jae
push
xchg
loopne
ljmp
lods
cmpsb
ret
mov
scas
mov
adc
or
scas
xlat
mov
and
and
mov
dec
idiv
iret
pop
imul
add
cltd
lahf
mov
dec
daa
mov
or
and
inc
dec
lods
fidivrl
sub
and
jnp
xchg
dec
cmp
mov
inc
pushf
out
insl
and
jmp
int3
inc
and
push
sti
aaa
std
dec
mov
in
sbb
rcrb
gs
subl
xchg
mov
and
bound
repnz
adc
cmc
stc
repz
push
jbe
xlat
loop,pt
inc
and
in
ret
loopne
xchg
js
sbb
cmpsb
push
jnp
cmp
jo
rcrl
sub
popf
dec
je
dec
mov
div
jmp
pusha
mov
cs
jle
aam
jne
ja
push
cltd
push
pop
orb
movsl
and
popa
and
fnstenv
xchg
xchg
sbb
cwtl
sub
clc
pushf
pop
jmp
testb
ret
and
sbb
mov
mov
sub
push
sub
shrb
xchg
in
xlat
mov
lds
jmp
jo
xchg
jb
add
xchg
mov
push
stos
cld
mov
cmp
cwtl
bnd
push
lock
stc
xor
jmp
lods
dec
lea
sti
push
xchg
lock
sbb
nop
hlt
cld
aad
sbb
dec
pop
or
daa
fwait
adc
cmp
mov
mov
and
push
movsb
cli
das
xchg
mov
or
add
cltd
cmpl
xor
mov
jne
out
lock
add
push
cmp
cmp
flds
add
add
cmpsb
dec
je
cmp
or
test
int
add
pusha
mov
push
adc
xor
xorb
mov
mov
int3
add
addr16
dec
xchg
scas
push
mov
jmp
mov
push
mov
mov
push
fildl
inc
frstor
ljmp
sbb
mov
pop
cltd
jge
xlat
jnp
jle
test
sahf
subb
jl
push
and
mov
mov
inc
xchg
add
sbb
call
and
popf
add
add
loopne
add
add
add
add
inc
mov
sahf
lods
icebp
imul
cmp
sbb
xchg
pop
lcall
sar
mov
xor
es
adc
data16
mov
aaa
into
mov
dec
mov
push
adc
adc
dec
push
or
popf
movl
sbbl
std
stc
push
in
sub
dec
inc
and
fisttps
add
fdivl
adc
and
and
push
mov
ret
std
jecxz
shll
and
push
stos
add
add
push
add
mov
dec
add
add
add
add
test
sahf
dec
jne
sub
stc
mov
leave
pop
arpl
popa
inc
xchg
daa
xlat
pop
pop
inc
sahf
xor
sub
insl
aam
jbe
pop
orl
xchg
mov
es
push
mov
fstpl
mov
les
sbb
cmpl
and
in
lods
outsl
mov
jecxz
mov
mov
jmp
adc
jne
mov
push
or
icebp
in
adc
lret
cmovb
dec
mov
subl
fwait
add
decb
sbb
ret
adc
pop
pop
xor
jle
jecxz
imul
js
mov
sbb
sub
mov
test
js
xchg
xchg
les
idivb
jb
cmp
rolb
jle
adc
iret
and
mov
mov
sub
push
pop
fsubrs
mull
inc
xlat
mov
push
adc
nop
inc
xchg
xchg
mov
adc
fwait
je
sbb
push
mov
fimuls
push
scas
push
es
test
cld
sub
mov
jbe
jae
xor
sub
in
pop
cmp
inc
dec
jecxz
lods
sub
leave
or
js,pt
jo
gs
jnp
lahf
test
ja
xchg
jecxz
lods
xchg
movsl
loop
cmp
test
out
xchg
fldl
push
mov
dec
pop
in
jo
arpl
divb
and
mov
dec
dec
mov
or
gs
jno
repnz
cmp
xor
jbe
cmp
sub
or
ds
imul
fyl2xp1
xlat
ljmp
mov
xchg
lret
add
inc
adc
popf
dec
das
out
adc
mov
out
and
xchg
cli
rolb
mov
enter
push
sub
in
and
and
xorl
push
jl
sbb
dec
push
cmp
test
scas
iret
fnsave
cmpsl
sub
xchg
lods
popa
push
or
and
jge
or
lods
test
sti
testb
xchg
out
pop
lea
push
into
into
in
mov
rolb
add
push
bnd
adc
insl
dec
outsb
out
or
fsubr
pop
sti
lret
loop
mov
and
mov
push
mov
das
imul
in
lock
add
imul
rcll
nop
sub
xchg
mov
cmp
push
vpackuswb
ljmp
ret
jns
or
jle
inc
add
iret
pop
cmc
pushf
pop
popa
test
xor
xor
aad
lret
xchg
lea
lock
rcrl
sbb
push
test
lods
flds
scas
sarb
clc
iret
mov
jbe
add
add
lcall
pop
sub
or
mov
cmp
xchg
sbb
push
dec
push
notb
lock
adc
mov
or
pop
sbb
push
aam
shl
fnstsw
scas
lcall
push
dec
inc
repnz
lods
arpl
aam
cmp
or
pop
aad
xchg
sbb
bound
cmp
imul
inc
int
pop
sbb
xchg
in
daa
pop
adcl
popf
lods
pop
sub
mov
cmp
xor
cmpsb
std
fisubrs
adc
arpl
mov
mov
ret
inc
fcmovnb
adc
xlat
sbb
jbe
jl
jmp
and
out
pop
sub
dec
push
mov
push
cmp
leave
lret
pop
sbb
inc
sbb
bound
jnp
stos
or
lds
arpl
cmp
jb
or
xchg
dec
lret
pushf
into
inc
icebp
jns
sbb
jp
lds
and
popf
std
inc
jbe
cmp
decb
out
jae
jnp
push
jmp
popa
cmp
cmpsl
js
sbb
mov
ds
bound
mov
out
or
cmp
inc
jmp
jle
pop
jb
lahf
fsubrs
jb
test
inc
dec
inc
lea
pop
enter
jbe
jbe
outsb
cwtl
mov
cs
or
ja
scas
cmp
dec
mov
push
mov
arpl
sub
aad
insl
cmp
sbb
mov
push
push
stc
je
adc
cmp
and
subl
xlat
test
hlt
push
in
aad
xchg
sub
enter
mov
push
mov
lret
push
cld
pop
add
out
add
in
loopne
add
incl
add
add
movsl
add
test
test
pushf
push
and
mov
sub
imul
push
cmp
insl
stos
jb
jp
add
or
push
stos
sti
adc
mov
divl
pusha
pusha
inc
jge
sarl
mov
out
ds
dec
pop
push
fnsave
ret
movsl
sbb
cmpl
imul
mov
lods
push
and
or
and
mov
inc
push
xchg
test
sbb
lock
arpl
jb
jns
jl
lahf
shrl
jne
and
rcrb
pop
push
ret
xchg
jns
pusha
adc
fimuls
mov
xor
push
cltd
lock
std
pop
pop
daa
adc
mov
mov
jp
mov
pop
daa
loop
lods
test
mov
mov
mov
pop
and
lahf
fsub
or
mov
mov
lret
inc
jb
adc
popa
pop
or
push
sbb
xchg
xchg
mov
iret
gs
or
test
test
aad
out
mov
negl
mov
mov
lea
in
pusha
mov
sub
je
cmp
mov
movb
insl
lods
mov
fcomip
aas
mov
and
mov
scas
pop
aad
jmp
and
mov
nop
jo
ficompl
repz
into
in
mov
js
push
jnp
fldcw
add
dec
mov
mov
fldl
sahf
sbb
push
negl
sub
mov
das
sbb
cmp
jle
or
sbb
test
mov
arpl
gs
ds
in
rorb
lcall
mov
xchg
add
sub
insb
and
push
leave
in
jecxz
stos
add
lcall
inc
dec
dec
in
sub
mov
adc
sub
jecxz
xlat
xor
inc
mov
push
movsb
push
xorl
shl
jl
adc
popa
adc
test
xor
push
inc
xor
lea
jmp
xchg
icebp
mov
test
adc
negb
sbb
in
xor
ljmp
les
out
loopne
int
jo
fcmovne
pop
fs
jmp
mov
adc
out
js
dec
insb
test
jle
call
xchg
clc
cli
lcall
adc
pop
mov
jmp
jmp
stos
jmp
jae
adc
movsb
add
lcall
imul
push
leave
mov
in
fiadds
inc
and
ja
dec
int
mov
pushf
mov
shll
xchg
mov
jbe
inc
xorb
aaa
je
shrb
and
pop
xor
inc
ljmp
adc
jb
fidivs
je
lahf
push
pop
roll
dec
add
pop
fisttps
ds
inc
push
dec
lret
test
mov
aas
cwtl
aam
mov
push
jae
sbb
sub
imul
js
rcrl
xor
adc
sahf
push
addr16
xchg
test
vsubpd
push
mov
outsb
lds
push
jnp
push
pop
stos
lds
iret
outsl
push
rcr
cs
rolb
test
xchg
loope
ljmp
lds
mov
jne
sbb
jg
lds
and
in
ret
out
mov
out
xchg
dec
fsts
xor
cmc
push
test
cld
push
lods
mov
inc
xchg
push
in
pop
mov
push
in
sbb
aas
jecxz
adc
sbbl
bound
xchg
push
inc
add
inc
inc
xchg
ja
popf
xchg
orb
add
cli
push
mov
mov
and
cmp
jl
divl
cmp
mov
mov
scas
lea
jl
and
cmpb
xchg
in
rclb
imul
mov
xchg
inc
sbbb
jmp
aaa
push
inc
mov
lds
push
mov
into
fsubrs
or
xchg
loope
mov
pop
sarb
icebp
mov
and
jg
aad
ja
test
orb
add
cli
push
mov
mov
cmpsl
lea
add
les
out
loopne
int
jo
fdiv
mov
pop
popf
jg
mov
push
inc
lret
arpl
loop
hlt
stos
imul
aad
sub
imul
test
fistl
mov
push
sub
mov
mov
idivb
pop
aas
jb
inc
mov
aam
inc
insb
dec
fistl
xor
lret
lahf
fisttpll
lret
mov
pop
sub
xor
imul
and
hlt
call
jecxz
stos
ret
loopne
sbb
pop
mov
fcomi
pop
dec
fadd
dec
pop
ds
mov
gs
mov
in
xchg
inc
adc
or
sub
xor
mov
mov
cmpsl
xchg
ss
je
jae
addr16
push
cmp
mov
push
imul
dec
mov
stos
push
sub
add
enter
subl
aad
aad
sub
sbb
add
jno
les
aad
cmpsl
pop
sub
popl
cmp
xor
inc
leave
addr16
out
ret
cmp
repnz
xor
push
cmpsl
pop
sbb
jle
test
mov
sahf
dec
dec
inc
ss
clc
daa
test
shll
ret
add
shll
imul
mov
push
movsb
in
ja
push
icebp
outsb
ss
mov
fadd
mov
xchg
jmp
outsl
or
test
push
jno
out
shrb
fcompl
aam
leave
inc
push
mov
or
test
out
aad
dec
xchg
cmp
lods
movsl
imul
mov
insl
jg
push
jp
or
cmc
mov
dec
inc
stos
sbb
idiv
jns
das
adc
mov
mov
jecxz
jae
icebp
outsb
ss
mov
fadd
mov
xchg
jmp
outsl
or
test
push
jno
out
shrb
fcompl
aam
leave
inc
push
mov
or
test
out
aad
dec
xchg
cmp
lods
movsl
imul
mov
insl
jg
push
jp
or
cmc
mov
dec
inc
stos
sbb
idiv
jns
das
xor
sbb
pop
add
movsb
in
ja
push
icebp
outsb
ss
mov
fadd
mov
xchg
jmp
outsl
or
test
push
jno
out
shrb
fcompl
aam
leave
inc
push
mov
or
test
out
aad
dec
xchg
cmp
lods
movsl
imul
mov
insl
jg
push
jp
or
cmc
mov
dec
inc
stos
sbb
idiv
jns
das
std
pushl
push
xor
cld
pop
cmp
sbbl
popf
push
cmpsl
sub
lds
and
in
ret
hlt
iret
int
pusha
push
mov
xchg
and
je
cmp
in
lret
mov
dec
aad
pusha
jle
mov
xor
sarl
out
loopne
fnstenv
repnz
mov
jle
inc
jp
insl
xchg
mov
push
fsubl
jnp
jg
mov
lds
movsl
jl
xchg
pop
inc
xchg
sbb
inc
mov
mov
xchg
jmp
outsl
or
test
push
jno
cmp
js
aam
cli
lods
jnp
sub
sbb
test
push
jno
sub
gs
inc
mov
mov
cltd
insl
dec
inc
adc
dec
aaa
arpl
xchg
sahf
adc
xchg
rcl
and
aad
cwtl
inc
push
fs
adc
mov
mov
sub
and
and
aad
sarb
push
insl
push
add
outsb
push
pop
or
dec
fidivl
insl
dec
push
cvtps2pi
pushf
loop
adc
std
jne
arpl
addr16
test
add
sub
test
outsl
lods
jg
jecxz
rclb
fdivrl
or
dec
jno
sbb
cld
dec
scas
mov
sbb
mov
pop
jnp
stos
test
push
inc
iret
xchg
fdivrs
push
lods
jecxz
sbb
mov
pop
dec
xlat
fs
sbb
dec
add
xlat
cmp
sti
imul
stc
fidivrl
scas
jno
mov
xchg
lods
in
add
inc
test
sbb
inc
xor
je
aad
sub
sbb
add
jno
les
aad
cmp
arpl
jmp
inc
xchg
add
jne
adc
repz
incb
outsl
xor
sahf
mov
in
lods
fdivr
inc
loopne
repz
mov
bound
xchg
sahf
adc
xchg
rcl
and
aad
cwtl
inc
push
fs
adc
mov
mov
sub
and
out
repz
jmp
jbe
push
loop
stos
loope
cmp
and
push
adc
hlt
rorl
jne
insl
dec
push
cvtps2pi
pushf
loop
adc
std
jne
arpl
addr16
test
add
sub
test
outsl
lods
jg
jecxz
rclb
fdivrl
or
out
fwait
cmp
shl
rol
enter
testb
dec
push
inc
iret
xchg
fdivrs
push
lods
jecxz
sbb
mov
pop
dec
xlat
fs
sbb
dec
add
xlat
cmp
sti
imul
bnd
gs
pop
jmp
mov
xchg
sbb
inc
xor
je
aad
sub
sbb
add
jno
les
aad
bound
inc
xchg
and
in
mov
stos
cmpsb
jle
sbb
or
jo
in
cld
jb
out
fstpt
repnz
and
popf
jmp
in
pop
ret
in
fwait
xchg
outsb
ljmp
or
xchg
ror
iret
adc
out
out
aad
dec
xchg
cmp
lods
movsl
imul
pop
sbb
pop
inc
sbb
sti
pushf
inc
xor
jl
and
fsubs
into
or
les
adc
add
sub
mov
in
cltd
xchg
inc
xor
jno
dec
push
jp
jg
sbb
insb
jns
pusha
stos
pusha
mov
dec
dec
sub
push
imul
fs
push
imul
push
inc
iret
xchg
fdivrs
push
lods
jecxz
sbb
mov
pop
dec
stos
fwait
movsl
mov
push
repz
cmc
jnp
addr16
xor
jns
roll
mov
xor
adc
std
jne
arpl
mov
push
ffree
test
int3
in
stos
xor
mov
in
pop
and
arpl
pusha
push
push
mov
lret
jl
push
out
out
aad
dec
xchg
cmp
lods
movsl
imul
pop
sbb
pop
inc
sbb
sti
pushf
inc
xor
jl
and
fsubs
into
or
les
adc
add
sub
mov
in
cltd
xchg
inc
xor
jno
dec
push
jp
jg
sbb
insb
jns
out
sar
xor
push
addr16
dec
rorb
dec
in
es
adc
nop
repz
xchg
jp
out
lea
fisubl
pop
mov
xchg
jp
xchg
jmp
mov
shlb
repz
push
daa
test
mov
stc
lcall
xor
mov
inc
dec
jbe
adc
jmp
dec
xor
jno
xchg
push
stos
lret
adc
movsb
xchg
adc
jne
insl
dec
push
cvtps2pi
pushf
loop
adc
std
jne
arpl
xchg
inc
push
shrb
lea
sub
pop
test
dec
sub
pop
xchg
lea
rcll
or
dec
fnstenv
pop
mov
cs
mov
pop
jnp
stos
test
push
inc
iret
xchg
fdivrs
push
lods
jecxz
sbb
mov
pop
dec
push
mov
stos
in
cmp
fmul
lock
xor
imul
sahf
rcrb
divl
mov
xlat
pop
inc
test
lock
xor
push
cmpsl
pop
sbb
jle
ds
push
jbe
imul
enter
mov
inc
xchg
in
pop
cmp
int
fwait
dec
mov
insb
cmc
shrl
mov
repz
pop
inc
xor
sbb
aad
sub
sbb
add
jno
les
aad
pop
sahf
xor
adc
test
mov
aas
shlb
sbb
rcl
lea
daa
call
movsl
in
dec
test
add
xor
fsubrl
dec
xor
ret
ror
iret
adc
out
out
aad
dec
xchg
cmp
lods
movsl
imul
cli
out
test
mov
ja
mov
mov
int3
cld
cmp
insb
in
sahf
imul
ja
and
cs
shlb
mov
dec
push
inc
iret
xchg
fdivrs
push
lods
jecxz
sbb
mov
pop
dec
push
mov
stos
in
cmp
fmul
lock
xor
jecxz
cmpsl
mov
stc
call
loopne
arpl
enter
xlat
pop
inc
test
lock
xor
push
cmpsl
pop
sbb
jle
ds
push
jbe
imul
enter
mov
inc
xchg
in
pop
cmp
int
fwait
dec
mov
out
dec
sbb
hlt
fisttpll
add
mov
sub
rorb
sbb
add
jno
les
aad
pop
sahf
xor
adc
test
mov
aas
shlb
sbb
rcl
lea
loopne
cli
mov
sub
jb
int
imul
jbe
lret
jl
push
out
out
aad
dec
xchg
cmp
lods
movsl
imul
fistpll
lea
jp
imul
xchg
imul
lahf
dec
xchg
and
movsl
std
add
sub
mov
in
cltd
xchg
inc
xor
jno
dec
push
jp
pop
or
inc
cmc
mov
xchg
std
sahf
cmp
orb
adc
adc
dec
aaa
arpl
xchg
sahf
adc
xchg
rcrl
xchg
ljmp
add
inc
push
aam
lcall
pop
pop
push
mov
bound
lret
fldcw
mov
or
sbb
dec
sub
addr16
sub
or
or
or
lret
mov
mov
sub
rorb
sbb
add
jno
les
aad
cmpsl
pop
sub
popl
cmp
xor
inc
mov
ss
out
jo
in
cld
jb
out
fstpt
repnz
and
popf
jmp
and
sub
cmp
mov
push
dec
cmpsl
pushf
mov
aam
dec
inc
adc
dec
aaa
arpl
xchg
sahf
adc
xchg
rcrl
xchg
ljmp
add
inc
push
aam
lcall
pop
pop
push
mov
bound
lret
fldcw
mov
or
sbb
dec
sub
and
daa
pop
dec
add
fst
xor
adc
aaa
jmp
dec
je
sub
lcall
loope
xchg
xchg
jl
pop
cli
les
out
mov
stos
jno
popa
jg
js
jge
mov
iret
dec
icebp
add
cmp
jle
dec
dec
sub
daa
mov
sub
sbb
cmp
adcl
pop
in
insl
pop
pushf
adc
dec
insl
and
aas
mov
xor
mov
imull
mov
adc
das
notl
out
fs
push
mov
movsb
mov
xor
mov
mov
add
mov
int3
aas
pop
shll
divl
nop
pop
mov
jmp
xlat
jmp
in
loope
repz
fdivs
xor
pop
cwtl
outsb
int3
aad
rol
movb
lds
clc
jne
imul
mov
xchg
out
mov
clc
add
cmc
adc
imul
xchg
pop
cmp
push
and
mov
lret
or
mov
xor
pop
and
push
mov
mov
popa
sti
pop
inc
inc
loope
pop
add
xchg
xor
pusha
test
jno
in
jbe
push
jbe
cwtl
enter
ss
test
add
sub
and
int
int
es
fstps
frstor
mov
push
mov
pusha
aad
cmp
and
lods
int
sti
xchg
jp
adc
mov
or
inc
rorb
popf
and
push
mov
or
cmp
stc
pop
jb
pop
mov
cmpsl
ds
stos
std
or
lea
lret
sbb
inc
paddusb
dec
push
push
mov
test
sti
dec
mov
cli
sub
push
mov
mov
mov
data16
sub
call
xor
mov
arpl
negb
inc
aam
cmpsb
iret
push
mov
sub
jno
inc
cmpsb
loop
lock
mov
sub
inc
outsb
mov
lods
mov
jns
mov
scas
notb
incb
cmp
test
sbb
dec
push
fsubr
mov
cltd
inc
adc
inc
pusha
into
dec
jb
mov
or
mov
fs
mov
mov
xor
fs
push
ds
insl
pop
das
lcall
sbb
or
aad
fbstp
lods
aam
xor
xor
in
bound
shrl
sbb
int3
jb
or
ret
hlt
cmp
rcr
push
inc
das
mov
jbe
jae
or
jbe
iret
sub
das
int3
pusha
test
and
in
int3
data16
subb
sti
push
push
hlt
jle
daa
push
jae
decl
add
aam
dec
adc
movsl
out
inc
js
ffree
sti
jno
das
dec
pop
iret
fsubs
dec
int
popa
and
sbb
push
pop
pop
add
lods
pusha
lret
cmp
sub
push
push
fnsave
sub
sbb
out
add
lahf
adc
cmp
jecxz
mov
inc
jo
mov
mov
mov
sbb
sub
repz
adc
pop
pop
int3
cmpsl
pusha
add
push
iret
in
insl
js
jge
xchg
clc
fildl
and
fbstp
shlb
add
cmpl
inc
movsl
jl
js
dec
mov
popa
hlt
sbb
cwtl
cld
and
cwtl
jnp
aad
sub
dec
ucomiss
jg
mov
data16
inc
mov
sarl
shrl
xchg
fildl
mov
and
xor
mov
mov
insb
xor
pop
fbstp
and
scas
je
data16
outsb
xchg
ja
imul
shll
pop
ja
ljmp
pushf
mov
lods
pop
push
vmread
jbe
adc
imul
repnz
mov
mov
mov
xor
mov
push
cmpsb
jg
and
jg
inc
stos
jecxz
add
dec
outsl
mov
scas
and
mov
sbbb
dec
dec
sbb
and
mov
push
lret
scas
pop
mov
loop
jl
xlat
test
sarl
or
mov
insb
ror
leave
lret
popa
sbb
cmpsb
pop
fs
mov
xchg
xchg
add
sub
subb
out
dec
iret
jp
xlat
push
adc
mov
xchg
add
jle
cmp
stos
push
outsl
sahf
xchg
or
sub
pop
pop
pop
fcompl
sbb
sti
fcmovb
jbe
inc
rcll
mov
sbb
jns
sub
xor
je
dec
std
popa
ja
ret
adc
xor
mov
aas
decl
lods
cmpsl
shrl
xor
test
mov
fmulp
lock
xchg
cmpsb
push
in
int3
aaa
cs
ret
pop
loope
jp
xor
sub
sti
sahf
cmp
xchg
jecxz
lahf
sub
loop
mov
mov
pop
shll
push
mov
cs
adc
inc
mov
sbb
push
and
push
adc
inc
imul
lds
sbbl
jle
and
sti
aam
adc
fxch
inc
fnstsw
cmp
pop
ja
daa
xchg
pop
jg
call
push
int
pop
and
inc
hlt
push
or
mov
mov
adc
xchg
lds
jne
int
add
xor
fidivrs
or
or
xchg
sbb
bound
xchg
mov
mov
scas
sbb
in
es
into
rorl
addl
lock
jmp
pop
jmp
jb
push
sub
sbb
cmp
xor
xchg
dec
lahf
jne
jmp
ret
nop
and
push
and
pusha
push
jbe
mov
cmp
jge
push
xlat
call
sbb
mov
or
or
aam
mov
dec
jne
stos
imul
dec
je
cmpsb
ret
cmpsb
das
sti
and
inc
dec
ja
repz
ret
pop
mov
jecxz
dec
vcvttsd2si
cli
lret
jge
cmpl
sti
std
fs
xchg
inc
shll
jecxz
dec
push
jne
mov
jbe
cmp
es
adc
mov
in
out
cltd
sbb
jbe
push
psraw
repnz
js
add
push
mov
out
adc
dec
fistpl
sbb
add
inc
fcoml
adc
fbld
lea
add
cmc
aam
jmp
pop
adc
pop
out
and
cmp
fisubrs
test
cmp
fwait
sbb
xchg
pusha
fisttps
xchg
loop
pop
jge
cltd
dec
enter
inc
push
push
icebp
push
in
dec
adc
mov
test
andb
sarl
cmp
rcrl
dec
xchg
cltd
mov
in
add
cmp
mov
icebp
or
xor
xchg
stos
adc
jecxz
mov
rol
iret
inc
outsl
imul
shlb
in
enter
int
test
jmp
pop
xchg
fidivrs
cmpsl
dec
inc
jl
fstpl
icebp
mov
mov
mov
mov
pusha
les
xchg
fldenv
fcomps
push
in
push
enter
cmp
adc
test
adc
inc
mov
push
movsb
outsb
xchg
inc
movsl
fwait
sahf
cmp
fcmovnu
xchg
sbb
jg
push
insb
rorl
stc
xlat
adc
je
arpl
sbb
mov
sbb
hlt
in
inc
xor
cld
gs
into
stos
rcl
dec
inc
jp
inc
movsl
mov
push
adc
movsb
out
and
lea
jbe
pop
mov
mov
or
into
mov
lret
push
sub
inc
push
push
stos
fisubrl
push
mov
mov
in
bound
and
enter
inc
push
inc
fmul
dec
mov
adc
adc
jne
cld
imul
mov
or
inc
pop
sahf
mov
inc
mov
out
xchg
int
dec
lcall
xchg
fnsave
pop
and
xchg
or
xchg
test
mov
xor
addb
push
psrad
xchg
addb
push
push
inc
push
lret
or
orb
popf
ret
pop
aad
rorb
aas
and
mov
jnp
rcrl
ds
dec
or
add
mov
mov
xor
int
sub
insb
insl
xor
sti
push
movsl
imul
inc
nop
sub
and
and
push
ror
imul
test
inc
mov
std
call
into
sbb
inc
jo
nop
iret
jns
pop
jns
dec
push
adc
sbbl
mov
inc
xor
xchg
push
adc
mov
fstl
out
jg
lock
rcrl
add
push
pop
and
or
jne
jno
fnsave
inc
pop
sbb
sbb
pop
sbb
mov
ret
pop
in
sbb
adc
sub
cmp
add
dec
and
hlt
jo
es
cltd
int3
std
xor
push
xchg
insb
xlat
ja
xchg
repnz
cmp
scas
push
mov
sub
dec
idivl
in
pushf
insb
es
lds
cmp
or
dec
push
xchg
dec
mov
pop
pop
aam
sub
je
adc
mov
lock
push
jg
add
xor
int3
fidivrl
fisubs
fidivrs
push
jge
bound
mov
push
leave
ss
outsb
jo
or
adc
adc
iret
pop
or
enter
roll
das
mov
cld
gs
jle
sbb
pusha
push
push
fmuls
jno
popa
jmp
popa
aas
jmp
popa
push
mov
or
jns
aam
pushf
js
jnp
ss
mov
adc
imul
mov
dec
test
in
pusha
in
ret
jb
pop
icebp
inc
ficoml
mov
xor
aam
flds
jmp
sbb
jp
cmp
dec
sbb
cld
pushf
and
icebp
mov
imul
mov
enter
jne
sub
xor
mov
dec
imul
fmulp
inc
mov
and
inc
mov
stc
xchg
cwtl
inc
loopne
bound
or
lahf
in
jge
jge
xlat
push
adc
aad
es
fwait
insl
pop
popf
xchg
scas
movsl
sub
jne
fs
dec
ret
adc
or
les
sub
pop
das
inc
adc
hlt
loopne
xchg
pop
xchg
fstp
loop
into
scas
clc
push
xchg
fidivrl
data16
mov
sub
in
rorl
cmp
clc
mov
jb
mov
test
xor
push
xor
add
call
and
inc
aam
in
xor
or
mov
mov
xchg
push
or
mov
mov
mov
es
insb
outsl
subl
inc
dec
lcall
js
in
mov
mov
sub
sbb
cwtl
imul
fwait
push
mov
outsb
and
ror
push
adc
adc
into
inc
aad
fwait
data16
in
mov
mov
or
jnp
imulb
mov
int3
out
and
mov
nop
cmp
jmp
out
add
out
mov
loope
mov
inc
dec
push
dec
sbb
dec
ficoml
and
arpl
sbb
sbb
sbb
rcrl
jb
ljmp
or
and
mov
repz
aad
xchg
push
sarb
fisttpll
jns
push
imul
fwait
mov
pop
es
js,pn
pop
dec
imul
xchg
jle
push
mov
xchg
jo
mov
stc
dec
dec
sub
adc
xchg
and
pop
or
dec
jnp,pt
scas
ret
mov
mov
sbbb
xlat
out
insb
jmp
sub
sub
lahf
mov
iret
jmp
mov
je
movsb
daa
and
fmulp
xor
sbb
cli
jns
jmp
sbb
jo
inc
jns
movsl
scas
mov
mov
mov
pop
insl
xor
rclb
mull
lock
psrld
stc
push
daa
xchg
popa
rcll
cwtl
lds
test
xor
lcall
in
icebp
add
lret
jmp
jecxz
adc
jno
std
mov
shrb
fimull
loopne
idivb
ret
jb
arpl
test
dec
stos
outsl
int
insl
push
testl
daa
or
inc
iret
out
lcall
pop
mov
mov
sbbl
adcb
loopne
aaa
xchg
insl
xchg
das
mov
xchg
sub
test
mov
faddl
sub
sub
gs
sub
xchg
ljmp
roll
in
or
mov
inc
aas
cwtl
cmpsb
push
orl
adc
je
les
adc
mov
daa
xor
inc
mov
dec
fsubrp
jp
inc
cmp
cmp
cmpl
loopne
out
mov
jne
pop
dec
cmp
adc
out
sarb
imul
mov
ljmp
test
ljmp
out
xchg
aam
cmp
out
lret
insl
xchg
iret
mov
in
add
cwtl
je
loop
sub
jg
and
and
mov
jo
mov
shl
pop
aas
mov
mov
popf
inc
push
test
fnstcw
mov
mov
or
idiv
pop
sbb
push
movsl
pop
xchg
fcoml
pusha
pop
mov
inc
lret
push
cmp
lods
aas
xchg
lea
sbb
dec
sbb
mov
dec
pop
push
sub
push
loopne
jbe
mov
scas
cltd
imul
inc
fidivl
or
call
mov
or
mov
jg
push
test
sub
pop
push
inc
xchg
xchg
repz
shl
nop
jl,pt
aaa
inc
enter
xchg
add
insl
sub
dec
pop
xlat
rorl
insl
dec
xchg
test
les
stc
int
repnz
inc
xlat
push
and
jae
bound
pop
jbe
out
stc
addr16
sub
add
out
popa
xchg
loopne
fists
je
mov
insl
ret
and
xchg
sub
ss
lret
pop
dec
lock
sub
mov
mov
fwait
pop
mov
mov
adc
sbb
cmp
loop
hlt
or
mov
out
hlt
xchg
mov
cltd
fwait
dec
xchg
out
or
adc
dec
into
add
mov
gs
xchg
repnz
mov
and
test
push
das
popa
ja
mov
mov
or
repnz
mov
mov
std
stos
daa
lods
into
xor
jno
stc
dec
mov
nop
xor
scas
roll
sbb
fs
mov
cmpsl
pop
mov
mov
paddusb
fidivl
push
cmpsb
enter
ss
mov
fstps
add
cmc
jbe
mov
cmpsl
adc
dec
mov
push
dec
hlt
test
inc
cs
rorb
scas
mov
jmp
xchg
divb
dec
adc
jle
push
imul
lcall
mov
inc
mov
or
stc
lahf
jne
sub
adc
mov
cmpsl
sbb
in
stos
rcrb
cld
sar
lock
inc
jp
rcr
es
fldcw
outsb
fisubrl
cmpsl
inc
subl
mov
sarl
inc
subb
push
add
jno
cmp
jecxz
push
int3
fidivrl
shll
sbb
ret
or
ret
movsb
push
and
int
insl
sbb
push
lahf
xchg
jecxz
mov
aaa
adc
mov
mov
pop
lock
ret
pop
cmp
sbb
scas
and
cmpsl
mov
add
popa
inc
add
out
insb
nop
test
pop
xchg
cmpsb
fwait
out
fisubl
insl
sti
xor
push
cmp
pop
ret
sbb
lods
xlat
imul
lea
mov
push
push
stc
pop
lds
cmpsl
sub
cmpsb
jo
xchg
dec
loop
cmp
inc
mov
fdivr
inc
cmp
fwait
aas
dec
xchg
notb
push
cmp
hlt
nop
subb
shl
inc
stos
mov
imul
repz
mov
pushf
das
dec
loopne
int3
mov
cs
ljmp
add
xor
arpl
mov
idiv
in
push
xor
inc
lods
jg
cmc
jmp
fisttpl
call
mov
and
stos
mov
movsl
sbb
xchg
mov
imul
ljmp
je
add
or
fsubs
xor
jecxz
push
mov
mov
aam
xchg
pop
subl
jg
sub
inc
inc
sub
mov
gs
adc
push
cmp
xchg
arpl
je
xchg
in
repz
push
xor
pop
pop
outsl
cmpsb
jns
inc
mov
dec
mov
int
add
insb
ret
out
hlt
cmp
sub
mov
sbb
nop
sti
lahf
pop
ret
cmpsb
jne
movups
push
xor
stos
push
jge
into
mov
pop
out
ret
dec
xchg
xchg
mov
frstor
dec
scas
inc
push
btcl
int3
pop
call
jne
push
out
and
push
jns
pushf
shll
and
mov
push
mov
andl
es
aad
push
xlat
jb
loopne
cli
stc
mov
sub
dec
sub
andb
in
lods
loope
in
lahf
sbb
push
arpl
mov
jb
arpl
enter
sub
jb
fwait
xchg
loope
jo
sbb
shll
jmp
add
sub
mov
icebp
sbb
cmp
cmp
sub
hlt
fidivs
and
enter
popf
jle
mov
gs
xchg
mov
or
aaa
push
paddb
cmpsl
lahf
cmpsl
rcrl
jno
xor
andb
pop
aam
out
mov
xchg
mov
and
outsl
lcall
lea
cmp
shl
mov
inc
xor
int3
dec
mov
fdiv
outsb
inc
mov
mov
and
dec
ret
ret
cmp
mov
xchg
dec
insl
rcr
scas
mov
push
add
in
shl
fwait
fs
vpcomq
add
and
xor
out
pushf
pop
mov
push
and
lds
cmp
xor
cmp
mov
rcr
pop
mov
and
dec
mov
push
jp
gs
mov
testb
xorb
out
lahf
adc
aas
out
xchg
inc
aaa
pusha
cld
pushf
cmp
shll
mov
xor
inc
gs
dec
mov
inc
pop
jmp
mov
lods
jle
out
add
scas
arpl
inc
popf
sbb
cwtl
mov
dec
and
sahf
mov
js
fcmovnu
mov
xor
adc
push
push
mov
lea
stc
push
or
pop
lahf
clc
aaa
jo
sub
fildl
rorb
pop
mov
mov
pop
mov
cmp
mov
xchg
adc
mov
adc
jg
jmp
std
movsl
xor
pop
fadd
andl
fbstp
jl
cmp
outsl
sub
xchg
mov
std
ljmp
or
mov
ds
or
jae
mov
fcmovnbe
mov
fwait
cld
mov
mov
fists
pushf
movsb
jecxz
sbb
fs
mov
xchg
fcoms
pusha
cmpl
fdivl
aaa
out
lods
dec
movsl
sarl
inc
sub
out
mov
lret
mov
jp
test
jns
sub
sub
sarb
and
and
test
dec
jns
mov
imul
pop
sti
xor
insl
cmpsl
out
jno
lahf
cmp
mov
sbb
dec
popw
jmp
sbb
std
mov
scas
imul
mov
inc
add
adc
lods
fcomi
nop
or
and
push
lahf
fnsave
test
push
out
add
push
rcll
bound
jmp
fwait
loope
sbbl
mov
sub
je
lea
push
jle
jne
repz
jne
sub
jb
sbb
jmp
dec
test
sub
daa
in
cmp
sbbl
pushf
xlat
bound
daa
sarl
dec
push
cmp
adc
call
shll
stos
or
lea
cmpsb
sbb
dec
andb
fiadds
adc
aas
mov
icebp
sub
icebp
sub
bound
cwtl
outsb
iret
lds
cmp
dec
stc
insb
fxch
insl
das
push
lss
pusha
cs
lea
in
ds
in
adc
imul
inc
mov
add
clc
xor
inc
fldenv
das
mov
push
sub
cwtl
xor
or
add
iret
sbb
daa
mov
sarb
loop
divl
loop
in
mov
pop
js
push
or
jnp
jmp
test
fbld
int3
and
in
sbb
lea
ja
sbbl
scas
adc
faddl
xchg
push
shl
pusha
cmp
fdivrs
and
cmc
xchg
jbe
add
rorb
fs
pop
mov
dec
mov
xor
add
jg
leave
mov
and
into
cwtl
xchg
pop
fidivrs
mov
jmp
mov
sbb
sbb
dec
pop
popf
imul
fstpt
into
sub
scas
sub
or
xor
loop
and
sub
lods
push
or
mov
and
gs
adc
popa
shrl
mov
mov
push
into
mov
mov
rcl
push
sub
cmp
inc
pop
xor
out
jle
mov
sbb
fs
sub
xor
mov
mov
or
cltd
cmpsb
lahf
shl
push
in
scas
lods
ja
adc
scas
sub
and
ja
pop
fists
sbb
push
mov
dec
jns
adc
arpl
mov
arpl
cmp
sub
cltd
xchg
icebp
jnp
add
xchg
lea
incl
in
fldcw
sub
push
es
iret
je
xor
dec
mov
jb
pop
inc
fstl
lret
mov
stc
push
sub
mov
mov
pop
jae
jp
or
dec
xor
dec
ss
jl
int
adc
xchg
mov
sub
insb
push
clc
inc
fdivrl
call
lret
repz
pop
ret
jmp
pop
in
pop
mov
pop
shr
fstps
add
and
inc
xchg
cmp
mov
inc
fwait
sub
es
fwait
xor
je
mov
enter
shr
sub
adc
and
insb
sbb
sub
add
les
mov
addps
mov
mov
mov
aaa
int
movsl
jnp
test
mov
jge
add
sbb
fsubl
jle
push
out
pushl
lock
outsb
pop
rcll
pop
and
xor
sbb
push
rclb
or
xchg
ja
push
shrl
in
or
psubusw
mov
aad
stos
push
sbb
hlt
sub
and
xchg
es
test
jmp
mulb
inc
mov
fwait
jp
and
push
call
pop
jno
mov
in
stc
jne
outsb
jle
les
test
cli
mov
dec
add
imul
ret
adc
rcrl
jb
cmpsb
inc
dec
inc
dec
xchg
popa
out
stos
and
scas
and
pop
cmpsl
cmpsl
in
mov
jmp
sarb
fidivs
push
and
cmp
sarl
adcl
or
addr16
push
pop
inc
stos
mov
stc
mov
es
outsb
xorl
mov
push
push
sub
push
lcall
addb
push
xor
decl
and
adc
inc
fisubrl
outsb
xchg
nop
or
xor
push
idivl
xor
adc
jge
call
dec
jne
mov
xchg
cmpsb
cmp
pop
lret
push
dec
sti
adc
xor
loope
rcrb
sub
pop
xor
out
xchg
in
mov
test
scas
pushf
outsl
add
and
stc
push
aam
std
add
sub
out
mov
and
add
aaa
or
add
sti
inc
pop
cmpsb
mov
fld
lea
aad
dec
rorb
dec
lea
inc
loop
xchg
lock
xor
push
test
dec
push
jp
xchg
mov
aas
out
lock
mov
dec
mov
fcoml
fsubrl
mov
inc
adc
mov
in
sub
inc
sub
fwait
movsb
pop
mov
sahf
vmaxpd
insl
loopne
lock
jp
int
cltd
sub
shlb
clc
mov
add
jns
loop
cmp
sub
mov
xchg
jnp
inc
mov
dec
int
jne
roll
aas
dec
or
in
jecxz
cmp
hlt
popf
fsub
movsl
pop
jo
inc
sub
ret
in
xchg
pop
cli
xchg
enter
lds
xchg
mov
mov
push
lcall
add
and
mov
xlat
jecxz
inc
shr
or
lahf
xor
add
push
mov
lahf
ror
js
push
enter
rolb
jecxz
sub
xor
icebp
pop
dec
scas
out
je
rorb
rolb
xchg
pop
xchg
test
int
fs
mov
shll
lods
ret
or
data16
jecxz
cltd
xchg
mov
movsl
push
sti
pop
xchg
sbb
insl
leave
xor
out
lret
ret
aad
mov
addb
jecxz
mov
or
sbb
into
jne
aas
jmp
add
nop
imul
push
inc
in
jmp
iret
insl
test
lea
or
das
add
xchg
scas
push
xchg
xchg
and
pop
aad
mov
push
jp
xor
fwait
sub
xor
xor
push
sahf
leave
xchg
push
int3
lods
and
or
cmp
mov
fs
adc
and
jb
cs
jmp
push
fs
and
adc
sub
jle
push
lcall
shr
leave
xchg
push
pop
and
test
pop
cmp
aas
inc
clc
les
xor
cwtl
imul
jns
outsb
lods
call
xchg
mov
sub
mov
mov
jle
jno
pop
test
push
sub
dec
jg
mov
test
into
xorb
jbe
lret
lcall
lods
dec
leave
aaa
xchg
shl
cmpsl
pop
test
sbb
cmpw
fisubrs
loopne
daa
insl
and
das
pop
mov
int
lods
lea
adc
jmp
dec
pushf
sbb
inc
pushw
add
and
add
sti
out
cmc
jo
lods
test
lds
stos
pop
enter
imul
xchg
insb
mov
or
sbb
cmp
insb
loop
movsl
or
adc
jbe
hlt
shl
cmp
xchg
enter
loopne
pop
ds
jo
ja
sarb
icebp
inc
mov
addl
lcall
gs
mov
pop
xchg
gs
sub
inc
add
push
je
pop
sbb
mov
frstor
hlt
dec
shrb
xchg
rcll
out
cmpsb
xchg
int3
add
adc
js
icebp
mov
jbe,pt
mov
inc
test
xor
push
int3
jne
xor
and
jmp
nop
sub
mov
bound
and
sub
mulb
sbb
dec
lea
fisubs
faddl
sub
or
jae
mov
jb
jg
pop
std
xor
jmp
mov
mov
sbb
xor
jge
mov
xchg
mov
dec
cmpsl
jno
in
and
test
cli
jae
fwait
adc
aad
xor
daa
push
adc
inc
cmp
xchg
sbb
and
aas
iret
cmpsb
out
je
xchg
repnz
cmp
xchg
push
fsub
xchg
adc
inc
je
mov
mov
cmp
add
pop
cmp
mov
jno
sub
mov
inc
addl
dec
das
in
cmp
dec
push
jno
bound
jecxz
insb
int3
test
mov
dec
jbe
lret
jle
out
lods
popa
into
call
and
sbb
scas
fchs
inc
sahf
sti
jp
inc
out
cwtl
sub
or
fs
sub
jb
push
xor
push
mov
add
mov
cli
sbb
cmp
movsb
movsb
push
xchg
mov
outsb
addr16
sahf
call
jb
xchg
sbb
pushf
popf
pop
subb
cwtl
xor
xor
push
out
je
xor
aam
adc
in
jmp
dec
fdivrs
lahf
sbb
cmpsb
icebp
and
cmp
mov
sbb
dec
pop
pop
nop
push
sbb
pop
rcll
xchg
popf
sub
or
movsb
cmp
jnp
xchg
fs
mov
or
sbb
lock
std
add
jnp
push
dec
fwait
mov
lahf
popf
jmp
test
sbb
xchg
shrl
cmpsb
stos
dec
lods
jge
movsl
sti
cmpsl
inc
adc
fdivl
xchg
fwait
xchg
xor
pop
clc
rcrl
or
adc
push
sub
push
inc
lret
call
pop
push
push
pushf
sbb
pop
fisubl
fs
addr16
sbb
idivl
adc
fsubrs
mov
sub
loopne
dec
pop
mov
jno
add
sbb
repnz
xchg
insl
push
pusha
cs
pushf
scas
mov
shlb
inc
fdivp
and
add
inc
rcl
pop
mov
shll
rcrb
pop
out
push
ja
lret
jg
outsb
idivl
sub
xor
xorl
mov
popa
mov
add
lds
push
in
imul
xchg
pop
aam
mov
in
sbb
pusha
in
imul
lahf
ja
test
push
fists
xor
es
cltd
sub
int3
mov
adc
push
xchg
idivl
inc
sub
jmp
jne
test
das
cmc
mov
jnp
jl
jg
adc
loop
mov
mov
insb
fwait
sub
push
and
push
add
jp
hlt
jne
mov
js
mov
fists
or
push
fs
cmp
ja
mov
mov
sbb
mov
out
xchg
shl
lock
add
sahf
jmp
test
lods
repz
sub
nop
popf
sbb
stos
enter
daa
jp
or
fnop
hlt
adcb
sub
aaa
fnsave
sub
lds
arpl
mov
mov
inc
push
sbb
jno
jno
pusha
std
and
lret
cmc
sbb
das
testl
xchg
add
mov
inc
addr16
lcall
dec
xchg
inc
cmp
lods
cmp
xchg
mov
in
loope
out
test
jecxz
mov
jecxz
leave
data16
mov
out
popa
stos
loope
stc
dec
imul
sbb
add
or
fstpl
sbb
std
sub
clc
mov
mov
aas
sbb
repnz
jno
xor
cs
sbb
imul
aam
in
mov
fsts
and
ret
and
jmp
pop
adc
fs
icebp
iret
dec
enter
push
fcmovnb
fstl
repnz
mov
outsb
push
clc
movsb
jbe
insb
loope
insl
mov
dec
push
or
sbb
push
bound
cmpsb
sbb
jo
enter
mov
xlat
and
cmc
fnsave
cmp
lds
pusha
aam
inc
loopne,pn
xlat
mov
jb
jae
push
int3
hlt
jnp
mov
inc
loop
jne
scas
test
cmp
test
inc
arpl
out
dec
jns
mov
cmovb
or
mov
fwait
jle
sub
mov
lods
mov
es
sub
dec
cmp
inc
iret
add
test
add
je
cmpsl
mov
aad
mov
and
fnstcw
stc
shr
adc
les
out
dec
mov
outsb
rclb
dec
or
popa
cld
mov
insb
test
inc
or
cmc
xchg
jns
adc
jno
fwait
mov
mov
jnp
std
mov
je
gs
or
jb
out
aam
cmp
dec
popa
push
pop
jle
test
pop
xchg
push
push
lock
pusha
loop
iret
jle
cmpsb
out
pop
mov
into
push
adc
or
stc
inc
inc
mov
and
test
push
fnclex
xchg
icebp
xor
jmp
aad
pop
jb
push
das
lods
cltd
test
xchg
loopne
dec
test
repnz
aad
loop
mov
shll
movsb
rol
push
sub
mov
popf
inc
jp
cmp
stc
or
leave
repz
jmp
cmc
sbb
imul
lds
jbe
mov
adc
adc
mov
mov
outsb
outsl
fildll
inc
xor
push
inc
lahf
xor
jns
adc
hlt
sarb
loopne
inc
add
pushf
push
jns
hlt
mov
pop
xchg
xchg
lds
push
xor
sbb
adc
cmp
je
enter
rorb
or
mov
cli
xor
ret
das
and
cmp
fnstsw
push
leave
loop
mov
fmuls
aas
sub
inc
sbb
mov
popf
setnp
fsubs
jae
decl
idivl
dec
inc
movsl
cmp
push
or
pop
sbb
js
mov
cld
xchg
sub
xchg
push
mov
jg
popf
or
push
mov
mov
inc
push
divl
xor
add
ljmp
xor
mov
mov
and
mov
hlt
mov
fadds
adc
stos
jns
stc
add
mov
je
push
mov
jne
inc
arpl
mov
sahf
aas
sub
and
sub
iret
movsl
sub
aas
leave
xor
sub
cmc
ret
fadds
cs
loopne
sub
and
repnz
pop
stos
push
xor
pop
dec
pop
xor
xchg
popa
into
mov
in
out
xor
xor
sub
test
and
push
inc
int3
sti
leave
mov
and
xlat
jle
test
push
pop
cmpsb
adc
jmp
fidivrl
lret
sti
cmc
or
js
or
les
cmovo
mov
or
dec
jae
inc
and
mov
cwtl
and
xor
out
xchg
push
sub
fs
popf
or
xor
mov
cwtl
xor
stos
pop
nop
lcall
lret
lahf
lcall
scas
and
lock
ret
int3
inc
lcall
ljmp
out
dec
or
decl
pop
adc
out
or
xor
pop
stos
and
test
mov
fst
inc
mov
dec
int3
or
dec
sub
xchg
push
ds
cld
out
mov
jmp
sbbb
mov
mov
pop
movsb
leave
add
pop
lret
jns
insl
mov
nop
mov
shlb
repz
jge
add
add
in
loopne
add
add
add
add
add
addl
icebp
flds
inc
inc
outsl
pop
imul
stos
add
movsl
mov
nop
sarb
cs
mov
out
ds
icebp
in
sbb
and
enter
repz
aam
jns
mov
insb
cmp
shrl
rorl
cmp
xchg
mov
jecxz
sbb
cs
inc
mov
adc
ss
dec
aas
dec
incb
divb
dec
test
cli
or
dec
aam
mov
sub
test
pop
ret
imul
mov
xor
lods
add
dec
inc
adc
ja
pop
jecxz
xchg
adc
leave
ss
mov
or
mov
jb
xor
fisubl
push
fimull
push
mov
jle
cmp
enter
fstl
jo
rclb
inc
jno
jno
lcall
xor
sub
std
fwait
add
cltd
pop
movb
dec
adc
inc
inc
aad
sub
jo
jns
push
inc
movsb
inc
test
insl
jge
lcall
loop
and
repz
or
popa
pop
cmp
fimull
fisubl
outsb
sub
imul
cmp
push
mov
jl
into
rsqrtps
repz
cltd
or
fldt
adcl
xchg
xchg
dec
push
pop
cmp
iret
scas
mov
adc
inc
cmpsl
inc
pop
or
pop
aad
mov
mov
pop
lea
mov
fcmovne
stos
or
lcall
adc
or
lods
fs
sti
dec
mov
inc
test
repz
sbb
mov
sbb
mov
stc
adc
lret
test
imul
pop
je
in
cmpsl
pushf
int
or
daa
sarb
cmpsb
push
mov
xor
popa
xchg
pop
push
or
sbb
into
in
in
mov
imul
jno
daa
adc
mov
ds
sub
cmpsb
jge
dec
lret
jbe
add
mov
cmp
lret
pop
adc
jle
lods
out
adc
mov
mov
mov
popf
fs
in
cmp
push
sbb
cmp
loopne
push
dec
pop
adc
add
cmp
les
imul
orb
fisttpll
pop
sub
inc
pushf
push
dec
sbb
lock
cmp
add
ficoml
clc
repz
lods
cld
lcall
mov
test
add
ljmp
pop
dec
xchg
sbb
leave
fisubs
das
cmp
mul
movsb
movsl
xchg
iret
repnz
insl
data16
sbb
pop
sub
cmpl
fcom
mov
into
pop
xchg
into
pushf
sbb
mov
insb
mov
sahf
rorl
cs
fnsave
xchg
push
nop
insb
and
jnp
jmp
test
lds
cmp
push
outsl
jbe
fildll
jecxz
les
je
xor
ds
pop
sub
xor
sub
enter
xor
cwtl
mov
dec
mov
pop
jnp
test
jnp
fstpl
and
stc
shll
xchg
mov
sbb
mov
sarl
mov
mov
mov
sub
ficompl
inc
lds
push
std
xchg
xor
icebp
sub
dec
hlt
loope
in
lahf
cmc
pushf
nop
aas
pop
js
bound
int3
push
fildll
push
pop
or
and
imul
aaa
xor
fwait
pop
into
inc
xchg
addl
lds
dec
int
inc
add
addr16
xchg
sub
push
sub
cmp
dec
hlt
test
sub
sub
cwtl
lret
pop
fldt
pop
cli
sub
xchg
and
cmpsl
pop
mov
lea
and
loope
out
push
xchg
xchg
repz
add
xor
push
sbbl
adc
and
push
mov
xor
mov
loopne
pop
addb
int
mov
push
and
jbe
sub
mov
nop
fmull
fs
mov
and
sbb
jge
cmc
jl
stos
mov
inc
mov
aas
call
test
jmp
sub
xchg
cmp
xchg
xchg
data16
ja
pushf
pop
sub
inc
add
and
repnz
lret
mov
sbb
mov
cltd
movsl
std
pop
xor
fildll
push
add
ds
mov
into
aaa
mov
sbb
jns
jae
sub
in
loopne
add
add
add
add
lods
mov
push
sub
sub
mov
lods
xchg
mov
das
pushf
data16
jb
gs
inc
negb
and
shl
shlb
adcl
scas
mov
out
in
pop
test
nop
push
mov
push
jl
or
dec
cmp
jg
popf
lea
shll
inc
xor
pop
or
sub
lock
pop
add
test
sbb
fs
stos
and
pop
adc
nop
inc
lret
je
aam
jp
test
xor
mov
xlat
adc
test
lods
push
inc
ds
push
hlt
xchg
mov
sbb
adc
sub
hlt
dec
xor
ret
mov
lret
add
push
jmp
cwtl
mov
inc
ret
popf
repnz
cltd
xchg
add
inc
rcll
hlt
jl
repz
call
or
lods
pop
cmpl
cmp
fstps
faddl
out
lods
stc
ljmp
out
imul
and
push
shlb
aaa
jg
push
inc
lret
sbb
pusha
inc
push
cmp
outsl
jmp
inc
inc
aam
shr
dec
sbb
std
xchg
jmp
cld
cwtl
jg
xchg
or
cwtl
pop
mov
and
add
lock
out
in
cmpl
mov
sub
sti
iret
ja
mov
clc
pop
mov
sarb
dec
in
xchg
test
std
sub
pop
push
movsb
scas
imull
pop
ret
insl
mov
out
mov
pushf
mov
pop
out
sahf
mov
fs
gs
push
shll
xchg
adc
pop
iret
rol
ds
cmp
cli
sti
pop
adc
inc
cmpsb
mov
or
sub
xchg
data16
cmp
mov
insb
push
outsl
mov
xor
ret
mov
lret
add
push
jmp
cwtl
mov
inc
pop
mov
mov
adc
shr
aas
cs
or
lods
pop
cmpl
cmp
fldenv
adc
fsubr
push
sbb
in
xchg
sbb
and
std
adc
push
cmpsl
pop
std
and
push
shlb
aaa
mov
out
das
lea
sbbl
sbb
std
xchg
jmp
xor
rcll
adc
cltd
imull
lods
and
add
lock
out
in
cmpl
mov
sub
sti
iret
mov
loopne
fimuls
sarb
dec
in
xchg
test
std
sub
pop
push
movsb
scas
imull
pop
ret
insl
mov
jmp
icebp
jl
cmp
pushf
mov
pop
out
sahf
mov
fs
gs
push
shll
xchg
adc
add
fisubl
cmp
cli
sti
pop
adc
inc
cmpsb
mov
or
xor
xlat
push
pop
cmp
mov
or
xor
inc
sti
add
lods
sbb
xchg
addr16
and
mov
or
or
scas
sub
xor
push
adc
pop
dec
bound
jl
cwtl
add
ss
push
cmp
sti
pop
lahf
sub
scas
fstpl
dec
and
into
xchg
sbb
out
aad
mov
push
mov
jecxz
aas
jle
sub
mov
jb
imull
pushf
ds
out
xlat
mov
jae
jb
jns
mov
mov
mov
jg
sub
sti
iret
rolb
inc
jne
ds
mov
setne
stos
jp
jne
adcl
sub
sub
ret
insl
mov
in
lret
popa
mov
out
inc
aas
sbb
lret
adc
test
lods
push
shll
xchg
adc
js
lret
inc
addr16
dec
add
shl
cli
lods
mov
outsb
int3
lods
into
or
sti
xchg
adc
xor
in
pop
mov
je
push
push
shrl
cwtl
mov
inc
pop
mov
mov
daa
repnz
movsb
add
inc
lods
pop
unpckhps
outsl
loop
adc
mov
pop
cmp
fnstcw
jmp
adc
and
fs
adc
loopne
xor
dec
lret
daa
push
inc
std
and
push
shlb
jo
cli
jns
inc
out
nop
ja
inc
pop
xor
and
cmp
fcomps
call
xor
das
std
xchg
jmp
inc
ljmp
std
daa
lcall
sbb
sub
out
xlat
mov
jae
jb
jns
mov
mov
mov
jg
sub
sti
iret
mov
add
mov
setne
stos
jp
jne
adcl
sub
sub
ret
insl
mov
mov
mov
out
inc
aas
sbb
lret
adc
test
lods
push
shll
xchg
adc
add
inc
aas
cmp
mov
dec
add
shl
cli
lods
mov
outsb
int3
lods
into
or
sti
xchg
or
popl
or
jns
fcmovnb
out
je
push
cld
cs
adc
jl
xchg
cmc
hlt
mov
xchg
fimuls
jge
and
push
inc
into
imul
call
sbb
cmp
lcall
pop
loop
mov
gs
sbb
lret
adc
mov
shlb
repz
mov
or
xchg
sti
dec
xor
jl
scas
pushf
sub
add
or
pushf
xor
repz
repnz
in
scas
icebp
add
push
adcb
sbb
fidivl
xchg
popf
test
mov
pop
lcall
inc
inc
mov
xor
push
inc
fisubl
cwtl
mov
cmpb
aad
orl
adc
loopne
xor
jg
push
negl
pop
mov
orb
stc
pop
dec
adcl
mul
inc
sbb
push
cmpsb
xor
mov
inc
loop
mov
fsubl
xchg
outsb
add
movsb
cld
cs
adc
jl
xchg
or
pop
shl
sbb
aam
inc
into
imul
call
sbb
cmp
lret
pop
pusha
in
js
jg
sbb
sahf
adc
push
notb
imul
jp
arpl
cmc
fwait
and
out
sahf
mov
loopne
and
push
ret
sahf
dec
inc
jo
ljmp
imul
and
fcoms
cmp
pop
cmp
cwtl
loope
addr16
movsl
push
xchg
lcall
add
lock
pop
add
and
mov
fistps
push
pop
loop
lods
dec
testl
incl
lock
lret
out
dec
push
jo
sbb
sub
inc
or
into
xchg
sbb
mov
mov
pop
and
iret
add
nop
test
push
cltd
cltd
test
xor
fdiv
xor
push
mov
andl
push
sub
xchg
gs
stos
fisubs
pop
icebp
inc
enter
dec
sub
mov
dec
xchg
mov
in
inc
mov
xor
fistpll
test
xchg
fcmovu
popa
mov
ja
ret
inc
out
sbb
lock
movsb
les
popf
fnstcw
jo
cld
jae
push
cmp
decl
rcrl
movsl
and
cld
xor
sbb
and
pop
pop
ss
sub
popa
mov
mov
xor
push
inc
fcmovu
gs
outsb
jo
xchg
frstor
pop
pusha
je
xor
pop
jae
loop
dec
jns
add
jnp
inc
ud1
add
xchg
cltd
popa
pop
mov
adc
sbb
xor
jl
scas
pushf
sub
fs
or
hlt
imul
out
cltd
in
das
xlat
inc
cltd
xor
pop
xchg
adc
out
sahf
xchg
repz
psllq
cld
jae
push
les
mov
xchg
gs
stos
fisubs
pop
icebp
inc
enter
dec
sub
mov
inc
hlt
repnz
je
or
jmp
hlt
push
xchg
xor
fistpll
test
sahf
insb
decl
gs
loop
pop
pop
lock
sbb
lock
movsb
les
popf
fnstcw
jo
cld
in
inc
repz
mov
sbb
sub
pop
sbb
movsl
and
cld
xor
sbb
mov
insl
cmp
mul
jecxz
outsl
imull
popa
push
data16
xor
push
inc
fcmovu
gs
outsb
jo
xchg
jb
popf
scas
push
jo
inc
mov
lods
lahf
hlt
das
add
jnp
inc
ud1
add
xchg
cltd
nop
jbe
addl
inc
sbb
xor
jl
scas
pushf
sub
fs
or
hlt
out
fs
or
ret
xor
add
xor
pop
xchg
sar
add
stos
hlt
incl
inc
adc
sbb
lret
pusha
dec
lods
pop
jecxz
int
sbb
inc
push
sbb
cmc
jmp
xor
pop
pop
and
or
lret
ret
sub
mov
and
out
pop
inc
hlt
sbb
lcall
rclb
pop
scas
test
pop
ret
pop
add
add
loopne
add
add
add
add
movsb
jns
je
fistpll
out
and
fcmovb
sub
notb
push
xchg
imul
jo
cld
add
adc
jmp
push
int
sbb
push
inc
pop
cmp
outsl
ret
fdivp
push
ret
jmp
mov
pop
jecxz
loopne
notl
rcrl
lret
outsl
mov
cs
addr16
pop
stc
aad
loop
cmpsb
enter
add
mov
test
cmp
xchg
cwtl
mov
js
adc
jp
push
xchg
cld
dec
sbb
stos
outsl
ss
mov
and
dec
loope
cmp
pop
std
sub
pop
test
mov
ds
add
addb
cmp
mov
inc
lret
jl
xor
cmc
inc
imulb
iret
popl
movsl
jge
adc
xchg
jmp
insl
xchg
clc
out
mov
das
jg
push
adc
in
lret
scas
rorl
xor
push
jge
pop
xlat
xor
pop
xor
xlat
and
fs
jle
aam
pop
es
insb
mov
scas
data16
cmp
mov
mov
push
inc
aaa
jb
pop
mov
jne,pt
xlat
das
xchg
repnz
test
jle
adc
test
adc
sbb
adc
push
movsl
mov
sahf
mov
add
push
ficoms
pop
mov
adc
loope
dec
dec
test
adc
inc
cmp
xchg
out
push
cwtl
stc
or
jne
lock
imul
xor
mov
xchg
adcb
in
pop
mov
ret
cli
add
out
clc
dec
nop
ret
jge
lds
or
dec
fsubp
sbb
test
arpl
repnz
jmp
jae
divb
std
fwait
lods
sti
inc
lcall
loopne
repz
inc
stos
push
adc
pop
scas
in
pop
push
into
cwtl
inc
or
insb
int
dec
mov
adc
stos
cmp
or
test
dec
into
adc
add
lea
mov
fists
fists
pop
push
adc
je
xchg
adc
pusha
and
xchg
das
inc
stos
lret
idivb
sbb
xchg
gs
sub
push
xchg
imul
test
xchg
test
dec
pusha
insl
dec
roll
lcall
mov
lcall
push
sbb
jne
addr16
adc
jbe
fcoml
mov
inc
sbb
pop
xor
push
fcomi
mov
mov
imul
push
clc
push
push
pusha
sub
push
jle
mov
cli
or
adc
push
leave
lcall
push
inc
push
into
mov
test
push
cmp
in
pop
inc
std
push
add
insb
add
fidivl
les
lds
loopne
adc
shrb
pushf
push
inc
add
or
inc
sub
xor
jo
mov
and
push
cmc
cld
cmpsl
jle
rcrb
mov
stos
adc
xchg
out
sbb
xlat
cmpsl
xchg
jb
mov
test
and
push
xchg
add
mov
idivl
push
std
sub
mov
mov
inc
ret
push
rcrl
and
and
add
cwtl
cltd
clc
pop
or
clc
pop
or
clc
pop
or
clc
pop
or
clc
pop
or
repnz
and
rclb
sub
mov
adc
fidivl
lea
push
cmp
adc
ss
scas
out
int3
dec
insl
pop
fs
test
fdivrp
movsb
push
jmp
or
fistpll
sbb
and
or
adc
or
xor
pop
rolb
jb
imul
nop
ss
lret
pop
in
notl
sbb
xlat
fisubl
dec
push
cmpsb
xlat
pushl
movsb
movsl
jno
push
adc
test
mov
mov
es
jmp
gs
pop
jmp
sbb
sarl
cmp
add
in
loopne
add
add
add
add
jp
adcl
out
jae
jle
sub
js
mov
cmpsl
mov
out
fiadds
dec
add
addr16
sub
xchg
push
ljmp
repz
cmp
test
push
mov
cmp
lods
cli
sahf
mov
inc
mov
fstpt
jge
ficoml
jmp
int3
inc
ret
mov
scas
jge
sbb
gs
sbb
loop
lahf
out
dec
cld
dec
push
xor
rclb
cmp
aam
adc
cmp
test
pop
pop
mov
cmp
divl
mov
ljmp
lods
gs
cmpsl
mov
aas
mov
dec
jp
mov
dec
mov
inc
xor
pop
je
sbb
jge
or
pop
jb
push
out
lahf
sub
pop
xchg
xor
mull
rcl
jl
lahf
jmp
push
rol
mov
pop
aad
pop
mov
leave
jo
ret
stc
ret
mov
adc
or
push
push
and
sub
je
and
fiadds
add
inc
push
ret
and
sbb
adc
mov
or
and
and
leave
arpl
in
sbb
shrl
xor
pop
pop
into
loope
movsl
inc
xor
push
jno
adc
adc
dec
push
adc
add
out
es
sbb
mov
gs
lahf
sahf
leave
add
add
xor
cmp
xchg
dec
add
jbe
stos
pop
aad
icebp
cmp
movsb
pop
or
mov
ds
xchg
fldenv
mov
daa
ja
stos
dec
jmp
mov
cmp
sbb
cmpsl
jge
imul
jae
cmp
mov
and
and
pop
push
or
movsb
mov
sub
mov
jmp
push
mov
fistpll
ficomps
or
subl
jle
add
push
pop
add
in
loopne
add
add
add
add
mov
inc
mov
insb
adc
adc
xchg
imul
jl
jnp
adc
push
cmp
movsl
int
sbb
movsb
stos
gs
arpl
dec
mov
scas
int
nop
jbe
mov
pusha
sub
enter
dec
and
mov
and
and
push
jg
loope
fimuls
mov
sub
call
xor
mov
in
and
mov
pushl
jl
or
loopne
lcall
mov
pop
inc
movsl
mov
jne
out
jae
cmp
push
push
cmpsb
jg
test
cmpsl
xchg
ret
jns
fistpll
add
mov
pop
out
movsl
mov
ss
shl
iret
push
mov
pusha
jo
lret
sbb
mov
jb
pop
aad
stos
mov
mov
shrl
test
leave
mov
push
xchg
loope
in
add
mov
mov
aam
ret
mov
cld
inc
mov
out
adc
add
fs
push
mov
jno
lret
loope
jp
jge
aam
ljmp
ficompl
and
pop
jne
addb
adcb
xchg
insb
jp
mov
idivl
pop
pop
jbe
pop
sbbl
popf
cmpsl
mov
iret
pop
adc
loop
fistps
pop
testb
mov
cwtl
out
adc
add
fs
jae
lods
cmp
mov
xchg
push
cmpsl
add
cwtl
sbb
daa
push
and
cmp
ss
lock
je
pop
inc
xor
clc
pop
cli
jg
fstl
data16
fnstcw
jp
aad
pop
xchg
fdivrl
rolb
mov
xor
ss
mov
negl
push
cli
mov
pop
mov
std
and
ja
xchg
pop
sbb
mov
xlat
or
mov
dec
add
adc
test
ret
out
inc
outsl
out
das
mov
xor
sub
test
scas
btl
gs
and
cs
mov
dec
push
imul
rclb
dec
imul
bound
inc
jecxz
ljmp
fistps
adc
mov
pop
mov
mov
add
xchg
mov
fimull
adc
rorb
cli
xchg
rorb
push
mov
aad
jmp
fwait
pop
lds
sbb
out
div
dec
lret
xor
arpl
out
sbb
sbb
ret
pusha
jmp
mov
subl
addb
neg
test
js
inc
into
sbbl
add
jmp
cmpl
jle
hlt
pop
js
xchg
mov
inc
rol
pusha
stc
in
mov
add
in
push
push
cli
repnz
pop
ljmp
adc
adc
sub
dec
and
cltd
scas
lods
jge
shll
gs
test
cmpb
movsb
sub
lcall
insl
bound
lahf
fimull
mov
inc
arpl
pop
push
mov
gs
adc
inc
or
cmpsl
sbb
sbb
pop
xor
mov
lods
cmp
adc
sarl
adc
pop
dec
push
adc
inc
int3
in
sbbb
or
ret
lods
leave
sbb
test
cltd
loope
inc
inc
cmp
fcmovnbe
push
pop
fbld
out
or
seta
mov
test
stos
iret
icebp
cmpsl
sub
add
nop
popf
xchg
in
pop
or
test
jge
int3
dec
in
mov
lods
in
xchg
mov
ds
pop
ss
daa
push
mov
jge
cmp
push
push
dec
mov
je
xchg
popa
es
rcll
lret
jbe
pop
or
mov
outsl
adc
leave
std
mov
lods
test
sub
lods
sbb
in
movsb
pop
inc
jg
add
mov
mov
sbb
call
ss
mov
addr16
lahf
and
cltd
and
mov
ss
dec
movsb
sub
lret
or
inc
das
or
mov
sbb
lds
mov
hlt
dec
cmpsl
shll
je
jecxz
gs
jo
add
xchg
cli
aas
mov
mov
cmpsl
bound
arpl
daa
lret
adc
ss
xlat
and
mov
in
cmp
pop
loopne
arpl
movsl
mov
fwait
lods
sarb
lods
mov
cmp
mov
test
push
repz
test
cmp
lds
fs
adc
mov
adc
push
mov
cmp
cld
xlat
in
out
dec
and
mov
pusha
mov
fidivrl
aas
in
xor
int
stc
mov
mov
mov
mov
scas
sbb
cmc
xlat
adc
rolb
push
cmp
scas
nop
push
cmp
pop
adc
dec
cmpsb
ljmp
jb
inc
cmp
cmp
ret
mov
test
shrl
mov
xor
jb
mov
sbb
adc
popf
fwait
cmp
inc
frstpm(287
ret
mov
jo
je
imul
add
dec
dec
cmp
movsb
mov
add
sub
into
mov
iret
sti
add
scas
fneni(8087
cmp
stos
fisttps
int3
pop
popf
jmp
loopw
loope
fucomi
mov
mov
rclb
ret
rcrl
mov
aaa
add
push
mov
andb
xor
mov
add
mov
mov
mov
xor
jns
repz
mov
xadd
push
push
cmp
pusha
pop
pop
dec
call
fisttpl
dec
fprem
push
cmp
stos
jne
and
shl
in
xchg
adcb
mov
jp
push
jne
idivb
xor
pop
xor
lock
sbb
scas
mov
mov
fcmovnb
adc
faddl
ret
cmp
sub
je
push
xchg
and
out
sbb
xor
dec
mov
sahf
add
sahf
and
fdivr
adc
xchg
insb
test
or
cmp
push
mov
pusha
stos
xchg
xchg
out
fadd
inc
or
cmc
sub
jo
inc
loopne
into
clc
movsl
lds
dec
or
or
pop
dec
mov
jbe
and
rcrl
jbe
mov
fdivs
inc
sbb
inc
leave
lock
xor
mov
imul
mov
js
sub
addl
shrl
test
negl
clc
aad
pushf
mov
ss
jg
jne
or
push
adc
in
push
sbb
pusha
idivl
add
cwtl
pop
dec
lret
fidivrs
imul
cmp
aaa
push
jae
addr16
xor
flds
add
fsubrs
dec
stc
dec
fsubl
leave
mov
inc
mov
or
stos
push
inc
and
in
adc
scas
cmp
jne
xchg
aaa
cmp
sub
pusha
xor
outsb
add
sub
cli
jge
and
out
dec
in
int3
inc
clc
pop
popa
sub
nop
mov
mov
mov
data16
or
stos
jge
xchg
pop
lret
test
xor
push
lahf
repnz
lods
sti
sub
subl
in
daa
aam
fs
jmp
test
push
xor
lods
mov
ss
shrb
jp
mov
push
or
mov
xchg
jmp
sbb
in
outsb
xor
test
rorb
pop
cld
cmp
subb
lock
or
test
stos
cmp
sub
fistpll
sbb
dec
push
add
lret
mov
outsl
into
sub
and
movsb
fs
push
pop
dec
roll
and
mulb
mov
xchg
std
test
or
fmuls
xor
fwait
adc
in
in
cltd
and
lcall
xor
mov
pop
aad
mov
popa
push
movsl
ljmp
aad
xor
pop
dec
mov
scas
arpl
sub
aas
xchg
sbb
mov
mov
leave
hlt
imul
xor
mov
mov
lea
cltd
pop
cs
inc
jns
push
icebp
in
int
lods
dec
add
xchg
mov
ret
xchg
fisttpl
lret
push
std
jmp
mov
subb
cmp
out
iret
enter
jge
push
push
repz
push
call
mov
repz
xchg
and
mov
inc
push
cmp
mov
lea
inc
jbe
mov
xor
adc
jg
jnp
loop
popf
outsl
pop
imul
rcrb
shll
int
adc
inc
xchg
lods
and
jnp
mov
or
out
mov
xchg
mov
inc
movsb
insb
bound
add
iret
ljmp
mov
mov
xor
aam
sub
dec
add
mov
nop
xchg
or
daa
lahf
or
shrb
out
sbb
fs
stos
pop
jne
outsl
mov
xchg
mov
pop
testl
fs
fldt
in
push
xchg
pop
add
xchg
shlb
rcl
xchg
stos
in
push
inc
pop
adc
xchg
mov
aas
lret
lcall
pop
cmpl
les
pop
adc
or
ja
jp
pop
in
in
outsb
aam
ss
gs
add
xchg
dec
and
mov
push
sbb
mov
xor
jl
lcall
push
add
xchg
lods
sti
mov
into
icebp
cmp
repnz
xchg
int3
lret
loopne
psrlq
daa
lret
repnz
pop
iret
mov
ljmp
xor
jecxz
outsb
sarb
mov
aam
notl
cmp
mov
or
mov
fwait
mov
push
stos
mov
xchg
push
scas
sarb
add
aad
inc
lahf
pop
sbb
test
aas
je
sub
xchg
jne
or
push
fldt
test
hlt
pop
rorl
sub
and
cmc
adc
fildl
rorb
aas
dec
orb
das
or
mov
xor
and
call
ja
adc
jmp
out
fimuls
cmp
dec
mov
popa
outsb
mov
outsl
cmp
loope
xor
andl
jo
and
mov
xlat
and
sahf
fstps
outsb
jae
fidivrl
mov
and
pop
data16
pusha
dec
sub
fwait
pop
add
push
sub
icebp
pop
pop
mov
aam
imul
enter
imul
pop
ret
leave
mov
mov
push
imul
xchg
cmp
cmpsb
or
add
inc
jae
sub
pop
jo
lcall
ret
lcall
jmp
cmpsl
decb
ret
or
sbb
pop
iret
movsl
mov
pop
call
aad
frstor
mulb
inc
addr16
gs
das
xlat
or
test
mov
xor
jg
sbb
decb
pop
mov
mov
lock
int
push
addl
adc
mov
orl
imul
lea
jbe
or
xchg
xchg
lret
movl
ficompl
xchg
xchg
movsl
in
repz
jmp
and
call
xchg
popf
jb
push
mov
cs
mov
jg
sub
mov
cltd
jge
lret
pop
adc
enter
push
jle
or
movl
daa
adc
pusha
or
enter
lret
xchg
imul
push
and
std
sub
jbe
mov
pop
jae
or
dec
fisttps
movsb
addb
mov
pusha
xor
push
fadds
sub
ja
xchg
adc
pushf
rcr
mov
push
sbb
and
mov
jno
scas
sub
push
mov
ret
mov
mov
js
push
jg
add
xlat
jp
movb
out
movsb
lret
js
mov
jg
call
or
inc
dec
repz
lcall
ja
aas
jmp
sbb
pop
inc
test
repz
mov
add
call
or
or
mov
xor
push
jecxz
test
sub
imul
into
rcrb
cltd
mov
add
xchg
push
scas
fidivl
std
in
xlat
sub
mov
in
mov
lock
pop
mov
es
movsb
dec
inc
aaa
push
push
sahf
aas
test
out
idivl
xchg
sbb
xchg
xchg
push
aaa
adc
std
push
jb
lods
dec
lods
inc
lahf
add
je
outsl
and
sub
mov
or
sarl
or
rorl
pusha
mov
into
icebp
dec
mov
sub
jo
sti
sub
sarb
outsb
roll
xorb
sbb
inc
sub
add
push
add
pop
aaa
and
in
sahf
or
lds
jge
jo
adc
and
or
ss
mov
bound
mov
jmp
out
xchg
or
adc
mov
pushf
fimull
jnp
jne
sbb
loopne
pusha
fnstsw
cmc
jge
test
fcmovbe
dec
jne
dec
pop
ja
stos
leave
fbld
cltd
inc
cwtl
xchg
mov
xor
jno
push
int3
cmpsl
popa
inc
neg
daa
les
std
jne
jl
jo
sub
adcb
pop
dec
aas
cmp
sub
imul
sub
jno
jae
push
lea
popf
daa
sub
or
or
xchg
cmp
dec
test
add
adc
dec
or
int3
jbe
addb
ds
stos
sub
pop
add
lock
jno
add
mov
add
das
fs
cmp
push
sar
cmp
out
daa
sub
or
scas
pop
shlb
add
add
jge
push
add
pushf
ret
dec
jne
dec
repz
pop
xor
dec
pop
repz
mov
cmp
loop
adc
sbb
pop
cmp
in
fs
test
jge
jo
aam
adc
jae
shl
mov
das
jno
cltd
xchg
sub
je
lea
daa
bound
jmp
push
mov
pusha
and
inc
lods
movsl
imul
dec
mov
ss
outsl
xlat
pop
jl
inc
xchg
cld
inc
loope
test
push
cmp
jge
jns
jg
icebp
fnsave
xchg
jg
sbb
sub
pop
ret
sub
fidivs
jb
rcrb
sbb
rorb
cmc
mov
in
jb
iret
call
cmp
add
aas
dec
mov
in
pop
and
jns
jo
and
mov
or
std
cmp
je
decl
add
push
out
in
sub
stos
xor
cmp
pop
fdivl
sbb
test
push
jnp
hlt
add
aaa
insb
push
sub
mov
push
sahf
or
dec
stos
sbb
mov
or
lahf
push
adc
call
mov
pop
sbb
mov
imul
add
sbb
sahf
fld
xchg
lcall
jge
cmp
lret
mov
cmc
ror
push
mov
cmc
sub
and
movsl
in
popa
rorl
fwait
jno
aas
lods
inc
loopne
aad
aaa
mov
xchg
xor
dec
pop
iret
lock
lahf
jecxz
sbb
push
xchg
mov
inc
or
popa
ss
mov
movzbl
push
jge
loop
adc
pop
daa
pop
test
int
mov
dec
sub
jns
add
loop
fadd
arpl
movsl
mulb
cmpsl
int3
add
adc
xchg
bound
scas
fsts
jns
ss
scas
outsb
popa
sub
xchg
popf
pop
aad
ficoml
test
dec
ds
or
xchg
xchg
jno
xchg
add
adc
xor
jge
out
out
out
mov
cs
cmp
ja
rclb
loope
pop
insb
movsl
imul
in
and
mov
fwait
mov
lods
or
mov
daa
arpl
in
and
pop
inc
cmp
in
fwait
jno
xlat
in
stos
ret
aam
mov
aam
dec
sub
add
test
test
push
cmp
fwait
aam
jb
xchg
and
mov
mov
add
js
inc
fcoms
enter
adc
in
xchg
leave
jnp
push
test
jmp
aaa
hlt
or
sub
pop
and
xchg
scas
mov
dec
mov
clc
xchg
fs
cmc
sub
cmpb
lds
and
sbb
adc
mov
ds
inc
push
sub
jo
sarl
scas
and
and
pop
loop
jbe
pop
jl
call
lods
mov
jb
and
mov
pusha
inc
mulb
xor
scas
mov
add
adc
mov
xchg
add
jo
inc
pushf
lods
outsl
lret
adc
sbbl
cmc
cwtl
cmp
les
in
xchg
pop
stc
pop
mov
out
int3
inc
jne
ret
outsb
enter
mov
jle
stos
cmc
inc
shlb
mov
xor
je
int3
sub
dec
cmpsb
inc
sub
mov
aam
pop
scas
push
jno
pop
sti
inc
fistpl
sbb
dec
cmp
mul
push
sub
cltd
popf
mov
jle
sub
mov
push
out
aas
test
fistps
les
sub
jnp
lods
fisttpl
cmpsl
outsb
push
lock
lcall
adc
sub
out
xor
fdivrs
add
fidivrl
dec
add
cs
mov
pop
xor
sub
cmc
inc
add
xor
ret
lock
push
sarl
jp
jecxz
gs
fdivr
cmp
sahf
es
jge,pt
jp
lods
andb
xchg
cs
mov
push
sub
push
xchg
fisubs
jmp
out
sbb
sub
std
fcoml
arpl
cmp
rcrl
mov
repz
out
ficoms
add
dec
rcll
pop
sub
dec
fistl
push
xchg
mov
fisttps
hlt
inc
arpl
mov
fsubs
pop
sub
js
out
jg
mov
flds
cmc
jo
aam
sbb
shl
popf
sbb
popf
pop
and
cs
mov
dec
pop
cli
mov
mov
dec
leave
ret
stos
scas
mov
nop
out
inc
sub
jb
dec
cmpsb
or
stos
mov
dec
jmp
les
inc
pop
pop
push
fsubp
mov
push
sbb
scas
mov
mov
in
cmp
arpl
insb
and
push
in
mov
sbb
push
push
adc
sahf
jnp
mov
inc
test
sbb
push
outsb
xchg
push
mov
in
test
push
testb
xchg
xor
xchg
repnz
pusha
sarl
xchg
sbb
inc
mov
ds
mov
inc
mov
imul
pop
lahf
jg
fcoml
fisttpl
push
push
mov
pop
pop
ret
sbb
jg
pop
addb
mov
xor
into
fdivs
cltd
jg
gs
imul
and
mov
and
cmp
or
jb
sub
xor
and
mov
jns
sarb
mov
and
ss
les
scas
and
inc
fstpt
fbld
mov
daa
in
xor
inc
inc
jno
mov
fstps
mov
lcall
in
mov
ja
dec
in
out
push
add
daa
jecxz
xorl
jb
mov
les
pop
cmp
mov
sbb
sub
mov
dec
stos
pop
aaa
shl
push
test
loope
xor
add
xchg
aaa
movsb
aad
inc
mov
rorl
sbb
int3
out
adc
into
lret
add
insb
test
sbb
lcall
pop
repnz
cmp
mov
gs
fucomip
decl
addb
sub
mov
or
rcrl
std
out
jnp
cmp
jbe
scas
dec
or
std
stos
je
jnp
adcl
out
ljmp
mov
cmp
mov
sbb
insb
sahf
shlb
pop
outsb
out
cmpsl
inc
pop
and
sbb
imul
or
jno
or
pop
dec
or
fwait
dec
jae
sbb
or
add
loopne
add
add
int3
xchg
out
sti
popf
rclb
xchg
jmp
rcrl
cmp
jp
dec
cmpsl
andl
je
xchg
sbb
mov
test
inc
fidivl
iret
mov
push
iret
pop
stos
fisubrs
xlat
mov
pop
cli
dec
sub
push
sbb
or
lret
push
pop
mov
push
inc
adc
shl
lahf
lcall
fistpll
and
dec
mov
mov
mov
dec
cwtl
je
fisubs
je
or
mov
sbb
ds
mov
lcall
insl
mov
jl
inc
cwtl
add
inc
or
sub
adc
loop
shrl
xchg
daa
mov
mov
jp
push
rolb
cld
fst
nop
orl
xor
das
testb
cli
inc
gs
in
mov
insb
jb
push
sub
cltd
xchg
movsb
cli
sahf
pop
rcrl
dec
mov
mov
popa
shrl
cmp
mov
cld
iret
xor
divb
mov
int
out
test
xor
outsb
xchg
mov
in
sbb
mov
cmpsl
fcompl
sti
dec
stos
jge
adc
xor
jle
hlt
cmpsl
jae
xchg
mov
mov
dec
mov
push
cmovp
imul
imul
mov
push
and
or
stc
sti
xchg
out
mov
std
outsb
dec
sbb
out
inc
jnp
leave
aam
and
popa
jno
cmp
ret
out
add
xchg
add
dec
pop
nop
xor
push
or
das
out
xor
mov
inc
enter
cmpsb
sbb
or
mov
into
inc
fisubrl
lret
aaa
out
lcall
scas
pushl
ja
jbe
jl
sub
adc
test
roll
popf
lods
outsb
jmp
jbe
jge
add
data16
enter
dec
pop
jecxz
inc
add
mov
xchg
push
inc
not
pop
add
pushf
fsub
ret
pop
clc
push
test
cli
jp
test
fidivrs
out
popa
push
stc
mov
aad
xor
out
jle
mov
ficomps
jno
scas
sub
or
dec
flds
arpl
xor
lods
leave
xchg
data16
dec
lret
icebp
daa
scas
cmp
inc
movsl
xor
push
sbb
arpl
fcmovnu
fwait
push
push
mov
or
out
inc
aaa
into
test
cltd
jge
lock
xor
movsl
inc
iret
add
aam
adc
ja
cmp
test
into
mov
add
fstpt
into
and
sbb
sub
scas
cmpsl
ds
mov
cli
mov
push
or
jmp
or
aad
fisubrs
jmp
les
xchg
mov
mov
cs
shrb
in
mov
push
mov
out
aaa
mov
xor
test
outsb
xor
xchg
insl
xchg
sbb
adc
aaa
jns
imul
and
jle
test
mov
fisttps
aaa
cmp
scas
into
int3
ret
dec
pop
xchg
cli
das
mov
lea
and
ss
les
jle
xor
and
dec
xor
popa
jg
out
int3
pop
dec
vmovsldup
push
dec
fucom
cmc
adc
inc
cmpsl
pop
mov
sub
cmc
aad
jnp
xorb
mov
or
call
xor
out
mov
fbld
cmc
or
xorb
xchg
pushf
pop
lods
or
adc
addr16
stos
cmpl
lcall
rorb
int
xor
or
stos
mov
movsb
mov
lock
sbb
cli
neg
jns
xchg
cmp
cmp
int
xor
sahf
loopne
push
int3
mov
push
call
test
jbe
lock
stos
push
mov
cld
or
add
lcall
sub
add
pop
mov
fisubl
ja
rcll
pop
xlat
bound
mov
test
gs
mov
xchg
inc
repnz
inc
or
mov
insl
jg
addr16
push
andl
adc
test
mov
add
jl
imul
inc
jl
jo
cmp
insb
out
arpl
adc
rcl
fwait
lret
mov
fistps
pop
shrl
mov
in
push
inc
inc
mov
pop
test
je
scas
xor
fsubrs
push
and
repnz
icebp
mov
test
aaa
and
je
out
cmc
std
pop
add
cmp
jg
cwtl
loope
xorb
dec
scas
lock
loope
inc
andb
sub
push
out
in
out
cmp
jnp
loope
mov
stos
jmp
lret
ret
xchg
xor
ret
cmp
out
icebp
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
das
into
add
jno
add
in
loopne
add
add
add
add
add
add
xchg
ret
mov
fcompl
andb
repz
sbb
cmp
loopne
scas
mov
cmp
mov
jns
mov
pop
leave
leave
fs
stos
movsl
je
xchg
xchg
repz
test
xchg
dec
mov
loope
rcll
shr
es
sbb
ss
cmp
negl
adc
xor
sbb
add
cmc
rorl
aaa
push
jp
das
inc
inc
mov
cmp
or
lods
push
lods
inc
jne
cmpsb
dec
inc
pop
shl
push
mov
adc
mov
orb
jb
jne
sbb
adc
mov
push
cmp
movsl
cmc
sbb
aam
push
mov
and
nop
mov
and
into
lock
pop
lahf
fistl
sahf
adc
dec
test
out
loope
pop
add
sub
mov
and
dec
hlt
fucomip
fdivl
ja
iret
adc
ret
stc
in
and
dec
and
mov
dec
sub
or
fldt
mov
out
and
add
testl
loope
push
xor
inc
std
cmp
dec
cmp
hlt
mov
cmp
jl
arpl
push
add
loopne
rolb
sbb
lahf
cmpsb
xchg
insl
xchg
sbb
iret
and
fisttps
fnstenv
mov
dec
xor
sub
xchg
inc
pop
divb
jae
inc
mov
fcoml
ss
xor
jle
inc
faddl
fs
andl
repz
jno
or
ror
repz
sub
pop
pop
xor
xlat
gs
rol
test
rcll
mov
push
test
jb
jg
sbb
clc
inc
js
add
mov
dec
out
outsl
adc
ljmp
ljmp
dec
icebp
sbb
loope
scas
popa
icebp
shlb
lods
int3
mov
hlt
cld
repnz
cmc
aad
test
arpl
dec
inc
inc
push
cmp
sti
outsb
jae
xchg
js
scas
iret
insl
xor
jns
cmc
cmp
clc
cltd
inc
pushf
jg
cmpsb
pop
xchg
aas
es
or
jns
scas
cmpsl
int
mov
cmp
mov
pop
mov
ja
js
jg
adc
mov
sbb
fwait
andb
in
loop
mov
dec
add
rcrl
lret
mov
ror
scas
pop
adc
es
bound
out
test
push
rcll
cmpsl
shr
push
lret
cwtl
pop
adc
out
sub
pushf
loopne
bound
mov
inc
inc
jnp
test
out
inc
adc
sbb
ja
push
xor
dec
inc
sahf
stos
jo
inc
push
adc
fucom
add
aad
shl
and
mov
add
in
sti
movsl
jge
push
icebp
movb
jns
in
arpl
mov
mov
push
lahf
inc
test
dec
inc
mov
test
or
push
mov
or
cs
cmp
in
inc
mov
and
lahf
push
subl
cmp
mov
nop
cs
pop
jecxz
push
leave
scas
je
add
xchg
adcl
inc
ds
je
push
mov
insl
in
in
mov
add
mov
fdivrl
int3
dec
nop
and
mov
dec
arpl
dec
andl
xchg
mov
push
xchg
aas
push
jb
int
jb
mov
inc
or
jne
cmc
mov
inc
adc
cmp
ss
inc
push
ljmp
in
fisubrs
fisubs
adc
in
fisubrs
fisubs
adc
in
fisubrs
fisubs
adc
in
fisubrs
fisubs
adc
in
fisubrs
fisubs
adc
in
fisubrs
fisubs
adc
in
fisubrs
fisubs
adc
in
fisubrs
fisubs
adc
in
fisubrs
fisubs
adc
in
fisubrs
fisubs
adc
in
fisubrs
fisubs
ror
int3
xor
int3
xorl
call
stc
push
push
lcall
shr
and
push
add
dec
mov
cmp
add
add
loopne
add
incl
add
add
or
outsb
cmpsl
xchg
insb
nop
jp
fs
sbb
push
push
dec
lahf
jns
pop
push
popa
and
stc
mov
aaa
stos
mov
inc
adc
adc
or
xchg
mov
xor
mov
and
sbb
add
push
xchg
adc
fimull
pop
call
xlat
in
mov
jl
rcl
mov
data16
fldenv
dec
pop
cs
imul
mov
add
dec
mov
ss
mov
add
lea
xor
xor
bound
ljmp
out
cld
iret
popl
push
cmp
lahf
jge
movsl
andps
xor
insl
mov
push
out
xchg
sbb
inc
inc
in
mov
loopne
add
incl
add
add
jmp
test
iret
aad
mov
jne
cld
fdivp
pushf
cmp
mov
dec
add
cmc
pop
cmp
jg
jb
dec
hlt
stc
fcmove
push
cli
and
jmp
imul
mov
adc
sub
mov
icebp
ds
push
add
sbb
hlt
xchg
addr16
in
cwtl
insb
mov
in
xorps
dec
fwait
aad
stos
dec
loopne
mov
mov
pop
sub
stos
sbb
nop
cli
inc
inc
lods
push
add
mov
mov
jnp
push
mov
leave
xchg
lock
ds
mov
dec
in
cmp
lock
push
mov
out
push
test
jl
and
add
add
loopne
add
incl
add
add
ss
lods
call
dec
add
jecxz
pop
fldl
dec
pop
push
inc
mov
out
adcl
repz
and
and
mov
out
pop
push
gs
sbb
mov
or
sub
shll
adc
sub
shll
adc
dec
mov
mov
stc
mov
mov
xchg
addr16
pop
add
mov
xor
inc
ret
mov
mov
mov
or
mov
repz
imul
call
ret
add
add
loopne
add
add
add
add
or
mov
cmp
xchg
inc
xor
xchg
adc
out
and
mov
movsl
jmp
or
into
pop
orb
sub
fimuls
cmp
js
pop
sbb
fwait
mov
sbb
cmp
leavew
dec
inc
jb
leave
call
sub
stos
pop
xor
fucomi
lret
xor
add
or
and
scas
fs
pop
lret
xor
ret
push
rcrb
dec
sub
adc
adc
mov
dec
loope
pcmpeqw
clc
into
insb
adc
fs
leave
out
iret
pop
and
fstpl
pusha
mov
inc
in
mov
mov
mov
jnp
sahf
inc
sub
sub
lock
and
and
and
ffree
pop
test
and
das
and
scas
push
inc
add
jmp
dec
scas
movsb
ljmp
ret
das
dec
call
fldenv
ljmp
sbb
adc
fisubs
or
iret
xchg
mov
pop
mov
enter
jmp
jp
arpl
cmpsb
inc
mov
fisubrs
in
out
push
aas
test
outsb
mov
psubb
das
cltd
cmp
pop
cmp
ror
push
pop
add
je
xlat
mov
push
outsb
jae
fistpl
jl
ror
inc
xor
or
jmp
mov
mov
in
add
mov
int
sahf
sbb
pop
std
bnd
orl
sti
adc
inc
jl
adc
popf
xchg
cmp
jmp
push
clc
pop
fdivl
jno
sub
or
ret
rorl
int
fs
notb
push
and
into
cld
mov
mov
shll
lea
in
push
jg
pop
xor
pop
call
jge
bound
push
xor
test
mov
push
shll
mov
in
cmp
cmp
and
jp
cmp
aam
inc
ret
sbb
test
movsb
pop
xchg
gs
mov
out
jae
pop
test
inc
cmp
cmp
lock
enter
mov
inc
shlb
jl
fldt
les
fwait
inc
mov
push
icebp
stos
int3
mov
mov
and
cltd
fiadds
inc
insl
std
rorl
les
imul
sub
jnp,pt
mov
ja
xor
or
mov
xchg
hlt
mov
sbb
gs
ucomiss
jo,pt
nop
dec
xor
cmp
lahf
sub
in
xchg
xchg
jle
ljmp
mov
call
add
push
xchg
add
cltd
inc
push
repnz
fs
divb
sub
je
and
lea
and
xchg
gs
aam
push
xchg
inc
xchg
mov
add
insb
cmp
inc
les
push
mov
pop
loope
mov
dec
icebp
subl
mov
popa
std
fiaddl
aad
mov
push
movsb
push
jae
aas
mov
popf
mov
fwait
mov
sbb
mov
or
push
adc
cmp
aaa
lret
loop
cwtl
test
aam
sti
mov
and
jb
lret
mov
lret
cli
addr16
cmp
pop
imul
mov
mov
test
sub
mov
xchg
aam
and
sti
lds
ret
add
popa
mov
mov
ljmp
xchg
sahf
insl
xchg
enter
xchg
rcl
xchg
loope
jae
mov
adc
lea
cmp
pop
inc
sti
fs
push
jae
cltd
jne
ja
in
add
jns
test
add
in
loopne
add
add
add
add
cmp
add
ret
lret
scas
shlb
push
ds
xor
xchg
vmovsldup
lods
sub
cmp
in
xor
std
cs
ljmp
fcmovb
insl
addr16
sub
or
add
cmp
clc
psubusb
mov
scas
xor
inc
sub
cmp
pop
xchg
adc
jle
sbb
test
jecxz
sub
push
cmp
jmp
popa
out
cltd
fidivrl
sbb
sarl
scas
mov
adc
pop
int
imul
xchg
or
nop
clc
fsts
mov
and
push
jg
sbb
jg
pop
arpl
lahf
xor
adc
inc
inc
mov
out
jo
sub
gs
stos
cmp
inc
pop
adc
sub
test
add
aaa
mov
ret
cmp
stos
fldenv
es
vpsubq
loope
jns
mov
jp
push
neg
loope
jge
dec
into
cmc
sbb
hlt
sbb
in
popf
in
aaa
sub
stos
aam
jmp
aaa
xchg
push
dec
popf
inc
mov
dec
mov
pop
add
and
cmp
cmp
ret
out
insl
outsl
test
xchg
xchg
mov
xor
and
mov
jecxz
dec
and
pop
popa
rol
cmp
mov
or
sbb
cwtl
int3
mov
jle
add
scas
scas
and
add
xchg
mov
outsb
dec
mov
sbb
xor
add
in
loopne
add
add
add
add
mov
data16
add
inc
aaa
shrl
test
lahf
jp
bound
out
test
sar
or
pop
xor
enter
mov
pop
dec
and
jg
mov
gs
xchg
cmp
addr16
loopne
lret
dec
mov
pop
jg
es
mov
mov
adc
or
sbb
popf
lods
movsl
fimuls
or
data16
js
jmp
cmp
les
mov
enter
mov
js
pop
test
iret
int3
add
mov
or
stos
mov
loop
sub
data16
sub
inc
mov
xlat
xorb
leave
test
loopne
cmpb
femms
or
je
lock
stc
bound
lods
mov
sub
jnp
cwtl
repnz
adc
testl
mov
fadds
dec
sbb
inc
or
mov
or
xchg
xor
mov
pop
dec
in
and
js
idivl
dec
inc
decb
push
leave
sub
sub
sub
push
or
shrb
mov
jno
pop
cli
jne
mov
daa
shlb
xor
push
cmp
sahf
arpl
sub
scas
jo
mov
cld
lea
mov
lods
inc
add
test
out
iret
cmc
xchg
and
mov
std
shrb
mov
ds
pusha
cmpsl
mov
or
mov
popa
mov
shll
lcall
jne
imul
push
cmc
pop
dec
inc
jge
sbb
clc
rcrl
dec
mov
jg
or
or
sub
into
sub
push
fnstenv
xchg
mov
addr16
adc
rorl
push
lcall
cmp
ficompl
cmc
bound
popf
fnstenv
int3
or
pop
cmc
add
daa
ret
int
ret
push
push
cmp
cmp
aam
mov
ret
in
push
bound
adc
push
xchg
icebp
cmpsb
mov
and
or
in
lods
imul
jp
lock
in
mov
sub
or
loope
ret
cmpsl
fdivrl
fisttps
jno
adcb
push
ret
fnstsw
cmpl
gs
xchg
icebp
cmp
imul
xchg
pop
push
int
or
out
loop
popf
fdivrl
shlb
cmpsb
pop
imul
enter
mov
cmp
imul
push
xchg
jne
mov
nop
jl
cli
mov
fwait
lds
cmp
pop
pop
and
in
addr16
mov
xchg
loopne
push
lock
lods
push
inc
call
nop
aas
push
sbb
lea
jbe
ss
or
and
jno
or
and
in
pushl
add
add
add
loopne
add
add
add
add
test
ds
lods
inc
cmp
dec
mov
cmp
sub
cmpsb
sbb
div
lret
outsb
or
out
arpl
mov
or
sub
pop
adcb
mov
jb
movsl
sti
pusha
cmc
pushf
fstl
mov
cmc
push
adc
jge
cmp
mov
add
pop
mov
out
push
test
fisubs
mov
into
call
clc
loope
xor
sub
xchg
jno
sub
lret
or
pop
jle
push
movsl
sahf
and
adc
inc
out
xchg
push
fsubrl
shll
std
mov
fisttps
arpl
repnz
mov
outsl
pop
in
dec
xlat
jg
adc
out
and
pop
mov
jp
lock
outsb
stos
mov
xchg
sbb
pop
fstl
push
inc
nop
adc
cli
cmc
outsb
or
lret
into
inc
out
lcall
ss
xchg
adc
aaa
imul
dec
ljmp
jnp
outsb
and
dec
xchg
mov
sbb
push
outsl
xchg
icebp
add
and
jbe
push
xchg
fdivrl
cmpsl
jb
cmpl
xchg
push
xchg
ret
mov
jbe
jbe
negl
xor
sarb
movsb
mov
das
fwait
and
fidivrs
ja
mov
push
cmp
xor
das
cmp
mov
push
dec
add
cld
sbb
mov
pop
std
inc
or
cmp
xor
pop
jb
out
test
push
pop
outsb
lahf
out
push
mov
pop
jae
sub
fstpl
jne
jg
pop
pop
sbb
jmp
inc
sbb
lds
aas
inc
cld
mul
aam
add
aaa
test
popa
cli
xor
sbb
adc
movsb
xchg
nop
xor
xchg
dec
in
xor
call
testb
pop
jge
mov
fstpl
xchg
mov
jl
and
imul
lahf
xchg
adc
lea
cmpsb
add
xchg
loop
cwtl
jae
add
aad
pop
jo
adc
mov
pop
add
sbb
adc
xchg
stos
cmp
movsl
adc
push
sti
outsl
aas
in
ficoms
dec
test
loope
arpl
jae
ds
push
lret
or
push
or
mov
out
push
xor
in
aaa
mov
pusha
ja
sub
pusha
sbb
inc
shrb
fwait
aaa
lods
stc
sbb
nop
jne
mov
and
loopne
jo
mov
push
fstpt
cmpsb
into
mov
lods
dec
mov
negl
add
popa
in
pop
jecxz
cli
stos
loopne
ja
pop
dec
mov
enter
jl
popf
pop
mov
push
mov
lds
movsb
cli
pop
outsl
test
enter
enter
arpl
loope
xchg
or
addr16
jl
push
adc
and
stc
pop
or
mov
xchg
pushf
add
and
add
js
mov
fcmovbe
push
inc
fiaddl
xchg
stos
sub
adc
or
cmp
scas
shl
rep
stc
pop
fadds
push
inc
inc
push
aas
stc
leave
xor
inc
mov
adc
or
icebp
sahf
jno
adc
leave
jnp
loop
cmp
sbb
movsl
add
orl
cmc
insl
dec
push
outsb
mov
xchg
inc
negl
xchg
out
popa
cmp
jbe
call
pop
jo
jo
call
fwait
dec
jae
sbb
lds
dec
or
inc
mov
push
mov
ret
mov
dec
roll
fnstcw
rcr
sub
scas
sbb
pop
loop
inc
mov
jae
adc
cli
xchg
jo
adcl
fildl
sbb
ljmp
ljmp
pop
loopne
mov
flds
push
repz
subb
cmp
jns
cmp
test
leave
mov
popf
jle
out
pop
cmp
test
fcoml
pop
fisttpll
iret
imul
mov
pop
dec
outsb
insl
adc
out
mov
mov
xchg
fidivl
or
and
inc
cmpl
xchg
mov
add
sub
jne
lods
mov
lods
mov
and
mov
xor
cmpsb
xchg
out
stc
mov
and
push
repnz
dec
mov
push
dec
leave
into
addb
push
std
ds
inc
ret
enter
add
loop
imull
mov
in
sub
push
adc
and
xchg
sub
out
add
push
sbb
mov
jecxz
mov
stos
lahf
mov
js
stos
sub
int3
test
push
mov
jae
sub
adc
into
frstor
dec
dec
sub
pop
insl
andl
les
lret
ljmp
push
adc
arpl
test
mov
pop
pop
in
jmp
and
in
and
js
movb
pop
popf
faddl
fidivs
cli
push
or
mov
and
pop
addr16
inc
out
dec
mov
ficoml
lcall
xchg
xor
mov
adc
push
imul
lods
in
int
outsl
and
mov
aad
sarl
mov
mov
sar
adc
mov
push
lea
xchg
sar
adc
cmp
sahf
or
cmpsb
or
fiaddl
push
cmp
xor
jecxz
jp
mov
addr16
sub
push
or
push
iret
adc
sahf
jae
xchg
mov
add
and
xchg
es
cmc
inc
stc
push
vpcmpeqd
fistps
mov
jge
inc
inc
ds
jno
and
daa
fldt
popa
sub
int
sub
xchg
lahf
and
mov
cmp
lods
rcl
cmp
rorl
sub
stc
push
in
inc
mov
add
test
in
pop
fdivs
fdivp
push
or
stc
mov
or
loope
shlb
ja
icebp
cwtl
push
cmp
mov
mov
xor
mov
ss
scas
int
jnp
sbb
mov
sbb
movsb
dec
ret
pop
mov
mov
or
lods
mov
jb
inc
cwtl
ret
inc
adc
or
call
xchg
cld
adc
xor
lcall
movsl
xor
or
lret
mov
mov
or
ficomps
lock
movsb
dec
push
or
sbb
fimuls
dec
jb
jge
adc
pusha
outsb
cld
add
jp
add
subl
mov
cmp
cmp
push
enter
xlat
lods
xor
pop
jnp
jns
das
dec
test
gs
fnsave
cmpb
scas
nop
add
mov
cmp
testb
les
notl
shll
jo
dec
decl
mov
jge
pusha
fbld
inc
jns
dec
test
cmp
mov
xchg
and
adc
cmpsb
sub
and
pop
pop
inc
int
orb
out
scas
cli
insb
fisubrs
xor
cwtl
and
pop
xor
mov
je
mov
mov
inc
fiaddl
push
mov
lds
mov
leave
dec
adc
leave
mov
xor
add
pusha
shrl
mov
iret
flds
outsl
fucomi
cmp
push
cltd
cmp
sbb
mov
bound
xchg
add
fisubrl
add
add
loopne
add
incl
add
add
lea
fidivrl
pop
mov
loopne
jno
cld
xor
cld
and
in
fidivl
jg
cmp
mov
repz
out
outsl
fnsave
jae
ss
rclb
sbb
pop
mov
loopne
es
add
out
and
or
ds
and
bound
xor
xor
loope
scas
repnz
jbe
mov
mov
das
jg
xlat
test
mov
pop
ret
pop
add
add
loopne
add
add
add
movsb
mov
xchg
sbbb
ds
cmp
mov
jg
dec
mov
clc
mov
outsl
les
cmc
pop
in
lret
cmp
clc
popa
shlb
mov
cmpsl
xchg
iret
pop
into
mov
sbb
adc
fwait
js
cltd
fidivl
sarl
mov
add
add
loopne
add
incl
add
add
xchg
les
clc
push
out
fwait
add
test
sbb
pop
lds
pop
jmp
pop
outsl
mov
adc
push
outsl
lret
xchg
ficompl
sub
pusha
mov
xchg
rcrl
ret
popa
add
add
loopne
add
decl
je
mov
mov
arpl
pop
ss
loopne
or
fucomi
mov
or
or
dec
xchg
xor
je
cs
lea
ja
pop
ret
jl
cmp
mov
and
sub
push
scas
mov
aas
cs
cli
or
sub
test
popa
dec
adc
adc
and
cmp
jne
dec
repz
jle
sbb
inc
add
fs
aad
cwtl
scas
push
cltd
popf
out
sub
repz
adc
lds
lds
icebp
jecxz
je
repnz
inc
enter
out
cmp
fcmovnu
sub
mov
ret
int3
bound
add
adc
or
inc
dec
and
mov
or
fs
or
dec
mov
xchg
jmp
mov
mov
aas
call
cmpb
mov
fbld
mov
cld
fldcw
mov
pop
aaa
sub
sti
sarl
jns
adcb
cmp
cwtl
mov
fdivrs
cmp
mov
ret
rorl
in
arpl
xchg
mov
xor
mov
inc
lds
jnp
sarb
loope
pushf
mov
lods
sub
pop
xchg
push
jmp
add
add
loopne
add
incl
sub
pop
je
decl
lods
jne
jae
lods
pop
movsb
idivb
jmp
pop
into
mov
dec
ja
mov
lods
lcall
loop
popa
lahf
mov
adc
jb
or
mov
clc
shlb
mov
daa
das
scas
cmpl
push
push
xchg
push
sub
mov
test
data16
mov
jbe
bound
push
add
test
inc
andl
ds
and
push
int3
push
pop
cmpsb
and
xchg
pop
jns
push
and
sbb
in
std
jae
cmp
mov
xlat
pop
std
jbe
jno
nop
push
decb
adc
mov
or
xchg
or
sbb
shl
dec
xchg
or
dec
stos
aaa
mov
dec
inc
ljmp
or
icebp
stc
iret
imul
loop
pushf
mov
sbbl
shrb
in
hlt
test
popf
mov
push
ss
subl
dec
sub
xlat
loopne
mov
xor
and
xor
mull
loop
ja
xchg
insl
data16
out
and
sbb
push
inc
imul
and
xchg
mov
lahf
inc
adc
mov
adc
mov
iret
lret
movsb
dec
xchg
jle
test
popf
es
jbe
mov
popa
nop
divb
and
xchg
xor
cmp
mov
imul
pmaxsw
stos
aad
mov
sbb
push
iret
pop
fs
hlt
sub
or
sbb
loope
fidivs
and
jb
lcall
add
add
movsb
enter
in
mull
gs
push
test
iret
dec
pop
jmp
repz
adc
insl
and
repz
push
les
shlb
pop
test
mov
sbb
xor
rcrl
jl
and
shr
xchg
mov
fs
cmp
adc
mov
xchg
test
into
cmp
pop
fsubr
shl
neg
mov
push
gs
add
jg
rcrl
xchg
add
xor
in
fnsave
push
pop
jge
jne
fstp
mov
into
rorl
push
mov
dec
insb
imul
pop
std
lahf
repnz
notb
xchg
jg
ror
dec
jmp
sbb
pop
mov
lret
hlt
xchg
adcb
subl
push
stc
sti
jne
add
sbb
aam
dec
jge
pop
test
call
cs
enter
or
das
fcomi
jbe
add
xor
loop
pop
inc
cmpl
bswap
ljmp
ss
std
aam
addr16
xchg
fmuls
mov
cld
scas
pop
aas
outsl
mov
xor
add
add
loopne
add
incl
inc
pop
std
loope
jno
sahf
repnz
push
or
lds
shl
push
fdivrl
xchg
divb
jno
xchg
sbb
mov
hlt
xchg
xlat
or
jmp
test
jno
stc
out
or
adc
test
cmc
test
xchg
pop
roll
fisttpl
push
xor
das
xchg
add
aaa
or
mov
or
adc
fdivrs
xchg
push
iret
enter
cmp
dec
ds
lock
dec
outsl
les
imul
lds
push
loope
add
inc
inc
popf
in
mov
inc
mov
cs
mov
jl
mov
or
lods
jae
rcrb
loope
inc
or
std
out
mov
xchg
pushf
out
sbb
sub
ds
mov
sbb
out
sbb
daa
mov
mov
out
pop
inc
mov
repnz
rorb
jbe
inc
cltd
test
jp
arpl
jb
mov
xchg
xchg
and
adc
outsl
aad
sub
xchg
ficoms
lock
not
jg
pop
loope
pop
mov
mov
sub
lcall
jnp
xor
ss
je
cmp
push
jp
xchg
insb
hlt
sbb
pop
fisubrs
ja
inc
inc
mov
jl
fstpt
pop
and
add
mov
xor
dec
rclb
pop
and
inc
add
add
add
loopne
add
incl
add
add
andl
push
xor
hlt
cld
adc
in
sbb
dec
bound
sahf
xchg
shrl
dec
add
stos
push
insb
mov
out
fdivs
ret
mov
push
movsb
sbb
ds
sti
pop
insb
jo
out
shl
mov
add
or
aaa
movsb
lret
fisttpll
cmc
scas
xchg
and
or
mov
js
test
jo
mov
call
lcall
mov
push
jecxz
add
add
icebp
out
scas
push
lods
fldt
dec
in
nop
jb
lret
pop
lock
lret
push
push
inc
sbb
clc
push
push
inc
sbb
clc
push
push
inc
sbb
clc
push
push
inc
sbb
clc
push
push
inc
sbb
clc
push
push
inc
sbb
clc
push
push
inc
sbb
movb
add
