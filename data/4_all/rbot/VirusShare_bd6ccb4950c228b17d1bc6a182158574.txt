sub
stos
push
or
cmc
cmp
movsb
ja
cli
mov
cmp
push
sbb
outsl
or
aas
jae
into
test
xor
push
xor
lret
mov
mov
fists
pop
add
sub
xchg
xor
jp
xchg
xchg
jb
add
pusha
imul
test
insb
in
pop
fbld
std
adc
stos
adc
loop
loope
and
push
push
popa
pushf
aaa
xchg
mov
enter
jnp
movsb
fsubl
jmp
addb
int
cwtl
mov
mov
in
jle
push
and
addl
test
add
jbe
xchg
fcmovbe
ret
lock
cmpsb
add
jle
aas
into
shlb
and
and
and
mov
xor
xchg
cmp
aad
or
pusha
les
xor
cld
mov
inc
xor
lods
std
cmpl
fs
loope
cmp
xchg
andb
xchg
daa
mov
sahf
dec
xor
movsb
xlat
dec
xor
cltd
popf
testb
mov
pop
clc
leave
xor
xchg
stc
sub
adc
mov
mov
sahf
or
fistps
outsb
xchg
add
mov
jne
pop
xor
aam
mov
pop
add
clc
lds
test
push
loop
push
xchg
mov
inc
and
and
and
ret
negl
je
pusha
rcl
rcr
and
cmp
sbb
sbb
stos
push
bound
shr
and
sti
and
sbb
insb
sbb
mov
mov
repnz
pusha
aas
orl
and
fdivs
lock
add
popf
inc
sub
mov
outsb
nop
push
je
inc
add
push
fidivrs
fnstenv
int3
fidivrl
adc
mov
aam
mov
test
mov
adc
mov
cmp
cmp
mov
xchg
jb
pop
xor
int
jmp
mov
pop
mov
push
push
cmp
sbb
add
add
rcrl
cmp
repnz
or
shlb
xchg
xchg
out
sahf
mov
inc
push
or
movl
idiv
fwait
sub
inc
addl
pusha
lahf
jmp
or
fwait
cmpb
jb
mov
pop
std
or
insl
push
pop
scas
jbe
loope
dec
adc
add
and
bnd
data16
mov
ja
xchg
out
dec
andb
jl
cs
jbe
outsb
loope
mov
lods
push
xor
jl
out
lret
lret
push
mov
adc
xor
repnz
ja
push
out
mov
and
cmpsb
mov
sub
out
inc
and
pop
mov
jns
test
mov
xor
mov
enter
sbb
xchg
cmp
xchg
add
rorb
mov
sarb
cmp
sub
push
mov
push
mov
inc
loopne
ficoml
je
int3
sub
jno
sbb
or
movsl
leave
and
into
std
test
ja
sti
cmp
test
in
and
addr16
sub
adc
or
cmpsl
xchg
stos
pop
inc
movsl
xor
or
jle
in
pushf
sbb
into
sbb
mov
movsl
rcrl
inc
fdivrp
scas
add
xor
iret
repz
bound
jo
js
pop
aad
cmpsb
arpl
mov
decl
xlat
push
cmp
xor
or
in
adc
push
sub
jmp
mov
push
cmp
in
mov
pushf
xchg
int3
out
inc
xlat
push
lret
aaa
movsb
jae
xor
fdivrs
sub
cs
icebp
in
jbe
push
fs
and
icebp
int3
aad
fsubrs
mov
test
xor
lahf
mov
out
xchg
push
loopne
pop
sub
sbb
add
call
xor
das
jnp
in
sbb
mov
sbbl
nop
dec
xchg
add
movsl
lods
push
push
sahf
in
hlt
cmp
imul
inc
or
mov
loopne
in
xchg
outsb
cmp
imul
sub
adc
gs
mov
js
and
push
jb
sbb
jne
movsl
outsl
repz
mov
mov
xchg
loop
push
push
mov
xchg
mov
cmpl
add
aam
xor
mov
mov
cwtl
data16
add
nop
jecxz
ds
mov
pusha
outsl
dec
movsl
test
cmp
push
xor
cmpsb
popa
dec
lea
inc
xor
out
dec
push
or
xchg
cld
sub
mov
ficomps
and
sub
inc
cmp
xchg
test
mov
aas
jmp
pop
pop
lahf
adc
mov
lods
hlt
lods
ja
pop
cmp
daa
xchg
repz
hlt
nop
fisubrs
movsl
cld
cmp
je
std
cmc
xchg
cmpsl
pop
jns
jle
cmp
cli
jno
xchg
xchg
clc
adc
cmpsl
test
xchg
xchg
jge
stc
fwait
int3
push
sub
leave
or
inc
xchg
hlt
out
mov
add
in
push
in
pop
das
aaa
faddp
lods
pop
adc
fisubrs
adc
jg
orl
lds
addr16
in
int
xor
imul
dec
stos
inc
subb
cmp
mov
inc
push
xchg
mov
dec
adc
dec
dec
xor
jb
adc
add
icebp
adc
out
jns
aaa
dec
fisttpll
xlat
add
test
lds
jecxz
or
sub
push
aas
aaa
jmp
jge
dec
pop
inc
xor
xor
fcomps
aaa
add
inc
mov
jo
mov
cmp
out
aaa
lea
add
push
adc
or
adc
push
mov
insl
jno
jne
aad
lret
sbb
imul
xor
adc
sbb
movsl
jbe
arpl
lods
xor
xchg
jp
repnz
scas
rol
mov
sbb
pusha
insb
lods
out
xor
sarl
insb
les
lret
sahf
data16
mov
cltd
in
movsl
mov
call
insb
mov
jbe
ja
mov
jecxz,pn
pop
mov
fcomip
dec
jnp
loop
mov
test
lods
jp
loop
fs
inc
dec
out
ss
push
loope
mov
cs
hlt
arpl
stc
mov
xor
and
sub
rcrb
xchg
js
xor
in
insb
xor
sbb
test
les
jbe
cmp
stos
pop
mov
lret
xchg
aam
lods
icebp
push
cltd
sahf
sti
dec
call
sub
stos
mov
xchg
xchg
int
in
jae
sbb
cltd
imul
mov
xchg
pop
lahf
sbbl
lret
enter
mov
or
in
xor
push
insl
xor
cld
push
test
sub
mov
fsubl
lods
jg
int3
nop
jmp
add
fs
jecxz
adc
sahf
xchg
push
aaa
add
test
stc
mov
or
pop
mov
pop
lret
xchg
jp
pusha
cltd
adcb
cltd
cmp
push
jge
push
lds
xor
jle
pop
mov
jo
jle
pop
jl
ja
jg
mov
push
outsl
fdivrs
cmp
xchg
adc
movb
mov
lcall
je
orl
addl
out
xchg
cmpsb
dec
shl
loop
out
or
dec
push
movsb
pop
pushf
mov
int
lret
stos
mov
xchg
imul
addl
push
push
add
imul
jbe
mov
sbb
adcb
jbe
aam
sbb
or
fcos
std
loop
mov
ja
pop
sarl
jecxz
test
jb
jp
mov
and
inc
cmp
ret
scas
adc
stc
or
int
ljmp
aas
vpmuludq
cmp
in
add
jns
cmp
aaa
xchg
xor
in
sbb
repz
push
mov
test
pop
push
sub
xchg
ret
arpl
addr16
jns
leave
xor
push
test
sbb
std
fldl
mov
lds
xchg
adc
jp
push
clc
ficoml
jp
add
ja
jae
cmc
fdivrp
cmp
sbb
push
jns
call
outsb
rol
xchg
in
jg
lret
cmp
popf
or
jns
push
mov
cmpsl
jmp
mov
jg
sbb
push
add
mov
dec
xor
dec
lcall
mov
jbe
gs
idivb
mov
push
push
cli
cmpsl
mov
insb
sahf
add
ljmp
fbstp
mov
nop
dec
dec
cmpsl
fbld
stos
or
movsb
call
rcrb
int3
or
jno
iret
xchg
sti
shll
mov
mov
stc
hlt
lret
daa
outsl
fsubl
mov
and
dec
pop
push
iret
clc
hlt
xchg
out
sub
lahf
and
and
roll
gs
fwait
sahf
int
adc
shrl
and
cli
adc
data16
js
or
notl
mov
sbbl
insl
sub
subl
xor
ror
movsl
movb
sbb
setne
rclb
and
adc
sub
or
push
push
out
mov
or
inc
xchg
pop
fsts
mov
inc
jmp
sti
out
sub
or
cmp
push
push
pop
mov
mov
push
adc
in
cld
dec
lods
pop
mov
rorb
ds
sahf
lret
insb
arpl
sahf
jge
mov
lods
imul
clc
sbb
pop
gs
aam
mov
icebp
xchg
mov
xchg
outsl
add
rcrl
adc
add
pop
test
pop
ficoml
or
inc
cmp
and
insb
idivb
popa
sahf
ja
lea
call
mov
pusha
cmp
hlt
ljmp
or
fwait
out
minps
dec
lahf
sub
mov
sub
mov
adc
jmp
xchg
leave
mov
push
sub
outsl
pop
out
pop
scas
xchg
adc
call
mov
adc
add
mov
xor
mov
or
sub
clc
and
enter
cmp
xor
or
push
lock
cmp
xchg
dec
cltd
mov
cmp
jns
and
pop
stc
pop
cmp
jmp
aad
mov
mov
rcll
and
movsb
cwtl
cmpsl
xor
je
fadd
aaa
lods
xor
in
sar
inc
insb
cli
dec
es
push
lea
jge
inc
imul
mov
push
lahf
cs
cltd
add
int
jl
imul
sbb
dec
sub
mov
push
jmp
enter
xchg
mov
sub
ret
out
shrl
lods
pop
test
js
and
lea
lahf
jle
jle
push
in
xchg
mov
lock
les
push
negb
mov
rolb
push
add
mov
js
mov
ds
std
jbe
scas
adc
repnz
mov
insb
arpl
dec
mov
mov
cld
pushf
push
jecxz
loop
and
xorb
arpl
sbb
sti
inc
lahf
xor
test
add
and
test
push
jl
stos
mov
sub
cli
mov
loop
dec
sub
lret
pop
pop
into
xchg
in
pushf
std
addl
sbb
movsl
xchg
mov
les
out
loop
int
inc
xor
aad
fiaddl
leave
call
pop
pop
daa
push
xor
data16
pusha
stc
enter
cltd
adcb
dec
pop
push
xchg
cltd
mov
popa
add
out
dec
ljmp
mov
sbb
mov
pushf
sub
lret
rcll
out
jo
dec
xchg
flds
xchg
mov
pop
movsb
imul
fst
int
adc
movsb
out
test
pop
sub
pushf
js
lret
ja
jnp
sahf
lods
and
lock
cli
roll
inc
add
pop
mov
push
imul
or
xchg
and
cmc
mov
jp
mov
mov
adc
xor
mov
aam
adc
les
cli
sbb
lods
lock
bound
lods
or
pop
xchg
addb
inc
mov
and
add
icebp
mov
repnz
pusha
jle
jg
add
xor
pop
push
outsl
xlat
and
test
out
rep
push
testb
repnz
cmpsl
movsl
in
stc
xchg
ret
loopne
sub
cmpsl
xor
jmp
mov
xchg
xor
gs
lret
test
outsb
into
jecxz
iret
fbld
pushf
jle
stos
fildll
pop
mov
mov
test
push
in
push
dec
pop
stc
fcmovbe
sbb
cmpsb
pop
into
push
iret
xchg
xchg
xchg
loope
imul
adc
lock
inc
enter
jg
lea
mov
push
mov
cs
xchg
scas
or
mov
in
shll
adc
and
inc
jno
mov
mov
arpl
or
fcomps
pop
lret
inc
subl
outsl
pushf
pop
add
jno
adc
pop
jl
mov
jecxz
ds
mov
aas
rol
outsb
mov
xchg
clc
outsb
lcall
or
add
lods
inc
xchg
and
cmp
cmp
leave
jne
sahf
dec
push
sbb
mov
xchg
ljmp
jnp,pt
add
push
les
dec
pop
inc
scas
bound
mov
sbb
fistpll
popf
sahf
jle
icebp
dec
lea
int3
mov
jne
ret
add
add
rcrb
adc
clc
out
push
push
and
dec
pop
mov
jo
cmpsb
nop
push
add
jbe
notb
fists
add
lcall
mov
hlt
jns
aad
sbb
mov
or
out
data16
mov
or
dec
or
mov
ljmp
cmp
movsl
mov
jmp
sub
sahf
iret
xor
leave
shlb
ds
gs
movsb
xchg
sbb
out
and
clc
push
mov
movsb
ljmp
push
into
outsb
jb
mov
xchg
push
sub
out
push
lcall
mov
and
cmp
sbb
div
mov
jne
test
and
sub
jg
and
subb
sbb
jo
sbb
insb
aad
sub
pushl
and
push
sbb
jnp
orb
inc
mov
icebp
fs
jmp
sbb
jmp
xchg
fwait
lret
sub
ss
or
fnstcw
xor
fldenv
sti
sbb
lret
out
mov
push
jp
addb
inc
mov
push
jmp
out
insl
mov
pop
lods
in
jmp
cmp
mov
loop
out
pop
cmp
push
mov
rcr
push
pop
push
adc
repnz
and
dec
xor
mov
cmp
dec
lods
add
rolb
mov
aam
mov
sub
xchg
inc
jle
movsl
jno
sbb
inc
testl
repz
les
cltd
and
dec
lea
nop
cmp
add
add
daa
jns
fs
xor
and
inc
mov
pop
xor
sub
pop
xor
sub
shll
mov
jnp
es
lods
pop
mov
and
push
imul
xchg
lds
test
ret
hlt
mov
loope
mov
add
cltd
push
jmp
sbb
and
enter
mov
enter
std
ror
scas
jns
jo
push
inc
fstpl
lret
shlb
add
int3
mov
jno
movsl
mov
ret
add
mov
lea
pop
xchg
test
es
out
add
inc
loope
std
pop
bound
xchg
in
aas
add
jmp
cltd
movsb
arpl
out
xchg
lds
pusha
test
pop
sahf
mov
pop
xlat
pop
stos
scas
je
or
cli
mov
jmp
and
and
pop
notb
push
cmp
movsb
xor
dec
push
aam
imul
add
loopne
fbld
push
lock
and
loope
push
andb
test
dec
lahf
imul
pop
dec
push
mov
cmpsl
push
mov
test
dec
out
pop
mov
push
js
jo
repz
rcrb
jl
mov
adc
xor
das
mul
push
in
mov
les
adc
mov
mov
aam
push
push
int
pusha
inc
call
lods
xor
sbb
fnstcw
inc
sub
adc
stos
aad
dec
xchg
or
lods
pop
je
dec
mov
cmp
jno
pop
pop
aad
nop
ret
push
jno
enter
xchg
mov
cs
mov
nop
mov
wrmsr
mov
js
loop
leave
push
and
mov
and
aam
push
fisubs
outsb
ja
sbb
jle
shlb
shll
addl
xor
and
bound
jbe
shrb
pop
sbb
scas
sti
mov
insb
dec
loopne
mov
fldt
insl
into
cmpsb
xchg
shrl
cmp
test
cmp
lret
subb
clc
movsb
dec
in
mov
shlb
les
cmpsl
or
sub
lea
pop
shlb
sbb
push
mov
cwtl
dec
sub
pop
push
das
sbb
cltd
mov
mov
js
loop
sbb
sarl
call
push
mov
lret
inc
sbb
out
sbb
jl
aad
add
add
aad
mov
mov
mov
faddp
sub
sbb
mov
aas
xor
gs
daa
adc
mov
fiadds
adcl
fmull
jns
jae
pop
add
hlt
adc
jecxz,pt
sbb
add
mov
clc
mov
inc
inc
insb
ret
push
sub
sbb
in
mov
add
idiv
inc
or
rol
sub
lret
test
cmpsl
fcomps
fsubr
cli
adc
inc
outsb
sub
aas
pop
cmp
mov
movlps
scas
add
adc
inc
mov
inc
push
fisubs
rcrl
inc
mov
push
jge
jecxz
imul
je
push
mov
out
adc
test
insb
dec
ret
mov
dec
lds
les
in
add
dec
scas
cwtl
and
loope
add
jno
add
add
sub
mov
pop
fistpll
mov
or
inc
insb
pop
popf
leave
pop
lock
and
mov
popf
pop
mov
ret
in
jmp
test
outsb
push
outsl
loope
call
mov
sbbb
dec
dec
stos
es
or
addr16
sub
loopne
stc
js
or
call
push
stc
push
push
adc
ja
sub
add
loopne
in
mov
jae
sub
arpl
repz
jl
and
jns
movsb
sti
mov
xor
mov
push
mov
inc
mov
mov
outsl
ficoml
nop
push
lea
in
inc
push
add
sbb
test
loope
push
lods
loop
dec
in
and
sarb
pusha
sub
sarl
mov
ret
cltd
fs
pushf
xchg
loopne
mov
adc
popf
jb
dec
lock
mov
xchg
sbb
mov
pop
sub
sti
scas
repz
add
jp
insb
add
test
push
scas
add
cltd
psrad
pop
scas
adc
cmp
scas
rcrl
aad
loop
les
mov
dec
out
loope
add
rcll
mov
or
cmp
repnz
test
mov
push
jae
not
test
xor
cmp
sbb
cmp
std
fucomip
movsb
sti
inc
or
insb
ret
adc
cmpsl
xchg
ret
push
hlt
iret
sar
or
adc
and
jnp
movsb
mov
in
daa
push
popa
pop
cmp
rorb
lds
inc
aam
sbbb
in
mov
hlt
mov
inc
jnp
lods
mov
push
aad
dec
dec
jns
popaw
adc
pop
jle
test
jo
sub
pop
loopne
mov
pusha
or
or
movsb
das
imul
jae
pop
daa
in
sub
es
pop
xchg
push
outsl
in
shrb
sarl
test
pop
pop
push
dec
push
cmc
adcl
ljmp
cmp
clc
inc
sbb
lock
adc
cmp
mov
aad
or
and
iret
les
pushf
push
int3
xchg
sub
gs
adc
sub
sbb
js
sub
cmp
testb
xchg
roll
jl
push
xchg
adc
call
mov
lret
xchg
jle
add
xchg
or
pushf
fcompl
mov
pop
mov
pop
dec
jge
loopne
sbb
roll
in
add
imul
int3
push
fdivl
outsb
add
push
pop
or
fdivrs
sbb
mov
sarl
adc
xchg
in
dec
add
loope
loopne
out
adc
cmc
jns
add
shrl
insb
jl
adc
cmp
pop
jb
in
and
lods
popf
xor
dec
fisttpll
sbb
nop
pop
int3
or
out
cmp
out
or
mov
out
imul
mov
xchg
shrb
fidivs
bnd
fstp
std
popa
fdivrl
filds
xchg
cmp
fiaddl
shrb
adc
addr16
mov
push
push
add
test
pop
out
push
cmpsb
or
xor
mov
mov
imul
mov
pushf
xor
outsb
out
movsb
outsb
jg
push
in
mov
sub
sbb
das
std
jle
and
cld
mov
xchg
pop
push
loopne
lahf
pop
stos
inc
push
int3
cmpsl
sub
sbb
stc
sub
fnstenv
jmp
call
or
aam
dec
push
and
push
fiadds
add
push
jecxz
adc
aas
mov
or
mov
adc
cmpsl
fwait
xchg
dec
mov
icebp
addr16
mov
push
and
les
or
adc
lahf
in
testb
or
and
insb
pushf
jp
jp
imul
int3
mov
or
push
in
dec
mov
push
or
xchg
and
popf
test
lahf
or
pop
mov
mov
inc
test
xor
mov
cmc
out
pop
pop
lahf
mov
rcll
ds
adc
lcall
iret
fdivl
pop
cmp
pop
jecxz
mov
int
lcall
fsubrs
lock
in
int3
push
or
mov
mov
pop
jnp
cmp
dec
xchg
outsb
cmp
dec
sub
pushf
test
jg
and
add
jl
xchg
jle
sahf
pop
mov
hlt
xchg
cmc
sbb
cmpsb
jp
loop
aaa
rcl
jp
filds
andl
in
mov
gs
push
fsubs
adc
xor
xchg
orl
add
push
loope
mov
lds
mov
aam
mov
cmc
sub
dec
loopne
ja
in
adc
lock
je
into
mov
scas
cs
jnp
mov
and
fs
mov
sub
push
or
cmp
or
push
jno
js
push
push
adc
cwtl
jno
jno
leave
and
jo
jae
in
or
xchg
xchg
cli
xor
lea
cmp
enter
mov
lret
scas
insb
add
and
push
and
mov
sub
out
mov
cwtl
adc
mov
ljmp
mov
pop
mov
jno
sahf
ror
or
pop
cwtl
movsb
xchg
sbb
pop
mov
inc
push
mov
xor
out
jo
mov
mov
inc
jp
xchg
cmp
ljmp
jne
sub
or
adc
pushf
push
sbb
inc
fadd
sbbl
daa
loopne
jmp
lret
push
js
push
test
push
daa
dec
mov
inc
es
hlt
dec
cmp
inc
adc
imul
xchg
stos
xor
sbb
in
push
inc
popf
aas
mov
or
inc
lock
outsl
jg
popl
mov
into
dec
in
out
ret
call
ss
iret
pop
and
inc
fstl
inc
mov
es
push
cs
leave
jle
add
dec
jle
mov
cmp
jbe
add
inc
movsl
and
incl
stc
or
fwait
inc
je
out
xchg
cltd
dec
in
pop
xchg
pop
das
mov
aaa
enter
in
repnz
arpl
popf
jle
popl
popa
and
mov
pop
and
push
push
ja
popf
xor
push
sarl
mov
adc
mov
jecxz
mov
bound
aam
sbb
outsb
xchg
mov
mov
xchg
shlb
add
push
movsb
jae
xor
in
mov
lods
test
mov
xchg
cld
mov
popa
sahf
divl
loopne
filds
cmp
cmpsl
std
mov
ret
hlt
mov
subb
dec
inc
cmp
aam
test
xchg
dec
push
pop
shlb
cld
xlat
cmp
fnstcw
fisubrl
fdivrp
cmp
ret
shlw
add
add
cmp
gs
push
pop
scas
mov
adc
and
mov
jg
adc
aam
add
ljmp
add
inc
push
popa
push
dec
subl
mov
lods
mov
stos
mov
pop
mov
test
jp
mov
inc
push
or
cmp
push
in
mov
mov
pop
fcmove
arpl
dec
imul
ficomps
scas
sub
push
add
sub
notb
in
lret
imul
out
in
adc
or
pushf
shlb
cmp
push
push
jmp
sub
jb
mov
push
fsub
out
pop
pop
pop
icebp
je
shl
xor
lea
popa
in
sub
jnp
mov
mov
and
fistps
dec
out
xchg
xchg
add
incl
mov
in
add
or
rcrl
imul
cmp
sahf
xchg
push
std
jl
adcl
scas
push
add
sbb
xchg
arpl
loope
test
jle
inc
jnp
adc
jle
pop
mov
jp
in
mov
call
xor
add
ss
leave
dec
faddl
sbb
test
enter
sub
stos
push
pusha
imulb
pop
ljmp
push
faddp
aad
out
mov
mov
adc
scas
pop
or
cmpsl
loop
pop
inc
daa
and
dec
rclb
dec
mov
repnz
xorb
push
push
cmp
xchg
lcall
bound
sub
sbb
fwait
mov
pop
dec
xlat
je
and
xor
lods
hlt
inc
jns
lds
ljmp
imull
addr16
lods
mov
jge
nop
mov
mov
cmp
adc
adc
push
in
loop
pop
int3
mov
or
and
jne
loope
push
sti
and
in
or
test
dec
decl
adc
cltd
mov
push
test
cs
and
adc
sbb
mov
je
dec
add
shl
sahf
rorb
inc
stos
sub
jae
cmp
add
sbbl
into
sbb
jbe
dec
daa
aad
test
ror
and
shll
mov
das
xor
testl
sbbb
enter
xchg
jle
cmp
stos
xor
mov
sbb
push
pusha
nop
mov
das
cltd
pop
frstpm(287
or
or
fistps
repz
lcall
inc
imul
jle
mov
cld
movsl
call
xchg
cmp
fiaddl
lahf
inc
stos
push
fdivr
jns
add
mov
aad
aaa
sti
xlat
repnz
jle
inc
dec
cmc
dec
mov
mov
mov
cmp
jl
je
inc
rorb
fidivrs
movsl
xor
test
rcrl
addb
ja
xchg
push
bound
mov
xor
sarl
mov
js
cmp
push
xchg
das
mov
fistpl
in
ss
cltd
cmp
cmc
adc
push
test
mov
mov
scas
pop
pop
jecxz
aaa
add
roll
add
dec
popa
in
stos
xchg
fmulp
cmpsb
leave
push
aaa
add
sbb
mov
sub
or
pop
adc
mov
lds
in
mov
mov
mov
inc
lcall
frstor
in
push
gs
out
int
mov
cld
adc
test
aad
imul
jmp
xchg
xchg
pop
xchg
dec
sub
addr16
xchg
cmc
ja
jmp
inc
xor
pop
pop
pop
cmpsl
test
mov
sbb
push
ret
xchg
add
mov
jle
repnz
fadds
mov
mov
out
fdivl
push
inc
subb
arpl
dec
pushl
lods
andl
out
xchg
lods
xchg
fldl
nop
mov
or
fldcw
mov
push
fstp
add
insl
jecxz
sub
scas
pop
mov
pop
inc
mov
add
sbb
xchg
and
mov
cmp
out
fisubl
dec
lea
dec
lods
adc
int3
out
loopne
popa
cld
jns
jmp
loope
cltd
ljmp
or
in
push
ds
call
xor
cmp
dec
dec
adc
jecxz
push
dec
rorl
sub
cmp
ret
stc
adc
lret
aad
les
inc
ficomps
fstps
jmp
js
dec
mov
into
outsl
push
pushf
xchg
fdivrs
mov
and
rorb
xchg
push
push
xor
adc
shlb
or
aas
rcr
pushf
and
push
add
or
jmp
xchg
dec
les
inc
dec
add
pop
loop
pop
int
pop
xor
xchg
cmp
push
push
push
aad
stos
ret
or
cmp
push
mov
jo
mov
inc
adc
scas
adc
sbbb
jns
mov
dec
les
sahf
push
push
ss
pop
enter
pop
cwtl
shll
or
xchg
hlt
add
push
adc
xor
add
ss
mov
fistpll
push
cmpsl
jl
rorb
es
test
pop
fwait
cmc
stc
mov
sbb
xchg
inc
test
and
push
fcmovb
and
shrb
push
jecxz
sbb
out
insb
sub
mov
push
mov
ja
push
lcall
pusha
jmp
sub
out
mov
out
fadd
outsb
pop
outsl
add
inc
dec
sub
cmp
jmp
xlat
sbb
out
cltd
data16
insl
and
lock
imul
xor
or
pop
lds
dec
lea
popa
xchg
xor
add
out
adc
dec
in
sbb
mov
popa
incl
mov
xor
test
jmp
xchg
mov
mov
lods
loope
cmpsl
xor
or
dec
or
and
and
in
lods
lret
push
stc
pop
pop
xor
imul
dec
or
jp
fwait
daa
repnz
inc
scas
cwtl
out
inc
loop
outsb
test
test
dec
call
js
fimuls
lea
push
add
and
stos
out
mov
fdivl
pop
popf
mov
scas
cmp
push
int
jecxz
or
push
sbb
out
inc
data16
in
add
aam
aad
repz
addr16
repnz
xchg
and
add
jp
pop
mov
jge
sub
push
in
sub
ss
idiv
iret
push
lcall
test
sbb
lcall
test
inc
mov
outsl
mov
pop
lods
pop
addb
or
mov
pop
es
pop
add
je
jl
dec
into
jge
std
or
inc
gs
xchg
xor
xchg
cmpsl
sub
jle
xlat
in
mov
sbb
rorb
jo
sti
xchg
sbb
and
test
fimull
cltd
or
push
mov
in
ds
sbb
fistpll
add
fmul
aam
inc
dec
shlb
lea
js
lret
pop
mov
mov
aaa
push
outsb
out
lret
or
mov
loop
jl
push
xor
jno
ljmp
pop
sub
pop
or
test
int3
sarl
data16
aas
enter
xchg
push
dec
mov
loope
mov
xchg
loopne
mov
dec
lods
mov
mov
or
jmp
inc
mov
js
addb
ret
movsl
fwait
or
xchg
sbb
daa
jbe
sub
mov
mov
cmp
lret
out
push
hlt
cli
mov
mov
cld
stc
sbb
sti
and
cmp
adc
nop
and
inc
sti
aas
xor
test
xchg
or
add
xchg
sti
add
and
in
out
add
popl
add
mov
push
movsb
dec
cmp
dec
jecxz
xor
stc
fsubl
in
sbb
sub
cwtl
outsb
dec
xchg
inc
les
imull
sub
rcl
cmpsl
hlt
test
mov
adc
mov
lock
lret
dec
ud0
dec
js
sbb
sarl
cmp
outsb
xchg
adc
mov
mov
mov
push
mov
mov
rolb
mov
jl
cmc
adc
lods
mov
jp
js
inc
jge
jmp
xor
dec
mov
mov
adc
in
add
jno
repz
movsl
add
pop
pusha
mov
inc
mov
and
fcoml
mov
mov
iret
popf
xor
push
jmp
lret
push
shll
scas
jne
or
aad
aas
cwtl
stos
inc
and
out
mov
int3
xchg
loope
fwait
in
adc
sbb
jnp
in
cs
mov
cwtl
mov
or
aaa
sahf
xor
xchg
jge
jmp
movsl
and
ret
sub
popf
xor
into
push
pushf
push
and
fldcw
leave
xor
jbe
sbb
jne
mov
dec
popf
rorb
sbb
cmp
push
ljmp
and
dec
mov
fidivrl
test
sbb
pop
adc
xor
imul
rclb
out
popf
daa
ret
mov
and
add
xor
jl
ds
pop
lods
mov
addr16
jmp
shlb
adc
fidivrl
pop
sahf
mov
xchg
xor
shll
stos
call
cld
lods
add
jns
xchg
inc
mov
mov
lcall
inc
enter
pushf
xor
adc
flds
inc
lock
in
dec
lret
push
mov
sbb
push
xor
pop
clc
ss
dec
lock
push
les
testb
ficompl
cmpb
call
mov
sub
or
ja
aam
cmp
cmp
sub
mov
sar
insl
jb
and
imul
lcall
push
sbb
cvtps2pi
pushf
sub
lock
lcall
shll
insl
and
fsubrs
insb
xchg
cmp
cmp
adc
cltd
sbb
dec
fsub
push
mov
ret
sbb
cmp
xchg
out
xchg
cmpl
int3
into
and
or
push
das
jecxz
dec
cmpsb
aam
cmp
mov
and
push
in
add
dec
aam
dec
aad
push
outsb
out
imul
aaa
jl
out
popf
outsl
cmp
lods
ja
mov
mov
lds
add
andl
xor
dec
xchg
js
loopne
jno
xchg
mov
frstor
popf
movsl
dec
fsubl
sub
and
enter
test
fists
pop
sub
aas
xor
les
or
xchg
adc
dec
inc
in
lods
inc
jno
dec
in
in
das
push
cwtl
adc
or
popa
mov
mov
push
fmuls
or
xor
out
xchg
enter
cmp
bound
outsl
inc
mov
stos
sahf
inc
cmp
cli
push
fldpi
imul
aad
inc
mov
into
dec
jl
or
fcoms
subb
aas
push
fs
push
hlt
lods
stc
xor
push
in
jb
cmp
cwtl
pop
dec
mov
cmc
test
and
xchg
xor
imul
scas
lcall
jb
fs
aaa
xchg
add
js
or
shl
into
xchg
push
fisttpl
dec
js
mov
cmp
xchg
outsl
or
xchg
and
sti
popf
xchg
cmp
fmull
and
test
or
mov
sti
sarl
xchg
cmp
cli
sbb
xchg
mov
lock
mov
xchg
testb
movsl
adc
xlat
aas
or
cmpb
adc
xor
cmp
or
or
push
add
push
hlt
xchg
ret
ud0
cld
imulb
mov
jle
lock
mull
mov
sub
mov
ss
push
int
mov
sbb
mov
ss
sbb
xchg
add
mov
xor
shrl
and
insb
sar
dec
sahf
arpl
mov
pop
pushf
js
mov
mov
adc
sub
outsl
ja
mov
addr16
xlat
insl
ss
in
outsb
les
mov
ficomps
out
rol
mov
inc
and
jns
sbb
mov
es
pop
lods
sbb
mov
inc
call
hlt
cmp
pop
cmp
dec
jno
aaa
push
mov
gs
mov
add
call
pop
jbe
or
inc
push
mov
scas
mov
call
stos
xchg
mov
call
sub
sahf
lret
adc
call
test
pop
imul
fwait
pushf
clc
inc
jmp
fsts
cmp
dec
out
daa
lea
jg
mov
in
pusha
push
push
idivl
sti
stos
fisubrl
mov
push
addr16
and
cmpsl
inc
push
cli
sbb
or
cmp
daa
fwait
dec
cmp
jbe
stc
or
fimull
test
mov
rcrb
push
cs
sub
jg
pop
mov
fucom
xor
fisubrl
lret
pusha
pop
xchg
pop
cmp
insb
testb
sub
icebp
adc
enter
add
or
push
in
cld
add
sbbb
pop
insl
inc
rclb
loopne
scas
scas
add
dec
push
cltd
and
and
cmp
into
cmp
jge
mov
inc
test
pop
insb
pop
das
dec
xor
or
mov
and
xlat
xor
cmpsb
push
push
pop
cmp
stc
adc
int3
adc
pushf
xor
mov
ror
insb
jmp
sarl
jno
int3
and
loope
subl
rcrl
nop
mov
dec
xchg
sbb
cmp
movsb
int
outsl
out
mov
push
in
push
mov
test
pop
push
pop
gs
xlat
adc
and
jl
jae
ret
lahf
sub
pusha
push
inc
dec
ficomps
addr16
cmp
xchg
sahf
cld
into
mov
fbld
lods
out
pop
dec
rolb
mov
fdivrp
dec
xor
testl
sahf
sbb
xor
cmp
mov
or
mov
leave
aas
pop
hlt
xor
pop
lods
push
pmulhw
leave
movsb
push
cmp
and
clc
mov
lds
jnp
push
jle
add
xor
xlat
addr16
add
sarb
adc
ret
out
mov
mov
xor
pop
sub
pusha
stos
sbb
cmp
es
mov
pop
jge
mov
mov
lods
mov
shrb
popl
mov
xchg
jmp
adc
inc
mov
pop
pushf
jle
int3
add
cld
jbe
dec
jmp
les
sub
sub
stos
outsb
and
movsb
mov
mov
inc
aaa
xchg
push
jl
dec
inc
out
jae
in
jno
loop
mov
jmp
mov
sbb
test
mov
sbb
int3
cmc
mov
inc
repnz
mov
fisttpl
loopne
pop
test
aaa
jno
sbb
mov
mov
mov
push
cwtl
xchg
sub
lds
dec
sub
enter
mov
xchg
sti
fisttpll
dec
out
mov
pop
nop
imul
xchg
loope
test
jmp
jne
shlb
ljmp
into
mov
stos
xchg
inc
call
add
jns
jbe
pop
add
es
outsb
in
cmp
scas
xchg
mov
into
cmp
pop
or
pop
inc
imul
scas
xchg
mov
sbb
les
std
ds
dec
sub
mov
cltd
pop
sbb
mov
idiv
or
mov
mov
notl
xchg
out
je
jmp
out
adc
stos
xchg
decb
sbb
add
or
jmp
jp
shl
mov
inc
ja
jno
sti
cmpsl
rorl
aad
popf
fistpl
popl
cmpsb
subb
fmull
rorl
into
lret
cmp
jns
into
jg
xchg
xchg
rcrb
xchg
jle
ret
popa
push
out
adc
loopne
std
cld
in
movsb
js
inc
mov
push
insl
stos
loop
cmpsb
inc
or
fcompl
and
cmp
cmpsb
lret
xchg
xor
adc
mov
out
ss
daa
mov
cmpsb
dec
orl
sbb
insb
pop
xor
mov
mov
lret
in
cmp
pop
jbe
mov
fisttpll
pop
mov
or
pop
out
mov
and
int
into
fs
adc
shlb
scas
cltd
sub
sub
stos
pop
add
aam
sub
jle
icebp
rcrl
mull
into
mov
adc
push
adc
jns
xor
sbb
stc
movl
cmpb
and
jno
insb
outsb
push
pop
inc
je
and
ret
and
inc
cmp
mov
ja
pop
test
lods
xor
adc
mov
test
add
test
shll
out
in
mov
outsl
dec
call
push
and
jecxz
rorb
mov
sbb
fcmove
leave
mov
icebp
std
popf
loop
cltd
inc
rclb
mov
leave
mov
stc
mov
cmp
jmp
je
cmp
jl
or
dec
mov
sti
push
jnp
or
repz
xor
out
push
mov
mov
es
or
mov
leave
mov
addr16
lock
aas
add
xchg
pusha
xor
mov
cmp
push
xchg
push
mov
lcall
int3
lods
and
adc
jne
push
inc
and
mov
cltd
xchg
adc
cltd
cmp
inc
mov
or
sbbl
jl
push
jnp
fdivl
sbb
addl
shlb
add
xchg
nop
and
imul
lret
shl
clc
pushf
dec
pop
mov
loopne
cli
add
sbb
jg
lcall
xorb
pop
sub
fcomps
sbb
xchg
xchg
inc
clc
xor
gs
mov
test
xchg
push
sbb
cmp
imul
cmp
cltd
rcrl
clc
arpl
push
mov
loopne
movsl
push
aad
pop
jmp
fstl
pop
xorb
pop
pusha
ret
and
cltd
xor
dec
adc
and
fcomp
ret
xor
clc
pmulhuw
pop
iret
rcrl
add
lods
arpl
pop
jbe
push
xchg
imul
add
adc
jnp
mov
subl
add
mov
cmp
test
or
imul
fmuls
sub
subl
in
shlb
or
bound
pushf
mov
iret
dec
mov
sti
mov
ret
loop
ud0
in
iret
out
or
divl
cli
dec
pop
push
arpl
xlat
cmp
fs
xchg
mov
fcmove
dec
andb
fldt
push
jo
lret
les
and
or
cltd
xor
jne
inc
idivl
mov
dec
push
sbb
ljmp
addb
data16
jbe
or
pushf
fcoms
rcrl
pop
jno
arpl
jne
add
mov
push
loope
into
sahf
jp
es
mov
cmp
mov
pop
mov
push
xchg
nop
mov
loopne
hlt
sti
hlt
out
mov
mov
popf
clc
xchg
pushf
sub
das
imul
mov
std
pop
or
int
int
mov
jg
lret
xor
xor
aaa
lock
mov
dec
scas
gs
xchg
push
lret
mov
mov
add
jbe
sbb
out
dec
push
adc
mul
loop
jge
data16
repz
addl
ret
inc
rclb
xorb
push
sub
loopne
jl
lods
or
mov
test
dec
push
xchg
gs
aaa
int3
test
data16
push
jbe
inc
iret
roll
mov
xchg
nop
test
es
push
sub
push
xor
movsb
mov
jg
mov
mov
ss
inc
dec
stos
fwait
xchg
xchg
fbld
inc
out
sbb
mov
movl
lods
repnz
mov
jne
dec
xchg
pop
mov
int
jl
lock
das
imull
in
dec
xor
lret
insl
mov
ret
loopne
scas
mov
fcomps
loopne
inc
stc
fs
sbb
ljmp
rorl
xor
xchg
pop
sbb
mov
repnz
push
xor
push
mov
xchg
or
jecxz
pop
in
test
jnp
stos
ror
data16
jbe
aaa
ds
fisttpll
and
pop
sahf
adc
sbb
mov
shll
loop
xchg
arpl
pop
mov
sqrtps
mov
or
inc
lock
push
adcb
push
les
and
test
xor
adc
mov
cmp
pushf
pop
sbb
inc
scas
sbbl
rcrl
add
fnstcw
or
mov
jle
sti
adc
sbbb
mov
inc
mov
fs
sub
xsaves
cmp
loope
inc
fsubrl
mov
test
adc
dec
mov
int
mov
les
ret
jne
mov
cli
jle
scas
rclb
mov
mov
xor
jg
sti
outsl
call
cmp
iret
faddl
adc
and
sbb
add
or
add
pop
xchg
sbb
roll
cs
int3
not
fsub
xlat
adc
push
shlb
mov
das
and
sub
sub
incl
popf
cmp
and
mov
push
sarb
or
push
inc
mov
out
adc
test
xchg
mov
ss
mov
lcall
xor
dec
cmp
push
push
fstpt
test
mov
xchg
pop
in
test
and
adc
and
mov
ror
out
and
mov
in
mov
imul
popa
fcomp
sahf
xor
cld
pop
outsl
daa
mov
xor
scas
aaa
push
out
rolb
pop
ret
jnp
add
cmp
jno
xor
cmp
loopne
lcall
adc
incl
dec
and
rcrl
mov
fnstsw
push
int3
pusha
lods
push
push
popf
xchg
sbb
inc
repnz
mov
dec
lret
and
fstl
jmp
pop
pop
add
jge
mov
in
jae
mov
out
shlb
add
push
sub
cltd
push
ja
testl
cwtl
xchg
popl
cld
fidivs
enter
add
pusha
mov
repnz
outsb
lods
inc
add
mov
mov
add
ret
mov
pop
xor
lods
xchg
lret
mov
push
fldl
inc
call
loopne
clc
out
int3
inc
stos
fdivs
lock
mov
push
filds
mov
inc
xchg
bound
jnp
sub
mov
and
mov
sbb
mov
cs
add
adc
loopne
add
adc
outsb
shrb
dec
ljmp
mov
movsb
in
inc
bound
inc
jae
insl
sbb
sub
and
pushf
xor
ja
scas
sub
loopne
mov
cmp
inc
push
mov
lret
xor
or
pop
inc
pop
loope
gs
mov
and
xor
xor
mov
mov
or
shll
mov
jb
mov
xchg
pop
rorl
cld
and
xor
or
sbb
lock
je
pop
shlb
mov
dec
mov
mov
mov
les
pop
push
or
lea
mov
or
sub
push
cmp
hlt
push
xchg
lahf
fldt
shlb
lds
loope
and
nop
addl
and
dec
jmp
dec
adc
rcrb
repz
dec
pop
push
inc
sbb
lods
jl
mov
fdivrl
sub
mov
xchg
lea
fldz
or
jl
jmp
push
mov
fdivrl
cmp
test
inc
add
test
mov
in
push
push
ud1
mov
sti
call
sti
or
push
cmpb
ret
xor
mov
or
pop
iret
rcrl
cmp
stos
fwait
stos
mov
adc
push
dec
or
popa
out
mov
popf
aad
jnp
aaa
ficoms
out
insb
sbb
mov
gs
shl
push
push
mov
xchg
es
mov
pushf
pop
js
repz
sub
ret
sbb
aaa
xlat
sbb
repnz
pop
in
xchg
xchg
nop
ss
inc
ret
jbe
jmp
cmp
push
pop
ret
in
pop
mov
in
pop
mov
dec
jecxz
int3
mov
xchg
cltd
xorb
inc
jno
mov
jb
test
push
enter
push
push
sub
lods
sti
mov
les
cli
divb
loope
inc
bound
js
hlt
push
cltd
addr16
pushf
pop
jnp
test
push
dec
add
das
mov
jl
inc
loop
mov
shrb
mov
mov
popa
mov
sbb
or
inc
sub
and
inc
bound
or
bnd
mov
fldz
insl
jb
add
xchg
cmp
inc
push
mov
leave
xchg
mov
call
pop
leave
das
lea
data16
aam
dec
popf
inc
mov
lods
sahf
inc
rol
lods
popf
mov
mov
mov
lea
or
jno
lods
sar
dec
and
fs
mov
icebp
mov
hlt
js
and
scas
in
aaa
mov
loop
jne
orl
lret
push
push
or
jmp
xor
leave
add
and
jb
mov
fwait
test
sbb
inc
push
pop
or
roll
outsb
enter
cmp
cld
or
mov
mov
pop
lods
push
rcll
out
into
or
xchg
xchg
xchg
pushf
add
xchg
xchg
mov
in
js
test
xor
and
cmp
push
movsb
mov
pop
mov
lcall
adc
lock
pop
call
sbb
scas
mov
inc
outsl
stc
pop
adc
out
mov
adc
jg
imul
xchg
ja
cli
fwait
loope
lahf
out
decl
fs
test
adc
pop
rolb
sbb
pushl
inc
mov
ret
rolb
nop
stos
lcall
nop
lcall
xorl
xchg
and
out
fcmovnbe
or
insl
jle
lahf
pusha
push
push
adc
jbe
dec
popa
fnsave
rol
enter
add
sub
test
cmp
xchg
mov
xor
cld
xchg
sub
sbb
add
jecxz
ja
flds
pop
jecxz
pop
jnp
enter
mov
pop
loopne
sub
sbb
lods
int3
push
cmc
mov
and
pop
sub
out
mov
adc
outsl
jp
dec
dec
xchg
into
jmp
repnz
or
aas
jbe
mov
adcl
aam
xchg
mov
and
arpl
sbb
movzwl
dec
add
sahf
mov
mov
jp
mov
sbb
mov
jb
orl
inc
outsb
pop
adc
clc
iret
add
addb
popa
push
fbstp
push
cmp
jo
scas
adc
jmp
xchg
shl
add
movsl
sbb
adc
sbb
adc
push
es
gs
xchg
ror
inc
loop
enter
and
sub
jnp
ret
fst
sbb
add
rcl
test
mov
dec
mov
mov
add
jns
cmpsb
imul
out
xchg
mov
xchg
hlt
rorl
fisttps
pusha
loope
push
aaa
dec
inc
test
call
aaa
js
aas
sahf
js
sarl
mov
mov
test
fstp
dec
or
cli
je
push
xchg
add
adc
aaa
in
xchg
cmp
add
fmull
mov
cmp
imul
push
repnz
movsl
outsb
sub
lahf
fiadds
jns
jg
test
adc
or
xchg
aaa
repnz
mov
leave
rclb
out
stos
pop
mov
fsubrl
pushf
push
sbb
pop
mov
or
mov
mov
pop
aas
mov
ss
pusha
das
mov
jno
jecxz
cmc
jmp
add
mov
hlt
push
lcall
mov
hlt
mov
cmpsl
push
lahf
sub
out
inc
sbb
jg
lds
nop
gs
fisttps
aas
and
sbb
gs
je
jne
pushf
aad
mov
daa
call
pop
push
bound
movsb
repnz
cmp
gs
and
xor
imul
hlt
cwtl
stc
gs
outsb
iret
jns
lock
das
and
xor
lret
add
sbb
testl
imul
insl
or
inc
jl
movsb
mov
fs
sbb
lcall
cld
into
ret
mov
xor
stos
push
imulb
scas
pop
ds
fidivrs
xor
sbb
mov
test
and
and
stos
cli
push
sub
mov
xchg
fdivrs
xor
inc
enter
lock
lahf
adc
mov
xor
out
insb
js
jbe
jg
add
stos
imul
jle
jp
leave
mov
or
jbe
mov
dec
mov
sti
call
sbb
fninit
lahf
and
daa
andb
inc
lret
pop
out
loope
sbb
sarb
jmp
daa
out
jge
daa
push
push
lret
pop
inc
stos
pop
xor
ds
fcomi
sub
and
aam
jg
cld
pop
mov
jnp
jno
cld
xchg
cmpsb
push
xor
int3
mov
push
add
enter
mov
cs
loop
into
add
popa
out
addl
pop
xor
in
cmc
mov
inc
dec
sub
xchg
inc
rol
or
arpl
jbe
popa
cmp
mov
pop
inc
gs
movsw
pop
cmp
ss
scas
adc
or
fsubl
lahf
sub
mov
sbb
sbb
xchg
aaa
fstl
into
mov
out
outsl
lret
mov
filds
mov
jge
je
xchg
cmpsb
sbb
ss
shr
sub
push
ds
testb
or
or
add
xor
xchg
mov
in
dec
rcrl
fwait
mov
repz
ret
sub
pop
lret
push
mov
je
mov
dec
mov
sub
push
out
xor
scas
sub
clc
and
push
xchg
cmp
addr16
inc
int
dec
inc
fstps
xchg
les
jmp
std
mov
push
or
lods
or
imul
jecxz
jge
cld
verr
jns
cltd
pop
xchg
lret
push
out
lock
pop
stos
cmp
shr
and
cmp
push
insl
icebp
imul
push
inc
sahf
xor
es
add
popf
jle
push
aas
and
mov
sub
lahf
adc
in
jno
inc
pop
pop
inc
adc
push
sti
cmpsl
sub
pop
cmp
jno
rcrl
dec
ds
and
jbe
ret
push
mov
push
jl
mov
pop
fadds
dec
stos
shlb
add
mov
dec
mov
repnz
roll
scas
cmovge
push
cmp
scas
and
push
fwait
into
stos
leave
lret
test
jp
mov
jmp
enter
inc
lods
mov
pop
hlt
xor
popl
xor
fdivs
fcmovnbe
jmp
lret
mov
pop
xchg
xchg
scas
mov
leave
mov
pusha
clc
add
cmp
push
arpl
mov
addr16
sbb
xchg
cmp
popa
cmp
loope
push
mov
inc
addl
adc
mov
jge
dec
push
lcall
test
les
dec
in
pushf
inc
test
test
movb
pop
xchg
cmp
adc
lea
das
cmp
ljmp
mov
mov
leave
in
sar
lahf
push
scas
mov
in
jmp
inc
mov
or
pop
push
ret
orl
fld
idivb
arpl
daa
sahf
push
lea
shrb
icebp
sbb
je
into
pop
mov
jnp
cmpb
push
jecxz
data16
inc
mov
repz
xchg
dec
repnz
mov
leave
fwait
jb
mov
gs
int
icebp
xchg
adc
push
xchg
cmp
cmp
in
imul
cmpsb
push
jl,pn
cmp
mov
dec
xor
cld
loope
pop
out
rcrb
xor
inc
lahf
adc
cwtl
push
sub
icebp
mov
mov
fs
andl
pop
aam
stc
sbb
add
inc
psllw
subl
dec
pop
aad
insl
jg
sub
hlt
ja
inc
fsubrp
mov
popf
icebp
lret
xchg
cmp
adc
stos
or
jmp
mov
sub
push
les
mov
insb
xchg
inc
cli
lret
xchg
aam
leave
mov
stos
popa
addr16
lea
ds
fldenv
cli
scas
movsb
dec
in
pop
gs
xor
mov
sub
add
das
pop
xchg
adc
xchg
test
or
xor
cmp
sub
adc
es
dec
xor
xor
xchg
imul
push
pushf
adc
in
je
pop
cmp
cmp
repz
movl
xlat
mov
ja
adc
lock
and
mov
inc
adc
scas
lods
sub
sbb
scas
mov
sbb
ja
inc
adc
out
sub
add
orl
fldl
sub
es
movl
lds
dec
repz
adc
popf
dec
outsl
sub
repz
stos
inc
repz
je
cmp
push
push
dec
sahf
mov
add
es
mov
cwtl
inc
jmp
xor
inc
and
aaa
loop
loop
sub
dec
out
cld
sbb
cmp
pop
mov
arpl
xor
lret
adc
iret
insb
xchg
lret
loop
sti
push
xor
mov
sub
outsl
mov
movsb
fwait
daa
xchg
rcrb
fldl
dec
test
mov
mov
or
daa
incl
inc
aad
test
cltd
adcb
negl
test
mov
sarl
mov
xchg
mov
loop
mov
mov
or
push
push
mov
lret
stos
flds
pop
push
jmp
inc
lahf
fstl
push
ljmp
push
or
sub
dec
adc
adc
pushf
sub
and
pop
adc
cmp
push
fimull
xchg
lea
daa
jg
or
cmp
imul
imul
inc
les
cmc
insb
iret
push
lret
inc
jbe
daa
fptan
repz
sub
scas
cmp
cmp
dec
or
jbe
rorb
jl
jg
out
push
cmp
cmpsl
loop
mov
ds
icebp
dec
cmc
andl
jl
push
xchg
cld
test
sbb
nop
mov
mov
mov
imul
nop
jns
nop
inc
lods
mov
fnsave
cmpsl
in
jns
scas
sbb
gs
sbb
sarl
shlb
jle
int
mov
ret
cld
sbb
adc
adcl
call
pop
dec
cltd
mov
xor
push
sbb
data16
mov
mov
in
pop
movsw
sbb
enter
mov
pop
sbb
rorl
xchg
inc
inc
xor
inc
push
lods
test
clc
insb
cvttps2pi
jns
ret
cmp
lods
or
and
divl
jo
mov
jns
jl
in
mov
cltd
popf
or
cltd
pusha
shlb
sbb
sbb
sbb
sbb
dec
enter
and
lock
mov
nop
test
lods
scas
or
mov
jl
jmp
dec
test
mov
mov
xor
scas
jle
mov
stos
notb
fwait
or
loop
pop
ret
das
xchg
and
sub
fimuls
or
movsl
adc
adc
fnstcw
nop
ret
push
mov
decl
int3
xchg
inc
mov
popa
insb
insb
xor
jp
mov
subb
mov
sub
cli
sbb
dec
dec
sbb
sbb
and
push
and
cwtl
fcoml
dec
jne
cmp
filds
int3
lahf
in
mov
rol
xchg
jnp
jnp
xlat
add
cli
inc
imul
mov
mov
xchg
adc
repz
gs
adc
lret
xchg
jno
orb
movsb
sub
jae
loopne
mov
leave
mov
ds
xchg
clc
mov
cmpl
xor
push
jg
stos
sbb
xor
hlt
and
sub
ficomps
or
scas
fmuls
adc
cmpsl
int
lahf
stos
adc
test
cli
shlb
out
cltd
frstor
mov
xor
call
mov
dec
pop
inc
xchg
and
cmp
daa
imul
and
add
faddl
mov
and
fildll
test
cmc
xchg
hlt
cmpsb
fdivs
sar
sti
and
test
jp
or
adc
mov
pop
sahf
jmp
lea
fs
daa
and
mov
aad
push
outsb
adc
cmp
pop
rep
test
mov
dec
imul
das
enter
ret
dec
out
bound
imul
pop
fcomp
loopne
ljmp
xchg
sbb
add
js
loopne
mov
addl
rolb
pop
jae
jno
fstp
shll
mov
or
dec
dec
fwait
sbb
adc
aam
or
ss
xor
jnp
pop
daa
mov
xchg
dec
cmp
sub
movsb
sub
sbb
push
xchg
icebp
pop
in
nop
fbstp
cltd
ss
cmpsl
shl
subb
xchg
xchg
xor
xchg
push
push
mov
int
dec
push
test
imul
sti
pop
cmp
xor
je
xchg
mov
shrl
das
xlat
div
or
in
jl
sub
es
outsb
fbld
cs
jle
jmp
inc
call
pop
mov
or
flds
stos
jl
xchg
xorb
imul
xor
mov
pushf
mov
lcall
and
push
and
mov
mov
mov
fildll
and
dec
jo
adc
mov
orb
cmc
mov
rcrb
loopne
xchg
testb
dec
fimuls
sbb
inc
pop
sub
mov
push
pop
jb
pop
mov
in
push
add
out
jno
out
repnz
mov
gs
daa
pop
sarb
or
inc
dec
fstps
loop
mov
pop
mov
incb
cld
mov
push
fists
xor
xchg
push
push
jl
dec
adc
dec
outsl
mov
mov
rolb
adc
mov
cmp
loop
imul
dec
cvttps2pi
cmp
cmp
push
mov
xor
xor
pop
push
je
outsb
enter
and
negl
imul
ss
aaa
ss
inc
aad
xchg
rclb
ret
clc
sbbl
ret
iret
js
mov
mov
mov
out
sbb
icebp
and
icebp
pop
add
fadds
add
and
cltd
enter
adc
repz
xchg
cmp
popa
mov
xchg
inc
cmpsb
es
arpl
hlt
or
popf
lar
popf
test
lret
sub
xor
test
jg
cmp
mov
cs
xor
icebp
les
inc
cmp
aad
push
push
movsb
xor
hlt
scas
cmp
fnstsw
mov
sub
cs
pop
inc
ret
test
mov
addr16
xor
jbe
sub
mull
pop
insb
inc
mov
imul
pop
mov
mov
pop
xlat
sub
mov
sub
and
push
aas
idiv
lea
repnz
cli
je
mov
testl
enter
mov
dec
stos
inc
stos
xlat
sbb
xchg
mov
mov
sub
lahf
orb
sbb
mov
rol
and
repz
enter
jae
je
pushf
enter
push
leave
nop
imul
cwtl
insl
jle
fimuls
dec
mov
mov
adc
imul
lods
pop
push
xor
pop
jl
mov
or
push
stos
lock
and
jle
cmp
sub
loop
mov
jns
mov
shll
cwtl
clc
or
xchg
push
fdivrl
sahf
add
stos
loop
inc
bound
in
ret
xchg
mov
stos
pop
sbb
shll
cmp
fcmovnu
mov
out
fsub
push
cwtl
stos
call
test
xchg
stc
dec
cmp
mov
inc
mov
outsb
ret
sahf
lds
xchg
jl
ror
pusha
mov
jne
pusha
push
call
mov
test
fistps
fs
mov
mov
jno
sub
add
cmp
push
ficomps
mov
and
inc
jbe
cmp
or
jb
out
jnp
mov
pushf
sub
lods
mov
inc
and
test
xchg
andl
push
push
es
push
inc
filds
push
jno
inc
jns
cmp
bound
addl
jb
loop
dec
sbb
daa
cmpsb
pushl
add
cs
fdivr
jns
out
scas
mov
xchg
add
sub
sarb
test
cltd
xor
add
imul
mov
xchg
outsb
sbb
cld
pop
ret
imul
dec
std
mov
fdivrl
fstps
or
mov
sbb
pushl
leave
adc
lcall
out
mov
xlat
scas
push
add
fidivs
stos
jmp
sbb
sbb
xor
push
mov
hlt
mov
into
mov
nop
imul
outsb
ret
repz
repz
outsl
sbb
aad
es
push
in
repz
jecxz
adc
imul
jns
xor
and
sub
sbb
mov
jnp
lret
aas
sarb
inc
andb
movsb
mov
jo
add
pop
scas
out
sbb
inc
inc
mov
adc
mov
cmp
test
lods
stos
outsb
movsb
cmp
and
xchg
movb
icebp
in
ret
inc
test
fdivrs
scas
xchg
popa
inc
xlat
imulb
cmpsb
add
mov
and
inc
test
xlat
mov
and
repz
inc
std
dec
fisttpl
rcrb
push
jecxz
insb
xchg
or
or
popa
aaa
mulb
xchg
jmp
mov
sub
int3
jb
fs
xchg
outsb
jmp
inc
sbb
inc
cmc
fstl
jae
shl
fwait
jbe
mov
inc
cmpsb
mov
sub
add
faddl
push
inc
mov
lea
xchg
inc
mov
repnz
jge
jae
aam
xor
push
adc
ret
pop
in
pushf
dec
aam
fnstcw
testl
jae
xor
mov
jbe
xchg
ret
adc
xchg
orb
xlat
jbe
repnz
addb
push
dec
add
cwtl
dec
sbb
xchg
jecxz
fistps
pop
pop
push
test
xor
out
loopne
es
out
and
gs
xchg
out
jns
aam
rcll
mov
sub
cmpsl
test
dec
sbb
pushl
xchg
push
push
sub
dec
outsb
jb
xchg
cmpsl
or
or
xchg
or
fwait
xchg
jae
sarl
aad
add
repz
fisubrs
fmuls
and
sub
ss
mov
cwtl
cmpsl
outsb
inc
inc
call
mov
ljmp
pop
hlt
cwtl
fmul
jnp
jg
mov
jecxz
push
mov
push
mov
ja
or
loopne
pop
cmp
fadd
push
sarl
xchg
jo
jo
int3
addr16
push
shl
mov
ret
fnstsw
jmp
cmp
mov
notl
push
cltd
push
jg
mov
jmp
ds
push
mov
fisubs
iret
fstpl
mov
mov
mov
out
jo
stos
or
es
cmp
dec
pop
and
sbb
dec
fcoml
mov
cli
ds
in
xor
scas
loope
fisttpll
mov
setle
loop
je
sbb
mov
orl
push
sbb
mov
js
cs
jle
pop
mov
pusha
std
xor
jno
dec
sbb
popa
mov
test
aas
cmpsb
ficoml
fmull
addr16
or
add
filds
pop
inc
aas
lock
cmp
shll
xchg
jne
test
xchg
lock
test
sub
xchg
pop
dec
jo
sub
in
cmp
cmc
scas
lret
sub
mov
dec
fstpt
int
mov
iret
inc
leave
sbb
dec
or
xor
xchg
jno
dec
imul
ret
mov
mov
cmp
push
ret
rclb
xor
stos
ror
pop
pop
ret
xchg
int
xor
dec
adc
dec
aad
adc
data16
sub
in
cld
jg
xor
pop
mov
xlat
or
sbbb
mov
and
mov
xchg
cld
mov
repz
sub
xor
adc
out
push
adc
fs
aaa
cmpsb
test
ds
mov
sub
rcll
xor
mov
xor
aad
insl
mov
pop
mov
jp
mov
pop
mov
sahf
pop
loopne
cmpsl
out
fsubs
in
push
adc
push
pop
inc
and
sbb
dec
sbb
cmpsb
in
arpl
jae
add
subb
mov
jo
adc
inc
pop
lahf
or
mov
jecxz
cmp
in
dec
mov
jge
test
mov
imul
xor
jae
shlb
xchg
cwtl
adc
xchg
cli
divb
mov
shll
push
xor
sbb
jge
add
cmp
inc
or
mov
movsl
test
mov
mov
leave
jbe
inc
ret
scas
dec
aas
cmpsl
out
out
in
jb
jns
mov
push
jmp
ljmp
xor
nop
lds
shrb
and
mov
sbb
xchg
lds
pop
jne
dec
icebp
mov
inc
jns
pop
std
lds
cmp
sub
dec
jmp
push
pop
push
rolb
xor
movsl
or
fisubs
ljmp
mov
lds
pop
pop
jp
inc
inc
pop
rcl
mov
cmp
xchg
lods
roll
stos
cmp
or
lahf
adc
ss
or
mov
add
jg
out
daa
push
xor
mov
xor
adc
int3
popf
xchg
cmpsl
dec
ret
cld
ljmp
sbb
js
imul
testl
arpl
cmp
loopne
dec
inc
jb
adc
jno
or
ja
adc
leave
test
clc
insl
jae
inc
jno
xchg
std
enter
dec
dec
pop
cli
std
insl
and
mov
jb
jl
add
aad
xchg
in
inc
ds
sahf
mov
aam
adc
mov
shlb
popf
push
and
mov
dec
mov
inc
inc
and
scas
dec
and
rcrl
push
icebp
insb
ret
jae
shll
or
insb
mov
cld
imul
jmp
in
aam
es
into
mov
or
fstpt
xor
adc
outsb
jle
icebp
insb
pop
or
cmp
jg
es
adc
mov
iret
sbb
inc
pop
xor
lret
ljmp
pop
mov
and
loop
sub
into
sbb
std
xchg
filds
mov
xor
mov
subl
out
add
mov
ljmp
pop
idivl
add
sbb
jb
xor
push
xor
cmp
mov
sbb
jge
and
push
into
lds
les
sbb
push
inc
aas
mov
aam
cmp
js
in
sub
jg
pop
int
and
mov
fcoml
and
cmp
xchg
ret
mov
inc
or
repz
fldcw
jmp
and
dec
lret
cmpsl
xor
hlt
sub
loope
mov
mov
pop
lock
adc
push
push
sub
jno
and
clc
movsl
daa
ret
adc
cmp
pop
pop
inc
cmpsl
es
add
out
mov
push
or
ljmp
push
pop
mov
jmp
mov
xor
clc
xchg
add
je
cmp
fimull
adc
fidivl
mov
mov
mov
stos
sub
pop
testl
sub
shl
push
sbb
outsb
or
aaa
nop
sbb
insl
inc
sahf
ja
test
add
filds
dec
sti
imul
xor
out
loope
add
stos
jmp
fwait
cmp
fmull
mov
mov
test
insb
pushf
fwait
push
test
pop
outsb
fnstcw
sub
jl
pop
push
in
mov
in
mov
sub
ds
hlt
mov
jle
fisubs
ficoml
out
test
int3
or
mov
add
sbb
cmp
xchg
ret
lret
frndint
fisubrl
roll
jg
icebp
test
ret
daa
mov
cmp
mov
cwtl
addr16
dec
inc
movzbl
jp
inc
inc
mov
fidivrl
out
and
sti
push
jae
push
aam
ja
adc
sbb
cltd
rorb
lcall
int
cmp
mov
fildll
ja
daa
mov
and
stc
cmp
ljmp
loope
test
pop
inc
cmc
stos
xchg
sti
fsubl
dec
out
cmp
mov
les
xlat
or
mov
xor
aam
pop
jbe
rorl
cmc
shlb
cli
jbe
pop
push
int
sbb
adc
adc
sbb
fdivrp
popf
jg
add
xor
jb
or
inc
pop
mov
cltd
jle
cld
lods
js
lds
xor
minps
sbb
xor
cmp
stos
test
push
dec
je
je
inc
mov
jnp,pt
std
mov
sti
movsb
and
cs
adcl
insb
dec
leave
inc
lock
add
add
movsb
jmp
scas
inc
repnz
pop
and
pop
dec
jle
nop
cmp
xchg
mov
mov
enter
stos
idivl
and
lret
int3
into
pop
lock
sbbl
std
lea
xchg
adc
jl
lahf
mov
inc
adc
and
call
and
mov
xor
inc
and
mov
dec
inc
insl
mov
push
mov
push
push
das
xchg
add
sbb
ret
push
mov
xchg
loope
out
xchg
and
arpl
adc
iret
aad
loope
inc
inc
push
out
or
insb
add
popf
xchg
xchg
fdivrp
inc
mov
rcr
add
ljmp
xchg
xchg
push
or
scas
push
adc
cmp
fimuls
pop
push
cmp
flds
or
push
jp
ret
jno
add
cmc
iret
cwtl
rcrl
dec
andl
jge
imul
xchg
movsl
popa
enter
fcomps
std
aaa
std
mov
cmp
dec
enter
push
mov
inc
push
dec
out
int3
shll
leave
push
dec
in
jno
sbb
das
mov
jg
ds
jmp
test
fs
mov
fs
cmc
mov
je
xlat
rclb
in
mov
dec
in
test
push
add
xor
sbbl
adc
loopne
clc
leave
out
loopne
lret
imul
fst
adc
stc
xchg
sub
aad
test
pop
and
in
hlt
jle
sbb
ds
adc
popa
push
pop
ja
sub
pop
mov
es
jl
mov
xorl
and
push
push
adc
rorl
dec
mov
sub
mov
jmp
and
jnp
pop
pop
dec
test
gs
lods
in
pusha
sub
pop
push
jecxz
inc
adc
repz
mov
scas
jp
cmp
in
and
mov
in
mov
push
pop
or
and
push
test
nop
and
mov
mov
mov
out
jns
mov
jle
insl
lret
leave
cmp
nop
add
pop
pop
mov
pusha
ljmp
test
inc
mov
lea
in
xor
push
sti
xchg
repnz
jp
loop
xchg
or
shl
cmpsl
hlt
fdivr
test
or
xor
jge
movsb
imul
scas
loop
and
das
pop
pop
sub
out
dec
rol
call
test
adc
sbb
dec
cmp
dec
insb
popf
or
bound
out
inc
ja
cld
adc
add
xlat
std
in
jp
pop
mov
adc
mov
or
test
rcl
adc
mov
fildll
cmpsl
mov
push
insl
scas
push
loop
mov
push
lods
inc
mov
mov
dec
rolb
lcall
mov
decl
ss
ret
repz
sarl
incl
lods
into
sub
pushf
pushl
mov
adc
or
dec
xchg
fdivs
lcall
push
notb
mov
mov
out
movsl
pop
or
mov
cmp
insl
cmpsl
arpl
es
daa
outsl
lahf
call
ficomps
sbb
movsb
push
push
outsb
mov
sbb
pop
scas
fdivs
or
pop
stos
jle
xchg
lds
adc
sub
or
sbb
push
cmpl
cmp
enter
inc
mov
dec
and
add
nop
push
mov
jo
xchg
or
add
sbb
sbb
lods
mov
xchg
icebp
jns
cwtl
imulb
imul
bound
imulb
sub
add
mov
and
fnstsw
outsb
les
lock
and
rcrb
mov
rcr
shl
dec
and
popa
hlt
and
add
push
leave
fwait
inc
lcall
dec
shrb
adc
lret
movsb
pop
daa
inc
fdivrl
lea
cwtl
fisttpll
movl
mov
cltd
mov
rcrl
icebp
jge
push
out
std
sub
xchg
in
int3
xchg
push
sub
jg
loope
pop
mov
fucomp
nop
pop
dec
std
mov
jbe,pn
jbe
daa
cmp
jae
clc
mov
bound
data16
jg
cmc
fsubrs
out
inc
mov
push
sub
stos
popf
sahf
mov
addr16
test
mov
inc
cmc
outsl
dec
sarb
loop
jmp
ret
jp
dec
mov
inc
std
or
imul
cmpsl
insb
out
mov
mov
cli
mov
mov
fistpll
mov
jo
loop
addr16
cltd
sbb
inc
sub
int
in
sbb
loope
push
dec
push
movsb
mov
pop
cli
xchg
adc
pop
cmc
xor
sti
dec
xchg
xor
dec
inc
js
sub
sbb
mov
or
sub
addr16
call
pop
cmpsb
cmp
mov
movsb
inc
lods
scas
jo
dec
jmp
push
xor
jno
mov
stc
and
xor
sbb
aad
or
adc
inc
js
push
inc
lret
cmp
sub
lcall
andl
xchg
xchg
adc
lods
lea
std
push
mov
push
dec
sub
add
cli
bound
pop
hlt
call
pop
movsl
xchg
cmp
in
cmp
repnz
leave
mov
rorb
xchg
add
addl
cmp
sub
cmpsl
ja
pop
fs
filds
cs
pop
xor
cld
sub
push
push
push
inc
push
or
jne
pop
xor
insb
shr
dec
jecxz
outsl
mov
fdivrs
xchg
mov
inc
mov
loope
rcrb
sub
int
ret
push
hlt
ret
cmp
dec
arpl
jno
push
sahf
mov
pop
fnsave
mov
data16
imul
jg
mov
jle
out
sbb
inc
sbb
jne
out
xchg
xor
fadd
mov
rorb
stos
sbb
adc
jle
push
stos
jbe
rcrb
jg
pop
icebp
int
adc
in
subl
mov
xchg
repz
scas
cmc
js
and
cli
sub
xchg
outsl
or
sub
push
stc
or
sbb
push
pop
push
stos
out
movsb
inc
rorb
cli
lret
xchg
push
jmp
inc
mov
and
loop
out
sub
shrb
adc
aas
xor
sbb
add
sti
in
adc
ja
ret
cli
add
insl
adc
push
cld
movsb
in
push
mov
jno
adc
inc
fisubrs
mov
cmp
repz
faddl
les
int
stc
and
in
mov
pushf
mov
loopne
add
mov
and
int3
xchg
insl
cmp
push
stc
xchg
addl
in
xorl
or
scas
pushf
xchg
movsb
int3
mov
jns
cmp
xor
js
or
xlat
sub
mov
mov
sub
push
gs
push
inc
mov
loop
cmp
call
push
sbb
xor
fnstsw
jl
cmp
inc
cmpsl
sub
push
popf
jl
jo
mov
sub
cmpsb
dec
les
repz
negb
pop
es
std
xor
addl
lods
mov
jo
cmpsb
sbb
into
mov
add
ss
mov
clc
cmp
xchg
inc
imul
rcll
loop
xchg
repz
mov
add
mov
or
fadd
mov
dec
mov
sbb
mov
cmpsl
mov
xlat
push
mov
pop
ds
sub
insl
aaa
push
and
mov
fildll
xor
adc
out
in
data16
cwtl
call
adc
cmc
add
sub
sub
in
push
sbb
repz
repnz
pop
in
je
sub
add
dec
gs
and
xchg
cmpl
adc
jecxz
jle
or
loopne
imul
mov
jecxz
dec
xor
fwait
cmp
addr16
lcall
mov
lds
pop
push
push
cmp
cmp
fsubp
out
dec
ja
adc
sub
int3
mov
xchg
pop
jbe
imul
cli
jae
shlb
out
fistps
mov
or
inc
or
jmp
and
fisttps
add
cmp
int
xchg
fmuls
cltd
vcvtss2si
cmpsl
ljmp
xchg
cmp
and
jbe
icebp
daa
cmpsb
jge
or
push
aas
leave
push
mov
xor
push
aaa
loopne
popa
inc
inc
jge
das
mov
dec
sbb
inc
add
fisttpll
dec
and
fwait
and
adc
mov
and
popa
xchg
mov
lret
nop
addr16
pop
mov
add
xchg
test
aas
inc
cmpsl
pop
push
loopne
or
mov
into
cld
insb
int3
cld
or
mov
mov
xchg
fcomps
shl
ret
mov
pop
pop
and
pop
inc
cltd
sbb
fwait
adc
popf
pop
adc
insl
sbb
scas
fsts
in
nop
sbb
enter
shlb
inc
and
inc
and
int
dec
pop
sub
into
inc
jae
jbe
sahf
sub
push
scas
jae
push
mov
inc
sbb
push
jl,pn
hlt
or
repz
arpl
mov
movl
arpl
jns
sbb
and
mov
mov
ds
scas
stos
cmp
and
add
stos
les
inc
inc
jns
and
lahf
push
push
sahf
js
mov
stos
lods
mov
mov
jge
pusha
mov
in
jno
pusha
out
ret
loopne
jg
mov
mov
seta
filds
loope
js
inc
adc
add
inc
aaa
ret
pop
lock
push
xor
sbb
xchg
sbb
fildl
pop
push
or
arpl
les
shrl
int3
inc
add
dec
jb
cmp
loop
lret
rolb
xor
je
movsl
pushf
ret
xor
inc
mov
jg
lds
and
testl
dec
inc
adc
sbb
mov
mov
outsl
mov
pushf
sbb
das
pop
sub
adc
mov
dec
add
movsl
xchg
xchg
mov
inc
call
in
daa
dec
in
dec
jge
ja
js
push
lods
xor
sahf
pop
dec
test
aaa
dec
vpextrw
mov
xlat
test
mov
jne
cmpsb
les
xor
add
cltd
repnz
es
xor
psubb
lahf
sub
les
movsb
fldt
int3
shll
add
and
mov
cmpsb
sub
scas
iret
xor
shlb
mov
std
fistl
cmp
sbb
outsl
push
ret
and
movsl
cmpsl
mov
inc
sbb
into
jg
and
dec
or
jbe
or
fildl
adc
push
xor
orl
addr16
lods
and
mov
jle
inc
in
inc
cmp
xchg
test
cmpsl
xor
loop
ljmp
loop
sub
icebp
push
jl
outsb
cmp
cmp
and
sbb
cmp
sahf
and
sti
pop
xor
xabort
push
dec
fisubrl
fwait
sbb
xor
into
div
or
es
cmp
xchg
and
inc
xor
inc
scas
jns
jl
push
rorb
push
scas
and
adc
int3
lea
lods
or
es
or
dec
cld
adc
xor
in
mov
js
and
xchg
jecxz
out
jno
pop
std
test
loopne
shr
les
pop
aam
sti
jo
outsb
cwtl
fsts
ljmp
lret
in
stc
movsb
mov
jno
gs
stos
test
jnp
sbb
push
sbb
lret
and
test
mov
jo
sub
in
ljmp
mov
rolb
jge
adc
sbb
pop
gs
repz
push
aas
mov
les
push
mov
fwait
add
pop
or
andl
mov
mov
and
test
push
xor
mov
icebp
pop
push
js
adc
cmp
xor
setae
cwtl
push
xchg
sub
push
dec
mov
jns
cmp
jmp
scas
hlt
sub
inc
add
pusha
movsl
enter
popa
mov
pop
movsl
pop
daa
popf
sub
icebp
int
scas
fwait
mov
lods
xchg
rcl
xlat
pop
repnz
jbe
lret
ljmp
dec
gs
lods
sbb
jo
push
mov
mov
insl
and
cmpsl
push
pushf
jmp
inc
pop
xchg
xchg
out
or
clc
enter
adc
icebp
movsl
pop
mov
mov
iret
mov
mov
scas
fsubl
pop
add
and
pushf
add
pop
cli
in
das
dec
xchg
pop
sahf
jmp
xor
es
repz
push
lret
imul
leave
iret
push
js
xlat
push
hlt
mov
addr16
or
loope
cwtl
fimuls
call
sub
xor
ds
xchg
mov
pop
mov
adc
ds
lods
xor
loopne
cmp
inc
in
in
jmp
outsl
cmp
cmp
jmp
sahf
addr16
nop
ret
inc
addr16
cmp
rorb
movsb
or
bound
cmc
test
test
xchg
add
and
push
out
aad
jge
sbb
mov
mov
mov
int
jmp
adc
cli
inc
or
adc
aas
repnz
push
je
add
fidivrs
dec
xor
mov
push
aam
fsubl
call
rep
xrelease
sahf
aad
xchg
lock
out
cmp
inc
aaa
jne
or
push
fnstenv
repz
aam
adc
xor
or
aaa
das
lea
sbbb
ret
push
jmp
addr16
inc
xor
stos
pop
leave
popa
imul
xor
enter
push
je
je
adc
in
xor
push
sbb
adc
pop
aam
cmp
cli
outsl
fsts
xor
in
and
js
ljmp
xchg
les
mov
mov
mov
adc
dec
mov
std
adcb
cltd
nop
imul
jb
mov
xchg
jb
mov
loop
les
ret
cli
pop
inc
daa
add
test
aas
aad
shlb
loope
and
jge
xchg
icebp
mov
call
sbb
jns
jl
inc
adc
test
call
cltd
hlt
adc
stos
cmp
icebp
cmp
sub
add
dec
jl
cld
aaa
into
sub
jb
inc
xchg
shrb
or
and
mov
js
fldcw
add
and
mov
mov
andl
cmp
out
loopne
cmp
imul
xchg
mov
stc
aam
mov
dec
in
pop
shrl
jb
pop
fstp
xchg
push
mov
sbb
mov
xchg
sbb
xchg
jge
xor
je
rsm
push
lcall
sbb
or
add
sub
mov
imull
xchg
int
and
fwait
mov
lcall
cmp
dec
and
outsl
adc
shll
out
sub
mov
jle
cmp
ljmp
cwtl
popl
aad
sahf
test
pop
inc
push
xchg
inc
scas
loope
inc
adc
rcll
fiadds
cmp
mov
jae
sbb
mov
cmp
sub
gs
cmc
mov
jb
popf
js
mov
test
outsl
subl
cmp
adc
lret
dec
sbb
pop
aas
jge
in
pop
stos
sbb
int3
jno
xor
int
xchg
mov
or
push
xor
out
data16
iret
aam
jae
and
rcrl
sbb
dec
adc
sbb
addr16
stos
pop
xor
out
rorb
cli
sbb
gs
mov
pop
imul
push
jae
pop
push
daa
mov
lods
dec
push
mov
mov
jnp
and
outsl
loop
jp
shll
in
aas
and
jne
cli
in
or
imul
dec
lods
and
jb
sahf
push
loope
daa
aas
and
sbb
dec
insb
mov
mov
and
loopne
les
fisttps
dec
add
xchg
bnd
sti
jne
sbb
lret
fmuls
or
jb
int
movsb
push
xor
jns
imul
or
out
mov
mov
outsl
cmp
xor
mov
rclb
leave
out
mov
xor
int
mov
das
mov
mov
mov
xchg
in
sbb
ret
or
repnz
sub
xor
pop
aas
mov
adc
fnstcw
inc
pop
lock
out
cwtl
xchg
xor
push
sub
inc
xchg
lock
pop
xchg
sbb
stc
outsl
stos
add
xorl
and
jbe
add
push
dec
repnz
add
out
mov
loop
fildll
stos
sub
jno
and
dec
cmc
pop
mov
aas
daa
jo
mov
lods
jo
jo
nop
das
pop
mov
lock
xchg
cmc
mov
pusha
sub
scas
aaa
push
outsb
sbb
jecxz
inc
pushl
jno
xor
sbb
cld
icebp
nop
out
test
fwait
xor
into
add
push
cmc
jnp
out
loop
fwait
push
lret
jmp
and
imul
fs
and
idiv
mov
pop
push
pop
pop
mov
stc
sbb
lret
push
fdivr
xor
dec
cld
xor
and
add
loopne
sub
ret
add
aas
fs
dec
arpl
out
jnp
pop
jb
mov
inc
xchg
imul
xor
jg
stos
or
lea
ds
xchg
xchg
js
iret
xor
and
ret
and
sub
sub
pop
pop
push
fsubr
mov
sub
jecxz
arpl
lret
call
ja
add
aad
icebp
scas
inc
mov
push
add
push
ljmp
int
out
in
push
call
add
xchg
fs
inc
fwait
ss
jb
push
push
lret
cs
addr16
cmp
ja
aas
jo
mov
fcomp
std
dec
lea
jo
filds
push
mov
cmc
jnp
push
js
mov
fadds
stos
lret
loope
mov
push
jg
ret
insb
inc
xor
xor
lods
mov
mov
jne,pt
inc
pop
arpl
and
adc
adc
fisubl
sbb
or
into
mov
jb
sub
pop
push
cmpsb
into
lcall
mov
clc
mov
xchg
rcr
test
ljmp
cmpsb
test
dec
test
jo
xchg
xlat
insl
or
notb
or
mov
jne
sub
xor
mov
push
jl
jecxz
out
push
or
fdivrs
add
cmp
jae
sub
out
movsb
lea
bnd
sti
pop
mov
sub
ds
and
js
jg
xchg
jbe
out
pop
and
push
mov
test
or
fst
ret
enter
lcall
xchg
mov
mov
arpl
inc
pop
push
dec
sub
cmp
push
mull
repz
ljmp
adc
inc
pop
mov
sbb
lds
inc
sahf
xor
insl
dec
lret
testb
sbb
ds
faddp
push
sub
inc
mov
sbbl
scas
stc
call
jno
pop
mov
dec
stc
inc
dec
leave
incb
cmc
test
jne
sbbl
pop
and
jae
bound
aam
inc
test
jae
push
jae
fdivl
inc
adc
fwait
jmp
jl
dec
test
fcomps
decl
pusha
rcr
sub
mov
lret
es
mov
cmc
decb
iret
xchg
pop
adc
cmpl
test
aad
inc
add
mov
adc
cmp
xor
mov
xor
jno
pop
mov
repz
jmp
jge
repnz
hlt
fistpl
mov
add
out
jl
cltd
gs
inc
mov
outsb
mov
xlat
xchg
repnz
dec
jge
hlt
push
push
nop
out
cli
adc
mov
popf
push
notl
adc
imul
shrl
cmpb
sarl
xchg
mov
push
popl
cmp
fcmovu
out
adc
adc
das
lds
loopne
ss
lret
push
inc
pop
adc
ja
imul
or
mov
aad
jae
addr16
mov
loopne
add
test
pop
xchg
test
movsb
sub
stc
jae
out
mov
mov
add
mov
xor
jg
cs
addr16
jp
stos
xor
pushf
pop
mov
push
jae
mov
add
xchg
lret
test
xchg
les
popl
ret
jo
push
mov
xchg
xor
daa
out
cmp
add
rcrb
sbb
or
lret
loopne
sbb
adc
imul
ds
mov
subb
test
fwait
push
out
nop
jno
or
jge
leave
add
mov
or
inc
outsl
loope
inc
pop
aaa
mov
fidivs
xor
stc
int
mov
pop
pop
add
mov
inc
nop
and
call
fwait
shll
and
mov
inc
setb
inc
push
cld
cmp
xor
out
add
xchg
sti
into
icebp
filds
sbb
or
sub
popa
stc
mov
and
xchg
mov
cmp
stos
out
xorb
cld
xchg
push
cmp
pop
xchg
fwait
push
or
push
push
cmp
add
inc
jb
or
pop
add
scas
mov
shrb
sahf
xchg
push
push
fadd
stos
dec
cmp
int
sbb
push
in
jns
jp
stc
in
or
into
cmp
mov
add
adc
cmpsb
and
cmp
bound
stos
add
scas
imul
sbb
jne
sub
mov
imul
push
cmp
jmp
mov
popf
fwait
mov
lar
xchg
or
call
imul
adc
cmp
lret
test
int3
cli
mov
in
or
push
ror
xchg
lea
mov
and
cmc
stc
jnp
clc
pop
pop
enter
mov
adc
and
rclb
jo
enter
push
lods
jge
mov
fstpt
adc
pop
jge
std
stc
in
xchg
call
aad
aam
pop
cmp
jg
insl
imul
into
adc
lcall
or
xchg
loop,pn
sbb
cwtl
lret
fnstsw
in
movsl
or
push
inc
jno
nop
lahf
jnp
shll
rcrl
mov
lea
inc
lret
add
mov
cmc
cmp
cld
in
xor
pop
jg
arpl
mov
mov
nop
push
mov
push
out
sbb
and
push
pop
xor
test
pop
mov
daa
arpl
mov
fbld
mov
mov
mov
int3
xlat
insl
or
clc
stos
add
std
xchg
bound
sub
sti
das
rorl
push
mov
or
push
fwait
das
mov
scas
xchg
shrl
push
ss
mov
xor
enter
fsubl
clc
in
stc
jns
clc
push
addr16
mov
lds
xor
and
lds
xlat
or
xlat
push
sbb
repz
stos
rorb
adc
xchg
push
test
push
outsl
imulb
lahf
mov
pop
xor
mov
pop
push
pushf
ljmp
scas
pop
adc
dec
sahf
es
mov
xor
loop
lock
and
aad
push
cli
pop
in
push
add
cmp
jns
scas
mov
push
or
lahf
xchg
or
inc
mov
pop
ljmp
xor
push
popf
in
mov
and
rsm
scas
dec
adc
inc
shrb
sbb
test
stos
jbe
in
mov
pop
jo
in
das
cmpsb
push
iret
outsb
xlat
cmc
outsb
or
and
or
outsb
pop
sub
jp
fists
fldcw
outsl
jp
inc
xor
lock
inc
cs
adc
sbb
cmp
xchg
xchg
loope
ror
mov
push
sub
sbb
stos
pop
mov
pop
sahf
push
sub
fwait
add
cmp
fsubr
push
sbb
roll
pop
or
or
popf
or
jge
push
fiaddl
xchg
ss
jmp
push
add
mov
arpl
push
jl
mov
sbb
in
inc
sbb
and
push
adc
pop
scas
das
fiaddl
stc
test
xor
faddl
std
out
adc
adc
or
push
insb
cmc
int
push
cmp
pushf
xchg
icebp
mov
gs
dec
leave
mov
je
inc
jne
lahf
jbe
lods
enter
scas
mov
mov
inc
sbb
pop
faddl
push
xor
cmc
es
inc
or
adc
jnp
pop
ret
cmp
jne
push
cwtl
dec
rcr
stos
jae
and
ret
xor
pop
outsb
sahf
out
or
cmc
ljmp
imul
in
stos
loopne
sbbb
idivb
bound
test
pop
mov
sbb
cli
ror
pop
adc
sub
movsb
test
mov
xchg
fsubrp
hlt
push
sbb
loop
mov
adc
subb
xchg
inc
sub
jns
call
mov
inc
shll
add
xchg
jbe
push
xchg
pop
sbb
or
and
cmp
inc
in
inc
cwtl
or
dec
sahf
into
pop
cmc
repnz
add
ror
mov
std
pop
lock
andb
jge
mov
push
push
aaa
mov
subb
pusha
and
mov
jnp
cld
iret
andl
mov
mov
daa
pusha
popa
cwtl
lret
jb
mov
sbb
insl
shlb
rcr
mov
mov
addl
mov
out
stc
and
vmovdqa
popf
negb
and
mov
ret
pop
pop
in
cmp
pop
or
xor
insl
xor
pusha
or
mov
sbb
add
sub
fcoml
mov
jne
jmp
mov
cmp
dec
popa
shrl
cltd
int
push
inc
les
in
push
xchg
cmpl
cmpb
lods
insl
add
jnp
sbb
lds
mov
les
pop
leave
mov
xchg
push
call
sti
xchg
stos
mov
pushf
pop
sti
hlt
mov
and
sub
inc
adc
add
inc
test
jmp
mov
sbb
movsl
pop
and
mov
out
scas
jl
mov
xchg
enter
sub
push
mov
mov
ljmp
add
in
or
cmp
push
mov
and
pushf
pop
test
into
adc
int
ficoml
fidivrl
jmp
gs
mov
add
loopne
popa
pop
aad
cmp
mov
je
loop,pn
push
jp
dec
xor
cmp
pop
popf
cmp
ret
stos
fmuls
or
mov
not
xchg
dec
xor
fcomps
push
xchg
dec
out
mov
out
pop
icebp
mov
pop
outsl
inc
mov
xor
sub
pop
push
repz
xchg
sub
cld
in
pushf
mov
loop
or
sahf
push
test
bound
repz
mov
push
aas
daa
pop
leave
fucomp
lret
outsb
test
mov
std
cmp
outsl
icebp
add
or
and
or
add
cli
leave
pop
cmpsl
outsl
push
popa
sbb
pop
enter
pop
cmp
add
pop
loopne
repz
icebp
or
inc
jl
xor
sbb
cmp
in
xchg
pop
and
jmp
sub
lret
dec
sbb
mov
aaa
icebp
lods
neg
xchg
inc
jg
out
pop
mov
cmpsl
pop
adc
pop
push
lret
adc
repz
int3
fmull
sub
int
out
fistpl
mov
test
mov
repnz
lea
push
and
and
movsb
dec
jb
repz
jle
js
addb
push
fdivs
sbbl
add
xchg
and
test
mov
cwtl
and
stos
test
adc
pusha
mov
xchg
add
lcall
xchg
dec
test
add
jb
add
outsb
mov
jne
lds
push
cmp
repz
jecxz
dec
xchg
mov
cmp
ret
and
movsb
gs
ficompl
and
icebp
jle
fsts
gs
mov
push
test
mov
mov
add
call
xchg
add
mov
cmpsl
push
lret
mov
and
les
rcl
test
push
out
sub
pop
aaa
inc
mov
cli
out
xchg
adc
jmp
mov
sahf
adc
inc
fsts
fistpll
mov
test
adc
fistpll
lea
or
jle
shll
test
cmp
xor
sub
and
jne
andb
cmpsb
sbb
pop
cli
sub
lcall
xor
pop
mov
mov
int3
test
mov
icebp
or
pop
adc
xchg
mov
or
std
dec
and
mull
or
xchg
cmc
cli
mov
jo
pop
fiaddl
sti
adc
pop
sub
shl
std
mov
mov
cmpsl
iret
sbb
fisttpll
dec
mov
mull
push
js
mov
mov
mov
out
add
in
test
outsl
push
push
push
call
add
in
sbb
leave
test
add
icebp
aam
mov
icebp
jnp
imul
and
push
fwait
jmp
inc
das
jae
jae
je
inc
pusha
adc
and
mov
loope
pop
push
cmc
mov
lret
inc
sub
ret
xchg
test
daa
dec
or
xor
inc
pop
inc
test
push
mov
cs
loope
jo
dec
jb
push
rorb
cmp
inc
fs
sbb
aad
into
ret
sub
addl
push
adcl
gs
aaa
aas
cli
xlat
push
lcall
pop
gs
int3
xchg
push
and
rcrl
hlt
sub
sub
xor
jg
bound
or
hlt
push
or
cmp
mov
xor
popf
daa
xchg
or
xchg
cmp
cmc
sub
push
inc
and
ss
inc
dec
sbb
inc
inc
shlb
adc
dec
cld
mov
pusha
int3
jecxz
or
rcrb
jg
xchg
mov
cmp
mov
inc
push
push
fcompl
nop
out
bnd
popa
pop
cmc
or
pop
imul
pop
pop
loop
lret
pop
inc
jge
test
stc
inc
push
xchg
aad
jge
sbb
xor
es
in
xor
shr
xor
xor
adc
and
fldcw
or
jb
mov
sbbl
and
pop
scas
hlt
fisubrl
dec
push
xor
jge
pusha
push
lods
jne
loope
fcompl
addr16
in
mov
mov
cmp
pop
pop
adc
mov
mov
std
push
mov
loopew
dec
dec
push
mov
or
adc
add
cmp
mov
shrl
ljmp
xchg
pusha
in
shll
or
shlb
xchg
lret
mov
lcall
sbb
lds
clc
push
adc
mov
lea
aaa
xchg
mov
int
bound
lock
cmpsb
lock
dec
cmp
call
fstpl
fsts
popf
mov
rolb
or
inc
addr16
insl
clc
add
mov
fnstsw
and
mov
pop
sbb
dec
enter
stos
jle
jle
aad
jl
ljmp
ds
lret
dec
imul
cmp
cmpl
add
fcmovnb
add
mov
dec
jmp
pop
pop
std
mov
fdivl
imul
ret
stos
xor
repz
xor
lods
nop
and
out
pop
lret
xchg
jo
movsl
adc
out
mov
dec
out
mov
sbb
iret
fidivrl
mov
xchg
fidivrl
mov
subb
lsl
call
dec
out
stos
mov
scas
test
mov
loop
xor
pop
loop
pop
aas
ret
jg
adc
pushf
bnd
mov
shrb
jns
mov
add
inc
mov
sub
neg
lods
add
popf
sub
and
lods
divb
in
into
adc
out
cmpsl
sub
faddl
mov
sbb
push
adc
push
mov
ret
popa
or
inc
mov
outsl
jp
popl
out
ficomps
cli
in
push
jmp
ret
fistps
lahf
cwtl
out
xchg
xor
stc
loop
jno
stos
int
mov
ffree
jle
mov
into
lcall
test
or
es
jbe
jo
or
mov
and
loop
xor
cwtd
xchg
lret
mov
mov
push
or
rclb
dec
jo
pop
jae
jecxz
lret
call
push
sbb
adc
popf
or
mov
call
add
mull
mov
loopne
test
in
lock
dec
stos
shlb
add
push
dec
cwtl
ljmp
rcl
les
pop
add
pop
icebp
push
rcrl
push
fmuls
mov
xchg
mov
cltd
mov
je
or
xor
push
mov
lcall
cld
pop
cmp
push
repz
jle
pop
rorb
push
cwtl
jmp
enter
cltd
or
in
mov
lahf
mov
xor
repnz
mov
mov
sarl
mov
cmp
rol
fsubrl
fildll
cmp
pop
jb
scas
test
or
jle
stc
add
push
outsl
outsl
jae
jno
aaa
cmp
mov
xor
repnz
aam
cli
sub
mov
and
popa
push
lahf
mov
daa
xchg
loope
add
repz
int
arpl
dec
sbb
jne
outsl
dec
sahf
jns
pop
jp
subb
mov
jmp
je
inc
push
outsl
icebp
into
lock
inc
out
mov
dec
hlt
push
push
sbb
stc
xchg
mov
mov
push
and
fstl
add
rcl
add
jne
mov
in
and
cmp
mov
push
mov
push
lods
pop
jnp
in
scas
xor
push
add
je
out
clc
mov
icebp
or
shll
das
cmp
icebp
xchg
stos
dec
icebp
add
pop
add
jecxz
dec
int
test
jo
pusha
lret
push
and
daa
loope
imul
jo
push
jmp
pushf
fs
xchg
mov
push
push
xchg
rcrl
cs
push
ficoml
movl
sti
cmpsb
mov
and
adc
ret
lods
xchg
push
leave
adc
shrb
cwtl
jg
ljmp
cmp
adc
pushf
ds
test
fs
adc
mov
or
mov
aam
jno
jnp
jp
sbb
enter
xorb
mov
cld
push
adc
aam
inc
popa
xlat
or
xor
stos
arpl
test
pop
xor
daa
loop
fadds
pop
xchg
mov
outsl
ret
addl
fists
mov
mov
and
popf
mov
push
or
adcb
clc
lahf
icebp
add
imul
sbb
jnp
xchg
sahf
inc
mov
lock
jp
ret
jle
ss
jbe
scas
pop
sbb
xor
out
push
out
lock
sbb
cli
or
in
adc
repnz
or
mov
cmp
in
enter
pop
mov
mov
push
icebp
or
ss
rcrl
push
leave
pusha
pop
aam
mov
xchg
shrb
jb
jl
fwait
repz
stos
jmp
test
stc
in
in
popa
icebp
push
ret
mov
adc
fdivrs
call
scas
sub
sub
pop
mov
popf
jnp
jmp
daa
jo
movsl
pop
stc
push
pop
add
xor
pop
lods
cltd
cmc
sbb
fcmovnbe
mov
inc
gs
mov
or
jle
or
push
xor
dec
jecxz
cmp
out
cmp
jb
into
cmp
aam
bound
pop
mov
inc
push
push
jge
mov
sub
dec
or
mov
rcrb
fadd
neg
inc
push
pop
jge
ret
pop
jae
push
aaa
adc
mov
push
mov
inc
int3
mov
mov
ljmp
ret
sbb
fnstsw
aas
lret
inc
leave
jnp
bound
ds
dec
jo
js
sbb
mov
gs
ret
or
dec
inc
or
inc
in
lret
ss
insl
sar
xchg
popa
or
les
mov
bound
jecxz
imul
pop
into
pop
sar
dec
mov
and
insl
fisttpl
sub
loopne
idivl
pop
nop
xchg
dec
mov
stc
movsl
shlb
aaa
cmp
loopne
nop
mov
inc
addr16
mov
scas
lods
outsb
jb
dec
xchg
pop
fsubr
mulb
lret
in
jnp
mov
or
add
dec
dec
fisttpll
loop
sbb
sub
push
jne
imul
repz
pop
xorl
sbb
arpl
cli
div
xchg
ja
pop
ljmp
insb
test
pop
movsb
pusha
fs
ror
push
cwtl
pop
repz
scas
scas
and
cwtl
sahf
and
imul
pop
pop
jae
sbb
cmp
sub
and
cmp
out
jmp
cmpsb
inc
mov
std
and
cmc
push
xchg
leave
jbe
daa
lods
jmp
xchg
mov
sub
ret
mov
leave
arpl
xchg
lods
mov
leave
fsubrl
or
cmp
cwtl
jge
fcmove
sbb
out
mov
lock
mov
sbb
push
in
inc
and
mov
ljmp
scas
sbb
inc
xchg
ficomps
mov
repz
aam
or
adc
repnz
cmp
mov
cli
outsb
pop
ret
dec
lret
fbstp
jmp
lods
out
dec
stos
stos
or
je
in
mov
jecxz
dec
push
pop
sahf
pop
addl
fsts
loope
cmp
jb
arpl
lds
mov
pop
fnstsw
ljmp
add
sbb
xor
sub
mov
lahf
sub
int
ljmp
popf
dec
pop
sub
push
fwait
test
lret
shl
jno
jp
sub
xor
add
cltd
fucomip
push
in
xor
lcall
or
addr16
mov
inc
mov
jb
loope
mov
ss
xchg
pop
stos
iret
outsb
scas
push
es
mov
pusha
les
out
jb
mov
orl
insl
sub
adc
nop
mov
jbe
fstpt
into
imul
xlat
xchg
scas
ja
push
aas
out
test
push
and
jge
mov
xor
inc
mov
stc
call
leave
cmc
dec
ret
or
fnstcw
stc
fcomi
out
inc
push
mov
movb
jb
popf
testb
rorl
add
sub
out
xor
clc
or
mov
ljmp
cmp
sbb
fsubrl
fnstenv
das
cld
aad
and
or
in
lock
orb
jno
loope
test
pop
imul
jae
dec
inc
push
in
adc
mov
clc
repnz
dec
xor
inc
loope
mov
out
xchg
mov
jbe
out
push
dec
cltd
out
aas
pop
inc
stc
mov
outsb
imul
jae
mov
adc
and
xchg
cmp
lods
jecxz
js
adc
ljmp
add
jno
notb
adc
xchg
in
nop
ret
dec
xchg
addr16
jns
jbe
into
fisttps
jbe
bound
adc
pop
adc
out
mov
andb
cmp
out
in
int3
push
pop
or
jmp
add
xchg
pop
xchg
fdivp
hlt
dec
mulb
rcr
aad
mov
cmp
addl
cld
mov
repz
in
xchg
lret
pop
mov
and
xchg
cmovge
out
sbb
sbb
mov
adc
bound
xor
nop
cmp
mov
pusha
pushf
dec
outsb
jle
sbb
andl
nop
scas
jae
int3
pushf
push
sbb
mov
mov
outsb
pop
ja
gs
sbb
pop
push
lods
stos
insl
rolb
mov
jge
jae
stc
xor
aas
js
pop
fsubp
mov
call
imul
adcb
jmp
inc
insl
iret
test
pop
imul
push
sbb
or
and
and
int3
pop
cs
jmp
push
add
or
into
daa
lahf
mov
pop
xor
les
jae
push
mov
pop
test
push
stos
insl
fbstp
cmpsl
pop
xchg
fstp
icebp
mov
cmc
pop
jp
mov
mov
in
mov
inc
jle
sbb
inc
ret
sahf
jb
pop
leave
xor
pushf
xlat
dec
in
inc
push
xor
ftst
nop
inc
add
es
dec
flds
insl
popf
aad
dec
rcll
ss
ret
fsubl
sbb
add
add
adc
mov
aas
test
mov
addr16
ja
hlt
lret
sbb
lods
sbb
and
rcrl
mov
xchg
pop
xchg
jne
jg
addr16
loop
loope
fcomps
imul
adc
fsubl
movsb
jbe
cld
imul
les
fs
push
or
popa
test
inc
andb
addr16
sub
sub
insl
dec
pushf
ja
xchg
add
stc
repnz
mov
out
lods
in
orl
aaa
and
int3
insl
rcl
in
outsl
pop
scas
sbb
jae
xchg
add
dec
movsl
xchg
ror
dec
mov
les
cwtl
loope
inc
push
scas
movsb
sbb
sti
icebp
or
add
sub
inc
mov
push
xchg
fidivrs
pop
je
std
dec
jmp
xor
pop
fs
and
jns
lret
movsl
fldenv
and
sub
faddp
test
pusha
cmp
dec
dec
not
mov
xchg
dec
jb
jge
push
test
movsb
lahf
mov
leave
hlt
add
imul
rorl
pop
xchg
sbb
stos
push
xchg
inc
scas
cmpl
cmp
sbb
sbb
ljmp
shll
jne
insb
mov
test
xor
arpl
sub
mov
f2xm1
xchg
xor
cmp
sub
adc
test
outsb
jg
pusha
lock
dec
cmp
cltd
pusha
mov
xchg
popa
out
xchg
jg
movl
inc
sub
inc
mov
jmp
mov
loop
lret
sbb
xchg
je
sti
mov
push
subb
orl
and
iret
sbb
aam
cwtl
or
xor
lret
lcall
xor
adc
jmp
dec
push
pop
sub
lret
cltd
cmpsb
aam
push
add
dec
std
dec
jle
shlb
push
cli
push
mov
mov
iret
mov
sub
or
adc
xchg
lods
sbb
ljmp
pop
push
pop
out
mov
js
imul
mov
imul
fwait
dec
arpl
cmp
xor
pop
lret
xchg
lcall
xchg
daa
aaa
cmp
orl
mov
or
inc
mov
fdivp
das
mov
jne
in
or
sub
mov
pop
aad
pop
inc
popf
lock
mov
mov
dec
xor
xchg
xchg
adc
mov
loop
fimuls
and
out
loop
dec
pop
mov
or
stos
xchg
mov
and
adcl
testl
mov
mov
jg
jle
movsb
rol
hlt
dec
xor
jmp
out
inc
push
mov
lahf
sti
sub
pop
mov
lock
pop
in
xlat
in
fimull
loopne
sbb
pushf
adc
sub
mov
dec
xchg
test
adc
push
xchg
sti
cmovl
mov
cwtl
push
outsl
pop
addr16
xor
outsl
push
ror
or
lds
fistpll
or
mov
and
clc
jg
push
push
or
ds
inc
loopne
cmp
and
icebp
in
mov
mov
mov
out
adc
push
or
scas
mov
jle
add
int
cwtl
mov
loope
addr16
pop
jmp
in
adc
imul
sub
dec
push
bound
aaa
jns
or
je
mov
mov
loop
jo
cmp
pop
repz
jecxz
pop
push
sbb
notb
pop
or
xor
fdivp
fsubs
jno
xchg
inc
dec
insl
fsts
fisubrs
push
hlt
and
or
pop
pop
fwait
jp
mov
inc
add
xchg
rol
jge
cwtl
out
cli
aaa
clc
imul
mov
or
xor
loope
sbb
dec
push
push
xchg
mov
rcll
cmp
mov
or
nop
aam
mov
xchg
fiadds
lods
jnp
hlt
jg
mov
pop
pusha
or
jge
movsl
movsb
cltd
mov
mov
mov
mov
cmp
ficoms
sbb
in
dec
sbb
mov
outsl
lods
adc
or
mov
sti
jo
rcrl
cmp
mov
pop
dec
pop
imul
xchg
add
hlt
loop
pusha
lods
sahf
cmp
push
lods
test
aaa
adcb
mov
push
ljmp
aaa
roll
das
fidivs
sub
mov
rcl
iret
and
repz
hlt
shlb
add
add
xchg
dec
cmp
mov
test
or
sbb
sub
sahf
lcall
in
jno
or
inc
sub
aad
arpl
movsl
outsb
iret
adc
sar
mov
fwait
cwtl
and
fnstenv
ds
xchg
stos
loope
pop
cmp
mov
and
xchg
mov
sub
pop
dec
push
mov
loop
adcl
movsb
mov
nop
inc
adc
mov
push
lock
in
lds
push
push
in
das
push
inc
call
jne
and
insb
pop
xor
shlb
inc
hlt
repz
sahf
icebp
jmp
sub
sub
mov
sbbb
scas
mov
movsb
inc
and
push
imul
arpl
dec
mov
rcll
mov
adc
push
sbb
pop
sub
int
push
cmp
jb
je
pop
popf
mov
dec
mov
ss
push
ds
cmpsb
dec
in
sbb
inc
sti
outsb
mov
fstl
mov
popf
cmp
lahf
mov
sarl
imul
mov
addb
mov
mov
add
rol
mov
sti
jnp
sbb
xor
jg
mov
jne
int
iret
iret
enter
sub
scas
sub
scas
icebp
test
hlt
icebp
test
xor
push
pop
mov
xor
mov
ret
jle
sbb
cmp
add
inc
fwait
lret
mov
popa
out
std
or
cltd
adc
in
pushf
sub
xor
lods
movl
or
int3
leave
repnz
xchg
out
adc
fsubrp
std
outsl
add
xor
xor
fwait
or
or
xor
or
sub
cld
dec
sbb
outsl
sbb
cltd
rcll
sbb
cmp
add
mov
cmc
aaa
outsl
jle
adcb
push
xchg
sti
fldt
fimull
testl
js
mov
test
inc
pop
adc
push
ror
inc
stos
mov
pop
scas
jl
cmpsb
jnp
inc
repnz
adc
mov
rcrb
push
imul
lahf
fld
cmp
cmp
mov
or
push
aaa
nop
or
mov
in
enter
inc
jo
shll
fnsave
pop
pop
test
push
and
add
cmc
leave
iret
fisubs
rcl
ja
jle
pop
push
pop
popa
loopne
fld1
push
mov
pop
or
mov
aas
lds
cld
shl
lea
in
ja
or
js
out
stc
inc
je
scas
ds
and
cld
jle
es
and
scas
out
xchg
rorb
push
imul
and
mov
shrd
ss
sbb
jge
cltd
lods
sar
cld
xor
mov
es
xchg
frstor
pop
push
mov
sbb
dec
hlt
lret
pop
in
mov
in
jns
lret
sbb
popa
repnz
jl
pop
out
sbb
roll
lahf
xor
imul
ljmp
lock
inc
dec
pop
push
lcall
mov
dec
popa
vaddss
rcll
adc
jp
xor
jle
sub
movsb
cmp
sbb
dec
adc
int
mov
mov
mov
and
ja
cmp
in
mov
aas
mov
mov
lret
sbb
jecxz
repnz
adc
hlt
xchg
mov
push
inc
icebp
xor
test
stc
sub
fdivrs
enter
mov
jp
sbb
rolb
iret
div
cmpsl
adcl
mov
jg
mov
dec
xor
sub
mov
sub
icebp
add
neg
jae
xor
cmp
lret
jmp
cmp
aaa
gs
or
jecxz
jle
and
cmpsb
out
movsb
ror
or
push
mov
pop
xchg
aam
out
pushaw
pusha
addl
and
lcall
imul
pop
dec
in
imul
xlat
mov
lods
mov
and
and
mov
jl
pusha
push
std
cwtl
hlt
clc
push
or
sbb
xchg
mov
stos
pop
mov
xlat
sbb
sub
in
addl
xchg
adc
push
xchg
cmpsb
jne
pop
pop
rorb
sti
jle
fwait
adc
jb
xchg
jmp
adc
lret
xchg
and
js
dec
cli
sahf
jbe
out
sub
sub
jg
xchg
cmp
inc
push
in
sbbl
push
jne
jecxz
ret
out
fldcw
push
iret
push
mov
cmc
xchg
jle
mov
push
scas
nop
cs
adc
cmp
cmp
inc
in
stc
xchg
mov
pause
xor
sbb
mov
fldcw
mov
pop
jnp
and
add
insb
dec
mov
adc
mov
mov
or
sub
adc
icebp
mov
enter
xor
shlb
add
push
imul
inc
mov
push
out
xchg
adc
xchg
cs
adcb
pusha
mov
mov
aas
int
lds
sti
popf
lret
cmp
popl
stc
xchg
fimull
in
or
inc
mov
jnp
bnd
lret
ja
ffreep
cmp
fbstp
xchg
jae
mov
ljmp
popa
enter
push
sbb
sarl
inc
lods
iret
in
fists
mov
sbb
cmp
push
add
push
mov
push
dec
ret
adc
cmpsl
lcall
mov
sbb
cld
add
out
sbb
inc
loop
roll
lahf
jno
inc
sub
orl
mov
jg
push
sahf
mov
sub
lock
xchg
ljmp
mov
pop
mov
or
push
or
daa
icebp
mov
pop
scas
js
add
mov
ljmp
in
add
mov
adc
mov
add
cmp
aaa
mov
dec
jo
push
xchg
orl
movsb
nop
loop
dec
mov
xchg
xchg
aaa
stos
mov
push
repz
add
cmp
fnstenv
mov
jno
xlat
test
xchg
inc
ds
pop
fisttps
int3
scas
push
inc
xchg
dec
jle
lret
mov
fwait
cmp
dec
arpl
pop
jb
push
aam
lea
jp
sub
jnp
into
mov
pop
dec
inc
sbb
mov
inc
and
paddd
call
std
adc
rol
cmpsl
aaa
jno
ja
out
push
movsl
pop
stos
cmpsb
cmpl
test
fsubl
sub
imul
mov
pop
call
or
iret
loop
mov
dec
mov
pop
stc
cmp
sti
jne
mov
and
test
push
push
cmp
mov
push
xor
nop
sti
or
cmpsb
mov
push
and
scas
lret
fisubrs
fs
call
adc
cmp
sbb
mov
inc
lods
and
cmp
push
sub
addr16
mov
sbb
cmp
sbb
out
stos
or
cli
mov
and
icebp
push
arpl
mov
xlat
cli
aaa
and
jmp
mov
sub
mov
fldl
xchg
fdivl
mov
movnti
mov
test
mov
cwtl
dec
cmp
in
imul
push
hlt
popf
popf
or
lods
xor
mov
pushf
inc
std
cmpsl
xchg
and
cmp
push
cmpsb
and
mov
jae
lds
jno
xrelease
dec
push
push
or
mov
sub
mov
xchg
push
pop
dec
and
xchg
xchg
nop
lahf
cmc
mov
test
fs
sbb
mov
push
cmp
jne
mov
sub
pop
dec
aad
add
aas
or
jae
pusha
cmp
filds
xchg
pop
shll
and
je
out
jg
stos
fiaddl
xor
add
les
inc
pop
or
xchg
pop
rcll
sbb
in
dec
stos
test
sbb
dec
dec
inc
lcall
dec
mov
lds
leave
sub
xchg
stc
out
lock
stos
mov
ror
mov
pop
adc
jns
xor
out
jae
inc
movsl
add
add
mov
adc
daa
mov
fisubrs
xchg
jbe
pushf
push
imul
loope
rorb
jle
dec
adc
and
dec
call
inc
rol
xor
and
jl
mov
in
and
aaa
xchg
movsl
stc
add
add
shl
jbe
in
popf
lcall
adcl
and
add
mov
or
insb
sbb
lret
inc
push
sbb
jge
lret
call
xor
xchg
enter
pusha
or
and
arpl
push
cmc
jge
loope
enter
inc
lds
test
jae
mov
neg
and
cmp
xor
pop
adc
std
adc
fstpl
sub
in
add
adc
pushf
add
movsb
jae
jmp
movq
dec
xchg
mov
dec
mov
insb
jno
int
fsubl
inc
js
push
imul
sbb
pop
fstl
insb
xor
lods
fsubs
dec
xor
mov
cltd
into
mov
add
dec
pop
xchg
iret
jl
cs
sbb
test
enter
push
cli
xchg
xchg
movb
scas
shrb
imul
adc
add
pop
jmp
cmp
fimull
movsb
mov
add
sub
xchg
outsl
inc
nop
imul
mov
int3
nop
add
in
imul
popf
loope
fcmovu
mov
les
mov
inc
cmpsb
xorb
pop
cmp
sbb
adc
dec
pop
test
xchg
mov
icebp
and
dec
es
in
cli
mov
lahf
aad
jno
stc
pop
std
mov
and
mov
sbb
mov
scas
addr16
gs
cmp
fwait
xor
ss
jno
in
xor
stos
dec
adc
cmc
xchg
cmp
lret
call
mov
push
out
pop
sbb
in
arpl
adc
xchg
sbb
mov
cmc
into
psraw
add
in
mov
add
mov
xchg
cli
icebp
call
mov
call
sub
xor
sbb
adc
mov
adc
or
mov
and
mov
cwtl
scas
repz
or
ficoms
push
mov
or
sub
or
mov
movsl
ret
js
out
aad
jb
cld
mov
or
out
aam
xor
xor
push
xchg
or
mov
lahf
ret
push
adc
pop
imul
mov
pusha
aam
cmp
mov
fdiv
or
arpl
test
mov
mov
mov
loop
out
leave
adc
push
test
inc
sub
fimuls
mov
outsb
push
jg
cmpsb
shr
mov
sub
xor
in
data16
mov
cmp
dec
shlb
imul
cmp
push
movl
shrl
les
test
mov
ret
xchg
and
xlat
test
in
mov
addr16
test
xchg
or
push
push
mov
aaa
rol
sub
or
scas
leave
adc
sub
outsb
adc
jg
dec
xchg
push
xchg
adc
cmpsb
inc
pop
and
xchg
sti
mov
fucomp
outsb
push
mov
mov
jecxz
repnz
sbb
shll
sub
fidivs
and
fsubrp
lahf
lret
jmp
ret
sub
pusha
push
into
bound
push
hlt
mov
inc
cmp
lret
xchg
xchg
mov
pop
subb
out
sbb
pop
mov
push
loopne
or
mov
or
push
repnz
and
jo
inc
call
or
push
fsubrp
mov
js
pop
fisubs
mov
sbb
imul
xchg
ja
enter
pop
dec
jg
sbb
cmp
jne
sub
jl
or
jb
call
cmc
add
mov
push
dec
lahf
sbb
push
xchg
adc
adc
loopne
mov
pop
pop
xor
xor
adc
xchg
fs
es
repnz
repnz
test
out
cmp
push
mov
ss
cvtps2pd
xor
int3
dec
sub
mov
or
add
mov
es
sbb
ret
jne
lret
mov
aas
gs
stos
iret
sahf
stc
mull
or
out
lret
fldcw
ljmp
outsb
mov
arpl
push
add
insb
and
sbbb
ljmp
in
sbb
jg
xchg
jecxz
xorb
mov
fcompl
das
nop
cmc
jb
subl
int
push
xchg
sub
movl
xor
inc
dec
aam
pop
ljmp
cwtl
or
in
shll
popa
cmp
hlt
inc
jno
daa
mov
jmp
roll
sbb
je
jno
hlt
xchg
shrb
cli
leave
aaa
jg
repz
stc
faddp
pop
jbe
cmp
lea
cld
pop
scas
fldenv
mov
mov
pcmpgtd
sbb
enter
data16
sarb
dec
mov
push
mov
or
call
mov
and
dec
clc
pop
lret
pop
jns
cmp
js
std
mov
xor
lret
hlt
dec
add
dec
inc
adc
sbb
stos
dec
outsl
testb
or
mov
lods
adc
loope
inc
jecxz
cmp
dec
mov
out
sbb
fisubl
mov
fwait
aam
pop
mov
gs
popf
push
jns
inc
in
sub
mov
and
pop
cmp
mov
and
push
add
push
psrad
jae
mov
and
or
addr16
gs
jae
cmp
dec
inc
xchg
std
test
repnz
leave
sbb
insb
jg
mov
sbb
popa
loop
in
inc
dec
in
fiadds
or
dec
sub
push
jle
and
jge
mov
pop
mov
or
push
mov
jbe
pop
hlt
imul
fldl2e
dec
jns
sbb
pop
pavgw
adc
js
jbe
out
subb
inc
mov
jns
mov
sub
xor
scas
or
push
mov
cmpsb
cmp
mov
imul
repnz
adc
leave
outsl
imulb
add
inc
and
out
in
push
test
mov
sti
xchg
sbb
in
inc
xor
adc
clc
xchg
or
cli
lods
sub
fnstsw
shll
mov
insb
ljmp
addr16
push
in
mov
add
mov
inc
loopne
xor
das
pop
add
shrl
pusha
and
insb
push
mov
jb
fstp
movsb
or
push
cmp
repz
sbb
xlat
mov
imul
mov
imulb
mov
mov
jl
or
insb
jmp
mov
cs
lock
in
mov
push
mov
mov
jnp
cmpsb
rorl
subl
ret
sbb
fwait
ja
pop
aam
cmc
push
inc
xor
incl
mov
push
rcll
add
sbb
inc
icebp
fwait
pop
orb
hlt
je
mov
mov
jle
fstl
ss
loop
jno
aam
rol
loop
mov
adc
lcall
inc
lock
insb
lock
repnz
cmp
aam
test
lods
ja
cmp
xchg
es
mov
xchg
xchg
pusha
inc
cmp
into
jl
mov
in
inc
lock
testb
push
bound
rcrb
inc
testb
gs
sub
push
or
cmpsb
mov
fxtract
cmpsl
nop
push
push
xor
mov
xor
xor
mov
or
adc
jg
sbb
sbb
insl
mov
rorl
cmp
xor
jmp
out
lods
ds
jmp
es
bound
sarb
cmc
xor
push
lods
inc
aad
jecxz
sub
in
push
sub
adc
adc
stc
popa
inc
jle
enter
lds
xchg
xchg
pop
idivl
add
push
cwtl
mov
xor
or
fisttpll
loop
sbb
rcrb
int3
sub
fwait
pop
fs
aas
adc
sub
and
insl
add
pop
dec
xchg
andl
sub
rolb
push
cmp
push
rorl
bound
stos
divb
aam
gs
pushw
fnsave
adc
loope
rol
arpl
or
inc
fucomp
aad
mov
xchg
push
add
out
ds
add
sarb
pop
lcall
push
push
jns
data16
jo
ja
cmpsb
fldcw
xchg
daa
and
push
push
xchg
cwtl
lods
ret
les
repnz
fs
mov
and
push
cmc
mov
sbb
sbb
xor
insl
sbb
push
or
inc
into
mov
push
push
mov
movsb
repnz
das
movsb
cmpsl
leave
lahf
aad
sub
mov
cmp
xchg
int3
jnp
xchg
xlat
mov
sub
pop
inc
dec
add
push
bound
mov
lcall
test
mov
inc
adc
push
hlt
lahf
sbb
cmp
rcrb
cmp
vfrczps
cs
mov
xchg
pop
dec
je
stos
test
lret
or
popf
cmpsl
xor
cmc
sarb
movsl
stos
xchg
mov
sub
xchg
add
add
jl
mov
inc
sti
pop
jge
dec
push
push
mov
imul
inc
mov
js
inc
cli
and
mov
cmp
xor
ret
xor
aaa
mov
jmp
and
inc
mov
pushf
test
insb
ja
or
test
lret
xor
sub
lret
mov
xor
jns
inc
adc
pop
shll
icebp
pop
adc
insb
or
xchg
lret
dec
push
jnp
loope
iret
jae
and
dec
sub
sub
js
mov
cli
mov
sahf
cmp
mov
xchg
jmp
push
shll
xchg
mov
or
call
adc
aaa
jae
and
pop
repz
push
sarl
sti
cmpsb
mov
xchg
adc
xchg
mov
in
cmp
fstpl
shrb
fidivl
sub
mov
in
aad
testl
into
mov
dec
loope
pop
js
aas
and
push
pop
mov
mov
in
jle
and
fs
push
jns
dec
jl
push
push
xchg
xchg
mov
fstps
or
sbb
mov
mov
mov
jnp
pop
or
std
loopne
adcb
testb
fs
es
xchg
jl
cmp
cmp
mov
iret
jle
sbb
mov
sub
mov
or
test
mov
xor
test
push
push
cli
mov
popl
fwait
adc
enter
push
jae
pop
test
pop
inc
jno
jecxz
mov
mov
ret
or
xor
dec
dec
mov
aas
mov
adc
lahf
dec
xor
outsb
mov
test
cmp
fcoml
stos
test
jno
icebp
aaa
fxch
outsb
inc
push
sbb
insl
mov
out
push
stos
icebp
lret
inc
test
insb
push
jae
in
sbb
mov
mov
dec
mov
push
addl
or
and
idivb
cmpsb
les
dec
mov
cmpl
mov
jcxz
mov
sub
pop
mov
in
insl
shl
das
lods
xor
out
mov
inc
repz
movsb
mov
xor
mov
cmc
sbb
pop
test
mov
push
cmp
dec
fdivrl
data16
pushf
mov
sub
and
mov
stos
pop
pop
bound
lret
jl
dec
cld
les
sbbl
movsb
decb
stos
pop
dec
push
outsb
lahf
fnstsw
xchg
out
outsb
push
lcall
mov
or
jbe
loopne
cmp
outsb
fists
push
xchg
and
push
cmpsl
xor
int3
ret
insb
rclb
fmuls
add
sbb
push
jmp
fcmovnu
cmovl
insb
adc
push
sub
mov
iret
lods
sbbl
icebp
jmp
sar
add
sbbb
sub
in
sub
cmp
mov
or
loop
mov
xor
sbb
and
xor
add
cmp
es
pop
dec
sahf
insl
push
push
pop
inc
sbb
cmpsb
cmpsl
outsb
adc
imul
inc
insl
lods
inc
gs
jae
dec
sahf
push
lret
cmp
lret
jg
cmp
jne
xor
inc
cmp
jl
xchg
stc
xchg
mov
cli
pushf
arpl
sbb
and
int
fdivrl
stc
xchg
mov
addr16
jb
ljmp
pop
or
or
xor
out
cmp
mov
fbld
mov
mov
xor
icebp
sbb
lods
inc
xchg
fcomps
gs
sub
xchg
pop
insb
adc
mov
pop
in
popf
mov
xchg
rclb
xor
fucomp
pop
repnz
mov
loopne
mov
sbb
js
das
lret
outsl
push
notb
cmpsl
xor
mov
mov
and
pop
sub
imul
jne
push
jae
das
icebp
data16
imul
lods
fildll
imul
out
inc
test
jne
jle
mov
out
push
inc
fidivrl
out
cmp
stc
pop
mov
cmp
sub
or
or
mov
fsubs
mov
push
repz
dec
jne
mov
sbb
ljmp
mov
jmp
and
sub
shrb
std
test
or
sahf
pop
movsl
and
mov
mov
pop
cmp
pop
dec
xorb
popa
or
aam
cmp
dec
push
xor
mov
sbb
repnz
and
lock
lods
mov
xchg
jno
out
stos
xchg
adc
jl
aas
xor
mov
fwait
cmp
bound
rorb
ss
fucomp
xchg
loopne
pop
ljmp
lods
and
jno
sbb
out
mov
fldenv
inc
sbb
dec
or
out
decl
rep
aam
fimull
or
push
add
je
das
sahf
pop
nop
or
enter
push
inc
sbbb
jno
xchg
jbe
mov
rcll
cwtl
cmp
inc
popf
lea
mov
cmp
mov
or
enter
cmp
mov
dec
lcall
sub
cwtl
shrb
out
rcr
xchg
and
hlt
pop
pusha
mov
pushf
rcrb
or
iret
lret
ficoms
inc
cs
mov
push
sub
mov
repz
jecxz
push
test
cmp
ret
and
loopne
push
clc
lcall
shlb
shlb
or
inc
xor
mov
shrl
leave
and
xlat
rol
dec
dec
lods
int
or
sub
dec
or
roll
cmp
fwait
std
popa
pushf
mov
pop
roll
ret
dec
lods
mov
pusha
inc
sub
mov
mov
dec
cli
pop
cli
icebp
inc
pop
jns
ficomps
lods
sub
movntps
mov
negb
mov
outsl
pop
xor
sub
cs
mov
pop
pop
pop
rcl
mov
mov
jg
lods
push
sbb
outsl
dec
xlat
xchg
test
mov
je
cmpsl
outsb
xor
adc
jbe
into
or
fwait
jmp
dec
cmp
adc
lahf
outsb
mov
xrelease
lret
sub
inc
mov
cmc
addb
test
mov
ljmp
test
out
addr16
icebp
jle
out
add
mov
push
or
aam
lret
mov
ret
xor
xor
xchg
mov
push
or
ret
jecxz
test
lret
adc
jnp
jnp
aad
call
test
andb
lods
cmp
push
pop
popa
cmc
stc
out
add
insb
mov
xchg
xchg
cmp
clc
js
insb
mov
sub
fisubl
loope
or
or
mov
jp
push
sbb
in
pusha
dec
popa
out
ss
mov
dec
inc
xchg
adc
dec
jnp
ret
das
fstl
or
lock
and
orl
and
out
bnd
lahf
daa
imul
mov
out
mov
jb
adc
xlat
add
mov
pop
out
sbb
xchg
xchg
pop
mov
dec
fsubrs
and
ds
xchg
adc
dec
in
mov
mov
and
inc
and
pop
cwtl
xlat
pop
inc
leave
sub
jbe
inc
test
jnp
aad
or
inc
lds
dec
aad
adc
dec
xchg
outsl
jmp
dec
cli
rcrl
loop
mov
je
movl
jno
cmpsl
mov
dec
or
and
sub
lea
push
lock
push
cmpsl
imulb
cmpsb
popf
je
sbb
ljmp
push
mov
pop
cmp
jmp
mov
cli
sarl
xchg
push
lock
xor
aam
enter
push
sbb
mov
in
push
fnstsw
mov
mov
push
dec
imul
adc
mov
scas
push
insb
push
daa
lods
adc
mov
add
mov
pop
inc
inc
js
xchg
repz
adc
and
aas
stos
push
jns
nop
sahf
jno
lret
fs
mov
mov
add
ud0
icebp
mov
adc
hlt
faddp
imul
bound
shrl
adc
test
push
cmp
xchg
fwait
inc
dec
punpcklbw
push
adc
push
insb
pushf
dec
cmp
test
add
imul
push
aad
sarb
mov
sbb
adc
pop
inc
xchg
jb
insb
cmp
ljmp
and
lea
cld
fisttpl
movsl
popa
jo
inc
xchg
mov
jbe
arpl
in
jno
lahf
jne
pop
lahf
enter
sbb
repnz
lret
mov
push
and
sahf
xchg
sar
push
and
movsb
insl
mov
setb
pop
cmp
sub
sbb
pop
rolb
dec
mov
dec
xor
inc
jp
mov
or
or
pop
xchg
imul
cmpsl
test
ja
sub
mov
icebp
inc
sbb
andl
or
nop
xor
mov
sbb
test
push
bound
and
mov
xchg
add
mov
mov
lock
out
sbb
or
jecxz
cmpsb
pop
push
in
ja
in
subl
inc
test
pop
loop
pop
es
push
mov
out
pop
std
push
pop
fsubl
js
push
stos
xorl
mov
loope
loop
inc
sbb
mov
lahf
les
in
iret
in
sti
add
sub
mov
pop
imul
xchg
loopne
dec
emms
je
xor
repnz
push
movsl
pop
loopne
bound
sti
push
push
andl
int3
scas
or
jb
mov
mov
lret
lahf
call
mov
std
sbb
imul
inc
adc
sub
leave
and
lretw
ret
xor
pop
or
negl
add
add
pop
xchg
repz
sbb
cli
sub
loopne
lods
movsb
inc
cmc
sbb
stos
push
bound
mov
inc
popa
ficompl
popa
aam
loop
mov
jb
mov
fs
gs
in
xchg
andb
xor
hlt
inc
jmp
and
cmp
mov
das
push
into
in
pop
mov
dec
pcmpeqd
adc
adc
divb
je
lret
xchg
sub
xor
mov
fwait
enter
shll
cld
ja
mov
mov
jb
cld
push
iret
out
push
xchg
sbb
cltd
test
xchg
xor
dec
repnz
bound
rcrb
jg
sub
inc
arpl
sub
les
adc
mov
int3
push
into
add
lods
or
ds
insb
stos
icebp
fcmovnbe
sbbb
shll
push
aas
movsl
jne
mov
pop
les
gs
mov
jecxz
jne
mov
push
imul
cltd
pop
push
test
pop
movsb
and
out
cmp
xor
mov
jge
aad
and
mov
sahf
add
stos
popf
push
push
inc
lahf
sub
inc
fnsave
sbb
stos
or
in
dec
mov
popa
fsubp
cs
rcr
cmp
sbbl
mov
or
jae
mov
inc
ljmp
xorb
jnp
inc
lea
jnp
mov
sbb
mov
sbb
mov
sub
mov
aas
add
test
mov
loope
sub
lods
pop
push
movsl
andb
loopne
lods
mov
in
movsb
mov
xchg
cmp
mov
xor
xchg
ds
in
sbb
push
or
mov
push
sub
les
fldcw
mov
repnz
inc
pop
lock
xor
test
xor
lds
out
mov
fldcw
pushf
inc
push
kmovb
cmp
xchg
icebp
lock
in
fisubl
lock
dec
dec
cs
ret
fcoms
jecxz
xor
mov
pop
imul
inc
sbbb
add
or
flds
test
ja
pop
fidivrl
cmp
lock
pop
and
fisttps
outsb
fwait
in
xor
dec
push
mov
pop
jno
fistps
test
cmp
mov
rorl
adc
mov
vcvtps2dq
add
mov
sbb
mov
inc
fs
iret
adc
testl
push
pop
dec
jo
lea
sti
in
mov
sub
jae
pop
dec
push
ds
push
sub
bound
xchg
push
sub
mov
dec
cld
addl
mov
pop
ljmp
mov
int3
fwait
orl
loope
pop
test
cmp
mov
pop
adc
ret
js
inc
enter
addr16
adc
push
pop
mov
inc
or
pop
loope
mov
sbb
jge
es
stc
mov
or
incl
cmp
cmp
pop
fidivrl
xchg
sbb
scas
les
xchg
sbbl
xor
adc
out
and
add
test
sbb
sahf
popl
pop
and
adc
sub
push
add
imul
sbb
hlt
rorb
outsl
mov
jmp
lods
lds
mov
mov
fsub
dec
cmc
and
pop
sbb
mov
inc
cmp
rclb
negl
ret
push
cmp
sbb
fimull
push
mov
icebp
into
add
xorb
repnz
push
sub
sub
paddb
ffreep
mov
sbb
add
pop
aam
cmp
sub
mov
outsl
dec
or
enter
in
jne
add
push
roll
pop
in
cwtl
neg
cmp
jecxz
sub
pusha
iret
jecxz
imul
push
sbb
les
inc
sub
xchg
xchg
mov
sbb
and
mov
xorl
sub
add
les
inc
adc
dec
adc
pop
or
call
cmpsb
push
xchg
pusha
dec
mov
pop
ret
adc
xchg
cmpl
fcmovne
pop
jno
mov
mov
mov
cmp
loopne
fistl
inc
inc
les
push
cmpsl
cmpl
or
push
push
insl
imul
rorb
mov
and
pop
ja
shl
adc
call
adc
add
pop
mov
mov
fmul
jmp
mov
xrelease
push
push
sbb
and
nopl
push
sbb
or
sti
rcl
xlat
enter
push
push
push
loop
jge
cmp
sub
inc
push
loopne
pop
adc
mov
adc
mov
repnz
adc
mov
mov
xor
icebp
xor
les
mov
loop
jne
push
loopne
ja
call
dec
je
in
leave
mov
or
adc
fwait
loop
jnp
dec
jnp
imul
test
xchg
jge
sub
movsl
subl
jae
cli
add
or
mov
cmpsl
lods
test
subl
jp
push
jle
xor
push
add
push
xchg
in
insl
in
pushf
xor
clc
pop
lock
jp
sub
push
aad
xchg
cli
push
xor
push
xor
xchg
or
fs
ret
out
dec
pusha
pop
adc
rcrb
pop
mov
push
jno
lods
xor
push
mov
out
pop
jne
int
pusha
mov
jg
push
pushf
cld
jmp
jp
mov
jno
cmpl
inc
clc
xchg
mov
cli
jno
sti
out
inc
lods
sbb
cmp
jl
insb
in
pushf
outsb
inc
inc
pop
and
adc
add
pop
pusha
shlw
scas
xlat
push
and
and
xor
or
jno
inc
repnz
mov
nop
xor
mov
xorb
into
lahf
or
sbb
idivb
fsubl
push
insb
or
subb
scas
imul
repz
jns
sub
add
aad
cmp
cli
push
mov
xor
insb
lcall
push
xor
jmp
std
add
je
icebp
pop
sbb
push
mov
xchg
xchg
and
movhps
loopne
mov
jnp
es
loopne
adc
int
bound
mov
jns
mov
pop
fsubl
xor
add
pushf
push
add
push
mov
mov
and
push
xor
and
out
sub
int
push
mov
or
nop
pop
adc
popa
cvtps2pi
inc
in
nop
and
mov
push
jp
jp
xor
nop
in
repz
sahf
ret
cmp
gs
push
or
mov
orl
pop
loop
lret
xchg
push
stos
hlt
mov
mov
gs
lods
pop
enter
addb
mov
test
les
jae
outsl
aad
mov
cmpsl
pop
xchg
cld
sub
sbbl
lcall
adc
std
add
and
jnp
enter
loop
popf
sub
clc
imul
jae
xchg
dec
xor
and
repnz
mov
fimull
jle
test
jge
xor
adc
arpl
cmp
adc
sahf
or
cmp
mov
jle
pusha
mov
inc
lock
dec
mov
and
ss
adc
cmpsb
cmp
stos
repnz
test
jb
or
pop
test
dec
clc
sbb
or
hlt
cmp
sti
mov
sub
mov
or
imul
mov
push
das
and
popa
in
mov
lcall
iret
or
lods
cmp
gs
cmpsl
dec
cmpsl
loope
xchg
orb
xchg
lcall
fs
std
test
pop
mov
and
ja
pop
cmpsl
jge
shrl
and
cmp
pop
cmpsb
sti
push
iret
js
push
mov
pop
mov
test
daa
cwtl
and
cmc
dec
sub
push
sub
enter
andb
out
add
push
nop
int
inc
fsubl
jno
fs
push
shr
std
fs
icebp
cmp
movsb
pop
movsb
mov
idivl
sbb
in
outsl
es
push
add
adc
adc
sbb
fwait
arpl
filds
jecxz
imul
mov
xor
outsl
aam
in
out
and
or
clc
jmp
xor
les
sub
and
shl
inc
pop
cmpl
cmpsb
inc
cmc
or
mov
test
pop
imul
aam
in
pop
rcl
jge
xchg
insl
xor
xchg
push
lcall
mov
leave
dec
ret
cmp
roll
insl
mov
push
adc
aam
lds
test
es
cmpsl
imul
xchg
gs
shrl
stc
adc
xchg
push
rolb
mov
and
mov
in
jno
fldenv
push
add
in
or
dec
cli
jecxz
hlt
jnp
sahf
cmp
jl
and
out
lods
faddl
add
xchg
push
addr16
mov
jmp
aad
aaa
iret
cmp
seto
and
rcrl
pop
jg
cmp
jmp
inc
nop
mov
cmpsl
xchg
xor
aaa
mov
test
sti
cwtl
insb
or
jp
pop
fwait
in
popf
inc
xor
cmpsb
mov
or
in
xor
pop
push
es
notb
xor
test
push
shl
out
pop
inc
or
cmpl
pop
push
repnz
pop
loopne
cld
fidivrs
repz
pop
je
dec
call
jecxz
shrb
dec
shlb
mov
mov
inc
ror
or
xchg
sbb
fdivrs
test
mov
fisubl
aad
mov
shlw
push
lock
mov
loope
std
and
je
add
sbb
call
cmpsl
push
push
scas
inc
push
fisubl
pop
or
subb
aaa
in
int3
mov
push
and
sub
adc
ljmp
into
lret
enter
fisttpl
lahf
mov
and
adc
lods
jle
int3
xchg
mov
les
testl
mov
in
pop
int
sub
test
add
cli
push
sub
push
mov
xchg
dec
hlt
ret
sbb
mov
mov
xchg
das
mov
divl
pushf
and
leave
fldl
mov
mov
dec
or
aad
insl
loopne
xchg
stos
cmpsb
movsb
popa
dec
fidivrs
sahf
scas
cmp
ss
sbb
mull
mov
fsts
push
add
int3
neg
pop
push
inc
addr16
xchg
sub
mov
popa
fnstsw
pushl
ljmp
jp
test
addl
xchg
adcl
call
pop
push
in
sahf
xor
lret
clc
mov
xchg
sbb
cmpsl
into
in
repnz
aas
test
push
lock
mulb
dec
in
dec
and
sbb
mov
imul
jmp
loopne
push
cmp
leave
stos
push
fwait
sbb
add
push
mov
add
lret
movsb
jo
dec
dec
lahf
jo
cs
sarb
mov
loope
loop
rclb
insb
pushf
mov
jp
insl
jl
mov
sarl
add
mov
adc
es
jno
fcmovnbe
arpl
jb
outsl
fadds
js
aad
mov
adc
dec
mov
jno
mov
add
xor
dec
lcall
add
xor
cmpsb
mov
mov
dec
cmpsl
and
mov
push
inc
lea
sti
pop
repnz
aaa
mov
addb
out
sub
sti
test
lods
lret
jp
filds
and
ficoms
mov
out
stos
cmpsb
adc
xchg
jne
inc
enter
inc
out
ljmp
int3
dec
inc
or
lock
out
das
add
ss
mov
inc
pushf
out
mov
jl
jecxz
jecxz
add
lock
outsb
jg
les
sub
sub
and
push
mov
xchg
lock
mov
and
test
shl
rorl
dec
repnz
xor
mov
mov
add
inc
vmovdqu
inc
insl
sub
jno
xor
lcall
sub
and
jns
scas
xor
scas
mov
push
aam
sub
push
dec
xchg
add
fwait
adc
es
jne
jo
stc
dec
insl
dec
fnsave
cmp
mov
sub
iret
addr16
aam
xchg
inc
dec
mov
pusha
shlb
imul
ss
dec
inc
pop
add
jge
int
push
lock
dec
adc
pop
jae
or
daa
cmp
pop
add
leave
and
xor
jmp
push
psrlq
add
roll
inc
hlt
iret
mov
jns,pn
andb
shlb
mov
imul
out
lods
scas
cmp
sub
and
lock
insl
fcmovbe
push
cmp
push
daa
popf
pop
lds
pop
xor
jno
sbb
jmp
or
lcall
cwtl
dec
nop
repnz
pop
push
adc
imul
das
lret
cmp
or
testl
inc
jg
lea
rol
lods
dec
stos
adc
arpl
mov
mov
stos
in
outsb
push
inc
imul
mov
jle
in
shlb
rol
and
divb
jo
mov
filds
in
mov
mov
call
lock
or
mov
shl
test
mov
pop
cmpsb
sbb
or
loope
ret
out
jns
cmp
mov
inc
mov
sti
or
push
std
sbb
or
orb
int
xlat
xchg
xchg
push
push
ljmp
sbb
imul
data16
sub
out
fistpll
clc
jo
dec
jmp
sbb
mov
daa
adc
sbb
sub
or
add
push
xor
and
movsb
fmulp
out
mov
fwait
mov
push
cmp
mov
das
pop
daa
xchg
add
mov
shlb
inc
lahf
xor
in
mov
int
dec
stos
test
mov
outsl
add
enter
mov
sub
or
xchg
into
pop
mov
mov
adc
rclb
cmp
inc
and
adc
ds
cmpl
sub
push
push
cld
and
cmp
sbb
mov
idiv
dec
xor
fwait
adcl
add
icebp
es
std
add
or
nop
into
pop
or
mov
insb
mov
aam
subl
sbb
hlt
ja
movsl
sub
mov
scas
mov
daa
cwtl
jle
push
add
xor
push
ret
repnz
movsl
mov
bound
dec
mov
outsl
lods
sti
stos
shlb
sub
aas
enter
dec
repz
sub
pusha
and
mov
out
mov
dec
in
xor
outsl
loopne
jecxz
and
or
fidivrl
mov
mov
out
pusha
inc
out
sbb
mov
int
jno
mov
add
dec
es
lods
or
fsub
lahf
dec
pop
subb
nop
nop
stos
jnp
data16
rclb
and
cmp
lcall
inc
mov
inc
cmp
mov
pop
dec
sbb
mov
pop
fwait
test
ret
dec
xor
mov
jo
fsubr
mov
cmp
mov
gs
sub
adc
cmp
cmpsl
push
sbb
mov
mov
std
jl
cmp
push
fidivrs
or
cmc
mov
test
popa
mov
xchg
ds
jne
jp
enter
pop
mov
pop
jmp
lods
adc
daa
jp
ljmp
mov
ds
xor
sbb
popa
and
sbb
rorl
mov
xchg
mov
je
mov
mov
clc
std
sbb
pushf
rcrl
mov
xchg
xchg
mov
mov
lahf
repnz
adc
fidivrs
pop
cmpsl
dec
cwtl
cmc
adc
mov
call
lea
mov
mov
sub
push
or
jbe
adc
rcl
iret
mov
push
adc
in
pop
notl
lcall
xchg
dec
add
mov
jbe
fsubrl
or
out
push
and
stos
jle
mov
sbb
data16
mov
std
mov
popf
mov
repnz
push
dec
loopne
popf
jo
mov
jae
data16
add
mov
ret
dec
inc
sti
mov
inc
lret
push
movsl
mov
int
pop
inc
ret
insb
mov
sahf
test
cwtl
lret
ds
inc
outsl
xorb
sarb
mov
pushf
test
push
xchg
mov
mov
les
test
cmp
stos
push
cwtl
and
pop
xor
mov
aas
sti
arpl
movzwl
adc
mov
repz
xchg
icebp
pop
cmp
jmp
iret
add
das
mov
icebp
das
std
aaa
enter
dec
ds
call
or
loopne
fnstcw
aam
hlt
repnz
add
xchg
xor
dec
mov
fadd
insb
cli
push
xor
gs
mov
mov
nop
mov
cmp
arpl
mov
sub
or
out
divl
or
lret
xor
in
mov
sti
and
pop
xchg
fmull
jae
insl
sti
push
push
sbbl
movsb
int
imul
push
sub
movsl
push
mov
fcmovnu
test
pop
add
cld
incb
or
mov
mov
add
jo
icebp
push
std
or
rorb
push
mov
in
cmc
push
cmpsl
lcall
daa
jne
ret
and
jns
xor
mull
ljmp
les
pop
or
mov
lds
sub
xchg
pop
in
sarb
or
aam
ja
mov
push
jp
js
or
and
jle
insb
out
add
sahf
shl
cmp
test
push
mov
fbstp
out
sub
fcompl
movsl
and
cmc
push
leave
adc
jecxz
sub
jle
pop
aas
rorb
or
mov
rorb
adcl
pop
fstps
mov
jg
mov
xor
or
add
dec
dec
ds
mov
adc
sub
xor
dec
add
fcomps
rorl
push
addb
outsl
mov
push
mov
lds
out
push
inc
mov
clc
mov
xchg
pop
test
fadd
add
mov
xchg
and
mov
fidivs
xor
idivb
jb
cmp
fmul
sbb
add
dec
fdivrl
push
adc
or
xchg
fsubl
ret
add
mov
jnp
add
xchg
in
fistpll
jnp
js
insb
sbb
je
stc
test
fs
mov
push
sbb
sub
orb
adc
mov
scas
das
sub
lods
cmp
jbe
jno
in
cmp
mov
or
lods
jae
cmc
mov
pushf
pop
xor
int3
or
or
fbstp
popf
jb
pop
mov
and
pop
adc
test
mov
arpl
and
jl
shl
add
aam
ja
adc
inc
push
sbb
mov
aad
lock
push
outsb
loop
jno
rcr
lret
shr
insl
pop
addr16
sub
xlat
sbb
loope
les
mov
nop
mov
stos
enter
cmp
inc
call
pop
scas
lods
xchg
mov
and
inc
lret
xor
xchg
dec
int
iret
or
mov
mov
add
sarl
stos
mov
push
sbb
cmpl
xlat
pop
push
rorb
pop
das
out
in
jmp
mov
leave
mov
cmp
inc
popa
adc
mov
fldl
mov
jle
ret
sbb
pop
fnstcw
pop
sbb
hlt
adc
dec
ja
and
pop
dec
sub
mov
popf
mov
out
cs
cmpsb
imul
popa
fsubrl
push
ljmp
sub
inc
das
fnsave
xchg
js
mov
fwait
push
incb
enter
sub
dec
or
fsub
push
mov
sub
ds
jmp
sub
fcoml
mov
pop
test
pop
out
mov
cmpsb
orb
jo
xchg
les
push
mov
sarb
xor
inc
jp
mov
jecxz
mov
in
mov
addb
mov
xchg
cmpsl
push
call
cmc
jle
cmp
mov
insl
nop
inc
ficoml
fwait
dec
cmp
js
fwait
pop
push
mov
rcl
mov
insl
xorb
in
loopne
xchg
mov
xor
or
clc
push
sub
enter
mov
inc
push
test
pop
cmp
out
sbbb
insb
or
fs
scas
cmp
dec
push
pop
fmul
mov
xlat
je
jmp
or
pop
adc
xchg
jle
pop
out
adc
rcll
mov
aaa
or
mov
cmpsb
push
or
push
cmp
mov
cmc
insl
out
pop
inc
inc
les
mov
mov
push
jg
mov
cltd
jg
xchg
adc
xchg
test
cmpsl
pushl
lret
dec
sbb
push
popa
sub
mov
pop
pop
dec
das
cmp
adc
jno
mov
xchg
mov
and
dec
pop
mov
dec
xlat
call
mov
ret
dec
stc
xchg
jb
lock
popf
insl
loopne
sbb
xor
mov
jo
outsb
imul
in
lock
je
stos
scas
rorl
xchg
xor
mov
lods
xchg
mov
sbb
insb
jae
fldl
test
cwtl
mov
shr
adc
addb
mov
or
pop
bound
push
ret
xor
xor
sub
mulb
xchg
fucomip
loop
jae
into
push
jbe
stc
jecxz
cwtl
ret
dec
adc
dec
leave
in
xchg
mov
shrb
rolb
cmp
inc
dec
adc
ret
stos
ret
call
and
test
out
fidivrl
stos
jno
mov
add
mov
out
into
adcl
mov
xchg
adc
pop
jae
pop
int3
outsb
push
aas
mov
inc
test
fldl
mov
cwtl
aam
lock
and
push
sub
test
mov
or
je
or
sub
aaa
add
cmp
mov
nop
aas
dec
mov
dec
mull
out
xchg
jae
cli
sbbl
shll
loope
fnstenv
call
mov
out
fwait
xor
push
cld
ja
lret
add
out
stc
int
aad
fstpt
dec
mov
jge
lds
iret
movsb
mov
push
nop
insb
pop
iret
jo
lret
adc
fildll
leave
leave
mov
nop
fnstsw
adcb
add
push
jae
mov
lret
out
loope
sbb
mov
je
fcompl
lock
outsb
fwait
xchg
mov
sbb
jno
or
cmpsb
xchg
out
mov
faddp
cmp
decb
mov
adc
sar
aas
mov
movsb
dec
mov
jae
xor
xor
sbb
push
dec
cmpsl
mov
mov
xchg
aas
mov
pop
pop
call
pop
add
cltd
in
lds
adc
adc
jne
sti
pop
or
cmp
jp
cmp
int
repz
mov
clc
dec
scas
mov
pop
and
push
pop
or
int
les
clc
add
inc
pop
stc
rorl
test
mov
inc
inc
pop
fisubs
push
das
adc
pop
jbe
jmp
hlt
fisubrl
out
jo
jge
jp
pop
jb
fisttpll
xchg
mov
push
push
int
out
loop
ss
pop
ret
mov
cmp
int
inc
call
ficoms
mov
ds
mov
in
hlt
add
lret
mov
jae
mov
pop
push
movsl
mov
dec
sbb
and
js
jbe
dec
shlb
sub
clc
insl
cmp
fucompp
ret
pop
cmc
sub
ss
add
jne
test
shll
push
test
mov
cwtl
dec
data16
das
lret
or
and
idivl
sub
daa
cmp
repnz
jg
jp
pop
push
cwtl
mov
je
add
fisubl
mov
jmp
jecxz
test
hlt
xchg
fwait
and
lret
sub
or
jnp
stos
xchg
adc
cmpsl
mov
fimuls
or
or
xchg
mov
and
and
inc
mov
ljmp
jno
movsb
mov
in
or
push
xor
jg
bound
mov
pop
cmpsb
cmpsb
clc
adc
sbb
pop
rcr
mov
sti
in
inc
mov
add
jne
shll
mov
or
scas
insb
popl
leave
lods
xchg
ja
or
pop
jmp
sbb
xchg
fadd
pop
sub
sub
dec
icebp
dec
mov
mov
inc
adc
stos
jb
adc
repz
push
aad
out
aas
mov
jg
dec
mov
or
imul
mov
jbe
mov
xchg
jae
xor
mov
inc
mov
and
int
cmpsb
sarb
mov
and
dec
roll
pop
dec
lods
les
mov
rclb
cmp
push
sub
js
inc
sbb
in
popf
xor
movsl
popf
mov
cmp
mul
or
dec
repz
xchg
jae
sbb
test
fsubs
clc
mulb
dec
jbe
sbb
lock
or
filds
cltd
subl
test
sbb
cwtl
icebp
int
pop
cmp
or
cli
mov
adc
test
test
dec
mov
xor
aam
xchg
and
dec
jg
fstps
jbe
lcall
push
mov
sbb
inc
xchg
mov
insl
adc
sub
pop
test
xchg
push
jp
inc
mov
xchg
insl
lcall
lret
cmp
push
clc
jns
imull
shrb
loope
adc
lea
inc
push
sub
xchg
push
mov
sub
cwtl
aaa
gs
mov
insb
xor
ja
cmc
lahf
jmp
daa
setne
lock
and
ret
mov
add
adc
mov
sub
movsl
jae
and
rorl
arpl
and
sub
jl
mov
jns
outsl
lea
ret
xor
loop
add
xchg
fld
sbb
inc
or
jnp
dec
adc
fstpt
aam
popf
subb
cmpsl
mov
fdivr
pop
ret
sub
mov
push
mov
inc
add
scas
arpl
into
movsb
sbb
mov
lea
fidivs
aas
aam
imulb
dec
jge
daa
mov
fsub
data16
fcmovu
pop
and
testl
outsb
xor
pusha
and
add
mov
es
fldl
or
xor
jnp
adc
mov
inc
and
lcall
sub
dec
aam
cmp
mov
out
arpl
bound
sbb
mov
and
insb
inc
out
enter
in
push
mov
mov
cld
xchg
xor
jbe
loope
icebp
cmp
cwtl
imul
decb
cmp
out
pop
xchg
dec
iret
leave
push
mov
outsl
mov
mov
pop
std
in
andl
ja
xlat
int3
out
jne
int3
stos
js
dec
shll
cmp
xor
or
sub
lahf
cmpsb
xchg
mov
scas
lds
test
pusha
loopne
xchg
call
adc
mov
lods
jmp
mov
subl
adc
jo
loope
imul
dec
xchg
sbb
xchg
push
js
xor
rclb
jns
push
add
icebp
pop
scas
pop
pop
cmp
enter
adc
add
rcr
sbb
js
xor
aas
js
ljmp
adc
ja
push
and
adc
inc
shlb
call
fisttpll
bound
or
out
push
cltd
cmp
pop
dec
pop
add
subl
aam
std
push
and
in
inc
mov
insb
mov
out
stos
fwait
ds
and
daa
fcomp
das
mov
movsb
mov
cmp
nop
sbb
jne
sbb
filds
scas
bound
add
mov
mov
sbb
adc
das
gs
test
pop
loop
stc
adc
jo
es
jle
int3
cmp
pop
pusha
or
imul
int3
sbb
sbb
scas
test
push
mov
xchg
daa
jae
push
sub
xchg
inc
lock
cmp
push
pop
movsb
jmp
mov
sarl
jbe
rclb
movb
lods
cs
xor
dec
adc
ds
int
es
or
jne
int
push
fnsave
add
hlt
cmpsb
lods
lahf
mov
insl
push
out
in
mov
xchg
stos
scas
add
pop
cmp
xchg
sub
xchg
minps
cltd
push
pop
sbb
pop
and
pop
inc
cmp
insl
jbe
jle
mov
mov
arpl
and
push
or
xor
mov
out
pop
popf
nop
lret
cmp
sub
mov
lcall
neg
jmp
pop
shll
nop
sbb
xchg
shlb
adcb
lahf
mov
cmpsb
xchg
pop
sub
cmp
and
std
bound
pusha
mov
mov
cmpsb
std
cs
or
fwait
in
lret
enter
dec
mov
or
clc
or
and
rcr
in
mov
pop
mov
cmc
out
rcl
lret
and
cs
es
fcompl
pushf
cmp
mov
imul
sti
xchg
inc
pop
or
sbb
daa
in
mov
pushf
cmp
ret
pushf
ffreep
xor
xor
out
nop
aaa
out
loopne
call
lods
adc
xchg
push
and
push
xor
es
xchg
shlb
mov
jb
cmp
sub
add
ja
mov
rcll
pop
sbb
push
dec
pop
dec
movsl
pop
xchg
fldenv
adc
inc
pavgb
push
sbb
in
ss
push
in
addb
fdivs
insb
cmp
adc
push
mov
in
push
sub
xor
sub
popf
out
jp
bound
pop
repz
jo
and
mov
fdiv
test
and
push
fimuls
sbb
lock
add
arpl
iret
incb
or
push
inc
cwtl
pushf
inc
rorb
icebp
adc
add
cs
mov
fs
or
xlat
sbbb
pop
js
mov
or
dec
lods
decb
in
es
xchg
adc
push
mov
shrl
cmp
mov
mov
arpl
cmp
fimuls
insb
jle
jge
add
add
mov
lret
jmp
stos
mov
les
jp
pop
push
adc
ja
shll
mov
icebp
sti
jmp
mov
popf
ljmp
iret
hlt
lea
fdivs
jl
iret
inc
sbb
addl
dec
jmp
rorb
std
rcll
js
mov
stos
aaa
mov
lods
lret
lods
int
cmp
pop
inc
push
mov
test
shr
stc
xlat
addr16
pop
inc
or
xor
xchg
subl
lret
stos
pop
fistl
sub
add
in
dec
or
pop
pop
xchg
cmpsl
cmc
cmpb
mov
loop
jmp
sarl
repz
mov
movsb
mov
sub
fst
loope
push
cld
dec
popa
mov
mov
dec
movsb
mov
push
arpl
xchg
cmp
push
outsl
sub
dec
cmp
iret
call
or
xor
setno
xor
in
mov
cmp
ss
out
inc
mov
ljmp
das
cltd
stc
aaa
or
pushf
mov
mov
xchg
shlb
mov
cmpb
sbb
adc
out
or
js
inc
aam
rcr
sub
sbb
inc
cmp
shl
push
cmc
les
scas
orl
int
lods
div
push
test
cwtl
xor
call
push
insl
push
pop
sub
ficompl
push
xchg
js
sbb
pop
and
mov
cli
and
aaa
jae
sbb
mov
js
shl
cmp
mov
in
dec
daa
push
jecxz
das
and
cli
dec
xchg
lret
jns
dec
lods
add
ljmp
xor
outsb
test
cmp
subl
cwtl
mov
jg
push
push
fildll
mov
js
out
mov
mov
mov
loop
addr16
aad
in
into
mov
aad
push
dec
pop
mov
inc
daa
dec
xor
xchg
xchg
shlb
fwait
jge
mov
push
jnp
mov
mov
pop
adc
and
dec
sub
sub
pop
mov
fucomip
shlb
pop
pop
inc
mov
adc
decb
mov
stos
and
mov
outsl
dec
test
dec
scas
jle
aam
pop
jb
jl
push
shl
jnp
es
test
testb
out
dec
decl
rclb
pop
and
pushf
mov
jmp
add
fs
movsl
lea
dec
sbbl
xor
pop
cmp
cmp
cmpsl
jns
movsl
arpl
mov
push
hlt
nop
sbb
sub
shlb
out
inc
cmp
scas
dec
fldl
addr16
stos
sbb
xor
insl
leave
mov
repnz
add
insb
cs
pop
notl
shlb
jne
pop
mov
adcl
xor
outsb
lcall
lock
jns
std
frstor
fwait
daa
mov
mov
sbb
push
cs
mov
mov
mov
inc
cmpsl
xor
adc
jne
fisubrl
push
imul
mov
xchg
jge
mov
dec
mov
pop
stc
jns
fmul
subb
xorb
cmpsb
adc
idivl
popa
movsb
jne
jl
imul
sbb
cmp
dec
pop
leave
dec
shll
pop
push
xchg
sbb
pop
cmpsb
mov
mov
push
cmp
out
lods
test
pop
inc
fwait
ja
xchg
mov
mov
adc
into
repnz
xchg
in
jns
sarl
push
les
arpl
fsubrs
pop
sarb
ljmp
jle
push
add
xor
dec
xchg
xchg
lods
pushf
push
pop
pop
pop
jp
inc
xor
pop
mov
xchg
add
dec
push
xchg
sub
mov
pop
adcl
pop
lahf
pop
sbb
outsb
add
fcompl
test
mov
pop
jg
jae
aam
dec
icebp
ss
aaa
jb
mov
les
sub
pop
sbb
inc
shll
jae
hlt
in
es
ja
sbb
imul
icebp
test
repz
in
and
lea
pusha
pop
xchg
adc
in
and
or
rcr
ja
aad
dec
and
sarb
in
add
push
jecxz
loopne
mov
mov
test
mov
imul
in
ret
and
pop
ss
sbb
into
pop
mov
cli
out
enter
hlt
mov
sub
jge
xchg
inc
inc
mov
in
mov
mov
clc
xchg
shrb
inc
inc
xor
lcall
add
jae
insb
aad
lods
in
sbb
test
adc
iret
les
xchg
daa
inc
xlat
scas
xchg
jmp
jle
xchg
xchg
incb
outsb
and
cmpsl
ret
inc
into
jns
xchg
pusha
cmp
jge
movsb
sub
into
loopne
fisubrl
add
lea
inc
out
dec
add
mov
sub
push
dec
rorb
jp
cmp
outsl
rclb
push
outsb
test
syscall
inc
xchg
mov
leave
sbb
imul
inc
inc
outsb
mov
jo
sbb
sbb
mov
sti
gs
pop
dec
mov
push
out
lcall
push
push
push
sub
out
iret
dec
sbb
pop
sbb
outsb
loop
dec
mov
jb
push
out
orl
sbb
inc
ja
adc
fcoml
call
movsb
dec
sub
shlb
pop
cltd
stc
push
jp
popa
stc
lods
lret
inc
psrld
fmul
push
jle
sub
xor
or
into
lea
inc
inc
add
lds
mov
inc
jmp
xor
std
arpl
movsb
test
and
or
fdivrl
mov
clc
sarb
pop
insb
push
lret
fstpl
subb
divb
mov
pop
adc
inc
sub
or
fisubl
mov
dec
inc
mov
sub
leave
jle
adcl
pusha
pop
lock
addr16
mov
dec
push
inc
adc
mov
mov
xor
xorl
xor
fidivl
cmpsb
push
or
adc
out
adc
rcr
and
mov
cmpsl
push
push
in
and
pop
xor
add
mov
mov
lods
mov
dec
repz
call
lds
mov
jecxz
add
mov
xchg
cmp
ret
lea
add
ss
out
jbe
inc
cmp
cmp
dec
jle
out
orb
mov
mov
jg
insb
mov
addr16
xor
jge
enter
xlat
pop
cmp
fs
and
mov
gs
pusha
call
fidivs
cmc
fstpl
addr16
or
cmc
dec
mov
and
into
negb
jno
enter
sub
into
outsl
es
sub
loopne
mov
mov
shrl
outsl
mov
jb
cmp
sti
jb
mov
mov
dec
adc
mov
lods
pop
cmp
add
push
adc
inc
pop
pop
lds
out
cmp
stos
call
mov
cvtdq2ps
in
lds
call
mov
cmp
ljmp
stc
sbb
xchg
cmc
fwait
aas
subl
mov
jae
fbld
push
test
arpl
and
cmc
or
stc
inc
push
or
jno
mov
movsl
sarb
xlat
into
or
add
cmp
push
ss
or
dec
sbb
addr16
rolb
inc
pushf
shrl
jne
xlat
sub
fisubrs
mov
shlb
leave
jb
mov
mov
fsts
loope
adc
int
es
push
out
fwait
addl
dec
jp
adcl
in
aad
sbb
je
xchg
jg
mov
mov
inc
jns
inc
mov
inc
aam
ret
sbb
pop
dec
cmpsl
adc
jge
xchg
shlb
lods
vstmxcsr
popa
sbb
rcrb
mov
mov
daa
sub
jecxz
je
std
cmc
stc
mov
xor
pop
mov
hlt
cmpsl
inc
daa
xchg
std
pop
iret
add
and
pop
pop
xor
sti
pusha
dec
push
add
pop
insb
arpl
out
add
popf
test
xchg
sahf
pop
jnp
adc
inc
add
ja
or
cmpsb
dec
mov
adc
jecxz
xor
pop
stos
loope
adc
jg
pop
outsl
sbb
mov
outsb
dec
test
pop
sub
add
andb
dec
jne
xchg
insb
adcb
xor
bound
int3
ja
dec
inc
ljmp
das
xchg
ja
pop
xchg
gs
dec
aaa
sarb
mov
jl
or
ficoms
adc
dec
insb
jnp
sub
dec
data16
js
hlt
mov
xchg
adc
sub
or
dec
hlt
cmp
gs
js
stos
push
lods
mov
dec
pop
mov
push
sbb
jmp
clc
ret
test
or
or
fsubrs
jg
les
adc
xchg
inc
shl
mov
loope
jne
rcl
push
popf
rcl
sub
loope
inc
cltd
jae
and
fsubrs
sbb
mov
xor
lds
mov
cmpsl
xor
push
inc
push
inc
dec
insl
or
arpl
push
sub
icebp
jg
jg
jle
add
scas
jge
mov
xchg
mov
add
sahf
aas
arpl
cltd
or
jae
out
fisubrl
cmp
or
push
adc
dec
iret
add
mov
xor
adc
jns
push
or
movsb
mov
cmpsb
dec
iret
dec
fs
jl
add
push
mov
xor
sbb
mov
xorl
scas
cmp
adc
gs
cmp
fs
cwtl
sar
mov
js
inc
ret
stos
xchg
push
stos
dec
mov
sbbl
sbb
pop
mov
lcall
add
and
sti
sub
lahf
mov
adc
test
pop
cmpsb
inc
sub
fnstenv
push
movb
push
dec
cmc
test
mov
mov
stos
sbb
fldt
mov
dec
cmpsb
mov
xor
fdivrs
lcall
xor
pop
sbb
loop
out
jg
fldcw
inc
push
xor
lret
dec
mov
lock
sub
mov
sub
jl
ljmp
lret
jne
mov
cmp
gs
insb
jb
mov
cmpsl
addr16
ret
add
add
into
les
cltd
scas
cmp
gs
add
lret
fucompp
xor
fs
jno
sub
mov
cli
enter
es
mov
loop
cmp
mov
mov
andb
lods
fistpl
push
jg
mov
dec
lods
rorb
cli
cli
jmp
jae
push
cmpsl
ljmp
jb
push
aam
std
stos
inc
icebp
mov
jecxz,pt
pop
div
push
pop
inc
cmp
shl
lods
mov
push
clc
mov
inc
shl
cmp
xchg
jo
xchg
jno
sahf
je
rorb
inc
xchg
or
sbb
cmp
outsb
mov
mov
out
fbstp
fcomi
movsl
jl
xor
or
or
pop
inc
cltd
inc
js
sub
sbb
lahf
mov
xor
push
mov
jno
xchg
lcall
clc
xchg
mov
push
fst
and
dec
or
dec
jl
aad
in
and
leave
shll
push
scas
jb
or
or
xchg
fdivrp
jge
adc
int
jbe
mov
push
rcrl
pop
movsb
sbb
enter
cmpsl
dec
jl
xorl
mov
jns
and
fsts
adc
gs
cmp
bnd
jns
out
cmp
cmp
insb
in
clc
or
dec
nop
cmc
aam
aas
mov
cmpsb
rolb
sbb
test
jbe
sti
js
sbb
shl
pop
sti
lods
xchg
fwait
jnp
xor
fidivrs
mov
shll
rol
jae
mov
lret
jg
adc
or
jb
push
sbb
scas
rcr
pop
cmp
lret
addb
sub
mov
shrl
xlat
ljmp
sbb
out
fmull
cmp
nop
leave
pushf
inc
outsl
std
jmp
or
jg
add
mov
rcll
adc
pop
das
stc
or
xor
cltd
adc
cmp
sbb
mov
mov
jae
lock
jb
int3
dec
pushf
bound
jno
cmpsl
das
xchg
lcall
or
mov
rorl
test
mov
jecxz
add
pop
leave
aad
pushf
aas
lods
ja
push
inc
xor
jle
xor
aam
mov
scas
mov
stos
loop
jle
outsl
inc
cmpsl
dec
sub
dec
jbe
xor
clc
fistpl
aad
mov
jb
icebp
std
mov
in
xor
push
subb
clc
jecxz
je
ljmp
mov
jns
push
mov
xor
clc
jne
testb
bound
xchg
insb
jmp
jbe
jbe
out
inc
inc
mov
addb
in
or
cmp
das
push
outsl
inc
ja
testl
xor
pop
inc
lret
mov
aas
add
stos
inc
ret
out
dec
pop
repnz
push
sub
in
or
loope
lea
pop
and
test
js
mov
outsb
stc
pop
sub
out
mov
btr
sbb
shrl
pushf
cli
aad
mov
mov
sbbb
insl
push
jo
lahf
mov
fiadds
sbb
pushf
jnp
int3
dec
pusha
bound
adc
test
add
test
mov
test
stos
dec
outsl
mov
xor
jno
in
or
jle
int3
or
lahf
sbb
lret
xchg
push
dec
or
inc
andl
ret
inc
push
pop
sbb
shl
js
mov
xchg
js
popl
or
sahf
dec
push
inc
arpl
jb
xchg
inc
pushf
bound
test
xor
aad
cmp
pop
mov
jmp
jmp
sub
push
andb
loope
jno
push
push
pusha
cmp
sbb
adc
cmp
lods
add
ljmp
jbe
mov
push
xor
unpckhps
push
pop
fucomi
out
loopne
cmp
frndint
in
ret
mov
inc
out
mov
dec
cltd
dec
test
sar
dec
push
pushf
fdivs
dec
dec
icebp
jecxz
add
out
je
rcr
arpl
mov
and
pop
aam
and
scas
jb
inc
test
jne
add
nop
stos
jns
dec
cli
or
mov
push
mov
cmp
ret
lcall
and
cmp
mov
int3
mov
xchg
in
divb
jg
ret
scas
jle
mov
pop
or
pop
push
mov
cmc
sbb
in
adc
std
adc
in
cli
aam
test
adc
push
pop
push
fwait
pop
loop
push
popa
cwtl
pop
out
mov
out
roll
cmp
imul
push
fsubr
jle
in
fldenv
gs
cmp
fsubrl
or
std
cmp
lods
sti
lods
jmp
leave
scas
jmp
leave
outsb
aaa
mov
push
imul
adc
jmp
jno
aam
add
push
shll
inc
das
pop
add
das
arpl
pop
push
stos
adc
inc
jns
mov
pop
js
aam
inc
ret
je
arpl
and
insb
fldt
div
repnz
stos
push
and
pop
iret
and
fbstp
mov
pop
jecxz
lea
stos
or
add
insb
sub
inc
cli
into
hlt
rolb
xchg
ss
xchg
and
jb
mov
aas
pop
sub
addr16
fisubl
lahf
mov
jecxz
cmp
ficompl
lahf
lock
into
push
xchg
dec
clc
out
xorl
sahf
mov
push
lods
mov
dec
add
sub
dec
pop
loop
push
xchg
out
jne
call
add
daa
push
inc
into
int
adc
imul
dec
cmc
in
adc
clc
test
not
lea
mov
outsl
dec
mov
and
mov
jg
jmp
std
enter
ret
xlat
add
ficoms
rcll
inc
iret
sub
sarb
mov
pushf
into
imul
sbb
xchg
jge
stc
fnstcw
in
push
in
cmp
pop
inc
test
pop
xchg
std
enter
aam
sub
idiv
lret
stc
in
and
jne
inc
ret
jne
xchg
mov
stos
cwtl
roll
push
enter
add
out
test
push
pop
cmpsb
inc
pop
lea
pop
stc
sbb
popa
stos
out
test
pop
mov
out
lcall
xchg
fnstsw
out
fdivl
inc
les
out
push
cwtl
add
nop
in
push
jmp
lods
or
shll
xchg
add
ds
inc
filds
xchg
push
xor
imul
jb
jns
out
xchg
ja
mov
out
popa
mov
aaa
dec
aas
in
push
out
orl
push
les
aas
and
mov
sub
lds
adc
fistpll
mov
mov
mov
xchg
leave
mov
mov
xor
sub
and
jmp
sub
sbb
sbb
jg
in
aam
shll
out
mov
push
js
test
xor
cmp
sbb
add
mov
outsb
cltd
cmpsb
ss
dec
push
mov
or
je
cmp
shrb
sahf
and
fs
mov
rorb
or
loope
mov
pusha
scas
rclb
sub
enter
sub
loopne
push
test
and
in
cmp
fdivrs
ret
daa
cmp
mov
icebp
aam
loopne
or
imul
xor
mov
push
push
and
jg
mov
inc
xchg
lods
inc
add
pop
jae
sub
aam
inc
ror
scas
or
popa
add
xchg
push
int3
nop
mov
mov
cmpsl
lods
jno
jno
rorl
rcrl
mov
xchg
inc
cmc
dec
loopne
sarb
push
daa
popa
mov
inc
jae
lods
insl
aam
cs
imul
push
loopne
xchg
ss
lret
xor
call
inc
je
jecxz
in
rcll
ljmp
or
lods
pop
test
mov
pop
jge
ss
xor
and
ss
inc
mov
mov
push
adc
jb
enter
cmp
insl
dec
aad
push
jle
addr16
jmp
adc
mov
gs
out
pop
jg
cmp
dec
lods
sub
lds
jmp
aas
mov
and
movsl
cwtl
jo
or
pop
es
jl
popf
mov
mov
loopne
cmpsl
or
cli
mov
add
jp
add
and
push
lahf
jle
cmpsl
sub
insb
cltd
fsubl
mov
adc
mov
ss
pop
scas
push
push
pop
add
iret
in
xchg
cmc
adc
push
jbe
dec
inc
nop
xchg
add
lret
sbb
cmp
jp
pop
and
mov
test
iret
arpl
xlat
lret
add
push
stc
inc
mov
dec
mov
mov
inc
int
inc
dec
cmpl
pop
ss
push
fsubrl
popw
es
xchg
pop
mov
adcl
mov
ja
or
loop
lahf
lds
js
insl
pop
sbb
fwait
cmc
roll
data16
inc
in
jp
mov
adc
cmp
xchg
add
sahf
ja
lahf
or
cs
stc
scas
jge
mov
out
into
inc
sbb
pop
aad
xlat
adc
pop
and
inc
adc
sbb
dec
pop
xlat
sbb
scas
mov
scas
filds
in
mov
jp
and
pop
mov
lock
lock
jle
sti
sbb
jb
xor
inc
fimuls
xorl
and
stc
and
pop
sbb
movsb
pushf
xor
pop
ret
fnstsw
adc
push
or
dec
lea
mov
popa
pop
cmp
sbbl
cwtl
clc
aad
adc
xchg
inc
mov
mov
aam
push
test
pop
pop
push
repz
add
jo
icebp
outsb
lret
rolb
fnstcw
sbb
push
orb
sub
enter
or
xor
cmp
pop
fcompl
add
mov
jmp
test
xchg
and
inc
mov
push
aam
lret
adc
movsb
movsl
cltd
add
int3
insb
clc
xor
adc
adc
dec
ucomiss
lcall
fwait
dec
fdivrl
cs
add
leave
xlat
mov
push
mov
and
insl
lods
cld
or
arpl
pop
inc
pop
cmp
jno
sub
sbb
out
pop
lds
jo
mov
xor
ljmp
ficoml
dec
push
iret
pop
aam
mov
cmp
sbb
xor
addl
insb
mov
fdivr
stos
out
lock
jg
pushf
jbe
lahf
push
pusha
xlat
jae
sub
stos
add
dec
mov
stos
pop
pushf
mov
les
sub
nop
out
aam
lods
pop
movsl
dec
sub
mov
mulb
leave
outsb
mov
mov
cmc
or
pop
add
cmp
lea
ret
xchg
cmp
pop
pop
mov
sbbl
sub
mov
push
jne
mov
mov
iret
cld
and
test
xchg
push
inc
mov
mov
add
jle
sub
in
xchg
and
repnz
or
add
inc
ffreep
jae
push
or
cmc
cmpsl
cli
jge
gs
dec
mov
mov
push
xchg
call
pop
mov
cld
xchg
scas
std
in
into
jle
dec
xor
cmovne
out
jbe
testl
xlat
pop
mov
xchg
mov
lret
inc
cmpsb
ljmp
pop
sti
sbbl
das
pop
push
inc
xchg
mov
nop
xor
jmp
aam
mov
xor
push
inc
imul
jge
insl
jle
fcoml
test
mov
lret
lods
pop
push
movsl
cmp
lahf
and
jno
xlat
in
mov
test
pop
xchg
imul
mov
xchg
mov
jl
es
insb
add
stos
mov
jb
add
bound
data16
lods
ss
and
imul
or
cmpsb
test
mov
xor
sub
adc
mov
mov
mov
test
xchg
movsl
sahf
jo
cmp
nop
pop
int
ds
ficoml
or
sub
mov
jge
rorl
stc
rcrl
ds
push
push
adc
push
xchg
lods
push
mov
fidivs
sub
cmp
fs
testl
icebp
push
mov
aam
daa
xor
jp
push
jmp
mov
jns
data16
xor
ds
lcall
pop
jbe
lods
popa
nop
shlb
sti
mov
das
and
lret
std
movsl
fisubrs
cmp
mov
clc
mov
cltd
sub
push
lea
jge
fldl
sahf
pusha
js
cmp
lods
sarl
mov
stc
lahf
ficompl
fistpl
push
icebp
mov
shrl
xchg
jmp
mov
daa
mov
test
in
mov
push
sti
adc
popf
inc
rcrl
pop
lock
bound
movsl
inc
xchg
pop
bound
fisttpl
dec
imul
jmp
or
xor
xchg
add
mov
cmp
daa
push
push
flds
push
jns
jbe
xor
and
loop
inc
jbe
jle
pushfw
scas
dec
inc
ja
rorl
sbb
sbb
mov
add
out
mov
mov
cld
sbb
and
jno
or
push
dec
std
or
mov
cmp
pop
and
add
aaa
mov
shll
and
mov
pop
adc
out
push
xchg
cltd
inc
xchg
dec
call
cmp
xchg
pop
lock
push
inc
sub
orl
lcall
push
mov
nop
pop
loope
push
push
dec
dec
repnz
loopne
std
xchg
aad
loopne
fistpll
sar
cmp
mov
and
mov
fstpt
frstor
cmc
adc
adcb
lret
push
push
xchg
pop
and
notl
mov
jmp
sbb
and
ds
mov
sarb
arpl
pusha
leave
sbb
mov
jge
mov
sub
mov
jno
xor
jae
push
or
or
popa
or
insl
and
inc
aam
test
das
notb
mov
mov
pop
sub
in
jns
mov
pushl
shr
xchg
in
in
out
loope
mov
es
cmp
pusha
mov
xorb
addl
push
lods
icebp
jecxz
mov
test
cmp
sbb
das
xchg
icebp
lea
xlat
in
das
inc
push
mov
and
js
cwtl
pop
adc
clc
pop
mov
and
lahf
push
push
pop
rcrb
dec
jnp
add
imul
pop
adc
mov
es
xchg
cld
mov
add
dec
mov
sbb
mov
mov
sbb
fmul
cmpsb
push
lods
xchg
popa
inc
xchg
push
test
mov
cmpsl
jae
mov
adc
inc
mov
pop
jb
add
rcll
lea
arpl
push
or
mov
push
fdivrl
mov
xchg
inc
inc
and
push
add
xchg
or
sub
stos
lods
mov
ret
adc
fcomps
scas
aas
and
loopne
into
cltd
add
jno
lds
xor
js
loope
jle
xchg
dec
pop
cmp
cmpsb
lock
cmp
xor
es
or
out
pop
sub
in
popf
pop
ror
test
xchg
sahf
jae
jne
imul
rcrl
sahf
or
lock
pop
fwait
mov
dec
test
es
dec
adcb
leave
add
mov
or
and
pop
adc
loope
jp
bswap
mov
mov
xor
mov
xchg
stc
fdivl
and
jp
movsl
xor
arpl
dec
stc
xchg
gs
lcall
int
jl
and
sub
adc
sarl
push
jae
aas
jle
ja
xor
fs
sbb
and
stos
pop
into
pop
pop
or
je
out
int
cmpl
and
fnsave
pop
fstl
mov
add
enter
and
ret
mov
stos
jno
cs
cwtl
imul
outsb
in
xor
push
dec
ljmp
add
fstl
add
jb
mov
sub
jo
imul
inc
lahf
mov
clc
fisubl
shlb
test
xchg
testl
push
adc
je
pop
pop
add
mov
mov
sbb
ficoml
add
notl
xor
call
ror
aad
daa
bound
fnsave
cmpsl
icebp
sub
and
iret
xorb
mov
inc
sbb
sub
sti
push
jg
xchg
xor
shl
xchg
xor
sbb
xor
dec
jle
ja
lcall
cltd
sub
in
jne
cmp
aaa
loop
nop
add
add
mov
lods
ja
movsl
dec
push
les
mov
adcl
mov
lock
push
push
movsl
push
sbb
das
sub
divl
adc
popa
dec
inc
xor
jp
xor
out
out
xchg
xchg
or
jp
out
mul
sti
cmp
push
subl
movsb
rorl
loopne
aas
sbb
js
pop
lea
pop
and
push
fnsave
ror
in
ret
pop
xchg
pop
fucomip
and
and
bound
int
pop
int
xor
mov
cmp
sub
mov
repnz
cmpsb
out
sub
flds
shrl
cli
out
xor
jae
scas
frstpm(287
xchg
rcr
adc
cli
adc
stos
nop
xor
aad
jle
mov
mov
loope
xor
js
and
sbb
sbbl
pop
inc
sub
adc
jp
scas
divb
inc
out
jns
add
jl
aaa
push
push
xchg
push
jp
arpl
movb
adc
adc
adc
insl
dec
mov
pop
daa
mov
sbb
cltd
jp
cmpsl
jp
sbb
ficoml
dec
in
and
test
lcallw
jmp
in
aad
shlb
cmp
cmp
aaa
sub
ja
mov
test
or
sub
xchg
ret
add
es
adc
dec
mov
jnp
lods
imul
pop
pop
mov
cmpsb
fistl
add
xor
lods
push
sub
jmp
or
jg
inc
sbb
sti
cmp
sbb
inc
push
mov
test
incl
cmp
add
into
pop
inc
mov
pushf
movsl
outsl
and
mov
ret
jns
and
mull
andl
xor
mov
sub
mov
pop
push
jnp
jae
sub
pop
imulb
mov
pop
pop
out
add
xchg
inc
sbb
repnz
jbe
xchg
ds
pop
shlb
and
dec
das
addb
ss
sti
add
dec
inc
ds
call
int
jno
loope
std
call
outsl
xchg
hlt
jns
iret
lret
es
cmp
or
fwait
repnz
xchg
mov
cmp
orb
push
lock
pop
lahf
out
imul
lds
mov
sbb
cmp
lret
dec
pusha
clc
adcl
jl
test
pop
or
lods
iret
jle
negl
notb
push
pushf
fnstcw
pushf
xor
jmp
dec
cmp
add
gs
sbb
mov
pop
loope
mov
mov
push
inc
in
push
cmpsb
aas
nop
insb
imul
rorb
shlb
cmovle
push
lock
inc
mov
mov
push
push
in
rcll
push
jp
push
sbb
push
outsb
idiv
sub
or
arpl
int
push
jle
inc
insb
push
jno
scas
sub
popf
leave
pusha
or
shlb
je
call
dec
lret
adc
rorl
fildl
test
pop
sub
fidivl
scas
adcb
push
out
stc
push
mov
xchg
enter
sbb
out
mov
dec
or
xlat
fs
mov
sbb
and
push
cmp
out
pop
test
imul
xchg
jae
mov
and
and
aad
mov
cmpsb
add
or
mov
push
and
mov
cmc
pop
adc
jne
dec
mov
mov
repz
out
mov
scas
pop
mov
sub
inc
insb
jae
in
sub
mov
ficoms
push
lds
pop
jge
out
inc
cmpl
adc
cld
mov
out
out
add
and
push
push
sbb
jmp
mov
push
cmpsl
mov
and
mov
rcll
jnp
or
cmp
loop
sbbb
cmp
flds
pop
imull
mov
mov
and
pushl
mov
adc
es
mov
mov
push
repnz
lea
xchg
push
mov
mov
in
mov
pop
or
ljmp
cld
dec
sbb
gs
cltd
mov
add
cmp
scas
and
mov
loop
int
mov
fistpll
subl
imul
sahf
mov
fiaddl
movsb
lock
dec
or
popf
dec
lds
lcall
push
scas
sub
jp
push
je
in
push
pop
fimull
imul
insl
mov
jbe
lret
dec
xlat
mov
and
adc
jne
sti
add
xchg
adc
jne
dec
cs
and
inc
xor
mov
push
test
sub
xor
fiadds
mul
adc
add
mov
xor
xchg
fldln2
push
pop
pop
lods
es
lds
push
fcompl
and
jp
and
out
divl
sarb
sub
fisubrs
xlat
dec
bound
mov
adc
xchg
lahf
and
adc
add
std
pusha
loopne
movsl
stos
enter
fs
outsb
or
mov
jb
mov
inc
cmp
out
push
inc
bound
mov
idivb
mov
out
dec
das
sbbb
je
mov
in
cmpsb
insl
ret
push
ja
push
fidivl
cmp
lods
aad
jne
sub
aam
lods
push
rep
insb
xchg
xchg
fsub
mov
outsl
sets
and
negl
sub
fimuls
jo
repz
jge
jmp
rcrb
fisubl
pop
daa
ds
cltd
add
xlat
mov
sti
mov
icebp
xchg
sbbb
sub
int3
adc
sbb
sub
movsl
rclb
cmp
lcall
jno
dec
xor
popa
jo
jle
adc
xor
in
pop
push
repz
cltd
inc
xchg
out
insl
jle
movb
je
pop
adc
mov
gs
xchg
loop
xor
mov
cli
test
fwait
add
mov
add
cli
push
push
mov
ja
cmp
aad
std
int3
repnz
add
test
push
add
test
ror
pop
cmc
sbb
dec
leave
pop
jl
sub
je
mov
lds
or
push
lret
notb
add
scas
jb
jne
jb
mov
in
mov
scas
mov
push
icebp
roll
mov
pop
push
test
xchg
and
dec
and
cmpsb
inc
loop
sbb
movsb
popa
test
pushf
cmc
sub
pop
cs
popf
enter
fs
ja
and
lcall
and
idiv
shll
aad
pop
outsl
add
dec
movsb
push
scas
add
or
sbb
in
lret
mov
push
dec
inc
je
out
mov
xchg
rcrb
repnz
dec
xchg
jae
jnp
sub
mov
mov
xchg
sub
ret
rcrl
bound
mov
shlb
insl
jl
inc
mov
or
sub
lcall
repnz
bound
or
sarb
push
sub
jmp
arpl
inc
jae
dec
adc
adc
cltd
cltd
and
mov
aaa
stos
inc
inc
lcall
test
jle
inc
shl
insb
fld1
or
sub
mov
pop
aaa
push
xor
add
or
push
andl
mov
adc
jl
and
mov
out
gs
or
mov
call
pop
mov
mov
jo
mov
ss
add
cmpsb
cltd
push
fstl
movb
test
dec
or
lods
ss
or
jle
adc
sahf
iret
sub
mov
outsl
or
and
push
data16
xor
mov
cmpb
dec
fstp
push
inc
mov
and
test
mov
arpl
fisttpl
add
cmp
jb
or
adc
sbb
nop
lods
sbb
jns
in
sbb
ds
fistl
jns
into
int
pop
popf
add
data16
sbb
or
sti
lahf
push
pop
or
je
push
pushf
push
jle
push
or
mov
jns
out
dec
cmpsb
adc
and
stc
sub
fcoms
cli
or
adc
xchg
jp
dec
sbbl
mov
push
jmp
fldl
sar
jl
cmpsl
xor
mov
ljmp
outsb
gs
sbb
rol
enter
and
mov
xor
inc
and
dec
mov
call
adc
adc
ret
ret
cmpb
fs
mov
minps
jle
sbb
cmp
mov
cmp
std
mov
and
and
dec
imul
into
mov
mov
popf
shll
mov
in
rolw
mov
inc
mov
adc
jno
scas
mov
xchg
out
data16
add
xlat
or
add
jge
dec
pop
cli
xchg
and
lods
jecxz
popa
jg
outsb
cmp
dec
inc
pop
xchg
cmpsb
rcrb
in
repnz
pop
int
insb
mov
mov
movsb
push
in
rcrl
add
dec
outsb
std
stc
jl
and
je
test
arpl
sbb
or
stos
xchg
fcmove
mov
or
aas
lahf
popa
ss
pop
lea
dec
cmpsb
inc
jecxz
loope
mov
movl
pusha
cmpb
sbb
push
mov
mov
stc
inc
mov
roll
cmpsb
imul
aad
ljmp
in
fld
out
mov
sub
mov
push
adcb
out
scas
mov
xchg
sbb
inc
test
lods
sahf
leave
test
notl
sti
sbb
test
jns
ja
clc
mov
adc
mov
mov
fwait
shrb
sub
add
cmc
fcmovne
cmc
repz
insb
mov
mov
pusha
cmp
mov
in
sub
movsl
push
mov
shlb
cmp
xor
orb
or
stc
jp
pop
fs
or
sub
xchg
scas
push
mov
inc
aam
push
jb
mov
fiadds
flds
add
inc
fdivs
push
shl
iret
pushf
popa
xchg
lea
mov
push
push
or
pop
dec
cmc
mov
iret
js
xchg
dec
xchg
outsl
xchg
leave
rcrl
jbe
push
cltd
imul
ret
fisubl
add
in
sub
mov
movsl
mov
adc
xchg
adc
mov
cmpsl
sbb
rcrl
add
sub
sbb
lahf
lret
es
out
push
cld
stos
adc
pushf
mov
out
push
mov
jmp
clc
stos
leave
inc
pushf
mov
sub
xor
adc
lods
ljmp
popf
mov
in
dec
testl
adcl
js
jmp
xor
frstor
push
xor
imul
xchg
jp
inc
mov
and
incb
mov
test
add
push
push
outsl
cli
push
notl
add
test
and
jbe
dec
mov
sub
sub
and
in
push
pop
test
pop
add
mov
test
or
les
lcall
mov
and
or
push
pcmpeqd
inc
addr16
mov
scas
inc
mov
aad
push
sub
inc
sbb
repz
pop
ret
lods
outsl
adc
mov
lea
mul
push
lock
jle
fistl
and
rcrb
sub
adcl
ficoms
and
test
outsb
inc
clc
mov
pop
dec
sub
bound
inc
lret
or
xorl
sbb
dec
jg
sub
push
lahf
inc
adc
sub
jge
add
ljmp
xlat
sub
jns
sti
pop
stos
cmpsb
dec
arpl
cli
mov
inc
ss
out
imull
in
and
xor
loope
loop
movsl
mov
pusha
pop
mov
repnz
jmp
add
mov
jl
notb
rcrl
std
and
xchg
imul
mov
xchg
mov
dec
push
mov
loopne
fisubrs
adc
or
leave
sub
xor
mov
inc
pop
jns
dec
dec
dec
inc
mov
push
stos
add
sub
or
mov
leave
xor
push
cmc
mov
push
mov
jns
mov
mov
or
xor
cmp
adc
jbe
stos
dec
lea
push
mov
sbb
test
mov
inc
inc
mov
pop
jbe
and
fxch
push
stc
fstpt
adc
repz
in
icebp
jge
jl
cli
sub
in
xlat
jecxz
xor
sbb
xchg
call
xchg
lret
test
pop
mov
jae
inc
xor
mull
das
jnp
push
sbb
inc
in
in
cli
xor
or
es
outsb
ret
loope
xchg
push
stc
repz
or
jge
mov
xchg
test
push
gs
les
cld
or
mov
jnp
daa
ja
push
std
loopne
mov
push
pop
insb
fidivs
pop
mov
ret
push
mov
fisubs
in
into
aaa
lods
push
and
fistps
and
ret
lods
jo
cltd
neg
pop
outsb
and
flds
dec
adc
fiaddl
xor
aam
cltd
or
dec
cmp
lods
dec
cmpsb
scas
add
xor
inc
jge
adc
add
adc
mov
in
ljmp
in
add
lds
rorl
outsb
stc
mov
inc
scas
and
subl
adc
mov
dec
cmpl
fidivl
inc
test
sbb
into
mov
loope
cwtl
ja
sbb
scas
pop
subb
cmp
lahf
fcompl
or
mov
outsb
aam
sub
in
rep
cwtl
mov
xor
test
out
repnz
movsb
pop
mov
popa
int
sub
add
sbb
int
and
stos
dec
dec
insl
pop
add
sub
in
aad
int3
jb
frstor
add
pop
js
nop
movsl
in
aam
enter
sbb
test
mov
in
in
mov
addl
adc
sub
cmp
push
lea
sti
sub
shrl
leave
daa
mov
std
adc
mov
pop
pop
mov
ds
xchg
inc
out
mov
xchg
movsb
lods
aas
aaa
in
push
lds
test
lret
cwtl
add
jmp
inc
pushf
sahf
insl
shlb
mov
mov
test
ss
xchg
mov
xor
roll
push
dec
int3
sub
rcll
mov
adc
and
les
jecxz
rcl
std
pop
pop
cli
xor
jecxz
cmp
pop
je
dec
xor
fst
cmp
aaa
addr16
fdiv
sub
push
aad
add
adc
mov
add
add
xor
pushf
daa
lea
fldt
pop
xchg
inc
push
mov
mov
inc
ficoml
aas
out
xor
sbb
data16
mov
sub
xor
mov
add
add
cmp
sbb
daa
ret
inc
pop
xchg
mov
in
pop
cmp
inc
lret
popa
and
push
call
xor
xchg
adc
or
push
ret
out
imul
push
xor
dec
pop
inc
add
xor
gs
jmp
aaa
cli
sub
ds
ret
and
and
outsb
lods
dec
xchg
int3
lahf
clc
in
pushf
roll
pop
fcmove
push
sub
addr16
ja
pop
jl
lea
cld
mov
or
inc
mov
jnp
add
xchg
inc
stc
mov
in
cld
out
adc
ja
loopne
in
stc
adc
popa
dec
shll
pop
xchg
es
leave
shlb
cmpb
mov
stos
test
pop
inc
mov
push
mov
push
pop
push
add
shll
cwtl
cwtl
dec
pusha
add
pop
and
push
jge
fistps
das
fisttpll
sbb
aad
in
cld
xlat
add
out
insb
cmp
jnp
call
xchg
repnz
xchg
stos
jbe
jns
out
pop
mov
xor
pop
or
fnstcw
cmpsb
lock
jo
call
sub
xor
in
lds
loope
mov
lret
jns
pusha
andb
scas
cmp
in
jno
mov
xchg
xorb
adc
or
sti
and
mov
xchg
popa
dec
cmp
insb
adc
or
out
pusha
or
cmc
arpl
loop
sub
and
loop
dec
add
rcrl
or
push
push
xor
mov
push
push
cmp
mov
xchg
insl
outsb
or
inc
mov
mov
sbb
repnz
push
sar
dec
inc
cmp
pop
adc
cli
imul
xor
jg
stc
aas
jb
dec
lret
test
test
mov
rolb
out
lods
popl
test
mov
mov
mov
clc
js
in
xor
ss
data16
daa
fsubrs
stc
add
add
mov
push
mov
movsb
push
dec
insb
shll
jmp
push
lds
mov
inc
mov
xchg
xor
popa
imul
sbb
pop
adc
inc
aam
clc
pop
push
push
insl
aam
mov
mov
lret
and
xchg
clc
lds
mov
xor
pop
fisubl
jne
xor
xor
pop
bound
mov
iret
aas
mov
les
nop
inc
cmp
xlat
and
ret
lea
or
ja
adc
cmp
sarb
xchg
adc
sbb
divl
and
add
jg
xchg
jae
and
dec
sbb
lret
jae
pop
sub
push
mov
xlat
xor
xor
xlat
dec
jnp
stos
aaa
jecxz
or
cwtl
xchg
fadds
aas
inc
fcomps
pop
data16
testb
adc
and
clc
mov
pop
pop
ss
cmp
test
and
fisubs
test
in
jns
adc
ss
bound
add
mov
popf
dec
mov
aaa
mov
addr16
cltd
les
mov
inc
fs
data16
mov
pushf
fstps
sbb
cmpsb
hlt
and
popf
and
or
pop
in
enter
xchg
roll
cmp
mov
fs
or
loop
and
lds
aaa
xchg
jae
push
jmp
jge
imul
mov
inc
and
push
xchg
adc
neg
mov
gs
jp
cmp
push
add
popf
mov
push
aas
test
call
stc
dec
imul
shrl
and
adc
popa
bound
mov
stos
cmp
push
dec
sub
xchg
pusha
iret
mov
dec
test
dec
test
shll
les
clc
mov
xchg
stos
jecxz
mov
adc
insb
cmp
cli
enter
fildll
dec
push
push
xchg
sub
add
dec
clc
or
mov
test
sbb
cs
push
inc
jmp
lret
mov
lods
lcall
and
xor
out
push
int
fsubl
xchg
add
push
imul
push
incb
cwtl
xchg
popa
pushl
or
and
push
out
adc
loop
push
push
insb
sub
cltd
out
insl
fwait
sbb
fldl
je
sbb
dec
rcll
push
xchg
lods
mov
mov
movsb
mov
dec
scas
mov
imul
or
les
sub
mov
sub
dec
ret
dec
cmp
enter
fisubl
cli
xchg
cmp
std
mov
in
push
sbb
mov
lock
push
inc
sub
rcl
sbb
mov
testb
push
jne
leave
test
add
jnp
cld
dec
dec
nop
mov
dec
jle
imul
into
cmpsl
inc
sbbl
mov
push
fs
push
sti
sahf
sbb
stos
rolb
or
daa
nop
dec
movsl
js
lea
shlb
fisttpll
xlat
loopne
push
sbb
mov
je
xchg
push
inc
jae
dec
lods
sub
leave
sub
fdivrl
je
push
dec
shl
adc
fwait
push
popf
and
mov
scas
jbe
add
inc
jp
std
pop
lret
mov
sub
fstp
jge
sub
and
aam
sti
xor
mov
dec
pop
pusha
out
jmp
adc
ljmp
cs
popf
cmp
xchg
adc
pop
in
inc
fidivs
cmp
in
sub
sub
xor
jecxz
dec
je
js
lcall
xor
xchg
pop
jne
cmp
or
and
and
arpl
push
mov
fisubrl
dec
aad
and
push
sub
mov
jg
adc
imulb
fimull
mov
pop
lds
mov
jno
inc
pop
jmp
and
mov
lds
or
jecxz
ja
movsl
loope
js
lret
movsb
xlat
dec
push
test
pop
sti
addr16
fnstenv
icebp
jmp
bound
inc
adc
lret
dec
imul
xor
sbb
mov
cvtps2pd
aad
cltd
test
dec
subb
in
jns
fwait
xchg
lret
xor
lret
jb
shl
fdiv
cltd
pop
mov
movsb
arpl
sbb
and
cmc
icebp
dec
aad
cmp
stos
lods
push
sub
mov
dec
pop
dec
pushf
in
mov
lret
sub
mov
js
loopne
mov
and
mov
popf
jo
mov
cmp
xchg
jl
inc
dec
mov
int3
mov
sbb
adc
movsl
push
fldl
nop
push
jbe
lods
fdiv
pop
pop
xchg
stc
ss
push
jge
dec
mov
mov
cmp
and
fcoms
movsb
out
inc
and
imul
push
mov
out
repnz
incl
sub
mov
mov
xchg
cwtl
fstps
pop
dec
or
mov
shll
sti
out
and
adc
data16
testb
les
dec
and
cmp
sbb
sub
pop
mov
div
dec
pop
test
sbb
pop
adc
push
movsb
jp
pop
movsl
sub
inc
and
ror
pop
add
aad
jmp
cwtl
shlb
stos
cmpl
mov
imul
inc
iret
rorl
inc
mov
adc
mov
mov
imul
aam
movsb
in
xor
cmpsl
mov
sub
mov
jae
dec
out
hlt
jns
sbbl
cmp
out
insb
xchg
or
rclb
pushf
adc
dec
or
pop
push
in
iret
jge
xchg
cwtl
push
adc
in
incl
xchg
cltd
aaa
fs
nop
movsb
pop
jle
ds
das
ds
pop
dec
mov
roll
fsubp
xlat
mov
sbb
add
add
mov
lea
sub
jl
data16
in
incb
mov
inc
and
enter
dec
test
unpcklps
jecxz
in
int3
jg
test
in
subb
xchg
pushf
sbb
je
pop
pop
subl
jo
push
push
les
ficompl
cmpsb
inc
sbb
scas
in
sbb
jns
daa
or
pop
mov
insl
cmp
stos
sbb
pop
fidivrs
cmp
test
mov
arpl
test
ficompl
bound
push
jno
adc
cs
mov
dec
cs
xchg
pop
popf
pop
imul
call
sub
jge
push
call
sbb
dec
rorb
cmpsb
jo
jl
in
mov
enter
or
imul
stos
sbb
jmp
inc
sarb
test
adcl
and
jne
mov
push
aad
aam
lret
mov
jnp
fmull
jnp
or
mov
dec
popf
out
mov
and
jnp
ljmp
lret
movsl
cli
mov
dec
jo
mov
fnstcw
iret
cmp
lds
adc
jg
out
test
jle
shr
or
add
push
or
test
out
lods
mov
mov
mov
aam
insb
aam
lahf
sub
jmp
inc
popf
cmp
fs
adcb
roll
cmpxchg
fbld
nop
int3
in
or
rclb
leave
xchg
xor
inc
les
mov
mov
js
push
dec
clc
add
ror
xor
divb
mov
sti
in
insb
in
add
testb
mov
cmp
push
dec
sub
jecxz
cmp
mov
in
adc
hlt
mov
mov
add
add
imul
xor
ret
and
inc
ret
push
mov
lds
in
fstpt
dec
mov
daa
mov
adc
push
cmp
xchg
data16
mov
cmp
out
stc
call
push
fstps
dec
pushf
and
lods
xchg
cmpsl
aam
jno
fistl
pop
dec
cmp
lret
pop
mov
aaa
xlat
inc
or
clc
adc
sbb
fs
rcll
stc
rorl
int
mov
push
lds
mov
xchg
sub
int
push
add
mov
lods
jmp
mov
scas
divb
pop
addr16
out
xchg
xchg
fisubrs
sahf
lahf
hlt
pop
sbb
sti
aam
shrl
sti
push
cmp
cmc
push
fsubrl
ljmp
adc
loope
fidivs
in
shr
or
mov
fsts
or
loopne
insl
shrl
adc
or
test
adc
mov
test
push
cltd
inc
xor
add
in
test
ja
lds
sub
jo
fnsave
jl
sbb
adc
xor
jecxz
jo
pop
jg
mov
lods
pop
mov
mov
xchg
in
xor
es
sbb
pop
mov
insb
jae
pushf
sub
imul
and
xchg
and
jl
and
test
sbb
aaa
lahf
neg
or
sub
adc
xchg
mov
imul
pusha
mov
and
lret
mov
mov
shll
adc
pop
mov
fucom
lock
clc
pushf
mov
out
pop
stos
int3
inc
movl
push
stc
mov
pop
rcr
xor
push
pop
cmp
jb
call
fisttpll
or
sub
jbe
lock
hlt
mov
xchg
movsb
mov
cmp
jle
cmp
adc
stos
loop
and
and
adc
lcall
pop
mov
shlb
loope
or
lret
orl
xchg
xchg
adc
xchg
fimull
test
pusha
xor
mov
fisubrs
stos
clc
mov
xchg
push
insb
push
in
lds
repnz
cmpsl
push
sub
stos
jae
and
adcb
int3
mov
sub
push
adc
divb
outsb
lret
pop
sub
shll
out
pop
mov
xchg
cmp
out
sbb
fcoms
mov
xchg
sub
cmpsb
aaa
dec
es
lcall
clc
xor
jecxz
dec
push
fs
outsl
adc
sub
repz
inc
js
cmp
dec
cs
jnp
jns
loop
pop
mov
rolb
push
sbb
sbb
data16
mov
push
lods
in
jp
stos
mov
xchg
xor
imul
inc
lcall
push
mov
xorb
sbb
cmp
push
inc
and
sub
cmpsb
icebp
icebp
lahf
adc
sahf
jl
repnz
xor
push
icebp
jle
fildll
cmp
pop
and
cmp
into
cmc
jb
fidivrl
sbb
inc
addr16
dec
jnp
shlb
jge
or
pop
or
dec
xchg
loopne
inc
jg
xor
push
cltd
sbb
lock
lods
inc
shll
aas
in
sub
repz
adc
addr16
call
hlt
roll
mov
inc
dec
sub
xchg
cwtl
lea
addr16
mov
push
or
inc
out
push
push
cmc
push
mov
js
xor
test
push
mov
in
test
dec
popa
sahf
outsb
push
out
fidivl
roll
test
repnz
push
xchg
inc
bnd
stc
out
cmp
xchg
mov
sti
mov
adc
lret
push
imul
sarl
xor
cmp
adc
dec
jae
in
xchg
xor
mov
lret
mov
dec
mov
andl
mov
arpl
xchg
inc
mov
mov
jne
sub
iret
movsb
pop
roll
ljmp
inc
cmp
dec
ret
inc
fcmovb
jb
xor
xchg
mov
pop
push
insb
lret
fsubl
clc
sub
sub
mov
fisttpll
inc
jne
sahf
mov
test
mov
enter
clc
pop
add
mov
inc
cmp
stos
dec
or
xchg
negl
pop
aaa
mov
jge
or
stc
cmp
jl
or
lock
adc
mov
push
cmpsl
test
or
dec
jnp
dec
pop
repnz
aas
cmp
push
inc
cmpsb
jle
sbb
mov
or
sahf
repz
jmp
adc
lods
sbbl
rorb
add
addr16
jns
daa
mov
add
jno
repnz
mov
adc
push
fsub
xchg
lods
mov
sbb
and
sbb
outsb
xchg
dec
push
jecxz
jp
int3
scas
orl
mov
ljmp
push
mov
fwait
push
lret
dec
aaa
pusha
scas
mov
or
hlt
inc
or
es
cld
mov
arpl
rcl
sahf
cmp
movsl
imul
decl
out
inc
pop
data16
das
jns
inc
mov
mov
xchg
adc
or
into
xchg
ja
pushl
pushf
sub
lret
pop
mov
mov
mov
pop
div
inc
stos
jb
xorb
stc
loopne
xchg
scas
scas
popf
cmp
js
cmpsl
in
std
addr16
fsub
mov
lds
in
adc
lock
and
fwait
outsb
je
add
dec
cmp
enter
ljmp
mov
sahf
dec
xchg
inc
sbb
xchg
sbb
push
sbb
push
cmp
inc
mov
test
out
cmp
nop
pop
ljmp
stc
movsb
mov
mov
loope
jl
stos
mov
ret
cs
les
ss
lock
adc
imul
add
in
or
call
fsubr
gs
pop
mov
and
add
push
sbb
add
push
cmp
and
mov
inc
xchg
sbb
inc
mov
je
pop
outsl
push
daa
in
mov
std
enter
xchg
pop
mov
test
jb
in
mov
jl
adc
push
iret
enter
movsl
jbe
fcomps
mov
mov
imul
inc
fistl
sub
imul
cmp
fnsetpm(287
iret
xor
data16
adc
jp
ret
push
out
pop
out
xlat
mov
cmp
aam
jb
imul
inc
lea
mov
jb
cli
shrl
rcrl
dec
in
xchg
ficoml
sub
pop
mov
push
addr16
adc
xchg
adc
stos
dec
inc
es
adc
call
dec
mov
stos
shl
mov
sbb
inc
scas
scas
mov
push
xor
add
adc
in
and
hlt
sti
push
or
loop
nop
jge
cmp
xchg
in
scas
pop
cmpb
icebp
xacquire
inc
mov
jmp
pusha
fdivrs
fistpl
es
lret
repz
mov
inc
insl
or
push
mov
sbb
mov
xor
xor
push
mov
js
sbb
ffree
insl
notb
jbe
mov
ja
cltd
clc
adc
outsl
and
addr16
and
inc
mov
xor
jno
mov
call
sub
lods
dec
sub
cld
xorb
sbb
xchg
mov
jo
cmc
in
mov
dec
addb
jl
test
clc
push
iret
ds
aad
xor
xchg
mov
cwtl
mov
pusha
scas
lods
jnp
add
or
scas
jns
imul
mov
dec
cmp
lods
arpl
mov
mov
cwtl
mov
int
cmpsl
imul
shlb
pop
jnp
jbe
ljmp
mov
xchg
jp
xor
rcll
lock
fdivrl
in
jbe
cmp
test
xchg
mov
add
outsl
adc
cmp
enter
push
loope
lret
xor
out
mov
fnstenv
aad
stos
inc
jle
inc
imul
push
icebp
cmp
pop
lret
and
out
outsl
add
xchg
push
jo
adc
roll
das
lahf
jle
mov
xchg
cmpsl
and
stos
xchg
xchg
mov
mov
call
mov
sub
xchg
pop
lods
sbb
daa
mov
inc
cmp
mov
dec
out
sbb
rcr
xchg
lea
xchg
xchg
xor
cmp
jge
and
cli
and
mov
adc
pusha
add
in
push
jo
fsts
jnp
push
in
popa
movsb
sarb
jbe
dec
imul
xchg
inc
sub
rorl
mov
ds
fidivrs
push
adc
sti
inc
or
jo
dec
push
adc
pop
cltd
push
xchg
xchg
insb
mov
ficoms
mov
fcmovnb
push
mov
cmpsb
or
inc
xchg
mov
popa
cmc
mov
push
call
pop
cmp
sahf
push
push
lahf
jp,pt
ret
mov
cmp
mov
mov
push
jge
test
stos
rcr
xor
mov
insl
mov
lahf
jb
int
jge
pushf
sbb
jae
sti
lahf
int3
loopne
lds
test
jmp
mov
in
iret
sub
xchg
shrl
pop
sub
outsb
push
jle
lret
test
adc
stos
loope
adcl
add
call
pop
or
push
test
jle
mov
shr
ljmp
pop
cltd
std
daa
push
data16
mov
ret
xchg
mov
shlb
mov
movsl
aaa
add
cltd
dec
push
test
mov
aaa
pop
nop
stos
neg
push
dec
inc
mov
push
icebp
adc
test
sub
push
or
push
inc
dec
lods
add
adc
pusha
inc
test
and
xchg
or
add
int
mov
pop
jno
rcll
ror
sbb
or
mov
add
lahf
ja
push
xor
inc
cmp
dec
test
or
cwtl
push
inc
cmpsl
fistl
inc
imull
inc
or
dec
fisttpl
cmp
cmc
push
movsb
mov
pop
add
daa
cmp
loope
lods
mov
mov
inc
inc
scas
pop
xor
cmpsb
and
inc
inc
xchg
iret
lcall
loop
int3
rolb
clc
cmp
adc
fcoml
cmp
sti
scas
add
scas
mov
pop
adc
cmpsb
dec
push
movsb
add
inc
lock
pop
and
cmp
inc
pushf
cmp
jge
mov
dec
sti
dec
fxch
fs
jbe
incb
data16
jbe
sahf
pop
test
daa
adc
cmpsl
or
xchg
cmc
les
dec
mov
mov
mov
jecxz
pusha
inc
testl
add
mov
xchg
add
pop
dec
scas
imulb
mov
mov
xchg
cmp
stos
lds
mov
hlt
xchg
ljmp
ds
js
xchg
je
adc
into
add
or
addb
cmpsb
adc
into
js
icebp
mov
jo
addr16
push
inc
cmp
mov
jmp
and
pop
xchg
addr16
fldcw
jo
cmp
lcall
addr16
and
mov
jp
cmp
sbb
fistps
adc
xor
sbb
mov
xchg
loope
dec
xchg
push
idivb
adc
inc
andl
or
jle
adc
or
lret
mov
or
cmp
pop
mov
sub
mov
into
push
cmpsb
je
jmp
xor
cld
add
fldenv
into
adc
andb
xchg
mov
int
mov
mov
sbb
push
gs
sbb
mov
idivb
cmp
cmpsl
fwait
addr16
dec
pusha
repz
stos
ja
inc
pop
outsl
mov
in
mov
iret
jge
jle
scas
mov
mov
sub
xchg
stos
xchg
pop
lahf
je
cltd
fdivrs
and
shlb
stc
push
lods
rol
addr16
daa
movsb
sahf
dec
rclb
xchg
aaa
outsl
xchg
jno
clc
add
cs
loop
cltd
mov
mov
mov
ret
push
jo
js
fld
mov
movsl
and
mov
push
and
adc
xor
loope
or
mov
jmp
adc
mov
inc
sbb
ficomps
fs
add
xor
subl
loopne
xlat
es
xchg
ret
aad
out
xlat
sbb
push
and
scas
pushf
fdiv
lods
jg
inc
jnp
xchg
in
fdivrs
cmpsl
ret
test
jmp
outsl
popf
lret
push
insl
bound
movsb
push
xor
loope
es
clc
jbe
push
fistl
xchg
add
and
fdivrp
xchg
pop
pusha
loop
in
push
aas
mov
fiaddl
xchg
mov
xchg
mov
push
pop
mov
push
xchg
xorb
aad
inc
ja
hlt
mov
and
jo
mov
push
inc
pop
movsb
jae
sub
sbb
inc
fxch
int3
scas
or
cmpsb
add
repnz
mov
ret
lea
mov
mov
icebp
mov
stos
push
xabort
in
pop
lods
or
cmpsb
add
jno
roll
movsb
cmp
xchg
insb
add
jns
scas
enter
aam
lds
xchg
xchg
sub
and
or
in
loopne
add
insl
push
cmpsl
lock
ficoml
jns
aas
clc
push
xchg
fdivl
xchg
push
cmpsl
dec
das
int
add
xchg
cmpsw
icebp
sbb
push
sub
push
scas
mov
fs
call
pop
ja
cmc
into
stos
adc
jg
xor
push
movsl
mov
inc
and
dec
pop
pop
stos
adc
mov
clc
cmp
pop
mov
xchg
or
sub
stos
ret
adc
push
sub
shll
add
or
xchg
outsb
cmp
mov
in
adc
sub
mov
cmp
in
sbb
leave
xchg
iret
cmp
jne
mov
in
xor
pop
test
cmp
lods
cmp
mov
cltd
push
clc
enter
cmp
sbb
and
or
xchg
daa
pop
push
cs
mov
movsb
addr16
nop
les
or
lods
in
fisttpll
inc
in
out
sahf
and
mov
fdivrs
adc
dec
pop
add
xchg
adc
inc
lea
repz
inc
mov
adc
loope
subb
loopne
xchg
popf
inc
push
adc
loope
jg
mov
outsb
xor
cld
lock
jns
clc
fldcw
jge
push
sbb
test
lock
dec
out
stos
loope
push
sub
leave
add
sub
es
outsb
mov
dec
in
mov
lea
add
shll
dec
lock
stc
fstps
add
movsb
ss
fldt
inc
mov
divb
jp
xchg
stos
fnstsw
push
xchg
mov
cli
cltd
mov
pop
push
xor
xor
subb
xchg
lcall
push
lcall
fadd
jbe
stc
mov
xchg
data16
gs
sub
add
mov
xchg
pop
shlb
insb
add
popf
add
pushf
pushf
rclb
and
adc
cmc
sub
push
cs
fstl
call
mov
shll
outsb
fimuls
xorb
jl
mov
dec
out
sahf
dec
xchg
or
nop
dec
movsb
std
cmpsl
pop
adc
test
out
test
stc
loop
shl
inc
push
jmp
insb
and
mov
fildll
loop
xor
inc
fsubrl
lret
pop
ret
stc
jo
lahf
cmp
out
stc
loopne
lahf
or
es
in
mov
jmp
adc
nop
or
sbb
sub
mov
cs
jp
lret
popa
jp
jo
je
je
movsb
cmpsb
fstl
push
inc
icebp
or
test
fsubl
push
std
in
sub
pop
js
mov
xor
std
and
push
mov
insb
xor
out
dec
mov
and
hlt
pop
adc
mov
dec
in
mov
xorl
cmp
ret
push
ljmp
mov
test
xor
je
leave
and
rorb
ds
lret
and
jbe
flds
adc
sar
dec
decb
or
rcll
mov
mov
push
mov
mov
daa
mov
dec
inc
cld
or
or
in
stos
comiss
cmp
int
rcrl
push
lock
xchg
data16
and
loopne
push
pop
insl
adc
add
mov
std
add
xor
addr16
dec
mov
xor
add
out
adc
lahf
mov
push
cwtl
ja
adc
jb
pop
mov
cld
mov
cmp
push
hlt
inc
jge
cwtl
push
shlb
cltd
pop
jne
lret
outsl
insb
lcall
jbe
loop
xchg
je
scas
cmp
add
out
and
lret
mov
cmp
sub
popa
cmpsb
mov
mov
add
add
and
cmp
push
xchg
mov
cli
out
xor
pop
outsb
inc
xor
inc
stos
add
out
jo
out
jmp
pop
bound
cmc
jb
mulb
divb
test
or
xor
xchg
hlt
in
loopne
aaa
pop
dec
adc
repnz
push
adc
add
adc
mov
das
lret
mov
sti
pop
cwtl
pop
jno
orl
daa
outsb
or
jb
adc
mov
fnstcw
xchg
lea
pop
inc
loop
push
add
sub
stc
jg
lret
data16
sub
mov
xor
dec
push
xchg
sub
repz
jb
ja
es
sbb
test
mov
ficoms
adc
fbld
sub
repz
or
fadds
jns
fbld
icebp
xlat
push
pop
addps
and
jnp
add
push
call
into
lea
mov
xor
dec
in
ds
aas
out
adc
icebp
repnz
fbld
shrl
add
jae
js
jg
xor
into
mov
sarb
notl
push
mov
adc
in
push
in
arpl
or
mov
add
ficoms
jl
sub
popf
and
mov
sub
repz
and
in
xor
imull
lock
mov
push
scas
mov
mov
sbbl
aam
ljmp
sub
adc
inc
mov
pushf
ljmp
movsl
xchg
sbb
sub
imul
xchg
or
push
aas
sbb
fldenv
inc
pushf
movsl
add
xchg
mov
clc
dec
lds
lds
in
adc
lock
stos
pop
stos
fsubs
xor
stos
mov
popa
lret
insb
dec
lret
cltd
pop
idivb
mov
aad
mov
mov
push
addb
pushf
xchg
pop
ret
mov
mov
gs
rorb
mov
and
mov
and
jo
mov
aas
es
jg
enter
out
mov
mov
sbb
mov
and
sbb
sti
neg
call
lods
ficoms
sbbb
sbb
dec
test
push
xchg
sbb
jg
out
pop
stos
aaa
mov
cmp
into
mov
add
pop
inc
jecxz
fisubrl
mov
jl
add
mov
or
imul
push
leave
loope
pop
dec
mov
pop
ljmp
lahf
dec
jmp
fldcw
or
movsb
cmp
mov
mov
cwtl
mov
jp
jbe
cmpsb
jb
xor
std
ja
xor
sub
push
jle
stos
jge
ss
fisubrl
or
pusha
push
jae
mov
movsl
mov
int3
pop
push
xchg
mov
imul
cltd
rol
imul
or
sbb
hlt
sarl
adc
cltd
bound
or
rol
arpl
shlb
inc
mov
cmc
fisttps
xchg
mov
jmp
dec
sub
xchg
imul
loop
inc
jmp
and
dec
mov
jecxz
sub
repnz
mov
call
out
pop
cmp
push
arpl
mov
cmp
scas
test
enter
inc
mov
test
push
das
rorl
xor
sarb
inc
cmc
vfrczpd
add
xchg
mov
test
xlat
pop
or
inc
aam
pop
data16
into
aas
push
jecxz
adc
imul
mov
pop
push
cmp
mov
jle
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
rorb
cmpsl
imul
mov
pop
sub
adc
pop
mov
cltd
adc
fs
xchg
mov
sbb
mov
mov
cwtl
push
idivb
mov
xchg
fnstenv
lret
scas
xchg
cmp
std
out
adc
lcall
lcall
outsb
sbb
mov
mov
fildll
or
mov
mov
dec
mov
aad
adcl
sub
rorb
adc
and
fidivs
sbb
cmpsb
add
rorl
add
fsubr
jmp
inc
mov
sbb
popfw
insb
mov
aad
lods
lea
pusha
push
leave
lcall
inc
hlt
sti
mov
inc
sub
adc
test
xchg
sbb
scas
test
mov
push
sbb
lret
movd
aad
jbe
scas
dec
aam
lret
test
mov
repnz
jle
cs
cmc
ds
push
cmp
xchg
push
or
das
in
in
jp
push
rcrb
mov
imul
popf
insb
and
push
add
iret
fists
fwait
xchg
cmc
or
es
lock
jle
xchg
jne
jo
leave
push
sti
mov
and
aam
js
push
aad
imul
cmp
je
or
jo
stc
mov
mov
daa
ss
mov
and
rcll
ds
cs
fnstenv
imul
cmp
mov
xchg
push
lret
pop
bound
adc
sub
xor
scas
test
xor
sbb
insl
mov
sub
inc
insb
scas
jns
fnstenv
mov
inc
ror
gs
dec
ss
add
cli
jbe
test
sub
rcrb
repnz
sarb
cmpxchg
repz
adc
xor
fs
jg
or
dec
jne
movl
arpl
or
cmpsl
xlat
add
jmp
mov
add
mov
imul
jg
lret
xlat
popa
lds
and
adc
or
stc
mov
mov
jl
cmp
mov
rorb
shlb
or
shlb
dec
cmp
test
mov
jmp
push
int3
dec
lret
ss
jl
fnstenv
sti
xor
adc
and
subb
dec
lds
leave
dec
loop
adc
jbe
notb
pop
push
and
add
in
and
dec
das
cld
xor
push
mov
lods
mov
pop
xchg
rep
lods
mov
rep
lods
push
xchg
push
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
lea
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
lea
call
push
dec
cmp
jb
push
pop
shl
push
pop
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
mov
pop
stos
cmp
jb
pop
mov
pop
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
scas
sub
mov
loop
mov
mov
inc
lods
or
je
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
push
pop
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
or
