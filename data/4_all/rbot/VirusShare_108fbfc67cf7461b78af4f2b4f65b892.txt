mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
or
jb
and
pop
imul
push
mov
cmpsb
fisubs
inc
rcrl
add
and
mov
jmp
xchg
jno
dec
stos
inc
repz
dec
or
jg
cmp
stos
mov
movl
fcmovb
xchg
lcall
cmc
lock
das
sub
call
cmpsb
mov
mov
addr16
insb
ja
in
fwait
jle
stos
sbb
jge
add
adc
sub
das
lahf
pop
cld
fidivs
notb
jge
add
cwtl
or
jl
test
insl
pop
add
inc
push
cmpsb
scas
cmp
sbb
pop
stos
sub
in
inc
imul
sub
xchg
dec
xor
js
xchg
testb
dec
xchg
out
xchg
sahf
mov
cwtl
push
cld
pop
ljmp
mov
xorb
test
and
adc
bnd
out
inc
xchg
bound
aad
xchg
lods
gs
movsl
rcr
mov
mov
imul
push
subl
jns
ret
sub
lret
fadd
fidivrl
aam
add
sbb
xor
lret
stos
testb
ja
ljmp
push
mov
cmp
mov
push
fs
mov
mov
loope
enter
insb
sarl
mov
sub
aam
repz
inc
sub
jno
mov
sub
mov
pop
fnstenv
fs
addr16
jg
push
sahf
and
adc
add
fsubrl
fs
cli
cmc
and
test
sub
out
mov
and
add
add
push
int
cltd
or
repz
push
xor
outsb
push
lcall
mov
roll
sahf
out
inc
push
fmull
sub
and
mov
sbb
sbb
in
inc
cmp
rcll
or
neg
and
xchg
push
mov
xchg
mov
cmp
mov
dec
dec
xor
jae
or
jno
xor
jmp
stos
cmpsb
mov
movd
bound
push
jge
cmc
test
push
cmc
sbb
push
leave
scas
and
scas
fdivrs
test
mov
and
sub
inc
jno
mov
cmpl
test
notl
ss
not
lock
bts
jle
add
fdivrl
nop
xorl
mov
call
shlb
pop
lret
sub
outsb
mov
inc
jo
cmp
fldl
clc
ja
popa
mov
mov
ss
rcl
sbb
add
mov
adc
and
aad
popf
sbb
pop
leave
pop
push
aas
in
sbb
inc
dec
ss
sbb
jmp
mov
popl
scas
cmpsl
jae
pop
inc
xchg
and
and
add
enter
lret
ds
jle
dec
jns
xor
add
cwtl
pop
inc
xor
roll
jb
cwtl
loop
mov
sbb
ds
add
or
dec
pop
out
mov
xchg
xor
cmp
movsb
shll
inc
pop
xor
mov
dec
mov
loopne
push
jnp
xchg
leave
inc
fsubl
adc
popa
xchg
or
push
insl
ljmp
test
adcl
mov
jge
cltd
iret
add
and
decb
std
push
or
push
mov
int3
lret
insb
jmp
mov
out
fnstcw
sbb
leave
cmpsl
mov
xchg
sbb
mov
mov
xchg
xor
rcl
xchg
mov
ja
fldt
aad
test
cmpsb
mov
sahf
pop
sbb
rcrb
sbb
jae
lods
out
cmc
repnz
loope
popa
cld
call
xchg
pusha
xchg
dec
cltd
adc
dec
daa
mov
fs
mov
mov
sbb
ret
aas
xor
stos
pusha
push
xchg
xchg
shlb
pop
cmp
inc
add
sbb
fwait
adc
cmp
lds
lret
aad
mov
lret
jno
pop
dec
nop
insb
mov
out
int3
outsl
aam
inc
add
push
sti
fcmovnb
jg
mov
popl
push
nop
enter
mov
sahf
ret
dec
lods
mov
jp
call
fcoml
mov
dec
ja
jmp
ret
test
loope
je
rorb
lods
mov
call
ss
jns
imul
xor
mov
lret
mov
pushf
dec
add
xchg
cwtl
dec
mov
in
mov
loop
sbb
inc
mov
mov
sbbb
mov
shlb
lods
fcmovb
jg
or
jmp
jge
sub
test
xchg
out
pop
loopne
loope
notl
in
mov
aam
scas
and
lods
xchg
mov
and
push
push
subl
adc
mov
sbb
outsl
cmp
movsl
pop
test
iret
mov
add
sbb
xor
aam
pop
movsl
sbb
subl
pusha
cmp
xor
pop
cwtl
add
push
popa
push
jmp
inc
xchg
xchg
fdivl
sarl
pop
push
pop
jmp
mov
gs
scas
lds
movsb
or
xchg
xchg
jno
stos
fnstsw
cmp
and
sbb
cmp
loope
cwtl
jo
cmc
mov
cmpsb
jb
mov
sub
je
add
adc
fidivrl
outsl
cld
sbb
mov
dec
ficompl
frstor
mov
cmc
push
add
aad
mov
mov
out
cli
repz
dec
lods
ds
pop
insl
mov
cmpsb
cmp
inc
xchg
test
mov
sbb
cmp
jbe
fs
xor
pop
sbb
adc
adc
xor
and
cltd
cwtl
xchg
xchg
icebp
or
cmp
scas
jno
jmp
rol
jecxz
fcmove
fmulp
push
arpl
jl
mov
and
cwtl
adc
mov
mov
sbb
xor
mov
sub
popa
fs
enter
ds
mov
fimull
enter
mov
sub
cvtpi2ps
iret
pop
ja
cmpsl
fdivl
popl
adc
jae
or
xchg
test
arpl
sub
ja
test
or
and
sbb
add
shlb
call
dec
ja
jno
enter
enter
in
enter
adc
incl
ret
adcl
xchg
add
mov
fsubrl
mov
les
add
push
mov
sbb
aad
or
add
ficompl
aaa
adc
loop
and
adc
ds
stos
cmpsl
insl
adc
and
lahf
push
and
sub
add
call
xchg
jle
addr16
sub
sub
add
jmp
mov
xchg
mov
push
and
dec
es
sahf
push
jg
imulb
jo
in
or
xor
stc
jl
mov
lods
cmpb
and
xor
fadds
lods
test
clc
sub
cmp
adc
add
pusha
in
pop
add
rclb
mov
and
xchg
cmp
rorl
inc
adc
call
dec
pop
out
or
stos
push
leave
add
xchg
jle
addr16
pop
pop
pushf
mov
ret
cmp
and
orl
fsubr
cmp
xchg
sbb
sbb
add
mov
cltd
adc
aam
fmuls
lock
int
jns
roll
cltd
cltd
lock
mull
popf
das
loope
aaa
inc
add
inc
arpl
icebp
add
jns
lcall
into
cmpsl
pop
pop
adc
adcb
test
dec
cld
xchg
out
mov
sub
or
test
add
gs
mov
test
and
and
sahf
out
sbb
ss
xor
lret
xchg
cmp
in
faddl
arpl
mov
lods
sub
xchg
test
sbb
inc
xchg
cltd
dec
push
outsl
mov
mov
mov
sbb
jmp
xchg
fadds
insl
push
mov
ljmp
mov
fwait
inc
ficoml
shrb
or
stos
in
jae
adc
dec
js
pop
push
loopne
and
or
mov
shr
push
das
mov
pop
repnz
jo
sbb
in
cmp
sub
mov
xchg
nop
mov
outsb
inc
lahf
outsl
pop
rcr
int3
push
add
pop
or
sub
sub
sub
dec
lods
out
nop
mov
pop
or
fsubrs
mov
stos
stos
xchg
and
pushf
js
fcoms
cmp
mov
or
mov
testb
popf
lret
push
andl
adc
loope
clc
fs
out
pop
sbb
jle
pusha
adc
add
mov
bound
int
pop
cmp
bound
xor
shl
out
dec
hlt
frstor
adc
arpl
xor
data16
into
push
lahf
fs
cmp
add
pop
xchg
imul
outsb
outsb
lock
bnd
es
sbb
scas
mov
lret
lds
lahf
jnp
test
mov
sarl
adc
xlat
call
insb
stos
sbb
sarl
or
mov
or
xlat
lret
outsb
sub
icebp
and
adc
jb
jnp
loope
mov
xor
notb
add
push
arpl
rorb
jle
fmull
dec
jne
out
xchg
mov
mov
bound
push
cwtl
loopne
xchg
pushf
xchg
lock
adc
sti
jae
push
mov
roll
xlat
movsb
mov
add
jnp
push
shlb
sub
mov
sbb
inc
repz
or
xchg
pusha
iret
movsb
cwtl
and
clc
movsl
arpl
loope
bound
mov
jmp
inc
pop
jecxz,pt
add
jo
or
in
or
xor
add
sbb
fwait
mov
pop
mov
ds
rol
pop
xchg
xlat
jbe
sbb
pop
addb
sbb
and
mov
lds
jp
out
das
pop
sub
sub
int
insl
adc
jo
ds
xchg
jns
push
gs
mov
adc
in
test
clc
nop
or
stos
sbb
jmp
cmp
adc
sbb
test
and
mov
push
rdtsc
pusha
xchg
add
push
insl
dec
dec
jne
jmp
pop
mov
lret
fwait
sub
push
data16
inc
mov
mov
sub
fsubs
or
dec
pop
xchg
add
pop
scas
xchg
fcoms
inc
insl
ljmp
stos
xor
loope
loop
mov
sub
xchg
les
sbb
rep
pop
repz
lcall
std
sub
jo
frstor
and
sub
sub
or
mov
push
jle
call
xchg
inc
mov
sarb
jb
ret
jbe
out
dec
mov
cmp
fmuls
shll
iret
stc
loop
pop
sbb
cmp
arpl
test
test
jae
adc
repnz
inc
nop
cltd
outsb
mov
or
mov
loope
mov
xor
insb
in
add
es
cmp
sbb
sahf
in
and
pop
or
push
js
mov
call
adc
scas
mov
jae
mov
in
dec
imul
xor
jae
ljmp
std
mov
int
js
add
mov
mov
dec
mov
addr16
cmp
ret
mov
jl
push
and
sub
pop
mov
pop
lods
inc
mov
inc
cmp
jp
xchg
cmpl
pop
and
or
jns
lret
ss
jmp
and
mov
loop
fdivrl
bound
or
xchg
mov
or
test
add
pop
test
loope
sbb
inc
and
sbb
sbb
sbb
adc
dec
ficoms
add
fwait
adc
shll
int
movsl
jmp
out
dec
xchg
mov
dec
jmp
movsl
pop
pavgw
icebp
jp
enter
repz
jnp
mov
popa
fnstsw
or
stc
movsb
inc
dec
pop
cmpsl
dec
mov
clc
rol
test
cmpsb
jl
data16
out
push
repz
and
mov
push
jnp
mov
inc
push
jecxz
push
movsl
leave
cmp
inc
cmpsb
sub
aas
mov
sahf
push
fistl
ljmp
jge
or
je
adc
test
cmp
shll
fmull
inc
imul
add
dec
or
pop
insl
mov
mov
adc
test
sub
movsl
jbe
or
mov
xor
and
sbb
sub
xchg
jne
addb
mov
repnz
ret
jl,pt
dec
dec
mov
mov
xor
repnz
cli
mov
pop
pop
mov
mov
mov
and
stos
cmp
shll
sbb
popa
shr
pop
mov
movsb
mov
in
mov
mov
and
mov
and
daa
std
insl
movsl
mov
ss
sub
cmpsb
test
pop
in
pop
dec
mov
xchg
mov
cmp
lods
add
jl
push
jle
scas
insb
jne
mov
dec
jle
pop
data16
mov
shr
sbb
add
pop
jl
jno
push
inc
ret
pushf
dec
mov
loopne,pn
imul
xor
xor
into
inc
outsl
pushf
jmp
xor
iret
xchg
cmp
test
repnz
add
hlt
ss
hlt
cld
mov
sub
cli
shll
dec
popf
addr16
mov
ss
jo
outsb
xchg
jmp
cmp
insb
cli
insl
inc
pop
test
sub
pop
sub
stos
in
fnstcw
xor
xor
insl
outsl
mov
mov
repz
and
stc
sar
push
mov
and
inc
xchg
mov
adc
cmp
mov
jmp
push
fnstenv
and
sbb
dec
inc
cli
or
mov
lcall
lret
jnp
cld
push
sub
add
cmp
cmp
mov
adcb
repz
adc
sahf
fcomp
xor
gs
adc
scas
or
clc
cmpsb
pushf
scas
cmpsb
rolb
aaa
add
insb
int3
push
and
into
insl
xor
nop
arpl
push
repz
aad
dec
ret
aam
jg
lret
and
lock
and
push
push
mov
gs
ror
xchg
and
addr16
mov
push
dec
gs
data16
scas
scas
lret
cmp
cmp
std
into
inc
xchg
test
adc
and
mov
lcall
cli
lret
cli
bound
scas
mov
mov
shll
adc
mov
loope
push
cs
inc
xlat
sub
push
fdivrs
mov
mov
or
jp
jo
ljmp
aam
jmp
cmp
inc
subl
ret
push
cs
mov
std
insb
sub
lds
out
xor
hlt
inc
cwtl
sub
adc
sbb
pop
pop
rolb
cli
xchg
adc
mov
mov
adc
sub
cmp
xlat
sbb
hlt
es
imul
and
adc
jle
cld
sub
push
jl
sub
frstor
rolb
dec
xchg
push
add
je
sub
or
js
lock
jae
mov
pop
or
pusha
push
in
jmp
stos
ja
xlat
rorb
dec
lret
dec
js
mov
test
popa
push
add
ss
out
cltd
das
adc
leave
pop
mov
jle
fs
fistpl
loop
sti
mov
xchg
dec
and
adc
xlat
das
sbb
push
and
or
insb
xchg
xchg
xor
daa
sbb
mov
test
jbe
fyl2xp1
popf
pop
aad
stc
jns
cld
cmc
scas
into
lret
inc
mov
inc
scas
ret
mov
add
jl
inc
push
sub
push
insl
sub
mov
ret
jno
jns
testb
sub
lds
fisttpl
xor
sub
or
mov
jmp
cli
and
cmp
xchg
pop
mov
stc
cwtl
or
jp
test
test
in
fistl
and
inc
data16
ret
nop
dec
and
leave
es
push
or
inc
pop
cmpsl
add
and
shr
aam
ret
xor
jg
or
push
shll
mov
fisttpll
cmp
inc
rorb
popa
mov
cmc
dec
xorb
dec
or
adc
mov
mov
sub
test
mov
pop
ret
fsubrp
insl
andl
fdivs
test
pop
inc
fimuls
mov
dec
push
cmp
mov
fcomps
sub
adc
xchg
out
cs
or
rcrl
iret
lock
cmp
roll
outsl
ret
mov
scas
jno
shll
dec
adc
push
je
add
xor
adc
sbb
jg
enter
jg
jb
test
xor
push
push
cmp
xor
daa
addl
dec
popf
popa
push
dec
sbb
out
fdivrs
pusha
loopne
xchg
iret
add
loopne
fstl
mov
mov
xor
mov
icebp
mov
sub
mov
inc
aaa
ss
jle
fldcw
jo
add
sti
pop
pop
aaa
jl
mov
std
lahf
mov
mov
imul
sub
inc
lods
or
cmp
leave
dec
aaa
clc
daa
mov
or
and
icebp
cmp
xchg
xor
and
flds
jne
cmp
lahf
repz
mov
ja
mov
xor
or
sub
dec
mov
xor
mov
push
imul
mov
pop
push
movsl
lods
lds
pop
lods
rcrl
popf
out
jecxz
mov
cmpsb
mov
mov
hlt
xchg
aas
sbb
negl
enter
movsl
dec
jecxz
and
inc
and
shr
lods
inc
call
sahf
mov
xchg
inc
inc
sbb
repnz
orb
shll
int3
xchg
ds
das
lahf
pop
popf
dec
dec
xchg
aam
mov
js
pop
daa
call
pop
clc
adc
add
insb
sahf
inc
in
popa
ja
int3
sbb
inc
fisttpll
fs
xchg
xchg
enter
cmp
clc
iret
mov
fs
shrb
pop
cmp
ljmp
xchg
fistpl
add
pushf
mov
xlat
cli
xchg
jmp
pop
push
mov
aad
mov
and
repz
and
roll
jo
xor
mov
mov
fistpll
std
lcall
mov
sbb
jo
rorb
xchg
mov
pop
pop
inc
sub
mov
loopne
aas
call
shlb
jg
or
js
ljmp
adc
cwtl
or
daa
ret
mov
push
jl
mov
or
push
adc
xor
pop
xor
sub
mov
mov
outsl
sub
xor
cwtl
fistps
pop
pop
aam
pop
push
pop
pop
mov
jbe
mov
add
adc
adc
sbb
or
daa
das
dec
stos
nop
dec
orb
or
sbb
test
out
ja
outsb
fxch
push
pop
loope
out
lds
sub
mov
inc
sub
mov
dec
fisubs
jp
int
shlb
mov
inc
imulb
dec
jne
lret
xchg
pop
push
cmp
sub
and
out
push
jbe
andl
jge
jg
pop
mov
mov
pop
std
add
mov
jbe
mov
mov
cmp
mov
xchg
xchg
sbb
sbb
jmp
mov
add
aas
test
push
xchg
lahf
mov
daa
fldt
and
das
dec
adc
sub
cmp
scas
cli
movsl
ss
cmp
lahf
or
ficomps
dec
xchg
mov
xchg
xor
shld
cmp
movsl
pop
lock
lock
sbb
jo
adc
inc
cltd
dec
ffree
ret
movsl
flds
aas
aas
lahf
cmc
or
mov
pop
daa
push
dec
jecxz
das
xchg
cmp
lods
test
cmp
pushf
jbe
push
cmp
pusha
rolb
dec
pusha
cli
lds
jp
xchg
xchg
inc
dec
push
or
out
jg
add
xor
loope
cmp
xor
testb
fwait
nop
andl
lds
xor
cltd
int3
or
jl
xor
aam
inc
ss
mov
in
push
xor
mov
mov
gs
ret
mov
dec
pop
sbb
push
popf
mov
sub
rep
aas
sti
adc
inc
xchg
popf
sbb
fwait
imul
adc
fnstcw
pop
popa
mov
dec
fstpl
rcrb
idivl
loopne
arpl
cwtl
cld
repz
test
push
pop
scas
cmp
js
pop
sub
mov
cmp
xchg
xchg
xchg
loopne
sbb
js
ljmp
sub
pushw
inc
ds
js
fwait
and
pop
dec
mov
xor
dec
int
or
mov
sbb
pushf
lcall
daa
sub
jl
mull
xchg
adc
lock
outsl
jbe,pn
mov
cmc
pop
insl
icebp
pusha
add
ljmp
clc
test
lods
inc
mov
sbb
sub
loop
mov
and
in
ss
pop
in
sub
pop
and
bound
jb
mov
push
bound
sahf
sbb
mov
jp
mov
in
mov
mov
rorb
jg
and
loop
aas
pop
test
out
xchg
mov
push
jno
xchg
fwait
pop
inc
xchg
pop
pop
inc
mov
mov
mov
sbb
adc
jg
out
lahf
in
aad
push
cmpsl
loope
inc
push
xor
mov
pop
popf
jp
adc
shll
jnp
sub
pop
dec
es
fwait
mov
xor
ljmp
lcall
pop
adc
sbb
adc
or
push
stc
sub
jle
incb
and
nop
xchg
inc
popf
enter
aad
mov
dec
nop
shlb
cli
subb
or
test
out
xchg
nop
pop
cmp
iret
clc
jo
or
pop
push
add
sub
inc
test
stos
int
gs
pushf
xor
mov
stc
mov
addb
jle
shl
hlt
inc
fldl
xor
in
jp
add
movsl
mov
cmp
dec
mov
test
pop
imul
iret
out
xor
inc
add
jg
cwtl
ror
int3
call
ljmp
shll
iret
bound
inc
in
nop
pop
iret
push
popa
inc
mov
aaa
sub
jecxz
test
mov
fwait
hlt
iret
push
lds
or
add
mov
adc
cmp
sub
loopne
xchg
pop
call
xor
adc
int3
cwtl
ret
jnp
add
lea
pop
test
hlt
outsl
lret
or
lret
out
dec
icebp
xchg
pop
fcoml
call
sub
inc
sub
cli
sbb
gs
or
ljmp
cmp
add
popa
and
fwait
cld
mov
xchg
mov
dec
in
inc
fisubrl
les
fsts
adc
js
fidivs
loop
test
stos
loope
fcomp
in
mov
loop
jb
stos
in
sub
je
sarb
mov
dec
bound
pop
xchg
sbb
sbb
push
lcall
sbb
push
insl
call
jbe
and
add
test
ds
cmpb
xor
pop
dec
mov
xor
mov
pop
xor
jae
push
out
movsb
das
movsb
imul
ds
push
jnp
adc
outsl
sub
in
adc
push
xlat
rorl
lea
ds
mov
or
rcr
sub
inc
int3
sub
fcomp
jg
call
sbb
mulb
push
cs
cmp
mov
cmp
lret
test
shll
aam
cs
mov
not
dec
inc
cmpsb
or
push
sahf
pushf
add
fsubs
add
pop
and
addr16
cmp
hlt
mov
mov
xchg
aas
sub
dec
dec
xchg
xor
jecxz
sbb
fldt
and
aad
or
addl
addr16
flds
negl
stos
push
mov
pop
mov
loop
popf
les
mov
inc
cmp
cmp
dec
out
jnp
xorl
push
pop
es
inc
mov
mov
stos
inc
mov
daa
pop
adc
mov
rcrb
jmp
out
adc
push
aam
arpl
sbbb
testl
pop
pop
push
sub
ret
sub
sti
test
dec
inc
stos
cmp
xorl
pop
out
lcall
push
inc
and
cmp
pop
cmc
pop
jg
xor
rcl
cmp
imul
xchg
mov
xor
xor
popf
stos
out
xor
aaa
mov
adc
push
pop
sub
stos
xor
addr16
mov
add
lods
js
jnp
pusha
pop
inc
inc
pushf
cmpsl
imul
sub
fidivrs
cmp
push
push
shll
cli
pop
shl
cltd
mov
mov
xor
aas
cli
mov
xchg
add
xchg
fldt
sub
add
in
pop
repnz
repz
inc
loop
ljmp
or
dec
push
pop
inc
inc
pop
xchg
jbe
test
and
adc
lret
adc
push
je
adc
pop
push
iret
out
gs
pop
out
sub
fsubrp
loop
fnsave
repnz
movsl
int3
mov
dec
cld
fiaddl
dec
sbb
sbb
pop
push
sub
ss
ret
push
rorb
mov
rcll
cmpb
inc
jp
add
mov
adcl
flds
loop
mov
movsl
insl
adc
es
stos
out
xor
pop
mov
mov
repz
out
lcall
mov
sarl
sub
leave
in
mov
fsts
lret
or
clc
into
in
scas
ss
inc
inc
pop
shlb
fldenv
mov
dec
sub
and
into
cld
cs
stos
mov
jle
cs
pushf
jecxz
int3
mov
mov
sbb
filds
rcl
pop
scas
pop
xchg
addr16
jne
ss
call
xchg
jne
flds
dec
loop
nop
mov
or
in
xchg
or
push
in
lea
cmp
test
xor
and
arpl
in
idivb
cmc
inc
push
xor
ljmp
stos
adc
cs
aam
sub
gs
add
jb
dec
push
xor
sbb
mov
mov
cmp
andl
testl
data16
notl
cli
sub
and
addr16
test
mov
dec
cs
or
scas
int
xchg
cmc
rcrl
adc
mov
les
push
vpunpcklqdq
jnp
outsl
sahf
mov
xchg
loopne
xchg
pushf
lahf
ret
pop
mov
imul
call
pop
das
mov
clc
pop
pop
sahf
imul
hlt
inc
adc
jg
insb
stos
xchg
in
push
inc
xor
pushf
out
call
mov
fnstcw
in
dec
fld
push
pop
mov
rcrb
jae
enter
es
cmp
and
push
call
decb
das
inc
in
mov
test
flds
mov
imul
das
int
push
shll
xchg
in
pop
sub
ja
icebp
inc
xchg
xor
mov
dec
cmp
mov
cwtl
pop
sbb
push
mov
inc
inc
or
sahf
inc
testl
inc
rol
and
ficoml
test
push
jno
add
or
cltd
decl
pop
stos
jno
shll
lret
cs
push
sarl
push
xor
fcom
dec
imul
inc
adc
fistps
pop
xorb
ret
fcomps
dec
rcrl
out
pop
fsubs
out
pop
sub
rcrl
and
test
adc
xorb
jbe
sbb
in
mov
or
fadds
jae
cmpsb
push
sti
les
adc
ds
ss
dec
push
mov
addl
cmp
sbbb
int
out
lret
inc
sub
outsb
ljmp
inc
icebp
stc
lret
loope
sbb
fisttps
pop
pop
sub
mov
mov
into
mov
cmp
imul
cmp
pushf
subb
pusha
dec
and
test
jne
xchg
aaa
lods
add
mov
pushf
push
outsl
jae
pop
mov
cmp
out
dec
mov
and
lea
sbb
pop
test
subl
xor
xchg
imul
arpl
mov
mov
es
pop
inc
jmp
push
pop
jnp
inc
or
loope
orb
adc
sbb
sub
jb
ds
rorb
xchg
sub
cwtl
pusha
sub
repnz
mov
popw
subl
mov
mov
fimuls
mov
popa
shll
add
gs
rcr
shlb
js
ss
loopne
xor
popa
cmc
add
out
repz
add
lret
aaa
pop
enter
xor
std
scas
xor
push
mov
sbb
repz
cmp
repz
mov
flds
into
push
popf
loop
in
pop
mov
jecxz
inc
ss
mov
lcall
movsl
and
daa
mov
adc
jbe
pop
sub
sub
push
movsb
sbb
lea
dec
js
xrelease
outsb
or
sbb
mov
call
inc
in
outsb
pop
adc
pop
cli
fmuls
lock
sbb
int3
enter
pop
push
or
je
jno
cmp
in
xchg
call
sbb
mov
xor
in
xchg
dec
loopne
adc
out
in
xchg
inc
add
mov
and
ja
jmp
and
imul
sbb
push
out
pop
sub
xchg
and
mov
jge
ret
lock
int
mov
sbb
inc
popa
inc
test
fstps
xchg
inc
cs
pop
addr16
test
mov
push
in
fsubs
sbb
js
clc
cmc
ss
inc
mov
inc
dec
mov
cld
into
jne
dec
pop
mov
adc
fmuls
rcrb
xor
push
idivb
xor
mov
fwait
sbb
and
mov
dec
pushf
imul
dec
dec
adc
dec
insl
xchg
adc
or
loop
add
xor
mov
xchg
mov
cwtl
out
mov
leave
out
mov
sub
sbb
lahf
sbb
adc
fidivrl
cwtl
test
sub
repz
data16
cmp
imul
std
xchg
aaa
mov
inc
hlt
rcll
adc
fs
inc
insb
jns
xor
data16
out
push
add
mov
sbb
ret
xchg
outsl
push
mov
or
fwait
xor
mov
cmp
pop
ss
jo
lods
push
data16
lret
sbb
enter
add
jge
aam
icebp
mov
lods
in
notl
pop
pushf
mov
jb
cmp
inc
popa
and
mov
jno
loope
test
fwait
jno
jnp,pn
pop
jno
sbb
adc
int
insb
jmp
call
ja
jne
ljmp
loopne
jb
scas
inc
je
mov
test
dec
adc
leave
jge
popf
lods
jb
mov
pusha
enter
inc
add
fstl
xor
or
push
sbb
inc
popf
aaa
push
adc
lret
and
rcrl
xchg
add
out
and
mov
loope
out
jecxz
das
jae
jbe
xchg
into
lahf
push
adc
sub
mov
mov
adc
bound
lods
mov
dec
ss
sub
fiadds
or
jmp
lods
dec
fcomip
mov
push
icebp
pusha
xorl
lods
adc
rcll
inc
mov
jnp
nop
sbb
jmp
shll
mov
cmp
mov
xchg
push
hlt
xchg
jnp
mov
ds
mov
into
std
jmp
aaa
cmp
fstps
shrb
push
lea
cmpsb
mulb
inc
sub
daa
stos
inc
cs
mov
jge
sarl
push
cmp
add
repz
push
inc
add
xor
pop
repz
sbb
jns
sub
gs
cmpsl
fisttps
or
aam
jmp
mov
aam
mov
shlb
sarb
mov
loopne
data16
ja
add
repnz
and
xchg
daa
call
out
inc
xor
dec
cpuid
ds
cld
setl
xor
jo
stc
cmp
adcb
or
shlb
cli
subl
in
mov
mov
pop
cltd
mov
mov
stc
push
pop
scas
mov
and
out
nop
pop
push
fmuls
mov
push
call
jle
insb
bound
ret
pop
clc
and
mov
adc
adc
stos
test
loope
pushf
cmc
xor
ror
aas
out
mov
in
inc
das
cwtl
inc
push
mov
out
fwait
scas
call
inc
scas
outsl
cmpsb
mov
pusha
shrb
clc
push
loop
lret
aam
lock
dec
mov
fs
in
push
loope
out
mov
add
int3
jb
xchg
scas
mov
push
ss
push
movsl
inc
cwtl
mov
dec
sbb
xor
mov
cmp
add
stc
xor
cld
inc
es
push
cmp
cmp
push
insl
je
fmuls
mov
push
mov
and
ret
sahf
xchg
icebp
cmc
enter
cltd
sbbb
cmpsl
lret
pop
pop
cli
shll
mov
gs
xchg
in
lds
frstor
add
push
out
push
rcl
sbb
repz
cs
lret
sahf
mov
push
movsb
jb
adc
mov
inc
rolb
div
dec
jg
mul
ficompl
or
sbb
subb
lcall
mov
sahf
cmpsb
push
mov
and
and
xchg
mov
popf
mov
fnstsw
enter
inc
rcrb
push
mov
push
sti
jecxz
mul
mov
inc
aam
inc
dec
cmc
dec
dec
out
sub
cli
rolb
aam
inc
and
ja
or
sbb
jle
xchg
jno
push
and
stos
adc
mov
hlt
imul
sub
push
dec
push
xor
scas
jp
pushf
cmp
cmp
lods
xchg
push
out
mov
sbb
lds
mov
xor
loopne
sbb
adc
iret
mov
movsl
sbb
adc
rolb
mov
out
ljmp
testb
mov
arpl
idiv
int3
insb
lret
mov
imul
repnz
mov
inc
std
adc
jp
fs
ret
test
push
dec
hlt
sub
push
adc
cltd
sbb
hlt
fs
pop
adc
xor
inc
and
addr16
or
stc
stc
dec
mov
pushf
fxch
sbb
repz
sbb
repnz
cs
lahf
jae
cmp
es
ss
cmpsb
cwtl
dec
stc
pusha
xchg
xchg
mov
lea
dec
ja
sub
mov
cmp
push
cli
push
lret
into
or
mov
jecxz
sub
jno
xchg
inc
imul
sbb
repnz
dec
test
pop
inc
lcall
jmp
ljmp
sysret
adc
mov
into
cmp
fisubs
nop
pop
icebp
sub
mov
jmp
rcrb
adc
popf
out
cmp
and
mov
enter
mov
test
jo
into
add
inc
lea
cmpb
jl
aad
sub
mov
mov
sbb
ss
sub
dec
pusha
pop
xor
push
scas
divl
cmc
mov
mov
mov
mov
mov
cld
ror
repnz
ljmp
add
sbb
cwtl
jno
dec
push
mov
outsl
mov
push
jbe
add
mov
aad
xchg
addl
cmpsb
popf
mov
js
mov
push
sub
addb
inc
loope
flds
push
jge
cmp
cmp
dec
mov
imul
cmp
dec
les
mov
add
push
xchg
imul
cli
xor
adc
cmp
cli
movsl
repnz
mov
inc
mov
repz
and
xor
adc
ret
cwtl
mov
xchg
into
mov
ds
cmp
mov
pop
pop
jle
rorb
cmp
clc
sbb
lea
xchg
dec
and
dec
movsb
xchg
jmp
dec
mov
add
dec
leave
outsb
mov
sub
dec
imul
mov
and
lret
inc
jl
inc
into
or
xlat
je
std
loope
and
orl
int
repz
insb
popf
xor
push
std
jns
jns
inc
pop
inc
push
insl
repnz
dec
filds
cmp
jl
repnz
das
xchg
inc
adc
sbb
lock
shlb
movntps
xchg
push
and
add
in
lcall
jb
and
mov
xchg
test
ret
imul
mov
mov
add
outsl
sub
or
add
push
inc
sahf
push
inc
and
sysexit
xchg
mov
jnp
or
adc
push
shr
imul
jae
or
pop
stc
stos
popa
jecxz
adc
iret
test
fidivs
cmpb
push
shlb
jns
adc
sub
and
adc
imul
lods
stos
inc
xor
int3
imul
sub
fs
or
and
push
lea
dec
inc
repnz
scas
pop
xorb
mov
or
insl
repnz
push
cs
aad
lret
push
addr16
ret
jae,pn
xor
cmc
cmp
xor
mov
push
push
sub
sbb
sub
shl
aaa
insl
mov
repz
xor
test
repnz
xor
pop
jno
dec
or
movzbl
bswap
mov
jno
mov
fnop
dec
cmp
inc
cmp
push
inc
leave
pop
call
add
or
pusha
out
mov
jmp
fcompl
push
sti
mov
xor
int
lods
andb
dec
adc
aam
push
nop
es
in
sub
sbb
out
pop
lods
adc
adc
xchg
or
xchg
mov
divb
arpl
or
and
js
into
fadds
pop
mov
push
lock
inc
imul
mov
inc
les
pushl
cmp
mov
imul
jns
cwtl
cmp
daa
pop
cmc
or
outsb
push
lret
dec
sub
dec
rcll
push
into
jl
pop
add
dec
fsubrl
clc
mulb
xor
stc
jno
sbb
cmp
inc
ret
adc
xor
push
jecxz
push
dec
popa
mov
jnp
inc
jb
int
add
pop
scas
push
inc
xor
adc
test
out
pop
cwtl
fwait
addr16
xchg
and
mov
mov
add
int3
popa
adc
nop
arpl
scas
pop
stc
sbb
sbb
out
pop
mov
cmp
inc
mov
cmpsb
fnstsw
stos
sti
ret
sbb
adc
mov
mov
out
push
cmpsb
in
mov
xor
push
stc
adc
jno
inc
inc
fmul
clc
pop
mov
jbe
pop
sbb
adc
adc
inc
cmp
jl
lds
sti
sbb
movsb
push
loopne
and
stc
ss
and
cld
mov
inc
mov
test
insl
mov
push
das
mov
mov
in
adc
pop
cld
push
movsl
cmp
cmp
mov
dec
pop
pop
adc
push
dec
sbb
movsb
adc
or
xor
pushf
call
jecxz
lcall
cltd
jb
push
jo
fidivl
pop
mov
xorb
stos
stos
adc
adc
aas
mov
fiadds
outsb
push
jns
cmp
dec
lock
mov
mov
stos
in
add
mov
jg
cmc
repz
roll
imul
int3
mov
fs
test
icebp
sti
jl
cli
mov
mov
push
fucompp
cli
xchg
fldl
jb
pop
mov
lcall
mov
dec
xchg
int
jnp
fs
clc
jnp
pop
sbb
call
sbb
rcll
mov
int
rolb
dec
and
mov
lret
sbb
add
fidivs
in
xor
mov
mov
push
ss
and
inc
rcpps
ds
jbe
test
std
jo
add
mov
ja
out
push
imul
add
jbe
ffreep
dec
cmpsl
push
jmp
fistpll
jmp
add
inc
and
cltd
std
add
push
mov
or
xor
cwtl
sub
jo
fdivrs
sbb
fst
fwait
inc
cmp
push
jle
jp
lods
jle
push
cmp
mov
scas
xor
pusha
sbb
mov
mov
lods
cmp
push
sub
push
fcmovu
dec
jbe
pop
adc
in
sub
mov
dec
lea
addl
add
dec
fmul
add
mov
mov
lea
cmp
push
jne
adc
ds
andl
shlb
cmp
mov
xorb
icebp
lods
test
adc
mov
jge
fidivrl
push
lock
stos
mov
sub
mov
mov
ficoms
pushf
cmp
les
xor
adc
mov
rclb
jge
pop
pop
sahf
mov
push
and
fcmove
pop
pusha
cmp
das
std
xchg
mov
pop
rcll
dec
sbb
movsl
mov
jg
test
add
or
add
sub
cmpsl
mov
cltd
push
test
mov
jno
sbb
sbb
inc
std
addl
adc
shlb
iret
sti
inc
cli
addr16
mov
xor
cs
sub
scas
imul
mov
cmp
ss
movsb
sub
leave
mov
ret
xor
mov
cld
add
xor
dec
sbb
mov
push
xchg
lahf
lea
loope
add
lret
cltd
and
addr16
xor
cmp
fdivl
stos
mov
jle
pop
movl
scas
lea
mov
out
gs
push
xchg
dec
sub
mov
push
mov
push
insl
jp
aaa
jg
mov
adc
jb
sbb
loop
xor
mov
inc
imul
aas
mov
fstpt
lock
jmp
mov
mov
mov
scas
pop
call
and
dec
jno
jnp
fbld
dec
jns
in
les
nop
dec
inc
das
jle
or
cltd
xchg
out
mulb
jno
cmp
pop
adc
pop
inc
mov
sub
adc
jmp
sub
sbb
popl
lret
popa
mov
leave
push
add
mov
out
fs
adc
fldenv
sbbl
dec
jns,pn
and
pop
mov
mov
adc
pop
int
pop
pushf
xchg
jge
inc
jl
shll
and
cmc
mov
or
push
clc
sbb
outsl
in
inc
fcoml
lods
xor
and
fsubrl
cltd
out
fwait
sbb
ja
test
lea
ror
in
push
adc
xor
pop
je
test
sub
test
inc
in
mov
add
inc
or
mov
daa
imul
xor
cmp
sbb
jl
pop
call
iret
popa
push
adc
ds
fucomi
add
inc
pop
stos
inc
dec
imul
jge
movsl
dec
add
add
je
mov
xor
mov
pop
add
cs
and
jg
mov
movsl
sub
shll
nop
ret
sbbb
push
dec
cmp
jecxz
or
xchg
out
push
in
cli
aad
imul
cmpb
rol
jecxz
sbb
push
hlt
icebp
jae
sbb
clc
xchg
adc
push
adc
mov
fdivl
in
fsubrl
jnp
and
in
mov
movsl
pusha
pop
out
sub
push
sub
push
push
movsb
mov
sub
shrb
lret
shrl
hlt
into
stos
xchg
push
iret
sub
in
push
xchg
dec
fdiv
das
xor
sbb
in
xchg
cmpb
mov
clc
in
adcl
xchg
mov
testb
xchg
jae
stos
and
loopne
inc
mov
adc
cmp
push
movsl
leave
stos
into
loope
mov
pusha
jno
fisttpll
fdivrl
sub
ds
jae
pop
cs
wbinvd
xchg
in
sti
std
xchg
push
es
xlat
fnstcw
and
mov
dec
adc
sub
sub
shlb
adc
pop
adc
mov
ficoms
js
inc
iret
fcom
lret
icebp
adc
sarl
popf
mov
aam
pop
mov
jb
jnp
int
arpl
cmp
movb
xchg
int3
cld
je
jecxz
mov
sbb
mov
push
jle
and
nop
lret
mov
imul
adc
imul
jge
inc
or
scas
out
push
lret
push
mov
dec
cwtl
jns
imul
ljmp
inc
mov
mov
sbb
mov
and
lods
cmp
push
push
test
cmp
sbb
cmp
mov
push
aaa
out
mov
aad
xchg
mov
fcomps
xchg
inc
xor
js
movsl
cmp
xor
push
ss
push
popl
inc
xchg
sbb
pop
fsubs
or
sub
sub
push
push
inc
lcall
xor
fsubrl
push
test
cmp
je
stc
pop
icebp
ja
jge
pushf
push
xchg
push
fstp
adc
xchg
xchg
lcall
loope
movsb
mov
mov
add
lds
addr16
jnp
pop
jmp
add
es
cmp
push
popf
xor
cmp
andl
es
clc
fcoms
cmp
mov
inc
cmp
cld
fwait
jmp
cmp
jne
cld
mov
psrlw
sti
pop
jg
push
lods
inc
dec
add
push
dec
mov
sub
stos
xor
sbbb
lret
lds
jg
pop
out
out
outsl
cld
out
sbb
jae
push
jmp
incb
jmp
pop
push
jns
rol
mov
inc
lods
jmp
cltd
ljmp
push
sbb
xchg
jge
lods
or
jo
adcl
stos
out
pop
outsl
jae
ja
je
inc
fisttpl
pop
idivb
cmp
movsb
and
fs
sbb
fisubrs
sti
gs
popa
sbb
push
out
xchg
mov
sub
pushl
adc
or
push
dec
jp
addr16
adc
pop
add
out
inc
mov
xorl
or
sbb
rorb
inc
dec
ja
outsl
fadds
fsub
dec
out
mov
pop
pop
push
mov
adc
leave
in
fmull
and
out
and
sub
sbb
mov
in
jo
out
stc
nop
aaa
jecxz
fwait
stc
ficomps
mov
dec
dec
lret
jmp
jns
adc
push
sub
icebp
jge
adc
push
fadd
fimull
mov
cmp
inc
mov
pop
mov
rorb
hlt
push
pop
jmp
pop
sub
fld
pop
inc
mov
shrl
add
cmp
ja
into
sbb
sbb
xchg
mov
out
pop
leave
add
frstor
dec
das
shrb
mov
imul
pop
outsl
xchg
je
mov
sub
rcll
fmulp
and
test
stos
pushf
leave
bound
call
dec
loopne
popa
fildl
iret
adc
aas
imul
xchg
stos
adcl
aam
pop
mov
and
lods
xor
xchg
push
sbb
dec
sub
fdivs
ds
aam
jo
jmp
xchg
jb
push
loope
inc
cs
sub
test
mov
aaa
imul
pop
dec
jle
rcrb
imul
in
fistl
xchg
pusha
sarl
and
adc
mov
inc
push
xchg
out
scas
movsb
and
movsl
insb
or
pop
and
xchg
and
jl
sbb
repnz
pop
in
cli
jo
add
lcall
mov
cmp
push
movsb
les
jecxz
xor
mov
cltd
pusha
cmp
add
or
jns
imul
fnop
dec
or
xor
loopne
xchg
icebp
sbb
xor
lret
jo
mov
into
jo
push
sbb
mov
and
loop
in
insl
adcl
dec
inc
lret
lds
dec
add
dec
push
out
out
pusha
cltd
adc
push
fadds
add
aas
int
xchg
pop
xor
pop
lahf
call
sub
fsubl
nop
insl
scas
xchg
jge
mov
sub
addl
sub
je
je
mov
dec
sahf
clc
lcall
cli
arpl
pop
pusha
iret
sbb
loope
repz
inc
jnp
sub
jp
push
insl
pop
je
pop
mov
sub
push
fcomp
cli
and
idivl
jns
stos
repz
ret
or
outsb
push
mov
cmc
xorb
pusha
idivl
xchg
sbb
jne
in
fwait
sbb
daa
xor
pop
leave
adc
arpl
or
imul
cmp
cwtl
out
testl
cmpsb
lret
push
pop
push
je
push
push
hlt
dec
aas
xacquire
mov
cmc
stc
out
xor
or
jp
inc
fisubrl
nop
lret
dec
inc
test
in
and
dec
xor
xchg
jp
push
or
rcrb
pop
aam
push
hlt
jo
dec
outsl
pop
lahf
mov
add
mov
fisubs
pop
push
out
enter
ss
or
leave
sbb
loopne
dec
ja
dec
mov
and
rcl
jbe
movsb
adc
xchg
divb
jge
and
sbb
aas
cmp
mov
aaa
cmp
cmp
mov
mov
ret
shlb
mov
bound
ja
imul
or
cmp
push
mov
and
mov
imul
dec
mov
jle
movsb
jnp
enter
or
into
xchg
jbe
call
loop
sbb
movsb
mov
in
es
loope
jg
mov
add
dec
and
das
xor
xchg
lea
outsl
ljmp
pop
aaa
cmp
xor
inc
and
pop
dec
jns
push
mov
movsl
movsl
jb
out
cmp
push
mov
daa
aaa
and
es
and
inc
repnz
dec
bound
add
pop
icebp
xor
push
jmp
xor
dec
lahf
pop
insl
xchg
inc
push
push
cmc
andb
sub
aam
push
aam
gs
dec
loope
mov
sub
inc
in
sbb
sti
test
lea
or
sub
or
dec
jne
movsl
xchg
scas
jnp
rol
cmp
ret
dec
faddl
mov
sub
ror
pusha
jg
jns
lret
lock
push
jge
inc
push
js
sub
jge
add
es
aas
xchg
movzbl
pushf
repz
push
xor
xor
adc
scas
sbb
adc
sub
or
xchg
cmp
pop
mov
jb
jae
bound
sub
push
and
insb
insb
mov
and
pushf
jmp
bound
mov
es
mov
sub
xchg
test
insb
or
mov
aam
or
inc
pop
notl
or
aam
and
aad
lods
pop
dec
pop
mov
push
mov
in
xor
and
and
and
scas
mov
data16
or
inc
sbbl
aam
xor
pushf
scas
adc
fs
or
lods
cltd
pop
in
out
lods
lret
push
sbb
jp
jo
loop
fsubr
add
psllw
xchg
out
jne
loopne
jge
incb
loop
adc
sub
add
pop
push
clc
xor
adc
pop
lods
test
mov
jge
xchg
lock
and
jns
dec
jo
adc
cmpsl
test
mov
jb
fiaddl
std
sbb
jmp
fildll
mov
push
xchg
and
xchg
add
lret
mov
mov
cwtl
fdivl
mov
adc
adc
sti
repz
xor
cmp
xchg
push
stc
test
out
xorb
sarb
lods
enter
xchg
and
pop
outsl
pop
mov
outsl
push
pop
in
jne
pop
jb
imul
cwtl
pushf
xlat
movsl
cmp
out
dec
add
adc
out
lea
xchg
xlat
scas
cli
lcall
in
fnstcw
divl
in
iret
rorb
or
bound
jmp
das
fistl
dec
mov
dec
je
fcomp
sub
jbe
pop
add
jp
sbb
mov
mov
sbb
xchg
rorl
insl
jns
movsl
mov
ljmp
mov
loopne
nop
sub
lahf
jno
jle
inc
dec
popf
inc
pop
jp
out
push
ss
sub
insl
lahf
es
and
dec
cmpsl
outsb
orb
test
aas
decb
mov
fcoms
sbb
xchg
adc
aam
dec
sub
cwtl
in
insb
shrl
aas
xchg
mov
insl
dec
stos
ljmp
mov
jge
mov
negb
cmp
mov
mov
stos
mov
lret
enter
add
xlat
xor
jnp
mov
pop
mov
rcll
mov
mov
jnp
cmpsl
cmc
rol
in
cmp
daa
push
insl
jne
hlt
iret
idivb
pop
lret
xor
push
cmpsb
mov
and
inc
pusha
or
jle
pop
jo
mov
sbb
sub
icebp
ror
imul
les
push
into
aam
in
mov
std
and
and
gs
push
movsb
ja
mov
or
mov
or
xchg
xor
daa
negl
sbb
aas
lcall
dec
pop
xor
fcoml
jnp
insb
or
scas
sbb
popa
fnsave
or
data16
int3
add
add
ja
mov
mov
je
adc
call
add
xchg
inc
push
sti
fmull
or
push
jecxz
insl
ja
add
sbb
pop
xchg
add
cmp
xchg
daa
push
inc
es
popf
mov
nop
adc
jae
andl
rorl
xchg
inc
sahf
cmpb
xor
pushl
push
dec
and
sbb
fdivl
inc
mov
push
cmpsl
inc
ja
pop
pop
cmp
add
rcrb
pop
in
das
cmp
pop
sahf
in
sbb
inc
arpl
es
push
jne
sbb
xchg
out
out
js
dec
loopne
xor
imul
mov
arpl
loopne
and
pop
mov
lods
mov
cmp
dec
call
mov
lock
and
js
jg
pop
or
lret
mov
adc
std
movq
jl
inc
add
stos
or
out
dec
out
sub
inc
or
lcall
sbb
adc
mov
stos
sbb
mov
jg
aaa
test
jge
jecxz
add
xchg
inc
push
mov
ljmp
or
cmp
xor
daa
xor
cmc
jae
or
inc
shlb
pushf
and
leave
rcrl
pop
leave
jmp
push
mov
and
fldt
outsl
stc
cmp
lods
loop
lret
mov
mov
lcall
sub
push
dec
push
cmp
ret
jmp
aam
xchg
sbb
lds
inc
dec
sbb
mov
pop
adc
lods
cmp
std
sti
mov
dec
in
cwtl
stc
sahf
jmp
idivl
sub
mov
out
dec
sub
pusha
fbstp
ret
jl
imul
add
push
dec
push
xchg
or
xchg
pop
iret
jmp
dec
mov
mov
add
mov
inc
xchg
idivb
xchg
mov
addl
cli
jo
lret
or
std
cmpl
add
or
push
inc
jg
dec
leave
rorb
pmaxub
ds
repz
aam
pop
adc
repnz
enter
adc
pop
mov
jns
loopne
jbe
push
out
lds
in
bound
lods
in
daa
imul
shrl
mov
mov
lock
sbb
xor
push
int3
in
mov
mov
mov
or
test
pushf
popa
sbb
inc
jae
lds
adc
ja
push
data16
in
dec
sbbl
mov
cld
addl
in
xchg
sbb
pop
imul
and
push
add
lock
add
add
shrb
and
pusha
loope
pop
push
mov
out
loope
loope
test
jnp
fprem
cmp
pop
cmp
in
stc
mov
dec
into
icebp
test
and
imul
xchg
lods
outsb
push
icebp
sbb
rorl
pop
xchg
sub
imul
cli
enter
inc
jne
lds
sbb
ljmp
ffreep
in
jecxz
push
inc
lahf
inc
xor
xor
cmp
fsubs
add
mov
push
xor
xor
pusha
mov
xchg
test
push
push
dec
lods
and
mov
imul
add
rcrb
push
push
or
push
imul
loopne
sbb
and
adc
icebp
and
xchg
lahf
xchg
shll
mov
in
xchg
mov
rcrl
pop
cmp
es
push
and
inc
addr16
inc
inc
xor
jle
mov
mov
xor
fcoms
les
jnp
outsb
jo
das
inc
xlat
mov
mov
aas
aad
pop
cmp
or
push
test
aaa
notb
xchg
fsubrs
sti
pushf
add
loope
mov
pop
ret
push
xchg
pop
outsl
xor
rcrb
fmuls
lret
sarl
xchg
sbb
jg
stc
outsb
or
out
sbb
xlat
mov
loopne
mov
cmc
rcr
push
mov
arpl
adc
cmp
ficoml
aaa
loopne
jp
pop
jae
jbe
and
fldl2t
nop
push
dec
fstpl
icebp
fstpl
sub
push
movsl
jb
loopne
push
mov
push
add
stos
inc
insl
mov
cmp
shl
outsl
rolb
sbb
jbe
pop
lret
out
fs
and
in
icebp
xorl
ret
enter
and
adc
cmp
sarb
stos
push
jo
dec
lods
fimuls
mov
pop
jbe
mov
pop
mov
dec
test
pop
adc
into
fdivrs
jnp
in
push
cs
bound
pop
dec
or
popf
fs
mov
ret
cmp
movb
sahf
sbb
fidivrl
ffreep
xor
repnz
pusha
mov
xor
dec
test
in
gs
jno
rclb
pop
pop
imul
fimull
sahf
out
jae
lods
sub
stc
std
in
stos
out
mov
fstl
rorb
fcomps
mov
xchg
adc
call
adc
xchg
icebp
lods
cmp
adc
add
sbb
and
lods
mov
pop
int3
ss
js
bound
or
cmp
dec
adc
sub
out
popa
test
add
sub
sub
fisubs
or
dec
aam
mov
jno
ret
push
jnp
add
je
pop
jl
outsl
and
mov
rcrw
jno
js
cmp
dec
sbb
inc
shrl
out
inc
cmpsl
insl
mov
subb
mov
lods
lahf
push
das
xor
xor
push
add
leave
call
das
mov
sub
pop
loopne
adc
jae
out
and
scas
xor
cmp
ret
movsb
ss
adc
ds
shr
gs
inc
cmpsb
rcr
cmp
fldenv
lods
jns
xchg
test
push
imul
int3
jp
repz
fwait
leave
push
dec
or
xor
cmp
jge
sbb
mov
movsl
in
jb
mov
mov
sbb
lods
and
and
fsubrl
cmp
sub
les
add
insl
dec
imul
shlb
lock
shll
dec
bound
push
arpl
push
push
sub
push
pop
jl
inc
rol
arpl
lret
cmp
and
xor
aad
pop
sar
ret
movsl
test
inc
inc
arpl
mov
mov
sbb
daa
into
outsl
mov
mov
jl
push
or
int3
mov
inc
push
lds
jb
add
mov
dec
and
fsubrs
loop
les
inc
inc
mov
mov
mov
fidivs
gs
dec
les
gs
mov
hlt
jno
inc
fistps
insl
add
dec
pushf
mov
adc
pop
daa
jne
xchg
je
and
add
jne
xchg
or
mov
mov
leave
mov
aaa
pop
jo
mov
add
mov
lock
jae
movsl
cltd
outsb
lds
test
mov
xor
sbbb
adcl
scas
adc
jno
or
or
or
shlb
icebp
repz
data16
mov
fs
cmp
fldl
ret
push
and
je
stos
push
daa
out
and
mov
testb
push
pop
sahf
int
shll
sarl
cld
push
scas
and
cmp
in
sbb
cld
mov
sbb
xor
fnsave
mov
jmp
fs
xchg
repz
mov
cmpsl
adcb
addb
xchg
sub
jnp
cs
lahf
in
xchg
pop
pushl
mov
insb
xchg
xor
scas
outsl
jecxz
mov
sub
outsb
xor
insb
xorb
dec
add
mov
mov
test
cmc
cld
mov
push
fldt
pusha
xor
xor
xor
fcmovnbe
clc
cmp
push
inc
leave
lret
xor
pop
jge
adc
nop
hlt
mov
xchg
fdivl
fidivrl
mov
mov
pop
lods
daa
jns
imul
jmp
or
pop
sub
mov
movsb
xchg
pop
sbb
mov
imul
das
cs
aaa
pusha
stc
and
sbb
pop
xchg
outsl
push
xchg
and
xor
jmp
inc
cmp
dec
adc
das
sub
xor
push
divb
ja
xlat
test
mov
push
ficoms
imul
push
cld
fs
adc
je
cmc
fwait
mov
pop
pushf
pop
jns
jmp
and
pop
dec
sbb
jg
add
and
xor
dec
arpl
cmp
pop
test
jbe
aas
insb
cmp
mov
jae
in
ja
js
mov
movsl
pop
outsb
test
fnsetpm(287
cmp
test
and
pop
jle
int
push
into
aaa
pop
outsl
mov
cli
cmp
imul
frstor
mov
hlt
sub
mov
xchg
cs
push
dec
mov
add
js
insl
cs
lret
nop
pop
cld
dec
jle
jg
push
xchg
inc
xchg
lret
std
mov
pop
mov
lock
out
ret
adc
mov
inc
cwtl
stc
movsb
adc
inc
adc
nop
sahf
add
lds
imul
pop
push
mov
mov
jbe
repnz
pop
test
sti
adc
and
lods
add
data16
ja
enter
ljmp
mov
jo
or
and
sbb
fstps
inc
mov
mov
mov
lahf
test
jecxz
jb
leave
aad
stos
sbb
push
into
jb
fistpll
mov
fnsave
movsb
mov
pop
je
mov
xor
push
loope
jae
lods
pushf
and
xor
xorl
lcall
sub
hlt
out
sub
jno
ljmp
aam
bnd
and
add
xor
xchg
lea
xchg
lret
aaa
daa
bound
push
mov
mov
mov
cmp
add
das
mov
mov
aaa
pop
lahf
sbb
clc
jg
push
repz
xchg
cli
mov
cwtl
xchg
popa
add
jae
cmpsl
and
inc
test
insl
mov
stc
scas
sbb
aam
jo
das
insb
pop
iret
mov
mov
outsl
in
nop
pop
lcall
xchg
lds
adc
lods
imul
mov
sahf
push
add
out
push
out
outsb
and
cmc
das
xchg
jne
decl
or
push
fcompl
xor
and
popa
jb
xchg
stos
outsl
mov
mov
imul
push
mov
push
inc
xor
adcb
ljmp
fmull
cmove
jno
mov
inc
aaa
adc
jge
out
fcmove
fwait
xchg
loopne
jo
xor
cli
cmp
jmp
mov
rclb
sub
and
sub
int
lods
ret
notl
scas
mov
rcll
push
sahf
sbb
inc
pop
mov
loope
xor
sbb
dec
sbb
je
lods
scas
cli
mov
push
shrl
enter
adc
mov
lcall
jbe
xor
fsts
cmp
add
mov
negb
jmp
add
imul
cld
xchg
test
push
test
jp
or
jb
fwait
iret
push
xchg
sub
insb
out
clc
cmp
sbb
mov
fidivs
repz
mov
les
inc
test
dec
or
int3
xorb
dec
cmp
in
mov
mov
or
insb
cmpsl
enter
out
push
inc
loope
daa
mov
outsl
lcall
and
movsl
sbb
mov
ret
xor
inc
pop
pop
cmpsl
mov
pop
push
sub
int3
std
mov
or
jp
fisubrs
cmp
pop
xchg
aaa
add
int
outsb
cmp
inc
scas
xor
stc
lahf
adc
imul
imull
mov
stos
inc
or
mov
cld
xchg
lret
test
imul
std
insb
xchg
or
rorl
cltd
bound
xlat
mov
out
sub
push
test
jge
push
js,pn
inc
insl
dec
mov
in
cmp
mov
xchg
mov
std
mov
das
mov
xchg
rcr
xor
pop
inc
add
dec
cwtl
xor
nop
arpl
mov
mov
stos
jnp
xlat
xchg
add
push
daa
je
mov
dec
ss
notl
xchg
pusha
inc
and
cmpsb
pop
jmp
shr
xchg
int
rclb
adcl
ljmp
jns
push
cmp
sub
addr16
imul
inc
mov
scas
cwtl
cli
dec
movsb
ss
dec
movsl
cmp
cmc
shrl
sub
push
inc
sub
sar
mov
clc
xor
pop
xor
sub
xchg
add
push
xor
xchg
mov
xchg
sbb
adc
or
cmp
adc
inc
xlat
aas
adc
in
sahf
in
aas
push
subb
or
add
icebp
sahf
and
adc
add
push
test
mov
dec
jns
pop
push
rcll
jae
add
fmull
iret
mov
mov
lock
pop
mov
jl
cmp
mov
pop
mov
pop
in
mov
decb
or
push
mov
push
cld
js
sub
push
out
fcomps
popa
xchg
in
and
subb
ret
cmc
pop
clc
js
pop
xorl
ret
xchg
adcl
dec
xor
mov
mov
jle
push
mov
in
loop
test
mov
pop
and
in
jecxz
sub
pusha
rcrb
mov
push
mov
clc
in
stc
jnp
jo
jmp
leave
sahf
adc
push
scas
xor
cmp
mov
fsubrs
mov
mov
in
jo
hlt
cltd
dec
xor
cmp
fsubrs
push
fucomi
inc
shrb
ficompl
pop
loop
push
out
cmp
add
ljmp
mov
ljmp
inc
xor
or
sub
dec
sbb
scas
mov
pop
jns
stc
xor
and
popa
sbb
sbb
sub
add
or
lock
mov
xchg
pusha
mov
das
sub
push
add
inc
ss
jbe
cltd
cmp
push
insb
xor
and
push
dec
bound
fsubp
movsl
clc
leave
popf
fstpl
cwtl
lods
out
cmp
inc
movsl
loop
dec
mov
push
mov
out
or
pop
adc
mov
add
shr
mov
sub
pop
pop
sub
andb
movsl
addr16
cmc
sub
push
push
inc
pop
rclb
cmp
xlat
mov
in
and
gs
cmp
sub
fildl
and
push
leave
mov
lds
enter
stos
movsb
xchg
lea
cmp
adc
leave
push
hlt
dec
pop
shll
sbb
lret
xchg
popf
xchg
pushf
hlt
push
fwait
or
test
mov
lods
mov
or
repz
testb
test
je
adc
add
loopne
add
mov
add
ret
pop
push
mov
outsb
mov
cmp
dec
mov
dec
test
or
mov
mov
mov
pushf
adc
std
aad
leave
mov
cltd
int
push
insb
mov
jge
sahf
cmpsb
imul
loop
cld
dec
dec
sub
fucomi
add
mov
xchg
push
mov
andl
mov
mov
shlb
mov
mov
lds
clc
jnp
jnp
into
dec
fstpt
das
sbb
shll
lock
mov
inc
and
clc
mov
les
cmp
pop
test
lock
lods
mov
pop
mov
dec
or
mov
loopne
fdivrl
cmp
les
fsubs
xchg
lock
jmp
push
sarb
jecxz
mov
jno
or
adc
pusha
add
fstp
mov
stos
lret
push
aas
fwait
inc
sahf
scas
stos
jecxz
or
jmp
push
push
lods
hlt
mov
sbb
les
in
loopne
pushf
neg
cmp
jo
mov
mov
and
outsb
adc
lcall
leave
daa
xchg
popf
ret
sub
orl
push
mov
std
sub
aam
andl
lds
int
lret
pushf
or
add
push
push
cmpsb
cli
pusha
shrl
inc
out
imul
push
jno
out
push
orb
add
ret
cmp
dec
sub
inc
fisttpl
icebp
xor
sti
pop
cs
add
xor
lahf
pop
imul
js
ss
vcvttps2dq
inc
js
pop
ret
mov
fildl
push
push
repz
je
das
sbb
call
mov
jb
lods
mov
cs
nop
lcall
les
das
test
push
mov
push
or
push
mov
xlat
xchg
sub
pop
fistpll
mov
dec
cld
loopne
inc
pop
sarb
lahf
out
dec
orl
mulb
in
sub
add
xor
movsb
pusha
dec
stos
mov
pop
mov
jo
jae
push
fbstp
sbb
inc
sahf
mov
add
sbb
xor
push
lret
push
cmp
push
xchg
push
add
rol
fidivl
mov
jecxz
mov
mov
icebp
mov
inc
adc
clc
sbbl
out
movsl
push
ret
movsb
enter
js
dec
sub
pop
enter
imul
popf
addr16
inc
aam
or
pop
pop
popa
fisttpll
out
bound
in
sbb
lods
mov
test
repnz
mov
repz
in
jmp
pop
divl
jge
test
mov
imul
cltd
jnp
mov
mov
and
fs
sub
fs
push
negb
mov
xor
fistps
push
sub
ret
fldenv
inc
push
jecxz
dec
sub
push
loopne
fistpll
jg
cmpl
xchg
mov
jecxz
pop
lret
pop
xlat
mov
sub
mov
test
push
jb
repz
mov
mov
out
push
or
mov
or
daa
sbb
movsl
cmp
mov
sub
out
push
xor
jmp
and
pop
rcll
cli
or
or
movsl
rcrl
rcll
test
cmp
sti
cmp
adc
inc
sub
mov
lcall
and
mov
xchg
lret
pop
jo
mov
shll
aaa
js
repz
rcl
lods
xchg
jns
add
imul
mov
sub
or
std
addr16
insb
jecxz
xor
pop
jge
fwait
sbb
jle
cmp
and
push
xor
jecxz
mov
sub
sbbb
lahf
out
insl
inc
fadds
stc
xchg
lret
jg
imul
pop
cli
pop
fsubrp
mov
xchg
cmp
imul
flds
adc
pop
out
jb
jmp
sbb
or
idiv
lcall
jo
imul
sub
or
fwait
jo
and
hlt
stc
sbb
lods
in
mov
popa
push
xchg
into
pop
cmp
arpl
subl
mov
loope
lcall
in
outsl
inc
ror
dec
stos
mov
mov
inc
loopne
dec
xchg
into
push
fistpl
xorl
clc
mov
dec
orb
xor
mov
test
adc
xor
out
ror
inc
addl
js
jo
ret
mov
out
xchg
mulb
push
int
mov
sti
xor
dec
xor
rol
xor
sahf
arpl
xchg
or
sub
mov
sahf
adc
test
notb
cmc
mov
aas
rclb
xchg
bound
xchg
sbb
pop
stc
inc
mov
mov
test
or
mov
loopne
movsb
xor
aaa
pop
in
dec
adc
xchg
loope
dec
icebp
cltd
jge
mov
cmp
cwtl
test
or
cwtl
jb
push
mov
xor
outsb
sarl
add
int
or
and
arpl
add
lret
test
pop
or
mov
test
lret
popf
mov
adc
xchg
icebp
mov
pop
ret
mov
mov
xlat
mov
cmp
cmp
push
xchg
pop
xor
jb
out
fisubl
add
fsub
or
mov
sub
addl
dec
stos
int3
aaa
sbbl
jo
mov
mov
push
pop
test
stos
ret
stc
lcall
pop
inc
dec
test
cmpsb
mov
ljmp
shlb
mov
adc
dec
jbe
xor
and
imull
fimull
pop
shrb
mov
xor
add
xor
jge
aad
push
outsl
add
jmp
xor
sbbl
inc
je
pop
mov
je
rolb
enter
add
fisubl
pop
rcr
and
sbb
out
shll
je
inc
aaa
add
mov
adc
loopne
push
lahf
push
loope
or
int
xor
sbb
adc
pop
shrb
push
jg
lods
lret
frstor
psraw
mov
xor
inc
add
dec
push
cld
rol
insl
or
ds
cmp
xor
or
jns
mov
loope
loopne
mov
out
add
out
bswap
mov
jp
sub
and
fwait
scas
mov
mov
jge
mov
xchg
pop
and
js
jg
insb
mov
sahf
repz
test
repz
and
cld
push
test
push
stos
ljmp
je
mov
cmpsb
inc
mov
loopne
sbb
dec
xchg
add
xor
rol
or
out
inc
scas
dec
and
xchg
pushf
push
ret
adc
insb
pop
jle
push
int3
dec
rorl
jne
in
lock
fiaddl
mov
sbb
jl
mov
sbb
icebp
pop
xchg
and
pop
adc
repnz
ds
test
scas
push
push
insl
repnz
into
test
lods
ljmp
aam
jg
sbb
push
pusha
and
nopl
cmp
or
rclb
adc
adcl
jmp
into
lcall
das
or
stc
repnz
inc
outsb
inc
lods
pop
sbb
int
stc
data16
mov
call
data16
stc
xor
ja
testl
mov
data16
hlt
aas
push
or
mov
sbb
inc
fdivrl
jae
xchg
adc
imul
adc
rclb
mov
xor
xor
push
push
scas
jle
out
orb
std
mov
or
cld
arpl
imul
sub
sti
addb
xor
or
inc
fstps
pushf
hlt
inc
pop
cmp
push
dec
sub
xor
sahf
call
sti
iret
xor
nop
pop
xor
call
loopne
adc
cmpsl
mov
fwait
or
sbb
int
pop
adc
and
xchg
js
shl
imul
fisttpll
int
sbb
test
fmuls
addr16
scas
sub
clc
mov
xchg
int
fisubs
test
or
xchg
dec
inc
jae
gs
mov
bound
test
mov
cmp
es
int
cmpsb
mov
dec
iret
test
jo
out
std
and
or
push
ret
adc
add
adc
loopne
push
sarb
xor
jns
fnstenv
dec
mov
std
jns
xchg
xchg
int3
cmpsl
adc
lds
adc
fnstenv
jae
clc
push
cmp
mov
mov
push
inc
sub
push
dec
jge
xlat
jle
xchg
jns
cmpsl
jmp
cltd
sub
mov
pop
mov
nop
pop
cmc
mov
dec
call
xor
dec
cmpsb
movsb
repnz
scas
dec
data16
dec
outsb
outsb
xlat
cmp
ja
shr
testl
outsb
adc
ds
mov
das
mov
stos
call
filds
popa
xchg
sub
out
mov
sub
stos
lods
sub
jae
inc
icebp
lcall
inc
stos
das
mov
leave
push
cwtl
outsl
adc
decl
or
push
inc
loop
xor
rcll
cltd
aas
lock
icebp
dec
in
lahf
pusha
sbb
jl
and
arpl
or
and
iret
test
loop
xor
loope
addr16
push
and
lcall
push
shl
jp
test
sub
mov
add
sub
lcall
sbb
rclb
pop
pop
bound
lret
push
jle
sub
or
or
pop
mov
mov
sti
test
mov
jae
sbb
adc
sbb
jae
out
xor
mov
sahf
jp
inc
jns
loop
dec
or
xchg
mov
mov
das
dec
ljmp
pop
pop
je
cmp
clc
sub
repz
xchg
xchg
add
dec
dec
in
cmpsb
xlat
addr16
mov
hlt
out
sbb
mov
pop
add
xor
inc
and
push
jmp
andb
pop
mov
arpl
rorb
sbb
cli
lahf
and
push
in
out
lret
xchg
add
sbb
or
mov
mov
ret
in
adc
cltd
mov
xlat
pop
add
inc
repz
ja
fcmovb
cmc
in
rorl
push
sbb
fidivl
xlat
mov
adc
jb
mov
call
pop
fmull
sub
dec
push
lods
pop
js
sbb
mov
jns
ret
test
enter
popa
ljmp
movl
ljmp
mov
daa
and
cmp
ljmp
jl
push
arpl
dec
sub
inc
sbb
jl
test
test
adc
cmpsl
lods
mov
hlt
push
xor
popa
lea
mov
lds
repnz
push
xchg
jg
add
inc
fmuls
and
push
and
andb
jge
push
das
sub
jae
jns
or
pusha
lock
in
jno
xchg
mov
mov
shl
mov
fdivrl
inc
mov
mov
cmp
stos
push
test
mov
data16
mov
dec
lods
outsl
push
movsl
loope
mov
aaa
xor
mov
frstor
pop
out
mov
stos
add
rol
cmp
repz
scas
xorb
push
btr
mov
aam
jnp
movsl
sbb
or
sbb
cmpsb
into
sti
mull
mov
xlat
icebp
and
mov
loopne
jg
cmp
mov
cmc
inc
push
mov
xchg
lds
loope
popf
fbld
lds
dec
lods
xor
scas
mov
pop
lret
xchg
cmp
jne
push
jg
mov
dec
adc
and
cltd
sub
out
mov
dec
pop
xor
cltd
mov
loope
or
jno
xchg
test
push
test
sbb
dec
push
icebp
dec
fstps
and
add
sub
mov
insb
sahf
xchg
test
ret
dec
and
sbb
dec
mov
push
inc
xchg
dec
fcmovnb
cmpsl
sti
loop
adc
jg
sbb
flds
sub
iret
int
add
pop
out
lods
out
add
jns
cmpsb
cmpsl
sbb
jmp
outsl
pop
out
daa
pop
dec
or
mov
in
mov
pop
imul
sbb
jle
xor
and
push
in
outsb
imul
int3
loope
hlt
cli
mov
sub
dec
or
jae
cmp
out
ljmp
push
mov
adc
xor
pop
cmc
jb
xchg
fwait
pushf
or
xchg
xor
scas
jbe
and
jbe
inc
mov
sbb
jge
fldt
lret
xor
sbb
std
xchg
vunpcklps
or
xchg
idivb
adc
ret
addr16
mov
adc
xor
pop
adc
es
cmc
jecxz
insl
mov
xor
mov
pop
dec
mov
or
jl
inc
ljmp
pusha
adc
lock
fstpt
ret
test
lahf
mov
test
aam
add
data16
inc
imul
mov
inc
lods
dec
scas
leave
js
mov
pop
std
xchg
sbb
add
jb
or
call
pushf
int
test
call
mov
push
mov
loope
adcb
inc
and
movsb
pop
sub
cmp
sbb
xor
sti
cmp
imul
push
arpl
xchg
test
into
pop
or
pop
repnz
arpl
addl
push
adcb
cli
rcr
xchg
ljmp
sub
rcr
mov
les
cmpsl
lcall
test
stc
xchg
idivb
sub
inc
ss
or
aad
out
cld
loope
push
fstps
jns
xlat
inc
jle
outsl
sbb
jnp
push
mov
xchg
xchg
cmc
cmpsl
in
mov
in
sub
cmp
ds
mov
xchg
mov
push
dec
cmp
pop
inc
hlt
sti
cmpsl
fldenv
xchg
dec
popa
fwait
or
incb
or
push
std
sahf
inc
daa
mov
cmp
dec
cmp
dec
icebp
insl
popa
repnz
push
bound
mov
clc
pop
push
hlt
xchg
push
aas
andb
out
sahf
or
inc
adc
dec
imul
movsb
fsubrl
jp
mov
movsb
xor
xchg
or
pop
loopne
sti
mov
cmp
add
ja
sub
jnp
fs
rclb
mov
sbbb
test
cli
dec
sbb
jne
out
inc
mov
mov
mov
insb
repz
add
xchg
fchs
mov
lcall
or
rcrl
sub
dec
sti
xchg
ds
fisubs
or
and
add
add
sbb
mov
or
xor
clc
aaa
movsb
dec
leave
inc
pop
orb
and
dec
or
daa
xlat
dec
jle
cwtl
ret
push
rcrl
inc
dec
lret
mov
dec
out
dec
jmp
gs
push
pop
je
xchg
mov
fnsave
adc
outsl
stos
xor
gs
fwait
sub
jno
les
lods
lahf
loopne
test
sbb
clc
insb
daa
scas
push
push
sub
adc
into
sar
cmc
lea
test
push
and
fildl
hlt
leave
xor
das
or
in
movzwl
lds
data16
jp
push
xchg
mov
adc
jecxz
mov
into
rclb
dec
xchg
cmovb
push
lret
ja
lret
jg
hlt
mov
dec
mov
lahf
lret
push
rolb
stc
cld
into
sahf
sub
scas
adc
jecxz
aam
cmp
fld
inc
xor
jne
push
aam
es
sub
mov
xchg
mov
adc
dec
icebp
arpl
push
adc
enter
push
cld
je
ror
jp
repnz
ret
or
int3
bound
jmp
dec
mov
mov
imul
leave
xchg
test
xchg
push
xor
or
dec
dec
push
sbb
popa
popa
mov
shrb
adc
lea
cwtl
push
sbb
xchg
scas
jl
pop
int3
mov
add
repz
add
mov
push
daa
mov
mov
aas
subb
sbb
or
bsr
enter
icebp
imul
lahf
mov
xor
jae
mov
lock
jl
js
inc
cmc
or
insb
mov
or
sbb
test
cmp
sbb
fcoml
mov
push
int
or
ljmp
mov
jo
sbb
and
pop
lods
xchg
aam
pop
xor
add
mov
fwait
clc
cmp
sub
cmc
inc
lea
ds
out
ja
dec
and
fstps
cmpsl
hlt
movsl
xor
cmp
cmc
js
push
or
cs
mov
outsb
std
nop
push
adc
mov
jns
mov
sbb
fisttps
fcomps
inc
add
and
jo
mov
hlt
xor
ret
xchg
jecxz
sahf
test
cltd
and
stos
icebp
sbb
aam
test
clc
cld
mov
jnp
add
or
and
sub
ja
lds
mov
add
aas
jno
push
nop
test
mov
sub
or
cmpsb
mov
test
cmp
xchg
fdivrs
inc
test
mov
jns
jle
pop
mov
cmp
aas
mov
jle
xchg
clc
mov
sbb
stos
add
xor
adc
fwait
mov
ret
or
adc
movsl
gs
xchg
sbb
rcl
add
dec
cmp
out
fsubs
out
bound
sbb
xor
hlt
and
int
push
inc
inc
sarb
mov
dec
jmp
leave
lods
xchg
xor
incb
test
sbb
insb
aas
add
pop
imul
sub
shrb
lds
adc
icebp
cmp
les
inc
cld
push
nop
mov
mov
dec
pop
mov
hlt
movsl
scas
popf
inc
jg
inc
cmp
xchg
imul
notb
mov
test
int3
pop
outsb
adc
pop
jb
xor
leave
insl
ja
lods
sub
ret
sbb
jmp
dec
pop
mov
gs
sbb
mov
fiadds
popa
sub
add
inc
adc
cmp
orl
cwtl
dec
pop
pusha
xor
insb
sbb
push
test
inc
pop
dec
mov
or
jp
test
inc
and
xor
adcl
fsubr
mov
fwait
jg
mov
cmp
shrb
fs
stos
adc
int
iret
jne
insl
xor
pop
jp
pop
cmpsb
mov
dec
pushf
cmp
sar
lahf
daa
fiadds
cltd
push
push
xacquire
fstpt
iret
mov
repz
icebp
lret
sub
js
iret
push
data16
lahf
adc
xchg
addb
pop
xchg
dec
mov
fxch
mov
add
push
xor
pop
sbb
fwait
or
push
out
dec
pop
sbb
adc
and
ja
movsb
xchg
mov
sbb
sbb
pop
in
mov
sarl
sub
aad
mov
jp
sub
repz
mov
jge
arpl
mov
outsb
adc
sbb
call
movsl
popa
xor
jnp
fimuls
shl
and
add
jg
dec
mov
pusha
into
mov
push
push
adc
call
pop
daa
push
call
aad
test
rcrb
add
sbb
jnp
mov
push
mov
xchg
adc
lods
repz
repz
test
test
mov
push
xchg
jnp
mov
mov
std
xchg
ds
rclb
cmp
xor
loopne
mov
test
insb
jmp
pop
jmp
dec
popw
fcmovu
dec
into
call
call
divb
andb
cmp
mov
and
cmp
out
ljmp
and
xchg
jno
jmp
cmpsb
popf
xor
imul
inc
xchg
mov
dec
shll
lds
or
mov
xchg
sbb
lcall
ljmp
in
loopne
lea
adc
add
in
inc
dec
mov
push
lods
or
cli
inc
fisttpll
jne
jno
je
shrb
cmc
dec
sbb
inc
jbe
test
adc
jmp
movsb
aaa
sarb
call
push
mov
or
stos
xchg
jmp
inc
pushf
lret
inc
and
and
js,pn
das
aas
mov
inc
outsb
fdivrl
jge
inc
pushf
repz
les
int3
push
mov
add
enter
adcl
ja
sbb
adc
mov
mov
mov
popa
jae
stc
dec
adc
shll
adc
repz
jle
das
fstps
lods
fsubrl
fcomi
nop
bound
pop
mov
sub
xor
sbb
out
cli
push
add
das
imulb
icebp
mov
enter
nop
mov
sub
out
xor
test
push
out
frstor
sbb
jns
or
fcmovnu
push
adc
mov
inc
inc
pop
loop
popf
adc
mov
sub
mov
adcb
mov
cli
dec
cli
inc
lods
push
int3
insl
xor
pop
pop
mov
inc
fidivl
mov
sahf
pushf
dec
jnp
stos
int
adc
fstpt
je
jnp
add
xchg
test
pop
nop
cli
add
mov
lcall
js
test
popa
or
lret
dec
in
add
sub
nop
std
insb
cld
cmp
ljmp
push
mov
dec
cmp
adc
cltd
inc
pop
in
mov
cmp
int3
cltd
cmp
jae
sbb
iret
or
mov
jmp
mov
insl
fsubp
aaa
xchg
imul
les
int
pop
mov
jbe
adc
orb
pop
push
jo
repnz
xchg
inc
sbb
add
mov
out
ljmp
and
xchg
sub
movsb
mov
jno
push
dec
lods
mov
fnstcw
dec
inc
cld
lret
pushf
push
or
xor
xor
xchg
dec
jmp
sbbb
in
mov
cli
aaa
stc
lret
inc
imul
lahf
adc
xchg
insl
add
popf
inc
sub
push
push
push
aad
jecxz
add
mov
push
mov
fisubrl
pop
xor
pop
ja
scas
lds
bound
test
outsb
mov
adc
or
dec
fimull
xor
xchg
inc
ficoml
sub
push
xchg
mov
pop
cltd
jl
sbb
daa
dec
hlt
and
movsl
pop
dec
add
add
sub
dec
fimull
sbb
fsubrs
inc
add
xchg
mov
and
jbe
push
jbe,pt
add
lods
aaa
sbb
sbb
xor
or
jnp
inc
adc
xor
adc
cmp
or
lock
cld
xchg
push
xor
inc
das
sub
cmp
jmp
and
xchg
xchg
push
jae
mov
lea
pop
adc
out
repz
xchg
mov
cmpsb
pusha
mov
test
sub
push
add
leave
imul
adc
int
jno
jb
rclb
cli
lock
sub
sbb
add
mov
lods
jmp
dec
das
sbb
outsl
push
xor
adc
out
adc
pop
mov
xor
cmp
or
mov
sbb
jb
ljmp
xor
fst
scas
or
push
pop
repz
imul
sbb
cltd
inc
stos
loope
jecxz
out
cmp
ret
es
xlat
cmpsl
test
cwtl
pop
int
aas
mov
shlb
xchg
xchg
cmpsl
out
adc
bound
movsl
push
aad
inc
push
outsb
out
mul
fwait
mov
pop
push
arpl
xchg
xor
subl
mov
mov
mov
jl
test
aad
mov
fiaddl
and
inc
mov
test
stos
fdivs
pop
addl
push
aam
push
ficoms
div
jae
mov
push
adc
xor
dec
test
lds
js
popf
sub
sub
aaa
add
mov
aas
push
cwtl
lock
xor
int
popf
loop
push
jbe
inc
sub
add
shrb
fdivrs
sbb
mov
mov
xchg
add
xchg
mov
sub
pushfw
jge
cmp
clc
xor
sbbl
jns
mov
ds
test
xchg
or
mov
sub
mov
jmp
cmpsl
push
aaa
sbbl
sbb
pop
icebp
mov
mov
adc
rorl
andl
sub
out
scas
bnd
out
pop
es
inc
clc
arpl
mov
xchg
out
sub
movsl
imul
fldcw
mov
xor
jae
out
testb
pop
pop
imul
or
lret
sbb
mov
add
idiv
cld
mov
nop
insl
and
lods
dec
cwtl
ds
call
js
incl
xchg
or
lods
jno
arpl
xor
pushf
cmpsl
addr16
mov
pop
mov
push
rcrb
fcompl
xor
dec
cmc
push
lcall
xchg
popa
xor
pop
xchg
adc
and
mov
mov
stos
aad
jnp
add
mov
mul
movsb
nop
arpl
xchg
fsub
adc
push
repnz
pop
loopne
je
pop
stos
sbb
lahf
sbb
or
push
in
mov
pop
scas
std
jno
fsubrs
imulb
lcall
jge
loopne
jo
xor
push
jl
xor
out
testb
rorl
data16
aas
mov
add
scas
push
adc
adc
call
inc
mov
cmpsb
xchg
cs
and
bound
inc
or
sti
pop
bound
aas
mov
xor
add
mov
dec
pop
les
jae
push
or
jbe
or
out
out
lret
add
orl
stos
ret
sub
and
jmp
lods
fsub
push
cwtl
mov
imulb
and
cmp
mull
push
jmp
push
xor
sub
or
arpl
shlb
mov
rorb
insl
and
sub
sub
icebp
mov
repz
xchg
fwait
out
int
add
dec
sbb
pop
int3
mov
enter
xchg
rorl
fcom
and
mov
push
shlb
jno
lahf
and
jno
aam
cmp
cltd
push
push
out
movsb
repnz
hlt
out
add
faddl
or
lret
xchg
gs
aaa
fwait
add
xchg
sbb
or
cmp
test
gs
decb
mov
pop
xlat
insb
xchg
icebp
jo
out
in
insb
mov
shlb
mov
dec
pop
lods
call
adc
aam
pop
out
sbb
jl
in
push
and
ljmp
cli
imul
add
mov
pop
push
sbb
sti
out
jle
adc
test
push
repnz
or
cwtl
fnstenv
out
cmpsl
bound
fdivs
dec
push
mull
push
movsl
jno
aad
mov
xor
dec
and
insb
dec
mov
ja
mov
stos
sub
pop
add
imul
mov
int3
cmp
or
test
iret
cmc
mov
mov
adc
inc
sbb
aaa
inc
dec
imul
or
in
cld
outsl
mov
jge
repnz
lcall
roll
adc
jb
pop
push
rclb
int3
push
aam
fisubl
insb
rep
popf
in
inc
jb
fadds
sub
pushf
rclb
int3
ljmp
gs
test
fwait
inc
pop
push
push
arpl
sub
je
fimull
dec
xor
mov
xchg
sub
xor
add
mov
cmpsl
arpl
cs
sbb
sti
lahf
xchg
and
addl
addr16
arpl
fdivp
dec
rcll
pop
aas
js
mov
or
xor
push
lods
adc
xor
ss
pop
mov
dec
popf
psubq
cmp
ficomps
lds
mov
jge
push
ficompl
lcall
mov
add
push
jb
roll
lret
mov
xchg
jmp
out
mov
hlt
mov
dec
shr
pop
fdivr
shll
jmp
int
fdivrl
xchg
mov
adc
aas
ficoml
ja
cmp
test
dec
call
dec
popf
inc
fsts
insl
and
xchg
stos
xor
aas
into
jae
leave
adc
pop
sbb
sbb
in
dec
adc
in
or
das
insb
mov
add
cmpsl
mov
pop
push
pop
shr
lcall
or
das
aad
inc
mov
lock
pop
stc
xor
lret
and
mov
mov
and
sbb
mov
or
std
ret
mov
les
cli
jecxz
into
or
xor
inc
jnp
inc
jl
andl
or
mov
jecxz
pop
dec
aad
mov
and
jge
mov
xor
call
test
gs
int
jns
stos
lahf
rcll
enter
outsl
mov
data16
jp
scas
lret
hlt
loop
pop
cli
add
insb
mov
rcll
test
bound
out
imul
inc
stos
ret
xchg
test
xor
out
pushf
cmc
call
dec
jno
add
push
or
xchg
push
mov
subl
ss
xor
cld
add
xlat
jmp
aad
aaa
xchg
adc
sbb
test
dec
movsb
jp
pop
push
mov
mov
les
and
inc
in
pushf
ss
xor
lods
scas
adc
gs
adc
pop
mov
aaa
js
sti
aaa
repz
sbb
xor
rorb
subl
jge
mov
xor
inc
jo
adc
sub
gs
push
adc
ljmp
or
cmpsl
mov
mov
into
push
sahf
push
data16
mov
out
daa
push
loop
out
or
push
dec
dec
les
movb
sub
inc
xor
jp
call
movsb
mov
fadds
ja
out
subl
mov
push
std
sub
ficoml
icebp
js
aad
add
leave
push
mov
cmc
xchg
xor
outsl
push
push
sub
inc
out
fcmovnu
sbb
ret
in
lahf
mov
sbb
aas
jns
push
push
lcall
inc
mov
jne
aam
pop
jns
insb
and
pop
jae
inc
pop
mov
ret
pop
fisttpl
repz
mov
nop
push
jne
jecxz
jecxz
fwait
rol
ss
jbe
rolb
add
lahf
ja
mov
cmpsl
adc
clc
mov
movsl
inc
push
sarb
pop
sub
pop
push
xor
pusha
adc
int
mov
inc
sahf
pop
dec
icebp
mov
cmc
jmp
mov
jmp
push
push
cmc
dec
sbb
sub
int
add
add
jmp
test
push
pop
sbb
loop
push
mov
ds
mov
pop
nop
xchg
pop
mov
hlt
arpl
out
popa
push
mov
outsb
inc
js
sbb
nop
mov
insb
call
rcll
mov
adc
aam
push
inc
mov
dec
aas
jge
xchg
movsb
fmuls
xchg
movsl
adc
stc
add
fdivrl
incb
and
std
push
sbb
jmp
icebp
dec
sbb
imul
xchg
testb
xchg
cmp
mov
das
cmp
fnop
mov
scas
rcll
or
ret
sarl
clc
and
lods
pop
movsl
push
push
into
cmp
push
fwait
and
sbb
mov
pop
push
cmp
pop
mov
jge
lret
cli
cmp
mov
push
pusha
daa
icebp
jo
inc
stos
sbb
gs
jmp
mov
orl
fildll
cmp
aad
dec
xchg
push
xor
aam
dec
mov
mov
dec
mov
sub
mov
mov
pusha
repnz
subb
cs
mov
pop
fistps
add
push
adc
pop
jmp
adc
sbb
mov
fsubl
aas
test
xchg
mov
pop
jge
call
xchg
xor
pop
mov
inc
shll
lret
leave
push
sub
mov
in
push
sub
sub
ret
test
push
adc
ss
push
aaa
cmp
lds
mov
rcr
jl
sub
pop
notl
cmpsl
orb
jno
inc
and
jge
aaa
cmp
imul
mov
cmp
mov
into
cltd
pushf
adc
and
insb
mov
imul
mov
lahf
push
ds
nop
jbe
fdivrl
ss
cmp
das
dec
adc
test
lds
xor
cmp
xchg
inc
and
sbb
jg
fimuls
mov
lock
repnz
xor
insl
dec
push
sub
stc
push
pop
pop
sub
clc
and
xor
xchg
loop
lret
lds
ret
push
inc
mov
sbb
dec
jo
adc
inc
pop
test
into
jne
and
push
cmp
mov
push
and
pop
nop
push
push
lret
lods
and
jbe
sbb
int3
aaa
icebp
and
ss
out
cmc
cmp
push
dec
push
xchg
sub
push
sub
mov
cmp
fbld
xchg
andl
sbb
ja
inc
inc
lods
inc
xchg
dec
das
cmp
insl
nop
cltd
mov
cmp
dec
es
dec
cltd
mov
or
test
mov
les
xchg
pop
dec
dec
leave
mov
rorl
and
rolb
mov
mov
jno
pusha
mov
movsb
pop
sbb
cwtl
into
lds
sbb
cmp
xchg
mov
push
push
or
pop
cs
xchg
sbb
and
xor
aaa
jne
pop
and
add
fdivl
push
xor
je
jecxz
dec
add
insb
xchg
sub
addr16
das
xlat
push
das
ss
jbe
inc
cmp
jae
cmp
mov
cmp
imul
outsb
push
out
mov
mov
push
sub
jns
popf
add
xchg
pop
stc
pop
popf
test
cli
gs
aam
xchg
ss
cld
dec
sub
mov
and
push
pushf
lret
movb
arpl
insl
shr
sub
cmpsl
addr16
fs
and
sarl
leave
pop
push
outsb
cmp
hlt
mov
sbb
sub
and
xor
sti
cmp
jae
pop
int
mov
dec
cli
loop
cmpb
adc
movsb
dec
pop
add
sub
dec
push
outsb
cmc
addr16
add
xchg
inc
push
divb
mov
and
mov
jnp
and
mov
or
loope
sahf
or
fldt
cmp
pop
test
xchg
lret
mov
mov
sbb
mov
sar
cld
aad
jae
mov
pop
add
push
addr16
enter
xor
adc
mov
ja
xchg
cld
mov
jg
and
add
mov
and
pop
movsl
push
in
mov
daa
jb
mov
inc
cmpsl
insb
fisubl
cltd
push
xchg
insl
xchg
sbb
fistl
jmp
roll
scas
mov
fsubrs
cmp
xor
mov
inc
pop
in
pop
into
xor
out
ret
cmp
inc
jbe
repz
jecxz
lea
mov
and
push
scas
cs
aaa
pushf
push
sbb
push
xchg
lahf
jecxz
xor
out
lret
mul
xchg
push
aam
mov
inc
mov
lret
lods
dec
je
movb
pop
inc
sub
fadds
scas
xor
std
int
or
mov
shll
pop
push
icebp
add
gs
into
cltd
xchg
add
xchg
setnp
mov
ds
jbe
fldt
loopne
inc
ss
xor
sbb
test
fs
add
dec
lret
subb
js
xchg
mov
mov
rorl
xor
rcrl
dec
pop
arpl
mov
jp
daa
push
repz
cmp
or
xchg
cld
jno
cmp
pop
mov
dec
icebp
pop
adc
push
fadds
mov
test
jmp
ret
lea
jp
lahf
and
addr16
dec
das
das
inc
push
fsubs
fldcw
test
popf
xchg
or
insl
or
out
pop
stos
mov
mov
pop
out
je
jno
movsb
inc
adc
js
inc
loop
pop
jae
aad
inc
out
insl
mov
push
roll
sti
jle
fidivl
movsb
inc
sub
inc
stos
test
insb
adc
cmp
stos
stos
pushf
or
lods
mov
dec
filds
bound
out
stos
fsts
push
fs
sahf
data16
jl
movsl
and
mov
repnz
insb
divb
stc
pop
dec
mov
lret
loope
mov
sub
fsubp
mov
or
sub
popf
outsl
dec
or
inc
sti
in
dec
jo
je
xor
sbb
add
cld
mov
ljmp
mov
jo
dec
inc
dec
jp
mov
push
push
ljmp
je
add
ret
jne
mov
hlt
flds
andl
xchg
sbb
push
pop
mov
xor
lods
pop
xor
push
jg
xor
pop
pushf
sbb
repz
xor
dec
adc
ret
dec
xor
mov
scas
leave
cmpsb
or
in
mov
ja
lret
jecxz
fcom
jg
icebp
mov
cmp
gs
lret
dec
call
push
jl
cmp
sbb
adc
jle
mov
pop
mov
or
ret
loope
ror
loop
das
dec
dec
xlat
leave
out
mov
mov
repnz
notb
xor
out
icebp
jns
and
outsb
cmp
or
jmp
inc
cmp
insl
icebp
xlat
jge
xor
xor
adc
add
pop
xor
psrad
xor
and
xor
ss
leave
pop
jns
rorb
cwtl
add
adc
and
mov
cmp
lods
sbb
arpl
jmp
mov
scas
lods
loopne
sub
in
and
das
test
mov
ficomps
inc
jne
mov
mov
and
mov
xlat
lcall
pop
inc
push
pop
das
push
adc
lock
xchg
jp
popa
cmp
notl
push
mov
jnp
repnz
gs
rcll
mov
pop
jecxz
cmpsl
lret
or
int3
int
jmp
fistpl
arpl
call
mov
jnp
mov
icebp
jle
repz
mov
outsl
or
lret
or
jbe
lret
int3
ret
pop
out
js
mov
fxch
iret
loop
outsl
xchg
fcmove
dec
in
lret
fdivr
rorl
push
dec
mov
mov
lea
das
js
stc
stos
mov
xorb
icebp
cs
sbb
repz
or
in
iret
xchg
lods
sti
jl
ret
and
jb
inc
add
into
mov
xchg
dec
mov
clc
addr16
mov
or
jg
push
in
cmpsl
xchg
mov
mov
pushf
repz
mov
cmp
icebp
and
jb
push
incb
cmp
movsb
pop
xor
jo
fucomi
mov
fxch
or
jmp
xor
push
lcall
movsb
rcll
sti
push
push
mov
icebp
add
icebp
mov
in
outsb
pop
cmp
mov
nop
lahf
add
fnclex
xchg
movsl
popf
or
sbb
lds
add
movsl
enter
adc
sub
xchg
daa
scas
sub
stc
pop
iret
lods
shl
shlb
push
sbb
and
mov
data16
les
inc
cmp
jne
loop
add
sub
push
in
xchg
movsl
lahf
add
pop
out
fidivrl
test
jne
mul
cmp
test
xlat
lret
fsubs
adc
enter
cmp
cmovp
cmpsl
pop
imul
xor
iret
pop
lods
push
xchg
aad
add
pop
sbb
imul
addr16
rorl
nop
mov
fnstsw
loop
mov
rcrb
pop
dec
rcrw
and
les
dec
dec
in
into
xor
nop
loopne
jge
loope
rcl
pop
jge
and
mov
dec
js
dec
nopl
fidivl
sbb
lahf
int3
mov
push
push
es
fwait
sbbl
sbb
movsb
xchg
sub
cmovne
add
pusha
mov
rcrb
mov
and
sub
jbe
pop
aas
push
sbb
mov
bound
sarb
push
sub
in
pushf
repz
outsl
pop
cwtl
xor
dec
frstpm(287
xor
and
je
insl
mov
mov
mov
rcrb
clc
cmp
jle
imul
inc
sub
sahf
cltd
fsubrl
sahf
mov
dec
cld
aam
jge
enter
aad
dec
lret
cld
jp
mov
or
sbb
xchg
stos
push
jge
xor
shlb
adc
iret
mov
inc
out
cltd
or
je
xor
sahf
mov
popf
add
loopne
jp
mov
mov
push
rol
xor
sbb
xor
mov
add
push
dec
sbb
out
sti
mov
push
xor
mov
xor
xor
scas
fwait
sbbl
mov
clc
and
jno
mov
subl
adc
es
lret
out
add
sahf
addr16
cmp
mov
sbb
sub
adc
sbb
pop
js,pt
mov
scas
bound
mov
rcrb
push
or
cmpsb
mov
mov
mov
mov
lock
sbb
pusha
mov
mov
adc
cmp
xchg
inc
stos
fdivrs
fildll
int3
shll
adc
jle
and
pop
add
sbb
int3
inc
xchg
mov
mov
arpl
cs
imul
movsl
mov
mov
std
adc
imul
or
sarl
jb,pn
cmp
mov
or
into
das
or
xchg
movsb
bound
fadds
popf
cmpsl
jp
or
or
in
repz
cltd
mov
mov
or
insl
fisubrs
dec
jg
fisubs
dec
jno
or
xchg
push
add
bound
jmp
jnp
jecxz
fcoms
push
xchg
adc
fistpll
filds
mov
pop
jle
rclb
add
lahf
lahf
xchg
in
pusha
mov
jg
pop
xorl
cmpsl
push
xor
mov
aam
add
clc
and
in
push
out
xchg
dec
dec
and
stos
jne
fwait
mov
xor
xchg
xchg
or
or
mov
pop
xor
jne
pop
int3
ss
into
clc
ja
out
ds
nop
ljmp
inc
andb
mov
ret
push
fs
adc
mov
push
push
pop
xchg
xor
or
loopne
pusha
hlt
testb
mov
fsubl
add
xchg
ret
sbb
lret
je
sbb
shlb
fisttps
shrb
mov
test
bound
aaa
pop
pop
dec
xchg
mov
and
mov
arpl
and
xlat
jns
xor
push
scas
scas
mov
push
aas
bound
and
fabs
jnp
enter
repz
xchg
test
dec
xchg
mov
insb
cli
pop
push
mov
test
movb
mov
aaa
iret
mov
adc
pop
mov
fs
nop
push
in
mov
add
jbe
push
lahf
addb
mov
jmp
fldenv
cmp
fwait
xchg
sbb
inc
pop
mov
scas
push
add
inc
push
jge
push
add
mov
push
inc
push
pop
fildll
push
pusha
and
adc
xchg
sbb
sbb
jmp
pushf
std
rol
ljmp
jle
jmp
in
dec
dec
int3
es
sbb
mov
test
jp
sbb
and
sub
sub
enter
adc
inc
jle
push
int3
adc
push
xchg
inc
int
jo
xchg
call
mov
stos
movsb
xor
sub
insb
mov
call
mov
add
pause
lahf
popa
jne
sbb
orl
les
push
pop
add
int3
mov
xchg
and
loopne
jmp
jne
sub
jl
je
and
adc
pop
dec
popa
cmp
xor
insl
mov
pop
push
out
cld
or
outsb
in
outsl
jo
in
mov
es
sub
std
mov
rorb
adc
or
je
xchg
ret
and
out
out
pushf
icebp
shl
xchg
mov
outsl
hlt
sub
mov
sbb
nop
shrb
lds
outsl
xor
out
inc
cwtl
shll
insb
out
dec
cmc
jbe
cmp
jg
int3
jp
lods
andb
dec
xchg
xor
iret
push
insb
inc
sub
aas
add
mov
push
addb
cwtl
js
adc
fwait
orb
insl
loop
outsb
cmp
and
fcmovnbe
in
pop
sbb
testb
xchg
dec
push
hlt
push
repnz
jl
and
mov
and
dec
aas
pop
test
dec
aad
xchg
xchg
jns
cld
push
mov
pusha
insb
cli
sub
popf
aad
in
xchg
lods
push
pop
in
xor
inc
push
adc
fcmovu
loope
popf
out
inc
mov
leave
gs
xchg
xchg
mov
push
jb
dec
sti
lcall
mov
mov
mov
inc
xor
dec
xor
sub
jo
cmpb
mov
ss
sbb
sbb
mov
aas
inc
popf
lock
aaa
pop
push
adc
mov
shll
jno
sbb
mov
popf
mov
sub
push
jne
adc
sbb
cmp
push
movsb
adc
xor
repnz
cld
mov
outsb
sub
lret
test
inc
adc
jl
mov
repnz
xchg
outsb
in
inc
je
aas
addl
push
jno
inc
pop
cmp
mov
test
test
jmp
test
cwtl
je
pop
sar
mov
mov
mov
fadd
ja
inc
inc
or
add
mov
push
xor
mov
push
cmp
mov
push
lods
hlt
popa
imul
and
pop
loopne
pop
inc
pop
or
clc
sbb
mov
pop
xor
shlb
movsl
dec
sbb
divb
std
jge
mov
add
repz
sbb
and
push
scas
push
mov
sbb
aad
icebp
js
fcoms
jge
cmp
xchg
adc
mov
addl
rcll
and
push
enter
rcrb
cmpsl
dec
scas
in
sbb
fstps
push
cmp
xchg
pop
test
imul
pop
dec
in
mov
out
mov
push
mov
cmp
and
sbb
pop
mov
cmp
cmp
imul
inc
aaa
xor
cltd
jae
sbb
adc
mov
lea
xchg
aaa
sbb
jo
xchg
popf
mov
sub
imul
pop
dec
or
cmp
mov
cmp
adc
hlt
cmp
iret
ss
jg
icebp
sub
pop
dec
lret
sbb
sar
addr16
lods
push
cld
and
ljmp
lea
sahf
inc
xchg
loope
addr16
aam
shlb
jge
jnp
inc
pop
arpl
ja
outsl
jno
push
cltd
stc
cld
add
xchg
movsb
jl
std
fsubs
subb
cmpsb
xor
push
pushl
jg
and
and
mov
inc
stos
insb
out
adc
shl
dec
xchg
jb
and
dec
xor
mov
sub
xor
mul
jmp
adcl
lahf
mov
mov
sub
and
mov
push
aas
xor
scas
repz
sbb
pop
mov
inc
jl
hlt
or
mov
insl
mov
jmp
es
sub
sbb
adc
repz
jmp
repz
xor
loop
push
pop
dec
mov
cmpsl
imul
add
lods
jmp
jns
andl
arpl
xchg
and
push
adc
imul
dec
scas
mov
ljmp
sbbl
lods
add
sbb
imul
mov
in
aaa
mov
test
cmpsb
rolb
xchg
rol
sahf
or
xchg
dec
push
jb
mov
aaa
imul
inc
fs
enter
cmp
sub
aad
aam
mov
cwtl
xor
jg
lsl
and
loopne
inc
sub
rorb
inc
int
aad
sub
push
roll
aam
fildl
loope
lret
stc
jo
adc
push
push
dec
enter
out
arpl
cmp
adc
les
lds
xor
dec
cmp
cli
rcrl
daa
movsb
sahf
sub
cwtl
pop
xlat
add
lock
cmp
aas
in
sub
jo
shr
add
push
cmp
das
lock
es
stc
pop
cmpsl
and
test
cmpsb
xor
ja
xchg
imul
push
pop
jns
sahf
and
sarl
pop
mov
cmc
imull
or
pushf
inc
push
imul
lock
and
pop
aam
xchg
add
cmp
or
fsubrl
cmovg
pop
rorb
arpl
loop
xchg
mov
into
orl
rorb
aad
and
scas
cmp
aaa
jecxz
jbe
pop
repnz
xor
loopne
push
lods
cmc
or
aaa
cmp
call
test
sub
pusha
xor
xchg
xchg
inc
or
cmc
cmp
repnz
and
daa
and
leave
into
clc
jle
jp
popa
dec
push
dec
sbb
dec
mov
mov
pop
dec
flds
push
cmpsl
fprem1
dec
das
push
or
shll
sub
shl
inc
cmp
ss
sub
xor
inc
shl
push
pop
pop
dec
pop
notl
ja
jl
inc
out
into
jle
cmp
gs
stc
popf
xchg
jb
in
in
clc
mov
mov
cmp
mov
call
mov
mov
sbb
xor
pop
int
out
sbb
jp
cmp
fld1
jbe
cmp
insb
test
pop
mov
jg
movl
jns
cmp
push
rorl
test
lret
push
testb
mov
pusha
sbb
iret
es
pop
xor
cli
int
movb
and
xor
rcll
cmc
into
dec
pushf
mov
pop
outsb
or
add
inc
in
and
jge
xchg
push
adc
stos
std
adc
and
mov
push
rcll
mov
adc
adc
ret
dec
ret
out
pop
fucomi
cli
add
jmp
pop
cmpsb
cmp
dec
xlat
stos
or
popl
jbe
cmp
out
mov
lret
mov
jb
arpl
xorl
mov
lds
ljmp
cmp
movsb
fisttpll
xchg
dec
inc
mov
stos
enter
jle
push
fdivs
lods
jno
and
repnz
push
xchg
cmp
mov
mov
dec
mulb
jg
inc
mov
mov
xchg
add
cmpsb
lods
insl
sub
hlt
lods
push
jmp
clc
add
lret
sub
mov
pop
add
fldenv
inc
inc
cmpsb
push
mov
cmpb
gs
sti
mov
add
mov
fisttps
outsb
pop
daa
movsl
movsb
xor
sarb
andl
dec
inc
push
mov
out
in
xchg
sub
aas
xor
call
sub
jecxz
cmp
mov
sahf
repz
daa
push
sub
subps
inc
pop
fldt
hlt
int
dec
fwait
mov
cs
imul
movb
psraw
mov
jae
in
mov
std
mov
jg
test
cmp
jp
push
jns
mov
mov
push
pop
les
adc
xchg
xor
sub
mov
arpl
pop
dec
call
mov
into
push
and
ret
sub
and
adc
jne
sti
xchg
push
xchg
imul
dec
lods
ja
mov
cwtl
nop
insb
jno
push
sub
mov
push
mov
andl
aas
lods
jmp
mov
aad
inc
adc
adc
push
sub
popf
nop
jo
push
mov
cmp
les
pushf
adc
insl
mov
nop
or
pop
movsl
dec
orl
jnp
sub
jle
cmp
pop
jl
mov
inc
fcompl
ret
ficoml
mov
fnsave
dec
cmp
cs
daa
inc
aam
lcall
stos
bound
or
push
sbb
lahf
sub
cmpsb
or
add
or
bound
mov
adc
lea
lods
iret
dec
lea
out
out
and
and
dec
jb
jecxz
in
ja
sub
decl
add
jle
mov
jae
lock
mov
mov
aaa
push
xor
xorl
sub
cmpsb
dec
mov
sarb
das
mov
sti
push
sub
sub
test
push
mov
outsb
xchg
in
sarl
fisttpl
inc
cmp
adc
sarb
xor
pop
je
repz
jno
inc
cmpsl
and
xchg
xchg
dec
sub
jp
mov
int3
test
xor
and
ret
push
movsb
arpl
test
inc
das
xchg
sti
pop
dec
fists
push
adc
pop
adc
sbb
xor
cli
inc
je
mov
imul
ficomps
das
push
and
dec
repz
jecxz
subl
jae
fwait
scas
pop
mov
mov
dec
fildl
scas
lret
test
mov
pop
adc
adc
mov
stc
jbe
mulb
in
push
icebp
fbld
lret
cmp
scas
mov
test
les
fadds
sbb
or
xor
xchg
mov
jp
mov
sbbb
add
fnstcw
movsl
fidivrs
leave
arpl
jle
out
push
jmp
mov
aad
dec
rcl
sbb
push
fidivl
jle
cmp
shrb
pop
xchg
inc
cmpsl
ret
xchg
movsb
push
inc
shll
hlt
fisubl
leave
fdivrs
mov
negl
cmp
roll
add
out
inc
pop
jb
into
jl
mov
xchg
cmp
insl
scas
in
stc
push
inc
xor
imul
inc
mov
or
jl
xchg
je
dec
add
or
ljmp
pop
push
lds
fistl
loope
xor
pop
lock
repnz
cmc
adc
fdivr
das
test
fisubs
adc
mov
sbb
add
cmpsb
sbb
xchg
sbb
cmp
insl
mov
dec
pop
or
pop
mov
mov
in
inc
cmpsb
es
push
lods
jne
loop
pop
daa
mov
jo
int3
pop
dec
sbb
jge
mov
mov
in
adc
adc
repz
pop
cmc
and
out
ljmp
aaa
in
addb
shl
test
int3
call
push
lahf
dec
or
jnp
push
mov
shlb
test
inc
sub
int3
mov
xor
mov
mov
sbb
movsb
and
dec
pop
adc
fisubrl
adc
sub
xchg
pushf
mov
pop
mov
adc
clc
xchg
push
test
nop
test
arpl
jnp
je
or
mov
or
addr16
push
xor
mov
lcall
jge
cmp
stos
insb
ss
repz
pop
inc
inc
stos
push
das
dec
inc
iret
add
popf
push
pop
lret
aas
jno
jl
fadds
jo
sbb
pop
cli
notl
push
dec
imul
inc
mov
adc
out
movsl
cmp
xor
rorb
jecxz
lcall
cmc
push
sti
mov
jb
xor
bound
sbb
xor
mov
pop
fcoml
in
cmp
add
rolb
sub
inc
nop
or
in
mov
push
stc
sbb
and
outsl
pop
lcall
leave
xor
add
jge
sahf
adc
adc
insl
fimuls
xor
or
pop
aad
sbbb
ret
dec
xor
lock
orb
inc
jno
lods
addr16
xor
cmc
mov
push
std
push
mov
adc
fwait
jmp
loopne
in
iretw
cmp
jne
xor
loopne
xor
mov
stos
loopne
les
mov
test
push
ja
es
push
mov
out
push
cmpsb
dec
sub
pop
scas
and
in
add
loope
scas
xchg
or
leave
xor
lods
push
pop
mov
cmpsb
xchg
push
ljmp
lcall
mov
mov
and
and
aam
pop
cwtl
aam
in
cwtl
fs
cmpsl
cmp
lock
imul
cmp
outsb
pop
mov
push
outsb
pop
aas
mov
pop
imul
out
sub
xchg
or
inc
aas
out
and
inc
leave
or
jb
jg
push
mov
dec
mov
inc
loop
push
mov
xorl
xor
leave
sarb
popa
test
jp
pop
cltd
add
pop
mov
push
pop
mov
sbb
push
mov
dec
xchg
jecxz
cmp
sub
ja
pop
lock
lds
fadd
adc
and
stc
stos
sbb
xor
sub
cmp
repnz
popl
pushf
ret
sbb
mov
fldt
rclb
add
out
leave
push
imul
adc
lods
shlb
push
xor
shlb
stc
rcrl
cltd
cmc
jns
xor
sbb
in
enter
imul
lret
jno
enter
adc
xor
push
adc
in
push
cmpsb
cwtl
and
inc
and
add
or
push
xlat
push
add
bt
push
mov
ja
mov
mov
in
and
outsb
ror
push
or
fwait
mov
divl
in
xchg
lret
sbb
jp
scas
and
das
cmp
dec
or
decl
push
sub
ret
ljmp
rorl
ret
xchg
int3
call
sub
enter
xor
xor
pushf
xchg
shll
cmpsb
jecxz
sub
mov
aad
arpl
outsb
stos
mov
inc
pop
jns
pmaddwd
dec
push
scas
xor
xor
lods
ljmp
test
aas
cmc
add
aad
pop
cmp
mov
cmp
ret
scas
lods
mov
negb
inc
js
notb
in
inc
push
or
or
sti
add
inc
in
or
inc
pop
xchg
xor
cmp
add
iret
xor
in
hlt
mov
xchg
dec
pop
push
in
call
test
push
jge
inc
push
in
jbe
in
iret
sbb
lahf
aam
arpl
sahf
es
and
sbb
aad
mov
dec
mov
mov
jge
inc
fldcw
cwtl
pop
push
jae
xor
jmp
push
xor
xor
nopl
in
dec
jl
push
push
xchg
movsb
push
and
jb
cmp
pushf
mov
test
and
jnp
test
imul
dec
pop
add
adc
sbb
subb
dec
nop
push
lret
mov
xchg
and
lret
stos
adc
hlt
bswap
pop
add
mov
mov
fs
add
jg
xor
arpl
cmpsb
in
sbb
adc
adcb
push
scas
cmpsl
mov
cmc
stc
push
or
js
arpl
lret
sahf
lock
pop
stos
sub
dec
loop,pn
pop
push
jg
sub
sub
inc
mov
jge
js
stos
ljmp
sbb
mov
out
sub
dec
mov
dec
add
xor
scas
lret
xchg
cmp
cmp
mov
mov
mov
fdivs
add
movsb
notl
mov
and
or
rclb
in
std
das
fstps
jl
push
xor
mov
scas
push
fistpl
cltd
ret
adc
lods
aaa
xchg
xchg
scas
dec
and
enter
es
xor
jo
ljmp
inc
rcrl
cmp
aam
push
mov
push
mov
rcll
inc
mov
aad
pop
jae
out
dec
pop
leave
fisubl
inc
lcall
nop
movsl
push
adc
aam
out
aaa
test
inc
mov
sbb
aaa
sti
divb
les
pop
dec
add
push
lock
sub
arpl
mov
mov
xchg
push
aam
adc
test
in
in
imul
pop
jb
sub
mov
adc
push
aas
call
cmpsb
push
mov
repz
cli
and
into
roll
les
clc
xchg
rcrb
xor
jmp
jle
or
and
lds
xor
or
and
out
inc
imul
sub
xchg
decb
aaa
arpl
or
mov
cmc
cmpsl
test
popf
sbbb
mov
sbb
sub
movsl
dec
imul
xchg
movsb
add
stos
scas
xor
pop
popf
fcompl
test
fstps
jne
lret
cmpsl
mov
and
jg
dec
sbb
add
push
loop
pusha
mov
into
cmc
imul
es
testl
orl
stos
mov
pop
std
fsts
lock
mov
in
enter
movsl
xor
jae
push
jecxz
ret
enter
add
pusha
mov
dec
in
lock
sarb
sahf
jo
push
or
sbb
loopne
mov
inc
lds
inc
out
cwtl
test
popf
jb
jg
sarb
or
jge
jge
int3
and
fildll
and
xor
stc
lods
pop
push
clc
pop
jg
xchg
push
xor
hlt
mov
out
and
sub
lods
enter
push
xchg
iret
mov
daa
push
addl
testl
xor
jae
es
mov
inc
jp
sbb
and
mov
sub
fisttpll
lret
mov
jecxz
popf
ljmp
fmull
jno
das
subb
xor
lret
daa
xor
push
pop
and
rcrl
inc
pop
add
movsb
cltd
pusha
jmp
imul
push
xchg
sbb
mov
push
adc
jbe
cmp
fldl
test
jg
lret
out
lods
push
xchg
rorl
pop
push
lret
xor
sub
jp
sbb
pop
mov
mov
or
mov
je
lea
or
daa
cmp
xchg
sbb
mov
inc
cli
sti
dec
jle
xor
pop
dec
int
hlt
jnp
ds
lahf
add
outsb
cmc
mov
mov
adc
inc
in
sbb
bound
es
std
sbb
addr16
jmp
add
lds
inc
xor
xor
aad
js
mov
push
jno
int3
cmp
sub
cmp
pusha
fwait
pop
icebp
jbe
mov
bound
mov
insl
pusha
fdivs
mov
xlat
push
xlat
pop
das
or
cli
push
repz
mov
js
es
and
fstpt
cld
and
loope
mov
pop
mov
lcall
adc
xor
jecxz
or
out
ja
cmp
cmp
shl
inc
rorb
scas
test
pop
sbb
testl
pop
int
adc
into
in
mov
mov
cmp
in
sub
idivb
lods
scas
es
repnz
cvttps2pi
cmp
lods
sbb
outsl
cmp
dec
cmp
jg
js
das
addb
sub
xchg
scas
imul
pop
enter
fbstp
mov
mov
lahf
test
cmp
jne
jecxz
mov
repnz
insl
jb
push
mov
mov
sbb
rorl
icebp
sub
into
or
xchg
xor
stos
aaa
fnop
int3
xchg
sbb
pop
movsb
sub
adc
lods
roll
imul
xor
pop
popa
sub
int
xor
lahf
cmp
sbbl
in
xlat
or
push
rcl
out
mov
daa
pushf
enter
repz
mov
push
mov
test
dec
fsubs
fmul
pushf
dec
sti
pop
ss
sub
xchg
roll
sub
and
test
shll
lods
cmp
test
jmp
cmp
fildl
dec
mov
in
aad
test
cwtl
dec
addr16
loopne
xchg
lea
xchg
movups
adc
test
loopne
aaa
fdivr
dec
pop
flds
jns
ja
loopne
dec
and
das
fwait
mov
inc
out
jnp
out
cs
test
addb
pop
jmp
or
loope
das
mov
or
add
mov
in
into
mov
loop
iret
sbb
xchg
outsl
push
dec
push
cmp
xor
push
cmp
in
cltd
pop
jnp
mov
mov
cld
mov
fmull
pusha
xchg
shrb
add
adc
aas
test
mov
cmp
xchg
mov
jo
dec
mov
ljmp
cmp
adc
ret
fsubs
mov
sub
add
mov
in
ja
aas
lcall
inc
mov
out
ficoml
jmp
sbb
int3
lea
in
inc
pop
cwtl
or
and
daa
les
orl
xor
lock
mov
popa
sub
dec
inc
loop
sbb
test
rolb
sub
jbe
stos
shl
mov
addr16
out
hlt
imul
and
push
mov
or
loop
fcmovu
sub
dec
pop
inc
pop
cmpsb
pop
stos
xor
push
xchg
or
xor
pop
mov
cmp
and
xchg
or
jb
jmpw
hlt
add
aas
lods
cmc
pop
jbe
adc
mov
cwtl
cltd
jge
sub
sub
sahf
mov
inc
push
hlt
xchg
loope
pushf
xchg
jp
inc
bound
sbb
pop
nop
scas
mov
std
stc
inc
jp
lock
data16
test
add
loopne
xor
add
inc
push
outsb
out
jae
test
insl
lret
pushf
jmp
lret
xlat
lahf
sbb
loopne
adc
std
sbb
xor
sbb
fstpl
fistps
or
xchg
inc
mov
popf
mov
dec
fildll
shlb
pop
or
sahf
cs
decl
xlat
cmp
pop
cli
push
idivl
addl
push
xor
les
push
jecxz
scas
and
fwait
ss
mov
jb
das
push
fwait
sub
imul
lret
mov
pop
popa
stos
xchg
dec
cmc
add
in
jle
jmp
hlt
int
add
pop
adc
mov
pop
mov
add
add
jmp
jo
fnstenv
ljmp
or
xchg
jne
shrl
lods
jecxz
xchg
pop
mov
jmp
test
clc
add
outsb
inc
call
mov
iret
in
aaa
sbb
sub
loop
or
dec
mov
inc
or
mov
cmp
loop
fisubrl
sbb
dec
shll
arpl
add
imul
pop
ret
pop
fldcw
mov
je
add
mov
jo
or
jge
mov
cmpsb
adc
call
jg
push
lods
push
movsl
xchg
pop
sbb
ficomps
insb
arpl
add
cld
sarl
testl
cli
and
leave
jno
arpl
pop
mov
scas
iret
sbb
xor
dec
fsub
mov
mov
mov
inc
rcrl
out
cwtl
sub
and
and
stos
cld
cmpsl
adc
cmp
addr16
dec
je
loope
xchg
cmc
lret
dec
mov
mov
jns
adc
jbe
jmp
pusha
xchg
daa
shll
fildl
in
rolb
mov
cwtl
daa
sbb
add
in
add
add
sbb
test
cmovno
push
sbb
movsb
jle
out
jge
and
lock
mov
js
mov
sub
jno,pt
stc
iret
loope
dec
add
sub
ljmp
xchg
pop
cmp
std
cmc
jge
sti
mov
into
movsb
adc
push
stc
cmp
pop
imul
cs
push
mov
aam
hlt
cltd
xchg
gs
rcl
sahf
jns
jmp
adc
out
and
mov
fwait
das
mov
pop
sarb
add
lods
pop
in
sbb
fs
push
jl
mov
fcoms
sbb
scas
mov
jns
inc
andb
sbb
data16
sbb
inc
push
scas
iret
mov
cmp
add
decb
xchg
bnd
lcall
xor
xor
sbb
in
xchg
mov
nop
iret
out
xchg
out
inc
ljmp
push
test
leave
or
jae
insl
movsl
orb
jp
cmpsl
or
cmp
jbe
in
lahf
mov
adc
clc
jge
repnz
pusha
mov
test
ljmp
sub
aaa
mov
lods
push
in
hlt
cmpsb
inc
repz
lds
jecxz
adc
or
jbe
lahf
cmpsb
push
pop
stos
push
xor
mov
jnp
andl
into
sti
test
fs
dec
insb
xchg
xchg
dec
jp
jp
push
jmp
dec
lock
test
in
cmpsb
icebp
idivl
jne
adc
inc
in
bound
cmp
into
arpl
ljmp
lahf
fbstp
jge
sbb
addr16
inc
or
jno
aas
shll
mov
sarb
out
into
add
mov
mov
sub
jbe
dec
arpl
push
out
mov
jns
testb
outsb
in
repnz
repnz
jne
scas
inc
mov
xchg
les
xor
inc
gs
xchg
mov
push
push
sub
adc
xchg
cmp
fcomps
repnz
test
sub
xor
add
aaa
adc
inc
push
imul
cmpsl
stos
pop
add
or
inc
xchg
sub
sbb
jae
sbb
add
lds
lcall
jmp
inc
adc
xchg
iret
inc
inc
rorb
xchg
nop
cmp
inc
push
xchg
add
xor
out
scas
inc
sub
roll
in
mov
in
nop
adc
add
pop
shrl
and
testl
mov
aaa
push
jbe
cmp
pop
shl
clc
fmull
sarb
aad
ja
cmp
inc
orl
rorl
cltd
lock
notl
test
rcll
lret
and
pop
inc
inc
call
push
lret
in
push
mov
cmp
sbb
shl
xlat
addb
mov
pop
in
enter
push
cs
or
sub
mov
pop
cmc
pop
jo
movsb
je
rcrb
movsb
lock
idiv
popf
test
add
jle,pt
sahf
movsl
sbb
imul
pop
adc
imul
arpl
pop
jbe
sbb
sbb
sbb
gs
dec
pop
cli
mov
sub
in
cli
inc
nop
or
jns
mul
xchg
mov
fisttpl
sti
pop
fs
in
inc
cltd
cld
fcoml
jge
clc
push
cs
mov
test
mov
notb
aaa
cmp
icebp
pop
sub
cmpsl
scas
add
movb
xlat
mov
fs
xor
dec
pusha
gs
mov
dec
aad
lock
pop
nop
inc
loopne
mov
xchg
xchg
dec
mov
addr16
in
push
push
scas
test
loopne
cwtl
pop
sbb
mov
cmp
cmp
push
pop
and
int3
dec
adc
dec
xor
inc
fucomip
pop
aas
jo
inc
push
aam
icebp
fs
insl
xchg
adc
stc
sub
sbb
out
popf
sbb
lcall
stc
arpl
and
test
scas
pop
sub
testb
jae
adc
fnstenv
xchg
jge
inc
or
enter
pop
xchg
sub
cs
cmp
cli
nop
addl
scas
sub
cs
push
lds
inc
mov
pop
imul
mov
sahf
xchg
addr16
dec
xchg
mov
sti
fisttpl
iret
mull
and
call
and
cmpsl
push
cmp
inc
push
aam
add
ja
dec
gs
out
jl
fcompl
sar
push
fmul
ds
dec
jle
mov
or
dec
mov
test
mov
dec
mov
push
call
jge
cmpsl
test
dec
and
xor
or
mov
add
mov
lods
notl
ret
arpl
mov
push
push
dec
es
xchg
cs
pop
push
jge
addr16
xchg
ss
pusha
dec
test
cmp
je
repnz
pusha
push
les
cmp
push
jno
mov
loope
ljmp
dec
xchg
and
outsb
xchg
imul
and
subl
int
in
shrl
aaa
imul
inc
addr16
mov
es
ret
cmpsl
lock
xor
mov
inc
mov
mov
dec
lahf
push
and
or
or
les
push
loop
mov
mov
imul
mov
xor
adc
cmp
sbb
xor
pushf
mov
je
call
aad
jnp
xchg
add
jbe
pop
rol
sub
stos
dec
mov
lcall
jp
xor
das
enter
or
sbb
loopne
fmul
and
cmp
es
clc
cmp
dec
cmpsl
dec
arpl
loopne
lret
jp
lahf
lea
jl
pop
mov
and
xchg
gs
cmpsb
pop
test
inc
es
push
or
jp
or
adc
out
rolb
cmpb
mov
rcrl
rcl
inc
push
mov
jnp
sub
and
sub
adc
sbb
out
das
xor
cs
pop
pop
or
add
cmp
aas
sbb
test
add
mov
or
pusha
sub
sbb
xchg
sahf
xchg
xchg
mov
push
or
aaa
inc
or
mov
xchg
arpl
cmpsl
popf
inc
cltd
je
mov
adc
cli
loop
out
cmp
call
sbb
icebp
xor
push
jno
rorb
adc
xor
gs
les
hlt
push
sub
cmp
and
sub
test
ds
sti
mov
push
dec
stos
add
cmp
mov
mov
mov
clc
cs
into
sbb
xchg
insl
dec
ja
sub
in
sbb
or
inc
sahf
or
or
sub
movsb
jo
dec
lods
xlat
mov
xchg
hlt
scas
xchg
lock
mov
cld
pop
or
shlb
xor
inc
mov
jno
jns
jp
loope
call
jmp
add
xor
push
das
sbb
shl
push
test
push
xor
mov
mov
mov
xchg
adc
icebp
cmpb
xchg
push
out
cmpxchg
lret
add
sbb
jbe
or
inc
sbb
cmpsb
fucomip
xor
jecxz
cmpsl
lahf
xchg
xchg
adc
mov
xchg
aas
fnstsw
mov
les
jecxz
bound
in
jae
lods
and
or
mov
mov
inc
movsl
xor
push
mov
jle
cmc
or
mov
xor
test
xor
sub
adc
add
xor
lea
inc
in
call
mov
fistpll
xor
scas
mov
stc
movsb
ss
int
push
xor
cmp
out
bound
mov
aad
or
and
mov
repnz
orb
dec
ficoms
fcompl
out
lock
sti
popf
jae
hlt
loopne
lods
inc
mov
push
mov
fs
mov
cmc
inc
inc
pop
cli
mov
mov
mov
in
jae
inc
pop
adc
jge
inc
jno
out
adc
into
scas
push
pop
cmp
out
and
punpckhdq
imul
sbb
xchg
inc
popa
jae
xchg
test
outsb
cmp
add
in
push
addb
hlt
jo
fldcw
out
dec
push
imul
bswap
push
mov
push
mov
sub
jae
stos
push
jo
fldcw
pop
pop
sahf
dec
add
sbb
mov
mov
sti
adc
jmp
push
mov
cltd
cwtl
aaa
adcb
mov
add
pop
xorb
shlb
mov
cmp
xor
dec
sbb
fscale
and
push
lcall
mov
mov
call
jb
pop
push
mov
cmp
push
mov
dec
call
fnstsw
pop
pop
pop
cwtl
jnp
loope
pop
push
sbb
repnz
jnp
or
dec
ret
dec
or
push
mov
sbb
fmull
daa
adc
aam
and
cltd
mov
xchg
repz
ficompl
inc
mov
out
sub
jg
cs
imul
outsb
xor
sbb
test
stos
push
sub
mov
push
sub
sbb
mov
inc
dec
jg
adc
ja
sub
out
inc
mov
pop
insb
hlt
mov
jle
add
mov
sti
pop
fstpl
sahf
add
xchg
out
mov
push
outsb
mulb
data16
jnp
jnp
test
nop
bound
insl
add
jp
das
fbld
jle
pop
jge
test
mov
test
add
jae
out
daa
lcall
push
add
test
leave
scas
or
in
cmp
outsl
pop
out
pop
loop
pop
enter
jge
stos
cli
jno
add
cmp
test
inc
fisubl
push
push
mov
hlt
lods
sbb
icebp
mov
jle
jp
push
push
mov
xor
push
das
jae
and
xchg
gs
int3
fistpll
sar
aad
push
and
adc
dec
xchg
mov
scas
stos
dec
jecxz
add
xchg
mov
pop
push
shll
lods
in
lret
xchg
mul
out
ret
sub
or
std
loopne
ja
cld
fldenv
sub
aam
pop
bound
scas
aaa
out
and
mov
jmp
pop
jmp
sahf
sbb
add
loope
xor
test
dec
insl
sbb
adc
dec
jl
aam
fnstsw
cmpsb
and
test
rcl
incb
and
mov
out
int
xor
pop
ja
out
insb
cmc
test
adc
mov
cmp
push
sub
rclb
cmp
loop
xor
test
cmp
mov
inc
daa
xor
out
cmp
jno
lret
lret
sbb
fbstp
mov
lea
sbb
adc
cmc
test
std
mov
jge
mov
dec
rdtsc
test
mov
cmpsl
jae
outsb
sub
push
dec
mov
imul
cltd
cmpsl
pop
lods
mov
inc
cwtl
inc
mov
arpl
lret
ljmp
outsb
int3
mov
lods
and
in
mov
dec
pop
rep
inc
jg
ss
jg
aam
popa
sbb
jg
adc
jg
cwtl
ja
adc
stos
jl
into
mov
subl
jle
lahf
jbe
loopne
sar
mov
xchg
xchg
movsb
adc
fisubl
mov
xchg
inc
in
push
lea
mov
dec
mov
xor
add
dec
test
shll
mov
pop
nop
pop
sub
js
dec
hlt
nop
mov
mov
cmp
daa
adc
and
negl
or
hlt
into
aam
into
sub
mov
std
ljmp
insb
nop
daa
push
scas
push
test
out
or
push
dec
push
into
inc
or
add
daa
test
js
popw
push
cmp
jg
lods
xchg
add
sarb
mov
flds
mov
js
push
clc
xor
add
push
shlb
xor
in
in
movsl
mov
es
push
loopne
call
jecxz
jge
or
jmp
mov
je
sub
out
push
lock
inc
arpl
out
inc
pop
dec
xorl
out
fsubs
movl
addl
faddl
sbbb
push
xchg
ss
dec
mov
pop
or
mov
ret
fidivs
clc
fisttps
push
xor
ja
fbstp
fucomp
pop
mov
fbld
test
test
xor
or
adc
mov
out
or
andl
sbb
mov
mov
and
imul
add
or
testl
lret
jecxz
jecxz
dec
repnz
xchg
out
cmpb
inc
dec
mov
dec
jne
jb
lods
scas
adc
movsb
inc
roll
test
jbe
std
mov
jmp
aam
dec
movsb
add
call
push
jno
or
or
xchg
sub
xchg
push
gs
and
negb
jno
mov
mov
jle
xchg
jmp
sbbb
push
and
loop
pop
dec
mov
mov
lret
movsb
das
les
fsubr
aad
imul
mov
addr16
inc
iret
ja
lret
or
sub
jg
sub
adcb
pop
or
fnstsw
sbb
xchg
jbe
xchg
dec
push
xor
mov
testb
or
sbb
in
mull
setl
dec
enter
inc
dec
mov
xchg
test
mov
push
sahf
repz
dec
test
popl
jmp
cmp
ret
adc
fcmovne
test
cli
and
add
out
jno
scas
les
pop
icebp
fdivl
ret
mov
lret
in
jne
fnstenv
pusha
dec
cmp
nop
aaa
dec
gs
addb
and
int
add
test
stos
mov
loope
xchg
js
xchg
test
xchg
mov
mov
rcr
lods
pop
pushf
into
inc
jbe
shlb
lcall
ja
ret
pop
add
add
jnp
addl
mov
push
push
pop
inc
call
mov
cmp
or
movsb
cs
mov
pop
or
mov
sub
popf
jbe
rcr
pop
inc
div
call
fs
lcall
cmc
mov
pop
adc
dec
popf
cmpsb
in
mov
xchg
add
in
and
xchg
add
push
dec
aas
sbb
pop
xchg
xchg
out
push
dec
shl
add
out
loop
jge
loopne
mov
dec
or
cmp
add
mov
aaa
repz
in
mov
cld
mov
cmp
mov
mov
imulb
sbb
inc
call
fs
sub
and
pop
push
xchg
inc
je
imul
iret
xor
dec
fst
jl
ret
or
outsl
in
dec
sbb
and
inc
xchg
and
fneni(8087
clc
enter
out
in
inc
sub
cmp
daa
cmp
and
xchg
mov
lock
sub
out
mov
test
xchg
and
and
xor
mov
fsubrs
lods
xchg
aam
sub
out
mov
outsb
fnstenv
shrb
mov
cmpsl
cmpsl
jb
stc
add
or
push
punpckldq
scas
cmp
repz
cmp
pop
fcmovu
decl
in
xor
dec
in
push
mov
std
or
scas
mov
mov
add
stc
jb
outsb
mov
push
push
icebp
stos
cmpsl
inc
mov
iret
xor
dec
call
mov
sbb
pusha
push
inc
push
jo
fcomip
cmp
int
dec
rcr
sbb
data16
mov
popf
add
loope
repz
sbb
and
jecxz
int
mov
mov
xchg
sub
fsin
rcrb
push
ljmp
mov
fs
fimull
insl
inc
stos
lret
jecxz
add
loop
sub
push
inc
jmp
out
lods
adc
push
aam
gs
das
and
fistl
pop
sub
loop
jns
jo
mov
xlat
mov
es
and
iret
dec
pop
pusha
and
stos
pop
pop
movsl
pop
ds
int3
mov
push
es
cmpsl
jmp
stos
outsl
andb
jb
std
stos
mov
pop
popf
mov
jge
or
pop
mov
inc
testl
xor
lret
das
lahf
hlt
call
inc
pushf
fstpt
in
push
pop
mov
fnstcw
xchg
sub
mov
and
xor
mov
enter
dec
pop
fcmove
cmp
mov
mov
fists
pusha
mov
mov
popa
xchg
mov
adc
adc
test
adc
out
jle
and
add
or
insl
push
sbb
mov
jle
sub
pop
testb
adc
cmp
ret
jp
sarl
push
iret
in
jge
pop
push
dec
xchg
xor
xlat
cltd
daa
push
mov
leave
cld
icebp
jp
lret
pop
xchg
shll
stos
mov
pop
jmp
test
mov
mov
stc
cmp
push
cs
rclb
xor
mov
cmpsl
addr16
sbb
outsl
push
or
add
mov
push
fld1
adc
std
pop
add
aaa
stos
cmpsl
jmp
stos
dec
inc
gs
sbb
shlb
jbe
pop
jae
sbb
push
lcall
shll
cli
fstpt
sbb
and
mov
out
mov
mov
jg
xchg
xchg
hlt
add
jns
xor
fs
imul
sbb
xchg
dec
rcrl
dec
mov
push
sarl
mov
mov
mov
fldt
mov
fwait
xor
lcall
and
fmull
mov
cmpl
adc
inc
nop
fisttps
mov
xorb
int3
out
sbb
push
and
test
dec
movsl
or
into
push
pop
js
and
and
xchg
sub
repnz
push
and
mov
sub
mov
or
jmp
xchg
mov
jg
sbb
xlat
cmpsl
pop
sub
cmp
push
je
sbb
shll
shl
or
ret
pop
jle
stc
sbb
fdivrl
push
sarl
push
daa
mov
jg
fdivrs
int
mov
int3
mov
sti
and
push
fstpt
loope
mov
sub
pop
inc
adc
push
roll
aas
push
and
mov
shr
mov
push
pop
pop
pop
mov
out
xor
arpl
shl
mov
adc
cmpsl
jl
rcrl
sarb
xor
popa
inc
out
inc
cmp
imul
in
fadd
nop
cmpsb
cs
mov
add
jmp
pop
mov
mov
dec
fmulp
std
sbb
adcb
mov
push
mov
jg
mov
push
scas
jnp
xor
push
lods
xchg
dec
addb
push
cmp
adc
jae
inc
lret
sbb
stc
cmp
jg
dec
sbb
scas
ds
xchg
pushf
rorb
adc
lret
pop
dec
pop
cmp
push
jnp
dec
mov
outsl
int3
loop
cmp
lea
add
pause
sbb
insl
and
enter
shrb
lock
dec
xchg
test
cmp
cmc
pop
sar
frstor
fwait
and
insb
or
inc
mov
lds
jmp
in
mov
sub
jnp
insl
shlb
sbb
mov
shrb
mov
daa
inc
lret
cmp
loope
inc
std
repz
mov
jecxz
mov
cmpsb
mov
nop
outsl
sub
and
cmc
and
leave
xchg
test
shlb
sahf
mov
and
stos
xchg
mov
xor
jge
xchg
sub
jno
popa
jno
arpl
jo
mov
and
add
xor
sbb
lea
adc
pop
dec
jg
inc
call
xor
cmc
mov
sub
xlat
hlt
test
les
arpl
lret
paddw
pop
mov
mov
or
push
roll
mov
jnp
jae
out
mov
jecxz
dec
sub
sub
addr16
pushf
mov
mov
or
mov
lcall
cmp
xchg
lds
mov
fists
jne
jb
mov
mov
scas
xor
sbb
inc
push
in
xchg
push
mov
inc
dec
subb
cli
clc
jb
xorl
push
sub
call
and
or
and
mov
mov
aad
fmuls
mov
push
push
sbb
cmp
lret
enter
inc
inc
leave
xor
pop
jecxz
jb
repnz
or
sbb
add
sub
inc
adc
mov
movsl
push
mov
pop
adcl
mov
clc
adc
roll
loope
add
je
sub
pop
cmp
outsl
sbb
in
jae
test
ljmp
pop
cmp
push
aam
testl
bound
xchg
xchg
aas
ja
js
ja
dec
and
inc
aas
mov
shl
add
ret
xchg
lods
lea
push
movsb
int
fisttps
mov
add
js
dec
jae
out
bound
mov
into
adc
das
jmp
push
call
or
das
mov
xchg
es
mov
adc
out
hlt
mov
cltd
adc
je
lret
add
shl
stos
sub
jae
pop
scas
add
or
es
loopne
data16
sbb
jp
scas
push
mov
mov
add
outsl
dec
xchg
xchg
mov
mov
in
or
or
sahf
adc
xlat
jl
add
push
xlat
into
fs
ror
push
inc
in
imul
push
jg,pn
ret
andl
adc
push
insl
push
xor
std
xor
decb
cs
shr
xchg
jl
xchg
mov
sbb
jb
inc
ja
enter
pusha
xchg
xchg
paddsb
fnstcw
jmp
in
dec
pushl
jb
adc
loope
xor
into
daa
out
inc
mov
xor
mov
stos
ds
lds
push
addb
mov
jecxz
fsub
daa
loopne
mov
mov
add
movsb
adc
repz
arpl
add
ja
pop
pop
loopne
pop
inc
pop
pop
dec
adc
or
mov
mov
inc
aad
inc
aad
and
pop
sarl
pop
jmp
mov
ss
repz
push
mov
mov
loop
cmp
pop
xchg
or
cld
jp
subb
adc
inc
mov
cmp
add
jnp
jo
jle
xchg
mov
js
mov
repnz
in
xchg
sub
fdivs
movsb
mov
sbb
mov
nop
mov
mov
mov
inc
push
scas
lret
jno
mov
iret
mov
leave
sbb
mov
xor
movlps
nop
jl
inc
pop
mov
dec
stos
sub
pusha
hlt
mov
rcrl
pop
loope
clc
pop
mov
mov
test
mov
jae
add
movl
stos
jbe
dec
xchg
aaa
xor
cld
iret
push
add
and
mov
and
mov
lds
jge
loop
jo
mov
pop
jle
outsb
hlt
daa
xchg
jl
imul
add
fwait
aad
and
add
negb
push
push
pushf
sbbl
add
jge
pop
xchg
sbb
xchg
inc
neg
jmp
rol
pushf
mov
js
pushf
push
cwtl
test
arpl
ret
fsubrs
adc
and
jecxz
and
jecxz
mov
out
cltd
cmp
popf
sub
inc
sti
out
sbb
fidivrl
mov
pop
lods
testl
push
les
push
mov
xchg
in
in
push
jo
pop
dec
inc
nop
adc
and
mov
sub
and
leave
mov
loope
mov
fnstenv
dec
mov
mov
mov
mov
dec
dec
xchg
adc
jp
ds
jp
stos
mov
nop
clc
sub
cld
fbstp
and
xor
and
cs
cmp
cltd
cmp
xor
movsb
pop
add
popa
jno
loope
xchg
push
push
inc
bswap
inc
aad
mov
or
negl
fsubrp
mov
loopne
aaa
mov
scas
or
stc
or
adc
and
fdivs
fstpl
push
or
test
fidivrl
and
repnz
mov
das
insl
fldt
mov
fcomps
subl
mov
mov
sub
cmpsb
test
insl
sbb
jg
jg
aas
inc
cmp
sbb
loope
pop
out
inc
ret
std
dec
sbb
dec
jl
sarb
pop
or
and
jg
xchg
cmpsb
scas
ret
xor
adc
xor
test
lods
xor
add
sbb
notl
jg
mov
mov
in
outsl
mov
inc
mov
sbb
sub
mov
iret
pop
adc
mov
xchg
xor
aad
or
cmp
pushf
das
mov
jle
mov
sub
out
fistpl
in
movsb
mov
xchg
dec
pop
stos
fcmovne
mov
push
into
movsl
adc
cmpb
pop
pop
aas
popf
xchg
pop
adc
les
lret
dec
xor
test
iret
xchg
clc
out
pop
xchg
mov
pop
fsubrl
dec
mov
test
mov
xor
cmp
loop
xchg
pop
mov
add
push
stc
scas
repz
ja
push
gs
mov
out
push
mov
jns
pop
push
jo
mov
add
loopne
fcomps
pop
inc
out
in
lret
xchg
enter
jecxz
pop
in
dec
dec
ret
scas
les
mov
rcrb
js
popf
xor
mov
ss
rcr
mov
aad
pushf
push
pop
jo
lret
mov
lea
and
or
mov
shl
stos
out
mulb
mov
test
and
add
jns
pushl
enter
xchg
push
fwait
xor
mov
inc
rclb
adc
jp
cmp
cmp
sahf
or
lods
jb
stos
jmp
and
mov
xchg
fidivs
pop
sub
sub
jno
xchg
cld
lea
or
cmp
mov
add
sub
das
mov
cmp
mov
jae
mov
aad
xchg
xchg
cmovb
push
fsubrs
cmp
movsl
adc
mov
lahf
mov
cmp
in
in
lret
xor
push
mov
and
lret
loopne
lret
jnp
cmpsl
dec
mov
push
mov
pop
add
xor
std
inc
jle
push
jecxz
jo
push
data16
out
roll
cmp
xor
rolb
jle
cltd
dec
lcall
sub
fidivl
jnp
and
sbb
mov
inc
adc
shll
cmc
testb
add
clc
inc
xchg
cmp
cld
addr16
lock
shl
or
loope
aas
insl
out
aad
ds
mov
cli
pop
nop
aam
int3
sbb
icebp
fs
fs
jbe
mov
jecxz
cmp
nop
push
fs
out
pop
dec
insl
mov
fs
repz
ficomps
jne
push
faddl
and
add
xlat
jns
in
push
pushf
add
dec
add
movsb
aam
out
pushf
push
push
lea
jmp
mov
push
gs
ja
fisttps
sub
add
sbb
push
xor
stc
push
sahf
cmp
xchg
xchg
stc
cltd
push
push
pop
test
addb
iret
lret
in
adc
xchg
sub
and
add
sti
ljmp
movsl
dec
cwtl
mov
mov
push
pop
xchg
daa
jne
pop
inc
pushf
nop
lret
flds
xor
int3
imul
clc
and
icebp
xorl
test
xlat
or
push
push
mov
popf
js
jp
pusha
mov
xchg
mov
js
jl
mov
xchg
clc
mov
inc
cmp
xchg
adc
push
pop
cltd
sar
loopne
std
inc
mov
cmpsl
xchg
mov
jnp
fcoml
cmp
nop
ss
lret
and
sub
fstps
js
test
pop
popa
mov
sbb
cmpsl
jmp
std
scas
mov
xchg
aaa
nop
pop
pop
cwtl
test
test
hlt
es
inc
pusha
or
sbb
es
xor
dec
mov
jb
push
and
jge
xchg
mov
test
out
push
repz
add
dec
and
arpl
and
out
movsl
scas
into
cmpsl
cli
hlt
es
pusha
or
inc
xor
jle
inc
push
rclb
call
adc
and
sbb
sub
jle
push
popf
fstps
aam
xor
pop
js
lods
cld
movsl
inc
adc
sub
mov
sub
mov
cmp
cld
inc
push
mov
push
jne
sub
enter
mov
push
stos
xor
stc
sarb
adc
leave
pushf
adc
pop
lds
inc
movl
and
mov
cmp
out
xchg
xor
xor
les
jmp
ja
scas
cmp
aas
xchg
insl
xchg
fstpt
or
jno
inc
movsl
outsb
xchg
lods
rol
lods
popa
leave
cmp
fsubp
add
ljmp
lds
fstl
lea
or
add
fisubrs
mov
adc
inc
je
jnp
fdiv
stos
scas
add
adc
xlat
enter
mov
mov
sub
pop
or
cmp
jns
cli
std
add
vpsubsb
inc
jo
inc
cmpsl
call
sbb
jmp
aas
inc
rcl
jp
daa
and
incl
inc
push
movsb
push
sub
mov
mov
xchg
lret
jl
adc
aam
mull
and
xchg
es
pop
nop
adc
ss
mov
movsb
mov
cmp
pop
test
rorb
call
sub
dec
fiaddl
pushf
adc
stos
aaa
mov
cmp
into
push
inc
or
push
out
adc
hlt
lret
insl
cli
cmc
lods
into
mov
mov
jns
cmp
addl
lret
pop
stc
scas
bound
pop
dec
cltd
imul
cmc
pop
fidivs
xor
fdivl
dec
add
fiadds
fsubl
popf
xchg
adc
pop
cmpsl
imul
pop
ret
pop
aaa
sub
xchg
cli
inc
int
jo
cmp
dec
cs
ja
dec
enter
rolb
dec
xor
je
or
xor
jne
or
mov
sub
outsl
scas
das
outsb
jge
push
push
adc
dec
je
cmp
out
cmp
mov
ja
mov
fwait
dec
xchg
popf
test
movsb
sbb
into
iret
andb
sub
enter
insb
push
push
sbb
out
loope
cltd
into
popa
lea
lcall
push
cmc
rolb
and
es
jle
in
stos
cmpsb
lret
add
mov
aam
cli
jp
push
test
dec
lea
fbstp
sbb
add
mov
pop
adc
daa
repnz
loop
xchg
inc
push
sub
sub
push
sub
jae
fwait
push
inc
inc
mov
gs
pop
shll
fisubrs
jle
clc
sub
mov
cmp
aad
or
mov
xchg
jbe
cmpsb
pop
fildll
cmp
sub
iret
jb
lods
or
cmp
push
push
fcmovne
mov
mov
inc
je
inc
dec
xor
sub
mov
faddl
pop
nop
icebp
sub
rcl
sbb
inc
mov
loopne
cltd
xchg
ret
mov
out
gs
cmp
xchg
es
loope
sbb
cmp
addr16
int
fwait
and
sbb
and
xchg
fstpl
cltd
sub
cmp
inc
lods
dec
int
fs
pop
fistl
jno
insb
test
arpl
fimuls
jne
pop
inc
mov
lcall
pop
insl
std
xlat
call
xor
sub
xor
je
and
cmp
or
push
mov
js
push
filds
js
cli
cmpsl
adc
and
adc
das
pop
ret
fnsetpm(287
leave
or
shl
int
mov
iret
push
fdivrs
mov
sbb
or
ret
sbb
inc
xor
fnsave
push
test
ffree
sbb
lahf
pop
and
ss
and
pop
fimuls
xchg
cwtl
sub
add
rol
repz
jnp
inc
push
fnstenv
imul
mov
popa
pushf
sbb
rcr
mov
xor
mov
sub
jns
fbld
adc
sbbb
bound
icebp
adc
dec
ss
addr16
and
test
dec
mov
adc
jl
outsl
loope
pop
outsl
push
mov
sub
cld
stc
jl
jbe
aam
and
lahf
cs
arpl
xor
jle
cs
and
fiaddl
cwtl
fbld
inc
or
cmp
sub
and
fldenv
cwtl
jecxz
add
cwtl
call
and
push
jmp
aaa
xor
mov
push
pop
out
pop
movsb
je
shll
jecxz
movsb
adc
xchg
adc
loope
inc
mov
shll
stos
push
pushf
adc
mov
fs
jmp
lock
add
inc
pop
fs
add
sbb
jae
in
dec
in
xor
cs
cmp
xchg
mov
xorl
repnz
mov
add
ja
ds
xor
out
cmp
mov
dec
xchg
pop
xor
cmp
xchg
xchg
mov
mov
mov
sbb
xchg
or
adc
push
pop
mov
xchg
shlb
push
push
hlt
or
pushaw
jg
pop
or
in
das
mov
rol
mov
jnp
sub
xor
push
xchg
mov
xchg
in
pushf
lahf
push
fwait
mov
cmp
mov
bound
xlat
or
mov
fidivs
mov
iret
test
cmp
sub
ljmp
inc
stc
std
mov
pop
push
adc
dec
adc
dec
in
out
xor
in
push
cmpsb
sub
dec
fidivl
outsl
out
mov
sbb
in
imul
push
es
lahf
fcomi
xorb
orb
pop
mov
push
out
adc
mov
incl
mov
in
xor
lcall
sbb
jno
add
sub
lds
sahf
xchg
cmp
or
mov
sbb
jmp
xchg
xchg
iret
pusha
or
push
or
mov
mov
mov
add
push
testb
stos
add
sbb
repz
push
in
fwait
lret
sarl
pop
cmp
mov
scas
adc
idivl
push
in
rcr
and
fidivl
pop
xor
mov
cmpsb
fisttpll
jns
mov
ds
jecxz
pop
loop
mull
cmp
and
mov
inc
or
lods
fisubs
fcompl
rcll
jne
push
xchg
add
jo
call
into
popa
jae
lea
and
psubsb
je
push
test
test
sti
ss
push
xlat
dec
dec
int
lods
push
mov
xchg
daa
lcall
push
pusha
xor
sub
andl
pop
sub
aad
dec
fiadds
loopne
outsb
push
mov
in
mov
insw
lods
dec
mov
lea
sbb
jge
cmpxchg
sub
add
inc
sbb
sbb
pop
cltd
cmc
in
cmp
cli
mov
or
jge
sub
lea
pushf
mov
mov
add
ja
scas
into
cmp
fists
cli
out
dec
adc
dec
cmpsb
movsl
jmp
in
fst
sub
inc
add
in
mov
add
mov
aam
push
ss
jmp
or
mov
neg
into
jae
mov
out
push
jbe
repnz
xor
popf
pushf
enter
fstpl
out
jp
push
add
mov
mov
jo
leave
lahf
inc
jg
shlb
leave
fimuls
insb
outsl
div
shll
shlb
xchg
or
ja
pusha
cli
jp
aad
push
loope
hlt
aam
mov
add
mov
int
mov
loope
test
or
xlat
push
push
and
sub
push
sub
pop
popf
andl
xor
sbb
xchg
bound
mov
dec
ja
fiaddl
fidivs
sbb
mov
out
insl
popf
inc
ds
sahf
shr
dec
aam
test
repnz
lock
jns
stos
cmp
mov
push
cmc
int3
push
rep
inc
ds
adc
and
mov
fildl
pop
ret
pushf
aam
ret
movsb
daa
arpl
cmp
mov
push
in
fwait
rclb
lods
push
rol
push
or
sub
and
add
aam
nop
add
loopne
mov
imul
adc
jge
in
outsl
mov
sbb
rcl
mov
mov
in
es
sbb
push
xor
mov
xchg
fxtract
std
xor
lret
push
pop
outsb
and
inc
in
pop
push
andb
sbb
adc
jns
sbbl
scas
xchg
push
sbb
or
push
push
stos
jnp
pop
daa
inc
std
jnp
cmp
clc
addr16
mov
xor
cmpsl
aaa
mov
add
in
and
jge
jbe
mov
cmp
int
das
and
int
ss
popf
loop
xchg
xchg
pop
jno
mov
js
jno
inc
rcrl
es
adc
ss
dec
mov
clc
pusha
pop
pop
mov
cmp
push
rclb
pop
mov
setb
sbb
in
inc
fbld
adc
repz
repz
adc
jns,pn
lea
int
testb
fwait
ret
jge
pushf
fs
cmc
cmpsl
add
imul
and
mov
outsl
lock
daa
sbb
loopne
jge
mov
push
push
inc
orl
hlt
lret
xor
stc
ss
jmp
mov
xchg
mov
push
rclb
out
inc
and
fs
shrl
lahf
ljmp
shrb
mov
push
lock
sub
imul
pop
xor
adc
pushf
adc
cmpsb
orl
insl
dec
scas
imul
jns
inc
jnp
mov
clc
sti
shlb
mov
mov
xor
mov
ficompl
stos
mov
push
testb
cmpsb
add
or
xor
fs
negb
mov
cmp
cmc
mov
loopne
aad
cmpsl
fists
cmp
clc
or
xchg
adcl
ret
test
scas
jle
rcrb
add
push
in
lds
outsb
mov
and
gs
addr16
xchg
addb
leave
imulb
sub
add
aad
mov
sbb
xchg
ret
cmp
jmp
faddl
lock
xor
add
add
or
pop
div
into
jo
popa
sahf
add
lret
push
push
mov
mov
cmp
data16
lods
push
mov
rcll
jnp
fimuls
pop
mov
cli
jp
pop
or
scas
pop
repnz
xchg
dec
loopne
xchg
lds
dec
sbb
nop
in
push
xchg
xlat
leave
inc
adc
mov
ljmp
outsb
inc
roll
pop
pop
out
int3
movsl
dec
stc
xchg
std
cmpb
jge
add
add
lret
lret
or
inc
adc
xor
ror
loopne
inc
aam
cltd
xchg
mov
dec
addl
loop
andb
dec
adc
xchg
mov
sub
sub
or
es
dec
and
cmp
movsb
into
mov
mov
fbstp
xchg
incl
sbb
mov
cmpsb
push
movsb
pusha
in
and
mov
sub
outsl
fsubrs
jle
cmp
iret
inc
and
aaa
das
subl
adc
adc
lock
adc
cli
push
lods
in
mov
xchg
push
std
lcall
fimull
sub
out
int
nop
lods
push
inc
shlb
pop
fst
jmp
push
ds
or
rolb
mov
mov
pop
jae
sbb
mov
pop
xchg
loopne
adc
sbb
xchg
lea
mov
popf
loope
call
xchg
xor
insb
cmpsb
ss
iret
int3
fstps
push
jl
adc
and
imul
loop
cwtl
ficompl
jge
push
scas
in
clc
pop
sub
pop
pop
and
xorl
jne
push
mov
int3
xchg
popl
sbb
cmp
sbb
enter
insb
fucomp
adc
cmp
mov
imul
ficompl
xor
jle
pop
sbb
popf
loop
lock
dec
mov
imul
lret
jl
lret
mov
and
hlt
js
mov
or
xchg
xchg
pop
xchg
imul
dec
cmp
push
rclb
xor
dec
rorl
clc
xor
lahf
add
adc
int
jge
aas
out
divb
cmp
int3
out
out
int
outsl
and
test
jmp
push
stos
ret
sbb
das
cmp
mov
insl
pop
movsl
lock
ret
xor
sbb
mov
push
arpl
rcll
jmp
ljmp
pop
pushf
imul
ret
pop
cmp
jno
aad
fisubs
push
fwait
sbb
testl
jge
add
add
sub
cmc
push
iret
gs
sub
pop
cmc
xor
inc
les
loopne
mov
pop
fadds
push
arpl
adc
pop
sti
les
js
aaa
das
inc
mov
jmp
popa
test
cmpsb
push
adc
das
rcrb
fsubl
push
jmp
lret
out
out
fldl
sysexit
mov
mov
mov
xor
loopne
mov
dec
push
xorl
lret
es
pop
jne
sbb
out
scas
mov
push
cmc
mov
push
cmpsb
ja
adc
fisttpll
leave
add
fsubr
sbb
pop
xchg
mov
sub
test
adc
fwait
mov
jecxz
gs
stos
xor
inc
pop
pushl
stos
bound
popf
add
push
pop
sbb
adc
frstor
mov
repnz
in
fisttpl
mov
es
push
ja
ljmp
jge
cmp
ffree
and
jno
addb
sti
jmp
sbb
adc
push
ja
clc
push
sar
push
mov
xor
mov
cld
pop
adc
jecxz
ljmp
fsubrl
psrlq
ja
mov
lods
mov
xor
pop
loop
mov
add
jmp
imul
inc
cmpsl
fsubl
into
std
mov
aam
cli
icebp
push
jg
imul
xchg
and
cltd
sbb
sub
fnstsw
sub
cmp
ja
mov
pop
cmp
fs
mov
mov
inc
fiaddl
cmp
leave
pmaxub
ljmp
lea
pusha
push
push
inc
cmp
add
aaa
inc
das
or
push
dec
push
and
sbb
pop
into
inc
sub
dec
jecxz
imul
jecxz
dec
iret
cmp
cltd
sahf
cmp
loope
aaa
jbe
out
mov
jge
loop
not
pop
lds
lds
jl
imul
outsb
loopne
pop
mov
inc
outsl
arpl
movsb
inc
or
xchg
mov
dec
jns
sbb
mov
add
and
sub
out
pop
xchg
es
xchg
lock
lret
adc
sbb
cld
clc
mov
cmp
lcall
xchg
cli
mov
jl
mov
repnz
ja
ja
fistps
pushf
cmp
and
mov
jne
stos
push
test
push
les
or
pop
das
add
into
fs
in
jo
cwtl
gs
imul
dec
fstpt
and
mov
jae
mov
sub
test
jle
mov
repnz
out
jge
cmp
pop
jbe
push
inc
cmpsb
sbb
int3
jo
pop
sti
add
fsts
repz
lds
ja
insl
dec
xor
cmpsb
sbb
lcall
mov
lret
mov
mov
int3
fistps
sarl
sbb
add
bound
push
mov
stos
lds
jmp
loop
fidivrl
movsl
jge
jp
scas
in
jge
mov
js
mov
pushf
xor
mov
xchg
fsubrl
and
mov
loopne
aas
mov
adc
aas
loope
xchg
stos
pushf
insb
cs
stc
adc
ss
cmpsb
ja
mov
cmp
in
das
lret
xlat
lcall
sbb
jo
insl
fimuls
pop
jecxz
xchg
sub
movsb
es
cmpsl
add
fdivl
adc
or
jns
leave
imul
sbb
bound
clc
into
inc
repnz
sbb
xor
andb
mov
imulb
xchg
rcll
test
add
aas
push
in
sbb
test
cmpsl
push
adc
mov
pop
pushf
inc
pop
clc
or
pop
jp
sbb
xor
push
jmp
pop
int3
mov
mov
in
dec
mov
mov
addr16
lods
imul
clc
push
inc
cmpsb
mov
mov
sti
mov
pop
es
rorl
loop
aad
sbb
push
and
in
sub
inc
leave
stc
xor
or
add
sbb
sub
dec
mov
lret
push
in
push
iret
inc
pop
insl
lret
or
outsl
xchg
cmp
out
fucomp
jmp
imul
cwtl
jle
lret
jl
mov
addr16
push
cli
sbb
rcll
cli
inc
ja
jbe
xchg
test
rclb
xor
mov
mov
or
jge
push
mov
and
and
or
cmp
pop
push
add
mov
lret
dec
xor
push
fidivrs
divb
add
in
cmpsb
in
pop
mov
dec
xchg
mov
fxtract
shlb
xlat
adc
dec
cmp
cmp
mov
pushl
insb
outsl
rcrb
fdivr
popf
jmp
mov
sub
aaa
fucomip
mov
push
jg
popf
xchg
jl
and
jo
rorb
jmp
ret
inc
jno
sbb
xchg
jg
lock
cmp
pop
pop
sbb
mov
sub
or
cmp
xlat
push
mov
outsl
lahf
add
aad
xchg
insl
mov
lahf
clc
cmp
test
mov
xchg
test
xor
ja
popa
faddl
cltd
jge
daa
jo
lahf
mov
xchg
aad
into
inc
hlt
aaa
and
out
or
xor
cmp
adc
mov
cli
or
rcl
jl
pop
mov
andl
xchg
gs
pusha
xor
pop
int
mov
mov
rol
add
ss
or
sub
sub
jb
xor
in
aam
repz
or
adc
fsubs
insb
jns
fldcw
sub
insl
mov
adc
out
adc
jb
pop
mov
pop
subb
int
fildll
sbb
outsl
sub
ljmp
push
and
aad
bound
mov
pop
std
pop
or
cwtl
popa
sub
imul
fldl
fldpi
stos
and
sbb
jo
sub
test
inc
xor
sbb
aad
and
xchg
adc
cwtl
sub
mov
int3
mov
xchg
mov
in
and
mov
rcrb
popa
xor
test
and
pop
repz
lock
fsubr
fnstcw
xlat
in
jne
mov
push
cli
fstpl
lods
jecxz
push
fisubrs
add
test
and
push
and
insb
sbb
xchg
push
pop
insb
inc
ss
je
push
and
adc
cmpsl
and
fsubrl
ljmp
jo
dec
out
adc
cmp
and
jnp
mov
dec
jmp
out
inc
mov
popf
sti
mov
js
sub
mov
mov
jecxz
repnz
mov
es
sbb
ljmp
add
pop
cmp
sub
mov
stos
and
cmpsl
js
imul
sbb
jle
sahf
mov
imul
nop
xlat
fs
je
jle
xlat
fsubs
and
lret
orb
call
lods
rcll
xchg
sub
pop
mov
mull
push
adcb
out
addb
pop
lea
scas
std
popf
add
inc
pop
fs
das
jmp
fwait
mov
pop
movsb
test
or
mov
mov
cmp
mov
scas
cli
dec
popa
and
push
fs
loop
xchg
outsl
ss
push
mov
push
fistps
xor
mov
inc
dec
dec
jmp
jl
cld
rorb
or
popf
xorb
adc
imul
inc
pop
and
lea
push
jnp
mov
ret
mov
push
adc
mov
xchg
xor
fdiv
enter
dec
mov
dec
pop
subl
xchg
lret
inc
mov
xor
shll
inc
das
pop
rcll
cs
mov
push
push
fadds
test
fidivl
dec
sahf
jnp
fists
les
notb
sub
cmpps
fs
jge
pop
cmp
pop
lock
xlat
gs
xchg
mov
out
cltd
and
addr16
add
add
and
test
push
mov
sbb
aad
testb
arpl
inc
or
dec
mov
fiaddl
push
leave
int
insb
in
or
stc
jae
outsl
jno
cld
shll
jp
ja
or
loope
push
fldl
push
cmp
imul
xchg
int
cmc
sbb
sub
test
out
pop
clc
outsl
jmp
sahf
in
ds
xor
push
xchg
nop
testb
scas
sbb
aad
mov
popa
orl
add
sahf
push
shlb
mov
notl
shlb
popa
in
sub
mov
lods
jecxz
mov
inc
mov
gs
jmp
imul
cmp
imul
bound
stos
cli
bound
cmp
xlat
inc
jmp
rorl
xor
sbb
aad
jg
and
in
out
shl
xor
push
push
fadds
mov
fwait
aaa
pop
push
insb
outsl
mov
push
scas
in
into
xor
fs
xorl
xlat
cli
xchg
int
jno
jecxz
jle
xor
or
sbb
lcall
add
jmp
pushl
ds
mov
xor
pop
jl
pop
mov
adcl
rclb
cmp
cld
jecxz
ja
inc
std
das
js
rolb
mov
cmp
jbe
inc
cli
jae
xchg
inc
inc
sti
ds
gs
jmp
test
jp
push
xor
sahf
lret
jo
push
and
aaa
rcl
rorl
das
outsl
jns
or
insb
push
xchg
and
or
scas
or
jg
dec
inc
or
adc
rorl
inc
sbb
mov
pop
dec
js
mov
fnstsw
push
add
fsubrs
gs
outsl
popf
jns
orb
scas
fidivrl
dec
xchg
sbb
pusha
scas
test
mov
add
popf
enter
fwait
sarl
inc
hlt
cmpsb
sarb
mov
jbe
jp
popa
aad
stos
xor
js
test
ds
jne
jbe
in
push
dec
and
lds
add
fldt
push
cmp
loope
shlb
xlat
push
jno
and
mov
jmp
aaa
jg
add
pushf
loop
ds
xchg
xchg
sbb
sub
in
stos
adc
test
testl
pushf
adc
mov
test
adc
ljmp
clc
add
out
mov
mov
pop
in
mov
das
pop
jb
fsubrs
xor
or
es
into
mov
push
aad
les
mov
out
mov
lret
lcall
lcall
les
jnp
mulb
adc
sbb
sbb
test
gs
movsl
mov
pop
ret
es
mov
leave
enter
adc
jl
mov
leave
rcrl
adc
adc
pop
inc
cmc
mov
mov
mov
mov
rcrb
xor
push
aad
push
inc
icebp
add
pop
sti
scas
out
movsl
pushl
cmp
add
push
shlb
push
les
icebp
mov
or
pop
outsl
jg
sahf
jg
xchg
pop
mov
add
add
add
out
mov
jne
out
popa
pop
adc
mov
stos
pop
cmp
ljmp
call
mov
stc
jge
fcomps
gs
es
cmp
mov
xor
pop
dec
fimuls
ss
add
push
add
xchg
in
xchg
inc
ja
push
adc
subb
xchg
lcall
push
jp
js
jp
je
lea
jge
push
and
sub
and
adcl
push
fst
xchg
jnp
pusha
xchg
push
iret
push
dec
fisubrs
fwait
push
nop
pop
sbb
adc
adc
mov
xor
insl
pushf
sbb
repz
pusha
add
fwait
lret
mov
nop
xor
add
jno
test
mov
sar
mov
cwtl
je
ret
lds
cltd
sti
xchg
xor
nop
xchg
rcll
fwait
lahf
cmpsl
test
scas
jno
mov
jnp
pop
push
call
cmp
call
test
fmuls
pop
mov
xchg
testb
in
mov
cmc
jns
addr16
push
add
sbb
cwtl
jns
sbb
inc
mov
cli
jle
scas
pop
sub
mov
mov
cld
lea
dec
scas
push
or
iret
pop
aam
add
mov
adcb
xor
xchg
arpl
sbb
and
or
ja
mov
stc
cwtl
hlt
and
push
or
out
mov
mov
mov
push
ret
aas
push
insl
leave
jmp
inc
and
mov
outsl
add
sub
xor
pop
divb
push
nop
enter
sti
jmp
jne
or
int
scas
in
pushf
shl
je
add
push
pop
xchg
test
notb
jo
jmp
adc
dec
fmull
sbb
cwtl
push
clc
push
negl
dec
stc
pusha
jp
jmp
call
test
inc
lods
inc
bound
gs
addr16
lods
popf
pusha
sbb
ret
mov
sub
mov
mov
adc
cli
jbe
in
pop
ljmp
inc
cmp
scas
or
xor
or
mov
dec
sbb
jnp
imull
roll
fnstcw
push
push
popa
adc
repz
inc
imul
push
push
jns
and
xchg
inc
enter
scas
insl
movl
push
push
xchg
cmp
into
ds
jmp
pop
mov
aaa
ljmp
jbe
in
inc
repz
cmp
mov
mov
loopne
mov
dec
sub
adc
add
repnz
inc
lahf
xchg
add
jns
sbb
push
fldcw
shlb
xchg
int
adc
js
jge
icebp
pop
mov
imul
out
dec
popa
add
jns
mov
push
test
mov
test
sub
ss
or
adc
sar
xor
mov
es
movsl
rolb
fwait
push
add
add
repnz
lea
inc
fmull
jno
inc
data16
test
cmc
sub
jo
int3
sbb
xchg
inc
jnp
jns
in
nop
push
inc
pushw
es
je
insb
pop
pop
mov
add
cmp
xlat
icebp
in
or
out
jmp
mov
or
psubw
xlat
int
cmpsl
cmovno
rclb
sub
mov
rcl
cld
mov
std
xchg
daa
aad
das
fbstp
jge
pop
mov
jle
aas
add
push
mov
inc
add
mov
and
and
push
fwait
jnp
push
test
call
pop
inc
cmp
aas
fidivrs
popa
xor
cmp
dec
testb
inc
out
out
aam
mov
lods
push
jnp
xorw
stc
xlat
scas
aad
mov
xchg
faddl
jge
nopl
and
call
mov
sbb
out
inc
outsb
shll
sub
and
pop
xor
xor
shll
and
mov
insl
cltd
pop
cmp
push
das
and
leave
pop
push
or
jae
xor
cld
cmpsl
dec
inc
cmp
jne
push
mov
loope
mov
add
scas
cwtl
lods
scas
test
jl
mov
cmp
ficomps
add
jno
mov
adc
lret
pop
inc
cmp
sbb
outsb
dec
pushf
call
icebp
into
imul
mov
pusha
test
push
out
inc
xor
cltd
int3
cltd
pop
push
mov
or
in
sti
add
adc
xchg
xchg
lock
fldenv
rcrb
pop
lret
in
sub
lods
cmp
push
jg
imul
adc
push
lds
das
insb
call
xchg
loop
mov
push
jge
adcl
das
dec
or
arpl
xchg
jne
in
in
aam
pop
sbbb
in
sti
daa
std
nop
jmp
xor
shll
add
cmpsb
out
dec
repz
fcmove
arpl
lock
or
push
push
test
pusha
rolb
sub
mov
popf
mov
les
imul
sbb
xchg
ljmp
add
pop
xchg
inc
idiv
xchg
mov
cltd
cltd
push
pop
dec
stos
test
xchg
pop
out
xchg
lret
in
jecxz
sub
adc
nop
imulb
dec
mov
movsl
hlt
dec
mov
jns
ficomps
pop
xchg
mov
jbe
aaa
and
test
sub
xor
mov
mov
out
inc
cmp
sbb
pop
call
xor
rcrb
mov
adc
push
rcr
sub
ret
lods
sub
mov
popa
imul
lock
xchg
insl
pop
ficoms
fcomi
cmp
xor
xchg
pop
push
or
mov
mov
sbb
lret
stos
xor
pop
add
push
test
add
loopne
test
xor
xchg
mov
or
adc
adc
loopne
movsb
cwtl
and
fnstenv
inc
or
jno
out
ficoml
add
inc
jmp
out
fldlg2
jg
xor
jecxz
dec
out
mov
inc
dec
adc
xchg
aas
push
mov
dec
ja
jge
rorl
cmpsl
addr16
jne
inc
xor
ds
fnstenv
daa
inc
jge
and
rol
xlat
push
cmp
jno
call
sub
sbbl
jnp
addr16
test
sbb
fidivrl
stos
pop
arpl
push
out
mov
sbb
sbb
leave
mov
sbb
adc
in
xor
in
cli
dec
bound
and
xor
dec
lcall
mov
int
sub
jg
mov
sbb
jmp
movsb
dec
inc
arpl
cmp
adc
jmp
es
hlt
pop
popf
stos
pop
add
lahf
adc
xchg
test
mov
add
push
cmp
flds
popa
add
les
cmp
or
mov
loopne
jp
or
hlt
sub
faddl
jg
nop
pop
test
jmp
jg
mov
jne
leave
mov
shll
inc
dec
gs
push
jne
xlat
dec
and
add
gs
mov
xlat
in
aaa
aad
fidivs
je
shlb
mov
imul
push
cld
jge
daa
psubb
adc
daa
push
loop
out
out
xchg
repnz
sar
sbb
jns
popf
clc
mull
adc
shl
xlat
push
mul
dec
jmp
cltd
dec
jp
cld
jge
repnz
idivl
stos
icebp
rcr
clc
push
test
jg
pop
mov
jp
add
mov
xor
stos
sbb
std
or
mov
add
pop
movsl
subl
jne
shrb
add
fnstsw
mov
cmp
cmpsl
xchg
shr
push
jno
jnp
stos
sub
addr16
scas
jne
mov
dec
insl
jp
sub
mov
insb
adc
or
dec
push
into
and
adc
xorl
adc
jae
cmp
adc
cltd
dec
imul
out
and
sub
jmp
cmp
mov
and
pusha
fstpl
pop
add
pop
mov
nop
dec
xor
or
push
dec
push
aam
jle
les
or
mov
and
add
mov
mov
je
jp
push
inc
or
jecxz
mov
mov
xchg
imul
mov
mov
inc
add
insb
xor
test
loop
lods
adc
stc
add
cmp
dec
into
mov
lcall
lock
xchg
cmpsl
das
lods
inc
dec
mov
mov
js
mov
jo
out
icebp
mov
stos
stos
fcmovb
xor
into
push
cmc
mov
mov
icebp
ret
gs
leave
cltd
fs
fsubrs
je
add
add
lds
insl
lea
fisttpl
jge
inc
fbld
cld
adc
pop
lahf
inc
adcb
mov
fwait
cmp
pop
lahf
pop
das
fmul
aam
inc
sub
pop
test
jge
xchg
push
pop
xorl
add
mov
ss
jno
lret
mov
mov
sub
enter
or
ficoml
and
xor
sti
add
and
add
pop
push
movsb
push
loope
push
inc
enter
divl
add
inc
out
into
adc
xor
int
cs
jne
rolb
xchg
insb
push
or
cmpsb
andl
in
add
cwtl
mov
and
test
std
pop
push
stos
push
outsb
je
dec
inc
sahf
ret
jae
test
loop
and
jns
fwait
sub
dec
jecxz
popa
aaa
sbb
cmc
lea
jmp
sub
test
ja
push
jns
push
lods
mov
jg
jns
mov
inc
xchg
and
xchg
aas
sub
sub
pop
clc
je
stc
push
push
pushf
xchg
ja
adcl
stos
test
xor
mov
out
xchg
in
loopne
pop
or
cmpsl
aas
fisttps
xchg
pop
xor
cmp
adc
pop
cltd
es
mov
jmp
lods
jp
mov
negl
mov
shrb
loop
jne
xchg
testb
scas
cmp
daa
test
cmpsl
add
dec
mov
push
add
fisubrs
lret
mov
stos
out
sbb
adc
std
in
sub
enter
scas
addr16
adc
xchg
inc
push
jmp
imul
adc
aaa
mov
adc
xor
lods
xchg
adc
std
dec
addb
call
inc
mov
mov
or
ret
xchg
ss
push
lret
aam
std
movsb
push
jp
lods
and
pop
pop
and
xchg
jnp
pop
mov
pop
xchg
jno
cwtl
lds
pop
cmc
sbb
leave
addr16
inc
imul
or
cltd
lds
jl
sub
imul
xor
xor
fmulp
pop
push
repz
mov
mov
pop
xchg
ss
icebp
mov
adc
pop
das
daa
decb
lcall
mov
clc
and
movsl
mov
insl
ret
mov
pop
push
xor
lahf
imul
gs
ja
jl
dec
inc
cltd
mov
pop
js
fs
mov
xor
out
in
jge
sbb
cmp
cli
sti
mulb
jle
inc
stc
sbb
pushf
repz
in
outsb
xchg
and
mov
and
jle
aam
mov
and
jecxz
mov
scas
xchg
add
movsl
jl
sub
enter
cmpsb
sub
mov
or
or
sub
dec
push
lret
loope
pop
and
into
push
arpl
fs
add
sbb
in
jp
add
in
mov
outsl
gs
sub
inc
idivb
cmp
fwait
jle
stos
mov
mov
inc
int3
sub
iret
cmp
add
jle
out
pop
insb
popa
lar
bound
imul
cmc
push
hlt
or
out
sub
dec
sub
enter
jle
and
push
jg
sbb
imul
jnp
imul
insw
sahf
and
mov
lret
mov
int
fs
jmp
out
dec
shll
mov
out
jno
pop
mov
jp
jno
outsl
push
adc
arpl
pushf
jns
push
in
sbb
xor
add
or
add
fcmovnbe
dec
add
aam
add
xchg
or
ficompl
shrb
in
lret
fists
and
leave
rcr
adc
adc
test
adc
dec
mov
rcll
test
iret
xor
cwtl
jl
xor
mov
les
xchg
in
add
pop
jo
adc
mov
std
cs
cmp
mov
jl
jl
sbb
mov
and
push
xchg
mov
std
nop
enter
nop
pop
and
enter
out
sub
mov
das
shl
and
xchg
insl
stos
add
cmp
mov
jg
fidivrl
cld
lods
mov
push
push
out
ljmp
or
mov
jg
sub
stc
in
jmp
and
add
sub
jp
sbb
push
mov
xor
add
out
add
xor
xchg
inc
mov
mov
sbb
pop
into
das
cli
mov
pop
fistps
out
cmpsl
out
stos
sub
inc
dec
pop
cmp
mov
mov
push
pop
out
gs
push
jo
push
or
lods
xlat
add
jne
sub
lahf
insb
xchg
out
shl
pop
and
push
mov
imul
in
int
shl
push
sub
cld
sub
sub
gs
xchg
testl
cmp
inc
xchg
notl
rorb
dec
sbb
loop
cmp
pop
pop
jns
jnp
or
adc
lahf
lea
les
push
in
xor
pop
lods
sahf
cmp
loope
xchg
dec
popa
jbe
push
or
sub
jb
pushf
out
xchg
push
not
jmp
mov
loopne
insb
jbe
rorl
adc
push
inc
out
add
xchg
pop
ret
push
mov
pop
or
cmp
mov
jmp
mov
add
push
mov
in
test
or
cli
ror
out
add
pusha
xchg
lret
jno
js
add
icebp
cmpsl
pop
inc
pop
xor
mov
xchg
pop
fiadds
sub
push
cmp
pushf
add
jmp
dec
lock
and
mov
std
in
cmpl
mov
ss
dec
js
sahf
adc
pop
rorb
jg
int
push
lock
jne
cmc
pushf
xchg
sti
fnstenv
mov
daa
std
test
xchg
call
xor
cmpsb
jno
push
int3
fwait
mov
cmp
xor
imul
mov
mov
cli
sbb
pop
push
in
enter
je
std
push
and
aad
mov
adc
xchg
dec
push
sbb
lcall
into
push
in
js
sbb
cmpsl
clc
addr16
cmp
in
mov
gs
dec
call
cmp
jg
jg
mov
fs
jge,pt
or
dec
push
js
pop
push
or
sarb
call
xchg
xor
push
push
je
lret
push
popa
adc
nop
aaa
push
fwait
inc
scas
jle
fsubrs
jg
lcall
out
xchg
mov
adc
mov
sub
adc
hlt
mov
mov
cltd
enter
neg
les
int3
push
inc
std
add
jns,pt
shrl
jbe
scas
loope
xchg
insl
xor
sub
or
stc
xchg
mov
arpl
and
xor
in
and
stc
lret
dec
xor
repz
push
jne
jle
adc
inc
popa
sbb
cmpsl
cmp
stos
lds
jne
dec
imul
mov
mov
pop
dec
mov
xor
ss
lods
ret
xor
jbe
mov
dec
dec
sarb
xchg
jle
push
in
call
push
jecxz
sti
fstpl
fdivrl
or
mov
imul
in
aad
out
fs
adc
arpl
aaa
inc
pushf
mov
pusha
jo
push
dec
test
xchg
out
sub
mov
inc
scas
gs
cs
xchg
dec
stos
pop
std
insb
or
dec
lcall
repz
gs
rol
sbb
fs
add
xlat
jbe
mov
cmp
mov
inc
pusha
dec
inc
jbe
jae
sub
dec
mov
loop
fadd
adcb
shll
fisubl
pop
dec
outsb
mov
add
add
ret
xchg
jg
shl
leavew
popa
mov
cli
pop
mov
inc
lods
dec
jl
cwtl
nop
xlat
ds
aam
mov
and
add
popl
shrb
xchg
fwait
fwait
dec
je
shrl
jnp
adc
xchg
shrl
lcall
lret
adc
jae
ffree
jb
jns
xchg
pop
ds
out
mov
cmp
ret
das
cmp
lods
std
lcallw
adc
mov
repz
test
mov
inc
mov
xchg
jae
ss
or
cmp
xlat
jbe
mov
xor
push
sub
cwtl
cmpsb
jmp
in
ss
fwait
mov
loope
push
repz
inc
shlb
int
imul
das
jge
dec
or
cwtl
popa
pop
mov
testb
adc
pop
loope
inc
bound
movsb
cltd
lret
scas
inc
out
sbb
stc
inc
dec
dec
sbb
xchg
je
pop
cmp
mov
pop
xchg
js
pop
sub
call
inc
mov
mov
icebp
inc
dec
push
ja
ret
adc
call
negl
lock
addr16
pop
or
or
icebp
outsl
dec
sbbb
ret
sub
orb
sbb
mov
sub
shlb
push
ss
loope
fistpl
mov
aam
data16
cmp
aad
lock
pop
mov
add
aas
dec
in
inc
cmp
dec
cli
lahf
repnz
pop
xlat
lret
imul
stos
out
insb
subl
xchg
push
mov
int
jbe
jo
out
xchg
das
mov
cmp
addr16
lret
outsb
out
int3
xchg
ds
add
stc
mov
push
cmpsl
cltd
sarl
mov
das
adc
sbb
lods
aas
dec
mov
stc
aad
je
inc
repnz
and
rcrl
arpl
jp
mov
mov
cli
aaa
cmpsl
mov
clc
mov
call
inc
xor
rclb
mov
cli
add
test
cs
adc
daa
mov
sub
add
push
sub
sub
and
sub
jno
sbb
cli
mov
mov
in
xchg
in
icebp
xchg
pusha
andb
mov
lods
jb
ret
in
pop
xchg
outsl
lods
scas
xchg
scas
cmp
push
insb
scas
loop
int
and
sbb
les
sub
dec
mov
popf
daa
test
fldcw
sbb
xchg
inc
in
clc
mov
enter
decl
ja
popf
pop
mov
xchg
mov
mov
jge
int3
out
pushf
mov
adc
or
sti
lds
mov
jno
cmp
dec
and
into
mov
jb,pt
push
mov
xchg
mov
sub
movsl
das
add
and
mov
xchg
loop
adc
jb
push
je
mov
xchg
ja
and
scas
push
and
push
iret
dec
scas
dec
sti
repz
mov
push
nop
dec
xchg
jb
and
je
and
xsha256
adcl
test
loope
fadds
iret
jge
enter
dec
testb
jbe
mov
es
mov
insb
pop
xor
imul
or
jmp
insl
gs
xchg
nop
xchg
inc
insb
xchg
fcoms
mov
in
test
add
lods
xor
loop
cmp
push
push
dec
clc
movsl
loope
addr16
insb
lahf
xchg
fisttpl
sti
mov
mov
test
jmp
jl
ljmp
jmp
gs
and
loopne
lret
mov
sbbb
fs
adc
push
lret
mov
mov
jmp
int
popf
xor
mulb
xlat
shlb
in
xchg
pop
popa
ja
xchg
cvtdq2ps
inc
test
mov
or
fsubrs
adc
addr16
lea
lods
or
sarb
mov
inc
sbb
imul
xor
or
dec
repnz
xchg
and
dec
mov
notl
test
add
inc
nop
xchg
mov
pop
mov
std
stos
orb
mov
int3
inc
stos
clc
loopne
jge
mov
enter
sub
sahf
jnp
mov
inc
xlat
scas
insb
lock
ret
add
rorb
sahf
mov
loope
push
fisttpll
inc
jge
int
lcall
xor
push
fcompl
cmp
inc
mov
push
bound
cmp
mov
fadds
mov
mov
scas
push
inc
dec
xchg
mov
insl
mov
mov
test
and
aam
inc
sub
mov
shlb
xchg
mov
inc
xor
mov
adcb
cli
orb
lds
roll
test
sbb
push
dec
sbb
dec
xlat
es
pushf
clc
sub
adc
movsl
pop
push
and
add
and
mov
das
ficoms
subl
es
imul
lahf
xchg
pop
roll
pop
mov
adc
push
sbb
out
in
sbb
xchg
inc
push
movsl
insl
sarb
clc
enter
js
cmp
fucomi
stos
movsl
popa
and
imulb
int3
xchg
xor
mov
in
leave
and
xor
in
subb
sbb
fadds
fs
push
mov
outsl
les
push
mov
xor
cmpsb
mov
lods
add
add
cmp
push
pop
pop
xchg
int3
push
jge
jmp
jle
pop
lods
cmpsb
cmpl
mov
pushf
xchg
out
cmpps
cmp
into
xor
movsb
sbb
push
imul
scas
ret
sub
mov
bound
repz
mov
popa
dec
xchg
dec
filds
sub
cmpsl
loope
lahf
movsl
sbb
movsl
jbe
jle
cltd
mov
cltd
sbb
mov
stc
ds
lahf
mov
fisubrl
xor
mov
xor
lea
xor
mov
mov
in
loopne
js
inc
rorb
push
pop
out
insb
cmpb
push
addr16
dec
addl
sub
xchg
repz
cmp
sub
leave
jno
repnz
shll
lcall
push
ficomps
cs
cmpsl
mov
mov
xor
pushf
dec
and
cmp
int
pushl
popa
loop
push
inc
push
jl
std
call
mov
jle
fistpll
xor
js
dec
gs
ss
sub
cmc
sbb
xlat
fs
iret
adc
xor
sub
inc
mov
lret
lret
mov
adc
clc
mov
or
shl
ret
jno
fildl
rcll
mov
ficompl
mov
pushf
dec
movsb
or
pop
dec
cld
jg
fildll
sarb
fisttps
sti
call
add
and
sbb
jnp
in
cmp
add
mov
stc
dec
xchg
je
or
or
aas
sbb
push
pop
iret
loope
and
push
stc
pop
sub
lods
out
jb
inc
enter
push
loopne
mov
inc
pop
fldt
cmpl
mull
jnp
jns
push
fsubrs
mov
ljmp
xchg
jle
inc
pop
add
jmp
sbb
jns
popf
xor
mov
and
xchg
test
push
popa
rcrb
inc
sub
lock
sub
jl
inc
sbb
into
jne
dec
pop
mov
out
jge
testb
fisubrl
inc
shrb
sub
cmp
dec
mov
cli
jge
rcrl
xchg
lods
mov
sub
sti
mov
mov
cwtl
add
adc
push
ljmp
add
xor
sub
ret
lods
mov
cli
or
sbb
jg
pop
popl
push
cmp
popa
push
mov
sub
mov
cwtl
aad
adc
and
pop
aaa
inc
jl
popf
cwtl
mov
sub
gs
push
aaa
add
or
ret
icebp
xorl
add
add
or
xor
add
mov
popf
or
test
in
clc
es
fimull
xchg
jmp
mov
adc
xor
mov
jge
fldl
cld
cmp
aad
pop
in
inc
xchg
ficoml
mov
popa
sbb
aas
inc
xchg
int
mov
pop
dec
mov
cmp
sub
dec
in
fistps
lds
sti
shll
push
out
and
shl
add
push
loope
pushf
pop
xchg
cltd
mov
xchg
insb
gs
shll
cmp
test
sbb
dec
in
sbb
inc
mov
repz
mov
mov
aad
sbb
xchg
xor
cmc
or
fcmovb
insl
cmp
bound
mov
mov
call
leave
rcl
mov
out
fcoml
jmp
nop
mov
pop
fsubrl
repz
int3
or
jns
je
sbb
pop
movsb
jl
leave
aas
mov
mov
pop
mov
in
xlat
pop
xor
cmp
mov
mov
insl
mov
das
mov
jmp
xchg
jecxz
data16
sbb
rol
cmp
pop
sub
xor
icebp
lcall
or
cmp
cmpsl
dec
stos
xchg
jnp
and
in
xor
sbb
popl
orb
call
fwait
rolb
and
int
dec
jecxz
sub
sub
ret
jge
and
les
pop
and
es
fimull
jno
cmc
lods
mov
inc
in
cwtl
push
xchg
mov
mov
xchg
sub
aam
pop
inc
inc
xor
ret
inc
dec
popa
cmpsb
clc
and
in
xchg
and
push
pop
pop
into
adc
add
ret
adc
fwait
xor
jecxz
orb
or
sub
loope
jb
cwtl
inc
jle
cld
sub
loopne
repz
mov
shll
inc
jo
and
dec
jmp
aaa
daa
jg
inc
repnz
fcompl
fmul
sub
mov
sbb
icebp
int
loopne
add
loope
in
xchg
repz
mov
push
ret
mov
jb
jmp
jle
dec
out
add
mov
cmc
dec
cltd
and
fdivs
int
int
jl
lea
dec
xor
sbb
inc
data16
mov
dec
aaa
jle
inc
xchg
push
lcall
fwait
in
daa
mov
mov
dec
push
mov
mov
addl
clc
rcrb
nop
xchg
mov
fbstp
xchg
sahf
mov
xchg
dec
repz
test
mov
insb
cmp
mov
inc
xchg
lods
push
out
lods
or
flds
inc
ret
pushf
or
sbb
outsl
xlat
push
pop
cli
mov
mov
scas
aad
push
xchg
cltd
jecxz
mov
pop
cmp
pmaxub
xchg
push
sub
inc
ret
lods
iret
enter
add
idivl
shll
xor
mov
nop
stc
cmp
push
fs
iret
aas
loopne
mov
pop
sub
and
das
mov
lods
push
movsl
push
push
cli
jmp
and
pop
xlat
in
pop
push
rol
adc
arpl
insl
xorb
aad
pushf
push
mov
scas
adcl
inc
nop
pop
or
pop
aad
imul
in
mov
jl
push
pop
daa
cld
xor
sbb
pandn
sub
mov
in
sbb
stc
leave
sbb
or
mov
xor
je
pop
dec
sbb
popa
adc
xor
mov
pop
lea
jbe
pop
push
test
xor
hlt
outsl
enter
mov
cmpsb
ja
pop
mov
sbb
pop
push
rcll
aas
mov
std
and
mov
cmp
adc
test
enter
jnp
mov
jmp
mov
cmpsb
push
jbe
lret
ret
adc
sbb
xchg
or
push
aas
jecxz
int3
ljmp
add
in
or
xor
dec
cmp
popa
mov
adc
sbb
lret
pop
xchg
jnp
add
xchg
xchg
in
cmp
and
adc
enter
ret
jae
lahf
sub
and
sarb
stos
mov
push
xchg
cli
mov
inc
aaa
out
lods
or
mov
pusha
and
fnclex
and
dec
cmp
mov
ficoml
daa
outsb
movsl
movl
mov
sub
arpl
xor
jo
push
stc
rclb
stos
imul
movl
das
stc
pop
jecxz
xchg
shl
mov
xchg
mov
jae
sub
jns
lods
inc
cmpsb
or
in
aas
aam
rcrl
inc
pop
into
fisttpl
jle
ret
ficomps
pop
jae
mov
sbb
leave
cmp
pop
jae
pop
ja
shlb
mov
sub
daa
int
push
adc
push
out
xor
xor
repz
add
lods
jmp
jae
in
xorl
cmp
jnp
mov
out
inc
mov
int3
repz
adc
inc
sbb
xor
das
mov
lea
das
nop
push
mov
scas
adcl
sub
out
mov
lahf
jecxz
aas
mov
pop
mov
mov
mov
insb
cwtl
mov
clc
pop
adc
mov
and
jmp
fincstp
cmp
or
pushf
addl
jb
xchg
xor
sub
cmp
ljmp
insb
sarl
cmp
or
test
das
add
into
loop
sbb
in
push
bound
inc
sahf
inc
dec
xor
xor
jg
mov
dec
jbe
popa
push
push
push
inc
jnp
faddl
stc
adc
xor
cmpsb
cmc
mov
mov
mov
pop
test
cld
mov
sarb
mov
xor
addl
sub
and
mov
jecxz
cmc
ret
push
push
push
ss
repnz
inc
or
xor
cmpsb
xchg
jae
ret
jg
stc
pop
shll
jns
in
mov
sub
mov
scas
jp
cli
rclb
xor
inc
adc
push
pop
in
cmp
dec
xchg
sub
adc
mov
int
data16
leave
fcmovbe
push
pop
test
pop
mov
rolb
loop
push
or
or
imul
xchg
aad
cld
lock
and
mov
or
movsl
inc
lds
pop
jno
lahf
xchg
imul
test
xchg
sahf
xor
xchg
sub
add
bound
test
add
in
xchg
cmp
cmp
pop
mov
mov
push
pop
pop
pusha
jp
loopne
fwait
add
ret
xchg
mov
or
pop
pop
ret
rorl
or
jne
ret
dec
lock
adc
sbb
test
out
adc
pushf
push
in
and
arpl
cmp
in
jp
dec
and
push
pop
iret
mov
lea
and
add
or
pop
and
or
es
bound
lahf
xor
test
ret
rep
add
pop
aad
stos
inc
push
xlat
mov
lods
cli
mov
daa
iret
pop
imul
popa
push
sti
cli
push
mov
xchg
dec
add
jns
pop
xor
sar
adc
jo
fists
mov
arpl
mov
outsl
xor
cwtl
push
jp
jo
cmp
lcall
mov
dec
xchg
xchg
jo
sbb
pop
and
jle
pop
sbb
sub
shrb
dec
sbb
mov
mov
scas
scas
lds
call
add
xor
or
jecxz
dec
push
or
mov
sbb
lcall
rcrl
jmp
or
ljmp
cmpsb
jno
fwait
std
inc
xchg
jns
data16
test
jae
inc
pop
mov
insl
lds
or
fidivrl
fcompl
imul
inc
mov
std
xor
pop
inc
pop
dec
xor
fwait
mov
push
dec
add
push
popf
dec
or
sbb
mov
mov
addl
and
cmc
dec
rorl
sahf
outsl
imul
push
fnstenv
lock
daa
add
mov
test
sbb
ret
cs
lods
sbb
outsl
insb
push
outsl
mov
mov
daa
out
sbb
pop
popa
add
push
push
ret
cmp
rorl
inc
mov
cmc
loope
mov
xchg
sahf
xchg
aam
and
xchg
pop
dec
jl
cmp
and
push
jb
pusha
loop
sbb
mov
aam
push
mov
dec
mov
push
sub
mov
mov
sbb
cs
dec
pop
sbb
stc
push
dec
jge
mov
das
pop
jae
lcall
lods
xchg
mov
sbb
mov
pop
loope
pop
cmp
inc
adc
shl
add
pop
and
psubsb
ljmp
cmp
cwtl
js
mov
pop
inc
popf
loop
adc
ljmp
jo
cmp
xor
inc
push
mov
jbe
inc
adc
adc
test
in
ret
jbe
sub
nop
push
lock
insl
mov
adcl
outsb
inc
cmp
aaa
jb
ss
loop
and
adc
mov
out
in
jecxz
jnp
inc
fcomps
cmp
pusha
les
pop
icebp
mov
imul
imul
mov
cmp
jecxz
out
push
xor
es
je
inc
pop
or
xchg
sbb
jmp
push
arpl
lods
pop
fwait
ljmp
mov
sub
and
movsb
mov
adc
xchg
mov
push
test
daa
or
jmp
movl
sbb
mov
sub
ret
cli
push
fildll
sub
jno
push
sub
movsb
data16
jo
in
cli
or
jb
pop
outsl
insb
inc
pop
push
out
cltd
jmp
jl
or
and
jmp
mov
scas
fwait
add
ljmp
shlb
inc
push
gs
leave
addr16
lods
jbe
insl
or
cmp
push
inc
or
sub
loop
push
jae
pop
call
shl
sub
sbb
cmp
pusha
cmp
arpl
inc
pusha
push
mov
mov
pop
pusha
dec
push
jne
and
out
int
add
lea
push
pop
push
cmpsb
dec
xchg
addb
and
rcrb
inc
in
les
movsl
adc
push
xor
icebp
icebp
lret
dec
pop
bound
nop
jp
popa
xor
pop
iret
push
jns
addb
in
xor
leave
jg
xor
and
and
inc
mov
jg
cmp
js
mov
out
lds
scas
jmp
lods
mov
xor
enter
pop
mov
pop
xchg
stos
jg
in
pop
in
daa
mov
inc
mov
xlat
mov
aaa
in
or
dec
flds
not
add
addb
add
popa
aas
loopne
in
dec
out
mov
push
pop
and
jno
xchg
in
leave
rclb
push
xchg
enterw
rol
js
into
lea
and
dec
repnz
arpl
insl
std
lock
fsts
jae
hlt
sub
inc
xor
jbe
jge
add
fdivrl
in
test
jns
mov
sarl
outsl
outsb
mov
mov
mov
sbbb
stc
inc
mov
cmpsb
dec
ljmp
outsl
imull
cltd
loope
cmovnp
int
push
insb
repz
push
and
filds
mov
jecxz
cmpsl
inc
cmp
jl
mov
xlat
repz
and
dec
adc
int3
or
arpl
inc
push
inc
fsubrl
xor
rclb
or
mov
cmc
mull
or
and
arpl
push
insl
shll
imul
loop
and
ret
fdivrp
sub
insl
pop
ret
pop
test
fidivrs
das
add
icebp
mov
push
mov
mov
addl
pop
push
aaa
sbb
js
int
jmp
cltd
mov
cltd
push
loope
inc
sub
pop
cwtl
sbb
lds
add
outsl
andl
xchg
jb
dec
jno
push
ds
cmp
add
dec
test
data16
fbstp
add
js
iret
sbb
push
or
ds
pop
in
loope
mov
inc
das
insb
lea
fs
push
hlt
outsl
out
nop
mov
pop
rcrb
dec
or
stc
pusha
sbb
jmp
pusha
outsb
and
pop
daa
cli
cmp
jne
mov
loope
mov
les
movsl
mov
xchg
aaa
shr
outsb
sub
push
mov
cmp
pop
xchg
rcrb
mov
pop
outsb
ja
jg
adc
jl
xor
stos
sub
ds
es
add
fmuls
push
sbb
ss
call
sub
sbb
cld
inc
sahf
jnp
mov
mov
icebp
into
mov
dec
bound
cmp
mov
sbb
sbb
sbb
xor
popf
dec
add
mov
in
pop
xor
jbe
mov
cmpsl
fldcw
mov
xlat
pop
or
cmp
xor
daa
mov
push
jno
sub
je
xchg
mov
push
mov
scas
lds
add
rol
cmpsl
ja
repz
adc
cmpsb
loop
jecxz
mov
int3
cmp
pop
popf
mov
ret
mov
imul
pop
rolb
push
dec
mov
iret
or
fists
sbb
jl
data16
clc
divl
iret
push
xchg
ret
push
push
sbb
sbb
sbb
and
sahf
mov
jp
pop
cs
pusha
sarb
or
lret
rcl
lahf
addr16
dec
or
mov
call
sub
add
fistl
enter
pop
inc
jg
xlat
nop
push
ljmp
inc
inc
les
pop
pop
and
and
inc
adc
add
iret
ds
lods
mov
mov
dec
push
mov
mov
test
fists
and
xor
sbb
imul
cs
push
es
pusha
je
jge
es
mov
xor
add
out
xchg
xor
aam
sar
mov
int
adc
in
rcl
pop
int3
addb
inc
in
or
lcall
imulb
dec
pop
das
push
int3
stos
dec
push
cmp
sbb
jno
cltd
sbb
test
cmp
lret
aaa
sbb
mov
sub
scas
or
adc
scas
mov
adc
dec
outsl
xchg
loope
shr
movsl
pop
lock
or
clc
ficoml
and
cmp
rol
jecxz
or
negl
and
push
sbb
fisttpl
push
push
push
add
sbb
loop
or
addps
push
fwait
movsb
cmpsl
pusha
add
daa
out
add
ds
xor
bound
push
xchg
cmp
scas
push
inc
cmp
pop
cmp
ds
test
mov
dec
mov
mov
sar
scas
dec
jp
and
jae
push
std
jecxz
in
inc
mov
repnz
movb
nop
lret
pop
inc
sub
mov
xchg
imul
add
leave
xchg
std
test
out
je
jmp
cmpsb
sbb
fstpl
pop
ret
jmp
aaa
pop
push
ljmp
shll
sub
scas
inc
lret
in
inc
divb
mov
mov
cmp
jo
sub
scas
test
mov
cmp
loopne
jns
neg
adc
push
xor
testb
stos
push
in
aas
js
nop
cmpsb
or
lods
inc
aaa
test
ficoms
mov
mov
out
mov
sbb
sbb
shrb
mov
lret
push
inc
testl
popf
cmp
les
dec
xchg
out
push
mov
xor
mov
push
jo
push
ret
cmp
fstpl
subl
mov
addr16
call
or
push
push
sub
popf
dec
ss
sbbl
movsl
cmpsb
and
xor
xchg
lods
adcl
pusha
xchg
xor
es
int
test
imul
test
fldcw
and
cmp
xchg
mov
inc
shr
xor
std
lret
add
jge
mov
in
add
or
daa
push
test
cmp
gs
das
jge
cmpsb
cmp
aad
pop
out
out
adc
or
mov
bnd
xor
aaa
mov
fdiv
push
sti
cld
cltd
or
mov
scas
jne
and
movsl
stos
mov
jmp
ret
je
sbb
in
cmp
movsb
add
push
stc
dec
and
clc
xorb
jmp
adc
mov
and
sub
das
mov
addr16
pop
xor
dec
nop
adc
mov
sti
xchg
and
adc
and
dec
adc
push
jbe
fwait
sub
sarl
loope
test
inc
fists
mov
lods
mov
in
mov
pop
ret
enter
inc
xchg
pop
or
adc
jle
sbb
adc
inc
adc
sub
mov
cmp
mov
sub
xor
rorb
movsb
int
pop
mov
dec
std
cmpsl
pop
ret
adc
adc
xchg
into
pushf
add
shr
push
test
jb
add
sbb
shr
sub
or
sub
cmp
aas
xchg
pusha
or
fs
stc
ss
int3
das
jp
dec
adc
sub
outsb
sbb
les
insl
cmpsb
arpl
cmp
sbb
fdivl
pop
stc
or
mov
and
pop
mov
fisttpl
test
scas
rcr
dec
dec
js
enter
inc
mulb
aad
pop
scas
fwait
leave
insb
js
push
mov
mov
xchg
aaa
into
mov
pop
imul
mov
movsl
sbb
cmp
cltd
arpl
xor
mov
clc
dec
xchg
push
arpl
int3
push
add
pop
pushf
sarb
int3
mov
idivl
mov
push
inc
jnp
incb
cmp
out
rcrl
popa
sub
mov
enter
push
sub
jle
pop
push
arpl
mov
fisubl
and
pop
dec
icebp
mov
sbb
or
mov
inc
pop
xchg
or
sbb
nop
sub
cmpsl
pop
dec
lock
or
cwtl
mov
orl
lds
mov
fs
int
add
ljmp
rorb
lret
orb
push
dec
cmc
fwait
dec
adc
sub
popa
inc
cs
sbb
cwtl
out
movsb
cmc
mov
pop
outsl
mov
mov
out
daa
add
jnp
inc
jg
mov
lods
pop
mov
inc
fsubrs
cmp
push
mov
dec
push
inc
cmp
jns
or
test
adc
or
xor
and
or
inc
cld
xchg
jl
cmpb
jg
lock
push
fcmove
dec
ss
sub
stos
subb
adc
cmp
das
jo
inc
xchg
enter
sahf
push
xchg
into
pop
into
sub
xchg
mov
add
and
sub
scas
jae
cmp
adcb
inc
mov
xor
xchg
lds
lds
lcall
ret
xor
adc
cmpsl
loopne
pop
test
and
stc
arpl
dec
add
insb
arpl
mov
sbbb
push
std
shll
sbb
xchg
popa
jmp
gs
xchg
jne
aaa
js
cmpsl
cmp
add
mov
pop
mov
jp
jae
inc
xchg
std
push
jae
je
int3
cmpsl
iret
sbb
cmp
dec
or
popf
shrb
mov
push
inc
xor
fsubr
xor
mov
enter
leave
stos
mov
lods
insb
cwtl
sarl
sbb
sbb
leave
repnz
lds
xchg
add
pusha
out
inc
in
es
add
adc
cmpb
loopne
sarl
cs
lret
test
imul
rcrl
cli
test
xlat
repz
pop
push
nop
push
sbbb
xchg
mov
cmp
or
mov
push
call
and
in
or
scas
adc
test
and
addr16
fucom
bound
mov
sub
push
stos
cmp
mov
mov
xor
jae
movsl
lods
mov
add
inc
push
jbe
popl
fcom
cmp
push
testb
xchg
ss
inc
out
mull
sahf
and
andb
hlt
loope
dec
and
pop
int3
mov
push
loop
cltd
or
sbb
jmp
cwtl
add
xchg
xor
pop
lret
pop
sbb
and
hlt
mov
mov
mov
pop
inc
cli
jecxz
mull
pop
or
jl
cld
push
cmp
dec
out
scas
sti
mov
push
xor
in
stos
sbb
and
test
fadds
scas
inc
push
sub
test
xorl
rolb
mov
in
jns
sub
daa
add
jnp
mov
and
in
lahf
test
sub
mov
push
rcrb
mov
cmp
les
ret
dec
cwtl
xchg
push
mov
outsl
cmc
push
adc
stos
jns
pop
movb
or
sbb
xchg
popf
mov
mov
movsb
adc
enter
jp
les
inc
test
and
jae
mov
mov
lahf
and
loop
imul
out
xor
mov
js
sbb
jo
sbb
xlat
scas
addl
je
pop
stos
sbb
push
add
test
adc
arpl
lea
les
aam
or
pusha
sbb
addr16
pop
sbb
fisttpll
push
sbb
cli
jp
rorb
in
out
sub
xlat
push
push
ret
mov
push
push
xchg
clc
fwait
enter
fstps
sbb
movsl
movsb
test
jo
into
test
sbb
cmpsb
cmp
out
dec
pop
sahf
mov
and
aam
adc
jb
aas
cmp
scas
xor
inc
cmp
push
dec
cmp
mov
gs
daa
lds
mov
mov
lock
cltd
sub
loope
loopne
mov
mov
sbb
add
or
mov
mov
icebp
cmp
loopne
data16
je
pop
out
aaa
fadd
cs
sarl
sbb
dec
jno
ret
jae
add
insl
repnz
adc
nop
ljmp
scas
shlb
sub
push
pop
jno
mov
sub
jo
mov
cmp
push
insb
aaa
xchg
cmpsb
inc
clc
loopne
mov
mov
es
xchg
int3
shrl
add
mov
or
mov
popa
mov
cmp
xor
xor
nop
test
adc
idivl
pusha
xchg
ret
daa
aam
daa
lods
fcomip
adc
nop
add
fdiv
in
stc
mov
jno
push
clc
stos
xor
xor
int3
cli
jbe
jmp
pop
sub
jns
sbb
mov
in
xor
xchg
js
iret
ss
adc
test
ljmp
adc
mov
mov
nop
mov
jae
pop
cmpsb
in
fsubl
xchg
lret
insb
jae
shl
das
rep
jbe
dec
jmp
pusha
mov
test
out
leave
shl
pop
jg
or
xchg
das
int3
cmp
mov
xchg
push
iret
fs
mov
add
testb
cld
jg
das
xchg
push
jecxz
aas
ret
xchg
fisubrs
sub
sub
jns
int3
outsb
xor
popa
xchg
jno
pop
mov
test
jl
and
dec
mov
pop
mov
push
jmp
sub
xor
stos
jnp
data16
dec
mov
mov
push
pop
daa
pop
jg
or
push
cli
adc
shll
enter
ljmp
xor
sbb
pop
sti
mov
mov
dec
lret
into
push
cmp
nop
inc
test
aas
movsl
shr
or
fnstsw
adc
iret
add
push
lods
scas
pop
loope
and
shlb
mov
sbb
xchg
lock
popf
push
sbb
das
movsl
sbb
cltd
push
dec
add
and
dec
mov
jnp
popf
into
mov
pusha
or
test
sbb
mov
sub
jmp
adc
xchg
adc
push
mov
insb
sbb
or
je
and
arpl
out
aad
out
shrb
jnp
lds
popf
fxam
mov
cmp
xor
or
push
pop
or
scas
inc
cmp
push
mov
insl
sbb
cmp
movsl
cmpsl
in
dec
jle
inc
dec
sub
jl
mov
loope
test
push
mov
push
sbb
jbe
imul
xor
pop
dec
lea
sbb
pop
lcall
jb
sub
das
fistpll
scas
sbb
scas
nop
loop
cmpsb
add
lret
outsb
jo
jo
es
inc
or
jecxz
loop
jmp
ficoms
ficoms
cmp
pop
lods
xor
loope
test
mull
and
mov
andb
je
pop
scas
in
sbb
idivl
inc
test
add
jns
dec
fwait
insl
mov
movsl
rclb
fimull
jne
daa
sub
push
sub
imul
sbb
xchg
scas
or
out
jne
pop
lock
repnz
xchg
stos
aaa
lods
sbb
mov
movsb
aad
jp
sahf
arpl
push
inc
sbb
movl
mov
popa
das
or
hlt
add
sarl
cwtl
loop
cld
mov
roll
pop
push
mov
cli
jecxz
js
into
out
les
mov
dec
cmpsl
adc
jnp
ds
cmp
les
xor
les
adc
ds
cmp
mov
fistl
push
pop
sbb
mov
xor
out
and
pop
push
mov
inc
imul
pop
test
pop
and
cmp
icebp
jg
leave
xlat
idiv
jo
push
ds
add
rorl
xor
xchg
mov
ja
jg
jnp
and
or
sub
lds
lahf
cmpsl
mov
in
ss
shrl
lds
jno
dec
loopne
xor
jne
sti
shlb
cli
sub
inc
pop
syscall
cli
adc
incb
cmp
loope
das
sbb
ffree
or
cltd
or
in
dec
es
cmpsl
sub
xchg
loopne
push
adc
mov
sub
pop
push
icebp
in
adcl
inc
xchg
inc
addb
popa
mov
add
aas
push
pop
loope
xor
repz
icebp
xor
test
mov
addb
rep
push
jg
add
hlt
xchg
mov
fistps
shrb
fld
jae
mov
sbb
outsl
idivb
lcall
cmp
push
mov
sbb
imul
dec
pop
lret
sub
movsb
mov
add
xchg
sub
lahf
xchg
xlat
pop
push
or
mov
nop
mov
rol
push
popa
stos
std
mov
ret
out
out
loopne
dec
into
cmpsl
bnd
test
and
mov
mov
scas
or
mov
inc
stos
fcmovnbe
sub
xlat
pop
xchg
xor
rol
sub
mov
pop
mov
adc
out
call
jbe
repnz
inc
fstps
xchg
push
pushf
xlat
sbb
push
adc
dec
push
pop
push
adc
xchg
xchg
and
sbb
pop
cmp
outsl
test
dec
sbb
mov
sub
into
cmpsl
pop
imulb
cmp
cmp
and
outsb
lods
mov
clc
mov
pushf
leave
xchg
loop
icebp
or
pop
adc
lea
adc
add
jl
sub
jne
leave
pop
int3
arpl
add
lea
sub
xchg
xchg
fcmovnu
mov
adc
jmp
cmp
pushf
or
ror
das
sbb
test
mov
and
and
daa
inc
popa
outsb
hlt
movd
mov
incl
and
lds
mov
dec
sbb
sub
insb
andps
push
and
add
fcomi
sbb
jb
inc
xchg
and
mul
dec
cmpsl
xor
repnz
mov
jle
sub
test
or
je
cwtl
nop
push
add
cwtl
cltd
cmpsb
clc
outsl
dec
repnz
fs
mov
jp
imul
test
jge
adc
stc
testb
xor
lret
out
inc
mov
add
xchg
aam
jge
adc
lock
ds
or
stos
mov
push
xchg
sub
jo
and
adc
or
rcrl
pop
mov
cmpsb
pop
scas
push
test
sar
ja
nop
pop
mov
or
aam
scas
inc
insb
pop
lods
fs
lock
adc
stc
loop
or
mov
jge
push
sub
sti
lahf
stos
pop
mov
jge
and
out
or
test
jmp
pop
mov
pop
or
stos
mov
idivl
xlat
arpl
and
mov
mov
mov
ds
xor
sbb
cs
jo
inc
std
xor
fsub
xor
mov
cmp
in
shl
pop
jl
loopne
insl
push
andb
xchg
cli
out
xor
mov
sbb
xchg
pop
pop
rclb
imul
sub
and
pushl
ja
popa
inc
xchg
pop
js
loopne
ss
pop
xchg
sbb
cmp
mov
sbb
inc
movl
insl
repz
or
shrl
mov
lds
aad
pop
lea
sbb
add
add
pushf
js
lret
push
stos
or
and
mov
dec
cmp
rcll
pop
add
rclb
imul
shlb
fmuls
dec
mov
sub
fiadds
test
cmp
sub
add
mov
adc
ljmp
das
pop
push
xchg
scas
mov
and
mov
push
dec
fdivrl
mov
addr16
imul
sbbl
outsb
mov
push
push
shlb
fsubrp
push
mov
fsts
push
and
mov
inc
inc
pop
pop
or
mov
xor
insl
test
xchg
ret
aaa
sub
inc
jle
mov
es
mov
pop
das
jge
fnstcw
out
lds
mov
dec
das
mov
xchg
xchg
cmp
orb
sbb
dec
adc
ficoml
pop
in
negl
mov
pop
jo
jae
cld
inc
mov
jle
int
jne
xor
cmc
jb
xor
xchg
call
and
fimull
lcall
mov
mov
mov
xchg
xor
push
xchg
sahf
jmp
add
int
mov
and
add
jo
ljmp
inc
push
xchg
cmc
xchg
inc
rorb
push
sbb
movsl
cs
dec
sub
push
std
sub
out
out
cli
mov
stos
jmp
add
hlt
sub
mov
repz
add
fidivl
sbb
std
cs
cmp
push
or
xchg
out
loop
xor
bound
repnz
cld
dec
pop
test
sub
dec
cmpsb
scas
mov
add
movl
or
xor
push
adc
daa
pop
xor
inc
fnstsw
cmc
stc
pop
add
enter
cwtl
out
fsubr
jne
pop
push
mov
dec
aas
sbbb
cmp
cmp
adc
int
xchg
jmp
scas
dec
fistpl
leave
or
mov
xchg
lea
out
pop
aam
data16
ljmp
mov
icebp
mov
pop
sub
xchg
fadd
aas
or
push
aad
stc
sbb
push
jecxz
dec
out
shlb
aaa
das
pop
ffreep
mov
pop
push
sbb
sub
fdivrl
inc
jge
mul
insl
bound
xor
fwait
mov
cmp
jno
div
pop
adc
rcr
push
push
rcr
hlt
push
dec
push
or
or
insb
xchg
int
ljmp
pusha
fiadds
fcomps
fstps
pop
leave
jg
mov
mov
insl
xchg
nop
xor
rcr
or
shll
push
push
jmp
dec
xor
outsl
daa
out
push
out
xchg
xorl
andb
imul
arpl
shlb
mov
aam
addl
or
mov
in
cmc
adc
jl
pop
mov
mov
icebp
dec
fidivs
popf
popf
mov
cmp
out
xchg
sbb
cltd
jbe
mov
mov
insl
jbe
int3
lods
test
cmp
xor
xchg
push
scas
aad
and
ficomps
out
into
sub
mov
out
sub
imul
mov
cmp
outsb
ss
adc
in
addr16
xor
xor
sbb
lock
int3
lods
lahf
xchg
cmp
inc
loop
in
dec
in
sub
mov
xlat
jecxz
mov
bound
inc
movsb
pop
dec
adc
xchg
data16
sbb
mov
fnstsw
push
stos
std
fmuls
or
mov
sbb
add
sub
cmp
mov
xor
inc
push
xchg
xor
pop
adc
mov
pusha
add
lret
out
add
adcb
adc
xor
cmp
mov
in
dec
das
pop
mov
pop
mov
lcall
arpl
fwait
jb
aas
dec
push
xor
or
mov
in
xor
cmp
int
inc
cmpsl
and
xorb
jle
mov
daa
nop
lcall
mov
mov
add
jmp
insl
xchg
iret
bound
popf
and
cltd
ret
mov
xor
mov
sub
jnp
hlt
mov
repz
and
es
lcall
mov
inc
or
mov
and
dec
adc
inc
out
repnz
jne
mov
shrl
or
sahf
dec
and
pop
or
or
pop
xchg
mov
fstpl
fistpll
inc
cltd
and
bound
sbb
fimull
hlt
adc
imul
mov
xchg
out
pusha
out
sbb
add
pop
std
add
xchg
ss
sub
xor
popf
loop
mov
jge
das
fmuls
adc
jne
mov
sub
jae
cmp
notb
push
je
sub
xlat
mov
push
addr16
clc
scas
or
filds
mov
aaa
xlat
ljmp
or
std
cmp
xor
aam
cli
lock
mov
ljmp
mov
inc
repz
std
aaa
scas
ret
lea
flds
cmp
mov
gs
dec
dec
cwtl
push
nop
rorl
push
xor
fisttpll
out
add
flds
iret
lcall
xor
pop
ja
adc
cmp
jle
shll
mov
sbb
xlat
cltd
mov
mov
inc
mov
add
push
xor
notb
jp
mov
or
pop
cltd
out
cwtl
push
ret
push
sub
and
insl
dec
adc
sub
shlb
clc
in
mov
mov
push
cmp
ds
push
lods
fcomps
movsl
cmp
and
adcb
repz
repz
lods
xchg
xor
cwtl
push
xor
mov
mov
fistl
xchg
loopne
jmp
pop
filds
mov
sbb
sub
nop
mov
imul
mov
cmp
pop
push
xor
cwtl
xchg
sbb
repnz
fadds
xor
sbb
shr
mov
js
mov
xchg
adcl
out
inc
xchg
aaa
or
lds
pop
loope
aas
or
cmpsb
mov
or
fistpll
imul
movsb
cld
imul
test
bnd
mov
jns
pushl
push
adcl
sub
xor
insb
shlb
mov
test
lahf
out
lds
sti
xchg
mov
out
movsl
push
mov
or
inc
pop
add
stc
mov
nop
outsb
cltd
xor
call
xor
movb
fwait
dec
pop
nop
int3
mov
or
mov
bound
clc
mov
lret
cmc
mov
and
jb
std
mov
mov
call
mov
or
push
das
pop
imul
cmp
and
dec
xlat
xchg
sti
leave
sub
xchg
fsubrl
add
and
mov
push
add
inc
inc
or
in
adc
jecxz
adc
fdiv
aad
xchg
pop
jae
outsl
add
stc
insl
out
cmp
iret
push
int3
outsl
xchg
cwtl
movsl
push
int3
pop
inc
or
neg
jp
fwait
in
add
sbbb
std
lret
mov
call
hlt
mov
inc
mov
and
xchg
mov
pop
sbb
xchg
push
int3
imul
dec
iret
jmp
out
add
and
je
pop
ja
sbb
adc
int
rorl
popa
and
scas
cmp
sub
add
in
sub
pop
sbb
iret
mov
pop
mov
sbb
jno
decl
mov
xorb
push
pop
imul
pop
push
aas
insb
adc
jno
push
arpl
push
jnp
ret
mov
sub
and
sbb
jp
out
icebp
xor
or
mov
pop
loop
mov
mov
test
fincstp
lods
out
mov
add
cmovg
mov
test
js
jecxz
mov
sub
pop
nop
xchg
mov
roll
sbb
lcall
js
inc
out
dec
and
mov
into
sbb
out
int
incb
pushf
icebp
daa
mov
jbe
sar
xchg
pop
or
cmc
jo
adc
dec
repz
test
sbb
insl
ret
add
lock
loope
mov
repnz
in
das
sbb
sub
push
add
hlt
sbb
out
popf
insb
mov
xchg
mov
add
das
pop
cmp
push
inc
addr16
jle
pop
and
filds
outsb
nop
adc
fsubrl
inc
ret
xchg
lahf
out
or
stc
out
or
popf
xchg
std
in
arpl
pop
and
jecxz
inc
stos
lret
fmull
cwtl
push
or
lahf
mov
lods
mov
scas
add
sbb
fstpl
push
push
mov
fisttps
cmpsl
jmp
mov
jecxz
das
inc
shrl
mov
sbb
stos
mov
xchg
js
lcall
jecxz
negb
into
in
jmp
cmp
mov
push
std
sub
push
stos
cmp
mov
or
add
xchg
call
sub
jo
or
lret
sub
or
dec
mov
xchg
cmp
pusha
imul
xchg
clc
arpl
mov
mov
inc
aaa
fistl
push
mov
test
das
data16
loopne
notb
jl
sbb
sub
push
loopne
inc
jmp
pop
pushw
iret
xor
jle
imul
js
cmpb
or
mov
or
dec
dec
cmc
pushf
and
pop
xorb
fwait
testb
mov
inc
stos
adc
or
icebp
ret
loop
mov
shl
adcl
in
and
mov
cld
push
add
lods
jae
popa
dec
addr16
lret
push
lea
inc
je
in
fwait
and
gs
mov
mov
scas
mov
addr16
xor
jae
je
mov
dec
fidivl
lcall
sbb
lret
jp
dec
popf
cwtl
pop
shll
mov
cmp
cmp
xchg
xchg
nop
dec
fwait
dec
mov
fidivs
mov
jg
testb
stos
je
fiadds
loopne
sub
ficoml
lret
out
pop
popa
mov
xchg
adc
and
stos
fs
inc
cmp
mov
jp
les
lahf
and
nop
pop
arpl
mov
mov
shll
dec
div
inc
jne
popa
inc
and
in
fidivs
and
push
lods
test
sub
clc
int3
pusha
mov
inc
roll
daa
xchg
sbb
lea
push
mov
cmp
shll
adc
mov
fdivl
test
cmp
adc
inc
dec
inc
mov
pusha
cld
push
sbb
scas
cwtl
xor
out
jl
and
bound
shl
int3
adc
mov
mov
pop
call
gs
stc
xchg
test
push
insb
mov
mov
inc
cli
cmp
sti
mov
mov
mov
int
mov
out
fcmovnb
inc
jbe
decb
mov
push
loop
test
and
jl
rcll
push
in
lcall
sbb
push
push
mov
nop
sbbl
test
push
ljmp
mov
lods
pop
fimuls
in
movsl
sahf
outsb
xchg
pop
add
xor
add
add
sub
cwtl
lods
decb
cmp
lea
dec
leave
clc
aas
rcl
and
xlat
fmuls
repz
sub
jmp
xchg
rorb
icebp
int3
lcall
adcl
out
xor
fucomip
inc
mov
mov
mov
mov
ret
or
cmp
int3
pop
sti
xor
mov
insb
lock
xchg
shll
in
push
scas
mov
mov
out
lods
add
xchg
rorb
jge
xchg
cld
shl
cmp
jo
add
inc
popf
pop
xchg
clc
test
mov
xchg
ja
xchg
cmp
imul
mov
stos
lahf
mov
adc
jmp
lds
inc
push
or
sub
je
fildll
xchg
pop
outsb
ss
in
inc
sub
ds
cltd
xor
cmp
xchg
jmp
push
mov
jne
loop
push
sbb
jb
jl
popf
xchg
or
lret
mov
sub
jg
pop
test
jbe
out
popa
out
pmaxsw
sbb
xor
insl
lock
xchg
outsl
xchg
xor
adc
loop
outsl
cmp
push
push
outsl
and
cmp
pusha
mov
cmc
mov
cmp
jne
iret
fnstsw
rorb
test
push
push
movsl
addr16
sbb
sbb
ret
lods
out
dec
fists
mov
pop
outsb
fs
es
fdivrl
gs
xor
push
popa
cmc
icebp
test
lmsw
inc
stos
fs
popf
popa
cs
push
xchg
outsl
add
adc
xchg
enter
mov
lods
jmp
mov
jmp
fcompl
add
scas
push
mov
lret
movsb
data16
push
leave
in
sbb
mov
xchg
cmpb
pop
sub
xor
sub
std
les
lds
sbb
mov
popa
lcall
bound
lea
cmp
cmpsl
fs
sub
bound
faddl
clc
xor
xchg
or
lock
ljmp
inc
aad
push
jmp
pop
sbbl
xchg
ja
or
fidivrl
sbbl
cmpsl
add
sbb
mov
imul
lods
movsb
cmp
data16
in
rcll
ljmp
push
inc
les
dec
push
sbb
mov
cwtl
movsb
inc
or
das
int
mov
shlb
push
test
loop
jecxz
inc
dec
ds
dec
ret
in
push
imulb
jmp
xor
shrb
loop
add
or
pop
xor
fwait
push
xchg
fwait
shl
clc
xor
cwtl
stc
lds
xor
xlat
mov
and
hlt
jmp
out
adc
xor
adc
lret
push
sub
jecxz
sbb
aas
lahf
jp
addr16
dec
inc
in
arpl
int3
fiaddl
js
fnstsw
xorb
daa
dec
js
popa
push
hlt
mov
and
add
std
aad
dec
mov
fs
adc
cmp
mov
mov
stos
das
cmp
orb
cltd
and
cmpl
adc
cli
roll
repz
popf
mov
or
imul
repnz
lock
dec
add
add
xlat
pusha
pop
data16
mov
lods
mov
cli
imul
addr16
jns
pusha
ljmp
jl
ljmp
cmpsl
mov
fwait
xchg
add
push
cmp
add
dec
in
cmpsl
rep
in
pop
cli
dec
and
fildll
jb
jmp
jge
test
mov
mov
and
jmp
dec
jbe
inc
or
xlat
aaa
in
pop
outsb
dec
bound
adc
int
xlat
imul
jecxz
cmovp
jecxz
jmp
ss
push
pusha
sti
cmp
and
xlat
dec
ja
repnz
je
pop
loope
icebp
push
clc
cmc
mov
push
or
daa
sub
test
imul
shrb
mov
iret
adc
test
mov
add
aaa
lret
into
aad
imul
cmpsb
cwtl
dec
xchg
out
inc
push
ror
xchg
aaa
iret
fmuls
dec
jae
lea
mov
jecxz
inc
push
dec
push
into
add
arpl
sarl
mov
out
fcmovnb
sbb
jno
xor
mov
cmp
and
xchg
mov
push
fidivrl
jg
movsb
lret
pop
sub
je
jns
and
xor
mov
icebp
push
and
mov
push
mov
js
in
mov
ret
call
test
leave
mov
cmp
and
lods
mov
cmc
cli
push
dec
cmpsb
cmp
xchg
add
dec
push
jne
push
gs
sbb
cmpsb
filds
mov
jns
xlat
inc
jno
lret
aam
adc
aad
cld
xor
outsl
popf
jno
out
int3
aam
daa
lcall
repnz
sar
sahf
dec
pop
lods
inc
mov
pop
cs
and
arpl
in
mov
mov
sbb
lahf
mov
inc
dec
sbb
lods
sbb
test
movsl
fcoms
adc
lret
adc
push
xor
mov
movsl
jae
cwtl
pop
pop
int
add
mov
cmp
and
fyl2xp1
es
push
sarb
cli
pop
inc
rcrb
repz
sub
les
adc
fcompl
pop
add
mov
ret
lds
push
and
pop
std
ret
sub
jge
jns
insl
cmp
dec
sub
aaa
dec
shrl
sbb
es
sub
insl
and
and
shrb
out
pop
sub
fcomi
shl
xchg
insb
out
aas
scas
xchg
or
les
punpckhbw
inc
push
cmp
insb
adc
jl
or
jl
ret
repnz
psraw
dec
fistl
xor
push
insb
pop
lcall
gs
in
sbb
sub
fstpt
iret
mov
jmp
push
or
dec
push
js
repnz
or
or
cwtl
xchg
adc
push
xchg
pop
sub
mov
push
sbb
mov
idiv
test
mov
jo
insb
push
mov
inc
mov
hlt
je
outsl
loopne
jle
sub
sub
mov
push
hlt
int
xor
and
gs
jle
xchg
pop
mov
add
sub
inc
inc
loop
stos
cmp
icebp
lret
pop
lcall
movsl
in
insl
mov
test
ja
xor
je
sbbl
pop
cmp
push
divl
jl
in
jmp
rcll
cmc
xchg
mov
incl
xchg
ljmp
daa
andl
xor
cmpsb
push
clc
mov
popa
mov
adc
push
ds
xor
xor
fsubrs
mov
push
or
dec
das
or
rep
pop
pushf
sub
mov
js
inc
imulb
pop
push
dec
adc
cmpsl
inc
ss
jns
mov
add
cmp
mov
cmpsl
repnz
hlt
inc
mov
jl
add
inc
aaa
add
movsb
into
jns
lods
mov
mov
loope
jg
cli
sub
or
pop
lret
inc
mov
mov
adc
neg
and
sbb
lock
mov
aas
adc
cwtl
pop
sub
xor
xor
out
stc
subl
jnp
test
testb
shr
mov
jb
xchg
sbb
out
push
stc
mov
adc
mov
sbbb
xor
mov
dec
rorb
testb
push
xchg
jle
shlb
sub
lods
inc
mov
aad
leave
mull
adc
aas
xchg
into
out
cmp
mov
arpl
xor
mov
ficoml
dec
or
inc
leave
or
or
test
mov
fwait
or
pushf
fs
sub
sbb
mov
or
rorb
xchg
pop
jo
push
loope
jnp
mov
test
dec
movsl
repnz
dec
int3
xor
daa
and
inc
xchg
cmp
lahf
and
insl
xor
jecxz
mov
pop
pop
xchg
add
jp
xchg
pop
int3
xor
add
push
jmp
mov
stc
imul
imul
xor
pushw
je
pmullw
cmp
out
comiss
xor
or
and
sahf
clc
cmc
sti
jbe
ljmp
cmp
sbb
mov
inc
jo
inc
std
insb
add
cmp
test
jl
ficompl
or
mov
leave
and
or
sub
iret
push
sub
aam
xor
mov
jbe
outsl
adc
out
cmpsl
xchg
sbb
out
fadds
jg
mov
mov
push
out
cmc
shlb
mov
cwtl
sbb
mov
stos
cmpsw
dec
icebp
lahf
insb
sahf
andb
sub
mov
call
xor
xor
mov
icebp
cwtl
filds
lds
loopne
push
out
and
aas
leave
lea
cmc
and
ja
outsb
jl
jp
push
mov
push
loope
pop
mov
shl
cmp
ret
cmp
cmp
sti
lods
aad
xchg
testb
sahf
negb
sarl
sbb
into
sbb
sbb
fiadds
shll
popa
fs
cs
adc
and
sbb
mov
out
orl
stos
lock
ss
sbb
sbb
add
js
jge
push
jg
pop
and
in
scas
js
and
and
cli
xor
jb
in
mov
mov
sar
movsb
outsl
inc
xchg
sarl
dec
sahf
xor
jge
lcall
and
push
pop
jp
enter
leave
repnz
vmwrite
stos
push
mov
push
xchg
jne
sub
lods
cltd
ret
aas
arpl
repnz
add
lds
fcoml
insb
xor
lret
fst
and
mov
lds
push
jle
sahf
lret
popf
xor
push
in
inc
ficoml
push
arpl
repz
mov
adc
sub
aam
mulb
stos
int3
xor
insb
adc
sbb
inc
inc
icebp
sbb
outsl
push
push
test
lea
movsb
popf
add
inc
add
in
xchg
push
movb
push
in
movsl
xlat
pop
mov
inc
mov
adc
nop
lods
mov
xchg
ja
mov
mov
xor
xchg
mov
mov
pop
dec
stos
mov
clc
out
cmpsl
pandn
adc
pop
mov
lahf
fidivrl
jo
in
push
xchg
sbb
pop
cmp
data16
mov
pop
stos
nop
loopne
ret
push
jbe
inc
es
or
test
xchg
mov
insb
mov
xchg
ds
inc
in
stos
bound
sub
pop
repz
jmp
cmp
dec
jp
popa
mov
dec
mov
imul
cmpsl
insb
inc
stos
fstl
ret
scas
inc
scas
out
cli
je
js
push
jle
je
dec
dec
cmovp
jle
inc
popa
test
das
out
repz
cwtl
push
push
mov
jecxz
or
or
xchg
fcom
outsb
aas
movsl
and
das
sub
pop
stos
xchg
cmpb
sub
clc
movb
icebp
sub
test
adc
jo
pop
lahf
shll
idivl
cmp
and
pop
mov
fwait
arpl
mov
sarl
stos
repz
sub
std
iret
std
fnsave
sbb
mov
push
cmpsl
mov
add
leave
xchg
in
add
sub
cmp
sbbl
out
popa
out
sbb
inc
cmpl
fsts
fwait
add
push
lds
sbb
mov
mov
cmp
and
in
pop
cmpsl
scas
int3
fistps
xchg
scas
jmp
adc
push
cli
jge
pop
jo
pop
sub
and
xor
fisttpl
jno
hlt
vmovaps
shlb
out
rcrb
xor
lock
aad
fisubl
xchg
jl
aas
inc
jecxz
pop
pop
cmc
or
ja
adc
out
addr16
pushf
fldcw
mov
or
movsb
les
sbb
das
out
xchg
iret
icebp
xchg
addr16
movsb
inc
sbb
lock
xchg
push
leave
das
and
cmp
rclb
xchg
add
cli
pop
test
out
mov
sbb
mov
push
movsb
xchg
xchg
mov
mov
sbb
js
cmpsl
dec
xchg
mov
lret
enter
mov
aad
inc
outsb
addb
inc
inc
mov
inc
jne
pop
push
sub
aam
add
je
movsl
lahf
out
xor
jmp
int
sbb
std
insb
vrsqrtps
inc
dec
addr16
hlt
iret
neg
in
scas
fcomp
pusha
cwtl
scas
xor
mov
pop
dec
mov
scas
ret
dec
fucomi
adc
test
lret
outsb
sbb
cwtl
stos
mov
add
mov
jmp
mov
rorb
xchg
aam
jle
or
or
and
vmread
dec
pop
in
xlat
pop
out
inc
iret
jge
pop
scas
outsb
push
jmp
call
adc
decb
xor
or
in
push
out
push
sub
outsl
mov
xchg
cld
rcll
or
dec
mov
jecxz
fildll
xor
xorl
jbe
mov
mov
or
rclb
lahf
mov
in
hlt
xchg
lcall
xchg
xor
orl
and
mov
sub
xor
sarb
clc
mov
xchg
je
jae
loope
mov
gs
jmp
insl
jle
daa
cmp
xlat
jno
in
jo
xchg
std
test
arpl
inc
push
inc
pop
sub
fisttpll
movsl
dec
jno
fs
jg
xor
in
sub
mov
test
mov
pop
in
or
adc
cmp
adc
jo
icebp
push
cmpb
inc
push
cli
mov
push
push
jmp
loop
das
dec
dec
mov
inc
loope
testb
divl
ss
mov
cmpsl
mov
iret
aas
mov
dec
pop
stos
mov
imul
xorb
jnp
sub
sbb
mov
iret
push
add
and
sti
out
cmp
push
sbb
mov
cmp
lods
inc
xchg
ret
push
stos
lahf
je
nop
or
adc
sub
mov
setno
pop
lcall
fwait
sbb
loop
cmp
pusha
ffree
movsb
inc
ljmp
and
dec
sahf
xor
dec
jnp
out
dec
adc
aad
test
or
push
sahf
and
push
inc
test
add
xor
mov
xchg
jmp
mov
and
push
mov
les
cmp
xchg
pop
out
xor
js
aam
in
pop
dec
add
aam
stos
call
repz
adc
je
xlat
mov
data16
imul
fnsave
insl
adc
pop
cmp
mov
imul
xchg
addr16
js
xchg
imul
mov
xlat
out
shlb
push
dec
fsubrl
fdiv
sbb
and
test
scas
ret
mov
adc
dec
push
in
xor
loop
add
cli
cmp
mov
mov
loopne
test
adc
mov
leave
cwtl
jp
imul
test
lods
stos
stc
lahf
sbb
fidivrl
mov
test
sbb
sbb
jl,pt
pop
data16
fistpll
xor
xchg
sbb
push
and
call
int3
imul
jmp
sub
into
jecxz
cmp
out
jmp
push
mov
mov
ret
adc
test
jns
sahf
and
dec
iret
xchg
jnp
enter
adc
mov
ss
pop
jecxz
out
sub
adc
mov
ret
imul
lret
std
or
dec
test
pop
cmp
mov
jb
and
push
push
ret
xchg
stos
pop
daa
aam
xchg
cmc
lds
jp
in
dec
mov
dec
inc
sahf
adc
lods
dec
call
mov
push
push
aad
scas
gs
mov
popa
or
cs
popf
loope
arpl
inc
fimull
cmpps
scas
notl
xchg
cld
pop
stc
and
add
sbb
cmc
fistpl
shrl
push
fs
add
pop
mov
cmpsl
fsts
push
dec
sbb
inc
hlt
shlb
loopne
enter
dec
je
xor
aam
pop
pop
jae
movsl
movsb
sarb
mov
sbb
mov
push
fsubr
jns
into
std
jbe
stos
aad
loop
pop
or
add
cmp
cmc
idivb
subl
mov
in
sbb
pop
arpl
outsb
in
mov
ja
mov
sbb
push
jb
stos
leave
sti
daa
icebp
ret
pop
incl
fnsave
test
push
sub
pop
lahf
or
fwait
icebp
outsl
not
sbb
sbb
push
into
les
pop
push
add
mov
jge
addb
lcall
mov
mov
outsb
push
fs
inc
adc
jo
and
add
xor
lahf
fdivl
push
imul
jno
adc
jp
rcrb
pop
jo
mov
xchg
and
leave
std
dec
repnz
clts
movsl
lock
das
mov
xchg
and
dec
push
pop
sahf
das
jge
adc
or
cmc
or
push
or
pop
fiadds
jb
pushf
push
xchg
das
aam
fwait
repnz
adc
xor
xchg
inc
lret
xor
and
push
fsts
ss
dec
inc
fcoml
scas
inc
mov
sub
mov
inc
xchg
pusha
sbbl
or
repnz
push
lea
lcall
adc
dec
adc
std
insl
outsb
ss
push
xor
aad
sahf
and
mov
fldcw
add
gs
std
lea
lret
sarb
in
pushf
push
in
push
mov
xor
sub
adc
push
cs
mov
sub
adc
movsb
add
push
mov
testl
dec
dec
outsb
scas
loopne
xchg
addr16
sar
imull
call
jmp
dec
hlt
mov
les
push
lahf
call
out
adc
repz
iret
imul
and
pop
orl
push
jne
leave
movsl
stos
xor
into
out
xchg
pop
ficomps
mov
lods
xor
xor
sarl
xchg
jp
pop
mov
mov
push
fbld
cmp
orb
or
std
imul
pop
xchg
out
in
mov
test
sbb
mov
and
xchg
test
movsb
push
clc
lods
lret
jp
pusha
into
arpl
and
add
xchg
scas
mov
stos
pop
cld
scas
mov
mov
pusha
in
je
mov
jl
lods
push
and
cmp
es
lea
add
and
imul
cmpsl
add
push
pop
mov
out
jne
cmpsl
adc
shlb
sahf
test
xchg
mov
jbe
loope
push
add
push
push
push
add
iret
jg
sbb
jns
fmulp
mov
jecxz
imul
pusha
sbb
jmp
cmp
sub
sub
mov
lcall
xchg
ja
in
fs
insb
clc
mov
add
mov
or
dec
adcb
es
sub
or
cmp
cwtl
hlt
push
jmp
cmp
mov
movsb
push
loop
insb
or
jmp
mov
or
push
or
fcoml
jl
sub
pop
xlat
cld
mov
push
jp
bound
stos
adc
push
addr16
scas
sbb
mov
pushf
shlb
adc
push
loope
mov
inc
adc
ja
inc
xchg
cwtl
mov
mov
test
push
shlb
xchg
dec
mov
sub
jae
mov
mov
jbe
xor
add
mov
dec
icebp
xchg
rcll
int
pop
push
fs
loop
xchg
mov
ss
mov
arpl
int3
divl
insl
aad
imul
and
pop
adc
into
popf
jmp
push
xchg
ja
push
add
sarl
push
cmp
jmp
xor
push
ret
xor
cmp
outsb
jecxz
pop
hlt
popa
jo
xchg
dec
xlat
cmc
sti
xchg
frstor
mov
repz
mov
stos
pop
addr16
sbb
and
lock
orb
bound
sti
xchg
test
pop
cltd
cmp
in
jge
jl
fsubr
cmp
adc
icebp
push
adcl
inc
shlb
in
in
mov
pop
and
stos
lods
sbb
pop
fdiv
push
sub
and
inc
out
push
push
je
cwtl
adcl
dec
push
xor
push
dec
cmp
pop
adc
inc
or
mov
out
out
add
jbe
popa
dec
or
movsb
in
push
adc
lret
test
ret
jbe
sbb
add
pop
lcall
pop
pop
sbb
xchg
xchg
mov
jo
xor
cmp
xor
cli
push
and
jmp
scas
cmp
stc
sar
push
in
inc
mov
push
les
and
rcrb
sbb
sbb
lret
push
insl
mov
out
scas
cwtl
sbb
adcb
jg
sbb
jg
cmp
xor
jge
cmpsb
inc
bound
sub
jecxz
std
and
dec
shrl
xchg
xchg
sub
lds
mov
inc
jbe
decb
js
or
shll
int
xchg
push
sub
jp
insl
ljmp
stos
pop
rcr
shl
cmpsl
push
fistl
and
sbb
lretw
jnp
outsl
and
jecxz
add
ja
xchg
add
pop
sbb
jno
jg
lods
inc
aad
xor
in
push
movaps
rolb
lods
mov
push
sbb
ret
fsts
rclb
xchg
stos
xor
add
or
mov
in
mov
shll
dec
xchg
jnp
rorb
cmp
fmull
sub
lcall
bound
mov
stos
call
mov
pop
sub
xchg
dec
sti
adc
adc
add
xor
in
adc
lods
xchg
jo
jo
sahf
sub
xor
mov
and
dec
adc
jnp
cmpsb
dec
dec
shlb
sub
out
push
sarb
push
add
push
xor
mov
xchg
cmpsb
add
sbb
je
dec
inc
leave
rcll
scas
xor
pop
adc
shll
mov
cmp
cmc
stc
cmp
pushf
adc
cmpsb
pushf
mov
stc
mov
or
ficoml
in
popa
les
ja
inc
add
sbb
jmp
xchg
imul
test
jle
aaa
xchg
imul
push
dec
xchg
inc
xor
jg
insb
jecxz
test
xchg
sahf
cmp
pop
pop
shrl
adc
fistpl
adc
stos
lds
dec
jae
inc
mov
repnz
xchg
scas
sbb
fs
movsb
stos
push
sbbl
mov
inc
xchg
test
loope
adc
mov
or
cli
and
nop
lret
lds
std
xchg
adcl
mov
sub
movsw
in
adc
shrl
and
cmp
das
fstps
pop
lds
jno
movsl
adc
cltd
pop
xchg
mov
mov
mov
jns,pt
mov
ljmp
pushf
cmp
mov
ja
mov
mov
mov
jno,pt
in
sub
mov
cmpsl
jns
fcom
iret
les
sbb
imul
xor
fs
mov
sub
xor
adcb
dec
xchg
xlat
jmp
pop
hlt
inc
mov
xor
js
sub
sub
ja
sub
mov
mov
and
sahf
in
pushf
cmp
lcall
mov
ret
pop
xchg
enter
xchg
in
pushl
mov
pusha
jbe
sub
xor
xchg
push
movsl
cli
add
negb
mov
xor
lcall
fisubl
push
add
movsl
jle
dec
cmpsb
pop
movsl
frstor
adc
mov
scas
add
or
mov
ljmp
imul
jl
movsl
popa
fistl
and
out
lods
sbb
dec
mov
cmpsb
insl
adc
pop
sbb
hlt
or
cmp
xchg
out
es
fs
or
movsl
pop
adc
and
xchg
outsl
std
repz
mov
addr16
stos
fnstsw
dec
pop
adc
sbb
movsl
mov
xchg
sbb
xchg
sub
hlt
lods
jo
mov
push
stos
inc
cmp
adc
sahf
shrb
adc
cmp
adc
ljmp
inc
and
rcrl
push
jno
jae
addr16
push
xchg
scas
call
mov
cmp
adc
sub
dec
dec
sti
and
pop
cwtl
jb
sbb
add
mov
rcl
aad
xchg
cwtl
lahf
adc
ds
fbstp
mov
aas
dec
mov
xorb
jbe
mov
fwait
xlat
or
dec
xor
test
popf
mov
fldl
outsb
bound
mov
cs
into
xchg
std
add
mov
inc
xor
mov
push
jge
lret
nop
lock
out
fucomp
int
inc
stos
cmp
mov
pop
iret
mov
pushl
mov
dec
xor
loope
subb
js
outsb
dec
div
out
aad
sti
add
test
movsl
sub
cmc
xor
sub
outsb
arpl
push
dec
push
test
pop
adc
ljmp
dec
aaa
jnp
shl
push
into
add
cwtl
iret
mov
aam
dec
adc
inc
in
mov
pop
les
rol
push
cltd
jg
lock
cmpsb
dec
push
push
mov
xchg
sti
xchg
adcb
xor
fs
outsb
sub
pushf
push
repnz
and
mov
icebp
and
jns
xor
jp
loopne
jnp
iret
jg
adc
jge
mov
cmp
mov
fdivr
add
out
mov
lret
movsb
mov
xor
aad
or
fwait
xchg
mov
int
scas
sbb
fidivl
lds
aas
sarb
cmc
pop
inc
pusha
and
jbe
in
loop
inc
cmp
mov
push
xor
inc
ljmp
pop
dec
arpl
int
sahf
add
mov
mov
mov
inc
adc
sbbb
push
cmp
cmp
inc
xchg
xchg
leave
xor
mov
adc
jmp
push
shlb
daa
ja
sbb
sbb
mov
pop
or
cltd
xchg
cwtl
call
jne
mov
mov
adc
inc
mov
dec
cmpsl
xchg
dec
icebp
xchg
rcll
mov
pop
adc
js
in
jae
pop
test
jge
jle
addl
lods
sub
jne
je
xor
rclb
lock
cmc
and
sbb
cmp
sbb
aas
mov
xchg
cwtl
cmp
xchg
test
and
push
mov
aad
push
mov
xor
pop
pop
mov
mov
aaa
add
enter
ss
lods
cmp
xor
push
mov
sbb
js
fldenv
push
or
xchg
std
mov
int3
mov
jno
in
push
test
mov
mov
stos
imul
add
cmp
cmp
imul
test
inc
pop
scas
cltd
cmp
icebp
sub
mov
pop
mov
jne
jmp
cmpl
out
xchg
push
ss
daa
lcall
arpl
mov
inc
stos
icebp
les
add
xchg
jl
incl
xchg
jl
mov
call
sub
cmp
mov
lods
fsqrt
ret
ficoms
orl
ret
lds
icebp
mov
fmull
rcrl
and
arpl
inc
sub
lods
cld
push
or
xor
sbb
mov
xchg
nop
sub
mov
int3
ficompl
xchg
cmc
jge
cmp
pushf
xor
sub
push
mov
adc
xchg
adc
out
jne
rolb
lcall
rorl
fs
mov
sub
pop
jmp
hlt
mov
gs
test
fistps
jno
pop
adc
loop
jmp
mov
and
jp
fbld
ret
jecxz
out
popf
push
cmc
pop
jecxz
xchg
cwtl
inc
xor
jb
ss
pop
xchg
inc
or
pop
into
addr16
xor
add
call
movsb
cld
adc
inc
sbb
adc
inc
mov
insl
jmp
repz
adc
pop
cmc
cs
imul
ja
xor
fadd
push
mov
insb
xlat
jmp
cmc
mov
loop
mov
and
push
push
push
sbb
xchg
jne
push
xor
test
pop
push
ret
xchg
mov
mov
leave
or
push
sbb
aas
mov
pusha
sbb
in
adc
mov
sbb
jg
inc
imul
push
incl
cmp
push
pop
in
cwtl
rorb
push
mov
pop
or
push
mov
cmp
insl
or
loopne
shrl
jae
sub
xchg
leave
mov
xchg
cmpsb
test
cmp
sti
and
pop
in
mov
xor
cmc
add
jnp
inc
sub
and
leave
mov
repnz
and
cwtl
scas
pandn
js
imul
xor
push
testl
add
dec
push
lods
rolb
jle
leave
jge
lds
jmp
pusha
shll
push
lret
pop
int3
loopne
dec
jno
push
call
mov
les
mov
out
pop
ds
adc
int
xchg
aas
xchg
iret
cmp
sub
add
out
outsl
out
insb
mov
or
nop
and
stc
mov
adc
and
in
dec
jbe
int
dec
in
xchg
outsb
mov
loope
sbb
ret
dec
loop
cltd
jns
adcb
add
rcl
insb
aam
and
mov
test
xlat
rcrb
cmp
dec
push
and
hlt
movsl
push
cltd
pop
lock
imul
lock
stos
push
pop
and
loop
add
mov
loope
add
dec
add
ret
repz
sbb
push
mov
fdiv
push
in
fsubrl
xorl
add
loopne
insb
push
into
cwtd
mov
loopne
daa
pop
mov
mov
mov
sub
popa
pop
arpl
dec
data16
out
pop
nop
mov
in
jne
add
sbb
fcompl
lds
jl
and
lea
mov
pop
mov
lcall
sub
add
in
pop
jno
push
hlt
fistpl
in
mov
or
jo
aas
push
cmpsl
cltd
dec
xor
mov
pusha
clc
add
enter
dec
adc
add
inc
mov
dec
mov
jle
adc
dec
cmp
out
sub
verw
or
push
inc
adc
mov
sub
js
in
sub
das
enter
xor
xchg
jns
idivb
push
insb
mov
aad
push
loop
fisubl
and
fcompl
and
xchg
mov
cmpsl
cli
stos
js
out
dec
push
aaa
jbe
push
movsb
stos
iret
cmc
fnstsw
shl
lahf
mov
lcall
loope
mov
and
and
mov
or
inc
scas
cld
sub
loop
sub
adc
stc
xchg
adc
lea
push
xor
and
mov
test
cmp
jp
inc
dec
shl
fcoms
ljmp
and
push
mov
outsb
push
iret
and
rorl
outsl
lods
sbb
mov
and
rcrl
sub
movsl
mov
sub
cmpsb
xchg
adcl
xchg
or
jp
cmpsb
out
test
cwtl
pop
sarb
push
lock
push
dec
inc
shll
cld
lods
ret
insl
in
add
call
pop
mov
adc
outsb
xchg
sbb
pop
ret
data16
mov
or
and
xor
pop
adc
pop
insb
xchg
or
cld
pop
cmp
daa
xchg
push
cmp
pop
push
leave
sahf
jo
outsl
test
cld
daa
nop
sub
inc
xorb
sbb
js
ffreep
addl
sbb
lds
pop
dec
jmp
lds
out
pop
mov
in
bound
hlt
negl
and
sti
xor
scas
pop
cmp
mov
sub
lahf
inc
loop
insl
xchg
lcall
in
xchg
imul
mov
xor
mov
push
sub
mov
xchg
jae
push
sbb
cltd
icebp
nop
mov
pop
jecxz
in
sahf
cmp
and
enter
cmc
test
xor
xchg
js
out
aaa
out
out
cmp
mov
pop
inc
xlat
andb
mov
push
add
adc
stos
lea
mov
or
adc
fnstenv
cmp
into
dec
xor
adc
pop
sbb
pop
xor
in
dec
inc
mov
jne
insb
sbb
and
call
xor
ja
ficomps
pop
in
les
in
xchg
lret
push
dec
cmpsl
es
pusha
sbb
ljmp
fnop
add
or
and
int3
popa
push
inc
call
mov
pop
dec
jae
pop
je
cmp
ds
mov
xlat
cmc
jmp
xchg
inc
push
cmpsl
jl
je
xchg
pop
fsubp
jp
icebp
js
fwait
mov
and
repz
mov
sbb
and
xchg
dec
loopne
in
sbb
jb
dec
jne
sbb
daa
push
aam
cmp
dec
adc
jl
or
mov
cmpsl
push
push
mov
mov
jno
leave
pop
insl
pop
jbe
cmp
sbb
mov
mov
xchg
xor
adc
and
inc
jp
out
aam
enter
andb
jnp
imul
leave
test
jb
push
xor
ss
jno
adc
mov
pushf
cmpsb
pop
push
cli
scas
add
mov
call
out
add
popa
mov
faddl
int
lcall
je
int3
add
ss
xchg
cmp
sbb
das
adc
adc
xor
test
aad
sub
push
imul
sar
addr16
adc
jecxz
outsl
and
sbb
mov
push
shl
subb
jno
shll
or
xchg
js
rorb
add
cmp
inc
xchg
mov
add
out
jp
je
cli
push
inc
lods
roll
arpl
add
fwait
nop
pop
add
out
inc
hlt
sbb
out
cmp
loopne
aas
jbe
jbe
push
xchg
aaa
inc
aas
testb
dec
cld
das
mov
push
lods
cli
mov
clc
jge
scas
mov
jp
jnp
cmp
insb
push
addr16
xchg
jg
push
mov
and
add
mov
pop
push
and
sub
add
cmc
aas
mov
lret
aad
dec
xor
stos
cmp
jp
fwait
faddl
cmp
xlat
aas
lds
xchg
jb
movsl
sarb
xchg
movsl
subb
inc
xchg
in
shlb
mov
loop
xchg
dec
sub
les
xchg
ror
sahf
mov
and
es
in
sub
mov
cmp
fwait
sahf
sbb
jmp
add
sbb
adc
jae
pop
popl
mov
xchg
lods
sbbl
icebp
add
cmovge
fst
or
push
jne
xlat
mov
push
repz
bound
outsl
sbb
lock
adc
xor
jl
xchg
in
arpl
mov
movsb
xor
adc
xchg
mov
and
cmpsl
adc
rcr
pop
inc
adc
push
ficoml
mov
test
fistps
cmc
dec
sbb
sbb
aas
push
icebp
pop
mov
lret
inc
inc
cld
xchg
jbe
addr16
adc
cmp
mov
pusha
or
adc
test
int
mov
movsl
stc
enter
stc
stc
pop
sahf
rorl
clc
cmp
dec
loopne
adc
out
dec
jnp
std
js
mov
push
in
push
imull
jecxz
dec
or
mov
inc
xor
popf
inc
scas
mov
imul
fldcw
or
das
fimull
dec
push
cwtl
mov
inc
bound
loop
pusha
jo
mov
cmp
negb
mov
mov
aam
rolb
pop
aaa
pop
fcoml
push
or
xor
adc
jle
sub
cs
push
adc
cmp
mov
mov
cmp
daa
push
movsl
fcomps
roll
jns
or
xor
or
cmp
and
dec
aam
push
movsb
scas
adc
mov
lock
and
ret
xchg
js
ret
les
jae
lret
mov
std
fadd
mov
jmp
and
push
sti
sbb
mov
pusha
sub
test
xlat
scas
pop
push
mov
cwtl
jecxz
xor
jl
sahf
bound
jns
bound
xor
xor
xchg
ret
xor
ror
rclb
call
arpl
stos
xchg
xor
sub
mov
jle
sub
or
dec
mov
scas
xchg
cltd
out
icebp
daa
add
mov
inc
xor
pop
xchg
ret
add
jb
test
pop
xlat
test
xchg
xchg
sbbb
xchg
imul
jo
test
mov
jne
loopne
mov
xchg
sbb
js
mov
jmp
clc
xchg
into
sub
add
pusha
ja
jns
add
data16
jne
out
cld
jnp
adc
inc
fsubrl
jmp
outsl
adc
lods
loope
cmpsl
data16
sub
or
gs
or
out
lods
rolb
mov
js
mov
ret
lret
test
je
cmp
jmp
or
popa
je
clc
cmp
jl
xor
add
mov
mov
fwait
adc
dec
xchg
inc
push
in
push
mov
pop
pop
push
lods
das
pop
xchg
into
and
mov
in
push
jecxz
in
stos
push
push
ss
sbb
cmpsl
imul
mov
lahf
lds
mov
dec
negl
cmc
mov
pop
xor
js
cmpsl
repnz
clc
jo
popf
xor
pop
push
das
pop
movl
sahf
stos
cld
add
sbb
nop
xor
std
xchg
fwait
mov
pop
out
cmp
dec
fildl
cmp
cltd
lea
test
mov
add
pop
addb
int
and
xor
push
lods
movsb
arpl
jge
dec
clc
ss
push
cld
add
mov
je
mov
stos
cwtl
inc
mov
mov
into
mov
fiadds
fsubr
sub
loope
ja
add
xchg
xor
std
pushf
jg
test
imul
fadds
jmp
xor
imul
pop
pop
mov
lret
std
cmp
sbbl
in
inc
sub
stc
insb
or
adc
stos
scas
mov
jne
dec
pop
pop
hlt
push
adc
sbb
push
rcll
std
dec
inc
inc
pop
pop
std
sub
add
pushf
lret
add
stos
jbe
stos
push
data16
cmp
pop
mov
jns
fcmovne
outsb
inc
push
jmp
loope
xor
sbb
stos
fldenv
sbb
repz
xchg
repz
loope
sbbb
insb
imul
dec
pushf
lea
aaa
jmp
daa
cmpl
pop
fcoms
test
mov
sbb
adc
xchg
mov
int3
arpl
in
inc
arpl
js
es
aas
push
lea
xorl
dec
xchg
test
mov
dec
in
sub
mov
bnd
enter
icebp
cmpsb
sub
call
push
sti
js
mov
or
mov
lret
add
pop
mov
xorb
xchg
mov
pop
sbb
stos
repz
or
mov
ds
dec
cmp
jp
stc
sub
lds
mov
jle
sub
and
sti
xor
test
sub
dec
cmp
sbb
scas
dec
lods
fsub
fs
pop
mov
in
ret
mov
hlt
in
rcll
jno
ret
popf
pop
pop
dec
stos
mov
and
out
ret
push
jmp
mov
mov
mov
push
xchg
push
cmp
xor
push
inc
pusha
cmpsl
inc
call
pop
jb
arpl
cmp
or
cmc
cmp
pusha
aad
mulb
stc
adc
cltd
jae
mov
jp
insl
push
imul
outsl
jecxz
rcl
daa
mov
sub
adc
in
insl
ret
lret
push
ja
sub
loope
pop
add
out
mov
adc
sub
aam
jl
data16
inc
cwtl
dec
test
das
loop
cmp
cmp
lcall
shl
inc
add
sub
push
inc
and
or
or
int3
ficoml
scas
xchg
call
ds
mov
dec
fnsave
mov
bound
imul
addl
es
mov
sar
mov
cmp
jp
inc
rcrb
sahf
out
pop
dec
push
adc
add
add
jno
add
xor
add
sahf
add
cld
mov
add
int3
add
ljmp
add
add
shll
add
jle
add
push
add
lock
add
add
add
add
sub
add
pushf
loopne
add
add
shl
add
add
add
push
loopne
add
add
add
decl
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
mov
add
add
add
add
add
add
xor
jmp
hlt
cli
mov
add
loope
add
pusha
mov
mov
dec
add
mov
shl
sbb
push
lock
or
sub
mov
cmp
cmp
dec
sub
enter
jge
sbb
xor
xor
sbb
inc
xor
je
adc
and
sbb
mov
fs
adcl
je
mov
jae
cmp
stos
mov
mov
add
shlb
push
add
decl
std
push
loop
or
aaa
push
decl
repnz
roll
mov
sbb
clc
aad
cmp
add
cmp
jno
xor
push
adc
adc
out
insl
loopne
mov
mov
clc
jg
pop
imul
cmp
push
subl
ret
sub
sbb
mov
push
pop
fdivrs
xor
mov
out
stos
mov
add
imul
std
pop
push
lea
jle
mov
push
test
test
mov
push
push
xor
inc
mov
adc
mov
mov
cmp
cmp
pushf
mov
test
cmp
mov
into
sub
fwait
sbb
lea
mov
nop
pop
xor
lds
mov
xchg
push
enter
cmp
xchg
mov
ss
xchg
testl
push
adc
je
xchg
push
mov
incl
jmp
push
and
mov
jl
xchg
xchg
adc
addr16
in
and
add
imul
and
jl
add
jge
sti
add
gs
or
mov
mov
shr
loope
stos
in
adc
imul
std
sbb
mov
sahf
fcmovbe
push
in
cmp
jae
dec
and
mov
shlb
sahf
xchg
and
or
xor
ret
sub
adc
adc
adc
call
loop
inc
dec
mov
cmc
adc
mov
repnz
lret
or
push
adc
xor
into
xor
enter
mov
es
jl
test
or
lea
bswap
cwtl
ret
push
stc
dec
mov
lea
or
in
and
lds
cmp
inc
int
popf
ret
inc
xorb
or
fs
sub
adc
xchg
cmp
inc
mov
dec
push
mov
lock
jmp
out
mov
mov
sbb
sarb
jmp
and
jmp
push
and
ja
push
or
bound
mov
dec
ss
lods
pop
adc
cmp
inc
and
push
loopne
xor
movsb
mov
adc
sbb
jne
in
loope
sahf
sbb
sub
lret
ficoms
inc
push
pop
adcl
push
adc
into
dec
inc
cli
sub
sub
fxch
mov
and
fildl
add
mov
enter
sti
adc
arpl
jne
enter
mov
jmp
and
mov
xchg
inc
adc
fiadds
jb
sub
cmpsl
mov
test
cmpsl
jo
pop
lea
dec
jmp
cmpsb
xchg
in
int3
dec
loop
sub
add
xorl
mov
pop
or
add
jl
mov
sbb
jecxz
lea
pushf
or
push
test
mov
sub
adc
enter
dec
in
hlt
cli
mov
inc
out
add
sar
sti
out
enter
add
push
mov
shl
and
xchg
xchg
adc
and
mov
inc
sub
arpl
iret
jb
and
lea
mov
inc
lods
sbb
repz
roll
call
jb
sbbl
xchg
repnz
mov
pop
scas
jo
je
jmp
pop
and
adc
mov
aam
jmp
sbb
cltd
lahf
inc
pop
or
or
sbb
xchg
fwait
je
je
sub
and
lds
add
lret
lea
lock
add
stos
test
dec
or
mov
push
pop
jb
loope
push
jb
add
addb
pop
orl
sub
sbb
sub
push
add
and
gs
push
adc
mov
push
add
inc
add
sub
stc
push
mov
add
adc
es
idiv
mov
xor
fdivs
loopne
add
dec
mov
sbb
mov
add
push
jo
cs
push
dec
mov
lds
rolb
push
push
in
dec
xor
int3
adc
sbb
out
test
data16
or
push
cli
sar
mov
mov
push
add
mov
push
add
push
loopne
xor
or
mov
add
lds
add
pop
mov
mov
mov
cli
adc
sub
or
xor
and
xchg
jp
jo
inc
or
lock
loopne
or
dec
sbb
adc
std
pop
sbbl
add
sbb
aad
add
and
push
or
sub
xchg
test
jmp
sbb
inc
daa
mov
add
push
push
push
inc
call
in
pop
adc
lea
mov
push
add
sbb
lahf
push
or
lea
lods
stos
dec
add
adc
test
fmull
mov
stc
jnp
cmp
movsb
repz
add
inc
outsl
add
mov
js
sbb
xchg
fists
sub
lea
dec
push
data16
repz
arpl
or
jnp
and
sbb
test
pand
or
and
sbbb
mov
inc
cmp
or
je
jnp
xchg
push
sbb
lea
lret
mov
test
push
push
and
push
lea
push
xor
sub
nop
add
inc
sub
aas
fldl
cmpsb
xchg
orl
lcall
or
aaa
ficoms
inc
or
dec
inc
shl
test
push
sub
inc
add
xor
adc
xor
pushl
sub
add
pop
pop
maxps
push
imul
scas
call
jmp
adc
aas
aam
pop
push
testl
popf
mov
mov
push
mov
jle
jb
pop
sti
lods
jbe
add
fnstsw
ret
mov
jne
inc
and
xchg
add
pop
in
popa
lods
push
jne
fwait
scas
leave
push
adcb
int
sarl
dec
enter
xchg
mov
pop
add
scas
lea
jmp
cltd
fs
in
push
call
test
in
cwtl
dec
adc
or
std
incb
push
jmp
pop
sub
mov
movzwl
inc
adc
fidivs
xchg
jns
jbe
js
insb
int3
dec
cld
inc
pop
jl
add
add
cmp
jge
mov
add
add
sub
in
shll
push
enter
sbb
cmp
ret
shr
cwtl
rclb
dec
les
adc
add
mov
xor
enter
mov
xor
xor
int3
adc
das
xchg
add
pop
push
push
mov
clc
nop
xor
sub
data16
adc
call
pop
push
mov
or
push
test
mov
in
inc
out
test
dec
push
fmulp
inc
mov
je
loopne
popa
pop
jge
sub
daa
ljmp
mov
ds
icebp
adc
add
xor
movsb
push
fcmovbe
xchg
stos
lret
pop
mov
pusha
cmp
cmp
ret
add
adc
push
lcall
push
push
xchg
outsb
push
xor
mov
sbb
dec
sub
lock
mov
pop
lret
and
jl
add
push
mov
push
hlt
push
dec
dec
or
and
push
push
sti
and
enter
dec
mov
inc
push
adc
push
adc
mov
pop
lods
sbb
xor
stc
jmp
mov
push
movl
loopne
sub
pushf
dec
mov
fiaddl
stos
inc
or
leave
testb
or
pop
xor
cmp
push
je
outsb
add
jge
inc
pop
push
dec
or
mov
dec
and
push
push
push
push
call
or
dec
sbb
adc
lds
shrl
lret
lods
lret
in
je
inc
inc
or
subl
test
testb
xchg
std
bound
inc
or
shlb
jle
dec
popl
dec
adc
and
mov
jge
push
push
adc
rcrb
testb
mov
in
mov
jg
test
and
jmp
mov
inc
mov
push
jno
xchg
inc
adc
push
dec
sbb
xchg
add
push
xchg
mov
push
xlat
sub
repz
sub
mov
shr
push
adc
sbb
dec
or
inc
jmp
pop
ss
imul
jmp
sbb
cmp
dec
adc
add
add
ror
shr
pusha
jae
xor
jbe
fistl
inc
mov
test
testb
mov
pop
mov
sbb
test
xor
mov
and
push
sbb
and
pop
arpl
mov
cmp
add
and
outsb
jl
adc
sti
and
add
test
fs
lea
repz
outsb
mov
ljmp
imul
dec
movl
sub
popa
insb
and
push
pushf
sub
bound
outsb
xchg
xor
sbb
popa
xchg
js
pop
ja
xor
cwtd
adc
pop
loope
or
and
inc
push
cmpsb
inc
imul
insb
ja
inc
js
je
rolb
popa
cmp
fs
dec
jp
icebp
pop
sbb
je
dec
mov
xorl
mov
scas
or
stos
ror
test
cmpsb
call
mov
or
dec
test
ja
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
pushf
push
add
push
in
add
pop
loopne
add
add
add
push
loopne
add
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
