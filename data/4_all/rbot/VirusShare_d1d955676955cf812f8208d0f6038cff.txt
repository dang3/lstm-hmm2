cld
xchg
dec
mov
aas
or
lahf
adc
xor
mov
shl
mov
int3
addr16
cld
or
mov
jp
mov
aas
das
adc
nop
push
push
sbb
movsb
cmc
ret
loopne
ret
mov
mov
decl
nop
pushf
repz
gs
clc
adc
lahf
jp
fs
and
test
ret
xor
or
xlat
stos
sbb
and
jl
and
dec
outsl
fcoms
mov
adc
sbb
cmc
inc
loope
pop
cmpsl
xchg
testl
xchg
test
call
mov
mov
jnp
cmp
clc
cmp
leave
push
mov
push
push
mov
lock
cmp
insb
cmp
into
les
and
xor
in
in
loopne
xchg
fs
lret
sub
lods
cmp
add
adc
jmp
imul
mov
mov
jmp
je
cmp
inc
mov
mov
push
dec
ja
repnz
xor
repz
movsl
jns
cmp
lock
int
xchg
jle
cmp
cld
dec
jne
mov
mov
pop
and
mov
insl
loop
into
inc
out
test
popf
mov
pop
fsts
dec
shlb
rcrl
imul
dec
cmc
cmp
push
cmp
inc
out
pushf
ljmp
sti
pop
xchg
fsave
daa
aaa
mov
push
mov
add
int3
inc
push
pop
dec
jno
shlb
add
jl
push
cmp
jp
sub
movl
push
inc
pop
jb
lods
cmp
imul
or
pop
idivl
push
and
int
mov
mov
ja
fists
sbb
enter
push
sbb
xor
adc
loope
iret
adc
push
and
dec
fxam
mov
sub
pop
mov
test
xchg
popa
push
mov
lods
pop
push
lock
mov
push
sub
popa
mov
cmp
mov
test
mov
cwtl
dec
or
ret
pop
sbb
mov
ss
inc
push
daa
popf
and
loope
mov
cmp
pusha
pop
cmp
add
scas
sub
sbb
aas
jns
or
jl
popa
test
lret
xchg
xor
and
push
test
cmp
mov
cwtl
test
adc
lret
jge
mov
and
outsb
add
push
es
pushl
add
inc
ret
cmpsl
lret
cmpsl
out
mov
stos
adc
push
stos
movb
sub
mov
sub
mov
mov
push
stc
mov
dec
jmp
mov
mov
mov
mov
fisubl
movl
xor
cmp
adc
xchg
jo
sbb
iret
xchg
dec
std
cmp
in
icebp
xor
and
sub
push
xchg
out
dec
cs
mov
sub
push
out
pusha
popf
fadds
addr16
rcr
xchg
push
cmp
xchg
outsl
shrb
rorl
test
push
jmp
popa
pushf
push
add
xor
xor
lock
xchg
or
insl
imul
lret
adc
jnp
cmpsl
mov
push
dec
xor
jb
gs
call
inc
mov
cmp
inc
cld
jmp
pop
cmpsb
cmp
scas
test
lods
and
int3
sub
jmp
jg
inc
enter
push
mov
test
scas
cmp
sbb
insl
icebp
jno
jb
dec
ss
dec
adc
mov
jmp
sub
pop
or
test
out
xor
or
out
inc
mov
fists
jne
inc
scas
gs
mov
xchg
xchg
mov
mov
ret
icebp
mov
fistps
push
nop
cmp
push
leave
adc
sub
insb
mov
shrb
mov
cmp
and
sbb
es
aad
addl
pop
fwait
add
jne
mov
mov
xor
ror
add
dec
repz
and
inc
inc
inc
movsl
sbb
sub
lods
sbb
push
mov
pop
cmp
outsb
sbb
lock
ret
and
ja
nop
jae
mov
data16
popf
mov
ficoml
cwtl
push
mov
lea
push
mov
jle
mov
sub
mov
mov
je
push
ja
cs
xchg
adcl
das
ficoms
add
push
sarl
into
fisubrs
sub
cmp
cmp
xchg
cmpsb
cmp
in
push
sub
fists
idivb
add
in
shlb
outsl
mov
dec
push
mov
inc
in
xorb
ret
leave
sub
mov
sub
test
mov
mov
push
push
add
jb
pop
add
pop
aam
shlb
je
shlb
loopne
ret
stc
ror
add
jne
mov
ja
add
les
xor
mov
in
mov
mov
mov
je
ja
xchg
cmpl
pop
js
je
sub
pop
sub
loope
mov
jns
imul
mov
cmp
sarb
ffree
sbb
addb
push
pop
rol
add
into
xchg
imul
sub
and
std
dec
iret
fcomps
sahf
push
outsb
push
rorw
shlb
and
add
xor
into
jb
mov
push
ds
jl
mov
daa
cmp
fnstenv
jbe
adc
adc
inc
push
and
ds
mov
movsb
or
mov
hlt
xor
push
leave
loop
sub
in
sbb
mov
je
ja
imull
in
mov
arpl
insl
push
cli
push
addr16
repz
and
into
sahf
push
nop
std
jp
fiadds
ds
lock
testl
xor
fdivrl
adc
fisubs
xchg
cmp
incb
out
das
test
and
lcall
mov
xor
jbe
sbb
pop
cmp
xchg
dec
shlb
dec
xchg
xchg
or
jb
stc
push
xchg
or
inc
or
dec
push
sbb
fdivrp
cmp
mov
lds
xchg
lahf
adc
aaa
arpl
xchg
divl
xor
jge
nop
sbb
push
mov
or
mov
dec
icebp
mov
aas
push
xchg
or
push
dec
addr16
test
mov
jp
jbe
or
stos
jecxz
mov
sbbb
mov
jno
outsl
insl
cs
lea
and
xor
cmp
or
xor
sbb
xor
ss
shl
fisubl
call
jge
das
add
sbb
jmp
push
in
mov
imul
gs
decl
dec
jl
cs
lods
xchg
mov
adc
test
jns
cmp
pop
push
adc
mov
adc
stc
ljmp
add
xchg
shlb
push
aaa
daa
popf
xor
and
sbb
mov
and
push
out
mov
or
or
mov
mov
sub
andb
or
frstor
pop
sbb
mov
and
cmpsl
lods
xor
out
cltd
shrl
call
or
iret
inc
jp
inc
push
sbb
cmpsl
push
jo
popf
es
int3
repnz
cmpl
xor
fsubl
xor
shrb
mov
pusha
mov
hlt
pop
cmpsb
jae
lods
aad
mov
pop
mov
push
into
orb
jge
add
rorl
fs
xor
sub
pop
pop
push
lahf
clc
cmpsb
sub
fstpl
push
fmuls
dec
imul
xor
jecxz
addr16
shl
dec
dec
jns
sbb
ljmp
cmpsl
mov
mov
and
stc
mov
outsl
lret
cltd
adc
out
inc
into
lret
sbb
xchg
xchg
push
fwait
mov
out
push
cmp
je
das
and
mov
ffreep
ljmp
xor
gs
loope
and
push
adc
inc
mov
mov
push
inc
fildll
in
ljmp
xor
clc
es
test
push
mov
loope
cvtps2pd
ds
adc
das
test
and
sub
dec
in
jp
fs
push
xchg
push
inc
loope
xlat
mov
imul
popa
jmp
les
or
fimuls
lea
mov
cmp
inc
push
adc
mov
fs
mov
loope
adc
xor
test
adc
add
push
cld
fwait
rolb
push
cmc
add
mov
popf
sahf
ret
inc
das
mov
in
pop
stos
xchg
xor
push
addr16
das
inc
std
addr16
xchg
sti
stc
and
mov
mov
popa
rorb
ret
mov
test
lcall
xchg
jnp
cmc
lods
jg
lods
pop
sarb
push
in
fldl
gs
mov
jge
inc
loope
test
sub
cmp
loope
loope
sbb
shlb
aad
push
dec
gs
jbe,pt
dec
mov
xlat
mov
pop
sub
and
rol
or
bound
sbb
mov
cmp
xor
enter
into
mov
shll
jb
incb
jl
pop
scas
incb
les
mov
xlat
std
lea
ds
xlat
xor
data16
fsubs
xchg
adc
ror
pop
inc
push
mov
lds
add
outsl
lcall
out
faddl
es
int3
pop
imul
jae
or
or
lods
pop
or
pop
popa
jne
pop
xchg
sub
cmpsl
mov
or
adc
add
add
jno
lods
and
rolb
inc
scas
aaa
inc
andb
aas
fwait
movsb
fsubrs
jnp
add
and
push
dec
lret
lret
aad
dec
nop
cmpsl
aad
push
jne
aad
mov
bound
roll
xchg
cli
push
rorb
cmpsl
jge
sti
xor
jg
adc
adc
stos
and
int3
mov
push
jge
xchg
scas
ret
ficoml
sahf
xchg
inc
dec
mov
mov
divl
mov
fwait
xor
popa
stos
int
mov
push
in
or
and
jp
xor
scas
stc
rcll
mov
scas
cmp
std
dec
sti
xchg
sub
mov
lea
mov
adc
cmp
movsl
out
jmp
mov
push
push
inc
rcl
in
push
icebp
dec
xchg
inc
int3
mov
cwtl
xlat
jp
or
pop
adc
adc
and
in
lcall
xchg
mov
pop
sti
jecxz
cmp
je
fdivrs
addb
or
sti
sbb
gs
cwtl
in
adc
daa
cli
mov
inc
jo
sub
xchg
mov
mov
sub
insb
add
mov
fidivs
inc
fdivs
ret
roll
cld
adc
or
adc
stos
hlt
xor
and
popa
popa
stos
mov
ror
xor
int3
cwtl
aam
mov
dec
ss
xor
lock
cld
adc
cmp
xchg
jge
cmpsl
add
and
lods
push
popa
and
pusha
inc
fs
stos
cmova
imul
aaa
push
inc
mov
aad
call
out
inc
mov
mov
cmpsb
add
mov
cmp
loop
inc
xchg
aas
jnp
enter
loop
in
stos
mov
rol
mov
push
cli
inc
sbb
imul
mov
daa
xlat
jmp
mov
ss
xor
shlb
stos
out
leave
movb
push
mov
dec
cmp
test
lock
mov
popa
ret
adc
add
adcb
or
sub
lcall
pop
mov
xchg
inc
outsb
or
cmpsb
jge
mov
mov
xchg
pop
push
roll
int3
repz
stc
jno
ficoms
and
or
and
cwtl
clc
jg
popf
pmuludq
push
bswap
test
sahf
inc
mov
subl
or
shll
lods
sbb
outsb
cmp
rorl
sti
sub
inc
nop
xchg
popf
fs
mov
sub
int3
pop
cmpsl
adc
into
xor
cmp
jns
dec
repnz
or
jmp
out
hlt
xor
rorb
out
rol
inc
pop
data16
imul
lods
push
inc
out
adc
cmp
cmpsl
es
adc
dec
mov
cltd
xchg
ret
lret
insb
in
jp
mov
push
or
sti
nop
add
or
sbb
loope
mov
jnp
repnz
jge
loopne
mov
outsl
setbe
sbbb
dec
xlat
adc
mov
lock
mov
mov
adc
dec
sbb
lock
xchg
stos
xchg
sbb
lods
scas
sbbb
mov
inc
out
insb
sub
ljmp
xchg
xchg
les
pop
xor
fabs
bswap
imul
pop
loope
adc
lea
subb
pop
sub
mov
notl
add
xchg
aam
xchg
insl
lods
adc
arpl
out
or
xor
and
jae
pop
sahf
cwtl
lcall
cli
sbb
popf
xchg
sti
rcrl
scas
rcll
jle
mul
xchg
clc
fs
dec
dec
mov
inc
stos
mov
shlb
dec
adc
pushl
out
popa
xchg
cmp
mov
imul
xchg
jl
loope
add
fcomip
cs
cmp
mov
pop
xchg
add
pop
and
rolb
pop
xlat
jbe
pop
inc
aaa
sub
sub
sbb
nop
rol
jg
push
and
mov
notl
cwtl
flds
dec
je
stc
pushf
pushf
loope
scas
dec
cmp
loop
mov
and
outsl
xchg
inc
cmp
cs
dec
mov
cmpsl
loope
inc
xchg
ja
flds
push
negb
jae
and
enter
test
outsl
and
jl
jp
adc
dec
pop
pop
jl
adcb
mov
add
fs
sahf
xchg
jo
sbb
mov
cmpsl
sbb
ss
jge
dec
mov
mov
cmc
sbb
xchg
jnp
adc
sub
cmpsb
sbb
pop
xor
mov
ljmp
fwait
jp
iret
cli
and
fsubrs
jle
pop
shll
decl
mov
add
test
lea
out
dec
xchg
mov
sbb
push
push
mov
mov
addr16
dec
xor
jl
fwait
mov
dec
sahf
ds
fs
sub
mov
push
cltd
cmp
push
sub
pop
push
pusha
fwait
xchg
mov
sub
orb
das
and
dec
push
sbb
in
jg
sub
enter
jne
mov
cmc
stos
sub
adc
mov
cld
mov
pop
negb
sahf
ja
mov
sub
push
lea
push
fiadds
xor
pushw
out
notb
and
push
popf
jo
push
jb
sbb
pop
jbe
sub
cmp
hlt
lret
jmp
push
lret
sahf
dec
in
adc
pop
insb
pop
xchg
add
pusha
cmp
sti
jno
mov
add
fidivrs
cwtl
adcb
lock
and
push
add
pop
dec
lret
or
mov
add
pop
int3
call
mov
popa
or
mov
push
leave
sbb
ljmp
add
push
cltd
outsb
subb
jg
push
imul
sub
or
xor
sub
out
in
cmc
add
mov
jns
sub
mov
popf
movsb
add
lret
sti
cmpsl
mov
or
jnp
pop
repz
mov
push
add
sbb
in
add
mov
lods
adc
icebp
cmpsb
jmp
mov
inc
mov
daa
push
pop
lds
cmp
testb
adc
repnz
or
mov
push
and
movsb
mov
or
adcb
rolb
cli
pop
xchg
jbe,pt
stos
jg
pop
shrl
rcll
cld
out
cmp
mov
add
mov
jae
stc
das
cmpl
jg
sub
insb
inc
dec
dec
sbb
ret
insb
popa
mov
mov
mov
cwtl
mov
cmp
pop
or
push
sbb
into
aaa
and
xchg
cld
xchg
and
jl
pop
sub
jle
fs
sub
sub
into
xchg
and
mov
gs
cmp
dec
aaa
stos
mov
sub
pusha
cmpsl
hlt
pop
xchg
sub
stos
mov
mov
jae
ljmp
pushf
lock
mov
cmp
loop
push
jg
mov
add
sub
packssdw
mov
xchg
daa
fistpl
add
jo
clc
pop
push
leave
lods
movsl
push
jle
add
fmull
mov
data16
into
sbb
mov
xchg
adc
test
lret
xchg
gs
ret
sahf
adc
loop
lock
nop
gs
push
repnz
mov
lahf
int
movsl
lods
repz
sub
cs
adc
das
bound
cmp
inc
cld
dec
iret
cmpsl
pop
aas
iret
xor
cwtl
into
jno
jl
aaa
stos
in
mov
leave
js
sbb
sub
lea
mov
pusha
fistpll
ficoml
mov
arpl
test
aad
pop
in
cld
pusha
aad
jns
cmpsb
cmovbe
ljmp
adc
and
rcl
aam
jmp
inc
pusha
xchg
std
ljmp
add
mov
mov
xor
jne
fiadds
stos
test
aam
stc
loope
xchg
fdivl
lret
jg
add
int3
out
ljmp
pop
inc
sbb
or
inc
push
jno
xor
adc
xchg
add
add
xchg
inc
repz
shrb
mov
lret
mov
xor
push
pop
mov
test
mov
aaa
in
dec
in
test
cmpl
adc
int
lods
cmp
out
mov
dec
pop
push
or
inc
mov
inc
movsb
imul
sti
and
ss
or
dec
cwtl
movsl
add
cmpb
or
aam
mov
xor
imul
push
outsb
jno
pop
fdivrl
inc
cwtl
mov
roll
mov
sbb
orl
and
ljmp
mov
lahf
hlt
adc
cwtl
sbb
das
fisubl
adc
inc
dec
std
out
insl
es
and
pushf
scas
outsl
out
cmp
fldenvs
lea
lea
adc
inc
out
add
in
cmp
lods
test
or
and
inc
mov
sub
or
or
pusha
xchg
push
mov
in
lods
arpl
cmp
push
push
inc
pop
cmpl
xchg
dec
or
sub
or
or
or
add
xor
movsb
test
cli
mov
sbb
lds
add
lea
pop
in
cmp
mov
fs
mov
mov
cmc
negb
mov
mov
inc
dec
out
xchg
das
inc
movsb
fildl
cmp
lds
loop
ret
or
int
cli
movsb
leave
mov
shlb
call
js
decb
and
insb
jbe
mov
mov
movsl
xor
rorb
add
scas
push
jbe
sub
cmp
pop
cmpsl
test
add
jnp
dec
mov
dec
fcomp
pop
push
ljmp
inc
and
xor
gs
out
mov
add
cmpsl
jne
stc
fs
lock
jno
or
sbb
lahf
into
inc
jnp
mov
or
jne
ficompl
pop
stos
das
sbb
and
dec
fildll
movsl
ret
sahf
jo
pusha
dec
or
in
sbb
inc
leave
sub
pop
adc
daa
or
sti
lock
gs
mov
or
pop
das
aad
fidivs
or
in
add
xor
scas
xor
movb
aaa
ror
cwtl
mov
and
lret
ds
dec
mov
jo
scas
enter
fbld
mov
cmc
push
xor
pusha
jnp
or
pop
inc
popa
push
lock
cmp
mov
jge
xor
add
push
sbb
scas
mov
mov
aad
stc
jbe
inc
lock
pop
dec
adcl
rolb
pop
stc
fcoms
or
jecxz
hlt
sub
idivl
lcall
mov
mov
lds
jno
ljmp
mov
dec
mov
xchg
xor
outsb
cwtl
movsb
mov
das
cmpsl
sbbb
pusha
sahf
test
pop
pop
loop
push
pusha
push
mov
or
mov
ret
fists
xor
lcall
sbb
das
int
decl
inc
sub
out
shrb
or
inc
dec
cmp
ret
data16
adc
push
out
add
sti
mov
aad
inc
iret
into
loopne
sbb
cmpb
jg
jo
in
aam
mov
testl
push
dec
stc
cmpsb
loop
data16
inc
leave
mov
and
repnz
inc
mov
fcmove
mov
dec
jne
mov
lret
fidivs
out
ficompl
push
test
dec
inc
loope
inc
fcoml
add
mov
mov
loop
push
mov
jae
std
sbb
sub
xor
test
stos
add
mov
and
test
xor
dec
and
js
outsl
loope
xchg
repnz
mov
ret
aaa
leave
mov
jb
dec
call
fimull
fsubs
mov
sub
adc
cs
cmpsb
iret
jge
stos
cmp
int3
cmp
push
imul
or
mov
and
add
adc
imul
insb
inc
js
and
dec
add
inc
fistpl
aaa
sub
test
cli
mov
pop
insb
jne
out
add
out
cmc
or
testb
jmp
dec
push
ret
cmp
jne
xchg
jne
popa
xchg
shl
sub
sub
mov
ja
adc
push
dec
mov
xor
jne
das
les
push
sbb
mov
notb
xlat
inc
jmp
stc
mov
icebp
pop
push
and
orl
mov
xchg
std
js
mov
adc
inc
and
dec
je
cmpsb
sbb
sub
in
mov
dec
jo
es
pop
push
enter
mov
jmp
cmp
cltd
sbb
xchg
lea
lods
pop
dec
shll
cld
xchg
sub
test
arpl
adc
cld
adc
sub
jbe
mov
js
jno
xor
rcrl
mov
dec
clc
or
imul
ret
pop
adc
shrb
les
pop
push
js
mov
insb
lea
and
add
mov
xchg
outsb
mov
mov
mov
arpl
loope
sarb
lods
fildl
insb
notb
test
dec
and
xchg
pop
cs
mov
ljmp
out
jne
sbb
add
aam
push
jae
test
mov
js
push
xchg
mov
cmp
xchg
pop
push
sarb
scas
pushf
test
aad
push
std
inc
sbb
push
push
pop
push
xor
rcll
shl
sub
xchg
cmp
das
lret
pop
add
add
jle
or
mov
inc
sub
iret
lds
arpl
mov
mov
mov
push
pop
adc
xlat
push
mov
push
not
ds
cmp
and
sbbl
inc
mov
push
hlt
push
outsb
jl
jecxz
dec
out
sub
stos
fldenv
adc
mov
adc
mov
adc
stc
addl
push
stc
cmp
and
dec
addr16
xchg
and
mov
pop
jmp
adc
out
mov
insl
xor
jnp
cwtl
and
iret
jno
rcll
cmp
dec
sahf
cmp
inc
adc
cmpb
out
popa
lcall
std
cld
sti
andl
xchg
mov
ds
pusha
addr16
jnp
popf
orl
sub
aaa
iret
pushf
adc
popa
mov
outsb
ret
adc
mov
aaa
sbb
cmp
aad
sbb
andl
fidivs
mov
ds
inc
mov
es
pop
mov
push
test
sub
xor
xchg
add
sub
sbb
adc
jo
shrb
or
adc
xchg
push
dec
repnz
xchg
out
mov
insl
mov
or
out
loope
outsl
mov
addb
and
push
fcompl
cltd
mov
lret
cmp
rcl
fcompl
add
dec
roll
in
push
outsb
pop
inc
mov
popa
mov
and
cmp
pop
mov
sahf
insb
stos
insb
xchg
mov
jecxz
pop
bound
cmpsl
pop
loopne
adc
add
test
aas
cs
xchg
lret
lret
fistl
adc
xchg
ljmp
insb
pop
xchg
sbb
inc
adc
jmp
push
pop
pop
push
dec
mov
pushf
imul
dec
out
push
sbb
adc
mov
mov
out
pop
aaa
jbe
imul
add
adc
jns
pop
scas
clc
cmp
popl
mov
test
sbbb
mov
sub
movsb
in
into
mov
aad
movsb
shll
lods
mov
fimull
cmp
and
sub
mov
imul
lahf
pop
adc
divl
pusha
mov
cwtl
and
jno
fbstp
fisttps
aaa
mov
loop
dec
push
lcall
cs
loop
in
lods
inc
or
dec
push
cld
cmp
out
movsb
js
ljmpw
sub
test
fs
ja
inc
mov
mov
fisubrs
cli
pop
stc
repnz
jge
comiss
popa
inc
in
xor
test
cltd
sti
mov
bound
push
push
test
lret
mov
cmp
inc
adc
xor
cmpsl
jge
jg
dec
pop
out
lea
sub
das
ljmp
mov
in
xor
cs
mov
pop
data16
or
ljmp
cmp
lret
arpl
les
adc
and
dec
jo
mov
xor
mov
movsl
mov
je
imul
xchg
pop
mov
jmp
sbb
stc
cmp
inc
mov
les
test
and
pushf
imul
idivb
or
jno
cmc
xor
lea
jl
pushf
push
fidivs
das
pop
and
lret
loopne
jo
push
leave
movsl
mov
xchg
pop
dec
mov
mov
lock
mov
movsl
shl
mov
push
aam
out
lods
jmp
mov
dec
in
and
jg
jg
cmc
and
adc
inc
sub
aaa
xor
ficomps
or
mov
dec
aaa
jae
xor
dec
and
in
mov
sbb
xchg
aaa
in
lods
notl
xchg
inc
loop
mov
push
cmp
lret
lret
hlt
dec
mov
lock
movsl
test
shrl
stos
sub
insb
into
and
sbb
inc
pop
addb
sub
and
cli
insl
push
xchg
pop
inc
loop
pop
or
dec
dec
fnstsw
ret
stos
push
out
mov
fwait
and
das
addb
sub
and
aas
outsl
sub
adc
sub
test
lret
insb
stos
call
xchg
data16
mov
addr16
sub
in
jns
mov
andl
and
movsl
test
xor
or
mov
jne
cmpsl
pop
scas
mov
mov
subl
jp
jge
shrl
and
jnp
mov
jnp
sahf
rcl
daa
inc
shl
leave
shlb
adc
cld
subb
push
out
add
cmp
inc
pop
mov
mov
mov
cmp
mov
pushf
pop
or
out
fsubl
cmp
push
fnstcw
loope
aam
data16
iret
lcall
movsl
jbe
leave
mov
jns
xchg
das
jno
lret
push
inc
pop
lahf
mov
or
push
pop
pushf
inc
mov
fcoml
push
or
sub
gs
push
lock
imul
data16
lret
fistpll
pusha
stc
fdivrl
inc
and
loopne
cs
mov
ljmp
lock
add
sbb
adc
in
mov
mov
or
repz
cmp
movsb
add
push
push
rcl
lock
fimull
lods
xor
push
lds
sbb
jnp
fs
xlat
pop
push
fwait
sysexit
push
xchg
dec
movl
dec
das
xorl
fistl
lods
push
xor
in
jo
stc
dec
push
and
jmp
adc
adc
mov
jno
xor
hlt
in
ljmp
xor
loope
mov
nop
pop
insl
mov
nop
or
std
inc
call
sbb
inc
adc
call
hlt
daa
int
test
jns
and
test
jmp
in
sub
cltd
bts
mov
ja
aam
sahf
cmp
push
dec
inc
int
pop
jp
insb
pop
xor
mov
xchg
scas
pop
fmulp
aaa
stos
or
mov
sti
cli
lock
adcb
cmp
adc
stos
lret
out
cmp
jbe
shlb
lods
add
adc
mov
test
or
pusha
cli
ja
es
iret
int3
xchg
xchg
iret
and
rolb
or
xor
push
push
mov
insl
repnz
xchg
ljmp
lods
jg
aad
sub
push
fsubrl
adc
test
push
inc
idiv
push
aas
aaa
hlt
xchg
hlt
adc
cmp
and
int3
sbb
leave
vxorps
test
or
dec
adc
imul
jae
dec
movsb
lods
inc
sbb
arpl
adc
sub
mov
loop
pop
pushf
jle
nop
and
sbb
pop
sbb
mov
outsl
dec
push
bswap
mov
jbe
adc
dec
loop
xchg
imul
xchg
or
dec
mov
lods
xchg
jbe
daa
in
fsub
imul
scas
sbb
lds
daa
mov
inc
mov
and
mov
daa
out
cmc
inc
test
sub
sub
stos
cmp
lret
pushf
movsl
outsb
push
test
push
inc
outsb
inc
aaa
xchg
movsb
jnp
test
push
imul
cs
xchg
mov
and
jo
mov
mov
sbb
jns
mov
inc
jae
pop
xor
xlat
mov
mov
pop
dec
adc
std
xchg
repz
sbbl
fdivs
push
fsubrl
aam
or
xor
movsl
out
outsb
mov
push
fsubrs
push
xor
in
jae
lret
outsb
mov
fstp
or
nop
in
and
mov
xor
fs
dec
mov
dec
dec
iret
shll
into
and
cmp
pop
mov
fwait
cmp
cmovl
stc
daa
loopne
pop
jl
int3
or
mov
adc
mov
jae
data16
test
fstpt
dec
adc
push
mov
add
sub
cli
add
orl
mov
orl
or
testl
int3
arpl
ret
andl
xlat
outsl
mov
sbb
or
adc
pop
movsb
js
je
jecxz
aaa
pop
test
rolb
lods
mov
mov
jecxz
lods
out
xchg
bnd
jmp
sbb
stos
dec
xchg
out
adc
pop
mov
mov
in
fnstenv
adc
fisubrl
fmull
jns
pop
push
sub
xchg
not
xchg
sub
and
jae
nop
lods
jne
xchg
mov
sar
inc
dec
sub
xor
in
pop
adc
mov
mov
out
shll
repz
addr16
add
push
outsb
jno
dec
cmpb
icebp
pop
popa
lods
mov
mov
les
xor
aaa
out
jg
jg
out
les
xchg
imul
mov
out
idivl
jge
pop
add
es
lahf
inc
pop
imul
ficoms
cmp
or
adc
cmp
or
pop
mov
jmp
ds
imull
pop
stos
push
jg
push
movswl
or
lret
into
xor
orb
and
into
mov
pushf
rorb
mov
push
inc
dec
aaa
mov
btc
and
rclb
push
ret
in
dec
cs
bound
mov
movsl
jae
loope
imul
cmpsb
jne
aas
xchg
dec
pop
loop
ja
movsl
ret
pop
insl
mov
adc
fwait
nop
js
mov
and
mov
std
popa
pop
lock
sti
mov
sahf
rcl
xlat
jge
and
mov
rcrl
jo
pop
call
or
int
divl
fidivrl
imul
inc
clc
push
mov
xchg
fisubrl
lret
mov
enter
xchg
mov
inc
push
inc
clc
ljmp
xchg
cli
pop
sbb
dec
inc
jecxz
mov
adc
ret
test
enter
inc
dec
mov
pushf
xchg
out
loopne
cmp
int3
push
and
out
ret
mov
mov
lcall
inc
and
sbb
repz
shrb
and
pop
idiv
add
mov
call
mov
arpl
cmp
dec
adc
incl
movsb
lods
sub
faddp
xor
xor
pop
rcll
pop
mov
jo
and
cmpsb
mov
aas
pop
stos
xchg
fbld
movsb
dec
add
adc
add
imul
movsb
xchg
push
push
lods
cmpsb
hlt
leave
pop
daa
jb
cmpsb
test
stos
sbb
lea
pop
jg
lcall
lahf
in
mov
jg
fnstcw
xorb
lds
jmp
insl
fs
ds
ficomps
mov
dec
fwait
enter
jnp
mov
sti
jo
jae
mov
faddl
aas
push
xchg
es
jb
in
mov
rcl
popf
sub
cmp
test
xchg
mov
add
and
js
out
inc
out
inc
and
xlat
rorb
fcomip
sbb
mov
push
fs
adc
bound
test
fcoml
js
fwait
negl
mov
test
popa
mov
mov
sbb
imul
pop
decl
mov
cmp
cmp
test
faddl
mov
jge
push
in
out
pusha
fldl
in
or
mov
fnstenv
shll
out
enter
fisttpll
shl
sub
sbb
inc
dec
nop
mov
push
sar
popa
fdivrl
stc
cmp
dec
dec
test
xchg
or
imul
xorb
inc
mov
cmpsl
std
out
or
push
dec
jnp
aam
rcrl
inc
lods
rcr
iret
in
movsb
dec
imul
push
fsubrl
mov
icebp
enter
push
mov
popf
out
fldl
pop
pop
shlb
push
adc
sbb
or
insb
cmp
aad
cmc
clc
mov
inc
sbb
or
pop
cmp
cltd
cmp
jb
jmp
lods
lds
in
jl
push
xchg
adc
push
xor
adc
xchg
pusha
xchg
and
arpl
add
movsb
ds
sub
lods
mov
in
push
call
test
adc
mov
xor
dec
ljmp
adc
push
mov
jle
repnz
and
sub
mov
stc
testl
push
or
insb
pop
dec
pop
addr16
or
or
lea
subl
cltd
push
sahf
pop
dec
in
inc
mov
test
ja
fcomp
add
mov
pusha
mov
shll
das
ja
iret
push
or
jge
mov
jns
dec
mov
hlt
ret
jb
xor
inc
cmp
gs
mov
rorb
mov
jb
inc
fadd
xor
or
or
cmc
aam
popa
pop
pop
inc
roll
mov
sahf
mov
and
push
les
ja
push
imulb
jns
subb
gs
mov
loop
and
fstpt
lret
fcompl
add
shr
les
aad
inc
fcmove
sahf
pop
ljmp
lret
sahf
xchg
aad
lahf
repz
push
cmpl
dec
cmpsb
push
andl
jmp
fs
sbb
outsb
mov
out
inc
lret
outsb
add
pop
pop
and
out
cmp
out
aaa
or
mov
clc
popa
add
sbb
jno
imul
imul
stc
and
cli
cmp
add
mov
clc
fscale
jne
loop
pop
and
iret
scas
jle
pop
addr16
sbb
dec
mov
sbb
ja
stc
mov
push
icebp
push
pop
in
cld
das
push
sbb
xchg
lds
dec
pop
leave
in
jle
scas
rolb
add
std
sub
mov
lds
out
hlt
gs
sbb
mov
jge
in
popf
inc
in
gs
jo
je
push
xor
sbb
and
pop
fadds
fucom
inc
outsl
addr16
inc
mov
lods
xchg
roll
pop
pop
mov
sub
add
xlat
aas
pop
shl
mov
xchg
add
out
in
sbb
sub
xchg
jle
sub
mov
jb
clc
mov
stos
pop
into
sub
jns
test
lock
ljmp
outsl
mov
pop
clc
or
stc
cli
imul
xor
movsb
inc
testb
fnsave
fisubs
lret
ds
mov
push
fcompl
roll
loope
push
xor
imul
loope
sub
mov
frstor
jp
cmc
int
fdivrl
jns
mov
xor
mov
stos
add
push
subl
popa
mov
xchg
jnp
popf
mov
sub
fstps
or
inc
ss
ss
adc
cmp
enter
inc
aad
push
mov
mov
out
shlb
popa
pop
popf
mov
add
fldl
adc
dec
aaa
jmp
mov
les
xor
jb
stos
pop
add
jmp
ret
mov
jbe
loope
add
mov
mov
cmp
cmpl
add
daa
out
mov
pop
push
js
out
in
in
cmpsl
pop
and
rcrb
mov
pop
fnstcw
mov
adc
sbb
push
fisttpl
add
push
push
lock
jle
loop
cld
adc
mov
rolb
out
jmp
sarb
push
cwtl
mov
cmpsb
jmp
sub
daa
mov
jb
sbb
arpl
pop
gs
and
cmpsl
lods
ficoml
adc
push
loope
sub
mov
sub
fdivs
sub
nop
dec
ror
jle
cli
jbe
mov
daa
std
testb
cmp
xchg
xchg
pop
mov
in
inc
mov
fisubrl
pop
fstl
out
add
clc
inc
dec
push
cli
iret
xchg
ljmp
xchg
xlat
out
or
int3
add
dec
out
out
adc
leave
jae
popf
mov
iret
mov
mov
cmp
xor
xor
adcb
push
add
or
sbb
mov
dec
adc
test
in
fstpt
leave
add
sbb
call
adc
sbb
ja
dec
inc
iret
xor
jmp
rcrl
add
mov
pop
js
sub
cs
pushl
mov
push
cltd
clc
mov
mov
xchg
pop
sub
cwtl
xchg
fstpt
icebp
iret
cmp
hlt
jge
add
test
cmpsb
or
cmp
mov
pusha
mov
jmp
cwtl
push
repnz
inc
push
add
imul
mov
mov
xlat
add
mov
iret
sarl
xor
push
dec
sub
mov
into
jle
sbbl
repz
xchg
push
in
fdivrs
or
fistpll
sti
jg
leave
mov
stos
mov
pop
cmc
xor
cmpsb
sbb
int
movsb
imul
icebp
stos
fisttpl
xchg
push
dec
lret
int3
pusha
shrl
adc
push
pop
mov
pop
pop
and
and
mov
mov
sbb
in
lcall
aaa
jns
lods
xlat
sub
xchg
cmp
dec
add
ret
hlt
xchg
cmp
xchg
rcll
movsb
stc
fisubs
popa
stos
mul
xchg
jg
testb
out
cli
mov
mov
inc
lcall
mov
aaa
push
sub
hlt
fs
popf
dec
pop
cmp
jb
call
fisubrs
data16
and
mov
out
clc
cld
push
aad
test
jmp
xor
mov
add
dec
fnsave
sub
ljmp
in
push
sti
xor
mov
mov
imul
in
push
sub
out
dec
movsb
mov
cmpsl
fisttpl
xchg
push
out
out
test
sbb
pop
insl
insl
leave
mov
mov
pop
ret
mov
pop
push
mov
pop
pop
mov
sub
daa
pushf
mov
aam
ss
icebp
lods
mov
fsubl
push
jmp
push
sub
loop
int3
and
adc
aas
xorl
gs
adc
or
adc
xor
xor
mov
dec
hlt
cmpb
cmc
jae
imulb
mov
cmp
negl
stos
jb
dec
xchg
andb
lcall
mov
fnstsw
jb
mov
xchg
cmpsl
call
mov
jecxz
nop
pop
push
pop
push
pop
mov
mov
inc
in
fldt
inc
mov
aam
decb
jmp
fwait
jp
dec
sub
sbb
in
in
out
jmp
jnp
and
mov
jecxz
cwtl
jne
iret
into
stos
mov
imul
out
inc
sarl
sub
push
jno
repnz
out
scas
stos
mov
gs
das
jp
pop
repnz
test
inc
adc
adc
inc
xchg
jmp
cmovno
int3
pavgw
sbb
mov
mov
fwait
imul
es
pop
fldt
nop
pop
xchg
xchg
out
pop
pushf
jae
cs
adc
xor
ljmp
jbe
jmp
inc
xlat
inc
fdivrs
cltd
movsl
jl
int
imul
push
inc
inc
dec
fistpll
sbb
loope
cmp
cmp
xchg
dec
incl
cmp
les
mov
dec
icebp
add
jno
xchg
out
cmp
ret
pop
push
sbb
imul
add
cltd
in
nopl
test
gs
or
mov
add
or
je
aam
lods
sub
push
test
adc
push
lret
sbb
inc
or
loop
push
insl
fnstcw
add
shll
mov
push
inc
jecxz
dec
test
lahf
loopne
lock
out
clc
out
stc
or
xchg
sub
pop
pop
cmp
data16
push
jne,pt
into
pop
imul
or
xchg
sub
push
jg
ss
and
imul
mov
push
add
arpl
adc
mov
mov
xchg
stos
xchg
jecxz
xchg
mov
mov
jb
fs
mov
cmp
pop
adc
mov
or
xchg
dec
add
fs
dec
mov
inc
dec
arpl
push
xchg
mov
dec
arpl
stc
arpl
cmp
cmpsl
xor
sub
mov
push
pop
pop
pop
jbe
popf
ret
movsl
inc
and
mov
cmpl
pop
enter
add
jle
xor
faddp
lods
scas
mov
out
lret
mov
shl
mov
movsb
fstpl
fisubs
sar
lods
sub
scas
pop
jecxz
sbb
mov
mov
fbld
jo
add
and
repz
repz
cmc
js
jns
gs
movsb
and
adc
imul
into
push
adc
stc
pop
mov
jno
leave
lods
xor
fisttpll
or
scas
mov
es
in
or
cmp
xorl
xor
cltd
xchg
sbb
lret
mov
mov
cmp
int3
daa
adc
mov
repz
xor
aaa
adcl
fnstenv
imul
cltd
adc
push
loopne
leave
mov
xor
mov
add
jmp
mov
js
outsl
jmp
cmp
inc
mulb
lret
pusha
dec
pop
inc
arpl
lret
pop
in
nop
loope
imul
xchg
lret
arpl
inc
xchg
test
and
xchg
sbb
mov
lods
sub
jmp
sbb
and
sub
xor
cmpsb
sbb
popa
xchg
adc
push
push
push
in
shl
repnz
mov
loop
in
jecxz
in
push
fistl
inc
inc
inc
loope
and
sahf
pop
shl
mov
mov
mov
xchg
int
jmp
adc
and
mov
mov
inc
adc
pop
lret
jmp
rcl
lea
dec
pop
loopne
jns
faddp
fbstp
add
xchg
sub
in
inc
sub
or
mov
push
aaa
notb
pop
icebp
ret
pushl
inc
cmc
sub
xchg
mov
lds
jbe
rclb
std
cmpsl
xlat
sub
mov
adc
fildl
mov
sub
add
scas
or
sbb
mov
mov
push
mov
mov
jno
mov
adc
dec
or
cmpsb
inc
int
loopne
jae
mov
dec
mov
push
mov
repnz
jae
cmp
sbb
out
mov
sbb
xchg
mov
inc
mov
out
push
cmp
mov
mov
and
popf
push
sbb
dec
inc
push
mov
sbb
lret
mov
xor
jmp
sbb
and
iret
in
mov
clc
jns
mulb
xor
adc
push
sub
stos
in
mov
adc
add
imul
lea
and
cwtl
add
adc
cmp
lods
adc
fmuls
stos
lods
mov
pushf
pusha
gs
and
out
daa
cmp
fdivp
pop
clc
dec
cltd
es
repnz
inc
test
mov
call
pop
add
test
jmp
mov
lret
mov
xor
jns
lods
mov
pop
cld
cmc
addl
dec
xchg
cmp
adcb
cmpl
aad
bound
cmp
mov
fcmovu
xchg
sub
sub
lret
pop
ja
scas
sub
push
push
add
icebp
adc
inc
testl
sub
add
cld
cmpsl
xchg
push
xor
inc
push
fmuls
mov
jmp
loop
dec
inc
dec
call
rcr
lods
adc
cmp
scas
push
in
add
sbb
in
add
orb
rorl
mov
mov
inc
lret
movsb
mov
mov
or
push
test
rol
les
sbb
into
inc
imulb
push
add
sbb
scas
sbb
movsb
xlat
mov
sbb
push
jmp
test
dec
scas
sub
xchg
xchg
stos
cmc
mov
dec
aam
xor
fistpll
cmpsl
fistpl
sar
lahf
cmovle
pusha
stos
movsb
mov
cld
xchg
fwait
jnp
mov
cmp
dec
xchg
dec
bound
add
fldcw
pop
rolb
je
sahf
mov
fimuls
pop
mov
cmp
sub
fiadds
rorb
dec
xchg
pop
xor
or
lods
imul
xor
lret
pushf
test
pop
pop
cld
inc
outsb
mov
test
or
shlb
loopne
xor
mov
jo
leave
ss
out
sbb
sub
xor
stos
push
or
jp
test
pop
adc
stos
cmp
daa
pop
sahf
shlb
les
daa
dec
mov
iret
cwtl
xchg
sarb
les
mov
std
stos
adc
jmp
mov
sub
push
cmp
add
mov
mov
add
mov
nop
xchg
or
add
ja
mov
in
sbb
out
imul
inc
shll
and
pop
fwait
push
mov
movsl
daa
int3
dec
popf
mov
pusha
cli
movsb
test
fldt
add
adc
lahf
bound
into
sub
ds
mov
mov
add
mov
sbb
or
cmpsl
xor
cmp
sbb
jbe
mov
fs
pushl
bound
dec
idivb
mov
xor
ds
scas
hlt
mov
cmp
xor
fstpt
add
mov
icebp
fldl
stos
lret
in
adc
and
jne
jl
xor
fs
daa
cmc
clc
repnz
insl
aam
out
push
aam
pop
cs
imul
inc
mov
sbbl
cs
ss
mov
fsubl
int
push
ljmp
adc
inc
sbb
adc
add
add
rcll
xor
je
add
pop
pop
ljmp
inc
fsubp
push
adc
sbb
xor
adc
sbb
inc
xor
jle
and
imul
xor
pop
dec
cltd
out
jns
sub
repz
cwtl
test
jge
adc
adc
ret
jle
das
je
push
movsl
add
leave
mov
mov
xchg
roll
popa
jmp
mov
repnz
imul
in
cs
pop
lahf
outsb
lds
pop
scas
mov
ja
mov
psubusw
ror
aaa
aad
sbb
test
xor
push
iret
cltd
cli
inc
frstor
dec
lcall
push
sub
fmuls
js
jae
mov
outsl
pop
add
js
fldcw
std
adc
or
adc
lods
in
jbe
pop
in
call
cli
sbb
and
jnp
dec
ficoms
add
outsl
out
addr16
jo
jae
inc
and
jecxz
push
ss
pop
lea
mov
std
cmpb
loopne
mov
dec
lret
add
pushf
cltd
test
fcmovbe
push
js
cltd
fildl
jl
push
aaa
scas
mov
xlat
cli
mov
jg
test
push
fildl
out
stos
add
inc
in
nop
movsl
stc
xor
test
fs
adc
test
movsl
int3
cmpsb
pop
fwait
lahf
xor
data16
fisubrl
loop
aaa
sahf
mov
xor
in
dec
out
pop
cmp
push
test
test
inc
test
idivb
adc
in
loope
test
out
js
rorb
cmp
ret
mov
adc
hlt
imull
aam
sub
daa
ret
scas
rolb
bnd
shlb
out
jae,pt
and
shrl
xor
adc
jb
mov
mov
out
lret
stos
push
in
cmp
or
dec
xor
cmp
jmp
out
pop
leave
test
iret
and
movsl
das
fiadds
jmp
jbe
cmp
sbb
jge
pop
dec
and
repz
mov
and
adc
push
sahf
lods
outsl
leave
jle
push
cmp
fstl
adc
add
jb
rcrb
jo
dec
and
jo,pn
out
jae
push
loope
xor
lds
ret
out
aad
popf
insl
aas
mov
dec
std
pop
adc
jp
lret
into
aas
fcoms
lods
stos
js
scas
sub
enter
out
pushf
xchg
mov
mov
inc
add
xchg
in
andb
inc
enter
hlt
test
pop
das
mov
fbstp
shlb
insl
sbb
cmp
adc
mov
push
xchg
dec
ljmp
gs
mov
and
push
call
and
xchg
js
loop
nop
imul
shrb
or
ljmp
stos
cmp
push
sub
das
jo
inc
add
xchg
inc
and
jmp
push
daa
les
test
pushf
ja
push
nop
pop
push
and
jecxz
das
jp
out
std
fstps
sbb
push
add
scas
add
pop
add
sar
lds
cmpsb
test
lea
js
sub
fs
sbb
pusha
mov
dec
jne
xchg
adc
push
flds
mov
repnz
ror
push
lock
lahf
js
dec
scas
out
jge
dec
jo
xchg
jb
out
pop
int
adc
xchg
inc
pop
lds
sahf
pusha
sub
push
pop
mov
push
push
test
mov
xor
movsb
cmpsb
sbb
ficoml
out
jl
inc
scas
outsb
gs
pop
scas
sti
xchg
ret
insl
cmp
sbb
fsubrs
cltd
sub
mov
pop
adc
xchg
sbb
lcall
sbb
add
sub
xorl
aad
into
into
gs
xchg
mov
pop
inc
xchg
or
inc
dec
cli
and
jl
iret
leave
sub
inc
clc
add
cld
jge
mov
hlt
mov
sbb
jns,pn
push
jmp
lea
cmpb
rcll
jp
lea
mov
push
xor
fidivrs
mov
das
pop
sub
jo
mov
movsl
shll
lods
dec
fcomps
xchg
jne
pusha
jb
adc
ja
pop
mov
mov
bound
out
inc
inc
stc
insl
push
stc
nop
and
dec
mov
mov
mov
xor
push
aas
lods
out
add
mov
loop
test
xor
test
leave
mov
in
mov
jno
mov
sahf
cmp
lods
add
jae
lret
inc
lret
call
jp
imul
add
or
cmpb
mov
cmpl
push
mov
mov
je
ja
mov
sub
mov
repz
hlt
cmc
pusha
sub
popf
cmpsb
mov
jnp
test
cmp
repnz
xor
inc
sbb
out
or
mov
mov
addl
lds
pop
pop
mov
pop
mov
add
sbb
cmp
push
add
xor
mov
jbe
jg
pop
out
js
pushf
sub
xchg
xchg
mov
and
jne
jge
mov
ja
xor
movsb
jbe
push
in
sub
lahf
clc
pop
xor
lea
mov
lahf
movsl
cmp
sarl
stos
inc
push
pusha
pop
out
add
xchg
in
neg
clc
mov
ss
xchg
mov
cld
sahf
pusha
or
arpl
or
xor
loopne
iret
jb
adc
xor
aad
mov
fistps
je
sub
add
dec
stos
lods
std
clc
mov
pusha
mov
mov
clc
ret
push
stos
jae
sti
push
fbld
jbe
loope
pop
ret
push
ret
xor
addr16
cmp
xchg
mov
push
or
int
pop
adc
cmpsl
jge
stos
addr16
fstps
insb
setnp
in
es
jl
out
popf
mov
popa
push
sbb
out
icebp
lret
rorb
adc
add
or
or
adc
mov
push
mov
or
or
and
push
push
and
push
das
xor
popa
pop
mov
add
mov
sub
inc
cmp
mov
aad
cmp
add
pop
and
adc
in
pop
fidivs
repnz
cmpsl
icebp
sysexit
in
xor
cmc
sub
int3
in
idivl
push
out
push
or
jnp
rcl
outsl
hlt
jne
or
inc
loope
pop
daa
loope
cwtl
and
hlt
fs
fsubrs
cld
inc
dec
and
pop
xor
or
movsl
notb
mov
cmc
scas
mov
jno
loope
inc
push
addl
scas
push
add
icebp
and
mov
mov
add
add
mov
mov
cmp
out
add
cltd
sbb
outsl
sahf
push
scas
lock
stc
mov
scas
cltd
sbb
jno
hlt
push
insl
add
cltd
bound
fstpl
jb
nop
pop
mov
adc
cwtl
aam
into
test
or
in
jmp
xor
cs
cmpsl
inc
movsl
cltd
push
mov
inc
lea
das
es
pop
push
ret
jno
jno
mov
sar
jge
mov
pop
js
cmp
imul
pop
stos
punpcklwd
inc
pop
dec
das
pop
adc
inc
or
and
sbb
cs
test
les
or
add
fcmove
inc
mov
sbbl
js
push
pushf
das
scas
shlb
fildll
out
lret
jae
push
mov
ds
mov
lahf
xchg
xor
dec
dec
lds
imul
sbb
ficomps
xchg
cmpl
pop
inc
gs
sbb
mov
xor
nop
and
xchg
cmovle
subl
sub
cmp
pop
xor
xor
push
test
xchg
mov
je
orb
and
jecxz
into
in
push
cmc
xchg
std
jmp
imul
jmp
cmpsl
lret
mov
sub
jo
test
iret
mov
aas
xorl
ficomps
fwait
aad
insb
addr16
popa
lods
or
test
push
ljmp
lock
cld
mov
sarb
jns
inc
repnz
outsl
lods
pop
mov
movsl
mov
sub
cmp
or
je
mov
les
or
jge
inc
fs
adc
mov
dec
xchg
inc
mov
and
pop
or
popf
gs
fcoms
cmp
mov
cmpsl
inc
les
cmp
xchg
leave
cmpsb
mov
iret
sbb
cwtl
and
fistpl
jbe
xor
je
aad
outsl
xchg
push
loope
mov
pop
sub
mov
ja
cwtl
in
lods
sub
std
fwait
or
xchg
add
jecxz
pop
mov
in
jp
fwait
sub
out
aaa
mov
icebp
dec
pop
fucomi
imul
jmp
jo,pn
sbb
out
dec
sub
sub
and
stos
inc
loope
xchg
pop
mov
pushf
sti
add
test
bound
pop
mov
mov
fwait
sub
out
jb
out
or
dec
adc
inc
iret
popf
inc
adcl
lret
xchg
das
mov
xor
call
fisubs
mov
mov
fnsetpm(287
scas
hlt
fcmovnb
add
outsl
adc
add
xor
lods
into
call
mov
testb
vcmppd
lret
mov
lahf
leave
lret
sahf
bound
xor
scas
dec
push
push
mov
int
add
or
repnz
addr16
xchg
data16
dec
imulb
rcrb
sub
jno
xchg
mov
mov
add
adc
fld
cmc
jae
mov
push
or
and
insl
lahf
adc
addr16
jge
xchg
sub
xchg
ffreep
mov
sti
pop
xor
push
ljmp
sub
les
mov
iret
push
jnp
insl
dec
test
xchg
mov
jl
mov
or
sbb
mov
lea
add
xor
inc
sbb
pop
repnz
lods
inc
cld
jmp
jmp
cs
or
leave
cmpsb
das
xchg
js
mov
inc
movsb
mov
and
cltd
push
rol
aam
pop
adc
jmp
sbb
stos
xchg
push
stos
or
loope
push
sbb
dec
imul
mov
mov
loopne
xor
xchg
and
mov
jmp
rol
pushf
sub
and
shl
pop
cmpsl
xchg
push
rorb
sbb
sbb
cmc
out
clc
and
jns
mov
push
push
push
sarb
pop
fisttpl
xor
loope
push
scas
inc
xchg
imul
push
add
pusha
test
cmc
lea
jbe
mov
push
sbb
aam
and
je
pop
inc
add
imul
or
ret
jns
mov
jne
fsubl
sbbl
xchg
cltd
mov
in
or
cmpsb
addb
xchg
jl
xchg
jo
xchg
je
cltd
pop
pop
lret
sbb
scas
adc
pop
lcall
loope
mov
in
jecxz
or
xlat
push
add
push
scas
cmp
xor
cld
shrb
int3
mov
ds
inc
mov
mov
jge
lahf
lods
xor
xchg
sbb
sbb
es
rcll
lods
xor
add
inc
gs
cltd
sub
mov
loope
sub
pop
sbb
sbb
add
cmp
leavew
cwtl
jge
add
mov
movsb
dec
outsb
or
sbb
lea
je
pop
dec
das
pop
dec
cltd
xor
jg
hlt
mov
mov
rcl
aaa
inc
pop
sbb
push
aaa
movsb
lret
xlat
adcl
mov
loop
or
or
ss
jnp
dec
mov
aam
aas
sub
mov
sub
add
add
adc
jno
xchg
movsl
xchg
loope
jmp
std
mov
xor
dec
push
pop
repnz
pop
inc
sub
icebp
scas
stos
dec
add
movsl
pushf
pop
push
nop
iret
insl
dec
sub
fiadds
xchg
push
xchg
cmp
inc
or
ret
adc
gs
mov
sub
sbb
push
mov
fiadds
fcoms
int3
adc
sub
aam
mov
sub
add
jg
aam
out
dec
jecxz
subb
jne
xor
outsl
out
out
mov
out
xchg
push
mov
cli
adc
out
inc
adc
lea
inc
pop
jns
pop
jb
jbe
fs
add
ds
cmpsb
inc
mov
out
xchg
xor
jl
pop
repz
mov
pushl
bound
pop
push
inc
scas
lods
cltd
loop
pushf
push
push
mov
push
test
xchg
xchg
cs
clc
xchg
add
les
jp
dec
pop
js
or
dec
lret
das
mov
mov
adc
mov
jnp
jge
jg
mov
pop
xor
imull
pop
testl
sbbb
insb
and
call
fs
cli
xchg
js
inc
std
shld
dec
insl
ret
test
insl
bound
aas
cli
sub
daa
bound
aaa
lods
mov
xor
shll
ds
fsubrl
movsl
jmp
in
adc
cmp
popa
ss
cmpsl
das
div
movsl
add
dec
push
sbb
inc
stos
cs
dec
inc
or
inc
mov
pop
inc
out
outsl
addr16
mov
and
add
xchg
bnd
mov
jb
sbb
movsb
inc
movsl
psubsb
xchg
fisubrl
dec
cmc
jg
cmp
mov
fcomi
push
adc
xor
add
adc
lods
addr16
dec
pop
push
mov
inc
xchg
fdivrl
cld
ljmp
xlat
std
fimull
lds
mov
lock
cmp
inc
nop
rorb
adc
mov
mov
pop
pusha
pushf
sahf
pop
push
imul
sbb
and
mov
xchg
inc
ret
push
sub
lds
xchg
mov
je
xchg
lods
js
popa
mov
mov
fwait
inc
push
xchg
cmpsl
das
cmp
arpl
sub
cmc
mov
push
cld
loop
cs
cmp
dec
mov
icebp
sbb
movsb
inc
in
or
cwtl
arpl
xor
outsb
jecxz
loopne
and
dec
lock
mov
push
test
xor
push
sbb
pop
jle
mov
inc
cltd
jg
xchg
sub
dec
cwtl
insl
scas
sbb
dec
xchg
or
pop
call
fwait
in
ret
imul
push
in
js
xor
and
mov
push
icebp
mov
pop
xchg
adc
pop
scas
negb
sbb
mov
or
mov
loope
inc
pop
inc
cmp
push
push
pop
imul
loopne
pop
cltd
sbb
loopne
ja
cmp
idiv
mov
mov
jno
sub
or
xchg
cltd
dec
int3
add
fmul
enter
or
inc
sbb
lret
loopne
xchg
dec
push
call
aad
inc
cmp
or
imul
ror
popf
cmp
int3
mov
stos
cmp
cli
cmp
pop
adc
push
sub
jp
sub
fwait
js
insb
xor
xchg
aaa
lret
test
ja
lock
test
test
cmpsb
mov
fisubs
shrb
cmpb
repz
add
leave
jo
das
lods
test
adc
cmp
mov
mov
movsl
andl
or
mov
icebp
loope
jl
sbb
inc
jl
and
std
fmul
imul
aaa
cwtl
or
je
mov
and
jp
add
adc
sub
push
in
loop
mov
sub
dec
dec
dec
popa
adc
scas
xlat
pop
int3
push
enter
cmp
movsl
add
cmp
sub
mov
pop
aad
cmpsl
jae
pop
sub
sub
in
das
xchg
ljmp
cmp
fistps
mov
mov
push
and
add
outsb
or
and
jg
test
pop
leave
leave
ljmp
popa
and
cld
and
imul
pop
pop
xor
jg
add
ja
imul
pop
cmp
pop
sbb
test
xor
inc
es
jns
and
jmp
pop
outsl
adc
scas
daa
adc
mov
fsubl
negb
loope
inc
push
jecxz
outsb
cmp
push
not
mov
and
jmp
leave
cmp
adc
jg
jmp
lods
and
add
jnp
push
and
nop
sub
rorl
push
testl
inc
sar
into
xor
loope
imul
jmp
mov
outsb
push
ret
fldt
popa
hlt
mov
ljmp
test
sti
lock
and
ja
jns
sub
gs
push
iret
pop
add
inc
sbb
rcr
outsl
xchg
paddb
pushf
cmp
add
add
or
mov
or
xchg
xchg
cmp
sbb
jmp
aaa
cmpsb
pop
xor
adc
jb
xchg
push
inc
pushf
inc
cli
xchg
adc
mov
sub
in
aas
int
clc
repz
inc
fwait
cmp
cmp
or
xlat
scas
and
jecxz
mov
lret
out
adc
sar
jns
fbld
insb
jo
sbb
add
xor
pop
cmp
cmpsb
and
adc
sahf
test
lcall
xor
cmp
sub
outsl
popf
inc
addb
lock
out
xor
inc
push
imul
outsb
xlat
scas
ljmp
inc
sbb
scas
mov
mov
rorl
push
cs
movsb
scas
xchg
xor
sub
sbb
xchg
pushf
int3
ja
mov
xchg
imull
cli
mov
pushf
hlt
dec
lret
push
dec
adc
cwtl
adc
loopne
outsb
cmp
pop
ds
test
test
stos
sbbl
jmp
push
fmulp
repnz
and
mov
cmpsl
xor
out
cmp
cmc
adc
ds
movsb
mov
clc
aaa
adc
insl
inc
jp
sbb
outsl
in
or
xchg
and
and
xchg
subb
in
outsb
mov
fcmovbe
cwtl
mov
lock
sbb
aad
repz
mov
imul
shlb
or
mov
cmpsb
sbbl
into
xor
cwtl
insb
bound
sahf
sub
imul
lds
dec
push
dec
pop
cmpsb
mov
add
pop
mull
subl
aas
insl
jg
cwtl
fdivrl
jecxz
daa
cmp
lock
pop
mov
or
enter
mov
stos
shll
pop
lods
aam
add
add
sbb
fbstp
mov
dec
dec
dec
add
stos
and
adc
jo
and
dec
adc
push
xchg
enter
jp
sbb
xchg
fcomi
mov
movsb
sbb
loopne
scas
mov
loopne
test
insl
std
sbb
rcrb
ljmp
sbb
pop
mov
lea
in
push
jp
mov
pop
xor
mov
mov
shl
mov
push
imul
lret
dec
mov
inc
imul
repnz
and
movsb
cmp
sub
xchg
jno
pushf
bound
dec
mov
jmp
adc
lahf
sbb
jp
mov
ss
push
lock
push
repnz
sub
xor
inc
nop
adc
mov
sahf
add
in
xlat
std
dec
pop
mov
lods
push
sbb
sarb
out
in
jmp
adc
sbb
lcall
push
mov
or
mov
push
aas
sbb
into
jmp
iret
jecxz
inc
loopne
inc
icebp
mov
test
fmuls
cmp
jae
lods
pop
cmp
mov
mov
daa
mov
dec
push
or
pop
sbb
sub
mov
dec
push
jbe,pn
or
push
cmc
mov
or
adc
dec
sbb
fsubs
rep
or
mov
daa
and
cli
fistl
jns
cltd
mov
cmp
in
aaa
adc
push
mov
lahf
jb
sub
sbb
cs
dec
mov
nop
pop
pop
test
push
rcrb
pop
cmp
cmpsb
jne
xchg
sub
icebp
les
xchg
or
outsb
sbb
push
sbb
movsb
jne
fs
imul
xchg
mov
adc
test
dec
dec
push
and
sarb
push
sub
js
jae
jno
xor
movsb
arpl
aas
cmp
divb
or
pop
imul
or
jbe
clc
ret
test
idivb
outsb
mov
mov
int3
adc
cmpsl
int
in
ds
loop
inc
push
jb
sbb
mov
addl
inc
repz
int
adc
sub
loope
pop
sub
sar
out
clc
jae
push
xchg
insl
push
pushf
or
sbb
mov
loopne
sbb
dec
outsl
pop
test
test
jle
and
cmp
or
lods
xchg
push
push
arpl
lahf
xor
fsubrs
adc
inc
divb
dec
test
pop
xchg
or
iret
iret
jnp
mov
addr16
ret
fisubrs
mov
lret
ficoms
jne
xor
shrb
imul
das
cmc
push
sbb
push
mov
sbb
xor
adc
insb
bound
in
mov
mov
lods
cs
and
mov
cmp
ret
xlat
push
xor
insl
repnz
sbb
add
add
cmp
mov
xor
xchg
in
jne
aas
cltd
jno
mov
push
pop
mov
add
leave
aaa
leave
int3
jbe
addr16
xlat
pop
mov
jg
fimull
sub
testb
loopne
xchg
mov
mov
je
pop
int
jns
xchg
loop
movsb
inc
cs
fldt
testb
sbb
dec
adc
outsb
out
mov
lods
jae
fsubs
sub
addr16
scas
cmpsb
cmpsl
xorb
std
lahf
fstl
cs
mov
inc
jl
scas
imul
sbb
jno
sub
mov
fs
cmp
mov
test
fsincos
and
xor
xchg
daa
xor
pushf
or
cli
mov
jbe
loope
lahf
mov
mov
in
arpl
pop
in
xchg
add
fidivrl
testb
enter
or
and
movsb
pop
cmp
repnz
rorl
mov
lds
ret
jg
fsubrs
jb
pop
xchg
dec
inc
pop
mov
jne
xor
pushf
adc
mov
add
push
mov
cmpsb
push
rclb
or
ja
in
mov
jecxz
add
out
jns
push
imul
and
adc
sbb
dec
add
ds
jae
scas
mov
lcall
mov
scas
clc
fwait
lret
jo
out
cwtl
sub
es
arpl
sarl
dec
mov
ss
repz
out
jns
push
rcr
ret
adc
pop
xchg
lcall
sbb
xorb
repnz
and
in
push
sbb
clc
mov
add
dec
shll
jmp
pop
xchg
jae
xchg
xor
mov
cmp
dec
movsl
add
cli
inc
mov
fcmove
cmc
xchg
aas
inc
push
mov
es
fld
mov
add
xor
cmpsl
outsl
rolb
or
pushf
imul
repz
push
lock
mov
inc
js
insb
cld
scas
div
lahf
dec
popa
clc
push
int3
add
xor
inc
ss
sar
adc
adc
mov
mov
xor
es
lods
rcrb
mov
arpl
lock
inc
inc
mov
mov
mov
add
cmp
adc
jle
pop
xor
adc
xchg
les
sbb
adc
cs
mov
aad
or
sbb
push
in
adc
xchg
popf
fstl
imul
int3
repz
icebp
je
outsl
arpl
and
or
scas
mov
pusha
dec
sbb
data16
repz
sub
pop
cwtl
out
shll
leave
mov
jl
imul
out
loope
add
mov
push
fnstcw
loop
cmpsb
jge
int3
push
insl
add
jl
arpl
and
jg
or
popf
xor
gs
dec
pop
push
faddl
lods
ja
stos
call
jg
test
and
xchg
push
out
lods
xor
into
fdivp
out
mov
cmp
jnp
xchg
cmp
pop
in
mov
sti
jg
enter
call
mov
loope
mov
push
std
jg
pop
rclb
dec
imul
rol
inc
je
scas
and
jge
inc
jg
dec
loop
fisubrs
test
pop
or
xchg
push
mov
stos
movsl
stc
push
pop
add
jl
push
mov
data16
lcall
lock
lds
in
push
in
insl
adc
movsl
mov
xchg
daa
ja
mov
xchg
mov
cwtl
jne
lds
dec
daa
mov
or
mov
mov
shlb
aam
pop
dec
mov
lods
daa
cmpsb
inc
cmp
adc
arpl
xchg
pop
repz
lds
xlat
orl
lahf
inc
or
inc
arpl
movsl
and
loopne
xchg
aaa
or
lahf
cli
add
fidivs
push
adc
dec
jmp
pop
or
adc
dec
fmull
ret
jecxz
mov
pop
xchg
push
add
sub
mov
xor
xchg
mov
leave
shll
inc
push
movsl
out
mov
aaa
iret
jns
fmull
test
test
jmp
mov
inc
or
pop
out
faddl
sub
dec
cmpsb
mov
or
dec
push
hlt
jle
sbb
fiadds
popf
loopne
adc
mull
inc
mov
testb
flds
dec
out
into
xchg
aaa
jmp
pop
psraw
ljmp
xchg
dec
scas
push
push
idiv
sub
aam
xor
xchg
outsb
push
mov
loop
push
scas
js
mov
cmpsl
movsb
or
pop
cmc
pop
dec
xlat
cli
ljmp
int3
loopne
xlat
dec
jo
call
mov
ljmp
sahf
add
xor
mov
hlt
lock
push
dec
cltd
imul
mov
add
pop
and
lret
cmp
mov
push
jge
rolb
mov
xorb
and
sbb
sarl
notb
jge
neg
negb
mov
sub
sahf
ret
cmc
sbb
and
movsb
add
fimuls
lods
call
xchg
stos
insb
push
or
mov
aad
jge
out
sahf
popa
mov
addb
pop
sbb
fadd
xchg
jno
je
push
adc
push
sbb
sub
sbb
mov
je
mov
mov
mov
sbb
cmp
andl
mov
and
or
lret
mov
dec
pop
adc
cmp
add
cmp
pop
aam
pop
xor
mov
test
les
les
aad
or
cli
icebp
mov
stos
xchg
push
add
in
sbb
into
mov
mov
and
mov
popa
xchg
xchg
int3
mov
cwtl
xor
fimuls
dec
adcl
mov
mov
push
jg
in
add
sub
pop
push
or
push
popa
sub
into
sti
and
mov
shr
outsb
push
addr16
popl
int3
inc
inc
or
into
or
das
and
xlat
data16
js
icebp
cmp
rcl
cli
adc
jne
mov
sbb
xor
and
iret
or
int
repnz
idiv
addr16
inc
xor
mov
lahf
xchg
fs
fcmove
cli
dec
mov
lahf
lcall
clc
jnp
and
insb
pop
aad
dec
or
lcall
scas
shrl
xlat
es
sbb
mov
inc
nop
pop
jb
rol
xchg
mov
imul
lods
push
fwait
movsl
in
adc
mov
mov
and
lret
outsb
sbbb
mov
or
mov
lds
mov
sbb
xchg
dec
jo
repz
mov
in
pop
mov
mov
xor
mov
add
and
dec
inc
insb
je
sbb
les
inc
cmp
lahf
imul
call
std
nop
cmp
imul
jo
cmp
push
xlat
rorl
mov
in
dec
pop
mov
mov
lret
dec
outsl
fimull
dec
pop
loope
push
and
addr16
dec
cmc
hlt
sahf
cmp
aam
pop
fmuls
jb
pop
and
ret
push
movsl
jl
xchg
jp
imul
test
mov
scas
mov
mov
mov
cmpsb
dec
jno
daa
dec
repz
cmp
les
jo
scas
addb
mov
pop
pop
loope
repz
xchg
hlt
sub
xchg
dec
and
cli
pusha
and
or
xor
jns
cmp
icebp
sbb
imul
adc
fmull
call
inc
dec
ja
loopne
out
ljmp
into
leave
sbb
lea
lds
mov
mov
dec
mov
add
daa
jno
dec
cmp
out
fcomps
jmp
out
pop
mov
push
cs
dec
mov
dec
aam
push
xchg
ds
cltd
into
scas
fisttpl
out
jmp
jae
pop
imul
pop
xor
jle
xor
dec
and
into
jb
outsb
aaa
mov
leave
repnz
aad
inc
fsts
test
out
add
pop
xchg
jge
shrb
sbb
insb
xchg
stos
fidivs
mov
ret
sbb
ds
push
xor
or
xchg
test
pushf
sbb
movl
and
sub
mov
cltd
movsl
pop
cmpsl
xor
and
orb
pop
lretw
push
fildll
insl
jecxz
xchg
fsubr
inc
int
mov
int
repz
sub
insl
subb
testl
movsl
lods
arpl
inc
and
pop
lahf
jmp
mov
sahf
pop
sbb
xadd
ds
mov
cmp
cmp
je
jo
insl
cwtl
jecxz
mov
xchg
pop
xchg
mov
fdivrs
inc
cmc
jne
cmp
daa
push
int3
hlt
ljmp
dec
pop
cmp
mov
xchg
lock
mov
dec
pop
test
or
std
les
add
cmpsb
fwait
inc
pop
adc
sbb
call
mov
into
push
inc
test
repz
cmp
mov
or
or
cmp
aas
bndstx
and
cli
ja
xchg
cwtl
pop
sbb
add
scas
pop
jg
pop
jne
loopne
xor
mov
jle
notl
sub
sbb
and
or
fcompl
xchg
popa
lret
sbb
dec
fidivs
inc
arpl
mov
loope
out
adc
divl
mov
out
mov
je
mov
popw
cmp
jne
cltd
lds
lock
xorb
adc
cwtl
mov
rcl
push
inc
xor
xlat
jecxz
dec
mov
fisttps
push
xor
mov
and
pop
enter
mov
out
adc
sub
nop
mov
js
shll
or
mov
das
ljmp
sbb
mov
jge
pusha
sbb
sbb
add
popa
lahf
psubusb
pusha
xor
or
pop
cmpsl
push
xor
nop
cmp
fildl
mov
lods
pop
lock
xchg
repnz
in
sub
mov
mov
adc
inc
xchg
idiv
xchg
inc
pop
out
push
xor
cmpsl
aas
cmpl
call
jl
or
jns
mov
add
test
cmp
cmp
xor
mov
mov
xchg
pushf
roll
add
xchg
cmc
jns
lea
scas
xchg
mov
jg
out
inc
ret
add
sahf
jmp
push
leave
roll
dec
test
push
out
sbbb
sahf
repz
pop
push
incl
in
repnz
sub
in
jbe
mov
mov
cmp
shl
cmp
jmp
insb
dec
dec
fisubrs
sbb
cwtl
fwait
jle
dec
bound
ljmp
add
repnz
shll
ljmp
mov
arpl
sti
pop
cmpsb
xlat
shll
aad
mov
mov
push
mov
xchg
mov
dec
loop
jbe
sub
clc
mov
cld
fisubrl
xchg
not
pop
inc
push
repz
push
adc
jge
push
notb
ret
push
and
mov
cmp
push
mov
bound
and
jnp
daa
out
gs
imul
popa
mov
and
and
sbb
cmc
mov
sahf
jl
inc
popf
inc
aad
xchg
xchg
push
fmuls
loopne
movntps
mov
popa
push
xchg
data16
inc
out
out
cwtl
das
pop
popa
js
xchg
lds
sub
pop
rorb
xor
pop
and
decb
mov
xor
add
mov
and
push
into
adc
dec
repz
dec
xor
xor
dec
pop
push
test
mov
or
dec
call
xchg
std
and
int3
and
and
xor
dec
mov
pop
jno
aas
jmp
out
pop
mov
xor
push
xchg
js
leave
dec
sub
push
int3
mov
aas
or
aaa
lods
test
mov
loopne
xchg
dec
xor
lods
xchg
push
or
sti
xchg
jo
sbb
les
sub
es
aas
adc
mov
stos
incl
xor
pop
and
mov
mov
scas
jmp
loop
or
fdivl
dec
or
repz
inc
in
or
sub
sub
mov
out
stos
sbb
and
add
pusha
mov
inc
sti
or
cmp
clc
cs
sbb
dec
aas
dec
rep
xor
js
dec
stos
xor
pusha
loope
stos
mov
push
pop
adc
cwtl
dec
cwtl
inc
add
cmp
inc
lcall
xchg
arpl
xor
jecxz
xchg
sbb
jmp
insb
mov
in
scas
adc
pop
test
or
pop
push
lods
or
ret
enter
rcrb
lret
lods
mov
xchg
nop
test
push
jb
cmpsl
mov
inc
ret
cmpsl
xchg
fcom
sub
xchg
jo
aad
cs
cmp
xchg
outsb
hlt
test
mov
push
sti
inc
dec
loopne
cmp
push
bound
jmp
pusha
fisubrl
push
jno
iret
or
test
and
mov
sub
jg
mov
dec
movsb
loopne
les
sub
roll
outsb
sub
jmp
inc
jbe
mov
movsb
test
addb
mov
add
es
mov
cmp
pop
push
cli
mov
insb
mov
add
xor
xorb
sbb
daa
js
push
rcl
pop
xorb
xchg
aad
movsl
xchg
dec
cltd
adc
xchg
sahf
mov
add
testl
dec
jg
mov
push
enter
lahf
cmp
arpl
and
loopne
stos
and
outsb
push
aas
sub
add
test
out
imul
call
push
hlt
ja
jecxz
pop
mov
xchg
je
push
xchg
add
push
inc
mov
es
jno
popa
and
sbb
call
mov
push
push
xchg
testl
stos
lods
mov
int
out
mov
xchg
ja
mov
sahf
cltd
bound
mov
dec
adc
scas
into
jmp
ret
inc
xchg
add
adc
mov
xchg
and
jge
shlb
cmc
xchg
lea
daa
and
mov
aas
test
mov
sub
mov
jmp
das
movsb
js
xlat
mov
paddb
mov
sahf
mov
outsb
andl
out
jp
push
adc
pop
out
mov
xor
and
mulb
ljmp
pop
out
jecxz
idiv
pop
add
dec
adc
xchg
pop
mov
add
sbb
roll
inc
or
adc
xchg
call
clts
mov
add
dec
stc
mov
lea
lcall
popa
sbb
gs
roll
ja
movsb
fdivs
outsb
lahf
cmp
inc
mov
push
loopew
inc
add
je
sub
mov
rcrl
mov
jb
pusha
sub
push
lret
jmp
lods
mov
addl
enter
xor
int
into
in
pushl
sbb
std
jmp
pusha
jmp
repnz
mov
out
sbb
pop
mov
inc
cmpsl
mov
adc
sub
jp
out
inc
cmpsb
idivl
nop
and
cld
add
pop
jbe
fwait
imul
pushf
xor
and
test
adc
cmp
add
sub
mov
mov
pop
test
js
fwait
inc
and
lret
xchg
lock
pop
inc
ret
outsl
ss
in
popa
mov
movsl
push
and
sti
mov
nop
xchg
daa
sti
jno
fidivrl
stos
cmp
cmp
add
sahf
aad
sbb
inc
adc
outsb
test
push
add
in
xor
mov
iret
and
scas
xchg
jg
lods
or
push
hlt
stos
loope
fidivl
xor
es
in
fistl
or
js
ljmp
lcall
push
test
cltd
fdivrl
sub
popa
mov
lock
dec
aad
adc
mov
in
push
sbb
dec
add
xchg
sahf
mov
sti
mov
jns
jnp
and
lret
sub
lods
aas
mov
ja
je
loope
cmpsl
and
xchg
pop
add
daa
mull
stos
add
lods
leave
test
test
mov
aaa
dec
iret
dec
inc
cli
cld
mov
das
or
addr16
sub
ret
jns
mov
add
jb
sbb
mov
inc
pushf
into
scas
cmp
cmc
shll
cmpb
sbb
cltd
fdivrl
addr16
sbb
jns
sbb
stc
adc
cmpsl
cmp
xor
das
push
and
das
in
push
add
adc
inc
pop
dec
sbbl
sbb
mov
sub
mov
sub
dec
sbb
dec
shll
frstor
stc
jmp
pop
cwtl
fs
ljmp
cmpsb
mov
sbb
leave
xchg
cmp
test
jecxz
jo
jp
mov
push
mov
mov
pop
xlat
loop
ror
dec
adc
jl
sub
sub
xchg
cwtl
jl
xchg
add
xchg
scas
mov
jle
sub
jle
les
jno
pushf
adc
fisubs
push
sub
adc
mov
popa
jl
sub
aas
push
cwtl
jns
stos
lcall
inc
pop
and
jecxz
ret
scas
inc
sbb
mov
cmp
xor
test
ret
push
je,pn
or
data16
fldenv
loope
lcall
cmp
push
ret
lcall
idivb
stc
pop
fidivl
jno
imul
test
fs
pop
lock
int3
adc
ja
mov
lret
cmp
mov
cmp
pop
aam
pop
out
pop
arpl
clc
cltd
jno
fisubl
mov
xchg
pop
aas
cmp
mov
loopne
lahf
arpl
repnz
or
fists
fldpi
dec
push
fsts
sub
out
fidivrs
pop
stc
and
mov
orl
rolb
and
stc
sub
pop
jne
inc
aaa
ss
aad
lods
push
ss
ja
pop
sbb
adc
cli
test
aad
fwait
sar
add
xchg
fs
pop
mov
xchg
jno
scas
jp
in
add
fimull
xchg
sub
ss
jo
mov
enter
test
imul
pop
adc
stos
mov
int3
and
or
dec
inc
scas
dec
pop
enter
nop
stos
stos
filds
push
clc
je
push
sub
mov
lods
sub
sahf
push
int3
js
sbb
jecxz
stos
iret
or
mov
and
stos
addl
inc
push
push
rcll
push
rclb
pusha
mov
mov
lods
mov
cmp
and
lock
cld
pop
lods
data16
sar
pop
sarl
lcall
add
adc
jl
call
lret
add
fsubrl
nop
and
xor
and
cwtl
xchg
push
mov
pop
cmpsl
das
repz
xor
sbb
or
int
or
pop
adc
and
ss
cmc
int3
sub
je
mov
mov
xorb
mov
jmp
mov
je
mov
inc
and
sbb
cmp
push
lods
jns
add
or
lahf
idivb
lds
cmp
daa
mov
jb
sbbl
popa
cmp
out
rcrl
ficoms
scas
mov
mov
push
lods
rorl
mov
jo
shll
das
icebp
add
loop
jns
sub
mov
jno
pop
push
dec
js
push
imul
sbb
mov
fcomps
jg
pusha
lods
clc
jne
jle
aas
push
xchg
aaa
icebp
sarb
aas
ss
arpl
push
push
lret
pop
insb
mov
mov
push
rorl
inc
aad
inc
jno
mov
daa
jl
sbb
xor
mov
jmp
mov
jb
stos
cmc
movsl
mov
cltd
nop
dec
xlat
add
xor
and
jg
adc
jb
fs
dec
jae
nop
fistl
pusha
leave
jae
cmpsl
cmp
dec
sub
xor
aas
pop
pushf
fildl
push
cltd
inc
xchg
cmp
add
push
xchg
xor
push
sub
mov
sti
insl
in
xor
cld
fnsave
ja
shrb
inc
lock
pop
mov
aam
sti
push
or
in
jle
pushf
fmuls
jmp
test
cmp
adc
xchg
jb
jbe
xor
mov
sub
mov
aam
lahf
int
rcl
pop
cmp
push
xchg
sub
cmp
jbe
sub
inc
inc
mov
clc
xor
in
jmp
xchg
mov
mov
pop
rcrl
aaa
cs
push
fisttps
add
fsubrs
test
mov
or
outsl
cs
shrb
scas
xchg
popf
dec
xor
js
inc
pop
cmp
cmp
fwait
mov
fbstp
cmp
pop
push
imul
clc
jl,pn
dec
fbld
jae
jg
add
repnz
xchg
xlat
pushf
xorb
mov
stos
and
ss
nop
push
ss
jo
bound
dec
adc
out
sahf
fpatan
fcoml
call
mov
out
js
jmp
andb
addr16
enter
sbb
enter
xchg
sub
fcoms
jl
ds
lahf
xlat
in
out
dec
jg
fs
call
mov
dec
icebp
mov
rcll
dec
subl
inc
dec
cli
cld
inc
and
shlb
leave
xor
imul
cli
xor
hlt
data16
stc
jp
pop
lock
dec
jp
sbb
cmp
mov
fisubs
dec
imul
xor
add
jecxz
lods
pop
addr16
int3
push
aaa
mov
add
xchg
sti
xlat
lahf
enter
rclb
hlt
jns
jns
aad
imul
sub
pop
mov
insb
mov
lcall
cmc
and
bound
cs
scas
cmp
ss
dec
or
cli
sub
es
je
inc
aam
cs
cmp
hlt
dec
dec
mov
jo
es
and
push
cmp
cmp
orb
addb
push
loopne
add
insb
je
jbe
sahf
push
and
cli
or
sbbl
hlt
cmp
mov
jge
pop
arpl
pop
and
imul
repz
xor
sbb
or
mov
lock
mov
sbb
or
ljmp
sbb
stos
xor
pop
out
pop
xor
cli
cld
sub
xor
sub
push
or
movsl
push
ficoms
push
std
cmp
and
pop
or
leave
test
sbb
adc
jbe
in
call
mov
cmp
mov
jmp
pop
daa
sbb
cmc
mulb
imul
fisubs
push
int3
xchg
sbb
arpl
push
cmp
sub
cs
xor
add
shll
adc
push
pop
and
lcall
jae
adc
nop
jb
add
pop
imul
lods
adc
repz
inc
dec
push
movsb
jnp
and
sbb
cs
cmpsw
dec
stc
xor
sub
popa
or
xlat
push
je
aaa
jle
lods
push
bound
ret
jb
mov
sub
shlb
nop
push
inc
jp
int
or
dec
cmp
loope
sub
sbb
test
out
jb
movsl
jnp
aaa
xor
imul
mov
xchg
jge
roll
adc
mov
xchg
scas
mov
mov
js
sub
xchg
mov
ljmp
push
dec
jo
iret
lret
out
int3
fs
cmp
loope
lret
jnp
and
xchg
imul
sahf
mov
outsl
jnp
inc
sarb
cmp
loopne
mov
push
cltd
cmp
pop
std
mov
sbbl
xchg
pop
movsl
aas
insl
xchg
push
loop
pop
test
fsubs
stos
or
cld
fmull
inc
pushf
je,pt
in
push
or
jmp
mov
leave
lds
das
mov
mov
nop
or
push
scas
sub
or
jmp
jne
mov
pop
insl
mov
jno
lods
sub
stos
pop
subb
aam
and
sbb
leave
xor
pop
les
xor
mov
fists
lcall
fdivrp
ds
fld
icebp
push
and
int3
jnp
outsl
cmpsl
inc
xchg
iret
hlt
pop
dec
gs
sub
cmp
imul
pop
push
cli
out
out
popf
out
sbb
leave
mov
mov
hlt
cmp
outsl
int
fists
mov
daa
jg
fdivrp
and
test
dec
addr16
inc
imul
mov
cmpb
or
push
pop
fisttpll
inc
rorb
mov
in
pop
test
add
push
add
jne
ret
iret
or
and
lret
xchg
shll
jnp
fisttpll
dec
xor
mov
inc
popa
sbb
leave
loopne
pop
insl
mov
sub
pop
aad
lods
pop
mov
pop
frstor
lcall
les
add
xorl
push
mov
ja
outsl
xorb
xchg
lods
adc
loope
xchg
sub
and
mov
or
inc
mov
sbb
mov
insb
jae
sbb
imul
bound
pop
cmp
psubb
jle
in
andb
sub
sub
jmp
in
jle
or
mov
or
lret
push
jne
pusha
iret
lret
adc
cmp
in
push
mov
pop
aas
inc
sub
add
jae
fidivs
mov
lret
adc
mov
sub
push
mov
mov
andl
insl
xchg
loop
lock
ljmp
in
mov
fmuls
adc
pop
add
int
dec
jg
fadds
xor
bound
and
pop
mov
xor
std
popf
subl
sub
push
mov
sbb
loop
or
rolb
ds
mov
arpl
daa
roll
es
xlat
les
add
mov
test
gs
xchg
push
add
cmc
mov
mov
push
xor
adc
out
adcl
lret
fnstenv
rcrl
jne
outsl
sbb
push
pop
pop
dec
pop
xchg
inc
or
mov
jae
xlat
jl
inc
inc
lea
mov
lret
sarl
push
lret
ljmp
and
leave
nop
fdivrs
pop
xchg
xchg
and
test
sub
outsb
retw
pop
sti
fidivs
mov
mov
jp
or
shr
lods
lods
inc
mov
and
cmpsl
push
dec
jno
mov
cmp
stos
jecxz
mov
pop
jecxz
data16
aam
inc
mov
test
jb
and
test
loop
or
add
into
push
fs
sbb
push
out
repnz
pop
jns
stc
push
loopne
jbe,pn
jmp
loopne
data16
push
inc
aaa
aad
out
push
or
stos
shlb
xor
mov
push
fidivrl
aas
sub
out
aam
or
xorb
inc
ficomps
loop
push
out
pop
lds
mov
pop
and
int3
mov
xchg
lock
inc
nop
fsub
xchg
sbb
sar
xor
xor
mov
sbb
pop
add
sbb
push
add
shll
xchg
pop
out
stos
out
mov
add
push
lahf
push
push
fcmove
repnz
adc
shr
cmpb
gs
shrl
pop
icebp
mov
mov
mov
inc
pop
and
inc
test
sub
outsl
lods
pop
adc
cmp
incb
cmp
xor
filds
call
push
ds
dec
fwait
ljmp
fprem1
jnp
push
pop
divl
or
es
stc
add
aad
lcall
repz
adc
imul
push
xchg
add
and
movsl
gs
adc
lock
loopne
adc
mov
mov
les
fstpt
push
sub
addr16
dec
roll
addr16
int
fs
inc
jne
scas
aas
mov
shl
or
enter
lods
filds
cmp
and
xchg
pop
js
test
mov
popa
ret
test
mov
sbb
insb
pop
insb
sub
aas
mov
cli
cmp
lret
fcmovnu
std
xchg
cltd
das
add
sbb
lahf
subb
xchg
mov
jle
call
addr16
cmp
mov
mov
xor
mov
sub
xchg
dec
faddl
jecxz
aas
push
pop
add
push
and
jp
in
jl
sub
and
pop
loop
fsubrl
ja
rcll
xchg
sbb
pop
notb
push
lret
xor
testl
add
add
mov
mov
inc
popa
lods
pop
xchg
cld
pop
adc
sbb
pop
cmovs
cmpsl
jns
jle
shlb
fbstp
outsl
pop
pop
into
inc
scas
mov
dec
test
nop
fistps
bound
xor
loope
xor
lahf
jo
jb
mov
incb
arpl
aas
popa
fistpll
add
sbb
aad
mov
sub
sbb
push
mov
cmpsl
lcall
inc
movsb
popa
add
xchg
or
xchg
int
inc
xor
sbb
mov
mov
lea
add
mov
aam
xchg
scas
mov
mov
mov
sub
out
xlat
arpl
shrb
test
dec
inc
stos
test
jecxz
adc
push
je
or
sbb
sarb
mov
lret
aam
scas
push
lcall
push
mov
sub
mov
icebp
bsf
xlat
js
push
jl
mov
mov
nop
pusha
mov
mov
sub
ds
mov
roll
dec
popa
pop
rclb
hlt
jle
and
sti
jl
dec
push
enter
and
and
mov
push
adc
loope
cmp
test
mov
mov
inc
jnp
jecxz
fldz
push
rorb
mov
je
inc
mov
fisttpll
repz
aam
pop
pop
dec
sar
std
mov
test
inc
and
fdivrp
in
fs
rclb
lcall
sahf
fadds
lret
mov
adc
test
popf
lret
and
outsl
mov
inc
xlat
cmp
mov
jo
lret
fistps
pop
outsb
adc
push
and
loopne
jle
push
push
xor
cmp
pop
je
sbb
sub
fwait
pop
jg
xlat
test
add
push
notl
cmp
rclb
dec
pop
xchg
fidivrs
ds
and
and
pop
xor
mov
or
cwtl
mov
adc
sti
inc
mov
sub
or
jnp
mov
dec
fwait
loope
sbb
mov
test
test
sub
data16
shlb
or
test
xrelease
add
push
jle
lods
loopne
add
ds
shll
dec
inc
push
in
negl
mov
mov
arpl
jle
mov
adc
rol
xchg
cmp
xor
imul
jbe
or
push
mov
sub
inc
cmp
in
std
sub
enter
or
ljmp
ret
dec
xchg
test
cmpsb
push
out
out
mov
add
sbb
ds
and
pop
out
mov
push
loope
and
rorb
mov
cmp
jns
push
arpl
ljmp
jnp
pushf
sahf
sub
and
mov
sbb
loopne
xchg
xchg
test
pop
mov
scas
test
mov
sbb
out
int
scas
push
out
into
push
fcompl
push
or
dec
sub
ss
lret
mov
mov
pusha
mov
sbb
cli
cmp
jns
fbld
dec
jns
mov
into
clc
jno
inc
aaa
jmp
jne
push
stos
or
js
pop
adc
movsb
rep
inc
jl
lea
pop
mov
add
lahf
push
pop
lds
push
inc
dec
cwtl
adc
jne
pop
pop
in
xor
cmp
pop
xchg
mov
fcom
jbe
dec
leave
jbe
daa
fwait
roll
adc
sub
ljmp
in
insb
add
push
test
dec
lret
les
dec
pop
cltd
rorl
mov
push
jns
rclb
mov
leave
ret
push
sub
popl
cmc
movsl
dec
dec
inc
mov
cmp
fldcw
jg
fwait
pop
dec
pushf
push
insb
or
int3
mov
into
inc
mov
pop
mov
fbstp
enter
inc
std
adc
dec
mov
inc
cmp
jmp
add
mov
or
push
adc
inc
cmc
dec
mov
scas
iret
stc
mov
xchg
outsl
lock
dec
fs
je
ds
scas
push
mov
outsb
out
movsb
dec
mov
push
push
into
fldl2t
leave
dec
subl
ja
mov
add
stos
shlb
mov
aas
ret
nop
test
push
aam
data16
sbb
push
lret
fwait
test
adc
add
out
les
fldenv
lea
mov
lock
mov
mov
sub
mov
stos
testb
xchg
push
in
fwait
push
lds
push
stc
lods
pop
xchg
addr16
and
pop
pop
adc
pop
cmp
sbb
xor
icebp
mov
nop
neg
cmp
cmp
mov
sbb
jo
mov
hlt
loop
aad
stos
push
mov
push
inc
pop
xchg
push
push
or
pop
js
push
nop
jle
cltd
xor
incb
and
adc
fucomp
add
adc
stos
aas
repz
scas
popl
xchg
test
bound
mov
cmp
movl
wrmsr
aas
aaa
outsb
fdivs
ficoms
ds
popa
pop
outsb
mov
adc
push
movsb
pop
jno
pop
or
jo
je
mov
pop
and
ja
idivb
icebp
frstor
jns
outsb
pop
in
fcompl
or
xor
adc
or
mov
xor
xchg
pushf
mov
jne
inc
imul
push
movsb
aaa
fidivrs
aad
and
xchg
roll
push
jge
aam
cmp
jl
dec
arpl
ljmp
jno
ss
cmp
jbe
dec
xchg
imul
shlb
sub
sbb
into
stos
movb
mov
adc
add
or
inc
and
sbb
mov
es
aam
loop
add
jmp
jb
sbb
push
rcrl
xor
ja
mov
mov
adc
cmp
shrb
ret
mov
std
addr16
in
adc
lds
mov
aad
lods
pusha
mov
or
ss
lods
enter
inc
dec
testb
push
pop
ds
daa
jne
mov
insl
jecxz
sti
adc
das
sub
jmp
movsl
or
cmp
push
dec
out
std
xchg
ljmp
jmp
mov
daa
icebp
iret
mov
sbb
lods
push
movb
push
cmp
xchg
gs
mov
mov
mov
mov
inc
mov
xchg
xchg
repnz
lock
jecxz
das
or
mov
jp
mov
shr
add
cld
sti
xor
stc
sbb
push
pop
add
insl
bound
testl
xchg
and
mov
imul
rorb
insb
fiadds
in
pop
sbb
fistpll
mov
fcomps
cmp
pop
cmp
adc
xor
imul
jl
imul
movsb
fisttps
jl
mov
jnp
mov
xchg
cld
into
add
push
xchg
mov
add
imul
cmc
pop
stc
pusha
push
add
mov
ret
out
decl
push
repz
lea
pop
pushf
cmpsb
jle
sti
in
test
mov
fsubl
and
mov
rolb
mov
mov
scas
repz
pusha
jp
cld
sub
push
loopne
stos
sub
loopne
inc
jmp
dec
xlat
xor
movsb
inc
icebp
sub
add
flds
lods
out
push
in
jl
aaa
or
push
jno
mov
lea
jns
ljmp
shll
lahf
pop
fisubrs
inc
and
gs
lea
mov
sbb
imul
or
in
xorl
into
mov
push
arpl
fcomps
iret
ds
jp
arpl
pop
lcall
mov
shll
and
es
pop
jecxz
sbb
push
popf
sub
and
sub
or
or
fsubrl
sahf
fimull
jnp
shlb
test
in
inc
fwait
push
or
lret
xchg
hlt
push
test
and
mov
cmpsl
imul
repz
pop
cmp
inc
or
cld
and
fisttpl
add
out
sbb
or
imul
push
push
pop
inc
and
insl
push
enter
add
push
movsl
ss
lret
outsl
bound
mov
jno
aas
ror
movsb
mov
mov
sbb
add
addb
into
orb
mov
jle
mov
insl
psraw
mov
push
push
or
xchg
loopne
rclb
mov
imulb
aam
repz
fs
in
out
and
mov
xor
in
sub
xor
sub
jge
mov
fiadds
sbb
mov
ds
js
lds
or
test
xor
adc
xor
call
add
scas
xchg
int
dec
add
adc
dec
dec
fs
mov
add
arpl
enter
daa
add
cmc
push
push
repnz
sub
sti
pushf
popf
and
xchg
shl
mov
sub
sbb
mov
shlb
push
adc
cmp
aas
ljmp
jns
inc
divb
sub
mov
and
leave
in
mov
cmp
cmp
ret
mov
ljmp
lahf
js
dec
in
loop
xor
xchg
mov
test
shrl
cmpsb
mov
pushf
dec
fistps
cmp
pop
mov
adc
loope
and
mov
int3
jp
icebp
loope
sbb
addr16
xchg
or
mov
adc
xchg
inc
mov
mov
push
les
add
int3
xchg
leave
test
or
dec
shll
fs
jl
push
stos
push
clc
push
stc
or
mov
rorb
fwait
mov
bound
inc
std
sahf
push
stos
pusha
jle
mov
inc
ret
or
dec
pop
xchg
inc
push
jbe
or
fisttpl
stos
jecxz
out
mov
add
icebp
rorb
mov
mov
dec
pushf
lock
inc
sub
icebp
jbe
sub
pop
or
out
cmp
xchg
aas
cmp
add
loope
fisubrl
lcall
xor
ja
ret
push
movsb
mov
mov
jb
mov
ja
bound
xor
dec
mov
xor
test
cmpsb
mov
gs
fbstp
inc
xchg
mov
jmp
mov
decb
pop
mov
cmpsl
aas
jle
jp
js,pt
lods
adc
dec
scas
dec
ficompl
adc
dec
jno
test
push
arpl
lds
jbe
jecxz
sti
insb
dec
lds
and
add
ljmp
jl
inc
xchg
outsl
lock
mov
shrb
les
adc
pop
scas
out
adc
push
fcompl
les
mov
mov
cmp
jno
and
stos
push
and
xchg
test
push
and
push
adc
mov
in
insb
dec
pushf
xchg
cmp
testl
xchg
loope
mov
jge
fs
js
jge
ja
push
and
xchg
lret
inc
into
test
ret
ss
leave
nopl
addb
jb
outsl
in
ja
movb
mov
xchg
cltd
mov
das
sub
daa
pop
fisttpll
mov
insl
xchg
fsubs
arpl
lds
out
cmc
inc
stos
mov
or
lods
mov
cmp
fistl
pop
push
rcll
cmp
jo
jmp
mov
ret
popf
mov
das
or
shrb
cmp
xchg
dec
sub
jae
pushf
or
pop
int3
rcl
imul
int3
adc
es
adc
dec
in
mov
lods
cmpl
push
ljmp
bound
add
test
ret
int3
adc
inc
test
das
clc
and
mov
or
incb
mov
stos
cmp
push
je
push
sub
mov
pushf
mov
adc
mov
dec
fisttpll
xor
push
jge
pop
aaa
cmp
cltd
xor
outsb
jmp
inc
sbb
inc
ljmp
cmpsb
out
mov
insb
rclb
mov
xchg
jne
je
stc
cmpsb
lcall
and
xchg
je
loopne
sahf
dec
adc
repz
aad
and
sbb
push
leave
inc
es
push
out
sub
pop
imul
xchg
mov
ret
mov
push
sbb
std
dec
or
outsb
sub
cmp
add
adc
inc
cmc
and
testb
outsl
outsb
mov
in
ljmp
pop
aam
ss
inc
add
push
xlat
clc
bound
mov
pop
push
icebp
ja
hlt
cmp
mov
dec
mov
dec
outsl
imul
inc
add
ja
stc
movsl
outsb
pop
bound
push
cmpsl
mov
mov
adc
mov
adc
outsl
icebp
cltd
je
add
shr
stos
notl
mov
xor
insb
xchg
test
leave
and
lods
pop
ror
adc
pop
pop
adc
ljmp
inc
mov
mov
xor
mov
test
fadds
pop
xor
icebp
arpl
xorl
adc
pop
mov
adc
jg
pop
fmul
loopne
xor
mov
fadds
lret
testl
sub
mov
adc
mov
push
push
sbb
out
jl
jl
iret
jns
jl
into
cltd
mov
dec
jae
inc
leave
daa
or
mov
out
ja
cmp
in
jne
mov
mov
and
cmp
into
mov
in
fnstsw
ret
push
mov
inc
cmc
outsl
pmulhw
je
dec
and
inc
imul
sub
shl
xchg
das
jmp
out
mov
addb
jle
imul
push
into
aas
mov
sbb
inc
hlt
mov
inc
cmp
push
mov
push
stc
cli
push
imul
lds
inc
lret
or
jecxz
cmp
rclb
loopw
js
pop
dec
adcl
inc
sbb
pslld
and
pop
pushf
mov
add
jbe
mov
int
adc
icebp
push
lcall
jmp
out
mov
add
or
imul
sbb
outsb
insl
fiadds
and
mov
insl
out
jbe
je
leave
test
xchg
mov
lea
push
popa
out
lcall
cmpsl
lods
loop
ds
enter
and
inc
ss
shlb
shll
mov
call
ja
mov
mov
mov
jmp
mov
inc
pop
out
pop
rolb
lods
cmp
mov
call
ret
and
push
int
fs
jl
repnz
mov
test
xor
mov
rcrb
xchg
ret
pusha
repnz
push
out
sub
xor
daa
push
test
into
mov
aaa
lds
lret
inc
jae
cmp
ljmp
fcoml
ss
add
adc
daa
stos
clc
out
xchg
sub
jne
push
push
and
les
std
int
dec
loope
dec
mov
stos
seto
enter
mov
adc
adc
and
add
mov
popf
aaa
xchg
sahf
cs
pop
ret
adc
scas
dec
pop
inc
mov
stc
neg
jp
lcall
pop
sbb
inc
ret
mov
mov
rorl
call
ds
cwtl
pop
es
hlt
pusha
cmc
mov
mov
ret
mov
xchg
rcll
stc
fcompl
push
aad
xchg
mov
rcll
cld
cli
xchg
adc
mov
mov
mov
adc
movsb
hlt
mov
dec
scas
sbb
ja
xlat
incb
outsb
ja
sarb
aam
cmc
js
dec
push
fnstenv
mov
ss
push
jmp
push
fidivs
inc
sub
push
or
mov
dec
xchg
adc
and
pop
push
xlat
call
movb
adc
cmpsb
cmpsb
sub
xor
lahf
bound
push
add
shrb
sbb
adc
mov
hlt
aad
jp
and
and
enter
push
shrl
dec
pop
lret
pop
stos
lock
add
pop
xor
and
fs
xchg
mov
testl
mov
jle
inc
sbb
cltd
xchg
inc
lds
xor
mov
xlat
inc
adc
mov
jmp
mov
adc
jecxz
pop
outsl
lea
xlat
lahf
adc
aaa
pop
fstl
cmp
push
cmpsl
push
ds
js
push
gs
addr16
jbe
scas
mov
test
sbb
stc
pop
cmp
dec
sub
sbb
lret
mov
fmull
xchg
sub
jecxz
push
xor
mov
addl
xor
add
add
cmpsl
jne
repz
dec
pop
mov
jp
and
mov
or
in
mov
daa
cltd
push
adc
mulb
ds
int3
iret
push
fmuls
add
push
push
ficoml
into
cmc
push
out
cmp
pop
push
aas
in
in
int
dec
push
pop
mov
push
mov
imul
fistpll
add
add
dec
mov
dec
inc
add
int
push
pop
scas
aas
sbb
rorb
test
stos
sub
outsl
das
or
and
jle
sbb
inc
mov
repnz
xor
dec
mov
aas
fcoms
lock
aam
insb
rorb
and
pop
and
dec
js
aad
xorl
inc
jmp
inc
lods
mov
push
adc
pushf
or
outsb
mov
mov
jp
mov
mov
test
fcmove
push
mov
outsl
mov
lret
shl
rolb
test
inc
mov
ds
es
cmp
cltd
cmp
dec
mov
inc
test
mov
xchg
rolb
nop
les
pop
div
add
cmp
inc
sbb
push
pop
adc
nop
jae
fistps
leave
repz
mov
push
pop
filds
aaa
mov
xor
mov
test
xchg
xchg
and
sub
pop
dec
arpl
jae
adc
fistps
movsb
rcll
add
das
pop
xorb
bound
in
push
movsl
add
mov
lea
mov
lea
inc
sub
push
sbb
repz
clc
or
sub
adcl
lods
adcb
xchg
ds
xchg
mov
push
arpl
inc
test
inc
push
icebp
or
cmpsl
sub
jge
insb
test
gs
mov
xchg
cmp
jp
fisubs
stc
jecxz
cwtl
mov
jnp
sbb
push
and
fwait
cmp
ret
das
pop
xor
cli
jp
adc
add
adc
into
sub
mov
xor
sbb
jg
push
rcr
cltd
cmpsl
jo
gs
test
inc
out
jb
push
jle
sahf
cmpsb
adc
int3
adc
inc
add
and
jecxz
add
shll
cmp
mov
or
push
xchg
xor
add
cmp
jno
outsb
mov
lcall
mov
shll
sub
mov
int
pusha
sbb
ljmp
hlt
xchg
sti
inc
pop
std
pop
shrb
mov
mov
sti
addr16
push
mov
or
sub
pop
adc
cwtl
shrl
stc
loope
pop
sahf
push
or
popf
and
fdivr
mov
mov
cmpsb
sub
loopne
sub
dec
jb
dec
dec
jmp
push
dec
sbb
xchg
mov
xor
pop
mov
lret
jb
in
adc
adc
rep
iret
push
sbb
repz
pavgb
xor
cmc
dec
inc
popf
pop
sti
nop
and
test
jo
sbb
lcall
add
dec
jg
mov
insl
movsl
or
shrb
pop
lods
inc
or
shll
aad
mov
push
or
cmc
inc
int3
and
xchg
dec
cltd
sub
popf
mov
lahf
jge
jp
aaa
cmc
lods
jne
push
cmp
subl
or
adc
cli
xor
push
cmp
xchg
push
push
push
lds
and
inc
push
sub
xchg
inc
or
pop
dec
test
out
sub
sahf
inc
sbb
jns
adc
jns
jne,pt
fdivrl
mov
int3
cmp
in
adc
ss
sti
sbb
jge
cmp
popa
popa
cmp
mov
and
in
aas
lret
into
sub
imul
cltd
pop
inc
sub
jmp
gs
push
cltd
mov
sbb
mov
daa
pop
test
movsl
aam
mov
xchg
jb
stc
mov
add
insb
fildll
enter
mov
mov
in
shll
xor
mov
outsl
es
inc
or
je
loopne
popf
loop
add
sbb
xchg
outsl
mov
mov
mov
ljmp
jp
pop
lret
sbb
adc
dec
nop
out
lcall
pop
mov
inc
scas
add
pop
addr16
cmp
insb
test
les
cmc
notb
movsl
iret
idivb
mov
add
push
mov
in
loope
outsb
xorl
sbb
jo
pop
pop
xchg
push
or
in
push
adc
mov
mov
sub
stc
adc
xchg
scas
adc
ja
pop
imul
and
cmpsb
inc
lret
fsubs
inc
cmpsl
cmp
imul
xchg
fwait
out
std
aam
push
rclb
test
add
orb
mov
clc
pop
jns
push
test
lret
lods
xchg
sti
repz
outsl
ja
int3
adc
fsubrl
and
pop
push
sbb
adc
add
repnz
jle
add
popa
ret
into
sbb
call
cmp
movsl
scas
or
xchg
sar
shr
add
shl
subl
fisubrs
jns
fsubs
sbb
shll
adcl
lret
push
or
mov
adcl
stc
imul
scas
or
xchg
stos
add
xor
icebp
xor
mov
pop
mov
cli
mov
das
add
mov
cmovp
add
bound
adc
xchg
and
insl
jnp
push
sbb
jnp
je
in
and
ficoml
xchg
jle
dec
popf
xchg
aas
add
mull
xor
or
mov
mov
iret
stos
fmul
ficoms
ja
dec
and
es
scas
xchg
sub
insb
jl
lock
movsb
xor
cmc
sub
je
into
mov
aas
out
inc
fiaddl
jne
aad
sbb
addr16
lret
pusha
cld
jae
mov
cmp
in
mov
enter
in
out
lret
divl
xchg
ret
pushf
shr
cli
lock
inc
enter
ja
fdivp
mov
dec
movsb
js
xor
out
sbb
pop
ficoms
cmp
setle
fdivrs
mov
pop
inc
movsl
vdivpd
jle
test
dec
sbb
xchg
stc
sbb
lret
sub
dec
ret
mov
mov
lahf
add
sub
xor
in
sub
arpl
jns
xchg
jle
mov
je
and
stos
cs
adc
jae
shll
adc
jg
jnp
or
mov
push
out
adc
ret
mov
cli
add
xor
xchg
xor
sbb
pop
test
lahf
fstpt
js
pop
notl
shlb
pushl
adc
cld
out
pushf
cmpsl
lock
dec
sub
jo
sub
cs
inc
cmpb
push
clc
inc
and
or
add
dec
jo
dec
loop
scas
push
mov
add
jl
adc
iret
jmp
xor
in
in
int
push
sbb
pop
jl
mov
inc
add
xchg
mov
jne
mov
cmc
push
ficoms
mov
mov
mov
fldl
insl
xor
repz
stos
jge
pushf
out
fs
or
mov
add
cmp
frstor
call
and
mov
insl
mov
inc
pop
inc
lods
cmc
lds
xor
xchg
ret
stc
testl
cmp
xchg
adc
cmc
or
gs
sbb
lret
mov
and
addr16
cmp
iret
push
mov
mov
push
stc
aaa
insl
insl
push
out
clc
outsl
inc
or
dec
sub
xchg
or
cmpsb
and
adc
in
test
push
test
or
mov
sub
pop
orb
fdivr
popf
ljmp
mov
out
sbb
andl
inc
jne
push
insl
sbb
pop
enter
insl
incl
sub
lea
loope
bound
or
loopne
inc
out
out
in
stos
cmp
movnti
cld
push
or
test
nop
inc
add
jle
push
inc
pop
cs
add
xchg
add
jle
add
push
je
bound
rorb
aad
insl
xor
icebp
dec
rcll
push
mov
popl
add
adc
sbb
sub
dec
mov
xchg
sub
xor
inc
sbb
mov
jno
pop
mov
imul
fsubrs
mov
inc
mov
mov
push
pop
mov
cmc
inc
stc
xchg
or
arpl
aam
sub
iret
insb
fistps
filds
imul
call
adc
int3
add
insb
push
push
leave
mov
jb
call
loopne
push
sbb
mov
mov
fcoms
movsl
sbb
jle
sub
push
fimuls
inc
xor
mov
push
or
ljmp
in
jmp
cmc
inc
in
jle
push
fsubrs
dec
or
and
or
out
sub
jle
ror
imulb
inc
push
mov
in
mov
insb
push
call
dec
xchg
push
test
cli
test
sti
jecxz
fs
fdivl
adcl
divl
push
mov
dec
xor
leave
das
pop
mov
jg
imul
xchg
mov
pop
add
repz
dec
stos
aaa
decl
push
daa
cmpsl
movq
xor
sub
dec
pcmpeqw
sbb
inc
arpl
xor
and
add
mov
adc
repnz
jno
pop
ss
cwtl
cmpsb
cli
xchg
mov
call
dec
jne
ss
mov
xor
push
popf
scas
pop
pop
gs
addl
adc
adcl
stc
iret
arpl
arpl
xorl
cmp
inc
sarl
push
inc
aad
fstpl
idiv
in
shll
fcompp
out
mov
mov
dec
cmpsb
movsb
test
cmp
fdivrs
outsl
xor
repnz
lods
dec
cmp
cmp
stos
inc
clc
push
or
hlt
pop
mov
dec
sub
scas
mov
nop
sbb
cmp
adc
mov
xchg
sbb
xorl
push
jb
mov
push
js
fsubrl
icebp
lods
stos
inc
ja
mov
subl
push
cs
jmp
push
in
out
pop
pop
mov
ret
stc
out
or
jo
xor
mov
outsl
or
int3
jg
pop
mov
stos
cmpsb
js
mov
loop
sar
dec
arpl
test
mov
les
stos
mov
mov
aam
lcall
in
inc
std
mov
xchg
jbe
mov
xor
sbb
sahf
xor
dec
pop
aam
int
aaa
popa
scas
imul
add
sub
push
pushf
push
arpl
pop
into
leave
je
and
test
in
cmp
out
cmp
pushf
lcall
pop
mov
fwait
dec
notl
xor
jg
rorl
xor
test
icebp
mov
sub
rolb
stos
and
pop
add
inc
or
push
ljmp
ja
jg
lcall
jl
cltd
mov
pop
adc
pop
add
lret
mov
lea
daa
xchg
outsb
neg
push
inc
data16
fldt
loop
mov
mov
scas
adc
inc
inc
jl
xchg
xchg
add
inc
repnz
neg
mov
mov
or
test
mov
pop
adc
lcall
cmpsb
xchg
cmc
or
mov
mov
mov
and
loopne
sbb
push
mov
ds
nop
xchg
cmp
sub
dec
sbb
mov
call
stc
ds
or
pop
imulb
add
mov
shlb
sbb
adc
pop
arpl
out
jns
shlb
jne
insb
notl
repnz
dec
popf
cmc
jbe
adc
rcll
pop
fcoms
lret
sarb
mov
cmp
mov
jbe
int3
push
jo
lret
xor
cs
adc
xor
mov
icebp
xchg
cmp
cltd
shrl
int
lea
das
sub
gs
cmpsb
sub
lock
ret
lock
adc
rcl
push
jb
test
rclb
out
div
repz
sub
rclb
lods
jnp
lds
inc
fstp
fs
push
xor
iret
xor
jo
or
xchg
aad
sub
mov
jg
mov
mov
and
sub
lcall
mov
pusha
shlb
mov
xor
sub
sub
ds
jbe
adc
or
rcll
xor
jmp
jo
add
jl
and
outsl
mov
call
popa
cmp
fisubrs
pushf
jmp
flds
xor
lods
or
lahf
js
dec
jno
mov
dec
mov
dec
call
add
pop
je
inc
xor
xor
in
mov
cmpsb
jg
idivl
fcmove
roll
push
dec
cmc
inc
lods
test
insb
xchg
stc
mov
xchg
into
and
mov
or
pop
std
push
and
xor
fnstcw
inc
rolb
loop
mov
out
pop
das
jbe
cmp
test
scas
pop
mov
add
ljmp
jns
insb
int
add
clc
xlat
xchg
mov
xor
mov
pop
cmpsb
jne
lret
mov
pop
mov
bound
cmp
cld
dec
inc
add
lahf
jns
fidivs
es
rclb
pop
or
jp
int
scas
add
outsb
enter
cmp
or
xlat
test
imul
jecxz
and
cltd
pop
ret
sbb
rcll
mov
jne
xchg
data16
dec
xor
aad
mov
mov
inc
testb
imul
repz
sbb
scas
inc
sbbl
push
mov
ja
ret
movsl
pusha
rclb
pop
sub
mov
dec
sub
inc
jecxz
mov
sbb
repnz
mov
into
addr16
ss
divl
mov
push
mov
sahf
pop
push
cltd
mov
mov
in
mov
dec
out
movl
jle
and
inc
mov
jmp
mov
pop
and
loopne
or
lock
dec
cmpsb
in
adc
push
sub
xor
jl
aad
mov
mov
pushf
rcll
sub
adcl
dec
out
lea
lock
mov
add
mov
lds
leave
pop
sub
stos
mov
stos
jge
pop
jno
add
mov
cmp
jp
stos
ss
adc
mov
jmp
aad
outsl
cmpsl
adc
add
addr16
js
sub
data16
jno
aaa
xlat
pop
scas
jge
or
loop
fxch
mov
mov
sahf
jecxz
inc
pushf
bound
jmp
ds
mov
pushf
dec
in
test
jae
sub
inc
sahf
fwait
adc
cmp
push
xchg
jmp
aam
loop
adcb
pop
pop
scas
leave
mov
sahf
or
mov
rcl
jl
call
loopne
mov
dec
push
xchg
into
ljmp
outsb
mov
push
dec
nop
xchg
lcall
inc
dec
mov
xchg
mov
xsaveopt
jle
adc
jg
ss
insb
add
adc
out
mov
idivl
mov
fnstcw
jbe
popa
in
gs
mov
in
push
mov
dec
lcall
scas
and
shll
xorl
outsl
pop
xchg
xor
mov
push
mov
mov
inc
adc
out
fists
js
js
lds
adc
adc
sbb
jb
jmp
stos
pop
dec
dec
inc
movsb
dec
mov
nop
add
lcall
and
js
cli
subb
jnp
and
lret
mov
sub
xor
push
xchg
dec
lock
cmp
iret
aas
rorb
adc
rorb
iret
adc
addr16
in
dec
xchg
mov
test
stos
lods
mov
in
or
cmc
in
or
scas
jp
and
or
orb
into
loopne
jo
xor
rorl
cmp
scas
or
sub
icebp
ds
rcrb
in
notl
dec
subl
into
lods
ss
mov
xchg
repz
jg
fcompl
js
outsb
xor
jecxz
fwait
jo
bound
and
dec
cmp
or
xchg
ss
jo
ja
aaa
sti
psubq
inc
jno
fnstenv
jno
inc
cmpsl
pop
push
add
stos
loop
cmpb
movsb
dec
jg
out
out
mov
xchg
ss
push
mov
inc
or
xor
adc
fcoml
xlat
fwait
dec
mov
ret
pop
jns
mov
lahf
mov
pop
or
jmp
loopne
or
mov
mov
or
cmp
lahf
bound
int
outsl
ds
mov
add
and
adc
outsl
sar
repnz
xchg
cmp
daa
std
push
inc
mov
dec
push
in
les
cld
push
mov
mov
dec
mov
and
out
call
cmp
push
mov
mov
shll
push
ja
add
adc
std
out
rclb
add
shrb
sbb
out
sub
jns
cmp
pop
mov
dec
pop
cld
test
std
cwtl
lea
popf
in
sub
jo
popa
pop
pop
cmc
cmp
je
xor
in
add
dec
stc
mov
xchg
fcmove
pop
rcr
pop
mov
divl
mov
jle
out
aas
cmp
movsl
and
mov
xor
mov
mov
fldcw
or
or
jns
pop
mov
xchg
jecxz
sub
and
sbb
add
inc
add
dec
or
pop
sbbb
mov
sbb
les
mov
movsb
sbb
inc
jb
repnz
mov
in
xchg
data16
mov
scas
cmp
fstps
push
lods
mov
lcall
xlat
xchg
lods
or
or
into
std
xor
lret
neg
test
xchg
jmp
int
mov
or
incb
out
add
sub
pop
roll
fs
mov
loope
jbe
xor
jmp
xchg
push
dec
push
incl
cmp
filds
inc
hlt
xchg
aam
lods
mov
push
xchg
cs
mov
shlb
test
scas
gs
pop
outsb
mov
cmpb
inc
inc
add
sbb
jae
and
push
mov
sbb
dec
xlat
adc
xchg
mov
mov
adc
popa
pop
xchg
js
jnp
or
mov
into
sub
sub
or
jnp
xor
pushf
jae
add
cmpsb
in
push
mov
into
outsl
pop
jge
jno
cmp
inc
cwtl
insl
sahf
mov
test
stos
sbb
cltd
push
and
movsl
fisubl
xor
ljmp
push
and
push
jmp
mov
push
mov
fbld
push
roll
jmp
mov
mov
repz
lcall
mov
mov
sub
pop
test
cmp
mov
inc
std
mov
jge
xor
mov
jp
out
cmp
xchg
mov
xchg
dec
dec
or
ss
in
xlat
mov
aas
and
fs
mov
or
lods
lret
jns
mov
bound
pusha
or
popf
dec
sub
movb
jl
mov
outsb
movsb
int3
pop
adc
xor
leave
or
movsl
pop
in
push
xchg
dec
stos
xchg
in
sbb
js
sub
jnp
inc
out
xchg
jno
es
push
mull
lret
pusha
xor
aaa
sahf
cmpsl
sbb
jb
mov
ret
les
jge
cwtl
dec
jle
sbb
xchg
push
repz
inc
mov
roll
loopne
clc
scas
or
arpl
movsb
in
inc
sub
mov
loopne
repnz
mov
add
iret
dec
shrb
adc
pop
mov
sar
ljmp
insl
xor
addr16
scas
int
push
inc
rep
mov
or
pop
cli
testl
and
fsub
push
xchg
pop
cmp
mov
pusha
jge
lahf
jg
iret
jne
adc
adc
repz
xchg
mov
xlat
stos
push
je
mov
sub
arpl
pop
xchg
mov
out
xor
andb
mov
aaa
ja
mov
xchg
xchg
xor
mov
ja
mov
jb
mov
lcall
ja
or
sbb
adc
rclb
mov
fmul
stos
enter
outsb
std
sub
and
sbb
add
das
outsl
scas
add
cmp
pop
jnp
dec
sbb
mov
into
leave
mov
xor
cmpsl
rcrb
pop
adc
mov
subb
setp
mov
jp
loop
sbb
xlat
lahf
lods
adc
dec
inc
or
in
aad
nop
out
icebp
lcall
repnz
mov
mov
pop
iret
sub
jnp
xchg
push
loopne
cmp
test
push
filds
addr16
xor
xchg
xchg
clc
jg
pop
cwtl
std
in
adc
sub
add
and
cwtl
test
cmc
stos
cmp
stos
int
pushf
in
clc
jp
popa
jecxz
test
repz
out
popf
xor
js
push
jle
xchg
hlt
test
lcall
xchg
dec
sub
xor
lds
or
jl
xor
mov
xchg
and
ret
xchg
mov
mov
test
in
add
and
mov
inc
inc
or
cmp
mov
test
pusha
xor
sub
test
inc
fbstp
push
and
push
or
addl
fsubl
leave
mov
add
mov
in
sub
outsl
mov
pop
mov
cmpsb
subb
pop
or
test
popa
ljmp
loopne
mov
pop
mov
dec
pop
and
popf
dec
loope
dec
cmp
nop
cs
mov
out
mov
sub
add
sbb
insb
inc
mov
push
lret
mov
js
arpl
pop
xchg
fldcw
test
mov
adc
mov
cmpsl
js
dec
push
movsl
test
xchg
jb
or
data16
nop
pop
mov
push
popa
push
daa
sbb
jns
jo
out
xchg
test
iret
adc
dec
jmp
data16
scas
es
out
xchg
inc
imul
or
in
mov
pushl
shlb
pusha
jnp
push
jmp
inc
cmpsl
adc
lds
adc
pop
adc
test
xchg
dec
ret
cmp
cmp
icebp
sbb
pop
xor
or
insb
and
cmp
adc
jae
pop
mov
add
xchg
ficompl
pop
or
sti
dec
or
jle
imul
and
dec
stos
mov
gs
jns
in
mov
rcl
call
jne
mov
mov
shll
cs
and
js
sub
not
inc
jg
jle
push
sub
xor
push
jg
in
jle
xor
push
adc
mov
or
pop
ds
cmp
mov
xor
call
arpl
repz
fs
fildll
xchg
and
jae
outsl
mov
sbb
cmp
ds
ljmp
test
int
xor
ds
lock
shll
pop
xchg
cmc
sub
push
mov
sub
sbb
cmpsl
cmp
cld
cmpsl
xchg
and
les
adc
lret
dec
xlat
dec
mov
mov
call
or
sbb
loope
shlb
pop
and
in
cwtl
sbb
cmp
or
idivb
nop
into
push
test
sub
fcomps
jno
div
lds
jp
jecxz
cmp
and
out
push
in
jge
call
mov
lock
sbb
in
stos
sbb
cmp
cmpsl
out
pop
dec
std
add
fstpl
iret
mov
rorb
cmp
lock
push
push
int3
fbstp
addl
pop
jnp
int
dec
adc
sbb
out
out
pop
test
push
pop
test
out
sbb
mov
movsl
dec
repnz
dec
repz
daa
inc
shrl
test
inc
xor
pop
mov
imul
cmp
or
mov
and
adc
into
sti
jns
sbb
mov
lds
adc
rcr
mov
icebp
mov
dec
into
stc
xrelease
dec
add
psrad
push
aad
jle
or
pushf
sbb
loope
rcr
jns
xor
outsl
push
loope
push
fnstenv
sbb
iret
xor
movsb
pcmpgtb
adc
rcl
sub
push
jno
in
mov
test
pop
repnz
in
out
cmp
arpl
std
sub
cmp
dec
pushf
pushl
out
int
pop
or
ljmp
repnz
add
pushf
fptan
loopne
xor
negl
cmp
mov
mov
or
or
xor
int
add
shlb
imul
pop
push
je
cmc
dec
push
jecxz
sbb
push
adc
mov
test
sub
adc
stc
inc
das
ficomps
sub
mov
andl
lods
mov
orb
jmp
xchg
xchg
sub
shll
ja
bound
iret
loop
iret
xor
addr16
arpl
shll
adc
mov
pop
aaa
shll
adc
sbb
dec
scas
jp
lods
mov
and
sub
iret
pushf
stos
inc
and
jmp
xlat
or
and
icebp
dec
push
push
cld
cmp
dec
sbb
sub
lods
mov
enter
jbe
in
dec
rorb
pop
lcall
inc
and
push
push
inc
sub
das
testl
fidivrs
pop
fistpll
jmp
js,pt
mov
xor
dec
sbb
sbb
outsb
push
push
xor
bound
sub
stos
lods
cmp
hlt
xor
shl
jmp
cmp
adc
sbb
jecxz
xchg
lods
xor
sub
xor
push
clc
aaa
test
or
into
push
ret
and
inc
inc
sar
aaa
and
mov
push
fadd
rorb
push
mov
movsl
leave
mov
xchg
inc
add
lds
mov
fisttps
cmp
cmc
ljmp
rol
inc
cmp
jo
sete
outsl
icebp
xchg
xorl
ds
sbb
adc
mov
push
sbb
mulb
push
push
daa
push
cmp
push
push
mov
rcll
xchg
jl
push
or
pop
into
subl
clc
iret
jp
mov
xchg
and
lea
and
loope
shll
pop
dec
pop
mov
sbb
aas
add
pop
mov
add
cwtl
jge
xchg
cmpsl
mov
lods
mov
sub
jnp
test
mov
test
xor
mov
imul
adc
sahf
or
out
xor
nop
mov
out
cmp
mov
pushf
sti
sub
wrmsr
add
jno
mov
es
lock
xchg
sbb
call
inc
push
push
xchg
push
daa
ljmp
call
out
xor
mov
cwtl
jae
leave
sti
or
xor
mov
xchg
imul
out
pop
gs
xor
pop
add
push
jns
dec
or
mov
pop
mov
jmp
jnp
stos
xor
test
rorb
stc
xor
push
stos
lcall
sub
dec
lcall
shrl
das
mov
nop
cmc
out
mov
in
faddl
in
xor
shll
movsb
outsb
shl
pop
jo
mov
xchg
cmp
jg
xchg
mov
xchg
int
push
mov
daa
xor
je
pushf
into
push
pusha
cwtl
mov
movsl
sarl
into
rorl
cmp
nop
outsl
mov
scas
xlat
mov
mov
ja
or
jp
xchg
cmpsb
mov
add
in
ja
outsl
jae
inc
daa
mov
ja
repz
inc
jp
dec
xchg
or
cmc
and
shl
or
movsb
lahf
add
js
sbb
js
mov
loop
pop
insb
mov
pop
cmp
mov
test
or
cmp
pop
lods
mov
in
clc
fistpll
roll
inc
mov
idivb
fldl
repz
jmp
popa
mov
xchg
xor
es
scas
aad
shlb
in
jb
dec
mov
mov
lock
nop
pop
jno
lods
shr
leave
adc
mov
movsb
stos
icebp
sbb
in
gs
icebp
lds
sti
loop
lret
es
push
inc
lcall
inc
mov
iret
fdivl
and
or
push
int
rcr
out
mov
dec
push
ret
jo
cmp
loop
push
fcmovnbe
mov
dec
or
in
jno
sub
mov
into
lods
sbb
pop
clc
stc
inc
bound
aam
sbb
cld
add
pop
adc
jne
pop
inc
loopne
subl
adc
lock
jns
popf
sub
mov
mov
xlat
mov
adc
mov
popa
xchg
xor
add
or
in
dec
jbe
rcll
inc
xlat
test
cmp
dec
lock
repz
ja
xor
pop
outsl
xchg
push
les
stos
shll
punpcklwd
push
addr16
add
test
and
inc
sbb
pop
movsl
sub
mov
js
outsb
inc
bound
pop
dec
xchg
popa
test
xchg
push
xor
es
inc
push
scas
push
arpl
and
fldcw
and
mov
int3
xor
pop
addr16
or
lods
inc
imul
pop
lret
xchg
xchg
into
pop
push
repz
xor
mov
xor
or
jl
xchg
movsl
into
inc
or
les
pop
xrelease
call
jnp
inc
sbb
hlt
add
cmp
and
addr16
pop
mov
ljmp
int3
les
add
add
test
xchg
rclb
mov
jns
sbb
adc
mov
pop
cs
movsb
lods
or
test
inc
stos
inc
loope
inc
arpl
mov
mov
and
in
cmp
es
stc
dec
or
rorl
xor
xor
jle
loopne
jae
dec
lcall
mov
cmp
adc
push
jmp
loopne
sbbl
shlb
sub
fbld
call
addr16
pop
aam
cmp
and
testl
das
adc
mov
dec
mov
out
xor
nop
test
shlb
pop
sbb
mov
adc
aad
mov
fiaddl
lret
lods
mov
xor
js
sbb
loope
outsl
dec
and
fstp
adc
mov
sbbb
aas
add
aaa
jb
adc
enter
xchg
and
js
fwait
jl
sbb
das
mov
sub
and
sbb
xor
inc
pop
push
notb
inc
adc
mov
add
or
lock
mov
adc
push
adc
nop
iret
mov
jp
bound
mov
test
xor
repz
xchg
lods
cmp
gs
jae
mov
dec
mov
movsl
loopne
sar
push
push
icebp
mov
ret
lahf
push
mov
rorb
and
es
push
data16
jle
sub
xchg
pusha
sub
into
sub
sub
daa
sbb
les
mov
mov
scas
shr
cmp
and
mov
mov
lds
into
leave
sbb
jge
cmp
popa
rcrb
add
xor
xor
push
fadds
icebp
mov
test
mov
xor
or
stos
xorl
sub
mov
fbld
mov
lret
bound
jo
ret
or
mov
or
add
cmp
mov
mov
cwtl
xor
dec
popl
cwtl
ret
icebp
mov
data16
mov
adc
mov
pop
sbb
sbb
jae
adc
sar
sub
scas
and
lods
daa
xlat
sahf
push
sub
xrelease
loopne
or
gs
cmp
clc
scas
pop
test
cs
out
lret
ja
cwtl
rcl
adc
mov
xor
dec
cmp
push
inc
cwtl
cmpsl
mov
mov
shlb
and
cltd
into
movsb
fdivl
or
loope
xchg
push
add
xchg
dec
xchg
xchg
sub
jnp
cmp
jl
or
mov
xor
aaa
gs
je
inc
lods
maskmovq
mull
xchg
sbb
sub
sub
mov
dec
mov
push
cmpsb
shll
jmp
ljmp
jecxz
sub
jge
jmp
fwait
add
adc
push
sbb
xchg
mov
loope
mov
or
or
mov
stos
xchg
add
mov
mov
xchg
pushf
loope
push
jo
cli
sbbl
data16
add
jp
int3
dec
aas
repnz
fstps
mov
lods
push
inc
jecxz
dec
cmpsb
out
or
jb
pop
and
lret
jnp
sub
arpl
pushl
jno
or
xor
fcomps
ds
and
pop
into
ret
das
rolb
mov
loope
xchg
cwtl
sbb
lods
cmp
adc
pop
xchg
in
sub
push
bound
sti
stos
or
into
inc
pop
mov
fs
fists
jns
sub
jae
jp
fidivl
fildll
subl
push
mov
cmp
xor
mov
js
dec
mov
mov
jg
or
loop
inc
and
loop
sub
jp
jno
push
push
mov
ret
add
in
rcll
adc
ror
sub
popa
mov
cltd
cmp
stc
lahf
jge
ficoms
movb
bnd
rdpmc
jg
pop
or
pop
ja
pop
mov
inc
ret
inc
addr16
jns
mov
adc
dec
mov
xchg
es
xchg
mov
pop
enter
je
lock
rol
and
or
repz
shrb
jbe
loope
fs
cs
push
or
add
scas
hlt
pop
in
lods
pusha
mov
loopne
push
lret
fidivl
adc
push
xorl
cltd
cwtl
adc
dec
jns
sbb
decb
push
hlt
pop
lret
stos
fwait
jne
fsts
xor
loop
mov
pop
push
cmpsb
hlt
ljmp
cmpsl
push
or
repnz
xchg
fsubp
xchg
mov
pop
mov
in
or
pop
jnp
xor
dec
out
push
sub
mov
jae
in
xlat
dec
xchg
lock
out
fldt
je
leave
in
pushl
push
sbb
adc
ret
or
mov
sub
roll
cli
loopne
cld
sbb
aas
loope
negb
addr16
push
pop
dec
mov
mov
add
cld
call
stc
fcomi
loopne
clc
lds
nop
enter
loopne
pop
pop
dec
cli
imul
dec
lret
mov
faddl
adc
bound
cmpb
inc
push
push
adc
mov
dec
dec
pop
ret
std
cmp
shll
mov
jg,pt
lock
dec
stos
push
pop
in
ljmp
fstpl
scas
stos
fcomps
mov
mov
addr16
mov
jmp
cmp
mov
mov
fwait
add
mov
stos
adc
and
aad
mov
iret
add
je
push
aas
mov
inc
cmp
in
shlb
inc
lods
pop
shl
cmp
mov
jmp
jae
push
push
push
dec
jno
mov
ret
xor
aam
jg
addb
sbb
bnd
aam
in
lret
loop
push
jmp
xor
in
xor
cmp
lcall
idivl
dec
mov
rcr
loop
les
ret
outsb
inc
dec
dec
int
jl,pt
sbb
fsts
ror
xor
pop
push
js
ss
les
xchg
bound
mov
in
add
xchg
mov
push
mov
iret
test
gs
out
bound
out
ss
jae
mov
test
std
or
add
dec
xlat
popa
mov
gs
dec
jno
dec
push
roll
xchg
jl
je
sbb
xor
movsl
jne
lcall
cmpsl
testl
cmpsb
out
repz
mov
jp
mov
test
push
or
sti
out
test
out
repnz
fcmovnu
xchg
outsb
sbb
stc
rorb
or
mov
mov
jmp
cmp
dec
mov
xchg
sub
cs
push
icebp
sbb
push
sbb
fidivs
cmc
outsb
or
and
mov
test
dec
mov
inc
fnstsw
mov
sarb
mov
push
xchg
adc
in
sbb
call
orl
push
mov
push
mov
pop
adc
and
int
hlt
aam
imul
xor
mov
test
jns,pt
daa
sub
jl
sbb
movsb
pop
push
mov
xchg
xchg
pop
xor
bound
push
aad
mov
lds
push
jecxz
add
sub
sbb
adc
outsl
or
or
std
add
ja
sub
dec
outsb
jmp
fwait
dec
xchg
mov
jne
or
push
lret
push
xchg
mov
xor
fnstenv
xor
insl
ret
mov
insb
cld
cmpsb
sahf
mov
mov
xchg
lret
fimuls
in
lahf
sbb
sub
xor
std
rcr
test
xchg
inc
mov
mov
push
popf
pop
push
jae
out
mov
inc
mov
lods
mov
jo
adc
fstl
pcmpgtw
sahf
cmpsl
sbb
add
std
popf
push
xchg
dec
inc
and
ljmp
mov
lea
mov
cmp
inc
or
cmp
mov
scas
push
iret
inc
cmp
xchg
cmp
icebp
mov
arpl
cmp
mov
out
sahf
add
adc
or
mov
cmp
mov
sti
lods
jg
push
xor
ret
pop
test
mov
push
push
repz
and
in
inc
inc
jmp
jg
cmp
mov
inc
sub
dec
and
sub
xchg
addr16
jnp
jo
pop
enter
hlt
inc
sbb
dec
pop
shlb
mov
mov
ds
mov
shlb
scas
stos
pop
or
or
push
hlt
adc
inc
push
push
push
sub
adc
inc
push
out
push
lret
ret
xchg
lea
aas
and
xchg
cmpsl
adc
push
pop
sahf
lods
daa
es
mov
xchg
and
insl
ja
add
mov
dec
dec
fcomi
fbstp
pop
jg
bound
xchg
inc
adc
push
dec
test
or
pop
ss
outsb
movsb
clc
in
cmpsl
stos
add
fwait
in
hlt
or
fbstp
inc
lds
xchg
mov
iret
test
mov
xor
dec
int
dec
popf
xchg
loopne
lods
adc
cs
cli
add
push
fidivrl
inc
add
jg
jnp
sbb
loope
push
sar
rcll
cmpsb
xor
or
cmp
movsb
push
xor
inc
mov
pop
rcrb
test
mov
out
scas
push
je
jae
push
mov
test
and
cmp
xchg
xor
sbb
mov
aas
add
or
xchg
aam
mov
data16
push
jmp
mov
inc
inc
cmp
mov
mov
jge
loopne
lret
dec
mov
add
das
xchg
mov
fs
adc
scas
pusha
xor
data16
sbb
movsb
je
repz
dec
aas
jbe
dec
sbb
pop
mov
dec
lea
loopne
inc
popa
outsl
movsb
jae
or
inc
cs
das
mov
fnstcw
insl
xor
sbb
pushf
push
aas
mov
arpl
mov
jmp
imul
jo
pop
fiaddl
lret
out
mov
in
pop
imul
inc
cs
movsb
add
pusha
jl
sbb
xchg
jne
call
insl
outsb
xlat
loopne
arpl
adc
sbb
aaa
dec
and
jb
out
mov
jmp
inc
pop
inc
ljmp
out
xchg
and
popf
jge
stos
mov
push
aad
mov
cltd
shl
mov
sbb
shrb
push
aad
ret
mov
add
test
jecxz
cwtl
repz
mov
jmp
movsb
std
insl
fsts
jl
ds
stc
inc
push
sub
cmc
xchg
mov
sbb
jecxz
repnz
arpl
push
sti
scas
cld
cmpsl
in
testb
or
cmp
jmp
xor
mov
fstps
xorl
jp
shll
insb
mov
dec
mov
dec
mov
mov
mov
push
mov
jge
test
subb
arpl
jno
pop
cwtl
lcall
loope
mov
leave
and
cli
xchg
sbb
sub
pushf
test
xchg
or
xchg
xchg
inc
inc
dec
or
jnp
lahf
push
addl
pop
ret
adc
loope
and
inc
and
ret
decl
cmc
pop
loopne
in
cli
mov
or
push
xlat
xor
inc
jmp
and
and
loopne
sahf
mov
out
and
add
aad
push
xor
insl
pop
lahf
xor
xchg
fisubs
jecxz
in
pop
xor
sarb
jl
decl
jl
xor
cli
push
sbb
xchg
xor
pop
jmp
sbb
push
jmp
rcrb
fiaddl
inc
sub
or
cwtl
jl
out
loope
arpl
sbb
ret
mov
push
adc
pop
subl
or
cmpsb
pop
fcoml
xchg
lcall
ret
mov
jp
int
mov
scas
int
adc
scas
sub
rcrl
jmp
mov
insl
aam
es
mov
mov
push
jae
es
mov
fmull
cmp
lahf
pop
sub
add
adc
push
xchg
adc
jo
ss
sub
aas
add
inc
in
sub
xorb
cmp
rcl
ds
and
sahf
mov
out
sbb
addr16
push
scas
or
sbb
sbb
or
inc
sub
jne
and
inc
mov
mov
mov
ja
or
pushf
lds
and
es
out
in
dec
pop
cltd
jl
xchg
dec
push
mov
pusha
es
mov
mov
lret
adc
xor
incl
push
ljmp
int
outsb
xor
repnz
xor
hlt
add
xchg
push
push
lock
outsl
jecxz
push
cltd
jae
jmp
or
or
xchg
mov
pop
shl
ss
je
push
push
dec
cmc
jmp
test
sbb
mov
adc
jo
js
push
test
xchg
enter
mov
scas
jne
data16
sub
jge
dec
es
roll
xchg
cli
dec
shll
testb
cmpsb
cld
es
mov
leave
xor
push
mov
gs
sbb
sub
mov
jae
push
fldcw
adc
or
cmc
cmpl
cld
mov
cmp
in
sbb
aam
xor
mov
lock
aam
in
mov
gs
sarl
mov
push
sbb
xchg
jge
add
dec
jne
mov
rcrl
popa
sub
cmc
in
xor
xor
jno
int3
fsubrl
stos
popf
andb
in
lret
test
xor
jge
movsl
int
sub
dec
imul
lods
imul
xorl
push
mov
enter
stc
pop
movsb
outsl
ja
mov
xchg
in
dec
adc
fimull
out
jle
xor
pop
sub
fwait
rcrl
pop
jnp
jecxz
jl
shll
sbb
sub
jp
lods
mov
cld
rolb
dec
add
xor
out
mov
cld
pop
mov
movsl
rorl
outsl
data16
cmp
rol
push
add
imul
pop
scas
cmpsb
mov
test
in
cltd
or
mov
jbe
mov
sbb
int3
xchg
xchg
fidivl
mov
xor
leave
xor
test
hlt
enter
add
jecxz
xorb
cltd
in
jne
lods
mov
insb
rcrb
bswap
icebp
into
or
sbb
lcall
adc
dec
push
mov
mov
inc
and
xchg
jmp
pop
out
push
gs
pop
jbe
push
js
and
jecxz
dec
outsl
push
mov
push
iret
out
mov
mov
sub
jge
fsubrl
cs
push
stos
scas
rcrb
adc
adc
pusha
lods
pop
shll
ret
cmpsl
iret
dec
pusha
pusha
inc
sahf
lea
fucom
dec
sub
int3
push
jne
fcmovnbe
repz
idivl
shrb
scas
loop
rol
xchg
pop
pushl
xchg
mov
dec
aad
insb
mov
aam
push
sbb
das
xorb
sbb
adc
push
fidivrl
fsubs
cmp
fcoml
pop
fcmovbe
lret
fsubl
jbe
test
fsubrs
mov
xchg
cmp
add
jne
cmp
insb
movsl
call
lea
aaa
cmc
or
lret
fldl
rorb
dec
ss
jmp
jle
js
sub
out
lahf
repz
aam
cmp
loope
jmp
or
data16
jae
sub
inc
sub
and
cmpsb
iret
pop
pop
imull
sub
insl
or
aam
rdpmc
in
mov
loopne
loope
add
test
in
jns
insb
pusha
rcl
fistps
cmpl
fwait
lds
fisttpl
sti
popa
adc
cmpsb
ss
aam
out
xchg
sbb
jp
sbb
aam
sub
fcomps
pop
mov
pushf
mov
and
js
leave
fistl
loopne
and
sbb
xorb
jae
in
adc
and
jo
mov
mov
int3
xor
jb
clc
xchg
cs
jmp
call
movzwl
int3
clc
ret
xchg
xor
int3
mov
xchg
mov
pushf
outsl
or
pop
xor
dec
imul
sub
data16
in
fs
mov
fldl
cmc
mov
xchg
and
aad
aaa
jne
scas
loopne
lock
andl
add
xchg
cmc
stos
mov
arpl
or
sti
ss
int3
pop
cs
cmp
test
aas
sbbb
push
mull
outsl
fmuls
aad
lahf
lret
xor
roll
sbb
lret
cmpsb
dec
jno
xlat
int
pop
nop
ja
test
aad
mov
mov
xchg
cmp
dec
mov
mov
and
jbe
xchg
mov
jg
aam
xchg
cli
ret
loop
xchg
ds
mov
imul
ret
out
dec
xchg
pop
in
push
adcb
not
cmp
jle
loope
mov
scas
mov
jbe
fisubrs
rcl
dec
scas
pusha
negl
jge
mov
xorl
imulb
fldenv
inc
inc
mov
push
sub
popa
dec
pop
or
ret
mov
pop
mov
ficoml
xchg
mov
mov
mov
push
in
mov
scas
ljmp
loopne
into
xchg
sbb
lods
mov
jmp
xchg
sahf
loopne
push
and
adc
cld
push
xchg
push
cmp
mov
fistl
into
push
inc
cld
inc
and
test
jns
lret
ret
test
stos
dec
fsqrt
or
lods
lods
ljmp
sbb
jb
hlt
aas
add
les
and
push
insl
in
loop
lret
push
pop
inc
inc
and
fisubrl
outsl
mov
ss
adc
ror
add
xchg
fidivl
jecxz
outsb
push
jae
or
jno
cmp
mov
enter
xchg
mov
pop
xor
ds
push
repz
mov
into
pop
pop
testl
jns
cmp
mov
mov
inc
sub
mov
cmp
xor
pusha
imul
orl
pop
jns
mov
lods
add
pushf
or
fldcw
jnp
xchg
out
orl
cmc
gs
mov
sbb
arpl
out
and
insb
push
popa
pmaxub
lret
cmp
rclb
in
xor
mov
fdivrs
dec
popa
ret
inc
pavgb
shll
mov
sbb
ret
scas
xchg
sub
je
fistpl
pop
shll
loop
leave
int
xchg
jns
addr16
lods
or
cmp
lahf
cmp
sbb
ficoms
and
or
mov
aad
sbb
cmp
and
cwtl
dec
stos
lahf
arpl
pop
movb
add
jae
xor
or
xor
push
popf
cmp
inc
jno
es
push
cmp
pop
xor
test
pop
mov
test
and
fcoml
mov
push
call
dec
int
adc
xchg
mov
pushf
push
sbb
icebp
aas
pop
repnz
adc
adc
dec
xor
mov
jo
jecxz
pop
addl
dec
ret
sbb
out
pop
shll
das
aad
add
lods
bound
imul
in
sub
ret
dec
cltd
jne
or
and
mov
push
aas
sub
jbe
loope
call
ds
popf
cmp
cmp
sbb
fidivrl
pop
and
mov
loop
je
push
pop
or
mov
lods
sub
xchg
mov
xchg
mov
movl
pop
lcall
cmp
mov
and
mov
sarb
loopne
scas
mov
mov
dec
push
inc
mov
mov
push
mov
push
or
test
rorb
or
lds
pushl
lock
push
adcb
dec
adc
push
jne
ja
fisttpl
daa
mov
push
jge
in
sub
push
sbb
call
js
adc
leave
ja
gs
jecxz
mov
inc
mov
mov
xchg
jl
jns
adc
std
push
xor
xchg
pop
push
add
adc
add
mov
xchg
xchg
and
movsl
xorb
xlat
pop
xor
mov
outsb
shlb
daa
mov
inc
pop
stc
push
add
cmc
scas
scas
es
sub
sahf
aas
xor
loopne
xchg
cmpsb
cltd
lret
pushf
lods
stos
imul
mov
cwtl
popa
jne
aad
lods
xchg
fwait
ss
mov
and
in
xchg
adcl
in
adc
pop
xor
rol
xchg
or
inc
test
ror
sub
or
add
push
jle
rcr
test
xor
sbb
and
jb
scas
hlt
call
pop
mov
cmp
addr16
fists
xchg
in
inc
mov
je
lods
cmpsl
fwait
sub
rcl
cmp
test
popf
mov
imul
mov
lret
xchg
iret
add
fs
aad
add
jmp
jl
adc
imul
pop
and
mov
and
mov
dec
mov
dec
xor
cmpsb
xor
fistpl
int3
cmpsl
xchg
and
push
or
xorl
inc
shl
sbb
and
pop
mov
lret
call
xchg
aad
sarb
push
repz
cltd
and
mov
cli
mov
mov
or
scas
call
add
data16
sub
sahf
push
imul
xchg
jmp
cmpsl
out
jmp
add
and
idiv
fs
sbb
sbb
cmp
adc
and
test
movsb
pop
aam
cli
cmp
sbb
and
mov
pop
dec
fildl
mov
or
and
jecxz
xchg
xchg
fnsave
xchg
subb
loopne
or
orl
xor
xlat
in
sub
xor
push
in
xlat
pusha
xchg
popa
push
or
jl
sub
decb
call
pop
divl
aad
enter
xchg
xchg
push
repz
hlt
cwtl
sub
outsb
jb
ret
sbb
cmpsl
ret
push
sbb
cmp
cltd
mov
pop
and
jae
testl
popa
or
adc
shl
jo
ret
lret
fsub
lods
jg
fsubrs
adc
sub
add
mov
es
insl
les
mov
or
arpl
clc
call
daa
les
rorl
ljmp
xchg
inc
jo
sub
psrlw
add
or
fildll
push
mov
lahf
cli
mov
push
xor
xor
sbb
pop
jnp
xor
pop
into
inc
jg
test
xlat
pop
ficoml
sub
push
inc
rcl
repz
enter
insb
inc
add
or
and
out
sub
push
in
sbb
ret
xchg
jno
js
xchg
and
test
lds
add
or
add
sbb
or
xchg
imul
inc
movsb
addr16
outsb
in
testb
cmp
mov
mov
fisubl
pop
pop
sbb
ljmp
roll
inc
pop
jns
pushf
mov
lahf
push
mov
inc
jmp
lret
das
lods
jb
pop
mov
je
leave
in
mov
mov
lret
push
dec
sahf
rolb
gs
mov
and
pop
call
int3
push
cltd
shrl
movsb
and
push
mov
adc
pop
testl
test
loope
dec
cmpsl
ret
lcall
mov
inc
adc
data16
xor
dec
int
sbb
jb
insb
mov
into
fstp
fs
insb
pop
inc
mov
fwait
das
inc
mov
fwait
shlb
mov
sub
sbb
jb
xor
idivb
add
sub
mov
sahf
xchg
iret
cmpsl
jecxz
add
add
insl
mov
sbb
loopne
mov
rcrl
lock
cli
jg
int
sti
or
lahf
cmp
jmp
adc
adc
mov
cmp
stos
repnz
shll
inc
or
repz
nop
pop
xor
or
cmp
int
pop
jg
mov
in
imul
stos
mov
xor
repz
adc
imul
outsl
cmpsl
dec
pmaddwd
popa
sub
push
nop
mov
daa
jle
sub
jnp
jmp
idivl
push
adc
push
ljmp
stos
leave
mov
xor
outsb
scas
sbb
bound
mov
push
cmp
mov
lahf
insl
and
sbb
or
mov
xorl
push
xor
call
ja
jnp
repnz
cmp
jmp
fsubrl
int
inc
add
ds
lods
inc
hlt
pushf
daa
daa
add
and
mov
cmpsb
mov
push
dec
push
andb
mov
sbb
pushf
jne
sahf
sbb
divb
shld
dec
addr16
pop
lret
mov
movsl
push
lahf
dec
shll
shlb
mov
shll
jmp
leave
xorb
push
mov
xchg
mov
addr16
xchg
jmp
mov
test
push
pop
mov
mov
xor
add
mov
inc
in
jle
imul
sub
lods
xchg
loop
jp
mov
sub
sar
shll
and
xchg
and
xchg
in
sahf
mov
add
mov
or
jbe
jp
dec
dec
sub
addr16
dec
add
pop
inc
xchg
cmp
adc
ss
clc
out
cmp
inc
sbb
adc
sub
inc
in
sub
sub
adc
jge
mov
out
add
jo
push
fldt
mov
repnz
jl
or
jno
lods
repz
pop
jge
je
fst
inc
ret
pop
adc
in
push
arpl
pop
mov
fldl
xchg
pop
xchg
insb
int
es
xor
out
leave
and
cmp
jns
xchg
pop
inc
xchg
add
in
adc
push
sub
test
cmpl
cmpsb
in
test
mov
stc
gs
push
outsl
dec
cmp
lret
outsl
test
push
adc
mov
out
sarl
scas
in
cmpsl
in
movsb
sbb
mov
dec
cmp
dec
cs
fs
lock
pushf
cmpsb
cli
int
push
loope
cltd
and
jle
xor
sub
nop
ficoms
and
loop
sti
lahf
test
cmp
sbb
pop
xorb
adc
add
jo
mov
test
xchg
lds
inc
out
fs
mov
mov
lcall
mov
inc
out
hlt
sub
push
lahf
mov
scas
jle
cmp
xor
push
or
clc
jmp
xor
jmp
sub
rorb
std
jle
adc
cli
fstps
mov
pop
insl
adc
call
cmc
push
pop
and
push
xor
sub
push
mov
mov
ret
shll
push
push
es
jnp
pop
cld
or
dec
sti
xor
cld
and
mov
fisubs
dec
and
dec
pop
insb
pop
push
push
and
push
add
clc
push
inc
leave
dec
decb
xchg
cmpsb
sub
in
adc
mov
xor
xchg
inc
stos
sbb
in
fstpl
in
pop
jp
das
mov
out
lret
sbbb
adc
mov
in
add
cmp
push
arpl
pop
jp
aad
add
lods
fisttpl
inc
pop
pop
cmc
pop
mov
sbb
and
call
adc
int
jl
adc
mov
subb
jno
scas
jb
and
sbb
js
cld
cmp
negb
cmpsb
xorb
xor
adc
imul
cmc
sahf
loope
and
gs
cmpb
rol
add
fdivrs
mov
jo
add
or
vmovaps
test
jg
int3
xor
cltd
mov
jo
lock
loop
iret
adc
stc
pop
nop
xchg
add
test
call
cs
addr16
ret
xchg
push
call
mov
leave
dec
xor
push
jp
loope
fists
fdivrp
and
call
lock
lock
popf
testl
sbb
dec
daa
test
dec
into
xor
add
pop
or
movl
pop
pop
xor
pop
dec
push
fildl
outsl
call
sub
fcomps
loop
repnz
add
xlat
push
lods
push
cwtl
pop
sbb
imul
leave
scas
dec
pop
push
fistpl
loopne
roll
mov
fstpl
fisubrs
jae
xchg
sarl
or
dec
inc
xor
adc
in
stc
jle
push
std
xorl
arpl
cmpsl
sub
in
out
add
in
packssdw
mov
pop
pushf
add
into
test
push
lret
cwtl
cli
shl
jmp
and
scas
aam
pop
add
adc
inc
cmp
bound
mov
scas
jnp
and
pop
mov
jmp
outsb
inc
pop
mov
lods
fsub
das
outsb
popf
je
or
shl
mov
lret
jp
jae
insb
daa
lock
movsl
lds
jecxz
mov
jae
hlt
lcall
mov
add
aad
sbb
or
ja
out
aaa
cmp
inc
pop
sbb
pop
adc
ljmp
sub
repnz
gs
popa
loopne
push
adc
fisubl
and
shll
jg
mov
xchg
lcall
xchg
jo
js
pop
fnstsw
andl
fcompl
xchg
jo
icebp
dec
sbb
lret
or
mov
and
sub
push
ljmp
lret
das
mov
or
pop
daa
inc
sbbb
test
inc
inc
dec
adc
xchg
in
lock
repnz
adc
pop
outsl
fildll
add
and
sbb
cmpsb
xchg
push
push
push
xor
fisubrs
imul
jne
adc
mov
loope
and
imul
sbb
or
ret
fcmovnu
sub
mov
adc
mov
rorb
aad
xchg
out
test
in
dec
pop
xchg
dec
lcall
xchg
shl
pop
mov
push
push
stos
pop
adc
xor
mov
cs
mov
dec
rclb
lds
mul
iret
jmp
xchg
xchg
push
fwait
and
scas
jne
push
jnp
cs
insl
jmp
test
sbb
fwait
aad
mov
adc
push
js
cmp
loope
mov
mov
out
inc
je
cmp
call
jmp
pop
test
ljmp
stc
shr
lea
jb
ja
pop
push
js
lret
out
inc
jne
cmpsl
dec
xor
mov
mov
ror
and
xchg
lods
mov
cli
sub
mov
jmp
aas
xchg
jae
jecxz
dec
push
xor
push
cmp
inc
ja
call
lds
inc
pop
adc
in
inc
dec
dec
fadds
push
mov
xlat
movsb
aas
dec
pop
pop
push
outsl
lret
into
push
popa
sub
sbb
xchg
sbb
lcall
sti
loopne
xchg
into
repnz
sbb
stc
cmp
and
mov
test
lret
add
push
rcll
adc
cmp
scas
xchg
stc
mov
aad
cmp
jmp
xchg
test
outsb
dec
loopne
mov
ret
lods
outsb
in
sub
pusha
cwtl
insb
push
sub
xorb
jge
push
cmpl
testl
pop
fists
inc
sub
inc
lret
popa
push
cmp
xor
ss
sahf
jmp
dec
mov
fildl
mov
jmp
jle
mov
loopne
mov
test
adc
repz
xor
or
mov
in
mov
lret
mov
nop
movsl
jns
stc
in
pop
add
pop
std
add
xchg
mov
and
ret
in
js
lock
and
cmp
imul
outsb
loope
fisttpl
sub
add
sub
xor
mov
addr16
gs
push
mov
add
cltd
mov
sbb
mov
and
clc
jns
enter
mov
push
sar
mov
sbb
mov
call
popf
xchg
popa
inc
ds
push
dec
jae
pop
push
fiadds
inc
push
sub
pop
bnd
ret
xor
adcl
aas
push
mov
xor
insl
and
ss
repnz
cmp
mov
pop
add
fcomps
movsb
mov
jmp
cld
mov
scas
jo
cmp
shrl
jl
arpl
clc
imul
sub
fimull
stc
mov
pop
icebp
popf
or
decl
nop
xor
cmp
jmp
je
adc
jl,pt
sbb
jno
push
in
or
enter
arpl
lret
adc
xchg
xor
ret
ljmp
lcall
pushf
in
dec
push
xchg
jns
in
in
hlt
cmpsl
sarb
push
xlat
xlat
pop
iret
movsl
mov
xchg
sub
fdivrl
in
sbb
shrl
xor
mov
js
dec
jle
outsl
insb
and
push
jne
jno
js
imul
jmp
mov
jno
xchg
push
lods
pop
testb
mov
loope
test
test
jno
jne
dec
sbb
mov
shll
decb
xchg
arpl
out
test
enter
jle
in
aas
pop
lcall
adc
inc
dec
addr16
addr16
popa
and
sub
lds
mov
add
mov
adc
xor
mov
pop
fiaddl
imul
fildll
lea
repnz
cmpsb
sbb
mov
inc
push
incb
cmpb
jbe
sbb
in
inc
inc
out
pop
lods
out
testl
jbe
in
sub
adc
pop
mov
pop
cld
cmpsl
inc
aas
std
pop
adc
dec
sbb
pop
cmp
jae
outsb
shrl
inc
add
popf
jg
js
insb
pushl
sbb
mov
addr16
mov
lods
imul
mov
add
add
hlt
pop
sub
push
or
movsb
cli
push
js
nop
push
hlt
mov
inc
gs
ret
lret
mov
and
arpl
scas
xchg
xor
movsl
jbe
pop
int3
and
lock
nop
dec
addps
mov
sbb
pop
loopne
popa
ja
pop
inc
lea
lret
or
out
xchg
pop
out
cmc
cmpsb
and
add
xchg
scas
test
cmp
xor
mov
pushf
jmp
cli
or
sbb
pop
jne
hlt
dec
jno
jo
xchg
mov
imulb
jb
lcall
repz
frstor
testl
mov
inc
movsl
jno
push
pop
or
mov
in
les
push
xchg
leave
pusha
movsb
pop
adc
dec
fucomi
loopne
mov
xor
cmp
pop
push
mov
into
xchg
jp
fs
daa
xchg
jae
cmpsb
ret
pop
ja
ljmp
loopne
sub
cli
xlat
cli
push
fwait
pop
aam
jae
inc
aaa
roll
jg
jle
jb
mov
mov
sub
cmpb
scas
inc
scas
jbe
xor
cmp
pop
or
pop
pop
and
pop
jnp
lea
ret
das
mov
push
outsl
lock
mov
jmp
ss
test
dec
cld
xchg
sub
inc
cwtl
pop
mov
or
pop
push
call
loop
out
movsl
mov
int3
jge
jno
stc
sbb
dec
xlat
adc
mov
mov
movsl
jbe
xchg
repz
or
sbbl
int3
js
and
xchg
outsb
dec
or
stc
mov
test
jb
or
bt
icebp
arpl
cmp
adc
movd
ret
jns
or
xchg
fistpl
cmpsb
int
es
lret
add
xor
jae
pop
leave
lret
push
adc
fdiv
enter
mov
leave
out
xor
lcall
repnz
not
lds
xor
xor
cs
bound
scas
push
repz
pop
mov
cltd
dec
push
in
adc
xchg
lods
jg
push
xor
lock
mov
xor
lret
pop
loopne
loop
pop
sbb
inc
sbb
movsb
fdivrs
pop
sbb
jg
fucomi
inc
scas
lea
ljmp
ret
xchg
addr16
mov
pop
push
mov
add
xor
sub
cltd
dec
xor
mov
sub
cli
scas
sub
dec
adc
fwait
in
xor
xor
adc
sti
cmpsl
lcall
lea
test
and
cmp
xchg
jp
aam
jmp
je
out
sbb
and
mov
cmp
in
and
mov
inc
pusha
loope
ja
shll
sub
adc
mov
add
cmp
jge
pop
outsl
neg
xchg
outsb
cli
jp
add
jno
pop
test
mov
pop
pop
inc
pop
dec
and
and
mov
jnp
cmp
std
bound
sbb
push
and
insb
sahf
test
fstl
pop
inc
adcl
icebp
cld
stos
jp
test
sub
cmp
fwait
dec
mov
rorl
shl
xor
stos
mov
call
mov
iret
push
rol
pop
mov
cld
mull
mov
das
icebp
es
fbld
or
cmp
loope
mov
mov
or
sub
lcall
notl
xor
mov
popa
mov
sahf
xchg
bound
lods
push
push
jmp
pop
rcrb
popf
fisubrl
pop
aas
lahf
jg
push
add
mov
push
in
movsl
enter
shrb
outsl
cmp
ss
and
dec
popf
lods
sti
and
imul
sbb
es
pop
cmp
and
dec
pop
push
int
sbb
imul
mov
stos
sub
dec
add
pop
sbbb
cmp
daa
lcall
mov
mov
loopne
out
pop
in
dec
icebp
dec
inc
movsb
test
sub
pop
and
pop
lds
inc
pop
adc
xor
push
push
xor
cld
js
xchg
movsb
push
push
mov
mov
xlat
mov
mov
lcall
mov
push
icebp
cmpb
pop
mov
rcrl
push
addr16
add
into
loop
xchg
pop
inc
xor
dec
pop
fldcw
dec
mov
loope
mov
enter
jne
sub
je
repz
add
or
xchg
adc
ret
jecxz
mov
call
scas
cmp
adc
mov
adc
ret
sbb
in
ljmp
mov
xchg
xchg
jl
xchg
pop
add
scas
lret
call
dec
int
adcb
out
push
mov
sbb
dec
loope
mov
jo
out
add
out
and
add
and
xor
sbb
or
mov
push
iret
mov
imul
es
xor
movsl
mov
inc
adc
cmp
jbe
pop
les
adc
and
mov
pusha
mov
adc
pop
shrb
xchg
ljmp
lods
xchg
mov
or
mov
sbb
inc
sahf
fdivs
xchg
pop
imul
rclb
ret
aas
jno
xchg
cmp
mov
je
mov
mul
sbb
into
nop
adc
xchg
std
dec
add
aaa
pop
mov
in
xor
push
roll
mov
jge
push
add
loope
xchg
xchg
loope
into
in
add
test
js
jp
scas
lcall
js
mov
cltd
and
fsts
push
push
out
mov
xchg
mov
xor
mov
addr16
lahf
js
pop
std
aaa
shlb
outsb
lret
nop
fs
popf
xchg
inc
mov
xchg
fcoms
and
sub
cmovbe
pop
push
cltd
std
mov
inc
bound
adc
pop
jmp
jae
mov
cmpsl
aas
jno
arpl
je
jecxz
mov
orl
fildll
adc
sti
dec
lea
mov
jns
xchg
xchg
aaa
inc
adc
leave
out
pop
arpl
cmpl
std
xor
inc
cs
jns
inc
cmp
test
imul
pop
movsl
push
adc
or
pusha
jno
add
sub
fucomip
cmp
xor
lods
out
mov
jle
into
ret
out
sbb
adc
dec
lahf
hlt
and
js
mov
mov
arpl
faddl
and
enter
pusha
clc
pop
cmp
int
sahf
jo
pop
je
into
sar
fnclex
or
imul
dec
mov
adc
pusha
adc
pop
fistpl
dec
xchg
lcall
mov
mov
jbe
call
xchg
scas
popf
add
xor
sbbl
sub
sahf
pusha
cmp
cmp
scas
xchg
lds
enter
add
loope
xor
xchg
xchg
sbb
or
movsb
popa
and
adc
sub
or
cmpsl
imul
pop
stos
pushf
mov
dec
aas
cld
xorb
mov
sub
and
fdivs
nop
cmp
fs
sub
xor
mov
add
fucomip
jae
push
popa
and
dec
nop
dec
imulb
mov
lds
pop
mov
lea
lsl
mov
scas
pop
mov
xchg
inc
repnz
out
dec
jno
lahf
pop
mov
stos
sub
xchg
inc
jne
iret
aaa
jmp
jecxz
jl
sub
pushf
loop
jno
aam
dec
lods
cmp
ljmp
add
pop
nop
lahf
movsb
pop
mov
loope
imul
jecxz
divl
in
incl
mov
fmull
jb
mov
hlt
push
std
out
lds
mov
adcb
push
test
sahf
pop
mov
repz
xor
shrl
popf
push
cwtl
jmp
outsb
aaa
inc
stc
cwtl
bound
sub
push
or
leave
sub
test
sarb
dec
inc
gs
pop
xchg
into
mov
mov
dec
mov
jge
scas
lret
ss
jle
shl
sub
in
ds
idiv
inc
repz
mov
cmpsb
aas
jbe
dec
sub
xchg
xchg
adc
cmp
aaa
mov
fdiv
loope
sub
in
sarb
test
xchg
mov
adc
or
enter
pop
iret
popa
mov
std
dec
xchg
jp
xchg
stos
jl
cmp
aad
mov
add
test
mov
orl
mov
iret
shll
sub
xor
xchg
jge
and
jno
pushf
pop
mov
cmpl
push
outsb
jno
testl
cmp
out
ss
inc
xchg
sbb
mov
fnstcw
rorb
lcall
jl
psrad
or
testb
hlt
adc
lcall
dec
pop
test
xorl
aad
in
fwait
xchg
mov
jo
lock
stos
aad
adc
adc
push
ja
or
repz
das
loopne
bound
and
lods
mov
jb
push
xor
je
add
add
push
push
cmp
cmp
nop
mov
out
push
mov
xor
cmpsb
je
push
insb
or
leave
or
in
test
in
or
sbb
pop
sbb
jo
rcll
mov
enter
cmp
lcall
mov
sub
loopne
shl
aad
or
or
sub
mov
cmpsl
mov
push
jo
ret
insl
jno
movsb
dec
push
pop
stos
cmp
shrl
jns
add
pop
mov
shrb
jle
out
repnz
pop
ljmp
sub
sbb
ja
inc
mov
lods
js
push
inc
push
xchg
aas
ret
add
mov
push
add
pusha
cmp
call
cmp
push
cld
lods
adc
add
and
inc
hlt
and
shlb
repnz
imul
jno
lret
inc
adc
add
ret
stos
lret
data16
out
lods
mov
xchg
mov
and
or
xor
popl
rorb
push
pushf
insl
push
lahf
sbb
mov
pop
clc
xor
push
fmull
adc
push
jg
popf
xchg
mov
jo
mov
icebp
cmp
sub
pop
sbb
mov
adc
dec
xchg
cwtl
rcrl
cmp
jmp
pop
js
push
into
std
sub
sub
push
xchg
xchg
adc
insb
push
outsb
inc
cmp
xor
dec
fdiv
js
es
insl
pop
repnz
in
mov
jns
jmp
repnz
gs
stos
jmp
imulb
in
add
cwtl
and
adc
cli
jne
pop
iret
mov
add
cwtl
add
je
data16
add
daa
cmc
or
cmc
leave
ret
sti
movsb
shrl
push
cmp
jge
stos
sbbb
xchg
mov
ret
inc
or
aas
ret
bound
pusha
pop
iret
xor
inc
vpsraw
or
adcb
xchg
es
push
outsb
xchg
or
cwtl
push
subl
in
inc
add
xchg
mov
cli
mov
push
lea
xor
inc
fiaddl
push
mov
sub
pop
stos
jo
xor
push
gs
adc
lods
lods
jne
cmp
mov
inc
dec
pop
pop
fiadds
data16
sbb
cmc
add
das
mov
mov
xchg
insl
mov
lods
leave
and
xor
cmp
cmovno
jmp
in
shrb
add
mov
xor
mov
faddp
loopne
mov
or
pusha
mov
sahf
mov
adc
mov
add
mov
and
push
fwait
insl
add
sub
mov
mov
dec
rolb
rorb
clc
mov
add
sub
iret
sub
xor
mov
sub
cmc
xchg
inc
bswap
jg
push
out
xchg
jno
in
xchg
push
pop
sbb
or
push
pop
popa
xchg
loope
lock
jnp
and
sbb
mov
stos
fstpl
mov
arpl
lock
sbb
dec
and
arpl
sahf
adc
mov
rclb
popa
inc
mov
popa
test
inc
cmp
add
sub
inc
mov
gs
aaa
mov
or
or
mov
subb
jne
mov
xchg
cmp
ss
add
dec
mul
lea
std
bound
push
aad
cwtl
sahf
inc
sbb
scas
movsl
push
mov
xchg
mov
sub
cs
add
mov
stos
dec
add
lock
mov
adcl
mov
leave
popa
js
stos
mov
bound
insb
clc
movsl
jae
into
add
adc
jmp
jp
jnp
cmc
xlat
pop
test
mov
mov
add
adc
leave
mov
std
js
sbb
aam
stos
xchg
outsl
dec
xor
test
xchg
int3
lods
sub
mov
bound
adc
ljmp
aas
sub
clts
mov
push
rol
int
adc
pop
cmc
add
rorl
mov
sbb
and
dec
xor
out
cmpsb
test
je
ret
aaa
dec
inc
cmpsb
add
jno
mov
lahf
out
xor
repnz
loop
insb
aas
mov
mov
xor
in
xor
cmp
nop
xor
or
mov
inc
stos
mov
sbb
push
loopne
push
call
std
or
aaa
lret
hlt
sbb
ds
adc
sub
cmp
jmp
adc
rorb
rcrb
hlt
mov
imul
inc
mov
cmp
xchg
mov
jne
clc
mov
add
lea
jle
stos
push
xchg
shll
push
add
pop
gs
jp
jno
aam
arpl
jne
push
xor
mov
fistl
add
dec
jmp
pop
dec
dec
test
adc
cmp
aaa
push
xchg
mov
into
inc
lock
push
mov
dec
aad
out
addl
cmp
mov
fyl2xp1
mov
pop
dec
lea
shl
dec
sub
insl
lcall
xor
pop
xchg
and
pop
sub
imul
shlb
xor
inc
add
mov
imul
fistps
jmp
dec
hlt
add
repnz
jp
lret
mov
cmp
rcll
mov
ljmp
lods
dec
push
or
sbb
sahf
mov
popa
cmp
jp
pop
mov
je
aad
adc
sub
sub
iret
mov
inc
pop
pop
mov
adc
mov
fistpl
cmp
fs
xchg
and
shll
ret
xlat
loope
dec
lods
mov
stos
jns
push
add
jmp
mov
and
adc
ret
ja
sbb
lods
mov
mov
cli
and
adc
sbb
movsl
sarl
push
in
inc
xor
call
ds
lods
xchg
or
das
adc
mov
push
sahf
sbb
outsb
cmp
mov
inc
addr16
insl
sub
push
sub
repnz
mov
jecxz
adc
mov
xchg
mov
sbb
dec
inc
push
push
mov
dec
jno
jg
fsubr
jge
movsl
sbb
jnp
scas
mov
popf
adc
in
adc
test
pop
jo
addr16
add
out
fisttps
push
mov
mov
adc
jmp
subl
jb
pop
xor
sbbb
mov
mov
add
loope
xor
dec
push
jnp
mov
test
inc
inc
outsb
rorb
lods
es
push
xor
push
xor
pop
mov
out
stos
dec
jns
pop
add
xor
jns
movsl
pop
mov
pop
add
imul
add
repz
inc
data16
imul
in
mov
cmpsl
js
dec
imul
sub
pop
mov
in
fwait
pop
test
inc
repz
pop
push
addr16
sbb
inc
sti
dec
inc
std
jl
dec
mov
adcl
cmp
push
and
push
add
cli
jmp
xor
leave
sarl
cmp
aam
mov
scas
sub
scas
mov
orl
pop
jb
aaa
subb
imul
cmp
in
outsl
mov
aam
add
cmp
pop
cmp
dec
mov
and
jae
adc
push
js
xchg
pop
cmp
or
das
dec
test
pop
movsl
push
dec
bound
sbbl
f2xm1
in
and
adc
repnz
jl
cli
pop
in
repz
addr16
cli
imul
add
xchg
pushf
lods
movsl
jne
out
adc
mov
cmp
ror
js
inc
inc
jmp
push
sub
sub
fisttpl
push
cmc
push
test
xor
cmp
and
xor
leave
mov
and
popa
loop
movq
out
inc
fstl
jp
jae
mov
dec
ds
inc
addr16
pop
jnp
sti
cs
sub
pushf
loop
inc
icebp
cs
xchg
fwait
outsb
push
pop
xor
lea
push
dec
hlt
inc
xchg
cltd
sbb
loop
jle
bound
adc
addr16
xchg
sahf
jl
insl
sarl
add
dec
ret
add
xor
daa
push
lcall
sub
dec
int
sub
loope
ss
add
jae
cmp
xchg
cmpsb
xchg
int3
xor
cmp
lretw
xor
test
inc
popa
addr16
in
test
pop
sub
movsl
mov
test
mov
enter
clc
pop
mov
faddl
adc
lcall
fdivr
idiv
clc
int
out
popf
ficoms
insb
imul
push
and
pop
push
mov
push
or
test
shrd
lods
mov
push
or
push
ret
jg
rcrb
and
inc
sti
ja
and
dec
stc
xorb
loopne
aaa
icebp
cmp
or
mov
push
push
enter
cs
and
cs
outsb
daa
mov
subb
test
popa
xchg
fpatan
sbb
out
xchg
cmp
sarl
jb
jecxz
push
xchg
in
fs
loopne
iret
leave
adc
mov
pop
mov
outsb
pop
dec
scas
repnz
cmp
pop
lret
outsb
adc
pop
mov
xchg
mov
or
sbb
xchg
jl
add
hlt
sbb
inc
xchg
loope
shrl
push
mov
cmp
popa
xorb
cltd
cmpsl
repnz
add
xchg
shl
je
mov
jbe
ficoml
lahf
lret
push
dec
arpl
fsubrl
into
outsl
rcrl
cmp
and
xor
test
inc
pop
out
lods
fdivrp
xchg
xchg
loope
cmp
dec
movsb
ds
popf
fildl
sti
and
ret
das
lret
stos
fmull
cld
mov
and
adc
loop
or
inc
mov
cmp
rclb
mov
mov
sti
and
out
xchg
inc
insl
dec
repz
dec
adc
lret
xchg
jb
jno
or
lods
cmp
dec
and
pusha
leave
or
inc
sbb
xchg
sub
jae
ret
adc
in
xchg
lock
sbb
xchg
pop
mov
negb
cmova
sbb
xor
call
sub
test
push
test
sub
mov
mov
js
lahf
push
fidivl
rep
add
shll
sub
lods
dec
push
loope
inc
mov
rorb
push
into
xchg
or
mov
mov
push
cmpb
daa
loopne
fstpl
mov
sbb
adc
lahf
xchg
jbe
movsb
push
jne
ret
decb
inc
outsl
pop
or
arpl
sbb
lods
adc
xchg
leave
test
sbbl
sbb
push
jb
sub
sub
pop
test
add
jle
add
xchg
repz
jnp
insb
imul
imul
in
notb
popl
in
out
into
idiv
int
shr
repz
shrl
inc
daa
cli
and
js
jns
mov
addb
out
cmp
and
rcll
mov
and
ds
and
lcall
mov
dec
add
imul
xor
movsb
loop
dec
inc
test
cmc
lea
mov
in
push
lret
pushf
inc
cmpsl
cmpsb
mov
jmp
pop
jbe
xor
push
data16
scas
lock
fwait
xor
bnd
call
test
cli
push
sub
in
fildll
dec
icebp
fsubs
pushf
jmp
aad
sbbb
in
fisubl
push
lods
or
shl
gs
fstpt
fisttpll
in
imul
cld
cmp
jge
mov
pop
mov
sbb
repz
push
inc
in
fsubrl
mov
cmpsb
mov
aas
rcr
arpl
stc
sub
enter
dec
test
cmp
adc
and
jp
movsb
or
lcall
xor
lcall
lea
shrl
mov
push
gs
in
cmpsl
bound
loope
adc
dec
xchg
aaa
scas
std
je
xorb
xor
fdivrl
jne
jmp
std
mov
adc
daa
in
lret
push
jle
ret
sbb
std
sbb
addr16
insb
jle
out
subb
sahf
and
sti
dec
sbb
dec
std
stc
xchg
push
mov
lds
mov
and
push
fdivrp
lods
movsb
ficoml
jp
cltd
sahf
mov
mov
cmp
fimuls
cltd
mov
fbld
mov
loopne
jae
fs
fidivrs
rorb
imul
sub
pop
pop
or
test
sti
adc
enter
stos
fnsave
data16
jp
stos
out
sub
cltd
push
inc
loope
pop
sub
inc
js
es
mov
gs
repz
mov
repz
push
pusha
and
lahf
pop
sub
lds
ja
jmp
test
pusha
mov
xchg
imul
lods
jle
aam
sub
mov
jmp
dec
mov
jno
filds
sbb
test
shlb
xlat
adc
fwait
push
xchg
adc
add
insl
and
xlat
out
dec
scas
clc
sti
ffreep
shlb
rolb
out
mov
mov
out
jnp
mov
mov
lcall
jnp
cmc
mov
dec
dec
jae
mov
dec
cs
pop
dec
and
cmpsl
mov
mov
clc
loopne
mov
insb
mov
or
scas
push
ret
ja
andb
mov
lea
enter
test
adc
sbb
rdtsc
repz
js
jb
fistl
hlt
add
jle
pop
fidivrl
repz
xor
pop
push
mov
in
fmulp
test
fisubrl
leave
mov
jbe
lcall
mov
aaa
fisubrs
xor
cwtl
lret
hlt
pop
dec
jno
clc
sub
mov
cmp
push
pop
aad
mov
add
out
outsb
stos
into
rcrl
call
dec
cli
les
mov
xlat
cmp
int3
inc
out
xchg
test
xor
mov
and
sub
imul
ret
jge
inc
mov
pusha
mov
insl
scas
jnp
mov
fsubp
mov
fst
push
imul
push
sti
popa
adc
pop
popa
hlt
xchg
sbb
xchg
xchg
es
ja
xlat
in
pop
xor
leave
test
sbb
ret
sbb
sbb
dec
mov
cmpsl
arpl
leave
mov
push
xchg
mov
shl
xchg
in
mov
mov
adc
pop
shrl
or
inc
data16
dec
add
fistl
mov
mov
imul
test
sbb
jmp
stos
aam
cmpsl
inc
push
pop
int
stos
xchg
jbe
out
in
inc
mov
and
mov
push
dec
movsl
ss
loopew
xchg
lock
decb
push
mov
push
xor
scas
sub
mov
ljmp
clc
inc
hlt
dec
lods
insl
xchg
dec
add
cli
xor
adc
or
fldt
jbe
mov
sub
in
mov
push
cs
jb
pushf
call
mov
test
ret
daa
pop
fldt
xchg
shr
into
cs
cmp
cmpb
add
cmpsl
daa
movsb
out
adc
push
arpl
test
and
push
pop
sbb
insb
push
and
mov
out
mov
push
mov
adc
data16
sub
sbb
mov
xor
mov
test
dec
enter
or
push
xlat
mov
fs
mov
imulb
mov
int3
dec
push
add
das
xchg
push
fdivs
mov
dec
fs
mov
pop
xchg
xchg
mov
repz
pop
xor
add
xchg
pop
jp
arpl
jne
cwtl
fistps
adc
dec
fcomps
sbbl
jl
mov
hlt
pop
jnp
mov
push
stos
ss
xchg
and
jo
in
ja
and
ss
lds
dec
movsb
test
data16
in
in
fisttpll
mov
bound
and
hlt
mov
add
cld
mov
jno
pop
push
call
outsl
add
int3
jmp
mov
mov
mov
pop
pop
mov
inc
sub
and
adc
push
push
fcomps
stos
pop
jo
xchg
mov
inc
pop
pop
jg
pop
pop
iret
jge
xor
mov
inc
mov
xchg
test
and
sahf
dec
mov
ljmp
iret
pop
out
adcl
or
pop
cmp
adc
dec
aaa
cmp
ljmp
lcall
dec
nop
orl
es
and
aad
pop
ficoml
jnp
and
rcrb
adc
fsub
ret
inc
enter
sbb
dec
pop
cmc
rolb
inc
test
pop
loope
pop
or
xor
inc
xchg
pop
rcrb
dec
fwait
inc
sub
movsl
push
add
mov
sub
mov
pop
sub
shl
xor
int3
je
mov
in
aad
jge
popa
scas
xor
sub
or
jl
mov
add
popf
cli
sbb
out
xchg
and
add
inc
lcall
dec
sub
popa
test
xchg
movsb
inc
pop
xchg
jmp
dec
cld
mov
add
.byte
test
clc
.byte
sahf
jmp
xchg
cmp
add
add
add
sub
or
push
mov
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
or
add
add
add
inc
gs
jb
arpl
fs
jae
add
or
add
add
sub
pushf
push
pusha
call
subl
mov
push
lea
add
push
xor
pushl
push
fildl
fistpl
mov
jmp
mov
popl
add
ret
mov
mov
jmp
lret
dec
loop
cmp
jne
pop
lea
mov
mov
mov
lods
xor
stos
add
xchg
ror
inc
loop
into
shrl
add
cli
imull
pop
fwait
sub
xchg
popf
fistpl
mov
inc
aas
sbb
mov
and
add
ror
pop
das
sbb
inc
lea
inc
ja
movl
adc
cmp
sbb
sbb
mov
loopne
fimuls
negb
daa
add
daa
sbb
mov
arpl
pop
fmul
fisttps
lcall
cwtl
loope
add
imul
mov
dec
je
pop
lea
test
fsubrs
add
js
inc
push
ds
js
adc
dec
add
mov
ja
inc
dec
sahf
cld
lods
push
int3
test
test
out
xor
icebp
xlat
int3
and
test
mov
out
cltd
jae
xchg
jl
lock
mov
imul
mov
enter
out
add
test
stos
mov
adc
fcoml
out
ja
out
out
pop
cs
inc
pop
inc
mov
nop
cmc
loop
enter
adc
fisttps
mov
mov
popf
mov
mov
mov
cwtl
mov
mov
mov
int
repnz
stc
fstl
aas
addr16
enter
insl
xchg
cmpsb
pop
jmp
call
inc
inc
add
jb
aad
nop
inc
ljmp
sarb
adc
mov
arpl
pop
lret
in
xchg
sarb
xchg
or
and
jns
jmp
cmp
pop
rorb
mov
mov
enter
nop
ljmp
lea
loop
mov
lock
mov
popl
sbb
jmp
pop
fwait
cltd
insl
mov
jge
xchg
xchg
es
dec
lret
mov
or
das
sti
out
repnz
or
movsb
xchg
jl
fwait
xchg
nop
mov
imul
mov
mov
aad
jmp
stos
pop
adc
repz
jae
mov
adc
mov
ret
shll
das
pusha
mov
cs
mov
in
mov
push
or
push
or
cmpsb
or
rsqrtps
xor
sub
push
sub
sti
mov
aam
adc
icebp
repz
addb
pop
push
test
pusha
inc
add
jne
dec
mov
mov
jle
mov
push
mov
jno
cmpsl
mov
or
lret
shll
inc
mov
xor
scas
add
jno
aas
mov
fisubrs
push
or
mov
inc
imul
les
push
push
out
xchg
adc
sarb
cli
xchg
jb
lea
or
jns
dec
jecxz
lcall
push
int3
cmc
das
mov
data16
fdivl
and
in
sub
xchg
xchg
or
jne
rcrb
adc
xchg
das
les
jl
int
add
loopne
push
push
jle
dec
es
or
lods
xlat
add
in
mull
idiv
sbb
pop
scas
movsb
push
sub
movsb
rcr
xchg
jg
sbb
in
xlat
imul
daa
adc
shr
dec
es
arpl
insl
aaa
xchg
dec
out
sbb
in
xchg
test
or
out
idivb
clc
std
pop
sub
and
int3
out
mov
ret
bound
popf
and
xchg
lret
mov
test
cmpsl
push
test
jle
imul
loopne
push
sub
dec
xchg
ljmp
scas
sbb
and
enter
push
or
mov
add
add
add
add
