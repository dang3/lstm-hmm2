mov
aas
dec
dec
push
add
mov
jo
clc
cmp
push
cmpsl
testb
inc
leave
pusha
lods
xor
xrelease
pusha
push
push
fldenv
jnp
hlt
insl
xchg
mov
or
fabs
mulb
sub
and
xchg
mov
aad
rcrb
mov
stos
cmp
adcl
push
add
inc
std
mov
jmp
xchg
add
add
jl
inc
in
and
popl
dec
push
iret
int3
pushf
movsb
ret
or
and
aaa
cmp
or
sbb
lea
xorb
call
mov
and
add
jmp
sbbl
les
icebp
outsl
test
dec
ljmp
and
das
scas
cmpsb
cmpsl
lods
ja
cwtl
leave
pop
arpl
nop
leave
add
adc
and
pop
push
pop
daa
das
dec
inc
rclb
inc
jbe
jne
enter
call
rcr
loopne
push
flds
xor
dec
jns
movsb
daa
mov
jns
imul
mov
sbb
pop
popa
jns
out
xchg
pop
fcom
jns
fsubp
sarl
lea
jae
ds
pop
mov
mov
movsl
stos
mov
aas
fucomip
repz
sbb
push
mov
dec
and
imul
int
push
lods
mov
fsubl
in
and
scas
gs
pop
xor
xor
pop
cmpsl
mov
enter
in
ja
jb
inc
sbb
int3
push
insb
push
pop
in
cs
test
xchg
call
inc
shlb
push
mov
into
xabort
xlat
fisttps
psubsw
in
aaa
inc
shll
xchg
mov
cli
xorb
push
loope
cmp
jecxz
into
fsubrl
xchg
sbb
mul
repz
out
je
bound
pop
cltd
cmp
push
mov
sub
jl
add
adc
enter
and
jbe
sub
scas
cmpsb
xor
pusha
out
int
jae
push
push
cltd
mov
inc
push
mov
in
mov
sarl
aas
stos
sbb
repz
jmp
cmp
push
cld
xor
mov
lcall
push
fdiv
cmc
push
cli
add
loope
repnz
cmp
pop
jnp
jae
test
mov
int
aad
xchg
sbb
insb
add
adc
std
sub
lahf
lret
ret
iret
fs
repnz
iret
lea
xlat
str
fstpl
xchg
xor
test
sbb
push
mov
pop
pop
aam
sahf
adc
rclb
jle
cli
add
mov
pusha
leave
pop
data16
mov
leave
dec
inc
ss
adc
xor
mov
cmp
mov
lret
aad
test
push
mov
sub
ret
jle
cs
imul
mov
addr16
fimuls
push
xchg
push
cmp
leave
dec
sub
cmp
stos
mov
mov
dec
sbb
repnz
call
inc
enter
sub
cmp
aam
cmp
rcr
lods
mov
rol
int
and
mov
push
and
adc
popf
dec
popa
arpl
outsl
in
hlt
outsl
add
subb
fsubrs
or
idivl
mov
mov
std
insb
bnd
sbb
push
lds
loope
jle
xchg
das
inc
jo
imul
xchg
dec
in
in
pop
inc
js
bound
jnp
mov
cmpsb
lret
stos
cmpsb
sahf
add
and
add
and
add
mov
cmp
gs
pop
and
xor
jno
cmp
dec
jbe
jo
mov
movsl
mov
fisubrs
xchg
add
or
adc
std
jne
adc
mov
fistpl
add
mov
cmc
dec
inc
rolb
and
and
ds
mov
popl
sar
loop
sbb
shl
jmp
push
adc
and
and
mov
and
aad
mov
adc
inc
rclb
jb
std
clc
aas
jle
mov
sbb
shlb
mov
scas
out
repz
jmp
jns
sub
mov
push
arpl
fsub
push
xlat
bnd
push
mov
push
sahf
or
mov
loopne
pop
sbb
das
sbb
sub
stos
or
js
fisttpl
fisubrl
daa
xchg
and
aas
add
jbe
push
cmpsl
rcrb
pop
insl
addr16
push
jl
mov
or
sub
lock
jecxz
push
pop
xchg
shll
out
cld
incb
push
sub
pop
xchg
stos
jnp
mov
insb
inc
popa
mov
into
addl
add
cmpsb
xor
mov
imul
xchg
pushf
movsb
stos
cmpsl
lcall
push
out
int3
mov
iret
push
hlt
cld
out
and
sub
xor
das
pushf
jg
mov
push
frstor
das
repnz
dec
sbb
decb
mov
mov
mov
out
popf
and
add
push
sbb
xor
xor
outsb
mov
loope
testb
bndldx
jmp
rcl
loop
das
sahf
mov
adc
pop
xchg
cmp
out
mov
pop
call
or
loopne
push
add
icebp
or
jae
orb
cwtl
pushf
xorl
mov
or
add
inc
cmp
cmp
jne
cmp
jge
mov
xchg
int
lds
dec
dec
inc
sub
push
add
addl
sub
ret
mov
add
addr16
pop
or
sbb
jmp
sbb
push
cld
ja
outsl
inc
dec
xor
jns
mov
rcll
stos
gs
pop
inc
mov
add
cmc
sub
pop
outsb
jge
adc
jge
int
loopne
lods
mov
call
and
std
loop
pop
insl
pop
sub
inc
cwtl
mov
rcl
mov
mov
and
addr16
cli
push
shrl
imul
sbb
scas
scas
fdivs
mov
add
test
sbb
dec
push
pop
jnp
test
or
sub
shrb
pop
movsl
sub
and
dec
into
pusha
push
xchg
cltd
pusha
sarl
pop
xlat
test
stos
sbb
faddl
cmp
je
pop
loop
sbb
pop
lea
movsb
cmpsb
scas
leave
dec
jo
mov
sub
testb
add
stos
jp
add
adc
jnp
imul
push
mov
xor
lds
xor
xchg
pushf
das
movsl
in
cs
daa
mov
loope
repnz
cmp
std
pop
insb
jne
or
pop
push
and
xor
in
cmc
lret
adc
jp
push
pusha
fists
xchg
mov
mov
ja
ds
es
lock
fs
loope
jns
imul
jno
aaa
mov
cmp
jo
andl
inc
ds
movhps
cmp
push
pop
or
push
dec
fcomp
out
jae
pop
push
adc
jns
pop
cltd
fildll
xor
stos
adc
in
dec
out
ror
ret
xor
jmp
sub
out
jne
into
cmp
or
and
aam
addl
add
aad
dec
insl
in
sbb
cld
jmp
xchg
fwait
scas
inc
pop
mov
adc
in
int3
cmp
sbb
jge
jecxz
into
in
mov
in
push
push
inc
mov
pushf
and
inc
loopne
hlt
push
pop
outsl
stos
xor
dec
mov
push
inc
mov
insb
andl
lock
fisubl
popa
sahf
sub
dec
pop
jns
fidivl
xor
test
mov
push
stos
pushf
test
shlb
leave
repnz
add
scas
ja
xchg
js
iret
js
xchg
scas
fisubs
push
rorl
push
cwtl
loop
adc
cmpsb
push
lret
ret
sub
nop
cwtl
mov
cmp
add
xor
jo
adc
push
stos
pop
pushf
xchg
stc
pusha
push
in
in
fbstp
mov
inc
dec
fstpt
jne
outsl
inc
dec
imul
mov
push
jl
out
arpl
incb
and
mov
push
mov
leave
xchg
dec
dec
pop
jecxz
sbb
fisttpl
aad
sub
sub
stos
sub
xor
aad
pop
in
push
pushl
lret
inc
or
xor
je
movsl
push
pop
cs
cld
push
frstor
cmc
std
add
popa
cmc
and
pop
inc
sbb
sub
insl
cmp
mov
mov
fwait
xor
xor
push
pop
sbb
sahf
int3
jns
sub
sbb
mov
mov
xor
xor
adc
push
pop
cmpl
or
xchg
jno
mov
and
aas
ret
decl
dec
test
popf
mov
leave
xchg
les
mov
aas
orb
add
jmp
ljmp
dec
pop
jl
sub
inc
std
outsb
push
fwait
cmpsl
mov
dec
push
inc
dec
push
push
cmp
orl
mov
jecxz
mov
ret
repnz
pop
and
jnp
in
and
mov
cmc
imul
inc
adc
jne
or
push
mov
cmp
pop
in
repnz
add
lods
xor
jbe
mov
mov
daa
push
add
les
loop
lcall
jge
stc
insb
pop
movsl
add
xchg
inc
int
dec
test
fstpl
sar
add
cli
add
aad
jbe
xchg
call
inc
jae
scas
jecxz
icebp
clc
add
sub
inc
or
push
subl
mov
dec
jno
lods
test
cmp
rorb
jae
jl
jle
mov
scas
xor
es
xchg
outsl
mov
push
aad
sub
mov
lret
jne
dec
mov
mov
ret
shrb
pop
fsubrs
pushf
inc
jne
lods
dec
jp
pop
int3
jg
gs
xlat
sbb
mov
movsl
push
rcrl
sar
cmp
xchg
push
popa
cmp
aam
shrb
adc
and
call
daa
arpl
loope
dec
insb
sub
gs
shl
repnz
add
mov
cmp
cmp
jge
push
push
xchg
iret
js
dec
mov
fwait
mov
outsl
push
shll
daa
das
aaa
xorb
stos
jns
js
push
lock
and
lret
ss
and
ljmp
mov
jb
pop
jmp
fcompp
loope
xor
je
dec
push
popa
push
nop
xchg
lea
pop
popa
inc
push
mov
je
jmp
mov
idiv
push
cmp
loop
orl
ret
pop
add
or
sbb
sub
pushf
dec
push
push
test
dec
push
insb
test
xor
in
dec
fisubrs
pcmpeqw
push
dec
sbb
sub
pop
push
sub
jne
lea
lahf
fldt
adc
push
dec
cmova
jbe
push
pop
mov
pop
push
enter
xchg
mov
and
xchg
sbb
jecxz
dec
sbb
cmc
add
xchg
test
dec
fidivrl
mov
mov
int3
aam
imull
dec
cmpps
mov
xorl
sahf
add
enter
es
add
inc
sbb
pusha
movsl
aaa
pusha
xchg
stos
jns
imul
repz
xor
dec
adc
test
jno
roll
dec
xor
into
movsb
loope
cmpsb
scas
lods
mov
es
fs
inc
iret
pop
ss
xchg
in
cmpsl
stos
mov
lret
fwait
mov
fcoml
repnz
out
jg
jne
mulb
int3
jns
mov
sar
or
inc
in
dec
mov
push
cmp
and
push
mov
popf
movsl
jbe
rolb
je
scas
lret
pushf
testl
shlb
pop
or
lcall
loope
shrb
jecxz
mov
push
leave
and
ja
adc
adc
rcrb
sub
incl
loopne
outsl
lods
das
fcoms
mov
pop
pop
push
jnp
cs
add
and
cltd
mov
loopne
lds
mov
dec
scas
cmp
push
pushf
push
push
js
or
or
js
das
es
xor
inc
mov
lea
dec
inc
push
jbe
fmulp
push
fiadds
into
mov
incb
repz
jp
inc
jo
inc
xor
jne
gs
shrl
in
jecxz
aam
arpl
jno
dec
cmp
add
lret
pop
sub
out
ret
int3
mov
xchg
mov
jbe
jne
testb
mov
call
scas
mov
in
das
cmp
push
sub
cmp
and
dec
shl
pop
iret
push
mov
sub
inc
mov
adc
adc
rolb
inc
mov
ror
push
xchg
mov
mov
aaa
aas
sbb
shrb
mov
subb
popa
ljmp
cwtl
mov
scas
push
sbb
scas
pop
stos
jl
push
pop
pusha
push
stos
pop
pushf
xchg
bound
cs
rcr
jle
jl
sahf
leave
cld
sub
and
cmp
fstpt
jne
je
dec
imul
jbe
aad
fsubp
movsl
leave
test
scas
ss
dec
adc
jge
inc
dec
xor
pop
popf
lret
jmp
repz
test
stc
mov
test
xchg
decb
scas
sbb
out
in
hlt
leave
adc
aam
cli
inc
mov
adc
addr16
xor
push
movsb
adc
inc
scas
xchg
pushl
mull
pop
push
jp
sbb
addb
mov
cmpb
dec
add
sub
dec
push
push
jb
pusha
and
xchg
mov
popa
shll
int3
enter
pop
movhps
adc
setae
mov
push
out
clc
adc
sub
or
and
cmp
cmp
push
ret
icebp
das
mov
stos
push
mov
loope
sub
imul
fsubs
notl
sahf
test
inc
out
ss
movsb
push
mov
sub
cmp
gs
mov
ret
fmull
in
repz
in
out
add
push
insl
cmp
mov
jecxz
sar
push
out
ljmp
mov
pusha
js
push
mov
sub
scas
jmp
cwtl
inc
into
add
dec
jp
add
dec
movsl
and
inc
push
or
mov
sub
fadd
rcll
or
dec
sbb
add
xor
mov
push
out
xchg
es
mov
out
rcrl
icebp
pop
mov
js
mov
enter
jae
xchg
xchg
adc
leave
lock
repz
and
jb
push
jns
fsts
stc
outsl
mov
or
fisubs
pop
sub
cmp
pop
lea
push
std
jne
lahf
mov
out
inc
jne
pop
fildll
gs
inc
mov
mov
adcb
push
xchg
fisttpl
and
into
pop
jae
xor
mov
lods
ret
inc
pushf
call
or
int3
notl
in
mov
dec
mov
sbb
and
or
movsb
outsb
movsb
jg
pop
imul
lds
push
movsb
sub
push
pop
gs
dec
orb
ss
push
std
insb
repnz
sbb
sbb
push
les
outsb
and
and
jmp
xchg
inc
or
pop
cmpps
mov
ret
pop
ret
ljmp
lahf
push
je
scas
mov
jmp
xchg
cmp
mov
fsts
push
adc
subl
adc
jle
cmp
je
add
xor
mov
int
fisubs
mov
push
in
leave
sub
test
push
push
mov
insl
mov
mov
movsl
jp
ret
lret
std
scas
xlat
cmp
cmp
out
jg
jne
pop
xchg
xchg
mov
and
inc
hlt
pop
xor
and
stc
data16
pop
lods
xchg
and
cmp
fxam
in
add
sub
xchg
out
aaa
inc
dec
adc
adcb
fcmovb
or
repz
dec
push
sbb
rcrl
add
pop
fucomip
jo
pop
movhps
inc
fdiv
es
cli
pop
inc
popa
das
sahf
add
cmpsb
js
shl
push
loopne
jno
and
xor
add
inc
sbb
dec
jl
pusha
shll
pop
or
fimuls
sub
stc
sub
adc
jne
pop
int3
mov
cmp
cmpsb
fucomp
mov
adc
je
bound
pop
insb
push
sub
popf
mov
int
mov
xor
cmp
xor
jl
test
xchg
arpl
xor
ds
xchg
mov
and
jecxz
jmp
aam
imul
dec
lcall
jle
jbe
lea
dec
pop
incb
xor
sub
jb
push
push
mov
dec
shr
rcrb
or
pushf
out
sub
cmp
or
jp
outsb
jle
outsl
mov
pop
mov
mov
iret
iret
xlat
mov
pxor
mov
sbb
jbe
mov
push
mov
cmp
rcll
push
add
fld
enter
addl
jmp
xchg
icebp
xchg
decl
pop
pop
xor
cld
jnp
daa
mov
out
jle
cmp
adc
adc
jno
mov
out
push
xchg
hlt
divb
lds
xor
jne
mov
mov
lahf
xchg
in
repz
ret
xor
cmp
pop
sub
push
in
pushf
movsb
dec
je
inc
in
dec
fsubl
mov
cmp
fistpll
ljmp
fisubl
std
inc
fs
mov
scas
sub
fst
jno
insl
subl
mov
repnz
jnp
fwait
insl
push
lock
movnti
fstpt
repz
push
or
add
pop
ja
fbld
mov
mov
push
data16
icebp
pusha
movsb
mov
jo
ds
fadds
xchg
mov
sti
into
arpl
out
jl
push
adc
cs
mov
jae
fabs
jmp
sbb
and
pop
ds
enter
dec
xchg
xchg
or
bound
mov
or
adc
mov
inc
sub
ss
int3
cmp
push
sbbl
mov
fwait
mov
in
push
fildl
xchg
and
sbb
arpl
push
cmp
dec
je
int
dec
fsub
insl
fstpl
out
or
pop
inc
add
add
cmc
lcall
les
int
cmpsl
call
mov
dec
mov
jbe
adc
xchg
xchg
xchg
lcall
rolb
test
and
lret
xor
pop
jge
xchg
pop
cmovnp
imul
incl
sub
aaa
in
repnz
in
outsl
cmc
add
adc
fistpll
and
shl
into
cmpl
fadds
jae
jbe
push
lods
movsb
shrl
popa
outsl
cltd
lret
in
leave
cmp
cmp
pop
mov
mov
sbb
mov
cmpsb
scas
mov
and
out
or
mov
pop
add
or
mov
inc
aas
push
jecxz
lds
or
sahf
ret
push
rolb
insb
dec
je
test
and
jns
pop
xchg
icebp
ja
in
jp
pop
mov
and
add
pop
outsl
out
adc
popf
dec
mov
stos
iret
xchg
ror
popf
js
mulb
inc
clc
pop
xlat
adc
xchg
or
mov
nop
mov
loop
pop
push
or
cmp
popa
pop
ja
sub
cmp
cmp
mov
mov
push
jle
test
push
aas
and
idiv
xor
add
cmp
jle
and
dec
lret
ret
loopne
nop
cwtl
mov
repz
or
je
dec
push
je
mov
sub
mov
mov
sarl
icebp
xchg
inc
cmp
add
adc
jge
mov
dec
push
jg
push
dec
mov
pop
aam
addl
shl
sub
cmp
std
orl
jnp
popf
sbb
mov
lret
cli
adc
mov
fisubrl
gs
adc
cmpsl
lods
cmpsb
jl
orl
dec
sbb
lds
cmp
or
fimull
adc
cwtl
std
add
mov
rcr
sbb
mov
sub
aas
push
mov
dec
inc
inc
lods
sub
push
dec
insb
jnp
lcall
sbb
lret
push
sbb
xchg
mov
clc
aas
mov
into
popl
pop
daa
mulb
lret
jae
push
push
outsb
dec
push
subl
rorb
rorl
nop
lods
fimuls
adc
cmpsb
dec
or
lahf
sub
push
dec
push
pop
dec
mov
rcr
mov
adc
cli
clc
flds
inc
jecxz
fiaddl
mov
pusha
in
int3
xchg
push
push
cmp
jmp
adc
orl
ror
jne
fwait
mov
fcoml
gs
into
pop
in
pop
jle
or
mov
xchg
enter
mov
xchg
cltd
and
add
aad
push
sub
cwtl
nop
out
data16
sbb
int
jp
lret
mov
add
sub
push
add
mov
ss
loope
mov
mov
and
dec
inc
pop
push
adc
or
inc
mov
mov
mov
xchg
xchg
mull
daa
add
pop
dec
enter
inc
jno
or
cmp
inc
mov
pop
pop
sti
repz
ror
ss
mulb
and
push
dec
xchg
movsb
pushf
cmp
jo
jae
push
fnstcw
xchg
xchg
or
cmp
and
or
jmp
ljmp
sahf
pop
sub
inc
ja
xchg
mulb
out
sbb
jmp
push
add
push
xchg
movsl
pop
push
mov
imul
fstpt
xor
aaa
inc
dec
and
inc
push
and
lret
lods
mov
push
hlt
test
or
fmull
push
mov
fs
jne
pop
pop
push
mov
xchg
push
stos
clc
outsl
mov
fldl
dec
mov
jl
mov
orb
mov
loop
repnz
jg
mov
xor
seto
fistpl
jbe
jnp
push
addr16
stos
scas
mov
cltd
bound
out
push
push
leave
or
fwait
test
jnp
test
aas
jae
imul
push
sub
push
addb
cmp
loope
imul
xor
pop
sub
lods
sbb
stos
jns
fdivrl
fldt
sub
push
nop
push
pop
popa
filds
jle
lods
movsl
jl
jno
pushw
cmpl
xor
jmp
popf
jne
or
cmpsl
cmp
int
ret
lret
scas
mov
inc
pop
mov
jnp
movsb
andb
movsl
popf
push
push
adc
int
std
mov
push
add
fstpl
mov
int
lock
int
xchg
rorb
inc
add
das
fiaddl
mov
loopne
testl
add
add
les
out
jmp
mov
daa
das
fcomps
mov
pop
dec
orb
nop
cwtl
lahf
xor
mov
xchg
or
leave
fcom
fdivrs
inc
push
or
test
dec
push
cmp
fiadds
in
decl
pop
add
adc
inc
outsl
xor
add
clc
sbb
scas
mov
jl
pop
xchg
outsb
pop
jmp
fildll
jmp
test
add
xchg
xor
out
popa
jmp
or
clc
push
fsub
or
jnp
je
jb
cmpsb
movsl
pop
lods
mov
xor
lea
mov
sub
out
sbb
mov
jb
scas
mov
je
cmc
cld
xchg
cmc
std
in
pop
jl
insl
adc
cwtl
lds
leave
inc
in
repz
ljmp
and
fcoml
fisttps
and
xchg
xchg
push
inc
mov
adcb
pop
es
jbe
sub
xor
rclb
jge
test
xor
push
dec
sbb
cmp
orl
stc
dec
sbb
icebp
stc
add
dec
mov
add
adc
shrl
jbe
movsl
sbb
imul
push
sbb
out
or
and
push
adc
mov
mov
dec
shl
insl
in
mov
xchg
fwait
ret
movsl
test
push
sub
push
xor
push
rorb
loop
push
fdivl
xor
mov
xor
xor
mov
jne
mov
sub
les
inc
jp
clc
dec
inc
mov
mov
stos
jnp
dec
pushf
jmp
xchg
stos
lret
cmp
or
data16
ja
cwtl
mov
lahf
mov
popl
nop
or
sbb
xlat
dec
imul
cmp
mov
ja
xchg
arpl
add
fdivs
or
pusha
push
setns
rcr
addb
fxch
rol
mov
pusha
rcrb
jmp
mov
jae
inc
movsb
test
out
lods
mov
xlat
imulb
fldenv
hlt
outsl
dec
sub
jnp
imul
in
jbe
adc
gs
into
pop
ja
outsb
push
inc
dec
xor
dec
cmp
mov
lods
cli
cmpsl
adc
jo
js
sub
and
aad
clc
pop
insb
pop
cmpsl
cwtl
lds
pusha
ret
int
add
divb
adc
shlb
push
inc
dec
ja
add
mov
push
clc
iret
ljmp
add
mov
xor
sbb
imul
iret
ljmp
clc
shl
inc
inc
mov
xor
sbb
enter
test
mov
or
std
dec
lret
sub
subl
jl
pusha
xchg
sarl
out
push
loope
jae
inc
sbb
cmp
jne
dec
inc
xchg
push
xor
mov
dec
mov
repz
xor
add
ljmp
mov
mov
lret
fisubs
xchg
std
rolb
aam
or
inc
cmpsl
cmp
inc
outsb
insl
cmpsl
add
test
lods
mov
rorb
loop
inc
inc
adc
inc
or
pop
jb
xor
arpl
cmc
pop
lds
sbb
pusha
pop
repnz
xor
andb
mov
repnz
add
mov
and
cmp
xor
imul
imul
je
rolb
add
pop
pop
das
es
stos
mov
xchg
jo
pop
loopne
mov
ja
xchg
test
dec
push
pop
mov
xchg
cltd
mov
jl
sbb
mov
push
dec
fisubs
sbb
push
inc
sbb
push
dec
inc
imul
xchg
int
les
data16
int
out
pop
ds
dec
daa
sub
popf
addl
mov
ret
lret
js
ljmp
in
jno
xor
outsb
data16
cmp
cmp
imul
fildl
fbld
fs
movsl
out
in
aad
rorl
add
cwtl
nop
sub
xchg
outsb
or
out
in
push
inc
inc
push
imul
cltd
pop
push
xchg
std
ror
pop
lods
lcall
scas
call
mov
inc
or
push
movsl
and
pop
data16
sahf
test
cmpsl
scas
mov
stos
loope
nop
daa
das
cmp
outsl
push
clc
inc
das
aaa
and
insl
pop
bound
out
leave
stc
pop
call
lret
sbbl
jecxz
add
pop
in
sbb
mov
mov
dec
fldcw
mov
sub
sub
icebp
stc
sub
and
outsb
stos
int3
into
cmc
aad
or
jmp
mov
push
cmp
push
push
jp
dec
insl
xchg
arpl
int
mov
in
jno
xor
and
repnz
ret
cs
imull
leave
and
mov
pop
fs
rcrl
pop
mov
nopl
int
pop
cmpsl
jge
mov
ret
xlat
loop
adc
jp
jo
pop
enter
ret
sar
icebp
xor
ret
sub
cmp
mov
add
mov
daa
mull
mov
and
cmp
and
jmp
cwtl
pop
daa
das
mulb
fwait
es
fdivrl
mov
ss
call
cmpsl
enter
cmpsl
xor
xor
jmp
xchg
cltd
mov
jb
hlt
in
sub
mov
and
into
stc
imul
cmp
jnp
cmp
mov
lahf
mov
cmpsl
cs
int
repz
cmc
insb
sbb
repnz
xchg
bound
cmpsb
scas
lret
rorl
and
adc
dec
hlt
outsb
data16
imul
lods
mov
push
pop
in
ret
or
aaa
das
cmp
add
stc
std
js
mov
pop
or
loope
in
hlt
jg
and
mov
dec
push
push
cltd
xchg
xchg
xchg
gs
pop
push
push
dec
loop
stos
mov
cmp
or
loop
pop
rcrb
push
popa
loopne
scas
and
data16
sahf
sbb
nop
mov
prefetchwt1
or
movsb
aas
inc
and
push
popa
pop
push
jbe
mov
shrb
push
mov
xchg
and
push
clc
push
push
pusha
push
and
pop
test
mov
mov
sti
add
cmp
or
call
test
fbld
fdivrp
jge
adc
and
stc
jb
fs
ss
xor
mov
into
push
jecxz
insb
add
lods
rolb
mov
sti
insl
les
arpl
cmp
lcall
jge
iret
loop
sub
cltd
and
inc
aas
cmp
adc
and
sbb
movsl
xchg
fs
jne
sub
outsl
out
xor
cwtl
idivl
xor
and
roll
inc
mov
mov
dec
rorb
pop
dec
add
adc
pop
pop
mov
rolw
movsl
xchg
arpl
outsb
lret
mov
decl
push
and
out
pop
addr16
and
outsl
pop
xorb
ja
test
lock
adc
ds
mov
movsb
push
mov
cmp
stc
repz
add
dec
inc
xchg
adc
sub
jle
dec
push
imul
div
in
out
in
mov
stos
in
out
out
test
or
popf
je
or
jnp
mov
aam
imul
adc
call
call
adc
movsb
imul
movsb
lods
cltd
popf
les
push
in
add
dec
push
add
push
ss
mov
int
adc
mov
lea
std
vdivps
popf
mov
cmp
subb
sub
mov
nop
cs
fsub
std
jns
movsl
mov
jmp
cmp
iret
push
and
push
mov
pop
mov
test
push
js
iret
xlat
lock
xor
aas
call
hlt
js
xchg
dec
xchg
pop
addr16
ror
inc
int3
cwtl
mov
add
fdiv
dec
cmpl
push
test
jo
pop
xchg
into
fabs
jmp
ficomps
and
scas
add
loop
jo
inc
jne
push
sub
mov
push
jae
or
out
ja
and
out
or
cmp
or
pop
ret
mov
lods
rep
sti
fstpt
roll
in
cmp
cmp
adc
xor
cmp
inc
aam
add
mov
jo
pop
jge
or
mov
inc
push
lea
mov
mov
xlat
jmp
mov
cmp
sub
mov
fdivs
rcrb
pop
cmp
sbb
sub
adc
jle
out
push
dec
push
inc
je
dec
mov
rcl
loope
loope
mov
iret
adc
pop
stc
push
lret
out
adc
inc
addr16
enter
stc
pop
call
mov
loopne
add
int
stc
cs
jnp
daa
lods
movsb
sbb
mov
mov
lea
inc
mov
idivb
pop
jl,pt
cmpb
testl
jne
jl
push
gs
pop
lods
sti
movsl
stos
gs
mov
sti
jecxz
repz
mov
inc
mov
inc
dec
hlt
outsb
data16
cmp
cmpsl
lahf
xor
je
fs
push
fsubrl
sbb
cli
in
test
popf
xlat
daa
push
addr16
mov
and
mov
mov
in
mov
add
insl
jb
pop
mov
mov
pop
cwtl
mov
clc
mov
sub
cmp
push
push
adc
sub
scas
fnstenvs
mov
clc
pop
or
mov
pop
push
aas
int3
dec
outsb
inc
jae
sub
push
xor
sti
jecxz
imul
jl
cmp
aad
jl
jae
dec
fsubl
pop
cs
sub
cltd
mov
inc
xchg
mov
push
or
sub
add
jno
sbb
lods
lock
es
push
push
inc
jae
and
inc
mov
ror
test
fwait
mov
add
scas
enter
loop
or
jg
adcb
jp
dec
ret
mov
cli
int3
aam
stos
dec
aas
shrl
jecxz
sbb
lods
mov
or
jl
or
pop
popf
mov
cmp
in
push
jle
sub
ss
enter
ret
loopne
clc
fs
jecxz
iret
add
popf
rolb
mov
push
arpl
fsubs
out
out
jmp
and
mov
daa
das
ret
dec
roll
lods
mov
jecxz
cmp
mov
addr16
imul
cmp
push
mov
cmpsl
jns
xchg
xchg
fabs
jmp
pop
xor
jecxz
stc
add
xor
cmp
ss
cmp
cmpsb
scas
fwait
sbb
out
or
fstl
cmc
pop
sbb
push
lea
aad
fidivs
mov
jecxz
fcomp
add
jae
imul
mov
mov
ljmp
leave
add
xlat
dec
sbb
inc
cmp
dec
jp
in
int
sub
in
cmc
mov
pop
testl
sbb
ret
push
nop
lods
ljmp
sub
fidivrl
inc
ss
dec
cmc
rclb
out
sahf
cltd
sub
addr16
jmp
addr16
out
pop
loopne
fwait
into
popa
mov
dec
push
dec
dec
lret
ret
xchg
mov
push
or
sahf
push
dec
push
addr16
cwtl
pop
xchg
aaa
shlb
repz
inc
and
sbb
int3
arpl
xchg
ficoms
popa
ja
pop
xchg
outsb
dec
add
into
rol
cmp
add
and
ret
and
repz
add
cld
aaa
push
lahf
lds
inc
dec
push
inc
subb
test
das
push
int3
aam
fmulp
add
or
add
adc
jmp
jne
mov
push
pop
fs
jg
xor
add
aad
repnz
fisubrs
inc
lcall
xchg
lcall
loopne
dec
inc
rcrb
and
jle
pop
inc
sub
pop
enter
fmull
aaa
pop
push
push
aas
daa
das
sbb
add
xchg
sub
adc
addl
loopne
roll
pop
mov
outsl
or
mov
mov
jbe
xchg
cltd
jecxz
mov
ror
and
or
stc
pop
into
scas
inc
jne
jbe
inc
dec
mov
jbe
dec
cs
cmc
cmc
push
fdivrl
or
negb
mov
jb
imul
mov
ficoml
hlt
ffree
lret
push
and
aam
inc
outsb
outsb
aad
inc
dec
mov
jl
push
xor
out
out
pop
fcmovb
int3
and
mov
aad
inc
outsl
outsl
or
dec
movsb
mov
fcoms
mov
adc
and
in
decl
out
test
es
xchg
cmp
pop
and
ret
rol
stos
mov
lahf
lods
loopne
lea
xor
rclb
pop
insl
clc
cmpsl
mov
mov
inc
dec
jno
mov
push
adc
nop
and
cs
inc
dec
push
fldt
js
xor
mov
inc
scas
mov
addl
fcoml
loopne
jecxz
mov
insb
jo
pushf
adc
mov
mov
xchg
rorl
mov
repz
cmp
pop
xchg
xchg
sahf
cmpsb
jg
pusha
xchg
aam
fsubp
out
jl
cmp
push
cmpsl
cmp
gs
push
mov
mov
mov
sbbb
bsf
loope
cmp
inc
je
inc
jp
lahf
sbb
cmpsl
mov
ss
add
in
dec
loop
sbb
hlt
aaa
lret
pop
fs
mov
ja
pop
in
mov
lds
pop
out
or
mov
mov
inc
dec
xlat
jp
lock
mov
inc
dec
pop
bound
push
mov
mov
mov
aas
inc
dec
outsb
dec
xchg
xchg
pop
sub
outsb
sahf
mov
mov
lahf
adc
test
push
cltd
push
arpl
or
dec
popa
dec
fiadds
cwtl
dec
pop
outsl
mov
loopne
lock
cmp
std
sbb
xor
pusha
xchg
mov
push
jecxz
lcall
fdiv
and
or
ljmp
sahf
jno
roll
cld
incb
loop
and
cs
int
pop
pop
add
mov
push
cmpsb
test
int
jmp
pop
mov
daa
repz
into
pop
bound
xchg
andb
xchg
in
out
lcall
sbb
mov
add
iret
or
sub
lret
xchg
pop
outsb
int3
cmp
mov
pop
fwait
add
mov
lods
xor
jo
dec
push
sbb
pop
mov
ret
mov
loopne
inc
rolb
adc
enter
pop
fstl
imul
mov
shl
jno
int3
pop
test
xlat
dec
inc
dec
mov
inc
insl
sbb
sub
push
nop
decb
outsb
clc
push
rolb
hlt
mov
out
je
testb
xor
stos
sarb
leave
outsl
cltd
int3
shll
inc
xchg
cmp
adc
pop
imul
mov
cmp
sahf
adc
adc
sub
sub
insb
jae
sub
xchg
les
mov
inc
xchg
dec
fninit
jmp
jns
or
pop
xor
push
outsb
ljmp
pop
arpl
ds
int3
jne
test
xchg
sub
push
aas
aaa
sarb
or
std
xor
es
nop
adc
lret
or
int
popf
pop
cmc
cmc
jbe
mov
sub
jmp
push
pusha
fdivs
jge
xlat
orb
add
ja
icebp
mov
ret
loopne
stos
xor
adc
pop
pop
insl
clc
xchg
icebp
mov
xchg
icebp
gs
jo
cmpsl
scas
mov
jns
pop
pop
enter
call
orb
push
mov
icebp
lods
mov
and
xor
shufps
popa
sub
pop
loope
mov
ret
jbe
xchg
nop
jge
movsb
adc
addl
xor
shll
sbb
jl,pt
fdivrs
popf
or
mov
push
and
push
dec
ret
bound
jae
test
pop
int
aam
ret
stos
or
or
dec
ret
push
cld
xor
mov
xchg
ror
aas
xor
xor
xor
push
fistpll
xor
int
adc
vxorps
popa
in
sbb
inc
dec
bnd
aas
leave
cmp
xchg
scas
mov
lds
jmp
sbb
xchg
sbb
sub
jnp
dec
push
daa
add
repz
mov
pop
pop
push
xchg
jl
cli
mov
pop
ss
incl
and
push
test
xchg
mov
mov
sbb
std
ss
or
dec
jl
inc
aam
dec
xor
imul
pop
jecxz
icebp
push
pop
loopne
pop
cmp
fadds
mov
cmpsl
out
add
jo
xor
mov
push
pop
bound
xchg
test
mov
imul
sti
add
xor
add
push
aaa
sub
jp
imul
mov
les
pop
gs
hlt
cmp
es
data16
fs
push
mov
jg
arpl
in
hlt
out
lock
std
ficoms
inc
cli
out
jp
dec
mov
mov
test
stc
rclb
aad
pusha
cmp
push
pop
fimuls
dec
cmpsl
jle
dec
mov
orb
lcall
bnd
inc
or
aas
xor
inc
pop
into
cmpsb
iret
inc
enter
test
loopne,pn
sub
dec
scas
pop
and
mov
aam
loope
hlt
in
ret
in
mov
mov
cmpsb
push
pop
pusha
repz
movsl
popf
je
imul
sahf
cmc
je
in
sub
sub
imulb
xlat
out
jno
xchg
shll
fidivrl
jmp
movb
xor
push
push
sub
inc
or
lret
pop
cld
push
pop
insl
cld
add
notl
aas
aaa
adc
or
sbb
fidivl
test
jne
aad
loope
in
hlt
jg
and
out
sbb
cmc
fimull
testl
xlat
orb
jp
xchg
pop
loop
out
mov
mov
jmp
xlat
mov
jb
jno
test
xchg
mov
mov
xlat
add
push
sub
pop
or
jo
pop
addr16
orb
mov
fsubrp
or
jmp
inc
cmp
add
adc
jl
pop
jne
dec
xor
imul
adc
jmp
push
divb
aad
jl
call
and
mov
push
jg
cmc
lret
out
mov
lret
dec
inc
sub
push
push
add
ficoml
inc
dec
insb
inc
sti
mov
mov
jmp
ret
lods
in
shr
repz
cmpsl
sub
sbb
cmp
inc
dec
dec
imul
les
xchg
cltd
popl
sar
loop
sbb
shl
adc
adc
lret
repnz
clc
pop
push
pop
fs
xchg
lds
dec
inc
sbb
or
in
rorb
inc
dec
push
pop
and
mov
aaa
mov
lock
lods
mov
loop
xor
adc
and
xchg
mov
cmp
shlb
out
push
xchg
mov
pop
mov
pop
inc
fstps
mov
popl
mov
inc
enter
adc
sbb
dec
testb
pop
inc
jo
roll
loop
mov
cmp
push
xchg
add
hlt
cmp
xor
movl
jne
ud0
xchg
pop
sub
mov
in
int
scas
and
and
adc
fdivrp
mov
xchg
mov
pop
mov
movsl
imulb
int3
hlt
mov
aaa
call
jb
jae
imul
xchg
cmpsl
sub
pop
inc
loop
lahf
incl
fistps
mov
or
lea
ja
and
pop
cwtl
fadds
adc
mull
mov
pmuludq
insl
xor
add
jns
and
fistl
rcrl
push
dec
jmp
push
inc
xchg
enter
mov
sahf
repz
cwtl
pop
daa
mov
jle
jg
js
fwait
push
mov
fisttpl
mov
and
loope
jnp
pusha
in
jo
imul
and
fdivl
cs
jno
push
xchg
fucomi
dec
loop
in
pop
fsub
jne
add
inc
mov
or
fsubp
fsubrp
add
es
imulb
fldenv
addb
stos
mov
lods
addb
adc
mov
dec
cmc
inc
mov
popa
ret
push
mov
movsb
push
and
dec
fsubr
outsb
mov
daa
cmpsl
inc
inc
out
gs
xlat
js
sub
inc
pushf
or
int3
inc
ja
pop
repnz
into
dec
mov
sub
cmc
std
add
addr16
or
cmp
mov
dec
ds
sbb
cmpsl
ljmp
pop
cmp
cmp
into
pop
xchg
lahf
mov
sbb
ucomiss
dec
adc
pop
daa
adc
in
cwtl
jne
lret
ret
test
mov
pop
cmpsb
mov
inc
adc
xor
pop
xchg
cltd
insl
mov
push
jle
cld
mov
leave
shll
inc
dec
fstpt
hlt
ret
dec
sahf
xor
jle
push
jnp
aad
mov
fwait
xor
sub
std
inc
and
cmp
popf
inc
gs
imul
cltd
or
jecxz
mov
ss
dec
push
ret
cs
movsb
lods
mov
mov
in
xchg
inc
dec
addr16
jge
xor
and
insb
mov
in
shr
cwtl
or
aaa
adc
xor
jne
insl
test
inc
dec
pop
jp
adc
test
mov
cli
ret
dec
xor
dec
push
sbb
mov
xor
std
mov
jae
push
testl
sbb
imull
nop
test
push
mov
inc
jno
cmpsb
js
pop
sbb
imul
dec
xchg
divb
cmp
inc
mov
daa
xor
jnp
mov
lret
leave
shr
imul
mov
and
inc
sbb
push
and
inc
jl
aad
clc
mov
sub
lret
xchg
into
lret
out
movsl
imul
push
xchg
pop
nop
add
test
int3
dec
fcmovnu
jecxz
cwtl
enter
xor
popf
sub
add
pop
arpl
adc
stos
hlt
xchg
sbb
mov
imul
gs
int3
mov
daa
or
cld
add
mov
dec
and
popf
movsb
xor
daa
test
mov
xlat
repz
fisttpll
iret
rclb
mov
xor
pop
outsl
mov
mov
stc
icebp
shr
ret
call
add
shrb
cmpsl
jo
xor
cmp
scas
cmp
pop
out
jl
jg
mov
cmp
and
enter
xchg
push
pop
push
fcmovnbe
scas
lret
popf
cltd
into
and
mov
pop
shll
jl
dec
inc
dec
popa
cltd
movsl
test
mov
js
jl
mov
dec
icebp
and
fs
cmp
xor
push
sub
aad
test
std
cmc
aam
mov
lret
out
and
out
jmp
es
sub
mov
pushf
sbb
cmc
or
jmp
inc
lret
jmp
cmp
xchg
and
xor
out
jmp
adc
lcall
sub
mov
inc
jp
push
inc
int
std
pusha
mov
lcall
rorb
shr
into
pop
jne
fisttps
repnz
inc
lret
es
add
cmp
or
sbb
push
clc
or
pusha
xchg
xchg
lahf
cmpsl
cwtl
dec
xor
cmpsl
adcl
out
push
sbb
and
push
imul
mov
mov
xchg
cltd
sbb
adcl
mov
sbb
ss
xchg
jo
popa
fwait
cwtl
andl
cmp
stos
xor
aad
outsl
jbe
dec
jge
mov
loope
fs
rorb
mov
cmp
push
cmpsl
imulb
insb
jae
insl
sbb
test
mov
jl
pushf
scas
mov
rclb
sti
sub
pop
inc
cmp
jbe
pop
jne
push
cmp
insb
mov
mov
in
hlt
pop
ljmp
cmp
dec
clc
add
fisttpll
aad
clc
lock
jmp
int
out
aad
std
inc
iret
mov
jg
xchg
mov
loop
add
mov
pop
dec
dec
jno
push
sbb
xchg
into
icebp
test
mov
adc
xorl
push
pusha
xchg
sahf
sub
call
sti
mov
push
inc
sbb
sub
and
pop
xorl
add
or
sbb
aaa
adc
cmp
and
xchg
xchg
and
fidivs
test
fsubp
xlat
fistl
mov
movsl
xor
push
ror
loopne
fninit
add
insb
stc
lret
sarl
or
push
data16
movsb
push
mov
movsb
iret
lcall
in
aad
test
dec
sbb
cmp
mov
gs
movsl
jnp
lods
hlt
jg
fstps
lock
pop
cmp
inc
pop
sbb
cltd
mov
fsub
fcomps
add
addr16
lret
push
outsb
mov
xor
icebp
stc
jbe
push
insb
inc
dec
dec
mov
mov
mov
call
test
mov
and
xor
js
ss
inc
test
xchg
mov
push
pop
addr16
popa
pusha
jecxz
dec
fsubrl
jns
loopne
je
dec
push
push
out
mov
jnp
push
orl
in
je
sub
mov
and
sub
sub
arpl
lods
scas
mov
in
mov
xchg
hlt
cmpsb
sub
ret
push
fldenv
jne
xchg
repnz
fcmovbe
mov
mov
fsubs
enter
cmp
adc
add
jg
mov
shrb
int3
ds
mov
lea
xchg
sbb
stc
mov
inc
icebp
adc
adc
nop
add
sbb
add
aad
ret
fidivrl
pop
xor
in
stos
mov
fidivrl
mov
adc
call
sbb
fbld
pop
sub
pop
inc
out
notl
std
iret
fisubrl
push
loope
iret
xlat
sar
pop
pop
inc
cmp
sahf
mov
adc
xchg
into
fcoms
or
inc
lahf
fadd
icebp
test
mov
ret
adc
ret
dec
aas
jno
stc
out
mov
mulb
jmp
arpl
sub
sbb
fnstsw
icebp
icebp
aam
or
adc
leave
xlat
loope
cmpsl
mov
addr16
fs
lods
mov
jp
into
fs
add
rorb
loopne
jecxz
dec
adc
cmp
dec
ja
lods
or
rorb
inc
push
ljmp
movl
bound
das
mov
cwtl
dec
inc
shrl
or
and
dec
dec
popa
pop
insl
loop
dec
pop
jg
xchg
lods
xor
push
xchg
mov
xchg
xchg
sbb
xlat
aaa
lods
out
notl
movq
mov
arpl
ja
jmp
cltd
or
les
leave
sub
hlt
js
stc
dec
ss
aaa
sub
push
fsubs
xchg
das
das
push
jo
ficomps
je
mov
bound
aam
ret
in
imul
mov
mov
sub
jne
pop
adc
sbb
xor
lea
fidivrs
mov
lods
sbb
push
jp
neg
add
mov
xchg
fwait
inc
push
jae
fnclex
pop
lods
test
ret
fimull
adc
scas
addl
sbb
lcall
in
ja
ds
cli
sbb
in
inc
inc
imul
out
pop
mov
fs
mov
jl
in
std
std
add
adc
std
sub
pop
aas
int3
addr16
and
xchg
gs
cmc
ret
shlb
out
cli
add
repnz
jmp
and
mov
outsb
jp
mov
xchg
inc
xchg
mov
push
icebp
mull
out
fsubr
bound
pop
daa
das
and
pop
repz
shlb
shl
mov
xchg
xor
loope
stos
push
and
adc
pushf
xchg
popa
pop
pusha
push
pop
fndisi(8087
call
addr16
sbb
mov
pop
push
push
dec
and
sbb
push
in
pushf
sahf
lds
jg
mov
sub
mul
jmp
jle
insb
jae
or
sahf
and
fidivl
movsb
shll
push
shrb
dec
sub
push
xchg
inc
mov
mov
test
loope
xor
fisttps
dec
dec
sbb
push
mov
popf
cltd
insb
jne
fadds
shll
fiaddl
mov
loop
cmp
mov
dec
push
mov
mov
xor
sub
cli
add
push
pop
pop
cmovs
fistl
daa
fcomp
cmpsl
scas
cwtl
push
push
pmovmskb
out
dec
dec
lock
add
add
cmp
push
cmp
jecxz
fcomp
test
leave
add
sbb
imulb
ds
dec
fisubs
mov
fldenv
mov
lret
push
inc
adc
cmp
xor
add
out
sub
xor
adcl
inc
inc
insb
fldcw
es
or
push
cmp
dec
lahf
inc
dec
pop
sahf
xor
xchg
subb
jle
sbb
xor
fmuls
adc
push
sub
inc
mov
fcmovnb
lds
cltd
orl
cmp
dec
rolb
dec
mov
cmp
lods
push
cmpb
lret
popf
movsl
in
ja
cmpsb
xlat
call
repnz
inc
push
pusha
pop
xor
jae
test
push
insl
xchg
add
push
and
aad
in
or
cmp
jns
in
popl
add
mov
daa
inc
jno
inc
aam
xor
das
pop
loop
fs
pusha
xchg
sti
sub
call
imul
inc
cltd
dec
pop
pop
out
mov
mov
int3
push
int
mov
jnp
and
dec
push
pop
popa
xor
push
sahf
sub
xchg
sahf
xchg
mov
lahf
es
lds
insl
in
or
pop
inc
push
orb
int
repnz
mov
rorb
dec
xchg
inc
inc
inc
xor
cmpb
pushf
xchg
lahf
inc
mov
push
push
imul
pop
in
lods
mov
les
test
or
inc
cmovo
xchg
insl
test
xchg
sub
inc
adc
mov
ret
icebp
pop
scas
out
ret
stos
pop
push
cmp
push
push
pop
jle
push
jge
push
aaa
jo
std
mov
pop
icebp
cmc
mov
dec
inc
sbb
pop
add
scas
ret
ds
orb
mov
movsl
sub
or
sbb
push
bound
inc
jmp
xor
loope
icebp
and
out
fs
push
dec
std
bound
cli
into
loope
push
adc
fmulp
rcll
sbb
push
push
or
pop
bound
pushf
iret
mov
or
mov
add
and
add
je
push
data16
xor
mov
int
aam
in
sbb
push
dec
and
cmp
push
mov
leave
jmp
or
int
mov
add
lret
xchg
js
cmp
gs
mov
xchg
xchg
add
and
sub
jecxz
les
pop
data16
sahf
xchg
or
imul
mov
orl
das
mov
jnp
jmp
mov
sbb
mov
mov
mov
and
pop
into
push
sub
cltd
imul
jo
sbb
mov
negb
add
stos
ds
jge
js
push
ss
xchg
fwait
aam
pop
sbb
out
jae
push
mov
ss
mov
add
lcall
stos
mov
xchg
imul
arpl
mov
sub
inc
mov
pushf
and
mov
add
adc
pop
push
inc
aas
mov
adc
and
movsl
sbb
sub
mov
dec
cmc
call
mov
sbb
cmc
fiaddl
arpl
addr16
insl
jb
dec
add
jmp
lret
out
mov
push
pop
pop
cmovs
rcll
mov
lahf
into
sets
aaa
add
jmp
orb
push
outsl
fimuls
imul
fldenv
lods
xor
addl
and
movsb
leave
pop
cmpsl
pop
int3
add
test
cmp
lods
cmp
mov
xor
sbb
dec
cmp
mov
lds
in
and
jnp
push
dec
mov
xchg
fwait
scas
xor
mov
mov
shrb
pop
jno
arpl
push
mov
fdivrl
ret
pushf
jecxz
or
mov
xchg
sbb
es
adc
push
xor
lahf
dec
stos
adc
test
add
int
inc
inc
mov
pop
stos
addr16
pop
mov
scas
mov
loop
sbb
sbb
cmp
dec
leave
sub
adc
sub
mov
clc
add
jb
sub
aaa
loop
loopne
and
js
inc
mov
shrl
sub
fldenv
loopne
lock
dec
adc
mov
or
add
inc
mov
mov
test
fcmovu
loope
out
jne
mov
fnstcw
adc
fcoms
jbe
scas
add
jno
insb
sahf
push
les
lret
xor
addl
sbb
jno
push
pop
icebp
jnp
cmp
iret
ret
adc
xchg
cmpsb
nop
sbb
xor
cld
xor
mov
aam
mov
push
das
mov
add
outsl
addr16
hlt
cmp
xor
jge
push
cmc
ret
sbb
mov
adc
addr16
outsb
fsubl
std
sub
loope
pop
gs
lds
loop
push
inc
add
and
in
and
pop
jp
mov
scas
test
jl
lahf
push
test
std
incl
in
ss
jmp
xor
lods
mov
addb
jno
enter
in
mov
lahf
sub
in
dec
sbb
xor
dec
mov
enter
cltd
hlt
in
clts
clc
nopl
cmp
cmp
cmp
fiadds
mov
pop
xchg
adcl
push
and
push
dec
jmp
cs
pop
int
aam
ret
mov
stc
hlt
addr16
add
sub
or
and
xchg
mov
mov
jmp
mull
test
daa
push
mov
inc
dec
xor
sar
das
mov
jne
gs
call
mov
cmp
rolb
or
lcall
into
dec
fmull
jmp
push
repnz
fcomip
adc
xchg
lods
mov
xor
jbe
mov
aaa
pop
daa
das
fcomps
jmp
aaa
cmpsb
jns
sbb
shl
fsub
call
std
cmp
push
xor
or
pop
dec
jns
js
xchg
pushl
adcb
shll
sbb
and
psraw
inc
jne
aas
adc
loopne
lods
or
push
or
enter
into
cmc
jne
lret
push
push
popa
es
ss
jnp
es
xor
mov
imul
mov
add
ss
pop
test
xor
push
mov
cmp
imul
fildl
fbld
movsl
mov
mov
add
popa
inc
data16
cwtl
nop
sub
stos
fisttps
pop
cmc
arpl
pop
sub
out
mov
mov
mov
repnz
sbb
mov
cmp
repnz
aam
and
jno
add
dec
cli
mov
cwtl
xlat
out
decb
enter
dec
dec
jae
mov
aaa
aas
fwait
jnp
inc
jbe
idivb
repz
or
aaa
mov
jns
sub
icebp
xchg
xchg
xchg
add
jns
jns
aam
fabs
jmp
adc
dec
add
add
out
sub
mov
jbe
xchg
adc
int
ficoms
xchg
ss
adc
fstl
lahf
mov
icebp
xlat
bound
adc
bound
lea
adc
fistl
push
adc
or
add
ja
js
push
cmp
sbb
mov
mov
fdiv
insl
sarl
lahf
data16
mov
aas
orb
xchg
popf
scas
in
xchg
in
nopl
dec
cmp
or
jns
xor
js
cli
ror
pusha
repnz
or
or
xor
inc
lods
fisubs
push
testl
xor
mov
pushl
hlt
sti
testl
jns
sbb
mov
adc
mov
incl
lahf
lret
fildll
mulb
inc
pusha
vpperm
inc
lds
mov
adc
adc
jmp
push
pop
jo
lea
jl,pt
lock
ror
xchg
in
scas
incb
push
int
popf
xor
jae
inc
outsl
inc
xchg
xchg
aas
aad
faddl
xchg
inc
cmp
mov
sbb
popf
pavgw
repz
mov
adc
add
ja
jp
push
cmp
jp
mov
or
mulb
mov
rol
aas
push
js
outsb
fwait
mov
xchg
fs
sbbl
lds
add
sub
inc
sbb
decb
mov
lds
dec
sbb
mov
cmp
push
sub
or
mov
pop
sahf
xchg
xchg
data16
push
jg
test
and
bndldx
aaa
movhps
cmp
inc
pop
into
test
inc
cmp
mov
into
lds
push
and
iret
clc
push
push
frstor
sub
push
dec
aad
mov
loope
jl
stos
mov
repz
xor
fs
pop
sub
popa
int
xchg
repz
into
cmc
in
pop
in
mov
stos
sub
mul
sbb
lea
cmp
dec
pop
inc
ret
scas
mov
std
add
push
lods
dec
mov
sbb
in
sub
xchg
je
jge
pop
inc
int3
out
lods
lods
mov
movsl
fcmovbe
dec
and
dec
jp
into
outsb
jne
jge
adc
mov
pop
lret
add
popa
rorb
cmp
into
pop
or
push
cmp
mov
inc
pop
lcall
aas
mov
mov
xlat
pop
roll
pop
xchg
adc
aaa
xchg
mov
cmp
push
rol
iret
call
loopne
inc
mov
outsb
add
pop
into
push
or
outsl
js
jecxz
mov
sbb
imul
push
stc
cs
jnp
mov
jmp
orl
scas
xor
addl
lret
popa
xor
inc
mov
mov
jnp
mov
arpl
into
ret
out
movsb
ss
push
sub
jge
jnp
cmp
or
orl
repz
lret
sub
test
repz
in
std
push
arpl
add
pushf
imul
cmc
pop
in
push
xchg
int3
aam
faddl
cmp
repz
test
cmp
lods
ja
xchg
int
jl
xchg
push
mov
and
or
push
cwtl
mov
dec
ljmp
xlat
ja
mov
aam
comiss
sbb
jg
xchg
sbbl
ljmp
xchg
and
mov
or
test
enter
repz
repnz
out
bound
cmp
lds
jmp
xchg
repz
add
test
push
xchg
mov
daa
stc
add
jnp
arpl
mov
fmulp
cmpsb
or
repz
in
into
xchg
jns
cmp
sti
sti
es
jns
hlt
mov
lret
rcll
movsb
xchg
jne
sub
xor
outsb
push
outsl
inc
dec
xor
cmpsl
subb
mov
inc
jns
lods
loop
inc
sub
inc
and
and
adc
data16
out
mov
call
stos
aad
or
push
inc
sbbb
xchg
insl
cltd
lret
loope
fsub
addr16
rcr
xlat
adc
sub
adc
imul
mov
rorl
daa
lock
add
idiv
sbb
dec
pop
into
mov
orb
mov
dec
xor
es
sbb
or
push
xchg
mov
jns
imul
mov
and
xor
jbe
insb
sti
pop
sub
cmp
imul
lret
push
push
leave
sar
cmp
out
insl
gs
cs
mov
in
lret
dec
fucomi
int
icebp
ret
hlt
je
sub
pop
in
xor
and
jne
mov
xchg
lret
xchg
fwait
mov
mov
ljmp
test
xchg
lods
mov
enter
xchg
popf
xchg
mov
xchg
push
das
cmp
push
sub
pop
mov
test
leave
leave
outsl
enter
outsl
pop
decb
adc
daa
xchg
aad
jbe
pusha
pop
xchg
mov
mov
pop
push
nop
and
xchg
lcall
cmp
cmp
mov
shlb
cli
pop
stos
mov
mov
inc
pop
mov
mov
es
push
xor
pop
xor
pusha
shll
hlt
in
popa
loope
rcl
les
je
pop
jge
out
inc
dec
imul
jbe
push
out
xchg
xchg
dec
je
xchg
mov
arpl
stc
pop
adc
cs
xchg
xchg
fwait
mov
mov
cmc
adc
add
cmp
arpl
in
lock
pop
in
mov
cmp
jno
or
in
push
dec
inc
mov
jp
add
in
mov
int3
push
add
add
inc
cmp
inc
dec
push
daa
and
outsl
jp
inc
add
and
pop
xchg
push
adc
js
ror
or
jge
push
gs
mov
dec
dec
mov
mov
jo
iret
xlat
shl
dec
pushl
jns
sbb
cmp
cwtl
mov
mov
scas
xor
xchg
cmp
xor
stc
cs
movsl
jnp
cmp
mov
push
lods
jns
imul
shl
arpl
inc
sbb
xchg
jbe
mov
ljmp
lret
lea
or
lret
add
jo
dec
pop
in
mov
dec
pop
inc
dec
test
add
insb
test
dec
sti
insl
mov
arpl
sub
mov
jl
insb
mov
sti
mov
dec
xchg
sub
cmp
sbb
mov
dec
dec
jg
repz
aad
or
outsb
add
ffree
lret
outsl
inc
push
or
cmpl
gs
lret
xor
pop
loop
test
add
shrl
push
dec
bound
pop
inc
inc
jno
push
ret
xchg
incl
mov
or
enter
clc
jnp
dec
insl
aas
inc
dec
or
jle
call
shl
shrb
push
dec
mov
sbb
adc
xchg
cltd
mov
ss
mov
cmp
sbb
dec
inc
mov
adc
sub
mov
mov
mov
mov
roll
push
cmp
push
gs
or
xchg
pop
mov
pop
rcr
jecxz
mov
add
adcb
repz
pop
push
pop
arpl
jg
adcb
jb
cmp
insb
mov
cmpsl
pop
mov
cmp
pop
push
mov
inc
cmp
shl
int
loopne
cwtl
or
aam
adc
ficompl
dec
and
jg
push
mov
loope
cwtl
jg
sbb
add
adc
sub
xchg
xchg
decb
sub
cmc
push
push
daa
mov
xchg
sbb
out
adc
mov
jecxz
dec
mov
mov
cwtl
inc
xor
mov
arpl
xor
mov
test
inc
xchg
add
jl
or
or
loope
fwait
out
lret
insb
inc
imul
sahf
cmpsb
dec
mov
jne
fwait
sbb
out
push
dec
mov
pop
fwait
push
mov
pop
mov
std
aad
fidivs
cld
pop
adc
xchg
loop
push
dec
pop
push
pop
arpl
jl
mov
sub
movsb
xchg
xchg
lret
adc
mov
dec
inc
mov
adc
popf
dec
dec
enter
xchg
popf
subb
cmp
adc
out
dec
push
pop
mov
jg
outsb
inc
rolb
add
adc
test
or
std
cmp
movsl
addl
outsl
xchg
ljmp
pop
ss
incl
lock
jbe
inc
mov
mov
ljmp
push
icebp
xchg
loope
inc
arpl
pop
sub
pop
and
leave
mov
in
inc
in
inc
and
in
pop
push
ret
push
and
push
cmp
les
lret
xor
pop
mov
pop
incb
push
jmp
shrl
pop
bound
or
dec
pop
inc
jl
imul
ljmp
unpckhps
and
add
outsb
ljmp
pop
arpl
push
aam
out
call
ljmp
popf
sub
ja
stc
arpl
mov
sub
aad
ret
cmpsl
loop
pop
lahf
push
sub
mov
push
cs
or
ljmp
xor
comiss
fistpl
jbe
jnp
push
inc
aas
jns
in
shlb
imulb
iret
mov
inc
inc
clc
jnp
loope
aas
inc
xor
shrb
jmp
cmp
ror
xor
xchg
sub
add
cmp
subl
mov
rorb
in
pop
in
mov
stc
push
xor
hlt
out
shll
cmp
dec
jge
popa
aam
fildl
in
in
in
mov
fsubrl
sub
std
insl
lods
fs
imul
xchg
xchg
adc
jge
fninit
into
aam
scas
jno
pop
cmc
xchg
popl
inc
push
mov
repnz
lea
pushl
aam
push
add
mov
xorb
rcrl
inc
cmpsb
pop
mov
push
add
into
scas
cmp
and
imul
lcall
mov
cmp
js
add
out
daa
adc
repz
sahf
xchg
or
pop
sti
ljmp
rcr
adc
xchg
mov
mov
dec
outsl
mov
add
push
sub
sub
cmp
inc
or
pusha
in
jo
mov
pop
pusha
dec
jo
rorl
icebp
add
pop
sbb
sbb
icebp
stc
sub
adc
inc
scas
orl
lods
cmc
data16
mov
mov
lods
and
xlat
jecxz
sub
es
or
push
jnp
jmp
sub
addr16
aad
sub
sbb
popl
jge
pusha
inc
int3
jne
test
mov
dec
in
and
mov
push
outsb
push
std
cmp
movsl
dec
jg
fcmovnb
aad
or
outsb
add
ffree
lret
insl
inc
push
or
cmpl
gs
lret
xor
pop
loop
stos
pop
cmpb
cmp
push
push
push
pop
or
cmp
lods
pop
mov
cwtl
iret
xlat
fucomip
scas
ficoms
dec
nopl
daa
ds
cmp
jbe
pop
in
outsl
xchg
xchg
mov
mov
or
xor
push
pusha
pusha
push
push
pop
dec
dec
andl
add
sbb
movaps
inc
les
push
dec
adc
push
sbb
push
xchg
and
jae
in
in
mov
mov
mov
mov
fs
xor
pop
mov
push
fcmovnu
fnsave
or
cmpsb
xor
dec
jno
std
rclb
lods
jg
inc
je
sbb
push
fcompl
mov
sub
repz
data16
add
jbe
mov
aad
in
inc
pushf
jle
fidivs
pop
and
sbb
push
std
and
mov
mov
fisubrl
adc
and
repnz
mull
push
xor
jns
mov
addr16
jns
xchg
mov
push
jle
mov
jmp
inc
shll
out
out
push
jl
inc
jnp
pop
into
jbe
inc
enter
mov
and
subb
cs
cmp
mov
mov
lock
addr16
hlt
sbb
ljmp
fs
lods
movsl
test
push
xchg
int
ret
inc
scas
xchg
mov
inc
inc
push
in
cmpb
inc
dec
inc
inc
jge
xlat
jl
repnz
ret
lret
mov
jecxz
pushf
pop
mov
dec
imul
pushf
shlb
out
out
les
push
xor
push
adc
sub
jb
or
cmp
loopne
mov
lods
mov
sbb
out
pmulhw
rolb
scas
pop
dec
pop
shlb
sub
jo
inc
mov
mov
loope
lret
lock
cmp
inc
dec
fdivrs
sbb
push
mov
insl
jl
imul
icebp
mov
and
adc
das
js
mov
repz
call
sbb
push
lock
lret
cmp
and
xor
xchg
pop
mov
mov
jg
adc
sub
ret
pop
mov
sbb
popa
imul
fwait
mov
out
cmc
dec
inc
dec
pop
in
xchg
mov
inc
jge
orl
testl
enter
push
inc
test
out
push
ja
xchg
add
jae
add
aam
xlat
in
push
sub
js
std
outsb
inc
dec
gs
push
in
xlat
in
ja
outsl
add
add
dec
inc
lret
sbb
cltd
xchg
and
insl
push
jp
push
int3
lcall
adc
mov
xor
fdivrl
inc
dec
jbe
jo
mov
mov
adc
testl
jbe
sub
jnp
mov
mov
cltd
into
int3
and
and
cmp
jnp
push
pop
mov
aam
pop
xchg
cltd
mov
call
fpatan
and
cmp
fstpt
jne
je
dec
imul
jbe
mov
lods
and
hlt
divb
inc
cs
pop
jae
in
xor
sbb
popf
mov
pop
pop
movsl
fucomip
xchg
mov
and
inc
ret
push
in
pop
sub
sbb
mov
mov
cld
int3
push
fsubr
outsb
ret
sbb
mov
out
xlat
dec
ret
push
loopne
orl
push
fcmovnbe
cli
xlat
in
ret
or
ss
daa
test
jp
xorl
cmp
xchg
loope
div
jne
lret
sbb
les
pop
fstpl
xorb
mov
fmul
dec
iret
sarb
xchg
adc
mov
gs
push
gs
aas
nop
pop
or
inc
nop
loopne
inc
add
clc
add
pop
inc
mov
sub
add
push
push
das
mov
je
xchg
add
push
outsl
stc
dec
sbb
mov
fsubs
jae
test
scas
mov
mov
jo
aam
sub
pop
mov
inc
push
jl
mov
or
mov
jecxz
sti
or
adc
inc
mov
push
into
pop
sub
mov
push
inc
aam
inc
repnz
das
js
sbb
sub
sub
sbb
inc
jge
xchg
aas
xchg
sub
sub
lods
xor
xor
hlt
jp
js
jg
insl
cmp
mov
lcall
pop
aaa
movsl
sub
pusha
das
gs
jle
pop
jge
push
push
xchg
push
xlat
imul
js
mov
daa
das
fcoms
mov
stc
test
orl
push
lret
ret
dec
mov
sahf
cltd
sbb
mov
clc
lods
rorl
and
lcall
les
mov
pop
mov
repz
and
test
into
jmp
rorl
dec
cs
adc
xchg
bound
mov
jne
mov
movsb
and
movsb
sbb
clc
rcrb
cmp
xchg
and
cmpsl
or
out
out
ljmp
aas
aaa
int
or
std
and
std
jae
dec
pop
mov
lods
mov
dec
cmc
call
mov
in
cmc
and
pop
mov
sub
mov
aad
shll
movsl
mov
jmp
in
and
popa
fldenv
or
jle
jo
push
mov
cmpsl
mov
xlat
xchg
pop
popa
test
cmp
cmp
and
sub
testb
popa
push
jo
cmp
xlat
jle
fsubrs
adc
das
mov
fists
mov
cmpsb
jbe
setns
sti
stc
addr16
clc
repz
daa
push
add
xor
adc
sbb
test
mov
mov
in
int3
sub
cli
incb
sub
icebp
push
lea
stc
addl
ror
xor
fninit
add
test
jmp
sbb
push
cld
ja
add
adc
sub
in
testl
add
fiaddl
inc
dec
cmp
insb
cwtl
scas
test
hlt
arpl
hlt
out
repnz
xor
mov
std
add
stos
jb
dec
mov
push
mov
rcr
mov
push
mov
ljmp
pop
jmp
mov
push
dec
mov
rcl
loop
push
push
push
cltd
or
rorb
mov
push
push
or
push
inc
addr16
scas
sub
stc
pop
call
sbb
lret
ss
pop
pusha
push
push
or
mov
adc
fwait
or
call
outsl
je
popf
xchg
and
push
daa
mov
mov
es
and
test
jae
insl
fwait
fs
stos
mov
addr16
sti
jecxz
repz
mov
sub
outsb
ljmp
pop
arpl
aam
int3
rcr
in
ret
or
stos
dec
inc
aas
inc
ds
xor
jl
popf
dec
dec
enter
xchg
popf
subb
cmp
daa
pop
aaa
insl
jp
orb
std
mov
dec
fcmove
lock
dec
cmp
cmp
pop
jo
jg
jo
adc
scas
out
sub
stc
iret
call
in
call
outsl
xchg
mov
lret
ret
rol
cwtl
mov
fxch
popf
and
lock
inc
push
push
out
mov
test
rcr
xchg
xchg
add
rcr
mov
je
jnp
imul
mov
into
xchg
or
out
ja
lcall
push
dec
pop
jp
push
pop
and
jmp
daa
mov
lret
fwait
mov
or
inc
pop
push
xor
int3
push
adc
int3
out
mov
popf
cmp
dec
push
outsl
addr16
push
inc
pop
aad
and
iret
hlt
jg
adc
add
imulb
ljmp
xor
or
xor
pop
jns
lahf
and
mov
leave
sub
daa
data16
repz
pop
loope
mov
in
xlat
loop
aas
cli
jnp
movhps
daa
push
mov
push
imul
and
cmpl
add
adc
sub
es
add
mov
sbb
leave
mov
mov
cmp
ret
int3
cmp
cmp
add
popa
jns
xchg
xor
cltd
in
out
sahf
jbe
lahf
and
mov
divb
jae
idiv
cs
lea
mov
cli
pop
inc
jmp
lret
sti
jae
push
or
mov
cmp
sbb
sbb
ds
dec
fsub
in
hlt
leave
adc
cmp
test
imul
fcomi
insw
outsl
test
adc
push
fcoms
movsl
pslld
or
dec
inc
mov
sbb
jp
push
dec
outsb
cs
loopne
icebp
rolb
or
sbb
mov
add
imul
roll
cltd
inc
xchg
xchg
xchg
int
lahf
divb
mov
out
or
call
outsl
jnp
rcll
add
call
push
sbb
scas
dec
enter
adc
push
push
mov
test
pop
jmp
shll
xor
cs
sub
or
lock
iret
adc
scas
jnp
xor
shll
fwait
inc
push
es
orl
mov
mov
fs
imul
dec
sub
sub
mov
es
and
test
aam
in
popf
cli
add
pop
pop
dec
les
xchg
inc
sbb
push
jge
pop
adc
ret
lds
add
sub
inc
sbb
lret
pop
test
enter
sub
adc
push
push
sub
jne
in
jo
adc
fstpl
fwait
rcl
out
push
adc
jle
out
xor
pop
xchg
cli
andb
pop
sub
out
pop
call
sub
push
sbb
and
push
stos
scas
lods
shlb
and
and
in
push
dec
mov
movsb
pop
mov
and
or
or
and
cmp
sti
xor
lcall
fcmovbe
fucom
ljmp
xchg
add
movsb
pop
sub
dec
lret
xchg
inc
xchg
testl
pop
subps
in
add
insb
outsl
add
lea
mov
lea
mov
sbb
inc
or
inc
mov
data16
xchg
xchg
sahf
mov
push
mov
sbb
cmp
pop
push
xchg
dec
and
cmovs
xchg
xchg
push
pop
mov
iret
out
into
into
out
pusha
mov
jmp
out
cmp
inc
dec
jb
test
aas
inc
sti
call
xchg
lock
and
aas
push
inc
push
push
xchg
or
test
mov
in
in
fbstp
test
inc
dec
fs
jge
imul
sub
int3
into
fisubs
push
and
jne
jl
push
or
incl
stos
mov
sub
imul
sub
out
add
push
test
stos
subb
jnp
jl
cli
int
jns
push
pop
scas
rcr
loope
js
cmc
and
or
movsb
outsb
mov
int
jle
dec
lods
sbb
cwtl
mov
pop
pop
sbb
insl
sbbb
popa
ror
pop
adc
adc
inc
stc
mov
xor
jnp
jg
ret
push
xchg
mov
orb
cli
std
invd
jmp
clc
scas
and
jnp
sbb
push
adc
inc
jbe
mov
enter
xchg
not
or
ds
es
push
and
xchg
mov
fwait
mov
xchg
pusha
arpl
icebp
xchg
shll
mov
dec
push
pop
jne
add
lods
push
test
inc
inc
in
arpl
xor
xor
jmp
dec
daa
jae
pop
ds
mov
adc
xchg
mov
sbb
sbb
dec
dec
push
fwait
mov
out
jl
es
into
scas
mov
ret
push
in
out
out
out
fstpl
and
aad
add
insb
pop
loope
adc
push
mov
imul
in
cmc
cli
mov
cmpsb
xor
loopne
test
orb
cmp
inc
shr
clc
mov
add
cltd
or
shll
aas
das
repz
or
mulb
push
sub
repnz
pop
daa
xchg
loopne
or
int3
mov
test
adc
cmpsb
adc
and
std
je
out
cmp
xor
lret
shr
imul
sbbl
xchg
clc
pop
cmp
and
dec
lock
adc
xor
mov
aad
xchg
jo
std
cmc
je
mov
lret
out
and
out
sbb
push
mov
adc
adc
jb
jae
imul
mov
dec
mov
ljmp
sbb
out
fistl
inc
sub
aad
or
cmpsl
mov
jno
xchg
or
dec
shl
xchg
cmp
out
jge
xchg
xor
stos
mov
lds
jge
xchg
mov
clc
lret
aas
lods
xor
sub
ret
pop
sub
jp
dec
inc
jle
xchg
mov
icebp
enter
push
jns
dec
movhps
aam
loop
xchg
pop
pop
pop
stos
push
inc
add
and
push
sarb
jnp
mov
mov
cmp
xor
mov
testl
leave
shrl
inc
mov
mov
repz
inc
fs
fistpl
xor
mov
ret
shll
pop
sub
add
les
push
shl
jnp
mov
mov
jecxz
jnp
testb
repz
in
jbe
and
cmpl
xchg
pushf
push
jnp
xor
int
sbb
in
sar
or
in
stc
sti
loopne
add
test
xchg
lea
popf
dec
push
subb
cld
push
add
mov
lods
cmp
insl
jb
shlb
lcall
dec
fimull
or
out
and
mov
sub
cmp
push
add
xchg
shlb
das
dec
mov
icebp
inc
hlt
js
iret
icebp
mov
test
gs
sub
mov
xchg
fmul
stc
jno
lds
mov
inc
xor
jbe
mov
or
push
loope
xchg
neg
xchg
sbb
jo
pop
rorb
cs
cli
jle
fnstenv
addr16
sti
add
inc
hlt
pop
xchg
push
or
rcrl
jecxz
mov
sahf
adc
lret
ficoms
int3
inc
gs
or
mov
pop
dec
movsb
loop
or
push
pushf
aam
repnz
add
xor
xchg
sbb
xor
les
pop
in
stos
mov
jge
lea
cmp
je
adcl
xor
pop
imulb
faddl
nop
jb
decb
mov
enter
loop
repnz
add
xchg
mov
dec
rcll
pop
in
popf
nop
cltd
lahf
cmpsl
orb
dec
iret
sbbb
cmpps
mov
mov
js
iret
jno
and
test
add
xchg
fmul
stc
push
pop
lds
mov
inc
xor
outsl
sub
call
mov
jo
push
rorb
cs
cli
jle
flds
ret
sub
pop
add
inc
pop
and
jne
popa
rcrl
ret
in
mov
and
fcmovne
and
insb
push
mov
or
mov
pop
dec
test
mov
lods
push
pushf
lea
loop
or
adc
cmc
addb
inc
repz
xor
xor
cli
mov
lcall
xchg
xchg
sbb
adc
push
add
data16
cld
orb
fadds
int
ret
cmc
fs
movsl
sub
push
in
push
cltd
cmc
adc
ja
outsb
loope
push
xlat
sub
jp
xchg
sbb
stos
das
cmp
inc
dec
sub
cmp
js
xor
rcl
rcr
mov
mov
ret
mov
jle
jo
sub
addr16
loopne
fldenv
mov
shrb
mov
mov
bnd
shll
cmpsb
jno
xchg
fisubs
fwait
sbb
insb
jecxz
leave
dec
sahf
in
icebp
jnp
roll
mov
repz
sti
in
xor
cmp
ret
sub
insb
xchg
and
in
dec
fsub
in
hlt
cld
aad
loope
and
hlt
ficoms
adc
inc
jp
xchg
jl
and
std
lds
mov
ljmp
mov
mov
insl
call
or
sbb
mull
sbb
rorb
cmp
mov
jne
or
sub
pop
out
or
aam
or
dec
inc
jo
test
outsb
pop
inc
mull
mov
movsl
sub
xorb
inc
sbb
xchg
aas
call
mov
dec
mov
pop
xor
test
jo
imul
push
xlat
dec
into
ret
ss
sub
pop
mov
add
insb
mov
test
sbb
rol
sti
pop
sub
add
xchg
mov
lds
mov
push
jbe
imul
adc
ss
pop
inc
dec
rcrl
xchg
sti
test
add
sub
stos
adc
mov
pop
xchg
and
push
pop
xor
push
inc
outsb
cwtl
xorl
std
insb
repnz
mov
addr16
and
and
popl
pop
sarb
pusha
mov
imull
daa
out
in
test
mov
xchg
or
mov
pop
popa
add
loope
rep
xor
mov
sbb
pop
adc
sarb
leave
xchg
jg
and
cmpsb
cmp
mov
add
int3
test
scas
mov
stc
push
dec
cmp
fdivrl
jae
repz
mov
cmc
cmp
repz
jbe
add
inc
sti
insl
dec
push
fsubs
cmc
popf
decb
mov
repz
cmc
cld
orl
lret
pop
cmpl
lea
mov
mov
jno
lods
push
lret
sub
and
gs
xchg
ja
mov
lret
loop
jne
ret
icebp
stos
xor
mov
imul
sub
xlat
pop
adc
inc
popl
pushl
das
imul
sbb
mov
pop
push
adc
daa
mov
ja
enter
sti
mov
out
push
jbe
push
popa
sbb
fadds
cltd
xchg
mov
cmp
out
push
and
ljmp
sahf
imul
mov
mov
shl
add
jbe
jae
sub
imul
pop
incb
ficoms
mov
mov
mov
inc
or
sub
cmp
jl
sar
mov
xchg
xor
cmp
std
orb
test
jge
fcoml
mov
lcall
xor
mov
les
add
xchg
xorb
imul
inc
sbb
xchg
sbb
aam
das
bswap
push
add
jg
cmp
cmpb
insl
adc
gs
movsl
rcl
loopne
pop
shlb
push
lret
or
mov
fisttps
jb
pusha
mov
lock
inc
fnstenv
xchg
and
fimull
mov
aad
pop
mov
nop
decl
jle
shrl
clc
addr16
mov
cmp
rcrb
jae
jl
xchg
mov
xor
fsubp
fs
and
ss
lds
cltd
xchg
data16
mov
ficoms
stc
hlt
scas
sti
add
adcb
scas
cmp
negl
imul
dec
lods
push
pushf
mov
aas
mov
in
jae
push
adc
lahf
outsb
pop
arpl
pop
jnp
sarb
dec
or
mov
in
pop
das
dec
sub
inc
dec
rclb
stos
and
and
out
icebp
cli
add
adcl
cmp
xchg
mov
ja
imul
mov
xchg
inc
adc
add
call
inc
mov
sub
mov
js
es
cmp
ds
clc
or
jmp
dec
scas
cmp
mov
out
jns
jmp
shrl
sbb
roll
outsl
stc
out
test
inc
mov
es
xchg
fwait
xor
and
hlt
into
pop
out
mov
mov
cmpsb
sub
push
mov
bound
mov
decl
and
jecxz
les
aam
adc
push
enter
mov
cmp
xor
in
mov
aad
fistpl
pop
lret
push
sbb
cmp
cmp
les
mov
lods
imul
pushf
and
adc
pop
or
xchg
add
push
inc
outsb
jge
ret
sar
repnz
mov
arpl
push
and
cmovge
popl
mov
jge
sbb
or
sbb
adc
stos
das
jg
push
fisubrs
mov
push
out
sbb
push
fmul
dec
bound
rcrl
sbb
jns
jae
pop
iret
pop
dec
test
add
mov
das
mov
mov
and
es
shl
jp
test
stos
adc
xor
cmp
mov
xchg
push
out
test
loope
pop
mov
mov
lds
insb
hlt
pop
jecxz
std
xchg
and
adc
jp
push
arpl
add
mov
inc
movsl
add
push
in
jmp
xor
mov
push
dec
push
adc
inc
int
orl
adc
or
xor
jg
jb
mov
add
call
xor
mov
cmp
push
push
das
xor
sti
jg
ss
xchg
sbb
iret
xlat
fistpll
mov
add
inc
cli
lahf
sub
pusha
adc
pop
pop
inc
in
push
loopne
lcall
outsl
xchg
dec
mov
mov
popa
mov
xchg
mov
out
nop
sbb
iret
es
push
add
dec
aaa
push
outsb
xor
pusha
out
mov
push
shll
push
leave
dec
push
or
adc
decl
xor
test
repz
inc
test
and
fldcw
arpl
jge
adc
sub
ja
and
or
cmpsl
pop
std
push
ret
dec
cmp
lcall
in
aam
int
aaa
dec
pop
jg
test
lahf
dec
les
cwtl
shlb
ja
adc
sub
inc
lret
push
jb
and
sbb
inc
and
mov
mov
outsl
fstpl
jns
mov
cmpsl
scas
mov
xchg
push
xlat
lahf
xchg
add
jb
clc
addr16
cld
mov
xor
cld
xorb
mov
sub
lock
aas
mov
sbb
inc
lahf
shrb
sub
xchg
jo
add
daa
mov
lret
xchg
out
push
loope
icebp
stc
add
fnsetpm(287
mov
cmp
push
inc
mov
and
inc
popa
dec
cmpl
dec
into
subl
mov
mov
loope
pop
popf
icebp
push
jp
jnp
jae
ret
lret
dec
int
jbe
fwait
sbb
cmp
aad
lock
das
mov
pop
xchg
adc
mov
aad
xlat
cltd
and
jl
gs
push
sbb
cmp
cmp
stos
lret
test
lcall
xor
pop
outsb
fsubl
mov
fcoms
loopne
xlat
inc
lret
push
and
cmp
pop
adc
lret
sbb
loopne
iret
out
enter
pop
inc
sub
lock
xorb
inc
jo
jnp
shrb
mull
mov
aaa
cmpsl
xor
dec
mov
add
push
mov
add
icebp
mov
add
cwtl
and
xor
inc
push
sahf
and
imul
mov
dec
into
sbbl
push
mov
dec
xor
jnp
into
imul
pushf
push
jecxz
ss
push
xchg
fcmovne
cld
fldl
dec
mulb
inc
xor
sub
in
xchg
data16
and
sbb
mov
lahf
dec
lcall
add
inc
int
pop
dec
pop
ret
or
xor
js
cmc
pop
movsb
pop
pushf
push
shlb
icebp
pop
loop
clc
add
lea
sbb
sub
pop
test
rcll
push
subb
js
outsl
loopne
cmp
call
push
nop
cmp
xchg
ja
outsl
mov
mov
and
stos
repnz
mov
or
inc
cmpsl
xor
inc
pusha
je
pusha
push
jns
pop
xchg
dec
push
imul
loopne
in
icebp
std
add
mov
faddl
cwtl
daa
mov
jno
xchg
test
or
dec
into
cmc
in
out
mov
fstpt
rorl
sub
pop
cmpb
inc
dec
inc
inc
dec
jae
rcrl
out
test
jp
inc
cmpsb
xor
or
popl
jge
xchg
inc
int3
jne
test
pop
pop
sbb
in
hlt
jecxz
jmp
aas
jne
cltd
push
inc
dec
xchg
and
pop
pop
and
dec
aad
cmp
mov
std
add
insl
adc
imul
mov
lea
in
loop
xor
rolb
dec
stc
sbb
sub
int
lahf
mov
mov
sbb
bound
pop
daa
das
and
sub
mov
or
popa
and
jle
xchg
add
fwait
popa
push
je
push
xor
test
rcr
mov
stc
test
icebp
and
sbb
and
jo
mov
sub
jl
push
or
fdivrp
fwait
movswl
sub
dec
jae
daa
mov
jae
arpl
ret
js
ret
lret
push
movsl
arpl
push
inc
mov
push
xchg
scas
cmpsl
lods
cmpsb
jl
popf
or
pusha
in
xchg
lret
adc
leave
aas
aaa
cmp
or
add
push
mov
fs
mov
add
imul
pop
int
xlat
inc
lods
xor
sbb
decb
mov
push
fsubrl
rolb
xor
in
push
add
push
loopne
inc
mov
sbb
out
in
mov
fsub
out
movsb
daa
rorb
xor
cmpl
inc
dec
inc
inc
dec
outsl
mov
mov
jnp
out
inc
cmpsl
xor
cltd
or
xchg
mov
inc
xchg
inc
leave
jno
lretw
icebp
stc
stos
and
sbb
jmp
adc
push
dec
inc
dec
xchg
and
sbb
movsb
jecxz
into
ret
cmpsb
pop
in
and
sub
sbb
mov
ret
mov
xchg
out
jmp
lds
je
fmull
pushf
mov
int3
pushf
movsb
mov
mov
xor
jmp
sub
and
ja
mov
push
push
add
jp
cwtl
dec
pusha
int3
push
jo
insl
imul
stos
push
mov
test
fimull
lret
mov
sbb
and
jb
mov
sub
cmp
insl
out
push
push
pop
or
push
les
sub
outsl
js
mov
outsl
pop
pusha
xchg
ret
lock
mov
setle
cmp
cmp
adc
icebp
inc
cmc
jns
pop
jns,pn
test
test
or
rcr
enter
sub
and
xor
scas
lods
movsl
sahf
mov
pop
pop
sahf
cmpsb
movsl
mov
mov
or
sbb
pop
pop
bound
pop
and
jo
mov
arpl
out
test
and
sbb
mov
subb
mov
or
loope
icebp
sub
inc
es
sub
cmp
vpmullw
addr16
mov
aas
cmp
inc
aaa
adc
jp
cs
jp
lret
loop
xchg
mov
and
add
push
jg
sbb
xchg
push
ljmp
inc
fdivs
push
rclb
adc
stc
test
xchg
push
xchg
pop
test
idivb
sbb
rcll
loopne
rcl
add
jbe
push
sbb
stos
mov
xor
lcall
xor
das
add
clc
divb
push
pop
jbe
mov
mov
mov
mov
xchg
fdivrp
push
lds
incb
repz
push
xchg
fistpl
xchg
mov
test
add
mov
and
xor
in
adc
push
dec
mov
sbb
outsl
je
or
jp
daa
and
add
adc
jge
cwtl
pop
ja
pop
mov
mov
lods
stos
sub
mov
inc
jb
test
stos
cld
pop
or
ror
mov
xchg
xchg
pop
cmpsl
loop
pop
mov
dec
dec
cmpsl
push
dec
inc
aaa
xchg
mov
push
pop
data16
dec
iret
js
or
idiv
push
xchg
mov
aas
inc
repz
cmpl
inc
dec
cmp
mov
mov
mov
stos
scas
add
frstor
jns,pt
mov
test
mov
stc
add
mov
inc
dec
pop
mov
imul
xchg
adc
mov
imul
sahf
mov
pop
fiadds
push
xor
into
sub
add
jnp
dec
lea
arpl
fcmove
mov
pop
repz
lock
popf
es
les
stos
push
stos
push
movsb
adc
out
int3
mov
ja
or
es
fs
out
shlb
movsl
lods
lret
ret
aad
and
pop
std
add
in
cmc
in
push
pop
or
aaa
arpl
mov
ret
lods
pop
pop
or
loopne
xchg
sbb
mov
xlat
pop
push
xor
sub
dec
mov
nop
cmp
out
cwtl
push
push
outsl
out
adc
pop
cmp
xchg
mov
insl
push
pop
jns
test
mov
adc
and
add
clc
add
es
cs
push
sbb
movsl
popf
ror
hlt
in
scas
mov
mov
xor
inc
shll
inc
test
icebp
dec
push
cmpsl
mov
xchg
jae
add
orl
xlat
jnp
dec
jb
add
ds
pop
std
inc
mov
xchg
in
sbb
insl
stc
and
fcoms
xchg
jnp
and
rcrb
stos
cmp
jp
in
hlt
sysret
loop
fsub
std
push
cmp
dec
cmc
sub
jne
imulb
jg
mov
lock
mov
inc
pusha
fdivs
add
xor
mov
mov
mov
leave
pop
rcrb
or
pop
add
cmpsl
imul
loope
lahf
cmpsl
mov
mov
nop
leave
pop
jmp
pop
cmp
ret
fsts
outsb
add
dec
lret
ret
pop
mov
push
push
push
lock
into
sub
push
jns
or
les
mov
cwtl
mov
and
add
push
mov
fisubl
xor
pushf
jno
arpl
in
fsubrl
dec
and
mov
bound
dec
movsb
je
fwait
dec
push
and
dec
rcl
aad
fmull
and
xchg
adc
out
adc
repnz
mov
int3
aam
mov
pop
lcall
mov
and
cmp
mov
pop
fs
jmp
int
lock
stos
fildll
and
mov
out
push
lcall
jmp
mov
and
dec
inc
addr16
sbb
cmp
mov
js
xchg
lahf
mov
mov
xor
das
aaa
inc
ror
jae
add
sub
shrb
inc
add
imul
enter
call
pop
into
dec
sub
and
fwait
shrb
pop
xchg
mov
loope
or
dec
xor
fyl2xp1
rolb
cs
push
incb
and
fisubrs
ss
mov
les
push
push
ret
inc
cmp
sti
xor
dec
jnp
pop
mov
mov
adcl
add
ss
fs
imulb
inc
inc
arpl
lea
xchg
mov
insb
sub
hlt
dec
dec
inc
inc
sbb
cmp
push
mov
rcrb
loopne
imul
pop
sbb
sbb
orb
aaa
jge
test
xchg
add
sub
sub
jecxz
lods
adc
jg
stc
push
sub
jns
xchg
mov
jbe
int3
xchg
xchg
icebp
and
shl
imul
nop
stos
xchg
xchg
push
fdivs
or
sub
imul
jo
lahf
xchg
shlb
mov
mov
push
and
dec
inc
pop
push
pop
popa
adc
lea
mov
lea
mov
xchg
add
stc
hlt
sti
negl
icebp
insl
gs
sub
pop
int
cmp
jno
sub
jmp
int3
imul
sbb
push
pop
push
sub
lahf
xchg
cmc
xchg
imul
xchg
add
add
stos
ffree
sbb
sub
cli
and
push
sti
and
fstpl
fs
jmp
fcom
sub
movsl
lods
xchg
lcall
xor
dec
and
outsb
test
xchg
xchg
lret
push
mov
clc
mov
cmp
lds
mov
push
mov
out
jns
dec
in
ret
inc
ds
push
pop
addr16
shrb
xchg
xchg
orb
clc
or
es
dec
push
mull
xchg
imul
fcoml
jbe
hlt
dec
stc
add
loopne
xchg
xor
sub
imul
into
jnp
scas
into
idiv
xlat
push
xor
incb
mov
sbb
xchg
ret
lea
xchg
fwait
cli
repnz
ret
lret
mov
pop
inc
repz
dec
push
mov
arpl
add
arpl
out
movsl
sub
cld
rorl
fcmovnb
out
sub
or
jecxz
add
fnstsw
pop
ret
fcomps
and
pop
in
sub
test
xor
cltd
shrb
ret
add
leave
pop
test
cmc
sub
jno
stos
sub
inc
mov
inc
ret
out
mull
stc
jecxz
aas
inc
js
scas
push
orb
dec
stos
enter
mov
loop
or
sahf
xorl
xor
pusha
sbb
negl
pop
insl
je
je
mov
ret
xchg
incl
or
cmp
pop
mov
sub
dec
jle
arpl
cmpsb
scas
leave
lods
ja
xchg
out
testb
cs
fldenv
in
push
ds
fsts
lcall
inc
shl
or
jmp
adc
inc
inc
xchg
mov
loop
add
cmpsl
sub
cmp
movsb
lods
cmc
jne
or
dec
and
pop
in
mov
jge
popf
movsl
mov
aam
in
imul
cmp
pusha
pop
mov
pop
xchg
xchg
lcall
mov
adc
mov
mov
jb
mov
out
jo
xchg
lahf
or
rclb
sbb
dec
inc
push
lock
lahf
xor
fadd
lock
push
inc
enter
scas
mov
jo
xchg
dec
pop
pusha
loope
sub
or
ds
inc
jae
lods
sbb
mov
dec
xor
adc
sub
or
and
sahf
imul
mov
mov
in
insb
in
pushf
push
push
sub
push
sti
pop
es
xchg
xchg
jb
insb
js
jae
mov
loope
loope
clc
push
mov
inc
in
and
mov
and
in
lahf
push
mov
mov
dec
xor
inc
sub
cmp
das
ja
stos
mov
popf
test
mov
adc
sub
lods
cmp
dec
mov
lock
stos
scas
push
mov
mov
or
leave
sbb
add
push
or
jp
push
cmp
dec
cmpsl
loope
jno
std
pop
int3
lret
dec
sbb
push
popa
outsl
and
scas
nop
cwtl
and
mov
jecxz
test
mov
and
add
dec
dec
push
add
movsl
mov
cmp
mov
push
add
sub
cmp
mov
push
lods
mov
imul
out
div
ljmp
sub
pop
push
dec
push
push
es
sbb
mov
sbb
les
mov
mov
cmp
aad
push
and
add
pop
xchg
pop
lret
ss
iret
push
lds
mov
sub
es
xchg
mov
mov
jne
loop
push
frstor
or
mov
add
adc
arpl
outsl
jg
mov
test
pop
loop
shrb
mov
inc
dec
sti
sub
inc
cmp
rclb
sarb
or
push
pop
lods
das
imull
nop
js
adc
inc
pop
dec
mov
mov
pop
fcomp
loopne
mov
subl
cs
push
push
pop
or
fwait
stc
sahf
pop
xchg
aaa
pusha
rcr
mov
or
jp
ficoml
rolb
xor
adc
adc
push
test
pushf
sahf
cmpsb
push
pop
and
call
jmp
sub
ss
dec
dec
fildll
lods
int3
mov
mov
push
aam
jecxz
cwtl
sahf
rorb
mov
mov
xor
inc
pop
xchg
pushf
movsb
lods
push
jl
fildl
xchg
pop
loop
aaa
scas
and
push
iret
xor
add
lret
xchg
cmp
xchg
test
adc
cmp
jb
sbb
xchg
leave
inc
nop
jmpw
xchg
and
outsl
xor
sbb
pop
xchg
addr16
xor
fists
sbb
hlt
xor
popa
cwtl
pop
rclb
sbb
ds
jle
mov
dec
fisubrl
adc
push
mov
mov
fildll
jg
pop
out
mov
push
rcr
cld
hlt
es
leave
scas
out
xor
cmp
je
pop
loop
lea
lds
stos
fcmovnu
outsb
mulb
es
pop
gs
pushf
push
es
daa
push
aas
inc
jl
mov
or
push
add
push
inc
dec
push
outsb
lods
cmp
cmpsl
lahf
fstpl
mov
mov
stos
inc
inc
mov
addr16
inc
sub
mov
gs
adc
lods
mov
lods
int
jp
cmpsb
xor
pop
fisubrs
lcall
popa
mov
lret
stc
jo
mov
mov
call
inc
sarb
pop
mov
scas
cmpsb
lock
ja
jb
test
pop
outsl
or
xcrypt-cfb
cmpsl
cmpsb
shll
aaa
aas
inc
sbb
inc
sbb
sahf
xchg
mov
inc
addr16
rol
dec
shl
jmp
ljmp
sub
inc
test
imul
insl
icebp
adc
dec
pop
fabs
dec
inc
addl
incb
push
push
popf
xor
fsubp
icebp
test
and
out
loope
gs
xchg
push
es
mov
fwait
pop
stos
lret
imul
xor
cwtl
mov
and
xor
push
and
sbb
dec
mov
jae
push
pop
jg
ret
and
movsl
cmp
and
testl
cmp
sahf
xlat
lock
push
sahf
sub
ds
gs
das
xchg
inc
addr16
mov
insb
bnd
or
add
fcoms
pop
sub
inc
mov
mov
inc
mov
cmp
incl
es
or
out
push
adc
pop
xchg
xchg
adcb
mov
mov
cli
icebp
adc
add
sub
dec
dec
aad
je
jmp
mov
adc
xchg
fndisi(8087
jmp
adc
add
in
scas
push
popf
adc
pop
or
push
in
shrb
xchg
push
lret
add
add
pop
in
mov
xor
sbbl
or
add
or
ja
addr16
push
cmp
imul
in
mov
loope
sub
fs
xor
inc
orps
add
std
add
in
sbb
push
dec
adc
jp
add
mov
loop
mov
push
loop
jmp
xor
push
divl
xchg
ja,pn
mov
mov
scas
push
stos
jg
movsb
roll
xor
mov
gs
push
pop
outsl
dec
xchg
stos
nop
cwtl
pop
push
pop
ror
imul
jmp
or
cmp
push
jne
dec
popa
mov
sub
xchg
fabs
call
sub
ret
and
mov
sti
xor
mov
jbe
xchg
lret
aad
mov
pop
sub
sub
imul
mov
lret
rcr
out
jb
mov
sub
movsb
dec
popf
test
arpl
insl
inc
in
cmpsl
and
aam
repz
push
cld
add
jecxz
popf
xor
sub
cwtl
nop
xor
ror
jp
icebp
or
pop
nop
pusha
cmpsl
cmp
add
jns
jbe
push
pop
or
mov
ret
pusha
sbb
aam
loop
xor
clc
pop
sub
pop
push
call
mov
mov
push
dec
pushf
pop
ds
or
pop
inc
push
das
sahf
push
xchg
mov
add
idiv
fimuls
add
daa
mov
inc
rcrl
push
pop
push
push
xchg
add
push
outsl
stc
adc
jmp
or
add
add
loopne
addl
dec
mov
fimuls
push
rorl
inc
dec
dec
pop
rcrl
pusha
ds
scas
and
stos
fninit
jmp
call
or
cld
pop
mov
sub
mov
jns
iret
dec
stos
jae
mov
mov
xor
scas
dec
add
iret
xor
or
adc
vpavgb
lods
pop
mov
xor
push
jp
adc
mov
movsl
cwtl
jb
call
ret
add
lahf
add
cmpsl
addr16
gs
jns
xchg
mov
mov
jmp
iret
inc
aaa
daa
mov
pop
dec
sub
daa
inc
xor
or
cmp
mov
push
shlb
xor
sbb
adc
pop
pusha
test
dec
push
insl
mov
leave
rcr
push
add
loope
add
loopne
clc
sbb
inc
cmpl
test
xchg
into
lea
mov
dec
mov
mov
insl
push
jnp
imul
jno
add
ret
xor
cmp
sub
data16
or
jg
mov
xor
faddl
or
pop
cli
and
cld
adc
or
xchg
imul
push
cmc
std
add
lret
push
pop
inc
add
adcb
js
movl
nop
in
mov
xchg
push
jbe
das
mov
xchg
dec
imul
loop
daa
out
pushf
mov
es
loop
mov
sub
jmp
jl
mov
pusha
popf
xor
pushw
loopne
lock
add
pusha
loop
lods
decl
mov
xchg
pop
fabs
call
scas
jmp
sub
cmp
lock
or
jns
xchg
dec
jl
jb
shll
mov
mov
push
test
add
push
mov
jne
mov
pop
repz
jo
mov
mov
cmc
push
add
or
imul
push
ret
cs
xbegin
xchg
sbb
fimull
jmp
insb
xor
popf
xor
mov
inc
mov
add
xlat
or
pop
dec
addr16
int3
test
jg
mov
int
stc
jo
xchg
ret
ret
loop
xchg
push
lds
andl
lahf
cmp
cmp
push
int3
cmp
lahf
adc
addb
cltd
push
aaa
out
popa
aas
inc
aam
outsb
sbb
cmpsb
pop
lods
sbb
in
fcomps
pushf
cwtl
daa
test
push
push
pop
iret
in
xchg
mov
fdivrs
fsts
loopne
out
stos
sub
in
inc
rolb
mov
mov
mov
push
loopne
mov
out
lret
hlt
add
ss
push
fildll
adc
sahf
das
mov
jecxz
hlt
out
orb
xchg
sub
or
rcrb
lret
je
test
and
jmp
out
xor
or
add
iret
xor
stos
jge
lea
xchg
sub
fnsave
in
ljmp
and
out
push
pop
push
inc
xchg
push
stos
mov
loop
jno
mov
cli
add
jns
daa
in
mov
test
mov
out
filds
aaa
pop
mov
mov
outsl
dec
ficompl
xchg
and
mov
xchg
imul
leave
jmp
pop
add
cmp
push
xor
inc
addr16
mov
cmpsb
fdivs
into
cmp
cwtl
and
stos
icebp
inc
dec
add
cmp
adc
mov
out
test
jl
cmp
lret
dec
test
xchg
std
int3
sub
loope
imul
sub
adc
lods
xor
insb
int3
push
out
in
je
xchg
mov
lret
fsubr
repnz
add
adc
and
pop
add
inc
dec
repz
lret
sub
sti
lea
outsl
scas
testl
or
push
inc
push
sbb
xchg
push
je
gs
mov
ljmp
lock
and
pop
cmp
adc
das
push
xchg
imul
xchg
mov
gs
jns
sub
inc
pop
daa
mov
mov
dec
push
pop
cmpb
mov
scas
adc
loopne
or
add
fsubrs
mov
leave
sub
loope
sar
pop
iret
adc
sub
pop
mov
scas
out
jp
loope
out
es
sbb
jno
les
fwait
and
rcll
mov
push
idivb
add
insb
cmp
jl
mov
jo
rorl
ret
outsl
roll
sbb
inc
adc
xor
jne
test
mov
mov
out
mov
pop
inc
hlt
pop
push
sbb
add
adc
fnclex
xchg
popf
movsl
lods
pop
mov
and
cmp
in
cmc
std
sub
adc
jp
pop
dec
or
mov
ret
jb
or
sbb
cli
pop
dec
popa
push
pop
data16
sbb
jo
cwtl
aad
scas
mov
add
shufps
enter
dec
sarb
and
pop
cwtl
mov
mov
lods
xchg
adc
roll
out
testb
sbbb
leave
jp
popfw
icebp
stc
add
sbb
call
imul
and
jns
mov
sbb
or
dec
iret
pop
pop
cmp
sub
xor
dec
fisttpl
or
adc
mov
test
fsubl
mov
loopne
sbb
aaa
xchg
pushf
mov
orl
outsb
cmc
pop
sub
xor
mov
or
sbb
xchg
incl
popf
and
aad
in
mov
dec
pop
mov
in
sbb
out
aam
pop
jge
pusha
cmpsb
xchg
mov
mov
int3
cli
add
xor
jmp
adc
inc
mov
ja
dec
push
and
push
arpl
push
rolb
out
mov
mov
or
sbb
inc
xor
sarb
loopne
cmp
mov
rolb
cmp
les
inc
dec
adc
clc
sti
dec
js
xchg
cltd
xchg
pop
fbstp
rclb
add
sti
sbb
xor
ds
fsubl
xor
sbb
into
cmc
insb
notb
out
shr
fs
rcrl
cli
mulb
add
lea
nop
gs
or
or
repnz
sub
mov
sbb
mov
int3
aam
repz
and
xor
out
arpl
sbb
daa
add
dec
jp
mov
sbb
lea
xlat
iret
pop
aad
in
loopne
inc
ljmp
cmpb
inc
mov
mov
loop
rcr
test
loopne
loop
repnz
sub
flds
jbe
lahf
inc
jno
cmpsb
xchg
nop
arpl
scas
ficoms
mulb
icebp
shl
decl
mov
push
sbb
fcomps
dec
lods
mov
or
fmuls
push
lock
push
fbstp
imul
mov
cmpsb
xor
mov
idiv
add
stc
add
pop
loop
push
dec
fistpll
mov
mov
push
xchg
mov
push
into
add
incb
push
in
ds
inc
test
xchg
lret
mov
dec
or
lds
sahf
sub
mov
arpl
in
in
xchg
pushf
inc
mov
xchg
pushf
dec
lods
flds
icebp
ljmp
sbb
ja
nop
outsb
xchg
fs
jne
in
xchg
sar
fmuls
in
mov
inc
shll
xlat
in
jl
mov
push
loop
cli
add
sub
ljmpw
lds
cmp
mov
jle
test
and
das
dec
es
pop
in
negl
adc
sub
mov
xchg
cmpsl
cmp
and
das
mov
pop
ss
jns
mov
jns
and
or
sbb
sub
add
fadds
fs
pop
arpl
inc
mov
in
mov
in
lahf
xlat
or
lock
pop
popa
hlt
xchg
dec
or
fs
fcmovbe
mov
jbe
lret
jl
aam
mov
adc
push
fsubs
inc
pop
sub
cld
rcll
push
xchg
adc
pop
adc
fmull
dec
and
and
ss
movsl
lods
cmp
aam
mov
adc
adc
insl
sub
das
inc
hlt
adc
jno
dec
push
cmpl
rcll
or
ljmp
and
push
jg
pop
jns
jl
mov
idivb
xchg
push
sahf
leave
mov
sarb
mov
popa
addr16
aas
scas
and
inc
jne
shrl
mov
fmuls
jo
inc
push
push
rcll
and
and
das
mov
mov
or
sbb
and
loop
xor
sub
jne
test
jle
test
iret
sbb
pop
roll
jb
adcl
mov
mov
dec
jmp
sti
sahf
scas
sarl
sub
lea
je
push
data16
pushf
movsb
mov
cld
jmp
or
cli
pop
adc
in
jmp
and
pop
jg
jp
sarb
repnz
jno
mov
sub
inc
push
and
sub
jbe
insl
jb
dec
rcl
pop
stos
iret
or
adc
push
loop
lcall
inc
lret
push
divl
xchg
push
ja
pop
xchg
scas
cmpsb
mov
outsl
addb
and
pop
dec
dec
push
pop
daa
inc
dec
jg
nop
cmp
pop
mov
jmp
in
mov
mov
or
pop
addr16
nop
or
out
scas
repz
mov
icebp
aas
fidivrs
ret
jno
push
jo
jle
pushf
or
test
fst
fisubl
push
ret
cld
imul
inc
pop
pop
jp
insb
outsb
ds
aaa
cmp
test
mov
fsubrl
and
adc
mov
pop
add
pop
and
mov
stos
mov
mov
mov
aam
cmpsl
and
ret
xor
jo
dec
gs
push
ja
in
out
adc
decl
fucom
into
shl
in
inc
out
and
dec
outsb
fidivrl
mov
xchg
rorb
sbb
sti
xor
inc
inc
sbb
adc
and
pop
retw
lret
lahf
enter
add
xlat
or
inc
lock
outsl
js
xchg
js
push
xchg
loopne
mov
ds
sbb
cmp
jp
mov
push
push
mov
xchg
lret
in
in
in
mov
repz
stc
add
push
pusha
repz
cmp
lods
movsl
pushf
mov
iret
push
fimuls
push
out
inc
cmp
incl
adc
dec
sub
pop
scas
xor
ljmp
adc
jmp
push
sub
ja
js
push
inc
inc
dec
dec
mov
ljmp
aas
aaa
xor
or
sub
and
lods
jle
fcom
shll
lods
fists
mov
cmc
dec
enter
lret
outsl
jbe
push
scas
stos
cs
loop
ret
clc
sbb
or
loop
fcmovnbe
in
in
and
cli
sub
mov
adcl
rcrl
mov
mov
aas
sbb
jae
popa
imul
xor
inc
inc
jbe
dec
orb
push
loopne
add
inc
int
stc
cs
jns
pop
xchg
mov
mov
jno
cmpb
movsb
sbb
mov
jne
arpl
inc
pop
es
and
into
scas
in
or
lret
adc
out
push
jbe
jne
imul
stos
movsl
cmpsl
jnp
pushf
inc
fcomps
xchg
int
test
dec
inc
cmp
or
push
push
out
pop
arpl
push
pushf
lds
cli
add
fdiv
jne
mov
insb
jne
jg
cwtl
cltd
insb
jne
gs
cmpsl
cmc
test
aam
add
inc
push
and
push
xchg
cmp
push
mov
jmp
lret
mov
xor
adc
xor
adcb
lcall
mov
lahf
adc
sbb
in
mov
cmp
cmp
add
mov
mov
imul
sbb
xor
dec
test
pop
mov
and
mov
push
xchg
rcr
and
out
jne
cmp
xchg
or
cs
movsb
jg
bound
int3
mov
mov
mov
rcr
cmp
xorl
jge
mov
cli
repnz
lret
in
push
test
fcoml
adc
pop
arpl
in
pushf
cld
ret
int3
aam
stos
jne
sub
dec
lret
pop
cmpl
lea
in
cwtl
inc
ror
pop
mov
sbb
fists
in
add
inc
push
cli
das
rclb
jp
pop
nop
mov
js
jp
mov
adc
icebp
and
loopne
repnz
inc
rorb
add
add
adc
test
jns
xchg
pop
sar
fnstcw
inc
cld
jae
cmp
aas
inc
jnp
inc
addr16
rolb
jl
mov
sbb
lahf
xor
pusha
negl
mov
testl
xchg
rcr
loope
testb
leave
rorl
add
loopne
xor
popf
imul
push
cmpl
sub
push
cmp
xchg
jb,pt
insb
inc
cmp
mov
pop
mov
sub
mov
arpl
sbb
jl
testb
stos
out
mov
in
hlt
sti
repnz
sti
lret
or
xor
pop
xlat
test
and
lahf
pop
stos
jmp
mov
clc
addl
scas
cmp
gs
cmp
popa
inc
mov
rorl
scas
jbe
cli
add
daa
and
dec
push
daa
push
je
ja
out
xchg
lahf
js
les
mov
cli
roll
clc
addr16
cmp
call
jo
sub
ror
test
aam
adc
and
cmp
dec
sub
ss
andl
mov
icebp
jmp
jno
test
dec
ss
out
negb
push
jae
es
adc
mov
ret
jnp
xchg
out
lods
sti
jnp
mov
cld
jl
andl
xor
into
lods
or
sub
aad
cld
cmp
std
andb
lods
fs
dec
test
movsl
popf
sbb
push
fdivrl
adc
sub
popf
inc
rorl
jmp
dec
and
loopne
int
fs
xbegin
and
dec
push
sbb
dec
js
pop
inc
js
add
aad
cli
add
jl
adc
and
dec
inc
xor
pushl
xchg
or
mov
xchg
mov
iret
xlat
sar
add
inc
push
xor
aaa
and
popa
mov
imul
ror
xor
mulb
clc
add
xor
lods
es
loope
scas
lock
loope
sub
orb
jmp
mov
sub
dec
xor
mov
insb
jae
loopne,pn
mov
cmp
mov
dec
iret
pop
pop
cmp
adc
mov
outsl
push
dec
jp
mov
or
mov
into
mov
adc
dec
mov
xchg
pushf
mov
in
out
cmp
pushf
xchg
jp
sub
cmp
das
fs
loop
outsl
adc
inc
insb
xlat
shl
dec
aad
pop
rolb
adc
aaa
and
mov
pop
jns
mov
mov
stos
mov
xchg
mov
lea
mov
mov
clc
nop
dec
lret
push
ljmp
and
jns
mov
mov
push
incb
xlat
dec
mov
dec
add
dec
cmp
call
pop
cli
repz
testb
adcl
inc
cmp
ds
push
je
test
sbb
rcr
ret
mov
pop
fabs
jmp
pop
fisubl
inc
loope
xchg
lds
rorb
sub
push
xchg
push
cmp
test
lea
testl
rcll
orl
lret
loop
mov
imul
cmp
test
pop
shlb
scas
sbb
xlat
inc
dec
xchg
ds
or
jg
lds
jge
insl
jbe
pop
data16
jbe
sbb
mov
aas
push
loopne
jb
jo
nop
lods
fwait
pusha
insl
jb
xor
mov
mov
and
dec
cmp
gs
push
cmp
frstor
lahf
lahf
and
pop
bound
or
sets
loope
adc
sbb
pusha
jp
mov
jmp
in
rcrb
scas
icebp
cmp
inc
jmp
pop
cmp
les
imul
movsb
mov
inc
adc
sub
and
mov
stos
pop
out
jo
mov
enter
push
aam
aam
jbe
xorl
ret
push
dec
lds
add
push
sbb
inc
test
mov
and
xor
lods
or
mov
inc
dec
ficompl
test
mov
popf
dec
outsb
cmc
std
add
lret
insl
pop
inc
fbld
mov
jb
nop
push
mov
outsl
add
adc
cmc
test
cli
aas
pop
fistpl
outsl
aaa
mov
test
jmp
cvtpi2ps
iret
push
into
mov
hlt
js
sub
mov
or
dec
shl
mov
jno
or
xor
dec
and
cmp
shrl
cltd
mov
sub
stc
add
jbe
loope
xor
rorl
pop
pusha
pop
je
mov
and
mov
loope
testb
or
mov
das
insb
and
xor
adc
cli
jb
sahf
movsb
and
in
inc
enter
and
cmp
push
gs
or
ret
test
cld
add
and
add
and
insb
adc
pop
inc
dec
push
jge
pop
aad
in
js
adc
xchg
add
out
sbb
pop
orb
in
mov
xor
aad
add
loopne
push
leave
rcl
mov
mov
or
imull
jo
pop
lret
rolb
jbe
fisttpl
jns
jae
cltd
sbb
add
dec
and
nopl
sub
stos
lcall
shrl
mov
inc
jl
jne
push
mov
dec
les
cmc
jne
jecxz
jge
hlt
xor
pop
fnstsw
out
pop
and
sub
jnp
and
fninit
mov
mov
jecxz
movsl
cmp
dec
push
xor
xchg
adc
push
outsb
fcmovne
jge
out
gs
int3
cld
pop
cs
dec
loop
insb
jne
test
add
aaa
xchg
int
push
movsl
outsl
mov
mov
clc
aas
cmp
push
addr16
mov
sarl
pop
fs
loop
jmp
inc
pop
sub
lcall
or
jb
rorb
ds
pop
outsl
xchg
push
fs
mov
mov
subl
fsubs
scas
mov
inc
dec
dec
inc
bound
mov
jnp
push
test
stc
mov
mov
mov
or
popa
push
pop
popa
test
sub
push
pop
fucom
mov
popf
mov
es
aad
insl
lret
ss
lcall
lret
rcrl
add
xchg
push
cmp
repz
into
pop
std
xor
out
push
das
xor
lcall
fwait
test
sbb
cld
mov
insb
jne
test
adc
mov
call
out
int
xor
push
push
and
push
xor
push
fnstcw
lahf
fsubs
rclb
cmp
xor
mov
fnstenv
out
out
mov
daa
das
cmp
push
incb
jnp
js
dec
cmp
dec
mov
fsubrs
and
and
ret
lret
push
andl
inc
sub
xor
mov
das
push
test
mov
sbb
inc
adc
cs
cli
jle
arpl
cmpsb
scas
aad
lods
xchg
sahf
mov
mov
shrb
inc
aam
gs
jns
or
stos
test
out
shl
ljmp
sub
sub
or
cmc
mov
jl
lcall
mov
mov
in
aas
mov
pop
insb
jne
and
cmp
enter
xchg
popf
mov
cmc
std
add
scas
cmp
call
mov
loopne
lret
push
mov
inc
xor
add
add
out
jno
dec
data16
xchg
test
cmpsl
dec
mov
pop
iret
xlat
loop
bswap
xor
out
fcomps
xor
daa
inc
jno
or
cmp
aas
mov
sti
repz
lock
mov
inc
sti
icebp
je
inc
push
test
inc
sarl
hlt
shl
ror
mov
adc
stc
imul
popa
push
mov
scas
stos
mov
cmc
in
int3
out
mov
ret
inc
aam
int
fs
jns
orb
jne
je
lret
and
cmp
push
cmp
data16
xchg
je
xor
push
faddl
int3
aam
pop
and
cld
daa
pop
adc
int
repz
ja
add
xlat
stos
fmull
dec
inc
xor
std
sbb
pop
sbb
xchg
aaa
rclb
push
jge
dec
dec
push
pop
gs
cwtl
jp
and
pop
loop
ret
aaa
movsl
sub
dec
dec
rcll
or
jg
inc
scas
cmpsb
andl
mov
jmp
add
int
dec
push
jmp
orb
dec
jle
pop
enter
add
clc
enter
adc
push
jno
pusha
adc
push
pop
aas
dec
andl
add
jecxz
rcr
rcl
stc
sub
adc
jl
xchg
enter
mov
mov
mov
es
std
cmp
push
xorl
test
add
rcr
mov
lret
cli
xor
push
sub
mov
and
pop
or
mov
mov
movsb
fwait
fwait
rorl
loope
das
fistps
cld
adc
fs
jl
dec
stos
mov
fmuls
sahf
jne
mov
add
dec
mov
add
insl
addl
mov
push
pushf
icebp
push
mov
inc
aaa
inc
mov
pop
sarl
imull
arpl
jg
xor
xor
or
scas
stc
and
das
mov
addr16
js
mov
rol
rolb
ror
mov
inc
out
push
sbbl
js
test
mov
ror
js
hlt
mov
mov
jmp
push
fs
xchg
lods
je
jbe
fucomi
pop
out
int3
jle
push
push
aad
mov
sub
insl
gs
cs
jl
pop
mov
lret
rorl
test
sub
in
pop
repz
fsubrp
and
mov
jp
cld
mov
jp
test
popf
rol
cwtl
sbb
sub
push
and
adc
movsl
push
push
ror
mov
and
or
pop
call
gs
jb
xor
mull
js
ret
lds
add
outsb
mov
cmpsl
mov
out
cmp
sar
iret
call
loopne
inc
loope
outsb
add
outsl
push
pusha
xchg
imulb
call
adc
call
mov
add
mov
ret
fistl
push
mov
enter
mov
insl
daa
sahf
cmpsb
lds
mov
ja
ficomps
lods
and
ss
fnsave
jbe
faddl
and
jl
push
add
add
sbb
pop
jmp
loopne
sbb
jae
mov
adc
cli
push
fildll
outsl
sbbb
aad
movl
push
pushf
sub
enter
xchg
popf
xorb
and
xor
shlb
mov
mov
lret
loop
mov
ret
and
push
ja
lds
dec
and
cmp
xchg
push
leave
js
cmp
out
xorl
push
imul
xchg
and
push
cmpsb
cmpsl
mov
push
lret
ss
sbb
or
xlat
pushfw
mov
jmp
out
push
loope
addl
push
inc
and
xor
adc
imul
loopne
orb
fldt
sub
outsl
into
dec
pop
popa
hlt
mov
pop
pop
lods
pop
stos
mov
xorl
sti
ret
repnz
or
cmc
xchg
out
jne
scas
sub
cli
popf
add
cmc
xor
std
mov
pop
push
sub
cmp
push
xor
addr16
ret
lods
add
imull
cmc
call
gs
test
js
dec
dec
push
cmp
fidivrl
aam
shrl
int
pusha
mull
push
in
insl
cli
cmpsl
cmc
add
dec
pop
lret
test
test
mov
mov
aas
call
outsl
ja
mov
lret
ds
push
push
or
xchg
xor
incb
add
cmpsl
add
lea
sub
jbe
mov
jecxz
lahf
sub
cmp
jbe
fistps
std
stc
and
sub
jmp
adc
xlat
dec
jmp
push
into
xlat
jo
incl
and
ret
into
je
jmp
shrl
daa
and
adc
out
pushf
jle
mov
mov
mov
lret
inc
sbb
lret
xor
sbb
adc
xor
pop
xchg
cltd
movsl
lods
ret
notl
jg
sbb
gs
orb
mov
call
cli
rorl
jecxz
repz
dec
leave
jl
ljmp
push
mov
lock
out
jbe
divb
mov
daa
xor
jmp
test
outsl
xchg
nop
nop
sbb
and
rcl
fsub
fildl
sarl
and
or
pop
aad
jl
into
sbb
adc
mov
jl
jbe
ja
add
stc
sub
adc
dec
inc
pushw
lds
pusha
push
xorl
stc
mov
sub
mov
push
xchg
insb
mov
mov
lret
je
inc
jg
sti
mov
xchg
lret
repz
sub
scas
sub
sbb
movsb
adc
or
ds
adc
adc
imul
cwtl
pslld
mov
mov
add
clc
cld
in
in
cmp
inc
imul
mov
mov
outsb
ffreep
ss
aaa
jg
cmp
or
xor
sbb
in
and
xchg
adc
aaa
pop
mov
pop
fists
sahf
or
dec
push
pop
icebp
mov
and
mov
mull
adc
lods
xor
push
push
out
pusha
sbb
lahf
xchg
cltd
lahf
test
sahf
hlt
insl
icebp
mov
xchg
cmp
or
sub
test
arpl
cmpsb
scas
mov
inc
mov
adc
push
sub
roll
les
mov
xor
mov
repnz
testl
sub
push
dec
push
dec
sbb
push
adc
mov
xchg
pushf
mov
aad
pushf
movsb
mov
mov
in
dec
cmp
dec
addr16
insl
bound
push
inc
add
movsl
dec
jg
push
int
mov
mov
and
sub
dec
and
xchg
aad
lret
cld
icebp
cltd
testb
sub
xchg
push
or
nop
inc
mov
mov
cmpsl
test
xchg
leave
movsb
fldt
xchg
sub
daa
out
popa
or
push
jnp
orl
outsl
fcompp
fists
mov
or
adc
and
add
inc
dec
push
sub
pushf
xchg
xchg
pusha
push
into
jbe
adc
orb
mov
mov
stc
imul
fisubl
pop
lret
xchg
adc
pop
int3
scas
cmp
jne
lret
sti
sbb
imul
push
in
cmp
and
fs
stos
mov
arpl
pop
cmp
stos
ret
xor
fdivr
repz
outsb
ljmp
pushf
movsb
stos
cmp
jnp
insb
xchg
mov
sbb
cmp
iret
mov
inc
js
jge
push
mov
movsl
lods
pop
rolb
loop
out
std
into
mov
mov
adc
out
mov
mov
fwait
push
icebp
push
fadd
mov
sub
jno
enter
jo
roll
xor
push
divb
lcall
xor
push
mov
aas
jae
push
sahf
cmp
jecxz
cmp
test
xor
dec
movb
imul
pusha
shll
stos
std
mov
or
or
add
jmp
push
add
sbb
popf
adc
cmp
jl
inc
mov
jmp
je
out
stos
rcr
jne
jno
push
add
pop
stos
push
lea
rcr
xchg
bnd
ljmp
xor
push
add
mov
jl
es
mov
les
add
cld
out
cli
fmull
push
mov
pop
mov
jge
scas
sbb
aas
loopne
in
cmc
std
aam
mov
mov
cmp
fisubrs
addl
data16
std
mov
adcl
xor
cmp
testb
cmpsl
scas
push
push
pop
js
into
dec
mov
xlat
and
dec
pop
pop
or
push
inc
dec
cmpsl
stos
or
pop
pop
test
mov
push
inc
xor
or
xor
dec
mov
jns
ret
xchg
add
push
outsl
stc
shll
xor
add
in
jmp
nop
pushf
sahf
jl
inc
mov
mov
cld
aad
stos
mov
push
push
ds
aaa
jne
xchg
cld
rcrl
movsb
ficoms
bnd
adc
mov
fninit
int3
repz
jae
into
xor
or
ror
dec
xchg
pushf
movsb
lea
xchg
mov
inc
inc
aas
fs
pop
mov
inc
sarb
lret
std
mov
sub
or
dec
stos
adc
mov
mov
insl
cltd
pop
pop
loope
push
fsubrl
mov
ljmp
call
adcl
jg
mov
incl
mov
push
aas
int3
dec
lret
mov
scas
test
ds
shr
lret
faddp
xor
xchg
into
mov
testb
dec
dec
repz
cs
mov
inc
inc
ret
imul
xchg
add
sub
mov
rcll
sub
adc
data16
inc
push
aad
mov
rcrb
std
adc
adc
imul
add
inc
pop
mov
push
bnd
ret
lret
mov
sub
in
push
pusha
add
int3
sub
mov
cmp
jb
int3
aam
pop
rcl
dec
inc
lret
and
xor
cli
adcl
sbb
int3
push
add
out
out
cmc
std
add
leave
jb
xor
xor
enter
ret
mov
or
clc
add
push
rcll
add
xor
outsb
lahf
push
pushf
rcll
pop
iret
inc
push
daa
mov
loopne
vmaxpd
dec
sahf
pop
xchg
insb
movsb
addr16
and
dec
mov
and
fwait
test
decb
dec
push
push
out
mov
cmp
fwait
cltd
or
push
js
or
fnstenv
inc
and
fs
mulb
sub
push
inc
mov
mov
lods
test
in
cmpsb
scas
mov
and
out
or
push
iret
pop
add
out
orl
lea
test
mov
les
fnstsw
or
cld
and
or
cli
or
hlt
out
jp
mov
movsl
fcmovbe
in
hlt
pop
add
clc
mov
sub
movsl
sub
fnstsw
sbb
mov
filds
daa
xor
popa
out
jp
stc
inc
pop
mov
push
fsubl
shrb
lock
cmp
insb
jle
cmp
push
push
lahf
cmpsl
and
aad
imul
and
add
mov
repnz
pop
mov
xchg
cmp
loopne
and
or
sbb
sbb
cmpsl
sub
popa
jle
dec
push
inc
jle
test
inc
jo
aam
rorb
repz
push
pop
xor
sub
jp
and
clc
das
pop
fst
mov
fsubs
mov
and
out
and
lea
rcr
adc
mov
mov
into
pop
sub
pop
pop
cmpsl
lahf
inc
imul
xlat
jb
lods
mov
xor
cli
in
cmpsb
inc
dec
push
loop
xlat
addr16
addr16
mov
inc
cmpsl
jge
lea
xchg
sti
int
mov
add
sub
test
jp
cwtl
gs
mov
fmuls
and
loope
in
or
pop
jmp
and
mov
pop
xchg
or
jl
test
inc
mov
mov
inc
leave
ss
repz
mov
popa
xor
cli
mov
enter
sbb
lock
bound
push
inc
push
pop
pusha
push
jge
sbb
jo
test
stos
mov
ret
lcall
push
into
pop
rorb
and
lods
fimuls
outsb
push
push
jge
mov
push
push
mov
mov
mov
push
test
jge
stos
mov
pop
ja
sbb
sub
movsl
inc
adc
outsb
lahf
int
inc
dec
jl
mov
repz
mov
jae
push
adc
lahf
outsb
dec
arpl
pop
jnp
les
lea
jb
lret
xchg
das
popf
movsl
lods
mov
fldl
push
mov
and
movsb
xchg
andl
jp
cwtl
cld
lret
and
xor
in
or
jp
outsb
mov
fisttps
aad
pop
rcl
negb
lret
aas
push
lret
loope
jns
jle
nop
cmpsl
push
dec
mov
sarb
repnz
push
jbe
xchg
inc
add
mov
aad
outsl
repz
loope
pushf
adcl
push
gs
adc
pusha
fisubl
sub
xchg
popa
adc
lahf
andl
mov
ds
pop
pop
add
popf
or
pop
xchg
mov
ret
lret
rcrl
iret
pop
adc
and
pusha
pop
arpl
add
mov
daa
jp
pushf
movsb
mov
xor
jne
push
xlat
push
hlt
outsl
lret
dec
fstpl
fsub
sub
movsl
lods
nop
lcall
cmc
mov
push
xchg
daa
mov
mov
xorb
aam
stos
or
call
inc
cmp
mov
scas
or
xor
cmpsl
scas
int3
add
divb
shl
dec
ljmp
pop
sub
leave
das
aaa
jg
mov
js
mov
repz
ljmp
sub
jmp
movb
mov
dec
push
cmp
mov
push
loope
jae
or
pop
fabs
mov
stc
sub
adc
add
mov
add
jno
jne
push
xchg
xchg
cltd
cmpb
les
fsubp
pushl
loope
push
dec
pop
jle
xor
dec
push
dec
ret
inc
shl
fs
sahf
ret
mov
mov
loope
bound
test
mov
ja
mov
int3
in
cmp
fcoml
fs
jne
test
test
arpl
pop
jmp
addb
fcomps
jp
pusha
pop
sub
xor
mov
jg
jp
xchg
inc
scas
stos
mov
rcl
jb
loop
mov
jno
aas
xor
inc
xor
push
xchg
xchg
lahf
mov
adc
dec
sbb
jo
addr16
jle
icebp
test
mov
pop
clc
add
push
rcr
sbb
arpl
pop
sub
cmp
xor
imul
fabs
sub
push
and
push
dec
and
push
pop
popa
xchg
mov
popf
xchg
mov
es
xchg
push
loope
fucomip
pop
push
adc
push
mov
pop
mov
insb
rcll
not
add
hlt
aaa
call
aad
rcrb
in
push
mov
out
pop
lret
cmp
cltd
je
pop
out
adc
leave
rcr
loope
mov
cli
lods
inc
out
push
cmpsb
and
push
fnstsw
ja
sbb
sub
push
insb
or
and
mov
test
sarl
pop
xchg
lcall
pop
sub
inc
xor
inc
lods
cmp
jg
stc
inc
sub
pusha
adc
cmpsl
scas
mov
imul
das
imull
xor
decb
push
jp
bound
out
sbb
pop
call
adc
stos
div
bound
imul
cmp
mov
scas
loopne
fnstcw
cld
mov
leave
shl
ficoms
cmp
sbb
lds
jo
xchg
cld
jge
out
aad
lret
cmpsb
frstor
out
mov
push
push
es
and
sub
lret
mov
xor
std
pop
mov
add
or
lcall
dec
sbb
in
ljmp
push
xchg
sbb
scas
cli
fucomp
or
jge
jmp
jl
dec
js
fs
mov
lock
fidivl
sahf
sub
push
pop
fs
mov
push
sarl
leave
nop
adc
cmpsl
rcr
loop
repnz
xlat
or
sbb
sbb
cmp
sbb
jg
outsl
test
scas
mov
inc
sbb
aaa
ljmp
icebp
sub
outsl
js
xor
mov
insb
jecxz
xchg
lea
in
sub
add
inc
dec
jle
and
nop
mov
jbe
jmp
call
add
add
pop
mov
lret
imul
push
xchg
out
pop
fst
push
sahf
cmpsb
scas
in
stos
sub
mul
push
mov
dec
sub
dec
pop
sahf
xor
ror
arpl
fwait
mov
lret
ror
jmp
xor
push
sbb
inc
pop
iret
mov
les
jnp
sub
jns
dec
aam
and
inc
aas
fldl
sbb
adc
popf
movsb
xor
ror
gs
shll
lock
fldl
dec
mov
jl
xor
mov
jp
mov
in
jmp
pop
xchg
push
and
push
sarl
inc
enter
jnp
push
addr16
ss
out
incb
scas
xchg
testl
sbbb
xchg
jns
lcall
fcoms
and
inc
lret
pop
cmp
xor
xor
inc
movsb
pushf
jle
lahf
jo
xorl
and
nop
sbb
cltd
mov
add
sbb
lods
sahf
cltd
mov
push
sahf
dec
std
push
sbb
ret
sub
sbb
sbb
inc
jnp
mov
mov
push
shlb
and
std
cld
ja
adc
inc
dec
xor
pop
inc
je
test
repz
mov
in
hlt
fstl
cmp
sbb
pop
inc
dec
jnp
push
pop
lcall
or
adc
mov
xor
daa
push
fnstenv
test
mov
mov
mov
ja
mov
ret
mov
xor
cli
add
out
sbb
pushl
cmp
xor
pop
data16
out
outsl
xlat
out
push
cmp
jbe
sub
popa
jo
test
push
mov
clc
loopne
lock
cmp
xor
fbld
sub
inc
jae
sub
xchg
lret
scas
mov
add
adc
out
jl
inc
dec
push
push
jle
aaa
clc
aas
sbb
mov
xchg
inc
mov
ss
and
es
jg
mov
mov
mov
scas
fisttpl
xor
sbb
mov
mov
mov
in
hlt
sysret
std
add
in
add
sbb
and
sbb
daa
lret
sar
aad
loop
loop
vmovupd
sub
cmp
push
add
mov
loop
or
sbb
rcr
lret
repnz
dec
rcll
jno
jae
dec
cmp
inc
data16
mov
adc
testl
pop
addr16
daa
das
sbb
mov
outsl
push
pusha
xchg
mov
call
rcr
roll
xor
adc
xor
pushf
test
popa
fwait
in
loope
or
sbb
rcr
mov
or
divb
sub
jbe
mov
imulb
int3
into
push
and
sbbl
and
call
mov
addr16
idivl
bound
scas
loope
mov
stos
mov
loop
mov
dec
push
hlt
cld
adc
or
xchg
pushf
sub
enter
xchg
popf
subb
sbb
in
sbb
push
jp
and
mov
mov
pop
ljmp
loop
aad
pop
push
outsb
dec
and
aad
pop
dec
cmp
and
iret
pop
fistps
ficoms
add
xor
sub
mov
and
hlt
mov
cmp
jecxz
add
test
xchg
mov
call
imul
xor
and
cs
push
cltd
mov
xor
mov
aam
clc
cmp
jle
pop
push
mov
xchg
fwait
addr16
push
sbb
push
push
out
jb
ss
or
cli
pop
xchg
fwait
mov
outsb
pushf
fninit
jmp
gs
dec
rcrb
adc
lods
xchg
pop
lret
cmp
cld
fsubrs
inc
push
in
hlt
fstl
cmp
sub
or
mov
clc
outsl
cmpsl
lcall
rclb
gs
sbb
shrb
xor
test
insb
outsb
icebp
jmp
cmpsl
rolb
sub
cmpsl
das
clc
outsb
ja
dec
mov
ja
and
idivl
out
imull
data16
das
sahf
xor
jno
pop
enter
sub
stc
sub
les
ds
inc
cltd
and
and
pop
loope
mov
xor
arpl
jecxz
push
pop
and
arpl
ds
jbe
mov
out
divb
push
mov
mov
mov
xchg
lcall
lea
add
mov
lret
shr
movsl
insb
mov
in
inc
mov
xchg
arpl
mov
aam
imul
lods
mov
sbb
hlt
cld
adc
or
mov
xchg
popfw
adc
popf
movsl
lods
ret
xchg
cmp
sbb
xor
jmp
inc
in
sar
pop
or
mov
xor
pop
add
adc
xor
push
pop
stos
scas
mov
push
fsubp
call
cmp
mov
loopne
pop
adc
daa
das
dec
dec
leave
adc
inc
jbe
adc
clc
add
mov
enter
and
clc
add
adc
sub
or
test
rcr
addb
ror
ljmp
push
pop
jmp
subl
dec
orl
dec
into
jns
cmpsb
cwtl
int
jae
push
push
cltd
mov
dec
push
mov
lods
mov
ret
xchg
fwait
mov
xor
add
ss
pop
sbb
xor
and
cmpsb
dec
arpl
mov
je
cmp
cmp
xchg
jmp
pop
sbb
xchg
mov
iret
add
mov
in
cmc
fsub
sbb
nop
loop
adc
inc
xor
or
loope
out
jne
jmp
sub
mov
xor
ret
aas
jns
adc
shlb
divb
icebp
pusha
loopne
lcall
sub
xchg
adc
or
cwtl
mov
daa
jge
test
xor
pop
push
or
and
inc
jge
pop
repz
mov
fadd
hlt
imul
cwtl
test
mov
fadds
out
and
insl
jno
lock
mov
clc
mov
out
mulb
out
or
jle
pop
add
rolb
ret
orl
mov
subl
or
mov
and
jecxz
xor
mov
in
sbb
xchg
arpl
inc
sbb
sbb
push
or
mov
lcall
xchg
and
dec
push
pop
out
xorl
clc
pop
out
pop
loop
push
adc
push
jg
lds
fmuls
aas
xlat
imul
ficoms
imull
not
lds
pop
pop
sub
cmp
cmp
in
js
test
sub
mov
mov
add
add
and
lods
xor
lret
ss
push
dec
jne
enter
popf
mov
fdivrl
ret
into
jno
clc
lret
inc
mov
ficoms
loopne
jno
lds
sub
mov
int3
jns
push
in
jp
cs
mov
push
dec
mov
xor
lret
lahf
andb
ss
and
lret
adc
pop
cmp
mov
and
mov
aam
pop
sbb
mov
insb
push
mov
jmp
sub
std
insb
inc
cmp
lea
in
int
cmpsl
lea
std
add
pop
lods
test
das
cmp
and
xchg
lcall
lea
test
adc
xor
dec
push
push
jb
jg
sub
mov
mov
jg,pn
rorb
pop
and
das
aaa
adc
push
inc
cmp
sbb
repz
mov
push
pop
mov
call
fidivs
cmpsl
xor
imul
inc
sub
jo
jo
jl,pt
arpl
push
xlat
add
adc
pop
inc
mov
sub
int
jbe
xchg
xor
dec
into
xchg
dec
pop
pop
ja
stos
in
add
pop
xor
mov
lods
mov
je
add
xchg
arpl
daa
clc
xor
and
out
mov
sbb
int3
mov
inc
orl
add
frndint
gs
imul
lds
pop
mov
arpl
or
xor
sbb
data16
inc
ja
idivl
lret
mov
sub
pop
and
cli
fbld
aas
and
xor
xchg
mov
push
pop
data16
push
mov
mov
jmp
aam
mov
jmp
inc
mov
shrl
ret
and
lods
fisubrl
sti
and
imul
mov
pop
pusha
pop
cs
cs
add
int
push
push
add
inc
jecxz
mov
mov
or
cmp
cld
sub
div
pop
andl
jnp
jb
or
mov
std
lods
repz
sti
aam
push
cwtl
and
sbb
das
xchg
sbb
push
xchg
inc
outsb
mov
pop
xchg
enter
int
cld
add
cmc
cld
add
adc
lea
xor
mov
call
lods
mov
hlt
lea
pusha
and
jns
rcrb
xlat
inc
lret
mov
sbb
inc
pop
inc
mov
xorps
pop
sub
std
and
insl
dec
push
dec
xlat
jmp
out
push
push
call
rcr
adc
stc
nop
fwait
xchg
jo
pop
addr16
fs
mov
movq
sbb
and
sbb
test
dec
push
cmp
xor
jl
pusha
xchg
cld
jl
adc
or
lea
sub
and
fs
movsl
sbb
dec
inc
int
inc
rorb
cli
into
mov
sub
es
xchg
jb,pt
pop
or
mov
cmp
jno
or
inc
or
arpl
je
testl
or
lods
push
add
in
sub
aam
arpl
push
fcomi
pop
jp
pusha
sbb
xchg
lcall
xor
lahf
outsb
addr16
push
daa
in
jb
and
or
and
jnp
jmp
lods
scas
stos
sub
repnz
add
pop
jbe
pop
mov
mov
shr
push
pop
mov
loope
jge
das
or
bound
dec
daa
das
aaa
push
xor
sti
mov
mov
clc
or
mov
inc
cmp
push
or
testl
mov
jns
jb
icebp
xchg
xchg
push
or
xor
out
adc
add
mov
loop
push
dec
cmp
mov
int
mov
sahf
xchg
adc
fmulp
add
xchg
inc
dec
shrb
pop
jo
push
pop
xchg
dec
xor
jecxz
jge
adc
in
fninit
jmp
scas
and
adc
rep
and
inc
dec
pushf
movsb
lods
pop
pop
xchg
pop
xor
in
mulb
aaa
cld
add
aaa
es
dec
cmp
dec
add
adc
lods
mov
sbb
xchg
sbb
dec
push
jo
aas
pop
cmp
pop
add
icebp
jns
ret
xor
fistl
aad
sub
mov
mov
mov
stc
pop
loopne
rcr
mov
out
notl
pusha
or
and
arpl
xor
xchg
mov
add
mov
sbb
add
pop
imul
test
or
mov
aam
lds
mov
mov
jne
fidivs
cmp
arpl
repz
scas
aad
mov
jg
mov
enter
inc
aam
pushl
mov
testl
jp
pop
mov
lret
cltd
mov
enter
test
mov
cld
mov
fdivrl
add
out
hlt
cld
add
testl
rcrl
lea
les
xor
mov
int
push
sarb
add
test
divl
movsb
xchg
aaa
push
stos
mov
lahf
pop
pop
loop
mov
add
shll
std
push
push
or
aas
incb
xchg
mulb
jle
xor
iret
adcl
out
notl
xchg
mov
pop
push
loop
jo,pn
sbb
mov
shrb
sub
setle
add
frstor
xchg
aam
mov
push
pop
pushf
maxps
icebp
mov
and
sbb
adc
pop
popa
sub
cs
into
xchg
adc
xchg
sahf
jmp
loop
and
cs
sub
es
fidivl
fldl
inc
rep
sub
inc
dec
xchg
pushf
movsb
lods
scas
lods
test
test
outsl
cmc
fsub
in
xor
cwtl
sbb
mov
in
enter
pop
or
push
dec
dec
push
pop
gs
xchg
mov
pop
gs
push
mov
icebp
mov
adc
pop
pop
mov
xor
dec
testb
aas
xchg
lahf
mov
js
pop
shufps
ficomps
enter
pop
daa
das
mov
outsl
js
sub
loopne
mov
xor
cltd
sub
add
imul
xor
and
and
test
pop
adc
add
loopne
add
push
jecxz
addr16
cmp
test
jge
jno
jle
ret
xchg
sahf
cmpsb
scas
in
fmul
jno
es
std
cmp
xchg
mov
dec
inc
rcr
push
mov
or
push
adc
idiv
and
sbb
jg
gs
push
jg
adc
xor
sbb
aas
movsl
in
add
xchg
mov
adc
movsl
lods
xchg
sahf
iret
insb
sbb
lock
cmp
outsl
ret
gs
stc
jns
out
rolb
ja
sub
int3
dec
ret
jno
sub
dec
add
xchg
pop
mov
gs
xchg
cmp
fucomip
jns
inc
or
pop
pop
sub
ss
jae
aaa
aas
inc
fwait
sbb
mov
xchg
cmp
stc
rol
rcr
or
inc
mov
ss
rolb
pop
pushf
jecxz
fists
sub
mov
mov
sbb
jns
mov
outsl
rorb
mov
xchg
adcl
int
lods
in
fs
push
out
push
jnp
adcl
loop
iret
mov
rorb
in
out
mov
cmp
mov
or
test
arpl
bswap
aam
movl
and
and
inc
or
pop
jnp
sbb
dec
push
xorb
sub
sbb
out
mov
push
cmp
ret
rclb
in
js
into
dec
or
loop
decl
lret
push
sub
mov
dec
mov
pop
mov
imul
push
cltd
into
push
jp
mov
pushf
aas
repz
xchg
sbb
jno
jmp
sub
cmp
dec
push
pop
and
in
dec
push
pop
jno
ss
loope
movsb
add
mov
xor
add
xor
insl
in
sahf
cmpsb
lds
mov
xchg
or
push
push
out
xor
push
push
sub
out
jnp
aam
pop
bound
xchg
rcll
leave
adc
daa
inc
cmp
outsb
in
inc
dec
fs
xchg
xchg
sbb
in
imull
aam
repnz
cld
add
mov
dec
xchg
adc
popf
outsb
mov
mov
call
add
fnstsw
xor
insb
push
or
data16
cs
mov
lret
pop
fbstp
cmpsb
pop
and
cmpsb
sub
das
xchg
mov
roll
mov
lret
dec
das
aaa
aas
pop
or
and
jle
adc
rorb
or
mov
mov
push
outsb
imul
cld
jbe
push
and
loope
cld
jnp
pop
push
mulb
sub
stc
lods
adc
and
inc
pop
roll
fs
ja
fdivrp
std
jmp
into
sub
pop
pop
insl
insl
push
cs
mov
jnp
xchg
iret
out
push
int3
mov
mov
sti
add
and
in
call
gs
cmc
lods
mov
dec
jg
out
out
cld
add
jp
add
mov
nop
lret
aas
mov
mov
aad
dec
and
and
scas
mov
mov
mov
mov
mov
xor
add
js
pminsw
cli
pop
push
inc
and
sbb
xchg
lahf
data16
mov
int
idiv
push
push
pusha
adc
pop
bound
pop
das
aaa
fwait
xchg
or
test
shrb
push
sbb
aaa
mov
dec
and
addb
pushf
pushf
testb
mov
add
std
rcr
mov
or
es
bnd
pop
repz
ss
mov
fwait
aam
cmp
push
sub
push
mov
stos
xchg
jae
popa
imul
lret
cmp
inc
push
popf
inc
sbb
cmp
in
mov
cmovbe
out
in
pusha
repnz
add
inc
orb
hlt
dec
inc
daa
push
pop
fs
cmp
xchg
xchg
sbb
stos
xchg
popf
movsl
xchg
mov
enter
and
fmuls
insl
jb
lock
insl
int3
mov
scas
fistpll
add
jbe
loop
repnz
mov
lock
add
nop
into
aas
xchg
lahf
div
loopne
iret
xchg
out
idiv
gs
dec
push
daa
das
aaa
mov
push
pop
xchg
and
jnp
mov
loop
enter
jb
cmp
arpl
dec
sub
cmp
jbe
pop
pusha
dec
subl
shr
ret
call
aas
jmp
scas
cmp
adc
and
mov
cs
pop
popa
mov
mov
inc
dec
leave
sti
adc
mov
push
sub
stos
push
jnp
ljmp
dec
cld
push
pop
dec
mov
pop
movsl
xchg
lock
mov
test
aam
lcall
mov
xchg
addr16
fs
xchg
popf
push
jne
add
aad
xor
sbb
add
test
jbe
push
cmp
sbb
ds
aam
mov
sub
adc
lret
jno
xlat
push
inc
daa
pusha
mov
cmpsl
scas
mov
imul
addr16
mov
es
sub
incl
mov
aaa
push
add
sbb
dec
jle
test
fmull
sahf
stos
sub
sbb
cmp
add
test
test
in
push
repz
add
loope
icebp
dec
inc
dec
push
pop
popa
cmp
xchg
lods
sub
mov
fisubs
into
cmp
push
and
push
stos
fwait
mov
mov
sti
add
sbb
repz
lret
pop
imul
xchg
or
arpl
mov
and
lods
mov
rcr
dec
sbb
cmp
inc
and
test
outsb
cwtl
cwtl
cli
xchg
insb
jne
enter
movsl
mov
add
aad
repnz
mov
les
xchg
add
pop
cwtl
loope
loop
cmc
andb
addr16
repnz
leave
sub
jno
outsb
bound
inc
sub
das
mov
insl
popl
out
out
notl
push
pusha
or
test
dec
push
shr
cmpl
adc
sub
out
ror
jge
dec
cmp
lds
sub
xchg
jo
add
xor
cltd
mov
leave
shll
inc
sbb
lea
jnp,pt
inc
inc
mov
or
aaa
cmpsl
dec
lods
js
bound
xchg
mov
sub
dec
or
jecxz
ljmp
fidivrl
mov
add
push
push
xchg
sbb
movsb
jp
add
gs
push
add
pop
in
cld
add
aaa
mov
push
cmp
dec
adc
sub
fstl
adc
lock
insl
jb
inc
clc
enter
mov
fcomi
rcr
loop
jns
loopne
xchg
sbb
adc
sub
outsb
sub
cmpsb
cmp
xor
iret
xlat
insl
pop
imul
aas
inc
and
push
popa
shl
test
push
dec
xor
mov
mov
dec
lods
xor
add
add
mov
mov
jmp
cmp
adc
and
fmull
in
jecxz
and
into
cmc
jne
mov
pop
sub
notb
inc
rcl
bound
inc
xchg
mov
imul
imul
add
push
movsl
dec
xor
test
pushf
pop
out
xchg
jb
push
lods
push
mov
or
fsub
outsb
fisubl
dec
in
adc
sub
jne
das
sti
sbb
mov
push
ror
mov
loopne
xlat
sarl
in
xor
pop
and
loopne
push
insl
jb
xchg
outsb
icebp
push
inc
adc
cmp
out
jno
daa
xor
inc
daa
push
jle
jns
and
shlb
cmpsl
xchg
fidivs
pop
mov
adcb
movhps
cmp
fsts
push
call
iret
mov
ret
xor
sti
mov
push
stos
mov
loope
decb
inc
dec
push
pop
inc
push
push
fabs
call
testb
mov
jne
xor
inc
es
test
xchg
arpl
cmpsb
lea
out
fnstsw
cwtl
into
push
ret
push
push
es
orl
daa
int
clc
push
jecxz
or
jl
fninit
inc
cmp
inc
dec
push
sbb
subl
jp
and
pushf
imul
insb
mov
cli
cmpsb
mov
jmp
les
xor
insl
dec
push
pop
jb
cs
je
test
movsb
and
in
cmc
push
inc
ljmp
push
aaa
adc
mov
mov
loope
xlat
mov
mov
mov
sbb
xor
push
or
out
jo
or
movhps
shr
push
dec
sbb
mov
adc
lret
mov
fnstcw
or
xor
jmp
push
xchg
cltd
mov
xchg
or
test
fabs
jmp
dec
jne
xor
inc
pop
adc
and
into
loope
push
adc
fmulp
add
xchg
gs
addr16
lcall
lea
cld
jp
fldt
xor
add
add
insb
icebp
mov
cmpsl
insb
je
test
xchg
add
pop
lahf
jne
dec
dec
inc
or
adc
popf
mov
add
lock
int
dec
ret
insb
inc
dec
push
addl
cltd
lret
xor
adc
cmpsb
arpl
sub
sbb
sub
scas
cmpsb
outsl
xchg
ja
jb
mov
xor
ucomiss
lock
push
lock
xor
aas
sub
iret
test
ror
xchg
stos
cwtl
mov
or
cmp
into
xchg
imul
cmp
or
pusha
push
pop
fabs
jmp
adc
inc
pop
push
or
stc
jbe
sbb
inc
test
lret
and
xchg
sarl
inc
cmp
push
push
pop
loop
orb
push
popa
xchg
cmp
push
jecxz
ljmp
fidivrl
mov
cli
imul
adc
movsb
jp
std
int3
jg
gs
push
add
lret
std
xchg
mov
dec
and
mov
aas
mov
xchg
dec
mov
in
imul
sbb
pop
push
or
gs
sbb
iret
or
lcall
fsts
add
mov
out
outsl
mov
inc
sbb
cwtl
pop
and
cmp
mov
cwtl
daa
call
inc
pop
shufps
ficoms
mov
push
pop
adc
add
jmp
push
mov
icebp
xor
jmp
push
jne
pop
pusha
sbb
lahf
xchg
xchg
out
push
pop
loope
repz
les
faddl
add
push
pop
or
xor
xchg
fldenv
test
jmp
jg
mov
sbb
jle
pop
adc
xchg
add
mov
es
add
cmp
rorb
xor
icebp
clc
test
shll
out
mov
fucom
xchg
mov
dec
push
pop
addr16
subb
in
mov
lret
mov
sub
adc
cmp
fadd
mov
lds
cmpsb
xor
xlat
lahf
pushf
mov
dec
push
or
and
dec
clc
add
shll
enter
pop
mull
aam
xor
cmpsl
js
ss
sbb
js
cs
mov
leave
xchg
popf
and
cmpl
add
test
test
adc
rcr
repnz
popa
mov
out
jbe
pusha
push
pop
popa
push
xorl
out
divb
pop
out
movsb
lods
sub
push
push
aaa
mov
or
fwait
je
xor
ret
xchg
push
fwait
mov
xchg
cmp
push
fstl
push
movsb
cmp
bnd
arpl
lret
dec
pop
in
jb
orl
jecxz
mov
nop
scas
test
cwtl
in
test
aaa
mov
adc
cwtd
sahf
sub
push
sub
xor
sbb
stos
addb
addr16
lret
ljmp
fsubrp
outsb
inc
nop
push
adc
jg
mov
leave
jp
into
cs
es
rol
das
aaa
aas
pop
cmpsb
push
xchg
cltd
push
pop
loopne
xor
jmp
push
jne
pop
pusha
sbb
je
pop
push
adc
loope
cmpsb
outsb
jp
mov
mov
or
add
out
cmc
cli
jle
insl
aad
cmpsb
lds
call
imulb
es
jp
dec
or
mov
test
inc
inc
shrl
mov
xchg
lret
fcmovnb
inc
dec
imulb
out
jl
loope
pushf
movsb
push
mov
outsb
push
push
inc
nop
cltd
and
pop
outsl
inc
dec
lcall
pop
push
lods
inc
repnz
insb
jne
jmp
in
ret
xchg
std
in
sbb
fisubrs
push
mov
daa
pusha
mov
mov
cmp
add
enter
adc
inc
xor
scas
mov
iret
xlat
mov
jo
out
iret
addl
jmp
adc
jl
mov
mov
popa
imul
and
cmp
in
push
push
sbb
ror
in
pushf
pop
call
mov
fwait
imul
stos
inc
cmp
mov
data16
int3
jle
push
push
aad
mov
pop
push
in
push
dec
les
fwait
jne
in
mov
xchg
add
cli
mov
adc
inc
sbb
and
cmp
mov
pusha
in
ret
or
daa
stos
fisttps
xlat
pop
adc
add
xchg
data16
mov
outsl
rclb
sti
repnz
add
cmpsl
scas
cmp
sbb
xor
fs
iret
dec
pop
loop
mov
add
shll
iret
push
push
or
xchg
fsubs
jle
call
mov
adc
orl
lcall
mov
sub
clc
add
mov
int3
lods
adc
imul
sub
or
sbb
inc
leave
jno
in
pop
in
mov
dec
sub
fcomps
push
and
xor
push
add
jle
out
mov
scas
mov
xchg
inc
ljmp
stos
push
sbb
mov
ror
ja
fninit
mov
dec
test
xor
repnz
aad
jbe
std
clc
test
mov
in
idivl
push
sbb
jecxz
test
fldenv
lods
test
lret
ret
aad
mov
fists
push
sub
add
lock
xor
ret
mov
std
rcr
xchg
icebp
outsl
test
and
fldl
push
enter
or
sbb
mov
xorb
xchg
daa
fidivrs
shl
pusha
xchg
out
js
pop
xchg
and
jle
out
enter
imul
es
es
jo
xor
cmp
leave
js
ret
sub
sar
inc
sbb
fdivrl
hlt
pop
pop
dec
fisubrs
and
rcrl
sahf
jl
out
movb
leave
mov
push
leave
sti
cld
jbe
inc
and
nop
push
sub
lods
mov
push
addr16
cmp
sbb
xor
fsubl
push
dec
xor
stc
loope
les
pop
std
cmpsb
jns
adc
cmc
shlb
sbb
fs
pop
addb
stos
mov
imul
cli
cs
loopne
dec
dec
pop
gs
das
fadds
xchg
addr16
mov
jo
dec
mov
out
shll
or
cmp
repz
sbb
xor
scas
gs
inc
adc
mov
mov
inc
mov
shll
aad
mov
lret
dec
xor
or
add
xor
data16
pop
adc
xchg
mov
xchg
or
mov
and
add
sarb
mov
jle
insl
int
cmpsb
lds
call
imulb
es
jb
dec
or
mov
fwait
mov
inc
shrl
mov
xchg
lret
lds
stos
lock
loope
pushf
movsb
push
mov
outsb
scas
add
dec
push
aad
int3
loope
cmc
adc
sub
xchg
jae
push
inc
jb
hlt
cmp
xchg
fmuls
in
mov
adc
in
adc
mov
xchg
jp
mov
test
std
mov
add
xchg
and
test
pusha
push
jns
pop
lret
aas
push
mov
mov
xor
loope
inc
daa
das
or
bound
pop
daa
das
aaa
push
xor
xchg
outsl
js
mov
mov
lods
sub
cmp
push
push
push
imul
rcrb
orl
push
pop
mov
dec
push
or
jmp
nop
mov
add
add
lods
cmpsb
sbb
divb
xor
ds
stc
sub
and
fwait
mov
loope
sahf
push
jmp
sahf
aam
dec
cwtl
and
lahf
insb
inc
dec
add
sbb
pushf
inc
jge
xor
mov
cmpsl
pop
mov
cmp
repz
dec
pushf
mov
xor
rcr
dec
in
pushf
lret
mov
inc
clc
pop
xlat
adc
inc
outsb
outsl
sub
ret
pop
loop
mov
pop
pop
fwait
xor
in
pop
clc
aam
inc
pop
mov
popa
aad
pop
inc
xlat
fists
psubsw
dec
roll
jp
lcall
and
add
loopne
sti
jbe
and
xor
mov
frstor
xchg
cmpsb
orl
rcr
mov
jecxz
dec
sub
in
dec
lret
add
push
fidivl
xor
pop
sub
xchg
cmc
je
sbb
sub
es
mov
sub
push
push
fldcw
mov
lcall
mov
ret
fimull
in
push
pop
and
dec
mov
adc
ja
pop
std
addr16
faddl
dec
add
sub
adc
mov
pop
rolb
fists
dec
sub
add
fdivrs
dec
jns
outsb
scas
sub
ret
add
cmpb
cmp
xor
pop
in
ja
and
cmp
fcomps
dec
out
mov
daa
loopne
popf
lods
das
or
jae
es
mov
fs
adc
sub
mov
cltd
push
imul
loopne
leave
test
bound
sbb
adc
push
push
mov
xchg
jbe
cmp
sbb
dec
and
into
xchg
int
ret
ret
js
push
in
dec
cs
push
aam
jns
mov
orl
xor
lret
movsl
fs
rep
or
nop
cmp
cmp
jmp
shll
in
dec
hlt
cld
out
xor
mov
jno
pop
fs
js
das
mov
mov
test
mov
cld
cs
call
gs
xor
adc
stos
addb
addr16
jns
sbb
ljmp
pop
cmp
movsb
jg
inc
sahf
and
shlb
bswap
js
xchg
pop
icebp
pushf
pop
aaa
aas
negb
push
cmpb
mov
icebp
sti
dec
shlb
mov
mov
cmp
jl
inc
dec
adc
cmp
repnz
test
test
out
push
stc
add
cld
cmp
mov
test
and
add
mov
jle
out
stos
ds
outsb
not
sarb
cmc
pusha
pop
lock
push
ss
stos
arpl
sbb
mov
dec
repnz
xchg
bnd
sbb
jl
sub
and
xchg
shl
imul
mov
int
xor
in
xlat
sbb
cmp
cltd
and
pop
pop
inc
dec
lcall
pop
mov
fs
aad
in
ds
mov
cmp
dec
mov
sti
push
xchg
addr16
mov
jo
dec
mov
out
sub
rolb
inc
testl
xchg
sub
mov
mov
xchg
jl
flds
ds
pusha
jge
outsl
js
jae
push
mov
fsub
fwait
sti
jbe
and
jge
xor
sub
inc
fsubr
jo
xchg
mov
cltd
push
mov
imul
pop
xor
and
sti
xchg
mov
dec
push
or
jmp
nop
mov
ljmp
movsb
dec
push
fidivrs
and
mov
dec
pop
push
push
xchg
dec
push
add
fwait
jne
fdivrl
xchg
add
aaa
pop
or
fisttpl
dec
add
mov
push
sub
xor
push
adc
int3
xchg
mov
orl
out
lret
insl
fmul
jge
dec
js
jb
sub
lds
mov
and
xorb
jmp
out
jp
bound
aaa
jo
xlat
push
cmp
repnz
xchg
stos
xor
in
outsl
push
push
adc
sub
cmpsl
outsb
sahf
fistps
sarl
shufps
ficoms
bound
cwtl
push
stc
or
jbe
loope
enter
fwait
or
insb
push
adc
stc
xchg
mov
dec
push
addl
jge
mov
mov
mov
adc
dec
and
mov
mov
jbe
fstp
jmp
cmpsb
scas
or
and
notb
inc
leave
inc
jp
mov
aam
aas
lret
movsb
push
call
subl
mov
push
xor
inc
xor
jl
int
fsub
ret
or
das
daa
popf
sub
add
sub
dec
and
mov
cmpsb
or
adc
inc
pop
inc
adc
sbb
insl
push
push
popl
push
loop
xchg
mov
and
adc
out
iret
jae
jg
sbb
mov
pop
jmp
mov
daa
das
or
pop
jbe
pop
in
outsl
dec
push
inc
mov
mov
xor
loopne
xchg
outsb
add
mov
andl
divb
lahf
pushf
daa
pop
test
mov
lods
outsl
xchg
les
das
sub
loopne
jbe
sub
sbb
mov
mov
in
aas
es
dec
int3
add
jnp
xor
sbb
mov
dec
call
jne
ljmp
cmp
aad
pop
js
aad
or
xlat
iret
inc
shlb
adc
repnz
inc
jmp
pop
aad
xor
push
mov
mov
mov
lods
mov
out
mov
in
adc
jp
je
xchg
mov
rcl
sub
add
adcl
loop
xor
ret
dec
out
daa
jmp
or
ss
iret
test
scas
push
xchg
cmp
inc
repnz
cmp
jns
mov
or
pop
lods
lret
rcll
les
fstps
adc
cmp
out
add
test
test
in
mov
fiadds
xor
adc
repz
xor
push
and
mov
nop
cmc
ficomps
xchg
shl
stos
mov
sbb
jp
push
addb
mov
mov
jbe
lret
aam
imul
pop
das
sub
jl
pop
insl
adc
lods
mov
test
mov
cmp
sbb
and
jne
mov
aas
mov
int
mov
outsl
or
pmulhw
inc
shlb
ljmp
jle
pop
outsl
jnp
mov
xchg
rorl
mov
xor
sub
cmp
pusha
insl
jmp
adcl
adc
mov
into
daa
jne
xor
aas
hlt
and
andl
mov
subl
test
repz
ror
sbb
sub
jp
pop
pusha
test
dec
push
imul
fwait
ljmp
or
adc
pop
popa
push
stos
xchg
popa
imul
in
in
mov
stos
jecxz
out
stos
cs
push
jge
out
xchg
jp
and
cli
repnz
xchg
add
lcall
inc
in
jl
pop
lock
lret
cmp
movsb
sahf
pushf
or
hlt
jns
lods
in
pushf
test
push
pop
and
xchg
dec
insl
add
popf
outsb
mov
mov
nop
add
push
or
push
mov
cwtl
pop
cld
subb
and
into
pop
test
push
and
inc
aas
test
jbe
xchg
adc
push
jg
mov
imull
rolb
test
int3
dec
sub
mov
cs
adc
dec
push
jae
mov
cwtl
lret
clc
mov
fsub
leave
dec
inc
mov
adc
xor
sbb
cmp
movsl
in
jmp
roll
add
sub
xor
adcl
ret
inc
push
mov
hlt
idiv
fisttpl
lahf
es
inc
inc
dec
add
push
loopne
sbbl
stos
gs
mov
enter
mov
inc
sbb
and
cmp
arpl
xlat
xorl
inc
xor
fistpll
ret
push
mov
pop
fs
pop
mov
ds
mov
inc
std
sub
push
xor
inc
adc
mov
in
ficoml
filds
cmpsl
jbe
cmp
and
sbb
mov
xor
xchg
lahf
cmpsl
scas
fidivrs
stos
loope
jge
out
fcomps
rclb
inc
fsubrs
nop
cmp
sarl
xor
clc
add
pushf
and
or
sbb
ds
dec
push
cwtl
es
mov
inc
push
insl
icebp
int
or
sbb
bound
pop
popa
imul
xchg
je
mov
jge
pop
xchg
add
add
push
push
sub
std
ret
xchg
add
imul
movsb
orl
pushf
rorb
sub
sbb
sub
arpl
jge
arpl
lahf
fdivl
int3
add
lods
loope
repnz
addr16
aad
xor
push
in
cmp
movsl
dec
jg
ror
aad
xor
add
adc
std
test
sub
sti
pop
lods
aaa
fcmove
inc
mov
scas
out
jnp
loop
out
pushf
mov
sbb
std
daa
call
and
jno
cmp
dec
mov
adc
idiv
pop
outsl
pop
dec
orb
dec
push
inc
ret
mov
test
mov
sub
mov
jmp
xchg
popa
icebp
adc
int
mov
or
int3
aam
in
sub
lock
insl
cmp
jge
imul
lds
into
sbb
pop
lret
push
es
pop
bound
inc
in
fwait
mov
push
sbbl
in
xchg
arpl
push
fdivl
mov
lcall
push
sbb
lea
out
or
mov
sti
repnz
aaa
add
cli
pop
stos
mov
insl
jb
mov
inc
mov
fcomi
mov
stos
mov
jne
and
decb
adc
dec
xchg
xchg
or
mov
into
push
xchg
lock
cmp
pop
iret
aas
clc
aaa
lods
les
sarb
mov
ds
mov
mov
arpl
inc
xor
sub
inc
mov
test
mov
xchg
sbb
mov
loope
cld
jnp
pop
push
dec
popa
sub
stc
sub
push
cmp
ljmp
push
mov
insb
fcom
cld
push
fsubp
scas
in
fucomi
mov
inc
dec
or
mov
lcall
mov
ret
fimull
dec
jle
pop
and
dec
inc
notl
pushf
jb
int
les
pop
std
iret
ss
faddl
dec
add
sub
adc
mov
repz
rolb
fists
cmp
add
lods
jp
dec
jns
outsb
aas
and
ret
out
loop
mov
pop
sbb
cmp
xor
lock
repz
and
cmp
fsubs
out
loopne
xchg
lods
das
or
jae
es
mov
fs
adc
sub
mov
sub
push
out
add
mov
leave
test
bound
sbb
adc
push
mov
inc
xorl
sarb
int
ret
dec
jb
push
in
cmp
ss
push
aam
jns
es
mov
ret
jl
sub
lret
movsl
fs
jmp
stos
or
imul
or
jl
movsl
test
stos
movsb
lods
pop
mov
jo
hlt
cld
out
xor
push
cwtl
mov
adc
pop
fs
js
das
mov
mov
test
mov
cld
sbb
sbb
pop
push
testb
cmpsl
or
stos
addb
addr16
test
ljmp
pop
cmp
mov
inc
sahf
and
rcl
iret
xlat
lahf
into
bswap
add
pop
icebp
pushf
inc
aaa
aas
negb
push
cmpb
mov
test
and
lock
mov
mov
cmp
hlt
push
cmpl
bound
int3
inc
test
out
and
add
cld
cmp
push
movsl
mov
popa
imul
jle
out
stos
mov
rcrb
push
fnstsw
insb
xchg
push
ss
stos
arpl
daa
mov
dec
fcom
fistl
adc
aas
and
repz
or
loopne
inc
fstl
sub
clc
fsub
lods
xlat
sbb
mov
cltd
and
pop
dec
inc
dec
lcall
pop
mov
fs
aad
cmp
scas
out
std
add
inc
cmp
imul
add
push
xchg
addr16
mov
jo
dec
mov
out
xchg
add
rolb
inc
mull
pushl
sub
adc
mov
fcmovu
inc
shlb
push
sahf
das
inc
cmp
std
pop
movhps
inc
loopne
or
imul
rcll
cli
icebp
and
or
add
pop
aas
lds
xorl
inc
scas
cmpsb
mov
mov
jp
fisttpl
inc
ret
cld
bound
mov
inc
jne
push
inc
xor
ficomps
sbb
inc
es
out
dec
push
lcall
push
mul
jmp
loop
fsubl
mov
dec
push
or
and
movsb
imul
in
das
pop
add
mov
inc
mov
pop
and
xchg
dec
mov
adc
lds
push
nop
add
mov
or
gs
push
daa
inc
jns
jp
xchg
cmovs
xchg
roll
add
or
iret
xor
xor
dec
enter
rorl
outsl
scas
push
cmp
out
incb
inc
das
aaa
ljmp
outsl
sub
hlt
js
in
cwtl
mov
loop
lock
call
loope
mov
push
pop
adc
xchg
mov
mov
xchg
stos
inc
gs
adc
sub
in
inc
pop
imul
pop
xchg
dec
push
add
sahf
jl
lret
mov
popf
or
loopne
push
push
ficoms
iret
pop
xor
test
cmp
mov
fwait
lret
movsl
jne
adc
fwait
cmp
cmp
push
aad
jbe
roll
or
pop
out
sbb
add
in
push
or
xor
cwtl
sbb
mov
popf
enter
outsb
xchg
cmp
jl
xchg
mov
ja
daa
ds
out
ljmp
daa
cmp
cmp
fsub
sti
jg
sub
inc
jbe
loopne
repz
idivl
cltd
mov
adc
stc
mov
mov
stos
call
lock
cmp
adc
shll
scas
jmp
push
adc
push
into
push
and
leave
rorl
lcall
push
add
popa
cmp
jle
inc
movsl
and
and
into
sahf
aad
lret
and
hlt
fdivrs
ss
pop
fcoml
mov
aam
inc
shrl
mov
xchg
lret
adc
inc
dec
adc
cmp
in
add
data16
dec
jg
out
repnz
add
pop
push
sbb
hlt
jecxz
sbb
pop
lds
test
lods
jne
aad
push
sbb
out
dec
xor
jo
inc
push
cmp
mov
insb
dec
fisubrl
lret
pop
clc
lods
add
out
jno
lahf
push
push
mov
daa
out
das
fldt
sbb
daa
out
popa
clc
pop
rclb
jae
outsl
aas
inc
xor
jns
cmp
popf
fsubrl
out
enter
cmpsl
xor
sub
jl
jge
push
popf
mov
leave
loopne
hlt
hlt
dec
cmc
ror
inc
jmp
mov
or
pop
sub
xchg
lea
int
mov
std
cs
into
mov
incb
repz
xor
sub
jnp
xor
mov
testb
push
lods
arpl
xchg
aas
adc
xor
mov
lods
repz
imul
int3
mov
xor
push
outsl
addr16
xor
mov
stos
mov
aad
mov
cmp
dec
sub
push
rcrb
clc
iret
ljmp
sub
cmp
sub
adc
das
loopne
jg
xchg
pop
fwait
data16
push
xchg
fnop
xlat
fucomip
jns
rorl
pop
pop
out
push
adc
fcompl
into
test
pop
lret
rcr
mov
jbe
sbb
pop
cmp
adc
test
mov
daa
test
test
ficoms
xchg
stos
xor
xor
adc
repz
xchg
sbb
mov
sahf
cmpsb
movsl
add
sti
hlt
cmpsb
mov
pop
cs
mov
cmp
push
pop
add
scas
xor
pushf
daa
sti
add
cmp
sub
fs
dec
push
pop
xchg
adcb
mov
pop
or
fmull
xor
inc
in
and
push
mov
mov
jbe
pop
cli
std
add
sbb
push
pop
gs
loope
test
mov
jnp
add
call
lcall
pop
data16
jo
push
outsl
out
cmp
out
cli
mov
lahf
cs
mov
cmp
pop
pop
adc
bound
xchg
lock
xchg
and
pop
loopne
mov
fmuls
cmp
je
cmp
inc
sub
mov
inc
pop
loope
ret
cmp
jle
inc
jbe
adc
add
push
inc
mov
sbb
mov
add
or
xor
sub
cmp
out
mov
stos
mov
dec
jecxz
xchg
aad
sub
jecxz
repz
sub
cmp
lods
insl
add
je
ret
push
cld
out
out
call
push
jne
hlt
dec
inc
sbb
jge
push
mov
cmp
enter
jne
mov
sbb
loop
in
rolb
jne
push
pop
cmp
xchg
shrb
lret
adc
mov
mov
and
or
cmp
pusha
dec
jp
outsb
mov
sub
xlat
pop
call
es
pop
sbb
imul
call
outsl
xchg
mov
test
dec
addl
and
lock
decl
mov
sbb
or
lock
mov
je
dec
mov
sub
ss
rcr
mov
dec
and
imul
mov
fisubrs
inc
mov
mov
ss
sub
std
gs
pop
cs
mov
pop
ror
add
fwait
mov
adc
sbb
adc
test
sbb
adc
arpl
aam
out
out
xor
lcall
adc
dec
sub
cmp
mov
test
cli
mov
cmc
lock
and
cmc
std
out
pop
inc
fs
jb
or
jmp
jmp
ret
or
xor
ja
jmp
popa
mov
lahf
or
cmpsl
outsb
sahf
out
xchg
mov
movsb
daa
inc
ds
movhps
addr16
subb
stc
lahf
test
push
fcmovnbe
inc
aam
test
or
sub
mov
push
sub
xchg
or
mov
fldenv
cmpsb
xor
roll
sub
inc
and
inc
or
adc
lds
lret
adc
clc
into
cmp
pop
mov
xchg
jnp
decl
mov
aas
lret
je
sub
outsl
sti
iret
iret
or
mov
stos
imul
mov
movsb
mov
rcr
in
add
daa
daa
push
sub
add
xlat
push
outsl
outsl
xchg
outsb
inc
dec
test
lcall
jg
in
cmc
mov
sub
pusha
pusha
push
gs
lcall
rcl
mov
or
jmp
cmp
inc
cmp
adc
dec
xor
inc
sahf
xchg
xchg
xchg
data16
push
xchg
hlt
enter
pop
stc
iret
cs
idiv
pop
mov
aaa
jmp
xchg
dec
lret
ret
xor
nop
cwtl
mov
enter
lods
xor
push
cld
aas
pop
pusha
pop
mov
ret
push
mov
mov
jle
or
or
loope
mov
dec
dec
sub
sbb
pop
and
push
cmpsb
push
pop
jle
pop
out
adc
cmc
mov
rcr
insl
jl
add
jecxz
orl
and
sti
add
gs
dec
rcrb
cmp
filds
mov
scas
lods
mov
test
aam
imul
fs
int3
in
mov
inc
pop
fs
out
aas
jg
test
or
rcl
push
cmp
imulb
dec
jb
sbb
xchg
xchg
mov
gs
leave
shll
rclb
adc
or
dec
inc
dec
push
sbb
jle
jns
push
push
jo
mov
mov
out
out
icebp
mov
daa
das
dec
sub
loop
xchg
xchg
cwtl
mov
cltd
shrb
fucom
call
push
fsub
add
jl
inc
sbb
cmp
jg
pusha
push
xchg
jbe
mov
stc
add
jge
sbb
icebp
dec
sub
insb
fs
popa
xor
xchg
cmc
test
mov
add
into
mov
idiv
sbb
mov
ret
mov
xchg
test
mov
adc
lods
mov
pop
inc
adc
ja
push
sbb
popl
pop
xchg
jno
pop
in
xchg
mov
and
inc
push
cmp
daa
lock
jge
sti
sbb
mov
mov
inc
sbb
sbb
sbb
cmc
push
sahf
or
jb
push
dec
mov
push
xchg
cmp
mov
push
add
jecxz
lock
cmp
cmp
inc
xchg
imul
in
popa
mov
cwtl
sub
lcall
test
in
adc
jnp
cwtl
inc
ret
mov
cwtl
lret
ficoms
fsub
call
xor
mov
mov
leave
rcrl
lret
add
fpatan
ja
cmp
cmp
jne
imul
arpl
movsl
cmpsb
scas
mov
loopne
std
int3
test
stc
xor
xor
push
push
and
push
es
xchg
mov
xchg
fwait
lret
faddl
or
sub
add
adc
jg
test
push
xchg
mov
pushf
movsb
jmp
cld
cli
int3
aam
pop
in
rorl
push
std
or
in
frstor
lods
les
sbb
mov
enter
and
fdivs
xchg
adc
or
xchg
xor
ljmp
rcr
cmc
mov
dec
push
testl
or
jo
ja
scas
jecxz
fsts
not
push
push
pop
pop
cmp
sahf
inc
mov
pop
fadds
push
lret
ret
popa
mov
xchg
movb
sbb
sbb
push
rolb
pop
pop
out
cltd
push
dec
mov
xchg
lods
mov
icebp
stc
jno
lods
jmp
jmp
ljmp
lds
popa
imul
cmp
push
fbstp
cmp
gs
stos
push
es
ret
jae
aam
push
fcomi
repnz
ret
lret
mov
aad
mov
mov
and
je
ret
nop
arpl
pop
sbb
xchg
pushf
movsb
adc
sbb
daa
lret
add
and
push
insb
jne
or
jne
stos
jb
push
push
and
jp
push
scas
mov
push
sub
xor
and
jne
testl
call
iret
pop
push
arpl
adc
jbe
gs
clc
lds
testl
xorl
cs
nop
cwtl
mov
enter
push
inc
inc
push
adc
outsl
repz
call
in
in
xlat
mov
test
jecxz
sbb
xor
mov
pop
jmp
loopne
push
cmp
jle
jae
test
xchg
es
jo
mov
push
push
sbb
loopne
jmp
int
add
sbb
xor
and
xor
repnz
and
mov
orl
cld
push
pop
repnz
and
xor
push
test
adc
test
mov
mov
and
std
adc
mov
or
fsubrl
cmp
mov
scas
orb
leave
add
adc
sbb
or
jno
dec
jle
pop
dec
dec
mov
dec
xlat
orb
pop
xor
adc
incl
push
jmp
imul
bt
test
fidivs
or
call
pop
pop
in
dec
dec
inc
mov
cltd
and
cs
fnstenv
mov
jae
sub
or
scas
push
pop
popa
sbb
stos
xchg
fstl
xchg
mov
movb
sti
imul
or
inc
dec
add
inc
cld
jno
xchg
pop
mov
mov
xchg
xor
in
repnz
lods
mov
fcoml
jnp
popl
push
test
sub
scas
frndint
add
lcall
xchg
push
pop
or
out
jno
lea
jp
int
test
sbb
and
fisubs
xor
dec
jb
add
add
ljmp
and
repnz
aaa
xchg
aad
xor
dec
cmp
pusha
xchg
xchg
cmpsl
scas
xchg
rcl
fucomip
jns
add
data16
arpl
dec
incl
sbb
cmp
mov
xor
leave
pop
sub
sbb
jl
mov
lds
xchg
shll
loope
icebp
and
sbb
and
jo
into
pop
sbb
mov
mov
pop
cli
incb
lds
ds
pop
mov
push
in
cmp
sti
mov
xorl
sti
cmpsb
push
cmc
in
jnp
xor
add
je
inc
cmp
mov
mov
int3
xlat
push
xor
test
and
and
pop
xor
push
add
addr16
mov
pop
add
cmp
hlt
mov
ss
mov
pop
mov
rcl
mov
push
testb
rcr
pop
jle
inc
sbb
and
sbb
xchg
jno
pop
mov
psubsb
push
mov
cli
cmp
inc
cld
add
sub
adc
movsb
test
push
fldenv
push
loopne
mov
inc
fdecstp
andb
adc
and
push
test
mov
xchg
stos
dec
fdivp
stc
shl
sub
sbb
stc
add
popf
dec
popa
imul
jbe
fstp
aam
cmpsb
scas
adc
fidivrs
push
sti
xor
pop
jnp
xchg
scas
mov
loop
sti
fbstp
adc
arpl
adc
and
gs
dec
push
ljmp
mov
in
xchg
sysret
jge
fsub
std
stos
movsb
rorl
push
jne
and
jne
lret
insl
lahf
sub
dec
and
and
shrb
cli
jns
push
outsl
inc
dec
xor
outsb
fcompl
ret
lcall
sub
push
ljmp
pop
xchg
ficomps
imul
lret
xchg
lahf
add
paddsb
dec
das
xor
or
cmp
sbb
pushf
inc
adc
call
adc
cmc
pop
inc
inc
inc
adc
and
xchg
mov
subl
rcrl
lock
pop
cmp
jne
imul
lods
movsl
fwait
sahf
jno
xchg
lret
into
fimuls
into
hlt
fistps
ss
fisttpll
mov
jp
mov
jnp
xor
shll
stc
rcr
xor
hlt
sbb
imul
xor
add
dec
fsubrs
sbb
cli
in
sbb
outsl
inc
pop
stos
cmp
vorps
vmovapd
daa
cmp
dec
lret
cmp
insl
fmul
ret
in
stc
bnd
jg
sub
lods
lret
pop
scas
in
outsb
pop
stos
stc
mov
pushf
add
mov
setl
incl
fcompl
inc
add
or
imul
mov
xchg
mov
fsub
add
and
enter
testb
inc
dec
and
pusha
push
test
push
jl
loope
mov
adc
inc
psubsw
or
jne
addr16
dec
mov
jbe
leave
pop
push
push
jno
push
iret
es
hlt
testb
dec
fdivl
jb
push
mov
cld
test
dec
in
popa
jecxz
and
cmp
push
push
popf
push
sub
push
mov
je
sub
outsb
mov
sbb
or
mov
push
stos
dec
sub
nop
mov
sbb
scas
lea
std
add
adc
dec
cmpsl
inc
sbb
xchg
xchg
out
gs
pop
ror
cmp
lcall
scas
call
jmp
pop
pop
sub
dec
cmpsl
daa
pusha
js
cmpsl
scas
mov
or
scas
mov
mov
mov
incl
repnz
xor
clc
clc
subb
push
mov
jmp
shrb
adc
and
movsb
xlat
pusha
push
popf
jmp
out
jg
pusha
mov
xchg
stos
inc
test
adc
out
jmp
push
imulb
sub
cli
jle
dec
pushf
sahf
cmpsb
jg
fst
and
sahf
cmpsb
cmpsl
lahf
test
es
mov
gs
sub
stos
mov
fcmovbe
and
mov
lods
in
add
xor
push
push
movsb
dec
and
xor
insb
dec
push
pop
inc
jp
xchg
int3
jecxz
fisubrl
daa
daa
sbbb
add
xlat
dec
and
mov
mov
sbbl
sub
mov
dec
jbe
stos
and
xor
insb
testl
gs
push
mov
data16
std
mov
and
outsl
sbb
cli
pop
shll
divl
mov
aaa
outsl
jns
cmp
imul
jl
sbb
push
shll
testl
sti
xor
cwtl
mov
enter
call
push
xor
sub
cmp
adc
loope
ret
adc
or
jmp
and
inc
imul
popa
imul
lahf
sbb
out
and
inc
push
pop
lcall
and
adc
pop
cmp
mov
add
adc
or
jl
mov
aam
mov
out
out
dec
out
int3
and
dec
dec
mov
and
mov
dec
jp
push
inc
int
call
cli
and
pusha
pop
lret
xor
addr16
dec
ljmp
and
jg
or
std
pushl
inc
cmc
incl
mov
out
das
fldcw
sbb
daa
mov
stos
loop
pop
movsb
out
ret
stc
mov
lret
scas
nop
cwtl
mov
mov
or
xchg
sbb
cli
lock
aad
add
mov
add
movsl
jo
popa
fwait
bound
jmp
shr
sbb
das
or
add
cmp
pop
jle
push
test
jl
mov
cmc
cmc
push
hlt
mov
inc
cmp
sti
xor
push
jnp
xchg
cld
add
mov
aam
enter
adc
jmp
loopne
sbb
jae
pushf
lahf
xchg
adc
imul
lret
ljmp
lcall
push
and
adc
pop
fs
sbb
jb
imul
sbb
imul
jb
pop
lret
lret
jp
push
mov
stc
icebp
pop
in
ret
mov
call
cmc
sbb
lcall
dec
das
rcl
fistps
push
adc
pop
adc
jnp
dec
pop
pop
cmpb
mov
rol
shlb
add
xchg
mov
and
xor
pop
or
mov
push
iret
test
adc
and
clc
jne
sahf
cmp
imul
mov
dec
ds
mov
out
les
lods
push
es
xchg
jae
fcmovbe
or
mov
mov
sbb
ss
data16
inc
fwait
sbb
test
cld
pop
jne
cmp
dec
push
std
xor
test
adc
in
cmpsl
xor
cmc
std
add
subb
pop
and
add
cmpl
inc
ja
jnp
lret
mov
or
cli
adc
mov
pop
in
mov
cwtl
jecxz
cmp
lahf
cmpsl
or
xlat
hlt
mov
popa
inc
inc
aam
aaa
cmp
adc
inc
jns
sbb
mov
leave
pop
imul
inc
or
cltd
pop
sub
movsb
push
mov
jns
or
in
in
mov
mov
dec
push
divb
push
pop
jbe
pop
mov
mov
daa
icebp
scas
mov
and
out
or
dec
dec
pop
add
and
ja
popl
sub
mov
and
aam
scas
xor
pop
cmc
mov
cmp
fsubl
hlt
jl
mov
add
in
hlt
cmpsl
jae
mov
aas
mov
adc
add
lea
inc
adc
loopne
xlat
mov
rorb
adc
das
and
push
insb
call
js
pop
mov
test
leave
pop
les
adc
outsl
or
ljmp
jle
mov
outsl
pop
adc
mov
cmpsl
scas
enter
pop
sar
sbb
inc
bnd
fsubrs
aas
pop
les
jno
mov
pop
xor
repz
ljmp
dec
inc
jns
adc
decl
inc
cli
sbb
xchg
aaa
aas
push
shr
cld
fistpll
and
pop
push
bound
cld
int
nop
imul
fidivs
push
xchg
push
incb
imulb
xlat
bound
inc
mov
sti
fbstp
loop
in
mov
cmc
js
cmp
push
data16
sbb
pop
cmpsl
xlat
mov
fistpll
in
loopne
mov
and
mov
sub
js
jns
push
lahf
movsl
pop
addr16
fcmovnbe
movsl
out
in
mov
inc
int
out
sti
sbb
inc
pop
aas
or
and
sarl
stc
icebp
mov
mov
in
std
std
and
xchg
sbb
dec
iret
stos
or
out
imull
daa
add
inc
test
stc
lods
or
imul
rcll
cli
icebp
stos
testb
sub
push
and
clc
loope
pop
pop
pusha
push
adc
mov
shrl
lods
out
and
dec
inc
jbe
adc
cmp
mov
cmpsb
jbe
push
in
fisubrl
xchg
push
lret
add
adc
imul
mov
sbb
inc
lret
fwait
mov
sbb
adc
repz
sbb
cmp
xchg
and
scas
mov
out
int3
aam
mov
ret
inc
dec
sbbl
sti
imul
mov
xchg
mov
clc
sub
repz
xor
or
insb
cmp
gs
xchg
icebp
jmp
sbb
adc
repnz
adc
jo
xchg
xchg
clc
xchg
data16
lret
cmp
scas
mov
push
adcb
out
mov
xor
js
xor
mov
xchg
out
jo
mov
pop
sub
push
and
add
add
aaa
inc
jbe
inc
inc
leave
outsl
js
adc
stc
orb
xor
pop
icebp
stc
adc
mov
popa
imul
in
and
cmp
sahf
cmpsb
or
out
xchg
fs
inc
iret
pop
cmp
movsl
orl
push
aas
lret
lahf
mov
jne
nop
sbb
aas
dec
cmp
mov
and
xor
adc
ja
pop
std
ret
aam
xlat
adc
cld
rclb
and
mov
outsb
pop
pop
fcom
inc
shll
int
fucom
xchg
adc
add
sub
cmc
push
mov
lret
jmp
xlat
rcrb
and
iret
cli
sub
mov
push
test
lahf
stos
cmp
dec
int3
decl
pop
ficomps
out
call
hlt
js
mov
mov
bound
fwait
jo
int
rcr
loopne
adc
add
and
out
jo
xchg
imul
bound
pop
push
ret
pop
sub
stc
sub
adc
xor
jle
mov
ss
jmp
push
fimuls
push
sbb
cmp
ss
jae
sub
aam
lret
shr
jne
mov
in
inc
sub
xchg
adcb
imul
hlt
mov
mov
cld
add
pop
mov
and
popf
mov
lea
test
xlat
addr16
and
push
iret
je
imulb
rolb
and
mov
and
cmp
add
adc
jle
out
dec
push
addr16
or
mov
cltd
fbld
fucomip
movhps
mov
shll
cwtl
outsl
and
jo
mov
enter
fisubl
clc
add
sbb
adc
mulb
xchg
imul
mov
sarl
cmp
stc
roll
push
adc
sub
in
dec
push
pop
mov
xchg
pop
jg
mov
push
sti
cs
push
add
bound
xor
dec
js
lods
in
hlt
sub
ficoms
push
pushf
xchg
mov
push
ja
in
lretw
adc
ss
punpckhdq
pop
aad
xor
and
lods
pop
xchg
stos
aad
mov
pop
stc
add
and
sbb
xor
fiaddl
in
xchg
lcall
adc
xchg
loope
push
inc
mov
pop
mov
jno
push
shrb
fsubs
lods
push
push
mov
out
or
aam
add
pop
inc
orb
imul
cmp
sbb
test
inc
dec
lret
es
push
pop
int
test
xchg
cltd
jle
ds
or
cmp
mov
popa
imul
sahf
jl
jnp
xchg
mov
push
ja
fsubp
movsl
cmc
sub
pop
mov
push
ss
lret
dec
orb
fidivrs
sbb
inc
and
or
in
and
movsb
dec
subb
push
mov
hlt
cld
scas
push
daa
add
adc
adc
pop
lea
mov
fidivrl
je
iret
or
or
mov
xor
cmpb
lcall
adc
icebp
fs
scas
xchg
data16
and
in
sbb
into
mov
pop
mov
jmp
inc
sarl
jb
outsl
js
repz
pop
xorl
and
lock
mov
mov
cmp
jmp
add
adc
cmp
rolb
jnp
outsl
orl
jecxz
and
xor
popa
out
test
bnd
repz
mov
jno
lods
push
mov
mov
push
in
out
or
xchg
ss
idiv
rcr
xchg
roll
inc
ss
pop
popa
repnz
cmp
cmpsl
and
test
mov
test
repz
cs
icebp
addr16
aad
xor
push
mov
sbb
int
jl
lock
mov
cmovne
sbb
lahf
jecxz
lcall
push
xor
jns
add
xchg
push
in
outsb
ja
jno
stos
cmpl
popa
leave
cmpsl
aaa
push
nop
outsl
sbb
stc
adcl
inc
pop
cmp
nop
ljmp
mov
pop
jne
cwtl
lret
add
sbb
subl
push
pop
adc
iret
pop
dec
cltd
mov
hlt
sti
jmp
or
cmp
mov
fdivr
inc
dec
cs
je
enter
in
in
loop
mov
mov
add
or
xchg
inc
jg
inc
dec
inc
bound
rcr
xchg
bnd
sbb
dec
and
movsl
stos
xor
sbb
pop
fs
push
jg
jp
xchg
int3
jecxz
pop
fsubl
daa
popf
sub
add
mov
cmp
insl
push
pop
fs
sbb
xor
mov
sub
adc
jp
sub
mov
and
stc
icebp
pop
out
ret
jg
stos
xor
adc
push
pop
insl
clc
filds
out
and
into
aas
rcrl
mov
mov
aas
idiv
sub
mov
outsl
js
mov
fildl
xchg
mov
sub
mov
dec
sub
cmp
test
jns
xchg
mov
gs
rcr
out
sub
inc
xor
jns
into
gs
cmpsb
scas
mov
mov
incb
lds
mov
mov
arpl
inc
cld
add
xchg
mov
fwait
mov
repnz
fisttpl
or
aam
xor
push
or
orb
add
sub
xor
cmp
js
in
inc
dec
xor
mov
cmp
movsb
iret
ficomps
lock
gs
jb
cmp
jb
loop
or
cmp
rcr
out
ljmp
outsb
sub
sahf
and
rcll
dec
xlat
sarb
add
js
fcomp
or
cmp
outsb
mov
test
repz
mov
add
adc
ss
push
loope
push
or
jno
rcr
out
inc
lea
and
sub
pop
xchg
cmc
and
into
xchg
cmc
je
sbb
movsl
je
xor
push
push
push
pop
in
mov
push
xchg
xor
stos
mov
mov
xchg
mov
and
imul
std
add
jo
fsub
xchg
xchg
mov
in
add
adc
add
dec
push
pop
outsb
xchg
fnstsw
int3
push
std
call
outsb
js
in
cmc
push
dec
mov
daa
iret
decb
mov
lds
mov
mov
dec
orl
and
pop
mov
pop
sub
pop
push
test
popa
mov
mov
mov
jae,pt
dec
push
outsb
jo
pusha
aas
inc
dec
or
mov
inc
fnstenv
sub
push
mov
out
pushf
sbb
xchg
scas
sub
aas
rol
mov
fisubrs
addb
mov
push
pop
adc
sbb
push
mov
out
pushf
std
cmpsl
fsubp
movsl
fwait
mov
imull
ss
jmp
inc
mov
inc
mov
mov
mov
mov
dec
js
xlat
fcompp
jecxz
add
popf
enter
je
jl
sub
test
int3
movsl
push
push
push
jmp
and
adc
mov
incl
in
jns
lea
mov
sbb
jb
les
sub
push
aas
pusha
pop
lret
xor
pop
or
mov
mov
push
repnz
in
and
cmp
jp
data16
lea
out
jmp
mov
daa
rorb
xor
icebp
nop
dec
and
dec
push
dec
jns
cmove
movsb
aaa
add
lock
out
sub
or
cmp
or
ds
dec
jns
cwtl
jae
setno
jg
fabs
mov
jbe
or
cmp
sbb
mov
jo
xchg
xchg
adc
inc
mov
lahf
shll
mov
ds
lds
stos
mov
lea
mov
jnp
sbb
inc
and
aam
mov
adc
in
and
pop
add
and
lods
and
jo
shl
adc
stc
sub
popf
inc
sbb
adc
popf
mov
pop
mov
add
ljmp
sub
jmp
jp
lea
mov
movsl
leave
rcll
xchg
lcall
scas
call
push
shll
jno
mov
inc
dec
mov
adc
loope
pusha
std
iret
xlat
ss
outsl
mov
outsl
sbb
push
cwtl
mov
les
jg
adc
pop
scas
jns
dec
xchg
inc
sbb
test
pop
and
push
popa
xchg
movsl
mov
shll
sbb
aaa
adc
xor
jp
xchg
and
mov
call
movb
xcrypt-ecb
cmpsl
push
test
out
jnp
pop
dec
lds
pushf
jne
pop
jmp
dec
pop
or
mov
sbb
add
adc
push
inc
sbb
dec
push
jne,pt
add
les
shll
sub
in
rcr
adc
pop
adc
pop
jb
pop
cmp
insl
lahf
arpl
and
cmc
std
pop
push
lret
sub
test
ja
mov
mov
repnz
adc
andb
pop
jno
insb
inc
dec
cmpsb
sahf
out
outsb
ja
pop
shll
adcb
out
jo
int3
dec
clc
xor
js
sub
js
out
cmpsb
data16
lock
decl
and
add
add
aaa
inc
jbe
sbb
outsl
js
adc
stc
orb
xor
pop
icebp
stc
adc
mov
popa
imul
in
and
cmp
sahf
cmpsb
or
out
xchg
fs
inc
iret
pop
cmp
movsl
orl
ds
lret
lahf
and
ret
xor
cmp
insb
mov
movsb
ljmp
mov
xchg
mov
pushf
test
imull
aam
and
xor
in
jg
fs
je
movsl
pop
lods
dec
fs
pop
xchg
xchg
aad
xorb
enter
lods
lret
hlt
cmp
xor
testb
cs
mov
lds
sbb
cmp
sbb
cmp
data16
ja
shrl
shrb
das
icebp
data16
decl
xorb
pop
aaa
aas
sub
inc
pop
xchg
cmpsb
push
xorb
mov
push
xlat
and
stos
in
inc
test
mov
mov
loope
mov
dec
es
sbb
sbb
dec
int3
pop
ss
insl
lea
push
xchg
ss
aam
roll
inc
popa
lret
dec
scas
pop
test
out
or
lcall
orl
popa
xor
cld
popa
jmp
sub
push
pushf
cmp
xor
movsb
or
test
je
pop
and
sub
movsb
ret
or
iret
xchg
out
pop
dec
addr16
insb
adc
fs
cwtl
scas
lea
ret
mov
call
in
cmc
cmp
jb
xor
jb
jge
push
sbb
lret
jmp
xlat
das
imul
lock
inc
pushf
cmpsl
xchg
je
push
pop
insl
cwtl
inc
js
out
mov
mov
mov
sub
inc
mov
outsl
dec
cmc
mov
add
pushf
xor
loopne
add
popf
and
inc
loope
mov
in
inc
stc
mov
sbb
aam
mov
add
jmp
hlt
xor
mov
sbb
xchg
adc
int
addl
int3
or
push
ret
inc
cmp
sub
out
jnp
pop
mov
mov
xchg
push
lds
rclb
sbb
lods
loop
pop
cmp
sbb
push
inc
cmp
mov
outsb
fsubp
stos
push
lods
mov
inc
push
xchg
sbb
cli
mov
fcmove
push
repnz
lock
popf
nop
cwtl
ret
or
xor
mov
push
mov
mov
push
fisubl
or
add
aad
dec
or
sub
iret
jae
jg
push
clc
test
xor
xlat
arpl
lcall
test
cli
push
jo
cli
sbbb
mov
int3
rcr
xchg
fwait
add
loope
sbb
in
clc
add
and
xchg
inc
xchg
cltd
push
mov
imul
mov
pop
mov
sbb
adc
rorl
mov
mov
mov
aad
xchg
sahf
cmpsb
or
pop
cmp
insb
cmpsb
incb
insl
arpl
inc
cs
and
mov
mov
in
sub
fcoml
sbb
jg
xor
jne
add
lods
std
cmp
test
in
aad
icebp
add
out
ja
aad
sarb
enter
push
in
sbb
inc
cli
sbb
cltd
xchg
add
push
into
xchg
lcall
rclb
or
jb
adc
shll
pop
xchg
mov
lods
xchg
lahf
push
outsb
sahf
test
out
fldcw
xor
aas
inc
cld
sub
jae
imul
mov
mov
enter
xchg
mov
or
cmp
popa
inc
out
sub
xchg
cltd
mov
leave
rol
out
push
mov
jno
int3
push
cmp
repz
xchg
mov
into
add
incb
stc
sub
mov
mov
fucomi
insb
mov
push
sub
dec
in
adc
rclb
dec
and
lret
imul
and
int3
mov
cmp
dec
fidivl
xchg
mov
jg
xchg
mov
fstpl
jl
prefetch
or
jg
adc
std
add
jecxz
movsl
decb
sahf
jp
jne
test
test
cmp
cmpsb
das
adc
and
jne
push
stos
sub
xchg
out
out
pop
jmp
js
out
mul
sbb
pop
addr16
jbe
fwait
icebp
xchg
outsl
movl
mov
sbb
dec
or
call
sbb
or
pusha
adc
cmpsl
orl
ret
enter
inc
adc
xor
dec
mov
xor
int
push
rclb
and
out
sbb
sbb
mov
fwait
pop
stos
mov
fwait
mov
pop
testl
sub
mov
lahf
dec
cmpsb
lahf
jno
mov
xchg
sub
aam
and
mov
in
fisubrl
lea
jge
lea
lret
pop
adc
and
pop
mov
pop
nop
rcr
lret
es
daa
xor
add
cld
rcr
test
adc
jge
lock
xchg
xchg
lock
data16
mov
shll
bswap
pop
daa
fsubp
pop
lcall
push
nop
mov
dec
enter
xchg
add
rcr
mov
inc
adc
add
push
cmp
les
mov
stos
stc
add
mov
inc
sbb
cmp
jge
fwait
insl
inc
dec
imul
mov
fisttpl
in
fisubrl
fsubp
inc
and
dec
es
fwait
sbbl
mov
ret
lret
je
imul
lds
push
lods
push
sub
popl
mov
add
movsb
dec
and
ljmp
addr16
aad
xor
push
adc
jg
outsl
int
jl
lock
vpmaxub
ret
int3
inc
dec
push
fbld
dec
push
mov
mov
leave
fcmovb
lcall
sbb
int
pusha
push
dec
rcll
jle
insb
inc
dec
popa
es
stos
scas
mov
push
call
xor
mov
pop
pop
addr16
fdivrl
scas
cwtl
cwtl
and
mov
fs
xchg
sbb
jg
cmp
mov
sub
cmp
xorl
ror
pop
xchg
into
add
and
or
fwait
ja
popa
jge
mov
dec
push
test
jle
inc
popa
int
or
ret
inc
cmp
daa
jecxz
inc
and
mov
jnp
mov
fs
pop
fnclex
or
sub
push
dec
test
sbb
cmp
jp
mov
test
mov
mov
sub
and
pop
ja
cmpb
add
mov
adc
cmc
ficoml
incl
sub
push
pop
mov
pop
lods
orb
mov
push
repnz
pxor
popf
das
xchg
mov
xchg
incl
adc
xor
dec
adc
pop
dec
push
mov
and
jg
mov
adc
xchg
sbb
inc
jno
add
and
leave
insb
jo
out
adc
cmpsb
in
inc
adc
xlat
mov
in
push
loop
loope
cmp
ret
das
and
push
stc
xor
sahf
cmpsb
xchg
int3
aas
mov
push
and
gs
jae
and
stos
mov
arpl
mov
iret
sub
popf
mov
into
push
pop
mov
pop
dec
dec
movsb
lods
mov
jge
hlt
push
mov
and
in
aaa
push
and
pop
cmp
dec
push
cmpb
aam
add
or
xor
sbb
mov
jecxz
stos
mov
outsl
sbb
ret
push
push
xchg
sbb
add
loopne
movsl
inc
cwtl
aam
xchg
mov
pop
mov
xchg
cwtl
rorl
roll
inc
and
lods
in
outsl
dec
inc
testb
fcoml
stos
mov
lock
loopne
sbb
js
sbb
mulb
jl
jae
xchg
jns
imul
jmp
shl
push
mov
fisubl
adc
mov
mov
lock
push
inc
xchg
out
fs
and
push
push
push
dec
addl
xchg
dec
sahf
popf
jae
stos
shll
or
sub
mov
adc
add
pop
and
pop
jl
mov
mov
in
pop
push
adc
sbb
cmp
fiaddl
add
mov
test
fidivrl
cmp
or
xor
rcr
cs
in
repnz
repnz
mov
popa
loope
dec
andl
lahf
pop
ret
push
fistpll
add
sti
xchg
mov
dec
inc
pop
push
jle
subb
xchg
push
test
pop
fcmovnbe
inc
aam
test
jno
lea
mov
inc
out
arpl
xor
inc
je
cmp
xchg
jns
mov
xchg
ror
and
and
clc
pop
and
inc
jno
dec
push
pop
lea
xchg
sahf
aad
int3
or
xor
and
stos
cmp
jecxz
aad
fninit
mov
adc
sub
or
outsb
push
fildl
cs
xchg
aam
inc
aad
mov
repnz
leave
cld
add
fiaddl
inc
dec
clc
andb
enter
movsl
mov
mov
in
xor
insb
rclb
inc
dec
mov
jp
push
enter
out
ret
or
pop
pop
jg
sub
xchg
nop
in
nop
rclb
fistpll
mov
dec
iret
dec
addr16
pop
daa
jno
orb
js
xchg
sbb
mov
mov
xor
xchg
add
orl
xchg
hlt
imul
adc
push
or
loope
into
push
dec
mov
xor
lds
insl
inc
ljmp
sub
sub
xchg
xchg
pop
cs
xchg
or
pop
xor
fistpl
lret
leave
ret
xor
aam
pushf
rcrb
xchg
test
dec
mov
ret
daa
push
aam
in
pop
push
adc
sbb
imul
inc
outsl
lods
pop
mov
mull
imul
pushf
ljmp
inc
push
cld
jns
loop
inc
dec
push
sbbl
ljmp
loop
repnz
sub
push
imull
xor
rclb
xchg
ja
push
into
aaa
lret
xchg
lahf
cmpsl
icebp
mov
outsl
rorb
hlt
mov
mov
aas
repz
pop
outsl
mov
mov
lea
out
and
clc
adc
sub
and
pop
push
je
pop
or
jo
orl
mov
jmp
lea
sub
out
sti
add
imul
xchg
leave
push
push
frstor
sti
xor
pop
testl
lret
rcr
test
push
movsl
inc
jmp
and
or
outsb
data16
inc
pop
xchg
pushf
movsb
lods
push
mov
jns
fdiv
outsb
or
mov
das
inc
xor
or
fists
js
ja
push
lods
daa
xchg
rol
mov
gs
out
int3
xor
lret
xor
mov
stos
mov
inc
or
loope
loopne
mov
cmp
inc
xor
or
imull
shlb
push
leave
mov
cmp
cmpsl
scas
xchg
outsl
adc
pop
lcall
pop
push
pushf
out
mov
mov
lods
inc
test
add
lea
lock
push
stc
xor
add
movsb
mov
test
jecxz
sbb
icebp
push
dec
xchg
rcrb
push
insl
outsl
inc
pop
pop
mov
jno
stos
xchg
hlt
mov
es
add
xchg
mov
std
jl
push
lret
int
mov
adc
pavgw
ds
fnsave
jg
lods
adcb
fadds
xorl
xlat
mov
dec
dec
insb
push
and
dec
adcl
rcll
add
sub
ret
sub
mov
mov
ljmp
scas
xor
das
sub
add
out
daa
add
icebp
ja
sub
xor
lahf
cmpsl
mov
pop
xchg
scas
ds
fwait
rclb
mov
mov
test
mov
test
out
fcomp
fs
adc
movsl
sub
or
je
jne
dec
xor
dec
mov
rorb
in
pop
in
mov
xchg
jmp
rcrb
jne
jb
dec
into
jmp
scas
pop
xchg
sbb
or
ficoms
cmp
push
es
pop
das
daa
bound
inc
add
mov
and
lods
sbb
aaa
lcall
pop
xor
push
jb
sbb
aam
imul
fs
int3
aam
sbb
hlt
mov
and
lea
sbb
xor
mov
pop
xchg
popf
hlt
push
push
fcmovb
int
mov
das
cmp
dec
inc
dec
lcall
push
ja
mov
stc
xor
pop
sar
dec
fsubrs
test
mov
or
ret
popl
push
pop
iret
xlat
lock
ja
aas
pop
outsl
xor
aaa
aas
pop
add
and
jle
mov
add
xchg
outsl
loopne
add
int
sbb
movlps
imul
call
in
jns
icebp
stc
sub
adc
inc
sub
cmp
cmpsb
imul
test
xchg
pushf
sahf
xchg
sahf
cmpsb
pop
fs
into
out
add
xchg
dec
sub
out
jnp
and
pop
bound
and
mov
les
adc
aam
mov
ret
sbb
jnp
loop
dec
push
pop
push
movsb
popf
in
lcall
scas
cmc
and
repnz
sub
mov
pushf
cli
decl
rcl
shll
xor
daa
std
add
push
push
jp
lea
mov
aam
icebp
pop
mov
lcall
rcr
mov
sub
and
jo
out
js
pop
retw
out
loopne
pop
daa
das
inc
inc
addr16
pop
pop
cmpl
inc
dec
cmp
mov
testl
push
fidivs
sub
sbb
jle
or
jbe
jne
stc
add
icebp
stc
adc
sub
adc
lods
lods
scas
stos
jbe
in
mov
cld
into
mov
lds
stc
push
xchg
cmpl
sahf
mov
lahf
jae
xchg
push
cmp
jecxz
popa
adcl
sbb
sahf
sub
mov
jl
and
xchg
xlat
push
pop
jo
je
int3
int3
push
fdivrl
xchg
sbb
std
sub
dec
and
mov
mov
rcrb
and
cwtl
fisubl
lods
fidivrl
fwait
sahf
sub
push
or
mov
dec
cltd
pop
push
xchg
mov
lcall
jbe
loop
repnz
dec
push
dec
sbb
aaa
outsl
ja
xchg
push
rclb
fisubrl
popa
cs
add
xlat
cs
incl
pop
ficomps
jnp
jl
dec
cmpsl
es
ret
ret
call
xor
xchg
insl
mov
loope
out
in
mov
test
mov
cwtl
sbb
jle
loope
add
sbb
mov
popf
cmpsb
lcall
cmc
in
repz
mov
test
mov
loope
push
test
out
jnp
mov
orb
rcr
push
jae
cli
or
mov
or
mov
sbb
inc
fadds
pushf
pushf
and
fsubl
xchg
int
dec
xchg
sbb
das
movsl
xor
cmc
sub
add
test
lods
mov
sbb
lahf
mov
bound
mov
mov
sbb
fisubrs
xor
js
dec
ret
pop
cli
mov
test
lret
mov
repnz
add
inc
ja
xchg
sub
mov
xchg
aaa
adc
addr16
pop
mov
inc
cwtl
cmp
and
outsl
mov
push
push
fadds
or
sahf
cmp
insb
adc
jmp
jo
add
sub
int3
sbb
iret
mov
leave
rcr
enter
inc
dec
add
jecxz
pop
xchg
or
scas
mov
mov
add
xor
push
dec
ret
push
push
push
or
or
xchg
mov
sbb
fidivrs
repz
cmp
or
divb
in
inc
dec
push
jg
dec
je
lods
mov
dec
xchg
aam
and
adc
and
push
cmp
dec
adc
sub
fstl
mov
xor
pop
fisubrs
fucomip
push
pop
gs
sub
jg
lcall
sbb
or
repnz
test
pop
inc
bound
sbbl
mov
pop
loope
cmpsb
out
dec
inc
and
sbb
or
imul
inc
les
xchg
mov
popl
sbb
jno
mov
mov
mov
or
sbb
inc
sbb
cltd
je
cs
mov
push
movsb
pop
xchg
out
lret
fwait
inc
push
ret
cld
ds
push
inc
jae
fs
sub
setnp
dec
mov
ljmp
fninit
jmp
fcoml
int3
sbb
sub
int3
leave
adc
push
xchg
pushf
imul
insb
mov
adc
cmp
das
insb
sub
cmc
xor
sub
gs
sub
xor
adc
insl
in
lcall
dec
push
or
and
lea
repnz
test
dec
fcmovbe
lods
or
ja
rcr
int
dec
inc
mov
adc
pushl
shlb
jns
aas
jg
out
push
cmpsl
scas
mov
fadds
pop
movsb
daa
out
push
push
sbb
loopne
daa
sbb
mov
sbb
ret
mov
jns
mov
clc
add
xchg
jns
adc
clc
add
cltd
mov
lahf
xchg
cmp
push
out
cltd
int3
stc
mov
jmp
int3
xor
hlt
push
rorl
mov
jge
mov
mov
daa
cmpsb
scas
jp
adc
add
sub
push
daa
pop
or
dec
mov
xor
sub
jle
aam
push
cwtl
and
xchg
and
or
sbb
inc
loop
dec
push
fwait
sub
mov
orl
cld
daa
jge
int
jmp
pop
xor
insb
jne
stos
hlt
push
frstor
dec
mov
stos
int3
adc
cmp
sub
mov
test
stos
mov
mov
xchg
cmp
cwtl
sbb
adc
popf
lahf
cmpsl
ret
je
lods
je
add
push
xorl
out
push
daa
xchg
or
pusha
test
js
xchg
pop
fisttpl
test
or
sahf
cmp
rol
dec
push
sbb
xor
jb
cmpb
mov
or
loope
negb
dec
push
dec
and
xchg
cmpsb
rcll
lods
jb
repnz
fistl
push
xlat
fistl
dec
stos
loope
movsl
sbbl
popa
arpl
adc
or
popf
cmp
sarl
inc
dec
and
push
test
stos
movsb
mov
movsb
scas
xor
fsub
pushl
movsl
pop
xchg
lret
pop
dec
add
inc
jp
insb
test
dec
push
subb
aas
jae
mov
repz
add
or
jb
cltd
xchg
out
nop
gs
jg
dec
inc
shlb
xor
and
fs
sub
outsb
ja
adc
imul
fisubrl
loop
das
push
adc
bound
loopne
pop
mov
and
in
test
fs
fsubs
xchg
xchg
movsb
andl
push
popa
mov
jo
lahf
sti
jl
mov
outsl
jns
mov
stc
orb
cmc
loope
xor
ret
mov
adc
pop
fs
fxch
out
cmpsb
sbb
and
out
cmp
pop
push
push
hlt
dec
cltd
add
in
lret
dec
fistl
jge
cmp
sub
push
jl
and
pop
and
cmp
das
add
das
fildll
or
and
jp
ja
lea
lret
aam
xor
call
daa
xor
loopne
adc
inc
add
das
lret
push
mov
add
fdivs
leave
sbb
popa
call
dec
mov
mov
ror
or
xlat
out
popa
adc
push
aaa
test
push
jle
test
outsl
fdivrp
fists
push
js
add
push
adc
das
test
push
addr16
jl
dec
pushf
adc
dec
push
rcr
shrl
adc
aaa
cltd
mov
insb
pop
sub
cmp
les
in
push
fsubl
push
ret
cld
imul
inc
divl
in
ss
test
mov
fucomip
repz
daa
xor
dec
loop
outsb
lret
fs
test
es
dec
or
lock
std
cmc
inc
orl
ljmp
sbb
or
xchg
inc
dec
insb
xlat
int
dec
aad
js
rorb
mov
aam
dec
or
jo
jo
push
insl
fadd
ret
mov
repnz
or
cli
add
out
sub
add
adcb
scas
cmpsb
and
js
push
scas
and
and
nop
ljmp
aaa
and
test
into
sbb
inc
enter
sarl
and
sbb
lods
xor
adc
inc
push
ja
inc
dec
mov
stos
mov
xor
fabs
test
adc
dec
push
dec
mov
and
test
test
jg
leave
iret
rcl
inc
adc
fwait
jne
bound
adc
mov
pop
mov
fidivrs
ret
lret
sti
pop
adc
pop
arpl
jl
push
jbe
mov
in
aam
mov
imull
and
add
push
pop
ljmp
pop
jno
pop
pop
test
shrb
arpl
mov
mull
sbb
push
dec
bnd
pop
dec
cmp
xchg
stc
xor
xor
mull
call
mov
jle
inc
or
sub
cmp
pusha
mov
cmpsl
scas
imul
dec
dec
test
das
in
scas
test
in
outsb
imul
push
repz
rcl
into
test
cli
mov
mov
cmp
adc
or
and
dec
jo
rcrl
movsb
or
add
sbb
xor
fimuls
cmp
and
scas
push
xchg
cmpsb
xor
mov
scas
mov
push
xor
ror
std
imul
xor
push
repz
mov
xchg
lret
add
dec
dec
push
sbb
dec
ja
mov
mov
test
jle
or
ljmp
jne
mov
popf
cwtl
nop
xchg
xchg
fs
sbbb
outsl
jbe
add
xor
pop
add
xor
mov
mov
mov
leave
cli
mov
data16
xchg
sbb
test
inc
adc
sbb
int
push
or
mov
mov
mov
incl
jb
xchg
js
sarb
hlt
push
dec
arpl
aaa
sub
popa
shll
test
mov
loopne
xchg
cltd
sbb
notb
call
mov
stc
push
adc
mov
push
in
in
and
or
ficoms
mov
cli
jle
adc
ror
clc
cmc
and
sub
push
ss
in
in
jge
mov
sbb
popf
scas
orl
cmp
cmc
sub
and
inc
sbb
push
adc
mov
xchg
pushf
mov
mov
jge
iret
ljmp
int
lahf
jge
in
pop
and
in
add
enter
xchg
popf
orb
out
push
xlat
jb
fidivl
and
push
dec
fiaddl
lahf
adc
and
cli
add
pop
sub
adc
xlat
mov
in
mov
mov
pushf
pop
lret
clc
shr
push
xor
insl
aaa
aas
inc
jnp
jno
and
rol
clc
xchg
adc
jno
mov
fisttps
mov
inc
in
jg
pop
pusha
xchg
rorl
jae
mov
mov
dec
sub
imul
lcall
jmp
cmpsb
scas
lahf
mov
xlat
or
iret
pop
pop
es
mov
and
mov
test
add
scas
push
mov
in
fiaddl
repnz
cmp
xor
out
mov
es
push
iret
sbb
add
mov
rolb
fsub
in
cmc
or
adc
fsubp
sbb
sub
gs
push
jp
mov
pop
loop
outsl
fistpll
rcr
xlat
adc
loope
pop
cmp
mov
mov
subl
imul
xchg
mov
fldenv
stc
xor
xchg
subl
insb
jne
ja
pop
push
xor
cmp
clc
add
icebp
call
orl
push
fldlg2
push
or
fwait
shr
ja
xor
add
push
jle
inc
test
je
push
bound
add
mov
mov
mov
divb
rol
in
stos
ficoml
fisttpl
int3
cmp
sbb
and
fs
xor
mov
pop
xor
fdiv
fiaddl
mov
sub
cmp
fs
je
mov
xor
dec
dec
adcb
lods
pop
or
stos
cmp
xchg
int3
push
inc
lods
sub
xchg
cmp
mov
xchg
rorb
sbb
inc
cmp
or
divl
rolb
inc
mov
mov
sub
jb
push
jle
shr
test
scas
aas
repnz
outsb
dec
push
xchg
sti
loopne
push
pop
jge
inc
inc
scas
or
loopne
lahf
loopne
sbb
push
sub
inc
dec
ss
sbb
jl
mov
stc
popf
mov
sbb
fnstcw
test
dec
xor
jmp
pop
jbe
sub
xchg
or
cs
mov
xchg
mov
push
and
cmpsl
push
jge
test
jae
insl
fwait
fs
stos
mov
imul
popf
mov
jmp
sti
insl
inc
push
arpl
and
or
mov
dec
mov
loop
and
dec
inc
insb
adc
and
cmc
sbb
lahf
lods
mov
dec
adc
js
and
inc
mov
sbb
adcb
cmpsl
fisttpll
scas
repnz
jne
sbb
repnz
jbe
pop
data16
xchg
xor
xor
mov
negl
mov
js
xor
xchg
pop
mov
mov
js
mov
stos
push
clc
fsubs
jns
xor
clc
add
icebp
es
jo
xor
aaa
aaa
jno
mov
cltd
or
js
jl
out
cmpsb
mov
cmp
jge
shll
cs
inc
jno
jle
in
mov
push
sbb
stc
daa
cmpl
dec
jmp
sbb
inc
lret
xchg
aas
mov
or
add
std
pop
mov
and
cmpsl
lahf
inc
imul
push
addb
loop
cli
push
hlt
cld
daa
pop
and
or
jne
vsqrtpd
cmpb
mov
and
std
sub
mov
pop
mov
mov
ret
ja
stos
mov
sbb
ret
sbb
popa
pop
cmpsb
add
jb
add
out
mull
cld
das
dec
movb
pop
add
pop
mov
scas
xchg
mov
add
movsl
loopne
push
and
into
inc
cmpsl
cmp
gs
inc
push
lret
lock
jmp
leave
icebp
das
testb
cmp
sub
or
outsb
lods
bound
push
mov
es
scas
jecxz
es
cmpsl
es
dec
int3
add
ret
xchg
inc
jl
mov
pop
dec
aas
lret
movsl
or
and
stos
clc
xor
xor
test
mov
pop
lret
int3
loope
or
jmp
mov
push
pop
cmpb
dec
push
cmp
lds
cmc
pop
jmp
fwait
add
add
lock
imul
adc
test
or
cmp
jo
push
jecxz
jbe
imul
xor
arpl
shll
add
pop
rclb
pop
inc
roll
out
nop
inc
dec
addr16
fadd
dec
shlb
or
cmpl
xor
aas
into
push
jge
dec
jl
pusha
sarl
aas
leave
mov
ret
iret
sub
repz
arpl
push
pop
jo
jo
inc
mov
scas
leave
dec
xor
cli
incb
and
ss
aad
sti
add
popf
fwait
movsb
or
loope
lret
shrl
lret
cmp
inc
lds
pop
imul
adc
int3
aam
sar
fcomip
fcmovbe
call
aaa
pop
fists
imull
lea
push
imul
adc
adc
in
cmp
inc
dec
push
sbb
xchg
sub
outsb
insl
jb
ret
add
jne
add
inc
mov
shlb
pop
inc
jno
push
leave
mov
cmp
mov
icebp
mov
das
mov
inc
addr16
aas
sub
je
outsl
pop
fcmovnbe
cmpsb
shlb
xchg
jnp
sub
scas
sbb
shll
sbb
nop
push
jmp
inc
shl
imul
fabs
ror
push
xor
push
and
dec
mov
leave
pop
cmp
divb
and
sub
inc
hlt
cmpl
ljmp
ret
ret
inc
shll
add
lds
pop
sub
sub
mov
lods
fildl
jge
out
lret
int3
in
mov
xor
adc
leave
pop
fs
out
outsl
sbb
xchg
lds
lcall
sar
test
aaa
pop
fiadds
xchg
pop
lret
nop
mov
outsl
shl
mov
dec
mov
push
mov
ja
mov
mov
cmpsl
outsb
sahf
sub
sahf
movsb
mov
daa
loop
shll
stc
pop
xor
push
loopne
cmp
push
lock
pop
lea
sbb
movsb
dec
dec
dec
push
dec
inc
js
shll
xor
pop
loope
sub
and
lret
bnd
shlb
and
test
rolb
xchg
push
out
rorl
popa
hlt
fwait
push
cmc
cld
rcrb
lods
push
push
xchg
mov
and
add
push
mov
or
test
dec
aam
sbb
ret
or
jnp
sub
jle
insb
imul
movsl
jbe
call
mov
ficoms
imull
mov
mov
in
out
push
lcall
pop
jge
xchg
mov
cmp
xchg
sbb
dec
add
and
outsb
ja
lea
imul
xor
pop
es
into
push
pop
cmp
stos
js,pn
cltd
and
push
inc
rcr
mov
daa
test
ffreep
jmp
es
add
jae
xor
mov
ror
add
jmp
adc
cmp
mov
sub
adc
aam
loop
out
jge
xlat
adc
xchg
stos
sbb
frstor
and
push
dec
adc
lcall
xlat
fdivp
jmp
or
enter
adc
pop
jnp
movsb
add
or
adc
leave
adc
mov
or
xor
xchg
popf
movsb
xor
inc
xor
cmp
popa
in
ljmp
mov
dec
pop
dec
daa
jb
adc
mov
inc
js
cmp
lret
push
fistpl
and
xor
add
pop
jecxz
xorb
sbb
inc
movsb
jp
pop
jb
and
jge
pop
fs
cwtl
jne
jecxz
mov
jne
mov
cld
ja
fisttpll
out
gs
inc
inc
sub
or
inc
outsl
jp
pop
test
ret
hlt
shll
or
sbb
inc
cmp
add
adc
jg
xchg
movsl
jnp
jno
jmp
into
sahf
adc
cld
jg
into
inc
pop
es
ss
jno
arpl
pop
stos
pop
lcall
stos
repz
push
xchg
jmp
cmp
addr16
jnp
test
arpl
fcomps
les
fsub
cmp
ds
pop
jl
jb
pop
fs
cwtl
xor
data16
lds
jns
aad
in
sbb
and
add
sahf
and
mov
lds
lcall
mov
pop
inc
mov
jae
or
sub
lret
dec
iret
ljmp
xchg
pop
hlt
pop
fimull
mov
dec
push
ret
add
sub
mov
xchg
cmp
call
add
push
sub
add
cmp
pop
loope
lahf
or
aam
adc
xchg
and
aaa
adc
mov
cmpsl
fidivrs
and
and
sti
pop
xchg
push
jge
jbe
jae
add
fs
and
fcomps
mov
sbb
mov
or
int3
loop
je
or
rclb
pop
push
mov
sbb
in
xlat
and
lea
inc
mov
scas
dec
fucom
cwtl
hlt
out
mov
dec
rolb
cmp
aaa
nop
call
addr16
push
xorb
cli
add
cmp
add
push
adc
test
out
leave
mov
cwtl
pop
daa
pop
jmp
loopne
test
ss
inc
rcll
cld
out
and
lods
xor
fsubs
insb
sbb
mov
jae
xor
stc
loope
stos
fimuls
leave
cld
sub
and
stc
add
or
jo
jle
or
je
test
mov
loope
out
cltd
push
mov
ret
idiv
push
pop
pop
inc
mov
mov
aam
fwait
mov
lods
mov
jno
or
movsl
cmp
ret
ret
push
sbb
xor
push
push
subb
cli
fmull
push
mov
pop
sub
xor
dec
pop
jge
loop
pop
in
mov
and
pop
mov
mov
jb
testb
gs
pop
jp
cmpsl
out
pop
loop
xor
out
cs
in
sbb
pop
inc
ja
mov
push
pop
data16
sahf
xorl
mov
fsts
or
dec
pop
pop
icebp
shlb
mov
inc
test
call
or
jns
sub
xlat
dec
add
pop
cmp
lods
adc
push
loopne
jmp
or
and
xor
inc
dec
mov
and
insb
dec
push
les
in
jl
cmpsb
scas
lret
push
adc
stos
ds
insl
gs
cs
inc
xchg
fwait
mov
lcall
in
mov
std
inc
stos
inc
dec
dec
in
jg
insl
and
xchg
cmp
imul
push
mov
mov
iret
dec
inc
jae
addr16
addr16
popa
stc
fs
lea
pop
inc
cmc
jbe
int
sub
push
pop
gs
bound
pop
cwtl
cmp
ljmp
loop
pop
push
lds
divl
jg
test
mov
push
fildll
test
xor
pop
and
pop
daa
das
push
popa
xchg
jno
test
mov
xchg
sub
xchg
pop
adc
jl
xchg
sub
lret
rcr
loope
cld
into
ror
into
stc
lods
push
adc
and
dec
mov
mov
rol
fldcw
scas
in
fmull
es
ds
jge
out
and
lret
cmpsl
mov
addr16
fwait
push
gs
sbb
or
and
xor
push
rorb
pop
imul
pushf
mov
std
push
fmull
mov
mov
mov
pushl
pop
mov
mov
jp
outsl
jecxz
into
pop
mov
cmp
mov
cld
adcb
enter
loopne
mov
sbb
push
ljmp
pop
sbb
cmp
push
shll
xor
fidivrs
mov
lcall
dec
push
push
push
push
fs
mov
mov
jecxz
enter
pop
xchg
add
cmpl
push
insb
cmpsl
jns
in
sarl
addr16
pop
or
cmp
or
call
sbb
bound
add
inc
std
adc
mov
cmp
inc
dec
push
lea
stc
adcl
lret
inc
lret
stos
in
jne
jbe
and
cmc
pop
jmp
fcoml
sbb
cmp
push
ret
cs
hlt
push
aam
fst
sub
sub
aas
sbb
sbb
cmp
inc
push
frstor
call
int
cmp
add
mov
mov
jp
data16
push
and
dec
inc
add
push
add
jle
cmpsb
xchg
xchg
movb
out
mov
test
sahf
adc
out
fcoms
xor
das
sahf
loopne
adc
sahf
mov
dec
mov
lock
jmp
cmpsl
xor
lods
out
push
pop
sbb
xor
xor
movsb
push
xchg
mov
inc
mov
mov
xor
add
pop
popa
imul
xchg
mov
out
mov
add
ficoms
push
dec
jnp
and
sub
lret
mov
xor
xor
xor
add
into
pop
pop
xchg
aas
lods
test
mov
imul
cmc
cld
add
and
inc
dec
sbb
repz
das
outsl
pop
inc
outsb
outsb
arpl
insl
sahf
or
xor
sub
inc
imul
push
mov
movsb
and
leave
rcrl
out
cli
add
xor
xchg
stos
push
mov
ja
scas
out
js
into
pop
mov
pop
loope
jbe
out
cmp
outsl
push
cmp
aaa
and
pop
lcall
dec
std
pop
enter
call
push
pop
pop
inc
inc
jns
mov
jns
aam
aad
test
adc
inc
cld
add
cmp
push
pop
jae
mov
sub
out
lods
mov
or
push
dec
and
push
push
es
fwait
and
mov
xchg
ret
lea
xchg
fidivs
adc
in
fninit
int3
add
or
insl
and
cmp
sbb
subb
addl
cmp
fwait
and
inc
aas
dec
push
pop
js
data16
orl
je
adc
int
ret
xor
push
mov
dec
mov
lods
pop
cwtl
jns
loop
mov
mov
sub
pop
nop
pop
aad
and
cmp
scas
xor
gs
add
mov
ss
cmp
psubb
push
sarb
ss
mov
push
fdivrs
add
fdiv
test
push
or
sti
dec
rorl
aad
test
roll
jmp
cmpsb
sbb
push
push
xchg
popa
imul
xchg
add
mov
cmp
rorl
mov
es
and
xor
dec
mov
sti
xchg
aam
and
xor
mov
test
aad
ds
lods
loop
movsl
add
pop
pop
ficompl
in
hlt
fstl
divl
cmp
jg
mov
popf
stc
mov
aad
fcmovbe
sub
incl
sbb
orb
mov
jmp
lret
mov
xor
adc
mov
cmpsb
push
mov
imul
dec
ds
dec
dec
push
or
lock
iret
cwtl
movsb
test
js
rclb
stos
ror
sahf
cmp
popf
inc
mov
jge
jns
xchg
popa
bound
mov
cltd
mov
jl
sbb
mov
lods
cld
jno
mov
imul
popa
xchg
into
pop
jle
out
int
lds
into
sbb
push
push
add
xor
mov
mov
mov
arpl
push
fcmovnu
sbb
sbb
lods
inc
ret
shlb
in
jl
fwait
sbb
ret
and
in
hlt
std
cld
xchg
and
pop
mov
jg
test
push
xchg
aaa
aad
xchg
sub
ret
insb
idivl
sarb
xlat
inc
lret
in
mov
mov
scas
xor
sbb
and
jb
xchg
mov
scas
sub
fucomip
gs
add
shll
lcall
lar
cmp
call
shlb
lods
fiadds
sti
mov
enter
dec
sar
sub
inc
jo
lcall
les
mov
stos
out
sarl
dec
into
adc
and
push
push
mov
and
out
pop
mov
leave
out
inc
inc
cmp
sub
icebp
jnp
pop
mov
mov
cmp
adc
call
fninit
adc
add
imul
jl
loop
dec
push
fwait
sub
rclb
int3
mov
jmp
aam
push
xor
push
lea
xchg
insb
jne
dec
in
xchg
aas
push
repz
lds
sbb
sti
call
lcall
dec
js
mov
dec
out
cli
adc
xor
loop
dec
jg
ja
xchg
dec
mov
push
out
out
imull
lret
adc
into
push
jnp
pop
sbb
inc
aas
or
mov
nop
loopne
jne
mov
sub
adc
inc
adc
xorl
mov
mov
add
jmp
scas
cwtl
mov
cmpsb
and
push
mov
xchg
sahf
popf
icebp
push
mov
fimuls
pop
imulb
xlat
leave
hlt
dec
les
rorl
out
outsl
sbb
mov
push
mov
push
shlb
cmp
idivb
movsl
sub
jne
sbb
int
dec
dec
lret
push
sub
and
cmp
aaa
insb
repz
ja
inc
int
popf
adc
idivb
in
ss
jb
cmp
stos
cs
repnz
sbb
or
mov
dec
rcll
sbb
arpl
mov
data16
popl
scas
cld
das
fists
pop
ret
sub
outsl
js
pop
mov
fs
dec
inc
jae
scas
fistpll
outsb
fdiv
pop
inc
xor
pop
dec
inc
cs
jns
cwtl
jae
setns
mov
lock
stc
orb
movsb
sti
ror
push
int3
cmp
jge
jle
sbb
mov
scas
mov
lds
incb
into
mov
mov
jg
movsl
orl
leave
inc
lret
stos
sbb
jb
enter
mov
cmp
in
push
movsb
inc
mov
pushf
and
fdivl
mov
jo
cmove
daa
cmp
push
cmp
and
mov
popf
xchg
lods
fsub
lds
sbb
aaa
sbb
xchg
cwtl
stos
pusha
lahf
enter
mov
or
and
adc
cli
repnz
pop
popa
loopne
jne
inc
cmp
mov
mov
mov
cmp
pop
pcmpgtd
and
adc
cmpsl
jbe
xchg
jne
lods
push
and
and
push
pop
shll
cltd
pushf
adc
inc
jnp
and
leave
loopne
icebp
clc
lods
adc
xchg
inc
sub
jmp
les
pop
dec
stos
jo
sti
jbe
xchg
data16
ja
pop
aad
sub
int
add
movsb
xor
les
aam
andb
jp
addr16
jge
in
repz
repz
or
arpl
je
or
scas
sub
push
pusha
push
xchg
lds
in
in
cmp
dec
push
fimull
test
movsl
pushf
daa
jg
sub
sarb
add
sub
into
pop
cmp
mov
lcall
mov
or
xor
fiaddl
jb
jno
loopne
xchg
inc
push
ret
push
xlat
mov
out
push
mov
in
pop
enter
pop
movhps
stc
outsl
js
sub
pop
dec
mov
pop
inc
mov
jae
and
mov
adc
popa
pop
test
xchg
xchg
cltd
mov
adc
ret
rolb
dec
jle
lods
movsl
mov
mov
sbb
push
dec
lds
dec
sti
jp
jecxz
ds
arpl
stos
mov
xorl
or
push
repz
orb
rcrl
or
or
cld
xor
mov
test
dec
xchg
imul
addl
sbb
sub
loope
add
imul
bound
push
rolb
sahf
xlat
subb
xor
sub
sub
insl
loopne
pop
jae
pop
cmp
in
pop
js
out
or
sbb
mov
inc
dec
data16
pop
pop
sub
pop
mov
shrl
xchg
or
icebp
jl
fucomip
nop
dec
push
imul
cmc
imulb
adc
ss
push
pop
into
divb
hlt
adc
sbb
lea
cmp
in
cmp
sbb
xor
cltd
mov
std
and
push
mov
cmp
mov
sbb
fisubrs
cmp
into
xchg
rorb
movsl
stos
into
add
out
mov
in
or
mov
mov
gs
push
rcr
jecxz
aam
es
adc
xchg
and
mov
xchg
cli
sbb
xor
push
or
sbb
out
push
mov
popl
xchg
xchg
pushf
addl
inc
dec
adc
push
dec
ds
rcr
loop
stos
subb
push
cli
sub
mulb
sub
in
or
test
push
mov
jb
das
aaa
ljmp
js
inc
cmp
xchg
jecxz
inc
add
xor
jg
sub
mov
mov
xchg
decl
inc
xchg
loope
flds
or
scas
jl
xor
pop
enter
xchg
dec
clc
in
xchg
mov
fwait
cs
pusha
out
cmp
cs
push
stc
push
dec
xchg
mov
std
stos
mov
mov
rep
dec
add
inc
mov
inc
inc
fucom
xchg
enter
push
mov
shrl
lahf
cmp
lods
pop
fs
outsb
test
lds
pop
inc
inc
test
cmp
fucom
lret
inc
dec
push
pop
out
std
and
lret
mov
lcall
rcr
sbb
push
pop
push
ja
add
inc
dec
dec
cmpl
loope
out
mull
daa
xor
push
push
xor
add
adc
orb
pop
push
mov
cwtl
mov
and
add
testb
dec
ss
loope
mov
jb
js
pusha
lock
add
popf
cld
sbb
rcr
jmp
cmp
sub
jne
fisttpll
add
and
or
cmp
imul
jb
pop
sub
lret
rcr
push
rcrb
loopne
push
lcall
xor
aam
push
test
cmp
pushf
movsl
and
hlt
aam
in
mov
sub
cmp
in
mov
fists
jnp
inc
dec
xchg
popf
xchg
aad
in
mov
cmpsb
ret
jecxz
fs
xorb
mov
xor
mov
push
add
add
stc
and
xchg
fadd
mov
or
mov
xchg
repz
cwtl
sbb
gs
fimuls
sbb
jnp
stos
das
dec
jbe
ficompl
jae
orb
nop
popf
cli
test
shl
in
ds
mov
sub
cltd
mov
out
das
pop
xchg
pop
jl
ljmp
pop
push
popa
mov
cmp
sbb
jg
roll
jb
popf
or
or
cs
int
icebp
decl
aaa
xchg
xchg
adc
push
jnp
and
xchg
fstpl
jno
cmp
divb
dec
and
mov
fcoml
hlt
mov
ljmp
sub
cmp
cwtl
js
fs
jp
inc
int
hlt
outsl
outsb
enter
sbb
cmp
inc
sbb
mov
aas
in
sbb
ljmp
cmp
cmp
insb
popa
subl
inc
jno
push
push
imull
jg
rcrl
push
pop
adc
out
mov
xor
js
xchg
mov
add
jecxz
in
mov
cmp
mov
add
icebp
sbb
mov
mov
pusha
push
fsubrl
mov
les
out
in
push
sbb
lods
jnp
sbb
push
fdivp
push
jne
fwait
adc
in
and
pop
add
dec
imul
mov
jecxz
mov
adc
sbb
jmp
in
decl
or
lods
mov
push
dec
shll
testl
dec
inc
popf
adc
and
adc
popf
dec
push
jne
aad
push
xorb
jb
sbb
inc
push
mov
call
pusha
insl
jb
xchg
rclb
cli
fcmovu
rolb
sub
cmpsl
pop
sub
inc
loopne
adc
pop
mov
mov
mov
mov
jnp
shlb
cltd
mov
mov
mov
adc
cmpsb
add
dec
inc
xchg
inc
adc
and
sbb
push
jns
sbb
cmp
leave
adc
cmp
push
movq
jge
je
in
mov
jge
jg
adc
idivb
leave
iret
rcl
inc
adc
and
bound
add
outsl
add
dec
mov
push
cli
inc
and
cmp
pop
imul
out
lods
mov
fdivrl
movsb
add
xchg
popl
and
xor
inc
lods
ds
xor
and
fwait
jne
arpl
call
pop
sti
aad
in
push
les
xlat
dec
lcall
and
jb
rcrb
mov
sbb
cmpsl
dec
sbb
aaa
jg
jg
das
push
or
mov
dec
iret
fisubs
pop
mov
cmp
inc
stos
das
mull
push
and
outsl
and
mov
cmp
enter
or
faddl
adc
and
outsb
imul
jns
stc
dec
push
xchg
in
in
loope
mov
and
in
ret
cld
ss
hlt
jmp
popf
xchg
decb
or
push
mov
xchg
lock
es
inc
mov
push
push
add
test
sub
mov
xchg
inc
xor
mov
sti
add
and
sub
cmp
imul
ljmp
or
mov
sar
data16
push
fldenv
nop
pop
push
xor
lds
mov
add
sub
dec
dec
mov
sbb
dec
xchg
sub
mov
or
add
add
jb
cmova
adc
mov
cwtl
iret
out
outsl
dec
xlat
ret
jae
aas
in
jae
outsl
aas
inc
inc
imul
push
clc
repz
call
sub
call
jno
pusha
sub
cmp
push
fabs
pushf
nop
mov
and
adc
add
xchg
mov
popa
xchg
insb
jbe
mov
ret
inc
sbb
sub
adc
pop
bound
dec
cmp
ljmp
dec
jmp
ret
mov
je
sub
ss
pop
les
cmp
pop
movsb
cmp
adc
in
dec
fsubl
xchg
sbb
cmove
hlt
jns
pop
ud2
xor
movsl
lea
popf
jb
mov
dec
dec
jp
in
cmc
ret
dec
test
sbb
into
mov
shll
xchg
lcall
rolb
inc
mov
add
outsb
ja
cmp
cmp
or
adc
mulb
icebp
sbb
aaa
aas
div
pop
xchg
cld
push
mov
mov
clc
add
xor
arpl
jns
orl
dec
fldl2t
jmp
rcr
loope
cmp
aaa
or
pop
popa
imul
popa
imul
lret
cld
jne
test
adc
and
adc
xor
jb
jnp
ds
push
mov
mov
add
cmc
icebp
lret
sarl
inc
dec
dec
in
jg
jb
dec
push
ds
dec
push
bound
pop
cli
aam
pop
cli
popa
rcrl
pop
aad
mov
jne
imul
add
aad
rclb
aas
inc
sbb
xchg
dec
mov
mov
stc
icebp
call
fimull
cmp
pusha
clc
arpl
push
imul
push
push
dec
mov
popl
xor
xor
xor
add
dec
cmp
and
dec
rcl
into
test
add
enter
in
int3
enter
arpl
mov
mov
shll
dec
jl
add
jecxz
leave
shll
xor
cld
je
cmc
test
lods
rorb
mov
es
push
lea
stc
addl
cmp
push
pop
sub
repnz
adc
sbb
out
and
addr16
jp
xchg
ds
jecxz
jecxz
mov
or
aas
mov
or
xlat
and
adc
sbb
int
call
and
sbb
pop
rclb
orb
cmp
mov
xchg
lret
mov
sub
das
popf
and
jno
xor
inc
xor
scas
mov
cltd
and
sbbl
xor
aas
inc
cli
jae
xor
aas
xor
cmp
cmpsb
iret
inc
enter
add
sub
out
lock
adc
ds
rorl
arpl
decl
lds
or
mov
mov
ds
xchg
add
stos
jbe
push
sub
out
mov
add
int
xor
stc
sti
xor
mov
mov
jne
jnp
imul
push
adc
add
xchg
xor
bound
sbb
sub
pop
jne
dec
cmp
insb
mov
sysret
rorb
fsub
std
adc
dec
cmc
sub
mov
and
iret
repz
lods
aad
sbb
cmp
gs
xchg
pop
or
mov
ret
bnd
clc
mov
shrl
push
leave
pusha
data16
inc
insb
test
dec
jl
mov
cmpsl
sbb
mov
les
cs
xor
pop
cli
clc
xor
popa
mov
dec
call
stc
decb
adc
add
std
stc
ljmp
fwait
jae
pop
xchg
mov
jae
jns
xchg
mov
lret
rorl
aam
mov
push
push
lcall
imul
mov
push
xchg
or
out
ja
mov
out
sar
cmp
push
adc
push
es
jnp
mov
aas
lret
into
int
cli
jp
sbb
sbb
sub
faddl
jb
pop
loopne
xor
xchg
sbb
inc
int3
xchg
mov
clc
int3
aam
loop
mov
in
add
add
insb
jne
mov
jb
movsl
minps
test
cmc
std
adc
mov
sub
adc
pusha
leave
dec
shlb
add
sbb
fistps
mov
jns
xchg
xor
iret
iret
xlat
mov
nop
leave
jae
movhps
mov
stos
iret
xor
adc
dec
cmp
and
dec
shl
popa
fildll
jmp
ficomps
or
jle
jo
aas
dec
inc
xor
jo
mov
jmp
mov
stc
add
out
clc
and
sbb
enter
mov
adc
fstpl
inc
aad
or
movsl
jl
adc
into
shlb
jecxz
mov
pop
mov
mov
pop
ja
cmp
cmp
add
mov
push
pop
insl
cld
add
notl
aas
aaa
add
or
sbb
fidivl
test
jne
aad
loope
movsl
lods
hlt
jg
and
fistps
in
cmc
fimull
mul
push
and
mov
jp
xchg
pop
loop
lock
push
fwait
and
inc
add
adc
jb
jno
cmpsl
xchg
mov
mov
xlat
add
push
sub
pop
or
outsl
pop
pop
addr16
orb
js
jecxz
mov
sbb
out
adc
call
push
pop
add
imul
fwait
bound
loope
dec
filds
xchg
inc
mov
sbb
ljmp
cmp
mov
mov
jle
mov
loop
mov
leave
ds
fisubrs
mov
dec
push
adc
mov
xchg
xchg
leave
cmc
rcr
xchg
lcall
and
call
xor
push
cs
mov
arpl
inc
filds
movsb
lods
mov
aaa
movsl
aam
in
mov
pushf
xchg
addr16
pop
pusha
xor
and
lods
jne
jp
push
fucomp
data16
arpl
xor
cld
add
xor
pushf
jae
jb
iret
out
fdivs
pop
test
popa
jmp
dec
subl
loope
loop
xlat
loop
scas
adc
pop
cld
dec
dec
test
mov
mov
aaa
ss
enter
test
mov
or
add
mov
or
pop
lret
jae
aaa
rorl
mov
sbb
jecxz
cmp
inc
aam
pop
out
inc
orb
addr16
xchg
jbe
xchg
jmp
jnp
push
xlat
sub
in
rcr
or
lock
sub
mov
adc
xor
adc
leave
sub
dec
repz
dec
rcrb
repnz
mov
pushf
and
add
lods
xlat
jp
lods
loop
jnp
xor
cmp
orl
pop
ficompl
push
pop
jg
add
aad
push
mov
add
mov
out
andb
hlt
jp
cltd
sbb
outsl
xchg
out
mov
mov
rcr
or
sub
aad
pusha
or
push
jge
lock
sub
iret
pop
xchg
cltd
cli
insl
out
int3
daa
push
xchg
icebp
xor
jo
push
xchg
add
jno
cmp
xchg
jecxz
add
xchg
and
stos
cmp
icebp
and
xor
dec
inc
cltd
mov
imul
mov
and
dec
inc
or
sbb
into
push
dec
jbe
push
pop
mov
fstl
addl
mov
ds
or
mov
inc
jge
icebp
ret
lret
mov
mov
cmc
js
cmp
fucom
ja
or
inc
dec
pusha
in
inc
jp
push
data16
jg
mov
das
daa
add
and
cltd
insb
jne
or
aad
arpl
fdivs
lods
mov
push
stos
aad
pop
in
push
lret
push
pop
dec
sub
mov
sub
rcrb
std
jns
jne
or
xor
or
push
enter
adc
mov
push
pop
iret
xlat
lock
mov
cwtl
outsl
xchg
mov
jle
dec
ret
imul
xor
or
lock
imul
add
pop
pop
dec
dec
addr16
mov
cmp
jle
pop
xor
test
jae
mov
test
push
into
jmp
incb
inc
mov
sub
ss
je
jnp
mov
scas
orl
loop
fcoms
cmp
inc
inc
pop
xor
cmp
sbb
dec
push
pop
jl
add
pop
in
mov
push
adc
adc
lods
cmp
jl
mov
mov
jle
aam
and
sbb
and
test
inc
ret
xor
int3
adc
in
xor
mov
mov
xlat
push
repnz
adc
imul
push
lds
mov
jg
xchg
and
mov
sbbb
lcall
xchg
or
dec
push
ja
aaa
cmpsb
nop
nop
sbb
ret
inc
popf
rorb
nop
xchg
xchg
cltd
into
gs
and
and
push
adc
adc
out
outsl
xor
mov
ror
outsl
mov
or
imul
pusha
xchg
pop
sub
inc
lds
pusha
mov
jmp
fists
shlb
shll
imul
add
ret
and
ficoms
in
iret
jle,pn
insl
push
mov
xchg
pusha
lret
fs
ljmp
lcall
dec
in
sbb
xor
adc
lods
ja
xchg
xchg
clc
gs
ret
das
mov
jo
cmp
mov
enter
mov
rcr
sub
shrl
and
jp
rsqrtps
test
leave
xchg
jmp
out
cli
jnp
iret
xlat
fildll
dec
ds
inc
dec
push
out
out
imul
andl
addb
add
aaa
mov
sbb
mov
lods
daa
mov
aas
enter
test
test
icebp
stc
sub
loope
pop
add
jle
in
sbb
int3
mov
mov
mov
out
dec
sub
push
out
cmc
insb
dec
mov
ss
fcmovnu
pop
jl
ret
lret
lar
data16
add
adc
ja
inc
dec
push
cmp
scas
in
test
sbb
or
ljmp
test
sub
add
call
sahf
push
cmpsb
clc
clc
inc
stc
int
enter
mov
inc
adc
aad
daa
stos
sbb
cmp
rcr
push
jb
adc
mov
js
add
icebp
sbb
sub
push
mov
ja
pop
fcomip
jbe
aam
es
adc
aaa
fdivr
jno
outsb
loop
loop
push
scas
sbbl
and
mov
dec
sub
jmp
push
adcl
mov
inc
rorl
in
ret
out
rcr
mov
scas
push
mov
imul
jnp
sub
xchg
sahf
mov
fwait
roll
mov
jne
pop
fildll
mov
inc
jge
icebp
ret
lret
into
fs
add
movsb
lret
cmp
ficomps
sub
mov
push
pop
inc
jp
cli
int3
out
mov
pop
pushl
aam
and
or
sbb
clc
mov
clc
xchg
lods
mov
sbb
sbb
dec
and
sub
jp
loope
mov
stos
mov
sbb
push
push
loop
iret
cli
sub
or
xor
pop
sahf
xchg
iret
cltd
data16
push
into
dec
lahf
cmpsl
nop
push
push
aaa
add
mov
lret
loopne
aaa
aas
inc
sti
or
outsl
js
mov
loop
shrb
dec
fucomip
push
mov
pop
xor
xor
mov
int
imul
test
jmp
outsl
loopne
jbe,pt
xchg
xchg
clc
into
jmp
mov
scas
fisttpll
dec
sub
bound
pop
clc
mov
ret
xchg
fwait
mov
xchg
int
aas
adc
push
mov
ss
imul
mov
jl
insb
out
lret
and
xchg
sbb
stos
pop
pop
push
dec
cmp
cli
movsl
or
mov
addr16
out
loop
fidivrl
movsb
sub
pop
les
gs
popw
lret
lcall
adc
pusha
pop
cmp
pop
aas
and
xor
pop
pop
scas
lahf
cmpsl
mov
filds
bswap
in
iret
xlat
into
enter
pop
movhps
xor
and
mov
enter
clc
mov
daa
stos
cmp
mov
or
jl
or
leave
pop
jb
stos
scas
clc
shrl
jmp
mov
sbb
push
mov
repz
into
lea
add
push
jle
mov
out
ss
stos
mov
xchg
mov
fninit
mov
cmp
ss
push
cmp
stos
jge
push
movsb
dec
mov
mov
adc
lods
loop
inc
sub
cmp
fs
cmp
lret
xor
test
mov
sbb
xchg
adc
in
sar
test
aaa
pop
xchg
inc
dec
xchg
pop
lret
aaa
mov
outsl
jno
ret
lahf
loop
repnz
push
push
adc
adc
sbb
iret
jno
jecxz
nop
push
out
iret
inc
test
cmp
ds
xchg
push
mov
mov
cltd
into
int3
cmp
and
mov
mov
add
and
pop
mov
movsb
pushf
push
cltd
push
xchg
cltd
mov
call
fnstcw
or
sub
xor
adcl
cmpsb
jbe
push
pop
gs
mov
xchg
into
fdivrp
fs
ds
add
fwait
addl
mov
xor
jnp
imul
std
roll
fadds
mov
xor
out
jl
pop
jne
movsb
lods
and
jne
xchg
pushf
xchg
xlat
mov
in
hlt
cld
test
adc
and
mov
inc
insb
sbb
mov
add
xor
cmpsl
sub
add
arpl
pop
gs
int3
ret
mov
mov
jmp
inc
mov
loopne
data16
jp
lahf
pop
sub
and
mov
push
mov
idiv
call
bnd
push
adc
rorl
cwtl
nop
cmp
pop
stos
test
and
xor
and
pop
icebp
and
xor
mov
jae
cltd
or
dec
mov
jmp
mull
jne
and
inc
aas
pop
sub
mov
dec
sbb
cmc
movsl
test
pop
fsubr
dec
push
es
sbb
adc
pop
xchg
jae
subl
ret
lret
sarl
cwtl
aaa
adc
and
adc
filds
pop
push
jl
ja
pushf
or
fidivl
scas
mov
js
adc
and
testl
lods
mov
xor
fstp
in
loope
fstl
aad
mov
cmc
std
add
insl
mov
pop
pop
xchg
shrb
fcmovu
loop
ficomps
movsl
sub
daa
jmp
jae
jno
inc
cmp
mov
xchg
into
push
aad
cmpsl
sarb
mov
mov
aas
negb
push
push
jle
imul
shlb
lea
mov
inc
sti
pop
adc
mov
push
and
aam
iret
mov
mov
mov
cli
jno
inc
cld
pop
fistl
mov
xchg
outsb
test
insb
scas
mov
shrl
push
fistps
push
fstpl
sub
clc
jg
arpl
xchg
pushf
cmp
mov
test
adc
xor
pop
loop
jnp
inc
push
mov
cmpsl
push
xchg
jns
ja
fistps
std
cmpsl
inc
xchg
cli
push
ret
dec
sbb
scas
mov
mov
mov
jge
lea
lea
cmc
std
sbb
dec
rolb
fisttps
dec
push
pop
gs
push
nop
stos
jo
mov
and
push
dec
pop
adc
and
inc
mov
sub
fistps
rcrb
cmp
pop
cld
aaa
dec
pop
repnz
xor
sbb
mov
mov
fwait
ror
sub
sbb
xor
inc
dec
xor
shll
hlt
imul
sahf
test
and
jmp
out
sbb
movsb
push
stos
adc
into
xchg
push
ljmp
push
sub
inc
push
test
icebp
jnp
mov
jae
stos
or
xchg
adc
jmp
cmp
dec
push
cld
xor
mov
jl
mov
jp
int3
aam
mov
hlt
cld
add
addr16
ljmp
sbb
in
popf
in
sbb
fucom
lret
mov
repnz
stos
mov
mov
cli
loop
repnz
pop
inc
mov
push
rcrl
add
lock
xchg
sbb
push
jg
pop
mov
mov
out
push
dec
call
das
aaa
and
outsl
mov
push
fadds
or
sahf
pop
fwait
imul
or
inc
lahf
pop
mov
adc
jns
mov
in
jae
mov
mov
cmp
and
sahf
popf
xchg
adc
push
inc
enter
jnp
mov
es
cmc
jmp
out
jnp
xchg
insb
lcall
js
out
xchg
add
daa
mov
cmp
std
jg
dec
scas
adc
scas
and
iret
mov
int
xchg
pushf
cmpl
inc
push
in
hlt
or
xlat
inc
outsl
imul
mov
movsl
clc
call
cmp
sub
push
gs
xchg
cmp
mov
xchg
rorb
sbb
sub
sbb
sub
and
data16
ja
decl
cmp
fwait
inc
cmp
movaps
jl
aaa
jg
mov
js
push
mov
imul
fsub
mul
inc
inc
dec
add
ljmp
fwait
cltd
orl
icebp
lods
bound
stc
add
mov
pop
aam
divb
sub
scas
cmp
ret
inc
adc
scas
mov
xor
xor
shrb
aaa
xchg
sbb
lcall
inc
lret
into
int
shlb
sbb
push
cmp
rorb
lea
cmp
movsb
sub
xlat
iret
in
movsb
lods
lds
repnz
inc
test
addr16
gs
out
aad
in
clc
or
int
mov
add
in
jb
dec
call
leave
sarl
sub
sub
cli
add
adc
push
xor
mov
mov
data16
mov
out
or
push
dec
push
pop
icebp
rcrb
scas
mov
and
sub
out
clc
bound
inc
or
sbb
xor
inc
dec
arpl
popa
pop
xor
rolb
les
mov
test
mov
push
pop
icebp
jne
imul
test
into
fldcw
or
xor
jmp
or
add
fidivl
call
sbb
sbb
jmp
xchg
lds
push
push
sub
or
xorb
and
jmp
lret
cli
lods
daa
lahf
lret
dec
inc
popf
adc
and
jb
test
sub
inc
int
rorb
repnz
repnz
mov
repnz
gs
pusha
push
loop
out
jno
lret
and
inc
dec
push
jno
subb
daa
pusha
bswap
cmpsl
scas
into
enter
lahf
cmpsl
jle
push
push
xor
out
fcoms
xchg
jbe
pop
or
push
inc
ret
mov
jns
int
clc
add
xchg
inc
sub
push
pop
jl
sbb
mov
inc
mov
xchg
dec
add
adc
dec
cmpsl
push
pop
popa
or
cmp
xor
scas
jbe
mov
scas
mov
inc
adc
fsubp
mov
push
pusha
jge
pushf
lret
push
inc
lret
fwait
mov
or
push
lods
arpl
in
push
fiaddl
in
jl
data16
inc
mov
xchg
jge
lods
sbb
daa
cmp
fbstp
xor
test
lahf
jge
insl
lahf
arpl
in
cmc
cld
xchg
cmc
std
sub
cmp
gs
jb
pop
aam
stos
mov
loop
in
inc
add
push
loopne
jle
js
dec
push
aaa
jo
push
mov
jbe
mul
out
mov
add
sahf
leave
enter
sbb
jl
sbb
cmpsb
sbb
sarl
inc
cltd
sbb
pusha
fsub
call
push
stc
cs
jns
movsb
pushf
jmp
xchg
xchg
inc
iret
mov
xchg
adc
and
lods
mov
or
popa
js
shll
lahf
mov
imul
sahf
cmpsb
repz
out
rorb
push
push
push
out
sub
in
fcompp
mov
fistpl
or
add
outsb
bound
cmp
aaa
das
jp
dec
jnp
stos
add
lods
aam
adc
outsb
lea
aas
push
cmpb
dec
push
inc
jno
push
xchg
outsb
sub
mov
sub
bnd
jb
sbb
insl
push
jp
test
add
jne
jne
stc
insb
cmp
aas
xor
or
jno
mov
adc
ja
xchg
cwtl
mov
dec
mov
ljmp
out
jno
xchg
jle
mov
mov
or
add
imulb
inc
jo
mov
adc
out
mov
mov
leave
jecxz
pop
sub
in
loopne
jl
popa
ljmp
popa
aam
mov
ja
fisubrs
stos
mov
push
les
scas
jmp
jl
lods
adc
cld
pop
test
hlt
sahf
shrb
add
lods
inc
push
pop
xor
jb
test
in
mov
aam
mov
or
add
popf
fs
sub
test
insb
je
insl
fcoms
popf
movsl
mov
push
lret
cmc
std
adc
or
sub
aam
gs
test
js
mov
ret
in
push
dec
shrl
or
inc
cmpsb
sub
adc
mov
mov
cmpsl
scas
mov
out
stc
mov
incl
and
outsl
aaa
push
popa
jo
test
mov
lock
fsubs
or
aad
aaa
push
cmp
dec
push
pop
pusha
adc
jl
jno
aad
rorl
lret
push
adc
fldenv
mov
cwtl
add
jae
jle
push
cltd
popf
into
scas
movsl
aam
inc
fsubp
out
imul
fs
cmp
push
and
sahf
out
sbb
fwait
mov
lret
leave
fwait
mov
lret
cli
xor
adc
mov
cmc
mov
pushf
movsb
cs
scas
in
insb
dec
stos
mov
xchg
mov
leave
cmp
mov
outsl
mov
mov
cwtl
mov
movsb
movsb
int
and
xor
fsubl
cwtl
aas
addb
or
mov
rolb
dec
test
and
jbe
cmp
aaa
cmpsb
in
addb
jns
popa
jg
jle
sbb
mov
sub
mov
mov
outsl
aaa
ljmp
shrl
sti
sub
inc
cmpsl
xor
lcall
sbb
xor
jo
sahf
sbb
fisubs
ficomps
mov
enter
inc
ret
cld
ss
loopne
neg
addb
cmp
lret
pushf
cltd
stc
jbe
mov
mov
fbld
addl
and
pop
jmp
pop
cli
mov
or
sahf
mov
subb
cmp
imul
mov
in
jae
divb
aam
movl
fildl
clc
jb
and
sbb
clc
xorl
push
lret
push
xor
aam
es
xor
jg
xor
aad
inc
mov
add
mov
xlat
out
pop
pop
xor
lcall
mov
out
jns
mov
xor
push
adcb
je
pop
push
adc
push
popa
sub
outsl
push
dec
adc
mov
add
add
fsub
adc
sub
jns
out
sbb
movsl
cltd
mov
std
xchg
les
add
stc
test
sub
push
divb
aad
jbe
mov
mov
movsl
mov
cli
lahf
std
cmc
out
lock
lret
out
and
xor
jo
xchg
mov
mov
push
jmp
lods
je
xchg
iret
sbb
les
je
xchg
xchg
fists
movsb
mov
popf
cmovbe
out
aad
jnp
pop
and
inc
push
inc
mov
jp
or
cmp
ljmp
out
notl
dec
cmp
cs
and
lahf
cmpsl
scas
mov
and
orb
xchg
ror
shll
aas
push
cli
add
push
ja
data16
sub
and
push
dec
imul
push
jo
out
xchg
add
es
inc
inc
lcall
mov
sbb
clc
push
iret
outsb
pop
pusha
clc
jns
stc
mov
cltd
pusha
xchg
ror
fwait
ds
mov
xlat
jmp
pop
fisttpl
push
orb
mov
mov
fisubrl
inc
push
es
inc
pop
cmp
push
add
dec
cmp
mov
aad
and
imul
push
sub
lcall
stos
cmpsb
jl
jnp
inc
mov
mov
repnz
inc
dec
fidivl
cld
notl
lea
lods
mov
test
xchg
hlt
arpl
mov
mov
sub
mov
pop
jo
push
inc
xchg
mov
andb
rcr
add
and
ljmp
push
sub
sub
rclb
inc
add
imull
inc
adc
call
xchg
cli
addb
xchg
in
rcr
xchg
xchg
mov
stc
sub
scas
inc
dec
push
mov
push
ret
xchg
das
mov
cld
hlt
fwait
repz
ss
xor
adc
sti
mov
outsl
lods
movsl
dec
movsb
jno
bound
jl
cmc
xor
xor
ss
jne
pop
fildll
jbe
mov
or
fldt
loop
jmp
sti
into
lea
in
push
add
dec
into
adc
int3
shll
push
daa
jb
or
call
inc
aas
ljmp
jge
lea
jge
fstpl
cld
xchg
cmc
std
loop
add
sbb
jge
xor
ljmp
repz
cmc
sti
std
fsubp
or
jbe
aas
fwait
xchg
lahf
mov
jp
cmpsb
cli
shll
pop
adcl
pop
pop
outsl
xor
aas
mov
mov
fisubrl
lret
xor
es
sbb
mov
scas
orl
sub
mov
icebp
stc
loopne
and
jl
jno
jle
mov
jle
jo
mov
or
xlat
mov
loope
and
jge
jae
or
stos
and
shlb
inc
cmc
ret
lret
scas
mov
sub
scas
xchg
test
mov
mov
or
or
setb
sub
mov
repnz
xor
sbb
jne
test
jb
repz
std
add
sub
lods
sub
andb
mov
insl
cltd
pop
pop
cwtl
cmp
loop
cmc
sbbb
leave
fmuls
push
repnz
popa
pop
and
xor
imul
mov
push
out
xchg
mov
loope
es
idiv
pop
and
cmp
orb
ror
cmp
cltd
sbb
adcl
dec
mov
sbb
adc
test
mov
inc
shr
ret
push
mov
divb
cmp
insb
mov
cmp
lods
movsl
jmp
jno
pusha
push
jg
adc
adc
mov
and
or
movsl
inc
sahf
adc
xchg
popf
icebp
pop
jecxz
inc
int3
sub
inc
lea
adc
xor
mov
test
lret
cmpsl
mov
xchg
adc
sub
mov
pop
stos
pop
xor
and
lods
pop
addr16
add
cmp
cmc
std
test
or
pop
inc
insl
sbb
mov
in
mov
sub
cli
add
and
shlb
dec
mov
ja
rorl
mov
out
sub
pop
clts
add
xchg
cwtl
orb
pop
push
pop
xchg
cmp
cld
loopne
mov
mov
iret
add
pop
and
nop
mov
cmp
loope
ret
xchg
ret
ljmp
push
pop
jmp
cmp
or
xchg
xchg
popa
adc
mov
add
sbb
inc
jne
jl
push
mov
sub
fistpl
adc
add
cmc
mov
add
inc
cli
pop
loop
sbb
add
out
pushf
movsb
jge
jecxz
int3
xchg
mov
int3
mov
xor
mov
sbb
imul
nop
emms
mov
fucompp
fucom
lods
fsubr
iret
or
sbb
sub
and
pop
insl
jb
dec
mov
jb
fbld
sub
repnz
xchg
add
cli
add
dec
divl
lods
jnp
jg
arpl
mov
insl
out
movsb
shll
add
out
std
and
stos
mov
enter
push
push
push
mov
dec
hlt
outsl
push
mov
aaa
movsb
sbb
lods
push
jns
mov
icebp
clc
mov
adc
and
rcrl
imul
xchg
push
mov
aad
sahf
cmpsb
out
divb
icebp
and
push
push
stc
xor
test
sub
jmp
lret
shrl
cmp
sub
imul
xor
xchg
andb
in
jge
sbb
loop
xor
out
into
cmc
sub
jne
jge
xor
ret
lods
mov
dec
std
sahf
xlat
scas
out
fcoml
adc
fimull
adc
gs
notl
mov
jae
cltd
hlt
test
sub
or
sub
cmp
das
inc
jo
shll
mov
mov
aaa
push
xor
mov
das
and
cmp
pop
into
sbb
inc
enter
shrl
and
sbb
push
jns
pop
pusha
sbb
pop
inc
mov
mov
test
rcr
loope
mov
ret
pop
xor
push
add
push
xchg
dec
jge
je
mov
jge
sbbl
lret
inc
inc
movsb
inc
dec
pop
xor
jmp
out
lret
setnp
jge
aas
lret
ljmp
or
sbb
int3
add
pop
in
xchg
loop
std
mov
jp
pushf
movsb
lods
push
insl
add
adc
aaa
scas
insb
fldl
sub
adc
jge
insl
lahf
mov
or
sbb
mov
out
inc
andb
data16
test
xchg
add
sub
sub
dec
pop
dec
fidivrs
adc
jns
xor
shlb
sarl
fcoms
sti
mov
aaa
sub
ljmp
mov
js
lret
fcoms
push
xchg
or
sbb
mov
sub
inc
sub
or
xchg
mov
sbbl
shr
int3
stc
movsb
lods
lcall
ss
pop
je
mov
jle
mov
icebp
jne
sti
jae
std
sub
lahf
cs
ss
aaa
inc
push
inc
scas
test
into
jb
jle
stos
sar
pop
push
adc
push
ficoml
outsl
xacquire
jp
test
push
ret
enter
aam
iret
cli
xchg
divl
inc
inc
cmpsl
aas
mov
addr16
cmpsb
das
insb
and
add
lret
lock
cmp
inc
inc
imul
or
fisubs
jge
bound
fcmovu
pop
repnz
ljmp
fucomp
cs
pusha
pop
dec
icebp
adc
lret
outsb
ljmp
xchg
das
fbld
inc
cli
fcmovnbe
outsb
inc
push
sbb
jnp
dec
mov
rorb
loopne
lock
sub
mov
imul
xchg
shll
popa
cld
idivl
daa
add
dec
dec
inc
mov
sbbb
mov
lods
cld
loope
dec
sbb
pusha
mov
icebp
mov
ret
lea
aas
jge
bound
bound
test
mov
loop
lret
sbb
sub
inc
dec
arpl
enter
jge
ss
adc
ret
mov
sti
imulb
xor
ss
dec
adc
mov
lahf
mov
cmpsl
sbb
pop
shlb
insl
xor
lcall
pop
insl
jb
xchg
adc
inc
push
pop
outsl
js
mov
mov
dec
in
insb
pop
mov
outsb
ja
adc
dec
xchg
inc
mov
enter
mov
xchg
add
inc
dec
ds
ja
in
aas
orb
subb
xlat
outsl
lock
clc
incb
adc
out
aaa
mov
dec
cmp
aam
xchg
pop
mov
leave
rcrl
sbb
icebp
sbb
aas
and
inc
jno
scas
jle
mov
fsub
mov
repnz
fiadds
dec
scas
cmp
sub
pop
mov
mov
ja
cmpsl
push
push
fwait
push
iret
sbb
jbe
insb
or
outsb
jl
mov
push
xchg
imul
or
jecxz
inc
push
in
out
push
adc
inc
orl
les
sbb
mov
xor
sti
push
repz
ljmp
pop
into
jp
lcall
push
ljmp
cmpsl
outsb
push
in
sti
add
aad
xchg
mov
push
mov
jl
push
movsb
out
adc
ret
scas
dec
sbb
cwtl
outsb
out
andb
popa
stos
es
scas
fs
fwait
loopne
dec
enter
sbb
pop
adc
rcll
pop
xchg
loopne
into
stc
add
inc
dec
les
out
pop
xor
mov
test
pop
arpl
jl
mov
add
dec
cmp
cli
cs
fmuls
cmp
popa
push
icebp
faddl
popa
jmp
cs
in
cmc
std
add
sub
push
mov
test
cmc
pop
inc
adc
cs
dec
arpl
lea
add
cmpb
leave
push
loop
imul
or
xor
jne
icebp
dec
jle
xor
ror
pop
out
jne
js
movsl
add
cmp
or
jg
popl
push
in
in
out
out
or
or
pop
inc
inc
addl
or
xchg
adc
mov
fwait
stc
js
call
pop
push
addr16
cmp
or
or
lret
rcr
lahf
notb
push
and
inc
jle
idivl
mov
das
not
cwtl
sahf
cmpsb
out
notb
call
xorl
mov
es
or
repnz
out
mov
lcall
dec
pop
fsubl
and
pop
pusha
shrl
add
adc
nop
sub
es
xor
xorl
lea
mov
mov
hlt
mov
js
addl
sti
xchg
lcall
ljmp
push
sbb
add
and
loope
nop
cmp
sahf
addr16
cmpsl
shlb
les
cwtl
in
minps
cmp
dec
dec
pop
fcompl
bnd
or
adc
mov
rcl
outsl
ljmp
imul
arpl
sub
jo
and
popf
cmpsb
cmpsl
mov
aad
addr16
jg
or
sbb
xchg
and
xchg
lret
enter
loop
icebp
ljmp
jnp
hlt
daa
aad
jp
jae
pop
or
mov
mov
insl
repz
loopne
adc
xor
push
jne
ljmp
sub
jp
dec
loope
out
add
or
inc
or
popa
xor
test
or
les
call
mov
pop
sub
pusha
push
pop
gs
je
test
loop
push
xchg
cmp
fstl
fsub
mov
adc
test
push
insl
jmp
adc
lret
mov
or
sbb
ret
addr16
add
fwait
push
nop
lods
lods
mov
loope
fdivrp
jge
adc
in
out
aam
jno
dec
lret
push
jbe
mov
shll
decl
add
and
inc
pop
cld
jle
push
xchg
not
mov
std
jge
or
xor
inc
daa
push
and
rorl
lcall
loop
les
adc
fimuls
xor
push
lret
call
push
mov
pop
js
dec
ret
mov
fdivrl
cli
int3
pop
aas
add
xlat
push
imul
adc
mov
ficompl
in
icebp
cld
in
adc
xor
xchg
inc
sbb
add
hlt
pop
iret
push
aam
push
incl
sahf
imulb
inc
int
push
xor
insl
push
jge
jnp
mov
pop
outsb
ja
ret
mov
fldenv
mov
ss
subb
dec
mov
out
loopne
push
nop
adc
inc
shlb
push
mov
or
mov
subb
sub
loope
dec
loop
in
imul
xor
inc
push
dec
pop
imul
sahf
lods
sarl
push
notb
push
xor
cmp
mov
adcl
int3
lods
dec
rorl
insl
repz
in
mov
es
cmp
out
iret
shll
call
fwait
sbb
push
aam
push
sbb
dec
pop
or
lock
xchg
xchg
mov
mov
imul
cwtl
sub
push
rcrb
cld
adcb
mov
mov
jp
inc
or
dec
lods
xor
pop
data16
add
lcall
iret
push
pop
mov
out
mull
scas
icebp
or
out
cmp
imul
sbb
lock
fsubp
out
idiv
push
push
push
push
es
icebp
mov
fabs
into
sbb
add
mov
dec
dec
jl
jle
mov
mov
int3
scas
pop
orb
push
jb
xor
inc
xor
in
jl
imul
fs
add
add
repz
add
cld
pop
sti
mov
in
movsb
imul
stos
cmp
mov
push
fdivr
lea
nop
movsb
aaa
cmpsl
sub
xchg
pop
stos
loopne
or
sbb
sub
adc
jl
jg
lcall
cmp
mov
mov
hlt
dec
mov
int3
cmc
js
mov
mov
lock
inc
gs
gs
testb
mov
test
loopne
insl
jl
in
adc
inc
rorb
or
sbb
sub
push
test
mov
lock
sti
aam
xor
and
pop
pop
fldt
jns
addr16
cs
xchg
call
sahf
xchg
stos
sub
jno
dec
mov
fbld
jbe
jne
test
sbb
push
ret
sub
cld
in
push
and
or
bound
jg
imul
mov
ror
pop
jmp
mov
jbe
mov
imul
jnp
imul
xchg
pushf
movsb
xchg
fmul
rorb
mov
rorb
sub
inc
xor
je
cmp
xor
enter
ljmp
loopne
pop
push
das
mov
cltd
sbb
xor
dec
loop
pusha
mov
sbb
xlat
pop
rcll
sbb
cmovs
mov
xchg
mov
xchg
loop
shl
add
or
testl
push
xor
js
ss
sub
xlat
cmpsb
xlat
mov
incl
dec
cmp
addr16
xor
pushf
sbb
xor
dec
mov
mov
enter
and
pusha
cmp
addl
int
test
mov
push
idiv
mov
ret
cmc
testl
jle
and
and
cmp
mov
xchg
int
push
adc
rcr
or
mov
push
in
testb
mov
mov
xchg
adc
ja
push
and
inc
jne
fsubrp
adc
push
movsb
pop
inc
jecxz
int
into
std
mov
sahf
iret
dec
pop
sbb
push
mov
and
addl
daa
xchg
rcr
rolb
adc
jne
bnd
xchg
push
sarb
pop
push
sbb
push
mov
mov
cwtl
xchg
or
cmpsb
adc
sbb
rorb
push
cld
add
cmp
xchg
mov
dec
lret
sbb
jecxz
adc
add
xor
in
push
imul
xchg
mov
fcomps
in
push
idiv
dec
adc
in
inc
xor
mov
pusha
loope
sub
jle
sbb
mov
fsubrs
jb
fildll
decb
sti
sbb
mov
sub
mov
mov
xlat
bnd
add
and
roll
arpl
je
xor
xchg
ss
mov
mov
dec
cmpl
xlat
jge
repnz
xchg
xchg
lods
daa
mov
loope
js
clc
mov
or
push
and
or
dec
or
in
mov
les
popf
ret
call
push
shll
call
xchg
out
xchg
insl
ljmp
cmp
and
or
mov
iret
ret
clc
jecxz
rcrl
dec
mov
mull
push
in
out
push
jno
push
mov
sbb
aam
mov
mov
rolb
xchg
aas
inc
scas
sbb
fmuls
pop
stos
fidivl
out
cmp
divb
es
movsl
jnp
jmp
push
xchg
mov
push
bound
xchg
les
sti
or
lret
cs
push
adc
les
mov
outsb
scas
clc
dec
insb
xor
in
int3
std
fs
pop
mov
cmovg
fildl
adc
lods
mov
lds
daa
jb
pop
in
add
and
sbbb
imul
lea
mov
je
bound
fwait
xchg
ret
sbb
pop
aaa
lahf
outsb
adc
sbb
ret
scas
push
cmp
loopne
mov
repz
das
in
cmp
push
int3
outsl
aaa
insb
test
and
test
mov
loopne
pop
fucomi
out
cwtl
shl
daa
lods
pusha
cmp
mov
xor
adcb
push
mov
rcll
fisttpl
jmp
rcl
and
lock
jmp
xchg
jge
jbe
outsb
mov
ljmp
jp
cmpsb
xchg
in
and
notb
push
adc
xchg
out
jl
insl
push
sahf
inc
mov
push
mov
addr16
or
fcoms
shr
xchg
add
out
jbe
and
pop
lods
push
popf
mov
pusha
les
and
cmpsb
sub
xor
sbb
xor
sbb
mov
pop
enter
mov
cmp
hlt
xchg
lret
push
dec
setl
mov
in
cmp
outsl
js
mov
mov
nop
xchg
push
pop
data16
mov
std
and
mov
decl
test
pop
pop
movsl
sub
jb
je
loopne
push
inc
mov
fmul
les
cmpsb
cmpsl
pop
cwtl
pushf
call
push
fs
and
jb
or
mov
inc
scas
fwait
mov
call
outsl
lahf
and
push
pop
fs
cmpsb
les
xchg
popf
mov
mov
int3
aam
out
in
mov
add
mov
fs
imul
sbb
mov
jne
adc
movsl
int3
mov
lds
mov
cmp
push
pop
mov
out
mov
xchg
adc
jecxz
les
dec
adc
sbb
adc
and
lods
cmp
jno
div
loop
sbb
or
inc
sub
in
insb
push
jge
ret
pushf
push
adc
loopne
inc
mov
repz
jnp
mov
adc
repz
add
jnp
out
push
outsb
int3
jle
fsubs
add
mov
test
adc
sub
pop
popf
xchg
cmpsl
or
loopne
dec
mov
call
aas
sbb
xorl
pushf
stc
cwtl
or
add
js
add
ds
pop
xchg
inc
and
shlb
int3
push
in
cli
mov
jge
push
fnsave
sub
xor
push
xchg
dec
xor
or
fisubs
sahf
sahf
mov
jbe
sub
pop
mov
sbb
je
add
imul
add
fldl
add
sub
ret
and
and
mov
mov
dec
jne
test
push
cmc
insb
nop
add
mov
and
movsl
inc
jb
sbb
sbb
cwtl
mov
xor
scas
cmp
cli
add
mov
data16
lahf
xchg
scas
scas
xor
xlat
mov
iret
scas
in
xchg
int3
negl
push
aam
push
mov
adc
sahf
pop
xorb
mov
add
push
xor
mov
into
push
jae
pop
pushl
leave
mov
call
lahf
stc
cld
inc
xor
adc
cmp
loopne
xchg
mov
lret
push
inc
test
or
out
dec
iret
add
stos
inc
dec
pop
push
es
cmpsb
daa
jnp
fnclex
gs
ljmp
jmp
inc
lret
adc
idiv
jnp
movsb
mov
lods
stos
dec
aam
jle
ja
hlt
out
sub
call
pop
testl
fwait
dec
jp
aad
push
mov
lea
std
adc
pop
dec
sub
sbb
pop
cmp
and
pop
arpl
hlt
in
addr16
add
xor
stc
pop
jge,pn
mov
xchg
mov
dec
jl
xchg
adc
inc
push
inc
das
scas
adc
jl
mov
js
adc
push
jns
and
pop
mov
pop
xor
sbb
adc
call
sarl
loope
cld
fucomip
pop
loop
fisubrl
mov
inc
rdpmc
add
imul
xchg
popa
aam
mov
in
cmpsb
fstpt
mov
xchg
mov
cmp
repz
or
inc
jne
idivl
mov
or
sbb
adc
cmp
les
movsb
imul
ret
jmp
out
mov
cmp
xchg
xor
sub
jne
mov
aas
mov
fbstp
test
add
mov
mov
out
idiv
pop
movhps
daa
inc
mov
cli
lret
jmp
cli
add
cmp
xor
push
push
pop
push
xchg
xchg
mov
mov
ds
xlat
rorl
add
adc
inc
sub
mov
rorl
jle
ds
stc
mov
and
xor
pop
pushf
push
pop
pusha
sub
pop
and
mov
lret
aam
mov
in
sar
and
adc
mov
dec
pop
popa
imul
aas
xchg
jnp
call
out
imul
loopne
and
push
xor
inc
mov
jle
subl
in
push
jecxz
jmp
std
add
iret
and
adc
inc
sub
dec
loope
je
test
mov
lods
mov
test
push
or
icebp
aas
bound
popf
insb
out
jo
cmp
test
mov
pop
ljmp
popf
shlb
fsub
hlt
fs
jp
aad
mov
mov
pop
ljmp
fisubrs
sub
dec
jmp
xchg
xchg
mov
fists
out
idiv
sbb
aas
inc
cmp
add
or
test
xlat
mov
mov
loopne
xorl
cmpl
loope
push
fsubrl
lcall
stos
in
xor
dec
jle
dec
mov
into
shrl
ficomps
ds
push
lahf
ds
push
in
imul
stc
sub
inc
out
in
dec
push
xchg
and
cmp
popa
pop
arpl
jae
inc
cmp
arpl
lret
dec
cld
out
adc
jp
push
movsb
lahf
dec
sub
inc
dec
or
addr16
pop
mov
dec
int3
imul
fisttpll
and
je
xchg
jge
ret
pop
bound
dec
push
mov
lock
sti
dec
mov
jmp
jge
andl
pop
pusha
push
xchg
cltd
mov
aas
dec
fcoms
or
cwtl
jae
cmpsl
sub
mov
fdivrs
mov
scas
pop
cltd
pusha
xor
stc
subl
subl
leave
mov
rcr
mov
push
stc
add
mov
stos
dec
push
adc
icebp
stc
jmp
add
xor
dec
fs
stos
mov
cmpsb
sub
bound
idivb
mov
xchg
fcoml
add
jl
jp
dec
in
dec
sahf
sub
sbb
mov
loop
int3
push
faddl
or
sbb
xor
test
mov
lahf
sub
dec
mov
jne
jg
lcall
cmc
movsb
fucomp
idiv
pop
movhps
daa
cmp
mov
dec
rcll
xchg
sbb
aam
push
pop
add
scas
xchg
lcall
js
imul
mov
mov
mov
adc
dec
pop
addr16
jno
push
xlat
pop
and
fdivrs
xchg
jo
pop
push
sub
mov
and
insl
addr16
jmp
mov
xor
cmp
jo
mov
xchg
push
scas
add
lcall
add
test
mov
mov
add
fwait
xor
bound
pop
jge
lretw
jecxz
popf
add
imul
or
je
decl
out
aam
xorl
shl
jge
and
mov
test
movsl
jge
push
insb
xor
mov
ja
xchg
int3
xchg
std
push
rcrb
mov
ret
stos
je
sbb
outsb
cmp
adc
ja
push
enter
jp
mov
push
stos
pusha
mov
dec
pop
pmaxsw
testb
js
push
rcrb
pop
cmp
pushf
iret
outsl
test
out
xchg
call
push
push
adc
and
lahf
push
mov
rcrl
mov
adc
das
frstor
gs
mov
pop
nop
add
out
xchg
mov
addr16
int3
and
cs
bound
adc
and
cmpsb
sub
lret
ret
pop
out
xor
mov
sbb
push
dec
repz
adc
enter
mov
scas
jo
push
fnsave
adc
and
xchg
enter
loope
imul
sti
xchg
sub
lods
ss
lods
movsb
cmpsb
test
adc
and
cmp
push
js
cmp
adc
fidivl
scas
mov
jbe
sub
or
lahf
push
mov
push
push
pop
popf
lock
sub
sti
ljmp
clc
inc
nop
add
jno
and
aaa
orb
sub
imul
js
pmaxub
push
jae
push
pop
outsl
inc
mov
mov
push
loope
loope
fmull
adc
mov
cmp
jle
icebp
and
xor
xor
je
test
into
orl
mov
pop
cwtl
dec
pop
bound
daa
cltd
sahf
rcrb
add
mov
inc
adc
scas
lret
or
fcmovu
or
push
xchg
xchg
scas
push
dec
mov
aam
xchg
int3
or
test
fwait
and
cmp
or
fiaddl
test
dec
movsb
mov
aam
push
cmc
add
jmp
sahf
pop
and
dec
cmp
pop
push
es
ja
mov
mov
fists
rorl
sub
fbld
callw
daa
xchg
jo
and
out
fcoms
mulb
cmp
popa
insl
mov
push
jle
pop
mov
xor
ja
pop
mov
mov
dec
sbb
iret
push
call
pop
icebp
test
mov
shr
push
pop
stos
hlt
in
push
xchg
mov
push
and
jno
sbb
addr16
enter
into
icebp
in
push
push
es
lods
jecxz
repz
jmp
mov
jecxz
insb
test
pop
pop
enter
xchg
sub
cmpsl
dec
push
pop
in
lock
push
mov
sarl
jmp
jge
jns
mov
jmp
add
or
push
mov
stos
mov
test
aad
popa
in
hlt
out
repnz
inc
xchg
push
pop
gs
cmp
gs
jecxz
out
xlat
xor
sub
xor
jmp
addr16
jns
lcall
pop
mov
mov
mov
hlt
sub
sahf
clc
shr
push
pop
adc
testl
ljmp
rcr
roll
fs
sbb
inc
mov
dec
pop
cmp
push
clc
mov
lret
mov
dec
imul
fs
jb
and
and
into
lods
js
out
not
push
dec
xchg
push
sti
jnp,pn
inc
and
bound
jbe
stos
push
addr16
jnp
adc
lods
or
xchg
sub
add
je
je
jl
mov
mov
push
hlt
fbld
int3
std
fs
push
ret
push
std
and
add
lea
aam
sbb
test
mov
cmp
sbb
jb
ljmp
lods
mov
jae
mov
and
push
and
dec
sub
aad
pop
das
pop
xchg
pop
js
testl
out
leave
push
pop
into
add
test
hlt
js
mov
cwtl
mov
ja
clc
mov
subl
mov
dec
aad
pop
lock
pop
xchg
leave
cwtl
fcmovnu
fucom
into
cmc
mov
stc
add
sub
jle
jns
jl
inc
dec
mov
in
shl
add
xor
pop
pusha
mov
dec
pusha
mov
fwait
push
pop
mov
into
in
add
mov
sbb
lds
sbb
xchg
cld
fdivrs
sbb
pop
mov
pop
cmp
jge
ljmp
movsb
xchg
scas
ror
int3
iret
fucom
in
filds
and
pop
and
movl
fisubl
and
mov
out
sbb
pushl
mov
push
push
cmp
sub
pop
scas
repz
jmp
loopne
pop
add
das
cmp
cmp
aam
ds
add
loop
addb
enter
out
mov
xchg
push
cmp
pop
add
cmpl
sub
aas
leave
loop
mov
mov
sub
lahf
leave
cmp
in
mov
mov
push
mov
lock
xchg
popf
or
cmp
push
out
inc
and
call
push
fs
scas
push
popa
xchg
and
js
or
mov
pop
pushf
mov
lahf
in
popa
shr
xchg
in
test
push
and
dec
je
data16
jg
int
jb
jge
fsubl
movsl
and
test
sti
cltd
xor
xor
call
lea
mov
sarb
lcall
mov
or
pusha
pop
pop
pop
outsb
ja
mov
cmpsb
ss
rdtsc
push
rol
aad
pop
add
das
jl
inc
dec
inc
imul
aas
pop
scas
cmpsl
shlb
or
cli
mov
stos
push
sub
sbb
dec
roll
fs
sti
mov
sub
ret
call
adc
dec
scas
test
adc
sbb
and
jno
push
out
ret
es
into
sbb
pop
push
lea
testl
inc
shll
test
and
cli
dec
in
and
into
std
or
pop
pusha
lods
xor
test
jmp
adc
mov
xchg
cmp
pop
cld
jl
mov
jge
scas
xor
push
cmp
int3
cmc
fiaddl
xor
in
cld
jne
mov
mov
lods
xchg
xchg
aad
sbb
jmp
lret
sub
xchg
cmp
jo
or
inc
and
daa
setle
mov
repz
dec
int3
pop
test
jbe
sbb
js
add
leave
add
jle
repz
inc
dec
negl
dec
mov
cmp
bound
inc
loope
insb
loopne
mov
sub
movsb
sub
rcr
out
popa
xchg
jno
jle
and
pop
cmp
lahf
xchg
mov
cld
ja
ds
dec
pop
add
add
mov
pop
addr16
mov
add
cmp
dec
insl
add
add
pushf
movsb
mov
insl
dec
fs
mov
and
or
loope
insb
shll
push
lods
movsl
lods
pop
rolb
cmpsb
sbb
or
incl
mov
push
sbb
adc
push
cmp
shlb
shlb
inc
stos
inc
dec
and
imul
outsb
loope
leave
push
xlat
mov
popa
idiv
push
xchg
push
or
push
insl
out
inc
jp
pushf
inc
cmp
jmp
jmp
into
cli
jae
loopne
mov
push
and
addb
cwtl
mov
out
imul
mov
and
repz
dec
sbb
push
mov
into
xchg
lret
cs
lea
push
repz
ss
jge
jmp
mov
lds
repz
ret
hlt
pop
and
mov
inc
cli
and
arpl
cmp
xor
lcall
sbbl
inc
inc
sub
push
pop
mov
mov
repnz
lcall
or
adc
cmpb
imul
lea
mov
adc
adc
sbb
xor
jge
push
inc
ja
jne
mov
push
mov
push
loope
movsb
daa
das
out
aaa
fsubrl
imul
test
and
cmpsb
fistpl
jmp
testl
pop
out
out
es
mov
test
pop
rol
mov
cltd
lea
and
in
addr16
dec
push
push
or
imul
mov
inc
push
lret
add
cli
iret
push
mov
mov
aam
imul
pushf
mov
rorb
xchg
xchg
jmp
lods
inc
inc
ret
dec
je
push
js
sbb
int3
or
adc
pop
cltd
xor
mov
fdivr
je
outsl
push
adc
push
pop
int3
mov
and
sbb
pushl
adc
dec
cmp
pop
inc
jno
jp
and
inc
add
pop
test
roll
sub
fsubrs
xor
aas
inc
dec
test
addr16
lods
adc
mov
iret
fisubl
mov
inc
les
dec
addr16
adcb
mov
jecxz
pop
jae
jmp
dec
jmp
arpl
push
jl
ds
xor
cmpsb
int
shr
push
jo
lret
inc
out
sbbb
daa
push
xchg
inc
sbb
cwtl
idiv
bound
mov
ret
shll
test
or
push
sbb
push
dec
pop
popa
add
xchg
fwait
mov
xchg
cmp
xchg
std
pop
fbstp
xor
cwtl
cmp
push
outsl
cwtl
pushf
movsb
scas
xor
out
testl
cmpsl
adc
loop
or
fs
dec
stos
push
cmp
mov
ja
mov
jmp
xor
call
mov
leave
dec
test
icebp
mov
repnz
add
mov
push
imul
xor
leave
iret
fcom
jbe
push
add
loopne
pop
sub
adc
imul
cmpb
mov
mov
into
rcr
filds
push
sbb
daa
lret
sbbl
out
in
je
xchg
cwtl
stos
sbb
in
or
and
out
sub
xor
pusha
je
xchg
lock
xor
mov
xor
ret
adc
jge
mov
mov
pop
pop
bound
jbe
mov
lret
imul
movsb
fstp
and
pop
pop
lcall
mov
mov
cmpsl
incb
and
adc
adc
inc
push
sbb
push
pop
jnp
gs
lea
vpmullw
rcl
mov
inc
dec
inc
adc
pop
es
clc
outsl
loop
jns
lahf
inc
cmpsb
lret
mov
fsubrl
rcr
sbb
sbb
or
inc
pop
mov
out
testl
inc
mov
inc
out
push
div
xor
nop
cwtl
scas
sub
bnd
aad
mov
inc
cmp
ds
push
fabs
inc
inc
or
push
xchg
cltd
mov
enter
add
push
leave
rorl
push
fs
pop
popa
imul
xchg
sahf
jp
mov
xchg
insb
in
push
in
push
adc
int
jae
jp
xchg
sbb
fs
lods
stos
mov
fcmovbe
inc
iret
mov
jle
sbb
mov
dec
lret
fstl
add
xor
test
mov
jecxz
add
mov
xor
adc
cmp
test
sbb
mov
sbb
jg
in
inc
shrb
and
add
stos
mov
aas
jns
cmp
ja
add
push
inc
pop
insb
fs
push
cmp
jo
sbb
mov
jmp
testl
mov
and
shrb
sahf
pop
xchg
in
fsub
rorl
stc
clc
iret
sti
and
dec
push
addr16
xor
mov
test
lods
stos
loopne
sar
mov
xchg
sub
mov
insb
shll
cmp
movsl
sbb
ds
jmp
es
and
dec
cmp
push
xchg
bound
in
sti
push
fistl
daa
sbb
or
dec
inc
mov
adc
add
lcall
pop
and
mov
add
mov
aaa
cmp
sub
xor
das
pop
xchg
nop
jecxz
jns
in
cmc
cld
iret
movntps
pop
sub
push
pop
gs
jb
data16
scas
mov
xchg
data16
add
pop
add
adc
into
dec
push
push
repnz
sbb
jg
outsb
pop
std
cs
mov
cmp
testb
push
mov
dec
fiadds
jecxz
sbb
test
sbb
mov
decb
adc
inc
dec
loopne
push
outsb
jo
subl
mov
movsb
add
xor
leave
int3
adc
popa
imul
dec
dec
mov
fsubp
fldt
movsl
or
notb
and
pusha
push
pusha
or
mov
cwtl
ljmp
and
mov
in
inc
dec
push
daa
sahf
addr16
andl
sbb
xor
mov
sbb
xchg
cmp
cli
or
inc
dec
pushl
dec
imull
jb
andl
xor
ret
jg
add
cmpsl
pusha
adc
gs
and
xor
ja
cli
rorb
adc
cli
call
push
or
or
add
js
cmpsb
dec
stos
in
iret
pop
ret
test
add
in
inc
push
push
aas
js
popa
xchg
addb
mov
clc
sti
push
mov
cmp
pop
push
sub
mov
xchg
and
in
dec
hlt
je
or
mov
dec
pop
xlat
addr16
dec
loopne
or
lds
ds
push
int
dec
in
imul
lods
cmp
cmp
stos
push
inc
in
pop
dec
cmp
pop
sahf
mov
rcl
jmp
add
imul
data16
mov
insl
inc
adc
dec
mov
or
jg
std
outsb
insb
mull
stos
pop
push
add
inc
fnsave
jg
mov
data16
mov
mov
adc
aad
cmp
lock
rcrb
jl
mov
pushf
and
lock
mul
sbb
mov
or
push
pop
jp
cmp
jno
in
xchg
repz
imul
mov
cmp
inc
push
loope
xor
and
sarb
jo
inc
out
clc
decl
sbb
rcrb
test
test
leave
rcr
loopne
adc
cld
ret
adc
movsb
sub
inc
inc
shrb
xorl
mov
pop
imul
push
int
lods
in
lahf
gs
xor
es
mov
mov
fs
add
orl
push
dec
ret
adc
sub
inc
outsb
subb
mov
ret
push
hlt
mov
and
xchg
repnz
dec
jmp
insb
jne
test
mov
cwtl
lds
call
and
aad
xor
pop
hlt
idiv
loope
in
xor
mov
shll
loope
ficompl
jo
mov
xchg
sbb
inc
mov
push
arpl
push
or
mov
lahf
push
sub
fcompl
lock
stc
sbb
out
push
dec
sbb
pop
daa
push
es
dec
cmpsl
es
fcoms
mov
mov
daa
sbb
inc
rcr
pop
pop
stos
andb
cmp
jns
adc
stos
ss
sub
lcall
fs
cmp
cmp
xor
dec
pop
ja
in
imul
adc
pop
dec
xor
jnp
pop
rclb
es
ret
mov
push
mov
jecxz
push
mov
xchg
sbb
out
shll
lods
je
jl
fwait
xchg
stos
and
cmp
dec
adc
fnsetpm(287
cld
add
xchg
sub
xchg
pop
pop
fs
jge
pushf
adc
pop
lahf
push
xlat
in
repnz
mov
xor
dec
pushf
std
hlt
bound
and
lcall
jno
ret
shl
ret
stc
sbb
and
dec
push
push
jge
fdivr
push
xchg
das
push
jno
cmpsl
cmc
repnz
addb
test
or
out
fdivl
push
jle
mov
sahf
push
pop
mov
in
loopne
mov
sbb
inc
lcall
xlat
jo
orb
movsb
push
mov
iret
sub
gs
jle
add
icebp
mull
stos
test
add
inc
sbb
mov
xchg
shll
loop
adc
lock
testb
pop
jb
cmp
cmp
xor
jge
push
test
mov
mov
popa
imul
push
daa
mov
xchg
fucomi
push
or
push
imul
jns
out
push
cmp
dec
test
mov
fcoms
mov
add
add
sub
xchg
cmpsb
push
push
out
sbb
sbb
movsl
mov
pop
ret
out
repz
outsb
pop
and
lahf
pop
rorl
movsl
sub
sbb
jno
mov
test
aad
inc
or
call
sbb
arpl
push
pop
mov
je
mov
dec
enter
mov
cli
mov
xor
fists
sbb
imul
mov
rolb
pop
dec
loopne
stc
or
sub
xchg
sbb
jecxz
adc
pop
bound
insb
scas
lahf
mov
ss
mov
mov
push
cwtl
movsl
push
sub
cmc
pop
pusha
mov
jbe
pop
mov
mov
xchg
sbb
cli
sub
mov
fcoml
sbb
inc
outsb
movsb
pop
sub
aam
out
outsb
lret
ja
fimull
bound
push
jne
jnp
stos
mov
test
loope
in
hlt
repz
sbb
sub
imul
jb
pushf
mov
mov
ret
inc
fstp
mov
jmp
sub
cmp
dec
cmp
jp
jo
nop
movsl
lahf
cmpsl
cmp
iret
lods
test
add
cmp
inc
fstp
xor
insb
test
lret
and
ret
fnstsw
inc
jecxz
sbb
sbb
lock
lods
ret
dec
sbb
inc
jnp
jns
jl
mov
sarl
xchg
arpl
nop
ret
popl
or
sub
faddl
and
pop
jbe
jne
xchg
movsl
movsl
pushf
jne
into
iret
call
or
push
and
push
dec
jnp
jnp
push
cwtd
fwait
mov
or
popa
jmp
add
sbb
dec
sarb
std
insb
scas
push
and
call
xorl
ret
fisttps
adc
mov
jne
dec
pushf
pop
jg
aas
xchg
rolb
popf
fistps
adc
shrb
push
imul
push
push
xchg
adc
aam
mov
ljmp
leave
roll
inc
jbe
jo
push
je
pop
jp
xchg
sbb
xchg
out
fsubs
pop
mov
mov
insl
outsl
xchg
mov
mov
mov
bnd
pop
or
or
das
xor
pop
pop
pop
pusha
push
push
xor
push
frstor
fldt
jmp
dec
dec
mov
and
mov
mov
adc
scas
xchg
in
adc
mov
in
adc
mov
jb
dec
imul
repz
clc
and
and
dec
add
cmp
hlt
stos
push
xchg
test
int3
iret
push
lds
sti
ja
les
inc
cld
adc
jmp
jg
cmp
mov
lahf
in
mov
sbb
inc
arpl
insl
jb
or
fisubs
mov
loop
icebp
mov
imull
push
pop
call
xchg
lret
jg
mov
idiv
pop
adc
pop
daa
sub
int
and
cli
sbbb
mov
xchg
mov
jmp
pop
ficomps
cmp
cmp
loope
ja
lcall
mov
xchg
fdivs
outsb
js
mov
add
jnp
mov
mov
mov
jne
lret
push
push
and
fsub
xor
fwait
adc
outsl
push
fninit
jmp
mov
cld
adc
cmp
inc
sahf
inc
mov
movsb
xchg
lods
popf
rorb
fidivrl
xchg
adc
std
cmp
pop
add
outsl
pop
dec
jl
in
stos
mov
test
mov
sub
fdivs
xor
dec
les
xor
popf
pushf
xchg
inc
inc
mov
rcr
loop
add
ffree
fidivrs
push
sub
cli
sub
icebp
pop
or
xchg
ret
rcl
fbld
or
xor
das
aaa
out
push
add
inc
inc
push
cwtl
test
rorb
pop
dec
push
ja
or
push
lret
jle
pop
add
je
inc
dec
nop
push
mov
mov
push
movsb
fmull
pop
les
adc
push
cld
icebp
outsb
outsl
out
push
sbb
cld
xchg
xor
pop
mov
out
jmp
mov
outsb
cltd
xchg
or
inc
ret
loopnew
adc
and
aad
or
and
jns
jns
sbb
loope
data16
movsl
test
dec
mov
cmp
sti
rorb
sbb
pop
fstpl
jge
push
mov
or
vpaddq
data16
sti
adc
sub
and
or
pop
dec
xchg
jo
addr16
mov
mov
mov
xchg
clc
fidivrl
dec
mov
data16
jns
pusha
lret
cmpsl
cmpsl
scas
mov
imul
in
and
cmp
sub
sub
xchg
mov
inc
icebp
and
jl
test
sti
mov
sub
pop
jae
xchg
out
jns
adc
scas
or
xchg
inc
inc
lret
into
mov
test
test
inc
int3
fstl
out
nop
lock
adc
ss
xchg
ss
fisubrs
pushf
cs
cmp
out
andb
pop
pop
bound
inc
fs
mov
std
scas
mov
push
xor
repnz
ret
jle
int3
jle
xchg
popf
xchg
xchg
in
ja
add
lcall
dec
push
dec
cs
test
sub
popa
movsb
in
mov
or
fucom
sub
adc
aaa
push
add
pop
pop
rcrb
adc
jp
mov
adc
push
lcall
rcrb
pop
cs
jns
push
jg
or
scas
imul
ljmp
and
das
cmp
sub
push
outsl
js
xchg
cs
repnz
fcomp
in
leave
add
adc
mov
dec
add
cmp
xchg
stos
test
leave
shl
push
inc
add
adc
lods
fildl
sti
sbb
xor
jbe
sub
je
fdivrp
movsb
lods
adc
sub
pop
push
cmpl
and
mov
fsts
push
or
mov
mov
cli
inc
dec
cs
xchg
jae
hlt
jg
stos
sub
pop
jp
into
xchg
in
jmp
daa
add
adc
cmovb
pop
push
mov
xchg
lock
das
rcl
sub
inc
xor
clc
dec
push
ret
mov
push
mov
cltd
add
loop
repnz
jmp
jnp
xchg
mov
rorb
jle
sbb
fstpt
pop
or
orl
pop
sbb
movsb
enter
call
add
xchg
daa
sub
sub
out
jns
subb
vpsrlw
xor
cmp
push
pop
fildl
jo
pop
jne
cltd
xchg
push
lods
xchg
inc
xchg
shrb
mov
movsl
ret
pusha
roll
jns
je
orl
mov
and
jbe
sbb
int3
insl
sub
cmp
aad
movb
dec
mov
lcall
xchg
test
shlb
dec
mov
pop
xchg
dec
pop
outsb
pop
scas
mov
lock
aad
in
inc
std
fdivrs
hlt
daa
adc
jb
xor
xchg
jno
xchg
mov
dec
aad
push
cli
std
leave
rclb
sbb
inc
in
push
pop
imul
inc
mov
pusha
mov
or
mov
daa
js
bound
push
cmp
ret
dec
fidivl
mov
cmp
mov
lret
mull
and
jo
nop
ss
scas
or
mov
lods
sbb
mov
xor
shll
fsubp
imul
dec
sbb
dec
jl
mov
movb
xchg
sbb
out
aad
dec
dec
xor
push
xchg
jl
aad
xor
mov
test
imul
or
adc
xor
rcrb
sti
add
mov
dec
jl
adc
ja
jl
je
mov
in
hlt
cld
scas
mov
ds
sub
in
inc
pop
fs
xor
ja
xor
lods
mov
les
mov
cwtl
scas
sub
sub
cmp
aaa
fs
push
push
aad
outsb
adc
cli
add
ja
adc
sub
outsb
ja
cmp
mov
test
neg
add
pop
push
mov
push
xor
pop
xchg
cmp
test
inc
shlb
out
jnp
sbb
mov
inc
sti
fcoms
mov
cmp
push
jle
mov
mov
lods
mov
mov
loopne
cs
jbe
jb
out
inc
dec
push
test
and
into
in
imul
xlat
scas
fisttpll
in
popa
in
addb
xorb
mov
in
add
or
fadds
les
arpl
pop
mov
push
mov
jns
call
or
sbb
xor
dec
pop
push
fs
outsb
push
xchg
aaa
mov
sahf
fldl
stos
ficoms
out
adc
cmp
push
adc
hlt
inc
ficompl
xor
lods
mov
or
push
push
jb
and
jmp
mov
fst
movsb
out
scas
jb
sub
aaa
mov
ljmp
and
xor
pusha
clc
push
fcomp
int3
or
inc
mov
mov
ja
mov
sbb
es
inc
js
fchs
in
sti
adc
push
lret
sbb
push
jno
xchg
xchg
sahf
stos
lods
nop
mov
out
adc
sub
dec
inc
cwtl
inc
dec
pop
jns
cmc
ss
lock
and
mov
ret
lret
rcr
hlt
insl
sahf
xchg
add
xchg
repz
clc
mov
fmull
add
arpl
lahf
cld
cmp
aam
out
sbb
push
jnp
or
sbb
gs
push
mov
out
stos
xchg
sbb
fdivrl
out
push
mov
cmp
mov
lock
mov
xor
rcr
repnz
xchg
and
inc
dec
push
push
pop
pop
mov
push
xor
add
mov
punpckldq
ja
clc
loopne
mov
cmpl
js
mov
jnp
mov
lock
xor
jns
mov
sub
mov
jbe
repz
add
jmp
ljmp
and
jle
jmp
hlt
notb
lret
add
paddd
push
in
andb
mov
cld
xor
cmp
push
scas
xor
ret
mov
jmp
div
add
cmp
dec
push
pop
arpl
ret
adc
pop
ficoml
test
cli
add
adc
xchg
xor
inc
xorl
cmpsl
in
push
fucom
jne
orb
pop
and
pop
gs
xchg
jne
cwtl
outsb
stos
sub
aaa
loop
jp
push
adc
sbb
dec
fcmove
subl
pop
push
or
xlat
movl
int3
mov
loopne
lahf
fcomps
js
adc
mov
dec
jnp
mov
and
or
xor
mov
or
loope
adc
iret
int3
cmc
rcr
loope
jae
add
adc
cs
aaa
or
shr
push
arpl
test
pop
lret
push
xchg
mov
mov
dec
mov
popf
mov
insb
xchg
bound
sub
or
sbb
xchg
outsb
push
push
mov
cltd
rcr
jo
xor
dec
jns
iret
mov
push
test
insb
loope
inc
in
addr16
cmp
cmp
sub
or
call
int
pop
into
ret
loop
pop
das
pop
sub
push
add
pop
dec
mov
loop
repnz
loopne
ljmp
jle
push
jge
push
inc
aas
js
mov
addr16
rcrl
inc
pop
pop
sub
jae
pop
das
aaa
dec
xchg
scas
andb
dec
xchg
adc
loopne
inc
pop
sar
pop
cmp
mov
scas
sub
rorl
jmp
jmp
shl
push
bound
into
fsub
fdiv
push
shll
and
scas
mov
fs
and
hlt
mov
and
mov
fildl
addr16
imul
xchg
pushf
adc
stos
mov
mov
out
call
mov
pop
in
das
lods
dec
cmp
cmp
mov
cs
mov
cltd
js
sti
ja
int
and
pop
pop
adc
mov
sub
daa
adc
xor
mov
hlt
mov
stos
sbb
push
pop
dec
insl
dec
mov
mov
js
dec
orb
or
les
test
pop
repz
pop
insb
xchg
adc
cmpsl
mov
int
cmc
gs
out
xchg
loopne
sbb
lods
xor
cmp
mov
jns
stos
dec
fwait
pop
cwtl
lahf
mov
iret
or
das
stos
lds
add
jae
cwtl
xor
jne
cltd
adc
push
rcrb
mov
enter
mov
inc
mov
jno
jle
test
and
in
int3
push
in
imul
scas
mov
pop
ss
pop
fmull
cs
aaa
sub
aas
lret
xor
cmc
lods
mov
xchg
sbb
add
xor
cmpsl
sub
aam
loop
repz
and
lods
sbb
sub
icebp
in
pop
xor
xchg
xor
popa
push
vpmullw
in
jge
sub
inc
xor
imul
pop
jns
jg
add
dec
repnz
int3
loop
adc
jecxz
adc
popf
rcl
insl
cmp
lahf
xchg
xor
arpl
dec
out
ljmp
or
movsl
and
mov
outsb
pop
imul
cmp
mov
jecxz
push
ret
imulb
mov
xor
pop
je
bound
or
mov
aam
jmp
or
and
scas
aas
xor
out
add
jns
jo
loope
scas
mov
jno
cmc
jnp
mul
scas
dec
or
inc
and
movsl
fldl
jle
push
mov
stos
fidivs
add
popf
lea
insl
dec
outsl
adcl
lret
mov
into
int3
rol
out
in
xlat
cld
or
inc
inc
idivl
pop
inc
jne
daa
pop
xchg
test
pop
lods
inc
mov
cmp
add
testl
push
dec
xchg
gs
mov
mov
shrb
test
cltd
and
and
rorl
aam
or
pop
jle
push
sbb
lds
rol
or
lcall
js
arpl
mov
jecxz
call
imul
jnp
mov
cld
ds
xchg
cltd
mov
arpl
hlt
jbe
stc
jmp
stos
sub
cmp
pop
cmp
jo
jle
and
mov
rcrl
outsb
out
add
xor
popa
add
xorl
lcall
fucomi
adc
sbb
push
stos
sub
rolb
xor
or
mov
push
out
and
test
jae
call
je
mov
loope
fucom
in
repnz
mov
sub
cmp
push
pop
pop
jge
and
sub
leave
hlt
loop
adc
popf
enter
sub
loop
pop
jmp
mov
cmpsl
mov
lahf
cmp
out
notl
js
into
or
mov
dec
jl
adc
xchg
sbbb
pusha
shl
popa
add
js
or
daa
ss
roll
lret
loope
in
jo
inc
lahf
mov
ror
fldenv
icebp
cwtl
movsb
leave
shrl
cmp
into
inc
lea
imulb
jbe
xchg
movb
or
scas
mov
xor
push
fwait
das
and
dec
inc
or
mov
mov
or
xchg
and
inc
ss
dec
xchg
test
or
cmpl
xchg
mov
movsb
pushf
das
sbb
movsl
adc
add
scas
lea
std
insb
xor
mov
adc
or
or
cmp
jns
imul
pop
mov
mov
mov
rclb
nop
xor
std
jns
add
push
jecxz
inc
mov
outsb
arpl
rcr
push
fdivp
negl
sahf
das
outsb
dec
in
fadds
mov
cmp
daa
dec
mov
sbb
popf
mov
ucomiss
mov
push
push
jl
jb
or
inc
ffreep
lea
in
or
cmp
or
das
pusha
add
cmp
test
mov
enter
in
hlt
and
out
inc
popa
or
out
xor
xor
lds
fyl2xp1
xchg
loop
push
fwait
inc
mov
sub
sub
and
outsb
fwait
inc
push
push
mov
int3
mov
sti
bound
xchg
cli
dec
push
cs
pop
inc
inc
aam
xor
pop
das
sti
inc
popl
mov
or
loopne
and
jns
mov
lea
push
cli
mov
pop
mov
push
and
inc
call
outsb
dec
xchg
sbb
lahf
pop
ret
shr
gs
repnz
sti
dec
cmp
inc
bound
shlb
rorl
or
xchg
adc
das
and
jg
ds
push
ja
arpl
cwtl
scas
push
mov
push
je
add
or
cmp
mov
out
cmp
dec
nop
sbbl
insb
mov
call
add
cmp
xor
fdivs
ja
mov
mov
out
test
inc
mov
push
lds
push
sub
pop
xchg
stos
inc
outsl
ds
mov
popf
call
mov
inc
sbb
inc
fcomps
or
xchg
mov
fucomip
cmc
or
adc
lock
mov
jp
popf
xor
mov
mov
add
cmpsl
cmp
inc
movl
xchg
and
mov
adc
pop
mov
lock
xlat
sbb
aas
pop
pusha
pusha
loope
outsl
addr16
mov
mov
testl
dec
dec
frstor
push
jo
je
mov
sarb
pop
or
sbb
les
dec
ss
test
popf
and
push
into
in
out
stc
jg
jo
push
add
inc
dec
dec
fwait
je
xorl
mov
fcmovnb
icebp
es
add
mov
or
orl
fs
and
sub
pushf
push
push
in
cld
adc
inc
inc
roll
mov
insl
sbb
jl
lods
aaa
lahf
enter
aad
in
xchg
and
or
pop
call
mov
mov
shr
enter
mov
fwait
cmp
inc
jb
jbe
xchg
jbe
cmpsb
sbb
test
into
adc
xchg
add
aaa
es
push
sahf
sbbb
adcb
cmp
jg
xchg
and
xor
roll
divl
loope
sbb
mov
or
je
lret
icebp
arpl
rcrb
stc
pop
cmp
xchg
xchg
dec
cmpsb
into
add
ja
and
sbb
iret
ret
cs
int
pop
das
jnp
addl
shrb
lret
sbb
outsl
sti
jno
and
dec
sbb
pushf
arpl
jl
lods
xchg
ds
inc
mov
out
jo
fildll
stc
cmp
in
xchg
jne
in
sbb
popf
outsb
stc
test
adc
lods
dec
int
fmuls
cmc
mov
sub
scas
push
cmp
or
std
and
mov
mov
cmc
push
nop
movaps
lock
xor
inc
clc
xchg
mov
xlat
out
jno
push
adcb
cwtl
daa
sub
push
cmp
sti
dec
mov
mov
ror
fsub
call
mov
mov
pop
dec
out
cmp
jns
mov
das
mov
push
cld
outsl
adc
mov
rcrl
add
inc
or
xorb
push
mov
scas
int
in
aam
cmpsb
scas
or
hlt
inc
cs
dec
pop
insb
push
jnp
mov
cwtl
inc
into
push
int
jbe
std
in
add
fiadds
dec
push
shrb
clc
mov
lods
stos
jge
dec
int3
fists
jb
cld
add
cltd
fwait
xor
arpl
jne
or
mov
push
mov
jne
mov
and
in
rcl
clc
insb
aaa
insb
inc
xchg
xchg
and
bound
repnz
lcall
xor
sub
sub
jp
dec
push
xchg
xchg
lahf
mov
iret
xlat
out
jle
or
ss
push
push
add
jno
xchg
shlb
testb
adc
adc
lret
inc
push
pop
outsl
add
jne
and
mov
repz
and
dec
inc
xchg
inc
mov
xchg
inc
jbe
dec
lods
frstor
fmulp
mov
and
inc
aad
lea
cmp
mov
pop
mov
jecxz
inc
inc
xor
and
xor
push
xor
cli
jl
sub
mov
jae
sti
jmp
maskmovq
mull
mov
or
fisttps
push
pop
jne
xchg
xchg
popf
movsl
mov
in
pop
movsl
cmc
mov
lcall
cmp
les
sbb
mov
cltd
dec
mov
jo
in
add
mov
sub
push
pop
add
sbb
aaa
pushf
daa
movsl
cmpsl
stos
outsb
not
popa
cmc
aad
clc
mov
push
dec
das
push
pop
mov
jg
daa
pop
lahf
cs
dec
jmp
lock
push
call
cmp
push
jo
addl
in
fdivrp
jae
stc
add
fisttpl
icebp
pop
imul
mov
or
fdivrl
sub
xor
shrl
jnp
jmp
mov
aas
fucom
jmp
mov
pop
cli
cmp
shlb
mov
xchg
dec
mov
sahf
mov
fcmovnbe
fdecstp
roll
xor
dec
push
pop
fs
outsb
add
sub
hlt
test
imul
sbb
lds
test
sub
mov
add
pop
fdivr
mov
jo
fisttpl
lret
outsw
and
daa
mov
clc
call
in
or
adc
scas
das
imul
data16
js
pop
mov
mov
mov
add
push
sub
dec
mov
dec
in
push
xlat
push
outsb
dec
testl
popf
leave
in
mov
nop
sbb
sub
rolb
popa
push
mov
cmpsl
ss
mov
clc
loopne
or
sub
xchg
bound
jl
and
jnp
inc
ret
int
loop
cld
imul
add
mov
jb
xor
cmp
xor
popf
dec
mov
push
aam
mov
addb
das
mov
dec
push
add
ja
mov
lods
mov
scas
mov
adcb
pushf
mov
xor
mov
cmp
jae
pop
inc
and
pop
jge
xchg
popf
or
cltd
sub
iret
inc
fs
arpl
outsb
mov
lcall
std
fiadds
xchg
mov
adc
sub
dec
cmp
or
call
xchg
cltd
xor
out
cld
jmp
in
out
jae
cmp
dec
addr16
pop
sub
xchg
icebp
addr16
icebp
pop
loope
movsb
xchg
shll
sbb
pop
adc
pop
imul
icebp
call
push
push
sub
sbb
jae
push
dec
lods
jmp
std
dec
inc
arpl
jge
pushf
or
int
decb
adc
repz
sub
add
in
int
mov
adc
dec
stos
in
stc
aaa
or
ret
ljmp
mov
mov
ret
clc
jecxz
pop
mov
inc
sub
das
lods
jb
adcb
inc
addb
fistps
sti
cmp
imul
cmp
or
popf
lock
or
inc
push
ret
fbstp
movlps
and
es
stos
outsl
imul
sbb
sahf
ret
add
jg
test
sbb
mov
mov
scas
fdivrs
jne
cmc
mov
jle
lods
loope
mov
shlb
sub
xchg
rcrl
sub
repnz
push
push
or
and
add
arpl
dec
push
push
scas
pusha
movb
aaa
in
fdiv
add
mov
lcall
mov
int3
dec
out
hlt
dec
sub
nop
add
adc
sub
fs
movsl
cld
fadd
scas
out
mov
movsl
fisubrl
fsub
in
xor
add
aaa
pop
jae
stc
jmp
dec
inc
xor
mov
jne
stc
adc
int3
into
aam
dec
sub
mov
lcall
inc
ljmp
xor
push
push
ja
cmp
xchg
mov
arpl
xchg
movl
sub
sbb
pushl
pop
dec
mov
test
ret
inc
enter
mov
iret
pop
lds
adc
cmc
orl
mov
ret
rorb
lods
xchg
or
roll
jns
jp
pop
outsb
add
orl
xchg
cmpsl
popf
ret
push
in
xchg
cmc
out
cs
adc
push
adc
cmp
jae
mov
xchg
jp
cs
jecxz
jecxz
shl
idivl
or
jns
mov
cmp
pushf
orl
or
mov
scas
mov
roll
cmp
jl
xchg
jecxz
mov
scas
into
rorl
lret
ljmp
aaa
inc
dec
rcll
jb
lcall
lret
rcr
loop
mov
rorl
ret
sub
fs
and
outsb
in
sub
scas
aad
dec
ror
mov
aam
rorb
insl
or
mov
mov
mov
mov
jnp
ljmp
xchg
push
push
and
xor
aam
sub
shll
push
mov
cmp
loopne
adc
inc
out
xchg
xchg
or
xor
mov
insl
pop
pop
orl
dec
ret
fcmovnu
out
into
jl
ss
es
in
xor
ss
cmp
pop
movsl
jmp
pop
repnz
add
daa
sub
cmp
inc
cmpb
cmp
fildll
loopne
in
hlt
cmpsl
idivl
aaa
xor
pop
ja
lea
mov
movsl
lods
fildl
ret
stc
pop
std
add
cmp
fbld
ljmp
inc
or
sub
mov
dec
pop
stos
xchg
adc
dec
mov
cwtl
testl
fsubs
shlb
adc
sti
testl
and
movsb
cmpsl
add
rcl
push
dec
addr16
or
stos
outsb
adc
rcrb
pop
fmulp
sarl
jbe
stc
jno
sub
xchg
sub
mov
inc
dec
inc
test
mov
imul
xchg
and
push
roll
jno
mov
mov
jecxz
aaa
cli
enter
rcr
mov
xor
pushfw
ss
or
pop
loop
hlt
or
sbb
mov
insb
pop
adc
movsl
push
dec
mov
in
shll
sbb
inc
pop
and
dec
fs
jp
push
jg
xchg
xor
outsb
iret
sub
jg
xchg
pop
dec
repnz
pop
insl
fs
jns
adc
inc
inc
daa
fldpi
divb
int3
ljmp
dec
pushl
outsl
cld
adcb
mov
out
pop
jl
mov
cmp
push
pop
je
incb
mov
movsb
mov
arpl
or
mov
push
aaa
cmp
and
mov
push
movsb
aad
es
out
inc
testb
sbb
es
loopne
fs
fnstenv
sbbl
les
jp
add
lahf
cmp
sub
arpl
add
mov
push
cli
aad
or
inc
clc
dec
cmp
dec
ffreep
testl
shll
lds
sub
shlb
es
pop
jae
push
int
mov
cmp
or
cwtl
or
repnz
inc
dec
rcll
call
jns
mov
ret
dec
das
fildll
adc
sub
push
mov
loop
lock
jle
add
mov
jb
or
cmp
push
cmc
call
inc
insb
pusha
push
mov
mov
call
and
adc
popa
pop
dec
jne
jbe
mov
push
test
sbb
out
cmc
in
or
jne
mov
insb
hlt
notl
sbbl
jnp
cmpb
xchg
aad
in
and
sub
rclb
mov
jl
cmpsb
fwait
roll
mov
ds
push
daa
sub
aad
enter
push
add
mov
int
popf
dec
loopne
or
mull
adc
adc
pushf
mov
insl
mov
xchg
dec
dec
adcb
frstor
add
xchg
sub
dec
aas
mov
icebp
xchg
jbe
sahf
and
aam
xlat
push
fcos
iret
xlat
xor
ret
dec
mov
push
xchg
mov
mov
addb
xchg
sub
test
es
and
mov
mov
sarb
mov
dec
sti
sub
or
xor
pop
push
sub
sub
push
xchg
mov
imul
in
shll
hlt
adc
adc
mov
push
mov
mov
or
push
inc
mov
ljmp
sub
add
mov
add
mov
mov
or
jne
mov
aam
and
mov
dec
iret
fs
addb
sub
push
add
cwtl
aad
sub
jno
or
pop
dec
cmp
loopne
inc
lds
mov
call
add
or
repnz
cmp
push
xlat
inc
jg
add
mov
mov
xchg
push
pop
movhps
sahf
rol
inc
daa
test
xchg
sub
mov
dec
into
pop
fs
clc
add
loopne
in
out
shlb
pop
pusha
data16
orl
test
clc
lret
clc
fstpt
int
jno
mov
std
add
adc
jle
dec
jl
xor
je
mov
int
mov
cld
in
jne
push
iret
pop
fisubrs
pop
lea
dec
xor
adc
dec
movsb
je
addr16
and
mov
insl
sbb
pop
loopne
adc
stos
xchg
xchg
sbb
aam
xorb
int3
aam
xor
pop
std
xor
jg
dec
xchg
or
add
out
out
sbb
mov
out
xor
adc
xchg
pushf
add
cmp
fcmovnu
pop
in
cli
add
mov
pop
addr16
test
mov
cmp
dec
scas
mov
data16
js
pop
sbb
mov
stos
das
dec
dec
push
jecxz
js
add
xchg
and
loopne
jmp
sbb
lods
or
xor
xor
push
repz
ja
pusha
insb
test
cmp
dec
add
xrelease
sub
pop
sub
fldcw
scas
jbe
jle
int3
inc
stos
sub
fisubrs
mov
fldl
bound
push
xchg
arpl
jge
inc
lret
fisubs
lcall
cs
aam
ja
xchg
sbb
fcomps
ja
outsb
add
add
mov
ret
fisttpll
or
mov
lods
shr
sub
sbb
scas
loopne
add
mov
orb
dec
call
jbe
mov
jp
lds
push
sub
add
jmp
insl
or
std
andl
or
call
lahf
or
sbb
xchg
push
jmp
xchg
push
mov
mov
mov
fstl
add
or
cmp
pop
loope
xlat
pusha
js
das
mov
mov
xor
icebp
lea
stos
pop
rcl
dec
rcll
sbb
xchg
jbe
cmp
sub
fsts
fs
pop
jmp
and
es
fcomps
jno
dec
test
ljmp
jnp
repz
leave
mov
insl
xor
xor
lcall
jle
sbb
ret
iret
lods
sub
push
pop
add
test
lods
cmp
stc
lock
lcall
mov
pushf
mov
pop
rorb
mov
iret
xchg
loopne
lret
push
inc
ror
cmp
jg
sub
outsb
ja
aas
xlat
fbstp
iret
aad
orb
jl
sub
fcoms
or
mov
pushf
xchg
mov
repz
incl
inc
std
fisttps
popa
dec
pop
pusha
sbb
jg
cmp
jo
cmpsl
mov
stos
jecxz
ret
loop
or
pop
mov
mov
hlt
pop
push
push
lea
out
and
inc
pop
into
ret
out
test
or
enter
xor
jmp
jae
and
inc
jne
and
pop
add
mov
ret
into
loopne
pop
dec
imul
daa
jle
fsubrl
hlt
mov
or
jne
sti
test
sbb
cmp
inc
xchg
ret
fisttpll
arpl
sbb
mov
jno
xor
xchg
stos
sbb
rclb
enter
adc
rcrb
push
lret
ljmp
movsl
mov
daa
jns
rorb
notb
xchg
xchg
sbb
dec
lds
lcall
pop
and
addb
pop
nop
sub
cwtl
mov
jg
xchg
sub
cmp
or
mov
mov
jnp
mov
mov
and
outsl
xchg
add
fwait
cmp
iret
pop
scas
call
jae
scas
popa
xchg
test
pop
enter
cmp
mov
inc
mov
pop
mov
mov
mov
stos
fisubl
ret
repnz
or
add
pop
in
test
add
les
aam
lahf
fmull
mov
pop
pop
hlt
pop
insb
or
jne
dec
test
jg
pop
movsb
xor
outsl
dec
je
shrb
cmp
fimuls
push
mov
push
test
addr16
dec
repnz
popf
jb
mov
xlat
dec
shlb
in
outsb
in
outsl
iret
lcall
push
xlat
fmul
bnd
in
dec
sbb
outsl
sbb
push
ftst
clc
xchg
mov
cmpsl
test
cltd
call
insb
xor
sbb
sub
pop
pusha
push
sub
stos
frstor
push
xchg
sub
rolb
xchg
inc
jle
les
xchg
cltd
mov
negb
fisubs
sbb
ds
test
sub
fcmovne
mov
imul
dec
mov
mov
je
test
xor
neg
push
pop
cltd
inc
icebp
sub
rcll
outsl
icebp
movsl
mov
xchg
insb
scas
mov
shlb
in
lock
add
cmp
cli
or
push
cmc
aam
ss
mov
cmpsl
push
in
sub
faddl
lret
clc
and
or
jns
jb
scas
xchg
mov
outsl
aaa
paddsw
rorb
adc
negl
popa
fs
jo
mov
outsl
call
adc
shl
addl
pop
pop
ds
arpl
jo
cmp
jno
aam
mov
shl
inc
ret
pop
arpl
and
dec
mov
lds
fsubrp
sbb
jns
ficoms
leave
leave
add
jecxz
decl
es
adc
sarl
imul
pop
adc
and
adc
sub
push
rcll
dec
hlt
subps
hlt
sti
repnz
push
in
insb
cld
daa
jge
aas
lea
popf
inc
outsl
lods
pop
mov
push
fnsave
or
pop
cmp
fnstsw
mov
adc
lcall
mov
or
push
test
clc
push
out
sbb
xor
mov
mov
cmc
call
push
push
adc
das
gs
dec
cwtl
push
xor
aaa
aas
fwait
pop
imul
rclb
mov
clc
push
inc
push
push
sti
bound
mov
dec
add
mov
cltd
int3
adc
icebp
arpl
dec
rcrb
jmp
adc
xor
pop
lea
movsl
xchg
cld
jg
and
xor
xor
arpl
std
mov
mov
lret
inc
ret
daa
mov
push
repz
or
je
push
test
stos
sub
sbb
aam
in
jb
lcall
inc
dec
push
pop
sbb
and
or
pop
lahf
lods
mov
fcom
cmp
pop
jmp
out
iret
sahf
jnp
in
clc
pop
push
jmp
pop
insb
or
gs
push
push
cmp
lcall
and
pop
test
cmc
sbb
xor
dec
jbe
pop
mov
pop
fucomip
jo
cmp
dec
lret
aas
ljmp
aaa
push
cmp
jo
mov
rorb
clc
test
pop
testb
adc
outsl
repnz
push
inc
dec
push
test
icebp
ror
adc
in
xchg
or
shr
push
mov
push
dec
mov
dec
pop
popa
xor
push
lea
jmp
fsubrl
lret
ss
xorl
test
mov
divb
repz
add
in
out
pusha
xor
inc
pop
or
arpl
mov
fidivrs
int3
rcl
cld
mov
fsub
xlat
fists
mov
jg
insb
jle
xor
sub
lods
hlt
pop
test
inc
push
stos
xlat
cmp
out
outsb
pop
xchg
xchg
mov
and
test
cmp
cmp
popa
jmp
ja
lea
aaa
mov
mov
xlat
fbld
psubsw
rcll
ja
xchg
mov
fsubrp
inc
push
or
xchg
xor
mov
aam
pop
loope
jo
out
mov
mov
fsubs
ret
insb
in
add
inc
xor
inc
xor
dec
aad
pop
jns
pop
push
in
xchg
pushf
mov
mov
fsubrl
and
scas
lret
ss
inc
dec
pop
add
arpl
mov
sti
repz
repz
mov
or
or
repz
dec
rcrb
addr16
std
xchg
cmp
test
std
int
sbb
aaa
mov
inc
push
aam
test
add
sbb
xor
push
fucom
in
jg
mov
cmp
cmp
gs
decb
movsl
test
sbb
mov
shl
stc
lods
add
or
cli
add
outsb
aad
jle
jns
inc
stos
dec
mov
sarl
shrl
adc
pop
cmp
or
fwait
inc
xchg
adcb
out
xor
xor
sbb
shll
leave
cli
pop
pop
dec
mov
outsl
fstpl
mov
gs
jg
cld
cmp
dec
jp
popa
imul
sahf
cmpsb
mov
mov
jne
lret
push
push
or
xchg
pop
bound
and
in
pop
lods
jecxz
outsb
stc
sbbl
scas
sub
ja
ja
xor
pop
imul
ror
fsts
pop
adc
xor
or
pop
ljmp
lods
sub
pop
dec
pusha
int3
add
jb
clc
sbb
mov
mov
js
dec
loop
mov
cwtl
insl
cltd
mov
mov
or
dec
sub
push
out
xchg
jge
cmpsl
nop
mov
dec
neg
popa
out
cli
cmc
in
adc
pop
or
scas
out
imul
jge
arpl
test
out
xor
dec
movb
imul
mov
loopne
sti
in
or
sub
cli
xor
adc
push
js
sahf
cmpsb
rcl
push
push
cmc
test
or
mov
ss
fistpl
push
jnp
adcb
fwait
scas
lds
inc
lret
fiadds
add
pop
push
lods
ficompl
cmp
call
pop
mov
repz
add
cmp
cmp
das
insb
in
and
test
das
loop
aad
enter
mov
sub
enter
out
pusha
lcall
mov
jae
adc
xor
dec
pop
push
pop
dec
in
sahf
xchg
and
add
in
out
idiv
fists
cmp
das
mov
sbb
cwtl
js
es
enter
js
mov
xchg
sub
stos
add
cmp
cmp
je
test
stc
movsb
leave
mov
addl
sti
xor
dec
jge
popa
aam
mov
imul
sub
push
test
test
bound
in
mov
xchg
test
ret
fidivl
cmp
test
jle
xor
je
and
push
movsb
push
das
fwait
int3
cmp
jb
add
aad
sub
pop
dec
sbb
push
and
sbb
mov
xor
imul
aaa
and
repnz
aad
jb
mov
inc
jg
mov
clc
jae
push
ja
sti
push
stos
daa
stos
ja
cmp
bound
push
jg
jl
mov
imul
xchg
mov
sub
pop
cmc
incl
pop
mov
loop
movsl
movsb
adc
cltd
fdivrl
ds
sbb
ror
cmp
cmp
sbb
imul
jo
subl
jo
mov
push
lret
adcb
add
jo
mov
push
xchg
rorb
outsl
xor
lea
mov
dec
mov
push
shr
and
addr16
pop
inc
orl
pushf
outsb
lret
ror
push
mov
ljmp
sub
ljmp
and
jnp
add
dec
rcr
mov
push
push
fs
jne
or
movsb
outsb
aas
inc
push
sbb
pop
jp
xor
lods
lock
out
loope
std
mov
cmp
orb
mov
xchg
jg
or
fwait
scas
and
dec
insl
push
jle
push
aas
dec
push
gs
popa
iret
xlat
jbe
adc
rorb
adc
outsb
add
jge
xchg
push
nop
cwtl
xchg
add
mov
aaa
mov
stc
or
mov
ds
jb
stc
mov
mov
cld
push
xchg
adc
cmp
hlt
mov
mov
xor
or
push
push
cmp
push
shll
mov
out
mov
arpl
loope
in
pop
sbb
or
dec
mov
push
add
test
lcall
in
push
out
std
shlb
inc
pusha
leave
and
sbb
outsl
pop
lea
and
mov
lods
out
add
repnz
es
cmp
dec
insl
shlb
pop
jge
cmp
lcall
mov
pop
ss
pop
adc
pop
dec
inc
in
aaa
push
sbb
xchg
mov
fnstsw
mov
testl
cwtl
das
push
dec
or
pop
jge
jns
enter
lcall
loope
lock
xchg
adc
and
lock
mov
lock
je
cwtl
cmp
pusha
lods
inc
inc
ror
rcr
loope
test
and
mov
inc
mov
stc
jl
aam
pop
adc
fisubs
and
and
dec
pop
dec
jae
or
and
mov
jecxz
fwait
jnp
ljmp
add
mov
hlt
enter
dec
push
sbbl
fcom
and
push
out
sbb
mov
pop
inc
cmp
mov
mov
jae,pn
pop
push
inc
mov
stos
shl
add
mov
push
sub
dec
push
stos
jmp
pop
loopne
or
outsb
xchg
sbb
jb
inc
xchg
jg
mov
adc
bound
mov
cmp
jne
sbb
jno
pop
test
xlat
jb
jp
xlat
xchg
outsb
mov
pop
lret
xchg
adc
pop
adc
fidivl
ljmp
and
fsub
sbb
xor
inc
dec
push
xor
or
test
fabs
jns
into
mov
xor
pusha
pop
je
lea
xchg
movsl
xchg
les
adc
mov
push
push
out
movsl
outsb
push
sarb
outsb
jecxz
aaa
in
mov
jg
and
jmp
test
fs
orb
or
fsubrp
clc
idiv
ja
in
dec
inc
stos
jb
mov
inc
lods
mov
mov
sbb
std
and
mov
pop
push
mov
mov
add
int
sub
jb
dec
cli
xchg
jb
and
mov
test
mov
dec
fcmovbe
or
and
mov
xchg
pop
inc
xchg
mov
leave
cmpsb
fldlg2
jns
out
sbb
mov
pop
dec
xchg
cmp
add
pop
lock
adc
stos
add
mov
sbb
add
push
push
xchg
lret
rcr
mov
dec
mov
sub
sbb
adc
dec
in
xor
cmpsb
inc
les
out
negb
mov
pop
push
jno
adc
movsl
scas
ljmp
repz
repz
add
jmp
cmp
movsb
gs
fcompl
movsb
mov
aam
insb
xor
incl
sub
dec
movsl
pop
and
jge
sti
outsb
mov
add
aas
in
mov
clc
cmpsb
push
and
inc
inc
push
pop
das
mov
cmp
xchg
mov
ret
fisubl
stc
cld
adc
or
sbb
popf
scas
sbb
pop
insl
jg
or
cltd
stos
mov
mov
iret
dec
xlat
loope
out
iret
leave
or
in
fadds
iret
aaa
je
fiadds
addr16
fcmovu
mov
insb
sbb
and
ja
cmp
mov
sahf
std
fsubs
subl
sub
in
dec
insb
popa
repz
lea
ss
dec
leave
pop
ficoms
jmp
pusha
mov
cmp
sbb
adc
stos
stos
lcall
idivb
repz
pop
faddl
jb
pop
loopne
subl
push
test
dec
je
movsl
lret
out
fstl
int3
adc
and
test
pusha
add
pop
mov
sarl
ljmp
and
fs
test
repnz
xchg
push
pop
pusha
fs
cmc
rclb
repz
sbb
leave
push
sbb
inc
mov
pop
arpl
mov
ljmp
sbb
pop
daa
mov
inc
jp
clc
rclb
mov
ret
fsubs
popf
lahf
setno
sar
or
fcmovbe
pop
sub
fstpt
mov
mov
sub
add
and
icebp
push
lcall
xchg
out
mov
dec
frstor
loope
pop
cmc
xor
and
cs
shll
jnp
inc
cmp
mov
ss
aad
fninit
jmp
test
mov
mov
dec
gs
pop
arpl
data16
sbb
jecxz
cld
push
or
adc
sub
xchg
sub
adc
fnstenv
mov
je
add
in
rcr
mov
inc
in
shrb
add
repnz
mov
mov
shrb
mov
add
sub
cmpsl
cmp
inc
dec
push
jne
imul
xchg
sbb
dec
shl
shl
jb
adc
daa
sub
aaa
xor
js
outsb
jo
nop
nop
andl
call
stos
mov
ret
sub
sahf
adc
push
inc
dec
nop
push
test
addr16
test
sub
or
xor
pusha
popa
sub
xor
xchg
mov
loope
out
add
sub
gs
cs
es
aam
jae
andl
mov
imul
lea
decb
push
jae
sub
sub
add
inc
add
jmp
sbb
lret
aam
and
push
cwtl
xchg
repz
xorb
inc
and
call
sub
push
pop
mov
cmp
push
loop
out
cli
add
shll
nop
push
push
pop
jp
xchg
push
add
fbstp
jno
xchg
pop
sbb
fmull
lret
sbb
lods
add
mov
add
push
jo
out
negb
adc
sbb
sub
mov
bound
test
lahf
xchg
dec
mov
ret
rcr
loope
neg
add
adc
fisubs
stc
add
pop
pop
popa
imul
scas
sahf
sub
cmc
in
mov
lret
sub
rorl
stos
push
push
adc
orl
jl
xchg
fwait
mov
ds
adc
push
or
and
adc
mov
lcall
jecxz
leave
incb
add
aad
mov
jmp
sbb
movsl
mov
jne
cmp
mov
pop
vmovapd
loop
cmc
std
in
ljmp
mov
pop
gs
enter
test
dec
mov
ret
inc
movsl
sub
decl
adc
cmp
inc
dec
pop
mov
test
xchg
lahf
mov
mov
mov
shrl
nop
mov
mov
shrb
scas
or
mov
std
push
clc
push
dec
frstor
xor
pop
cmp
jns
scas
popa
jno
mov
sbb
or
je
jmp
xchg
popa
insb
jmp
cld
mov
cltd
xor
mov
neg
out
sbb
popf
es
cmp
pop
xchg
data16
adcl
mov
imul
imul
shll
bound
mov
push
fstps
jmp
jge
inc
ror
mov
dec
rclb
inc
jae
jge
lea
mov
fcompl
lahf
lcall
cs
xor
ljmp
shrb
dec
shll
ja
fidivl
mov
xor
stc
cmp
fwait
inc
sub
dec
push
dec
add
dec
iret
ljmp
pop
cmp
test
push
push
ljmp
iret
dec
fistpll
lret
and
sub
roll
pop
ss
pop
xor
xchg
push
test
dec
adc
fstp
daa
orb
ret
fidivl
adc
jno
push
jle
jnp
jb
shlb
mov
mov
sbb
scas
xor
bound
aas
mov
jae
cmpsb
cmp
movsb
mov
and
cmp
sbb
lret
testb
pop
xchg
or
fsub
lods
push
mov
movsl
adc
dec
lcall
push
jb
sub
xor
push
lds
aad
in
jg
mov
int3
dec
sub
adc
lock
mov
ret
es
mov
in
push
or
sub
mov
cmc
add
leave
cltd
std
movq
stos
cmp
pushf
cmc
dec
push
adc
imul
inc
push
mov
aad
or
mov
ljmp
dec
jae
xor
ja
les
in
xor
sub
jno
popa
rcrl
add
pop
scas
dec
mov
sub
in
dec
jl
cmp
inc
pop
and
fsubp
icebp
mov
popf
in
inc
pop
jb
sti
push
push
addl
pop
lods
bound
xchg
add
or
repz
sbb
dec
shl
mov
jl
subl
jno
lods
lahf
cmpsl
mov
popf
fs
dec
mov
lret
push
imul
lcall
adc
jnp
popf
sub
mov
sbb
int3
out
fsubl
adc
ret
mov
pusha
std
xlat
inc
and
sbb
inc
aaa
mov
addb
xor
cli
sti
insl
mov
imulb
and
aaa
outsl
shrb
push
cld
nop
add
push
mov
mov
pop
repz
out
xchg
lds
inc
push
jns
in
sub
or
xor
xchg
fabs
jmp
jmp
loope
push
dec
ret
sti
stc
in
jno
lds
jnp
or
into
fsubrp
int3
mov
cld
jb
shl
dec
mov
mull
mov
addr16
movsb
fistps
cwtl
mov
and
mov
dec
pop
fnstenv
lcall
les
mov
bound
incl
sub
or
pushf
dec
cmc
add
js
mov
in
sub
sbb
mov
fisttpll
dec
cmc
and
cmp
sub
xchg
imul
mov
repnz
add
dec
or
jno
int
push
imul
jno
push
xchg
orl
dec
out
enter
push
sub
ljmp
mov
mov
loop
out
loopne
rcr
xor
incb
pop
cmp
pop
pop
sbb
pop
mov
lcall
pop
shrl
les
stc
mov
lods
and
inc
jne
pop
lea
xchg
or
out
ja
jns
add
out
jae
popf
je
pop
xchg
jae
or
mov
lds
sbb
loopne
lret
in
cmc
std
add
sub
pusha
shrl
add
adc
nop
sub
es
xor
xorl
lea
mov
mov
hlt
mov
js
addl
sti
xchg
lcall
ljmp
push
sbb
les
and
loope
nop
cmp
sahf
addr16
and
iret
das
xchg
cwtl
cmpsl
xchg
pop
ret
cmp
dec
dec
pop
fcompl
bnd
or
adc
mov
rcl
outsl
ljmp
imul
arpl
lock
sti
jo
and
popf
cmpsb
cmpsl
mov
aad
addr16
jg
or
sbb
xchg
and
add
mov
inc
mov
lret
enter
loop
icebp
ljmp
jnp
hlt
out
aad
jp
jae
es
mov
push
shll
insl
repz
stos
mov
push
lret
stos
xor
push
jne
ljmp
sub
jp
dec
loope
out
add
or
inc
or
popa
xor
test
or
les
call
mov
pop
sub
pusha
push
pop
gs
je
test
loop
push
pop
cmp
fstl
fsubrs
test
push
insl
jmp
adc
lret
mov
or
sbb
ret
addr16
add
fwait
push
nop
lods
lods
mov
loope
fdivrp
jge
adc
in
out
aam
jno
dec
lret
push
jbe
mov
shll
decl
add
and
inc
sbb
xchg
not
jb
std
jge
or
xor
inc
daa
push
and
rorl
lcall
loop
jg
jmp
or
mov
insb
int
xor
in
lret
call
push
mov
pop
js
dec
ret
mov
fdivrl
cli
int3
pop
aas
add
xlat
push
imul
adc
mov
ficompl
in
icebp
cld
in
adc
xor
xchg
inc
sbb
add
hlt
pop
iret
push
aam
push
incl
sahf
imulb
inc
int
push
xor
insl
push
jge
jnp
mov
pop
outsb
ja
ret
mov
fldenv
mov
ss
sub
dec
mov
out
loopne
push
nop
adc
mov
imul
mov
mov
int3
stos
xor
mov
subb
sub
loope
dec
loop
in
imul
xor
inc
push
dec
pop
imul
sahf
lods
sarl
push
notb
push
xor
cmp
mov
adcl
int3
dec
rorl
insl
repz
cmpsl
mov
es
cmp
out
iret
shll
call
fwait
sbb
push
aam
push
sbb
dec
pop
or
lock
xchg
xchg
mov
mov
imul
cwtl
sub
in
cld
pop
std
sub
add
rcl
mov
add
adc
mov
insl
lock
xchg
cmpsl
pop
std
mov
mov
aad
repnz
repnz
mov
das
mov
dec
pop
sbb
js
adc
sbb
jne
andl
mov
jle
stc
ja
cs
je
in
sub
mov
aam
aas
push
rclb
mov
or
sub
scas
scas
inc
push
pop
je
jecxz
outsl
pop
pop
pop
adc
jo
push
xchg
push
scas
andl
sub
imul
xchg
mov
ret
ret
jp
fistpl
icebp
push
sbb
mov
adc
arpl
mov
mov
mov
hlt
jge
push
mov
lret
add
sbb
repz
xchg
jp
or
sbb
or
mov
mov
fimull
pop
gs
jne
inc
inc
inc
and
push
call
movsl
in
and
sub
sbb
jbe
jbe
xor
push
insb
lods
ret
push
mov
add
add
dec
pop
inc
mov
jns
cs
rolb
jo
mov
cltd
aad
call
clc
push
dec
frstor
ja
cltd
jmp
fnstcw
loope
addl
xor
xor
inc
fistl
adc
icebp
cmp
sahf
push
inc
mov
loope
loope
sub
adc
cs
xor
fisubrl
mov
mov
dec
imul
jnp
test
sub
ss
fldt
mov
out
mov
movsb
mov
lret
push
shl
repz
sbb
and
int
es
fs
push
mov
push
mov
push
jge
ror
pop
in
outsb
loopne
int
sbb
inc
lods
iret
pusha
fists
lds
push
sub
push
lret
loop
cmc
mov
xchg
mov
outsb
push
loope
std
lds
sbb
cmp
mov
fimuls
mov
popf
sahf
filds
dec
inc
push
xorps
out
dec
jbe
mov
mov
lret
jecxz
jnp
mov
dec
jmp
popa
cmp
iret
and
xor
imul
xchg
cmpsb
sbb
xor
push
test
loop
imul
sub
scas
mov
dec
cmpsb
divb
fdiv
incb
xchg
out
sub
dec
pop
jno
xchg
jbe
stos
jl
sahf
popf
rep
repz
int3
imul
in
test
mov
or
xor
push
pushf
sbb
jp
lods
mov
pushf
fisttps
add
sbbb
xor
into
mov
insb
jecxz
jl
jp
adc
xor
loopne
cmc
stc
add
sbb
pusha
ss
adcb
pop
pop
enter
cli
fisubl
add
add
push
pop
dec
mov
xchg
lahf
nop
shrl
cmpsl
scas
mov
mov
and
daa
das
cmovge
dec
popa
outsl
js
push
test
mov
push
mov
test
ret
pop
and
dec
cmp
push
movb
movsl
pushf
cmp
imul
or
push
dec
inc
fists
popa
jbe
mov
cmpsb
jnp
movsl
aas
scas
mov
out
lods
fsubl
scas
xchg
cmpsb
sbb
push
push
lea
xor
mov
mov
cmc
and
sbb
dec
jl
mov
mov
push
lods
lods
call
bnd
setb
dec
shl
pop
popf
dec
rcrl
jne
add
jne
outsl
fsubl
in
cmc
std
add
adc
sub
enter
pop
pop
dec
imul
and
inc
dec
cmpb
jo
test
cmp
scas
es
dec
sbb
outsl
icebp
test
aaa
cmpsl
cs
fsubs
imul
and
xor
dec
dec
test
jno
cmpb
pop
lock
mov
mov
sti
xor
mov
dec
pop
pusha
push
mov
test
shll
mov
adc
insl
inc
dec
js
push
mov
insb
imul
inc
mov
mov
leave
les
xlat
push
mov
decb
jae
pop
cs
sub
push
insl
mov
in
ljmp
inc
inc
and
pop
pop
pop
cld
int3
jl
xchg
adc
movsb
mov
push
jae
pop
jg
ret
xor
sub
mov
push
pop
je
test
popf
jge
fstpt
aaa
int
dec
in
jmp
mov
enter
call
jmp
add
call
xchg
mov
ret
leave
shll
pop
mov
xorl
mov
jg
lock
daa
adc
addr16
dec
out
mov
test
cltd
mov
loopne
pop
nop
lods
pop
mov
and
cmp
cmpsl
sbb
orl
rcr
adc
out
sbb
sbb
cmp
jmp
pop
mov
outsb
stos
fadds
int
or
decb
out
sub
cs
inc
or
imul
ds
mov
repz
jne
jmp
clc
xor
inc
pop
test
xchg
jge
mov
mov
hlt
add
jl
in
or
adc
xor
push
dec
cmp
adc
lea
cs
lret
jmp
or
shrl
push
jmp
subb
mov
mov
jp
scas
cli
add
cmp
push
cmp
push
inc
push
cld
push
sbbl
mov
movl
pop
das
aam
js
idivb
dec
xor
jg
adc
mov
iret
push
sbb
xor
mov
mov
or
xor
sub
imul
test
dec
loope
fucomip
out
adc
fidivl
pusha
fisubs
push
into
test
jne
ret
stc
jnp
es
xchg
loope
addl
pop
or
rol
into
fs
and
sbb
ficoms
dec
adc
test
xchg
scas
lods
fwait
mov
ljmp
icebp
sti
outsl
push
sub
mov
movsl
shrb
or
in
into
inc
and
xor
pusha
sub
push
outsl
mov
js
mov
adc
sub
xchg
mov
and
push
popf
dec
adc
sbb
sbb
xor
inc
pop
mov
xchg
mov
jbe
scas
sbb
dec
fucomp
adc
cwtl
push
jle
adc
stos
ror
jae
sub
push
outsl
das
mov
out
std
mul
loopne
icebp
mov
mov
dec
jp
cmp
push
repz
adcl
add
loop
loopne
ds
imul
inc
sbb
push
leave
ds
int
jne
test
adc
and
adc
inc
sti
mov
pop
xchg
xor
mov
cmpsb
mov
ret
ret
push
pop
arpl
xchg
jb
and
in
fdiv
jbe
mov
xor
inc
lret
pop
out
push
jl
and
fwait
pop
mov
mov
aas
scas
fsubrl
cmc
popf
mov
mov
sbb
push
inc
aaa
es
sbb
insl
dec
lcall
mov
in
repnz
jno
mov
push
adc
gs
jo
adc
push
push
jle
shl
das
sbb
push
scas
fsubs
adc
js
mov
dec
int3
fldt
out
jns
adc
pop
adc
clc
clc
aaa
dec
push
pop
cmp
out
sbbl
cltd
mov
push
sub
or
adc
and
sub
xchg
xor
inc
lods
push
lods
fsubs
ret
ljmp
cmp
jp
inc
sbb
pop
bound
lret
ficoml
jl
and
mov
sub
arpl
mov
mov
lcall
jge
ret
jnp
dec
and
sub
push
jbe
fs
enter
jb
ss
mov
test
rolb
out
adc
cli
and
xlat
mov
mov
pop
and
test
daa
xchg
cmp
xor
insb
cmp
jp
mov
push
mov
mov
sbb
aas
and
push
sub
das
aaa
aas
outsb
test
xchg
mov
mov
jmp
mov
loopne
fwait
or
loopne
jecxz
mov
decl
pop
mov
shrl
jmp
cmc
daa
or
xor
mov
jle
and
popf
jne
mov
xchg
roll
push
adc
mov
rcrl
push
mov
mov
test
jnp
pop
repz
inc
xor
imul
mov
xor
sub
jnp
movsb
sbb
xorb
test
daa
lahf
cmp
inc
mov
push
popf
test
xchg
adc
xor
out
testl
cli
and
mov
push
mov
into
rcr
mov
lock
call
inc
rclb
push
xchg
xor
arpl
scas
fucomip
je
lcall
cs
iret
inc
mov
js
das
xchg
cmpsb
cltd
cmp
gs
test
mov
movsl
or
mov
mov
adc
jmp
push
cltd
pusha
je
jno
xchg
add
cmp
in
call
push
lcall
xor
dec
push
push
ds
push
mov
test
xchg
loope
push
mov
mov
or
sbb
divl
jnp
sbb
inc
mov
ret
jp
ret
cld
xchg
movsb
adc
and
push
ss
scas
cmp
movsb
repz
gs
imul
imul
inc
add
insw
add
sub
sbb
fucomp
jp
std
outsb
dec
mov
vsubps
clc
jne
mov
xor
lods
push
scas
cmc
jp
lret
outsl
xor
testl
insb
rorb
pop
xchg
xchg
repnz
lahf
cmpsl
mov
jg
in
xlat
out
fdivrp
lock
dec
mov
enter
shlb
out
outsl
xor
cld
push
nop
fistl
xchg
and
shll
inc
push
cmp
mov
addl
cltd
mov
stos
enter
add
pop
xchg
sbb
call
out
jge
test
jne
test
outsl
dec
cmpsb
adc
lcall
shrl
xor
pop
jno
inc
testb
ret
jle
xchg
shl
popf
pop
fninit
fidivrl
sbb
dec
mov
inc
xor
stc
lea
and
pop
jge
dec
movsl
jne
pop
xchg
fwait
cld
popf
pop
sub
xor
mov
xchg
pop
lods
imulb
ljmp
iret
or
mov
inc
mov
jg
xchg
inc
rcrb
add
std
dec
test
aaa
rorb
scas
xor
and
xlat
enter
adc
inc
push
int3
dec
add
inc
cmp
mov
loopne
jno
sub
scas
daa
into
xor
and
jmp
imul
add
out
inc
mov
dec
or
adc
sar
pop
jl
inc
mov
test
loopne
ret
es
icebp
lock
enter
sbb
popa
lock
insb
icebp
pop
sahf
mov
or
ficomps
jmp
inc
xor
mov
dec
xchg
dec
cli
aam
inc
mov
ljmp
inc
out
push
sbb
dec
cmp
adc
sbb
fstl
mov
adc
cmp
cld
fnstsw
pop
xchg
cld
bound
and
outsb
xor
lahf
adc
daa
movsl
cmp
ja
push
xchg
pop
pop
jne
pop
data16
jg
mov
pop
clc
xor
das
imull
daa
das
mov
dec
cmpsl
clc
sbb
push
inc
ds
cltd
mov
stc
jle
test
in
jecxz
push
mov
inc
add
imul
daa
mov
sbb
mov
inc
and
xor
pop
jmp
cmp
sahf
pop
inc
mov
dec
arpl
in
sti
ljmp
rorl
add
push
popa
hlt
mov
inc
mov
xchg
ret
lret
shrl
dec
mov
dec
ss
imul
xchg
mov
hlt
sysret
or
fsub
rcl
or
adc
xor
sub
scas
lods
mov
dec
cmc
loopne
std
push
cmc
sbb
sbb
inc
int
pusha
pop
pop
aas
sub
in
gs
mov
fcmove
rcrb
lret
cli
fidivl
push
push
adc
das
lahf
shrl
lahf
into
pop
lcall
fimuls
sarb
sub
daa
pop
nop
and
push
pop
addr16
xchg
nop
cwtl
fbstp
cltd
shrb
push
movsl
sub
push
xor
jg
push
and
ret
xor
jmp
loope
mov
add
xchg
sbb
mov
sbb
dec
daa
inc
push
pop
mov
andl
push
push
es
incl
ljmp
sahf
test
ret
adc
jecxz
dec
jo
sti
imul
imul
outsl
repz
mov
cld
fsubrl
ss
dec
mov
adc
push
fldenv
outsb
cmp
push
add
fs
mov
fst
push
ret
jbe
sbb
cmp
sbb
lcall
lret
loop
mov
fcomps
rclb
loop
out
mov
sub
mov
pop
int
out
push
jb
fisttpl
add
rolb
bound
addr16
mov
dec
mov
enter
pusha
sub
popf
lahf
pop
and
mov
aas
sbb
aam
xchg
or
xchg
pushf
and
imull
scas
notl
sub
loop
in
and
jle
cld
mov
cltd
dec
mov
inc
and
pop
pop
aam
push
notb
cmp
stc
insl
in
mov
lcall
lea
sarb
int3
into
or
cmp
mov
mov
in
imul
cmpsl
or
fistl
or
and
cli
mov
shld
cwtl
push
and
inc
test
fmuls
pushf
sbb
pop
push
int3
gs
arpl
stc
pop
stos
adc
mov
shll
enter
sbb
and
sub
loop
dec
dec
push
pop
jno
xchg
xor
ja
push
leave
xchg
lahf
out
cmpsb
xlat
sub
lret
repz
push
xchg
imul
call
out
or
cmp
imul
test
bound
int3
dec
jae
arpl
xchg
add
add
push
addr16
push
cmpsb
pop
nop
cmpl
mov
mov
lret
lock
aaa
push
jo
push
outsb
jnp
inc
sti
in
jmp
notb
loopne
out
gs
cmp
mov
xchg
je
xchg
sub
inc
pop
popf
std
xor
cli
cs
inc
repnz
pop
cmp
xor
pop
mov
mov
or
push
cmp
pop
js
jp
mov
push
loopne
in
lret
push
ljmp
andl
dec
push
mov
or
scas
mov
mov
out
sbb
daa
xor
push
gs
outsl
dec
mov
xchg
mov
pushf
push
loopne
icebp
lock
push
sbb
fwait
dec
push
in
or
sbb
mov
cmpsl
sahf
push
push
xor
in
push
repz
add
in
pop
jmp
xor
mov
cwtl
clc
jle
mov
pop
xor
xchg
faddl
sahf
popf
movsl
movl
stos
roll
out
jnp
rcll
sbb
fildll
sti
out
jb
mov
test
mov
pop
and
mov
loop
fidivrs
int3
mov
repz
jbe
int3
aam
pop
and
out
pop
lcall
dec
xchg
in
js
fs
lahf
sti
push
lods
lds
andb
or
mov
int
sub
jb,pt
mov
shl
dec
jb
add
pcmpgtd
cmpl
cwtl
ja
outsb
inc
test
pop
add
mov
sbbl
jp
inc
push
pop
movhps
xchg
mov
pop
mov
mov
jo
outsb
clc
adc
lcall
sub
sub
pop
xchg
dec
jns
rcl
repz
fincstp
push
jns
or
ds
jo
dec
and
or
push
faddp
pop
out
sbb
sbb
rcr
cmp
popa
cmp
xchg
mov
ret
xchg
mov
jp
in
push
loop
sbb
sti
adc
mov
imul
cmpsb
mov
lods
mov
pushf
fcom
aam
in
std
cld
ja
sub
cmp
rcll
mov
insb
frstor
insb
sbb
jmp
insb
add
mov
fisubrl
insl
jb
test
pop
pop
jae
pop
xchg
mov
lahf
movb
rcr
repz
inc
cmp
mov
jg
insl
xchg
pop
retw
fwait
loopne
jg
rorl
pop
pop
mov
ficompl
insb
xchg
lcall
dec
sub
rorb
push
xorl
rclb
push
push
jo
imulb
cmpsl
adc
les
jnp
fisttps
and
pop
mov
jle
imul
mov
imul
in
pop
pop
insb
rorl
push
mov
ret
lret
in
and
movsl
sahf
jmp
cs
ds
dec
cmp
lea
xchg
pushf
movsb
jns
insb
xor
rorl
out
or
aas
mov
cmc
sub
pop
mov
and
in
cmc
mov
jp
add
sarb
xor
and
test
nop
fwait
lret
std
jns
fs
adc
or
inc
inc
or
jmp
movsl
xor
sub
mov
xor
das
movhps
mov
push
pop
ja
cwtl
jae
cmpsl
es
lret
jle
shll
mov
stos
cmp
push
mov
clc
sti
dec
test
sub
cltd
mov
fwait
add
adc
stc
mov
insb
in
push
inc
in
xchg
jne
fnstcw
stc
mov
out
or
mov
ss
icebp
addl
rcl
fninit
ret
sbb
add
xchg
xchg
lds
cli
push
orb
dec
jp
out
lock
xor
mov
stc
adc
adc
cld
pop
inc
pop
xchg
and
mov
xchg
inc
aad
mov
cmc
cmp
mov
rorb
enter
call
xchg
xchg
outsl
sub
cmp
loopne
lock
cmp
or
inc
orb
mov
out
andl
scas
sti
ror
into
sbb
adc
test
dec
mov
mov
mov
into
lret
push
ljmp
fwait
mov
scas
fstpl
in
dec
rorl
nop
sbb
or
lcall
cmpsb
aam
mov
loop
js
add
cltd
mov
xor
pop
rcll
pop
addr16
mov
mov
lret
repnz
cld
xor
mov
cmp
add
sbb
aaa
popf
loop
mov
fsub
insl
xlat
adc
jmp
pop
addl
pop
ret
mov
mov
xlat
push
imul
iret
and
inc
dec
add
jb
pop
mov
ss
loop
mov
shll
insb
lret
adc
jno
iret
push
mov
mov
mov
ss
int3
add
out
inc
sub
incb
xchg
mov
dec
loopne
fimull
add
adc
rcll
es
es
data16
orb
movsb
movsb
lahf
jns
stos
icebp
hlt
imul
mov
pusha
xor
inc
cld
add
in
xchg
je
xchg
call
rolb
dec
ror
in
cmpsb
jmp
fidivrs
sub
dec
pusha
aaa
popf
xor
subl
mov
sub
and
sub
cmp
les
subb
xlat
cmpsb
lods
hlt
cld
add
sub
cmpsl
or
or
cmp
stc
pop
push
fs
and
dec
rorb
into
cmp
and
sbb
das
cli
test
dec
test
fdivs
cli
adc
sbb
cli
pop
shll
divl
pop
pop
cmp
sbb
xchg
notl
mov
mov
inc
cmp
mov
ficomps
sbb
sarb
icebp
push
and
aam
push
jg
in
sub
scas
aas
out
out
sub
or
movsb
sbb
ljmp
jle
out
jne
es
and
and
js
add
cltd
and
cmp
dec
adc
jne
pop
cs
and
mov
sub
lret
xorb
push
xchg
push
aad
lahf
pop
cmp
or
imul
pop
mov
aaa
ret
jmp
add
push
sbb
sub
insl
xor
nop
xchg
in
lds
mul
jns
in
scas
cmp
cmp
in
std
js
push
and
xchg
into
pop
fcomps
jg
or
or
sbb
jmp
scas
adc
stos
xchg
xor
rorl
mov
cmpsb
jmp
pop
in
ja
in
aas
jg
cwtl
add
shrl
int
rorb
cmp
dec
jmp
push
into
push
jns
mov
adc
leave
shll
pop
adc
and
cli
cmp
mov
inc
imul
popf
sbb
imul
insb
idiv
lahf
push
cmc
jns,pn
popf
mov
sub
jo
push
test
and
xchg
repz
ljmp
stos
inc
xor
call
xchg
cwtl
addr16
mov
iret
push
mov
data16
jg
pushf
xchg
xor
sub
cmp
iret
xor
imul
jle
fwait
rolb
dec
mov
nop
out
cwtl
out
mov
dec
fsubrs
imul
test
mov
mov
mov
mov
adc
pop
inc
pop
fsts
sub
or
lcall
mov
loop
jmp
xlat
mov
xor
push
inc
dec
xchg
out
cmpb
fs
mov
mov
sub
xchg
mov
add
push
xor
xchg
mov
test
mov
int3
jmp
mov
rcr
and
cli
cmp
push
push
mov
mov
mov
pushf
sub
shrl
mov
lret
call
popf
aam
cld
xchg
and
push
loope
dec
cmp
pop
mov
inc
insb
mov
jecxz
adc
xchg
int
jecxz
xor
pop
arpl
jnp
inc
push
jg
stos
ja
lret
xchg
movsb
iret
sub
mov
idiv
add
bound
jge
or
dec
xchg
lcall
lods
in
movsl
outsl
mov
add
cwtl
shll
inc
mov
test
cmp
push
sbb
cmc
cmpl
insb
or
rorb
jg
pop
xchg
lahf
cmpsl
mov
push
rclb
push
add
rcr
fcmovb
mov
cmp
adc
xorl
jmp
setae
nop
pusha
pop
scas
cmp
mulb
jns
dec
cmp
and
leave
mov
loope
jl
jl
mov
movsb
cmp
mov
push
pusha
sub
add
es
ss
into
dec
icebp
xlat
push
and
jp
fnsave
insl
inc
dec
ucomiss
pop
outsl
bound
insl
and
jb
sarb
mov
vpmullw
in
cmc
std
add
sub
cmp
jo
lds
neg
in
inc
mov
cld
loopne
sub
daa
mov
aas
xorb
xchg
popf
nop
cwtl
cmpsb
test
movsl
sub
add
add
add
jb
gs
xor
cs
insb
add
pusha
or
dec
pusha
or
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
add
das
push
push
popa
jb
and
push
je
popa
insb
je
add
push
ja
ja
ja
bound
insb
insl
popa
jae
gs
arpl
add
call
pop
sub
mov
add
jmp
jmp
add
jmp
sub
add
jmp
add
sub
mov
nop
lea
mov
lods
add
nop
clc
clc
dec
nop
stc
dec
sub
sub
stc
sub
sub
clc
rol
sub
dec
clc
clc
dec
nop
nop
rol
add
rol
nop
clc
clc
dec
nop
stos
loop
es
pusha
addr16
lahf
repz
rorl
iret
and
pop
rorl
mov
and
and
pop
pusha
inc
cwtl
in
pop
mov
jno
sbb
jecxz
shlb
jp
stc
icebp
pop
loop
adc
push
jns
cmp
scas
add
xor
mov
sub
negb
push
sbb
es
cmp
leave
mov
ja
xchg
andl
in
mov
mov
add
or
pop
adc
adc
insb
aas
and
movsb
jl
mov
adc
stos
xor
mov
and
xor
inc
or
je
cmc
nop
ja
or
aam
mov
inc
dec
jns
adc
adc
lahf
movsb
lret
gs
cld
mov
ss
mov
add
or
icebp
xor
sub
pop
rcr
test
mov
cmp
out
pop
pusha
rclb
pop
xchg
xchg
je
outsl
ja
jmp
or
push
int3
loopne
push
shl
add
lods
and
fists
pusha
sahf
std
js
mov
idivb
lods
sarb
jmp
adc
xorb
inc
movsb
scas
mov
jns
stos
test
push
mov
sub
divb
push
push
push
test
mov
adc
jle
or
imul
sarb
inc
fs
das
mov
pop
push
dec
popa
int3
sbb
mov
mov
mov
call
gs
loopne
cmp
pop
push
dec
inc
insb
insb
insb
js
test
push
ret
rcr
aam
cltd
inc
stc
ficompl
adc
cmp
fisubrl
imul
lods
movsl
push
les
ljmp
sub
xor
dec
cmpsb
sbb
adc
mov
mov
sahf
out
out
idiv
pop
lret
daa
das
aaa
pop
dec
push
pop
ret
test
outsl
adc
jbe
push
sbb
or
scas
loope
xor
sbbb
pusha
mov
cmp
sbb
js
leave
xchg
or
cmp
jp
xor
adcl
out
lcall
les
out
push
pop
aas
pop
es
xor
sti
addr16
push
imul
jo
stos
mov
ret
mov
push
fldcw
sub
dec
cmp
push
cltd
pop
insb
out
xchg
test
popa
imul
push
cld
test
jle
fisubrl
pop
movsb
pushf
mov
mov
les
xlat
fucom
in
pop
pop
jle
and
jae
sub
daa
mov
lea
push
sahf
data16
xor
push
jb
mov
or
fwait
sar
bound
fisttps
and
mov
and
xlat
filds
jle
pusha
es
pusha
mov
scas
fcomip
cmp
dec
aam
xchg
add
add
sbb
jg
popa
sub
test
shll
loopne
pop
jne
push
adc
sbb
les
mov
leave
inc
dec
mov
ret
sub
pop
movsl
stos
decb
mov
inc
mov
or
pop
mov
push
mov
stos
ret
sub
jmp
adc
sbb
cmpsb
and
rclb
arpl
orb
test
adc
int3
dec
mov
jnp
clc
inc
cmp
aas
adc
in
and
scas
cmp
mov
cmc
mov
push
sub
push
jbe
sub
and
xchg
xorb
mov
enter
adc
jno
lahf
jle
bound
scas
icebp
data16
mov
into
mov
subb
pop
xor
mov
addr16
sub
outsb
cmp
add
ret
enter
mov
insl
adc
fidivs
and
push
pop
mov
xor
cwtl
mov
enter
ljmp
push
cs
mov
add
push
leave
xchg
cltd
jl
outsb
sbb
mov
push
push
jne
fdivs
call
mov
dec
lret
and
mov
xchg
and
test
pop
enter
ja
aam
dec
fwait
xchg
pushf
mov
das
xor
adc
std
mov
movsb
sub
or
loopne
pop
xlat
leave
xor
add
les
xchg
rorb
sub
push
jge
inc
pop
mov
pop
push
or
movsl
lods
mov
jmp
sti
repnz
ret
push
bound
lcall
mov
out
inc
mov
pop
pop
cmp
xchg
mov
jae
imul
add
cmp
sub
clc
add
xor
pop
push
mov
pavgw
mov
push
je
rcl
fabs
cli
ds
push
sub
mov
jge
jae
adcb
jg
xor
loope,pt
idiv
es
adc
mov
pop
outsb
dec
push
jnp
pop
pop
dec
and
insb
inc
inc
xor
cld
inc
sahf
jmp
xchg
sub
in
inc
sub
pop
daa
int3
cmpb
dec
je
mov
xor
enter
push
fs
mov
xor
jl
std
test
xchg
fst
popf
hlt
fcom
push
lock
icebp
cmp
out
sbb
xlat
and
xchg
add
das
mov
rorb
sbb
mov
add
add
adc
push
mov
fsts
rcr
out
incl
paddusb
dec
xor
leave
cmp
loopne
inc
xor
nop
lahf
ret
js
inc
jbe
and
jmp
outsl
sti
nop
adc
stc
sbb
mov
scas
nop
push
adc
fisttps
add
cmp
imul
sub
xchg
pop
jecxz
ret
cmp
sbb
cli
fisubrs
mov
xchg
inc
mov
jl
and
imul
xchg
mov
xchg
mov
ss
xor
int
pop
jne
xor
les
mov
std
decl
clc
and
push
inc
dec
popa
sub
testb
clc
lock
dec
adc
repz
adc
mov
leave
xchg
int
jecxz
ja
fs
imul
inc
or
inc
imull
in
push
push
fs
mulb
jnp
adc
cli
jle
jecxz
xchg
inc
shll
movsl
xor
jns
inc
xchg
lcall
sub
es
ficomps
testb
aaa
aas
pop
xor
push
lahf
lods
xchg
lahf
push
aad
mov
or
clc
add
adc
and
cmp
sub
push
mov
stos
dec
arpl
xchg
jnp
iret
mov
pop
ljmp
and
mov
dec
push
pop
dec
mov
cltd
mov
leave
shll
push
push
pop
mov
es
dec
push
pop
data16
jbe
xchg
aaa
cmp
lret
jecxz
xor
sbb
sub
cmp
push
pop
arpl
jnp
mov
mov
in
hlt
cld
add
adc
and
xor
inc
dec
push
pop
fs
je
test
mov
in
cmc
std
add
sub
push
pop
gs
jne
test
mov
vpmullw
loop
repnz
add
adc
and
xor
inc
dec
push
pop
bound
jp
mov
mov
out
idiv
pop
movhps
daa
das
aaa
aas
inc
dec
push
pop
outsl
ja
xchg
mov
iret
fsub
call
adc
and
xor
inc
dec
push
pop
pusha
push
nop
cwtl
mov
enter
jmp
adc
and
xor
inc
dec
push
pop
popa
imul
mov
leave
rcl
fsubp
out
idiv
push
push
push
push
es
dec
push
pop
data16
jbe
xchg
mov
ret
fninit
jmp
sti
add
adc
and
xor
inc
dec
push
pop
arpl
jnp
mov
mov
in
hlt
cld
add
adc
and
xor
inc
dec
push
pop
fs
je
test
mov
in
cmc
std
add
sub
push
pop
gs
jne
test
mov
vpmullw
loop
repnz
add
adc
and
xor
inc
dec
push
pop
bound
jp
mov
mov
out
idiv
pop
movhps
daa
das
aaa
aas
inc
dec
push
pop
outsl
ja
xchg
mov
iret
fsub
call
adc
and
xor
inc
dec
push
pop
pusha
push
nop
cwtl
mov
enter
jmp
adc
and
xor
inc
dec
push
pop
popa
imul
mov
leave
rcl
fsubp
out
idiv
push
push
push
push
es
dec
push
pop
data16
jbe
xchg
mov
ret
fninit
jmp
sti
add
adc
and
xor
inc
dec
push
pop
arpl
jnp
mov
mov
in
hlt
cld
add
adc
and
xor
inc
dec
push
pop
fs
je
test
mov
in
cmc
std
add
sub
push
pop
gs
jne
test
mov
vpmullw
loop
repnz
add
adc
and
xor
inc
dec
push
pop
bound
jp
mov
mov
out
idiv
pop
movhps
daa
das
aaa
aas
inc
dec
push
pop
outsl
ja
xchg
mov
iret
fsub
call
adc
and
xor
inc
dec
push
pop
pusha
push
nop
cwtl
mov
enter
jmp
adc
and
xor
inc
dec
push
pop
popa
imul
mov
leave
rcl
fsubp
out
idiv
push
push
push
push
es
dec
push
pop
data16
jbe
xchg
mov
ret
fninit
jmp
sti
add
adc
and
xor
inc
dec
push
pop
arpl
jnp
mov
mov
in
hlt
cld
add
adc
and
xor
inc
dec
push
pop
fs
je
test
mov
in
cmc
std
add
sub
push
pop
gs
jne
test
mov
vpmullw
loop
repnz
add
adc
and
xor
inc
dec
push
pop
bound
jp
mov
mov
out
idiv
pop
movhps
daa
das
aaa
aas
inc
dec
push
pop
outsl
ja
xchg
mov
iret
fsub
call
adc
and
xor
inc
dec
push
pop
pusha
push
nop
cwtl
mov
enter
jmp
adc
and
xor
inc
dec
push
pop
popa
imul
mov
leave
rcl
fsubp
out
idiv
push
push
push
push
es
dec
push
pop
data16
jbe
xchg
mov
ret
fninit
jmp
sti
add
adc
and
xor
inc
dec
push
pop
arpl
jnp
mov
mov
in
hlt
cld
add
adc
and
xor
inc
dec
push
pop
fs
je
test
mov
in
cmc
std
add
adcb
fldcw
subb
test
xchg
xlat
sbb
das
lock
adc
and
xor
mov
mov
ja
stos
mov
into
test
cld
ds
es
addl
scas
outsl
ja
xchg
stc
add
adc
jecxz
xor
lock
add
fisubrs
hlt
rorb
cmp
js
mov
je
or
dec
pop
es
icebp
stc
add
orl
pop
popa
imul
lods
repz
push
adc
rcl
fsubp
mov
and
mov
dec
push
pop
mov
fsubl
lock
add
into
pop
and
xor
or
dec
.byte
.byte
add
