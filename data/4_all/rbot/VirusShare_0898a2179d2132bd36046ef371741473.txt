push
sbb
in
orl
or
add
or
cmp
xor
cmp
test
mov
push
push
mov
push
sbb
sbb
adc
mov
cld
add
call
xchg
mov
add
cwtl
mov
xorl
push
cli
fadd
jns
sbb
push
movl
push
test
stos
push
fcmovu
cmpsb
push
popf
ret
xor
std
decl
inc
and
pop
push
push
test
push
adc
xchg
or
inc
add
push
push
push
pop
cld
cmp
mov
adc
leave
xor
cmpb
pop
mov
dec
xor
cmp
and
test
cs
cmp
pop
add
cmp
pop
leave
ret
push
xor
inc
cmp
lock
outsb
stos
inc
inc
or
add
lea
sbb
sbb
jg
jne
pusha
sub
or
push
mov
pop
loopne
adc
pusha
push
push
adc
pop
ret
xchg
sahf
inc
adc
into
cmp
mov
push
clc
add
or
dec
addr16
sti
aad
mulps
xor
jmp
lds
push
adc
or
push
hlt
xchg
and
and
adc
mov
jbe
inc
lcall
test
cld
mov
mov
add
or
and
sub
add
sbb
mov
jnp
sbb
and
sbb
xchg
jo
add
and
or
xchg
dec
inc
outsl
sub
adc
cmp
xchg
in
je
call
stc
adc
inc
pop
cmp
adcb
fsubrs
in
xor
push
sbb
mov
mov
adc
mov
in
mov
mov
adc
clc
int
js
sbb
sti
setg
dec
adc
add
push
dec
push
dec
add
mov
movsl
shll
orb
dec
xor
fsubrs
test
xor
addr16
add
ficomps
fildl
ret
lock
inc
mov
adc
push
xchg
icebp
test
and
mov
inc
lods
push
sub
std
and
dec
and
push
test
cwtl
mov
pop
enter
add
shrl
out
rdmsr
test
fdivl
jnp
sub
sub
mov
xor
pusha
in
xorb
sub
push
pop
call
or
push
adc
pop
aaa
adc
addr16
jecxz
adc
inc
pusha
pop
movl
ss
clc
inc
adc
rclb
add
lcall
test
or
mov
call
inc
in
or
data16
insl
pushf
adc
ret
mov
adc
cld
fnstsw
xchg
nop
pop
inc
stos
loopne
sub
rolb
or
mov
daa
push
cmp
hlt
and
push
movsl
and
sbb
and
pop
fs
pop
push
sbb
adc
dec
pop
xor
mov
mov
or
and
fs
dec
or
imul
ret
add
mov
push
cmpsb
dec
pop
add
mov
dec
insb
xchg
sahf
xor
dec
sub
and
pop
inc
cmp
lock
dec
pop
mov
xlat
cmp
mov
pop
pop
and
jae
jo
ret
into
aam
xor
sbb
jnp
pushf
adc
andl
push
cmpsb
fs
or
push
ds
inc
or
or
imul
aas
call
push
xchg
adc
cltd
or
popf
xchg
aaa
xchg
adc
xor
in
push
push
cli
sub
push
adc
xchg
add
je
arpl
add
ss
adc
cs
je
not
cmpsb
out
jle
jae
ljmp
shlb
mov
fs
stos
dec
push
push
pop
xchg
cmp
inc
mov
adc
aam
ja
scas
mov
cmpsb
in
hlt
pop
in
xchg
int3
push
rorb
enter
aam
sub
push
sub
cwtl
ret
dec
xor
mov
mov
mov
cmp
je
add
pop
movsl
add
sub
add
fisubs
mov
cld
and
adc
inc
add
and
adc
or
test
xor
sbb
addr16
xchg
insb
sub
mov
outsb
mov
pushl
or
and
adc
mov
push
xor
mov
dec
pop
lahf
into
push
xchg
pushl
pop
inc
adc
or
je
cmp
sti
xor
push
adc
rorl
psllw
jmp
push
inc
pusha
push
lods
add
mov
sbb
push
mov
je
push
add
cmp
pop
scas
inc
aad
jmp
mov
inc
fnstcw
fs
arpl
adc
fisubs
roll
ret
test
test
add
lock
cmovg
pop
rol
not
pop
push
ret
pop
nop
jb
inc
lds
je
sub
adc
loop
or
xor
aad
xchg
cmp
push
push
xchg
es
insl
sti
pop
test
cmp
nop
testb
dec
inc
cs
test
or
je
dec
adc
or
mov
push
mov
mov
popa
push
mov
mov
stos
cmp
sub
std
and
movsb
inc
inc
push
mov
aam
jns
mov
cwtl
mov
js
je
subb
adc
push
push
xchg
test
cmp
inc
loopne
push
pop
or
in
lock
inc
cmp
mov
jp
and
or
xchg
das
int3
stos
mov
and
data16
cli
push
and
mov
mov
push
outsb
pushf
mov
repz
in
push
pop
mov
push
push
inc
test
ficoml
addb
adc
or
fdivrl
dec
mov
pop
loopne
addb
jae
mov
sahf
jbe
repz
sub
lahf
push
in
push
xchg
and
popl
rcll
push
movsl
int
fisubs
sub
lcall
pop
push
add
xorl
or
dec
notl
jmp
je
mov
push
cmp
mov
inc
je
jp
sahf
cmpsl
aad
rorb
pop
popf
push
sub
call
jo
icebp
mov
mov
inc
movl
dec
or
dec
and
enter
repz
jg
and
stos
stos
sub
in
cmpsb
les
or
xor
jp
add
dec
rcr
insl
or
inc
add
or
fstpl
sbb
push
push
push
push
xchg
das
stos
popa
cld
rolb
data16
inc
push
add
push
icebp
and
rclb
dec
push
imul
jnp
cs
add
ret
aas
inc
push
popa
in
xchg
add
dec
int3
sbb
mov
jae
push
push
leave
out
nop
sub
imul
add
iret
data16
and
inc
adc
jne
sub
xchg
bound
je
sub
pop
mov
or
cmp
in
pop
icebp
pop
and
fsts
push
or
or
mov
xor
or
mov
xor
stos
cmp
and
jle
add
mov
pop
lds
xor
add
push
lret
xchg
sahf
fs
sub
jp
push
sbb
stc
mov
movsb
adc
xchg
pushw
fsubrs
loopne
mov
test
inc
push
cmp
imul
stos
sub
pop
inc
sub
lahf
and
js
adc
je
inc
dec
jno
lock
push
hlt
in
adc
movl
mov
or
mov
es
or
jo
fstpt
and
push
or
mov
push
stc
sub
push
dec
dec
sbb
push
fcoms
enter
sti
out
or
add
push
push
push
push
cmp
les
int
push
mov
adc
fcoms
inc
and
stos
xchg
push
adcb
aad
adc
and
aam
jno
jge
mov
dec
xchg
mov
or
dec
adc
rclb
mov
int3
and
test
dec
pop
push
push
adc
sub
adc
push
cmpsl
arpl
hlt
adc
scas
cmp
out
inc
stc
xor
mov
push
add
popa
or
std
mov
and
pushf
cmp
and
mov
pop
adc
mov
int3
jmp
push
js
pop
xor
pushf
mov
add
jbe
cmp
fstps
xchg
jb
or
inc
jae
mov
test
jle
add
scas
xchg
add
inc
daa
in
shll
push
lret
incl
sbb
lea
jp
cmp
jbe
cmp
inc
shr
and
mov
inc
dec
lahf
cmp
test
push
cs
jge
mov
daa
or
push
or
or
sbb
and
mov
mov
pop
pop
mov
adc
cld
es
test
push
popa
adc
pop
and
pop
push
push
icebp
and
jne
push
push
or
insb
stc
fs
and
pop
push
mov
adc
xchg
mov
add
jp
xchg
xor
sbb
jno
push
rorl
daa
push
arpl
add
cmp
inc
movapd
push
movsb
daa
stos
pop
adc
adc
push
and
mov
xor
xchg
or
arpl
fmul
cmp
in
test
mov
lods
or
loope
inc
pop
stos
pop
cmp
mov
inc
xchg
xor
clc
icebp
loopne
gs
gs
push
or
mov
xchg
cmp
aam
sbb
and
add
push
push
and
fs
mov
sub
scas
mov
mov
les
adc
adc
pop
pop
jno
mov
movsb
sub
pop
cmpb
mov
and
sar
jne
push
test
std
sbb
and
stc
inc
jnp
notl
xor
sub
and
mov
enter
fildl
and
inc
outsl
inc
add
cmp
adc
adc
jge
push
lret
inc
repz
pop
pop
cmp
mov
mov
sbb
iret
cwtl
int
add
addr16
push
ret
or
mov
or
sub
sbb
push
adc
xor
xor
jne
pop
or
xchg
or
cld
leave
ret
xchg
inc
mov
or
std
mov
sbb
pop
push
or
je
inc
outsl
sub
mov
jne
push
mov
push
pop
push
aas
lret
adc
mov
push
inc
repz
push
xchg
lahf
xor
pop
push
xchg
push
mov
inc
inc
into
dec
adc
inc
adc
mov
out
push
in
rcll
rclb
xchg
jo
mov
hlt
xor
nop
push
cmpl
cld
les
jne
jbe
psubq
adc
mov
lock
mov
fs
cld
push
push
imul
push
push
jno
inc
inc
push
sub
sbb
add
or
ljmp
xchg
adc
cs
aad
xor
clc
xor
cmp
cwtl
aaa
pop
shlb
js
xchg
sub
test
add
mov
dec
xchg
and
call
sbb
sbb
inc
outsb
jo
inc
clc
adc
sub
in
push
inc
mov
int3
lods
push
xchg
mov
sub
adc
mov
sbb
dec
ds
ret
xor
adc
sub
xor
and
adc
cmp
sbb
dec
sub
adc
ret
xor
or
add
cmp
stos
sub
sbb
aas
push
or
jmp
jmp
sbb
and
xchg
rcrb
push
jo
and
jae
push
xor
nop
sbb
xchg
jge
and
inc
aam
adc
cmp
inc
or
lock
lock
jo
sub
mov
inc
and
test
xor
push
adc
pop
jmp
push
adc
or
mov
int3
adc
fs
loopne
inc
push
shlb
mov
xchg
lods
xchg
or
pushf
xlat
push
test
dec
sahf
pushf
and
or
adc
pusha
adc
xchg
sub
inc
mov
sbb
push
adc
in
xor
test
pusha
xchg
dec
adc
fs
jne
push
in
mov
push
sub
enter
adc
or
push
outsb
fs
outsl
nop
pop
mov
jno
sub
xor
sbb
icebp
sbb
inc
outsb
adc
jo
enter
mov
mov
cld
sub
test
sub
pop
adc
push
push
sbb
or
sub
mov
xor
or
inc
jo
sbbb
nop
outsl
aaa
call
sbb
negb
pop
or
inc
outsl
and
loopne
nop
dec
enter
xor
cmp
xchg
jl
push
xchg
inc
mov
mov
adcb
or
int3
or
or
or
je
xchg
in
push
xchg
les
inc
loopne
push
mov
sbb
sbb
xchg
sbb
mov
mov
inc
data16
inc
sub
stos
iret
xchg
and
inc
push
mov
outsl
jno
mov
in
cmp
inc
jo
jl
nop
outsl
xchg
insb
jo
and
push
mov
rcrl
adc
or
add
and
jo
or
add
outsl
dec
push
adc
fwait
int3
outsl
xor
mov
loop
les
inc
mov
inc
and
repnz
addr16
add
sub
inc
sub
cmpsb
fidivrs
inc
and
adc
push
shrb
cmp
mov
or
xor
mov
mov
mov
lock
or
fsubl
enter
xlat
mov
sbb
es
inc
inc
add
outsb
dec
cmp
push
cmp
xor
adc
sub
mov
push
jp
sbb
icebp
sbb
push
inc
shlb
push
dec
add
in
shll
mov
shll
sub
dec
pop
xor
mov
sbb
sub
sub
inc
sub
nop
sub
js
push
cld
xchg
adc
mov
inc
jno
dec
or
xchg
and
ja
push
xchg
loopne
ja
push
aam
or
scas
mov
sub
cmp
cmp
outsb
mov
or
fdiv
and
or
pop
cmp
cmp
xor
add
outsb
dec
and
in
adc
ret
adc
or
jmp
mov
aam
rcl
add
test
push
cmp
in
fisubs
cli
fdivr
inc
and
inc
pushf
sub
inc
js
pop
outsb
fidivrs
pop
cmpsl
dec
mov
fs
cli
cmp
push
push
mov
mov
xorb
or
mov
cmp
arpl
inc
in
and
inc
or
adc
daa
in
adc
push
and
or
loopne
mov
test
sbb
loope
sub
mov
xchg
and
jl
sub
inc
jl
clc
push
mov
jo
adc
enter
xor
pop
das
pop
inc
mov
stos
pop
ss
mov
dec
int3
and
mov
daa
mov
push
xchg
dec
push
lret
xchg
cmp
cs
sbbb
imul
jnp
inc
cli
push
mov
mov
add
rolb
adc
nop
mov
or
cmp
mov
sbb
sub
adc
mov
pusha
mov
mov
shlb
hlt
dec
add
pop
fisubs
adc
stos
add
xor
jmp
test
arpl
adc
mov
inc
push
xchg
lock
push
dec
lahf
arpl
or
push
loope
fildl
mov
or
jmp
mov
inc
call
push
loopne
in
adc
adc
sbb
pop
push
adcl
int
jl
jl
out
inc
or
fs
add
jnp
inc
and
add
add
mov
call
and
adc
adc
inc
add
cmp
mov
cli
sub
sub
xor
sub
jb
cli
push
cmp
xchg
icebp
cmp
xchg
and
insl
mov
cmp
jecxz
mov
enter
test
push
add
xchg
lea
cmc
dec
or
jmp
loopne
fsubrs
popf
or
xor
popf
sbb
mov
push
push
out
add
push
or
adc
sbb
cli
push
mov
xchg
mov
cmpb
jl
mov
or
jbe
push
xor
popf
push
shll
push
or
inc
xchg
lods
ss
and
jmp
mov
xor
in
lock
test
or
adc
js
mov
mov
sub
sub
movsbl
les
dec
add
and
out
push
xchg
pop
pop
jne
lods
mov
lds
clc
out
and
mov
clc
xchg
adc
inc
je
lahf
adc
push
xor
mov
mov
cltd
out
sub
dec
push
lret
and
sbb
inc
jb
push
mov
adc
pop
or
xchg
xchg
sub
test
adc
dec
pop
mov
push
push
pop
cld
dec
sarb
and
pop
xor
cmp
inc
ljmp
aas
test
pop
aas
aam
test
pop
shlb
dec
inc
loopne
and
mov
mov
mov
dec
decb
and
and
clc
xor
lock
mov
xchg
rolb
mov
and
adc
xor
out
sbb
and
xchg
xor
inc
push
fisubrl
pop
mov
push
bnd
and
nop
push
adc
test
loopne
lea
fisubs
mov
pop
sub
or
lock
or
dec
push
add
jae
jmp
andb
xchg
les
jo
popa
sahf
jne
xchg
cmp
push
pushf
xchg
pop
cld
imul
dec
lret
xor
enter
pop
mov
mov
test
scas
mov
movb
lret
cmpsb
pop
mov
sub
push
jecxz
loopne
repnz
cmp
je
out
hlt
out
out
jbe
cmp
add
cmpb
maxps
xor
test
xchg
add
or
cmpsl
movsb
add
push
pop
pop
and
xchg
ss
xor
es
popa
imul
sub
push
push
or
je
sub
fisttpl
xor
sbb
add
dec
orb
sub
pusha
or
data16
idiv
es
movsl
rorl
push
and
lcall
add
addr16
add
adc
adc
cmp
je
add
or
call
jl
xor
inc
jle
and
add
jne
lea
enter
adc
lcall
cmpl
sbb
inc
add
sarb
pop
or
push
pop
cmp
aas
push
gs
or
loop
movl
or
insl
ds
std
mov
ret
test
jae
xorb
push
push
call
aaa
lret
sbb
das
cmpb
mov
lock
cmp
pushf
push
jno
sbb
enter
or
xor
ljmp
cmp
cwtl
push
cmp
fs
push
stc
push
pop
cmp
je
cmpsl
adc
popf
sub
mov
push
adc
test
mov
out
mov
movsl
dec
xlat
mov
jbe
inc
sub
adc
push
inc
and
push
and
lods
dec
pop
push
das
pop
pop
mov
es
add
test
scas
sbb
lahf
sarb
mov
xchg
lods
aam
and
inc
xchg
push
mov
daa
mov
dec
sbb
inc
adc
or
int3
fildll
sub
movsl
jl
inc
push
int
sub
push
pop
push
and
das
mov
test
pop
test
inc
xchg
lock
aad
sub
xchg
lods
mov
je
mov
or
mov
pop
ljmp
or
insb
add
or
addb
loope
cmp
adc
xor
sub
jmp
mov
shll
insl
movzbl
repz
repnz
nop
or
mov
push
inc
lret
jb
dec
mov
dec
repnz
xchg
inc
or
aad
sahf
mov
cli
dec
shlb
push
pop
daa
mov
mov
jnp
mov
and
sbb
inc
mov
inc
test
mov
mov
mov
dec
jnp
xor
mov
and
out
rclb
push
mov
or
fmul
push
xchg
cmp
xchg
aam
rolb
add
call
iret
and
push
movsb
imulb
mov
cmpb
xorl
or
out
or
dec
jae
les
cld
int3
icebp
xchg
adc
cmove
push
stos
adc
addr16
push
push
pop
dec
or
sti
ss
lret
fidivl
mov
mov
push
mov
loop
xchg
lods
lods
push
outsb
movl
lcall
stc
push
add
mov
adc
cmp
jb
pop
sub
and
dec
dec
in
movsb
sub
adc
pop
in
jmp
mov
xor
sti
jne
sub
mov
xor
cmp
mov
push
stos
fs
fisubl
bound
xor
pop
push
inc
push
lods
cs
jo
pop
jle
mov
and
cmp
inc
adc
inc
pop
enter
push
xor
ds
mov
mov
jl
or
je
adc
lret
aaa
mov
pop
negl
mov
sub
and
int
or
adc
dec
cmpb
jle
xor
add
mov
imul
mov
dec
dec
rorb
nop
adc
pop
or
xchg
sbb
ret
fdivrl
and
mov
or
lret
les
adc
dec
and
and
xchg
nop
xchg
inc
inc
fnsetpm(287
fwait
out
pop
cmp
dec
and
cltd
mov
mov
adc
sub
ret
fstl
push
je
sbb
xor
push
jecxz
xchg
cmp
cwtl
subb
adc
inc
push
sub
addb
adc
cwtl
mov
sub
dec
mov
adc
test
push
add
sbb
adc
test
pop
sbb
inc
imul
sub
xchg
sub
inc
mov
loop
dec
mov
fs
inc
xor
mov
fsub
in
sub
cwtl
cs
aad
xor
loopne
popf
mov
rorl
movsl
push
es
ds
xor
jp
mov
repz
add
lods
push
hlt
adc
xor
inc
mov
mov
je
jmp
sub
aas
inc
pop
jmp
or
pop
adc
pop
lock
cmpsb
gs
mov
pop
fldenv
mov
jo
popa
das
cmp
jl
outsl
cltd
mov
test
clc
sub
icebp
jl
daa
test
in
sub
outsl
bound
push
in
xor
push
push
pop
aam
jo
rep
movl
dec
xchg
cwtl
out
jne
cmp
push
repnz
je
sub
loopne
lret
pop
and
repnz
decb
ret
xor
inc
test
or
nop
ret
fs
int3
std
inc
pusha
push
add
push
push
jecxz
pop
and
mov
mov
test
loope
jne
dec
lds
loopne
jg
xor
or
pusha
je
insl
psadbw
xor
cmc
mov
subb
xor
subl
test
push
repnz
mov
addb
pop
push
jmp
cwtl
mov
mov
push
pop
pop
or
rcrl
ret
and
sbb
or
mov
and
or
sbb
mulb
test
cld
dec
call
jmp
loopne
movsl
xchg
leave
or
fwait
incl
dec
xor
mov
push
cmc
shlb
scas
addr16
js
adc
mov
loopne
mov
inc
push
aam
sub
cld
or
jle
int
repz
inc
or
cld
and
jle
xchg
movsb
shll
mov
pop
push
jge
dec
sub
pop
fs
adc
movsl
xlat
sbb
xorl
inc
idivb
repz
xchg
push
inc
add
mov
sub
or
xor
sahf
mov
cwtl
or
loopne
cltd
lods
repz
cmpsb
dec
jns
or
push
sbb
or
sbbb
stos
push
mov
mov
shl
movsl
dec
enter
aam
push
adc
icebp
push
test
and
inc
test
test
adcl
pop
and
dec
pusha
adc
les
leave
or
rorl
repz
sbb
rolb
popa
adc
ja
fs
dec
mov
or
test
xorl
ljmp
inc
xchg
popf
hlt
pop
push
push
inc
push
pushf
bound
or
mov
inc
lret
je
cmpb
sub
add
pop
movsbl
mov
push
daa
adc
adc
push
inc
dec
pop
or
popa
fnstcw
popf
add
jne
mov
negl
xchg
push
cmpb
shrl
or
fdivrs
lahf
xor
and
pop
pop
ficoms
push
bound
or
popf
sub
pop
push
mov
sbb
outsb
dec
push
mov
sub
inc
dec
orb
push
jnp
in
cmp
pop
mov
movsl
adc
nop
je
mov
sub
rorb
stos
adc
lahf
jne
sub
cmp
hlt
int
and
rcrb
adc
push
sbb
daa
or
pop
sahf
cwtl
das
push
daa
inc
pop
std
rol
add
mov
and
fisttps
push
add
jo
add
les
lds
or
dec
mov
in
lret
jecxz
or
mov
push
sbb
inc
and
mov
push
or
cwtl
adc
stos
dec
jne
jne
sub
mov
inc
xchg
fsubrs
fld
mov
pop
ficoml
xchg
sub
cmp
andl
and
mov
push
sbb
xor
in
testl
leave
je
inc
sub
adc
mov
xchg
ficoml
and
push
subb
test
cmp
sbb
jne
sub
aad
shll
jge
inc
cwtl
inc
add
jl
jmp
scas
dec
cltd
outsb
mov
je
loopne
mov
sahf
mov
mov
shl
xor
sub
mov
push
lods
repnz
popf
mov
leave
bound
cltd
sbbb
and
pop
ljmp
into
dec
jmp
push
push
pop
inc
adc
fidivrs
movl
call
or
push
push
add
sbb
or
mov
nop
data16
lods
lods
and
pop
ficoms
dec
out
sbb
jns
inc
cmp
sbb
lret
or
mov
mov
cmp
mov
test
or
mov
push
mov
daa
repnz
inc
dec
dec
pop
cmp
arpl
adc
jae
push
sbb
add
out
lea
jg
add
jo
sbb
add
and
aam
dec
mov
mov
mov
and
adc
push
push
fbld
fwait
and
add
push
inc
pop
pop
adc
push
cmpsl
xchg
and
push
and
adc
xchg
loop
fcoms
push
or
add
xchg
xor
mov
stos
mov
add
xchg
xchg
sub
mov
mov
loop
push
fists
sbb
mov
sbb
mov
pop
mov
test
mov
jnp
add
shl
mov
inc
mov
add
lahf
add
inc
mov
cmp
add
and
mov
mov
add
mov
push
sbb
insb
arpl
cmp
jb
pop
sub
pop
pop
lods
pusha
subb
and
xchg
nop
sti
dec
push
mov
hlt
or
pushf
add
mov
cmp
jne
subl
call
loope
push
cmp
mov
rol
cmp
jne
bound
test
inc
add
mov
stos
insl
push
aaa
sub
jg
push
aad
add
jne
cld
add
mov
mov
and
adc
pop
daa
mov
xor
add
cli
mov
hlt
pop
out
inc
ret
lds
nop
inc
adc
mov
cmp
iret
inc
xor
inc
les
addr16
movsl
pop
int
rcll
mov
negb
add
xchg
add
adc
push
sub
mov
sub
dec
mov
jns
sbb
push
insl
sbb
jnp
add
pop
pop
xchg
or
inc
lock
dec
jbe
and
push
dec
popf
je
push
sbb
js
shr
sub
and
aaa
pop
hlt
pop
out
and
cmp
test
add
and
popl
aas
das
lea
sub
sbb
push
mov
loopne
adc
jg
mov
popa
mov
xor
cltd
pop
leave
dec
inc
cmp
stos
shrl
andl
das
push
or
adc
in
insl
jb
dec
fwait
sub
pop
or
popf
mov
movsl
hlt
sbb
dec
cmpsb
and
adc
inc
clc
imul
cmp
push
sbb
in
xor
loope
inc
add
cmp
fcoml
sub
mov
bound
imul
dec
mov
mov
cmp
push
das
inc
lods
xlat
cwtl
out
sub
inc
cmc
hlt
inc
xchg
mov
pushf
lret
popf
sbb
pop
lock
xlat
mov
lcall
das
imul
xor
push
test
pop
xchg
jae
and
lock
out
sbb
ret
inc
popf
push
or
bound
sbb
push
pushf
mov
dec
mov
mov
or
and
inc
pusha
adc
fsubs
call
mov
pusha
test
jl
imul
jnp
sub
adc
pop
nop
out
dec
and
ret
dec
shlb
cli
sub
enter
dec
push
dec
pop
inc
mov
and
jbe
ret
adc
push
push
in
test
and
cmp
add
aas
dec
mov
xorps
cmp
inc
movzbl
cmc
imull
xchg
sub
push
xchg
clc
orl
pop
pop
dec
xor
pop
and
sub
sbb
xor
adc
push
dec
inc
and
inc
sti
test
sbb
adc
lods
and
jmp
and
xor
sbb
inc
adc
rclb
pop
sbb
inc
push
or
inc
pop
xchg
incb
sub
jp
or
enter
inc
xor
mov
cmc
insl
fsts
xorl
test
inc
and
in
lods
push
dec
outsb
je
orb
dec
les
add
lcall
sti
int3
je
stos
sub
inc
cmpsl
and
push
icebp
insb
shr
dec
loope
mov
stos
push
push
dec
jno
aas
sub
lods
movsl
adc
mov
cmp
mov
mov
push
inc
pop
aam
cmp
divb
cmp
mov
dec
and
dec
fdivrl
inc
enter
pushf
push
or
in
inc
nop
inc
mov
int3
jge
xchg
aas
xchg
pop
stos
jge
sarb
push
xchg
inc
test
test
sub
pop
mov
push
test
adc
adc
push
push
xchg
rol
nop
dec
repnz
out
jb
lock
xchg
add
pop
cmp
jle
xchg
cmp
or
xor
lret
daa
outsb
xchg
and
push
das
mov
lret
and
out
test
push
pop
cmp
clc
add
in
xchg
or
pop
push
add
rcll
push
lea
aad
pop
sub
mov
cmp
cmp
or
cmpl
mov
add
sub
mov
add
add
jmp
jo
out
aam
sbb
out
push
push
xchg
lea
sahf
adc
add
push
add
mov
jne
je
cmpb
and
std
dec
ds
push
xchg
daa
xchg
icebp
pop
mov
sarb
cmp
sbb
inc
repnz
sub
clc
xor
loopne
insb
sbb
push
iret
jbe
stc
popa
push
and
test
xor
test
add
test
insl
jns
add
repnz
and
push
sarb
push
rorb
cmp
out
mov
mov
adc
jle
arpl
mov
pop
incb
pop
adc
mov
es
sub
push
popf
jmp
and
cltd
sub
mov
mov
mov
std
sub
xchg
and
xorl
cmp
fldcw
inc
mov
add
fistpll
push
imul
shrl
mov
int3
femms
inc
adc
lea
or
or
sbb
adc
movsl
test
iret
arpl
hlt
adc
aam
mov
adc
pop
ds
jbe
shll
enter
out
aaa
sub
mov
js
push
mov
jle
mov
jmp
mov
sub
mov
cmp
js
jmp
xorb
cmpsb
aad
add
inc
cmp
hlt
dec
xchg
fwait
ss
cmp
inc
mov
sub
aas
or
dec
mov
inc
inc
dec
or
mov
cmp
into
rclb
or
jge
mov
cwtl
enter
pop
lea
inc
xchg
sbb
inc
dec
add
test
test
aas
nop
adc
aaa
push
dec
or
out
leave
push
arpl
and
and
cmpsb
mov
mov
cmp
jnp
cmp
xchg
popf
fwait
jmp
dec
lods
ja
push
js
push
push
pop
test
xchg
or
mov
mov
inc
cmp
jecxz
xor
mov
xchg
push
loop
lods
pop
mov
or
add
push
mov
and
sbb
sbb
cmpb
jl
add
add
andnps
mov
sysret
adc
sbb
hlt
jmp
sub
call
add
mov
push
hlt
inc
bound
jo
fdivr
adc
pop
cmp
push
inc
sub
dec
push
arpl
popa
dec
popf
mov
dec
xchg
cmc
xor
xlat
test
lret
and
jae
dec
pop
add
ss
mov
sub
ret
push
or
imul
movsb
rorl
sub
pop
lret
dec
push
movsl
sub
xor
mov
jbe
inc
pushl
loope
or
or
nop
dec
push
fists
cmp
es
lods
and
pop
push
inc
test
dec
inc
cmp
adc
jmp
das
cs
cmp
in
je
push
pop
sbb
and
stos
jle
outsl
orb
sbb
pop
cmpl
pusha
adcb
cmp
mulb
rcrb
ret
loope
lcall
add
cwtl
lea
mov
push
cs
clc
cmp
inc
or
mov
sarb
and
fistpll
int3
bound
sub
inc
mov
cmpsb
sub
nop
cwtl
push
imul
dec
dec
and
dec
mov
inc
or
call
cmpl
jne
adc
je
lret
push
and
jl
add
add
pop
add
arpl
enter
stos
adc
or
mov
xor
dec
xchg
or
cmp
addb
push
mov
and
and
pop
add
inc
mov
mov
scas
aad
or
jne
fwait
jg
pop
es
cmp
iret
imul
sti
pusha
dec
sbb
jbe
add
iret
sub
mov
ds
sub
in
lods
aas
js
pop
add
out
pop
jbe
loop
dec
in
sub
and
pop
push
repz
sbb
imul
lea
in
cmpsl
cwtl
outsb
pop
sahf
outsb
shr
mov
xchg
dec
or
xchg
mov
sub
or
js
insb
cmp
or
mov
jge
push
scas
movsl
adc
pop
ret
dec
int3
test
rolb
add
andl
push
push
sbbl
mov
jb
dec
add
sbb
fcoms
dec
push
lcall
jbe
sub
popa
jl
inc
pop
jg
fisubs
or
push
mov
cmpl
mov
in
sbb
push
xchg
sub
pop
cld
mov
aam
fiadds
push
popf
lock
jbe
sbb
movsb
cmp
inc
push
pushf
cs
lea
and
push
mov
daa
or
push
push
test
adc
lock
test
sub
sub
int
pop
test
test
fs
shr
cmp
and
inc
mov
pop
cmp
negl
adc
and
xor
mov
dec
scas
lds
mov
pop
and
aad
or
sub
arpl
std
or
lea
popf
imul
inc
mov
add
bound
jns
xlat
dec
xchg
push
fdivrs
inc
je
mov
mov
ficoml
test
imul
mov
repnz
cmp
xor
push
xor
sbb
pusha
or
scas
gs
arpl
push
sti
dec
in
cmp
sub
inc
mov
out
pop
sbbb
pop
sbb
call
call
mov
stos
adc
dec
dec
mov
sbb
inc
lea
lods
pop
repz
dec
mov
adc
xchg
test
pop
fnstcw
add
out
shll
call
fisttps
popf
and
je
ss
popa
bnd
push
lds
test
mov
subl
push
push
add
push
adc
nop
or
mov
or
push
pop
je
mov
inc
sub
push
setb
bound
mov
jb
inc
add
push
mov
push
sbb
mov
mov
push
inc
es
je
jl
xor
push
out
push
or
mov
push
push
ss
sub
xor
lds
cmp
push
push
dec
cmp
subb
adc
daa
das
cltd
and
daa
in
rcll
lret
lods
clc
cwtl
jo
ds
jb
test
inc
pop
pop
pop
in
push
sub
stos
adc
cmp
rolb
xorb
bts
dec
jbe
or
fs
in
lret
adc
cld
cmp
and
les
daa
jg
subl
mov
pop
add
xor
fiaddl
pop
xchg
inc
sub
daa
dec
je
jne
or
hlt
pop
or
cmp
movsbl
push
scas
inc
fcoms
imul
and
aaa
lea
cmp
push
mov
shrb
pop
cmp
push
push
sub
popa
and
lret
jp
lcall
inc
push
in
pop
cmpsb
scas
imul
dec
xor
jge
adc
addr16
adc
mov
and
bnd
test
ret
mov
adc
scas
and
test
clc
inc
xor
imul
sbb
add
pop
orl
push
nop
or
and
add
xchg
bound
das
and
sbb
cmp
cmc
adc
fdivrs
popf
test
xorb
icebp
sub
xchg
xchg
jo
pusha
or
push
push
or
inc
mov
pop
daa
pop
push
pop
mov
or
cltd
push
call
or
lods
in
das
cli
mov
lret
fcomps
aad
imul
lods
inc
dec
fs
jb
sbb
dec
add
cld
sub
xor
push
and
pop
ds
mov
and
jne
repnz
cmp
js
movsl
ljmp
push
in
or
jge
mov
mov
sub
lret
ror
in
rorb
mov
mov
out
cmpsl
or
xchg
mov
inc
movl
movsl
cmp
or
pop
shrb
cmpsl
in
stc
hlt
pop
outsb
xchg
mov
xchg
mov
dec
jae
xor
jle
call
mov
xor
jae
adc
scas
and
xor
mov
lcall
andl
jne
mov
test
add
repnz
push
mov
dec
dec
push
xchg
pop
sub
movsb
es
cmpsb
lret
mov
add
cmp
xchg
xor
jp
andb
pop
pop
jns
pop
cmc
cwtl
ret
repnz
scas
mov
loope
sbb
hlt
imul
push
pop
push
in
stos
out
or
aaa
lahf
or
cmp
inc
xchg
pop
mov
aam
in
outsl
enter
fsubs
or
mov
mov
push
sbb
push
jmp
pop
adc
and
and
lea
dec
mov
loopne
stos
nop
xchg
mov
call
cwtl
hlt
jge
scas
cltd
es
dec
mov
aaa
loopne
cmp
push
je
inc
mov
sahf
cwtl
xchg
add
pop
jbe
jb
push
pop
adc
cmpl
mov
mov
sahf
sbbb
mov
pop
pop
sub
push
je
repnz
test
les
add
loop
jp
rolb
mov
lahf
enter
add
rcll
xchg
test
daa
jmp
xchg
cltd
or
or
xchg
and
push
stc
or
mov
in
cmp
push
or
add
test
je
cmp
ljmp
or
dec
daa
cmp
add
incl
push
dec
lea
and
je
push
mov
jmp
adc
ljmp
inc
mov
test
shll
push
or
pop
pop
adc
cmpsb
aaa
test
outsl
subl
stc
mov
push
sbb
out
jl
add
and
inc
cmpb
movsl
push
pop
inc
cld
cmp
or
ds
mov
cmp
pop
insb
cmp
js
sbb
jb
pop
jno
mov
js
add
jge
cmp
je
ja
leave
cmp
mov
xor
mov
adc
fdivrs
or
inc
sbb
lahf
bt
jne
cmp
inc
pop
add
or
lret
enter
stc
cmp
insl
xor
imul
or
xor
incl
mov
adc
sbb
or
jne
pop
adc
popf
xor
cmp
sbb
aam
mov
mov
cmp
jne
adc
fsubr
push
or
push
push
dec
enter
pop
mov
jmp
mov
xorb
push
int3
and
ljmp
cmpsl
cmp
add
push
mov
movsl
or
cmp
push
sbb
or
test
xor
bound
sbb
movl
adc
adc
or
icebp
push
cmpsb
mov
mov
mov
push
add
xorl
pop
inc
in
push
test
or
and
add
dec
jmp
sub
aad
sahf
or
mov
or
es
add
shr
mov
mov
inc
and
xor
push
and
xchg
jmp
xor
lret
and
push
jnp
inc
aas
dec
add
test
pop
pop
mov
dec
fldcw
adc
mov
adc
aad
inc
jle
mov
push
jns
push
push
push
cltd
fidivrs
shl
loopne
notl
push
lcall
mov
cwtl
pushw
xor
test
mov
push
add
aad
leave
ljmp
dec
xlat
push
loopne
imul
fwait
aaa
fs
fnstcw
jge
inc
xchg
add
mov
js
or
and
mov
push
push
ret
outsl
dec
push
icebp
jae
shlb
sub
jnp
xchg
lret
gs
fisttpll
and
cmpb
nop
push
and
rcll
dec
xchg
test
dec
xchg
adc
inc
jbe
sbb
cmpsl
in
out
sbb
pop
cli
cmpsl
push
mov
sub
push
in
cmp
adc
and
push
mov
shrb
mov
enter
xor
clc
pop
ljmp
scas
and
cmpsl
dec
or
dec
adc
pop
add
cmp
jbe
mov
pop
push
inc
repnz
dec
pop
and
int3
stc
or
sub
andb
sub
add
or
loopne
enter
insb
xor
lea
aas
nop
adc
xor
sub
xor
and
and
push
xchg
cmpsl
jl
inc
add
add
sub
cs
bound
adc
pop
push
gs
adc
inc
xchg
inc
inc
or
lahf
cltd
jl
and
dec
insb
xchg
and
mov
in
cmp
and
shlb
pop
and
shlb
pop
and
rorb
add
lock
clc
test
push
js
xchg
or
and
xchg
push
es
push
dec
nop
dec
and
push
or
test
push
rorl
cmp
push
std
jb
cld
icebp
inc
ja
neg
movsb
mov
push
jbe
test
mov
dec
inc
jbe
inc
ja
int3
sbb
mov
popf
outsb
loopne
dec
mov
test
mov
mov
cmp
mov
xor
push
out
mov
nop
adc
test
loop
cmp
and
push
hlt
inc
lcall
xchg
or
sbb
and
mov
adc
pop
and
shlb
pop
and
shlb
pop
and
rcrb
push
or
and
aam
sub
ljmp
push
fsubrl
hlt
mov
mov
sar
mov
es
add
adc
pop
es
dec
dec
dec
mov
adc
ss
popa
rcll
test
mov
test
es
add
xchg
inc
pop
inc
jne
shll
push
rorl
inc
adc
and
adc
addl
incb
enter
std
or
cld
test
or
or
add
fsts
cld
stc
orl
adc
repnz
push
dec
or
cmove
lret
dec
add
stos
jbe
enter
jne
adc
cmp
subb
pushf
xchg
add
sub
dec
or
in
xchg
bound
mov
sbb
inc
add
ret
mov
sarb
cmpb
cmp
add
sbb
and
shr
adc
inc
add
sbb
adc
add
ret
inc
rorb
sbb
and
xchg
inc
mov
jmp
sub
mov
or
mov
stos
xchg
mov
je
mov
xchg
ljmp
lods
push
sub
outsb
adc
sub
ja
sub
push
push
pop
loopne
adc
cmp
int
jle
dec
mov
repnz
lds
pop
mov
add
mov
add
inc
jmp
sub
jl
pop
sub
push
adc
jne
or
xor
and
push
push
push
and
or
xchg
push
inc
hlt
fwait
out
sub
sbb
jmp
cmp
add
jne
neg
scas
inc
fcomps
js
push
jnp
xchg
sti
push
add
or
loopne
or
test
lret
scas
pop
int
sahf
ficoms
cmp
sbb
jnp
xchg
mov
jbe
or
add
fs
lahf
mov
imul
jge
loope
je
xchg
push
or
gs
mov
pop
xchg
rclb
mov
aam
stc
push
push
sub
je
inc
sbb
das
mov
cmp
or
es
push
adc
in
test
daa
inc
xchg
push
mov
xor
or
je
sub
cmp
imul
push
iret
test
sarl
shlb
or
insb
pop
push
nop
leave
mulw
fnstsw
sbb
scas
dec
jmp
mov
dec
push
push
xor
or
repnz
jb,pt
cmp
pushl
push
shl
subl
or
ds
xor
cld
jmp
add
dec
adc
cs
cld
roll
or
shl
rol
sub
push
push
pop
xchg
and
bound
sub
push
sbb
shlb
mov
inc
iret
inc
pop
hlt
mov
mov
sub
lcall
in
add
or
insl
sub
inc
jge
inc
je
push
dec
jbe
push
pop
inc
xor
js
mov
mov
sub
or
mov
lods
mov
insb
xchg
mov
bound
pop
addl
dec
pop
pop
dec
mov
or
ss
pop
sub
test
scas
inc
cld
adc
cmp
movsl
fimull
push
mov
jmp
insl
stos
mov
sub
push
inc
movsb
dec
add
push
pop
mov
pcmpgtw
lock
fildl
mov
lahf
and
in
xchg
scas
and
adc
jge
and
dec
cmp
les
nop
xchg
dec
dec
sbb
mov
pusha
insb
stos
stos
test
xchg
dec
xor
test
adc
jbe
inc
sub
push
and
cld
xchg
cltd
and
inc
test
xchg
outsb
inc
int3
gs
jae
mov
shr
mov
jmp
xchg
dec
test
and
xor
mov
mov
jb
stos
cmpsl
fwait
push
sbb
push
mov
mov
jmp
pop
mov
sub
nop
ljmp
leave
jmp
ds
mov
pop
sub
mov
or
push
xor
dec
add
in
lods
dec
add
ret
xor
pop
or
add
and
clc
ret
fstpt
or
jge
jl
add
or
pushf
dec
outsl
push
jle
sub
cmp
je
sbb
test
fiadds
pop
mov
sub
aas
mov
dec
dec
pusha
test
sub
into
je
lea
mov
in
pop
test
rcrl
push
into
xor
sub
push
jmp
ds
mov
mov
sub
mov
cmp
ret
adc
enter
stos
jp
adc
mov
fsub
mov
adc
inc
and
loopne
enter
adc
push
add
or
adc
adc
int3
adc
jmp
and
mov
adc
cmp
jmp
add
or
jne
div
cmp
inc
inc
inc
clc
out
or
jb
cmp
js
js
ret
pop
jbe
dec
pop
lcall
cmp
adc
stos
aaa
push
xchg
int3
or
push
aaa
inc
adc
or
and
xor
or
mov
or
les
jbe
sub
sbb
mov
fcmove
inc
mov
ret
push
push
inc
mov
push
inc
imul
push
je
loopne
sub
sbb
bound
sbb
sbb
xchg
cmp
adc
xchg
adc
sub
shr
and
adc
lods
xchg
sbb
inc
sbb
adc
adc
jne
stos
pop
adc
test
outsl
fadd
dec
repnz
call
test
push
cmp
pop
jne
inc
inc
dec
mov
push
cli
pop
ds
mov
fcoml
adc
inc
xchg
call
mov
inc
stos
loopne
ret
sub
repz
aas
daa
sbb
cld
fcoml
dec
adc
cs
cmc
nop
sbb
add
xchg
scas
mov
std
les
sbb
jne
enter
fucom
test
adc
loop
add
push
dec
mov
icebp
jb
or
sbb
loope
xchg
add
mov
lea
push
test
movl
xlat
sub
jp
or
inc
jmp
dec
and
insl
add
orl
repz
xor
daa
or
dec
or
je
push
mov
inc
and
and
cmp
or
push
or
sbb
mov
cmp
js
or
or
pop
mov
cmp
jne
pop
push
stos
adc
dec
add
and
xor
mov
adc
hlt
pop
pop
mov
mov
lret
jmp
or
push
adc
pop
and
and
push
ret
addb
jmp
jae
cmc
cmp
sub
or
hlt
jb
shll
jbe
mov
imul
icebp
mov
dec
repnz
lds
mov
cmpb
cmp
cmp
sti
insb
sbb
test
inc
xchg
mov
ds
shll
dec
mov
add
in
jne
sbb
add
and
pop
or
cmpl
xchg
test
pop
jbe
notb
add
adc
je
loope
jmp
mov
andb
sbb
je
sbb
enter
mov
popa
rclb
popa
fst
jne
or
pop
add
cmp
popa
outsl
and
mov
push
pop
or
push
movsb
imul
sub
cmp
jbe
and
inc
sbb
push
jns
dec
nop
aad
jmp
rolb
dec
outsb
or
xor
mov
push
push
xor
out
add
icebp
lcall
adc
out
popa
dec
xor
ret
gs
xlat
shlb
outsl
push
data16
movb
push
cmc
mov
cld
push
xor
push
hlt
xchg
in
iret
fwait
imul
dec
test
cmp
aad
daa
or
add
inc
cmpsb
pop
xchg
inc
mov
lea
ljmp
popa
add
sub
cwtl
cmc
cmp
cmp
les
fsubl
mov
fucomip
mov
mov
ret
ja
sub
jbe
sbb
or
mov
cmp
lock
inc
dec
cmpsb
adc
cmp
stos
popl
shlb
pop
adc
mov
pop
jge
cmp
or
push
or
jg
pop
and
ljmp
call
adc
clc
and
inc
dec
add
or
popa
pop
or
iret
insl
push
int3
adc
mov
mov
and
pop
sbb
pop
pop
hlt
fs
nop
jbe
mov
push
or
pop
scas
xchg
sub
movsb
mov
xchg
loop
or
shlb
jmp
inc
jnp
cmc
and
mov
push
xchg
fcoms
push
pushf
adc
je
mov
or
roll
sub
push
jecxz
outsl
push
adc
cmc
inc
ret
xor
js
add
push
std
iret
stc
cmp
dec
add
roll
jg
or
out
lea
pop
nop
iret
mov
or
fdivs
dec
out
paddusb
daa
rorb
roll
int3
fsubl
push
mov
jmp
xchg
pop
pop
addr16
jo
add
mov
dec
pop
add
outsb
push
or
push
stos
add
jge
rep
rolb
mov
cmp
and
stos
add
jecxz
lea
push
sbb
fdivl
mov
push
out
adc
mov
push
lock
into
pop
rclb
shr
add
test
pop
das
inc
xchg
mov
fisubl
pop
push
sub
pop
shl
xor
ret
adc
mov
ret
xchg
and
pop
mov
dec
pop
xchg
int
pop
aas
push
shrb
and
ljmp
imul
pop
pushf
and
rol
or
and
insb
push
shll
cmp
adc
jne
mov
mov
into
or
push
mov
push
inc
mov
sbb
mov
and
mov
lea
cmp
jb
adc
dec
das
loope
std
xor
adc
inc
sbb
pop
jecxz
sub
and
add
mov
jp
cmp
jae
dec
sub
movb
inc
popf
adc
mov
xchg
pop
in
pusha
icebp
add
and
cmpb
jne
push
adc
cld
es
les
data16
inc
enter
xor
jo
outsl
adcb
stos
mov
mov
je
mov
xchg
add
imul
dec
add
sbb
aad
jge
cmp
mov
cmp
add
dec
or
in
ror
pushf
inc
sbb
fsubs
sub
push
fcomps
sub
sti
cmp
xchg
fldenv
mov
mov
push
aas
sub
lock
adc
jge
xorl
cmp
pop
mov
cmp
cmp
sbb
out
or
dec
das
fmuls
jo
and
ds
sub
and
sub
inc
adc
adc
mov
scas
jle
push
jg
or
mov
rolb
inc
neg
dec
push
mov
cmp
jl
dec
mov
mov
addr16
jecxz
lcall
pop
add
roll
mov
andb
ljmp
not
dec
lcall
push
push
pop
roll
mov
into
dec
dec
mov
das
gs
les
mov
jge
sub
inc
mov
cmp
aam
addr16
rol
add
nop
push
and
adc
inc
xchg
pop
js
dec
inc
arpl
jl,pt
and
fs
pushf
hlt
inc
mov
push
mov
outsl
mov
mov
rcrb
mov
movsb
fs
pop
and
pushf
mul
rorb
sbb
shl
xchg
and
jne
enter
xchg
pushf
in
xor
dec
mov
push
scas
in
push
push
cwtl
push
push
mov
mov
xchg
fs
stc
mov
rcrb
add
rcrl
les
scas
adc
pop
adc
je
in
lahf
es
xor
pop
pop
adc
mov
inc
ret
add
push
push
andl
loope
inc
or
mov
and
mov
leave
inc
inc
sbb
out
cmp
add
cwtl
mov
adc
cmpsl
fisttpll
aas
cmp
xchg
or
push
je
fs
les
sub
test
dec
jp
jbe
add
adc
add
ret
stc
cld
mov
xor
cmp
lret
sar
ret
push
adc
imul
addr16
and
iret
lret
test
pop
pop
mov
dec
out
ljmp
or
call
pop
ret
push
xchg
push
sub
sbb
pop
imul
ret
adc
or
add
sub
and
xchg
scas
dec
push
lock
jae
or
push
lahf
rolb
fwait
mov
xor
or
js
push
dec
add
cld
fs
dec
push
and
insl
mov
pop
pop
mov
pop
inc
inc
sarb
mov
xchg
adc
orb
add
add
adc
xchg
adcl
cmp
add
or
lock
adc
xchg
cld
or
adc
add
or
mov
sti
sub
mov
jbe
into
xchg
dec
adc
inc
dec
pop
pop
outsl
cli
hlt
adc
mov
mov
out
or
jmp
inc
mov
mov
leave
dec
push
pop
push
push
and
dec
pusha
adc
mov
mov
cmp
je
popf
or
and
insb
pop
imul
orb
pop
and
inc
and
ss
ljmp
inc
ja
mov
inc
and
mov
xor
sbb
mov
push
fcoms
or
das
push
test
mov
popa
dec
xchg
push
pop
or
and
xor
adc
jo
insb
aam
decb
test
movsb
xor
xor
jne
pusha
movsl
or
push
mov
add
lea
pop
mov
push
daa
and
jp
or
push
push
add
dec
dec
test
lods
adc
sbb
cmpl
add
out
inc
int3
or
inc
lea
push
push
pop
adc
imul
push
pop
inc
dec
cmp
push
inc
dec
pop
push
inc
js
xchg
dec
scas
leave
xchg
sbbb
mov
jmp
mov
into
or
movsl
lds
jnp
mov
lds
insb
sbb
and
jle
imul
xor
sub
outsl
push
inc
cli
pop
cmp
mov
mov
jp
xchg
sbb
gs
cmp
pop
sahf
sub
push
push
popa
dec
xchg
inc
and
mov
pop
fmull
xchg
jae
test
add
or
cwtl
cmp
sbb
push
mov
pop
mov
out
adc
push
and
cmp
adc
inc
fmull
test
or
pop
stos
sub
cwtl
adc
sub
pop
push
outsb
pop
adc
outsl
and
sub
push
and
imul
leave
sub
popa
push
fs
daa
add
rcrl
cwtl
sahf
dec
incl
push
sti
scas
in
ret
icebp
aad
adc
jge
test
dec
fisubrs
mov
pop
mov
lock
flds
mov
jmp
dec
inc
adc
sub
popa
or
jmp
int3
sub
adc
lock
je
or
adc
mov
inc
jnp
sub
pop
sbb
inc
pop
push
je
or
or
or
jmp
push
addr16
push
adc
or
jmp
mov
or
add
pop
jl
mov
mov
jp
ja
fidivl
add
test
cmp
jne
and
fldenv
pop
cmp
add
mov
or
jne
adc
cmp
mov
sub
or
hlt
cltd
push
push
push
mov
push
out
dec
jo
or
insb
mov
ret
xor
rcrb
cmp
xor
clc
jae
mov
jne
mov
inc
add
mov
cmpb
xor
je
or
movb
aaa
mov
push
add
ret
inc
imul
mov
sub
add
lar
xchg
and
xchg
add
push
loopne
jle
push
hlt
cmp
inc
cmc
out
dec
movsl
mov
dec
adc
and
in
fwait
ds
or
sbb
xor
push
faddl
je
or
hlt
push
jle
sub
clc
lea
add
add
xchg
enter
shll
cmc
sbb
xchg
or
sub
outsb
mov
mov
dec
cmp
add
je
jp
jle
jge
adc
or
mulb
cmp
mov
sub
js
scas
and
cmp
mov
add
jp
daa
adc
xor
test
cli
fs
hlt
mov
cmp
or
jle
and
xlat
sbb
mov
or
fnsave
ds
adc
adcl
dec
jb
gs
es
adc
add
push
inc
jge
push
push
sbb
outsl
loop
pop
les
out
test
sub
inc
clc
or
push
test
add
andb
ljmp
mov
or
sti
inc
cmpsb
repz
fdivl
push
mov
lret
jb
daa
mov
add
es
inc
cmp
push
add
add
push
or
ds
inc
dec
lret
dec
dec
call
repnz
icebp
ljmp
sub
xchg
push
hlt
inc
dec
repz
push
rorb
mov
jmp
jmp
out
lret
inc
jecxz
dec
jmp
add
je
push
sub
pop
icebp
inc
jmp
aas
orl
jne
cmp
jmp
cmpb
mov
or
add
jl
and
jo
cltd
cli
dec
rorb
inc
repnz
or
jp
inc
or
ss
jns
std
loope
cmc
dec
loop
add
sbb
mov
or
jle
cmpsl
fwait
or
aam
jne
jge
push
jne
xchg
out
push
mov
cmpb
sbb
xchg
xchg
add
mov
jae
xor
outsb
add
sub
adc
or
jnp
icebp
push
mov
inc
pop
into
or
pop
std
cwtl
mov
rclb
cmp
mov
mov
push
adc
inc
fisubs
jg
mov
jle
or
jbe
jecxz
dec
es
pop
xchg
xchg
adc
mov
jmp
fs
dec
or
jnp
sub
pop
jmp
fnstenv
lahf
cmpsb
scas
aaa
or
mov
adc
sub
adc
outsl
sub
int3
mov
push
sbb
add
or
ret
adc
pop
gs
jle
pushf
mov
lods
ljmp
and
out
data16
pop
mov
in
push
inc
das
js
sbb
sbb
scas
adc
pop
adc
push
inc
adc
test
in
cli
jge
lcall
inc
xchg
cmpsb
sbb
sbb
jbe
push
gs
sbb
xchg
inc
adc
xor
and
and
rdmsr
insl
push
push
jns
or
or
dec
dec
rorb
lret
es
cmc
xchg
out
lods
or
cmpsb
pop
push
jge
pop
mov
fimull
repz
aam
loopne
fmuls
and
inc
jne
in
and
inc
pop
and
push
dec
ljmp
dec
mov
jo
dec
mov
ficomps
inc
adc
xor
xor
and
cmp
pop
jbe,pt
xchg
push
jmp
lret
mov
xor
mov
sub
cmpb
push
adc
shrb
cmp
push
or
and
jmp
xchg
xor
sbb
dec
dec
insb
cmp
adc
push
jge
mov
xchg
pushf
push
push
pop
mov
push
popf
cltd
popf
inc
fwait
push
push
pop
or
mov
pusha
mov
mov
mov
fsubrs
pushf
lahf
jmp
xchg
push
cmp
lea
jne
cmp
mov
inc
push
cmpsl
and
jg
mov
pop
mov
enter
hlt
cmp
and
inc
cmp
jae
add
shr
ret
adc
and
lock
inc
mov
enter
loope
mov
inc
mov
pushf
pop
inc
dec
jne
xor
inc
enter
mov
psubb
outsb
fwait
in
adc
add
and
lock
movsb
fs
xchg
and
fmulp
jne
inc
dec
mov
insb
das
je
jle
enter
dec
pop
push
add
shl
or
sar
push
dec
add
shll
out
jne
or
fs
sbb
gs
cs
insl
test
or
sub
mov
xchg
and
lea
dec
mov
add
pop
xchg
push
pop
in
or
addr16
xchg
arpl
mov
aam
push
sbb
and
sbb
jne
mov
rclb
cmp
lods
cmpsb
mov
cmp
jne
push
dec
popf
push
dec
rcrb
or
ret
mov
fsubl
inc
pop
enter
mov
pushf
adc
adc
cmp
push
and
pop
dec
pop
in
or
pop
add
jge
mov
add
or
mov
sub
xor
rcrb
adc
js
and
cltd
rclb
fcompl
jmp
js
aaa
dec
cltd
inc
adc
mov
sbb
push
movb
aas
or
cmp
inc
or
insb
shl
jmp
lea
cmp
sarl
mov
aaa
push
insb
ljmp
lea
pop
shrb
and
push
mul
dec
inc
sbb
addr16
sub
sub
rorb
inc
daa
inc
jg
cmpsb
or
jmp
leave
ds
jmp
cmp
pop
or
scas
repnz
imul
or
scas
sti
add
dec
mov
sbb
cltd
sub
push
enter
pop
dec
sub
ret
xchg
test
pop
outsb
sahf
inc
inc
lock
test
push
mov
lret
xor
das
loop
add
jmp
call
adc
cltd
adc
cmp
jle
jno
add
je
mov
mov
sub
pop
and
je
push
jp
out
add
pop
mov
add
js
push
or
add
push
je
and
bound
je
adc
pop
outsb
popa
enter
mov
push
mov
clc
hlt
movsl
or
adc
push
mov
xchg
nop
stos
cmp
or
fwait
mov
ljmp
xor
in
pop
inc
ljmp
decb
mov
ret
push
sti
loop
sbb
pusha
add
dec
or
or
cli
push
cmp
push
sbb
mov
add
or
mov
adc
add
push
les
test
add
loope
jg
push
or
scas
mov
add
pop
out
out
cmpl
push
push
addl
cwtl
mov
cmc
and
lea
out
stos
mov
test
pop
xor
je
ja
lret
xchg
push
cmpl
mov
sub
push
dec
js
repnz
cmp
inc
sbb
push
repnz
or
or
inc
in
movsb
prefetchwt1
or
fs
cmp
mov
mov
ficoml
adc
jae
xchg
adc
lods
pushf
or
cmpsl
lret
ret
je
lock
pushl
lods
cltd
data16
sbb
sti
jbe
xchg
push
in
bound
push
add
test
or
and
push
and
mov
xchg
pusha
and
inc
or
pop
stc
lret
les
shrb
popa
insl
inc
push
pop
xor
hlt
sub
test
jns
mov
add
out
lcall
jne
push
dec
nop
lea
and
andl
sbb
jmp
aad
dec
mov
mov
idivb
xchg
cmp
dec
adc
xchg
mov
adc
je
mov
xor
adc
jne
and
mov
push
sbb
loopne
adc
stos
or
rorb
les
lds
sbb
xor
mov
lahf
push
xchg
push
andl
xchg
ja
cwtl
cmp
cmp
sbb
or
sbb
sbb
mov
nop
push
lea
adc
test
sbb
adc
adc
jb
add
mov
xchg
pop
mov
or
mov
inc
imul
xor
xchg
dec
xor
popf
mov
add
jp
add
and
in
mov
jle
inc
cmpsl
jb
inc
xchg
out
push
or
push
fs
cmp
push
outsl
xchg
es
or
mov
fs
mov
sbb
pop
into
add
ds
sub
sti
add
sbb
add
mov
jmp
xor
or
adc
jbe
push
clc
mov
push
sbb
into
inc
ljmp
and
add
dec
xor
test
notb
sub
test
je
gs
pop
mov
mov
pop
push
insl
push
xchg
mov
lods
mov
mov
jbe
testl
jge
and
outsl
shll
mov
and
add
mov
push
js
mov
or
sbb
shrl
nop
mov
and
dec
add
cmp
shll
lea
push
loope
cli
ret
and
jb
add
out
stc
movsb
clc
sti
das
lods
pop
inc
notb
incb
add
sub
shr
cld
iret
imul
and
js
or
dec
js
fs
enter
adc
xor
cmp
cmp
hlt
scas
push
add
test
pop
pusha
push
jle
sar
dec
addl
add
pop
mov
cmp
adc
mov
add
jmp
dec
add
addr16
inc
decb
jne
das
inc
jne
aas
or
psraw
push
adc
leave
or
push
shrb
add
push
or
hlt
mov
cmp
insb
and
lret
inc
insb
pop
mov
in
dec
hlt
push
pop
xchg
mov
sub
and
ss
dec
pop
cmp
jbe
test
shrl
and
arpl
pop
jae
inc
addl
inc
mov
not
and
dec
or
add
es
and
jmp
adc
stos
push
sub
jno
jns
clc
dec
repnz
push
cmp
decb
jbe
shll
pop
jbe
inc
fucomip
ljmp
sbbb
ficoms
insl
pop
gs
mov
jo
sbbl
push
mov
dec
paddd
mov
push
jnp
orb
sub
mov
inc
mov
sub
adc
sub
push
stos
enter
ljmp
popf
adc
xchg
inc
xor
fsts
sub
testl
mov
or
pusha
or
loope
add
cmp
loop
adc
call
adc
aam
popa
or
pop
pop
mov
movsb
mov
xchg
adc
sub
add
jns
in
pusha
sub
or
js
mov
push
inc
mov
or
or
adc
imul
nop
jnp
mov
jp
subb
loopne
sub
adc
sub
push
dec
adc
push
movsl
dec
adc
pop
inc
int3
sbb
dec
les
push
add
adc
adc
xchg
dec
test
test
out
jp
cmc
movsl
and
xor
inc
cmp
movsb
push
rcll
dec
mov
xor
dec
call
xchg
into
decl
dec
xorl
in
push
xchg
shr
pop
mov
mov
inc
std
jae
dec
xchg
repz
jae
adc
or
clc
jno
ret
adc
pop
cld
xor
jb
adc
mov
push
fcoms
inc
adc
out
in
dec
jae
les
mov
bound
push
jmp
sbbb
push
or
mov
dec
sbbl
inc
je
enter
addr16
mov
inc
inc
push
cmp
shlb
pop
mov
push
mov
cmp
cli
xchg
and
mov
aad
inc
push
aaa
imulb
push
sub
mov
cmpsl
xchg
or
mov
jmp
push
pusha
js
pop
cmp
xlat
je
lea
pushl
cli
push
into
jne
lods
xor
and
pop
test
jl
add
testl
lcall
dec
je
and
jle
rolb
notl
dec
add
jb
xchg
popa
cmp
ret
adcb
dec
sbb
push
jle
and
jl
push
pcmpeqw
mov
add
in
and
jmp
gs
and
dec
and
mov
inc
sbb
push
mov
ret
or
jp
addb
pop
jns
in
int
or
into
lods
inc
sbb
sub
push
sbb
push
in
push
mov
dec
xchg
fs
push
or
xchg
jge
jae
subb
push
mov
out
or
pop
add
push
push
jmp
stos
adc
or
adc
push
jnp
lds
cs
push
or
lret
sub
mov
in
orb
repz
mov
inc
add
rcrb
jns
ds
sbb
dec
sbb
cltd
out
inc
sarl
pop
cmp
and
inc
add
test
orl
bound
dec
dec
xor
or
movsb
xor
push
lock
je
les
lods
movsl
sbb
faddl
les
lock
mov
xor
sbb
push
sub
popf
add
aam
fdivs
adc
cmp
jne
inc
rcll
std
and
dec
or
inc
arpl
pop
xor
push
or
inc
loopne
jo
push
iret
jno
mov
sub
xchg
sub
loopne
and
sbb
imul
imul
sub
sub
inc
adc
out
outsb
jns
push
sbbb
dec
xchg
xchg
popf
bound
sbb
cmp
cmp
lock
dec
stc
rorb
mov
movl
push
out
sub
dec
add
subb
or
xchg
jae
pop
dec
mov
add
pop
dec
out
dec
or
in
add
inc
popf
xchg
inc
lcall
cmp
jne
or
pop
mov
shlb
cmp
or
mov
ljmp
xlat
lea
pop
sub
cmc
pop
cmpsb
xadd
movaps
sub
rorl
cmp
scas
mov
test
sahf
mov
add
mov
fnstcw
push
popl
and
movl
adc
pop
jb
loopne
dec
orl
pop
or
add
adc
mov
jl
pop
nop
cli
icebp
dec
fldt
cmpsl
mov
push
jg
mov
xor
sub
add
dec
mov
mov
sar
add
mov
js
mov
mov
hlt
enter
sub
insl
adc
andb
cmp
movb
decl
pop
cmpsb
enter
test
pop
xchg
mov
iret
jmp
pop
adc
push
xlat
movsb
mov
add
inc
xor
inc
dec
add
jg
inc
and
xchg
xchg
gs
sti
xor
inc
cmc
cli
je
imul
adc
xor
mov
test
sub
leave
pop
push
das
push
lds
outsb
adcb
xchg
cmp
jno
inc
into
inc
je
adc
pop
push
mov
dec
push
sub
mov
mov
jno
pusha
repz
popf
or
cmp
lods
push
mov
jg
out
std
es
ja
jno
xor
push
xor
cmp
cmovl
adcb
mov
push
pushf
scas
rcr
push
inc
mov
mov
dec
sbb
cmc
cli
sub
mov
mov
call
mov
clc
pop
inc
mov
add
xor
xor
addl
push
fsubp
mov
add
sbb
xor
mov
mov
jp
xor
sub
mov
adc
sbb
dec
jns
xor
adc
rclb
mov
rolb
ret
and
int3
inc
mov
dec
cwtl
dec
test
jl
call
je
jbe
ret
add
clc
jae
orb
push
rolb
ljmp
fsubrs
mov
jno
xchg
and
cmp
lahf
fisttps
daa
sub
push
sbb
cmp
out
mov
mov
and
fwait
push
pop
xchg
add
push
mov
xor
test
or
dec
mov
jbe
mov
mov
mov
lock
fsubrl
cmp
bound
mov
outsl
xchg
mov
jb
nopl
push
movsb
and
or
and
dec
xor
loopne
adc
sub
popa
test
jge
xor
xorl
sub
jns
mov
addb
in
jae
push
inc
test
add
xchg
sbb
mov
push
das
je
lret
sub
rol
ret
jnp
arpl
jbe
sbb
jbe
or
lahf
pop
sub
shlb
test
pcmpeqw
or
mov
out
out
cmpl
cmp
mov
or
adcl
push
test
cmp
addr16
inc
or
loop
push
sub
and
sbb
or
adc
mov
movl
pop
incl
add
and
movsl
adc
or
pop
scas
enter
fwait
test
pop
mov
mov
jle
or
xchg
sub
idivb
ret
mov
add
ret
loopnew
jl
add
pop
add
adc
movsl
add
int
lret
insl
add
cmc
movl
mov
mov
aam
jle
es
cmp
pop
mov
cmp
adc
mov
es
cmpl
jge
jb
mov
pop
mov
test
sub
bound
and
or
push
or
test
push
daa
aas
cmp
pop
movsb
leave
jmp
pop
stc
or
in
sub
push
out
jo
out
iret
or
adc
lods
cmc
repz
repnz
sub
pop
jmp
loopne
ljmp
adc
and
hlt
clc
push
aas
xchg
lcall
add
jle
flds
test
orb
sbb
mov
adc
inc
lods
into
dec
sub
jne
mov
bound
xchg
fwait
inc
cmp
clc
arpl
sbb
shlb
mov
int
push
sub
pop
mov
xchg
dec
adc
jmp
out
adc
xchg
sbb
mov
sub
subb
adc
sub
sbb
mov
scas
js
mov
xor
cmp
dec
inc
popa
push
cmc
sub
andl
lret
jae
add
sub
pop
adc
inc
pop
cli
test
mov
imull
lret
outsl
add
add
mov
test
jne
xchg
sahf
cmp
pop
cmpb
roll
jmp
movsb
jae
xchg
cmpsb
lods
add
pushf
into
cmp
mov
xor
ret
jmp
mov
and
call
sbb
jae
notb
mov
arpl
jne
cmp
and
sbb
pusha
pop
or
push
push
stos
dec
test
adc
jmp
adc
inc
inc
xor
xor
clc
jmp
xchg
rolb
jbe
jo
push
and
push
inc
push
fdivl
leave
cmovb
push
movsl
aam
xchg
lods
nop
das
fcmovnb
sub
and
movsb
and
inc
add
clc
or
andb
jl
sbb
arpl
sub
enter
pmullw
lock
xor
imul
jb
push
push
or
cmp
mov
outsb
hlt
sbb
inc
mov
push
faddp
shlb
icebp
lock
inc
push
hlt
jae
adc
mov
cmp
pusha
xor
cmpb
jge
push
inc
push
adc
addb
rcrb
sbbl
cmpsl
mov
add
movsl
xlat
stc
movsb
jmp
or
or
sbb
jbe
push
les
mov
adcl
ret
xor
loopne
push
cmp
adc
aad
fcmovbe
or
cmp
or
adc
and
ss
pop
js
insb
into
out
jb
xchg
clc
dec
repnz
xchg
push
je
lds
aaa
or
sub
orb
sarl
pop
mov
mov
pop
or
fstpt
stc
dec
dec
add
test
out
xchg
push
repnz
pop
jb
aam
addr16
mov
test
pop
dec
dec
jp
fadds
imul
iret
gs
xor
jne
bound
fcomi
pop
inc
add
add
lcall
mov
inc
adc
add
xor
je
cmp
mov
fistpll
outsl
push
add
ret
mov
test
insl
xor
push
pop
lcall
pop
xor
mov
push
outsb
shl
inc
out
jnp
jecxz
xchg
or
icebp
add
and
mov
jl
push
out
sbb
add
lret
stos
ja
jp
push
mov
push
or
inc
call
dec
mov
lods
inc
leave
data16
xchg
jl
adc
jmp
pop
movb
inc
mov
jae
insw
pop
adc
hlt
pop
test
or
sahf
je
sub
dec
mov
sbb
pop
add
inc
xor
movsb
pop
jne
sbbb
out
cs
dec
adcb
or
adc
stos
dec
dec
icebp
inc
test
jmp
xchg
scas
je
jp
loop
mov
add
mov
bound
pop
mulb
adc
insb
push
and
lds
add
shl
fdivl
jge
lods
sub
lods
decb
pop
lcall
dec
push
popa
je
lea
loop
jae
stos
push
mov
jmp
push
leave
or
mov
ret
dec
add
repnz
cmp
cmp
mov
mov
push
jg
pusha
fsubr
sub
inc
iret
or
dec
ss
push
lret
test
add
mov
jmp
push
or
mov
jne
jge
scas
movsb
cwtl
lar
inc
loope
shl
cld
jnp
sbb
orb
movl
movsl
adc
or
bound
and
pop
or
cs
sti
inc
xchg
xchg
push
enter
int
cvtps2pd
xlat
dec
cs
jmp
pop
mov
pop
adc
into
subl
repz
xchg
movsb
dec
mov
add
push
jl
sub
jge
pop
dec
sbb
or
int3
out
add
sbb
or
push
sbb
dec
adc
gs
adc
xor
inc
pop
sarb
push
or
mov
aas
jb
inc
inc
mov
or
cmpsl
repnz
jl
jmp
aas
mov
mov
and
into
xchg
mov
sbb
mov
cmp
cmp
je
out
imul
cmc
movsl
js
sub
decl
in
cltd
out
or
in
xchg
sub
fildll
sarb
pop
outsb
add
cmp
sub
inc
jg
adc
lahf
lock
iret
fdivl
insl
mov
aas
out
sub
add
loopne
jbe
mov
repz
arpl
push
orl
pop
push
and
rol
xchg
xchg
stos
mov
movsl
daa
shll
or
pop
push
dec
adc
pop
loope
pop
mov
jne
mov
loopne
cmp
sarl
push
adc
je
cmp
lret
dec
xor
inc
cmp
ljmp
gs
or
push
lret
xor
add
mov
dec
inc
sarl
pushf
jne
push
xchg
dec
push
stc
mov
dec
adc
inc
xlat
les
pop
xor
dec
add
mov
cmp
cs
or
or
les
test
rcrb
dec
mov
setg
push
xor
in
dec
jl
lds
xor
push
out
in
push
and
insb
shrb
push
pushf
pusha
leave
inc
movsl
cmp
inc
sbb
arpl
jb
push
lret
xlat
mov
insl
adc
stc
xor
jo
lock
lds
adc
xchg
xchg
or
pusha
ss
jo
push
or
enter
test
mov
pop
sub
xchg
or
add
jle
test
cmp
pop
add
jns
neg
sub
sub
jl
lock
cltd
adc
idiv
fbstp
adc
push
std
ficoml
insl
cwtl
inc
xchg
mov
inc
push
andb
push
call
and
pop
jle
mov
inc
inc
and
ds
mov
pusha
xor
in
pop
lret
test
inc
add
push
ret
test
lds
std
jne
pop
movb
jge
dec
aas
inc
xchg
adc
push
jo
movb
xor
clc
mov
or
pop
rcrb
add
test
push
je
neg
xor
push
or
mov
cli
push
sub
popf
leave
push
iret
add
adc
rclb
push
push
nop
pop
mov
inc
es
bnd
push
adc
mov
push
inc
pop
xchg
push
ficoml
adc
pushf
sarl
sbbb
inc
add
inc
xchg
cld
mov
inc
xchg
jge
inc
or
stc
and
decb
clc
bound
xchg
pop
adc
sbb
or
xchg
es
adc
add
cld
lods
adc
andb
or
dec
testl
mov
jge
adc
fldcw
data16
shr
mov
dec
in
sbb
test
jmp
jbe
fcomi
out
push
cwtl
xchg
or
leave
sbb
xchg
mov
cli
add
xor
sbb
pop
sub
xor
mov
movsb
ret
or
dec
inc
aas
cmp
icebp
fdivr
adc
lock
and
sbb
push
aad
push
push
mov
stc
mov
adc
push
adc
or
or
inc
push
push
test
rclb
cmp
and
adc
and
sahf
rcrb
lcall
adc
outsb
mov
sbb
les
and
and
push
or
dec
aam
inc
cld
and
sub
movsl
push
cmp
stos
pop
cmp
pop
jecxz
mov
dec
nop
xchg
cmp
inc
out
clc
loopne
push
xor
arpl
sbb
cmp
popa
or
and
movsb
push
adc
mov
adc
les
mov
xor
sub
repz
mov
test
mov
dec
sbb
dec
lods
mov
and
daa
pop
sbb
sahf
rorl
fldt
call
dec
and
or
pop
stos
push
adc
mov
in
filds
test
mov
jo
and
fldt
mov
test
rorb
jmp
adc
mov
das
or
je
xchg
sub
jp
stos
repnz
push
pop
cmp
and
testb
int3
inc
jle
lods
cmp
push
cmp
jg
insl
xchg
sbb
xlat
sub
add
gs
shlb
add
ss
push
fdivl
outsb
dec
fistpl
std
or
je
push
lret
in
xor
je
sub
adc
or
scas
inc
bound
and
adc
push
xchg
hlt
mov
mov
add
jmp
cmp
dec
shl
popf
sbb
add
ret
and
shlb
mov
mov
inc
push
das
jne
mov
mov
fwait
jp
pop
adc
mov
xor
insl
dec
rorb
mov
push
sbb
add
cmc
lock
push
inc
nop
xor
cmpb
mov
repnz
jbe
jge
or
leave
push
add
shrb
inc
decl
jmp
cmp
or
add
jmp
stos
sub
lea
sub
shl
stos
rcrl
adc
pusha
pop
mov
push
add
addl
adc
xor
mov
nop
and
sub
out
jecxz
cmp
xchg
ret
loopne
in
add
jb
pop
adc
faddl
or
mov
mov
mov
adc
mov
jmp
les
inc
mov
xchg
in
push
mov
jnp
adc
push
je
sub
movsl
dec
fnstsw
push
sub
daa
imul
dec
adc
or
xchg
push
enter
adc
nop
arpl
lahf
and
jmp
std
mov
cld
jne
xchg
mov
dec
and
jne
pop
or
add
jge
inc
jbe
push
adc
clc
or
inc
push
ds
stos
mov
inc
arpl
out
or
adc
dec
test
xchg
push
imul
jl
cmp
mov
shr
sbb
test
or
test
icebp
add
lea
hlt
push
filds
inc
cmp
ja
pop
sub
mov
and
mov
mov
cmp
incl
rcrb
cs
inc
cli
xor
or
sub
push
repz
out
jp
xchg
orps
xor
cld
jb
int
fs
mov
inc
test
adc
std
adc
jge
nop
pusha
xor
sbb
add
inc
and
jmp
andb
jecxz
cmpb
xchg
aas
inc
dec
nop
adc
push
es
leave
shll
in
and
adc
daa
int3
cmp
ljmp
mov
xchg
insb
pop
jne
sub
std
into
vmulps
xchg
insb
cmp
sub
or
cmp
push
test
fidivrl
daa
push
and
mov
dec
pop
inc
adc
xchg
mov
or
adc
xor
push
push
xlat
dec
adc
sub
adc
jne
leave
and
addr16
mov
cmp
or
pop
cmp
test
outsb
jge
rcr
adc
shlb
pop
pop
ljmp
std
mov
pop
pop
dec
es
mov
int
or
jbe
mov
cmpb
or
mov
push
mov
adc
shlb
or
lret
push
or
es
or
sbb
mov
int3
mov
test
xchg
push
push
jo
sub
sub
adc
inc
xchg
enter
cmp
add
cmp
adc
adc
adc
push
adc
mov
jge
aam
xchg
xchg
mov
sub
push
inc
adc
pop
lahf
mov
push
jbe
adc
adc
mov
push
jbe
or
pop
or
cltd
add
adc
cmc
lea
dec
pop
or
inc
or
nop
adc
mov
js
xor
add
jne
cli
push
das
pop
adc
push
adc
fdiv
jns
adc
inc
es
ds
pusha
or
jbe
push
fstpl
mov
xor
and
test
fcmovnb
addr16
push
inc
cs
mov
jo
xor
push
cmp
push
je
cmp
test
inc
mov
lcall
in
fsubrl
sub
inc
cmp
test
cmp
lds
jl
add
cmp
je
push
loop
sbb
andb
and
sbb
pop
popf
shll
inc
mov
popa
std
jo
leave
pop
inc
mov
cmp
gs
sbb
or
or
mov
adc
pop
cs
cwtl
daa
into
xchg
sub
dec
add
mov
dec
clc
mov
push
mov
push
mov
mov
xchg
fwait
stos
push
mov
push
repz
in
dec
sbb
in
push
dec
sbb
mov
dec
mov
mov
psllq
adc
push
andl
out
fsts
call
dec
xchg
in
rorb
negb
mov
inc
xchg
cli
inc
fildll
xchg
nop
pop
pop
add
adc
push
aad
jmp
into
push
pop
add
or
dec
and
jmp
inc
or
bswap
or
orl
cltd
int
in
or
dec
adc
jne
andl
and
andl
dec
mov
lea
add
mov
jmp
pop
add
hlt
sub
pusha
inc
pop
jne
inc
xchg
movsl
and
sub
dec
ret
mov
jge
shll
and
add
mov
or
arpl
prefetcht0
xchg
ret
shr
adc
push
inc
test
adc
pop
inc
pop
daa
cli
adcl
dec
outsb
addl
aas
pop
push
cmp
push
sbb
push
cltd
nop
dec
mov
mov
add
sub
pop
stos
cwtl
lcall
add
mov
pop
push
les
std
mov
mov
incl
rolb
inc
or
sub
mov
dec
push
inc
add
into
mov
and
and
push
test
jbe
inc
loope
sbb
push
add
repnz
or
clc
push
mov
push
subl
or
add
xchg
cltd
out
jg
and
push
out
das
pop
jnp
dec
inc
add
push
jecxz
and
and
mov
shr
push
dec
adc
jmp
lcall
pop
cmp
mov
sub
clc
mulb
out
ret
into
adc
decl
jle
or
and
mov
cmp
das
mov
xchg
pop
mov
jae
dec
std
add
and
mov
leave
add
mov
scas
xchg
or
jecxz
inc
clc
sbb
add
mov
or
lea
dec
sub
in
cmp
cmp
adc
lea
loop
ficoms
fnstsw
jns
inc
jge
mov
jb
cmpb
addl
pop
lea
sbb
andb
inc
orb
mov
in
imul
mov
test
push
imul
mov
mov
aas
dec
hlt
or
aam
lret
dec
and
push
call
mov
mov
push
popa
mov
inc
inc
add
out
inc
cmp
cmp
fdivr
lea
jne
test
push
addb
add
in
mov
ret
dec
pop
sub
cmc
lret
aam
iret
cmp
pop
push
scas
xor
mov
push
call
add
pxor
sub
pop
jnp
std
mov
sti
add
stos
pop
outsb
sub
fisttps
inc
push
aam
mov
in
outsb
and
mov
les
xor
les
inc
inc
ss
xor
outsb
adc
mov
jg
mov
push
lret
and
jo
or
pop
or
cmp
dec
sub
jae
mov
mov
dec
xor
pop
add
daa
aam
pop
pop
in
aas
rcr
push
rclb
ret
popl
or
scas
push
xchg
mov
add
xor
xor
dec
int
out
in
inc
mov
inc
in
mov
fwait
stos
add
xchg
in
pop
mov
inc
add
imul
push
sarb
push
mov
ds
aam
inc
or
aam
push
add
and
push
shrl
cld
cmpsb
out
jle
inc
jae
jnp
popa
and
jmp
pop
mov
imul
push
mov
pop
pop
test
test
xor
cmp
repnz
sub
add
push
push
push
inc
inc
or
outsl
push
inc
outsl
addr16
add
lods
or
jns
sub
jbe
xor
jmp
jb
popf
aam
outsl
lret
test
cmp
pop
pop
or
jg
sub
inc
sbb
push
or
dec
adc
and
fs
xchg
add
or
cmp
repnz
push
ret
rorb
pop
cld
mov
pop
movsl
cli
scas
aaa
xchg
push
shlb
call
and
js
mov
pushf
test
or
xchg
or
add
ret
fs
or
jge
xchg
in
test
pop
jmp
xchg
lret
or
jo
scas
push
pop
ss
inc
push
decl
mov
popa
pop
int3
cmp
sub
addb
push
std
xor
insb
test
push
xor
cmpsl
sub
adc
test
xor
jmp
mov
movsl
push
or
and
pop
or
and
adc
popa
aaa
mov
pop
jmp
fwait
hlt
popf
imul
push
xchg
out
leave
hlt
cmp
and
dec
and
movsl
xchg
rclb
xor
xor
jae
mov
jp
sub
rdtsc
mov
test
mov
dec
sub
sbb
mov
xchg
sti
fisttpll
and
stos
in
or
jg
mov
pop
dec
sub
dec
lea
sub
add
clc
testb
mov
lds
subb
inc
sub
pop
mov
clc
push
dec
lock
repnz
je
test
andl
sbb
loopne
test
or
adc
pusha
ror
add
or
leave
push
sub
or
adc
jo
mov
or
xchg
adcb
xchg
cmp
push
cmp
dec
xchg
mov
jmp
inc
adc
hlt
add
mov
jl
pop
sub
lret
jb
mov
in
or
repnz
cmpsb
cmp
pop
push
pop
adc
xchg
cmp
push
sahf
mov
mov
jmp
adc
dec
hlt
outsb
sub
adc
push
imul
push
test
jns
cmp
inc
mov
test
les
and
mov
push
adc
mov
jb
dec
xor
shrb
pop
gs
mov
fisttps
orl
sub
push
push
jmp
sbb
xor
xchg
cmp
mov
and
jb
adc
loopne
pop
inc
mov
pxor
mov
push
xchg
mov
and
push
cmp
pop
jge
pop
mov
ret
fld
pop
hlt
test
and
es
mov
mov
push
mov
shll
js
add
add
and
mov
add
ret
pushf
cmp
data16
xchg
xor
lret
or
bound
and
xor
push
jl
aas
xchg
popa
in
pop
cmpb
aad
fidivl
lods
push
mov
das
sbb
in
adc
sub
xorb
mov
push
jecxz
mov
inc
push
or
or
mov
mov
sarb
test
push
or
pop
aam
test
adc
xchg
mov
mov
sarb
popf
in
mov
sbb
inc
mov
or
je
imul
dec
loope
dec
clc
and
dec
mov
jle
sub
adc
cwtl
scas
and
and
xchg
adc
dec
push
mov
pop
push
jne
rclb
cmp
hlt
xchg
scas
push
jmp
cld
movsl
pop
fsts
fsubrl
outsl
das
jmp
sbb
push
pop
push
icebp
and
push
loopne
pop
stos
in
int3
inc
jae
adc
shld
xor
loopne
sarb
cmp
int3
adc
mov
mov
push
je
popf
test
dec
mov
repnz
cmp
das
add
in
cmp
rorb
out
sub
adc
rcrb
adc
push
fbstp
push
mov
inc
subl
or
mov
xchg
out
xor
out
das
adc
ljmp
xchg
mov
or
enter
rorb
aad
iret
notrack
push
lock
xchg
xchg
adcb
repnz
add
pop
sbb
xchg
xchg
push
jo
sbb
enter
mov
and
xor
mov
sbb
mov
out
inc
out
push
ret
lret
inc
cmp
push
xor
xor
xchg
sbb
arpl
enter
cmc
jns
fidivl
clc
fdivrl
ljmp
xor
rolb
xor
cwtl
sub
cmp
jbe
lret
and
adc
gs
push
imul
add
xor
add
mov
mov
lea
push
mov
jae
sbb
das
in
jb
inc
and
stc
and
lcall
jecxz
out
and
sub
inc
imul
or
mov
sub
mov
adc
call
fcomip
adc
push
loopne
jae
mov
in
jmp
xor
dec
cmc
jmp
loope
jnp
int
iret
fcoms
push
push
hlt
jmp
or
push
add
div
pop
pop
pushf
addb
sbb
addb
jne
out
or
les
pop
mov
xchg
mov
aaa
loop
pop
xor
sub
hlt
dec
push
jo
push
cmp
jp
sbb
adc
cmp
dec
mov
jp
out
je
cli
sub
pop
mov
jle
rclb
repnz
je
push
sub
jbe
pop
adc
sub
outsl
loopne
int
xor
and
cld
clc
mov
inc
loopne
test
shrb
test
push
xor
cmovl
inc
and
dec
xor
sub
and
sbb
test
jbe
push
orb
mov
pop
sbb
and
xchg
fisttps
or
mov
loopne
test
int
cmpsb
mov
mov
adc
and
dec
in
negl
loopne
test
sbb
or
xchg
cmp
loope
pop
and
cmp
push
notb
roll
mov
in
jg
shl
or
pop
jo
sti
cmp
adc
cmp
inc
test
cmp
inc
sbb
call
push
add
pop
and
sub
sub
push
adc
sbb
out
mov
and
adc
pop
adc
int3
je
or
ljmp
les
mov
xchg
inc
aad
mov
xchg
add
pusha
les
stos
inc
and
and
mov
dec
xor
sub
mov
adc
cmp
add
inc
add
cs
add
push
adc
testl
dec
inc
add
dec
or
je
adc
or
shll
dec
adc
pushf
scas
adc
inc
test
subl
cld
xchg
les
xor
or
fisttpll
push
dec
push
shll
lret
dec
iret
cmp
es
xchg
call
pop
push
sub
mov
dec
hlt
sub
je
adc
cmpsb
jne
sbb
nop
pop
stos
xchg
jmp
jp
aam
sub
push
rorl
cmp
inc
lret
aas
dec
adc
repz
sub
add
mov
mov
cmc
dec
stc
jmp
add
js
mov
arpl
cmpsl
and
sti
push
sbb
jne
xorl
aas
outsb
adc
push
pop
push
mov
bound
hlt
test
sbb
stc
lock
leave
pop
fnstsw
bound
loope
cmp
inc
pop
nop
movsl
xor
cld
xchg
xor
or
lock
adc
icebp
sub
fstcw
jb
rclb
outsb
or
xor
and
or
in
adc
out
adc
rcr
insl
call
outsl
jge
pop
pop
divl
mov
movsl
or
mov
in
pop
lret
fstpl
out
mov
or
mov
pop
iret
lret
add
add
mov
mov
mov
cmc
xor
or
cmpl
and
ljmp
push
sub
adc
in
cmp
pop
pop
test
adc
push
dec
sub
cmp
inc
push
ja
nop
adc
add
and
push
inc
sub
out
mov
sbb
mov
dec
into
imul
jmp
or
mov
pop
lock
pop
je
dec
rclb
adc
mov
call
test
dec
adc
je
sbb
push
adc
push
std
push
or
lret
pop
call
loop
rolb
xchg
cli
adc
dec
pop
jle
cmp
mov
jl
dec
pop
pop
outsl
cmp
xchg
fsubrs
mov
test
cmp
push
movsb
shll
loopne
pop
popa
inc
fmull
add
js
cmpsl
cmp
cli
xchg
inc
add
pop
testl
lods
sti
cmpsl
mov
out
gs
pop
add
iret
ret
pop
cltd
pop
xor
jl
xor
ja
mov
or
into
inc
pop
test
and
mov
les
sub
push
pop
leave
mov
mov
pop
add
pop
lcall
pop
push
jg
push
dec
addb
stos
mov
in
pushf
out
add
push
cmp
mov
dec
orl
pop
jbe
and
pop
mov
sub
stc
xor
out
xchg
adc
pop
lods
xor
int
push
orl
cmp
ljmp
lock
mov
fwait
lret
sbb
call
push
add
lret
roll
cmpsl
ficoms
mov
cwtl
hlt
nop
fidivrs
pop
cmp
xchg
or
out
xor
cmp
popa
pushl
add
pushf
jno
jmp
in
andl
dec
mov
icebp
cs
pop
dec
or
sbb
push
in
flds
mov
and
jmp
aas
orb
shl
and
add
idiv
mov
hlt
xor
aam
sub
test
xchg
mov
mov
scas
push
xor
xchg
imul
and
cwtl
adc
mov
icebp
add
inc
mov
cwtl
enter
movsl
dec
clc
adc
cmp
cmp
jg
sub
or
lcall
and
inc
adc
fdivl
add
into
cmp
jl
pop
sub
bound
dec
test
ja
add
add
rcll
insl
sarb
and
jg
adc
repz
pusha
push
dec
lds
jg
or
shlb
scas
sub
pop
cwtl
adc
jns
push
push
clc
lock
push
mov
test
jne
pop
aam
mov
push
clc
mov
imul
xchg
jae
xor
push
add
cwtl
jp
push
push
fnsave
aad
pop
and
push
pop
adc
movsl
mov
jmp
mov
pop
movb
test
test
push
xor
mov
pop
mov
adc
enter
outsl
aam
sbb
adc
cmp
pop
or
xor
cmc
decb
xchg
xor
pop
incl
or
push
icebp
mov
xchg
repnz
cmpsl
push
sub
stos
dec
psubusb
pop
cmc
fwait
cmp
push
adc
ret
inc
mov
movsl
lea
mov
sbb
add
or
jge
mov
or
fxtract
or
push
pop
pop
cmpsl
pop
movsb
lods
and
inc
push
mov
xchg
enter
shll
and
xchg
pop
cs
xor
subl
adc
addr16
pop
je
popf
test
cmp
xchg
xchg
mov
jb
mov
mov
jl
adc
aaa
data16
jmp
and
pushf
mov
or
scas
adc
outsb
enter
lcall
gs
into
cmp
add
rcr
roll
pop
or
lea
mov
mov
xchg
fsts
jmp
arpl
or
push
lcall
movsl
dec
mov
add
stos
and
flds
test
mov
dec
cltd
dec
and
das
adc
jne
dec
xorl
dec
loope
pusha
add
dec
xchg
and
inc
pop
xchg
les
mov
mov
aad
scas
lds
xchg
dec
das
push
xchg
push
adc
test
or
xchg
inc
add
cld
fldt
sbb
test
cwtl
int3
push
decl
repnz
repnz
push
mov
movsl
add
xchg
testl
fistpll
mov
push
ja
add
pop
mov
inc
push
add
cs
jp
lea
xor
sub
sbb
push
enter
adc
push
or
in
cld
jne
and
cmpsl
nop
sbb
and
fidivs
mov
cmc
imul
das
mov
inc
inc
ret
inc
fsubl
push
jne
adc
test
add
adc
xor
lods
fs
push
fmul
andl
repz
leave
mov
fsts
push
movsb
pusha
dec
cmp
mov
test
cmp
enter
pop
cmp
mov
and
pop
sbb
imul
fmul
lea
mov
sub
jp
ss
subl
jle
or
and
movsl
dec
test
in
sti
push
add
imul
movsb
push
and
pop
or
and
mov
insb
ficomps
not
or
and
loopne
cs
pop
adc
push
jmp
out
dec
sub
std
xor
shlb
cmp
lret
cs
jae
pop
xor
pop
daa
mov
pop
add
pushl
cs
fists
clc
clc
sub
inc
or
or
lods
into
cs
sbbl
mov
fmul
add
xchg
dec
sti
xor
aas
std
and
icebp
rorb
outsl
xlat
out
add
ljmp
es
mov
inc
out
or
or
mov
sbb
jae
pop
xchg
fstpl
sub
addb
dec
inc
inc
mov
xor
push
or
dec
push
mov
pop
repz
movsl
pop
repz
add
add
adc
int3
out
gs
mov
mov
cmp
adc
cmp
cmpsb
sbb
enter
lods
adc
in
inc
xchg
sarl
add
loope
or
jmp
inc
call
add
daa
sarl
adc
cltd
cmp
sub
mov
sbbb
in
mov
pop
movsb
ret
test
pop
out
push
adc
jge
stos
inc
fs
fmull
loopne
aam
rolb
clc
sub
push
xor
je
or
add
inc
jmp
push
push
pop
mov
add
clc
or
int
jb
or
cmp
jl
or
jg
xchg
mov
cmp
lret
enter
subb
push
stc
adc
aad
fisubs
fsubs
cmpsl
cld
ret
dec
sub
lock
add
and
cmp
or
rclb
inc
scas
and
and
inc
jle
or
pop
cmp
stos
popl
push
aas
sahf
dec
adc
add
push
mov
test
adc
and
jecxz
pop
popf
popl
mov
ret
std
cmp
popa
test
fs
sub
jg
inc
pop
repnz
sbb
aas
les
xorb
xor
pop
xchg
push
clc
xchg
mov
test
mov
or
jne
out
popf
adc
push
cmp
or
lea
mov
test
mov
inc
mov
stos
add
cmp
das
xor
outsb
push
test
jmp
push
lea
and
push
cwtl
movb
mov
add
push
jmp
gs
push
add
mulb
mov
jmp
mov
fsubrl
pop
dec
test
rcll
shlb
mov
fnclex
adc
cld
and
loope
sbbl
pop
cmpsl
add
or
inc
sbb
daa
sub
outsl
adc
sub
imulb
call
xor
cmp
jg
pushf
mov
jne
in
aam
sbb
pop
dec
loopne
dec
stc
imul
sbb
pop
cmp
add
add
imul
mov
jg
rclb
jmp
pop
add
divb
shlb
or
push
sub
sub
mov
jge
insb
add
cmp
jne
adc
or
push
sub
sbb
popa
and
cmp
scas
sub
insb
xor
enter
pusha
xor
mov
ds
add
inc
xlat
xor
sbb
testb
stos
jp
and
sti
jmp
jb
loope
notb
enter
adc
push
or
or
fcomps
cmp
mov
data16
or
adc
pop
out
inc
shrl
lds
out
jne
add
lock
dec
movsl
xchg
and
cwtl
loop
push
xchg
ja
enter
movsb
mov
and
add
leave
push
mov
in
out
mov
adc
and
dec
jmp
in
and
and
sti
and
leave
sar
add
jmp
rorb
cwtl
shlb
rcrl
sub
sti
das
adc
or
or
add
or
or
sub
cmp
fdiv
lods
add
idiv
sub
pop
pop
push
inc
mov
je
subl
adc
sub
or
adc
and
daa
roll
in
push
ljmp
push
iret
add
jmp
adc
xchg
out
or
lock
or
subb
dec
pop
jge
dec
mov
in
mov
jo
add
movswl
sbbl
add
jge
aas
jb
adc
in
or
in
pop
mov
fstps
add
xor
xchg
insl
add
jg
addr16
loop
and
or
pop
inc
inc
jne
adc
jp
mov
test
push
and
mov
sbb
pop
jne
rcrb
pop
notl
and
mov
ss
dec
and
xchg
sbb
dec
jge
cmp
rorb
fcmovb
test
add
or
or
lret
xlat
add
add
test
push
add
adc
dec
cld
mov
lea
jl
xor
shll
lea
sub
inc
and
inc
sbb
sub
sub
mov
stos
push
add
test
xor
add
cld
insl
cltd
hlt
pop
fldenv
add
xor
push
jmp
push
aas
cmp
pop
cmp
ljmp
mov
jns
stc
ficompl
and
lcall
jmp
cmpl
dec
in
and
mov
and
or
pop
jmp
jbe
mov
leave
and
pop
aas
data16
dec
mov
out
in
inc
or
stc
mov
clc
and
enter
out
xor
and
adc
xchg
or
je
les
sar
mov
aas
ja
add
jmp
fildl
dec
popa
adc
sarl
adc
inc
test
cmp
in
xchg
pop
sbb
test
inc
test
clc
push
test
push
adcb
addr16
cmp
push
add
mov
out
mov
cld
and
add
add
cmpl
jle
test
rorb
in
mov
cmp
call
outsl
xor
rcrl
cld
xor
push
push
pushl
inc
or
xor
insl
hlt
dec
cli
add
jne
xor
gs
pushf
addl
xchg
popa
mov
and
adc
sbb
cwtl
or
stos
add
cmp
aam
mov
push
or
cmp
mov
jl
dec
loope
jmp
dec
dec
pop
sbb
dec
in
jns
dec
cmp
mov
jnp
incl
cmp
xor
sub
gs
ret
and
inc
sbb
out
mov
jnp
push
jmp
lea
jecxz
hlt
cli
loop
sbb
fimuls
sbb
dec
dec
cmpsl
or
ret
mov
push
adc
in
push
push
test
jmp
ss
inc
ljmp
cs
int
or
sub
cs
add
xor
jmp
cmp
xchg
imul
sub
pushf
cmc
pop
or
and
add
inc
push
push
adc
mov
jecxz
pop
cmp
je
lea
ja
xchg
xor
daa
mov
jge
movsl
test
mov
testb
enter
ret
lods
lods
pop
jmp
or
or
icebp
sub
add
inc
xchg
push
mov
lods
lea
scas
add
rclb
popa
push
out
mov
les
hlt
push
xor
mov
mov
add
movsb
mov
aad
in
add
mov
pop
sub
mov
mov
repnz
mov
test
aam
sbb
in
insl
push
jns
add
movl
test
fs
bound
std
in
leave
mov
add
adc
insb
push
arpl
cmp
or
outsb
cmp
adc
in
pusha
aad
addr16
add
aam
add
test
sbb
xor
add
mov
lods
jecxz
fadds
xor
filds
or
cmp
fnstcw
cmp
ficoms
inc
xlat
enter
add
and
mov
push
cltd
xchg
mov
cmp
or
and
or
das
adc
stos
add
data16
add
jbe
jno
add
adc
out
mov
test
push
movsl
in
add
mov
xor
lods
test
test
xchg
sbb
or
insl
add
xchg
insb
fs
add
out
push
imul
popa
rcrb
xor
test
pslld
xchg
push
mov
roll
or
movb
mov
push
jmp
mov
mov
frstor
sub
roll
mov
aam
pop
popa
mov
dec
into
xchg
sbb
je
mov
aam
inc
movsl
fisttps
xchg
fadds
sti
hlt
add
push
imul
inc
mov
sarb
sub
add
xor
or
fnstsw
add
daa
adc
or
mov
and
mov
outsl
inc
or
mov
in
into
push
stc
ficomps
push
leave
fldcw
and
xlat
add
pop
cmp
call
mov
jbe
cmpb
lcall
mov
cmp
push
ljmp
fildl
add
fdivl
or
test
cmp
push
or
jp
iret
push
in
decl
xchg
daa
jo
add
mov
pop
jge
rorb
lock
mov
add
incb
ret
pop
push
test
jno
insb
sbb
imul
jbe
aam
loopne
add
adc
dec
frstor
fistpll
mov
pop
aad
mov
call
jle
shll
cmp
fisttps
addr16
add
dec
ss
dec
fisubrl
or
imul
dec
add
pusha
jp
inc
ret
jbe
cmp
push
sbb
outsb
xor
imul
lret
sbb
shrb
ss
add
ja
int3
add
add
das
es
mov
mov
add
sub
mov
cmpsl
add
xlat
ret
shlb
sub
scas
ficomps
cld
add
pushf
mov
xchg
insl
add
add
push
jmp
addr16
jb
jo
add
adc
mov
mov
cmp
mov
or
mov
xchg
or
mov
fdivrl
fstpt
or
xchg
xchg
pusha
icebp
clc
mov
add
sbb
int
mov
mov
jae
add
mov
out
cmpb
push
ud0
cmp
pop
or
adc
scas
clc
jns
and
popa
bound
or
mov
push
addl
ret
cmp
add
pusha
rorb
imul
ds
push
add
or
add
cmp
aaa
push
lock
mov
inc
jmp
sbb
mov
jns
add
mov
add
add
xlat
int
push
ficoms
fldenv
jp,pn
mov
add
les
sbb
xchg
add
outsl
sub
mov
mov
rcr
pop
out
add
rcll
xchg
pop
mov
xor
jo
leave
pop
add
push
dec
add
cmc
add
add
enter
xor
push
and
cmp
pop
pop
or
aaa
xor
in
sti
ret
test
add
jo
js
mov
aaa
bswap
add
subl
subl
cmp
sti
cmp
pop
addl
inc
inc
cmpsl
orl
push
jmp
scas
fsubp
inc
push
movsl
inc
pop
or
xlat
push
mov
enter
xchg
aas
or
inc
lcall
jae
jb
cmp
ja
fldl
popa
je
jne
mov
sbb
outsb
lods
inc
dec
sbb
dec
xorb
cltd
jle
sub
faddl
and
incl
ret
mov
inc
ret
push
or
xchg
imul
into
fcoms
or
or
push
xor
dec
pop
pushf
mov
inc
jnp
inc
dec
dec
push
or
push
or
xor
cmp
sub
bound
outsl
jmp
sti
repz
clc
push
jo
sub
aaa
push
outsb
outsl
je
ret
or
push
data16
stc
je
sub
sbb
dec
push
sti
in
sbb
sbb
mov
inc
xor
cmp
aam
fiaddl
push
arpl
notb
adc
xor
cld
pop
ficoms
js
das
stos
mov
jg
push
jno
xor
cmp
jo
mov
shll
and
stc
inc
push
test
dec
arpl
lods
sub
and
out
insb
jl
push
xchg
mov
sbb
mov
sbb
pop
push
push
push
adc
cltd
jo
addr16
lods
inc
mov
cwtl
pushf
push
cmp
jle
and
cmp
pop
aas
ljmp
push
mov
push
data16
sub
inc
js
or
sbb
test
sbb
sbbl
stos
aad
inc
sub
push
push
repz
test
jns
sbb
pop
mov
xor
and
mov
inc
cs
cmp
jae
jo
dec
pop
imul
and
inc
gs
cmp
and
pop
iret
jbe
push
fisttpll
sub
xor
push
fs
dec
xchg
mov
inc
into
js
add
and
fistl
inc
loope
inc
xchg
or
or
mov
and
or
or
or
push
cmp
xor
mov
inc
jp
push
pop
dec
inc
xchg
xor
sub
mov
jno
lods
dec
xchg
xchg
jbe
push
pusha
cwtl
int3
icebp
mov
adc
and
dec
cld
mov
adc
dec
inc
fs
adcb
and
dec
scas
xchg
mov
hlt
mov
dec
dec
push
xchg
or
inc
inc
push
jl
xchg
adc
xchg
in
repnz
fldenv
and
cmp
dec
pop
xchg
push
jl
mov
and
dec
aam
out
and
push
or
sbb
sub
xchg
inc
and
adc
mov
or
mov
and
dec
adc
inc
or
xchg
and
dec
adc
push
push
xor
xor
fs
movb
cld
movsb
pop
sub
inc
lahf
fistpll
or
and
jmp
imul
into
mov
adc
sahf
adc
jb
inc
insb
cs
sti
xor
adc
mov
or
xor
stc
jne
in
es
fwait
test
sahf
fs
jo
xlat
adc
inc
gs
je
xor
adc
and
dec
movsl
mov
imul
inc
insb
repz
ret
dec
popa
js
test
push
aam
outsl
push
jne
push
inc
adc
jns
jae
insl
inc
imul
mov
dec
lret
out
hlt
addr16
pushf
imul
xchg
push
in
push
pop
mov
cmpsb
xor
sbb
mov
in
daa
bound
mov
adc
mov
push
jo
push
popa
push
incb
inc
push
push
outsl
dec
dec
test
inc
jns
aaa
sub
fisubrl
mov
mov
js
ljmp
lea
cmpsl
cmp
fwait
lahf
lahf
stos
or
stos
pop
push
shrl
mov
dec
sbb
push
jns
or
rcrb
scas
sub
popa
and
push
mov
lds
dec
dec
dec
inc
test
idiv
and
lds
or
inc
jae
add
xchg
push
dec
pop
dec
xor
or
push
loopne
insb
daa
sub
aam
lret
das
testb
xchg
xchg
lret
mov
cmp
popa
push
test
sub
adcb
aam
lret
push
or
pop
push
inc
dec
or
sarb
orb
jb
add
or
push
mov
sbb
dec
inc
push
dec
push
add
outsb
push
push
js
dec
jo
dec
mov
stos
inc
dec
ss
or
aad
push
ds
js
mov
repz
mov
and
adc
push
mov
imul
mov
cs
pop
inc
dec
or
inc
fdivl
push
push
lods
fiadds
addr16
inc
dec
cli
mov
mov
add
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
pop
andb
test
je
push
call
pop
jmp
xor
jmp
andl
movl
or
pop
pop
pop
pop
ret
push
mov
mov
test
je
test
je
pushl
call
andw
xor
pop
mov
mov
mov
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
.byte
