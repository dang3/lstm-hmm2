imul
or
movsb
jno
jg
daa
rcrl
cmp
add
and
daa
daa
daa
xchg
jecxz
and
cmp
sub
int
stos
jg
add
scas
cs
mov
sbb
roll
dec
les
fistpll
outsl
aas
pop
inc
push
xor
or
mov
fwait
xchg
dec
popf
lahf
add
push
movsb
fs
sub
dec
fildll
imulb
push
iret
adc
cmp
in
inc
and
push
loop
or
mov
inc
movsb
or
jbe
cld
dec
sti
xchg
into
iret
les
loopne
dec
nop
mov
xchg
sahf
dec
mov
in
push
pop
mov
xor
call
dec
sbb
lods
lds
cmp
mov
or
cmp
sub
pop
ss
add
pop
cmp
mov
fldcw
cmp
sub
test
mov
imul
loope
rcrb
or
cwtl
sbb
out
lods
insl
into
sub
pop
enter
mov
ficoml
add
lds
cmp
cld
xor
mov
clc
popf
sub
xchg
fistpll
adc
lock
add
repnz
fnstenv
daa
stos
sub
xchg
cmp
negl
ret
push
rorl
mov
cmpsl
sub
add
inc
dec
popf
insl
test
pop
pop
sub
adc
cmp
mov
addb
out
sbb
push
dec
mov
mov
mov
mov
arpl
movsb
jp
aad
test
and
xchg
daa
popf
mov
jecxz
jl
inc
adc
mov
mov
sub
and
push
cmp
sti
lock
outsb
adc
lret
jg
testl
jmp
mov
in
js
sbb
stos
mov
lahf
xlat
insl
lret
mov
aam
pop
loope
jl
daa
fimull
push
jmp
sbb
xchg
mov
add
inc
mov
iret
mov
lret
jb
movsb
fisttps
mov
pop
repz
pop
insb
ret
jae
xchg
out
xorl
add
mov
popa
movsb
sti
outsb
sbb
inc
scas
mov
in
stc
lret
fbstp
mov
stos
out
adc
fcoml
mov
mov
pop
mov
and
adc
inc
lods
mov
add
fcmovb
stos
cmpsl
sarb
movsb
insb
sub
shlb
cmpb
xchg
insl
mov
popf
pop
out
jb
loope
mov
cmp
out
scas
imul
stos
arpl
push
insl
sahf
cmp
scas
or
cli
add
mov
add
es
test
test
or
mov
sbb
push
dec
sub
into
and
stc
mov
and
repnz
xor
mov
xor
shr
sti
fmulp
shlb
pop
cmp
pop
jmp
aas
in
stos
sbb
aam
popl
loop
add
repnz
lret
cwtl
xchg
jge
jle
sub
fsub
insl
clc
adc
and
outsb
push
adc
mov
jnp
dec
cmp
fdivl
je
in
jmp
hlt
mov
cmp
pop
out
xorb
xor
sub
shrb
xor
pusha
sub
and
dec
xchg
nop
push
std
and
dec
cmp
cmpsl
pop
mov
fwait
cmpsl
xor
in
pusha
mov
xchg
sub
inc
pop
iret
daa
hlt
icebp
lock
fistps
insl
in
mov
sbb
cmp
xor
jp
into
xchg
test
jo
push
lods
pop
lahf
jmp
lcall
pop
arpl
mov
xlat
fsubrs
sub
or
scas
add
es
scas
push
into
xor
jle
filds
scas
mov
cmp
push
lret
sbb
or
xor
bnd
mov
lret
das
mov
es
xchg
int3
xor
pop
push
xchg
stos
and
daa
sbb
in
rcl
xchg
dec
mov
pop
mov
or
mov
xchg
mov
fwait
mov
cmp
lahf
inc
dec
hlt
jns
push
nop
push
shrb
test
xchg
jb
sbb
push
into
add
mov
fstps
mov
mov
lcall
cmp
gs
xor
mov
in
fwait
add
test
mov
push
sub
mov
enter
aaa
xchg
add
xchg
xlat
sub
mov
hlt
test
aaa
aad
lret
cltd
aaa
into
dec
lods
add
fidivs
pop
adc
out
dec
cmp
pop
sbb
mov
cmp
sarb
ja
cmp
jnp
adcl
or
aaa
daa
pushf
push
mov
add
sarb
das
mov
and
cld
cmp
xor
inc
mov
adc
movl
mov
cltd
leave
mov
addb
mov
inc
mov
mull
or
out
push
cmp
lret
lahf
in
jne
daa
sub
push
adc
inc
loop
push
je
jns
mov
xchg
add
les
jmp
cmp
sti
xor
jae
or
or
sub
mov
pop
pop
or
jno
xchg
pop
dec
fcompl
stc
pop
xor
fcompl
ljmp
movsl
pushf
popa
imul
cmp
adc
cmpsl
mov
add
push
lds
xchg
sbb
movsl
into
adc
pop
sbb
sbb
js
sbb
jno
repnz
xlat
sbb
mull
xor
sub
and
in
sub
pop
xlat
outsl
mov
mov
imul
aam
inc
lahf
jae
mov
and
adc
jl
mov
test
xchg
out
lcall
dec
dec
sti
xchg
sub
int
lahf
sub
test
out
pop
sti
cmp
pop
sub
clc
and
xor
mov
xor
out
aaa
rcr
mov
cmp
outsl
xchg
sub
jmp
rcrb
sub
and
cs
mov
test
or
cmp
ljmp
sbb
or
push
adc
sub
scas
mov
and
cwtl
lock
insl
aam
pop
or
lods
in
xor
lods
xchg
dec
push
aas
popf
jge
test
push
sti
push
or
in
lods
clc
pop
inc
fnstcw
cmp
inc
inc
mov
pop
out
pop
out
pop
ret
add
mov
ds
cmp
scas
jne
cmp
sbb
dec
adc
fisttps
call
imul
dec
and
fldl
and
loopne
xchg
cmpsl
aaa
pop
mov
sub
push
add
inc
outsb
sbb
xchg
push
jmp
pop
fcmovbe
jae
fwait
mov
push
jae
dec
out
imul
sub
dec
add
aam
add
out
outsl
lea
xchg
sbb
addr16
out
iret
lods
fdivs
test
adc
jae
insl
lock
push
test
mov
cmp
iret
jle
cmp
cmp
roll
push
js
and
and
pop
add
lahf
push
push
das
cltd
icebp
cmpsl
adc
shlb
les
mov
lahf
or
leave
inc
mov
pop
mov
and
mov
mov
fsubp
mov
add
inc
inc
mov
jle
mov
adc
pop
out
pop
scas
mov
test
pop
pop
add
cmp
jbe
mov
mov
popa
movsb
sub
add
leave
into
ds
loopne
cmp
or
xor
add
ret
icebp
sarb
clc
fwait
popf
cmp
xchg
test
xor
in
je
xchg
jnp
les
sub
jbe
ds
mov
pop
in
rcll
mov
out
loopne,pt
and
lcall
lea
adc
cmp
outsl
and
rorb
fwait
pop
cmp
jge
xchg
into
stc
mov
fidivs
das
mov
lret
daa
xchg
add
push
mov
lahf
mov
stos
jle
sti
pop
fistpl
mov
pop
pop
incb
aas
cmp
mov
or
and
in
fwait
pusha
ret
je
mov
xor
shrd
mov
add
mov
insb
cmp
mov
cmp
fisubs
jg
fnstsw
lretw
daa
nop
push
enter
iret
orb
xor
inc
or
hlt
aas
adc
sub
jb
mov
mov
out
in
mov
aas
cmp
pop
adc
test
mov
add
in
daa
sub
enter
hlt
fs
in
gs
and
xchg
outsl
adc
imul
lods
in
mov
shlb
cmp
mov
mov
jl
jb
xor
pop
imul
cmp
mov
inc
push
outsb
les
cmpsb
cmp
dec
out
nop
fmulp
mov
ror
xor
leave
arpl
lahf
and
cs
cmpsb
push
lcall
aad
cmpsb
jnp
inc
inc
xchg
push
aaa
mov
push
dec
pop
iret
xor
mov
or
mov
xchg
sbb
mov
daa
in
pop
jge
stos
out
dec
and
in
xor
mov
sub
movsb
enter
xchg
mov
pop
xchg
into
cmp
mov
out
inc
jmp
inc
es
iret
in
cmp
cmp
js
xchg
sub
mov
in
mov
cwtl
shlb
outsb
xor
lahf
adc
stc
pop
loop
inc
jp
jp
xor
sbb
es
dec
pop
neg
call
pop
xlat
sbb
shrb
int3
mov
pop
mov
outsb
imull
mov
sub
cpuid
pop
in
push
popa
sahf
mov
outsl
push
nop
mov
movsb
shlb
mov
pop
filds
aas
test
lret
add
and
test
cmp
dec
or
cmpb
mov
mov
xchg
clc
mov
das
out
xor
dec
pushf
cmp
push
sub
or
sbb
popf
outsb
xchg
inc
aas
inc
testl
pusha
insb
bnd
mov
add
aaa
or
sahf
aad
dec
clc
outsb
adc
sarb
xchg
xor
add
fildll
mov
and
push
repnz
movsl
and
or
mov
jns
and
and
or
sahf
cmpsl
mov
in
arpl
das
pop
or
sub
lods
and
pushf
outsb
mov
dec
and
dec
enter
es
cmp
add
test
pop
mov
lahf
mov
xchg
loope
mov
push
cmp
or
dec
sub
into
iret
xadd
test
pop
xchg
scas
scas
scas
push
loopne
cmp
sub
pop
jae
daa
add
and
sti
mov
and
mov
jge
cmpsb
mov
mov
fs
adc
sbb
rcrl
xchg
push
incb
jno
push
es
mov
test
rclb
push
shlb
push
sub
mov
pusha
ror
add
scas
gs
pop
cmovs
mov
test
shr
js
mov
xorb
sbb
clc
iret
jge
aaa
push
iret
imul
out
dec
dec
mov
mov
cvtpi2ps
sub
push
pusha
cmpsb
xchg
xor
inc
sub
lods
shr
cmp
mov
jecxz
mov
push
pop
mov
jne
push
adc
push
adc
pop
xchg
cwtl
lret
jp
inc
and
jne
push
lock
push
mov
imul
inc
repz
je
sub
lds
fdivrl
add
xor
adc
push
lea
add
test
loope
jl
jg
call
push
mov
pop
cmp
xchg
inc
daa
test
movsb
dec
dec
ror
lods
lods
sbb
fmull
in
xor
mov
cwtl
cmpsl
jbe
jnp
xor
dec
inc
cmp
lods
and
jo
test
fs
mov
add
arpl
push
mov
inc
mov
aam
loop
lds
imul
ja
cmp
or
and
pop
xchg
aas
pusha
mov
cmpsb
pop
scas
aas
push
testl
out
cmp
mov
sub
lods
inc
sub
add
mov
fistl
mov
push
cmpsb
mov
in
shll
ds
cmpl
insb
inc
and
mov
jge
cmp
enter
mov
mov
pushl
aas
nop
outsb
rclb
mov
jge
add
add
xchg
pop
mov
repz
xor
punpckhwd
jae
jns
dec
in
out
mov
and
out
aam
adc
sbbl
aam
or
xchg
mov
stos
mov
in
and
or
adc
rclb
outsl
sub
int
cmp
les
adc
insb
mov
pushf
xchg
icebp
test
mov
test
fimull
test
cwtl
push
push
fldenv
scas
aas
pop
inc
ret
xchg
mov
mov
lahf
jle
inc
xor
int
mov
lds
xchg
cmp
ficoml
insb
pop
pusha
jmp
jecxz
mov
and
xchg
das
or
pop
int3
test
jl
lods
push
push
cmpsl
mov
or
xchg
jbe
xor
mov
push
inc
outsl
jae
lea
inc
and
ss
jle
out
mov
cs
xchg
mov
sub
add
mov
and
fxch
in
fcomps
push
cmpsb
jle
push
dec
stc
cwtl
fistpl
or
or
test
sub
dec
inc
pop
loope
sahf
nop
sbb
mov
mulb
lods
mov
shlb
fnstcw
jle
lock
mov
pop
xlat
xorb
pop
jl
jnp
pop
jo
jl
sub
add
xchg
hlt
mov
mov
int3
daa
daa
mov
daa
sub
loop
mov
mov
mov
mov
popa
nop
mov
scas
jl
shll
out
xor
cmp
fadd
pop
mov
mov
jnp
stc
and
and
mov
cmp
dec
cmpb
mov
cmpsb
loopne
xchg
nop
repnz
jne
cmpsl
xor
addr16
aam
xchg
mov
and
cwtl
xchg
scas
jnp
pop
mov
inc
fs
cmp
jge
bound
pop
jl
push
jae
sahf
bound
push
stos
mov
decb
cmp
out
sbb
divb
mov
leave
ficompl
and
and
mov
pop
fildl
negl
mov
iret
ljmp
or
loopne
sub
lds
sbb
pop
js
js
lock
push
jg
mov
pushf
lock
arpl
dec
dec
arpl
xchg
imul
cmp
test
pop
dec
ja
rclb
add
int3
call
movsb
dec
lods
stos
jmp
xor
outsl
std
jne
xchg
outsl
cmpsl
jbe
and
jecxz
es
adc
sub
mov
pop
jl
or
mov
adc
jbe
test
inc
cmp
in
ja
push
je
mov
insb
adc
mov
mov
in
fcmovne
aaa
cli
lods
js
push
or
or
or
test
or
loopne
jmp
push
dec
subb
into
cs
stos
dec
cmp
sbb
mov
xor
sub
sbb
ret
nop
xchg
cltd
cmpsb
orl
pushf
cli
cmp
jo
inc
inc
dec
mov
lcall
and
nop
daa
orl
push
cwtl
mov
jg
fisttps
mov
in
dec
loop
xor
out
roll
sti
jmp
in
jecxz
lret
data16
mov
insb
in
ljmp
mov
movsl
pop
pop
repz
mov
dec
dec
and
xchg
les
adc
flds
cmpsb
xor
icebp
jge
nop
push
cmpsb
pop
sub
aam
arpl
cmp
and
das
enter
insl
jge
cmp
or
pop
sti
enter
dec
xchg
inc
push
mov
out
loope
lret
sbb
ljmp
jp
rcrb
in
pusha
pop
pop
das
pop
scas
cmc
sti
inc
out
and
pop
pusha
mov
pop
xchg
stc
bound
add
cmp
cltd
pop
push
and
inc
sub
jp
jg
and
sarb
in
inc
jp
or
fldt
adc
js
push
shrl
out
cmp
lret
mov
jno
cmp
dec
pop
inc
dec
mov
push
sar
mov
jmp
jbe
push
push
sub
movb
add
push
je
mov
inc
stos
sbb
xchg
mov
and
lret
pop
es
xor
out
loopne
andl
mov
sub
add
sarl
mov
sbb
enter
stc
or
jge
pusha
fildl
inc
daa
popa
mov
jae
mov
push
jg
test
lods
push
out
add
cwtl
push
mov
jno
pop
pmaxsw
mov
iret
rcrl
jmp
mov
cmp
cli
jno
pop
scas
nop
fidivs
cmp
add
fldcw
loopne
fiadds
adc
pop
cwtl
inc
cwtl
sub
pop
movsb
mov
aam
cmp
mov
iret
cmpb
test
int
push
loopne
push
js
ja,pt
ss
insb
aam
movsl
mov
cmp
out
insb
jl
ret
inc
pop
aas
aam
adc
pusha
out
dec
mov
lcall
sahf
in
jg
mov
push
sub
divl
adc
adc
out
mov
mov
pop
xlat
aas
in
fimuls
stc
dec
insb
or
jecxz
cmp
dec
or
das
dec
pop
int
ret
push
mov
lahf
imul
in
fwait
jecxz
ds
mov
cmp
jae
hlt
jbe
data16
jl
imul
icebp
ret
in
js
scas
adc
xchg
inc
mov
mov
sbb
pushf
lcall
xchg
pusha
xor
cltd
adc
xchg
lret
adc
imul
cld
rol
outsb
sub
jge,pt
ja
arpl
repz
push
scas
mov
xor
loope
sbb
push
mov
scas
adc
inc
xchg
xchg
cmp
mov
xchg
fstps
xor
sub
inc
mov
xchg
enter
add
cs
lahf
mov
xchg
cmpsb
lret
movsb
int
xchg
and
ja
push
sub
popa
fs
dec
jns
rep
mov
lods
mov
ljmp
pop
outsb
das
insb
out
cmp
arpl
cwtl
push
daa
adc
jmp
and
sbb
lahf
mov
and
inc
fsubrs
jl
popa
outsl
cmp
repz
fisttps
mov
into
insb
movsb
mov
jecxz
and
dec
ret
xor
or
in
arpl
lods
dec
ret
cltd
inc
mov
das
mov
jp
movsb
inc
bound
push
xor
inc
into
ret
jl
xlat
out
add
das
movl
xchg
or
cmp
scas
lea
push
in
insl
pusha
jne
mov
mov
sbb
pop
pushf
jg
es
ficompl
xchg
arpl
lcall
xchg
add
outsl
lcall
imul
aad
cmpsl
insl
call
lret
xor
lds
into
or
stc
pop
dec
leave
fsubrl
push
inc
push
push
test
sbb
lds
shlb
insl
nop
ljmp
mov
lret
mov
jg
int3
scas
mov
and
scas
mov
daa
out
xchg
sbb
lret
and
mov
int3
test
mov
xor
scas
insb
jge
and
dec
push
xor
and
pop
sbb
pop
roll
add
xor
and
adc
or
in
add
mov
imull
mov
jo
push
ret
pop
idivb
xchg
fstpt
jl
aas
xlat
aad
jno
pop
clc
push
lahf
jg
mov
nop
dec
mov
push
test
inc
addl
inc
jnp
ljmp
adcl
adc
popf
rcrb
test
test
xor
addr16
inc
mov
insl
mov
fwait
jg
jl
rcl
dec
icebp
and
dec
shll
xchg
inc
clc
lret
inc
sub
mov
inc
lret
sub
xchg
mov
lahf
sahf
outsb
jo
inc
roll
jo
xchg
es
and
mov
dec
inc
cmp
imul
loope
out
adcb
lcall
into
and
xor
ret
pushf
xchg
outsb
cmp
das
lret
or
fwait
pushf
int3
adc
call
idivl
mov
sbb
mov
daa
add
subl
dec
rclb
scas
scas
mov
int3
test
out
outsl
insl
and
mov
add
inc
jns
sub
jb
test
lcall
test
push
xor
cwtl
rclb
jg
pushf
dec
cmp
scas
in
cmc
repz
mov
add
ljmp
jl
inc
mov
stc
push
xchg
test
sub
mov
es
outsb
cli
cmp
test
out
xchg
movsb
notb
nop
fistps
les
mov
pushf
packssdw
mov
mov
fldl
int3
xor
inc
mov
enter
stos
in
cli
das
pop
out
loop
cltd
pop
arpl
push
out
sbb
int3
movsb
xchg
sub
mov
cmp
in
xchg
ss
ljmp
dec
ds
adc
les
inc
jle
daa
nop
neg
iret
mov
add
movsl
inc
cs
mov
inc
dec
mov
aaa
cmp
fistps
pop
xchg
repz
fcompl
pop
call
lcall
aas
scas
nop
out
push
jmp
fldcw
aas
pushf
jns
sahf
or
loopne
cmp
mov
inc
xor
xchg
dec
ss
cmp
cmp
and
xor
push
aas
inc
daa
mov
flds
idivl
rcl
mov
and
test
xor
pop
fnstenv
add
ja
xor
xor
adc
sub
dec
lock
rol
leave
in
gs
cmpsl
mov
inc
jmp
jg
inc
jb
sbb
mov
int
sub
cs
sbb
cmp
inc
pop
loopne
jbe
sub
adc
add
cmpsl
dec
mov
filds
ret
movsb
mov
mov
cwtl
add
xlat
inc
inc
and
shll
lea
flds
sbb
ss
movsb
xor
arpl
inc
lods
cmpsl
nop
xor
jno
iret
xchg
bound
dec
cmpsl
push
out
and
iret
mov
cmp
jns
sub
pop
jnp
xor
test
sub
xchg
sub
rcl
add
fsubs
xor
mov
out
dec
jnp
inc
push
cmp
lret
sub
push
inc
repz
pop
push
arpl
mov
xor
jb
and
nop
mov
cmpsb
sub
adc
jmp
pushf
pop
push
out
ja
cmp
dec
test
cmp
cmpsb
andl
sbb
cmp
jl
mov
lret
sbb
pop
xchg
jnp
jg
test
jns
mov
push
cmc
pusha
inc
inc
incl
push
gs
push
add
inc
adc
or
aas
jno
xchg
fbstp
inc
ds
xlat
mov
cmp
xlat
mov
test
or
movsl
pop
stos
push
enter
sub
mov
testb
pushf
dec
push
fwait
jno
cmc
adc
mov
inc
and
mov
inc
pop
ret
loope
ror
push
ljmp
pop
cmp
lods
xor
inc
rorb
fsubrp
mov
je
mov
fs
jp
dec
mov
xchg
xor
aad
daa
test
sub
or
jb
call
jns
cmp
add
push
iret
scas
lcall
ja
fidivs
lea
sub
cmp
arpl
jle
mov
cmp
icebp
dec
lock
fldt
arpl
mov
mov
jp
aaa
aas
sub
nop
pop
inc
ds
push
and
clc
add
cwtl
jnp
leave
fsubrl
addb
je
rcl
scas
inc
into
call
push
fidivrs
fwait
jmp
es
in
lods
cmp
das
fcompl
jle
shll
cmp
ja
das
jnp
or
dec
sbb
cmp
dec
sbb
clc
push
and
mov
test
mov
clc
mov
push
aas
rcrb
jl
mov
inc
call
mov
cmpsb
jno
adcl
sbb
add
and
loopne
inc
xchg
dec
lds
jl
add
repz
xchg
xor
jno
xchg
lahf
scas
and
or
cmp
sar
add
shrd
xor
mov
sub
and
xor
push
and
mov
xor
mov
dec
inc
js
testb
sub
xor
scas
sbb
xor
mov
repz
sahf
pop
ds
js
or
sub
dec
insb
adc
mov
cmp
jmp
dec
in
push
and
inc
call
jecxz
or
movsl
test
aam
sub
lea
inc
and
jp
mov
jge
stos
mov
pushw
sub
add
xor
in
hlt
enter
stc
sub
fs
dec
out
movsb
inc
bound
xchg
or
fsubl
test
adc
ret
and
fisttps
pop
add
enter
mov
in
dec
mov
add
and
sub
jb
jbe
jge,pt
and
lods
mov
aam
repz
and
xchg
int3
add
push
mov
xchg
jp
iret
cmpsl
fwait
push
es
scas
scas
lods
push
dec
jb
jne
pushf
xchg
jle
dec
ds
inc
arpl
rol
fisttps
inc
sub
push
pop
in
jecxz
sub
cs
fwait
mov
cmc
adc
outsb
jns
das
mov
add
gs
out
and
int3
sbb
mov
sub
mov
imul
mov
push
xacquire
cmp
test
pop
adc
dec
sub
xor
rol
dec
int3
das
jle
mov
jl
sub
dec
add
push
test
mov
cmp
add
jge
into
fnsave
push
xor
les
cld
out
call
mov
scas
sub
leave
xchg
loop
cmp
loopne
and
mov
pop
inc
frstor
cld
es
push
fsub
xor
push
gs
mov
dec
out
lret
call
jnp
sahf
jp
jae
das
add
int
dec
mov
add
cmp
rcrb
jg
pushf
inc
popf
fwait
shlb
mov
loopne
addps
cmpb
cltd
fcmovu
popf
mov
insl
lock
sub
cs
aaa
rcrb
es
aas
xchg
pushf
fwait
int
cmpsl
pop
dec
lcall
hlt
push
inc
and
daa
pop
inc
xlat
and
pop
jmp
push
test
sti
mov
movsb
and
sub
xor
repnz
fisttpll
jecxz
outsb
mov
dec
test
aas
aas
and
sub
mov
jmp
loop
dec
xchg
mov
jae
in
popf
dec
leave
mov
push
scas
xchg
or
and
mov
int
lea
and
nop
or
loop
fnstsw
sbb
mov
add
imul
les
out
aas
inc
inc
dec
popa
cmpsb
sub
jg
cmp
mov
xchg
dec
push
push
out
je
mov
aaa
and
sub
jbe
arpl
movsb
mov
push
pop
cmpsl
int3
out
and
cmp
cmpsb
fwait
scas
scas
sbb
push
push
sbb
adc
cmpsb
dec
aam
mov
adc
call
int3
adc
mov
inc
jae
pop
mov
jle
out
mov
js,pt
inc
xor
inc
aam
and
scas
movsl
pop
add
pop
lea
aam
icebp
pop
test
cmc
mov
lods
sub
clc
or
rcr
push
in
int
xchg
push
mov
subb
sbb
leave
out
pusha
adc
ds
sbb
bound
push
and
xchg
inc
adc
mov
xchg
push
and
int3
mov
je
sti
dec
gs
movb
add
int
add
repz
jmp
mov
pop
cli
pop
inc
leave
or
mov
cmpb
imul
orb
pop
add
mov
fbld
mov
ljmp
dec
xchg
int
ficomps
in
enter
hlt
ret
insb
cmpsb
inc
inc
inc
xchg
jb
call
jle
mov
mov
mov
push
aam
or
sahf
or
roll
mov
loope
test
aas
sub
and
cmp
out
dec
lds
mov
and
ret
xchg
sub
push
dec
mov
dec
in
jb
dec
hlt
test
js
ljmp
lock
scas
xchg
mov
sarl
add
or
iret
call
dec
mov
mov
stc
mov
je
gs
jl
xchg
xlat
inc
push
mov
bound
in
jle
cld
pop
or
cmp
pop
push
test
movsl
inc
or
pop
inc
mov
repz
cmp
mov
cld
cmp
push
dec
gs
xor
inc
aad
pop
push
dec
popw
sti
adc
push
push
mov
mov
fs
pop
testl
pop
mov
xchg
add
xor
sub
push
jae
fdivs
outsl
stos
mov
mov
fwait
cmovnp
out
inc
pop
or
mov
fs
push
dec
mov
push
jnp
imul
xor
fwait
rorl
cmp
outsl
and
cmp
inc
pusha
mov
mov
add
add
mov
roll
fbstp
adc
add
add
pop
mov
sbb
jo
mov
dec
push
mov
dec
mov
pop
dec
gs
scas
sub
jecxz
jle
or
cld
shl
adc
push
loope
subl
mov
je
inc
addr16
cmpsb
ret
xchg
sub
mov
sbbb
sahf
pop
fcomps
mov
xor
pop
dec
int3
xchg
jb
jge
test
push
aas
fstps
imul
ficoms
sub
loope
ror
jge
js
lahf
sbb
jbe
mov
adc
mov
lods
mov
jae
jmp
mov
out
arpl
out
nop
cmp
push
movsb
push
out
dec
cmp
inc
and
repz
ds
jp
jo
repnz
mov
and
mov
lret
stos
iret
sub
xchg
imul
adc
leave
xor
outsl
xor
stos
cmpsl
dec
dec
mov
xchg
mov
inc
push
nop
fisttpll
and
cld
fldl
jl
inc
and
movsb
xchg
mov
mov
pop
xchg
out
xchg
sub
sti
adc
outsb
push
std
sbb
pop
scas
cmp
mov
xor
mov
jb
sbb
test
and
push
lcall
add
push
mov
mov
dec
sub
mov
loop
push
xchg
out
popa
aaa
jge
or
repnz
add
push
shrl
in
call
pop
loopne
dec
in
sub
iret
int3
adc
insb
test
sbb
ss
fildl
xor
sub
push
push
jae
sub
inc
push
jl
adc
stos
iret
ss
imul
cmpsl
jl
cmpsb
repnz
and
mov
arpl
adc
sti
pop
mov
jecxz
push
ret
pop
out
insb
and
aas
jmp
lret
inc
mov
cs
sub
lahf
addr16
mov
add
inc
adc
sub
cmc
pop
cmc
mov
or
leave
cmpsl
and
mov
lea
xor
hlt
cltd
popa
fadds
cld
fwait
push
cmp
jo
jle
fidivrs
add
repz
push
push
loopne
andl
dec
test
shr
jmp
cmc
pop
add
test
aas
cmp
sbb
sub
sbb
pop
sbb
ret
and
cmp
ret
mov
rorl
jne
popa
push
jo
push
sub
pop
scas
jge
mov
xor
cwtl
jns
pop
arpl
insb
pop
in
out
cmp
call
aaa
add
mov
fimull
cld
cmpb
adc
dec
lods
jno
scas
xchg
sbb
div
call
sbbl
out
inc
test
lods
xor
and
mov
aaa
addr16
sbb
jle
inc
adc
pusha
inc
dec
ja
jl
dec
cli
mov
jnp
push
xchg
pushf
mov
mov
nop
pop
mov
jle
test
aas
push
push
mov
xor
ja
cmp
or
mov
and
add
movsb
aaa
iret
mov
sub
push
push
enter
mov
gs
sti
xchg
in
jbe
dec
cmp
and
repnz
add
adc
xchg
xor
pop
jnp
adc
and
sub
cmp
inc
xchg
or
and
addr16
sub
xor
push
insb
das
popf
loop
pop
xor
inc
mov
fwait
rcr
mov
sti
mov
pop
rcrb
pop
cmp
call
popf
js
mov
or
cmpsb
notl
xor
sbb
outsb
movsb
lods
clc
movsl
out
xchg
xor
mov
mov
add
push
jecxz
xchg
rcl
push
and
fnstenv
cmpsl
ss
jl
lock
je
inc
dec
ret
jg
idivb
fdivr
mov
iret
xlat
mov
sahf
sbb
or
loop
mov
xor
jle
lods
sbbl
jl
and
movsb
out
mov
push
mov
out
sub
lcall
xchg
dec
cld
data16
mov
mov
add
cs
mov
xlat
mov
and
jg
jp
adc
pop
lods
cmp
push
cmpsb
and
cld
ljmp
lods
mov
xor
jnp
lock
in
cwtl
push
ffree
fs
popf
movb
xchg
fdiv
and
js
test
sbb
adc
test
cmpl
sub
repnz
int
clc
mov
bound
mov
xchg
push
mov
cmp
fcompl
add
gs
xor
push
jp
mov
nop
pop
dec
pop
xor
pop
jns
sbb
les
pop
pushf
lods
shlb
fildll
xchg
adc
ds
inc
cmpl
xor
les
push
out
lret
pop
movsl
addb
lods
pushf
jp
js
mov
or
xchg
ljmp
lds
sahf
imul
outsb
pop
stos
pop
fwait
pop
mov
fsubs
ret
arpl
inc
mov
sbb
popa
pop
add
sub
ret
sbb
inc
mov
and
push
pop
addl
mov
lret
ret
outsl
dec
mov
cmpsb
cmp
in
enter
mov
push
push
stos
cmp
inc
add
push
rcr
fnstcw
jno
inc
sub
sub
mov
dec
and
jno
mov
inc
dec
negb
in
ret
unpcklps
mov
cmpsl
or
pop
cli
jle
cmpsl
pop
push
push
xor
aaa
inc
stos
sub
jle
test
mov
and
jp
into
xchg
stos
stos
xchg
int
push
out
data16
std
nop
test
fdivr
mov
fmul
pop
sahf
mov
arpl
aad
push
aaa
xor
sub
lods
fdiv
negl
cmp
jns
stos
and
xor
jge
fisttpl
jle
push
cltd
cmp
addl
dec
shll
jb
pop
jp
pop
and
in
push
out
mov
inc
adc
or
adc
cmpl
ret
pop
mov
xor
dec
mov
dec
mov
popf
xor
mov
push
or
stos
inc
hlt
lock
ficoms
sub
jo
clc
sub
xchg
pop
ja
frstor
lret
lret
shrb
ds
roll
out
aam
jno
jnp
jecxz
lods
mov
ja
and
mov
cmpsl
adc
mov
mov
pop
push
pop
pop
pop
pushf
cmp
cmp
ljmp
push
jge
xchg
stos
inc
out
jns
pop
repnz
and
jo
jb
insl
test
das
pop
icebp
dec
mov
mov
xchg
mov
push
mov
pop
inc
push
ljmp
adc
mov
daa
and
fs
pop
pop
cltd
push
cmp
push
cwtl
dec
and
dec
sub
xor
jmp
mov
lret
xor
xchg
mov
inc
loop
add
sub
cmpb
incl
and
js
mov
dec
movsl
pop
sbb
aaa
xor
inc
xchg
or
fdivr
dec
pop
pop
sub
mov
jnp
xchg
jno
push
xchg
insb
sub
aam
fiadds
fcmovbe
sub
pop
imul
arpl
int3
hlt
adc
and
push
pop
sub
in
lret
jle
out
cmp
add
enter
push
push
ds
stos
sbb
jmp
xor
outsl
xor
adc
je
jnp
mov
mov
loopne
pop
sbb
mov
leave
jae
mov
cmp
pop
test
jmp
mov
fstpl
jne
sub
ret
daa
mov
mov
mov
mov
add
scas
andl
lret
aas
adc
call
test
dec
ret
adc
add
push
movsb
mov
call
lret
mov
adc
test
cmp
xor
push
pusha
jnp
rcll
add
sbb
adcl
sub
ds
and
pop
test
inc
and
jae
and
sub
fistl
push
xchg
pop
popf
imul
add
lods
pop
fcmove
xchg
mov
fldl
and
insl
ret
jb
js
repnz
insl
dec
and
icebp
test
ret
push
mov
and
and
jae
mov
and
jmp
push
js
insl
add
jecxz
mov
std
jnp
pop
es
loop
mov
jge
add
and
mov
pop
pop
nop
mov
sarl
addb
adc
xchg
lret
les
lods
xor
cmp
mov
fcoml
add
jnp
sbb
pop
dec
fcompl
add
jl
loope
jg
xlat
xor
push
lcall
sbb
push
bound
pushf
mov
jno
lds
adc
push
repnz
cmpb
sti
pop
dec
rolb
scas
pop
mov
dec
scas
mov
pop
mov
jnp
lcall
jp
jp
iret
cmpsl
das
add
in
mov
jp
xchg
jecxz
cli
mov
das
or
dec
mov
outsl
add
mov
mov
mov
stc
and
mov
pop
xchg
dec
dec
mov
cmp
mov
sbb
push
int3
mov
data16
scas
enter
mov
mov
nop
sbb
lea
inc
cmpsb
test
sub
fcomi
xchg
push
aam
and
jbe
and
sar
bound
dec
and
in
sub
repz
mov
adc
xchg
pop
pop
das
mov
loop
dec
inc
mov
push
bound
inc
ds
mov
inc
rcr
stc
cs
xor
mov
ret
mov
ret
out
inc
ret
inc
pop
inc
movsl
dec
dec
insb
pop
push
mov
and
push
xchg
sbb
cmp
mov
scas
sahf
dec
movsl
ds
negl
push
cmp
adcl
cmpsl
xor
xchg
insl
sbb
jge
cmp
call
jp
je
inc
lret
cmp
pop
jno
ds
cmp
adc
nop
stos
xchg
dec
lret
or
cmp
scas
outsl
jecxz
and
sbb
stos
mov
pop
sub
lcall
push
lahf
or
pop
sahf
int3
and
sub
xchg
les
mov
mov
add
js
sbb
push
xchg
sbb
into
jg
ja
iret
test
ljmp
push
adc
movsb
lods
cmp
lcall
iret
fucomp
sahf
lahf
cli
movsb
test
frstor
jae
mov
mov
dec
cmp
and
xor
jecxz
test
mov
loopne
mov
std
mov
icebp
fnsave
test
dec
fsts
cmp
lods
and
imul
pop
jle
pop
push
adc
sbb
sahf
aad
daa
dec
xor
mov
sbb
mov
sub
cmp
jno
sarb
jmp
repnz
incl
ds
testb
cmpsb
cltd
mov
fdivs
hlt
pop
jl
inc
adc
lock
rcr
ss
jmp
dec
test
jo
dec
xor
inc
pop
ja
sub
adc
cmpsl
cmpb
test
jne
xor
cwtl
mov
sub
mov
jl
inc
adc
and
data16
ror
and
ret
and
and
cmpsl
jbe
shll
fidivrs
dec
cmp
std
mov
mov
pop
arpl
add
xor
jmp
inc
cmp
movsb
mov
mov
jl
popf
leave
xchg
sub
popa
stos
ds
sbb
jg
fwait
mov
ljmp
lods
fstps
fidivrl
int3
mov
xchg
dec
sub
pop
sbb
pop
dec
pop
mov
push
pop
test
pop
push
clc
pop
imul
je
cmp
inc
jle
into
idivl
loopne
inc
sub
test
add
repnz
mov
and
dec
xor
ss
dec
test
nop
fldl
add
add
pusha
cwtl
test
pop
mov
mov
xchg
rclb
mov
pop
loopne
fwait
ret
daa
sub
cwtl
shrl
cmp
add
lods
mov
sub
mov
addr16
clc
inc
mov
fadds
in
dec
and
cmpsb
pop
es
faddl
mov
movsb
inc
add
in
xor
jae
aam
xchg
aaa
mov
mov
and
and
mov
inc
push
inc
enter
mov
xor
hlt
jnp
je
in
jge
adc
ret
sbb
adcl
pop
or
xchg
lahf
xchg
nop
sub
mov
xor
popf
mov
fsubrp
jmp
push
mov
fwait
add
sbbl
xorb
cwtl
lods
mov
repnz
icebp
add
movsl
js
mov
test
mov
test
sub
pop
aaa
imul
lds
movsb
test
add
pop
add
js
psraw
xor
xchg
dec
outsl
inc
addr16
pop
push
inc
mov
je
cmp
sahf
pop
cmp
sub
ret
add
xorl
or
cmp
es
ret
pop
sti
or
and
sub
iret
rclb
out
les
cmp
add
dec
and
in
fisttpl
jp
adc
je
xor
es
add
sbb
inc
cs
cld
jne
dec
repnz
sub
clc
movsl
call
sbb
push
arpl
fwait
das
mov
cmc
mov
lahf
xor
das
call
mov
sbb
stc
into
bound
in
jbe
hlt
mov
cmpsl
movsb
outsl
int
and
mov
icebp
xchg
mov
sbb
dec
and
es
enter
lahf
jg
cmp
mov
stc
mov
cli
push
and
adc
cwtl
push
cld
cmp
cli
bound
das
cmc
stc
loopne
mov
cmp
sub
repz
xchg
shrl
iret
xchg
in
lcall
lock
mov
inc
insb
fistpll
mov
jp
jae
mov
clc
and
sub
aaa
out
and
cmpl
loope
and
aad
insl
dec
in
mov
in
pop
inc
jbe
sub
dec
pop
dec
and
xchg
in
adc
jbe
sub
cltd
adc
addb
fs
jns
sbb
dec
clc
lcall
and
sbbb
xor
fidivs
xorl
inc
pop
lods
fwait
mov
out
aam
inc
cwtl
decb
rorb
dec
ret
and
negl
ss
push
scas
mov
rol
jge
push
sub
repnz
ja
scas
sbb
and
movsb
sbb
xchg
xchg
cmp
mov
test
jl
mov
mov
jp
cmp
shr
mov
xorl
dec
jns
add
adc
sbb
mov
jnp
scas
mov
nop
lods
push
jl
test
jge
mov
xchg
lods
out
sub
xor
mov
leave
iret
jmp
test
lret
mov
dec
loop
fcmove
jmp
lock
test
and
cmp
loope
sub
cmpsb
movsb
sbb
arpl
out
sub
nop/reserved
lock
jle
hlt
and
ja
cli
add
pop
cmp
lods
es
adc
push
push
sarl
in
jle
and
popf
idiv
repz
out
inc
dec
sub
fmul
mov
subl
xor
dec
or
nop
mov
jmp
movsb
jb
or
enter
mov
adcl
or
mov
les
dec
pusha
stos
lret
inc
push
add
sub
mov
mov
rclb
movb
std
dec
fidivrl
inc
pop
jns
ds
ret
and
cmp
lahf
pop
xor
ret
sbb
mov
pop
test
ja
xchg
insl
in
mov
sub
and
sub
dec
dec
jl
jl
lods
pop
dec
adc
outsl
cmp
xchg
movsl
mov
mov
cmp
sub
out
popf
test
lods
xchg
call
ds
inc
or
xor
movsb
subl
jb
nop
adcl
or
cmpsb
pop
xchg
shlb
cs
xchg
adcb
outsl
aas
jno
test
dec
ret
and
movsb
dec
sbb
dec
repz
push
stos
imul
mov
add
pushf
xchg
adc
mov
outsb
rorb
shll
sub
pop
or
xorb
repnz
out
or
xchg
and
pop
ja
mov
lods
sub
fdivrl
insl
fisubrs
movsl
mov
jo
adc
lret
js
cmp
mov
popf
mov
inc
cmpsb
fistl
sub
xchg
sub
mov
shr
call
in
andl
test
dec
faddl
inc
icebp
es
mov
arpl
cmc
cmp
or
add
cld
sbb
xor
enter
lods
ret
adc
mov
movsl
add
cmpsl
cmp
lcall
in
mov
cmp
std
mov
jge
cli
pop
imul
pushf
sub
xor
popf
dec
cltd
test
mov
lret
jns
idivl
cld
xchg
cmpsb
adc
enter
cmpsb
fwait
mov
mov
add
dec
pusha
sahf
lea
add
mov
mov
mov
cmpsl
pop
inc
pop
shrb
xor
adc
sub
les
jecxz
sub
movsb
es
in
adc
lahf
ds
mov
imulb
xchg
mov
push
push
pop
mov
aas
mov
enter
inc
outsb
dec
or
cmpsb
mov
adc
jbe
adc
arpl
pop
out
sarl
fldenv
es
out
cmpsb
mov
jb
sub
scas
scas
popa
adc
mov
popa
sbb
jno
mov
push
test
outsl
std
movsl
mov
cmp
jg
push
int
scas
sub
or
repnz
sub
sub
sbb
loopne
sub
push
cwtl
inc
ds
pop
pop
jnp
mov
mov
mov
mov
in
lods
mov
aas
pop
lods
das
mov
or
cmp
dec
dec
stos
xchg
dec
scas
insb
fsts
xchg
inc
and
cmpsb
dec
sbb
fisttps
mov
adc
lret
movsl
mov
adc
dec
fidivs
sub
jo
outsb
aaa
dec
mov
mov
pop
push
gs
in
pop
out
xchg
adcb
mov
repnz
lahf
push
jle
iret
test
mov
mov
pop
mov
js
int3
push
loop
dec
std
or
cmp
mov
in
shrb
mov
rorl
mov
jae
enter
push
mov
sub
xchg
jnp
cs
dec
xchg
xor
js
xchg
mov
push
mov
call
dec
ret
jecxz
push
add
pop
mov
jo
add
dec
test
cmpsl
test
and
and
pop
cmpsb
cmpsl
arpl
insb
leave
fnstsw
xstore-rng
cmpsl
pop
insl
addr16
mov
dec
pop
out
test
dec
popa
jnp
fs
lea
inc
clc
sbb
lods
pop
sub
sub
outsl
mov
and
jno
add
arpl
mov
pushf
dec
sbb
clc
xor
aas
mov
inc
and
adc
pushf
mov
andl
lods
js
add
daa
push
mov
xor
mov
cmpsb
sbbl
leave
add
mov
mov
cmpsl
subb
dec
dec
and
push
jo
pop
push
mov
sub
jecxz
mov
add
movsl
mov
sbb
loope
push
sbb
pop
sub
cli
dec
jg
mov
int
gs
lods
sub
mov
mov
mov
jno
push
fstl
rorl
add
adc
call
cwtl
cmp
pop
dec
jbe
pop
outsb
inc
cmp
int
adc
addr16
in
push
cmp
dec
jb
jmp
fisttpl
cwtl
cld
fneni(8087
mov
aaa
and
repnz
mov
insb
hlt
lea
imul
repnz
xor
fistl
test
repnz
lret
xchg
xor
ret
dec
mov
cmp
jge
mov
mov
inc
mov
xor
out
insb
scas
repz
mov
mov
add
aad
jg
inc
ficomps
shr
or
into
dec
adc
jecxz
imul
push
out
adc
imul
dec
lods
test
ret
aaa
and
xchg
mov
clc
fcmovbe
jnp
dec
lods
aas
gs
test
andl
jmp
outsb
adc
dec
nop
stos
sbb
mov
stos
shr
incb
nop
xchg
mov
mov
scas
add
push
jl
lret
cmpsl
divb
and
in
adc
aaa
push
pop
addl
lret
inc
or
popf
cmpsl
enter
les
adc
call
or
std
test
icebp
inc
mov
jb
mov
cmp
jl
leave
adc
jle
cld
mov
dec
icebp
dec
mov
ret
sub
mov
jl
jge
dec
fs
cmp
test
jne
sbb
xlat
push
and
or
outsb
popa
xchg
dec
xchg
insb
adc
lock
cs
mov
pop
sbb
sbb
stos
or
sarl
mov
dec
xchg
mov
push
add
ret
inc
fwait
movsb
arpl
lds
push
into
insl
out
lret
nopl
enter
xor
and
mov
pusha
xchg
lret
push
ret
or
stos
adc
ret
jo
negl
and
test
test
fistpll
add
mov
mov
dec
ret
dec
or
and
stos
les
mov
in
pusha
mov
or
mov
bts
bound
mov
repnz
lcall
jo
pop
cmp
pop
ss
sub
dec
std
push
mov
pop
push
xchg
jp
ljmp
mov
inc
jo
mov
out
out
lods
scas
nop
jl
mov
adc
insl
pusha
dec
fstl
das
inc
popf
inc
mov
and
push
pushf
das
fdivl
bound
mov
movsb
cmp
mov
mov
push
in
lods
shrb
mov
cmp
repz
cmp
cmp
xor
iret
inc
out
lahf
movsl
inc
leave
addr16
jb
stos
icebp
in
ret
into
popf
xchg
or
push
das
out
mov
lds
cmc
sbb
add
icebp
pop
test
xchg
es
sub
adc
fnstsw
xchg
and
cli
scas
call
mov
inc
loop
js
out
mov
es
nop
ret
fcmovnu
ljmp
dec
dec
dec
lcall
test
cmp
gs
inc
iret
mov
hlt
into
aad
pop
add
bound
sahf
mov
lret
scas
xlat
decb
sti
and
dec
sub
shrl
popf
rorb
push
mov
lret
cmp
dec
ficomps
mov
test
das
mov
stc
out
inc
nop
jno
xor
or
push
pop
sub
cld
aam
mov
jb
daa
sub
xchg
and
stos
mov
adc
bound
sub
addr16
fwait
ds
daa
adc
mov
and
or
or
mov
xchg
sbb
movsb
sub
mov
cmp
out
push
out
or
sahf
pop
inc
test
xchg
movsl
shlb
mov
and
sub
test
cmp
ret
in
int3
add
mov
mov
lea
pop
mov
nop
cmp
jl
lds
push
lahf
sbb
ljmp
add
xor
out
inc
shrb
nop
es
push
xor
shll
js
aaa
aas
lret
scas
adc
in
int3
aad
leave
loope
insl
sub
mov
jae
stos
and
inc
xchg
orb
es
push
packssdw
cmp
jb
mov
mov
sub
cmc
rclb
into
popf
test
push
mov
sub
imul
xor
cmpsb
add
mov
movsb
imul
lods
jne
icebp
cmp
inc
pushf
inc
mov
ss
xor
pop
mov
fwait
pop
pop
mov
lods
jge
outsl
out
jbe
pop
loope
daa
je
stos
data16
in
mov
mov
mov
adc
push
in
adc
jecxz
or
loopne
insb
add
in
lret
mov
aam
pop
or
jge
test
and
fs
cmpsb
push
lods
lret
lods
jecxz
ret
jnp
mov
movsl
cmp
and
inc
mov
push
mov
mov
dec
xor
daa
rcr
jecxz
jno
movsb
mov
xor
xchg
cmpsl
scas
pop
xor
dec
xchg
pop
addr16
sbb
jp
mov
js
sbb
or
jnp
mov
testl
int
int
pop
scas
inc
jmp
and
mov
mov
lock
popf
popf
add
iret
aas
mov
lods
repz
fimull
jge
insb
cs
mov
mov
ja
std
cmp
sub
int
push
popf
mov
push
out
cltd
mov
mov
add
xor
addr16
repz
sbb
cmpsb
dec
dec
jo
into
scas
adc
or
fbld
shlb
inc
movsb
out
icebp
and
dec
ret
mov
and
lret
in
aam
add
adc
jbe
lds
insl
fcomp
enter
filds
mov
enter
sub
cmp
scas
xchg
mov
arpl
sbb
add
xor
ret
jae
outsb
ret
adc
xlat
insb
xchg
cmp
mov
adc
dec
aaa
jp
stos
sub
les
scas
sti
jb
inc
xchg
dec
call
cmp
int
and
inc
mov
sarl
call
mov
test
mov
mov
ror
out
cmp
or
xchg
and
mov
and
push
or
insl
jge
add
cs
and
cwtl
pop
mov
adc
enter
enter
sub
and
add
jns
jecxz
cmp
into
jns
aam
and
and
cmp
outsb
pop
mov
daa
out
adc
cmpb
cmpl
jmp
adc
mov
adc
cwtl
popa
and
fldl
mov
xchg
mov
add
push
dec
icebp
das
repnz
and
mov
push
fsubr
adc
cmp
out
sbb
call
imul
mov
mov
aaa
sub
in
xor
and
jno
imul
sahf
repnz
loopne
xchg
nop
lds
andb
push
adc
mov
into
loope
xchg
fnstcw
test
sub
mov
fcoms
testl
or
stc
cmovle
add
jmp
add
add
sub
mov
nop
dec
test
and
lahf
jno
pop
and
enter
ret
inc
xchg
insb
xchg
idiv
or
cs
and
rclb
clc
add
hlt
push
inc
loope
mov
fbld
daa
negb
pop
add
cs
dec
xor
mov
xor
cwtl
pop
lret
and
scas
insl
cmp
dec
je
mov
xor
dec
cs
push
push
xchg
and
pop
xchg
popf
fdivrs
adc
cmpsb
and
ret
mov
push
push
lret
dec
mov
outsb
jo
push
xchg
bound
lret
mov
jns
xchg
lock
iret
sub
inc
fs
fnstsw
pop
aas
das
jmp
test
push
cwtl
mov
cmp
mov
inc
xchg
and
sar
fwait
push
inc
push
sbb
push
pop
xchg
inc
movzbl
test
outsb
mov
mov
add
les
jl
arpl
dec
pop
mov
mov
jmp
cwtl
je
sarb
mov
sti
je
sub
push
insb
addr16
lret
push
mov
sub
mov
cmc
dec
ret
sahf
ja
push
push
sbb
stos
test
jle
ds
pop
xor
pop
mov
sub
jg
push
cmp
cmp
es
aad
loopne
outsb
inc
sbb
out
jmp
hlt
scas
push
cmp
mov
adc
scas
lods
imull
xor
cmp
popa
xchg
lahf
push
dec
ret
inc
sti
movsb
pop
sbb
mov
push
dec
and
mov
lret
movsb
mov
xchg
cmp
stos
fistpl
pushf
les
sub
aas
push
clc
pushf
scas
cs
xor
and
mov
shrb
dec
dec
jmp
mov
mov
push
lret
mov
lret
sbb
xor
mov
cmp
test
or
in
subb
mov
int3
data16
ljmp
cs
pop
push
or
mov
pushfw
shr
repz
dec
dec
push
jg
push
jmp
xchg
cld
aas
jecxz
out
incl
mov
in
mov
sbb
adc
out
loope
mov
and
and
in
or
lret
push
lret
add
imulb
and
scas
mov
push
test
es
mov
int3
aas
scas
dec
shr
stc
push
and
in
testb
ret
iret
lret
mov
pop
loop
fisttpll
mov
shlb
pushf
xchg
test
jp
jmp
bound
cltd
sub
adc
push
cmp
cmp
sub
dec
movsb
cmp
andl
pop
outsb
into
jecxz
aad
jge
ja
loope
inc
popa
xor
dec
out
shr
jle
cltd
cld
mov
out
add
mov
pop
lahf
push
into
cmpsl
aas
mov
leave
cmp
mov
mov
mov
lea
cmp
clc
subl
sbb
sar
or
daa
aas
lods
push
popf
mov
pop
repz
jnp
jns
in
mov
mov
aad
and
cmc
loopne
add
shll
cmp
sbb
cmp
mov
fsubrp
adc
aaa
or
sbb
push
imul
fildl
adc
int3
ja
fcoms
in
jo
and
xchg
dec
test
fxch
cwtl
and
daa
mov
push
and
sahf
pushf
ja
xchg
pop
stc
jp
in
sbb
push
test
jbe
jnp
jbe
cmc
push
xchg
mov
mov
pop
push
adc
push
jg
lret
sarb
ds
call
aad
sbb
push
sub
inc
pop
mov
pop
lcall
push
pop
pop
mov
scas
cli
leave
fildll
je
lea
xor
and
mov
pop
stos
fnsave
aas
add
icebp
mov
xor
jbe
mov
fnop
push
mov
cmp
mov
cmp
cmp
in
mov
icebp
fs
test
cmp
mov
clc
mov
cs
movsb
sub
pop
std
inc
test
mov
scas
mov
pop
pop
pushf
add
mov
xchg
adc
xorl
mov
cmpsl
sbb
ret
jo
jle
inc
clc
pop
lcall
dec
and
cmp
adc
cmp
aam
xchg
insl
fst
fwait
xchg
inc
mov
push
push
sbb
lock
jle
xor
das
out
and
les
fcom
add
jnp
xor
rolb
xchg
xchg
clc
popf
inc
cwtl
bnd
jno
dec
xchg
dec
ss
dec
mov
ficompl
std
test
mov
jnp
cmp
adc
cmp
das
mov
rorl
lahf
push
mov
icebp
das
inc
lea
xchg
fmul
cmp
out
dec
clc
bound
push
ret
xor
add
aas
in
int
es
xchg
stc
cmp
mov
loopne
fnstcw
xchg
xchg
mov
jle
mov
data16
and
enter
mov
jg
sbb
fwait
shl
pop
cmc
pushf
sbb
mov
outsl
jge
clc
xchg
and
push
dec
scas
in
jp
jecxz
repz
jnp
adc
lahf
cmpl
dec
adc
pop
lahf
push
xchg
loopne
test
mov
les
in
jb
aas
incl
outsb
leave
sbb
cwtl
sbb
rorb
and
and
cmpsb
jo
mov
sub
add
jle
fmulp
sub
jmp
mov
sbbl
sbb
pop
mov
inc
es
test
dec
add
xorb
xchg
and
and
sarb
jbe
add
adc
fistps
leave
pop
add
cmpsl
rcrl
mov
into
mov
mov
fistps
cmp
mov
push
push
adc
xchg
fbstp
mov
into
test
or
xchg
or
or
xchg
inc
sbb
loopne
sbb
adc
and
mov
int3
movsb
movsb
push
jge
xchg
inc
xor
mov
or
push
and
jns
xchg
push
cs
mov
daa
xor
in
enter
jnp
in
mov
out
pushf
add
pop
and
std
aam
jge
fildl
xor
push
dec
dec
sbb
cmp
test
jmp
push
dec
cltd
sbb
nop
lret
addr16
in
mov
dec
insb
inc
pop
and
gs
imul
mov
and
negl
mov
jle
sar
andl
outsl
fsubrl
mov
jl
push
mov
xchg
loopne
daa
add
orb
fwait
loopne
test
push
and
xor
insb
inc
stos
stos
xchg
dec
mov
popa
xchg
daa
push
jo
vmovsd
mov
dec
mov
pop
dec
dec
cmp
and
xchg
call
cmpsl
inc
mov
mov
mov
dec
dec
sub
test
aad
movsb
jns
out
iret
lea
push
sbb
test
sahf
cmp
xchg
aaa
dec
test
lret
les
push
jl
xorb
sbb
xchg
push
ret
dec
std
xlat
testl
mov
lcall
dec
push
inc
dec
mov
add
inc
jnp
push
push
aad
pushf
test
mov
das
adc
int
lds
cmp
cmp
jp
lahf
mov
leave
mov
and
fstpl
ljmp
daa
sbb
sbb
push
arpl
dec
adc
sti
pop
movsl
fists
sbb
daa
push
int3
and
sbb
movntps
add
pushf
leave
cmp
pop
or
inc
loopne
pusha
mov
xchg
mov
lret
push
adc
and
sbb
xor
or
movsb
mov
xor
jmp
inc
or
inc
push
test
sub
jcxz
dec
lock
jg
test
paddusw
sbb
lea
mov
xor
fwait
sbb
mov
cmp
xchg
xor
push
imul
icebp
clc
push
in
cmp
aam
sbb
inc
mov
cltd
ds
or
int3
icebp
andb
inc
dec
repnz
out
jbe
sti
xor
int3
repz
xchg
sarl
cmc
pop
push
mov
int3
arpl
icebp
add
xlat
dec
je
arpl
shlb
adc
xor
xchg
xor
mov
cmove
mov
jp
xchg
inc
jae
cmpsb
jp
fs
mov
movsb
outsl
cmp
adc
sub
or
iret
push
add
cwtl
jmp
fdivs
andb
cmc
xchg
sbb
push
cwtl
xchg
add
stos
xor
or
cmc
push
shlb
mov
lock
mov
push
push
popa
lret
js
ret
icebp
cmpsl
inc
pop
jo
aaa
xor
fwait
jle
mov
dec
jl
pop
sbb
add
inc
lods
and
leave
cmpsl
dec
pop
clc
sub
jmp
int
dec
xor
cmp
mov
push
adc
daa
jno
xchg
jg
mov
and
lret
sub
call
sub
loopne
lcall
inc
mov
mov
mov
call
pop
mov
pusha
pop
xchg
push
ja
insb
out
push
xlat
push
cwtl
sbb
loope
push
mov
sub
add
cmpsl
ror
jnp
int3
push
xchg
scas
jecxz
fcomps
pusha
xchg
out
repnz
in
and
stc
or
icebp
sub
rorb
pop
filds
push
mov
insb
lods
dec
lahf
lock
shl
jns
jl
mov
cmp
inc
sub
dec
rclb
push
xchg
dec
mov
aas
add
adc
add
nop
mov
cld
mov
dec
inc
push
test
ds
test
dec
sbb
inc
sar
cmp
mov
pop
pop
icebp
stos
movsl
mov
xor
mov
into
test
lods
inc
and
dec
jmp
xorl
les
aas
test
or
fs
inc
mov
dec
adc
jbe
jnp
xchg
insb
adc
ja
hlt
addb
fs
xor
arpl
xor
mov
repz
or
sub
or
mov
ja
mov
imul
bound
test
in
addr16
mov
popf
xor
out
jb
pop
xchg
jae
int
add
fs
and
jmp
sbb
pop
cltd
enter
dec
mov
pushl
jmp
loope
sti
xchg
and
outsl
sbb
sub
imul
in
xor
iret
dec
xlat
aaa
xor
jecxz
mov
mov
cmp
and
jne
insb
xor
loope
xor
out
mov
popl
sbb
xor
out
stc
mov
lret
xchg
inc
mov
andl
ror
dec
pop
js
sbb
ret
add
mov
test
mov
hlt
push
cmpsb
enter
push
jl
pop
mov
es
cmpsb
cwtl
mov
ljmp
and
xor
outsb
out
jae
and
movsb
iret
push
cld
gs
cmpsl
push
int
push
scas
cmpl
ret
push
jnp
mov
sub
lcall
mov
loopne
lock
cmp
ljmp
push
mov
sub
in
mov
sbb
mov
or
std
int
add
ret
sub
movsl
xor
js
cmpsb
fnsave
and
sbb
push
imul
cmp
aad
orb
mov
adc
stos
pop
scas
sub
inc
jo
mov
lret
je
xchg
test
jecxz
xlat
fdivrl
sub
ds
adc
bound
les
arpl
sub
dec
cmp
movsl
jg
push
inc
ds
cmp
fnstenv
imul
movsb
xor
mov
das
dec
mov
add
push
and
bound
mov
insl
popa
pop
mov
int3
data16
jp
out
add
popa
dec
rdtsc
popf
daa
scas
insb
jp
loopne
or
cmp
ret
add
movsb
or
or
xor
sub
xchg
mov
sahf
push
js
adc
xchg
and
add
ror
jg
mov
pop
or
inc
pusha
push
nop
mov
push
nop
sub
jl
add
inc
das
dec
and
mov
sbb
sbb
in
pop
push
push
daa
out
and
cmc
nopl
ds
nop
cwtl
das
ret
push
inc
push
daa
pop
dec
insb
xor
out
pushf
pop
push
fptan
mov
stc
fs
mov
idivb
sbb
xchg
cmp
adc
mov
in
lock
lahf
shlb
jg,pn
mov
push
xchg
jp
inc
dec
jnp
sub
aaa
and
insb
mov
leave
imul
outsb
orb
xchg
pop
push
and
sbb
inc
or
into
les
fwait
mov
gs
fldenv
lea
push
ret
jnp
jecxz
pop
sub
insl
mov
mov
in
bound
add
mov
pop
cmp
pop
rorb
xchg
rorl
and
fwait
cltd
iret
test
dec
ss
out
jns
push
mov
fdivrs
loop
jnp
daa
push
fdivr
lea
loope
push
dec
sub
popf
mov
sahf
mov
into
mov
out
push
outsb
mov
xor
sbb
sbb
ret
lret
mov
and
mov
jno
xchg
ja
mov
int
pop
loopne
jno
dec
icebp
inc
jae
inc
lea
xorl
mov
inc
pop
jl
call
xor
jg
sarl
nop
cwtl
lods
dec
dec
jb
je
pop
imul
inc
cmpsb
adc
mov
jecxz
out
subb
je
hlt
outsl
mov
mov
mov
pop
stos
sub
mov
mov
adc
pop
xchg
pop
adcl
jecxz
push
iret
mov
and
xchg
pop
out
xchg
push
and
lods
icebp
addr16
pop
bound
cmp
aam
loope
dec
mov
into
add
movsb
mov
std
inc
push
dec
out
dec
xchg
push
fs
lea
inc
cmp
sbb
jmp
mov
cmp
cmp
fcoms
movsb
xor
jl
cmpsb
mov
sarl
or
es
sbb
test
push
and
ja
mov
jecxz
cmp
cmp
aam
out
and
fdivrl
cmp
sbb
imul
loope
lret
or
imul
aas
clc
xchg
in
cld
fsubrs
push
scas
inc
ja
sub
push
inc
cmc
int3
data16
jb
mov
xor
adc
rcrb
xchg
out
mov
xor
add
sub
dec
push
pop
loope
scas
lods
jo
ret
in
adc
or
mov
loop
sub
sub
icebp
xchg
cli
pushf
dec
lahf
xor
mov
inc
cwtl
xor
sti
pop
add
sti
out
ja
sbb
jge
pushf
mov
sahf
fidivl
inc
outsl
mov
enter
mov
inc
rcrb
and
xchg
cmp
lock
jae
mov
cmpsl
popa
sbb
ja
fucomp
pop
lods
pusha
aaa
mov
inc
pushf
pop
nop
les
jno
aas
cmpsl
sub
sti
pushf
test
mov
lret
cmp
mov
test
fdivl
popf
rcrl
cwtl
jno
loopne
sub
std
cmp
nop
mov
dec
in
pop
sahf
in
mov
sbb
les
push
or
mov
pop
xor
outsl
jecxz
mov
aam
xor
insb
inc
scas
lock
or
push
test
cmp
movaps
jno
lcall
ljmp
push
or
or
adc
mov
mulb
or
jg
mov
sub
push
mov
mov
arpl
sbb
sbb
loope
outsb
fdivrs
movsl
dec
imul
pop
mov
mov
dec
mov
xchg
sub
leave
inc
dec
mov
cli
inc
mov
push
and
xchg
xor
ret
jge
insb
pop
test
inc
test
popf
cmp
inc
adc
hlt
or
outsl
or
mov
or
out
lret
loopne
dec
mov
jbe
cmp
mov
mov
ss
dec
mov
fs
xor
fiaddl
lcall
cmpsl
jns
jle
call
mov
mov
xor
ret
pop
pop
fcoml
call
call
push
sbb
jnp
stos
lret
sbb
xchg
cmp
rorb
xchg
adc
and
clc
sahf
rolb
xchg
jnp
out
xchg
dec
adc
xchg
adc
inc
push
dec
mov
pop
sub
lods
sub
scas
mov
push
inc
test
mov
popa
dec
ds
out
pushf
jp
jg
adc
mov
pushf
mov
stos
or
jmp
cmp
push
sarl
xor
lcall
jns
jg
pop
dec
add
inc
repz
push
inc
mov
cltd
addr16
lock
shl
out
int3
sbb
pop
inc
stos
add
out
je
mov
stos
insl
inc
and
pop
add
mov
in
sub
xchg
xchg
pushf
out
sub
das
xor
add
inc
xor
dec
shlb
out
mov
call
mov
and
mov
jecxz
pop
cli
dec
ds
cmp
mov
mov
cmp
sub
or
sub
mov
inc
push
xchg
ljmp
in
out
add
xchg
sub
fldenv
mov
outsl
jmp
jae
pop
push
or
into
mov
mov
push
movsb
jecxz
aas
sub
cmpsl
jl
dec
add
mov
mov
mov
lcall
sbb
mov
scas
dec
sub
or
popf
clc
mov
pop
sbb
jmp
lahf
jecxz
lock
insl
das
xor
push
jmp
aaa
aaa
cmpsb
in
xchg
ret
sub
mov
xchg
popf
movsb
mov
cmpsl
lea
jbe
mov
aas
xchg
hlt
movsl
shll
mov
lcall
or
sub
aas
inc
push
cltd
roll
js
mov
clc
out
push
je
mov
mov
ja
and
in
jnp
repnz
arpl
inc
clc
stos
aas
in
arpl
jmp
push
and
loope
mov
sub
cli
pusha
pop
cmp
ja
js
rcrb
xchg
push
scas
mov
enter
nop
enter
and
int3
stos
les
jg
fdivr
inc
or
mov
outsl
or
inc
push
xchg
sub
roll
mov
insb
dec
js
aam
push
mov
stos
mov
imul
jecxz
cld
aas
clc
out
sub
jb
xor
fsubrl
cltd
dec
lea
into
rcll
and
das
addr16
mov
mul
pop
xchg
rclb
in
jnp
lds
or
leave
addr16
in
push
insb
cmpsb
iret
negl
call
pop
inc
int3
das
lret
push
test
sbb
arpl
je
mov
sub
mov
push
cs
pusha
push
clc
inc
sub
jb
xor
push
mov
mov
lahf
aaa
push
repnz
inc
sub
jo
or
in
cmpsl
in
aad
cli
mov
dec
mov
mov
push
das
add
jg
cwtl
pop
fwait
insb
cmp
xlat
lock
out
out
xchg
aam
sub
and
pop
add
mov
or
ret
sub
bound
dec
mov
mov
mov
mov
cmp
cmp
cmp
mov
mov
jo
mov
ficoml
mov
or
mov
add
mov
insb
xor
in
mov
int
mov
or
movsb
and
out
add
out
pop
daa
sub
add
lahf
mov
aas
push
add
leave
mov
mov
push
ds
test
daa
and
and
push
adcb
mov
insl
push
sub
xchg
pushf
lods
test
xor
scas
xor
hlt
fdivrl
vmwrite
cmp
pop
cmpsl
jge
and
cmp
aas
clc
jp
jno
jae
add
dec
xor
xor
out
lahf
xor
loopne
mov
daa
inc
cltd
and
push
je
int3
or
xchg
daa
clc
mov
out
ja
add
mov
mov
movsb
xor
and
push
mov
mov
fcomps
sub
fwait
mov
push
dec
cmp
ljmp
sub
and
in
mov
cmc
fwait
out
addr16
mov
xchg
mov
xchg
ret
out
shlb
sub
popa
pop
mov
int3
stc
scas
jnp
lret
pop
adc
and
or
mov
insl
pusha
mov
sub
mov
mov
out
call
repz
movsb
in
mov
cmp
repz
cmp
jmp
and
mov
gs
push
in
xchg
repnz
push
xchg
xor
mov
xor
mov
test
adc
pop
es
pop
cmpsl
sbb
xchg
cltd
int3
mov
bound
jnp
mov
mov
xchg
mov
test
stc
stos
out
mov
xor
cmp
ss
mov
pop
xchg
data16
push
fmuls
rolb
sarb
dec
cmpsl
in
rcll
outsl
or
inc
mov
jle
mov
add
mov
sub
sub
add
loopne
sub
sub
gs
arpl
sbb
dec
aaa
cmp
outsl
jmp
xchg
pushf
jg
insl
push
pop
into
and
mov
fcom
jae
jns
out
js
fwait
int3
js
scas
mov
das
enter
sub
jo
imul
xchg
dec
mov
mov
jae
leave
mov
sub
aas
fucomip
into
cmpb
sahf
in
daa
enter
aam
cmp
mov
andl
xor
dec
pop
mov
push
in
out
dec
dec
fildll
inc
outsb
outsl
adc
enter
daa
or
xchg
and
or
adc
lea
inc
mov
sub
cmp
add
out
insb
push
aam
aas
in
lret
inc
lret
fadd
add
ljmp
adc
fistpl
scas
int3
mov
or
jnp
xchg
xor
leave
in
or
dec
bound
mov
mov
stc
sbb
lods
enter
mov
cmpsl
add
dec
imul
jmp
or
scas
pushf
mov
sbb
add
aas
push
sbb
enter
lret
xchg
clc
call
das
dec
enter
rclb
pop
mov
cmp
cmpsb
mov
pop
jge
adc
add
jns
mov
dec
call
cwtl
xchg
les
sti
jmp
adc
cmp
movsb
xchg
dec
les
fprem1
xchg
test
jp
mov
dec
repz
es
xor
cmp
mov
jo
jbe
int
call
mov
pop
mov
or
jecxz
or
lods
sub
pop
popa
cmpsl
inc
pop
into
pop
push
sti
fldcw
into
sbb
jecxz
ljmp
cmp
jb
adc
jecxz
cli
int3
mov
pop
adc
sub
jb
xor
cmpsb
pop
ds
movsl
xchg
dec
mov
stc
sarb
mov
cmp
pop
push
pushf
test
scas
lds
push
inc
inc
imul
dec
lahf
addr16
mov
cltd
aaa
dec
les
adc
xlat
sbb
ret
push
jp
scas
sub
adc
cmp
ljmp
cmp
orb
sub
decb
sarb
rolb
pop
pop
sub
call
push
xor
mov
pusha
mov
pusha
adc
cmpsl
rclb
or
mov
pop
cwtl
imul
pop
pop
adc
jno
call
mov
cmp
outsl
shlb
pushf
mov
pop
lods
jo
cmp
scas
and
and
cltd
scas
mov
xor
cmp
fcmovne
inc
and
and
hlt
scas
lds
add
xlat
cmp
cwtl
inc
sbb
lret
jno
and
rcrb
mov
cmc
mov
lods
jmp
rcll
xor
out
mov
clc
adc
movsb
repnz
stos
dec
jmp
aam
pop
adc
loope
loopne
adc
mov
and
pop
hlt
loop
pop
cs
dec
mov
imul
subb
sbb
dec
mov
scas
aad
call
inc
jecxz
iret
popf
adc
fsubs
shll
push
xchg
data16
xor
scas
mov
vcvtss2sd
ja
lahf
ret
inc
mulb
sbb
dec
mov
jno
int
imul
pop
and
fadds
sarb
jge
fdivrl
std
sub
lods
in
mov
mov
mov
arpl
jle
push
scas
inc
xor
out
and
adc
and
push
fistps
jmp
nop
insl
arpl
cs
mov
cld
das
jp
cmpsl
dec
push
icebp
mov
sti
enter
mov
cmp
add
dec
shr
jecxz
je
rcrl
add
jo
sub
sub
mulb
xchg
mov
push
outsb
sub
jl
rorl
ror
jae
dec
aaa
jle
movsb
js
inc
test
arpl
lahf
push
mov
cmpsl
js
imul
xchg
jg
xchg
cmp
mov
test
notb
mov
sbb
sbb
mov
and
dec
popf
jmp
xchg
mov
jae
jnp
fbld
xor
mov
push
add
clc
nop
sub
inc
fsubl
mov
cmp
out
fldl
push
imul
popa
mov
ret
imulb
pop
fsubl
mov
pop
dec
mov
xor
jae
scas
int3
enter
mov
lret
inc
xchg
mov
mov
gs
ss
and
in
mov
push
shlb
xor
je
mov
add
cmp
mov
push
jno
xor
push
stos
lock
int
xor
or
sbb
cmpsb
cltd
mov
pop
sub
xor
dec
mov
xchg
add
jno
mov
inc
pop
inc
or
add
dec
ss
pushf
mov
adc
xlat
insb
xchg
aad
adc
push
out
or
dec
ret
test
cmpl
mov
add
dec
add
jae
mov
or
cmp
cmpl
sbb
movsl
mov
sbb
push
or
mov
xchg
aam
cmp
insl
mov
adc
cmpsl
aam
rcrl
aas
cmp
and
cmp
dec
jbe
je
bound
imul
dec
push
xor
out
mov
testl
inc
stos
mov
or
mov
ja
xchg
scas
jnp
lret
sarl
fistps
test
cmp
out
push
mov
mov
cmp
inc
es
dec
call
lock
ds
mov
inc
in
sub
test
rolb
sahf
sbb
mov
pop
inc
popf
add
std
sub
push
mov
push
xchg
inc
xor
dec
cmp
ss
xor
push
adc
and
outsb
cmp
jbe
mov
lret
or
and
cli
fcoms
dec
shrl
jbe
inc
xor
xchg
sbbb
mov
jmp
inc
insl
jmp
mov
lea
ss
aas
sub
push
nop
xchg
inc
mov
nop
push
mov
movsb
test
xchg
dec
pop
arpl
pop
je
inc
jl
pop
shrl
jg
mov
mov
mov
xchg
and
mov
outsb
push
pop
in
mov
mov
adc
dec
loopne
mov
ljmp
cmp
arpl
xor
imul
jmp
cmp
xor
fbld
ljmp
je
add
rcr
leave
jl
cmpsb
inc
and
cmp
mov
movsb
lahf
ret
repnz
pop
je
negl
es
out
dec
rol
jo
dec
movsl
inc
cmp
pushf
lods
leave
les
pop
xor
mov
cld
clc
inc
out
fs
xlat
pop
adc
xlat
dec
int
mov
in
pop
mov
lea
inc
mov
and
data16
out
into
or
sub
ficoms
ret
push
repz
cmc
jb
sub
jns
fsubrs
test
pop
inc
imul
decb
les
xor
mov
dec
xchg
push
mov
mov
add
movsb
inc
scas
cmc
pop
notb
add
and
push
nop
fwait
mov
notl
mov
test
fisttpl
int3
std
pusha
lcall
cmp
repz
mov
mov
jecxz
mov
jmp
jns
arpl
jns
dec
je
negl
insb
mov
cmp
jbe
mov
fs
pcmpeqb
jnp
daa
jnp
repz
movsl
pop
negl
add
hlt
jbe
les
xor
inc
mov
xor
mov
aas
call
popl
notl
sbb
inc
inc
dec
out
insb
fldenv
mov
lods
rolb
adc
cmpsb
jbe
pop
and
pushf
xchg
mov
insl
pop
cwtl
cld
es
clts
out
mov
adc
add
adc
or
and
push
outsl
js
les
nop
mov
les
push
aaa
out
insl
addr16
in
stc
aas
cmp
mov
imul
test
mov
add
sub
mov
mov
mov
scas
dec
xor
xorb
lods
xchg
daa
cmp
jecxz
mov
mov
cs
scas
aas
mov
dec
inc
cmp
xchg
mov
pop
xchg
lods
out
or
dec
inc
and
sahf
and
mov
dec
les
insb
mov
jge
fistpl
pop
sbbb
cmp
repz
mov
inc
rclb
inc
cmpsb
das
ret
movsb
test
inc
push
fists
inc
cmp
aas
clc
dec
adc
pop
lods
enter
xchg
jl
lahf
cmpsb
bound
push
inc
mov
dec
out
mov
pusha
sub
ds
cmp
inc
xor
cmp
and
push
leave
js
fldt
arpl
push
jmp
mov
mov
sub
sbb
repz
push
test
mov
cmp
insb
pop
lods
sbb
fsubl
scas
jns
sub
and
mov
in
imul
iret
lcall
in
jbe
sub
call
push
in
int3
jl
stos
adc
or
stos
dec
xchg
add
gs
jbe
lret
lock
push
xor
in
adc
in
fcompl
daa
push
dec
std
adc
cmpsl
movswl
into
pop
js
arpl
mov
push
push
add
dec
inc
mov
push
and
push
adc
mov
pushl
insb
les
cltd
call
ljmp
lods
xchg
lahf
or
pop
fistl
mov
cmpsb
push
shrb
jno
mov
pushf
or
popf
repz
add
stos
push
mov
jo
adc
push
rcrb
cmp
mov
js
je
inc
lods
inc
and
cmp
push
pmulhw
sub
mov
push
or
xchg
popf
pop
xchg
stc
adc
mov
adc
push
and
push
leave
cli
call
cli
mov
jne
xchg
sub
test
fistpl
dec
int
fprem
shlb
iret
mov
and
mov
push
pop
mov
or
dec
xchg
xchg
scas
pop
push
in
lds
lods
or
sbb
imul
test
jnp
dec
or
adc
divb
addr16
mov
cmp
mov
mov
outsb
enter
pop
movsl
syscall
jp
mov
inc
dec
cmpsb
dec
inc
fdivrs
sbb
mov
sub
adcb
clc
pop
add
add
insl
aaa
xchg
and
xchg
jae
xor
loopne
dec
pop
sub
mov
mov
pop
adc
mov
pushf
mov
push
jle
adc
test
mov
pop
and
push
addr16
push
mov
je
xor
fwait
call
cmpsb
repnz
mov
cmpsl
xchg
adc
sub
je
rol
mov
aaa
mov
aas
movsb
lods
cmp
insl
add
push
dec
adc
iret
or
into
daa
mov
mov
lret
lods
xor
lods
je
js
shlb
dec
xor
stos
lret
inc
out
decb
dec
stc
stc
inc
movsl
mov
and
xor
push
fwait
mov
xchg
or
cs
inc
js
xor
sub
sti
fmull
adcb
addr16
in
jle
mov
movsb
mov
nop
lock
xor
out
cmpsl
add
dec
cmp
cmp
mov
frstor
icebp
inc
mov
jbe
and
fnstsw
ljmp
repz
jbe
mov
je
and
inc
mov
pop
loope
sub
or
jge
inc
fbld
fidivl
inc
inc
pop
and
mov
xchg
sbb
cmpsl
jecxz
mov
daa
pop
arpl
lahf
sub
lods
xor
mov
repz
pop
adc
mov
and
in
mov
cwtl
sbb
cmpsb
push
shlb
imul
pop
fisubrl
or
insb
aas
sbbl
hlt
push
xchg
pop
push
pop
jne
add
outsb
movsl
push
in
adc
outsl
sti
dec
stc
dec
aaa
inc
push
inc
mov
inc
ss
mov
push
sahf
mov
mov
rclb
jo
clc
mov
push
push
in
std
jl
int3
push
mov
out
dec
hlt
add
sbb
push
sub
inc
xor
sub
test
adc
push
inc
int3
test
mov
pop
push
rcll
xchg
inc
aaa
lahf
add
daa
mov
sub
addb
sub
cmp
and
aad
jne,pn
daa
mov
loope
push
xor
pop
ret
out
add
mov
xchg
aam
xchg
cmp
mov
jecxz
sbb
shl
out
xor
dec
sbb
fiadds
cmpsl
dec
adc
or
jg
inc
dec
int3
push
loope
add
fidivrl
int3
mov
test
lret
aaa
and
js
xorl
jo
jg
scas
je
push
mov
in
pop
and
icebp
dec
add
and
cmc
in
daa
aas
jp
cmpsl
mov
add
mov
pop
lds
xchg
mov
mov
fiaddl
inc
jl
xchg
sbb
mov
add
xchg
bound
sti
fidivrl
lret
movsb
push
dec
adc
insl
jns
jle
cmp
mov
fwait
sub
imul
in
mov
xchg
lret
mov
jmp
mov
stc
pop
ret
das
jb
dec
repnz
test
daa
mov
leave
test
js
pop
sarb
xchg
pop
call
out
xchg
pop
movsl
pop
push
cmp
push
fisubrs
cmp
jge
lock
in
orl
pop
or
stos
shll
mov
arpl
sub
aas
cmp
pop
or
mov
jmp
pop
add
daa
mov
xor
mov
imul
std
pop
pop
js
and
sub
push
pop
sub
std
imul
sbb
cwtl
fwait
andb
sbb
dec
stos
adc
insb
sbb
mov
mov
lret
jne
pop
clc
int3
pop
sub
jp
xor
aam
xor
mov
movl
icebp
cmp
enter
fists
imul
xchg
insl
mov
cmpsb
or
cltd
mov
jg
inc
jne
inc
dec
xor
cli
fisubrs
dec
mov
cmp
out
mov
cs
sub
fisubs
push
xchg
jecxz
push
lods
lret
and
xchg
cmp
and
jmp
outsb
cmovns
mov
mov
arpl
sahf
ret
imul
mov
inc
icebp
shr
push
movsl
sahf
es
xchg
mov
outsb
inc
jg
sbb
xchg
test
sub
add
and
in
test
out
adc
sahf
add
fadds
or
in
push
xor
jg
push
loope
stos
mov
fildll
xor
xchg
mov
std
jo
sbb
sub
cmp
mov
mov
stc
cmp
cmp
inc
mov
lock
jp
dec
clc
mov
xchg
add
sbb
dec
les
xor
push
cmpsl
shlb
je
js
pop
cmp
bound
aam
dec
insb
pop
pop
aaa
std
pushf
lock
add
dec
lea
movsb
sbb
test
or
mov
enter
sub
outsl
sub
and
jl
push
push
or
rcrl
mov
cmp
andb
dec
inc
mov
mov
xorb
je
lret
xchg
add
cld
ret
popa
inc
idiv
inc
sahf
inc
inc
sub
sub
pop
sti
dec
cli
add
es
mov
adcl
fdivl
lret
int3
incl
das
sub
aad
mov
sub
sub
ljmp
addr16
xor
or
xchg
or
jne
xchg
cld
and
rcrl
les
mov
mov
fiadds
xor
jg
lds
popl
aas
insb
mov
dec
inc
dec
push
mov
loopne
jecxz
movsb
push
adc
out
sub
mov
lcall
es
jbe
sub
fnstenv
xchg
repnz
mov
inc
daa
mov
loopne
lods
xlat
ds
imul
sub
sti
fsubrp
mov
pop
xchg
fstl
aas
xchg
push
xchg
mov
xchg
mov
fiaddl
push
data16
jg
out
adcb
jg
pop
int3
pop
fwait
mov
xchg
jecxz
nop
push
or
adc
out
pop
lods
adc
cmp
sbb
loope
ret
xor
add
insl
in
or
fiaddl
dec
push
mov
jnp
mov
dec
or
mov
lahf
and
adc
rorl
sbb
movsb
aas
ret
test
mov
cli
imulb
or
testl
jg
jg
shl
ret
sub
cltd
flds
xlat
mov
aaa
pop
pop
cltd
lods
sbb
je
and
mov
mov
xor
leave
test
cmpsl
push
jl
mov
or
int
loope
adc
pushf
jne
jecxz
pop
int
inc
in
fs
or
mov
adc
movsb
mov
in
xor
aas
and
add
sbb
sub
mov
cli
and
outsl
scas
xor
sbb
sub
in
leave
add
lods
jae
stc
push
loopne
js
or
insl
sub
sbb
dec
ret
imulb
mov
cmp
jl
imul
cmp
adc
adc
idivb
ret
lcall
sub
out
stos
dec
mov
pop
and
mov
pop
mov
iret
jecxz
daa
inc
xchg
jmp
mov
adc
adcl
push
daa
decl
insb
or
in
and
cmp
cmp
cmp
push
shl
into
mov
lahf
mov
pop
dec
lret
loopne
fisttpll
jno
push
inc
fwait
das
cmp
jle
in
icebp
jecxz
ret
pop
adc
cmp
push
inc
pop
jg
scas
cmp
shl
cmp
hlt
stos
int3
or
in
cltd
mov
dec
adc
ret
and
sub
mov
mov
stos
in
jae
add
inc
movsb
mov
dec
and
pop
push
subl
mov
sti
sub
jno
mov
jns
add
cmp
dec
mov
das
repnz
sarl
das
cmpsb
orb
jnp
movsl
arpl
pop
inc
insl
mov
cmp
es
rorl
sahf
fiaddl
adc
cmp
jae
daa
rol
pop
in
lahf
int3
call
rolb
mov
dec
into
sub
outsl
aas
xchg
jp
fsubrl
cmpsl
xchg
pop
enter
jno
div
cmp
in
dec
mov
mov
adc
addr16
sub
add
dec
std
int3
sbb
cmp
test
fsubp
test
roll
mov
dec
add
push
mov
int3
inc
fstpt
xor
in
cmpsb
mov
aaa
or
and
cmp
and
add
decl
es
enter
mov
xor
out
inc
xchg
insb
repnz
pop
and
or
lcall
sub
addr16
outsb
or
cmpsl
and
jge
fwait
icebp
mov
stos
fdivs
pop
jecxz
pop
dec
movb
icebp
xor
mov
xor
dec
in
andb
dec
ss
jae
mov
fs
push
nop
push
jnp
out
rorl
and
ds
hlt
inc
leave
mov
sub
aaa
push
jne
loope
xor
orl
xor
and
out
sub
mov
enter
in
xchg
dec
aaa
fwait
jno
ds
adc
test
ds
cltd
inc
rcrl
cmc
and
xchg
adc
jge
adc
loope
scas
sbb
mov
pop
inc
pop
inc
jo
rorb
xor
js
movsl
inc
lods
cmp
jno
enter
or
lods
bound
mov
push
or
ss
clc
mov
xor
mov
hlt
cmpsb
mov
dec
mov
loop
clc
mov
jns
mov
iret
scas
cld
jbe
repnz
cmp
inc
mov
hlt
scas
loopne
sub
sub
pop
mov
lock
in
sub
cmp
scas
call
cmp
ja
fldenv
scas
in
scas
mov
push
xor
mov
push
aas
movsb
addl
mov
scas
sbb
pop
inc
cmp
mov
push
daa
pop
jl
adc
sahf
outsb
and
jl
pop
dec
adcb
addr16
xchg
dec
je
cmc
and
scas
daa
mov
push
cmp
cmpsl
mov
insl
xor
push
cmp
setl
jl
cmpsl
mov
dec
jae
out
xor
dec
ja
movsl
enter
jno
adc
scas
stos
mov
jge
jecxz,pt
xor
js
and
dec
inc
jo
push
cltd
push
cmp
arpl
mov
sti
rorb
jae
or
ret
and
enter
jle
mov
out
jmp
daa
clc
mov
lahf
cs
pop
xchg
and
mov
cwtl
cmpsb
out
jbe
fnstenv
adc
adc
in
lock
xor
bound
or
lods
cmp
sahf
or
jbe
dec
mov
enter
orb
and
mov
aas
imul
roll
cmpsl
adcl
cmp
shlb
or
int3
push
aaa
jbe
out
test
inc
sbb
mov
les
loopne
sub
pop
insl
adc
fs
jl
lret
in
and
aaa
xchg
xor
ffreep
ljmp
or
add
mov
lcall
test
mov
mov
pop
shl
leave
mov
movsb
jle
dec
lea
sbb
add
jmp
pop
js
cltd
xor
shll
inc
pop
mov
mov
fcmovu
pop
sbb
test
and
cmp
adc
loop
and
and
std
dec
pop
add
ja
lret
gs
movsb
enter
iret
aas
fwait
add
push
pop
jp
jno
cmp
dec
xchg
fisubl
fiaddl
int3
push
inc
inc
adc
test
pop
iret
jne
xor
xchg
mov
cmpl
xorl
mov
aad
jle
mov
mov
mov
fistl
insl
push
unpckhps
outsb
inc
mov
lret
inc
mov
imul
ret
adc
in
cmp
inc
jno
insl
xorb
fdivr
sbb
scas
dec
adc
add
adc
xor
call
fcompl
mov
xlat
xchg
jge
pushf
cli
push
mov
ret
adc
and
insb
pop
outsl
lods
jg
shlb
clc
mov
inc
add
stos
iret
jg
cmpsl
adcb
adc
cmpsl
out
jl
mov
ja
sub
rolb
sarb
int3
imul
cmpsb
cmp
xor
mov
xchg
repz
sbb
pop
dec
mov
adc
stc
das
test
jo
jg
adc
jns
cmc
and
addr16
dec
pushf
jmp
rorb
jmp
ss
je
lods
xchg
loope
dec
add
or
arpl
pop
mov
addr16
mov
cmp
dec
dec
xchg
bound
lret
xor
aas
xor
mov
mov
fisubrs
into
cmp
or
inc
popf
outsl
ret
movsb
jmp
sub
fstpt
xchg
jb
mov
cmp
lcall
xchg
mov
popf
stos
add
gs
and
addl
repz
dec
add
push
inc
push
or
int3
mov
push
lret
daa
pop
dec
adc
jne
sbbl
jns
andps
int3
sbb
pop
xor
adc
movsb
inc
daa
ret
inc
aaa
adc
pusha
cmp
or
pop
hlt
fidivrl
push
mov
insl
leave
xchg
ficoml
and
xchg
pop
icebp
jg
mov
push
ror
mov
insl
aas
and
cmp
movsb
je
pusha
dec
xchg
pushf
bound
fidivrl
std
jae
notl
xchg
mov
test
notb
inc
sbb
repz
push
cmp
stos
and
subb
and
mov
mov
xchg
iret
out
aaa
push
in
or
mov
sub
fisttpl
aas
movsb
mov
push
lods
or
inc
scas
sbb
in
call
jbe
cld
test
adc
adc
dec
xchg
cmp
sub
mov
je
push
adc
fidivl
frstor
jae
push
mov
les
arpl
mov
jnp
in
xchg
jne
xchg
cmp
clc
popl
cltd
dec
inc
xor
lods
mov
insb
in
mov
movsb
dec
jle
and
or
imul
fidivs
loopne
das
xchg
mov
add
aam
ljmp
dec
nop
mov
popl
lahf
pop
inc
push
pop
ret
or
test
cmpsb
jae
call
aam
movsb
xchg
test
cmp
dec
movsb
filds
enter
lret
out
sub
ret
cmp
icebp
mov
jnp
dec
xchg
cmp
and
lods
stos
pop
or
dec
inc
sbb
xchg
xchg
mov
test
sbb
addb
daa
leave
pop
rclb
xor
lret
test
add
lahf
mov
and
cmp
jl
cmp
andl
ss
cwtl
dec
loop
lds
mov
inc
addr16
mov
stc
stc
outsl
xor
inc
pop
les
clc
out
mov
or
or
jl
jae
hlt
lcall
lahf
pop
mov
nop
pusha
pop
sti
cmc
mov
inc
shll
lahf
jns
movsl
ja
xor
movsb
inc
and
bound
loope
jae
leave
jl
xor
test
sub
adc
sbb
dec
dec
gs
ds
jno
inc
test
xchg
jno
push
imul
data16
xchg
and
testl
and
or
sbb
arpl
adc
movl
push
and
cs
mov
lods
push
mov
mov
stc
or
jg
and
xorps
adc
movsb
shrl
cmpsl
or
push
xchg
push
rcrl
shll
aas
fwait
xchg
movsb
call
sub
xor
mov
mov
out
sti
pop
lods
xchg
and
and
divb
add
lret
nop
fdivrl
inc
cmpsl
rcrb
and
je
fsubrl
mov
pop
ret
js
jo
clc
adc
out
pop
cs
sub
fnstenv
inc
sahf
and
sahf
cmp
test
nop
in
ss
and
in
lods
ret
jle
insb
mov
push
jge
insb
jmp
jnp
lahf
xor
in
sub
jb
dec
ret
sub
in
leave
or
jl
or
lock
mov
jl
out
mov
xor
xchg
mov
imul
aaa
sarb
add
mov
or
in
push
lret
lret
xchg
add
jmp
xchg
jno
popf
fwait
js
fildll
mov
sbb
enter
sub
cmp
stos
pop
mov
rclb
and
fcoms
repz
cmp
scas
mov
outsb
mov
int
fwait
mov
xchg
sahf
mov
gs
cmc
fnstsw
mov
es
lcall
lcall
out
das
test
in
inc
aaa
testb
jnp
mov
into
fbld
mov
lret
cmp
cltd
or
mov
enter
jns
aas
and
mov
sbb
mov
aaa
popf
outsl
nop
dec
mov
fldenv
in
in
popf
pushf
add
mov
in
clc
and
sub
lds
lret
mov
arpl
mov
hlt
pop
movb
sub
addl
mov
loopne
jo
sub
mov
xor
imul
jns
neg
insb
xor
dec
and
mov
nop
pop
or
cmpsb
jecxz
jmp
data16
popf
cli
imul
pop
ds
jo
aas
inc
les
imul
leave
idivl
mov
orb
add
rcll
lahf
outsl
mov
lret
movsl
cs
cmpsb
sub
sahf
int3
and
cltd
in
mov
xor
or
int
in
jbe
dec
movsl
lret
scas
mov
sbb
cmp
mull
and
mov
mov
mov
movsb
sbb
pushf
insb
mov
sub
or
popf
cli
or
adc
inc
jmp
push
test
les
stos
xor
out
fucomip
outsb
out
xchg
dec
js
movsb
sub
cmpsb
and
pop
popf
push
sbb
xor
insb
nop
push
mov
push
shrl
ucomiss
mov
cs
jno
daa
rorl
mov
cmp
or
lea
scas
xchg
fs
add
outsl
fwait
mov
das
jne
jmp
lods
cld
nop
pushf
add
lea
xchg
mov
xchg
dec
stc
push
cwtl
scas
in
aaa
lahf
and
inc
mov
xlat
push
cmp
je
pop
fcompl
hlt
inc
out
cmp
test
sub
cmp
adc
icebp
pop
push
inc
pop
outsl
lret
jns
fbld
push
dec
scas
mov
ficoms
and
dec
sub
mov
jmp
mov
les
mov
and
imulb
popa
lret
jnp
dec
mov
mov
dec
or
mov
jl
mov
xchg
mov
push
cmp
sarb
mov
sarb
mov
aad
jp
push
aas
lahf
lret
cmc
subb
lods
inc
inc
jae
add
loop
icebp
lret
popf
xor
xchg
movsb
dec
sub
or
mov
rclb
cmp
adc
mov
iret
scas
pop
std
xchg
rcll
and
xor
sub
cmp
cs
cltd
in
pop
sbb
cld
test
in
mov
icebp
jo
stos
sbbl
push
fsubp
sub
add
insb
sahf
shlb
arpl
mov
mov
mov
push
sbb
push
and
dec
sbb
repz
sahf
jmp
sbb
add
in
fadd
outsl
hlt
lret
nop
cmpl
adc
cmp
cmp
mov
mov
jle
adc
dec
and
popf
sbb
ret
cld
cmpsb
dec
pop
and
dec
jmp
jle
rorl
push
jl
ret
dec
pop
xchg
xor
mov
je
cltd
ret
popf
adc
add
rclb
pop
out
jecxz
in
jne
jo
into
xchg
mov
incb
adc
test
out
add
mov
lock
ja
insb
xchg
inc
add
cmpsl
sbb
and
ret
call
and
dec
adc
sub
orl
addl
pop
bnd
lahf
movsb
inc
mov
pop
push
dec
push
adc
jp
adc
in
cmp
xchg
sqrtps
rolb
pop
into
mov
cmpl
jge
ds
addb
fldt
jg
imul
aaa
cmp
leave
popa
daa
pop
lret
mov
xor
xchg
int3
mov
inc
mov
push
cld
sub
xor
cmp
in
ds
sahf
pop
add
scas
and
mov
dec
jns
and
out
or
adc
jmp
inc
sbb
or
pop
lods
cmpsb
cmp
xchg
sub
mov
sub
mov
ret
lret
cmpsl
add
std
pop
pop
cmp
ret
mov
ds
add
pop
mov
dec
push
jbe
xchg
out
test
in
jmp
adc
jmp
pop
add
jno
jp
inc
sub
les
mov
lea
lahf
orl
sub
out
aaa
lahf
out
mov
lahf
int3
aas
pop
jmp
jl
adc
add
push
loope
nop
mov
cmp
or
xor
dec
aam
and
addb
in
test
and
mov
sbb
xorb
or
pop
mov
rcll
ljmp
jle
lds
and
hlt
fwait
jge
ds
scas
mov
push
mov
dec
gs
sub
mov
popa
sbb
das
push
dec
mov
out
fiadds
test
movsb
insl
xor
mov
cld
dec
adc
ljmp
nop
out
or
sub
insb
sub
pusha
push
cmp
mov
pop
xor
repz
jmp
mov
stos
cmp
adc
ret
jl
inc
lea
lds
mov
addr16
js
jg
stos
iret
insl
les
jecxz
sahf
repz
lret
cmp
dec
pop
aaa
mov
cmpsl
outsl
js
pop
pop
jns
dec
jne
lahf
fsub
fsubl
xor
push
cmpsl
repz
leave
dec
insb
stos
in
fisubrs
mov
ficoml
iret
cwtl
arpl
and
or
int3
push
cwtl
outsb
out
jnp
cmp
xchg
push
fcompp
lret
cs
or
mov
xchg
cmp
or
lea
xchg
repnz
jne
inc
clc
push
loope
test
sar
adc
and
int
lret
jno
push
jno
mov
inc
sub
fbld
daa
xchg
ficompl
stc
mov
pop
mov
js
or
lods
and
movsb
lods
mov
mov
pop
pop
jmp
fwait
xchg
mov
add
loope,pn
bound
cs
insb
mov
ljmp
and
ds
lea
add
filds
sub
xchg
movsb
xor
iret
mov
icebp
popw
movsl
rep
pop
pop
test
es
mov
scas
in
scas
add
and
and
xchg
jmp
mov
stc
repz
jmp
bt
add
xchg
xchg
add
pop
mov
loopne
ds
mov
aam
cmp
nop
adc
xor
or
aas
dec
dec
cmpsl
pop
nop
push
out
cmpsb
mov
loop
mov
add
sbb
jo
sub
jge
data16
lea
add
inc
cmp
xor
dec
leave
inc
cmp
xor
pop
inc
iret
and
les
xor
xchg
in
and
aad
call
cmp
mov
testl
and
mov
sbbl
jbe
test
shlb
xor
movsb
shlw
push
fisttps
mov
xchg
lock
shll
xor
lods
xor
ds
cwtl
inc
xor
out
fldt
ja
pop
push
pop
xchg
sarb
vpackssdw
xlat
pop
xchg
outsl
cld
js
jge
mov
xor
adc
gs
mov
lea
xchg
rorb
pop
mov
into
in
mov
xchg
xlat
lea
out
mov
bound
pop
xor
mull
xor
jl
mov
jae
lret
mov
and
xchg
ror
popa
add
lahf
shll
popa
push
out
xchg
les
loope
insl
clc
lcall
jle
cmpsl
inc
add
gs
push
stos
add
imul
pop
fdiv
movsb
daa
push
xchg
shlb
adc
inc
fwait
mov
mov
push
stos
les
jae
aaa
xchg
mov
int
pop
scas
mov
outsl
lret
pop
inc
popf
add
in
jne
rep
jne
dec
insl
cmp
add
dec
mov
jno
fwait
pushf
mov
mov
xor
movsl
cmpsb
popa
inc
add
nop
sub
xor
outsb
rcl
aas
into
lret
xor
or
test
lods
aaa
xor
push
scas
fmuls
insb
adc
ljmp
push
add
mov
cmp
imul
xor
cmp
cmp
jl
sahf
cmp
lret
cli
mov
inc
int3
clc
movsb
pop
pop
jb
sub
insb
sbb
xor
sub
add
fbld
inc
pop
adc
jb
es
lock
sbb
sahf
in
pop
test
mov
dec
mov
loopne
lret
andb
mov
xor
fistpl
daa
push
repz
jecxz
push
pop
inc
dec
loope
repz
ja
addr16
cmp
xor
lret
xor
fcomi
aad
scas
push
cltd
lahf
jg
adc
daa
in
inc
pop
popf
mov
sbb
in
xchg
push
mov
test
daa
jg
ljmp
iret
sub
test
cwtl
lods
dec
cmpsb
jp
xchg
cmp
or
mov
les
adc
xor
cmp
or
bound
mov
jle
xchg
xor
cmpsb
sbb
nop
nop
fbstp
xchg
arpl
push
clc
je
xchg
lahf
rorl
or
push
repnz
dec
adc
popf
add
lret
mov
mov
fbld
fdivrl
mov
fwait
push
and
xchg
and
inc
or
xchg
call
mov
lds
enter
call
stos
sbb
mov
lahf
add
in
xchg
dec
mov
mov
or
es
push
pusha
cwtl
add
pop
nop
in
in
ficoms
filds
sbb
fimuls
pushw
pop
dec
cmp
push
push
lcall
jo
and
into
pusha
add
es
shrb
stc
bound
into
js
mov
ficoms
loop
sbb
mov
out
push
stos
sarb
testl
sub
adc
jae
mov
add
js
and
or
jecxz
scas
mov
icebp
int3
cmp
mov
sub
adc
xchg
adc
cmp
into
popa
cmc
adc
in
push
aas
jle
adc
pop
std
adc
mov
cmp
and
pop
push
rcll
shlb
or
mov
jecxz
sbb
popf
jle
fisubs
jb
arpl
inc
adc
rep
incb
pop
jmp
test
stc
mov
push
lahf
sbb
fsubl
cmp
aaa
out
dec
pop
scas
popf
sahf
ja
lret
push
mov
and
mov
cmp
movsl
dec
mov
in
ds
xor
lret
jge
add
movsb
stc
push
cmp
fnstcw
cmpsb
push
xchg
dec
arpl
push
jg
in
inc
test
ds
cmpsl
lods
jl
cmpsb
bound
das
and
mov
cmpsl
jb
ret
fidivl
or
bts
mov
cmp
popa
addr16
xchg
cmp
lret
into
mov
dec
pop
shll
into
xchg
or
and
call
jg
xchg
dec
mov
rorl
js
pop
mov
fmull
stos
outsb
mov
aas
and
insb
daa
insl
xor
lcall
shrl
insl
push
sahf
das
xor
mov
mov
out
xchg
xor
int3
cmp
aaa
repz
lret
rcrl
das
test
arpl
sub
gs
xor
push
sub
push
test
lcall
scas
cmp
js
xlat
push
push
lret
add
frstor
mov
or
xchg
and
xchg
je
jo
mov
inc
and
insl
push
mov
cmp
add
cmpsb
test
cmpsl
mov
xchg
out
fld
lret
lods
lds
lods
mov
push
outsb
cmp
jge
pop
imul
jle
xchg
aam
mov
andb
or
xlat
es
jl
shlb
xchg
sub
mov
adc
pushf
push
dec
push
jmp
into
pop
pop
inc
jae
jl
xor
fistpll
insb
cmp
shl
mov
jb
mov
outsl
jmp
lods
jecxz
dec
aam
push
jecxz
decl
fistl
jne
sub
add
ffree
ljmp
inc
imulb
jge
roll
lock
ds
ja
cmp
out
and
js
adc
femms
iret
mov
icebp
cmp
and
dec
sahf
pop
roll
cmp
inc
xchg
js
xchg
test
push
cmc
aam
call
fistl
fistps
jge
inc
in
jge
aaa
sbb
adc
hlt
pop
mov
pop
test
or
idivb
mov
adc
inc
mov
jmp
mov
add
mov
pushf
pusha
movsl
out
mov
mov
cmc
repz
dec
std
lds
scas
ja
xchg
iret
cmpsb
xorb
dec
int
insb
insb
outsl
mov
addl
lods
mov
outsb
or
mov
addl
sub
mov
callw
ss
xchg
insl
inc
out
dec
pop
call
jmp
sti
mov
in
mov
fcomps
or
rcl
jge
jge
xchg
fnstsw
xlat
cs
repnz
or
mov
mov
pop
cmpsl
sbbl
push
xor
imul
leave
out
mov
hlt
orl
push
inc
cmpsl
adc
cmp
test
ds
pop
data16
aad
stc
pop
test
lcall
xchg
sub
xchg
pop
lret
movsb
lock
mov
xor
cmpsb
int3
test
out
pop
dec
popf
movsb
mov
icebp
std
shll
int
dec
pop
mov
and
aad
sbb
push
lahf
pop
add
js
and
les
mov
mov
int
push
fstpl
movsb
insb
arpl
mov
sahf
nop
sub
mov
shr
int
sti
and
cmp
jns
movsb
call
aaa
push
xorb
adc
movsb
cmpsl
adc
imul
xor
int3
insb
rcll
mov
add
sub
fisubl
cmp
addr16
mov
inc
push
lahf
popa
movsl
inc
sub
je
sub
cmp
mov
sub
fdivp
sti
movsb
mov
sub
mov
jnp
imul
and
and
std
scas
and
push
test
aam
xchg
repz
pop
test
sbb
adc
es
out
cmp
inc
cwtl
out
sub
push
sub
xchg
lret
cmp
fcomip
cmp
and
out
push
dec
push
lahf
inc
or
loope
jb
mov
add
or
lods
sub
test
mov
sahf
pop
mov
fs
add
pop
push
xchg
icebp
out
push
test
dec
stos
dec
in
or
jmp
xor
insl
mov
xchg
lods
mov
aad
insb
insb
xlat
pusha
loop
mov
outsb
or
xor
arpl
into
in
or
iret
mov
rcl
add
mov
faddl
icebp
aaa
lods
scas
mov
pushf
xor
jbe
adc
and
pop
ss
nop
mov
daa
cli
test
xchg
lea
push
sub
xorb
mov
jecxz
push
lods
jo
mov
xchg
mov
cmp
cli
sarl
xchg
cmp
or
pop
mov
dec
xchg
adc
xchg
out
stos
rclb
in
jle
xchg
fdivrl
sub
push
xchg
dec
sbb
aam
icebp
push
mov
jno
lahf
mov
cltd
mov
fwait
js
ja
pop
push
jns
aad
in
push
enter
and
xor
and
and
xchg
xchg
ds
cmp
test
pop
push
pop
pop
loopne
cmpsl
test
pop
sub
and
and
out
mov
call
pushf
out
sarb
mov
jne
fisubl
inc
push
mull
jmp
mov
xchg
lcall
jne
mov
sub
add
daa
inc
mov
xchg
aas
sbb
jnp
es
sbb
sbb
fiaddl
movzwl
fnstcw
and
pop
lcall
out
mov
pop
std
jne
inc
pop
mov
addr16
cmp
test
test
movsl
bound
mov
xchg
outsb
sbb
mul
lret
push
das
iret
and
lea
mov
mov
outsl
or
xchg
in
dec
mov
mov
ret
or
cwtl
pop
xchg
imul
fbld
mov
mov
xchg
mov
addl
push
add
in
jl
lods
xchg
lea
or
sub
jl
cli
stos
mov
stos
aam
fcomi
or
dec
mov
cli
and
inc
lea
xchg
out
push
push
rorl
inc
adc
push
fidivs
and
xor
cmp
dec
mov
ret
enter
lods
mov
cmp
out
sbb
add
cmpl
es
call
push
mov
rcl
xor
pop
lret
pop
jo
cli
sbb
xor
in
xchg
mov
jecxz
les
xchg
and
lods
mov
cmc
mov
xor
cmpsb
cmpsl
push
push
lea
mov
in
push
cmp
pop
sub
push
or
xor
jns
addr16
out
cmp
sub
movl
out
sbb
das
cmpsl
mov
xchg
mov
movsb
sbb
daa
pop
mov
loop
icebp
mov
xor
loop
movsl
adc
fildl
mov
loopne
pop
dec
mov
sbb
adc
insb
int3
fimuls
fimull
loopne
xlat
ret
cmp
mov
dec
test
add
push
xchg
les
pop
jecxz
dec
xor
js
jb
test
popf
ret
pop
add
into
sbb
dec
popf
cwtl
jo
xbegin
aas
sub
incb
les
scas
rorb
or
push
lahf
stos
mov
je
stos
cs
scas
lods
inc
imul
ds
mov
sub
int3
js
addr16
fbld
pop
adc
mov
sbb
dec
and
jns
test
or
es
insl
xor
test
jg
xchg
and
es
pop
ja
fidivl
pop
test
add
mov
subl
or
jb
jmp
dec
sar
add
scas
xchg
test
mov
inc
pop
gs
addr16
stos
add
add
ret
push
cmp
aas
mov
xchg
xlat
dec
cmp
in
push
ret
stos
cmp
jecxz
xchg
pop
jnp
xchg
in
shlb
data16
add
mov
je
jecxz
jb
mov
add
xorb
add
sbb
lret
jmp
inc
mov
cmp
or
jl
jns
addl
lret
mov
cmpsb
pop
ret
sti
int
scas
xorl
pop
and
gs
dec
fimull
das
sbb
inc
add
orb
mov
jne
adc
mov
dec
outsb
adc
xor
dec
out
nop
pop
sahf
movsb
mov
mov
les
or
mov
lods
icebp
ss
scas
cmc
xchg
fsubl
or
mov
aam
enter
sbb
sbb
cmpb
xor
lret
scas
repz
jl
cmp
sub
xor
xlat
push
fidivrs
jl
pop
out
cmp
lahf
xor
cmp
jno
cmp
inc
mov
shll
pop
in
or
mov
cmp
lock
aad
inc
push
shrb
stc
mov
and
les
pop
stc
out
pop
push
pop
ljmp
inc
jp
out
mov
das
cltd
clc
out
push
cltd
cli
lret
push
dec
daa
subl
insl
movsl
mov
sub
popf
ds
or
mov
cmpsl
sub
jl
into
xchg
das
cmp
push
sahf
xor
vcvtsi2ssl
mov
or
xor
xchg
and
enter
pop
mov
pop
adc
shrb
aas
cwtl
negb
movsl
dec
sub
mov
pop
xor
les
nop
in
ret
iret
rcrb
inc
bound
pushf
fadds
jmp
leave
mov
mov
stos
push
fstpl
sbb
lock
jle
push
into
pop
dec
mov
or
into
jno
xor
xchg
js
aam
mov
enter
mov
fisubrl
ret
sahf
aad
ret
pmulhw
cltd
ret
inc
lret
inc
hlt
test
pop
pop
insb
mov
dec
jle
pop
cmp
loop
push
mov
addl
mov
nop
mov
push
jbe
insl
mov
in
mov
push
stos
pop
fisubl
iret
mov
inc
leave
pop
mov
scas
stc
dec
jg
adc
test
je
es
sub
dec
je
and
outsl
and
mov
mov
subb
scas
pop
es
add
das
inc
aas
imul
shl
sbb
jmp
outsb
inc
inc
popa
cmpsb
jmp
ljmp
jne
shrl
pop
pop
insl
mov
xlat
jns
test
add
fcoml
into
mov
bound
lret
jo
mov
inc
dec
push
dec
cmp
and
xchg
xor
lcall
jnp
lahf
push
inc
into
out
push
push
cs
inc
lods
sbb
jne
push
xchg
or
xorb
xor
test
insl
push
mov
out
imul
and
push
adcl
jmp
in
outsb
pop
mov
outsb
in
mov
push
and
lea
jle
jbe
aas
out
dec
cwtl
xchg
cld
dec
mov
mov
out
cmc
pop
push
mov
xor
imulb
lret
mov
je
pop
lret
sbb
adc
or
stos
lds
mov
jmp
ds
adc
mov
test
add
jbe
inc
scas
fs
aas
push
mov
xor
cmp
aas
push
and
xor
ss
aas
add
call
imul
ret
insb
pop
xor
sti
fs
adc
xor
inc
cmp
dec
xor
xchg
pushf
push
je
and
test
sub
pop
test
lds
mov
in
xchg
lahf
mov
out
sbb
jae
fdivrs
push
dec
add
cmp
repnz
call
sub
and
pop
jle
aad
and
out
outsb
push
and
jnp
mov
mov
push
outsb
pop
inc
rcrb
xor
scas
data16
pop
insl
pop
scas
inc
inc
jmp
push
sahf
pop
cmp
fisubrl
jns
mov
inc
inc
cmpps
cmp
mov
adc
and
in
pop
lods
cmp
and
mov
xchg
aas
or
jle
rorl
and
cmpl
ds
inc
add
punpcklwd
stos
pop
dec
and
xchg
jmp
clc
outsl
sub
jecxz
test
xchg
shrb
jno
fistpl
adc
lock
ret
mov
pop
sbb
loopne
and
movsb
and
and
push
dec
fildl
push
pop
imul
jle
inc
cmp
mov
push
mov
out
xor
out
addr16
dec
mov
pop
mov
ljmp
rcr
pop
mov
test
sbb
push
das
dec
mov
call
into
addr16
sbb
mov
add
hlt
out
adc
pop
out
and
xchg
cwtl
cmc
and
xor
into
jnp
gs
mov
add
jmp
mov
and
sbb
in
push
mov
mov
int
sbbb
inc
mov
add
cmp
pop
ljmp
push
pusha
and
icebp
xchg
shll
idivb
sarb
enter
push
rcrl
shlb
dec
lret
insl
outsb
xor
lret
mov
ficompl
gs
pop
pop
dec
adc
mov
lods
adc
mov
test
xor
mov
adc
cmpsl
int
xacquire
repz
jl
mov
cmp
push
inc
jmp
cs
mov
mov
add
sbb
movsb
fistl
jns
mov
adc
imul
cli
xor
lret
pop
mov
out
inc
dec
sbb
aad
nop
lret
jle
xchg
and
mov
shlb
add
and
and
push
inc
movsl
iret
dec
mov
mov
pop
scas
dec
sbb
dec
stos
add
aaa
mov
mov
clc
mov
popf
inc
xor
dec
sub
sti
add
and
xchg
inc
sbb
dec
bswap
lds
sbb
mov
sub
iret
lods
cld
inc
loope
adc
addr16
inc
test
insb
mov
fcoml
dec
push
mov
int3
pop
popf
push
push
and
mov
jb
mov
xchg
out
jno
xchg
or
pop
lret
mov
imul
inc
stos
jmp
nop
imul
sub
cwtl
xor
repz
xchg
negl
cltd
loopne
inc
jecxz
das
lods
shrb
shrl
rolb
rcrb
push
xchg
cmpsb
adc
cmpsb
mov
lods
add
mov
fimuls
mov
lret
cmpsl
mov
pop
lret
daa
push
ret
xor
add
mov
lret
out
imul
mov
mov
push
and
and
shrl
testb
rcl
jne
andl
fmull
out
dec
enter
icebp
push
push
es
mov
add
mov
aaa
and
clc
lds
pushf
xchg
mov
clc
sahf
mov
popf
ljmp
dec
cmp
mov
mov
adc
js
cmpsl
xchg
xlat
push
insl
adc
xor
push
mov
or
pop
test
mov
and
jo
stos
sbb
in
shl
rorb
ret
mov
sbb
pop
sbb
mov
mov
jmp
cwtl
andl
lock
dec
xor
test
insb
xchg
std
push
and
cmp
inc
xchg
shl
lahf
fcoml
dec
cmpsl
dec
push
mov
pop
insb
push
setge
mov
inc
addl
test
int
fistps
pop
ds
add
sub
cld
sub
sub
gs
inc
test
cld
mov
inc
aas
dec
lea
sub
aas
rcll
adc
mov
mov
cmpsl
outsb
lret
aas
mov
aas
int
lock
out
push
lret
sahf
push
push
dec
dec
sbb
fwait
mov
aad
push
xor
mov
rcrb
fstl
icebp
ds
outsb
ss
loop
aaa
mov
loop
or
pop
sahf
xorl
mov
xchg
dec
mov
mov
xchg
pop
pop
insl
cmp
cmp
push
add
fsubs
frstor
scas
out
int3
and
lcall
jmp
daa
mov
hlt
dec
mov
and
adc
clc
pop
rorl
mov
sbb
mov
inc
fsubrs
pop
push
cmp
cmp
negl
mov
push
pavgb
arpl
loope
cmp
mov
and
scas
mov
bound
jmp
xor
fmull
sbb
xchg
mov
mov
adc
push
sti
add
in
arpl
sub
lret
rorb
dec
dec
cmp
dec
int
dec
inc
movsl
sub
iret
jp
ljmp
lahf
mov
xchg
push
inc
pop
xchg
push
push
mov
adc
cltd
aaa
xchg
or
scas
cmpsl
and
mov
xchg
dec
sahf
adc
mov
jl
adc
sbb
stos
mov
sub
outsl
mov
insl
ja
jg
out
call
dec
xor
mov
jno
insb
sarl
cmc
add
push
jne
iret
bound
mov
vaddps
push
lahf
addr16
flds
pop
aas
cmove
in
xor
inc
mov
std
insl
sbb
jmp
sbb
jle
jecxz
xor
cmp
add
vpcomud
insl
imul
mov
aaa
inc
sti
dec
fs
mov
xlat
into
lahf
cli
pop
xor
cmp
fiadds
mov
pop
cmp
scas
pusha
add
lock
out
into
dec
movsb
movsb
xchg
js
imul
fsubrl
insb
jno
scas
lea
repz
dec
lods
push
flds
adc
sbb
mov
ficoms
xchg
and
mov
jle
cmpsb
arpl
xor
dec
js
hlt
sub
adc
scas
popf
inc
movsb
mov
dec
aaa
dec
xchg
cmp
and
lods
daa
pop
mov
das
dec
fildl
lcall
xor
inc
mov
std
insl
int3
lahf
cld
pop
xor
sub
lcall
push
inc
stos
add
cs
out
add
dec
popa
fildll
pop
adc
pop
push
hlt
jbe
mov
shrl
cmpsl
pop
mov
test
pop
pop
pop
pop
shll
lcall
xchg
xchg
loope
mov
mov
addr16
jmp
dec
int3
xchg
fnstenv
das
daa
cmpsb
cmp
roll
pop
dec
sbb
jns
inc
dec
pop
out
popw
test
jge
in
lods
mov
cmpsb
lea
xchg
rep
cli
jle
shll
xor
fs
shrb
add
psllw
push
shr
sbb
pop
push
mov
popa
cltd
popf
enter
mov
pop
cmp
xchg
cmpl
insb
rcr
shlb
jp
and
scas
ljmp
xlat
jp
jecxz
sub
aaa
mov
andb
shr
lret
insl
addr16
test
inc
xchg
xor
and
or
mov
jle
xor
pop
cs
cmp
shrb
enter
push
mov
lret
iret
leave
in
shlb
ds
into
gs
test
in
push
inc
fwait
rclb
inc
sub
rcll
add
push
cmp
sahf
iret
mov
push
movsb
inc
dec
sbb
xor
mov
cltd
sub
mov
xor
or
ror
sbb
pop
imul
repnz
test
push
mov
enter
adc
push
mov
dec
enter
dec
das
test
xchg
push
sub
in
and
insb
and
jno
sbb
inc
aam
in
fistpll
call
inc
sbb
sbb
push
aad
fs
jp
aas
test
xor
sub
sahf
pop
push
xor
inc
xor
jmp
not
int3
cs
mov
xchg
dec
inc
push
mov
hlt
jecxz
mov
xor
add
je
sbb
dec
pop
xor
enter
inc
push
and
push
inc
lock
mov
dec
test
dec
jne
mov
int3
dec
leave
or
push
es
rorl
xlat
mov
in
daa
mov
popf
jle
inc
loope
lods
inc
lea
cmp
in
mov
jmp
repnz
pusha
adcl
cmp
xchg
lods
jno
mov
inc
adc
and
in
je
xchg
jo
xchg
xlat
aas
sbb
inc
sub
mov
cmpsl
mov
pop
das
xor
bound
movsb
aas
pop
adc
je
xchg
daa
adc
outsl
sub
cmpsb
mov
adc
mov
out
ja
mov
cmp
xchg
and
sbb
test
lcall
adc
mov
jns
mov
cmpsb
push
lds
xchg
fwait
xchg
enter
inc
and
jb
pop
and
bound
clc
inc
call
pop
and
sbb
xor
jbe
movsb
out
js
inc
dec
std
sti
das
inc
fsubl
lcall
outsb
jns
out
push
mov
dec
sub
inc
pusha
mov
pop
dec
sub
or
mov
es
movb
and
sbb
xor
sub
test
mov
shll
test
int3
loop
ror
ret
hlt
int
xor
push
push
fildll
push
cmpsb
and
imul
xor
mov
mov
jecxz
ret
add
cmpsl
jne
push
fstpt
shll
mov
sub
mov
pop
sarl
pop
adc
int3
dec
push
shlb
push
out
mov
push
mov
adcb
inc
testl
pop
cmp
push
daa
and
cmc
mov
mov
jp
loope
xchg
adc
mov
fwait
inc
or
inc
adc
dec
dec
dec
cmp
gs
sti
xchg
fidivs
in
mov
push
es
dec
cltd
and
push
xor
xor
push
mov
mov
fnstenv
sub
repz
flds
int
mov
or
outsb
repnz
mov
ds
cmpsb
gs
loop
movsb
mov
adc
testb
pushf
and
and
int
mov
add
add
addb
insb
mov
cmp
fwait
dec
gs
mov
lret
mov
dec
std
pusha
je
adc
jle
xchg
pop
push
cmpsb
adc
push
mov
jge
sbb
sub
arpl
dec
dec
push
daa
dec
loop
pop
pop
rcll
push
dec
fdivrs
push
xchg
adc
push
aaa
lea
mov
push
pop
xor
jle
pop
xor
sbb
aas
cmp
mov
mov
gs
push
cwtl
and
push
mov
sub
xchg
adc
test
ret
ja
add
push
sbb
je
cs
pushf
sub
dec
scas
cltd
sbb
es
dec
ss
mov
out
fs
xchg
rol
mov
xchg
mov
jecxz
sbb
pop
xchg
add
adcl
pop
pop
pusha
cmp
aas
add
jno
mov
mov
ss
dec
sub
jecxz
jno
js
adc
stos
daa
iret
fisubs
hlt
stc
ss
push
xor
inc
adc
xor
and
mov
inc
jne
das
xchg
imul
call
adc
lods
xor
xchg
int3
xchg
shrd
xor
pop
dec
aas
inc
scas
bound
and
jno
adc
leave
clc
mov
xchg
and
mov
pop
cmp
jns
out
repz
jno
jbe
add
popa
and
rolb
sub
add
mov
loopne
sbb
inc
scas
test
loopne
adc
aad
jo
arpl
mov
cmp
les
push
mov
inc
push
jmp
lahf
xlat
add
mov
jg
adc
xor
addr16
push
popa
sbb
pop
inc
mov
sbb
in
test
aas
ds
es
stc
ret
cmpsl
jecxz
ret
pop
inc
test
mov
cli
pop
cmpsb
pop
xor
test
int3
jo
jg
pop
adc
std
movsb
fsubrs
cmp
lods
push
and
cmpsl
lea
jle
test
out
in
cs
inc
adc
adc
in
clc
addr16
inc
inc
xor
out
cmpsl
xchg
dec
sub
rolb
ret
scas
test
cmpsl
mov
call
sti
mov
adc
mov
lds
pop
xor
dec
mull
and
sub
sbb
js
insl
push
lods
mov
xchg
jne
and
scas
or
shrl
xor
inc
dec
add
adc
ret
fsub
push
mov
dec
mov
xchg
adc
lods
jp
rolb
push
jns
or
mov
fwait
in
xor
lea
mov
sbb
push
mov
ret
xchg
sub
test
cmp
int3
lea
and
dec
lea
cmp
fiaddl
jns
mov
test
jle
ror
out
add
xchg
mov
xlat
or
dec
sbb
add
dec
mov
cld
and
sahf
inc
mov
ljmp
xor
xor
lods
ret
daa
addr16
in
test
xlat
jl
sub
mov
aas
xchg
jb
daa
adc
add
pop
aad
sbb
and
cmpb
sbb
cmp
leave
and
cmp
lahf
mov
repnz
dec
mov
push
jb
into
inc
cmp
sub
cmc
mov
xchg
aas
push
outsb
xor
stos
pop
fmuls
and
cmpsb
cmc
and
mov
fwait
addr16
xchg
mov
scas
scas
aaa
jbe
sti
dec
pop
mov
daa
add
mov
es
mov
fcoml
mov
cld
into
fildll
cmpsb
lret
daa
push
adc
andl
inc
gs
xchg
in
mov
sahf
add
xor
and
cmp
pushf
cli
mov
scas
cmp
jno
enter
movb
ret
add
or
test
push
mov
bound
sbb
pop
fsubl
ss
subl
push
outsl
cld
cmp
jmp
daa
mov
push
and
mov
into
sbb
lods
ja
sahf
mov
mov
jno
dec
test
and
lock
in
jns
inc
jg
jl
dec
je
jmp
adc
mov
cmp
aas
pop
pop
movsl
dec
in
and
test
jno
scas
lahf
push
xor
pop
xadd
sbb
subl
ret
jge
add
jmp
jmp
popa
in
out
out
and
xor
negl
mov
mov
xchg
clc
inc
add
mov
adc
lods
sti
inc
jne
jno
cmp
cmp
jmp
loopne
and
ds
mov
pusha
stos
insl
mov
les
inc
scas
dec
jo
mov
jl
mov
dec
and
xchg
ja
cmp
pop
jl
mov
cmp
in
inc
and
push
and
test
ret
mov
mov
mov
jbe
pushf
fnstenv
and
dec
lahf
arpl
jb
or
push
lock
mov
pop
add
mov
dec
push
mov
and
and
pusha
push
and
sub
aas
and
dec
les
decb
lahf
and
xor
imul
dec
mov
and
mov
nop
outsb
repz
xchg
inc
test
loopne
sbb
mov
loop
clc
cmp
and
push
pop
xor
and
aad
ss
and
rolb
push
dec
mov
pop
rep
cmp
pop
out
cwtl
movsb
hlt
cmp
out
or
arpl
call
dec
sbb
out
sarl
movsl
inc
pop
push
and
cmp
jae
movaps
add
jb
enter
cld
call
mov
pop
mov
lahf
inc
sbbl
inc
inc
shll
mov
xor
cmpsl
les
sti
sahf
nop
mov
dec
into
in
shrl
dec
das
out
mov
mov
cmp
fmuls
fisubrs
push
xor
dec
loope
pop
dec
xor
cltd
out
mov
insl
cli
xchg
mov
cmp
cmp
sub
or
push
scas
sti
insl
cmp
hlt
and
loope
mov
jmp
ljmp
mov
mov
cmp
sti
adc
in
mov
xchg
lea
dec
dec
ds
inc
add
movsb
clc
movsb
inc
insl
pop
sarb
dec
sbb
xor
cmp
lret
adc
mov
dec
lahf
clc
xor
mov
cmpsl
xchg
cmp
push
dec
xchg
out
popf
dec
ds
sub
cmp
aad
stos
add
je
pop
lahf
adc
incb
mov
sahf
jle
das
scas
dec
js
lods
dec
test
dec
jae
sti
mov
rolb
mov
cmpsb
lods
add
sub
xchg
sub
xchg
test
push
sub
aam
movsb
xchg
lock
pop
ficoms
jo
inc
arpl
and
mov
dec
icebp
dec
fisttpll
mov
xor
adc
dec
xchg
dec
jb
loope
testl
mov
and
imull
adc
cmp
sub
inc
aaa
mov
adc
push
in
xchg
xchg
vpslld
xlat
test
lahf
das
in
out
mov
add
mov
cmpsl
fdivrs
scas
sub
leave
mov
aas
insl
out
pop
imul
or
movsl
aas
shll
dec
xor
faddl
jnp
jecxz
mov
adc
int
mov
aas
cmpsb
pop
aad
hlt
es
ficomps
push
mov
scas
inc
mov
dec
mov
pop
sub
das
pop
mov
cmc
xchg
or
jp
ret
ret
nop
xchg
loopne
inc
daa
mov
mov
mov
xchg
in
or
sub
aas
cs
inc
push
imul
shrd
das
adc
out
rolb
jo
mov
xchg
mov
pop
movsb
add
xchg
or
movb
das
and
das
jle
sti
mov
lods
movsb
xchg
xor
or
lock
mov
test
icebp
cwtl
push
mov
mov
es
repnz
jge
xor
lahf
ds
imul
cli
sbb
pop
cmp
mov
mov
in
adc
jnp
cmp
lods
add
lock
cwtl
mov
or
xor
leave
xchg
int3
aam
jmp
mov
cmc
jnp
ja
and
aad
xchg
and
or
cmp
mov
fstps
mov
sbb
fcmovbe
add
movsb
mov
pop
jle
into
add
insb
xchg
int
push
jge
test
scas
stos
loope
push
clc
inc
stos
imul
lods
pop
loope
test
imul
cmp
dec
stos
dec
aas
imul
mov
mov
enter
mov
ds
cmpsl
cwtl
jle
xchg
cmp
insl
cmpsl
fnstenv
enter
mov
scas
cld
mov
movsl
or
adcl
jl
mov
pop
out
cmpl
dec
inc
aas
push
and
loopne
addl
and
jno
leave
pshufw
push
dec
aaa
and
scas
mov
xor
popf
ds
push
xchg
mov
clc
cs
fiadds
and
jmp
jo
pop
clc
sub
clc
adc
subb
ret
mov
mov
jp
mov
imul
adc
or
ja
sub
jecxz
mov
lret
ja
fwait
jnp
mov
push
inc
mov
mov
xor
cmp
push
into
adc
mov
pop
push
cmp
pop
mov
xor
shlb
pusha
jle
jle
sbb
inc
out
inc
into
into
es
mov
ds
pop
scas
call
jl
and
stos
mov
aas
jmp
scas
pop
popf
outsb
mov
imul
loop
adc
inc
inc
bound
dec
daa
flds
sbb
pushf
sub
fisubrs
outsb
int
hlt
sbb
in
jae
add
aas
popf
mov
data16
daa
pop
mov
pop
divb
shlb
ds
xchg
mov
mov
jecxz
orl
int3
lret
popa
gs
fiaddl
or
aaa
xor
jmp
out
scas
daa
cld
jecxz
add
and
fwait
rdtsc
nop
sbb
cmpsl
dec
dec
into
sub
xor
addw
push
bound
clc
cmpsb
pop
jmp
int
rcl
pop
nop
push
shll
ljmp
cwtl
sub
sub
jp
jecxz
push
sbb
xchg
xchg
and
mov
insl
std
and
mov
outsl
or
xchg
jbe
cmp
shl
daa
pop
fwait
test
jge
stos
arpl
pop
aas
or
ret
stos
inc
ja,pt
pop
popf
add
rorl
inc
xorb
popa
rcr
xchg
subl
mov
lea
add
push
jb
outsl
cmp
aam
stc
cmp
dec
add
xchg
in
mov
xor
mov
sbbl
scas
mov
inc
jle
cmp
xorl
or
adc
pop
push
push
cmp
mov
pop
mov
add
jnp
hlt
popa
loope
cmpsl
outsl
ret
mov
call
pop
adc
hlt
popa
sub
mov
push
cmp
bound
in
lods
xor
mov
lods
sub
fistpl
jmp
fs
fimuls
jnp
scas
jecxz
pop
in
adc
jp
dec
push
jl
fistpl
in
pop
jnp
mov
jge
dec
das
mov
mov
ret
fildl
xchg
cltd
mov
push
cltd
mov
mov
bound
mov
aaa
pop
movl
sbb
mov
adc
add
mov
mov
sbb
test
mov
lods
pop
in
outsb
jno
push
es
cmpsl
gs
pop
imul
add
adc
push
xchg
arpl
lea
and
xchg
inc
aaa
cmpsb
sub
les
outsl
or
jge
mov
xchg
or
mov
pop
test
loope
xchg
push
jbe
insl
and
mov
sub
lods
fimuls
cmp
xchg
xchg
and
jno
js
imul
cmp
flds
int3
femms
aaa
mov
shrl
sbb
jmp
sub
pushf
and
test
movsl
cmp
mov
adc
clc
add
adc
pop
das
mov
pushf
stos
pop
dec
push
cmpsl
or
nop
and
sub
xor
enter
and
popa
push
sbb
cmp
mov
mov
mov
add
mov
push
xchg
dec
out
in
jle
inc
xorb
rorl
jecxz
mov
leave
lock
aam
mov
inc
and
pop
icebp
and
jp
and
es
daa
es
cmp
pop
pop
das
fistpll
std
push
inc
and
mov
jecxz
xchg
sub
fdivs
sub
pushf
in
xor
add
mov
addr16
inc
imul
aaa
or
cmpsl
out
push
inc
push
mov
jle
pop
xor
pop
sub
mov
aas
out
inc
push
clc
dec
inc
mov
inc
pop
in
sub
insb
sbb
mov
push
sbb
scas
in
nop
dec
mov
into
mov
mov
mov
gs
jg
bound
inc
fmuls
adc
stos
and
dec
xor
psraw
int
jmp
pushf
fnsave
imul
and
jne
mov
cld
mov
stos
aaa
stos
inc
jnp
insb
adc
fisttps
pop
cmp
movsb
inc
je
lods
mov
jno
jno
aas
clc
popa
inc
movhps
cli
add
sub
movl
sbb
rcrl
pop
aas
in
inc
jnp
outsl
iret
addr16
sbb
dec
dec
sbb
inc
aaa
cmp
mov
and
outsl
shlb
sbb
jmp
inc
sarb
into
jns
inc
stc
ret
hlt
dec
rorb
js
pop
daa
push
mov
dec
mov
sbb
mov
push
hlt
and
pop
adc
fwait
pop
bswap
jl
add
sub
adc
subb
push
insb
push
jle
mov
mov
mov
dec
cmp
dec
rorb
xchg
insb
pop
push
jnp
cs
push
adc
pop
dec
cld
pop
jle
fisubrs
inc
mov
andnps
push
nop
pop
notb
cmpsl
or
mov
add
outsb
mov
repz
dec
andb
pop
mov
dec
outsb
fsubrs
ret
stos
sbb
cmpsl
adc
les
cltd
xchg
adcl
mov
aas
mov
push
clc
js
push
andl
xchg
cld
jmp
dec
insb
imul
xchg
lea
jl
gs
and
aas
nop
insb
adc
xor
or
data16
pushf
jle
mov
jg
xchg
jmp
movsl
insl
lods
loopne
in
jmp
test
mov
sub
mov
std
arpl
sahf
xor
fldenv
leave
pop
mov
cmp
cs
outsb
test
jnp
clc
outsl
out
ret
in
loopne
xchg
cmpsl
cs
cli
lret
mov
xchg
push
mov
bound
inc
in
jmp
mov
push
or
adc
pop
push
ja
outsb
and
je
and
jg
push
mov
xchg
jmp
cli
in
test
repz
dec
outsl
lods
arpl
scas
sbbl
test
mov
cs
push
xor
andl
jge
lea
fildll
scas
inc
xor
movsb
in
lea
cwtl
mov
imul
lods
fistps
inc
fsubrl
cmpsb
jge
mov
add
je
xchg
mov
cmp
mov
aas
test
imull
pop
xchg
cltd
xchg
xlat
aas
pop
jb
das
ret
filds
add
lods
pop
mov
les
push
ficoms
outsl
js
nop
shlb
mov
jp
lahf
sub
lea
cmp
push
cmp
js
dec
out
movsb
cmpsl
in
jle
mov
jmp
xchg
sbb
or
clc
push
mov
lahf
jbe
pop
arpl
insb
insl
push
push
xchg
cmp
jl
cltd
mov
pop
jle
pop
mov
pusha
sub
add
xor
cs
std
mov
mov
jp
scas
jmp
sarl
xchg
cwtl
sbb
je
jno
aas
and
mov
outsl
aad
dec
loope
push
repz
popa
std
pop
subb
in
inc
jne
cmp
js
mov
sub
adc
pop
xorb
mov
sub
xchg
dec
mov
lret
pop
dec
lea
jae
out
or
xor
dec
ja
call
fisttpl
dec
cwtl
add
and
pop
dec
sub
cld
testl
idivb
fs
clc
nop
or
or
dec
mov
pushf
sbb
loop
bound
mov
sub
lea
les
add
scas
xchg
repnz
inc
scas
pop
mov
pushl
movsb
ljmp
add
cs
in
pop
fwait
aaa
lock
jmp
lcall
lret
leave
enter
sub
mov
xor
int3
inc
xchg
adc
ds
fwait
pop
xor
pop
and
cmpsl
jb
addb
inc
jl
iret
cmp
ds
mov
ja
nop
subb
hlt
jb
fmull
jg
imul
repz
mov
dec
xor
test
xor
loopne
add
and
daa
jne
ljmp
aam
jmp
aam
outsl
jnp
mov
inc
mov
lar
mov
jecxz
jle
lahf
push
cmpsb
das
punpckldq
ja
test
mov
or
repz
inc
into
jge
mov
packssdw
in
add
push
in
adc
mov
xchg
push
dec
or
fisubs
pop
sbb
mov
jp
pushf
push
sub
cltd
and
arpl
loopne
push
pop
lds
cmp
ljmp
and
bound
ljmp
push
mov
mov
cmp
cmp
push
int
cmp
pushf
rcrb
cmc
lea
in
inc
jno
rolb
jns
and
cmpsl
fidivrl
ja
mov
jno
mov
std
mov
call
xorl
xor
clc
imul
sub
adc
mov
scas
insl
mov
sub
mov
jg
shr
call
sub
test
pop
jno
mov
cs
lcall
jb
sti
xchg
es
out
or
mov
loop
inc
iret
cmp
sbb
mov
pushf
bound
add
dec
into
mov
iret
nop
clc
mov
mov
dec
rorl
sbb
push
std
aas
scas
sarb
rep
inc
lds
dec
sti
inc
jnp
fildll
aad
adc
pop
lahf
pop
loop
mov
xor
jb
sti
sahf
addr16
mov
mov
mov
jnp
add
outsb
clc
test
xor
fdivrs
int3
mov
cltd
sub
inc
jnp
movsl
jge
stos
out
cmp
pop
jne
inc
dec
mov
jle
lods
cs
mov
jle
ret
imul
xor
add
movsb
xorl
xor
pop
push
pushl
outsb
insb
jnp
xchg
jge
cwtl
iret
stos
sub
out
or
pop
push
sbb
jae
shll
scas
popf
insb
out
in
or
mov
dec
aas
dec
cli
daa
in
nop
fs
dec
cmpsl
popa
jp
call
sahf
pusha
in
mov
add
sub
insb
jg
dec
pusha
in
cli
ja
cmp
cmpsl
mov
cmc
cli
movsb
imul
xlat
inc
inc
cli
dec
int
sti
jmp
cmpsb
jle
aaa
cmc
in
mov
jns
jno
adc
pop
cltd
jle
cmp
pop
inc
push
scas
xchg
fwait
and
push
into
push
sbb
sti
lcall
sub
test
and
out
fcmove
pop
sti
adc
adc
enter
popa
mov
outsb
cltd
inc
sub
add
and
addr16
inc
sub
ds
clc
or
lds
adc
or
mov
stos
popa
fdivr
mov
and
cs
ja
jg
imul
mov
push
lahf
pop
cmpsl
pusha
loope
sub
loopne
movb
addr16
lea
lahf
jmp
in
xor
shl
dec
mov
repz
popa
daa
jnp
lcall
pop
addr16
lods
mov
jb
and
call
ds
arpl
loop
or
pop
lock
add
jmp
out
fs
lods
mov
in
ljmp
and
mov
clc
shl
shr
inc
inc
xchg
test
mov
js
iret
push
int
push
lods
sbb
lcall
test
arpl
inc
loopne
jge
insl
cmp
fidivs
addr16
jne
ficomps
aas
xchg
cmp
mov
mov
fxam
lcall
jns
adc
cmp
pop
notb
lcall
idivl
dec
inc
popa
xchg
mov
xor
aam
pop
insl
clc
lods
and
scas
cmp
aad
xchg
and
sub
xchg
sti
les
mov
inc
jmp
cmp
cmp
push
das
adc
inc
incb
lret
test
gs
mov
adc
das
data16
sarb
cmpsl
rcll
loopne,pt
and
loope
jl
mov
sub
loopne
sub
sbb
test
push
es
into
xchg
push
mov
mov
xchg
data16
dec
dec
cli
xchg
jmp
xchg
repz
loope
scas
sbb
jno
dec
jecxz
cli
inc
xlat
les
and
mov
andb
dec
shl
push
das
dec
insl
mov
lods
mov
adc
repz
imul
insb
sahf
mov
xor
ja
dec
nop
cli
or
repnz
movsb
jb,pt
outsl
xchg
xchg
popa
repnz
mov
mov
add
popa
jge
mov
ret
mov
aad
inc
xchg
in
ss
push
mov
lcall
jb
ss
ss
mov
imul
and
cmpsl
shlb
fs
mov
int
dec
cmp
adc
inc
add
lret
ds
mov
cltd
or
sbb
adc
jno
mov
xor
add
sub
xchg
or
cmpsl
push
mov
mov
mov
jae
fs
mov
jmp
sub
cmc
cli
dec
pushf
mov
dec
jnp
addl
popa
pushf
jp
cmpsl
mov
push
jge
fisubrs
cmp
call
add
dec
dec
push
jecxz
aam
sub
pop
daa
bound
aas
cltd
jnp
in
push
aad
mov
cmp
inc
jle
push
into
dec
mov
and
mov
leave
leave
jns
mov
or
lea
mov
stos
call
cmp
jle
inc
sub
pop
call
cmpb
xchg
pop
pop
mov
jl
xchg
mov
or
pop
bound
mov
out
jge
adc
mov
xchg
and
stc
inc
mov
push
clc
mov
jecxz
or
xchg
xchg
mov
movsb
arpl
sub
scas
xor
mov
in
outsl
negb
mov
ds
sub
in
js
inc
in
mov
mov
inc
push
mov
les
mov
out
int
test
jecxz
or
gs
lret
push
aam
jnp
and
mov
mov
xor
push
push
push
push
mov
mov
sub
rolb
push
sti
adc
fdivr
ret
ja
rcll
jbe
outsb
shll
add
sub
mov
subb
push
fwait
cmp
aas
mov
jg
jle
fs
clc
sub
in
mov
cmp
and
cli
js
in
and
jno
mov
insb
pop
jmp
mov
es
and
mov
stos
push
jg
ret
adc
mov
test
movsb
dec
insb
sub
mov
dec
js
sti
sbb
mov
fsubl
dec
push
ss
or
push
inc
and
cmc
cmp
sbb
jmp
fmuls
out
cmc
lds
movsl
mov
xor
andb
pop
mov
outsb
insl
std
jge
add
adc
add
rclb
mov
roll
mov
enter
fsubl
cmp
stos
inc
ljmp
mov
rcrl
sbb
and
ljmp
iret
pop
push
inc
push
fmul
aaa
lea
pop
int3
cmp
stos
fdivr
dec
loop
movsb
dec
loop
cltd
arpl
popa
mov
mov
or
fs
scas
add
xchg
jbe
xlat
inc
inc
shlb
mov
not
add
movsb
cmp
test
lods
xor
std
xor
es
ss
xchg
push
mov
subl
mov
pop
out
jecxz
cltd
mov
dec
dec
enter
pop
xlat
dec
mov
ret
push
jnp
pop
push
cmp
fsubs
add
arpl
jmp
clc
jo
xorl
xlat
loope
out
aas
nop
pop
cmc
mov
bound
ds
fsub
pop
inc
push
lret
jg
cmpsl
jl
decb
clc
adc
inc
sub
push
ds
nop
in
ss
inc
and
insb
inc
fidivrs
dec
mov
scas
dec
lds
sbb
pop
mov
testb
add
dec
in
mov
in
cmp
sub
rolb
mov
dec
and
dec
outsb
fistpll
lods
mov
mov
shll
mov
in
cltd
xor
xor
xchg
pop
iret
xchg
mov
and
test
jo
test
and
icebp
mov
pop
mov
dec
jle
in
aaa
and
lea
add
jle
movsb
adc
inc
leave
roll
xor
gs
leave
movsb
aas
push
nop
lods
or
cltd
dec
fnstenv
mov
insl
cmp
jl
pop
leave
pop
inc
or
add
and
push
and
mov
and
mov
cmp
push
add
ror
mov
pop
scas
loop
jo
inc
xor
dec
stos
out
ret
or
pop
imul
mov
or
xchg
roll
jl
sub
inc
push
mov
push
cmp
jmp
jmp
in
inc
lahf
pop
out
xor
mov
aaa
into
and
mov
into
sub
ret
mov
stos
pop
add
bound
mov
pop
sub
es
das
popf
and
imul
loop
rcll
jmp
pusha
inc
test
mov
or
lock
adc
inc
push
ds
ficomps
mov
mov
add
fdivp
ss
syscall
into
xchg
xlat
insb
adc
push
and
push
rcrl
movsb
popf
into
mov
lret
stc
roll
push
in
jecxz
hlt
adc
pop
dec
in
dec
pusha
frstor
pop
add
push
dec
int
movsl
inc
lret
xchg
ljmp
mov
loop
nop
loope
hlt
sbb
or
mov
rcr
aam
pushf
lret
in
mov
mov
push
cmc
or
fistl
xchg
cmp
dec
hlt
mov
fs
fidivs
inc
fwait
scas
dec
jg
mov
jecxz
test
pop
in
pop
scas
and
inc
adc
cltd
push
jne
cltd
pop
popa
jmp
dec
movsl
cmpsb
mov
mov
sbb
lcall
outsl
jb
xchg
pop
mov
inc
scas
jmp
jb
push
or
push
popa
fs
fistps
imul
fisubs
loop
jns
into
jb
push
jo
mov
adc
cmp
mov
jl
pop
mov
pop
test
mull
inc
mov
outsb
daa
mov
pop
sub
cmp
and
dec
dec
ds
sbb
mov
clc
mov
jg
mov
cmp
push
push
int3
mov
add
pop
push
fnstsw
cmpsb
shl
inc
leave
cmp
inc
imull
pop
repnz
into
in
inc
std
aaa
mov
hlt
cmp
pop
iret
cmp
mov
cmpsl
clc
subl
mov
xor
dec
movsb
cmp
xor
jne
lret
repnz
add
inc
xchg
jne
dec
pop
cmpl
int3
decb
mov
mov
mov
add
call
xchg
mov
jbe
jge
fwait
add
inc
add
test
repnz
cmpb
jae
lsl
out
pop
in
and
bound
mov
repnz
fs
data16
mov
jo
loopne
test
push
fsubrl
fists
ret
fildl
xchg
push
cmpsl
in
mov
jle
cwtl
lret
cmp
or
cmpsb
pusha
and
pop
xchg
cmp
ljmp
add
add
leave
loopne
cmp
inc
cmc
cmc
xchg
pop
data16
fs
pusha
iret
sbb
mov
or
js
inc
lret
orl
sub
xor
sbb
lahf
outsb
std
mov
pusha
pop
add
mov
inc
or
int3
jl
mov
xor
cli
shll
cmpsl
inc
cmp
and
cmp
jnp
testl
cmp
inc
pop
stc
adc
jl
test
sub
and
aas
js
ss
hlt
mov
bnd
ficomps
nop
sub
ds
ror
lods
ds
das
sub
std
cmp
iret
rclb
add
adc
incl
arpl
inc
in
or
jns
pop
stos
add
mov
mov
push
adc
dec
pop
cmp
int3
lea
mov
mov
aas
inc
push
dec
push
rcll
jmp
test
cs
nop
loopne
xchg
add
pop
push
fists
xchg
fcoms
add
mov
int
sub
mov
push
inc
je
mov
sbb
ret
icebp
popf
fistpl
jbe
mov
jl
or
shll
mov
pop
mov
pushl
add
or
andl
ja
aam
and
orb
mov
stos
popa
fimuls
xor
jmp
adc
pop
jmp
loope
notb
xlat
or
mov
fdiv
or
inc
adc
loope
xchg
subl
cmp
adc
lods
mov
arpl
hlt
testl
test
inc
jle
stos
mov
and
in
stos
sbbb
xlat
pop
outsb
hlt
xchg
push
rclb
and
adc
jp
fistl
mov
and
or
dec
add
adc
cmp
mov
xlat
loop
mov
imul
cwtl
and
cmp
mov
arpl
nop
xor
jmp
add
xor
shl
out
jns
xchg
js
mov
popa
adc
and
push
jp
sbb
jae
add
xchg
pcmpeqw
mov
push
dec
lahf
arpl
inc
into
test
mov
jo
out
repz
inc
lret
jg
aad
jg
les
movsb
iret
cmpsb
movb
loop
mov
add
test
jecxz
orl
dec
pop
inc
add
rcrb
pusha
nop
sarb
dec
test
adc
cltd
jb
add
addl
mov
mov
inc
push
dec
into
jbe
loopne
xor
mov
xchg
and
xchg
inc
xchg
adc
pop
test
subl
sub
push
scas
cmpsl
pop
cltd
cmp
js
aad
sbbl
xor
sbb
mov
nop
test
inc
outsl
in
cmp
and
cmc
sarl
and
add
mov
repz
jp
mov
xchg
xchg
test
pop
lahf
add
or
fsub
sub
ja
scas
loope
cmpxchg
hlt
mov
icebp
pushf
hlt
sbbl
loop
mov
daa
push
dec
jns
lret
and
pop
shll
mov
xchg
mov
cmp
aad
les
es
xlat
xlat
push
insb
insb
ret
mov
leave
leave
mov
mov
sub
loop
jmp
xchg
jb
mov
out
jmp
cmp
icebp
dec
cmpsb
dec
cmp
loope
cmp
pop
jb
inc
das
cmp
movsb
push
cmp
sub
jbe
sti
xchg
add
ss
mov
jmp
cs
sarl
loope
dec
dec
mov
popf
dec
cmc
lahf
rcl
xchg
in
iret
inc
jnp
leave
imul
mov
test
jge
negb
cmpsl
and
rcrl
fimull
pop
pop
loop
mov
xchg
mov
mov
addr16
or
ds
pop
mov
int
pop
and
push
outsl
movsb
mov
ljmp
inc
inc
mov
sub
xchg
mov
mov
mov
jle
test
dec
out
add
orb
push
mov
dec
movsl
push
mov
hlt
xor
cld
lds
pop
lods
jmp
arpl
lods
scas
pushf
test
push
mov
test
in
fdivs
cmp
shrb
inc
or
ja
pop
add
xchg
lock
mov
pop
sub
mov
call
test
insb
addl
mov
cmpsb
int3
les
shrb
mov
ret
sub
inc
cmovae
dec
fs
daa
xchg
sbb
mov
mov
stos
mov
xchg
xchg
adc
lea
testl
popf
add
xchg
pmulhw
xchg
popf
dec
mov
mov
mov
fs
xor
adc
lret
cmp
add
inc
loope
mov
movsl
cmp
jnp
stos
call
lds
call
dec
sub
mov
nop
aas
inc
inc
rcll
test
call
wbinvd
loopne
enter
jmp
bound
cmp
and
dec
out
xchg
cmp
jle
xchg
fs
lret
mov
divb
pop
fcomi
mov
xchg
add
cs
iret
rorb
sbbb
fwait
je
pop
data16
fimuls
jp
sub
lods
sub
mov
stos
bound
loope
dec
in
negl
shlb
cmp
int3
and
ret
dec
sub
fsubs
mov
jb
dec
iret
sahf
aam
clc
js
mov
adc
mov
add
jle
cmp
pop
sub
jb
and
in
in
ljmp
push
ljmp
xor
and
sub
push
lret
sbb
or
outsl
les
outsb
out
adc
ljmp
js
test
ja
pop
jbe
xor
cld
inc
push
and
jae
push
in
or
mov
xor
pop
mov
cmc
cmpl
arpl
adc
xor
hlt
call
xor
loop
cli
pop
sbbb
imul
bound
aas
mov
rcll
sub
mov
es
xor
flds
repz
out
fstpl
movsb
or
sub
movsl
sbb
push
dec
or
imul
cmp
sub
dec
fdivrp
pop
push
call
ljmp
nop
pop
leave
mov
mov
lcall
cmp
add
mov
cmpsl
sti
or
lcall
insb
jmp
jp
ficomps
mov
push
mov
ret
cltd
pop
repnz
outsb
pop
nop
and
xor
shll
sub
dec
cmp
addb
adc
adc
and
pop
mov
bound
daa
ret
mov
mov
movsl
xchg
push
jbe
push
test
dec
mov
inc
in
cmpsb
mov
or
movsb
mov
repz
and
mov
sub
jle
orb
jmp
insl
mov
shl
mov
add
mov
xchg
ja
pop
jns
mov
imulb
icebp
dec
mov
push
mov
add
aas
cld
mov
mov
mulb
lret
outsl
iret
outsb
arpl
test
add
sbb
or
int
pop
jg
arpl
outsb
xor
outsb
arpl
popf
jmp
pop
pop
pop
out
cmp
mov
out
adc
fldl
and
pop
cld
xorl
les
icebp
ljmp
jmp
sbb
pop
mov
dec
push
ljmp
jno
mov
and
xchg
cmp
divl
xor
mov
inc
jo
lret
cmp
mov
in
sub
pop
icebp
and
ds
xor
mov
in
xlat
add
test
insb
or
mov
dec
mov
ja
dec
xchg
add
addr16
xchg
subl
xor
pop
stos
sub
nop
or
push
mov
add
fdivs
add
pop
jmp
hlt
fimull
fs
sbb
rcrl
fnstsw
in
mov
sbb
jmp
mov
insb
adc
xlat
xor
enter
adc
mov
or
sub
mov
xchg
push
xor
insl
pushf
cmpsl
push
push
jecxz
mov
dec
jp
dec
jno
cld
add
pop
scas
inc
xor
or
scas
jmp
addr16
imul
sbb
push
hlt
jmp
mov
fsubl
xor
lods
inc
sub
jo
jecxz
les
jge
daa
cmp
dec
jg
jae
cmpsb
add
in
movsb
lahf
and
or
adcb
sbb
jmp
inc
and
rolb
movsb
repz
add
mov
mov
or
inc
lahf
cmc
lds
out
add
xlat
xor
or
mov
pop
xor
negb
das
arpl
hlt
pop
das
scas
sub
mov
xchg
pusha
outsl
jl
adc
cltd
inc
shl
movsb
daa
pop
repz
or
inc
cmp
outsl
mov
xor
outsb
xor
xchg
lods
mov
shrl
int
into
xchg
push
in
enter
mov
jns
fdivs
repnz
jg
mov
push
pop
adc
sub
mov
and
lods
mov
cmpsl
jne
rcrl
out
test
and
inc
fimull
adc
lods
stos
lret
cmp
mov
mov
mov
pop
sbb
enter
and
cmp
xchg
sbbl
lcall
cmp
sbb
lods
int3
mov
jnp
sbb
addr16
lods
add
jle
inc
inc
jae
out
frstor
mov
add
adc
ja
inc
aaa
add
mov
jb
arpl
outsb
mov
cmp
add
xchg
push
xchg
pop
imul
cmp
test
inc
in
orl
testl
mov
in
aad
dec
pop
push
stos
jle
mov
sub
sbb
xor
mov
xor
cmp
outsl
push
push
jl
lea
add
popa
mov
and
cmp
push
aaa
jle
loopne
fidivrl
call
xchg
das
jae
dec
addb
fnsave
push
pop
xchg
into
and
dec
cmp
pop
mov
mov
mov
ret
iret
cmp
adc
out
cltd
and
cs
push
arpl
movsb
jecxz
jnp
nop
pop
les
push
mov
outsb
adc
xlat
lahf
add
ret
jmp
xchg
sbb
cwtl
call
rcrb
cmp
xor
into
in
call
daa
gs
sbb
outsl
sub
mov
lods
enter
cs
aas
xchg
ret
bnd
jno
cmp
push
pop
sub
xchg
pop
cmp
aad
cmp
clc
movsb
dec
pop
add
cmp
pop
dec
push
inc
adc
inc
sub
sbb
cmp
call
aas
nop
xor
sub
es
mov
loopne
adc
repnz
jp
mov
lea
adc
imul
pop
dec
add
scas
test
push
inc
dec
mov
mov
fidivrs
mov
cs
sahf
sub
xchg
test
rclb
inc
sbb
lods
pop
add
or
test
dec
jl
addr16
inc
dec
sub
ljmp
cmp
not
sub
cld
xor
subl
cmp
fucomip
aad
imul
xor
jbe
fisubl
add
adc
enter
dec
mov
leave
and
push
mov
push
lods
test
test
jmp
add
shl
fcmovnbe
scas
adc
lods
mov
adc
jmp
pop
in
test
dec
mov
sub
dec
xor
fs
xor
or
fldenv
aam
dec
push
es
int
and
ss
jb
xchg
cmp
das
aaa
fwait
sbb
stos
cld
add
cmp
inc
xchg
or
xchg
cmp
and
pop
jle
and
mov
mov
jns
arpl
repnz
mov
dec
jmp
shll
and
inc
shrl
add
inc
lock
fistpll
pop
ds
add
adc
xchg
sbb
mov
push
scas
mov
cmp
pop
lcall
fstps
push
fmul
mov
dec
cltd
adc
sub
jae
mov
out
aaa
dec
outsb
lock
out
and
lret
pop
decl
add
ja
ja
cmp
add
mov
or
mov
out
sub
sub
sub
ds
stc
push
pop
idivl
mov
sub
daa
mov
mov
testl
adc
int
jb
fisttpl
loopne
dec
scas
or
loope
sub
jge
adc
and
stc
dec
icebp
xor
pop
inc
lock
push
popa
rclb
nop
xor
popl
dec
outsb
adc
jne
xchg
repz
stc
xchg
jae
in
outsl
stos
cltd
scas
mov
dec
out
jnp
adc
cmp
push
cld
sub
lahf
sub
inc
mov
enter
stos
inc
outsl
dec
mov
cmp
mov
inc
lret
cwtl
or
ja
mov
adc
xchg
cmp
lock
lahf
mov
or
fdivl
cs
lret
movsb
xor
pop
and
xor
mov
pop
rcrl
fisubs
push
ljmp
jno
jecxz
cmpsb
imul
hlt
mov
icebp
stos
fcomp
mov
jns
mov
inc
xor
mov
pop
sbb
insl
ja
sbb
pushf
add
jecxz
xchg
outsb
ljmp
das
cmp
adc
cmp
repnz
mov
cmp
sub
dec
sahf
lret
cld
fldenv
repnz
fsubs
leave
test
mov
inc
es
mov
cmp
jg
jb
mov
test
cmpsl
inc
cld
pop
test
leave
out
lahf
fadds
and
jnp
adc
jno
sti
fcmovnbe
mov
daa
dec
cmp
mov
fwait
sbb
test
and
popa
js
mov
outsl
cmp
or
push
rcll
lods
jnp
sbb
mov
popa
dec
add
xchg
cmp
iret
mov
hlt
fs
sarb
mov
xchg
sub
lds
insl
lcall
jecxz
mov
cmpb
aam
aad
inc
leave
add
add
push
mov
adc
cmpsl
sbb
and
bound
sahf
shr
scas
adc
dec
popf
ja
and
and
ror
mov
lahf
push
cmp
aad
adc
dec
popf
sub
xchg
shrb
out
mov
jg
cmpsb
xor
adc
jno
stos
jle
mov
arpl
shrl
fcompl
mov
mov
mov
mov
dec
aam
inc
push
cmp
cs
jle
imul
mov
sub
inc
add
movsb
add
ret
push
sub
and
xchg
outsb
cmpsb
cmp
icebp
cmc
and
clc
rcrb
cmpsb
xor
cmp
shr
inc
cmpsb
movsl
mov
dec
daa
in
xor
out
mov
xchg
pop
dec
cmpsb
mov
xchg
jns
adc
int
cmp
jl
adc
and
xor
cli
mov
daa
sub
dec
shll
jg
jbe
add
sub
mov
loope
test
jg
jae
pop
add
bswap
jne
cmpsl
dec
shr
push
pop
in
lods
sbb
sti
mov
cwtl
mov
jne
sti
mov
mov
pop
adc
mov
dec
aad
enter
inc
imul
call
inc
cmp
fs
ss
cs
and
jg
add
out
sahf
cmp
jae
movsw
pop
cmp
adc
add
cmp
or
mov
and
pusha
or
adc
add
call
cmp
mov
push
nop
insb
loopew
mov
cmpsl
and
push
movsb
cli
jns
repz
loope
mov
mov
mov
lods
andb
testl
es
xchg
mov
mov
outsb
and
cmp
psubsb
bound
cmp
pop
mov
testl
fwait
inc
xchg
nop
mov
mov
pop
push
jb
push
pusha
adc
pop
loope
in
mov
andb
jno
cmp
cmp
imul
xor
lret
lods
pand
sbb
lret
mov
cmp
movsl
mov
cmp
cs
addl
int3
cmpl
mov
and
test
sbb
xchg
mov
mov
mov
addr16
insl
stc
mov
push
sub
lods
push
repnz
jp
cmp
dec
sarb
mov
add
cs
cld
sbb
cmpsl
add
dec
nop
mov
sti
and
out
mov
ja
inc
jne
jo
or
js
or
mov
ret
sbb
ret
inc
loopne
aam
test
jle
pop
addr16
cli
push
sbb
inc
sub
jecxz
mov
push
stc
xchg
xor
and
and
and
pushf
daa
mov
xchg
mov
dec
cmpsb
addl
daa
xchg
sahf
pop
shlb
mov
iret
cmp
mov
inc
int3
test
cmpb
inc
and
inc
in
fmuls
imul
lods
sub
cmp
out
or
imul
test
jg
clc
shld
call
cmp
push
jle
push
dec
jecxz
sqrtps
mov
xchg
jns
idivb
jnp
sub
cmc
xchg
fxch
mov
xor
movsl
scas
adc
mov
imulb
test
ss
jmp
js
mov
mov
jbe
push
adc
or
imulb
sub
lods
mov
int3
mov
ljmp
mov
sbb
pop
mov
xor
cmp
fdivs
js
cmp
fs
sbb
cmp
add
and
jp
cs
sarl
cmp
in
popf
mov
cmc
mov
xchg
xchg
fldt
aas
scas
jl
mov
xor
scas
and
mov
cmp
fisubrs
push
pop
dec
je
cld
jl
xchg
sbb
add
cltd
mov
nop
pop
jle
adc
push
stos
das
ret
xor
cmpsb
sub
imul
int3
and
xor
test
jb
loop
aaa
in
pop
xchg
mov
sahf
lahf
cmovae
pop
xchg
cmpsl
and
adc
jnp
es
sub
mov
cmp
add
hlt
add
mov
out
inc
cmp
cmp
jno
outsb
popf
iret
daa
sub
mov
mov
inc
into
sbb
mov
mov
outsb
add
sti
dec
mov
mov
outsl
rcr
popf
cmp
mov
xchg
aam
mov
daa
ss
and
mov
jl
pop
ret
add
sbb
test
xor
push
adc
and
mov
std
and
add
push
sub
int3
mov
daa
add
repz
cli
js
pop
mov
dec
xor
movsb
mov
ja
jl
cmp
in
sahf
fldenv
lahf
mov
inc
pop
ljmp
or
sbbb
outsl
xchg
adc
cmp
cs
xchg
sbb
push
inc
jecxz
xchg
repz
jo
mov
dec
push
in
cmpl
push
xchg
add
adc
pop
pop
ja
movsb
lcall
push
push
inc
cmp
and
psrlq
or
add
fcoml
dec
mov
dec
repnz
and
and
test
ljmp
push
pop
and
pop
andl
xor
nop
push
sub
mov
movsb
dec
adc
cld
mov
lds
loop
lcall
push
roll
add
dec
aaa
les
lret
outsb
mov
insb
les
jae
push
idivb
movsl
mov
fwait
scas
mov
nop
iret
xchg
jge
xor
test
xchg
lahf
addr16
jl
and
test
int
pop
aaa
jg
cwtl
push
loop
jne
dec
hlt
pop
movsb
or
pop
xchg
test
ja
mov
aad
cmp
xchg
mov
aam
or
xchg
xor
cmp
and
adc
stc
lret
xchg
mov
lods
sbbl
cld
push
data16
imul
pop
dec
dec
pop
xor
or
test
arpl
or
or
xor
or
xchg
shrl
repnz
test
push
cmp
or
dec
loope
xchg
inc
jmp
out
pusha
mov
cmpsb
xchg
iret
pop
nop
cltd
mov
mov
push
cmp
jo
inc
push
sbb
std
push
dec
or
cltd
in
mov
xor
insl
push
and
scas
cmpsl
aas
push
mov
sti
imul
lock
sbbb
cmpsb
stos
mov
sbb
fbstp
mov
or
sub
and
fisubs
cwtl
scas
cld
subl
test
in
mulb
mov
push
mov
iret
test
ret
jo
jge
inc
push
pop
cli
call
add
rcll
jns
sbb
jmp
xchg
add
mov
int3
push
cmp
jb
test
pop
int3
sbb
and
sub
fbld
int
outsl
pop
pop
push
scas
in
mov
lahf
mov
popa
daa
sub
sbb
cwtl
mov
daa
stc
push
fistpll
pop
cmp
or
jbe
xchg
jge
jno
or
xor
cmpsl
dec
stc
or
int3
outsb
push
pop
movl
and
inc
xchg
shrl
out
sti
jl
popa
jno
js
and
push
jae
aas
fidivrs
xor
jmp
loope
lock
addr16
pop
daa
arpl
icebp
add
popf
xor
cmc
insb
mov
pop
and
mov
push
mov
jg
cwtl
jle
dec
shl
ss
mulb
pop
mov
xor
sarb
mov
aaa
xchg
mov
mov
repz
lret
jmp
lret
mov
mov
pop
arpl
lock
dec
pop
hlt
mov
daa
incl
mov
and
add
int3
jno
jns
mov
add
push
movsb
push
test
add
ret
pop
inc
mov
jecxz
mov
pop
mov
movsl
pusha
xor
scas
rcrl
cmp
jnp
cmpsb
sbb
pop
cmc
fyl2x
sbb
cwtl
jl
insl
lock
cmp
insl
and
jg
and
sbb
push
jno
iret
cmp
add
xchg
xor
lods
imul
ja
scas
mov
cmp
push
mov
xchg
mov
pop
cmpsb
clc
or
std
or
out
cmp
loopne
outsb
fwait
mov
outsl
cmpl
les
sub
mov
adc
jo
lret
jg
sbb
pusha
push
xchg
push
shll
xor
and
hlt
xchg
outsb
sbb
sub
adc
pop
xor
lea
hlt
call
cwtl
test
mov
inc
xor
mov
or
sarb
dec
loopne
cmp
leave
mov
xchg
stos
cltd
push
les
pushl
shlb
pop
and
lcall
dec
inc
ja
jns
jg
mov
ss
mov
dec
js
jg
js
jmp
xor
out
xor
iret
cmp
jae
ds
out
lret
mov
scas
daa
inc
in
int3
push
leave
lret
jle
adc
sub
stos
leave
loope
add
repz
outsb
stos
jmp
dec
mov
push
cmp
cld
movsb
lret
outsl
push
sbb
les
dec
subb
andb
cmp
add
push
ss
scas
out
push
mov
mov
jb
and
or
inc
sub
cmc
xchg
in
addb
jle
dec
les
adc
lcall
cmpl
pop
mov
lret
xor
dec
insl
in
or
xchg
adc
int3
dec
ss
shlb
jle
jbe
push
xchg
addl
lds
fs
sub
jbe
mov
and
pop
jmp
sub
repz
pop
les
xchg
push
push
stc
andl
rcrb
iret
fmull
push
mov
dec
sbb
sub
sbb
es
sbb
xchg
outsl
popf
es
cmp
cwtl
xor
imul
out
xchg
push
cltd
sar
out
les
stos
or
bound
aas
or
cmp
or
pop
mov
gs
adc
dec
dec
jo
insl
icebp
cmp
dec
imul
inc
cmp
and
mov
xor
fsubs
push
js
daa
loopne
sti
jl
dec
mov
icebp
scas
orl
cmp
out
mov
mov
and
data16
inc
out
cmp
or
and
daa
nop
jl
aas
rcrl
push
inc
pop
jno
cmpl
lret
cmp
cs
and
cmp
dec
jb
cmp
mov
lcall
inc
adcb
int3
lahf
jl
loopne
mov
stos
or
fucomip
mov
mov
ja
jbe
pop
cmc
pop
sbb
mov
je
pop
test
xchg
or
mov
jp
ja
xchg
and
hlt
mov
scas
and
add
jecxz
fdivr
add
mov
cmpsl
mov
leave
lahf
cmp
push
fwait
lods
jb
fimull
arpl
mov
das
in
jo
cwtl
push
mov
js
es
jo
sahf
inc
add
push
daa
sbb
sbb
mov
cs
xchg
sub
movsb
fsubs
lcall
mov
frstor
lret
xor
imul
in
movntps
xorb
cmp
stos
mov
mov
test
stos
popf
and
stos
mov
mov
mov
pop
leave
push
pushf
fistpll
pop
pop
sarl
out
bound
scas
mov
push
and
sbb
les
or
mov
shl
mov
loope
lock
insb
pop
xchg
lret
mov
cld
adc
sbb
popa
xor
inc
outsl
stos
lea
inc
adc
pop
mov
aad
out
arpl
or
mov
test
cmovnp
inc
lcall
mov
and
xor
inc
pushf
xor
jnp
push
adc
adc
gs
daa
ror
aaa
adc
es
fld
lret
in
roll
outsb
in
movsb
and
iret
push
lock
xchg
inc
sahf
mov
fsubl
push
adc
or
xchg
xor
sub
out
xchg
inc
pop
popa
pop
and
vpackssdw
inc
enter
in
imul
xor
out
mov
fildl
sub
and
js
jns
mov
ja
sbb
dec
dec
lods
sub
lcall
repz
test
adc
in
iret
outsl
sbb
js
cmc
dec
pusha
arpl
bound
cmp
adc
jp
loope
pop
push
or
test
lods
mov
out
shrl
in
mov
ud1
mov
xchg
in
xchg
mov
and
aas
jecxz
pusha
mov
jle
fs
outsb
js
into
ret
or
jge
popf
je
dec
rorl
js
xor
cwtl
pop
jno
stos
repz
call
sahf
int
jge
mov
dec
push
xchg
movsl
shrb
in
gs
lahf
mov
or
xlat
dec
dec
cmp
insb
push
bound
or
icebp
arpl
jns
orb
add
jle
lret
xor
sub
or
jbe
sub
cwtl
rcrl
or
push
mov
imul
cld
mov
inc
jp
pop
in
xchg
ja
lods
inc
and
insb
mov
sub
insl
xchg
and
pushf
aad
test
mov
cs
shrb
cmpsl
add
rcr
pop
push
sarl
dec
data16
in
cld
stc
sub
pusha
mov
cs
xchg
lea
movsb
xchg
and
mov
sub
fwait
mov
mov
dec
gs
lcall
xchg
popa
inc
sarl
mov
mov
lds
mov
jg
out
push
add
shll
call
lods
mov
in
pop
pushf
into
into
inc
aad
cmp
test
shll
in
sub
and
pusha
dec
xor
out
sub
shrb
dec
dec
inc
repnz
mov
test
mov
out
mov
loopne
lahf
in
sub
sbb
or
add
scas
or
lds
jp
orb
push
inc
test
and
add
sbb
jne
movsb
mov
push
inc
cltd
inc
mov
xor
jnp
jo
jno
in
arpl
loop
or
xor
pop
xchg
popf
dec
cs
xchg
aam
inc
icebp
mov
add
jnp
sub
test
push
xor
loopne
in
lods
mov
xchg
mov
pop
movsl
adc
pop
xor
bnd
sbb
pushf
test
shll
lods
out
lods
outsw
ja
leave
ret
cmpsl
testl
test
call
mov
cmp
clc
push
cli
push
mov
dec
add
out
and
adc
xchg
fisubl
in
addr16
outsl
cmp
jle
in
dec
mov
lds
fbstp
push
cwtl
inc
add
and
inc
cmp
lahf
jg
mov
or
loop
fwait
and
push
lods
mov
movsl
pop
cmp
fiaddl
cmpsl
sub
and
push
stos
outsb
mov
xchg
mov
data16
leave
inc
cmpsb
call
testb
xor
jge
fdiv
pop
int3
mov
shl
mov
inc
jecxz
mov
lret
mov
adc
and
push
imul
jnp
sub
inc
or
std
jo
icebp
decl
punpcklwd
bound
dec
sti
daa
pop
mov
dec
shrl
or
fnstcw
dec
lea
sti
daa
push
jbe
push
xchg
fwait
adcl
dec
jmp
mov
aaa
push
imul
jae
push
push
or
int
and
ds
cltd
mov
sub
push
cmp
aam
push
jmp
push
cmp
ja
popa
xor
cmp
push
int3
and
insl
cli
pushf
xchg
mov
mov
push
xor
add
loopne
or
mov
idivl
push
mov
shlb
call
xchg
jl
outsl
idivb
arpl
cli
xlat
jle
scas
fidivl
xchg
xor
and
jne
or
jne
inc
mov
nop
xchg
or
je
cmpsl
cmc
dec
in
and
stos
mov
mov
mov
push
xor
inc
leave
into
jl
pop
loopne
fstl
das
jmp
in
push
gs
popf
imull
in
insl
push
aaa
shrl
nop
pop
push
pop
fcomip
xlat
jns
push
xor
push
jae
stos
mov
mov
aad
enter
bound
mov
pop
stc
jnp
ret
dec
inc
fdivrl
jno
cmp
lret
pop
and
push
sub
lea
mov
outsb
ss
mov
cmp
in
roll
mov
mov
scas
and
addl
loope
mov
adc
cmp
mov
out
sbb
inc
and
nop
xor
icebp
push
mov
jno
loopne
sbb
push
mov
rcr
aas
cmp
sub
cld
pop
imul
enter
pop
pop
xchg
out
mov
sub
and
out
jle
dec
mov
mov
addr16
subb
xchg
rclb
fadd
mov
pop
cmp
or
fcoml
shrb
lea
add
pop
insb
adc
rorb
push
shlb
fs
popa
xchg
inc
inc
pop
std
push
jmp
pop
dec
mov
mov
add
ljmp
inc
xchg
or
pop
jno
fwait
dec
sbb
bound
push
and
das
sub
jne
cs
lahf
iret
dec
fidivs
repz
test
aam
cmp
jl
int3
jo
andl
out
jmp
lahf
bound
xor
and
mov
aad
and
xor
xchg
or
sahf
clc
mov
arpl
shl
xchg
inc
jle
push
add
lret
faddp
fucomi
xor
into
stc
adc
mov
pop
test
add
mov
fnstcw
push
mov
test
movsl
dec
aam
bnd
sahf
sbbl
call
mov
lcall
mov
adc
dec
dec
in
jge
lds
insl
mov
imul
xchg
cwtl
cmc
fsubrp
sub
xchg
rclb
outsl
pusha
mov
gs
fiaddl
mov
das
mov
jp
jbe
sub
arpl
pop
movlps
sub
sub
mov
dec
sbb
sub
hlt
xor
mov
mov
push
pop
test
dec
xor
clc
xchg
jne
lcall
lahf
jle
gs
jno
sub
mov
cmp
stc
inc
xchg
pop
insl
nop
repz
and
dec
cmpsl
mov
xor
pop
fdivs
shrl
jo
sbb
out
push
mov
js
push
enter
sbb
inc
cmp
ret
and
icebp
cwtl
out
mov
pop
pop
roll
addr16
movsl
push
cmp
jecxz
ss
xchg
aaa
dec
je
jmp
xchg
in
in
cltd
xor
jp
leave
aad
or
fnstenv
mov
pushf
dec
inc
pop
add
sbb
pushf
push
gs
and
mov
ljmp
or
imul
clc
shll
dec
mov
xchg
push
sbb
fsubl
movl
jg
std
iret
in
mov
xlat
jecxz
mov
aas
dec
mov
mov
lret
stc
mov
enter
rclb
add
scas
push
loop
test
subb
stos
cmp
rcrb
cmp
inc
sub
outsb
sub
pop
sbb
pop
cmp
jmp
dec
sub
je
mov
jmp
xchg
lahf
dec
mov
mov
add
pop
lods
inc
mov
pop
jno
lahf
mov
in
pop
stc
cmp
les
sub
cmc
jl
adc
inc
fistps
cmpsw
mov
lock
add
testl
jmp
push
lock
xor
dec
pushf
cmp
lock
inc
loope
popf
bsr
push
lods
call
inc
adc
adc
lods
shrl
std
loopne
and
mov
xor
iret
mov
jns
mov
jecxz
cmp
fbld
sbb
jns
xor
mov
inc
sbb
cmpsl
and
sbb
dec
aaa
or
mov
pop
lahf
test
sub
mov
mov
mov
mov
inc
push
lods
inc
movsl
dec
scas
mov
sub
push
push
adc
arpl
lods
int3
pop
fisubrs
jno
les
mov
jb
xchg
pop
inc
lret
or
stos
enter
enter
std
repnz
xchg
pop
mov
mov
add
push
fadds
das
lahf
ss
test
pop
dec
xor
xlat
mov
push
mov
fidivrl
test
fwait
push
pop
add
mov
cmp
sbb
int3
mov
fwait
sub
mov
cmp
in
cmp
int
adc
inc
mov
fstps
xchg
leave
cmp
js
or
scas
clc
dec
lea
sbb
and
jb
sbb
sbb
mov
je
xchg
lret
idiv
ret
pcmpgtd
xchg
inc
mov
xor
jno
outsl
mov
mov
pop
adc
out
xlat
mov
fsubs
xorb
or
jae
mov
mov
scas
sub
sub
rol
outsb
xor
imul
pop
inc
xchg
xlat
pop
shl
in
lods
xor
mov
add
lods
jno
scas
insb
stos
sub
pop
shll
out
inc
movsb
iret
dec
or
movsl
mov
mov
ss
xchg
mov
sbb
test
sub
sahf
sub
mov
xchg
pop
pushf
movsb
mov
jl
or
inc
dec
insb
movsb
stos
jo
inc
pop
jmp
enter
push
mov
fldcw
and
ret
add
sti
pcmpeqd
int
inc
movsl
pusha
out
add
scas
mov
mov
bound
test
pushf
movsl
xchg
xor
stos
inc
push
je
push
mov
push
cmpsl
mov
inc
mov
push
imul
bound
mov
adc
mov
pop
jl
fs
sahf
cmc
mov
cmp
and
js
sahf
clc
xor
jo
mov
arpl
cmp
jnp
inc
imul
mov
mov
mov
stc
push
sub
sbb
jecxz
cmp
dec
popf
bound
rclb
and
push
or
je
loopne
ja
cmp
pop
imul
mov
xchg
cmp
adc
sub
pop
adc
lds
out
lret
addr16
mov
testl
cli
sub
ret
imul
jle
and
xchg
dec
mov
subl
in
mov
imul
pop
lret
orb
xchg
adc
mov
dec
int3
jg
or
out
xchg
ja
test
adc
fwait
shl
nop
shrl
aad
adc
and
mov
popf
test
test
mov
jle
xor
push
xchg
mov
test
add
aas
xchg
test
imul
push
jae
shll
xchg
and
jl
mov
fistpll
push
out
add
iret
pop
ja
mov
arpl
sbb
sbb
xchg
sahf
dec
sub
clc
in
and
mov
es
cld
mov
inc
ljmp
adc
fldenv
xchg
sub
test
lcall
lock
scas
adc
pusha
xor
addb
adc
scas
sub
lret
jl
ljmp
push
or
jb
and
jns
mov
addr16
dec
negl
push
cmp
push
or
mov
fldcw
jns
jg
mov
and
push
mov
push
xor
mov
pop
cmp
push
shl
fidivs
xor
xchg
add
outsl
or
pop
mov
cld
lods
rolb
dec
xor
std
sub
adc
mov
or
add
xchg
int
dec
mov
jecxz
pop
add
lret
mov
movsl
cld
jnp
lock
lods
enter
xor
push
mov
dec
mov
data16
out
std
mov
stos
les
imul
cmp
cmp
repnz
mov
push
mov
push
cmp
or
push
and
sub
add
sub
imul
xchg
bound
scas
cmp
sub
or
add
jne
bound
cmp
xchg
scas
adc
mov
mov
xor
adc
adc
cs
movsl
inc
jns
lock
stos
cmp
loope
fisubl
jns
iret
add
sbb
jecxz
lock
out
push
dec
stc
test
inc
jp
inc
daa
mov
les
clc
xchg
out
sbb
scas
cmp
add
xchg
jl
jb
inc
fisttpl
adc
jg
imul
in
aaa
or
push
pop
fwait
lcall
into
sbb
les
inc
fmull
std
dec
xchg
pop
xor
fsubrs
xor
jae
push
je
nop
jo
add
xor
cmpsb
xchg
xor
lods
adc
in
stos
xor
add
insl
and
in
xor
inc
add
fwait
fwait
push
mov
push
cmp
test
jg
push
push
enter
adc
and
sub
push
pop
adc
into
push
add
ljmp
sub
adc
aaa
pop
or
fcoml
inc
shll
mov
jb
push
lret
popa
jmp
repnz
mov
negb
js
shl
push
add
pop
lret
and
cmpl
jp
xchg
stc
fistps
mov
enter
aaa
or
punpckhdq
dec
adc
mov
cld
xor
mov
jne
jge
and
adc
mov
mov
out
sub
test
sub
shrb
jns
cmc
jp
or
pop
mov
xchg
lock
aad
mov
sti
insl
in
xchg
cmpsb
push
xchg
ss
push
ret
sub
and
outsl
stos
xor
xchg
test
mov
cmp
mov
cld
dec
mov
movsb
push
mov
xchg
mov
sub
out
or
xchg
xchg
pusha
sub
pop
test
mov
les
jecxz
and
les
mov
frstor
aaa
xor
dec
mov
or
xor
add
das
adc
inc
and
lret
push
mov
ja
adcb
std
xchg
int
xchg
xor
stos
xchg
pop
xchg
xchg
je
aam
loope
add
sqrtps
xchg
push
jl
loope
outsb
xchg
jg
lods
in
ds
mov
imul
xchg
pop
dec
push
sbb
pop
lods
rorb
aad
jg
arpl
mov
xorl
xchg
mov
scas
mov
sub
jnp
jle
xor
mov
in
movsl
mov
aaa
adc
mov
lahf
mov
inc
mov
call
xor
jnp
outsb
repnz
sub
lods
stos
movsl
movb
mov
sbb
mov
imul
test
aam
nop
ret
aaa
gs
setle
push
dec
rorl
repz
ds
cmpsl
stos
test
xor
jae
movsb
and
lcall
shll
nop
sub
mov
jo
in
jne
aaa
mov
adc
sbbl
mov
sbb
fwait
test
std
subl
and
mov
dec
jnp
pop
mov
pop
cmpb
imul
test
and
mov
push
addr16
push
sub
sub
sub
or
and
imull
mov
mov
lods
inc
ror
leave
fsub
dec
test
or
inc
lock
lods
insb
cmpl
push
loop
ffreep
pop
les
imul
mov
xchg
and
filds
adc
push
mov
cmp
mov
xor
dec
dec
scas
jb
rorl
mov
scas
dec
jno
push
enter
in
jo
call
mov
andl
cmp
or
jle
movsb
clc
out
push
pop
mov
pop
mov
ljmp
cmpsl
rcl
aam
mov
dec
or
js
dec
or
cmp
cmp
push
mov
cmpsl
xchg
dec
mov
mov
ss
fwait
sub
daa
lods
movsb
sti
jmp
mov
mov
out
fisttpll
mov
push
fwait
pop
std
push
insl
mov
lcall
adc
out
xor
out
pop
mov
cmp
pop
xchg
cs
mov
lahf
cmpsb
fcmovnb
xchg
mov
inc
jmp
mov
xchg
imul
pop
push
mov
push
insb
mov
outsl
cmp
dec
cmpsl
out
repz
sub
insb
fmull
repnz
or
lods
fwait
inc
jp
lahf
xor
and
test
dec
push
jp
inc
mov
cwtl
mov
jmp
jns
sbbl
lods
test
loop
sbb
cmpsb
pop
inc
outsl
scas
dec
sub
jmp
mov
or
shrl
pop
push
mov
stc
call
imul
fistl
xchg
add
mov
jg
lret
mov
add
test
sub
and
inc
fisttpll
scas
xor
ss
mov
or
push
loope
dec
mov
out
jb
cmp
mov
lahf
scas
lcall
incb
je
inc
scas
mov
test
cmp
rcrb
mov
arpl
dec
aam
jg
jno
popa
lea
cwtl
cmp
insb
shll
cmp
out
roll
sub
push
out
mov
movsl
call
xchg
dec
lret
inc
jge
jne
insb
imul
daa
mov
mov
mov
push
cli
push
or
ja
lock
dec
xorb
popa
pop
or
mul
popa
test
pop
stc
push
dec
cmpsb
xorb
out
mov
fsts
mov
call
mov
mov
std
test
xchg
adc
subl
xchg
and
movsb
mov
or
ds
je
lret
scas
sbb
and
cmpsl
mov
add
xchg
xchg
sub
and
sub
ss
add
xor
cltd
mov
lahf
inc
mov
mov
pop
pop
jo
imul
lds
add
stc
cmp
xor
push
inc
int
xor
pop
inc
repnz
movsb
pusha
loop
xor
jno
mov
sar
push
movsl
mov
xor
lahf
fdivl
repnz
sbb
jb
sahf
cmpsb
pop
and
pop
addl
in
cs
fldcw
mov
mov
xchg
sub
xor
inc
jne
mov
xchg
dec
insl
xor
pop
sub
jle
es
or
cmp
and
jo
ljmp
jmp
push
sti
pushf
jp
pusha
jmp
push
or
xchg
dec
daa
cli
lret
push
dec
mov
into
push
rorl
push
mov
xchg
ds
lock
mov
fidivrl
xchg
cmp
push
insl
shrl
jp
int
repnz
mov
pop
out
fsub
jo
dec
push
hlt
cltd
cli
into
jg
js
in
mov
ds
mov
push
sub
cmp
mov
incl
lahf
nop
jle
dec
mov
adc
sti
into
mov
cwtl
mov
andb
loop
pop
mov
popf
sbb
jl
pop
arpl
mov
mov
sub
stc
cltd
mov
pop
add
test
and
mov
mov
mov
loope
ds
mov
and
nop
and
jmp
imul
and
pop
cmpb
xorb
sub
pop
push
or
mov
mov
jns
ljmp
push
movsb
mov
and
cmp
ja
scas
mov
and
push
fldenv
mov
loope
cwtl
add
hlt
jecxz
sbbl
pop
mov
and
movsb
imul
pcmpgtb
imul
fldl
dec
mov
jne
idivl
stc
sahf
lcall
movsl
in
shll
dec
es
mov
mov
pop
or
mov
pusha
in
popa
out
pop
sbb
cmpsb
insb
gs
fldcw
sti
addr16
cmp
jae
mov
pop
rorb
push
sarl
test
cld
mov
xchg
in
xchg
cwtl
test
cs
adc
int
mov
xchg
pop
out
mov
test
adc
dec
xor
out
mov
cmp
sarl
loop
mov
fldl
fs
negl
pop
push
push
daa
or
cmp
daa
and
enter
dec
xchg
stc
dec
inc
jl
xchg
jae
divl
lahf
xchg
push
lahf
dec
shll
cmp
mov
stos
daa
out
and
ss
cltd
jne
imul
and
sbb
and
sub
ljmp
jecxz
push
sub
movsb
sbb
fisubs
push
or
mov
outsb
lahf
gs
cmp
in
and
out
xchg
dec
pop
cmp
or
out
in
test
ret
jmp
push
mov
xor
jnp
sbb
out
mov
add
xchg
enter
dec
clc
icebp
cmp
cs
sub
sbb
in
jbe
gs
push
or
push
sub
xchg
out
aaa
js
adcl
mov
inc
sahf
int3
iret
insl
fcoml
sub
lods
sarb
mov
and
aam
flds
or
and
adc
aad
sti
pop
mov
or
add
dec
sbb
jns
rep
mov
fs
in
enter
sbb
pop
loopne
je
mov
popf
in
in
push
mov
mov
or
into
sub
cmp
cmp
ds
daa
or
mov
cmp
inc
and
pop
mov
pusha
lods
or
fwait
in
jmp
lock
mov
pop
cmp
test
mov
push
push
adc
imul
add
stos
xchg
aaa
aas
int
jg
mov
sub
sarb
add
ret
xor
fstpl
cld
pushf
lret
xor
repz
imull
andl
xchg
movsb
and
push
in
inc
jae
andl
pushf
jne
push
or
mov
in
adc
bt
dec
cmp
add
scas
lds
mov
sub
and
pop
clc
lods
sub
mov
sub
lret
in
fwait
lret
mov
cmp
fs
mov
xchg
mov
int3
dec
int3
inc
pusha
lods
mov
js
sub
arpl
mov
movb
popa
pop
es
iret
inc
popf
mov
sbb
jmp
sub
xchg
xor
nop
inc
or
pushf
inc
push
pushf
test
dec
add
jb
jmp
fwait
loop
and
es
dec
mov
mov
cmpsl
add
lahf
and
adc
mov
mov
sub
lock
and
mov
addr16
out
mov
in
xlat
icebp
sub
scas
leave
jg
push
and
fidivrs
mov
les
add
stos
adc
sbb
jge
stos
mov
mull
popf
es
add
cmp
js
cmp
loope
lea
mov
dec
lock
dec
mov
mov
out
lret
jne
jbe
in
fwait
push
add
inc
or
jo
nop
push
xlat
or
gs
roll
cli
fstl
pop
iret
loope
and
in
mov
pop
imul
sub
dec
jge
sarb
mov
mov
pop
out
xlat
mov
pop
in
mov
aam
or
jo
jne
and
xor
cwtl
sbb
xchg
dec
cli
mov
stos
xor
mov
dec
sti
pop
in
inc
jmp
and
shrb
cmpsb
ds
pop
stos
inc
test
or
iret
cmp
mov
add
je
std
sub
and
loop
popf
xor
pop
insb
mov
loopne
mov
in
cmc
aas
test
inc
mov
clc
repz
mov
xor
mov
pop
in
mov
cmpsl
pop
test
fcomps
inc
pop
pop
std
sahf
inc
scas
mov
xchg
and
mov
jnp
push
xchg
dec
push
mov
xlat
mov
sarl
cwtl
and
scas
mov
ds
jo
pop
add
and
cmp
pop
dec
pushf
int3
jbe
pop
std
and
mov
jmp
in
ja
lds
mov
shrb
das
cli
xlat
jae
push
pop
cmp
sub
cs
stos
adc
jecxz
push
jmp
std
lods
test
lods
adc
andb
loopne
scas
test
pusha
stc
push
movsl
mov
jle
cmp
incl
mov
scas
sub
loop
push
cmp
outsb
leave
fsubrl
sub
ljmp
popa
adc
ja
mov
imul
xchg
dec
popf
pop
shll
in
and
xchg
dec
lea
inc
mov
inc
xor
popa
dec
pop
and
dec
dec
mov
subb
addr16
cmp
sbb
and
insl
mov
pop
repnz
dec
sbb
aas
ljmp
scas
or
mov
addb
daa
pusha
cmp
fsubp
arpl
add
out
imul
cmp
push
or
lods
push
pop
sub
mov
ds
fisttpl
mov
movsl
loop
rorl
push
sbb
cmpsb
lock
add
add
popa
pop
xchg
test
popf
cmpsl
mov
or
push
bound
aam
addr16
repnz
inc
ret
scas
dec
dec
add
insb
adc
cltd
sub
data16
mov
xorb
sub
mov
shrl
or
ss
test
aas
add
fwait
out
sbb
out
xchg
cmp
sbb
pusha
or
cmc
xchg
addr16
mov
inc
aad
mov
mov
fnstcw
out
cli
cs
in
outsl
push
cmpsb
aad
sub
cmp
in
jbe
je
push
pop
pop
push
jp
popa
xchg
mov
adc
stos
fisubrs
push
mov
sub
arpl
dec
cmp
adc
mov
jmp
ds
out
leave
hlt
loope
mov
lds
push
dec
fidivs
popa
cld
repz
jecxz
dec
adc
adc
xchg
lods
add
mov
jnp
jns
sub
xchg
jo
rcrl
mov
xor
mov
mov
add
add
push
pusha
popf
jg
dec
or
sarl
add
dec
mov
test
mov
enter
lds
cs
daa
imul
inc
pushf
test
xor
clc
sbbl
leave
outsl
imul
mov
fiadds
inc
inc
and
addr16
push
insb
sub
into
xchg
push
std
jmp
cmp
js,pn
cmp
jg
sub
mov
mov
mov
cmp
dec
and
cmp
cmpsb
dec
arpl
adc
mov
fldenv
and
pop
cs
cmp
lcall
mov
mov
inc
repnz
jmp
mov
mov
ja
push
cmpl
pop
pop
pop
ds
cld
xlat
and
repnz
cmc
pop
cmpsb
mov
xchg
repz
adcl
xchg
cwtl
mov
into
int3
ljmp
mov
dec
in
data16
cs
fisubrl
sbb
jle
mov
add
xor
in
and
stc
enter
insl
and
mov
in
cs
stos
fidivrl
jge
dec
movsl
cld
pop
rol
jbe
jbe
pop
pop
gs
dec
dec
movsb
mov
xor
mov
pop
sarl
adc
xor
rcrb
test
movsb
pop
imul
pop
test
mov
mov
cld
int3
xor
fdivl
cmp
cltd
mov
dec
test
mov
cmp
mov
mov
and
push
jp
dec
xchg
movsl
movsb
lret
leave
and
out
jae
and
lds
lods
sbb
stos
sub
inc
test
lods
cmp
movsl
mov
jae
cmc
sub
pop
mov
daa
and
xor
mov
pop
subb
into
mov
jl
inc
xor
loop
vpsignd
adc
jnp
fistpl
pop
push
cmp
movl
ss
leave
or
out
ret
xchg
mov
sti
mov
bound
jl
mov
in
outsl
js
scas
adc
stos
mov
sub
cmc
mov
mov
mov
dec
dec
std
pop
mov
pop
movsb
and
cmc
movsb
in
lret
leave
fs
inc
add
push
mov
cld
imul
pop
mov
dec
cmp
jg
nop
pop
es
lods
pop
jb
outsb
cld
test
arpl
jp
sub
lret
data16
lods
inc
daa
jae
loopne
leave
icebp
pop
inc
cwtl
mov
push
int
adc
scas
jg
shl
and
sub
imul
sub
xchg
movsb
lea
mov
ljmp
lret
daa
hlt
xchg
mov
shr
mov
sbb
les
outsb
cli
sbb
popa
add
mov
cmp
arpl
adc
jp
insb
jnp
out
mov
xchg
sub
push
out
and
outsb
movsb
loopne
and
lods
cwtl
icebp
sub
adc
jge
inc
mov
sub
aas
sbb
push
xor
adc
or
and
loope
shrb
sbb
in
xorl
mov
mov
aas
pop
adc
in
pop
cwtl
xor
ja
cmpsb
dec
jg
fidivs
pop
pop
jno
mov
xchg
fnstsw
data16
loop
jge
cmpl
insl
push
aam
adc
arpl
add
fwait
andb
jge
out
fwait
adc
mov
fstl
adc
sti
xchg
dec
jl
enter
fwait
jecxz
dec
in
dec
xor
sbb
xor
inc
das
mov
push
punpcklbw
inc
sbb
and
lcall
mov
dec
outsl
dec
mov
mov
pop
pop
jg
icebp
leave
je
cmpsb
gs
insb
dec
sub
inc
or
imul
fcomps
adc
leave
adc
push
test
gs
in
ss
cmp
mov
jae
icebp
push
jp
lock
cmpsl
in
mov
sbb
push
dec
cld
test
xchg
jge
or
mov
mov
pop
imul
lods
xor
test
cmp
test
mov
mov
shrb
pop
mov
pop
mov
mov
cmp
pop
ja
xchg
xchg
inc
roll
movups
and
arpl
dec
fldl
dec
dec
fwait
out
cmp
cs
cs
aam
pop
les
xor
push
sbbl
in
dec
pushf
mov
cwtl
cmp
and
cltd
in
test
out
bound
mov
pop
jae
xchg
mov
cmp
arpl
mov
mov
add
and
ds
xchg
cmpl
in
jbe
ja
in
lods
lcall
dec
fdivrs
ja
lret
xor
jae
jns
lods
mov
movsb
out
or
push
cmp
push
push
insb
sbb
inc
cmp
add
cmp
cld
test
loopne
nop
pop
inc
sarl
mov
xchg
subb
add
adc
cmp
test
test
jo
or
scas
shl
dec
mov
pop
adc
cmp
cs
imul
leave
dec
mov
sbbb
and
push
sub
inc
push
fsubrp
and
lcall
cmp
movb
or
in
les
xchg
cmp
add
add
mov
fadds
jbe
push
mov
add
dec
xor
mov
mov
decl
adc
insb
pop
fimull
dec
pusha
sbb
jns
or
xchg
fcomp
insl
movl
xor
cmp
push
xor
lods
dec
or
jmp
movsb
std
add
mov
and
jb
es
pusha
mov
inc
push
dec
cmp
or
lds
add
imul
sti
jno
jecxz
cmp
xchg
inc
out
popa
xor
sti
mov
pusha
nop
jmp
jb
mov
fwait
jae
orb
xor
sub
int3
jecxz
arpl
lret
cwtl
out
sbb
dec
aad
jns
xchg
rorl
out
popa
leave
and
inc
lods
jns
sbb
pop
js
outsb
fs
inc
call
or
cltd
lea
jge
add
std
test
xor
xor
xchg
in
call
stos
push
fwait
and
cli
aam
popf
push
push
bound
push
cmpsl
dec
inc
xchg
push
dec
fisubrl
out
jp
int3
xchg
jbe
push
fwait
cmc
add
cmp
xchg
or
cli
loop
push
repnz
cmp
dec
repz
dec
negl
mov
dec
xor
orb
push
mov
icebp
push
mov
hlt
ret
cld
bound
imul
scas
iret
push
push
bound
dec
sub
call
or
and
mov
fistpll
mov
lock
pop
repz
rorl
add
and
mov
fldenv
sbb
sub
jge,pn
or
ds
into
cld
sub
mov
cmpsl
outsl
dec
mov
pop
out
test
jp
mov
cmp
cs
xchg
pop
or
daa
mov
stos
add
push
repz
iret
or
xor
fidivs
ds
pop
xor
cmp
sbb
sub
sarl
sub
cmp
ss
es
mov
notl
in
xor
cld
lods
push
iret
dec
test
test
loope
ss
jmp
mov
xchg
mov
push
sbb
mov
xor
andl
and
aas
mov
insb
mov
and
mov
cwtl
sub
push
adc
dec
mov
es
pushf
es
cli
enter
cmp
or
bound
test
out
repz
and
xor
push
push
or
xchg
mov
xchg
inc
pop
cmp
mov
shrb
enter
adcb
into
fbld
mov
xchg
dec
cltd
subb
add
inc
xor
lcall
popf
lods
mov
fwait
scas
sub
insl
dec
jb
jmp
clc
movsl
into
fcoml
pushf
adcl
push
sub
add
dec
mov
mov
jns
repz
xor
outsl
or
xchg
or
xor
addr16
fdivs
xchg
xchg
test
xchg
xchg
sbb
and
dec
fstp
sub
xor
lret
out
add
cmp
push
xchg
push
ja
pop
pushf
cmpsl
mov
or
test
test
and
mov
sub
mov
movsb
cmp
hlt
add
out
adc
xchg
daa
xor
orb
setg
push
pop
and
mov
insl
mov
xchg
aas
sub
mov
inc
dec
movsl
cmpsl
movsl
and
jg
lcall
test
dec
jo
loop
mov
xchg
xchg
aaa
pop
imul
push
mov
test
jp
clc
push
jl
jbe
or
mov
inc
in
xor
or
xor
dec
push
inc
xchg
shlb
or
dec
cwtl
out
dec
movsb
cmp
lods
inc
push
jp
or
push
jae
adc
xchg
decb
outsb
push
inc
dec
insl
inc
xor
dec
negl
pop
int
push
and
cmp
pop
push
xchg
repnz
mov
lods
mov
shll
daa
mov
xor
mov
dec
iret
xchg
sbb
adc
shlb
daa
arpl
inc
add
sarl
insb
movsb
jmp
cld
fs
mov
jnp
inc
jle
lret
and
movsl
sbb
mov
dec
add
jne
cmpsl
inc
mov
das
mov
push
mov
stos
stos
idiv
stos
lods
and
es
test
xchg
imul
adc
pop
cmpsb
in
or
fimull
xchg
subb
add
imul
in
adcl
mov
dec
adc
adc
mov
mov
mov
pop
mov
cmp
mov
pop
lods
repz
cwtl
sbb
loop
add
adc
roll
js
sub
or
repnz
mov
add
in
aam
sub
or
lret
repz
pop
shlb
jge
test
rorb
jae
dec
dec
mov
loope
and
mov
das
push
sbb
dec
push
mov
shrb
mov
cmp
pop
and
popf
push
stc
xor
jns
sbb
popa
mov
sbb
fdivl
xchg
jp
jl
inc
pop
sub
mov
push
dec
pop
shll
mov
cwtl
cs
cld
dec
rorl
xor
sub
add
shll
ret
inc
aaa
pop
out
mov
pop
sbb
xchg
mov
arpl
mov
testb
jmp
scas
out
and
lret
pop
loope
mov
sti
dec
stc
sti
xor
outsb
mov
in
pop
data16
pop
xor
in
out
push
iret
mov
push
mov
into
pushf
rcrb
mov
fcom
outsb
negb
daa
mov
inc
adc
popf
sub
mov
arpl
bound
push
ret
addr16
test
fidivrl
or
test
outsl
test
lret
mov
outsl
or
leave
test
and
outsb
scas
stos
bound
test
sub
mov
cwtl
aad
popf
insl
push
mov
rorb
push
jne
repnz
cmp
or
pusha
outsl
jnp
mov
rorb
loopne
xchg
cmpsb
sub
test
xchg
gs
sbb
test
jg
mov
sbb
in
js
loopne,pn
mov
test
aas
es
clc
pop
stos
mov
push
mov
ja
xor
push
std
sti
sarl
pop
shrb
arpl
cmp
fbstp
and
and
lods
cli
frstor
dec
or
ss
push
xchg
sti
xlat
insb
cld
push
sbb
das
leave
lds
call
jb
jmp
xchg
inc
imul
cs
fs
int
mov
push
or
push
stos
andl
or
pop
sub
jb
xor
adc
sbb
cmpsl
push
mov
mov
xorl
sarb
sbb
pop
push
out
cmp
xor
mov
push
fisttps
scas
icebp
jno
rolb
mov
lea
mov
into
add
imulb
cmp
xor
or
jmp
add
lock
and
imul
mov
popf
and
mov
clc
add
jb
or
lcall
loope
sti
fs
aas
push
aam
adc
xchg
pop
inc
sbb
xchg
and
shlb
cmp
addr16
or
out
jp
jo
fidivrl
dec
stc
xchg
test
andb
test
jne
adc
lods
mov
gs
in
jo
insl
cld
test
cltd
lods
pop
cwtl
sub
mov
sub
push
xor
loop
int
js
inc
cwtl
inc
add
lret
or
lret
pop
jae
mov
stos
push
mov
cmpsl
push
movsb
jl
test
xchg
dec
mov
push
jb
int
jle
lods
xchg
out
js
adc
test
ljmp
xchg
jno
push
popf
xchg
push
adc
xchg
xchg
shrb
dec
add
cmp
or
lea
nop
mov
mov
or
outsl
cmp
les
pop
test
test
xor
lea
imul
shl
mov
xchg
bound
ss
loope
mov
stos
pop
mov
mov
mov
inc
lods
or
adc
into
inc
test
cmpsl
cmp
jecxz
divb
testb
xchg
xchg
nop
mov
nop
or
sub
mov
daa
xor
push
es
leave
or
enter
nop
inc
aam
mov
xor
je
push
ss
jp
test
jo
movsl
xchg
jmp
ss
fildll
push
xchg
pop
mov
idivl
lcall
lock
shlb
repz
movsl
mov
xstore-rng
cmpsl
inc
add
movsl
sahf
insl
clc
loope
imull
mov
neg
testb
adc
jo
inc
popf
out
mov
add
dec
mov
pop
lret
loop
cmp
cmp
aaa
cld
mov
mov
pop
outsl
mov
pop
mov
jne
das
sbb
dec
dec
jne
pop
faddl
mov
fwait
pop
xchg
outsb
or
pop
imul
lea
and
fistl
dec
jle
cmpsb
mov
int3
cli
call
js
test
adc
or
bound
test
repz
adc
push
incl
insb
lds
stos
movsl
jnp
hlt
scas
jmp
push
lods
xor
ret
mov
mov
ret
mov
jb
iret
les
sbb
and
cmp
fistpll
jo
gs
jle
mov
or
inc
push
xor
inc
xchg
lods
add
out
sti
and
out
std
ret
out
sbb
jg
or
jg
jle
ss
mov
stos
rcll
or
in
addr16
pop
mov
pop
pop
dec
popa
scas
cli
mov
push
insl
stos
icebp
ss
insb
scas
ss
jp
jecxz
movsl
and
fistps
fxch
push
aaa
inc
scas
and
jle
cli
repnz
push
dec
jg
pop
lcall
aam
cmpsb
mov
fistpll
dec
ss
insl
inc
lret
mov
outsl
xor
jge
lahf
sub
adc
call
sub
ljmp
mov
enter
sub
ret
inc
push
nop
insb
jno
sub
lahf
xchg
loope
adc
or
jae
cmc
loope
mov
sbb
xchg
push
mov
repnz
cmp
sub
xor
outsb
aaa
sub
xor
sub
in
cmpsl
dec
scas
add
xchg
sub
scas
addr16
xchg
stc
shrl
pushf
mov
aas
mov
rol
gs
lahf
mov
scas
cmp
sub
and
popf
pop
and
xor
movsb
pop
nop
rcrb
pop
mov
xchg
and
push
mov
mov
sahf
aad
mov
jns
outsl
or
addl
ljmp
sub
jae
cmp
mov
js
inc
std
mov
enter
mov
adc
adc
jno
cmpsb
adc
dec
mov
sbb
into
mov
icebp
pushf
adc
stos
and
mov
aas
fs
test
insl
mov
jle
outsb
mov
aas
ljmp
shrl
mov
dec
repnz
sbb
leave
mov
mov
push
mov
mov
cli
pop
incl
pop
shrb
scas
mov
push
lods
mov
xchg
mov
push
adc
push
imul
fisttpl
xchg
pop
dec
lock
jno
arpl
xchg
je
call
mov
icebp
movsb
scas
sbb
mov
and
xchg
cmp
dec
pop
cmp
mov
repnz
mulb
popf
movsb
out
cmc
dec
mov
ja
push
cmp
push
sub
shlb
sub
push
dec
adc
daa
imul
xor
xchg
dec
pushf
jno
int3
or
jne
cltd
adc
xchg
or
les
sbb
lret
jno
jecxz
shll
out
pop
in
daa
andl
xlat
mov
mov
test
lret
xor
sar
cwtl
cld
mov
mov
out
sub
add
out
mov
jo
loop
adc
sub
pop
subb
pop
mov
ficompl
jg
cli
addr16
and
mov
dec
addl
ret
or
repnz
adc
add
imul
or
mov
or
popf
xorl
cmp
mul
mov
lods
incb
pop
dec
mov
adc
test
jg
call
lods
push
or
or
cs
xchg
ja
mov
jecxz
lahf
daa
mov
xchg
cld
mov
mov
shr
xadd
push
xchg
push
inc
lret
arpl
mov
inc
sbb
sub
in
cmp
mov
es
nop
arpl
xlat
aaa
popl
and
out
icebp
dec
mov
call
dec
mov
push
add
xadd
ret
xlat
jmp
ljmp
xchg
insb
cmp
cld
adc
lods
je
inc
pop
mov
out
bound
jle
mov
dec
test
orb
fisttps
xchg
ret
arpl
ja
xor
jae
in
xor
aad
test
push
mov
lods
ret
imul
xchg
mov
sub
js
outsl
pushf
fxch
sbb
add
or
into
fadd
outsl
les
mov
cld
in
dec
outsb
scas
or
sub
sets
sub
cmp
jg
mov
popa
jp
cwtl
lahf
sahf
in
out
xchg
xchg
add
arpl
mov
movsb
enter
push
mov
pop
add
outsb
cmpb
into
pop
cmp
sub
jo
pop
add
mov
cmp
out
loopne
clc
adc
pop
push
and
mov
add
sbb
add
sub
xchg
iret
push
lret
jl
lods
rcrl
mov
sahf
jbe
add
addps
out
test
mov
mov
jae
cmp
push
sbb
jno
lock
stos
scas
arpl
out
push
mov
mov
pop
aas
daa
mov
mov
mov
fistps
pop
ret
pop
into
mov
sahf
lods
fcoms
imul
sub
xchg
or
mov
xor
sbb
mov
dec
mov
lds
sbb
mov
lods
fbstp
out
pop
cmp
movsb
jle
imul
xchg
mov
pop
insb
and
sahf
sub
test
aam
cmp
aad
out
mov
mov
xchg
mov
out
stos
daa
dec
add
sbb
pop
in
inc
jne
jbe
pop
push
arpl
outsl
jns
dec
mov
jbe
into
lret
cltd
mov
aad
adc
out
adcl
repnz
call
test
push
test
stos
xlat
data16
inc
jg
cli
shlb
jno
mov
sbb
std
sub
test
jno
out
push
pop
loope
mov
mov
call
iret
hlt
fnstsw
insb
stos
inc
int
add
ret
imul
dec
lods
test
test
fcmovnbe
pop
cwtl
ret
jmp
stos
sbb
xchg
pusha
fcomps
sbb
jne
mov
jg
call
lret
cmp
fiaddl
mov
jnp
and
cmp
out
loope
cmp
cs
cmp
nop
fprem
jmp
fmull
sbb
jmp
scas
push
repz
stc
cmp
jo
scas
popf
lcallw
or
jbe
jg
add
pop
repz
xor
sbb
adc
mov
outsb
dec
jmp
popl
shl
mov
in
int
sbb
arpl
cs
push
lahf
data16
nop
dec
xor
push
cmp
mov
mov
lret
daa
call
fs
lods
mov
popf
sub
mov
dec
mov
inc
stc
sub
fcoml
int
fs
push
sbb
sbbb
mov
jo
mov
cmp
cmp
cmpsb
arpl
sbb
and
iret
loope
shr
jecxz
stc
xor
xor
call
es
cltd
iret
and
stos
mov
cmpsl
mov
sub
sahf
enter
into
ret
test
mov
je
or
fldcw
and
sub
or
outsl
mov
jle
movsl
cmc
mov
or
orl
cmpb
push
ljmp
into
insl
add
popf
xchg
lds
or
loope
fldcw
adc
lahf
pop
and
test
mov
ds
cli
and
cmp
mov
mov
inc
mov
mov
scas
test
mov
mov
xchg
stos
call
inc
ss
inc
dec
je
arpl
pushf
adc
jbe
mov
imul
cmp
addl
scas
hlt
sbb
mov
jbe
mov
add
cmp
mov
jb
pop
cmpsl
mov
or
jno
out
jle
shl
or
pop
add
enter
aas
gs
cmc
es
dec
fnstcw
pusha
jnp
lods
lds
je
popf
nop
insl
mov
imul
and
pusha
push
pop
hlt
lock
outsb
lret
xlat
lock
call
mov
into
aas
aam
xor
xor
jae
or
or
jno,pt
xchg
pushf
cmp
sbb
dec
movsb
out
xchg
ss
add
fbld
aaa
andl
adc
xor
jecxz
or
cli
lret
xor
mov
mov
mov
pop
cmpsl
subl
andl
xchg
push
in
out
xor
and
aam
imul
test
mov
jns
mov
aad
icebp
push
sarl
test
pop
pop
cmp
mov
sbb
cmp
pop
sbb
xorl
out
int3
ljmp
shl
jl
and
mov
push
jno
sar
sub
inc
mov
movsb
mov
ja
ja
popf
lods
sbb
pop
push
scas
in
sbbl
movsl
cmp
adc
adc
xor
out
sbb
xor
mov
rep
movsl
out
ja
pop
xor
cmp
sub
push
in
lret
pop
addr16
or
into
push
sub
loope
pushw
adc
stos
adc
xchg
sub
test
mov
jbe
cmp
cmp
lods
xor
sub
cmp
mov
jg
and
aam
cld
cmp
jg
rcll
jbe
dec
add
cmp
int
push
aam
outsb
movsb
xchg
mov
addr16
push
and
adc
call
arpl
jae
mov
les
and
dec
std
int3
aad
pop
xchg
pushf
push
xchg
lods
sahf
mov
dec
cmc
push
dec
inc
dec
mov
push
ss
xchg
xor
xchg
ret
mov
xchg
sub
inc
xchg
lock
push
and
lret
dec
aaa
fsubr
js
push
push
mov
cmp
popa
hlt
inc
stos
xchg
xchg
sahf
repz
les
inc
mov
pop
xchg
std
andb
adc
pop
loop
and
das
dec
je
xchg
inc
imul
or
out
scas
dec
sub
adc
lea
add
jb
mov
mov
xchg
icebp
xor
rorl
cli
dec
xor
mov
jo
and
insl
mov
sarl
jmp
lret
scas
xchg
mull
scas
test
sub
ds
pop
push
push
in
decl
sbb
mov
push
xlat
and
sbb
push
cmp
push
rcrb
mov
jb
ja
test
out
mov
mov
cli
xor
out
stos
or
dec
xchg
mov
cs
addr16
adc
lahf
loope
in
dec
adc
inc
fistpl
scas
jne
movsb
or
mov
arpl
mov
call
nop
call
test
movsl
or
jl
cmp
pop
cmp
mov
dec
outsb
cmp
xchg
movsl
out
das
mov
xor
dec
add
sbb
addr16
fs
jbe
xor
xchg
scas
leave
andb
or
iret
mov
lock
lods
mov
mov
loopne
sub
testl
adc
dec
bound
jg
cltd
addr16
das
and
add
and
pop
fcoml
mov
mov
mov
shll
jmp
idivb
jns
cmpsb
repnz
xor
stc
sub
sub
mov
aam
inc
inc
cmp
ret
jl
fldenv
pop
pushf
pop
dec
cmp
push
and
clc
test
outsl
mov
lods
push
cs
out
cmp
pop
sub
xchg
test
and
imul
cs
rcll
jp
fsts
pop
leave
push
xor
js
arpl
adc
insl
and
mov
push
mov
outsb
loope
xor
out
into
and
push
pusha
xchg
pop
outsl
adc
mov
sub
fistpl
iret
cmp
mov
mov
imul
repnz
mov
sub
mov
push
mov
add
xor
add
aad
pop
mov
dec
mov
in
mov
and
inc
pop
imul
aas
mov
mov
lock
lods
add
or
fs
jmp
fs
dec
pop
popf
and
icebp
imul
stos
pop
aad
repnz
bound
shr
and
pop
cmp
dec
push
mov
xchg
xchg
lds
fidivl
test
loopne
sub
dec
jbe
sub
or
xchg
es
jg
cmc
test
jb
mov
push
dec
insb
mov
push
fisubs
ret
jmp
insb
mov
mull
cmp
sub
mov
nop
mov
test
gs
mov
sub
xor
mov
cmpsb
xor
and
lcall
aaa
cs
outsl
xor
cmp
popf
and
call
lea
push
adc
pop
je
test
lret
movsl
push
xorl
andb
lret
outsb
xor
rclb
jle
sub
mov
or
fs
dec
cmp
inc
mov
aad
outsl
daa
sbb
jo
sub
cmp
or
add
popa
mov
loope
fs
sub
jb
jle
dec
loopne
negl
int3
cmp
jmp
xor
cmp
jecxz
xchg
push
or
mov
cmp
jns
lods
pop
mov
push
bound
xchg
lret
in
hlt
push
pop
pop
push
cmp
add
cmpsl
xor
push
sub
adc
mov
sub
scas
fimull
lods
inc
sbb
mov
arpl
rorb
push
and
dec
jnp
jno
mov
mov
gs
cs
adc
xchg
inc
cmp
jl
jg
add
xchg
sbb
xchg
adc
sbb
inc
les
mov
pop
in
xchg
shr
cmpsl
shll
mov
cmp
das
sub
push
les
ljmp
dec
js
mov
adc
inc
push
xor
or
scas
test
xchg
dec
jmp
lret
xchg
adc
and
repnz
xlat
notl
out
jmp
and
mov
and
cli
iret
out
enter
inc
outsl
cmp
mov
loope
movsl
dec
mov
mov
mov
sahf
sub
ret
sti
cltd
rcrb
mov
jle
pop
stos
es
add
test
sub
adc
and
inc
xchg
sbbb
sub
je
dec
mov
movsb
fwait
adc
ss
loop
push
scas
inc
adc
nop
cmp
or
call
ret
lods
lret
cmp
mov
pop
xor
lret
pop
lcall
sub
pop
call
pop
out
lcall
and
xchg
lcall
leave
add
xchg
mov
pop
scas
mov
pop
ljmp
mov
mov
gs
ret
jecxz
jno
add
dec
clc
jmp
es
push
or
pop
inc
test
add
push
int3
xchg
xor
in
shrb
inc
scas
xchg
xchg
clc
out
popa
lret
inc
pusha
imul
dec
pop
lcall
xchg
xchg
subb
xchg
adcl
es
mov
push
sub
cld
lret
sub
xor
xor
into
and
mov
or
adc
clc
add
lods
sub
inc
pop
lret
insl
and
xchg
idivb
jg
push
adcb
mov
inc
mov
fbld
push
push
xchg
inc
loope
add
xchg
inc
leave
xchg
decb
xorl
mov
repz
and
mov
or
push
push
nop
fsubrl
cmp
mov
sbb
fcmovnb
mov
sbb
adc
cltd
mov
test
sbb
xchg
dec
fwait
imul
scas
jg
insb
mov
bound
mov
jg
mov
sbb
lea
nop
and
ss
push
dec
push
sub
mov
xor
cmp
jne
and
sub
dec
in
mov
imul
pop
jle
jge
insb
int
jp
push
add
pop
pop
mov
outsl
imul
aas
packsswb
inc
push
shrb
sub
mov
xor
push
pop
inc
jnp
xor
lods
mov
arpl
lods
gs
sbb
mov
pop
pop
push
in
pop
shl
add
shrb
inc
arpl
sub
lods
repz
shlb
pop
sahf
lret
outsb
or
jmp
es
sub
cmc
and
push
jb
icebp
xchg
sub
sbb
jle
xor
mov
push
and
in
daa
sub
loopne
out
movsl
push
sbb
inc
outsl
pushw
fsubs
repz
arpl
out
push
std
jne
cmp
xor
lock
and
xor
aas
push
mov
es
scas
cmpsb
and
and
in
xchg
mov
mov
mov
xor
xor
sub
xor
js
pop
xchg
xchg
jns
lods
js
xchg
in
into
push
sti
dec
cmp
inc
ja
fiaddl
popa
mov
push
mov
xor
aas
mov
sub
xor
fistps
mov
scas
test
stos
nop
imul
xor
pop
addr16
mov
jnp
add
pop
mov
call
adcb
mov
adc
cs
xchg
sbb
sbb
adc
loop
xlat
shl
jae
pop
div
mov
cmpsw
mov
in
outsl
inc
push
pop
mov
lock
xor
xchg
push
mov
push
push
ret
movsb
cli
lock
push
lret
shll
out
ss
cmp
test
lods
ss
mov
adc
pop
scas
cmp
ljmp
insb
arpl
mov
jno
testb
addr16
jae
repnz
inc
xor
mov
rcll
imull
or
int
xor
dec
js
cmpsl
jp
into
pop
jmp
addr16
in
sarb
test
movsb
outsb
test
adc
cmp
lock
gs
cltd
cmpl
jb
dec
call
test
mov
add
sbb
stos
sbb
daa
popa
decl
arpl
stos
nop
leave
scas
aas
push
push
add
cmp
stos
jbe
call
lods
mov
pop
push
and
cmc
xchg
mov
in
push
in
xor
fimull
push
rcrb
add
push
mov
out
inc
add
pop
rcrb
iret
out
xchg
fmull
push
dec
repz
xchg
loop
mov
imul
jne
movsb
inc
dec
sub
stos
insb
rclb
add
fs
sarb
js
jbe
rcl
loopne
aam
sub
mulb
das
ficoml
jle
loopne
cld
mov
mov
jl
repnz
test
subb
test
xor
cmp
fldt
aas
cs
movsb
orl
pcmpeqw
jbe
fwait
sub
or
mov
push
sub
stos
je
aas
mov
mov
mov
pop
mov
mov
dec
sub
cld
pop
fstl
andb
inc
sub
cmp
clc
mov
jmp
mov
mov
inc
sub
mov
or
cmpsb
scas
aad
je
cmpsl
sbb
push
cltd
cltd
sub
cld
fmul
call
jae
adc
jl
test
repnz
arpl
sub
adc
shll
ljmp
cmp
daa
popf
jg
les
aam
xchg
cmpsb
jb
sbb
jmp
mov
dec
xor
fidivl
or
and
scas
cld
pop
inc
ds
fistl
arpl
mov
loope
add
mov
in
cld
jo
je
outsl
popa
mov
ret
mov
xchg
add
cmp
mov
xor
sub
aaa
mov
scas
inc
cmp
pop
push
call
stos
mov
mov
hlt
mov
aad
cmp
je
and
dec
jle
call
lock
push
lcall
inc
pop
fnstenv
cmp
icebp
mov
mov
sar
clc
mov
test
push
sbb
dec
inc
adc
cmp
std
xchg
jb
cmpsl
sbb
or
cmp
es
ja
movsb
shll
in
xchg
cmc
mov
adc
gs
mov
mov
mov
cmp
repz
sub
rorl
cmpsb
mov
inc
adc
sbb
xor
out
dec
test
cmp
xor
stos
loope
pusha
in
sub
jmp
xchg
pop
shrb
stos
pop
insb
push
cmp
les
stos
test
gs
in
xchg
sub
adc
movsb
mov
xchg
cmpsb
mov
arpl
ret
out
xchg
xchg
sets
aaa
dec
sbb
and
movsl
xor
lds
inc
aas
mov
cmp
les
pop
orl
cmpsb
movzbl
insl
mov
cmpl
movsb
out
adc
and
in
add
cmpsb
test
jo
addl
icebp
int3
sub
in
xor
xchg
inc
mov
or
cmp
mov
inc
leave
add
testl
loope
add
push
xor
mov
and
mov
jge
push
mov
clc
xchg
pop
xchg
cmp
fwait
pusha
fstpt
dec
mov
bound
jge
jae
jbe
mov
insb
movsb
aad
and
shrb
pusha
out
ss
xor
insb
sub
xor
jmp
mov
pop
and
inc
inc
clc
repnz
mov
int
and
jne
lods
or
and
mov
mov
push
outsl
xor
les
dec
jb
aas
pop
sub
pusha
fcompl
fldl
dec
daa
add
jbe
mov
push
iret
xor
jb
fwait
mov
dec
adc
push
fwait
mov
js
jbe
test
sub
lret
leave
enter
stc
inc
shlb
int
jno
and
and
int
pop
lods
loop
bound
pop
dec
idiv
inc
dec
fldenv
push
sub
xorl
inc
mov
push
and
jnp
mov
lret
lock
jb
shlb
sarb
lods
arpl
add
in
orl
movsb
xor
mov
or
dec
dec
mov
mov
xor
cld
cmp
sbb
jl
test
xor
mov
popa
push
mov
push
call
stos
sti
inc
jg
mov
mov
fcoms
cmp
pusha
mov
mov
push
jg
pop
adc
mov
mov
cmpsl
pushf
outsb
dec
sub
or
mov
clc
insb
mov
xchg
xchg
mov
adc
xor
dec
sti
xchg
jnp
sub
cmp
arpl
divb
ret
pop
mov
or
test
mov
test
movsl
sub
cmp
aaa
mov
push
popf
lods
fsub
sub
movsl
call
jnp
mov
xor
lock
stos
cmpsb
xor
sub
int
mov
in
ljmp
push
mov
pushl
add
ja
mov
pop
add
sub
les
push
sub
pop
pushf
insl
mov
mov
inc
imul
push
scas
sbb
push
add
mov
and
xchg
scas
xchg
inc
int
jp
mov
repz
pop
lods
xchg
cmp
push
push
cli
xor
lods
dec
mov
xchg
sbb
xchg
test
jmp
mov
jle
and
lock
imul
mov
pop
scas
sbb
insl
hlt
in
lods
pop
or
mov
aad
push
xchg
cmp
sarl
cmp
std
outsb
aas
cmpsl
in
pushf
push
popa
push
jp
pop
daa
pop
insl
stos
jecxz
inc
dec
mov
sti
cmc
lds
outsb
mov
push
xchg
sbb
inc
sub
xchg
rolb
inc
mov
pop
movsl
mov
arpl
adc
stos
dec
mov
fstpt
in
push
sub
daa
std
cltd
adc
rcll
inc
push
cmp
sub
fistpll
out
sub
cli
xor
sub
adc
fs
jns
andl
lods
mov
adc
sbb
dec
cmc
jg
mov
outsb
lahf
stos
ss
lods
jg
cli
insb
jnp
add
lret
adc
lock
out
in
js
jg
jno
fidivrl
fldenv
mov
sbb
pop
cmp
mov
ret
outsb
lahf
pop
popa
in
test
and
repnz
pushf
scas
xchg
cmp
mov
jmp
cmp
stos
mov
int
xchg
push
cmpsl
stos
fwait
pop
mov
cwtl
sbb
pop
int3
mov
cmp
sbb
in
in
sub
sbb
int3
add
fistps
xor
jg
insb
push
xchg
xor
aas
xchg
sbb
cmpsl
outsb
add
call
adc
mov
xor
test
mov
sub
shld
adc
orl
fstl
les
arpl
or
jle
push
test
push
jae
mov
les
lods
fs
and
xchg
mov
add
jo
or
xlat
in
adc
cmp
loopne
out
fsubs
imul
loope
test
scas
add
mov
sti
sub
rolb
jle
xchg
mov
movsb
es
mov
add
lahf
jbe
filds
daa
stos
add
push
adc
lock
push
cmp
xchg
cmp
in
sub
push
roll
jle
push
pop
call
xor
int3
jno
lret
arpl
into
imul
mov
das
cmp
ja
or
int
xchg
sbb
iret
xchg
scas
mov
bnd
push
or
les
jmp
push
dec
repnz
dec
mov
or
cmp
subb
cltd
into
inc
cmp
and
int3
xchg
int
ss
dec
aaa
xchg
cmpsb
xchg
int3
xchg
lea
sub
mov
sub
imul
test
dec
lds
inc
xchg
sub
jl
adc
cmp
cltd
lds
jae
cld
xor
iret
push
mov
adc
pop
dec
mov
push
cmp
pop
sub
in
lahf
shll
pop
lahf
cmp
shr
jns
les
mov
inc
aas
add
mov
xor
stos
out
dec
cmpsb
push
inc
xor
adc
popa
rcrb
clc
mov
je
jp
jno
cmp
aam
jmp
mov
adc
in
es
mov
in
and
jo,pn
mov
loopne
fwait
and
ss
pop
lds
add
fldt
cli
insl
cwtl
jnp
daa
rcr
and
jbe
ss
dec
pop
ljmp
addb
inc
add
add
cld
fwait
cmpsl
icebp
scas
inc
or
push
mov
add
or
in
sub
lods
stos
aad
xchg
xchg
sub
cmpb
repz
push
inc
leave
cs
inc
jg
dec
arpl
cmc
scas
repnz
aaa
xchg
push
ds
movsl
sahf
loopne
sub
insl
movsl
add
in
mov
movsl
je
das
mov
daa
mov
lea
pop
dec
stos
out
xchg
jne
iret
imul
mov
mov
sub
insl
nop
push
jmp
adc
stos
mov
add
mov
pop
cld
xchg
xor
xchg
in
cmp
sbb
mov
push
and
jmp
mov
scas
jmp
mov
and
stos
dec
jns
mov
and
mov
dec
imul
sub
mov
cltd
mov
and
jl
push
scas
ds
add
inc
bound
add
iret
and
xchg
stos
dec
stos
test
rcll
push
cld
pop
push
xor
mul
adc
sub
or
pop
add
iret
mov
xor
pop
sub
pop
cmpsb
stos
pusha
mov
mov
loopne
or
nop
pushf
mov
cmp
ret
frstpm(287
les
sahf
sti
lahf
jae
mulb
dec
pop
leave
outsb
sbb
loop
push
push
and
and
orb
rol
inc
fadd
in
jne
in
push
pop
les
cmp
xchg
pusha
jns
mov
pop
stos
ret
mov
mov
xchg
jg
negb
adc
loope
scas
adc
jge
push
sub
cmp
or
test
ret
jmp
push
add
mov
sub
cli
daa
mov
out
lds
mov
add
sub
pop
int
lret
mov
push
sub
imul
jl
cmpsb
aas
fdivr
or
mov
popf
or
dec
dec
add
sbbb
mov
test
push
or
push
popa
mov
push
scas
clc
jo
cmpsb
jmp
dec
xlat
aad
mov
shl
jne
push
aam
ret
les
mov
insb
scas
add
xchg
add
popf
adc
shrb
scas
push
mov
test
cld
repnz
int3
add
mov
scas
repnz
pop
push
or
ss
in
push
popa
cmp
sti
ret
int3
and
pop
jno
adcl
sbb
out
sarb
in
aas
xchg
and
hlt
call
inc
mov
andl
jae
repnz
cmp
pop
xor
sub
sub
inc
lea
cli
call
xor
and
jbe
jbe
or
test
dec
rclb
push
push
repnz
test
insl
fwait
cs
ss
jae
dec
push
add
iret
dec
fsubrl
scas
xor
pop
test
loopne
inc
cmp
loopne,pn
pop
addl
or
mov
cmp
cmp
and
mov
xor
bound
jo
imul
imul
sbb
mov
push
push
jbe
adc
movsb
into
std
push
dec
add
mov
push
and
insl
scas
shlw
jg
push
enter
cmp
out
cmp
lahf
pop
mov
inc
test
push
mov
jge
push
mov
test
add
ret
jno
dec
das
cld
mov
scas
dec
movsb
clc
cltd
dec
repz
cmpsb
fstps
mov
test
sahf
inc
in
mov
sbbl
scas
es
cwtl
daa
mov
jp
cmp
xchg
xchg
pop
dec
mov
pop
psubd
add
sub
cltd
fists
test
pop
cmp
lahf
adc
xchg
jl
js
hlt
xchg
mov
pop
decl
fisttpll
neg
stos
rol
shrl
enter
dec
cmp
mov
cmc
daa
mov
pop
and
test
sbb
jbe
inc
testl
mov
popa
sub
or
mov
jmp
push
scas
adc
out
jo
int
ja
js
sti
mov
orb
add
pusha
ja
movl
mov
rol
in
adc
lret
mov
xchg
cmp
cltd
and
cld
cli
mov
les
lea
inc
nop
add
push
icebp
mov
sub
mov
lods
mov
in
shrb
mov
daa
dec
call
mov
lock
jo
dec
imul
lea
test
pop
push
fists
add
pop
sub
or
movsl
cs
push
daa
stos
and
popf
mov
out
sbb
push
mov
add
xor
xchg
dec
mov
mov
or
popa
mov
cmp
push
idivb
test
mov
fstps
mov
pop
negl
and
sbb
dec
inc
fucomi
or
sub
orl
fisttpl
adc
pop
sahf
xchg
ret
sbb
sub
jnp
enter
addl
xor
jns
jp
mov
imul
mov
das
test
cs
subb
inc
or
xlat
xchg
push
pop
imul
push
jl
adc
pop
fwait
outsb
pop
push
mov
daa
sub
shlb
and
mov
xchg
push
sbb
stc
mov
add
incl
mov
and
aas
mov
ret
sub
fs
mov
imul
arpl
inc
sbb
scas
stc
and
cmp
inc
bound
xor
sbb
xchg
leave
mov
scas
std
into
mov
inc
js
das
pop
mov
pop
sub
sahf
ds
sub
mov
ljmp
sub
xchg
leave
inc
push
xor
cmp
cmp
xor
jne
mov
xchg
js
sub
stc
sub
adc
aas
and
pop
in
ret
and
cmc
pop
dec
xor
dec
popa
dec
lcall
aas
jecxz
or
xchg
add
test
xchg
cmc
jl,pn
dec
push
xor
adc
sbb
cmp
aas
les
cmp
stos
sbb
mov
data16
testb
and
stos
xchg
ret
jnp
mov
xchg
push
mov
scas
sub
sahf
lods
jne
mov
iret
sahf
jae
jl
sub
xorb
push
getsec
scas
mov
jne
pop
cmpsl
scas
pop
jno
dec
sbb
lock
pop
mov
and
popa
pop
cld
sbb
daa
insb
mov
jb
add
dec
mov
mov
ss
inc
pop
mov
pop
mov
js
and
inc
cmpsl
jge
es
ret
pop
clc
orl
cld
shll
sbb
scas
lods
mov
add
dec
jnp
popf
aas
dec
daa
jg
xchg
out
xor
bound
sub
xor
mov
inc
xchg
cmp
xchg
insl
mov
in
leave
in
inc
test
pusha
cmpl
ret
xor
mov
sub
cmpsb
pop
dec
pushf
push
shrl
cmp
sub
or
pop
adc
aas
cmpsb
mov
pop
imul
sub
lret
je
lret
mov
lahf
sub
pop
test
ds
enter
jo
pop
in
and
ja
mov
sub
dec
sti
dec
pop
mov
fidivl
pop
push
adcl
outsb
daa
cld
lret
push
repz
sbb
imul
cmp
inc
add
dec
pop
dec
loop
addr16
or
js
movsl
pop
cwtl
out
mov
les
cs
mov
xor
mov
ja
lret
mov
bound
xchg
or
repnz
push
pop
daa
sub
fwait
push
ljmp
inc
dec
add
cwtl
and
and
add
mov
mov
lds
cmp
mov
imul
outsl
mov
push
arpl
aad
loopne
and
or
jmp
cmp
fsts
inc
sti
dec
xor
cmpsl
mov
inc
outsl
inc
sbb
in
xchg
sub
sahf
push
movsb
push
ss
mov
push
or
scas
sbb
mov
pop
mov
cwtl
adc
push
mov
pop
fmul
popa
ss
aam
pop
add
mov
sbb
or
cs
hlt
cs
shrb
pop
cmp
xchg
stos
lret
cltd
sub
inc
stos
aam
rcrl
lock
movsl
push
cmp
test
fisubl
mov
sbbb
pop
mov
sub
xor
rcll
lock
ret
mov
sbb
inc
pop
rorb
rcrl
mov
out
and
ret
jno
insb
xlat
imul
pop
xor
lea
xchg
mov
es
or
and
sti
sub
cmp
sarb
pop
xor
xchg
jbe
sub
fistpll
push
sub
or
aaa
xor
mov
es
cld
loopne
js
mov
sub
sti
int
sub
sbb
int3
out
daa
dec
xchg
adc
out
movsl
ret
push
movsl
add
call
cli
cmpsb
and
test
mov
push
jle
fs
iret
and
loop
mov
xor
dec
mov
subb
scas
sbb
xor
dec
rclb
push
jno
jle
mov
mov
mov
movsl
adc
xchg
dec
imulb
adc
add
nop
aaa
in
cmpsb
cmp
jp
test
dec
dec
xlat
xchg
mov
cmp
add
mov
popa
imulb
in
cmp
nop
xor
jl
jl
lock
mov
jmp
pushf
pop
loope
mov
aad
sbb
inc
xor
push
and
jg
jo
cmp
jl
sub
fdiv
and
pop
inc
mov
mov
imul
adc
mov
das
add
lahf
rorl
int3
dec
pop
fidivrl
rorl
test
cmp
adc
jmp
cmp
data16
sub
mov
bound
mov
pop
jns
xchg
pusha
jmp
mov
push
cmp
dec
mov
aad
js
call
jge
icebp
jns
adc
mov
mov
mov
stos
cmpsb
shl
outsb
and
dec
mov
jae
es
stos
addr16
imul
fwait
mov
sbb
inc
mov
lods
stos
jmp
lods
enter
bound
mov
mov
repnz
push
push
and
jmp
sarl
sub
xor
jg
mov
push
xchg
shlb
pop
dec
mov
arpl
enter
mov
lcall
lahf
add
xor
adc
push
test
add
mov
mov
lods
pop
fnstenv
push
movsl
sbb
sub
add
jge
mov
movsl
sahf
hlt
mov
cmp
loope
cmpsl
imul
cmpsl
int3
inc
sbb
mov
std
xor
sbb
xchg
jno
adc
insb
xchg
dec
jo
inc
jle
xchg
mov
jecxz
dec
leave
in
dec
out
mov
ljmp
rclb
mov
push
dec
inc
outsl
frstor
add
repnz
pop
pop
ret
and
sub
xor
xor
mov
mov
inc
dec
out
mov
cmp
sti
js
mov
in
and
mov
cmp
jo
ds
inc
movsb
lods
cs
subb
adc
dec
cmpsb
mov
shr
cs
jo
aaa
jne
stos
pop
inc
lods
ss
push
lea
pop
mov
or
or
xchg
inc
aad
hlt
pop
xchg
das
xchg
dec
jecxz
mov
sub
rolb
add
xchg
mov
jbe
leave
cmp
jmp
sub
mov
sub
jg
push
rcll
or
inc
decl
mov
mov
sbbb
daa
cld
add
pop
xor
mov
cwtl
push
std
mov
test
movsb
pop
mov
xchg
adc
enter
push
sbb
jae
cmp
ss
jae
orb
xor
rcl
dec
enter
fisttpll
push
xor
sub
dec
mov
dec
push
ss
je
inc
mov
xchg
aas
cltd
fsubrl
inc
adcl
lahf
clc
sbb
insb
pop
aam
dec
int3
push
pop
xor
fadds
movb
cmpsb
jp
jno
sub
jge
pushl
idivl
inc
adc
lcall
sub
rcrb
adc
adcb
inc
ror
out
push
out
jae
or
lods
insb
hlt
scas
jl
data16
stos
pushf
jp
movsb
add
mov
jl
faddl
sahf
mov
cli
xchg
pop
in
int
mov
xlat
dec
nop
pushf
or
lods
cld
das
aam
fcmovbe
pop
jecxz
jno
add
retw
test
pushf
pop
cltd
xchg
push
addl
pop
das
xchg
cwtl
dec
pop
cmpsb
push
mov
shrl
jae
pop
mov
sbb
loopne
lock
cmp
pop
lret
or
push
mov
out
mov
push
aaa
pushf
cmpsb
and
movsl
inc
mov
add
jge
js
shlb
sbb
sub
and
es
and
fucomp
mov
insb
sub
sub
sub
jg
lods
aam
pop
xchg
inc
pop
daa
mov
xchg
pop
cmp
lods
push
enter
xchg
fwait
bndstx
mov
push
or
push
cmp
rcrb
bound
jbe
xor
adc
imul
clc
jne
xor
jg
loope
pop
es
or
mov
inc
into
xchg
adc
mov
outsl
sub
loop
push
pusha
and
sbb
mov
inc
mov
ficomps
sub
add
mov
mov
push
pop
ds
das
lret
adc
fcomip
sbb
mov
out
negl
test
loope
pushf
mov
aam
pusha
add
jns
loopne
and
rolb
xor
jp
outsl
adc
jns
aam
jmp
cmp
lock
daa
test
movsbl
les
mov
sahf
movsl
fbstp
mov
fistl
loop
enter
jno
xchg
mov
outsb
jle
sub
xchg
jmp
mov
push
push
pop
dec
jb
jle
xor
sub
bound
pushf
inc
loop
aas
cmpsb
mov
cmpsb
insl
les
add
add
mov
or
ja
sahf
fcmovb
insb
dec
jbe
cmp
jo
push
lret
les
lahf
xor
jecxz
sbbl
mov
inc
xor
shr
aas
aad
imul
shufps
nop
cmp
cld
dec
adc
cmc
and
rol
mull
lret
fidivrs
pop
sub
mov
mov
addr16
pop
nop
je
cltd
push
int
clc
adc
and
cs
add
or
dec
test
movsl
movsb
mov
push
ja
mov
insl
enter
js
cmpsb
mov
sub
shll
shl
out
mov
xchg
test
outsl
shrb
mov
jb
clc
jecxz
xor
or
neg
ret
imul
mov
jle
nop
xor
rcrb
test
pop
cli
jg
cmp
pushf
push
cmpsl
mov
adc
testl
jge
jecxz
repz
sti
cmp
fldl
xchg
aad
jae
nop
cld
mov
dec
mov
scas
pop
in
or
subl
stos
cmpl
ljmp
rol
outsb
je
inc
jae
enter
push
cwtl
mov
mov
mov
fdivr
add
mov
subl
enter
cmpl
and
mov
ss
pushl
nop
out
leave
out
jno
sbb
mov
scas
pusha
inc
mov
sbb
lods
adc
imulb
inc
mov
sub
dec
adc
mov
pop
enter
jecxz
daa
cmpsb
lds
cs
stos
pop
in
xchg
bound
imulb
testl
jo
mov
aas
push
fiaddl
sbb
add
xor
lcall
pusha
lods
gs
in
xchg
xor
or
inc
andb
pop
add
jmp
lods
jle
test
jbe
scas
dec
hlt
jne
sub
test
mov
jo
mov
push
add
inc
dec
je
adcl
sub
sti
prefetchnta
mov
and
dec
ds
test
pop
ret
mov
xor
xor
rcrl
or
mov
ds
inc
xor
scas
cmp
adc
xchg
sub
jnp
sub
push
aas
arpl
daa
jo
out
pop
or
imul
cmpsb
outsb
fs
push
popf
mov
jecxz
push
mov
dec
dec
mov
outsl
xchg
mov
subl
cmp
or
pop
inc
mov
mov
jg
push
inc
mov
mov
stos
lret
in
push
and
imul
cld
out
jnp
push
mov
iret
cmp
mov
aaa
in
push
ja
cltd
xchg
mov
rcrb
xor
clc
jno
outsb
or
clc
and
jmp
rolb
add
mov
add
sahf
rcrb
aam
dec
mov
inc
mov
outsb
mov
pop
subb
xor
cmp
or
les
or
inc
cmp
fdivp
cmc
jns
jp
inc
imul
xchg
pop
movsb
loop
pop
lods
sub
pop
cmpsb
xchg
mov
ror
mov
xchg
and
and
and
xchg
xor
sbb
cltd
push
mov
jecxz
scas
pusha
filds
lock
pop
sbb
loope
outsb
pusha
add
jmp
cmp
pop
adc
sub
cwtl
cmpsb
add
repnz
jecxz
sbb
push
sub
add
mov
dec
call
enter
pusha
mov
add
jge
and
fwait
push
sar
jbe
shll
dec
test
popf
pop
mov
das
and
popf
ljmp
dec
sarl
pop
icebp
test
fildll
dec
les
cmp
adc
lock
sti
aam
jae
adc
shrl
adc
repz
adc
xor
fsub
sub
cmpsb
incl
pop
mov
jo
sbb
out
cmovbe
int3
jl
cmp
scas
push
aaa
inc
rcll
mov
adc
sub
test
mov
mov
jge
imul
insb
sahf
jns
jl,pn
jo
test
xor
imul
jae
decl
test
mov
insb
imul
cmpsb
and
pushf
jbe
inc
fs
xchg
popf
xor
cmp
jno
cltd
push
bound
addb
pop
and
jge
movsb
enter
mov
nop
push
dec
outsl
cmp
addl
jle
pop
mov
int3
inc
sub
lods
pop
stos
push
lods
sub
leave
pop
and
sub
sbb
xchg
jno
or
push
stos
fnstcw
mov
insb
lods
pop
out
push
pushf
pop
test
sbb
pop
shr
jmp
out
addb
inc
cli
xchg
fnstsw
jno
inc
stos
cmp
add
addl
popa
xorb
jb
xor
push
mov
cs
inc
rorb
in
jg
repnz
lods
sbb
inc
gs
or
mov
ss
dec
adc
mov
out
hlt
dec
mov
fucomi
mov
das
pop
dec
testl
or
icebp
push
add
loope
int
cmp
stc
scas
dec
aad
xor
stos
call
das
clc
pop
das
bound
ds
lods
dec
ljmp
mov
das
loope
insl
inc
adc
add
cmp
ja
mov
movb
dec
lods
sahf
out
push
das
sub
xor
jmp
movsl
dec
cmp
sub
pop
and
mov
adc
bound
and
push
add
faddp
xor
mov
or
adc
inc
mov
movsbl
push
lods
mov
enter
pop
or
and
cmp
push
into
test
or
sub
lods
sahf
repnz
pop
cmpb
cmp
mov
and
add
je
in
loop
out
push
sbb
jmp
xchg
jbe
scas
pop
jp
movsl
push
pushf
mov
stos
aam
jg
or
cmp
lods
mov
adc
jmp
xchg
loope,pn
fbld
inc
inc
decl
hlt
or
lahf
subl
pop
pop
out
out
stos
xor
insb
insl
push
je
aas
mov
bound
or
jo
cmp
xor
or
rcrl
or
xor
loope
leave
xbegin
aad
xor
repnz
xchg
push
rcl
inc
push
mov
bts
adc
mov
js
pusha
std
pop
nop
push
adc
lods
and
pop
das
mov
btr
jb
lcall
jnp
in
mov
int3
movsl
push
arpl
movsb
sub
nop
into
test
xchg
push
cld
lea
loope
orb
mov
xchg
inc
sbb
push
push
jmp
jno
hlt
data16
rcr
push
push
out
int
jmp
and
or
push
mov
outsl
in
loopne
stos
jge
push
nop
icebp
xchg
mov
lock
das
in
pop
push
or
cmp
pusha
mov
fistpl
or
adc
inc
inc
scas
mov
inc
in
das
mov
or
cmp
cwtl
sub
mov
scas
pusha
aaa
icebp
stos
and
and
jno
loop
int3
push
fnstsw
mov
xchg
jecxz,pn
fprem
clc
or
leave
or
dec
fcmovbe
neg
add
das
push
into
bndstx
cmpsb
cmp
adc
cmp
sub
jo
mov
cmp
fiaddl
pop
cmp
adc
repnz
mov
lret
mov
sub
out
cld
cltd
push
add
lcall
scas
or
add
adc
es
xchg
lea
sbb
inc
mov
mov
mov
cld
fadds
mov
xor
and
ret
xor
bound
or
dec
adc
mov
add
xor
add
fcmovbe
lock
loop
or
jmp
fwait
imul
sarl
inc
loop
icebp
je
mov
pop
pusha
adc
cltd
jmp
mul
aas
fdivrl
dec
int3
fcompl
jb
jecxz
stos
inc
arpl
call
pop
ss
jecxz
mov
rcrb
or
xor
xchg
btc
mov
push
scas
cmp
call
add
lahf
dec
inc
push
xor
mov
sub
mov
call
mov
enter
call
push
lcall
pop
add
xchg
mov
test
sarl
or
cli
or
movsl
add
and
inc
or
adc
lock
sbb
mov
orl
xchg
scas
or
mov
pop
icebp
jg
xchg
mov
xchg
dec
cli
popf
xor
and
lahf
rorl
popf
sbb
push
lods
jmp
cmp
daa
dec
lea
rcll
cmpsb
je
inc
imul
iret
cld
push
or
cmp
pushf
ss
add
inc
xor
ret
jmp
add
lea
push
jle
aas
jnp
and
mov
push
cmp
insl
mov
mov
lods
cmp
mov
aas
add
ret
jg
cmp
outsl
sub
into
push
cmp
daa
and
sub
and
pop
and
sub
dec
pushf
adc
pop
push
fs
or
add
sub
xlat
xchg
sbb
je
jl
scas
loope
mov
loope
jae
movsb
lahf
xor
lcall
pop
je
cmp
inc
xor
divl
inc
push
ljmp
lahf
inc
pushf
ret
insl
inc
cwtl
add
dec
popf
inc
add
lahf
dec
cmpsl
int
pop
jg
xchg
pop
cmp
aaa
or
out
push
andl
frstor
adc
or
js
xchg
test
inc
pop
rcll
pop
pop
adc
cmp
lea
xor
es
nop
or
ja
lret
popf
shrl
std
sub
push
mov
lock
jae
dec
cwtl
fdivrl
aad
sti
xchg
pop
jg
cs
or
mov
fnsave
or
xor
out
popf
jno
stos
pop
cwtl
ds
sbb
test
sub
fcomps
inc
push
js
std
dec
dec
sub
lcall
add
push
dec
out
push
pop
sub
mov
xchg
ljmp
popf
aam
jecxz
pop
inc
imul
lock
dec
dec
rclb
adc
je
or
sahf
insb
adc
out
cmc
xor
sub
jg
cmp
dec
dec
inc
lds
xor
inc
jno
popl
dec
test
or
jg
out
sbb
inc
lahf
pusha
sahf
stos
add
imul
or
outsb
arpl
dec
es
or
dec
or
jnp
test
fwait
dec
out
clc
xchg
jae
movsl
in
fstpl
add
test
or
jg
lods
and
xchg
pcmpgtb
inc
imul
outsl
popf
int
pushf
call
inc
imul
sub
xor
and
cmpl
jae
fsubl
loope
enter
xchg
dec
mov
lret
inc
add
scas
sbb
and
mov
shl
sbb
xchg
addr16
mov
or
dec
pop
pop
mov
sub
mov
mov
jb
jbe
or
pushf
jo
xchg
pusha
shrl
jg
aad
fwait
pop
inc
ds
mov
xchg
cmp
push
leave
jp
push
in
jbe
jge
lods
flds
inc
mov
dec
mov
js
rcll
jle
sbb
sub
lret
mov
cmpsl
or
ss
addr16
arpl
sbb
outsl
insb
faddl
test
out
cmpsl
mov
xchg
mov
or
sub
jmp
xor
push
pop
adc
xchg
pop
adc
cmp
push
pop
lock
test
dec
xor
mov
pusha
inc
lahf
aam
imul
push
clc
call
cmpsl
nop
push
fisttpll
inc
jo
cmpsb
lcall
cmpsl
and
jp
sahf
je
jecxz
rorb
sub
aam
add
xorb
add
rorl
dec
sub
inc
dec
jp
xchg
push
cwtl
dec
fwait
push
add
fistl
inc
adc
mov
sbb
into
ss
jp
sbb
mov
fnsave
daa
or
xor
jl
hlt
cmp
mov
and
pop
push
out
and
xchg
inc
jle
cmp
stc
and
pop
adc
mov
adc
and
mov
arpl
shll
movsb
lret
sub
dec
or
insl
push
xchg
fidivl
scas
movsb
sub
and
fst
pop
inc
imul
inc
sub
push
pop
mov
adc
je
aam
shll
xchg
adc
sbbl
outsl
imul
fwait
fwait
jnp
mov
ret
dec
les
xor
or
xor
lcall
cli
fs
jbe
imul
add
dec
sub
pop
pushf
test
subl
pop
sahf
nop
push
ret
inc
popa
test
adc
fs
gs
subps
cmp
sti
pop
les
outsl
add
push
xchg
push
jmp
mov
inc
insb
outsb
stc
mov
rclb
xor
xlat
stos
idivb
call
cltd
dec
add
sbb
shlb
dec
outsb
dec
jbe
push
roll
enter
mov
pop
sbb
shll
divl
and
jle
fisubrl
movsl
xchg
out
xlat
and
addr16
sub
and
xor
outsb
fimuls
sub
sbbb
out
and
mov
jl
aam
movsl
lea
jle
pushf
pop
mov
popa
jo
sarl
jno
adcb
jle
inc
lret
inc
adc
push
add
lahf
sub
sub
inc
push
xchg
mov
scas
sbbb
test
or
dec
jnp
or
popf
xchg
pop
xchg
dec
add
test
cmp
xor
mov
lcall
xorb
cwtl
fstpt
daa
xor
and
mov
and
push
xchg
and
clc
insb
movsl
jp
dec
test
stos
pop
sbb
pop
mov
cmp
mov
jno
jg
test
ret
test
cmc
xor
sub
lods
movsl
fldcw
out
clc
inc
push
xor
stos
inc
sbb
pop
mov
and
adc
dec
jp
mov
inc
stc
enter
movsb
cmpsb
mov
add
cli
lcall
inc
test
xor
fists
mov
fbld
xchg
mov
frstor
cmovl
mov
rsqrtps
sub
lcall
push
movsb
mov
mov
clc
pop
or
sub
test
cmpsb
push
xchg
hlt
mov
cmp
ljmp
push
mulb
insb
mov
mov
mov
mov
cli
clc
popf
test
jge
pushf
mov
sub
decl
xor
push
int3
jmp
mov
lret
into
aaa
push
stos
xorb
inc
aaa
test
add
jp
and
cld
mov
sub
stos
dec
sub
mov
push
dec
cmpsb
jg
cltd
mov
cmp
pop
loope
dec
mov
mov
es
mov
nop
sub
es
mov
mov
cs
pusha
mov
movb
xor
sahf
cli
jne
lods
call
fdivl
int
pop
call
cmp
mov
mov
dec
div
clc
popf
test
jns
inc
mov
es
mov
es
das
mov
cmpsb
pop
xchg
aad
cmp
iret
pop
xor
mul
test
jae
pusha
std
mov
push
test
push
movsl
pop
sub
xor
xor
andb
jns
ret
cmp
push
sub
je
nop
jne
mov
stos
jmp
xchg
ja
arpl
jp
lret
or
mov
xor
out
repnz
stos
xor
jns
add
or
lods
fmull
sub
dec
jp
cmc
xor
fistps
cmc
sub
int3
jle
jecxz
js
repnz
mov
sbb
mov
sub
xor
sub
ja
lds
testl
lcall
shlb
pop
pusha
movsb
adc
sbb
dec
mov
lcall
pop
gs
scas
inc
mov
aaa
lahf
add
sbb
add
cmpsb
int
rorb
inc
push
mov
jb
push
icebp
addr16
cmp
xor
imul
or
popf
pop
push
pushf
pop
data16
inc
push
xor
sbbb
movsb
aaa
mov
add
dec
push
fwait
xor
pop
je
lock
sub
add
movb
xchg
sbb
dec
mov
fdiv
push
cmp
lds
sub
sub
outsl
dec
lahf
int3
push
imul
add
mov
xchg
jb
cmp
ljmp
sub
sub
popl
push
push
lods
arpl
jns
sbb
add
sub
imul
jecxz
inc
xchg
push
and
arpl
jns
sbb
add
sub
pop
jge
inc
add
call
mov
in
xor
dec
sub
not
imul
filds
lret
fwait
movsb
in
insb
adc
into
test
pop
pop
jno
xchg
sbb
dec
mov
adc
sub
sub
lahf
sub
sub
pushf
call
xchg
clc
add
je
or
dec
aad
mov
xor
push
dec
popa
testl
xchg
mov
addb
and
inc
xor
xchg
mov
insb
adc
jge
aaa
push
imul
jns
mov
jnp
cmp
mov
mov
stc
jnp
sbb
pop
pop
pop
add
xchg
sbb
insb
jnp
out
jg
pop
pop
dec
dec
add
xchg
inc
enter
pop
dec
dec
insl
incl
fsubr
sbb
adc
jb
pop
lret
cld
into
add
nop
js
mov
cmp
jmp
icebp
in
arpl
and
jecxz
mov
or
insb
clc
mov
dec
in
addr16
inc
jg,pn
sbb
aad
mov
f2xm1
push
push
mov
xor
push
scas
and
xchg
lods
xor
pop
adc
clc
stos
jecxz
xchg
add
xchg
jb
scas
mov
out
enter
inc
cmp
in
push
mov
jno
outsb
in
cmp
pop
xor
ja
pop
cwtl
repz
loopne
xorl
or
mov
or
xchg
fmul
test
aas
or
mov
faddp
and
mov
fcomps
xchg
push
xor
movsb
movsl
sbb
scas
shrd
or
ret
sub
loopne
pop
push
test
aaa
or
std
out
js
aaa
and
push
xor
push
xchg
int3
test
cli
inc
pop
ret
pushf
push
xchg
dec
inc
fidivrl
das
dec
sbb
lock
jnp
data16
jl
xor
lea
xor
cmp
and
sub
fldt
fstpl
addr16
jecxz
sbb
mov
ja
mov
jmp
loopne
cmp
js
jns
shll
jo
xchg
repnz
div
scas
das
les
call
movsb
or
or
xchg
cmp
sub
mov
mov
lcall
mov
into
pop
push
aam
cmp
pushf
les
rol
loop
dec
repz
push
int
scas
pop
sub
jbe
scas
movsl
lock
cmpsb
cmp
pushf
mov
push
xor
sub
cmp
push
cmp
punpckhbw
insl
push
push
xor
pop
dec
mov
insb
sar
add
movsb
dec
mov
insl
xor
add
dec
mov
push
cld
mov
mov
mov
js
test
push
fwait
pop
pushf
inc
dec
add
into
xchg
call
push
loopne
icebp
pop
push
inc
or
mov
ja
pop
imulb
test
cmp
sub
mov
enter
push
xor
jecxz
add
sbb
jb
cmc
cmpsb
or
aas
daa
pushl
aas
cmc
iret
push
cmp
mov
es
push
adc
mov
adc
punpckldq
and
out
scas
and
stos
sbb
iret
nop
adc
pop
mov
xchg
cmc
test
ljmp
js
nop
stc
mov
cmpsl
jle
icebp
test
cli
mov
pop
adc
sbbl
adc
mov
add
mov
mov
sbb
cli
xor
loope
add
cmp
lds
jb
push
push
test
int3
cmpsb
scas
insl
xchg
or
popf
nop
push
sub
cmp
or
cmp
adc
adc
pop
repz
lock
icebp
sub
pop
inc
stos
inc
mov
dec
arpl
insl
push
or
xchg
iret
sbb
setg
xor
icebp
gs
and
int3
test
lret
ljmp
inc
xchg
pop
scas
push
or
loopne
lods
lds
mov
xchg
leave
xor
xchg
jge
enter
mov
lods
insb
cmp
stos
push
jecxz
subb
xor
sub
jo
test
cmpsb
xor
xor
pop
out
stos
sub
mull
jle
dec
leave
ss
dec
ret
loope
jae
lret
push
pop
push
inc
push
out
xchg
cmp
repnz
ljmp
xchg
pop
lcall
rorl
or
aam
enter
and
or
sti
pop
lods
outsl
lods
xlat
mov
sub
hlt
mov
mov
lods
test
and
xchg
pusha
sbb
and
add
xor
pop
jmp
lock
inc
ja
loope
addl
sub
das
ljmp
negb
clc
xor
repz
fmuls
mov
push
sbb
inc
repnz
mov
adc
jno
push
fiadds
gs
cmp
popfw
lret
sbb
pop
xor
adc
and
or
pop
imul
arpl
sbb
shrb
js
lret
jns
push
loopne
sbb
jecxz
dec
xor
mov
xchg
fs
je
in
xor
jb
dec
pop
mov
xchg
cwtl
mov
or
arpl
pop
pusha
mov
push
pop
subl
push
adc
jle
sbb
cmp
inc
cmp
lods
scas
xchg
cmp
stc
mov
shll
lods
sub
nop
cld
pop
jbe
cli
inc
and
mov
addl
and
cwtl
or
js
inc
sbb
jle
dec
out
repz
stos
cmp
sub
cmc
add
inc
neg
in
movsb
repnz
sub
dec
add
and
jno
in
mov
add
mov
fisttpl
jl
mov
mov
scas
push
fidivrl
mov
imul
orb
mov
and
scas
cmp
xchg
arpl
in
je
inc
and
cltd
cli
scas
mov
test
lods
and
fwait
out
push
mov
push
xorl
ljmp
and
push
inc
xchg
cmc
int3
out
push
in
xlat
js
addr16
pop
fcompl
xor
fstpt
xchg
test
cmp
inc
out
enter
pop
lret
aaa
lahf
loopne
cmpsl
adc
sbb
sub
and
test
sbb
clc
dec
cmp
adc
and
mov
daa
mov
pop
pop
lahf
push
lods
stos
imul
mov
sub
add
rcll
movsl
aas
add
stos
sub
mov
add
mov
sbb
rcll
dec
lea
cmp
aad
mov
xor
test
daa
and
movsb
pop
xchg
test
jle
pop
xlat
scas
cmpl
stos
cmp
adc
xor
fcmovne
cs
inc
repz
xchg
cs
xchg
repnz
scas
imul
jmp
xchg
sbb
in
ficomps
xor
fldenv
enter
jae
pushf
sbb
loope
enter
popf
jle
in
dec
pop
sbb
dec
xchg
imul
jg
inc
mov
dec
popf
int
xchg
pushf
pop
sahf
ds
movb
lods
decb
decl
xchg
mov
orb
jge
or
scas
imul
mov
cmp
pushf
arpl
xchg
outsb
jbe
subl
pop
jb
lods
jle
sahf
add
shld
mov
mov
push
mov
sbb
jp
add
mov
fcoml
cwtl
shll
popa
inc
mov
iret
jbe
out
mov
je
jmp
pop
pushf
fwait
xor
push
jbe
test
jge
mov
fists
out
pusha
pop
dec
movsb
sub
ja
jmp
xor
in
mov
push
pop
popa
adc
std
jmp
call
data16
fs
bound
jl
imul
arpl
imul
adcb
add
call
xorl
js
push
push
inc
je
inc
pop
cmp
jl
std
dec
mov
daa
lea
sbb
ljmp
pop
lahf
xchg
jno
cmp
aaa
push
mov
test
adcl
cmp
jge
inc
push
adc
add
iret
mov
mov
lods
ljmp
mov
out
xchg
insb
test
jo
and
add
sbb
lahf
pop
adc
sub
pop
scas
test
lret
movsl
or
push
and
inc
sahf
pop
insb
pop
in
mov
loopne
dec
icebp
cli
push
mov
push
mov
and
or
push
mov
or
iret
pop
push
mov
repz
lods
test
mov
loopne
shl
add
enter
es
mov
adc
or
lret
push
xchg
test
nop
lea
inc
mov
out
imul
xchg
cwtl
ret
sub
adc
cld
data16
addr16
mov
in
jae
lretw
xor
xchg
mov
mov
outsl
call
mov
pop
push
test
pop
cmp
jg
and
push
pushf
lea
mov
adc
ds
shlb
int
js
pop
out
pop
cwtl
cld
xor
pushf
cmp
imulb
mov
out
js
je
test
push
iret
sub
sbb
dec
push
sbb
mov
xor
cmpsl
mov
movsb
stos
xchg
adc
xlat
add
cs
sub
mov
es
lds
dec
jg
dec
shll
insb
jg
daa
into
mov
andl
test
data16
push
pop
leave
push
mov
mov
xchg
xchg
lea
inc
sbb
mov
add
mov
or
pop
inc
sbb
sub
inc
sub
dec
roll
dec
movsl
adc
insb
pop
and
mov
xor
aaa
push
fistpl
dec
movsl
lock
mov
test
call
jns
js
subb
ffree
mov
ljmp
pop
fwait
mov
dec
push
adc
mov
in
mov
movsb
mov
inc
fs
push
jo
or
cmp
insb
push
in
les
xchg
call
sbb
add
push
out
std
jb
cwtl
mov
rcrl
mov
cmp
dec
jp
das
cs
arpl
push
adc
cmp
add
movq
push
and
xor
pop
not
rcll
out
mov
das
xchg
adc
scas
push
xor
cmc
jo
cltd
sub
sub
and
into
aam
push
in
ss
and
cmp
or
gs
cmp
popa
lea
mov
push
mov
add
lods
mov
xchg
stos
fcmove
sub
dec
and
add
cmpb
arpl
icebp
arpl
mov
mov
subb
push
addl
fwait
daa
dec
mov
scas
test
repz
stc
xchg
pop
inc
repnz
push
or
mov
jb
mov
pop
and
pop
mov
jne
lret
movsb
inc
inc
and
repz
xchg
push
ds
xor
and
outsb
dec
or
jnp
loopne
and
stos
cs
pusha
lret
inc
mov
cmp
inc
mov
or
aaa
stos
cmp
pop
out
xlat
aam
pop
int
inc
sub
pop
cmp
mov
mov
js
inc
dec
mov
dec
sub
pop
stos
sub
or
sub
inc
stos
sub
mov
stos
sub
cmpsb
test
or
adc
add
fwait
mov
shrl
pop
add
fsubs
sub
pop
or
in
fisubrs
dec
xorb
test
xchg
or
cmp
sub
or
mov
inc
jo
daa
mov
cmp
out
xchg
setae
cwtl
jmp
or
out
sub
pushf
xor
lock
jo
outsl
adc
stos
insb
std
mov
das
test
sgdtl
cs
jns
js
and
cmp
push
and
sub
cmp
pop
xchg
test
cmpsl
cmp
scas
cmp
insb
stos
mov
fists
pop
das
test
and
xchg
addb
jae
in
movsb
mov
and
and
pop
imulb
iret
ja
cwtl
loop
int3
fcomps
movsl
pop
xchg
jns
xor
shr
sub
push
sub
clc
mov
ss
mov
and
pop
cmpsb
fisubrs
mov
push
xor
cmp
dec
push
jg
das
jecxz
fwait
sarl
dec
les
pushf
mov
fnsave
gs
mov
cmpsb
add
mov
and
xor
cmpsl
mov
fdivrp
sub
dec
and
dec
cmpsl
dec
and
cmpsb
cld
mov
xor
xchg
add
cmpsl
loopne
cli
mov
in
into
pop
jno
xchg
in
jecxz
rcrl
pop
add
sub
incl
movsl
sahf
lds
cs
mov
std
jle
mov
out
lods
out
jo
hlt
mov
int
mov
xchg
xor
les
jnp
and
sub
int
pop
pop
mov
popf
nop
outsl
ja
push
inc
or
aas
inc
mov
adc
js
aam
jge
jp
and
mov
sbbl
mull
std
jns
mov
shrb
inc
adc
fisubl
pop
mov
cwtl
negb
xchg
dec
aad
out
pop
xor
adcb
fidivs
pop
pushf
xor
mov
aas
fmuls
inc
imul
xor
jae
xchg
dec
and
jmp
sub
lcall
xor
mov
or
push
jge
or
inc
fcomps
in
cli
mov
xor
or
es
jge
add
pushf
fstps
push
mov
jbe
inc
lcall
jae
ficoml
les
sub
in
insl
dec
imulb
or
jg
js
outsl
inc
pushf
leave
pop
in
sbb
cmpsl
fstpl
js
mov
push
insb
lds
test
inc
ss
mov
mov
jg
sbbb
stos
jne
ljmp
addr16
xlat
sub
push
xchg
jae
add
call
gs
lahf
and
std
lahf
jbe
dec
xchg
out
mov
addr16
sti
out
mov
sahf
pop
cs
lret
imul
xor
stc
dec
ds
shrl
cmc
pop
gs
and
push
fwait
push
subb
pusha
and
insb
das
xor
jae
xor
lds
scas
mov
jno
ljmp
push
push
xlat
mov
rolb
or
iret
mov
cmp
jge
movsb
xchg
jo
pop
pushf
data16
dec
xchg
push
inc
ficoms
xchg
mov
in
mov
inc
mov
cli
ret
xchg
loope
mov
aam
jle
shrl
pusha
in
cwtl
scas
add
jp
mov
jmp
xor
mov
and
jb
repnz
or
xchg
loopne
mov
mov
sub
jmp
or
repnz
subl
push
insb
ret
sub
cmc
arpl
scas
aaa
mov
jo
shrl
sbb
sahf
divl
enter
std
ds
adc
xchg
mov
sub
dec
pop
ret
adc
sti
cmpb
dec
jae
pushf
fadds
sbb
aas
in
mov
shlb
sub
mov
in
inc
popf
clc
jno
pop
in
outsb
jne
aam
inc
push
dec
repz
fxam
jae
sahf
notl
orl
cmp
jae
jns
in
dec
xor
in
ret
xor
dec
lcall
sahf
and
pusha
and
xchg
cmc
lcall
cmpsl
es
pop
int3
fimuls
sbb
aam
incb
xchg
pop
adc
arpl
popa
pop
push
repz
xorl
leave
rolb
jno
mov
mov
outsb
xor
xorb
jne
call
dec
frstor
jnp
scas
mov
enter
jnp
lret
push
popa
mov
data16
pop
push
test
jmp
aas
push
cmpl
lods
ljmp
shll
push
mov
jl
js
and
dec
mov
pop
or
mov
push
in
pop
pop
adc
pop
imul
fisttpl
add
jnp
gs
sahf
inc
or
dec
and
stos
jg
adc
lock
clc
jg
loopne
pop
cltd
fs
jge
add
jmp
repz
bound
pushf
lods
cmp
adc
jle
in
inc
xchg
pop
repnz
mov
leave
daa
dec
jge
pop
sahf
xchg
pop
xor
sub
jb
mov
mov
xchg
and
imul
shll
into
fldt
xlat
inc
dec
repz
imul
dec
lahf
add
ja
add
mov
pop
fdivrl
add
repnz
adc
inc
cld
pusha
mov
pop
pop
inc
lods
sbb
lea
pop
movsb
push
fwait
pop
inc
cmp
xchg
andb
popf
lods
dec
and
xor
cmpsb
data16
test
out
cmpsb
insb
and
scas
jge
ss
pop
addr16
int
fisubrl
dec
call
fidivl
push
imul
jge
xor
fs
inc
xchg
orb
or
jo
add
cltd
sbb
lret
mov
dec
or
bound
sub
dec
call
pop
push
pop
in
mov
mov
pushf
dec
adc
mov
dec
jno
test
xchg
mov
jae
jecxz
xchg
lahf
pop
xor
imul
nop
insl
adc
arpl
adc
movsl
fldt
data16
call
mov
fcomip
mov
rolb
add
outsb
cmpsb
subl
adc
push
pop
mov
cmp
xchg
ss
or
aad
cmpsl
dec
mov
mov
imull
mov
mov
aad
jmp
lahf
aaa
push
mov
push
jnp
ficompl
das
mov
and
push
int3
pop
and
std
xchg
mov
loop
pop
ret
sub
cmp
push
sub
mov
xchg
pop
dec
scas
pop
or
push
nop
test
nop
or
lahf
xchg
pop
lea
push
mov
cmpsb
in
mov
sub
lahf
jns
out
pop
or
shll
lret
mov
not
sbb
jne
add
sub
movsb
sub
stos
or
sahf
fildll
pop
lea
inc
cmpsb
test
decl
mov
bnd
ja
in
push
sbb
cltd
fists
hlt
mov
insb
addb
push
movsb
subb
call
jg
or
pop
loope
inc
inc
lods
bound
mov
cmp
cli
insb
inc
cmp
lret
in
pop
sub
scas
lahf
or
sub
aad
xor
jle
jmp
mov
bound
test
inc
cmpsb
mov
mov
xor
mov
sarl
mov
rorl
pop
outsl
cwtl
loop
movsl
cwtl
mov
adc
mov
mov
addr16
loopne
cmpsl
mov
inc
ret
ja
and
jp
xor
comiss
mov
pop
jno
ss
add
xchg
pop
fldenv
dec
pushf
xchg
mov
cld
jle
lea
test
lock
sbb
adc
pop
xchg
in
mov
cmp
mov
js
hlt
jno
icebp
dec
dec
xchg
mov
fimuls
xor
loop
jp
xor
push
outsb
jne
push
add
jge
or
lods
push
inc
xor
push
add
add
fstl
push
xchg
dec
cmpsb
test
cwtl
inc
outsb
pop
les
pop
cltd
sub
les
and
inc
pop
and
lock
adc
jle
mov
ljmp
aad
mov
mov
fcomp
xchg
jbe,pn
add
ss
pop
xchg
mov
sarb
loop
js
ljmp
movsb
add
or
jae
dec
mov
jp
iret
cmp
pop
sub
ret
orl
out
int3
sub
jecxz
int
sbb
movsl
and
out
jg
daa
aaa
cmp
mov
orl
sbb
inc
cmpsl
out
inc
and
cmp
fsubs
arpl
jne
mov
push
aaa
mov
lret
popl
adc
fs
mov
pusha
js
xchg
addb
dec
mov
jae
jbe
xchg
mov
jmp
aam
fwait
cmp
lahf
pop
pop
aad
orb
sub
in
stos
mov
lret
pop
add
jp
stos
xor
cmp
jne
dec
fs
daa
fisubl
das
inc
dec
mov
loop
xor
jecxz
fs
aad
in
mov
loope
aas
cmpsl
xor
lcall
popf
leave
xchg
mov
ss
pop
aaa
sahf
mov
fbld
xlat
leave
xchg
mov
adc
jmp
clc
xchg
push
and
mov
pop
lahf
ret
es
or
xchg
sub
orl
iret
jo,pt
mov
shll
mov
or
xchg
sub
sub
cmp
imul
push
xor
sbbl
lock
or
loope
adc
xchg
nop
mov
xchg
dec
push
push
mov
sub
jnp
xchg
xchg
lods
mov
lcall
in
fwait
imul
addr16
inc
or
mov
and
std
cld
movaps
lea
insl
cmp
mov
mov
cs
sbb
mov
dec
lcall
fbld
push
pushf
sbb
mov
pop
in
shlb
sahf
push
push
cwtl
dec
sbb
push
insb
dec
xlat
adc
and
lds
je
pop
insb
mov
add
dec
pop
arpl
test
addr16
enter
jns
jnp
jg
adc
xor
xor
xchg
lcall
xchg
push
sarl
add
inc
dec
pop
dec
and
lret
lods
jnp
ljmp
sbb
mov
test
lods
mov
mov
xchg
fbld
push
jmp
jecxz
insl
or
setae
adc
pop
das
lret
or
push
xor
xchg
fnstsw
inc
and
nop
push
adc
cs
and
std
mov
pop
faddl
pop
ja
mov
push
std
jns,pn
sbb
repnz
cmp
in
lcall
movsb
jbe
ret
pop
xchg
jnp
cmp
mov
adc
js
popa
out
out
out
outsl
or
jb
mov
leave
addr16
notl
sbb
aas
sbb
divb
in
jg
call
push
int
stos
out
sub
jecxz
and
mov
outsb
add
jnp
mov
sub
push
cltd
pushl
push
inc
inc
push
jg
or
lods
push
cltd
lahf
mov
sbb
lea
jno
xlat
ret
push
xor
mov
fisubs
cmp
je
mov
jo
stos
cmpsb
and
sub
dec
ffreep
in
lret
fdivp
jg
push
jecxz
lods
sbb
dec
pop
push
shll
add
mov
xor
dec
dec
xor
jne
js
inc
mov
jge
data16
sub
shll
cmp
das
jnp
hlt
add
lcall
rclb
loope
lahf
adc
stos
cmpsb
sti
adc
test
jecxz
inc
xchg
adc
jmp
out
dec
mov
fs
movsl
inc
test
nop
hlt
pop
mov
or
test
mov
push
into
sub
mov
insb
add
mov
cmp
push
adc
dec
jne
xor
fsubp
jg
ja
rclb
int
nop
jmp
jb
push
fsubrs
jl
xchg
pop
rol
das
lahf
or
inc
fistps
cld
xchg
jbe
incb
xlat
push
dec
sbb
cmp
push
jbe
inc
xchg
call
jo
popa
jno
bound
scas
mov
pop
cmp
test
mov
movsl
outsl
fimuls
ret
mov
add
js
roll
and
sti
aad
mov
pop
cmp
std
sbb
jge
push
jns
jbe
mov
clc
pusha
mov
outsb
outsb
dec
sbb
xchg
rcll
xor
mov
das
ds
push
sti
add
add
push
fnstenv
dec
mov
es
sub
cmp
scas
fs
mov
insb
dec
cs
cld
mov
lods
js
dec
push
cwtl
movb
mov
sub
ret
fucomp
adc
xor
lea
sbbb
jo
push
xor
mov
out
lea
in
fnsave
cli
push
pusha
rcrl
and
pop
outsb
into
icebp
dec
sub
or
icebp
in
pop
js
add
data16
pusha
xchg
js
add
je
mov
mov
jae
lahf
dec
push
xor
mov
leave
in
aas
nop
mov
xor
dec
ret
sub
daa
and
push
mov
hlt
icebp
cmpsl
out
loope
inc
pop
nop
xchg
addb
xor
pop
dec
push
xlat
outsl
mov
adc
xchg
das
xchg
gs
stc
inc
pushf
into
fdivs
jns
ret
pop
mov
sbb
subl
adc
mov
add
dec
loope
imul
fmull
inc
testb
scas
mov
insl
je
ja
add
inc
cbtw
xchg
jbe
add
push
imul
sub
mov
lea
dec
adc
jl
out
pop
jl
cmp
insl
arpl
and
imul
insb
bnd
movsl
das
and
dec
push
stos
hlt
loope
es
dec
shr
inc
insl
add
xchg
push
jae
push
pushf
sbb
inc
outsl
mov
jge
add
pop
or
fstpl
test
arpl
mov
insl
pop
pop
jno
in
ret
add
mov
and
sub
shlb
gs
ja
fsubs
cmp
inc
cmp
sbb
pushf
aam
fwait
test
adc
nop
ret
xor
inc
jge
rol
xor
pop
sbb
repz
stc
loope
loope
dec
loope
push
sub
xchg
push
xchg
shll
mov
call
mov
into
xchg
leave
gs
mov
test
insl
in
in
add
outsb
cmp
pop
lahf
jge
cmpxchg
jne
daa
mov
push
add
das
fwait
xchg
lcall
cmp
sub
inc
push
sbb
gs
push
xlat
jne
jno
iret
push
jl
pushf
cmpb
push
daa
push
aas
das
popf
push
push
jae
push
mov
inc
subb
jnp
outsb
cmp
out
lret
cwtl
or
out
push
mov
cmp
jo
jnp
or
inc
mov
mov
xchg
jmp
adc
hlt
pushf
jnp
xchg
pop
or
add
test
into
test
movsb
movsl
pushf
xor
xchg
push
cmc
push
loop
mov
sbb
shrb
insb
dec
adc
and
stos
stc
or
mov
shll
or
lret
mov
xchg
aam
mov
mov
and
les
push
shrl
scas
imul
pusha
xchg
cmpsl
dec
ja
hlt
jnp
and
mov
dec
sbb
cmpsb
popf
jecxz
dec
sub
call
es
mov
xor
jns
pop
pusha
jcxz
dec
inc
pop
lret
insb
inc
mov
incl
test
insb
inc
aam
sahf
test
dec
sub
xlat
push
jl
out
fldt
popf
dec
arpl
xor
rcrb
fldl
cmovne
lret
mov
nop
cmp
push
jnp
xchg
jg
mov
ret
xor
sub
sbb
aam
xor
sub
jge
pop
outsb
dec
shr
gs
loop
mov
lahf
int
subl
xchg
sbb
pop
clc
mov
daa
ret
jmp
dec
sbb
mov
in
xchg
mov
add
jp
cmp
cwtl
jecxz
cmp
hlt
mov
push
cs
pop
add
cmp
stc
sub
inc
jb
xchg
xchg
lret
jmp
test
lret
out
cmp
fiadds
test
dec
outsl
pop
bound
lods
add
or
ret
cmp
pop
pushf
add
jmp
sahf
mov
into
pop
mov
mov
out
xor
hlt
push
cmp
insb
lahf
add
push
iret
ss
mov
push
fldt
adc
inc
mov
mov
outsb
imul
into
sub
fisubs
or
unpcklps
cmp
sahf
pop
add
rcr
adc
pop
outsb
sub
cwtl
data16
sbb
test
fwait
inc
test
arpl
jl
fidivrl
adc
jb
je
jbe
mov
push
jmp
push
mov
xchg
push
pop
mov
test
mov
inc
out
pop
enter
jo
loop
mov
lods
fcompl
dec
mov
mov
mov
pcmpgtb
mov
addr16
xor
dec
mov
fisttpll
testb
xor
jecxz
jno
push
ret
jb
lods
js
js
jnp
push
or
push
cmp
cmpsb
cmp
dec
cmpl
notb
aad
out
popa
pusha
mov
mov
fucomi
bound
cmp
jo
je
jb
xor
jbe
out
sbb
jb
cmp
sti
push
sub
jmp
inc
sbb
fsts
push
test
jo
jns
add
js
es
imul
cmp
cli
movsl
sub
leave
inc
ss
testl
xor
jecxz
in
outsl
add
inc
testl
mov
dec
pop
lahf
xchg
je
imulb
mov
in
mov
aas
dec
inc
lcall
jecxz
fistl
xor
xchg
jmp
mov
cmp
gs
into
fdivl
add
fstpt
es
repz
pushf
jle
or
ja
xor
popa
dec
mov
dec
and
xchg
xor
fwait
jns
add
subl
nop
add
lods
outsb
das
in
sahf
add
add
stos
adc
sub
dec
pop
je
aam
cmp
pop
add
movsb
stc
sub
js
lret
cmpsl
cmpb
dec
inc
mov
and
push
adc
mov
daa
dec
mov
movsl
and
loop
mov
inc
mov
dec
xor
movsb
fdivrs
jnp
or
aad
mov
inc
dec
test
fldl
adc
push
or
mov
outsb
or
mov
jae
fwait
aad
imul
push
pop
mov
jb
xor
lock
jbe
pusha
in
dec
jmp
insb
data16
notb
out
or
sar
rcrl
notl
lods
aaa
xor
dec
jle
hlt
sbb
outsb
pushf
gs
negb
out
daa
pop
lods
jl
mov
fadds
sahf
jae
push
fisubrs
fidivs
mov
inc
fidivrs
fldt
mov
xor
imul
cs
mov
mov
mov
push
loopne,pt
stos
in
pop
cmp
hlt
fs
arpl
cmp
cwtl
sub
mov
addr16
inc
mov
jmp
xchg
stos
push
test
cmp
push
iret
pop
insb
mov
adc
xchg
add
fldt
inc
pushf
mov
jns
pusha
gs
fcoms
mov
andl
jle
cmpsl
cmpsb
cld
and
cmc
mov
or
mov
dec
push
mov
xchg
notl
andl
insb
lret
mov
or
fiadds
in
xchg
cld
fsts
and
jmp
inc
cmp
test
nop
pop
sti
sbb
fs
pop
mov
mov
and
inc
cld
adc
lahf
ja
dec
inc
and
push
loope
es
jp
outsb
xchg
sbbb
push
lock
jo
mov
or
std
or
mov
ret
aaa
jmp
mov
popa
imul
repz
adc
dec
orb
inc
inc
mov
xchg
mov
dec
jb
popf
push
stos
jae
insb
ficompl
fstpt
and
sbb
dec
and
mov
cltd
add
pop
pop
and
enter
jno
or
outsl
pop
dec
cwtl
inc
ja
fxch
es
inc
inc
imul
push
or
mov
sub
packuswb
jne
add
std
jne
cmp
jne
movsb
push
sub
pop
icebp
cmp
cltd
dec
xchg
mov
jb
mov
mov
sub
inc
cmp
js
mov
inc
and
loope
jb
sub
mov
xchg
sbb
nop
insl
shl
outsb
repnz
push
push
mov
fidivs
dec
popa
jmp
out
ret
rcll
lcall
in
movsb
push
lcall
push
mov
rcl
sti
fnstcw
inc
sbb
movsb
add
push
ret
aad
lahf
loope
enter
jge
scas
stos
inc
pop
insl
aam
fwait
pop
out
jbe
push
loope
push
xor
addr16
mov
in
push
add
xor
stc
mov
xor
lcall
mov
dec
xor
mov
pop
pop
stos
cmp
push
push
data16
or
adc
addl
sub
xchg
dec
xchg
xlat
add
lods
jne
adc
add
or
scas
mov
test
mov
fildll
mov
popf
mov
xchg
gs
xor
test
int3
pop
sbb
push
ret
adc
test
mov
clc
inc
push
es
clc
addb
xor
in
ds
inc
xchg
cltd
xor
mov
movsb
test
jge
jbe
mov
jl
add
stc
jl
out
lret
add
sbb
ret
mov
or
pop
jno
mov
push
jecxz
mov
xchg
lahf
insb
push
sbb
xchg
pushf
sub
addl
movsb
and
mulb
lahf
sbb
cwtl
arpl
push
jp
or
outsb
adc
js
outsl
scas
adcl
enter
mov
inc
clc
dec
push
jnp
push
mov
sbb
or
popf
fcoml
cwtl
data16
pop
cmp
inc
inc
adc
loop
lea
cld
notb
out
cmpsb
sbb
popa
sub
sbb
mov
inc
inc
xor
mov
inc
fdiv
lea
enter
filds
bound
adc
cmc
sar
xchg
test
stc
lea
jecxz
in
xchg
lret
push
fwait
sbb
cld
insb
jno
mov
adc
call
xlat
dec
adc
lds
cmp
faddl
std
mov
push
jno
lds
jl
lcall
mov
add
lods
bound
inc
pop
jae
shlb
push
push
cmc
nop
push
iret
xchg
rcrb
lahf
jge
out
pushf
mov
dec
hlt
decl
sbb
bound
jae
xor
sub
or
sbb
push
lock
push
fiaddl
mov
adc
repz
rcrl
xor
pop
aam
jae
jl
fwait
sub
pusha
cmp
mov
mov
sbb
xchg
fcoml
js
pop
jl
pop
repz
sub
insb
add
jmp
mov
movsl
jge
lock
pop
imul
add
sub
pop
push
int3
jns
cmc
jp
andl
push
adc
out
inc
imul
mov
pop
pop
cwtl
lds
xchg
jp
mov
setne
add
scas
fs
mov
pop
and
mov
dec
jecxz
lret
mov
inc
dec
dec
gs
cmpsl
loop
mov
cmp
pop
out
pop
or
xchg
js
push
mov
insl
sub
ja
ljmp
sub
rcr
sub
sbb
jo
xchg
insb
dec
sbb
lahf
fwait
pushf
mov
out
pop
sub
clc
pop
push
jmp
inc
cwtl
in
xchg
in
pop
es
dec
movl
add
push
insb
int3
rcrb
stos
jbe
fcoml
xor
roll
fisubs
jns
test
pop
push
inc
mov
int3
lcall
mov
bound
mov
cs
insb
scas
les
mov
xchg
hlt
lahf
or
ljmp
scas
inc
jno
jns
pop
or
inc
arpl
sub
push
addr16
jnp
imulb
pushf
mov
xchg
push
js
lds
cmp
fs
cmc
sub
xchg
orb
pop
push
push
inc
dec
ret
fildll
pop
mov
daa
stc
sti
jl
mov
mov
js
insl
popf
mov
loop
mov
xchg
jno
jg
dec
jo
cmp
rolb
stos
mov
mov
aaa
in
das
mov
movsl
loopne
pop
les
scas
fidivl
push
movsb
leave
mov
rcrl
mov
sub
mov
jmp
test
jl
inc
sahf
lea
pop
hlt
push
fs
sti
push
lret
gs
shl
sub
adc
test
outsb
sti
les
xchg
and
xchg
or
xor
jnp
arpl
in
xchg
int
lock
fisubl
gs
fprem1
sbb
jae
dec
mov
aam
roll
lret
arpl
inc
gs
add
mov
mov
mov
aaa
pushf
push
fidivrs
shlb
xchg
ss
and
xchg
fwait
lock
cmpsl
adc
mov
mov
cs
pop
rcl
inc
and
cmpsb
nop
jmp
push
sub
jbe
cld
sbb
adc
jmp
cs
dec
movsb
stc
shlb
jo
pop
xchg
pop
sub
fidivs
in
sub
fstps
pop
or
mov
ljmp
cs
outsl
jl
xchg
rcll
ss
inc
jge
pop
lea
jb
jl
dec
and
ret
jb
enter
outsl
jno
test
mov
inc
fld
lret
loop
cld
adc
sbbb
gs
xchg
or
aas
adc
jo
js
push
or
jmp
lea
popa
pop
dec
push
pop
icebp
dec
aaa
pop
aad
sbb
push
sub
xchg
js
sbb
sbb
cmpsl
mov
dec
xchg
call
insl
adcb
lret
jle
scas
shll
xchg
jg
cmpsl
les
xchg
lret
pushf
push
xchg
jbe
jbe
sarl
ljmp
jle
ret
je
bound
sbb
repnz
into
ljmp
sub
mov
or
dec
scas
push
mov
mov
push
pop
gs
dec
jl
test
sbb
stos
jo
jmp
mov
popf
stos
shll
inc
insl
or
aaa
data16
pop
mov
call
push
cld
inc
ret
mov
xor
xchg
mov
negl
cmp
inc
fwait
xlat
insl
addb
push
ret
xchg
subl
cmp
cmp
cmp
push
fs
pushf
stos
repnz
sub
lds
movsl
test
mov
sub
sahf
movsl
adc
sbb
xchg
movsl
cmp
fdivrs
jnp
cmp
cs
movsl
scas
jns
mov
dec
inc
ljmp
xlat
aaa
or
mov
pushf
in
jl
loop
dec
push
mov
je
inc
jecxz
jbe
mov
fwait
aam
call
fwait
mov
inc
movsb
in
dec
cmp
dec
sub
cs
mov
outsl
mov
hlt
lret
pop
xor
js
mov
stos
cmp
mov
stc
cmp
jo
je
stc
lahf
xlat
lods
adc
icebp
lahf
sti
icebp
inc
or
inc
xor
pop
mov
test
scas
nop
mov
ret
fs
push
push
jns
scas
aad
dec
clc
push
cmp
cli
outsb
xchg
es
xchg
pop
arpl
mov
inc
pop
ds
jl
bnd
pop
sarl
sti
pop
fcoms
addl
mov
insl
cmp
ret
mov
test
lods
sbb
out
lret
mov
rcrb
adc
imul
pop
xchg
push
mov
push
ja
push
fs
mov
inc
insl
mov
xor
mov
ss
xlat
lock
or
jb
fbld
in
mov
faddl
dec
cli
imul
inc
ret
jp
icebp
xor
sbb
in
dec
jp
cmp
popf
jge
test
sbb
repnz
inc
xchg
add
dec
scas
aad
inc
pop
popa
xor
pop
dec
icebp
mov
or
mov
insb
lret
movl
dec
addr16
pusha
jno
adc
and
sbb
jmp
pop
sbb
push
lcall
push
dec
inc
pushf
jecxz
cmp
pop
cmpsl
lds
mov
xor
dec
sub
ss
mov
push
sub
xlat
adc
test
push
rclb
xchg
xor
inc
sbb
cmpsb
xor
imul
pushf
xchg
into
mov
outsl
shlb
out
popa
pop
mov
mov
es
std
push
xorb
pop
cmp
or
adc
dec
or
ret
sub
xor
jns
fsubrp
sub
add
xlat
jg
fnstsw
jb
jnp
mov
pop
xchg
dec
jp
xor
sahf
paddb
mov
sbb
loope
pop
push
outsb
add
xchg
in
push
xchg
and
lahf
ja
aaa
pusha
xchg
pop
aad
cmp
sbbl
adc
xchg
dec
or
mov
inc
or
xchg
jp
mov
fsubr
gs
inc
mov
xor
mov
mov
pushf
dec
mov
sbb
rcl
mov
loope
lss
push
not
pop
xchg
add
cmpl
inc
push
je
cmc
pushf
popa
fsubl
je
or
mov
aaa
fwait
pop
pop
dec
xchg
sbb
lods
push
popf
shlb
xchg
ja
sbb
orl
loop
jmp
inc
mov
pop
xor
imul
shll
and
fldl
test
xor
ret
cwtl
sbb
test
test
cmp
ret
mov
mov
xchg
xorl
sub
clc
aaa
pop
jns
loopne
call
xor
jecxz
insl
sbb
aam
fnstcw
mov
fisubrs
lcall
mov
push
in
aad
in
fcomi
dec
addl
cltd
jno
mov
xchg
fsin
ds
push
or
pop
jnp
mov
test
mov
call
mulps
mov
scas
cmp
testb
movsl
and
fdivrs
add
add
jbe
pushf
shlb
icebp
arpl
ljmp
xorb
icebp
cmp
mov
push
pop
mov
sbb
jbe
outsl
pop
dec
sbb
push
xor
mov
xchg
mov
jg
dec
jnp
in
mov
xor
shll
push
mov
in
imul
loopne
xor
sub
lahf
inc
cli
lods
jno
je
mov
sarl
popf
mov
dec
andb
scas
jb
dec
fimull
fiadds
and
test
sbb
mov
aad
xchg
lahf
dec
push
jle
jo
mov
xchg
mov
sub
dec
hlt
stc
imul
sbb
inc
or
arpl
inc
decb
ret
xchg
loopne
inc
xchg
mov
dec
sub
or
nop
ret
sub
mov
add
cmp
rorl
insb
push
cmp
add
adc
jl
adc
inc
jmp
jne
in
les
mov
scas
data16
ja
or
add
push
pop
jp
std
mov
adc
add
dec
jge
inc
jo
pop
fmull
addr16
xchg
outsb
and
in
mov
ss
or
adc
xor
sub
pop
dec
mov
pop
mov
stos
or
aad
mov
ret
hlt
js
xor
dec
aas
pop
mov
or
inc
mov
adc
jmp
std
divl
rcll
jge
jno
jno
adc
push
cli
cmovl
mov
xchg
mov
pop
pop
or
es
in
jmp
pop
ja
and
jl
sub
loope
jge
adc
pop
divl
es
adc
ret
pop
ja
int3
out
add
daa
adc
mov
push
dec
js
cmpsb
jl
testl
sahf
sub
sub
lret
ds
fbstp
cmp
dec
mov
fcomps
ss
fmuls
cmpsl
mov
fs
mov
das
mov
ret
cmp
dec
das
jecxz
js
repz
mov
mov
scas
mov
sub
cmpsb
lods
scas
inc
inc
fsubl
int3
sahf
addr16
fsubl
sbb
enter
mov
dec
adc
aas
mov
mov
push
mov
pusha
repz
insb
scas
pop
inc
pushf
sub
mov
or
out
jo
cmp
cs
pop
sbb
lahf
cmp
sahf
scas
add
mov
test
cmpsb
inc
scas
jmp
jo
sti
mov
fs
and
jo
cmp
aam
pop
cmp
int3
das
arpl
js
divl
int3
loop
rcrl
ds
iret
inc
jo
cmp
jl
addr16
repz
xchg
das
pop
dec
test
mov
sub
jecxz
mov
in
cmpsb
loopne
mov
fs
mov
xchg
and
pop
fistpll
dec
pusha
and
push
iret
xchg
cmp
mov
cmp
shrb
pop
dec
enter
mov
mov
adc
sahf
mov
pop
je,pt
outsl
jo
cmp
push
out
adcl
addr16
aas
dec
movsb
js
fbstp
in
mov
rclb
mov
mov
cmpsb
pop
scas
xlat
inc
jo
sti
mov
nop
dec
and
jo
cmp
cs
ffreep
daa
outsl
cmp
call
jnp
in
sbb
andl
test
arpl
pop
add
mov
mov
add
sarl
lock
jecxz
loopne
repz
add
daa
xchg
xor
cs
xor
out
pop
pop
daa
xlat
cmp
pusha
das
or
js
xchg
mov
mov
lret
mov
or
lock
jg
in
mov
add
pop
push
push
cmpsl
mov
sub
sarl
js
and
jo
cmp
movsb
daa
dec
cmp
les
outsl
dec
hlt
js
or
mov
aas
push
sahf
mov
dec
ds
pop
jo
cmp
pusha
out
ja
daa
pop
cmp
mov
aas
dec
movsb
js
loopne
repz
int3
xchg
mov
mov
icebp
es
movl
sahf
out
pusha
pop
and
jo
cmp
fsubs
push
cmp
clc
das
jae
call
mov
and
movsb
cmpsl
mov
push
mov
imul
iret
jnp
push
out
lahf
andb
cmp
movsb
das
dec
dec
aam
push
jecxz
loopne
repz
loop
enter
shld
jo
cmp
mov
push
dec
daa
jecxz
js
repz
js
mov
sub
jecxz
mov
clc
data16
loopne
mov
fs
inc
lret
fisubs
ret
mov
dec
insb
and
pop
iret
fwait
jo
cmp
movsb
daa
inc
cmp
int3
das
addr16
loopne
sbb
movsb
pushf
and
mov
push
das
fisttpl
js
addr16
mov
fwait
mov
and
cmpsb
mov
fs
mov
hlt
aam
into
pop
jno
pop
and
mov
sbb
inc
scas
jecxz
js
repz
cwtl
xor
scas
ds
mov
cs
rol
daa
outsl
cmp
call
mov
mov
sub
pop
sahf
shll
and
push
iret
xorl
xchg
cs
cmpsl
mov
cwtl
inc
fsubrl
push
dec
int3
js
repz
mov
adc
iret
enter
mov
mov
mov
addr16
pop
sbb
mov
aas
mov
fdiv
and
ds
into
or
cmp
das
mov
sub
nop
jecxz
mov
jl
cmpsb
jl
testl
sahf
pop
arpl
iret
jo
cmp
cs
out
sti
cld
daa
ja
adc
mov
sub
rorl
js
jg
push
mov
lahf
mov
and
cmpsb
movsb
scas
dec
inc
aam
push
mov
clc
aam
into
pop
jno
and
pop
cmp
pop
jo
cmp
js
jg
daa
xchg
cwtl
pop
test
das
dec
mov
aas
lret
mov
mov
jmp
in
decl
movsl
adc
mov
xor
daa
ret
cmp
dec
das
out
pusha
js
xchg
cmp
mov
dec
add
cmpsb
shrb
mov
adc
and
ds
mov
sub
ret
dec
pop
js
outsl
mov
mov
mov
xor
cmpsb
mov
fs
mov
int3
loopne
repz
add
cmp
xchg
mov
mov
sub
and
fs
jg
push
cmp
mov
and
lods
das
inc
dec
fdivrl
jecxz
loopne
repz
loop
mov
movsb
and
ds
iret
inc
jo
cmp
jl
jnp
daa
or
subb
dec
mov
aas
lret
mov
mov
jmp
clc
enter
mov
xor
out
dec
push
daa
shll
adc
out
jl
testl
mov
sbb
cmpsb
fsubrs
addr16
in
shlb
aas
mov
and
pop
andb
sahf
arpl
adc
cmp
pop
out
fwait
pushf
daa
pop
cmp
mov
js
shll
loopne
repz
rcrb
add
mov
lret
pop
mov
cmpsl
out
jl
or
das
pop
dec
test
mov
sub
jecxz
mov
clc
data16
cld
scas
ja
in
xchg
xor
mov
addr16
das
shrl
sub
jecxz
mov
cmp
cmpsb
mov
fs
mov
int3
loopne
repz
pop
jno
cmp
cltd
inc
lods
push
lods
and
ds
iret
inc
jo
cmp
daa
out
pusha
cwtl
or
das
sbb
js
cmpsl
mov
mov
fstpt
clc
data16
loopne
mov
fs
mov
mov
iret
cmp
dec
das
jecxz
js
testl
mov
sbb
cmpsb
fsubrl
addr16
in
shlb
aas
mov
and
dec
lcall
mov
push
jo
cmp
insb
out
ja
daa
add
mov
and
js
iret
mov
mov
out
in
enter
xchg
or
pop
push
mov
icebp
es
movl
sahf
jmp
pop
and
jo
cmp
lods
daa
pop
cmp
hlt
das
jg
in
sbbl
mov
and
push
andb
das
xlat
test
sub
jecxz
mov
xor
cmpsb
mov
aas
inc
movsb
fs
mov
clc
and
ds
cmp
das
mov
daa
aaa
js
aaa
mov
mov
push
mov
insb
repz
push
fs
mov
mov
or
jmp
clc
cmp
cs
movups
fwait
cmp
sahf
scas
cmp
dec
leave
aaa
dec
cwtl
cmpsb
pop
scas
xlat
pop
stc
sahf
out
jl
and
jo
cmp
test
inc
cmp
int3
das
addr16
cld
js
sbb
mov
leave
sub
pop
mov
mov
mov
cmpsb
pushf
scas
pop
inc
mov
mov
or
xlat
ds
into
out
call
out
pop
add
sub
or
jecxz
mov
mov
cmpsb
dec
scas
jecxz
js
repz
pushf
xor
mov
jo
cmp
cs
out
out
hlt
daa
jg
in
andl
xchg
sahf
lcall
sub
ret
dec
pop
js
outsl
mov
mov
mov
xor
cmpsb
mov
cmp
fs
mov
clc
and
ds
add
cmp
das
mov
and
js
xor
and
mov
insb
mull
pushf
fs
mov
movsb
sbb
fstpt
or
jmp
in
ljmp
shr
add
sahf
scas
ds
enter
ret
cmpsb
pop
scas
roll
fs
js
mull
dec
and
jo
cmp
cs
fcmovnu
daa
push
cmp
cld
das
ja
in
js
adc
mov
iret
mov
inc
mov
jnp
push
out
xchg
test
das
cmp
test
inc
dec
fdivrl
jecxz
loopne
repz
loop
mov
test
mov
push
dec
jo
inc
je
mov
xchg
dec
and
jo
cmp
cs
ffreep
daa
imul
das
mov
fwait
sub
cmpsl
push
addr16
iret
dec
pop
js
outsl
mov
mov
cmpl
and
lods
fs
mov
lock
and
aas
fmul
sbb
cmp
and
mov
push
and
push
bound
lea
stos
mov
icebp
es
adc
mov
add
shll
cmp
cs
out
or
daa
xchg
cwtl
xchg
pusha
or
lcall
cmpsl
dec
pop
jnp
adc
mov
inc
pop
cmpsb
test
aas
mov
fdiv
and
ds
into
divl
cmp
das
int3
in
pop
into
xchg
test
dec
mov
je
cmpsb
je
incl
movsbl
and
mov
jo
cmp
cs
jecxz
daa
jae
in
cwtl
xchg
das
xchg
ds
leave
aas
sbb
fistpll
ds
iret
xchg
cmp
mov
cwtl
pop
les
outsl
dec
hlt
js
movzbl
mov
xchg
stc
and
es
push
mov
mov
jae
push
xsha256
cmpsb
xchg
scas
pop
inc
test
mov
add
sarl
lock
jecxz
loopne
repz
pop
sbb
xchg
aaa
or
mov
dec
dec
cwtl
cmpsb
pop
scas
xlat
pop
stc
sahf
out
jl
and
jo
cmp
aam
pop
cmp
clc
das
ja
in
js
adc
mov
mov
push
sahf
and
push
iret
jo
cmp
mov
xor
fsubrs
push
dec
enter
mov
mov
adc
dec
mov
in
inc
mov
jo
cmpsb
jl
or
sbb
mov
and
jo
cmp
cs
jmp
daa
mov
cwtl
fwait
data16
scas
dec
adc
fstpt
test
leave
es
js
outsl
mov
mov
cmpl
and
lods
fs
mov
lock
and
ds
sbb
cmp
and
mov
lods
push
mov
pop
jo
push
arpl
cmp
cwtl
das
adc
js
mov
adc
sarl
loopne
cmpsb
call
fs
mov
push
cmpsl
mov
sub
fildl
pop
dec
arpl
mov
inc
iret
lahf
jo
cmp
mov
cwtl
pop
shrb
dec
lock
or
mov
or
dec
leave
inc
dec
mov
movsb
sbb
out
jl
mull
inc
and
jo
cmp
shlb
cmp
in
dec
adc
push
mov
lret
scas
mov
push
fistpll
pusha
pop
and
jo
cmp
lods
daa
inc
cmp
les
arpl
js
or
enter
sahf
cmpsl
arpl
nop
and
cwtl
iret
pop
jo
cmp
pusha
out
ja
daa
sbb
mov
xor
js
in
loop
mov
cltd
sub
movsb
iret
cmp
cmp
test
push
inc
daa
xlat
cmp
js
pushl
pop
mov
lahf
mov
sub
cmpsb
mov
fs
mov
call
mov
and
mov
dec
push
jnp
adc
mov
dec
pop
cmpsb
mov
aas
inc
test
dec
mov
hlt
in
and
aas
fmul
adc
adc
fdivs
pop
xor
js
adc
mov
sbbl
push
movl
sahf
dec
inc
push
add
pop
xlat
mov
cmp
repz
xchg
fwait
sbb
mov
mov
insb
fimuls
push
roll
and
pop
cmp
cs
cmpsl
pop
dec
in
jp
dec
in
jg
stc
xchg
insl
stc
test
movsb
rcrb
sub
jb
hlt
mov
cmp
or
jae
scas
jle
nop
push
inc
sub
xchg
lds
adc
cli
scas
cld
jecxz
push
mov
push
adc
insl
mov
jnp
into
inc
jp
jnp
out
or
ss
jle
in
cmc
inc
push
xlat
and
mov
das
dec
sbb
inc
inc
out
ret
pop
bound
sbb
repnz
push
cltd
loopne
fwait
scas
jne
xor
mov
jle
cmpsl
sti
pushf
lods
sbb
pop
mov
call
mov
repnz
cmp
faddl
add
out
ja
push
add
jo
push
and
rcl
dec
cmpl
or
pop
andb
sub
adc
lcall
xor
fists
aaa
add
rorl
xchg
mov
xor
ds
popl
dec
xor
lock
scas
mov
mov
sbb
fldcw
mov
icebp
xchg
inc
inc
push
cmp
dec
icebp
inc
sbb
in
rolb
xchg
sub
daa
dec
sub
jle
xor
fwait
incl
addr16
jp
mov
mov
cmp
mov
daa
xchg
dec
xor
sbb
iret
sbbl
out
in
mov
jo
or
fadds
subl
lahf
adc
add
cs
aas
les
xchg
std
pop
sarl
movb
mov
lahf
test
test
xchg
mov
pop
out
cmp
or
movsb
mov
xchg
mov
scas
inc
lods
sbb
mov
call
clc
mov
icebp
fdivrp
dec
movsb
add
pop
dec
inc
daa
adc
out
pop
mov
arpl
fsubs
and
mov
pop
aam
push
inc
sub
xchg
pop
fiaddl
enter
daa
pop
xor
mov
ss
inc
sahf
fsubs
xchg
orl
andl
test
xchg
mov
addr16
loop
xorb
pmaxsw
cmp
xor
mov
aam
aam
ret
inc
xor
daa
imul
pusha
mov
add
xor
add
add
arpl
cmc
xchg
dec
imul
out
fldl
inc
dec
lcall
xor
push
mov
dec
movsb
mov
andl
pop
iret
xchg
mov
test
aaa
test
adc
jge
movsl
daa
subb
popl
scas
popf
insb
xchg
movsb
ljmp
adc
jb
inc
outsl
out
lods
and
fwait
test
mov
mov
and
jge
dec
mov
pushf
movsb
addr16
cmp
lahf
xchg
lods
cmpsb
insl
fs
sbb
lcall
lahf
cmp
xchg
aaa
mov
lret
leave
daa
cmp
mov
push
xchg
adc
xor
out
popf
pop
xchg
mov
jbe
out
fwait
xchg
bt
xor
pop
lcall
dec
lods
in
lods
in
cmpsb
movsb
lahf
xchg
inc
cmp
sbbl
pop
fstl
daa
sub
add
ficompl
sbb
je
push
or
mov
fwait
stc
ss
xchg
loopne
imul
xor
jl
cli
int3
ds
mov
xchg
jmp
cltd
mov
sbb
lret
xchg
jne
leave
mov
xor
pop
pop
scas
adc
pop
out
mov
jge
lods
inc
out
pop
cwtl
sti
lret
cmpsb
mov
out
insb
sbb
xchg
je
cwtl
rorl
push
js
aas
jmp
cmp
in
pop
xor
pop
aas
push
inc
lret
jmp
dec
mov
daa
inc
pop
jle
xor
mov
mov
test
or
xorl
mov
iretw
xor
push
fdivrs
insl
fidivrl
aas
jnp
mov
xchg
setns
xor
dec
daa
das
dec
pop
push
pop
jns
jg
aaa
inc
daa
andb
add
lds
xchg
lods
jbe
frstor
mov
insb
scas
add
fsubrl
or
cmp
inc
push
test
mov
add
cs
rcr
xchg
sub
adc
test
mov
in
pop
in
mov
xchg
push
movsb
aas
inc
and
mov
mov
inc
cwtl
movsb
inc
inc
sbb
add
daa
cltd
cli
jno,pt
mov
and
mov
outsl
test
mov
dec
mov
cmp
aam
mov
popa
sbb
je
movsb
sbb
cmp
mov
dec
popa
mov
jle
add
mov
clc
daa
mov
rcll
pusha
mov
xchg
lods
pop
aaa
jmp
xchg
daa
dec
mov
inc
mov
ds
jmp
xor
fsubl
int3
pop
jbe
inc
lahf
xchg
fisubs
dec
hlt
add
and
lods
cmp
jecxz
push
push
aas
sbb
cmp
mov
or
dec
dec
movsb
sbb
xorb
xor
adc
popa
dec
movsb
pop
ds
movsb
sbb
push
mov
daa
xchg
push
push
rclb
pop
jns
jb
movsb
mov
jecxz
push
dec
das
xchg
pusha
nop
mov
dec
dec
mov
std
pop
dec
xor
inc
mov
hlt
nop
push
jnp
ficompl
fcmovbe
andb
addb
fisubrl
loope
jmp
inc
push
jnp
aam
xchg
leave
daa
fisubrs
rcrl
mov
popf
movsb
jmp
lock
into
xor
pop
shll
xchg
cmp
inc
and
cld
pushf
xor
cmc
cmp
push
jnp
push
ret
fs
insl
xor
mov
and
push
xor
jnp
popf
pop
and
mov
into
inc
repnz
push
xor
pop
maskmovq
imull
loope
int
jb
lds
cmp
inc
dec
daa
sub
data16
int
pop
push
mov
nop
clc
cmp
push
sub
jmp
push
dec
mov
mov
jge
mov
sbb
and
xchg
pop
fcomp
ds
mov
inc
loopne
cmpsl
xchg
movsb
outsl
lcall
or
cmp
inc
dec
mov
pop
mov
daa
frstor
imul
mov
stos
mov
daa
pop
dec
andl
cmpsl
cwtl
fnstsw
std
lcall
daa
xor
hlt
test
lahf
nop
into
sub
mov
mov
xchg
mov
mov
lahf
cmpsl
ret
mov
jne
arpl
aam
jae
lahf
mov
pop
xchg
pop
cmp
dec
lock
and
sub
into
jo
aam
cmp
jle
cltd
shrl
xchg
das
push
stos
inc
mov
aas
icebp
cwtl
mov
xchg
inc
clc
clc
nop
add
push
sub
mov
add
mov
mov
dec
push
mov
xorl
and
pop
cmp
mov
and
xchg
arpl
dec
fsubr
bound
ljmp
mov
push
pop
mov
xor
adc
xchg
pop
fwait
imul
movsb
jbe
lahf
jb
insb
jl
mov
lock
fbld
jns
push
xchg
mov
mov
cmp
inc
aas
dec
xchg
daa
clc
arpl
jmp
shrb
rorl
pop
ds
mov
ret
xor
pop
decl
xchg
xor
aam
xchg
push
je
and
cmp
rep
xor
add
sub
add
mov
push
lods
add
inc
lods
test
out
add
lcall
aaa
xchg
sbb
aaa
mov
mov
mov
sub
out
das
cmpsl
je
xchg
enter
cmc
std
cmp
mov
out
mov
push
pop
mov
imul
cmpsb
pop
xchg
mov
mov
insb
gs
mov
inc
sbbl
fidivl
popf
push
daa
push
aaa
ret
and
add
fs
outsb
sbb
inc
inc
call
icebp
jp
lahf
mov
and
xor
or
mov
in
aad
dec
sbb
sbb
cltd
scas
movsb
inc
pushf
fidivrs
mov
cmp
jg
mov
jns
xor
push
stos
loope
movsl
je
mov
sbb
add
sahf
pop
imul
fimull
push
aad
test
pause
in
mov
ss
mov
call
les
lret
adc
fldl
cmpsb
clc
popf
repz
mov
les
fstl
scas
andl
mov
and
test
fistps
pop
js
jne
adc
into
push
push
aaa
mov
pushf
or
xlat
xor
data16
xor
test
addr16
mov
daa
rolb
dec
aas
cmp
add
pop
sub
daa
mov
pop
sbb
add
ffree
fwait
xor
sub
xchg
in
js
mov
clc
mov
outsl
loopne
jno
out
daa
and
inc
daa
cmp
mov
dec
outsl
lods
mov
push
and
les
lcall
pop
fisttpl
or
xchg
pop
jns
and
sub
mov
push
push
push
cmp
mov
sbb
mov
xchg
addr16
dec
aam
dec
add
into
mov
push
fucomip
daa
mov
adc
jb
bound
pop
jns
pop
aaa
fcmovne
daa
cmp
iret
and
pop
sbb
mov
dec
jae
cmc
push
ret
std
loop
adc
cwtl
into
or
roll
ds
dec
inc
aas
add
add
push
iret
sarb
mov
cmpsb
push
mov
roll
mov
and
or
jle
test
out
test
sbb
xchg
lods
xchg
cwtl
mov
int3
inc
mov
jb
lods
pop
ja
push
adc
cmp
adc
addl
push
jle
je
pusha
xor
dec
daa
add
pop
test
and
dec
add
scas
add
lcall
mov
repz
call
jns
aaa
addl
mov
rorb
aas
out
xor
stos
add
arpl
push
mov
cmp
dec
fisttpl
push
mov
and
loope
fistpll
decl
mov
xor
jg
adc
push
inc
jns
dec
adc
add
xor
pop
insb
xor
mov
out
aad
mov
jne
rcl
out
and
test
cmp
mov
or
mov
xchg
call
mov
lret
fs
daa
das
dec
mov
sub
lea
cltd
and
dec
fidivrs
fisubrs
subl
and
ljmp
push
sbb
or
loop
shrb
jecxz
dec
inc
orl
ret
xchg
addr16
mov
dec
pop
sbb
mov
and
test
test
lds
orl
or
les
cmpb
in
push
lds
subb
mov
jns
mov
pop
xchg
fisttpl
jmp
xor
lods
stos
or
or
jp
daa
cmp
stos
sub
mov
lock
repnz
lods
or
add
xor
cmpsb
data16
int
cmp
dec
xlat
jle
pop
mov
cmpsb
lcall
inc
pop
out
cmp
aad
xor
outsl
and
movsb
sbb
push
movsb
lret
hlt
fnstcw
into
sbb
stos
das
pushf
nop
fcmovu
xchg
fildll
cld
lods
sub
aas
lods
in
jno
cltd
pop
dec
add
mov
fimull
add
cmp
and
addb
pusha
xchg
add
stos
sub
sbbl
sbbb
insb
mov
outsl
inc
das
cmp
adc
lea
leave
xchg
pop
jp
ret
push
mov
xor
push
je
call
xchg
les
icebp
xor
pop
cmp
mov
cmp
sahf
sbb
mov
xor
aaa
or
decb
fisttpll
test
inc
jo
mov
inc
mov
jne
das
fldenv
insl
test
xchg
arpl
and
pop
xchg
aaa
fwait
test
add
pushf
add
adcl
cmpsl
jp
nop
mov
lods
movsb
daa
push
mov
imul
xchg
fistpl
cmp
mov
mov
mov
shlb
add
inc
insb
movsb
sub
aas
loop
addr16
inc
and
cmp
mov
dec
xor
imul
dec
pushf
and
nop
dec
aaa
cltd
dec
inc
daa
cmp
adc
mov
lds
in
push
pop
hlt
es
dec
jp
xor
sbb
imul
cwtl
push
sbb
push
cs
cmp
addr16
push
lds
das
repnz
aam
jge
rcll
fidivrs
or
sbb
clc
call
out
cmp
add
pop
dec
xor
add
mov
adc
scas
pop
lahf
punpckldq
xor
std
xchg
xor
jne
sub
mov
pusha
push
inc
pop
lea
dec
adc
call
sbb
xchg
int3
pusha
popf
outsb
test
pop
shll
adc
mov
andl
cltd
mov
lea
cwtl
jnp
ljmp
and
pop
pop
jecxz
dec
sbb
pop
dec
shlb
cmpsl
bound
int3
and
outsl
inc
clc
negb
mov
mov
mov
fcomi
lods
and
cwtl
pop
mov
sub
xchg
movsb
mov
daa
out
push
fists
out
push
clc
sub
sbb
xchg
add
addl
cli
outsb
mov
sub
daa
sahf
dec
cmpsb
mov
jae
outsl
es
pop
mov
xchg
cmp
and
mov
sarl
dec
cmc
xor
adc
add
movsb
and
pop
movsb
mov
xorl
aam
popf
stc
rcrl
nop
and
sbb
and
mov
mov
xchg
lods
or
mov
cmp
dec
xchg
psubsw
inc
jecxz
lods
inc
and
movsb
xlat
lds
mov
mov
cmpsb
mov
daa
popf
jl
sub
fcomps
cwtl
pop
jg
mov
and
xor
add
mov
daa
clc
lods
mov
cwtl
and
mov
dec
movsb
inc
rep
inc
adc
mov
cmpsl
and
push
xor
test
add
xchg
clc
cmp
test
jne
clc
dec
cmp
test
mov
mov
xchg
movsb
outsl
pushf
sub
dec
xchg
shlb
cmpl
sbb
call
xchg
dec
dec
dec
xor
push
sub
add
xor
bound
aas
push
test
jae
dec
sbb
xchg
push
mov
fstpl
bound
pushf
insb
xchg
mov
sbb
mov
mov
out
stos
inc
arpl
lods
jp
andl
or
insl
or
cmp
out
fs
and
aas
cmc
mov
xor
xor
mov
jg
mov
mov
pop
rolb
daa
sub
je
inc
sahf
test
cmpsb
cltd
incb
rcrl
add
mov
jmp
lods
xchg
and
lods
sbb
aaa
outsb
lods
sbb
mov
and
ret
dec
incb
aas
xor
movsb
push
mov
xor
aas
xor
jae
xchg
jb
call
push
mov
push
inc
sub
je
jge
cmpb
fsubl
in
mov
dec
pop
out
das
mov
jbe
jbe
inc
inc
mov
fwait
notl
sbbb
bnd
dec
cmp
gs
cmp
pop
mov
ss
outsl
test
mov
xorl
leave
xor
xor
lcall
test
mov
adc
or
mov
lret
imul
hlt
ds
push
icebp
pusha
pop
cld
cmp
dec
mov
fwait
mov
push
or
mov
pushf
jo
ds
xor
add
pop
pop
or
movsl
cmp
dec
loope
inc
push
adc
jns
cld
leave
cmp
mov
pop
mov
mov
ss
xchg
cwtl
inc
xor
xor
cmp
in
inc
cwtl
jb
sahf
mov
mov
loope
jbe
sbbl
xchg
lods
inc
xchg
andl
or
fldt
jno
fdivrl
mov
test
daa
mov
push
aas
sbb
popl
mov
jecxz
in
cwtl
jbe
adc
push
fwait
push
ds
push
add
cltd
sti
dec
daa
sub
aam
push
mov
subl
enter
jmp
cmp
dec
mov
pop
push
clc
mov
loopw
mov
inc
xor
mov
andb
out
push
cli
cmp
add
mov
into
js
pop
js
ret
xchg
je
xor
sbb
adc
cwtl
push
ret
add
inc
add
xchg
mov
mov
xchg
xchg
mov
add
mov
pop
xor
mov
inc
add
xor
andb
outsb
push
leave
aas
dec
dec
out
mov
daa
inc
dec
js
test
cmp
mov
inc
dec
xchg
jno
adc
mov
out
lahf
aaa
or
insb
movsb
aaa
add
les
lcall
cmp
jb
mov
js
xorb
nop
pushf
int3
mov
shll
sbb
pop
aaa
adc
mov
pushf
inc
mov
lret
adc
push
daa
lock
stc
mov
fcomps
sbb
cmp
sbb
mov
sbb
pop
aaa
aas
jo
bound
push
or
js
out
and
daa
mov
mov
mov
xor
cmp
daa
aas
lods
sahf
stc
je
mov
ds
std
addr16
xchg
push
pop
jge
js
adcb
pop
jnp
ss
das
insl
scas
push
pop
xchg
loop
adc
cwtl
sub
xchg
xor
gs
cld
xchg
dec
mov
xchg
push
mov
pusha
jb
cmpsb
mov
repz
mov
aaa
xor
mul
mov
pop
mov
fs
jle
lods
xchg
lret
out
pushf
xor
xchg
inc
pop
xlat
lcall
enter
dec
ret
test
movsb
jmp
es
mov
fldcw
lea
movsb
push
jmp
lcall
pushf
inc
push
out
daa
xchg
dec
jnp
mov
mov
push
dec
repz
addl
push
addr16
aaa
mov
xor
aas
xchg
sub
adc
inc
and
mov
pushf
sbb
dec
xor
jmp
cmp
adc
into
push
shlb
cmp
hlt
fwait
cmpsl
cltd
xor
lret
mov
stc
cmp
fwait
jg
xor
dec
adc
movsb
lret
and
daa
int3
aaa
fsts
int
mov
cli
and
push
xor
mov
ja
movsb
sbb
jg
mov
jns
es
pop
inc
ss
shrl
xchg
xor
xor
cs
sbb
daa
pop
xchg
dec
imul
mov
mov
sub
fs
dec
aas
in
cmp
cmp
es
movsl
fsubrl
cmp
mov
aas
in
movsl
jp
sub
mov
subb
mov
dec
popa
xor
jmp
mov
lods
jo
bound
push
mov
in
cmp
xor
sub
sub
inc
push
rclb
inc
xchg
dec
push
push
jbe
push
xchg
mov
pop
aaa
ret
fidivrl
popf
dec
cmpsb
xchg
in
pop
mov
and
fsubs
add
outsl
inc
fildll
jmp
je
outsl
xchg
incl
popa
popf
scas
add
sub
clc
clc
mov
aaa
xlat
icebp
push
jae
insb
fildl
add
in
adc
icebp
aas
pop
lea
xchg
sar
inc
lods
add
mov
or
lods
les
mov
xor
popf
push
subb
data16
jle
in
sub
dec
daa
aam
cmp
jb
xchg
mov
xchg
sbb
mov
fnsave
jb
out
dec
outsl
cld
xlat
inc
inc
push
pop
mov
jecxz
xchg
fbstp
mov
rorl
or
mov
cmpsl
popf
dec
add
clc
lds
das
inc
xlat
loopne
dec
add
rolb
ss
nop
ss
mov
dec
xor
test
loopne
push
outsl
jmp
add
icebp
inc
inc
jns
pusha
inc
cmpsl
sbb
jnp
test
mov
add
jmp
or
rorb
cmp
sbb
in
dec
xor
cmp
mov
pop
popa
sarb
dec
sub
pushf
pop
lock
pop
mov
dec
sti
sub
mov
cltd
subb
bnd
mov
xchg
mov
inc
out
sbb
push
dec
mov
shrl
pop
add
mov
cli
in
mov
fisubs
sahf
pop
xchg
or
sbb
xor
scas
add
fmul
ret
daa
mov
adc
daa
into
push
mov
cli
cmp
xorl
test
loope
mov
mov
xor
push
mov
inc
cmp
add
pop
sahf
test
xor
pop
xlat
repnz
cmp
pop
aas
movl
mov
xchg
mov
ret
cltd
lea
cmp
pop
xchg
adc
andl
mov
shr
xor
hlt
push
mov
xchg
test
fwait
and
lahf
xlat
pop
ficoml
and
int3
jae
xor
xchg
pop
repnz
lock
mov
cmp
pushf
cli
inc
popf
adc
inc
jg
scas
orb
rcrb
inc
fadds
inc
repz
adc
ds
outsl
call
test
dec
mov
cmpl
aam
pusha
fdivp
xchg
sarb
pusha
add
out
js
xor
les
das
aad
cld
ficompl
lds
xchg
movsb
push
data16
cmp
mov
jg
cwtl
scas
lea
push
sbb
push
bound
outsl
xchg
push
mov
loop
mov
add
rcrl
inc
outsl
movsb
dec
ljmp
cltd
cmpl
xchg
jbe
pop
pop
xchg
lods
sti
popf
xlat
aaa
in
test
dec
or
jae
nop
mov
jnp
inc
das
movsl
cmpb
shrl
daa
iret
sbb
pop
xor
pop
or
fmuls
sahf
jmp
aas
addr16
xchg
testl
xor
or
sub
add
dec
arpl
stos
xchg
xor
cmp
jecxz
or
in
test
lahf
in
mov
js
pusha
cmpsb
cmp
arpl
xchg
jl
adc
cmp
or
ror
mov
cltd
test
fdivl
mov
xchg
xor
or
lahf
dec
pop
daa
aam
mov
push
mov
scas
in
mov
inc
aas
es
mov
aam
pop
adc
jnp
mov
subb
xchg
scas
jg
das
movsb
mov
daa
lods
mov
or
mov
pop
add
ja
loopne
inc
dec
mov
addl
lods
adc
cmp
andb
and
aas
pop
fwait
test
push
data16
jb
xor
sbb
jbe
fnstsw
movsb
arpl
sbb
mov
popf
int3
imulb
adc
or
lods
push
push
mov
loopnew
ss
dec
jecxz
idivl
inc
or
fcomps
mov
cmp
pop
pop
dec
movsb
std
rcll
scas
sbb
mov
dec
shlb
xor
sbb
xchg
pop
enter
xor
sub
cmpsl
sbb
mov
pop
mov
push
daa
mov
sbb
cmp
jle
cmpsb
ret
insb
mov
lock
xor
call
sbb
addl
xor
jg
dec
iret
jmp
xchg
test
lcall
mov
dec
fsts
arpl
jg
jg
into
push
sti
cmpb
xor
out
mov
rclb
mov
mov
lahf
flds
ja
pop
inc
cmp
pop
sahf
test
fwait
sahf
cmpsl
cmpb
adc
or
popa
pop
pop
mov
shll
shlb
sub
xor
pop
out
test
push
pop
adc
mov
rcll
repnz
pop
and
leave
mov
inc
xchg
lods
push
jmp
sbb
rol
mov
imull
xchg
es
push
insl
dec
and
sub
jge
sub
or
das
lods
mov
loop
lods
xor
iret
loope
out
inc
out
inc
add
sbb
sbb
rorl
repnz
jbe
inc
jbe
arpl
push
mov
push
lret
jns
call
xlat
adc
add
js
lret
subb
or
aaa
lret
dec
dec
add
popf
arpl
fsubs
sahf
and
xor
inc
outsl
add
xchg
test
jb
xor
icebp
iret
hlt
lret
andl
add
mov
in
cltd
repz
insl
xor
clc
mov
dec
or
fs
fs
push
mov
nop
incl
jle
mov
xchg
jecxz
mov
push
shrb
pop
or
mov
add
cmp
xor
shlb
sbbb
inc
in
mov
gs
cmpl
in
jl
mov
lcall
inc
idivb
sti
ret
mov
jno
jge
lock
sub
xchg
roll
jmp
xchg
fstl
jecxz
jbe
imul
ljmp
inc
inc
lds
jmp
cmc
push
hlt
stos
sub
adc
jmp
xor
sahf
add
mov
hlt
xchg
add
inc
adc
jge
arpl
loopne
pop
insl
xchg
xchg
mov
ljmp
mov
dec
add
jp
mov
daa
mov
repz
hlt
cmp
cwtl
jo
add
lahf
out
bound
and
xchg
divb
sub
insb
fs
push
int
sbb
es
insl
cltd
or
into
xchg
std
daa
cmp
stos
lahf
jl
xchg
mov
int
dec
mov
sahf
mov
pop
jmp
cmp
fcmovne
inc
out
mov
or
aas
jmp
lahf
mov
lahf
inc
mov
aas
insl
jl
add
sbb
pop
xor
jnp
in
cmp
mov
jne
out
bound
rcrb
pop
mov
pop
insl
sbb
pop
aas
cli
sub
loope
adc
aas
stos
cmp
push
sbb
inc
push
inc
pop
fdivl
sbb
cmpsb
push
roll
aam
cmp
lahf
mov
sbb
inc
mov
jno
push
loope
mov
sub
loop
mov
es
or
pop
cmp
mov
mov
ficoml
mov
jp
cwtl
daa
dec
sahf
jne
adc
xor
mov
adc
xlat
adc
dec
mov
out
sbb
sub
sub
push
mov
imull
or
xor
dec
cltd
push
push
sbb
pop
xchg
jle
adc
pop
xchg
test
enter
mov
pop
and
mov
jns
dec
loopne
orl
cmp
fwait
mov
xchg
push
dec
inc
fnstcw
arpl
add
mov
cmpsb
outsb
aaa
cmp
jg
ficoml
icebp
das
xchg
test
xchg
xor
daa
decb
xlat
fsubrs
pop
fucomip
dec
inc
mov
ret
sbb
jge
push
out
mov
xchg
idivb
imul
cs
push
push
sbb
enter
lea
push
add
fwait
sbb
jp
push
sub
cmp
push
es
xchg
popf
pop
je
leave
dec
lret
ret
or
and
addr16
xor
mov
xor
inc
sbb
and
push
xchg
jb
push
outsl
psllw
pusha
and
xor
xchg
movsb
in
jmp
mov
imul
mov
loope
in
mov
jg
aaa
cmp
inc
roll
in
xchg
pop
jecxz
xor
ljmp
mov
cltd
add
aas
mov
pop
lea
stc
mov
add
addr16
adc
jne
and
mov
call
mov
into
les
pop
cmp
inc
repz
xor
mov
or
jb
mov
or
or
out
enter
jbe
cmpsl
adc
icebp
dec
inc
aaa
inc
popf
fists
hlt
sbb
xor
cmpsl
pop
xchg
inc
adc
es
xor
push
sbb
movsl
sub
leave
mov
cmpsl
fisubl
jp
jo
sbb
scas
mov
mov
xlat
sub
movsb
js
jecxz
testb
outsl
dec
and
push
sbb
xlat
adc
push
in
js
popf
sahf
scas
mov
dec
ljmp
sbb
lahf
ja
loope
out
ret
xchg
sbb
stc
add
jl
test
xchg
imul
adc
xor
cli
mov
insl
jp
dec
push
pop
ds
in
fs
push
push
sarl
dec
test
jo
xchg
pop
sarl
sub
orl
negb
fs
pushf
add
pop
or
sbb
xor
cmp
inc
cwtl
or
fs
int3
cmp
jp
cwtl
jo
lods
dec
cmpsl
sti
inc
pop
ss
outsb
sarb
mov
dec
inc
xchg
inc
jne
pop
xchg
jl
andb
je
pushf
popa
jnp
dec
pusha
sbb
jbe
push
jg
dec
andb
jp
push
repz
cmpsl
int3
pusha
add
push
mov
jns
movsb
pushf
xchg
pop
arpl
inc
mov
das
loope
lahf
xchg
outsb
pop
out
push
jp
xchg
fisttps
daa
mov
mov
fs
mov
sbb
cli
popf
jl
sbb
aaa
or
sbb
dec
xchg
cmp
xlat
push
addr16
insb
xchg
adc
out
popf
scas
dec
lret
fwait
ja
adc
pop
inc
push
je
jns
push
push
mov
in
add
sbb
test
les
sbb
into
insb
aas
movsl
fmuls
mov
mov
lods
xor
add
sbb
mov
mov
cmp
cltd
mov
xchg
mov
cmp
jnp
push
ja
inc
and
jge
mov
mov
insb
push
aaa
jo
loope
jge
testl
es
jl
sbb
push
cmpsl
data16
jmp
nop
test
cli
jae
sub
mov
int3
sub
fcmovb
out
inc
insl
xchg
sbb
dec
stos
inc
jbe
sahf
movsl
mov
xchg
enter
jmp
jp
cmpsl
push
inc
cmpsb
vmread
rcrl
in
sti
icebp
inc
pop
inc
push
pushf
mov
cmpsl
js
shl
rcr
scas
fistpl
cmp
push
fs
in
aaa
test
cmp
mov
push
movsl
add
push
inc
cmp
bnd
into
inc
int3
xchg
arpl
push
push
packuswb
pop
inc
cld
movsl
jo
inc
dec
lods
lock
arpl
mov
insb
adc
jnp
push
idiv
mov
xlat
std
cmp
jo
sbb
push
xchg
push
sbb
xchg
cmp
andb
xchg
test
insl
fstps
or
pusha
hlt
jecxz
test
fcmovnbe
lods
fisubs
mov
xor
bound
inc
notl
jnp
inc
jae
ffreep
mov
hlt
jecxz
dec
and
cmp
mov
pusha
ds
jns
sub
je
daa
daa
mov
fwait
mov
push
xlat
bound
or
inc
in
aas
xchg
test
arpl
aas
popa
scas
add
sbb
ljmp
add
out
xlat
sahf
out
loope
lcall
test
fnsave
cli
imul
push
scas
adc
sbb
hlt
push
add
adc
mov
jecxz
cmpsb
pop
repnz
sub
in
cmpsb
sub
xchg
jg
aas
stos
push
push
add
je
mov
sbb
sbb
mov
imul
pop
xchg
cli
out
movl
mov
pop
xchg
in
in
push
fildll
test
inc
popf
ret
dec
shlb
inc
jne
cltd
jp
xchg
mov
cmpps
adcb
sbb
mov
mov
and
dec
add
jne
les
xor
mov
stc
mov
push
adc
adc
sti
jns
pop
sbb
xor
mov
addr16
jns
xchg
xchg
cli
pop
dec
mov
cmp
mov
repnz
adc
popf
inc
gs
push
mov
incl
in
fwait
adc
cmpl
pushf
inc
xchg
lods
mov
add
jo
cli
mov
fistpll
mov
mov
push
pop
mov
into
inc
cmovbe
pop
fwait
xchg
aam
inc
pause
xchg
pop
enter
inc
mov
lahf
jg
fidivrs
pop
xorb
movsb
xchg
loopne
test
ret
icebp
mov
add
cwtl
imul
inc
ss
push
fldz
cld
jae
pop
pop
arpl
fcomip
aas
adcl
mov
add
lret
pop
dec
ja
int
sbb
pop
pop
dec
insl
sbb
out
push
or
add
fwait
rcll
ret
lahf
lret
push
pop
push
fisubrs
cmp
mov
lea
jmp
ror
repnz
jge
dec
xorl
cld
sbb
mov
fldt
jno
dec
iret
inc
test
int
xor
andl
es
jne
add
add
cmc
inc
xor
jo
push
push
adc
movsb
sub
or
repz
cli
es
outsb
mov
bound
mov
jecxz
cmpsl
or
cmp
xor
cltd
xor
sbb
adc
inc
jp
dec
xor
cmp
lock
in
pop
dec
xchg
add
andb
mov
adc
jmp
xor
push
sbb
xchg
mov
pusha
push
rcrl
push
inc
inc
sbb
adcl
mov
fnstsw
push
mov
inc
into
xorl
imul
cld
adc
scas
call
cwtl
xchg
sub
xchg
adc
outsl
xchg
fcomi
jp
lcall
mov
or
xorl
imul
jnp
add
clc
jb
movsl
and
outsl
inc
adc
aas
sbb
jae
leave
mov
add
pop
push
mov
xor
push
mov
jge
jle
pushf
jae
mov
fwait
jmp
gs
fwait
lret
imul
stos
stos
and
outsb
adcl
push
jmp
jb
sbb
stos
xchg
dec
clc
dec
xor
loopne
mov
jns
sti
repnz
ror
or
pop
cltd
nop
icebp
jb
mov
jns
int
push
mov
add
pop
add
dec
cwtl
pop
jl
shrb
or
mov
adc
fcoms
xchg
shrb
shl
cld
into
scas
inc
test
push
popf
push
ds
jno
pop
lea
push
das
inc
jns
addb
lods
cs
fwait
adc
or
aad
or
dec
sbb
ret
add
cs
mov
adc
xchg
lret
push
adc
jmp
adc
add
in
nop
ret
lea
jle
fadds
lret
fsubrs
cmpsb
jle
cmc
imul
notl
mov
daa
xchg
adc
js,pn
rol
cmp
js
inc
push
cltd
testb
mov
stos
das
hlt
push
jp
pop
insl
add
cld
pop
insl
pop
fistpl
int3
jnp
nop
arpl
das
scas
bound
jne
push
push
rolb
mov
enter
rorb
std
sub
lods
inc
jnp
xchg
outsb
orl
jne
xchg
mov
pop
ss
add
movsb
in
xor
ja
fimuls
mov
fnstsw
push
pushf
sbb
sbb
in
pop
add
jb
hlt
int
jp
sub
iret
les
pushf
cli
je
sbb
pop
int
aas
dec
pop
and
ret
inc
sbb
sub
xor
inc
test
mov
xor
mov
jae
je
mov
ja
jmp
xorl
adc
scas
jns
gs
push
loop
xchg
dec
repz
xchg
jns
inc
xchg
mull
mov
into
test
jno
xchg
sbb
mov
cli
push
dec
mov
xor
js
mov
arpl
push
fisttps
stos
cltd
jmp
loope
dec
cmp
cmp
xchg
xchg
sbb
outsl
push
mov
pushf
inc
call
ret
pop
ds
xor
je
sub
out
fwait
jle
imul
inc
das
push
movsb
sub
sbb
aad
pushf
inc
adc
cmpsl
mov
dec
xor
adc
xor
push
jecxz
jae
cmp
or
andb
fcmovnb
test
sbb
out
dec
jo
jnp
push
xor
inc
adc
adc
fcomps
cld
xor
test
ret
pushf
stos
sbb
js
mov
mov
xor
rol
pop
pop
into
sahf
sahf
sar
inc
dec
inc
les
mov
pop
jmp
in
sbb
xchg
mov
out
call
jno
inc
nop
int
lcall
jnp
andl
xor
inc
adc
andl
xchg
arpl
sub
jl
lea
or
pushf
ret
pop
dec
cwtl
push
into
xchg
inc
insl
add
clc
jo
pusha
push
pop
leave
pop
std
push
inc
push
inc
lret
mov
xor
adc
addr16
mov
andb
ret
outsl
push
sub
dec
aam
jge
adc
pcmpeqb
scas
ljmp
jbe
js
push
push
lret
cmp
inc
in
fstpt
rcr
cmc
mov
inc
lcall
aaa
xor
cmp
cli
fmuls
aam
scas
int
into
or
mov
stos
jnp
pop
mov
inc
cwtl
pop
or
adc
sahf
pusha
mov
mov
pop
jns
add
cmp
or
popa
mov
inc
push
test
adc
lahf
cmp
jecxz
pop
adc
aas
adc
xchg
divb
repz
push
sub
movsl
lods
add
jne
dec
push
nop
xchg
sub
loop
dec
push
icebp
dec
dec
ret
jno
cmp
scas
out
std
push
mov
cld
xchg
mov
mov
adc
jnp
pop
jbe
or
fdivp
jno
or
lcall
imul
push
sti
sub
aaa
jb
pusha
ljmp
pushf
inc
aas
lods
xchg
and
add
out
out
adc
and
push
lods
imul
mov
jns
insl
pop
ja
mov
and
push
outsw
adc
xchg
outsl
mov
clc
sbbl
out
or
push
mov
add
daa
js
iret
or
in
sbb
into
orl
fwait
sbb
js
fmull
je
clc
and
in
nop
into
pop
inc
scas
and
movsb
rclb
fs
cmpl
cwtl
iret
xor
ret
sub
mov
adc
inc
fs
imul
xchg
rcll
bound
dec
push
xchg
pushf
mov
push
inc
mov
cmp
push
inc
add
andl
bound
or
dec
or
sbb
cmp
add
inc
push
scas
jecxz
xchg
fistl
mov
lcall
out
sub
js
test
stos
loopne
cmpsl
out
jmp
daa
ja
adc
mov
pop
dec
jl
cmpsb
fs
pop
inc
test
mov
lock
ds
sarb
cmp
push
mov
mov
xchg
mov
adc
cmpsb
fsubrl
jae
in
sahf
lahf
dec
or
out
xor
daa
ret
cmp
js
testl
sub
iret
sub
jecxz
mov
fcomps
dec
ds
push
jo
cmp
pop
xchg
cmp
cwtl
and
das
dec
dec
sarb
mov
mov
cmp
sahf
bound
into
jnp
push
cmp
mov
aas
cmp
int3
das
jnp
call
movsb
sbb
test
cwtl
xlat
addr16
repz
insb
js
mov
sub
jecxz
mov
fcompl
lret
xor
iret
addr16
cmp
mov
aas
cmp
les
addr16
in
adcl
mov
mov
sub
fstpt
push
sub
lret
jo
cmp
cs
out
or
dec
test
pop
mov
scas
cmovae
sahf
dec
arpl
hlt
and
ds
into
or
and
subb
push
mov
mov
cmpl
xor
int3
fs
in
sahf
fwait
bound
jmp
cmp
lret
cmp
jo
decl
js
scas
mov
mov
jmp
in
repz
fcomps
aad
das
mov
outsl
je
repz
test
and
js
aam
sbb
sahf
mov
cmpl
iret
mov
cs
out
out
daa
cmp
andb
dec
mov
cmpsb
jo
incl
fs
mov
mov
cld
into
pushl
cmp
das
mov
daa
xchg
dec
mov
mov
mov
cmp
cmpsb
mov
fs
mov
adc
daa
jb
pushf
cmp
and
and
push
iret
xorl
mov
aam
push
cmp
in
das
fwait
sahf
dec
xor
inc
jo
repz
mov
and
ds
jmp
in
repz
pop
into
xor
inc
mov
scas
add
fs
mov
rorb
and
ds
enter
mov
push
das
shrl
sub
jecxz
mov
sbb
les
xchg
lods
out
dec
pop
daa
xlat
cmp
nop
das
pop
test
and
jecxz
in
enter
xchg
cmpsb
xor
sub
ds
iret
push
jo
cmp
inc
out
xchg
mov
xor
enter
in
adcl
mov
cmp
sarl
push
sub
ret
jo
cmp
loopne,pn
imul
daa
lahf
cmp
sub
jecxz
mov
inc
pop
cmpsb
mov
inc
mov
cld
shlb
pop
aas
enter
sub
arpl
test
push
and
cmp
push
out
xchg
cwtl
dec
fsubrl
outsl
dec
clc
js
sbb
divb
bound
js
addr16
mov
xchg
mov
adc
hlt
scas
jg
in
fs
sub
out
daa
and
lret
cmp
dec
das
out
pusha
js
fwait
mov
mov
iret
mov
clc
jp
call
js
mov
cs
push
cwtl
jmp
das
pop
dec
mov
hlt
mov
movsbl
enter
and
sub
jecxz
mov
push
cwtl
scas
pop
pop
sbb
and
loopne,pt
or
cmp
and
and
cmpsl
lret
arpl
adc
cmp
mov
cmp
shrb
dec
clc
js
sbb
scas
ret
inc
pop
fs
je
repz
mov
jo
cmp
cs
repz
daa
lahf
cmp
sub
jecxz
mov
push
das
inc
mov
sahf
push
arpl
aam
add
enter
rolb
mov
dec
inc
adc
shlb
int3
sahf
jnp
loopne
and
aas
mov
cmp
das
jmp
je
or
sub
jecxz
mov
in
mov
xor
scas
xor
cmp
jo
addr16
cwtl
pushf
ljmp
dec
mov
dec
push
lock
dec
jg
inc
test
pop
cmp
dec
inc
gs
and
imul
data16
out
jg
shrb
xchg
bound
cmp
clc
imul
in
cltd
aam
push
imul
orb
pushf
jge
lcall
jbe
and
insb
out
dec
or
jns
pop
jge
xchg
xor
xor
mov
sbb
mov
jae
insb
xchg
xchg
scas
push
rcrl
lods
push
jo
fs
imul
cmp
xor
dec
sbb
ret
lods
jno
mov
lods
inc
and
jle
int
add
sbb
loopne
outsl
xchg
in
insb
mov
movsl
ss
out
xor
in
sub
cmp
sarb
cwtl
adc
push
mov
ja
in
mov
jnp
arpl
sbbl
push
push
mov
ljmp
mov
cwtl
clc
add
call
into
loopne
cmp
sub
imul
jp
pop
outsl
jecxz
out
fsts
arpl
jmp
dec
push
mov
aas
mov
clc
jbe
inc
leave
loopne
mov
sub
push
cwtl
test
adc
mov
dec
and
out
inc
imul
cs
add
push
mov
movsl
inc
addr16
hlt
and
adc
mov
ljmp
jg
cmp
adc
arpl
jns
cwtl
push
repnz
addr16
jnp
jae
test
js
inc
out
popa
inc
lods
jp
mov
xchg
nop
ficoml
xor
pusha
inc
repnz
mov
sub
arpl
cs
shll
pop
jae
in
dec
js
icebp
pushf
mov
jle
push
adc
out
addr16
dec
jne
subl
out
in
movsl
mov
cwtl
inc
bound
sub
jns
aas
arpl
in
dec
push
arpl
xlat
dec
dec
cmp
mov
dec
pminub
mov
mov
and
repnz
sbb
addr16
pop
stos
dec
shr
leave
push
dec
jne
int3
out
insb
lods
in
loop
cmpsb
icebp
push
inc
ret
lret
mov
cmpsl
data16
les
jle
push
push
jl
aaa
jl
out
inc
cwtl
jge
aas
jle
pop
push
mov
xchg
gs
add
sbb
outsb
loope
jns
enter
insl
lret
push
jge
scas
add
pop
and
in
jne
movsl
xchg
jo
outsb
call
icebp
lea
std
sub
jl
es
mov
scas
enter
out
push
mov
xor
lds
dec
mov
mov
cmp
cmpsb
add
jle
cmpsl
mov
stc
mov
pushf
sbb
cmp
scas
cmc
jg
nop
ss
jp
stos
into
inc
popa
filds
inc
jo
lods
jb
sub
dec
out
insb
out
test
xchg
add
cmp
cmp
or
shl
cmp
fs
dec
movsl
nop
js
inc
add
insb
and
outsb
xchg
out
xchg
jle
and
dec
push
adc
xchg
mov
or
in
ja
lods
dec
loope
cmp
sbb
loopne
mov
cmpb
repz
in
inc
fwait
xchg
call
inc
pusha
jl
dec
cs
mov
add
mov
dec
add
into
mov
and
dec
outsb
mov
ljmp
mov
das
mov
lods
dec
repz
sbb
pushf
flds
stos
ret
xchg
in
jge
jl
jp
dec
ret
xchg
add
pusha
gs
scas
in
xor
rclb
daa
dec
imul
inc
xor
mov
sub
loop
repz
lret
sbb
sub
ret
mov
stc
dec
pop
js
mov
fmull
sub
repnz
add
push
inc
lds
dec
inc
xor
std
jb
insb
sub
mov
xchg
and
xor
data16
sub
add
out
scas
std
imulb
push
cmp
jl
repz
or
dec
push
dec
dec
pop
sub
dec
xor
add
fwait
and
sub
mov
popa
dec
in
aaa
arpl
xor
jnp
pop
aaa
scas
les
ss
sbb
cmp
or
out
and
clc
add
in
jb
sarl
outsl
ja
fwait
lcall
xorb
popl
outsb
xor
fisubs
xchg
jle
push
add
loope
jo
pop
out
sub
xchg
push
mov
ljmp
xor
mov
mov
adc
dec
jge
mov
pop
bound
out
movsl
or
aaa
sbb
out
pop
mov
push
js
pop
adc
aas
ja
addr16
adc
jmp
jbe
pop
mov
inc
jp
ret
pusha
out
gs
inc
dec
lret
xor
dec
xor
arpl
bound
sbb
popa
mov
mov
cmp
nop
test
ja
pop
sub
cmp
mov
sbb
xchg
push
xchg
insl
rolb
lods
pushf
loope
je
fisubrl
sub
popf
jno
mov
or
aad
aaa
add
jecxz
pop
or
sub
pop
mov
subb
pop
cmp
inc
jle
dec
cmp
sub
roll
das
popa
aam
pop
aaa
mov
mov
ficompl
js
inc
dec
arpl
mov
dec
push
jo
add
int
xchg
data16
outsb
roll
mov
gs
mov
add
out
push
bound
mov
mov
jmp
inc
dec
dec
test
push
stos
xor
mov
addl
jle
outsl
ficoms
or
mov
jge
addr16
bound
arpl
dec
pcmpgtd
call
inc
stos
adc
dec
dec
pop
adc
or
dec
popf
dec
adc
push
inc
pop
repnz
mov
pop
pop
outsb
and
aaa
lods
sahf
xchg
push
dec
xlat
js
scas
std
or
lods
pop
lds
jl
popa
mov
dec
scas
mov
xorl
cmp
daa
arpl
outsl
mov
fisubs
xchg
and
nop
and
xchg
rclb
mov
data16
mov
shl
mov
and
fistps
js
jnp
sti
cli
popf
mov
push
cmp
pop
jbe
push
shll
ljmp
mov
fdivl
pop
es
jo
int
mov
sbb
pop
sbb
ret
aad
fidivs
jge
das
pop
adcl
ss
shrl
js
arpl
scas
adc
mov
clc
pop
hlt
pop
cltd
rcrb
mov
and
push
xchg
jne
add
pop
in
jl
popa
sti
jo
sbb
rclb
dec
jns
mov
jge
nop
jno
pop
sub
push
jnp
sbb
aas
aad
sbb
pop
sub
push
xor
push
in
lods
lahf
xor
cld
fs
in
cmp
les
gs
test
sti
in
and
cli
or
lods
ss
sub
dec
mov
xor
in
and
or
push
push
xlat
xchg
in
shr
test
add
arpl
mov
popa
js
addb
stos
jno
or
test
add
xor
in
adc
sub
cmpb
cmp
mov
outsb
mov
shlb
mov
dec
lahf
aaa
mov
shlb
in
mov
aaa
cmp
fcmovb
cmc
daa
test
decl
mov
insb
outsb
push
repz
inc
ja
dec
mov
jne
pop
pop
mov
icebp
fildll
sub
lds
push
push
push
ret
push
mov
clc
adc
in
jmp
aaa
dec
lret
stos
cli
fisttpl
ja
sbb
jnp
cli
shll
stc
rorl
jp
icebp
xor
jae
adc
add
lea
inc
jle
mov
mov
insb
out
jl
lock
cli
mov
outsb
movsb
cld
loop
imul
mov
outsb
lahf
pcmpgtw
std
mov
xchg
or
addb
dec
loopne
jl
test
idivb
dec
pop
cmp
test
loop
in
arpl
jl
xchg
and
jnp
pop
arpl
xor
incb
std
jecxz
mov
xchg
push
xor
xchg
flds
clc
inc
jb
dec
mov
gs
cvtdq2ps
xlat
mov
test
inc
outsl
pop
dec
sahf
pop
hlt
adc
mov
insl
pusha
dec
cmp
pop
xchg
stc
les
sbb
mov
sub
out
ret
out
les
push
cmpsl
lods
adc
loope
loope
leave
insl
xor
mov
xchg
jnp
lock
mov
enterw
jge
xor
cli
mov
incb
int3
lock
dec
cmp
xor
pushf
leave
mov
test
ss
mov
jl
daa
in
xchg
test
insl
ror
mov
add
insb
pop
cmp
jp
cltd
pop
mov
rclb
jl
xchg
mull
add
ja
call
cltd
out
sbb
pop
out
push
mov
cmp
clc
test
adc
or
dec
pushf
testb
popfw
inc
mov
jle
pop
dec
mov
jne
add
xlat
movsb
out
push
in
add
repnz
in
inc
mov
cmp
js
cmp
push
ret
xor
dec
mov
je
out
int3
out
jecxz
cmp
mov
out
sbb
jne
dec
xchg
or
and
ficompl
test
jae
sub
insb
xchg
call
into
jle
aam
outsl
xchg
xor
xchg
mov
out
sbb
cmp
mov
pop
mov
push
xor
popa
imul
adc
jp
xlat
lds
or
push
testb
jp
das
mov
cmp
int3
pop
dec
rclb
pusha
xor
sti
std
fbstp
push
pop
dec
sub
jne
fisubs
dec
test
xor
addl
xchg
fsts
inc
je
aaa
call
fs
push
ljmp
jo
insl
sahf
insl
inc
cmp
in
cmpsb
or
movsb
rclb
mov
dec
loope
loope
flds
lcall
sti
fdecstp
pop
ret
adc
fsub
loopne
arpl
sbb
dec
mov
loop
outsb
roll
int3
xor
adcl
lea
push
sbb
pop
mov
jno
sbb
xor
mov
jns
xor
clc
mov
pop
ja
inc
jmp
in
pop
fsubs
pop
fmulp
xchg
mov
gs
std
and
adc
xchg
push
jns
iret
cmp
jg
mov
pop
pop
and
fcomi
nop
xchg
sub
mov
xchg
inc
pop
jge
rolb
push
cmc
or
mov
mov
jmp
fs
jne
push
inc
call
add
in
dec
pop
aaa
aam
pop
aaa
shrb
pop
imul
dec
jl
push
ds
sub
cmc
sub
es
push
test
lods
psllw
inc
add
cmpsl
xchg
and
movsb
shl
mov
pusha
jb
in
fimull
mov
pusha
es
pusha
jne
clc
add
inc
adc
popf
in
jl
mov
lods
push
outsb
sub
sbb
mov
or
pop
inc
adc
inc
adc
and
inc
xor
cmpsb
mov
ss
pop
mov
mov
jecxz
mov
jae
stos
test
mov
fcoml
dec
jo
mov
pop
aad
inc
dec
shlb
mov
clc
mul
inc
mov
push
jle
cmp
gs
push
push
pushf
and
es
jbe
adc
clc
inc
ret
jno
push
loope
pop
loopne
in
mov
add
add
push
pop
lretw
test
mov
cli
sub
popf
movsb
mov
mov
or
fdivrl
mov
sbb
pop
pop
mov
and
nop
aad
or
hlt
fisttps
int3
sahf
movsl
stos
xchg
xchg
or
js
mov
pop
mov
arpl
imul
push
loopne
mov
stos
cmp
ja
dec
dec
and
nop
subps
pop
ret
int3
mov
bound
adc
nop
and
adc
cs
add
sub
imul
arpl
inc
push
into
xchg
or
mov
inc
mov
jmp
cmp
mov
divb
or
lods
into
cmp
push
pop
lret
out
adc
sti
jns
mov
cmp
pop
cmp
mov
sarl
loopne
inc
push
fcomi
ss
and
and
pop
sub
jo
pusha
add
mov
cwtl
ss
pop
fwait
jl
cwtl
mov
cwtl
movsl
xlat
jmp
out
cmpsl
imul
xchg
iret
pop
mov
and
pop
add
movsb
scas
lea
jl
xor
movsl
incl
mov
popf
scas
and
ja
xor
or
cmpsl
push
mov
and
outsl
sarb
ffreep
popa
cmc
sbb
data16
out
push
jmp
cwtl
push
jno
xor
rcll
out
and
rolb
addr16
jb
dec
dec
mov
push
jge
inc
dec
arpl
sbb
pop
sbb
sub
mov
adc
ljmp
xchg
cmp
stos
daa
xchg
inc
popf
cmovne
test
enter
mov
pushf
add
mov
lahf
sub
xchg
or
ficomps
sub
pop
jne
in
enter
inc
imul
inc
in
sbb
mov
sahf
pop
roll
inc
je
popf
mov
pop
insl
pusha
test
loope
leave
lds
sub
mov
jp
mov
fwait
lds
add
push
sbb
fsubl
sbb
jge
mov
sarb
fimuls
fmul
in
inc
inc
xor
lock
pushf
jp
cwtl
push
pop
dec
les
dec
popa
pushf
movsb
mov
cmp
adc
jmp
adc
xchg
sti
push
push
mov
mov
out
fwait
shrl
imul
aad
dec
repnz
pop
xchg
pusha
jp
lahf
mov
stos
sub
mov
movsb
scas
dec
dec
movsl
movsl
dec
ficoms
pop
xor
test
enter
dec
mov
push
call
movsb
andb
xor
push
aaa
out
subb
fcmovnbe
dec
jbe
mov
push
mov
sti
mov
dec
test
sub
push
cmp
inc
cmp
out
or
outsl
mov
jae
jmp
adc
stc
loope
ds
jmp
dec
xlat
inc
inc
mov
and
pop
loopne
lahf
lods
cmpsl
cmp
lcall
sar
test
lods
adc
jmp
mov
and
lock
push
pop
arpl
push
sarl
adc
inc
mov
mov
mov
push
push
xor
clc
jl
cli
hlt
rcrb
aas
cld
xchg
sbb
mov
jge
pop
xchg
insb
adc
pushf
dec
adc
outsl
daa
movsl
lret
dec
or
aam
ja
jle
repz
mov
dec
xor
testb
ret
cwtl
clc
or
jb
aaa
out
enter
test
outsl
push
ds
imul
push
add
mov
scas
cmp
addl
sahf
mov
call
popf
iret
pushl
cmp
cs
out
out
cmp
push
cmp
cmp
inc
outsl
pusha
sbb
ds
js
cmp
sub
jecxz
mov
xor
inc
xchg
fs
insb
sahf
mov
jae
stos
iret
jnp
xchg
cmp
sahf
out
outsl
das
daa
xlat
cmp
or
xchg
das
pop
int
aas
cmp
mov
aas
dec
pop
adc
push
mov
and
cs
mov
cmpsb
mov
sbb
fwait
ss
dec
insb
insb
pop
sub
rcr
dec
daa
das
pop
dec
sub
cmp
mov
add
dec
scas
or
pop
adc
and
int
subl
sbbl
sti
test
or
subb
inc
fwait
pop
cld
jg
ljmp
xchg
cmp
loopne
loope
jns
je
mov
arpl
cmpsl
iret
and
cmp
lock
mov
nop
mov
outsl
xor
mov
and
lret
mov
in
mov
jge
xchg
clc
mov
push
out
popa
sbb
jl
xchg
leave
lcall
sbb
aam
out
mov
pop
jl
movsb
ret
das
sub
mov
jo
aas
leave
cmp
dec
mov
shll
mov
aad
aaa
xor
and
cld
cmpsl
jns
pop
mov
or
cmp
mov
subl
imul
mov
jno
and
pop
mov
push
aam
mov
adc
adc
in
push
mov
sub
cmpsl
loop
fdivrl
add
xchg
int3
pop
xlat
loop
xchg
mov
and
aaa
lret
adc
js
add
mov
out
jge
or
daa
or
stc
mov
or
push
jo
mov
or
dec
mov
fadds
sub
fsubrp
cmc
jl
push
or
fistpl
jo
aaa
sahf
fmul
inc
mov
lahf
loopne
fwait
lea
je
jl
pop
das
fidivrs
hlt
outsl
test
pop
mov
fdivl
sub
jne
mov
fstpl
mov
jns
inc
cli
push
mov
out
gs
leave
cld
xchg
into
mov
es
pop
xor
andb
mov
das
jg
lods
movl
sub
xor
xchg
lret
movsb
bound
mov
into
adc
jb
jns
pushf
fwait
enter
cmp
outsb
lret
jnp
add
and
ss
cmp
mov
mov
xor
iret
dec
ret
sub
add
bndcu
popf
adc
call
gs
aad
add
jmp
inc
das
push
ja
adc
shrl
adc
xor
jns
dec
add
xchg
mov
cmp
dec
or
clc
nop
push
adc
mov
pop
mov
push
ja
ds
dec
mov
movsl
rcr
lods
ss
sbb
cmp
xchg
cmpsl
xchg
mov
das
and
jp
jle
or
rclb
pop
sbb
add
loop
movsl
and
mov
int3
dec
dec
or
inc
mov
or
add
aam
mov
push
ds
sbb
push
int
mov
das
mov
out
adc
stc
int3
fwait
push
mov
or
sub
dec
and
or
pop
rorb
js
cmp
lcall
pop
insl
xchg
test
popa
xchg
pop
sbb
jp
das
nop
das
pusha
daa
cmp
rol
mov
or
ljmp
jmp
ss
mov
nop
imul
cmp
stos
pop
je
mov
repnz
mov
popf
js
test
or
add
mov
xchg
pop
clc
or
push
pop
inc
ss
das
jge
push
fldcw
cmp
jecxz
fstpt
lea
dec
push
pushf
ja
inc
push
cmp
inc
into
in
mov
jnp
bound
mov
xor
sub
mov
xchg
inc
dec
imul
lahf
and
je
pusha
mov
jno
or
les
das
repnz
insl
xor
stos
mov
jne
pop
inc
mov
dec
and
iret
das
pop
ret
data16
shll
sub
scas
mov
pop
shrl
enter
aas
push
fwait
loop
in
sbb
jnp
inc
stc
xchg
mov
ljmp
dec
stos
lds
jne
push
cmp
insb
sub
movsl
in
insl
pop
xchg
scas
mov
xor
sub
rcl
sbb
shl
pop
jl
push
sbbb
mov
xchg
shr
lock
hlt
jecxz
popa
jmp
jae
es
mov
xchg
lret
cs
imul
add
lds
fcoms
cwtl
pop
xchg
int3
fisttpll
stos
jmp
pop
int
add
push
sub
jns
add
mov
stos
sub
pop
or
aam
lret
arpl
rcrl
or
imul
push
jb
or
mov
add
add
add
add
cmpb
add
add
add
and
and
and
and
add
add
insl
imul
jno
jno
xchg
xchg
xchg
xchg
add
add
add
add
xor
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
add
and
and
add
add
add
add
ss
add
add
add
add
add
adc
adc
add
add
popa
jo
fs
je
and
je
jb
inc
jo
cs
and
and
add
add
mov
mov
pusha
call
pop
sub
mov
mov
mov
cmpl
je
mov
mov
mov
ret
mov
mov
push
call
push
call
push
call
jmp
add
push
mov
add
pusha
call
pop
sub
mov
movl
mov
inc
mov
cmpl
je
mov
mov
incl
inc
jmp
mov
popa
mov
leave
ret
push
mov
add
pusha
call
pop
sub
lea
mov
movl
mov
rol
mov
inc
mov
cmpl
jne
movl
lea
lea
mov
mov
mov
rcl
mov
rcl
dec
jne
imul
inc
inc
mov
inc
mov
cmp
jne
popa
leave
ret
push
mov
add
mov
movl
jmp
incl
inc
cmpb
jne
mov
mov
mov
jmp
movl
jmp
movl
movl
jmp
shll
mov
shl
add
add
xor
mov
cmp
jb
cmp
ja
sub
jmp
cmp
jb
cmp
ja
sub
add
jmp
cmp
jb
cmp
ja
sub
add
add
incl
cmpl
jb
cmpl
jbe
mov
stos
incl
cmpl
jb
add
cmp
jb
mov
stos
mov
leave
ret
mov
lea
decb
inc
dec
jne
mov
mov
sub
add
icebp
mov
push
add
add
add
mov
add
add
jmp
pop
addr16
scas
cli
push
stc
pop
sub
ljmp
mov
mov
push
xchg
rorl
es
add
sbb
add
cmp
jbe
adc
cmpb
inc
add
jne
add
add
dec
in
in
nop
push
add
add
test
add
and
add
add
mov
add
add
mov
add
add
add
mov
or
jne
mov
add
mov
add
mov
in
or
mov
cs
and
add
add
xorl
roll
aas
dec
pop
jne
sub
add
add
in
mov
add
addb
add
jne
in
jmp
add
add
mov
adc
add
adc
add
rol
mov
adc
add
add
pop
sub
ds
cmp
mov
pop
xor
les
add
add
cmpsl
push
cs
inc
addr16
ficoml
or
sbb
les
mov
aam
sub
pop
jmp
out
pop
adc
add
add
dec
mov
and
or
adc
adc
sbb
sbb
add
ljmp
enter
xchg
inc
lret
mov
add
add
in
pop
enter
and
add
or
add
shlb
sbb
inc
mov
addr16
mov
jmp
fimuls
clc
ret
mov
xor
mov
add
add
popa
popa
addr16
sahf
jmp
nop
jp
insb
ret
xor
jecxz
outsl
mov
mov
clc
or
pop
bound
adc
addr16
addr16
pusha
adc
adc
faddl
je
mov
outsb
push
xor
loop
ljmp
add
jp
mov
aaa
int3
jae
cmp
mov
and
lock
or
ljmp
or
add
ljmp
mov
or
mov
loopne
fcoms
aam
ljmp
leave
push
pop
rol
inc
xchg
mov
cmpsl
ret
mov
inc
sub
mov
cwtl
and
inc
xchg
add
ja
xchg
sub
mov
push
clc
test
aam
sbb
out
pop
movsl
jecxz
inc
sahf
mov
inc
xchg
cmp
lret
and
mov
mov
jmp
pop
insb
push
mov
pop
inc
or
mov
mov
scas
dec
dec
xchg
mov
inc
xchg
sub
mov
lret
inc
xor
lock
int
xchg
data16
not
push
hlt
mov
and
bound
inc
or
lahf
icebp
jno
pop
loop
jbe
test
xor
xchg
sub
int
popf
mov
mov
imul
adc
and
fxch
sbb
frstor
xchg
enter
lds
mov
loop
mov
mov
rorl
pop
aas
push
push
xor
mov
clc
mov
inc
jo
mov
cmpsb
aas
and
mov
mov
cmp
inc
xchg
jecxz
sbb
insl
fwait
ret
mov
dec
xchg
mov
sub
mov
push
jge
mov
loopne
mov
inc
xchg
jmp
dec
fwait
inc
lcall
inc
dec
xchg
mov
cwtl
sub
enter
mov
mov
shll
mov
dec
cmpsb
ret
mov
test
xchg
scas
rcrb
mov
push
push
mov
jne
add
mov
inc
xchg
sahf
dec
add
dec
cmp
outsl
imul
ja
dec
add
js
mov
mov
insl
shrb
sub
cmp
inc
into
mov
cmc
xchg
ret
mov
pop
test
or
jecxz
and
roll
loop
cmp
xor
cwtl
xchg
enter
mov
push
push
mov
push
fnsave
mov
dec
and
mov
movsb
stos
mov
push
enter
insb
inc
jecxz
out
sbb
dec
xor
jecxz
and
xchg
inc
leave
mov
mov
lods
call
or
mov
xchg
pop
jno
repnz
sar
cmp
int
sub
out
shll
out
jns
out
jmp
je
lock
insl
shl
shl
gs
push
jb
lock
popa
stc
pushl
std
xor
jl
or
xchg
daa
rolb
xor
int
mov
mov
inc
xchg
cmpsw
adc
imull
cld
scas
lds
mov
inc
xchg
mov
mov
jecxz,pn
xor
inc
mov
mov
jge
iret
pop
mov
jb
and
dec
mov
movsb
cwtl
mov
enter
mov
xor
mov
dec
mov
mov
mov
mov
adc
push
pop
lahf
adc
pop
movsl
das
call
xor
xchg
enter
rcrl
insb
fwait
ret
mov
mov
rclb
lret
mov
mov
psubd
mov
mov
dec
xchg
xor
inc
xchg
andb
enter
mov
inc
xchg
mov
test
mov
dec
ret
mov
lret
dec
sub
out
loope
rol
inc
xchg
dec
pushf
and
pop
stos
iret
xchg
enter
call
mov
popa
scas
inc
dec
xchg
enter
lock
and
inc
xchg
scas
inc
xchg
sarl
mov
cmp
or
das
and
inc
xchg
mov
movsb
cwtl
or
das
and
inc
xchg
rcrl
inc
js
ret
mov
lock
scas
inc
js
mov
scas
lret
xor
mov
mov
ret
mov
xchg
fidivrs
pop
aad
jecxz
dec
mov
pop
add
stos
test
or
dec
into
clc
dec
xchg
xor
sahf
imul
sub
out
ficomps
sbb
lahf
inc
sbb
jecxz
xchg
mov
dec
xchg
mov
ss
xchg
enter
int
fwait
mov
lds
mov
jecxz
mov
mov
loopne
xor
inc
xchg
scas
les
test
mov
mov
and
int
popf
mov
cld
dec
ret
mov
into
insl
jne
dec
subb
addr16
xor
dec
xchg
xchg
jbe
dec
mov
mov
mov
jnp
mov
mov
int
jne
movsb
cwtl
shll
xchg
or
dec
fsubrs
lret
ficoml
or
stc
xchg
jecxz
in
inc
cmp
mov
jnp
mov
pop
out
xor
insb
push
arpl
mov
inc
xchg
data16
mov
lret
dec
xchg
into
movsb
cwtl
rol
inc
xchg
lods
push
add
dec
stc
fcoml
mov
js
inc
cld
inc
shl
or
jecxz
sub
dec
mov
pop
mov
sbb
rol
inc
xchg
loopne
cmp
clc
pop
mov
insl
inc
xchg
enter
loop
push
mov
loop
adcb
xchg
mov
inc
xchg
scas
inc
xchg
adc
popf
mov
adc
add
mov
dec
movb
jecxz
call
xor
mov
sbb
sbb
pop
sbbb
push
stos
sub
aam
cwtl
pop
lahf
ret
pop
fistpll
out
sbb
aaa
ret
mov
repnz
xor
lahf
loopne
mov
inc
xchg
les
fwait
jecxz
call
xchg
enter
dec
into
nop
lret
dec
sbb
pop
test
add
inc
mov
mov
push
mov
mov
push
cmpsb
inc
std
jecxz
rcrl
int
mov
xor
mov
dec
xchg
dec
xchg
out
dec
mov
mov
mov
or
jnp
ret
inc
insb
cwtl
testl
mov
inc
or
inc
cmp
xchg
mov
jno
rcl
inc
lahf
into
adc
subl
fisubs
mov
fcomps
mov
mov
movsb
cwtl
scas
inc
dec
xchg
mov
cmp
xchg
enter
mov
lea
cmp
cmp
sbb
es
xchg
jae
in
sbb
or
insl
adc
sub
push
mov
enter
js
sbb
inc
std
daa
xchg
inc
add
jle
inc
sbb
test
scas
mov
mov
lret
push
ror
xor
movsb
cwtl
cmp
and
test
xor
mov
dec
sti
and
cli
lret
dec
mov
xor
rclb
dec
add
mov
mov
lret
sbb
lds
arpl
mov
mov
push
mov
fistpll
int3
cld
negb
add
negb
add
negb
add
negb
xchg
stc
negb
jne
dec
jle
icebp
jge
mov
data16
icebp
mulb
test
cmc
pop
add
jno
jecxz
std
lea
jp
sbb
sub
in
jns
xor
adc
or
cmp
inc
sahf
cltd
sbb
icebp
fs
add
negb
scas
fs
scas
jae
sbb
jae
test
add
ja
dec
xor
cmp
or
cmp
xchg
and
xchg
ret
scas
inc
mov
push
mov
cmp
std
adc
pop
add
and
movsl
lret
mov
test
and
into
cwtl
or
mov
outsb
cmp
arpl
outsb
cmp
cmp
cld
mulb
adc
sti
cmp
cld
negb
aas
mov
xchg
or
adc
push
jl
push
roll
mov
fists
sub
divl
add
mulb
jnp
push
roll
mov
jecxz
ja
or
cld
cmp
cld
negb
cwtl
pop
jge
cwtl
jns
sbb
repnz
xchg
cld
mov
or
jle
icebp
push
arpl
push
negl
add
sub
dec
mov
push
into
daa
mov
mov
adc
ficoms
xor
add
cmp
loope
ss
pop
jle
int3
xor
pop
add
into
cmp
pusha
jae
cmp
add
fsubr
insl
push
push
mov
jno
cmpsl
push
pop
pop
into
cmp
bound
movsb
adc
orb
rorb
addr16
xor
jge
cmpsl
or
push
int
dec
bound
iret
adc
shlb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
cmp
in
adc
in
insl
and
or
jno
sub
mov
cmp
jns
imul
adc
ljmp
push
dec
mov
cmp
jb
fdivr
and
inc
jp
cmp
iret
sub
jmp
xchg
imul
cmc
jl
aad
lds
push
imul
sub
std
lahf
popf
add
sbb
and
cld
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
cmp
in
inc
in
in
push
push
push
mov
inc
pop
cmp
mov
popa
push
pop
pop
mulb
stc
in
sub
xor
inc
cmpsb
sub
push
pop
jp
pop
and
xor
fs
sti
into
sbb
mov
rcrb
inc
jl
sub
sub
cwtl
ficomps
xor
sahf
mulb
into
push
sub
pop
aam
adc
pop
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
ret
hlt
mov
andb
fstps
mov
iret
xchg
cmpsl
pop
fmull
fidivrl
nop
pop
sahf
cmc
cmp
call
fwait
jle
cmp
sbb
data16
pushf
push
ficompl
inc
xor
or
out
adc
jns
insl
fcompl
mov
sub
jl
xchg
add
push
jmp
push
pop
jp
dec
or
jmp
sub
adc
sbb
mov
push
lds
cmp
xor
pop
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
xor
mov
nop
testb
cld
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
idivb
add
scas
nop
push
in
mov
and
cld
negb
add
negb
xor
and
mov
mov
cld
negb
add
imul
jns
sbb
add
pop
add
popa
arpl
shl
into
jae
and
add
push
xchg
cld
dec
cld
negb
loopne
mov
nop
fstl
mov
add
negb
ror
cmp
es
jmp
iret
cld
testb
negb
lds
mov
mov
je
fimull
in
sub
std
mov
adc
add
inc
cli
negb
add
xor
push
les
inc
mov
add
add
mulb
daa
call
jno
cld
negb
add
push
arpl
jns
sbb
add
pop
add
and
mov
daa
and
cld
mov
and
jne
movsl
jge
add
mov
clc
pop
add
push
jbe
jl
jecxz
jbe
jecxz
sub
add
xor
ds
hlt
iret
cld
adc
jns
dec
in
cld
negb
and
addb
out
and
fistps
dec
cld
negb
loopne
mov
nop
fstl
mov
repz
negb
ror
fists
ja
in
adc
add
jb
std
cld
test
lods
frstor
add
idiv
movsb
cmp
fwait
add
mov
cld
idivb
out
xchg
or
lods
pop
notl
sub
xchg
push
in
mulb
test
stc
pop
add
cld
pop
add
or
test
adc
scas
pushf
add
notb
or
xorb
push
in
inc
mov
add
js
add
idivb
jns
outsb
jae
icebp
test
outsl
scas
fdivl
mov
jle
dec
iret
sub
imul
insl
jge
lds
pushf
push
daa
leave
pushf
push
jp
mov
outsb
movsl
jl
push
cmp
add
das
lahf
adc
and
cld
pop
sbbl
jge
mov
test
jb
jae
pop
add
sti
adc
les
cwtl
int3
push
rcrb
data16
cltd
cmpsb
pop
jl
aad
jecxz
jle
add
idivb
sbb
mov
lahf
dec
dec
or
sub
pushf
push
daa
leave
pushf
push
jp
sarl
mov
dec
jl
adc
icebp
popf
sub
cli
mov
lea
cld
negb
add
insb
arpl
jns
sbb
out
negb
add
and
test
xchg
mov
sahf
aad
jecxz
add
mov
clc
pop
add
push
jbe
jl
jecxz
jbe
jecxz
sub
add
xor
ds
jns
mov
das
jb
pop
daa
jns
negb
add
sub
popf
mov
icebp
push
dec
idiv
negb
cmp
push
push
mov
movsb
dec
jae
adc
pop
add
aas
push
test
pop
add
sti
mov
cltd
jno
sbb
cld
negb
loopne
mov
nop
fstl
mov
repz
negb
ror
stos
mov
mov
leave
ljmp
idiv
stos
cmp
mov
repnz
cld
idivb
cmp
imul
leave
xor
sbb
mov
sub
outsb
stos
lods
xchg
cld
std
dec
and
adc
cltd
adc
and
cld
rcll
inc
push
and
fldt
add
es
negb
add
push
incl
stc
negb
add
negb
add
dec
arpl
jns
sbb
out
negb
add
pop
sbb
negb
add
andb
xchg
outsl
iret
pop
dec
scas
cli
mov
mov
cli
mov
sti
jmp
negb
and
movsl
les
ja
negl
add
addr16
jbe
negb
add
lds
js
negb
add
xlat
stos
lcall
adc
lds
jnp
in
jmp
std
and
popf
push
and
cld
sti
xchg
xor
cli
popf
arpl
add
add
lods
adc
pop
add
push
jne
jl
jecxz
jbe
jecxz
and
cld
xor
mov
out
stos
insb
dec
es
negb
add
add
mov
clc
pop
add
push
ja
enter
and
jecxz
and
add
xor
mov
out
adc
adc
jnp
js
add
pop
sti
mov
add
lods
adc
pop
add
push
jne
jl
jecxz
jbe
jecxz
and
add
xor
inc
je
std
mov
in
mov
notb
sub
test
adc
icebp
push
lret
frstor
add
idiv
cmpsl
cmp
ret
add
mov
cld
neg
scas
cmp
in
or
fnstsw
or
xor
jge
dec
add
icebp
mulb
test
negb
add
add
add
lods
adc
pop
add
push
jne
jl
jecxz
jbe
jecxz
and
cld
xor
ds
jmp
pop
add
sub
adc
jae
rcr
std
leave
ljmp
idiv
movsb
cmp
fwait
add
mov
cld
idivb
xor
and
iret
add
xchg
fbstp
loope
add
mov
mov
clc
pop
add
push
jbe
jl
jecxz
jbe
jecxz
adc
add
xor
mov
cmp
or
test
std
push
inc
stc
mov
adc
jno
jecxz
std
jb
dec
adc
sub
pop
jge
sbb
push
clc
xchg
test
cmp
in
outsl
push
cmp
repnz
dec
sub
cld
negb
loopne
mov
nop
movsl
adc
cld
negb
ret
scas
mov
mov
das
mov
jne
mov
loop
add
mov
clc
pop
add
push
js
sarl
jbe
jecxz
adc
add
ss
es
jle
mov
js
xor
sti
mov
mov
jno
fiaddl
std
stos
sub
movl
fldenv
add
lds
cltd
or
adc
mov
cld
adc
inc
and
jp
sbb
scas
shlb
testb
es
gs
orl
lcall
scas
int3
gs
cli
adc
cli
adc
jae
sbb
pushf
push
daa
test
negb
add
jnp
jae
lea
cltd
insb
test
lock
negb
dec
dec
icebp
mov
inc
or
repz
fsubl
cld
mulb
mov
xorl
adc
mov
add
movsb
jl
js
adc
xchg
fiadds
std
push
das
xchg
testb
fsubrl
stos
jno
sbb
jns
sbb
out
negb
add
arpl
mov
sub
in
outsb
lret
test
push
das
imul
inc
or
cmp
stc
negb
mov
jae
rcr
std
lahf
cs
fnstsw
dec
frstor
add
idiv
sarb
test
ret
add
mov
test
pop
das
stc
pop
inc
shl
sti
cmpsb
hlt
cld
negb
xor
negb
add
jno
leave
cli
stos
stc
cld
negb
mov
cld
imulb
test
mov
loope
std
leave
repz
dec
cld
mov
mov
sbbb
adc
push
dec
push
and
or
pop
add
push
dec
lahf
mov
testb
sub
mov
xchg
cmpb
es
mov
jb
rolb
std
std
stc
pop
dec
js
adc
cltd
mov
outsl
pop
cld
negb
add
dec
arpl
jns
sbb
or
pop
add
es
dec
jbe
inc
clc
inc
sti
jge
mov
in
mulb
test
testb
imul
jns
sbb
or
pop
add
popa
arpl
sbb
add
mov
inc
add
cld
sbbb
mov
sbb
dec
push
clc
negb
add
aas
xchg
shlb
dec
roll
out
mov
xor
cld
inc
outsb
xchg
mov
inc
fcoms
sub
cld
negb
adcb
test
adc
mov
add
das
cli
jno
and
cld
sti
cmpsb
out
cld
negb
xor
negb
add
daa
divl
pusha
xchg
ss
push
adc
sub
cld
idivb
sahf
xchg
xchg
adc
and
cld
movl
push
push
cld
test
fdivs
lcall
leave
mov
add
mov
clc
pop
add
push
js
sarl
jbe
jecxz
and
jo
inc
xchg
dec
sub
sub
cld
negb
add
insl
arpl
jns
sbb
add
arpl
push
jl
ffreep
sahf
notl
clc
pop
add
push
js
sarl
jbe
jecxz
and
add
ss
xor
out
dec
lret
negl
add
dec
mov
push
js
adc
adc
xor
negl
add
js
jnp
jge
or
adc
mov
rcrb
negb
sti
jl
pop
add
push
test
jnp
in
jecxz
jge
sbb
adc
mov
addr16
sti
cld
negb
push
das
aas
mov
mov
sar
jmp
negb
mov
dec
js
sbb
cmc
sbb
push
push
je
sbb
adc
dec
xor
add
movsb
je
jbe
adc
negb
add
imul
or
jns
sbb
or
pop
add
arpl
cmp
pusha
push
idivb
mov
sahf
aad
jecxz
push
xor
push
mov
std
dec
cmc
pop
jno
mov
std
push
or
mov
jge
negl
add
inc
out
std
xchg
out
sbb
sub
cltd
sbb
icebp
cmp
ljmp
idiv
stos
cmp
mov
repnz
cld
idivb
cmp
xchg
lcall
aas
inc
dec
out
cld
negb
cld
jo
cmp
into
and
mov
xchg
cmc
aam
mov
sub
jge
push
push
mov
test
stos
insb
ss
sbb
jne
arpl
std
leave
dec
frstor
add
idiv
cmpsl
cmp
ret
add
mov
cld
neg
scas
cmp
sarl
add
scas
leave
daa
out
push
fsubrp
mov
in
xor
push
and
incb
fldl
pop
mov
clc
pop
add
push
jbe
jl
jecxz
jbe
jecxz
sub
add
xor
ds
mov
xor
pop
push
push
clc
sbbl
lods
test
sub
out
push
aas
fcomps
sub
push
push
push
rclb
jno
cld
negb
add
push
arpl
jns
sbb
negb
add
cmc
aas
sahf
sbb
jo
add
je
mov
loop
add
mov
clc
pop
add
push
ja
enter
and
jecxz
and
add
xor
mov
arpl
xchg
cld
popa
dec
cld
negb
loopne
mov
nop
xchg
adc
cld
negb
mov
and
add
in
add
xor
adc
or
lea
adc
mov
sub
cld
negb
add
imul
jns
sbb
lock
add
popa
arpl
cli
pop
add
inc
test
push
pop
push
js
push
daa
jge
negl
add
stc
out
std
fnstsw
sbb
sub
cmp
test
dec
or
sbb
adc
add
add
lods
adc
pop
add
push
jne
jl
jecxz
jbe
jecxz
mov
cld
xor
inc
clc
push
stos
and
add
stos
dec
ds
adc
jae
cld
testb
negb
aad
pushf
mov
subps
mov
or
inc
jns
and
mov
jno
cld
negb
add
push
arpl
jns
sbb
add
pop
add
hlt
adc
jl
and
add
pop
sti
popf
sbb
add
jle
add
imulb
icebp
xchg
loope
js
dec
leave
divl
cld
mulb
jbe
negb
add
mulb
jbe
negl
add
jno
add
mov
stc
negb
mov
jno
mov
xor
negb
add
repnz
or
xchg
lock
sub
outsb
lods
pop
in
add
mov
clc
pop
add
push
js
sarl
jbe
jecxz
sub
add
ss
int3
arpl
cli
stos
lock
or
sbbb
sub
cld
negb
add
insl
arpl
jns
sbb
in
negb
add
cmc
xor
aam
sub
mov
testb
fsubrl
stos
jno
sbb
jns
sbb
or
pop
add
arpl
fwait
dec
mov
inc
ljmp
std
incb
stc
negb
add
jne
add
mov
adc
negb
xchg
cld
addr16
cld
negb
loopne
mov
nop
lds
mov
add
negb
mov
push
test
test
imulb
sbb
jae
inc
in
std
fnsave
dec
cld
divb
repz
add
shll
push
stos
xor
dec
mov
stc
cld
negb
ja
stc
mov
add
negb
cld
ss
cmp
cld
addr16
cld
negb
loopne
mov
nop
lds
mov
in
cld
negb
mov
jb
jno
add
jge
cld
arpl
cld
negb
loopne
mov
nop
movsl
adc
cld
negb
ret
scas
mov
into
adc
and
cld
cld
dec
jmp
pop
pushf
out
xchg
sbb
sub
jno
or
mov
adc
and
add
lahf
repz
shll
fidivl
mov
add
es
negb
add
js
arpl
ja
adc
xchg
jl
adc
add
jb
clc
cld
imulb
adc
dec
icebp
sahf
lcall
in
lret
frstor
add
idiv
cmpsb
cmp
stos
add
mov
cld
mul
scas
cmp
ret
popf
xor
sti
and
insl
movsl
sub
add
negb
or
daa
push
jg
cmp
arpl
push
loope
shlb
negb
add
jecxz
cmc
loop
xor
negb
mov
rclb
flds
cwtl
jns
sbb
fldl
mov
rclb
stc
jnp
mov
loop
lahf
xor
or
nop
xchg
cld
add
scas
adc
pop
add
push
jnp
les
and
jecxz
and
add
aaa
jae
jg
cmpsb
adc
xor
push
sahf
adc
negl
inc
out
cld
negb
bound
cmp
jbe
pop
cltd
mov
and
xor
cld
cld
negb
cmp
jmp
or
pop
pusha
lcall
add
push
jne
jl
jecxz
jbe
jecxz
and
add
xor
cmp
cs
stc
negb
add
test
mov
leave
adc
pop
add
jo
subb
js
adc
inc
es
divb
cld
negb
add
push
arpl
jns
sbb
add
pop
add
cltd
call
or
adc
ja
stc
mov
icebp
mov
ficoml
sub
cld
negb
add
dec
arpl
jns
sbb
add
pop
add
mov
das
fbstp
pop
xor
negl
add
xor
scas
push
xchg
and
leave
cli
mov
mov
stc
negb
add
mov
test
int3
add
es
inc
pop
pusha
cli
mov
jge
call
outsb
jno
in
lahf
dec
sub
adc
inc
sahf
mov
jecxz
cmc
pop
add
lahf
xor
jg
jge
jecxz
mulb
test
negb
add
push
fldl
std
mov
adc
sti
cmp
cld
negb
or
mov
lea
add
jns
jnp
rcl
add
pop
sti
mov
lahf
xor
or
sbb
icebp
sti
xchg
daa
mov
ja
test
adc
add
jb
cld
mulb
movsl
sub
fs
sub
divl
cld
test
lods
frstor
add
idiv
movsb
cmp
fwait
add
mov
cld
idivb
xor
and
popa
into
or
std
test
pop
in
ja
jl
adc
add
jb
cld
imulb
dec
std
sbb
jno
pushf
movl
stc
sbb
jns
add
inc
ss
sbb
cld
sti
cmp
cld
negb
sti
js
pop
add
jbe
mov
jno
lock
and
cld
neg
js
sti
xor
icebp
neg
cld
add
scas
adc
pop
add
push
jnp
les
and
jecxz
and
jae
jle
daa
inc
ja
ljmp
push
sbb
repz
movsb
je
push
sbb
divl
cld
testb
negb
lret
mov
xchg
fsubl
xchg
cli
jbe
xchg
insb
jl
je,pt
in
add
test
and
cmp
cld
negb
scas
lcall
xor
negb
add
test
fmuls
jbe
xchg
sahf
add
inc
add
negb
xchg
mov
repnz
out
cld
negb
adcl
xor
and
push
jp
cli
fnsave
iret
fwait
dec
mov
mov
jecxz
daa
mov
add
lods
frstor
add
idiv
movsb
cmp
fwait
add
mov
cld
idivb
sbb
int
std
mov
adc
mov
and
movsl
dec
out
adc
jg
jge
in
mulb
test
negb
add
in
add
lods
xchg
daa
mov
leave
dec
frstor
add
idiv
cmpsb
cmp
stos
add
mov
cld
mul
scas
cmp
mov
cmp
adc
jg
add
es
negb
add
dec
dec
fiaddl
std
dec
mov
negb
xchg
cld
gs
cld
negb
loopne
mov
nop
mov
mov
icebp
cld
negb
mov
hlt
lahf
lods
cli
mov
negl
add
lahf
lods
xor
negl
add
mov
outsl
pop
cld
negb
add
dec
arpl
jns
sbb
lock
add
mov
adc
sti
cmp
cld
fs
cld
negb
loopne
mov
nop
lea
mov
in
cld
negb
ret
mov
fiadds
std
and
popf
sbb
add
inc
or
jbe
jo
icebp
xor
iret
enter
sbb
cmp
pop
xchg
cld
dec
cld
negb
loopne
mov
nop
fstl
mov
icebp
cld
negb
ror
in
xchg
jbe
pop
cltd
add
mov
clc
pop
add
push
ja
enter
and
jecxz
sub
add
xor
stos
xlat
push
cltd
imul
pop
add
inc
add
add
dec
scas
movsb
shrl
cld
testb
shll
rorb
adc
mov
popf
cli
jmp
negb
xor
negb
add
push
mov
dec
add
enter
roll
rorl
xchg
testb
fsubrl
jno
sbb
jns
sbb
out
negb
add
add
mov
daa
mov
inc
in
cld
negb
push
bound
add
add
and
stc
push
and
jbe
pop
sub
leave
inc
frstor
add
idiv
movsl
cmp
mov
repnz
cld
mul
lods
cmp
xchg
mov
jge
jo
adc
ja
dec
jo
icebp
push
stos
xor
imulb
adc
cmp
add
and
popf
hlt
pop
add
jge
mov
cmp
int3
cld
notb
mov
decl
xlat
adc
mov
inc
scas
sbb
cld
add
jg
push
sbb
in
stos
aas
je
dec
lock
test
adc
sbb
jne
push
push
std
push
les
inc
mov
add
sbb
adc
xchg
sahf
fnsave
aad
adc
or
xor
negb
add
testb
push
nop
mov
or
adc
inc
int
jp
cmp
call
data16
jecxz
mulb
jge
cmc
pop
add
jle
jno
jecxz
mulb
test
negb
add
negb
add
imul
jns
sbb
add
popa
arpl
mov
mov
mov
adc
xlat
insl
sub
xchg
cmp
adc
add
jb
add
test
leave
frstor
add
idiv
sarb
test
ret
add
lret
cld
mul
test
push
stos
xor
fsubl
cld
neg
push
push
cmpsb
jmp
xor
mov
or
icebp
mulb
test
negb
add
pusha
add
std
pop
sti
mov
mov
or
icebp
mulb
test
xor
add
std
pop
sti
mov
sti
movsl
out
cld
negb
xor
negb
add
rol
xor
movsl
push
xchg
cmp
adc
sti
cmp
cld
negb
jbe
ja
cmp
adc
add
jb
cld
test
lods
frstor
add
idiv
movsb
cmp
fwait
add
mov
cld
idivb
scas
jne
and
sbb
jnp
adc
add
pop
sti
mov
add
test
cld
push
jns
ret
jecxz
jbe
jecxz
adc
add
xor
stos
pop
xchg
sbb
es
mov
stos
cs
repz
in
cmpsb
jnp
add
add
pop
bnd
pushf
std
adc
add
mov
jl
adc
cmc
filds
std
movsb
fs
add
daa
call
add
pop
xchg
add
jbe
jmp
cmp
jne
aaa
xchg
loope
mov
movsl
les
mov
add
mov
clc
pop
add
push
ja
enter
and
jecxz
and
sub
mov
cmp
xor
inc
cmp
sbb
cld
sti
cmp
sbb
leave
and
add
adc
divl
cld
test
lret
frstor
add
idiv
cmpsb
cmp
stos
add
mov
cld
mul
scas
cmp
outsb
add
cmp
xor
negl
add
pushf
push
mov
adc
stc
divl
cld
imulb
adc
pop
add
push
jns
ret
jecxz
jbe
jecxz
and
add
xor
dec
cli
cld
negb
mov
pop
xchg
sarb
icebp
jle
cld
testb
fmulp
adc
add
sub
leave
frstor
add
idiv
sarb
test
ret
add
mov
cld
mul
test
cmp
add
lds
es
mov
call
test
cld
negb
mov
gs
jmp
push
shll
push
mov
popf
int3
call
dec
mov
ficoml
sub
icebp
push
fidivrs
fsts
jecxz
add
test
cld
push
jns
ret
jecxz
jbe
jecxz
mov
cld
xor
push
lock
out
idivl
cld
testb
cli
sti
sbb
mov
fnsave
jne
mov
leave
addr16
divl
add
mulb
leave
divl
cld
idivb
test
daa
leave
pushf
push
jp
mov
and
add
data16
ret
test
xchg
testb
imul
jns
sbb
out
negb
add
popa
arpl
pop
mov
jnp
int
loop
frstor
add
testb
popa
filds
bound
add
rcr
std
push
das
adc
pop
add
int
cmp
sbb
mov
data16
mov
negb
stos
das
movsb
in
stos
daa
imul
insl
cltd
xor
inc
push
ja
lods
mov
jae
gs
add
stos
insb
scas
sub
adc
negb
sti
jbe
and
cld
frstor
cld
notb
jecxz
aad
adcl
daa
add
not
icebp
jecxz
mov
arpl
mov
jbe
mov
not
and
les
lods
repnz
shrb
mov
mov
sbb
jle
icebp
jge
fdivr
adc
sti
js
pop
add
sti
cmpsl
add
negb
xchg
xchg
in
mov
pop
repz
add
enter
inc
mov
sbb
adc
pop
add
sub
xor
or
and
cld
push
jp
ret
jl
jecxz
jbe
jecxz
and
jb
sub
cli
addr16
lret
xor
idiv
negb
push
push
sub
add
scas
and
adc
jnp
cmc
adc
adc
jb
cld
negb
je
int
loop
add
test
cld
push
jns
ret
jecxz
jbe
jecxz
and
add
xor
stos
fs
test
ljmp
js
negl
add
test
stos
mov
adc
pop
add
push
jbe
jl
jecxz
jbe
jecxz
sub
add
xor
ds
punpckldq
mulb
inc
xchg
mov
sbb
mov
test
xchg
int
adc
repnz
add
and
addl
and
cld
idivb
cwtl
test
pop
jmp
fildll
sub
and
xor
les
add
cld
negb
jne
ljmp
jne
sbb
std
stos
insb
cli
stc
sbb
daa
out
dec
frstor
add
idiv
cmpsl
cmp
ret
add
mov
cld
neg
scas
cmp
bound
push
jns
test
icebp
frstor
cld
idivb
mov
xorb
aad
push
add
negb
add
dec
arpl
jns
sbb
add
data16
jns
gs
xchg
mov
dec
jo
icebp
add
scas
adc
pop
add
push
jnp
les
and
jecxz
adc
add
aaa
jae
sbb
mov
dec
daa
testl
clc
jl
mov
jne
or
icebp
jle
cld
notb
sub
add
jg
inc
jne
add
mov
arpl
jmp
idivb
hlt
popl
out
sbb
xchg
jb
mov
ret
insl
jp
int3
push
jo
int3
addr16
leave
mov
push
cmpsl
adc
and
cld
pop
xchg
xor
stos
ret
add
es
negl
add
and
add
cmp
jae
dec
mov
mov
and
hlt
negb
add
or
mov
mov
adc
cld
pop
dec
xor
lea
popf
test
outsb
js
inc
jns
mov
outsb
jne
in
mov
xchg
cld
gs
cld
negb
loopne
mov
nop
mov
mov
jmp
negb
mov
rclb
xchg
inc
pop
jno
sbb
mov
adc
sti
cmp
cld
arpl
cld
negb
loopne
mov
nop
movsl
adc
cld
negb
ret
scas
mov
popf
iret
cmc
mov
add
jg
test
icebp
push
bnd
in
jmp
std
and
popf
cmp
add
lahf
xor
jne
cmp
icebp
lahf
dec
js
adc
xchg
sti
lahf
xor
xchg
stc
test
scas
sbb
ret
mov
je
add
xchg
dec
popf
mov
icebp
test
icebp
stc
jl
pop
add
cmc
xchg
test
adc
sbb
pop
adc
lret
testb
fsubrl
jno
sbb
jns
sbb
or
pop
add
scas
lret
into
push
je
adc
adc
fsub
add
stos
insb
cli
adc
negb
add
add
mov
clc
pop
add
push
ja
enter
and
jecxz
and
add
xor
orb
sub
cmp
cmp
cld
popa
dec
cld
negb
loopne
mov
nop
xchg
adc
cld
negb
mov
pop
inc
idiv
das
dec
stos
je
dec
in
rolb
std
pop
sti
mov
push
fwait
cmp
adc
xchg
cld
popa
dec
cld
negb
loopne
mov
nop
xchg
adc
cld
negb
mov
icebp
test
stos
jl
push
sbb
jns
arpl
cld
jge
in
adc
mov
inc
std
movsl
les
mov
push
test
divl
cld
imulb
adc
pop
and
cld
jne
aam
adc
dec
out
std
jp
dec
shll
push
stc
adc
jns
jbe
cld
add
mov
clc
pop
add
push
js
sarl
jbe
jecxz
and
add
ss
adc
scas
sub
cld
test
frstor
add
idiv
movsl
cmp
mov
repnz
cld
mul
lods
cmp
jmp
clc
gs
or
icebp
push
stos
inc
sbb
pusha
jmp
mull
test
imulb
cld
negb
add
dec
arpl
jns
sbb
in
negb
add
icebp
jge
mulb
jge
cmc
pop
add
negb
add
negb
add
dec
arpl
jns
sbb
add
pop
add
aas
andl
negb
add
negb
add
imul
or
jns
sbb
add
pop
add
arpl
insl
add
jb
cld
mulb
mov
outsb
and
mov
jge
test
adc
dec
stc
negb
add
mov
movsb
inc
lret
adc
sahf
xor
cmpsl
daa
aam
ljmp
idiv
stos
cmp
mov
repnz
cld
idivb
cmp
ja
mov
xchg
clc
cld
negb
xchg
cld
fs
cld
negb
loopne
mov
nop
lea
mov
repnz
negb
ret
loope
push
jl
push
mov
and
jae
cld
imulb
adc
call
dec
frstor
add
idiv
cmpsb
cmp
stos
add
mov
cld
mul
scas
cmp
xchg
fstps
mov
jecxz
cld
negb
out
adc
std
cld
negb
xchg
cld
addr16
cld
negb
loopne
mov
nop
lds
mov
add
negb
mov
mov
jge
cld
imulb
adc
cwtl
cld
cld
negb
mov
icebp
negb
jns
lret
ret
js
std
divl
clc
cld
imulb
add
push
mov
jbe
pop
pusha
cli
mov
jge
pop
iret
adc
jg
mulb
test
divb
cld
negb
add
push
arpl
jns
sbb
in
negb
add
sti
mov
inc
or
pop
add
mov
mov
xor
mov
lcall
cmpsb
cltd
mov
pop
add
call
mov
aad
mov
cs
mov
or
push
jbe
jne
enter
frstor
add
idiv
movsl
cmp
mov
repnz
cld
mul
lods
cmp
mov
cld
negb
sarb
mov
dec
pop
hlt
mov
pop
ja
pop
fwait
inc
mov
js
lret
dec
ja
daa
aam
dec
frstor
add
idiv
cmpsb
cmp
stos
add
mov
cld
mul
scas
cmp
scas
mov
push
add
negb
dec
and
jp
adc
ret
sbb
push
fwait
mov
je
sbb
je
xor
outsb
inc
sbb
mov
adc
pop
scas
adc
pop
add
push
jnp
les
and
jecxz
mov
cld
aaa
jae
aam
xchg
inc
push
jp
and
es
negb
add
negb
add
push
arpl
jns
sbb
add
pop
add
divps
jne
or
add
and
sbb
adc
pop
add
aad
ja
jle
adc
xor
in
out
dec
call
xor
negb
add
negb
add
imul
jns
sbb
in
negb
add
popa
arpl
cld
negb
jg
bnd
negb
add
test
add
dec
and
pop
sti
dec
in
mov
jmp
negb
xchg
sahf
pop
sbb
xor
adc
ja
cmc
add
icebp
frstor
cld
neg
js
mov
es
cmc
pop
add
pop
mov
es
mov
lea
cld
negb
add
insb
arpl
jns
sbb
add
pop
add
push
pusha
jp
call
pop
add
negb
add
imul
or
jns
sbb
add
arpl
pushf
and
adcb
cmc
divl
cld
neg
inc
jo
movsl
inc
pop
cmp
mov
jo
cld
negb
add
insl
arpl
jns
sbb
negb
add
add
loope
aad
dec
sub
adc
pop
add
repnz
ds
push
pop
dec
and
daa
scas
daa
jnp
negb
add
cmpsb
adc
pop
add
arpl
cld
negb
out
inc
fisubrs
mov
scas
mov
ja
popa
and
icebp
ja
add
jb
cld
testb
outsb
shl
aaa
and
jl
stc
sbb
adc
push
or
mov
test
adc
je
aad
in
add
test
cld
push
jns
ret
jecxz
jbe
jecxz
sub
add
xor
mov
add
mov
std
cld
negb
dec
lock
mov
jns
cmp
mov
adc
sti
ja
and
cld
jle
cld
testb
adc
jmp
pop
xlat
imul
inc
sti
cmp
or
pop
add
and
inc
jg
xchg
jp
sahf
mov
movsl
inc
push
push
sbb
jne
notb
add
aaa
mov
mov
jp
mov
jbe
in
jecxz
mov
imul
mov
mov
dec
in
rolb
std
pop
xchg
pop
mov
fsts
sub
mov
jecxz
jns
cmp
sub
dec
jns
sub
adc
or
cmp
stc
cld
negb
ja
push
cs
lahf
lods
cmp
adc
ja
mov
jecxz
lahf
test
sub
cmc
testb
negb
sar
dec
sbb
int3
stos
fs
sbb
mov
adc
jg
jge
in
mulb
test
negb
add
mov
mov
adc
sti
cmp
cld
negb
mov
add
fnstsw
outsb
es
daa
mov
stos
das
je
fstl
add
mov
adc
sti
cmp
cli
negb
scas
pushf
push
sarl
sti
pop
xchg
push
jnp
add
mov
pop
add
dec
jmp
std
mov
adc
sti
cmp
jne
add
icebp
ja
repz
adc
add
jb
clc
cld
idivb
add
lahf
push
jne
push
movsl
jl
fwait
push
adc
or
add
stos
dec
cmp
adc
jle
int
in
imul
add
pop
add
jg
jbe
mov
lock
clc
negb
add
dec
out
test
cld
sti
sbb
test
mov
icebp
dec
fidivrs
scas
flds
cltd
sbb
icebp
bound
xchg
sub
and
cld
or
movsl
ja
js
outsb
inc
cli
mov
add
loop
ficompl
sub
add
negb
ja
jge
in
jns
xor
adc
sbb
negb
add
jecxz
ds
lcall
rclb
sub
int3
frstor
add
idiv
cmpsl
cmp
ret
add
mov
cld
neg
scas
cmp
mov
rorb
pop
sbb
mov
and
cld
idiv
test
std
repnz
cld
idivb
cmp
push
jb
push
dec
sti
cld
negb
arpl
testb
lea
adc
daa
out
ljmp
idiv
stos
cmp
mov
repnz
cld
idivb
cmp
inc
pop
jl
hlt
repz
mov
cld
mulb
xchg
rcll
js
mov
dec
add
xor
or
sbb
xor
adc
pusha
mov
std
bound
je
rcr
std
push
scas
jno
icebp
out
std
jp
sub
cmp
cld
negb
xchg
outsb
cltd
mov
icebp
mov
decl
negb
add
dec
arpl
jns
sbb
or
pop
add
test
adc
negb
add
dec
arpl
jns
sbb
add
pop
add
js
insb
sti
cmp
sbb
negb
add
xorb
push
dec
inc
rcll
sub
cld
inc
jecxz
stos
cmp
pop
stc
sti
cmp
sti
negb
xchg
dec
std
sbb
icebp
and
cld
test
leave
frstor
add
idiv
sarb
test
ret
add
int3
cld
mul
test
adc
xchg
xor
outsb
and
mov
arpl
jbe
push
mov
cmp
pop
sti
js
pop
add
sbb
sub
xor
jecxz
lahf
dec
cmp
adc
aad
std
pop
add
pop
xchg
dec
inc
mov
dec
push
adc
cltd
mov
lahf
cltd
push
rcrl
lahf
and
cld
idivb
stc
cld
negb
imul
pop
int3
out
and
add
js
and
frstor
add
idiv
sarb
test
ret
add
mov
test
xor
hlt
jae
test
cld
negb
ja
fstl
cld
imulb
adc
add
andl
icebp
add
dec
pop
stc
negb
jns
jmp
movl
jno
cld
test
int3
frstor
add
idiv
cmpsl
cmp
ret
add
mov
cld
neg
scas
cmp
pop
in
sub
daa
push
inc
frstor
imul
cmp
jl
xor
pop
test
cld
push
jns
ret
jecxz
jbe
jecxz
and
add
xor
dec
jnp
negb
cmpb
mov
iret
cld
negb
xchg
cld
popa
dec
cld
negb
loopne
mov
nop
xchg
adc
cld
negb
mov
jnp
xchg
sub
adc
mov
int3
cmc
pop
add
bnd
negb
add
negb
add
dec
arpl
jns
sbb
add
arpl
cmc
jge
out
dec
frstor
cld
test
leave
frstor
add
idiv
sarb
test
ret
add
int3
cld
mul
test
mov
cld
negb
add
insl
arpl
jns
sbb
or
pop
add
or
sub
lahf
js
test
test
inc
idivb
cld
mul
arpl
shl
jp
popa
arpl
mov
test
add
negb
jae
ljmp
jae
icebp
aaa
xchg
divb
cld
negb
add
push
arpl
jns
sbb
lock
add
test
test
pop
sbb
fists
adc
out
loope
sarb
bnd
negb
add
negb
add
dec
arpl
jns
sbb
or
pop
add
shlb
adc
jp
xchg
add
imulb
lds
out
or
jp
mov
movzbl
cld
lahf
xor
dec
stc
negb
add
dec
icebp
cld
negb
ja
lahf
cmp
mov
sahf
add
in
mov
push
xchg
adc
adc
add
jno
clc
cld
imulb
adc
push
daa
test
negl
add
addr16
leave
mov
negl
add
addr16
leave
mov
adc
js
negl
add
sar
std
std
adcl
adc
lahf
dec
rolb
sub
sbb
pop
sarb
jl
cld
idivb
cwtl
int3
push
dec
sti
cld
negb
das
leave
jmp
icebp
loope
cmp
pop
add
push
rcrl
and
add
mov
pop
ja
add
lock
and
stc
data16
orl
pop
add
and
add
notl
fisubrs
jl
and
cld
negb
push
dec
xchg
push
jb
rcrl
push
xor
lret
frstor
add
idiv
test
std
repnz
cld
idivb
cmp
adc
in
or
inc
loopne
add
leave
dec
frstor
add
idiv
cmpsb
cmp
stos
add
mov
cld
mul
scas
cmp
iret
sub
xor
adc
xchg
cld
gs
cld
negb
loopne
mov
nop
mov
mov
in
negb
mov
pop
jo
dec
or
sti
int
out
jne
negl
add
jle
sbb
adc
ja
dec
lret
frstor
add
idiv
sarb
test
ret
add
lret
cld
mul
test
js
cld
cld
negb
mov
push
adc
mov
stc
fdivrs
add
pop
sti
mov
jle
cld
imulb
mov
adc
lock
inc
and
insb
test
adc
adc
xchg
cld
arpl
cld
negb
loopne
mov
nop
movsl
adc
cld
negb
ret
scas
mov
rcll
sub
lret
sbb
xchg
icebp
loop
mov
fbld
pop
sub
leave
dec
frstor
add
idiv
cmpsb
cmp
stos
add
mov
cld
mul
scas
cmp
sbb
dec
out
jns
mov
test
push
sbb
jno
mov
add
mov
stc
negb
mov
push
mov
adc
sti
cmp
cld
dec
cld
negb
loopne
mov
nop
fstl
mov
repz
negb
ror
adc
pop
pop
mov
jecxz
sti
test
cld
negb
sti
dec
jmp
clc
cld
negb
xchg
cld
addr16
cld
negb
loopne
mov
nop
lds
mov
in
negb
mov
mov
out
jge
push
lods
testl
add
pop
add
std
push
push
stos
sbb
adc
pop
add
and
sub
add
stc
daa
test
jne
mov
dec
add
test
mov
dec
fstps
scas
adc
pop
add
push
jp
ret
jl
jecxz
jbe
jecxz
and
cld
cmp
leave
std
add
mov
pop
xchg
cld
push
pop
loopne
mov
nop
lods
adc
cld
negb
mov
aas
in
pop
iret
pushf
sti
mov
ja
shrl
std
pop
sti
popf
lods
and
cld
jbe
mov
add
in
dec
out
fists
lock
xchg
div
pop
add
fdivrl
or
mov
mov
in
aad
xor
rclb
sub
dec
sub
jecxz
xor
jl
int3
sbb
jl
cmp
dec
sti
mov
mov
stos
sbb
jno
push
movl
frstor
add
idiv
cmpsl
cmp
ret
add
mov
cld
neg
scas
cmp
movsl
xor
adc
xor
pop
add
rcll
jecxz
aad
adcl
int
stc
negb
add
test
test
cmp
adc
negb
add
insl
arpl
jns
sbb
add
pop
add
pop
ss
addr16
inc
clc
jb
cld
testb
push
stc
fwait
les
negb
sti
jns
pop
add
xor
ss
push
push
adc
mov
mov
cld
negb
add
imul
jns
sbb
out
negb
add
popa
arpl
jns
imul
std
leave
dec
frstor
add
idiv
sarb
test
ret
add
int3
cld
mul
test
lret
jns
adc
jae
sbb
scas
dec
idiv
negb
addr16
rcrl
test
rcrl
add
scas
adc
pop
add
push
jp
ret
jl
jecxz
jbe
jecxz
adc
add
cmp
fs
lods
fstps
movsl
inc
push
push
sbb
jne
pop
jg
std
xchg
dec
fdivl
aaa
mov
mov
insl
js
dec
add
icebp
imul
add
test
push
popa
negb
add
pop
pusha
cli
mov
ja
mov
adc
add
push
sbb
fs
pop
add
pop
pusha
xchg
bnd
push
lret
stc
nop
std
mov
adc
add
ja
mov
jecxz
jns
cmp
sub
dec
ja
nop
rclb
sub
nop
hlt
push
je
scas
sbb
jne
test
std
push
das
jl
mov
jmp
adc
ja
dec
add
icebp
jge
jecxz
jno
lock
and
cld
imulb
adc
popa
out
add
stos
push
sahf
ret
ss
pop
pop
stc
mov
clc
or
sub
cld
negb
ja
push
cs
lahf
lods
cmp
adc
ja
mov
jecxz
lahf
test
sub
cmc
mulb
adc
add
jg
pop
sbb
icebp
imul
add
mov
stos
xor
adc
pusha
mov
std
into
insl
mov
in
jge
rcl
sub
xor
add
imulb
mov
mov
push
adc
stc
ffreep
jl
and
cmpsb
push
dec
fsubrp
call
adc
cmp
fwait
cmc
cld
negb
pop
cld
addl
mov
xchg
and
cmp
xor
idivb
stc
jne
insb
jp
sarl
and
les
fldl
jbe
adc
movsl
adc
or
jbe
add
clc
pop
add
clc
icebp
stc
popf
icebp
pop
add
mov
daa
jg
mov
sti
call
pop
add
jle
inc
sti
mov
iret
cmp
icebp
stc
popf
icebp
pop
add
mov
daa
jg
cmc
pop
add
call
pop
add
jle
inc
daa
pusha
std
inc
sti
cmp
cld
negb
jbe
xor
sub
clc
jno
cld
imulb
in
cmp
icebp
stc
popf
icebp
pop
add
mov
mov
clc
jb
cld
testb
je
jle
sti
negb
add
pop
push
or
das
and
cld
mulb
cs
jno
cld
imulb
in
cmp
icebp
stc
popf
icebp
pop
add
mov
daa
jle
mov
aam
fwait
clc
cld
negb
sti
popf
ret
cld
dec
and
cld
mulb
cs
jno
cld
imulb
in
xor
icebp
stc
popf
icebp
pop
add
mov
daa
jle
mov
scas
sahf
outsl
or
pop
push
or
pop
popa
pop
icebp
mov
cltd
clc
cld
negb
incb
cmp
cld
negb
jbe
xor
sub
clc
jno
cld
imulb
stc
jbe
push
or
lret
stc
mulb
jg
negb
add
idivb
cld
negb
mov
sub
pushf
test
sub
mov
jae
add
mulb
adc
xchg
fdivrl
or
mov
aas
adc
es
negb
add
and
gs
adc
xchg
and
cld
testb
mov
test
or
ss
and
std
pop
add
ds
cld
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
negb
add
xor
icebp
cwtl
das
jg
fdiv
scas
or
icebp
xlat
popa
jecxz
test
jecxz
cwtl
scas
jecxz
mov
jl
icebp
orb
icebp
push
cmp
icebp
dec
and
mov
fnstsw
fdiv
xorb
icebp
mov
icebp
out
repnz
jl
fdiv
pop
adc
icebp
push
or
icebp
add
xchg
jecxz
test
xchg
jecxz
ficompl
fdiv
push
push
jecxz
lods
mov
icebp
push
mov
icebp
xor
and
icebp
std
loop
mov
jecxz
push
hlt
loop
and
jecxz
xor
icebp
pop
fwait
jecxz
shlb
jecxz
mov
jecxz
fwait
jmp
icebp
loop
jecxz
or
mov
movsl
inc
jecxz
xchg
pop
jecxz
cmpsb
stos
jecxz
jnp
loop
es
jecxz
xor
fdiv
jb
jecxz
loop
arpl
icebp
std
int
icebp
clc
cld
loop
push
adc
jecxz
and
icebp
lret
icebp
scas
xor
insb
and
icebp
push
stos
jecxz
scas
sub
icebp
push
cld
loop
cmc
out
loop
int3
fdiv
pusha
mov
icebp
cli
push
jecxz
sbb
jecxz
add
fidivrl
adc
loop
sar
loop
sbb
jecxz
stos
push
icebp
xor
das
jne
jecxz
push
or
icebp
jp
jecxz
and
jecxz
cmp
fdiv
outsl
icebp
loop
je
loop
add
icebp
mov
push
jecxz
js
fdiv
dec
add
icebp
sub
xchg
jecxz
xlat
jle
icebp
dec
push
jecxz
cli
loop
cmp
fdiv
dec
jecxz
mov
loop
outsb
inc
jecxz
push
arpl
icebp
sbb
loop
and
icebp
andl
sbb
sub
mov
pop
sbb
icebp
cmp
pop
stc
loop
rcll
mov
push
rclb
jecxz
imulb
icebp
sub
repz
icebp
push
pop
jecxz
cmc
xor
icebp
mov
mov
icebp
fmull
jecxz
mov
inc
jecxz
lahf
test
icebp
dec
xor
icebp
push
int
icebp
xor
lods
data16
cs
pop
or
jecxz
push
cmp
icebp
mov
icebp
push
cmpsl
jecxz
cltd
sbb
icebp
ret
icebp
cld
stos
jecxz
dec
mov
icebp
xor
jecxz
call
xor
icebp
stc
std
loop
dec
mov
icebp
icebp
xchg
icebp
dec
pushf
jecxz
and
mov
jecxz
mov
dec
jecxz
lret
xor
icebp
push
xor
adc
pop
add
imul
jae
mov
adc
xor
loopne
cltd
push
stc
negb
pop
push
idivb
mov
subl
cld
xchg
iret
cmp
daa
dec
mov
fstpl
sar
testb
je
sbb
pop
repnz
cmp
lahf
fstpl
sub
lods
adc
cld
fs
icebp
js
add
sbb
fcoms
stos
jecxz
ja
add
sbb
aas
popa
dec
and
cmc
pop
cmp
and
cmp
jge
jecxz
repnz
in
jb
xor
inc
add
push
or
adc
mov
sbb
mov
cmp
mov
jecxz
outsb
dec
or
repz
add
clc
mov
add
dec
cmpsl
pushf
negb
or
adc
add
mov
lret
pop
repnz
add
ja
add
sbb
inc
imul
adc
add
mov
inc
test
jle
push
mov
fs
negb
dec
stc
imulb
cld
testb
negl
scas
arpl
pop
add
jne
push
out
mov
popa
push
out
mov
mov
in
cli
sbb
clc
adc
xchg
es
pop
add
ret
cld
jge
in
daa
push
inc
jns
jmp
and
fmulp
jg
mulb
cld
mov
jae
sbb
sbb
mov
and
je
pop
repnz
imul
adc
psubusb
pop
xchg
in
adc
cld
jge
add
negl
add
jae
jecxz
adc
or
adc
add
negb
xor
cmpsb
and
enter
stc
mulb
jmp
frstor
lds
outsl
ficoms
insb
and
ret
outsb
xor
xchg
cld
cmc
inc
adcb
into
shl
imul
xchg
dec
aas
push
negl
scas
jnp
mov
add
bnd
cmp
pop
add
ja
add
and
cld
cmc
cmpsb
cmp
and
xor
mov
xchg
xchg
in
sti
sbb
adc
inc
ror
dec
pop
sahf
ret
int
das
cmp
mov
mov
adc
mov
icebp
cmp
pop
jp
mov
leave
pop
inc
rol
adc
jne
adc
add
pop
stos
adc
cld
fs
cld
mov
add
sbb
nop
adc
add
negb
scas
lret
add
testb
test
jp
cmp
ljmp
sub
pop
repnz
add
jae
jecxz
push
and
stos
dec
cwtl
and
cmp
dec
aad
mulb
pop
fiaddl
pop
xchg
or
xor
add
mov
add
mov
mov
clc
pop
add
frstor
cld
mulb
fsts
mov
cld
insl
mov
cld
mulb
test
hlt
push
dec
inc
push
cli
sbb
leave
test
pop
jns
add
ficomps
mov
test
negb
iret
or
stos
jecxz
push
fdivr
imulb
dec
int
sub
inc
and
jne
or
inc
bound
cld
imulb
add
or
mov
adc
negb
pop
xchg
mov
jle
cld
testb
adc
stos
add
jne
add
negb
xor
and
add
add
shrl
mov
out
or
mov
sbb
mov
cld
testb
negb
adc
sub
int3
jnp
add
sbb
mov
add
and
adc
add
insb
and
data16
add
negb
stc
ds
mov
adc
mov
or
pop
cwtl
inc
lds
add
xor
cld
cmp
sbb
iret
mov
popa
fcmovbe
das
das
xor
sub
xchg
dec
out
cld
jge
jecxz
fmuls
cmc
pop
adc
adc
mov
pop
add
addr16
out
pop
add
inc
test
sbb
inc
and
jnp
mov
sbb
negb
mov
in
and
jl
mov
cmp
dec
lods
lods
negb
dec
ljmp
cld
push
mov
add
imul
mov
iret
cmp
mov
add
jle
leave
xor
xchg
add
imulb
scas
fs
adc
aas
xchg
mov
cmc
in
inc
adc
iret
repz
stos
jns
clc
lahf
clc
or
adc
jle
sub
fistl
leave
dec
cld
jne
pop
aam
out
cmp
sbb
imul
sub
sub
dec
and
jae
sbb
sbb
push
stos
add
popa
test
cld
push
stos
add
gs
imulb
lods
pop
repnz
add
popa
xchg
aad
mov
cmp
hlt
mov
cli
jns
xchg
or
pop
jns
mov
not
fnsave
js
repz
add
jge
jecxz
scas
and
dec
mov
pop
mov
cld
imulb
jp
enter
mov
leave
roll
pop
lods
jno
sbb
jno
sbb
sbb
testb
negb
icebp
das
push
push
scas
arpl
add
xor
jns
mov
lret
add
cld
negb
xchg
cmp
mulb
add
mov
lret
add
roll
lahf
and
adc
cld
insb
aas
add
push
mov
je
add
negb
jns
repnz
add
sub
jmp
adc
aad
cmp
fnstsw
add
lret
add
add
clc
add
je
sbb
xchg
das
out
cld
jge
in
repnz
je
add
negb
cwtl
adc
pop
add
sbb
ja
and
jno
sbb
add
rcll
jbe
mov
negb
stc
aaa
insl
mov
jns
notb
add
insb
dec
adc
negl
stos
adc
cld
lds
jno
sbb
lea
mov
lods
sub
ficoms
xchg
negb
cmpsb
adc
cld
cmc
cmc
movsl
lahf
ret
std
adc
ds
fdivs
xchg
out
jle
movsl
dec
outsl
es
add
cld
dec
dec
or
cmp
pop
add
jae
jecxz
push
sub
cld
jne
jle
mov
xchg
cld
mulb
ficoms
lret
cld
cmc
jnp
and
xor
aas
and
cmp
sub
fwait
ret
fisubrs
cld
notb
js
inc
sub
aad
inc
xor
test
jno
test
in
bound
xor
arpl
lock
popa
adc
mov
jns
and
dec
cmp
stos
dec
and
mov
jns
sbb
out
add
adc
orl
arpl
add
jge
test
andb
std
mov
jno
mov
add
mov
add
and
jecxz
and
jns
sub
cmc
jb
aad
cs
ljmp
jns
repnz
add
sbb
jg
cld
mov
jecxz
dec
dec
mov
sub
lods
popa
stos
fildl
jne
add
negb
jns
repnz
add
jne
add
negb
xchg
int
xchg
stos
testl
cs
xor
cld
idivb
pop
sbb
enter
mov
sbb
enter
stos
jae
sbb
adc
out
jmp
push
jns
dec
and
adc
pop
or
insl
icebp
sbb
icebp
add
mov
jmp
jmp
jne
add
negb
iret
call
negb
adc
js
mov
jb
in
adc
sbb
test
les
jecxz
adc
dec
outsl
push
or
fidivrl
xor
mov
nop
cmp
add
sbb
sbb
fsubl
inc
sbb
sbb
in
and
jnp
mov
add
jge
in
dec
mov
add
jge
xor
add
sbb
cld
lahf
int3
jecxz
mov
lods
mov
pushf
rcll
aaa
cld
jne
sub
or
js
jo
jnp
mov
add
lret
testb
negb
jns
repnz
add
addr16
pop
xchg
int
enter
mov
add
sbb
jo
and
cmp
and
mov
fs
sbb
sbb
cmc
pop
add
fstp
mov
ret
cmpsb
and
sub
cld
divb
mov
and
je
js
faddl
add
ret
sbb
jns
mov
adc
pop
jg
repz
add
addl
adc
pushf
cld
lahf
sbb
sub
dec
cmpsb
jle
pop
scas
leave
fdiv
pop
stc
mulb
xchg
rolb
dec
icebp
or
pop
adc
mov
imul
cmp
dec
dec
fistpl
jbe
cmpsl
shrl
jbe
adc
add
cmp
pop
add
mov
and
cmp
push
xchg
add
and
adc
enter
pop
xchg
aad
dec
dec
ret
xor
fidivrl
lret
fcoml
ljmp
and
cld
testb
negb
jg
repz
add
out
mov
imulb
cli
pusha
push
js
adc
xor
out
fists
fiaddl
loope
mov
in
xor
repz
add
sbb
add
lea
mulb
push
enter
cld
neg
jbe
adc
in
sub
inc
push
aaa
and
push
cs
xor
dec
adcl
add
add
out
repz
dec
add
imulb
mov
repnz
add
cmc
imul
add
inc
clc
jb
pushf
cld
notb
add
ret
sbb
out
and
shll
ror
cmp
clc
dec
xchg
repnz
popa
fsubrs
les
mov
xor
jecxz
pmaxsw
scas
jns
xchg
xchg
jne
or
cld
jae
sbb
jmp
pop
enter
jns
mov
cmp
ret
sbb
packuswb
add
sbb
repnz
xor
cmc
pop
xchg
sbb
fsubrl
stc
idivb
sti
add
jmp
jne
add
negb
xchg
std
adc
add
fucom
loopne
mulb
xor
stos
repz
add
pop
movsl
cld
mulb
xor
jl
stos
fxch
jnp
in
cmp
add
mov
sub
cmp
jbe
enter
sti
add
add
xchg
add
push
outsl
xor
das
xchg
pop
sub
sub
stc
negb
stc
inc
fnstsw
pop
stc
neg
jbe
adc
js
pop
cwtl
push
push
jecxz
mov
add
mov
repnz
dec
xchg
mov
fs
adc
jbe
cld
imulb
mov
ret
test
pop
fcoml
fstps
outsb
or
gs
mov
or
adc
in
imul
negb
jns
insl
xchg
add
clc
jne
adc
add
mov
cli
push
dec
add
negb
icebp
inc
dec
jns
int
je
add
mov
adc
jmp
and
jno
jno
sbb
fisttps
iret
negb
js
fdivrp
xlat
cld
negb
sbb
sbb
cld
negb
xchg
aad
xchg
cmpsl
or
cmp
clc
in
pop
cmc
pop
add
fisttpll
jle
imulb
hlt
cld
imulb
add
mov
inc
xchg
imul
int
sub
xor
and
addr16
add
cmc
push
stos
jns
mov
fildl
push
ds
dec
mov
push
sarl
or
dec
inc
pop
negb
ja
adc
add
sbb
iret
leave
dec
and
mov
lods
jge
cmpsl
leave
inc
cs
sbb
dec
cmp
pop
jg
clc
adc
lds
std
adc
enter
sbb
mov
jl
mov
cld
add
and
adc
add
cld
sbb
dec
stc
cmc
pop
inc
sub
icebp
sar
dec
gs
adc
jns
pop
jns
pop
sub
icebp
cmc
inc
adcb
sub
icebp
lahf
add
jnp
mov
add
sub
jmp
adc
das
mov
or
inc
cmp
mov
adc
cmc
pop
or
xchg
xchg
shrl
adc
shl
test
ret
fnsave
sbb
mov
add
sbb
push
and
lcall
or
loop
test
negb
mov
lcall
es
negb
xchg
sbb
sbb
mov
test
and
jno
sbb
out
mov
cmp
cld
cmp
jno
push
lea
pusha
movhps
scas
xchg
sub
cld
jge
jecxz
cmp
add
push
mov
adc
pop
add
out
sub
mov
jg
fsubl
mov
idivb
push
dec
fdecstp
pop
add
scas
push
xchg
dec
jg
negb
mov
push
and
lds
scas
push
add
js
ret
or
les
sub
add
fmul
mov
adc
inc
add
negb
xchg
in
adc
cmp
pop
dec
aad
negb
jns
repz
add
fucom
fwait
cld
mulb
fdivrs
daa
mov
outsl
sub
sub
sub
les
shl
pop
mov
mov
cld
dec
xchg
jecxz
xchg
add
pop
std
push
push
jae
adc
mov
cld
ja
add
and
mov
mov
add
sbb
adc
leave
movsb
adc
into
cld
lahf
mov
add
bound
add
jnp
cld
negb
mov
imull
rcl
ss
aad
xchg
insl
jp
sbb
adc
pushf
cld
jne
insb
repnz
sbb
mov
in
and
adc
and
lods
fsubl
stc
notb
ds
add
fimuls
add
lahf
mov
xor
repnz
repnz
add
jne
add
negb
xor
push
and
lahf
sbb
std
adc
push
xchg
fmulp
cld
jge
jecxz
fidivrl
cli
and
mov
and
mov
ljmp
mov
pop
sbb
push
test
add
add
negb
xor
pop
add
pop
add
jne
shll
inc
mov
lds
cld
testb
negb
inc
sbb
jecxz
jle
clc
ds
add
cli
add
push
fsub
ss
aad
and
hlt
bound
xor
add
mov
fbstp
dec
mov
cli
jo
cld
popa
xchg
jns
inc
add
adc
push
xchg
lcall
add
mov
cld
add
sbb
add
addr16
cld
fs
xchg
std
bnd
sbb
sti
cmp
nop
sub
pop
test
sub
daa
ret
sbb
int3
jl
mov
imul
and
repnz
push
xchg
negb
cwtl
shll
and
adc
dec
les
negb
jns
mov
in
es
jbe
adc
shl
pop
mov
shl
faddp
lcall
xor
jg
repnz
xor
mov
jns
sbb
mov
negb
mov
aas
adc
stc
andl
in
sbb
fcoms
dec
sub
add
or
mov
jg
repnz
iret
sub
inc
icebp
push
movsb
fidivrl
push
mov
leave
mov
sarb
cmp
add
les
and
dec
adc
push
cld
negb
cwtl
leave
int
add
sbb
add
add
clc
xchg
adc
and
jno
sbb
data16
cli
lods
dec
cmp
jnp
pop
cmpsl
jnp
mov
add
sub
jno
enter
pop
xor
cltd
and
jns
lret
sarb
pop
mov
mov
aad
testb
aas
sub
sbb
adc
pop
add
imul
negl
test
jge
push
stc
in
jle
clc
jno
sbb
add
negb
xor
and
jae
sbb
adc
jge
in
shll
sbb
das
mov
sub
cld
sbb
and
jns
xor
xor
mov
in
cmp
push
shlb
stos
les
xor
mov
fbld
mov
xchg
jp
out
iret
jne
mov
mov
test
shll
aad
lds
scas
mov
dec
es
lcall
xor
and
jae
sbb
pop
clc
pop
add
mov
add
mov
js
pushf
scas
and
mov
sub
cmpsl
negb
scas
pop
testl
jno
dec
in
insb
negb
jns
repz
add
jge
jecxz
and
add
jge
in
sbb
test
je
pop
mov
fstpl
jle
repnz
push
xor
cmc
pop
stc
nop
adc
lods
sub
or
adc
mov
mov
jns
mov
cmc
push
negb
jns
repnz
add
jne
add
negb
scas
adc
push
or
cmc
movsl
stc
pop
sbb
lds
addr16
pop
test
fidivrl
das
aas
repz
push
test
and
jmp
repz
add
and
jbe
adc
adc
jge
in
repnz
negb
rol
lahf
mov
inc
jne
lea
add
mov
push
or
das
sbb
ret
je
cmp
jnp
mov
add
dec
mov
dec
jmp
fldl
scas
cld
idivb
sub
and
adc
int3
jecxz
fsubs
add
mulb
stc
stc
andb
adc
cld
sbb
sbb
imul
pop
xchg
cmc
adc
xor
or
add
sub
ja
sub
push
add
mulb
mov
jae
aam
negb
js
push
dec
fs
negb
xchg
sbb
adc
adc
cld
jne
pop
sbb
sub
add
je
mov
adc
adc
stc
notb
adc
insb
dec
mov
sub
or
jne
push
stos
stos
aad
xor
push
stos
stos
aad
lahf
sub
push
les
add
lds
pop
cld
sbb
pop
aad
in
inc
mov
imul
dec
lahf
int3
jecxz
mov
jle
repz
add
into
aam
daa
xor
fidivrl
add
cmpsl
add
lahf
sbb
adc
mov
cld
jne
addb
and
and
mov
nop
inc
ffree
add
mulb
scas
jns
lds
hlt
cld
cmpsb
jmp
sbb
fcoms
dec
mov
adc
jecxz
pop
jns
in
inc
loopne
dec
lods
lret
ret
test
add
repz
mov
loopne
fsubr
add
jp
and
dec
adc
nop
scas
cmc
pop
xor
adcb
mov
jecxz
pop
xchg
in
xchg
add
negb
jns
add
jnp
jbe
imul
fisubrs
stc
mulb
in
adc
dec
or
cld
out
jne,pt
or
cld
out
jns
fiadds
lcall
mov
jns
jl
push
pop
and
adc
or
cld
fs
add
negb
stc
or
push
roll
fucomp
out
cld
imulb
add
push
jb
jo
dec
jl
negb
or
adc
add
daa
pushf
cld
notb
in
add
stc
fs
idivb
jno
mov
add
cli
mov
cld
push
loop
stos
dec
nop
adc
mov
test
cld
cmc
push
stos
jmp
sbb
rclb
adc
add
cmpsl
push
sub
add
and
in
jl
cmpb
pop
add
jne
add
negb
xchg
add
mov
jns
sub
mov
enter
lods
dec
xchg
cmp
jb
mov
andb
jns
cltd
sbb
ret
xor
stos
sub
stc
neg
or
fstl
sub
ljmp
pushf
movsb
sarl
pop
mov
adc
dec
or
jmp
xor
lods
push
fstps
cmpsb
int3
jns
jns
cmp
add
negb
xchg
sbb
dec
mov
insb
stc
mulb
icebp
fstpl
sub
xchg
cli
loopne
xor
fistl
jb
test
nop
dec
jge
movsl
mov
outsb
ja
js
pop
add
in
jnp
int
jbe
jno
mov
add
mov
fildl
push
out
negb
jns
jbe
mov
jno
dec
xor
js
push
jnp
cmp
push
fistpll
dec
mov
test
mov
push
cmp
add
cmpb
xchg
fidivrl
cmpsb
and
jnp
mov
nop
cmc
adc
sub
pop
xchg
in
adc
xor
frstor
xor
sub
add
jb
jecxz
adc
jno
sbb
popf
jns
add
jmp
adc
orb
sbb
icebp
add
pop
aad
adc
shll
and
jns
mov
xor
cmpsl
and
jae
sbb
mov
int3
test
sbb
ret
movsb
lea
mov
inc
imull
cmp
sbb
xchg
dec
mov
mov
jns
cld
jne
add
negb
jns
dec
jnp
ret
in
cld
mulb
xor
jle
fildl
ja
add
mov
lds
aad
adc
and
jmp
sbb
lock
hlt
add
sbb
negb
add
mov
stos
jecxz
inc
clc
push
inc
stos
jns
sub
ret
arpl
adc
orl
pop
mov
negb
jno,pt
cld
addr16
adc
and
fcoml
mulb
cmp
je
jmp
adc
das
and
cld
mulb
aaa
adc
cmpsb
cld
mov
add
jl
cld
dec
fidivs
adc
cli
push
mov
and
pop
or
jae
roll
jl
leave
mov
sub
fmull
cld
negb
mov
imul
sub
scas
add
test
mov
adc
rorb
and
scas
insl
dec
mov
negb
or
adc
add
insl
cltd
cld
idivb
pop
lahf
sbb
testb
ret
data16
into
hlt
mov
cmpsb
xchg
cld
mulb
ficoms
ror
jnp
gs
mov
and
jno
sbb
ret
add
mov
add
jae
cld
xor
std
test
xchg
mov
cld
jge
jecxz
push
mov
arpl
sbb
sbb
mov
inc
add
negl
add
mov
xor
and
jns
sbb
dec
sbb
stos
adc
cld
cmc
pusha
jbe
adc
jns
pop
ja
adc
and
mov
push
stc
notb
pop
fstpt
fstl
popf
cld
imulb
jecxz
outsb
mov
add
pushf
jno
idivb
aaa
fstl
cld
mulb
sub
sar
mulb
sub
sub
jmp
adc
add
adc
test
cmc
pop
add
cmc
addr16
loope
cld
dec
and
cld
testb
negb
xchg
std
adc
add
dec
mov
out
jns
test
mov
mov
dec
jo
negb
cmpsl
mov
push
mov
sbb
dec
inc
xor
ja
adc
xchg
stc
divb
jae
adc
pop
add
fnstsw
or
fsubrl
cmp
mov
add
sbb
cmp
js
cmp
mov
sub
mov
ljmp
adcl
flds
repz
push
ret
fstl
test
mov
fidivrs
mov
dec
shlb
mov
insl
mov
scas
jns
mov
jmp
adc
pop
mull
sub
adc
dec
add
negl
jns
in
push
jmp
push
jbe
and
stc
jo
cmp
jae
sbb
pop
repnz
add
jae
jecxz
push
stos
sti
add
cmpsl
lods
fadd
sahf
cld
notb
add
xor
and
jno
sbb
sbb
idivb
cmp
pop
add
jne
add
negb
iret
lock
hlt
add
int3
jecxz
je
add
negb
xchg
add
negb
sbbb
sub
les
dec
stc
notb
add
sahf
out
cld
divb
add
push
rorb
push
or
je
sbb
jno
mov
add
mov
add
lret
call
arpl
call
mov
add
jnp
mov
jecxz
movsl
xor
loop
js
and
xchg
add
push
in
lea
inc
jp
inc
push
je
in
mov
je
in
ljmp
leave
fwait
xchg
jnp
dec
repnz
clc
xchg
mov
mov
xchg
mov
mov
jge
aam
sub
jb
sbb
ljmp
cmp
adcl
mov
stos
and
mov
mov
fs
psraw
pop
inc
xchg
add
int
xchg
inc
pop
movsb
xor
popl
mov
imul
ret
inc
xchg
mov
rol
loop
push
ljmp
lea
ljmp
mov
movsb
call
fisttps
in
and
mov
popa
xor
movsb
js
ljmp
int
pop
cmp
out
mov
out
stos
lds
pop
out
adc
xlat
mov
js
mov
in
and
daa
inc
add
inc
xchg
lret
movsb
repz
out
xchg
cmp
aaa
ret
cmp
inc
xchg
scas
push
dec
leave
lock
mov
mov
js
outsb
loopne
xchg
adc
push
inc
add
pop
test
add
add
add
stc
push
push
ljmp
mov
test
fcomps
ljmp
push
ljmp
in
add
adc
ljmp
and
add
add
xchg
lahf
add
addr16
popf
ljmp
add
add
add
add
out
add
ret
ljmp
lods
fwait
mov
sub
add
add
loope
ret
fsubrl
and
cs
add
add
ret
pop
test
add
adc
mov
imul
or
add
mov
clc
push
and
inc
cli
pop
clc
aam
hlt
push
cmp
es
sub
sub
in
shr
lods
pushf
add
pop
sub
add
add
gs
ljmp
and
mov
ljmp
add
add
add
add
xor
and
add
jecxz
add
add
pop
imul
inc
daa
sbbb
mov
lods
push
add
jno
dec
inc
xor
aaa
out
sub
jg
dec
ljmp
and
xor
add
in
add
add
mov
and
les
in
add
mov
sti
inc
add
push
ljmp
pusha
test
add
ljmp
add
adc
ljmp
xchg
pop
imul
sub
pusha
pop
jle
ljmp
ljmp
add
add
ljmp
and
add
mov
push
out
add
pop
ljmp
out
addr16
ljmp
mov
ret
push
ljmp
imul
dec
add
mov
and
add
add
mov
add
add
add
mov
add
add
jne
add
add
add
add
add
push
push
add
add
cs
call
add
xchg
add
mov
xor
add
mov
in
add
aam
push
add
add
add
add
and
add
out
pop
sub
push
fdivrl
movb
push
ljmp
pop
push
add
add
ljmp
and
pop
nop
add
push
ljmp
mov
ljmp
daa
arpl
adc
cs
and
outsb
push
or
clc
flds
pop
ljmp
sbb
jecxz
add
mov
shr
ljmp
push
dec
xor
dec
sub
add
add
leave
ljmp
add
mov
add
add
push
add
ljmp
and
add
sbbb
or
add
add
insl
jle
add
popl
and
add
sub
add
add
sarb
push
cs
ficoms
pop
jge
add
add
clc
loop
inc
pop
add
test
add
add
into
pop
push
mov
and
ljmp
and
add
push
ljmp
movd
pop
xor
cmpsl
test
shr
test
add
sub
pusha
ljmp
and
cmp
pop
testb
sub
add
mov
and
enter
add
mov
add
jae
add
lods
imul
adc
out
add
pop
sub
add
add
mov
add
add
or
pushf
add
add
pop
ljmp
mov
testl
sub
repz
mov
add
sub
dec
xor
dec
cmp
inc
cs
sahf
jo
mov
add
add
xor
add
jnp
add
mov
ljmp
or
mov
add
mov
mov
pop
ljmp
add
add
push
mov
and
enter
add
addr16
push
mov
sub
add
add
add
add
ljmp
and
add
dec
add
mov
add
pop
mov
add
add
add
pop
imul
cs
inc
dec
add
mov
ljmp
and
pop
and
add
add
inc
and
dec
add
add
adcl
add
mov
and
and
add
add
add
add
add
ljmp
and
imul
sub
add
add
rorl
add
sub
ljmp
ljmp
movsb
push
fwait
jns
add
fiadds
add
and
pop
test
add
lds
add
push
add
add
mov
and
mov
add
mov
add
push
ret
fsts
add
pop
mov
or
add
add
push
imul
mov
add
sub
add
add
cwtl
add
mov
and
add
mov
pop
imul
cmp
add
test
add
out
mov
and
test
add
mov
mov
push
ljmp
icebp
pop
ljmp
xor
or
negl
add
and
adc
add
pop
ljmp
and
add
add
sub
cmc
add
ljmp
ljmp
pop
sub
ljmp
pop
ljmp
sbb
xor
inc
scas
push
ljmp
and
inc
pop
ljmp
add
add
add
movb
rolb
sbb
lret
add
outsl
add
mov
add
sbb
ret
push
mov
sub
pop
inc
ret
push
ljmp
add
xor
mov
ljmp
int3
xor
lret
les
int3
mov
dec
or
mov
add
mov
add
inc
add
mov
add
add
add
add
add
sarb
add
add
mov
add
add
ljmp
stos
outsl
push
or
xor
pop
xor
xor
add
add
pop
ljmp
and
sbb
xor
and
add
mov
add
clc
fimuls
out
clc
xor
sub
sbb
mov
add
add
add
sahf
addr16
aam
and
add
xor
and
xchg
pop
imul
add
mov
push
mov
mov
pop
push
mov
add
jmp
not
shr
jmp
xor
or
add
jmp
pop
sub
add
add
pop
push
jmp
xor
pop
jmp
mov
add
add
push
push
mov
mov
sub
jmp
sub
pop
jmp
mov
jmp
sub
pop
dec
push
push
mov
mov
mov
add
add
pop
push
popl
mov
add
sub
jmp
not
dec
sub
mov
pop
or
jmp
add
not
xor
push
mov
add
pop
jmp
mov
push
mov
push
mov
add
jmp
pop
jmp
add
sub
xchg
jmp
add
push
mov
sub
mov
mov
sub
add
push
mov
jmp
pushl
mov
push
mov
jmp
pop
jmp
pop
pop
sub
mov
jmp
xchg
jmp
add
jmp
push
mov
mov
jmp
xor
jmp
sub
sub
add
push
jmp
neg
shr
or
jmp
pop
add
push
mov
add
pushl
pop
push
push
pop
add
add
xchg
pop
xchg
pop
jmp
popl
mov
imul
pushw
mov
push
pushf
jmp
add
add
pop
jmp
sub
jmp
mov
sub
mov
jmp
push
jmp
mov
jmp
mov
add
pop
add
mov
jmp
add
jmp
add
pushl
pop
add
add
xor
xor
jmp
pop
mov
mov
jmp
add
sub
add
jmp
pushl
pop
sub
mov
mov
add
push
mov
or
sub
add
pop
xchg
jmp
add
mov
push
sub
mov
addl
pushl
jmp
xor
sub
sub
add
jmp
movzbl
push
jmp
add
add
jmp
pushl
pop
sub
jmp
shr
push
mov
pushl
jmp
mov
jmp
sub
sub
not
xor
and
pop
add
jmp
add
xchg
mov
sarb
pushf
jmp
push
mov
add
pop
push
push
push
mov
mov
add
jmp
sub
jmp
push
mov
mov
sub
add
add
jmp
mov
shr
xor
sub
pop
sub
add
jmp
add
add
push
push
pop
add
push
mov
push
mov
mov
jmp
mov
jmp
mov
inc
xor
jmp
pop
push
mov
jmp
sub
push
mov
jmp
mov
pushw
mov
jmp
push
mov
jmp
add
mov
push
mov
add
add
xchg
pop
push
mov
add
jmp
mov
mov
add
jmp
add
sub
push
push
push
jmp
pop
jmp
inc
and
inc
jmp
mov
push
mov
add
jmp
push
mov
mov
pop
pushl
mov
add
jmp
sub
sub
add
add
jmp
and
mov
add
push
mov
or
pop
sub
add
mov
add
add
jmp
push
mov
or
jmp
mov
and
push
mov
xor
jmp
not
shr
neg
jmp
sub
pop
xchg
mov
mov
jmp
xor
add
jmp
push
mov
jmp
mov
add
push
mov
add
add
pop
sub
add
push
mov
jmp
pop
jmp
mov
mov
add
add
add
sub
pop
push
sub
jmp
mov
add
add
add
xchg
pop
pushl
pushl
jmp
popl
push
mov
jmp
xchg
pop
cmp
pushf
jmp
pushl
jmp
pop
push
jmp
add
neg
push
mov
add
add
sub
sub
pop
and
sub
mov
negl
pop
jmp
add
xor
xor
xor
pop
jmp
push
jmp
push
mov
shr
xor
add
mov
add
push
mov
add
sub
jmp
sub
add
add
jmp
pushl
pop
add
xor
jmp
mov
mov
shr
jmp
mov
pop
jmp
mov
push
mov
addl
jmp
negb
pushf
jmp
shr
jmp
xor
xor
xor
pop
pushl
pushl
pop
add
sub
mov
jmp
add
add
or
pop
jmp
xor
jmp
push
mov
push
push
pop
shr
sub
sub
mov
subl
mov
jmp
sub
push
mov
sub
pop
sub
pop
sub
sub
push
jmp
push
mov
add
sub
xchg
pop
mov
mov
push
push
pop
jmp
mov
add
jmp
pop
xor
jmp
pop
add
push
mov
jmp
push
mov
not
or
pushw
sub
mov
add
dec
xor
jmp
push
sub
mov
addl
pop
add
push
mov
jmp
push
pushw
mov
add
popw
jmp
push
pop
jmp
jmp
pushl
popf
pop
sbb
pushf
jmp
lea
push
mov
jmp
shr
sub
add
push
mov
add
jmp
mov
push
mov
sub
jmp
xchg
jmp
pop
pushl
jmp
push
pop
add
jmp
shr
shl
xor
add
pop
add
xchg
pop
jmp
mov
add
sub
xchg
jmp
xchg
pop
mov
push
mov
mov
pop
xor
pop
push
mov
jmp
mov
push
mov
push
jmp
push
mov
shr
shl
shl
sub
xor
pop
xor
pop
add
add
push
mov
neg
shr
jmp
add
add
sub
pop
push
mov
sub
pop
xor
xor
xor
pop
jmp
add
jmp
mov
jmp
add
shr
shr
jmp
add
dec
shr
push
jmp
or
sub
xor
mov
add
jmp
xor
pop
sub
mov
push
mov
jmp
mov
jmp
sub
add
jmp
push
mov
add
and
and
jmp
xor
pop
add
pop
jmp
mov
pop
push
mov
add
pop
add
sub
mov
jmp
mov
add
push
mov
sub
mov
mov
sub
add
add
sub
push
jmp
push
mov
xchg
not
xchg
jmp
mov
push
push
mov
push
jmp
not
xor
push
mov
push
addl
mov
add
jmp
push
push
mov
mov
pop
inc
add
add
pop
jmp
xchg
pop
jmp
pop
shr
jmp
dec
xor
add
jmp
pushl
pop
add
add
add
jmp
mov
push
jmp
push
mov
and
jmp
inc
jmp
shr
jmp
add
add
jmp
push
mov
push
mov
jmp
add
add
xchg
jmp
pushl
pop
jmp
sub
xchg
pop
push
push
popl
jmp
jmp
pop
or
jne
sub
jmp
dec
shr
not
jmp
add
jmp
pop
add
mov
add
push
jmp
mov
add
push
jmp
pop
push
push
jmp
xor
push
mov
xor
jmp
shr
xor
not
jmp
add
add
add
jmp
sub
jmp
add
add
jmp
add
sub
mov
mov
sub
pop
jmp
sub
pop
sub
mov
mov
or
jmp
mov
mov
pop
xor
pop
add
add
jmp
mov
mov
add
add
xchg
pop
push
mov
jmp
mov
add
jmp
mov
mov
sub
add
push
xorl
pop
xor
pop
mov
mov
add
sub
pushl
mov
add
push
jmp
sub
add
pop
add
add
pop
add
jmp
pop
push
jmp
and
jmp
pop
mov
jmp
xor
pop
mov
pop
jmp
add
pop
and
mov
push
jmp
add
jmp
mov
pushl
pop
push
mov
add
add
xchg
pop
push
pop
mov
push
jmp
add
pop
sub
sub
pop
push
mov
add
pop
push
mov
shr
and
shl
jmp
mov
add
jmp
mov
mov
add
add
pop
xor
jmp
or
neg
inc
push
push
mov
sub
jmp
sub
or
mov
jmp
push
mov
jmp
add
pop
add
sub
pushl
pop
add
sub
sub
jmp
sub
movzbl
jmp
mov
mov
push
mov
mov
add
mov
add
xor
pushl
pop
push
jmp
not
xchg
xchg
jmp
sub
xor
add
pop
sub
xchg
pop
mov
push
pop
add
push
jmp
mov
mov
xor
pop
xor
sub
pop
add
push
mov
not
mov
mov
add
or
add
sub
and
pop
push
mov
not
jmp
push
mov
add
push
mov
add
pop
jmp
and
sub
and
pop
shl
xor
jmp
lods
jmp
pop
or
push
notl
pop
xor
add
pop
sub
jmp
add
pop
xchg
mov
sub
mov
sub
mov
jmp
sub
jmp
and
xor
jmp
mov
add
add
xchg
jmp
shl
xor
xor
push
jmp
add
add
xchg
pop
sub
add
add
push
mov
and
jmp
pop
jmp
sub
add
add
add
mov
push
mov
add
add
xchg
pop
dec
neg
not
inc
push
mov
not
inc
jmp
popl
push
mov
push
push
mov
jmp
push
jmp
push
mov
push
jmp
pop
push
mov
shl
jmp
pushl
mov
push
mov
mov
jmp
mov
xor
jmp
neg
shl
push
mov
push
mov
add
mov
jmp
shl
shl
jmp
mov
or
jne
push
push
mov
jmp
add
pop
jmp
pop
xor
mov
push
mov
add
push
jmp
mov
jmp
push
mov
add
add
xchg
jmp
add
jmp
div
push
jmp
push
pushl
mov
push
mov
add
jmp
mov
mov
add
push
mov
sub
xchg
pop
add
not
push
mov
push
mov
jmp
xor
pop
add
pop
push
jmp
push
mov
add
add
xchg
pop
pushl
pop
push
mov
add
jmp
shl
add
sub
add
sub
pop
pushl
jmp
push
jmp
mov
mov
add
sub
pop
and
pushl
pop
push
push
jmp
pop
pop
push
mov
sub
add
jmp
add
pop
jmp
pop
jmp
mov
jmp
pushl
popf
pop
adc
pushf
jmp
pushl
popf
pop
rcrl
pushf
jmp
sub
mov
add
jmp
mov
jmp
mov
pop
mov
push
jmp
shr
shr
inc
dec
sub
jmp
mov
push
mov
mov
sub
pop
add
push
mov
push
mov
jmp
shr
xor
and
mov
jmp
push
mov
neg
push
mov
jmp
xchg
pop
mov
mov
jmp
push
pushl
pop
popl
pop
jmp
push
mov
add
jmp
pop
jmp
lods
push
jmp
pop
inc
push
jmp
pop
sub
xchg
pop
mov
push
pop
add
sub
xchg
jmp
add
jmp
mov
push
mov
add
pop
add
push
pushl
jmp
mov
xor
pop
sub
pop
pushl
mov
add
pop
jmp
push
push
mov
mov
pop
and
pop
sub
sub
jmp
add
jmp
pop
jmp
pop
xor
xor
xor
pop
pushl
jmp
mov
shl
sub
jmp
push
mov
jmp
mov
add
add
jmp
push
sub
mov
addl
mov
add
sub
mov
push
mov
sub
xor
shl
neg
xor
mov
pop
add
pop
push
mov
add
pop
xchg
mov
push
mov
jmp
sub
mov
mov
push
push
push
mov
or
sub
mov
pop
shl
shr
add
jmp
mov
push
push
pushl
mov
push
mov
jmp
push
mov
mov
pop
jmp
push
mov
shr
not
jmp
pop
add
xchg
pop
sub
mov
push
mov
mov
xor
mov
push
mov
jmp
or
add
sub
add
jmp
push
popl
pop
popa
popf
ret
jmp
add
xchg
pop
jmp
add
jmp
add
sub
add
add
push
mov
jmp
mov
shl
shl
push
mov
add
pop
add
xor
jmp
push
mov
sub
jmp
mov
xor
pop
push
mov
and
or
sub
add
pop
add
sub
pop
jmp
sub
sub
sub
mov
mov
jmp
mov
mov
push
jmp
mov
push
sub
mov
addl
jmp
add
sub
push
mov
push
mov
shr
inc
add
add
shr
add
mov
mov
add
push
mov
sub
pop
push
mov
push
mov
xor
shr
jmp
add
jmp
mov
mov
jmp
push
jmp
pop
jmp
push
push
mov
jmp
mov
add
jmp
mov
not
jmp
pop
or
pushf
jmp
pop
popl
mov
shrb
pushf
jmp
mov
push
mov
jmp
and
pushl
pushl
pop
jmp
sub
jmp
pushl
mov
add
push
push
jmp
add
xor
xor
xor
pop
movzbw
pushw
mov
jmp
pop
sub
xchg
pop
mov
movzbw
jmp
sub
add
pop
mov
pop
negl
jmp
pushl
pop
popl
mov
or
je
pushl
subl
jmp
mov
jmp
lods
add
add
push
mov
push
mov
inc
and
shr
add
add
pop
push
mov
or
jmp
add
push
mov
add
neg
sub
sub
pop
push
mov
push
pop
jmp
add
add
pop
mov
jmp
mov
not
inc
jmp
sub
mov
jmp
add
jmp
dec
xor
sub
jmp
add
pushl
pop
jmp
pop
jmp
popl
mov
test
pushf
jmp
xchg
pop
pushl
mov
push
mov
add
jmp
pop
add
jmp
mov
sub
mov
mov
add
push
mov
push
mov
jmp
shr
jmp
add
push
jmp
add
sub
pop
xor
xor
jmp
xchg
pop
push
mov
sub
mov
mov
jmp
lods
jmp
mov
push
jmp
mov
add
jmp
mov
sub
pop
sub
subl
add
jmp
push
mov
push
mov
add
and
pushl
jmp
pushl
jmp
pop
add
push
mov
add
pushl
jmp
push
mov
add
add
sub
pop
sub
push
pushl
pop
popl
pop
jmp
add
add
push
mov
mov
add
push
push
push
pop
jmp
push
mov
push
mov
xor
neg
neg
sub
shr
sub
jmp
add
jmp
pop
sub
sub
jmp
lods
xor
push
jmp
push
jmp
mov
push
mov
shr
and
xor
mov
pop
jmp
sub
mov
push
mov
and
xor
and
shl
or
jmp
push
mov
shr
shr
push
jmp
shll
jmp
push
push
mov
addl
mov
add
add
add
xchg
mov
jmp
pushl
jmp
pop
not
push
mov
push
mov
add
jmp
mov
jmp
mov
jmp
lods
jmp
pop
and
pushl
pop
push
jmp
sub
mov
push
jmp
mov
jmp
push
push
pop
add
push
mov
jmp
pop
neg
jmp
add
pop
jmp
sub
pop
push
mov
dec
inc
add
not
neg
add
add
pop
xchg
pop
xor
pushf
jmp
sub
mov
push
pop
push
mov
jmp
pop
mov
pop
add
pop
push
jmp
mov
add
shr
sub
jmp
mov
mov
add
sub
pop
pop
add
pushl
jmp
pop
jmp
mov
addl
pop
push
jmp
pop
add
jmp
push
push
mov
mov
pop
shr
add
jmp
lods
push
mov
sub
jmp
mov
push
mov
neg
and
or
sub
mov
pop
jmp
pop
mov
jmp
push
mov
sub
pop
push
jmp
add
pop
jmp
add
push
push
pop
sub
jmp
add
add
jmp
xor
jmp
add
add
xchg
pop
jmp
mov
jmp
xchg
pop
jmp
dec
add
jmp
pop
or
je
push
jmp
mov
push
mov
push
mov
sub
mov
pop
xor
jmp
lods
sub
jmp
add
pop
add
jmp
jmp
inc
push
mov
shr
jmp
mov
dec
add
inc
jmp
pop
sub
push
mov
inc
not
jmp
push
jmp
push
mov
or
shl
xor
and
not
sub
sub
pop
add
push
mov
neg
not
dec
sub
sub
add
add
pop
pushl
pop
push
mov
push
mov
neg
jmp
sub
pop
jmp
add
add
jmp
push
mov
jmp
pop
add
neg
shr
jmp
sub
sub
add
jmp
xor
add
pop
add
push
pushl
pop
popl
pop
push
mov
push
pop
add
add
sub
add
jmp
sub
xchg
pop
mov
mov
sub
mov
jmp
pop
xor
pop
inc
push
mov
sub
shr
shl
sub
jmp
mov
push
mov
push
pop
add
push
push
push
pop
not
jmp
mov
push
mov
add
add
push
pushl
pop
jmp
sub
push
popl
push
mov
subl
jmp
sub
mov
mov
add
pop
xor
jmp
bswap
jmp
sub
add
mov
jmp
mov
mov
push
mov
sub
jmp
pop
sub
pop
xor
jmp
mov
push
mov
add
sub
xchg
pop
mov
push
pop
add
jmp
add
add
sub
pop
push
jmp
push
sub
pop
not
sub
jmp
mov
mov
jmp
push
push
push
jmp
inc
or
shl
neg
xor
add
pop
xchg
jmp
push
mov
pushl
pop
popl
mov
mov
push
push
mov
addl
jmp
decb
pushl
pop
jmp
dec
and
dec
add
add
pop
sub
xchg
pop
mov
push
pop
add
jmp
mov
push
pop
pop
push
mov
mov
pop
jmp
sub
mov
push
jmp
mov
push
mov
push
mov
add
mov
pop
jmp
add
pop
xchg
pop
jmp
mov
mov
add
jmp
add
jmp
mov
sub
pop
sub
push
jmp
mov
pop
add
jmp
mov
sub
push
jmp
mov
push
jmp
pop
add
xchg
jmp
pop
rorw
pushf
jmp
push
mov
jmp
pushl
mov
add
push
mov
mov
add
jmp
pop
pop
or
jmp
add
jmp
mov
add
mov
add
add
push
jmp
xorl
mov
add
push
mov
jmp
push
push
pop
push
mov
jmp
mov
jmp
add
push
mov
addl
jmp
lods
push
push
push
mov
mov
xor
pop
mov
pop
and
jmp
mov
push
mov
neg
add
shr
inc
push
mov
neg
jmp
add
xchg
pop
jmp
sub
pushl
pushl
jmp
pop
add
add
xchg
pop
sub
push
mov
add
or
sub
sub
pop
movzbl
pushl
jmp
mov
sub
jmp
push
jmp
dec
xor
or
jmp
add
add
mov
add
add
xor
xor
xor
pop
mov
jmp
add
xchg
pop
jmp
xchg
pop
mov
push
mov
addl
jmp
mov
add
jmp
push
push
jmp
push
jmp
push
mov
jmp
mov
mov
jmp
xchg
pop
push
mov
sub
jmp
add
mov
pop
push
jmp
add
sub
jmp
pop
addl
jmp
push
mov
sub
pop
jmp
xchg
push
mov
notl
pop
push
mov
sub
mov
jmp
add
add
pop
xchg
jmp
pop
dec
shr
inc
shl
sub
xor
jmp
mov
add
pop
push
mov
pushl
pop
popl
mov
push
push
jmp
add
jmp
mov
push
push
mov
push
pop
xchg
jmp
mov
jmp
mov
jmp
sub
push
jmp
neg
neg
sub
add
pop
jmp
inc
jmp
mov
jmp
mov
push
mov
sub
mov
mov
and
jmp
mov
push
pushl
pop
jmp
push
mov
push
mov
push
mov
mov
sub
xchg
pop
push
mov
or
shr
push
mov
add
pop
push
jmp
add
xchg
pop
jmp
mov
push
mov
mov
push
push
jmp
push
mov
add
pop
sub
jmp
shr
inc
and
neg
add
mov
jmp
pop
push
mov
dec
add
xor
jmp
pop
jmp
push
mov
add
add
pop
xor
xor
jmp
mov
jmp
mov
mov
mov
add
push
jmp
sub
add
pop
add
sub
sub
add
pop
push
mov
sub
pushl
jmp
add
pop
jmp
sub
pop
xchg
mov
mov
mov
jmp
sub
mov
mov
shl
shl
not
jmp
mov
pop
sub
pop
jmp
jmp
shl
sub
and
jmp
add
push
mov
jmp
shr
push
mov
push
jmp
sub
mov
push
push
mov
mov
jmp
add
add
push
jmp
push
mov
push
jmp
add
push
mov
add
pop
xchg
pop
push
push
pop
add
add
jmp
mov
push
mov
jmp
add
xchg
jmp
pop
push
mov
add
add
xchg
jmp
and
jmp
jmp
push
pop
add
mov
pop
sub
pop
sub
pop
and
pop
jmp
pop
sub
add
jmp
add
sub
xor
xor
xor
pop
mov
mov
add
push
mov
shl
jmp
pop
mov
push
xorl
pushl
pushl
jmp
push
jmp
pushl
pushl
jmp
mov
add
pop
push
mov
add
pop
jmp
push
push
sub
mov
mov
push
jmp
pop
add
pop
jmp
push
mov
xor
pop
shl
inc
xor
xor
pop
jmp
xor
sub
pop
jmp
push
pop
jmp
mov
mov
xor
jmp
xor
pop
jmp
and
pushf
jmp
movzbw
jmp
mov
jmp
xor
sub
jmp
push
push
pop
push
mov
mov
add
jmp
mov
xor
add
jmp
add
xchg
pop
shr
or
je
sub
jmp
sub
sub
sub
add
push
push
mov
mov
pop
or
push
mov
mov
sub
add
push
mov
add
pop
sub
pop
push
mov
not
jmp
add
add
pop
jmp
sub
mov
pushl
mov
add
popl
jmp
pop
add
mov
add
xor
xor
xor
mov
jmp
mov
jmp
push
push
mov
push
mov
add
xor
xor
xor
push
notl
pop
xchg
push
decl
jmp
add
jmp
add
mov
push
mov
push
mov
add
pop
add
jmp
xor
pop
not
xor
push
jmp
mov
push
mov
add
add
jmp
mov
jmp
add
jmp
pop
or
shl
push
jmp
dec
shl
jmp
push
jmp
mov
sub
mov
push
mov
add
jmp
mov
add
add
xchg
jmp
mov
add
sub
mov
mov
jmp
pushl
pushl
jmp
push
push
jmp
push
push
mov
jmp
xor
jmp
pop
push
mov
add
sub
xchg
pop
jmp
add
sub
sub
mov
add
add
mov
pop
and
mov
push
mov
add
add
xchg
pop
jmp
mov
jmp
pushl
pushl
mov
add
jmp
or
je
pushl
jmp
pop
add
push
mov
push
mov
mov
jmp
jmp
neg
jmp
sub
pop
push
jmp
xor
mov
add
jmp
mov
push
mov
push
jmp
mov
mov
add
add
sub
pushl
pushl
jmp
lods
sub
jmp
dec
sub
jmp
mov
mov
add
mov
add
and
push
mov
add
sub
sub
pop
add
pop
add
xchg
mov
incw
pushf
jmp
push
jmp
sub
xchg
pop
xor
sub
mov
push
jmp
inc
add
sub
add
add
pop
xchg
mov
mov
sub
mov
sub
mov
addl
jmp
add
xor
xor
xor
jmp
xchg
pop
and
add
push
mov
jmp
push
mov
inc
jmp
mov
jmp
pop
sub
sub
add
add
push
mov
jmp
pop
jmp
push
mov
add
add
jmp
push
pop
pop
sub
mov
xor
xor
xor
sub
mov
xchg
not
xchg
mov
push
mov
jmp
mov
push
mov
add
jmp
inc
xor
add
add
sub
pop
jmp
sub
pop
xchg
mov
imul
push
pushf
jmp
pop
add
add
push
mov
sub
pop
add
mov
add
push
mov
add
add
sub
pop
jmp
push
push
jmp
mov
push
mov
jmp
push
mov
mov
add
sub
sub
pop
push
jmp
add
pop
jmp
mov
mov
add
add
add
push
mov
jmp
xchg
sub
add
pop
add
xchg
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
add
pop
mov
add
xor
pushl
jmp
add
sub
mov
pushl
pop
popl
mov
mov
jmp
xor
jmp
pop
xchg
mov
add
push
jmp
mov
sub
mov
pushl
pop
add
add
push
push
mov
mov
jmp
pushl
mov
add
push
mov
add
add
jmp
mov
dec
xor
add
pop
sub
xchg
pop
mov
push
mov
neg
push
push
mov
mov
xor
jmp
pop
add
pop
pushl
jmp
dec
neg
dec
jmp
add
popl
jmp
xor
pop
and
shl
push
jmp
add
jmp
pop
jmp
push
mov
push
jmp
mov
push
pushf
jmp
push
mov
mov
push
mov
jmp
push
mov
sub
pop
dec
add
jmp
add
add
add
sub
jmp
mov
add
add
sub
pop
jmp
add
pop
jmp
pop
popl
pop
push
mov
jmp
pop
jmp
push
mov
jmp
xchg
jmp
pushl
pop
add
sub
sub
mov
jmp
add
sub
push
pushl
pop
popl
pop
mov
push
jmp
add
push
mov
add
pop
push
pushl
pop
popl
pop
shr
jmp
mov
push
push
mov
jmp
sub
sub
add
add
pop
jmp
pushl
jmp
pop
sub
sub
pushl
pop
add
jmp
or
sub
jmp
push
jmp
sub
add
add
jmp
pushl
jmp
mov
push
jmp
not
jmp
mov
add
xchg
jmp
add
add
mov
add
add
sub
jmp
sub
mov
mov
dec
sub
mov
mov
sub
jmp
mov
add
add
xchg
pop
push
jmp
mov
add
add
jmp
pop
push
mov
sub
jmp
mov
jmp
mov
not
mov
mov
add
and
xchg
sub
xchg
push
mov
xchg
not
xchg
pop
sub
xor
pushl
pop
add
push
mov
xor
or
jmp
pop
xchg
mov
add
pushf
jmp
xor
add
jmp
push
mov
jmp
push
jmp
mov
push
mov
push
mov
push
push
push
pop
mov
add
add
sub
pop
add
mov
add
mov
add
add
jmp
add
xchg
jmp
add
sub
mov
push
mov
add
sub
jmp
add
push
mov
add
pop
xchg
pop
movzbl
jmp
push
mov
mov
add
pop
xor
pop
push
mov
jmp
mov
mov
pop
sub
pop
jmp
add
jmp
sub
add
jmp
mov
add
push
push
jmp
add
sub
mov
add
jmp
pushl
jmp
add
xchg
pop
jmp
push
mov
mov
add
pop
xchg
pop
sub
jmp
pop
popl
jmp
pushl
mov
jmp
sub
jmp
pushl
pop
popl
mov
mov
push
pushf
jmp
push
mov
mov
subl
addl
add
subl
addl
pop
pushl
pop
push
mov
jmp
push
mov
add
add
add
pop
jmp
pop
sub
jmp
add
mov
jmp
mov
push
jmp
mov
jmp
mov
mov
jmp
popl
pop
jmp
push
mov
push
mov
add
sub
xchg
jmp
add
pop
push
mov
sub
jmp
add
jmp
pushl
jmp
or
neg
jmp
push
mov
jmp
mov
mov
jmp
xchg
pop
jmp
or
xor
sub
jmp
pop
pushw
mov
jmp
mov
incb
pushf
jmp
mov
jmp
mov
add
pop
add
xchg
pop
ret
jmp
pushl
pop
sub
jmp
xor
xor
jmp
sub
sub
mov
jmp
pop
mov
pop
shl
and
sub
add
add
pop
add
xchg
mov
btr
pushf
jmp
pop
push
mov
and
shl
shr
pushw
mov
mov
and
pop
add
jmp
mov
jmp
push
mov
jmp
add
pop
xchg
mov
push
mov
push
push
pop
jmp
xchg
mov
jmp
sub
jmp
dec
sub
sub
xor
pop
and
push
mov
xor
mov
push
jmp
add
mov
pushl
pop
add
jmp
add
pop
push
push
mov
jmp
not
neg
xor
add
mov
jmp
push
mov
mov
pop
pushl
pop
sub
jmp
sub
mov
add
add
pop
push
mov
mov
jmp
xor
mov
jmp
mov
mov
push
mov
add
jmp
add
pushl
mov
add
add
push
mov
jmp
sub
pop
jmp
mov
sub
mov
push
pop
push
mov
mov
jmp
pushl
pop
popl
pop
jmp
mov
add
jmp
push
mov
add
jmp
dec
xor
xor
mov
mov
add
sub
jmp
pop
add
jmp
pop
mov
mov
add
sub
pop
sub
jmp
sub
jmp
mov
pop
mov
pop
jmp
pushw
pushw
mov
jmp
add
mov
pop
inc
shl
sub
shr
xor
jmp
push
mov
push
mov
inc
jmp
sub
xor
sub
pop
pop
xchg
mov
add
pushf
jmp
add
jmp
push
pop
push
mov
mov
jmp
xchg
pop
push
mov
jmp
shr
jmp
add
or
add
add
mov
jmp
shr
jmp
pop
push
jmp
xor
mov
add
add
mov
push
jmp
mov
jmp
pushl
pushl
pop
jmp
mov
add
add
jmp
push
push
jmp
mov
jmp
mov
mov
jmp
mov
xor
jmp
mov
addl
mov
jmp
pop
mul
movzbw
pushw
mov
jmp
add
addl
mov
add
jmp
shr
jmp
xchg
mov
push
mov
push
mov
push
mov
xor
pop
and
or
xor
mov
mov
push
jmp
push
mov
jmp
lods
xor
push
mov
xor
pushl
pop
push
mov
push
jmp
xor
jmp
sub
xchg
pop
jmp
add
add
xchg
pop
add
jmp
add
add
push
mov
jmp
xor
add
jmp
jmp
xor
push
jmp
xor
pushl
pop
add
jmp
sub
jmp
or
je
pushl
jmp
mov
push
mov
push
mov
addl
jmp
mov
push
mov
push
mov
add
add
push
mov
push
push
mov
push
mov
mov
pop
jmp
xor
add
pop
xchg
jmp
add
or
je
sub
mov
push
mov
mov
jmp
pop
mov
mov
push
mov
add
jmp
pop
shr
jmp
sub
pop
add
pushl
subl
pop
push
push
mov
mov
sub
pop
neg
jmp
shl
shr
push
jmp
shl
neg
push
jmp
push
jmp
pop
sub
push
pushl
pop
popl
jmp
pop
mov
push
push
popl
addl
pop
add
jmp
mov
jmp
pop
push
mov
sub
mov
addl
pop
sub
mov
mov
add
pop
jmp
sub
jmp
mov
mov
sub
pop
jmp
push
mov
jmp
add
jmp
push
jmp
mov
jmp
push
mov
not
dec
sub
xor
jmp
push
addl
pop
push
jmp
mov
add
add
jmp
sub
sub
pop
dec
or
shl
push
mov
xor
pop
add
jmp
mov
add
push
mov
pushl
jmp
add
shl
jmp
pop
sub
mov
push
jmp
add
pop
push
mov
jmp
mov
jmp
shl
sub
mov
pop
sub
mov
push
jmp
add
pop
sub
mov
jmp
push
pop
add
add
jmp
pop
jmp
pop
jmp
sub
jmp
pop
push
mov
jmp
add
add
sub
sub
mov
sub
mov
jmp
add
add
xor
xor
xor
pop
add
xchg
jmp
pop
pop
add
pop
xchg
pop
movsbw
sub
mov
jmp
pop
sub
mov
add
push
mov
push
mov
mov
pop
sub
mov
mov
xor
push
mov
sub
pop
add
jmp
add
popl
jmp
dec
jmp
add
add
jmp
pushl
popf
pop
adc
pushf
jmp
push
jmp
add
jmp
mov
add
add
xchg
pop
and
jmp
add
pop
pop
sub
jmp
xor
neg
inc
push
jmp
pop
pop
push
mov
shr
jmp
mov
pop
not
xor
jmp
add
jmp
mov
add
sub
jmp
push
mov
or
dec
add
or
pushl
pop
add
inc
jmp
push
jmp
neg
shr
neg
shr
jmp
mov
mov
pop
jmp
notl
pop
inc
jmp
notl
pop
jmp
pop
push
jmp
add
pop
xor
xor
xor
pop
decw
pushf
jmp
xor
jmp
sub
pop
mov
add
sub
add
jmp
pop
xor
jmp
shr
or
or
jmp
pop
add
push
push
jmp
shl
jmp
mov
add
push
push
mov
mov
pop
jmp
push
push
mov
add
push
mov
shr
and
dec
and
jmp
add
xchg
pop
push
mov
add
jmp
mov
push
mov
inc
xor
not
shr
add
add
add
sub
jmp
push
mov
add
add
xchg
pop
jmp
add
add
sub
jmp
push
mov
push
mov
add
pop
sub
jmp
add
pop
push
mov
pushl
jmp
sub
jmp
sub
mov
push
jmp
mov
push
pushf
jmp
mov
pop
pop
mov
add
mov
push
mov
mov
push
mov
inc
not
add
add
pop
add
xchg
pop
jmp
xchg
mov
mov
push
pop
add
push
push
mov
dec
jmp
xchg
mov
mov
jmp
mov
add
jmp
mov
add
sub
sub
jmp
add
jmp
pushl
pop
push
push
mov
push
jmp
xor
jmp
pushl
pushl
jmp
xor
jmp
inc
jmp
sub
mov
mov
sub
add
add
add
sub
jmp
jmp
mov
push
jmp
mov
shr
jmp
pushl
pop
jmp
add
popl
mov
jmp
xor
jmp
sub
mov
jmp
xor
add
jmp
addl
pop
add
sub
xor
xor
xor
mov
jmp
mov
jmp
pop
xchg
pop
mov
mov
sub
mov
mov
add
pop
sub
jmp
push
mov
sub
jmp
add
push
mov
and
neg
jmp
pop
or
sub
push
mov
jmp
xor
shr
neg
inc
xor
add
pop
push
push
jmp
push
mov
push
mov
xor
add
mov
jmp
sub
pop
mov
pop
jmp
add
push
pushl
pop
popl
mov
xchg
jmp
add
add
sub
pop
push
jmp
pop
or
jmp
popl
mov
sub
mov
mov
sub
jmp
pop
add
push
push
push
pop
xor
jmp
xchg
pop
push
mov
push
mov
xor
pop
push
push
push
mov
mov
add
pop
xor
inc
not
shr
jmp
mov
mov
sub
mov
jmp
push
pushl
jmp
mov
jmp
mov
sub
push
mov
neg
xor
not
jmp
xor
add
pop
xchg
mov
or
jmp
and
pushl
mov
jmp
and
pop
jmp
sub
add
jmp
mov
push
jmp
sub
add
pop
push
pushl
pop
popl
jmp
mov
sub
mov
mov
push
mov
dec
xor
sub
pop
sub
mov
pop
sub
pop
sub
add
jmp
push
mov
or
pop
or
add
add
mov
push
mov
add
add
xchg
pop
jmp
pop
jmp
neg
push
mov
xor
pop
jmp
lods
sub
sub
push
mov
mov
jmp
push
jmp
mov
jmp
mov
jmp
pop
add
add
push
jmp
add
add
xor
pop
xor
push
jmp
mov
add
add
xor
jmp
mov
add
shl
add
xor
jmp
xor
neg
neg
sub
sub
jmp
add
sub
jmp
sub
add
mov
add
sub
jmp
shl
push
mov
sub
pop
jmp
xchg
pop
sub
push
mov
jmp
mov
push
mov
add
xor
add
pop
push
mov
and
jmp
pop
push
jmp
pop
push
mov
jmp
mov
mov
jmp
add
pushl
pushl
jmp
sub
mov
add
add
add
jmp
push
mov
mov
push
jmp
push
sub
mov
jmp
push
mov
add
push
mov
sub
sub
jmp
add
jmp
pop
pop
push
mov
mov
sub
xor
sub
pop
xor
xor
xor
pop
jmp
mov
sub
sub
sub
add
add
jmp
mov
pop
jmp
xchg
pop
mov
mov
and
pushl
jmp
pushl
jmp
push
push
pop
push
mov
add
pop
and
shr
sub
mov
pop
jmp
mov
jmp
mov
add
add
push
jmp
push
mov
jmp
push
jmp
add
sub
pop
mov
jmp
add
jmp
add
sub
jmp
mov
jmp
add
sub
add
push
mov
jmp
mov
add
sub
pushl
pop
add
jmp
add
push
jmp
rolw
pushf
jmp
pop
push
mov
add
pop
addl
push
mov
add
pop
sub
push
mov
addl
subl
sub
addl
push
jmp
add
shl
not
jmp
mov
jmp
mov
push
push
pop
jmp
push
jmp
mov
add
push
mov
sub
pop
add
add
mov
push
mov
add
add
xor
xor
xor
pop
push
jmp
xchg
pop
jmp
pop
push
mov
pushl
pop
popl
mov
jmp
sub
jmp
pop
jmp
mov
add
jmp
add
add
jmp
push
mov
xchg
not
xchg
or
and
sub
push
push
mov
mov
mov
push
mov
add
add
xchg
jmp
sub
sub
add
pushw
jmp
mov
mov
jmp
sub
jmp
add
pop
sub
mov
mov
xor
push
mov
xor
and
pop
push
jmp
xor
add
mov
jmp
pushl
mov
jmp
add
add
mov
add
push
mov
push
mov
push
mov
sub
mov
add
jmp
pushl
jmp
push
mov
jmp
mov
jmp
xor
jmp
addl
pop
jmp
pop
xor
xor
xor
mov
xor
jmp
mov
add
pop
jmp
add
xchg
pop
xor
pop
push
mov
jmp
push
mov
add
pop
jmp
add
inc
add
sub
add
add
pushl
mov
jmp
not
shr
push
mov
jmp
or
shl
pushl
sub
mov
push
mov
dec
inc
jmp
push
pushl
pop
popl
pop
mov
jmp
pop
xor
shr
push
mov
xchg
jmp
pop
add
add
xchg
pop
or
je
pushl
pushl
pop
push
sub
push
popl
push
jmp
push
mov
sub
pop
add
sub
jmp
add
pop
jmp
mov
xorl
pushl
pop
push
mov
push
jmp
imul
push
mov
push
jmp
or
add
xor
pop
not
jmp
push
mov
add
pop
add
jmp
mov
jmp
add
xchg
pop
pushl
mov
push
mov
add
add
xchg
pop
push
mov
jmp
push
mov
dec
jmp
push
mov
mov
sub
jmp
mov
test
pushf
jmp
xor
jmp
push
mov
jmp
push
mov
jmp
xor
sub
mov
sub
jmp
push
mov
push
mov
inc
jmp
xchg
mov
jmp
pop
push
mov
sub
jmp
mov
jmp
add
sub
pop
sub
mov
mov
sub
pop
jmp
pop
add
jmp
push
push
mov
sub
mov
mov
xor
pop
not
or
or
add
mov
pop
and
dec
neg
push
mov
xor
sub
add
add
jmp
popl
addl
mov
add
push
mov
push
push
mov
mov
pop
jmp
push
pushl
mov
add
add
jmp
jmp
mov
pop
add
mov
add
xor
xor
xor
mov
jmp
xchg
pop
mov
push
push
pop
shl
or
shr
sub
push
pop
pop
not
not
not
inc
xor
push
jmp
pop
add
add
mov
jmp
add
mov
pop
shl
jmp
push
mov
and
pushl
jmp
add
xor
xor
pop
add
jmp
xor
shr
inc
push
jmp
pop
sub
mov
pushl
pop
jmp
jmp
mov
mov
not
shr
jmp
push
push
mov
xor
jmp
or
not
push
mov
jmp
mov
jmp
neg
inc
shl
jmp
addw
jmp
mov
pop
push
mov
sub
sub
pop
sub
push
jmp
mov
shl
shr
shl
xor
jmp
push
push
mov
jmp
mov
jmp
pop
pop
xor
xor
xor
jmp
mov
mov
add
pop
xchg
mov
jmp
xor
xor
xor
jmp
pop
sub
add
jmp
jmp
push
mov
jmp
mov
push
mov
jmp
mov
mov
jmp
push
push
jmp
add
xchg
pop
jmp
pushl
jmp
sub
xor
pop
jmp
mov
mov
sub
mov
mov
shr
shl
xor
or
jmp
pop
sub
sub
pushw
jmp
mov
add
push
mov
add
jmp
sub
add
add
pop
jmp
add
mov
pop
add
addl
mov
jmp
idiv
push
jmp
xor
xor
xor
mov
sub
pushf
jmp
xor
mov
jmp
mov
push
jmp
pushl
jmp
push
mov
add
pop
add
add
jmp
mov
jmp
add
sub
sub
jmp
mov
jmp
mov
add
popl
mov
rorb
pushf
jmp
push
mov
inc
or
jmp
pop
mov
mov
add
mov
push
jmp
push
jmp
mov
add
pop
add
xchg
pop
add
push
mov
jmp
pop
jmp
push
push
pop
shr
shl
shr
jmp
pop
add
xor
jmp
push
mov
mov
sub
jmp
pop
add
xchg
jmp
mov
mov
dec
add
inc
shr
xor
sub
sub
add
mov
jmp
neg
add
add
pop
pop
push
jmp
pop
pushl
pop
push
mov
jmp
mov
sub
pop
push
mov
sub
pop
jmp
popl
jmp
neg
dec
jmp
mov
jmp
mov
neg
inc
add
add
pop
add
push
push
mov
push
mov
or
pop
push
mov
xor
jmp
pop
add
add
push
mov
mov
sub
sub
add
pushl
pop
push
mov
add
add
xchg
pop
push
push
jmp
pop
sub
mov
jmp
add
sub
pop
push
mov
mov
add
pop
xchg
mov
jmp
sub
pop
add
jmp
xor
add
xor
add
add
sub
pop
xor
xor
pop
add
sub
push
mov
add
jmp
pop
xchg
jmp
pop
pop
add
push
mov
add
mov
add
xor
jmp
add
pop
add
jmp
add
xchg
pop
mov
add
jmp
push
mov
jmp
push
pop
mov
add
jmp
sub
add
add
pop
sub
xchg
pop
mov
pushl
pop
jmp
sub
xor
xor
xor
pop
mov
mov
push
mov
add
pop
add
xor
xor
xor
mov
jmp
movzbw
push
pushf
jmp
notl
mov
push
jmp
mov
mov
neg
shr
sub
jmp
xchg
not
jmp
add
neg
xor
jmp
mov
movzbw
push
pushf
jmp
sub
sub
sub
jmp
pop
jmp
add
jmp
push
push
pushl
pop
push
mov
mov
jmp
sub
mov
mov
add
add
xchg
mov
push
mov
pushl
mov
jmp
sub
add
pop
push
mov
inc
add
add
jmp
push
mov
add
push
sub
mov
mov
add
jmp
sub
mov
push
pop
jmp
mov
mov
sub
mov
add
jmp
push
mov
jmp
mov
push
mov
shr
inc
shr
push
mov
sub
pop
jmp
lods
push
mov
jmp
mov
add
push
push
mov
addl
mov
jmp
mov
add
subl
add
push
jmp
pop
and
neg
sub
mov
pop
jmp
popl
jmp
push
mov
neg
shr
jmp
lods
xor
pushw
mov
push
push
push
mov
shr
shl
add
inc
shr
jmp
pop
pop
not
jmp
pushl
mov
add
push
mov
push
mov
add
or
not
push
push
mov
mov
jmp
sub
pushl
pop
add
add
pop
sub
mov
mov
push
mov
push
mov
add
pop
jmp
add
push
pushl
pop
popl
mov
sub
pushf
jmp
add
add
jmp
mov
add
sub
jmp
push
push
mov
mov
add
mov
add
jmp
pop
add
push
jmp
mov
push
mov
jmp
pushl
pop
popl
mov
jmp
sub
jmp
add
jmp
mov
mov
jmp
add
sub
sub
pushl
mov
add
add
jmp
push
jmp
add
pop
jmp
add
push
mov
add
pop
push
mov
dec
shr
neg
sub
mov
mov
jmp
sub
mov
pushl
pop
popl
mov
jmp
push
jmp
mov
sub
add
pop
push
push
mov
jmp
mov
mov
add
push
mov
add
pop
xchg
pop
jmp
add
sub
mov
mov
jmp
mov
jmp
jmp
pushl
pushl
mov
add
add
popl
jmp
push
mov
add
sub
xchg
pop
mov
mov
push
push
jmp
add
jmp
push
mov
add
push
mov
neg
inc
add
add
pop
jmp
popl
pop
push
push
jmp
add
xchg
pop
sub
sub
jmp
jmp
mov
push
jmp
sub
sub
add
pop
jmp
mov
addl
pop
push
mov
jmp
mov
add
pop
add
xchg
jmp
jmp
pop
push
mov
sub
add
add
jmp
push
mov
jmp
and
xor
inc
sub
sub
sub
jmp
mov
mov
jmp
sub
pop
mov
add
xchg
pop
jmp
pushl
jmp
sub
add
add
pop
jmp
pop
or
jmp
popl
jmp
mov
mov
mov
push
jmp
add
jmp
xor
add
jmp
pop
jmp
mov
push
push
popl
addl
jmp
push
sub
pushl
pop
push
jmp
sub
sub
add
add
pop
push
mov
mov
add
pop
push
pushl
jmp
push
pushl
jmp
mov
mov
jmp
lods
jmp
addl
popl
jmp
xchg
pop
sub
jmp
shl
jmp
neg
xor
sub
jmp
sub
pop
push
mov
jmp
pop
jmp
mov
push
pop
jmp
xor
mov
jmp
sub
pop
pop
jmp
add
add
xchg
jmp
push
pop
jmp
mov
sub
mov
jmp
pushl
mov
add
jmp
shl
shl
push
mov
xor
pop
push
mov
and
xor
push
mov
add
jmp
shl
jmp
sub
add
add
mov
jmp
mov
add
jmp
pushl
subl
pop
jmp
mov
jmp
push
mov
jmp
push
jmp
mov
mov
push
mov
dec
push
mov
sub
pop
jmp
push
mov
decl
pop
push
mov
sub
pop
jmp
push
mov
shl
push
push
mov
shr
xor
sub
mov
pop
xor
pop
neg
or
jmp
push
push
mov
jmp
push
push
mov
mov
mov
jmp
xor
sub
sub
add
jmp
push
mov
mov
push
jmp
pop
push
mov
sub
add
push
jmp
mov
mov
shl
sub
jmp
neg
sub
mov
mov
shl
shr
push
mov
push
mov
and
or
dec
xor
add
jmp
mov
push
jmp
xor
mov
jmp
not
jmp
mov
jmp
pop
add
pop
push
mov
sub
pop
push
pushl
pop
popl
pop
jmp
popw
push
push
pushw
pop
push
mov
push
mov
neg
jmp
add
jmp
xor
jmp
xor
jmp
mov
and
neg
xor
sub
jmp
pop
jmp
mov
push
push
mov
mov
pop
mov
pop
pop
jmp
push
mov
jmp
mov
push
mov
jmp
push
mov
add
jmp
sub
mov
push
jmp
push
push
push
push
pop
shr
dec
sub
jmp
add
push
mov
add
mov
add
xor
xor
xor
pop
jmp
push
mov
mov
add
pop
jmp
pushl
pop
add
add
sub
jmp
mov
push
popl
addl
jmp
xor
pop
sub
jmp
push
jmp
pop
jmp
jmp
mov
push
mov
jmp
shl
sub
jmp
pop
jmp
sub
pop
popl
push
mov
sub
jmp
sub
mov
jmp
mov
jmp
mov
add
mov
add
xor
pop
jmp
mov
sub
jmp
mov
mov
add
mov
add
add
push
push
mov
mov
jmp
pushl
pop
jmp
push
pop
or
add
mov
pop
not
add
jmp
mov
sub
jmp
shl
jmp
pushl
mov
jmp
neg
jmp
add
jmp
add
mov
pushl
mov
add
jmp
pushl
push
mov
add
pop
pushl
pushl
jmp
jmp
xor
mov
mov
push
mov
mov
push
mov
mov
shr
sub
jmp
or
push
jmp
add
pushl
pop
add
sub
jmp
jmp
push
mov
or
pop
add
add
add
sub
pop
sub
sub
push
mov
add
pop
sub
push
jmp
mov
not
push
push
mov
not
add
mov
jmp
and
jmp
push
mov
jmp
add
xor
add
pop
shl
sub
mov
mov
shl
jmp
mov
push
mov
jmp
sub
xchg
pop
mov
mov
push
mov
jmp
subw
add
addw
addw
pop
jmp
pop
add
jmp
add
push
mov
jmp
mov
jmp
add
sub
xchg
pop
mov
jmp
sub
mov
push
mov
add
push
mov
jmp
mov
mov
dec
jmp
inc
push
mov
sub
mov
add
push
jmp
push
pop
pop
jmp
mov
jmp
push
pop
add
push
mov
add
pop
xchg
mov
or
shl
push
mov
push
pop
jmp
pushl
pop
push
mov
jmp
pop
xor
xor
jmp
push
mov
add
add
push
mov
jmp
mov
sub
pop
xor
xor
xor
pop
mov
jmp
mov
push
mov
mov
add
push
push
mov
mov
pop
sub
push
mov
sub
sub
add
add
add
pop
add
sub
add
push
jmp
mov
jmp
push
jmp
mov
add
sub
jmp
add
xchg
jmp
push
jmp
add
pop
sub
jmp
mov
mov
jmp
pushl
pop
jmp
pop
push
jmp
mov
sub
mov
mov
add
sub
mov
mov
add
add
add
push
mov
sub
pop
sub
jmp
xor
add
pushl
pop
add
add
add
push
mov
not
xor
inc
jmp
mov
jmp
sub
pushl
pop
push
mov
push
mov
add
pop
add
xor
xor
xor
jmp
mov
jmp
mov
push
mov
add
add
xchg
jmp
popl
jmp
pop
jmp
mov
push
push
mov
push
jmp
sub
mov
push
pop
add
sub
xchg
mov
mov
mov
sub
shr
xor
sub
add
mov
push
mov
add
add
jmp
mov
add
add
jmp
negw
pushf
jmp
mov
jmp
pop
sub
mov
mov
push
mov
or
sub
sub
add
pop
push
mov
mov
add
sub
add
add
jmp
not
shr
push
jmp
xor
jmp
or
jmp
pop
shl
add
xor
jmp
add
sub
pushl
pop
push
mov
add
add
xchg
pop
add
add
sub
add
add
jmp
sub
pop
add
pop
push
jmp
shll
pushf
jmp
add
mov
jmp
jmp
pushl
pop
jmp
sub
mov
mov
jmp
pop
push
mov
add
pop
xchg
pop
and
mov
add
shr
xor
jmp
pop
jmp
mov
push
jmp
push
mov
push
mov
add
dec
jmp
sub
pop
not
xor
add
pop
push
mov
add
jmp
add
add
jmp
add
push
mov
mov
shl
add
add
jmp
mov
inc
dec
inc
xor
sub
push
addl
pop
sub
pop
add
push
mov
push
mov
notl
jmp
and
jmp
mov
pop
pop
and
pop
shr
xor
push
jmp
xor
xor
xor
pop
or
jmp
sub
push
mov
add
mov
push
jmp
mov
add
add
jmp
neg
xor
neg
jmp
push
mov
jmp
sub
pop
jmp
mov
add
pop
pushl
mov
add
add
pushl
pop
add
sub
jmp
mov
pop
mov
add
push
notl
pop
neg
or
not
sub
jmp
sub
jmp
pop
jmp
sub
mov
sub
push
popl
jmp
mov
sub
xor
add
pop
push
pushl
mov
add
popl
pop
push
mov
add
add
jmp
pop
or
and
add
jmp
mov
or
not
sub
add
pop
pop
add
xchg
mov
push
push
jmp
sub
mov
push
pop
sub
mov
mov
xor
add
jmp
add
jmp
sub
push
push
push
mov
add
jmp
pushl
pop
add
push
push
pop
add
add
xchg
pop
jmp
shl
xor
add
pop
add
jmp
add
push
push
jmp
push
mov
pushl
jmp
popl
jmp
sub
jmp
mov
add
pop
jmp
pop
jmp
push
mov
mov
pop
and
pushl
pushl
pop
push
jmp
xor
and
or
jmp
add
xchg
mov
jmp
pop
popl
mov
jmp
mov
mov
add
jmp
push
push
mov
addl
mov
add
push
mov
add
add
pop
push
push
push
pop
sub
mov
jmp
add
push
mov
add
jmp
push
jmp
push
jmp
add
or
jmp
xor
pop
jmp
add
sub
sub
sub
mov
push
mov
mov
jmp
and
add
add
pop
push
pushl
pushl
pop
sub
jmp
mov
add
xchg
pop
roll
pushf
jmp
xor
jmp
mov
push
jmp
shrl
pushf
jmp
push
mov
pop
pop
xchg
not
xchg
push
push
mov
add
pop
xor
xor
jmp
pop
push
push
mov
push
addl
pop
sub
pop
push
push
pop
jmp
push
jmp
push
push
pop
add
push
mov
add
add
sub
jmp
pop
xchg
pop
mov
jmp
shl
xchg
neg
xchg
add
mov
pop
shr
sub
shr
inc
jmp
push
push
mov
mov
push
push
mov
mov
mov
add
jmp
mov
jmp
add
xor
xor
xor
pop
shr
or
jmp
push
sub
jmp
mov
jmp
popl
jmp
pop
push
pushl
jmp
push
mov
push
push
jmp
addl
pop
sub
mov
push
mov
add
add
xchg
pop
mov
jmp
pop
push
jmp
add
jmp
pop
jmp
sub
add
add
pop
add
sub
pop
sub
xchg
pop
mov
push
pop
add
add
push
pushl
pop
popl
mov
and
pushf
jmp
sub
add
add
pop
sub
mov
pushl
mov
add
popl
mov
bts
pushf
jmp
mov
jmp
sub
sub
mov
push
mov
push
mov
not
jmp
add
pushl
pushl
pop
push
jmp
push
jmp
sub
xchg
jmp
xor
mov
pop
mov
pop
add
pop
jmp
add
add
add
push
jmp
add
sub
jmp
push
mov
mov
jmp
push
mov
push
mov
push
mov
mov
mov
add
pushl
pop
add
push
mov
add
push
push
jmp
pop
pop
sub
pop
jmp
pop
sub
jmp
pop
mov
add
mov
pop
pop
jmp
mov
xor
pop
jmp
push
mov
jmp
mov
mov
pop
jmp
sub
sub
jmp
mov
jmp
xor
xor
xor
mov
bt
pushf
jmp
add
sub
add
add
pop
sub
sub
push
mov
dec
xor
push
mov
xor
jmp
sub
xor
not
jmp
mov
jmp
xchg
pop
mov
pushl
pop
popl
pop
sub
pushf
jmp
mov
push
mov
jmp
xor
jmp
shr
jmp
or
jmp
add
sub
mov
mov
shl
neg
add
inc
push
mov
add
sub
jmp
mov
sub
add
mov
add
jmp
sub
add
add
pop
push
push
mov
sub
dec
neg
and
and
sub
mov
pop
add
mov
jmp
mov
sub
mov
jmp
mov
jmp
inc
inc
or
jmp
mov
jmp
xor
mov
mov
jmp
push
mov
add
sub
xchg
pop
mov
pushl
pop
popl
jmp
dec
not
jmp
pop
push
mov
add
add
xchg
mov
push
mov
push
mov
not
push
mov
xor
jmp
add
and
or
add
not
sub
jmp
mov
and
pushf
jmp
push
jmp
push
mov
mov
shl
jmp
pop
mov
push
mov
mov
mov
add
sub
jmp
jmp
xor
neg
shl
add
add
jmp
mov
pop
add
jmp
push
mov
jmp
push
push
pop
sub
xor
sub
mov
pop
xor
pushl
pop
add
mov
jmp
add
push
jmp
sub
push
mov
jmp
push
push
jmp
not
xor
xor
xor
pop
push
push
jmp
mov
mov
add
push
mov
add
add
mov
jmp
jmp
push
jmp
pop
add
xchg
mov
add
push
push
jmp
push
push
jmp
pop
add
pop
sub
sub
push
mov
mov
add
pop
sub
mov
mov
jmp
shr
add
sub
pop
add
add
pop
push
mov
jmp
pushw
mov
push
pop
mov
add
pushw
mov
xchg
not
xchg
mov
add
xchg
jmp
lods
add
push
mov
sub
pop
sub
push
mov
add
jmp
jmp
jmp
not
sub
push
jmp
mov
push
mov
add
push
mov
jmp
mov
add
mov
add
xor
jmp
mov
jmp
push
mov
sub
add
add
pushl
pop
add
jmp
push
push
push
pop
push
push
mov
sub
not
and
xor
push
addl
pop
sub
jmp
mov
jmp
add
sub
mov
jmp
pop
add
jmp
xor
add
pop
and
mov
add
shr
xor
push
jmp
pop
push
mov
jmp
add
mov
jmp
add
jmp
shl
shl
sub
add
pop
mov
add
jmp
add
add
jmp
add
jmp
add
mov
add
jmp
pop
add
jmp
movsbl
push
mov
jmp
pushl
mov
add
push
mov
push
push
pop
jmp
pop
jmp
pop
shr
push
mov
push
mov
sub
jmp
push
jmp
pop
push
mov
jmp
add
push
push
jmp
or
neg
jmp
xor
pop
sub
add
add
pop
or
pushl
pop
push
mov
add
push
mov
add
jmp
mov
mov
jmp
sub
sub
add
add
add
sub
mov
jmp
popl
jmp
mov
shr
jmp
add
sub
jmp
add
jmp
add
mov
add
jmp
pushl
pop
jmp
pop
add
pop
pushw
jmp
pop
sub
sub
mov
add
push
mov
jmp
pushl
pop
push
mov
push
mov
jmp
pop
add
jmp
push
mov
add
jmp
push
mov
add
jmp
add
xchg
pop
jmp
pop
xor
pop
push
jmp
add
add
xor
xor
xor
pop
jmp
add
add
pop
mov
pop
sub
pop
push
mov
jmp
pop
jmp
push
mov
push
jmp
lods
push
push
mov
mov
add
jmp
mov
xor
pop
add
mov
add
jmp
or
mov
jmp
mov
add
add
xchg
mov
jmp
lods
push
jmp
sub
add
pop
jmp
mov
inc
shr
add
inc
and
jmp
dec
sub
shr
xor
push
jmp
push
push
mov
inc
jmp
mov
add
jmp
push
push
jmp
pop
pushw
jmp
add
pop
add
jmp
mov
mov
pop
pop
jmp
inc
not
sub
add
jmp
xor
sub
sub
or
sub
sub
jmp
add
neg
inc
sub
sub
jmp
sub
mov
push
jmp
push
mov
push
notl
jmp
pop
sub
jmp
pushl
mov
jmp
or
je
push
push
jmp
xor
pop
xor
pop
mov
mov
add
dec
push
mov
add
sub
jmp
mov
pop
sub
pop
sub
add
pop
jmp
jmp
pop
jmp
push
mov
shl
shr
and
and
jmp
pop
add
pushl
pop
push
jmp
push
jmp
sub
add
jmp
xor
jmp
add
jmp
pop
sub
sub
pop
pop
add
sub
add
push
mov
mov
push
jmp
sub
pop
push
mov
neg
not
not
add
jmp
pushl
pop
sub
jmp
sub
mov
pop
xor
jmp
xor
xor
push
mov
jmp
pop
push
jmp
push
jmp
sub
mov
jmp
push
notl
pop
jmp
pop
push
push
pop
push
mov
jmp
mov
jmp
push
mov
jmp
push
mov
push
mov
jmp
add
neg
push
jmp
mov
mov
push
mov
add
sub
xchg
jmp
mov
push
mov
mov
sub
mov
mov
add
pop
jmp
sub
jmp
mov
mov
not
inc
add
add
push
jmp
and
not
push
jmp
addl
pop
sub
pop
inc
shl
shl
jmp
push
mov
push
mov
add
sub
jmp
add
push
mov
sub
pop
xor
xor
xor
mov
mov
jmp
mov
add
pop
jmp
mov
sub
mov
mov
push
mov
push
notb
mov
jmp
push
mov
add
mov
pop
jmp
push
push
mov
jmp
mov
push
mov
add
pop
mov
push
mov
add
add
jmp
mov
jmp
pop
dec
sub
sub
xor
pop
xor
sub
pop
xchg
jmp
pop
add
add
pop
jmp
xor
xor
xor
mov
jmp
shl
not
shr
add
jmp
mov
add
jmp
pop
popl
jmp
mov
pushl
mov
add
add
add
and
pop
or
je
pushl
pushl
mov
jmp
sub
mov
jmp
mov
jmp
pop
jmp
push
mov
add
sub
xchg
jmp
mov
push
mov
xor
pop
add
sub
add
push
mov
jmp
push
jmp
add
add
jmp
push
push
mov
pop
pushl
pop
push
mov
add
add
xchg
pop
not
xchg
jmp
shr
or
push
mov
jmp
push
push
sub
mov
mov
jmp
pop
inc
jmp
push
mov
push
jmp
sub
jmp
mov
mov
shl
jmp
and
jmp
add
dec
sub
and
jmp
push
mov
mov
pop
jmp
push
pop
jmp
add
xchg
pop
xchg
pop
push
mov
sub
mov
mov
jmp
mov
mov
add
add
xchg
jmp
add
pop
push
jmp
add
pop
sub
add
add
pop
xchg
mov
jmp
pushl
pushl
pop
push
mov
push
mov
or
jmp
push
mov
add
add
xchg
pop
jmp
mov
movzbw
sub
mov
jmp
pushl
mov
add
add
jmp
lods
xor
jmp
lods
push
mov
sub
pop
jmp
add
jmp
push
mov
xor
add
sub
xor
jmp
pushl
mov
push
mov
jmp
add
push
mov
add
shr
push
mov
mov
add
pop
push
mov
mov
push
mov
mov
xor
jmp
sub
jmp
mov
add
push
jmp
pop
sub
mov
push
jmp
push
mov
jmp
sub
jmp
mov
add
popl
pop
add
pushl
mov
add
jmp
mov
and
jmp
sub
push
jmp
sub
push
jmp
add
jmp
pop
push
mov
sub
add
add
pop
xchg
mov
sarw
pushf
jmp
add
add
jmp
add
push
push
mov
jmp
pop
jmp
xor
inc
xor
add
pop
or
jmp
pop
sub
jmp
shr
xor
and
xor
sub
pop
add
jmp
mov
add
pop
xor
pop
sub
pop
add
jmp
add
jmp
xor
jmp
mov
push
jmp
and
mov
add
add
mov
mov
add
jmp
pushl
pop
add
add
pop
push
mov
jmp
pushl
pop
add
push
mov
mov
push
mov
mov
sub
add
mov
add
push
mov
add
pop
push
jmp
xchg
pop
pushl
pushl
pop
push
mov
add
add
jmp
push
mov
mov
jmp
mov
jmp
dec
xor
sub
jmp
mov
pop
push
mov
mov
not
add
shl
sub
jmp
sub
xchg
pop
mov
push
jmp
push
notl
pop
or
add
sub
and
jmp
pop
pop
add
jmp
mov
mov
add
shl
jmp
pop
push
mov
jmp
pop
sub
sub
pop
xchg
pop
or
pushf
jmp
pop
jmp
mov
sub
jmp
shr
jmp
sub
jmp
mov
jmp
mov
mov
mov
xor
pop
jmp
push
jmp
push
push
popl
push
mov
push
pop
add
pop
pop
add
jmp
add
pop
add
jmp
shl
shl
jmp
pop
add
push
mov
sub
add
add
pop
push
mov
add
pop
push
pushl
mov
push
mov
add
add
xchg
pop
popl
jmp
xor
add
pop
xor
add
pop
add
xchg
jmp
mov
jmp
shl
jmp
mov
xor
pop
push
mov
add
jmp
sub
sub
jmp
or
dec
inc
add
mov
pop
add
mov
push
mov
jmp
lods
cmpl
je
push
mov
jmp
push
pushl
jmp
add
not
shl
sub
push
mov
add
add
jmp
pop
add
jmp
sub
mov
jmp
mov
push
mov
jmp
mov
mov
neg
dec
push
mov
decl
pop
sub
jmp
pop
jmp
add
add
mov
jmp
pushw
mov
push
mov
or
not
neg
jmp
popl
jmp
mov
push
mov
mov
add
pop
push
mov
add
add
jmp
xchg
pop
jmp
pushl
pop
push
jmp
add
pop
jmp
add
push
mov
sub
pop
sub
mov
add
jmp
xchg
jmp
sub
sub
push
push
mov
add
sub
xchg
pop
mov
push
mov
or
sub
jmp
shl
jmp
mov
jmp
dec
xor
mov
pop
add
add
sub
jmp
add
sub
pop
shr
not
xor
dec
sub
push
addl
jmp
pop
jmp
inc
shr
not
shr
neg
push
mov
jmp
sub
pop
add
push
xorl
mov
add
xor
pop
jmp
add
dec
neg
sub
mov
mov
jmp
push
push
mov
shl
add
not
inc
add
jmp
push
mov
sub
add
pop
jmp
pushl
popf
pop
rcrb
pushf
jmp
add
jmp
jmp
sub
jmp
add
jmp
or
mov
add
push
mov
xor
pop
sub
pop
jmp
mov
xor
add
or
not
jmp
mov
jmp
pop
neg
jmp
pushl
popf
pop
rcrw
pushf
jmp
mov
inc
sub
sub
pop
and
pushl
pop
jmp
sub
push
jmp
xor
xor
shr
jmp
shl
push
mov
mov
xor
sub
pop
sub
jmp
pushw
sub
mov
add
dec
jmp
sub
mov
mov
jmp
mov
mov
jmp
add
popl
jmp
push
addl
pop
sub
mov
push
mov
jmp
add
pushl
pop
jmp
add
sub
xchg
pop
mov
mov
add
jmp
sub
pop
add
jmp
sub
mov
popl
pop
push
mov
mov
push
mov
mov
sub
shr
jmp
add
add
push
mov
jmp
add
sub
sub
sub
add
push
mov
dec
sub
jmp
push
push
pop
jmp
pop
mov
mov
add
sub
pop
jmp
mov
add
add
xchg
jmp
mov
push
mov
add
add
xchg
pop
and
pop
push
mov
push
jmp
push
mov
add
add
xchg
mov
push
jmp
push
jmp
pop
neg
push
mov
sub
pop
jmp
mov
push
jmp
push
mov
add
pop
add
push
pushl
pop
popl
jmp
add
add
jmp
sub
sub
mov
push
mov
add
jmp
add
sub
sub
jmp
mov
add
sub
jmp
sub
sub
pop
push
mov
jmp
mov
add
jmp
add
mov
mov
add
jmp
shr
and
or
jmp
push
mov
add
pop
sub
jmp
push
jmp
add
and
jmp
add
add
sub
jmp
add
mov
pop
and
mov
jmp
pop
add
pop
xchg
mov
jmp
push
mov
neg
xor
push
mov
add
jmp
mov
sub
pop
pop
push
mov
sub
pop
sub
mov
mov
jmp
sub
pop
sub
mov
push
jmp
pop
sub
add
jmp
pop
jmp
xor
xor
pop
xor
pushf
jmp
add
xchg
pop
cmp
pushf
jmp
mov
jmp
pop
mov
jmp
neg
not
jmp
pop
jmp
push
mov
add
pop
xor
jmp
push
mov
not
sub
sub
pop
xor
jmp
notl
mov
add
push
negl
mov
push
mov
add
jmp
add
pop
movzbl
pushl
push
push
jmp
mov
add
mov
add
jmp
add
jmp
mov
jmp
pushl
pop
add
mov
push
jmp
mov
add
jmp
add
pop
push
pushl
pop
popl
mov
jmp
mov
push
jmp
sub
sub
jmp
xchg
jmp
pop
mov
push
mov
shl
sub
mov
jmp
neg
not
jmp
mov
push
mov
mov
xor
jmp
jmp
push
jmp
not
xchg
xor
not
jmp
pop
sub
add
add
jmp
not
xchg
push
mov
and
jmp
add
xor
pop
pushw
jmp
push
mov
jmp
shr
xor
push
notl
jmp
add
xchg
pop
xor
mov
add
jmp
pop
pop
push
push
jmp
push
mov
jmp
not
sub
jmp
push
mov
push
push
jmp
xchg
mov
jmp
mov
add
add
and
xchg
jmp
sub
mov
push
mov
jmp
xor
push
push
jmp
mov
push
pop
add
push
mov
jmp
mov
push
push
mov
add
shr
shr
neg
sub
mov
pop
jmp
push
mov
jmp
push
mov
and
and
add
jmp
push
mov
jmp
mov
xor
add
jmp
pop
push
jmp
xor
xor
pop
mov
pop
pop
jmp
pop
not
xchg
not
xchg
add
mov
pop
dec
xor
push
mov
push
mov
dec
and
xor
or
pop
push
notl
jmp
push
mov
mov
xor
pop
sub
dec
xor
sub
pop
shl
shr
jmp
mov
add
pop
mov
jmp
add
jmp
push
push
pop
jmp
mov
mov
push
mov
add
add
jmp
sub
pop
add
sub
sub
jmp
xor
xor
xor
pop
add
jmp
mov
sub
mov
jmp
mov
add
pop
mov
add
xchg
mov
pushl
pushl
pushl
pop
add
sub
mov
push
pop
add
push
mov
sub
add
add
pop
xor
xor
xor
pop
add
jmp
add
pop
jmp
add
jmp
sub
add
pop
add
xchg
pop
shr
xor
push
mov
push
pushl
pop
popl
push
push
pushl
pop
add
mov
add
sub
mov
xchg
not
xchg
pop
xchg
jmp
add
add
xchg
pop
xor
jmp
pop
add
mov
add
add
push
mov
sub
pop
jmp
push
pop
push
mov
jmp
add
pop
jmp
push
pop
mov
jmp
pop
push
push
pop
jmp
push
jmp
sub
jmp
push
popl
push
mov
addl
add
subl
jmp
pop
add
or
jne
push
jmp
push
mov
push
mov
mov
push
mov
mov
shl
jmp
mov
add
add
push
mov
shr
shl
sub
jmp
mov
jmp
pop
pushl
pop
push
mov
push
jmp
popl
mov
jmp
pop
sub
jmp
mov
notb
pushl
pop
add
xchg
jmp
or
add
sub
jmp
pushl
pop
push
jmp
not
xchg
or
shl
sub
jmp
add
pop
pop
add
push
mov
push
jmp
pop
mov
addl
pop
add
sub
mov
mov
add
add
jmp
pop
xor
pop
sub
add
add
pop
xchg
pop
decl
pushf
jmp
push
mov
jmp
movzbw
push
push
push
jmp
push
jmp
push
pop
jmp
mov
add
pop
jmp
xor
pop
pushl
pop
add
push
jmp
lods
jmp
popw
jmp
sub
pop
add
push
mov
add
pop
jmp
pushl
popf
pop
sbb
pushf
jmp
mov
mov
push
mov
push
mov
sub
jmp
mov
mov
add
push
mov
push
mov
add
sub
xchg
mov
mov
mov
sub
add
add
jmp
xchg
pop
jmp
push
mov
jmp
mov
jmp
mov
jmp
pop
push
mov
jmp
mov
jmp
shr
sub
sub
jmp
pop
xor
xor
xor
mov
mul
pushw
mov
push
pushf
jmp
mov
mov
push
mov
add
pop
add
sub
pushl
pop
add
and
push
jmp
mov
neg
dec
add
jmp
sub
or
add
and
pop
add
jmp
add
push
mov
add
pop
xchg
mov
jmp
add
jmp
pop
push
mov
add
pop
jmp
xor
dec
not
add
jmp
add
add
jmp
and
mov
add
jmp
sub
sub
add
jmp
push
mov
push
pop
push
jmp
pop
mov
mov
sub
mov
push
mov
jmp
mov
idiv
pushw
mov
push
pushf
jmp
push
mov
sub
sub
inc
xor
xor
pop
or
add
jmp
mov
jmp
add
pop
shr
xor
add
neg
push
mov
jmp
mov
pop
pop
mov
add
jmp
or
xor
add
mov
add
add
add
push
mov
sub
mov
add
jmp
pushl
pop
push
mov
add
jmp
push
mov
mov
add
jmp
pop
and
jmp
pushl
jmp
sub
jmp
or
pop
dec
not
push
mov
or
sub
shl
jmp
mov
add
add
jmp
mov
push
push
pop
push
mov
jmp
pop
popl
mov
idiv
movzbw
pushw
jmp
mov
add
jmp
sub
pop
jmp
mov
push
pop
jmp
sub
mov
mov
jmp
push
mov
push
mov
add
jmp
xor
mov
pop
add
pop
push
mov
pushl
jmp
add
add
jmp
mov
push
mov
jmp
shl
inc
jmp
sub
jmp
mov
add
jmp
sub
mov
mov
sub
add
pop
push
mov
add
add
jmp
sub
pop
pop
and
mov
push
jmp
mov
sub
pop
pop
jmp
mov
push
mov
jmp
xor
neg
jmp
mov
shr
push
jmp
add
jmp
push
jmp
mov
sub
pop
add
pop
push
pushl
jmp
xor
xor
jmp
pop
xor
jmp
pop
and
pushl
mov
add
jmp
add
push
push
pop
push
mov
mov
jmp
push
push
push
jmp
add
jmp
xor
or
mov
add
jmp
pop
sub
sub
sub
add
add
push
jmp
mov
jmp
add
xor
or
xor
sub
sub
add
pop
jmp
sub
pop
jmp
pop
xor
pop
push
subl
pop
jmp
xor
xor
xor
mov
decb
pushf
jmp
dec
or
and
add
sub
jmp
add
add
sub
mov
mov
xchg
not
xchg
jmp
add
sub
xchg
pop
mov
push
mov
addl
pop
push
mov
jmp
xor
jmp
mov
mov
sub
jmp
push
mov
add
jmp
pop
pop
add
mov
add
xor
xor
xor
pop
mov
push
mov
push
pop
jmp
jmp
pop
jmp
not
jmp
xor
sub
mov
push
mov
mov
jmp
mov
mov
push
mov
mov
shr
jmp
mov
add
pop
and
pop
sub
jmp
pop
add
add
jmp
sub
mov
push
jmp
inc
not
sub
mov
pop
push
mov
jmp
sub
add
jmp
pop
sub
and
add
sub
jmp
pop
push
mov
add
mov
jmp
add
jmp
sub
sub
pop
and
pop
jmp
xchg
jmp
pop
push
mov
add
add
xchg
pop
push
mov
add
sub
xor
jmp
mov
add
mov
pop
jmp
add
push
mov
jmp
push
mov
mov
pop
shr
jmp
push
jmp
push
mov
push
mov
mov
jmp
push
mov
add
sub
xchg
pop
push
jmp
add
push
mov
add
jmp
jmp
sub
jmp
mov
push
mov
push
mov
push
mov
jmp
movzbl
popl
jmp
and
not
jmp
mov
jmp
mov
jmp
push
mov
mov
pop
shr
not
and
jmp
pop
push
mov
add
jmp
shlb
pushf
jmp
xchg
pop
push
mov
push
mov
jmp
push
push
pop
push
mov
jmp
pop
xor
xor
xor
pop
jmp
add
pop
add
mov
add
xor
xor
xor
pop
sarl
pushf
jmp
movzbw
pushw
jmp
inc
jmp
pushl
jmp
pop
push
mov
add
jmp
xor
mov
push
mov
push
jmp
push
mov
add
jmp
pop
push
jmp
sub
jmp
sub
and
xor
xor
jmp
xchg
jmp
xchg
pop
xor
mov
add
push
mov
add
sub
mov
mov
jmp
pop
sub
jmp
xor
jmp
mov
pop
or
pop
inc
add
inc
xor
add
sub
sub
pop
movzbl
jmp
popa
ret
mov
push
mov
add
sub
xchg
pop
mov
mov
jmp
add
sub
mov
jmp
pushl
popf
pop
adc
pushf
jmp
pop
push
push
pop
shr
inc
shr
xor
jmp
push
mov
mov
jmp
mov
not
jmp
and
pushl
pop
jmp
mov
add
add
jmp
neg
xchg
not
jmp
mov
add
mov
add
jmp
xor
xor
jmp
push
jmp
mov
push
mov
sub
mov
addl
mov
add
push
jmp
mov
add
pop
add
sub
sub
push
mov
inc
dec
add
sub
mov
add
pop
xor
add
sub
jmp
push
mov
add
jmp
add
jmp
shr
neg
push
mov
add
pop
jmp
sub
add
add
add
pushl
pop
jmp
add
sub
xchg
mov
mov
mov
push
jmp
dec
jmp
mov
add
push
mov
add
pop
xchg
pop
add
add
xor
xor
xor
pop
jmp
add
pop
push
pushl
jmp
mov
sub
pop
jmp
add
push
push
push
mov
jmp
sub
push
push
mov
mov
jmp
mov
add
mov
jmp
xor
xor
xor
xchg
jmp
pop
jmp
sub
jmp
pushl
jmp
xor
push
mov
jmp
not
jmp
mov
jmp
add
mov
add
sub
add
jmp
pop
add
jmp
mov
jmp
add
add
jmp
mov
push
mov
jmp
push
push
pop
push
mov
add
mov
jmp
push
mov
add
jmp
sub
mov
addl
pop
jmp
add
jmp
or
xor
push
jmp
mov
add
pop
push
mov
add
pop
add
jmp
pop
sub
jmp
mov
jmp
mov
add
pop
add
jmp
xchg
not
jmp
xor
xor
xor
jmp
add
xor
xor
jmp
jmp
pop
shlw
pushf
jmp
sub
add
add
jmp
lods
push
mov
mov
push
mov
or
pop
jmp
dec
and
add
push
jmp
inc
xchg
jmp
push
mov
push
mov
xor
mov
mov
jmp
push
jmp
mov
push
mov
push
push
mov
mov
pop
add
jmp
mov
jmp
xchg
pop
sub
and
pushl
jmp
mov
add
add
pop
xor
xor
xor
mov
jmp
xchg
pop
imul
push
pushf
jmp
pop
add
mov
push
mov
mov
add
add
xchg
pop
xchg
jmp
mov
push
jmp
sub
sub
sub
push
mov
add
jmp
shr
xor
jmp
mov
sub
mov
push
pop
push
push
push
mov
add
and
push
jmp
pop
pop
jmp
mov
push
mov
jmp
sub
add
sub
sub
push
jmp
sub
sub
pop
xchg
pop
pushl
mov
push
mov
push
mov
and
neg
dec
xor
add
pop
jmp
neg
or
and
shr
xor
add
jmp
push
mov
push
pop
add
push
mov
add
jmp
mov
push
jmp
mov
jmp
pop
mov
pushl
pop
popl
push
push
pop
jmp
inc
xor
mov
pop
add
mov
push
mov
add
add
xchg
pop
xchg
jmp
pop
push
jmp
mov
mov
shr
shl
neg
jmp
sub
shl
jmp
shr
xor
add
add
sub
sub
jmp
or
pop
jmp
mov
push
mov
mov
add
pop
sub
xchg
mov
mov
push
pushl
pop
add
push
jmp
shl
xor
push
xorl
pop
xor
mov
add
xor
pushl
jmp
push
push
pop
jmp
inc
inc
jmp
mov
add
add
push
mov
add
jmp
mov
jmp
pushl
pop
jmp
xor
jmp
pop
sub
add
jmp
add
pop
jmp
push
sub
jmp
jmp
and
sub
jmp
mov
sub
pop
push
jmp
mov
mov
add
jmp
sub
sub
add
jmp
xor
push
mov
push
mov
add
add
pop
add
jmp
push
mov
jmp
mov
push
mov
mov
push
mov
shl
not
shr
inc
sub
add
mov
add
push
push
jmp
pop
sub
sub
add
add
add
sub
pop
push
mov
mov
add
sub
xchg
mov
mov
push
mov
jmp
mov
mov
jmp
sub
push
mov
jmp
movzbl
mov
push
mov
jmp
pop
pop
mov
jmp
push
jmp
push
mov
add
pop
add
xchg
pop
mov
add
sub
push
mov
mov
sub
jmp
mov
add
xor
sub
jmp
pop
add
jmp
push
mov
mov
mov
jmp
mov
jmp
xor
mov
pop
add
pop
jmp
xchg
xor
add
pop
add
sub
jmp
xchg
pop
push
mov
sub
jmp
pop
mov
xor
mov
push
jmp
not
and
sub
sub
add
jmp
xor
jmp
push
mov
add
sub
xchg
pop
jmp
lods
xor
push
jmp
add
xchg
pop
push
jmp
xor
sub
jmp
pop
push
mov
mov
pop
pop
xor
pop
sub
mov
mov
push
mov
add
pop
not
jmp
pushl
mov
push
mov
push
mov
add
pop
push
jmp
push
jmp
sub
xor
jmp
mov
sub
mov
mov
push
mov
add
pop
push
mov
sub
jmp
jmp
xor
xor
xor
add
xor
push
mov
add
xor
pop
sub
mov
push
mov
neg
or
inc
jmp
mov
jmp
mov
jmp
mov
add
sub
xchg
pop
jmp
dec
dec
dec
shl
push
jmp
popl
pop
mov
push
pushf
jmp
add
jmp
pushl
mov
add
push
push
mov
addl
pop
push
push
mov
xor
not
add
jmp
xor
mov
mov
jmp
add
pop
push
mov
sub
add
add
pop
xchg
pop
jmp
pop
mov
mov
add
mov
sub
add
add
jmp
pop
pop
sub
mov
push
mov
jmp
mov
jmp
not
xor
and
pop
xor
sub
sub
jmp
pop
jmp
sub
mov
push
jmp
pushl
pop
push
push
pop
push
jmp
pop
shl
xor
jmp
and
xor
push
mov
mov
pop
pop
push
mov
xchg
neg
jmp
sub
xchg
jmp
pop
or
jmp
pop
jmp
sub
pop
add
jmp
xchg
pop
pushl
mov
push
jmp
sub
shl
push
jmp
shr
cmp
je
push
mov
inc
xor
jmp
sub
add
jmp
push
mov
push
push
mov
inc
neg
dec
shl
xor
mov
pop
neg
jmp
push
jmp
add
jmp
sub
push
mov
jmp
pop
jmp
mov
push
push
jmp
mov
shr
jmp
mov
jmp
add
jmp
push
mov
push
pushl
jmp
shlb
pushf
jmp
sub
jmp
pushl
jmp
mov
pop
pop
xchg
not
jmp
pop
pop
push
mov
mov
dec
xor
xor
xor
neg
xchg
or
jmp
and
pushl
pop
push
mov
add
jmp
pop
rep
jmp
sub
sub
add
pop
xchg
mov
mov
jmp
add
mov
add
sub
xor
xor
xor
pop
jmp
mov
add
add
pop
xor
xor
xor
mov
jmp
pop
sub
sub
jmp
popl
jmp
mov
push
push
pop
push
mov
or
sub
xor
add
pop
jmp
sub
pop
xor
xor
xor
pop
mov
mov
push
mov
neg
shr
or
jmp
or
dec
push
mov
xor
xor
jmp
neg
add
or
jmp
add
pop
sub
xor
jmp
sub
pop
and
pop
shr
push
mov
mov
push
mov
inc
not
jmp
pushl
pushl
pop
add
add
push
mov
push
mov
push
jmp
mov
jmp
sub
pushl
pop
add
push
mov
push
push
jmp
push
jmp
shl
xor
or
pop
jmp
mov
jmp
mov
jmp
add
mov
pop
add
pop
xchg
jmp
pop
jmp
add
push
pushl
pop
popl
pop
push
mov
mov
add
sub
push
mov
shr
jmp
add
xor
mov
add
push
jmp
add
jmp
sub
mov
addl
pop
add
jmp
mov
push
push
jmp
sub
mov
add
push
jmp
pop
push
jmp
mov
jmp
xor
add
pop
pop
xchg
pop
mov
sub
mov
push
pop
push
jmp
popl
pop
btc
pushf
jmp
push
mov
xor
jmp
add
pop
add
xchg
pop
xor
push
mov
jmp
pushl
jmp
and
add
sub
pop
jmp
mov
sub
add
jmp
add
pop
jmp
add
push
mov
jmp
addl
mov
add
sub
mov
push
mov
push
push
mov
mov
pop
jmp
sub
jmp
push
pop
add
jmp
sub
jmp
xor
jmp
push
jmp
and
push
mov
add
jmp
add
sub
xchg
pop
jmp
pop
add
pop
mov
pop
add
inc
inc
push
mov
or
jmp
pushl
pop
add
dec
jmp
pop
inc
xor
mov
pop
push
mov
add
sub
xchg
jmp
popl
push
mov
addl
add
subl
jmp
shl
dec
sub
mov
pop
xor
pushl
pop
add
jmp
push
jmp
pop
push
push
pop
pop
jmp
pop
push
mov
jmp
dec
add
push
mov
push
mov
push
jmp
mov
push
jmp
push
jmp
push
jmp
pop
add
jmp
mov
sub
mov
mov
jmp
and
mov
jmp
push
mov
push
mov
push
push
pop
inc
dec
add
mov
jmp
add
mov
mov
push
mov
add
add
xchg
pop
add
mov
add
jmp
push
mov
jmp
mov
add
sub
jmp
mov
add
pop
pop
push
jmp
dec
dec
not
jmp
mov
add
add
xchg
jmp
mov
push
pop
push
mov
mov
sub
add
add
pop
add
xchg
mov
cmp
pushf
jmp
mov
mov
jmp
mov
mov
add
jmp
push
mov
mov
pop
dec
neg
xor
add
pop
push
jmp
add
xchg
pop
jmp
sub
jmp
add
xchg
jmp
neg
inc
sub
add
jmp
mov
mov
push
mov
sub
pop
sub
jmp
popl
addl
pop
push
mov
add
pop
push
mov
jmp
neg
add
sub
sub
pop
sub
push
mov
not
inc
push
push
mov
shr
sub
and
add
sub
mov
pop
xor
pop
add
mov
add
mov
add
add
add
sub
add
movzbl
pushw
mov
jmp
sub
add
pop
sub
sub
push
jmp
mov
push
push
mov
mov
mov
add
sub
mov
mov
mov
pop
pop
not
jmp
push
mov
xor
jmp
pop
add
jmp
pushl
jmp
mov
add
push
mov
sub
jmp
pop
sub
jmp
xor
pop
add
pop
add
xchg
pop
add
jmp
add
pop
addl
add
subl
pop
pushl
pop
jmp
mov
push
jmp
pop
jmp
mov
add
or
shl
push
push
jmp
mov
mov
jmp
push
mov
push
mov
push
jmp
mov
mov
pop
push
mov
push
mov
push
jmp
pop
add
sub
sub
add
pop
xor
xor
xor
pop
mov
jmp
push
mov
sub
jmp
pop
xor
push
mov
mov
pop
jmp
push
mov
add
jmp
xor
jmp
sub
xchg
pop
mov
push
mov
sub
mov
mov
add
xor
add
pop
add
xchg
mov
mov
push
mov
push
mov
push
jmp
sub
jmp
add
sub
mov
pushl
jmp
mov
add
jmp
sub
add
add
push
mov
jmp
notl
pop
add
sub
pop
jmp
mov
jmp
push
push
mov
mov
pop
jmp
mov
not
and
jmp
push
mov
add
add
xchg
pop
jmp
shl
shr
shl
sub
xor
pop
push
mov
sub
sub
pop
jmp
mov
add
sub
push
mov
sub
jmp
push
pop
jmp
xor
pushl
pop
add
push
mov
dec
and
inc
dec
or
add
shl
inc
inc
jmp
add
jmp
xor
xor
pop
pushl
pushl
pop
push
mov
mov
sub
mov
jmp
push
mov
not
jmp
add
add
mov
push
mov
add
jmp
dec
jmp
push
mov
jmp
pop
xor
jmp
mov
sub
mov
jmp
mov
push
mov
push
jmp
mov
add
add
pop
add
sub
pop
add
jmp
sub
mov
add
sub
mov
mov
or
jmp
pop
xchg
mov
or
shl
jmp
pop
not
sub
add
jmp
xchg
mov
mov
addl
pop
add
jmp
add
sub
sub
jmp
sub
push
jmp
movzwl
pushw
jmp
mov
add
jmp
pop
xor
popl
jmp
add
pop
sub
mov
mov
add
pop
jmp
not
shr
add
jmp
mov
push
pop
add
push
mov
shr
jmp
mov
push
mov
jmp
xor
xor
pop
xor
push
mov
mov
push
mov
push
mov
push
mov
xor
pop
neg
add
jmp
sub
pop
xchg
mov
jmp
inc
jmp
pop
push
jmp
dec
push
or
or
or
mov
and
or
or
and
or
and
or
and
or
outsl
and
or
or
cmp
or
xlat
and
or
add
es
mov
and
or
and
or
cmp
or
pushf
or
and
or
es
int
or
cltd
es
popf
or
fwait
and
or
and
or
xchg
and
or
test
or
or
jnp
or
or
or
adc
or
and
or
jg
or
arpl
or
andb
xor
or
inc
es
add
or
mov
or
mov
or
and
or
adc
or
and
or
es
std
and
or
mov
or
outsb
or
xchg
or
jg
or
and
or
or
push
or
shll
or
and
or
xor
or
or
es
andb
jbe
or
popa
and
or
or
es
jbe
or
or
repz
or
mov
or
and
or
test
or
and
or
push
or
jno
or
andl
test
es
push
or
pop
or
jmp
or
or
sub
or
gs
or
and
or
mov
or
xchg
es
frstor
or
and
or
dec
or
mov
and
or
and
or
adc
or
mov
or
and
or
or
pop
or
or
js
or
mov
or
and
or
iret
and
or
movsl
es
xchg
or
lret
jmp
es
xor
and
or
or
pushf
cld
call
pop
sub
mov
add
cmp
jne
jmp
mov
mov
jmp
add
dec
or
jne
mov
mov
add
mov
xor
lock
jne
lods
xor
sub
mov
mov
add
jmp
and
xor
xor
pop
xor
pop
sub
add
add
jmp
add
sub
push
pushl
pop
popl
pop
mov
push
jmp
push
mov
jmp
push
mov
jmp
mov
add
add
xchg
pop
or
shl
jmp
add
mov
add
push
mov
add
sub
sub
mov
add
push
mov
sub
mov
add
sub
add
add
push
mov
add
mov
jmp
mov
sub
pop
add
mov
push
mov
add
add
xchg
pop
add
xchg
jmp
xor
mov
pop
xor
pop
jmp
sub
sub
add
jmp
add
sub
add
jmp
pop
sub
mov
push
jmp
pop
jmp
pop
jmp
xor
pop
or
pop
xor
jmp
push
jmp
xor
pushl
mov
add
push
mov
add
push
jmp
sub
mov
pop
neg
push
mov
xor
pop
add
mov
add
push
mov
jmp
mov
add
shl
sub
jmp
add
xchg
jmp
pushl
pop
add
add
push
mov
push
pop
add
add
xchg
pop
shr
jmp
push
addl
pop
jmp
pop
shr
add
add
jmp
or
pop
jmp
sub
mov
mov
add
pop
add
push
mov
pushl
pop
popl
mov
or
shl
push
mov
push
mov
push
mov
mov
pop
push
mov
mov
pop
pop
sub
mov
push
push
mov
mov
jmp
sub
sub
sub
mov
pop
jmp
mov
push
mov
jmp
add
pop
jmp
or
jmp
jmp
push
mov
jmp
add
jmp
and
pushl
mov
add
push
mov
add
add
jmp
mov
add
jmp
sub
pop
push
mov
mov
jmp
push
pop
xor
sub
and
pop
xor
sub
jmp
pushl
jmp
mov
push
jmp
xchg
pop
add
add
xor
xor
xor
mov
push
mov
push
jmp
pushl
pop
push
mov
mov
add
add
xchg
pop
jmp
mov
add
pushl
pop
jmp
pop
jmp
popl
mov
push
mov
mov
add
push
mov
or
mov
jmp
mov
add
jmp
push
push
pop
sub
jmp
add
pop
mov
add
jmp
push
mov
and
shr
xor
shl
add
add
pop
sub
pop
push
pushl
pop
popl
mov
jmp
sub
pop
jmp
pop
sub
push
incl
pop
xor
jmp
add
pushl
jmp
sub
add
pop
push
mov
push
jmp
mov
jmp
shl
shr
push
mov
xor
add
pop
push
mov
mov
add
mov
add
push
mov
mov
push
jmp
add
push
mov
add
jmp
push
jmp
pop
pop
push
jmp
mov
xor
jmp
mov
push
mov
add
sub
xchg
pop
mov
push
push
popl
jmp
push
mov
mov
jmp
add
mov
add
add
xor
xor
xor
jmp
pop
add
add
add
sub
sub
pop
push
push
mov
jmp
sub
mov
mov
neg
add
neg
shr
sub
add
mov
add
add
sub
sub
pop
movzbl
lea
push
mov
jmp
add
push
jmp
mov
add
shr
xor
push
mov
jmp
pop
mov
mov
push
mov
jmp
xchg
pop
jmp
sub
add
push
mov
add
pop
sub
mov
add
push
pushl
pop
popl
jmp
xchg
jmp
inc
dec
xor
mov
pop
or
not
jmp
pop
jmp
mov
add
add
add
push
jmp
mov
inc
not
dec
jmp
sub
sub
mov
add
sub
add
jmp
jmp
mov
add
add
xchg
mov
add
xor
jmp
push
push
mov
mov
sub
pop
push
jmp
popl
pop
mov
push
push
mov
jmp
mov
xor
pop
mov
pop
shl
push
push
mov
jmp
push
mov
mov
xor
pop
xor
pushl
jmp
mov
push
pop
pop
not
xchg
push
mov
add
mov
add
push
jmp
push
mov
mov
add
pop
jmp
neg
add
shl
add
xor
jmp
push
push
pop
add
pop
pop
add
push
mov
xor
jmp
pop
push
popl
addl
mov
add
push
mov
push
jmp
dec
sub
add
pop
neg
xor
or
jmp
shl
shr
not
xor
add
add
jmp
lods
sub
mov
push
push
pop
shl
sub
sub
jmp
xchg
mov
push
push
push
mov
mov
jmp
shl
xor
shl
push
mov
add
pop
and
pop
sub
mov
jmp
sub
shl
neg
xor
xor
mov
push
mov
jmp
pop
xor
pop
xor
add
add
sub
mov
add
push
mov
not
sub
add
add
jmp
mov
jmp
mov
jmp
mov
mov
add
pop
pop
push
mov
push
mov
and
sub
push
mov
neg
jmp
pop
push
mov
push
jmp
mov
sub
pop
sub
mov
pushl
jmp
pop
sub
mov
push
mov
jmp
add
push
push
mov
jmp
or
pop
shr
jmp
mov
sub
jmp
shl
push
mov
and
push
mov
and
pop
sub
jmp
mov
jmp
xor
pop
sub
not
add
xor
and
mov
add
push
mov
jmp
mov
xor
sub
pop
mov
jmp
push
mov
jmp
pop
jmp
pop
push
mov
dec
add
jmp
pop
jmp
mov
jmp
pop
push
mov
mov
xor
jmp
add
mov
add
jmp
pop
add
shr
add
jmp
push
push
jmp
lods
push
mov
mov
shr
shl
add
sub
jmp
mov
mov
push
mov
mov
jmp
add
sub
pushl
pop
add
push
mov
mov
jmp
sub
mov
mov
add
pop
add
push
pushl
pop
popl
mov
jmp
sub
mov
pop
jmp
mov
push
jmp
add
add
add
sub
sub
mov
add
jmp
push
mov
push
mov
add
jmp
sub
mov
jmp
push
push
mov
not
jmp
pushl
mov
add
push
push
jmp
add
pop
push
jmp
add
add
push
pushl
mov
add
popl
pop
push
mov
jmp
mov
mov
jmp
mov
add
jmp
mov
pop
add
pop
pop
jmp
shl
sub
xor
mov
pop
add
pop
xor
xor
jmp
mov
push
popl
addl
pushl
jmp
xor
pop
add
add
sub
pop
add
jmp
push
jmp
lods
push
jmp
push
mov
not
and
neg
add
xor
mov
pop
jmp
neg
neg
shr
neg
xor
mov
pop
add
mov
push
mov
add
jmp
push
mov
add
pop
jmp
mov
add
sub
xchg
pop
mov
push
pop
add
pop
mov
add
add
jmp
add
add
sub
push
jmp
add
push
push
pop
and
xor
shr
jmp
xor
xor
mov
rorb
pushf
jmp
pop
jmp
push
jmp
and
and
and
jmp
mov
mov
add
pop
sub
jmp
inc
add
xor
jmp
add
push
jmp
push
mov
and
jmp
sub
mov
pop
shl
sub
jmp
popl
mov
jmp
pop
mov
mov
add
add
xchg
pop
pushl
pushl
pop
push
mov
push
mov
addl
pushl
mov
add
add
push
mov
jmp
inc
jmp
sub
and
sub
add
pop
jmp
mov
push
jmp
mov
jmp
xor
mov
pop
sub
pop
pushw
mov
push
mov
jmp
push
mov
push
push
mov
mov
pop
jmp
sub
pop
push
mov
sub
jmp
pop
pop
jmp
mov
inc
xor
push
mov
sub
jmp
sub
pop
sub
jmp
mov
jmp
and
pop
push
mov
add
pop
xor
sub
pop
and
or
add
push
mov
jmp
mov
add
add
xchg
pop
neg
jmp
xor
xor
mov
sarl
pushf
jmp
push
mov
add
pushl
pop
add
pushl
pop
add
jmp
add
xchg
pop
push
jmp
add
pop
add
xchg
pop
sub
jmp
add
sub
xchg
mov
mov
mov
mov
jmp
add
add
pop
xchg
mov
sub
add
add
sub
mov
mov
add
push
mov
sub
jmp
lods
sub
mov
push
push
push
mov
mov
not
add
mov
pop
push
mov
shl
jmp
pop
mov
jmp
decl
pop
not
push
mov
add
pop
jmp
xor
pop
jmp
pop
xor
jmp
pushl
pop
add
jmp
add
add
jmp
add
push
mov
jmp
sub
jmp
and
or
jmp
pop
mov
pop
jmp
pushl
pop
add
mov
pushl
pop
push
jmp
pop
jmp
add
pop
push
mov
jmp
mov
jmp
push
push
mov
xor
pop
pop
push
push
mov
mov
pop
xor
pop
pushl
pop
sub
mov
push
pop
add
add
push
jmp
sub
jmp
add
push
mov
sub
sub
add
mov
add
mov
add
sub
xor
xor
xor
pop
mov
mov
jmp
xchg
pop
jmp
sub
mov
push
mov
jmp
pop
add
sub
sub
jmp
sub
pop
sub
add
sub
mov
jmp
add
mov
mov
push
jmp
pop
push
mov
sub
pop
xchg
jmp
add
pushl
pop
add
push
mov
jmp
add
add
jmp
add
jmp
sub
add
add
mov
add
jmp
shr
or
dec
xor
sub
add
jmp
add
and
mov
add
or
je
pushl
jmp
push
popl
push
jmp
pop
imul
jmp
sub
sub
sub
pop
pop
add
jmp
mov
sub
pop
push
mov
push
mov
mov
push
mov
mov
jmp
mov
mov
add
pop
add
push
jmp
add
xor
push
subl
pop
jmp
mov
mov
add
push
jmp
push
pop
jmp
sub
pop
sub
dec
not
sub
jmp
mov
or
and
shl
sub
jmp
push
pop
add
push
mov
add
pop
xchg
jmp
shl
inc
sub
mov
pop
and
shl
push
mov
sub
pop
sub
pushw
mov
mov
sub
sub
add
pop
sub
jmp
push
mov
jmp
mov
or
inc
xor
sub
add
add
mov
add
add
xchg
pop
push
mov
push
mov
add
add
xor
push
mov
jmp
mov
xor
or
jmp
mov
add
add
pop
mov
push
mov
add
add
jmp
push
pop
sub
mov
add
sub
mov
pushl
pop
popl
jmp
add
jmp
mov
mov
jmp
push
mov
mov
push
mov
push
jmp
add
jmp
push
mov
add
and
add
jmp
mov
add
add
mov
push
jmp
add
add
sub
sub
push
jmp
addl
add
jmp
xchg
pop
push
jmp
add
sub
mov
add
xor
jmp
mov
pushl
pop
add
mov
add
jmp
mov
sub
add
pop
jmp
mov
sub
jmp
push
jmp
pop
push
mov
push
jmp
mov
jmp
pushl
mov
jmp
pop
mov
pop
mov
push
mov
jmp
xchg
pop
add
push
jmp
jmp
add
jmp
push
sub
mov
jmp
shr
shl
jmp
mov
push
mov
add
jmp
xchg
pop
mov
push
push
pop
xor
jmp
jmp
pop
add
add
sub
sub
mov
add
jmp
push
mov
add
pop
add
push
mov
add
sub
push
mov
add
sub
xchg
pop
mov
pushl
jmp
xor
pop
push
mov
push
decl
pop
shr
xor
sub
pop
add
pushl
pop
add
push
pushl
jmp
sub
push
mov
jmp
pop
mov
jmp
add
add
jmp
sub
add
mov
add
ret
jmp
mov
add
jmp
inc
jmp
pop
and
jmp
sub
add
pop
jmp
push
mov
add
add
xchg
pop
pushl
pop
jmp
dec
jmp
add
sub
add
push
xorl
pop
xor
pop
add
sub
sub
mov
add
mov
push
mov
add
push
mov
add
pop
push
pushl
mov
add
popl
jmp
add
mov
pop
or
sub
xor
mov
add
add
pop
push
mov
jmp
mov
push
mov
push
mov
mov
pop
pop
pop
pop
sub
sub
jmp
push
mov
push
mov
push
mov
push
mov
add
add
jmp
push
mov
addl
popl
jmp
push
push
mov
shr
jmp
add
pop
mov
pop
jmp
pop
jmp
shr
jmp
mov
add
mov
jmp
mov
mov
addl
add
subl
pop
jmp
mov
pop
add
pop
sub
jmp
mov
add
pop
push
mov
add
pop
xor
xor
jmp
push
mov
xor
jmp
add
push
mov
and
inc
inc
or
jmp
add
add
xchg
pop
push
mov
push
jmp
sub
add
add
pop
xor
xor
xor
mov
mov
sub
mov
sub
mov
addl
pushl
pop
jmp
mov
push
mov
mov
jmp
jmp
pushl
jmp
sub
or
sub
add
add
pop
push
push
push
pop
inc
push
notl
pop
add
or
add
mov
mov
add
sub
mov
mov
add
sub
xchg
pop
mov
push
mov
push
mov
jmp
mov
pop
sub
jmp
push
push
push
push
pop
jmp
sub
sub
add
add
push
mov
sub
pop
push
mov
add
pop
push
push
jmp
mov
mov
jmp
sub
add
mov
jmp
inc
xor
xor
jmp
pop
jmp
pushl
pop
popl
pop
mov
push
push
pop
push
mov
add
sub
xchg
pop
mov
mov
push
mov
or
mov
add
push
mov
sub
pop
shr
sub
push
mov
sub
add
sub
jmp
push
jmp
sub
push
pop
jmp
sub
pop
push
mov
mov
jmp
add
popl
mov
push
jmp
mov
push
mov
push
jmp
pushl
jmp
push
mov
mov
add
jmp
pop
sub
sub
mov
push
mov
add
add
xchg
jmp
mov
shl
jmp
mov
jmp
mov
jmp
mov
sub
mov
push
mov
push
mov
add
pop
push
mov
jmp
pop
jmp
mov
mov
jmp
xor
pushl
pop
jmp
pushl
pop
add
push
push
push
mov
push
push
mov
mov
jmp
or
jmp
sub
pop
sub
mov
mov
add
pop
mov
add
push
mov
xor
shr
jmp
push
push
pop
not
inc
xor
mov
pop
add
pop
pop
sub
push
mov
jmp
pop
add
push
jmp
mov
add
add
jmp
push
push
push
pop
jmp
pop
push
mov
push
jmp
add
pop
mov
push
mov
push
mov
xor
add
pop
push
mov
add
pop
xor
xor
xor
pop
add
xchg
mov
btr
pushf
jmp
and
push
sub
pop
shr
jmp
mov
pop
push
mov
jmp
mov
sub
mov
add
sub
add
add
sub
add
mov
add
jmp
sub
jmp
mov
push
jmp
mov
push
notl
mov
jmp
add
add
add
jmp
mov
jmp
mov
mov
add
jmp
pushl
jmp
mov
jmp
pop
xor
pushl
pop
jmp
sub
pop
pop
jmp
push
mov
or
sub
sub
pop
jmp
xor
pushl
jmp
mov
or
mov
push
jmp
push
mov
add
shl
xor
add
pop
sub
sub
pop
add
jmp
add
jmp
sub
mov
pushl
pushl
jmp
neg
jmp
popl
pop
push
push
mov
push
mov
mov
sub
jmp
sub
mov
mov
jmp
mov
push
jmp
add
add
add
jmp
push
mov
jmp
shr
shr
jmp
sub
mov
add
push
mov
inc
sub
mov
jmp
pop
add
xchg
mov
jmp
xor
neg
add
add
pop
add
jmp
pop
jmp
pop
popl
mov
movzwl
jmp
push
mov
add
pop
xchg
pop
push
push
mov
mov
mov
add
dec
push
sub
mov
add
sub
push
jmp
sub
pushl
pop
add
jmp
pop
xor
jmp
sub
sub
add
add
jmp
push
jmp
and
xor
xor
pop
xor
push
pop
pop
and
pushl
pushl
jmp
sub
sub
jmp
push
mov
pushl
pop
push
jmp
add
jmp
pop
add
pop
xor
xor
jmp
add
jmp
pop
jmp
sub
pop
shr
shr
jmp
add
not
push
push
jmp
sub
mov
mov
xor
mov
add
sub
jmp
pop
sub
add
add
push
mov
jmp
pop
add
pop
xor
pop
jmp
push
addl
pop
sub
mov
pop
pop
or
add
push
mov
shl
add
and
pop
xchg
not
xchg
sub
jmp
mov
push
mov
add
jmp
mov
pop
jmp
pop
mov
pop
push
push
push
pop
xor
add
shr
add
mov
jmp
mov
jmp
xor
jmp
pop
jmp
pushl
jmp
sub
jmp
sub
mov
add
sub
pop
add
push
jmp
pop
add
sub
add
pop
push
jmp
pop
sub
mov
push
mov
addl
pop
jmp
jmp
add
pop
jmp
pop
xchg
mov
jmp
push
pop
shr
and
add
jmp
push
mov
add
mov
add
add
jmp
xor
pop
add
pop
add
jmp
push
push
push
pop
jmp
push
mov
jmp
add
add
sub
jmp
jmp
push
mov
mov
pop
add
mov
add
push
mov
jmp
add
add
jmp
add
jmp
xor
shr
jmp
sub
mov
add
xor
mov
add
push
mov
jmp
pop
mov
push
pop
sub
mov
mov
shl
xor
sub
jmp
sub
mov
add
sub
mov
mov
add
jmp
and
jmp
push
mov
jmp
add
mov
add
jmp
add
sub
sub
add
sub
pop
push
mov
push
mov
mov
mov
pop
pop
pushl
pop
jmp
add
mov
jmp
push
mov
add
sub
xchg
pop
jmp
mov
push
jmp
add
push
push
pop
shr
jmp
pop
jmp
push
popl
addl
pop
push
push
jmp
pop
and
pop
xor
jmp
xor
xor
pop
jmp
pop
and
shl
dec
push
mov
xor
pop
push
mov
add
jmp
xor
mov
jmp
mov
add
pop
jmp
mov
jmp
pop
push
mov
add
pop
sub
and
sub
add
pushl
pop
push
push
pop
add
add
xchg
jmp
mov
push
mov
add
jmp
pop
pop
push
mov
sub
mov
mov
not
jmp
mov
jmp
mov
push
mov
add
add
xchg
pop
push
pop
add
pop
mov
pushl
pop
add
jmp
mov
add
add
xchg
jmp
mov
mov
xor
pop
sub
pop
xor
xor
xor
mov
mov
push
pushl
jmp
add
jmp
add
pop
push
mov
jmp
push
mov
jmp
mov
sub
jmp
add
pushw
mov
jmp
pop
add
add
sub
mov
mov
xor
xor
push
mov
jmp
mov
jmp
lods
push
push
push
jmp
mov
mov
push
jmp
pushl
pop
popl
mov
pushl
pop
add
push
sub
jmp
lods
jmp
push
mov
jmp
add
pushl
pushl
pop
jmp
mov
push
mov
add
jmp
xchg
jmp
pushl
pushl
mov
add
push
mov
jmp
xor
shl
dec
shr
jmp
pop
pop
push
push
jmp
mov
sub
mov
add
and
jmp
pop
add
pop
push
mov
jmp
and
shl
neg
add
push
sub
mov
mov
neg
push
mov
add
pop
mov
jmp
pop
jmp
mov
sub
mov
push
mov
push
mov
push
mov
add
pop
jmp
pushl
pop
popl
pop
push
mov
add
mov
add
inc
push
mov
add
sub
sub
pop
push
jmp
mov
mov
add
push
mov
push
mov
mov
pop
pop
mov
add
push
mov
push
jmp
sub
add
pop
sub
sub
jmp
neg
inc
sub
jmp
mov
add
add
sub
push
mov
mov
add
add
add
sub
sub
push
push
mov
jmp
xor
jmp
push
mov
inc
shl
and
jmp
add
and
mov
jmp
neg
push
push
jmp
pop
jmp
mov
pushl
jmp
shl
add
and
add
sub
push
subl
jmp
mov
jmp
push
jmp
sub
jmp
neg
shl
neg
xor
mov
pop
not
not
and
xor
sub
xor
mov
add
sub
pop
jmp
add
push
pushl
pop
popl
pop
sub
not
jmp
pushl
mov
add
push
mov
sub
sub
jmp
dec
neg
shr
inc
jmp
add
jmp
xor
sub
add
add
push
jmp
sub
sub
mov
jmp
add
jmp
xor
xor
jmp
add
pop
add
xchg
pop
push
mov
mov
pop
mov
jmp
pop
xchg
jmp
push
mov
mov
jmp
add
sub
xor
add
add
jmp
pop
jmp
pushl
mov
add
popl
mov
mov
push
pushf
jmp
mov
add
jmp
pushl
jmp
pop
sub
jmp
not
sub
sub
xor
or
pop
sub
xor
push
push
pushl
pop
add
jmp
push
mov
sub
jmp
xor
pop
jmp
mul
push
mov
push
pushf
jmp
add
jmp
xchg
mov
mov
mov
sub
mov
mov
xor
jmp
mov
jmp
mov
sub
mov
addl
jmp
push
mov
add
push
jmp
xchg
mov
movzbl
jmp
push
pushl
pop
add
push
jmp
pop
sub
sub
add
pushw
jmp
add
add
pop
mov
add
jmp
jmp
mov
jmp
mov
not
inc
shl
shl
not
shl
sub
jmp
add
xchg
mov
push
push
push
mov
jmp
pop
jmp
pop
mov
sub
mov
push
push
pop
not
jmp
mov
addl
jmp
push
mov
jmp
add
push
mov
push
mov
jmp
add
jmp
pop
jmp
mov
push
mov
push
mov
mov
neg
push
mov
or
not
inc
or
add
dec
sub
xor
pop
jmp
push
mov
add
jmp
or
xor
add
pop
jmp
mov
pop
pop
sub
add
jmp
sub
mov
mov
add
sub
mov
push
mov
push
mov
jmp
xchg
jmp
shr
shl
and
neg
xor
jmp
pop
add
sub
mov
add
jmp
mov
push
mov
jmp
mov
jmp
xor
jmp
mov
mov
pop
pop
not
mov
pop
add
jmp
push
jmp
pop
pop
shr
jmp
add
sub
xchg
pop
mov
mov
add
jmp
mov
push
jmp
shr
xor
jmp
pop
push
mov
add
sub
xchg
pop
jmp
mov
pushl
pop
popl
mov
mov
push
mov
jmp
and
jmp
pop
add
pop
jmp
pop
push
xorl
pop
push
mov
xor
pop
pop
xor
mov
add
push
push
mov
jmp
dec
not
push
jmp
add
jmp
add
push
jmp
add
sub
mov
add
jmp
mov
add
add
subl
sub
mov
mov
add
pop
jmp
sub
add
mov
add
jmp
mov
add
pop
pop
add
push
jmp
push
mov
add
pop
add
xor
xor
xor
mov
push
push
mov
add
sub
jmp
mov
jmp
pop
jmp
push
push
mov
mov
sub
pop
xor
pop
push
mov
jmp
push
mov
jmp
add
mov
add
add
xor
xor
xor
jmp
or
je
push
mov
push
pushl
pop
sub
mov
sub
mov
addl
pop
add
add
xor
jmp
add
sub
add
jmp
neg
xchg
and
jmp
pop
sub
pop
push
jmp
mov
push
mov
add
add
xchg
jmp
pushl
pop
push
push
pop
push
push
pop
push
jmp
pop
mov
push
pop
jmp
add
sub
mov
add
push
pushl
jmp
sub
add
add
mov
add
add
jmp
add
pop
xor
xor
xor
pop
push
mov
mov
push
jmp
pop
jmp
add
pop
push
mov
shl
jmp
xor
not
xchg
inc
jmp
add
add
xchg
pop
sub
mov
push
push
pop
push
jmp
mov
push
push
jmp
pop
xor
push
subl
jmp
and
xor
jmp
sub
pop
add
add
mov
add
xchg
pop
incw
pushf
jmp
xor
jmp
pop
add
jmp
add
mov
add
and
push
jmp
mov
neg
xor
add
mov
add
jmp
sub
pop
xor
xor
xor
mov
push
mov
jmp
mov
pushl
jmp
dec
xor
jmp
sub
pop
mov
add
movzbl
pushl
pushl
pop
push
mov
jmp
mov
mov
pop
push
mov
not
sub
jmp
add
jmp
lods
push
sub
mov
mov
push
jmp
mov
push
pop
jmp
sub
push
mov
mov
jmp
inc
xor
mov
pop
add
jmp
add
add
jmp
sub
jmp
pop
add
push
mov
push
mov
jmp
sub
add
jmp
sub
xchg
pop
mov
mov
add
push
sub
mov
mov
jmp
mov
pushl
pop
add
and
jmp
lods
sub
mov
jmp
add
add
sub
push
mov
shl
sub
sub
add
jmp
inc
and
neg
add
mov
jmp
push
mov
xor
jmp
mov
push
push
mov
addl
mov
add
jmp
add
pop
popl
jmp
push
mov
push
mov
jmp
mov
add
sub
sub
mov
push
jmp
sub
xor
xor
pop
add
pushl
pop
add
push
mov
jmp
mov
and
jmp
pop
xchg
pop
push
mov
add
jmp
add
push
mov
add
jmp
mov
add
jmp
mov
mov
jmp
push
jmp
pushl
pop
add
push
jmp
or
pop
jmp
xor
xor
xor
mov
mov
push
pop
push
mov
push
pushl
pop
add
add
add
sub
mov
jmp
sub
mov
addl
pop
jmp
mov
push
mov
sub
push
mov
addl
popl
jmp
add
mov
jmp
xchg
mov
decw
pushf
jmp
push
jmp
mov
sub
mov
push
mov
jmp
mov
push
pushf
jmp
mov
mov
xor
jmp
mov
push
jmp
mov
push
mov
add
add
jmp
add
add
jmp
mov
push
sub
jmp
mov
add
sub
mov
jmp
push
jmp
push
mov
push
subl
jmp
push
mov
sub
add
push
jmp
sub
pushl
mov
add
add
add
jmp
add
mov
jmp
mov
mov
mov
mov
add
add
jmp
push
mov
neg
xor
xor
xor
jmp
push
mov
sub
jmp
mov
jmp
push
mov
mov
add
pop
push
mov
add
mov
jmp
add
mov
add
xchg
mov
shll
jmp
and
jmp
push
pop
add
push
mov
jmp
sub
mov
mov
jmp
popl
mov
jmp
add
sub
sub
sub
mov
mov
add
add
sub
pop
pushl
pop
add
jmp
pushl
mov
push
push
jmp
xor
jmp
mov
xor
inc
shr
sub
add
pop
mov
push
mov
jmp
sub
pop
sub
jmp
mov
add
jmp
add
jmp
inc
sub
sub
mov
jmp
add
add
add
sub
jmp
mov
sub
pop
shr
xor
jmp
push
mov
jmp
jmp
neg
push
mov
or
pop
jmp
push
jmp
mov
jmp
pop
mov
add
jmp
pushl
popf
pop
sbb
pushf
jmp
push
pop
push
mov
push
mov
mov
jmp
mov
push
mov
mov
mov
jmp
pop
add
push
jmp
push
mov
sub
mov
add
add
add
mov
push
jmp
add
add
pop
mov
add
xor
xor
jmp
pop
sub
jmp
add
jmp
mov
pop
shl
sub
sub
sub
jmp
pushl
pop
add
push
mov
pushl
pushl
pop
push
mov
push
pop
add
push
mov
add
mov
jmp
add
push
mov
jmp
sub
jmp
mov
xor
pop
or
sub
jmp
mov
mov
jmp
mov
push
jmp
sub
mov
pop
add
jmp
sub
pop
push
mov
push
mov
mov
sub
pop
mov
add
add
jmp
add
jmp
sub
jmp
pop
jmp
sub
addl
push
mov
jmp
add
sub
pop
sub
add
jmp
sub
mov
mov
add
push
mov
push
push
jmp
push
pop
dec
inc
xor
mov
jmp
add
xchg
jmp
xor
sub
pop
push
push
mov
mov
xor
mov
add
sub
pop
add
jmp
pop
push
mov
jmp
mov
mov
push
jmp
sub
add
sub
mov
mov
dec
not
inc
shl
jmp
pop
add
push
popl
pushl
mov
jmp
xor
pop
pushl
pushl
pop
add
push
mov
add
add
xchg
jmp
mov
push
mov
jmp
mov
sub
mov
push
pushl
pop
push
jmp
subw
sub
addw
pop
push
mov
jmp
pop
xor
push
mov
mov
pop
jmp
pop
shl
jmp
pop
push
jmp
push
jmp
push
push
push
jmp
mov
not
push
mov
and
jmp
push
jmp
add
add
mov
push
push
mov
push
mov
add
add
xchg
pop
add
add
jmp
mov
pushl
mov
jmp
push
jmp
xor
xor
jmp
add
add
jmp
push
mov
mov
pop
pushl
pop
add
push
mov
not
xor
or
xor
jmp
not
xchg
pop
xor
mov
jmp
mov
jmp
lods
jmp
push
mov
jmp
push
push
mov
jmp
dec
add
add
pop
mov
push
mov
jmp
push
push
mov
jmp
mov
add
jmp
push
mov
jmp
pop
not
inc
push
jmp
mov
jmp
add
add
sub
jmp
mov
mov
mov
jmp
xchg
pop
jmp
pop
push
push
mov
shl
jmp
add
push
mov
add
shl
neg
jmp
push
mov
push
mov
add
pop
jmp
push
mov
mov
sub
add
add
pop
xor
jmp
mov
jmp
push
mov
add
pop
pop
add
add
jmp
sub
add
pop
jmp
pop
push
push
pop
mov
pushl
jmp
pop
shl
xor
add
push
mov
jmp
pop
sub
jmp
add
mov
push
mov
mov
push
mov
add
jmp
mov
pushl
mov
add
add
jmp
mov
mov
pop
mov
add
or
shr
sub
xor
pushl
pop
jmp
push
jmp
xor
jmp
sub
xchg
mov
mov
push
mov
add
push
mov
jmp
mov
jmp
pop
jmp
pop
mov
pushl
pushl
pop
jmp
pop
xchg
pop
mov
mov
add
jmp
xor
xor
xor
jmp
mov
xor
mov
push
mov
add
add
xchg
jmp
lods
add
jmp
sub
add
sub
sub
add
jmp
sub
mov
push
mov
mov
add
push
mov
add
sub
jmp
push
mov
push
mov
mov
mov
pop
mov
mov
push
jmp
shl
neg
inc
sub
sub
pop
add
add
sub
jmp
mov
jmp
mov
add
push
push
mov
push
jmp
xchg
pop
mov
push
mov
push
mov
add
pop
and
neg
sub
and
add
jmp
or
jmp
shr
push
mov
xor
sub
mov
add
push
mov
xor
pop
add
pop
add
sub
jmp
push
mov
jmp
mov
mov
add
mov
add
add
sub
jmp
push
push
jmp
add
sub
sub
jmp
mov
sub
sub
add
pop
mov
add
jmp
mov
add
shr
sub
add
add
sub
pop
push
push
jmp
xor
mov
add
push
mov
not
xor
jmp
dec
not
jmp
push
push
mov
jmp
pushl
mov
add
popl
mov
sub
mov
jmp
sub
jmp
mov
add
mov
add
sub
mov
mov
jmp
and
pop
and
sub
not
jmp
pop
jmp
sub
add
pop
mov
add
sub
xchg
jmp
pop
xchg
mov
imul
push
pushf
jmp
xor
add
jmp
mov
push
mov
add
pop
push
mov
sub
sub
xor
and
neg
xor
add
jmp
mov
pushl
pushl
pop
add
popl
mov
mov
jmp
sub
jmp
sub
pop
add
xchg
pop
mov
add
jmp
pushl
jmp
mov
mov
jmp
mov
add
jmp
mov
push
sub
push
popl
push
mov
add
jmp
notl
jmp
shl
jmp
pop
pop
push
mov
add
jmp
mov
mov
xor
pushl
jmp
mov
jmp
xor
jmp
mov
add
push
mov
add
pop
xchg
pop
pushl
jmp
sub
add
add
sub
sub
jmp
mov
add
shl
push
mov
sub
add
pop
jmp
pop
xchg
jmp
pop
jmp
pop
jmp
mov
add
xchg
mov
jmp
add
jmp
mov
mov
add
pop
jmp
mov
push
incl
pop
shl
push
jmp
sub
xchg
mov
mov
push
push
mov
mov
add
pop
sub
pop
jmp
xor
sub
sub
push
jmp
xchg
mov
mov
push
mov
add
sub
mov
mov
jmp
mov
mov
shl
neg
push
mov
shr
neg
xor
jmp
sub
pop
mov
add
xor
mov
push
mov
mov
add
add
xchg
pop
push
mov
push
push
jmp
mov
jmp
push
mov
jmp
pop
push
mov
mov
add
add
jmp
sub
pop
jmp
push
mov
mov
pop
add
pushl
jmp
sub
not
jmp
sub
pop
push
mov
jmp
sub
shr
add
push
jmp
pop
jmp
add
jmp
push
mov
add
push
mov
jmp
xor
mov
jmp
mov
add
add
push
jmp
pop
pop
push
mov
shr
or
add
add
pop
mov
push
push
pop
add
add
xor
xor
xor
mov
sub
jmp
mov
push
mov
sub
pop
push
mov
neg
shr
shl
jmp
sub
jmp
add
jmp
push
mov
jmp
mov
sub
mov
addl
jmp
sub
add
pop
xor
xor
xor
jmp
mov
push
mov
push
mov
and
push
sub
mov
push
mov
mov
sub
sub
add
jmp
mov
shl
sub
add
pop
sub
not
sub
add
pop
pop
push
mov
add
add
pushl
mov
add
add
add
pop
jmp
mov
mov
pop
mov
jmp
push
mov
jmp
pop
jmp
pop
jmp
pop
and
mov
add
shr
jmp
push
pop
sub
mov
mov
jmp
mov
add
add
xchg
jmp
mov
mov
inc
push
jmp
add
add
jmp
pop
xchg
pop
add
push
mov
mov
sub
pop
xor
xor
xor
jmp
push
jmp
xor
pop
xor
add
push
mov
mov
push
mov
add
jmp
add
sub
jmp
add
xor
mov
pop
push
mov
jmp
add
push
mov
add
sub
jmp
pop
push
mov
add
pop
push
pushl
pop
popl
mov
div
movzbw
jmp
xor
pop
sub
shr
jmp
mov
mov
add
push
jmp
sub
mov
add
sub
jmp
xor
pop
push
mov
push
mov
xor
pop
xor
xor
pop
jmp
pop
push
pushl
pop
popl
pop
jmp
mov
add
push
mov
add
pop
xchg
pop
and
pushl
pop
add
or
shl
sub
mov
mov
add
push
jmp
mov
add
push
jmp
sub
sub
push
mov
jmp
sub
push
mov
sub
add
push
mov
xor
xor
add
pop
pop
mov
add
push
mov
add
jmp
mov
jmp
pushl
pop
add
jmp
mov
jmp
add
push
mov
and
pop
jmp
jmp
xor
xor
jmp
add
add
pop
add
add
jmp
mov
sub
mov
jmp
push
mov
xor
jmp
sub
push
mov
push
jmp
mov
jmp
popl
pop
jmp
push
sub
mov
mov
mov
pop
add
or
push
mov
jmp
xor
jmp
push
push
push
jmp
not
jmp
mov
and
push
jmp
mov
sub
pushl
pop
push
push
pop
add
add
jmp
xor
jmp
add
xor
xor
xor
pop
jmp
pop
add
mov
jmp
mov
and
pop
shl
inc
push
mov
sub
add
add
jmp
sub
push
jmp
push
mov
jmp
add
push
mov
add
jmp
xor
jmp
mov
jmp
mov
jmp
add
pop
jmp
push
mov
sub
pop
xor
jmp
add
popl
jmp
pop
pop
jmp
pop
mov
pop
add
pop
add
push
jmp
mov
jmp
push
jmp
push
mov
push
jmp
mov
xor
mov
push
jmp
mov
add
xor
pop
jmp
mov
push
mov
add
sub
pop
add
push
jmp
sub
mov
sub
mov
jmp
add
sub
push
push
jmp
push
mov
mov
push
mov
add
pop
push
mov
not
jmp
mov
jmp
mov
mov
jmp
xor
xor
shl
jmp
sub
sub
pop
shr
not
add
add
jmp
mov
pushw
pop
inc
add
push
push
mov
push
mov
jmp
xor
pop
idiv
push
sub
mov
jmp
sub
push
jmp
sub
sub
sub
pop
jmp
mov
mov
add
mov
jmp
mov
add
pop
add
xchg
mov
jmp
sub
sub
add
jmp
pop
xchg
pop
mov
push
pushl
pop
push
mov
add
jmp
push
mov
jmp
pushl
pop
add
push
mov
sub
add
sub
sub
jmp
pushl
pop
add
add
xchg
pop
push
mov
sub
sub
add
add
pop
add
push
push
mov
mov
jmp
mov
jmp
push
mov
jmp
pop
jmp
push
mov
jmp
push
mov
jmp
and
jmp
push
mov
xor
pop
sub
pushl
pop
add
jmp
mov
jmp
pop
add
add
mov
jmp
neg
jmp
add
jmp
sub
mov
add
push
mov
sub
pop
mov
add
jmp
mov
push
mov
push
mov
pop
mov
jmp
mov
jmp
add
xchg
mov
push
mov
push
mov
push
mov
xor
xor
add
pop
add
sub
pop
push
mov
sub
sub
add
mov
add
xchg
mov
mov
sub
mov
mov
add
push
mov
mov
mov
jmp
push
mov
jmp
push
mov
jmp
mov
and
pop
inc
xor
push
push
mov
push
jmp
mov
pop
or
mov
jmp
sub
mov
sub
jmp
or
sub
add
mov
add
push
pushl
pop
jmp
pop
jmp
push
jmp
mov
not
shl
shr
shl
jmp
add
sub
and
jmp
xor
xor
xor
mov
shlb
pushf
jmp
mov
mov
add
jmp
mov
not
sub
add
jmp
push
mov
mov
or
sub
mov
jmp
push
mov
or
mov
add
shl
push
jmp
mov
add
or
jmp
push
push
mov
mov
pop
push
mov
sub
jmp
sub
jmp
push
mov
jmp
sub
mov
push
mov
jmp
and
add
mov
mov
add
add
add
mov
add
push
mov
add
jmp
pop
shl
jmp
mov
jmp
add
sub
pop
add
jmp
pushl
jmp
sub
pop
sub
jmp
mov
or
pop
sub
add
jmp
shr
push
jmp
or
pop
jmp
add
jmp
xor
xor
xor
mov
mov
movzbw
push
pushf
jmp
mov
jmp
mov
pop
add
add
sub
pop
jmp
xor
xor
xor
xor
jmp
sub
push
mov
dec
sub
not
add
shr
add
sub
jmp
shr
push
negl
mov
jmp
xchg
jmp
add
sub
push
jmp
popl
jmp
add
xchg
pop
add
jmp
xor
mov
push
jmp
add
add
mov
add
sub
jmp
pushl
pop
add
jmp
add
push
mov
shl
neg
neg
dec
shr
add
add
pop
jmp
add
pop
jmp
push
push
mov
mov
pop
dec
jmp
add
push
mov
push
jmp
pop
jmp
mov
mov
add
add
sub
pop
inc
jmp
add
add
sub
jmp
pushw
mov
mov
add
push
mov
sub
add
jmp
jmp
sub
jmp
xor
jmp
mov
jmp
inc
xor
push
jmp
mov
add
push
mov
sub
jmp
push
mov
add
add
jmp
push
push
jmp
xchg
mov
push
popl
jmp
sub
xchg
jmp
sub
jmp
push
pushl
pop
popl
pop
jmp
pop
jmp
push
jmp
sub
add
push
mov
shl
sub
add
pop
mov
add
push
pushl
mov
push
mov
push
mov
inc
add
inc
add
add
pop
add
xor
xor
xor
pop
popl
jmp
mov
push
push
mov
mov
pop
jmp
pop
xor
jmp
mov
mov
push
mov
shl
jmp
push
mov
add
jmp
xchg
jmp
mov
jmp
mov
mov
inc
jmp
xchg
pop
push
jmp
pop
push
mov
inc
dec
shr
shr
add
sub
pop
jmp
mov
push
mov
push
mov
add
jmp
push
mov
jmp
add
pop
xor
add
pop
pop
add
xchg
jmp
add
add
xchg
jmp
mov
not
inc
sub
and
sub
sub
pop
add
add
jmp
add
pop
push
jmp
push
xorl
pushl
mov
jmp
mov
add
pop
jmp
mov
mov
and
pushl
pop
jmp
xor
mov
pushl
jmp
push
sub
mov
mov
push
jmp
push
mov
push
pop
add
sub
jmp
sub
add
pop
pushl
mov
sub
mov
mov
add
jmp
mov
sub
mov
mov
push
jmp
mov
mov
jmp
sub
jmp
and
jmp
mov
jmp
push
mov
push
pop
add
sub
xchg
pop
mov
push
jmp
mov
add
add
xchg
pop
jmp
push
push
mov
sub
mov
pop
add
mov
add
sub
add
jmp
or
pop
or
jmp
sub
jmp
push
mov
push
mov
sub
xor
pop
add
sub
sub
pop
pushl
mov
add
add
jmp
mov
mov
jmp
xor
mov
pop
jmp
xchg
pop
bts
pushf
jmp
mov
add
sub
sub
pop
add
pop
jmp
mov
mov
xor
pop
sub
add
jmp
mov
jmp
pushl
mov
add
popl
mov
push
jmp
pushl
jmp
xor
mov
pop
jmp
mov
sub
mov
jmp
push
mov
jmp
add
pushl
mov
add
add
push
mov
mov
neg
push
jmp
sub
push
push
mov
jmp
pop
mov
push
pop
push
jmp
add
add
movzbw
pushw
mov
jmp
push
pop
jmp
mov
add
add
sub
pop
sub
mov
jmp
add
jmp
add
xor
xor
xor
mov
jmp
mov
jmp
xor
xor
xor
mov
pushl
mov
push
jmp
push
mov
mov
add
add
push
pushl
pop
jmp
push
mov
not
shr
add
mov
pop
jmp
sub
pop
jmp
pop
push
mov
add
add
xchg
mov
add
jmp
push
mov
addl
jmp
jmp
push
sub
jmp
push
pop
push
push
pop
push
mov
sub
pop
dec
push
mov
sub
add
pop
push
jmp
mov
jmp
mov
mov
jmp
shl
shr
add
not
shr
xor
mov
mov
jmp
mov
push
mov
add
add
jmp
push
mov
push
pushl
pop
push
mov
jmp
mov
dec
sub
push
mov
add
pop
add
pop
push
jmp
pop
push
mov
jmp
xor
not
not
add
jmp
add
jmp
mov
add
jmp
sub
dec
jmp
add
or
push
mov
shl
inc
jmp
sub
pop
jmp
push
pop
sub
and
add
xor
jmp
sub
sub
sub
mov
push
push
mov
mov
mov
add
not
jmp
mov
pop
add
mov
add
push
mov
not
push
jmp
push
mov
add
add
xchg
pop
add
pop
xchg
pop
shlw
pushf
jmp
shl
jmp
sub
mov
addl
pop
push
mov
jmp
sub
jmp
or
mov
add
jmp
pop
jmp
mov
addl
pop
push
push
pushl
pop
add
and
push
push
mov
mov
pop
jmp
mov
sub
sub
sub
push
mov
jmp
mov
push
jmp
pop
add
jmp
mov
mov
or
jmp
push
jmp
pop
jmp
mov
push
mov
add
jmp
sub
pop
add
pop
push
mov
push
mov
jmp
mov
add
dec
and
sub
mov
pop
push
jmp
push
pushl
jmp
sub
pushf
jmp
sub
jmp
xchg
jmp
pushl
pop
add
sub
mov
jmp
push
mov
jmp
pop
or
je
pushl
push
sub
mov
mov
mov
sub
pop
jmp
mov
shl
jmp
push
mov
jmp
add
jmp
xchg
mov
mov
jmp
add
push
mov
add
add
xchg
pop
sub
mov
mov
jmp
push
mov
sub
jmp
pushl
popf
pop
rcrb
pushf
jmp
neg
push
mov
dec
inc
sub
jmp
xor
sub
add
add
jmp
push
mov
jmp
xor
xor
xor
mov
mov
mov
add
mov
push
mov
push
jmp
mov
sub
push
popl
push
mov
add
jmp
add
sub
pop
jmp
pop
mov
push
pushl
pop
add
sub
push
mov
and
mov
add
jmp
pop
sub
jmp
and
or
add
add
jmp
sub
push
mov
add
pop
pop
add
jmp
pop
push
push
mov
add
jmp
sub
mov
mov
or
add
jmp
mov
mov
add
sub
add
jmp
and
sub
add
pop
sub
xchg
pop
jmp
add
sub
mov
push
mov
jmp
add
jmp
mov
push
mov
and
add
dec
push
mov
dec
jmp
push
mov
push
mov
or
mov
add
add
xor
jmp
push
mov
push
mov
sub
sub
add
pop
sub
mov
push
mov
mov
xor
jmp
pop
sub
add
sub
pop
xchg
pop
mov
push
mov
addl
pop
add
push
push
pop
jmp
add
mov
jmp
pop
xchg
pop
jmp
not
or
jmp
pop
jmp
pop
popl
pop
shl
sub
push
xchg
not
push
pushl
pop
popl
jmp
inc
jmp
mov
pop
sub
sub
jmp
push
jmp
xchg
mov
or
jmp
or
push
jmp
add
mov
push
mov
add
sub
sub
pop
jmp
sub
mov
pop
mov
jmp
mov
jmp
pop
pop
push
pushl
pop
popl
pop
idiv
push
jmp
pop
or
shl
push
mov
jmp
push
mov
jmp
push
pushl
mov
jmp
xchg
pop
jmp
push
mov
mov
add
pop
jmp
pop
jmp
and
xor
push
mov
xor
mov
jmp
mov
jmp
pop
push
mov
inc
jmp
xor
add
jmp
push
mov
addl
jmp
push
mov
or
shl
jmp
add
add
pop
sub
pop
jmp
mov
jmp
add
pop
push
mov
add
inc
jmp
pushl
mov
push
mov
push
mov
jmp
pushl
pop
sub
mov
push
pop
add
jmp
push
mov
shl
jmp
mov
jmp
push
pop
push
mov
sub
pop
add
addl
pop
pushl
pop
add
push
mov
sub
pop
push
mov
jmp
mov
jmp
mov
mov
xor
pop
push
jmp
mov
add
jmp
push
mov
mov
mov
pop
dec
and
sub
add
pushl
pop
add
add
jmp
xor
mov
pushw
mov
push
mov
mov
jmp
push
subl
pop
add
mov
add
jmp
mov
add
jmp
add
sub
jmp
mov
push
mov
push
jmp
mov
pop
sub
pop
add
add
jmp
mov
popl
pushl
mov
add
push
jmp
add
add
pop
push
mov
push
jmp
pop
sub
jmp
pop
xor
pushl
pop
add
push
jmp
and
jmp
inc
xchg
add
xor
add
xor
or
jmp
xor
sub
mov
pop
push
jmp
and
jmp
push
push
pushl
pop
push
mov
add
add
xchg
pop
shl
sub
mov
pop
sub
pop
jmp
inc
jmp
addw
pop
sub
mov
pop
pushl
pop
add
neg
shl
sub
jmp
xor
add
inc
add
mov
pop
push
mov
mov
pop
jmp
sub
add
add
jmp
xor
or
pop
add
xor
pop
jmp
xchg
pop
mov
push
mov
mov
push
push
mov
add
sub
xor
jmp
add
jmp
sub
jmp
push
push
mov
mov
jmp
mov
push
mov
jmp
pop
add
push
mov
add
jmp
mov
mov
push
mov
mov
jmp
and
pushl
jmp
mov
add
sub
jmp
pop
mov
jmp
push
push
mov
jmp
and
push
mov
xor
pop
add
jmp
push
pop
pop
push
push
mov
sub
mov
mov
add
jmp
pushl
mov
add
push
push
pop
jmp
sub
pop
add
add
push
mov
shr
sub
add
add
jmp
sub
add
push
mov
jmp
add
pop
push
push
push
jmp
mov
sub
jmp
mov
mov
xor
push
push
mov
jmp
mov
push
jmp
lods
pushw
mov
push
mov
sub
mov
sub
jmp
mov
jmp
sub
mov
add
xchg
jmp
pop
push
mov
add
jmp
xor
sub
pop
neg
push
push
jmp
not
jmp
mov
push
mov
push
pop
jmp
popl
jmp
add
add
jmp
add
jmp
push
push
mov
push
jmp
pop
jmp
add
jmp
sub
or
sub
shl
sub
add
jmp
add
add
xor
xor
xor
pop
jmp
xor
jmp
add
sub
pop
add
add
jmp
pop
jmp
mov
mov
push
jmp
and
pop
or
je
pushl
xorl
pop
push
jmp
add
mov
add
jmp
push
mov
mov
push
mov
add
jmp
mov
jmp
add
push
pushl
mov
jmp
pop
push
pushl
jmp
and
pushl
mov
add
push
mov
jmp
push
mov
add
mov
jmp
pushl
pop
push
mov
mov
push
mov
push
push
jmp
mov
add
pop
xchg
pop
mul
jmp
pop
add
jmp
mov
add
jmp
sub
mov
push
push
mov
sub
mov
jmp
sub
mov
mov
neg
sub
add
pop
sub
xchg
jmp
pop
xchg
not
xchg
jmp
mov
push
mov
jmp
push
mov
push
jmp
mov
sub
pop
mov
jmp
sub
jmp
pop
jmp
add
add
sub
add
add
pop
add
xchg
mov
push
sub
mov
sub
mov
mov
add
neg
and
sub
mov
pop
mov
pushl
pop
jmp
push
mov
mov
not
dec
or
xor
xor
jmp
sub
push
mov
jmp
pop
popl
pop
push
mov
add
sub
jmp
mov
add
popl
mov
pushl
mov
add
sub
mov
push
jmp
mov
add
mov
mov
add
xor
jmp
shr
push
mov
jmp
mov
addl
pop
add
push
mov
jmp
shl
push
mov
add
jmp
push
mov
jmp
add
add
push
jmp
sub
pop
jmp
pushl
jmp
add
sub
add
push
mov
xor
shl
or
shr
shl
add
add
jmp
push
jmp
push
mov
mov
add
add
xchg
mov
add
push
mov
add
jmp
push
jmp
xor
sub
sub
add
jmp
add
add
jmp
sub
shl
xor
jmp
push
mov
add
pop
pop
push
mov
push
mov
add
sub
sub
pop
jmp
add
sub
jmp
dec
inc
add
push
mov
add
pop
push
subl
mov
jmp
xor
xor
pop
mov
jmp
push
sub
jmp
xchg
jmp
xchg
pop
jmp
push
pop
jmp
neg
jmp
push
push
mov
inc
xor
jmp
pop
jmp
push
pushl
pop
push
mov
jmp
add
pop
sub
jmp
pop
push
mov
push
pop
jmp
shl
add
add
pop
sub
jmp
sub
jmp
mov
btc
pushf
jmp
mov
push
mov
add
add
jmp
xor
mov
pop
add
pop
xchg
pop
sub
mov
sub
jmp
add
jmp
mov
push
mov
add
pop
pop
push
push
mov
jmp
add
mov
push
mov
jmp
push
mov
jmp
mov
xor
mov
mov
jmp
mov
add
pop
dec
inc
sub
sub
jmp
mov
pushl
mov
jmp
addl
pop
add
push
mov
add
jmp
add
jmp
pushl
pop
popl
pop
jmp
add
jmp
mov
add
pop
push
mov
sub
pop
xchg
pop
mov
push
mov
jmp
push
mov
add
pop
push
jmp
pop
push
mov
push
mov
sub
sub
sub
pop
push
mov
sub
pop
jmp
mov
push
mov
sub
mov
addl
mov
add
push
push
push
pop
xchg
inc
xchg
xor
or
add
mov
pop
sub
add
add
sub
pop
push
jmp
shr
pushl
jmp
mov
push
mov
and
pop
push
jmp
and
jmp
add
jmp
addl
jmp
pop
jmp
push
pop
add
sub
mov
jmp
add
add
jmp
not
jmp
add
pop
shl
push
jmp
add
jmp
neg
neg
add
not
jmp
mov
jmp
dec
jmp
pop
mov
jmp
push
pushl
pop
sub
mov
mov
sub
mov
mov
jmp
sub
jmp
or
sub
push
mov
jmp
xor
xor
mov
test
pushf
jmp
pop
jmp
pop
and
pushl
mov
add
push
mov
push
push
push
popl
addl
jmp
pushl
pop
jmp
push
pop
sub
jmp
mov
mov
push
push
mov
add
jmp
sub
add
shl
sub
mov
mov
sub
jmp
mov
push
jmp
mov
sub
mov
mov
jmp
pop
add
pop
jmp
pop
popl
jmp
add
jmp
mov
mov
push
mov
mov
pop
pop
jmp
mov
add
sub
jmp
mov
pop
xor
jmp
pop
inc
jmp
add
add
add
sub
jmp
sub
xchg
mov
jmp
mov
push
jmp
xor
xor
xor
mov
jmp
xchg
jmp
pop
sub
pop
xor
xor
xor
jmp
jmp
mov
jmp
or
sub
inc
shl
sub
add
jmp
mov
jmp
mov
inc
shl
jmp
xchg
pop
sub
jmp
mov
add
push
jmp
pushl
mov
jmp
add
xor
xor
xor
pop
jmp
mov
push
mov
add
sub
xchg
jmp
shr
shr
sub
jmp
push
sub
jmp
push
mov
jmp
pop
popl
mov
pushl
pushl
pop
jmp
inc
xor
xor
pop
jmp
add
add
pop
jmp
mov
mov
mov
pop
dec
mov
mov
jmp
pushl
jmp
pop
and
pushl
jmp
lods
jmp
and
jmp
push
mov
sub
jmp
add
jmp
pushl
jmp
pop
jmp
xor
xor
xor
mov
or
pushf
jmp
push
mov
add
add
xchg
pop
mov
jmp
push
push
push
jmp
add
sub
mov
pushl
pop
popl
jmp
push
mov
jmp
pop
add
jmp
inc
sub
sub
push
mov
jmp
push
mov
mov
add
pop
push
jmp
push
mov
pushl
pop
push
push
pushl
pop
push
jmp
sub
pop
jmp
pop
dec
not
push
mov
and
pushl
pop
add
sub
mov
mov
push
jmp
pop
add
pushl
pop
sub
mov
mov
jmp
push
mov
add
add
xchg
jmp
mov
jmp
push
mov
mov
push
mov
jmp
mov
jmp
mov
jmp
mov
add
push
mov
mov
push
mov
shl
jmp
mov
push
mov
add
jmp
pop
sub
mov
push
mov
add
add
xchg
pop
sub
pop
push
push
mov
mov
pop
jmp
mov
push
mov
sub
mov
jmp
mov
jmp
pop
and
and
shr
jmp
mov
jmp
and
jmp
mov
mov
xor
sub
inc
neg
xor
jmp
mov
push
mov
jmp
pop
dec
inc
inc
or
jmp
dec
push
push
push
pop
add
jmp
mov
push
mov
jmp
add
jmp
shr
sub
mov
pop
push
mov
add
jmp
sub
xor
mov
add
xor
jmp
sub
jmp
pop
jmp
pop
add
add
sub
push
mov
push
jmp
add
pop
push
mov
push
sub
mov
jmp
pushw
jmp
mov
push
jmp
push
mov
and
not
xor
push
mov
or
neg
xor
add
pop
push
mov
or
pop
jmp
sub
pop
and
jmp
mov
jmp
push
pop
jmp
sub
mov
mov
add
push
mov
jmp
push
popl
addl
pushl
pop
add
push
jmp
mov
jmp
push
mov
xor
pop
pop
xor
mov
add
push
mov
sub
add
jmp
mov
add
pop
mov
push
push
pop
add
jmp
inc
push
mov
jmp
sub
pop
jmp
pop
popl
pop
mov
pushl
pop
popl
pop
push
push
push
push
jmp
sub
jmp
shl
push
mov
jmp
push
pushl
pop
popl
mov
jmp
push
mov
sub
jmp
add
add
jmp
push
pop
add
push
jmp
mov
sub
pop
xchg
pop
mov
mov
add
push
mov
push
mov
or
pop
push
push
push
pop
jmp
pop
pop
jmp
addl
mov
push
jmp
push
push
push
pop
jmp
pop
sub
sub
push
jmp
add
push
jmp
pop
push
push
mov
jmp
pop
jmp
pop
push
mov
and
pop
shr
push
jmp
mov
add
jmp
and
push
push
mov
mov
pop
xor
mov
add
add
add
jmp
pop
jmp
push
pop
jmp
mov
jmp
pop
add
jmp
push
mov
jmp
mov
sub
pop
xchg
jmp
inc
xor
jmp
add
push
mov
jmp
mov
mov
pop
neg
add
jmp
sub
add
add
add
sub
sub
sub
mov
mov
push
jmp
pop
mov
push
sub
mov
push
mov
add
jmp
push
mov
add
add
xor
xor
xor
mov
popl
jmp
xchg
neg
add
add
pop
xor
jmp
mov
sub
pop
xchg
jmp
add
sub
mov
mov
add
mov
push
jmp
mov
inc
shl
jmp
sub
push
jmp
xchg
pop
push
mov
mov
push
jmp
mov
mov
jmp
mov
jmp
mov
jmp
push
mov
push
mov
push
push
pop
push
mov
push
push
pop
sub
not
shr
jmp
push
push
pushl
pop
add
add
jmp
pushl
popf
pop
sbb
pushf
jmp
mov
push
jmp
mov
pop
add
mov
add
jmp
push
pop
inc
jmp
pop
push
jmp
push
mov
jmp
mov
push
mov
push
push
push
mov
jmp
pop
pushl
pop
jmp
xchg
not
jmp
add
push
jmp
pushl
pop
add
add
push
pushl
mov
add
popl
mov
jmp
add
add
xchg
jmp
sub
jmp
add
mov
add
xchg
mov
or
je
push
push
mov
addl
popl
sub
mov
jmp
pop
shl
sub
push
mov
jmp
xchg
pop
mov
jmp
add
add
jmp
push
mov
jmp
inc
sub
sub
mov
add
xchg
jmp
pop
add
add
sub
jmp
add
add
pop
push
mov
xor
and
inc
shr
shl
sub
sub
pop
jmp
sub
pop
xor
add
mov
jmp
push
mov
add
sub
xchg
pop
mov
jmp
push
jmp
xchg
jmp
pop
sub
mov
mov
add
mov
add
xor
jmp
push
notl
jmp
mov
push
mov
jmp
popl
jmp
push
mov
sub
pop
jmp
xor
pop
add
mov
jmp
add
pop
jmp
pop
push
mov
add
push
push
jmp
push
sub
mov
mov
mov
mov
add
mov
mov
add
mov
add
xor
and
pushl
mov
add
push
push
pop
add
add
xchg
pop
jmp
mov
add
push
push
mov
jmp
sub
mov
mov
push
jmp
mov
jmp
pop
mov
pushl
pop
add
xor
mov
push
mov
add
jmp
mov
pop
add
push
mov
add
pop
sub
sub
sub
jmp
push
mov
push
mov
mov
pop
sub
pop
shl
xor
jmp
sub
add
pushl
jmp
pop
add
sub
sub
jmp
sub
pop
mov
mov
push
jmp
pop
inc
jmp
push
mov
mov
xor
xor
pop
xor
mov
jmp
inc
or
sub
add
add
sub
pop
shl
add
add
mov
add
add
jmp
mov
mov
xchg
not
xchg
pushl
jmp
pop
sub
pop
pop
and
jmp
xchg
pop
push
mov
jmp
push
push
jmp
pop
push
mov
mov
add
add
push
pushl
jmp
dec
shl
add
push
jmp
pop
xchg
mov
mov
pop
jmp
mov
sub
mov
mov
sub
jmp
push
mov
shl
sub
sub
sub
pop
add
add
push
mov
sub
pop
pop
xchg
jmp
add
add
add
jmp
add
push
jmp
or
mov
add
neg
push
push
mov
add
jmp
or
not
or
add
dec
jmp
pop
jmp
add
jmp
add
pop
sub
jmp
xor
jmp
xchg
not
xor
xor
xor
jmp
add
sub
mov
push
jmp
add
pop
push
jmp
mov
push
mov
push
mov
dec
sub
inc
not
sub
jmp
add
add
add
xchg
pop
add
add
xor
xor
xor
pop
rolb
pushf
jmp
mov
mov
add
pop
add
jmp
mov
jmp
not
and
sub
or
pop
xor
mov
sub
pop
xor
jmp
sub
xchg
jmp
push
jmp
push
push
mov
addl
pop
jmp
jmp
mov
push
push
pop
push
push
jmp
pop
add
add
push
mov
jmp
mov
jmp
xor
jmp
push
mov
add
pop
jmp
pushl
jmp
pop
jmp
add
push
mov
jmp
add
sub
xchg
jmp
pop
add
sub
xchg
pop
mov
mov
xor
pushl
jmp
mov
mov
mov
add
inc
xor
sub
push
mov
not
jmp
pop
add
jmp
sub
pop
jmp
add
add
push
mov
sub
pop
pushl
pop
push
mov
add
push
mov
add
pop
xchg
pop
xor
xor
xor
pop
mov
push
mov
jmp
pushl
pop
jmp
mov
add
add
push
jmp
add
push
mov
sub
jmp
mov
xor
pop
add
jmp
mov
add
mov
pop
pop
jmp
sub
mov
push
mov
jmp
add
pop
mov
add
jmp
sub
mov
mov
and
sub
xor
shr
push
mov
add
pop
sub
sub
mov
push
pop
shl
jmp
push
mov
sub
pop
add
pop
xor
xor
xor
pop
add
pushl
pop
jmp
add
sub
add
add
add
pop
push
pushl
pop
popl
pop
sarb
pushf
jmp
add
xor
xor
xor
pop
sub
mov
pushl
jmp
xor
mov
push
mov
push
push
jmp
pop
jmp
shr
jmp
add
sub
pop
add
push
pushl
pop
popl
mov
or
jne
push
mov
add
sub
xchg
pop
mov
jmp
pop
push
mov
add
add
xchg
pop
sub
sub
push
mov
or
sub
not
jmp
shr
jmp
popl
jmp
add
xchg
jmp
mov
push
mov
add
pop
push
mov
jmp
add
mov
add
jmp
mov
add
add
xchg
pop
push
jmp
mov
neg
push
push
mov
push
push
jmp
push
push
mov
push
jmp
mov
mov
pop
add
sub
sub
mov
jmp
sub
jmp
add
pop
mov
add
or
pop
jmp
dec
xchg
not
xchg
jmp
push
mov
jmp
pop
mov
jmp
mov
sub
add
add
sub
push
mov
jmp
push
mov
push
pop
sub
mov
pop
sub
add
add
mov
add
sub
mov
push
jmp
add
pop
sub
xchg
mov
mov
jmp
mov
push
mov
jmp
push
jmp
pop
jmp
sub
sub
sub
add
add
jmp
sub
jmp
push
push
mov
mov
pop
jmp
xchg
pop
add
push
mov
jmp
pushl
pop
add
jmp
add
sub
mov
push
mov
sub
add
shl
neg
jmp
xchg
mov
jmp
sub
xchg
mov
mov
push
mov
mov
jmp
push
mov
or
jmp
xor
xor
xor
mov
decb
pushf
jmp
add
push
mov
add
pop
xor
xor
xor
mov
mov
push
mov
push
mov
push
mov
add
add
xchg
pop
jmp
sub
pop
xchg
pop
mov
jmp
mov
pop
jmp
mov
sub
mov
jmp
add
jmp
not
sub
mov
pop
sub
mov
add
jmp
mov
add
jmp
mov
addl
popl
addl
pop
add
push
mov
sub
jmp
push
jmp
xor
pop
jmp
inc
push
mov
xor
jmp
add
pop
xchg
jmp
mov
push
mov
add
jmp
add
pop
push
jmp
mov
push
mov
push
pop
jmp
mov
add
jmp
xor
xor
add
pop
jmp
add
movzbl
jmp
sub
pop
push
mov
jmp
sub
inc
dec
sub
mov
pop
push
mov
jmp
not
xor
add
jmp
push
mov
jmp
mov
pop
sub
jmp
and
sub
jmp
push
mov
add
add
xchg
pop
popl
jmp
mov
add
add
neg
jmp
not
jmp
mov
sub
push
jmp
sub
jmp
push
push
pop
add
mov
add
add
pop
add
jmp
xor
jmp
and
push
mov
add
pop
inc
sub
jmp
pop
sub
jmp
pop
dec
shl
sub
add
pop
not
sub
or
pop
not
add
or
pop
push
mov
add
pop
push
mov
sub
pop
add
add
jmp
notl
pop
not
jmp
sub
jmp
sub
add
mov
add
jmp
mov
mov
push
mov
mov
shl
not
xor
add
jmp
pushl
pop
push
mov
jmp
add
sub
pop
jmp
mov
add
push
mov
push
push
mov
mov
pop
shr
not
add
add
or
jmp
mov
inc
xor
neg
jmp
add
sub
sub
mov
jmp
sub
jmp
add
pop
push
push
jmp
add
jmp
pop
shr
push
mov
push
push
jmp
push
sub
mov
mov
mov
jmp
mov
pop
or
push
jmp
sub
pop
jmp
push
mov
add
jmp
pop
sub
mov
jmp
push
mov
neg
push
notl
pop
shr
not
neg
jmp
add
push
mov
sub
pop
mov
add
jmp
pushl
pop
add
add
mov
add
jmp
add
push
jmp
popl
pop
sub
mov
push
jmp
mov
jmp
mov
jmp
mov
mov
pop
xor
mov
push
mov
jmp
push
jmp
mov
addl
jmp
mov
pop
add
jmp
jmp
push
mov
mov
mov
add
mov
sub
jmp
pushl
pushl
pushl
pop
add
jmp
push
pop
jmp
mov
push
push
mov
addl
pop
add
push
mov
add
sub
xchg
pop
mov
mov
sub
jmp
pop
jmp
mov
add
jmp
sub
xchg
pop
mov
jmp
add
add
push
mov
mov
push
mov
jmp
push
mov
add
push
mov
sub
mov
add
xor
xor
jmp
add
jmp
mov
jmp
sub
mov
mov
add
sub
xor
xor
xor
jmp
mov
mov
add
mov
add
jmp
pop
jmp
xor
xor
jmp
addl
pop
push
mov
not
inc
xchg
xchg
not
xchg
xor
xor
xor
jmp
pop
xor
jmp
xor
pop
mov
jmp
pop
jmp
sub
mov
pushl
pop
add
jmp
mov
push
jmp
push
jmp
push
mov
addl
jmp
notl
jmp
push
mov
jmp
add
add
xchg
mov
push
mov
add
sub
xchg
pop
mov
mov
add
push
mov
add
jmp
xchg
jmp
mov
movzbw
push
pushf
jmp
push
jmp
sub
mov
add
jmp
push
mov
jmp
mov
and
push
mov
push
mov
xor
add
pop
sub
jmp
mov
jmp
mov
shl
not
not
sub
add
jmp
xchg
mov
push
mov
push
pop
add
push
jmp
xor
jmp
mov
push
mov
add
mov
push
mov
mov
add
jmp
mov
sub
pop
push
jmp
mov
jmp
lods
push
mov
push
subb
jmp
mov
jmp
push
push
mov
add
jmp
add
sub
jmp
pop
not
add
jmp
sub
pop
add
add
mov
jmp
sub
addb
mov
add
shl
jmp
pop
xchg
mov
test
pushf
jmp
mov
add
add
xchg
pop
push
push
mov
mov
dec
jmp
pop
jmp
push
mov
mov
jmp
pop
xor
and
mov
add
not
shr
jmp
add
jmp
mov
mov
sub
pushl
pop
jmp
xor
pop
push
notl
mov
add
push
jmp
mov
push
mov
add
jmp
mov
mov
sub
mov
mov
push
mov
add
pop
jmp
mov
jmp
mov
pushl
pop
jmp
add
add
xchg
mov
push
mov
mov
jmp
add
sub
mov
push
push
mov
push
mov
add
add
xchg
pop
jmp
mov
jmp
mov
add
add
push
mov
push
mov
or
shl
jmp
pop
add
pop
add
mov
mov
add
mov
pop
jmp
mov
add
jmp
pop
mov
add
add
pop
push
jmp
pop
push
jmp
push
mov
jmp
not
jmp
addl
mov
add
push
jmp
pop
jmp
xor
jmp
mov
sub
mov
mov
add
pop
add
xor
pop
sub
add
jmp
add
push
mov
sub
pop
xchg
mov
push
popl
addl
pushl
jmp
push
mov
add
pop
sub
mov
jmp
xchg
jmp
xor
sub
add
jmp
mov
mov
jmp
add
jmp
sub
xchg
pop
jmp
add
jmp
mov
add
pop
sub
xchg
pop
mov
mov
xor
pop
jmp
mov
mov
xor
jmp
mov
jmp
mov
add
jmp
mov
jmp
mov
sub
mov
mov
jmp
mov
jmp
or
jmp
negb
pushf
jmp
mov
sub
pop
mov
pop
add
pushl
jmp
pop
push
mov
push
mov
jmp
add
jmp
mov
shl
or
push
mov
jmp
add
add
mov
add
jmp
mov
jmp
push
mov
push
mov
add
jmp
push
pop
xor
jmp
pop
xchg
pop
jmp
pop
xor
jmp
notl
pop
push
mov
or
jmp
mov
add
pop
sub
xor
xor
xor
mov
jmp
mov
jmp
push
mov
mov
xor
jmp
sub
jmp
mov
push
jmp
mov
mov
mov
add
mov
push
mov
sub
neg
jmp
mov
push
mov
mov
pop
add
sub
push
mov
add
pop
xchg
not
xchg
jmp
add
sub
pop
jmp
pop
mov
add
jmp
push
mov
neg
shl
sub
xor
pop
xor
add
mov
jmp
mov
sub
pop
push
mov
jmp
push
mov
jmp
negw
pushf
jmp
or
jmp
push
push
mov
mov
add
sub
sub
pop
jmp
add
add
mov
add
sub
jmp
add
jmp
mov
push
mov
push
mov
addl
pop
push
push
pop
add
add
add
sub
sub
jmp
xor
jmp
add
sub
add
push
mov
jmp
pop
add
add
pop
jmp
mov
push
pop
push
jmp
pop
popl
jmp
mov
add
jmp
push
pop
shl
inc
and
jmp
push
mov
jmp
add
sub
jmp
add
add
xchg
pop
xor
mov
add
pushl
pushl
pop
add
push
mov
add
add
xchg
pop
sub
mov
sub
mov
jmp
pop
jmp
mov
jmp
mov
add
pop
xor
xor
xor
jmp
push
push
mov
mov
pop
sub
jmp
mov
jmp
add
mov
mov
add
sub
pop
sub
pushw
mov
push
mov
mov
jmp
pushl
pop
add
sub
mov
add
xchg
pop
mov
jmp
mov
sub
mov
addl
jmp
mov
pop
xor
push
mov
mov
pushl
jmp
add
mov
add
jmp
or
mov
add
xor
and
neg
sub
and
pop
jmp
mov
sub
mov
add
mov
add
jmp
xor
push
jmp
sub
add
push
mov
push
jmp
popl
pop
jmp
push
push
jmp
mov
shr
jmp
push
mov
shl
jmp
pop
inc
push
mov
jmp
sub
xor
xor
jmp
add
jmp
push
mov
inc
shr
or
jmp
xchg
pop
add
jmp
mov
pop
add
pop
jmp
sub
push
mov
add
pop
jmp
mov
push
push
pop
push
jmp
xor
jmp
add
push
push
jmp
not
shr
dec
jmp
pop
add
shr
xor
push
mov
sub
mov
pushl
pop
push
jmp
mov
add
push
notl
pop
jmp
mov
jmp
or
sub
jmp
and
mov
jmp
sub
pop
jmp
xchg
xor
sub
add
add
pop
add
push
jmp
add
sub
add
not
inc
xor
mov
pop
add
pushl
mov
add
push
mov
push
mov
sub
neg
shl
sub
shr
jmp
pushl
subl
mov
push
jmp
pop
xchg
mov
jmp
mov
push
mov
add
sub
xchg
pop
mov
push
pop
push
mov
sub
pop
push
mov
add
sub
shr
xor
xor
pop
mov
jmp
sub
push
popl
jmp
sub
xchg
jmp
pushw
jmp
sub
pop
mov
add
xchg
mov
shrw
pushf
jmp
push
pop
push
mov
jmp
xor
jmp
push
pop
jmp
sub
add
pop
add
push
jmp
mov
push
pop
add
jmp
xor
xor
jmp
pop
pop
xor
xor
xor
mov
jmp
sub
mov
push
mov
push
mov
mov
pop
mov
add
push
push
push
jmp
sub
jmp
add
pop
push
mov
push
push
mov
push
mov
jmp
shr
sub
dec
not
jmp
push
mov
sub
xchg
pop
inc
jmp
mov
or
xor
xor
add
pop
add
jmp
or
shr
sub
jmp
pushl
pop
push
push
pop
push
mov
add
add
sub
pop
add
xchg
pop
sub
mov
mov
jmp
sub
mov
jmp
mov
dec
jmp
pop
add
jmp
mov
pop
pop
jmp
pop
push
push
mov
mov
not
and
xor
mov
pop
add
add
pop
jmp
sub
mov
pop
push
jmp
pop
push
mov
push
push
pop
add
push
push
mov
jmp
add
push
mov
mov
add
sub
jmp
xor
push
mov
xor
jmp
mov
add
push
push
jmp
push
mov
push
mov
add
pop
sub
jmp
pop
push
mov
push
mov
push
pop
mov
add
push
push
push
pop
sub
sub
mov
pop
xor
jmp
push
push
jmp
sub
mov
push
mov
add
xor
sub
mov
sub
mov
push
push
pop
jmp
xor
jmp
push
mov
add
pop
push
jmp
xchg
and
xor
sub
pop
and
jmp
pop
pushl
pushl
jmp
mov
add
xchg
jmp
pop
popl
mov
or
pushf
jmp
add
pop
jmp
sub
push
pop
jmp
xchg
pop
push
mov
jmp
mov
add
push
jmp
lods
xor
pushw
jmp
shl
neg
xor
and
pop
xor
jmp
sub
jmp
mov
xor
pop
mov
jmp
pop
pushl
pop
push
mov
jmp
push
push
pop
xor
add
mov
jmp
pop
mov
jmp
pop
add
jmp
sub
sub
jmp
not
inc
jmp
add
pop
add
xor
xor
jmp
pushl
pop
push
jmp
mov
sub
mov
mov
add
add
xor
xor
jmp
xor
jmp
sub
mov
push
mov
mov
jmp
mov
add
neg
push
sub
pop
xor
or
jmp
sub
add
xor
pop
xor
mov
pop
sub
mov
mov
shl
xor
push
mov
push
push
mov
and
add
shl
xor
jmp
pop
add
add
push
mov
jmp
sub
pop
push
mov
sub
sub
add
pop
sub
sub
pushw
jmp
pop
push
jmp
mov
push
mov
shr
add
jmp
mov
jmp
pop
add
add
xchg
jmp
dec
sub
push
pop
pop
push
mov
push
push
push
mov
jmp
mov
sub
mov
mov
not
xor
sub
push
mov
and
dec
inc
and
dec
xor
jmp
xor
add
add
pop
jmp
mov
mov
jmp
mov
jmp
push
jmp
xor
xor
xor
mov
push
mov
jmp
push
mov
push
jmp
mov
neg
dec
xor
jmp
add
add
xchg
pop
jmp
sub
add
jmp
mov
push
mov
sub
sub
pop
sub
jmp
mov
mov
push
mov
jmp
mov
jmp
add
xchg
pop
sub
push
push
mov
not
add
inc
not
dec
not
add
jmp
sub
mov
push
mov
mov
pop
jmp
add
push
mov
add
sub
xchg
pop
mov
mov
sub
mov
mov
push
mov
jmp
pop
shr
neg
not
inc
push
mov
xor
pop
jmp
pop
sub
push
mov
xor
pop
jmp
push
jmp
push
jmp
xor
xor
jmp
push
push
pop
add
jmp
pushl
pop
add
jmp
and
sub
sub
pop
add
pop
jmp
shr
and
push
mov
jmp
push
mov
xor
jmp
add
add
push
jmp
mov
mov
shr
shl
dec
jmp
add
mov
add
push
push
pop
jmp
mov
add
pop
push
push
mov
mov
xor
pop
neg
jmp
neg
xor
jmp
pop
mov
mov
add
mov
add
xor
xor
jmp
push
mov
jmp
pop
sub
mov
jmp
xor
add
sub
sub
pop
add
push
push
mov
push
mov
push
mov
mov
pop
pop
jmp
mov
jmp
pop
add
push
pushl
pop
popl
pop
jmp
push
push
mov
mov
push
jmp
pop
jmp
sub
push
push
mov
mov
jmp
mov
sub
xor
jmp
add
pushl
jmp
jmp
pushl
pop
push
mov
push
mov
push
pushl
mov
jmp
or
add
not
jmp
pop
push
jmp
push
jmp
or
not
jmp
pushl
pop
popl
jmp
push
jmp
pop
jmp
sub
pop
push
pushl
pop
jmp
add
add
sub
pop
xor
jmp
add
xchg
pop
xor
mov
add
add
sub
sub
mov
jmp
mov
push
push
subl
jmp
mov
add
pushl
mov
jmp
mov
mov
or
xchg
not
xchg
add
add
pop
add
sub
mov
pushl
mov
add
popl
jmp
pop
add
jmp
mov
push
mov
add
add
xchg
pop
sub
push
mov
sub
push
jmp
push
sub
mov
mov
mov
pop
push
mov
mov
push
mov
shr
shl
shl
jmp
dec
push
mov
xor
jmp
pushw
jmp
inc
xor
jmp
pushl
popf
pop
rcrw
pushf
jmp
add
push
mov
sub
push
popl
push
mov
add
jmp
add
mov
push
mov
add
add
xchg
pop
push
mov
push
mov
push
pop
add
sub
push
subl
pop
jmp
add
sub
jmp
mov
jmp
xor
jmp
xor
xor
mov
xor
pushf
jmp
mov
mov
jmp
shr
add
sub
pop
sub
push
push
push
mov
jmp
push
mov
xor
pop
push
mov
inc
xchg
xchg
not
xchg
jmp
sub
jmp
sub
jmp
dec
jmp
push
mov
add
add
xchg
pop
push
mov
add
add
sub
pop
sub
mov
pushl
jmp
sub
pop
push
jmp
sub
xchg
pop
mov
xchg
jmp
pop
inc
add
xor
pop
add
mov
add
xor
xor
xor
jmp
pop
add
sub
pop
push
push
push
mov
mov
pop
jmp
add
jmp
pop
pop
jmp
mov
add
add
or
je
push
mov
jmp
add
add
jmp
push
mov
pushl
mov
jmp
incb
pushf
jmp
mov
sub
mov
push
mov
add
add
add
xor
jmp
add
mov
pop
jmp
push
mov
push
sub
mov
addl
pop
add
push
mov
inc
not
neg
inc
sub
add
sub
pop
push
pushl
pop
popl
pop
mov
push
mov
add
pop
pop
push
mov
push
pop
shl
add
sub
sub
jmp
push
mov
push
mov
jmp
sub
mov
add
push
mov
jmp
push
push
jmp
mov
jmp
sub
add
add
pop
push
push
mov
jmp
not
jmp
sub
sub
jmp
push
mov
add
add
sub
pop
xchg
mov
mov
push
jmp
xor
mov
mov
jmp
push
jmp
mov
push
push
mov
sub
push
notl
incl
jmp
mov
jmp
add
jmp
popl
mov
jmp
push
mov
or
sub
add
add
jmp
sub
pop
sub
jmp
mov
add
push
mov
add
jmp
not
xor
add
pop
sub
push
push
mov
jmp
mov
add
popl
mov
mov
jmp
pushl
pop
add
push
mov
push
push
jmp
xchg
mov
mov
jmp
mov
pop
add
jmp
push
mov
sub
pop
mov
jmp
sub
xor
xor
xor
mov
mov
jmp
sub
jmp
sub
jmp
xor
shr
not
jmp
mov
push
mov
add
push
mov
add
sub
xchg
pop
mov
push
pushl
jmp
mov
sub
mov
jmp
add
push
jmp
pushl
jmp
add
pushf
jmp
or
jmp
sub
xchg
pop
mov
push
mov
mov
add
jmp
addl
pop
push
mov
jmp
neg
or
jmp
xor
add
pop
jmp
push
mov
shl
jmp
pop
add
add
sub
sub
add
mov
add
push
mov
sub
pop
add
add
jmp
push
mov
mov
pop
xor
add
xchg
not
xchg
push
mov
add
jmp
mov
jmp
sub
pop
push
mov
jmp
xor
jmp
add
jmp
add
pop
sub
mov
mov
add
pop
jmp
pop
add
jmp
sub
push
mov
mov
add
pop
jmp
sub
jmp
sub
mov
pop
mov
mov
add
push
mov
jmp
push
push
push
mov
mov
xor
pop
mov
pop
jmp
push
mov
add
add
xchg
jmp
pop
push
mov
jmp
mov
add
jmp
sub
jmp
mov
add
jmp
add
sub
jmp
push
mov
jmp
add
push
mov
jmp
mov
or
mov
jmp
push
jmp
push
mov
add
mov
add
sub
sub
jmp
xor
pop
push
mov
xor
sub
mov
add
sub
add
jmp
pushl
pop
add
jmp
xor
xor
mov
jmp
mov
push
mov
jmp
pop
sub
shr
add
shr
sub
and
push
jmp
mov
sub
mov
jmp
mov
jmp
pop
push
mov
add
push
mov
sub
jmp
push
mov
or
shl
jmp
pushl
jmp
sub
push
mov
add
sub
sub
pop
add
sub
mov
mov
add
jmp
push
push
pop
sub
mov
mov
add
pop
mov
pop
jmp
shr
push
jmp
sub
add
jmp
push
pop
pop
shr
jmp
mov
mov
add
sub
add
jmp
add
pop
xor
pop
push
jmp
sub
add
add
pushl
pop
add
jmp
push
pop
jmp
inc
or
jmp
mov
push
pushl
pop
push
mov
add
add
xchg
pop
mov
add
add
jmp
push
push
mov
mov
pop
push
mov
mov
jmp
push
sub
mov
push
mov
add
jmp
shl
push
mov
mov
jmp
add
jmp
mov
push
mov
mov
pop
shr
sub
mov
jmp
sub
add
add
sub
jmp
pop
sub
mov
jmp
pop
add
or
push
mov
shr
and
xor
add
jmp
add
and
mov
jmp
sub
mov
push
pop
sub
add
add
mov
add
push
jmp
pushl
pop
push
jmp
mov
push
sub
mov
push
pop
dec
dec
xor
push
push
mov
subl
add
jmp
not
xchg
push
mov
jmp
pop
add
jmp
mov
mov
pushw
mov
mov
xor
pop
add
sub
sub
mov
add
add
push
jmp
sub
pop
mov
pop
add
jmp
add
sub
jmp
xor
pop
or
shl
pushl
push
mov
mov
push
mov
addl
sub
subl
pop
jmp
pop
sub
mov
subl
jmp
mov
push
jmp
add
xchg
and
push
push
mov
mov
sub
pop
push
mov
neg
xor
jmp
push
mov
and
pop
inc
jmp
push
mov
mov
pop
sub
pop
sub
sub
push
mov
jmp
mov
mov
push
mov
push
jmp
sub
sub
push
mov
not
shl
jmp
and
or
add
jmp
add
sub
xchg
jmp
dec
not
jmp
push
mov
push
mov
add
add
sub
jmp
mov
add
and
jmp
xor
xor
pop
mov
push
pop
add
push
push
jmp
mov
sub
add
add
mov
add
push
mov
dec
inc
not
sub
xor
pop
add
jmp
xchg
mov
push
push
mov
mov
xor
jmp
add
jmp
xor
mov
mov
add
jmp
add
pop
jmp
push
mov
shr
or
shr
add
not
add
or
mov
add
add
jmp
push
jmp
push
mov
xor
shr
add
push
jmp
add
add
pop
push
mov
add
pop
xchg
pop
subl
push
mov
subl
sub
push
mov
addl
add
subl
jmp
add
pop
sub
sub
add
pop
jmp
push
pop
jmp
xchg
jmp
add
xor
movzbl
pushl
jmp
mov
shl
push
mov
mov
dec
neg
not
jmp
sub
mov
mov
mov
pop
jmp
shl
neg
jmp
sub
pushl
pop
add
sub
sub
add
add
push
mov
mov
and
sub
dec
shr
pushw
mov
jmp
add
add
jmp
pop
push
jmp
pushl
pop
popl
mov
push
mov
push
mov
mov
addl
jmp
subl
pushl
pop
jmp
pop
add
mov
pop
push
mov
push
mov
sub
mov
jmp
mov
jmp
mov
add
add
jmp
pop
sub
jmp
push
mov
add
jmp
pushl
mov
jmp
push
jmp
add
jmp
mov
xor
jmp
mov
add
push
mov
jmp
xchg
pop
shr
or
not
sub
sub
mov
push
mov
mov
jmp
mov
mov
pop
pop
add
mov
add
jmp
add
pop
mov
push
mov
mov
jmp
add
xchg
pop
jmp
push
mov
push
mov
or
jmp
mov
push
push
pop
jmp
mov
xor
pop
push
jmp
mov
add
add
sub
pushl
jmp
add
add
xchg
pop
sub
add
jmp
push
sub
mov
mov
xor
sub
jmp
push
mov
add
neg
push
jmp
push
mov
not
xor
shr
sub
add
xor
xor
pop
push
mov
jmp
mov
push
mov
add
pop
sub
xchg
pop
jmp
pop
push
mov
notl
mov
push
jmp
sub
sub
sub
jmp
add
jmp
mov
sub
jmp
push
mov
subl
add
push
mov
jmp
mov
mov
push
mov
shl
add
not
shr
xor
xor
add
pop
not
xchg
jmp
pop
push
mov
add
pop
xchg
pop
add
pushf
jmp
mov
jmp
mov
jmp
mov
add
push
mov
add
pop
xchg
jmp
push
jmp
pushl
jmp
pop
add
add
pop
xchg
jmp
add
jmp
pushl
popf
pop
rcrl
pushf
jmp
mov
pop
pop
jmp
pop
neg
sub
not
xor
add
pop
add
xchg
mov
push
mov
inc
neg
add
inc
jmp
add
add
sub
mov
jmp
mov
sub
jmp
push
pushl
pop
popl
pop
div
push
mov
push
pushf
jmp
mov
jmp
add
jmp
popl
mov
shrb
pushf
jmp
pop
popl
mov
jmp
pushw
mov
push
mov
mov
jmp
mov
mov
xor
pop
jmp
mov
push
mov
jmp
sub
jmp
push
mov
xor
jmp
push
mov
push
subl
pop
push
push
mov
mov
pop
sub
inc
inc
xor
sub
jmp
add
xchg
pop
mov
mov
push
mov
add
jmp
mov
mov
or
sub
mov
jmp
xor
pop
sub
mov
pop
sub
mov
push
jmp
or
xor
sub
pop
sub
add
pop
sub
mov
jmp
jmp
popl
jmp
popw
jmp
add
push
mov
add
push
push
jmp
push
jmp
add
sub
sub
mov
mov
sub
pop
sub
jmp
mov
add
push
jmp
shr
not
xor
and
sub
mov
pop
xor
jmp
and
xor
jmp
push
mov
xor
sub
mov
add
sub
mov
push
jmp
mov
jmp
xor
pop
add
jmp
sub
mov
add
add
jmp
push
mov
add
pop
jmp
mov
shl
shl
add
add
sub
mov
xchg
not
xor
jmp
push
jmp
xchg
mov
shr
push
mov
push
push
pop
push
mov
push
jmp
mov
push
mov
jmp
add
push
mov
pushl
pop
jmp
push
pop
jmp
xor
xor
jmp
add
jmp
pop
not
not
add
push
jmp
pop
sub
mov
sub
mov
addl
pop
push
mov
inc
push
jmp
add
jmp
sub
add
push
mov
or
add
sub
add
jmp
sub
xor
add
add
pop
add
sub
jmp
mov
jmp
add
sub
jmp
pop
mov
add
jmp
pushl
popf
pop
adc
pushf
jmp
mov
push
mov
jmp
sub
pop
jmp
xor
pop
sub
mov
mov
jmp
pop
xchg
not
xchg
neg
push
jmp
push
mov
add
add
pop
jmp
push
jmp
mov
pop
neg
neg
add
jmp
pop
neg
push
mov
mov
and
pop
jmp
push
push
jmp
mov
xor
pop
push
mov
add
jmp
add
add
jmp
push
mov
add
add
jmp
sub
add
add
pop
push
mov
add
pop
push
pushl
jmp
add
sub
mov
add
add
add
sub
mov
jmp
pushl
jmp
push
mov
sub
mov
mov
jmp
sub
jmp
mov
pop
push
mov
jmp
mov
mov
add
pop
sub
pop
xor
push
mov
add
pop
jmp
push
mov
add
sub
xchg
jmp
add
pushl
mov
add
push
mov
add
jmp
xor
or
add
add
mov
push
mov
add
jmp
lods
cmpl
je
push
mov
mov
add
jmp
mov
rorw
pushf
jmp
xor
pop
push
jmp
mov
jmp
mov
jmp
pop
pop
popl
push
mov
add
sub
xchg
pop
mov
pushl
pushl
mov
add
push
mov
add
push
jmp
sub
jmp
addl
jmp
push
push
push
pop
xor
mov
pop
jmp
mov
sub
pop
xor
xor
jmp
push
mov
xor
pop
jmp
mov
mov
shr
inc
inc
not
sub
sub
mov
add
push
mov
sub
add
add
jmp
xor
pop
sub
or
mov
push
mov
add
add
xchg
mov
push
jmp
bt
pushf
jmp
movzbw
push
pushf
jmp
pop
imul
movzbw
sub
jmp
pop
pushl
jmp
add
jmp
mov
mov
jmp
push
notl
pop
jmp
push
pushl
jmp
xor
xor
xor
pop
push
subl
pop
push
jmp
mov
push
jmp
or
pop
dec
add
jmp
pushl
jmp
push
jmp
push
mov
add
pop
xchg
pop
movsbl
push
mov
jmp
neg
or
sub
add
pop
jmp
pop
sub
jmp
mov
push
mov
push
sub
mov
mov
jmp
mov
jmp
sub
pop
xor
sub
jmp
shr
shr
dec
xor
add
pop
add
xchg
pop
jmp
pushl
popf
pop
sbb
pushf
jmp
pushl
popf
pop
rcll
pushf
jmp
pop
jmp
mov
push
mov
push
pop
push
push
mov
jmp
push
push
mov
jmp
sub
pop
sub
mov
pushl
pop
jmp
add
add
jmp
mov
jmp
sub
pop
jmp
push
jmp
mov
push
mov
mov
mov
push
mov
push
mov
add
pop
add
xchg
pop
push
mov
sub
pop
add
addl
pop
jmp
pop
sub
jmp
pop
mov
push
mov
add
add
jmp
push
mov
sub
pop
pushl
jmp
mov
push
mov
add
pop
mov
push
jmp
add
sub
push
mov
and
or
jmp
mov
push
jmp
push
mov
jmp
add
xor
add
sub
add
add
sub
pop
movzbl
popw
jmp
and
inc
jmp
inc
not
push
push
push
pushl
pop
add
inc
jmp
add
add
jmp
pop
mov
add
sub
pop
xor
xor
xor
mov
mov
jmp
sub
add
push
mov
not
not
sub
xor
pop
add
pop
jmp
not
shl
shr
push
mov
dec
neg
add
xor
pop
sub
sub
sub
pop
add
push
jmp
add
jmp
xor
pop
and
dec
push
mov
not
mov
pop
push
jmp
sub
jmp
push
push
jmp
sub
jmp
pop
jmp
push
mov
add
sub
jmp
pop
shl
push
mov
jmp
neg
jmp
xor
pushw
mov
xor
xor
xor
push
notw
pop
xor
xor
jmp
xor
add
xor
pop
or
sub
jmp
push
mov
sub
mov
add
jmp
add
add
jmp
push
mov
push
mov
jmp
xchg
pop
pop
mov
add
push
mov
inc
sub
add
pop
jmp
add
xor
pop
add
pop
push
push
pop
add
pop
xor
xor
xor
pop
jmp
addl
pushl
jmp
sub
mov
push
jmp
mov
push
mov
jmp
pop
push
mov
and
jmp
mov
xor
jmp
pushl
mov
jmp
notl
pop
sub
add
mov
pop
or
not
jmp
add
sub
mov
mov
sub
push
jmp
push
push
pop
add
add
xchg
pop
add
mov
add
push
pushl
pop
popl
mov
push
mov
sub
mov
pop
push
jmp
pop
mov
pop
or
pop
jmp
sub
sub
add
pop
sub
add
jmp
push
mov
push
pop
push
jmp
neg
jmp
mov
jmp
add
add
jmp
mov
jmp
pop
inc
sub
or
jmp
sub
sub
mov
mov
push
mov
dec
jmp
push
push
jmp
sub
pushl
jmp
sub
jmp
shl
xor
xor
add
sub
sub
pop
sub
pop
sub
mov
jmp
add
pushl
pop
jmp
addl
pop
add
push
push
mov
jmp
lods
add
jmp
mov
push
mov
add
push
mov
add
mov
add
xchg
pop
and
push
jmp
mov
mov
add
mov
add
sub
jmp
pop
add
add
sub
sub
push
push
mov
and
jmp
add
shl
shl
add
sub
mov
jmp
mov
jmp
and
jmp
mov
pop
xor
or
pop
jmp
inc
xor
and
jmp
mov
pop
push
mov
jmp
movzbw
push
push
pop
push
mov
add
jmp
sub
sub
jmp
mov
jmp
push
jmp
xor
xor
jmp
xchg
pop
shr
xor
push
mov
push
mov
xor
shl
xor
jmp
push
jmp
mov
push
jmp
mov
sub
pop
or
pop
jmp
add
add
add
push
mov
add
pop
mov
jmp
notl
pop
xor
xor
xor
jmp
xor
xor
xor
jmp
neg
xor
xor
pop
push
mov
jmp
xchg
pop
pushl
jmp
push
mov
or
sub
sub
pop
or
pop
sub
mov
mov
sub
pop
mov
pop
add
mov
add
push
mov
sub
pop
jmp
push
jmp
pop
push
mov
jmp
popl
mov
imul
push
pushf
jmp
add
pop
jmp
pop
jmp
xor
mov
pop
not
push
mov
not
sub
neg
shr
xor
add
pop
shr
add
xor
jmp
add
jmp
push
mov
jmp
pop
add
sub
jmp
xor
xchg
push
push
mov
mov
mov
add
and
mov
push
mov
add
add
push
mov
jmp
xor
pop
xor
sub
pop
add
pop
sub
jmp
mov
addl
pushl
pop
push
push
mov
addl
pop
jmp
push
mov
addl
mov
add
push
mov
or
push
mov
sub
jmp
xor
shr
add
sub
mov
jmp
and
pushl
pop
add
or
je
push
mov
add
sub
jmp
add
xchg
pushl
mov
add
push
mov
mov
push
mov
add
mov
add
push
mov
mov
xor
neg
jmp
mov
push
push
jmp
push
push
jmp
pop
sub
mov
mov
add
sub
jmp
add
xchg
not
push
sub
mov
jmp
inc
jmp
add
sub
mov
mov
add
pop
xchg
mov
and
mov
jmp
mov
mov
jmp
add
sub
add
add
jmp
pop
push
push
mov
push
xorl
pop
xor
pop
jmp
mov
not
shl
xor
add
pop
pop
add
xor
jmp
add
jmp
mov
add
push
mov
or
jmp
pop
mov
push
pushl
mov
add
add
push
mov
sub
dec
shl
inc
sub
jmp
add
sub
jmp
mov
add
push
mov
dec
shr
jmp
lods
xor
push
push
mov
mov
add
pop
push
mov
jmp
sub
add
jmp
mov
sub
pop
pushl
pop
add
add
jmp
sub
jmp
push
mov
mov
push
mov
jmp
push
pushl
pop
popl
pop
jmp
xor
xor
pop
xor
xor
xor
mov
jmp
rep
add
push
mov
push
jmp
mov
mov
push
xorl
pop
jmp
sub
mov
add
add
jmp
sub
push
mov
shl
neg
not
neg
xor
sub
add
add
pop
push
sub
sub
jmp
sub
jmp
push
mov
mov
push
mov
mov
pop
pop
pop
sub
push
mov
sub
pop
sub
jmp
mov
jmp
xchg
not
jmp
or
jmp
mov
xor
pushf
jmp
pop
not
xor
xor
xor
push
mov
jmp
add
jmp
sub
not
and
sub
or
pop
jmp
pop
sub
mov
mov
jmp
mov
pushl
mov
push
mov
mov
add
add
push
jmp
pop
jmp
pop
xchg
pop
pushl
pop
push
jmp
sub
mov
pop
jmp
mov
notl
pop
push
mov
sub
shl
sub
sub
jmp
add
xor
pop
push
pop
pushl
mov
push
mov
add
add
xchg
mov
push
jmp
push
mov
sub
mov
mov
jmp
pop
jmp
pop
add
add
sub
mov
add
jmp
sub
pop
add
sub
jmp
add
jmp
add
push
mov
add
push
mov
dec
add
inc
xor
neg
add
jmp
neg
sub
jmp
sub
xchg
jmp
push
jmp
xor
pop
jmp
add
push
mov
and
pop
push
mov
push
mov
jmp
pushl
popf
pop
adc
pushf
jmp
push
push
mov
addl
mov
add
push
mov
jmp
push
pop
jmp
pushl
pop
popl
pop
mov
push
mov
xchg
neg
jmp
sub
pop
pop
jmp
or
mov
add
shr
jmp
neg
shl
dec
jmp
xor
xor
xor
jmp
xor
xor
pop
mov
push
jmp
mov
jmp
mov
mov
jmp
pop
xchg
mov
mov
jmp
mov
push
pushl
jmp
add
sub
sub
mov
add
jmp
neg
sub
jmp
shl
and
dec
push
notl
pop
push
mov
add
pushl
mov
jmp
sub
add
jmp
mov
sub
shr
add
inc
xor
sub
pop
pushl
mov
jmp
xchg
pop
push
jmp
sub
jmp
push
jmp
pop
push
jmp
xchg
pop
add
jmp
add
jmp
push
push
popl
push
mov
addl
add
subl
pop
mov
push
mov
add
sub
xchg
mov
jmp
add
sub
jmp
xor
jmp
push
mov
mov
jmp
pop
push
mov
add
sub
xchg
pop
mov
jmp
pop
add
push
push
mov
jmp
sub
pop
push
jmp
mov
mov
mov
jmp
neg
or
shr
sub
mov
pop
xor
pop
pop
jmp
add
sub
xchg
pop
jmp
add
xchg
pop
mov
sub
mov
mov
sub
jmp
pop
xchg
pop
jmp
push
pushf
jmp
push
jmp
not
shl
sub
jmp
mov
add
pop
jmp
popl
pop
mov
push
jmp
jmp
pop
jmp
sub
mov
mov
push
mov
jmp
mov
sub
jmp
pushl
mov
add
push
mov
mov
jmp
shr
xor
push
mov
push
mov
mov
mov
mov
add
push
push
mov
xor
mov
add
pushl
pop
sub
mov
jmp
mov
sub
jmp
push
sub
jmp
pushl
jmp
inc
jmp
add
mov
add
xchg
pop
push
mov
and
not
jmp
mov
mov
sub
jmp
add
jmp
add
jmp
mov
jmp
sub
add
add
pop
xor
jmp
xor
sub
or
add
jmp
pop
mov
mov
jmp
mov
jmp
mov
and
pushl
pop
push
jmp
xor
add
pop
and
xor
add
mov
add
sub
push
mov
jmp
add
shl
jmp
neg
jmp
pushl
pop
add
push
mov
add
pop
push
pushl
jmp
pop
push
jmp
add
pushw
jmp
pop
push
jmp
mov
sub
mov
mov
jmp
add
pop
jmp
xor
pop
jmp
pop
jmp
mov
jmp
add
subl
pop
jmp
push
mov
inc
push
mov
jmp
and
pushl
pop
add
sub
add
pop
jmp
mov
add
shr
shl
add
jmp
pop
add
pop
jmp
popl
mov
jmp
add
jmp
push
pushw
pop
or
jmp
shr
jmp
mov
add
sub
xchg
jmp
mov
pop
shr
xor
mov
pop
push
mov
not
not
shr
sub
sub
pop
add
add
jmp
add
jmp
and
jmp
add
sub
xor
jmp
pushl
pop
jmp
xor
xor
pop
sub
mov
mov
jmp
mov
jmp
mov
jmp
push
sub
mov
jmp
push
mov
mov
jmp
xor
jmp
shr
push
mov
shr
sub
mov
mov
jmp
btc
pushf
jmp
mov
push
mov
jmp
pop
add
sub
jmp
xchg
mov
pushw
mov
pushw
pop
popw
jmp
sub
jmp
push
push
mov
push
push
jmp
pop
sub
and
or
push
jmp
pop
add
add
sub
jmp
mov
sub
mov
jmp
add
jmp
push
push
pop
push
jmp
pop
not
xor
mov
pop
jmp
pop
jmp
push
mov
sub
jmp
and
shl
jmp
add
pop
sub
mov
mov
jmp
add
pop
xor
add
mov
jmp
mov
add
add
sub
mov
mov
push
mov
add
sub
xchg
jmp
pushw
jmp
mov
jmp
mov
push
jmp
mov
and
pop
not
xor
mov
mov
jmp
mov
sub
jmp
not
and
xor
or
sub
add
jmp
add
push
mov
mov
and
push
mov
and
pop
dec
add
shr
jmp
and
pop
add
jmp
add
pop
add
add
jmp
add
push
jmp
mov
add
add
xchg
pop
sub
mov
pop
add
xor
mov
mov
add
push
push
mov
push
addl
pop
sub
pop
mov
mov
add
mov
jmp
push
mov
mov
dec
inc
push
jmp
sub
pop
xor
xor
xor
mov
shrl
pushf
jmp
mov
push
mov
push
jmp
add
add
jmp
mov
pop
push
push
mov
push
jmp
add
jmp
push
mov
shr
shr
shr
jmp
xchg
dec
push
push
pop
pop
shl
add
jmp
push
mov
mov
mov
pop
jmp
sub
sub
add
jmp
mov
pushl
pop
push
mov
push
jmp
not
jmp
xorl
pop
push
mov
xor
sub
xor
pop
mov
add
sub
add
add
sub
push
mov
mov
push
mov
inc
xor
sub
pop
add
add
pop
mov
add
push
pushl
pop
jmp
add
sub
pop
jmp
push
mov
add
jmp
pop
add
push
mov
push
mov
add
sub
mov
mov
add
pop
push
mov
push
mov
shl
push
mov
mov
neg
jmp
pushl
pushl
jmp
sub
mov
push
push
mov
add
or
add
jmp
mov
jmp
mov
add
add
add
jmp
lods
push
mov
push
mov
add
mov
add
jmp
push
mov
jmp
or
sub
xor
pop
sub
jmp
mov
pop
pushl
pop
push
jmp
mov
shl
not
xor
jmp
shl
or
push
incl
pop
xor
jmp
add
pop
add
sub
pushl
jmp
pop
push
mov
jmp
pushl
jmp
pushl
jmp
popl
pop
and
mov
push
mov
jmp
mov
add
jmp
pop
jmp
add
pop
add
xor
xor
jmp
sub
pop
or
xchg
jmp
pop
add
add
push
mov
sub
mov
add
pop
xchg
jmp
sub
pop
not
neg
push
mov
not
and
and
and
add
jmp
xchg
mov
jmp
mov
jmp
mov
mov
push
jmp
push
pushf
jmp
sub
push
mov
jmp
sub
pop
sub
jmp
sub
push
mov
push
jmp
add
xchg
pop
add
jmp
pop
mov
add
mov
add
xor
pop
jmp
sub
xchg
jmp
push
mov
add
sub
xchg
pop
jmp
and
pop
jmp
push
mov
jmp
push
pop
mov
jmp
or
mov
add
add
sub
sub
jmp
push
mov
mov
jmp
mov
mov
jmp
mov
add
mov
push
push
pop
add
add
xchg
pop
push
jmp
mov
push
mov
push
mov
mov
pop
and
xor
push
mov
mov
sub
mov
mov
push
mov
push
jmp
pop
jmp
add
jmp
pop
push
jmp
pushl
mov
add
popl
pop
add
push
mov
push
mov
push
mov
jmp
push
mov
mov
mov
add
xchg
inc
jmp
not
sub
add
pop
sub
pop
sub
pushw
mov
jmp
mov
inc
xchg
inc
xchg
or
jmp
xor
sub
pop
jmp
shr
push
mov
add
pop
push
mov
add
pop
sub
push
jmp
push
mov
jmp
addl
jmp
push
mov
push
push
pop
add
sub
xchg
pop
mov
mov
or
jmp
sub
jmp
add
jmp
sub
add
add
mov
add
pop
add
xchg
mov
push
sub
push
popl
addl
pop
push
mov
add
pop
push
mov
push
mov
push
mov
mov
sub
jmp
not
inc
shl
xor
sub
pop
jmp
add
push
mov
add
jmp
push
mov
dec
or
add
dec
shr
push
jmp
add
jmp
pop
jmp
add
add
add
sub
push
push
push
pop
xor
mov
pop
and
jmp
xor
jmp
add
shl
xor
jmp
sub
jmp
push
mov
addl
popl
addl
jmp
popl
mov
push
push
pushl
pop
add
push
mov
push
pop
mov
jmp
mov
add
sub
xchg
pop
mov
mov
shr
jmp
pushl
mov
add
push
push
mov
addl
pop
add
push
jmp
pop
add
sub
mov
mov
add
pop
jmp
pop
sub
jmp
sub
mov
push
push
mov
jmp
push
mov
sub
jmp
push
mov
mov
jmp
pop
sub
jmp
mov
push
jmp
sub
mov
jmp
mov
mov
push
mov
sub
pop
add
sub
sub
add
pop
push
mov
mov
jmp
xor
jmp
pop
sub
push
mov
pushl
pop
popl
pop
jmp
push
mov
not
sub
push
mov
or
pop
xor
and
pop
push
push
push
pop
shr
inc
inc
xor
mov
pop
add
pop
add
jmp
xor
pop
jmp
add
add
sub
pop
push
push
push
pop
push
mov
sub
pop
push
jmp
pop
mov
add
jmp
mov
push
jmp
mov
add
pop
add
xchg
pop
push
push
pop
push
mov
jmp
mov
and
xchg
jmp
add
pop
push
mov
jmp
lods
push
push
mov
jmp
sub
sub
mov
add
jmp
sub
sub
mov
push
mov
jmp
pop
jmp
mov
pop
add
mov
push
mov
jmp
pop
add
jmp
shr
inc
dec
push
mov
xor
pop
mov
pop
push
mov
mov
sub
jmp
pop
pop
push
push
pop
push
push
push
pop
jmp
popl
addl
jmp
add
add
jmp
mov
add
pop
pop
sub
pop
mov
jmp
sub
sub
sub
add
pop
or
mov
add
jmp
pushl
pushl
jmp
inc
shr
dec
sub
push
pop
pop
add
add
push
mov
dec
shr
xor
jmp
push
mov
shl
jmp
push
mov
push
mov
push
push
jmp
mov
sub
jmp
mov
jmp
mov
add
pop
jmp
addl
pop
push
mov
sub
add
add
mov
add
push
push
jmp
mov
mov
not
push
push
push
jmp
pop
mov
pushl
pop
add
sub
sub
add
pop
xchg
mov
mov
jmp
push
jmp
xor
mov
add
push
mov
jmp
shr
inc
add
push
pop
jmp
mov
not
not
and
push
jmp
mov
add
sub
sub
add
mov
push
push
pop
add
add
xchg
mov
xor
xor
jmp
push
jmp
push
mov
push
mov
sub
sub
jmp
add
xor
xor
xor
jmp
xor
xor
xor
mov
mov
push
jmp
pop
push
popl
mov
add
popa
popf
ret
jmp
push
mov
mov
jmp
add
push
mov
sub
pushl
mov
add
push
mov
push
mov
xor
jmp
pop
mov
jmp
push
mov
add
jmp
sub
jmp
neg
dec
push
mov
sub
pop
jmp
mov
push
mov
mov
xor
pop
mov
xor
pop
sub
jmp
push
mov
add
push
mov
jmp
sub
pushl
jmp
or
jmp
pop
xor
xor
xor
mov
push
mov
jmp
mov
sub
sub
add
add
push
mov
push
mov
mov
xor
pop
add
jmp
add
pushl
pushl
pop
push
mov
add
add
xchg
jmp
mov
pop
jmp
xchg
mov
or
je
pushl
pushl
pop
sub
jmp
sub
add
jmp
mov
mov
neg
xor
add
pop
pop
not
jmp
sub
mov
push
pop
jmp
negl
pushf
jmp
pop
jmp
add
pop
push
jmp
pop
shr
xor
sub
mov
push
mov
mov
add
sub
jmp
add
add
sub
push
mov
jmp
push
push
jmp
xor
mov
sarw
pushf
jmp
sub
sub
pop
add
sub
add
push
jmp
and
pushl
pop
push
mov
push
mov
add
pop
sub
push
pushl
pop
popl
mov
mov
jmp
push
push
jmp
push
jmp
add
jmp
add
add
xor
jmp
mov
add
shr
push
jmp
dec
shr
jmp
shr
xor
jmp
pop
xchg
jmp
add
jmp
push
mov
neg
push
mov
sub
mov
add
add
add
sub
pop
xchg
mov
push
mov
push
mov
xor
not
jmp
mov
push
mov
add
add
xchg
pop
jmp
add
neg
shr
sub
sub
pop
add
pop
xchg
pop
rolw
pushf
jmp
pop
jmp
lods
xor
sub
mov
mov
sub
shr
jmp
mov
addl
jmp
mov
pop
sub
pop
addl
push
jmp
sub
shl
xor
jmp
shl
add
jmp
mov
push
mov
push
mov
sub
xor
push
mov
sub
xor
dec
add
or
xor
and
mov
add
push
push
mov
mov
mov
jmp
mov
jmp
mov
subl
jmp
add
sub
jmp
sub
sub
mov
mov
jmp
push
push
mov
push
jmp
mov
sub
pop
jmp
push
mov
sub
mov
push
mov
mov
pop
mov
mov
add
add
jmp
add
add
jmp
add
add
xchg
mov
shll
pushf
jmp
add
add
sub
sub
mov
add
jmp
mov
sub
add
add
jmp
push
jmp
mov
shl
shl
jmp
sub
add
pop
add
add
sub
mov
mov
add
jmp
add
jmp
add
sub
mov
add
push
mov
xor
xor
inc
add
add
add
sub
pop
sub
sub
add
sub
pop
push
pushl
pop
popl
mov
jmp
add
sub
mov
jmp
mov
push
jmp
sub
add
add
mov
push
mov
add
add
xchg
jmp
sub
xor
or
sub
mov
push
mov
mov
jmp
pop
sub
jmp
add
jmp
mov
sub
sub
sub
sub
mov
add
sub
mov
mov
jmp
sub
mov
push
mov
jmp
mov
sub
mov
push
mov
jmp
sub
jmp
xor
mov
bts
pushf
jmp
sub
mov
mov
add
add
mov
add
push
mov
jmp
push
jmp
mov
push
jmp
pushl
pop
add
add
pop
xor
xor
xor
pop
sub
mov
push
pushl
pop
push
mov
add
add
jmp
add
jmp
add
dec
xor
xor
pop
inc
shr
shr
push
jmp
xor
shl
neg
shl
jmp
pop
jmp
mov
add
pop
xor
xor
xor
jmp
add
jmp
add
push
mov
add
pop
xchg
jmp
sub
sub
add
push
mov
add
pop
pop
sub
add
jmp
push
jmp
xor
jmp
mov
mov
sub
sub
jmp
pushl
jmp
mov
push
mov
jmp
mov
pop
mov
pop
mov
pop
mov
jmp
popl
mov
jmp
xor
add
shl
jmp
mov
jmp
push
jmp
add
add
jmp
pop
xor
jmp
push
mov
push
mov
push
pop
jmp
xchg
mov
shr
push
pushl
jmp
sub
mov
push
mov
add
jmp
pop
push
jmp
mov
push
jmp
mov
jmp
push
jmp
not
jmp
jmp
movzbw
pushw
jmp
notw
jmp
add
jmp
and
xor
shl
xor
push
pop
pop
add
mov
push
mov
add
push
mov
jmp
add
mov
jmp
push
jmp
pushl
pushl
pop
add
sub
mov
mov
jmp
not
xchg
jmp
push
mov
neg
xor
add
push
pop
pop
shl
neg
inc
not
xor
xor
sub
pop
add
sub
push
jmp
mov
jmp
mov
push
mov
xor
jmp
and
add
jmp
mov
jmp
not
xchg
jmp
pushl
pushl
jmp
jmp
mov
neg
dec
xor
xor
jmp
mov
pop
add
pop
push
jmp
sub
sub
add
mov
jmp
mov
shlb
pushf
jmp
push
push
mov
mov
mov
add
jmp
push
mov
add
push
mov
jmp
mov
add
jmp
shl
xor
jmp
mov
mov
push
push
mov
jmp
pop
sub
mov
push
mov
jmp
push
mov
mov
add
pop
shl
jmp
add
sub
sub
pop
jmp
xor
mov
sub
push
mov
addl
popl
push
jmp
add
add
xchg
pop
sub
mov
notl
pushl
pop
add
xor
xor
xor
inc
push
mov
mov
push
push
pop
add
sub
xchg
pop
mov
mov
add
pop
add
sub
sub
jmp
mov
add
jmp
pushl
pop
popl
pop
jmp
mov
pop
shl
shl
jmp
mov
add
pop
add
pop
push
jmp
mov
add
add
jmp
mov
pop
sub
mov
push
mov
jmp
add
xor
pop
jmp
sub
not
xor
push
mov
shr
or
add
sub
pop
add
pushl
pop
add
and
mov
add
or
je
pushl
pushl
pushl
mov
jmp
xchg
pop
mov
mov
jmp
mov
and
jmp
mov
jmp
add
push
mov
jmp
add
add
pushl
addl
pushl
pushl
pop
add
push
jmp
mov
add
pushf
jmp
inc
push
push
jmp
push
jmp
add
sub
pop
xor
jmp
pop
add
xchg
mov
mov
jmp
push
mov
mov
add
sub
xchg
pop
mov
mov
sub
mov
mov
push
push
mov
jmp
add
push
jmp
pop
jmp
push
push
sub
mov
push
pushl
mov
add
add
jmp
xchg
not
xchg
jmp
mov
add
jmp
add
jmp
xchg
mov
push
mov
add
sub
xchg
pop
mov
mov
jmp
add
push
jmp
mov
jmp
mov
mov
add
jmp
pushl
pop
push
push
jmp
pushl
pushl
pop
push
mov
jmp
mov
jmp
pushl
pop
push
jmp
sub
jmp
incb
pop
dec
push
jmp
pop
mov
pop
push
jmp
pop
add
push
jmp
sub
xor
xor
pop
shl
sub
jmp
mov
jmp
push
mov
not
xor
jmp
pop
sub
mov
add
sub
jmp
dec
inc
and
dec
push
mov
add
pop
add
pop
pop
sub
add
pop
push
mov
pushl
pop
popl
pop
jmp
mov
mov
inc
jmp
shr
sub
push
mov
inc
shr
sub
sub
pop
push
mov
jmp
push
mov
add
push
mov
add
pop
sub
sub
pushl
pop
add
push
jmp
pushl
pushl
pop
push
mov
push
mov
jmp
not
xor
add
sub
sub
mov
jmp
dec
push
mov
mov
jmp
mov
mov
sub
or
and
jmp
xchg
mov
shr
or
je
sub
jmp
mov
or
and
shl
shr
neg
sub
or
pop
push
mov
not
neg
jmp
push
push
pop
add
sub
xchg
pop
mov
addl
mov
sub
jmp
push
addl
pop
sub
pop
shr
or
inc
add
not
push
mov
jmp
push
mov
and
pop
not
dec
xor
mov
pop
add
pop
sub
xchg
mov
mov
mov
add
push
mov
sub
sub
add
pop
xchg
pop
mov
mov
jmp
shl
shr
jmp
push
push
pop
jmp
xor
shl
add
push
mov
add
pop
mov
jmp
xchg
mov
jmp
mov
pop
add
pop
add
push
pushl
mov
add
jmp
pop
add
and
sub
push
mov
xor
pop
push
pop
pop
add
pop
jmp
pop
push
push
jmp
mov
push
push
push
mov
push
pop
mov
push
mov
mov
add
add
xchg
pop
push
xorl
mov
add
xor
jmp
jmp
add
push
push
mov
mov
pop
push
mov
and
jmp
sub
pushl
jmp
neg
not
xor
jmp
pushl
pushl
pop
push
mov
add
add
xchg
mov
sub
mov
mov
add
jmp
mov
mov
pop
pop
push
notb
jmp
shl
push
push
push
mov
add
sub
shr
push
jmp
push
jmp
sub
jmp
mov
push
push
pop
jmp
mov
push
jmp
pop
popl
pop
push
jmp
push
jmp
push
mov
shl
inc
sub
add
jmp
mov
add
sub
xchg
pop
mov
mov
push
mov
jmp
pop
jmp
mov
add
sub
jmp
mov
mov
xor
pop
jmp
push
push
pop
jmp
pushl
pop
jmp
shr
shl
inc
push
mov
mov
and
pushl
jmp
add
mov
pop
push
jmp
push
mov
add
pop
xor
add
pop
shr
and
or
sub
xor
mov
add
and
pop
jmp
pop
push
mov
push
push
mov
add
xor
inc
sub
push
jmp
mov
mov
sub
jmp
xchg
jmp
dec
sub
xor
add
jmp
push
mov
and
not
jmp
mov
pop
add
push
mov
jmp
sub
pop
add
add
push
sub
mov
mov
jmp
pop
jmp
pop
push
mov
add
pop
jmp
push
push
mov
add
jmp
sub
add
jmp
add
xchg
not
xchg
push
push
pop
mov
add
add
add
mov
add
xor
xor
jmp
add
xor
mov
jmp
add
pop
jmp
xchg
pop
pushl
pop
push
mov
jmp
pushl
pop
add
sub
mov
jmp
push
mov
xor
add
add
add
jmp
push
mov
add
push
jmp
mov
add
mov
add
add
add
add
sub
sub
mov
jmp
add
push
mov
mov
push
jmp
sub
pop
add
xchg
pop
jmp
pop
push
mov
mov
add
jmp
push
notl
jmp
add
jmp
push
mov
push
pop
jmp
push
jmp
mov
add
sub
mov
push
mov
add
not
jmp
sub
push
mov
shl
add
jmp
xor
jmp
subl
jmp
sub
jmp
and
jmp
pop
pop
sub
pop
add
jmp
add
xchg
pop
add
push
mov
jmp
pop
add
sub
pushw
jmp
add
add
xchg
pop
push
pushl
jmp
mov
push
mov
sub
mov
addl
mov
push
push
pop
jmp
sub
jmp
neg
shl
push
jmp
pushl
push
mov
mov
xor
jmp
sub
mov
mov
jmp
sub
sub
std
push
mov
push
jmp
pop
add
xor
jmp
pop
sub
add
pop
jmp
mov
jmp
sub
or
dec
push
mov
push
jmp
pop
jmp
push
mov
sub
shr
shr
sub
jmp
sub
jmp
shr
push
mov
neg
sub
and
pop
push
jmp
mov
push
push
jmp
push
mov
mov
push
mov
push
addl
sub
subl
pop
or
jmp
sub
pop
mov
jmp
sub
pop
and
inc
jmp
dec
inc
inc
jmp
add
xchg
mov
div
pushw
mov
push
pushf
jmp
mov
mov
sub
mov
add
push
jmp
push
mov
xor
push
push
mov
mov
add
xor
mov
pop
add
jmp
pop
add
jmp
mov
jmp
push
mov
neg
shl
sub
sub
jmp
mov
pushl
jmp
add
sub
jmp
pop
sub
mov
push
mov
jmp
push
pop
sub
jmp
push
mov
neg
jmp
mov
jmp
pop
jmp
shl
xor
xor
sub
pop
sub
xor
mov
jmp
pop
jmp
pop
push
push
mov
shr
sub
jmp
mov
addl
mov
jmp
pushl
pop
add
mov
pop
neg
jmp
mov
jmp
xchg
jmp
mov
neg
push
mov
xor
jmp
add
sub
pop
sub
push
pushl
pop
popl
jmp
add
shr
add
add
add
pop
sub
jmp
mov
mov
jmp
add
jmp
mov
add
pop
add
xchg
mov
jmp
add
add
xchg
pop
add
jmp
add
sub
xchg
pop
mov
addl
pushl
pop
push
mov
jmp
mov
jmp
pop
dec
not
jmp
pop
add
jmp
mov
push
push
popl
jmp
mov
xor
pop
mov
pop
jmp
pop
sub
mov
mov
add
add
add
push
jmp
jmp
xor
sub
jmp
push
mov
jmp
sub
jmp
inc
add
add
add
sub
sub
pushl
mov
add
push
mov
add
add
xchg
pop
push
mov
not
jmp
sub
sub
pop
sub
mov
pushl
pop
popl
pop
mov
push
mov
xor
pop
jmp
mov
addl
mov
add
push
mov
push
mov
jmp
xor
pop
jmp
mov
pop
xor
mov
jmp
push
mov
and
mov
add
shl
sub
jmp
mov
add
pop
push
mov
sub
jmp
not
jmp
xor
xor
pop
rorl
pushf
jmp
sub
sub
push
jmp
push
mov
jmp
mov
add
push
mov
sub
pop
xchg
pop
mov
push
mov
mov
mov
xor
mov
add
dec
push
push
pop
jmp
pop
pop
push
mov
sub
pop
jmp
sub
jmp
add
push
mov
jmp
mov
jmp
mov
add
sub
xchg
mov
add
xor
push
mov
jmp
mov
pop
pushl
pop
add
shr
push
mov
jmp
add
jmp
pop
pushw
jmp
inc
sub
jmp
shl
jmp
mov
jmp
pop
sub
sub
add
add
push
mov
jmp
push
pushl
jmp
add
xchg
pop
sub
mov
mov
jmp
and
push
jmp
push
jmp
mov
add
push
push
sub
mov
jmp
add
add
push
mov
sub
pop
sub
mov
add
xor
xor
xor
mov
shlw
pushf
jmp
mov
mov
add
sub
mov
mov
add
mov
add
push
pushl
pop
popl
pop
popl
pop
shll
pushf
jmp
sub
jmp
sub
pop
xchg
mov
mov
jmp
sub
neg
push
mov
and
dec
inc
dec
push
jmp
pop
push
mov
sub
add
add
jmp
push
mov
jmp
push
mov
add
xor
push
xorl
pop
xor
pop
not
jmp
pop
add
pop
add
xchg
pop
jmp
lods
push
jmp
push
mov
add
push
mov
add
pop
xchg
pop
mov
add
add
push
mov
and
sub
sub
add
sub
mov
mov
jmp
mov
add
jmp
pop
not
sub
push
pop
sub
mov
add
sub
add
push
mov
xor
add
jmp
push
push
push
pop
not
jmp
add
sub
jmp
shl
dec
jmp
or
dec
jmp
pop
push
mov
xor
pop
jmp
pop
dec
inc
sub
sub
jmp
shr
xor
or
add
add
add
mov
pop
xor
jmp
sub
add
jmp
push
jmp
sub
add
add
pop
xchg
pop
sub
mov
push
mov
jmp
push
jmp
mov
incl
pushf
jmp
pop
sub
mov
mov
push
mov
inc
xor
shr
push
mov
jmp
add
pop
push
push
jmp
mov
push
jmp
add
push
mov
jmp
sub
add
add
jmp
pop
xchg
pop
popl
mov
cmp
pushf
jmp
mov
push
jmp
push
mov
add
add
jmp
sub
pop
xchg
jmp
add
pop
jmp
add
xor
jmp
xor
add
pop
add
xor
jmp
jmp
xchg
jmp
push
mov
jmp
xor
pushl
pop
add
pop
pop
pushl
push
push
mov
push
mov
mov
pop
mov
add
add
pop
jmp
mov
jmp
sub
sub
pushl
pop
push
mov
add
add
xchg
jmp
mov
mov
jmp
add
jmp
dec
not
xor
add
sub
sub
pop
jmp
push
push
pop
add
sub
jmp
add
jmp
pop
mov
xchg
not
jmp
lods
push
mov
jmp
push
push
mov
mov
jmp
pop
add
jmp
lods
push
jmp
add
sub
push
push
mov
shr
neg
jmp
mov
add
jmp
add
jmp
mov
push
jmp
mov
jmp
pop
push
mov
mov
add
sub
jmp
add
pop
jmp
mov
mov
add
sub
pushl
pop
sub
jmp
shr
push
mov
mov
add
sub
add
pop
push
mov
pop
pushl
pop
add
push
mov
sub
mov
push
jmp
add
sub
jmp
pushl
jmp
push
mov
dec
shr
xor
dec
not
and
and
push
sub
pop
xor
add
pop
sub
add
add
jmp
jmp
mov
jmp
push
mov
jmp
pop
mov
mov
add
pop
mov
pop
jmp
pop
add
jmp
xchg
not
xchg
xchg
xor
jmp
sub
mov
pop
jmp
push
jmp
add
add
sub
mov
jmp
mov
jmp
mov
jmp
push
mov
push
pop
mov
shr
jmp
pop
jmp
push
mov
add
pop
xor
xor
xor
mov
sub
mov
jmp
pop
push
jmp
shr
dec
add
sub
pop
push
mov
shl
push
mov
jmp
push
mov
add
pop
add
jmp
add
pop
jmp
mov
notl
pop
push
mov
sub
push
push
jmp
xor
jmp
sub
jmp
add
jmp
pushl
pop
add
xchg
not
xchg
jmp
mov
jmp
xor
mov
add
push
push
mov
add
pop
pop
jmp
mov
jmp
xor
and
jmp
mov
jmp
add
xchg
pop
xchg
mov
jmp
mov
add
sub
sub
mov
add
sub
jmp
pop
add
add
pop
push
mov
add
pop
xor
xor
jmp
pushl
pop
add
jmp
sub
mov
jmp
and
neg
jmp
xchg
sub
mov
jmp
xor
xor
xor
pop
not
inc
xchg
add
push
mov
add
xor
jmp
push
jmp
sub
mov
add
sub
jmp
not
push
jmp
pop
sub
jmp
pushl
pop
add
push
jmp
pushl
pop
jmp
mov
shr
shr
shr
push
mov
push
mov
and
shr
not
jmp
add
add
jmp
add
pop
sub
sub
mov
jmp
push
push
jmp
push
mov
dec
mov
pop
push
mov
jmp
mov
mov
pop
pop
sub
add
add
mov
jmp
add
xchg
mov
jmp
shl
jmp
mov
neg
jmp
push
sub
mov
mov
mov
push
jmp
push
push
pop
jmp
pop
add
sub
pop
add
sub
jmp
pop
push
pushl
pop
popl
mov
jmp
push
jmp
add
push
mov
not
shr
shl
shl
xor
push
mov
xor
shr
shr
add
xor
pop
xor
pop
push
mov
mov
pop
pushl
pop
jmp
mov
pop
pop
neg
push
mov
add
jmp
push
mov
push
pushf
jmp
xor
xor
pop
jmp
sub
pop
jmp
add
push
mov
mov
push
mov
jmp
not
push
push
push
pop
xor
jmp
sub
jmp
mov
push
mov
push
mov
jmp
pop
mov
sub
jmp
xor
xor
xor
pop
mov
push
push
jmp
shr
push
push
mov
mov
mov
add
jmp
mov
add
mov
add
push
jmp
xor
mov
jmp
sub
add
pop
sub
jmp
sub
jmp
xchg
pop
mov
jmp
pop
or
jmp
xor
pop
jmp
pop
jmp
pushl
pop
push
mov
add
add
xchg
pop
push
jmp
sub
push
push
mov
mov
xor
pop
sub
push
mov
push
jmp
add
sub
jmp
mov
add
add
jmp
pop
or
jmp
sub
add
jmp
xor
add
sub
jmp
add
or
jmp
push
mov
push
mov
jmp
pop
popl
push
jmp
mov
add
jmp
add
jmp
xchg
pop
mov
push
sub
jmp
mov
mov
jmp
sub
add
add
jmp
xchg
pop
add
sub
push
jmp
add
push
pushl
pop
jmp
sub
pop
mov
jmp
sub
mov
pushl
mov
push
mov
add
push
jmp
add
pushl
pop
push
push
pop
push
jmp
pop
add
pop
xor
pop
sub
mov
jmp
mov
push
mov
xor
sub
pop
sub
xor
add
jmp
add
pop
popl
push
mov
mov
jmp
push
push
pop
add
add
xchg
pop
jmp
lods
jmp
push
pop
add
jmp
mov
add
sub
sub
pop
mov
pop
jmp
mov
push
jmp
pushl
pushl
jmp
push
jmp
add
add
xchg
pop
jmp
push
mov
jmp
push
mov
push
jmp
sub
jmp
mov
push
mov
jmp
pop
sub
push
mov
add
add
jmp
push
jmp
sub
jmp
pop
push
push
mov
mov
pop
sub
jmp
mov
jmp
push
push
mov
jmp
xor
mov
mov
add
push
subl
sub
addl
pop
push
push
mov
shl
jmp
pop
push
jmp
mov
push
mov
add
jmp
pop
add
mov
push
jmp
pop
and
pushf
jmp
not
neg
jmp
push
push
push
jmp
pop
push
mov
sub
pop
jmp
inc
xchg
add
sub
push
mov
add
pop
jmp
add
push
mov
mov
pop
jmp
sub
or
jmp
push
mov
add
push
mov
xor
pop
shr
push
jmp
xor
xor
sub
pop
mov
jmp
push
mov
sub
mov
add
add
jmp
pop
popl
mov
mov
jmp
sub
add
pushl
pop
add
pushl
mov
push
push
pop
add
add
xchg
jmp
add
xchg
pop
push
mov
sub
sub
add
add
sub
pop
push
mov
sub
jmp
push
jmp
push
mov
push
mov
mov
pop
mov
add
push
mov
push
xchg
not
xor
xor
xor
pop
or
add
jmp
xor
xor
jmp
mov
push
sub
mov
addl
pop
add
push
mov
push
mov
sub
pop
add
jmp
mov
mov
push
mov
jmp
mov
jmp
mov
shr
jmp
push
push
mov
mov
pop
jmp
add
shl
jmp
mov
add
add
pushl
pop
add
add
jmp
mov
mov
add
mov
add
jmp
pop
add
neg
not
sub
sub
pop
shr
push
mov
sub
pop
xor
pop
push
mov
or
pop
sub
mov
mov
push
mov
jmp
neg
push
push
push
pop
xor
jmp
xor
jmp
push
mov
add
jmp
mov
bt
pushf
jmp
sub
push
mov
add
jmp
push
mov
jmp
pop
add
xchg
pop
mul
movzbw
push
jmp
sub
push
subl
jmp
mov
push
mov
jmp
sub
xchg
pop
mov
jmp
add
jmp
add
xor
xor
jmp
mov
pop
add
jmp
add
add
pushl
mov
add
jmp
pop
jmp
push
mov
mov
sub
pop
pushl
pop
push
jmp
push
jmp
add
add
xchg
jmp
add
add
jmp
xchg
not
xor
xor
jmp
add
add
pop
add
sub
mov
pushl
jmp
not
inc
inc
shl
jmp
xor
xor
jmp
mov
jmp
mov
push
jmp
mov
jmp
pop
sub
xchg
pop
mov
push
pop
pushl
pop
jmp
pop
push
jmp
add
jmp
mov
xor
pop
push
mov
jmp
shl
neg
push
mov
add
jmp
xor
jmp
push
popl
jmp
xor
xor
xor
jmp
xor
add
xor
push
mov
add
pop
sub
sub
pop
sub
sub
pop
jmp
mov
pop
mov
pushl
mov
add
jmp
push
mov
shl
jmp
add
add
add
jmp
sub
push
mov
sub
push
mov
sub
dec
jmp
mov
jmp
add
sub
mov
pop
sub
sub
sub
sub
add
jmp
and
add
jmp
sub
jmp
add
sub
jmp
pushl
jmp
mov
mov
jmp
pop
jmp
pop
or
jmp
push
sub
mov
push
push
jmp
sub
jmp
mov
mov
push
jmp
mov
push
mov
and
add
add
add
jmp
add
push
mov
push
mov
neg
sub
xor
sub
push
decl
jmp
add
push
mov
add
pop
xor
xor
jmp
mov
dec
or
xor
add
jmp
add
xor
mov
add
push
mov
mov
jmp
shl
sub
add
add
sub
jmp
add
pushl
mov
add
add
push
mov
push
mov
mov
pop
add
add
mov
add
pop
jmp
sub
xchg
pop
jmp
add
pop
pushl
pop
push
jmp
mov
add
push
mov
jmp
pop
mov
jmp
pop
push
jmp
sub
mov
push
pushl
pop
jmp
mov
jmp
pop
mov
add
jmp
push
push
mov
xchg
jmp
pop
jmp
push
mov
add
add
sub
pop
mov
pop
xor
pop
push
jmp
mov
and
add
add
pop
push
mov
jmp
add
push
push
mov
mov
mov
add
xor
or
xor
sub
mov
add
add
jmp
push
mov
neg
shr
neg
dec
add
xor
jmp
mov
add
mov
jmp
push
mov
push
jmp
and
push
mov
dec
xor
xor
jmp
popl
addl
mov
push
push
pop
jmp
add
xchg
jmp
sub
mov
addl
mov
add
jmp
mov
jmp
add
sub
mov
add
xchg
jmp
sub
push
mov
mov
jmp
xchg
jmp
pop
and
and
shr
sub
sub
jmp
add
xor
not
push
jmp
popl
pop
push
push
jmp
neg
jmp
mov
jmp
and
pushl
pop
push
mov
sub
mov
jmp
pushl
pop
push
mov
add
add
xchg
pop
push
mov
push
pop
add
push
mov
sub
add
add
mov
push
push
mov
add
add
add
xchg
jmp
mov
shl
xor
add
add
jmp
mov
push
sub
mov
mov
xor
mov
pop
and
shr
shr
not
shl
xor
add
jmp
pop
jmp
pop
sub
add
sub
mov
mov
xor
jmp
mov
add
jmp
sub
mov
mov
neg
and
xchg
neg
xchg
neg
xor
add
pop
sub
push
mov
sub
pop
pop
jmp
add
add
xchg
pop
xor
xor
xor
mov
push
push
push
pop
push
push
mov
push
xorl
pop
xor
pop
sub
mov
addl
pop
sub
mov
jmp
sub
mov
add
sub
add
add
jmp
push
mov
add
pop
jmp
add
pop
sub
sub
jmp
pop
add
jmp
sub
xchg
mov
mov
jmp
push
mov
mov
sub
add
jmp
add
mov
push
mov
add
jmp
neg
push
mov
not
jmp
push
mov
shl
jmp
add
sub
pop
shr
add
xor
sub
add
push
mov
add
jmp
push
mov
addl
pop
add
push
mov
push
mov
push
mov
mov
pop
pop
jmp
not
xor
xor
jmp
pushw
jmp
sub
mov
mov
shr
shr
jmp
pop
mov
mov
push
push
mov
mov
pop
add
sub
jmp
add
pop
sub
add
jmp
xor
push
mov
add
add
jmp
popl
pop
mov
push
push
pop
push
jmp
and
pop
shl
jmp
push
jmp
mov
sub
jmp
push
push
mov
mov
mov
jmp
mov
mov
jmp
add
xchg
pop
xchg
pop
sub
jmp
xor
mov
pop
add
jmp
pop
add
sub
xchg
jmp
jmp
add
add
jmp
mov
add
jmp
shr
inc
add
jmp
pop
shr
push
mov
dec
sub
xor
jmp
xor
jmp
pop
xor
xor
xor
jmp
pop
add
add
sub
jmp
neg
jmp
push
mov
add
jmp
add
jmp
mov
push
jmp
push
pushl
pop
add
pop
jmp
push
push
mov
push
mov
jmp
mov
add
pop
add
pop
add
pushw
mov
mov
sub
pop
pop
push
mov
mov
push
mov
sub
xor
push
jmp
add
jmp
mov
add
jmp
xchg
mov
push
jmp
add
sub
sub
add
jmp
shr
push
jmp
pushw
mov
push
jmp
mov
add
sub
jmp
mov
add
sub
xchg
jmp
dec
jmp
xor
mov
pop
jmp
push
mov
push
push
mov
add
add
pop
add
xchg
jmp
push
mov
not
xor
sub
pop
sub
sub
add
add
pushl
jmp
mov
jmp
not
xor
sub
push
mov
jmp
mov
push
pop
jmp
inc
shr
add
xor
pop
add
pop
add
jmp
pop
add
jmp
sub
add
jmp
mov
sub
pop
sub
jmp
sub
mov
jmp
xchg
pop
jmp
mov
jmp
xor
pushl
pop
add
push
jmp
sub
pop
jmp
push
mov
sub
neg
neg
shr
shl
add
push
mov
jmp
add
jmp
pop
push
push
push
pop
jmp
add
and
mov
add
shr
xor
push
push
mov
mov
add
sub
xchg
jmp
add
add
xchg
mov
jmp
add
add
xchg
jmp
push
mov
xor
sub
sub
add
jmp
mov
mov
add
add
xchg
jmp
neg
sub
mov
mov
xor
inc
dec
not
jmp
push
mov
push
jmp
sub
xor
jmp
mov
mov
add
push
jmp
pop
sub
jmp
mov
add
pop
jmp
pop
jmp
add
add
xchg
jmp
shr
and
jmp
or
je
pushl
jmp
inc
add
sub
pop
add
pop
add
jmp
add
mov
add
pop
push
mov
mov
jmp
mov
xor
pop
sub
mov
mov
dec
shr
shr
xor
jmp
mov
sub
mov
push
jmp
add
xchg
jmp
mov
add
add
jmp
push
pop
or
add
jmp
mov
shr
sub
xor
push
jmp
push
sub
mov
push
jmp
inc
push
notl
jmp
push
sub
pop
jmp
xor
sub
or
jmp
add
xor
add
jmp
mov
pop
push
jmp
add
sub
push
push
mov
mov
add
pop
sub
pop
push
mov
sub
pop
mov
push
mov
add
add
xchg
jmp
add
mov
add
xchg
pop
jmp
push
push
mov
add
or
pushl
jmp
pop
add
pushl
jmp
mov
jmp
add
shr
and
push
push
jmp
add
add
add
sub
sub
sub
add
push
mov
mov
add
mov
add
jmp
mov
sub
mov
push
jmp
add
xor
pop
jmp
pushl
jmp
mov
and
not
shr
jmp
pop
xor
jmp
add
add
jmp
pop
add
add
jmp
mov
add
push
mov
sub
pop
jmp
xorl
pop
jmp
mov
jmp
add
jmp
pop
add
sub
push
pushl
pop
popl
pop
mov
pushl
pushl
pop
push
mov
push
jmp
sub
sub
add
add
add
mov
push
mov
add
add
xchg
pop
sub
pop
push
push
mov
not
xor
push
mov
neg
neg
shl
sub
jmp
add
and
sub
sub
pop
add
jmp
pop
jmp
lods
jmp
xorl
mov
add
jmp
pushl
pop
add
sub
pop
sub
mov
jmp
push
mov
add
sub
shr
shr
jmp
shr
sub
dec
sub
inc
jmp
push
jmp
pop
jmp
pushl
pop
sub
mov
mov
add
add
xchg
pop
jmp
pop
jmp
shr
jmp
sub
mov
push
mov
sub
mov
push
mov
push
mov
jmp
xor
push
jmp
mov
mov
jmp
dec
jmp
xchg
jmp
add
sub
xchg
mov
mov
push
mov
add
sub
mov
push
jmp
mov
jmp
mov
push
jmp
add
push
push
mov
neg
add
add
neg
add
jmp
mov
add
add
jmp
popl
jmp
pop
push
xorl
pop
push
mov
xor
pop
pop
and
jmp
xchg
pop
mov
add
pushl
pushl
jmp
mov
add
jmp
pop
xchg
pop
jmp
pop
mov
mov
add
add
shl
sub
xchg
xchg
not
xchg
xchg
push
mov
add
jmp
shr
add
sub
pop
not
inc
add
add
pop
add
sub
mov
mov
add
sub
sub
pop
mov
add
xor
jmp
add
add
jmp
push
push
mov
jmp
neg
add
add
add
pop
shl
add
sub
pop
add
push
push
mov
xor
mov
jmp
add
add
xchg
jmp
shl
jmp
sub
pop
add
pop
jmp
add
popl
mov
imul
jmp
pushl
pushl
pop
add
jmp
mov
mov
push
push
mov
mov
jmp
add
pop
push
mov
or
push
mov
jmp
push
push
mov
mov
pop
mov
pop
push
mov
mov
pop
mov
push
mov
add
add
xchg
pop
jmp
add
xchg
pop
sub
mov
mov
push
push
mov
jmp
pop
jmp
add
jmp
sub
add
add
sub
pop
add
jmp
mov
mov
xor
pushl
pop
jmp
sub
jmp
push
jmp
mov
push
mov
jmp
xor
jmp
shr
jmp
pushl
jmp
sub
sub
jmp
xchg
pop
mov
push
mov
jmp
push
pop
add
sub
xchg
pop
jmp
mov
add
add
jmp
add
pop
add
xor
xor
xor
jmp
add
sub
sub
push
mov
jmp
pop
shl
shr
push
mov
add
jmp
mov
jmp
sub
mov
push
push
pop
add
add
push
pushl
pop
popl
mov
jmp
add
pop
movzbl
jmp
popa
ret
popl
jmp
xchg
push
mov
jmp
push
mov
mov
xor
jmp
add
push
mov
jmp
mov
add
pop
push
pushl
pop
popl
mov
jmp
mov
push
mov
jmp
add
xor
xor
xor
jmp
push
mov
add
jmp
add
not
push
mov
sub
xor
pop
jmp
sub
pop
jmp
mov
neg
neg
or
jmp
xor
add
sub
jmp
popl
mov
or
pushf
jmp
add
sub
jmp
pop
pushl
jmp
push
mov
jmp
mov
jmp
xor
xor
mov
mov
jmp
sub
jmp
push
push
pop
xor
add
add
sub
jmp
sub
sub
pop
add
push
mov
mov
jmp
xor
xor
xor
pop
jmp
pop
jmp
popl
jmp
mov
xor
xor
or
xor
sub
jmp
push
mov
push
mov
sub
mov
jmp
mov
jmp
shr
and
xor
or
xor
xor
mov
add
inc
jmp
shr
shl
jmp
mov
mov
sub
mov
add
add
pop
push
xorl
pop
push
mov
jmp
push
push
mov
jmp
mov
add
add
sub
pop
jmp
sub
sub
pop
jmp
pop
add
pop
shr
sub
jmp
push
push
pop
neg
add
mov
pop
add
mov
add
add
pop
jmp
push
mov
jmp
pop
xchg
jmp
jmp
sub
mov
push
mov
mov
jmp
mov
mov
xor
push
mov
shl
neg
neg
add
sub
mov
add
push
jmp
pop
add
pop
pop
jmp
push
mov
mov
pop
pop
push
mov
jmp
push
mov
add
sub
pop
jmp
mov
push
mov
add
push
mov
mov
add
sub
not
sub
add
jmp
xor
shl
not
jmp
pop
push
jmp
pushw
mov
pushw
mov
sub
jmp
sub
xchg
pop
mov
notl
mov
add
xchg
not
xchg
push
jmp
mov
push
push
mov
mov
pop
xor
add
add
sub
mov
pop
add
add
sub
mov
jmp
jmp
add
jmp
sub
dec
pushw
mov
push
push
push
mov
jmp
add
jmp
sub
jmp
push
push
mov
mov
jmp
shl
shr
push
jmp
mov
add
jmp
mov
jmp
mov
push
mov
sub
jmp
pop
push
mov
add
pop
mov
pop
shl
jmp
add
add
push
mov
sub
jmp
sub
xchg
jmp
mov
pop
inc
shr
neg
sub
or
pop
neg
jmp
mov
shl
jmp
shr
jmp
xor
jmp
add
jmp
push
addl
pop
sub
push
addl
jmp
popl
jmp
mov
sub
mov
jmp
mov
push
push
pop
add
push
push
push
mov
shr
push
mov
shl
jmp
pop
push
mov
and
pop
push
jmp
not
inc
inc
xor
xor
pop
and
sub
push
xorl
pop
jmp
mov
jmp
pushl
mov
add
jmp
add
pop
jmp
pop
dec
push
mov
mov
pop
pop
not
push
jmp
sub
pop
inc
jmp
pop
add
pop
push
jmp
xchg
pop
decl
pushf
jmp
pushl
mov
add
add
push
jmp
add
add
pop
jmp
xor
pop
xor
mov
jmp
mov
xor
pop
push
mov
push
mov
add
pop
jmp
add
mov
add
push
jmp
shl
jmp
mov
pop
pop
push
push
mov
sub
sub
mov
pop
add
pop
add
sub
sub
jmp
add
pop
jmp
pop
mov
jmp
push
jmp
add
jmp
mov
mov
shr
not
inc
jmp
push
mov
jmp
mov
add
push
jmp
sub
add
pop
add
jmp
push
push
push
pop
neg
not
jmp
pop
add
pop
inc
or
push
mov
xor
pushl
jmp
xor
mov
pop
add
xor
sub
jmp
sub
pop
jmp
add
add
or
push
mov
jmp
sub
jmp
push
jmp
pushl
jmp
mov
movzbw
pushw
mov
jmp
push
mov
shr
sub
sub
mov
jmp
add
jmp
push
mov
add
add
push
pushl
pop
jmp
push
mov
push
push
jmp
mov
add
jmp
xor
jmp
add
add
pop
movzbl
sub
mov
push
mov
add
sub
xchg
jmp
jmp
sub
jmp
mov
jmp
pop
mov
pushl
pop
popl
mov
mov
push
pop
mov
mov
push
mov
add
add
xchg
mov
and
mov
push
push
jmp
mov
jmp
xor
xor
xor
xor
jmp
mov
pop
push
push
jmp
mov
mov
and
pop
add
add
pop
push
mov
sub
mov
mov
and
not
jmp
mov
push
mov
mov
mov
add
neg
shr
shl
push
mov
neg
xor
jmp
and
shr
jmp
xor
mov
add
add
mov
add
jmp
sub
pop
or
shl
add
jmp
add
add
xchg
pop
add
add
xchg
jmp
neg
jmp
xor
jmp
xor
sub
jmp
pop
jmp
mov
jmp
add
push
jmp
mov
sub
mov
push
mov
push
mov
add
push
jmp
push
jmp
mov
sub
push
jmp
mov
add
add
sub
jmp
and
jmp
mov
pushl
pop
popl
jmp
popl
pushl
jmp
mov
jmp
mov
push
mov
push
jmp
xor
mov
pop
add
jmp
notl
pop
jmp
add
push
mov
add
pop
sub
mov
add
mov
mov
push
mov
jmp
mov
add
pop
xor
xor
xor
jmp
xor
pop
push
mov
push
mov
or
add
shr
add
xor
sub
mov
jmp
xor
xor
pop
sub
mov
mov
add
push
push
mov
jmp
add
add
xchg
jmp
shr
push
mov
add
jmp
mov
push
mov
push
mov
jmp
pop
jmp
add
xor
xor
jmp
sub
add
pushl
mov
add
add
jmp
add
mov
jmp
sub
mov
push
jmp
sub
pop
push
jmp
or
xor
mov
jmp
sub
mov
push
push
mov
add
push
mov
jmp
mov
push
mov
mov
add
mov
add
push
mov
shr
neg
or
add
sub
pop
xchg
pop
jmp
mov
push
jmp
sub
pop
add
sub
jmp
pop
push
jmp
pop
push
mov
push
mov
jmp
mov
sub
neg
shr
inc
xor
mov
pop
xor
jmp
btr
pushf
jmp
mov
add
dec
push
jmp
pop
add
jmp
push
jmp
add
jmp
push
subl
pop
add
pop
xor
add
add
pop
pop
add
pop
jmp
add
add
xchg
pop
sub
add
add
pop
xor
xor
mov
add
xor
jmp
xor
pushl
mov
push
sub
mov
jmp
add
jmp
pop
sub
mov
mov
add
push
mov
jmp
add
sub
pop
push
mov
push
pop
add
sub
jmp
pushl
pushl
pop
add
sub
mov
mov
add
add
xchg
mov
movzbl
pushl
push
jmp
push
mov
add
pop
sub
jmp
mov
sub
add
add
pop
jmp
or
inc
push
mov
inc
neg
shl
xor
xor
pop
add
jmp
add
mov
pop
pop
mov
pushl
pop
push
mov
mov
push
push
mov
jmp
pushl
pushl
pop
push
push
pop
add
jmp
shl
inc
jmp
sub
add
add
jmp
popl
push
mov
jmp
dec
push
jmp
add
add
xchg
pop
shr
jmp
pop
push
mov
mov
jmp
mov
xor
jmp
or
mov
push
mov
add
jmp
xor
jmp
pushl
pushl
jmp
shr
neg
add
mov
pop
xor
add
jmp
sub
sub
mov
mov
inc
sub
add
sub
sub
pop
jmp
xor
jmp
push
jmp
sub
xchg
pop
jmp
pop
add
push
mov
jmp
push
mov
sub
pop
sub
pop
jmp
mov
jmp
mov
add
jmp
add
pop
jmp
xor
jmp
mov
jmp
add
add
xchg
pop
sub
jmp
push
pushf
jmp
sub
jmp
add
add
xchg
pop
add
jmp
mov
add
add
xchg
pop
popl
jmp
mov
push
mov
mov
push
jmp
pop
mov
push
jmp
shr
jmp
mov
jmp
add
mov
jmp
mov
jmp
add
mov
add
sub
mov
push
pop
add
xor
add
pop
jmp
push
jmp
push
pushl
pop
jmp
mov
add
add
xor
xor
jmp
add
add
jmp
pop
xchg
mov
jmp
pop
inc
sub
xor
mov
pushl
jmp
mov
add
pop
mov
add
jmp
xor
pushl
pop
push
mov
jmp
popl
mov
mov
push
mov
push
pushl
jmp
pop
shl
shr
push
mov
xor
pop
jmp
mov
inc
dec
jmp
mov
mov
sub
jmp
add
jmp
mov
add
jmp
add
pop
subl
add
addl
push
mov
addl
sub
subl
pop
mov
add
pop
push
push
jmp
pop
jmp
add
push
push
mov
mov
pop
add
mov
add
add
not
jmp
pop
add
xor
pop
dec
jmp
sub
mov
jmp
xchg
pop
push
push
pop
add
jmp
push
mov
mov
add
jmp
add
jmp
pop
push
pushl
jmp
mov
add
sub
sub
mov
add
jmp
inc
jmp
pop
jmp
add
pop
sub
jmp
mov
pop
jmp
pushl
jmp
mov
push
mov
jmp
xchg
not
xchg
pushl
pop
add
push
jmp
push
mov
add
pop
pop
xchg
mov
mov
push
jmp
mov
jmp
sub
add
sub
sub
add
pop
mov
xor
pop
shl
sub
jmp
mov
add
shr
jmp
mov
add
jmp
lods
sub
jmp
pop
add
jmp
pushl
pop
add
add
sub
mov
pushl
pop
popl
mov
cmp
pushf
jmp
mov
sub
jmp
sub
sub
jmp
shl
jmp
mov
xor
pushf
jmp
add
pop
jmp
xor
xor
mov
mov
push
mov
mov
add
mov
add
jmp
mov
jmp
mov
shr
push
mov
xor
sub
add
mov
add
add
add
add
sub
push
mov
add
sub
sub
add
jmp
push
mov
sub
mov
jmp
shr
or
xor
sub
pop
push
mov
xor
add
add
jmp
mov
pushl
pop
add
dec
push
mov
neg
sub
push
mov
mov
shl
dec
shr
shr
or
sub
jmp
mov
jmp
mov
add
pop
add
xchg
jmp
dec
add
jmp
add
jmp
add
push
mov
jmp
add
add
sub
add
mov
add
sub
jmp
mov
add
add
jmp
push
mov
mov
pop
pop
push
jmp
mov
add
jmp
push
mov
subl
add
addl
jmp
add
add
xor
xor
xor
pop
jmp
mov
add
pop
push
mov
add
add
add
jmp
pop
pushl
pop
add
push
jmp
or
jmp
pop
mov
pop
mov
push
jmp
xor
pop
jmp
push
mov
jmp
pushl
pushl
pushl
pop
add
push
mov
add
add
xchg
pop
popl
pop
mov
pushl
jmp
mov
add
sub
sub
pop
xchg
pop
mov
jmp
push
mov
jmp
pop
and
pushl
pop
jmp
pop
mov
add
sub
jmp
pop
push
mov
jmp
push
push
pop
add
jmp
pop
jmp
pop
or
shl
push
mov
jmp
add
sub
xchg
pop
jmp
mov
add
jmp
pop
push
mov
mov
sub
pop
push
pushl
pop
popl
mov
mov
jmp
inc
push
jmp
add
jmp
sub
mov
jmp
push
mov
add
jmp
sub
mov
mov
sub
jmp
add
xchg
pop
sub
mov
jmp
pop
push
jmp
pop
sub
pop
add
jmp
xor
sub
pop
add
add
jmp
push
jmp
pop
push
notl
pop
xor
xor
jmp
xor
movzwl
sub
jmp
add
add
sub
push
mov
sub
jmp
pushl
popf
pop
rclw
pushf
jmp
mov
jmp
push
mov
mov
jmp
notl
mov
add
push
notl
mov
add
shr
sub
mov
mov
add
push
jmp
not
inc
add
xor
pop
push
mov
add
pop
sub
sub
pop
sub
mov
pushl
jmp
jmp
push
pop
add
add
xchg
pop
sub
mov
jmp
push
jmp
push
mov
sub
pop
sub
add
pop
sub
xor
sub
pop
mov
add
push
mov
jmp
xor
jmp
xor
pop
pushl
mov
push
mov
jmp
not
shl
jmp
pop
jmp
pushl
pop
push
mov
mov
push
jmp
sub
xchg
jmp
pushl
jmp
mov
jmp
pop
push
mov
sub
push
mov
add
add
pop
push
mov
sub
pop
jmp
pushl
pushl
jmp
add
push
mov
sub
pop
jmp
push
mov
add
push
mov
xor
sub
sub
pop
jmp
inc
shl
xor
xor
pop
jmp
push
sub
mov
mov
push
mov
shl
inc
shl
or
jmp
push
push
push
jmp
pop
push
mov
push
mov
xor
push
addl
pop
jmp
push
mov
xor
shl
dec
dec
xor
add
add
sub
jmp
pop
shl
shr
jmp
mov
dec
add
shr
not
push
mov
shl
or
add
xor
add
mov
jmp
add
pop
jmp
xor
jmp
or
jne
sub
jmp
addl
pop
push
push
mov
jmp
popl
mov
jmp
add
push
mov
jmp
add
push
mov
sub
jmp
pop
shr
push
jmp
push
mov
jmp
add
shr
sub
mov
push
mov
sub
jmp
pop
jmp
push
push
jmp
shr
not
xor
jmp
add
jmp
mov
sub
mov
mov
add
jmp
mov
jmp
xchg
pop
not
jmp
mov
mov
jmp
mov
sub
mov
mov
jmp
push
mov
mov
xor
mov
add
xor
add
push
mov
jmp
pop
pop
add
shr
push
mov
push
mov
pop
pushl
pop
push
mov
sub
mov
push
jmp
shl
jmp
shl
xor
add
pop
xor
jmp
push
mov
xor
pop
push
push
push
pop
shr
push
mov
xor
pop
add
xor
jmp
sub
pop
add
push
push
jmp
xor
pop
push
mov
mov
add
add
xchg
jmp
add
sub
add
add
pop
mov
add
add
movzbl
jmp
add
add
xchg
pop
shr
push
mov
and
jmp
mov
push
jmp
xor
jmp
add
pop
sub
mov
add
push
mov
sub
sub
jmp
add
mov
add
and
pushl
pop
push
mov
add
add
xchg
pop
or
shl
push
mov
push
mov
jmp
add
add
xchg
pop
add
mov
add
pop
push
jmp
sub
mov
push
mov
mov
push
mov
add
pop
jmp
xor
pop
push
mov
not
neg
xor
dec
jmp
xchg
mov
or
jne
push
pushl
pushl
pop
push
mov
add
add
xor
jmp
pop
jmp
sub
pop
jmp
addl
pop
push
mov
inc
jmp
xchg
sub
and
pop
xor
add
add
sub
mov
add
push
mov
jmp
shr
sub
sub
jmp
pop
add
sub
mov
mov
add
add
xor
jmp
notl
mov
add
add
and
pop
not
add
neg
or
xor
add
pop
jmp
add
jmp
sub
jmp
shr
cmp
je
push
jmp
pop
sub
add
push
mov
jmp
mov
mov
add
and
pushl
jmp
mov
jmp
mov
shl
push
jmp
push
mov
mov
and
jmp
add
jmp
pop
popl
jmp
push
mov
not
jmp
push
mov
add
add
xchg
pop
add
sub
pop
push
pushl
pop
popl
pop
jmp
add
not
jmp
mov
jmp
add
push
mov
add
sub
xor
xor
xor
mov
jmp
mov
add
jmp
add
movzbl
pushl
mov
push
jmp
mov
mov
sub
mov
push
push
pop
push
pop
pop
sub
add
pushl
pop
add
sub
mov
mov
add
pop
jmp
pop
pop
add
pushl
pop
push
jmp
sub
sub
pop
jmp
pop
jmp
and
xor
add
mov
add
pop
jmp
add
sub
sub
xor
jmp
sub
xchg
jmp
add
pop
xor
push
mov
mov
pushl
pop
add
mov
add
add
mov
push
mov
jmp
mov
sub
xor
pop
jmp
push
xchg
not
jmp
mov
mov
add
pop
jmp
pop
xchg
not
xor
xor
xor
push
mov
add
pop
add
jmp
pop
push
jmp
xor
mov
sub
pushf
jmp
mov
mov
add
pop
jmp
pop
jmp
mov
jmp
xchg
push
notl
pop
push
jmp
mov
sub
mov
mov
push
mov
sub
and
jmp
sub
pop
pop
sub
add
jmp
pop
inc
add
mov
jmp
sub
mov
mov
push
mov
add
pop
add
jmp
or
push
jmp
add
pop
push
mov
mov
and
jmp
and
dec
sub
mov
jmp
sub
mov
jmp
sub
mov
add
add
push
mov
dec
sub
jmp
add
jmp
add
mov
push
mov
sub
mov
addl
jmp
mov
sub
mov
mov
add
add
jmp
push
jmp
pushw
mov
movzbw
jmp
mov
sub
add
push
mov
xor
add
jmp
mov
mov
sub
mov
add
add
sub
sub
pop
add
pushl
pop
sub
jmp
push
mov
push
pop
jmp
mov
pop
xor
jmp
add
pop
push
push
mov
mov
sub
mov
add
push
mov
jmp
pop
popl
pop
jmp
add
sub
mov
mov
push
mov
push
jmp
xchg
pop
xor
pushl
pop
jmp
mov
or
pop
push
mov
xor
add
pop
mov
pop
jmp
popl
push
mov
jmp
add
jmp
pop
mov
add
pushl
pushl
pop
add
add
jmp
mov
push
push
pop
add
jmp
pushl
pushl
mov
jmp
xor
pop
jmp
mov
sub
shl
push
mov
jmp
add
xchg
jmp
mov
push
push
push
mov
jmp
push
pop
sub
jmp
add
xor
pushl
jmp
add
sub
pop
add
sub
sub
jmp
pop
sub
sub
add
pop
sub
sub
jmp
mov
jmp
shr
add
sub
pop
sub
jmp
pushl
mov
add
push
mov
push
mov
jmp
sub
sub
mov
add
jmp
push
mov
jmp
add
push
jmp
push
push
pop
jmp
mov
xor
xor
jmp
add
dec
xor
or
mov
add
push
mov
xor
pop
add
pop
add
xchg
mov
jmp
add
xor
xor
xor
mov
push
mov
jmp
sub
jmp
mov
push
jmp
add
add
jmp
push
mov
jmp
mov
mov
pop
pop
jmp
inc
xor
mov
jmp
mov
mov
jmp
pushl
jmp
xor
mov
pop
inc
xor
sub
mov
push
jmp
inc
xor
mov
pop
and
pushl
mov
add
sub
jmp
pop
add
add
sub
push
mov
and
add
add
pop
mov
add
push
jmp
pop
mov
sub
mov
push
mov
jmp
mov
push
jmp
pop
sub
jmp
mov
jmp
mov
add
sub
push
jmp
xor
pop
and
pushl
mov
add
jmp
add
sub
jmp
add
add
push
mov
dec
and
push
mov
or
xor
xor
pop
jmp
push
jmp
xor
add
pop
jmp
pop
push
mov
and
push
mov
or
pop
or
add
sub
add
add
jmp
add
sub
mov
push
mov
sub
mov
jmp
xor
sub
sub
add
jmp
push
mov
jmp
mov
jmp
mov
push
mov
and
dec
not
not
push
notl
pop
sub
add
pop
sub
mov
mov
inc
inc
add
shr
push
mov
shl
neg
add
and
pop
add
sub
mov
add
xchg
mov
mov
mov
shr
push
jmp
add
add
shl
jmp
mov
mov
pop
mov
pop
pop
add
push
push
mov
dec
sub
inc
and
jmp
mov
add
add
xor
pop
jmp
push
jmp
add
sub
mov
mov
neg
sub
jmp
add
shl
add
add
and
pop
sub
jmp
add
jmp
pop
jmp
pop
add
jmp
push
pop
jmp
push
jmp
pushl
pop
add
xor
mov
add
jmp
add
jmp
pop
push
mov
push
pop
sub
mov
sub
jmp
neg
sub
jmp
popl
jmp
mov
sub
xor
mov
add
add
mov
add
jmp
jmp
add
pop
add
jmp
xor
sub
add
pop
push
mov
and
pop
dec
jmp
pushl
mov
jmp
pop
add
push
push
pop
push
mov
add
mov
add
push
push
pop
sub
add
jmp
xor
xor
pop
test
pushf
jmp
mov
pop
jmp
pop
mov
push
mov
add
push
mov
sub
mov
jmp
mov
add
mov
push
mov
push
mov
jmp
mov
mov
add
pop
sub
xchg
pop
mov
push
push
pop
jmp
xor
push
addl
pop
sub
pushl
pop
jmp
add
add
xchg
pop
jmp
pop
mov
push
mov
add
add
xchg
pop
sub
mov
mov
push
mov
not
jmp
pop
sub
mov
mov
jmp
mov
add
add
xchg
pop
jmp
mov
jmp
pushl
pop
jmp
mov
pop
jmp
mov
jmp
push
mov
push
jmp
push
jmp
push
pushl
mov
add
jmp
xchg
mov
mov
jmp
sub
sub
add
add
pop
jmp
and
pop
add
sub
or
jmp
mov
mov
jmp
pop
add
push
pushl
pop
popl
pop
push
mov
jmp
pop
add
pop
push
jmp
push
push
pop
jmp
mov
jmp
xor
mov
pushl
pop
add
add
pop
sub
sub
push
mov
jmp
sub
add
push
jmp
sub
pop
jmp
push
mov
add
pop
pop
mov
jmp
sub
mov
pushl
pop
jmp
inc
xor
sub
add
add
pop
pop
jmp
mov
add
pop
jmp
sub
add
add
pop
xchg
mov
push
mov
jmp
sub
add
push
mov
jmp
mov
add
add
xchg
pop
not
sub
mov
mov
jmp
pushl
mov
jmp
add
sub
sub
jmp
push
mov
sub
pop
jmp
mov
push
jmp
push
jmp
lods
jmp
add
mov
jmp
push
mov
or
or
add
jmp
shl
add
add
pop
jmp
pushl
pop
jmp
push
notl
pop
push
jmp
sub
pop
push
mov
jmp
add
xchg
pop
jmp
push
mov
mov
shl
push
mov
and
pop
xor
jmp
push
push
mov
add
xor
pop
pushl
mov
add
push
push
pop
add
push
mov
mov
add
pop
push
jmp
sub
pushl
pop
add
add
jmp
mov
jmp
mov
add
sub
pop
add
add
pop
xor
xor
xor
mov
cmp
pushf
jmp
mov
sub
push
mov
jmp
push
jmp
xchg
mov
mov
jmp
shl
neg
xor
jmp
mov
sub
add
add
pop
add
jmp
mov
push
mov
sub
mov
mov
shr
push
mov
mov
inc
jmp
add
sub
pop
xor
xor
xor
mov
jmp
push
mov
sub
add
add
pop
add
sub
jmp
push
mov
xor
pop
mov
pop
sub
sub
add
mov
add
sub
mov
push
mov
sub
mov
pop
jmp
dec
shr
push
mov
shr
push
mov
xor
sub
pop
or
add
not
sub
add
sub
sub
add
add
add
pop
add
push
mov
or
pop
shr
not
sub
add
pop
movzbl
cmp
je
pushl
jmp
sub
pop
mov
pop
add
pop
sub
mov
jmp
bswap
sub
mov
sub
jmp
mov
mov
pushl
pop
popl
mov
roll
pushf
jmp
pop
add
sub
add
jmp
mov
jmp
pop
jmp
push
mov
sub
mov
mov
sub
sub
add
sub
xor
pop
jmp
shl
sub
add
pop
jmp
xor
mov
and
pushf
jmp
mov
jmp
mov
addl
popl
addl
jmp
pop
jmp
push
mov
push
mov
mov
jmp
add
jmp
add
pop
jmp
mov
add
add
jmp
pushl
jmp
sub
add
pop
push
pushl
pop
popl
mov
pushl
mov
push
mov
add
push
mov
add
pop
jmp
pop
add
add
sub
sub
jmp
pop
sub
mov
pushl
mov
add
popl
pop
jmp
pop
jmp
mov
push
jmp
shl
dec
shl
shl
push
mov
push
mov
jmp
add
sub
jmp
pop
sub
jmp
xchg
pop
jmp
mov
not
dec
sub
xor
pop
add
pop
sub
mov
push
mov
jmp
mov
add
jmp
mov
inc
not
sub
sub
jmp
add
sub
jmp
sub
sub
add
pop
push
mov
jmp
shr
push
sub
jmp
mov
add
sub
xchg
mov
mov
mov
sub
mov
jmp
popl
mov
idiv
movzbw
pushw
jmp
sub
add
add
pushl
pop
push
mov
add
add
xchg
pop
jmp
mov
mov
push
mov
xor
pop
dec
push
mov
push
mov
jmp
mov
add
push
push
mov
mov
sub
pop
shr
add
sub
pop
jmp
popl
push
mov
jmp
add
push
push
push
mov
jmp
shr
push
mov
shr
shr
add
xor
pop
add
pushl
pop
add
xchg
pop
mov
add
sub
mov
mov
inc
shr
jmp
add
push
mov
jmp
push
push
mov
mov
add
jmp
push
jmp
pop
add
mov
jmp
sub
mov
notb
pop
jmp
pop
jmp
mov
addl
jmp
push
jmp
add
sub
push
mov
push
push
push
mov
add
jmp
xor
mov
push
mov
push
push
popl
push
mov
push
mov
and
not
not
sub
mov
pop
add
jmp
push
mov
jmp
neg
sub
jmp
mov
add
sub
jmp
push
jmp
mov
add
add
push
addl
pop
sub
pop
push
popl
pop
xor
sub
mov
pushl
pushl
jmp
xor
add
jmp
push
pop
add
sub
xor
xor
xor
pop
mov
push
jmp
sub
add
push
mov
add
pop
sub
mov
add
add
jmp
pushl
pop
push
mov
push
mov
mov
add
push
mov
add
pop
not
inc
sub
add
pop
push
mov
add
pop
jmp
sub
push
push
pop
jmp
sub
sub
pop
mov
add
push
mov
add
jmp
sub
push
mov
add
xor
pop
push
mov
not
push
push
jmp
push
mov
mov
shl
jmp
xchg
jmp
add
jmp
add
pop
jmp
sub
pop
xor
movzbl
popl
jmp
sub
jmp
shr
inc
and
push
mov
xor
jmp
pop
jmp
mov
add
add
xchg
pop
sub
xchg
pop
jmp
mov
jmp
xchg
pop
mov
jmp
mov
mov
add
add
xchg
pop
push
push
mov
jmp
push
mov
mov
add
sub
add
sub
jmp
or
sub
mov
mov
xor
sub
xor
pop
push
mov
and
pop
push
mov
add
pop
jmp
add
add
xchg
pop
jmp
pop
jmp
mov
add
pop
jmp
mov
add
push
mov
jmp
mov
jmp
popl
jmp
mov
jmp
push
mov
add
jmp
sub
inc
xor
xor
sub
jmp
push
jmp
pushl
popf
pop
adc
pushf
jmp
push
jmp
mov
xor
mov
pop
sub
mov
jmp
and
jmp
neg
jmp
not
jmp
add
xchg
pop
jmp
push
mov
xor
sub
pop
sub
pop
add
push
mov
add
pop
add
sub
mov
push
mov
jmp
pop
add
jmp
mov
add
sub
xchg
not
xor
xor
xor
sub
and
jmp
add
pop
jmp
sub
jmp
mov
push
push
mov
jmp
xor
and
sub
shl
sub
jmp
add
jmp
not
xchg
inc
sub
mov
pushl
pop
push
push
pop
add
push
mov
not
and
shl
sub
add
pop
xchg
jmp
and
dec
jmp
add
add
jmp
xor
or
not
not
shr
shr
add
add
pop
pop
xor
jmp
sub
sub
add
jmp
sub
jmp
mov
add
add
pop
add
jmp
sub
shl
dec
push
mov
sub
add
push
jmp
xchg
jmp
add
add
xchg
jmp
mov
subl
addl
add
subl
addl
pop
pushl
pop
push
mov
add
push
mov
add
pop
xchg
pop
sub
mov
mov
xor
add
jmp
mov
pushl
pushl
pop
jmp
pop
push
pushl
pop
popl
mov
movsbw
sub
jmp
neg
jmp
mov
jmp
add
pop
pop
sub
jmp
push
mov
add
add
xchg
pop
popl
jmp
movswl
jmp
add
add
jmp
sub
mov
addl
pop
push
push
push
pushl
pop
jmp
lods
pushw
mov
mov
jmp
shl
dec
shr
sub
add
add
pop
sub
push
mov
sub
and
shl
sub
add
add
sub
pop
pop
push
push
sub
mov
push
mov
push
mov
jmp
jmp
mov
push
mov
add
or
dec
jmp
pop
and
pushl
jmp
push
mov
jmp
sub
add
jmp
add
jmp
mov
pop
and
jmp
sub
add
jmp
mov
add
mov
add
jmp
mov
mov
shr
sub
push
mov
sub
pop
add
pop
mov
add
sub
sub
pop
add
add
jmp
pop
sub
or
jmp
sub
jmp
jmp
mov
push
mov
add
push
mov
push
jmp
mov
jmp
mov
xor
pop
sub
pop
xor
mov
add
xor
jmp
mov
jmp
sub
add
add
push
mov
mov
jmp
add
pushl
jmp
pop
jmp
add
add
pushl
pushl
jmp
mov
mov
add
pop
add
pop
jmp
sub
pop
add
sub
sub
add
pop
sub
mov
jmp
pop
jmp
sub
mov
add
push
mov
xor
jmp
pop
push
mov
push
mov
sub
xor
xor
sub
pop
jmp
add
push
mov
jmp
pop
push
jmp
mov
push
mov
push
jmp
pushl
jmp
mov
pop
jmp
pushw
mov
push
mov
mov
sub
jmp
add
jmp
xor
or
pop
inc
sub
add
jmp
pop
mov
mov
or
push
mov
inc
jmp
add
xchg
mov
and
pushl
mov
add
push
mov
add
push
jmp
mov
add
sub
mov
add
xchg
mov
jmp
pop
sub
mov
pop
jmp
mov
sub
add
not
neg
or
add
add
pop
add
xor
jmp
mov
push
mov
jmp
xchg
jmp
push
jmp
sub
add
add
add
jmp
mov
addl
mov
add
jmp
xor
pop
xor
add
pop
pop
push
mov
add
pop
add
sub
sub
jmp
jmp
push
xor
xor
xor
jmp
push
mov
inc
sub
jmp
xor
pop
push
mov
mov
pop
pop
add
jmp
mov
push
pop
not
add
jmp
pop
push
mov
shr
sub
or
pop
add
add
jmp
pop
sub
mov
jmp
or
pop
jmp
mov
jmp
mov
push
jmp
sub
push
jmp
xchg
pop
mov
jmp
xor
push
mov
shr
dec
add
xor
sub
sub
add
mov
add
mov
pushl
pop
add
subl
jmp
mov
mov
add
add
jmp
push
mov
jmp
mov
mov
xor
push
mov
xor
jmp
mov
jmp
shl
sub
mov
push
mov
jmp
pop
push
mov
jmp
mov
push
push
pop
jmp
mov
xor
mov
add
jmp
xor
add
pop
sub
add
jmp
sub
pop
sub
jmp
push
mov
push
pop
push
mov
not
or
jmp
xor
xor
xor
mov
jmp
neg
sub
add
pop
add
jmp
sub
add
pop
pop
xor
jmp
jmp
mov
push
jmp
push
mov
and
or
inc
shr
sub
add
jmp
add
add
xchg
pop
jmp
push
mov
sub
mov
push
push
push
pop
dec
neg
xor
mov
pop
mov
pop
sub
push
push
pop
pop
pop
jmp
sub
add
pop
xor
xor
jmp
sub
jmp
add
jmp
sub
jmp
mov
sub
pop
sub
add
pop
neg
shl
xchg
jmp
mov
xor
pop
mov
pushl
mov
add
jmp
mov
add
add
xor
xor
xor
mov
popl
mov
mov
push
mov
mov
add
push
mov
push
push
jmp
xor
pop
mov
push
pop
push
push
push
pop
jmp
sub
xchg
jmp
push
mov
xor
mov
add
add
jmp
mov
add
xor
pop
jmp
sub
inc
shr
and
jmp
popl
mov
mov
sub
mov
mov
push
mov
sub
add
push
push
push
pop
inc
or
neg
add
jmp
pop
push
mov
mov
jmp
add
jmp
add
pop
add
sub
add
jmp
push
mov
push
push
jmp
mov
add
pop
mov
jmp
mov
jmp
mov
push
mov
jmp
mov
sub
jmp
add
push
push
jmp
pop
add
push
mov
add
sub
xchg
pop
mov
push
pop
sub
jmp
push
jmp
pushl
mov
jmp
mov
add
inc
sub
jmp
push
mov
add
dec
add
add
mov
add
jmp
add
jmp
mov
add
sub
mov
jmp
mov
push
mov
jmp
sub
mov
push
pop
add
jmp
add
mov
jmp
add
and
pop
shl
push
mov
jmp
mov
not
push
jmp
mov
xchg
not
xchg
and
sub
xor
pop
or
add
sub
sub
add
add
add
jmp
mov
add
shr
and
jmp
mov
push
mov
jmp
not
jmp
add
sub
jmp
pop
push
jmp
add
add
jmp
add
dec
add
xor
sub
mov
subl
pop
push
mov
add
and
push
jmp
pushl
pop
add
push
mov
jmp
sub
jmp
mov
add
neg
push
mov
sub
sub
jmp
mov
mov
jmp
mov
add
mov
jmp
mov
jmp
mov
add
mov
add
jmp
neg
jmp
push
push
mov
mov
pop
push
xchg
not
xchg
jmp
pop
add
push
push
pop
add
sub
xchg
pop
mov
mov
push
mov
shr
shr
sub
jmp
sub
mov
push
mov
add
sub
xchg
pop
mov
mov
jmp
xor
mov
add
jmp
mov
add
mov
sub
jmp
add
jmp
popl
jmp
mov
jmp
add
pop
xchg
pop
jmp
pop
sub
mov
push
jmp
sub
jmp
mov
jmp
sub
sub
jmp
add
sub
jmp
add
pop
pop
add
add
jmp
mov
add
add
jmp
pushl
pop
push
mov
add
add
jmp
mov
mov
jmp
pushl
popf
pop
rclb
pushf
jmp
pop
add
add
sub
mov
mov
jmp
add
jmp
push
jmp
pop
popl
pop
sub
pushf
jmp
add
pop
add
xchg
jmp
popl
mov
jmp
push
pushl
mov
add
push
jmp
pushl
pop
sub
mov
push
pop
push
jmp
sub
add
add
pop
push
mov
add
push
push
mov
mov
jmp
inc
sub
add
sub
add
jmp
jmp
or
sub
mov
jmp
push
jmp
mov
add
jmp
xor
jmp
xor
pop
mov
mov
or
push
sub
mov
mov
push
mov
jmp
mov
sub
push
push
mov
mov
sub
pop
inc
jmp
pushl
pushl
pop
sub
mov
push
pop
jmp
add
jmp
add
push
jmp
pop
mov
push
pushl
jmp
pop
mov
push
mov
push
jmp
pop
jmp
push
push
push
push
push
pop
xor
mov
pop
mov
pop
xor
inc
jmp
sub
pop
xor
mov
push
mov
add
add
xchg
pop
jmp
push
mov
add
add
xchg
pop
jmp
add
add
add
pop
add
xchg
pop
sub
mov
push
mov
push
push
mov
mov
pop
jmp
push
mov
mov
dec
push
mov
mov
or
mov
add
jmp
push
mov
add
add
add
pop
mov
add
add
pop
push
mov
mov
add
pop
jmp
neg
jmp
sub
sub
pop
push
mov
mov
jmp
pop
add
push
jmp
add
sub
jmp
not
dec
shr
xor
add
jmp
sub
pushl
pop
add
sub
jmp
mov
sub
mov
push
push
jmp
sub
mov
mov
add
jmp
add
mov
add
pop
jmp
pop
xchg
pop
mov
mov
add
sub
jmp
mov
push
jmp
pushl
pop
add
add
pushl
mov
add
jmp
xor
xchg
push
mov
mov
xor
pop
push
jmp
push
mov
push
mov
add
jmp
xchg
pop
jmp
add
sub
sub
pop
push
mov
mov
add
add
sub
pop
push
push
jmp
add
shl
xor
add
jmp
push
mov
sub
mov
mov
sub
mov
jmp
not
add
mov
pop
not
jmp
popl
pop
xor
shr
add
push
mov
sub
xor
pop
xor
jmp
pushl
jmp
xor
jmp
add
push
pushl
jmp
sub
jmp
add
jmp
mov
sub
pop
xchg
pop
mov
mov
add
push
mov
push
mov
sub
jmp
pushl
pushl
pop
jmp
push
jmp
mov
jmp
add
sub
jmp
push
mov
sub
add
pop
sub
add
pop
shl
shr
sub
jmp
push
mov
not
jmp
mov
push
push
push
mov
mov
sub
pop
mov
pop
push
jmp
mov
add
add
sub
sub
add
jmp
xor
jmp
mov
shl
dec
sub
jmp
addl
pop
push
jmp
push
pushl
pop
add
add
push
mov
jmp
mov
mov
sub
add
shl
not
sub
jmp
inc
xor
jmp
push
mov
add
sub
xchg
pop
mov
push
mov
mov
jmp
push
pop
add
jmp
push
jmp
add
push
mov
jmp
add
mov
jmp
add
pushl
xorl
mov
add
push
mov
jmp
push
mov
add
push
mov
sub
pop
xor
xor
xor
jmp
sub
mov
add
push
jmp
mov
jmp
sub
push
jmp
push
pop
add
sub
xor
mov
pop
jmp
mov
mov
push
mov
add
add
push
jmp
add
add
xchg
mov
push
mov
add
add
jmp
add
push
push
pop
push
push
pop
add
pushl
pop
add
push
jmp
xor
jmp
mov
jmp
add
shr
push
mov
mov
inc
shr
shr
jmp
mov
jmp
sub
sub
mov
jmp
xchg
pop
mov
push
mov
push
mov
push
mov
dec
shr
add
add
add
pop
jmp
add
pushl
jmp
push
mov
add
jmp
add
mov
pop
push
mov
xor
jmp
xor
popw
jmp
add
jmp
pop
or
pushl
jmp
mov
jmp
mov
push
jmp
pushl
mov
add
popl
jmp
add
or
push
mov
or
shr
sub
and
pop
xor
xor
pop
jmp
pop
add
add
jmp
shr
push
jmp
sub
jmp
mov
add
jmp
xchg
pop
mov
jmp
shr
neg
xor
add
pop
pop
add
jmp
pushl
jmp
mov
push
mov
add
push
mov
add
push
mov
jmp
sub
mov
mov
add
jmp
pop
add
and
pushl
pop
push
push
pop
add
add
jmp
push
mov
push
mov
jmp
push
sub
pop
sub
jmp
push
mov
not
add
jmp
sub
jmp
xor
add
pop
push
mov
jmp
addl
jmp
add
jmp
add
add
xor
xor
xor
pop
movzbw
push
mov
push
pop
jmp
mov
sub
mov
push
jmp
xor
add
pop
jmp
pop
shr
push
jmp
mov
xor
pop
jmp
mov
push
jmp
push
mov
mov
xor
pop
shr
xor
jmp
mov
mov
jmp
pushl
pop
jmp
pop
sub
mov
push
mov
mov
xor
mov
pop
dec
push
notb
jmp
pop
jmp
push
jmp
add
shr
shl
xor
jmp
add
xchg
pop
push
mov
and
push
mov
xor
pop
dec
push
mov
mov
jmp
pop
push
mov
push
push
pop
push
mov
jmp
add
push
push
mov
add
add
jmp
add
xchg
pop
popl
mov
and
pushf
jmp
add
sub
not
xor
add
add
pop
push
pushl
pop
popl
jmp
xor
pop
sub
add
jmp
add
add
push
jmp
mov
add
push
push
pop
and
sub
add
jmp
add
jmp
mov
sub
mov
mov
push
jmp
sub
shr
push
push
jmp
xor
not
xor
jmp
add
pop
sub
subb
jmp
sub
push
mov
mov
sub
add
jmp
pop
add
add
sub
sub
pop
add
xchg
mov
sub
jmp
push
mov
add
jmp
push
mov
add
mov
add
push
mov
and
and
dec
dec
add
add
pop
push
mov
add
pop
add
sub
pop
jmp
xor
xor
xor
pop
not
xchg
push
mov
push
mov
mov
add
sub
mov
push
mov
jmp
jmp
push
mov
add
push
jmp
push
pop
jmp
mov
sub
mov
addl
pop
push
mov
jmp
push
mov
add
addl
subl
jmp
push
mov
jmp
push
mov
push
mov
and
push
mov
jmp
add
pop
jmp
mov
sub
sub
and
jmp
mov
add
and
shl
add
jmp
pop
jmp
popl
subl
mov
add
mov
push
jmp
sub
add
add
pop
push
mov
mov
jmp
mov
jmp
sub
mov
push
jmp
pop
jmp
add
xchg
pop
push
pushl
mov
add
jmp
sub
jmp
inc
push
jmp
pushl
pop
jmp
pushl
pop
popl
mov
push
jmp
mov
add
add
push
pushl
pop
popl
pop
xor
jmp
push
jmp
xor
sub
jmp
sub
pop
sub
mov
jmp
xor
xor
mov
sub
mov
jmp
add
jmp
mov
neg
jmp
mov
add
jmp
pop
jmp
mov
add
sub
sub
mov
mov
push
mov
push
mov
mov
jmp
mov
mov
pop
jmp
mov
add
add
sub
push
jmp
add
jmp
xor
xor
jmp
mov
jmp
sub
jmp
pop
sub
jmp
sub
pushw
jmp
mov
add
jmp
mov
mov
jmp
sub
xor
pop
mov
pop
jmp
push
jmp
add
push
mov
jmp
mov
mov
push
notl
pop
jmp
mov
pop
jmp
push
mov
inc
sub
jmp
mov
notl
jmp
pop
xor
xor
pop
and
add
jmp
or
sub
sub
add
add
pop
push
mov
shl
or
shr
inc
sub
xor
xor
pop
sub
inc
jmp
addl
subl
add
addl
subl
push
mov
mov
dec
jmp
xor
push
mov
xchg
push
mov
push
push
mov
jmp
add
push
mov
sub
add
pop
pop
jmp
pop
jmp
pop
jmp
push
jmp
pop
mov
jmp
add
pop
push
mov
add
jmp
add
add
neg
sub
push
mov
add
pop
add
mov
jmp
mov
jmp
mov
jmp
push
mov
addl
pop
add
push
mov
xor
and
shl
push
mov
add
pop
sub
push
mov
add
mov
add
push
mov
not
xor
and
shr
jmp
xor
xor
xor
jmp
pop
neg
xor
mov
mov
add
sub
mov
add
pop
jmp
pop
add
push
mov
push
mov
pop
pushl
pop
add
pushl
jmp
lods
jmp
sub
add
add
mov
jmp
mov
add
push
jmp
mov
jmp
mov
push
mov
jmp
add
jmp
mov
jmp
mov
push
push
mov
pushl
pushl
pop
jmp
xor
jmp
not
xchg
push
jmp
pop
add
xor
xor
jmp
mov
jmp
mov
and
add
push
mov
xor
dec
sub
xor
xor
pop
or
jmp
shl
sub
shl
jmp
xor
push
jmp
xor
add
pop
add
jmp
pop
push
mov
sub
pop
sub
add
add
sub
sub
mov
mov
add
pop
push
mov
mov
sub
push
mov
jmp
shl
jmp
call
shrb
or
mov
pop
clc
add
mov
xor
jmp
or
add
sahf
loopne
test
or
in
push
idiv
xor
mov
pop
mov
add
mov
sub
xor
add
mov
mov
mov
sub
mov
dec
mov
cmp
jne
and
xchg
sahf
mov
idivb
push
push
add
xor
filds
jnp
inc
push
dec
enter
sahf
cmp
jle
cmp
inc
cmp
mov
sahf
mov
sahf
mov
sahf
mov
sahf
mov
sahf
mov
sahf
mov
push
loop
inc
xchg
adcb
and
loop
subb
loope
inc
xchg
adcb
and
loopne
subb
fildll
xchg
adcb
and
test
xchg
adcl
call
or
dec
lea
lret
push
push
xchg
repnz
mov
fidivrl
pop
mov
jb
jb
movsl
jae
popa
std
adc
out
pop
sbb
popf
push
push
and
or
stos
jp
mov
in
lods
rolb
lods
add
pop
pushf
mov
fsub
lods
sar
mov
add
push
lret
inc
pushf
cmp
mov
shrl
decl
lods
inc
in
add
lods
inc
inc
ret
lahf
shll
cmp
outsl
cmp
and
mov
aam
test
sbb
xchg
and
test
cmp
repz
inc
mov
xor
mov
into
mov
cmp
jae
jo
lds
pushf
addl
fstpl
cmpsb
movsl
sbb
aaa
mov
sub
inc
cmp
clc
in
iret
xor
clc
xchg
jo
xor
sbb
jmp
mov
inc
mov
jb
stos
inc
inc
shrl
test
add
xorb
or
andb
js
pop
cmp
mov
cmp
std
sbb
jp
and
shll
ret
fldenv
mov
rolb
mov
mov
shll
inc
cmp
adc
icebp
sub
mov
pop
jno
adc
xchg
test
ret
add
stos
jne
bound
testl
sahf
pop
movsb
pop
xor
and
sub
test
sub
aas
xchg
aaa
xchg
pop
jbe
jb
loopne
sahf
mov
or
dec
mov
ds
jne
subl
mov
sahf
insb
sbb
gs
and
inc
mov
sub
mov
sub
cmp
xor
xchg
lret
jg
xor
cmp
add
scas
add
in
xchg
jl
sub
add
jle
or
dec
hlt
sub
lods
ja
test
inc
sti
bound
cli
or
sahf
stos
inc
das
mov
jg
inc
adc
jg
mov
scas
adc
xchg
lds
jno
jb
jl
sub
cli
stos
jne
xchg
jg
in
leave
fisubrs
cmp
inc
icebp
pop
aas
add
test
pop
push
pop
push
jg
sub
cmp
push
and
cmp
decb
push
stos
xchg
mov
add
inc
in
dec
shl
mov
dec
cwtl
mov
dec
test
and
dec
mov
out
movsl
lret
inc
push
data16
cmpb
int
icebp
loop
mov
push
fisubs
xlat
lret
ja
xorl
xchg
inc
int3
cltd
pop
call
adc
add
dec
dec
mov
sub
pop
cld
jmp
sbb
nop
pop
mov
mov
adc
je
mov
mov
inc
mov
xor
iret
test
scas
insl
nop
pop
call
lock
push
outsb
jmp
mov
loop
out
push
loop
pushf
and
inc
scas
jae
jo
or
out
lods
jne
adc
pusha
push
testb
int
stos
inc
lock
or
int3
cli
outsl
aam
rorb
fs
lods
mov
sahf
mov
frstor
lcall
test
push
or
sub
mov
mov
jb
and
xor
push
or
test
sbb
dec
xlat
jnp
push
xchg
mov
leave
jb
sbb
xlat
pop
leave
icebp
iret
lods
sub
pop
ret
and
inc
pop
sub
mov
add
jns
xchg
mov
xor
test
sbb
inc
in
push
ret
fsubs
iret
lods
sbb
and
imul
jmp
xchg
ljmpw
lds
lahf
cs
xchg
inc
cltd
sub
xchg
mov
mov
sbb
repnz
mov
mov
scas
jmp
mov
mov
ret
bound
push
or
adc
and
je
pop
jmp
ja
scas
adcl
cmp
in
jns
pushf
mov
insb
inc
or
or
movsb
mov
inc
and
sbb
pop
pop
ret
push
pushf
jnp
cwtl
fdivrl
jg
mov
push
ss
pop
in
int
dec
pop
sbb
shrb
into
cmp
sub
mov
jb
and
roll
mov
aaa
push
repnz
xchg
pop
out
xchg
inc
add
mov
cmp
lock
js
sub
inc
add
lods
mov
xor
stos
inc
lock
mov
ds
jae
adcl
test
test
ficomps
push
das
in
push
ret
adc
push
jg
pop
and
ljmp
insb
mov
inc
pop
adcl
mov
adc
adc
ljmp
daa
push
push
mov
cmp
je
jg
cmpsb
pop
ficoms
jecxz
mov
scas
fcompl
mov
xchg
call
sbb
jb
out
push
inc
and
mov
daa
sbb
mov
cmpsb
cltd
or
aad
sbb
pop
out
cmp
inc
movsl
imul
mov
mov
pop
pop
pop
sbb
pop
stc
call
sbb
loopne
lcall
ljmp
ja
mov
push
or
shlb
dec
or
pop
and
mov
loopne
cld
dec
test
mov
in
rcr
sbb
and
and
mov
adc
cmp
sbb
sub
xor
jge
pop
sahf
test
cmc
aad
mov
sub
stos
dec
jno
mov
push
aad
incl
movsb
cmp
mov
repz
lcall
xchg
sub
out
aad
jecxz
sbbl
mov
xor
fcoml
add
pushf
pop
jp
insl
xorb
mov
test
or
enter
jle
pop
pop
shll
sahf
pop
xchg
fwait
das
dec
fstpt
mov
inc
xchg
and
roll
push
jl
pop
f2xm1
xchg
push
xorl
cli
shl
idiv
dec
lock
es
jae
xchg
mov
or
adc
adc
xor
imul
pop
push
repnz
jle
inc
mov
popf
rcr
adc
mov
inc
xor
and
xchg
decb
stos
aas
inc
nop
xor
arpl
cmp
xor
lods
fwait
mov
push
add
int
leave
sbb
push
cmp
sub
adc
aaa
popf
mov
push
add
incl
cmp
add
shl
dec
pop
mov
pop
sbb
xor
sbb
inc
clc
sbb
sbb
pop
jecxz
popf
dec
les
dec
cmp
add
fisubl
push
ss
sbb
enter
mov
and
jge
ja
pop
imul
bound
into
retw
ds
pop
pop
xchg
and
pushf
sub
cmp
js
or
mov
xchg
xchg
jp
jno
and
pop
and
jno
int3
add
cmp
jne
ja
push
imul
mov
adc
jge
popf
in
addb
test
mov
or
xor
lcall
mov
dec
sbb
sub
sub
ja
mov
and
lods
sahf
mov
sbb
addb
test
sahf
mov
xlat
fbld
inc
sahf
jp
pop
sahf
mov
loopne
mov
inc
pop
jp
inc
sahf
mov
xchg
cmp
mov
testl
enter
inc
mov
sahf
mov
mov
mov
add
or
mov
push
dec
pop
inc
and
push
jge
jbe
cmp
add
cmp
mov
das
cmp
dec
gs
and
cmp
jp
inc
sahf
mov
bound
inc
enter
pop
cmpsl
cmp
ds
dec
ret
push
adc
cld
and
imul
cld
pusha
mov
inc
and
inc
sub
push
ret
ljmp
lods
int
mov
or
mov
pop
sub
and
xchg
daa
sub
push
and
inc
jae
pop
xor
sahf
inc
sub
jo
mov
mov
add
mov
pop
sbb
cmp
and
xchg
daa
sub
pop
adc
mov
and
mov
sbb
cmp
and
xchg
daa
sub
in
adc
inc
xor
sbb
or
or
sahf
cmp
cmpsb
std
cmp
outsb
sahf
inc
sbb
cmp
adc
jmp
sbb
call
inc
xor
sahf
mov
sahf
mov
sahf
mov
sahf
mov
sahf
mov
and
aam
cmpsl
cld
enter
dec
imul
fcmovne
rolb
mov
rolb
int3
rolb
mov
into
mov
jo
arpl
fcoms
cmpsl
mov
jo
arpl
and
pop
cmpsl
mov
jo
arpl
cmp
pop
cmpsl
int3
mov
sub
int3
rolb
pop
cmpsl
cmp
adc
cmpsl
pop
dec
enter
pop
cmpsl
cmp
aas
add
sarb
into
mov
jo
arpl
fcoms
cmpsl
mov
jo
arpl
and
pop
cmpsl
mov
jo
arpl
cmp
pop
cmpsl
int3
mov
sub
int3
rolb
pop
cmpsl
cmp
adc
cmpsl
pop
dec
enter
pop
cmpsl
cmp
aas
add
sarb
into
mov
jo
arpl
fcoms
cmpsl
mov
jo
arpl
and
pop
cmpsl
mov
jo
arpl
cmp
pop
cmpsl
int3
mov
sub
int3
rolb
pop
cmpsl
cmp
adc
cmpsl
pop
dec
enter
pop
cmpsl
cmp
aas
add
sarb
into
mov
jo
arpl
fcoms
cmpsl
mov
jo
arpl
and
pop
cmpsl
mov
jo
arpl
cmp
pop
cmpsl
int3
mov
sub
int3
rolb
pop
cmpsl
cmp
adc
cmpsl
pop
dec
enter
pop
cmpsl
cmp
aas
add
sarb
into
mov
jo
arpl
fcoms
cmpsl
mov
jo
arpl
and
pop
cmpsl
mov
jo
arpl
cmp
pop
cmpsl
mov
mov
jp
inc
sahf
mov
sbb
cmpsl
push
xchg
cmp
cmpsl
mov
movsl
mov
and
add
into
add
sbb
addb
jle
cmp
gs
mov
pop
push
loope
ret
cmp
mov
mov
imul
xlat
mov
jp
inc
sahf
mov
sbb
cmpsl
push
xchg
xchg
je
arpl
das
aam
cmpsl
cmp
mov
into
and
or
inc
add
sarb
into
pop
dec
mov
das
arpl
aam
lret
rolb
inc
sbb
addb
jge
cmp
arpl
and
pop
cmpsl
mov
jo
arpl
cmp
pop
cmpsl
sub
int3
rolb
inc
into
cld
enter
dec
imul
inc
cmp
mov
mov
das
arpl
xchg
cmp
add
int3
rolb
pop
cmpsl
mov
mov
cmpsl
mov
stos
mov
jns
dec
rolb
inc
jns
dec
rolb
inc
inc
and
pop
cmpsl
cld
enter
dec
imul
fcmovne
rolb
mov
rolb
int3
rolb
enter
pop
cmpsl
cmp
inc
jns
aam
ret
iret
aam
imul
fs
cli
incb
leave
je
arpl
das
aam
cmpsl
cmp
mov
into
and
or
inc
add
sarb
into
pop
dec
mov
das
arpl
aam
lret
rolb
inc
sbb
addb
jge
cmp
arpl
and
pop
cmpsl
mov
jo
arpl
cmp
pop
cmpsl
sub
int3
rolb
inc
into
cld
enter
dec
imul
inc
cmp
mov
mov
das
arpl
xchg
cmp
add
int3
rolb
pop
cmpsl
mov
mov
cmpsl
mov
stos
mov
jns
dec
rolb
inc
jns
dec
rolb
inc
inc
and
pop
cmpsl
cld
enter
dec
imul
fcmovne
rolb
mov
rolb
int3
rolb
enter
pop
cmpsl
cmp
inc
jns
aam
ret
xlat
lret
push
imul
inc
push
xor
aam
cmpsl
mov
push
xor
aam
cmpsl
mov
pushf
pop
sub
mov
sub
int3
rolb
pop
cmpsl
cmp
adc
cmpsl
pop
dec
enter
pop
cmpsl
cmp
aas
add
sarb
into
mov
jo
arpl
fcoms
cmpsl
push
loope
mov
dec
cmp
mov
inc
jns
sub
rolb
inc
jns
adc
and
inc
enter
dec
cmp
mov
and
aam
cmpsl
cmp
mov
into
and
sahf
or
inc
movsl
leave
push
mov
popa
add
int3
rolb
xchg
cld
enter
dec
imul
cmp
add
lret
cmc
adc
cmpsl
mov
inc
pop
jp
inc
sahf
mov
and
aam
cmpsl
mov
sahf
mov
mov
lahf
mov
jns
dec
rolb
inc
dec
je
arpl
add
je
arpl
das
aam
cmpsl
cmp
mov
into
and
or
inc
add
sarb
into
pop
dec
mov
arpl
aam
lret
rolb
inc
sbb
addb
jge
cmp
arpl
and
pop
cmpsl
mov
jo
arpl
cmp
pop
cmpsl
sub
int3
rolb
inc
into
cld
enter
dec
imul
inc
cmp
mov
mov
das
arpl
xchg
cmp
add
lret
cmc
adc
cmpsl
mov
mov
cmpsl
mov
stos
mov
jns
dec
rolb
inc
jns
dec
rolb
inc
inc
mov
int3
and
sbb
iret
pop
push
imul
int3
mov
pusha
add
pop
ret
mov
jns
les
andb
daa
add
int3
rolb
inc
int3
and
cmp
mov
inc
jns
sub
ret
mov
pusha
add
pop
ret
mov
jns
les
andb
daa
add
fs
mov
int3
and
mov
push
imul
int3
mov
sub
iret
rolb
inc
xchg
cmp
pop
xor
scas
mov
push
enter
and
addb
jp
cmp
mov
inc
cmp
mov
mov
or
repnz
lahf
fsubrs
into
inc
cltd
jp
outsl
inc
mov
or
mov
into
jmp
mov
iret
cld
daa
jge
ret
xchg
mov
outsb
push
incl
mov
push
test
out
das
shll
lret
pop
mov
rolb
add
mov
iret
jnp
add
mull
sbb
xchg
add
sub
pop
repnz
adc
out
push
add
call
cmc
cld
xchg
std
enter
cmc
icebp
xchg
sti
add
cld
sti
and
ficoms
std
fisttpll
add
nop
dec
cld
xchg
std
add
mov
pop
hlt
sub
pop
add
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
adc
nop
sbb
xchg
std
cmpsb
push
xchg
std
cmpl
dec
lret
ficomps
and
les
loope
imul
out
pop
and
jns
add
movsb
sub
add
retw
pop
or
cmpsb
imul
adc
push
in
add
add
xor
xchg
push
jmp
fistps
sub
das
jmp
lret
call
xchg
mov
push
mov
dec
lret
mov
mov
mov
sbb
imul
loop
mov
sub
iret
push
mov
pop
cmp
mov
mov
add
push
les
std
cmpsl
orl
in
add
add
or
xchg
push
jmp
fistps
sub
imul
std
cmpsb
push
or
andl
and
hlt
mov
stos
push
xchg
std
cmpsl
imul
std
out
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
push
push
cmp
cmpsb
xor
sub
xor
cmpsb
add
icebp
lea
stc
cs
or
icebp
mov
sbb
xor
sti
daa
fsubrp
cltd
and
adc
push
test
lret
std
cmpsb
push
aam
mov
add
mov
add
scas
out
add
scas
out
add
mov
add
cmpsb
push
xchg
std
cmpsb
push
std
cmpsb
push
xchg
std
mov
push
xchg
std
cmpsb
push
xchg
std
cmpsb
bound
std
ss
xchg
std
and
xchg
std
cmpsb
push
xchg
std
test
push
xchg
std
cmpsb
push
xchg
std
ret
std
into
arpl
std
cmpsb
push
xchg
std
sub
xchg
std
js
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
mov
mov
std
mov
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
test
push
mov
push
xchg
std
cmpsb
push
std
cmpsb
push
std
cmpsb
push
mov
cmpsb
push
mov
cmpsb
push
test
cmpsb
push
xchg
cmpsb
push
loope
cmpsb
push
jecxz
cmpsb
push
sahf
nop
and
push
nop
std
stos
push
xchg
std
cmpsb
push
mov
cmpsb
push
mov
cmpsb
push
mov
cmpsb
push
mov
cmpsb
push
mov
cmpsb
push
mov
cmpsb
push
mov
cmpsb
push
mov
cmpsb
push
mov
cmpsb
push
mov
cmpsb
push
nop
popf
mov
arpl
lahf
push
out
out
pop
nop
mov
jecxz
subb
xchg
nop
test
push
out
push
cmpsb
std
nop
cld
sbb
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
fs
std
test
cwtl
and
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
or
add
fldz
add
out
add
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
aad
mov
pop
cmpsl
les
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
push
xchg
std
cmpsb
mov
inc
fldt
dec
andl
nop
stos
mov
or
out
push
div
and
enter
std
cmpsb
mov
inc
mov
xchg
pop
mov
or
shr
xchg
std
andl
push
xchg
and
bound
xchg
sbb
mull
shlb
and
mov
mov
dec
cmp
icebp
push
push
daa
imul
and
sbb
daa
or
in
pop
notb
orl
imul
lds
arpl
imul
popf
xor
filds
ret
std
and
enter
pop
movsb
jmp
sbb
pop
fsubp
lcall
sub
push
sbb
call
test
or
add
test
jbe
sbb
jmp
pop
aaa
or
lds
or
adc
enter
rclb
loope
xor
or
in
mov
js
data16
enter
adc
js
jae
dec
push
jb
out
xchg
xchg
call
or
lcall
mov
inc
add
movsl
push
push
push
dec
es
xor
pop
jnp
inc
ljmp
lea
stos
cmp
pop
cli
jns
cli
xchg
xchg
inc
mov
sub
jb
inc
lods
jo
jnp
jnp
xchg
cwtl
cmpl
lea
dec
push
xor
pop
lods
hlt
sbb
notb
mov
fstpt
test
ja
dec
xchg
cs
xor
sbb
pop
pop
and
pop
mov
jle
mov
push
sbb
xchg
lahf
imul
stos
or
cld
pusha
xchg
shrl
mov
pop
xchg
inc
fnstcw
mov
add
imulb
xchg
inc
cmp
aas
jl
mov
xchg
fstps
push
sbb
outsb
lcall
push
inc
fldl
inc
mov
or
lods
pop
call
xchg
pop
rcrl
enter
add
popf
dec
and
clc
sub
pop
xlat
xchg
xor
shll
cmp
or
dec
cmp
or
mov
xchg
std
and
inc
stos
push
mov
mov
push
sub
lcall
inc
stos
xchg
or
lret
add
sub
or
pop
or
lret
add
and
push
les
test
push
xchg
std
cmpsb
loope
loope
jnp
outsb
movsl
imul
mov
jne
std
cmpsb
sbb
popa
pop
aad
mov
aam
pop
sub
aad
inc
into
push
stos
or
dec
out
lret
dec
mov
lret
and
rcrb
or
outsb
out
cmpsb
push
mov
es
shll
mov
and
clc
sub
pop
xlat
xchg
xor
shll
cmp
or
dec
cmp
or
mov
adc
push
mov
cmpsb
push
or
lret
mov
cwtl
or
pushf
fs
std
cmpsb
in
add
fs
cltd
and
out
lea
xor
lret
add
hlt
xchg
std
and
frstor
lret
or
sub
mov
cmpsb
push
xchg
std
pop
mov
cltd
cmpsl
mov
mov
and
std
cmpsb
push
xchg
inc
sarb
sub
aas
pop
mov
test
gs
mov
push
cwtl
inc
mov
xorl
and
xchg
nop
xchg
inc
loop
push
pop
xor
popf
outsb
sbb
xor
pop
fwait
push
mov
cmp
and
loopne
call
cmpsb
stos
or
push
mov
jo
adc
je
and
clc
popf
fwait
cs
cwtl
sbb
int3
pop
les
add
xchg
cmpsb
push
movsb
js
push
out
lret
cmpsb
push
bound
mov
in
add
jl
test
les
add
sbb
xchg
rorb
pusha
adc
hlt
fisttpll
sbbl
std
cmpsb
jecxz
add
les
subl
imul
sub
int
sar
data16
mov
dec
and
xlat
add
cmpsb
or
sub
into
or
mov
cmpsb
mov
and
into
cld
stc
add
cmpsb
mov
sub
add
xchg
into
sbb
daa
xchg
or
sub
cmpsb
pop
icebp
xor
xlat
add
out
add
sar
cmc
sub
sbb
sub
std
hlt
decb
or
cli
cs
sbb
nop
sbb
mov
sbb
nop
sbb
std
cmpsb
push
xor
std
add
xchg
std
cmpsb
push
mov
pop
xchg
out
sub
std
cmpsb
and
mov
cmpsb
push
in
loope
mov
xchg
push
and
ret
sbb
dec
mov
or
in
mov
jns
mov
jecxz
fcomip
std
cmpsb
push
loope
xchg
imul
std
cmpsb
mov
or
and
push
xchg
out
sub
xchg
std
cmpsb
call
std
cmpsb
push
xchg
std
fistpll
std
cmpsb
imul
add
gs
std
andl
mov
cmpsb
imul
std
addl
test
cmpsl
imul
adc
test
xchg
add
js
mov
mov
mov
cmpsb
push
in
add
push
cmp
mov
xchg
std
stos
daa
aam
mov
imul
cmpsb
pop
or
inc
sbb
arpl
push
mov
insl
xchg
std
cmpsb
gs
xchg
mov
js
mov
push
push
std
cmpsb
push
jns
mov
push
out
add
daa
aam
mov
pop
xchg
std
cmpsb
and
mov
cmpsb
push
outsl
push
mov
push
js
mov
mov
fdivr
cmpsb
push
in
add
push
in
lret
std
cmpsb
push
jns
mov
push
out
add
daa
aam
mov
pop
xchg
std
cmpsb
and
insl
mov
push
js
mov
push
out
add
daa
aam
mov
pop
xchg
std
cmpsb
and
inc
fld
mov
cmpsb
push
js
mov
push
out
add
daa
aam
mov
pop
xchg
std
cmpsb
and
inc
fld
mov
cmpsb
push
js
mov
push
out
add
daa
aam
mov
pop
xchg
std
cmpsb
and
dec
ret
cld
cmpsb
push
js
mov
push
out
add
daa
aam
mov
pop
xchg
std
cmpsb
and
insl
aam
mov
cmpsb
push
js
mov
push
out
add
daa
aam
mov
pop
xchg
std
cmpsb
and
rol
les
push
mov
push
out
add
daa
aam
mov
pop
xchg
std
cmpsb
and
add
push
js
mov
push
out
add
daa
aam
mov
pop
xchg
std
cmpsb
and
fxch
les
push
mov
push
out
add
daa
aam
mov
pop
xchg
std
cmpsb
and
popa
ret
les
and
push
mov
mov
mov
cmpsb
push
or
cmpsb
imul
and
call
xchg
std
cmpsb
push
mov
std
cmpsb
push
adc
cmpsb
pop
or
ljmp
xchg
jmp
cmpsb
push
xchg
es
xchg
std
cmpsb
sub
pop
cmpsb
push
xchg
std
mov
push
or
imul
sbbl
ficoml
push
nop
std
cmpsb
push
mov
cmpsb
push
in
add
push
aad
mov
pop
xchg
std
cmpsb
and
mov
cmpsb
push
jecxz
cmpsb
push
ret
movb
jae
fidivs
jns
int3
and
lcall
sub
adc
xlat
lret
jbe,pt
xchg
std
rcl
int3
lret
dec
scas
push
jmp
mov
bound
std
cmpsb
and
pop
xor
ret
add
in
mov
pop
loopne
mov
push
std
fwait
push
pop
dec
cltd
mov
adc
data16
mov
push
xchg
std
cmpsb
outsb
cwtl
mov
cmpsl
outsb
cmp
mov
xchg
lods
or
fstpt
repnz
push
out
pop
inc
movsb
mov
fadds
xchg
xchg
std
mov
push
jmp
fiadds
cltd
out
js
add
mov
icebp
add
in
sbb
and
xchg
sbb
sub
add
lock
sbb
insb
out
or
cmc
sbb
roll
mov
stc
and
pmaddwd
test
clc
push
mov
sbb
psllw
fnsave
cmc
sbb
add
mov
psllw
fdivl
stc
and
adc
jg
sbb
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
mov
rol
mov
pop
insl
js
insb
js
insb
mov
cmc
xchg
icebp
pop
adc
rcl
js
sti
sbb
and
sbb
aam
sub
rol
insb
aam
mov
or
xor
stc
xchg
adc
xchg
ret
sub
dec
pop
add
aam
add
adc
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
cmp
in
sbb
in
shll
mov
sbb
pmaddwd
popl
pop
cmp
push
mov
aad
add
xchg
sbb
push
aam
pop
insl
popf
adc
sbb
test
les
fcoml
icebp
push
fstl
pop
cmp
adc
pop
dec
adc
push
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
pop
xchg
in
push
adc
or
cmc
xchg
adc
or
sbb
sbb
fstps
cmc
dec
mov
or
or
add
xchg
sbb
arpl
sbb
pop
and
fiadds
dec
mov
test
or
cmc
dec
jecxz
add
mov
bnd
sbb
and
and
dec
jbe
repnz
ficoms
cmc
dec
loopne
out
xchg
loope
mov
or
push
sbb
not
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
pop
xchg
ss
or
loope
sbb
and
sbb
cwtl
sbb
add
cltd
adc
test
loope
sbb
sbb
and
and
dec
mov
cmc
xchg
sbb
mov
mov
clc
dec
fisttps
mov
mov
repz
adc
sbb
xor
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
daa
or
or
or
aaa
loopne
mov
adc
loope
xchg
and
dec
xchg
adc
xchg
testl
fucom
stc
sbb
loope
mov
ss
fnstenv
dec
xchg
adc
xchg
mov
mov
mov
xchg
sbb
dec
lea
mov
test
add
cwtl
or
mov
mov
loopne
fnstenv
dec
mov
mov
fstl
xacquire
or
dec
fdivl
cli
sbb
or
int
fstl
xacquire
push
lret
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
sub
aad
add
fnstenv
add
xchg
or
insb
js
insb
js
insb
js
mov
aam
add
fnstenv
add
xchg
or
insb
js
insb
js
insb
js
push
sbb
repz
rcl
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
cmc
cmp
mov
clc
cmp
sbb
jg
sbb
or
insb
js
sti
push
mov
stc
sbb
add
icebp
or
js
add
clc
and
cld
add
mov
mov
loopne
cli
or
and
and
ss
dec
lea
cmc
dec
fstl
icebp
push
fstl
xor
or
add
mov
xchg
hlt
mov
loope
cmp
loope
sbb
sbb
mov
loope
adc
adc
or
cwtl
or
add
xchg
sbb
insl
jmp
cmc
xchg
add
or
loope
sbb
sbb
mov
loope
adc
adc
or
cwtl
or
add
xchg
sbb
insl
mov
sbb
or
loope
cmp
loope
sbb
sbb
mov
loope
adc
adc
or
cwtl
or
add
xchg
sbb
insl
mov
repnz
sbb
and
adc
mov
mov
sti
sbb
sbb
or
or
repnz
loope
sbb
pmaddwd
js
push
or
repnz
sbb
add
pop
cwtl
cld
add
mov
mov
loopne
cli
or
and
and
ss
dec
lea
cmc
dec
fstl
icebp
push
fstl
cmp
out
sbb
pop
loope
cmc
dec
mov
adc
mov
repz
xor
repnz
and
jg
aaa
mov
loopne
mov
mov
lock
add
sbb
jecxz
xchg
pop
icebp
xchg
loope
sbb
ss
xchg
cli
mov
sbb
cltd
icebp
cli
or
adc
enter
mov
loope
xchg
ss
mov
div
mov
loope
test
adc
sbb
insb
js
fldcw
daa
mov
or
stc
sbb
xor
icebp
mov
aaa
clc
and
or
adc
adc
sbb
stc
or
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
insb
js
cmp
fsts
cmc
cmp
sbb
or
insb
js
icebp
sbb
cmc
and
sbb
or
icebp
xchg
xor
xlat
cmp
insb
js
push
lods
icebp
cmp
push
jge
add
js
lods
fadd
sbb
mov
ficoms
filds
or
push
cmpsb
out
push
sti
ret
pop
xlat
jle
cmpsl
lods
fst
insb
js
ljmp
inc
add
jo
pushf
push
bound
lahf
mov
es
rcll
jge
insb
cwtl
pop
xchg
add
mov
jo
rcl
ret
adc
pop
outsb
js
fstp
push
cmpsb
inc
cmp
insb
lea
mov
cmp
cmp
insb
add
jno
pushf
mov
mov
xor
gs
dec
popf
mov
daa
aam
mov
jno
pushf
mov
mov
xor
nop
push
jmp
mov
pop
and
in
insb
out
cltd
xlat
insb
js
mov
aas
in
push
cmp
ljmp
loopne
cmpsb
pop
jae
cmp
xor
daa
xorl
rcl
adc
and
push
ja
fstps
push
rorl
mov
in
mov
shl
call
ret
js
pop
cli
rcr
rcrl
mov
shl
call
rcl
sbb
dec
cmpsb
cmpsb
cmpsl
xor
mov
in
push
cli
in
cmp
dec
in
mov
roll
popf
mov
daa
in
dec
insb
js
dec
repz
jae
xor
gs
dec
popf
mov
daa
aam
rcl
and
mov
in
insb
out
cltd
xlat
insb
js
mov
aas
in
push
cmp
loope
js
pop
cmp
or
cmp
or
shl
cmp
inc
insl
js
imul
or
in
mov
shl
call
ret
js
pop
rcrl
mov
shl
call
rcl
sbb
inc
dec
cmpsb
cmpsb
cmpsl
xor
xor
push
cmpsb
cmp
insb
js
cmp
in
and
jecxz
fisubl
in
mov
roll
popf
mov
daa
in
dec
insb
js
dec
repz
clc
jae
xor
cmp
insb
js
push
jmp
iret
mov
pop
jns
aas
repz
loopne
and
in
insb
repz
xlat
insb
js
mov
aas
or
pushf
mov
loope
js
add
xchg
ret
inc
jp
fwait
in
mov
roll
popf
mov
daa
in
dec
cmpsb
jo
rcll
mov
pop
sub
fisubs
jmp
mov
cmp
dec
cmpsb
jo
rcll
mov
pop
sub
frstor
jmp
jmp
xchg
dec
lods
mov
test
fldcw
test
cmpsb
repnz
shl
loope
pop
loope
sub
cmp
lods
fst
cltd
rolb
lds
pop
cmp
jo
push
mov
js
outsb
insl
js
dec
aam
pop
ffree
out
ffree
cmpl
nop
mov
in
mov
fnstcw
push
iret
sbb
incl
fsubl
xchg
xlat
mov
inc
ds
cmpb
insl
js
dec
fiaddl
ret
ffree
jle
rcl
in
sbbb
cmp
jg
test
rcrb
loope
jo
mov
cs
sbb
jmp
movsb
push
push
cmp
pop
sbb
jl
lahf
push
jge
pop
mov
push
addr16
and
fstpt
push
inc
fildl
cmpsl
push
pop
cmp
pop
sbb
jnp
jo
les
lods
jge
add
add
arpl
stc
cmpb
lret
sub
jecxz
adc
jecxz
out
push
mov
inc
movsl
xor
in
stos
pop
das
cmp
inc
fildl
cmpsl
push
popa
out
pop
add
arpl
jg
stc
sub
fwait
mov
sub
jecxz
add
mov
sar
frstor
std
inc
jbe
fs
pushf
stos
pop
pop
pop
cmp
add
fistpl
add
jecxz
xlat
cmpsb
rep
add
mov
loop
rclb
lahf
cs
xor
aad
pop
push
inc
fimull
mov
rcl
sahf
cs
add
ret
test
mov
cmc
rcrb
pop
pop
cld
add
push
les
out
mov
xchg
ficompl
lea
stos
sub
mov
pop
movsb
outsl
mov
cmp
insb
or
data16
mov
push
stos
pop
scas
dec
cmp
or
push
mov
fistpl
add
jecxz
mov
pop
mov
aad
sbb
in
shll
adc
aaa
lahf
cs
adc
and
push
xor
xorb
arpl
aad
cmp
rcl
popa
stc
xchg
pop
stc
xchg
aad
lahf
push
sbb
out
mov
data16
fwait
jle
pusha
mov
aad
or
xchg
jmp
cmp
add
dec
ljmp
cmp
inc
fildl
cmpsl
push
pop
loop
aaa
es
xorb
pop
fldenv
pop
xchg
aad
adc
lret
sub
jecxz
adc
cmpsb
pop
push
cs
in
add
or
pop
pop
pop
ret
clc
cmpb
inc
cmp
jecxz
lret
sub
cmpsl
push
add
movsb
add
int
shl
mov
jns
sbb
aad
cmp
iret
xlat
add
xchg
pop
stc
xchg
aad
fwait
dec
sbb
mov
pop
pop
cmpsl
adc
addb
jecxz
fcmovne
push
movsb
push
jnp
sahf
pop
popf
push
pop
loopne
pop
aas
ss
mov
push
fistpl
add
jecxz
inc
mov
std
jo
push
mov
ss
mov
lock
lret
sub
jecxz
pop
in
addr16
push
xor
sub
push
push
hlt
lock
pop
loopne
pop
mov
cmp
loope
push
cmp
stos
xchg
mov
pushf
cmp
or
pop
sbb
jge
push
and
js
or
in
inc
imul
pop
push
push
test
push
sbb
mov
mov
sbb
pop
aam
sbb
sbb
mov
fstps
movswl
pop
mov
push
insl
stos
bound
movsb
push
xor
bound
aad
cs
cmp
hlt
rcrl
add
inc
adc
sub
inc
mov
aad
loope
add
imull
dec
enter
pop
pop
pop
lret
shll
xchg
in
repnz
fildl
cmpsl
push
pop
mov
in
adcb
fiadds
push
mov
jmp
push
xchg
pop
sbb
aad
int
add
cmc
popf
cmp
cli
mov
cmp
cmp
bound
movsb
push
sub
ds
push
movsb
push
pop
aad
lock
mov
mov
subl
aad
pop
pop
stos
dec
sbb
sub
mov
mull
adc
adc
pop
addl
pop
stos
add
ds
sbbb
mov
aam
dec
adc
and
xchg
call
inc
jbe
popf
sbb
lahf
cs
adc
addr16
push
xor
adc
lahf
mov
scas
adc
pop
arpl
jecxz
fildl
cmpsl
push
pop
cmp
or
sbb
add
mov
mov
jb
icebp
xchg
aam
incl
stc
push
jae
orb
cmp
cmp
ds
adc
or
mov
lock
lret
sub
jecxz
lret
adc
movsb
push
movsb
addr16
and
jecxz
fcmovne
push
movsb
push
pop
aad
lock
mov
mov
lea
cwtl
cmpsl
and
aad
pop
pop
scas
dec
fldcw
pop
loopne
pop
xlat
dec
cmp
loope
dec
cmp
stos
sbb
add
or
xchg
pop
sbb
push
mov
xlat
pop
push
push
das
mov
and
pop
sbb
add
sahf
pop
addl
aad
pop
fcoml
dec
sbb
movsl
add
and
movsb
push
pop
aam
sbb
loopne
mov
sahf
mov
mov
mov
add
stc
adc
jmp
add
ret
scas
or
dec
sbb
add
mov
stc
xchg
inc
in
stos
imul
in
insb
lret
mov
cmp
pop
sbb
roll
or
aam
push
add
negl
aad
pop
xor
pop
das
xor
fmull
mov
sbb
bound
rcr
mov
pop
arpl
jecxz
ret
in
mov
sbbb
je
movsl
fsubs
stos
pop
arpl
jecxz
ret
mov
cmp
mov
sbb
pop
in
add
push
les
jmp
aam
loope
jge
frstor
jae
stc
and
xchg
dec
cmp
stos
sbb
add
fcoms
mov
test
std
stos
imul
call
aas
addl
aas
aaa
ret
clc
sub
fwait
mov
sub
xor
stc
adc
cs
add
push
sub
and
aaa
cmpsb
sbb
or
std
adc
mov
add
sbb
mov
mov
movsl
add
lods
add
push
or
push
cmpsb
dec
push
cmp
add
push
jmp
jbe
in
mov
cmp
insb
or
mov
mov
subb
cmpsl
and
aad
pop
pop
stos
dec
rcr
repz
inc
mov
xor
loope
int3
xchg
pop
int
sbb
jmp
add
cmp
or
fidivrl
and
mov
adc
xchg
cmp
and
mov
pop
dec
cmp
stos
sbb
add
or
xchg
pop
sbb
sti
mov
ror
sbb
sbbb
mov
sbb
push
cmp
sbb
aad
cmp
rcl
popa
stc
xchg
pop
stc
xchg
aad
lahf
push
sbb
fisttpl
frstor
pop
stos
pop
ja
cmp
or
sbb
aad
notl
aad
pop
popf
lret
jle
xchg
push
mov
cmpl
dec
and
pop
repnz
sbb
cmp
stos
mov
mov
je
fmuls
fs
xchg
pop
sbb
jl
inc
test
mov
pop
sbb
aad
mov
pushf
xchg
imul
mov
or
add
fcomps
xor
sbb
cmp
stos
sbb
add
fmuls
mov
jns
jecxz
lea
adc
lret
push
movsb
push
jnp
push
xchg
push
dec
dec
and
pop
jo
sbb
out
push
pop
aad
lock
mov
mov
xchg
cwtl
cmpsl
and
aad
pop
bound
xor
pop
cltd
add
arpl
outsl
cmp
xorb
stc
sbbb
mov
mov
addl
aad
pop
stos
ja
pop
cmp
inc
fildl
cmpsl
push
pop
pop
pop
push
cs
adc
mov
rcl
xchg
inc
xchg
add
mov
sbb
lock
lret
sub
jecxz
jae
rcrl
xchg
mov
or
xchg
inc
jmp
push
sbb
pop
mov
aad
rcll
in
or
xchg
test
mov
cmc
int3
sbb
in
add
push
les
in
mov
sahf
aam
in
lcall
in
in
int
mov
sbb
pop
aam
sbb
sbb
mov
fstps
mov
or
cwtl
push
cmp
pop
sbb
pusha
cld
andb
in
mul
aas
pop
sbb
and
jb
test
pop
sbb
sbb
xlat
add
xchg
pop
stc
xchg
aad
fwait
dec
sbb
push
cmp
into
outsl
mov
mov
add
fcomp
jbe
mov
mov
sub
inc
sub
sbb
out
loope
movsl
in
loop
aaa
pop
mov
mov
xor
mov
mov
push
sbb
pop
imul
out
pop
sbb
lea
stc
xor
iret
adcb
shrl
clc
sbbb
mov
mov
or
and
mov
sbb
pop
sbb
sbb
sbb
mov
cwtl
sbb
hlt
mov
pop
jnp
pop
jb
mov
loope
pop
aad
pop
add
addr16
xor
lock
push
xor
jecxz
fistpl
movsb
push
fistpl
add
jecxz
jo
mov
in
lret
sub
jecxz
fcmovne
push
movsb
push
lock
pop
lock
push
cmp
insb
or
mov
mov
subb
cmpsl
and
aad
pop
pop
stos
dec
aaa
sbb
cmpsl
push
jnp
push
in
adc
sbb
aad
pop
cmpsl
and
pop
fsubl
sbb
mov
mov
subl
aad
pop
pop
stos
dec
xor
and
jo
pop
mov
stc
adc
lahf
xchg
add
arpl
xchg
ret
clc
xor
aam
pop
stos
ja
pop
cmp
insb
stos
pop
fsubl
sbb
mov
mov
subb
cmpsl
and
aad
pop
pop
stos
dec
or
shr
ljmp
arpl
fiaddl
sub
mov
stc
sbbb
push
pop
jnp
gs
mov
scas
arpl
aad
cmp
lret
stc
xchg
pop
stc
xchg
aad
dec
sbb
jle
enter
mov
add
xchg
into
push
nop
scas
mov
push
pop
aad
fistpl
aad
pop
stos
fwait
pop
cmp
loope
jnp
dec
dec
into
ret
iret
pop
and
and
mov
rcl
stc
outsl
cs
cmpb
rcll
mov
pop
dec
out
pop
lock
push
xor
jecxz
stos
add
sahf
push
mov
ret
mov
sbb
pop
cld
add
push
les
in
mov
xchg
ficompl
jecxz
push
imul
subb
add
out
sar
in
int
jo
sbb
ret
mov
sbb
pop
les
push
les
in
mov
xchg
fistpl
sub
jecxz
mov
sbb
int
pop
sbb
stos
cmp
jecxz
pop
movsb
sub
pop
rcrl
ret
test
mov
cmc
int
push
pop
hlt
add
push
les
repz
lahf
aad
xchg
leave
cmp
mov
fucomp
dec
cmp
pop
sbb
sub
xchg
push
pop
pop
lret
notl
aad
pop
movsl
lret
pop
sub
movsl
and
cs
jo
and
pop
sbb
test
jle
sahf
and
aas
pop
clc
sub
in
out
aad
lret
adc
cmpsl
push
lock
lahf
cmp
jecxz
fistpl
movsb
push
stos
outsl
adc
jecxz
pop
sbb
shll
xchg
jb
arpl
sahf
adc
andl
repz
sub
xchg
mov
fwait
add
arpl
mov
aas
mov
inc
sbbb
and
jb
add
cwtl
fimuls
out
stc
xorb
push
and
xchg
lock
push
cmp
or
sbb
ja
lock
arpl
jecxz
mov
inc
cld
dec
sbb
aad
pop
stos
pop
jmp
cmp
in
jg
add
movsb
outsl
mov
cmp
or
sbb
mov
testl
sub
notl
stc
adc
inc
xor
sub
adcl
sbbb
fisttpl
sbb
stc
adc
add
push
sub
adcl
test
mov
dec
cmp
stos
fdivl
or
xchg
pop
sbb
adc
mov
mov
mov
roll
push
rcrb
into
push
movsb
push
fcomps
dec
cmp
mov
aad
ret
mov
cmpsl
push
add
push
aaa
fildll
clc
adc
cs
add
push
pop
xlat
sahf
scas
fiadds
mov
insl
stos
mov
pop
push
cs
insb
or
jecxz
mov
sbb
lea
fldt
movsb
push
dec
mov
insl
lret
dec
add
fcomps
cmp
jecxz
pop
sbb
fisttps
scas
pop
mov
sub
push
xor
sub
arpl
inc
adc
xorb
arpl
aad
cmp
lret
stc
xchg
pop
stc
xchg
aad
dec
sbb
xchg
jnp
inc
mov
mov
pop
sbb
sbb
hlt
add
push
les
out
mov
lahf
aad
imul
into
pop
movsl
cld
and
mov
sbb
pop
int3
add
push
les
lock
lcall
pop
ffreep
mov
mov
stos
sbb
push
stos
outsl
xorl
ds
push
mov
lahf
cs
sub
sbbl
and
push
rcrl
movsb
insb
or
jecxz
fnstenv
pop
iret
pop
cmp
mov
aad
lret
jecxz,pn
push
ds
mov
pop
jo
insb
jecxz
fstpt
fsubl
pop
sub
out
cmp
or
sbb
aad
shll
pop
das
dec
and
pop
fwait
pop
sbb
pop
movsb
push
mov
xchg
pop
sbb
stc
sbb
mov
add
aam
fisttpl
aad
lock
mov
mov
subl
cmpsl
and
aad
pop
pop
test
push
cmp
cli
ret
xchg
add
mov
pop
insb
sub
sbbb
mov
out
pop
sbb
mov
add
movsb
add
fisubs
mov
pop
aad
mov
pop
aad
shll
mov
pop
xchg
aad
fucomip
mov
mov
mov
sahf
jle
add
test
mov
cmc
int
push
pop
hlt
add
push
les
in
mov
lahf
aad
inc
inc
xor
or
mov
clc
xorb
cs
cmp
sub
jle
add
sbb
dec
insl
adc
in
lods
xor
xorb
ret
mov
mov
lret
mov
out
pop
sbb
insb
or
push
femms
stc
and
dec
and
pusha
pop
mov
incb
add
pop
gs
mov
js
scas
jnp
add
mov
cmpsl
push
jnp
push
cmp
lahf
repz
push
sub
dec
daa
clc
orb
in
push
lock
lret
out
cmp
add
movsb
xchg
sub
cmp
insb
lret
dec
ljmp
sbb
mov
mov
subl
cmpsl
and
aad
pop
pop
test
and
cmc
scas
shll
in
pop
sbb
ss
inc
stos
pop
xor
jecxz
sbb
pop
repnz
movsb
xchg
pop
ds
fldt
push
mov
fdivr
pop
or
enter
lock
lret
out
cmp
add
jbe
cmpsl
push
lock
and
jecxz
mov
stos
pop
xlat
out
cmp
or
push
pusha
pop
dec
repz
mov
lock
lret
out
cmp
loope
push
cmp
stos
xchg
mov
pushf
cmp
or
xchg
pop
sbb
push
xlat
jns
mov
mov
mov
sbb
pop
cld
add
push
les
call
ficompl
cmp
mov
push
add
out
clc
sbbl
shrl
or
pop
xchg
repz
add
addr16
and
incb
pop
inc
out
jbe
push
mov
inc
arpl
aas
pop
xabort
in
scas
fwait
insl
push
sub
pop
mov
stc
xorb
arpl
aad
cmp
int
jno
xchg
pop
stc
xchg
mov
sbb
fistl
mov
ds
fistl
push
mov
pop
sbb
loop
cmp
inc
mov
add
sarb
andl
sbb
or
imul
sub
clc
inc
mov
add
aam
push
cld
es
das
cld
clc
inc
adc
aam
mov
aam
cmp
stos
mov
mov
jae
in
out
fldcw
stos
nop
inc
xor
clc
and
sbb
les
dec
xor
clc
add
adc
out
sub
frstor
sub
mov
dec
sarb
test
adc
out
cmp
in
out
pop
cmp
jns
cltd
jmp
cmp
cld
sub
clc
inc
adc
aas
mov
aam
dec
cld
clc
inc
jo
mov
into
iret
xchg
idivb
imul
sbb
mov
cmp
jnp
cmp
out
adc
add
sarb
imul
cmp
subl
or
jno
pop
clc
testl
cld
aaa
cltd
fs
repnz
dec
xorl
popf
sub
pop
cmp
mov
cmp
clc
adc
sti
clc
inc
xor
orl
xor
sub
clc
inc
xor
sub
test
and
out
adc
idiv
inc
xor
push
mov
ret
mov
xorb
clc
inc
xor
insl
jnp
xchg
inc
cmp
add
clc
inc
xor
out
pop
imul
clc
inc
dec
subl
imul
jns
repz
dec
fiadds
xor
out
inc
xor
inc
xor
adc
cmp
pushl
cld
clc
pop
inc
cld
clc
inc
mov
pop
mov
aaa
fists
sub
mov
xor
out
push
fadds
inc
xor
mov
jg
test
mov
mov
add
add
aam
xor
clc
inc
dec
xchg
imul
xchg
inc
lods
shrb
push
dec
sarb
add
inc
xor
pushf
arpl
lret
inc
inc
cs
xor
clc
mov
cmp
clc
inc
mov
sbb
push
aad
jae
loop
out
fldcw
test
clc
and
sbb
les
dec
xor
clc
add
or
add
mov
ljmp
cld
clc
mov
cmp
or
sbb
inc
xor
inc
xor
cmp
jae
xor
cmp
out
pop
adc
clc
inc
push
push
pop
pop
ds
clc
inc
inc
mov
cwtl
adc
lahf
aam
xor
stos
xchg
add
pop
cmp
jns
cmp
adcb
sbb
sarl
mov
or
nop
ds
clc
pusha
or
jbe
xor
divl
xchg
inc
xor
fmuls
mov
testl
clc
loop
xor
aaa
adc
jecxz
imul
sbb
call
inc
xor
out
mov
and
out
ret
rcrb
cld
add
or
clc
out
dec
lods
and
ds
outsl
rcr
aam
mov
mov
xchg
cmp
enter
xchg
movsl
ds
outsl
rcr
aam
mov
into
mov
add
jmp
inc
mov
add
out
inc
xor
mov
icebp
inc
jg
les
data16
jmp
inc
push
cld
and
clc
inc
adc
aam
mov
aam
cmp
clc
inc
imul
inc
or
ds
clc
add
fwait
shl
mov
imul
dec
sarb
xorl
mov
roll
sub
add
aaa
ljmp
fdivl
push
int
mov
xor
aam
jecxz
insl
mov
add
jae
loope
out
adc
add
negl
cmp
add
mov
jns
or
nop
data16
clc
push
cmp
cmp
cmp
fldcw
cmpsb
nop
inc
xor
clc
and
sbb
les
push
xor
clc
std
jns
adc
mov
imul
add
aam
fsubr
clc
inc
xor
sub
mov
sbb
sbb
imul
rcrb
cld
and
clc
inc
adc
aam
mov
aam
inc
cld
clc
inc
push
mov
lret
adc
nop
cmp
xor
xor
movsl
js
pop
adc
or
adc
sub
cld
clc
fldcw
stos
nop
inc
xor
clc
and
sbb
les
dec
xor
clc
add
and
mov
xchg
push
aam
mov
mov
rorb
clc
inc
fsubr
clc
inc
xor
mov
enter
repnz
xchg
pop
lods
stos
imul
lods
jne
outsl
mov
push
xorl
das
cmpsb
nop
inc
xor
clc
and
sbb
les
dec
xor
clc
std
jns
loope
sti
add
out
cmpsb
lret
fwait
daa
fxch
clc
inc
xor
clc
adc
sti
clc
inc
xor
addl
xor
sub
clc
inc
xor
xor
lea
nop
push
sbb
or
add
clc
inc
xor
out
mov
cmp
insl
push
or
inc
xor
push
xor
clc
cmp
xorl
das
cmpsl
nop
inc
xor
clc
and
sbb
les
push
xor
clc
jp
aas
dec
xor
jp
cmp
xor
out
ret
negl
cmp
jmp
inc
fsubr
clc
inc
xor
jnp
mov
xor
cmc
xlat
testl
mov
icebp
pop
cmp
aam
xor
je
xor
clc
ss
clc
inc
xor
arpl
sbb
pop
das
in
clc
inc
push
ljmp
xor
clc
mov
cmp
insl
outsb
push
gs
aas
xor
outsl
mov
mov
adc
sub
out
inc
pop
add
aam
xor
fists
jg
mov
inc
mov
add
sarb
sub
and
and
inc
mov
add
sarb
sub
hlt
or
out
ss
clc
inc
xor
inc
xor
inc
sbb
mov
aaa
sbb
nop
or
gs
inc
xor
int
mov
fisttps
xor
mov
cld
jmp
pop
das
cld
clc
inc
adc
aam
mov
aam
inc
cld
clc
inc
push
mov
cmc
fdivl
add
ja
mov
cld
push
inc
andb
cld
fmuls
out
mov
decl
clc
ja
or
in
xor
cmp
push
insl
test
jmp
cmp
cld
adc
stc
xchg
xor
xchg
aam
cmp
out
shl
jae
xor
clc
fldcw
stos
nop
inc
xor
clc
and
sbb
les
dec
xor
clc
add
dec
fs
adc
cmp
out
mov
cmp
inc
xor
inc
mov
out
jge
push
lods
aad
mov
mov
sub
pop
cmp
clc
fldcw
ja
cltd
aaa
push
inc
dec
andl
xor
out
mov
ss
clc
inc
arpl
nop
mov
jbe
adc
dec
sbb
push
std
adc
and
aam
push
std
jmp
fnsave
dec
divl
xor
clc
adc
sti
clc
inc
xor
and
clc
inc
xor
lock
xchg
cs
xor
pop
pop
jnp
or
sbb
inc
xor
inc
xor
jmp
inc
mov
test
inc
nop
cmp
mov
xorl
mov
wrmsr
cld
clc
fldcw
cmpsb
nop
inc
xor
clc
and
sbb
les
dec
xor
clc
std
jns
jp
sbb
or
sbb
mov
cmp
clc
push
fdivr
clc
inc
xor
addl
xor
sub
clc
inc
xor
mov
sbb
mov
push
cld
and
clc
inc
adc
aam
mov
aam
cmp
clc
inc
push
mov
adcb
test
aam
and
adc
sti
clc
inc
xor
addl
xor
sub
clc
inc
xor
jns
mov
cmp
jnp
inc
xor
out
sarb
aam
jecxz
xor
add
mov
adc
das
lods
nop
inc
xor
clc
and
sbb
les
dec
xor
clc
add
xchg
test
push
mov
adc
popf
test
jae
loop
out
pop
sub
clc
inc
inc
imul
test
cmp
dec
arpl
cmp
out
imul
clc
inc
jmp
cmpsb
nop
inc
xor
clc
and
sbb
les
dec
xor
clc
std
jns
lods
xor
mov
outsl
mov
flds
inc
mov
popa
test
cli
xchg
ret
movsl
mov
pop
cmp
jmp
inc
mov
mov
rcrb
int3
inc
xor
adc
loop
out
fldcw
lods
nop
inc
xor
clc
and
sbb
les
dec
xor
clc
add
xchg
inc
addr16
jecxz
lds
xchg
add
dec
inc
or
push
out
mov
dec
sarb
jmp
inc
xor
out
jg
push
xor
add
mov
stos
push
or
push
shl
jae
xor
clc
fldcw
lods
nop
inc
xor
clc
and
sbb
les
dec
xor
clc
add
rcl
xchg
adc
rolb
imul
push
inc
push
gs
xor
jmp
jecxz
pop
jbe
sub
xchg
mov
cmp
push
inc
push
cld
daa
pop
das
cld
clc
inc
adc
aam
mov
aam
inc
cld
clc
inc
jno
mov
pop
fs
sarb
in
clc
inc
xor
mov
ret
pusha
lcall
cmc
rcr
pop
dec
nop
cmp
cld
clc
movsb
insb
pop
les
dec
jge
cmp
push
addr16
add
out
shl
jae
xor
clc
mov
cmp
or
push
out
mov
dec
arpl
cmp
out
sbb
inc
call
lods
add
inc
xor
cmp
loop
insb
pop
jl
inc
xor
out
fldcw
jl
push
push
cld
aad
imul
ja
push
cld
clc
inc
lock
xor
mov
push
push
idivl
jo
push
add
cs
addr16
sub
cmp
cmp
dec
arpl
jnp
xor
inc
xor
jmp
inc
dec
jge
fadd
dec
jae
cmp
out
pop
ds
clc
inc
add
lahf
mov
sbb
or
sub
subl
add
cmp
jnp
add
pop
out
inc
xor
aas
xor
sbb
fldlg2
clc
inc
xor
jne
loop
and
cli
icebp
xchg
add
aam
push
xorl
movsl
stc
lret
pop
cmp
fldcw
stos
nop
inc
xor
clc
and
sbb
les
dec
xor
clc
add
dec
mov
cmp
push
xor
clc
mov
cmp
clc
mov
cmp
mov
cmp
repz
add
aam
push
pushl
xor
clc
pop
ss
clc
inc
mull
inc
movsb
insl
mov
cli
outsl
sub
adc
leave
out
ret
rcrl
cmp
add
subb
inc
xor
out
mov
cmp
or
sbb
inc
pop
out
adc
test
inc
sbb
mov
cmp
or
daa
insl
xorl
jmp
inc
xor
add
pop
add
gs
cltd
popa
xor
sub
cld
outsb
push
mov
add
daa
sbb
aam
xor
inc
xor
popl
cld
clc
add
scas
adc
push
aam
mov
add
aam
pop
dec
divl
xor
push
xor
clc
mov
cmp
or
sbb
inc
xor
inc
xor
push
inc
andl
out
mov
testl
clc
filds
cld
aaa
adc
push
and
cmp
cmp
inc
sbb
mov
cmp
cmp
cld
clc
mov
push
adc
add
pop
pop
inc
cld
clc
inc
mov
imul
dec
sarb
add
inc
xor
mov
fisttpll
pushf
cltd
ljmp
cmp
inc
xor
fmuls
out
mov
clc
ja
or
fildl
cld
ss
sbbl
sub
aaa
add
stos
clc
clc
inc
xor
aas
xchg
xlat
dec
inc
or
push
out
mov
sbb
ds
mov
cmp
out
jle
dec
clc
pop
cmp
clc
inc
xor
aam
xchg
or
push
out
inc
xor
inc
xor
insl
rcr
cld
aam
mov
mov
push
xor
clc
mov
inc
in
jmp
in
cwtl
pop
sub
cmp
idivl
cmp
or
and
add
aam
mov
jns
test
cmp
add
inc
xor
sub
or
add
dec
sbb
mov
imul
sbb
fnsave
dec
divl
xor
clc
adc
sti
clc
inc
xor
orl
xor
sub
clc
inc
xor
mov
and
push
or
cmp
xchg
sbb
add
clc
inc
xor
jmp
lods
xchg
cmp
imul
daa
xor
cld
clc
fldcw
stos
nop
inc
xor
clc
and
sbb
les
inc
xor
clc
add
insl
or
sbb
lods
cmpb
ljmp
xor
clc
adc
out
inc
xor
sbb
push
lods
test
adc
push
fcos
clc
inc
xor
push
repz
shlb
loop
pop
data16
mov
sbb
imul
sbb
in
imul
mov
cmp
out
popfw
mov
sbb
fdivr
clc
inc
xor
orl
xor
sub
clc
inc
xor
xchg
movq
inc
stc
aam
jecxz
sub
add
clc
test
and
fdivrs
loope
add
popa
sbb
test
pop
cmp
or
push
out
pop
cmp
clc
inc
jo
fidivl
int3
dec
sbb
add
sbb
fldcw
stos
nop
inc
xor
clc
and
sbb
les
dec
xor
clc
add
push
int
lods
fimull
mov
cmp
out
fldcw
cmpsb
nop
inc
xor
clc
and
sbb
les
dec
xor
clc
std
jns
imul
data16
lods
sub
out
pop
cmp
clc
inc
ds
jg
arpl
xor
cmp
and
aam
jp
jmp
push
enter
or
adc
in
scas
ja
ljmp
inc
xor
out
mov
cmp
out
inc
lds
pop
cmp
out
ss
clc
inc
xor
out
pop
sub
clc
inc
xor
jns
push
cld
and
clc
inc
adc
aam
mov
aam
inc
cld
clc
inc
insl
test
mov
sub
cltd
fstpt
loop
mov
cmp
pop
or
fbld
jbe
jns
xchg
or
cmc
inc
xor
fmuls
out
mov
pop
or
ja
or
in
xor
xor
scas
add
adc
push
iret
mov
jecxz
mov
or
daa
aaa
fwait
sbb
xor
into
fmull
sbb
scas
xchg
lret
sub
cmp
or
out
inc
pop
cmc
sub
mov
inc
mov
cld
clc
mov
cmp
out
pushw
rcrl
cmp
add
subb
mov
cmp
out
pushw
repnz
cmp
mov
das
lods
nop
inc
xor
clc
and
sbb
les
dec
xor
clc
add
cmp
dec
out
mov
jle
sub
xor
outsb
bound
rcll
mov
add
add
insl
add
jno
cmp
add
sbb
inc
adc
inc
sub
cmp
out
fldcw
ljmp
xor
clc
fnsave
jns
cmp
add
mov
push
fsubrl
mov
add
add
cmc
inc
xor
fmuls
out
mov
clc
ja
or
loop
xor
ss
pop
cmp
xor
cmpsb
mov
or
out
fldcw
xchg
add
push
fisttpl
inc
mov
fistpl
or
adc
clc
adc
add
js
loop
popl
add
clc
in
scas
and
sahf
xchg
rcl
xchg
dec
arpl
inc
sbb
sbb
jge
pop
cmp
popf
cmp
out
ss
clc
inc
xor
out
mov
pop
cmp
not
popf
add
cmp
cmp
mov
lods
leave
in
cmp
mov
loopne
mov
mov
sbb
aam
xor
clc
inc
mov
dec
pop
or
jne
test
aam
xor
je
xor
clc
jecxz
mov
inc
or
jl
mov
pop
cmp
xor
clc
ss
shl
inc
xor
clc
adc
sti
clc
inc
xor
addl
xor
sub
clc
inc
xor
dec
gs
pop
adc
jbe
inc
xor
popl
cld
clc
jo,pt
div
fcomps
clc
inc
xor
pusha
inc
xor
jmp
inc
xor
clc
inc
xor
and
jmp
jecxz
mov
add
shlb
cld
adc
loope
cmpsl
data16
ja
mov
imul
inc
sbb
inc
or
jns
push
cld
and
inc
adc
aam
mov
aam
cmp
clc
inc
outsl
stos
mov
mov
jmp
mov
mov
jne
adc
leave
out
ret
rcrl
cmp
add
subb
inc
xor
out
mov
cmp
or
sbb
inc
pop
out
adc
test
inc
sbb
mov
cmp
or
sbb
fldcw
lods
nop
inc
xor
clc
and
sbb
les
dec
xor
clc
add
cmp
mov
enter
cmp
push
jns
lods
adc
inc
xor
xor
push
jg
loop
xor
cmc
pushl
push
mov
add
pop
cmp
clc
inc
xor
clc
inc
mov
add
clc
mov
cmp
inc
xor
inc
xor
jg
mov
clc
inc
lcall
jo
cmp
subl
add
aam
xor
fists
jg
mov
inc
mov
add
sarb
sub
and
and
inc
mov
add
sarb
sub
inc
xor
outsl
test
aam
push
cld
and
clc
inc
adc
aam
mov
aam
inc
cld
clc
inc
imul
sbb
xor
clc
xor
cld
sub
lret
fidivrs
fdivr
clc
inc
xor
addl
xor
sub
clc
inc
xor
ja
mov
jl
xchg
fnstenv
inc
xor
clc
or
xor
addl
xor
sub
clc
inc
xor
jg
mov
xorb
add
pop
out
fldcw
lods
nop
inc
xor
clc
and
sbb
les
dec
xor
clc
add
cld
clc
inc
mov
ss
mov
add
cmc
inc
xor
fmuls
out
mov
pop
or
ja
or
loope
xor
xor
inc
inc
gs
xor
ret
mov
or
jl
lahf
subl
es
xor
insl
imul
outsl
mov
add
clc
adc
sti
clc
inc
xor
orl
xor
sub
clc
inc
xor
and
dec
add
cld
clc
inc
xor
xchg
in
mov
xchg
cmp
jae
cmp
out
fnsave
or
sar
aam
orb
cmp
out
fldcw
dec
arpl
sbb
ret
jmp
inc
dec
sbbb
cs
clc
inc
ljmp
fdivrl
push
jecxz
aaa
xor
aam
jecxz
push
inc
pop
cld
call
fisubrl
dec
test
lods
sahf
out
push
cmp
jae
or
out
push
jae
dec
aam
inc
add
sbb
mov
cmp
data16
pop
cmp
mov
popf
jge
pop
cmp
out
data16
out
adc
and
jp
lock
ss
or
out
add
je
mov
sbb
out
mov
cmp
mov
cmp
jae
or
out
notl
xchg
lahf
mov
inc
les
sbb
mov
cmp
mov
cmp
pop
mov
pop
out
adc
jns
mov
dec
cmp
add
clc
inc
jmp
in
inc
xor
clc
mov
cmp
jae
push
sbb
inc
xor
clc
fldcw
loop
fldcw
sbbl
pop
out
adc
jns
xchg
add
mov
or
aam
insl
in
outsb
lea
mov
call
mov
xchg
push
cld
push
inc
jecxz
adc
pop
adc
enter
cmp
mov
clc
mov
cmp
clc
fldcw
sbbl
pop
out
adc
jns
xchg
add
mov
or
sarl
imul
inc
jecxz
mov
or
outsl
mov
mov
in
mov
stos
mov
cmp
add
add
clc
inc
xor
clc
adc
sti
clc
inc
xor
and
clc
inc
xor
fmuls
or
loop
adc
sti
clc
inc
xor
and
clc
inc
xor
mov
ret
movsl
popa
loop
cmp
jmp
inc
dec
xchg
xchg
xlat
scas
xchg
add
add
clc
inc
xor
out
ret
movsl
xor
push
cmp
jmp
inc
cmp
jmp
inc
frstor
inc
xor
push
inc
jle
cmc
inc
xor
fmuls
out
mov
clc
ja
or
fldl
cld
ss
or
mov
xchg
imul
js,pt
test
cmp
out
xor
pop
in
sbb
xor
loop
adc
sti
clc
inc
xor
addl
xor
sub
clc
inc
xor
mov
divl
js
inc
xor
outsl
mov
jo
mov
inc
xor
clc
inc
scas
cmp
fldcw
lods
nop
inc
xor
clc
and
sbb
les
dec
xor
clc
add
cmp
inc
movsl
jmp
imul
sbb
pop
cmp
clc
inc
clc
cmp
mov
nop
sub
inc
test
loop
faddl
nop
mov
das
or
push
ret
out
jmp
inc
xor
inc
xor
insl
test
not
cmp
jns
sub
xor
insl
test
sbb
cmp
clc
inc
xor
dec
fsubrl
jmp
xor
in
mov
fsubr
clc
inc
xor
fmulp
outsb
sub
sub
sbb
cld
clc
mov
cmp
out
pop
cmp
push
mov
add
inc
jecxz
jns
scas
jge
inc
xor
hlt
xor
cmp
or
and
clc
inc
test
pop
and
xchg
clc
inc
xor
out
mov
xor
scas
into
jle
loope
lods
insl
cmc
pop
cmp
out
mov
cmp
clc
inc
fadds
inc
xor
shll
movsl
test
xor
out
or
cs
fstps
fdivrs
xor
clc
inc
push
cld
es
das
cld
clc
inc
adc
aam
mov
aam
inc
cld
clc
inc
outsb
stos
mov
and
lods
fs
pop
fsubrs
xor
clc
inc
fldpi
clc
inc
xor
icebp
adc
sti
mov
fwait
pop
bound
lahf
jae
xchg
test
xchg
hlt
mov
repz
sub
cmpsb
mov
mov
or
pop
mov
adc
jns
sub
xor
adc
sub
jnp
aas
fldln2
clc
inc
xor
or
xor
ss
je
dec
mov
cmpsl
xlat
mov
popa
adc
jae
das
cld
clc
ret
fcompl
cmp
jmp
inc
mov
add
call
mov
xor
aam
mov
and
das
cmpsb
nop
inc
xor
clc
and
sbb
les
dec
xor
clc
std
jns
cld
xchg
pop
in
xorl
mov
cld
daa
push
sbb
out
jle
int
pop
cmp
clc
inc
xor
xchg
xor
clc
sbb
inc
repnz
cmp
insl
imul
clc
lods
xchg
clc
inc
xor
clc
adc
sti
clc
inc
xor
addl
xor
sub
clc
inc
xor
mov
test
dec
or
sub
mov
mov
div
or
mov
mov
add
nop
inc
xor
clc
and
sbb
les
push
xor
clc
add
ja
andl
inc
xor
jns
stos
xor
clc
push
fdivr
clc
inc
xor
addl
xor
sub
clc
inc
xor
jae
sub
out
inc
xor
clc
fldcw
lods
nop
inc
xor
clc
and
sbb
les
dec
xor
clc
add
loopne
mov
jle
jb
xor
clc
mov
cmp
aam
xor
out
ret
rcrl
cmp
add
subb
inc
xor
out
mov
cmp
or
sbb
inc
pop
out
adc
test
adc
out
mov
cmp
or
sbb
mov
cmp
negb
cmp
jae
or
out
adc
xchg
pop
lds
sbb
xor
jno
aam
dec
subl
cmp
clc
or
xor
addl
xor
sub
clc
inc
xor
mov
jns
jge
jle
ss
ss
clc
inc
mov
cwtl
push
lea
cld
and
inc
adc
aam
mov
aam
cmp
clc
inc
outsl
stos
mov
jg
mov
and
push
mov
cmp
out
mov
cmp
out
adc
cld
aam
mov
insl
mov
js
inc
xor
int
cmp
jns
xor
sub
clc
inc
mov
out
push
or
sub
jg
cmc
inc
xor
fmuls
out
mov
pop
or
ja
or
loopne
xor
xor
push
std
jle
rcrb
jno
push
or
outsl
shlb
lcall
sbb
cmp
test
cmp
out
jmp
cmpsl
cmc
pop
xorl
sub
clc
inc
and
mov
inc
xor
clc
inc
xor
clc
inc
xor
clc
inc
xor
clc
inc
xor
clc
inc
xor
clc
inc
xor
clc
inc
xor
inc
ss
dec
js
push
xchg
gs
arpl
pop
pop
xor
dec
lock
fisttps
and
ficoms
xlat
pop
loope
lock
fisttps
inc
and
in
fxch
and
or
push
fildl
pop
in
and
fists
lock
fldl
loope
fcoms
out
dec
loopne
hlt
dec
lret
pop
in
fmull
enter
or
push
filds
fstl
fsub
push
fcoms
repz
fcoml
or
push
ss
cmp
sbb
and
sbb
and
int3
push
loope
lret
fadds
jl
sub
outsl
sbb
bswap
adc
pop
sbb
fstl
or
bswap
or
fisttps
in
bswap
or
loopne
hlt
dec
fists
repnz
and
out
cmp
add
loope
lret
push
sbb
sub
sbb
loope
jecxz
testb
mov
cmp
adc
push
mov
fsubs
dec
add
adc
adc
and
add
repnz
fldt
adc
sub
sbb
xor
lds
and
sbb
and
aam
lock
and
adc
fsubs
dec
add
jo
sbb
and
add
vmwrite
fsubs
adc
sub
sbb
xor
sbb
and
sbb
and
aam
and
aam
cmp
jnp
jl
sbb
inc
xor
inc
xor
imul
sarb
xorl
pop
std
clc
inc
mov
arpl
mov
and
pop
cmp
cmp
loop
fldcw
xorl
jecxz
push
mov
add
aam
mov
rolb
add
aaa
pop
cmp
rolb
inc
or
cmc
out
cmp
out
adc
add
clc
mov
cmp
cmp
imul
rcrb
sarl
xorl
push
cld
push
inc
mov
xor
popf
mov
sbb
inc
sbb
mov
cmp
cmp
loop
fldcw
xorl
jecxz
push
mov
add
aam
mov
rolb
add
aaa
pop
cmp
shlb
sarb
dec
inc
or
cmc
out
cmp
out
adc
add
clc
mov
cmp
cmp
imul
rcrb
sarl
xorl
push
cld
push
inc
mov
cmp
popf
mov
sbb
inc
sbb
popfw
mov
sbb
sbb
out
pop
mov
clc
inc
scas
xchg
xlat
cmp
clc
inc
xor
lock
sbb
inc
xor
inc
xor
insl
ror
out
aam
mov
addb
ss
clc
mov
cmp
cmp
and
xchg
mov
lods
test
pop
sub
out
ret
insl
inc
mov
add
aam
scas
cmp
mov
jno
out
mov
cmp
movzwl
outsl
shrb
cmp
jno
pop
or
jne
mov
aaa
pop
cmp
out
ret
insl
inc
mov
add
aam
xor
jae
xor
clc
ret
out
pop
cmp
jmp
inc
jecxz
sbb
xchg
and
jle
sarl
mov
add
jbe
sarl
mov
mov
mov
xor
outsb
mov
ret
add
sarl
add
aaa
pop
cmp
cmp
dec
arpl
in
adc
add
jns
add
lods
push
fistps
cmp
sub
mov
or
insl
test
jmp
inc
xor
popa
mov
repz
outsb
mov
mov
xor
data16
push
mov
icebp
inc
adc
cmp
sbb
ja
xchg
shrl
inc
xor
jge
orl
inc
xchg
cmp
cmp
ja
sub
pop
stc
fadds
clc
inc
xor
sbb
lods
push
test
ficomps
push
aas
inc
push
sbbl
push
imul
cli
mov
cld
clc
inc
xor
inc
xor
ja
data16
out
jb
jae
jecxz
jns
ljmp
scas
pop
aad
scas
pop
aad
scas
pop
aad
scas
pop
aad
scas
pop
aad
test
sbb
out
aad
scas
pop
sbb
sub
push
andl
scas
in
das
lods
cwtl
sahf
mov
in
into
aam
lahf
sahf
inc
lods
dec
and
add
sahf
mov
in
into
aam
lahf
sahf
inc
lods
dec
and
add
sahf
aad
scas
pop
aad
scas
pop
mov
ljmp
out
dec
pushf
add
aad
cwtl
sahf
sub
scas
pop
aad
jbe
aad
sub
aad
scas
pop
jl
dec
dec
pushf
add
sahf
aam
mov
jb
call
sub
xchg
add
cmp
pop
and
stc
scas
dec
dec
outsb
xchg
fcmovne
repz
fwait
cld
das
cltd
inc
lods
cwtl
cmp
mov
cwtl
aaa
inc
and
lcall
mov
out
repnz
add
cmp
add
rcl
push
orl
xor
aam
scas
dec
dec
outsb
xchg
fcmovne
mov
pop
sbb
jne
in
clc
stos
cwtl
sahf
and
push
orl
test
jge
scas
pop
cld
jbe
pop
aad
xor
jo
orl
mov
xor
jge
addl
stc
scas
dec
adc
dec
pop
stc
jle
aad
cmc
push
in
scas
dec
fldl
scas
pop
nop
divb
add
stc
cmp
ret
xchg
sahf
inc
sbb
loope
cld
xor
aam
scas
pop
repnz
sbb
or
sarl
jecxz
mov
stc
scas
or
lods
cwtl
sahf
enter
xchg
lods
cwtl
sahf
mov
cmp
les
sbb
sar
scas
pop
jmp
push
pop
enter
inc
lods
cmp
and
pop
movl
push
mov
cmp
fs
mov
cld
das
out
inc
lods
cwtl
dec
nop
lret
push
cmp
outsb
and
mov
or
xchg
pop
jmp
mov
cmc
stos
pop
aad
inc
int
cld
das
cmpsb
inc
lods
cwtl
lret
das
mov
nop
adc
mov
push
scas
pop
nop
divb
pop
aad
ds
aad
xchg
mov
pushf
add
mov
xor
dec
pushf
add
sub
jle
sbb
push
orl
scas
testb
dec
dec
ja
out
jle
sbb
push
orl
add
dec
divb
pushf
add
or
pop
aad
add
dec
das
stos
pop
add
jb
sub
aad
mov
into
dec
in
js
test
inc
lods
cwtl
sahf
mov
in
into
aam
add
dec
das
stos
pop
add
jb
sub
aad
mov
iret
dec
in
js
test
inc
lods
cwtl
sahf
mov
in
into
aam
add
fwait
sbbb
dec
mov
scas
pop
jmp
ljmp
lret
mov
nop
add
cld
das
test
lods
cwtl
dec
nop
rclb
sbb
cld
push
pushf
add
rolb
int3
dec
div
push
pushf
add
cmpsb
pop
xchg
int3
dec
test
pushf
add
dec
xchg
int3
sub
scas
pop
aad
scas
pop
aad
mov
daa
and
stos
inc
jno
push
adcb
xchg
int3
dec
divb
pushf
add
iret
dec
subl
xchg
dec
jle
or
add
pusha
push
cli
xchg
int3
aam
xor
aam
scas
daa
stos
stc
xchg
js
pop
xchg
int3
mov
icebp
popf
inc
lods
dec
dec
ret
lods
out
nop
in
add
rol
out
sbb
orl
inc
out
cmp
imulb
out
or
add
ret
lods
dec
dec
dec
insb
inc
out
mov
xchg
int3
dec
xchg
jo
add
mov
xchg
int3
aaa
testb
add
xchg
push
xchg
int3
and
mov
add
int3
dec
test
jo
xchg
mov
notb
jno,pn
sub
dec
testb
add
pop
aad
scas
pop
aad
scas
pop
aad
scas
pop
aad
scas
pop
aad
scas
pop
aad
scas
pop
aad
scas
pop
cs
pop
aad
dec
or
stc
inc
dec
or
out
xchg
sahf
lods
jns
out
mov
inc
xor
push
sub
insl
xchg
sahf
lods
jecxz
out
mov
adc
jmp
xor
cmc
insb
adc
mov
lods
in
xchg
cmp
push
mov
jg
lret
fadds
xchg
xchg
xor
shl
jg
loop
into
idiv
mov
cmp
add
and
gs
stos
jmp
into
and
stc
scas
pop
out
push
push
xchg
icebp
notl
mov
push
push
push
xchg
push
inc
xchg
call
inc
fwait
add
push
dec
shl
dec
fs
shlb
sub
xlat
idivb
and
test
xorl
sbbl
dec
stc
cld
lret
cmp
pop
test
adc
fstpl
les
out
push
adc
sub
movsb
xor
jnp
into
enter
dec
jns
int3
rolb
gs
in
push
and
gs
shlb
cmp
shll
push
ljmp
pusha
adc
inc
push
arpl
cmp
in
mov
jg
stc
scas
pop
sahf
mov
xchg
jbe
repnz
nop
push
jne
rolb
lea
rorl
sbb
jb
call
lea
insl
mov
mov
mov
out
aad
sti
stc
scas
pop
jle
xchg
fdivrs
testl
xorl
pop
das
and
outsb
arpl
xor
lods
jecxz
mov
das
into
js
pop
jo
leave
inc
aam
jecxz
cwtl
add
movsl
and
adc
mov
push
push
stos
shll
sub
cwtl
sti
add
sbb
sub
push
in
mov
add
shll
lcall
loope
sub
jns
cmp
nop
fcomp
xchg
imul
pop
mov
mov
dec
std
outsl
cmp
loope
jmp
aad
addb
loope
fs
mov
or
es
add
or
or
nop
scas
jno
stc
scas
cmp
add
inc
mov
loopne
lods
cmp
dec
sti
jmp
cmp
pop
sarl
rorb
mov
stc
loope
addb
mov
das
fdivrs
jl
jb
movsl
add
test
int
loopne
bound
xchg
outsb
incb
fwait
lret
aam
dec
call
push
loope
jmp
repnz
ficoml
push
loope
cmc
aad
adc
or
or
imul
xchg
jle
adc
mov
and
xchg
inc
mov
imul
call
loopne
push
jbe
imul
jnp
stos
xor
iret
jl
aam
mov
push
mov
lcall
in
repnz
outsl
out
aad
or
sahf
mov
imul
clc
inc
arpl
push
sahf
or
cmpl
mov
push
push
lret
popf
shll
adc
mov
mov
cltd
dec
xchg
push
scas
pop
mov
pop
sbb
jg
out
xchg
les
addb
mov
xchg
ret
int3
int
xor
orb
fildl
addb
pop
mov
bnd
xor
lcall
rcrb
lcall
sbb
aaa
int3
or
mov
adc
cmpb
push
xor
mulb
aam
movsb
xchg
add
cs
xchg
push
daa
sar
scas
pop
aad
imul
scas
pop
cmp
adc
xor
outsl
dec
add
mov
mov
mov
jmp
rcrb
or
jbe
aam
pop
xchg
cmpb
std
lahf
je
lar
fisttps
mov
aad
scas
jg
cli
aas
and
mov
dec
fists
pop
xor
es
mov
pop
push
lret
inc
in
cwtl
adc
cmc
loope
loope
fiadds
out
xor
jmp
shrb
std
aaa
fimull
add
fwait
jae
jb
repnz
in
cltd
mov
ljmp
add
popf
loopne
cmpsb
hlt
xor
push
xor
pop
pop
jbe
insb
lods
mov
stos
nop
lret
ss
dec
cltd
sub
and
in
xchg
sbb
aad
lea
or
mov
xor
ds
inc
dec
mov
adc
repz
mov
fisttps
mov
loope
mov
dec
std
xchg
dec
xor
cli
aam
scas
subb
sub
dec
xor
cli
aam
scas
subb
sub
sti
jo
and
shll
inc
mov
and
push
cmp
cmpsl
fisttpl
adcb
scas
dec
jno
sub
jo
scas
pop
aad
inc
xchg
or
scas
dec
rcll
inc
int
pop
jne
pop
aad
jmp
dec
std
xchg
xor
aas
push
mov
in
sbb
in
repnz
scas
icebp
jns
pushf
add
sub
stc
scas
daa
dec
and
pop
dec
mov
jp
sahf
aad
scas
sub
mov
incl
pushf
aad
xor
aam
scas
fidivrl
stc
scas
pop
push
lahf
test
std
add
cmp
sbb
into
aam
in
cs
das
mov
in
sub
pop
ja
cmpsb
pop
dec
divb
pop
cs
mov
aad
int3
or
stc
inc
popf
and
arpl
out
mov
inc
jbe
push
sub
bound
out
mov
inc
stos
and
ljmp
pop
mov
xchg
rcrl
rclb
sti
push
fimull
mov
push
jecxz
insl
xchg
mov
stos
xor
xchg
arpl
nop
or
push
add
shll
xchg
out
js
inc
iret
jno
cmp
scas
push
push
sub
sbb
rcll
popf
aam
mov
sub
ss
hlt
shll
test
dec
sahf
aam
cmpsl
and
shr
mov
inc
push
mov
jg
jnp
inc
dec
lock
je
rorl
mov
adc
adc
aaa
xchg
ret
lret
cwtl
add
mov
aad
lds
test
xor
sbb
sti
jns
enter
das
sbb
fdivrs
aaa
dec
xchg
sti
clc
or
cmp
insb
ss
add
xchg
hlt
sbbb
rorb
add
ljmp
cmp
jmp
adc
imul
mov
sti
jle
sub
fcmovnb
xor
mov
add
repz
mov
insb
outsl
lahf
pop
cltd
xor
gs
rcr
mov
push
add
jge
xchg
daa
adc
lea
push
sbb
cmp
sbb
lods
sar
scas
sbb
mov
cmc
lock
mov
inc
push
mov
lds
ret
in
xchg
push
push
pop
mov
lret
jo
xor
rcl
ds
loopnew
jns
dec
add
in
sbb
std
loope
lock
in
aaa
dec
xchg
add
scas
shlb
aas
xchg
add
fdivl
adc
popf
push
mov
mov
xor
fnstsw
iret
mov
xorb
pop
stc
mov
aad
int
cmpsl
les
dec
in
xchg
push
adc
inc
into
enter
mov
incl
sub
jge
je
xor
inc
mov
loopne
mov
adc
ljmp
add
dec
enter
loop
sbb
scas
lret
sbbb
sub
popa
xor
rcrl
adc
or
test
daa
dec
addr16
add
xor
sarb
mov
pop
dec
inc
in
cmp
pop
ror
loop
mov
movsb
dec
dec
inc
dec
out
iret
loopne
aas
les
adc
inc
jae
pop
sbb
and
daa
mov
aas
addr16
jg
dec
push
cli
push
jae
hlt
out
sbbl
rcll
fs
stos
into
mov
loop
pop
sub
dec
cmp
lahf
call
arpl
dec
fstps
leave
rcll
lods
jnp
push
dec
adc
in
inc
pop
cmc
rorl
iret
loope
notb
pop
je
in
addb
lock
push
sbb
insl
push
incl
into
daa
jl
test
xchg
xlat
jns
jge
xlat
and
mov
nop
sub
pop
aad
lahf
ljmp
mov
sub
lds
pop
fadds
aad
imul
and
jnp
and
cmp
shrl
pop
mov
xchg
shlb
rcll
sbb
rorb
mov
mov
sbb
sub
mov
jbe
push
call
cld
in
cmpb
xchg
push
icebp
imul
dec
imul
pop
aam
mov
sub
jl
daa
mov
out
sbb
mov
int
and
mov
jae
sahf
sub
xor
cltd
stos
out
xor
cmp
call
mov
and
cmpsl
scas
out
std
inc
mov
cmc
rol
loope
lea
fucom
lret
xchg
mov
xor
dec
out
mov
adc
inc
ret
jno
inc
out
xor
das
add
push
mov
shlb
or
shlb
aam
sbb
loopne
hlt
jns
or
xor
fidivl
mov
inc
ss
push
mov
add
aad
inc
loope
pop
mov
rcr
cmp
dec
loopne
pop
sbb
jae
mov
insl
xor
and
int
rcrb
sbb
ljmp
imul
mov
sbb
mov
loopne
sbbb
ljmp
movsb
jecxz
aad
scas
lahf
jo
jno
lods
xor
insb
mov
push
xchg
popf
int3
loop
cwtl
and
or
xor
jmp
ficoml
or
adc
sbbl
ja
pop
aad
mov
xor
repz
pop
std
mov
sti
xor
push
and
pop
imul
jne
pop
aad
xlat
cli
aam
scas
sub
into
sub
dec
das
jp
cli
aam
scas
test
jne
pop
aad
fistpl
subb
cmp
scas
pop
aad
insl
xchg
xor
xchg
xor
push
add
sbb
sbb
jp
sti
aam
scas
dec
jno
sub
jo
xor
ds
xchg
lret
jo
sub
dec
std
xchg
xor
lcall
push
cmp
add
mov
add
icebp
and
pushf
add
push
aad
scas
mov
popf
inc
scas
scas
repz
cmp
sub
scas
pop
aad
push
es
jl
pushf
adc
nop
push
dec
pop
aad
rcrb
sub
mov
mov
push
pop
fs
add
in
test
popf
movsl
int
add
pop
cmpsb
dec
sar
scas
pop
inc
jp
mov
jle
js
dec
js
lret
scas
adc
inc
and
lds
sub
mov
aam
jmp
js
mov
sub
push
cld
das
stos
inc
lods
cwtl
out
lret
pop
push
jg
rcrb
into
inc
dec
mov
xchg
out
sahf
imul
pusha
test
cli
push
xchg
scas
jp
movb
adc
and
out
jne
adc
push
mov
inc
xchg
push
fstps
mov
mov
lods
xchg
push
rcll
jge
out
mov
pop
ss
jne
scas
sti
jnp
fldt
jo
ret
stc
enter
pushf
push
or
and
cs
outsb
lret
sub
mov
std
es
js
pop
std
sub
lods
push
inc
and
push
je
loopne
or
loop
sub
mov
xor
xchg
shrb
movsb
filds
jge
jecxz
cmpsb
or
iret
push
fsubr
js
or
js
or
js
or
js
or
js
or
test
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
push
sbb
or
loopne
adc
into
jns
pop
sbb
and
mov
int
es
jns
mov
and
roll
repnz
adc
into
jns
pop
sbb
push
fs
xchg
push
dec
repnz
adc
into
jns
les
sbb
push
fs
xchg
xchg
subb
loopne
adc
into
jns
mov
sbb
push
fs
xchg
sarl
loopne
adc
into
jns
lea
sbb
push
fs
xchg
or
adc
into
jns
xchg
pop
sbb
push
fs
xchg
sub
adc
into
jns
xchg
pop
sbb
push
fs
xchg
aad
repnz
adc
into
jns
popf
pop
sbb
and
repz
into
jns
test
sbb
and
mov
rcll
jns
xchg
pop
sbb
and
clc
sub
loopne
adc
pushf
pop
sbb
push
fs
xchg
into
in
repnz
xor
into
sub
mov
movsb
lods
ret
lock
sbb
cmp
adc
rcl
das
in
adc
movsb
insl
xchg
sarl
xchg
pop
outsb
les
test
icebp
dec
xchg
stos
mov
mov
fwait
and
dec
fs
lods
std
and
jbe
push
sub
jecxz
aas
pusha
cmp
arpl
into
push
cmp
mov
cli
xchg
scas
cmp
xchg
lret
loopne
fdivrs
insl
mov
and
cwtl
jecxz
sub
push
pop
in
out
out
sbb
pop
cmpl
mov
dec
adc
jnp
or
mov
push
sti
ret
bound
clc
mov
push
std
mov
adc
sti
rorl
pop
enter
movsb
xchg
cmp
or
xchg
ret
xchg
adc
loope
pop
xor
es
mov
and
push
adc
aas
cltd
mov
insl
and
lret
jae
dec
xor
pop
ds
cli
pop
sub
ret
cmpsl
xlat
xchg
div
imul
or
andb
addb
sbbb
ds
cmpsb
inc
cmpsl
and
or
sbb
fwait
loopne
mov
inc
insb
dec
clc
mov
dec
ljmp
aad
xor
cmpsb
filds
cmp
or
sahf
idivb
sbb
jp
fcmovu
xor
cmp
push
mov
lret
jle
push
xchg
adc
inc
xor
div
and
ficoml
jno
sub
das
shlb
sub
cmp
xchg
nop
andb
sub
cmc
cmp
nop
sub
insl
sbb
xchg
adc
sub
and
js
xchg
dec
ljmp
dec
int3
decl
inc
and
mov
mov
ds
dec
add
lahf
aam
mov
or
and
in
push
and
cmp
jno
lcall
cli
pop
pop
js
addr16
inc
push
cmp
addl
xor
mov
loopne
insl
adc
sub
stc
in
push
cmpsl
and
adc
dec
inc
jle
push
xchg
sub
pop
js
icebp
jae
and
outsb
push
add
and
dec
cmc
mov
mov
jbe
sarb
or
xchg
dec
add
pop
out
lret
cmpsb
or
sbb
insl
xchg
add
or
dec
jecxz
dec
adc
xchg
jp
xor
cwtl
pop
pop
imul
xchg
cmp
pop
out
stos
inc
mov
js
mov
fwait
and
testl
jp
xor
mov
jg
into
leave
lods
rolb
into
cmpsb
add
lret
pop
fisubl
push
pop
rol
aam
cmp
mov
adc
pop
cmp
cmp
mov
sti
add
jle
mov
xchg
jb
rcl
xchg
imul
xchg
addr16
pop
fwait
mov
popf
clc
add
or
stc
or
js
bound
fiadds
add
pop
xchg
mov
ficoml
push
cwtl
push
stos
push
int
stc
insb
mov
cmp
mov
adc
inc
push
sbb
cmpsl
popf
push
ds
fcomi
push
popa
popf
and
subl
das
sbb
adc
movsb
pop
and
jnp
aam
leave
ss
or
xchg
js
je
out
xor
pop
fdivl
xchg
fbld
and
push
or
xor
ja,pn
mov
fisubl
sbb
jl
fcmovne
rclb
push
stc
and
sbb
inc
ja
inc
mov
adc
dec
sub
lret
enter
xchg
gs
testb
add
push
jecxz
dec
or
pop
icebp
add
cltd
sbb
lret
in
lds
sub
sub
sub
or
jmp
inc
mov
cmpsb
sahf
mov
xor
pusha
sub
xchg
ja
or
fdivs
add
and
fdivrs
mov
inc
sub
loopne
push
lds
add
xlat
sub
sahf
cmp
out
daa
cmp
test
ja
and
out
mov
inc
mov
jbe
filds
sbb
stos
inc
add
jo
xlat
iret
je
loopne
scas
cmp
or
push
xor
lret
movsb
jl
mov
icebp
dec
daa
push
mov
jp
cmp
rcr
jbe
clc
sbb
in
pop
imulb
icebp
pop
in
xchg
push
in
dec
cmpsb
push
jo
sub
inc
xor
insb
sbb
es
push
bound
xor
jmp
lcall
adc
jl
jp
adc
pop
lret
aad
je
leave
fwait
sbb
insl
or
dec
and
loop
insl
lahf
cltd
idivb
pop
push
movsb
aaa
sbb
sahf
lcall
xor
xor
mov
xor
inc
mov
aaa
jg
pop
movsb
lcall
in
jno
arpl
mov
push
ljmp
or
pusha
inc
lcall
movsb
sub
addr16
add
js
lcall
icebp
push
lods
dec
cli
ljmp
test
sbb
xorb
pop
ljmp
dec
dec
aaa
repz
repnz
mov
cli
aas
dec
insl
loope
fwait
jg
dec
out
lods
sub
fdivrl
push
xor
xor
js
or
pop
xchg
fs
cwtl
outsb
xchg
loopne
fmull
mov
inc
jle
xor
inc
lret
and
cli
stos
pop
mov
jb
stc
push
or
xor
repnz
repz
jg
pop
jge
cmp
sbb
pushf
pusha
decb
dec
cmp
mov
pop
mov
out
roll
pop
ret
mov
mov
in
sbb
xor
call
inc
mov
test
add
ja
insl
push
pop
inc
mov
xchg
xlat
or
mov
repz
xchg
fs
push
shl
xor
lret
mov
mov
pop
test
mov
add
aas
daa
scas
pop
pushf
and
add
leave
xor
aad
test
and
aam
loopne
inc
orl
aam
and
add
repz
nop
mov
mov
shlb
xor
ret
xor
out
dec
xor
lods
xchg
jecxz
sbb
mov
lods
mov
cmp
jnp
push
adc
shrl
dec
stc
sbbl
adc
lret
adc
pushf
sbb
cli
xchg
ja
pop
add
cmp
es
movsl
nop
les
mov
jb
jb
xor
hlt
mov
ds
xchg
loopne
mov
aam
loop
xor
cmp
data16
jp
push
sub
out
loopne
mov
push
add
popf
add
and
sbb
or
outsl
frstor
outsl
and
lahf
test
shlb
in
pop
cmp
cmpsl
pop
push
pop
push
adc
sub
data16
pop
aaa
sub
test
xchg
dec
mov
jmp
pop
add
loopne
faddl
call
lret
orl
sahf
xchg
aad
sub
test
movsb
inc
into
adc
inc
adc
xor
xor
dec
xorl
fsubl
pop
lods
jb
es
or
in
test
push
pop
pop
xchg
push
pop
push
xchg
movsb
cltd
iret
lcall
sbb
mov
push
sub
jb
lods
sub
or
lcall
mov
jmp
xor
nop
pop
in
xchg
xchg
sbb
and
pop
adc
jmp
xchg
andl
adcl
bound
sub
cmpsl
push
xchg
in
loope
inc
push
mov
add
addb
mov
push
and
sar
push
sub
xor
pop
int
sub
push
sbb
adc
mov
pop
xchg
mov
xor
push
jno
fs
outsl
rcrb
and
stos
xor
jae
mov
push
stos
cs
push
pop
cmp
and
lahf
jb
mov
das
mov
fsubl
fsubrl
lods
xchg
popaw
cmp
push
xor
pop
mov
and
and
out
pop
ret
add
sub
cmpl
int3
iret
jnp
xchg
push
inc
imul
xlat
jo
int
mov
xchg
xchg
inc
and
cli
mov
push
jno
jl
xor
jge
push
sti
mov
and
mov
fidivl
fistpl
icebp
push
sbb
lock
stos
mov
sbb
sti
mov
pop
fcmove
scas
mov
mov
sar
sbb
jae
push
cli
sbb
dec
push
inc
faddl
imul
arpl
rolb
call
fisttps
mov
xor
jmp
xor
push
push
adc
sbb
lret
scas
xor
xor
mov
adc
and
mov
test
inc
lods
pop
lret
jae
lret
aas
xchg
jecxz
mov
xchg
sbb
ss
insb
lret
ret
jae
jp
nop
xlat
or
imul
mov
mov
mov
stc
jg
xchg
or
test
sub
frstor
mov
jns
inc
mov
and
mov
je
dec
jnp
movb
gs
jbe
pop
mov
pop
inc
inc
fwait
lret
dec
pop
imull
sub
stos
js
push
xchg
xchg
mov
pusha
jge
add
pop
inc
mov
cwtl
cmp
dec
mov
xchg
aad
fs
cwtl
mov
add
mov
inc
or
sub
push
mov
and
and
xchg
cmp
sar
aam
lret
dec
and
add
jl
cli
and
cltd
gs
daa
lret
call
jns
filds
lret
or
xchg
jecxz
hlt
add
and
adc
mov
clc
fbld
push
dec
jno
push
add
pop
jb
mov
mov
inc
jmp
rolb
out
ret
aam
dec
push
xor
lret
or
sbb
push
popa
lcall
outsl
aaa
js
repnz
daa
jmp
xchg
cmp
mov
bound
mov
loope
inc
push
cli
out
enter
mov
shll
adc
lods
dec
push
jg
xchg
call
and
andb
and
in
loop
or
stc
addr16
fisttps
mov
fcoms
adc
xor
jmp
sub
call
out
cmp
add
lds
sbb
iret
push
pop
and
scas
mov
shll
inc
sbb
push
movsb
imul
insl
pop
test
aad
adc
jnp
mov
jl
ror
sbbb
repnz
mov
dec
dec
mov
or
ret
in
js
imulb
add
enter
rol
subb
call
sbb
xchg
fwait
notb
imul
out
push
pop
out
js
into
xchg
lret
fwait
loope
or
enter
shll
xchg
dec
inc
pop
ret
test
mov
pop
test
rorb
add
in
or
leave
pop
sub
sbb
jno
inc
inc
mov
out
mov
call
sbb
jge
cmp
xchg
push
sub
aam
xor
imul
popf
aam
dec
das
mov
xor
fmull
cmp
add
in
nop
and
es
pop
lret
cltd
mov
adc
pop
cmp
sub
ret
leave
into
subb
lds
jmp
and
aaa
xchg
inc
lahf
leave
roll
add
or
mov
ds
icebp
loop
imul
pushf
int3
dec
fstpt
mov
cltd
fcoms
dec
push
push
aad
dec
movsb
ljmp
test
gs
xor
cwtl
push
jecxz
les
std
mov
nop
scas
sub
roll
es
shll
clc
or
mov
jnp
ja
test
movsl
ror
push
out
adc
and
dec
test
mov
mov
jmp
mov
mov
push
inc
sbbb
mov
sub
pop
cld
arpl
std
and
sub
out
jb
mov
push
das
mov
lcall
es
ss
loope
sbb
cltd
lcall
nop
inc
fwait
and
adc
stos
sub
pop
inc
mov
pop
in
sub
in
imul
hlt
test
repz
arpl
loopne
addb
adc
and
mov
xor
inc
hlt
cmpsb
cmc
adc
or
xor
lret
pop
lret
aas
xchg
jecxz
xchg
loopne
fsubs
scas
adc
dec
cs
icebp
movsl
inc
mov
xor
aas
adc
cmp
outsb
jp
pop
inc
push
mov
shll
addb
ficomps
mov
sub
es
mov
iret
pushf
lock
push
loopne
xchg
dec
movsl
imul
iret
fwait
jmp
cmpsb
and
pop
cmp
mov
out
push
scas
and
cmc
mov
add
fiadds
add
mov
repnz
stos
pop
rorl
jae
cmc
enter
jle
mov
push
xchg
test
div
cmpsl
mov
xor
jle
test
punpckhdq
sub
dec
fwait
outsl
add
popa
xchg
sub
imul
aas
fwait
cltd
arpl
dec
fcomi
in
jp
sarl
outsl
repz
std
std
js
ss
mov
iret
fistpll
adc
jnp
and
jmp
jle
pop
push
pop
ret
enter
dec
xchg
shr
clc
and
insb
inc
fucomi
jnp
mov
lret
dec
fstpt
and
add
xchg
sub
mov
icebp
jo
and
negb
and
or
cwtl
mov
les
arpl
ljmp
inc
stos
mov
push
loopne
in
jg
outsb
maskmovq
divl
fdivrs
and
aaa
push
dec
fistl
adc
enter
addr16
aad
jb
add
arpl
test
pop
outsl
aad
js
ss
dec
fucomi
jecxz
ja
test
jae
xor
jp
fldt
adc
xchg
push
push
mov
cmp
movsb
shr
fcmovnbe
and
push
pop
mov
lret
in
push
stos
pop
xor
or
jae
dec
fcmovne
cli
movsb
mov
or
push
push
fwait
xchg
xor
in
jnp
and
dec
fwait
outsl
add
popa
shrb
sar
push
hsubpd
pop
sub
cmp
hsubpd
pop
sub
adc
xor
lods
ss
pusha
cmp
jne
dec
aaa
scas
roll
jo
jo
xor
bswap
stos
jp
mov
or
cld
xchg
add
imul
dec
fcmovnu
decb
lahf
mov
add
pop
lret
pop
and
movsb
clc
rolb
cmp
imul
roll
fwait
add
add
inc
or
fsubr
jbe
ret
test
pop
outsl
dec
cmp
roll
fwait
aas
fidivl
mov
push
pushf
pushw
xlat
and
cmp
loop
push
aam
fildll
lds
ret
test
imul
imul
and
bound
push
sbb
cltd
cmp
xlat
jns
add
repnz
mov
imul
mov
lahf
cmc
mov
jl
xor
inc
ret
aad
ja
lret
xchg
pushf
sbb
push
in
push
orb
or
shrl
xor
dec
xchg
push
dec
cwtl
push
shll
ja
dec
jnp
es
push
lss
cwtl
push
ja
push
push
push
mov
shrl
testb
imul
sub
fildll
cltd
fs
js
mov
lahf
in
push
xchg
mov
pop
and
shrb
sbb
cmc
cmp
pop
jg
sahf
pop
jmp
pop
jge
dec
jnp
dec
push
pop
ret
es
in
test
andb
mov
popa
or
mov
mov
cmpsb
stos
adc
in
fmull
aaa
dec
es
ds
pop
mov
mov
pop
aad
shrd
mov
aas
pop
mov
xchg
pop
sub
or
and
fstpl
dec
fistpl
sbb
or
push
push
in
lret
mov
mov
rcrb
cmpsb
inc
leave
out
mov
rcll
pop
loopne
jno
cmp
pop
mov
mov
sbb
mov
sub
sub
mov
stc
outsl
mov
and
sahf
push
xor
jmp
inc
lret
test
addps
sub
clc
pop
push
adc
pop
ss
shrl
mov
lods
out
mov
sub
popf
in
sti
pop
push
adc
xchg
push
xor
jmp
mov
test
jmp
jmp
dec
les
and
push
in
popf
test
and
mov
inc
xor
push
aam
shlb
ss
repz
mov
daa
push
addr16
aad
sbb
test
hlt
sbb
xchg
jmp
inc
lret
test
ror
pop
xor
dec
fisttpl
popa
xor
inc
dec
push
imul
adc
cmp
xlat
push
xor
adc
jp
frstor
or
push
mov
and
ret
test
mov
dec
xchg
fidivrl
sbb
nop
std
pop
ret
test
mov
ficompl
fs
adc
jno
adc
test
mov
frstor
jle
sbb
mov
cwtl
wrmsr
inc
add
sbb
push
jmp
dec
sbb
frstor
xor
xchg
xchg
inc
loopne
scas
or
jae
dec
fcmovnb
xor
mov
test
xor
negl
dec
cmp
dec
xchg
cld
repz
pop
ss
js
insl
call
dec
in
jbe
test
push
stos
lods
clc
mov
inc
cmpsb
cmp
aaa
xor
xor
mov
adc
notl
push
dec
repz
sub
cltd
jp
mov
stos
jp
mov
push
out
sahf
inc
jle
xchg
cmp
and
fldt
push
repz
std
repnz
push
subb
cs
aas
mov
outsl
add
cmpsl
sub
push
cltd
outsl
add
push
fcoml
push
pop
imull
cmp
imul
roll
cltd
lds
hlt
addr16
inc
cli
scas
add
push
pop
loopne
mov
jo
mov
sbb
sbb
xchg
test
pop
enter
aaa
sub
and
adcl
adc
jp
frstor
or
cmp
add
and
push
sub
cltd
fadds
in
lods
dec
and
sub
out
pushf
push
mov
test
mov
cld
stos
push
mov
xor
adc
push
stos
and
mov
out
in
lods
sarb
test
xor
mov
clc
cmpsb
xlat
and
pop
aad
movsb
push
adc
aas
mov
push
test
roll
das
xchg
push
fisubl
xchg
loopne
ret
inc
popf
gs
ds
pop
inc
lods
data16
push
mov
xchg
hlt
adc
push
dec
loop
rclb
push
mov
jge
dec
fiaddl
insb
inc
mov
ret
and
lahf
nop
xchg
test
int3
pop
in
adc
and
push
sarl
push
cs
and
lock
mov
or
push
jno
jl
sub
stc
pusha
sbb
insl
cmc
inc
xchg
cmp
in
insl
xchg
rorb
inc
mov
dec
cltd
scas
ret
test
xor
xor
mov
gs
pushf
or
jmp
pop
dec
rcl
fsubrs
xchg
out
push
inc
or
and
pop
sbb
xchg
es
push
jecxz
cmp
jbe
cmp
xchg
push
clc
aaa
xchg
pop
xorl
sub
mov
and
movl
sub
cmc
insl
jo
push
cmpsb
add
shll
jb
and
pop
out
sbb
jae
out
pop
movb
pop
ds
dec
fistl
jbe
cmpsl
adc
sub
push
pop
mov
and
sub
push
dec
lretw
inc
push
push
dec
pop
and
fsubr
and
jmp
jle
fstps
mul
adcl
imul
cmp
dec
fwait
outsl
add
xchg
or
outsb
lods
ljmp
fdivl
in
sub
pop
outsl
push
or
add
repz
iret
dec
push
inc
shrl
add
inc
bound
add
push
xchg
sub
aaa
lds
pop
outsl
dec
sbb
and
mov
jle
fidivrl
and
outsb
fs
pop
pop
add
lods
ret
test
xor
negl
pop
dec
fldt
push
out
loop
mov
in
jbe
iret
mov
pusha
jns
sub
cwtl
push
fcompl
add
add
aam
enter
pop
outsl
aad
js
ss
xchg
sar
test
adcl
imul
adc
outsl
add
popa
shrb
rcrl
aad
js
ss
out
xchg
dec
fildl
insl
ljmp
add
mov
es
adc
cld
mov
lea
mulb
in
hlt
loopne
jl
mov
pushf
xorl
jp
sub
sbb
push
iret
mov
in
arpl
lret
mov
and
push
xchg
push
pop
ret
xchg
sbb
out
push
sbb
mov
test
and
pusha
imul
or
repz
cli
out
pop
sub
je
pop
adc
les
fbld
xchg
dec
and
fnsave
int3
mov
push
pop
adcb
xchg
push
xor
jmp
and
nop
cmp
mov
addr16
sub
hlt
es
repz
xor
push
data16
xor
data16
fcmovnu
ja
fwait
dec
stos
pop
mov
pop
sbb
mov
test
cmp
sti
add
mov
push
ss
add
sbb
and
ss
add
popl
push
icebp
ffree
dec
outsl
xor
mov
test
mov
movsb
mov
sbb
mov
gs
dec
lret
movsl
sti
mov
dec
sbb
cs
and
pop
adc
test
dec
sbb
xlat
ficompl
mov
sbb
ljmp
lea
mov
test
pop
jmp
loopne
fisubs
or
xchg
dec
jle
mov
and
stc
push
or
cltd
iret
jae
jns
mov
cmp
sbb
test
fisubrs
cmp
cmp
sti
mov
insb
sti
push
sti
mov
and
mov
sub
mov
test
test
stos
xchg
loopne
mov
stc
enter
jle
repz
pop
ret
test
repz
repz
xor
cmp
testb
add
jmp
movsl
pop
es
loope
or
add
adc
xlat
fcoml
xorb
sub
ror
dec
mov
out
out
xor
pop
imul
sbb
adc
cmpsb
cltd
add
pop
fdivrs
pop
cmp
sub
fidivrs
fimull
cltd
mov
pop
sub
add
mov
inc
mov
sbb
push
xor
iret
mov
push
scas
push
rcrl
shrl
push
adc
test
xchg
mov
cmp
pop
test
push
rorb
pop
sub
pop
stos
je
mov
xchg
loope
insl
ret
lods
std
pop
mov
mov
adc
dec
loopne
and
shrb
pop
pop
push
mov
loope
mov
jg
shll
cmpsb
xor
pop
sar
repnz
sbb
push
cmp
sub
push
pop
sti
pusha
sbb
cmp
add
xor
sti
outsl
and
push
les
inc
pop
jg
mov
dec
mov
cli
divl
xor
fs
adc
rorb
clc
xor
negb
mov
out
shrl
and
push
aam
sbb
xchg
cltd
fsubs
adc
pop
pop
shrl
int
scas
mov
mov
aas
add
stos
popa
lret
sub
hlt
es
repz
xor
hlt
ret
test
testl
fsubl
jns
mov
push
adc
insb
jne
lahf
xlat
pop
pop
ret
dec
dec
add
sub
mov
pop
clc
dec
push
fnstsw
push
iret
inc
mov
jbe
jnp
push
enter
jge
mov
xor
std
mov
jl
bound
add
cmp
mov
adc
les
inc
or
add
out
popw
sbb
push
mov
subb
std
sbb
ret
jo
ja
out
icebp
lret
mov
sbb
inc
xchg
jl
dec
out
call
jg
jmp
push
outsb
sub
cli
cmp
xor
add
out
or
xor
jnp
shll
lods
sbb
jp
icebp
pop
mov
std
es
adc
mov
mov
ret
enter
dec
or
nop
pop
addl
jne
sbb
aam
jg
inc
and
ret
test
es
repz
jmp
adc
fdivl
movsb
cli
test
dec
fwait
movsb
adc
mov
lahf
pop
subl
int3
mov
jg
cwtl
movsl
arpl
pop
mov
dec
rclb
dec
mov
iret
push
push
and
shl
and
inc
int3
pop
add
jne
mov
and
imul
jb
sub
adc
and
int
and
mov
xor
into
addr16
adc
decb
lock
repnz
aad
test
push
jp
cmpsl
out
dec
fistpl
repnz
mov
fldt
inc
mov
adc
pop
fdivs
dec
js
fwait
sbb
pop
xchg
sbb
mov
aas
or
mov
push
idivb
icebp
into
and
and
push
add
inc
xor
dec
mov
mov
popa
sbb
push
and
dec
test
stc
out
adcl
jp
mov
pop
dec
jae
aam
test
cmp
and
gs
push
sub
push
pop
ret
std
inc
push
cli
cmp
lret
aam
mov
ds
sti
in
lret
scas
ret
hlt
xchg
xor
adc
imul
or
scas
insb
adc
xchg
push
push
mov
fs
dec
fisttpl
bound
sub
lea
enter
and
es
into
cmpsl
inc
adc
lea
xor
lds
xchg
out
aam
or
jle
xchg
sub
test
dec
mov
sbbl
adc
pop
push
sbb
ret
jle
outsl
xor
xchg
lea
sbb
adc
fstpt
mov
fisubrl
xchg
mov
jg
lret
orl
adc
push
in
mov
push
sti
adc
push
cmp
mov
loopne
fcmovbe
imul
sbb
out
arpl
loop
es
lret
push
incl
fs
add
inc
mov
int3
test
sub
dec
pop
dec
into
jns
jne
dec
mov
mov
cmp
adc
mov
cmpsb
imul
push
pushf
xchg
icebp
and
xlat
mov
frstor
imul
and
jmp
loopne
fisubs
mov
sbb
clc
test
fcompl
insb
sbb
or
and
xor
push
sub
enter
cld
shlb
out
add
and
sti
test
xor
outsl
adc
sahf
ret
test
pop
mov
ficoms
bound
aaa
mov
mov
xchg
lods
jmp
jmp
popa
add
outsb
cmp
or
mov
lahf
stos
cmc
inc
xlat
in
in
ret
test
test
int
and
fwait
leave
jmp
inc
adc
pop
cmp
push
jge
cmpsb
test
fnstenv
adc
and
test
and
xchg
mov
insl
and
pushf
arpl
dec
stos
shlb
pop
push
sti
adc
cmpl
cwtl
xchg
jnp
das
cmp
pushf
mov
xchg
or
jge
inc
mov
lods
jp
mov
data16
cmp
pop
ret
push
mov
mov
fwait
pop
mov
ja
orb
push
lds
push
pop
push
outsl
add
bound
cwtl
mov
addr16
es
cmp
xor
andb
mov
popa
or
outsl
nop
inc
mov
jmp
aam
push
das
call
push
sub
xchg
cmc
inc
in
push
lret
jae
push
adcl
repnz
ljmp
psraw
jo
adc
in
cmpsl
inc
and
shll
jbe
jge
jle
ss
or
xor
pushf
or
mov
out
jne
cmpb
dec
les
pop
aas
adc
cmp
and
je
jl
mov
mov
aas
idiv
inc
xchg
lret
fs
mov
inc
push
popf
mov
cli
adcb
jns
filds
cmc
lcall
or
push
sarl
hlt
push
clc
mov
mov
sti
or
xlat
sahf
iret
mov
das
xor
cli
mov
ret
jns,pt
xchg
pop
call
testl
les
adc
mov
jecxz
pop
pop
and
shlb
and
dec
movl
aas
xchg
cmp
dec
enter
test
inc
out
adc
ret
xor
repnz
xor
call
push
cli
xor
sub
shlb
mov
fisubrl
inc
xor
jns
pop
out
xchg
dec
adc
out
test
mov
push
int3
push
jp
sbb
jecxz
adc
mov
mov
ja
testb
xor
rorl
imul
cs
or
and
dec
push
jo
sbb
setbe
subl
cli
fnstsw
enter
dec
adcb
cwtl
fs
rolb
repnz
cmp
push
sub
hlt
mov
inc
loope
push
insb
and
dec
pop
xchg
or
xchg
jbe
enter
test
insl
or
pop
xchg
movsb
mov
push
xchg
pop
lret
lds
cwtl
mov
and
pop
loop
push
aaa
inc
push
jbe
aaa
shrb
test
adc
test
repz
jae
xor
and
xchg
dec
mov
pop
mov
jo
jnp
add
inc
push
test
mov
sarb
scas
cmp
adc
les
stos
or
loope
jns
icebp
mov
mov
sub
push
inc
cmp
std
jne
jns
popa
sub
cmp
jne
ds
sarb
inc
mov
push
cmp
or
push
dec
jnp
and
jecxz
mov
xor
lahf
stos
addr16
lret
stos
xor
dec
das
jb
adc
movsl
insl
lock
jle
push
mov
icebp
testl
stos
outsb
add
in
dec
lea
aaa
mov
xchg
add
addr16
pop
inc
push
cmpsb
sti
sarb
adc
xchg
xchg
iret
cmpsb
adc
sub
mov
jp
nop
das
or
ret
mov
stos
or
adc
xor
hlt
divb
jl
mov
jae
test
add
popa
call
outsl
pop
into
icebp
rcrb
xchg
outsl
add
sub
mov
adc
mov
mov
fsub
pop
ret
test
nop
cli
xchg
iret
inc
mov
adc
cmp
cmc
mov
mov
cmp
jne
mov
jns
pushf
push
mov
stos
jp
sub
mov
es
cwtl
iret
out
pop
or
test
popa
xlat
cwtl
xor
and
rclb
ficoms
ret
movl
stos
jg
loope
lret
sahf
bound
or
bound
leave
imull
adcl
out
loopne
ljmp
rolb
arpl
in
es
sub
mov
mov
mov
jne
imul
inc
ret
ret
test
repz
or
cmp
ret
or
mov
ret
or
scas
aaa
into
or
dec
enter
call
cmp
mov
test
ret
test
inc
xchg
push
lahf
cli
out
enter
mov
cmp
out
daa
scas
loope
xchg
ret
insl
sub
jle
sbb
cmpsb
push
cmp
out
cld
jnp
adc
into
sbbb
lret
mov
in
xchg
cmpl
and
pushf
lcall
roll
lret
ja
shl
lret
es
lcall
stos
cld
flds
std
das
sar
les
stos
mov
addr16
aam
jae
and
mov
cmp
add
pop
mov
test
ret
test
test
stc
or
jle
jecxz
mov
out
idivb
repnz
jbe
sub
ja
repnz
mov
cmp
cmp
andb
out
testb
and
mov
inc
add
jmp
and
cmp
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
lods
xchg
push
pop
lods
test
pop
jecxz
xchg
mov
inc
inc
cmp
adcl
push
xchg
mov
cmp
pop
in
cld
push
jmp
clc
fidivrl
fnsave
into
andl
test
lods
test
pop
jecxz
xchg
test
inc
inc
cmp
adcl
push
xchg
cld
lret
add
sub
daa
pusha
jne
push
jg
ret
test
sahf
ret
scas
flds
sub
ret
test
xchg
ret
mov
fistpll
je
push
jg
ret
test
fwait
ret
scas
fnstcw
pop
loop
sub
ret
test
xchg
ret
mov
mov
cmp
xchg
ret
push
sub
jle
add
mov
inc
fisttps
pop
ret
test
mov
filds
hlt
pop
ret
test
stos
or
movsb
das
xlat
pop
in
jnp
xor
rolb
int
or
push
stc
test
fnstenv
xor
into
cmp
aaa
mov
test
ret
sub
ret
test
lcall
loop
sub
ret
test
xchg
ret
dec
jle
pop
out
xor
loope
lds
fstpt
ret
test
dec
sbb
aam
test
jmp
xchg
add
daa
pusha
jo
test
ret
or
daa
pusha
adcb
data16
pop
ret
test
movsl
or
cmpsb
filds
cmc
pop
ret
test
out
bound
pop
ret
pmuludq
xchg
xchg
repnz
jecxz
xchg
mov
inc
inc
cmp
adcl
push
xchg
call
ret
test
inc
enter
aaa
rclb
inc
push
fnsave
into
test
ret
sub
pusha
pop
dec
cltd
inc
aaa
into
jecxz
pop
xchg
insb
push
pop
ret
test
cmpsb
or
mov
xchg
xchg
filds
sbb
or
fisubrl
cmp
aad
cmp
pop
cmp
ret
ljmp
ret
and
sbb
add
push
pop
ret
inc
and
stos
mov
pop
ret
test
lock
je
push
lds
push
pop
ret
test
popa
ret
test
inc
int
aaa
into
mov
mov
daa
pusha
lock
add
aaa
jne
jle
and
xchg
bound
into
orl
lods
test
pop
dec
mov
pop
fisttps
pop
ret
test
cmp
mov
ret
int3
mov
daa
pusha
ret
ret
test
lods
test
jecxz
xchg
movsl
dec
lock
inc
cmp
adcl
sub
xchg
xchg
inc
ret
pop
cmp
lods
test
pop
jecxz
xchg
movsb
dec
pop
cmp
inc
cmp
adcl
push
xchg
xorb
lret
popa
mov
or
loope
daa
pusha
jne
push
jg
ret
test
pushf
ret
test
loop
sub
ret
test
xchg
ret
cs
loop
pop
cmp
mov
jo
test
into
adcl
fdivp
xchg
xchg
das
xor
mov
add
pop
ret
test
movsb
or
mov
filds
push
lods
or
push
ret
test
dec
in
in
ss
mov
popa
ret
test
enter
mov
mov
les
jg
ret
test
fwait
ret
scas
fnstcw
pop
loop
sub
ret
test
xchg
ret
sub
and
add
test
pop
jg
cmp
or
in
out
daa
pusha
adcb
stos
fwait
in
adcl
xor
mov
int3
push
out
pop
ret
test
lret
pop
mov
ret
jmp
nop
cmp
inc
push
jmp
fisttps
pop
xchg
insb
push
pop
ret
test
stos
or
filds
ljmp
pusha
push
das
jecxz
aad
cmp
pop
push
sbb
push
fisttps
aaa
into
andl
adcl
mov
push
mov
mov
in
lods
int3
push
push
pop
ret
test
xchg
pop
mov
cmpsb
push
subb
push
mov
push
clc
push
nop
shrb
add
mov
pop
cmpb
xchg
inc
addb
ss
fsubs
fs
andl
fisubs
int3
punpcklwd
test
sbb
aam
es
adc
cmpsb
push
test
xchg
push
bound
pop
mov
dec
mov
jne
push
jg
ret
test
fwait
ret
scas
fnstcw
pop
loop
sub
ret
test
xchg
ret
push
jno
sub
roll
fisttps
pop
xor
je
push
jg
ret
test
cltd
ret
test
scas
sub
jg
pop
arpl
test
xchg
ret
lahf
xchg
push
pop
ret
insl
pop
pop
ret
test
mov
ficomps
sub
jnp
in
subl
les
fmul
repnz
movsb
inc
scas
inc
jns
mov
fisttps
fnstenv
pop
aaa
into
inc
add
pop
ret
test
rorb
loopne
filds
out
pop
ret
test
test
lret
jg
idivl
jb
mov
cmp
or
pusha
jo
xchg
ret
or
pusha
mov
fisttps
pop
xchg
insb
push
pop
ret
test
rorl
loopne
filds
out
pop
ret
test
test
lret
outsb
ret
test
push
in
cmpl
mov
subl
pop
cwtl
insb
push
pop
ret
test
movsb
or
mov
filds
push
lods
or
cmpsb
pop
test
test
pop
jecxz
xchg
mov
inc
inc
cmp
adcl
push
xchg
inc
xchg
add
cmp
ret
test
int3
push
es
ret
test
or
sbb
pop
adc
sub
mov
stos
xchg
push
imull
test
ret
insl
arpl
test
xchg
cs
mov
jg
mov
imul
rcll
pop
aaa
mov
test
jecxz
sarl
mov
jb
xor
stc
adcl
lret
adc
loope
orl
xchg
fildll
neg
ss
jo
test
jmp
jecxz
xorb
adc
addr16
push
lods
stc
lret
adcl
in
cmpsl
aam
xor
push
ret
test
xchg
lods
pop
loopne
repnz
int3
xor
stos
fwait
in
ret
test
popf
pop
cmpsl
outsl
inc
cwtl
push
pop
ret
fbstp
test
into
adcl
mov
fisttpl
adc
pop
xchg
insb
push
pop
ret
test
stos
or
filds
ljmp
int3
out
scas
out
rcrl
test
pop
dec
inc
aaa
into
mov
retw
test
int3
adcl
outsl
push
pop
ret
hlt
adc
jge
icebp
insb
and
cmp
mov
pop
ret
test
pop
loope
ss
jle
je
sub
ret
test
lcall
loop
sub
ret
test
xchg
ret
nop
cwtl
stos
push
add
pop
ret
test
mov
filds
in
pop
ret
test
stos
or
cli
ret
pop
push
lret
test
orb
fucomip
push
mov
adcb
and
sbb
add
push
pop
ret
inc
test
dec
inc
push
and
insl
testb
dec
fisttps
pop
dec
mov
inc
fisttps
pop
push
push
pop
ret
test
cmp
popf
inc
cmp
ret
test
int3
push
cs
cmpsb
sub
pop
push
push
lods
stos
xchg
fstpl
test
notb
movsb
fwait
vpmacsww
ret
test
cld
mov
bound
popf
pop
mov
xchg
in
push
ret
test
movsb
insb
xor
jbe
pop
push
loopne
add
ret
test
mov
xchg
insb
push
pop
ret
test
cmpsb
or
mov
xchg
xchg
filds
sbb
or
outsb
enter
aaa
jmp
push
test
ret
and
sbb
add
push
pop
ret
inc
and
pusha
push
outsl
pop
es
cltd
xchg
insl
gs
ret
test
fiadds
push
frstor
xchg
shll
mov
jo
push
pop
ret
loop
ret
test
dec
test
ret
add
mov
daa
pusha
fiaddl
in
ss
jle
cmp
dec
aaa
into
sbbb
fsubp
add
mov
mov
test
pop
jecxz
xchg
stos
dec
dec
cmp
inc
cmp
adcl
push
xchg
mov
ret
test
roll
fisttps
pop
inc
jns
pop
movb
lods
test
pop
jecxz
xchg
stos
dec
dec
cmp
inc
cmp
adcl
push
xchg
sub
aaa
sti
ss
insb
pop
pop
ret
test
add
adc
dec
adc
dec
mov
jo
mov
mov
pushf
sub
outsl
rorl
push
push
dec
mov
push
imul
insb
mov
filds
ficoml
lret
pop
jo
inc
xchg
and
cmpsl
fistpll
mov
aam
adcl
add
testl
mov
shl
push
fisubrl
lds
ljmp
not
push
mov
pop
ret
test
push
dec
cmp
lea
ret
mov
or
lock
dec
js
sub
push
pop
ret
idiv
pop
orb
mov
push
idiv
iret
adcl
dec
sbb
jns
cmp
out
dec
sbb
xor
in
stos
xchg
in
ljmp
push
pop
jecxz
xchg
movsb
dec
pop
cmp
inc
cmp
adcl
push
xchg
inc
push
mov
jl
fisttps
pop
cmp
or
inc
cmp
int3
or
fcmovb
test
int3
add
ret
test
int3
or
pop
ret
test
cwtl
insl
sub
sbb
ret
outsl
dec
adcb
push
scas
adcl
pop
lds
ljmp
mov
dec
fisttps
aaa
into
sub
gs
adc
jp
dec
aaa
into
jmp
push
pop
ret
and
sbb
add
push
pop
ret
inc
cmpsl
sbb
jl
sbb
js
fadd
test
cmp
push
pop
ret
test
rorb
loopne
filds
jmp
ret
test
test
xor
and
clc
loope
sub
pop
ret
test
outsl
inc
xor
push
mov
adcb
and
sbb
add
push
pop
ret
inc
test
xchg
cmp
fistpl
push
pop
ret
ljmp
push
aaa
enter
inc
pop
jbe
rclb
xchg
in
shlb
push
pop
ret
jns
jns
pop
loope
mov
xchg
fildll
lret
pop
mov
lahf
inc
out
cmpsb
and
pop
cmpsb
adc
jp
mov
ret
xchg
xor
or
pop
mov
push
bound
pop
clc
stos
xchg
insl
arpl
test
fwait
mov
jns
lea
push
pop
ret
sti
rcrl
pop
jl
push
inc
outsl
out
pop
scas
adcl
sbb
add
mov
daa
dec
or
mov
aad
stos
sbb
into
mov
insl
ret
test
roll
and
ret
sbb
repnz
jns
adc
xor
adcl
push
xchg
movsl
dec
lock
inc
cmp
adcl
sub
jg
arpl
roll
fisttps
pop
ret
or
jno
daa
pusha
jns
jl
pop
jg
aas
ficoml
cmp
into
stos
add
xchg
insb
push
pop
ret
test
cmpsb
or
mov
xchg
xchg
filds
sbb
or
inc
fadd
test
dec
or
aaa
into
add
aam
es
pop
mov
inc
sbb
out
in
xchg
clc
xchg
mov
push
pop
ret
xchg
or
or
aaa
out
in
imul
cmp
pop
xchg
fildll
push
sbb
inc
es
xlat
add
pop
inc
les
test
ret
mov
add
addb
or
dec
add
cs
in
dec
push
sub
icebp
xor
in
sub
push
icebp
loope
dec
stos
and
clc
jle
or
es
mov
subl
ret
out
push
lds
dec
pop
and
push
aaa
into
insb
mov
cmp
test
pop
ret
insl
out
ret
test
int
popf
rclb
mov
and
mov
sub
leave
mulb
pusha
aam
add
aaa
into
mov
pop
ret
test
inc
int3
dec
aaa
into
mov
pop
ret
test
pop
imul
sub
ret
test
lcall
loop
sub
ret
test
xchg
ret
iret
adc
push
cmp
mov
ret
dec
mov
aaa
les
pusha
cli
iret
adcl
test
fdivr
ljmp
sub
pop
xlat
jae
inc
mov
ret
in
ret
test
les
inc
mov
test
jecxz
xchg
movsl
dec
lock
inc
cmp
adcl
sub
cs
js
or
pusha
and
addl
rorb
loopne
filds
hlt
pop
ret
test
test
dec
cwtl
push
fmuls
loopne
inc
mov
aaa
into
jmp
push
pop
ret
and
sbb
add
push
pop
ret
inc
cmpsl
sbb
inc
add
add
fisttps
pop
ret
test
sahf
ret
scas
flds
sub
ret
test
xchg
ret
outsl
add
mov
push
lods
sub
scas
sbb
add
push
pop
ret
inc
cmpsb
sbb
mov
sahf
fbld
push
pop
ret
xchg
fsubs
xchg
push
pop
ret
inc
test
sub
dec
lods
out
pop
xchg
sbb
cmp
outsb
and
pop
push
ficoms
test
xchg
pop
mov
mov
test
int
push
pop
xchg
sbb
call
int3
inc
clc
ljmp
push
pop
jecxz
xchg
rorb
push
inc
inc
cmp
adcl
push
xchg
mov
test
ret
fcompl
pop
out
adc
jne
push
jg
ret
test
popf
ret
mov
jg
pop
imul
ret
pushf
out
jecxz
lds
xchg
cmp
mov
ret
lds
and
xchg
push
pop
ret
add
shrb
xchg
or
cmpsb
movsl
test
shr
push
cmpsl
lods
test
ret
sub
outsl
testb
test
lods
test
pop
jecxz
xchg
mov
inc
inc
cmp
adcl
push
xchg
fnstsw
sub
pop
jo
mov
aad
stos
sbb
into
sub
mov
daa
pusha
and
jmp
push
pop
ret
and
sbb
sbb
mov
inc
stos
sbb
xor
sub
rolb
mov
lret
pop
pop
lds
subb
push
pop
ret
inc
and
sub
mov
js
jg
cmp
add
jo
mov
clc
fnstcw
repz
push
jg
ret
test
cltd
ret
test
scas
sub
jg
pop
imul
ret
imul
in
daa
pusha
sbb
cmp
into
sbbl
ret
test
add
fcmovu
in
push
pop
ret
test
pop
ret
test
cmpsb
or
mov
xchg
xchg
filds
sbb
or
push
xor
movsb
mov
popf
loope
in
hlt
daa
pusha
cli
les
mov
lods
test
pop
jecxz
xchg
stos
dec
dec
cmp
inc
cmp
adcl
push
xchg
push
imul
call
loopne
push
sub
push
fiaddl
out
into
jecxz
std
mov
push
pop
ret
test
sub
dec
mov
cmp
mov
shll
push
and
enter
mov
rorl
mov
cmp
mov
inc
arpl
dec
add
sub
sbb
rcrl
ret
dec
jge
mov
or
sbb
push
jg
ret
test
fwait
ret
scas
fnstcw
pop
loop
sub
ret
test
xchg
ret
in
stos
in
les
xchg
and
pop
ret
test
jb
cmp
sbb
cmp
mov
je
push
jg
ret
test
popf
ret
mov
jg
pop
fs
test
xchg
ret
sub
cmp
scas
jmp
adcl
or
stc
movl
xor
mov
jmp
sti
daa
pusha
pop
push
movsl
jmp
into
dec
inc
out
xchg
cmp
rcrb
push
push
pop
ret
insl
gs
ret
test
adc
inc
cmp
filds
sbb
pop
xchg
insb
push
pop
ret
test
mov
filds
out
pop
ret
test
stos
or
test
out
addr16
rcll
test
jns
sbb
daa
pusha
subb
push
pop
ret
add
out
andl
ret
push
jg
ret
test
popf
ret
mov
jg
pop
gs
test
xchg
ret
jp
add
mov
jno
test
movl
dec
repz
nop
insb
push
push
lods
sub
mov
popf
or
sbb
mov
inc
lods
sbb
xchg
cmp
adcl
out
sbb
iret
jg
mov
fcomps
ret
xchg
fsubs
adcl
test
repz
jecxz
xchg
rorb
push
inc
inc
cmp
adcl
push
xchg
dec
aaa
das
inc
into
pop
imul
pop
ret
test
test
add
mov
ret
insl
pop
pop
ret
test
jle
ljmp
push
pop
jecxz
xchg
mov
inc
inc
cmp
adcl
push
xchg
adc
or
aaa
jmp
pusha
pop
ret
test
mov
adc
lock
push
pop
ret
lret
repz
inc
cmpsb
pop
push
incb
xor
in
adcl
fwait
or
sub
mov
cmp
xchg
ret
xorb
sub
cmp
add
xchg
insb
push
pop
ret
test
mov
filds
cmc
pop
ret
test
stos
or
dec
daa
aaa
insb
or
cmp
aad
lds
into
enter
in
lods
int3
xor
mov
ret
test
outsl
notb
int3
xor
mov
xchg
push
cmpsl
stos
mov
push
scas
stos
mov
insl
pop
pop
ret
test
testb
nop
jl
cmpsl
out
add
pop
ret
test
fst
xor
dec
pop
ret
test
mov
daa
pusha
fidivl
pop
aaa
into
in
into
sti
pop
clc
sarl
insb
push
pop
ret
test
mov
filds
repz
ret
test
stos
or
sub
in
inc
jmp
fstpl
cmp
xchg
push
pop
ret
lods
sub
mov
adc
mov
adc
data16
cmp
ret
test
movb
push
daa
pusha
jo
xchg
ret
xor
pusha
or
pop
jnp
jmp
inc
into
xchg
cmp
insl
pop
pop
ret
test
rorl
test
icebp
add
loope
not
and
pop
ret
test
into
mov
cmp
clc
out
roll
aaa
aaa
into
lds
push
sbb
mov
cmc
loop
pusha
jnp
mov
in
push
cmp
add
lock
es
stos
cmp
in
fisttps
fadd
test
dec
jmp
xchg
aad
push
xlat
aaa
into
enter
pushf
cmp
shrl
test
iret
adcl
push
push
popa
insb
jg
scas
adc
pop
mov
adc
mov
add
stc
andl
adcl
sbb
jno
mov
pop
cmp
gs
ret
test
add
cmp
push
jnp
push
pop
ret
ljmp
ret
and
sbb
add
push
pop
ret
inc
cmpsl
sbb
sarb
inc
push
adcb
push
mov
mov
jb
cmp
enter
jecxz
xchg
stos
dec
dec
cmp
inc
cmp
adcl
push
xchg
aam
xlat
sbb
je
fdivrs
or
xchg
sti
daa
pusha
ret
les
repnz
jecxz
xchg
movsb
dec
pop
cmp
inc
cmp
adcl
push
xchg
jge
jnp
movb
in
lret
daa
pusha
jo
mov
ret
insl
push
pop
ret
test
mov
xchg
push
popa
add
push
pop
fisttps
fadd
test
into
or
fisttps
pop
lods
test
repz
jecxz
xchg
rorb
push
inc
inc
cmp
adcl
push
xchg
pop
daa
mov
mov
cs
push
pop
ret
dec
testl
pop
xchg
push
pop
adc
add
pusha
dec
fisttps
bnd
test
lcall
aam
mov
fsubr
mov
xchg
into
or
ret
push
cmpsb
clc
ret
popf
out
into
sub
xchg
lret
daa
pusha
jnp
test
jecxz
xchg
movsl
dec
lock
inc
cmp
adcl
sub
pop
fisttps
pop
adc
jne
ret
int
imul
push
and
cmp
fbld
in
xchg
pop
hlt
and
aam
lods
in
cmp
pop
fwait
in
fldl
test
pop
jecxz
xchg
mov
inc
inc
cmp
adcl
push
xchg
loope
in
push
popa
out
out
push
subb
push
fcoml
out
int3
xor
mov
jne
lds
mov
insb
push
pop
ret
test
rorl
loopne
filds
cmc
pop
ret
test
test
mov
pop
push
pop
ret
test
lds
cmp
jg
pop
ret
test
inc
xchg
ret
fsubs
test
dec
add
cmp
loop
push
pop
ret
insl
gs
ret
test
xchg
mov
mov
push
push
fisttps
pop
out
sbb
push
fisttps
mov
adcb
and
sbb
add
push
pop
ret
inc
test
ret
sub
fisttps
pop
mov
push
mov
adcb
and
sbb
add
push
pop
ret
inc
test
fsubl
dec
and
stos
rorl
lock
pop
clc
jb
adc
pop
ret
test
stos
xchg
jecxz
ret
test
inc
xchg
pop
pop
and
pop
aaa
into
jnp
int
and
pop
lods
test
repz
jecxz
xchg
rorb
push
inc
inc
cmp
adcl
push
xchg
sub
sub
pop
ret
test
jb
dec
aaa
into
add
sbb
pusha
jne
push
jg
ret
test
mov
sub
jg
pop
retw
test
cwtl
ret
roll
sti
aad
adc
jecxz
ret
test
cmpsb
fstps
push
mov
in
pop
adc
push
lods
sub
scas
sbb
add
push
pop
ret
inc
cmpsb
sbb
fstl
mov
insb
pop
pop
ret
test
arpl
lahf
orb
orb
loope
daa
pusha
cli
pop
test
mov
or
dec
fisttps
mov
ret
test
lcall
aam
inc
dec
aaa
into
or
cmp
daa
pusha
aam
mov
fmull
inc
add
aaa
into
or
test
daa
pusha
sbb
cmp
into
sbbl
ret
test
dec
sbb
in
loopne
jnp
push
pop
lcall
repnz
jecxz
xchg
mov
inc
inc
cmp
adcl
push
xchg
jno
cltd
shll
and
into
jecxz
fadd
test
mov
xchg
cmp
rorb
out
xchg
subb
push
cli
loope
enter
lds
mov
icebp
cld
sti
mov
out
ret
pop
ret
ficoml
test
int3
or
ret
test
add
out
roll
fisttps
test
adcb
and
sbb
sbb
mov
inc
stos
sbb
jg
ret
test
sub
mov
pop
inc
pop
adcl
nop
push
pop
ret
in
or
ficompl
outsb
pop
sub
fsubs
mov
mov
repz
ret
sub
pusha
and
or
jge
sub
dec
adc
mov
sbb
cwtl
jnp
mov
ret
pop
sbb
add
sti
loope
imul
xchg
outsb
cmc
loopne
sbb
ret
test
lcall
mov
insl
push
jo
xchg
ret
or
pusha
lcall
mov
cmp
leave
sbb
and
lahf
stos
push
sbb
mov
stos
or
icebp
mov
pop
je
push
sbb
sahf
stos
push
sbb
inc
loopne
cmp
inc
push
inc
cmp
cmp
ss
out
mov
pop
push
sti
adc
ss
das
mov
cmpsb
movsl
push
iret
push
lcallw
xor
inc
jmp
and
jnp
pop
dec
xor
arpl
sarb
loopne
cmp
enter
loopne
adc
fdivrs
fmull
inc
loopne
or
pop
xor
gs
test
inc
ljmp
xor
and
inc
loopne
fmulp
sub
sbb
push
dec
mov
inc
sbb
out
cmp
enter
loopne
xlat
add
mov
cmp
add
lcall
sub
jecxz
cmpsl
lahf
xor
ss
cld
cmp
inc
loopne
neg
sbb
ret
les
inc
lds
ss
test
mov
xor
ss
cld
cmp
inc
loopne
add
sbb
sbb
rclb
push
lock
call
cmpl
inc
andb
stc
jecxz
mov
jecxz
ss
test
stos
lahf
xor
ss
out
cld
cmp
inc
loopne
sti
aam
xchg
jmp
fstpt
pop
lcall
or
in
mov
maxps
ss
cs
jo
jg
test
aas
cmp
inc
loopne
inc
cwtl
xchg
mov
mov
mov
loopne
cmp
and
xor
mov
dec
outsb
shll
xchg
in
mov
inc
loopne
jmp
mov
enter
loopne
adc
mov
or
fmull
inc
loopne
or
dec
mov
mov
cmc
or
or
ljmp
loopne
fnstsw
mov
and
inc
loopne
cmp
enter
loopne
push
add
clc
mov
fmull
inc
loopne
push
add
in
pop
popa
loopne
cmp
xchg
pop
xor
cwtl
arpl
cmp
inc
loopne
and
inc
cmp
sbb
mov
enter
pusha
jne
jmp
js
test
outsl
aaa
cmp
inc
loopne
fstl
loopne
mov
lock
cmp
inc
loopne
aas
inc
loopne
adc
mov
sbb
fildll
arpl
loopne
cmp
pop
loopne
cmp
and
xor
cmpsl
jp
xor
inc
ret
ss
inc
loopne
pop
popa
loopne
cmp
cmp
mov
mov
loopne
cmc
sbb
xor
mov
loopne
cmp
inc
out
bnd
shll
cmc
fnstsw
bound
test
stos
lahf
xor
ss
out
cld
cmp
inc
loopne
sti
aam
popa
jmp
movsl
fldenv
dec
inc
loopne
lea
daa
cli
cmp
stos
fs
imul
popf
and
call
ljmp
lret
pop
lods
push
inc
cmp
mov
inc
fbstp
cmp
push
push
rolb
test
mov
dec
loope
ss
scas
cld
movsb
cmp
enter
loopne
xlat
add
mov
cmp
add
jb
dec
loopne
cmp
inc
loopne
mov
add
xor
xor
dec
movsb
pop
aaa
ljmp
insl
jmp
loopne
dec
sbb
ss
inc
loopne
adc
loopne
ds
loopne
adc
pop
and
cs
fstl
loopne
mov
xchg
adc
lods
call
inc
loopne
mov
ss
jnp
lcall
cmp
jmp
adc
pop
push
sti
adc
ss
cltd
xor
xchg
aam
mov
push
fistps
das
shl
sub
jecxz
stos
lahf
xor
ss
out
cld
cmp
inc
loopne
sti
aam
cmpsl
jge
ret
inc
loopne
cmp
enter
loopne
push
add
clc
mov
faddl
inc
loopne
push
add
xor
cmp
pusha
loopne
cmp
inc
loopne
mov
jns
ds
loopne
cmp
and
lret
xor
mov
jne
add
xor
test
popa
jp
fnstenv
int3
add
mov
mov
inc
ss
fdivl
cmp
jmp
adc
pop
push
sti
adc
ss
mov
je
mov
loopne
ljmp
inc
or
mov
dec
test
ficomps
cmp
ss
inc
add
jl
pop
sti
adc
sti
adc
ss
insl
jmp
loope
shll
inc
jecxz
adc
jnp
ds
in
cmp
daa
jbe
xlat
loop
push
xchg
loopne
cmp
mov
jp
rolb
fsubr
popa
sarb
test
loopne
cmp
cmc
test
popl
jne
rol
inc
out
ss
or
mov
mov
stos
icebp
mov
fldl
ss
dec
pushf
xor
pop
xchg
je
loopne
dec
mov
orl
sbb
pushf
mov
mov
adc
fdivl
cmp
out
mov
pop
push
sti
adc
ss
and
xor
mov
inc
ss
fdivl
cmp
call
push
sti
adc
ss
lcall
fstl
aam
mov
inc
loopne
test
ss
mov
enter
js
test
loopne
cmp
mov
roll
fdivrs
test
mov
mov
test
test
popa
aaa
and
pop
ds
inc
ss
cmp
ss
icebp
pop
add
pop
push
sti
adc
ss
stos
push
in
pop
das
ror
push
lahf
push
mov
addps
out
movsb
adc
xor
inc
les
ss
inc
repz
push
in
mov
add
fisubs
movsb
or
iret
adc
loopne
cmp
adc
ret
imul
loopne
mov
sbb
je
out
ja
mov
daa
repz
xchg
and
inc
loopne
lds
xchg
mov
xchg
repnz
aam
shrb
hlt
dec
or
mov
xor
loopne
sub
push
jle
push
ja
les
pop
hlt
pop
xchg
loopne
cmp
jo
dec
pop
cmp
pop
sub
jecxz
out
cmpb
bound
inc
loopne
ds
loopne
mov
test
xchg
loopne
cmp
cli
out
mov
and
xor
cli
jb
call
sar
ljmp
ss
ret
and
push
cmp
jmp
scas
loop
sub
int3
mov
or
test
inc
scas
pop
es
ret
or
cmp
ret
js
cltd
ret
js
cltd
ret
js
cltd
ret
js
cltd
ret
js
cltd
ret
js
cltd
ret
sub
cwtl
ret
js
xchg
shll
sub
mov
dec
in
in
adc
dec
jl
push
imul
mov
in
ficompl
inc
rorl
dec
ret
mov
or
cmpsb
cmp
mov
adc
inc
mov
adc
dec
es
pop
add
sbb
fwait
inc
es
pop
movsl
push
call
aas
push
out
jmp
mov
ret
stos
insl
fcoms
xchg
jo
test
std
lods
aaa
adc
xor
ljmp
and
and
push
mov
ret
add
test
fisttps
iret
xchg
jb
add
lods
das
xchg
test
sbb
into
xchg
or
test
ja
pop
idivl
aad
out
adc
push
push
ret
out
push
cmp
xor
xor
js
cltd
xchg
into
pop
test
mov
fs
ficoms
cltd
fld
jp
xchg
shlb
insb
mov
les
and
gs
and
rorl
push
jge
pop
adc
pushf
loopne
inc
jnp
adc
mov
jae
add
or
ficoms
andl
stos
sbb
adc
cmp
add
mov
jp
aad
lock
insl
cmp
sahf
cmpb
inc
sub
xor
push
inc
dec
icebp
mov
cld
scas
jg
cmp
and
jo
inc
pop
or
lods
fisubl
push
mov
ficompl
jbe
ret
xor
mov
dec
adc
jmp
sub
jl
out
and
adc
add
fwait
dec
pop
inc
mov
sbb
cmpsl
popa
outsl
or
std
decl
push
and
sbb
mov
add
lahf
inc
es
jne
or
es
hlt
out
cld
fisubrs
jmp
or
jmp
mov
dec
ljmp
arpl
addr16
test
cmpb
lcall
inc
add
inc
loope
xchg
aam
pop
dec
frstor
push
pop
lcall
aas
mov
jb
or
pop
mov
and
mov
movsb
aad
add
andl
arpl
loopne
lock
loope
pushf
xchg
xor
iret
testl
stos
mov
iret
pop
addr16
or
das
pxor
xor
in
cwtl
inc
jb
es
xchg
das
and
pop
xor
or
mov
adc
sahf
xor
sbb
bound
sbb
push
push
push
jns
leave
fdivrl
fiadds
dec
pop
mov
adc
ljmp
xchg
mov
and
rep
inc
adcb
pop
ret
push
daa
pop
push
stos
fwait
je
repz
shrl
jbe
cltd
push
or
out
add
loop
dec
and
pop
push
adc
int3
mov
repnz
leave
adc
sbb
push
stc
or
out
dec
push
imul
idivb
repz
inc
icebp
add
and
std
popf
sub
mov
dec
pop
jae
jecxz
mov
push
cmpsb
popf
stc
jo
jno
es
cmp
sub
mov
inc
fs
out
scas
stos
daa
outsl
cmp
inc
or
lods
push
pop
dec
cli
leave
inc
mov
adc
dec
es
jle
stos
inc
xor
or
daa
aas
out
or
and
movsb
lret
test
xchg
pop
aaa
inc
and
ja
sub
ljmp
push
jl
movsl
add
adc
je
mov
push
ja
jl
mov
call
xchg
js
sbb
xor
pop
mov
icebp
push
test
jmp
mov
scas
popl
clc
mov
pop
adc
pop
fistpll
sub
fwait
pushf
ret
or
cmc
jno
sbb
add
adc
fdivp
dec
sbb
hlt
popf
clc
fidivrl
adc
hlt
push
xor
cmp
add
xchg
push
mov
add
pushf
dec
sbb
and
adc
cmc
rcrb
stos
dec
sub
push
jns
dec
into
add
js
cltd
inc
in
popa
inc
dec
cmp
shlb
es
inc
enter
hlt
dec
mov
andb
jmp
sbb
sub
or
data16
pop
mov
mov
aad
cmc
mov
jno
dec
ficoml
repnz
lods
cmpsb
inc
mov
in
out
dec
es
es
adc
pushf
ret
js
cltd
ret
js
cltd
ret
js
cltd
ret
js
cltd
ret
js
cltd
ret
js
cltd
ret
js
cltd
ret
js
cltd
ret
js
cltd
ret
js
cltd
ret
sub
mov
inc
int3
jecxz
or
arpl
inc
cmp
loopne
xor
les
mov
mov
add
outsl
and
movb
stc
aam
outsb
push
lods
mov
in
mov
imul
jle
and
jo
mov
xor
pusha
sbb
fmul
cmp
ret
int
out
pop
lock
mov
ret
push
add
pminsw
cmc
mull
mov
pop
xchg
shlb
mov
cmpb
mov
jge
jb
push
mov
dec
sbb
es
ror
insb
outsl
cwtl
cmpb
ss
and
sbb
hlt
testb
lods
mov
clc
inc
mov
xor
inc
lods
jp
inc
ja
andb
rclb
pop
inc
xor
jo
sbb
fdiv
mov
sub
xchg
rol
push
lods
loopne
inc
rcrl
loope
inc
call
scas
xor
js
cltd
jne
pop
test
movsl
push
mov
mov
testl
jb
lret
jecxz
fcomi
cmpsb
aam
test
and
dec
js
pop
push
stos
sbb
addr16
ja
rcll
and
in
psadbw
popf
imul
shrl
inc
or
cmc
jge
xchg
or
lds
dec
ljmp
loope
cmpsb
in
inc
adc
cmp
and
cltd
ret
shll
jmp
sub
pop
loope
sub
andps
inc
es
adcb
pop
bound
ds
xor
mov
out
or
cld
in
push
pop
iret
testb
jmp
stc
jecxz
sub
in
sub
or
iret
ljmp
fistpll
jae
inc
or
push
lahf
lock
mov
jne
dec
fisubrl
mov
enter
fwait
aaa
mov
shll
sub
lods
arpl
push
push
sbb
sub
mov
insb
test
into
and
rorl
fidivrs
add
fiaddl
inc
ret
pop
call
pop
sub
sbb
or
cs
mov
ds
mov
iret
lret
sbb
jns
cmpsl
popf
mov
hlt
sbb
sti
sbb
mov
xor
jae
push
pop
aam
xchg
cmpsb
outsl
pop
mov
lods
test
fiadds
mov
stos
xchg
loopne
fcmovu
aam
mov
dec
jmp
lret
cli
in
xchg
dec
or
dec
sbb
jo
add
imul
repnz
pop
xchg
sti
push
xor
in
ror
cmpsl
lret
bound
push
jne
xchg
cmp
add
imul
xchg
pop
inc
out
and
icebp
mov
jo
ss
mov
jne
mov
out
cmp
cmp
into
outsl
test
ja
rorb
sub
cld
cmc
int
clc
test
repz
enter
repnz
jl
add
or
mov
xchg
adc
mov
inc
xchg
sbb
popa
in
xchg
sbb
or
popa
push
add
movsb
adc
cmp
aas
loopne
dec
add
ret
cmpsl
loope
test
outsl
sub
sub
pop
lret
add
pop
push
aaa
inc
lock
xchg
xchg
pop
aad
push
movaps
inc
mov
mov
adc
sub
rcrl
test
adc
mov
in
aad
push
sub
ret
pop
sub
fs
push
xchg
mov
inc
mov
mov
xchg
mov
repnz
sbb
pop
lds
pop
dec
xor
mov
inc
mov
dec
push
jo
lret
shlb
push
xchg
inc
inc
jp
jmp
std
inc
xor
pminub
or
ja
or
aaa
sbb
push
iret
add
sub
push
mov
lcall
jl
jg
into
push
dec
add
inc
js
or
or
bswap
dec
cli
or
cmp
stos
ret
clc
dec
cli
or
jecxz
or
jge
stos
insl
jbe
stos
xor
dec
or
decb
ja
jge
stos
insl
jbe
stos
jns
adc
or
cli
or
jg
stos
imul
cmp
clc
ljmp
stos
cmp
or
jns
dec
pop
aad
xchg
out
xchg
xchg
dec
mov
pop
jg
or
xchg
mov
inc
hlt
mov
popa
sahf
enter
inc
in
inc
jb
sub
popf
mov
pop
inc
ret
ret
lock
push
lret
in
in
mov
add
pop
mov
mov
add
stc
jns
ja
or
prefetch
or
or
ja
aad
mov
loopne
mov
jae
ja
cli
adcb
subl
jae
cltd
dec
inc
sbb
push
pop
mov
leave
jb
xchg
push
jae
or
lds
subl
pop
mov
rorl
mov
and
cmp
aad
dec
pop
clc
ja
sub
add
dec
jmp
or
mov
mov
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
cli
or
pop
mov
ja
cli
scas
popl
pop
fs
jb
cmp
idivl
pushf
jae
stos
and
add
loopne
or
and
es
rcll
lret
push
or
push
ret
inc
aam
insl
stos
or
xor
mov
or
sbb
outsb
repz
or
add
adc
fdivrl
push
loopne
or
je
cmp
in
mov
inc
ss
jp
dec
ja
cli
outsb
dec
lock
outsl
popf
inc
pop
decl
inc
fisubrl
clc
xchg
je
sub
inc
or
add
push
push
sbb
xchg
pop
mov
andb
mov
push
pop
lcall
subb
jl
sub
push
and
aas
outsl
lret
ja
mov
dec
inc
lea
push
mov
xor
ret
add
sarb
ljmp
ja
mov
imul
test
xchg
pop
sti
rcrb
xchg
jns
sahf
ja
mov
or
cmc
xchg
mov
imulb
nop
jb
out
mov
ret
lea
aaa
mov
lock
loopne
or
mov
inc
xacquire
push
cmpsl
jg
pop
xchg
jge
std
cli
or
dec
lret
add
dec
jmp
xlat
xchg
movsl
inc
into
outsb
dec
imul
mov
add
loop
push
aas
divb
ja
cli
mov
inc
stc
sbb
ja
js
ja
movsb
mov
inc
dec
mov
lret
mov
pushf
mov
or
loope
add
repz
add
repz
xchg
xchg
add
mov
inc
outsl
cmp
push
scas
repz
test
arpl
cmpsb
imul
fistl
loope
and
loope
add
ffreep
pop
pop
cmp
pop
xor
adc
rep
or
repz
adc
cmp
repz
jbe
mov
pop
popa
or
adc
adc
lcall
pop
xor
or
mov
into
loope
pusha
add
aaa
add
vmovapd
push
mov
xchg
into
out
mov
ljmp
mov
repz
mov
vmovapd
push
repz
pop
shrl
fdivr
mov
push
cltd
sub
enter
xlat
in
ja
in
or
loope
cmpsl
enter
dec
inc
test
jle
pop
xor
or
cltd
sub
enter
xlat
in
ja
in
or
loope
stos
enter
push
jl
pop
ret
jmp
or
loope
xor
loope
mov
inc
adc
fmul
jg
xchg
xlat
loopne
aam
out
and
loope
add
in
xchg
push
add
idivb
lret
lods
pop
jp
cwtl
push
add
dec
pop
cmp
out
dec
mov
adc
notl
push
stos
out
xchg
push
add
bnd
xor
cmp
or
sbb
roll
stos
push
add
add
xchg
inc
stos
push
add
testl
or
xchg
lock
xor
nop
sahf
xchg
ds
dec
lahf
aas
aam
mov
mov
les
cmp
add
in
add
sbb
call
push
add
data16
loope
push
mov
iret
insb
jbe
cmc
push
les
cmpb
sub
dec
shl
pop
xor
pop
lea
add
ja
enter
xlat
in
ja
in
or
loope
stos
enter
add
xchg
mov
xchg
into
pop
or
loope
cmp
jg
push
cwtl
adc
gs
add
in
add
adc
xchg
imul
js
test
mov
rcll
add
mov
add
mov
stos
sbb
push
loopne
xor
in
add
adc
xchg
imul
js
imull
add
mov
adc
push
shr
adcb
sub
repz
into
and
xchg
mov
ja
push
add
and
mov
xchg
push
in
subb
and
loope
add
dec
fstpl
jb
pop
ss
loope
add
pusha
xor
scas
or
repz
adc
cmp
repz
ja
mov
pop
loopne
jl
push
mov
mov
jle
push
movsl
push
stos
add
out
push
add
dec
cmp
mov
sub
xchg
into
pusha
les
lds
mov
jmp
cmp
loope
mov
dec
dec
xor
mov
and
iret
out
cli
push
add
sbb
ja
enter
xlat
in
ja
in
or
loope
movsb
enter
inc
push
mov
rep
or
repz
adc
cmp
repz
js
mov
mov
sbb
sbb
xlat
loopne
aam
lcall
lock
cmc
mov
into
cmp
add
enter
xlat
in
ja
in
or
loope
jp
jo
aaa
scas
jo
cli
dec
dec
pop
dec
xlat
loopne
fucomp
push
lods
cmp
loope
jp
subb
repz
out
xor
orb
inc
xlat
lea
out
pushf
lds
insb
dec
xchg
push
add
repz
movsl
outsb
jmp
mov
mov
jne
sub
repz
or
repz
adc
cmp
repz
ja
mov
inc
cmp
repz
xor
insb
dec
xlat
loopne
cmc
dec
jl
inc
xlat
loopne
out
mov
xchg
into
add
in
add
adc
fists
notl
mov
cmpsl
aaa
orl
call
repz
call
orb
push
cmpsl
jmp
push
add
adc
xchg
imul
js
imull
add
imul
sub
or
add
jg
xchg
xlat
loopne
mov
ret
jmp
or
loope
test
xchg
push
add
mov
js
adc
outsl
mov
mov
or
mov
sbb
std
ss
add
in
add
adc
xchg
imul
js
notl
mov
lock
pop
cmp
ret
jno
into
add
in
add
adc
fists
imull
add
cmp
pop
outsl
mov
mov
jne
sub
dec
or
into
pusha
mov
and
sub
into
push
sub
mov
into
stos
mov
add
loope
mov
xlat
in
ja
in
or
loope
test
into
inc
jno
xor
ss
enter
and
loope
add
sbb
inc
cmpsb
bswap
fcmovnu
movsl
leave
hlt
jmp
out
xchg
push
add
dec
cltd
pop
arpl
push
mov
test
add
jnp
stos
mov
or
loope
mov
repz
aam
and
or
push
stos
dec
and
xchg
loope
add
xor
cmc
frstor
daa
lcall
mov
fwait
xlat
loopne
or
cltd
sub
enter
xlat
in
ja
in
or
loope
jp
outsl
xchg
movsb
and
test
inc
jl
mov
jle
pop
xor
pop
lea
add
sub
enter
xlat
in
ja
in
or
loope
mov
mov
adc
xlat
mov
orb
push
jp
in
add
push
pusha
outsl
xchg
imul
js
imull
add
jae
xchg
scas
daa
mov
loope
add
xlat
loopne
cmc
mov
into
mov
add
sub
enter
xlat
in
ja
in
or
loope
mov
cmp
imul
loope
inc
xchg
lods
icebp
ja
cmc
scas
sub
or
add
add
push
jns
movsl
lock
mov
xchg
cmp
scas
mov
inc
jp
subb
repz
jl
cld
dec
clc
daa
mov
loope
add
add
xor
pop
call
pop
mov
adc
xchg
loope
add
add
scas
mov
sbb
mov
add
mov
jge
insb
push
xchg
lds
jne
scas
daa
mov
loope
add
push
sarb
mov
in
loope
xlat
loopne
cs
fwait
push
add
mov
mov
adc
mov
pushf
inc
mov
jl
mov
add
ja
enter
xlat
in
ja
in
or
loope
jp
or
aam
pusha
mov
ficomps
cmc
sub
call
mov
xlat
loopne
shl
rorl
sbb
cmp
repz
inc
add
mov
xor
repz
inc
jp
add
fmuls
add
divb
cmpsl
jbe
pop
std
in
push
pop
mov
in
lds
shl
scas
or
repz
adc
cmp
repz
ja
mov
mov
mov
loope
add
xlat
loopne
mov
jp
xor
test
mul
push
add
dec
xor
pop
ss
push
add
aaa
mov
aam
sub
mov
pop
lea
add
ja
enter
xlat
in
ja
in
or
loope
stos
enter
xchg
popa
rolb
dec
jl
dec
xlat
loopne
mov
lret
pop
xor
dec
je
xlat
loopne
mov
fcompl
dec
sbb
cmp
push
add
repz
pop
push
sahf
pop
push
dec
ja
daa
jle
fdivrl
dec
pop
cmp
pop
bound
xor
in
add
adc
xchg
imul
js
imull
repz
push
les
mov
dec
dec
fwait
xlat
loopne
or
cltd
sub
enter
xlat
in
ja
in
or
loope
movsb
enter
in
mov
inc
mov
je
xchg
into
adc
divb
sub
dec
js
xchg
into
out
cmp
pop
jp
into
add
push
mov
pusha
mov
or
sub
mov
xchg
mov
xor
xchg
into
out
shl
scas
or
repz
adc
cmp
repz
ja
mov
push
xlat
inc
mov
xor
fs
loope
add
dec
fstpl
jb
pop
ss
push
add
jne
inc
sbb
push
nop
xor
insb
push
add
jle
scas
aas
adc
adc
xchg
push
mov
and
cmp
repz
sbb
cmp
repz
inc
add
shl
xchg
push
ja
adc
int
daa
mov
in
add
repz
mov
fcompl
add
push
cmpsl
jmp
push
add
adc
xchg
imul
js
imull
add
outsb
andb
movsb
jns
xlat
loopne
ss
icebp
outsl
popa
push
jp
add
add
rorl
int
xorb
repz
and
loope
add
pusha
push
mov
repz
adc
hlt
mov
fsubrs
sbb
and
lds
movsl
out
push
add
mov
mov
mulb
punpckhdq
sarb
push
push
add
inc
loope
imul
push
jbe
sub
and
and
dec
and
nop
pusha
repz
and
loope
add
fistpll
mov
xor
push
repz
fs
clc
mov
mov
jl
or
loope
mov
loope
add
repz
xor
neg
scas
hlt
dec
dec
fwait
xlat
loopne
or
cltd
sub
enter
xlat
in
ja
in
or
loope
cmpsl
enter
mov
dec
xchg
into
xchg
sbb
inc
jl
mov
add
sub
enter
xlat
in
ja
in
or
loope
mov
xorb
stos
jmp
push
add
sbb
call
push
add
aam
test
movsb
stc
sbb
cmp
adc
mul
push
add
dec
insl
push
ss
pop
ss
push
add
cmp
sbb
xchg
push
add
aaa
cwtl
in
rorl
fs
js
scas
mov
pusha
mov
daa
lds
jne
in
test
xlat
loopne
out
mov
mov
push
in
sub
jmp
push
add
adc
xchg
imul
js
notl
test
stos
mov
mov
dec
xchg
into
cmp
add
enter
xlat
in
ja
in
or
loope
mov
mov
adc
jbe
in
dec
ret
sub
cmp
into
or
mov
lds
stos
dec
inc
sub
xlat
loopne
inc
fwait
cmc
lods
xor
lds
adcb
xchg
into
cltd
and
sti
sub
adc
add
mov
icebp
mov
mov
into
mov
add
ja
enter
xlat
in
ja
in
or
loope
jp
adc
inc
jmp
sub
sub
mov
mov
xchg
into
adc
pop
mul
push
add
les
or
loope
test
test
push
add
mov
mov
fisubl
sbb
fs
andb
repz
dec
sarb
or
dec
push
scas
sbb
xor
daa
lcall
push
pop
adc
ds
clc
fs
clc
mov
mov
and
popa
jp
xchg
inc
mov
add
mov
mov
loope
add
inc
loope
cmpsb
adc
mov
or
push
add
cmc
or
xor
loope
loop
inc
add
pop
test
push
push
stc
mov
xor
in
outsl
dec
out
pushf
lds
mov
repz
into
pusha
sbb
call
mov
and
jge
mov
mov
jp
into
xchg
sbb
scas
push
xchg
into
pusha
mov
vmovapd
repz
or
repz
gs
mov
jg
cmp
repz
je
mov
and
xlat
loopne
aam
mov
xor
repz
or
adc
in
add
adc
loope
add
mov
mov
les
gs
into
add
in
add
sbb
call
push
add
mov
cld
mov
into
xorb
insb
dec
xor
push
lret
sub
mov
push
cltd
sub
enter
xlat
in
ja
in
or
loope
cmpsl
enter
adc
cmpsb
incb
scas
and
lds
mov
call
and
adc
fs
lret
loope
add
scas
pop
jl
insl
loope
and
loope
add
dec
fstpl
jb
pop
ss
push
add
and
loop
insl
sub
aaa
fnstcw
adc
repz
mov
xlat
loopne
xchg
outsb
dec
xor
aaa
enter
les
adc
pop
int
push
add
shlb
jp
roll
push
loope
add
inc
fimuls
pushl
sbbb
test
stos
or
loope
jne
xchg
inc
mov
dec
int
shl
fisttpl
sbb
lds
mov
lds
sahf
repz
jnp
mov
call
add
adc
jnp
jle
add
jae
push
add
and
mov
aam
push
push
out
xchg
dec
xor
cmc
pop
xor
xchg
mul
push
add
dec
or
pop
ss
push
add
ljmp
inc
xlat
loopne
mov
fcompl
add
inc
incl
int
xor
cltd
cmp
dec
jae
test
stos
daa
mov
sar
test
clc
mov
lcall
inc
ja
cmp
mov
adc
loope
add
lds
and
sub
fcomps
stc
push
add
repz
cmpsl
adc
js
notl
push
insb
dec
sti
push
add
repz
repz
jns
popf
adc
out
fimull
pop
add
push
add
repz
or
mov
inc
lret
fs
inc
xor
repz
repz
add
jbe
and
daa
jno
sarl
lds
shl
fisttpl
sbb
lds
mov
lds
insl
repz
jnp
mov
mov
into
add
in
add
adc
xchg
imul
js
notl
test
and
daa
out
repz
add
xorb
test
in
add
adc
xchg
imul
js
imull
add
cmp
pop
outsl
mov
pop
and
sub
into
mov
sub
adc
jg
out
js
rclb
sti
sub
cli
outsl
jg
out
lahf
inc
shl
test
cwtl
test
sub
add
cwtl
sbb
pop
jg
outsl
jmp
lds
adc
push
subb
sub
push
jo
sub
inc
jae
out
pop
pop
cmpb
add
pop
mov
pop
inc
pop
mov
jecxz
call
sbb
sub
sub
pop
pop
mov
pop
add
pop
subl
test
sub
xchg
jge
repnz
ret
pop
jg
out
js
rclb
sub
cli
insb
jg
out
sahf
inc
shrb
bound
and
sub
cmp
sub
js
jns
push
sub
inc
inc
jae
out
pop
pop
mov
pop
add
pop
pop
sub
pop
xor
in
sti
arpl
jns
inc
sbb
pop
jg
out
inc
je
out
pop
jl
fldenv
sub
mov
pop
out
mov
jo
pop
jg
cs
jmp
mov
stos
bnd
mov
out
dec
mov
repnz
pop
jg
or
pop
insl
repz
or
pop
cwtl
adc
pop
jg
lret
pop
add
sub
bound
out
inc
inc
arpl
scas
hlt
aas
stc
dec
sbb
jg
stos
dec
jg
mov
cmp
pop
jg
dec
mov
cmp
inc
sbb
mov
orb
mov
repnz
pop
jg
cmp
test
jmp
xchg
test
xorl
adc
jb
scas
xchg
adc
pop
jg
dec
sbb
xchg
jb
jae
cmp
dec
out
pop
jg
inc
sbb
into
add
aad
pop
and
xor
in
shlb
js
out
scas
xchg
adc
pop
jg
push
sbb
xchg
push
jae
cmp
inc
out
pop
jg
dec
sbb
lock
jg
out
jecxz
mov
jl
sub
pop
jg
out
js
rclb
sub
cli
jae
sub
popf
inc
shlb
jp
ds
in
and
sbb
icebp
cld
pop
jg
cmp
sub
jmp
push
pop
cmpb
adc
bound
sub
jae
out
pop
pop
xchg
pop
add
pop
test
pop
inc
jg
int
jae
dec
mov
movsl
jge
adc
jle
pop
jg
out
js
rclb
sub
cli
jb
sub
sahf
inc
rclb
inc
add
push
hlt
icebp
lcall
sub
pop
sub
push
push
inc
jb
xchg
arpl
sub
inc
out
ljmp
ss
test
sbb
out
pop
dec
adc
clc
ret
ror
bound
sbb
int3
pusha
push
ret
jg
pop
jg
out
js
rorb
inc
sub
cli
je
sub
lcall
das
rclb
jl
in
and
sub
ret
pop
jg
out
js
rorb
inc
sub
cli
jae
sub
lcall
into
mov
insb
sbb
bound
mov
pop
push
icebp
out
pop
jg
lss
or
or
stos
mov
imul
xor
loop
loop
jge
jb
stos
xchg
adc
pop
jg
push
sbb
xchg
push
jge
test
out
pop
jg
dec
sbb
sub
bound
and
inc
inc
jns
out
pop
int
fildl
inc
pushl
cli
jl
mov
lret
add
jg
bound
out
adc
mov
and
jg
adc
out
les
sbb
mov
pop
inc
icebp
out
pop
jg
mov
jns
push
or
or
sub
mov
fs
jge
or
out
jae
sub
sbb
pop
jg
out
jecxz
and
jl
sub
faddl
sbb
pop
jg
sbbl
lods
mov
es
push
popa
mov
hlt
inc
and
loope
cmp
fistps
bound
sub
inc
jae
out
pop
pop
cmpl
pop
pop
sub
pop
aas
pop
mov
inc
jge
pusha
adc
out
aad
icebp
fwait
mov
aam
dec
inc
sub
ret
jg
pop
jg
out
js
rclb
sti
sub
cli
je
sub
lahf
inc
rcr
movsb
cld
test
cmp
js
pop
add
jb
test
adc
pop
jg
inc
sbb
xchg
cmp
test
out
pop
jg
ds
jnp
je
aam
in
jp
jge
xchg
pop
or
add
js
jge
loop
stc
mov
cwtl
sbb
pop
jg
and
sarb
or
leave
out
loop
js
cli
jl
mov
push
aad
sbb
repnz
sub
outsb
jb
cltd
xchg
into
ds
cltd
stos
adc
stc
pop
dec
test
jg
out
addr16
dec
mov
orl
mov
pop
jg
out
js
rolb
dec
sub
cli
outsb
jg
out
cltd
push
rcrb
fisubl
mov
jl
jb
stos
xchg
adc
pop
jg
dec
sbb
xchg
dec
jge
test
out
pop
jg
inc
sbb
int3
cmp
hlt
or
jb
scas
xchg
adc
pop
jg
push
sbb
xchg
push
jae
cmp
inc
out
pop
jg
dec
sbb
inc
pop
add
mov
in
sbb
sarl
jo
stc
addr16
out
addr16
out
pop
jg
jno
and
pop
fisubrl
or
jb
lods
xchg
adc
pop
jg
push
sbb
xchg
bound
test
out
pop
jg
dec
sbb
inc
sub
sbb
jae
out
popa
push
adc
bound
out
repz
cmp
mov
ss
pop
clc
mov
pop
dec
icebp
out
pop
jg
cmpxchg
or
adc
sub
test
cmp
mov
fdivr
pop
jge
xchg
jge
fs
mov
pop
or
lds
adc
call
pop
fwait
inc
arpl
out
pop
jg
clc
sbb
mov
jg
cmp
jg
pop
jg
out
mov
rorb
pop
jg
jbe
push
sbb
push
cmp
sub
or
push
or
pop
pop
dec
icebp
out
pop
jg
cmpxchg
or
or
sub
test
cmp
or
and
xlat
sbb
pop
mov
mov
into
ljmp
repz
mov
xchg
fistps
bound
cltd
and
sbb
repz
dec
aam
leave
in
xchg
adc
sbb
addr16
pop
jg
mov
jno
stc
inc
pop
sub
pop
cwtl
sbb
pop
jg
fisttpll
jmp
dec
rcr
cli
mov
add
mov
jg
out
nop
sub
fisubs
dec
icebp
out
pop
jg
cmpxchg
or
or
sub
test
or
mov
fidivrl
out
pop
inc
mov
mov
sub
push
adc
int3
mov
mov
sub
ficomps
dec
adc
hlt
sub
cmpl
jg
pop
test
jg
jbe
pushf
dec
sbb
das
or
adc
sub
cmp
pop
mov
dec
mov
jae
out
pop
pop
mov
pop
add
pop
xchg
pop
xor
shl
addr16
sbb
pop
jg
jnp
jg
out
inc
jbe
out
pop
jmp
sub
rorb
sbb
sub
inc
jae
out
pop
pop
cmpb
add
pop
pop
sub
pop
inc
pop
mov
pop
inc
add
pop
jg
out
pop
sbb
dec
inc
jae
out
pop
pop
xchg
pop
add
pop
subl
xor
mov
test
jg
dec
sbb
xchg
inc
jge
test
out
pop
jg
inc
sbb
mov
outsl
loop
lcall
mov
stc
ret
pop
jg
out
js
rclb
sub
cli
jae
sub
popf
inc
shlb
or
mov
adcl
sbb
bound
fldcw
sub
or
xchg
out
push
fdivrs
cmc
sbb
rolb
clc
or
pop
pop
sbb
inc
inc
jae
out
pop
pop
mov
pop
add
pop
pop
sub
pop
xor
sbb
rorb
jns
out
pop
mov
adc
inc
xor
xchg
inc
xchg
sub
pop
int
leave
dec
cmp
dec
jle
or
insl
push
push
in
adc
int
stc
ret
pop
jg
out
js
rorb
inc
sub
cli
outsl
jg
out
lcall
pop
in
nop
scas
pop
mov
cltd
ds
mov
dec
mov
ja
out
pop
jmp
fsubs
sub
pop
lahf
dec
inc
aad
cmp
iret
and
ds
mov
dec
mov
mov
jg
pop
jg
out
js
rolb
xor
cli
outsb
jg
out
cwtl
dec
rclb
sbb
jb
lods
xchg
adc
pop
jg
push
sbb
xchg
bound
test
out
pop
jg
dec
sbb
ret
sbb
dec
inc
jae
out
pop
pop
mov
pop
add
pop
subl
test
pop
jg
pop
in
sub
into
sub
jg
pop
jg
out
js
rclb
sub
cli
jo
sub
popf
inc
sarb
mov
xchg
add
xor
ret
pop
jg
out
js
rolb
sbb
cli
outsb
jg
out
fwait
inc
rorb
inc
sub
mov
mov
jge
sub
xorb
notl
out
pop
jg
lods
mov
mov
out
pop
xchg
sub
pop
jg
jno
xchg
sbb
adc
push
aad
sbb
adc
pop
mov
add
jle
add
sub
pop
push
pop
xchg
mov
cs
adc
bound
stos
fistpl
sub
loope
out
jge
pop
enter
in
pop
jg
out
lods
xchg
adc
pop
jg
push
sbb
xchg
bound
test
out
pop
jg
dec
sbb
mov
int3
std
outsl
push
pushf
fcomps
bound
jnp
jg
out
ret
pop
jg
out
js
rorb
inc
sub
cli
insb
jg
out
lcall
out
pop
mov
mov
bound
cmc
insl
push
adc
jg
out
ret
pop
jg
out
js
rclb
sub
cli
jo
sub
popf
inc
shlb
cld
pushf
icebp
sahf
loop
sbb
xor
jg
out
jecxz
add
xchg
xchg
data16
stc
inc
sub
pop
xor
aad
popf
mov
sahf
stos
inc
inc
into
mov
clc
mov
outsb
jl
sub
pop
sub
ds
jae
out
pop
pop
cmpb
add
pop
test
pop
inc
pop
mov
bound
stc
mov
dec
icebp
out
pop
jg
cmpxchg
or
or
sub
test
mov
test
sbb
js
mov
mov
pop
pop
dec
icebp
out
pop
jg
cmpxchg
or
adc
sub
test
lret
lea
push
xchg
adc
bound
or
icebp
add
sub
lret
jb
push
stos
push
lods
push
mov
js
out
pop
jmp
xor
repnz
or
pop
jg
out
js
rclb
sti
sub
cli
jae
sub
lahf
inc
shl
outsb
inc
popf
iret
add
test
sub
or
xchg
leave
pop
stos
fsubr
or
jno
fcompl
add
mov
lret
adc
bswap
sbb
push
mov
test
pop
loop
push
jge
xchg
mov
pop
jg
out
js
rclb
sub
cli
outsl
jg
out
sahf
inc
rclb
xchg
cld
pop
jg
lock
cmpsl
ljmp
jae
out
pop
pop
cmpb
add
pop
xchg
pop
inc
pop
mov
into
clc
jle
adc
xchg
pop
xchg
sbb
pop
jg
add
aam
xor
aad
rorb
cmpsb
out
pop
xor
sub
inc
jae
out
pop
pop
cmpb
add
pop
mov
pop
inc
pop
mov
adc
xchg
test
sub
fldcw
sub
pop
xchg
jae
fcoml
xchg
jmp
stos
dec
sub
jo
inc
test
inc
sbb
mov
inc
xchg
adc
sub
jae
out
pop
pop
mov
pop
add
pop
subl
xor
cmpl
pop
sbb
ficomps
push
push
cmp
bound
mov
stc
xor
out
sub
inc
icebp
out
pop
jg
mov
jns
push
or
or
sub
mov
icebp
ja
mov
sbb
jns
pop
push
icebp
out
pop
jg
btr
or
or
sub
stos
mov
push
cmp
add
insb
xchg
and
mov
sub
pop
mov
sbb
pop
jg
mov
push
aad
in
sbb
pop
jg
out
sbb
and
ret
jg
pop
jg
out
js
rolb
xor
cli
insb
jg
out
cwtl
dec
sarb
in
push
pop
jge
sbb
jg
out
loope
loop
jge
aaa
mov
jle
pop
jg
out
js
rclb
sub
cli
jb
sub
sahf
inc
ror
or
in
push
add
xchg
lods
sub
call
std
pop
jg
test
jp
and
xchg
adc
pop
jg
push
sbb
xchg
push
jge
test
out
pop
jg
dec
sbb
loope
mov
push
add
shrl
out
pop
sbb
ds
jae
out
pop
pop
cmpb
add
pop
test
pop
inc
pop
mov
push
sub
mov
pusha
jg
out
cmpl
pop
pop
mov
xor
sub
pop
inc
icebp
out
pop
jg
movzbl
or
adc
sub
scas
mov
mov
hlt
leave
aad
jg
out
imul
cmp
mov
mov
xor
sub
in
idivb
in
sbb
or
jg
pop
jg
out
js
rolb
sbb
cli
jo
sub
fwait
inc
rolb
mov
add
jb
stos
xchg
adc
pop
jg
push
sbb
xchg
push
jge
test
out
pop
jg
dec
sbb
jp
nop
or
in
cmp
stc
inc
js
out
pop
or
and
mov
push
sbb
scas
xchg
adc
pop
jg
push
sbb
xchg
push
jae
cmp
inc
out
pop
jg
dec
sbb
push
xchg
dec
enter
xor
sbb
cwtl
hlt
xchg
arpl
out
pop
mov
dec
loop
mov
jge
test
push
mov
jg
subl
xchg
pop
mov
dec
in
ja
lods
xchg
adc
pop
jg
push
sbb
xchg
bound
test
out
pop
jg
dec
sbb
push
ret
daa
aas
mov
push
sub
pop
jbe
pop
std
lea
aad
in
mov
mov
mov
xchg
sbb
pop
jg
ret
jp
jmp
aaa
jle
outsb
mov
lahf
data16
or
ja
mov
aam
jb
sub
jb
jg
pop
jg
out
js
rolb
dec
sub
cli
outsl
jg
out
cltd
push
rorb
fcmove
adc
jecxz
sbb
dec
add
cltd
mov
mov
fisubrs
out
pop
sbb
dec
inc
jae
out
pop
pop
xchg
pop
add
pop
test
pop
xor
mov
pop
cmc
scas
sbb
outsl
sub
sbb
xchg
stc
push
add
jb
stos
xchg
adc
pop
jg
dec
sbb
xchg
dec
jge
test
out
pop
jg
inc
sbb
jae
popa
int
cmpsb
roll
add
jg
pop
jg
out
js
rolb
sbb
cli
jno
sub
fwait
inc
sarb
pop
clc
mov
push
adc
bound
repnz
sub
repz
ss
jg
sarb
mov
jg
pop
jg
out
js
rclb
sub
cli
insl
jg
out
sahf
inc
rolb
jecxz
sub
pop
adc
mov
mov
jg
popa
jg
out
mov
rolb
or
sbb
inc
sbb
outsl
push
adc
cwtl
inc
out
pop
jg
shll
popa
jo
push
loope
js
push
mov
cwtl
pop
out
pop
jg
inc
hlt
xlat
add
inc
sti
jg
mov
jg
out
repz
pop
jg
dec
jmp
jae
out
pop
pop
mov
pop
add
pop
test
pop
xor
repnz
pop
jg
sarl
aad
rol
jg
test
jbe
stc
ret
out
stos
xchg
adc
pop
jg
push
sbb
xchg
push
jge
test
out
pop
jg
dec
sbb
xor
sbb
xchg
clc
mov
mov
push
xchg
jge
xor
push
repz
out
pop
sbb
das
enter
test
push
xchg
push
ja
stos
xchg
adc
pop
jg
push
sbb
xchg
push
jge
test
out
pop
jg
dec
sbb
mov
out
cwtl
repz
jg
out
stos
xchg
adc
pop
jg
dec
sbb
xchg
dec
jge
test
out
pop
jg
inc
sbb
dec
mov
and
push
addr16
adc
xor
bound
sub
jne
out
pop
or
inc
jl
adc
out
and
sbb
xchg
jge
push
sub
dec
out
mov
cmpb
pop
jg
out
popa
hlt
mov
rorb
hlt
lcall
sub
jle
xor
dec
cmp
xor
cmp
repnz
pop
jg
add
movsl
leave
and
mov
mov
mov
pop
push
adc
bound
out
cltd
out
adc
imul
sub
shlb
xlat
pop
jg
out
mov
neg
das
push
adc
fidivrl
sti
pop
jg
jge
subb
imulb
out
pop
jg
xchg
stos
gs
pop
jg
out
js
rclb
sub
cli
je
sub
popf
inc
sar
jo
mov
in
sbb
pop
jg
out
fldenv
stos
fistpl
sub
ret
pop
jg
out
js
rclb
sub
cli
jno
sub
sahf
inc
rolb
mov
out
addr16
adc
jb
out
pop
mov
loopne
lcall
ret
pop
jg
out
js
rolb
xor
cli
jae
sub
cwtl
dec
rcrb
adc
push
adc
mov
les
pop
mov
pop
pop
inc
icebp
out
pop
jg
lfs
or
or
sub
lods
mov
out
mov
pop
iret
mov
mov
aam
jno
xchg
xor
lods
aad
jg
out
ret
pop
jg
out
js
rclb
sti
sub
cli
insl
jg
out
lahf
inc
rcrb
push
cwtl
jmp
cmpb
pop
jg
cmc
pop
jg
mull
sbb
sbbl
mov
sarl
les
pop
jg
out
addr16
xor
arpl
bound
stos
and
stc
mov
cwtl
out
pop
jg
outsb
jl
sub
pop
stc
movb
lcall
sbb
sbb
jg
out
scas
cwtl
adc
pop
jg
push
aaa
sbb
pop
add
jb
test
jg
dec
sbb
xchg
inc
jge
test
out
pop
jg
inc
sbb
cld
lock
cltd
cltd
fiaddl
repnz
jg
pusha
bound
adc
adc
pop
mov
inc
repnz
jg
sub
xor
cmpsb
adc
cltd
fldenv
out
lret
xorb
pop
loope
aad
jae
out
mov
or
or
xor
lret
aas
inc
jae
out
pop
pop
cmpl
pop
mov
pop
aas
pop
mov
inc
daa
push
decl
enter
xchg
adc
pop
jg
push
sbb
xchg
push
jae
cmp
inc
out
pop
jg
dec
sbb
and
pop
jg
out
mov
mov
jnp
jg
out
addr16
aas
out
pop
jg
add
sub
scas
push
add
sub
sbb
or
sbb
and
in
xchg
icebp
jl
aaa
mov
jle
pop
jg
out
js
rclb
sub
cli
je
sub
sahf
inc
rclb
jne
out
hlt
adc
pop
jg
jge
jg
out
addr16
sub
pop
movsl
sahf
lods
xor
ret
out
pop
xor
inc
icebp
out
pop
jg
mov
jns
push
or
adc
sub
mov
stc
jae
jecxz
je
jbe
repz
aad
sbb
sub
jae
out
pop
pop
mov
pop
add
pop
pop
sub
pop
xor
sub
pushf
lret
fsubs
sub
pop
jg
out
js
rclb
sub
cli
je
sub
popf
inc
rolb
stos
scas
sub
mov
ds
into
outsl
sub
pop
ret
jg
pop
jg
out
js
rclb
sub
cli
insb
jg
out
sahf
inc
shlb
ficompl
in
pop
ret
jg
pop
jg
out
js
rolb
xor
cli
jb
sub
cwtl
dec
shrb
into
mov
jno
repz
mov
jg
js
faddp
loop
pop
push
jge
outsb
scas
push
push
out
pop
jg
pop
pop
push
icebp
out
pop
jg
btr
or
pop
pop
jg
xor
int3
jb
push
xchg
dec
sbb
adc
jg
out
ljmp
je
hlt
jbe
stos
shlb
mov
mov
cwtl
or
out
pop
jg
movzbl
or
adc
sub
scas
mov
add
fsub
dec
pop
fcmovb
push
pop
pop
inc
icebp
out
pop
jg
lfs
or
or
sub
lods
mov
pop
mov
adc
add
inc
icebp
out
pop
jg
mov
jns
push
or
or
sub
mov
test
in
lcall
mull
jg
out
lods
xchg
adc
pop
jg
push
sbb
xchg
bound
test
out
pop
jg
dec
sbb
adc
dec
add
jo
ljmp
imul
mov
outsl
sub
out
push
add
es
lock
xor
sub
pop
push
icebp
out
pop
jg
btr
or
pop
pop
jg
xor
adc
pop
in
jae
xor
nop
xchg
pop
jg
pop
pop
inc
icebp
out
pop
jg
movzbl
or
or
sub
scas
mov
add
pop
cmpsl
mov
out
imul
out
test
adc
pop
jg
inc
sbb
xchg
cmp
test
out
pop
jg
ds
add
push
mov
lcall
sub
mov
sbb
pop
negb
sbb
jg
out
mov
xor
sub
pop
push
icebp
out
pop
jg
btr
or
adc
sub
stos
mov
stc
sbb
jecxz
sbbl
sub
jae
out
pop
pop
mov
pop
add
pop
subl
xor
shlb
sub
aas
inc
jae
out
pop
pop
cmpl
pop
xchg
pop
aas
pop
mov
lods
dec
mov
movsb
xor
cmc
push
idivb
push
aaa
and
out
stos
xchg
adc
pop
jg
dec
sbb
xchg
dec
jge
test
out
pop
jg
inc
sbb
mov
pushf
adc
jg
out
pop
and
fmul
stos
mov
jo
stc
sub
out
addr16
cmp
mov
inc
jae
dec
push
sub
jo
stc
loope
mov
jge
sub
ret
pop
jg
out
js
rclb
sub
cli
insb
jg
out
popf
inc
rolb
repnz
sub
pop
jg
out
js
rclb
sub
cli
jo
sub
sahf
inc
shlb
daa
jge
mov
mov
fidivrs
bound
sub
inc
jae
out
pop
pop
cmpl
pop
xchg
pop
aas
pop
mov
push
jg
add
sub
mov
aad
inc
jnp
cmpsl
fldcw
sub
cmp
pop
lret
adc
xor
in
mov
pop
out
pop
jg
stos
pop
mov
js
jae
ftst
in
add
xchg
push
sub
inc
cmp
pop
inc
inc
mov
sbb
xor
divl
jns
xor
adc
cmc
insb
pop
sbb
lea
push
adc
cmp
out
pop
jg
adc
inc
pop
jno
sar
movb
sub
dec
inc
jae
out
pop
pop
xchg
pop
add
pop
mov
pop
xor
mov
or
clc
pop
jg
xor
jne
fimuls
and
jle
rolb
icebp
out
pop
jg
movzwl
or
or
sub
scas
mov
aaa
in
mov
jge
xchg
xchg
ret
stc
inc
bound
hlt
pop
push
jmp
xor
ljmp
jg
lfs
or
or
jg
xor
outsb
adcl
out
pop
jg
test
adc
clc
cli
pop
jg
out
ret
pop
jg
out
js
rclb
sub
cli
insl
jg
out
popf
inc
rclb
mov
push
adc
push
icebp
out
pop
jg
lss
or
or
stos
mov
mov
mov
cwtl
lods
mov
xor
in
xor
jge
test
jb
js
dec
inc
xchg
sub
pop
push
int
push
std
mov
xchg
inc
pop
or
repnz
pop
jg
lock
in
insl
mov
call
pop
mov
jno
out
pop
push
addb
xchg
mov
sbb
mov
sub
dec
icebp
out
pop
jg
cmpxchg
or
adc
sub
test
out
movsl
js
shl
cld
ret
out
test
adc
pop
jg
inc
sbb
xchg
cmp
test
out
pop
jg
ds
pop
mov
out
adc
cmpb
lods
xchg
adc
pop
jg
push
sbb
xchg
bound
test
out
pop
jg
dec
sbb
lods
or
mov
rol
mov
in
fdivrl
repnz
sub
mov
sbb
cwtl
sbb
pop
jg
sbbb
test
or
dec
jg
stos
mov
dec
mov
cmp
stos
mov
dec
mov
orl
jae
out
pop
pop
xchg
pop
add
pop
mov
pop
inc
jg
xchg
jmp
scas
xchg
adc
pop
jg
dec
sbb
xchg
jb
jae
cmp
inc
out
pop
jg
inc
sbb
xchg
dec
insl
sub
hlt
out
and
sbb
sub
jae
out
pop
pop
xchg
pop
add
pop
test
pop
inc
jg
jle
sbbb
push
out
mov
cmpb
sbb
out
dec
inc
test
pop
push
add
out
ljmp
mov
mov
cmp
adc
ret
jae
cmp
xchg
xlat
repz
clc
mov
push
adc
jns
sub
inc
subb
sbb
in
mov
or
jge
test
stc
sub
out
addr16
xor
pop
jg
out
scas
xchg
adc
pop
jg
dec
sbb
xchg
jb
jae
cmp
dec
out
pop
jg
inc
sbb
adc
popa
lea
xor
mov
xchg
or
stc
jecxz
ret
js
fistpl
sub
inc
nop
sub
pop
push
jle
sti
dec
repz
test
insb
ja
mov
add
sbb
out
pop
movsb
nop
mov
sahf
xor
pop
mov
js
stc
bndstx
popf
out
pop
jg
scas
jne
jns
sahf
xor
pop
jg
out
ret
pop
jg
out
js
rclb
sub
cli
jae
sub
popf
inc
rcrb
fldt
ljmp
sbb
push
test
cwtl
cmp
pop
jg
jns
sahf
xor
pop
jg
out
ret
pop
jg
out
js
rclb
sub
cli
jo
sub
sahf
inc
rcl
loopne
dec
incb
js
xchg
or
stc
mov
in
sub
js
sbb
sub
ret
jg
pop
jg
out
js
rolb
xor
cli
jne
sub
cwtl
dec
shl
movb
adc
ss
xchg
rol
jg
pop
jg
out
js
rclb
sti
sub
cli
outsl
jg
out
lahf
inc
shlb
andb
les
dec
jae
push
pop
and
pop
jg
jbe
sbbl
outsb
push
adc
dec
icebp
out
pop
jg
cmpxchg
or
or
test
adc
or
sub
leave
or
adc
add
xchg
push
pop
mov
push
pop
scas
ds
jg
out
inc
mov
pop
stos
pop
jmp
aad
cmp
pop
inc
mov
ljmp
out
pop
jg
inc
mov
cltd
pop
pop
dec
icebp
out
pop
jg
cmpxchg
or
or
sub
test
notl
out
pop
jg
mov
cltd
in
pop
jg
out
stos
xchg
adc
pop
jg
dec
sbb
xchg
dec
jge
test
out
pop
jg
inc
sbb
or
sbbb
add
sub
push
xor
sbb
cwtl
fimuls
xorb
xchg
adc
pop
jg
push
sbb
xchg
push
jge
test
out
pop
jg
dec
sbb
push
sahf
xchg
jns
pop
push
icebp
out
pop
jg
btr
or
or
sub
stos
mov
inc
lods
test
in
repnz
sub
or
mov
cmp
orb
xor
pop
notl
and
add
sbb
inc
jae
out
pop
pop
cmpb
add
pop
test
pop
inc
pop
mov
pop
jg
pop
pop
inc
icebp
out
pop
jg
mov
jns
push
or
or
sub
mov
cwtl
mov
orl
inc
cwtl
mov
xorb
mov
shlb
cmp
shl
ret
pop
jg
out
js
rclb
sub
cli
jne
sub
popf
inc
sarb
sub
scas
stc
xchg
out
pop
pop
inc
icebp
out
pop
jg
lfs
or
or
jg
xor
xchg
jge
insb
sub
out
scas
xchg
adc
pop
jg
dec
sbb
xchg
jb
jae
cmp
inc
out
pop
jg
inc
sbb
int3
mov
bound
stc
mov
add
lods
cwtl
adc
pop
jg
lock
and
mov
fldcw
sub
cmpsb
clc
mov
adc
test
fldt
pop
ds
cwtl
sbb
pop
jg
cmp
fs
outsl
dec
jl
cmp
or
mov
inc
push
jg
dec
mov
ja
stos
xchg
adc
pop
jg
dec
sbb
xchg
dec
jge
test
out
pop
jg
inc
sbb
xor
pop
in
sbb
test
jg
dec
sbb
xchg
inc
jge
test
out
pop
jg
inc
sbb
out
push
sbb
sbb
mov
pop
pop
inc
icebp
out
pop
jg
movzbl
or
or
sub
scas
mov
pop
stos
clc
ficomps
or
adc
pop
jg
push
sbb
xchg
push
jge
test
out
pop
jg
dec
sbb
push
clc
clc
test
cmp
bound
sub
and
add
cltd
pop
ficoml
ja
test
jg
dec
sbb
xchg
inc
jge
test
out
pop
jg
inc
sbb
clc
pop
ficompl
sbb
ja
sub
ret
pop
jg
out
js
rorb
inc
sub
cli
je
sub
lcall
packssdw
nop
jge
add
mov
xchg
pop
or
mov
jg
out
ret
pop
jg
out
js
rclb
sub
cli
jo
sub
popf
inc
rcr
inc
add
xchg
dec
or
lea
adc
sub
inc
inc
jae
out
pop
pop
mov
pop
add
pop
test
pop
xor
arpl
out
rolb
mov
jge
jae
inc
adc
push
sbb
sub
sar
mov
xchg
mov
loope
cmp
mov
add
sbb
add
mov
xchg
cmp
test
sbb
cmpsl
subb
jg
pop
jg
out
js
rolb
xor
cli
insl
jg
out
cwtl
dec
ror
pop
cwtl
sbb
pop
jg
push
fwait
xchg
dec
xorl
xchg
or
enter
xor
sbb
loop
pop
jg
pop
ficompl
sub
mov
js
jg
out
mov
and
push
jg
jns
jg
out
mov
or
pop
pop
push
icebp
out
pop
jg
lss
or
adc
sub
stos
mov
cmp
sbb
mov
pop
mov
pop
fisubrl
or
out
pop
or
lea
adc
out
cmp
sbb
sti
xor
in
data16
jl
aaa
mov
pop
jg
out
js
rolb
dec
sub
cli
insb
jg
out
cltd
push
rorb
loop
notb
jge
pop
dec
in
ret
js
sub
sub
fildll
out
pop
cwtl
push
out
pop
jg
out
stos
xchg
adc
pop
jg
push
sbb
xchg
push
jge
test
out
pop
jg
dec
sbb
xchg
cmp
inc
fcoms
xor
jecxz
sbb
pop
jg
out
loope
lret
js
add
sub
cmpl
leave
xchg
pop
lods
repz
loopne
cwtl
mov
test
jg
dec
sbb
xchg
inc
jge
test
out
pop
jg
inc
sbb
jns
mov
pop
jg
out
addl
jns
gs
adc
jg
pop
jg
out
js
rclb
sti
sub
cli
je
sub
lahf
inc
shlb
data16
jnp
push
or
ja
or
out
mov
mov
fisubs
out
pop
pop
mov
hlt
cmp
bound
sub
inc
jae
out
pop
pop
cmpb
add
pop
xchg
pop
inc
pop
mov
mov
push
adc
push
aad
sbb
sub
jae
out
pop
pop
xchg
pop
add
pop
pop
sub
pop
xor
mov
or
jae
inc
dec
repz
or
bound
sub
jae
out
pop
pop
xchg
pop
add
pop
test
pop
xor
mov
and
mov
dec
jmp
jae
out
pop
pop
cmpl
pop
subl
aas
pop
mov
or
sbb
pop
jg
out
fsts
sbb
push
adc
mov
fidivs
push
pop
cmp
bound
sub
sub
pop
pop
mov
pop
add
pop
pop
sub
pop
test
jbe
lds
popa
sub
pop
jg
out
js
rorb
inc
sub
cli
jb
sub
lcall
call
es
stos
xchg
adc
pop
jg
dec
sbb
xchg
dec
jge
test
out
pop
jg
inc
sbb
xor
daa
sub
sbb
pop
push
icebp
out
pop
jg
lss
or
or
jg
cs
mov
xchg
sbb
xor
inc
mov
pop
imul
mov
push
jle
jmp
pop
jg
out
js
rolb
dec
sub
cli
jno
sub
cltd
push
rcr
add
cltd
adc
pop
jg
out
scas
xchg
adc
pop
jg
push
sbb
xchg
push
jae
cmp
ds
pop
jg
dec
sbb
mov
in
pop
or
xchg
out
rclb
pop
insb
sub
out
pop
jg
add
sub
cmpb
test
inc
push
mov
fdivrl
sub
mov
stc
in
xor
jge
jb
scas
xchg
adc
pop
jg
push
sbb
xchg
push
jae
cmp
inc
out
pop
jg
dec
sbb
inc
fbld
gs
pop
cmpsl
in
push
mulb
dec
push
jg
push
mov
cmc
pxor
pop
dec
push
jg
push
mov
sub
jbe
andb
sbb
js
movsl
cmp
bound
lret
inc
push
adc
inc
icebp
out
pop
jg
movzbl
or
adc
sub
scas
mov
mov
int3
pop
andl
sbb
dec
inc
jae
out
pop
pop
mov
pop
add
pop
test
pop
xor
push
add
jb
out
pop
mov
loopne
inc
pop
inc
push
jg
push
test
inc
xchg
clc
or
out
pop
jg
stos
mov
jg
out
test
adc
pop
jg
inc
sbb
xchg
cmp
test
out
pop
jg
ds
pushf
dec
loop
repnz
js
pop
pop
mov
loopne
add
mov
jg
push
imul
in
gs
adc
sub
sub
inc
jae
out
pop
pop
cmpl
pop
mov
pop
aas
pop
mov
pushf
fwait
jae
push
sub
xorb
ret
pop
jg
out
js
rclb
sub
cli
outsb
jg
out
sahf
inc
shlb
test
stc
inc
cltd
adc
pop
xchg
sub
pop
jg
jno
popf
clc
sbb
sub
jae
out
pop
pop
xchg
pop
add
pop
subl
inc
jg
ficoms
out
mov
mov
fbld
sub
sub
pop
pop
mov
pop
add
pop
test
pop
test
push
je
stc
loope
push
idivl
xchg
mov
stc
ret
pop
jg
out
js
rclb
sub
cli
jno
sub
popf
inc
sarb
or
repnz
jg
andb
jge
push
adc
mov
jg
jbe
or
sbb
jae
cmp
dec
push
xchg
sub
pop
jg
out
test
jg
dec
sbb
xchg
inc
jge
test
out
pop
jg
inc
sbb
lock
fmuls
inc
subl
call
inc
in
int
xchg
push
mov
xchg
les
or
mov
lea
ret
pop
jg
pop
pop
inc
icebp
out
pop
jg
mov
jns
push
or
push
pop
jg
cmp
mov
sahf
sbb
hlt
dec
js
mov
test
nop
pop
pop
jg
dec
push
test
jno
mov
loopne
pop
jg
jno
sbb
xchg
xor
pop
jg
out
ret
pop
jg
out
js
rolb
dec
sub
cli
je
sub
cltd
push
rcr
xchg
cli
push
jbe
daa
imul
jg
mov
push
sub
out
pop
jg
add
sub
xor
dec
jmp
out
pop
addr16
pop
fs
or
adc
mov
cwtl
push
pop
repnz
sub
notl
lcall
xchg
jns
test
sub
ret
pop
jg
out
js
rolb
xor
cli
jno
sub
cwtl
dec
rclb
stos
idivb
or
sbb
pop
inc
icebp
out
pop
jg
movzbl
or
or
sub
scas
mov
jne
orb
add
out
push
jg
js
loope
sbb
xchg
rcr
mov
cld
lock
xchg
pop
jg
pop
pop
inc
icebp
out
pop
jg
mov
jns
push
or
or
jg
cmp
mov
jmp
mov
add
jb
test
jg
dec
sbb
xchg
inc
jge
test
out
pop
jg
inc
sbb
hlt
cltd
mov
push
adc
mov
mov
arpl
out
sub
push
jb
pop
loop
pop
rorb
out
stos
xchg
adc
pop
jg
push
sbb
xchg
push
jge
test
out
pop
jg
dec
sbb
add
scas
sbb
pop
jg
out
and
icebp
mov
sub
pop
inc
icebp
out
pop
jg
lfs
or
adc
sub
lods
mov
es
in
pop
ret
sahf
pop
sbb
inc
inc
jae
out
pop
pop
xchg
pop
add
pop
pop
sub
pop
inc
jg
push
mov
lds
cwtl
adc
cltd
jno
sub
cmp
repz
ret
jg
pop
jg
out
js
rorb
inc
sub
cli
jo
sub
lcall
pop
push
jg
cld
pop
jg
cmc
mov
mov
pop
inc
icebp
out
pop
jg
movzwl
or
adc
sub
scas
mov
outsl
jle
mov
fmul
int3
imul
pop
fisubrl
sub
pop
sbb
aas
inc
jae
out
pop
pop
cmpl
pop
pop
sub
pop
aas
pop
mov
movsb
call
lods
xchg
add
jb
out
pop
mov
repz
jae
das
je
mov
je
mov
push
and
push
in
pop
xor
sub
jae
out
pop
pop
xchg
pop
add
pop
pop
sub
pop
xor
mov
addb
mov
and
stc
jecxz
sub
jge
mov
push
and
out
pop
jg
lret
or
rcr
loop
mov
inc
fimuls
rclb
icebp
out
pop
jg
lfs
or
pop
pop
jg
xor
or
push
jg
in
xorl
aad
sbb
fsubp
imul
in
sub
repnz
sub
pop
jg
out
js
rclb
sti
sub
cli
outsl
jg
out
lahf
inc
sar
jp
mov
addr16
out
ret
pop
or
pushl
push
adc
jae
cmp
mov
and
add
sub
jnp
out
mov
fsubrl
addr16
push
icebp
out
pop
jg
lss
or
or
stos
mov
cmp
pop
inc
icebp
out
pop
jg
movzbl
or
or
sub
scas
mov
add
xchg
pop
push
repnz
pop
jg
scas
xchg
or
stc
dec
mov
sbbl
addr16
jg
adc
lret
dec
inc
jae
out
pop
pop
xchg
pop
add
pop
test
pop
xor
mov
out
sub
jl
push
icebp
pop
jg
stc
aaa
icebp
pop
decl
enter
xchg
adc
pop
jg
inc
sbb
xchg
cmp
test
out
pop
jg
ds
nop
inc
jnp
popf
scas
jns
loope
sbb
fcomi
pop
push
out
pop
jg
js
in
sbb
rcrb
dec
icebp
out
pop
jg
cmpxchg
or
adc
sub
test
loop
mov
mov
or
sbb
and
ret
jg
pop
jg
out
js
rclb
sub
cli
jo
sub
sahf
inc
shl
or
sub
sub
pop
movsb
mov
cmp
leave
orl
add
dec
push
pop
cmp
mov
sub
sub
pop
pop
mov
pop
add
pop
mov
pop
test
inc
pop
jae
or
push
add
push
sub
pop
sbb
dec
inc
jae
out
pop
pop
mov
pop
add
pop
subl
test
pop
jg
aaa
pop
sbb
ja
pop
cmp
out
pop
jg
mov
jo
test
adc
xor
sub
imul
ss
mov
sub
push
in
stos
fisttpl
sub
mov
sub
jae
out
pop
pop
mov
pop
add
pop
test
pop
xor
stos
jmp
jg
out
pop
movsl
ljmp
jg
adcl
xor
push
adc
inc
icebp
out
pop
jg
movzbl
or
adc
sub
scas
mov
mov
fucomi
hlt
in
rol
pusha
jg
out
aas
lods
imul
sub
jne
out
pop
clc
xchg
in
mov
push
mov
cmp
pop
jg
out
js
rorb
inc
sub
cli
jb
sub
lcall
repnz
adcb
addr16
out
pop
jg
call
pop
mov
pop
pop
xchg
daa
data16
out
jecxz
or
xchg
scas
mov
or
ja
pop
xchg
mov
push
adc
add
dec
inc
jae
out
pop
pop
mov
pop
add
pop
pop
sub
pop
test
jl
and
addb
jl
xchg
lea
gs
out
pop
jg
mov
or
pop
pop
inc
icebp
out
pop
jg
movzbl
or
or
jg
cmp
dec
xchg
xchg
mov
mov
fdivr
pop
jg
jp
jg
out
ret
pop
jg
out
js
rolb
sbb
cli
outsl
jg
out
fwait
inc
rcl
sub
cmp
mov
pop
inc
icebp
out
pop
jg
lfs
or
adc
sub
lods
mov
and
stos
add
sbb
sub
pop
cmp
xchg
pusha
movsl
jge
test
pop
fcompl
inc
pop
fs
sub
push
add
jb
scas
xchg
adc
pop
jg
dec
sbb
xchg
jb
jae
cmp
inc
out
pop
jg
inc
sbb
xor
ss
cwtl
mov
xorb
mov
sub
dec
inc
jae
out
pop
pop
xchg
pop
add
pop
mov
pop
xor
mov
cmp
icebp
out
pop
jg
btr
or
or
jg
xor
dec
jae
pop
jmp
lea
in
sbb
jb
test
adc
pop
jg
inc
sbb
xchg
cmp
test
out
pop
jg
ds
push
mov
sbb
insb
and
pushf
inc
sbb
and
push
arpl
dec
mov
push
ret
jg
pop
jg
out
js
rolb
sbb
cli
jo
sub
fwait
inc
shlb
sub
dec
lea
adc
mov
pop
xor
jecxz
pop
or
push
sub
sbb
rorb
stos
xchg
adc
pop
jg
dec
sbb
xchg
dec
jge
test
out
pop
jg
inc
sbb
fstpl
push
loope
sbb
cmp
aad
mov
xor
lock
mov
sbb
push
cltd
push
in
pop
jg
out
lods
xchg
adc
pop
jg
push
sbb
xchg
bound
test
out
pop
jg
dec
sbb
jae
pop
jbe
jge
insl
sub
aaa
test
cmpsb
push
jge
xchg
mov
push
jmp
push
stos
or
pop
pop
inc
icebp
out
pop
jg
mov
jns
push
or
or
mov
mov
sbb
adc
bound
sub
sub
pop
pop
mov
pop
add
pop
mov
pop
test
mov
mov
je
sbb
stos
mov
mov
pop
ds
mov
stos
mov
dec
mov
cmp
stos
inc
mov
mov
dec
mov
cmpl
xchg
adc
pop
jg
dec
sbb
xchg
dec
jge
test
out
pop
jg
inc
sbb
xor
mov
ja
mov
sbb
addr16
sub
inc
jae
out
pop
pop
cmpl
pop
test
pop
aas
pop
mov
pop
sbb
inc
inc
jae
out
pop
pop
mov
pop
add
pop
pop
sub
pop
xor
sub
lret
xor
xchg
jge
cmpsl
xor
ret
pop
jg
out
js
rclb
sub
cli
je
sub
popf
inc
rclb
in
sbb
mov
mov
shr
cmc
add
sbb
cltd
fimuls
push
out
pop
jg
cmp
pushf
and
negb
sub
iret
jbe
jae
movlps
mov
stos
mov
dec
mov
cmpl
js
out
addr16
pop
jg
stos
stos
xorl
mov
sub
jp
mov
sub
mov
mov
cmpb
pop
jg
mov
lods
shlb
fdivrp
nop
push
adc
sub
sub
sub
pop
pop
mov
pop
add
pop
subl
test
fidivs
bound
sub
jae
out
pop
pop
xchg
pop
add
pop
test
pop
xor
mov
inc
les
cld
pop
jg
out
pop
jg
push
fisubrl
out
scas
xchg
adc
pop
jg
push
sbb
xchg
push
jae
cmp
inc
out
pop
jg
dec
sbb
lret
std
loopne
or
pop
pop
fcmove
push
test
jge
test
stc
sub
out
addr16
hlt
out
pop
jg
lea
fmul
add
js
jp
addr16
out
pop
jg
mov
je
stc
arpl
sub
mov
push
cwtl
jmp
mov
sub
fstl
out
pop
adc
sub
pop
adc
sub
pop
mov
cmp
add
frstor
dec
andps
cmc
xlat
jmp
pop
jg
mov
js
stc
addr16
mov
out
ret
pop
jg
out
js
rolb
xor
cli
outsb
jg
out
cwtl
dec
rorb
and
hlt
and
xlat
jmp
pop
jg
jge
bound
add
js
out
stos
xchg
adc
pop
jg
dec
sbb
xchg
dec
jge
test
out
pop
jg
inc
sbb
movsl
sbb
aad
add
and
cmp
out
xor
bound
xor
push
jg
js
sub
sbb
xchg
rol
jg
pop
jg
out
js
rclb
sub
cli
jno
sub
sahf
inc
rolb
jecxz
movsl
sar
addr16
pop
jg
out
lods
xchg
adc
pop
jg
push
sbb
xchg
bound
test
out
pop
jg
dec
sbb
pop
int3
insb
dec
sbb
outsb
push
adc
test
mov
dec
mov
jg
mov
adcl
jg
out
inc
nop
sub
pop
subb
mov
sub
aam
mov
dec
filds
pop
dec
cmpl
xchg
adc
pop
jg
push
sbb
xchg
push
jge
test
out
pop
jg
dec
sbb
sbb
push
cltd
and
pop
jg
jno
cmp
pop
sbb
dec
inc
jae
out
pop
pop
mov
pop
add
pop
mov
pop
test
adc
js
inc
cmp
bound
pop
loop
jle
jl
lock
ret
jg
pop
jg
out
js
rorb
inc
sub
cli
jne
sub
lcall
sub
je
mov
in
pop
pop
inc
icebp
out
pop
jg
movzwl
or
push
pop
jg
cmp
mov
stos
and
in
cld
jl
loop
pop
jg
mov
mov
push
in
xchg
test
xor
sbb
icebp
out
pop
jg
btr
or
or
stos
mov
jbe
pop
xchg
lods
bnd
stc
push
and
cmp
jmp
out
push
inc
inc
mov
pop
xchg
inc
or
fisubrs
leave
push
add
test
dec
test
jg
add
adc
dec
fsubl
push
je
sub
js
inc
sbb
ficomps
out
or
bound
into
mov
stc
mov
in
divb
sub
mov
pop
ret
jg
pop
jg
out
js
rclb
sub
cli
outsb
jg
out
popf
inc
shlb
cli
ja
stc
inc
sub
pop
fsubs
imul
pop
jb
mov
in
into
gs
arpl
mov
jg
pop
jg
out
test
loop
lods
xor
and
sbb
sub
pop
dec
icebp
out
pop
jg
cmpxchg
or
or
jg
das
test
cmp
and
jmp
aas
inc
jae
out
pop
pop
cmpl
pop
xchg
pop
aas
pop
mov
cmp
movb
xchg
ja
scas
xchg
adc
pop
jg
push
sbb
xchg
push
jae
cmp
inc
out
pop
jg
dec
sbb
dec
leave
jae,pn
xor
rcrb
push
sbb
sub
dec
inc
jae
out
pop
pop
mov
pop
add
pop
pop
sub
pop
test
div
mov
fcompl
and
test
js
add
mov
mov
sub
inc
jae
out
pop
pop
cmpl
pop
test
pop
aas
pop
mov
pop
jg
adc
inc
xchg
icebp
xchg
inc
daa
cld
xchg
pusha
adc
pop
movsl
daa
push
adc
out
pop
sbb
dec
inc
jae
out
pop
pop
mov
pop
add
pop
mov
pop
test
cld
mov
mov
imul
sbb
sub
jge
subb
add
push
jnp
xchg
leave
ret
jg
pop
jg
out
js
rclb
sti
sub
cli
insl
jg
out
lahf
inc
shlb
jo
int
push
adc
aad
mov
movsl
ljmp
jg
out
stos
xchg
adc
pop
jg
push
sbb
xchg
push
jge
test
out
pop
jg
dec
sbb
or
aam
ret
pusha
insb
jbe
lods
pop
sub
or
scas
xchg
adc
pop
jg
push
sbb
xchg
push
jae
cmp
inc
out
pop
jg
dec
sbb
mov
out
pop
jg
dec
ret
jg
pop
jg
out
js
rclb
sti
sub
cli
jno
sub
lahf
inc
shlb
rcrb
cwtl
mov
jo
stc
loope
cmp
jge
mov
sbb
sub
sub
pop
pop
mov
pop
add
pop
xchg
pop
test
int3
mov
out
clc
sub
pop
jg
sub
sub
fbstp
sub
pop
sbb
dec
inc
jae
out
pop
pop
mov
pop
add
pop
xchg
pop
test
loop
jb
jge
icebp
mulps
pop
pop
inc
icebp
out
pop
jg
lfs
or
or
lods
mov
mov
or
pop
in
cwtl
mov
test
jg
dec
sbb
xchg
inc
jge
test
out
pop
jg
inc
sbb
xchg
cmc
and
cmp
jge
popf
rcll
sti
ja
stos
xchg
adc
pop
jg
push
sbb
xchg
push
jge
test
out
pop
jg
dec
sbb
pop
mov
push
setb
jecxz
in
outsl
fs
cmp
iret
adc
pop
mov
pop
pop
inc
icebp
out
pop
jg
lfs
or
adc
sub
lods
mov
pop
adc
jge
dec
jg
popf
mov
pop
pop
inc
icebp
out
pop
jg
mov
jns
push
or
adc
sub
mov
adc
mov
pop
mov
or
sub
jecxz
testb
outsb
sub
jl
pushf
jns
aam
sbb
xchg
mov
pop
and
sbb
sub
inc
jae
out
pop
pop
cmpb
add
pop
test
pop
inc
pop
mov
mov
jg
pop
jg
out
js
rclb
sti
sub
cli
jo
sub
lahf
inc
rol
jmp
push
jg
xchg
outsb
pop
sub
nop
cmp
sub
sub
pop
pop
mov
pop
add
pop
pop
sub
pop
test
scas
daa
jecxz
cltd
std
xchg
jge
insl
sub
out
pop
sbb
fisubrs
cmp
scas
adcb
xchg
test
sub
ficoml
and
pop
inc
icebp
out
pop
jg
lfs
or
or
sub
lods
mov
sbb
in
or
stos
xchg
adc
pop
jg
push
sbb
xchg
push
jge
test
out
pop
jg
dec
sbb
xchg
fldl
inc
inc
sbb
lods
cld
pop
jg
mov
arpl
pop
push
cltd
popa
out
jg
lods
ds
push
jge
jg
dec
pop
cwtl
mov
hlt
scas
jl
idiv
pop
jg
out
mov
stos
and
jb
test
jg
dec
sbb
xchg
inc
jge
test
out
pop
jg
inc
sbb
jmp
pop
add
test
pop
inc
sbb
repnz
sub
and
leave
mov
mov
lea
pop
or
mov
jecxz
add
lds
xor
cltd
pop
pop
inc
icebp
out
pop
jg
lfs
or
or
sub
lods
mov
addr16
in
xchg
ret
stc
ret
out
scas
xchg
adc
pop
jg
dec
sbb
xchg
jb
jae
cmp
inc
out
pop
jg
inc
sbb
cmp
jne
stc
ret
out
scas
xchg
adc
pop
jg
push
sbb
xchg
push
jae
cmp
inc
out
pop
jg
dec
sbb
dec
xor
popf
lret
aaa
scas
cmp
fiadds
pop
bound
sub
jae
out
pop
pop
xchg
pop
add
pop
test
pop
inc
jg
push
js
cmc
das
sbb
jmp
pop
jg
out
js
rclb
sub
cli
jno
sub
popf
inc
rolb
fmuls
inc
mov
jae
sbb
and
sbb
repnz
pop
jg
xor
mov
pop
clc
sbb
adc
jg
lods
cmp
jb
scas
xchg
adc
pop
jg
push
sbb
xchg
push
jae
cmp
inc
out
pop
jg
dec
sbb
inc
jecxz
cwtl
lods
adc
stc
loope
or
jge
sub
mov
cld
jl
xchg
xchg
add
xor
mov
jg
add
jnp
jp
xorb
ret
pop
jg
out
js
rolb
dec
sub
cli
jno
sub
cltd
push
rolb
jmp
push
push
xor
hlt
out
pop
jg
push
fisubrl
out
scas
xchg
adc
pop
jg
push
sbb
xchg
push
jae
cmp
inc
out
pop
jg
dec
sbb
cmpsl
mov
imul
jno
aad
sbb
adc
pop
mov
pop
pop
dec
icebp
out
pop
jg
cmpxchg
or
or
test
clc
xchg
mov
push
adc
or
sbb
mov
bound
add
cmp
sub
pop
cwtl
adc
pop
jg
sub
imul
movb
fidivrs
out
pop
sbb
inc
inc
jae
out
pop
pop
xchg
pop
add
pop
subl
inc
jg
mov
jg
outsl
test
lcall
popa
jg
out
int3
mov
pop
push
mov
push
nop
mov
jle
stc
pop
mov
pop
pop
dec
icebp
out
pop
jg
cmpxchg
or
pop
pop
jg
das
test
adc
jno
ret
lret
jb
push
xchg
push
subb
jg
pop
jg
out
js
rorb
inc
sub
cli
jne
sub
lcall
push
pop
pushf
mov
adc
fwait
adc
subb
sbb
dec
inc
jae
out
pop
pop
mov
pop
add
pop
xchg
pop
xor
or
inc
sub
pop
sbb
inc
inc
jae
out
pop
pop
mov
pop
add
pop
subl
xor
loope
xchg
jno
sub
bound
out
pop
sbb
aas
inc
jae
out
pop
pop
cmpl
pop
mov
pop
aas
pop
mov
aam
es
out
push
sbb
sub
pop
pop
push
icebp
out
pop
jg
lss
or
or
sub
stos
mov
adc
bound
xor
push
jg
js
push
xchg
shrl
sub
pop
jg
in
sbb
sbb
jg
out
ret
pop
jg
out
js
rolb
dec
sub
cli
jno
sub
cltd
push
shlb
cmc
mov
stc
repz
cmp
sbb
sub
jae
out
pop
pop
xchg
pop
add
pop
pop
sub
pop
inc
jg
dec
mov
mov
test
stc
test
xchg
add
sub
inc
mov
pop
cli
nop
pop
jae
cltd
rcrb
clc
or
mov
push
adc
cld
sbb
pop
jg
out
stos
xchg
adc
pop
jg
push
sbb
xchg
push
jge
test
out
pop
jg
dec
sbb
fcoml
inc
jle
pop
push
lods
adc
out
sub
push
icebp
out
pop
jg
btr
or
or
sub
stos
mov
cmpsb
aas
xor
mul
and
pop
inc
mov
pop
andl
mov
out
xor
in
pop
pop
inc
icebp
out
pop
jg
movzwl
or
push
pop
jg
cmp
xor
adc
pop
jg
out
lods
xchg
adc
pop
jg
push
sbb
xchg
bound
test
out
pop
jg
dec
sbb
pop
js
sub
inc
inc
jae
out
pop
pop
mov
pop
add
pop
test
pop
xor
scas
call
sbb
inc
inc
jae
out
pop
pop
mov
pop
add
pop
test
pop
xor
jno
jg
out
mov
inc
icebp
out
pop
jg
movzwl
or
pop
pop
jg
cmp
rcrb
xor
mov
popa
mov
mov
mov
dec
mov
mov
aas
mov
ficomps
pop
inc
icebp
out
pop
jg
movzwl
or
or
sub
scas
mov
mov
adcb
negl
sub
sar
mov
divl
sub
pop
jg
out
js
rclb
sub
cli
insb
jg
out
sahf
inc
rolb
mov
xchg
sbb
mov
out
pop
fsts
subb
dec
inc
jbe
jns
pop
inc
icebp
out
pop
jg
lfs
or
or
sub
lods
mov
icebp
adc
xchg
jp
in
gs
push
jg
out
test
jg
dec
sbb
xchg
inc
jge
test
out
pop
jg
inc
sbb
cmp
enter
xchg
adc
pop
jg
push
sbb
xchg
bound
test
out
pop
jg
dec
sbb
icebp
lea
cmpsb
mov
sbb
adc
pop
jg
test
mov
out
scas
xchg
adc
pop
jg
push
sbb
xchg
push
jae
cmp
inc
out
pop
jg
dec
sbb
xchg
lods
and
stc
sbb
icebp
out
pop
jg
lfs
or
adc
sub
lods
mov
sub
sub
popa
loop
mov
out
sub
dec
inc
jae
out
pop
pop
xchg
pop
add
pop
pop
sub
pop
xor
mov
sbb
mov
gs
dec
inc
jae
out
pop
pop
mov
pop
add
pop
subl
test
loope
sub
pop
sbb
inc
inc
jae
out
pop
pop
mov
pop
add
pop
pop
sub
pop
xor
ret
sub
ja
adc
out
pop
clc
jmp
sbb
adc
pop
jg
push
sbb
xchg
bound
test
out
pop
jg
dec
sbb
and
cmp
cmp
add
into
sub
pop
adc
sub
pop
out
sti
push
dec
jo
inc
data16
ret
jno
test
rorl
pop
jle
xor
push
adc
push
icebp
out
pop
jg
lss
or
pop
pop
jg
cs
mov
adc
mov
ret
jg
pop
jg
out
js
rclb
sub
cli
je
sub
sahf
inc
rolb
sub
loop
adc
jge
xor
xorl
out
pop
jg
dec
sbb
xchg
jb
jae
cmp
inc
out
pop
jg
inc
sbb
and
lea
out
addr16
xor
pop
jg
scas
sub
jg
outsb
dec
test
add
jg
xlat
pop
jg
out
or
mov
or
pop
fcmovb
jg
in
cwtl
mov
adc
jg
out
js
rclb
sti
sub
cli
insl
jg
out
lahf
inc
rolb
adc
and
js
mov
bound
je
mov
sub
jae
out
pop
pop
mov
pop
add
pop
test
pop
xor
jae
push
or
dec
inc
mov
pop
daa
mov
rcrb
xor
sub
pop
jg
sbb
js
sbb
stos
mov
jo
stc
sub
out
addr16
data16
pop
jg
pop
jg
out
jg
jmp
lods
int
lea
sub
jp
jo
stc
ret
pop
jg
out
js
rolb
sbb
cli
outsb
jg
out
fwait
inc
sarb
xor
lahf
out
push
aad
sbb
mov
pop
pop
inc
icebp
out
pop
jg
mov
jns
push
or
push
pop
jg
cmp
mov
adc
psubb
in
and
pushf
pop
pop
inc
icebp
out
pop
jg
movzwl
or
or
scas
mov
sub
pop
jg
movl
mov
xor
mov
stc
adc
pop
jg
call
jge
adc
imulb
out
pop
jg
out
stos
xchg
adc
pop
jg
dec
sbb
xchg
dec
jge
test
out
pop
jg
inc
sbb
mov
les
adc
xchg
inc
test
stc
jecxz
cli
and
jb
stos
xchg
adc
pop
jg
dec
sbb
xchg
dec
jge
test
out
pop
jg
inc
sbb
cwtl
lods
add
stc
popa
add
add
jb
test
jg
dec
sbb
xchg
inc
jge
test
out
pop
jg
inc
sbb
in
cld
cmpsb
aaa
jns
in
ja
scas
xchg
adc
pop
jg
push
sbb
xchg
push
jae
cmp
inc
out
pop
jg
dec
sbb
nop
pop
push
adc
loop
push
out
jl
xchg
lods
xchg
pop
sub
in
jl
icebp
pop
push
jg
jbe
xor
sbb
repnz
sub
in
fisttpll
repnz
adc
lds
sbb
mov
pop
jg
adc
rcll
push
shl
pop
jg
xchg
mov
fs
js
clc
cli
pop
jg
out
ret
pop
jg
out
js
rclb
sub
cli
insb
jg
out
popf
inc
shrb
push
jg
jno
fstl
pop
inc
icebp
out
pop
jg
movzwl
or
or
sub
scas
mov
je
ljmp
mov
sbb
inc
sbb
sub
sub
pop
pop
mov
pop
add
pop
xchg
pop
test
fcmovb
pop
inc
mov
popa
sub
add
jg
dec
test
inc
pop
inc
push
clc
or
jl
jb
mov
mov
jge
jb
ret
pop
jg
out
js
rolb
xor
cli
insl
jg
out
cwtl
dec
sarb
out
dec
add
mov
icebp
out
pop
jg
btr
or
or
sub
stos
mov
mov
subb
push
adc
jbe
push
add
and
mov
stos
mov
dec
mov
mov
jo
inc
push
jg
push
test
inc
xchg
inc
xchg
cli
jl
fisubs
pop
sbb
dec
inc
jae
out
pop
pop
mov
pop
add
pop
xchg
pop
xor
pop
loop
out
jge
mov
pusha
jg
out
movsl
test
sbb
push
leave
push
sbb
ja
mov
add
into
sub
jg
pop
jg
out
js
rolb
xor
cli
jne
sub
cwtl
dec
rcrb
cmp
sbb
adc
bound
or
push
int3
arpl
sub
sub
sub
pop
pop
mov
pop
add
pop
mov
pop
test
jg
sbb
dec
and
cld
pop
jg
jne
xchg
out
pop
jg
cmpsl
mov
pop
daa
cmpsb
and
cmp
mov
lea
std
pop
push
adc
mov
sbb
mov
out
pop
jg
push
fisubrl
add
sub
sti
fs
inc
fucom
jge
sbb
sahf
push
mov
add
cltd
mov
mov
fists
out
pop
sbb
dec
inc
jae
out
pop
pop
xchg
pop
add
pop
mov
pop
xor
mov
mov
cwtl
xchg
jle
sub
pop
jg
out
js
rorb
inc
sub
cli
jae
sub
lcall
mov
data16
out
stos
loope
out
add
std
inc
sub
sti
popl
lock
pop
jg
clc
xor
sub
push
or
sbb
out
arpl
out
rep
out
pop
jg
mov
push
sub
out
pop
sbb
inc
inc
jae
out
pop
pop
xchg
pop
add
pop
pop
sub
pop
inc
jg
cmpsl
lds
cmp
mov
js
inc
cwtl
mov
insl
sub
sub
adc
pop
jg
pop
pop
push
icebp
out
pop
jg
lss
or
push
pop
jg
cs
mov
out
pop
fildll
inc
insb
sub
pop
pop
cwtl
jge
pop
xor
mov
jg
nop
jp
mov
in
je
xchg
add
mov
arpl
out
pop
jg
push
fidivrs
bound
sbb
add
out
push
jg
out
or
pop
pop
inc
icebp
out
pop
jg
mov
jns
push
or
or
sub
mov
dec
in
sbb
sbb
jg
out
loope
push
or
xchg
test
stc
ret
pop
jg
out
js
rclb
sub
cli
jno
sub
popf
inc
rcl
dec
and
fwait
addb
push
fstps
sbb
mov
mov
mov
add
jg
out
pop
mov
dec
mov
jg
out
ret
insb
jl
movsb
daa
jmp
pop
xor
mov
jl
pop
jg
out
scas
xchg
adc
pop
jg
dec
sbb
xchg
jb
jae
cmp
inc
out
pop
jg
inc
sbb
loopne
ds
pop
in
mov
inc
jae
out
pop
pop
mov
pop
add
pop
subl
xor
in
xchg
xlat
popa
jg
out
into
add
out
addb
jge
mov
leave
add
out
inc
dec
fcmove
movsb
sbb
xor
fdivrp
pusha
push
adc
ret
pop
jg
out
js
rclb
sub
cli
insb
jg
out
popf
inc
sarb
loop
mov
jl
xchg
mov
pop
push
icebp
out
pop
jg
btr
or
or
sub
stos
mov
jle
sub
jmp
in
push
and
outsb
out
stc
out
xchg
push
adc
xor
dec
test
inc
pop
inc
push
cwtl
sbb
pop
jg
sub
lret
fsubrs
mov
push
sbb
arpl
js
out
pop
lods
je
cmp
mov
and
adc
in
sbb
scas
xchg
adc
pop
jg
dec
sbb
xchg
jb
jae
cmp
ds
pop
jg
inc
sbb
cltd
outsl
pop
add
test
lock
sub
pop
movsl
mov
jns
xor
sbb
jp
push
insl
pop
sbb
mov
fisttpl
mov
and
std
inc
mov
push
and
ss
pop
stos
xor
shrb
aas
mov
pop
sub
sub
adc
push
mov
adc
movsl
mov
mov
mov
and
cld
testb
sti
mov
cmpb
lds
lret
sti
mov
sub
stos
lods
jno
int
mov
cld
testb
sti
mov
cmpb
lds
int3
sti
mov
bswap
fstps
or
or
movsb
and
sub
fdivr
mov
mov
out
ja
sub
or
jns
cmp
mov
je
jmp
in
test
inc
mov
push
mov
in
fwait
sub
je
and
mov
mov
and
cmc
inc
mov
pop
mov
ret
lds
pusha
insb
pop
pop
mov
cmpl
imul
push
mov
movsl
loopne
add
enter
loopne
pop
aas
inc
repz
in
inc
mov
loopne
push
aas
mov
mov
add
data16
mov
jb
outsb
verr
add
cmp
add
imul
pop
cmp
sub
and
sbb
js
aad
imul
jg
imul
add
and
add
loopne
add
aaa
sub
dec
add
cmp
jl
roll
ror
insl
add
pop
aas
inc
repz
in
inc
mov
loopne
push
aas
addr16
and
and
pop
cmp
cmp
jb
test
orl
sub
mov
add
jge
test
fdivs
loopne
add
bound
hlt
sub
movsl
lods
add
rolb
cmp
jl
push
fs
add
ret
fisubrl
and
popa
scas
and
stc
imul
jne
minps
or
popa
jnp
rdtsc
mov
enter
loopne
pop
aas
cmp
inc
mov
in
add
push
aas
cmp
fdiv
push
movsl
mov
and
mov
out
mov
add
mov
loopne
add
mov
mov
add
or
add
mov
push
jge
add
jmp
push
add
and
mov
outsb
add
loopne
inc
into
mov
jmp
int
daa
cmp
xchg
and
dec
push
fs
add
ret
xlat
imul
and
imulb
jl
mov
ljmp
add
jmp
mov
out
mov
add
mov
loopne
add
xor
enter
push
and
aaa
repz
mov
enter
push
add
and
mov
outsb
add
loopne
inc
into
mov
pop
mov
add
data16
iret
call
call
pushf
ds
add
and
add
loopne
add
ss
mov
dec
ss
popf
and
mov
fwait
mov
xor
lods
in
push
fs
add
ret
fldcw
and
popa
scas
and
std
imul
fcmovnbe
shld
aas
ret
sub
scas
sarb
je
imul
loopne
and
mov
outsb
add
loopne
inc
int
sbb
in
jmp
mov
in
add
ret
fldt
and
popa
scas
and
std
imul
jnp
xchg
aas
inc
shl
clc
cmp
nop
loopne
add
add
cmp
push
inc
je
adc
push
sub
add
xchg
rorb
in
sub
aad
lods
lahf
ret
in
add
add
enter
loopne
pop
aas
cmp
push
mov
in
add
push
aas
aaa
add
xor
push
fs
add
ret
fldt
and
popa
scas
and
hlt
imul
sub
daa
in
xchg
add
lea
or
mov
mov
mov
pop
add
aaa
push
add
and
mov
outsb
add
loopne
inc
shll
pusha
mov
mov
and
dec
push
jl
push
add
and
mov
outsb
add
loopne
inc
shll
jge
jo
mov
mov
out
add
das
add
js
insl
outsb
out
sbb
mov
jo
jl
ljmp
imul
push
faddl
popa
mov
add
jmp
lea
rclb
insb
mov
mov
jmp
fnstsw
shlb
lea
xor
jl
imul
enter
rolb
jl
imul
dec
cmp
xor
jg
test
push
xor
jl
imul
rolb
rolb
jl
imul
insb
daa
lds
pop
mov
add
call
push
mov
push
fs
add
ret
aad
mov
andb
cmp
add
ret
enter
xchg
pushf
arpl
test
and
int3
imul
jl
jae
jnp
aam
int3
enter
loopne
pop
aas
cmp
inc
mov
in
add
push
aas
daa
pop
push
adc
pop
aaa
out
fisttpll
test
out
add
jl
push
add
and
mov
outsb
add
loopne
inc
int
cmp
in
int
pop
xchg
mov
test
imul
fldenv
and
scas
js
test
movsl
lods
add
rolb
mov
add
push
fs
add
ret
xlat
imul
and
cli
imul
rcll
sti
sub
push
xor
scas
andb
cmc
popf
xchg
adc
add
icebp
xchg
imul
jg
imul
add
and
add
loopne
add
pop
push
add
and
xchg
rolb
enter
imul
imul
adc
jge
test
js
repnz
add
loopne
call
pushf
cmp
add
and
add
loopne
add
arpl
fldcw
js
aaa
sarb
xor
push
or
or
call
out
jle
add
loope
add
loopne
call
pushf
cmp
add
and
add
loopne
add
xchg
xchg
lods
jbe
popf
lea
mov
add
jmp
xchg
or
imul
jg
imul
add
and
add
loopne
add
ss
adc
cmp
ja
jmp
lods
addr16
hlt
out
jge
push
cs
mov
gs
push
jl
push
fs
add
ret
aam
scas
and
popa
scas
and
sti
imul
int3
pop
fadd
inc
inc
sub
out
out
push
jl
imul
test
subl
jmp
roll
into
enter
loopne
pop
aas
cmp
push
mov
in
add
push
aas
cmp
stos
mov
mov
or
xor
cli
mov
jnp
pop
xchg
test
jae
or
outsb
mov
aam
xchg
out
jno
jmp
jb
aas
in
test
loopne
call
pushf
aas
sub
add
and
add
loopne
add
aaa
sub
sbb
mov
enter
loopne
pop
aas
cmp
dec
mov
in
add
push
aas
jmp
jmp
flds
xor
pusha
int3
xor
cmp
jl
imul
fnstsw
cli
push
ss
add
and
mov
outsb
add
loopne
inc
shlb
sub
imul
add
mov
push
rclb
jl
hlt
mov
sub
push
adc
loopne
lds
sbb
push
jns
inc
scas
mov
icebp
dec
out
imul
mov
jae
in
dec
push
fs
add
ret
xlat
imul
and
imulb
jl
mov
rdmsr
mov
jl
and
add
scas
xchg
dec
imul
fs
add
enter
loopne
pop
aas
cmp
push
mov
in
add
push
aas
imul
mul
xlat
dec
mov
cmpsb
mov
loopne
mov
mulb
push
ss
add
and
mov
outsb
add
loopne
inc
shlb
in
xor
loopne
add
iret
mov
mov
pop
jmp
push
fcompl
popf
in
cld
ud0
imul
jl
imul
dec
dec
xor
ss
int3
leave
je
jl
xor
test
test
push
fs
add
ret
fldt
and
popa
scas
and
cmc
imul
push
stc
xchg
mov
testb
mov
in
call
jp
and
dec
push
fs
add
ret
imul
add
ret
ja
out
add
jmp
mov
add
mov
loopne
add
insb
daa
mov
add
out
jmp
in
add
mov
pusha
push
aam
int
insl
add
pop
aas
cmp
dec
mov
in
add
push
aas
cmp
jmp
ss
loopne
setne
mov
loop
add
loopne
call
pushf
cmp
add
and
add
loopne
add
fmuls
or
fwait
jo
jl
roll
ror
insl
add
pop
aas
inc
repz
in
inc
mov
loopne
push
aas
xchg
out
mov
inc
sub
enter
cmp
aaa
push
add
and
mov
outsb
add
loopne
inc
shll
iret
negl
pop
adc
cmp
mov
jo
jl
jae
test
ror
cmpsl
mov
imul
mov
and
jl
imul
jl
mov
cmp
pop
mov
in
add
push
aas
and
jl
imul
sbb
xchg
test
push
lock
push
jge
imul
enter
loopne
pop
aas
cmp
push
mov
in
add
push
aas
push
lahf
mov
mov
mov
testl
add
push
fs
add
ret
fldt
and
popa
scas
and
std
imul
lods
out
cwtl
adc
stc
fsubr
mov
and
dec
jnp
cmpsl
adc
iret
enter
loopne
pop
aas
cmp
pop
mov
in
add
push
aas
adc
movsb
call
push
mov
xchg
cmp
pop
cmc
lea
cmpsl
mov
insl
add
pop
aas
aas
repz
in
inc
mov
loopne
push
aas
mov
push
adc
loopne
lar
push
jl
push
fs
add
ret
fisubrl
and
popa
scas
and
hlt
imul
lcall
jmp
out
mov
add
mov
loopne
add
out
add
leave
inc
xor
shlb
push
dec
push
fs
add
ret
fldcw
and
popa
scas
and
hlt
imul
cwtl
imul
xor
inc
jns
test
jae
test
shl
mov
add
mov
loopne
add
inc
lea
pop
sahf
mov
mov
sarl
lods
add
rolb
adc
jl
push
fs
add
ret
aam
scas
and
popa
scas
and
imull
jl
mov
das
loop
cmp
fucomip
movsl
lods
add
data16
scas
decb
jmp
jg
test
jge
jl
push
adc
cmp
mov
xor
jae
xor
std
inc
imul
jg
imul
add
and
add
loopne
add
dec
dec
out
or
gs
add
nop
out
mov
add
mov
loopne
add
jae
cltd
icebp
into
mov
add
cmp
sti
add
dec
out
jmp
jae
insl
push
imul
loopne
call
pushf
cmp
add
and
add
loopne
add
cmp
xchg
popa
popa
or
aam
ror
insl
add
pop
aas
aas
repz
in
inc
mov
loopne
push
aas
cmc
jnp
inc
aad
inc
shrl
addb
xor
aam
ror
insl
add
pop
aas
ds
mov
in
add
push
aas
push
pop
out
push
add
pop
sbb
cmp
add
jmp
imul
jl
push
or
loopne
int3
fcoml
imul
jl
pop
or
pop
fcom
mov
jae
imul
jl
outsl
add
sar
imul
mov
imul
pusha
jo
insb
cmp
dec
cmpsl
fstpt
lret
ss
add
and
mov
outsb
add
loopne
inc
shlb
imul
add
insb
jmp
add
pop
xor
dec
push
fs
add
ret
fisubrl
and
popa
scas
and
clc
imul
cmpsb
add
or
xchg
imul
push
mov
movsb
mov
mov
int3
out
ljmp
shlb
add
popw
mov
out
push
jl
imul
mov
jae
jl
push
add
and
mov
outsb
add
loopne
inc
int
mov
test
loopne
call
pushf
cmp
add
and
add
loopne
add
movsb
test
add
jmp
imul
incb
mov
mov
push
lea
jmp
add
dec
sbb
inc
imul
adc
lea
loopne
call
pushf
ds
add
and
add
loopne
add
ss
cmp
popf
jge
jae
pop
loop
test
loopne
call
pushf
aas
sub
add
and
add
loopne
add
aaa
sub
mov
fnstenv
addb
and
mov
pop
mov
out
mov
add
mov
loopne
add
xor
xor
adc
cmc
fimuls
loop
test
loopne
call
pushf
cmp
add
and
add
loopne
add
push
std
jmp
movl
add
ret
aam
scas
and
popa
scas
and
hlt
imul
push
push
mov
dec
pop
and
jnp
imul
mov
enter
loopne
pop
aas
aas
repz
in
inc
mov
loopne
push
aas
mov
imul
inc
test
sbb
mov
test
jl
push
add
and
mov
outsb
add
loopne
inc
int
outsl
out
shrl
push
push
jl
push
fs
add
ret
fisubrl
and
popa
scas
and
std
imul
fucomi
mov
rcrl
cmc
lea
cmp
sidtl
push
jl
push
fs
add
ret
aad
mov
andb
xor
add
ret
mov
loopne
add
xchg
filds
mov
loopne
call
pushf
ds
add
and
add
loopne
add
ss
jae
adc
jnp
imul
loopne
and
mov
outsb
add
loopne
inc
shll
jp
lahf
jg
popw
rorl
or
loopne
call
pushf
cmp
mov
loopne
add
xor
mov
loop
pushf
in
outsb
lahf
adc
enter
loopne
pop
aas
cmp
push
mov
in
add
push
aas
test
imul
out
add
leave
mov
jae
or
mov
push
fs
add
ret
aam
scas
and
popa
scas
and
hlt
imul
xor
shrl
imull
jl
jne
jl
fbstp
repz
push
scas
mov
lahf
inc
enter
popa
fmull
push
fs
add
ret
aam
scas
and
popa
scas
and
cmc
imul
adc
mov
in
lea
cld
shrl
and
mov
add
push
fs
add
ret
fldt
and
popa
scas
and
imulb
jl
rol
sarb
mov
imul
scas
xor
inc
cs
repz
mov
jl
imul
int
insl
add
pop
aas
cmp
dec
mov
in
add
push
aas
out
dec
pop
xchg
aaa
gs
mov
add
pop
fnstsw
add
push
xor
jl
imul
rolb
add
loopne
inc
into
mov
mov
gs
in
mov
xchg
loop
xor
push
fs
add
ret
imul
add
ret
mov
outsl
mov
shll
inc
push
cltd
jge
repz
lret
jl
leave
data16
lahf
add
add
stos
xor
aas
arpl
test
mov
pop
fildll
out
mov
add
loop
push
jnp
dec
xor
loopne
movb
mov
movsl
adc
xor
mov
pop
jae
dec
push
imul
xor
and
in
call
dec
jge
test
rcrl
xchg
icebp
push
cmp
sbb
mov
pop
pusha
loope
xor
aad
into
mov
cmp
cmpsb
movb
push
xchg
jl
imul
jl
imul
jl
imul
outsl
xchg
xchg
scas
lret
mov
imul
test
imul
mov
cld
lea
jl
out
gs
imul
test
jns
jle
imul
jl
imul
jg
imul
add
and
add
loopne
add
xchg
dec
fistpll
sarl
in
push
ss
add
and
mov
outsb
add
loopne
inc
shlb
loopne
rcrb
les
jecxz
add
push
fs
add
ret
fldt
and
popa
scas
and
hlt
imul
daa
lock
push
jl
imul
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
popa
out
rorb
jne
add
mov
push
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
add
push
inc
jmp
std
pop
jb
clc
shlb
in
cmpsb
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
fwait
mov
aas
fwait
mov
mov
mov
mov
cmpl
jne
cmpl
je
push
push
mov
mov
lea
call
pop
pop
cmpl
je
push
push
mov
lea
call
pop
pop
push
call
jo
cmp
stos
mov
mov
push
add
or
push
push
call
and
pop
mov
addl
inc
push
ret
mov
fmul
mov
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
les
and
or
push
call
and
pop
mov
addl
inc
push
ret
push
mov
mov
push
push
jns
push
push
rdtsc
pop
pop
rdtsc
jmp
inc
jae
int3
inc
testl
test
push
add
adc
add
iret
sti
push
clc
mov
mov
cmp
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
jae
mov
insl
mov
mov
nop
jmp
lods
shl
lcall
mov
lods
pop
hlt
xchg
pop
push
jmp
dec
popf
or
xlat
loop
push
call
and
pop
mov
addl
inc
push
ret
in
adc
mov
dec
stc
call
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
repnz
je
push
lret
mov
sub
mov
sub
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
cwtl
push
mov
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
pusha
mov
mov
popa
movb
mov
call
shlb
jmp
lods
arpl
lahf
rorb
xor
test
add
add
mov
add
add
push
pusha
jle
push
push
rdtsc
pop
pop
js
push
push
rdtsc
pop
pop
popa
mov
push
push
jmp
ret
push
cmpsb
cwtl
mov
loope
dec
fists
push
lret
decb
xor
mov
add
add
mov
add
add
mov
pusha
push
jae
pop
push
push
jmp
mov
loop
push
mov
push
push
rdtsc
pop
pop
pop
pop
popa
mov
pusha
jp
push
push
rdtsc
pop
pop
jno
pusha
popa
popa
pop
pushl
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
adc
sbb
lret
call
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
pusha
xor
mov
popa
jb
movzwl
jmp
dec
mov
xchg
dec
pop
xchg
xchg
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
daa
jo
or
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
or
or
test
jo
jp
jmp
sbb
jne
loop
inc
sbb
jmp
mov
stc
dec
push
gs
call
loop
jp
add
push
and
push
ljmp
nop
ret
push
jmp
mov
mov
push
jno
jl
pop
mov
pusha
push
jl
pop
push
push
push
pop
rdtsc
jb
pop
pop
popa
mov
je
push
push
pusha
popa
rdtsc
jnp
pop
pop
pop
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
mov
lea
mov
mov
call
mov
mov
mov
add
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
ljmp
add
xor
movb
push
push
call
and
pop
mov
addl
inc
push
ret
sahf
popf
sbb
loop
gs
mov
push
jb
push
ja
pop
xorl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
imul
inc
in
or
sub
and
sub
lea
add
call
mov
mov
mov
movb
or
push
mov
pop
push
pusha
push
jmp
or
jne
clc
pop
jmp
push
push
sub
in
xchg
xor
sahf
fmull
sbb
mov
xor
push
call
and
pop
mov
addl
inc
push
ret
scas
inc
add
pop
insl
jns
clc
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
pop
shlb
int3
cmp
sar
mov
push
push
call
and
pop
mov
addl
inc
push
ret
aas
out
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
jno
insb
dec
sub
mov
add
add
icebp
sub
fbld
popa
movb
push
push
call
and
pop
mov
addl
inc
push
ret
xlat
jmp
mov
push
test
adc
test
pop
pop
lds
inc
push
pusha
jno
push
pop
pusha
jbe
jmp
dec
jl
mov
gs
stc
jbe
mov
icebp
xor
xorl
push
push
call
and
pop
mov
addl
inc
push
ret
stos
lahf
adc
mov
xor
add
add
mov
lea
mov
call
jmp
push
adc
ds
sub
nop
pushf
mov
and
or
adc
add
xor
cld
xor
pop
and
scas
jae
fsts
push
push
push
call
and
pop
mov
addl
inc
push
ret
lods
daa
cwtl
jl
mov
push
je
push
jmp
mov
mov
sbbl
mov
push
call
xor
xchg
cmp
fstpl
push
jbe
push
pusha
popa
pop
addl
mov
push
and
call
jnp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
movzwl
mov
movl
or
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
movsl
andb
add
cmpsl
pop
gs
adc
pop
mov
call
add
add
jmp
rorl
sub
das
ja
push
jmp
gs
fs
and
jne
inc
daa
pop
mov
jmp
data16
lret
xorb
adc
add
pop
add
add
aas
sahf
mov
push
push
js
pusha
popa
rdtsc
push
push
push
rdtsc
pop
pop
pop
pop
pop
pop
push
push
call
and
pop
mov
addl
inc
push
ret
sti
rol
xchg
pusha
push
push
pusha
popa
rdtsc
jmp
adcl
push
jp
pop
popa
mov
mov
push
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
fadds
lea
adc
or
add
pusha
jle
push
pop
popa
push
push
push
push
push
pop
pop
rdtsc
pusha
push
push
rdtsc
pop
pop
push
push
rdtsc
pop
pop
popa
pop
pop
nop
xor
call
clc
lea
call
push
insb
imul
in
mov
sbb
adcb
movsl
clc
pop
push
push
push
jmp
icebp
jns
testl
add
testl
and
add
add
add
and
pop
mov
addl
inc
push
ret
pop
mov
lcall
add
add
mov
add
pusha
mov
call
push
loope
pop
pushw
mov
pop
stos
daa
pop
popa
pop
nop
push
jp
push
push
rdtsc
pop
pop
pop
push
pusha
jmp
insb
cmp
push
jg
loopne
cmp
sahf
cmp
popa
pop
push
push
push
push
rdtsc
pop
pop
rdtsc
push
pop
pop
pop
popa
nop
jne
mov
call
mov
or
jne
push
push
call
and
pop
mov
addl
inc
push
ret
incl
cmp
xchg
add
pop
add
push
push
call
and
pop
mov
addl
inc
push
ret
stc
sub
push
jmp
xor
xchg
add
add
or
call
ja
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
or
mov
cmp
and
or
xor
push
jp
jnp
jmp
js
mov
lret
je
inc
test
mov
push
call
and
pop
mov
addl
inc
push
ret
mov
shrl
xchg
xchg
or
lea
add
add
xchg
jno
and
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
stc
loope
lret
push
add
push
push
call
and
pop
mov
addl
inc
push
ret
fsubrs
add
test
add
sbb
xchg
adc
cmc
sub
cmc
sbb
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
sbb
and
lea
and
inc
push
push
call
and
pop
mov
addl
inc
push
ret
std
shl
movswl
nop
jl
pusha
push
push
rdtsc
pop
pop
pusha
popa
popa
push
push
push
jmp
fsubl
xlat
add
bound
addb
add
pop
pop
pop
nop
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
adc
adc
jmp
ja
loopne
data16
and
shll
pop
push
push
pusha
jne
pusha
popa
popa
pop
nop
mov
call
or
mov
mov
pop
mov
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
add
cltd
and
or
leave
mov
outsl
dec
dec
inc
hlt
dec
cmp
add
add
cmp
mov
push
je
dec
dec
sub
jmp
add
cmpb
jne
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
xor
and
or
push
call
and
pop
mov
addl
inc
push
ret
jp
cmp
test
sub
jb
cmpb
je
mov
cmpb
jne
mov
inc
push
jmp
mov
mov
sar
pop
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
out
into
cwtl
dec
sub
nop
push
push
push
push
pop
pop
rdtsc
jnp
jo
pop
pop
push
jnp
push
push
push
push
rdtsc
pop
pop
rdtsc
push
pop
pop
pop
nop
jmp
dec
lods
xor
ficoms
mov
and
and
or
or
jmp
or
pusha
repz
pushf
sub
jmp
bound
add
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
xor
jp
push
add
add
dec
mov
sbb
into
mov
jp
mov
push
jmp
or
dec
add
push
dec
adc
mov
js
sbb
xor
call
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
popa
cmp
loopne
dec
sub
push
or
in
cld
or
je
clc
jmp
or
movb
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
mov
arpl
jmp
pop
aam
mov
sub
mov
call
and
pop
mov
addl
inc
push
ret
pusha
xchg
mov
cmp
mov
nop
push
push
pusha
popa
pop
pop
push
pusha
push
push
jne
rdtsc
push
pop
pop
pop
pusha
jmp
seto
mov
jne
popa
popa
nop
movswl
push
push
push
call
and
pop
mov
addl
inc
push
ret
and
pop
push
ja
push
jne
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
or
add
insb
push
inc
fs
mov
xchg
xchg
or
push
call
and
pop
mov
addl
inc
push
ret
xchg
xchg
add
and
sbb
imul
add
add
and
pop
mov
addl
inc
push
ret
dec
jle
cmp
cwtl
mov
sbb
pop
push
push
call
and
pop
mov
addl
inc
push
ret
push
scas
adc
mov
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
rol
mov
rcll
xchg
push
jmp
mov
cmc
nop
push
pusha
ja
push
pop
popa
pop
push
push
push
jmp
repz
adc
cmp
and
push
add
imul
rdtsc
jno
pusha
popa
pop
pop
nop
or
pushl
mov
call
movzwl
or
jne
mov
popa
call
sbbl
sbb
jbe
addb
add
mov
pop
movl
push
push
call
and
pop
mov
addl
inc
push
ret
aas
xor
or
jmp
or
popa
push
push
call
and
pop
mov
addl
inc
push
ret
push
cli
shlb
mov
add
or
jmp
cld
or
push
ja
push
push
pop
pop
xorl
push
push
call
and
pop
mov
addl
inc
push
ret
sahf
out
jb
sub
push
push
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
push
hlt
xchg
push
add
add
std
xor
lods
ss
lods
pushf
and
jmp
pushf
mov
ss
add
fcoms
stos
daa
pop
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
adc
mov
inc
mov
test
xchg
jno
and
mov
mov
add
nop
pusha
push
pusha
popa
pop
jmp
into
cmp
filds
es
shll
pusha
jmp
clc
and
mov
jae
rdtsc
pusha
popa
pop
pop
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
mov
test
sub
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
mov
jp
mov
popa
nop
pusha
jmp
adc
add
sahf
or
or
add
push
jmp
adc
aas
dec
popa
push
push
push
jbe
pop
pop
nop
mov
call
push
aaa
dec
jge
jae
or
pop
lea
pusha
jmp
loop
mov
in
add
das
rorb
or
jmp
mov
sub
and
int3
mov
jmp
fmulp
pop
pop
sahf
popf
sbb
loop
gs
std
pop
nop
call
and
mov
xor
cmpl
jne
cmpl
je
push
push
mov
mov
lea
call
pop
pop
cmpl
je
push
push
mov
lea
call
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
sub
and
add
mov
mov
movl
call
mov
mov
mov
xorl
xor
shll
pop
mov
ret
push
push
call
and
pop
mov
addl
inc
push
ret
out
repnz
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
and
call
xor
mov
shlb
mov
cltd
or
lret
add
add
mov
pushl
mov
pop
mov
sub
mov
xor
and
xor
jmp
dec
sbb
sbb
mov
sub
jp
mov
dec
push
cmc
pop
sub
jne
cld
jmp
mov
mov
jmp
test
arpl
ss
scas
mov
sarl
adcl
ds
xlat
lret
out
add
iret
test
je
repz
jl
jg
repz
jg
adc
fdivrs
cmp
rorl
pop
je
dec
je
rorl
aaa
loopne
aaa
repz
jnp
xor
xlat
lret
iret
enter
dec
adc
shrb
or
outsl
mov
xor
fnstcw
repz
dec
sub
add
les
arpl
repnz
xor
sarl
jb
adcl
sarl
and
dec
push
jecxz
call
aaa
jecxz
jg
ret
mov
cld
rorl
aaa
mov
in
push
xlat
lret
mov
push
push
mov
push
data16
add
mov
iret
arpl
jp
pop
xchg
repz
sub
pop
mov
scas
cmpl
sarl
and
iret
outsl
sub
mov
mov
jo
sub
sarl
aaa
xor
push
lcall
nop
repz
sub
pop
mov
scas
cmpl
sarl
and
sub
es
insb
pop
xlat
lret
cld
push
cld
xchg
fsubrs
dec
mov
negl
sarl
ja
nop
push
cld
inc
sbb
inc
scas
mov
mov
outsb
fs
cld
shll
inc
and
jg
ja
nop
push
cld
inc
sbb
inc
scas
mov
mov
andb
sub
pop
mov
scas
cmpl
sarl
and
shll
imul
aam
aaa
repz
cli
sub
push
notl
push
idivl
push
cli
daa
movsb
cmpsl
sub
aaa
cmp
loop
jns
sub
mov
dec
xor
scas
inc
pop
adcb
pop
mov
dec
add
les
jg
jp
inc
xlat
lret
cmpsl
mov
push
pslld
jg
sarl
jl
arpl
je
arpl
out
jg
xor
dec
push
mov
and
xlat
lret
cli
sarl
lcall
xchg
repz
cmp
sarl
sub
scas
cmpl
sarl
and
dec
add
lds
jg
sbb
push
pslld
jg
shll
jnp
arpl
je
arpl
ljmp
add
add
out
insl
push
cld
dec
add
out
lods
mov
repz
sub
cmpl
sarl
and
or
repz
dec
je
xlat
lret
cmp
aaa
repz
loop
or
dec
xor
aaa
andl
imul
cld
imul
aam
aaa
repz
cli
sub
push
notl
push
test
dec
cli
jecxz
jb
fwait
add
aaa
repz
aam
aaa
repz
cli
sub
push
notl
push
divl
dec
cli
and
inc
jle
and
data16
repz
mov
out
aas
jl
xor
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
sbb
fdivrs
cmp
xlat
lret
cmpsl
mov
xchg
repz
add
lods
mov
repz
sub
cmpl
sarl
and
jne
and
shll
mov
xchg
pushf
dec
in
mov
push
arpl
ss
jge
mov
aaa
repz
aam
aaa
repz
cli
sub
push
notl
push
idivl
push
cli
je
or
jl
adc
lret
xchg
adc
xor
jb
cld
dec
add
lods
mov
repz
cs
cmpl
sarl
es
cmp
insl
in
js
jg
repz
scas
push
dec
iret
jg
sbb
push
pslld
jg
sarl
cmpb
je
arpl
out
jg
xor
cmp
jmp
arpl
sbb
push
pslld
jg
shll
jnp
arpl
je
arpl
out
jg
cmp
cli
fildl
push
xlat
lret
cmc
sarl
jb
jg
repz
cmp
xlat
lret
ja
arpl
imul
aam
aaa
repz
cli
sub
push
notl
push
idivl
push
cli
mov
lods
inc
arpl
fwait
lods
test
repz
aam
aaa
repz
cli
sub
push
notl
push
test
dec
cli
and
adc
xlat
lret
repz
and
or
sbb
aaa
repz
aam
aaa
repz
cli
sub
push
notl
push
idivl
push
cli
mov
mov
fdivrl
dec
clc
inc
xlat
lret
mov
shrl
aaa
and
rcrl
mov
or
xlat
int
aaa
repz
mov
scas
xor
adc
fdivrs
in
xlat
lret
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
mov
scas
shrb
in
lcall
in
jns
or
xlat
lret
iret
shlb
rclb
sarl
shll
jnp
arpl
je
arpl
in
jg
cmp
lret
xlat
fdivl
sbb
arpl
repz
aaa
sub
xorb
rcrl
mov
or
xlat
int
aaa
repz
xor
lcall
lock
jnp
mov
xlat
lret
and
rcrl
mov
or
xlat
int
aaa
repz
mov
ss
xor
pop
movl
aaa
sub
mov
cmpsl
push
pop
adc
and
clc
sarl
add
jmp
aaa
repz
mov
xchg
cs
pop
dec
and
mov
stos
imul
aam
aaa
repz
cli
sub
push
notl
push
idivl
push
cli
sub
pop
cmp
repz
push
mov
jg
repz
fsubp
xor
fwait
aam
aaa
repz
cli
sub
xor
push
inc
push
idivl
push
cli
push
push
movsl
pop
cwtl
or
int
aaa
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
xchg
sarl
mov
fwait
mov
cmpsl
jne
lret
repz
and
rcrl
mov
or
xlat
int
aaa
repz
mov
loope,pn
jp
push
stos
dec
lret
dec
xchg
aaa
repz
call
jg
adc
and
subb
dec
mov
loop
xor
mov
mov
jno
mov
push
jg
repz
subl
ljmp
mov
or
int
jae
int
aaa
repz
mov
dec
mov
jg,pt
lods
mov
arpl
adc
fdivrl
xor
rclb
repnz
sarl
jge
push
arpl
je
arpl
jmp
add
adc
mov
sarl
fwait
iret
jg
repz
inc
bound
jb
push
cld
js
xchg
repz
sub
cmpl
sarl
and
cli
in
push
mov
push
and
xorb
rcrl
mov
or
xlat
int
aaa
repz
mov
sub
rclb
fdivs
xlat
lret
dec
lea
test
dec
inc
xor
rclb
repnz
sarl
jge
push
arpl
je
arpl
call
add
les
dec
hlt
jg
lods
mov
std
mov
jns
ljmp
add
je
hlt
add
cmp
lcall
ds
aaa
xlat
lret
and
rcrl
mov
or
xlat
int
aaa
repz
mov
fs
dec
call
cld
xchg
lods
mov
fwait
aam
aaa
repz
cli
das
dec
sub
push
inc
push
idivl
push
cli
add
or
loope
mov
adc
xchg
imul
aam
aaa
repz
cli
sub
xor
push
inc
push
idivl
push
cli
mov
outsl
std
fs
cltd
xchg
repz
cmp
sarl
xor
cmpl
sarl
sub
jns
fdivl
mov
xlat
lret
icebp
sarl
sbb
aaa
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
imull
popa
ds
in
loopne
add
cmp
popf
cmpb
dec
xlat
lret
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
xchg
mov
or
jno
lods
mov
hlt
xlat
lret
addr16
push
cld
dec
hlt
fcmovnbe
lods
mov
cld
dec
cltd
xchg
repz
cs
cmpl
sarl
es
data16
xor
jns
imul
aam
aaa
repz
cli
sub
push
notl
push
divl
dec
cli
push
jns
daa
xchg
mov
enter
adc
int3
lods
mov
mov
sarb
repz
jl
dec
xchg
fwait
int3
jg
repz
stos
mov
jmp
mov
sbb
push
pslld
jg
sarl
jg
test
je
arpl
in
sarl
xor
ret
inc
fdivl
dec
inc
xor
add
lret
out
shlb
sbb
push
pslld
jg
shll
jnp
arpl
je
arpl
out
jg
cmp
in
adc
aad
and
xchg
repz
mov
scas
cmpl
sarl
and
mov
and
fs
mov
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
xchg
inc
xchg
xor
lret
repnz
repz
mov
scas
cmpl
sarl
and
cmpsb
imulb
xor
pop
mov
test
repz
xor
rcrb
push
js
xchg
push
cld
aad
xchg
repz
aam
aaa
repz
cli
sub
push
notl
push
idivl
dec
cli
lahf
add
ss
je
xor
and
xorb
rcrl
mov
or
xlat
int
aaa
repz
mov
dec
and
dec
mov
lret
jl
fdivrs
xlat
lret
out
mov
jg
repz
dec
enter
loopne
les
adc
hlt
sbb
push
pslld
jg
shll
jl
pop
arpl
je
arpl
in
jg
xor
push
mov
dec
and
add
dec
mov
aaa
repz
dec
jl
jl
push
insb
pop
xlat
lret
cld
push
cld
xchg
fsubrs
dec
mov
negl
sarl
ja
pusha
push
cld
inc
sbb
inc
scas
mov
mov
outsb
fs
cld
shll
inc
and
jg
ja
pusha
push
cld
inc
sbb
inc
scas
mov
mov
insl
in
sbb
push
pslld
jg
shll
jnp
arpl
je
arpl
lock
cmp
lock
mov
push
cld
dec
sbb
cli
lods
mov
and
push
repz
inc
jl
push
testl
test
push
xchg
leave
jo
sub
jo
jnp
jg
repz
jge
imul
aam
aaa
repz
cli
sub
push
notl
push
idivl
push
cli
push
or
mov
decl
inc
imul
sarl
ja
ss
dec
hlt
outsl
loop
test
sub
sub
fwait
sarl
and
rorb
out
xchg
insl
xchg
inc
outsl
or
sub
xchg
aaa
repz
and
cs
xchg
cmc
or
leave
push
ret
scas
adc
adc
popa
push
jo
sahf
push
cld
jb
lods
ja
dec
dec
cld
imul
aam
aaa
repz
cli
sub
push
notl
push
test
push
cli
mov
jnp
jl
rorb
or
adc
repz
sub
cmpl
sarl
and
sub
push
push
test
dec
hlt
and
lods
mov
repz
push
mov
add
push
cmc
xchg
sarl
in
jnp
arpl
sbb
push
pslld
jg
sarl
jl
arpl
je
arpl
out
sarl
xor
jbe
mov
rorb
xor
lret
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
jge
in
or
pop
and
sbb
push
pslld
jg
shll
jnp
arpl
je
arpl
call
jg
sahf
xchg
sbb
cld
lods
mov
mov
rclb
push
xor
xlat
lret
js
jg
repz
push
lret
imul
repz
sub
cmpl
sarl
and
mov
mov
mov
add
lret
repz
sbb
push
popa
jbe
jmp
and
sarl
sub
or
xlat
dec
sbb
jg
repz
addr16
insb
push
cld
imul
aam
aaa
repz
cli
sub
push
notl
push
divl
dec
cli
mov
ret
fcoml
sar
sarl
repz
xor
xor
stos
mov
cld
imul
aam
aaa
repz
cli
sub
push
notl
push
idivl
push
cli
xlat
jae
imul
dec
sbb
repnz
mov
jno
daa
jo
add
cwtl
sub
mov
outsb
push
cld
sbbl
cwtl
adc
add
adc
sarb
ficomps
jg
iret
mov
mov
jb
xor
sbb
cmp
sarl
repz
aam
aaa
repz
cli
sub
push
notl
push
idivl
push
cli
push
mov
jns
imul
xor
and
repz
adc
push
js
adcb
cld
pop
fsubrl
jg
fwait
aam
aaa
repz
cli
sub
push
notl
push
idivl
push
cli
subl
push
xor
jb
mov
jmp
inc
scas
enter
adc
bound
enter
jae
jecxz
mov
and
lret
dec
mov
jg
repz
sbb
adc
nop
fisubrl
adcb
mov
scas
ja
jno
cld
xchg
and
jb
jg
repz
cld
div
lods
mov
inc
or
or
repz
clc
mov
xorl
add
cld
outsl
mov
jp
cld
push
xlat
lret
dec
mov
fimull
pop
xchg
jp
std
jle
arpl
pop
mov
jg
repz
sbb
cli
lods
mov
cld
dec
cld
inc
ret
mov
repz
xor
outsl
add
repnz
iret
sub
repz
cld
out
shrb
jg
incb
aaa
repz
cli
faddp
imul
cwtl
push
lret
inc
add
mov
rcl
jg
jl
enter
add
jmp
arpl
lea
aam
mov
cld
dec
mov
aaa
sbbb
in
aad
test
repz
notl
sbb
cmc
adc
and
xchg
repz
enter
push
imul
aam
aaa
repz
cli
sub
push
notl
push
idivl
cli
in
inc
jbe
in
mov
clc
daa
cmc
sarl
repz
sub
pop
mov
scas
cmpl
sarl
and
cmpsb
mov
repz
lods
scas
lods
mull
cld
cmpsl
add
sub
test
repz
inc
sbbb
loop
cmp
je
jg
repz
sbb
jecxz
mov
sbb
push
pslld
jg
sarl
jge
push
arpl
je
arpl
call
add
aaa
repz
aad
test
xchg
mov
inc
mov
lods
std
push
repz
push
sbb
push
pslld
jg
sarl
jl
arpl
je
arpl
lock
xor
insb
xor
andl
stc
mov
ljmp
lret
lods
mov
sarl
sbb
push
pslld
jg
sarl
jl
arpl
je
arpl
out
jg
xor
aas
mov
daa
dec
adc
in
lods
mov
repz
sub
cmpl
sarl
and
out
lods
loopne
popf
push
jp
hlt
xor
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
scas
mov
xlat
lret
mov
xchg
cmp
cmpsl
cmp
rclb
repnz
sarl
jl
arpl
je
arpl
in
sarl
xor
ret
jno
lods
ja
arpl
jl
cld
xor
dec
sub
cld
push
cld
add
lods
mov
decb
repz
aaa
and
xorb
rcrl
mov
or
xlat
int
aaa
repz
mov
xor
ror
orb
cld
jmp
dec
mov
std
mov
jo
jno
inc
sub
sbb
roll
icebp
lods
mov
repnz
sbb
push
pslld
jg
shll
jl
pop
arpl
je
arpl
out
jg
xor
inc
inc
mov
lret
dec
lcall
in
lods
mov
es
mov
or
xlat
int
aaa
repz
mov
scas
sbb
dec
fnstcw
cld
rorl
aaa
fcoml
mov
lret
iret
iret
arpl
hlt
enter
sarl
je
add
jb
jl
xlat
lret
jne
xorl
dec
fstl
repnz
sarl
jge
push
arpl
je
arpl
out
jg
ss
sub
rep
add
push
inc
jb
push
cltd
arpl
adc
test
push
sub
cmpl
sarl
and
mov
mov
fmull
repnz
sarl
sub
scas
cmpl
sarl
and
or
xor
jg
repz
cs
cmpl
sarl
es
fs
xlat
lret
mov
mov
add
clc
dec
xlat
lret
adc
push
adc
sarl
cmp
mov
dec
and
mov
and
cmpb
repz
sub
pop
mov
scas
cmpl
sarl
and
ss
adc
pop
sbb
mov
mov
repz
jp
or
daa
shll
sbb
or
ja,pn
jg
repz
lods
lret
mov
sarb
sbb
xlat
lret
jg
arpl
sbb
push
pslld
jg
sarl
jl
arpl
je
arpl
jmp
jg
xor
push
and
ljmp
data16
rclb
repnz
sarl
jl
arpl
je
arpl
out
sarl
xor
add
or
push
les
lret
icebp
sarl
dec
cmp
push
cld
adc
repz
repz
sub
pop
mov
scas
cmpl
sarl
and
mov
pop
stos
lea
icebp
icebp
push
cld
imul
aam
aaa
repz
cli
sub
push
notl
push
idivl
dec
cli
xor
outsl
or
jp
movsb
inc
xlat
lret
sub
xorb
rcrl
mov
or
xlat
int
aaa
repz
mov
fisubs
test
sub
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
xchg
and
sahf
push
cld
imul
aam
aaa
repz
cli
sub
push
notl
push
test
push
cli
mov
xchg
jp
or
imul
aam
aaa
repz
cli
sub
push
notl
push
test
push
cli
xchg
jmp
aaa
rep
iret
add
sbb
sahf
stos
push
sbb
inc
sbbl
aaa
in
mov
mov
jbe
sub
jg
repz
sarl
repz
cwtl
jl
arpl
repz
sub
cmpl
sarl
and
fucomi
aad
sub
and
rcrl
mov
or
xlat
int
aaa
repz
mov
jns
lcall
xchg
test
mov
push
subb
pop
mov
inc
shrb
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
xchg
xor
xor
dec
cld
repz
mov
adc
add
inc
mov
xchg
dec
pusha
aaa
repz
adc
push
repz
repz
sbb
xchg
jno
ja
jnp
jnp
mov
lods
and
push
push
stos
or
cld
jnp
lods
mov
or
arpl
mov
jl
xlat
lret
repz
aaa
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
jae
jnp
fs
and
repz
sarl
repz
cmp
sarl
xor
cmpl
sarl
sub
mov
or
aas
adc
sarl
inc
gs
addr16
jg
in
rorb
mov
dec
dec
bnd
adc
pop
cmpsb
adc
subl
hlt
adc
cmp
insl
nop
cmp
push
test
or
stos
inc
and
cmpsl
inc
fldt
cmp
lea
dec
hlt
mov
andl
jg
fwait
aam
aaa
repz
cli
sub
push
notl
push
divl
push
cli
testl
sub
repz
sub
cmpl
sarl
and
scas
inc
jmp
stos
ja
mov
mov
leave
push
cmp
sarl
adc
mov
ret
jg
repz
add
dec
jecxz
adc
mov
dec
xchg
test
aam
mov
int
aaa
les
jl
xlat
lret
xchg
and
repz
sarl
dec
lret
cld
fdiv
adc
mov
repz
sub
scas
cmpl
sarl
and
inc
enter
mov
xor
rclb
sarl
shll
jnp
arpl
je
arpl
out
jg
cmp
imul
mov
mov
aaa
repz
cmp
loop
xorb
mov
stc
icebp
push
cld
orb
xlat
pop
addb
xor
roll
pslld
jg
sarl
jle
lea
je
arpl
in
sarl
xor
mov
push
test
push
jg
repz
jl
arpl
dec
in
icebp
push
cld
imul
aam
aaa
repz
cli
sub
xor
push
inc
push
divl
push
cli
push
lea
jbe
pop
lahf
sbb
sarl
dec
and
cld
fcoms
lods
mov
repz
sub
cmpl
sarl
and
mov
stos
dec
hlt
incb
mov
repz
cs
cmpl
sarl
es
or
rclb
sarl
shll
jnp
arpl
je
arpl
in
sarl
cmp
push
scas
repz
out
enter
sarl
clc
sarl
ja
mov
repz
repz
sub
cmpl
sarl
and
mov
push
sub
popa
adc
dec
adc
in
lods
mov
repz
cs
cmpl
sarl
es
in
cwtl
push
mov
jb
adcl
sarl
sub
pop
mov
scas
cmpl
sarl
and
pop
fidivl
scas
jne
push
inc
push
push
repnz
push
cld
dec
dec
push
sbb
push
pslld
jg
shll
jnp
arpl
je
arpl
out
sarl
cmp
insl
xlat
sbb
and
mov
or
sbb
push
pslld
jg
sarl
jg
test
je
arpl
call
add
outsl
ljmp
lret
and
dec
divl
repz
nop
repz
sarl
jns
jg
rep
add
mov
and
push
dec
in
icebp
push
cld
enter
dec
test
repz
faddl
arpl
mov
fmull
lret
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
xchg
pop
movsl
dec
faddl
mov
orb
and
jg
mov
jg
sub
arpl
outsl
or
jp
je
xlat
lret
xchg
and
jp
jl
xlat
lret
fwait
shll
rclb
repnz
sarl
jl
arpl
je
arpl
call
test
jle
jmp
push
into
push
je
scas
push
jae
psrad
jg
and
stos
cmpsl
cmp
mov
movsl
jmp
stc
inc
jp
jmp
push
mov
ja,pn
jg
repz
or
xchg
leave
or
xchg
leave
jo
sub
jo
cld
sarl
daa
call
lcall
test
sub
push
sub
xchg
hlt
ss
xlat
lret
xchg
bound
adc
hlt
adc
mov
jg
jg
repz
in
lods
mov
fdiv
adc
mov
repz
sub
scas
cmpl
sarl
and
or
mov
jmp
js
ja
xchg
mov
mov
fdivrl
add
ret
daa
mov
test
repz
xor
mov
ja,pn
jg
repz
in
mov
cld
imul
aam
aaa
repz
cli
sub
push
notl
push
idivl
push
cli
lcall
aaa
pushf
int3
jg
repz
xchg
inc
jp
iret
das
xor
lret
repz
aaa
es
mov
or
xlat
int
aaa
repz
mov
lahf
sbb
jle
sarl
lods
dec
mov
sbbl
adc
push
ds
sbb
repz
mov
jae
xorb
sarl
lret
adc
dec
xchg
out
aam
aaa
outsb
or
orb
xlat
lret
repz
sbb
in
pop
push
dec
xor
pop
mov
test
xchg
pushf
lret
jg
repz
mov
dec
dec
dec
jne
adc
and
jo
sub
xchg
test
inc
imul
push
repz
aaa
sub
adc
sarl
add
xchg
lahf
xor
out
aad
inc
outsb
push
or
push
shlb
aaa
sbb
push
pslld
jg
sarl
jg
test
je
arpl
out
jg
xor
ret
cmp
dec
cld
dec
sbb
fisubrl
sub
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
xchg
lahf
outsl
jno
vcvtss2si
seta
test
and
subb
and
adc
xchg
sbbb
jno
subl
andb
sub
pop
mov
scas
cmpl
sarl
and
loop
ss
nop
repz
sbb
fisubrl
outsb
push
cld
imul
andl
mov
scas
cmpl
sarl
and
jnp
out
mov
xlat
lret
pop
mov
fmuls
lret
pop
and
fdivrl
les
mov
pslld
jg
sarl
jge
push
arpl
je
arpl
in
sarl
ss
push
dec
dec
sbb
fldt
fwait
push
cld
rorb
aaa
pushf
jg
repz
xlat
aad
mov
inc
subl
pslld
jg
sarl
jg
test
je
arpl
out
jg
xor
ret
leave
push
dec
repz
add
jg
xchg
or
jmp
mov
call
rorb
push
sbb
push
pslld
jg
sarl
jg
test
je
arpl
jmp
jg
xor
ret
fmuls
sub
scas
cmpsb
arpl
decb
aaa
repz
xchg
adc
jg
fwait
sarl
repz
or
jnp
xor
push
mov
xlat
lret
out
cmpsl
arpl
orb
aad
sub
sub
xorb
rcrl
mov
or
xlat
int
aaa
repz
sti
mov
aaa
repz
dec
xor
dec
inc
jg
inc
lods
dec
cmp
and
mov
repz
fidivs
push
push
xor
jge
sbb
mov
out
dec
pop
xchg
jl
jg
repz
aaa
sub
xorb
rcrl
mov
or
xlat
int
aaa
repz
adc
sbb
cld
imul
aam
aaa
repz
cli
sub
push
notl
push
idivl
dec
cli
stc
mov
push
in
jg
gs
out
int
out
add
xor
sbb
repz
lea
mov
test
mov
cli
das
dec
sub
push
inc
push
idivl
push
cli
push
in
mov
sarl
decb
aaa
repz
push
push
sub
xlat
lret
fstpt
push
pslld
jg
sarl
jge
push
arpl
je
arpl
lock
ss
adc
dec
cld
jecxz
lods
mov
push
ljmp
inc
shrl
inc
arpl
xchg
popa
mov
lods
in
xor
cltd
int3
jae
cld
ss
xlat
lret
push
shlb
rorl
out
js
stc
xor
sarl
mov
dec
sbb
mov
push
divl
loopne
repz
xchg
jp
pop
push
xlat
lret
arpl
arpl
adc
paddb
jg
dec
shrl
shrb
push
dec
rorb
clc
sarl
cmp
aam
ljmp
outsl
push
popa
push
cld
stos
add
repnz
mov
xlat
lret
daa
mov
xchg
push
bound
cld
push
mov
xlat
lret
push
xchg
aaa
repz
aaa
pushf
mov
or
sbb
or
cld
lods
mov
cld
push
mov
aaa
repz
sub
lods
mov
xlat
lret
repz
inc
repz
cld
rorb
icebp
lods
mov
fwait
aam
aaa
repz
cli
sub
push
inc
push
idivl
push
cli
jge
test
repz
dec
inc
pusha
push
cld
fcoms
insl
push
cld
sbb
xor
not
jg
dec
scas
push
ljmp
insb
mov
dec
mov
arpl
lret
repz
outsl
push
adcb
pop
sbb
and
sarl
repz
aam
aaa
repz
cli
das
dec
sub
push
inc
push
idivl
push
cli
lods
enter
sarl
push
es
mov
ljmp
fwait
aam
aaa
repz
cli
sub
xor
push
inc
push
idivl
cli
insl
imul
mov
rclb
repnz
sarl
jg
test
je
arpl
jmp
add
data16
ljmp
sarl
pushf
leave
jg
repz
sarl
imul
pop
cmpb
aaa
repz
xchg
repnz
mov
add
lret
push
mov
test
repz
out
das
sbb
dec
dec
lods
cli
sub
popa
cmpsl
adc
and
ljmp
lret
inc
shlb
decb
aaa
repz
mov
ljmp
pop
fwait
aam
mov
jns
mov
hlt
inc
or
xlat
lret
cmpsl
popf
arpl
repz
sarl
adc
xchg
aaa
repz
fwait
lahf
insb
scas
popa
adc
mov
arpl
lods
mov
repnz
sbb
push
pslld
jg
sarl
jge
push
arpl
je
arpl
out
jg
ss
add
or
xor
inc
pusha
pop
xlat
lret
jb
jl
xlat
lret
ja
test
repz
sbb
lret
mov
cld
rorb
aaa
sbb
push
pslld
jg
sarl
jl
arpl
je
arpl
jmp
jg
xor
push
dec
jp
mov
adc
push
mov
jno
jl
xlat
lret
jne
xorl
imul
aam
aaa
repz
cli
sub
push
notl
push
idivl
push
cli
int
adc
add
scas
mov
rorb
or
mov
xchg
repz
mov
scas
cmpl
sarl
and
fcoms
repz
cs
cmpl
sarl
es
mov
cmp
lret
std
dec
lods
aaa
repz
aaa
and
mov
add
sbb
js
cld
movsb
add
ucomiss
aaa
repz
pop
loope
jp
cmc
mov
aaa
repz
fdivr
dec
arpl
xchg
mov
cli
sub
push
inc
push
idivl
push
cli
push
pop
push
test
rclb
repnz
sarl
cmpb
je
arpl
jmp
test
js
les
sbb
and
aaa
repz
xchg
adcb
jnp
les
subl
sarl
jne
jg
repz
xchg
pushf
jg
repz
adcb
leave
pop
sti
mov
and
mov
repz
dec
hlt
fucomip
add
mov
sub
repz
sbb
les
or
cmpsl
mov
subb
or
int
je,pn
jg
repz
jp
pop
jns,pn
jg
repz
std
sarl
pop
outsb
fwait
cmp
in
sub
ss
subl
lret
jg
repz
cwtl
and
jg
rclb
repnz
sarl
cmpb
je
arpl
lock
xor
cli
pop
lods
aam
mov
imul
pslld
jg
sarl
jl
arpl
je
arpl
out
jg
xor
push
mov
into
dec
cld
mov
push
and
cld
dec
add
inc
mov
xchg
repz
cmp
sarl
xor
cmpl
sarl
sub
nop
push
xlat
lret
loope
jg
xor
push
lods
mov
inc
lret
cli
in
mov
sub
push
hlt
sarl
jp
fucomi
aad
sub
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
mov
fbstp
fimull
out
jg
repz
repz
mov
scas
cmpl
sarl
and
inc
cli
or
int
push
mov
or
icebp
icebp
push
cld
dec
cld
aas
shrl
xchg
push
cld
stos
cld
dec
aad
mov
jns
enter
pop
test
push
jg
repz
mov
iret
movsb
jecxz
or
sbbl
es
push
cld
aas
push
xchg
adcb
jnp
cs
ljmp
int
clc
mov
pop
rorl
pop
pop
fs
andl
dec
jg
repz
jg
dec
xorl
adc
sub
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
dec
movsl
mov
push
dec
cmc
icebp
push
cld
dec
adc
fisubrl
xor
and
add
xlat
enter
imul
aam
aaa
repz
cli
das
dec
sub
push
inc
push
idivl
cli
out
rcrl
sub
mov
mov
adc
or
repz
and
jo
sub
push
cmp
sarl
adc
dec
xchg
and
aaa
mov
pop
jg
jp
mov
and
sbb
push
pslld
jg
sarl
jg
test
je
arpl
out
sarl
xor
ret
cmp
sub
fisttps
aaa
jp
mov
xlat
lret
push
imul
aam
aaa
repz
cli
sub
push
inc
push
idivl
push
cli
xchg
dec
fstl
xlat
lret
iret
iret
arpl
repnz
sbb
push
pslld
jg
sarl
cmpb
je
arpl
call
test
jg
dec
adc
icebp
lods
mov
cld
rorl
aaa
fcoml
push
dec
xlat
lret
repz
jg
imul
outsl
sub
roll
hlt
adc
cmp
test
xor
icebp
stos
and
nop
cmp
xorl
jb
andl
dec
pop
ret
andb
cmpl
int
mov
lcall
pslld
jg
sarl
jl
arpl
je
arpl
out
jg
xor
push
pslld
jg
sarl
jl
arpl
je
arpl
out
jg
xor
shlb
dec
sbb
loop
mov
cld
aam
mov
aam
aaa
jb
mov
ja,pn
xorb
fnstcw
xor
rclb
repnz
sarl
jge
push
arpl
je
arpl
lock
ss
lods
leave
push
in
cmp
adc
repnz
mov
push
xor
incb
mov
jle
jg
repz
push
enter
xor
roll
pslld
jg
shll
jnp
arpl
je
arpl
out
sarl
cmp
jmp
mov
aaa
repz
add
fildll
and
cld
sarl
and
mov
mov
dec
xchg
incb
aaa
repz
aaa
and
subb
and
jnp
sbb
xlat
lret
xchg
and
je
movsl
into
push
cmpsl
xor
sarl
mov
fsts
lods
mov
cld
dec
hlt
incb
mov
repz
sub
pop
mov
scas
cmpl
sarl
and
add
or
out
mov
jp
rclb
repnz
repz
push
jp
call
cmp
lret
repz
sbb
adc
xchg
push
shll
jb
mov
mov
xor
dec
dec
push
adc
dec
aad
or
pushf
mov
mov
or
xchg
lock
jecxz
test
jecxz
jg
ja
push
adc
mov
inc
fidivrl
xor
dec
test
test
mov
jg
imul
subb
or
dec
sbb
imull
icebp
push
cld
enter
ds
xlat
lret
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
div
push
out
fisttpll
je
stos
ret
jno
mov
ja,pn
jg
repz
cld
iret
lock
mov
and
cmpsl
jnp
enter
jno
ljmp
ret
fdivs
lods
push
add
test
repz
ja
rorl
lcall
ljmp
push
leave
fisubl
out
lods
lcall
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
popa
sub
pop
pop
aas
dec
push
mov
inc
mov
xchg
repz
sub
pop
mov
scas
cmpl
sarl
and
hlt
add
adc
sbb
mov
fdivrs
xlat
lret
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
test
jp
jg
repz
adc
pop
mov
xor
dec
push
push
imul
aam
aaa
repz
cli
das
dec
sub
push
inc
push
idivl
push
cli
pushf
sub
mov
rorl
aaa
jns
or
sarl
mov
push
mov
lret
repz
nop
repz
sub
pop
mov
scas
cmpl
sarl
and
idivb
mov
or
stc
jl
lods
inc
sbb
or
or
test
das
jnp
add
push
mov
adcb
shlb
inc
add
in
lods
mov
repz
cs
cmpl
sarl
es
test
sub
jo
and
jo
sub
jl
arpl
repz
sub
cmpl
sarl
and
jg
fwait
aam
aaa
repz
cli
sub
push
inc
push
divl
push
cli
rol
jno
in
sbb
pop
dec
mov
mov
adc
cld
inc
add
sbb
xorl
sub
xor
subl
in
loope
aas
test
adc
or
xlat
imul
aam
aaa
repz
cli
sub
xor
push
inc
push
idivl
push
cli
dec
push
or
sbb
sub
sub
xorb
rcrl
mov
or
xlat
int
aaa
repz
mov
adc
push
sub
cld
movntq
jg
dec
lcall
lods
mov
repz
sub
pop
mov
scas
cmpl
sarl
and
dec
mov
mov
lods
mov
ljmp
inc
ss
xor
mov
decb
fdivl
arpl
jl
enter
add
pop
mov
xor
enter
sarl
xor
adcl
sub
cmpl
sarl
and
add
pop
orl
les
cmpsb
ficomps
and
inc
mov
push
fdiv
loope
loopne
inc
sub
sub
sarl
das
ja
jae
fisttpll
je
orl
xor
sarl
mul
out
gs
enter
sarl
jp,pn
inc
push
pop
aaa
jno
sub
mov
sub
aaa
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
xchg
sarl
jp
mov
ret
scas
cmpsb
arpl
sbb
push
pslld
jg
sarl
jl
arpl
je
arpl
jmp
test
sub
insb
push
mov
xchg
push
cld
js
jmp
repz
xor
jnp
stos
mov
repz
sub
cmpl
sarl
and
and
lret
outsl
insl
push
cld
inc
add
push
mov
cld
enter
test
jns
inc
mov
out
and
jmp
mov
lods
repnz
pop
fnstenv
sarl
repz
cmp
sarl
sub
scas
cmpl
sarl
and
sub
xor
mov
dec
js
test
jl
jg
repz
aaa
and
xorb
rcrl
mov
or
xlat
int
aaa
repz
mov
lods
sbb
sbb
inc
cld
lods
mov
js
adcb
add
aad
mov
fwait
aam
aaa
repz
cli
sub
push
notl
push
idivl
push
cli
xchg
mov
cmp
xchg
push
cld
stos
hlt
lahf
fsubrl
fwait
push
cld
enter
sarl
mov
adc
in
lods
mov
lock
fdivl
sbb
lret
and
cmpsl
jl
or
xlat
lret
push
mov
mov
pop
cmp
xchg
sbb
mov
movsb
arpl
jp
mov
jmp
arpl
mov
adcl
repz
pop
imul
pushf
lds
repz
in
jge
loop
icebp
lods
mov
gs
cld
dec
rclb
xlat
lret
movsl
call
and
icebp
sarl
jns
or
sbb
aaa
ljmp
jle
test
div
outsl
bound
jecxz
mov
mov
add
aaa
les
pop
das
xlat
lret
repz
jo
insb
push
cld
dec
or
lds
jbe
cld
push
mov
aaa
repz
test
gs
outsl
mov
outsb
xchg
inc
nop
jb
mov
insb
push
cld
js
or
fisubs
cs
xlat
lret
jl
hlt
aaa
xlat
lret
and
arpl
pushf
sarl
repz
hlt
xor
gs
cld
imul
mov
sar
adc
mov
repz
aam
aaa
repz
cli
das
dec
sub
push
inc
push
idivl
push
cli
and
mov
aam
aaa
cld
lods
mov
dec
out
push
cld
sbb
repz
aaa
es
mov
or
xlat
int
aaa
repz
mov
inc
cmp
lods
cld
pop
in
mov
repnz
pushf
int3
jg
repz
fwait
pop
jmp
roll
aam
mov
jp
je
xlat
lret
cmpsl
stos
arpl
jl
inc
inc
xlat
lret
repnz
repz
sub
pop
mov
scas
cmpl
sarl
and
dec
jns
sbb
mov
push
cld
jno
push
stc
sarl
neg
adc
fcoms
fnstenv
pop
mov
or
lret
xrelease
push
out
xor
mov
dec
xchg
cmp
cmpsl
cmp
cli
mov
lea
lods
mov
decb
aaa
repz
sbb
lret
sbbl
aaa
repz
lods
repz
xor
lret
and
xorb
rcrl
mov
or
xlat
int
aaa
repz
mov
test
mov
pop
jb
js
jg
repz
sbb
loope
mov
xchg
dec
cld
repz
lods
mov
cld
rorl
aaa
dec
mov
jecxz
mov
push
cld
rorb
aaa
sbb
push
pslld
jg
sarl
jl
arpl
je
arpl
in
sarl
xor
pop
pop
inc
fiadds
fmul
iret
arpl
repnz
sarl
repz
cmp
sarl
xor
cmpl
sarl
sub
mov
fisubl
xchg
sbb
xchg
jg
sub
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
xchg
sahf
ljmp
mov
int
and
or
aaa
sbb
dec
pslld
jg
sarl
jle
lea
je
arpl
lock
xor
jmp
inc
add
aaa
repz
insb
cmp
addb
xchg
mov
mov
push
pslld
jg
sarl
jg
test
je
arpl
ljmp
pop
adc
dec
cld
nop
dec
cmpsl
mov
outsb
push
cld
dec
hlt
xchg
fldcw
insl
push
cld
imul
aam
aaa
repz
cli
das
dec
sub
push
inc
push
divl
push
cli
lcall
xor
adcl
repz
cmpb
repz
push
sub
cmpl
sarl
and
loopne
cmp
cli
imul
push
outsb
gs
movsl
adc
cwtl
adc
ja,pn
jg
repz
cwtl
je
arpl
repz
cmp
sarl
sub
scas
cmpl
sarl
and
mov
into
movsb
cld
pop
shrb
pop
mov
repz
rcr
add
je
fidivl
push
std
sarl
shlb
stos
mov
mov
adcl
mov
arpl
cwtl
jl
mov
aaa
and
xorb
rcrl
mov
or
xlat
int
aaa
repz
mov
into
add
sar
dec
add
fistpl
jmp
cmp
shrl
sahf
lcall
or
xlat
sbb
jp
fucomi
aad
sub
es
mov
or
xlat
int
aaa
repz
mov
jmp
push
push
into
dec
adc
inc
mov
scas
test
adc
repz
repz
sub
cmpl
sarl
and
add
pop
cmc
push
jl
pushf
xlat
lret
xchg
and
sbb
push
pslld
jg
sarl
cmpb
je
arpl
jmp
jg
xor
fadd
push
lods
push
xlat
lret
xchg
mov
jg
repz
int
and
aaa
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
xlat
loopne
sbb
mov
repz
cmp
les
nop
and
aam
cmpsb
sub
or
rclb
repnz
sarl
jg
test
je
arpl
call
add
ds
sbb
shrl
sub
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
pop
mov
adcl
sbb
cmp
xchg
icebp
mov
es
push
sbb
push
pslld
jg
sarl
jl
arpl
je
arpl
out
jg
xor
xor
lret
lea
fucomi
aad
or
jnp
insl
push
adcl
repz
xchg
lahf
inc
mov
jb
push
stc
sarl
movsb
mov
push
bound
push
and
push
lods
into
jnp
dec
and
xlat
lret
xchg
and
sbb
push
pslld
jg
sarl
cmpb
je
arpl
out
jg
xor
xchg
jl
push
xor
mov
fnstenv
and
push
repz
lret
shr
das
ret
stos
push
subb
les
pop
jg
jl
mov
lods
or
ds
xlat
lret
addr16
xor
mov
ja
test
aam
aaa
repz
push
mov
ja,pn
jg
repz
aam
aaa
repz
cli
sub
push
notl
push
test
push
cli
stos
push
xor
inc
xor
lret
repz
repz
mov
scas
cmpl
sarl
and
in
jmp
inc
jg
in
rorb
mov
dec
dec
bnd
adc
pop
cmpsb
adc
subl
hlt
adc
cmp
insl
nop
cmp
push
test
or
stos
inc
and
cmpsl
inc
fldt
cmp
lea
dec
hlt
mov
andl
jg
fwait
aam
aaa
repz
cli
sub
push
inc
push
divl
push
cli
mov
fld
pop
fidivs
sbb
pusha
out
mov
repz
xor
add
jb
fmul
iret
arpl
repnz
sarl
cmpsl
jle
dec
jb
mov
ja,pn
xorb
imul
aam
aaa
repz
cli
das
dec
sub
push
inc
push
idivl
push
cli
je
imul
pop
push
dec
in
icebp
push
cld
imul
aam
aaa
repz
cli
sub
push
notl
push
divl
push
cli
inc
out
int
cmp
push
cli
les
imull
adcb
jg
fwait
aam
aaa
repz
cli
das
dec
sub
push
inc
push
idivl
push
cli
cmp
ret
xchg
jp
or
stos
and
sbb
push
pslld
jg
sarl
jg
test
je
arpl
call
add
xchg
adc
mov
je,pt
cld
sbbl
push
jecxz
jg
lds
iret
nop
int3
mov
mov
mov
adc
jae
jl
or
lret
xchg
and
adc
ds
push
xlat
lret
sarl
xchg
repz
sub
rcrb
ljmp
inc
stc
icebp
push
cld
push
cmpsb
out
jns
rclb
and
scas
je
jg
repz
les
fidivl
cmp
shll
in
mov
and
add
mov
sarl
dec
call
fnstsw
sbb
xchg
je
jg
repz
lods
mov
sub
call
data16
jo
repnz
mov
xor
rclb
repnz
sarl
jg
test
je
arpl
in
sarl
xor
ret
scas
mov
mov
andb
subl
pop
pushf
jne
sbb
cs
aaa
repz
sub
adc
sarl
movsb
xchg
jle
sbb
cmp
stc
les
mov
cmp
add
cli
out
and
arpl
jge,pn
jecxz
and
sbb
push
pslld
jg
shll
jl
pop
arpl
je
arpl
out
jg
xor
leave
add
repz
mov
test
xlat
lret
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
repnz
xor
fiadds
jp
fcompl
push
mov
ja,pn
jg
repz
aam
aaa
repz
cli
sub
push
inc
push
divl
push
cli
push
sbb
pop
insl
adc
aaa
repz
jl
cmovs
cmp
mov
sarl
decb
aaa
repz
xchg
adcb
leave
jo
je
jg
repz
jb,pn
jg
repz
gs
in
iret
pop
pusha
shll
pop
push
dec
in
icebp
push
cld
sar
pop
shrl
cwtl
push
cld
fdiv
adc
mov
repz
sub
pop
mov
scas
cmpl
sarl
and
xchg
and
ss
xlat
lret
daa
mov
push
pslld
jg
shll
jl
pop
arpl
je
arpl
call
add
xchg
push
cld
sbb
scas
mov
decb
aaa
repz
aaa
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
mov
mov
push
clc
dec
xlat
lret
adc
push
pslld
jg
sarl
jg
test
je
arpl
call
add
cmc
outsl
or
mov
jg
sbbb
jo
lods
mov
repz
repz
push
sub
cmpl
sarl
and
sahf
fmull
fsubr
mov
xor
xchg
add
jp
dec
pop
or
lods
lcall
mov
xchg
mov
cli
sub
push
notl
push
idivl
dec
cli
test
orl
xor
dec
rclb
sarl
xor
cmpl
sarl
sub
out
imul
lret
fstpt
push
pslld
jg
sarl
jg
test
je
arpl
in
jg
xor
ret
pop
mov
and
jp
ucomiss
jg
repz
xchg
adcb
jnp
cs
enter
sarl
sub
pop
sbb
sub
sbb
push
pslld
jg
sarl
jl
arpl
je
arpl
lock
xor
nop
push
lods
int
cs
push
orb
fcmovne
or
adc
cld
subl
inc
dec
ficompl
imulb
arpl
sbb
mov
xor
fsts
lods
mov
jge
jg
repz
aaa
jae
hlt
stos
jg
lock
cld
imul
aam
aaa
repz
cli
das
dec
sub
push
inc
push
idivl
push
cli
shrb
cmpsl
repz
push
push
pop
xor
push
fwait
xorb
mov
push
movsb
cmp
lret
pop
mov
xor
enter
sarl
dec
cli
sub
fwait
mov
insb
lahf
cmpsb
fiaddl
clc
fldt
push
add
xchg
pcmpgtw
mov
je
or
sarl
in
jg
dec
subb
sahf
testl
adc
ucomiss
jg
repz
sarl
adc
pop
adc
sarl
xor
ret
inc
cmp
cmp
push
aaa
repz
imul
aam
aaa
repz
cli
das
dec
sub
push
inc
push
idivl
push
cli
pushf
or
sahf
xor
mov
xor
dec
hlt
dec
fsubrs
mov
repz
pop
mov
cld
dec
cld
jecxz
lods
mov
repz
cs
cmpl
sarl
es
into
arpl
push
and
push
mov
data16
rclb
repnz
sarl
jg
test
je
arpl
call
add
inc
jno
lods
add
cmp
lret
es
aaa
repz
jne
cli
jle
mov
or
xlat
imul
aam
aaa
repz
cli
sub
push
inc
push
idivl
push
cli
ret
aad
loop
xchg
mov
sub
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
in
aas
mov
mov
repz
outsl
data16
cld
fadds
hlt
lods
mov
repz
sub
pop
mov
scas
cmpl
sarl
and
cmpsl
cs
xor
push
stc
jl
push
push
test
repz
ja
arpl
mov
je
xlat
lret
lea
clc
cmp
repz
scas
and
push
inc
xchg
push
cld
out
das
adc
sarl
sub
aad
pop
ret
dec
jne
andb
and
pop
adc
add
repnz
outsl
pop
gs
cld
enter
iret
jg
repz
outsb
jp
or
jnp
lock
lret
divl
jmp
fldenv
xchg
xchg
mov
jo
lods
mov
cli
lods
mov
cmc
sarl
cli
mov
xlat
lret
pop
leave
arpl
ret
xor
lret
cmc
dec
adc
or
mov
mov
fcoml
int3
xlat
lret
repz
hlt
inc
js
xlat
lret
lods
mov
or
push
je
xlat
lret
hlt
enter
sarl
outsl
lret
cld
push
in
fldcw
fmuls
lret
pop
leave
arpl
jp
js
xlat
lret
repz
inc
stc
stos
push
cld
imul
aam
aaa
repz
cli
sub
push
notl
push
test
push
cli
xchg
pop
sub
xlat
lret
fcoml
cmp
xlat
lret
pop
mov
sbb
lret
jg
arpl
jp
sub
xlat
lret
cld
sarl
repz
sub
pop
mov
scas
cmpl
sarl
and
aaa
or
mov
mov
cmp
sarl
sub
pop
mov
scas
cmpl
sarl
and
cmc
xor
pop
hlt
gs
pop
in
test
fwait
aam
aaa
repz
cli
sub
push
inc
push
idivl
push
cli
fstps
jg
repz
cs
aaa
repz
push
pop
push
lock
pusha
movsb
roll
aam
mov
dec
cmp
sbb
movb
repz
jp
pop
mov
ficompl
add
hlt
xor
lods
orl
clc
jns
or
mov
mov
cmpsl
cmp
sarl
cs
cmpl
sarl
es
shr
add
or
rorb
repnz
sarl
jle
lea
je
arpl
jmp
jg
xor
or
pushf
les
repz
aam
mov
stos
aam
fwait
sub
sbb
aam
xlat
lret
ja
jg
repz
fsubl
aam
xor
jg
repz
lret
mov
dec
sbb
fsubrl
jg
fwait
aam
aaa
repz
cli
sub
xor
push
inc
push
idivl
push
cli
pop
mov
arpl
repz
sarl
dec
dec
fwait
push
cld
push
cld
pop
cmc
lods
mov
decb
xor
rorl
les
arpl
jb
jl
xlat
lret
jne
xorl
sbb
push
cmpsb
pop
mov
outsl
or
sbb
dec
pslld
jg
sarl
jle
lea
je
arpl
out
jg
xor
cmp
lret
testl
xor
jg
jecxz
xor
dec
enter
sub
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
pop
scas
sub
imull
and
je
aas
push
fidivrs
dec
outsl
jns
dec
cld
pop
shrb
mov
js,pn
jg
repz
adc
stc
mov
or
jmp
aaa
repz
dec
cmpsl
rcll
sub
inc
or
inc
cmpsb
arpl
adc
rorb
aaa
jl
mov
xlat
lret
repz
repnz
xchg
repz
xchg
push
inc
xchg
addr16
adc
sarl
cmc
mov
xchg
dec
call
and
aaa
and
push
repz
cmp
fs
push
nop
pop
scas
xor
adcb
mov
scas
adcl
sarl
push
ljmp
sbb
push
jo
inc
lock
pop
push
add
pop
mov
dec
jg
repz
jns
jg
repz
jl
arpl
pushf
lret
repz
divb
push
xchg
repz
sub
cmpl
sarl
and
ds
xlat
mov
xor
rclb
sarl
shll
jnp
arpl
je
arpl
in
sarl
cmp
ds
xchg
cmp
dec
sbb
out
lods
mov
cld
imul
aam
aaa
repz
cli
sub
xor
push
inc
push
idivl
push
cli
push
orb
jnp
arpl
and
cld
repnz
mov
repz
gs
pop
mov
mov
fdivrl
icebp
push
cld
imul
aam
aaa
repz
cli
sub
push
notl
push
idivl
push
cli
jl
aam
xchg
inc
xor
fcoml
arpl
mov
xchg
aaa
repz
aaa
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
movsl
shl
add
mov
mov
inc
mov
xchg
repz
cmp
sarl
xor
cmpl
sarl
sub
repz
and
outsb
xor
ja
cld
dec
add
in
mov
repz
sub
cmpl
sarl
and
test
repz
mov
arpl
jl
repnz
xor
mov
rclb
repnz
sarl
jge
push
arpl
je
arpl
call
add
xor
rclb
repnz
sarl
cmpb
je
arpl
in
jg
xor
add
shll
jno
mov
mov
ret
jg
repz
das
ja
sti
data16
and
push
mov
sub
jg
mov
xor
lahf
sub
sahf
mov
push
mov
repz
loope
pop
cltd
jb
shll
pop
aas
cmpsl
xor
or
sub
adc
and
aas
orb
jle
jge
jecxz
and
sbb
push
pslld
jg
sarl
cmpb
je
arpl
out
jg
xor
push
xlat
lret
call
sarl
pop
push
inc
btc
jecxz
je
and
pop
flds
xor
inc
lods
xchg
ds
scas
out
jg
mov
aaa
sub
xorb
rcrl
mov
or
xlat
int
aaa
repz
pop
inc
lea
jb
sbbl
xchg
xchg
sahf
lds
adc
addb
sarl
repz
xchg
divb
cmp
pop
mov
repz
les
cmp
mov
xor
ret
jg
arpl
jl
cmp
xlat
lret
repz
cs
cmpl
sarl
es
mov
push
cld
aam
aaa
repz
adc
add
clc
lods
mov
inc
mov
aaa
decb
aaa
repz
mov
pushf
mov
aaa
rep
or
and
nop
cmp
xorl
jb
andl
nop
aaa
pop
ret
cmp
shrl
sarl
in
push
mov
lcall
xchg
in
outsl
jae
rcll
pop
ret
andb
add
negl
adc
dec
mov
cmp
sarl
sub
pop
mov
scas
cmpl
sarl
and
jge
adc
fxam
adc
mov
fmul
iret
arpl
repnz
sarl
shlb
jb
mov
ja,pn
xorb
sar
pop
fsubrl
icebp
push
cld
ljmp
push
push
sub
pop
scas
push
pop
clc
push
imul
fcoms
repnz
mov
inc
mov
ljmp
jg
repz
cmp
sarl
xor
cmpl
sarl
sub
flds
repz
xchg
adcb
jnp
cs
enter
sarl
sub
arpl
dec
hlt
sub
lods
mov
dec
in
icebp
push
cld
dec
sbb
out
mov
push
in
and
repnz
pushf
inc
xlat
lret
mov
rclb
repnz
sarl
jl
arpl
je
arpl
call
test
add
or
sarl
jp
or
mov
mov
stc
imulb
xchg
mov
cli
sub
push
inc
push
idivl
push
cli
leave
mov
sub
es
mov
or
xlat
int
aaa
repz
mov
or
inc
xor
xlat
lret
test
rorb
repnz
sarl
jle
lea
je
arpl
in
sarl
xor
sub
and
mov
jp
pusha
inc
xlat
lret
hlt
sarl
jp
mov
lret
dec
sarl
sbb
dec
pslld
jg
sarl
jle
lea
je
arpl
out
jg
xor
fidivl
cld
enter
sarl
repz
sarl
jo
push
cld
fdiv
adc
mov
repz
sub
pop
mov
scas
cmpl
sarl
and
sti
shl
mov
aaa
repz
xor
aam
clc
pop
sti
shlb
shl
push
xor
mov
xor
rclb
repnz
sarl
jl
arpl
je
arpl
jmp
test
cmpsl
inc
inc
sbb
mov
aas
test
repz
cmc
jp
cmp
subl
adc
pusha
aas
dec
mov
push
insl
push
cld
jl
jecxz
and
jp
adc
xlat
lret
fwait
shll
rclb
repnz
sarl
jg
test
je
arpl
in
jg
xor
ret
mov
lods
repnz
pushf
int3
jg
repz
icebp
dec
ss
push
test
daa
push
mov
ja,pn
jg
repz
jge
ret
int3
lods
sub
jae
movsl
andl
rorl
jb
add
or
iret
lods
testb
dec
jae
inc
and
xor
rorb
repnz
sarl
jle
lea
je
arpl
in
jg
xor
push
add
fdivrs
xlat
lret
pop
pop
mov
xor
mov
xor
sbb
sbb
scas
mov
decb
aaa
repz
aaa
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
testl
adc
fs
xlat
lret
fbstp
jg
ja
test
sarl
repz
fimull
outsb
mov
mov
test
mov
cli
das
dec
sub
push
inc
push
idivl
push
cli
stos
sbb
mov
pusha
or
sbb
push
pslld
jg
sarl
cmpb
je
arpl
in
sarl
xor
dec
das
or
fstpt
hlt
mov
jl
js
xlat
lret
jl
jg
repz
add
insl
std
inc
fsubrl
je
fidivl
sbb
xor
jno
loopne
sti
or
adc
dec
stc
and
aaa
sbb
push
pslld
jg
shll
jnp
arpl
je
arpl
in
jg
cmp
test
addr16
dec
xor
aaa
repz
call
or
call
pop
fiadds
mov
repz
cs
cmpl
sarl
es
leave
rorb
mov
shrl
aaa
repz
call
ret
aaa
jmp
or
xlat
imul
aam
aaa
repz
cli
sub
xor
push
inc
push
idivl
push
cli
gs
or
adc
jb
pop
mov
aaa
repz
dec
lods
arpl
push
test
aaa
sbb
push
pslld
jg
sarl
jge
push
arpl
je
arpl
out
jg
ss
sub
push
test
repz
mov
ds
xlat
lret
and
rcrl
mov
or
xlat
int
aaa
repz
mov
pop
jecxz
push
test
repz
add
jp
jg
lock
cld
ljmp
pop
push
pop
adc
out
and
movsb
push
cld
mov
decb
repz
aaa
and
xorb
rcrl
mov
or
xlat
int
aaa
repz
mov
subb
iret
jg
repz
mov
xchg
arpl
repz
rol
inc
pop
or
inc
cli
mov
enter
sarl
pushf
enter
clc
lds
movsb
cmp
in
cmp
aam
jo
and
xchg
test
xchg
adc
add
cwtl
mov
jg
es
jg
imul
aam
aaa
repz
cli
sub
push
inc
push
idivl
push
cli
jle
rolb
push
imul
aam
aaa
repz
cli
sub
push
notl
push
idivl
push
cli
xchg
dec
mov
sbb
cld
jl
xchg
je
lods
int
ss
push
xlat
lret
fcmovne
jg
fwait
sarl
repz
or
dec
xor
rclb
repnz
sarl
jl
arpl
je
arpl
jmp
test
in
mov
lods
add
fidivl
lds
sub
xorb
rcrl
mov
or
xlat
int
aaa
repz
lahf
cmp
jp
xchg
push
xlat
lret
repz
dec
sub
add
cltd
jno
cmp
xchg
repz
loope
jl
mov
test
mov
pop
jg
jp
mov
lods
sub
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
imull
mov
enter
sub
lret
enter
repz
mov
aaa
repz
mov
mov
cmp
lret
je
sub
mov
test
mov
cli
das
dec
sub
push
inc
push
idivl
push
cli
or
mov
test
add
les
jp
les
xlat
lret
ja
arpl
mov
clc
cmp
hlt
sarl
adc
test
repz
popa
hlt
loopne,pt
xlat
lret
inc
rcll
ja
fs
cld
js
cmpsb
dec
mov
xor
xchg
jg
adc
jae
cwtl
push
repz
mov
psrad
jg
jp
adc
out
lcall
xchg
sub
sarl
sbb
mov
dec
cld
addr16
lods
mov
lcall
xchg
xchg
lcall
daa
lods
mov
ret
cld
dec
cld
dec
lods
mov
out
lods
mov
cmc
sarl
ret
xor
lret
jae
arpl
hlt
push
fcoml
lret
xor
xchg
jle
push
cld
push
mov
aaa
repz
in
stos
mov
jb
jg
repz
sarl
jp
cmp
xlat
lret
ret
mov
lret
push
mov
aaa
repz
lods
aas
mov
jo
xlat
lret
test
idiv
jnp
add
lret
pushf
sarl
repz
hlt
fildl
jg
cmp
sarl
sub
scas
cmpl
sarl
and
orl
aaa
repz
mov
or
xlat
int
aaa
repz
mov
movsb
sbb
cld
imul
aam
aaa
repz
cli
sub
push
notl
push
idivl
push
cli
stos
pop
mov
push
bound
sbb
xor
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
xchg
movsb
mov
mov
push
sahf
push
cld
push
mov
aaa
repz
sbb
daa
sub
pop
pop
aad
sbb
sub
and
xorb
rcrl
mov
or
xlat
int
aaa
repz
mov
sub
sarl
decb
aaa
repz
ja,pn
jg
repz
sarl
jge
jg
rep
rcll
repz
sub
cmpl
sarl
and
sbb
jnp
and
imul
fisubrs
aaa
and
rcrl
mov
or
xlat
int
aaa
repz
mov
fwait
sub
push
clc
dec
xlat
lret
es
mov
or
xlat
int
aaa
repz
mov
push
fdiv
mov
mov
xor
sarl
adc
movb
repz
aaa
and
rcrl
mov
or
xlat
int
aaa
repz
mov
jl
dec
mov
adc
in
lods
mov
repz
cs
cmpl
sarl
es
or
rclb
repnz
shll
jl
pop
arpl
je
arpl
call
add
aas
orb
jns
cmp
mov
cmp
mov
popa
push
cld
imul
aam
aaa
repz
cli
sub
push
notl
push
idivl
dec
cli
aas
jo
cli
jmp
arpl
jb
aam
xlat
lret
ja
jg
repz
aam
aaa
repz
cli
sub
push
inc
push
divl
push
cli
xchg
and
ss
mov
sub
mov
push
test
repz
mov
dec
sarl
repz
xchg
les
mov
dec
rclb
lret
out
sub
scas
mov
repz
xor
cmpl
sarl
sub
mov
repz
int3
dec
ds
jle
cld
or
mov
xor
sarl
ja
sahf
push
cld
jb
fmul
iret
arpl
repz
sarl
repz
push
sub
cmpl
sarl
and
add
repz
jb
jl
xlat
lret
ja
xorl
outsl
add
ret
fmul
iret
arpl
repnz
sarl
push
jno
repz
arpl
adc
sbb
xor
rclb
repnz
sarl
jg
test
je
arpl
in
jg
xor
ret
inc
test
repz
mov
or
mov
sarl
jae
mov
push
cld
imul
aam
aaa
repz
cli
sub
push
inc
push
idivl
push
cli
nop
pop
adc
sarl
fsubr
out
aad
sub
dec
xlat
lret
stos
outsl
add
jb
ja
mov
and
les
lods
repnz
incb
aaa
repz
subl
sarl
out
mov
jb
mov
sub
and
rcrl
mov
or
xlat
int
aaa
repz
mov
cli
or
ljmp
scas
push
xor
pop
sti
in
popf
sbb
xor
movl
cwtl
sub
push
ljmp
pslld
jg
sarl
jge
push
arpl
je
arpl
out
jg
ss
dec
cmc
ljmp
jge
add
hlt
jns
mov
xor
dec
xor
lret
xchg
and
sbb
push
pslld
jg
shll
jl
pop
arpl
je
arpl
in
sarl
xor
test
inc
repz
in
jg
pavgb
mov
adc
xorl
roll
or
pop
sub
dec
fucomi
aad
test
repz
cwtl
sub
cmpsl
dec
repz
pop
and
add
leave
push
sti
sti
dec
or
cmp
lods
mov
rcll
aaa
and
xorb
rcrl
mov
or
xlat
int
aaa
repz
mov
int3
xchg
cmp
je
adc
sarl
sbb
mov
jp
push
xchg
adc
mov
adc
sarl
out
mov
mov
icebp
cli
sbb
mov
cltd
dec
add
in
mov
repz
sub
scas
cmpl
sarl
and
push
in
cmp
sub
dec
cld
inc
std
lods
mov
cld
jb
in
cmpsb
arpl
jl
sub
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
xchg
aam
xor
enter
cmpsl
sub
sarl
sub
ror
inc
inc
sbb
inc
in
dec
enter
sarl
lods
loop
mov
into
sub
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
push
movsb
out
fsubrl
orb
inc
jg
repz
aaa
repz
rclb
jmp
inc
pushf
push
inc
adc
arpl
pop
mov
lods
mov
fdiv
cli
inc
mov
jns,pn
jg
rep
adc
shrl
push
cld
imul
adc
cwtl
adc
add
xlat
dec
in
cmp
xchg
aaa
repz
and
in
stc
je
sub
int3
mov
rorb
adc
jno
in
and
and
aad
sub
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
xchg
test
cs
clc
js
repz
dec
jge
pop
xor
jmp
jge,pn
jg
repz
andb
push
xchg
js
jno,pn
jg
repz
jmp
sbb
and
nopl
jae
cld
sbb
es
movsb
and
repz
sub
cmpl
sarl
and
mov
dec
sbb
into
push
adc
cmc
lods
mov
repz
repz
sub
pop
mov
scas
cmpl
sarl
and
adc
sahf
mov
paddw
jg
push
jmp
mov
ss
hlt
cmp
mov
test
aaa
jl
dec
pop
xlat
lret
outsl
into
jg
cld
push
cld
adc
mov
decb
aaa
repz
aaa
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
jb
pop
fwait
arpl
pushf
cwtl
jg
repz
aam
aaa
repz
cli
sub
push
notl
push
idivl
push
cli
adc
leave
mov
dec
mov
sub
roll
hlt
adc
cmp
test
xor
icebp
stos
and
nop
cmp
xorl
jb
andl
dec
pop
ret
andb
cmpl
int
mov
lcall
pslld
jg
sarl
jl
arpl
je
arpl
jmp
test
dec
imul
fsubrl
push
jl
xlat
lret
js
xorl
imul
aam
aaa
repz
cli
sub
xor
push
inc
push
idivl
push
cli
pop
adc
push
cld
rorl
aaa
sbb
push
pslld
jg
shll
jl
pop
arpl
je
arpl
lock
xor
mov
loop
scas
mov
lret
out
pusha
cs
xor
rorb
repnz
sarl
jle
lea
je
arpl
lock
xor
sub
and
in
enter
sarl
jecxz
jg
xlat
jle
fldcw
lock
cwtl
push
cmpsb
adc
sub
xlat
lret
and
rcrl
mov
or
xlat
int
aaa
repz
mov
test
repz
leave
sarl
rclb
jp
sub
js
mov
stc
icebp
push
cld
imul
aam
aaa
repz
cli
sub
push
notl
push
idivl
cli
jmp
pop
lods
mov
sub
xlat
lret
hlt
roll
pslld
jg
sarl
jl
arpl
je
arpl
jmp
jg
xor
fldenv
leave
add
repz
and
push
les
push
subl
push
adcb
mov
xor
dec
js
xlat
lret
out
arpl
jp
sub
lret
stos
and
decb
repz
aaa
jp
rclb
sub
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
mov
cmp
push
cld
outsl
decb
repnz
ficompl
imul
aam
aaa
repz
cli
sub
xor
push
inc
push
idivl
push
cli
mov
mov
sahf
jl
stc
testb
fisubrs
or
fwait
aam
aaa
repz
cli
sub
xor
push
inc
push
idivl
push
cli
cmp
mov
repz
push
and
clc
std
insl
test
scas
dec
ret
cld
js
mov
enter
dec
aad
test
repz
push
movsl
gs
push
cs
cmpb
add
xchg
jp
sub
fmull
dec
xlat
lret
dec
mov
mov
aaa
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
xchg
mov
fiaddl
and
insb
push
cld
imul
aam
aaa
repz
cli
sub
push
notl
push
idivl
push
cli
and
movsb
sbb
ret
xchg
jmp
aaa
repz
lcall
fwait
dec
mov
pushf
mov
mov
adc
out
gs
aam
cmp
hlt
sub
test
inc
jb
arpl
fdiv
adc
mov
xor
cld
fcoms
jecxz
mov
repz
sub
cmpl
sarl
and
lock
ret
jg
repz
inc
test
push
dec
scas
add
mov
cmp
jno
cld
rorl
aaa
sbb
dec
pslld
jg
sarl
jle
lea
je
arpl
out
jg
xor
xrelease
popa
int
imul
and
aaa
repz
push
repz
sub
xchg
and
or
cmp
rcrl
cwtl
adc
or
push
mov
sub
clc
pop
push
cld
jle
addl
sub
ret
stos
mov
cwtl
aaa
repz
add
scas
jbe
mov
pop
fistpll
fmuls
lret
dec
in
icebp
push
cld
outsl
add
mov
mov
xor
sub
lret
pop
arpl
icebp
enter
sarl
repz
cmp
sarl
xor
cmpl
sarl
sub
popa
xchg
pop
pop
hlt
mov
jb
push
cld
imul
aam
aaa
repz
cli
sub
push
notl
push
divl
push
cli
pop
insl
inc
imul
and
aaa
sbb
push
pslld
jg
sarl
jg
test
je
arpl
lock
xor
ret
adc
adc
add
clc
lods
mov
repz
repz
sub
cmpl
sarl
and
dec
mov
jge
lcall
sbb
pop
xchg
or
adc
imulb
dec
push
nop
dec
jne,pn
jg
repz
sub
jo
and
jo
sub
imulb
jg
repz
push
sub
cmpl
sarl
and
and
dec
scas
jnp
aam
xlat
lret
stos
movsl
arpl
sbb
sub
es
mov
or
xlat
int
aaa
repz
mov
out
sbbb
pop
adc
cmc
sbb
dec
add
enter
mov
or
ret
repz
pop
out
cltd
mov
xchg
lea
mov
mov
cs
aaa
repz
adc
aaa
repz
xchg
adcb
leave
jo
sub
jo
adc
push
jle
imul
aam
aaa
repz
cli
sub
push
notl
push
idivl
push
cli
stos
pushf
movsb
test
jnp
jo
add
jg
repz
es
repz
aam
aaa
repz
cli
sub
xor
push
inc
push
idivl
push
cli
inc
mov
test
mov
cli
sub
xor
push
inc
push
divl
push
cli
or
shll
sbb
jle
add
lret
sub
xorb
rcrl
mov
or
xlat
int
aaa
repz
mov
ja
lds
repz
popf
lret
hlt
inc
dec
jne
out
sahf
pop
push
scas
fs
addb
sub
and
xorb
rcrl
mov
or
xlat
int
aaa
repz
mov
in
fwait
sarl
ljmp
sarl
or
bound
xlat
stos
in
pop
mov
jnp
movsb
imul
aam
aaa
repz
cli
sub
push
notl
push
idivl
cli
nop
mov
xchg
sbb
push
cld
cmp
pop
mov
xor
enter
sarl
repz
cmp
sarl
sub
scas
cmpl
sarl
and
dec
test
repz
mov
sbb
mov
jp
mov
xlat
lret
jecxz
jg
sub
cmpsb
bound
adc
test
xchg
repz
sub
cmpl
sarl
and
pushf
jo
dec
sbb
aad
mov
push
mov
inc
lods
mov
in
jg
fwait
sarl
repz
or
cmp
jp
add
xlat
lret
es
mov
or
xlat
int
aaa
repz
mov
inc
ficoml
inc
xchg
cmc
rorb
pop
push
cld
imul
aam
aaa
repz
cli
sub
xor
push
inc
push
divl
push
cli
pop
js
test
orb
adc
mov
and
jg
mov
dec
xchg
pushf
lret
jg
repz
push
popa
cltd
xor
sarl
xchg
jmp
aaa
repz
rcrb
dec
pop
sbb
lods
sub
jo
sub
push
cwtl
arpl
test
mov
cli
sub
xor
push
inc
push
divl
push
cli
push
dec
xorl
insl
mov
aaa
sbb
push
pslld
jg
sarl
jl
arpl
je
arpl
out
jg
xor
cltd
psubb
jg
sbb
adc
ljmp
faddl
xchg
hlt
and
adc
repz
sbb
push
pslld
jg
sarl
jl
arpl
je
arpl
in
jg
xor
mov
xor
adc
push
fdiv
cmpsl
std
lods
mov
repz
sub
scas
cmpl
sarl
and
push
jmp
jle
js
jl
mov
xlat
lret
stos
jb
fimuls
lods
mov
jg
jp
out
ss
int3
jg
repz
stos
stos
dec
imul
fcompl
xor
xchg
and
jb
xorb
dec
sbb
loopne
mov
inc
or
mov
dec
iret
jg
repz
hlt
xchg
rep
mov
imul
push
testl
xchg
xchg
mov
je
inc
insl
out
push
mov
sub
mov
insb
imulb
cltd
mov
and
mov
enter
sarl
adc
scas
xchg
push
cld
jb
cmp
sarl
fwait
sarl
jl
je
jns
adc
out
mov
xor
ja
les
mov
xor
mov
cld
push
mov
aaa
repz
xor
sarl
inc
fs
aaa
popf
iret
sub
repz
fisttpll
rcl
jg
jl
jo
xlat
lret
mov
arpl
jl
sbb
lret
hlt
enter
sarl
jb
les
lret
xchg
mov
mov
out
lods
mov
cld
push
rclb
sarl
repz
hlt
jg
test
ja
cld
ljmp
int3
in
aas
or
xor
scas
fcmovbe
test
aaa
sub
xorb
rcrl
mov
or
xlat
int
aaa
repz
add
sahf
clc
jecxz
or
ss
push
xlat
lret
imul
pslld
jg
sarl
jge
push
arpl
je
arpl
jmp
jg
ss
lods
adc
sbb
in
mov
repz
repz
aaa
es
mov
or
xlat
int
aaa
repz
mov
mov
dec
imul
mov
push
mov
mov
cs
add
loop
mov
repnz
sbb
push
pslld
jg
shll
jl
pop
arpl
je
arpl
out
jg
xor
loopne
xorb
dec
pslld
jg
sarl
jle
lea
je
arpl
call
add
nop
stos
or
loopne
mov
rcll
push
repnz
adc
pop
mov
repz
sub
cmpl
sarl
and
ljmp
mov
ret
inc
out
pop
aaa
repz
aaa
sub
xorb
rcrl
mov
or
xlat
int
aaa
repz
and
cmp
lret
and
xorb
rcrl
mov
or
int
jae
int
aaa
repz
xchg
aaa
adc
jo
or
cmc
lods
mov
js
jg
repz
les
repz
adc
and
inc
bound
push
rcll
jo
and
mov
aam
mov
dec
rolb
aam
mov
jns
fisubrs
arpl
repz
sarl
outsl
lret
cld
sbb
repz
inc
jl
lods
xor
rclb
repnz
shll
jl
pop
arpl
je
arpl
in
sarl
xor
add
mov
sbb
push
pslld
jg
shll
jl
pop
arpl
je
arpl
out
sarl
xor
xor
and
xlat
lret
iret
iret
arpl
repz
sarl
inc
push
adcb
cld
pop
cmc
lods
mov
decb
xor
shrl
aaa
and
rcrl
mov
or
xlat
int
aaa
repz
mov
test
cs
fimull
fdivrl
push
jl
xlat
lret
jne
xorb
dec
sbb
shrb
or
fidivl
sbb
lret
imull
test
mov
cli
das
dec
sub
push
inc
push
test
push
cli
mov
sub
adc
fidivs
mov
sarl
repz
sub
cmpl
sarl
and
movsb
pop
adc
add
nop
ret
or
and
pop
mov
push
mov
pop
xor
push
push
call
and
pop
mov
addl
inc
push
ret
fucomp
dec
sub
and
mov
nop
push
jnp
pusha
popa
pop
push
push
push
pusha
popa
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
hlt
bound
push
push
call
and
pop
mov
addl
inc
push
ret
sub
pop
int
mov
push
jmp
add
pop
push
and
iret
stc
iret
aad
loope
addl
call
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
fwait
shr
jmp
add
push
push
call
and
pop
mov
addl
inc
push
ret
outsb
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jg
add
add
add
mov
mov
or
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
bound
rcl
stos
mov
mov
call
mov
add
adc
sahf
es
test
dec
pop
sbb
mov
push
mov
pop
push
pusha
jmp
mov
add
pop
push
addl
add
push
pop
popa
mov
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
and
enter
outsb
inc
sbb
push
push
push
je
pusha
popa
rdtsc
push
push
push
push
rdtsc
pop
pop
rdtsc
jo
pop
pop
pop
pop
xorl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
sub
pop
or
push
data16
jmp
aam
or
pusha
fimuls
adc
std
das
sub
popa
lea
xor
nop
pusha
jmp
scas
jnp
dec
and
push
push
rdtsc
pop
pop
jmp
xchg
movsl
cs
mov
push
push
leave
pop
popa
popa
push
jmp
hlt
call
movswl
call
push
push
call
and
pop
mov
addl
inc
push
ret
xor
adc
and
popa
push
push
call
and
pop
mov
addl
inc
push
ret
or
mov
add
add
or
mov
movl
cmpl
je
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
popf
jge
pop
aam
adc
add
adc
cld
imul
adc
inc
adc
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sti
cmpl
jne
jle
mov
cmpl
je
or
pushl
mov
clc
call
jmp
xchg
inc
rcr
or
loop
cmc
sub
fdivs
push
call
and
pop
mov
addl
inc
push
ret
pop
adc
cmpsb
mov
and
sub
movswl
movl
movzwl
xchg
pusha
push
push
push
pop
rdtsc
push
pop
pop
pop
jmp
jnp
andl
push
push
push
pusha
popa
rdtsc
push
push
rdtsc
pop
pop
pop
pop
rdtsc
pusha
push
pop
push
push
rdtsc
pop
pop
popa
pop
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
shl
lds
pop
add
into
imul
or
pop
pushl
movswl
call
or
mov
or
mov
mov
mov
mov
xor
mov
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
mov
jae
pusha
xor
popa
push
jmp
sub
movsb
cmp
lret
pushf
sub
mov
pop
cld
lcall
lret
clc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
scas
sarl
mov
lea
xor
push
push
call
and
pop
mov
addl
inc
push
ret
mov
test
mov
and
xor
pushl
clc
call
mov
add
push
push
push
pusha
pusha
popa
push
pop
popa
rdtsc
pusha
push
pop
jmp
fstps
imull
and
mov
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
popa
popf
cmc
fldt
rclb
mov
or
adc
push
push
call
and
pop
mov
addl
inc
push
ret
or
int
and
call
jns
das
lods
mov
pop
mov
popf
jns
and
pop
cmpl
je
movzwl
push
push
push
push
jmp
jmp
cltd
sbb
outsl
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
jno
fldenv
adc
add
push
lock
bound
test
outsb
xor
mov
add
data16
xchg
xchg
fcompl
popa
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
popa
cmpsb
jns
mov
shll
and
call
add
pushl
sbb
call
push
push
call
and
pop
mov
addl
inc
push
ret
shlb
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
or
test
add
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
jmp
test
and
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
ror
sbb
lcall
rcrb
or
and
mov
sbb
mov
dec
repz
decl
or
or
sbb
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
xor
xchg
test
sub
jmp
and
pusha
scas
jg
push
mov
add
jle
mov
pusha
movsl
and
fwait
orl
add
push
pusha
jmp
mov
stos
filds
jp
push
pop
popa
nop
call
repnz
inc
push
fcomi
adc
pop
ss
aaa
adc
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
aad
xchg
jmp
add
out
pop
movsb
ret
push
mov
lea
sub
add
call
jecxz
in
repnz
aaa
xchg
push
pop
pop
push
jmp
les
and
mov
and
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
bound
or
test
dec
or
add
or
xchg
jne
and
push
push
call
and
pop
mov
addl
inc
push
ret
mov
lea
adc
add
xor
xorb
add
jmp
mov
imul
lods
add
add
add
dec
adc
xchg
push
and
call
stos
xchg
jle
pop
enter
cld
xchg
stc
push
fldcw
popa
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
pop
cli
push
push
push
push
push
pop
pop
rdtsc
pusha
pusha
popa
push
pop
popa
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
insb
jle
jmp
inc
adc
push
call
and
pop
mov
addl
inc
push
ret
iret
dec
dec
mov
dec
sldt
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
adc
imul
and
push
mov
pop
lea
push
push
call
and
pop
mov
addl
inc
push
ret
jle
or
nop
push
push
push
push
push
rdtsc
pop
pop
pop
rdtsc
jmp
popa
loope
dec
hlt
test
push
push
jmp
call
dec
jecxz
and
lcall
lods
rdtsc
jmp
dec
pop
scas
push
pop
out
pop
nop
clc
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
adc
mov
movzwl
incl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
movsb
dec
or
push
push
call
and
pop
mov
addl
inc
push
ret
loop
das
fiadds
xchg
inc
inc
inc
or
mov
pushl
mov
call
jmp
mov
jnp
sub
out
mov
in
push
pop
cmp
jae
mov
movzbl
mov
mov
mov
mov
mov
mov
shr
mov
mul
mov
sub
call
loope
fsubl
sub
mov
pop
push
xchg
rcll
or
shr
pop
add
add
addb
add
stc
mov
jmp
jno
inc
aad
push
or
add
mov
add
mov
cmp
jae
jle
mov
jmp
jmp
mov
sub
sbb
out
push
repnz
lea
or
cld
repnz
stc
icebp
push
mov
fsubrl
je
add
andl
xor
mov
mov
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
inc
push
xchg
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsl
repnz
sub
add
add
stos
mov
and
sbb
mov
pop
call
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
test
jns
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
jns
rorb
lods
mov
xor
push
call
and
pop
mov
addl
inc
push
ret
je
or
add
or
sahf
test
fistps
shrb
jge
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
shlb
fs
repnz
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
ja
out
addr16
pop
mov
sbb
mov
or
push
push
call
and
pop
mov
addl
inc
push
ret
std
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
les
mov
jmp
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
pop
xor
inc
add
adcl
or
push
call
and
pop
mov
addl
inc
push
ret
iret
rorb
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
pop
cltd
lcallw
adc
add
add
pop
lea
jmp
inc
mulb
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
mov
mov
add
test
add
jmp
mov
add
test
add
push
push
call
and
pop
mov
addl
inc
push
ret
inc
and
out
inc
xchg
pusha
call
xor
adc
mov
inc
mov
and
pop
pusha
jmp
cmp
jae
mov
popa
popa
cmpl
jbe
mov
mov
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
ret
mov
xchg
fldcw
push
call
and
pop
mov
addl
inc
push
ret
jo
adc
and
push
push
call
and
pop
mov
addl
inc
push
ret
inc
pushf
xchg
pop
rclb
leave
je
jle
cld
mov
adc
sub
xor
mov
nop
push
push
jg
jns
rdtsc
jmp
jbe
pusha
inc
xlat
pop
push
pop
pop
push
push
push
pusha
push
pop
jae
popa
rdtsc
push
push
pusha
popa
rdtsc
jg
pop
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
fadds
orl
push
push
push
call
and
pop
mov
addl
inc
push
ret
repnz
inc
adc
femms
xor
or
andb
xchg
add
add
push
rdtsc
pop
pop
push
pop
popa
xorl
push
push
call
and
pop
mov
addl
inc
push
ret
and
rcr
sbb
sub
test
add
add
or
xchg
lea
or
push
call
and
pop
mov
addl
inc
push
ret
in
jp
pushf
call
mov
pusha
cli
and
mov
imulb
enter
ret
ja
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jg
pop
mov
sbb
or
mov
pop
jmp
mov
mov
add
movl
push
push
call
and
pop
mov
addl
inc
push
ret
jecxz
mov
push
push
call
and
pop
mov
addl
inc
push
ret
loop
nop
or
or
or
add
jp
sbb
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
je
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
scas
jbe
xor
or
push
call
and
pop
mov
addl
inc
push
ret
mov
lea
and
add
mov
xchg
push
push
pusha
jl
push
push
rdtsc
pop
pop
popa
rdtsc
push
jmp
mov
fwait
scas
add
push
jno
insb
pop
mov
pop
pop
pop
push
jns
push
push
push
pop
rdtsc
jg
pop
pop
xchg
movzwl
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
inc
xor
je
sbb
and
ja
mov
push
pusha
push
push
jl
rdtsc
push
pop
pop
pop
jle
jmp
ficomps
push
jle
add
jns
int
popa
xorl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
in
daa
or
push
push
jb
jo
pop
mov
jmp
pop
push
addr16
hlt
cmp
and
or
popa
push
push
call
and
pop
mov
addl
inc
push
ret
call
loop
stc
movl
push
push
call
and
pop
mov
addl
inc
push
ret
test
dec
jnp
arpl
mov
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
push
lcall
shlb
mov
sub
popa
jmp
pusha
mov
pusha
mov
mov
popa
popa
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
clc
jb
inc
inc
in
add
ja
push
pop
push
push
call
and
pop
mov
addl
inc
push
ret
push
pop
movsb
push
test
add
jmp
bound
or
fdivs
push
and
add
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
std
jno
mov
sbb
mov
adc
or
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
lods
push
inc
sub
mov
add
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
inc
in
icebp
jae
je
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
sub
movzwl
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
test
mov
or
add
sahf
mov
insl
scas
xor
in
push
jmp
dec
rolb
mov
push
xchg
pusha
mov
jmp
mov
xchg
cmpsl
movsb
shlb
pushl
sbb
call
push
push
call
and
pop
mov
addl
inc
push
ret
les
popf
jge
and
pop
mov
movswl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
popf
les
add
push
call
and
pop
mov
addl
inc
push
ret
insl
ret
lods
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
fdivl
test
ret
mov
call
mov
sarb
pop
lcall
mov
pop
mov
or
lea
add
mov
sub
push
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
call
sub
push
pusha
jmp
jmp
fcoml
mov
test
jmp
popl
mov
mov
mov
pushl
or
call
cmpl
je
mov
mov
push
push
push
push
push
push
rdtsc
pop
pop
rdtsc
jbe
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ljmp
xor
or
mov
mov
or
push
call
and
pop
mov
addl
inc
push
ret
mov
push
lret
mov
call
jmp
mov
xchg
mov
mov
or
push
call
and
pop
mov
addl
inc
push
ret
cmp
cli
jp
mov
jmp
aam
lods
jecxz
lods
ud0
push
push
call
and
pop
mov
addl
inc
push
ret
mov
or
xor
fisttpl
or
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
in
popf
mov
mov
mov
popa
mov
mov
movb
stc
movl
call
inc
sub
mov
lods
or
or
sub
fcoml
pop
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
lea
out
jg
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
lea
je
cld
push
push
push
pusha
pusha
popa
jmp
ljmp
sbb
and
cmp
outsb
popa
rdtsc
jmp
jb
adc
jns
lahf
add
add
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
out
jnp
lea
adc
or
or
or
add
lea
mov
add
mov
push
push
je
jl
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
add
jmp
inc
cmpsl
adc
ljmp
and
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
test
or
or
mov
push
pop
popa
pop
call
sbb
lea
mov
call
jmp
ret
cmp
ret
push
in
cltd
jl
lret
jne
and
add
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
jns
aaa
stos
into
lods
jae
or
mov
add
adc
jmp
sub
mov
jno
hlt
out
loop
xchg
or
pop
push
or
push
jmp
dec
out
mov
pop
roll
je
add
push
push
call
and
pop
mov
addl
inc
push
ret
or
push
clc
jo
add
jb
pusha
mov
mov
popa
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
and
push
cltd
or
clc
jmp
call
pop
sub
call
dec
test
mov
mov
pop
call
cli
mov
add
in
negb
pop
pop
push
push
call
and
pop
mov
addl
inc
push
ret
faddp
in
mov
mov
les
or
or
push
call
and
pop
mov
addl
inc
push
ret
or
lret
es
push
push
push
push
pop
rdtsc
pusha
popa
pop
pop
pop
push
pusha
jl
jmp
mov
movsl
ljmp
js
pusha
popa
popa
nop
mov
pushl
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
or
mov
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
or
push
push
call
and
pop
mov
addl
inc
push
ret
push
or
push
addr16
mov
and
je
mov
pushl
sub
mov
call
jmp
or
mov
mov
out
push
add
pop
in
mov
cmp
jae
mov
movzbl
jmp
inc
in
sub
mov
jne
and
mov
pusha
sub
jmp
xchg
inc
inc
inc
pushf
mov
rorl
shr
add
mul
push
pop
sub
and
mov
jno
mov
jmp
or
mov
movzwl
add
call
dec
jno
and
incl
std
pop
mov
pop
add
adc
cmp
jae
jmp
cltd
xchg
test
jle
dec
fs
mov
add
add
or
or
lea
or
add
test
add
add
mov
cmp
pusha
pusha
push
pop
movswl
popa
mov
popa
mov
jl
mov
jmp
lea
mov
push
add
call
push
push
call
and
pop
mov
addl
inc
push
ret
popf
aas
adc
push
and
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
ss
into
pop
outsb
popf
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
ja
or
and
mov
popa
mov
jmp
enter
dec
xor
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
pop
mov
xchg
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
sub
mov
lret
mov
push
push
call
and
pop
mov
addl
inc
push
ret
test
push
push
call
and
pop
mov
addl
inc
push
ret
test
jecxz
out
xchg
adc
xchg
adc
stc
push
and
push
push
call
and
pop
mov
addl
inc
push
ret
ret
mov
pusha
pusha
cld
push
pop
popa
popa
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
daa
pop
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
jge
nop
xchg
lods
xchg
inc
and
add
add
shl
mov
jne
out
ret
stos
pop
outsl
push
push
call
and
pop
mov
addl
inc
push
ret
xlat
nop
sbb
rol
outsb
mov
cmpl
je
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sub
add
add
outsb
inc
add
xchg
cmp
jae
lea
xor
movswl
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
or
into
mov
shl
sbb
mov
add
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
or
add
popf
flds
or
xlat
negl
and
add
test
ret
fwait
push
mov
push
and
add
xchg
add
jmp
sbb
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
xchg
mov
and
or
xchg
sub
jmp
stc
sbb
mov
or
je
jmp
xchg
mov
add
test
pop
and
push
push
call
and
pop
mov
addl
inc
push
ret
push
push
test
mov
xor
mov
mov
push
jmp
jmp
or
adc
mov
mov
sub
push
call
incl
pop
add
or
add
jnp
mov
cmc
push
jmp
pop
daa
xchg
push
gs
in
shll
mov
loopne
add
mov
push
push
push
jmp
test
imul
out
jg
ljmp
xor
test
add
add
pop
pop
mov
jmp
cmp
jnp
xchg
push
sbb
inc
and
pusha
jg
push
push
rdtsc
pop
pop
jo
pusha
popa
popa
pop
push
push
call
and
pop
mov
addl
inc
push
ret
xorl
inc
push
mov
call
add
movswl
mov
jmp
subl
mov
add
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
xor
jmp
jns
and
or
add
add
add
push
call
and
pop
mov
addl
inc
push
ret
movsl
dec
jae
lods
push
test
mov
add
mov
jmp
data16
inc
xor
repnz
or
into
mov
mov
mov
jp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
addr16
mov
lea
inc
add
mov
xchg
pusha
jle
push
pop
push
push
push
rdtsc
pop
pop
pop
popa
push
jbe
jmp
fldcw
sub
stos
add
add
add
and
pop
mov
addl
inc
push
ret
pop
dec
popf
mov
xchg
push
push
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
shrl
ret
cmp
adcl
push
push
pusha
ja
jmp
in
push
imul
pop
dec
inc
cmp
lcall
pop
addl
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
fists
mov
add
add
add
add
pusha
popa
rdtsc
push
push
push
push
rdtsc
pop
pop
rdtsc
jmp
jg
ljmp
fmuls
mov
mov
pop
pop
push
push
push
push
jmp
lods
and
pop
rdtsc
jmp
out
fwait
lret
sbb
pop
nop
or
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
cmc
and
and
mov
popa
movzwl
movl
push
push
call
and
pop
mov
addl
inc
push
ret
ss
push
enter
sbb
mov
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
ret
lods
mov
add
add
jmp
jmp
nop
jb
push
xchg
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
cmc
push
push
call
and
pop
mov
addl
inc
push
ret
fisttps
addl
add
or
cmpl
jne
stc
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
ja
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
shl
xchg
into
outsb
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
dec
aaa
mov
jl
mov
add
add
out
jnp
les
mov
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
imul
add
push
jmp
xor
popf
popf
cltd
rcrb
testl
add
add
add
and
pop
mov
addl
inc
push
ret
pop
data16
xor
mov
or
push
call
and
pop
mov
addl
inc
push
ret
call
and
call
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
rorl
mov
pop
push
mov
in
mov
pop
add
add
fmulp
mov
shll
and
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
xchg
or
adc
add
sbb
loopne
lods
les
loop
sarb
iret
cmpsl
and
pop
add
mov
mov
lea
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
iret
push
mov
mov
pushl
and
call
push
push
call
and
pop
mov
addl
inc
push
ret
jbe
mov
sub
sub
push
pusha
jp
push
pop
jmp
or
xlat
sbb
xor
or
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
sub
sub
xor
or
xor
add
test
add
or
push
push
pusha
push
push
rdtsc
pop
pop
push
pop
popa
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
dec
jmp
push
movsb
mov
xor
daa
or
xchg
sub
fstps
and
jmp
dec
pop
cmp
pushl
call
sub
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
arpl
test
and
mov
mov
movb
push
push
call
and
pop
mov
addl
inc
push
ret
ret
add
jmp
das
test
or
add
add
or
ljmp
add
add
or
add
add
or
or
test
add
add
push
jmp
mov
sub
insl
mov
rdtsc
pop
pop
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
fstpl
ja
pusha
mov
mov
popa
push
push
push
call
and
pop
mov
addl
inc
push
ret
sub
xchg
shrb
mov
push
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
inc
lret
add
movzwl
push
push
push
jo
pusha
popa
rdtsc
jae
jmp
push
and
inc
ret
jnp
out
adc
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
ds
push
push
push
call
and
pop
mov
addl
inc
push
ret
and
int
pusha
stos
js
mov
mov
push
pusha
movzwl
pusha
jmp
nop
not
push
xor
jl
push
mov
or
mov
popa
popa
mov
call
mov
lea
mov
call
sub
call
dec
mov
add
mov
pop
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
sti
add
xchg
xor
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
popa
mov
dec
adc
push
rdtsc
pop
pop
push
pop
popa
rdtsc
je
jmp
mov
jg
sub
or
jmp
pop
push
jo
push
jne
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
inc
mov
mov
lea
add
add
or
xchg
push
call
and
pop
mov
addl
inc
push
ret
xor
popf
jns
mov
jle
xchg
mov
pop
push
add
call
pop
sub
push
push
sub
pop
pop
cld
lea
push
push
call
and
pop
mov
addl
inc
push
ret
or
ds
call
into
call
mov
shlb
inc
mov
pop
push
push
push
jmp
stos
addb
scas
or
xor
jb
rdtsc
push
pop
pop
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jns
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
adc
addb
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jo
push
push
mov
add
add
add
add
and
pop
mov
addl
inc
push
ret
adc
jmp
mov
add
add
add
and
pop
mov
addl
inc
push
ret
enter
sub
pop
outsl
inc
pushl
jo
mov
call
jmp
js
mov
pusha
mov
call
sub
call
lea
popa
out
mov
jmp
aas
jle
imul
outsb
sbb
mov
jae
movzbl
jmp
cmp
rcr
pop
test
add
add
mov
mov
push
xor
pop
shr
mov
mul
mov
sub
mov
jmp
mov
mov
mov
mov
add
mov
add
mov
cmp
jae
mov
jmp
jmp
sbb
lods
adc
cmpsb
mov
stc
and
je
mov
jae
call
loop
xchg
or
test
movb
xor
pop
and
pop
andl
mov
mov
add
push
mov
pop
jmp
lea
mov
push
mov
call
jmp
mov
xchg
push
mov
xor
and
movzwl
cld
mov
sub
xor
sub
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
mov
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
int3
out
push
dec
sub
jp
mov
mov
or
push
push
call
and
pop
mov
addl
inc
push
ret
add
jmp
or
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
xchg
shrl
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sub
ret
add
mov
mov
shr
add
mov
pop
cld
push
push
call
and
pop
mov
addl
inc
push
ret
dec
ret
pop
repz
jb
pop
sbb
mov
mov
cmpl
je
or
mov
lea
add
jmp
sub
mov
cmpl
je
or
cmpl
je
mov
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
int3
xor
test
in
and
mov
pusha
jo
jge
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ja
or
add
iret
mov
add
aad
fmuls
shrb
mov
mov
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
pop
add
test
lcall
and
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
xor
mov
push
pusha
push
push
jmp
movsb
dec
or
int
xor
pop
pop
pusha
pusha
popa
jmp
test
jae
aad
sub
mov
sbb
and
add
add
add
and
pop
mov
addl
inc
push
ret
fwait
aaa
inc
cmp
jmp
xor
mov
push
mov
call
incl
pop
add
push
add
add
fisubs
out
push
ja
pusha
push
push
rdtsc
pop
pop
pusha
popa
popa
mov
jmp
mov
and
jnp
jne
lods
mov
out
mov
push
push
jns
push
pop
rdtsc
jmp
div
bound
cmp
cltd
pop
loope
mov
pop
pop
mov
push
push
jns
jmp
lahf
ljmp
bound
pop
pop
lahf
rdtsc
jo
pusha
popa
pop
pop
pop
call
xbegin
xchg
mov
add
mov
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
das
xchg
aad
test
mov
or
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
insl
cmpb
add
push
mov
jno
out
pop
stc
popa
mov
jmp
mov
pusha
sub
popa
movl
movswl
mov
mov
mov
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
bound
sarb
add
add
stc
mov
xor
xchg
jmp
in
gs
cld
fmull
push
push
pusha
popa
rdtsc
push
push
rdtsc
pop
pop
pop
pop
rdtsc
jmp
insb
arpl
xchg
cmp
incl
sbb
rcrl
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
loope
xor
pop
and
xor
pushl
jmp
jne
daa
mov
cld
pop
cld
push
push
push
push
push
push
rdtsc
pop
pop
pop
rdtsc
pusha
push
push
rdtsc
pop
pop
push
pop
popa
pop
pop
xorl
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
jg
or
xchg
lock
nop
jmp
jmp
mov
push
popf
pushf
xor
int3
push
jmp
or
jno
dec
nop
push
push
call
and
pop
mov
addl
inc
push
ret
movsb
pop
jo
lea
or
or
orb
add
addl
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
jne
mov
mov
add
test
add
push
push
call
and
pop
mov
addl
inc
push
ret
int3
stos
mov
jg
jmp
mov
adc
sbb
aad
leavew
push
mov
popa
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jne
push
sub
aaa
movsb
mov
push
push
call
and
pop
mov
addl
inc
push
ret
loopne
mov
push
mov
pop
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
fwait
into
mov
in
daa
or
je
mov
mov
pushl
cmc
call
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
or
or
add
jge
cli
mov
ss
pop
movl
pusha
mov
sbb
popa
jle
xchg
push
push
jmp
adc
iret
lret
adc
lds
push
push
push
pop
rdtsc
jnp
pop
pop
pop
pop
push
jmp
pusha
xchg
mov
cmp
call
and
pop
mov
addl
inc
push
ret
jmp
hlt
fs
ror
sbb
out
loope
ret
inc
xlat
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
insb
and
shll
or
or
mov
add
jno
jle
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sbb
lahf
pop
jns
out
push
test
ja
xchg
add
add
or
or
push
call
and
pop
mov
addl
inc
push
ret
pop
repz
sub
and
movswl
add
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
adc
add
add
mov
das
jno
adc
fcmovne
daa
or
or
or
add
push
call
and
pop
mov
addl
inc
push
ret
fsubrp
and
push
push
push
call
and
pop
mov
addl
inc
push
ret
and
and
pushl
jmp
hlt
mov
enter
mov
mov
cli
cmpsl
fmul
call
add
xchg
jo
push
push
pop
pop
push
push
push
jmp
or
aas
shlb
jl
push
push
rdtsc
pop
pop
popa
pop
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
push
sbb
pop
das
pushl
mov
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
scas
out
pop
cmpsb
insl
orb
jmp
out
or
mov
lea
in
jl
and
rcr
or
add
gs
aad
in
mov
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
push
add
add
int
ss
xchg
jbe
pusha
jnp
push
pop
popa
push
push
pusha
push
push
rdtsc
pop
pop
jmp
add
popa
pop
xchg
call
mov
jnp
je
mov
pop
pushl
mov
call
mov
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
adc
and
cmpl
je
jno
mov
mov
sbb
movb
push
push
call
and
pop
mov
addl
inc
push
ret
jl
insb
movl
mov
pusha
jmp
cmp
sahf
pop
dec
imul
addr16
insb
lret
jo
xchg
mov
popa
jmp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
push
out
in
xchg
or
or
push
call
and
pop
mov
addl
inc
push
ret
dec
ret
nop
jmp
sbb
inc
xchg
and
push
shl
subb
jl
jno
rdtsc
jb
jmp
lds
and
loop
sub
pop
pop
nop
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
insb
add
push
push
push
call
and
pop
mov
addl
inc
push
ret
inc
test
mov
mov
lea
mov
add
mov
nop
push
push
jl
jns
rdtsc
jmp
int
or
jns
mov
pop
push
jmp
push
pop
cmpsb
mov
sbb
test
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
push
mov
sbb
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
lods
rcrb
add
sub
xor
xor
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
arpl
cmp
push
mov
jae
sbb
lea
push
push
call
and
pop
mov
addl
inc
push
ret
hlt
popa
orl
add
add
sbb
sbb
jp
mov
inc
loop
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
sbb
and
add
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
lods
shl
lcall
push
push
call
and
pop
mov
addl
inc
push
ret
imul
push
or
nop
push
push
jmp
xorb
cmp
testb
pop
insl
sub
xor
addb
add
pusha
popa
pop
pop
push
pusha
push
push
push
rdtsc
pop
pop
pop
jae
jle
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
mov
call
jmp
mov
cmp
in
fbld
pusha
cmp
add
add
add
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
fbld
mov
add
add
repz
and
cwtl
daa
or
push
call
and
pop
mov
addl
inc
push
ret
fiadds
and
and
nop
jmp
add
cli
lret
push
jle
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
add
clc
stos
or
add
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
clc
pop
add
orb
add
add
pusha
push
pop
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
cmp
mov
mov
incl
push
push
call
and
pop
mov
addl
inc
push
ret
aaa
xchg
pusha
push
pusha
mov
sbb
popa
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
fists
xchg
add
add
or
mov
adc
call
jmp
mov
mov
movswl
out
mov
in
mov
cmp
jae
cmc
sub
movzbl
jmp
add
mov
mov
mov
sub
jp
sub
shr
or
mul
mov
sub
mov
jmp
lea
test
xor
dec
dec
push
out
xor
xor
and
jmp
jle
call
dec
je
xor
movsb
addl
or
test
add
add
fiadds
mov
and
sub
popa
add
mov
cmp
jae
mov
jmp
sub
mov
mov
pusha
js
jb
popa
and
je
mov
andl
mov
mov
cld
jmp
lea
push
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
and
xor
sub
loop
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
dec
mov
add
and
push
push
call
and
pop
mov
addl
inc
push
ret
and
rorl
adc
cld
mov
jmp
xor
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
mov
sub
stc
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
in
ss
adc
add
call
push
stos
push
cld
rcrb
and
push
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
dec
mov
incb
add
test
add
add
test
sub
stc
push
and
push
push
call
and
pop
mov
addl
inc
push
ret
mov
clc
jmp
add
jno
push
icebp
rcrl
lea
add
add
add
and
pop
mov
addl
inc
push
ret
rcrb
dec
in
or
sbb
or
add
sub
pop
testb
and
adc
or
ret
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
out
or
add
ja
mov
add
add
or
or
je
or
mov
mov
sub
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
or
push
push
call
and
pop
mov
addl
inc
push
ret
cmovle
test
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
lret
mov
mov
sub
or
or
je
ja
mov
cmpl
jbe
add
pusha
add
mov
mov
and
mov
or
je
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ret
add
add
mov
clc
inc
mov
xor
xchg
mov
pop
xor
mov
nop
push
push
pusha
push
push
rdtsc
pop
pop
push
push
rdtsc
pop
pop
popa
rdtsc
jmp
pop
jnp
dec
out
mov
pop
rcrl
push
push
jl
pusha
popa
pop
nop
or
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
cmc
in
repnz
mov
call
incl
pop
add
jmp
in
pop
sti
aas
inc
jae
int3
inc
testl
rdtsc
push
push
push
pop
rdtsc
pusha
popa
pop
pop
pop
pop
push
jmp
xorb
adc
popf
mov
jnp
fidivs
xor
mov
jae
push
jmp
xor
mov
out
jle
jecxz
cmp
mov
jmp
cmp
out
lret
dec
jg
fcomi
leave
pop
pop
mov
jl
pusha
push
push
rdtsc
pop
pop
push
push
rdtsc
pop
pop
popa
pop
sub
call
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
add
mov
popf
pop
and
pop
jmp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
pop
jb
inc
jmp
cwtl
pop
fdivrl
cmp
xchg
movl
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
daa
lock
jbe
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xlat
jmp
inc
or
push
and
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
mov
fidivl
push
push
call
and
pop
mov
addl
inc
push
ret
lods
jmp
jb
pop
insb
stos
adc
xor
mov
jb
testl
add
je
pusha
popa
push
push
push
jno
pusha
popa
rdtsc
push
push
jo
rdtsc
jmp
ret
cwtl
sub
jecxz
leave
cmp
push
add
outsl
mov
pop
pop
pop
xchg
mov
pushl
sub
push
jmp
adc
flds
xorl
jnp
mov
adc
lea
call
out
les
outsb
call
push
push
push
jmp
xchg
dec
sub
loopne
xchg
imul
test
add
add
rdtsc
pop
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
xor
mov
call
mov
popa
pusha
mov
popa
movl
push
push
call
and
pop
mov
addl
inc
push
ret
inc
sbb
mov
add
pusha
or
mov
popa
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
or
dec
mov
js
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
mov
inc
push
or
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
mov
sub
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
nop
adc
ja
or
popf
or
mov
add
test
add
push
push
call
and
pop
mov
addl
inc
push
ret
inc
xor
enter
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
insb
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
add
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fs
movl
push
push
call
and
pop
mov
addl
inc
push
ret
lds
add
mov
or
test
sbb
pop
push
jbe
jmp
dec
ds
mov
dec
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sahf
shll
or
xor
pushl
call
call
inc
mov
adc
f2xm1
mov
popf
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
movsb
addr16
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cs
mov
mov
popa
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
sarl
pop
xor
push
add
add
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
test
dec
dec
int3
add
mov
xor
test
lret
push
push
call
and
pop
mov
addl
inc
push
ret
roll
and
jl
mov
mov
mov
push
mov
pushl
jbe
mov
call
pusha
adc
jmp
dec
and
out
in
xchg
push
push
push
jno
rdtsc
jle
pop
pop
pop
push
push
push
push
push
pop
rdtsc
push
pop
pop
pop
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
out
add
pusha
jmp
stos
aaa
cmp
mov
pop
add
mov
push
out
popa
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
lock
addl
sbb
and
mov
cmpl
je
jmp
jmp
mov
or
enter
pusha
pusha
popa
push
pop
popa
pop
push
jmp
sub
jb
mov
loope
out
scas
popf
sub
shrl
je
xor
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
popa
or
fstps
and
mov
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
insb
dec
dec
pop
cs
or
add
mov
mov
in
mov
and
cmpl
je
mov
mov
sub
movb
push
push
call
and
pop
mov
addl
inc
push
ret
mov
push
mov
dec
add
movl
push
push
call
and
pop
mov
addl
inc
push
ret
lds
fisttps
or
xor
incl
test
xchg
xchg
xor
or
sbb
push
push
call
and
pop
mov
addl
inc
push
ret
ret
fsts
nop
push
pusha
push
pop
je
popa
pop
push
pusha
jmp
add
into
imul
adcl
faddp
pop
or
push
push
push
rdtsc
pop
pop
rdtsc
jmp
sub
adc
pop
inc
into
daa
mov
pop
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
or
outsb
add
push
push
push
call
and
pop
mov
addl
inc
push
ret
xor
add
and
les
add
add
pop
xchg
add
or
push
call
and
pop
mov
addl
inc
push
ret
push
mov
jmp
fs
jae
cmp
add
and
add
mov
push
pusha
pusha
pusha
popa
pusha
popa
popa
push
pusha
popa
pop
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
test
mov
stc
mov
call
and
fisubl
fmuls
shrl
into
fnstenv
push
push
push
call
and
pop
mov
addl
inc
push
ret
inc
stos
xor
adcb
add
jmp
fcompl
jmp
inc
clc
push
icebp
xor
movswl
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
fstpt
ja
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
ja
adcb
shl
xor
rorl
mov
sbb
or
jne
push
push
call
and
pop
mov
addl
inc
push
ret
test
add
push
sub
pop
sub
push
mov
jg
mov
push
jmp
add
sbb
jbe
cmp
orl
add
and
pop
mov
addl
inc
push
ret
lret
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
push
jae
mov
jns
mov
jmp
call
pop
sub
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jp
mov
call
fldt
pop
dec
inc
lret
cmp
or
nop
leave
out
imul
call
adc
mov
add
cmpsb
pop
lcall
pop
je
lcall
pop
lea
mov
nop
js
pusha
jmp
fldt
je
xchg
xor
add
add
popa
push
pusha
pusha
push
push
rdtsc
pop
pop
push
push
rdtsc
pop
pop
popa
jge
push
pop
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
fimull
mov
xor
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
sub
cmpsb
lea
and
mov
mov
xor
call
shll
int3
sahf
imul
cli
sub
lahf
cmp
or
test
add
add
add
and
pop
mov
addl
inc
push
ret
adc
mov
iret
xchg
mov
adc
add
stc
shll
pop
data16
xchg
mov
ljmp
push
call
and
pop
mov
addl
inc
push
ret
divb
sbb
jb
mov
pushl
stc
call
jmp
movswl
mov
jae
movzwl
out
mov
cld
in
sub
cmp
jae
mov
movzbl
jmp
pop
ret
push
stc
add
add
add
mov
call
mul
sub
sub
call
mov
mov
rclb
sbb
repz
push
sbb
push
add
add
gs
gs
or
add
shr
or
add
ds
add
into
imul
adcl
or
bound
add
mov
mov
add
mov
add
cmp
jae
pusha
mov
xor
popa
jmp
sub
mov
and
je
mov
andl
mov
mov
jmp
lea
jl
push
push
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
mov
call
jmp
repnz
mov
dec
mov
mov
and
jmp
lods
lea
js,pn
push
call
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
bound
sldt
add
xchg
dec
adc
insl
push
dec
ss
into
mov
popa
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
lds
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
push
mov
movzwl
or
push
push
call
and
pop
mov
addl
inc
push
ret
addr16
jp
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
xor
mov
add
add
add
push
inc
sub
add
dec
in
aaa
push
mov
mov
inc
clc
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
scas
cmp
popf
popf
and
ret
add
mov
mov
shr
add
mov
pop
mov
pusha
mov
sub
popa
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
int3
ja
push
pop
imul
aaa
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
lods
shl
lcall
push
push
call
and
pop
mov
addl
inc
push
ret
insb
add
jmp
loop
jno
es
or
pop
xor
in
loope
popf
or
cmp
je
mov
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
shll
pusha
mov
popa
mov
popa
mov
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
stos
jns
ds
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lock
and
call
rclb
adc
add
ja
inc
adc
fwait
mov
incb
je
mov
cmc
mov
mov
xor
push
push
call
and
pop
mov
addl
inc
push
ret
adc
ja
jbe
add
and
nop
push
pusha
push
pop
push
push
rdtsc
pop
pop
popa
pop
push
push
push
push
push
pop
rdtsc
push
pop
pop
pop
pop
nop
sub
push
push
push
call
and
pop
mov
addl
inc
push
ret
jnp
adc
cmp
push
mov
jmp
inc
sbb
lods
lock
mov
xor
xchg
pop
stos
dec
sub
call
mov
mov
or
jmp
mov
mov
mov
or
movl
push
push
call
and
pop
mov
addl
inc
push
ret
and
hlt
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jbe
mov
cmp
mov
add
or
add
lea
add
add
or
test
push
and
mov
mov
mov
mov
mov
mov
mov
mov
xchg
push
je
push
pop
pop
push
pusha
push
pusha
popa
pop
jmp
js
mov
sub
adc
popa
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
jae
mov
add
add
push
pushl
mov
call
incl
pop
add
or
add
inc
jne
xchg
mov
push
push
push
jmp
dec
ss
lock
in
add
fisttpl
xor
jl
rdtsc
push
pop
pop
pop
pop
pop
mov
jmp
add
mov
push
push
push
push
push
pop
rdtsc
jmp
add
fidivs
adc
cmc
sub
jmp
dec
xor
push
add
rclb
pop
pop
mov
ja
jns
jmp
and
fstps
and
out
mov
pop
xor
lea
mov
movzwl
push
jmp
pop
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
repz
repz
pusha
mov
popa
call
push
push
call
and
pop
mov
addl
inc
push
ret
lcall
or
addl
cld
movl
push
push
call
and
pop
mov
addl
inc
push
ret
fdiv
ret
xor
in
daa
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
jo
shl
outsl
jo
data16
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
sub
jmp
inc
negb
push
pop
leave
adc
aam
add
clc
je
lock
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
into
idiv
nop
push
push
call
and
pop
mov
addl
inc
push
ret
mov
xchg
fisubrl
xor
jne
pusha
mov
mov
popa
ja
mov
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
pop
fsubs
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
jp
adc
add
cli
jmp
push
cmpxchg
mov
inc
lcall
mov
mov
in
daa
or
lea
xchg
imul
mov
mov
or
push
call
and
pop
mov
addl
inc
push
ret
iret
sbbl
clc
movl
sub
xchg
jp
push
push
pusha
popa
rdtsc
push
pop
pop
pop
push
pusha
pusha
jp
jmp
mov
popa
push
push
push
rdtsc
pop
pop
pop
popa
xchg
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
adcb
cmp
adc
ret
data16
inc
call
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
pop
mov
mov
mov
mov
mov
js
mov
mov
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
insb
into
pop
adc
push
and
fmuls
or
push
call
and
pop
mov
addl
inc
push
ret
jmp
inc
rorb
mov
lea
and
mov
and
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
xor
xchg
outsl
xor
pushl
jmp
mov
fcmovnb
pop
pushf
aas
call
push
push
call
and
pop
mov
addl
inc
push
ret
ret
push
in
cltd
jl
popf
movsl
sub
xchg
push
push
jmp
cmpsl
lods
push
mov
mov
add
add
rdtsc
pop
pop
pop
pop
push
pusha
jmp
in
jle
jno
inc
out
push
jmp
icebp
and
push
clc
loopne
out
cmp
xchg
add
pushl
movzwl
call
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
in
mov
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
jge
xchg
cli
jl
xchg
or
xchg
push
push
push
pusha
popa
pop
rdtsc
jmp
dec
sub
cli
ss
push
mov
dec
repz
cld
icebp
jecxz
push
fwait
pop
pop
push
pusha
push
push
push
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
jmp
rcrb
insb
mov
xchg
add
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
inc
adc
sub
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
imul
cld
pushl
movzwl
call
push
push
call
and
pop
mov
addl
inc
push
ret
ss
pop
mov
and
cmpl
je
mov
movzwl
mov
movswl
movb
push
push
call
and
pop
mov
addl
inc
push
ret
mov
push
jbe
test
or
add
jbe
fisubrs
mov
popa
movl
mov
jmp
cmc
jmp
push
fldcw
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
dec
scas
or
mov
lea
call
divb
shlb
ja
rcrb
es
mov
cmp
test
mov
mov
pop
pop
push
push
ja
pusha
popa
pop
mov
adc
push
pusha
sub
stc
popa
movzwl
push
mov
call
or
mov
pop
lea
pusha
mov
mov
popa
add
push
push
call
and
pop
mov
addl
inc
push
ret
fildll
xchg
insl
add
push
push
push
push
push
jmp
popa
cld
mov
jg
jge
cmp
push
rdtsc
push
push
rdtsc
pop
pop
pop
pop
rdtsc
pusha
push
push
rdtsc
pop
pop
push
push
rdtsc
pop
pop
popa
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
or
mov
push
mov
mov
push
mov
sbb
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
xchg
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
pusha
inc
aam
call
sub
cmpl
jne
jae
push
mov
push
jmp
das
in
lods
adc
or
inc
xchg
jns
mov
call
or
cmp
mov
add
push
out
fisubrs
fcomp
pop
call
xor
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
aaa
lcall
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
or
mov
jne
and
nop
push
jno
jbe
pop
push
jb
push
push
jno
rdtsc
push
push
rdtsc
pop
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsl
mov
movswl
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
jb
mov
cmc
incl
movswl
push
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
xor
jmp
jo
xor
aam
xchg
lock
movsl
lahf
repnz
pop
outsb
aas
js
cld
mov
call
jmp
push
xor
pop
mov
call
testl
mov
cmc
mov
adc
adc
add
dec
mov
aad
fldcw
mov
pop
lret
pop
out
in
mov
cmp
jae
add
movzbl
xor
movzwl
mov
mov
mov
jmp
or
lock
mov
add
popf
mov
and
mul
mov
mov
sub
jmp
fistl
ficomps
mov
pusha
pusha
mov
mov
popa
mov
popa
jmp
sub
mov
mov
mov
add
or
add
sub
cmp
jae
mov
jmp
mov
mov
sub
and
je
call
sbb
fiaddl
imul
je
movsb
mov
call
push
mov
and
repz
pop
mov
sub
jmp
lea
mov
push
xor
call
mov
and
push
mov
pop
cld
push
push
call
and
pop
mov
addl
inc
push
ret
push
filds
jmp
adc
std
mov
pusha
mov
mov
popa
sub
mov
lods
xor
shr
add
sub
jne
add
jae
pusha
mov
sub
popa
push
push
call
and
pop
mov
addl
inc
push
ret
push
fadds
lea
add
push
call
and
pop
mov
addl
inc
push
ret
ja
fnstcw
out
arpl
popf
mov
xchg
stc
push
and
push
push
call
and
pop
mov
addl
inc
push
ret
loope
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cwtl
sbb
sarl
mov
mov
popa
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
stc
pop
mov
cmpl
je
mov
mov
mov
sub
lea
push
push
call
and
pop
mov
addl
inc
push
ret
adc
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
outsb
jl
out
push
push
test
mov
stc
cmpl
je
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
mov
add
xchg
add
add
push
call
and
pop
mov
addl
inc
push
ret
sub
sarb
daa
je
mov
pusha
movswl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
inc
js
in
ss
jg
jmp
mov
jge
xor
cwtl
adc
les
adc
add
mov
mov
popa
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
xchg
cwtl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
push
test
rorb
push
mov
pop
pop
mov
xor
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
inc
sub
mov
nop
jmp
ds
add
add
push
push
push
jae
pop
rdtsc
jmp
mov
icebp
orl
sahf
in
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
andl
fsts
sbb
in
jle
push
push
jae
rdtsc
push
push
rdtsc
pop
pop
pop
pop
addl
push
push
call
and
pop
mov
addl
inc
push
ret
aam
jp
into
mov
add
cmp
mov
mov
or
xchg
lea
or
jmp
movsb
xor
dec
addr16
pop
xchg
mov
mov
jmp
adc
mov
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
sub
or
mov
push
and
mov
jbe
mov
mov
mov
jne
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
xor
push
test
and
fimull
or
add
mov
xchg
push
push
jg
push
pop
rdtsc
push
push
push
push
rdtsc
pop
pop
rdtsc
push
pop
pop
pop
pop
pop
push
jo
push
jmp
das
adc
pop
xchg
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
pop
xlat
inc
xchg
ds
incl
pop
add
add
pop
adc
xchg
push
jmp
scas
decb
fs
pop
adc
cmp
mov
push
push
jmp
addr16
inc
mov
rdtsc
push
push
jmp
or
les
pusha
popa
pop
pop
pop
pop
mov
push
push
jmp
les
subl
orl
sahf
in
pop
pop
mov
push
pusha
pusha
popa
jbe
popa
pop
pop
push
push
call
and
pop
mov
addl
inc
push
ret
jle
lea
push
push
call
and
pop
mov
addl
inc
push
ret
out
dec
fwait
mov
stc
pusha
mov
or
popa
nop
push
push
push
pusha
popa
pop
rdtsc
push
pusha
popa
pop
pop
pop
push
jmp
jnp
std
cmpsl
fsts
add
add
and
pop
mov
addl
inc
push
ret
mov
jmp
and
sbbl
addb
xor
or
push
call
and
pop
mov
addl
inc
push
ret
xchg
pushf
ret
popa
push
push
call
and
pop
mov
addl
inc
push
ret
mov
jbe
xor
daa
enter
fnstenv
and
movl
mov
cmc
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
xor
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
insb
mov
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
xor
pop
mov
mov
mov
sub
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
bound
add
xchg
cmpl
je
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
pushf
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
dec
dec
pop
xor
mov
push
and
pop
movl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
out
dec
outsb
adc
jo
mov
sub
push
push
push
jmp
xchg
jno,pt
in
notl
sbb
xor
push
pop
rdtsc
pusha
popa
pop
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
incl
or
in
daa
or
mov
daa
and
call
pop
lods
test
int3
outsb
xchg
push
push
adc
mov
sub
add
pop
mov
xchg
sahf
xlat
dec
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
pop
jne
xchg
jno
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
popf
dec
push
hlt
lea
shlb
ret
jae
mov
mov
mov
sub
add
push
push
call
and
pop
mov
addl
inc
push
ret
loop
mov
xor
mov
jg
sbb
lea
mov
mov
mov
push
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
test
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
aam
sbb
mov
and
sub
push
push
push
push
push
push
rdtsc
pop
pop
rdtsc
push
pop
pop
pop
pop
mov
or
pushl
add
call
add
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
test
in
std
gs
push
push
jg
jae
push
push
rdtsc
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
popf
xor
adc
rcll
cmp
jns
and
pushl
jge
movzwl
call
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
aam
pop
movaps
call
call
mov
mov
sbb
cmpl
je
mov
mov
mov
call
call
mov
lret
mov
pop
mov
movb
push
mov
pop
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
add
mov
and
pusha
mov
mov
popa
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
mov
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
cmp
push
pusha
pusha
popa
push
pop
popa
pop
push
push
push
push
pusha
popa
rdtsc
je
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
imul
xchg
bound
push
push
push
call
and
pop
mov
addl
inc
push
ret
int
mov
jecxz
sub
mov
push
add
lea
mov
mov
add
pusha
clc
popa
nop
jmp
pop
pushf
out
cmp
aam
ja
lahf
lock
pusha
jmp
rcr
sbbb
xor
push
rdtsc
pop
pop
pusha
popa
popa
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
fnstenv
pop
out
or
cmc
push
cld
stc
push
push
push
call
and
pop
mov
addl
inc
push
ret
inc
sub
fcomps
xchg
subl
jne
and
pusha
jmp
or
nop
mov
hlt
push
scas
arpl
jmp
int
popf
mov
lea
xor
call
jle
mov
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
rcrl
push
int
jmp
jnp
lods
aas
push
mov
mov
popa
push
ja
mov
nop
jmp
jmp
push
je
pusha
jo
push
push
rdtsc
pop
pop
popa
nop
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
dec
negb
jmp
inc
cmp
cs
push
mov
ds
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
mov
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
setnp
rorb
ret
lea
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
subb
clc
pop
mov
push
js
push
push
push
pop
rdtsc
jmp
xchg
jae
testb
test
mov
mov
or
pushl
mov
or
mov
mov
sub
incl
push
push
call
and
pop
mov
addl
inc
push
ret
lods
lods
rorb
or
push
push
call
and
pop
mov
addl
inc
push
ret
call
pop
out
in
mov
mov
pushl
mov
call
jmp
jns
mov
mov
pusha
ja
mov
popa
out
mov
in
xor
cld
cmp
jae
mov
movzbl
mov
or
add
mov
mov
shr
mul
je
jmp
loopne
lods
cmp
add
lret
push
divb
mov
sub
mov
mov
mov
mov
jmp
jae
clc
mov
mov
jbe
add
mov
add
mov
cmp
jae
mov
jmp
mov
mov
and
je
mov
andl
mov
mov
mov
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
pusha
ljmp
jge
and
call
push
push
call
and
pop
mov
addl
inc
push
ret
jg
and
mov
sub
and
push
push
call
and
pop
mov
addl
inc
push
ret
adc
or
push
push
call
and
pop
mov
addl
inc
push
ret
push
outsl
rorb
popl
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
shl
xor
jmp
data16
mov
add
shrl
outsl
sub
mov
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
mov
cmc
cmp
sbb
or
jg
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
mov
pusha
mov
mov
popa
mov
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
lea
or
add
loopne
sub
push
push
call
and
pop
mov
addl
inc
push
ret
mov
lea
mov
cmpl
je
pusha
ja
mov
mov
popa
mov
pusha
movzwl
mov
popa
lea
mov
jmp
jmp
and
inc
sub
sub
loopne
mov
and
add
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
roll
jmp
and
arpl
dec
lds
pop
cmpl
je
mov
cmpl
jbe
jmp
pushf
sub
jmp
fsubs
lea
add
add
fnstcw
and
push
push
call
and
pop
mov
addl
inc
push
ret
stc
push
in
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
test
out
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cwtl
push
push
push
call
insl
icebp
bound
jecxz
inc
mov
sub
in
test
pop
mov
pop
pop
xor
mov
nop
push
push
pusha
jmp
cmp
add
lods
and
xchg
js
adc
out
fistl
popa
rdtsc
pusha
je
push
push
rdtsc
pop
pop
popa
pop
pop
push
jns
push
push
push
pop
rdtsc
push
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
fistpl
pop
stos
call
sub
pop
inc
movaps
repz
addb
add
xor
pop
push
sub
jmp
aaa
jg
pop
subb
jl
jl
jo
pusha
popa
addl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
jp
jo
mov
popa
cmp
xor
mov
or
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
xor
jmp
jmp
pusha
and
loope
inc
dec
cmp
push
sbb
fdivl
push
call
and
pop
mov
addl
inc
push
ret
lea
les
movl
add
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
int3
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
repnz
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jecxz
pop
add
add
mov
jmp
dec
xlat
pop
xchg
test
jo
jnp
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
aad
popf
jns
and
pushl
push
xor
pop
call
incl
pop
add
add
shrb
add
add
lret
jp
out
xor
pop
jb
mov
pusha
jp
pusha
popa
jl
jmp
inc
inc
int
test
aas
aad
mov
push
jno
push
push
rdtsc
pop
pop
pop
mov
push
push
push
push
rdtsc
pop
pop
pop
pop
pop
push
cld
pop
mov
lea
sub
push
jg
push
pusha
popa
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lret
std
adc
lea
or
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
out
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
lods
xor
repz
stc
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
call
out
mov
fmull
ficomps
or
add
loope
mov
dec
jns
mov
add
add
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
jg
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
or
clc
pusha
mov
mov
popa
cmpl
jne
movswl
sub
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
lcall
dec
add
and
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
popf
push
int3
jno
dec
cmp
call
push
push
call
and
pop
mov
addl
inc
push
ret
movsl
scas
sub
sub
add
add
test
xchg
aas
sub
or
push
call
and
pop
mov
addl
inc
push
ret
pop
push
xor
movzwl
movl
push
push
call
and
pop
mov
addl
inc
push
ret
jl
lock
fnstenv
push
xor
add
add
popf
or
jle
push
push
push
push
rdtsc
pop
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
push
push
push
pusha
pusha
popa
push
pop
popa
rdtsc
push
jmp
pop
pop
fwait
xchg
mov
xchg
je
push
lret
mov
pop
xchg
add
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
lret
adc
add
add
add
and
pop
mov
addl
inc
push
ret
mov
jg
mov
mov
mov
mov
mov
mov
movzwl
mov
jmp
mov
stos
into
lods
jae
xchg
jne
add
ret
add
add
add
and
pop
mov
addl
inc
push
ret
cld
cmp
and
inc
cmpsb
stos
or
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
repz
mov
or
pusha
orb
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
dec
push
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ss
imul
add
roll
bnd
sahf
insl
ljmp
in
pop
pop
push
push
movzwl
pop
pushl
call
xchg
lods
ret
or
push
jge
xlat
add
push
add
add
mov
pop
call
mov
push
push
push
push
jmp
outsl
fmuls
rclb
add
pop
jp
rdtsc
jmp
push
or
adc
pop
pop
mov
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
fiadds
jg
dec
pop
or
call
push
push
call
and
pop
mov
addl
inc
push
ret
out
lods
add
cli
cmpl
je
jmp
mov
inc
lock
add
add
rdtsc
pop
pop
rdtsc
pusha
push
push
rdtsc
pop
pop
pusha
popa
popa
pop
pop
mov
mov
or
pushl
push
sub
pop
call
mov
adc
fs
adc
lret
idivb
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
sbb
dec
mov
mov
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
popl
or
je
sub
mov
mov
movb
or
movl
push
push
call
and
pop
mov
addl
inc
push
ret
addr16
push
push
pop
pop
mov
popa
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
push
inc
add
inc
ljmp
scas
sbb
lahf
out
pop
aas
iret
mov
mov
pop
mov
je
xor
lea
push
mov
pop
nop
push
push
jo
jmp
pop
cwtl
cmpsl
dec
xor
mov
push
push
push
rdtsc
pop
pop
pop
pop
pop
push
push
push
jmp
daa
mov
jg
xchg
sub
cltd
rdtsc
jne
jmp
movsb
das
xchg
bound
fstps
push
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
leave
pusha
mov
pop
lea
pop
mov
and
push
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
pop
push
push
mov
and
or
push
call
and
pop
mov
addl
inc
push
ret
add
adc
sbb
iret
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
pop
sub
and
nop
jbe
push
push
push
push
rdtsc
pop
pop
rdtsc
jbe
pop
pop
push
push
pusha
je
push
push
rdtsc
pop
pop
popa
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
pushf
testl
add
xor
pusha
mov
xor
popa
mov
push
sub
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
push
es
lcall
sub
insb
call
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
pop
icebp
pushf
dec
and
mov
lea
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
inc
mov
or
add
xor
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
and
popf
or
or
push
push
call
and
pop
mov
addl
inc
push
ret
int3
cltd
jno
in
push
mov
nop
jmp
fwait
dec
test
xchg
mov
fsqrt
push
jg
pusha
jmp
dec
mov
inc
jbe
ja
rcr
fxch
and
dec
xchg
mov
add
decl
aas
cmp
pop
das
push
popa
nop
or
sub
call
mov
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
push
cs
cmc
add
mov
mov
lea
jmp
andl
push
push
push
pusha
popa
rdtsc
pusha
popa
pop
pop
rdtsc
push
push
push
push
rdtsc
pop
pop
rdtsc
push
pop
pop
pop
pop
pop
mov
mov
pushl
stc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
addr16
cltd
das
repz
sbb
add
imul
push
push
call
and
pop
mov
addl
inc
push
ret
repz
leave
idiv
mov
or
push
add
add
or
xchg
mov
mov
add
mov
mov
mov
pusha
mov
pusha
mov
mov
popa
popa
out
mov
mov
in
mov
movswl
cmp
jae
jmp
loopne
adc
testb
mov
inc
dec
imul
popf
sub
push
add
add
or
jb
mov
mul
push
stc
pop
sub
mov
jmp
or
xor
push
fs
imul
jp
pop
clc
popa
jmp
mov
sub
mov
mov
add
and
add
mov
cmp
jae
call
xchg
scas
lcall
outsl
mov
pop
jmp
push
mov
pop
mov
call
jmp
push
sti
leave
nop
sbb
xor
shrl
dec
mov
pop
and
je
call
add
dec
push
add
add
pop
adc
andl
call
insl
push
jl
enter
dec
push
xorb
mov
pop
mov
mov
jp
mov
je
push
jno
pop
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
test
lea
push
push
call
and
pop
mov
addl
inc
push
ret
imul
das
and
mov
mov
mov
sub
and
sub
cld
push
push
call
and
pop
mov
addl
inc
push
ret
inc
test
repz
xlat
movswl
sub
mov
mov
jb
call
inc
adc
mov
pop
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
stos
xor
push
add
jno
jge
push
pop
mov
or
jmp
testl
or
push
call
and
pop
mov
addl
inc
push
ret
sub
or
push
call
and
pop
mov
addl
inc
push
ret
adc
jecxz
sub
les
cmp
and
popa
mov
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
iret
pop
je
mov
mov
jb
or
cmpl
je
mov
mov
mov
lea
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sbb
cmpl
je
mov
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
or
or
add
push
pop
push
mov
sub
pop
cmpl
jbe
call
xor
ffreep
push
mov
pop
pusha
pusha
mov
js
jmp
mov
leave
jbe
inc
xchg
js
icebp
dec
dec
mov
loop
xorb
mov
call
add
mov
sub
pop
and
call
mov
mov
js
xor
pop
jmp
mov
aam
ret
dec
xchg
and
or
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
aaa
pop
icebp
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lea
out
mov
mov
xor
push
push
call
and
pop
mov
addl
inc
push
ret
idivl
jecxz
mov
mov
nop
push
push
push
pusha
popa
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pop
push
jmp
sbb
add
ret
sub
shrl
dec
out
jmp
adc
add
mov
bound
lret
and
xchg
jg
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
xor
and
push
jmp
cltd
in
in
dec
mov
mov
xchg
dec
sbb
dec
pop
push
push
call
and
pop
mov
addl
inc
push
ret
cwtl
jmp
lret
or
call
push
push
call
and
pop
mov
addl
inc
push
ret
lret
imul
push
jmp
add
inc
sub
fildll
mov
clc
jmp
mov
mov
jmp
add
mov
lock
add
add
add
push
call
and
pop
mov
addl
inc
push
ret
movsl
and
movswl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
sbb
sbb
aad
jmp
inc
or
or
adc
xor
add
xchg
push
gs
in
shll
mov
or
push
call
and
pop
mov
addl
inc
push
ret
mov
jmp
mov
inc
or
push
outsb
out
dec
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
adc
push
rorb
adc
mov
pusha
mov
mov
popa
mov
call
rcrb
mov
xchg
mov
pop
xchg
jmp
enter
insl
ret
mov
sbb
sti
add
adc
add
outsl
or
ljmp
stos
es
add
add
add
and
pop
mov
addl
inc
push
ret
aad
dec
fldt
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
ds
or
and
call
incl
pop
add
jp
pusha
popa
rdtsc
jmp
or
cmc
cli
sub
enter
call
push
jb
push
push
rdtsc
pop
pop
rdtsc
push
push
push
pop
rdtsc
jmp
std
sbb
jnp
mov
into
and
mov
mov
jmp
enter
inc
mov
jbe
push
push
push
rdtsc
pop
pop
pop
mov
jns
jmp
jmp
adc
std
pop
movzwl
lea
sub
nop
push
push
pusha
popa
pop
pop
push
push
push
jmp
repz
lcall
call
mov
jmp
jae
cmp
cld
mov
popa
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
rcr
out
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
and
or
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
repz
or
add
imul
pop
daa
cmpsb
xlat
out
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
loopne
cs
lahf
jmp
sbb
movsl
insb
adc
add
stc
mov
and
or
jne
push
push
call
and
pop
mov
addl
inc
push
ret
and
or
je
sub
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
inc
jb
push
cltd
fwait
mov
push
mov
pop
movl
push
push
call
and
pop
mov
addl
inc
push
ret
sub
inc
mov
mov
add
add
sbb
or
call
or
loopne
lcall
popf
test
in
daa
or
push
call
and
pop
mov
addl
inc
push
ret
push
jg
jnp
mov
call
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
rorl
push
sub
and
shll
and
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
pop
xor
out
fadds
cli
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lods
and
call
and
push
cmp
test
pop
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
pop
gs
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
and
lret
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsl
cmp
push
push
pusha
or
pusha
mov
popa
popa
pusha
and
mov
popa
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
jp
adc
shll
mov
push
call
and
pop
mov
addl
inc
push
ret
popf
in
sbb
imul
add
push
adc
out
das
ret
push
xor
push
push
push
pop
rdtsc
push
pop
pop
pop
push
push
pop
pop
popa
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
mov
dec
push
xchg
cltd
cmp
daa
or
jmp
add
add
add
and
pop
mov
addl
inc
push
ret
jp
jge
fldenv
cmc
xor
xor
cmpl
je
push
mov
pop
mov
xchg
jmp
insb
pop
mov
jmp
outsb
enter
and
inc
idivl
mov
add
add
push
pop
popa
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
push
rcl
push
inc
enter
mov
mov
or
push
call
and
pop
mov
addl
inc
push
ret
rcrb
sub
and
test
xchg
fstps
and
push
push
call
and
pop
mov
addl
inc
push
ret
mov
imul
add
add
mov
pop
call
in
jbe
cmp
test
dec
cmc
mov
and
cmc
pop
pushl
or
mov
call
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
lret
and
adc
mov
mov
movb
push
push
call
and
pop
mov
addl
inc
push
ret
jecxz
aaa
xchg
pusha
ficompl
pop
push
movl
push
push
call
and
pop
mov
addl
inc
push
ret
adc
cmpl
ljmp
push
call
and
pop
mov
addl
inc
push
ret
outsl
aas
mov
aam
call
rorl
movswl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
or
addl
popf
adc
push
push
push
push
pop
pop
rdtsc
jmp
jmp
adc
fildl
loopne
and
or
popa
ds
jno
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
push
cmp
repz
mov
push
adc
push
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
out
cwtl
les
mov
add
mov
lea
jl
mov
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
arpl
jmp
movzwl
nop
jp
push
jle
pop
push
jne
push
push
jmp
lret
dec
or
rdtsc
push
pop
pop
pop
nop
mov
push
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
mov
fisttpll
orl
add
call
mov
pop
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
pushf
test
or
or
push
call
and
pop
mov
addl
inc
push
ret
push
sub
pop
mov
call
mov
cmc
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
jb
xchg
cwtl
push
push
push
call
and
pop
mov
addl
inc
push
ret
adc
push
idivb
into
inc
pop
call
aam
mov
jb
gs
xchg
loopne
and
sub
pop
push
push
jle
push
pop
pop
mov
add
call
mov
jmp
call
pop
sub
mov
lea
sbb
push
push
jmp
sub
in
stos
dec
lods
pop
mov
sub
jmp
das
fiadds
xchg
inc
inc
inc
pushf
mov
jae
mov
clc
pushl
mov
sub
mov
stc
incl
push
push
call
and
pop
mov
addl
inc
push
ret
daa
fmulp
std
xor
mov
pusha
popa
popa
sub
popa
push
push
push
call
and
pop
mov
addl
inc
push
ret
fisttpl
jmp
stc
movswl
pushl
movzwl
js
jg
call
jmp
call
adc
fsubrs
mov
jns
in
adc
add
jle
push
pop
les
mov
jbe
pop
fs
pop
mov
mov
out
in
clc
cmp
jae
jb
clc
mov
movzbl
push
mov
pop
mov
mov
mov
jnp
mov
shr
clc
mul
jbe
sub
mov
sub
mov
mov
pusha
jae
push
pop
mov
popa
jmp
mov
mov
mov
mov
add
mov
add
mov
cmp
jae
jmp
jg
jae
or
mov
call
movb
or
push
rcrw
test
add
add
popl
add
mov
push
mov
pop
andl
movzwl
mov
call
insb
sub
lea
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
ficoml
jge
popf
lds
and
call
push
push
call
and
pop
mov
addl
inc
push
ret
jecxz
inc
out
adc
xchg
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
push
push
mov
and
mov
cld
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
add
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
aas
filds
imul
rolb
push
push
call
and
pop
mov
addl
inc
push
ret
lods
in
mov
or
or
mov
xor
or
push
call
and
pop
mov
addl
inc
push
ret
out
cmp
fdivp
mov
cld
or
mov
mov
jae
jmp
mov
cmpsl
int3
jo
fidivl
add
rorl
and
mov
xor
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
inc
aaa
iret
inc
andl
mov
and
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
dec
xor
lret
xchg
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
in
jl
test
push
and
jmp
hlt
mov
inc
test
add
xlat
mov
add
add
add
and
pop
mov
addl
inc
push
ret
mov
xor
cmpl
je
jmp
push
subb
inc
jle
inc
repz
or
je
mov
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
jno
mov
pop
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
ja
xchg
rcr
xchg
xchg
fldcw
push
call
and
pop
mov
addl
inc
push
ret
leave
dec
dec
sub
dec
push
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsl
rcrb
es
je
add
mov
mov
adc
xor
push
push
call
and
pop
mov
addl
inc
push
ret
lret
adc
jno
add
nop
jl
jge
push
push
rdtsc
pop
pop
push
push
push
jns
pusha
popa
rdtsc
push
push
jmp
mov
cmp
movsb
rdtsc
jmp
xchg
repnz
mov
dec
insb
add
jg
addr16
pop
pop
pop
nop
pusha
pusha
push
pop
xor
popa
jmp
adc
or
cmp
add
push
call
and
pop
mov
addl
inc
push
ret
icebp
cmp
add
or
mov
add
add
or
inc
sbb
pusha
jnp
jmp
test
jne
inc
daa
pop
mov
test
and
add
push
pop
popa
addl
mov
call
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
js
xor
dec
in
rolb
add
push
push
call
and
pop
mov
addl
inc
push
ret
pop
cmp
pusha
adc
pusha
jmp
dec
add
mov
lcall
add
in
sbb
mov
icebp
sub
popa
mov
jmp
or
or
cli
fisubs
mov
add
add
add
or
add
lret
xor
jae
or
mov
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
pop
or
call
and
pop
mov
addl
inc
push
ret
movsl
cmp
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
data16
addr16
ja
mov
pusha
add
sub
popa
mov
sbb
push
push
push
push
jmp
mov
cmp
mov
lods
daa
loope
jmp
pop
rdtsc
jg
push
push
rdtsc
pop
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
xor
jp
pop
dec
xchg
pop
inc
pusha
mov
call
ret
ljmp
jmp
sbbl
sbb
jbe
addb
daa
or
push
call
and
pop
mov
addl
inc
push
ret
inc
jp
push
xor
mov
mov
call
incl
pop
add
orb
add
jg
push
pop
push
push
push
jmp
jne
ds
es
xchg
bswap
fadds
rcrb
inc
and
pusha
jmp
xlat
dec
idivb
dec
mov
xor
pusha
popa
popa
popa
mov
push
push
pusha
popa
pop
pop
mov
push
jmp
outsb
cmpsl
xor
movsb
ds
pop
push
push
call
and
pop
mov
addl
inc
push
ret
mov
pop
and
lea
jne
mov
nop
push
push
push
push
push
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
rdtsc
jmp
cmp
outsl
pop
repz
pop
test
ror
insl
pop
pop
push
push
push
push
push
pusha
popa
rdtsc
pusha
popa
pop
pop
rdtsc
pusha
pusha
popa
pusha
popa
popa
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
mov
int
pushf
dec
andl
call
push
pusha
mov
popa
pop
popa
push
push
call
and
pop
mov
addl
inc
push
ret
movsl
fisttpll
in
popf
icebp
xor
add
imul
or
add
add
jecxz
or
xchg
movsl
sub
popa
mov
cmpl
je
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
popa
shrl
in
int
in
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
xor
push
push
call
and
pop
mov
addl
inc
push
ret
fdivr
and
push
and
cmpl
jne
mov
cmpl
je
pushl
add
call
push
push
call
and
pop
mov
addl
inc
push
ret
inc
mov
mov
push
pusha
cld
and
popa
pop
movl
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
sub
in
mov
xchg
push
push
jmp
push
pushf
mov
rdtsc
pusha
jnp
push
push
rdtsc
pop
pop
popa
pop
pop
push
push
jmp
mov
je
xor
aaa
sti
xor
mul
jno
xchg
mov
pushl
jo
push
sub
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
aas
xchg
and
sub
mov
sub
mov
jmp
push
out
lods
add
shll
and
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
jae
cmc
mov
xor
add
add
mov
mov
lea
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ss
cmp
push
call
stos
movsb
add
push
fs
jge
outsb
lcall
pop
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
addr16
xor
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
adc
xchg
sahf
out
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
je
add
push
mov
xchg
jmp
add
cmp
sbb
and
push
jmp
mov
xchg
mov
fdivrl
sub
xor
test
add
add
pop
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
or
test
or
mov
popa
mov
pushl
pusha
pusha
add
mov
popa
mov
popa
mov
call
sbb
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
pop
and
adc
xchg
pusha
push
push
push
pop
rdtsc
jmp
push
cltd
ret
fadds
xor
cs
add
pop
push
pusha
popa
pop
popa
push
jmp
shrl
inc
int
jmp
push
sub
repz
daa
or
push
add
add
ret
lods
stc
ds
notb
xchg
fstps
and
sub
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
out
sub
add
movsb
jo
mov
outsb
test
popa
call
push
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
mov
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
stos
xchg
int
or
dec
setae
or
adc
add
pop
sbb
decl
jg
sbb
daa
icebp
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
inc
cmpb
add
push
call
and
pop
mov
addl
inc
push
ret
fnclex
in
insb
jmp
cwtl
sbb
lret
out
iret
lock
pop
cli
ljmp
xchg
fstps
and
movl
mov
jmp
jmp
adc
xor
loope
jmp
insb
iret
scas
lods
mov
adc
add
je
call
outsl
lret
inc
add
mov
xor
lea
stc
nop
jle
jns
pusha
popa
push
push
push
pusha
push
push
rdtsc
pop
pop
jmp
jp
sahf
pusha
pop
jnp
push
outsl
aaa
in
adc
xor
push
push
rdtsc
pop
pop
rdtsc
push
pop
pop
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
movsb
dec
or
int
lea
and
push
push
or
pop
push
jb
call
ret
in
scas
and
adc
lret
xorb
jg
pop
lea
or
add
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
mov
add
add
or
add
ja
aad
xchg
adc
and
mov
jp
adc
push
push
push
call
and
pop
mov
addl
inc
push
ret
or
popa
xor
or
push
push
call
and
pop
mov
addl
inc
push
ret
cwtl
lock
sbb
aaa
and
movzwl
lea
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
push
jge
testb
lea
mov
add
test
test
push
xchg
add
push
push
call
and
pop
mov
addl
inc
push
ret
fdivrs
pusha
lods
and
push
pusha
jmp
xor
inc
bound
add
test
cmpsl
rcl
paddb
add
jnp
xor
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
outsb
cltd
mov
mov
jmp
call
pop
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
xor
nop
jo
push
push
push
push
rdtsc
pop
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
push
jl
jmp
push
movsb
int
mov
call
add
pop
pop
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
xchg
shrl
incl
push
push
call
and
pop
mov
addl
inc
push
ret
xor
dec
lea
push
push
call
and
pop
mov
addl
inc
push
ret
repz
pop
sub
pusha
mov
mov
popa
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
xlat
sub
mov
call
jmp
mov
mov
mov
out
mov
in
xor
cmp
jae
sub
mov
movzbl
mov
mov
mov
mov
stc
shr
pusha
mov
movswl
popa
mul
jge
xor
sub
sbb
mov
mov
js
movswl
jmp
mov
mov
or
cld
add
add
mov
cmp
jae
mov
jmp
movswl
mov
sub
and
je
andl
clc
mov
mov
jmp
lea
xor
push
push
push
call
and
pop
mov
addl
inc
push
ret
imul
test
sub
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
aad
mov
je
outsl
adc
add
push
call
and
pop
mov
addl
inc
push
ret
aad
shlb
stc
xchg
mov
and
sub
cld
push
push
call
and
pop
mov
addl
inc
push
ret
stc
jae
cmc
jg
in
sub
adc
sub
xor
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
xlat
fsubr
adc
add
xchg
scas
sub
push
adc
loopne
jnp
popa
fucomp
sub
add
mov
jmp
fnstenv
xor
add
cwtl
cmpsl
or
push
push
call
and
pop
mov
addl
inc
push
ret
mov
jp
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
popf
mov
sarl
es
addb
or
push
mov
mov
add
mov
mov
shr
add
mov
pop
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
call
and
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
imul
add
mov
mov
adc
popa
lea
movswl
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
lock
adc
xchg
mov
cmpl
je
mov
cmpl
je
adc
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
inc
inc
inc
pushf
mov
popf
icebp
and
fnstcw
and
jmp
sti
cs
std
stos
xchg
mov
or
je
mov
mov
mov
mov
xor
cmc
nop
jmp
push
hlt
ret
and
dec
push
jo
push
push
push
pop
rdtsc
push
pop
pop
pop
nop
jns
mov
cld
push
mov
push
js
push
jge
pop
xorl
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
add
mov
call
add
mov
mov
jmp
call
xor
icebp
jmp
mov
lock
pop
mov
mov
movl
jmp
add
in
stos
cmp
jge
mov
fdiv
mov
jnp
mov
mov
mov
mov
mov
jmp
mov
mov
cs
lahf
adc
xor
leave
pop
and
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fbld
sub
xchg
push
pusha
jmp
dec
divl
hlt
lds
jmp
and
jmp
andb
push
push
push
push
push
pop
rdtsc
jmp
jae
mov
pop
mov
cs
pop
rdtsc
push
jmp
pop
mov
in
pop
pop
pop
xchg
call
sub
dec
xchg
mov
push
movzwl
pop
pop
pushl
jmp
xor
adcb
call
incl
pop
add
adc
add
gs
jo
mov
jmp
mov
lcall
adc
add
add
stos
mov
int
std
cmp
outsb
cwtl
in
in
xor
rdtsc
pop
pop
popa
pop
mov
jbe
jmp
mov
jns
ljmp
pusha
push
push
push
push
rdtsc
pop
pop
rdtsc
jo
pop
pop
jb
jmp
cwtl
push
jb
rcrl
mov
dec
push
imul
push
popa
mov
jmp
push
jp
sbb
insl
outsb
mov
mov
test
mov
or
push
call
and
pop
mov
addl
inc
push
ret
push
jns
and
push
push
jae
pusha
popa
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
in
call
mov
popa
push
push
call
and
pop
mov
addl
inc
push
ret
pop
enter
movl
stc
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
and
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
push
jno
or
mov
adc
or
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
pusha
mov
popa
push
push
call
and
pop
mov
addl
inc
push
ret
test
mov
push
and
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
pop
and
sbb
or
cmpl
je
mov
pushl
or
call
mov
mov
jmp
or
cmp
push
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
daa
es
mov
xchg
push
push
pusha
jo
push
push
rdtsc
pop
pop
popa
rdtsc
jmp
loop
jle
or
shrl
out
xchg
pop
pop
push
push
push
push
push
push
push
rdtsc
pop
pop
rdtsc
jnp
pop
pop
rdtsc
push
jmp
movsl
shrb
insl
sahf
cwtl
cmp
xchg
cmpsb
rcrb
pop
pop
xchg
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
adc
add
add
call
lcall
or
repnz
loopne
xchg
adc
or
and
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fsubs
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
js
jmp
aas
mov
xchg
add
add
or
or
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
cmp
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
out
outsb
jo
test
pop
sbb
mov
pusha
mov
add
popa
xor
lea
push
push
call
and
pop
mov
addl
inc
push
ret
in
add
repz
xchg
call
lret
loopne
add
xor
std
pop
xlat
dec
and
mov
pop
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
movsb
out
pop
add
pusha
add
jmp
outsb
pushf
cmp
aad
jne
xchg
popa
push
push
push
call
and
pop
mov
addl
inc
push
ret
or
scas
sbb
mov
or
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
jge
pop
test
jmp
cmp
sub
add
iret
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
sub
jae
and
ficoml
add
iret
cmpsl
fwait
push
pusha
push
jo
pop
push
push
push
pop
rdtsc
jne
pop
pop
popa
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
mov
aas
pop
lahf
mov
ret
push
mov
pop
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
add
call
mov
add
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
pop
aad
std
or
push
jmp
jle
sbb
lahf
in
decl
push
call
and
pop
mov
addl
inc
push
ret
dec
pop
xor
aam
outsl
bound
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
es
xor
or
add
mov
or
incl
jae
call
push
push
call
and
pop
mov
addl
inc
push
ret
inc
aaa
mov
lahf
or
mov
pushl
adc
call
push
push
call
and
pop
mov
addl
inc
push
ret
xlat
adc
fildl
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
loopne
rorl
movswl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
gs
call
or
movswl
movb
sub
movl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
nop
push
aaa
dec
jge
shll
or
stos
repnz
decl
fimull
or
push
call
and
pop
mov
addl
inc
push
ret
lcall
or
or
test
insb
add
push
push
call
and
pop
mov
addl
inc
push
ret
loope
fmull
movl
push
push
call
and
pop
mov
addl
inc
push
ret
adc
add
pushl
jmp
pusha
adc
adc
xor
rorb
mov
add
add
mov
add
add
xchg
mov
add
add
add
and
pop
mov
addl
inc
push
ret
mov
adc
add
dec
jne
in
xor
mov
shrl
xchg
and
jne
sbb
pop
popa
push
call
mov
jmp
inc
lods
mov
add
mov
in
cmp
push
scas
test
sub
jl
inc
test
imulb
cwtl
dec
enter
in
pop
or
stc
mov
stos
adc
cmpsl
push
push
jmp
stos
sti
inc
inc
xchg
sbb
dec
xchg
sbb
ficoml
jmp
mov
inc
push
inc
dec
mov
xor
sbb
cmpsl
push
imul
push
cmp
in
scas
sti
inc
inc
scas
sbb
dec
xchg
sbb
aam
cmp
mov
imul
sub
mov
adc
loop
jmp
push
pop
insb
adc
add
jmp
push
push
jmp
cmp
jmp
push
sbb
mov
addr16
push
and
int
jg
push
dec
inc
sub
aas
aas
push
xor
and
jmp
cmp
jmp
push
sbb
stos
mov
jmp
push
cs
push
js
push
add
ljmp
cmp
push
cmp
int
data16
xchg
fmull
aam
bswap
insb
cmp
int
outsb
scas
xor
shll
cmp
pop
in
pop
pinsrw
cmp
daa
sub
jne
pop
mov
int
sub
xchg
pusha
jle
push
jg
add
mov
inc
xchg
pop
stos
paddb
jae
sar
inc
cmp
push
inc
pushf
push
jl
xor
jo
mov
insl
push
and
into
cmp
xchg
mov
add
mov
das
dec
or
mov
and
mov
sub
cmc
or
or
dec
loope
jnp
loope
jnp
loope
jnp
loope
fs
out
jnp
or
push
cli
xchg
fidivl
lret
push
cltd
jae
or
mov
sub
out
mov
and
ss
lods
sub
mov
pop
sub
cltd
cmp
sarb
push
push
out
xor
loop
das
lock
in
lock
xlat
out
xchg
and
int3
stos
xchg
rcll
aas
mov
icebp
mov
lret
adc
into
mov
and
pop
scas
das
jmp
mov
ljmp
xchg
daa
inc
inc
push
cmc
ja
pop
xchg
mov
mov
pop
movsl
mov
lock
sub
inc
pop
adc
loopne
cmp
inc
sahf
fmuls
shlb
xor
test
mov
fldenv
mov
loop
mov
cwtl
xor
sub
xchg
rcll
xchg
xchg
ds
adc
push
cld
cld
xchg
mov
cwtl
cmc
fwait
adc
dec
inc
push
inc
in
idiv
test
xor
xor
fimuls
leave
nop
xor
xlat
add
mov
push
loop
jnp
enter
xchg
xchg
pop
and
in
scas
sbb
lods
arpl
xchg
fstpl
test
in
ret
or
adc
movsl
mov
rol
aam
hlt
mov
clc
cmp
das
lods
adc
gs
lret
mov
lret
mov
test
push
jnp
les
sub
jbe
pop
mov
ret
test
inc
xchg
add
decb
ss
lock
fisttpl
xchg
arpl
shl
rorl
jb
push
aad
loopne
shrl
xchg
jge
inc
test
push
in
push
pushf
fwait
in
cs
in
test
lret
mov
mov
std
notb
push
aaa
lret
arpl
sub
loop
jnp
jmp
and
pop
mov
jo
push
gs
sub
sarb
jp
push
adc
imul
inc
stos
idivl
sbb
add
cltd
stos
imul
or
pop
insl
sub
xchg
mov
mov
pop
popf
push
jbe
pop
push
xchg
insl
sub
adc
icebp
jo
lds
xchg
and
divb
sbb
jno
push
cmp
and
pop
ret
and
jne
pop
jns
pop
sbb
mov
mov
xchg
inc
adc
pop
clc
icebp
outsl
dec
push
stos
cwtl
ret
cwtl
mov
cmp
les
addr16
or
cmp
repz
mov
cmp
rcll
mov
inc
xlat
outsb
sub
mov
lahf
sahf
dec
in
adc
jae
mov
mov
mov
or
scas
lcall
adc
stc
or
fs
movsl
mov
inc
jae
push
pushf
xchg
xor
mov
mov
mov
int
aaa
shlb
sub
sbb
in
in
mov
aam
in
loop
test
mov
int
dec
ret
insb
mov
push
xlat
in
arpl
mov
adc
mov
mov
pop
cmpsb
stos
pop
loopne
and
fwait
sbb
xchg
loope
xlat
sbb
dec
push
loop
and
leave
inc
xchg
ss
jl
lahf
push
daa
cs
adc
jbe
mov
loop
add
cmp
jno
cltd
push
jmp
adc
jb
mov
cmp
cmp
mov
int3
sbb
aas
add
jbe
add
stc
loope
scas
sub
sub
and
inc
scas
push
fs
lcall
add
mov
jns
jl
cmpsb
adc
and
call
hlt
mov
pop
lock
mov
xchg
insl
xchg
pusha
test
xor
arpl
clc
sub
mov
xchg
add
dec
sub
pop
jl
mov
add
mov
inc
xor
inc
xchg
nop
hlt
inc
pop
dec
inc
mov
cmc
jb
cmpsb
sub
xchg
add
sub
sub
insl
dec
jge
mov
jae
call
cmp
sub
pop
jle
push
pop
addr16
add
addb
mov
test
xchg
rcll
push
adc
jnp
loope
push
lret
push
cwtl
into
xchg
add
cmp
lcall
jae
add
xor
cmc
push
aad
loop
ficoml
jmp
rcll
loope
fwait
in
jg
cmp
push
lahf
ja
fldenv
test
jnp
loope
push
push
fs
sbb
push
lahf
int
das
in
and
cmpsl
pop
test
mov
jb
bound
jecxz
push
push
jnp
add
push
rcrl
inc
jo
jae
inc
lahf
leave
jmp
xchg
add
cmp
jg
xor
pop
jbe
push
jnp
fs
jg
in
xlat
clc
adc
push
jg
loope
mov
xlat
jg
cmp
scas
dec
and
and
movsb
jp
xchg
jp
cmp
xor
test
mov
or
or
js
adcb
xchg
adc
pop
mov
popa
cmpsl
movsl
fbstp
and
pop
test
mov
and
fists
sbb
cmc
aaa
cltd
aaa
mov
sbb
sbb
gs
push
mov
int
jae
nop
popa
mov
lods
xlat
inc
jmp
cwtl
pop
leave
inc
jnp
loope
shrb
xchg
nop
push
push
jle
or
lahf
pop
cmc
sarb
xor
aam
scas
mov
sarl
dec
push
jnp
mov
push
jnp
bound
push
ja
loop
repnz
mov
shll
stos
leave
iret
mov
out
cmp
or
subl
push
inc
shll
call
imul
jnp
push
lret
lcall
pop
inc
push
mov
or
ss
mov
int3
push
loope
jbe
jns
jp
dec
jnp
loope
mov
gs
xor
cmc
jne
push
cmpsb
in
outsl
mov
repz
jmp
sbb
dec
ljmp
mov
adc
scas
jp
and
aam
nop
mov
xor
daa
add
mov
or
ljmp
inc
or
sahf
pop
push
lods
sahf
pop
push
std
pusha
jb
jns
pop
repnz
mov
jne
popa
out
test
inc
jae
out
push
add
xchg
sbb
jae
mov
push
fistpll
mov
and
adc
sahf
pop
repnz
rcl
and
clc
pop
jecxz
cmc
add
push
lea
adc
lret
inc
rorb
sbb
repnz
mov
repnz
mov
cmp
or
and
lcall
stos
mov
add
sub
fstpt
pop
dec
sbb
out
movsb
out
das
dec
inc
insl
mov
push
lods
subl
lock
lock
xor
mov
sbb
xor
mov
push
imul
stos
push
add
lods
xor
sub
leave
into
dec
xlat
movsb
fstpt
mov
and
push
cmpsb
nop
sub
cmp
lods
fstpt
pop
and
lods
push
jecxz
ret
fadd
inc
mov
sub
push
mov
fstpt
sub
jmp
iret
or
icebp
addb
js
mov
mov
add
and
pop
loope
aad
and
inc
sti
out
mov
iret
or
adc
inc
mov
mov
js
lods
stc
sti
add
fstpt
insb
xrelease
pop
inc
and
mov
arpl
xchg
jmp
incb
xor
mov
arpl
push
pop
stos
sbbb
movsb
xor
add
mov
push
adc
stos
mov
rcr
les
mov
inc
and
mov
fsubrs
arpl
movsl
bound
ret
mov
or
sub
or
pop
stos
rol
shlb
pop
stos
popf
pop
xchg
xor
and
in
xchg
xchg
test
inc
movb
daa
movsl
mov
or
stos
in
das
inc
stos
mov
pusha
aad
test
fsubp
test
adc
imul
pop
stos
mov
mov
mov
add
mov
or
movsl
fidivs
xrelease
leave
int3
andb
mov
and
test
iret
and
cmp
inc
mov
mov
not
inc
jecxz
push
hlt
insb
lods
andl
push
fsubs
sub
adc
adcb
fsubrs
push
data16
pop
iret
xchg
mov
scas
xchg
jne
stc
or
sub
add
pop
and
and
pop
cmp
aas
outsl
sub
fmull
into
addl
xchg
imul
inc
xchg
cmpsl
les
fnstcw
push
xor
push
scas
das
sub
das
sarb
js
test
xor
pushf
inc
in
or
pop
aas
pop
pop
test
out
or
cmpsl
push
xor
xor
mov
mov
push
xor
sbb
adc
sub
inc
or
scas
xchg
push
popa
pop
cmpsl
push
xor
xor
mov
mov
push
xor
cmpsb
mov
lret
fists
pop
cmp
xor
xchg
mov
lods
movsb
mov
push
xor
mov
push
xor
push
scas
das
sub
das
inc
mov
or
and
scas
mov
lods
fnstcw
push
xor
lcall
sarb
test
outsb
ja
leave
popf
push
jecxz
stc
mov
dec
test
out
cmpxchg
mov
lret
arpl
xchg
jb
mov
mov
out
imul
sub
movsl
mov
xor
jo
sub
cmp
ds
aaa
repz
pop
outsb
pushf
pop
jae
mov
sub
xchg
ja
repnz
adc
dec
jl
js
hlt
jnp
repz
mov
mov
out
mov
push
mov
movsb
in
mov
ja
xchg
adc
das
jnp
push
mov
xchg
cwtl
ja
adcl
mov
mov
test
mov
xchg
cwtl
ja
mov
or
cmpb
mov
mov
add
mov
jp
dec
mov
jp
ja
xchg
cwtl
cli
int
lret
addr16
cmpsb
mov
xchg
or
xor
lock
mov
mov
xor
repz
lea
pop
icebp
mov
push
out
aam
in
mov
sub
call
cltd
ja
xchg
rorl
out
push
inc
add
lock
iret
lock
jae
ja
ljmp
adc
pop
inc
mov
fstpt
jnp
ja
xchg
sub
pop
nop
ja
xchg
clc
cvttps2pi
mov
ja
xchg
into
or
ret
jge
push
mov
push
movl
lock
jae
ja
out
cmp
stos
xchg
test
jne
push
mov
push
cmp
lock
iret
lock
jae
ja
in
add
mov
inc
sbb
push
jne
xchg
cwtl
test
push
and
xor
xor
js
cltd
cmpsb
pop
xor
pop
jb
push
xchg
mov
sub
and
pop
in
je
inc
pop
fimull
stos
sahf
js
jne
xchg
test
sub
push
js
insb
aam
addr16
lea
ljmp
dec
push
mov
fildl
jae
push
push
xchg
jne
dec
pusha
jno
adc
cs
mov
inc
in
push
dec
sti
cmpsb
mov
pushf
leave
in
div
or
fimuls
and
mov
sbb
push
sti
outsb
mov
cmpsb
mov
pushf
leave
in
idiv
or
fiadds
and
in
sbb
add
mov
sub
ljmp
cmpsb
xchg
sti
leave
in
mov
pushf
leave
in
idiv
or
fistps
and
in
push
nop
adc
add
stc
dec
aam
and
ret
sbbl
das
and
in
push
mov
cmc
addl
enter
cld
fcomps
adc
inc
xchg
mov
fiaddl
pop
inc
pusha
repz
pushf
and
inc
pop
pushf
leave
in
idiv
or
fistps
and
in
push
nop
adc
lcall
pop
ja
dec
out
cwtl
mov
pushf
leave
sbb
scas
dec
int
or
cmp
outsb
scas
xchg
cld
push
mov
aas
jno
add
dec
mov
push
loopne
jb
adc
pop
and
idivl
scas
xchg
gs
add
into
insl
scas
xchg
gs
push
repz
gs
rcrl
pop
clc
mov
das
es
lret
xchg
jmp
test
daa
mov
es
mov
lcall
xchg
inc
shrb
xchg
gs
lds
jnp
mov
pop
adc
test
cmp
xor
mov
push
sbb
and
mov
insb
dec
gs
scas
sub
xchg
jmp
testl
jmp
mov
push
inc
jmp
movsb
icebp
jb
insb
lea
jge
out
xor
adc
scas
xchg
lret
aam
or
pop
outsb
imul
call
pop
mov
and
adc
xor
ds
imul
jmp
mov
xor
xlat
sub
lock
or
jl
mov
int3
mov
and
mov
lret
mov
xchg
fisttpl
and
mov
lret
mov
ret
and
std
or
insb
pusha
mov
and
insb
add
arpl
push
push
loop
imul
mov
and
jo
and
fisubl
arpl
mov
sarl
mov
dec
addl
call
fwait
mov
call
and
xor
loopne
jg
and
adc
and
call
js
dec
xchg
adc
and
je
js
and
cltd
fcoms
pop
ljmp
ficoms
pop
shll
rcll
jg
and
jae
je
std
pop
push
xchg
int
push
jno
and
xor
fidivs
push
in
mov
mov
push
imul
shl
arpl
imul
dec
push
push
gs
std
xchg
int3
lock
pop
iret
inc
out
pop
lods
xchg
in
jno
jmp
leave
xchg
fcmovbe
xor
cmp
dec
mov
lods
push
rorb
jb
sahf
lcall
xor
jle
jnp
xchg
add
in
addr16
xor
test
lret
dec
push
enter
jae
ljmp
pop
xchg
jle
xor
daa
adc
jae
pop
push
sub
loopne
cltd
fmull
cmc
dec
lds
notb
lods
movsl
dec
sub
sbb
push
xor
out
xchg
enter
lret
jbe
aas
lret
xlat
xor
push
lock
cmc
xchg
xor
stc
hlt
into
insb
fldcw
pop
ja
xlat
push
sub
sub
push
and
xchg
add
stc
cmc
imul
cli
ss
sub
jne
jbe
hlt
dec
sub
je
int
movsl
xlat
sub
repz
mov
mov
lret
and
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
sub
out
sarl
dec
mov
ficompl
inc
add
fbstp
dec
add
ficompl
into
sub
push
or
mov
dec
pop
ret
dec
loopne
cmp
inc
pop
pop
jmp
sbb
pop
fmuls
or
xor
icebp
pop
and
cmc
xchg
add
xlat
xor
out
mov
cltd
fsubs
popa
mov
push
push
sbb
jo
dec
fmull
rolb
rcr
in
dec
sbb
jle
cltd
ja
sbb
sahf
popf
sbbl
jne
ljmp
test
xor
fisttpl
cmp
nop
mov
test
mov
lods
mov
cmp
shrb
mov
imul
fistpll
rclb
ret
or
out
add
lret
pop
fs
push
in
sub
mov
clc
and
xchg
rclb
out
xchg
jecxz
fbld
xor
rolb
or
xlat
repz
call
bound
mov
jmp
jmp
cmp
jb
add
arpl
add
sbb
dec
dec
outsb
hlt
fcoml
adc
subb
int3
mov
inc
mov
fidivl
fstps
shll
cld
cwtl
mov
sbb
jae
imul
sub
fsubr
fwait
nop
int
sub
lret
cwtl
cli
mov
notb
test
fdivl
inc
push
testb
push
insb
mov
sbb
xchg
data16
push
nop
out
and
inc
movsl
fisubrs
push
mov
ds
xchg
or
mov
ja
lret
dec
mov
mov
lds
mov
cmp
pop
pop
xchg
ret
mov
test
fcomp
stos
adc
jmp
cmp
mov
or
fs
popa
adc
push
xor
mov
xchg
inc
dec
add
lcall
add
sbb
jae
popa
in
push
ret
les
out
es
insl
dec
shl
adc
dec
fwait
mov
insl
inc
mov
stc
dec
push
repnz
test
cs
shlb
sbb
bound
cmpsl
addb
addr16
int
jmp
sbb
or
shll
xchg
lds
int
insb
push
pushf
lds
xor
lret
jle
cmp
test
fdiv
neg
sbb
fidivl
loop
sub
insl
repz
mulb
jp
out
popa
push
dec
xchg
or
jae
fwait
in
jae
and
lahf
bnd
bound
sub
and
iret
push
add
out
xor
mov
stc
loopne
cmp
repz
inc
mov
jb
mov
pop
loopne
adc
mov
xor
adc
test
jg
sub
sub
mov
scas
mov
out
lds
push
mov
sbb
adc
cmp
faddl
pop
cmp
lock
shll
lds
jl
daa
test
and
mov
fistpll
mov
jecxz
fbld
add
andb
adc
outsb
stc
cmc
movsl
mov
out
sub
lea
dec
in
aaa
pop
push
adc
ficomps
fsts
shll
test
jl
fwait
pop
jae
push
sahf
or
pop
mov
movsl
es
dec
mov
jno
xor
push
jnp
insb
pop
subb
cmp
cmp
xor
es
out
loop,pn
adc
fs
cmpsl
or
in
sub
into
add
cmp
jmp
add
mov
jmp
in
aaa
fsubr
fs
mov
arpl
dec
les
les
xchg
outsb
sti
mov
mov
std
jmp
inc
cmpsb
lcall
out
fimull
push
dec
cmp
jmp
repz
repnz
ficompl
inc
in
jno
push
lds
test
loop
ds
into
adc
idivb
pop
test
mov
jne
mov
test
add
in
sbb
popa
sbb
inc
js
cwtl
out
push
jne
mov
test
loope
cmp
sub
pop
cmp
fbstp
inc
out
sti
push
nop
cmc
cltd
xor
enter
dec
cmp
lahf
add
fimuls
jmp
testb
shll
dec
pop
in
push
and
and
hlt
test
repz
push
push
test
jle
dec
inc
loop
fwait
sub
xor
icebp
stc
fs
ret
mov
stc
push
jnp
mov
adc
or
jbe
int3
sbb
inc
andl
jmp
or
sub
sub
pushf
das
or
mov
dec
sbb
mov
sbb
leave
test
stos
ja
sub
jno
mov
dec
sbb
jae
outsb
rolb
sbb
jae
mov
pop
inc
rcrl
adc
pop
pop
in
mov
shll
pusha
jb
mov
xchg
pushf
data16
movsl
addb
int3
int3
test
cmp
jno
xchg
jb
adc
mov
pop
cmp
xchg
jl
jg
shll
sbb
cmp
sub
icebp
int3
ds
shlb
pusha
in
or
mov
add
cmp
gs
leave
mov
sbb
xchg
dec
into
xor
cmp
push
clc
and
sbb
pop
ret
jbe
cmp
sbb
cmp
mov
jle
sbb
jae
outsb
mov
cli
jp
fs
cmp
sub
cmp
test
rclb
xor
icebp
mov
xor
es
jp
dec
pop
lock
fbstp
sbbb
mov
jae
adcb
xchg
cmp
mov
inc
mov
dec
mov
add
push
movsb
mov
js
cmp
mov
jp
cmp
push
cmp
fs
adc
inc
jne
cli
mov
push
leave
jb
test
adc
daa
stos
pop
mov
icebp
mov
pcmpeqb
push
jae
outsb
movsl
out
movsl
sub
xor
scas
rcr
sbb
jae
cld
cwtl
xor
push
pop
dec
lcall
ret
cmp
aad
lods
ja
inc
out
dec
push
push
jmp
aaa
aaa
gs
jge
pop
int
add
jmp
lds
fs
xchg
addr16
jae
pop
or
orb
js
mov
sbb
mov
je,pn
in
iret
push
les
jecxz
add
in
pop
mov
data16
mov
imul
add
je
push
bound
push
loopne
sbb
jae
inc
add
dec
imul
push
out
int3
push
inc
ss
sti
cs
push
xor
sub
loope
jbe
inc
mov
mov
cs
mov
pop
cltd
daa
sbb
mov
jae
dec
ret
rolb
inc
idivb
push
int
mov
gs
mov
add
in
add
xor
jne
in
mov
cmovno
mul
outsl
xor
sub
or
xchg
fisttps
dec
push
bound
dec
mov
popa
pop
mov
insl
jne
sub
fwait
rolb
shlb
xor
pop
cmp
gs
pop
ficomps
stos
jne
stos
insb
xor
icebp
sbb
adc
pop
lret
mov
pop
jb
ds
addl
mov
inc
push
push
push
jbe
lods
cmp
xadd
test
arpl
ret
xor
add
sahf
lahf
movsb
sub
push
or
push
inc
mov
xor
out
test
push
popf
imul
or
xchg
adc
or
ret
cmp
popa
lret
enter
cli
nop
sub
adc
xor
ror
inc
and
fs
outsl
jecxz
jecxz
dec
cmpl
movb
gs
fldcw
jge
pop
add
xor
fistpl
test
xchg
jae
push
push
scas
push
out
xchg
pop
xchg
dec
cmp
jecxz
and
ja
fldenv
pop
data16
ja
cltd
js
into
dec
jmp
loop
dec
aad
add
and
rolb
gs
xor
inc
ficomps
stos
in
out
out
push
scas
rorl
lret
mov
ret
and
aam
jle,pn
loopne
jge
aas
sub
adc
adc
arpl
jmp
cmp
popf
dec
mov
mov
dec
nop
out
cmpsb
mov
fistps
imul
and
mov
xchg
mov
push
ror
nop
aad
or
fwait
xchg
mulb
pop
test
aam
jno
sbb
add
xchg
ret
jb
add
out
cmc
pop
cmp
mov
add
mov
xor
and
jecxz
jae
test
push
jbe
andb
repnz
fistpll
lods
jecxz
dec
jbe
mov
sub
sarb
mov
xchg
out
lods
call
dec
xor
imul
or
es
fsubs
jae
xchg
mulb
xor
xchg
mov
inc
sbbl
jae
adc
push
xor
cmp
mov
xchg
pop
xor
cmp
stc
dec
pop
loopne
cmp
outsl
jb
fs
nop
pushf
rclb
cli
xchg
fwait
lods
xchg
int3
xchg
rclb
pop
jmp
push
pop
sbb
add
cmp
stos
adc
jge
adc
jle
iret
sub
fwait
sub
lahf
add
dec
xchg
mov
movsb
lock
jo
test
cmp
and
ret
jne
jle
imul
nop
out
leave
add
and
mov
in
dec
sbb
gs
aam
shll
mov
mov
and
add
lahf
aas
jno
cmp
push
mov
jl
leave
enter
cmp
out
jmp
test
and
ljmp
push
nop
out
lret
mov
xchg
cwtl
negl
das
xchg
negl
popa
sub
out
ret
sub
cmpb
test
jle
pop
lea
sub
andl
dec
nop
out
adc
cltd
dec
pop
sub
es
push
xchg
enter
cmp
out
lcall
mov
mulb
inc
pop
adc
ss
imul
out
add
mov
shrb
stc
sbb
jae
add
cmp
sub
or
das
cmp
jp
stos
in
nop
out
test
adc
int3
popf
xor
insb
push
add
pusha
push
dec
nop
out
loope
ja
cmp
out
notb
or
sbbl
imul
cs
xor
sbb
mov
fidivl
mov
inc
pop
jno
lea
ret
in
jno
xor
sub
cmp
mov
sbb
push
popa
insl
mov
push
cmp
xchg
mov
adc
mov
pusha
xchg
push
insl
out
mov
cmp
leave
xchg
jecxz
push
xor
jl
cmp
loop
clc
and
sub
pusha
xchg
fists
test
mov
adc
int
push
popa
xchg
loope
add
jnp
in
stos
lret
xor
dec
and
and
in
or
decl
and
cld
mov
adc
cs
xchg
shlb
stos
fdivl
jns
sti
pushf
or
mov
outsl
das
sti
and
sti
and
sti
and
das
outsl
das
xchg
loop
icebp
daa
pop
mov
test
jecxz
in
aad
repz
dec
sahf
cmpsb
jns
pop
xor
sub
fidivrs
in
lret
iret
hlt
fmul
inc
xor
inc
lods
and
xchg
pop
and
add
das
push
outsl
push
add
cmpsb
dec
ret
add
jg
pop
push
xchg
xchg
and
cmp
insl
lock
stos
and
jle,pn
xor
mov
sub
mov
dec
cmp
in
fsubr
or
repnz
fcompl
cmpb
add
pop
imul
or
aaa
or
or
popa
inc
jp
inc
sub
jns
inc
outsl
das
xchg
flds
dec
jo
gs
mov
jb
in
rcrb
mov
pop
in
aaa
lods
xor
lods
mov
pop
lcall
or
dec
mov
pop
sbb
addr16
pop
imul
mov
push
push
mov
xor
sarb
sub
loope
mov
stos
sub
jge
stc
mov
adc
in
lahf
aas
push
stc
lahf
sub
cmp
pop
rorl
ror
dec
out
sarb
sbb
aaa
jae
fldenv
insl
lods
sbb
rorb
mov
sbb
stos
cmp
mov
jns
pop
loop
xor
lods
ret
xorb
stc
adc
sbb
gs
stos
pop
xor
jbe
push
rolb
xchg
lret
pop
fs
and
loop
jbe
cmc
add
or
xchg
adc
scas
fildl
test
popf
lock
addr16
das
dec
rcr
jo
mov
and
cmpsb
mov
nop
pop
jle
ss
cmp
push
dec
in
stc
sarl
push
ljmp
call
shrb
daa
std
leave
sti
mov
mov
mov
inc
out
dec
pop
xchg
xor
in
fisttpl
cmpb
jp
loopne
les
and
and
loopne
shll
aas
jecxz
hlt
mov
sarb
dec
mov
out
sub
test
sbb
mov
lcall
jmp
cmp
xor
ja
mov
lods
cmc
pop
in
xchg
scas
dec
test
mov
mov
push
jmp
inc
pop
cmp
fcmovnu
add
lods
push
jne
je
jb
and
outsl
out
lock
sbb
dec
mov
out
in
cld
out
xor
jb
or
cmpsl
cltd
test
shrl
pop
cmc
and
cmp
out
mov
je
jbe
rcll
adc
fwait
enter
push
mov
popf
fstpl
xor
cld
outsl
das
sti
xlat
aam
sbb
int
pop
loope
lahf
inc
mov
in
or
push
out
jmp
mov
and
jmp
xchg
xor
int
and
arpl
mov
das
inc
enter
push
mov
xor
rcl
sbb
fsubr
or
mov
jmp
mov
cmpb
insb
fistps
jo
jmp
mov
nop
lahf
adc
testl
addr16
cmc
and
mov
addr16
xor
imul
ljmp
fs
sysenter
int3
fiaddl
fildl
out
out
out
jns
lret
rorb
rclb
pop
in
or
or
testl
push
scas
mov
or
cmp
pop
out
repz
xor
cwtl
jmp
cmp
push
scas
mov
cmp
inc
dec
sub
in
jbe
sahf
cmc
push
jl
lret
pusha
lds
pop
pop
jo
or
xchg
imul
pushf
test
or
inc
jnp
push
sub
dec
in
clc
outsl
sub
out
sahf
xchg
xor
sbb
sbb
fists
shr
sub
push
jns
sbb
jle
into
std
icebp
sbb
out
repnz
int3
stc
sub
sbbl
popa
fsubrs
fs
cwtl
jmp
dec
and
or
xor
mov
mov
and
sti
and
xchg
or
repz
push
push
in
pop
mov
pushl
ss
mov
into
pop
inc
inc
js
xor
icebp
arpl
push
jns
mov
adc
sbb
dec
cli
and
rolb
idiv
sub
jns
adc
fwait
adc
int3
cs
out
dec
jg,pn
das
sti
inc
fld
sub
idivl
arpl
inc
dec
cli
and
bound
adc
movsb
mov
lret
stc
sti
cs
pop
mov
mov
cmpsb
jle
addr16
sahf
jbe
sbbl
nop
out
outsb
outsl
outsl
jne
insl
push
and
dec
dec
cmp
xchg
pop
sub
test
addb
mov
int3
and
inc
sub
ljmp
test
adc
xchg
push
inc
cs
and
pop
aas
test
dec
inc
inc
and
sub
push
test
add
fstl
dec
divb
xchg
lds
adc
mov
adc
cmp
sub
pusha
jbe
lea
mov
and
jg
gs
sti
and
subl
mov
and
and
jmp
mov
jbe
mov
outsl
das
outsl
dec
cmp
dec
imul
jp
adc
imul
mov
in
stos
xchg
sub
stos
gs
sti
and
fldt
jg
mov
and
lods
mov
mov
or
cs
lahf
rclb
xchg
add
sub
je
enter
adcl
adc
lret
inc
mov
mov
fisubrs
clc
add
and
or
jle
std
nop
sti
in
sbb
popa
repnz
mov
dec
mov
inc
clc
jl
push
jbe
cmp
enter
stos
sarl
sub
lcallw
push
fnstcw
push
pushf
mov
jecxz
push
repnz
ds
mov
lret
movsl
cmpsl
adc
negl
nop
es
lret
call
call
repz
inc
cmpsb
fdivrl
or
adc
jmp
sahf
divl
arpl
lea
roll
pop
aam
jp
ja
cmp
xor
and
jnp
arpl
push
into
mov
shl
inc
mov
push
addl
mov
aam
push
ds
mov
dec
repz
mov
mov
or
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
enter
enter
enter
enter
and
xor
jo
cmc
cmpsl
gs
iret
cmp
mov
mov
stos
enter
enter
iret
xor
jo
cmc
loop
fdiv
and
sbb
or
fidivl
or
push
mov
loop
leave
xor
enter
into
iret
mov
hlt
enter
mov
stc
enter
mov
cmp
mov
mov
enter
mov
jns
push
mov
jns
push
mov
jns
iret
mov
clc
enter
in
cmc
sbb
fdiv
adc
push
mov
hlt
dec
mov
mov
jns
mov
xor
mov
mov
jns
push
mov
mov
and
push
cmp
mov
in
xchg
xor
push
mov
negb
xor
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
out
shll
hlt
xorl
enter
cmp
and
sahf
inc
scas
nop
fmul
xor
or
add
hlt
enter
sub
mov
mov
hlt
enter
enter
testb
mov
add
dec
add
fidivs
insb
movsl
enter
lret
inc
jl
iret
xor
out
xchg
loopne
pushl
cli
xor
jb
mov
mov
daa
out
popf
push
cwtl
cmpsb
and
fidivl
hlt
enter
mov
sub
scas
jae
repz
sbb
mov
jnp
cmpsl
sbb
pop
loope
fiadds
cli
jg
and
dec
or
shlb
jmp
shlb
hlt
enter
push
fisubrs
stos
insl
mov
jae
dec
xor
enter
xor
pop
mov
cli
inc
popf
test
enter
mov
iret
mov
sbb
dec
pop
repz
mov
fildl
das
test
hlt
enter
aad
sbb
mov
bound
outsb
imul
fwait
out
xor
rcll
mov
es
lret
scas
jae
xchg
aas
or
jl
dec
or
outsb
imul
cli
jg
and
dec
xlat
cli
xorb
push
xor
enter
enter
sbb
insb
jmp
shlb
hlt
enter
lods
nop
dec
mov
movsl
insl
mov
aaa
mov
xor
mov
ret
xor
and
stos
in
enter
push
cmp
inc
mov
dec
adc
jle
jns
pop
dec
cli
dec
jbe
xlat
cli
sbb
sbb
lret
outsb
adc
sub
hlt
enter
adc
xor
xchg
push
mov
xor
aaa
xlat
shl
xor
enter
enter
ror
xor
fnstenv
je
fnstenv
hlt
enter
stos
or
cmpsb
insl
mov
clc
enter
or
xor
dec
pusha
fstpt
iret
mov
sbb
dec
pop
add
xor
push
cmp
enter
enter
ror
xor
xor
sub
xor
enter
push
pop
mov
je
sbb
jg
insl
imul
or
jg
push
je
lahf
into
iret
mov
push
outsb
imul
enter
daa
mov
pop
movsb
enter
das
cmp
mov
xor
enter
or
inc
mov
mov
sbb
pop
jno
xchg
mov
adc
je
lea
jp
pop
lods
enter
je
xlat
sub
mull
lahf
pop
lahf
into
iret
mov
popf
iret
dec
pop
inc
leave
xor
inc
mov
xor
enter
mov
mov
add
cmp
mov
scas
insl
xor
ror
xor
dec
outsb
xor
enter
push
sbb
inc
lahf
into
iret
sti
sbb
xor
mov
arpl
xchg
cs
popa
movsl
pushf
or
lcall
xchg
lods
test
push
mov
icebp
dec
xchg
fildl
mov
pop
insl
jne
icebp
loop
add
test
mov
push
imul
leavew
xor
pop
pop
sarl
iret
xor
enter
enter
enter
enter
enter
enter
enter
enter
daa
pop
jmp
push
push
dec
dec
ja
stos
icebp
adc
test
xor
xchg
cmp
xchg
bound
ja
std
movsb
cmp
inc
xchg
inc
and
mov
pop
lds
push
shll
inc
add
mov
int3
xorb
jnp
push
rcl
es
mov
aaa
js,pn
aaa
xchg
insb
in
sub
imul
dec
ret
push
out
fs
push
push
aam
scas
lods
pop
jp
je
push
out
adc
in
cmpsb
stc
cmp
cmp
sahf
shlb
xor
and
sbb
sti
adc
addb
test
push
jnp
aad
dec
and
jb
push
arpl
sub
gs
jo
fsubrl
repnz
iret
mov
jae
stos
enter
fbstp
pop
xor
std
daa
mov
in
inc
fdivrl
push
data16
inc
iret
xchg
pop
lea
test
or
call
xchg
imul
inc
roll
add
cmpl
cmp
add
lcall
stc
xchg
and
out
data16
mov
sub
lcall
pop
jge
insl
pop
clc
xchg
push
test
int3
pop
int
daa
push
aad
jno
push
mov
mov
in
sbb
out
fdivr
popa
jbe
push
iret
adc
push
iret
pop
jl
sub
xor
enter
iret
jnp
dec
and
adc
lock
sbb
add
add
or
faddl
sub
cwtl
inc
aam
cs
into
iret
aad
clc
shll
mov
push
cmp
adc
popf
adcb
sbb
xchg
es
ljmp
lea
mov
ljmp
jae
add
js
pop
rolb
cmp
and
mov
xchg
or
das
sub
stc
sub
sub
leave
jmp
ret
lahf
inc
rcll
enter
pop
pop
int
daa
or
xor
and
cmp
std
pop
xchg
dec
pop
and
mov
lea
xor
and
add
add
gs
js
in
push
dec
aad
cmp
sahf
cs
jmp
ds
js
mov
xlat
dec
pop
pop
push
sub
xlat
enter
movsb
push
dec
push
iret
mov
addr16
fcompl
mov
mov
and
sahf
xor
pop
rcrb
out
cmc
push
iret
push
and
add
outsl
leave
mov
xchg
push
inc
and
inc
dec
popf
mov
emms
or
outsl
int
inc
clc
scas
arpl
push
iret
mov
sbb
and
push
jb
inc
aas
and
cmp
andb
mov
adc
pop
xorb
push
sbb
dec
adc
sbb
sub
in
adc
scas
dec
negl
movsb
hlt
dec
insl
les
in
mov
and
jl
in
hlt
pop
cli
mov
push
dec
insl
lock
mov
test
sub
repnz
pop
lods
repz
xchg
inc
leave
xor
insl
stos
mov
dec
scas
mov
rcrl
mov
fldt
push
orl
ss
inc
cwtl
dec
jb
cld
in
fdivs
jg
xor
scas
scas
mov
add
and
cld
out
jne
xorl
xor
mov
and
fwait
out
hlt
enter
or
mov
push
cmp
jle
mov
jne
and
push
test
or
pusha
mov
int
gs
out
mov
xchg
jno
push
out
rcrb
fs
pop
sbb
mov
nop
inc
xor
clc
enter
sbb
and
ret
outsb
stos
jmp
jg
cwtl
xor
lret
pop
mov
and
stos
idivl
nop
sub
pop
into
and
mov
inc
in
adc
les
test
icebp
add
loope
icebp
hlt
jae
bound
sti
repnz
ror
jge
xlat
fisubrs
push
je
mov
add
orb
cmp
and
lret
outsb
jo
cmp
dec
pop
and
popf
jg
xchg
jmp
jne
int3
xchg
add
mov
and
pop
cmpb
pop
fdivrs
aaa
cmp
mov
in
cmp
cli
xor
add
lret
inc
loopne
jo
sub
cwtl
in
movsb
push
popa
outsl
popa
mov
xchg
xor
inc
pusha
mov
test
cmc
bound
sub
and
adc
faddp
pop
jg
fiadds
decb
pop
pop
sub
int
sub
jae
adc
or
pop
scas
movsl
dec
js
lock
call
iret
into
mov
lock
iret
into
fcmove
lock
xchg
lds
lahf
xchg
pop
mov
repz
jne
lahf
sub
push
stc
int
cmpsl
stos
scas
decl
ror
repz
les
inc
test
xor
daa
sub
cmc
adc
mov
popf
jb
pushl
xor
or
shl
sarl
sub
enter
add
dec
pop
arpl
xor
out
mov
nop
dec
out
lock
mov
into
lds
mov
cwtl
test
xor
scas
enter
push
xchg
nop
daa
add
push
leave
jl
bnd
pop
pop
mov
jge
jne
or
pop
repnz
ret
dec
push
dec
add
mov
fstpl
jl
fnstenv
xor
enter
enter
enter
lcall
jbe
mov
popf
lea
dec
xchg
lcall
into
pop
add
nop
dec
lahf
jp
mov
repz
pop
test
jg
xor
mov
xor
fistpl
scas
mov
enter
mov
enter
mov
xor
enter
enter
adc
push
imul
sub
scas
mov
xchg
aaa
xchg
dec
xchg
les
mov
repz
out
add
mov
push
iret
xor
les
int
imul
dec
out
sbb
push
imul
aam
int
mov
xchg
aaa
xchg
mov
nop
jne
rcll
xchg
lods
fidivrl
dec
movsb
shll
mov
xchg
cmp
dec
repnz
xchg
xchg
push
aad
in
or
nop
mov
xchg
adc
and
and
scas
mov
ss
scas
mov
aad
popa
movsl
pushf
xor
enter
mov
je
into
sbb
aaa
xlat
rcll
mov
ss
and
shlb
iret
scas
mov
xor
and
jns
or
repz
dec
hlt
enter
rcl
xor
enter
fs
hlt
enter
enter
inc
subb
adcb
xor
mov
xchg
jg
fs
rclb
sub
xor
enter
les
dec
hlt
enter
rcl
xor
enter
jae
mov
clc
enter
rorl
lea
leave
xchg
fcmovnbe
iret
jno
or
xor
inc
popf
pop
lahf
into
iret
add
iret
mov
hlt
enter
ror
xor
xchg
push
cmp
mov
dec
adc
inc
xlat
jl
push
dec
adc
ret
dec
push
dec
adc
mov
dec
hlt
enter
adc
lret
jecxz
lods
rorl
xlat
clc
enter
into
iret
dec
push
mov
fs
fildll
xchg
outsl
fwait
mov
or
les
cmp
or
dec
bound
push
mov
push
jb
fldlg2
stos
sub
or
add
inc
inc
nop
add
repz
inc
scas
push
fdivl
inc
into
push
xchg
lea
enter
mov
test
push
push
push
inc
nop
jp
cmp
mov
sar
call
imul
sub
mov
iret
and
and
xor
enter
aas
adc
shl
pusha
and
add
mov
fdivs
pop
mov
cs
push
push
fadds
fwait
call
notl
lcall
jecxz
stos
mov
arpl
sti
mov
hlt
insl
mov
push
push
mov
movsl
imul
lock
int3
test
lret
inc
rorl
fldl
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
paddusw
mov
popa
cmovg
inc
test
cld
inc
jne
mov
mov
movsb
add
lods
sub
dec
sub
out
inc
mov
sub
jo
scas
sahf
pop
mov
xchg
add
popa
jg
inc
addr16
xchg
add
adc
scas
rclb
mov
arpl
sbb
cli
fs
jle
rorb
lds
leave
mov
pusha
addr16
mov
fs
std
es
push
lahf
les
scas
inc
aas
neg
and
pop
mov
into
paddusw
inc
mov
clc
lods
les
in
and
inc
mov
and
pushf
jp
jae
jl
in
xor
sub
in
les
frndint
scas
sub
mov
sbb
add
loope
sbb
jmp
pop
mov
cmpsl
xor
fwait
out
adc
ret
jge
insl
xchg
cmp
inc
and
and
repz
dec
jb
das
rcll
mov
movl
jg
aad
int3
fstp
inc
mov
jae
dec
sbb
pop
les
push
mov
xchg
sbb
lret
xchg
fistpll
and
popa
jg
inc
addr16
mov
or
fwait
out
aaa
out
test
rcl
mov
and
xorb
in
loope
cld
int3
xor
lret
aaa
sbb
fstps
out
adc
pop
ljmp
aam
xorl
jmp
or
xlat
in
ret
push
in
push
fsub
push
jns
mov
shl
xchg
ret
sub
lods
sti
incb
clc
je
or
sarl
subb
inc
pop
inc
je
inc
imul
out
mov
add
sbb
addr16
scas
cli
pop
test
or
mov
sbb
push
je
scas
push
mov
in
jns
inc
shll
ret
pop
mov
imul
aam
or
loopne
fucomi
mov
ljmp
roll
addps
cs
rclb
jae
shrl
call
int
lahf
mov
in
fwait
mov
push
fistl
cmp
rcrl
rorl
pop
jno
cs
shlb
lods
roll
push
inc
mov
aas
add
mov
add
dec
mov
push
mov
pop
fldl
xor
push
push
jl
inc
rorl
sbb
add
fucom
jnp
jl
jbe
and
int
fsubl
jge
iret
pusha
or
je
mov
mov
or
int3
ss
shrl
sub
aas
out
fidivl
incb
movsl
cmpl
cmp
repnz
xchg
pop
scas
and
flds
paddw
xchg
insb
add
cmp
inc
rorl
sbb
mov
rolb
js
aas
aas
fiaddl
mov
sub
subl
mov
imul
mov
add
orl
mov
jns
cmpsb
and
mov
flds
paddw
mov
add
xchg
insb
add
cmp
inc
rorl
sbb
xchg
mov
jnp
add
cmpsl
fwait
add
addl
les
stos
xchg
xor
pop
mov
cmp
mov
push
sub
mov
test
adc
xor
sub
nop
jg
add
xchg
cs
cmp
ret
inc
lods
lea
sbb
xlat
mov
mov
mov
sbb
push
push
xchg
mov
lret
lods
mov
lret
lods
mov
lret
lods
mov
lret
lods
mov
lret
lods
mov
lret
lods
mov
lret
lods
mov
lret
lods
mov
lret
lods
mov
lret
lods
mov
sub
leave
sub
adc
or
mov
clc
fs
mov
in
xchg
sbb
and
insl
push
mov
xchg
mov
mov
push
sub
lahf
loop
add
imul
bound
sbb
push
add
mov
lcall
or
and
add
jmp
popa
fucomp
outsl
add
inc
mov
nop
pop
shrb
mov
pop
cmpl
pop
subl
ret
aas
enter
fisubrl
inc
cmp
mov
dec
pop
inc
pop
jmp
pop
adc
or
pop
pop
mov
fdivs
push
nop
arpl
sbb
or
stc
adc
mov
add
and
mov
cmc
cmp
pop
mov
lret
lods
mov
inc
jbe
inc
jge
fidivl
test
sub
inc
sbb
inc
xor
fmull
mov
dec
adc
add
mov
jp
mov
sbb
push
loope
mov
loop
jecxz
inc
lcall
addl
orb
in
ss
ljmp
pop
mov
lock
ret
enter
pop
sbb
or
lods
mov
aad
mov
subb
xchg
jmp
sub
fisttps
pop
dec
test
adc
push
add
mov
add
add
mov
fwait
cltd
xor
test
adc
sub
pop
mov
int3
sub
xlat
mull
jp
adc
js
int
shll
dec
in
mov
dec
nop
jg
inc
std
sub
stos
mov
scas
mov
mov
sub
mov
mov
dec
mov
xchg
repz
mov
sbb
xchg
push
sbb
mov
mov
inc
bound
sub
jle
mov
cmp
or
pop
cmc
std
mov
push
push
push
pop
sar
sbb
xchg
fidivrs
pusha
xor
pop
pop
sbb
js
push
jnp
sahf
mov
lret
insl
mov
inc
dec
sahf
fdivr
fiaddl
aad
stos
mov
jecxz
jo
pusha
jo
sbb
testb
adc
les
insl
andl
out
xlat
sti
sbb
xchg
into
sbb
mov
inc
adc
mov
adc
jns
sbb
rol
stos
aaa
jecxz
les
int
test
sbb
call
sti
js
and
ss
int
xchg
mov
stc
push
fsts
xchg
mov
call
jge
mov
test
xor
jae
dec
xor
inc
xchg
bound
dec
out
lods
xchg
cmp
jbe
inc
or
out
cmp
sbb
jns
xchg
xchg
arpl
dec
je
aaa
inc
xor
lods
mov
lea
in
cltd
adc
mov
insb
cli
and
fs
xor
icebp
or
outsl
std
lods
insl
fldl
incl
and
mov
pop
mov
movsl
and
and
pop
fildll
dec
sub
adc
je
ss
insl
xchg
mov
movsl
push
out
sbb
adc
add
xor
push
data16
outsb
imul
adcb
pop
sbb
dec
out
xor
push
enter
in
pop
int
push
ret
mov
fmuls
imul
cmpsl
mov
in
cmp
mov
inc
and
push
jge
mov
xor
int
or
pop
in
das
push
imul
int3
sub
jns
mov
dec
lahf
cmp
ljmp
shlb
mov
adc
inc
lods
mov
int
adc
and
and
testb
jno
or
cmp
ret
add
sub
jp
mov
inc
jge
jle
cmp
pop
dec
sbb
dec
sub
cld
cwtl
fisttpl
lds
rcrb
incl
adc
mov
push
mov
xchg
lret
push
addb
cs
pop
ficomps
sbbl
shlb
test
adc
xor
and
outsb
add
inc
jmp
inc
mov
lret
and
xor
pop
add
dec
jl
mov
push
inc
add
ljmp
fbstp
adc
in
cmc
pop
mov
sub
or
sbb
adc
push
adc
mov
sti
adc
mov
lret
sbb
mov
lret
lock
test
adc
scas
push
outsl
pushf
es
out
or
lcall
lods
adcl
pop
xchg
mov
negb
jle
sti
adc
sarl
add
jge
push
mov
call
dec
push
mov
pop
pop
adc
inc
arpl
sub
sbb
aam
ret
push
pop
xchg
push
out
xor
mov
sti
repz
pop
push
jp
xchg
push
sub
xlat
popf
or
cli
mov
test
in
loopne
int
xor
dec
xor
clc
loop
repz
mov
stc
sbb
jo
sub
mov
cmc
aas
add
mov
mov
fbstp
comiss
add
xlat
stos
nop
stc
mov
dec
lods
out
imul
lock
sub
insb
xchg
pushf
aaa
stc
rcrl
lret
lods
sbb
pop
lock
ret
lods
cltd
jp
enter
jne
or
lock
pop
mov
sbb
or
in
icebp
adc
jp
pop
movsb
mov
lret
roll
push
lcall
mov
fwait
ljmp
lods
mov
cmp
mov
pop
xor
adc
sub
int3
inc
pop
fcos
adc
imul
out
add
jp
pop
mov
in
iret
push
adc
adc
pushf
aaa
insl
lret
rcrl
lret
lods
jge
cmp
dec
xchg
pop
lock
jne
lret
lods
movsl
add
movsl
cld
adc
cmp
lock
lret
sub
lods
mov
imulb
xorb
scas
sbb
mov
icebp
mov
push
dec
cli
repnz
xchg
and
xchg
pushf
aaa
daa
and
in
movl
fwait
call
sbb
cmp
iret
adc
xor
scas
mov
jecxz
rol
lcall
push
mov
hlt
fwait
outsl
std
adc
mov
inc
ret
clc
xchg
imul
cmpsb
lret
mov
push
lods
sbb
or
test
orl
mov
or
movsb
or
jl
mov
add
test
in
pushf
mov
cmc
mov
or
movsb
or
add
push
mov
dec
mov
or
test
orl
mov
or
pop
jmp
cmpsl
push
cld
sub
cmpsl
outsl
jbe
add
movsl
or
dec
dec
jns
mov
or
test
orl
lahf
or
mov
or
sbb
jl
lock
mov
lods
add
xchg
popf
mov
sbb
sub
mov
icebp
mov
andb
orl
lahf
or
mov
or
mov
aad
not
hlt
hlt
leave
mov
jge
pop
and
mov
aas
inc
add
and
sbb
mov
fadds
add
jecxz
movsb
pop
ss
js
jle
add
repz
adc
addb
rclb
out
or
nop
xchg
sbb
push
push
xor
ret
pop
shll
sti
adc
jmp
inc
scas
xor
sbb
jp
adc
mov
stos
sbb
in
mov
inc
xor
cmpl
movsb
aam
test
mov
scas
pop
adc
in
pop
jg
dec
xchg
sarb
jle
push
sbb
jne
fdivrl
pop
fcmovb
xchg
mov
sbb
and
js
mov
and
jg
shll
sbb
sbb
cltd
dec
mov
data16
push
jp
mov
idivl
adc
cmp
adc
cmp
adc
cmp
adc
cmp
adc
cmp
adc
cmp
adc
cmp
adc
cmp
iret
idivl
dec
sub
les
stc
pop
aaa
mov
mov
inc
xchg
int3
pop
adc
and
idivl
xchg
inc
jno
stos
cmc
lcall
push
scas
adc
sbb
idivl
iret
cmp
cmpsl
lret
test
movsb
mov
and
loopne
ds
cli
push
aas
adc
xor
adc
cmp
movsl
idivb
xorl
push
popa
out
imul
cmc
out
pop
push
mov
push
pop
lcall
mov
pop
mov
pop
jmp
push
scas
idivb
rclb
push
adc
xor
adc
cmp
imul
scas
push
xchg
arpl
cmp
mov
or
adc
cmp
mov
push
imul
dec
imul
push
imul
popf
mov
lods
idivb
mov
dec
sahf
loop
inc
mov
idivb
pop
xchg
and
test
sub
push
adc
daa
loop
jbe
or
out
pop
shll
dec
adc
push
loop
mov
add
test
jg
sub
cmpsl
lret
outsl
xchg
pop
scas
mov
popf
sub
push
adc
js
mov
or
pop
sub
es
adc
das
loop
call
lret
jg
push
jg
lret
idivl
adc
aas
mov
inc
cmp
loop
jbe
or
out
pop
out
es
adc
push
loop
pop
int3
addr16
xchg
dec
sub
adc
fwait
ljmp
inc
in
mov
sbb
cmp
je
rcrb
add
shll
cmp
push
inc
rcll
lods
inc
cmpsl
fistps
mov
int3
push
xlat
inc
lret
jecxz
ret
cmp
popf
bswap
test
fisttpl
mov
loopne
pop
mov
lock
xchg
lcall
cmp
sbb
jl
jmp
dec
int3
dec
pusha
mov
gs
mov
mov
inc
xor
popa
into
xchg
inc
and
inc
repnz
loope
cmp
xchg
mov
push
inc
push
add
sbb
inc
mov
mov
fsubrs
icebp
out
std
sahf
or
sahf
cwtl
jbe
lods
pop
mov
pop
aaa
rcll
fisttpll
xor
mov
or
test
jle
mov
or
inc
pop
fsubs
jecxz
lcall
cmp
sub
mov
cmp
xchg
out
mov
or
xchg
mov
nop
lcall
jmp
mov
lret
fldcw
push
cltd
dec
xchg
jne
cmc
mov
iret
inc
enter
adc
xchg
movlps
jmp
mov
fstpt
push
cltd
xchg
mov
jg
aaa
lea
jne
in
enter
mov
stos
jbe
inc
dec
fcompl
mov
js
mov
sub
xchg
sbb
xchg
sbb
sahf
mov
cli
mov
xor
pop
jb
inc
sub
ljmp
jne
push
sub
xchg
sbb
lea
jge
fs
inc
and
xchg
sbb
xchg
sbb
mov
xchg
stc
pop
mov
adc
lea
add
xchg
dec
rcrb
aad
call
mov
or
mov
jnp
and
jl
xchg
sbb
mov
js
mov
sub
xchg
sbb
xchg
sbb
sbb
pop
cmp
jge
int
jnp
adc
movsb
adc
mov
test
stc
or
jae
ret
movsl
iret
mul
sub
das
fbstp
leave
rcrb
fdiv
ret
dec
jecxz
xor
shl
movsb
negl
inc
add
mov
dec
and
fnstenv
mov
ficompl
out
mov
aaa
push
cmp
cld
in
xchg
jg
loope
inc
sarl
add
and
fwait
pop
mov
sbb
mov
dec
out
xchg
jg
xor
cld
mov
or
pop
pop
inc
pop
int
mov
dec
push
fildll
mov
ja
pop
dec
lods
xor
push
shrl
popf
push
jl
mov
xor
scas
xor
cmp
scas
mov
aam
lods
pushf
rcr
pop
cmpl
frndint
ret
and
cmp
repz
push
and
sbb
jne
out
mov
pop
rcll
testl
mov
jmp
in
pop
fstpl
into
add
push
inc
outsb
ljmp
mov
lret
or
pop
inc
das
aas
jnp
adc
and
lahf
std
aad
xor
and
mov
pop
pop
and
es
mov
ret
int3
inc
enter
sub
pop
jne
pop
lods
mov
sub
cmpsb
inc
adc
mov
mov
cmc
icebp
add
mov
mov
pop
hlt
icebp
add
hlt
icebp
add
hlt
icebp
add
hlt
icebp
add
hlt
icebp
add
hlt
icebp
add
hlt
icebp
add
adc
arpl
enter
jge
or
jns
mov
or
fmull
pusha
mov
inc
shr
fimull
arpl
notb
repz
dec
lods
xor
popa
in
and
cld
add
lcall
pop
in
fldl
push
mov
imul
fldl
add
clc
into
out
sbb
cli
mov
cmp
scas
pusha
iret
cmp
push
ret
pusha
lcall
push
xchg
fs
mov
cmp
cmp
sub
ds
sub
pop
out
sub
mov
aam
or
das
jbe
jge,pt
daa
mov
mov
sti
mov
ret
xorb
fisubl
mov
dec
loopne
movsb
hlt
and
ficomps
mov
fnsave
lods
jg
or
loopne
adc
lahf
adc
add
push
jecxz
add
xchg
negl
js
fiadds
pop
mov
jne
sub
jo
lock
rorl
test
pop
mov
mov
fisttpll
outsl
sub
ret
xchg
mov
xchg
mov
jle
or
aaa
subb
mov
mov
fs
cmp
addr16
add
inc
or
icebp
shlb
or
arpl
daa
rorl
sbb
xor
xor
mov
dec
cmc
xchg
dec
cmp
out
fsts
jae
in
clc
imul
in
subb
gs
movsb
cmp
aad
cmp
lds
cwtl
incb
and
mov
or
mov
pop
sahf
mov
inc
in
shrl
pop
out
outsb
jne
push
dec
gs
scas
orb
mov
adc
jge
out
pop
insb
pop
push
xor
mov
lahf
addr16
imul
rcr
test
outsl
jnp
mov
insl
xchg
pushf
lret
cmp
aam
adc
dec
mov
mov
add
pop
insl
int3
push
out
pop
loopne
dec
xchg
sub
test
inc
mov
add
shlb
mov
adc
sbb
cltd
xchg
jmp
cli
and
sbbb
add
mov
aam
cmp
dec
or
and
ljmp
xchg
jno
pop
imul
sbb
test
jo
xchg
mov
popa
push
enter
mov
and
cwtl
sub
mov
pop
fcmovne
xchg
insb
dec
or
test
testb
fs
cwtl
jo
cmp
add
pushf
icebp
or
movsl
xor
dec
rcrl
add
push
push
pusha
xchg
add
inc
mov
mov
sahf
and
aam
push
popa
arpl
add
iret
mov
andl
ret
fsubr
mov
or
outsl
inc
pop
cli
repz
imul
mov
push
out
pop
cmpsb
aam
hlt
mov
arpl
jnp
or
jle
sahf
decb
ja
scas
sbb
push
or
sbb
mov
and
xchg
mov
enter
jno
jbe
add
out
add
jge
xor
mov
aam
jge
dec
pop
dec
scas
enter
inc
jp
sbb
adc
ficoml
fcomi
push
jg
fwait
pop
cmp
addr16
xchg
repnz
xlat
xor
or
int3
mov
adc
insb
negl
or
mov
addr16
nop
testl
xchg
cltd
les
adc
outsl
mov
cmp
mull
mov
notb
or
adc
push
pop
mov
sbb
jge
adc
insb
cmc
das
adc
imul
outsb
arpl
into
cmp
jns
inc
aaa
sbb
push
adc
push
xor
ret
xor
test
imul
call
pop
push
xadd
fists
adc
add
out
movsb
xchg
inc
ret
cmp
cli
js
fmulp
or
dec
mov
push
push
mov
jle
shrl
repz
lods
fmul
jle
mov
mov
or
xor
sbb
test
jecxz
inc
inc
mov
iret
pop
dec
icebp
add
sbb
sub
repz
push
cwtl
shr
icebp
add
stc
push
xor
push
icebp
scas
jge
jge
scas
push
cmp
add
pop
js
and
inc
jp
into
xor
sub
sbbl
xlat
pop
hlt
push
out
dec
sub
outsb
dec
sti
mov
inc
push
xor
iret
inc
push
jo
ds
add
shrl
push
xchg
cwtl
dec
ret
out
fstl
mov
pop
cmp
push
arpl
mov
add
cmp
insl
xchg
mov
mov
stos
cmp
lret
arpl
das
jp
mov
stos
sub
push
cwtl
ss
test
push
xchg
add
dec
inc
push
add
dec
pop
in
cmc
test
and
ret
mov
adc
mov
jnp
ds
loope
inc
mov
fsubr
cmp
mov
and
cmp
mov
jb
hlt
icebp
adc
fiadds
dec
inc
mov
mov
leave
push
and
std
push
movsl
in
push
xor
mov
xlat
pop
imul
lret
loopne
ret
push
icebp
ficompl
hlt
icebp
imul
dec
and
ds
imul
pop
hlt
icebp
bound
fsubs
inc
imul
loopew
cwtl
stc
sub
imul
mov
jbe
push
not
ljmp
push
mov
sub
push
fsub
enter
or
dec
sub
adc
push
in
jb
xor
dec
cmc
xchg
jge
jecxz
push
push
aaa
movsb
and
movsb
mov
insb
push
push
fld
into
xchg
scas
ljmp
push
idivl
sub
mov
dec
dec
jp
hlt
xor
shlb
cmp
aam
ja
test
pop
lcall
jns
scas
xchg
pop
arpl
dec
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
or
inc
movsb
jecxz
test
jecxz
push
adc
cs
push
in
mov
pusha
mov
adc
xchg
lea
sub
jnp
movsl
xor
mov
mov
shlb
lahf
aas
stos
adc
dec
push
lcall
lea
sahf
push
mov
out
jo
call
mov
addl
aam
dec
mov
roll
lcall
inc
in
fcoml
push
std
negb
mov
mov
shlb
sub
shl
add
xor
cvttps2pi
sbb
insb
cltd
cld
add
pop
lock
jne
or
ljmp
inc
and
jns
aaa
mov
testl
dec
xor
enter
push
adc
cltd
mov
into
xchg
cmp
sub
xchg
push
test
js
fidivrl
dec
xchg
add
mov
sbb
test
xor
push
shlb
add
adc
jo
mov
scas
enter
sahf
dec
xchg
push
cwtl
std
sub
sbb
iret
scas
movsb
mov
in
ret
pop
cmpsb
int3
push
lods
xchg
pop
jge
sbb
fmul
ljmp
and
fwait
out
adc
dec
jns
adc
jnp
mov
jbe
jmp
nop
int
mov
inc
cmc
push
lea
lret
push
cwtl
into
add
add
mov
cld
xor
mov
adc
in
mov
mov
addb
adc
dec
jns
movsb
dec
jp
sti
aam
xchg
mov
bound
lcall
fbld
adc
fwait
call
jnp
fisubl
xchg
jecxz
mov
int
gs
cmp
and
dec
jae
pop
lock
arpl
dec
and
or
pusha
inc
push
orl
insb
call
arpl
shlb
jge
or
inc
mov
mov
and
xchg
dec
mov
and
ror
aaa
sbb
mov
push
cs
fabs
jmp
enter
and
fxch
and
and
mov
add
je
jne
or
inc
cmpsb
xchg
imul
or
inc
jo
sub
lahf
jae
add
mov
int
out
xor
bound
add
ret
rolb
mov
shrb
push
cld
lret
in
loopne
push
pop
mov
ds
cmpsb
nop
outsb
out
cli
stos
clc
pushf
xchg
imul
sub
lods
push
aas
fidivrs
mov
int3
sbb
cmp
hlt
xchg
sti
push
inc
add
mov
dec
mov
cltd
xor
cwtl
mov
jge
jo
mov
xor
mov
pop
iret
pop
push
or
scas
sub
dec
jne
outsl
jo
es
arpl
call
xor
ds
lcall
add
cmp
hlt
cmpsb
mov
xor
aaa
or
jge
push
add
lea
fs
adc
and
or
push
mov
enter
or
cwtl
fs
lods
or
pop
xor
or
shlb
mov
add
inc
jge
xchg
lea
jge
jns
nop
hlt
xor
pop
iret
mov
and
loope
push
dec
aaa
inc
push
mov
or
mov
pop
out
psraw
cltd
adc
xor
and
ss
les
popl
mov
scas
lods
sbb
adc
test
ds
xchg
int3
mov
out
mov
ret
xlat
xor
or
mov
call
out
int
cmp
jl
mov
fs
and
xor
test
out
mov
ss
xorb
fcmovb
ret
fisubs
mov
fildll
xor
loopne
jbe
loope
and
push
mov
jns
push
xchg
adc
jns
pop
push
adc
inc
add
cwtl
rclb
imul
gs
pop
xchg
or
shl
sbb
sub
pushf
pop
loopne
dec
and
mull
stos
lock
xchg
ret
lods
mov
mov
mov
xchg
sbb
mov
mov
js
loop
sub
fsubl
and
fwait
icebp
popf
pop
xlat
aad
out
mov
lret
movsb
pop
jno
js
jge
imul
dec
ficoms
sub
aad
test
cmpsb
dec
jns
cmp
fs
inc
mov
ljmp
in
add
test
ret
jmp
push
sbb
push
mov
fnstcw
xchg
lock
and
cmp
push
out
stos
fs
mov
pop
popf
push
sbb
push
push
mov
out
dec
cmpsb
int
pop
rcll
dec
jg
and
loope
mov
xor
cmp
cltd
outsl
or
faddp
int
addr16
pop
or
sbb
pushl
iret
arpl
repnz
sub
fidivrs
stos
cli
daa
fidivrl
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
or
out
insl
mov
push
pop
fdivl
push
mov
stc
mov
push
fsubrs
mov
sbb
fwait
adc
iret
mov
in
xchg
loop
jb
xchg
addr16
sub
fidivrl
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
jns
jge
iret
int
dec
and
fmull
scas
mov
bound
mov
cmp
or
mov
xchg
cmp
cmp
or
mov
sbb
sbb
xchg
sub
sbb
scas
mov
sbb
mov
test
mov
imul
xchg
popa
pop
dec
test
mov
push
and
cltd
add
xchg
sub
xchg
in
scas
mov
sahf
inc
add
xchg
jns
dec
test
mov
push
and
out
sbb
xchg
movsl
insl
dec
test
mov
cmpsb
push
and
test
xchg
jno
dec
test
mov
test
cs
pushf
jb
cmpsl
mov
xchg
adc
mov
inc
xor
cs
fistpll
adc
pushf
jecxz
in
lods
xchg
maskmovq
testl
mov
inc
sub
outsl
sub
bound
in
mov
push
mov
sub
xlat
pop
scas
mov
pop
popa
jmp
jmp
das
inc
or
mov
jnp
mov
cwtl
subb
xchg
in
out
into
scas
aas
imul
fnstcw
inc
shr
imul
mov
add
xchg
sahf
jae
imul
dec
adc
jb
popa
jno
add
setb
cmp
dec
inc
fs
mov
int3
cmp
mov
out
and
int
out
pop
addr16
bound
flds
jne
cld
sti
loope
push
mov
push
nop
and
mov
fcmovu
int
sub
in
adc
movsl
push
xchg
sbb
sbb
in
cmp
pusha
test
sub
mov
int
mov
push
dec
add
sbb
mov
inc
or
cmp
aas
and
nop
fsubl
and
cmp
cltd
ja
or
jne
pushl
fs
sbb
rorb
int
shr
lock
lods
fisubrs
adcb
mov
and
xor
add
jmp
push
mov
adc
xlat
movl
sbb
mov
idivl
mov
int3
test
jnp
lret
jo
mov
out
lret
mov
jle
lret
mov
lcall
push
pushf
xor
jle
cltd
inc
mov
arpl
popa
cmp
jmp
xor
rolb
mov
jp
push
into
mov
sbb
lahf
add
jp
mov
xor
adcb
hlt
sbb
es
push
sub
add
add
ret
orb
sbb
lods
int
out
pop
xchg
inc
clc
cmpl
cmpl
xchg
cmc
into
jb
xrelease
mov
push
iret
jmp
dec
mov
adc
scas
xchg
mov
inc
lea
push
push
loop
fwait
and
ljmp
sbb
sahf
or
push
or
rcr
xchg
mov
stos
loopne
movups
out
fs
adc
xchg
sbb
pop
sub
out
mov
rcr
xchg
xor
dec
sahf
sti
mov
xchg
cmp
out
and
cmp
mov
jg
sub
mov
imulb
pop
out
jge
push
adc
push
divb
inc
decl
push
fwait
push
ss
in
dec
xchg
add
xor
in
dec
lahf
push
and
repz
and
and
sub
lods
mov
stos
push
scas
sbb
shlb
ret
ret
movb
repnz
jno
lcall
pushf
mov
fcoms
hlt
movsl
mov
jg
mov
fyl2x
test
loopne
stos
xchg
push
je
rcr
jl
daa
pop
add
fimull
call
outsb
jmp
mov
pusha
pushf
sahf
xor
push
mov
sbb
sti
or
pop
and
mov
leave
lock
fmull
and
adc
int3
mov
clc
in
inc
xor
fs
pop
out
jge
in
mov
subps
jns
xorb
pop
push
cmp
popa
push
bound
mov
cld
inc
lods
cmp
xor
outsl
push
mov
pop
fsubs
add
loop,pn
adc
or
lds
scas
fisubs
cmp
push
jge
pushl
xor
scas
in
stc
sbb
es
adc
pop
bnd
or
jo
cli
hlt
addr16
into
jp
jg
pop
push
mov
jp
mov
leave
pop
jle
js
pushf
lcall
jmp
inc
test
ds
push
aas
scas
mov
jg
push
lahf
mov
inc
outsb
fdivrs
arpl
repz
lock
stos
mov
icebp
ja
cmpl
fidivrs
lods
adc
imull
loopne
mov
pop
adc
in
cmpsb
add
imul
inc
mov
cltd
in
clc
xor
mov
aam
lret
outsb
lcall
mov
jp
sub
mov
in
mov
fs
mov
jp
jl
cmp
xchg
gs
mov
mov
adc
repz
jno
mov
and
xchg
sub
out
sbb
rcr
lods
jnp
loop
pop
sub
jbe
iret
nop
rcl
int
imul
or
jne
sarb
mov
or
jno
xchg
xchg
test
adc
sub
xchg
fnstsw
xlat
cwtl
outsb
xor
jo
sarl
push
int3
popf
push
push
test
dec
and
inc
xor
fnsave
pushf
call
inc
loop
cmp
mov
dec
testb
ja
shlb
lahf
mov
jns
cmpsl
imul
fildl
sbb
mov
ret
mov
sbbl
push
push
and
add
sbb
in
enter
or
xchg
hlt
fildll
push
xor
inc
fidivrl
dec
pop
outsl
inc
mov
out
dec
leave
imul
jmp
pop
ja
fldt
movsb
iret
in
ret
out
push
sub
sbbl
sub
daa
repz
mov
sbb
push
pop
std
cli
jnp
in
mov
pop
xchg
fcompl
fcomps
fstps
xchg
out
ljmp
repnz
push
inc
and
inc
push
dec
inc
xchg
dec
mov
js
mov
mov
repnz
lret
inc
mov
and
shlb
loope
clc
testl
into
adc
pop
loope
outsl
jge
or
ja
cmp
das
inc
pop
lret
iret
xor
outsb
xchg
jnp
jle
fsubrl
mov
sahf
xor
mov
leave
test
int3
lret
adcb
jecxz
std
cmp
or
push
cli
leave
cmc
xchg
jne
xchg
pop
lcall
into
cmc
jae
insl
or
mov
pop
mov
in
push
dec
ret
jl
mov
ss
and
adc
inc
ss
pop
mov
mov
jae
adc
int
or
sahf
jl
push
lds
sub
ret
sub
jmp
and
pop
arpl
int3
stc
clc
mov
push
mov
jo
sbb
stc
fmull
pop
xlat
loop
out
daa
sub
imul
pop
faddl
lods
mov
pop
ds
test
push
jb
push
in
aad
mov
in
insl
inc
inc
xor
stos
push
push
sti
mov
xchg
enter
stos
jo
inc
and
sub
sub
repnz
cs
add
mov
adc
mov
and
rol
dec
pcmpeqd
pop
push
in
push
mov
sub
add
pop
lea
loopne
or
rorb
and
cmpsl
jge
dec
lahf
popa
dec
push
ror
inc
xchg
adc
mulb
in
adc
aas
pop
cwtl
mov
push
mov
movsb
js
adc
out
jge
inc
xchg
or
pop
pop
lds
popf
sbb
sub
hlt
xor
and
xchg
and
out
mov
fstl
xchg
cs
fidivrs
iret
in
adcl
test
ja
mov
lods
jb
clc
push
popa
mov
rclb
dec
jmp
mov
sar
aam
jl
popf
outsb
negl
imul
pop
lret
add
or
arpl
int
xlat
hlt
call
dec
jns
xchg
testl
push
cwtl
xchg
movl
jnp
aaa
mov
or
sub
js
fstps
cld
in
int
arpl
dec
fsubrl
mov
push
cltd
outsl
mov
cld
cmpsl
in
js
jne
out
adc
xchg
inc
jl
call
mov
aaa
cmpsb
pop
daa
jae
jg
lock
rcr
loop
xchg
repz
mov
scas
enter
lcall
gs
adc
int
push
jl
rcrl
push
popf
add
orl
roll
jno
movsl
add
mov
call
icebp
imul
rcl
inc
xchg
movsl
test
mov
imul
fcmovbe
stos
lea
jecxz
lock
xchg
inc
mov
aam
insl
sbb
popa
jmp
hlt
xchg
cli
aaa
sub
pop
xchg
push
push
test
sub
sbb
lahf
sti
xchg
popa
notb
call
sbb
mov
push
enter
sbb
js
call
das
data16
rclb
dec
es
jp
or
xchg
xchg
push
and
aam
dec
lods
test
push
push
xchg
repz
push
mov
lcall
fnstenv
movsb
xchg
xlat
fcompl
out
lahf
subl
adc
jno
fucomip
inc
aas
and
in
mov
mov
xor
aam
add
lock
xchg
xor
mov
dec
fidivl
mov
cmpsl
push
lcall
push
mov
in
xor
ljmp
pop
bound
jo
rcl
push
push
mov
dec
xchg
notb
sub
inc
push
push
mov
and
imul
and
test
out
mov
ffree
jle
inc
lods
je
or
in
xchg
mov
pop
arpl
jecxz
fcoml
mov
and
sbb
fstp
lock
jle
testl
inc
or
rcl
imul
aaa
jmp
and
and
jb
movsb
push
mov
mov
cmpsl
cld
sub
push
lock
or
lahf
ljmp
out
push
xchg
bound
test
imul
arpl
mov
mov
pop
inc
push
fcoms
and
dec
dec
adc
jecxz
mov
fimull
out
out
jle
xchg
imul
mov
push
inc
xchg
sub
mov
xchg
nop
rcrl
mov
jae
out
adc
pop
xchg
xor
mov
and
outsl
pop
arpl
rcrl
and
sets
xchg
mov
push
and
sub
in
fistpl
sahf
inc
sahf
dec
and
loop
xchg
adc
fdivp
adc
sbb
dec
cmp
ret
and
mov
dec
into
inc
and
icebp
cmpsl
or
orl
mov
dec
adc
or
pop
jbe
stos
aam
hlt
push
mov
jmp
stos
pop
shll
dec
addr16
sarb
stos
cmpb
mov
push
inc
loope
fwait
pop
loope
popa
mov
in
fwait
dec
jb
pushf
dec
mov
dec
xor
je
jecxz
roll
into
notb
xor
ds
lcall
out
adc
fwait
mov
jg
mov
fs
add
xchg
pop
fs
outsl
rcll
mov
in
push
cmp
pop
scas
adc
dec
jecxz
mov
or
mull
mov
push
jmp
ja
dec
loop
dec
in
inc
mov
lret
xor
fisubl
adc
in
push
cmpsb
ret
rol
or
ds
bound
add
jle
out
mov
arpl
jbe
xor
and
lea
xor
xor
jecxz
cmpsb
mov
xchg
das
and
insb
xchg
fwait
je
push
dec
bound
rcrl
and
cmp
jno
test
les
int
xor
scas
dec
addr16
adc
dec
dec
cs
bound
into
mov
mov
and
fwait
call
push
dec
fidivs
cltd
dec
mov
js
xor
xor
jae
leave
and
mov
sub
ret
cli
nop
dec
cmp
sbb
cmc
int
mov
xchg
mov
sbb
in
xchg
jae
cmp
bound
loop
add
shlb
mov
nop
mov
xchg
jge
movsl
fsubs
or
lock
and
lds
cli
pushf
mov
roll
aam
xor
pop
and
dec
out
cmp
mov
ds
xor
add
int
sbb
ss
ja
push
push
outsl
pop
into
mov
stos
cmp
loope
sbb
push
or
mov
je
jg
mov
fs
nop
jle
stos
lods
add
inc
add
lock
and
mov
sub
adc
mov
mov
in
or
jo
cmpl
mov
call
sbb
jl
sahf
test
ret
aam
dec
mov
cwtl
icebp
mov
cli
xor
repnz
lcall
movzbl
or
adc
mov
cmp
cltd
sub
mov
cmpsl
cmp
nop
mov
jne
push
xadd
into
lea
into
imul
adc
cli
cmp
xor
pop
rclb
pop
mov
sub
pushf
mov
xchg
xchg
xchg
sbb
mov
jns
inc
mov
xlat
jae
mov
lcall
in
and
and
pop
loope
int3
add
xchg
jp
addr16
xchg
mov
movsl
js
adc
insl
ja
xchg
dec
and
stos
push
adc
add
ror
lods
stos
aaa
nop
data16
enter
and
cmc
push
adcl
pop
dec
mov
rorl
xlat
std
jle
fadds
and
decl
test
mov
xchg
mov
jae
addr16
add
add
push
jecxz
xor
mov
pop
test
mov
xor
mov
sub
mov
daa
xchg
insl
and
push
loop
ljmp
mov
mov
adc
out
push
into
pop
iret
out
push
leave
jmp
xor
data16
test
movsl
mov
xchg
sbb
cmc
sarb
std
and
ljmp
scas
fsubs
push
cwtl
aas
insl
aaa
fsubrp
ljmp
push
fwait
adc
jmp
push
out
pop
or
xchg
cmpsl
dec
mov
loope
adc
xchg
faddl
pop
cmp
dec
sbb
andb
imul
mov
jp
iret
adc
sub
sbb
add
push
sub
or
or
ret
shll
movl
fiaddl
enter
jbe
popa
adc
ja
ja
sbb
mov
push
inc
lods
mov
push
repz
rcl
push
inc
push
dec
les
daa
push
jmp
int
aam
xor
jge
imul
push
iret
sbb
popa
push
in
mov
pushf
cltd
cmp
add
test
ret
xchg
mov
outsl
std
popa
jbe
jbe
ss
dec
mov
sub
stos
js
in
cwtl
and
lods
push
jnp
jns
dec
push
push
flds
notl
jmp
into
mov
mov
aas
divb
sbb
cmpsl
or
clc
enter
jae
pop
ja
roll
loope
mov
fldl
inc
std
fists
xor
lods
mov
inc
arpl
lret
pusha
in
mov
cltd
in
jg
xchg
xchg
stc
inc
sub
outsl
adcb
xor
dec
popf
lock
push
fs
loope
into
push
gs
mov
addr16
test
test
movsl
xor
pop
jp
f2xm1
repnz
sub
inc
xchg
dec
push
aas
cli
test
ljmp
pusha
sub
arpl
icebp
adc
pop
mov
jae
notrack
out
inc
adc
mov
out
cltd
xchg
loop
inc
out
push
push
jmp
jb
sub
xor
imul
or
scas
idivl
out
test
fsub
fwait
lret
adcl
repnz
add
lds
jae
aad
cmp
pusha
xchg
popa
pop
and
test
nop
in
std
pop
in
sub
inc
dec
fsts
outsl
repnz
jp
sbb
nop
mov
inc
lret
sub
jge
mov
dec
jne
dec
sbb
add
mov
mov
stc
mov
into
in
xchg
jmp
xchg
xchg
loopne
scas
push
adc
popa
jb
scas
push
fwait
js
push
mov
icebp
imul
dec
mov
or
mov
sbb
xchg
shlb
pop
jo
test
add
xchg
shrl
cmc
in
mov
test
inc
mov
adc
jnp
movsb
sbb
and
cmpsb
jno
sub
cmp
imul
sbb
adc
push
xchg
loop
mov
xor
xchg
andb
xchg
mov
cmp
outsb
repz
mov
lock
test
or
push
imul
fs
rcrb
lods
outsb
inc
mov
adcb
add
in
ja
pop
dec
push
mov
mov
pop
addb
jmp
les
jo
mov
imul
adc
xor
push
repz
ror
adc
add
and
addr16
pop
and
pop
or
mov
inc
push
jge
imul
lahf
push
mov
mov
shr
repz
pop
cmp
clc
dec
clc
inc
loope
push
fldenv
mov
test
jnp
xor
out
insl
lods
ret
adc
out
cmp
mov
and
xchg
rcrl
gs
fwait
std
lea
add
icebp
hlt
std
daa
xor
pop
inc
jecxz
add
sub
mov
or
push
adc
pusha
or
rol
lret
jo
out
enter
sub
and
sbb
xor
fxam
xor
push
shll
pop
jo
and
inc
add
mov
or
and
add
lds
or
mov
xchg
cld
nop
fcoms
imul
cmc
push
mov
sti
fidivl
push
pop
add
pop
mul
cmpsb
cmp
sti
mov
jmp
shl
loopne
sahf
fbld
xchg
popf
push
cmpsl
hlt
pushf
ret
fisubl
and
mov
ljmp
pop
jle
push
mov
in
mov
ja
mov
inc
fcoms
pop
adcb
add
adc
inc
enter
push
lret
pop
push
into
data16
cwtl
std
and
adc
dec
test
mov
push
push
push
inc
out
sub
in
pop
cli
out
notl
sub
pop
scas
or
dec
pop
icebp
xchg
test
xor
fistpl
outsl
mov
pop
lds
mov
mov
add
jne
mov
xor
test
inc
inc
xchg
jbe
xchg
xlat
push
sbb
mov
mov
es
fdivp
pop
dec
jb
dec
cmp
pop
insb
cli
test
imul
cltd
mov
outsl
lods
inc
mov
in
xlat
fcoml
cmp
mov
test
ret
gs
hlt
lret
xchg
mov
leave
and
jno
xchg
sbb
fidivl
ret
pushf
std
pusha
es
mov
or
and
mov
cmp
add
jo
mov
or
lahf
mov
pushf
sub
insl
sbb
sti
out
sahf
mov
xchg
je
pushf
out
int
pop
mov
fadd
ret
or
imul
pop
rolb
cmp
xchg
movb
push
jle
faddl
jne
inc
pop
pop
or
mov
or
filds
mull
mov
dec
pop
shrb
pop
mov
test
mov
jns
fs
ja
sub
fsubs
daa
jae
test
push
leave
dec
push
into
mov
cmpsl
lea
sub
ret
imulb
subl
dec
mov
loopne
mov
push
in
stos
lods
mov
mov
add
aam
push
lds
pop
adc
push
or
in
rcrb
add
les
xchg
fs
adc
in
stos
in
out
adc
idivb
sbb
xor
ljmp
jno
dec
loope
xor
pop
push
add
dec
outsb
pop
test
adc
push
pop
hlt
sub
pop
sub
xor
xchg
int3
int
rorl
push
xchg
dec
xchg
push
push
jb
repz
clc
insb
push
add
lock
pop
cwtl
mov
pop
out
push
jb
out
and
jge
lods
or
push
loop
cmpsl
pusha
or
sbb
pop
mulb
inc
addr16
mov
jbe
mov
mov
pusha
adc
or
mov
push
mov
dec
imul
push
fistps
dec
cli
rcrl
aad
test
pop
jp
fadds
push
rorl
cmc
shl
adc
xchg
sbb
stos
in
mov
fdivrs
adc
inc
gs
dec
xchg
add
add
int
stc
xchg
out
imul
cmp
pop
jns
adc
sub
push
subl
rorl
inc
orl
xlat
aaa
pop
jg
dec
jge,pt
inc
pop
aad
cs
pushf
repnz
test
movsl
or
dec
lods
repz
icebp
ss
add
scas
mov
in
jns
inc
mov
enter
subb
in
lods
push
enter
mov
push
out
cmp
pop
mov
icebp
sbb
fiaddl
shrl
sub
ds
in
stos
cmp
clc
pop
jg
add
jb
stos
cmpl
scas
push
insb
mov
sahf
inc
inc
lods
or
aad
ficoml
xor
xor
fidivl
ret
imul
jp
xor
sub
pop
mov
call
add
mov
cli
push
test
fadds
adc
inc
cmp
or
xchg
xor
xchg
and
dec
xor
pushf
ss
cmp
add
popf
lods
adc
je
or
cmpsb
pop
add
cmp
push
inc
mov
in
test
or
cli
ds
mov
popf
cwtl
inc
inc
xchg
or
mov
pop
enter
xchg
clc
pop
sbb
in
add
mov
adc
sub
clc
rcrb
ret
and
inc
cmc
xor
mov
cli
inc
mov
cmp
xor
push
pop
jmp
arpl
mov
dec
popa
fisttpl
test
jb
leave
pop
ljmp
mov
xchg
xchg
inc
lret
xchg
push
jne
and
je
push
in
sub
fstps
dec
icebp
scas
cmp
inc
inc
jp
leave
mov
pop
jge
and
scas
xchg
sbb
cmpsb
sub
ja
das
rclb
pop
arpl
dec
pop
ficompl
dec
jecxz
pop
sbb
test
mov
cld
sub
push
sub
cmp
inc
test
mov
arpl
dec
or
stos
fimuls
inc
out
outsl
les
scas
jb
add
ss
insl
sub
cmp
dec
sbb
sbb
push
add
pop
pop
data16
das
push
jge
in
sbb
add
inc
xor
lock
into
push
sbb
or
lahf
xchg
icebp
sub
incl
xor
mov
or
jne
movsb
loope
xor
cmp
hlt
cmp
sub
xchg
and
or
fisttps
xchg
cmp
iret
jns
push
cmc
add
scas
sbb
imul
cmc
adc
popf
dec
lret
push
movsb
aam
push
js
lcall
mov
rclb
xor
test
jle
mov
push
clc
imul
cmpsb
mov
add
push
cli
dec
push
dec
divl
std
cli
rcr
fistpl
es
or
fbstp
inc
and
dec
or
in
cmp
ljmp
imul
mov
push
sub
js
lds
call
popa
les
jmp
xchg
ja
fldenv
rorb
iret
adc
sbb
push
sti
mov
pop
fxch
data16
rorl
push
lret
mov
push
xlat
in
inc
dec
gs
jno
sahf
xchg
mov
repz
scas
add
and
push
in
push
call
xor
scas
sbb
xlat
test
inc
ficomps
jmp
push
inc
aaa
rcrb
pop
cmp
cmc
ficompl
int
jae
xor
fmulp
es
cmp
iret
xchg
jmp
idivl
loopne
push
lock
cmpsb
inc
jp
and
push
out
lea
push
xchg
clc
lret
dec
dec
add
scas
ficomps
in
sbb
add
cmp
mov
leave
repnz
jae
repnz
mov
stos
jnp
mov
pop
addr16
les
sbb
je
and
jns
pop
jns
pop
mov
clc
pop
push
jae
addr16
ljmp
sbb
mov
mov
jbe
jnp
dec
inc
dec
rorl
ja
mov
stos
pop
cli
add
push
je
sbb
rorl
mov
fnstsw
mov
or
sbb
mov
pop
outsl
mov
fimull
lods
xchg
fdivrs
jge
mov
iret
sbb
das
rorl
mov
or
or
cmp
pop
add
repnz
repz
inc
test
cmpsb
pop
rclb
mov
imul
xchg
rol
mov
rolb
add
xchg
cld
sub
mov
mov
inc
push
fimuls
xor
movb
jo
cwtl
ret
sbb
mov
int
ret
cltd
ret
cltd
cltd
mov
ficomps
mov
cmp
lods
stos
fidivrl
lret
lret
dec
insb
rclb
out
pop
adc
inc
mov
and
xchg
push
in
jne
xor
in
sbb
mov
xor
je
sbb
cli
aad
dec
jae
jl
adc
dec
nop
mov
cmp
stos
inc
adc
test
test
in
pushl
push
sbb
push
sub
xchg
sub
or
lret
movsb
mul
dec
clc
pop
xchg
aad
inc
cmp
mov
andl
test
dec
cmc
ljmp
inc
cli
mov
sbb
mov
and
mov
orb
addr16
fcompl
aam
stos
out
or
and
ret
cltd
call
add
pusha
les
xchg
jge
incb
cmpsl
cli
je
sub
mov
ljmp
out
ret
int
dec
je
mov
cmpsl
hlt
data16
sbb
inc
lods
out
mov
and
jle
int3
pop
js
iret
mov
and
or
mov
or
in
pushf
push
je
stos
inc
mov
jg
add
cmpsl
add
adc
bound
jbe
and
cmp
mov
dec
les
cmp
push
outsb
into
jmp
hlt
std
lods
lock
dec
pop
mov
popa
mov
adcb
out
mov
cltd
sbb
lock
insl
sbb
pop
cmp
scas
daa
add
dec
mov
or
pop
add
mov
inc
je
dec
sbbl
mov
rolb
in
cmpsb
inc
mov
ficoml
mov
mov
rorb
mov
mov
lea
daa
mov
vorps
icebp
sti
pop
sahf
in
lock
inc
push
cli
cli
mov
aad
comiss
mov
stos
mov
ds
enter
insb
fcmovne
cmp
push
mov
mov
xor
scas
sbb
mov
hlt
sahf
mov
inc
sbb
addl
xlat
mov
mov
lcall
mov
mov
loopne
insl
mov
adc
inc
inc
sbb
outsb
push
cltd
imul
jae
fiadds
mov
sahf
inc
ljmp
mov
lock
ss
inc
ljmp
imul
xchg
xor
in
xchg
in
add
nop
jmp
ljmp
cmpsb
push
out
stos
sbbl
mov
mov
jle
stos
mov
pop
xor
js
pop
pop
jo
test
xor
add
ja
xor
add
cld
pop
in
rclb
mov
sub
xor
push
jmp
imulb
xor
cli
cmp
push
jecxz
popf
jecxz
orl
lret
into
mov
mov
mov
imulb
icebp
mov
add
movsb
pop
add
orl
hlt
faddl
lods
dec
add
pop
xor
icebp
stc
sub
inc
mov
inc
std
movsl
adc
pop
std
dec
mov
adc
dec
das
add
movsl
gs
lods
sbb
jg
lret
movsb
pop
nop
adc
add
or
push
pop
push
mov
cmp
dec
sbb
mov
fs
mov
cmp
stos
inc
das
dec
xor
and
fists
fiaddl
or
stos
mov
clc
rorb
pop
xor
xchg
jns
xchg
shrl
out
adc
jg
xchg
lds
mov
pop
clc
add
imul
xchg
xchg
xchg
mov
or
xchg
dec
dec
fwait
add
xchg
lea
and
jno
test
or
jg
fnstsw
cltd
jle
mov
xor
aad
cwtl
jle
rcll
fstpl
pushf
cmc
jmp
jle
jb
inc
inc
outsb
and
rcrb
push
mov
gs
or
adc
mov
iret
xlat
xchg
adc
cmp
xchg
mov
mov
dec
jmp
imul
or
loope
insl
mov
and
sbb
cs
incl
mov
jbe
shrb
or
aas
lods
outsb
mov
push
lret
jno
ret
and
jl
addr16
mov
pop
push
cld
idiv
sub
xor
add
pop
cwtl
je
loopne
inc
gs
enter
cld
sub
push
and
lret
loop
cs
and
mov
push
pusha
push
cmpsb
push
and
fcmovb
xchg
mov
or
repnz
or
insb
xchg
push
push
cmp
xchg
das
rolb
mov
mov
pop
cmp
nop
jmp
sbb
or
mov
push
std
sub
loope
or
sub
sti
mov
jp
jnp
mov
pusha
fmull
lock
jecxz
push
mov
dec
test
jp
sbb
movsb
inc
pusha
push
cmp
mov
mov
mov
jb
adc
mov
iret
cmpb
out
push
aam
jge
js
sbbb
add
ja
cmp
pushf
inc
xchg
sbb
dec
test
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
jmp
inc
mov
add
push
icebp
push
pop
cmp
or
jle
stos
addb
add
jge
push
pop
and
jle
stos
inc
inc
mov
add
push
icebp
push
pop
pushf
xchg
repz
sbb
lahf
jle
xchg
mov
and
ret
xbegin
leave
ss
inc
pop
add
push
inc
xlat
mov
dec
add
ret
sbb
xchg
fldcw
mov
mov
daa
mov
mov
sbb
repz
push
dec
or
jo
es
pushf
fsubrs
pop
sbb
adc
fisubrl
arpl
inc
jmp
stos
insl
pop
dec
jno
cmp
aam
jne
and
sub
xchg
enter
push
ret
insl
jg
insl
popf
fnsave
pushf
insl
jmp
adc
stos
sbb
leave
mov
lret
and
push
nop
ret
js
xor
aas
xchg
incb
repnz
aam
dec
and
repz
adc
dec
xor
sub
jne
jae
jmp
ja
mov
xchg
push
in
add
push
mov
sub
adc
sbb
stos
cmpsb
lahf
xchg
nop
mov
and
inc
push
xchg
jne
or
and
mov
fstps
dec
mov
arpl
ud1
jne
mov
mov
int
popf
inc
xchg
int
mov
and
sub
data16
cmpsl
push
add
and
int3
inc
repnz
xorl
je
mov
insl
shrl
jns
flds
sarl
scas
xor
jl
addr16
pop
dec
jp
xchg
es
lea
inc
add
jbe
stos
or
push
mov
out
inc
ret
ja
push
mov
sbb
xor
push
jle
inc
xorb
lea
mov
sub
pop
stos
xlat
add
pop
inc
imul
mov
je
lock
push
mov
sbb
dec
add
jb
sub
xor
fisubrs
mov
loopne
mov
xchg
js
adc
aad
fisubrl
jnp
cmp
and
leave
fcmovbe
xor
inc
fists
idivb
bound
stc
loopne
adc
jmp
iret
inc
insl
mov
andl
mov
sub
fldl
les
pusha
add
jbe
mov
in
cli
cmpsl
mov
ret
add
xchg
mov
cli
push
shlb
fs
xor
ret
jmp
and
outsl
jle
fists
pop
call
sbb
pop
inc
inc
pop
or
push
jb
add
lahf
pop
mov
inc
sub
lea
or
add
xchg
cmpsl
insb
sub
xchg
repz
jecxz
in
adc
lea
mov
cmc
in
pop
imul
shr
loop
out
sub
mov
testl
movb
stc
and
lret
dec
sbb
dec
inc
jge
inc
insb
loopne
sbb
add
xchg
int
adc
jne
imul
jecxz
jmp
mov
mov
daa
jne
pushf
xchg
sbb
sahf
int
jl
cmp
outsb
lods
mov
daa
pusha
pop
mov
imul
pop
and
xchg
in
leave
ss
jecxz
inc
cs
out
mov
mov
adc
ja
inc
jp
push
mov
jle
jnp
adc
sub
mov
cmp
inc
jge
movsb
lret
lahf
push
outsl
jge
test
inc
test
mov
or
out
push
push
inc
mov
and
pop
ds
mov
je
push
push
stos
test
adc
jns
push
push
sub
or
mov
daa
arpl
idivb
mov
and
mov
test
sbb
pop
jbe
xor
ss
pmulhuw
and
jecxz
insl
sbb
popf
mov
pop
cld
adc
pop
jb
pusha
test
movntq
fstpt
dec
xchg
cmpsb
add
gs
test
popf
ret
gs
mov
fcoml
daa
pop
sbb
rorb
pop
cli
jns
mov
loop
jmp
pop
inc
jmp
xor
shlb
mov
mov
gs
xor
jle
jb
sahf
jl
hlt
std
mov
adc
mov
and
pop
push
push
into
sbb
mov
fcmovnu
orb
enter
out
js
ret
jb
mov
fs
mov
ror
into
mov
push
sub
cli
or
addr16
nop
xorb
or
jl
or
push
mov
ss
jae
mov
rcll
shrl
pusha
cwtl
inc
mov
cmp
sbb
pop
aad
sub
lock
ja
or
sahf
cli
sarb
push
inc
and
jecxz
in
cmp
mov
lock
cmpsl
loop
icebp
jbe
add
loop
dec
mov
and
mov
mov
push
movsb
jmp
inc
test
mov
inc
fcmovu
xor
jo
loopne
dec
inc
ds
mov
ss
fnsave
cwtl
jmp
mov
and
dec
cmpsl
jnp
sbb
pop
in
fisttpl
in
push
and
dec
scas
adc
ret
and
pop
mov
mov
inc
test
xor
xchg
mov
lret
ja
cmp
repnz
in
in
xchg
mov
mov
xor
mov
mov
mov
xor
cmp
mov
adcl
xor
jno
leave
sub
dec
and
repnz
xchg
popa
jno
int3
out
negl
movsb
rcl
mov
mov
insl
jl
xchg
cld
and
andl
push
frstor
xchg
or
out
cmp
pop
and
shrb
mov
call
xchg
xor
xor
imul
sbb
mov
jecxz
jb
xor
add
dec
xor
jne
aas
imul
shlb
mov
mov
into
fsubrl
fidivrs
jb
adc
mov
fiaddl
insl
jge
xor
and
sbb
das
or
fadds
cmp
push
pop
adc
test
cmp
mulb
xor
mov
andb
jbe
les
sti
jp
cmpsl
lds
test
scas
subb
fucom
mov
test
loop
or
jmp
dec
mov
rcr
jmp
arpl
sub
adc
test
or
jbe
inc
fimuls
pusha
insl
es
ljmp
inc
test
or
add
test
push
push
xchg
loopne
arpl
imul
je
xchg
sbb
nop
jno
sbb
mov
mov
cmpsb
jecxz
scas
mov
cmp
out
lock
jg
in
mov
stos
imul
mov
stos
imul
mov
stos
imul
mov
stos
imul
pusha
mov
cltd
and
mov
and
xchg
imul
dec
stc
stc
test
mov
jbe
pop
xchg
fnsave
cmp
stos
cmp
inc
shrl
movsb
sub
jp
mov
cmp
outsb
popa
add
or
xor
xrelease
jl
shrb
les
loop
in
sbb
push
sbb
out
loop
xor
jbe
popa
push
push
pusha
aam
and
fldl
fs
jns
adc
push
xlat
push
imul
cmpl
test
mov
pop
pop
mov
fstl
jbe
repz
sbb
adc
mov
cmc
pop
cmp
xchg
lcall
andb
in
ret
dec
mov
outsl
pop
int
pushf
jne
in
test
adc
fisttps
in
or
andb
shll
xchg
and
rclb
call
push
imul
mov
shll
push
xlat
lcall
mov
std
cmpsl
cmp
mov
or
das
into
es
bound
xor
icebp
xor
xchg
jne
pop
xor
sub
cmp
push
sub
push
jle
pop
adc
shl
lcall
sbb
mov
mov
inc
ror
les
ss
cmp
daa
scas
test
cmp
jnp
sub
int
mov
adc
fcoml
xchg
data16
cmpsb
xor
mov
adc
cmpsb
fwait
jae
out
inc
andl
movb
xchg
xchg
inc
dec
jmp
loopne
dec
pop
add
and
sbb
and
inc
dec
push
insb
inc
into
adcl
mov
cmp
cmp
lea
rcrl
mov
int
xor
sbb
sbb
ret
in
adc
arpl
cs
jmp
push
pop
sbb
mov
mov
jl
and
std
push
pop
sbb
inc
pushl
fisubs
push
jbe
sub
dec
xchg
test
imul
add
dec
xor
mov
aam
jbe
pop
add
pushf
outsb
shlb
fimuls
mov
jbe
inc
imul
jp
and
jb
cwtl
jns
daa
fcompl
shl
inc
push
sbb
add
jo
or
sub
cwtl
fsts
or
out
repz
iret
fcompl
das
mov
ss
aas
les
push
test
je
lret
inc
addr16
hlt
and
mov
imul
mov
mov
adc
jbe
push
popf
decb
negl
xor
xor
xchg
jno
sbb
ss
rcrb
xchg
lret
xor
add
addr16
fimull
ds
mov
inc
in
lahf
push
cmp
add
pop
adc
clc
dec
movsb
mov
ret
push
cmpsl
pop
in
loop
add
mov
cmp
cld
mov
mov
xchg
stos
call
cmc
loope
sbb
jp
ja
int
fwait
sub
jle
arpl
mov
scas
data16
mov
mov
pop
push
rorl
mov
arpl
leave
jmp
in
data16
or
pushf
or
aaa
xchg
pop
or
test
xor
xchg
nop
adc
dec
cli
es
cli
mov
pop
lods
push
push
xchg
dec
adc
sub
in
jg
dec
dec
sahf
xor
sub
dec
or
orl
lods
cld
sahf
mov
testb
leave
aad
pop
dec
inc
mov
adc
jp
xor
mov
insb
fnstcw
mov
addr16
shr
cld
push
lahf
xor
push
outsb
jl
pop
in
in
xor
sub
mov
movsb
idivl
stos
push
mov
jo
sbb
mov
push
xchg
jnp
inc
sar
add
arpl
inc
pusha
xchg
inc
mov
xorl
mov
cs
mov
aas
sub
xchg
or
mov
pop
and
mov
je
shlb
scas
lods
das
or
aad
dec
in
dec
mov
jmp
rolb
or
xchg
mov
cli
dec
pop
push
jnp
out
push
movsl
imul
mov
dec
lds
lret
call
dec
mov
out
sub
push
repz
push
sbb
scas
lcall
cmpsb
fistl
rcl
sti
aas
mov
ficompl
mov
adc
dec
mov
mov
mov
out
mov
stc
push
les
xchg
cltd
std
mov
dec
mov
dec
jnp
jl
lods
aad
xor
divl
sub
mov
fldenv
adc
mov
hlt
int
pop
nop
shlb
pop
pop
outsb
cmp
cwtl
mov
in
xchg
xchg
mov
enter
adc
adc
in
add
mov
jns
addr16
jg
lock
xor
fnsave
jmp
out
sub
imul
pushf
es
mov
scas
mov
and
scas
and
jg
xchg
and
ljmp
mov
pop
jo
jbe
jne
cmp
hlt
dec
imul
and
sub
jae
lret
das
dec
or
adc
sub
cwtl
gs
dec
push
mov
decb
ljmp
hlt
dec
aaa
insb
cld
call
xor
hlt
ret
jbe
hlt
ret
frstor
out
xchg
nop
xor
dec
enter
jmp
xchg
sub
mov
dec
aaa
insb
call
xor
hlt
ret
jbe
hlt
ret
jecxz
sub
iret
mov
lahf
pop
push
mov
push
adc
repz
aaa
insb
aad
cmpsl
mov
jb
pop
out
adc
in
std
or
ror
xor
inc
mov
inc
push
push
nop
into
push
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
ret
fsts
xchg
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
fcomip
cmp
sub
cmp
fists
lret
shll
push
mov
dec
sbb
mov
mov
lock
sti
fistps
aad
cmc
sti
pop
mov
mov
std
or
movsl
jb
loope
mov
ss
push
xlat
loope
push
lret
mov
loopne
aam
js
mov
es
cmpsl
fs
xchg
mov
std
ffreep
cmp
mov
mov
fcomip
and
sub
outsb
xlat
enter
xlat
cmp
sub
insb
sti
cmp
fcomip
xor
fmul
xorb
ret
gs
mov
pop
mov
cmc
cld
xorl
hlt
mov
jle
pop
sbb
js
cmc
xchg
adc
cmc
cmp
test
subl
shlb
divb
insb
xchg
inc
dec
mov
cli
fcomip
cmp
jmp
mov
clc
fcomip
cmp
mov
push
adc
cli
fcomip
cmp
stc
dec
inc
pop
xlat
enter
inc
mov
xchg
mov
xchg
rorl
out
mov
fcomip
cmp
stc
dec
jecxz
xlat
enter
inc
mov
pop
xlat
enter
hlt
cmp
into
psrld
scas
xchg
mov
out
sub
fcomip
aas
rclb
std
fistps
lret
mov
lods
loopne
mov
stos
xchg
xor
or
fdivr
jns
std
fisttps
add
cli
xor
in
dec
scas
xor
roll
cmc
loop
std
fisttps
fldl
mov
out
lret
cmp
shll
jmp
sbb
scas
fwait
aas
clc
fcomip
cmp
mov
mov
pop
xlat
enter
pop
cmp
fcomip
cmpb
or
movsl
jb
loope
mov
dec
cmc
push
xlat
loope
push
lret
mov
loopne
inc
fnstsw
jge
hlt
xor
xlat
enter
cmp
sub
cmp
test
testb
push
sbb
sub
std
shll
push
push
sbb
mov
cmp
and
add
enter
leave
xchg
jnp
dec
mov
std
ffreep
xlat
or
hlt
adc
mov
jge
stc
and
cmp
shll
push
push
sbb
ja
sbb
je
cmp
dec
ss
adc
cmc
cmp
into
dec
adc
push
scas
daa
bound
test
fcomip
cmp
lret
outsl
mov
add
pop
push
nop
rorb
add
scas
xchg
sbb
add
xchg
jmp
pop
loope
push
notb
pusha
frstor
sub
mov
cmpsl
clc
fcomip
cmp
stc
xlat
pop
push
scas
jecxz
std
fistpll
push
xchg
dec
leave
jmp
scas
jns
push
dec
scas
outsl
pop
push
idivb
dec
idivb
ds
mov
mov
dec
sub
jne
nop
push
inc
mov
fcomip
mov
nop
pop
lret
cmp
mov
lret
pop
jno
fbstp
sarl
add
hlt
xchg
xlat
insl
fdivl
cmpsl
cmp
fbstp
xchg
je
rcrl
test
fcomip
cmp
push
pop
xor
cmc
test
mov
cmp
lret
outsl
mov
mov
test
mov
sahf
test
cmp
mov
cmp
std
pop
sbb
cmc
push
aas
std
fistps
and
outsl
mov
jne
adc
std
insl
jbe
add
pop
cmpb
jg
cmc
data16
sub
inc
adc
daa
adc
mov
notb
std
into
mov
push
enter
xlat
pop
push
scas
sbb
or
mov
xchg
fistpl
and
dec
dec
inc
mov
inc
mov
adc
lret
mov
cmp
adc
std
fcomip
add
fcomip
cmp
adc
std
fcomip
pop
mov
sub
lds
cmc
addr16
scas
out
insb
clc
fcomip
pop
jecxz
push
mov
lret
fcomip
cmp
or
push
push
xor
jl
sub
cmp
insl
jbe
jmp
push
clc
test
mov
cmp
push
pop
xor
cmc
test
test
cmp
in
cmc
cmp
cmc
add
cmp
cmp
fcomip
pop
shll
and
std
insl
pop
mov
add
clc
mov
std
mov
cmc
cmp
mov
jmp
std
mov
adc
cmc
cmp
pop
sbb
pop
into
insl
cmp
mov
pop
cmc
sarb
std
fildll
mov
rcll
std
fbstp
pop
push
sbb
sbb
xor
clc
test
fcomip
cmp
mov
cmc
pop
pop
push
sbb
fnstsw
mov
sub
pop
xlat
enter
inc
adc
enter
out
insb
clc
fcomip
or
xchg
ret
into
xlat
add
sbb
aas
std
fists
pop
jl
movsl
int
hlt
cmp
clc
loop
fsubrs
ret
loop
cmc
ret
add
sbb
std
pop
jmp
push
test
or
push
loope
gs
fcomip
cmpb
hlt
push
scas
jns
push
xor
pop
pop
xlat
enter
cmp
into
sub
fcomip
cmp
stc
dec
sbb
ljmp
sbb
cmp
out
sub
inc
and
cmc
cmp
stc
jb
pop
lods
out
test
jne
clc
test
ja
cmp
pop
jno
fbstp
insb
aas
std
fbstp
test
jp
cmp
pop
push
mov
js
inc
test
add
test
outsb
add
cmc
mov
pop
loope
cmp
stc
jb
xor
inc
xchg
mov
dec
mov
mov
jne
outsb
bound
pop
cmc
push
aas
std
fbstp
in
inc
das
subl
hlt
cmp
mov
mov
std
lahf
inc
and
outsl
mov
jne
adc
std
insl
jbe
add
pop
cmpb
jg
cmc
data16
sub
inc
adc
daa
adc
mov
notb
std
into
mov
push
enter
xlat
pop
push
scas
sbb
or
mov
xchg
fistpl
and
dec
dec
inc
mov
inc
mov
jb
fcomip
pop
mov
sub
outsb
xlat
enter
dec
out
inc
jbe
and
push
xchg
mov
cmp
adc
std
fcomip
add
fcomip
cmp
adc
std
fcomip
pop
mov
sub
outsb
xlat
enter
dec
out
testl
std
filds
and
rorb
or
dec
and
addr16
mov
dec
and
jo
subb
ret
insb
rorl
mov
dec
and
leave
lods
and
or
insb
rorl
js
dec
and
aaa
xor
cmp
dec
and
outsl
mov
imul
rorb
cmp
and
dec
push
mov
icebp
sub
cwtl
add
or
dec
and
hlt
jae
sbb
aam
int3
jmp
outsb
hlt
fistpll
rorl
jno
sub
pop
mov
dec
and
lock
xor
dec
inc
or
iret
pusha
insl
push
sub
aaa
das
cwtl
add
or
dec
and
hlt
fld
jnp
dec
and
adc
sbb
fldt
cwtl
push
jae
xchg
mov
and
jne
adc
jo
jmp
xchg
mov
test
mov
pop
xor
aaa
in
mov
nop
add
fildll
dec
pop
add
int
mov
scas
subb
inc
imul
or
and
shll
aas
push
vmwrite
dec
pop
lahf
jg
and
shlb
pop
xor
mov
insb
rorl
sub
testb
push
and
repnz
subb
dec
and
movsb
add
xlat
sub
mov
and
jo
cld
fldln2
mov
push
dec
popa
pop
cwtl
xor
leave
out
andps
rorb
shl
fwait
psadbw
shlb
or
add
and
dec
jae
pop
aas
cmp
inc
leave
out
xor
push
hlt
and
mov
std
push
mul
mov
sub
or
in
dec
and
xchg
and
stos
ss
push
fucom
movsl
cmc
sbb
repnz
add
and
jg
jae
or
and
rcll
mov
pop
pop
test
fnstsw
cmp
push
xor
and
pop
aaa
fnstcw
and
out
dec
and
adc
and
fmuls
out
rorl
inc
and
lds
jg
pop
aam
inc
fistpll
add
fildll
dec
dec
sub
and
cmpsb
mov
xchg
in
enter
dec
pop
jg
cmp
shlb
and
call
xor
push
unpcklps
dec
jl
outsb
mov
mov
rolb
imul
cmp
ror
cmp
shlb
and
push
hlt
and
mov
and
cwtl
xor
leave
out
ucomiss
dec
pop
shl
fwait
cmp
and
inc
sbb
adc
dec
and
xchg
and
stos
ss
push
fucom
movsl
aam
pop
xor
and
jg
jae
or
filds
or
and
sub
pop
ds
mov
mov
dec
and
push
scas
and
or
push
dec
and
rcll
aad
shlb
iret
jg
jae
or
and
rcll
mov
xchg
lcall
mov
clc
insb
in
mov
push
dec
xlat
insl
jl
mov
adcl
mov
test
xor
cmp
ror
cmp
shlb
and
lds
push
repz
test
jp
jl
mov
test
js
cmp
ror
cmp
shlb
and
push
hlt
and
mov
and
cwtl
xor
leave
out
ucomiss
dec
pop
shl
fwait
cmp
and
inc
sbb
adc
dec
and
xchg
and
stos
ss
push
fucom
movsl
clc
mov
jge
sbb
and
dec
xor
lret
int3
fisttpll
dec
and
jnp
aas
push
and
shrb
xchg
out
loop
pop
xor
dec
pop
or
mov
push
testb
push
xor
push
cmovge
rorb
xchg
rorb
mov
or
shll
and
push
mov
pop
adc
xlat
jae
movsb
in
dec
and
jne
adc
fs
decb
les
mov
inc
or
ljmp
xchg
hlt
push
or
adc
add
mov
xor
mov
in
test
nop
scas
mov
int3
xchg
icebp
push
dec
das
lret
sub
popf
aas
push
cmp
adc
fs
fcoms
dec
mov
and
out
fcomip
push
jg
daa
aad
test
push
int3
stc
fildl
shl
or
das
inc
lret
or
filds
dec
mov
and
out
mov
icebp
push
outsb
js
pop
pop
sub
push
ljmp
fmul
mov
add
pop
and
dec
xchg
shr
cmp
test
jmp
dec
mov
scas
loop
aam
frstor
lcall
and
movsb
idivb
dec
pusha
add
das
pop
test
mov
mov
cmp
lods
fnsave
mov
sub
adc
xchg
nop
scas
mov
aam
shr
sbb
push
sub
mov
cmp
sahf
xchg
stos
fnstsw
mov
loop
lcall
into
cmp
loop
iret
sub
arpl
stos
sahf
mov
test
add
arpl
enter
inc
pop
inc
movsb
sahf
mov
jmp
data16
pop
loope
push
push
shrl
jne
inc
sbb
outsl
pop
testb
sbb
data16
lcall
pop
hlt
icebp
jo
adcb
sbb
pop
sub
pop
bound
scas
fwait
imul
jg
cs
fucom
in
sub
and
pand
rcrb
outsl
fistpl
repz
into
aam
jmp
setnp
sar
das
test
clc
mov
sbb
cwtl
pop
cld
imul
pop
jp
repnz
out
aam
bound
andb
fwait
mov
sbb
push
jmp
cli
add
mov
mov
add
lea
or
jns
push
mov
mov
andl
fwait
mov
sbb
sub
icebp
add
jmp
out
jno
xor
shll
repnz
add
setnp
pop
idivl
adc
movsb
inc
jns
stc
setnp
sub
sbb
setnp
add
js
arpl
rorl
cmp
outsl
addr16
test
roll
add
cmp
jo
cvttps2pi
lcall
gs
arpl
aam
fwait
cmp
orl
inc
xor
pop
adcl
clc
fidivrs
cs
fucom
in
sub
and
pand
sar
fcoms
cmc
mov
lds
pop
sub
cli
xor
pop
ja
daa
fnsave
jp
jno
movsb
aas
decl
in
imul
xchg
cmpsb
push
iret
int
and
jmp
in
cmp
test
es
xchg
dec
lahf
jo
jo
loop
sub
movsb
mov
bound
int
pop
repnz
pop
cmpsb
shlb
xchg
cmp
inc
jnp
stos
outsb
dec
fimuls
mov
lods
mov
rcr
jge
iret
int
cmp
add
shr
xor
jp
sub
pop
sahf
fcompl
movsl
pop
inc
fs
adc
int3
mov
and
jmp
sub
cld
je
int
inc
inc
pop
push
add
int
mov
roll
movsl
pop
cmp
mov
cmpsb
je
xchg
iret
in
cmpsl
xor
inc
imul
mov
jbe
and
scas
adc
sahf
pop
dec
jecxz
jp
std
mov
daa
hlt
dec
mulb
jg
sub
cmpsl
and
aad
sbb
mov
add
jmp
pushf
cmp
xchg
pop
loopne
mov
mov
dec
sub
out
and
movsb
inc
out
call
mov
pop
insb
dec
sub
cmpsl
xchg
lds
mov
les
pop
and
scas
sbb
scas
daa
jp
sbb
mov
jmp
mov
adc
mov
adc
adc
mov
mov
mov
ret
push
inc
adc
sub
mov
jecxz
inc
push
out
ret
dec
push
inc
pop
cltd
push
lods
in
fsts
inc
or
mov
dec
inc
and
loopne
cmpsl
data16
xor
aam
ds
ds
ror
cmp
bound
adc
stos
in
fidivl
and
adc
cwtl
dec
insb
out
stc
adc
stc
popf
fistpl
xchg
pop
jbe
mul
xor
out
shr
jp
outsb
lahf
out
imul
in
and
stos
in
or
shr
xor
adc
push
clc
push
push
push
and
xchg
iret
imul
push
popf
pop
lahf
cmp
fnstsw
orl
test
mov
test
mov
test
mov
lret
mov
ror
jno
iret
adc
dec
lret
out
loopne
mov
xor
mov
pop
push
jbe
test
or
fsubs
aaa
fildl
or
ja
call
enter
mov
jmp
jle
xor
bound
frstor
mov
in
shlb
inc
fisubs
or
cmp
sub
jns
testl
cmp
cmp
mov
sub
sbb
sti
mov
xchg
sub
sub
dec
daa
inc
outsl
push
adc
movsl
in
fldenv
loop
iret
lea
jnp
push
or
fs
add
dec
and
pop
insb
inc
lods
and
aad
lock
das
mov
repnz
push
iret
popf
adc
out
sbb
jbe
imul
cld
or
and
stos
fimull
and
cmpsl
insb
mov
jae
ljmp
mov
icebp
sub
jmp
push
push
stos
ret
adc
test
inc
arpl
and
lods
fidivrs
inc
mov
xlat
outsl
jns
jmp
int
int
int
jns
pop
dec
das
adc
sbb
pop
clc
jmp
dec
sub
or
ret
data16
lahf
in
scas
es
inc
frstor
push
xchg
pop
push
in
daa
fistpl
mov
mov
mov
icebp
mov
xchg
jl
test
mov
subb
scas
popa
pop
or
pop
adc
cmpsb
dec
xchg
out
and
and
popf
jb
dec
jne
aas
aad
add
je
xor
mov
mov
mov
mov
pop
dec
in
or
sbb
test
push
out
add
fcoml
pop
cmc
add
and
add
and
mov
bound
aas
or
fistl
push
sbb
cmp
lods
aad
aas
or
divb
mov
insb
cmp
jge
xchg
cwtl
rclb
ljmp
test
repz
pop
push
xor
test
mov
push
mov
cltd
push
inc
inc
fcoms
mov
jb
mov
faddl
or
jno
movl
mov
and
insb
popf
lock
ret
and
xor
loopne
xor
jl
jno
pusha
mov
fsubs
dec
xchg
dec
stos
push
dec
sbb
mov
scas
mov
xchg
cmpsb
jns
jb
aas
and
mov
cmc
xchg
push
cli
cmpsb
inc
fwait
pusha
shr
dec
cld
jbe
repz
fbld
xor
data16
inc
mov
mov
ljmp
xchg
mov
int3
cmp
in
adc
adcl
shlb
rcrl
add
dec
jae
pop
mov
xor
push
jo
out
add
out
icebp
xor
repnz
fcoml
sar
divl
fwait
in
xchg
cli
subl
sarl
iret
in
or
pop
fcmovne
iret
xchg
jge
add
je
out
mov
ret
out
in
jmp
xchg
fisubrs
push
mov
jmp
push
mov
xchg
imul
cli
pop
push
mov
add
fists
rorl
insb
test
leave
jb
xchg
or
popf
movsl
scas
jo
add
jge
loop
sti
jno
repz
lock
ja
mov
cmp
lods
rolb
jle
aam
inc
jle
notl
add
lds
add
sbb
ret
popf
dec
std
mov
outsl
dec
mov
xchg
hlt
imull
or
rcll
xchg
iret
lcall
cmpsl
lods
dec
call
mov
outsl
mov
ret
push
ss
leave
jle
dec
cltd
xor
mov
mov
in
outsb
xor
das
xchg
dec
mov
inc
fdivs
push
popf
jg
sub
scas
sbb
jp
mov
jnp
call
testb
inc
push
adc
stos
push
sub
jmp
ja
out
push
mov
jo
stos
sub
pop
or
daa
dec
sbb
xlat
cmp
sub
jecxz
mov
jp
cli
sub
mov
mov
pop
jge
adc
cli
inc
jg
xchg
pop
or
mov
inc
and
leave
xchg
sbb
das
or
mov
sbb
inc
pop
js
mov
push
xor
cli
sub
icebp
mov
adc
dec
pop
inc
into
testb
jge
subb
aaa
imul
aas
sbb
incb
and
rcl
xchg
clc
adc
pop
faddl
adc
mov
cld
inc
arpl
call
mov
sahf
sbb
mov
xlat
subb
stc
sbb
jp
aaa
mov
shrb
inc
mov
cmp
pop
gs
sub
add
in
push
ret
gs
sub
sbbb
pop
mov
data16
cmpb
cmp
fcoml
cs
pusha
aad
jge
sub
pop
xor
adc
push
filds
mov
sub
rcrl
add
loopne
xlat
addb
lahf
mov
dec
pop
gs
aaa
pop
gs
and
out
data16
sti
call
imul
mov
xchg
mov
and
testb
cmp
pop
ja
jbe
das
stos
ret
jecxz
popf
scas
outsb
cltd
mov
test
dec
movsb
push
xor
mov
andb
out
or
xor
mov
fisubl
xorl
mov
pop
xor
sub
cmpsl
xchg
imul
or
or
xor
push
mov
jp
sbb
push
adc
push
loop
pop
out
or
pop
xor
nop
push
cmp
ss
push
or
jns
shl
psrad
sbb
and
inc
inc
jle
jl
pop
adc
adc
pop
xor
not
es
adc
inc
sub
jp
or
into
ja
push
loop
dec
sub
je
xor
sub
idivl
pop
adc
push
loop
and
pop
adc
cmp
adc
ljmp
inc
shl
fcomp
mov
and
andb
inc
clc
movsb
add
xchg
pop
cmp
push
mov
das
mov
sbb
scas
scas
cmp
adc
roll
xor
lods
scas
pop
adc
xor
mov
and
xlat
adc
aad
adc
int
mov
cmp
and
or
xor
xchg
adc
mov
jns
int
xchg
cs
popa
xchg
adc
cli
and
and
iret
cs
and
and
pop
adc
aad
adc
xchg
daa
mov
mov
nop
mov
cmp
bound
adc
cmc
bound
mov
sbb
sbb
je
xchg
jg
insb
jae
out
daa
das
push
mov
adc
sarb
push
lret
enter
cmp
dec
out
jns
out
xchg
xchg
cmpsb
scas
push
into
pop
insl
addb
daa
jle
mov
loop
cmp
sarl
sub
test
fdivrs
mov
enter
stos
mov
xchg
add
popf
xchg
ja
fiadds
sub
mov
and
cs
hlt
adc
xchg
cwtl
pop
cmp
enter
mov
sarl
sbb
push
aad
in
in
push
lret
mov
and
or
inc
cmpsb
mov
pop
add
mov
add
mov
add
mov
add
mov
add
mov
fs
add
mov
mov
add
mov
mov
mov
push
ljmp
rcrb
jno
adc
fs
xchg
in
movsb
rolb
gs
cmp
mov
int3
mov
cltd
mov
mov
mov
mull
mov
mov
jecxz
jge
add
in
movsb
ror
sarb
mov
pop
in
out
jge
cmp
loop
shl
xlat
mov
cltd
mov
cmpsb
in
out
jge
ds
movsb
rolb
mov
cltd
mov
jb
out
jge
xchg
cmp
ja
cli
shrb
cmp
cmc
orl
push
mov
or
xchg
jge
sbb
mov
sub
loop
icebp
das
js
lret
out
mov
cmc
xorl
adc
and
mov
mov
jno
push
dec
mov
cmp
inc
cmc
lock
aas
jnp
mov
pushf
cmp
movsb
hlt
mov
adc
dec
mov
ret
push
mov
inc
jnp
xor
cli
pop
sub
xchg
fisubl
std
das
inc
pop
mov
jae
fiadds
inc
lock
or
test
sbbb
out
push
adc
test
add
xchg
pop
gs
imul
xchg
sbb
pop
jecxz
dec
fwait
xor
notl
je
inc
cmc
cli
mov
aas
adc
or
jecxz
jecxz
out
pusha
sarb
in
sub
out
xchg
es
arpl
lock
sub
out
sbb
test
jnp
int3
cmp
out
pushf
test
mov
pop
push
dec
sti
add
pusha
clc
adc
aas
xchg
fidivs
push
mov
jne
cli
ja
pop
pop
and
in
loop
push
out
in
cmp
xor
push
cwtl
movl
mov
dec
mov
cwtl
cld
int3
add
lods
lods
pop
lds
dec
xlat
sub
loopne
out
sub
fdiv
loope
push
fisubl
jnp
xor
xchg
sbb
jae
xor
inc
loop
outsb
add
mov
aam
sub
push
push
mov
or
mov
pusha
mov
test
mov
sbb
mov
mov
iret
mov
sti
lret
sbb
cmpsl
cmp
and
jl
jnp
add
add
mov
xlat
outsl
mov
orb
outsb
push
subb
lock
push
scas
das
mul
mov
or
fcmovne
jne
clc
ret
mov
sbb
push
sti
pop
arpl
pop
icebp
lods
xchg
cmp
out
addr16
sub
hlt
push
andb
mov
stos
cmp
sti
dec
lods
dec
and
push
in
inc
int
jg
negb
fidivrl
push
sub
lahf
or
jp
xlat
pop
mov
lds
out
addl
leave
jmp
fsub
imul
mov
dec
xchg
cmpsb
push
push
lds
fmull
loopne
xchg
xchg
and
faddl
or
inc
jbe
mov
adc
leave
pop
mov
cmpsl
adc
xchg
xchg
testb
out
push
inc
jns
imul
inc
loop
cmp
inc
inc
sub
jne
test
mov
lea
sbb
mov
push
mov
dec
loopne
data16
and
cmp
jns
mov
aas
mov
repnz
lahf
cmp
or
push
gs
push
mov
jbe
sbb
add
push
in
xchg
jecxz
sbb
in
cmp
mov
fisubs
cltd
push
push
lret
fidivrl
cmp
js
daa
xorb
mov
popa
out
and
jge
push
push
bound
enter
push
punpckhdq
or
aaa
inc
std
fldl
cmp
mov
xor
decl
hlt
xchg
mov
xor
lret
or
push
ret
daa
push
das
sahf
mov
xchg
sbbb
jbe
dec
sti
xorl
std
outsl
push
pop
subl
cmp
cwtl
inc
add
and
add
lea
sti
jb
clc
pop
mov
flds
les
push
and
inc
cmpl
push
jae
push
sub
jle
je
sbb
ficoml
inc
jns
rcll
inc
dec
add
mov
pusha
mov
mov
dec
je
seta
mov
or
mov
xchg
jb
pop
popa
add
out
lock
mov
xchg
dec
ret
nop
adc
pop
imul
pop
xlat
xchg
sub
pop
mov
aas
mov
ficoms
fs
add
pop
in
test
aas
jo
mov
or
and
xor
mov
into
xor
fprem
cmp
test
sbb
jp
push
sub
and
xor
and
nop
pcmpeqw
inc
mov
les
pushl
fs
jo
out
add
lret
xchg
ds
and
pop
rol
cmp
imul
je
repz
cli
arpl
mov
outsb
lret
fldl
cmpsl
add
mov
lret
loop
mov
hlt
mov
mov
mov
and
sbb
shrl
test
scas
jbe
mov
pushf
addps
shrl
arpl
push
jge
outsb
hlt
cmpsl
jno
test
lock
mov
fcomps
aad
je
mov
fimull
or
jnp
test
jmp
jbe
mov
dec
cld
int3
hlt
mov
mov
push
sbb
cli
pop
mov
mov
push
adcl
out
cmp
mov
sbb
pop
mov
mov
jne
dec
add
inc
mov
add
pop
loope
jp
dec
outsl
dec
push
inc
in
push
sarl
fildl
push
lret
adcl
nop
mov
out
outsb
mov
or
pop
lock
icebp
fcomps
sbb
in
sub
xor
dec
pop
add
pop
loope
jp
dec
mov
mov
fldt
sbb
outsl
test
push
sub
mov
dec
jnp
mov
sbb
cmp
xchg
les
push
dec
cmp
fisubrl
fwait
xchg
cmp
add
lret
lret
pop
mov
or
or
loopne
sub
push
lock
lock
rorl
lock
xchg
dec
inc
gs
aas
lods
das
lods
xor
sti
imul
gs
fisubrl
mov
pop
sbb
outsl
iret
jl
aam
jge
ret
lock
dec
cmp
faddl
mov
inc
aaa
pop
pop
hlt
mov
enterw
jnp
xor
sub
mov
pusha
jo
xor
das
push
xchg
add
jnp
addr16
inc
push
sub
xchg
mov
push
or
dec
fldcw
test
jns
cmp
daa
pop
pop
mov
inc
lods
add
stos
ja
sbbb
add
pop
push
push
lret
mov
insl
lea
cli
jb
mov
movsl
inc
cmp
adc
out
dec
jo
out
sti
out
idiv
sub
xor
and
clc
or
pop
mov
mov
les
int
cli
in
mov
test
outsb
adc
cmp
pushf
mov
repnz
out
into
xchg
or
dec
lock
mov
fstpt
push
imul
sub
hlt
cwtl
pop
es
sbb
add
inc
in
out
fs
sub
iret
nop
fcoms
lahf
sbb
sbb
arpl
in
repnz
bound
daa
clc
sbb
ljmp
negb
fwait
test
jle
lock
lahf
sbb
pause
pop
sbb
rorb
fistps
movsb
dec
push
push
xchg
maskmovq
negl
test
jb
push
and
jle
lahf
inc
addr16
xlat
xor
outsb
jnp
sbb
sub
dec
fimull
enter
pop
push
push
mov
cmp
or
arpl
xchg
clc
sbb
dec
in
jp
mov
xor
aam
cmpsb
or
repnz
testl
es
inc
fisubrl
stc
fcmovne
fldl
xchg
adc
or
cmpl
jb
aaa
push
cmp
pop
xchg
push
inc
dec
xchg
dec
movsb
sbb
dec
repnz
xor
push
adc
aaa
dec
mov
push
inc
inc
pop
shrb
adc
jge
cs
cmpb
cmc
movsl
in
push
pop
insb
and
test
lret
inc
test
or
out
in
stc
iret
jae
mov
dec
stc
mov
jo
outsb
cmp
cmp
je
jle
push
lahf
fmul
add
fcom
mov
add
mov
aas
or
adc
or
sbbl
les
icebp
dec
insb
loop
or
push
maxps
popf
cli
xchg
mov
out
test
hlt
icebp
dec
mov
fisubrs
idivl
xchg
mov
sbb
repnz
xor
push
xchg
sub
jle
int
in
inc
push
mov
cmpl
and
scas
push
jnp
out
xchg
xchg
dec
enter
and
and
xor
mov
mov
cmp
pop
jne
rol
and
popa
inc
xchg
pop
cltd
xlat
xchg
push
in
adc
loopne
outsl
inc
mov
mov
inc
inc
int3
popa
xchg
and
cmp
shlb
hlt
test
imul
lods
pop
jl
push
xchg
inc
adc
movl
test
mov
jl
popf
push
sub
subb
pop
lcall
loopne
jns
sahf
mov
xchg
lret
push
movsb
cmp
adc
fnsave
lret
xchg
dec
lock
inc
add
test
cwtl
test
fnstenv
push
lods
sbb
sub
call
ror
jnp
jno
dec
popa
cmp
fisttpll
subb
pop
cs
data16
popa
jo
xchg
sub
nopl
insl
in
sbb
mov
jno
loopne
sahf
addr16
mov
fs
mov
stos
aas
adc
sarl
imul
cmp
and
xlat
or
mov
add
cmpl
cld
inc
xchg
div
mov
imul
ljmp
or
aam
imul
jge
xchg
add
add
pop
dec
and
xor
ja
sbb
inc
cmp
cwtl
or
add
fdivrl
push
sti
ret
movsl
pop
rcll
loop
cld
mov
mov
out
ret
jne
repz
mov
fs
dec
mov
pop
fists
fwait
scas
lret
jae
insb
outsb
push
jno
xor
sbb
icebp
enter
and
xchg
or
mov
mov
sub
adc
arpl
jbe
jg
mov
outsl
icebp
negl
cli
scas
popf
mov
xor
int3
mov
sbb
dec
test
test
es
mov
icebp
call
iret
xchg
xor
out
dec
mov
mov
cltd
or
out
out
jno,pn
bound
sub
sub
lock
ja
sub
push
inc
sub
aam
jmp
or
pop
in
ljmp
mov
fldz
inc
and
call
into
xchg
aad
push
bound
and
xchg
dec
ss
inc
sahf
dec
or
loopne
add
stos
add
ret
bnd
jp
loopne
or
pop
mov
mov
inc
movsl
roll
xchg
setg
and
repnz
sahf
xchg
xor
xchg
add
dec
imul
das
sbb
or
outsb
jno
push
mov
sahf
lahf
mov
pop
ss
sbb
cs
mov
pop
lcall
arpl
aaa
fldz
mov
sbb
mov
lcall
mov
cmpsb
sbb
addr16
ficoms
or
push
jo
sbb
outsb
inc
nop
out
adcl
shl
dec
enter
pop
imul
cmp
testl
add
out
xchg
push
add
push
lret
xor
push
out
cmp
jno
icebp
clc
mov
pop
fdivrp
xchg
ljmp
jg
ret
jg
bnd
or
xor
pusha
dec
negb
rolb
int3
daa
cli
repnz
in
in
or
into
mov
aas
repz
jmp
fcmovb
popf
lock
out
out
or
mov
adc
jne
js
xchg
es
scas
pop
dec
xchg
sub
les
mov
push
addr16
dec
add
sti
out
pushf
inc
loop
decb
js
test
jmp
dec
mov
jp
sbb
pop
mov
sbb
sbb
ficompl
dec
mov
mov
xchg
hlt
lods
jge
pop
dec
bound
mov
or
dec
jbe
lcall
mov
push
fistpll
cwtl
jmp
into
jbe
in
fmuls
mov
pop
fidivrs
jbe
mov
lock
pop
pusha
loope
std
call
inc
add
lret
cld
pop
mov
lods
out
mov
push
push
push
mov
or
fistpl
sbb
mov
mov
sbb
dec
jmp
dec
add
cld
ss
daa
inc
mov
sub
mov
dec
xlat
in
push
lahf
sbb
jmp
out
adc
jmp
xor
imul
and
mov
dec
cmpsl
sub
xchg
ret
ror
and
push
adc
cld
xchg
lods
mov
inc
es
xchg
adc
push
outsb
xchg
mov
lret
hlt
mov
mov
and
div
jbe
cld
pop
push
add
arpl
cltd
mov
and
push
jp
sbb
imul
leave
or
stc
addr16
xor
adcb
enter
mov
stos
lods
leave
adc
lcall
mov
mov
inc
stos
inc
mull
out
and
mov
mov
lods
push
pop
mov
lods
int3
shll
xor
or
nop
test
adc
cmp
popf
clc
dec
mov
or
dec
loope
jo
or
enter
add
inc
or
and
xchg
enter
mov
xlat
icebp
and
pop
add
xlat
or
shrl
mov
into
push
push
imul
sbb
imul
int
jae
xor
scas
mov
daa
cmpsb
jo
loope
out
cmp
sbb
push
jne
jle,pt
sbb
and
cld
jae
into
je
cmp
cld
test
and
sbb
xor
dec
add
cmp
add
mov
dec
loope
pop
mov
xlat
icebp
call
pop
out
or
out
or
xlat
icebp
mov
lock
jge
sub
test
pop
push
add
icebp
enter
xchg
ja
icebp
enter
mov
sub
adc
enter
stos
incl
jle
orb
mov
push
sbbb
nop
lods
ja
icebp
enter
add
adc
or
jecxz
push
movsb
popf
insb
stc
xor
jbe
or
in
push
push
cmpsl
test
push
add
mov
inc
pusha
in
int3
pop
add
gs
adc
fwait
push
scas
jnp
jecxz
mov
jmp
inc
into
inc
add
cmp
inc
adcl
xchg
jne
mov
xchg
xchg
adc
int
mov
add
push
jbe
int3
sti
mov
xchg
ljmp
out
xchg
adc
lcall
arpl
dec
dec
sbb
mov
xor
xchg
scas
mov
out
lcall
adc
add
push
mov
pusha
sbb
fwait
dec
adc
out
mov
sti
pop
xchg
movsl
lret
jmp
dec
inc
add
jo
aam
fstpt
dec
jp
jne
call
fildl
fldcw
sbb
imul
xor
dec
push
or
movsl
mov
pop
bnd
lock
inc
mov
inc
dec
xchg
insb
cwtl
call
stos
or
xchg
mov
pop
pop
and
xor
loope
sub
mov
xchg
adc
or
jmp
adc
dec
push
mov
xlat
sbb
sti
imul
scas
add
dec
xor
jbe
pop
loopne
lahf
pop
roll
mulb
outsb
pop
loopne
or
adc
andl
adc
sub
fs
xor
je
dec
jae
call
sub
sbb
gs
pop
dec
jae
leave
mov
imul
or
pusha
in
jl
mov
lods
mov
insl
jae
pop
dec
rol
dec
out
xchg
hlt
dec
call
mov
test
push
in
add
outsl
mov
pop
dec
inc
popf
cmp
mov
add
xchg
and
stos
push
call
pusha
les
push
mov
fstpl
xor
jae
add
rcll
jg
stc
sbb
icebp
jmp
sbb
mov
or
and
das
movsl
sti
pop
sub
sub
std
aam
jbe,pt
xchg
addl
lock
mov
add
aad
xchg
jle
push
jle
or
push
aam
pop
rcr
dec
jb
repnz
jb
add
rcr
ds
enter
mov
mov
push
sbbb
dec
cmp
add
rcr
xor
fdivl
inc
jecxz
lea
dec
push
negb
nop
pop
in
mov
sbb
xor
cwtl
xchg
ljmp
lea
adc
inc
lea
or
jmp
pop
xorb
pop
test
dec
jl
shl
sbb
lock
xor
dec
pop
jmp
data16
fsubrs
loop
pop
add
mov
pop
or
popf
pop
mov
roll
add
loopw
sti
in
fcmovnbe
mov
pop
aas
dec
es
sbb
xor
cwtl
scas
ljmp
dec
lea
mov
popa
into
stc
fldcw
sti
in
addr16
pop
movsl
lahf
pop
aas
dec
js
stos
sub
std
add
fildl
cltd
mul
jns
mov
cmpsl
movsl
xchg
ljmp
dec
pop
mov
dec
out
add
xor
push
test
mov
aad
repz
mov
fmuls
and
insl
popa
fsubl
cmp
xor
adc
sarb
in
mov
shl
push
mov
sbb
jmp
loop
xor
pop
cmpsl
add
mov
iret
stos
outsb
ret
pop
jmp
or
jo
pusha
inc
sti
sub
add
inc
dec
jbe
mov
aas
inc
jo
mov
test
and
jb
adc
inc
jae
movl
movsl
push
popf
push
mov
dec
inc
in
dec
das
mov
idiv
jg
shrl
std
jecxz
arpl
sbb
rcrl
add
mov
cmpl
inc
fsubrs
inc
leave
mov
jnp
enter
push
movsl
xchg
mov
pusha
xor
imul
ror
adc
insl
push
xchg
jb
add
mov
xor
lcall
cmp
test
sti
rcrl
xchg
icebp
sbb
jne
dec
loope
loop,pt
nop
pop
dec
jns
ss
jp
int3
ret
mov
or
xor
pop
pop
das
inc
jns
sub
outsb
sarb
sub
xchg
lret
scas
pop
mov
and
cmp
or
inc
jns
add
jl
das
testl
dec
mov
and
add
mov
dec
pusha
and
andb
ret
notl
mov
pop
cli
jp
mov
popf
dec
and
js
das
cltd
jae
xchg
add
pop
inc
dec
and
daa
cmp
mov
test
cmp
int
sbb
mov
sub
dec
jns
das
sub
sub
cmp
mov
out
mov
xchg
icebp
pop
les
in
ret
nop
mov
das
les
ficompl
sub
in
fisttps
pop
ds
aaa
or
pop
fmull
inc
inc
jmp
ds
jmp
jb
or
jg
dec
sbb
mov
pop
mov
add
fs
cmp
popa
aam
clc
mov
mov
fistpll
inc
pusha
jecxz
adc
add
sub
rcl
ja
jge
or
jl
mov
testl
xchg
lock
pop
sbb
pop
sbbb
aaa
jbe
loopne
aas
out
dec
cld
pop
movsl
sub
mov
jb
in
sbb
fbld
mov
cmp
data16
jecxz
aaa
jp
push
cmp
pop
addr16
fistpll
loopne
pushf
mov
pop
jge
icebp
inc
loop
aam
stos
or
nop
mov
loopne
test
or
test
loop
lret
lcall
mov
jg
jge
push
or
cmp
out
fidivrl
call
sbb
inc
add
push
call
fldl
scas
ret
leave
roll
mov
sbb
iret
clc
insl
int
cmp
pop
pushf
in
jnp
pop
cmp
aam
dec
add
adc
lahf
pop
push
imul
out
cli
jmp
lods
jecxz
pop
sub
idivb
adc
mov
mov
pusha
sbb
sub
mov
ljmp
push
test
das
pop
sti
ja
inc
mov
es
push
jne
std
ss
ss
sub
enter
in
mov
mov
sahf
aam
mov
in
mov
lock
and
add
sbb
dec
adc
bound
xchg
or
jns
lahf
pop
add
jg
scas
sahf
push
mov
adc
sub
negb
push
cwtl
jmp
fwait
out
lret
and
cmpsb
jne
shl
out
or
out
or
sub
and
aaa
popf
sti
mov
test
jnp
mov
pop
mov
pop
inc
xchg
aaa
inc
ss
jb
pop
dec
or
lds
or
loope
push
lret
mov
stc
stc
or
arpl
adc
and
into
jl
ret
add
cld
sti
daa
imul
stos
or
dec
push
push
out
or
add
scas
push
pop
pop
jae
xor
adc
lret
adc
cmp
fistl
mov
pop
mov
fnstenv
scas
fdivrs
rorl
push
ja
dec
ss
lods
or
ret
addb
into
es
sti
mov
xchg
pmuludq
sahf
stc
outsb
rcr
js
test
movsb
push
fwait
iret
out
dec
lcall
bound
out
pop
imul
mov
pop
bound
cmp
sub
mov
jnp
andb
pop
andb
aaa
push
into
push
dec
adcl
fnstenv
insl
je
inc
push
add
add
out
ret
loop
subl
inc
xchg
jnp
loope
lcall
or
les
enter
dec
repnz
nop
iret
dec
cmp
ja
scas
gs
xorl
jno
mov
sbb
daa
loop
mov
or
push
inc
dec
xchg
stc
in
xor
leave
pop
hlt
cwtl
pop
push
lods
or
pop
sahf
sub
shll
push
lret
jecxz
dec
scas
mov
push
in
xchg
mov
sbb
popa
pop
push
adc
out
jle
popa
add
int
daa
test
int3
mov
hlt
fsubp
test
scas
add
and
jne,pn
imull
inc
mov
jecxz
iret
fimull
stos
xchg
gs
rol
pop
jae
inc
out
xchg
xchg
and
mov
scas
adc
cmp
decl
push
scas
sbb
stos
bound
gs
jle
push
stos
inc
cmp
outsb
addr16
add
sbb
inc
jno
and
cmp
bound
test
cmpsb
cmpsl
add
loopne
sub
pushf
pop
pop
jmp
xor
mov
dec
mov
mov
dec
inc
xchg
pop
push
dec
jno
dec
sbbl
int3
push
adc
mov
out
cmpsb
xlat
sahf
mov
push
shlb
and
pop
mov
dec
ss
and
sbb
iret
push
jmp
jl
sbb
mov
fucomp
xchg
adc
pop
jle
push
jb
add
leave
aad
add
lcall
pop
jae
sub
or
les
push
adc
xchg
scas
inc
jns
int
ds
cmpsl
idivl
ficomps
inc
fwait
jg
clc
popa
mov
in
rcrb
mov
pushf
jp
jge
sub
rcl
cs
mov
enter
sbb
lret
add
adc
mov
push
inc
sbb
and
mov
leave
cmc
fistpll
adc
out
in
test
lods
jo
mov
adc
stos
mov
data16
xchg
les
das
mov
inc
mov
in
xlat
jmp
cmp
jecxz
mov
mov
lret
insb
in
jae
les
gs
out
pop
add
popa
je
add
mov
js
lcall
xor
mov
insl
push
add
xchg
or
jne
mov
dec
clc
pop
sub
shr
push
nop
mov
xchg
pop
inc
pusha
sub
insl
xchg
xor
xlat
push
int3
fs
dec
jb
lods
pop
jo
pop
and
fnstsw
and
lcall
dec
into
xchg
or
popa
mov
dec
mov
test
push
mov
lea
lods
pop
inc
pop
xchg
mov
fstl
mov
mov
mov
scas
xor
cmp
xor
into
cltd
lret
lahf
rcrl
test
scas
test
or
cmp
mov
push
jecxz
xor
cmp
fldenv
call
jmp
xchg
popa
pop
bound
scas
or
sarl
call
jbe
mov
xchg
add
and
enter
fldenv
call
sub
jbe
push
sti
sub
mov
adc
sub
sbb
pusha
lcall
sti
mov
xchg
pop
jb
xchg
daa
lea
sahf
mov
popa
sub
mov
movsb
xchg
or
push
ljmp
ss
xor
pop
lea
lret
push
inc
adc
jl
clc
loop
mov
repz
dec
inc
xchg
scas
adc
lock
cmp
and
les
addr16
or
lea
scas
jg
sub
pop
out
stos
jo
jge
sub
sub
loopne
repnz
testb
popf
mov
lret
das
bound
lcall
outsb
mov
sub
cmp
push
in
loop
add
jl
mov
xor
enter
pop
sbb
and
jle
push
mov
adc
addr16
push
negb
subb
sahf
sbb
cmc
sahf
ljmp
pop
inc
mov
cmpsb
add
hlt
jg
xlat
loop
mov
mov
call
and
addb
xchg
mov
hlt
sbb
stc
add
loop
xchg
stc
mov
jmp
std
lahf
jb
jno
jo
sarb
push
mov
mov
in
push
pop
mov
xchg
inc
sub
out
insl
repnz
mov
stos
cmpsl
cs
push
out
popa
divl
push
ret
jg
lret
fcmovnbe
in
push
call
or
or
xchg
and
sbb
test
imul
cmpsl
repnz
sbb
cli
test
adc
mov
push
movsb
inc
das
add
std
xor
mov
push
jb
mov
sub
psrad
mov
add
aam
dec
jmp
dec
mov
dec
pop
jg
loope
xor
add
mov
stos
dec
aam
pop
ss
test
stc
icebp
sahf
xor
jno
ficoms
stc
cwtl
scas
xchg
pop
insb
dec
sub
dec
icebp
add
lret
inc
adc
sbb
push
insl
pop
scas
sbb
and
shl
pop
inc
inc
cmp
fstpl
cmc
inc
jns
daa
aam
ds
or
add
aam
int3
ja
pop
xor
icebp
shr
dec
inc
xor
movsl
test
and
jp
push
sti
or
sbb
xchg
arpl
cmc
adc
xor
test
mov
mov
aam
xor
in
fmull
or
sarl
dec
das
test
mov
or
out
add
sbb
sarl
adc
test
je
jno
add
dec
pop
lock
jge
xor
xor
cld
jg
lea
mov
test
das
xor
data16
out
inc
adc
shrb
push
out
pop
push
in
xchg
cli
pop
call
shll
in
dec
mov
xchg
lea
daa
xchg
jbe
leave
cmp
insl
pop
push
leave
push
sti
jg
aam
dec
mov
xchg
dec
xchg
out
mov
jg
push
push
and
lods
fnstsw
mov
mov
inc
xchg
inc
jmp
les
mov
push
in
cmp
ja
outsb
sbb
jne
shlb
dec
push
ret
in
or
xor
mov
or
outsb
sbb
mov
adc
insl
sbb
inc
sbb
mov
rcl
jp
or
inc
jne
and
xchg
fstp
or
pop
mov
inc
xor
mov
fildl
ret
sub
fisttps
jb
jl
cli
jbe
and
insl
sbb
jle
fdiv
push
stc
dec
lock
sbb
pop
pushf
stc
nop
jecxz
push
lock
stos
sbb
xor
insl
aad
fs
inc
mov
inc
or
push
int3
std
pop
das
adc
push
fisubrl
xor
inc
mov
or
xor
adc
or
ror
std
pop
or
pop
dec
jle
jmp
insl
mov
out
jno
nop
mov
pop
dec
andb
jp
pop
mov
rorl
jp
loope
outsl
lea
cwtl
imul
adc
dec
dec
inc
test
pop
mov
lcall
mov
insl
pop
test
aad
xchg
int3
repnz
hlt
or
mov
lock
sbb
ret
hlt
mov
push
push
mov
or
std
mov
jbe
jns
insb
cmp
xchg
stc
xchg
imul
mov
xor
std
mov
fs
or
fbstp
sbb
dec
test
push
or
xor
mov
jo
aad
repz
cli
adc
outsl
push
jo
push
or
mov
push
fisubl
jnp
add
filds
mov
sbb
test
outsl
push
cli
mov
pushf
push
loop
pushf
push
leave
and
mov
dec
push
pop
pop
xchg
pop
mov
int
fmuls
mov
outsl
or
fwait
aad
xchg
or
test
push
lret
pop
out
mov
stos
fstl
push
inc
jo
push
ficompl
push
add
adc
push
ficompl
loope
in
xchg
pop
xchg
push
inc
jmp
aad
clc
push
icebp
imul
das
jo
loopne
jo
and
xchg
cmp
ds
leave
and
and
adc
dec
arpl
mov
adc
out
fmull
mov
fiadds
cmp
and
push
lret
mov
loopne
nop
rcrl
pushw
sub
jo
inc
cmp
lock
int
int
loop
imul
and
push
mov
rorb
xor
xchg
scas
adc
movsl
xchg
lcall
scas
pop
xchg
call
aaa
mov
dec
xchg
dec
adc
cmp
std
mov
dec
adc
dec
adc
dec
mov
sbb
cmp
rcll
add
fwait
pop
lret
test
cmpsb
xchg
pushf
xchg
mov
pop
jp
lea
ja
sub
xchg
xabort
pop
hlt
inc
xchg
lods
xchg
test
int
lret
insb
push
cwtl
dec
xchg
movl
insl
ss
jp
inc
out
mov
mull
and
mov
add
or
adc
xchg
ficoms
lods
into
lods
aam
xor
push
notb
mov
rolb
rolb
pushf
adc
dec
gs
push
xor
jne
dec
adc
mov
mov
add
imul
rol
repnz
xor
rorl
mov
lcall
es
and
xchg
push
dec
addb
andb
sub
adc
rorl
mov
ja
movsl
daa
es
mov
orl
scas
push
es
enter
or
xor
xor
mov
mov
lahf
push
adc
push
xchg
mov
xchg
sub
dec
and
lcall
dec
mov
pop
jge
pop
fistpl
xchg
ja
pushf
daa
popa
or
arpl
outsl
sbb
repnz
test
sbb
sub
push
xchg
xor
lret
lret
push
xchg
pop
lret
inc
bound
push
cmp
adc
xlat
jo
lsl
stos
jnp
je
int3
inc
imul
push
inc
add
std
divb
stos
sub
adc
dec
dec
cmpsb
daa
xchg
cmpsb
mov
sub
fiaddl
xchg
mov
pushf
jns
sbb
mov
jg
pushf
clc
int
adc
jae
add
push
into
push
dec
adc
xor
jl
dec
shll
xchg
stc
pop
xchg
push
inc
lock
adc
push
test
leave
ljmp
into
sub
xor
add
pop
std
jle
sti
mov
add
xchg
scas
pop
test
mov
sbb
xchg
pop
sbb
pop
es
and
add
or
cld
test
les
fstps
ret
repz
mov
mov
mov
mov
addr16
mov
sbb
dec
adc
aaa
les
jp
addr16
pop
push
loopne
loopne
xchg
insb
in
aaa
test
pop
inc
pushf
pop
shlb
push
and
or
push
mov
dec
dec
or
in
mov
sub
ficoms
sbb
test
inc
shrl
dec
jecxz
mov
sub
idivb
sbb
gs
cmpsb
add
mov
xchg
sbb
xor
mov
inc
fsubl
and
in
je
test
mov
push
mov
jmp
repnz
xchg
imul
xor
mov
iret
sub
sbb
xor
call
nop
in
lods
mov
mov
addr16
mov
sbb
movsl
clc
xchg
fcomps
roll
add
jle
fwait
cmc
stc
mov
lods
outsl
xsaveopt
cmp
jecxz
mov
int3
fsts
add
push
mov
jo
ljmp
outsl
cmp
mov
cmpb
lahf
dec
or
out
flds
jns
fcmovu
mov
in
arpl
dec
dec
add
loopne
xor
dec
and
xor
pop
and
mov
movsl
xabort
mov
add
mov
dec
cmp
and
dec
cli
push
adc
sub
xor
ret
mov
sbbl
adc
mov
sbb
mov
mov
repz
mov
fnstsw
stc
in
clc
xor
fsubrp
fwait
ret
clc
add
arpl
mov
test
xchg
movb
mov
stos
out
outsb
imul
out
and
rcrl
loopne
add
arpl
cmc
in
cmp
push
popf
movsl
xchg
cmp
sub
or
add
xchg
shlb
xchg
pop
shrb
stos
dec
add
jge
pop
sbb
fs
sahf
jl
mov
inc
mov
dec
adc
movsl
fs
mulb
icebp
divb
ja
je
je
lret
out
ljmp
hlt
sbb
adc
cld
mov
mov
push
lea
sahf
ss
sub
cmp
call
sub
and
lods
loopne
inc
movsl
sub
dec
aaa
loop
mov
push
aad
lret
adc
xorb
inc
je
lret
loope
mov
pop
shll
pop
pop
or
add
mov
sbb
lods
push
lds
inc
sbb
inc
mov
cmp
sbbl
adc
xor
into
sub
jge
or
cmpsb
aas
sahf
xor
cmp
ja
loope
mov
mov
jb
add
mov
lcall
inc
imulb
adc
mov
or
mov
mov
cmp
xchg
or
and
xchg
fildll
test
cmp
cmp
leave
sub
cmc
lret
adc
jecxz
subb
mov
or
movsl
sub
jge
into
xchg
xchg
int3
or
dec
in
cwtl
pop
daa
or
bound
call
imul
sbb
sub
push
xchg
lea
rclb
leave
mov
into
sub
dec
daa
pusha
fildl
or
push
xchg
mov
inc
push
xchg
jb
mov
insb
cmp
lock
pop
push
jmp
inc
lea
sub
adc
mov
lods
add
sub
adc
sub
mov
insb
jle
cmpsl
insb
dec
dec
pop
or
divb
ret
mov
ja
std
pop
mov
sahf
into
sub
loop
mov
popa
push
mov
mov
push
mov
fidivrs
iret
cmpsl
into
sub
decb
pop
adc
jns
xchg
mov
xor
call
out
ja
bound
jg
pop
nop
imul
inc
pop
cmp
add
scas
dec
cmp
das
dec
into
sbb
xor
decb
jecxz
mov
mov
test
subl
in
xor
cli
and
insl
adc
cmp
stc
xchg
fildl
clc
pop
fs
je
xor
inc
dec
ret
jno
and
test
mov
mov
sub
dec
pop
mov
daa
xchg
mov
pop
or
mov
xchg
xor
xor
insb
ficoms
stc
sbb
or
pop
push
inc
notl
es
aaa
aam
cmp
xchg
mov
rcll
int3
xchg
insb
adc
repnz
inc
pop
test
mov
dec
scas
inc
iret
ja
loope
and
mov
xchg
jns
movsl
mov
mov
push
or
mov
test
sub
adc
ss
aad
xor
adc
mov
fisttps
mov
cmp
cmp
lahf
addr16
movsb
inc
sbb
scas
loope
push
scas
or
sbb
sbb
ret
cmp
ret
leave
and
data16
jmp
shl
xchg
sub
mov
jge
in
jbe
out
mov
mov
into
jmp
jle
mov
leave
add
inc
sub
test
sub
dec
outsb
fimuls
add
dec
popf
and
mov
xchg
jno
ja
mov
jns
inc
arpl
fucomi
ljmp
inc
xor
stos
sub
adc
cli
shrl
jne
push
push
enter
lahf
cld
fcompl
aam
mov
push
mov
xchg
imul
bound
ret
sbb
xchg
and
clc
mov
cli
jmp
inc
push
jge
jne
data16
sahf
pop
pop
int3
xchg
daa
dec
stos
lcall
cmpsb
lahf
sub
mov
sub
mov
js
pop
adc
mov
mov
in
xchg
pop
xchg
stc
xchg
icebp
jecxz
cmp
cmp
and
fisubs
adc
jmp
outsb
mov
insl
popa
push
cmpsl
int
pop
inc
push
adc
call
dec
addr16
mov
mov
rol
js
les
aad
shll
pop
test
dec
dec
push
sub
rcrl
cmp
js
push
lea
jns
data16
lods
shrl
xor
xchg
cmp
std
das
nop
test
sub
mov
inc
and
and
shrl
mov
mov
jns
icebp
or
fadds
and
sbb
leave
pop
mulb
mov
sub
pop
sbb
popa
dec
sbb
adc
adc
stc
xchg
ret
jg
push
in
push
out
movl
add
push
sbb
jbe
sub
jmp
or
or
lock
jmp
jb
jp
xchg
dec
adc
or
hlt
xor
xor
call
adc
sbb
jmp
hlt
adc
and
lods
iret
ror
cltd
nop
xchg
cmp
fisttpll
mov
inc
cmp
sbbb
es
sub
fdivl
and
cmp
cmp
jecxz
jp
insb
and
pop
mov
pop
adc
and
push
aad
or
mov
pop
aas
sub
call
aam
ret
ret
push
push
popa
xlat
adc
or
gs
imul
mov
mov
fldl2e
fldcw
pop
mov
mov
and
mov
mov
dec
jne
mov
sbb
fstl
enter
mov
push
mov
bound
mov
sbb
mov
and
or
ss
call
bound
adc
and
out
cmp
lahf
je
push
movsl
aam
icebp
popf
aas
lret
cmpsb
ds
rcrl
test
rcrl
rcrb
ds
xchg
and
adc
int
fs
stos
iret
repnz
in
mov
pop
mov
jge
rcll
mov
test
rcrb
ds
xchg
and
mov
cmc
sub
pop
mov
sbb
lods
je
sbb
or
out
pop
fisttps
idivl
xor
cmp
bound
mov
imul
or
sub
and
push
lcall
cmp
cwtl
es
out
out
lods
mov
jbe
ret
shlb
dec
mov
pop
sub
pop
xlat
testb
mov
fdivp
cmp
lods
clc
cmp
dec
call
or
data16
fnstcw
and
cmp
idivb
sbb
xchg
cmp
fwait
and
or
aaa
testl
xor
dec
mov
add
cmpsl
xchg
daa
pop
scas
add
fwait
es
mov
in
loop
les
insl
inc
sub
sti
lahf
mov
cmp
roll
movsl
sbb
adc
fists
add
add
cmp
nop
mov
cmp
push
add
rorl
movsl
mov
adc
fists
popf
add
xacquire
out
xor
dec
xchg
cmp
int3
mov
cmc
insl
js
call
je
jmp
loop
mov
mov
jg
gs
out
ds
cmp
mov
pop
ds
push
nop
jge
aam
enter
mov
adc
add
insl
test
push
inc
imul
add
outsb
decl
xchg
fwait
roll
sub
in
push
cs
cmp
fcompl
push
sub
sti
push
dec
movsl
pop
enter
cmp
in
mov
push
popf
or
add
movsl
rorb
adc
loopne
sub
sti
fs
xchg
or
aaa
jg
sahf
test
adc
xor
mov
aaa
lock
stos
jmp
push
repnz
sbb
icebp
mov
cmpsl
pop
inc
hlt
jl
out
inc
fisubrl
xor
jecxz
push
in
sbb
shrl
xchg
in
xor
or
jp
mov
adc
mov
jno
or
sbb
mov
mov
mov
shlb
inc
inc
push
push
add
jb
adc
popa
ja
sti
arpl
jb
repnz
xor
inc
cwtl
enter
lds
mov
test
sub
lea
lahf
ret
sbb
les
dec
test
test
call
call
inc
inc
aad
adc
ja
sub
inc
jge
xchg
jmp
xor
testl
mov
int
push
iret
fcos
fwait
jne
pop
cmpb
sbb
sti
aad
iret
fs
push
outsl
push
push
xor
mov
xchg
clc
repz
xlat
into
inc
cmp
lock
int
xor
outsl
fcomp
dec
loop
ret
push
mov
iret
jl
loopne
loopne
mov
fnstcw
fsubr
mov
sbb
ja
lret
add
in
fidivs
mov
sub
loopne
jno
push
xchg
jae
and
jle
lahf
sbb
repz
lock
fldenv
inc
outsb
inc
inc
add
jne
or
test
mov
add
int3
mov
jl
insb
cmp
add
in
add
pop
ja
push
inc
sub
stos
dec
push
enter
add
ss
dec
mov
inc
or
jl
jno
xor
ljmp
add
push
xchg
fldcw
mov
sbb
xchg
add
mov
aaa
cld
or
inc
stos
add
jne
inc
fs
test
rclb
jae
test
nop
or
roll
dec
and
ret
cmp
mov
movsb
inc
inc
jb
mov
xchg
cltd
ficoms
sub
ds
cmp
add
or
scas
sub
xor
je
test
mov
fs
popa
sbb
mov
dec
jmp
pop
jge
dec
out
or
push
adc
test
mov
xchg
call
mov
inc
xchg
add
and
push
addr16
mov
add
pop
xchg
or
mov
pop
sub
pop
cli
dec
ss
xchg
adc
inc
scas
outsb
jne
ret
sbb
test
repz
jns
pop
cmp
lret
and
or
cmp
mov
mov
xchg
add
stos
jle
inc
sbb
gs
sub
or
mov
pop
sbb
rol
iret
pop
orb
mov
fimull
push
in
sub
jl
cld
mov
and
xchg
push
cltd
mov
and
pushl
shl
mov
rorl
sub
aas
add
sub
loope
cmp
adc
xor
int3
mov
pop
pop
cmp
and
lock
dec
jbe
insb
in
or
inc
adc
mov
sbb
ljmp
add
aam
nop
and
in
int3
xor
or
and
lock
dec
jbe
insb
in
or
inc
adc
mov
popf
rcrl
pop
pop
test
lcall
cwtl
aas
dec
adc
jmp
andb
call
in
mov
enter
stos
adc
daa
setnp
xchg
push
push
mov
dec
dec
xor
rcll
cmpsl
mov
lock
imul
lock
bnd
sahf
dec
sbb
or
pop
lock
and
test
add
les
jmp
cs
and
testb
jmp
aaa
add
mov
mov
inc
test
subb
cmp
push
dec
sti
mov
enter
js
sbb
dec
nop
mov
pop
mov
cmc
jae
xchg
push
int3
cmp
stos
lret
lcall
jae
add
fimuls
fwait
adc
pop
or
xor
mov
lcall
pushf
sahf
jnp
ds
imul
pusha
pop
dec
lock
mov
or
sti
mov
les
sbb
mov
lock
mov
jl
mov
add
jge
imul
pop
mov
scas
cmc
mov
dec
dec
push
pusha
js
cs
and
and
pushf
xchg
mov
stc
add
sub
pop
ja
xchg
nop
lods
loop
sub
mov
mov
cmpxchg
push
loopne
into
pop
mov
test
and
jle
cmpsb
xchg
mov
jo
adc
into
xor
mov
shl
in
fmuls
push
xchg
outsb
or
insl
push
stc
into
lock
dec
add
jnp
push
dec
or
jno
scas
cmp
aad
xchg
mov
mov
pop
aad
inc
jge
pop
cmc
sahf
cmc
inc
or
mov
push
xchg
inc
sbb
addr16
insb
ret
ljmp
dec
pusha
dec
mov
or
ja
fmull
aam
dec
mov
sarl
stc
push
inc
ss
cli
pop
mov
iret
jb
aad
fstl
jl
inc
out
mov
jnp
pop
sti
mov
mov
movsl
sbb
test
xor
fwait
cmp
cmp
jae
push
data16
push
clc
insl
cmp
imul
andb
ret
out
pop
js
dec
push
lret
ja
jecxz
cwtl
xchg
incb
xchg
mov
pop
mov
push
test
dec
adc
pusha
add
and
jmp
mov
in
inc
jle
lds
testb
xor
dec
test
lret
xchg
iret
push
mov
inc
mov
push
es
out
push
xchg
fmulp
mov
mul
decl
les
and
dec
dec
scas
lcall
cmpsl
stc
jae
pusha
loopne
out
jns
fmul
or
ret
jno
leave
ja
cmp
push
rorb
inc
sub
movsl
stos
in
divb
les
push
push
aaa
aam
or
xchg
fidivrs
popa
bound
pop
ret
inc
imul
push
cltd
inc
test
pop
sti
movsl
rcrb
cmp
and
sbb
out
hlt
adc
mov
jp
std
inc
aad
add
cmp
mov
stc
jae
in
fcomp
sti
insb
jmp
imul
leave
and
aas
jns
mov
rcr
in
hlt
popa
mov
pop
push
jns
aaa
and
mov
dec
push
jmp
stc
lods
inc
test
adcl
enter
out
mov
cmp
out
in
call
adcl
mov
add
out
jge
jne
mov
mov
lahf
jo
in
shll
jae
dec
into
std
insl
pop
push
aad
enter
out
sbb
fstl
imul
push
and
fdivrl
in
inc
mov
mov
mov
xchg
lret
mov
lahf
cmp
mov
loop
rcll
ret
int3
inc
out
push
jo
pop
jne
pop
inc
sahf
mov
fwait
int
fcom
dec
and
cs
fidivs
push
jne
std
or
sub
xchg
mov
in
lea
xchg
sub
mov
inc
lahf
xchg
xchg
in
mov
adc
insl
and
sub
cmp
push
cmp
xlat
mov
sbb
je
pop
aam
dec
mov
test
outsb
stos
jge
lds
mov
scas
adcl
mov
or
push
add
or
cmp
sub
push
int3
pop
cmp
es
cmpsb
popa
push
scas
mov
pop
andb
cmpsl
mov
and
push
lods
loop
and
add
lcall
dec
mov
pop
xchg
in
jp
enter
gs
shl
pushf
fidivrs
fwait
push
stc
mov
sbb
and
mov
in
adc
mov
pop
in
or
push
imul
mov
aad
lock
mov
dec
test
sub
faddl
push
lret
add
rcl
out
and
ds
mov
cmp
mov
aam
cmp
fnsave
sub
cli
lcall
xchg
or
xchg
int3
pop
imul
dec
xchg
clc
xchg
jg
push
mov
fldcw
sbb
jp
or
mov
stos
jle
aas
xchg
cltd
lahf
sbb
push
jnp
test
lea
lret
pop
test
loopne
outsl
mov
dec
call
adc
adc
pop
test
scas
or
mov
xor
lsl
pusha
test
into
jmp
notb
andb
xchg
push
jne
mov
cmc
mov
adc
pop
leave
test
cmc
xchg
and
jle
ds
mov
push
int
jg
adc
fadds
push
mov
inc
xchg
and
adc
add
hlt
pushf
inc
sbb
dec
dec
sub
and
mov
xor
inc
pop
cmp
outsl
repnz
outsb
xorl
sbb
cmp
cmp
add
push
sbb
jl
push
dec
pusha
sbb
jmp
pop
aam
in
add
rclb
fidivrs
xchg
int
pop
xchg
cli
pop
adc
pop
cmp
jg
inc
xor
mov
jne
or
stos
sbb
xchg
inc
sub
fs
les
and
push
sub
jno
mov
std
fwait
xor
inc
iret
add
shll
fsubrl
daa
sub
les
and
sbbb
fsubrp
and
pusha
xor
rolb
outsl
sbb
sbbl
push
jle
push
sub
cwtl
lea
mov
dec
xor
jmp
and
cs
xor
movsb
pop
movsb
das
xlat
push
sub
cwtl
or
mov
addr16
pusha
and
xor
xchg
add
outsl
xor
pusha
in
pop
movsb
mov
push
sub
xor
and
call
and
mov
adc
add
sub
sbbl
cli
sbb
pop
sub
cs
jae
inc
sub
xchg
jns
jmp
ljmp
add
adc
mov
ja
scas
or
dec
sbb
addr16
xchg
xor
push
mov
push
icebp
push
xchg
dec
lret
pop
test
push
fwait
mov
pusha
xor
pusha
sub
imul
or
push
add
cmp
repz
shrl
lret
jns
ljmp
pop
fucomi
sbb
lea
clc
dec
icebp
xchg
stos
xchg
mov
das
pop
adc
insl
sub
ljmp
loope
jl
das
out
jbe
loopne
loopne
fsts
mov
mov
aaa
ficomps
lcall
jae
iret
out
dec
insl
addr16
inc
iret
addr16
inc
iret
addr16
inc
iret
addr16
inc
iret
addr16
inc
iret
addr16
inc
iret
addr16
inc
iret
addr16
inc
in
dec
dec
jg
scas
ljmp
sbb
andl
push
sbb
and
js
push
inc
popf
adc
jo
aaa
mov
fbld
lret
mov
enter
js
call
cmc
mov
inc
push
dec
mov
jmp
inc
jle
ret
xor
or
bound
mov
mov
cmp
imul
mov
imull
test
xor
fldcw
sub
xor
pushl
aad
push
enter
inc
cmp
cmpsb
push
movsb
fwait
ret
and
in
jno
sub
daa
mov
lods
push
xor
scas
lods
or
sub
mov
dec
fildll
insl
fs
std
jo
push
dec
jge
repnz
je
cwtl
jae
icebp
xor
nop
xchg
jae
and
fstpt
or
fnstenv
or
vcvtsi2sdl
xchg
lock
jno
sub
out
sub
in
insb
dec
mov
repnz
pop
loop
or
les
inc
int3
addr16
mov
inc
lods
xchg
inc
sbb
pop
clc
out
aaa
dec
arpl
or
loope
out
mov
mov
mov
dec
pop
dec
shll
pop
or
or
jns
lcall
mov
or
xchg
int
adc
icebp
cmp
mov
mov
ja
stos
pop
lahf
pop
aad
pop
cmp
or
movsb
js
cmpsl
mov
mov
fsubrs
sub
sub
mov
les
pop
lds
sub
mov
ret
pop
ljmp
into
pop
idivb
cltd
std
scas
xor
daa
push
push
or
out
cld
dec
call
add
jns
shll
stos
call
cmp
les
movsl
les
xchg
inc
fnsave
int3
pop
aad
add
adc
add
cmpsl
mov
bound
jnp
pusha
dec
pslld
xor
ror
mov
clc
movsb
adc
lcall
imul
fmull
shrl
mov
jg
mov
ss
ret
inc
iret
addr16
and
out
rclb
aas
xchg
or
lods
shll
fs
add
lcall
or
jg
jl
ficoml
aas
sbb
imul
xor
sahf
sbb
xor
addr16
add
adc
out
push
es
iret
jae
inc
out
push
sbb
or
lock
xchg
jne
daa
mov
dec
iret
ret
je
xor
push
or
fildl
inc
pushf
or
ror
add
inc
push
pop
scas
push
loop
sti
mov
ds
or
pop
adc
dec
mov
pop
not
loop
aaa
imul
mov
xor
repnz
cmpsl
sub
ds
sbb
mov
int
push
movsl
dec
xchg
jo
jp
dec
rclb
cmp
xchg
cmpsl
cmp
fiaddl
fstpl
mov
jg
lret
in
jne
jbe
or
loop
jne
insb
rcr
add
jp
or
dec
ljmp
xchg
cmp
imul
repnz
jge
out
inc
aam
dec
sbb
int
imul
ja
jp
add
out
clc
scas
int3
fisubs
xor
add
cli
jp
jo
out
pop
xchg
xchg
leave
pushl
repnz
add
shlb
shll
fistpll
fwait
mov
and
jle
mov
lods
ret
xor
jmp
hlt
popl
mov
mov
movsl
loope
xor
add
adcb
dec
dec
or
fbld
sub
fistl
or
adc
pop
movsb
lds
mov
mov
adc
imul
out
pop
daa
enter
cmpsl
ds
jae
push
adc
bound
cld
xor
into
lea
sbb
addr16
imul
inc
jns
dec
xlat
adc
fdivl
test
out
js
cmp
out
add
sbb
mov
pop
sbb
mov
cmp
add
std
xchg
rorb
mov
lcall
inc
add
mov
idivl
xchg
xchg
mov
mov
hlt
fistps
outsl
mov
adc
mov
mov
sub
andl
sub
mov
xchg
and
ret
and
push
mov
in
addr16
mov
pop
inc
inc
iret
fmull
jno
movsl
inc
xor
dec
lret
add
orb
movsb
push
jmp
mov
dec
jmp
cs
arpl
mov
jo
adc
ret
mov
sbbl
test
outsb
xchg
mov
push
out
jb
ret
test
mov
mov
loopne
leave
pushf
xchg
xor
sti
dec
andl
xor
out
pop
mov
imul
mov
push
jo
fisubrs
inc
sub
cmpsl
imul
inc
mov
mov
cmc
inc
mov
loopne
inc
sub
sub
jg
xor
jne
leave
sbbb
push
add
mov
das
imul
das
in
pushf
push
pop
dec
cmpsl
inc
iret
addr16
nop
popf
inc
cmp
jl
aam
jmp
loopne
add
mov
cmp
push
jge
push
es
out
push
sti
mov
outsl
xchg
mov
iret
addr16
mov
cli
ret
push
into
test
dec
int
inc
inc
xlat
sti
pop
popf
adc
insb
cmp
push
sub
pop
xchg
test
pusha
sub
mov
hlt
outsl
scas
xor
icebp
add
inc
data16
push
pop
push
sbb
jb
cmp
dec
cmp
mov
cwtl
bound
mov
ja
or
js
add
push
scas
jno
push
xchg
insb
imul
cwtl
adc
shl
xor
push
xchg
stos
les
and
std
cmpsl
insl
mov
or
cmp
adc
xor
out
jmp
in
arpl
mov
repnz
sbb
mov
cmp
movsb
daa
test
inc
outsl
data16
mov
test
or
adc
imul
mov
jno
push
mov
pushf
icebp
ret
shl
clc
add
mov
data16
push
cmovno
sub
dec
or
or
mov
dec
mov
or
mov
ret
or
js
popa
mov
fcomps
mov
loopne
ds
fs
and
mov
pop
add
sub
js
xchg
dec
popa
cltd
frstor
gs
test
adc
jg
adc
xchg
cli
inc
cmp
fcoml
xchg
ljmp
jge
cmpsl
call
jecxz
stos
jecxz
bound
or
push
int
and
and
bound
or
lods
std
das
pop
sub
or
push
jnp
jmp
ss
andb
addl
iret
and
add
outsl
push
pop
sub
fs
iret
dec
addl
jns
and
jle
std
loope
adc
dec
cmp
jno
jne
test
pop
inc
aam
mov
or
inc
rcrl
ljmp
jp
adcl
mov
popa
popf
push
xchg
testb
pop
or
mov
jg
mov
and
inc
out
dec
xchg
and
pop
ret
push
xor
loopne
push
xchg
sbbb
or
mov
into
loopne
call
and
inc
xchg
cmp
xchg
mov
idivb
push
jne
daa
ljmp
mov
mov
dec
aaa
vmovhps
mov
add
lock
dec
add
leave
mov
sbb
cmp
enter
enter
arpl
push
sbb
aaa
push
aas
jb
jg
das
scas
cmpsl
je
inc
pop
or
dec
cltd
mov
out
inc
inc
lahf
mov
adc
mov
mov
or
sub
out
cmp
pop
pushf
call
out
pop
call
mov
inc
popa
mov
mov
lea
out
test
frstor
sahf
pop
add
mov
ret
or
xchg
movsl
insl
jno
inc
sub
int
xchg
ljmp
movsl
test
lcall
xorb
syscall
cmp
mov
jbe
hlt
test
aad
sbb
loopne
test
lcall
mov
add
add
cmp
pop
jg
lahf
fwait
xchg
imul
call
int
daa
imul
repnz
cld
lds
jmp
pop
out
mov
repz
arpl
or
sbb
push
dec
ffree
into
cmp
dec
das
mov
sti
or
xor
jl
xlat
or
and
das
int
imul
in
arpl
push
cmp
inc
or
xchg
inc
and
repnz
push
xchg
das
cmp
andb
or
xor
cld
mov
cmp
out
dec
jecxz
std
dec
in
mov
mov
sub
dec
dec
rcll
aam
das
adc
stos
push
mov
loopne
xchg
mov
int
es
sub
roll
aam
das
adc
stos
push
mov
loopne
shrb
addr16
iret
ljmp
fmul
inc
add
loopne
pop
pop
push
pusha
push
or
xor
inc
cmpsb
and
ds
adc
or
mov
es
int3
add
mov
mov
repz
add
mov
pop
lahf
or
or
mov
decb
lahf
xchg
jp
lock
xor
xchg
push
and
mov
rorl
sbb
aad
lahf
lret
bound
add
das
cwtl
dec
pop
scas
dec
or
fs
sub
adc
stc
ljmp
rcrb
adc
rol
hlt
aas
sbb
popf
add
xor
push
add
cmp
inc
mov
xor
xor
pop
hlt
cwtl
mov
fcompl
out
imul
in
insb
in
jae
into
stos
loopne
hlt
cwtl
push
dec
lret
jecxz
xor
mov
pop
jb
jmp
xor
mov
repnz
stos
sbb
outsl
sbb
or
sbbb
cld
push
scas
lahf
pusha
lahf
aas
rcrb
nop
push
movb
rorl
fcoml
dec
inc
int
leave
and
and
cwtl
ret
movsb
pop
sbb
stos
add
cli
ret
fwait
je
mov
out
je
add
cmp
jg
mov
mov
repnz
cmp
aad
sti
push
arpl
mov
lret
and
cmp
mov
pop
in
pop
decb
pxor
jl
and
xor
hlt
cwtl
mov
repnz
jae,pn
mov
or
cmpsl
into
add
dec
push
adc
mov
mov
pop
in
stos
ja
roll
jmp
ss
je
mov
and
xor
inc
adc
mov
ljmp
inc
inc
aaa
cs
int
sub
dec
or
cld
dec
std
out
mov
pop
or
icebp
pushf
jno
test
int
dec
pminsw
push
int3
rcrb
cwtl
insb
inc
cld
pop
popa
arpl
test
aam
int
mov
sub
ljmp
aad
add
out
dec
sub
in
mov
movsb
xchg
rorl
and
add
jge
js
mov
xchg
mov
scas
loope
sahf
pop
stos
jno
movb
test
cs
shlb
add
addr16
inc
test
jmp
or
jb
mov
dec
xor
scas
jecxz
dec
mov
push
inc
add
cwtl
out
dec
fwait
dec
out
dec
pop
incb
xor
call
out
cmp
sbb
inc
bound
cs
pusha
out
dec
cmp
mov
cmp
jl
sbb
pop
push
mov
or
sahf
test
adc
lret
or
mov
icebp
sub
mov
dec
add
push
jbe
hlt
cld
xor
imul
test
xchg
sbb
jo
aas
push
xor
mov
fisubrl
add
or
jge
lods
jno
pop
mov
sbb
and
gs
test
mov
inc
ljmp
les
lahf
das
je
mov
pop
or
iret
jo
rclb
xor
mov
dec
dec
pop
dec
inc
mov
pop
add
fidivrl
fmulp
outsl
fidivl
test
rclb
scas
test
aam
notl
mov
pop
or
in
hlt
cwtl
mov
sbb
xchg
in
ficompl
mov
pop
xlat
lea
icebp
ja
mov
lods
xchg
clc
in
ffree
sbb
mov
pop
or
mov
lods
sbb
out
ficompl
outsb
jecxz
pushf
mov
jo
push
xchg
adc
cltd
in
int3
xchg
pushf
mov
stos
jno
sbb
pusha
or
or
imul
cwtl
sbb
sbb
jge
lods
jno
sub
xchg
and
call
and
clc
mov
push
out
imul
adc
xchg
fistps
jl
mov
jnp
out
xlat
cmp
and
inc
sbb
xorl
jp
nop
outsl
and
jmp
and
lea
mov
int
push
enter
imul
xlat
pushf
movsb
sbb
xor
outsl
lcall
ds
jae
ljmp
push
aas
ja
xor
call
or
or
dec
lea
int
pushf
popf
popf
xor
sub
push
push
movsb
stc
adc
xor
push
movsb
shr
adc
jnp
pushf
cmpl
cmp
out
scas
lret
fdivs
loopne
xchg
cmp
outsb
lcall
xchg
xchg
test
and
or
mov
ret
mov
xchg
xchg
or
dec
mulb
mov
outsb
lcall
xchg
xchg
imul
mov
loopne
ret
into
stc
cmp
cmp
addr16
sub
das
mov
outsb
lcall
inc
jecxz
sub
mov
ret
sar
cmp
cmp
ret
pop
loopne
outsb
lcall
inc
jecxz
jmp
scas
inc
or
enter
loopne
ret
stc
add
cmp
dec
lcall
das
mov
cmp
out
enter
loopne
outsb
lcall
inc
jecxz
test
nop
pop
sub
xchg
stc
or
andl
das
xchg
shll
pop
loopne
ret
ljmp
cmp
push
mulb
shrb
and
xchg
or
sbb
out
add
or
das
or
imul
jp
pushf
rcrl
and
or
inc
xor
outsl
out
or
inc
cmp
divps
pop
loopne
outsb
lcall
inc
jecxz
imul
cmp
das
or
ret
loopne
cmp
cmp
inc
out
scas
or
mov
loopne
outsb
lcall
mov
cmp
leave
std
or
scas
add
loopne
les
and
or
das
jl
or
rolb
mov
enter
loopne
ret
inc
cs
mov
decb
mov
sub
mov
outsb
lcall
mov
cmp
nop
or
iret
test
sub
jbe
or
or
ret
cli
cli
cmp
cmp
pop
or
adc
mov
or
xchg
pop
lods
xor
in
or
xchg
bound
pop
mov
xor
nop
lea
or
sub
cmp
or
stc
mov
loopne
outsb
lcall
mov
cmp
aaa
fisttpl
blcfill
and
or
mov
xchg
cmp
pop
xchg
xchg
int
mov
sub
popa
add
dec
fdivs
loopne
push
mov
jp
fiadds
xor
loopne
add
addr16
lcall
test
fdivs
loopne
xchg
cmp
or
add
aad
dec
mov
inc
jp
daa
mov
xchg
das
lods
popa
sbb
inc
or
xchg
push
xchg
imull
dec
xchg
add
pop
fdivrl
pop
xor
test
arpl
les
mov
outsl
dec
or
jno
iret
mov
loopne
jb
out
xlat
fildll
imul
mov
inc
ret
fildll
leave
or
inc
cmpsb
adc
pop
loopne
int3
inc
sahf
cli
mov
dec
sub
fiadds
pop
loopne
fscale
fwait
add
push
negl
pop
loopne
xchg
fdiv
flds
adc
cmpsb
fcoms
data16
dec
sbbl
adc
cwtl
popaw
test
xchg
es
pop
loopne
mov
dec
test
fld1
cwtl
data16
xchg
push
test
fs
mov
loopne
inc
cwtl
faddp
fildll
or
out
xchg
pushf
mov
loopne
adc
cwtl
and
in
dec
imul
mov
popf
test
in
cmc
dec
leave
xchg
jle
stos
cmp
pop
loopne
xchg
aaa
stc
scas
gs
sub
pop
loopne
movsl
jns
push
xchg
mov
and
daa
mov
ds
dec
jmp
inc
pop
loopne
mov
xor
dec
mov
mov
push
ss
mul
xor
test
inc
pop
loopne
mov
in
dec
or
stc
inc
inc
fld
fdivs
loopne
add
jp
jo
imul
mov
loopne
adc
inc
xor
push
fwait
inc
cld
jnp
inc
adc
add
pop
loopne
cmp
neg
xchg
sub
daa
pusha
out
sub
loopne
rcl
inc
push
mov
or
decb
packuswb
add
or
sub
or
jmp
aas
pusha
dec
dec
mov
fstpl
leavew
rclb
jecxz
test
or
dec
xor
out
shr
daa
xchg
or
ja
aas
loopne
push
rcrl
mov
iret
push
pop
daa
loopne
add
iret
mov
or
jno
addr16
push
cmpsl
xor
gs
adc
dec
daa
adc
fstp
jp
int3
jg
fldt
jp
mov
gs
shll
jb
xchg
jp
jg
jp
mov
jp
repnz
jp
dec
int3
jp
mov
xchg
jp
cmp
int
xchg
gs
fwait
in
jp
add
mov
gs
sti
scas
gs
jne
add
arpl
jae
in
mov
in
jbe
sub
jle
das
pop
jge
mov
sbb
das
mov
aam
rclb
comiss
or
add
inc
pop
push
jp
mov
sahf
cmpsl
inc
sarb
shrb
inc
fisubrs
mov
movsb
ret
add
clc
jbe
leave
fbstp
daa
mov
rorl
cmp
aad
daa
inc
pop
sub
sbbb
movaps
daa
add
mov
ror
inc
cmp
adc
in
ss
loopne
jb
pop
or
pop
jg
jns
aad
test
pop
sub
fnstsw
pusha
fldcw
inc
xchg
pusha
lcall
pusha
lcall
dec
push
xor
shll
or
and
iret
cs
or
lods
rorb
psrad
or
and
das
cmp
or
enter
movsb
aad
and
or
stos
sub
cvttps2pi
or
add
es
imul
jp
xlat
fisttpll
das
xorb
aam
or
sub
dec
push
adc
in
jno
aam
unpcklps
or
pop
test
int
xor
int
push
shl
cmp
mov
nop
je
cmp
je
add
nop
xor
fidivl
out
bound
mov
ja
aaa
inc
js
xlat
iret
dec
push
stc
inc
push
dec
dec
stc
cmpsb
ja
into
push
out
inc
sub
dec
jmp
loope
repnz
cmpsl
xchg
add
cmpsb
ja
fbld
dec
pop
xchg
sbb
test
sti
outsb
push
int
mov
or
xor
cmp
mov
int
in
mov
adc
adc
sub
push
jl
push
or
dec
push
push
dec
adc
adc
cmp
sbb
xchg
adc
or
cmp
sbb
fildll
fmul
lea
in
lea
in
xchg
into
or
lcall
jb
enter
fstl
sbb
adc
jb
cmp
push
insl
mov
sbb
out
hlt
test
sub
aas
sbb
cltd
ja
push
repnz
mov
mov
pop
das
or
cmp
or
fwait
xchg
sbb
xchg
andl
mov
xor
addl
in
lahf
idivl
jge
cwtl
imul
xor
aas
cltd
jle
aaa
mov
adcl
push
xor
leave
sbb
lret
or
into
in
lahf
idivl
cwtl
idivl
pusha
aaa
inc
outsb
mov
push
mov
stc
push
cmp
arpl
and
lret
mov
or
sbbl
es
test
addb
fcmovb
mov
xorb
sbb
mov
push
cmp
int3
in
lahf
idivl
add
enter
insb
mov
in
and
mov
jmp
mov
stc
inc
dec
mov
pop
mov
sahf
or
insb
ds
repz
daa
loope
cltd
out
xchg
sbb
cltd
out
mov
add
rcll
jle
es
push
or
add
es
fsubrl
roll
sub
jne
sub
cmp
sub
mov
or
and
jb
andl
mov
pusha
sub
shll
inc
and
push
repnz
mov
push
repnz
jae
mov
movlps
sub
push
mov
push
sarl
repz
adc
repz
adc
push
arpl
btr
adc
repz
in
popf
stc
test
leave
lea
rol
lds
loop
pop
shlb
in
lahf
idivl
or
push
jns
and
pushf
aad
mov
decb
sub
xchg
frstor
mov
es
inc
fcmovnbe
fsub
pop
jno
popa
xor
fldl
xlat
fsubl
adc
popa
dec
dec
shlb
xor
test
push
jb
dec
fimull
ljmp
pushf
ret
lds
xchg
xor
test
push
jb
pop
adcb
sar
scas
jecxz
shrb
inc
sub
test
cmp
push
insl
or
mov
mov
or
cmp
ss
insl
jmp
dec
add
add
add
inc
or
faddl
jno
and
inc
fildl
addl
mov
push
fsubl
cmp
and
es
out
push
jmp
test
test
out
push
pushf
call
sub
and
add
pop
lods
ss
fstl
sub
xchg
push
or
push
popf
push
sub
imul
dec
pop
out
sub
int3
inc
sub
adc
shlb
in
inc
leave
faddl
xor
sub
jbe
sub
add
sub
jecxz
lods
adc
or
push
sbb
icebp
and
mov
sbb
shlb
fsts
lods
and
lock
sbb
imul
rorb
and
jo
lds
lahf
mov
fidivrs
push
aas
sbb
jnp
lahf
and
aas
dec
popl
mov
fdivs
nop
sub
fcoms
fcoml
sbb
rcl
fdivs
xor
test
push
jb
cmp
subb
stc
xor
test
push
jb
or
jno
and
insl
jmp
lea
insl
leave
sub
jns,pt
test
mov
xchg
xor
sub
jb
notb
cli
scas
add
ds
sub
xor
test
push
jb
push
inc
inc
add
jno
arpl
ds
leave
jl
fcmovnb
pop
xor
test
push
jb
xchg
fidivrl
xor
insl
mov
outsb
imul
sub
sbb
insb
sub
inc
mov
dec
mov
fldl
ljmp
inc
lret
xor
ss
insb
dec
sub
insb
jmp
arpl
push
int
xchg
push
lods
and
xchg
push
in
into
int
in
push
sti
daa
or
xchg
push
lea
sub
shr
and
add
faddl
mov
and
sub
rclb
sub
add
sub
pslld
sub
rcrb
jns
push
lods
jecxz
jl
xor
and
mov
push
sbb
and
test
push
jb
sbb
cli
scas
mov
std
dec
insl
mov
fsubl
mov
sub
loop
bound
cli
scas
adcl
or
sub
pop
sub
pop
push
jb
adc
xor
sbb
scas
jecxz
dec
insb
or
movsb
fldl
les
sub
in
jmp
loop
scas
ret
loop
insl
jmp
add
test
push
jb
inc
adc
add
and
aas
insl
imul
push
jb
adc
in
out
adc
leave
mov
scas
fldl
les
sub
pop
shlb
loopne
xor
mov
fldl
xor
test
push
jb
xor
cli
scas
inc
inc
adc
push
lret
fadd
xchg
cwtl
xchg
mov
sub
or
cmpsb
loope
push
movsl
mov
stc
xor
test
push
jb
stos
aam
inc
in
cli
scas
subl
insl
dec
adc
test
push
jb
mov
jl
xor
movsl
jecxz
dec
mov
push
jb
test
lods
stos
jmp
ret
pushf
fildll
dec
mov
xor
test
push
jb
mov
hlt
mov
test
push
jb
lret
mov
dec
scas
add
mov
les
sub
outsb
fcomps
arpl
xlat
fsubl
xchg
frstor
cmc
xchg
fucom
ficoml
frstor
add
shll
faddl
cmpsl
add
inc
cmpsl
add
loope
js
cmpsb
pop
shll
rol
ss
xchg
aaa
andb
mov
int
shll
data16
xchg
pop
xor
jne
aaa
out
js
push
sahf
shlb
out
lds
push
cmc
lds
cmpsb
xchg
ss
ss
shlb
mov
xchg
int
inc
add
ja
push
xor
cmpsb
pop
ja
arpl
insl
dec
into
arpl
jmp
es
push
insl
leave
jnp
insl
jmp
lods
ss
inc
inc
insl
leave
daa
js
push
loop
aaa
cmpsb
mov
fldcw
aad
imul
out
aaa
inc
inc
xor
inc
dec
aas
fsubl
ret
inc
or
loope
inc
fildl
outsl
mov
test
faddl
pop
inc
pop
scas
fucom
mov
push
frstor
mov
frstor
xor
frstor
mov
scas
inc
fdivrs
fsub
lcall
mov
repz
frstor
inc
faddl
and
or
add
xor
mov
mov
popa
push
add
mov
mov
fsubl
lahf
leave
fsubl
or
and
add
fucom
lret
add
add
loope
aas
faddl
aas
aas
fsubl
movsl
add
inc
jne
mov
sub
mov
xchg
lret
stos
cs
xchg
xchg
nop
es
xchg
out
jo
push
in
jo
cmpsb
sub
xchg
push
adc
cmpsb
sbb
xchg
sub
xchg
cmpsb
mov
xchg
xchg
nop
pushaw
std
aaa
cmp
nop
push
nop
mov
js
xchg
data16
xchg
xchg
xchg
es
xchg
inc
test
nop
cmpsb
in
xchg
nop
mov
nop
sbb
xor
mov
aaa
cmp
repz
mov
or
cs
push
xchg
lret
jnp
addr16
nop
inc
fsubrl
std
data16
es
pushf
xchg
xchg
xchg
insw
cwtl
nop
or
xchg
or
cltd
ficomps
ds
enter
arpl
push
les
outsl
push
dec
js
cmp
das
int
js
add
js
jbe
js
popl
iret
xchg
and
repnz
cltd
mov
popw
adc
mov
aaa
cmp
repz
mov
adc
addr16
into
add
js
out
js
ja
js
loope
and
popf
and
and
xchg
jns
mov
pushf
jns
inc
adc
sbb
cmp
repz
scas
mov
test
cmpsb
and
outsb
cltd
and
dec
js
in
dec
js
push
cmp
inc
dec
js
pop
inc
js
leave
inc
js
lahf
sub
outsb
jge
js
adc
cmp
mov
js
orb
out
fwait
xchg
and
sbb
gs
cmp
repz
xor
mov
dec
js
xor
ds
shrl
call
and
sahf
and
xor
ds
pusha
mov
enter
dec
add
js
xor
xrelease
call
outsl
lea
das
pop
add
dec
mov
adc
fimuls
out
sub
pop
mov
mov
rol
cmp
imul
cmp
or
sahf
adc
sti
clc
in
sub
pop
mov
orl
xor
jbe
das
and
mov
aaa
xchg
aad
add
movsb
adc
jne
psadbw
sub
pop
mov
lods
pop
adc
insl
cmp
ret
jmp
ss
mov
add
stos
or
cmp
and
mov
aad
stc
cmp
or
sub
pop
mov
fldt
out
int
movsb
xchg
mov
add
pop
jmp
ss
mov
or
mov
icebp
shlb
scas
neg
pop
jmp
ss
mov
enter
insl
cmp
repz
jno
xor
dec
push
ss
gs
stc
and
das
jmp
adc
ss
mov
mov
mov
adc
xor
sbb
ss
mov
outsl
and
movsb
adc
fucomi
nop
sub
iret
bound
out
inc
mov
pop
jmp
ss
mov
lods
popa
adc
scas
jno
jl
das
out
add
scas
scas
out
sub
pop
mov
sbb
scas
push
pop
fmul
sub
iret
outsb
push
fmul
push
aas
pop
sahf
cmc
in
sub
pop
mov
sub
movsb
mov
pop
fmull
cpuid
stos
or
sub
pop
mov
xchg
data16
mov
psadbw
sub
pop
mov
outsb
aas
movsl
jmp
push
sub
pop
mov
setae
rol
fmull
clc
in
sub
pop
mov
cmpsb
dec
hlt
dec
lock
aas
inc
sbb
cmp
lock
call
cltd
sbb
lahf
cltd
pop
sti
adc
in
cmp
scas
mov
shll
push
lea
js
sbb
xor
leave
in
cmp
scas
mov
push
iret
pop
sub
pop
pusha
outsb
mov
pop
xor
scas
mov
cmpsb
rcr
lods
add
cs
pop
lock
fsubrs
insl
cmp
cmp
out
xchg
mov
out
scas
mov
adc
cmp
sub
gs
mov
sbb
ret
jl
lret
out
scas
mov
jbe
out
and
mov
xor
mov
lea
shl
ret
jbe
xchg
cmp
in
xchg
cld
push
into
frstor
xchg
leave
in
cmp
scas
mov
sbb
jmp
add
xor
test
pop
ret
test
fwait
mov
jp
cmp
addr16
inc
xor
test
jmp
leave
in
cmp
scas
mov
aad
push
jmp
pop
cmc
sbb
out
scas
mov
fldcw
testl
xlat
test
or
in
jl
sbb
popa
xchg
leave
in
cmp
scas
mov
leave
sub
push
cmp
test
cmp
scas
mov
aam
aaa
shr
outsb
enter
xchg
leave
in
cmp
scas
mov
pop
orb
gs
jae
in
sbb
in
cmp
scas
mov
dec
les
lcall
in
cmp
jecxz
popa
rcrb
add
aas
fldl
fwait
rcrb
cmp
scas
mov
cmp
sub
add
repnz
mov
jle
sbb
ss
xchg
leave
in
cmp
scas
mov
inc
mov
push
adc
cld
fnstcw
cmp
scas
mov
xchg
dec
jns
sbb
gs
daa
loopne
inc
test
in
cmp
scas
mov
pop
cmp
gs
adc
sbb
in
cmp
scas
mov
mov
add
mov
frstor
out
scas
mov
in
andl
cmp
scas
mov
and
mov
and
cli
cli
xchg
leave
in
cmp
scas
mov
adc
mov
jecxz,pt
pushf
xorb
pop
cmpsl
leave
in
cmp
scas
mov
jmp
add
ss
loop
sbb
in
cmp
scas
mov
cmp
incl
gs
insb
stc
cltd
cmp
test
in
cmp
scas
mov
pop
push
divl
mov
fcom
cli
xchg
leave
in
cmp
scas
mov
jge
mov
leave
add
fcmovne
fucom
jns
in
cmp
scas
mov
pop
adc
mov
or
mov
cmp
scas
mov
xor
add
enter
lret
in
cmp
scas
mov
cltd
shl
out
add
es
sbb
xchg
leave
in
cmp
scas
mov
out
lahf
fbld
adc
push
in
cmp
scas
mov
cmc
jle
xchg
les
mov
mov
cmpsl
leave
in
cmp
scas
mov
cltd
inc
mov
lds
gs
mov
cmp
out
scas
mov
fadd
icebp
cmc
add
inc
pop
lahf
cmp
inc
xor
out
scas
mov
out
adc
leave
and
gs
adc
cmp
scas
mov
mov
pcmpgtw
sub
out
mov
inc
lcall
in
cmp
scas
mov
and
stos
adcb
outsb
test
inc
pop
jnp
inc
jp
fldl
loopne
inc
sbb
inc
xor
mov
leave
in
cmp
scas
mov
mov
mov
mov
cs
cwtl
movsl
dec
insl
inc
jle
ds
or
jnp
scas
daa
mov
ds
inc
dec
and
and
pop
lret
movsb
rorl
pop
xchg
or
push
mov
outsl
test
dec
mov
daa
xor
ljmp
movsl
imul
insl
and
jnp
shlb
mov
xchg
lret
sub
aad
icebp
scas
mov
fmulp
shlb
push
mov
js
pushf
xor
mov
imul
lds
mov
dec
dec
mov
jae
and
mov
sbb
imul
and
loope
adc
lods
xchg
dec
insl
xor
push
icebp
xchg
xchg
scas
push
sub
pop
xchg
ficomps
cwtl
inc
mov
xchg
out
iret
in
or
xor
and
push
dec
lret
add
push
pop
dec
xor
ret
aad
add
stos
clc
add
mov
lcall
addb
or
push
pop
dec
stos
sub
lods
les
in
mov
lret
or
ror
adc
clc
jo
vmovlps
inc
stc
stos
and
inc
xor
xchg
notl
inc
or
fbld
jge
or
mov
rorb
leave
pop
cwtl
imull
adc
push
dec
insl
dec
mov
cltd
and
cld
mov
shll
and
sahf
jl
xchg
movsb
lods
jg
mov
xchg
mov
shll
es
mov
ficomps
fucom
push
cmp
add
push
shlb
pushf
loope
and
adc
or
sbb
inc
ret
fs
mov
mov
mov
outsb
adc
pusha
sar
pop
sub
sbb
clc
adc
and
cli
js
imul
rcr
imul
push
fucomip
call
ds
enter
lods
popa
popa
xor
xor
adc
test
cld
cmp
add
pop
inc
aad
popl
jns
popa
movsl
sbb
mov
mov
sbb
lahf
adc
popa
call
es
imul
fcmovbe
dec
out
pop
std
je
je
push
incl
push
sub
jno
cmp
in
xor
xchg
test
movb
xchg
iret
daa
aas
jge
sbb
xor
in
lcall
pop
sarb
sbb
loop
fcomi
inc
sbb
cwtl
outsb
inc
and
xor
sbbb
xchg
cmpsb
sbb
rorl
popf
xchg
pushf
cmp
mov
lret
add
nop
outsb
xchg
jb
sbb
dec
xchg
cmpsb
mov
pop
pop
jle
push
das
js
shrl
push
lcall
imul
jmp
add
jge
fdivs
popf
lods
add
and
es
out
pop
push
push
insl
or
and
pop
xor
rorl
test
adc
add
push
lods
insl
xchg
daa
and
pop
dec
adc
jecxz
xor
pop
repz
hlt
cmp
xchg
loopne
pop
lods
jl
test
sub
push
stc
fisubrs
push
test
adc
mov
dec
inc
cmp
jmp
loopne
jg
adc
jb
dec
or
and
push
or
test
cmp
aam
aam
outsl
fsubrp
mov
or
dec
jg
lods
pop
hlt
pop
push
rcl
aas
lret
adc
lds
cmp
repnz
mov
sti
int
lods
mulb
sbb
xlat
scas
xchg
mov
test
push
push
insb
cmc
xlat
sub
movsl
jmp
inc
adc
imul
cmp
sub
sbb
fstpl
je
adc
lahf
sub
add
adc
push
das
popa
dec
push
clc
adc
jns
stos
movsl
fisttpl
fldt
xchg
mov
cmp
pushf
cmp
ljmp
mov
cmp
cmp
jo
and
pop
push
jmp
and
mov
ds
sbb
cmpb
push
lds
jns
sbb
push
test
and
mov
sbb
dec
test
xchg
jnp
add
jnp
pop
add
adc
lods
cmpsb
jge
mov
push
or
add
jbe
inc
std
xchg
movsb
nop
sbb
jns
inc
push
mov
or
shrb
paddq
sti
insl
push
cmp
push
sub
mov
add
pusha
jl
mov
mov
push
inc
jns
and
push
cmp
ja
xchg
lea
lods
fldcw
std
push
xor
sub
dec
xchg
mov
cli
add
push
int3
inc
mov
into
inc
or
pop
jg
js,pt
mov
adc
jb
loopne
push
or
nop
int
into
and
in
pop
sahf
push
into
sahf
jo
xchg
mov
jns
loop
xor
adc
xchg
jecxz
icebp
pop
add
xor
in
hlt
clc
and
pop
inc
test
mov
dec
sbb
inc
std
push
shll
hlt
mov
jmp
cltd
xchg
pop
cltd
dec
push
sbb
adc
popf
xchg
test
adc
cmp
jmp
mov
mov
sahf
add
xchg
cli
in
adc
scas
jmp
cmpsl
decb
mov
xchg
jg
xlat
xorl
cmpl
push
mov
cli
mov
aaa
cmc
dec
lock
fdivs
cwtl
cwtl
loope
ret
xor
icebp
xor
adc
xchg
mov
inc
mov
mov
pusha
sbb
fs
mov
xchg
cmpsb
mov
mov
int
push
lret
gs
sub
cmp
mov
add
fcomi
loop
mov
adc
andb
push
pusha
push
sti
in
adc
mov
imul
push
je
jle
mov
out
pop
push
fst
enter
dec
sub
xchg
cmc
call
dec
mov
mov
mov
test
inc
ds
rcr
xor
inc
rorl
inc
gs
test
scas
or
inc
inc
or
pop
popl
popa
sbb
adc
daa
test
mov
mov
imul
xchg
rcrl
jecxz
icebp
into
nop
mov
pop
popl
dec
jmp
and
stc
orl
fidivrl
jne
xlat
pop
clc
cmp
sbb
xchg
lock
jnp
adc
push
adc
nopl
xchg
jbe
ret
push
inc
adc
jmp
es
sub
out
iret
aas
mov
in
xchg
jb
fs
add
and
inc
adc
hlt
cmc
xchg
xchg
ret
idivb
jnp
dec
cli
inc
lret
add
inc
push
lret
scas
xchg
sarb
pop
jns
add
xchg
dec
insb
mov
clc
sbb
aam
xchg
dec
movsb
cmp
push
cmp
mov
mov
inc
outsb
std
addr16
dec
pop
pop
sbb
pop
ljmp
jne
mov
push
js
dec
or
sub
fimull
outsb
mov
or
pop
data16
sbb
cmp
xchg
jmp
enter
aas
fistl
sahf
dec
xor
inc
cwtl
jecxz
outsl
das
fildl
or
jnp
and
nop
xchg
ffreep
cmp
push
mov
jns
sub
ds
cmpsl
and
and
add
cmc
pop
hlt
mov
push
and
sbb
mov
xchg
add
sub
stc
push
cmp
daa
mov
movsl
xchg
xchg
pop
in
and
mov
incl
icebp
jg
cmpsb
pusha
xchg
in
mov
loop
jb
pop
gs
xchg
data16
aas
pop
xchg
and
outsb
js
imul
int3
pop
mov
jo
call
xchg
out
sbb
jnp
and
xchg
iret
fisubrl
subl
inc
jecxz
test
dec
les
adc
rorl
lret
ror
cltd
sub
xlat
xor
aas
pop
insl
in
mov
shrb
mov
mov
rep
stos
or
mov
fistps
cmp
and
add
mov
enter
inc
xchg
jg
sahf
push
cmp
imul
scas
jns
inc
xor
sub
testl
out
or
xlat
arpl
push
pop
mull
xchg
repz
subb
loope
inc
leave
or
ret
push
sub
push
add
mov
or
sbb
jmp
daa
hlt
es
icebp
adc
ret
adc
push
xor
cli
ret
aas
idivl
in
add
pop
aad
mov
rcl
or
and
out
xchg
xor
mov
fmul
into
lods
or
dec
push
in
fldt
divps
enter
shl
hlt
pop
jmp
pop
xchg
inc
jo
daa
ret
idiv
pop
cmp
dec
sbb
or
sbb
iret
je
in
dec
mov
push
inc
aam
data16
xor
fsubrs
dec
dec
nop
adc
mov
push
pop
call
pop
bound
scas
mov
cs
xor
hlt
sbb
add
sub
pop
stos
or
add
loope
fmuls
leave
sub
popa
dec
int3
outsl
xchg
push
push
jb
or
frstor
add
sub
pop
push
adc
mov
mov
inc
je
or
jae
test
dec
sbb
leave
fs
negb
fldenv
sbb
lods
sub
sar
cmp
push
shrl
out
add
pop
adc
and
xchg
xor
pop
or
movsb
adc
ffree
ljmp
push
or
and
std
notl
sahf
mov
inc
sub
stos
movsb
pop
in
outsb
pop
pop
pop
cmp
test
cwtl
jnp
sub
jbe
cmp
or
adc
sub
fmuls
inc
mov
pushf
repnz
sub
xor
repnz
add
jae
ja
leave
pop
jo
test
mov
ljmp
jbe
mov
js
push
mov
data16
add
and
fsubs
push
pushf
outsl
popf
adc
xor
mov
mov
aaa
add
jecxz
xor
pop
mov
lods
rclb
pop
cmpsl
loop
shll
adc
push
lods
pushf
aad
ret
jo
nop
inc
cltd
out
cmpsb
jge
push
lret
sub
aad
cmp
mov
dec
sub
dec
push
add
lcall
ljmp
xchg
flds
jns
mov
ret
clc
adc
jns
dec
in
pop
sahf
adc
sub
cmp
mov
mov
mov
ret
inc
int3
xchg
jo
addr16
jl
rolb
mov
pop
decb
xchg
stos
shrb
dec
fs
dec
cmp
jo
int
mov
or
cli
inc
push
adc
clc
fstl
into
mov
pushf
adc
aad
in
gs
xor
movsb
or
lock
fs
sbb
inc
out
sub
mov
sarb
mov
cmpsb
movsl
jecxz
dec
mov
sbb
and
in
iret
rcrl
fcomps
adc
rolb
cwtl
and
pusha
inc
jbe
sbb
sub
add
push
cmp
aaa
inc
push
xchg
cmp
lahf
mov
shr
push
cli
jmp
fistpl
aaa
popf
mov
add
cs
push
cltd
xchg
in
and
xchg
or
jle
pop
mov
mov
adc
iret
test
push
and
gs
test
mov
mov
ror
inc
lahf
cmp
daa
push
es
pop
in
xchg
sub
cmp
cmp
and
mov
scas
mov
les
pop
or
stos
pop
movl
shl
ljmp
sub
dec
outsb
ret
shl
jae
sbb
mov
ret
cmp
ret
and
imul
add
xor
mov
pushf
cmp
sarb
adc
les
jg
push
pop
shlb
add
push
rorb
jge
or
test
in
add
mov
pop
xchg
or
loopne
hlt
cmp
mov
lret
mov
test
xchg
jne
jae
cmpsb
repz
adc
adc
push
push
ljmp
mov
clc
inc
out
inc
adc
in
stc
sub
mov
fs
mov
xchg
loopne
gs
addr16
iret
xor
xabort
mov
and
pop
push
push
and
mov
pusha
mov
fisubs
pop
sub
push
add
jae
dec
outsl
addr16
push
mov
or
lock
je
adc
dec
push
lahf
pop
mov
adc
pop
lock
adc
cli
pop
out
nop
repz
mov
mov
lock
push
icebp
bnd
cmp
sbb
into
js
fs
xchg
push
fimuls
add
xchg
mov
xchg
shl
sbb
lret
cmp
pop
lods
and
aam
sbb
fidivrs
mov
out
xor
orb
mov
add
movsl
in
insb
aas
mov
jp
xchg
xor
push
xchg
nop
test
jmp
jne
push
in
jb
aad
cmpsl
fst
add
and
push
cmp
xor
loopne
adc
pop
fwait
jne
xor
das
cmpsl
icebp
int3
movsb
pusha
cmp
jp
imul
ret
mov
cmpsb
loop
test
bound
adc
jns
push
test
cs
orb
iret
cs
in
es
add
sbb
fs
jnp
xor
arpl
repz
xor
into
push
daa
xor
cmc
or
sti
mov
pop
push
mov
jmp
js
outsb
cmp
and
sahf
pop
pop
movsb
sub
adc
jo
and
pushf
ret
into
inc
xchg
cmp
mov
mov
fstp
adc
xor
push
hlt
push
xlat
sub
adc
mov
and
pop
pop
fstpt
cmc
lea
lock
bound
icebp
sub
call
mov
jns
xchg
aaa
mov
sbb
hlt
push
xlat
sub
sub
cmp
imul
lods
mov
xor
addr16
xchg
sub
fidivrl
sub
fdivs
insb
jnp
jae
fmul
outsl
lret
addr16
add
and
pop
test
xor
or
movsl
jge
cmpsb
les
cmc
out
aam
sti
jmp
sub
push
incl
iret
pop
lahf
sbb
movsl
fwait
inc
lret
sbb
movsb
sub
adc
jo
mulb
aam
xchg
sub
rclb
lods
pop
inc
movsb
mov
inc
mov
fdivl
or
out
popf
clc
and
xor
sbb
bound
scas
int
mov
fs
jns
call
dec
roll
adc
adc
jmp
jnp,pn
xor
stc
cmc
jns
mov
sarb
push
scas
xchg
cli
ret
pop
das
aad
sub
lods
pop
mov
jl
cmpsl
inc
add
daa
jb
aaa
jecxz
jg
outsl
data16
jns
xor
movsb
or
ret
adc
cld
stos
aad
jmp
mov
imul
aam
pop
adc
insl
ljmp
xor
ret
push
push
add
cmc
jne
sub
or
cmc
adc
sti
jg,pn
sub
cmp
jp
out
mov
out
pusha
lods
cmp
lret
xor
aaa
loop
sbb
mov
rcrb
and
mov
jno
popa
shlb
cmc
cmp
ds
xor
mov
ret
mov
in
in
mov
sub
roll
sub
out
mov
adc
jne
dec
add
mov
idivl
pop
mov
jno
or
fcomps
cmp
fisttps
push
push
inc
and
adc
cmp
adc
adc
mov
into
inc
lret
sbb
jo
lods
or
dec
es
scas
or
sbb
add
fdivl
int
inc
int3
and
jo
mov
mov
sbb
xor
jecxz
xchg
call
adc
insb
mov
fimull
lds
adc
sbb
mov
loop
mov
mov
cld
shll
inc
negb
gs
cmp
cmp
jb
or
add
jg
hlt
sahf
sub
addr16
cld
loopne
test
mov
jb
xchg
icebp
cmp
adc
mov
loop
push
sbb
adc
es
push
mov
fistl
add
jb
xchg
icebp
cmp
adc
mov
loop
adc
adc
or
mov
xchg
pop
je
add
outsl
add
sbb
jecxz
sbb
mov
dec
mov
rcrb
adc
sbb
sub
rcll
sti
jnp
mov
ss
push
out
ss
mov
sbb
and
xchg
jp
mov
jae
or
inc
adc
mov
jbe
mov
rcrl
or
popa
xchg
daa
mov
sbb
and
mov
movl
inc
adc
int3
scas
sub
pop
es
mov
cmp
adc
push
xor
scas
jne
pop
es
dec
out
push
outsl
leave
nop
leave
cmp
xor
movsb
mov
lret
xlat
xchg
mov
mul
in
inc
jo
lods
xchg
sub
sbb
out
cli
ret
and
repz
sub
scas
cmp
std
add
std
test
stos
pop
push
rol
cmpsb
jl
pop
lea
in
loop
add
inc
in
sar
addr16
inc
and
jmp
cmp
or
push
mov
in
cmp
push
ds
addr16
sbb
mov
es
gs
mov
cmp
pop
xor
xor
cmp
test
ljmp
adc
fnstenv
insl
jge,pt
add
lds
leave
xchg
fadd
ret
scas
scas
imul
dec
jbe
pop
sbb
or
jp
mov
dec
ds
scas
add
dec
out
xor
arpl
ret
les
in
push
mov
sub
lods
fistps
xor
xchg
shlb
jg
fcompl
scas
fcomip
sbb
mov
lea
sbb
fsubs
push
jg
jno
mov
xchg
push
int
add
add
mov
call
pushf
xchg
cli
stos
add
push
int
xchg
je
fs
stos
mov
mov
push
ja
pop
and
sub
inc
sub
jns
sbb
jns
jns
push
add
mov
cmp
cltd
out
xor
cld
cld
xchg
xor
xchg
jp
adc
faddp
test
fcmovnb
test
fcmovnb
test
fcmovnb
test
fcmovnb
test
fcmovnb
test
fcmovnb
test
fcmovnb
test
fcmovnb
test
fcmovnb
test
fcmovnb
test
fcmovnb
test
cmp
sbb
rcrb
roll
lret
movsb
fidivl
mov
int
push
ja
mov
loopne
dec
or
loop
pusha
and
xchg
pop
rcl
mov
pop
divb
or
imul
mov
pop
inc
out
xchg
aaa
int
aas
int
pop
rclb
stc
into
and
inc
xlat
test
loope
or
addr16
adc
sub
out
cli
mov
shl
and
stc
bound
cmpsl
lods
das
pop
and
push
xchg
push
xor
cmp
adc
xor
sahf
test
mov
repnz
cli
fwait
arpl
insl
sbb
adc
push
std
xlat
sahf
or
loope
adc
in
fcomi
ds
iret
imul
jns
pushf
aas
inc
test
add
or
loopne
fcmove
fisttpl
hlt
mov
adc
mov
add
lock
cmp
clc
cmpsl
shll
mov
xor
aaa
rol
ret
fists
and
addr16
cld
adc
and
push
fwait
cmc
jns
sub
int3
cmpsl
mov
leave
outsl
out
xchg
aas
cmp
repz
lock
in
test
dec
inc
xchg
std
add
outsl
ljmp
and
test
inc
mov
xor
sbb
push
dec
jns
loope
hlt
cli
sub
push
xchg
js
dec
or
aas
pop
sbb
inc
ret
mov
repnz
cmp
aaa
mov
insb
dec
adc
push
mov
cbtw
and
cmp
bnd
test
cmpsl
sub
mov
test
cmp
xor
xchg
aas
movsb
fildll
imul
rcll
xor
jne
cmp
lcall
icebp
jp
pusha
mov
push
push
lcall
ljmp
dec
jg
and
jno
adc
mov
ja
loop
out
inc
jno
jae
int
cmc
jp
sub
inc
dec
or
inc
jnp
dec
xor
aaa
inc
arpl
aaa
rorl
ret
es
xor
inc
loopne
mov
dec
stc
es
popf
add
icebp
inc
jnp
fwait
nop
adc
cmp
mov
mov
mov
mov
dec
out
test
dec
adc
ss
mov
ret
addr16
dec
repz
inc
xchg
mov
or
push
or
cs
imul
mov
jp
mov
ror
mov
inc
mov
mov
in
inc
fs
mov
cmp
push
push
adc
ljmp
stc
jge
loop
mov
push
pop
push
mov
cmp
stos
loopne
test
mov
inc
push
add
divb
cmp
jp
or
jl
or
cmp
fistl
sub
cmpsl
test
pop
mov
cmp
test
mov
or
dec
outsl
mov
mov
add
adc
test
ficoms
cli
data16
sbb
popl
sahf
fs
jp
mov
jb
mov
push
jecxz
cld
and
jae
jne
mov
jl
arpl
mov
mov
stos
mov
jge
push
cs
movsb
push
mov
adc
int3
mov
mov
insl
push
sub
xchg
pushf
lock
cmp
shl
js
xor
add
ljmp
outsl
rcrl
pop
adc
jne
mov
in
rcrb
lea
aaa
inc
inc
lea
xor
shll
cmp
sub
in
lods
adc
pop
mov
jmp
dec
shlb
xor
pop
jp
test
rorl
in
js
test
dec
inc
push
lods
int
adc
into
xchg
jp
adc
add
clc
outsl
mov
rol
push
out
xor
pop
push
mov
out
mov
inc
push
popf
scas
adc
lcall
sbb
push
neg
mov
pop
jnp
xor
subl
pusha
loop
aad
xlat
pop
push
lods
inc
cmp
mov
mov
pushf
aaa
jle
mov
inc
xor
xchg
xlat
add
cmp
test
sub
icebp
xor
or
adc
xchg
cld
gs
ljmp
pop
mov
pop
mov
js
movsl
jns
push
mov
loope
push
rcll
inc
addr16
shlb
sarb
testb
sbb
fstpt
push
pop
inc
push
cwtl
bound
int3
fwait
sub
and
push
cltd
fdivrl
aad
shlb
mov
sbb
cmpsb
or
pop
clc
out
add
pop
adc
push
mov
cmpsl
stc
pushf
psubusw
push
or
repz
sbb
ljmp
ret
inc
pop
dec
nop
push
push
pop
out
dec
mov
call
inc
push
pop
cmc
add
stc
sub
sbb
and
dec
xchg
mov
mov
xchg
add
aas
dec
mov
pop
cld
push
mov
pop
aaa
xor
mov
fsubp
sbb
movsl
mov
shll
lret
std
test
mov
dec
mov
das
outsl
aad
in
sub
jp
and
cmp
mov
lret
nop
push
dec
icebp
insl
pop
mov
sub
insb
out
leave
jg
pusha
add
shr
icebp
enter
enter
in
xor
jne
push
or
mov
cmp
outsl
imul
jl
jmp
jb
sahf
mov
mov
dec
in
jl
das
testb
lret
pop
xchg
jne
in
sbb
push
mov
push
mov
repnz
add
xchg
xchg
pop
inc
pop
mov
jmp
push
jmp
psubw
sar
scas
cmp
jne
xlat
mov
in
insl
out
or
mov
cmp
jo
push
xor
cwtl
mov
aaa
mov
lret
test
cmp
jp
pop
push
clc
or
aam
ds
mov
filds
mov
fnstsw
xlat
cmp
or
mov
aaa
lcall
loopne
jbe
mov
lock
leave
clc
jo
pop
adc
sti
in
xor
mov
clc
mov
xchg
cltd
loopne
mov
enter
popa
pop
sbb
mov
sbb
std
xlat
cltd
add
mov
loopne
lods
inc
jg
mov
test
in
arpl
int3
xchg
adc
cmp
pop
aaa
lea
mov
pushf
insl
sub
adc
adc
cld
pop
fld
insl
jecxz
jnp
inc
rorl
shr
pop
jns
test
mov
mov
stos
adc
add
cmpsb
enter
mov
push
jo
insb
fidivrs
into
pop
and
out
lcall
or
push
and
daa
ffree
idivl
cld
pop
mov
fcmovb
mul
dec
add
mov
push
and
cmp
push
arpl
or
sub
and
mov
cmp
adc
ds
cld
or
pushf
xchg
ficoms
movsl
enter
jmp
xor
rcll
pop
arpl
test
jle
rep
dec
sub
pop
or
lods
mov
cwtl
into
out
push
push
imull
dec
fimuls
test
stos
and
dec
xchg
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
inc
mov
shr
push
ret
in
push
jmp
add
add
gs
insb
inc
popf
mov
pop
int
or
push
ja
pop
out
sub
add
add
je
mov
cltd
pop
lods
push
mov
mov
nop
mov
mov
add
mov
jae
mov
adc
or
jl
sbb
mov
add
pop
pushf
das
jge
adc
push
js
das
jge
adc
push
adc
or
inc
enter
daa
push
loope
rclb
sub
xchg
mov
mov
or
repnz
jge
hlt
mov
pusha
cmpsl
mov
mov
adc
adc
or
cmc
sbb
sbb
push
and
sub
pop
sahf
mov
jmp
push
ds
scas
add
mov
insl
dec
shll
arpl
ficoml
and
int3
push
ret
arpl
jp
aad
mov
ss
inc
int3
sub
add
jl
jae
push
out
or
mov
test
xchg
mov
into
mov
inc
cmpsb
push
and
pop
jnp
cmp
ja
mov
or
or
arpl
or
jmp
mov
mov
inc
cmp
ja
aaa
cmpsb
or
or
arpl
mov
mulb
negl
inc
cmp
ja
mov
mov
lret
sub
pop
out
lcall
cmp
pop
jnp
cmp
ja
inc
cltd
dec
inc
pop
mov
lret
sub
arpl
pop
mov
mov
negl
inc
cmp
ja
sbb
addb
aam
sub
popl
jae
jl
mov
mov
aas
cmp
ja
sub
lret
sub
int3
inc
test
mov
sahf
and
pop
jnp
cmp
ja
ret
inc
pop
mov
lret
sub
int3
inc
loope
pop
jge
mov
sahf
and
pop
jnp
cmp
ja
xchg
mov
int3
aam
push
inc
xchg
fldt
inc
shrb
mov
pop
push
popf
sbb
sysenter
mov
daa
ds
xchg
subb
lods
int3
xor
mov
jb
push
aam
adc
mov
subb
lods
xor
xor
mov
jb
push
and
inc
adc
mov
daa
ds
xchg
subb
lods
push
out
xor
mov
jb
push
mov
sti
mov
daa
ds
xchg
subb
lods
push
out
xor
mov
jb
mov
xor
subb
lods
jl
mull
jb
xchg
nop
xchg
call
mov
subb
lods
test
xor
mov
jb
xchg
jb
sarl
ds
xchg
subb
jno
pop
or
scas
dec
pop
jne
in
enter
xchg
sbb
outsl
leave
mov
jp
mov
sbb
mov
or
scas
dec
pop
jne
in
enter
loop
cltd
mov
xor
outsl
leave
mov
jp
mov
sbb
sbb
leave
gs
hlt
xor
hlt
cmc
jecxz
jmp
popa
mov
lahf
mov
push
mov
xchg
ds
lahf
mov
ret
add
cs
enter
xor
and
or
rcr
fisubrl
jmp
fwait
mov
xor
adc
jge
xor
and
or
cld
cmpb
or
rclb
and
or
ret
fwait
pushf
jecxz
aaa
jmp
cltd
mov
xor
rclb
and
or
or
jmp
fwait
mov
inc
shlb
test
adc
repnz
adc
out
ret
mov
adc
cmp
inc
shlb
lock
adc
repnz
adc
mov
mov
cmp
insb
push
xchg
insl
sbb
jecxz
push
mov
xchg
sbb
mov
insb
push
sbb
leave
add
arpl
sub
mov
repnz
movsb
addr16
xor
mov
stos
adc
cmp
add
arpl
sub
mov
and
movsb
addr16
xor
mov
sub
add
arpl
sub
mov
push
or
in
shlb
fiaddl
arpl
sub
mov
jp
movsb
addr16
xor
mov
xchg
leave
stos
pop
into
add
arpl
sub
mov
push
movsb
addr16
xor
mov
rclb
xlat
add
arpl
sub
mov
dec
push
movsl
addr16
xor
mov
rcrb
out
sti
add
arpl
sub
mov
add
addr16
inc
adc
ss
ds
mov
sbb
xchg
sbb
scas
mov
mov
jno
call
ljmp
sbb
xchg
xchg
and
scas
out
scas
mov
mov
jno
call
xchg
cmpsb
adc
add
das
ret
divl
call
mov
xor
pop
xor
xchg
insb
shlb
pop
add
shlb
nop
push
push
je
scas
jge
inc
in
ss
insb
shlb
pop
add
shlb
nop
push
push
je
scas
push
dec
mov
push
xchg
insb
shlb
pop
add
rcrb
add
shll
mov
xor
sbb
cmp
divl
cmp
insb
push
xchg
insl
sbb
jecxz
and
sbb
cmp
jno
adc
sarb
cmp
insb
push
xchg
insl
sbb
jecxz
and
sbb
cmp
or
idivl
sarb
cmp
insb
push
xchg
insl
sbb
jecxz
and
sbb
cmp
xchg
cmp
mov
call
push
xchg
insl
sbb
jecxz
and
sbb
cmp
mov
sarb
cmp
insb
push
xchg
insl
sbb
jecxz
and
sbb
cmp
push
xchg
add
sarb
cmp
insb
push
xchg
insl
sbb
jecxz
and
sbb
cmp
pop
pop
mov
call
push
xchg
insl
sbb
jecxz
and
sbb
cmp
lock
shlb
adc
dec
add
ds
cmp
or
xor
test
add
nop
mov
pop
sub
sbb
jg
shrb
movsl
mov
gs
jmp
fnsave
test
lret
add
sub
mov
mov
test
mov
pop
sub
sbb
sub
mov
dec
cwtl
pop
sbb
jo
test
lret
adcl
repz
jp
cmpsb
cmp
jo
test
lret
std
xchg
jg
shrb
movsl
mov
adc
dec
ss
jo
test
lret
cltd
xchg
jg
shrb
movsl
mov
clc
cmpb
fnsave
test
lret
mov
jg
shrb
movsl
mov
jno
je
mov
jo
test
lret
test
sub
mov
pop
hlt
outsb
sbb
jo
test
lret
inc
xchg
jg
shrb
movsl
mov
gs
cmp
test
mov
pop
sub
sbb
sub
mov
into
mov
cmp
jo
test
lret
rcrl
movsl
mov
mov
test
mov
pop
sub
sbb
cltd
jg
shrb
movsl
mov
push
adc
cmp
test
mov
pop
sub
sbb
jg
shrb
movsl
mov
shl
xor
fnsave
test
lret
cmp
sub
mov
jne
arpl
mov
jo
test
lret
jno
jg
shrb
movsl
mov
pop
jg
mov
jo
test
lret
insl
mov
shrb
movsl
mov
aam
insb
out
test
mov
pop
sub
sbb
xchg
jg
jl
enter
jg
loope
leave
mov
sbb
jb
stos
sub
add
fnsave
icebp
insb
hlt
gs
loopne
negb
outsl
stos
sbb
ficoms
sbb
cmp
add
push
test
cld
xchg
int
adc
rcrl
outsl
stos
sbb
fidivs
cmp
add
stos
roll
or
lods
out
lods
xchg
lahf
pop
popa
cmp
xchg
popf
mov
movsl
fildll
add
mov
lods
xchg
sub
addr16
ret
dec
mov
sub
lcall
mov
negl
cmp
xor
aaa
inc
fcoml
in
adc
es
test
or
sbb
addr16
test
sub
mov
jns
push
lods
fmul
jle
mov
add
inc
lret
jmp
or
mov
inc
add
pop
sar
into
test
clc
add
jg
add
out
pop
pop
cmp
jp
cmc
cld
ud1
push
dec
mov
aam
out
lret
and
insb
xor
cmp
sub
insl
lret
out
sub
xchg
push
dec
adcl
fists
lods
xchg
aaa
lcall
push
mov
test
je
out
repz
outsl
out
lock
mov
int
adc
jg
sbb
dec
daa
pop
nop
test
jno
xor
sub
sbb
outsl
gs
sub
lods
fstp
inc
ss
dec
ret
xor
cmp
jnp
jge
push
sbb
outsb
dec
arpl
sbb
inc
xlat
xchg
jle
gs
mov
sub
lahf
aas
adc
sub
cmpsb
dec
aam
pop
or
lds
fucom
push
jg
out
movb
sbb
add
mov
daa
sbb
jg
sbb
int
js
adc
push
ljmp
inc
cmp
jecxz
into
jmp
push
cmpsl
dec
jg
jmp
fwait
inc
fcmove
andb
inc
or
fadd
cmovae
aam
push
sbb
pop
inc
pop
in
push
test
jno
sub
dec
dec
mov
fldcw
mov
cmp
add
lds
call
mov
in
inc
scas
stos
out
pop
in
popf
les
mov
in
push
test
jno
sub
dec
dec
mov
adc
cmc
icebp
insb
xor
adc
in
arpl
fst
jbe
add
cmp
xchg
mov
ja
mov
and
addr16
push
in
mov
pop
in
jecxz
in
fidivl
loop
je,pn
mov
les
in
loop
icebp
adc
lods
push
add
in
loop
int
or
and
or
aad
ret
lret
jbe
in
cmpsb
sbb
adc
push
ja
and
cmp
inc
pop
scas
repnz
jle
jg
push
repnz
clc
sub
push
inc
pop
in
adc
adc
or
fst
jns
mov
and
jbe
dec
xchg
jo
pop
pop
outsl
inc
pop
in
mov
fsubs
fidivl
sub
je,pn
lret
fs
or
xor
xchg
adc
jbe
xor
or
aad
cmpsl
bnd
data16
into
or
push
lock
sub
dec
xchg
pop
inc
pop
mov
mov
out
addb
and
jbe
push
and
ja
jno
pop
sub
mov
pop
cmp
push
sub
push
or
pop
push
imul
jno
sbb
pop
inc
pop
mov
jb
jns
into
push
clc
stos
push
cwtl
jg
or
jb
out
pop
mov
xchg
icebp
jne
in
ss
ss
pop
jno
imul
jno
pop
mov
push
loop
jo
insl
cld
add
sbb
ficoml
nop
fidivl
jno
lcall
fidivrl
lahf
ss
pop
push
adc
repnz
push
aaa
sub
jno
lcall
fidivrl
lret
jo
pop
cwtl
stos
jno
dec
addr16
and
ja
or
ret
push
ja
aad
std
addr16
arpl
mov
inc
cmp
imul
mov
inc
mov
adc
in
mov
cmp
stos
loopne
in
imul
gs
stos
les
ret
pop
cld
rorb
jg
std
dec
add
push
dec
and
push
sbb
shr
hlt
sahf
and
dec
push
lds
pop
les
dec
jg
in
sub
inc
dec
xchg
sbb
mov
imul
push
sbb
std
push
repz
and
dec
das
ret
daa
cld
in
repnz
adc
mov
mov
rcrl
xor
push
add
cld
sti
or
icebp
adc
jb
mov
lret
jne
std
in
bnd
jb
dec
xchg
jmp
sbb
and
mov
lret
sub
shlb
in
inc
leave
mov
loopne
rcrb
xor
push
add
cld
sti
or
icebp
adc
jb
mov
lret
jne
orl
call
jb
dec
xchg
jmp
sbb
cmp
mov
lret
sub
shlb
nop
push
int
test
push
rcrb
xor
push
add
cld
sti
or
icebp
adc
jb
mov
lret
jne
insl
add
pop
cmpsl
insl
call
sbb
and
mov
lret
sub
shlb
pop
dec
inc
inc
leave
push
dec
xchg
jmp
sbb
es
dec
add
push
dec
and
push
sbb
jb
dec
xchg
jmp
sbb
cmp
mov
pop
or
int
dec
and
push
sbb
movsl
sbb
and
cmp
push
pop
icebp
adc
jb
mov
lret
jne
movsl
or
call
jb
dec
xchg
jmp
sbb
cmp
mov
lret
sub
shlb
and
lret
loopne
aad
fs
push
add
cld
sti
or
icebp
adc
jb
mov
lret
jne
dec
add
orl
push
sbb
and
mov
lret
sub
shlb
fsubrl
int
mov
cld
rorb
push
sub
shlb
mov
inc
leave
mov
loopne
rcrb
xor
push
add
cld
sti
or
icebp
adc
jb
mov
lret
jne
hlt
or
call
insl
call
sbb
movsl
sbb
sub
shlb
int3
imul
mov
loopne
and
fs
push
int
or
or
shlb
push
out
adc
add
sbb
xor
push
add
cld
sti
or
icebp
adc
push
sbb
jo
icebp
fwait
adc
mov
push
add
cld
sti
or
icebp
adc
jb
mov
lret
jne
mov
imul
xchg
jmp
sbb
movsb
sbb
sub
shlb
pop
dec
inc
inc
leave
push
dec
xchg
jmp
sbb
cmp
mov
lret
sub
shlb
pop
dec
inc
inc
leave
push
dec
xchg
jmp
sbb
cmp
mov
lret
sub
shlb
sbb
pop
lret
loopne
rcrb
xor
push
add
cld
sti
or
icebp
adc
jb
mov
lret
jne
test
imul
xchg
jmp
sbb
and
mov
lret
sub
shlb
cwtl
and
mov
loopne
lret
sbb
xor
push
add
or
or
icebp
adc
jb
mov
lret
jne
movsl
or
call
jb
dec
xchg
jmp
sbb
movsb
sbb
add
shlb
pop
repz
mov
loopne
rcrl
xor
push
add
or
or
icebp
adc
mov
jl
pop
pop
icebp
fwait
adc
popf
les
ret
pop
cld
rorb
daa
mov
test
stos
rcrb
xor
push
int
mov
rcl
les
jg
test
dec
and
push
sbb
cmp
mov
lret
sub
rcrb
rcll
pop
xor
sub
push
dec
xchg
lea
mov
mov
and
dec
mov
lret
jne
into
or
call
aaa
call
sbb
aaa
call
dec
mov
mov
sub
or
fwait
adc
cmp
les
and
sti
or
icebp
adc
mov
jl
pop
pop
icebp
fwait
adc
popf
les
ret
pop
cld
rorb
daa
mov
loopne
rcrb
xor
push
int
mov
rcl
les
jg
test
dec
and
push
sbb
movsl
sbb
sub
shlb
cwtl
mov
loopne
rcrb
xor
push
add
or
or
icebp
adc
jb
mov
lret
jne
adc
bnd
outsl
call
sbb
and
mov
lret
sub
shlb
mov
test
mov
sbb
xor
push
add
cld
sti
mov
sbb
fstps
stos
loopne
push
pop
cld
andl
les
sbb
jo
imul
lods
ds
cmp
and
icebp
movsb
lea
sbb
xor
cli
lds
les
int
cmpsb
pop
icebp
mov
push
sbb
sub
insb
ret
vaddsubps
fisttpl
sbb
mov
xor
jbe
dec
out
xchg
cmp
jge
insb
aam
sbb
dec
out
nop
repz
push
or
lock
push
pushf
jge
call
dec
xchg
or
and
outsl
xor
dec
ret
ds
add
or
dec
dec
push
sti
sbb
iret
lcall
add
add
fidivrl
insb
int3
mov
and
jge
insb
push
jmp
sahf
jge
stos
push
xchg
dec
push
test
fdivr
jne
xchg
repz
push
or
mov
jbe
arpl
jge
iret
cli
add
pop
test
sbb
cmp
lcall
iret
pop
rclb
lods
orb
subb
xchg
das
or
add
xchg
nop
jae
pop
mov
outsb
jg
es
shll
sbb
or
pop
or
xchg
iret
lcall
fisubrs
adc
iret
aas
and
fcomps
push
cmc
fcomps
ret
adc
mov
xchg
xor
push
sbb
xor
cmpsb
mov
push
or
fnstsw
xchg
movsb
and
sbb
mov
mov
dec
jl
ffree
enter
pop
movsl
mov
pop
rorl
push
ret
sbb
sbb
dec
push
pop
xchg
push
jge
sahf
mov
lea
xchg
ffree
xlat
pop
js
mov
push
xchg
ffree
xlat
jns
cmp
mov
xchg
sti
inc
jg
imul
jle
xor
rcll
lds
fimuls
imul
cwtl
dec
lods
xor
push
jl
fnsave
jno
mov
xlat
lods
jl
jb
dec
jl
fnsave
test
fnstenv
xlat
pop
js
xchg
fmull
pop
cmc
insb
jb
dec
pop
std
pop
push
jge
ret
push
out
cmpb
xor
cmpl
jle
inc
testb
fnstsw
cmpb
xor
ret
inc
ret
cmpb
xor
sahf
sub
jmp
out
inc
mov
test
mov
popf
mov
jge
cmpl
xor
cmpl
push
cmpl
cmp
push
pop
push
lock
cmp
push
aam
cmp
pop
filds
push
xchg
jne
fsub
roll
ret
mov
push
pop
mov
xor
push
pop
push
pop
iret
mov
cwtl
stos
fsub
roll
add
cmp
pop
vpmulhuw
fwait
mov
dec
mov
ret
fiaddl
std
jecxz
push
pop
push
cmp
cmpl
dec
push
pop
push
mov
cwtl
pop
daa
gs
pop
push
aam
dec
push
cmp
dec
mov
push
cmpl
sti
xchg
dec
aas
cmp
dec
mov
cmp
add
int
cmp
int3
fs
push
into
dec
adc
push
pop
push
in
fs
adc
data16
xchg
cld
sbb
pop
filds
or
iret
inc
add
arpl
in
inc
inc
sahf
cmp
pop
leave
jp
xchg
fwait
loopne
xchg
inc
push
pop
push
cmp
pop
push
cmp
xor
pop
fists
xchg
test
pop
push
cmp
inc
bound
xor
cli
cwtl
xlat
xor
roll
pop
push
xchg
adc
push
cmp
push
xchg
dec
bound
cmp
push
pop
mov
cmp
push
lods
fs
out
xor
or
pop
stc
arpl
jb
fsub
roll
ret
sahf
cmp
pop
leave
jp
jne
xor
loop
xchg
test
mov
ror
xchg
inc
push
cmp
lea
jmp
adc
pop
add
mov
jo
xlat
xor
sub
add
pop
push
cmp
dec
sbb
mov
inc
arpl
aaa
sbb
sub
cmp
lahf
in
fsub
shll
add
daa
jge
pop
push
adc
sub
jne
push
daa
stc
push
pop
push
jo
int3
dec
pop
ret
dec
cmpb
jo
add
test
ret
aad
push
pop
lcall
push
lcall
pop
lcall
pop
lcall
push
lcall
pop
lcall
push
lcall
push
lcall
pop
lcall
push
pop
repz
pop
push
divl
aas
mov
in
lods
pop
add
push
xchg
insl
push
pop
push
jb
aaa
aam
popl
sub
inc
imull
mov
lods
dec
pop
mov
or
scas
cmpb
xor
push
pop
push
cmp
cmpb
and
cmpb
xor
mov
daa
xor
push
jo
ret
push
dec
dec
arpl
adc
cmp
mov
stos
test
jle
xchg
mov
sub
push
pop
pop
pop
push
pop
push
mov
adc
pop
fbld
jle
jle
insb
loope
inc
mov
xchg
pop
daa
mov
jecxz
push
cmp
aaa
xor
cmpsb
adc
pop
fbld
push
xlat
lcall
pushf
popf
push
pusha
cltd
test
lea
cmp
scas
jg
fmull
sub
xor
cmpb
cmp
cmpl
cmp
and
rcrl
pop
push
cmp
push
pop
push
cmp
push
push
cmp
in
push
jnp
cmp
pop
inc
push
cmp
mov
push
sarl
jnp
cmp
dec
dec
push
cmp
jp
push
cmp
xor
xchg
jge
sub
mov
add
pop
xchg
xchg
into
loopne
loope
stc
inc
push
pop
xchg
push
pop
in
cmp
push
pop
repz
arpl
xor
cmp
xchg
test
stc
inc
arpl
lods
push
or
pop
push
daa
adc
pop
arpl
push
jl
movsb
dec
lea
lods
mov
add
push
mov
cld
bound
or
into
ds
push
mov
sti
bound
inc
push
mov
out
cmp
stc
cs
cmp
mov
lods
xor
cmp
cwtl
sub
adc
popf
es
jo
int3
dec
mov
outsl
popa
mov
and
push
arpl
inc
fs
or
imul
fmull
repz
dec
mov
mov
mov
cmc
aam
mov
fistl
in
push
cmp
or
lahf
cmp
pop
aas
push
sbb
dec
cmp
mov
fdivrs
out
jo
adc
popf
es
cmp
pop
loopne
filds
sbb
push
cmp
inc
push
cmp
enter
lods
roll
inc
push
cli
cwtl
jg
out
inc
push
pop
push
jo
pusha
out
ja
imul
cmp
mov
xchg
mov
sbb
lret
adc
or
sub
dec
mov
inc
push
xchg
xorb
push
and
mov
and
inc
arpl
aam
xchg
pusha
shl
jmp
scas
movq
pop
mov
sub
fmull
and
ds
pop
push
cmp
inc
xchg
loopne
and
pop
js
push
arpl
in
cmp
push
ja
and
inc
xchg
ret
xchg
adc
jnp
cmp
pop
out
adc
push
jo
int3
dec
mov
adc
or
sub
cmp
inc
xchg
test
inc
push
cmp
fists
push
cmp
pusha
dec
push
cmp
cmpb
xor
lods
arpl
cmp
adc
mov
inc
inc
push
cmp
and
clc
mov
xchg
cld
pop
loopne
filds
rolb
cmp
cmpb
xor
fisttpll
cmp
pushl
test
push
jae
dec
xlat
in
out
cmp
mov
sub
mov
xlat
cmp
xor
xchg
cmc
xlat
or
pushl
cmp
adc
adc
dec
leave
dec
mov
icebp
loope
icebp
into
jne
stc
xlat
cmp
jne
call
xchg
cmc
cmp
dec
lods
jae
cmc
push
mov
cmp
out
loope
cmp
pop
push
leave
sub
mov
add
add
bound
idivb
loopw
jae
fstl
dec
stc
xlat
cmp
jle
mov
xor
and
jno
in
inc
cli
dec
sti
cltd
jmp
sub
out
stc
xlat
cmp
fdivrl
xchg
cmc
push
int
test
fs
gs
jne
or
cmc
jp
jg
loopne
hlt
and
mov
cmc
xlat
scas
mov
scas
jno
jecxz
in
xlat
scas
mov
out
fnstcw
das
cmpsb
icebp
shlb
xchg
add
sbb
pop
cmpb
icebp
subb
mov
or
mov
dec
ja
xor
rcr
cmp
ficoms
or
int3
cmpsb
icebp
shlb
outsb
sarl
mov
je
cmpsb
icebp
subb
push
jns
xor
lret
imul
xchg
aad
push
ljmp
loope
out
cmpsb
stos
jecxz
xor
nop
jbe
push
mov
inc
pop
add
and
out
push
in
rcr
or
add
jp
mov
or
mov
dec
arpl
jmp
or
sahf
stos
push
xchg
decb
sub
imul
xlat
dec
arpl
cmp
inc
add
cmp
inc
out
cwtl
loopne
xchg
pop
dec
jns
or
pop
xlat
xchg
in
mov
inc
push
cmp
pop
pop
dec
cmpsb
cmp
inc
xor
add
cmpsl
xchg
call
cmpb
add
lds
cmp
mov
ror
pop
cmpb
add
repnz
cmpb
and
jle
lret
cmpb
adc
out
pusha
inc
dec
sub
inc
out
xchg
pop
dec
into
and
inc
mov
and
cmp
shll
pop
cmpb
out
xorb
nop
jmp
fcomps
loope
inc
orb
dec
sbb
or
fists
je
cmp
nop
add
mov
pop
cmpb
in
pushf
enter
pop
or
mov
stc
xchg
ja
dec
inc
or
fists
lret
cmpb
adc
out
stc
dec
dec
fstl
or
xchg
cmpsb
inc
cmpb
push
xchg
negl
xchg
cmpl
or
imul
ja
repnz
loop
and
jp
push
iret
es
or
jns
push
dec
xrelease
adc
adc
push
jg
jp
or
inc
sub
xchg
mov
ds
sbb
lret
addr16
xor
cmp
fistpll
push
ljmp
in
out
push
or
push
jg
inc
andb
jl
fisttpl
pop
mov
pop
jg
xchg
out
or
lcall
mov
out
push
call
jge
mov
icebp
cli
repz
fsub
cmpsb
repz
and
lds
xor
pop
mov
adc
sub
mov
adc
mov
imul
lcall
es
pop
mov
xchg
dec
jecxz
jmp
into
aam
jl
jmp
jp
sub
cmp
or
lret
outsl
popa
sub
repnz
out
int
loop
scas
jmp
jp
popf
jg
xchg
scas
inc
adc
dec
lret
add
popf
and
mov
bound
shlb
dec
adc
aas
adc
mov
aaa
sahf
and
ljmp
andb
adc
loopne
pop
mov
xchg
dec
jecxz
cmp
int
push
mov
insl
jb
and
push
or
jge
lret
outsl
popa
sub
repnz
fs
push
mov
xchg
adc
cmpsb
add
add
xor
dec
cmpsl
and
je
bswap
dec
sbb
inc
fistps
adc
xchg
cmpsb
and
je
bswap
dec
mov
inc
fistps
mov
int
insl
and
or
js
enter
adc
adc
lods
xchg
sbb
push
or
test
jnp
clc
cmp
push
or
jle
jnp
movsl
or
lds
jecxz
movsl
mov
enter
jno
push
iret
test
test
and
push
xor
scas
loop
mov
cld
inc
std
mov
shl
js
leave
or
push
cmp
cmp
sbb
nop
lea
lods
cmp
inc
add
cli
xor
scas
cwtl
movsb
push
or
movsb
and
xchg
leave
sub
or
shl
push
or
xor
cmp
add
movsb
mov
sub
push
mov
scas
loop
mov
cld
inc
std
mov
shl
js
leave
or
push
mov
sti
or
pushf
xchg
loopne
jnp
psubd
xchg
push
xchg
xchg
lea
xchg
lea
xchg
lea
xchg
lea
xchg
lea
xchg
lea
xchg
lea
xchg
lea
xchg
lea
xchg
lea
xchg
lea
xchg
lea
xchg
lea
cld
pusha
lods
xchg
in
lds
jp
test
stc
pinsrw
mov
loope
jmp
jp
dec
xchg
clc
lret
xchg
jle
rcrl
sub
clc
jo
je
int
lahf
imul
jg
and
enter
aam
sub
dec
xchg
aam
mov
mov
cmp
and
push
mov
flds
lret
aas
ret
jg
cld
sbb
push
adc
fcoms
cmp
inc
add
inc
fwait
repnz
les
xchg
add
loope
outsl
pop
sbb
or
mov
out
movsl
add
cmp
sbb
imul
ret
inc
icebp
sbb
push
or
mov
mov
push
out
sbb
and
and
xor
hlt
jecxz
ljmp
adc
mov
adc
mov
mov
jb
push
mov
imul
push
loope
data16
xchg
fbstp
loopne
ljmp
dec
adc
idivb
stos
xchg
loopne
sbb
psrlq
sub
sub
jne
mov
fcomp
xor
ret
shlb
inc
repz
pop
imul
jne
setge
xchg
push
pop
daa
jb
pop
outsl
subl
pop
add
push
out
mov
pop
xchg
jno
mov
add
xor
pop
jae
mov
pop
add
xor
out
dec
xchg
sub
push
pop
xor
shll
fistps
cmp
push
imulb
pop
lods
xchg
xor
xor
cmovno
mov
scas
xchg
and
fucomip
ja
not
fisttpl
clc
cmpsl
push
iret
inc
add
mov
pushf
shrb
fcmovnb
jp
lret
sbb
cmp
scas
mov
pop
aam
push
shrb
inc
out
repz
aad
ret
xchg
mov
sub
js
loop
inc
dec
mov
jns
cmpl
mov
jbe
adc
rol
fs
or
and
sub
aam
aam
out
sbb
sub
hlt
sbbl
loopne
push
bound
mov
sti
push
repz
xor
imul
push
xchg
sbb
mov
push
ret
pushf
add
sub
icebp
jnp,pt
and
aam
jbe
jbe
mov
mov
sub
pusha
xlat
fidivrl
mov
sub
inc
popf
xchg
push
xchg
icebp
aaa
jns
fwait
outsb
sbb
add
cmp
fldcw
lea
stos
sbb
in
std
xchg
xorl
sub
cli
ficoml
hlt
cmp
dec
mov
sbb
mov
test
push
mov
popa
xchg
ret
fstps
pop
xor
lret
mov
xchg
adc
dec
test
or
sub
lret
aas
pop
pushf
xor
adc
dec
or
scas
mov
je
mov
dec
pushl
addr16
mov
sbbb
gs
xor
sub
das
add
mov
pop
clc
dec
in
mov
iret
mov
cli
rcl
push
repz
icebp
out
cltd
iret
push
scas
jp
aad
lcall
bound
mov
outsb
fsubrl
inc
cs
adc
or
stc
xor
mov
inc
sub
out
mov
sbb
push
xchg
mov
xor
movsl
jle
out
mov
cmp
push
movsb
int
or
out
or
pop
fisttpll
scas
fildll
pop
daa
jl
sub
test
sub
lea
xchg
jecxz
lods
xchg
push
and
xchg
cmpb
jecxz
lods
xchg
push
fisubl
xchg
lea
std
inc
xor
mov
inc
sbb
mov
out
jb
scas
and
add
xor
and
xor
adc
hlt
and
add
cmp
add
ficoms
cmpsb
enter
xor
negl
push
mov
mov
aam
int3
std
inc
xor
xor
das
scas
scas
loope
into
mov
fildll
pop
call
mov
cltd
and
in
fmull
into
js
adc
lock
mov
inc
aad
mov
adc
pop
outsb
and
xchg
sub
inc
pop
pop
andb
sub
cmpsl
lea
dec
std
call
jne
scas
pushf
mov
sbb
ja
inc
fbld
xchg
jge
cmpsb
insl
xchg
lds
mov
xchg
lea
in
int
in
pusha
add
mov
imulb
add
add
lods
or
xor
adc
es
mov
push
lods
dec
jae
push
lcall
xlat
mov
adcb
lea
shrb
xor
lods
xchg
push
movsl
sti
lea
push
sub
mov
mov
es
push
out
ja
push
push
push
sub
jle
jnp
push
or
lods
add
test
ja
in
aaa
push
adc
sahf
jmp
leave
sbb
adc
sub
adc
movsl
ret
icebp
movsl
std
inc
nop
push
lods
xchg
and
test
push
mov
fsubrs
push
xchg
into
and
or
iret
out
xchg
add
xor
xor
lea
das
mov
adc
dec
or
je
jp
rclb
in
dec
mov
inc
mov
cwtl
lock
mov
push
mov
fldt
cmpsl
sub
mov
cld
dec
lds
jg
repz
icebp
xchg
pusha
inc
test
les
pop
in
call
nop
shrl
lods
cmpsb
xchg
pop
and
mov
cwtl
out
ja
lcall
mov
or
lds
sti
and
stos
js
jns
pop
cmp
cmpsb
xor
inc
les
or
mov
loopne
insb
pusha
arpl
lds
sub
cld
pop
lds
sub
lds
xchg
call
lods
cmpsb
incl
into
popa
arpl
shr
jmp
into
popa
arpl
cwtl
fmuls
adc
sbb
mov
mov
imul
xor
adc
imul
dec
mov
loopne
adc
add
aam
cli
es
add
out
mov
loopne
xchg
loopne
xchg
loopne
xchg
loopne
xchg
loopne
test
push
fildl
mov
imul
orl
or
sbb
imul
adcl
cmp
adc
imul
xorl
jb
mov
imul
cmp
or
adc
imul
sbbl
or
adc
imul
andl
jg
mov
mov
cmc
and
mov
sbb
mov
pop
add
scas
pop
call
xor
pop
push
xchg
xchg
push
add
push
fmull
and
mull
xor
shrl
pop
inc
lahf
mov
dec
push
sub
repz
ret
test
arpl
enter
cli
push
cmp
bound
cmp
and
xor
mov
push
or
cmp
data16
xchg
mov
pushf
sub
stc
pop
jle
jmp
aas
idiv
mov
ljmp
repz
mov
jl
adc
fsubrs
ret
adc
dec
xor
inc
cmpb
push
jp
sbb
xor
fstps
mov
sub
push
push
int3
out
mov
clc
movb
adc
cmpsl
add
aam
lods
jmp
inc
out
jo
shrl
push
pop
ret
adc
mov
nop
sub
push
mov
jne
loopne
repnz
push
cmp
push
or
in
or
dec
jnp
inc
push
enter
das
fwait
popf
xor
pop
fcompl
shr
or
enter
adc
jae
cmp
repz
std
repz
inc
call
jne
hlt
jmp
push
xor
push
sti
pop
push
mov
xor
sbb
sub
loopne
clc
xchg
aad
movsb
mov
hlt
mov
mov
mov
inc
test
rcrl
push
imul
dec
repz
stos
inc
push
addr16
dec
mov
sub
add
bound
shll
imulb
cld
push
ss
xchg
cmc
out
addr16
in
imul
xor
adc
push
ljmp
mov
push
jmp
pop
idivb
in
gs
aam
sbb
lods
cmc
mov
stc
dec
hlt
iret
sub
loop
fidivrl
pop
jbe
pop
cmc
daa
add
add
inc
fwait
nop
fsts
ja
dec
mov
shlb
loopne
and
mov
or
aas
loopne
mov
jbe
repnz
fmul
sub
pusha
pop
jmp
lods
iret
lcall
insb
test
and
push
aaa
out
push
inc
inc
xlat
jno
cmp
xor
outsl
inc
mov
jno
mov
mov
lods
pop
push
lahf
xchg
fcompl
jmp
fdivr
or
lret
fldt
js
movsb
fnstenv
mov
mov
xlat
jp
in
je
jbe
push
inc
test
and
mov
outsb
cmpsb
inc
cmpsb
mov
cld
lret
cmp
xchg
cmpsb
add
gs
fldcw
scas
and
inc
je
dec
jl
decl
dec
mov
outsb
dec
push
mov
inc
inc
ljmp
sub
xchg
repnz
mov
in
iret
insb
add
fisttpl
dec
sti
or
sbb
in
cmpsb
xchg
jbe
adc
push
and
push
in
sbb
jmp
xorl
or
mov
stos
push
and
xor
add
std
mov
fcmovu
dec
scas
movsl
cld
fmuls
dec
out
popa
or
fnstenv
rep
orl
pop
out
jl
jp
push
daa
cld
sub
xchg
lahf
sbb
pop
in
xchg
pop
loopne
jmp
jno
out
addr16
cltd
ret
popa
mov
popa
xor
cmp
sub
les
jbe
mov
push
nop
test
shrl
jecxz
and
das
sbb
cmp
bound
pop
dec
adc
les
pop
sbb
add
pop
cmp
cmp
loop
or
xor
jle
push
out
xchg
adc
push
add
jmp
pop
xchg
lret
shr
jnp
mov
shl
call
mov
lods
inc
jp
icebp
fnsave
jno
push
rorb
xchg
hlt
lahf
cmp
repnz
jecxz
mov
repz
cmpsb
cmpsl
sbb
enter
pusha
sbb
mov
dec
xchg
lahf
mov
ss
ljmp
push
or
stos
pop
dec
ss
fmull
sub
fdivrl
pushf
push
inc
fsub
rcll
sub
arpl
out
test
sub
xchg
mov
hlt
pushf
xchg
sub
sbb
jno
xchg
or
push
mov
sub
pop
cmp
call
push
imul
mov
fxtract
das
pop
mov
aam
loop
xlat
repz
jg
sbb
rolb
sbb
pop
sub
out
fidivrs
push
sub
mov
jno
ljmp
cmpsb
or
and
dec
data16
movl
dec
cmc
sub
xor
push
into
mov
and
push
mov
mulb
jge
aam
inc
jne
xor
mov
pop
lcall
pop
mov
mov
ficomps
xchg
xchg
les
mov
push
mov
and
inc
pop
movsb
sbb
andl
pop
add
fwait
mov
les
sbb
mov
xor
jge
aaa
lods
mulb
mov
std
cmp
mov
cmc
cmp
adc
loope
mov
push
push
push
pop
fcomp
mov
lock
sbb
out
mov
jno
sti
mov
pop
aad
addr16
cmpsl
iret
call
fsubs
ja
pop
mov
push
adc
cmc
xchg
pop
fs
in
mov
cmc
lcall
or
mov
cmc
loope
cltd
mov
pop
sub
push
xor
out
icebp
cwtl
adc
addl
clc
psubq
cltd
lret
jmp
call
mov
cmpb
dec
lret
rcr
test
lret
hlt
cwtl
push
or
iret
cmp
sub
inc
sahf
add
repz
imul
stos
pop
push
leave
loop
notl
outsl
pop
xchg
mov
inc
pusha
movsb
clc
sbbl
frstor
sub
jo
pushf
adc
fsubp
mov
test
cmp
mov
loopne
call
adc
dec
repnz
cmpsl
test
clc
movsb
dec
add
pop
scas
xor
rol
pushf
cmp
shl
cmp
loope,pn
xchg
lret
ror
sar
mov
xchg
nop
mov
jno
mov
mov
clc
jle
or
call
pop
and
ret
dec
mov
pop
mov
mov
sar
pop
push
dec
mov
inc
mov
ret
push
sub
mov
out
pop
test
adc
cmp
stos
jnp
push
add
xor
stc
ret
mov
addr16
ljmp
mov
xchg
mov
and
test
jnp
lods
jge
aaa
push
mov
push
cwtl
std
sub
jnp
dec
sbb
dec
push
xchg
lret
shll
mov
sub
int3
jns
mov
cs
mov
xor
cmp
xlat
cmp
fdivs
ret
or
test
sub
imul
mov
push
xchg
mov
mov
jbe
push
add
ret
movsl
jp
mov
ss
sub
aas
and
pop
add
mov
test
call
pop
mov
aad
inc
pop
fsubs
cwtl
imul
cmp
push
inc
aaa
mov
inc
push
pusha
sub
lock
mov
xchg
cmpsb
outsb
leave
stos
jp
pop
fisubl
out
add
xor
call
push
scas
xlat
lret
lret
pop
int
mov
fcom
mov
cmp
pop
stc
jb
lcall
stos
xchg
and
and
mov
aaa
mov
stc
xchg
stos
ffreep
xor
icebp
sub
mov
cmp
rorb
dec
jl
ficoml
inc
std
out
in
decl
inc
int
iret
cmp
xor
and
push
mov
or
jge
lret
pop
jg
mov
jl
mov
adc
icebp
adc
pop
jmp
stos
push
int3
mov
or
scas
lret
sbb
xor
mov
cmp
cmp
mov
ret
and
mov
jns
aad
lret
jns
xchg
inc
mov
xchg
into
ret
aas
test
lods
push
mov
aaa
add
call
fwait
xchg
mov
adc
adc
test
cmpsl
lahf
mov
incb
and
cmp
dec
dec
mov
jb
loop
pop
aaa
push
jecxz
subb
in
jne
pop
fisttps
mov
cld
lds
xorl
xchg
push
sub
shll
test
std
lcall
cmpsl
test
or
mov
popa
cmp
pop
inc
stos
cmp
scas
mov
sahf
ja
jno
jge
into
mov
xor
cmp
movsl
jnp
shr
stos
add
lcall
gs
mov
out
int
loope
fstpl
lods
xor
cwtl
pop
add
loope
cmpsl
scas
idivl
cmp
push
inc
test
movsb
and
adc
push
es
test
enter
lods
dec
mov
sub
mov
or
repnz
push
dec
dec
add
sub
cs
sahf
pop
ret
or
xchg
and
mov
out
lds
clc
mov
test
mov
ficoml
sti
mov
inc
add
push
test
sbb
clc
mov
arpl
mov
mov
push
sub
idiv
cltd
sub
ja
cmp
jae
mov
scas
sbb
incb
mov
daa
push
jl
sbb
imul
into
mov
push
fs
xchg
cld
jno
mov
es
pop
jbe
dec
pop
xchg
jne
aam
mov
inc
or
sub
test
fs
sbb
in
mov
dec
sbb
sub
mov
inc
rcll
mov
sub
inc
push
jp
ficompl
leave
sahf
cli
adc
mov
sbb
adc
adc
mov
mov
insb
das
and
insl
je
xlat
sub
or
sbb
mov
clc
fimuls
sub
jns
mov
pop
add
and
insb
clc
mov
or
xor
jl
mov
xor
mov
xchg
xor
pop
ds
outsb
js
xchg
cwtl
bound
adc
imul
mov
call
xchg
pop
fisttps
fs
dec
call
shlb
cwtl
pop
inc
add
inc
dec
in
rorl
pushf
fisubl
mov
cs
inc
pushf
bound
mov
mov
pop
mov
xchg
mov
push
jle
adc
push
aas
cmp
mov
and
int
add
stos
mov
mov
ficoms
mov
xor
sub
popf
push
call
lahf
sbb
scas
nop
or
cmp
movsb
sbb
stc
insb
push
cmpsl
aas
popf
daa
jns
arpl
aas
popf
or
mov
adc
rorb
mov
dec
dec
cmp
fistl
orb
pushl
dec
cli
mov
shll
nop
ja
xor
mov
sub
xchg
adc
and
sub
insb
cmpsb
out
inc
add
jmp
dec
shl
orl
mov
popa
xor
into
pop
or
push
cmp
sbb
jb
mov
jg
pop
cmp
cmp
sti
out
xlat
adcb
cmp
stos
int3
mov
cmp
pop
sbb
lods
movsb
std
icebp
in
jp
sbb
es
xor
or
inc
test
and
stos
mov
fwait
add
sbb
adc
lret
mov
or
mov
cmp
fs
jge
orl
adc
push
cmp
loop
stc
mov
jns
jg
insb
mov
stos
jp
pop
sub
mov
shlb
cmpsb
xor
lods
pusha
mov
je
push
ret
cmp
add
or
push
add
es
push
dec
adc
hlt
fildl
stos
add
int
pop
popa
aaa
pushf
push
popf
int3
popf
add
sub
fxch
sub
je
nop
push
dec
jmp
popf
ds
cmpsl
rol
call
addl
shlb
ficoms
xlat
inc
add
std
push
mov
js,pt
dec
xchg
stc
push
pusha
and
inc
aaa
push
pop
dec
test
out
call
xor
push
cmp
cmp
cwtl
dec
sbb
aam
inc
add
popf
mov
mov
shll
inc
subl
fdivl
in
mov
jp
in
addr16
subl
shll
cmp
mov
pop
in
or
test
dec
out
lret
sub
nop
mov
jb
fisttpll
popa
xchg
test
test
mov
pop
pop
movsl
xor
outsb
or
pop
popf
loop
pop
pusha
cmpl
pop
dec
cmp
sbb
imul
dec
call
mov
test
cmc
inc
imul
lret
xchg
gs
xchg
repz
gs
rolb
icebp
bnd
sub
inc
jns
or
add
das
clc
pop
div
pop
dec
pop
mov
sahf
and
negl
aad
inc
jl
fstpt
inc
test
push
pop
pusha
push
ss
outsb
dec
push
js
jnp
push
popf
pop
jns
aad
dec
mov
add
jno
loopne
push
jl
push
mov
filds
cmp
aaa
punpckhbw
pop
call
nop
push
in
mov
ss
inc
cmp
xchg
inc
aaa
push
pop
dec
pmaxsw
sbb
fs
pop
lods
jno
push
xor
xor
push
sbb
out
push
sub
scas
or
adc
negl
or
in
pop
mov
aas
and
cltd
sub
jp
insb
dec
adc
les
jmpw
mov
cmpps
in
es
setno
aas
jae
mov
add
sub
stos
pop
ljmp
add
int3
mov
stc
cmp
faddp
cmp
jb
and
add
fcmovbe
push
das
movsb
jnp
insb
xchg
insb
dec
mov
mov
lret
push
inc
pop
out
hlt
cmp
mov
mov
insl
pushf
lret
adc
adc
in
xlat
xchg
iret
push
ret
icebp
mov
aad
cmc
dec
xchg
sbb
cmc
jge
mov
sub
ds
imul
sti
lahf
mov
mov
pop
mov
mov
sbb
pop
ja
or
negb
mov
cld
sub
sub
lret
push
mov
xor
loope
sbb
hlt
xchg
insb
inc
mov
xchg
mov
test
leave
popf
int
bound
mov
imulb
sahf
cmp
xor
jl
lret
ficoms
mov
ficoms
mov
inc
cmpsb
push
out
mov
sub
ret
push
jmpw
bound
jb
inc
in
adc
jl
inc
popf
dec
jl
mov
lahf
xor
js
pop
push
adc
and
inc
dec
fldenv
mov
inc
outsl
lret
fisubl
push
lahf
movsl
hlt
sub
and
xchg
and
jg
std
push
sbb
in
sbb
sbb
adc
sahf
test
adc
loopne
femms
jmp
pushf
xchg
mov
cmpsl
sub
pop
out
test
sbb
icebp
mov
sbb
inc
sub
and
add
sbb
daa
adc
push
gs
and
cmp
adc
pusha
dec
repz
aam
adc
and
andb
icebp
outsl
xchg
out
lock
push
nop
data16
icebp
inc
int3
ror
movsl
add
das
subl
js
clc
xchg
push
lret
imul
mov
out
lods
pop
add
call
pop
fcmovnu
mov
adc
shll
pop
out
pushf
pop
and
outsb
add
int3
iret
mov
and
sbb
pop
adc
and
dec
xchg
add
rcrb
mov
addl
inc
or
push
dec
add
dec
adc
adc
and
dec
adcl
addb
push
pop
stos
adc
pop
jo
dec
incb
dec
movaps
adc
dec
sub
jb
iret
mov
ljmp
movsb
cltd
mul
mov
or
and
push
sbb
pop
adc
add
sbb
or
add
cmp
rol
daa
mov
sub
sub
cmp
outsb
xor
and
pop
jmp
pop
adc
add
adc
or
or
pop
jecxz
scas
adc
mov
mov
popf
inc
and
push
cmpsl
pop
xchg
in
pop
adc
add
xor
xlat
pop
adc
mov
mov
or
push
hlt
pcmpgtw
xchg
das
mov
or
dec
stos
adc
jo
dec
loopne
ja
sub
adc
push
sbb
mov
cmpsl
pop
xorl
js
sub
sub
icebp
cmp
repnz
sahf
sbb
pop
jne
xchg
mov
fwait
rcrb
andl
push
aaa
std
add
daa
mov
int
shrb
cmp
add
data16
int
gs
in
sub
lods
inc
icebp
jo
add
mov
cmp
jo
inc
inc
dec
mov
jns
dec
fcomip
aad
adc
lock
imul
shll
mov
lahf
es
push
enter
movsb
shll
xchg
add
push
cmpsb
std
adc
divb
aam
push
sbb
shll
and
movsb
lret
and
movsl
std
std
aam
jne
fbld
imul
rcl
jne
mov
lahf
daa
int
imul
shll
incl
es
xorb
add
xchg
mov
ret
popa
shlb
rcl
jne
mov
lahf
es
push
enter
movsl
shll
xchg
add
lods
packssdw
jae
pop
mov
xor
adc
push
pop
imul
and
insl
lret
mov
lock
lds
scas
xor
mov
pop
lret
arpl
lcall
mov
sub
mov
scas
jle
stc
ret
xchg
xchg
in
pushf
fsubs
push
movsl
and
add
imul
and
dec
jg,pn
and
mov
adc
insl
lret
adcl
dec
aaa
add
mov
inc
pop
mov
push
or
sub
cmpsl
popf
sub
shlb
js
jns
adc
add
sub
iret
andb
lods
or
test
push
out
mov
inc
pop
mov
push
or
push
iret
push
sbb
mov
push
sbb
jge
fmul
or
pop
add
mov
mov
add
xchg
mov
xor
adc
xor
cmp
addr16
lods
int3
ja
jno
add
hlt
and
jb
jo
add
xor
pop
sub
push
rclb
pop
dec
loop
shll
iret
sbb
jp
sbb
jp
fstpt
ja
push
out
lods
sbb
adc
jo
ja
sbb
adc
jmp
fs
psrlw
xor
gs
int
mov
jo
jp
lock
sbb
popf
xchg
cmp
cvtps2pi
pop
shll
or
pop
lock
sbb
cmpsl
mov
cmc
bswap
xchg
data16
add
mov
imul
imul
test
loopne
add
aaa
jl
inc
and
sub
dec
clc
orb
lds
daa
inc
insl
adc
push
xchg
nop
popa
rcll
sbb
insb
lods
sbb
imulb
out
test
out
rcrl
test
xchg
xor
divl
pop
aad
loope
adc
sbb
enter
lods
sbb
in
aam
test
mov
scas
in
call
dec
hlt
clc
jns
sbb
adc
cmp
lods
and
lret
vmovss
jp
mov
lods
stos
loope
out
and
xor
fisubs
sbb
lods
cmp
into
lds
jp
pop
daa
lods
adc
lods
repz
fdivrl
sbb
mov
ja
sbb
mov
lods
xchg
inc
xchg
lret
movsl
sbb
adc
lods
sbb
testb
out
aam
test
fnstenv
roll
rcrl
jp
mov
arpl
dec
cmp
sbb
mov
mov
and
jg
lods
sbb
push
pusha
pushf
jmp
lret
xchg
sbb
push
cltd
push
aam
test
push
dec
cmp
mov
push
and
jge
inc
call
ja
push
push
daa
dec
sbb
sub
test
push
mov
mov
and
xchg
or
test
fnstcw
pop
mov
sbb
adc
push
pop
adc
mov
cmc
sub
test
xor
jne
out
test
out
aam
test
xor
push
icebp
hlt
loop
mov
adc
jp
and
xchg
scas
xchg
sbb
jp
dec
mov
dec
inc
jo
cmpsl
clc
push
ljmp
test
inc
xchg
int
sub
adc
pushf
mov
sbb
sbb
nop
adc
lret
movsl
sbb
adc
lods
sbb
divb
out
test
out
aam
test
xor
sbb
xor
pop
or
repnz
or
test
lods
push
jge
lods
sbb
ja
sbb
in
sub
sahf
adc
mov
or
pop
imul
lds
aad
jo
sub
sbb
jae
cs
adc
fstp
sbb
sbb
movsl
sbb
mov
sbb
jecxz
jo
sub
sbb
sbb
pushf
out
cli
sbb
lods
ds
into
mov
sub
test
xor
idivb
adc
dec
aam
test
popf
xor
aam
lods
push
hlt
cs
loope
and
out
test
and
sbb
testb
lret
and
push
adcb
inc
fs
mov
mov
dec
sub
test
xor
out
test
out
aam
test
mov
mov
xor
xchg
jl
cmp
js
ss
movsl
sbb
xor
inc
call
test
idivb
psrlw
sbb
into
and
ds
imul
test
ja
sbb
into
and
fs
adc
jp
out
sub
sbb
push
out
lods
sbb
sbb
jo
ja
sbb
sbb
lods
jbe
pop
dec
sbb
and
out
lods
sbb
xor
jo
ja
sbb
sbb
ret
psubb
icebp
cltd
dec
lcall
out
and
out
enter
addr16
ljmp
cwtl
shl
xchg
xchg
scas
xchg
sbb
jp
fbld
cmp
bnd
lods
popa
mulb
mov
ja
push
out
lods
sbb
sub
jo
jp
sbb
ljmp
lcall
cli
aad
aas
push
dec
cmp
push
lea
sub
dec
int
fiadds
ds
dec
fnsave
sbb
sbb
sbb
lods
daa
lods
jnp
sbb
lds
jno
sbb
aas
ja
adc
ja
sbb
sti
movsl
jo
sub
sbb
adc
mov
das
mov
movsl
sbb
nop
push
out
lods
sbb
ret
movsl
jo
sub
sbb
adc
mov
in
in
movsb
xchg
clc
sahf
jae
add
xor
and
xchg
out
test
stos
sbb
scas
add
and
adc
enter
ss
icebp
jmp
test
and
rorl
push
rorl
lods
sbb
imulb
out
test
out
aam
test
xchg
xor
jb
xor
push
xchg
jno
or
test
push
cmp
lock
or
insb
outsb
in
ret
call
ja
adc
ja
sbb
sti
movsl
jo
sub
sbb
adc
js
mov
and
jp
pop
out
lods
sbb
xor
jo
ja
sbb
sbb
adc
fistps
dec
aam
test
add
pop
in
cmpsl
mov
mov
lea
setne
lcall
pusha
mov
adc
ja
sbb
sti
movsl
jo
sub
sbb
adc
fisttps
loopne
push
xor
cli
lret
and
xchg
xchg
sti
sbb
or
or
imul
mov
and
bound
jns
ljmp
fwait
lods
and
es
lds
jp
pop
sub
inc
and
pop
aad
pusha
mov
sbb
adc
sub
mov
or
mov
inc
shl
mov
cmp
cmp
jp
mov
push
ret
sbb
stos
pop
es
cmp
jp
out
jge
lods
sbb
in
add
ja
push
out
lods
sbb
sbb
jo
jp
sbb
sbb
out
pop
dec
dec
pusha
pop
jp
mov
ljmp
cwtl
shl
xchg
xchg
scas
xchg
sbb
jp
fbld
dec
xor
push
push
pushl
mov
adc
lods
sbb
imulb
out
test
out
aam
test
xchg
xor
insb
adc
cmp
cmc
ds
lret
and
pop
mov
or
mov
lret
jp
sbb
and
fstpt
inc
xchg
test
lods
mov
mov
xchg
nop
add
mov
inc
ja
pop
out
lods
sbb
xor
jo
jp
sbb
sbb
mov
adcl
pop
test
sbb
fwait
pushf
lret
cli
ss
out
push
cltd
jp
adc
pop
rolb
jg,pt
and
and
jmp
mov
mov
ret
push
loopne
in
xor
adc
xor
xorb
fwait
push
and
mov
or
repz
lock
sbb
loop
fdivrp
jbe
sbb
add
mov
imul
imul
xchg
loopne
mov
xor
push
cli
orps
jns
adc
adc
cmp
lods
mov
lret
lds
jp
popa
lods
push
push
fidivs
xor
popf
call
loopne
insb
lods
sbb
imulb
out
test
out
aam
test
xchg
xor
dec
xchg
cmp
cltd
xchg
lahf
divb
or
push
add
leave
mov
shlb
push
xchg
std
sbb
lds
jns
dec
outsl
movsl
push
mov
lods
push
mov
dec
cmp
mov
xor
insb
or
mov
in
ds
sbb
jb
sbb
sbb
into
and
xchg
sub
jns
push
addr16
sbb
jp
dec
cmp
lods
dec
lcall
icebp
push
jp
cmp
mov
mov
pop
jo
and
jnp
jb
xchg
cmpl
test
sbb
ljmp
cs
imul
imul
test
fbld
mov
pop
stc
jmp
lods
sbb
fs
call
loop
addr16
jp
out
jmp
lods
sbb
sbb
enter
lods
sbb
jne
sbb
pop
iret
mov
pop
cmp
fnstsw
sbb
ds
cwtl
inc
xchg
lock
pop
xchg
cmp
into
and
adc
cmp
lods
xlat
mov
lret
lds
jp
jbe
stos
scas
fs
fists
dec
cmp
insb
popa
mov
sbb
pop
dec
sbb
xchg
cmp
bound
sbb
lret
and
test
sbb
js
ss
shlb
test
mov
ja
sbb
repz
into
and
jnp
add
pop
dec
sbb
dec
outsb
ds
adc
adc
mov
repnz
and
sbb
into
and
adc
adc
ja
cwtl
fwait
in
jbe
mov
and
pop
dec
and
jns
ret
sbb
into
and
sub
adc
ja
cwtl
fwait
mov
jns
in
outsl
adc
cmp
into
lds
jp
add
fists
push
jbe
sbb
icebp
dec
pop
push
fcomi
lret
pushl
aad
pusha
mov
aas
xchg
sbb
ljmp
dec
mov
imul
imul
test
dec
mov
mov
and
icebp
ja
mov
rorl
lahf
inc
js
lret
and
test
jns
in
outsl
adc
cmp
into
lds
jp
add
push
aas
push
xchg
xchg
psrlw
lods
sbb
notb
adc
cli
rcrl
test
nop
xor
jge
jo
push
and
mov
rorb
test
fdivr
pop
dec
sbb
cmp
dec
or
add
push
mov
sub
inc
push
mov
out
pop
test
xor
or
adc
xchg
inc
cwtl
and
lret
dec
inc
scas
jg
xchg
mov
push
dec
int
jbe
ret
or
ss
ja
fmull
idiv
ss
idiv
int
add
ss
stc
or
cmp
out
xchg
add
inc
inc
inc
mov
aam
inc
dec
ret
lock
add
pop
shr
jo
pop
popa
sarl
mov
xchg
and
insl
sahf
push
push
or
xor
out
lock
sar
neg
in
mov
out
push
mov
sub
cmpsl
lods
push
push
lret
push
out
mov
push
pop
sti
test
push
out
inc
inc
fstl
pop
arpl
in
mov
or
cmpsl
lret
pop
xchg
fneni(8087
pusha
std
dec
je
lds
inc
xor
xorl
mov
lahf
out
lret
dec
fisttpl
or
and
jb
or
dec
mov
add
nop
add
mov
add
inc
cmp
out
lods
and
les
sbb
pop
ret
inc
inc
dec
xlat
loope
mov
or
int
jl
jno
or
push
or
loope
popa
lahf
push
xor
pop
add
xor
or
rorb
jne
fcompl
cmpsl
cmp
call
test
mov
mov
push
adcl
cmp
inc
nop
and
decb
push
test
ficomps
addr16
push
push
xor
shrb
stos
cmc
jno
mov
fnsave
and
mov
cmpsb
ds
sysexit
pop
xor
addr16
and
jno
mov
lret
fmul
hlt
mov
push
sti
inc
ds
and
test
add
fimull
clc
repnz
incb
mov
mov
jno
popf
pushf
jle
loopne
test
xorl
cmovbe
xchg
inc
cmp
call
pop
repnz
xchg
and
addr16
in
and
or
mov
dec
jne
clc
movhps
aaa
das
imulb
nop
es
jmp
adc
mov
jl
orb
shlb
in
sete
int
repz
push
ja
lea
xchg
shlb
xor
xor
mov
fistps
mov
sbb
push
push
sahf
in
test
pop
hlt
pop
mov
shll
leave
xor
std
dec
cmp
ljmp
jb
fs
aam
mov
scas
xchg
push
rcrl
pop
clc
sbb
jae
pop
and
negl
sub
mov
outsl
or
xor
adc
mov
mov
sub
fidivs
aaa
cmp
xor
xchg
cmpsl
sub
push
xchg
lds
push
stos
pop
in
loop
sahf
mov
pop
ss
cltd
enter
jp
test
rclb
mov
lahf
mov
std
ss
adcl
mov
hlt
prefetch
inc
inc
cmc
aam
shrd
ja
add
lods
mov
dec
cmp
xchg
cwtl
jo
mov
sbb
jl
lods
and
aad
mov
fisttpl
cltd
movsl
add
sbb
pop
or
pop
jae
jp
hlt
std
ss
push
jb
xchg
dec
movsb
jno
cmp
stos
pushf
sub
je
dec
and
pop
xchg
loop
fwait
dec
and
mov
jbe
jo
cmp
xchg
dec
movsb
insl
pop
jmp
mov
adc
push
or
lods
mov
idiv
movsl
pushf
or
push
in
test
inc
nop
cmp
shlb
repnz
cmp
dec
out
add
fildll
cmpsb
test
add
xchg
xchg
arpl
pop
xchg
data16
aad
cmp
sbb
and
xchg
jmp
hlt
mov
push
imul
and
es
loope
xlat
call
dec
js
mov
mov
gs
imul
arpl
jp
pop
lahf
mov
sub
pop
lcall
xchg
dec
lock
ficomps
lahf
add
sbb
dec
push
pop
in
sub
adc
xchg
dec
ljmp
popf
push
xchg
jp
in
add
cmpsb
sbb
xor
gs
lea
sbb
testl
mov
leave
sub
cmp
pop
mov
add
hlt
ror
mov
ljmp
and
in
jno
ss
idivb
lock
mulb
stos
push
out
or
mov
cmp
aad
xsha1
cmpsb
dec
push
inc
and
pop
mov
jmp
jae
rol
dec
pop
push
jbe
cmp
mov
test
and
mov
mov
cmc
std
test
fisubrl
lret
add
nop
push
cmp
std
insl
push
daa
pop
push
cmc
std
ss
test
ljmp
ret
mov
leave
movsb
test
insl
cmp
mov
mov
adc
ss
divb
cmp
jg
imul
std
insl
cmp
jg
das
idiv
xor
mov
mov
std
test
outsl
jae
mov
imul
mov
call
lds
mov
stos
int
out
adc
cmc
in
iret
dec
pop
push
jg
inc
push
out
add
mov
cmpsl
or
and
mov
test
neg
inc
inc
in
or
jno
mov
test
xor
inc
sahf
popa
mov
ret
adc
sarl
add
mov
xchg
subl
test
movsl
inc
adcb
lods
lods
loopne
pop
popa
push
ss
cmc
adc
bound
stc
sbb
out
or
cld
cld
xchg
lds
pop
push
push
push
imul
mov
out
icebp
std
notl
movl
mov
repz
js
arpl
adc
idiv
inc
movsb
icebp
cltd
xor
and
jnp,pt
addr16
fistps
jo
das
sbb
cld
iret
shl
pop
mov
cmc
mov
inc
std
ss
int3
sahf
int3
testl
lahf
jns
pop
lahf
push
lea
mov
and
ret
outsl
pop
mov
and
jg
aaa
mov
idiv
sbb
mov
out
sub
sub
jbe
jbe
xor
test
and
fistl
cmp
iret
xor
push
pop
notl
stc
push
mov
mov
push
or
adc
add
pop
mov
rcll
rcrb
or
mov
jg
push
mov
fisubrl
dec
aam
ja
call
push
add
mov
add
add
mov
pop
and
xchg
and
push
aam
gs
ret
push
xor
adc
rclb
xor
test
xchg
jne
or
shl
mov
cmpsl
dec
sub
aad
cmp
clc
jb
mov
int
mov
jb
icebp
cmc
xchg
push
adc
add
stos
mov
rcll
shl
mov
aas
idivl
fs
mov
sbb
dec
test
add
sbb
and
sub
jbe
jbe
xor
test
and
fistl
cmp
iret
xor
cld
clc
xchg
rol
mov
out
mov
mov
ds
mov
out
out
xor
push
jp
add
test
mov
ds
imul
pop
pushf
add
xchg
pop
adc
jle
ffree
sub
lock
or
pop
cmpsb
jmp
int
pop
ds
pop
imul
stos
repnz
push
push
dec
jne
into
repnz
daa
insl
into
cmp
mov
xor
fimull
or
push
in
in
sbb
orl
xchg
jecxz
arpl
mov
jecxz
fdivr
loope
adc
and
sbb
mov
stos
in
adc
sub
cmp
lock
mov
push
pop
mov
mov
shl
in
push
test
movsb
sti
cwtl
enter
loopne
and
jb
cmp
mov
ret
fldcw
pop
jae
loopne
sub
mov
fldl
cmp
mov
cmp
jbe
notl
jg
mov
idivb
out
lock
xchg
xchg
or
inc
ljmp
ljmp
jge
adc
mov
or
fcomps
sbb
jne
mov
or
or
arpl
sub
jb
mov
andl
test
ss
dec
mov
in
sahf
lcall
jecxz
and
mov
ja
push
push
and
jmp
sbb
cltd
push
stos
xchg
je
cli
mov
inc
fsubrl
or
push
pop
fidivl
fisttpll
sub
cld
mov
lret
cmp
dec
pusha
loope
shlb
aaa
dec
shrl
pop
in
push
push
xchg
adc
test
and
sbb
addr16
mov
xlat
mov
loope
lea
shlb
or
cld
sahf
ret
or
fwait
imulb
daa
sbb
shl
loop
mov
jae
imul
mov
iret
std
mov
dec
pop
sti
repz
adc
jmp
inc
pushf
xchg
andb
fldenv
add
sub
in
test
push
shll
xchg
jne
shll
adc
and
repnz
repz
into
cmp
xor
fmulp
push
enter
sub
inc
shl
ds
lret
xchg
xchg
out
sbb
lods
dec
mov
mov
bound
push
rclb
sbb
inc
or
sti
and
aam
cmc
inc
add
pushf
sbb
enter
aam
imul
jae
dec
iret
cmpsl
sub
pop
jge
inc
mov
mov
leave
add
adc
adc
daa
ljmp
lea
cmp
lea
push
fwait
iret
call
call
jg
les
call
ret
add
or
cmc
cmp
movsb
test
sbb
xchg
add
ret
push
jmp
dec
rcrl
rcrl
imul
add
add
xchg
dec
jecxz
pop
sub
mov
cmpsb
push
mov
jl
jp
lods
int3
cmp
push
cmp
daa
push
ffreep
popa
in
dec
pop
jmp
mov
daa
lods
imul
sbb
ja
shrl
movsl
test
ljmp
jle
mov
aam
fisttps
fcom
or
inc
mov
and
sbb
mov
jae
mov
dec
xchg
mov
mov
in
and
lods
test
movsl
jl
loopne
pop
rcr
sbb
sub
inc
clc
mov
popf
dec
rcr
cmp
lret
out
xchg
call
outsl
aad
jp
cli
out
stc
fadd
push
es
jle
loope
sbb
xchg
imul
pop
lret
push
stos
mov
xor
js
fxch
and
cwtl
aaa
hlt
cmp
icebp
inc
dec
mov
and
mov
fimuls
jb
jge
and
jecxz
aaa
pushf
nop
dec
jae
orl
cltd
mov
out
mov
notl
pop
cmp
ret
pop
and
rorl
fcmovne
pop
dec
fwait
sbb
jnp
nop
loope
orl
aad
push
loopne
daa
inc
adc
lret
fcmove
xchg
fdivs
and
sub
sbb
cmp
inc
dec
push
mov
push
pop
lret
pop
in
sbb
or
imul
into
mov
push
sub
pop
stos
adc
inc
mov
sub
inc
insl
cmp
enter
xor
call
mov
pop
inc
dec
and
mov
push
xchg
push
pop
xchg
inc
js
aas
and
mov
push
lret
std
dec
aas
push
mov
and
sbb
adc
lcall
loope
push
cmp
jnp
hlt
test
cld
xchg
and
dec
xchg
xlat
adc
push
xor
mov
push
scas
and
scas
data16
imul
pop
push
aad
clc
leave
mov
outsb
sub
push
push
aaa
dec
repnz
jmp
addr16
or
icebp
shr
sbb
scas
movsl
addr16
or
pop
mov
scas
jmp
sahf
in
sbb
sub
dec
xabort
jg
pop
push
dec
xchg
dec
add
add
add
lds
lahf
cmp
sbb
or
repnz
mov
jo
std
dec
loope
sbb
xor
and
pusha
test
ret
push
dec
repnz
jmp
jne
sub
fwait
popa
or
leave
add
cmp
cmp
scas
lods
push
mov
ss
cltd
test
push
pushf
iret
inc
aaa
out
jg
mov
push
jmp
fs
mov
or
daa
jmp
adc
imul
divb
cmc
and
es
sti
add
loope
sbb
jns
scas
loope
subl
stos
out
cmp
ret
outsl
push
cwtl
sub
in
cmp
subb
jae
mov
inc
sbb
mov
fildll
daa
xchg
andb
loope
mov
loope
cmpl
inc
and
push
push
xchg
icebp
pop
inc
sbb
pop
push
testl
or
lcall
clc
gs
and
push
cmp
pop
or
ret
xlat
loope
subl
push
pop
gs
insl
std
dec
ja
repz
or
mov
mov
and
xchg
inc
stos
sbb
inc
mov
xor
fldl
lea
inc
repnz
fisubrs
sub
popf
add
data16
pop
push
ljmp
loope
fdivrs
stos
mov
stos
jl
aas
add
dec
inc
sti
cmp
popa
cmpsb
inc
ret
pop
rorl
loope
mov
push
fcmove
xchg
jns
add
jne
inc
ret
jb
js
les
sub
int
sub
sbb
addr16
test
das
repnz
push
aaa
fsub
sbb
stos
pop
outsb
mov
scas
xor
imul
negb
mov
jmp
mov
adc
sub
shll
scas
jbe
add
aad
sub
sbb
fadds
push
and
sub
sbb
cmpsl
jge
subl
adc
xchg
add
jecxz
adc
push
cltd
out
jb
xor
out
mov
sbb
sub
or
jp
pusha
ja
movsb
mov
sti
shr
inc
dec
iret
sub
ret
jb
jecxz
mov
xor
xchg
dec
fcomps
or
push
pop
inc
cwtl
dec
daa
mov
mov
sub
sbb
cltd
das
bnd
ficoml
dec
aam
rcrl
pop
insl
push
add
xchg
xor
inc
sahf
in
sub
sbb
xor
sbb
xchg
cwtl
cmp
mov
loope
cmp
cmp
jns
subl
sti
stos
and
enter
into
movsl
xlat
jg
loope
jge
inc
dec
cmpsl
xchg
jnp
xchg
adc
xor
das
mov
jbe
outsl
shrb
sub
fcomp
ljmp
xor
sub
jae
imul
jno
push
jno
xor
sub
movsb
out
fnstenv
sub
xor
sahf
lcall
mov
adc
cmpsb
cmpl
repz
test
test
sbb
pop
out
push
imul
xlat
ljmp
jmp
add
and
fisubrl
xor
sbb
pop
push
divl
outsb
mov
push
scas
iret
pop
sarb
pushf
xchg
push
jbe
sbb
sbb
mov
push
push
xchg
adc
lret
cwtl
mov
ds
sbb
inc
je
mov
inc
loope
cmpl
in
scas
pop
mov
loope
sub
stc
xor
or
jmp
aas
or
je
popf
dec
lcall
jge
sar
add
pop
test
lods
adc
and
jae
jns
subl
clc
shrb
add
sub
jl
mov
loope
rcrl
inc
push
cmp
mov
pop
lea
insl
aam
leave
inc
in
inc
sub
sbb
sub
and
fldcw
sub
sub
inc
ret
adc
hlt
sbb
adc
xor
adc
in
ret
subl
aam
adc
lahf
sub
imul
mov
scas
mov
mov
idivb
shrb
or
jbe
mov
shrb
xor
push
test
fsubp
subb
imul
pop
loope
call
cmp
mov
enter
imul
inc
imul
iret
cmp
add
jne
int3
sbb
add
sub
mov
and
dec
sti
scas
sub
mov
insl
inc
pop
jne
sub
cmp
sub
mov
xor
stos
adc
sub
fistpl
pusha
mov
mov
cld
dec
mov
hlt
scas
sub
push
cmpsb
loope
jl
das
lods
les
test
mov
lock
imul
mov
stos
pop
in
inc
ss
pop
push
mov
push
xchg
mov
cmpsb
jg
ja
dec
mov
mov
shl
repz
mov
xor
stos
lods
dec
and
filds
xor
push
shl
xor
mov
mov
mov
imul
repnz
pop
idivb
adc
mov
inc
pop
fisubl
adc
sub
pop
test
test
lods
cmpsb
aam
shll
mov
fstpt
mov
ljmp
sarb
sub
leave
popa
jns
xor
push
sub
int
loop
mov
add
sub
imul
roll
orb
push
dec
lods
jb
lods
mov
aas
jmp
xor
shlb
or
dec
imul
aas
ljmp
pop
jae
rolb
scas
sub
inc
jmp
lcall
not
test
mov
jge
popl
pop
lret
jbe
das
or
ds
stos
inc
push
inc
dec
scas
sub
mov
push
xchg
add
lock
sub
cltd
sbb
push
and
jmp
push
repz
pusha
mov
mov
pop
mov
inc
lret
mov
push
in
in
arpl
cmp
sub
in
pop
and
xchg
mov
xor
sub
fnstsw
adc
out
push
pop
sub
and
pop
shrb
push
rcl
in
inc
pop
and
mov
or
popa
notl
push
mov
push
mov
popf
cltd
lods
xor
dec
mov
imul
and
push
mov
mov
stos
inc
clc
jmp
cs
enter
imul
in
fmull
ss
lods
enter
imul
sub
mov
and
push
aad
inc
jmp
sti
xchg
movsb
imul
add
dec
xchg
cmp
cmpsl
dec
ss
idivb
repz
sub
imul
movsb
imul
xchg
not
lds
leave
mov
psubq
inc
sbb
sub
fdivl
mov
and
and
xor
pop
mov
inc
xlat
rcrb
pop
ljmp
out
inc
push
mov
addr16
outsb
mov
rsqrtps
in
mov
subb
clc
jnp
insl
lods
add
xor
sub
lcall
push
push
mov
adc
pop
xor
test
fidivrs
mov
cmp
inc
xchg
sub
imul
or
stos
popa
ffreep
enter
add
aam
aad
or
ss
in
xchg
aad
ror
popa
push
repz
divl
pop
repz
sub
imul
push
mov
sahf
je
xor
or
push
jne
imul
mov
shrl
and
imul
cltd
es
ljmp
cmp
call
mov
sub
ss
mov
mov
mov
in
add
scas
sub
rol
mov
pushf
jne
imul
and
and
mov
xor
repnz
xchg
aas
push
bound
rcrb
push
sub
sbb
and
shrb
imul
scas
adc
jno
rorb
ja
add
mov
mov
sub
arpl
lcall
leave
es
insl
inc
pop
adc
repz
in
mov
mov
hlt
icebp
pop
mov
cmpsb
subb
and
adc
xchg
xchg
cmpl
aas
adc
sub
fwait
mov
xlat
dec
mov
or
fsubp
scas
and
sub
adc
movsb
pushf
outsb
push
idiv
cmp
sbb
add
call
imul
mov
xor
movsb
imul
mov
adc
in
stos
add
xchg
cmp
aad
stos
push
jbe
imul
aad
clc
inc
shrb
shlb
or
cmc
loop
xor
inc
and
rol
mov
mov
mov
pushf
out
int
in
cwtl
push
dec
mov
add
add
add
dec
pop
shll
cmpsl
xstore-rng
cmpsl
shll
cmpsb
cli
and
icebp
int
testb
es
sti
daa
das
shll
sarb
sti
mov
xchg
pop
mov
loope
xchg
cld
ror
dec
dec
dec
sub
pop
icebp
int
movsl
rolb
cwtl
cmp
dec
sub
push
loopne
pop
icebp
int
add
pop
jnp
add
dec
pop
test
hlt
pop
dec
add
dec
or
add
into
dec
pop
icebp
dec
cmc
xchg
push
inc
mov
cli
int
pop
cmp
jmp
pop
rclb
call
fcompl
xor
sarl
jbe
stc
es
lods
rcrl
mov
push
aaa
inc
out
cmp
ret
aas
pop
xchg
nop
adc
cmp
sarb
pop
xchg
mov
jg
call
sti
icebp
dec
cmpsb
aam
ret
inc
out
int
pop
insb
scas
scas
mov
call
es
out
int
int
out
xor
sti
jo
out
adc
daa
movsl
aam
pusha
add
push
fmul
dec
pop
icebp
loope
and
pop
icebp
lods
jbe
aam
dec
pop
xor
test
lock
pop
dec
or
push
dec
ljmp
int3
dec
pop
icebp
inc
and
icebp
int
add
ja
icebp
int
xchg
loop
dec
pop
push
cmpsl
rcrl
cmpsl
sbb
movsl
adc
imul
add
sub
pop
icebp
and
push
or
adc
or
adc
int
pop
icebp
nop
iret
loope
dec
or
faddl
rorb
pusha
stc
lock
int
pop
cwtl
or
int
addr16
cltd
mov
jecxz
loopne
pop
pop
xchg
cli
scas
sar
lock
cmpsl
ret
test
jno
jbe
inc
loope
shl
stos
int
cmp
jl
pop
pop
popa
sbb
jo
cli
int
pop
bswap
scas
lods
mov
add
leave
sbb
int
and
stos
xchg
push
aam
dec
in
dec
mov
mov
cltd
int3
sub
repnz
xor
dec
pop
icebp
les
lods
cmp
push
movsl
add
mov
push
loope
pop
icebp
int
and
inc
adc
xchg
arpl
ss
aas
dec
stc
popa
into
push
jle
aaa
push
jp
dec
pop
icebp
bound
aas
in
int
pop
dec
xlat
bound
mov
test
push
pop
jns
ret
andb
outsl
inc
push
int
pop
jp
xchg
jo
dec
cmc
pop
fcomps
ret
sahf
subl
jbe
mov
int
pop
pop
mov
or
test
dec
dec
jo
mov
call
test
test
out
adc
outsl
inc
gs
pop
pop
icebp
int
push
xor
pop
icebp
int
imul
stos
push
xor
and
sbb
cwtl
loope
pop
and
ja
icebp
int
jbe
clc
lcall
lcall
stos
divl
int3
js
pop
icebp
dec
lods
adc
dec
add
and
mov
mov
daa
jae
and
aam
test
and
cmp
ret
bound
sbb
int
jb
mov
dec
pop
sbb
push
lahf
cmp
mov
push
and
or
ds
sahf
jnp
mov
jns
int
pop
push
jb
xchg
ret
xchg
aam
dec
pop
jp
sbb
dec
shll
push
xchg
and
jae
pop
outsb
into
dec
pop
icebp
bound
pop
icebp
adc
sahf
in
scas
push
lock
cmpsb
insb
cmp
icebp
int
out
add
sub
pop
xchg
scas
lcall
dec
pop
ss
mov
cli
or
cmpsl
aam
pop
or
and
scas
cld
sbb
mov
dec
adc
pop
icebp
int
lock
push
inc
pop
int
pop
rcll
mov
xor
dec
pop
icebp
test
xchg
int
pop
je
insl
cmp
int
pop
push
loopne
pop
icebp
int
lods
aam
dec
or
mov
out
lret
bound
icebp
test
jl
add
movlps
pop
int3
dec
pop
icebp
ss
and
cwtl
outsl
pop
test
xchg
sarl
and
int
push
shlb
pop
icebp
cmpsl
aam
cmp
inc
in
int
pop
jmp
in
push
cmp
and
icebp
int
cwtl
fbstp
dec
dec
mov
xor
dec
pop
icebp
int
xchg
adc
or
xchg
lret
shll
int3
dec
pop
in
in
adc
test
pusha
xor
mov
test
add
pop
icebp
into
dec
iret
inc
push
pop
icebp
nop
subb
mov
rorl
jbe
xchg
cmpsb
cli
pop
xor
into
lock
push
pop
jnp
in
jle
xchg
loop
push
and
dec
pop
icebp
bound
pop
icebp
int
cwtl
and
cmp
push
cmp
aas
xor
dec
sub
jne
or
rcrl
fs
pop
icebp
and
inc
sub
mov
into
push
insl
pop
pop
inc
fcomps
and
hlt
jbe
loop
dec
pop
jp
jle
in
int
pop
dec
popa
clc
ror
dec
jno
jl
pop
icebp
xor
daa
jp
push
lret
leave
xor
aaa
outsl
cmp
lds
pop
int
pop
and
setne
xchg
popa
ss
xchg
jnp
xchg
xor
out
cli
clc
shlb
int3
fs
pop
icebp
xor
cmp
daa
sub
int
pop
inc
mov
pop
out
pop
mov
popa
lret
int
leave
jns
daa
pop
sbb
dec
pop
icebp
jecxz
push
push
enter
mov
jnp
int
pop
or
mov
adc
sub
sarl
sarl
mov
pop
adc
in
fisttpll
scas
adc
sub
add
cltd
sbb
mov
mov
mov
and
jmp
mov
cmp
mov
cmp
sbb
inc
jnp
sub
sahf
push
adc
sub
sbb
sub
sbb
stos
cmpsb
pop
pop
fnstsw
in
xor
sub
sbb
orb
inc
push
shrl
push
and
adc
and
test
sub
add
out
mov
lods
sub
adc
mov
jmp
in
jo
rcll
stos
cmp
loope
xchg
inc
mov
mov
shlb
mov
adc
sub
jb
add
fmul
outsb
pop
jae
mov
or
push
mov
cmp
adc
jmp
cmp
aad
sbb
adc
sub
xor
xor
pop
adc
fisubrs
xchg
movlps
jle
adc
call
xor
and
sub
mov
mov
pop
adc
mov
fiadds
xor
add
aaa
sub
adc
mov
mov
sahf
and
jbe
subb
sub
add
add
cmp
aaa
jecxz
outsb
jo
or
mov
movb
sub
adc
lods
inc
mov
enter
add
loopne
pop
cmp
and
jmp
mov
mov
jg
pop
adc
addb
sbb
add
shrb
movsb
lock
push
pop
andb
push
mov
shll
adc
test
or
mov
push
shlb
test
dec
daa
inc
mov
jnp
adc
pop
andl
dec
xor
sahf
sbb
cmp
mov
sub
push
jle
push
mov
xor
mov
cmp
or
fadds
test
jbe
and
repnz
roll
jecxz
push
sub
inc
mov
adcl
dec
lock
sbb
xchg
xchg
xor
fsubrs
pop
adc
sub
rorl
xchg
js
adc
adc
inc
xchg
cld
jmp
gs
ret
in
test
push
xchg
int3
xor
xor
adc
orl
shl
adc
mov
pop
adc
add
adc
sub
cs
pop
hlt
cmp
adc
pop
dec
jno
pop
sbbl
das
push
jnp
adc
pop
add
push
sbbl
leave
xlat
mov
add
adc
sub
mov
mov
mov
pop
adc
repz
pop
push
pop
sub
dec
jecxz
add
push
loop
lahf
xchg
outsl
sbb
int3
cmp
vandps
pop
mov
outsb
mov
movsl
ljmp
xacquire
fistl
aaa
cmpsl
or
and
xchg
pop
pop
xchg
in
pop
addl
dec
adc
sub
add
sbb
movsl
dec
xchg
mov
and
sub
xchg
fisubs
lods
cld
mov
adc
call
jecxz
or
push
adc
sub
lahf
cmc
incb
adc
sub
jp
fwait
repnz
add
push
adc
sub
nop
insb
xacquire
stos
cmp
mov
sub
adc
mov
mov
sarl
mov
clc
cmp
cmp
popa
jae
push
jo
add
or
sub
sub
dec
movsb
push
jl
mov
repz
sahf
pop
dec
arpl
repnz
shlb
lods
add
cmp
pop
mov
inc
pop
sbb
dec
test
mov
mov
faddl
lcall
in
popw
jg
mov
mov
int
inc
mov
fldl
bound
sub
aaa
clc
pushf
test
scas
cmpsl
mov
stos
sub
adc
add
mov
and
push
mov
popa
push
mov
add
test
adc
add
adc
sub
fildll
jl
xchg
adc
and
ss
pop
lret
xchg
push
idivl
adc
push
das
mov
inc
out
sbb
sahf
mov
add
jmp
sbb
mov
and
adc
push
stos
jo
subl
in
out
xor
sub
push
js
pop
xor
inc
xchg
xor
fiaddl
adc
pop
in
and
das
stos
aad
push
adc
jnp
iret
xchg
aas
mov
pop
imull
add
adc
sub
iret
xchg
dec
mov
fdivl
cmpl
jmp
movsb
iret
mov
cmp
in
add
int3
and
mov
lea
scas
sub
adc
mov
mov
sti
in
pop
sub
stos
or
cmp
popa
scas
clc
mov
iret
mov
xchg
out
push
adcl
scas
inc
sbb
aad
lahf
mov
mov
fiaddl
adc
test
sahf
cmpb
add
leave
out
adc
dec
fcomps
outsb
adc
in
call
cmpsb
out
sub
sub
mov
fnstsw
pusha
stos
leave
mov
bound
pop
xor
mov
xchg
pop
xor
inc
push
mov
jnp
lahf
movsb
shlb
pop
pop
adc
sub
jo
hlt
mov
adc
mov
ret
jge
xor
mov
sub
push
adc
sub
int3
ret
sub
rcr
popf
mov
outsl
mov
divl
shlb
in
clc
cmp
adc
cmc
loop
jnp
lret
test
out
fistps
cmpl
xor
xor
sub
into
sbb
inc
mov
aam
mov
adc
sub
cmp
push
inc
mov
jge
sub
push
and
mov
push
rcl
ss
adc
and
xchg
aam
shll
jmp
cmp
mov
outsb
xchg
loop
lcall
push
pusha
dec
xor
sub
sub
pop
inc
or
mov
test
leave
addr16
adc
cmp
add
and
in
cmpb
sub
jg
popf
dec
in
inc
dec
push
stos
pop
jle
sub
lret
pushf
out
arpl
push
jge
in
jg
sbb
icebp
adc
lret
cmp
lret
mov
js
aas
sbb
pop
je
icebp
adc
in
sub
andl
push
icebp
adc
pushl
lret
xor
dec
cmp
mov
daa
je
cmpsl
adc
mov
push
icebp
adc
rcl
sub
std
lret
xlat
adc
adc
inc
jnp
dec
xchg
nop
test
cmp
add
aam
jb
lret
js
addr16
adc
fwait
sbb
shll
lret
imul
xchg
popa
icebp
adc
adc
and
add
lods
dec
shrb
nop
fcomp
repz
add
je
daa
xchg
xlat
push
icebp
adc
std
cmp
pusha
arpl
jne
jns
pop
jle
jge
cwtl
push
add
pop
or
mov
gs
test
repz
lret
loop
lock
cmpl
adc
xlat
aad
fisttpl
jnp
loopne
pop
imul
push
mov
mov
daa
jmp
push
jo
or
push
icebp
sub
pop
mov
fmull
imul
dec
jbe
out
xor
push
scas
inc
dec
lret
sub
lret
cld
fisubl
pop
aaa
cmpsl
sub
hlt
sbb
cwtl
add
adc
push
icebp
jbe
adc
mov
aam
adc
std
test
fdivl
xchg
in
jle
jne
jno
adc
icebp
adc
fmuls
mov
scas
pop
cmp
enter
mov
lret
or
sbb
cmp
mov
cmc
lods
sbbb
lret
pop
lods
sub
sti
jbe
sti
push
mov
jecxz
lahf
lods
pop
rcrb
xchg
mov
mov
adc
pop
lret
frstor
sahf
push
icebp
adc
out
jb
cmp
out
mov
inc
mull
jno
stos
add
fistpll
jnp
stos
sbbb
mov
outsl
mov
push
icebp
adc
loop
push
nop
pop
test
adc
adc
dec
sub
mov
xor
mov
push
and
adc
loopne
repz
pusha
loopne
or
enter
movsl
xchg
mov
or
jne
icebp
adc
pop
lret
frstor
fnstcw
push
fstp
sub
call
cltd
add
cmp
lret
push
icebp
push
xlat
push
icebp
adc
in
loopne
inc
flds
std
dec
sub
imulb
dec
push
icebp
mov
testb
xchg
mov
sub
icebp
imul
or
dec
fidivrl
xchg
mov
pop
jb
lret
mov
sub
adc
sub
adc
lret
mov
bnd
xchg
adc
or
push
popf
sbb
pop
inc
in
test
data16
adc
lret
mov
sub
xchg
push
test
push
lret
push
mov
pop
push
and
mov
rcll
scas
cld
xchg
icebp
adc
adc
jle
imul
lret
shrl
dec
and
cltd
addr16
push
icebp
adc
cmpsl
loopne
adc
lea
inc
or
clc
inc
dec
enter
pop
xchg
jno
outsb
popa
adc
aad
sar
addr16
or
pop
or
push
lret
fimuls
push
adc
icebp
adc
lret
xchg
leave
push
icebp
adc
push
icebp
adc
mov
aas
pusha
in
adc
adc
popf
push
sub
lret
hlt
xchg
pop
call
lods
dec
sub
inc
cwtl
mov
xlat
sub
sbbl
dec
sbb
addr16
lret
add
scas
fmuls
mov
mov
popf
and
inc
add
push
icebp
xchg
mov
push
sahf
enter
cwtl
lods
pop
xchg
lcall
sbb
sub
inc
rep
jg
jne
mov
mov
and
mov
push
icebp
adc
pusha
push
push
lcall
icebp
jg
fisttps
push
pop
adc
lds
mov
xor
repnz
mov
mov
push
test
dec
das
mov
mov
dec
sbb
icebp
adc
push
sarb
mov
std
inc
or
push
icebp
je
jle
mov
mov
push
popf
push
rcl
and
add
icebp
adc
pop
jecxz
inc
sub
adc
adc
jl
sbb
ret
into
imul
adc
inc
mov
pop
icebp
adc
mov
fldenv
push
idivb
imul
lret
push
icebp
adc
sbb
out
out
inc
or
lret
notl
push
icebp
or
mov
mov
pop
push
js
pop
push
pushf
fcomp
into
adc
pop
cld
inc
cmp
push
icebp
subb
aad
inc
cmp
dec
mov
inc
xchg
mov
fmuls
cmc
stos
aad
add
mov
jle
mov
cmp
push
icebp
inc
pop
stos
adc
xor
testb
add
pop
dec
xchg
scas
pop
push
jecxz
xrelease
lret
push
sub
xchg
xchg
das
xchg
neg
sbb
push
movsl
je
pop
and
stos
gs
push
and
adc
test
cltd
mov
rcr
pop
or
packuswb
adc
sbbl
dec
xlat
and
cld
cld
jb
push
sub
jb
sbb
std
je
aam
ja
xchg
icebp
adc
lret
and
push
icebp
adc
clc
lahf
sub
mov
lods
sbb
mov
adc
and
in
pop
mov
push
clc
xchg
mov
and
repz
lret
jb
lret
push
lcall
pushf
inc
sbb
pop
sbb
repz
hlt
jb
or
push
icebp
mov
and
jl
inc
cltd
movsl
movsb
fiaddl
dec
in
sbb
adc
cmp
push
icebp
jb
in
cltd
push
push
lret
in
mov
rorb
lods
scas
adc
repnz
lahf
dec
lods
xchg
adc
fadds
adc
mov
push
popa
cmp
pop
mov
push
popa
js
lods
sbb
shll
lret
lds
pop
sbb
jb
icebp
adc
or
pop
test
test
and
push
icebp
adc
xor
cli
and
dec
adc
inc
adc
push
icebp
lods
test
pop
push
xchg
add
sub
adc
scas
cmp
addr16
icebp
adc
push
stos
and
lret
enter
adc
inc
cld
inc
xor
in
add
dec
xchg
lock
repz
ljmp
or
push
out
mov
adc
sub
adc
mov
add
les
and
hlt
lret
push
fiaddl
mov
dec
sbb
lret
adc
sahf
dec
pop
fcomp
add
jb
icebp
adc
sti
add
lods
pop
mov
sub
push
icebp
das
sbb
lods
mov
jmp
mov
and
paddw
mov
mov
adc
push
icebp
xchg
cmp
outsb
mov
adc
or
and
mov
lret
xchg
pop
stos
pop
out
ja
adc
mov
mov
testb
lret
sarb
lods
xchg
ficomps
pop
loopne
jae,pn
icebp
adc
mov
lret
mulb
mov
xchg
stos
jg
gs
xor
lea
int
mov
sub
xchg
movsb
cmp
addr16
enter
lret
nop
jge
push
popf
aad
sbb
inc
jg
subb
adc
push
icebp
pop
addr16
add
and
adc
cli
mov
pop
dec
pop
cmp
mov
lret
mov
mov
es
daa
fwait
movsl
dec
cmpsl
lock
cld
dec
testl
cmc
aam
sub
mov
jmp
loop
pop
mov
push
push
cli
cmp
out
cmp
or
hlt
sub
in
lret
lret
and
ljmp
push
jg
ja
inc
mov
scas
mov
fisubl
int
std
lret
popf
pop
pop
ljmp
push
fidivl
lret
je
cmp
repnz
cmpsl
out
imul
sub
adc
fcoms
cli
push
jne
icebp
adc
mov
nop
sub
push
icebp
adc
sbb
sbb
sahf
xchg
outsb
punpcklwd
adc
mov
inc
jg
inc
push
ss
in
mov
fsts
adc
add
imul
sbb
mov
lea
dec
sbb
out
adc
adc
pop
and
pop
cli
loopne
push
aad
popa
adc
lret
push
int
loop
daa
fstpt
add
push
icebp
pop
sub
push
scas
inc
clc
dec
mov
mov
fcoml
cmp
xor
lret
jns
mov
daa
scas
dec
mov
push
fwait
push
icebp
adc
iret
repnz
mov
dec
mov
std
dec
and
and
addr16
iret
push
icebp
adc
lret
repnz
sub
cmp
and
into
popf
xchg
stos
scas
jge
cmp
push
icebp
cld
in
mov
shl
jb
in
daa
les
popf
push
icebp
adc
stos
movsb
fistl
cmp
sub
loope
adc
movsl
pop
sbb
adc
out
dec
ficomps
loopne
and
aam
xchg
out
gs
loope
sub
adc
iret
push
icebp
adc
add
fnstenv
hlt
xor
fistl
cmp
push
icebp
lods
pop
push
jne
cmc
repz
out
xchg
imul
lods
xchg
xchg
add
lods
pop
fidivrs
pusha
mov
out
push
jne
icebp
adc
ja
push
sbb
add
adc
lret
cmpsb
pusha
loopne
in
jne
adc
lahf
das
popa
aad
mov
lcall
adc
push
clc
out
dec
pusha
sub
sub
lret
nop
adc
adc
outsb
push
push
stos
divb
dec
rcrb
cmpsl
in
pop
mov
adc
int
xchg
into
push
icebp
adc
pusha
loopne
or
lret
into
xchg
in
dec
push
icebp
adc
adc
icebp
adc
xchg
or
pushf
xlat
hlt
add
and
mov
and
adc
outsl
adc
ja
mov
loopne
mov
mov
mov
or
mov
pop
push
fsts
outsl
icebp
adc
es
or
push
imul
jns
dec
cmp
jo
push
pop
mov
jne
jge
test
pop
lret
jmp
icebp
xchg
xchg
xchg
notl
add
test
mov
xchg
imul
addr16
loop
jne
negl
pop
lret
orb
dec
mull
fadds
scas
orb
xchg
fadds
push
fldpi
out
pusha
lret
inc
int
push
loop
in
lret
mov
js
jbe
loopne
pop
sahf
push
icebp
adc
pop
arpl
xor
push
xor
cs
pop
pop
icebp
adc
lret
hlt
lods
shlb
xchg
es
leave
pop
lret
in
dec
push
lahf
test
test
push
icebp
adc
data16
pop
inc
popa
cmpsb
testl
adc
lea
mov
dec
pop
lods
or
lea
push
icebp
xchg
or
int
sahf
outsl
cmp
sbb
lock
add
jg
rclb
lret
std
sub
testb
or
lods
mov
push
popf
push
icebp
adc
sub
fucom
xchg
pop
lahf
pop
lds
push
cmp
mov
addr16
sub
sti
xor
daa
or
lret
jae
dec
iret
in
pop
out
lret
mov
ret
push
push
std
ficoml
lret
mov
out
call
into
jo
test
xor
pop
cli
push
inc
cmp
push
icebp
mov
aaa
lock
ljmp
adc
in
gs
das
in
int
or
lret
enter
or
icebp
adc
pushf
cmc
fistpl
push
enter
fcoms
pop
fsts
adc
cwtl
push
sbb
aad
mov
adc
sbb
cmp
xchg
enter
fnstcw
dec
jl
pop
add
or
icebp
adc
mulb
loope
dec
lret
lods
push
test
icebp
adc
enter
fs
xchg
inc
lods
mov
je
scas
js
cmpsl
mov
mov
mov
std
push
xchg
fimuls
lret
shlb
mov
adc
mov
adc
dec
ja
and
dec
pop
loopne
inc
push
lret
cld
push
fwait
and
push
inc
pop
jae
icebp
adc
or
inc
dec
sub
xor
lret
cltd
adc
dec
mov
shlb
sub
pop
adc
adc
int3
adc
mov
cmp
pop
mov
push
les
xchg
jg
pop
lahf
js
jge
add
data16
adc
lret
inc
jb
adc
add
fdivp
pop
mov
fs
adc
outsl
pop
mov
pop
push
leave
aas
push
and
xchg
scas
rorl
lods
sbb
adc
xchg
push
ret
fadds
adc
or
rcrl
xor
je
adc
cmpsl
jmp
xchg
xorl
push
xlat
push
icebp
adc
push
xchg
cltd
sahf
or
cbtw
inc
cmp
xor
fwait
push
icebp
adc
add
dec
iret
xchg
or
xor
mov
xor
lods
push
mov
cbtw
or
fidivl
pop
xlat
mov
jg
lret
and
pop
icebp
adc
push
mov
das
add
pop
sub
test
mov
ja
pushf
test
pop
lret
push
icebp
mov
loopne
pop
mov
adc
imul
lds
insl
lods
xchg
or
lods
xchg
mov
add
push
icebp
mov
add
adc
lock
lahf
sub
pop
mov
mov
imul
stc
movsb
lods
or
push
icebp
adc
movd
adc
cmpb
cmpsl
lret
or
push
icebp
sbb
sbb
sub
fmuls
and
push
shlb
and
fs
mov
cmc
sbb
lret
push
inc
sub
mov
stos
dec
mov
lret
push
jb
icebp
adc
push
sbb
pusha
pusha
pop
sbb
push
icebp
or
push
icebp
adc
fmuls
push
gs
dec
clc
into
jbe
push
jae
icebp
adc
fbld
loopne
lret
cmpsb
and
outsb
lcall
push
icebp
push
jne
icebp
adc
adc
and
fnstenv
jo
fisttps
lret
xchg
inc
inc
push
loopne
fwait
push
icebp
adc
push
sub
ficomps
notb
incl
xor
and
dec
pop
lret
jg
pop
mov
jne
icebp
adc
sub
dec
dec
xchg
sbb
cwtl
add
icebp
adc
dec
mov
adc
push
pop
mov
icebp
adc
lret
fsubr
adc
push
sbb
mov
and
sub
lea
mov
nop
xchg
jl
jle
cmp
push
icebp
test
push
jae
dec
pop
adc
test
js
inc
mov
psadbw
push
xchg
lret
int
hlt
lods
dec
imul
insb
sbbl
addr16
push
icebp
adc
lret
cs
adc
divl
push
call
loopne
mov
mov
push
sub
pop
lea
add
outsb
and
dec
out
sti
test
aad
lret
adc
rclb
adc
fcomp
int3
adc
inc
dec
cmp
adc
aad
dec
imul
pop
lret
jbe
loopne
mov
das
sub
lret
lods
pop
rcrb
cltd
inc
clc
loopne
inc
lock
cmp
mov
mov
push
lret
or
push
icebp
adc
imul
vdivsd
push
icebp
adc
sbbb
inc
int3
lock
or
mov
pop
std
dec
xlat
and
addr16
leave
push
icebp
adc
push
push
icebp
test
jmp
dec
daa
fistpll
lret
cltd
jmp
clc
mov
pop
add
jne
push
lods
addb
inc
adc
push
icebp
movsb
mov
pop
icebp
adc
sub
add
mov
dec
adc
adc
sbb
stos
xchg
sub
repnz
push
jno
sahf
cld
lret
cmp
lret
xor
test
in
orb
cmc
push
xchg
mov
mov
aam
dec
push
icebp
adc
cmpsl
fcomip
adc
adc
adc
je
xorl
or
or
pop
cltd
popl
arpl
mov
and
scas
push
fnstenv
push
fs
pop
cmp
pop
sub
xchg
add
icebp
adc
dec
sbb
sbb
or
pop
jbe
fmuls
pop
pushf
push
icebp
adc
mov
scas
cmp
fsubr
inc
add
push
icebp
int
cmpsl
std
movsb
xorb
aam
xchg
or
mov
adc
loop
je
cmp
dec
in
stos
jl
and
js
add
xor
push
fwait
push
icebp
adc
xchg
dec
cmp
cmp
xor
loope
inc
test
fadds
addr16
adc
lret
repnz
test
leave
mov
icebp
adc
jmp
mov
loop
aas
rorb
mov
pop
fld
stos
and
inc
or
lret
cli
scas
or
std
faddl
adc
aas
push
adc
into
push
icebp
adc
pop
push
xor
je
adc
repz
ljmp
negb
rclb
adc
sbb
lods
dec
mov
push
icebp
adc
lret
loope
jecxz
bound
std
stos
xchg
adc
lret
vmovlps
out
fldt
test
add
add
lret
ret
out
adc
mov
lret
mov
lret
mov
adc
cs
xchg
xor
mov
jecxz
lods
aad
aas
or
into
push
icebp
adc
enter
push
xor
lret
ret
insb
test
adc
int
stos
dec
out
or
lret
sub
decb
xchg
or
dec
jbe
cmp
nop
xchg
pushf
push
icebp
adc
lret
xchg
cmp
pop
arpl
push
xchg
pop
push
ds
sub
adc
sarb
push
dec
imul
scas
loop
pop
cs
push
icebp
adc
sahf
pusha
add
out
mov
adc
scas
out
orb
push
imul
hlt
adc
mov
fistl
and
std
lret
adc
or
add
push
push
je
mov
mov
adc
adc
add
cli
loope
dec
sub
pop
and
cmpsl
adc
lea
sub
insb
push
rcl
lods
sbb
mov
adc
dec
pop
lods
fimull
mov
lret
xchg
mov
lods
popa
and
js
int3
sub
push
icebp
xlat
arpl
test
xchg
cmp
aam
jp
sub
push
scas
adc
adc
lcall
fstps
inc
repz
and
add
rcll
adc
mov
cmp
sub
outsb
xor
sahf
aad
cli
mov
lret
nop
fidivrl
cmc
test
lock
stos
pop
iret
push
xorb
adc
lret
jb
mov
xor
push
icebp
stos
cmc
pusha
gs
mov
pop
dec
or
push
icebp
popf
push
inc
rcrb
xor
mov
inc
into
fdivrl
aad
aas
mov
lret
call
push
lcall
lret
negb
pop
inc
jb
push
icebp
lea
add
pop
loopne
loopne
pop
inc
mov
fadd
mov
pop
lret
loopne
rcll
adc
jmp
xchg
add
icebp
adc
dec
jnp
cmp
xchg
int3
jae
pop
sbb
or
add
push
icebp
out
js
inc
pop
ficoml
insb
pop
adc
dec
in
sub
pop
jp
lods
xor
sbb
fptan
adc
push
mov
and
pusha
sub
jb
or
fwait
mov
popf
notb
jno
lret
or
push
icebp
adc
cvtdq2ps
adc
push
icebp
jbe
push
cmp
cwtl
std
lret
int
insl
icebp
adc
xor
jmp
jl
enter
sub
dec
aaa
lret
push
xlat
push
icebp
adc
in
jb
call
lock
lret
cmp
ja
jmp
sub
adc
inc
pop
xchg
mov
pop
lret
push
icebp
popf
das
std
addr16
incl
das
pop
mov
lret
mov
fmul
out
cmp
mov
dec
je
lods
sti
dec
addr16
sub
int3
adc
icebp
adc
pop
fbstp
hlt
inc
add
mov
je
adc
push
or
js
into
adc
mov
push
pushf
adc
adc
sub
jae
scas
jae
decb
adc
aad
xchg
pop
jbe
adc
adc
adc
dec
scas
or
mov
jne
icebp
adc
scas
jecxz
mov
orl
scas
notl
into
adc
adc
pop
in
sub
add
push
gs
push
pop
test
add
lods
xorb
mov
pushf
push
icebp
adc
lcall
sbb
jp
pop
cmpsl
inc
cmp
push
icebp
insb
mov
lods
test
pop
mov
cmpsl
cli
out
cli
ds
inc
or
and
dec
and
jnp
pop
iret
add
cmc
pop
lods
xchg
pop
prefetch
repnz
lcall
adc
aad
into
adc
sti
mov
inc
or
pop
loopne
inc
outsb
inc
cmp
lret
mov
cmpb
dec
pop
pushf
inc
aam
xchg
xchg
mov
mov
add
stos
xchg
pop
mov
mov
lret
push
inc
pop
jl
push
subl
adc
addr16
push
icebp
adc
push
lret
adc
inc
xlat
test
rep
push
jns
hlt
push
stos
xchg
outsb
sub
lret
cli
cmp
sub
lock
adc
icebp
push
popf
push
icebp
adc
lret
test
xor
mov
xor
test
out
daa
mov
loopne
jle
sti
sub
lret
add
and
adc
insb
rorb
cmp
ret
or
sub
adc
in
lahf
or
and
adc
add
scas
fmuls
or
lret
movsb
call
rcrb
adc
je
push
iret
push
icebp
adc
pushf
fdivrs
xchg
loopne
sub
push
icebp
adc
jge
dec
or
push
icebp
mov
push
adc
adc
mov
push
in
not
aam
cmpsl
sarl
std
sub
push
icebp
pop
aaa
xchg
pusha
jecxz
aam
repz
sbb
pop
lret
push
icebp
or
push
icebp
adc
imul
mov
adc
cmpsl
lea
loopne
mov
jl
rorb
mov
scas
push
push
icebp
adc
lret
push
rcll
adc
arpl
mov
mov
cvtdq2ps
adc
pop
mov
lahf
and
dec
insl
cmc
sbbl
push
icebp
push
sahf
push
icebp
adc
add
aaa
jno
and
test
xor
mov
sub
push
icebp
pop
dec
push
push
adc
leave
in
int
aad
into
inc
jecxz
inc
iret
xchg
add
sub
xchg
mov
pop
test
push
imul
mov
mov
and
adc
pop
cltd
push
xchg
fwait
jmp
push
loope
dec
sub
out
dec
inc
shll
je
pop
popf
push
icebp
adc
adc
icebp
sub
push
int
cmp
inc
push
adc
sti
jmp
jne
mov
jno
jb
mov
adc
or
add
and
adc
nop
in
js
pop
jbe
subb
jp
testb
enter
lret
adc
pop
or
push
dec
sub
movsl
xchg
mov
repnz
lds
ret
or
adc
test
orl
push
push
enter
into
xor
js
mov
pop
push
loop
xor
or
pop
int
ret
negb
push
enter
lds
rcl
dec
test
rorl
movsl
decl
and
xlat
es
outsl
popa
ja
dec
lea
cmp
add
call
jae
sbb
std
addr16
or
jnp
xchg
lds
adc
jmp
pop
pop
and
mov
cmp
sbb
inc
cmp
dec
lea
adc
jo
xor
pop
dec
jmp
cs
hlt
xchg
xor
out
pop
dec
inc
icebp
pop
jle
div
xchg
lds
mov
pop
pop
jbe
lds
push
sbb
hlt
xchg
lds
mov
xor
xchg
lds
imul
xor
sub
mov
cld
icebp
xchg
lds
pop
or
mov
xchg
lds
dec
jge
hlt
xchg
lds
mov
push
test
inc
imull
jnp
mov
jge
jmp
ret
xchg
int
jl
xor
xchg
fdivs
gs
sbb
mov
cmp
pushf
dec
and
insl
lea
jne
adc
cwtl
lds
dec
xor
xchg
mov
sbb
add
imul
adc
stos
adc
icebp
sub
inc
unpckhps
or
push
pop
ret
xchg
lds
xorl
orb
push
or
xchg
stos
out
cmp
add
sbb
sbb
mov
std
pop
pusha
ror
adc
int3
jp
hlt
xchg
push
andl
or
and
dec
cli
pushf
daa
dec
pop
pusha
sarb
repz
lds
fdivp
push
in
adc
xor
pop
hlt
xchg
lds
or
jnp
adc
cmpsb
ret
out
xor
in
outsl
jbe
jne
lds
test
insl
icebp
xchg
lds
adc
jmp
jle
lret
enter
imul
aad
sbb
inc
iret
inc
jge
repz
lds
bound
xlat
jecxz
loop
xchg
ret
addl
xchg
lds
sub
adc
xchg
lds
inc
mov
push
mov
mov
lea
ss
cmp
jle
inc
sbb
add
sbb
popf
mov
pop
pusha
leave
dec
cli
mov
adc
jae
dec
push
pusha
rorl
mov
xchg
lds
jg
out
jl
sbb
hlt
add
inc
mov
push
mov
dec
pusha
into
dec
cli
xchg
fsubl
aaa
mov
mov
pop
ds
adc
and
hlt
xchg
ret
xchg
lds
or
gs
lock
ds
adc
mov
not
leave
data16
jecxz
mov
mov
repnz
lds
jge
cmp
or
clc
lcall
ds
xor
xchg
mov
pop
jb
jne
call
sbbb
xchg
sahf
test
xor
adc
xchg
lds
fisttps
fnstenv
adc
mov
sub
loop
je
xchg
cli
sahf
cld
add
xchg
mov
cmp
pushf
pop
mov
imul
jge
repz
lds
jb
out
sbb
js
pusha
data16
and
xor
pop
jbe
xchg
mov
aaa
xchg
mov
xchg
in
lds
cltd
lds
xchg
jl
hlt
xchg
lds
push
cs
mov
lds
aam
adc
jecxz
mov
inc
addr16
jns
mov
hlt
push
js
mov
pop
incb
jo
lcall
jge
hlt
xchg
lds
push
or
sub
cmc
sbb
sub
adc
inc
hlt
and
rcrl
xor
js
xor
in
fnclex
scas
jge
push
jle
xchg
inc
cmp
xchg
jecxz
leave
inc
push
out
jg
mov
cmp
ror
loop
ret
or
pop
inc
push
in
jbe
aaa
call
hlt
fbld
test
pop
scas
cmp
movsl
enter
lds
mov
and
std
shll
clc
lock
lds
jle
fdivrs
push
in
pop
pusha
imul
repnz
inc
ror
pushf
xor
adc
lret
in
lds
in
fimull
shl
push
dec
jge
mov
in
jbe
ds
jmp
jle
jg
ljmp
lds
pusha
add
lds
push
call
mov
pop
ret
jle
xchg
jns
in
outsl
adc
xchg
lds
mov
out
idivl
inc
cmp
dec
inc
int3
adc
xchg
hlt
xchg
lds
inc
jle
xchg
in
adcb
mov
lds
and
addr16
inc
in
mov
jle
push
insl
mov
xor
mov
and
xchg
lds
xchg
out
negb
push
popa
jge
out
push
xchg
mov
pop
xor
xchg
jecxz
mov
xchg
lds
mov
jae
loope
mov
mov
jo
mov
dec
push
mov
mov
jmp
push
adc
dec
inc
and
xor
lds
loope
test
sbb
mov
jle
or
pop
popa
std
and
addr16
adc
xlat
loop
stos
addr16
int
hlt
xchg
inc
addr16
or
dec
test
outsb
and
jo
jecxz
add
ljmp
jge
repz
lds
dec
mov
negl
orl
adc
in
xlat
lock
lds
lock
hlt
xchg
vmovsd
push
xor
loop
mov
inc
cmpb
xchg
push
inc
addr16
adcb
ret
xlat
xor
pop
ds
jnp
hlt
xchg
lds
scas
aas
xchg
pop
js
cmp
das
pop
cmp
cltd
enter
jecxz
mov
xor
xchg
mov
mov
xor
and
lds
in
dec
cmp
dec
adc
cli
int
shr
and
push
jge
xor
stos
cs
hlt
xchg
jecxz
orl
push
rolb
push
icebp
sub
xor
jecxz
cltd
xor
lds
mov
test
xchg
ja
xor
je
dec
pop
jne
jl
hlt
xchg
lds
shrb
ja
lds
or
mov
xchg
sbb
jg
mov
enter
push
fstp
xchg
mov
pop
jle
xchg
jne
inc
idivb
fsubr
aam
jo
ljmp
push
jle
xchg
sbb
cmpl
jno
mov
js
xor
mov
lahf
das
xchg
mov
push
sub
in
xor
push
pop
imul
daa
pop
mov
jb
notl
js
in
xor
mov
cmp
cmpsl
in
or
xchg
pusha
cli
adc
mov
in
ljmp
pop
hlt
xchg
jecxz
cltd
lods
jge
lea
jle
cmp
xor
xchg
ja
push
leave
pop
into
mov
lret
jecxz
and
jecxz
pushf
xor
stc
out
lds
lahf
jmp
pusha
mov
xchg
icebp
repnz
lds
stos
mov
ja
adc
ret
call
lds
xor
jecxz
xor
repnz
xchg
lds
nop
push
jle
add
adc
ret
xchg
lds
fs
mov
filds
xchg
inc
lock
sbb
jmp
jle
cmc
enter
mov
jle
lock
pop
ja
and
lret
outsl
loop
mov
addl
mov
xor
loope
sar
mov
sbb
adc
jecxz
sbb
enter
jnp
jle
mov
out
cmp
adc
xchg
ss
mov
pop
jbe
fnstsw
lret
fidivrl
repnz
lds
and
scas
xchg
or
test
sbb
sub
std
int
hlt
xchg
inc
aam
adc
mov
outsb
cmp
lds
insb
stc
mov
fdivl
jmp
lds
in
push
dec
aad
add
mov
xor
add
movl
lahf
fldl
fcomip
xchg
lds
mov
bound
enter
cltd
push
adc
cmp
lods
add
dec
jb
mov
push
out
lea
inc
imul
std
sub
lret
and
adc
inc
pusha
hlt
xchg
lds
sarb
repz
lds
and
xchg
jbe
adc
push
cmp
push
cwtl
mov
jle
test
cmp
xchg
loop
push
and
xcrypt-cbc
cmpsl
xchg
push
adc
iret
enter
lds
outsl
lret
adc
jle
mov
inc
test
mov
xchg
lds
push
mov
adc
mov
out
jge
push
cmp
repz
lds
jb,pt
jo
pusha
jb
mov
adc
mov
ret
or
mov
lock
lds
loopne
and
xor
icebp
ljmp
jo
das
xor
jl
pop
shr
push
jle
add
hlt
adc
or
imul
mov
xchg
lds
dec
jecxz
movsb
test
shl
xchg
cltd
xor
xchg
ljmp
jb
jecxz
scas
adc
jmp
xchg
lds
inc
lret
call
cwtl
mov
mov
fistpll
jae
scas
mov
jb
imul
adc
cltd
pop
mov
push
add
dec
popf
push
xor
mov
lock
dec
push
popf
push
sub
popf
push
xor
cmp
cwtl
repz
fists
push
adc
mov
pop
stos
cld
and
insl
push
cltd
lds
xlat
dec
aam
adc
mov
push
push
inc
popf
push
xor
mov
xor
je
adc
jbe
bnd
push
xor
popf
sub
std
daa
cmp
and
mov
pop
mov
ss
popf
push
scas
icebp
and
popf
push
xor
les
hlt
repz
xlat
cmp
sbbl
add
mov
sbb
jge
jns
push
adc
int3
popl
mov
repz
shrl
bound
rcll
mov
push
xor
pop
dec
rclb
xchg
xor
jo
xor
scas
sti
outsl
rol
mov
xchg
sub
test
cmp
outsb
adc
std
testl
pop
xlat
cmovp
xor
pusha
inc
clc
stos
in
inc
mov
cld
addr16
shrl
push
xor
pop
inc
or
and
mov
movsl
push
xor
js
xor
popf
arpl
je
aam
hlt
lods
xchg
cltd
add
cli
hlt
mov
push
xor
sbb
mov
popf
lods
insb
pop
jmp
in
aam
mov
mov
push
xor
insl
push
or
and
out
pop
int3
push
xor
mov
hlt
xchg
shlb
jns
mov
in
stos
cmp
or
aaa
push
xchg
rcrb
add
jmp
cwtl
shlb
loopne
and
in
sub
and
adc
shlb
dec
dec
popa
cmp
jmp
inc
adc
fwait
adc
shlb
js
push
shll
xchg
mov
mov
shr
cmpsl
cmp
or
cmp
inc
xchg
jmp
cmp
jne
in
in
jg
xchg
es
outsl
outsb
and
das
je
sbb
xor
cmp
fwait
or
stos
test
jnp
jle
test
xchg
adc
xchg
shlb
addl
or
in
mov
in
pop
daa
dec
push
out
adc
or
dec
stos
outsl
outsl
outsb
aam
insl
inc
pop
add
ret
jne
sti
mov
clc
movl
jp
mov
xchg
jmp
cmpl
mov
loop
xchg
sub
push
jmp
and
xchg
cli
inc
mov
inc
fwait
sub
pop
stc
outsl
cmp
ret
aad
and
inc
xchg
or
stos
and
jae
popa
jp
xchg
shlb
push
gs
dec
imul
push
add
sub
lret
mov
adc
xor
inc
inc
sahf
imull
add
adc
shlb
ret
dec
cs
lcall
shll
add
adc
dec
pop
cmpb
push
stc
mov
shlb
xchg
inc
jnp
fsts
mov
aam
clc
rcl
pop
and
lds
mov
cwtl
dec
inc
call
adc
shlb
cli
push
ljmp
sub
pop
adc
mov
mov
sarb
and
cmp
outsb
push
orl
ja
in
sub
sbb
rorb
dec
mov
sbb
outsl
xchg
repz
subb
pop
stc
mov
loope
mov
rcrl
ror
mull
mov
out
and
jle
mov
stos
ja
fsub
adc
test
stc
sahf
test
adc
shlb
mov
pop
cmp
sub
xor
stos
xor
insl
test
test
inc
jl
ret
push
mov
out
inc
xchg
rcr
cmc
xchg
jg
jle
arpl
adc
xor
ds
pusha
mov
mov
mov
movsb
or
and
mov
lret
lcall
ja
inc
andb
and
dec
stc
and
cmp
in
dec
push
call
ja
jne
stc
pop
mov
rorb
cmc
lcall
imul
push
ja
shl
mov
push
inc
cli
sahf
mov
test
xchg
shrb
add
daa
outsl
mov
shlb
dec
jmp
scas
jb
shll
mov
movd
shlb
add
adc
lock
push
xor
in
repz
ret
jo
dec
inc
xchg
push
jbe
xchg
inc
jle
and
xchg
cs
xchg
xorl
inc
mov
push
outsb
push
popa
je
daa
ja
rolb
subl
dec
inc
cwtl
clc
imul
or
xor
pop
jg
aad
cmp
lahf
movsl
mov
into
js
mov
out
dec
mov
add
mov
js
shlb
arpl
in
jle
sub
lea
jl
scas
leave
mov
pextrw
mov
adcl
daa
in
sub
subl
sbb
inc
rcr
clc
movsb
jmp
inc
add
pop
insb
mov
scas
xor
sbb
leave
lret
mov
xchg
rolb
cmpsb
jae
shrl
sbb
xchg
nop
mov
jmp
notl
cmp
cmpsl
mov
jnp
mov
cmp
cmpsl
repnz
jmp
insl
push
stc
mov
adc
shlb
adc
pop
cmc
cmp
xor
negb
push
sub
cmp
cmp
ffree
pusha
and
test
mov
stos
sbb
mov
xchg
push
adc
xor
daa
jbe
rclb
gs
shlb
mov
or
inc
fildll
xchg
lret
xor
jg
xchg
rolb
pusha
movsl
inc
shr
inc
lcall
shlb
in
or
sti
fidivrs
testb
divl
mov
jns
xchg
jg
xchg
rclb
mov
adc
cmpsb
mulb
stos
mov
into
adc
movsb
ret
mov
rclb
int
jnp
clc
in
jmp
xchg
rcrb
insl
data16
pusha
or
fwait
inc
pop
inc
fidivrs
int
out
adc
sub
xchg
rcr
in
cwtl
subb
rcr
add
push
popf
and
and
loop
outsl
xor
shlb
inc
mov
lcall
ja
dec
xchg
btc
lcall
clc
mov
push
sbb
aam
gs
shlb
rol
in
pop
inc
pop
dec
push
jns
cltd
adc
fwait
mov
xor
cmp
inc
xchg
cltd
mov
xlat
jp
sbb
enter
jnp
rclb
sbb
shlb
scas
aaa
nop
popa
pop
shll
jg
ja
lret
popf
dec
nop
cmpsl
stos
adc
pop
cmpsl
push
jne
lcall
cmpsl
adc
add
js
outsl
loop
xchg
stos
es
daa
adc
dec
ret
movsl
dec
mov
cltd
mov
lahf
ja
rclb
xchg
shlb
ficoml
rcrb
test
jmp
mov
cltd
cmpsb
cmpsb
dec
inc
and
loopne
pop
xor
pop
cld
test
jle
adc
stc
jbe
inc
orl
shlb
xchg
xchg
iret
std
mov
cmc
mov
jl
and
adc
sbb
sbb
jb
lock
das
pop
hlt
adc
mov
fbstp
mov
outsb
xlat
pop
stc
mov
rclb
push
iret
pop
mov
stos
pop
xor
mov
jecxz
into
jg
xchg
rol
xor
dec
cltd
cwtl
prefetch
rcl
ja
arpl
push
push
dec
xor
pop
leave
push
es
cwtl
shlb
int
nop
jne
sub
shl
pop
repz
lahf
xor
vzeroupper
xchg
jnp
outsl
sbb
push
insb
xchg
rclb
xchg
shlb
mov
push
loope
aaa
js
sub
rorl
jle
int3
push
sub
les
mov
cmpb
pushf
icebp
push
aas
push
sub
aas
sbb
ja
rclb
xchg
shl
shll
dec
xor
lret
leave
in
adc
jb
add
outsb
imul
xchg
shlb
jmp
leave
shlb
inc
ja
lods
sbb
pop
fwait
outsl
outsl
std
sbb
ja
in
sub
shlb
xchg
test
mov
jo
cld
xor
aaa
inc
xchg
dec
adcb
lock
sub
in
fdivl
mov
movsb
push
sbb
sbb
pop
into
cld
sbb
ljmp
xchg
shlb
test
imul
pop
pop
xchg
fnstcw
push
push
pop
adc
cmp
mov
stc
mov
lods
in
out
enter
shlb
or
push
and
jg
out
or
imul
mov
leave
dec
fs
inc
adc
data16
rcl
cmc
xchg
lcall
shl
ret
push
ja
movb
dec
jmp
test
sahf
add
mov
sub
repz
adc
push
mov
ss
lret
lret
lds
pop
pop
adc
subb
or
fs
sub
cmp
std
push
shlb
mov
rclb
pop
cs
sub
shl
jle
shlb
push
xor
lret
mov
lahf
outsl
push
sbb
adc
cmp
insb
push
jns
push
jmp
addb
daa
inc
xchg
shl
adc
test
sub
ss
inc
mov
repnz
xchg
mov
or
cli
ja
in
sub
pop
xor
and
ja
mov
sbb
xor
jno
shlb
jg
ret
dec
shlb
and
inc
xchg
imul
xchg
shlb
push
je
fiadds
scas
adc
shlb
enter
fstps
xchg
dec
movsl
dec
mov
xchg
jg
jmp
or
sbb
and
out
movsl
push
scas
mov
cmp
and
xchg
sbb
ret
arpl
repz
clc
rol
and
subb
adc
shlb
and
cmp
outsb
pop
xlat
or
pop
push
adc
cmpsb
dec
xchg
xchg
jne
sbb
shlb
in
dec
or
inc
fwait
gs
inc
rolb
psllq
xorb
rol
or
add
lret
aad
not
stc
mov
outsb
adc
ja
jg
inc
xchg
js
or
int
dec
mov
dec
jl
outsl
cltd
vzeroupper
xchg
pushf
pop
repz
shlb
into
and
ja
adc
ja
adc
jmp
jmp
and
jg
xchg
sarb
cmc
aam
or
jnp
stc
insb
xor
sbb
pusha
loop
cltd
outsl
std
vzeroupper
xchg
in
sub
mov
rclb
mov
jp
or
cltd
icebp
cmp
add
sarl
adc
imul
shrb
push
pop
int3
jg
inc
fldcw
xor
push
notl
cmp
xchg
lock
shrb
add
in
stc
insl
adc
mov
aad
addr16
pop
lods
rolb
lret
rol
in
stos
cmp
dec
xor
inc
xchg
hlt
adc
aaa
adc
or
pusha
push
out
ret
repz
cmp
clc
in
jmp
loop
inc
adc
xchg
fstpl
xchg
int
lcall
ja
bnd
xchg
shlb
push
adc
cwtl
shlb
scas
mov
mov
lret
shlb
jle
inc
xchg
mov
imul
inc
jle
and
xchg
push
nopl
mov
mov
test
nop
in
outsb
pushf
sbb
ja
in
sub
mov
jne
jle
stos
ja
test
jp
shl
aam
push
mov
push
in
sub
loop
push
and
and
in
jnp
test
push
call
dec
pop
inc
mov
dec
inc
mov
stos
jge
inc
xchg
dec
ja
xchg
and
pop
mov
dec
and
rcrb
hlt
popa
dec
loope
test
cli
sub
sbb
or
js
adc
shlb
in
stos
or
test
xchg
adc
mov
mov
add
in
sbbb
fnstsw
in
loopne
push
shlb
inc
pop
leave
shl
sbb
insl
fbstp
xchg
push
or
push
shlb
xlat
mov
in
cmpl
repz
pusha
xor
int3
sub
sarb
xchg
fistpl
cmp
cmp
mul
stos
sub
in
sub
fstps
xchg
test
adc
shlb
jl
cld
xchg
outsb
pop
and
sarb
jne
rclb
sbb
shlb
inc
cmp
std
adc
sbbl
cmpsl
cmp
or
mov
xchg
or
stos
cmp
outsb
pop
cltd
jle
shlb
movl
jp
shrb
mov
jle
in
cmp
jmp
shlb
mov
or
bnd
cs
stc
mov
jnp
leave
mov
inc
mov
dec
cmpsl
ja
and
ja
jmp
jbe
push
xrstors
mov
movsb
fidivrs
ror
dec
jno
dec
mov
cmp
cltd
jle
sub
and
ja
in
fwait
dec
js
es
xchg
shlb
jne
stos
jle
cmpsl
ja
and
ja
in
sub
and
ja
cmp
popf
addr16
repz
dec
mov
mov
xchg
repnz
shlb
push
pop
stc
mov
pop
sbb
icebp
mov
psadbw
dec
or
pop
loop
popl
out
out
or
shlb
movl
mov
call
js
lods
ja
jno
mov
outsb
xchg
fs
inc
xchg
push
popa
jne
pop
dec
pop
and
mov
mov
stos
add
outsl
sbbb
int3
sub
sti
lcall
inc
xchg
lods
inc
icebp
div
stos
dec
stos
mov
mov
cwtl
dec
sarb
xchg
and
cli
cmpsl
cs
xchg
xchg
adc
mov
cmp
dec
iret
and
and
push
mov
jnp
in
ret
das
inc
mov
test
pop
imul
es
or
in
sbb
pop
out
push
les
sub
pop
nop
add
sub
pop
inc
ljmp
aad
jp
cld
sub
shlb
dec
mov
xchg
mov
shr
jmp
repz
xor
das
jbe
shl
pop
stc
insb
fadds
jle
shll
movl
push
adc
shlb
jle
inc
xchg
sbb
xchg
cld
daa
push
pop
stos
rolb
call
clc
loopne
mov
rolb
inc
sbb
pop
add
mov
and
cli
sub
xor
add
sub
call
outsb
and
ja
test
test
ss
pop
push
mov
cmp
mov
addr16
adc
mov
and
rcl
ja
in
mov
test
movsl
and
inc
addr16
mov
jle
sbb
fisttpll
push
adc
xor
loope
push
shlb
mov
add
movsb
addr16
pop
in
cs
sbb
sbb
add
inc
xchg
push
pop
out
inc
fisttps
sbb
sub
cmp
pop
lcall
inc
mov
pop
push
or
sub
loope
out
retw
push
in
jo
repz
ja
adc
incb
subb
shlb
jmp
gs
xlat
bound
xorl
shl
stc
mov
dec
out
in
ja
jo
shl
push
lcall
jle
adc
mov
sti
xchg
shlb
in
jno
push
push
lods
jo
scas
xchg
addr16
pop
push
xor
fsqrt
push
cmp
push
adc
sbbb
jecxz
daa
stc
lods
and
lods
xchg
xchg
outsl
addr16
xchg
scas
mov
jmp
xorl
pop
xor
aad
push
push
aas
icebp
shrb
mov
jo
daa
rol
sub
sbb
test
daa
xor
or
enter
dec
ret
cmp
ret
sub
jl
cmp
das
mov
mov
notl
mov
scas
mov
pop
scas
mov
lcall
fcompl
fs
jne
mov
aad
mov
lcall
shrb
dec
lret
movsb
daa
adc
xor
mov
jle
jo
add
jbe
clc
divl
lret
inc
stc
rclb
clc
addr16
mov
mov
lcall
inc
mov
das
dec
push
sub
and
push
mov
jo
ds
pop
jns
fsts
clc
mov
adc
xlat
mov
lcall
add
insl
decl
les
dec
call
xlat
std
jo
scas
xor
mov
inc
aas
mov
and
lcall
sbb
mov
bound
mov
stos
and
scas
mov
mov
mov
sbb
cli
mov
mov
iret
sub
push
push
sahf
push
sub
mov
lcall
fmulp
das
mov
jo
ret
xchg
jecxz
cmp
mov
in
pop
scas
mov
mov
mov
lcall
int
add
inc
mov
mov
mov
dec
xor
lcall
dec
sbb
imul
lcall
loope
adc
xlat
popf
mov
mov
push
push
insl
cmp
jo
in
push
adc
mov
fnstenv
mov
push
cmp
mov
mov
sub
mov
lcall
jo
xor
cmpsl
mov
sbbl
jnp
mov
fiaddl
cmp
push
stc
xor
push
jnp
add
scas
xor
jb
mov
mov
mov
lcall
pop
push
enter
fsubs
sub
push
mov
pop
xor
jno
scas
pop
and
sub
push
stos
xbegin
xchg
test
into
or
sub
scas
insb
icebp
cmp
les
or
add
jle
jo
movsb
mov
movsl
aad
es
ja
xor
jo
scas
xlat
ja
popa
mov
lea
fsin
jo
scas
icebp
out
scas
outsb
push
dec
push
test
xor
hlt
shrb
mov
jo
cmp
dec
stc
cmp
push
jmp
aas
xlat
or
clc
xor
in
mov
push
jnp
scas
mov
and
dec
jno
cltd
aam
fs
aas
daa
jne
pop
das
push
push
imul
sar
vandps
roll
lods
iret
cs
lods
int3
dec
push
ds
lcall
ret
xchg
scas
mov
cmp
lods
and
cli
xchg
pop
and
push
mov
jo
mov
dec
cmc
bound
mov
test
mov
push
lcall
and
out
mov
cmp
aam
std
mov
push
sbb
stos
ficomps
mov
jo
mov
and
out
push
mov
jo
inc
or
ret
subl
lret
out
fdecstp
mov
mov
mov
dec
xor
mov
iret
mov
das
xor
xor
inc
push
insl
lcall
sbb
dec
inc
adc
or
and
xchg
negl
inc
add
dec
sbb
cld
or
inc
fimull
dec
inc
lret
xor
stos
sahf
adc
int
adcb
dec
adc
fadds
xchg
cmpsb
sti
xchg
xchg
cmpsb
inc
cli
aaa
cld
mov
xchg
dec
into
pop
add
cmpsb
mov
add
push
jno
out
lret
inc
add
and
std
mov
mov
popf
out
into
push
add
cmpsb
cmc
push
rcrl
stc
pop
setb
jle
or
mov
cld
cmpsl
xchg
cmpsb
inc
mov
cmp
loopne
sti
aaa
negl
inc
add
mov
jnp
ss
ficompl
add
xor
xchg
xchg
cmpsb
inc
add
xor
push
or
fisubs
sbb
sub
lar
jl
lcall
es
loopne
pop
int3
sbb
inc
ficoml
dec
addb
push
inc
add
adc
negl
add
rcrl
jae
sbb
xchg
out
xchg
out
pop
negl
inc
add
jb
and
xchg
cmpsb
sub
lea
scas
xor
mov
inc
mov
fsub
lea
jle
lea
xchg
cmpsb
inc
xor
sbb
in
xchg
mov
adc
sbb
xor
push
add
cmpsb
lea
mov
sub
sbb
lods
in
sub
faddp
inc
xchg
loop
repz
and
pop
mov
xor
mov
sbbl
sbb
and
pop
xchg
cmp
inc
fisubl
lods
inc
add
cli
lret
inc
push
sbb
dec
lds
rcll
jns
ret
lea
test
sti
rcr
adc
sbb
mov
sbb
add
dec
jo
rcl
inc
std
mov
pop
lea
jl
lds
adc
add
inc
fs
pop
int
in
and
inc
cmpsl
sbb
outsl
lahf
xchg
cmpsb
inc
notl
dec
fs
rcr
push
jno
pop
add
cmpsb
in
or
mov
js
loope
dec
or
hlt
mov
mov
lea
pop
hlt
mov
mov
lret
pop
push
pop
gs
adc
enter
sub
xchg
icebp
adc
enter
sub
data16
int
neg
mov
icebp
fsts
cmp
rclb
scas
cmp
cmp
dec
push
jp
jle
je
lahf
jl
push
push
mull
mov
mov
sub
mov
stc
mov
aam
mov
je
jl
xchg
sbb
pop
push
popf
enter
add
add
cmc
ljmp
jl
rcrl
sti
je
add
aaa
pop
inc
popf
jns
dec
into
aam
add
je
sbbl
jmp
pop
pop
lods
cmp
dec
mov
cmp
movl
inc
xor
into
das
inc
inc
lret
inc
mov
je
push
mov
sub
aam
das
daa
mov
les
jp
scas
cmp
jmp
jo
pop
jo
jl
lods
aas
ds
jmp
sub
lahf
jl
stos
cmp
pop
fmuls
jge
sub
mov
je
cld
adc
jge
dec
jno
addb
je
je
sti
js
pusha
sti
dec
hlt
pusha
in
sbb
cmpsb
jecxz
fistl
jne
cmp
je
mov
sti
jmp
int3
or
pop
mov
push
test
mov
sub
jne
sbbl
push
mov
mov
arpl
das
adc
aaa
cwtl
lahf
jl
dec
pop
in
scas
cmp
lods
mov
pop
sti
je
sbbl
iret
lahf
cs
cmp
into
jns
cmp
das
inc
inc
scas
mov
or
scas
andl
and
jo
gs
int
xchg
std
add
sti
and
xchg
pushf
or
cmp
pushf
stc
fisttps
push
int
jl
es
int
mov
add
das
xor
imul
cmp
xlat
negb
pop
rolb
sti
je
stos
xor
shlb
popa
fwait
lahf
xor
pop
mov
sbb
imul
movsl
add
jne
sbbl
movsl
push
je
and
js
aaa
jbe
push
pushf
mov
inc
jg
je
mov
jp
je
je
sub
mov
and
into
clc
aaa
jbe
das
dec
aad
out
pop
iret
negl
je
add
in
mov
adc
je
and
xchg
jmp
adc
lcall
icebp
xor
imul
pop
movzbl
mov
or
fbstp
mov
aad
movsl
add
jne
cmpl
das
rcrb
repz
imull
ja
xchg
in
xorl
sti
jns
test
je
add
and
loopne
lock
mulb
ret
cmp
scas
pop
xchg
xor
cmp
jge
das
dec
jp
adc
aad
mov
fxch
pop
lods
cmp
mov
mov
sti
sub
mov
adc
ficompl
je
icebp
aas
pop
shrl
mov
movsl
and
add
fnstcw
jnp
cmp
in
fdivrs
jne
cmp
je
in
inc
mov
cmp
sbb
sub
xor
inc
sub
arpl
mov
idivb
mov
mov
sti
cmp
jg
sub
mov
xchg
or
loope
test
jmp
in
into
testb
notb
cmpsl
into
sub
ljmp
pop
ror
mov
jg
cmp
lea
mov
adc
movsb
sbb
cs
mov
std
fs
cs
lock
cmp
scas
shll
pop
mov
insb
in
or
fiadds
shl
sub
cmp
push
xchg
pop
test
cmpsl
cmp
or
or
add
pop
ljmp
in
scas
cmp
out
imull
call
imul
sub
pop
rolb
sti
je
js
std
jg
arpl
inc
rol
inc
jno
je
cwtl
daa
arpl
rcrl
ret
repnz
pop
pop
lahf
cmp
sbb
shlb
out
out
mov
out
jmp
das
jb
je
mov
scas
cmp
je
in
xchg
add
scas
cmp
movsl
inc
js
rclb
hlt
into
sub
hlt
aam
fdivrs
iret
movsl
fdivr
into
sub
and
add
mov
sti
je
into
pop
jno
je
subl
inc
xor
test
add
jne
cmpl
jno
je
cmpsl
hlt
mov
insb
movsb
adc
inc
fstps
push
lahf
cs
fsubrl
pop
dec
pop
lock
pop
fcmovnb
xlat
and
add
out
or
iret
movsl
cli
je
cmp
fs
jg
je
mov
insl
push
movsb
cmp
adc
adc
popf
out
in
in
scas
cmp
inc
in
adc
insb
in
ret
pop
testb
in
scas
cmp
andl
out
das
cmp
sub
jbe
xor
inc
or
sbbl
mov
pop
pop
mov
adc
int
aad
xor
xor
shlb
in
orb
lret
adc
orl
cmp
cmc
mov
pop
test
jns
rclb
sub
ret
cmp
jmp
out
fistpll
sti
je
mov
je
stos
jns
push
jnp
pop
aad
xor
add
in
scas
cmp
or
ret
fistpll
inc
xchg
je
roll
in
lds
cs
adcb
mov
jae
je
mov
jge
cmp
mov
shrb
lock
xor
lret
mov
mov
jge
je
lahf
cmp
mov
add
fistpll
clc
push
iret
xor
jp
dec
orb
add
je
addl
je
andl
mov
xchg
ret
iret
iret
inc
jle
je
pop
out
xchg
jg
in
scas
cmp
sub
nop
jns
add
inc
cmp
scas
sbb
add
push
int3
into
and
das
inc
ret
stc
decb
mov
das
iret
add
xchg
inc
jae
je
jmp
cmp
jnp
fbstp
cmp
lods
cmp
lcall
push
jne
cmp
je
add
mov
mov
scas
cmp
test
cli
pushf
mov
int3
pop
fnstsw
and
jne
and
cmp
or
jp
jne
je
mov
cmp
je
adc
or
mov
ret
and
jno
das
sub
inc
push
inc
iret
jns
call
pusha
je
loope
pop
mov
lahf
xor
xor
sbb
addl
add
inc
inc
or
jp
movsl
in
scas
cmp
pop
das
jne
mov
mov
orl
pop
hlt
and
cmp
scas
sbbl
add
movsb
andb
pushl
mov
rcr
fwait
cwtl
push
cmp
das
add
pop
dec
sti
int
mov
add
lea
out
loope
lahf
xor
ljmp
and
shlb
add
inc
jp
jae
je
sub
jne
orl
push
call
pusha
and
sbb
jne
sbbl
adc
lahf
jl
mov
sub
mov
sti
je
cmp
test
mov
pushf
sub
repz
cmpsl
cmp
dec
daa
push
imul
andb
push
pop
int3
fsts
sub
scas
scas
in
fdivrs
iret
stc
jmp
out
jo
jle
scas
mov
xor
scas
pop
mov
cpuid
adc
push
lret
scas
insl
je
or
jns
jb
je
mov
push
lods
cmp
push
arpl
jecxz
scas
cmp
outsb
cwtl
xchg
scas
pop
xchg
iret
stc
stos
cmp
not
lahf
xor
jmp
push
xchg
mov
sti
je
or
aad
inc
lret
aam
mov
adc
stc
test
or
jne
sbbl
and
and
in
sbb
cs
xlat
push
cmpsb
cmp
insl
jg
iret
imul
movsl
cld
xor
subb
not
fiadds
dec
cmp
push
enter
pop
adc
pop
in
mov
mov
iret
ljmp
mov
mov
int3
add
insl
xchg
lahf
jl
xchg
pop
jbe
aaa
add
fdivr
mov
std
gs
test
jno
xor
fwait
cld
cld
pop
lods
ja
lahf
jns
jg
je
add
dec
jmp
mov
push
jecxz
addb
sti
je
cmp
jb
cmp
jno
popf
fld
movsl
fdivrs
xchg
and
sbb
insl
icebp
mov
lret
add
and
arpl
and
and
hlt
jns
test
je
mov
iret
or
iret
das
sub
movsl
pop
add
cmp
je
add
iret
scas
adc
ds
and
pop
push
push
pop
lock
dec
jo
icebp
mov
ret
push
mov
fmuls
sub
push
stos
cmp
ror
sub
std
mov
xor
adc
jns
jb
or
andb
pop
sbb
cmp
sti
je
aaa
cmpsl
pop
add
jecxz
xchg
sti
ret
push
jo
outsl
jle
out
push
jge
pop
mov
cmp
je
dec
push
int3
push
lahf
xor
scas
cmp
and
push
dec
inc
insb
push
jno
pop
dec
in
into
or
sub
sub
sub
mov
inc
mov
mov
add
or
int3
fneni(8087
fwait
cli
jmp
outsb
scas
cmp
sbb
mov
scas
cmp
cmc
into
xlat
insl
xor
iret
mov
aam
fstps
je
sbbl
dec
xor
hlt
pop
adc
dec
daa
xchg
inc
fistps
daa
cmp
scas
rcr
into
testb
cmp
pop
push
mov
sti
je
jae
aam
lret
mov
popf
mov
dec
popl
sub
fsubrl
das
inc
ja
testl
cld
je
sbbl
dec
sti
iret
imul
inc
xchg
je
es
xor
push
sarl
scas
cmp
dec
testl
sti
je
sub
inc
pop
jo
ret
popf
fldenv
xchg
ja
sbb
sti
push
lods
cmp
stc
sbb
jl
inc
sbb
arpl
xchg
xchg
int3
or
aad
mov
xorb
sti
jns
test
je
mov
movsl
or
sahf
cmp
xor
lds
sbb
loope
aam
xor
xor
sti
je
lret
cld
mov
sti
je
adc
sub
sub
jne
orl
push
ss
orb
lahf
xor
pop
dec
lahf
xor
xorl
mov
xor
pop
lahf
cmp
mov
movsl
lcall
std
mov
mov
mov
mov
shr
aam
in
scas
cmp
push
andb
sub
sub
je
mov
mov
add
movsl
or
je
cmp
je
add
je
cmp
daa
clc
popf
cmp
cmpl
test
je
add
fcom
aam
test
inc
push
bound
je
mov
fnstsw
jbe
data16
sahf
fwait
out
jns
cmp
xor
sti
je
clc
jbe
jg
jmpw
daa
insb
fldcw
add
addl
xchg
pop
push
jne
subl
jp
mov
xlat
mov
pop
outsl
sub
jne
xor
cmp
sarb
pop
sahf
cmp
sub
xor
adc
jecxz
fidivl
mov
scas
cmp
incb
xor
cmp
or
jge
cmp
push
cld
fistpll
mov
outsl
in
test
fucomip
mov
pop
adc
fiadds
pusha
mov
filds
mov
in
cmp
bound
mov
pop
mov
ss
jno
cmc
push
push
cmp
loope
and
ljmp
mov
jle
and
ljmp
addr16
shll
stos
fisubrs
pop
push
ss
dec
mov
inc
loope
mov
call
or
push
call
xchg
negl
sub
fucomip
out
es
and
mov
xlat
mov
movsb
fucomp
and
pushl
push
imul
pusha
lret
sbb
push
mov
hlt
lret
shrl
aaa
scas
out
sub
ljmp
add
es
mov
ljmp
fwait
sti
push
mov
pop
add
and
dec
push
fucomip
lcall
xchg
mov
fucomip
cmpsb
or
stos
add
xorb
fucomip
fisubrl
mov
push
mov
idiv
sbb
fucomip
mov
fisttps
sbb
xchg
stc
mov
ljmp
mov
xchg
sarl
stc
lcall
sub
mov
call
sub
ljmp
fucomip
jg
cmp
dec
mov
ljmp
clc
xchg
add
out
push
fucomip
ss
loope
cmp
fucomip
push
add
cmp
in
ljmp
mov
lcall
sub
xor
fucomip
pushf
xchg
push
jae
mov
ljmp
pop
jecxz
and
ljmp
and
jns
icebp
ljmp
aam
out
pop
shrl
fstpt
sahf
and
pusha
cld
ss
pushl
mov
ljmp
cmc
ret
dec
push
ss
add
shl
jecxz
sub
fucomip
out
es
ss
mov
jle
mov
enter
ljmp
mov
jns
pusha
add
and
dec
push
cmp
add
pop
shr
sub
ljmp
mov
xor
sub
jge
xor
rorb
jae
call
and
fucomi
and
stc
pop
scas
iret
pop
aam
fucomp
and
dec
jne
dec
out
daa
fucomip
shrb
mov
andl
and
jecxz
ss
cmp
push
addr16
in
aaa
pop
adc
xchg
lcall
movl
fsubrp
and
ljmp
and
push
mov
mov
xchg
dec
sub
and
dec
push
add
xchg
fisubrs
cmp
adc
es
ss
icebp
pop
arpl
push
aam
jle
dec
jge
cltd
jbe
pop
add
rclb
lcall
and
cmp
arpl
and
pushl
cmp
push
and
ljmp
repnz
lods
scas
test
add
xorb
fucomip
push
lods
push
test
jb
pushl
mov
or
adcb
push
dec
mov
std
adc
stos
fucomip
ss
outsl
std
sub
cmp
push
mov
ljmp
fisttpl
sub
ss
loope
and
ljmp
fldpi
mov
inc
jmp
adc
popf
adc
pop
inc
inc
int3
lods
test
stos
push
test
lods
dec
test
mov
dec
loop
and
ljmp
shlb
popa
mov
out
push
fucomip
ss
dec
sti
ss
cmp
mov
std
int3
out
enter
loop
and
ljmp
jl
ret
adc
rorb
fucomip
ss
ljmp
mov
stos
mov
inc
sbb
mov
sub
es
ss
je
mov
or
xchg
jle
pop
ret
jbe
loop
adc
cmpsl
cmc
jne
push
ss
movsb
addr16
lods
dec
loop
and
ljmp
aam
jg
sub
cmp
ret
inc
cmc
loope
testb
xor
addr16
lods
push
xchg
dec
fisubrl
fucomip
ss
sbb
dec
jns
sub
ljmp
scas
pop
enter
lcall
cltd
lds
ss
into
jle
xor
jle
popa
cmp
xchg
inc
lock
mov
and
ljmp
outsl
mov
jg
sub
test
mov
dec
mov
xor
fiaddl
mov
and
mov
rcr
ljmp
out
sub
loopne
lcall
popa
mov
push
mov
rcr
mov
les
pop
aaa
inc
dec
lahf
in
and
ss
cmp
cmp
fucomip
sub
ss
call
and
ljmp
cmp
dec
and
ljmp
jnp
jmp
add
pushf
movsl
or
fcom
jmp
call
in
iret
in
cmp
xor
fucomip
mov
push
std
rorb
dec
ss
stos
jno
jno,pt
mov
push
in
lods
es
out
aam
ljmp
shrb
xchg
inc
loope
pop
push
xor
das
sbb
or
dec
add
and
dec
mov
cld
adc
pop
aam
mov
imul
push
fucomip
lcall
rcrl
cli
ss
in
inc
sarb
sbb
xor
inc
sbb
fwait
xor
mov
jl
push
adc
stc
loope
rsqrtps
jno
push
arpl
dec
dec
mov
cmpsb
cmp
sbb
mov
scas
ret
pop
shrb
cld
aaa
cmpsl
mov
popf
rorl
or
cmp
add
sbbl
push
mov
add
fcomip
iret
mov
mov
cmp
dec
dec
mov
movsb
inc
mov
js
cmp
lods
xor
call
xchg
pop
push
or
dec
mov
leave
mov
sbb
cld
je
sub
gs
push
ds
in
int3
inc
cld
das
out
dec
xlat
je
sub
gs
cmpsb
rorb
push
addr16
leave
popa
fisttpll
pop
jmp
mov
mov
leave
lods
xor
in
pop
shl
aad
arpl
imul
jne
sub
gs
orl
dec
push
es
lret
je
jae
jge
adc
sbb
es
add
or
aad
mov
xchg
into
mov
mov
mov
cmpsb
cmp
je
ss
gs
aad
mov
in
jnp
and
or
es
gs
push
mov
inc
out
dec
es
xlat
add
aaa
stc
cmp
fcomps
xlat
pop
jne
cld
das
and
popa
dec
sub
cs
gs
push
jmp
push
xchg
mov
insl
lcall
sbb
push
push
jns
push
cmp
xor
gs
aam
dec
lret
mull
xor
pushf
es
out
jb
xchg
push
addl
gs
iret
gs
dec
ja
ficomps
mov
add
push
cmc
cmpsl
mov
in
addl
push
xor
inc
sahf
cmp
gs
jecxz
aas
pop
adc
mov
out
push
outsl
cmpsb
mov
sub
mov
test
and
lret
mov
mov
xchg
insb
mov
or
mov
mov
gs
popa
cmp
sbbl
mov
adc
es
out
pushf
js
in
les
leave
gs
das
leave
gs
scas
imul
sub
sbb
inc
mov
imul
into
es
gs
pminub
es
sbb
arpl
add
imul
nop
dec
sub
xor
dec
es
mov
mov
xchg
mov
mov
gs
mov
mov
leave
xor
sub
frstor
es
push
xchg
xor
addb
xchg
rcrb
aam
xchg
jp
dec
fisttpll
es
gs
pusha
inc
sub
or
leave
gs
adc
stc
or
shlb
add
fdiv
shlb
gs
sub
gs
mov
jno
es
sbb
and
inc
out
dec
es
gs
pop
cmpsb
outsb
and
stc
lock
jae
mov
sbb
rorl
leave
xlat
sti
movsb
xor
ljmp
xchg
das
icebp
jl
jp
inc
std
dec
dec
aad
xchg
repnz
aam
aaa
add
push
pmullw
es
sub
fsubp
out
dec
cmp
inc
push
bswap
gs
xchg
mov
sbb
pop
ja
mov
mov
das
push
push
sub
xor
int3
mov
mov
sbb
add
xchg
cmpsb
mov
dec
ja
adc
test
pop
mov
inc
popa
pop
mov
ret
es
adc
mov
pop
inc
jp
xlat
jae
push
adc
fadd
lahf
cs
gs
mov
sahf
push
xchg
faddl
psrlw
es
das
jo
sbb
in
sub
das
icebp
mov
das
icebp
test
xor
test
jle
push
and
mov
sub
clc
insl
movsb
and
inc
mov
sbb
rorb
mov
leave
fcoml
add
xchg
out
push
pop
pop
call
das
adc
mov
sbb
push
push
outsl
lods
lahf
sub
push
addr16
leave
popa
mov
insl
cld
fstpt
wbinvd
dec
cmp
loopne
cmpsl
into
gs
das
out
imul
add
mov
sbb
shlb
es
gs
pop
scas
ss
mov
outsl
es
xor
leave
popa
pop
paddq
sbb
xchg
jne
fs
pusha
adc
or
out
imul
loope
mov
dec
test
lret
es
gs
lret
push
mov
sbb
xchg
push
cmpl
mov
gs
mov
sahf
xor
gs
pop
add
xchg
movsl
push
lods
int3
test
ss
inc
and
mov
cmpsl
data16
rorb
es
gs
sbb
sbb
in
cmpsb
ljmp
es
gs
inc
push
push
hlt
loop
movsb
stos
pushf
hlt
rclb
cs
pop
dec
ret
xchg
dec
adc
out
outsb
inc
pop
js
dec
lds
leave
gs
nop
sbb
dec
xchg
adc
dec
ja
cmpsb
es
jge
pop
aam
jg
pop
roll
es
pop
fldenv
mov
pop
test
gs
and
outsb
popa
jecxz
mov
dec
dec
mov
es
movsb
cs
std
in
or
incl
lds
push
sbb
bound
jge
lds
mov
mov
leave
ret
and
xchg
out
int3
cmpsb
dec
mov
pop
outsb
hlt
adc
fdiv
shlb
gs
sub
gs
out
shlb
push
dec
dec
aam
cli
in
xchg
sbb
jbe
and
add
dec
daa
ss
mov
leave
gs
mov
pop
shll
cmp
xchg
mov
mov
cmp
mov
gs
fsub
mov
hlt
jg
aaa
out
xor
stc
push
arpl
dec
sti
repz
icebp
scas
jbe
jo
es
xor
lods
or
lea
out
shrl
push
pop
sub
es
gs
mov
adc
cmpb
test
mov
add
cld
lret
inc
sbb
sub
gs
repz
add
mov
mov
leave
and
xchg
addr16
sti
adc
or
mov
out
testl
xor
out
es
gs
cmpsl
dec
mov
gs
popf
out
sbb
jg
js
es
adc
je
inc
bound
jnp
in
or
stos
mov
mov
leave
mov
fwait
hlt
aas
xchg
cmpsb
or
out
and
call
jo
adc
std
xor
leave
lock
xchg
lret
and
sbb
shrb
scas
pop
inc
cmpsl
inc
scas
subl
mov
mov
leave
aaa
enter
aaa
adc
test
adc
in
aaa
clc
adc
in
int3
aaa
sbb
scas
imul
scas
fisubl
es
mov
leave
popf
insb
cmp
in
or
dec
loopw
cmp
gs
push
jg
es
dec
lret
gs
and
es
mov
pop
adc
sub
jge
aam
mov
and
les
cmc
push
xchg
lahf
xor
gs
add
and
cltd
lret
mov
xor
leave
mov
sbb
dec
mov
pop
iret
dec
sbb
sub
jl
fdiv
mov
out
sub
aaa
in
in
lahf
ss
gs
push
addr16
inc
iret
insl
shrl
test
and
mov
dec
mov
jg
dec
es
gs
cltd
aaa
xchg
mov
imul
es
cmp
fldl
push
insb
lcall
inc
aad
negb
les
sbb
icebp
xchg
aam
mov
jmp
popf
push
aaa
jns
lds
mov
mov
leave
sbb
sbb
inc
pop
psubusw
sbb
mov
gs
das
and
jne
daa
mov
stos
into
gs
xchg
cli
mov
pop
jbe
mov
sbb
paddusw
xor
cmp
scas
outsl
das
push
push
push
lods
scas
sub
mov
das
out
xor
sbb
sahf
xor
gs
mov
roll
psrlw
es
jmp
subb
cmpsl
pushl
leave
gs
lahf
outsb
cmp
popf
imul
mov
icebp
mov
mov
lret
out
mov
sbb
jle
das
pop
jecxz
sub
outsb
mov
inc
in
das
out
jp
mov
into
gs
add
out
das
sbb
cltd
xchg
xchg
icebp
cmpsb
mov
ss
gs
scas
int
lcall
pop
rorb
mov
push
mov
fisubs
lahf
das
leave
gs
jnp
sub
fstps
sbb
in
out
out
mov
pop
sbb
sbb
and
mov
mov
leave
mov
lods
test
in
leave
hlt
xchg
loop
popa
or
leave
gs
push
data16
leave
les
cmp
adc
andb
push
arpl
xor
shlb
es
bound
and
aaa
sbb
insl
xchg
es
mov
leave
enter
xchg
lcall
gs
in
push
jae
inc
icebp
aas
lea
aad
or
adc
pusha
inc
xor
lahf
xor
inc
dec
add
push
add
js
int
add
out
inc
fs
sbb
mov
cmp
cmp
mov
mov
movntq
aas
dec
fs
or
adc
push
sub
bswap
gs
pop
push
fmulp
push
sub
es
lods
addl
jne
es
gs
sub
sub
gs
mov
fcomps
fldl2e
lret
gs
xor
push
out
pop
ljmp
scas
and
repnz
jmp
push
jne
push
and
mov
bound
fmuls
lds
in
mov
jl
nop
mov
pop
lds
out
sbb
or
push
int3
outsb
cmovle
es
gs
or
repz
mov
xor
and
jno
mov
mov
xchg
pop
int3
inc
pop
sub
es
gs
inc
jge
out
dec
pop
lcallw
in
mov
es
xor
or
rcrl
cmp
dec
add
das
pop
sub
pop
mov
jne
push
jge
jnp
lds
jne
mov
das
pop
inc
dec
mov
mov
leave
inc
clc
jle
dec
jecxz
and
pop
xchg
popf
es
and
cwtl
xlat
push
int3
inc
jmp
leave
add
mov
or
lcall
int3
inc
and
sbb
imul
xchg
rclb
fsubr
mov
mov
gs
fsubs
xchg
sbb
xor
call
mov
mov
sbb
mov
outsl
mov
leave
stos
stc
adc
rorb
push
adc
mov
mov
xor
leave
dec
lds
leave
gs
lock
push
push
jne
rol
mov
gs
fxtract
mov
fstl
mov
jbe
jbe
mov
gs
cmpl
test
jmp
outsl
int
cmp
popa
dec
dec
inc
adc
xor
leave
gs
cwtl
adc
loopne
clc
cmpsb
xchg
mov
sub
xor
jno
testl
gs
scas
bound
mov
insb
xor
test
cmpsb
dec
es
gs
dec
pop
rcl
repnz
sahf
push
pop
dec
lret
es
gs
notl
ljmp
push
push
sub
stos
jg
cmp
mov
mov
leave
mov
andl
inc
adc
mov
leave
es
sahf
cmpsb
pop
jno
int3
aaa
icebp
mov
aaa
cmc
sbbb
mov
mov
leave
mov
int
mov
clc
add
mov
rorb
mov
out
pop
iret
lock
xor
leave
je
es
gs
xlat
gs
mov
outsb
xor
sbb
bound
pop
rcll
mov
mov
leave
gs
and
js
inc
sub
gs
or
mov
push
addr16
mov
leave
push
ja
test
ret
scas
jg
add
stc
lret
je
cmp
es
gs
lcall
dec
mov
jne
sbb
stos
inc
dec
mov
stos
int3
gs
fsubs
and
icebp
ja
andb
xchg
lcall
jnp
mov
push
aas
sbb
aam
mov
rcll
das
or
mov
aaa
rcrl
pop
and
mov
movsb
cmpsb
jnp
dec
mov
mov
aad
lds
mov
dec
dec
xchg
mov
gs
popl
xchg
pop
ja
add
jne
insb
push
cld
xor
leave
sbb
lahf
cmp
gs
stos
add
test
lret
addb
ljmp
mov
iret
sbb
je
sub
gs
push
inc
sbb
sub
inc
mov
jb
es
je
sub
gs
pushf
iret
pop
iret
shl
nop
cmpsb
xchg
mov
aaa
leave
gs
int
dec
mulb
or
ret
out
aam
jae
insb
xchg
and
pop
dec
pop
xchg
dec
pusha
stos
mov
dec
xor
leave
gs
push
and
xlat
mov
jne
daa
push
rcrb
mov
pop
dec
or
sbb
xorl
pusha
scas
loop
mov
mov
mov
leave
add
orb
push
add
jmp
frstor
gs
push
loope
test
jp
fs
dec
inc
sti
lds
push
cmpsl
mov
fisttps
mov
test
cmpl
sbb
push
push
fsubs
es
mov
mov
or
leave
gs
sub
test
inc
in
fimull
adc
mov
pop
lahf
add
mov
out
xor
cmpsl
pop
aaa
pop
xorl
mov
mov
leave
mov
pushf
pop
inc
popa
gs
es
push
shlb
es
fcompl
sbb
lahf
sub
gs
stc
in
fsub
and
or
insl
inc
stc
mov
mov
leave
and
adc
mov
and
popf
rcll
gs
or
aaa
xchg
sbb
nop
sbb
stos
subb
jl
mov
cmpsb
xchg
dec
sub
lods
cmpl
push
push
dec
fmuls
out
and
push
fisttpl
es
xchg
jmp
push
jle
js
es
dec
hlt
mov
std
hlt
dec
jns
lcall
mov
loopne
xor
push
xor
sbb
ret
jo,pt
sub
ror
stos
xchg
cmp
xor
adcb
int3
inc
icebp
mov
mov
leave
cmp
mov
fdiv
mov
cmpsl
test
gs
push
sahf
or
in
test
sbb
inc
push
adc
je
test
repz
es
gs
xor
gs
fsubl
inc
push
popf
adc
xor
gs
les
push
mov
sbb
out
jo
inc
sub
es
gs
push
mov
in
mov
pop
lds
fisubl
es
dec
push
xor
mov
xchg
or
adc
aaa
jmp
mov
mov
leave
push
dec
rsqrtps
test
dec
pop
mov
sbbb
mov
pop
emms
cmp
icebp
popl
dec
inc
aaa
hlt
mov
pushf
outsb
xor
sbb
es
mov
ss
adc
adc
fisubs
es
mov
jne
fmull
stos
jecxz
cmp
mov
divl
nop
cwtl
mov
subb
scas
shlb
es
aaa
lock
cmp
xor
pop
or
scas
lret
gs
push
xor
mov
leave
push
sub
das
icebp
cmpb
lods
jg
repnz
es
gs
cmp
gs
sub
push
sbb
cmpsl
adc
pop
lcall
mov
aaa
add
leave
sbb
mov
out
pop
out
pop
cli
xchg
out
es
gs
mov
cmp
mov
dec
sub
mov
fdiv
mov
bt
adc
pop
xor
leave
gs
push
popa
nop
test
clc
call
mov
sub
aaa
add
les
shlb
leave
gs
push
pop
aaa
testb
mov
movsl
leave
jle
sub
movsb
dec
lds
leave
lds
jae
adc
cmp
loope
and
es
push
in
xor
push
push
movsb
js
mov
push
cmp
out
es
gs
mov
dec
inc
mov
mov
leave
xchg
ret
js
jg
leave
sub
adc
and
clc
das
and
js
inc
pop
xor
testb
das
icebp
mov
das
out
push
add
gs
fcomps
xor
leave
and
icebp
lods
scas
xor
fwait
push
inc
jns
jne
es
cmp
pop
sahf
lret
xchg
das
fs
mov
leave
gs
das
and
je
mov
hlt
dec
mov
rcrl
aaa
adc
gs
jecxz
test
test
adc
es
adc
push
pop
mov
sbb
xchg
sbb
mov
sbb
cwtl
out
cld
mov
mov
leave
fucomip
mov
arpl
jno
or
addl
mov
mov
inc
pop
divb
gs
adcb
jle
xor
std
fsub
mov
leave
gs
jle
xor
aaa
icebp
mov
mov
ficoms
pop
mov
gs
push
popa
pusha
adc
shlb
es
xor
shr
inc
imul
int3
outsb
push
cmpsl
dec
mov
mov
push
jo
aas
jne
hlt
fcomps
es
push
adc
jae
mov
ja
xor
es
gs
testb
mov
dec
add
js
push
xor
leave
lds
psrld
es
inc
and
test
leave
gs
sbb
cld
push
shl
jae
fistpll
xor
loope
sahf
and
pop
push
aas
mov
mov
sub
gs
mov
fstl
gs
aam
mov
add
sub
and
push
push
mov
mov
gs
ror
hlt
mov
sarl
es
gs
jecxz
or
leave
sbb
add
sbb
push
xor
mov
dec
mov
xchg
jo
bound
leave
or
imul
fxch
into
push
repz
add
lock
xor
dec
shll
lds
mov
imul
and
mov
test
mov
cmp
xchg
lock
cld
std
outsb
cltd
mov
cmp
and
jne
sbb
pop
add
pop
or
push
xor
jge
push
dec
cmp
lret
aaa
out
out
push
mov
gs
cmp
ror
pop
push
xchg
mov
leave
gs
cmp
loop
daa
clc
sahf
test
icebp
nop
jg
int3
aaa
idivl
mov
es
gs
cmpsb
rcl
and
pop
stc
aad
mov
nop
mov
add
mov
xor
mov
rorl
inc
aaa
leave
gs
gs
push
jmp
cld
dec
mov
sbb
and
xor
leave
sbb
mov
mov
fsubr
mov
leave
gs
push
frstor
es
jo
aam
shlb
xchg
das
pop
neg
mov
mov
lret
out
addr16
dec
dec
lret
mov
orb
fmulp
mov
ss
gs
inc
in
adc
jno
cmp
sub
xor
leave
lret
jno
dec
int3
inc
jmp
stos
scas
lds
dec
sub
mov
icebp
ja
xlat
gs
mov
push
out
push
pop
repz
cmp
lock
gs
jle
out
insb
dec
fbld
mov
mov
leave
xor
and
mov
shlb
in
popl
xor
out
pushf
das
icebp
scas
cmpsb
cmpsl
popa
mov
gs
das
out
movsl
mov
aaa
adc
subb
out
enter
stc
mov
mov
leave
in
push
xchg
mov
popl
inc
pusha
or
gs
or
aas
sbb
jge
outsb
pop
imul
cmp
stos
lret
gs
sub
adc
cmpsl
mov
xor
mov
and
jg
inc
adc
loopne
inc
test
in
shlb
leave
gs
ss
gs
call
fwait
andb
cmp
and
fnstsw
push
aam
mov
xchg
rcrb
push
and
rorl
shlb
xlat
jecxz
aad
dec
rcl
fsubs
es
gs
std
daa
dec
shll
sub
into
mov
lahf
popl
mov
ficomps
clc
or
shlb
es
in
outsl
test
out
and
mov
xchg
psubusw
es
jae
loop
xor
ds
repz
scas
iret
mov
xchg
inc
stos
lds
das
out
setle
lret
mov
dec
mov
enter
xor
scas
mov
aad
mov
xchg
popf
std
jl
or
push
xor
leave
dec
les
leave
gs
xor
jbe
dec
jns
cmp
es
shl
daa
mov
lock
adc
es
add
pusha
dec
jg
imul
mov
mov
into
js
xor
push
sub
mov
xor
gs
pop
insb
mov
leave
je
es
gs
dec
imul
es
and
xchg
jne
es
gs
and
es
gs
xchg
jg
test
mov
add
dec
xor
leave
lret
aaa
hlt
out
push
paddusw
es
push
jne
leave
sbb
push
or
mov
sub
jmp
inc
lock
mov
leave
ret
decl
or
hlt
iret
cmp
cmp
pop
or
lret
gs
sbb
add
pop
rorl
frstor
sti
mov
leave
es
fbstp
pop
inc
jmp
inc
jo
ret
inc
mov
add
and
jns
mov
mov
mov
mov
leave
push
jbe
add
or
sar
add
rclb
dec
cmp
dec
cmp
shl
int
sub
leave
gs
scas
lock
aaa
in
inc
or
mov
pop
sbb
xchg
icebp
nop
xchg
int3
inc
in
sub
sub
gs
dec
xor
stc
push
sub
mov
sub
cwtl
cld
sub
pop
push
shll
es
push
fdivl
mov
inc
adc
leave
gs
andb
jo
es
out
fildll
fwait
mov
fsubr
mov
mov
aaa
or
jno
xchg
orl
or
sbb
mov
imul
imul
leave
gs
sub
add
sub
xor
ret
sbb
pop
mov
mov
leave
jae
scas
ficomps
jo
xchg
int3
jno
adc
js
mov
aaa
push
mov
gs
push
fisubl
es
and
and
push
stos
jno
adc
sbb
and
es
gs
cmp
ljmp
and
xchg
mov
or
ss
gs
sub
int3
or
add
xor
leave
rclb
fisubs
es
cmp
pop
fisubrl
nop
jecxz
jge
push
gs
test
inc
test
lods
es
leave
es
gs
int
add
cmp
mov
sbb
adc
out
mov
leave
gs
es
je
es
gs
mov
icebp
mov
mov
leave
mov
mov
inc
adc
dec
mov
and
leave
xor
int3
ss
mov
mov
mov
out
and
lds
mov
mov
leave
push
andb
sbb
js
es
inc
fdivrl
xlat
mov
ja
inc
xor
rcrb
mov
ret
lds
fdiv
mov
leave
gs
shll
es
test
ret
movsb
push
out
addl
mov
leave
dec
js
gs
xchg
jo
mov
pop
xchg
xor
and
dec
les
leave
gs
mov
push
mov
mov
mov
leave
xchg
xchg
ret
mov
xor
leave
lds
mov
mov
pop
mov
mov
andl
pop
inc
push
dec
xor
pop
mov
gs
cmc
cmpsb
or
in
adc
mov
push
mov
mov
and
mov
mulb
inc
mov
fmul
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
