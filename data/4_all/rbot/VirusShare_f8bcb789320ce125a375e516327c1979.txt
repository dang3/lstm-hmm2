mov
mov
pushw
cmc
adc
testl
xchg
cmp
inc
sub
jmp
mov
icebp
mov
mov
or
sub
pop
mov
lock
aaa
mov
cwtl
aam
cmc
rcrl
xor
out
outsl
mul
out
ficoml
aad
or
cs
mov
and
pop
repz
mov
mov
pop
aad
test
lds
insb
xor
jmp
sub
daa
into
add
mov
add
std
add
mov
push
rcrl
cmp
sub
aam
scas
or
iret
and
out
lds
mov
cwtl
cmp
sub
testl
popa
in
push
hlt
in
mov
iret
in
adc
repz
cmp
pop
push
std
jbe
in
or
aas
nopl
dec
test
inc
hlt
add
stc
sahf
cli
daa
ret
jmp
jl
ror
mov
or
fwait
jg
testl
xor
fwait
jnp
testl
aas
xchg
fwait
addr16
notl
jecxz
fsubrl
cmp
push
xor
sub
lock
outsl
hlt
negl
jecxz
sub
std
fwait
imul
pop
loope
enter
jmp
mov
sub
jns
imul
bound
add
movsl
or
repz
shr
outsb
sub
vmovaps
fwait
sbb
imull
jecxz
mov
add
divl
jecxz
mov
add
dec
jno
sbb
jnp
mov
mov
stos
loop,pn
xor
xor
cmp
lcall
xchg
out
lahf
lret
mov
inc
xor
xlat
mov
ret
divb
outsb
daa
pop
js
repz
out
popa
lcall
pop
cltd
mov
idivb
iret
aaa
out
mov
push
int
pop
bound
xchg
mov
decb
sbbl
push
adc
cwtl
jo
outsb
int
adc
xchg
lea
mov
xchg
mov
insl
mov
fucom
add
or
lods
cwtl
add
xchg
mov
repnz
sti
mov
mov
or
lock
cli
sub
dec
inc
jbe
jb
add
js
cmc
test
out
mov
dec
or
test
lock
scas
arpl
lret
push
bound
lods
mov
andl
nop
movsb
pop
xchg
test
mov
mov
icebp
sub
dec
lret
adc
push
fxtract
sti
add
out
repnz
mov
adc
push
and
js
dec
stos
xor
stos
dec
sub
cmp
pop
mov
imul
loope
inc
sbb
loope
jg
movsb
aam
mov
or
cwtl
lcall
pop
loope
div
sub
xchg
push
adc
aam
or
ror
popa
cmp
dec
adc
or
add
inc
or
hlt
int3
loope,pt
punpckhbw
jae
jae
pop
test
or
clc
mov
out
inc
mov
in
test
jp
push
bound
pusha
sub
sub
or
add
cltd
mov
lret
jecxz
fcomps
inc
xlat
pop
mov
jns
or
mov
or
add
adcl
ja
push
cmp
sbb
and
sub
notb
xchg
dec
xchg
or
cld
shll
pop
daa
cltd
mov
jo
inc
in
add
int
sbb
clc
push
xor
leave
jo
into
iret
push
xor
movsb
out
out
rcr
or
and
mov
mov
pop
xor
push
sbb
sub
xor
jl
xor
in
and
je
mov
outsl
adc
or
mov
xchg
xor
push
add
sbb
das
adc
in
and
push
lods
mov
rclb
mov
loope
bnd
sbb
mov
cmp
shrb
test
xor
nop
jnp
inc
loopne
sti
xchg
out
dec
jae
push
sar
cs
sub
cld
movsb
pop
testb
das
out
in
inc
pop
jbe
divl
aad
sti
add
mov
add
mov
out
mov
test
cmpsl
mov
aad
addb
mov
push
hlt
push
je
stos
arpl
pop
int
and
into
es
adc
icebp
fdivl
xorb
or
and
dec
inc
dec
stc
mov
pop
das
dec
xchg
mov
lret
mov
mov
jmp
cli
cmp
xchg
adc
and
mov
cmc
or
fwait
ret
add
xor
xchg
pushf
test
ficoml
cmp
stos
xchg
ds
or
jb
imull
icebp
fstpt
xor
or
mov
lret
fsubs
xlat
mov
cli
in
xchg
out
sub
xchg
lock
nop
pop
scas
mov
xchg
mov
mov
pop
or
mov
mov
popf
push
cli
or
je
scas
nop
stos
mov
cmc
sub
cmp
enter
mov
jne
fs
bound
jecxz
pop
mov
and
stos
movsl
faddl
imul
test
mov
mov
lret
repnz
clc
cmp
push
or
sub
xor
out
or
imul
xchg
xchg
dec
mov
iret
cmc
cmp
aam
pusha
repz
test
stos
pop
cmc
mov
outsb
popf
sub
jl
aam
sbb
cmc
js
sub
lea
lret
xor
lock
xchg
cmp
call
into
cmp
adcb
xchg
test
sub
pop
std
mov
cmpsb
lds
rolb
fcomi
addr16
cmp
fnstenv
cmpsl
test
fistps
shrb
test
inc
negl
mov
fsubrs
popf
clc
adc
jne
andl
mov
loopne
xchg
fildll
into
out
and
inc
shrl
scas
loope
aas
outsb
sub
call
jle
or
lods
add
jnp
ljmp
popa
sbb
imul
repz
movsl
aam
cld
testb
cwtl
mov
out
or
mov
out
mov
test
mov
aaa
dec
cmp
push
cmp
sbb
loope
dec
sub
pop
or
lods
jmp
mov
jo
aam
movl
fadds
dec
mov
int3
or
adc
das
pop
and
in
neg
shll
sub
or
sbb
and
movsl
pop
add
roll
sbb
loop
sbb
aas
addb
aaa
iret
fs
jae
sbb
jo
xchg
pop
addr16
xor
iret
ret
fmuls
xor
ret
rolb
lock
scas
div
sbb
test
add
push
sbb
in
or
jge
xchg
das
loop
out
mov
mov
dec
es
das
pop
dec
pop
mov
lcall
cmp
and
out
cmp
jae
int3
aad
adc
fwait
cwtl
adc
faddl
loop
repnz
lret
sub
mov
out
sarl
enter
adc
in
push
xor
jns
inc
cmpsb
shll
scas
or
pop
mov
pop
inc
testl
lahf
mov
nop
push
subb
test
or
push
sub
scas
clc
stc
sbb
add
jp
cmc
out
out
inc
enter
sarl
push
cwtl
mov
testb
xor
mov
pushf
jno
mov
xor
adc
and
pop
mov
bound
lahf
in
shrb
jle
sahf
mov
add
push
shrb
xor
loope
or
sub
mov
pop
add
mov
cmp
movsl
and
add
cmp
add
and
fcoms
pusha
jae
mov
sub
subb
icebp
lods
sarb
or
stc
mov
testl
and
outsb
loop
push
imul
mov
jp
out
hlt
and
in
mov
jmp
ljmp
lcall
addr16
sbb
cs
lock
std
xchg
sbb
lea
or
cmc
sti
into
or
clc
sbb
jge
xor
push
add
arpl
mov
ljmp
xor
hlt
or
pop
cmp
jg
ss
ja
lock
in
dec
push
push
mov
push
sbb
ret
sti
repnz
aaa
cltd
cwtl
mov
adc
dec
std
in
sbb
repnz
sahf
cmc
idivb
shr
cwtl
std
test
sub
out
dec
sahf
xchg
or
mov
bound
ds
mov
stos
je
sub
das
bound
jo
adcl
mov
mov
xor
pop
inc
fwait
cli
jecxz
testl
lahf
adc
imul
jae
cmpsl
rolb
cmp
or
push
sub
or
cmpsl
enter
sbbl
movsb
sub
sbb
dec
sub
in
sbbl
fcomi
cmpsl
test
or
incl
popa
mov
mov
in
clc
dec
xchg
jno
xchg
in
xor
xor
pop
xor
call
push
xchg
push
nop
push
int
je
lock
icebp
dec
or
push
stos
aam
dec
add
jno
subb
and
ret
loopne
pop
mov
sarb
mov
and
pop
call
pusha
test
enter
lock
repz
addr16
lahf
mov
mov
jnp
icebp
push
call
aas
je
or
pop
mov
add
xlat
stc
sbb
ficomps
mov
aas
incb
cmpsl
or
cmp
mov
int3
js
in
xchg
dec
jae
sub
push
idivb
int
inc
hlt
cmpsb
pop
sub
lret
stos
cmp
popf
lods
shr
mov
in
scas
mov
add
fwait
adc
test
mov
stos
mov
or
js
add
addr16
cmp
call
das
xor
arpl
mov
into
pop
lock
test
inc
loope
jmp
out
sub
pop
test
stc
inc
add
lcall
pop
sahf
imul
add
sub
xchg
cltd
dec
out
movsb
bound
and
out
mov
out
and
sahf
repz
jae
cmp
and
jecxz
iret
scas
loope
dec
dec
aad
jmp
test
int
cmp
bound
jmp
pusha
loope
mov
shrl
cwtl
push
add
and
lods
add
popa
inc
mov
cli
test
ret
cs
mov
cmc
stos
cli
mov
into
push
dec
testl
out
sbb
sarb
lcall
pop
cmpsb
outsl
lret
aaa
mull
xchg
add
mov
sub
xchg
mov
imul
push
js
pusha
in
mov
mov
data16
std
jmp
mov
add
scas
adc
xchg
lcall
div
xor
data16
mov
clc
mov
mov
or
jecxz
sub
pop
mov
or
and
mov
in
stc
loope
stc
cmc
pop
mov
xchg
out
cmpsl
inc
xchg
stos
jecxz
jb
mov
mov
aaa
in
inc
push
cmp
cli
sub
sarl
sub
mov
or
mov
dec
push
test
or
stc
dec
into
std
ret
or
add
adc
mov
fwait
push
cli
pop
mov
sti
cmp
sub
sub
lea
cmp
cmp
dec
jmp
jo
stos
cmp
sub
aaa
nop
dec
cmp
ds
pop
sbb
add
lahf
repz
or
xchg
sub
fcmovu
iret
mov
sub
rorl
pusha
dec
push
cpuid
and
mov
pop
xorb
jge
lret
mov
xor
roll
xor
fwait
hlt
lahf
outsl
lds
mov
mov
movsl
mov
in
push
push
dec
cmp
outsl
popa
loopne
mov
mov
inc
inc
comiss
lahf
fldcw
lods
nop
js
lahf
pop
sub
mov
ds
ds
mov
sbbb
cmp
ljmp
filds
cmp
add
add
out
mov
cmp
cltd
out
mov
out
pop
xchg
shlb
push
xlat
enter
or
sbb
repnz
sub
push
mov
jp
add
add
hlt
sti
mov
aas
outsb
lret
ret
into
add
xchg
xor
test
sub
adc
mov
cmp
sbb
test
add
sar
xchg
vunpcklpd
fwait
loope
mov
shl
mov
imul
rcrb
daa
addb
clc
movb
in
stos
fstpt
fcoml
mov
sti
add
pop
push
or
xchg
lock
ss
call
push
push
addb
inc
or
outsb
push
in
xchg
ret
sti
push
mov
inc
sub
dec
movsb
movsl
nop
pop
xlat
inc
addr16
jl
mov
popf
mov
or
and
into
cmpsl
ja
movsl
shl
cltd
pop
mov
cmpsl
lahf
mov
test
xchg
mov
lret
nop
adc
cmp
outsl
sbb
cwtl
dec
dec
push
mov
nop
into
shl
les
mov
popa
add
add
sbb
push
ljmp
orl
inc
cltd
cmp
push
sub
cmpb
into
out
sbb
jmp
inc
xchg
mov
sub
shrb
lret
jecxz
cmpsb
mov
ljmp
cmp
enter
bound
stos
sti
lahf
shrl
dec
stc
fadds
testl
aam
adc
pop
jnp
mov
dec
jno
call
and
xchg
mov
dec
mov
mov
movsb
sbb
mov
push
dec
test
fadds
push
xchg
shrl
sub
lock
stc
dec
cmp
push
cld
daa
lods
out
dec
outsl
outsl
sbb
loope
les
add
adc
sub
cltd
es
data16
mov
scas
xor
fcomip
cs
test
push
imul
mov
call
cltd
xchg
inc
mov
pushf
jo
inc
loop
push
jnp
add
push
int3
cmp
and
imul
mov
add
stos
xchg
lods
cmp
imul
stos
bound
imul
mov
clc
dec
add
or
xor
pop
cld
xchg
mov
push
sub
repz
mov
jo
stos
adc
xchg
test
add
sub
out
scas
mov
out
cmp
loop
out
roll
das
or
mov
fwait
outsl
and
jecxz
mov
fcomps
cmc
mov
and
push
hlt
dec
orl
pop
cmp
xor
jnp
sbb
jae
inc
push
iret
popa
scas
mov
sahf
dec
hlt
sub
pop
sub
fnstenv
stos
rcrb
inc
test
aas
cli
loopne
push
rclb
test
push
lcall
stos
sbbb
imul
dec
fcmovnb
imul
sub
or
outsl
lock
mov
jecxz
repnz
mov
fucomp
call
lret
sub
fidivl
ret
xlat
and
mov
mov
ja
sbb
cld
sub
shll
and
out
insl
lret
mov
loop
or
sub
lock
cmp
adc
test
xchg
xor
xchg
cltd
cld
clc
sbb
nop
mov
jecxz
mov
mov
mov
idivl
stos
mov
lea
mov
loope
out
jnp
loop,pn
leave
mov
mov
add
loop
add
es
sub
cli
pop
sub
adc
jl
out
push
cmc
aad
in
nop
jmp
aam
sub
adcb
mov
loope
in
out
push
push
outsb
xlat
push
loop
mov
int
xchg
add
or
pop
rorl
sub
xor
mov
mov
sub
pop
jno
xor
and
hlt
adc
aad
ljmp
jmp
out
mov
jmp
cli
outsl
mov
pushf
mov
mov
mov
push
mov
xor
lods
in
std
fisttpll
loop
in
fmuls
mov
pop
loop
mov
dec
jg
movsb
loope
mov
xchg
and
popa
and
sbb
dec
cmp
push
sub
adc
rcll
outsl
push
xlat
rcrb
cli
out
fimuls
stos
xchg
fsubl
mov
lcall
mov
dec
stos
xlat
cltd
add
xchg
out
sarl
push
loopne
adc
fnstcw
js
push
and
jb
cwtl
iret
inc
scas
mov
test
mov
cmp
mov
imul
push
pop
dec
outsl
xor
mov
lret
push
mov
sahf
xchg
adc
inc
jnp
stos
int
fcoml
xor
adc
and
in
inc
or
dec
push
mov
test
out
cli
call
out
adc
pop
xor
and
outsl
mov
dec
inc
pop
scas
fistpl
sub
out
pop
jno
orl
cwtl
jo
inc
andb
in
stc
cli
jecxz
add
cmp
add
rorb
dec
mov
sub
cmpsb
cli
mov
jo
stos
or
shrl
das
rcll
gs
mov
add
lret
idivb
cmp
loopne
jae
add
mov
mov
or
scas
out
inc
shlb
repz
loopne
pop
cwtl
dec
std
test
sub
lock
sub
lcall
mov
ret
xchg
mov
jae
daa
push
rorb
ljmp
mov
sahf
icebp
mov
inc
cli
push
aam
test
add
jecxz
outsl
mov
shl
incb
push
ret
fisubrl
loope
xchg
pusha
sbb
inc
dec
xchg
ss
repnz
int3
daa
jnp
in
push
ss
mov
push
pop
mov
test
pop
adc
ljmp
sti
mov
ljmp
daa
xchg
popa
cmp
pushf
lret
cmp
adc
xchg
popa
push
stos
mov
mov
je
dec
cwtl
and
std
lret
cmc
std
lahf
sbb
imul
lret
add
hlt
add
lret
xor
cmp
insb
sarl
push
mov
and
mov
add
scas
pop
cwtl
mov
xchg
clc
pop
push
test
push
shrl
mov
sbb
iret
sets
std
imulb
xor
sbb
and
lods
xchg
sahf
mov
xchg
mov
dec
cmp
mov
shll
cmp
imull
adc
jnp
stos
adc
test
sub
add
jae
sahf
xor
add
lcall
sbb
mov
mov
andl
xor
xchg
testl
enter
or
loope
mov
mov
mov
mov
iret
jne
fcoms
jne
jmp
push
loop
add
shlb
fs
repz
pop
sarb
and
subl
stos
xchg
sti
int
pop
rclb
int
add
imul
call
xchg
cmp
dec
aam
xor
pop
loopne
ror
or
add
sub
sub
dec
pop
scas
mov
or
fistl
jno
ja
hlt
loope
inc
jecxz
jo
jecxz
adc
daa
jb
jecxz
jno
inc
mov
add
mov
jecxz
jo
bound
test
adc
testl
aaa
adc
jae
mov
sub
sbb
stos
bound
in
or
pop
ss
test
fbld
sub
fiadds
nop
or
aam
mov
lock
or
jnp
scas
cmpsl
mov
dec
imul
pop
lods
mov
push
pop
sbb
out
cmp
fisubrl
test
imul
add
mov
shl
lock
xchg
xchg
mov
adc
fcomp
add
aam
int3
sub
pop
shrl
mov
vpsrlq
mov
inc
mov
subl
rclb
jp
sbb
mov
pop
cmp
aas
daa
sti
adc
sub
or
cmp
mov
jae
int
pop
lahf
pop
repnz
inc
push
mov
or
lock
sahf
pop
lret
and
dec
enter
push
popf
popa
sbb
sti
adc
sub
pop
or
int
sbb
pop
sub
inc
cmp
xlat
jmp
sbb
and
mov
and
xchg
pop
sub
cmpsb
and
cld
and
enter
mov
mov
fcom
into
mov
push
xlat
mov
pop
jnp
dec
dec
sub
mov
push
cli
arpl
sbb
aaa
test
jecxz
or
add
mov
jecxz
adc
pop
fdivs
or
call
mov
sbb
sahf
data16
mov
fadd
bound
aas
shl
mov
jl
jb
dec
in
inc
jo
inc
ljmp
cmp
ds
ret
push
repz
dec
mov
arpl
sub
testb
add
xor
jp
xor
mov
out
jbe
notl
jmp
clc
aam
mov
sbb
cmp
add
out
loop
mov
lahf
inc
cld
in
xchg
in
iret
cmp
jp
int
inc
cmp
testl
imul
xchg
movl
jecxz
cmp
sti
cmp
repz
mov
shl
xchg
in
mov
adc
mov
xchg
jnp
ret
hlt
inc
mov
or
rolb
stos
mov
imul
iret
cmp
out
pop
ljmp
incb
dec
inc
gs
sub
divl
enter
ja
pusha
les
xchg
inc
sahf
loop
sbb
and
jae
mov
es
leave
push
testl
sub
mov
int
xchg
bound
push
aam
pusha
cmp
and
fwait
pop
notl
cmpsb
shll
es
jg
fimuls
mov
sbb
fsubrp
rclb
mov
ret
lea
jae
inc
mov
lahf
orb
int3
mov
and
pop
adc
icebp
out
cmp
push
pusha
adc
shll
pusha
and
out
aas
test
adc
rorb
and
add
dec
pop
jmp
or
lret
push
and
mov
iret
and
cmp
push
and
xchg
mov
dec
or
sar
jo
mov
test
cmp
sub
int3
dec
or
fstpt
jecxz
out
push
pop
cmp
andl
sub
clc
icebp
mov
daa
nop
mov
in
jbe
dec
mov
gs
pop
push
sti
mov
jmp
fisubs
stc
fistps
scas
xchg
pop
sub
out
stc
cmp
dec
and
repnz
fdivrs
clc
jns
test
or
or
mov
in
fcmovnu
pop
les
into
andl
xor
mov
loop
jmp
lock
int3
dec
insl
mov
cmpsb
in
or
or
bound
mov
andl
cmp
inc
mov
jmp
mov
or
jmp
xorl
into
arpl
xlat
repnz
add
push
aaa
pop
add
cmp
push
icebp
in
dec
repz
out
cmp
lahf
lock
cmp
inc
adc
sub
mov
push
cmpl
repz
xor
insl
cmpsl
sahf
push
test
mov
jmp
stos
pusha
push
fcmovu
lock
packuswb
repz
cmp
mov
shl
sbb
lea
cltd
mov
sub
mov
shll
stos
ja
shrl
andb
mov
mov
into
adc
out
sahf
and
lea
out
mov
ja
mov
or
sub
adc
mov
lcall
xchg
mov
sbb
lret
pop
dec
cs
xchg
sub
cmp
daa
dec
fwait
mov
into
jmp
push
je
mov
xor
mov
out
ficomps
jmp
adc
mov
cltd
data16
sahf
xlat
hlt
xor
pop
and
pusha
cmp
mov
sub
push
mov
in
sub
mov
ss
inc
in
mov
dec
jg
jo
repnz
les
xchg
inc
xor
lods
dec
jecxz
mov
faddp
test
xor
cltd
das
iret
notb
inc
dec
popl
dec
rcr
rolb
enter
add
dec
pop
das
jg
rol
pop
insl
xchg
adc
mov
inc
aaa
test
es
jb
inc
push
scas
in
mov
int
adc
cmpsb
xchg
aam
sahf
aas
icebp
stc
aaa
cwtl
int3
push
daa
inc
xchg
mov
rcrl
loopne
dec
pop
sarl
mov
icebp
pop
negl
call
into
cmp
mov
mov
mov
push
enter
std
add
xor
imul
jp
fbstp
mov
les
inc
in
xchg
popf
or
xor
icebp
addr16
cmp
jp
std
scas
fxch
or
pushf
sub
decb
iret
jle
mov
dec
push
stos
sti
jg
adc
pop
xor
stos
sbb
rclb
ljmp
fisubl
out
inc
mov
sub
mov
fs
rcrb
out
cmpsl
rcll
fiaddl
cmp
and
out
add
and
cmp
pop
xor
arpl
mov
or
out
pop
inc
xchg
jp
xchg
out
lahf
mov
and
fwait
dec
into
xchg
pop
mov
out
arpl
jo
jns
lods
lds
clc
mov
lods
mov
and
outsb
add
or
mov
xchg
jne
pop
push
sub
push
add
jmp
shl
push
dec
jae
lea
sub
sbb
xchg
popa
and
scas
repnz
imul
in
in
stc
mov
scas
aaa
or
xchg
stos
mov
fstpl
iret
shr
pop
ret
pop
add
jbe
mov
loope
push
mov
adcb
hlt
mov
inc
insl
mulb
loope
sti
sub
sbb
adc
movsl
inc
loopne
cmc
mov
out
pop
push
fdivl
aas
lds
xor
in
nop
cmp
dec
add
or
xor
in
mov
mov
sbb
ret
mov
icebp
xchg
out
pop
pusha
dec
push
cmp
fidivl
inc
iret
hlt
inc
cmpsl
pop
outsl
int3
or
mov
bound
sub
orl
xchg
jle
pop
mov
popa
xchg
les
sbb
xchg
add
push
mov
fidivrl
pop
xor
mov
mov
fwait
cmp
push
js
in
xor
popa
shl
mov
lcall
push
sub
mov
xchg
pop
adc
xchg
mov
mov
lret
clc
cmp
mov
push
pushf
lock
je
lods
cmp
dec
fidivrl
add
and
mov
addb
cmp
pop
cmp
cmp
mov
and
push
cmp
addr16
push
loop
xor
int
push
insl
cmpl
sti
xor
cli
hlt
movsb
je
mov
xchg
jo
jo
andl
loop
stc
loopne
pop
push
nop
xor
push
xor
lahf
push
xor
outsl
inc
aaa
outsl
and
pmaxub
xchg
lahf
cmpsb
cmp
mov
mov
push
inc
cmpsb
push
lret
dec
mov
add
jle
push
inc
cmp
mov
xchg
sbb
out
arpl
cmp
adc
shll
fbstp
aam
arpl
rorl
xor
xchg
xchg
in
pop
movsb
push
fdivs
ret
mov
enter
mov
mov
mov
out
ret
sbb
sub
cwtl
add
push
std
mov
xchg
dec
repnz
adc
pop
std
shlb
addb
inc
jo
stos
sbb
jb
xchg
pop
xor
cmp
mov
pop
mov
ficoms
test
add
clc
retw
add
add
sbb
addr16
jmp
shrb
sub
faddl
stos
xchg
lds
add
mov
lcall
loopne
lods
iret
std
lret
pop
stc
loopne
test
test
sbb
jge
inc
out
mov
movsb
sub
ret
imul
jle
out
or
sti
into
mov
xor
lret
test
dec
test
mov
lahf
jmp
jo
stos
int
addl
pop
imul
std
ljmp
sbb
shl
sub
push
pushf
rcr
cs
mov
fwait
stos
xlat
jb
call
pop
cltd
iret
mov
enter
mov
mov
testl
test
push
or
rclb
nop
jecxz
movl
nop
popf
cmc
jmp
xchg
lret
sbb
mov
rcr
or
out
mov
hlt
jecxz
add
xchg
hlt
pop
xchg
or
test
xchg
pop
enter
mov
out
das
push
icebp
aad
jmp
push
lea
mov
cmp
lcall
insb
lea
jmp
mov
sbb
bound
out
and
imul
cmp
inc
jo
rorl
push
shll
gs
daa
scas
iret
xchg
out
div
push
lcall
es
sti
subb
sti
mov
and
dec
mov
xchg
out
cld
cli
mov
lea
ds
sub
lret
cli
jg
imul
mov
iret
stos
mov
pop
aam
imul
stos
or
iret
test
aaa
fcmovbe
mov
aam
sti
in
imul
icebp
loop
shl
testl
jbe
movsl
test
pop
push
mov
inc
vpshufhw
shrl
add
loop
mov
jecxz
scas
inc
test
in
subb
out
jge
ljmp
js
mov
popf
hlt
dec
into
sub
lea
hlt
loope
and
push
loope
jo
dec
fs
out
dec
fcmovb
sub
dec
lcall
insl
lret
pop
xchg
jno
cmpsb
xlat
notl
fstp
lret
daa
xchg
cmp
pop
cltd
aas
add
stos
push
or
and
or
cmp
insb
cld
push
jns
adc
xchg
inc
mov
sub
shrl
repz
mov
movsl
cmp
in
les
or
out
nop
mov
jecxz
add
jnp
xchg
or
sub
outsl
dec
push
xchg
adc
push
aad
mov
iret
mov
push
pop
shll
or
repz
fmuls
repz
and
rdtsc
std
dec
and
enter
cwtl
cmp
lret
and
jo
pop
adc
outsb
push
lods
testl
push
loope
cwtl
jns
sub
std
fcmove
rcrb
add
mov
shl
repz
jbe
mull
jne
pop
jle
sahf
pop
lea
cmc
xor
orl
jne
mov
inc
std
imul
cmp
mov
loopne
mov
shr
lret
push
daa
ret
addr16
or
outsb
cmpb
xchg
push
ljmp
inc
jnp
mov
inc
std
les
push
dec
mov
or
mov
test
lcall
out
lret
mov
incl
iret
sahf
scas
out
xchg
lcall
xchg
cmpl
scas
lcall
cmpsl
add
gs
loopne
test
fisubrs
push
std
loop
mov
or
mov
nop
inc
pushf
loope
xchg
icebp
aaa
imul
cmp
out
mov
or
scas
sbb
xchg
repnz
in
arpl
outsl
cltd
add
cwtl
xchg
jae
add
cmpsl
lahf
movsb
add
push
sub
cwtl
sbb
js
ja
ja
daa
mov
stos
out
fsubrl
mov
movsb
xchg
sbb
rorl
or
inc
testb
or
mov
jl
enter
testb
sbb
ret
aas
out
ss
cs
and
cltd
adc
insb
and
faddp
cwtl
xor
les
xor
aad
push
lea
sub
ffreep
insb
sub
loop
in
addb
mov
int
movsb
adc
mov
mov
push
or
repz
mov
imull
mov
or
mov
test
stos
pop
les
and
in
nop
out
add
pop
leave
loope
xchg
stos
jmp
dec
rolb
add
cmp
mov
inc
mov
inc
xchg
movsl
mov
arpl
loop
loope
dec
movl
loop
sti
ja
loope
cs
or
imul
jg
test
repz
pop
sti
test
scas
and
mov
gs
inc
xor
pop
mov
lea
push
or
dec
push
adc
popf
icebp
out
sti
rorb
stc
pop
mov
sti
add
loope
ja
arpl
cmpsb
cmp
xchg
add
out
push
pusha
adc
sarl
cli
add
out
nop
lock
cwtl
adc
fwait
push
aam
ljmp
addl
mov
das
dec
aas
inc
cmp
fcoms
push
cmc
sub
jnp
js
fmull
mov
mov
mov
fxch
pop
cmpb
sahf
lahf
fcoml
in
or
test
mov
jae
lcall
cmpsl
ljmp
ffreep
pop
or
mov
mov
into
rcr
scas
popa
fisubl
repnz
xchg
out
mov
adc
jbe
stos
mov
xorl
push
fidivl
rcr
cld
enter
mov
sub
xor
cmpsl
cltd
iret
sti
movsb
and
loop
sbb
test
insb
mov
repnz
je
fsubs
not
jno
push
sbb
mov
mov
hlt
jae
rorb
aaa
sub
test
out
cmp
imul
testb
enter
test
cmpsl
cmp
inc
out
pop
inc
in
es
or
movsb
ret
mov
dec
lock
lods
sbb
call
and
rolb
adc
mov
scas
enter
sbb
popa
stos
hlt
call
imul
aas
lods
and
icebp
dec
xorb
mov
xchg
adc
cmpsb
xchg
xor
mull
jb
rcrb
enter
lods
add
int3
hlt
and
shlb
imul
or
lret
std
cmp
stos
mov
daa
ss
pushf
in
inc
xchg
add
xchg
shll
mov
test
lret
sbb
sub
pop
adc
sti
into
fisttps
scas
mov
rol
or
cmpsw
adc
testb
sub
jg
push
scas
and
test
es
test
sub
hlt
gs
mov
rorb
out
or
out
cwtl
cmp
out
cmp
push
mov
imul
nop
sbb
test
mov
mov
ret
mov
repnz
sbb
je
sbbl
cmp
jns
cmpsl
imul
fnstsw
enter
inc
icebp
das
in
arpl
hlt
nop
mov
mov
mov
mov
cmp
mov
into
mov
lods
aam
shll
mov
sub
loope
xchg
icebp
jne
dec
xor
or
and
das
adcb
cmp
loopne
mov
jecxz
repz
inc
loope
iret
cwtl
cmp
push
shl
movl
add
test
jo
fdivrp
outsb
sub
imul
jae
sahf
xor
mov
ror
lods
push
orl
dec
repz
pop
std
lods
imull
jecxz
pop
pop
repnz
mov
add
sub
mov
fwait
mov
push
inc
mov
or
xchg
aad
mov
mul
stos
pop
lret
fsubrl
mov
push
icebp
dec
cmpsl
insb
xlat
inc
les
loop
mov
mov
add
xchg
loope
xchg
icebp
mov
lret
jno
mov
mov
xchg
jecxz
repnz
loopne
sub
mov
jnp
aas
scas
ss
mov
pop
inc
test
xor
ljmp
leave
sub
mov
std
mov
mov
loope
xor
mov
xchg
sar
cld
add
inc
scas
and
mov
and
cwtl
cmc
std
lods
push
sub
out
pop
inc
sahf
addr16
push
shlb
lods
push
aam
mov
cmp
gs
xor
jmp
pop
in
lcall
out
stos
xor
jnp
sbb
fdivrl
data16
xchg
arpl
rcll
ds
dec
xor
fnstenv
and
test
mov
cs
sbbb
fsubrs
outsb
repz
cmp
cmovbe
fisubl
push
insb
std
jl
sbb
std
nop
fmull
mov
mov
lahf
mov
dec
gs
and
out
mov
test
cmp
and
ja
jg
out
call
xchg
out
mov
cmp
cli
xchg
inc
sub
or
mov
iret
sub
push
sbbl
xor
lods
sub
dec
mov
js
cvtpi2ps
cwtl
ss
pushl
out
or
les
loopne
or
aas
shr
lock
repnz
aas
mov
out
cmp
mov
ljmp
add
hlt
mov
xchg
div
inc
push
icebp
loop
mov
push
cmp
and
imul
iret
lcall
or
xchg
test
enter
jnp
and
mov
sub
out
pop
movsb
out
xchg
fmuls
lret
mov
mov
cwtl
cmp
mov
ss
sub
out
cmp
mov
mov
in
sti
fstps
push
test
in
sub
imul
hlt
pop
mov
sub
inc
xlat
dec
ljmp
stc
icebp
mov
shll
fwait
sub
sub
add
das
add
pop
mov
inc
xchg
aad
sbb
aaa
jmp
and
sbb
jge
push
out
clc
mov
addl
addb
shrb
adc
xchg
and
shrd
inc
jbe
ret
xor
in
add
into
out
loopne
or
push
xchg
fdivrs
and
sub
adc
daa
mov
cmp
loope
mov
hlt
insb
outsl
aad
fs
clc
dec
daa
mov
cli
and
cmc
lds
das
out
rcrl
jb
push
addr16
or
movsb
repz
shrb
in
inc
inc
mov
out
sahf
pusha
pusha
orb
icebp
ja
orb
pop
pop
roll
je
xor
loopne
and
test
imul
lret
mov
arpl
inc
pop
xchg
jbe
push
xchg
mov
push
push
les
inc
test
ror
and
lahf
xor
not
lret
outsb
mov
stos
in
pop
adc
xchg
testb
enter
mov
sti
fwait
mov
leave
insb
scas
sub
out
mov
cmpsb
sub
in
stc
outsb
or
movsb
push
mov
sbb
mov
pop
jmp
sub
call
sbb
inc
dec
loope
fisubs
aas
pop
test
pop
mov
fcmovne
rolb
fiaddl
mov
loope
mov
and
xor
pop
mov
jns
pop
lods
xchg
jns
hlt
adc
neg
push
outsl
mov
ret
rol
lds
inc
mov
push
xchg
cmp
cli
sbb
jp
cmp
mov
xchg
mov
mov
mov
cmc
test
dec
sti
jae
test
jae
xor
cwtl
dec
stos
pop
mov
mov
shlb
rolb
jae
into
push
xchg
pop
ret
sub
enter
out
test
insb
inc
mov
lret
pop
dec
cltd
sub
out
cli
mov
std
test
mov
or
les
cmpsb
shrl
fucomi
xor
out
mov
into
dec
push
adc
jns
jg
enter
sub
jmp
fimuls
mov
loop
imul
mov
int3
bound
push
mov
jbe
fisubl
jmp
jns
cli
out
pop
aad
lds
loope
fcmovnu
in
sbb
xlat
ret
rcrl
divl
shl
fcmovb
sub
mov
roll
in
adc
mov
mov
idivl
iret
jg
addl
mov
or
outsl
loopne
jmp
jne
fwait
push
mov
iret
and
xor
mov
es
jecxz
or
push
jns
push
cmp
mov
shlb
jae
mov
punpckhdq
mov
imul
iret
gs
loop
mov
sti
inc
int
ja
jb
test
stos
fnstcw
sti
mov
or
adc
shl
mov
pop
mov
mov
mov
dec
ss
push
push
mov
mov
inc
xchg
cld
cmc
movsb
inc
ret
xor
lret
insl
mov
iret
xchg
push
adc
pop
push
mov
ja
movsb
aas
cli
xchg
test
jg
jb
mov
aaa
mov
rorb
mov
lds
les
sbb
outsl
mov
and
mov
mov
sete
negb
mull
lds
cmp
mov
cmp
in
in
sbb
push
fisttpll
xor
mov
jbe
mov
outsl
jecxz
and
arpl
jo
mov
xchg
cmp
jnp
mov
dec
stos
repnz
push
cwtl
mov
xlat
adc
mov
jnp
aam
addr16
fwait
andl
repz
mov
adcl
aam
inc
vpmacsww
jmp
loope
pop
repz
dec
dec
xlat
sub
stos
add
iret
lods
mov
out
jae
out
bound
xchg
sub
pusha
cmp
inc
pop
and
popa
and
or
stc
and
insb
std
jg
cmp
lret
or
inc
jge
add
inc
jo
rorl
mov
mov
dec
adc
aas
lret
mov
mov
dec
out
sbb
outsb
mov
mull
leave
loopne
mull
xor
inc
xchg
shrb
cs
lds
add
inc
push
push
cli
jl
sbb
xor
ljmp
push
fimuls
jmp
inc
cmc
loope
test
out
addb
sbb
imul
inc
imul
in
cld
fwait
inc
dec
push
jns
icebp
lahf
cld
arpl
cmp
dec
push
lods
jmp
xchg
jo
xor
insb
adc
mov
mov
or
ss
xchg
mov
loop
mul
jmp
cmp
adc
xchg
mov
fs
dec
mov
mov
mov
rcrb
pop
fdivrs
leave
insl
xchg
mov
insb
sub
lods
push
into
add
call
mov
xchg
out
aam
ret
push
mov
sahf
xchg
js
jo
cmp
arpl
jecxz
adc
mov
jecxz
push
inc
outsl
xor
jnp
roll
push
jbe
push
cwtl
and
mov
push
and
stos
mov
pop
mov
mov
shrb
mov
lcall
inc
shl
lea
cwtl
xchg
xor
mov
cmp
out
ds
cmpsb
xor
stos
loope
cmp
push
mov
add
sbb
out
imulb
sub
cmp
fnclex
iret
shll
ret
ss
dec
lcall
divb
aaa
fildl
mov
rorb
push
push
add
enter
lock
sarl
dec
jbe
or
stos
inc
cld
push
mov
fwait
adc
shll
in
into
addl
cltd
mov
or
lock
jb
in
movsl
fcomi
add
or
lret
aam
aas
mov
mov
arpl
xor
in
push
push
xchg
stc
cs
hlt
les
iret
sti
jmp
cmp
adc
into
fstps
jnp
jge
cmp
dec
xor
push
lcall
sti
sbbb
les
push
aam
addr16
jecxz
and
std
cmovl
push
inc
inc
jge
sbb
out
out
xor
mov
xchg
cmp
xchg
mov
repnz
pop
cli
shlb
add
sub
scas
mov
or
dec
push
xlat
or
fcomip
das
cld
cli
aad
sbb
xor
push
mov
loopne
sbb
out
aam
mov
nop
lods
call
xchg
in
xchg
in
xor
mov
loopne
ss
push
andb
add
int3
pop
loop
ja
cwtl
or
ds
or
mov
mov
incb
jmp
movl
cwtl
scas
mov
dec
lods
cmp
inc
mov
and
stos
fs
dec
pop
outsl
cs
fwait
push
xchg
lret
daa
pop
add
repz
jae
dec
mov
popf
cmp
cs
lret
mov
sbb
pop
scas
scas
aaa
mov
subb
les
scas
mov
sbb
mov
ds
xor
push
push
jmp
pop
or
insb
mov
xor
mov
sub
adc
dec
pusha
sti
and
add
pusha
repnz
sub
jno
repz
sub
lcall
into
dec
jecxz
inc
pop
int3
mov
or
jnp
mov
jg
orb
stos
cmp
int
push
in
xor
fs
cmp
push
cmp
sbb
scas
jnp
cmp
jbe
clc
push
shl
mov
mov
xchg
addr16
pcmpeqw
push
xchg
cmp
js
ds
dec
pop
dec
jns
sarb
dec
add
inc
cmp
xchg
out
daa
cmp
inc
dec
cld
dec
mov
xchg
hlt
hlt
decl
jg
pop
push
mov
and
int3
xchg
mov
pop
lcall
dec
xchg
loop
out
jg
jae
sarl
jp
xchg
test
mov
popf
sub
cmp
mov
enter
mov
mov
popf
push
push
jnp
xchg
sbb
mov
cmp
xchg
lea
fwait
mov
jns
cmp
and
jg
inc
push
mov
and
mov
insl
cmp
pop
mov
loope
je
lret
jecxz
push
adc
test
repz
enter
ja
das
ljmp
neg
add
add
or
mov
sti
sub
xchg
fldcw
mov
xchg
mov
js
shl
mov
mov
push
and
and
nop
out
mov
sub
outsl
bound
and
mov
lret
and
inc
and
mov
hlt
aas
mov
mov
iret
cltd
lock
stc
int3
cmp
sub
ljmp
mov
jns
jge
out
rorb
fwait
mov
sub
lcall
dec
popa
movsl
sbb
sub
lret
popa
scas
lret
and
iret
adc
lods
and
push
imul
andb
cmpsb
movsl
jns
in
inc
ja
shl
push
mov
insl
lods
xchg
cltd
push
icebp
push
emms
cmp
mov
ret
xchg
xor
xchg
and
out
mov
xchg
dec
movsb
and
int3
fimull
das
push
iret
ss
mov
cmp
and
shl
dec
xchg
mov
fs
subl
inc
dec
xchg
daa
stos
pop
or
das
jge
pop
inc
cmpb
adc
jns
push
xchg
and
roll
add
test
repnz
push
mov
cltd
outsl
addl
mov
dec
sbb
fwait
pop
dec
dec
lret
jg
clc
mov
or
add
and
enter
fsubs
in
dec
inc
inc
std
lret
in
mov
cmc
fldcw
xchg
push
inc
mov
stos
xchg
mov
sbb
je
jne
mov
test
cli
pop
stos
lret
fsubrs
addr16
mov
out
xor
data16
jo
sbb
popf
in
mov
shll
jle
sbb
xchg
pushf
or
cwtl
stc
xchg
inc
dec
dec
dec
or
out
mov
sti
pop
cmpl
inc
pop
pushf
clc
push
mov
mov
pop
inc
cltd
push
push
mov
ret
js
cwtl
pop
ficoml
in
outsb
sar
mov
enter
push
push
xchg
xor
pop
mov
shr
lret
sub
add
xor
lahf
iret
mov
lcall
test
lea
add
mov
movsl
adc
in
out
insb
pop
pop
mov
jp
shl
pop
mov
scas
xchg
mov
cmp
nop
mov
push
popf
imul
sbb
xchg
xchg
mov
loop
cmpb
lahf
lds
or
or
loop
add
test
xchg
hlt
pop
dec
jne
jb
sar
in
aas
mov
pusha
dec
imulb
cmp
mov
xchg
loopne
jo
add
out
or
movsl
add
cmc
mov
mov
out
pop
jmp
push
idiv
mov
pop
fdivp
stc
jecxz
nop
mov
or
inc
push
xchg
test
or
pop
icebp
call
mov
sub
lods
inc
dec
outsb
outsl
lods
add
jne
mov
push
or
fiaddl
inc
mov
cwtl
shlb
pop
into
push
aas
mov
test
lcall
addb
inc
pop
and
iret
pop
scas
xor
into
into
in
xchg
pop
cmp
stc
dec
lea
repz
xor
adc
pusha
adc
pop
cmp
mov
mov
aaa
add
in
mov
out
mov
jbe
insb
negl
aas
pop
fucom
test
test
xchg
out
pop
xchg
shl
inc
cmc
aad
mov
adc
xor
pop
sub
sub
out
sahf
test
in
outsb
xchg
inc
mov
fisttpll
popf
stos
cmp
xchg
cld
mov
mov
xor
mov
dec
add
stos
add
jmp
stos
cmp
insb
or
adc
cwtl
sbb
aas
adcl
mov
loop
notb
dec
xor
cmp
pop
pop
cmc
or
shl
cmp
faddl
sbb
xchg
sub
fsubrs
popa
and
nop
xor
cmp
in
je
pop
out
dec
int
out
lods
push
jb
mov
mov
imul
jmp
mov
fnstcw
imul
ljmp
lcall
dec
scas
popf
loop
shlb
or
mul
dec
mov
mov
dec
mov
cmp
mov
xor
loopne
stos
out
and
cli
xchg
mov
into
push
xchg
adc
test
cmpsb
std
push
cmpsl
push
pusha
mov
stos
jne
outsl
and
mov
test
push
xor
mov
enter
mov
ja
push
cltd
repz
outsb
or
and
add
loope
scas
addl
cmpsb
popa
popf
out
scas
adc
push
cli
in
loop
shrl
sub
callw
test
fimull
xchg
mov
pop
mov
lahf
popf
dec
jp
sbb
mov
loopne
icebp
in
sub
movsl
jb
or
lods
jae
lret
fisttpll
cmp
test
pop
aam
xchg
adc
mov
out
cmpsl
aad
into
rcll
stos
stos
cmpsl
repnz
pop
xchg
lds
stos
mov
add
mov
nop
mov
lds
pop
mov
adc
jne
shlb
cltd
mov
cmp
mov
aas
mov
ljmp
test
daa
xchg
inc
cmc
and
icebp
xor
jb
addr16
inc
push
ret
jns
stos
lahf
mov
fcomi
es
xchg
leave
test
dec
xchg
out
das
mov
mov
adc
stc
xchg
arpl
pop
cld
stos
into
sti
test
hlt
pop
sbb
xchg
nop
ret
xchg
std
and
imul
mov
fs
push
push
gs
or
cli
xchg
fwait
xchg
or
in
repnz
fcmove
or
rolb
adc
scas
addr16
jp
lcall
pop
xchg
je
enter
pop
xchg
fnstcw
dec
add
leave
popf
pop
arpl
add
jge
imul
push
stos
adc
rolb
pop
adc
stc
jecxz
iret
cmc
xchg
lret
push
xchg
out
ret
popa
mov
xchg
cmc
push
add
cmp
adc
es
out
xchg
dec
into
mov
mov
cmpl
sub
mov
sub
stos
push
lods
adc
ret
jmp
sub
or
cmpb
cmp
xchg
cmp
xchg
xchg
sub
jmp
orl
xor
sub
lods
sti
mov
cmp
cmc
xor
in
and
testb
das
lods
test
dec
inc
mov
pushf
push
jns
mov
out
lahf
mov
repnz
mov
and
push
xor
out
jg
int3
xchg
orl
mov
mov
mov
mov
insl
or
fldenv
dec
iret
pop
orl
imul
sti
int
push
or
sub
mov
imul
inc
decb
aaa
pop
popa
mov
aad
push
icebp
mov
cmp
xchg
mov
out
fxch
mov
outsb
xor
fucomp
jb
sbb
fwait
lret
jecxz
mov
repz
xlat
xor
inc
xchg
add
or
fisttpll
lock
cwtl
clc
outsl
mov
leave
cli
imul
xlat
adc
out
sub
fsubr
les
xchg
jo
lret
stos
mov
call
icebp
leave
aaa
jb
fimull
test
iret
out
mov
rep
and
jno,pt
out
cmp
rorb
mov
shll
cli
daa
into
jp
mov
fcompl
iret
arpl
pop
pop
xlat
or
arpl
cmp
mov
imul
cmc
push
xor
out
mov
loope
xlat
cmp
rolb
lahf
test
rolb
arpl
daa
ret
sahf
xor
test
movl
ret
jecxz
lock
std
mov
pop
mov
mov
sbb
idivl
dec
push
test
adc
xorl
sbb
cmc
divb
cld
bound
add
push
in
fs
cmpsl
arpl
mov
sub
mov
popa
stos
xor
or
xchg
addl
mov
ljmp
adc
fstl
sub
jbe
in
incl
lahf
scas
xor
lret
test
add
call
mov
jnp
xchg
cmpsb
mov
xchg
scas
mov
ror
mov
enter
scas
mov
sbb
lods
stc
mov
fisubrs
adc
or
jmp
mov
xor
add
loopne
adc
in
push
sbb
iret
lods
pop
pop
adc
ret
jl
pop
out
mov
mov
xchg
nop
aas
inc
and
mov
or
push
mov
jle
add
repnz
lock
nop
outsl
dec
icebp
and
add
std
testb
out
fs
add
jmp
pop
in
out
rorb
test
sub
popf
mov
inc
sbb
or
jle
pop
scas
xchg
xchg
cmp
lahf
lock
cli
add
pop
adc
out
inc
and
rcrb
or
inc
scas
scas
add
cmc
sti
testb
lret
mov
sbb
int
sub
fsubs
xor
or
cmp
test
lds
or
or
push
mov
popf
sub
and
cmp
xchg
xchg
xor
test
pop
or
mov
clc
iret
lock
in
add
incb
sbb
imul
push
in
aam
xorb
leave
and
add
and
iret
hlt
dec
cmp
xlat
gs
popf
sbb
cld
push
rorb
cs
dec
xor
aas
loope
leave
mov
cmpl
fisttps
mov
mov
imul
les
adc
xlat
inc
adc
inc
dec
in
inc
jne
push
xor
lods
sarb
add
decl
jecxz
mov
jge
or
xchg
or
xor
and
sbb
stc
add
sbb
and
cli
icebp
filds
mov
arpl
gs
cmpsl
gs
adc
jns
testb
sbb
insl
xchg
pop
mov
scas
mov
scas
stos
mov
pusha
inc
dec
mov
mov
stos
sarl
xor
push
pushf
mov
sbb
cli
inc
cmpsl
pop
aad
add
insl
mov
out
std
mov
cmp
adc
cmp
fimull
loopne
dec
sbb
or
adc
in
cmp
xchg
xlat
je
and
lret
mov
pop
cmp
stc
mov
rcll
mov
mov
out
pop
rcll
mov
cmp
js
mov
std
mov
pop
mov
fisubrs
fwait
mov
mov
dec
push
xor
out
adcb
mov
stc
mov
ja
out
cmp
test
sub
data16
dec
push
pop
icebp
mov
test
cli
bswap
rcr
repnz
lahf
stos
clc
popl
lcall
ss
mov
xrelease
and
out
sbbb
xchg
push
test
roll
lret
add
aaa
sbbl
inc
test
xor
rclb
mov
stos
jbe
mov
lret
lret
dec
daa
fnclex
cwtl
movsb
sub
shrb
xchg
hlt
fwait
pushf
loope
iret
outsl
test
stc
out
xor
lds
notb
fs
pop
je
mov
pop
pop
leave
sahf
lret
adc
add
in
shrb
jo
stos
aas
leave
notb
cmp
cld
pusha
repz
data16
mov
mov
sbb
rcll
repnz
xchg
sub
mov
cmp
and
mov
pop
sub
fisubrl
out
fistps
mov
int3
or
cli
pop
or
stc
cmp
imul
mov
cli
sti
in
insl
sbb
aad
pop
jmp
inc
movb
mov
stos
or
pop
out
mov
pop
pop
mov
inc
lea
adc
lods
repz
test
lock
insl
mov
adc
sub
mov
cmp
jno
outsl
inc
lock
jle
mov
dec
jo
dec
mov
mov
out
call
jp
notl
outsb
lea
add
aas
mulb
mov
push
xor
cmp
mov
or
daa
loop
push
add
div
ror
repz
lret
sarl
mov
sbb
mov
aas
call
icebp
mov
mov
in
xchg
pusha
lods
je
rorb
push
mov
add
adc
cmp
mov
mov
repz
jecxz
adc
stc
xchg
mov
fwait
dec
mov
lahf
and
fidivl
lods
test
test
loop
and
das
push
xchg
dec
jb
cmp
outsl
test
cmc
outsl
mov
nop
repz
imulb
dec
lea
sbb
mov
cmp
aaa
lock
aaa
add
xchg
push
enter
mov
adc
push
mov
in
sbb
xchg
aam
jecxz
lock
add
int3
inc
push
daa
push
test
and
push
or
mov
mov
divb
sub
ss
outsl
mov
or
mov
xchg
inc
cltd
stos
push
roll
test
outsl
jmp
fimull
adc
push
mov
imulb
mov
mov
xor
stos
loop
arpl
shlb
pop
stos
lret
stos
ret
pop
dec
sub
arpl
nop
movl
mov
mov
mov
dec
clc
pop
out
mov
sub
push
sub
mov
addr16
cld
ja
daa
fdivl
rcll
ljmp
mov
mov
or
loop
pusha
adc
xchg
lahf
sbb
xchg
stos
shlb
mov
adc
cwtl
pushf
push
mov
jecxz
cs
jnp
out
icebp
in
repnz
je
inc
fcos
outsb
popf
sub
pop
mov
ja
cltd
aaa
cmp
idiv
notb
xchg
je
or
das
orb
pop
push
mov
pop
fisubl
jnp
aas
mov
and
cmp
das
xchg
cltd
imul
in
xor
lret
and
insl
les
loop
adc
aas
jnp
into
hlt
int
push
enter
enter
lret
mov
ret
cmp
jmp
addl
call
mov
cmpsb
sub
xchg
mov
lahf
outsb
adc
mov
cmpsl
int3
and
les
pop
xor
cmp
or
negb
pop
add
leave
inc
es
insl
cmpsl
xor
xchg
repz
mull
cmp
enter
rcll
add
sar
out
clc
out
mov
dec
xchg
pop
std
shlb
imul
xchg
movsb
or
mov
xchg
test
and
sub
pop
xor
mov
hlt
inc
scas
sub
pop
push
lea
mov
mov
xchg
daa
inc
cmp
pop
xlat
pushl
sha256msg2
cwtl
cmp
and
sub
push
sub
insl
ret
pusha
fwait
imul
out
jns
inc
mov
enter
jecxz
int3
jb
mov
lcall
lahf
xchg
scas
or
dec
movsl
xor
sub
out
stc
aam
cs
xor
scas
fldcw
jp
into
and
cwtl
lret
fwait
out
jecxz
lret
stos
and
mov
test
sbb
mov
call
mov
shrb
inc
out
call
pop
ljmp
mov
test
repz
dec
dec
nop
mov
lret
cli
rolb
mov
gs
mov
aas
out
call
pop
or
cltd
fdivrs
adc
mov
add
mov
sahf
test
out
jo
mov
push
fistl
jbe
out
or
push
outsl
rclb
lea
test
clc
ret
sahf
sti
sarb
jo
les
cmpsl
repnz
lahf
das
movsl
jle
pop
pop
test
xchg
xor
pop
jbe
sbb
cmpsb
or
inc
mull
aas
mov
sar
sub
or
int3
mov
inc
into
flds
inc
mov
xchg
les
clc
push
or
lcall
push
pop
add
push
xchg
das
or
lcall
out
pop
mov
cmpsl
and
push
adc
jmp
xorl
mov
and
scas
inc
push
push
movl
repz
orl
lahf
jmp
sahf
mov
ljmp
push
fisttps
mov
mov
repz
inc
fnsave
push
and
cli
scas
not
or
and
add
mov
int3
arpl
int
stc
xorb
mov
js
mov
cmp
aam
std
ret
or
sti
ds
fs
sub
lret
jno
mov
outsb
cmpsl
mov
ret
js
jno
ret
sub
shlb
fistps
dec
mov
pop
sub
xchg
insl
out
sti
icebp
subb
int
out
jmp
inc
mov
out
adc
push
ret
mov
scas
mov
sbb
mov
sbb
push
adc
sbb
aaa
and
xchg
mov
mov
icebp
stos
sbb
std
sub
jge
xor
je
data16
adc
xchg
cli
cmp
data16
ret
fstp
sbb
nop
mov
cmpsb
or
push
fsubrl
sbb
into
sub
jo
movsl
les
inc
out
add
mov
sti
adc
lret
mov
add
xchg
push
nop
push
mov
push
ds
je
fistpll
add
mov
js
mov
jb
daa
mov
add
aam
push
sahf
das
repnz
push
ss
je
xchg
aam
aam
cmp
std
pop
inc
push
or
out
lcall
das
xor
in
push
movsb
adc
sub
jp
dec
inc
mov
or
vpaddsw
bound
roll
movsl
jns
sbb
cmp
cmp
mov
pop
inc
cltd
lahf
mov
sbb
xor
ljmp
lret
sbb
jnp
sbb
mov
sti
call
int3
nop
jge
sub
mov
sahf
inc
and
enter
inc
mov
mov
sub
icebp
out
testb
adc
xchg
ss
dec
xchg
int3
jle
mov
mov
jo
cmc
push
lcall
aad
dec
or
pop
adc
mov
call
filds
add
push
xor
imul
adc
dec
pop
push
mov
jnp
out
leave
pop
fdivrl
lea
ret
jnp
xchg
enter
mov
cld
jbe
sti
movb
rorl
mov
mov
push
js
mov
mov
or
pop
orl
mov
mov
adc
stc
aaa
sahf
test
clc
loop
das
cmp
arpl
push
imul
xlat
jmp
push
inc
jo
add
mov
or
dec
stc
jge
test
movsb
sub
iret
sub
add
sub
rorl
popl
pop
and
mov
fs
insl
push
dec
adc
cmc
and
clc
jo
adc
in
sub
cmpsb
nop
and
sbbl
ret
mov
mov
fdivrl
popf
hlt
pop
jp
outsl
lret
mov
add
push
outsb
lds
jns
cmc
arpl
loope
and
pop
dec
iret
push
out
fstl
push
dec
loopne
cmc
incb
mov
fadds
mov
cmpsl
data16
clc
jbe
sub
fwait
pop
inc
pop
or
mov
add
push
mov
in
mov
cmpsb
sub
or
mov
mov
and
imul
cmp
push
out
jbe
in
iret
pop
stos
pop
nop
cmp
cmp
xchg
mov
ss
cmp
jo
cli
aas
add
mov
out
mov
mov
push
or
pop
scas
ret
mov
stos
nop
jecxz
enter
lea
lock
outsl
fisubrs
loop
dec
xchg
cmpsb
xchg
fwait
lret
cli
les
repnz
push
cmp
cli
xor
jp
cwtl
lret
inc
adc
loop
movsl
dec
outsl
mov
sar
loop
mov
arpl
push
mov
sub
in
rorb
and
idivl
pusha
fnstsw
or
nop
sti
sbb
clc
pushf
in
ror
arpl
stos
aad
fisubrs
in
aaa
add
mov
jge
xchg
in
add
out
fs
dec
sub
xchg
adc
out
pop
or
out
ret
inc
xchg
pop
xor
xorb
iret
insb
cli
js
lods
xchg
popa
and
push
jo
lahf
in
xchg
xchg
sub
sarb
insl
mov
dec
shr
push
xchg
pusha
cmp
add
js
mov
aaa
or
cli
dec
jo
cmp
iret
adc
sbb
je
xchg
adc
xlat
mov
repnz
pop
inc
test
stc
push
xchg
in
add
cltd
cmp
mov
call
call
fiadds
pop
cwtl
xchg
decb
lret
cmpsb
orb
cmpb
movsl
roll
loop
xchg
nop
jmp
dec
add
cmpsl
cwtl
xor
cld
push
and
stos
xchg
xchg
sub
cmp
lahf
test
enter
lcall
and
add
lahf
add
hlt
ljmp
cmp
orl
test
loope
into
sub
add
call
lahf
mov
or
pop
clc
dec
in
add
ja
fninit
aam
shrl
xchg
cmp
test
and
out
mov
inc
movsb
in
insl
push
inc
add
and
mov
mov
loope
popf
mov
hlt
add
arpl
test
jge
int3
sti
loope
lret
cs
mov
inc
and
in
jae
xor
xor
mov
jbe
jmp
jg
and
cmp
dec
out
pop
cmp
out
cmp
ret
jbe
repz
lock
lret
jae
and
xor
notb
lock
mov
negl
mov
add
mov
or
pushf
test
int
in
jmp
pop
enter
add
sub
sub
jo
or
cltd
jl
outsl
imulb
push
xchg
in
mov
repz
pushf
jmp
cmpsb
mov
punpckhbw
jmp
sub
add
pcmpeqb
mov
push
adc
stos
and
in
mulb
mov
cld
ljmp
xchg
or
rep
call
cmc
movaps
repz
mov
inc
loopne
cmp
mov
mov
ljmp
addr16
idiv
nop
pusha
xor
or
sarl
jp
mov
scas
aam
mov
imul
mov
mov
stos
fs
sar
stos
out
lods
stc
or
or
test
rcr
icebp
scas
xchg
in
mov
cmp
rclb
ljmp
and
shll
inc
push
add
push
das
inc
xchg
dec
cltd
dec
and
cld
cmp
faddl
inc
lock
scas
inc
sub
dec
mov
sbb
push
loopne
cmp
mul
adcl
leave
rorb
xor
push
lret
outsl
shll
xor
repnz
jp
out
mov
scas
daa
mov
dec
cmp
movsl
cmp
cmc
test
push
out
jecxz
mov
scas
sbb
cmc
stc
add
mov
popf
out
into
addb
xor
idiv
add
push
mov
xor
mov
popa
xchg
mov
rcr
pushf
fiaddl
xchg
sub
test
insl
xchg
hlt
jp
lret
fldcw
std
sub
mov
mov
aam
push
clc
popa
mov
js
push
xchg
cmp
push
mov
mov
pop
jbe
push
jo
jb
out
and
sub
dec
cmp
leave
or
cmp
xchg
insl
add
insb
adc
dec
jnp
mov
outsb
mov
fldenv
xchg
cli
sbb
dec
mov
mov
and
sub
mov
sbb
pop
cmpsb
mov
xchg
dec
xchg
cltd
adc
sbb
jge
fcoml
jecxz
sub
push
mov
in
jl
out
cli
cmp
sar
jnp
xchg
sub
test
cld
arpl
aaa
clc
sub
jbe
xchg
xor
cmc
add
lcall
into
rcr
lret
pop
jbe
mov
mov
xchg
hlt
mov
flds
cmp
data16
shr
sub
or
iret
gs
loope
dec
or
shlb
inc
enter
lret
mov
mov
loop
or
fnstenv
mov
dec
pop
popf
mov
aad
cmp
fsubl
ja
xor
shrl
out
inc
or
and
mov
repnz
xchg
idiv
adc
xchg
js
adc
dec
test
pop
add
pop
fmull
out
lret
outsl
loop
arpl
inc
lahf
inc
fisttps
hlt
adcb
mov
lea
imul
jge
out
out
loope
stos
scas
call
lret
popa
cld
lock
cltd
jb
in
testl
test
ds
cltd
xchg
and
xchg
mov
and
iret
push
imul
push
dec
aaa
cmp
inc
int3
out
cwtl
out
or
jbe
push
mov
inc
mov
popa
ss
xchg
mov
mov
xchg
fstl
shlb
pop
sub
mov
outsb
loop
lret
cmc
or
jecxz
shrb
ror
out
stos
cmpb
pop
outsb
ret
daa
mov
sub
sub
sbb
sbb
nop
jmp
and
inc
aaa
mov
mov
or
test
aas
daa
mov
xchg
sbb
stc
cmp
or
push
or
scas
test
sub
mov
xor
subb
fiadds
stos
clc
jne
bound
sbb
fisubrl
mov
test
cmp
in
push
bound
mov
xchg
xchg
daa
sbb
inc
lods
xor
imul
popa
mov
setns
sarl
es
or
je
sbb
mov
sub
inc
mov
mov
lds
in
adc
xchg
aaa
sbb
fimull
cwtl
inc
loope
test
xor
out
xchg
stc
loope
arpl
jae
jmp
cmpl
xchg
mov
jg
scas
mov
lods
jecxz
fcomps
push
test
popf
inc
fs
or
lret
push
mov
pop
rol
out
mov
imul
dec
stc
pop
nop
mov
or
dec
inc
aaa
mov
jbe
pusha
and
mov
out
xchg
outsb
xor
scas
xor
dec
inc
aad
adcb
sti
enter
fsubrs
mov
repz
dec
xlat
movsb
fwait
sti
div
lods
jg
idiv
outsl
movsl
notb
popf
push
pushf
aam
je
push
popa
idivb
lea
lcall
stc
pop
rclb
stos
pushf
mov
push
imul
sahf
test
inc
fisubrs
sarb
rcr
xor
cltd
or
pop
cltd
hlt
xchg
imulb
fwait
lods
add
xchg
mov
lret
mov
test
repz
gs
rol
xchg
mov
adc
ljmp
iret
test
sub
jne
repnz
cmpsb
jl
sub
push
dec
mov
cld
sbb
inc
decl
xchg
push
fwait
dec
or
fcmovu
mov
stos
pop
dec
lret
ret
sbb
and
loope
loop
jnp
add
and
jns
adc
xchg
push
loop
loop
sub
scas
inc
sbb
mov
sub
sbb
mov
loop
fnstcw
repz
stos
and
adc
loop
rolb
push
sub
aam
push
push
xor
or
jnp
pop
sahf
mov
mov
andb
xlat
jmp
mov
rorl
clc
cld
mov
repz
and
sbb
jle
cltd
lret
lahf
xchg
push
insl
sbb
negl
sub
pop
mov
mov
sahf
xchg
jo
fildl
sub
xchg
sti
lds
xchg
xchg
pop
xchg
sub
sbb
mov
pushf
mov
loope
pop
scas
mov
xor
mov
mov
movb
xor
repnz
fidivrl
lock
push
xor
stos
movsl
decl
shlb
repz
out
mov
fildl
sub
jecxz
inc
fwait
sbb
leave
loop
aas
jb
or
cwtl
push
je
adc
dec
test
pushl
mov
cmp
sbb
outsb
arpl
scas
dec
leave
add
leave
push
sbb
xor
or
ss
push
sahf
cmp
jmp
repz
cmp
pop
loopne
xchg
das
sbb
mov
pop
or
call
das
incb
fcom
daa
jb
sbb
nop
test
xchg
jns
scas
scas
xor
push
outsb
fldl
mov
mov
je
lret
pop
inc
data16
dec
adc
sbb
lahf
loope
aas
pop
fbld
imul
adc
xchg
sbb
scas
movsl
cwtl
push
scas
lock
jge
xlat
outsl
push
aam
cwtl
inc
test
je
scas
aaa
cmc
pop
push
and
scas
and
out
ja
pop
int
dec
lret
daa
sub
sbbl
insl
mov
aam
stos
jb
frstor
test
out
jno
imul
push
outsl
sbb
dec
mov
sub
ss
ret
sbb
lds
dec
jl
mov
test
pop
fnstenv
bound
add
into
sub
ss
popf
jg
stc
jmp
jecxz
into
frstor
in
rorl
outsl
stos
cltd
leave
mov
mov
fwait
rcrb
test
and
sub
xchg
jl
dec
xchg
cmpl
enter
shlb
xchg
sbb
mov
lcall
lea
mov
and
cmp
std
sbb
jecxz
mov
std
lcall
xor
jp
negb
pmulhuw
js
cmpsl
addr16
stos
adc
std
sub
ja
pop
out
sub
sub
push
ret
cmpl
xchg
add
loop
loopne
jecxz
xor
repz
push
pop
mov
jp
cwtl
and
lret
std
in
jb
inc
pop
sub
dec
mov
jge
pop
jle
add
mov
jp
clc
int
mov
inc
sub
icebp
gs
mov
in
jmp
xor
mov
xor
cwtl
test
add
rolb
cmc
arpl
mov
bound
test
or
lret
or
in
lahf
fbld
and
fcomp
mov
mov
mov
inc
in
or
mov
jns
or
inc
outsl
cmc
imul
cmp
pop
lock
stos
adc
mov
daa
jbe
jae
loopne
mov
les
fs
fidivl
mov
mov
xchg
inc
imul
hlt
out
or
outsl
inc
xchg
inc
out
dec
or
adc
data16
mov
lret
arpl
jnp
xchg
sbb
dec
aas
mov
cld
subl
xchg
xchg
rcr
and
dec
jne
or
arpl
xor
or
mov
das
hlt
icebp
dec
cmp
mov
mov
cwtl
sbbl
stos
mov
xor
or
cmc
das
mov
lahf
arpl
inc
scas
dec
iret
stos
jnp
add
lret
xchg
cmpsb
mov
outsl
jl
jmp
ja
and
or
stos
jae
int3
add
iret
in
cmpsb
push
and
test
call
dec
sti
push
adc
pop
fildll
mov
mov
out
stos
insb
jnp
adc
shlb
int
cltd
xor
in
inc
xor
xor
mov
inc
pushf
add
mov
xor
icebp
dec
mov
call
cmp
in
or
fsub
fs
xor
sub
mov
or
pop
outsb
jae
daa
cltd
jns
mov
pop
xor
add
insb
imul
dec
adc
jo
cmp
xor
fnsave
jecxz
in
jle
stos
es
cmp
iret
inc
lds
adc
mov
hlt
mov
mov
out
cwtl
jne
inc
lods
add
push
btc
mov
mov
das
adc
mov
out
out
add
imul
xchg
addr16
jb
mov
dec
jp
into
pop
scas
or
loope
mov
js
xchg
test
sub
mov
arpl
cmp
pop
mov
jno
popa
lock
and
jb
jo
inc
adc
cmpsb
cltd
inc
sub
push
test
cmp
inc
xlat
push
mov
mov
and
fistps
clc
dec
fcoml
jmp
jno
jbe
mov
sti
mov
sbb
sub
out
add
sbb
icebp
push
mov
fwait
sbbl
mov
outsb
aas
and
and
leave
rcrb
and
icebp
iret
adc
push
or
ret
cmp
jae
add
in
push
pop
cld
jae
shr
add
out
mov
imul
pushf
mov
dec
sub
cmpb
add
sbb
and
icebp
gs
adc
sub
mov
fidivrl
xchg
aad
adc
idivb
fistps
aas
repnz
stos
ret
jmp
divb
inc
xchg
fnsave
in
out
jp
mov
in
adc
std
and
inc
add
je
mov
mov
outsb
faddl
inc
out
pop
pushf
sbb
lcall
or
push
shl
sub
inc
sbb
in
test
into
sti
sti
in
dec
adc
insb
jmp
push
lods
push
shrb
imul
je
lahf
cmp
loopne
xlat
jmp
jp
ficompl
cltd
inc
xchg
mov
cmp
or
xor
mov
xchg
rcll
outsl
cli
mov
lods
ja
push
jg
sahf
loope
ja
outsl
orl
pusha
daa
dec
ret
clc
icebp
inc
icebp
jae
mov
lea
aaa
jmp
hlt
add
arpl
jle
clc
mov
shl
pop
pop
dec
in
sbb
xchg
icebp
jecxz
push
xchg
arpl
adc
ds
fistpll
push
jae
mov
pop
out
dec
jo
outsb
sbb
add
fbld
and
dec
pop
enter
adc
sub
testl
inc
sbb
fdivl
lods
xor
hlt
xor
int3
sub
dec
mov
pop
dec
lahf
stos
loopne
shr
in
iret
cmpsb
jo
push
push
adc
add
or
stos
stos
lock
mov
push
test
andl
pop
hlt
adc
pushf
dec
insb
test
mov
je
popa
idivl
add
or
dec
xchg
das
mov
test
cmp
lret
or
sub
adc
cmp
or
xchg
jg
loopne
rcrl
xchg
mov
xor
inc
lock
repz
sbb
and
fists
xlat
aad
shll
or
filds
adc
enter
loop
dec
xor
mov
imul
fiaddl
xchg
add
dec
fisubrs
adc
cmp
mov
shl
inc
loopne
mov
mov
pop
dec
out
cmp
lock
in
test
xchg
pop
mov
aad
es
mov
mov
dec
mov
test
xchg
mov
fbstp
in
push
hlt
repz
pop
push
push
xchg
xchg
insl
sbb
lret
jb
mov
sbb
pop
inc
sub
dec
les
sbb
into
fsubrl
mov
pop
ds
rorb
aas
in
cli
push
push
mov
imulb
dec
mov
mov
xchg
sti
imul
xchg
xchg
cmp
fimull
mov
jns
xchg
fsubr
adc
movsb
dec
fwait
cmpsb
jb
pop
fmuls
imul
aaa
mov
xchg
xor
pop
movl
cmp
and
jecxz
sub
push
lret
mov
xchg
mov
icebp
sbb
add
out
pop
jo
mov
lahf
jecxz
fwait
mov
call
mov
mov
mov
out
out
push
movsb
mov
jle
adc
lock
arpl
imul
loopne
sbb
lods
mov
fbstp
repz
decl
xchg
xor
or
sub
cmp
xor
inc
pop
push
mov
aam
aam
mov
rcr
or
cmp
xor
ds
pop
sub
ud0
incb
in
mov
pop
or
jmp
lret
dec
mov
enter
or
clc
adc
mov
sub
test
sub
sbb
cltd
clc
lods
outsb
cld
and
iret
push
roll
fmul
cmp
cltd
ret
mov
arpl
jmp
xor
outsb
pushfw
inc
cwtl
inc
add
push
shll
lock
xchg
fidivrl
sarb
pushf
sarl
xchg
cltd
cmpsl
pop
decb
int3
jecxz
fidivs
xchg
test
mov
cwtl
xlat
cltd
mov
push
adc
fsubrp
mov
mov
outsb
stc
sub
dec
inc
adc
scas
aaa
mov
jnp
push
stos
and
cli
test
lea
movsl
mull
or
mov
add
les
and
cld
dec
push
cmc
or
xchg
and
mov
repz
adc
mov
dec
pop
shrl
js
pop
scas
mov
and
lahf
ds
or
fildl
lret
mov
mov
dec
lret
inc
mov
or
cmpsl
pop
xchg
imulb
in
xor
and
cmp
rorb
xor
ja
daa
fsubrs
and
or
mov
xor
testl
int3
or
hlt
es
popl
insl
push
loope
xchg
pusha
pop
and
jnp
push
outsb
dec
sub
aaa
dec
add
pop
imul
es
int
xchg
mov
sti
imul
xchg
mov
paddsw
jo
inc
fcmovb
ret
cmpps
jno
mov
dec
dec
mov
cli
cltd
popa
es
add
mov
mov
lcall
push
ficoml
pop
pusha
int
cmp
pop
adcb
push
in
push
repnz
sti
xchg
adc
pop
test
addb
int
int3
add
mov
jl
js
sub
mov
nop
mov
insl
mov
lret
lock
in
mov
icebp
js
pushf
into
cltd
out
ret
mov
mov
pop
pop
outsl
lds
fstps
add
cmovg
aam
leave
lock
xchg
fstl
loop
sbb
fildl
mov
int
adc
push
out
cmpsl
nop
out
inc
xor
jmp
or
and
sti
imul
movb
sub
imul
sbb
mov
sti
jl
call
popa
mov
pop
mov
pop
fs
xor
mull
outsl
loopne
fnstcw
dec
add
sub
idiv
add
dec
xlat
les
fistpl
pusha
mov
pop
inc
mov
out
mov
addr16
xchg
test
scas
mov
lock
int
lods
cli
aaa
cmc
cmp
mov
sub
fadds
cmc
jmp
data16
inc
cmp
repz
and
or
and
jnp
inc
dec
addr16
push
and
inc
fisubrs
jbe
filds
ret
cmp
mov
mov
xchg
daa
sarb
mov
ret
add
xchg
dec
mov
push
stos
mov
out
arpl
rclb
icebp
cmpsl
insl
add
add
push
sub
xchg
stc
movb
inc
or
arpl
js
insb
ret
pusha
aam
js
clc
xchg
jbe
rcl
inc
aam
inc
sub
dec
push
and
push
and
cmpsb
sbb
push
scas
mov
mov
add
sub
mov
or
cmp
incb
rolb
mov
or
and
jmp
out
pop
lds
mov
lcall
pop
adc
cli
dec
mov
xor
xor
loopnew
sbbb
popf
push
dec
jl
pop
xor
outsb
in
sub
xlat
test
xor
push
ljmp
cwtl
loope
or
sti
notl
sbb
xor
mov
sarb
adc
mov
popl
mov
adc
shll
mov
repnz
out
sub
jg
lcall
mov
jno
test
ret
aam
inc
nop
cmp
xchg
addb
sbb
test
nop
push
sahf
lock
or
jmp
test
call
popa
out
fidivs
pop
mov
cmc
cli
mov
je
mov
jge
int3
jp
mov
jecxz
pop
cmpsb
test
jb
int
add
cwtl
jl
adc
repz
lods
mov
mov
or
pop
add
mov
negb
dec
sub
cld
and
and
loopne
test
loopne
repnz
or
ljmp
mov
push
or
rol
add
je
or
adcb
repz
aad
icebp
das
enter
or
dec
cs
mov
sahf
aam
int3
jne
subl
add
jno
xchg
imul
mov
push
outsb
fsubrp
addb
mov
sahf
int
rcrb
push
in
sti
jge
mov
loopne
and
mov
pop
xchg
shrb
test
cmc
bound
jmp
cmp
imul
pop
xchg
sti
lods
pop
outsl
aaa
ficoml
leave
jb
adc
std
ja
xor
fwait
out
pop
ret
xchg
dec
test
jbe
movsl
fwait
dec
add
jo
cmc
scas
mov
icebp
dec
push
sub
decb
sbb
data16
leave
cmp
or
loop
inc
ucomiss
adc
stc
js
imul
data16
into
xchg
jns
lds
xchg
jb
xchg
loope
push
xorl
mov
out
in
xchg
dec
lret
xor
cmp
and
or
in
pusha
out
jbe
subb
gs
test
pushf
adcl
push
movsl
and
pop
xor
hlt
xchg
cmp
std
aad
sahf
andnps
add
shl
lret
add
mov
imul
jb
mov
jbe
jns
jge
inc
std
adc
and
mov
aaa
pop
and
pop
notl
enter
lcall
iret
push
jmp
clc
ds
xchg
repnz
jns
or
std
lret
adc
and
out
cmp
int3
hlt
pop
xchg
xor
hlt
cwtl
sbb
cmp
sti
mov
xorb
dec
sbb
xchg
mov
pop
cltd
mov
push
mov
push
xchg
fnstcw
or
xchg
and
and
mov
jne
xor
xchg
cmpsb
add
mov
aaa
ja
repz
in
in
out
cmp
cwtl
xchg
or
xchg
ja
mov
or
adc
jge,pn
dec
jno
jo
and
lods
fwait
dec
mov
mov
pop
push
adc
inc
push
adc
insl
pusha
xor
xchg
ret
cmp
inc
add
add
push
mov
mov
add
cmp
pminsw
cmp
aam
add
or
mov
in
dec
lret
aam
sti
xor
clc
or
ss
stos
js
sub
test
jne
cs
sbb
mov
icebp
push
sub
aad
cs
movsl
iret
je
xchg
hlt
and
adc
repz
out
pop
rolb
ds
cmp
jmp
pop
jmp
cld
sub
push
mov
cli
jl
js
stc
arpl
dec
add
xor
mov
jge
xor
and
inc
popf
pop
cmp
aas
fsubrl
out
xchg
shll
arpl
xlat
aaa
movsb
xchg
jae
adc
adc
fucomip
ss
rcrb
sub
xchg
testb
mov
xlat
or
fcomps
or
cmp
xchg
jne
out
negb
adc
rcrb
sub
das
mov
cld
icebp
pop
iret
xor
mov
mov
or
xor
popa
mov
lods
sbb
dec
fcmovbe
cmp
fcmovbe
dec
inc
fsubs
imul
cmp
loopne
dec
xchg
push
xor
mov
mov
sbb
inc
clc
iret
loop
sbb
add
adc
scas
dec
xor
pop
mov
pusha
outsb
int
stos
stos
add
mov
pop
stos
jae
xor
push
lods
adc
pop
popl
bound
inc
imul
shlb
or
jo
cmp
mov
pop
ja
adc
push
mov
movsb
je
nop
xchg
mov
lahf
mov
mov
clc
dec
clc
mov
mov
cmp
and
jg
idivl
jnp
loop
lret
or
mov
cld
sarb
fisttpll
inc
xchg
out
and
mov
push
cmc
pop
fadds
push
jge
stos
or
push
or
and
dec
clc
fwait
popa
flds
mov
cli
je
in
sbb
call
sbb
jns
xor
or
popa
push
out
neg
mov
cmp
mov
sbb
pop
xchg
mov
inc
outsb
ret
lret
cmp
jmp
push
lods
or
idivl
mov
and
int3
xor
xor
loopne
sub
mov
sbb
sbb
or
cmpsb
jmp
ror
into
mov
gs
push
dec
push
pop
xchg
add
sti
mov
mov
xchg
aaa
pop
add
data16
pop
imul
xor
dec
mov
pop
and
aaa
xlat
push
lret
rep
xchg
mov
cmc
xor
xchg
xor
push
pop
sub
inc
jle
aas
pop
mov
pop
xchg
sub
shr
adc
push
sub
add
aam
cli
push
xlat
mov
jmp
fwait
jecxz
rclb
stc
arpl
lahf
dec
pop
adc
or
mov
out
dec
mov
je
std
stc
cltd
push
cltd
adc
pushf
sahf
clc
loopne
cmp
pusha
dec
int
ljmp
shl
inc
fsubrs
movsl
push
ret
push
divb
sub
dec
or
sahf
repnz
xor
fwait
mov
and
cmp
jmp
inc
pop
mov
or
out
iret
hlt
lret
adc
bound
cmp
pusha
or
out
mov
pushf
mov
push
stos
icebp
lret
xor
fucom
xchg
add
les
sbb
xor
pushf
sti
test
mov
test
mov
lcall
mov
push
icebp
into
push
jecxz
lahf
jbe
cwtl
jp
in
xchg
cmp
enter
inc
cli
mov
pusha
add
cmpsl
dec
movsl
dec
ss
sahf
sbb
mov
jae
std
or
int3
xchg
sbb
push
test
mov
rcrb
subb
idiv
and
xor
xlat
call
adc
int
pop
or
call
rorb
fistpl
add
rcll
loopne
mov
or
or
mov
jecxz
add
or
bnd
in
jecxz
int3
outsl
das
jge
sbb
push
jns
cmp
sub
repz
inc
cmp
nop
imul
push
std
mov
shrl
lods
jmp
cmpb
daa
into
mov
cld
ret
dec
js
jecxz
movb
xchg
push
roll
stc
aam
and
cld
out
fwait
jecxz
repnz
dec
ja
aaa
mov
arpl
icebp
shll
call
ret
popf
push
cli
lock
in
adc
pop
out
loop
data16
in
popf
ds
lret
or
iret
add
aaa
add
stos
xchg
jg
mov
sti
stos
loopne
mov
int3
iret
popa
ljmp
js
cmp
daa
mov
add
fisubs
pop
jbe
mov
scas
or
daa
jo
repz
js
loop
imull
js
lods
add
mov
jg
or
cmp
shlb
sbb
in
xor
xor
ss
dec
lock
mov
dec
rcl
into
repz
popa
rcr
cmp
and
push
cmp
imul
cld
and
add
mov
sti
movsb
or
fistpl
fistps
mov
adc
sub
pop
idivb
dec
popa
call
lods
cs
jb
mov
push
inc
adc
xor
jecxz
enter
xor
insl
add
mov
scas
sub
xchg
xchg
nop
cmpsl
mov
push
mov
xchg
test
insl
mov
inc
mov
call
push
lods
dec
mov
les
xor
stos
aad
mov
push
mov
rorb
negl
sub
mov
out
hlt
pop
dec
cmp
mov
push
js
xor
sarl
aad
in
sarb
leave
out
sub
shll
std
addl
call
repnz
push
mov
lods
xor
lahf
std
aas
lea
cmpsb
scas
pop
or
test
not
test
mov
sub
stc
ss
lret
jecxz
xchg
pop
sub
repz
jg
dec
cmc
cli
xor
lcall
mov
insb
xor
push
adc
xchg
lods
in
sti
sub
fiadds
push
cmpsb
and
mov
jae
test
hlt
and
pop
jmp
fwait
mov
dec
in
jmp
enter
xor
pop
jno
cmp
jbe
cmp
test
stos
inc
mov
push
sub
mov
imul
ret
cmpsb
sbb
jae
lea
stos
mov
push
or
cmp
loope
pop
scas
scas
mov
mov
and
sub
pop
aad
icebp
jmp
xor
jecxz
jb
rcll
sub
push
and
mov
popa
mov
loop
jecxz
ljmp
xchg
dec
pop
sbb
mov
orl
sub
ss
mov
xor
add
push
push
mov
aam
std
xchg
dec
fidivs
adc
enter
xchg
pop
sbb
mov
int
jno
pop
icebp
out
jnp
rorb
addr16
insb
imul
or
cld
mov
fistpl
jno
adc
dec
fcmovbe
ljmp
scas
test
repnz
iret
cwtl
pop
cmp
xchg
add
loope
jbe
movsb
lods
xchg
ds
push
inc
dec
out
push
add
cld
fnstcw
icebp
jmp
mov
int3
in
xor
cli
adc
mov
outsb
xchg
cmp
and
scas
fimuls
je
push
push
loopne
add
sub
jb
mov
add
sub
xorb
xchg
mov
fwait
mov
lahf
in
pop
xor
sti
pusha
into
or
popf
loop
int
les
in
leave
clc
imul
outsl
sub
loop
cmp
mov
lea
or
adc
clc
mov
or
jb
lods
imull
add
sub
lret
incl
and
cmp
mov
adcl
jns
lods
jbe
movsb
inc
insl
lret
mov
ret
xchg
jge
insl
xchg
sub
xor
sub
clc
jnp
xor
mov
andl
push
cmp
lcall
jecxz
adc
rclb
jp
push
jge
or
mov
jmp
jo
pop
xor
fildll
push
mov
iret
jmp
aas
xchg
negb
add
mov
pop
xchg
add
in
mov
xor
xor
push
inc
lahf
lret
pusha
sahf
dec
cs
daa
cmpsl
xor
xchg
or
mov
and
jbe
in
xor
pop
sub
nop
scas
inc
stos
mov
jae
int
repnz
inc
xchg
cmc
stc
jb
or
mov
xor
and
test
lds
jne
push
or
sub
pop
mov
push
fwait
push
pop
imul
mov
or
mov
dec
add
aas
dec
xor
pusha
jno
lods
cmp
and
jle
in
jb
sub
das
mov
xor
inc
mov
stos
pop
pop
cmp
push
dec
fnstenv
push
jecxz
pusha
pop
js
inc
pop
mov
test
pop
fimuls
popf
ret
sahf
inc
cmp
or
and
int
aam
lds
ja
lds
add
mov
add
je
cmc
push
xchg
and
sti
arpl
cmp
cltd
mov
and
out
cmp
jnp
negl
leave
or
sti
mov
adc
dec
sti
lcall
pop
jle
xor
sbb
stos
xor
push
push
popf
out
out
addr16
das
aas
lds
pop
xlat
rcl
test
push
cmp
jo
pop
lds
imul
mov
mov
ret
mov
inc
cmpsw
scas
xchg
pop
test
aaa
or
xor
mov
pusha
push
lahf
aam
cld
repz
xchg
pusha
jg
pushf
pop
and
scas
push
repz
jo
lcall
sub
adc
hlt
in
xchg
pop
adc
lcall
ja
mov
cmp
out
sub
popa
push
hlt
mov
sub
fmul
scas
cli
lret
cmp
mov
xchg
add
sbb
test
fs
xor
mov
cli
clc
pop
ret
sbb
lods
sub
xchg
add
ret
arpl
mov
sbb
mov
cmp
and
in
cmp
icebp
pop
mov
xor
andb
adc
cmpsb
stos
stc
andl
popa
loope
push
push
pop
jne
pop
outsb
cmp
std
ret
shl
cmpsl
jl
cmp
in
or
out
mov
or
sub
inc
dec
in
test
mov
fidivl
xchg
aaa
mov
lds
je
jae
sub
test
nop
and
cmpsb
push
and
pusha
and
fisubl
pop
scas
push
call
addb
xchg
dec
setp
je
pop
and
pusha
inc
push
lret
mov
xchg
or
jb
mov
xchg
mov
jo
cmp
orl
and
std
mov
mov
adc
mov
sub
lcall
mov
push
mov
rcrb
pop
and
jb
loope
cmc
jge
outsl
pop
insb
and
add
cmpsb
add
xchg
jb
repz
test
pop
xor
int
out
sub
mov
mov
jno
outsb
aam
ja
add
ljmp
and
sbb
xor
mov
rep
inc
outsl
ja
test
ljmp
std
dec
aas
leave
sarb
jmp
mov
xchg
mov
ljmp
inc
mov
mov
out
popa
repz
xchg
negl
xchg
dec
fistpll
test
push
jge
mov
pop
dec
fbld
and
jge
inc
pop
pop
test
movsb
jnp
or
mov
xchg
ja
jb
mov
sbb
jo,pt
decb
xchg
push
ljmp
lock
sbb
imul
xor
and
xchg
jb
xor
jg
mov
dec
xlat
dec
movsl
pusha
push
pop
pop
shlb
shl
aam
mov
aaa
jo
xchg
or
and
int
loopne
pushf
mov
out
add
das
jl
repz
pop
test
mov
jl
push
cmc
sahf
pop
mov
cmpsb
scas
adc
sub
cmp
loop
and
popl
shlb
les
in
nop
call
aas
js
cmp
dec
data16
dec
je
sub
push
ret
add
js
and
aas
mov
repz
sub
outsb
pop
push
cld
cmpl
adc
inc
popa
fistpll
call
jno
loop
loop
ret
lcall
mov
out
sbb
and
scas
adc
cmovne
add
rorl
fildll
das
hlt
mov
loopw
mov
add
incl
cmp
insb
adc
notl
repz
cwtl
in
pushl
and
into
mov
mov
mov
negb
lret
nop
sub
out
push
jmp
jne
mov
stc
adc
push
push
popl
out
or
jge
sub
out
dec
lret
push
cmpsl
sarl
repz
mov
jmp
inc
mov
jl
lods
cmpsl
mov
in
movsl
mov
lret
loop
or
xor
mov
fcompl
adc
xor
bound
sub
jbe
movsb
xor
sbb
shr
mov
into
xchg
shll
out
testl
mov
fnclex
insb
imul
or
mov
mov
add
inc
nop
das
scas
test
scas
mov
call
loop
jp
repz
cmp
mov
shrb
lock
sbb
jl
inc
push
lds
add
dec
sub
jne
mov
push
outsb
addb
push
jle
stc
lahf
insb
es
mov
mov
ss
pop
insb
or
and
das
repnz
stos
nop
pop
pop
addr16
mov
sbb
jecxz
addl
dec
adc
add
add
lea
lret
jecxz
jge
jge
mov
notl
mul
or
data16
movsb
cs
jge
clc
jo
or
mov
repz
mov
loopne
mov
push
ljmp
mov
insb
push
xor
push
dec
loopne
jae
mov
mov
daa
movsb
sbb
dec
ljmp
cmpsl
or
ljmp
je,pn
push
push
lds
mov
pop
mov
cmp
cmpsb
jno
xor
sub
mov
inc
or
arpl
jp
jp
lahf
mov
cld
push
test
xchg
sub
jmp
mov
fcmovb
pop
ret
mov
ja
lds
in
in
pop
cs
pop
call
add
rsm
xor
sysenter
lods
rcrl
inc
sarb
pop
mov
shl
mov
repnz
mov
mov
xchg
mov
push
std
sbb
mov
xchg
sub
xor
jb
gs
xchg
xchg
push
lods
enter
jge
dec
jmp
sub
js
pop
pop
call
dec
push
mov
xchg
out
mov
mov
in
sub
int3
fwait
stc
ljmp
jae
xor
add
xor
adc
xor
ja
in
or
pmuludq
push
sahf
push
mov
add
arpl
mov
out
mul
push
lods
pusha
das
cltd
loope
cmpsb
push
push
repnz
dec
push
clc
mov
movlhps
push
mov
int
icebp
bound
mov
sbb
adc
add
xchg
cmp
sbb
jbe
js
dec
fcoms
shrb
sub
shll
ljmp
xchg
xorl
sti
sbb
cld
sub
inc
lods
sbb
xchg
dec
lahf
movsb
daa
and
shl
faddl
popf
adc
cld
test
lea
ficoml
fistps
push
inc
and
sub
sbb
adc
pop
jecxz
out
or
add
dec
fistpl
mov
sub
icebp
mov
stos
dec
dec
push
mov
mov
mov
ret
ret
imul
lock
sub
push
ja
sub
inc
xchg
fldcw
dec
dec
push
jl
mov
add
push
shll
and
cld
dec
jg
notl
mov
sti
pop
dec
push
std
movsb
shrl
sti
xlat
pop
mov
jp
mov
lea
mov
pop
mov
mov
es
and
sti
not
mov
adc
call
adc
iret
mov
out
aad
sti
cmpsl
dec
es
sub
fsubp
mov
lods
or
cltd
mov
aad
jmp
call
pop
dec
mov
fistps
mov
ret
sub
fisttps
out
dec
dec
fwait
dec
xchg
add
lret
pushw
mov
rclb
mov
movsl
mov
dec
lret
aam
push
jo
adc
sahf
mov
mov
lods
sbb
or
fdiv
dec
xor
xchg
loope
idivb
bound
ds
stos
and
xchg
adc
iret
call
sbb
jno
pop
and
cmp
rep
inc
dec
mov
pop
loope
dec
xor
ds
jo
sub
call
cld
mov
int
cwtl
mov
mov
enter
jbe
mov
adc
icebp
iret
aaa
mov
mov
jp
ffreep
pop
pause
test
fnstsw
test
or
push
movl
cltd
cltd
and
jbe
repnz
jecxz
pop
mov
rclb
aam
test
add
cmp
aad
lods
dec
mull
mov
mov
pop
sarl
mov
out
and
test
xorl
mov
hlt
aaa
frstor
lock
xor
cmpb
sar
scas
xchg
adc
lods
les
dec
and
cmp
jb
lea
adc
and
cmpsl
dec
lret
imul
aaa
je
lock
mov
and
inc
adcb
fisttpl
testl
in
in
mov
adc
sar
push
pop
xchg
mov
cmpsl
pop
lcall
jecxz
in
les
push
mov
xchg
xchg
mov
aas
pop
sub
dec
clc
mov
in
in
mov
push
mov
fdivrs
aad
fistps
xor
dec
addl
jb
sub
mov
enter
mov
out
dec
shrl
repz
loopne
shrl
fsubs
add
movsb
push
mov
rclb
jg
or
push
insl
stos
dec
cmp
sbb
dec
in
cmp
pop
cwtl
popf
inc
push
cmp
adc
mov
fwait
cmp
arpl
mov
push
push
lahf
clc
inc
in
arpl
arpl
sub
xorb
fwait
jecxz
mov
jp
cmp
mov
mov
lods
pop
jmp
adc
shlb
lret
inc
or
clc
idivb
mov
jmp
rorb
ret
test
mov
dec
sahf
fmul
insb
fcoms
and
stos
outsb
jmp
dec
xor
sub
jbe
add
xor
pop
inc
jmp
fs
mov
xor
orl
add
out
testb
test
iret
stos
sbb
or
aaa
ljmp
jae
push
icebp
dec
mov
repz
and
imul
mov
dec
xor
fidivl
loope,pn
and
xchg
or
mov
mov
repz
arpl
cmp
pop
cs
xor
xchg
cmpb
push
jmp
in
xor
sti
cmp
jge
cmp
jmp
add
imull
divl
xor
ds
push
ss
jo
out
lretw
insl
lcall
shlb
inc
push
sti
imull
adc
xor
xchg
mov
rorb
arpl
pop
pop
pop
push
les
push
dec
call
imul
cmpsl
xchg
out
fwait
push
sti
jecxz
mov
mov
inc
inc
nop
adc
mov
jo
jl
sbb
mull
in
mov
rcrl
gs
push
fdivr
rolb
bound
stos
ja
movsl
fxch
push
cmp
cld
inc
push
imul
pushw
mov
pop
cld
jp
loopne
test
in
bound
cmp
sub
mov
sbbb
xor
dec
outsl
sbb
pop
cmp
in
inc
xor
mov
dec
jno
pushf
pop
mov
mov
xchg
clc
jo
mov
in
scas
lahf
aam
lea
out
mov
cld
sbb
mov
cmp
sbb
ds
lcall
test
dec
mov
repnz
test
add
mov
dec
out
push
out
push
imulb
bound
xchg
in
mov
lds
test
test
adc
sub
sub
sbb
or
inc
daa
or
outsb
stc
add
cmp
stos
adc
xor
sar
insb
inc
xchg
mov
cmc
push
jno
mov
cmp
nop
inc
bound
mov
mov
push
mov
xor
cmp
nop
call
mov
add
push
mov
out
push
pop
xchg
fnstcw
dec
mov
mov
sbb
cmp
add
push
mov
outsl
movsb
dec
dec
and
cmp
jne
and
cmc
fiaddl
test
imulb
sarl
mov
arpl
int
ja
pop
fstp
push
out
mov
scas
add
icebp
call
adc
xchg
test
pop
mov
and
negl
addr16
xchg
push
ror
in
jecxz
mov
push
dec
jae
jno
hlt
jecxz
dec
and
enter
cli
lock
mov
shrl
call
shr
mov
loop
mov
movsb
loope
inc
cmp
push
pop
sub
pusha
loop
mov
or
call
pop
sbb
cwtl
rolb
cmp
inc
mov
adc
loope
or
int
repnz
xchg
mov
push
jns
push
mov
xor
cmpsl
enter
test
dec
je
jb
xor
cmp
sub
push
xchg
adc
or
sbb
push
clc
aas
imul
nop
arpl
es
mov
push
sub
dec
fcomip
pop
iret
add
jo
cmp
jecxz
push
cli
rcll
test
xchg
mov
mov
stc
leave
stos
xchg
cmp
mov
lods
xchg
adc
push
imul
neg
xchg
stc
pop
add
jle
out
mov
mov
sbb
adc
scas
repz
mov
ret
or
and
push
shl
jle
out
push
ljmp
movsb
sub
std
jecxz
jmp
dec
das
outsb
aaa
sub
cmc
dec
aad
push
sbb
mov
push
jne
add
inc
add
and
mov
xor
mov
jnp
adc
rorb
sub
xor
or
jae
push
xlat
mov
out
notl
in
and
out
pop
add
scas
pop
and
test
sub
sub
or
out
aad
jp
jbe
out
push
fistpl
inc
jmp
jecxz
jmp
sub
jecxz
xchg
xchg
pop
sarb
shlb
jbe
repnz
stc
dec
shlb
and
in
lret
popa
jg
sti
mov
into
aam
cmc
loop
iret
mov
out
xchg
fwait
daa
mov
iret
clc
mov
leave
insl
cltd
dec
add
add
lret
push
fldt
mov
sub
add
xchg
aad
lcall
mov
sahf
sbb
mov
mov
pop
ret
in
jecxz
push
sub
dec
xchg
jbe
xchg
lahf
cld
inc
inc
cmp
repz
in
inc
dec
mov
in
dec
rcll
cmpsl
push
inc
out
cmp
jnp
fdivl
ds
mov
sbb
and
mov
aaa
sahf
push
inc
xor
dec
push
int3
jno
ds
inc
dec
dec
add
and
jp
jmp
and
stc
std
icebp
mov
adc
jge
cld
pop
std
cmpsb
stos
sub
or
and
in
xchg
sub
out
stc
cltd
push
mov
imul
repz
test
cld
mov
lea
cmp
jmp
or
xlat
push
pusha
mov
aas
movsb
adc
gs
and
movsb
pusha
adc
xor
stos
repnz
gs
lahf
std
repnz
sub
push
pop
test
add
bound
in
rclb
push
std
pop
fwait
push
jmp
insb
out
pusha
pusha
ja
leave
jmp
mov
in
test
scas
testl
rclb
or
sbb
flds
sti
shlb
jne
rcrl
mov
lcall
div
rol
inc
jo
repz
adc
and
in
push
decb
iret
xor
lret
xchg
pop
cmpsl
rcr
imul
sbb
ss
adcl
repnz
mulb
pusha
push
and
inc
mov
jp
into
pop
lret
sahf
adc
rcl
add
loop
lret
xchg
xor
push
test
or
fistpl
mov
ror
cmc
shlb
xchg
shlb
push
dec
inc
xchg
cld
loopne
sbb
xor
mov
ret
hlt
pop
mulb
sti
add
shl
xchg
sub
xor
jmp
hlt
or
test
cmp
jecxz
mov
or
ret
pop
fldt
scas
test
sub
lds
jae
imul
dec
daa
pop
loop
imull
aad
jmp
xor
fcmovnu
or
ljmp
xor
or
sbb
inc
mov
sub
jmp
sti
mov
inc
int3
pop
stc
pop
scas
stos
es
nop
rcrb
dec
mov
sti
cwtl
clc
xchg
cwtl
outsb
in
int
lcall
push
ljmp
mov
sbb
push
xor
jge
push
enter
xchg
dec
in
jo
sub
scas
ret
jl
fildl
jmp
adc
hlt
in
cmp
addb
dec
jl
cmpl
and
clc
popf
inc
push
inc
pop
mov
or
pop
jae
aam
daa
adc
ret
jg
stos
mov
or
adc
scas
enter
inc
fdivs
in
adc
xor
lods
push
and
inc
enter
lret
xor
inc
inc
dec
mov
dec
test
mov
jae
cli
sti
jbe
jae
mov
cmpsl
and
lret
test
jae
bound
push
adc
sti
cs
in
iret
pusha
fsub
stos
aas
ret
movsl
pop
fcompl
sahf
pop
mov
enter
jbe
rorb
fimuls
ljmp
push
lods
cmpsb
out
iret
adc
jecxz
jg
nop
mov
fistpl
dec
cmp
cmp
out
clc
jo
int3
cmp
add
mov
out
lcall
mov
test
mov
and
sahf
dec
test
push
ss
dec
xchg
cmp
out
andl
mov
daa
rorb
cmp
mov
inc
cmp
test
mov
imul
mov
sti
sbb
vmread
mov
ss
dec
loopne
xor
jmp
repz
enter
out
shlb
mov
js
and
inc
int
iret
add
inc
scas
dec
inc
xor
sbb
int
fsts
jle
xchg
incl
mov
mov
sbb
mov
shr
clc
into
sti
push
cmp
arpl
jg
and
dec
iret
fidivl
jns
push
sahf
loopne
add
sbb
test
lock
xchg
test
mov
jae
push
push
cmp
lret
lock
nop
xor
mov
pop
faddp
ss
pcmpeqd
mov
stos
push
and
cmpl
and
ja
cmpsb
loopne
cli
iret
pop
mov
push
in
dec
test
sub
pop
test
xchg
nop
lds
in
pop
aam
xor
mov
fs
sbb
pop
movd
and
or
stos
incl
scas
dec
cwtl
inc
test
mov
negb
mov
xor
mov
insb
out
rclb
xchg
clc
sub
rcl
xchg
cmp
push
rol
pop
out
test
ljmp
xor
arpl
add
mov
sbb
push
inc
mov
movsb
mov
cltd
cli
mov
xor
popa
dec
int
call
stos
add
movsl
orb
nop
and
push
xlat
stc
mov
mov
sub
push
insb
testb
cmc
inc
lock
cltd
lret
loop
inc
insb
or
pop
lret
jns
fwait
out
scas
adc
sbb
jo
cmp
mov
loopne
dec
dec
icebp
cli
add
mov
imul
push
daa
in
call
mov
sub
daa
aaa
cmc
pcmpeqd
fsubrs
or
shlb
scas
jo
pop
loop
or
dec
test
mov
cmp
iret
loop
cli
sahf
mov
repz
xchg
icebp
lods
jnp
sub
mov
popf
cltd
movsl
decb
ss
xor
mov
sub
push
jl
xchg
aam
orl
outsb
outsl
clc
sti
jbe,pn
sahf
out
xchg
sbb
loope
sbb
pop
adc
lret
lret
in
mov
aas
je
jmp
clc
cmpl
inc
or
mov
jo
arpl
mov
aad
push
int3
mov
leave
jae
in
dec
mov
lret
and
stc
repz
mov
lcall
mov
jge
clc
mull
ds
hlt
cmpsl
fidivrl
repz
sbb
iret
lahf
cmp
lcall
into
fsubrp
mov
int
out
loope
mov
cmp
and
int3
jo
xchg
test
sub
cmpsb
enter
xchg
mov
push
jae
sbb
ljmp
lods
cmpsl
mov
fisubs
lret
sbb
movsb
bound
lahf
add
jecxz
push
push
lock
arpl
dec
xchg
out
scas
push
cmpl
cmp
flds
mov
cmp
into
adc
rcrb
int3
bound
mov
cmpsl
mov
scas
push
out
push
add
lock
fistps
sbb
inc
fmul
mov
cli
nop
push
xchg
jp
bound
inc
stos
or
or
push
mov
pop
cli
dec
bound
cvtpi2ps
xchg
and
mov
inc
pop
leave
orl
dec
out
jmp
std
std
nop
jno
cmpsl
adc
in
jl
imul
add
and
shr
sahf
xchg
or
in
and
jge
pop
jmp
jecxz
test
inc
out
jle
shll
fbld
sub
repz
jmp
imul
ss
inc
mov
adc
pop
mov
jg
sbb
nop
mov
pusha
inc
cmp
repnz
mov
test
sbb
jecxz
loope
sahf
adc
add
or
mov
aad
in
sub
iret
cld
sbb
mov
inc
jae
jb
jp
fcompl
xorl
int3
ret
jmp
add
bound
imul
call
cwtl
jno
test
cmpb
js
iret
lahf
sub
dec
in
loop
mov
dec
incl
mov
xlat
loopne
js
std
or
push
lock
sub
jg
test
int
xlat
hlt
sub
outsl
sub
push
mov
mov
movsb
mull
sub
xchg
jg
mov
idiv
dec
pop
xor
stos
testl
sub
inc
sbb
fidivl
or
sub
outsl
es
mov
pop
mov
sbb
lret
fidivl
adc
int3
xchg
push
xchg
pop
movsl
cmp
sbb
dec
dec
mul
in
xor
mov
das
es
cmp
frstor
mov
mov
push
mov
sbb
mov
dec
test
push
mov
sub
mov
jle
push
jo
call
cmc
cld
sbb
lock
dec
test
xlat
imul
or
sbb
pop
faddp
fs
mov
and
out
stos
or
test
mov
inc
add
push
push
divb
adc
jl
loop
sbb
mov
jne
sbb
jmp
mov
rcll
outsb
mov
cmp
push
lret
outsb
mov
sub
or
push
sub
aam
sti
mov
ljmp
xchg
daa
inc
dec
pop
dec
push
pop
mov
mov
jb
ss
mov
lcall
data16
addr16
test
mov
add
and
addr16
cmp
pop
mov
xchg
dec
adc
inc
lahf
jne
mov
mov
xchg
mov
call
inc
aas
enter
adc
sub
lret
loopne
cmp
mov
dec
clc
push
out
push
repnz
sahf
in
push
inc
cltd
inc
iret
pusha
outsl
mov
pop
cmp
jbe
mov
fimull
mov
push
or
andl
lret
filds
adc
das
lock
pusha
inc
cmpsl
test
add
insl
xlat
mov
and
add
das
inc
or
into
push
movsl
pop
jl
std
jo
ud1
xor
jl
mov
push
test
rolb
cmp
sub
popf
or
or
es
push
rorl
jmp
lret
inc
sub
jp
dec
sub
icebp
mov
cs
add
in
hlt
mov
notb
dec
and
or
pop
mov
fldl
lret
mov
or
push
mov
aas
push
fwait
mov
xor
lods
dec
adc
fildl
pop
mov
sahf
xor
jecxz
pop
lret
mov
dec
imul
mov
and
loopne
mov
dec
and
iret
cld
aaa
and
scas
bound
lcall
cmpsb
or
sub
leave
jae
sti
jae
jmp
add
icebp
mov
lret
lds
mov
in
fimull
cmpsl
ljmp
push
neg
fstpt
jecxz
jo
stos
fwait
fwait
ljmp
push
mov
ret
mov
sub
inc
popa
adc
in
add
jle
inc
xchg
dec
or
sbbl
movsb
fisttps
fdivp
add
cmp
call
pop
addr16
imul
push
loopne
out
in
and
adc
dec
out
shll
or
push
cmova
adc
cmc
cli
dec
xchg
mov
stos
xchg
xchg
adc
divb
sub
mov
jmp
xchg
lods
fnsave
sub
dec
out
pop
or
push
es
loopne
mov
iret
pop
outsb
hlt
xlat
fstl
clc
lods
dec
adc
leave
sarb
loopne
or
mov
or
gs
lret
mov
jo
push
out
jns
movsl
imulb
jno
jns
add
loope
stc
hlt
xchg
jns
push
stc
xchg
or
aad
aas
push
fdivrl
mov
jecxz
mov
cmp
jg
outsb
sub
inc
jno
mov
cld
add
push
xor
xlat
adc
push
xlat
imul
dec
inc
mov
clc
inc
or
pusha
stc
arpl
dec
bndldx
mov
stos
packsswb
arpl
roll
xchg
adc
pop
insl
fisttps
inc
js
mov
stc
mov
stos
cltd
pop
aaa
sarb
cmp
das
into
xchg
aas
push
mov
imul
mov
pop
repnz
add
xor
mul
scas
push
add
scas
subb
popa
jne
mov
bound
sbb
xor
cld
shlb
clc
dec
loop
mov
out
push
mov
xchg
dec
xor
in
cmovno
dec
mov
idivb
xor
dec
out
sub
lock
loop
pop
sbb
adcl
mov
in
divb
push
arpl
cmc
out
and
pop
mov
sbb
test
mov
jl
jle
lods
mov
pop
mov
cwtl
push
iret
mov
mov
clc
jo
lcall
setb
inc
into
addr16
jecxz
ds
aam
lret
andl
xorl
mov
cmp
fisubrs
cmp
and
sbb
or
adc
aas
pop
test
test
ljmp
push
or
sbb
daa
sbb
jnp
lahf
add
jecxz
and
xor
sbb
cltd
popa
out
out
loop
jmp
les
pop
outsl
nop
repz
movsl
js
pop
push
nop
out
mov
in
inc
nop
jmp
sub
lret
pop
jns
rorl
xchg
mov
shrb
scas
pop
mov
lea
clc
lret
out
sti
insb
xchg
cmpsb
stos
test
sub
movsl
or
adc
add
daa
imulb
in
mov
add
fstp
bound
pusha
jae
leave
inc
jae
test
daa
pop
jne,pn
addr16
daa
repnz
push
add
jo
jbe
lea
xchg
xchg
cmc
outsl
fwait
aas
jecxz
push
mov
pop
jb
insb
imul
das
mov
dec
sbb
and
add
sub
xor
dec
dec
pop
icebp
cmp
test
aad
sbb
push
out
push
or
stos
cmp
add
push
xchg
in
mov
add
xchg
scas
pop
je
shll
inc
out
cmp
or
xlat
aad
mov
arpl
icebp
pop
xor
cmp
cmpsb
mov
scas
shrl
bound
mov
push
push
call
outsl
rcll
call
adc
xor
jno
or
jb
lods
sub
loopne
cltd
sub
test
jns
loop
xchg
imul
shlb
lock
pop
mov
int
xor
icebp
movsl
push
push
xor
inc
gs
out
call
icebp
cmpsl
jl
clc
stc
adc
rcrb
mov
jnp
sub
push
pop
scas
bound
movsl
ljmp
add
adc
repz
xchg
outsl
rolb
sbb
cld
inc
mov
sub
mov
loope
jge
hlt
lret
sti
dec
mov
test
xor
dec
in
lock
or
mov
movsb
bound
fists
push
repz
push
stos
int3
and
loopew
and
mov
sbb
mov
dec
xor
pop
xor
inc
mov
pushl
xlat
loopne
add
stos
int
cltd
add
aas
cwtl
loopne
mov
repz
es
jge
std
ljmp
shl
xchg
hlt
mov
or
lods
fldl
es
hlt
mov
jecxz
sti
cmpl
movsl
cld
leave
stos
dec
sbb
ret
cmp
mov
mov
out
std
lock
lcall
into
add
aam
lahf
sbb
xchg
pop
sbb
xlat
push
sub
test
cmp
popa
test
jmp
decb
or
xlat
inc
hlt
jecxz
movsb
cmp
adcl
sbb
lea
mov
lds
and
push
push
out
les
bnd
push
pop
sbb
outsb
inc
xchg
js
dec
into
iret
push
pop
dec
sub
jmp
imul
std
out
jae
xchg
lahf
popa
push
loope
inc
pushf
iret
sarb
mov
imul
cli
fwait
jmp
cmp
test
cmp
inc
mov
pushf
xchg
incl
iret
pop
les
xchg
mov
shrb
lahf
scas
inc
and
jae
addb
dec
notl
xlat
sbb
sub
dec
sbb
pusha
loopne
dec
or
repnz
pop
mov
ja
paddusb
test
add
push
sbb
and
and
test
mov
push
ss
cmp
mov
adc
dec
pop
sarl
call
cli
clc
jns
xor
ret
push
scas
stos
jmp
push
adc
sti
jle
add
push
sbb
pusha
in
repz
out
add
shlb
je
out
inc
mov
adc
mov
fwait
add
nop
jp
leave
mov
outsl
aad
stos
aaa
mov
clc
outsb
add
add
mov
mov
adc
xchg
inc
xchg
mov
inc
mov
cmc
jecxz
call
frstor
dec
and
xchg
rorl
adc
idiv
dec
add
mov
cmpsb
je
pusha
movsl
xchg
add
sub
sbb
jne
cmp
out
jb
pop
jecxz
test
aas
lcall
mov
test
data16
inc
jecxz
mov
loope
arpl
pop
fisttpll
das
test
inc
leave
es
rol
jl
in
mov
mov
or
in
adc
push
repnz
lods
out
or
xchg
loopne
fimull
in
sbb
and
test
cmp
scas
fwait
dec
mov
mov
ja
mov
sub
ss
dec
into
jecxz
xchg
mov
xlat
movsl
xor
add
sbb
stos
mov
loope
lret
add
mov
in
sarb
pop
adc
fcomi
cmp
ret
ss
fisubrs
push
push
xchg
das
test
pusha
xchg
cmpsl
mov
lahf
scas
mov
mov
aad
sbb
jo
adc
mov
jb
ds
xchg
sbb
ret
iret
xchg
fs
in
test
fdivl
inc
gs
sbb
ja
mov
dec
iret
rclb
add
mov
aad
pop
mov
int3
pop
data16
fcmove
aad
mov
loop
cwtl
daa
inc
push
enter
rolb
idivb
mov
ljmp
subl
jl
add
neg
fcomp
cmp
dec
jl
cmc
out
dec
cs
mov
jge
inc
jecxz
push
mov
movsb
fldt
icebp
mov
scas
cmp
adc
xchg
loope
sahf
aaa
and
scas
cwtl
jns
orl
out
adc
lods
icebp
jbe
xor
xor
dec
xchg
push
sbb
daa
out
cmpl
aad
lock
mov
sti
jns
lahf
cli
stos
adc
ret
push
xor
xor
mov
xor
mov
and
rclb
jge
leave
push
out
jo
or
mov
adc
inc
mov
cli
and
iret
test
mov
sarb
cmp
test
xchg
adc
cltd
or
leave
nop
ljmp
les
sub
push
clc
jge
mov
inc
sbb
subl
dec
cmp
gs
mov
inc
xchg
scas
jo
dec
mov
xor
cmpsb
lret
mov
push
in
push
or
daa
fcoms
dec
add
aas
adc
ja
dec
subl
dec
repz
negl
aas
pop
and
dec
push
adc
mov
dec
mov
fwait
xor
lret
insb
fldcw
arpl
mov
push
cmp
jle
adc
clc
lcall
xchg
cmpl
push
push
mov
inc
shr
sub
stos
lods
fistpl
lods
pusha
testb
sahf
and
cmp
adc
test
out
je
xchg
notl
in
jno
outsl
punpckhdq
jne
insb
aaa
sbb
aaa
adcb
test
or
test
inc
cld
enter
jo
out
xor
fnstsw
push
movsb
in
repnz
xchg
xor
lcall
mov
lods
lahf
imul
mov
repz
insl
cltd
xchg
pop
mov
pop
mov
and
imul
repz
stos
icebp
inc
das
dec
ja
roll
imul
jne
mov
rcrb
test
std
ss
jo
push
xchg
xchg
sub
add
fwait
out
dec
or
adc
aas
and
jl
mov
push
jecxz
pop
sub
out
dec
loope
daa
inc
inc
out
pop
dec
push
pop
mov
hlt
pusha
in
xor
ljmp
push
aam
lret
mov
scas
lret
lods
sbb
inc
cmp
adcb
mov
test
cmc
cmc
and
call
cs
xor
mov
jno
mov
inc
in
movsl
enter
iret
cmp
or
cmp
mov
test
imul
out
or
push
dec
add
xor
push
sahf
mov
mov
aam
test
icebp
push
xchg
std
arpl
mov
mov
xchg
lret
in
cld
jg
test
fsubs
xor
inc
pop
enter
stos
outsl
fcoml
push
out
lret
jns
inc
subb
pop
ret
xor
jl
mov
call
or
imul
popf
daa
add
notl
sub
jno
daa
lret
aad
xlat
pop
push
pop
mov
leave
pop
dec
xchg
mov
add
mov
mov
xchg
mov
jns
or
mulb
out
mov
add
sub
ret
mov
call
orb
mov
rolb
push
mov
clc
sbb
mov
mov
movsl
mov
stos
sub
icebp
fnstenv
fimull
xor
andl
mov
stc
inc
add
hlt
repz
add
int
adc
into
ret
adc
pop
push
adc
pushl
aas
lret
aas
js
mov
fisttpl
mov
pop
dec
jmp
lock
outsl
call
sbb
aad
jl
pavgw
sub
cmp
aaa
add
daa
mov
test
cld
fsub
xor
divb
je
and
loopne
sub
insb
sysenter
rcr
orl
cmp
cmpsl
sub
cmp
xchg
aas
jnp
pop
incb
out
outsb
mov
push
dec
sub
jb
imul
xchg
das
test
xchg
mov
pop
add
xor
loopne
inc
sub
sub
aaa
testb
inc
sub
cmp
in
or
or
ja
mov
adc
mov
mov
and
je
out
push
gs
dec
loop
subb
repz
jle
data16
xor
addr16
cs
ss
pop
mov
iret
gs
out
iret
mov
pop
add
stc
arpl
cmp
jnp
ljmp
cwtl
test
test
sub
lods
sbb
jecxz
mov
rclb
mov
repnz
ror
mov
popa
arpl
lret
cmp
shlb
push
and
cltd
push
lcall
jecxz
icebp
filds
arpl
mov
jb
cmp
xorb
dec
adc
pop
jno
dec
loope
hlt
data16
cltd
pop
inc
fwait
adc
in
mov
push
push
loopne
adcb
jb
stc
sbb
inc
outsl
mov
adc
dec
jecxz
xor
sahf
push
adc
mov
adc
ja
push
xor
mov
or
aad
and
jge
jmp
adc
push
adc
scas
cli
jle
imul
cs
pushf
leave
mov
xchg
xchg
xchg
mov
movb
xchg
imul
pop
aam
add
xchg
xor
aam
test
jecxz
leave
mov
movb
testb
mov
loop
jl
mov
or
lds
dec
mov
pop
repz
sub
out
adc
iretw
pop
sub
pop
jg
mov
pop
jge
cmp
cmp
outsb
mov
sbb
xlat
fiaddl
cld
cmp
das
xchg
xor
lods
call
inc
inc
popa
fcompl
pusha
add
and
ror
xrelease
cwtl
pop
push
jb
mov
mov
out
push
sub
fnsave
mov
xor
jo
push
call
int
mov
mov
pop
or
xchg
sub
xlat
pop
test
iret
jb
gs
add
out
and
sub
dec
push
lahf
mov
aaa
fcmovb
xchg
test
rcrb
push
mov
jl
mov
aam
lods
xchg
mov
fs
mov
sub
pop
add
arpl
cs
shr
fstl
imul
cmpsl
or
imulb
sarb
mov
xor
popa
leave
adc
jg
inc
nop
adc
ja
frstor
and
pop
xor
sub
rcrl
addl
outsl
sub
push
or
scas
loope
xchg
cmpsb
mov
sbb
cmc
mov
outsb
popf
sub
cmp
shrb
outsl
dec
inc
mov
dec
cmc
cmpsb
cmpsb
jge
mov
loop
push
aaa
js
call
and
jnp
and
test
pop
fidivrl
jns
jge
std
add
push
sti
pop
mov
xor
stos
orl
ret
data16
scas
push
add
mov
inc
insb
mov
lret
inc
rcr
adc
scas
mov
enter
push
dec
scas
pusha
inc
sub
cltd
in
into
jecxz
jo
dec
loopne
dec
and
decl
shr
adc
lret
push
cli
je
bswap
jns
dec
int3
lock
in
cli
sbb
dec
mov
shll
pop
cmp
jl
dec
and
arpl
or
cmp
jmp
pop
stos
cmp
dec
sbb
cmpsl
or
inc
ja
out
jno
scas
mov
xor
ret
clc
push
in
pop
inc
loop
iret
fists
lock
rolb
clc
imul
div
stos
inc
cltd
mov
aad
cltd
push
lock
stos
bnd
insb
cwtl
repz
push
out
popa
hlt
mov
std
cmp
lcall
in
gs
push
in
das
test
nop
aad
mov
push
sub
pop
subps
scas
out
inc
cmc
push
mov
mov
mov
xor
xchg
add
iret
push
rcl
stc
inc
jb
xchg
inc
clc
inc
cmp
out
xor
inc
js
pop
lret
pop
mov
cmp
inc
lea
or
aam
pop
inc
xor
dec
aas
push
repnz
ja
js
ljmp
push
dec
rorb
sarl
push
popf
push
add
movsl
out
outsl
mov
sub
test
inc
ljmp
inc
add
cwtl
or
sbb
jnp
push
scas
loope
in
pop
pop
pop
jae
int
mov
jae
rcl
or
ljmp
mov
pop
decl
rcrb
mov
cmpb
mov
jl
imul
lret
mov
insl
imul
xor
ljmp
int3
lret
subl
mov
dec
cli
fcomi
and
inc
shl
cmp
push
lds
mov
shlb
mov
stc
xchg
sbb
fcomi
pop
sub
arpl
inc
pop
xlat
test
xor
cmp
mov
in
mov
sbb
cmc
popa
out
adc
adc
lds
xchg
das
lret
cmp
cmpsb
mov
test
cmp
js
loopne
dec
add
lods
bound
in
dec
mov
sub
or
jge
stos
cltd
sahf
cmpsl
fstps
xlat
loop
lahf
lcall
imul
out
mov
add
loopne
sbb
push
lods
dec
int3
cmp
roll
push
sub
mov
or
push
dec
ljmp
in
xchg
jecxz
sti
sub
mul
cmp
mov
push
xlat
xchg
cmpsl
dec
aaa
mov
mov
test
daa
mov
repz
adc
int
add
jmp
bound
test
rorb
addr16
es
mov
fsubr
idivb
or
enter
lea
data16
dec
jl
loope
or
mov
into
lret
mov
arpl
lret
adc
popa
test
cmp
enter
xchg
inc
lods
jno
sub
dec
es
mov
cmp
mov
lods
push
pop
dec
adc
cli
mov
fadds
out
sbb
push
iret
test
sbb
jg
sbb
jl
xlat
mov
dec
nop
les
aas
cmp
or
lret
mov
je
and
daa
movsb
mov
adc
push
movsl
jl
mov
xor
imul
test
and
mov
lods
mov
das
sbb
nop
testb
sub
jge
sub
mov
mov
rcl
xor
xor
out
add
outsb
mov
fidivl
loope
mov
loopne
xor
int
out
insl
in
cmp
ret
cmpsl
jnp
aas
push
test
in
movsb
outsb
stc
imul
ss
lea
and
or
pop
sub
push
pop
xor
addr16
test
aam
mov
jb
and
sarl
dec
sbb
cld
ljmp
and
outsb
xchg
xor
cmp
mov
ljmp
cltd
mov
mov
insb
add
imul
mov
mov
add
xor
adc
aaa
or
insb
or
ss
cmp
and
iret
imul
push
mov
notl
stc
imul
jae
push
daa
das
call
sbb
lods
shr
and
stos
mov
ja
adc
xor
es
dec
aas
cmp
push
popf
sti
pop
movsl
cwtl
in
and
repnz
repz
xchg
repz
in
lds
mov
cmp
shlb
dec
arpl
jge
add
addr16
xor
pop
out
ror
xorb
xor
test
js
mov
push
into
lods
mov
lcall
dec
fdivl
ss
cmpsb
mov
repnz
cmp
out
lock
stos
aad
sub
ljmp
jbe
in
idivl
lea
fsts
mov
aam
popf
rolb
movsl
lcall
lds
gs
mov
shl
pop
std
push
jns
cmp
cmp
pop
add
scas
cld
mov
push
mov
sub
mov
or
jb
in
arpl
repz
stos
push
mov
scas
xor
mov
inc
or
stos
cmc
clc
in
xchg
repnz
mov
mov
pop
in
xchg
push
shlb
movsl
lret
mov
in
jae
dec
mov
shll
jg
sti
jnp
sahf
andb
xchg
aad
lcall
test
dec
pop
sbb
and
rorl
lret
test
mov
xchg
loope
mov
push
cmp
mov
test
jnp
lods
aad
movsb
jmp
and
repnz
mov
out
stos
dec
stos
jns
imul
movsb
cli
cmp
stos
int3
cmp
xchg
bnd
adc
push
invd
call
mov
pushf
lods
push
ret
out
and
xor
fwait
push
iret
loopne
pop
and
cmp
jbe
cmp
push
vmaxss
push
adc
hlt
push
xor
mov
sarb
roll
cmp
in
ds
nop
std
gs
je
leave
jbe
shl
fcmovb
int
xor
mov
mov
mov
push
jg
arpl
mov
jbe
xchg
clc
stc
mov
ja
aam
xchg
or
repz
inc
cltd
clc
roll
icebp
inc
mov
int
loopne
sbb
test
lcall
popf
fdivs
fistl
push
xor
frstor
pop
and
fcoms
es
mov
test
out
sub
dec
or
jmp
imul
jnp
stos
sbbl
iret
mov
push
out
xchg
cmp
aam
mov
mov
and
iret
in
mov
lahf
mov
mov
fwait
std
fcmovne
out
mov
ds
hlt
ja
stos
out
stc
stos
adc
sti
add
jecxz
int
imul
mov
jae
pop
xlat
xlat
movsl
pop
xorb
xchg
iret
cli
clc
imul
stc
cmpsb
in
lret
and
sub
lods
leave
jnp
shrl
push
mov
jbe
jne
js
cmp
fwait
mov
jb
or
cmp
xchg
loop
pushf
xchg
sub
imul
push
add
dec
loopne
ret
ret
mov
int
dec
sbb
cmpl
mov
nop
decl
xor
jb
or
mov
fdivl
cmp
jae
sub
add
into
pop
jg
cwtl
or
dec
inc
mov
pop
xchg
mov
cli
push
js
sahf
clc
mov
fiadds
nop
loope
pop
aam
xchg
mov
shlb
cld
pusha
rorl
iretw
js
jp
shl
pop
push
inc
mov
mov
jecxz
paddw
movsl
mov
jnp
nop
jae
stos
mov
xchg
and
dec
jmp
test
pusha
jb
add
test
cmp
repnz
orl
jbe
mul
mov
push
addb
adc
les
mov
push
hlt
fsubrs
push
fbld
mov
cmc
shrb
adc
scas
and
lds
loope
push
mov
mov
outsb
cmc
mov
jg
adc
jae
test
add
aam
add
xchg
mov
stos
mov
int3
lock
ljmp
mov
add
xor
dec
lahf
cmc
mov
pusha
and
push
cli
mov
stos
pop
jb
push
jo
cmp
pop
push
fildl
dec
adc
push
loope
fdivs
jno
and
popf
clc
dec
fidivrl
mov
leave
call
mov
xor
loop
imul
pop
jle
push
lret
call
mov
mov
outsl
inc
dec
test
xchg
cmp
jecxz
or
xor
mov
xor
inc
mov
dec
mov
call
rorl
iret
push
xchg
push
sti
insl
inc
mov
sti
lahf
mov
mov
lahf
stc
divl
sub
loop
add
sub
hlt
shlb
xchg
jbe
stc
cmpb
sub
fistpll
add
and
test
in
pop
aad
push
into
in
sub
rcl
ss
daa
fildll
sbb
mov
cmp
mov
das
mov
pop
out
mov
dec
mov
jecxz
xlat
mov
shll
cmp
ficomps
inc
movsl
sub
lret
xlat
adc
imul
inc
bound
lds
sbb
cmp
jle
jnp
mov
and
test
cli
inc
mov
mov
push
cmp
incl
jnp
dec
push
test
jmp
cmp
pop
mov
int3
xor
lods
fadds
xorl
movsl
mov
outsl
je
or
add
loop
cmpl
jne
or
mov
ljmp
sub
test
sbb
scas
test
pusha
mov
pop
dec
mov
mov
cmpsb
rcl
test
sbb
jle
loopne
jmp
pop
mov
or
imul
mov
sub
push
fiadds
jmp
dec
lahf
frstor
movsb
add
ljmp
mov
cmpsb
sbb
decl
loope
fucompp
test
lods
push
nop
mov
push
das
push
xor
dec
mov
or
pop
rorb
inc
int3
mov
lods
test
lret
mov
sti
lods
sub
lds
std
push
cs
iret
fs
dec
stos
pop
pop
inc
pop
jnp
icebp
ret
leave
imul
xor
repz
add
mov
mov
call
outsl
mov
ror
hlt
ljmp
adc
cltd
mov
mov
cmpsl
add
and
imul
xchg
test
pushf
ds
push
imul
mov
dec
push
xor
cs
imul
jnp
shrl
mulb
sub
dec
cmpsb
xor
sub
sahf
xor
pop
xchg
iret
mov
cmp
lahf
xchg
loopne
mov
shlb
cwtl
mov
jge
xlat
mov
and
mull
sti
icebp
inc
test
mov
lock
mov
clc
ss
sbb
ret
shlb
mov
xchg
addr16
xchg
repz
cli
mov
xlat
lcall
fldt
fwait
scas
sbb
pop
test
push
jl
fidivl
fistpl
push
aam
inc
mov
dec
jl
xor
xchg
clc
mov
imul
clc
out
imull
pop
add
cmpsb
adcb
jecxz
mov
jne
and
cmp
lcall
dec
into
push
lock
sbb
clc
mov
add
push
or
shrl
fisttpl
xchg
int
push
orl
cli
outsl
ds
xchg
clc
mov
adc
pushf
ja
aas
aam
in
sti
rol
add
jmp
incl
mov
xchg
lock
jb
dec
gs
jo
mov
out
lret
movsb
icebp
sub
enter
fldenv
filds
cltd
idivl
inc
mov
mov
movsb
inc
and
jbe
add
js
lret
mov
mull
jne
xor
pop
rolb
lahf
or
js
cmp
inc
or
lods
scas
je
fptan
add
push
xor
jmp
roll
xchg
shlb
mov
nop
mov
hlt
push
dec
mov
push
ret
pop
bound
push
jp
pop
sbb
mov
mov
loope
in
lcall
add
test
and
jl
inc
dec
mov
sbb
cmp
mov
idivl
test
jns
int3
mov
xchg
das
movl
aas
pop
fiadds
mov
xchg
or
mov
jmp
and
ljmp
inc
mov
jge
iret
or
mov
rcrl
ljmp
ds
test
imul
push
ds
dec
pop
inc
insb
mov
and
stc
push
adc
test
and
cmp
inc
ror
sbb
sub
shlb
cmpsb
adc
cld
sub
add
fs
dec
adc
out
mov
stos
inc
daa
mov
xorl
data16
and
add
xchg
stos
loop
cmp
bound
fsts
imull
cmp
or
push
fnstcw
add
in
jge
jg
or
cmpsb
jmp
adc
push
mov
es
cmp
in
arpl
cmp
sarl
sbb
xchg
cltd
sub
enter
xchg
xor
in
cmp
inc
mov
cmp
inc
stc
adc
lcall
std
push
rcrb
les
cmp
aad
decl
int
orb
mov
aas
ja
int3
add
insl
jo
pop
test
pop
loop
scas
sti
popf
and
lods
adc
mov
dec
leave
iret
push
mov
jmp
cmpsb
popa
add
mov
test
lret
cmp
push
or
dec
js
mov
and
ror
out
cmpsb
cmc
outsl
insl
movsl
frstor
rol
imul
fisubs
mov
or
xchg
cmp
mov
outsb
test
call
je
cs
jmp
lcall
adc
loope
test
xchg
mov
cmpsb
sub
sub
leave
aas
arpl
fstpt
jno
mov
mov
dec
jbe
dec
lods
push
movsb
mov
adc
push
aad
jmp
addr16
mov
rcll
in
xchg
loop
std
shl
adc
stos
aam
pop
pop
pop
pop
jnp
adc
push
sbb
stc
mov
cld
and
ficomps
push
stc
pop
clc
popa
rolb
dec
jle
mov
or
or
mov
sub
pop
cmp
inc
movsl
add
fildll
jnp
out
cmp
hlt
sbb
lcall
aad
inc
adc
addb
into
jg
sub
mulb
pop
enter
or
and
mov
fwait
sti
data16
bnd
shlb
rorl
jo
in
mov
hlt
fstpt
gs
sub
daa
subl
mov
inc
and
dec
cmp
mov
stc
mov
adc
xor
iret
mov
jl
scas
mov
int
nop
dec
add
aad
xor
test
and
cmp
movl
jno
das
rolb
cltd
jb
lahf
inc
jo
xor
divb
fadd
push
les
push
push
xor
adc
or
divb
xchg
dec
insl
push
repz
out
shll
jge
mov
xor
xchg
sets
xor
aam
push
rcll
ret
cmp
inc
ficompl
das
repnz
jae
push
cmp
xchg
push
repnz
mov
into
jo
mov
adc
cmc
aam
xlat
mov
pop
popa
rcl
daa
popa
or
lret
sbb
mov
sti
outsl
dec
imul
push
push
imul
mov
push
dec
mov
sti
stc
scas
ret
daa
sub
outsl
cmp
aam
jecxz
test
push
aam
adc
mov
outsl
bound
push
ljmp
movl
push
push
ret
insl
xchg
scas
cmp
cli
mov
repz
mov
call
dec
fisubs
pop
sub
lods
hlt
cmp
mov
mov
jbe
lds
xor
cs
iret
in
inc
ss
mov
daa
sbb
xchg
stc
jno
jnp
shrb
push
fisttpll
testl
push
jne
repz
mov
push
aas
js
in
pop
inc
jge
jae
mov
ret
rcll
popf
add
xchg
dec
popf
test
mov
sbb
xchg
push
mov
or
jmp
fabs
test
or
mov
fiadds
bound
push
cmp
add
cltd
aas
mov
stos
loope
pop
cmpsb
xor
jp
or
add
testl
mov
xor
aaa
or
imul
cs
mov
sub
ret
ja
jecxz
jle
mov
xor
arpl
add
les
lcall
sbb
lock
test
div
xchg
mov
xlat
mov
sbb
dec
sub
ss
out
jae
pop
jbe
dec
rolb
pop
push
sbb
adc
dec
jns
xchg
cltd
push
ss
add
sahf
leave
out
outsb
dec
cmpsl
adc
and
mov
aaa
mov
shrl
inc
inc
aad
sub
imul
notb
cmc
mov
enter
mov
adc
jns
out
in
into
or
add
in
enter
mov
in
cli
lock
xchg
jmp
pop
xchg
xchg
shll
jle
mov
mov
loop
mov
dec
stos
in
push
and
and
cwtl
out
clc
mov
cli
ror
popa
loop
repnz
js
pop
in
repnz
add
ljmp
or
jecxz
mov
sbbl
xchg
enter
movsb
shrl
icebp
sbb
ficoml
sub
sarl
jmp
movsb
push
mov
into
mov
xchg
sbb
xchg
or
xchg
adc
push
or
mov
inc
jns
std
pop
shrl
hlt
orb
cmp
das
mov
push
shrl
in
xor
cmp
lods
cmpsl
push
mov
push
and
and
ret
lods
push
into
xchg
jmp
cmpsl
lcall
pushf
sbb
xchg
fisubrl
imul
push
lea
mov
mov
rol
in
idivb
loopne
jmp
pop
or
icebp
insb
mul
mov
push
adc
int
mov
add
inc
add
sub
andb
pusha
jno
addr16
icebp
xchg
add
out
loopne
scas
mov
iret
out
push
ret
out
dec
push
pop
rorl
scas
out
and
in
adc
mov
xchg
sarl
mov
or
cld
pop
mov
mov
je
pop
mov
or
roll
pop
sub
and
push
ja
icebp
adc
lcall
mov
mov
movsb
test
in
inc
push
mov
sbb
mov
lods
ficompl
ljmp
movsl
mov
add
jmp
shlb
lahf
and
scas
adc
jge,pt
mov
repnz
movsb
stc
aam
xchg
shll
ret
mov
mov
mov
xchg
mov
mov
pop
adc
mov
movsb
aad
rcr
or
mov
push
jnp
xor
mov
push
cli
xlat
testl
mov
sar
cmp
pop
mov
dec
jmp
jno
mov
xchg
jg
adc
or
mov
lret
sub
cld
icebp
rorl
pop
aas
xchg
adcb
pop
arpl
mov
sbb
add
add
mov
mov
ror
sub
jmp
add
clc
cmpsl
cmpsb
cmp
sub
cltd
stos
mov
dec
push
and
add
xchg
jp
idivl
arpl
adc
xchg
repnz
jns
das
aaa
dec
dec
or
fwait
call
dec
dec
sti
pusha
sub
jmp
mov
pop
lret
cmp
jecxz
loop
cmc
xchg
into
pushf
adc
ret
push
inc
add
test
xor
pop
inc
sbb
leave
inc
stos
push
mov
adc
stos
int
xchg
add
out
cmp
jp
aad
lods
mov
lret
fucom
aam
sti
dec
cmp
imul
outsb
lds
pop
mov
jmp
mov
ret
subl
jae
test
popf
lods
imul
and
mov
out
sti
mov
dec
cld
mov
mov
les
call
rclb
es
mov
and
xchg
mov
and
outsb
pop
fwait
jecxz
cmp
and
mov
aam
push
addb
push
mov
jg
lds
mov
repz
in
fldcw
loop
mov
iret
out
dec
insl
es
cmp
pop
push
lds
dec
ss
iret
stc
fsubrp
leave
add
pop
push
xchg
out
xlat
or
leave
out
stos
arpl
ret
push
mov
sub
jg
mov
jnp
xor
and
mov
jmp
adc
arpl
inc
adc
mov
sub
sub
adc
in
arpl
xchg
repnz
fcompl
xor
fsubr
or
arpl
movsl
pop
subb
inc
add
imull
mov
clc
pusha
jmp
je
sub
stos
sbb
ss
fld
and
xchg
pushl
fmull
xor
jo
testb
cmp
jmp
inc
loop
sti
push
loop
fiaddl
lods
pop
movsb
lea
mov
xchg
xchg
arpl
icebp
cld
mov
lcall
cmp
lods
js
aaa
nop
jae
xchg
and
out
test
pop
dec
stos
add
divb
enter
mov
stc
mov
mov
add
jnp
push
daa
inc
mov
cltd
jg
call
dec
adc
cmp
jl
ret
call
bound
rcr
mov
dec
in
test
stos
xchg
mov
sti
out
jns
std
lock
sub
sub
iret
push
in
jne
pop
scas
cmc
or
scas
adc
mov
cs
lcall
faddl
fsubl
mov
push
in
mov
xlat
or
popl
mov
les
loopne
mov
lahf
push
push
xchg
mov
jecxz
cmp
cmpsl
sbb
adc
sarl
dec
aam
sub
mov
lods
insl
xor
ljmp
shrb
sbb
loopne
js
js
push
cmp
outsl
imul
dec
sbb
mov
pop
clc
test
or
jb
push
loop
or
push
pop
and
shl
sbb
bound
sarl
test
add
out
mov
inc
add
xlat
testb
dec
cmpsb
jl
mov
push
mov
fstps
and
stc
inc
int3
ds
mov
ffreep
mov
movsb
push
shrl
add
sti
inc
sub
mov
adc
push
in
sub
lods
arpl
push
fistpl
cmpsl
pop
adc
dec
mov
call
dec
sbb
xor
dec
push
out
cmp
les
cmp
fistps
movsb
add
clc
dec
mov
call
popf
ficompl
popa
outsb
pusha
mov
std
or
and
xchg
and
push
sbb
or
aaa
out
xchg
sar
xchg
mov
and
ret
hlt
insl
les
jns
cmp
xor
jb
ja
cltd
hlt
fdivrp
inc
or
jecxz
repnz
adc
lea
or
or
out
xchg
xchg
vpmaddwd
int
cs
dec
out
mov
enter
fimull
jecxz
jp
pop
inc
xchg
imul
xchg
adc
mov
push
call
sub
mov
push
sbb
cmp
push
outsb
push
popa
mov
dec
repnz
stc
iret
mov
dec
out
iret
push
mov
ja
lahf
insl
sbbb
adc
shrl
out
pop
dec
pop
rolb
scas
outsb
pop
out
xchg
or
xchg
xchg
loop
and
das
push
xchg
adc
repnz
iret
xchg
adc
cmpsl
stc
mov
pcmpeqb
dec
fldt
repnz
cmpsb
mov
stos
fisttpll
inc
xlat
xor
incb
or
or
testl
mov
jo
jl
add
adc
jbe
jb
and
daa
inc
inc
mov
rcll
repz
test
icebp
pushf
sub
jnp
add
rorb
pop
and
into
sbb
call
hlt
xchg
mov
cmp
mov
mov
add
std
cmp
sti
ret
add
loop
sub
loope
and
jmp
test
in
pop
mov
or
pusha
ret
adc
sbb
lcall
xor
and
xchg
jno
sarl
xchg
js
loop
adc
out
les
sub
gs
xchg
and
jle
test
sbbl
aaa
imul
ret
dec
cmp
adc
jnp
lahf
mov
cs
push
pop
inc
add
push
jle
in
in
add
fdivrl
dec
hlt
mov
cmp
scas
sbb
jp
pop
je
rcrl
aas
push
inc
xor
inc
jmp
popa
pop
xor
daa
loop
rolb
pop
out
cmp
mov
loopne
xchg
push
push
js
fistpll
cmp
adc
xchg
stos
loop
jp
cmp
push
lock
loop
fistpll
mov
lods
repz
push
lock
and
mov
iret
stos
cli
xchg
fisttpl
lahf
pop
push
loope
call
inc
repz
stc
push
add
in
call
jns
or
xchg
adc
inc
int3
stos
push
out
and
fs
or
lcall
sbb
gs
out
xor
scas
movsb
inc
adc
mov
xlat
outsb
dec
pop
add
mov
and
mov
mov
mov
in
push
mov
adc
mov
mov
add
add
xlat
adcb
fdivrp
cmpsb
mov
inc
jecxz
gs
lret
scas
inc
pop
push
push
pop
out
xchg
loope
xchg
mov
pushf
jb
inc
jmp
insl
lods
js
das
inc
xchg
aas
or
cltd
into
jmp
sub
mov
inc
sahf
jns
ret
and
sbb
push
xor
mov
jae
stos
imul
cmc
arpl
imul
rorb
into
bnd
add
enter
adc
push
mov
xchg
cmp
mov
add
jmp
inc
mov
fbld
or
in
decb
cltd
ljmp
adcb
xor
out
mov
je
xchg
and
adc
sarl
mov
ret
sub
pop
mov
sbb
jmp
iret
shll
lahf
dec
push
mov
mov
adc
xor
fimull
and
sahf
cmp
fdivrs
std
sub
sahf
mov
std
jmp
push
cmpsl
mov
sub
loop
pop
mov
cwtl
push
mov
clc
ljmp
mov
out
pop
lods
fs
lds
xorb
jb
dec
add
jb
xchg
pop
mov
stos
pop
add
lret
mov
aas
inc
nop
std
loope
adc
lds
mov
pop
dec
aaa
xchg
dec
cld
stc
jl
jle
icebp
pop
cmp
clc
fstl
adc
repnz
mov
mov
adc
mov
and
out
mov
adc
int
cmp
ja
sub
sub
mov
dec
scas
cmp
and
ljmp
xor
fucomp
idiv
int3
insb
loop
lret
inc
mov
stos
scas
imul
notl
faddl
test
int
cmpsb
push
out
addl
sub
adc
sub
xchg
hlt
lock
out
xchg
cmc
fnstsw
and
lea
cmp
out
jecxz
rcrb
sub
fiadds
dec
xchg
cmp
js
push
cmpsb
fdivs
stos
dec
sub
ljmp
pop
pop
imul
xor
xchg
stos
mov
leave
scas
sub
je
aas
lret
xor
in
fidivrs
pusha
cmp
filds
and
or
add
cltd
out
mov
aas
js
or
aaa
jne
jp
test
add
sbb
int3
repnz
ret
mov
shlb
or
idivl
out
push
jnp
mov
std
aas
mov
enter
int
and
outsb
fidivl
not
test
adc
jle
leave
push
shl
xor
xchg
jns
push
lret
sub
mov
add
pminsw
negb
jno
mov
cli
std
jae
xchg
mov
mov
jne
dec
xchg
aam
sahf
fildll
mov
push
adc
jne
call
dec
mov
jmp
cltd
jbe
test
into
push
mov
lods
add
jp
movsb
ja
inc
mov
arpl
mov
outsl
lcall
jg
mov
hlt
test
push
inc
and
mov
fwait
cs
inc
inc
out
roll
push
mov
xchg
and
pop
dec
add
xchg
stos
jle
call
pop
mov
std
add
mov
sub
mov
orl
addr16
es
addr16
aam
out
out
gs
nop
std
pop
lret
push
int3
and
stc
mov
cs
sti
add
cltd
cld
aaa
or
pop
jae
lock
xchg
notl
cli
sub
xor
dec
icebp
xchg
int3
stos
mov
jmp
xor
nop
xor
xor
pop
cmpl
sub
mov
imul
xor
das
mov
inc
xchg
or
jecxz
push
rcrl
popa
int
pop
loopne
adc
jb
jg
jl
cmp
in
mov
mov
addr16
sub
scas
mov
xchg
jo
mov
jnp
ja
cmc
dec
js
leave
notb
rorb
test
negb
fisubl
out
adc
popf
test
cmp
sub
roll
pop
xchg
mov
and
mov
mov
fcmove
push
cvtpi2ps
jno
lahf
pop
sahf
xchg
fstl
add
dec
xorl
std
mov
mov
adc
add
test
lret
mov
pop
jno
mov
aad
jno
inc
movb
lds
xchg
inc
idivb
daa
dec
es
mov
pop
in
mov
es
add
or
popf
popa
rcr
jbe
jle
leave
add
nop
notl
mov
mov
ss
inc
cmp
dec
subb
lcall
movsl
in
sub
sbb
sub
andl
outsl
stc
movsl
mov
mov
mov
jge
loopne
in
jae
jbe
lods
mov
add
loope
xchg
lret
lret
test
fsubrs
loope
or
inc
scas
cmpsl
iret
jl
cmp
call
lahf
pop
dec
mov
loopne
pop
pop
test
call
push
out
or
xor
in
lret
iret
dec
es
or
xchg
mov
popa
dec
add
sub
in
adc
into
lods
mov
icebp
jge
cmp
pop
sti
mov
setbe
mov
dec
hlt
hlt
stos
add
rorl
add
lret
movsb
add
push
fwait
dec
push
adc
adc
es
sub
lods
jmp
aam
adc
das
and
dec
jnp
aaa
pusha
sti
test
cmp
roll
int
xchg
mov
rcll
hlt
rol
xor
dec
lods
mov
xlat
xchg
lcall
test
and
scas
movsl
jae
stc
fsubl
sbb
imul
mov
sub
rorb
add
xchg
aam
or
jb
push
mov
pop
shlb
mov
jge
mov
push
lret
jp
inc
addr16
ja
xor
cwtl
mov
sub
in
test
adc
iret
cmp
mov
inc
iret
cmp
xor
imul
pop
aam
mov
sbb
mov
pop
sub
cmp
ljmp
std
mov
mov
jmp
mov
js
mov
dec
pop
int3
push
aam
jnp
push
cltd
cmp
add
jl
jp
pushl
repnz
xorl
bound
loopne
mov
add
xchg
mov
pushf
push
or
std
sbb
daa
cs
bound
loope
aas
loope
shll
sbb
or
inc
push
dec
scas
in
adc
xorb
pop
lcall
insb
mulb
inc
cmc
or
fstl
jge
std
mov
jne
cmpsb
jmp
stos
push
add
inc
inc
add
outsl
dec
cmp
sub
dec
inc
andl
incb
lds
dec
jnp
aaa
xchg
cltd
cli
cmp
mov
rorb
out
xchg
push
lret
push
mov
or
mov
sub
aam
xchg
sub
jns
mov
mov
adc
mov
fidivs
or
repnz
lods
add
fdivrs
arpl
sbb
test
call
push
mov
cmc
in
cld
fidivrl
lret
xchg
js
dec
outsl
es
or
xchg
jns
inc
aas
je
jecxz
out
in
in
stos
sti
loope
in
int
inc
in
push
inc
xchg
fcoms
xchg
cmp
clc
push
sbb
pop
jo
into
pusha
rol
pop
daa
lods
in
cltd
and
mov
movsb
dec
dec
bnd
loop
mov
and
jne
lret
mov
cld
es
imul
and
sbb
in
cmc
cmp
push
pop
negb
daa
sub
adc
in
cmc
lcall
lret
push
pop
mov
pop
pushf
inc
idivb
sbb
test
cmp
add
xchg
pushf
mov
bound
fstpl
inc
mov
je
movsb
ja
mov
sub
or
dec
fwait
xchg
stc
lock
test
pop
lcall
dec
mov
and
pop
xchg
mov
jae
outsb
cmp
insl
mov
stc
ds
scas
pop
mov
hlt
js
xor
sahf
jns
sahf
dec
xchg
push
ljmp
xor
jle
aam
leave
lahf
cld
in
fsubr
adc
lds
lock
jo
mov
pusha
jb
sbb
and
pop
popf
rcrl
or
std
test
inc
out
movsl
negb
or
addb
testb
notl
jae
mov
cs
leave
push
aaa
and
xor
xchg
xor
icebp
insb
mov
sub
lods
bound
in
hlt
cmp
test
mov
pop
xor
pop
xor
popf
aaa
leave
fisttpl
add
xor
aam
orl
cld
cmp
inc
dec
push
mov
push
int
in
outsl
sarb
push
arpl
shrl
mov
iret
pop
int
ret
inc
pushf
aaa
mov
jns
inc
mov
test
mov
adc
movsl
loopne
ljmp
loop
call
stc
push
stos
fdivs
pop
nop
sub
mov
and
ror
andb
jno
cltd
lcall
ljmp
mov
xlat
mov
icebp
movsb
daa
cmpsb
and
pop
xchg
xchg
addr16
in
push
dec
outsl
mov
or
dec
or
add
or
lods
scas
or
popa
bound
or
fists
mul
mov
mov
inc
out
cmpsb
mov
pusha
pop
mov
in
jmp
jecxz
jb
cmpsl
out
xorb
mov
shl
and
fnstsw
imul
cmp
sti
mov
ffree
xchg
mov
mov
mov
addr16
cmpsb
mov
adc
cmp
push
inc
js
mov
mov
js
and
imul
cmpsl
ret
dec
mov
jns
rcr
cmpl
jo
enter
pop
in
push
xchg
mov
pushf
sahf
push
xor
cs
mov
ss
pop
mov
arpl
xlat
ror
stos
jnp
jno
push
loop
clc
dec
mov
shlb
jl
dec
xchg
xor
fstl
jp
fstpl
test
test
or
movsb
fnsave
fisttps
stos
or
mov
push
frstor
mov
mov
neg
push
xchg
lcall
pop
mov
mov
sti
dec
push
in
mov
pminsw
es
mov
mov
adcl
popf
add
cld
cmp
cs
scas
xchg
push
jecxz
cmpsb
lods
shrb
mov
dec
fldl
sub
adc
orl
mov
inc
rcrl
nop
adc
dec
cmpsb
stos
push
inc
lahf
sbb
lock
sub
fs
dec
xchg
ret
or
lcall
outsl
xor
sub
mov
mov
cmp
sub
jmp
inc
repnz
inc
nop
fisttpl
adc
pop
testb
jno
std
or
jo
xchg
aam
inc
push
dec
pop
jge
sti
js
jmp
into
insb
add
add
dec
or
loope
add
jb
cmp
jne
pop
enter
and
pop
das
mov
mov
test
lods
xchg
xor
lock
rorb
testl
push
or
aas
dec
sti
test
mov
cmp
lret
cmp
rcll
aam
mov
int3
rcll
push
sub
sti
sbb
repz
cltd
sub
mov
jb
xchg
pop
inc
cwtl
negl
xchg
int3
jmp
jnp
or
pop
mov
sbb
inc
xchg
mov
xor
cmp
nop
jmp
out
ss
fadd
xchg
push
stos
in
std
cmp
pop
ret
push
hlt
mov
add
icebp
or
pop
lcall
loopne
mov
inc
pop
scas
adc
fucom
mov
or
mov
addr16
inc
xchg
xor
fsubl
xchg
lret
xchg
hlt
or
shl
jno
cli
loope
xorb
mov
mov
mov
stos
in
push
xlat
out
xchg
scas
or
push
and
add
shl
add
cs
mov
sbb
outsl
jb
sbb
adc
subb
cmpsl
xchg
movsb
mov
fmull
mov
cwtl
ja
inc
scas
xchg
addr16
adc
and
movsb
jecxz
mov
mov
shlb
ret
iret
mov
sbb
cs
lea
shlb
or
sbb
push
enter
sbb
adc
insl
pop
inc
cmpsl
sub
es
stc
test
arpl
or
in
fmuls
mov
pop
std
push
dec
jmp
loope
rorb
mov
stos
std
xorl
out
lret
adc
xor
jmp
testl
sti
jmp
nop
jecxz
mov
add
mov
aam
out
shrb
pop
pop
add
cmpsb
out
mov
inc
jb
dec
mov
cli
mov
imull
mov
sub
aad
out
mov
cwtl
pop
ffreep
lahf
movsb
lea
push
hlt
stos
mov
xchg
cltd
movl
dec
out
cmp
pop
adc
push
andb
push
lret
xor
inc
outsl
dec
hlt
pop
mov
push
pop
mov
dec
sub
add
negb
xchg
mov
cmp
cli
push
mov
xchg
test
push
mov
rdtsc
ja
add
movsb
fists
xor
lret
jle
daa
or
cltd
jecxz
mov
test
repz
leave
aaa
faddl
jne
sub
inc
xor
and
movsb
cmc
repnz
adc
mov
testl
loop
out
push
sub
sub
stc
xchg
stc
jns
aaa
sbb
fldenv
sbbl
fbld
jo
out
lret
pause
xor
shll
sub
adc
mov
fwait
mov
out
inc
lret
mov
ret
push
cmp
leave
xchg
dec
adc
out
in
jecxz
shll
mov
mov
cltd
int
jnp
jae
mov
es
mov
pop
mov
xor
loope
lret
stos
pop
scas
mov
test
test
jge
or
mov
loop
addl
xchg
movaps
pop
out
push
addr16
adc
cmpsb
sbb
sarl
xor
cmpsl
ret
stos
outsl
cltd
test
pop
insb
aam
enter
dec
mov
mov
mov
lock
push
sbb
pop
out
adc
cmc
mulb
mov
mov
sub
popa
in
xor
popa
cli
aas
fsubl
sti
scas
popa
cli
pop
test
in
add
out
es
jnp
mov
xchg
mov
setne
inc
add
je
incl
mov
ret
mov
out
das
xchg
filds
loopne
fcomps
aad
adc
mov
cmpsb
jno
xor
push
mov
mov
mov
inc
mov
jecxz
stc
cwtl
dec
scas
ret
jo
push
xor
cmc
mov
pop
mov
clc
addl
xchg
cltd
clc
pop
stos
xor
cmp
mov
sti
mov
pusha
mov
mov
into
dec
stc
pop
mov
mov
or
in
mov
mov
mov
aas
sbb
nopl
mov
mov
xchg
and
fbstp
int3
sbb
jb
pop
lea
aas
das
rclb
cmp
push
test
sub
nop
mov
hlt
les
loopne
pop
out
lock
lods
scas
dec
test
je
ja
bound
adcb
test
xorb
xorb
mov
jl
jp
rorb
leave
sub
daa
cltd
add
dec
data16
clc
in
adc
outsb
push
mov
repnz
cmpsb
jmp
loop
dec
lcall
test
jns
xor
xchg
mull
adc
lods
mov
out
iret
push
pop
and
cwtl
push
into
out
mov
mov
and
adc
xor
ds
popf
inc
sbb
and
lea
xor
sahf
or
shlb
movsl
mov
and
mov
jo
cwtl
inc
xchg
cmp
add
rcr
mov
mov
dec
adc
mov
mov
add
sbb
and
sbb
test
lret
std
inc
sub
cmp
xchg
mov
xchg
jmp
jge
and
ret
inc
arpl
add
lods
mov
pop
mov
scas
pop
je
jp
cmp
bound
scas
xor
push
mov
imulb
or
add
inc
icebp
dec
outsl
mov
sub
lods
mov
push
or
out
or
addr16
jo
sbb
or
negb
jb
out
int3
or
push
cmp
jle
movsl
js
mov
cli
test
imull
lret
lods
in
sub
mov
pop
lret
fst
stc
push
jbe
cmp
mov
adc
and
push
lcall
push
cmp
dec
push
fdivr
push
adc
movl
or
cmpsb
mov
mov
inc
out
or
aaa
repnz
aam
out
les
mov
lock
mov
out
pusha
mov
sub
sbb
xor
mov
and
and
sbb
repz
clc
xchg
adc
mov
pop
mov
mov
popf
cmp
idiv
arpl
insb
lods
aam
adc
in
mov
dec
mov
lcall
cmp
stos
stos
cmovne
ja
add
mov
stos
rcrb
inc
lods
mov
xlat
add
mov
dec
mov
sarl
pop
push
xlat
inc
ret
in
push
fisubrs
aaa
push
repz
stos
addr16
mov
xor
inc
fcmovbe
mov
push
lret
add
pop
imul
inc
xchg
orl
xchg
loopnew
jg
adc
cmp
jecxz
inc
scas
in
xchg
aam
push
rolb
pop
xchg
add
xor
shlb
aad
sub
push
out
bound
add
mov
xlat
nop
sahf
and
jg
xchg
mov
loope
inc
jmp
int
shlb
js
pop
dec
inc
sar
roll
or
divl
ret
rclb
cli
xor
mov
mov
sub
inc
xchg
push
sbb
movsb
inc
fs
fcomip
adc
xlat
add
or
pusha
roll
cmp
repz
sbb
cmc
daa
cmp
mov
cmpb
xchg
mov
lahf
test
jp
inc
mov
test
cmp
mov
lahf
xlat
enter
int
fsubl
add
push
enter
std
ja
inc
mov
mov
stos
andb
sbbl
or
fwait
test
out
imul
xor
stc
mov
mov
jecxz
ljmp
xchg
imul
jb
inc
xor
jg
addb
clc
in
add
mov
aad
xchg
cwtl
rorb
or
scas
and
sbb
negl
div
push
sbb
inc
xor
aad
adc
mov
ss
outsl
stc
push
push
stc
push
loope
mov
sub
sbb
pushf
cmp
pop
js
ret
pop
ja
ja
ret
jp
and
mov
jo
in
dec
out
push
push
test
pop
dec
sub
nop
xchg
fdivrl
pop
ds
das
jns
or
repz
inc
xor
scas
push
push
mov
sbb
sbb
mov
les
repnz
mov
test
and
mov
in
ret
not
and
xor
bound
hlt
mov
cmp
je
pop
and
pop
cmpl
mov
add
mov
mov
in
test
dec
outsl
jle
xlat
mov
rcrl
lcall
push
shrb
lods
jno
pop
leave
fidivrl
negb
adc
test
jbe
push
xor
push
js
mov
mov
lods
movsb
and
jle
dec
dec
test
jbe
hlt
int
mov
addr16
dec
sbb
push
xchg
aaa
cmp
mov
pop
mov
int
add
movsb
jno,pt
mov
push
fs
inc
hlt
fxch
push
and
outsl
cmc
es
push
dec
xchg
xchg
or
adc
repz
std
inc
mov
sti
adcb
repnz
cltd
cmpsl
fidivrs
xchg
and
pop
dec
inc
mov
sub
lret
mov
dec
insb
out
push
sbb
sub
aaa
mov
or
add
arpl
mov
in
and
cwtl
sub
dec
sbb
inc
inc
sub
testb
xchg
rcl
lahf
ds
xchg
jno
or
in
pushf
push
mov
pop
pusha
jae
pop
add
in
mov
into
std
jp
dec
sub
lret
aad
into
push
jge
jl
es
jb
pop
mov
lods
jge
mov
std
xchg
mov
leave
ds
mov
mov
jl
les
inc
js
pop
xchg
mov
jne
mov
xchg
addr16
adc
divb
idivl
push
jo
add
out
repnz
out
xor
cli
mov
pop
jo
scas
push
out
insl
leave
sub
rcrb
in
add
lcall
dec
repz
pop
and
in
in
add
cmp
pop
imul
popf
push
push
and
ds
pop
push
out
ja
mov
dec
xor
jmp
sub
outsl
stos
sbb
sti
inc
sub
mov
sbb
imul
std
pop
movsb
scas
push
lock
lret
mov
loopne
pop
ljmp
jmp
add
push
lahf
adc
mov
cmpsl
push
push
inc
lock
or
add
dec
dec
pop
lret
xchg
or
cmovs
jns
js
out
sub
sub
cmpsb
xchg
pop
jb
sahf
dec
daa
cmp
leave
mov
dec
notb
add
mov
push
jmp
push
jle
push
rorl
ljmp
dec
sbb
xor
jmp
cwtl
jl
mov
mov
pushf
mov
js
sub
fidivrs
ret
pop
fimull
idivb
mov
cld
xchg
jmp
or
dec
fwait
dec
roll
cli
add
sahf
and
xor
les
pop
sbb
imul
jnp
shr
cmpsl
incb
mov
push
stos
dec
in
jbe
int
pop
pop
sahf
scas
int3
in
xchg
loope
dec
xchg
mov
sub
pop
mov
push
adc
add
pop
cltd
add
push
sbb
cmp
xor
bound
les
shrl
loop
fmull
fcomi
out
cmp
or
cli
adc
cmpsl
mov
xchg
pop
cld
xor
stc
sti
shlb
clc
or
cmp
or
sub
jp
or
insl
add
movb
test
inc
jbe
sub
enter
jns
pushf
fidivs
ljmp
xchg
ss
loop
fs
in
push
out
jns
push
sbb
aas
bound
insb
inc
std
cmpsb
xor
imul
test
outsl
pop
cltd
testl
mov
std
daa
pop
and
or
mov
mov
je
subl
xor
insb
notb
mov
jle
daa
jecxz
xor
test
cmp
inc
mov
divl
in
repz
je
pop
test
cmc
addr16
aaa
jne
pop
outsl
jae
inc
dec
and
cltd
xor
out
outsl
sub
push
ljmp
mov
mov
fld
js
and
dec
pop
mov
cmp
cli
cmp
cmp
add
sub
add
jmp
mov
add
lret
sarb
mov
addb
push
jns
int3
sbb
mov
adc
xchg
xchg
adc
or
jmp
xor
sahf
mov
mov
imul
bound
mov
in
sub
cmp
push
cli
jns
jp
xchg
out
cwtl
popf
stc
mov
adc
icebp
cmpsl
lret
mov
stos
push
dec
fcmovu
mov
jge
test
sbbb
jbe
dec
jno
stos
popf
xchg
fildll
push
mov
add
jmp
arpl
pop
push
xor
lret
pusha
pop
dec
adcl
xchg
rcl
fists
shl
fiadds
xor
pop
into
or
sub
hlt
push
inc
sbb
ret
pop
jne
and
mov
jnp
lods
testl
and
int3
fwait
ret
aas
mov
sbb
mov
scas
mov
mov
out
adc
jno
imul
scas
leave
xchg
xlat
xchg
mov
bnd
insl
std
mov
push
xchg
cmp
addb
dec
out
pop
jmp
add
fstl
or
outsb
jge
fwait
add
inc
inc
es
jp
mov
cmpsl
fstpt
iret
aam
mov
outsb
out
lock
sub
mov
cmp
xchg
and
push
mov
sub
lock
ror
dec
mov
les
sub
inc
pushf
loop
cwtl
push
stos
sbb
mov
mov
aam
and
xor
daa
inc
shrl
inc
scas
lock
dec
dec
xor
cmp
idivb
mov
shlb
test
test
jp
loop
mov
ja
lcall
repz
xchg
lahf
cmp
rclb
cltd
push
ds
cwtl
sub
pop
dec
push
dec
mov
sub
shl
stos
mov
sub
mov
mov
push
xchg
bound
std
dec
out
leave
jne
test
aas
movsb
dec
mov
xor
and
into
jl
fistpl
scas
pop
and
push
shll
add
sub
mov
cmp
aam
mov
and
out
call
enter
sub
jne,pt
mov
testl
aas
roll
inc
xor
jg
lahf
fnstenv
mov
push
in
dec
inc
sbb
sbb
sar
add
scas
or
lds
pop
sbb
in
jle
cmp
lcall
loopne
cmpsl
push
shll
push
ss
or
jg
mov
aam
mov
sub
repz
add
mov
dec
stos
pop
sub
push
mov
add
and
enter
mov
jmp
bound
lcall
lahf
in
xchg
pusha
jb
std
mov
cmp
push
mov
jae
stos
lret
jae
hlt
and
sub
sbb
shrl
and
mov
cmp
mov
repz
rorl
inc
out
mov
test
pusha
sahf
mov
jns
add
mov
aam
pop
mov
jno
jle
mov
loope
out
lods
xor
sbb
sbb
inc
add
pop
cmpsb
ret
add
mov
clc
sub
addr16
out
mov
aad
pop
mov
fwait
mov
fisubs
pop
call
jb
mov
adc
loope
imul
sarl
out
xor
push
std
sbb
cld
das
shr
mul
repnz
loop
pusha
loope
cld
iret
cmp
push
pop
and
addr16
mov
inc
xchg
xchg
add
mov
movl
ret
int
mov
ficoml
mov
cmp
lret
inc
mov
pop
jmp
in
repz
cmp
dec
std
pop
mov
mov
jecxz
adc
sub
sbb
lahf
mov
outsb
pushf
lea
jl
nop
std
ret
test
stc
aas
hlt
test
pop
fndisi(8087
out
add
ja
mov
or
push
out
or
sti
push
movsb
mov
imul
repnz
and
daa
add
out
mov
popa
insl
adc
aas
mov
pop
dec
cs
pop
in
pop
das
stc
inc
and
icebp
xor
test
das
mov
fimuls
dec
xchg
in
cmpsb
repnz
fnstenv
repz
mov
push
jmp
push
add
cmpsl
int
dec
mov
movsb
add
add
pop
xchg
test
rorb
imul
mov
movsl
lods
adc
xchg
sar
je
shrb
push
inc
jmp
sbb
addl
loope
mov
or
push
jno
or
roll
js
jbe
cmp
stos
aam
sbb
cmp
loope
jae
mov
into
xor
mov
bound
fidivrs
mov
pop
fiadds
adc
fidivs
out
mov
stos
push
movsb
xor
pop
pop
mov
test
outsb
or
repz
jne
aad
shlb
sub
fldln2
out
adc
xor
mov
lods
fnstsw
std
sbb
loope
mov
mov
lock
jno
cmc
ja
adc
cmpsl
cmpsl
push
push
out
out
jp
mov
push
shl
imul
mov
pop
pop
add
std
mov
lahf
incb
xchg
insb
sbb
lcall
inc
or
mov
sbb
mov
jne
in
into
std
lock
mov
or
dec
and
das
dec
inc
and
lret
cli
jecxz
loop
xchg
pushf
or
outsl
cmp
icebp
imull
ja
xchg
adc
rcl
aam
sub
test
roll
and
ud0
and
inc
enter
clc
mov
jno
cmp
aaa
mov
xchg
xchg
cmpsl
jno
js
dec
mov
jp
inc
sbb
add
sub
loope
or
out
pop
mov
push
sub
xor
out
mov
popa
xchg
xor
and
or
popf
insl
gs
movsl
push
push
mov
lret
rcrl
mov
xchg
xchg
mov
mov
pop
hlt
fchs
imul
jo
jecxz
cmp
mov
out
stc
int3
inc
or
arpl
insl
jbe
hlt
adc
jecxz
aam
pop
jo
loop
fdivr
loopne
in
insl
sub
push
push
int
lahf
repz
mov
fistpl
nop
push
jge
repnz
fiadds
loope
les
mov
arpl
mov
mov
shrl
jecxz
fistps
ret
push
dec
loopne
sti
mov
loopne
dec
pop
mov
notb
sub
dec
aas
mov
dec
cmp
sbb
imul
in
fwait
shlb
push
pop
xchg
adc
push
cs
lahf
mov
push
mov
inc
daa
jg
jmp
or
mov
clc
xchg
ljmp
add
mov
adc
xchg
adc
lret
lods
rcl
fcmove
lret
inc
inc
out
xor
inc
jno
rcrl
cli
cmpb
call
sub
dec
jle
sub
scas
sti
js
mov
pop
pushf
nop
pop
jl
pusha
inc
add
or
jge
aad
mov
fucom
mov
cmp
in
push
dec
test
add
in
pop
push
xor
mov
pop
iret
dec
outsb
jle
push
mov
or
add
ljmp
sub
sarb
mov
pop
or
shlb
mov
mov
fisttps
loopne
mov
mov
andb
dec
mov
mov
push
addl
fsub
jb
adc
add
fisubrs
xor
and
push
icebp
dec
cli
mov
loope
add
sbb
jge
adc
and
in
mov
sti
mull
cmp
mov
dec
jmp
jle
cmp
mov
pop
test
mov
int
mov
das
mov
add
decb
adc
pop
and
mov
test
and
orb
daa
icebp
jge
mov
loopne
xchg
inc
dec
pop
pop
test
jecxz
aaa
stos
outsl
es
dec
repz
mov
clc
mov
cmp
fs
loope
cmp
in
fsubrp
xlat
add
scas
fildl
cltd
xorb
push
lahf
xchg
call
stos
lea
cld
adc
movsb
or
jecxz
add
mov
daa
cwtl
outsb
mov
lock
imul
shrl
jb
jb
ret
push
shll
jle
dec
addr16
cmp
out
and
lahf
test
stos
adc
stos
sub
and
arpl
xor
jp
cmp
movsb
inc
outsb
xor
in
pop
ljmp
mov
mov
sub
mov
mov
enter
jp
push
jbe
cmpsb
sbb
test
cmp
cwtl
imul
cmp
int3
xchg
pop
leave
inc
lds
stc
mov
out
sbb
xor
push
jns
fldenv
inc
or
or
imul
mov
insb
lods
mov
leave
mov
pop
xchg
dec
push
orb
sbb
jno
mov
push
xchg
xchg
mov
mov
in
aas
inc
daa
aad
push
subb
repz
xchg
out
xchg
mov
cmp
or
mov
jl
push
or
add
or
fwait
cmc
cmp
icebp
incb
loop
iret
cmp
mov
loop
xor
add
xadd
js
xor
cmp
roll
adc
pop
repz
adc
ficompl
jmp
jmp
pop
ljmp
mov
mov
cmp
arpl
aas
out
dec
into
int
stc
iret
cmp
loope
lock
movsb
cli
jae
mov
push
xchg
ja
orb
pop
fwait
lock
lcall
in
out
mov
push
stos
jp
sub
leave
stos
dec
and
xchg
cli
imul
decl
mov
ss
xchg
dec
xor
mov
mov
nop
inc
mov
or
js
arpl
or
insb
outsl
adc
mov
int
and
jge
and
dec
lret
aad
and
fdivrl
clc
out
inc
fdivp
lcall
xchg
cltd
scas
push
fucom
inc
inc
adc
push
xor
jnp
and
cltd
jo
mov
and
and
minps
lcall
iret
mov
in
inc
mov
in
aad
ss
pop
cltd
and
addb
jg
dec
mov
pop
pop
call
mov
add
les
xor
push
mov
push
test
cld
pop
sub
mov
xchg
mov
repz
jo
pop
insl
push
shll
mov
xchg
mov
std
out
add
xchg
sub
stos
dec
cmp
sub
fcomip
sbb
jl
mov
jg
or
push
xor
xor
repnz
xor
cs
push
and
das
inc
shlb
js
decb
movsb
add
pop
mov
movsl
inc
xchg
divl
mov
pop
test
mov
xchg
imul
aaa
test
xchg
push
lods
call
sbb
out
sub
loope
mov
push
lods
scas
into
push
push
dec
out
out
aaa
sahf
mov
rcr
ljmp
sarb
cmc
mov
ljmp
nop
sbb
jmp
mov
sbb
mov
mov
fistps
ror
or
je
roll
in
sbb
jg
mov
push
mov
adc
mov
rclb
leave
icebp
mov
or
add
aam
test
sub
mov
cmp
cmp
or
lods
fcom
ret
or
ds
mov
repz
leave
xor
cmpsl
gs
lret
xchg
cmp
dec
loope
fbld
lret
shr
repz
dec
sbbl
aad
mov
sbbl
in
mov
or
adc
fdivrl
xor
jbe
mov
cmpsl
mov
test
les
lods
in
lds
and
add
shll
sbb
lahf
jno
inc
fcoms
shrl
stos
shl
mov
daa
dec
sub
fildll
ja
gs
frstor
enter
rcll
cmp
lret
bound
xchg
lahf
mov
repnz
test
jl
xchg
mov
leave
aas
decb
push
test
cmpsl
repz
jg
in
arpl
cmp
xor
fisubl
or
leave
fisubs
xchg
cmp
pop
int3
cli
jmp
js
mov
xchg
and
dec
cmpsl
ds
ss
loopne
or
sub
pop
ds
mov
pop
inc
test
jbe
fldln2
mov
lods
and
add
lock
push
mov
ficompl
mov
add
jecxz
cmp
cmp
in
hlt
dec
xor
ds
and
sahf
jmp
repnz
sbb
fistl
xchg
mov
mov
and
xor
sub
push
mov
mov
out
lret
add
mov
mov
jle
fdiv
or
out
mov
jle
xchg
test
pusha
lcall
mov
inc
ret
or
or
pop
test
leave
mov
add
out
minps
test
mov
xchg
loopne
add
sub
lcall
mov
xchg
push
iret
leave
add
cltd
mov
mov
mov
fcomip
movaps
add
stc
push
push
ds
cmp
or
js
data16
js
add
mov
pop
das
bound
in
sub
mov
loope
aaa
add
aaa
addb
cmc
lcall
pop
adc
outsl
adc
in
sbb
and
inc
mov
ja
cmpl
sub
lea
pop
loopne
leave
in
add
push
rcl
mov
in
pop
mov
jae
adc
xchg
inc
jo
jnp
repz
das
jp
jle
roll
dec
mov
out
stos
xchg
cwtl
or
movsl
sub
add
shlb
fmul
bound
popa
js
jns
into
sahf
jl
mov
xchg
sti
cmpsb
lret
das
pop
dec
fnstsw
xchg
das
cli
lds
jns
icebp
dec
mov
xor
fs
cli
dec
mov
and
or
push
xor
pop
and
sub
test
xor
add
cmp
in
les
sbb
xchg
cmp
or
pop
icebp
push
push
sbb
add
mov
dec
sub
aaa
mov
or
in
pop
int
jno
icebp
mov
hlt
push
add
rorl
xchg
xlat
fwait
gs
out
nop
scas
xorb
mov
jns
push
popl
pop
mov
mov
cmp
ja
mov
mov
jmp
aam
adc
push
clc
rclb
pop
loopne
push
repnz
hlt
sbb
lock
pop
ljmp
mov
leave
push
and
sub
out
daa
and
call
mov
jge
add
icebp
mov
xchg
mov
dec
orb
pextrw
jg
xchg
sti
mov
les
push
push
jbe
jae
add
mov
or
aaa
push
fucomi
mov
pop
adc
cmp
fnstsw
stos
sbb
in
cmpsb
es
lods
or
call
mov
dec
lock
arpl
mov
lcall
out
cli
jbe
push
push
mov
mov
aam
mov
cmp
aam
ret
cmpsb
jl
std
cwtl
cmp
xchg
icebp
mov
and
push
jp
lock
pop
iret
add
adc
dec
or
movsl
push
ljmp
das
jnp
hlt
icebp
in
icebp
add
and
push
inc
jmp
mov
ljmp
adc
adc
push
pop
push
dec
sahf
sti
pushl
mov
jp
testb
outsl
cli
xor
mov
popf
aaa
lea
out
jmp
popf
stc
mov
cmp
xor
sti
stos
push
or
aaa
adc
loop
or
mov
sub
ret
lcall
and
mov
mov
jle
sti
aas
leave
mulb
mov
rclb
movsl
cltd
insl
and
sbb
out
adcl
jae
nop
xchg
mov
xor
imul
xchg
popa
movsl
rcrl
loope
cmpl
fs
push
mov
test
std
rol
ret
test
stos
xchg
mov
fwait
push
dec
xchg
ficomps
icebp
insb
mov
in
jle
rclb
cmpsb
out
arpl
push
inc
mov
adc
lret
push
std
add
pop
or
or
sub
outsl
cmc
popf
or
fs
sub
xor
rcrl
xchg
xchg
ljmp
and
or
and
outsb
orb
mov
out
and
dec
out
repz
mov
inc
gs
test
mov
fcmovnb
and
addr16
fdivp
cmp
mov
or
push
cmp
dec
adc
dec
xor
iret
xor
aaa
ss
subb
sub
hlt
mov
in
push
dec
add
jmp
movsb
xor
lods
sbb
int
popa
subb
sahf
adc
adcb
or
xchg
mov
dec
jne
sub
data16
mov
jge
mov
movsb
mov
call
movsb
pusha
inc
mov
xor
cmp
cmpsb
xchg
rcrb
mov
adc
data16
imul
cltd
jp
rolb
adc
push
sbb
pop
mov
or
add
dec
cmc
fsubrp
dec
mov
mov
push
loop
cmp
mov
cwtl
jge
sbb
or
jns
hlt
cli
in
and
or
jecxz
cmp
loop
and
or
clc
cmc
cltd
xor
loopne
mov
mov
mov
insl
out
mov
pop
fsubrp
or
shl
icebp
in
mov
mov
xor
ret
aad
pop
xchg
scas
ffree
xchg
aam
icebp
and
mov
mov
es
mov
inc
subb
cmpsb
push
js
and
ret
insb
loope
sbb
leave
loope
mov
sub
nop
stos
ret
ror
pop
push
movsb
ja
jns
sti
jmp
push
and
imul
xor
notl
pop
jne
das
cwtl
lret
pop
push
cmp
lahf
je
dec
add
fmulp
cwtl
jbe
and
jge
data16
lcall
inc
orb
inc
lahf
xchg
pusha
sub
mov
cmpsl
icebp
pop
xchg
jmp
nop
fildll
push
mov
inc
into
push
repz
jb
and
daa
enter
gs
dec
dec
and
mull
leave
lods
shl
out
aam
cmp
cmp
movsb
cwtl
aas
pop
in
lds
xchg
jbe
imull
jp
iret
nop
orb
cli
repz
xor
pusha
in
dec
and
daa
leave
das
jb
jbe
sahf
inc
icebp
mov
fsubrs
cmp
mov
mov
and
int3
leave
jb
push
xchg
outsb
xchg
shl
fistpll
clc
shll
lcall
fsubp
mov
fs
sbb
int
inc
test
add
add
jecxz
lds
imul
daa
jmp
aad
fsubl
js
scas
pop
pop
inc
movq
or
push
and
js
xchg
out
jecxz
arpl
or
daa
xchg
jbe
sub
add
mov
aaa
pop
pop
fwait
mov
out
xor
xchg
cmpl
js
iret
cli
xor
add
jmp
cmpsb
stos
int
cli
sub
les
adc
mov
xchg
jecxz
mov
dec
icebp
ja
xchg
push
cmp
leave
lods
add
jae
rol
inc
sbb
push
add
xor
add
mov
and
and
mov
jmp
shl
lock
dec
push
into
adc
lret
cmpsb
out
mov
jo
sbb
xchg
mov
test
xchg
inc
push
loope
pop
push
push
xchg
push
xchg
sub
pop
cmp
xor
aam
int
jp
pcmpeqb
je
andl
mov
rclb
clc
adc
xor
xchg
clc
lret
pop
push
in
test
clc
fdivl
inc
divb
repnz
ja
daa
and
pop
mov
nop
call
jo
insb
daa
shlb
xor
sti
adc
and
jg
pop
cmpb
incb
repz
mov
mov
mov
add
sarl
hlt
mov
mov
cs
icebp
sahf
les
insb
sub
repz
xchg
mov
xchg
shll
out
jae
call
sub
bound
call
push
js
mov
rcr
add
xchg
imul
mov
popa
xlat
aas
fnsave
or
popa
aad
mov
and
jb
mov
mov
mov
ret
repz
push
mov
xor
fidivrs
mov
jo
cmp
iret
aad
jmp
popa
and
inc
mov
rcrl
divl
or
mov
stos
popf
cli
clc
jp
sbb
mov
push
xor
shlb
in
lret
jecxz
jg
dec
mov
push
xchg
mov
ret
jge
repnz
cltd
stos
inc
out
aam
movsb
xor
sbb
popa
xor
rclb
sbb
lods
lcall
cld
test
orl
sbb
cld
jo
out
jb
leave
mov
adc
hlt
orl
cmp
pop
jecxz
pop
jecxz
icebp
out
sub
mov
stc
sbb
sahf
push
add
int
out
out
pop
add
xchg
ja
jmp
mov
rcll
push
mov
faddl
out
sub
int
ds
icebp
loope
push
fsubrs
jno
sti
jge
std
cld
iret
lock
dec
add
sub
pusha
test
jp
es
lock
arpl
adc
movsb
add
mov
out
fdivrs
sahf
sub
jae,pt
sti
jno
out
mov
xor
movl
shrl
push
sub
pop
inc
and
cmp
mov
pinsrw
aas
inc
aas
scas
sbb
call
loope
testb
shlb
xor
pop
add
loope
ret
addl
int3
popa
ss
out
out
add
pop
fldt
xchg
mov
or
fs
pop
stc
xor
dec
insl
cmpsl
dec
test
adcb
inc
pop
mov
adc
sbbb
sbb
or
push
fstpt
mov
fwait
push
loop
or
stos
ja
sub
mov
ficoml
mov
add
jecxz
mov
jmp
iret
stos
mov
out
cmovl
loopne
std
mov
mov
sub
je
into
xor
cmp
in
push
sub
mov
lahf
add
pop
insb
aam
pop
inc
sbb
pop
hlt
dec
loope
mov
add
les
aam
icebp
testb
fidivl
cmpb
jno
jg
data16
jecxz
jns
xchg
jbe
loop
notl
lock
cmp
and
fnstenv
out
mov
push
pop
stos
in
fidivl
hlt
lds
lret
push
outsl
lea
lock
int3
dec
xchg
dec
adcl
imul
mov
loop
cs
in
cs
sti
or
rcrb
lea
fbld
cmp
ret
cmp
xchg
mov
mov
aaa
test
or
into
and
jno
ret
arpl
push
shlb
mov
sub
inc
shr
inc
push
int3
test
mov
jne
push
jae
add
negl
and
mov
pop
xchg
pushf
or
jle
mov
jmp
xchg
fcoms
je
cmp
into
mov
mov
push
push
fsubr
outsl
fdivr
sbb
ljmp
adcb
inc
fmuls
outsb
fcmovbe
pop
fnsave
sti
add
pop
test
and
mov
sbb
test
popa
or
xchg
stos
hlt
negl
push
cwtl
repnz
inc
cld
shlb
out
inc
cmp
adc
cmp
leave
test
push
mov
or
jmp
scas
sti
out
ret
and
dec
adc
es
in
mov
cmc
add
cli
dec
inc
jne
fld
test
xchg
enter
icebp
test
mov
or
pop
mov
xchg
mov
outsl
add
sti
jno
in
mov
mov
cmp
or
xchg
push
mov
cmp
sbb
mov
or
subb
adc
call
in
rcll
cmpsl
add
popf
pusha
pop
mov
into
xchg
lock
jne
sub
cli
xor
xchg
rorl
mov
shl
ftst
jbe
xor
ret
fdiv
daa
mov
dec
mov
clc
ss
ret
add
out
inc
or
lods
inc
mov
aad
jge
rorl
pusha
loop
or
xchg
lret
push
in
daa
movsl
sub
push
sub
mov
cmp
mov
push
add
pop
mov
adc
mov
addb
shr
xchg
fistpl
sarb
repz
loop
xor
mov
adc
nop
test
xchg
xchg
and
xchg
loope
xchg
sbb
jmp
daa
jno
xchg
pop
xchg
scas
xlat
xlat
add
mov
out
daa
adc
stos
lret
jl
test
ret
push
cmp
pop
push
lods
xchg
adc
fwait
aaa
sbb
leave
inc
repnz
push
fs
js
dec
pop
lahf
sahf
ret
es
insl
fistl
mov
pop
cmp
ljmp
dec
mov
or
cwtl
or
negl
in
pop
jp
lret
inc
xchg
mov
rcrb
cmc
add
addb
iret
lcall
xchg
into
bnd
loope
std
decl
cmpsb
loopne
and
call
jg
test
ret
test
lock
jo
sti
jp
imul
test
xor
iret
sbb
and
rolb
ljmp
pop
addb
icebp
arpl
dec
mov
inc
cmpsl
cmp
adc
mov
js
cmp
cld
mov
or
lock
scas
mov
fnstenv
cmp
inc
xlat
jecxz
test
data16
xor
les
in
xchg
fistpll
test
mov
adc
mov
rcrb
inc
and
and
loopne
jp
inc
push
xchg
mov
sub
cwtl
add
mov
or
jmp
aaa
sub
and
mov
addr16
cli
mov
add
cmp
and
or
push
push
cmp
into
out
pop
push
add
cmp
fucomp
cld
cmp
movsl
dec
aad
push
es
icebp
adc
dec
cmp
mov
jnp
add
fs
sbb
lds
dec
jmp
fistps
rorb
pop
outsl
outsl
fstpl
aas
jl
cmp
cmpsb
mov
int
dec
jne
push
jl
jmp
stos
in
mov
fnstcw
push
shlb
jae
std
andl
dec
fcmovnbe
jns
out
xor
sbbl
fsubrs
mov
dec
xchg
stc
push
fpatan
leave
xor
push
cmp
xlat
stos
cli
mov
sti
inc
and
adc
mov
loopne
fwait
dec
out
jmp
sbb
adc
pop
mull
or
add
in
fistpll
loop
or
lret
add
dec
lahf
cli
ret
insl
rclb
mov
aaa
mov
push
cmp
test
jb
adc
push
out
imul
pop
sahf
insl
arpl
xor
adc
mov
cmp
repz
xor
fucomp
add
dec
sbb
and
ret
inc
andb
leave
mov
xchg
rorl
ss
push
sbb
dec
push
std
enter
and
xor
mov
mov
sahf
xchg
call
cmc
fldt
lret
sti
push
loop
mov
ret
out
jmp
movsl
add
ds
enter
or
aam
mov
or
push
xchg
fsts
idivb
jmp
sbb
inc
or
pop
sbb
jecxz
lahf
mov
fisttpl
adc
cltd
xorb
mov
inc
fnstcw
pop
rcrl
nop
mov
into
loopne
out
pusha
adcb
dec
leave
addr16
sbb
sbb
or
inc
or
add
int3
mov
jecxz
and
lods
mov
lahf
cmp
jle
bound
mov
enter
inc
enter
adc
inc
sbb
fbstp
call
add
or
inc
ret
repz
andps
cmp
cmovnp
mov
lret
xchg
xor
xor
jbe
ss
or
dec
dec
repnz
int
fdivrl
and
in
addl
xchg
or
jbe
not
inc
cmp
mov
and
dec
cmp
push
dec
add
int3
or
test
dec
stos
jecxz
and
inc
test
mov
mov
daa
icebp
arpl
dec
pop
stos
fidivrl
lods
jmp
push
loop
cmp
aam
or
insb
in
xchg
bound
sbb
stc
add
rcrl
jae
cmpsb
mov
ret
addl
out
imul
sbb
ficoms
mov
inc
jmp
out
add
out
jle
gs
in
jl
or
inc
mov
inc
pusha
mov
test
mov
jns
test
mov
sub
rclb
inc
xorb
sub
push
xchg
xor
pop
or
cmp
cmp
stc
cmpsb
push
mov
sub
ret
xchg
cli
orb
popa
or
mov
mov
or
in
test
add
xchg
inc
add
fcomps
imul
stos
mov
jp
and
cmp
scas
mov
sub
jge
xlat
jns
gs
mov
andl
imul
aas
cltd
test
pop
adc
call
sub
jbe
scas
mov
dec
mov
mov
add
cmp
jnp
sub
mov
out
push
jl
push
pusha
pop
scas
and
lods
push
mov
imul
mov
test
std
aas
lcall
mov
inc
subb
jmp
outsb
into
xchg
or
sbb
sti
pop
inc
frstpm(287
ss
pop
sub
push
inc
orb
mov
push
hlt
stos
inc
mov
popf
addl
loop
in
mov
aaa
and
pop
jp
leave
jle
imul
hlt
idiv
pop
inc
jno
rcll
push
mov
pop
mov
cmp
dec
faddp
add
xchg
out
pop
sbb
loope
mov
lods
and
shrl
mov
stc
inc
jno
sbb
imul
xchg
ljmp
nop
cwtl
bound
inc
pop
xchg
xchg
jecxz
push
dec
sbb
imulb
iret
sahf
fmuls
lcall
dec
loope
fst
cmp
stos
shlb
add
jns
repz
addr16
push
call
orb
mov
jae
sbbl
push
inc
cmp
sbbb
mov
and
push
jns
dec
adc
ret
ds
mov
push
rol
addr16
jb
inc
sbb
pop
in
mov
popa
pop
loope
jns
icebp
das
ss
sub
sub
dec
or
pop
repnz
jae
psadbw
lods
sbb
ja
mov
fisubrl
fildl
insb
jb
cwtl
jl
out
adc
outsb
idivb
iret
ret
andps
xor
pop
pusha
lock
or
jbe
xor
lret
sbb
scas
jae
insb
popa
imul
mov
loopne
mov
test
mov
outsl
mov
scas
cmp
pop
test
movsl
andl
not
adc
out
pop
repnz
dec
fisubrl
mov
pop
mov
iret
jo
iret
pop
xor
xchg
in
push
bound
adc
insb
mov
ja
mov
std
addr16
push
loope
sub
int
popa
cmp
mov
xchg
shl
out
xor
pushw
sub
and
stos
rep
mov
jb
divl
negl
xor
scas
or
js
jb
sub
andl
pop
cwtl
inc
insb
outsl
sbb
push
imul
xchg
dec
imul
cmpsl
rcrl
mov
rolb
add
ret
aaa
dec
lea
adc
sbb
shrb
filds
adc
xchg
sbb
bound
jo
cld
iret
add
xchg
push
mov
test
sti
mov
imul
rcll
sub
pop
ss
lods
pusha
mov
loop
or
sti
adc
shlb
lahf
mov
inc
ret
fistl
cmp
in
bound
daa
ljmp
push
cmpsl
shrb
adc
shl
out
inc
inc
xor
add
nop
addr16
mov
xchg
outsl
xchg
ret
adc
repz
xchg
jecxz
mov
shl
xchg
insl
or
mov
add
in
test
pop
fsub
jae
daa
in
shrl
or
inc
sub
dec
dec
ljmp
and
mov
pusha
repnz
fistpll
jae
inc
xchg
rorl
in
or
sub
sub
ficoml
jbe
js
std
push
jbe
movsb
andl
cmp
mov
std
add
mov
mov
rcrl
movsb
sub
iret
add
inc
mov
and
xor
sbb
rcrl
push
adc
sbb
sbb
add
push
lret
sti
mov
mov
es
or
into
popf
shl
sahf
js
pusha
cmp
pop
jae
push
aaa
aam
mov
outsb
xchg
cmpsl
xor
push
add
xor
ret
rorl
shll
dec
mov
jg
shrl
push
add
loope
push
pop
imul
adc
sbb
sbb
cmp
shll
dec
pop
mov
cmp
adc
xor
roll
jecxz
hlt
mov
repz
sub
insb
jb
fisttps
scas
and
mov
dec
cmove
jmp
pop
repnz
scas
inc
cmp
push
andb
or
fcomps
sbb
xchg
cmp
push
mov
and
or
xor
outsl
das
subb
stc
pop
movsb
aad
out
jg
mov
pop
pop
stc
test
jge
sub
pop
ror
iret
add
cmp
pop
sbb
aaa
and
pop
ja
das
in
ret
outsb
jae
popf
mov
dec
mov
pop
cltd
out
add
mov
hlt
aaa
fdivrs
fxch
popa
fnstcw
push
cmp
adc
insb
sbb
sbb
stc
and
cld
jge
stos
sub
in
jl
bound
mov
mov
ss
cmp
loopne
lret
icebp
ret
mov
and
in
cmp
lahf
iret
and
add
dec
imul
in
sub
aam
std
push
inc
pop
push
pop
push
adc
pop
mov
and
sbb
lock
sub
cs
cmp
inc
mov
mov
jmp
pop
loopne
lahf
xchg
push
inc
cmp
movsl
test
inc
dec
jmp
int
adc
aaa
or
or
shlb
xchg
fmulp
jo
mov
lds
fwait
jecxz
xor
fsub
xchg
movsb
je
insl
xor
shl
cli
idiv
mov
push
pop
or
loope
mov
lret
int
jl
pop
sub
cmp
mov
sub
iret
fxch
jne
inc
movsb
rolb
dec
jl
sar
clc
xchg
add
into
xor
dec
dec
mov
into
movl
xchg
push
shlb
cmp
add
ss
scas
rcll
fadds
pop
mov
rcl
mov
cmp
sub
dec
adc
jbe
aas
or
orl
cmpsb
xchg
jl
inc
mov
mov
jmp
add
dec
pop
addr16
loope
jp
mov
xchg
dec
jg
subb
mov
insl
ds
mov
inc
adc
sahf
mov
push
lahf
mov
repz
or
adc
out
push
stos
repz
stos
repz
mov
cmp
stc
mov
xlat
scas
cmpsl
dec
dec
pop
lret
dec
sahf
aam
cli
sub
pusha
lds
repz
sub
icebp
inc
xor
pushf
xchg
mov
xchg
rorb
pop
fisubs
pop
jbe,pn
xchg
in
pop
mov
inc
hlt
aaa
cmp
insb
icebp
lret
cmpsb
add
mov
adc
xchg
xchg
adc
xor
in
mov
mov
sbb
stc
push
jge
fdivrs
xchg
sar
js
in
arpl
xor
xchg
pop
stos
jmp
stc
nop
pushl
jp
sbb
jg
xor
das
shlb
xchg
push
xor
jmp
mov
fsubs
bound
rep
mov
cmp
subb
ret
fsubrs
test
jae
rorb
iret
jge
push
add
cmpsl
mov
adc
pop
sarb
fs
aas
int
loopne
sti
xchg
push
jno
add
mov
and
outsb
and
adc
fidivrs
pop
testb
cmpsb
mov
inc
jecxz
xor
mov
add
pop
loop
sub
push
push
pop
loope
push
daa
dec
hlt
pop
mov
mov
and
mov
jo
dec
push
jg
pop
inc
sbb
xchg
sub
fbstp
jmp
in
rcrl
jnp
add
rorb
sbb
popf
xchg
rclb
jbe
adc
cmp
mov
mov
insb
pop
and
call
mov
into
mov
mov
stos
leave
adc
cmc
pop
aam
jae
in
jmp
xchg
jb
stos
jns
out
scas
xchg
jae
jecxz
cmc
inc
pop
sbb
rcr
lret
sbbl
xchg
xchg
cmp
jbe
and
insl
in
std
xchg
mov
ss
jnp
les
imul
loope
sarb
push
arpl
push
rcll
mov
add
jno
push
daa
iret
out
rcrb
xchg
dec
shll
stos
lods
push
cmp
lret
xchg
mov
insb
out
stos
inc
dec
jns
js
sbb
push
cmp
aad
xlat
inc
sarb
inc
inc
xchg
push
push
lock
insb
fs
lods
mov
pop
dec
push
pop
sub
jl
push
lea
gs
xor
cmp
in
dec
lret
push
push
xchg
clc
jb
daa
inc
idiv
cld
xor
fwait
pusha
daa
jmp
mov
loope
inc
xor
aad
or
cltd
push
mov
add
stc
mov
sub
add
popa
sub
jne
pop
push
ret
rsqrtps
bound
stc
int
daa
fmulp
mov
inc
ret
loop
xlat
mov
mov
imul
ds
in
aaa
mov
jl
mov
shrd
shrl
or
cltd
cwtl
dec
idivb
xor
adc
lods
dec
dec
jle
dec
push
popf
inc
leave
cmp
das
push
sub
xor
lods
loop
jae
out
pop
mov
int3
mov
mov
je
loop
les
sahf
lock
shrl
shl
mov
mov
and
mov
push
mov
int3
cmc
sti
and
fwait
outsb
xchg
mov
outsb
add
push
out
subl
pop
xor
xchg
int
testb
ret
lcall
cmp
xchg
pop
and
push
test
jl
sub
je
cmpsb
lods
mov
repz
aas
div
inc
mov
jmp
imul
in
or
in
out
call
push
in
jge
dec
dec
and
xlat
lret
push
lret
mov
sub
addb
adc
push
push
and
mov
add
push
or
xor
xlat
in
sub
ss
add
sub
sbb
addr16
out
gs
pop
cltd
add
lret
jnp
jecxz
inc
loope
js
pop
mov
maskmovq
testl
mov
mov
aad
jg
fldt
xor
stc
mov
inc
or
dec
sbb
icebp
dec
insb
push
lds
sbb
or
into
mov
int3
xorl
imul
mov
adcb
add
iret
scas
loopne
sbb
aas
inc
add
fwait
xchg
and
popa
dec
scas
ja
push
decb
add
sub
shlb
xchg
jnp
cs
jnp
aas
push
cmp
sbb
nop/reserved
lcall
xchg
in
sti
pushf
pop
addb
mov
int
popa
mov
leave
stos
xchg
jle
vmovaps
sub
stos
xor
and
data16
cmp
mov
xchg
cmpb
clc
mov
dec
cmp
mov
loopne
pop
jg
add
into
lods
movsl
data16
mov
lock
outsb
dec
gs
repz
loope,pt
es
stos
xchg
mov
out
sar
scas
xlat
testl
push
shl
insl
mov
cmp
sbb
jnp
rcl
mov
loopne
sti
lods
xor
jge
mov
and
jl
pop
cmpsb
std
in
leave
xor
mov
jecxz
mov
xchg
add
add
pop
int
stos
sbb
and
xor
cli
in
dec
mov
xor
iret
pop
cmpsb
mov
cmp
repz
das
xor
jae
sub
stc
push
sti
sbb
and
push
shl
mov
dec
and
inc
push
rcrb
test
enter
bound
outsl
push
cmc
cli
in
loop
jle
sbb
ficoms
dec
shll
je
out
xbegin
xchg
pusha
pandn
iret
loop
dec
xor
push
xor
jp
in
icebp
out
xor
enter
imul
aad
test
jl
mov
out
xor
jmp
or
jbe
push
lods
pop
or
imul
je,pt
bound
cmpsl
mov
sub
pop
mov
mov
enter
inc
cltd
mov
pavgb
mov
repz
push
fidivrs
sub
sbb
out
shl
sub
jp
enter
js
in
shrl
mov
fcompl
mov
shrl
dec
cld
mov
and
jge
dec
not
cmp
fimull
push
jmp
or
push
je
lcall
xor
xchg
inc
jecxz
jmp
mov
roll
xor
or
push
sub
xlat
pop
or
bound
imul
jo
fisubrl
mov
ret
mov
int
ret
lahf
out
ja
fistl
or
int
dec
sub
cmp
inc
sub
inc
pop
enter
pusha
inc
pop
and
callw
push
psubsw
ds
fimull
pop
test
sub
popf
or
pop
cmpsb
clc
scas
mov
mov
mov
addr16
lahf
inc
xchg
xchg
push
adc
out
imul
xchg
int
and
xor
mov
outsb
dec
icebp
xchg
ret
sbb
pop
add
out
pusha
nop
scas
xchg
rcll
gs
pop
and
and
inc
jae
test
dec
xchg
es
mov
aas
cmp
sub
jno
dec
lahf
or
sub
jno
fcoml
mov
adc
sbb
int3
sbb
push
mov
fwait
notl
or
in
mov
push
dec
aam
lds
sub
push
scas
sub
xchg
fsubr
fidivrs
std
jnp
lret
jl
enter
fisttpl
stos
jle
scas
xchg
inc
flds
add
dec
sbbb
fidivrl
xor
scas
test
mov
or
out
jl
daa
filds
cld
or
xchg
aam
imul
nop
sbb
mov
arpl
sti
arpl
jle
cmp
xchg
or
dec
aas
and
fimull
pop
mov
xchg
mov
in
push
nop
in
mov
scas
mov
ficompl
adc
dec
mov
sbb
cmpb
bound
mov
inc
mov
subb
popa
popf
cmp
fidivl
fildll
int
iret
mov
sub
pusha
scas
in
fs
scas
adc
loope
mov
test
stc
sbb
out
xlat
call
xor
push
shlb
cmp
orl
pusha
inc
pop
dec
cmc
outsl
push
jge
dec
sahf
in
sbb
sbb
adc
mov
xlat
out
inc
mov
xor
and
xchg
lods
add
sbb
dec
adc
lods
push
sbb
add
out
pop
cmp
sub
test
dec
or
scas
iret
shll
in
dec
lret
pop
pusha
fisttpl
sbb
pop
sbb
pop
pop
xor
lret
mov
outsb
rcr
subb
into
mov
into
xorl
loop
xchg
xchg
inc
pop
in
out
jbe
push
mov
cmpsb
ds
jb
or
popa
jp
aam
pusha
clc
dec
and
adc
pop
je
cmp
jne
iret
addr16
stos
movsb
lods
xor
fistpll
popf
add
mov
loope
pushl
pop
lods
out
push
mov
mov
mov
and
xor
add
lret
ret
push
ja
push
adc
stos
dec
dec
sub
sub
adc
int
shrb
or
cld
mov
mov
xchg
movsb
xor
setp
lods
scas
out
mov
adc
leave
push
xchg
lods
stos
mov
cmpsb
cmc
cmp
bswap
mov
push
mov
pop
add
xchg
xchg
and
dec
pop
aaa
lret
inc
aad
jmp
and
lahf
test
jecxz
dec
nop
or
fwait
add
and
jns
scas
outsb
lcall
mov
mov
sbb
mov
pop
aaa
jmp
mov
xchg
lahf
pop
divl
sbb
lds
and
loopne
out
movl
test
or
adc
lahf
or
ljmp
add
and
bound
loopne
aaa
cltd
ljmp
lods
pop
and
fistpl
jno
jbe
ljmp
faddl
orb
jae
mov
jg
jmp
jecxz
mov
lret
pop
test
lret
addl
pop
dec
add
icebp
xchg
xor
cli
push
test
add
repz
inc
mov
clc
outsb
mov
outsl
clc
xlat
mov
subl
movntq
mov
jmp
sub
jl
pop
loop
outsl
xchg
jae
jo
jnp
lret
insl
clc
cmp
test
cmp
pop
movsl
xchg
push
sbb
lock
mov
jecxz
dec
add
stc
cmpsb
mov
xchg
pop
dec
mulb
or
movsb
jge
jp
aam
mov
scas
cmp
iret
push
pusha
xchg
mov
jbe
test
cmp
xchg
sbb
sub
xchg
daa
xor
dec
jns
out
sbb
pop
push
lret
jl
push
xchg
bound
ja
nop
mov
pop
mov
mov
pop
mov
cmpsb
pop
and
dec
jne
jp
jecxz
cs
xchg
dec
mov
stos
test
xor
lds
mov
and
fisttpll
jno
out
inc
sub
stc
fwait
dec
mov
mov
sahf
fsubl
jb
sub
stos
ret
popf
ffree
xchg
cld
dec
add
nop
aas
dec
decl
xchg
mov
ret
mov
std
dec
push
inc
xchg
xchg
push
pop
jnp
rcrb
sub
mov
pusha
ds
dec
push
fldt
sahf
ljmp
lea
fstps
pop
inc
dec
sahf
imul
mov
imul
push
xor
rcl
pop
sbb
push
mov
mov
dec
lcall
pusha
es
mov
fst
mov
out
cmpsb
ficomps
adc
lods
xlat
imul
ja
lods
in
push
mov
mov
or
daa
mov
add
xchg
mov
push
leave
mov
adc
jns
lahf
mov
leave
enter
bound
mov
jne
loop
sbb
cmc
add
repnz
mov
xlat
jns
movsb
cmp
adc
cmp
xchg
mov
cmpsb
stos
push
and
daa
decb
add
nop
aas
add
and
xchg
dec
cli
jg
out
movsb
mov
inc
sub
jae
xchg
sub
mov
in
cmp
jo
cmp
or
add
cmp
pop
xchg
repz
notb
dec
sbb
push
jnp
mov
ret
decl
mov
sub
xor
inc
mov
and
int3
mov
dec
std
in
insb
repnz
jp
fiaddl
lcall
mov
test
loopne
lea
pop
mov
mov
call
mov
xchg
jno
xlat
hlt
adc
jecxz
insl
mov
aad
into
mov
cmpsl
push
add
fmul
negb
dec
fwait
mov
sbb
scas
lret
sbb
mov
into
cltd
mov
adc
daa
add
out
xchg
pop
ret
jg,pn
mov
sub
push
inc
cmp
nop
xchg
pop
outsb
adc
xchg
mov
pop
ljmp
les
and
icebp
dec
or
cmp
pop
lds
int3
pop
test
cmp
mov
lds
syscall
cmp
imul
testb
inc
xchg
adc
push
jbe
mov
pop
orl
mov
das
int
scas
sbb
gs
jne
jbe
inc
iret
mov
shlb
pop
sub
add
xchg
inc
push
mov
fsts
mov
adc
aam
fucomp
mov
enter
push
leave
out
subb
testb
mov
cmpsl
jmp
jl
lahf
fmull
jecxz
int
pop
xchg
out
push
mov
xchg
cli
loop
outsb
addb
mov
stc
fdiv
xor
leave
mov
sti
push
mov
xorl
das
push
cmpsl
add
stos
lock
aaa
out
sub
fistpl
and
sub
jo
aaa
inc
dec
mov
fdivrs
in
aad
jae
es
sar
adc
cmpsb
jno
push
in
inc
and
popf
lcall
sub
push
hlt
scas
repz
add
mov
and
push
pop
pusha
jno
mov
lret
repz
push
clc
sbb
fdivrs
mov
push
jb
mov
enter
mov
lea
scas
fldenv
popl
sbb
jg
or
add
push
jo
push
stos
lcall
mov
ret
xor
pop
xor
xchg
inc
aaa
in
stos
cmp
cmp
into
fcomi
sub
or
mov
adc
pop
sbb
xlat
mov
std
mov
out
mov
les
push
dec
ss
movsl
jns
cwtl
or
daa
call
xor
nop
repz
icebp
push
out
cmp
jbe
pop
rclb
mov
inc
mov
inc
ret
stos
sbb
lcall
adc
sbb
test
push
addr16
mov
test
in
pop
pop
or
pop
xchg
ljmp
fnsave
cmc
shl
mov
push
sub
rcr
xchg
xchg
sub
lock
ja
jg
xchg
setae
adc
pop
leave
scas
shrb
or
jbe
inc
sub
fwait
cmp
pushf
inc
jge
mov
fucomp
fwait
mov
mov
add
insb
jge
movsb
sbb
enter
and
test
inc
das
cmp
stc
aas
sbbl
sbb
mov
stos
nop
mov
inc
les
jmp
cmp
lahf
dec
aas
imulb
test
mov
fistpl
mov
jo
xchg
mov
bound
and
rcr
fbstp
push
cmc
fwait
stos
ss
ss
sbb
jle
in
jae
cmp
test
dec
inc
adc
jb
test
add
mov
mov
leave
inc
cmp
negb
mov
je
adc
sbb
fidivrs
jns
out
cltd
stos
loopne
and
pop
ljmp
jmp
ret
mov
ss
mov
iret
pop
mov
iret
mov
push
or
fnsetpm(287
out
push
out
cmp
mov
mov
cmp
fwait
xchg
into
in
mov
add
out
icebp
jns
pusha
cs
sahf
mov
sbb
fs
icebp
jg
jecxz
or
push
or
xor
mov
cmp
push
sti
dec
xor
frstor
pop
mov
stos
bound
inc
lret
out
and
andl
pop
std
dec
aas
lcall
xchg
cmp
call
jmp
addb
dec
fisttps
add
test
aaa
or
jl
lahf
stos
sbb
pop
ret
xchg
imul
je
popf
test
pop
pop
or
iret
ret
popa
sahf
inc
pushf
and
hlt
push
inc
roll
mov
lock
cmp
mov
cwtl
or
push
mov
push
pop
or
leave
xor
jmp
or
scas
loope
adc
adc
pop
js
andb
aam
fsub
xchg
pop
testb
or
clc
test
jbe
xor
iret
dec
or
xor
mov
push
jo
lcall
xchg
insl
push
mov
movsb
push
popl
lods
mov
mov
repnz
mov
loopne
mov
mov
inc
dec
mov
jae
push
cmp
mov
cmp
into
mov
sub
mov
bnd
mov
push
in
xchg
lock
aas
rolb
and
clc
jg
mov
cmpsl
out
mov
jmp
pusha
push
fidivs
rcrl
das
add
iret
dec
mov
xor
test
fstpl
out
or
jbe
fcomps
test
int
popf
leave
mov
sub
test
mulb
stc
fimull
aas
fsts
test
mov
dec
cmpsb
jg
sbb
sahf
imul
jns,pn
hlt
insb
adc
jp
add
aam
enter
add
loope
push
lcall
adcl
shr
insb
sub
faddp
insb
mov
pop
aad
shr
and
fsubrs
cmovae
mov
mov
mov
mov
negb
xor
hlt
int
ljmp
lcall
push
push
pop
out
cmp
and
or
xchg
jg
stc
into
test
aaa
lcall
pusha
add
addl
popf
fldcw
sbb
loopne
xor
xor
xchg
push
xor
into
fcomi
add
adc
fcoml
adc
fldcw
dec
jae
dec
fdivrs
cld
pop
xorl
xchg
fucomp
lds
test
inc
push
arpl
arpl
in
pop
sti
js
pop
ret
cmpsb
out
andl
pusha
xor
daa
lret
add
xchg
push
lods
pop
subl
mov
mov
aam
cmovp
aaa
mov
add
mov
stos
je
inc
orl
outsl
pop
xor
jnp
mov
test
and
rcrl
cmp
xor
sub
sbb
je
cmp
mov
adc
lods
dec
jns
and
loope
push
call
clc
mov
je
sbbl
mov
ljmp
rclb
aam
mov
arpl
push
sub
pop
test
adc
adc
cmp
mov
and
cmp
jl
movlps
push
jbe
outsb
in
pop
inc
lret
mov
xchg
mov
repnz
scas
fimull
sub
scas
sahf
xor
jmp
lea
xchg
mov
mov
outsb
loope
or
xor
mov
xchg
pop
dec
jle
sti
jp
imul
cmp
out
add
inc
stos
mov
and
scas
mov
mov
jmp
mov
sarl
add
or
or
dec
subl
testl
std
xor
repz
jmp
mov
fildll
and
mov
ss
add
out
mov
mov
or
cmp
mov
sbb
pusha
scas
in
add
inc
xchg
push
jno
xchg
mov
cli
or
xor
popf
pop
or
int3
dec
lahf
int
orb
jl
jge
mov
test
loope
xor
mov
push
stos
iret
xchg
je
in
pop
xchg
sbb
lret
sar
std
test
push
das
loopne
js
xchg
les
xor
mov
lods
popf
mov
mov
and
mov
aam
test
mov
lret
adc
sti
fisttpl
test
mov
popa
mov
outsb
xchg
gs
jo
test
lock
repz
je
rorl
iret
pop
push
adc
mov
std
loopne
mov
jecxz
movsl
push
sbb
pop
adc
insl
xchg
add
in
xchg
in
dec
adc
icebp
and
sbbl
sub
jns
fisubrs
or
movsl
shrl
mov
xchg
xchg
cmp
xor
cld
aaa
nop
push
sbb
das
call
inc
lds
out
ret
or
adc
cmpsl
ljmp
push
xchg
add
push
rol
pop
and
imull
mov
ud0
lds
mov
inc
sbb
push
adc
dec
sbb
xor
iret
push
or
inc
jnp
test
imul
ret
xor
bound
rcll
je
mov
lret
hlt
adc
xchg
loop
xchg
jae
ret
xchg
stc
loope
popf
call
mov
out
sbb
shl
arpl
adc
cwtl
mov
adc
jbe
cmp
dec
adc
lods
fdivl
xor
mov
xchg
adc
mov
arpl
fs
imul
push
pop
repz
insb
mov
cli
out
int3
jp
dec
push
pop
int3
xor
adc
cmpsb
add
dec
out
bnd
jl
mov
aad
das
pop
sub
in
mov
sahf
imul
push
lods
xchg
sub
lcall
xchg
fsubs
mov
daa
pop
mov
cmpl
iret
dec
fsts
sbb
repnz
mov
push
cmp
enter
xor
or
bound
mulb
cmpsb
inc
jo
xchg
mov
pop
mov
cmpsb
cmp
sbb
out
popf
add
in
or
cmp
jo
aas
sub
inc
stos
mov
into
push
jecxz
dec
outsl
inc
jo
std
push
fadds
mov
pop
std
iret
mov
cmp
cmpsl
sbb
outsl
xchg
outsb
mov
sub
pop
stos
aas
popf
mov
mov
xor
js
out
pop
jle
nop
xor
les
push
addb
ljmp
mov
dec
nop
mov
mov
fs
cmp
popa
lea
fadds
push
cmp
sbb
arpl
loop
or
es
outsl
andl
lahf
clc
dec
cmp
xlat
cwtl
jno
data16
ret
and
in
xor
mov
jg
incl
mov
mov
cs
xorb
aam
shlb
jle
std
xor
popf
xor
sbb
in
cmp
ret
push
lret
push
cmp
mov
lret
adc
loop
les
mov
shr
pop
push
and
int3
xchg
repz
inc
inc
enter
gs
gs
or
es
jno
mov
fmuls
inc
orl
push
mov
into
or
out
fldcw
jl
rclb
icebp
xor
loope
addl
hlt
fnstsw
aas
pop
cmpsb
repnz
das
push
out
les
js
add
cmp
mov
push
push
fimull
pusha
jns
pop
mov
lea
int3
jmp
leave
xor
cmp
daa
aas
arpl
es
inc
xchg
mov
push
pop
rcl
mov
out
repz
xchg
fbstp
and
insb
fistpl
xchg
xchg
mov
jb
arpl
jb
mov
lds
rcl
clc
cs
leave
jmp
rclb
jl
and
sbb
sbb
jmp
fmulp
icebp
sahf
lret
fadds
cmp
mov
fwait
rcrb
jecxz
pop
dec
shlb
sub
xchg
cmc
stos
pop
add
movsl
push
movsb
add
sub
push
mov
cmc
and
fwait
push
pop
test
cmc
jecxz
mov
sub
outsb
shll
fsubs
mov
sub
cmp
dec
roll
xchg
std
xorl
popa
stos
add
fildll
mov
clc
jnp
or
cs
and
cld
fistpll
ret
pop
push
daa
popf
fldcw
mov
mov
loop
and
mov
cmp
sbb
or
mov
mov
test
jnp
ja
push
int3
cli
sub
aas
scas
lret
and
xchg
adc
jnp
or
mov
xchg
xor
bound
bound
push
into
jns
test
adc
outsl
inc
xchg
pop
loope
stos
xchg
xchg
inc
and
dec
cmp
adc
push
or
out
mov
mov
and
jns
dec
rolb
clc
or
cs
mov
test
ret
sbb
insb
pop
or
jmp
mov
mov
rcrb
jae
add
bndldx
scas
inc
fs
or
int3
sub
sub
cmp
mov
je
and
xor
mov
dec
cmp
adc
out
aad
jp
xchg
xchg
lods
int
out
div
pop
movl
popf
dec
sti
lret
or
lret
mov
das
cwtl
sti
mov
call
mov
cmpsl
jnp
or
dec
inc
lret
mov
mov
and
lds
jno
jne
loopne
stos
out
fwait
xchg
mov
js
mov
cmp
sbb
in
jp
inc
jle
jb
pop
lret
push
sbb
sahf
jl
mov
sbb
cmp
xlat
xchg
test
xchg
jg
xchg
jnp
sub
xchg
add
aad
add
repnz
fwait
daa
mov
int
inc
mov
mov
pop
stos
push
leave
and
out
dec
mov
push
pop
cmp
insl
mov
icebp
clc
mov
testl
addr16
cs
cli
dec
fdivl
jnp
mov
cmpsb
xchg
push
or
mov
add
jl
jecxz
pop
jno
out
mov
adc
mov
test
push
in
insb
or
test
fs
fbld
testl
sbb
jle
pushf
test
cmovs
fdivrl
sub
pop
inc
cltd
lahf
testl
and
xchg
pop
lcall
sub
add
loopne
cmp
dec
bts
ret
fiaddl
or
sar
mov
das
mov
dec
pop
jg
jbe
xchg
jp
cli
sub
dec
loop
push
aad
push
jmp
mov
out
out
faddl
call
test
adc
and
nop
cltd
cmp
sub
add
call
fistpl
lret
into
popa
ljmp
pop
fcomps
aaa
dec
cwtl
push
daa
pushf
add
xor
and
movsl
inc
sub
adc
mov
inc
pop
je
stc
ror
and
fs
ret
aam
cmp
jnp
push
lret
push
fidivl
imul
cmpsb
inc
lret
mov
or
inc
cmc
int3
inc
stc
pop
or
movl
adc
or
jo
sarb
mov
fcoml
and
dec
lea
mov
push
cs
xchg
or
inc
cmp
xlat
push
lret
cwtl
test
clc
pop
rcrl
adc
aas
mov
in
sub
mov
or
aas
and
call
push
sub
daa
adc
das
repz
shl
mov
fs
and
jmp
cmpsl
dec
and
hlt
mov
movsl
pop
adcb
xchg
dec
js
xchg
or
bound
or
nopl
negl
jne
or
mov
cmc
icebp
xor
insb
stos
sti
fstps
movsl
es
lahf
cmp
pusha
cmp
andb
mov
sub
les
or
xchg
xchg
std
in
into
js
or
scas
rorb
mov
jg
lret
in
andb
mov
jnp
sub
pop
nop
xor
pusha
jg
in
pop
mov
lds
stc
dec
rol
push
and
or
mov
push
jmp
orl
outsb
jae
mov
sbb
jmp
ja
hlt
out
xor
lea
pop
hlt
pop
js
test
cmp
sarl
jno
cmp
adc
cli
push
dec
lea
xchg
push
or
add
setbe
in
fnstcw
sub
mov
push
mov
loop
xchg
dec
or
pusha
aam
pop
aam
call
in
fisttpl
jg
lret
cmp
rcl
pop
pcmpgtb
dec
cmc
inc
xchg
into
mov
orb
xchg
pop
sub
filds
or
dec
cmp
mov
stos
mov
dec
test
repnz
imul
dec
dec
ss
fwait
iret
ret
add
xor
jns
loop
lods
pusha
fldl
fwait
push
out
mov
pop
mov
or
xor
mov
sbbb
jns
xlat
lcall
jecxz
ds
aas
push
arpl
iret
dec
mov
xchg
cli
pop
scas
cmp
xchg
imul
fimuls
gs
mov
cmp
iret
call
shll
arpl
cmc
mov
cli
cwtl
idivl
ljmp
iret
and
scas
movsl
push
ljmp
fdivs
hlt
popa
out
aam
movsb
ret
jmp
or
jg
enter
sbb
data16
popf
popa
adc
std
testb
jbe
mov
in
and
testb
and
jp
pushf
ret
sub
lret
lcall
rorb
sub
cmp
push
adc
push
cltd
mov
mov
or
xor
xchg
xor
pop
fwait
mov
adc
push
popf
mov
cmp
push
scas
xor
cmp
pop
or
imul
cltd
fiadds
and
add
add
sbb
mov
add
mov
in
lock
bound
inc
dec
lahf
inc
adc
adc
add
incl
lahf
jmp
sbb
mov
repnz
nop
pop
imul
pop
push
imul
mov
or
mov
frstpm(287
scas
iret
popf
jmp
lret
mov
out
popf
jmp
adc
mov
pop
mov
adc
sbb
xchg
jecxz
mov
divl
pop
adc
sub
jge
in
mov
mov
mov
push
pop
cmp
push
push
aas
shl
aad
int
pop
mov
arpl
push
lret
dec
mov
iret
sub
mov
mov
adc
jle
xchg
jae
mov
icebp
push
mov
sbb
sbb
ss
je
fwait
cmp
outsl
mov
pop
arpl
add
cmpsb
aad
divl
mov
sbb
pop
lea
enter
lods
mov
out
jnp
rcr
test
fisttpl
jo
popf
sahf
jno
or
xchg
push
xlat
jl
shlb
or
cmpsb
cmp
ljmp
adc
dec
cmp
xchg
sarb
push
xchg
decl
sti
sti
mov
mov
ret
add
add
sarl
mov
sbb
push
movsl
inc
cltd
jge
test
push
shl
mov
cmp
daa
xchg
push
mov
inc
sub
cmc
mov
or
sub
mov
ljmp
mov
adc
enter
lds
imul
adc
sbb
mov
push
rcrb
sub
ja
add
sahf
xchg
cltd
sub
sarb
adc
or
inc
leavew
fimuls
cli
jle
popf
fbstp
cmpb
mov
movsl
adc
rol
mov
cmpsl
cmp
pusha
cli
je
jbe
pop
stos
ficompl
mov
out
in
inc
jbe
in
imul
dec
bound
into
mov
mov
leave
hlt
add
inc
xor
sub
rcrl
push
mov
xchg
xchg
xchg
cmp
jecxz
xchg
and
inc
fwait
and
movsb
movsl
iret
out
bound
jo
fcmovne
jns
mov
add
add
pop
out
fxch
mov
repz
outsb
sbb
add
dec
rorl
mov
mov
lock
xchg
sahf
mov
cwtl
xchg
out
dec
push
inc
dec
dec
or
or
movsl
loope
outsb
fisttpl
and
into
aad
aam
nop
dec
outsb
mov
lcall
cmp
xlat
cs
push
push
mov
xchg
popf
mov
stos
cmp
or
in
imul
leave
sub
push
in
aaa
decb
test
xor
adc
out
cmpsb
fsts
pop
leave
and
add
adc
mov
mov
das
decb
mov
les
es
xchg
and
ret
lea
cs
gs
jo
nop
xchg
inc
nop
dec
jmp
mov
mov
sub
cmpsb
mov
ds
jnp
cmp
subl
stc
iret
cli
push
cmpsl
cmp
mov
test
xchg
aaa
mov
subb
adc
hlt
fstpl
adc
jecxz
push
sbb
adc
xchg
jl
pusha
mov
mov
test
mov
inc
and
mov
hlt
pop
fdivrl
mov
and
scas
xor
in
xor
mov
or
gs
mov
xor
sbb
stc
mov
out
cmp
adc
cltd
push
movsb
cmc
add
mov
out
ljmp
sti
stos
cltd
push
adc
scas
push
mov
stc
outsl
movsb
pop
or
outsl
pop
arpl
mov
mov
push
andb
ret
dec
add
insb
test
out
xor
stc
cmp
aam
push
cmp
orl
jg
aas
add
jl
push
push
movsl
and
push
and
jl
push
mov
aad
xlat
dec
inc
xor
int
and
les
lcall
adc
rorb
leave
dec
push
mov
repz
outsl
push
je
icebp
cld
push
bound
ret
mov
enter
fimuls
mov
stos
push
lahf
jae
jle
pop
sbb
data16
jae,pt
push
push
rolb
adc
inc
jae
sbbl
mov
jle
push
lcall
faddl
xchg
lret
fldcw
les
loopne
pop
movl
sbb
mov
cltd
pop
sbb
cmpl
cmp
js
and
clc
adc
jbe
jecxz
cmpsl
ljmp
test
lret
bound
insl
repz
out
mov
add
in
ret
imull
push
pushf
xor
push
push
iret
xor
das
scas
mov
jmp
push
iret
xor
cli
jae
xor
xchg
mov
adc
mov
pop
xor
mov
mov
jb
sbb
add
dec
dec
add
dec
adc
or
pop
xor
add
sbb
in
adc
test
mov
insb
outsl
aad
jecxz
lods
sbb
inc
ds
jl
loope
ss
jmp
push
mov
and
jb
adc
xchg
cltd
push
mov
mov
jnp
mov
jns
repz
mov
imulb
sbb
mov
rorl
outsl
pop
js
add
xorl
roll
xor
mov
imul
test
aaa
sub
hlt
shll
hlt
add
push
adc
xchg
lcall
jle,pt
setbe
inc
lcall
stc
pop
cmp
xchg
sbb
or
and
xor
adc
mov
mov
dec
in
gs
arpl
jecxz
inc
mov
mov
outsb
xchg
push
bound
jno
fldt
cli
mov
fdiv
cld
mov
pushf
inc
loop
adc
xchg
or
push
out
fcmovnu
maskmovq
lret
incl
out
add
out
dec
mov
dec
sub
pop
ret
jmp
sti
lret
jns
xchg
pop
outsb
sbb
sahf
es
call
call
inc
pusha
lcall
push
cli
or
push
jge
std
cmp
imul
xor
add
in
aas
hlt
imull
and
pop
cld
mov
push
stc
cmp
jns
ja
data16
jl
aad
inc
cltd
stc
jp
xlat
lret
lret
pop
mov
mull
mov
mov
rcrb
test
daa
ret
push
pop
mov
shll
mov
out
xchg
decl
or
mov
mov
adc
cmp
cmp
add
orl
incb
add
lret
insb
les
shrl
jno
adc
ret
adc
pop
push
jmp
pop
int
daa
sahf
mov
hlt
insl
xchg
sub
mov
les
xchg
inc
clc
lods
adc
xchg
or
push
xchg
add
nop
mov
stos
ret
in
push
xchg
loope
outsl
loope
dec
testb
sar
dec
inc
cmpsb
dec
sub
addr16
sub
scas
mov
scas
lods
jb
fnsave
push
ljmp
ljmp
imul
or
movsb
and
rcl
pop
sub
lods
adc
loop
cltd
xor
aas
push
mov
mov
or
inc
xlat
xor
mov
das
cmp
add
cli
sbb
add
subl
lcall
push
cmp
add
clc
dec
fwait
jecxz
or
ljmp
div
jecxz
repz
aad
sub
inc
fbld
test
arpl
leave
jbe
add
mov
add
nop
xor
mov
inc
xchg
pop
movsb
pop
mov
push
insb
adc
adc
mov
cmpsb
inc
inc
lret
shll
lcall
arpl
dec
sbb
shl
mov
jnp
or
div
mov
mov
push
pop
iret
mov
sbb
mov
push
mov
xchg
pop
ss
into
ror
mov
cmc
rcrb
or
mov
mov
aam
pop
mov
in
pushl
out
enter
ds
mov
inc
mov
cmp
pop
inc
pop
fadds
subb
xor
add
cmp
nop
js
or
jp
loope
pusha
fmull
ja
mov
mov
out
add
inc
rorl
shrl
xchg
push
push
ret
mov
inc
add
hlt
dec
lock
fsubl
push
mov
out
dec
flds
pop
iret
repz
xor
cmp
sub
push
and
hlt
pop
xchg
mov
ds
and
push
cmpsb
test
mov
push
xchg
fsubs
xlat
sbb
fwait
outsl
out
std
nop
pop
cwtl
jae
lahf
push
ja
or
rorl
adc
or
int
and
push
pop
xor
mov
inc
jg
iret
int3
lcall
add
out
sahf
sti
movsl
sub
mov
sub
rol
mov
adc
cmp
loopne
mov
mov
addr16
sahf
test
cli
movsb
push
adc
loope
pop
mov
insl
add
add
flds
dec
stos
jne
pop
add
sub
push
arpl
out
sub
movsl
jae
dec
or
mov
lahf
adc
or
cwtl
sbb
movsl
xor
mov
inc
or
mov
cmp
sbb
loopne
xor
dec
xchg
stc
inc
pop
cmp
cmpsl
test
dec
jae
push
jno
loopne
fdivp
std
push
adc
hlt
not
or
rolb
or
and
push
fwait
mov
mov
sbb
jmp
lret
jmp
mov
jp
xor
roll
aam
fdivrs
adc
in
fadds
daa
mov
mov
jb
stos
jo
dec
or
xchg
cwtl
and
xchg
test
cmp
test
jno
xor
out
pminsw
cmp
sti
fbstp
div
nop
xchg
hlt
cli
loop
iret
mov
mul
out
leave
and
scas
cmp
lods
inc
mov
fildl
or
mov
mov
sub
inc
daa
ret
sbb
sbb
ret
pop
pop
aad
mov
jns
inc
sbb
sti
sbbb
data16
icebp
je
jg
cmp
push
mov
xchg
cs
jle
mov
jge
adc
dec
aam
dec
xlat
mov
pop
xor
jmp
cmpsl
mov
scas
cmpsl
repnz
jl
cmc
cmp
hlt
or
or
ret
scas
sbb
mov
mov
mov
call
scas
popa
ljmp
cmpsl
ret
mov
ljmp
stc
mov
rol
xchg
xchg
pop
mov
cld
lds
scas
mov
sub
fcomps
xor
sub
push
dec
outsb
inc
loopne
lret
sub
imul
add
hlt
hlt
jle
xchg
xchg
insb
inc
mov
xchg
sti
jae
pop
and
out
and
push
push
ret
xchg
xchg
sbb
cmp
stos
mov
pop
daa
push
jmp
test
push
xchg
jo
out
test
out
mov
in
jb
jnp
cmp
sub
in
das
popa
push
sahf
xchg
scas
adc
loop
and
pop
outsl
pop
fcoms
popf
int
inc
out
idivl
adc
and
rcl
ret
mov
push
shl
sub
jg
pop
add
dec
inc
imul
mov
push
sbb
ljmp
xchg
repnz
and
stos
mov
stos
and
cmp
inc
xchg
jb
jecxz
lock
popa
push
sti
nop
clc
sbb
push
dec
stos
scas
lahf
mov
imul
add
ror
cmpsb
fbld
out
rorl
or
shrb
and
mov
adc
dec
popa
ss
clc
jae
mov
mov
aam
daa
sbb
mov
cmc
xlat
das
stos
xchg
inc
jns
push
sti
in
lds
add
pop
jb
orl
aam
ret
sub
push
lock
jecxz
sti
mov
arpl
test
loop
sbb
outsl
repz
ror
dec
call
out
pushf
cwtl
movsb
add
test
dec
inc
into
sub
cltd
xor
xchg
jb
sbb
xor
xor
arpl
arpl
out
xor
stos
xor
lcall
xchg
cmp
push
mov
jp
pop
dec
addr16
inc
adc
or
or
repz
sahf
out
inc
aad
out
shll
mov
cli
iret
mov
sbb
inc
lea
sbb
sub
sub
test
into
and
xchg
sub
xor
sahf
cmp
add
dec
int3
dec
enter
xchg
out
pop
pop
mov
inc
lds
out
xchg
cmp
dec
cs
sub
mov
test
mov
in
add
mov
out
or
xorb
popa
rcll
and
jecxz
push
pop
cmpsb
xchg
jge
daa
out
mov
sub
sub
outsb
insl
or
shlb
aas
sbb
insb
incl
mov
sub
sub
xlat
clc
push
mov
xor
add
push
mov
imul
ljmp
adc
popf
push
jns
or
js
sbb
test
add
mov
jge
mov
xor
and
mov
jmp
push
pop
icebp
push
fcomp
in
call
fstp
cltd
jae
and
dec
cs
rolb
and
ror
in
test
dec
mov
imul
pop
orb
arpl
dec
call
mov
mov
dec
push
push
test
lock
xlat
adc
addb
cmpb
xchg
enter
mov
dec
mov
movsb
sub
aam
dec
fbld
jb
mov
dec
bound
out
imul
fldenv
imul
loop
enter
xchg
inc
lods
repz
std
hlt
push
jae
sarl
cltd
cmp
outsb
int3
fisubl
pop
imul
jb
arpl
loope
out
and
pusha
push
sarl
sbb
jge
jmp
pop
push
fiadds
mov
rcl
mov
ret
es
fistpl
lret
movsb
xchg
push
adc
adc
adc
jb
in
pusha
jp
jns
repz
decl
push
sarl
inc
sbb
scas
or
and
lea
dec
rcr
sub
test
pop
xlat
dec
mov
push
jae
xchg
mov
sub
out
pop
fldenv
jbe
xchg
mov
mov
jl
out
jo
cmpsb
into
pop
scas
loop
call
sub
in
idivb
lock
cmp
pop
int3
and
arpl
or
ds
ljmp
pop
pop
adc
sub
sub
imul
cmc
cmp
test
xchg
cs
hlt
andb
icebp
call
std
dec
cmp
inc
add
ret
pop
shrb
mov
mov
mov
xor
arpl
mov
dec
in
popa
add
mov
sub
cmp
insb
fstpt
ljmp
sub
mov
cmp
mov
fucom
mov
dec
jbe
into
cmp
xor
rol
inc
fistpl
xorb
or
loopne
mov
adc
adc
pop
subb
adc
out
sbb
jmp
mov
js
xor
add
add
div
nop
arpl
or
mov
test
pop
ret
movsl
and
je
ficoms
pusha
jle
jmp
loope
pop
pop
pop
sti
push
jecxz
or
es
pop
and
idivl
xor
loope
test
pop
mov
jbe
mov
jecxz
jmp
or
xchg
add
stc
xchg
popa
test
ret
push
or
and
mov
es
push
xchg
arpl
shll
lds
loopne
xchg
aaa
lock
fimull
lods
mov
pop
bound
dec
mov
xor
out
das
or
xor
mov
repz
pop
out
dec
xchg
cwtl
jo
sub
shl
imul
fistps
add
pop
movb
mov
sti
jbe
repz
je
stc
mov
inc
adc
cmp
hlt
xchg
sbb
imul
dec
pop
dec
pop
xor
ljmp
inc
test
cmp
mov
dec
push
jl
push
mov
outsl
insb
fildll
cmp
mov
or
test
cwtl
add
rorb
add
cmpsb
sbb
jle
sbb
xor
rclb
ret
pop
test
mov
mov
xchg
loope
or
adc
cmpsb
daa
les
sub
ss
cmp
mov
adc
mov
mov
mov
sbbb
mov
imul
mov
mov
jnp
cltd
mov
or
std
push
inc
mov
or
or
push
push
mov
and
push
dec
into
lea
ret
loopne
xchg
mov
ret
outsb
mov
test
loope
or
stos
xorb
hlt
cmc
repz
notl
cwtl
loop
jp
rcll
jp
out
mov
imul
stc
lret
inc
mov
shrb
mov
cmpsb
lret
popa
out
mov
fnsave
jo
adc
rclb
out
sbb
mov
fstl
mov
hlt
push
add
sub
or
inc
aad
sub
jae
fwait
ljmp
mov
pop
mov
adc
mov
clc
ret
out
cmp
mov
vpunpckhqdq
jge
mov
mov
lcall
rorl
pop
stos
xchg
or
cli
inc
xchg
jg
xchg
adc
rcl
mov
lock
and
into
mov
xchg
push
xor
jp
mov
xor
aad
in
pop
and
adc
inc
xorl
es
inc
leave
aas
ljmp
ja
mov
push
cmp
pop
mov
insl
adc
insb
mov
xor
ret
mov
andb
push
pop
jmp
pusha
out
int3
mov
xor
stc
cmpl
fs
mov
aam
add
push
cmp
mov
ffreep
lcall
std
movsl
test
js
jle
and
inc
iret
add
jo
or
sub
xchg
insl
hlt
lret
and
fcmovnu
cltd
fistl
or
pushf
mov
test
xchg
sub
pop
push
daa
movsl
stos
stc
or
jp
lock
add
repz
cmp
mov
xchg
inc
mov
xchg
call
add
ret
faddl
push
push
jg
lret
cltd
sbb
out
jge
cmc
push
pop
out
sub
lods
mov
test
lds
sbb
sti
cwtl
ret
or
cmpsb
mov
dec
fsts
pop
jg
inc
inc
test
mov
pusha
mov
shrl
jae
adc
inc
mov
mov
inc
aam
push
out
aaa
ja
cmp
jns
or
stos
in
xor
pop
ljmp
imull
sub
mov
dec
mov
mov
fwait
dec
aas
shl
mov
pushf
push
pop
and
iret
add
fcmovu
or
insb
or
mov
fdivrs
jecxz
sbb
jb
shlb
loopne
adc
cmp
mov
push
loop
movsb
push
xor
icebp
inc
fucomp
jmp
lret
add
lea
lods
daa
sub
daa
in
imul
imul
out
inc
push
fxch
sarb
xchg
test
mov
addr16
iret
les
aad
scas
ljmp
mov
mov
iret
or
xchg
xor
dec
sub
jecxz
stos
jns
andb
in
cld
mov
pop
in
mov
mov
xor
xor
clc
sub
mov
mov
lahf
bound
dec
cli
xchg
or
lea
pop
lahf
out
mov
pop
push
fucomp
or
jecxz
loopne
sub
pop
movsl
jae
dec
in
cltd
lock
not
sbb
test
add
fsubrs
xor
xchg
enter
stos
cmpsb
add
shll
out
cmp
mov
nop
daa
or
call
out
repnz
fmull
pop
xchg
add
jns
add
mov
add
and
or
sbb
mov
loope
and
xchg
mov
shr
and
xor
cld
push
fwait
cmc
sbb
add
pop
xor
imul
mov
adcb
out
mov
scas
addr16
cmp
aaa
pop
jmp
xor
test
inc
jns
jmp
adc
jle
jl
push
cltd
repnz
sbb
sbb
cmp
add
jbe
in
lds
mov
lret
xchg
aam
rolb
cld
sub
fisttps
repnz
shr
xchg
jno
ss
mov
adc
lret
push
cltd
popf
dec
cwtl
adc
ja
shrl
sub
jmp
inc
or
popa
fstl
movsl
mov
jmp
lret
pop
test
enter
clc
adc
lods
mov
mov
adc
shl
push
test
add
mov
cmpsb
inc
xchg
jmp
aaa
or
pop
lret
shlb
test
and
aas
movsb
ficoml
mov
xchg
inc
aam
dec
push
insb
dec
mov
ret
lahf
pop
test
dec
sbb
add
test
pop
lcall
clc
dec
mov
jge
es
movsl
push
push
fbstp
dec
push
cmc
xchg
stos
int3
daa
xchg
sub
jl
mov
dec
mov
outsb
sbb
les
rclb
jecxz
ficompl
mov
mov
int3
sbb
push
cltd
ret
jno
mov
or
repnz
xsave
mulb
ret
mov
mov
mov
xchg
pop
push
in
in
mov
sub
and
sub
dec
stc
or
or
push
jmp
mov
or
std
dec
jae
mov
mov
fwait
xchg
cli
iret
dec
stos
lahf
mov
dec
push
imul
sti
pop
mov
les
add
add
nop
sub
scas
pushl
cmc
rclb
sub
or
iret
test
popl
fcoms
outsl
js
nop
sub
push
outsb
insb
mov
ljmp
or
sbb
xchg
dec
mov
mov
mov
pop
ljmp
seto
mov
mov
fimull
aam
xlat
inc
int
mov
dec
stc
ret
cli
xchg
shll
mov
inc
fiaddl
push
mov
frstor
inc
out
mov
dec
and
test
add
jmp
enter
icebp
inc
jg
mov
pop
out
or
inc
sbb
pop
stos
xor
nop
adc
cs
mov
mov
cmp
pop
js
sub
bound
add
roll
cmp
xchg
movsb
pop
lock
scas
sub
or
shl
mov
notb
cld
inc
add
jl
adc
andb
xchg
push
out
xchg
pop
push
ljmp
pusha
mov
lret
outsl
lods
mov
sbb
mov
mov
insl
aam
cmp
or
mov
or
cs
out
or
je
in
es
inc
popf
cmp
and
dec
jmp
pop
mov
add
mov
shrb
pop
xchg
adc
sahf
popa
mov
aaa
loop
ja
sbbl
imul
xchg
mov
cmp
cltd
stos
jle
out
loop
mov
out
jl
les
sub
and
push
mov
cmpsl
inc
xor
push
popf
addr16
imul
shll
inc
repnz
sbb
hlt
push
mov
out
sub
aaa
in
daa
dec
out
lahf
mov
das
or
dec
jmp
add
ret
arpl
or
aaa
push
popa
or
xchg
mov
in
push
bound
or
xchg
add
or
clc
jns
out
lret
jo
mov
orl
in
popl
mov
push
shlb
sbb
or
fwait
mov
aaa
pop
js
imul
jno
push
in
dec
add
dec
jbe
in
cmp
loope
hlt
cmp
sub
pusha
lcall
push
mov
push
loopne
addr16
or
dec
cwtl
lock
xor
jg
cmp
cmp
mov
stc
push
rorb
jg
fiadds
xor
repz
mov
lcall
hlt
xchg
addb
sbb
out
jp
scas
pop
es
rcl
aas
xchg
jno
sahf
adc
lods
adc
nop
sub
ljmp
cmp
lret
jns
data16
push
divl
lcall
jecxz
mov
mov
imul
pop
iret
xchg
lret
ret
xchg
imul
lock
add
orb
push
xor
pop
mov
fisubl
out
fdivrl
lahf
std
bound
sti
fdivr
mov
and
iret
addr16
fldenv
cwtl
icebp
jl
push
arpl
test
in
sbb
insb
xor
xchg
mov
iret
lea
jmp
clc
xchg
xor
mov
sti
mov
dec
cwtl
sub
std
loop
bound
push
pop
xorl
repz
leave
cmc
push
mov
mov
sbb
daa
iret
inc
pop
adc
jmp
out
stos
sbb
arpl
es
or
xor
sub
loope
push
shll
sub
subl
or
cmpsb
rol
dec
out
inc
xor
jge
int
scas
insb
sub
test
popa
cwtl
ljmp
sbb
ja
and
std
mov
scas
fists
mov
cmp
nop
mov
ja
mov
arpl
ds
aad
rcr
ss
add
out
pop
lea
andb
add
mov
lea
and
xlat
xchg
movsl
mov
out
addb
push
lea
fwait
aam
addb
jbe
inc
out
jg
and
mov
repz
ficoms
or
xchg
scas
push
fcoms
out
mull
das
jl
jbe
das
sbb
shr
mov
add
cmc
add
clc
push
cmp
inc
xchg
imul
into
jmp
mov
std
ds
adc
mov
sahf
mov
cli
movsl
lock
dec
insb
loope
cmp
and
xlat
push
mov
pusha
mov
lcall
outsl
push
adc
push
lcall
outsl
cmpsl
lret
adc
fbstp
int
cmpsl
mov
xor
mov
cli
jp
stos
testb
fmul
cmp
lret
pop
or
jb
into
loope
cld
notl
rolb
out
cmpsl
inc
out
or
pop
jae
lret
lahf
mov
nop
leave
leave
sbb
ja
jbe
mov
lods
mov
shll
ret
int3
mov
jo
iret
lods
jp
pop
inc
sub
add
dec
daa
push
gs
xchg
ja
stos
insb
int
rcrl
mov
adc
out
call
pop
jbe
lea
push
xchg
xor
aas
aas
jl
stos
mov
add
inc
mov
icebp
loope
jp
insl
sub
mov
mov
xor
mov
add
or
lahf
pop
xor
loope
push
add
fiadds
add
out
hlt
add
adcl
or
jo
out
iret
aam
repz
je
cld
ret
jb
mov
int
pop
xchg
das
xchg
imul
sub
jg
aaa
jae
dec
sar
cmpsb
lods
divl
sbb
push
inc
or
mov
or
ss
inc
add
shll
pop
mov
xchg
sbb
mov
repz
das
sbb
inc
jo
lods
stos
add
pushf
mov
in
pusha
movsl
cmpsl
sti
xor
cld
les
or
daa
mov
dec
inc
lock
inc
push
dec
xor
ss
hlt
mov
or
cltd
sub
loopne
mov
hlt
xor
faddl
repz
clc
ret
cli
adc
cli
sbb
test
cmp
add
mov
gs
sbb
out
test
lcall
fs
mov
xorl
push
jecxz
fimull
xchg
cmc
inc
cltd
mov
jae
xor
or
arpl
insl
into
daa
mov
inc
mov
push
adc
stos
cmovs
pop
in
daa
je
mov
cmc
lock
int
mov
ficoms
sbb
xor
fisttpll
sub
test
nop
mov
mov
mov
fildll
jle
clc
xor
dec
cmp
dec
shl
mov
and
addb
mov
inc
xchg
pop
inc
mov
adc
out
test
add
aas
jmp
es
mov
mov
push
negl
cs
push
push
mov
stos
cmp
arpl
mov
xchg
divl
push
push
jmp
out
das
mov
adc
fadds
cmp
or
aaa
jo
shll
dec
scas
mov
xor
test
lret
ja
and
xchg
insb
xchg
fwait
ljmp
jnp
jno
dec
push
ss
jns
fcompl
in
add
aas
xchg
mov
add
addr16
cmpl
jns
push
in
js
push
data16
test
sub
push
or
inc
push
push
dec
dec
add
addr16
mov
mov
into
ljmp
sub
rcll
push
cwtl
mov
cs
fadd
mov
adc
sub
je
aaa
mov
or
add
mov
xchg
dec
sbb
and
out
pop
mov
ljmp
ret
sub
aas
arpl
bound
inc
sti
into
push
dec
out
inc
and
popa
out
fs
jp
adc
clc
dec
rclb
sti
xor
call
mov
je
loop
xor
stc
push
mov
or
nop
dec
mov
xor
enter
dec
inc
mov
in
adc
daa
push
roll
aad
fsub
mov
xchg
xor
sub
lock
xor
add
jo
out
stos
jle
bound
vshufps
add
mov
int
sub
fwait
decb
xchg
fnstsw
std
mov
sub
xacquire
inc
mov
push
imul
xor
xor
jp
mov
neg
mov
or
aaa
push
in
popa
sarl
push
sbb
cmp
jno
xor
inc
pusha
repnz
or
xchg
scas
mov
add
jnp
fistps
mov
fstp
leave
in
adc
sbb
sub
push
loopne
inc
scas
xchg
mov
enter
jmp
test
stos
lods
add
xchg
jae
mov
jns
mov
pop
mov
add
test
stos
cltd
scas
movsl
notb
add
cmp
rorl
js
mov
andb
cmp
mov
push
sub
mov
sarb
sub
push
in
imul
daa
dec
xchg
push
insl
and
inc
mov
or
inc
ret
inc
cmovle
add
in
leave
std
inc
into
mov
flds
les
mov
inc
xchg
cmpl
and
out
mov
push
aas
cmc
jmp
pop
scas
xchg
ficompl
and
or
sti
sub
outsb
pop
mov
or
inc
push
in
cwtl
sbbb
mov
xchg
cmc
movsl
cmp
and
dec
jge
lock
and
inc
ret
icebp
xchg
push
push
cmp
jno
test
in
jmp
fld
inc
mov
out
imul
cmpsb
jg
shl
adc
add
imul
and
ret
das
aad
xor
mov
sub
in
mov
xchg
rolb
hlt
mov
sub
adc
jae
xor
adc
shrb
dec
rep
mov
scas
fwait
test
sub
push
pop
xor
mov
lea
mov
ljmp
adcb
cmp
stc
scas
xchg
loop
hlt
or
loop
push
sti
xor
aaa
aas
xor
inc
add
inc
pop
clc
xor
in
gs
icebp
lea
jmp
jg
xor
xor
xor
fbstp
dec
jns
loopne
xchg
mov
and
pop
mov
pop
lods
repz
push
cltd
xchg
mov
inc
in
cwtl
bound
call
add
mov
jae
xchg
dec
jmp
mov
out
xchg
xchg
xchg
addb
or
push
popl
jp
push
clc
sahf
xor
mov
bound
lcall
xlat
mov
cmpb
adc
mov
jno
pop
popa
xchg
xor
dec
negb
enter
mov
dec
lahf
rcll
movsl
add
xchg
xchg
mov
outsl
mov
into
or
cmpsl
adc
lret
lea
shr
jb
imul
cltd
mov
cmp
into
adcl
ret
add
pop
sub
xor
jns
nop
jbe
mov
mov
adc
iret
xchg
push
mov
pushf
cmpb
jp
js
cld
inc
dec
pushw
outsl
sbb
cmp
jle
or
aas
dec
ficomps
cs
out
iret
mov
stc
jl
xchg
lret
pop
dec
repnz
scas
add
in
mov
std
es
xlat
fsubrs
inc
adc
cmpl
mov
sbb
xor
jmp
mov
loope
lods
out
shl
jnp
cmp
idivb
xor
divb
out
sub
gs
push
sub
or
filds
adc
das
jle
popa
clc
xchg
xchg
pop
inc
push
mov
add
icebp
mov
addr16
dec
jno
in
mov
push
test
and
cltd
popf
popa
jnp
idiv
clc
pusha
xor
push
jns
sbb
or
bound
iret
or
or
dec
or
xor
insb
push
pop
pop
xor
roll
loope
jno
mov
call
inc
inc
shr
xor
dec
cs
stc
xor
inc
scas
push
inc
call
test
fucomip
mov
loope
xchg
push
js
and
adc
mov
cmp
repz
mov
dec
ret
add
jne
dec
loope
insb
shll
xlat
or
sbb
jnp
movb
addb
and
mov
xor
jl
mov
xchg
gs
mov
fwait
mov
adc
lods
cmp
imul
dec
ret
cmp
push
orl
push
int3
out
test
xor
mov
jmp
in
push
mov
in
and
dec
loop
mov
or
xor
arpl
xchg
arpl
jecxz
mov
fstps
imul
xor
pusha
sub
fs
sub
shrb
xchg
add
neg
mov
repnz
shr
cmp
stc
lahf
clc
add
xor
and
sub
lds
clc
cwtl
mov
cmpl
jecxz
sbbl
in
cld
push
insl
test
jge
or
push
inc
adc
jecxz
iret
push
or
cmp
mov
fsts
pusha
mov
sbb
xchg
rorb
arpl
ret
shl
or
mov
adc
xchg
dec
mov
lcall
sbbb
das
scas
cmp
jb
pop
mov
mov
test
pop
lahf
sbb
stos
and
addr16
xor
pusha
int
mov
shrb
jmp
mov
sub
jg
sub
imul
xor
inc
lret
scas
cmp
jge
sbb
daa
sbb
fldl
sti
je
aam
bnd
std
sub
je
dec
inc
and
sbb
cmp
movsl
jns
mov
sbb
push
push
mov
pop
out
pop
incl
mov
int3
testb
repz
rcrb
into
mov
pop
ret
fists
stc
jns
dec
ret
jmp
dec
lret
cmp
clc
push
lock
popl
loop
jae
clc
popf
inc
lret
repz
stc
gs
out
sbb
jmpw
or
pusha
es
ljmp
jecxz
add
cmpl
jle
in
inc
mov
mov
jbe
mov
sbb
out
xchg
xchg
js
cmpsb
lods
mov
mov
loopne
or
testl
out
hlt
bound
sub
repz
mov
push
dec
mov
or
pop
inc
stc
mov
xor
and
negl
insb
cli
sahf
and
push
in
xor
mov
jl
imul
cmp
mov
js
stos
xchg
in
ss
push
sbb
xor
sti
cmpsb
insb
jns
jl
push
dec
inc
sub
lret
pop
enter
sub
xor
lahf
push
iret
xor
test
jae
mov
test
jns
loop
xor
mov
mov
dec
andb
mov
cs
mov
xchg
cld
loop
cmp
psrlw
mov
sbb
mov
movsl
jb
jnp
bound
jp
sbbl
add
je
andb
cmpsl
xor
aad
adc
add
jae
xor
mov
pusha
rcrl
repz
pushf
sbb
ret
cmp
push
add
imul
popa
out
stos
sub
mov
out
testl
adc
xchg
mov
fisttps
movsl
andl
fnstcw
ljmp
pop
sub
sbb
repz
pop
mov
pop
scas
adc
mov
aas
in
xchg
adc
mov
and
adc
out
fmull
sub
pop
mov
iret
jg
lds
or
test
sahf
or
lods
mov
jo
pop
jo
sub
lods
shl
adc
lahf
inc
lds
pxor
loop
and
repnz
orb
sbb
xor
je
mov
cmp
jbe
stos
or
jns
or
test
lock
push
jno
xor
cmp
adc
or
aas
mov
cmp
sti
pusha
mov
pop
lcall
and
jnp
loop
cmp
out
into
mov
sub
mov
insl
xor
pop
cmp
ret
or
int3
adc
cmpb
out
icebp
push
sarl
outsl
mull
outsl
mov
sti
mov
in
add
test
sti
hlt
or
jle
sub
out
adc
scas
jo
xchg
shlb
sahf
orl
cmpsb
mov
bound
stos
shlb
cmpsb
dec
cmp
inc
dec
pop
dec
add
stos
cmpsb
jno
fs
cmp
dec
xchg
ds
hlt
ja
xchg
pop
out
mov
adc
je
mov
push
xor
inc
leave
test
jg
aas
rclb
sbb
ja
sub
rcrb
sub
jle
adc
testl
into
aaa
mov
cmc
xchg
inc
or
xor
lds
shrb
ds
movl
insb
hlt
rclb
jne
flds
fldenv
jne
push
pushf
dec
repnz
xchg
int
mov
inc
mov
jl
loope
decl
out
or
pop
loope
out
mov
sti
iret
punpckhdq
call
cmpsl
aaa
leave
xor
rcl
lret
jge
dec
aam
loope
fwait
loope
ja
mov
les
add
sbb
cmp
dec
or
fidivrl
jno
jle
outsl
add
call
aad
xchg
jg
mov
pushf
xor
stos
mov
sub
cmpb
aaa
lcall
mov
sub
fisttpl
andb
add
js
shl
or
cmp
in
mov
cmp
pop
loope
call
lea
lea
push
mov
mov
sahf
add
cmp
lret
sti
filds
fisubrs
repz
or
cmp
mov
push
dec
jmp
int
call
bnd
mov
imul
push
mov
shll
pop
xchg
adc
jle,pt
sub
stc
or
test
push
fsubp
lods
mov
mov
jae
notb
std
mov
push
jmp
cwtl
add
xor
roll
divps
xchg
das
out
and
pop
repz
loopne
jmp
jecxz
pop
pop
test
mulb
test
sub
inc
lock
leave
sbb
idivl
ja
mov
outsb
xor
sbb
xchg
es
fsubs
pop
rorb
mov
mov
jne
xor
cmp
dec
js
adcb
inc
iret
loopne
sbb
dec
movsb
jl
cmc
xchg
imul
or
mov
cmp
into
loopne
cmp
xor
popa
movsb
add
pop
mov
and
pop
mov
cld
sub
jecxz
mov
repnz
mov
lods
cmp
jbe
jmp
pop
jp
mov
sbb
pop
jb
xor
add
jecxz
mov
push
andl
bound
mov
push
stos
push
cmp
mov
shr
push
jae
pop
sbb
xor
repnz
lods
stos
lahf
scas
xor
aad
cmp
mov
loop
scas
repz
pop
shll
fyl2x
ret
hlt
inc
push
mov
ds
pop
bound
and
ja
jbe
ret
mov
hlt
push
bswap
movl
dec
bound
mov
push
jno
test
jecxz
mov
jge
mov
adc
rcrl
ja
in
lahf
lods
push
lret
fucomip
inc
xchg
or
insl
rorl
lods
rolb
mov
fbld
in
adc
xchg
cmpsl
sbb
pop
mov
xchg
repnz
mov
cwtl
bound
jae
cmp
call
out
lcall
mov
rclb
out
movsl
in
push
sti
outsl
cltd
jo
stos
xchg
rcrl
mov
repz
repz
in
xchg
cmp
rcrl
pop
lcall
push
std
and
xchg
or
in
out
xchg
adc
insb
int3
aam
mov
stc
hlt
cmp
mov
cmp
shll
cs
push
rclb
outsb
mov
inc
xchg
addr16
loope
stc
adc
fnstenv
iret
mov
outsl
dec
mov
in
int
cld
pop
outsb
dec
jbe
cs
add
mov
sub
adc
dec
jnp
test
mov
fwait
test
mov
sub
test
sub
xor
inc
sbb
mov
add
push
rorl
loopne
pusha
lds
pushl
in
and
adc
mov
adc
cmp
sbb
nop
inc
int3
cs
cmp
in
lock
or
dec
mov
fdivs
pop
jns
fstpt
cmp
adc
sub
fstp
lret
sub
ja
xor
add
mov
sbb
js
xlat
ds
xchg
mov
faddl
push
xor
mov
andl
jmp
xchg
xchg
addr16
fdivl
and
jno
in
jp
cmp
test
loope
orb
or
inc
das
sbb
mov
mov
jns
incl
xchg
xor
jo
out
movsb
pop
scas
mov
xchg
pop
roll
sbb
mov
ljmp
add
lods
adc
test
mov
rolb
mov
test
or
out
jp
add
push
sti
sub
jecxz
lods
clc
mov
pusha
cmp
mov
outsb
push
es
and
std
mov
ror
jle
outsl
rorl
scas
pop
icebp
aaa
xchg
pop
mov
icebp
mov
jbe
or
cmp
out
cmp
push
es
mull
fcomps
cli
mov
insl
in
dec
rorb
sub
sbb
dec
outsb
fcomps
aaa
jg
lods
outsb
scas
xor
mov
fisubrl
push
movsl
repz
jnp
enter
ds
add
xor
xchg
jmp
xchg
cmp
out
hlt
mov
lahf
sbb
mov
inc
mov
out
dec
fs
imul
sub
fstpl
push
sbb
and
and
pop
lds
xor
repnz
shl
movb
enter
out
sbb
sahf
std
int3
sub
idivl
lret
loope
inc
iret
test
loopne
push
xchg
ss
imul
adc
mov
add
pop
cmpsb
test
mov
or
ljmp
or
mov
or
sub
mov
stos
in
push
icebp
repnz
dec
dec
std
inc
jnp
mov
arpl
push
arpl
xchg
push
xchg
out
lcall
xchg
push
pop
in
push
dec
pop
xchg
lahf
or
in
repz
lret
jne
jo
cmpsl
pslld
xchg
cmp
data16
and
jno
sub
sub
popa
aad
xchg
xchg
vunpckhpd
popf
stos
adc
jbe
add
cmp
fcoml
and
mov
fistps
aas
mov
divl
sbbb
pop
pop
sub
orb
cwtl
outsl
popa
xchg
jns
dec
push
or
add
jg
adc
jp
sub
jecxz
or
adc
mov
test
xchg
jmp
repz
inc
mov
aaa
push
xor
jmp
das
xor
pop
sub
jge
adcb
test
or
push
pop
rorb
push
or
dec
enter
cmpb
mov
int
pop
rol
xchg
jecxz
cld
xor
lea
push
xor
or
sub
pop
in
imul
adc
or
loopne
sbb
adc
xlat
push
cmpsl
and
lcall
mov
dec
and
mov
jo
jl
out
in
dec
fstps
shl
hlt
mov
daa
jns
aad
xchg
push
mov
dec
js
pop
lret
js
add
mov
mov
pop
pop
push
or
dec
cli
addr16
ret
andl
fdivrp
mov
ret
rep
xor
sub
xchg
add
pop
inc
fildl
jne
ret
mov
push
or
pop
and
sbb
push
call
inc
jle
and
push
addr16
pop
aad
mov
mov
mov
bound
dec
lock
test
fnstsw
mov
test
outsl
push
dec
in
jnp
mov
repz
xchg
cli
xor
movsl
mov
cld
pusha
pusha
cmpb
lds
in
xchg
mov
mov
fmuls
enter
enter
scas
and
in
pop
add
mov
mov
lea
push
mov
mov
outsl
lods
dec
lret
mov
bound
lret
mov
xor
sub
pop
jo
fsts
cmp
in
jp
dec
imul
cmp
push
fsubp
push
mov
add
fsubs
xlat
mov
jne
cmpsb
jle
adc
in
dec
push
popf
pushf
lods
ret
add
cmp
xchg
jl
mov
in
fdiv
inc
mov
mov
push
xchg
adc
mov
and
add
iret
xlat
sub
and
xchg
lds
repz
adc
mov
xor
insl
cmp
mov
popa
popf
mov
sub
aam
xchg
xor
jns
test
jp
xor
adc
push
lahf
cmpsl
inc
jp
lret
mov
xchg
cmpsb
sbb
xchg
and
incl
test
ret
pushf
sahf
je
test
sbb
shr
pusha
aas
push
sub
fistpl
xchg
mov
push
mov
mov
add
out
cmp
mov
or
out
ret
cwtl
sarb
push
sbb
sub
jnp
aas
pop
and
and
sbb
and
cmp
jg
pop
sub
scas
cmp
sub
pusha
sub
xchg
out
das
stos
cmp
or
or
clc
xchg
ret
or
add
shll
mov
push
mov
xor
xchg
sub
or
jge
shrb
cltd
ss
mov
sub
addr16
outsb
std
sub
shrb
and
sub
jecxz
test
stc
arpl
cmpsl
cwtl
out
repz
js
stos
addr16
mov
repz
xor
cmpsl
outsb
fisubrl
jl
push
ret
push
sahf
jp
push
jae
fistl
xchg
nop
and
test
inc
outsl
in
inc
fst
jecxz
sbb
add
call
inc
loopne
inc
or
sarl
or
cmp
sub
sub
jo
dec
pop
fwait
cmpsl
mov
imul
or
mov
xor
rcrl
sti
push
loopne
mov
or
in
arpl
and
sahf
dec
jmp
sub
jle
stc
icebp
pcmpeqd
test
push
add
imul
pusha
inc
and
push
or
xchg
jae
mov
pop
sahf
ret
push
mov
loop
into
push
cwtl
out
mov
lods
stc
lods
dec
sub
xor
add
fdivp
icebp
mov
sbb
cmp
addl
nop
xlat
repz
or
mov
mov
mov
mov
xlat
clc
mov
shr
and
pop
mov
xchg
insb
mov
adc
pop
outsb
add
mov
pop
sbb
xchg
cmp
scas
push
cmp
popa
outsl
divl
es
jb
popf
call
add
dec
xor
popa
aas
imul
jo
xchg
out
shlb
out
arpl
xchg
loope,pn
stos
jmp
in
repz
push
push
lret
outsb
enter
xor
cmpsb
xor
mov
aam
sbb
fildl
add
xchg
nop
outsl
cmpsb
mov
repnz
addr16
add
in
mov
imul
mov
dec
in
int3
inc
stos
lods
fwait
call
sub
fldt
jge
pop
and
test
mov
cli
fs
dec
addb
fadd
jmp
add
inc
push
or
cwtl
xchg
into
test
add
mov
aaa
lods
das
inc
inc
divl
hlt
mov
adc
imull
add
push
je
ljmp
and
into
movsl
es
mov
push
imul
std
jp
cmp
xor
xchg
xor
mov
orb
in
or
jp
and
test
pop
cmp
push
dec
ds
scas
ret
enter
std
sub
scas
fistps
jbe
fs
rclb
pop
test
iret
dec
into
and
sub
fwait
aas
jae
ret
xlat
out
out
in
mov
cld
push
es
mov
mov
bound
dec
ja
mov
add
sbb
mov
repnz
mov
pop
dec
loope
fs
bound
lret
cmp
aas
das
cmp
push
pop
jbe
mov
mov
push
add
ds
pop
sub
add
fists
aas
sub
and
lcall
xchg
mov
inc
mov
mov
pushl
jmp
jecxz
add
push
cmp
nop
movsb
imull
sub
das
xchg
mov
sbb
cmpsb
push
cmp
xchg
arpl
ss
add
fnsave
add
in
test
fbstp
mov
out
cs
add
aam
sbb
movsl
test
or
add
flds
lret
and
jb
mov
pop
dec
cmp
je
insl
xchg
fcmovb
imul
push
test
jb
pop
push
psrad
cmp
xor
sub
cmp
test
pop
sahf
sub
jno
test
pusha
and
mov
in
fisubs
loop
lods
or
lods
or
dec
imul
insl
xor
and
insb
mov
ret
xor
andb
or
pusha
jg
inc
add
pop
std
mov
sub
fldcw
bound
dec
int3
or
xlat
sub
nop
pop
pushf
jns
pop
aaa
adc
mov
sti
sub
popa
or
ficompl
cmpsl
adc
xchg
mov
daa
jo
xchg
mov
out
adc
and
mov
add
adc
adc
mov
inc
dec
lock
jl
jmp
test
mov
adc
adc
jne
fidivs
movsb
push
cli
aas
xchg
cmp
mov
push
push
push
scas
add
cmpxchg
xchg
cs
enter
fldenv
ret
push
ljmp
push
fs
out
ss
daa
xchg
mov
add
pushf
pushf
xchg
ffree
inc
lcall
leave
cltd
and
jae
out
cmp
cmp
mov
jmp
iret
scas
sub
mov
stos
sbb
adc
loop
mov
xchg
stos
push
mov
mov
inc
imul
pop
or
jae
cmp
test
leave
cmp
lods
sub
test
out
mov
in
cmp
mov
das
movb
sbb
add
sub
fxch
xor
jg
sbb
lahf
mov
fsubs
inc
ljmp
idiv
or
loop
jl
mov
dec
out
arpl
negb
mov
sub
jl
in
sbb
dec
adcw
std
sub
adc
mov
iret
sbb
cmpsb
xchg
int
fcmovbe
jnp
pop
and
pop
cs
int3
aas
mov
es
enter
out
mov
mov
test
ret
xchg
mov
ret
sub
into
shl
mov
xor
push
cmp
rcrb
mov
and
mov
sub
icebp
addl
xchg
inc
mov
out
cmp
adc
aas
xor
xchg
shll
push
andb
stos
sbb
dec
jle
insl
cli
arpl
out
xor
stos
pop
sbb
mov
scas
cmpsb
fidivrl
mov
lahf
movb
shlb
xor
xchg
jb
or
jno
orl
nop
xor
mov
jle
scas
clc
mov
fimuls
xor
orb
add
test
add
leave
int
adc
xchg
and
call
aaa
inc
ljmp
jbe
stc
mov
pop
cmp
dec
aam
iret
adc
push
cltd
test
push
iret
cltd
and
inc
sbb
sub
in
jns
rcpps
sbb
jecxz
xor
push
sbb
jmp
sub
xor
dec
std
jecxz
scas
dec
or
test
fnstsw
in
inc
cmpsl
jne
push
jge
adcl
push
ljmp
ficomps
stos
iret
sbbl
aam
xchg
gs
ja
adc
sub
xchg
xchg
xchg
mov
xchg
addl
sub
dec
push
loope
lods
mov
jo
mov
test
aam
test
mov
fcmovbe
lahf
mov
jp
cmp
sub
push
dec
or
rcr
cwtl
push
aaa
fs
enter
or
movsl
iret
decb
popl
repnz
pop
lock
rorb
dec
fidivrl
aaa
cmp
push
xchg
sbb
mov
pop
in
lock
sbb
shlb
lods
mov
nop
mov
scas
cli
imul
sbbb
lea
cmc
cld
sysret
push
int
cli
fsts
xchg
push
cmp
out
sarl
pop
mov
and
bound
xchg
cmpsl
ja
fistpll
push
lcall
jnp
dec
xchg
push
inc
icebp
out
pop
jge
sub
pop
sti
mov
test
or
adc
push
test
xchg
or
les
or
add
out
pop
cltd
cld
cmp
das
popf
pushf
outsb
cmp
adc
sub
loope
in
sbb
cmp
aaa
fbstp
rcl
cmp
js
pusha
xchg
sub
jno
loopne
cmp
lret
sarb
xor
mov
popf
jno
sbb
jbe
push
add
add
xchg
int
pop
xchg
outsl
fldt
xchg
out
arpl
adc
cmpsb
pusha
push
push
les
cli
or
dec
lea
daa
pop
push
xchg
cmp
jns
xchg
stos
out
and
lea
rorl
jmp
push
popa
sti
cmp
mov
orps
mov
int
pop
rcrl
cmp
jmp
mov
fisubrs
cmp
push
push
sub
lahf
inc
ss
mov
push
mov
pop
movsl
push
mov
jp
sti
lea
shr
xchg
push
out
imul
sub
fsub
add
push
sub
pop
push
sbb
pop
sahf
pop
hlt
sbb
pop
sub
cmp
push
mov
sub
push
jecxz
pop
mov
insl
in
mov
stc
jo
jmp
pushl
aaa
aad
outsb
mov
jne
scas
xor
sbb
or
jmp
fstpl
xchg
lea
and
sub
popa
bound
leave
cmp
repnz
div
push
mov
jo
movsl
nop
fists
aam
fisubs
lret
push
add
mov
dec
rcrb
outsb
xchg
pop
xlat
dec
cmp
mov
pusha
adc
fmuls
push
popa
mov
jmp
add
and
adc
add
push
and
inc
shr
mov
call
inc
jb
orb
mov
mov
aaa
add
rclb
pushf
mov
loope
icebp
sti
mov
mov
xchg
shr
xor
bound
test
adc
dec
sti
fisubs
movsb
sbb
cmc
add
pop
dec
adc
mov
mov
icebp
and
xchg
mov
dec
push
outsl
das
or
jp
and
push
add
das
push
shrb
mov
sub
loope
ss
jecxz
jne
popf
xlat
mov
testl
test
or
inc
scas
test
xchg
out
test
push
incb
shll
pop
jl
movsl
mov
push
out
int
movsb
into
cmpsb
mov
cld
leave
lods
jecxz
daa
pop
jno
or
jl
jmp
sbb
mov
fs
add
jecxz
and
mov
test
cmpsl
jl
es
call
jp
mov
adcb
cmp
xor
xor
mov
daa
xchg
in
cmp
jge
test
div
std
xchg
xor
push
sarb
shl
mov
mov
dec
gs
pop
outsl
sub
pop
jl
push
mov
xor
cmpsl
outsl
test
sbb
push
xchg
pusha
adc
sbb
and
int3
dec
xor
mov
test
mov
mov
sti
es
fcompl
fcmovbe
not
mov
js
jp
mov
cmp
test
jp
rcrl
jne
das
cmp
push
inc
loope
mov
sbbl
mov
xor
sub
pop
mov
stos
mov
push
out
fbstp
divb
in
adcb
shll
sub
xor
sbb
push
icebp
scas
cmp
push
dec
dec
cmp
popa
mov
adc
xchg
xor
sahf
xchg
cmc
cwtl
sbb
mov
orl
ja
ljmp
inc
mov
or
mov
orb
stc
sbb
mov
or
int
xchg
aas
fidivrl
cs
pop
stos
ret
sub
or
and
hlt
push
cld
imul
ja
lods
loope
clc
fldcw
outsl
les
call
mov
push
lods
rcll
mov
jmp
mov
ret
sub
cld
ret
lock
cmc
into
addr16
cmp
insb
or
loope
stos
mov
outsl
xchg
dec
push
mov
cli
loope
or
adc
push
sub
jne
push
iret
mov
inc
xchg
mov
jmp
test
shlb
testl
xchg
fisubrl
push
or
and
pop
lcall
add
sbb
test
aaa
add
rorb
aaa
lock
sub
or
cld
ja
push
pop
add
pop
aam
push
pop
dec
daa
dec
pop
mov
sub
lods
popf
nop
add
es
outsl
push
in
jb
jge
sub
std
out
mov
ss
int
outsb
xchg
cltd
mov
cld
scas
adc
push
mov
add
cs
mov
push
mov
mov
sti
adc
fiaddl
push
fldcw
jb
inc
xchg
add
mov
jnp
jl
and
pop
out
fldcw
jne
xor
sub
dec
orl
push
xchg
repnz
fdivrs
sub
sti
or
jns
int3
inc
icebp
jecxz
xchg
shll
inc
stc
adc
insl
sbb
mov
lods
mov
flds
leave
jno
insb
add
adc
mov
sbb
mov
mov
clc
addr16
daa
cmc
and
int3
dec
hlt
and
imul
daa
std
mov
or
dec
or
shlb
sub
xchg
test
fcoml
jns,pt
inc
xchg
mov
fbld
add
int3
cltd
pop
or
xlat
dec
xchg
mov
mov
mov
fnclex
lds
mov
mov
mov
cs
and
inc
inc
sti
xchg
push
cmpsl
xchg
mov
push
jnp
dec
jmp
jle
mul
sub
add
rcrb
push
xchg
imul
and
arpl
inc
pop
clc
test
scas
fistpll
and
andl
sbb
xor
test
stos
mov
adc
sub
mov
add
out
jmp
into
dec
clc
dec
dec
xor
repz
sbb
push
cmp
xchg
add
pop
popa
test
sub
loope
and
push
add
dec
fs
cli
inc
or
call
fsubrl
pop
int
adc
loop
rorl
nop
lret
xor
inc
push
pusha
shrb
test
iret
or
je
xor
push
lds
outsl
out
add
push
pop
mov
sub
sti
xor
add
xor
or
dec
or
pop
mov
cltd
test
adc
lods
push
pop
push
sbb
sub
pop
in
sub
cltd
sbb
fldenv
jns
pop
pusha
pop
fistps
sbb
cwtl
mov
lret
adc
je
rorl
mov
sub
jecxz
pop
loop
ret
mov
xchg
or
subb
popa
ret
add
shrl
adc
push
adc
xlat
mov
inc
aas
cmp
out
mov
or
sbb
stos
and
iret
jge
jecxz
sarb
mov
iret
pop
aam
rcrb
imul
push
adc
cwtl
movsl
gs
and
push
add
shrl
fwait
pop
sbb
mov
je
jecxz
xlat
es
add
test
lods
loop
dec
sti
lcall
cmc
xor
cwtl
pusha
fs
adc
ficomps
stc
sti
push
test
mov
and
lea
out
fstpt
in
mov
fists
loop
adc
lret
jmp
inc
mov
sub
shr
cli
mov
jns
push
and
lock
inc
or
mov
rcrl
inc
or
sbb
enter
cs
mov
fsubrl
mov
mov
loop
test
pop
movsb
ljmp
jae
fsubl
sarb
outsl
xlat
jmp
mov
movsb
pop
dec
test
push
fiaddl
fisubs
cmpsl
out
nop
mov
in
scas
xlat
ljmp
cmc
pop
dec
je
iret
test
pop
pusha
mov
movsl
dec
sbb
enter
inc
jle
xchg
fidivrl
fidivs
icebp
imul
mov
add
and
mov
popa
mov
or
mov
out
cltd
shlb
stos
pop
std
setns
xor
arpl
sahf
stc
jp
pop
adc
lods
mov
xchg
mov
nop
push
inc
loop
jmp
fmulp
aas
pop
xchg
push
sbb
push
cmp
mov
pop
sbb
cwtl
movsl
mov
jne
add
or
pop
xchg
mov
lock
fimull
mov
and
scas
xor
aad
sti
dec
ja
popa
fmuls
dec
jbe
jecxz
orl
jns
lds
and
out
repnz
jmp
adc
jb
popf
popf
aad
pop
nop
add
sbb
pop
pop
adc
adc
cmp
pop
add
mov
js
cli
and
punpckhwd
mov
xorb
push
js
adc
push
pusha
or
dec
push
das
out
fisubl
inc
cmc
jecxz
arpl
xor
push
lret
push
and
rolb
jo
cmpsb
adc
add
mul
mov
adc
mov
roll
lock
stc
movsb
add
lds
daa
xlat
es
stos
mov
out
daa
xlat
std
cmpsl
or
subb
sahf
enter
fucomi
ja
cmp
jmp
negb
rcll
in
ljmp
mov
and
lahf
sub
nop
dec
ljmp
push
bound
inc
mov
fcoms
cwtl
enter
xor
jmp
imul
mov
adc
adc
arpl
ljmp
lock
out
jecxz
out
fsub
cmp
xor
js
insb
je
icebp
pop
xchg
daa
arpl
jmp
repnz
pop
test
and
jecxz
mov
in
sahf
cmpb
push
imulb
int
test
jmp
in
xor
or
popa
sahf
fsubrp
sbb
mov
sbb
and
loope
push
pop
lret
cmp
pop
jbe
lret
scas
loop
jl
xchg
mov
movd
pushf
loope
cmpsb
std
insb
ja
jl
push
andl
pop
xor
jns
shll
ds
into
movsl
mov
addr16
out
jecxz
sub
adc
sub
fistpl
in
outsl
pop
movsb
adc
stc
nop
mov
xor
pop
divl
dec
mov
jecxz
push
pusha
sub
or
loopne
sub
mov
jle
aad
mov
stos
into
int3
sarl
cli
push
xchg
or
shlb
stos
in
filds
loope
aaa
mov
fdivrs
popa
push
sbb
sbb
inc
bound
outsb
les
iret
jle
push
rcll
xchg
pop
jnp
daa
rcrl
shl
inc
out
inc
xchg
ja
dec
out
xchg
pop
in
mov
mov
mov
xchg
cmpsl
es
ja
std
or
mov
cmp
lcall
jmp
add
add
push
jbe
popf
fstl
push
mov
pop
sbb
cmp
cmp
jecxz
mov
ds
pushf
sbb
dec
pop
lahf
jl
sbbl
add
jbe
xor
fstl
mov
pop
dec
push
fsub
enter
jnp,pn
push
pop
movb
jo
movsb
or
stos
cmp
cltd
test
fwait
and
cld
sbb
call
mov
pop
mov
data16
popa
or
xchg
and
test
ljmp
xor
push
cmp
xor
aad
xchg
cmp
push
push
testl
loope
sub
cwtl
inc
stos
adc
sub
xor
jge
mov
test
xor
mull
negb
div
rcrb
in
mov
mov
rcr
push
mov
iret
xchg
aam
adcl
stos
xchg
mov
cmp
mov
es
xor
mov
nop
test
inc
sti
hlt
out
call
je
pop
push
hlt
mov
hlt
sub
mov
inc
hlt
sarl
mov
testl
cwtl
scas
mov
and
ljmp
icebp
pop
mov
mov
dec
imul
jnp
or
shlb
or
sbb
sbbb
push
out
div
stos
cwtl
push
loopne
repz
ret
movsb
imul
ret
or
fiadds
cs
lods
mov
add
xorb
cmc
xchg
xchg
sti
ficoml
lret
outsl
les
add
mov
std
pop
scas
stos
stos
testl
sub
cmp
xor
xchg
jns
jae
ficompl
fwait
jnp,pn
into
lods
xchg
stos
pop
push
or
mov
sub
xlat
add
out
xor
fnstsw
ret
push
out
xchg
fildl
loop
mov
mov
dec
xchg
sti
cld
xchg
push
xor
fs
sbbb
roll
mov
int
jl
test
cmpl
cmpsl
dec
jg
shrb
push
xor
addb
xchg
xor
in
push
cli
adc
popf
lds
fwait
cmp
lock
mov
push
xor
dec
negl
out
repnz
loop
push
lds
test
mov
sbb
cmpsb
sbb
lods
jge
lret
xchg
mov
pop
data16
sarl
add
cmp
add
lods
mov
fisubs
subl
add
sbb
lods
pop
hlt
mul
sub
jmp
std
roll
mov
rorb
xchg
push
cli
xor
daa
sbb
repnz
mov
scas
repz
or
out
push
and
lock
and
inc
dec
in
mov
pop
aaa
pop
call
repz
xor
adc
and
outsb
daa
mov
xchg
frstor
je
and
lahf
mov
or
test
pop
out
dec
aad
pop
rclb
negl
xor
push
xlat
js
pop
push
addb
dec
out
jle
sbb
pusha
lret
pop
inc
idivl
sbbb
xchg
mov
cli
lcall
in
mov
lods
or
out
fs
repnz
mov
or
sarb
lcall
cmp
sub
data16
stos
mov
push
fisttpl
mov
jecxz
orl
cs
xchg
rcrl
xor
cmp
ret
lock
inc
inc
sub
xchg
in
dec
mov
and
icebp
mov
popf
loopne
data16
leave
hlt
bound
or
in
adc
add
repz
dec
outsb
cmovge
mov
sbbl
es
lock
repz
les
dec
cmp
add
fndisi(8087
xchg
pop
mov
jb
jle
scas
cmp
inc
test
dec
scas
call
adcb
call
in
in
mov
in
test
xchg
jmp
loopne
adc
pop
in
push
popf
jecxz
sub
dec
or
test
addl
sti
push
inc
jl
iret
dec
cmp
mov
lock
inc
mov
movsl
inc
mov
aam
mov
jne
add
and
cmc
push
mov
jp
insl
xchg
faddl
inc
sbbl
insb
add
jb
in
orl
mulb
call
adc
or
arpl
insl
xor
jmp
imulb
cmp
aas
mull
mov
test
sbb
gs
scas
pop
in
sub
int
and
icebp
lahf
sbb
test
int
and
and
mov
das
inc
jmp
xor
outsl
inc
aas
and
inc
jne
cmpsl
pop
imul
imulb
add
and
mov
repnz
push
leave
or
leave
fisttps
jns
xor
sbb
repz
sub
cmp
mov
push
pop
add
push
mov
stc
mov
push
mov
dec
loopne
xchg
ret
lods
pusha
cmp
mov
leave
out
and
mov
vpsubb
xchg
dec
inc
addr16
ja
rol
xor
jmp
ret
jmp
test
int
fcomps
rorl
into
scas
adc
mov
lods
or
ret
xor
in
jne
mov
rorb
inc
les
cmp
sub
mov
xchg
test
clc
dec
clc
push
mov
fstl
inc
adc
subb
push
fistpl
mov
mov
daa
dec
out
inc
fcoml
add
add
dec
outsl
fs
outsb
mov
push
mov
jnp
shlb
mov
sub
retw
mov
add
in
jns
test
mov
pop
push
and
mov
mov
lock
lods
mov
sbb
enter
cmp
mov
lret
out
sub
xchg
movsl
jecxz
and
outsb
fisubs
lods
pusha
mulb
jmp
cwtl
insl
add
dec
push
and
lret
jo
aad
cmp
test
add
jne
int
stos
xchg
test
test
pop
shrl
sbb
sbb
dec
fsubrp
pop
arpl
in
andb
inc
xlat
int
mov
inc
or
push
stc
fsubl
or
sub
xor
xchg
movsl
inc
sub
jmp
mov
dec
clc
inc
xor
xor
mov
push
adc
ret
sub
std
repz
repnz
pop
fwait
aaa
adc
xlat
push
push
push
or
pusha
push
enter
adc
stc
ret
repz
pop
xchg
add
pop
notb
cmpsb
add
hlt
cmp
loopne
sbb
cmp
pop
mov
jae
icebp
pop
scas
mov
dec
pop
test
outsb
or
sbbb
mov
jns
mov
sub
jmp
xor
ficoml
popf
enter
sbb
mov
or
in
data16
clc
cmc
pcmpeqd
mov
mov
stc
dec
aas
xchg
sbb
sbb
adcl
sub
roll
test
sbb
clc
test
inc
adc
jne
fdivrp
rorl
idiv
in
je
mov
out
pop
test
in
or
ror
or
add
push
mov
mov
xor
loopne
aaa
sub
xchg
sbb
push
xor
or
fcoml
pusha
sub
dec
das
test
popf
push
add
rcl
mov
mov
add
das
pop
sarl
stos
sbb
mov
sahf
cmc
lds
and
popf
cli
jae
outsb
ja
aaa
enter
sbb
dec
aam
jl
or
mov
sub
mov
sub
inc
jg
cmp
xor
rcr
lahf
xchg
imul
cmpsb
push
aaa
xchg
stos
jns
mov
push
gs
or
and
adc
push
or
xchg
sbbl
fwait
pop
iret
adc
fidivrl
cmpb
pusha
mov
bound
std
rolb
mov
fs
lret
cmp
mov
inc
xlat
dec
jnp
inc
mov
cwtl
outsl
xchg
sub
mov
outsl
dec
sub
imul
xchg
mov
lods
dec
arpl
out
faddl
and
xchg
inc
scas
mov
add
test
dec
fcmovne
shr
add
dec
ljmp
push
xor
dec
xchg
out
push
jle
lods
and
xchg
push
pop
iret
dec
jb
sbb
stos
je
repnz
and
es
xchg
fisubrs
mov
jae
cmpsb
data16
js
scas
popf
or
inc
das
lret
sahf
mov
lcall
pop
xor
sbb
mov
movsb
xchg
stos
cmp
mov
lret
mov
mov
lds
lahf
in
in
ljmp
xchg
lret
pop
xor
push
gs
and
aam
xor
ss
in
xchg
mov
stos
stos
out
xchg
mov
sbb
jl
aam
in
fwait
repz
cs
es
or
pop
mov
outsb
pop
dec
add
movsl
aad
xor
fcoml
arpl
test
sahf
or
mov
pop
cmp
mov
mov
push
into
pop
sbb
inc
mov
cmp
dec
sarb
jp
sti
pop
sahf
sub
movsl
adc
dec
add
cmpb
cmp
push
mov
cld
jl
mov
pop
pop
test
or
adc
push
push
jne
mov
cmpsl
cli
andl
push
ds
adc
stos
mov
and
sbb
fcoml
sub
inc
cmp
test
rol
mov
arpl
fsubl
xchg
jle
movsb
ror
std
cs
mov
xor
movsl
inc
in
inc
mov
or
movsl
scas
xlat
ja
out
bound
mov
dec
das
pop
sbb
lcall
in
push
mov
mov
ret
pop
xchg
xor
cmp
and
vmread
add
pop
data16
pop
std
daa
fdivrl
inc
or
out
pop
arpl
mov
xorb
lds
sub
mov
in
repnz
hlt
adc
add
xor
or
cmp
push
stos
int
lea
out
not
cmpsb
mov
daa
aas
jo
inc
loop
cmp
jmp
pop
mov
or
dec
repnz
xlat
mov
or
pop
add
mov
pop
into
xor
mov
aad
xor
sarb
aaa
inc
pop
mov
fsubl
sbb
into
iret
mov
cmp
xlat
xchg
push
sbb
sbb
push
push
push
push
and
lret
jnp
push
dec
and
xchg
adc
jl
sbb
jbe
loop
mov
mov
pop
push
rclb
sti
loopne
leave
dec
push
or
and
inc
inc
out
dec
xchg
or
and
sar
jmp
cmp
je
sbb
stc
push
negl
xchg
rcrl
dec
pop
insl
and
add
adc
dec
rcrb
adc
orb
in
dec
mov
pop
fbstp
mov
xor
mov
shr
mov
mov
repz
nop
je
mov
mov
fistl
cmp
jl
xor
cmp
dec
repz
rorb
in
fwait
hlt
add
jp
jle
repz
inc
push
aas
add
mov
clc
sbb
sbb
jp
jmp
mov
mov
mov
cwtl
shlb
mov
pop
jle
mov
dec
loopne
imul
sub
and
push
inc
arpl
jmp
mov
call
cmpsb
fistpl
push
pop
pop
clc
or
mov
jns
aas
cld
dec
loope
mov
push
loopne
in
aas
inc
or
add
mov
daa
int3
test
lret
loopne
sbb
call
repz
out
not
loopne
add
mov
loope
movsb
pop
test
mov
dec
shll
stc
dec
lahf
pop
push
mov
jg
repnz
psubsw
out
out
fwait
or
repz
mov
jae
or
cmpsl
xlat
add
fidivl
or
jl
mov
mov
pushf
xor
cld
je
xlat
xchg
dec
cli
sbbl
clc
aas
dec
aaa
mov
adc
pusha
push
push
inc
adc
pop
or
mov
xchg
jle
shrb
push
push
es
outsb
test
mov
jo
in
adc
adc
mov
pop
add
lods
mov
test
cmp
or
jbe
cwtl
mov
movsl
out
int3
cmp
push
cmpsb
adc
cmp
orb
mov
imul
xchg
sub
js
repz
dec
or
push
jg
mov
fs
push
stc
pop
dec
scas
sar
xor
inc
dec
dec
cmp
fistps
jo
and
cmc
add
stc
add
and
ljmp
mov
jbe
mov
xchg
xchg
cmp
fistpl
add
imul
sbb
sub
std
push
lea
inc
xchg
cmp
jmp
lds
popa
cld
xor
filds
inc
cmp
xor
sbb
pop
sub
mov
arpl
mov
mov
cmp
enter
cmp
sub
js
stos
sbb
and
sbb
mov
aad
fsubrp
icebp
hlt
mov
shll
xchg
cltd
jo
or
pop
testl
aaa
sbb
outsl
and
sub
mov
fmul
push
and
jg
mov
cmc
stos
jge
or
lods
push
push
enter
out
ljmp
cmc
and
mov
jecxz
cmp
shl
pop
mov
lahf
jl
cmpsb
test
insb
sbb
out
ret
cmpsl
dec
push
push
in
sub
jl
rol
mov
pop
outsb
test
push
jae
in
out
dec
leave
stc
rclb
add
jmp
in
adc
mov
ret
add
pop
jle
dec
pop
mov
in
cmpsl
xchg
outsb
pop
call
lret
xchg
mov
mov
std
outsl
fcmovbe
out
xchg
pop
cmp
mov
push
dec
test
daa
enter
into
cmpl
mov
repz
jg
push
cs
rcr
pop
mov
push
in
xorb
cwtl
mov
mov
loop
into
repnz
xor
sbb
int3
out
mov
sti
adc
pop
sti
push
lock
adc
shrb
xor
pushf
pushf
ret
xor
pop
adc
push
rcr
push
add
clc
xchg
pusha
sti
xchg
inc
xchg
pop
xor
aam
add
sub
jmp
ret
sbb
push
or
mov
mov
outsb
repz
mov
xlat
aas
mov
sete
stos
hlt
cwtl
adc
aaa
movsb
mov
xor
push
int
cmp
test
cmp
add
xchg
add
and
aad
xlat
add
adc
sub
and
cld
add
arpl
sub
iret
shlb
adc
sbb
mul
dec
repz
leave
dec
sbb
rol
aad
repnz
xchg
mov
test
shll
leave
repz
lods
fildl
sbb
push
xchg
enter
fwait
push
fldl2t
jge
cmp
outsb
mov
push
or
pop
enter
incl
sbb
dec
loop
adc
adc
loopne
cmpl
sub
int3
inc
and
mov
cltd
mov
push
shll
test
cmp
xchg
arpl
sbb
out
pop
push
sbb
mov
adc
pop
pop
jae
in
adc
jmp
jmp
sti
dec
sti
cmp
loopne
adc
mov
lahf
dec
out
sbb
cmp
lahf
leave
mov
dec
adc
mov
mov
stos
push
xchg
inc
xor
insb
sahf
mov
jl
fs
lahf
fisubl
sub
mov
mov
and
les
lds
xor
push
lret
subl
mov
push
idivb
out
adc
out
push
or
stos
or
iret
ljmp
scas
shr
add
mov
jle
sub
sub
das
cmp
outsb
cmp
lods
test
icebp
lock
ret
adc
call
outsb
dec
pop
lods
mov
xlat
fisttps
cmp
mov
cmp
imul
sub
mov
fcomps
push
fnstcw
cmc
aam
pop
push
mov
gs
and
pop
jo
pop
xor
jge
roll
adc
movd
cmp
sub
sbb
js
leave
jge
out
fsts
clc
cmp
pop
pushf
xchg
fs
lock
adc
fisubs
and
adcb
stos
popa
out
mov
adc
pop
xor
xchg
filds
test
mov
cmpsb
sbb
jmp
mov
stos
jo
dec
pop
lea
negl
sub
rorl
inc
aaa
xchg
or
and
es
push
pop
and
ds
fdivs
sbb
sbb
lds
push
pop
sbb
neg
test
or
and
push
sbb
fbstp
push
or
loopne
test
frstpm(287
jmp
loop
mov
jns
mov
or
mov
lret
movsl
jl
jno
int3
in
pop
mov
push
out
pop
sbb
ror
lcall
mov
cmpsb
dec
lods
clc
mov
mov
mov
test
lds
dec
xchg
add
lret
or
popa
stos
lock
mov
or
fildl
sub
aad
rorl
lcall
cmp
jbe
fldl
sub
ljmp
sbb
aas
mov
mov
stos
cmp
jae
pop
xchg
and
arpl
mov
filds
inc
repz
loop
lock
and
pop
test
cmpsb
les
ret
mov
xor
sub
adc
jecxz
push
or
lea
lret
leave
xchg
daa
stos
ja
push
stc
cmp
ja
mov
into
outsl
lahf
ret
or
pushf
xchg
and
dec
loop
jle
or
mov
mov
stos
dec
leave
mov
xchg
insl
xlat
sub
sub
cmc
fldt
cmpb
or
stos
sbb
js
repnz
ret
das
in
adc
mov
lods
cmp
pop
add
mov
jmp
pop
mov
jne
or
inc
push
mov
shrl
arpl
jmp
mov
aad
dec
mov
xchg
je
sub
sbb
roll
mov
and
jp
adcl
sub
xor
les
loope
fcoml
fdivp
or
mov
je
out
not
rcll
cmpsb
int
fbld
js
and
scas
call
add
and
mov
mov
jmp
dec
cli
shrb
mov
and
loop
jge
or
shll
or
jno
mov
psubw
mov
loop
loopne
push
push
js
adc
and
mov
inc
loopne
in
sub
push
jno
mov
jecxz
sub
insl
incl
addl
or
xor
gs
mov
mov
mov
fists
repnz
data16
insl
ret
pop
push
inc
or
cld
out
maskmovq
negl
and
mov
aad
ljmp
out
fldenv
xchg
adc
push
iret
push
loop
lcall
pop
sahf
sti
push
lock
push
lahf
inc
lret
mov
jecxz
cli
mov
mov
test
iret
fistpll
or
mov
xor
mov
mov
or
dec
shll
aam
ljmp
mov
jae
jg
fisubs
mov
add
sti
stos
fdiv
fisttps
sbb
xorb
xchg
arpl
test
pop
inc
mov
push
fisubrl
imull
out
fs
and
dec
rcrb
iret
les
hlt
addr16
imul
jp
iret
out
mov
test
lahf
mov
dec
and
adc
inc
xor
cwtl
int3
inc
fwait
sbb
int3
call
testl
mov
mov
mov
fsubs
repz
sub
enter
test
xchg
cmp
call
pop
stos
aaa
jp
cmc
enter
jns
mov
jecxz
imul
fnstenv
adc
push
xchg
aam
push
cmp
call
add
icebp
xchg
pop
dec
mov
aaa
cwtl
adc
mov
mov
sahf
dec
dec
stos
cld
jbe
cmp
cmpsb
sbb
mov
pop
cmpsl
mov
hlt
lret
scas
cwtl
xchg
out
jg
mov
movsl
xlat
cli
mov
fcomip
pusha
ret
hlt
xchg
test
into
ret
sub
and
ret
inc
loopne
stos
out
arpl
pusha
iret
andl
js
adc
fsubr
movsl
popa
neg
add
daa
outsb
or
push
lret
xchg
mov
adc
out
sbb
add
out
xchg
addr16
mov
jmp
test
mov
mov
pop
mov
je
nop
jno
mov
fnstenv
xlat
dec
lcall
mov
push
jecxz
mov
and
xor
or
scas
jne
jbe
subl
out
jo
mov
cmp
gs
les
lcall
ljmp
aas
mov
out
and
shrb
jnp
sub
mov
fucom
pop
icebp
rolb
xorb
das
mov
ret
xchg
les
test
add
xchg
movsl
xchg
mov
jne
xor
jmp
lcall
or
out
push
adc
repz
mov
lret
mov
cmpsl
xor
cmpsl
aas
in
mov
pop
loopne
mov
fimuls
mov
cld
or
dec
stc
shl
push
adc
out
mov
jmp
fwait
cwtl
int3
xchg
lcall
ror
dec
pop
or
and
sub
sbb
mov
into
loope
add
ret
leave
loop
icebp
mov
xchg
or
and
repz
mov
addr16
fucompp
xorb
fwait
and
mov
lods
dec
mov
ja
enter
lret
es
repz
add
test
jle
xchg
fdivrs
mov
sbb
stos
push
sub
mov
cmpsl
mov
inc
repnz
arpl
repnz
and
jae
cwtl
fsubrs
aam
mov
pop
lcall
ret
ja
mov
mov
out
pop
shr
xor
repz
push
xchg
xchg
clc
test
test
into
cmp
sbb
xor
inc
mov
lock
loopne
insb
or
mov
mov
insb
mov
or
or
push
cwtl
add
enter
mov
xchg
in
jb
sub
add
sbb
xchg
xchg
mov
sbb
and
lock
lds
sarb
lea
push
and
or
arpl
sbb
mov
outsb
mov
incb
and
arpl
movsb
mov
out
scas
mov
not
mov
test
stos
jecxz
das
hlt
lahf
pop
dec
int
mov
mov
fdivs
outsl
pushf
push
icebp
xor
xchg
push
test
movsl
subl
ds
dec
lods
dec
repz
mov
fistl
add
arpl
jecxz
aad
or
push
mov
xchg
push
and
ret
mov
mov
cbtw
loopne
and
xchg
mov
xchg
cmp
mov
xchg
test
outsb
mov
sbb
bound
out
addl
mov
movsb
in
sar
xchg
aas
or
inc
cmp
int3
out
mov
or
stos
outsl
sbb
lcall
lods
nopl
cmp
outsb
aam
addr16
clc
ret
and
shrl
inc
lods
addb
shrl
pop
test
xor
jne
fidivl
cltd
sbb
js
stos
jns
int
imul
mov
mov
dec
mov
dec
lea
cmpb
sbb
icebp
inc
das
pusha
rolb
mov
cli
scas
fwait
sbb
xchg
mov
and
ret
aam
push
sbb
mov
les
and
orl
out
cmpsl
cmp
rclb
add
xchg
ds
out
in
xor
xchg
into
cmp
int3
imul
outsb
mov
enter
jne
mov
pusha
jbe
sub
pop
mov
ja
imul
xchg
mov
push
outsl
out
in
loop
push
lock
push
push
cmp
push
mov
cwtl
xchg
dec
mov
mov
les
jbe
and
add
xor
mov
mov
cli
jmp
aad
addr16
dec
out
xchg
sub
test
xchg
cmc
add
dec
push
dec
testl
sti
ljmp
sub
dec
mov
enter
adc
sub
int
imulb
ret
icebp
loopne
fcomip
mov
fisubrs
repz
mov
test
notl
dec
mov
push
add
or
push
js
or
mov
mov
lcall
dec
testl
call
aam
stos
cmpsl
iret
aas
cwtl
or
or
dec
adcb
mov
and
push
enterw
sub
inc
rcrb
repz
xchg
lret
xchg
mov
adc
ficompl
ja
imul
cli
fs
jmp
lret
mov
mov
jno
jae
in
std
xchg
aad
dec
adc
lret
sub
out
cmp
imul
sub
pop
mov
xchg
mov
add
into
test
inc
insl
cmp
and
fsubrl
cwtl
fmuls
add
aas
pop
lods
xor
popa
pop
cmpsb
cltd
out
lock
sahf
add
test
mov
mov
mov
xor
or
xchg
mov
cmp
jnp
dec
mov
dec
push
outsb
cmp
insb
sbb
outsl
push
lea
pop
xchg
leave
rorb
fdivrp
popa
lods
push
dec
aad
int3
gs
in
dec
push
pop
lret
out
xchg
into
dec
xchg
sub
mov
das
movsl
sub
mov
sub
cmp
mov
mov
rclb
inc
mov
testb
scas
add
mov
insl
inc
ror
mov
call
push
fwait
mov
xor
jne
ljmp
cmp
xchg
shlb
or
aas
iret
loopne
and
sbb
sar
out
jne
push
aas
sti
repnz
in
shl
popa
cltd
test
and
gs
jne
push
sub
in
cmc
mov
out
pop
sub
jno
xor
out
xchg
push
fdivr
leave
stos
sti
outsl
rorl
out
inc
lcall
lcall
js
or
jl
mov
push
add
or
leave
loope
sti
rcl
pop
js
or
or
mov
mov
mov
and
enter
rolb
dec
add
mov
xchg
jecxz
cmc
aad
mov
xor
fnstcw
sub
cmpsb
cmp
rorl
inc
loope
adc
add
mov
lcall
dec
pop
cmp
xchg
xor
divl
mov
xor
nop
adc
jae
int3
std
not
loope
test
ljmp
out
mov
pusha
cltd
repnz
adc
xor
pop
mov
jg
adc
lcall
lods
xchg
jne
stc
lret
dec
outsb
bnd
pop
xchg
enter
mov
rorl
push
pop
sbb
push
in
or
icebp
or
sbb
movsl
or
mul
inc
xor
inc
shlb
push
adc
push
cli
mov
or
adc
jae
mov
shrl
arpl
add
bound
or
inc
leave
aaa
inc
mov
sbb
push
xchg
arpl
fildl
test
adc
cmp
dec
adc
das
add
adc
inc
es
jle
jb
scas
dec
jl
cmp
aam
dec
testb
test
push
in
jmp
mov
ror
cld
and
cmp
lret
pop
cmp
fadd
ret
jmp
mov
ja
xor
test
sub
scas
adc
hlt
mov
jp
xor
js
stos
lcall
dec
push
mov
mov
mov
cmpsl
cli
sub
sahf
mov
pop
xor
or
xor
jbe
xor
aaa
cmpl
movsb
or
xchg
xor
pop
fwait
mov
lret
mov
push
push
jne
sbb
stos
loop
stos
mov
decl
fistpll
inc
stos
adc
ds
aad
mov
jecxz
inc
inc
into
outsl
add
ficoml
stc
loop
scas
nop
mov
cmpsb
jmp
icebp
xchg
xlat
push
pop
mov
scas
pop
dec
and
dec
pop
outsb
cmp
or
call
lock
mov
adc
mov
or
shlb
adc
outsl
fimull
mov
decl
stc
add
into
test
ljmp
arpl
adc
ljmp
add
fisttpll
and
add
ljmp
fisttpl
cmp
pop
stos
or
mov
out
mov
sub
jl
and
push
lret
mov
pop
add
popf
or
dec
mov
insb
sub
iret
pusha
xor
xor
mov
movsl
and
iret
mov
std
xchg
mov
mov
mov
push
mov
lcall
mov
test
push
leave
mov
dec
mov
inc
xor
mov
and
cmp
lds
cmpsb
mov
add
push
out
aaa
imul
out
sub
inc
dec
mov
mov
xchg
lods
sub
into
fdivs
mov
sarb
sarl
popa
out
decb
inc
outsl
enter
or
imul
out
cmpsl
dec
cwtl
mov
ljmp
inc
sbb
push
mov
xchg
lcall
mov
sti
call
add
mov
mov
sub
xor
out
in
clc
daa
and
push
jb
jo
push
icebp
sbb
pop
jle
rcll
cmp
ds
outsb
add
js
stos
adc
dec
and
out
daa
cmc
jmp
jle
mov
scas
lret
es
sub
fucomip
mov
jmp
mov
pop
mov
ja
int
pop
jl
sub
xchg
xlat
mov
inc
repz
in
jl
mov
enter
nop
add
inc
or
call
dec
sub
push
mov
out
mov
xor
and
imul
addb
push
out
ret
dec
insl
neg
popa
mov
repz
shrb
mov
in
ljmp
push
movsl
movsl
into
ljmp
sub
pop
pop
clc
notl
jno
dec
sub
xor
cmpsl
mov
rcrb
xchg
dec
cmpsl
pop
or
mov
loope
fiaddl
pop
in
mov
add
je
repz
popf
dec
orl
fsubs
stc
cmpsb
ret
cld
mov
popl
pop
cmp
add
sbb
aas
or
in
adc
mov
aam
xchg
push
out
clc
mov
xor
dec
outsl
shll
fst
ljmp
mov
add
hlt
pop
stos
and
outsl
cmpsl
sub
dec
jae
repnz
mov
dec
xlat
ljmp
mov
or
jmp
sub
hlt
mov
imul
sub
sbb
fsubrs
xor
pop
pop
shlb
jle
adc
imul
sbb
aad
or
fisttps
out
sti
jecxz
jae
icebp
mov
mov
aas
dec
rolb
mov
and
call
inc
loope
arpl
imul
add
lock
xorb
outsl
repnz
or
adc
data16
repnz
mov
pop
dec
mov
out
add
lock
addb
inc
rcrl
je
adc
imul
adc
les
xchg
xchg
mov
cwtl
sbb
idivl
fcmovnb
mov
mov
and
mov
adc
jae
and
cmp
add
fwait
jo
ret
mov
cli
iret
sahf
ljmp
loope
dec
aad
jle
fstpl
sbb
push
pop
push
dec
jbe
insb
fstpl
xchg
mov
push
push
jns
lret
mov
mov
repnz
mov
cmp
mov
stc
adc
xchg
mov
repz
dec
xchg
push
push
push
ret
cmpsb
sbb
jns
mov
or
mov
dec
nop
sub
or
je
xor
push
shlb
imulb
adc
add
jecxz
aaa
vorps
push
movsl
add
mov
sub
jno
add
inc
pop
nop/reserved
mov
jno
add
adc
sbbl
sub
sbb
jae
mov
jbe
xchg
mov
iret
lcall
or
mov
sbb
js
imul
cli
sahf
popf
mov
fdivl
cmp
aad
sub
gs
popf
stos
jae
shl
pop
jns
mov
test
jmp
jo
inc
dec
dec
loopne
sti
ret
mov
mov
into
xchg
incb
push
cltd
lret
scas
mov
jp
loopne
push
sbb
ret
nopl
mov
out
imul
in
mov
sub
mov
xchg
cli
mov
stc
iret
mov
movq
cli
pop
cmp
mov
pop
arpl
pop
mov
xchg
mov
nop
sbb
inc
sub
and
add
push
jecxz
push
mov
mov
push
adc
jl
jno
in
rcl
mov
mov
testb
mov
dec
imul
adc
stc
push
lcall
sub
mov
sbb
out
notl
xchg
pop
std
sub
enter
cmp
mov
xchg
decb
popa
fadd
out
push
cmp
fwait
jmp
xor
pop
dec
loope
adc
sbb
dec
jmp
jbe
popa
loope
jecxz
out
sub
xchg
ret
imul
fsubs
int3
enter
sbb
pop
adc
outsl
cmp
or
ljmp
out
adc
leave
psubw
outsb
xchg
aas
jae
subl
test
aam
push
jge
lahf
and
and
adc
push
sub
dec
psllq
loopne
out
inc
cmp
push
cmc
aad
or
mov
clc
fs
into
inc
cmp
into
out
and
pop
xchg
adc
pop
outsb
fsts
jnp
sarb
cmp
lcall
cli
cmp
fstpt
int3
push
lret
loope
sub
test
adc
or
stc
mov
fidivrs
and
cwtl
mov
ret
add
bound
mov
jbe
jno
cltd
es
jne
addr16
add
xchg
sbbb
mov
inc
inc
dec
push
dec
sub
sbb
nop
test
test
aam
popa
mov
rorb
dec
jecxz
fildl
cmp
xor
scas
or
jmp
cmpsb
jae
jmp
jae
daa
test
sbb
pusha
out
mov
inc
mov
lret
jecxz
inc
inc
mov
xor
fldenv
mov
jbe
mov
jmp
in
mov
out
dec
adc
lock
xchg
aam
mov
lcall
jmp
insb
in
xchg
xor
xor
inc
xor
inc
cwtl
dec
mov
clc
ss
push
jb
ds
ret
mov
cld
xorl
lds
push
cmp
mov
rorl
and
aaa
out
mov
mov
movsl
shll
imulb
push
nop
push
popa
cltd
cmp
out
add
pop
js
dec
cs
fdivs
xor
aad
mov
and
pop
push
idivl
ss
test
leave
cmp
mov
dec
cmp
jg
adc
and
mov
inc
add
inc
addr16
sub
pushf
fmull
or
fsub
enter
dec
test
or
subl
mov
test
adc
or
popf
mov
pop
and
je
outsl
rcrb
or
dec
mov
push
mov
sub
jo
loopne
bound
adc
lods
sbb
sbb
rcrl
xchg
mov
xchg
sub
push
daa
fidivl
jmp
xor
lret
daa
sarb
cmp
rcl
mov
std
icebp
into
pushf
xor
dec
mov
cmpsb
mov
sarl
daa
cli
inc
jne
repz
ret
pushf
sbb
mov
or
mov
stos
add
aaa
inc
lods
add
xor
test
mov
adcw
std
into
cmp
insl
add
insb
pop
ret
adc
mov
lcall
daa
sbb
push
adc
sub
clc
cmp
loopne
daa
push
jle
inc
jns
push
cmp
cltd
sbb
push
cld
leave
xor
jmp
in
das
and
push
xchg
mov
add
pop
stos
repz
sub
xor
dec
sbb
and
mov
mov
adc
ror
leave
sub
push
daa
icebp
or
push
jno
int
xor
mov
movsl
sub
xchg
adc
mov
test
cmp
mov
inc
adcb
imul
jae
cmpsl
xchg
fisttpl
imul
xchg
int3
or
fsubr
sub
popf
fadds
xchg
lahf
bound
shll
lock
ret
push
mov
shlb
pop
push
iret
aam
jge
arpl
dec
ret
in
inc
sahf
push
cld
pushf
inc
ds
lds
call
push
pop
or
sub
stc
daa
movsb
aas
mov
cmpsb
pop
push
adc
xchg
out
outsl
test
movsb
es
mov
notb
insb
fucomip
lret
pop
arpl
inc
cmp
or
and
pop
inc
addr16
lret
mov
push
xchg
stos
jae
int3
pop
xlat
shl
xor
out
or
lock
test
cmp
rcl
rcrl
ljmp
testl
pop
cmp
mov
not
xchg
jle
lods
lea
stc
nop
adc
add
add
adc
or
lret
rol
into
dec
add
sbb
fldt
out
sbb
loopne
jns
xchg
inc
sub
xchg
iret
call
cmpb
pop
leave
xchg
jb
jmp
mov
mov
js
rolb
pushf
jns
je
mov
xor
cmp
imul
or
cld
jno
xchg
xlat
fisubrs
inc
xor
or
inc
inc
aam
dec
lea
jno
sub
or
fiaddl
jle
add
push
pop
cltd
roll
fdecstp
lock
jae
xchg
mov
inc
out
repnz
sbb
icebp
test
mov
das
jl
add
pop
loope
pop
push
outsb
cmp
xor
and
fsubrp
pop
das
sarb
sbb
jg
in
out
inc
cltd
adc
out
push
arpl
mov
jno
in
mov
stc
mov
lds
dec
xor
jns
sub
scas
icebp
xchg
aad
mov
popf
mov
xchg
jl
pop
xchg
mov
pop
cmp
jns
out
shrl
jmp
std
ljmp
pushf
lods
in
sub
pop
adc
addb
sahf
in
sbb
lahf
fwait
pop
subb
mov
ret
cmc
adc
icebp
mov
repz
adc
jge
ljmp
scas
dec
adc
cmp
mov
cmc
rorb
iret
xchg
jl
test
lret
cwtl
inc
push
pop
pop
mov
push
shrb
nop
cmp
cmpsl
test
pop
clc
test
sbb
adc
inc
shrl
mov
mov
cmp
sti
jns
enter
mov
cmp
jle
movsb
out
test
xor
clc
fnstsw
mov
xchg
fisubs
xor
inc
js
xor
dec
fdivs
mov
es
xor
jl
mov
rolb
xor
fisubrs
add
sub
scas
aam
or
xchg
or
mov
jp
rolb
out
cs
dec
adc
sub
in
mulb
xchg
sbb
jecxz
das
xor
mov
inc
xor
ficoml
mov
in
adc
cmp
sbb
arpl
and
ds
movsb
push
pusha
pop
arpl
ficoml
add
jge
pop
mov
outsl
sar
das
repz
shlb
subb
pop
in
cltd
addr16
loopne
xchg
sbb
sub
mov
jecxz
out
mov
js
out
cld
mov
mov
inc
gs
dec
push
mov
add
aas
mov
push
sub
ficoms
mov
cmp
clc
adc
mov
sub
fucompp
call
push
pop
jmp
xchg
and
xor
sub
mov
outsl
jecxz
sbb
call
fmul
xor
sti
call
mov
scas
jo
sub
or
popf
shll
mov
ljmp
imul
lret
inc
add
clc
mov
lret
xor
stos
push
int3
jnp
cmc
mov
jge
aam
pop
sub
js
cli
iret
pop
sub
sbb
int
jg
adc
mov
sbb
xor
xchg
mov
mov
xchg
pop
sub
nop
js
ficompl
std
or
xor
mov
in
pop
mov
and
xor
jmp
les
xor
fisubs
outsb
idivl
mov
add
js
sahf
dec
xor
fsubl
mov
xchg
cmp
addr16
rclb
arpl
fwait
inc
push
pop
xchg
mov
mov
inc
xlat
data16
cmp
mov
xor
mov
fnstenv
and
xchg
test
add
pop
into
sti
add
adc
mov
jbe
hlt
popa
sahf
out
dec
jle
jp
mov
xchg
jmp
in
push
movsl
jb
sub
pop
ret
les
stos
or
mov
jns
iret
loope
dec
mov
les
daa
inc
mov
dec
add
lock
push
nop
sti
and
repnz
push
cld
ret
out
call
and
daa
bound
and
pop
adc
bound
cmp
sarl
mov
adcb
pop
mov
insb
shr
cwtl
iret
shlb
pop
lret
pop
fcmove
stos
sbb
out
sbb
jns
jp
push
cmc
pop
mov
cvttps2pi
xchg
idivb
iret
push
dec
cld
xchg
xchg
aaa
push
push
jns
cld
jmp
stc
dec
mov
enter
cmp
jl
and
mov
outsl
sahf
adc
lret
lock
xor
cmp
lret
push
enter
lea
and
outsb
jg
xchg
in
repz
out
push
or
push
adc
jbe
data16
ljmp
mov
rcrl
ja
out
outsb
mov
js
mov
stos
mov
push
pushf
mov
fwait
inc
data16
jbe
ret
mov
sub
rcl
xchg
jne
sub
lahf
mov
icebp
imul
jmp
sarb
mov
mov
xorb
mov
cld
jmp
or
lea
adc
aad
movsl
ss
xchg
repz
ja
jmp
aad
add
pop
push
inc
xchg
fadds
fldt
lcall
rcrb
mov
out
jg
ret
cli
adc
or
mov
pop
es
cwtl
cmp
add
bound
pop
xchg
sub
pop
rclb
nop
jg
es
sub
and
push
pop
and
inc
mov
add
jae
or
jb
jnp
scas
mov
nop
out
mov
and
xor
add
jl
cmp
stc
xchg
cli
push
rclb
xchg
mov
cwtl
idivl
mov
into
movsl
into
adc
js
hlt
insb
ret
aaa
lods
stos
xor
sahf
not
cmpsb
rcrb
dec
lcall
lea
outsl
cmc
gs
adc
dec
xchg
sub
jp
push
jg
sbb
gs
jbe
lahf
les
add
push
call
mov
dec
scas
jbe
je
xchg
cwtl
xor
pop
ss
xor
mov
or
push
out
sahf
inc
je
mov
ret
incl
jecxz
imul
rol
notl
lret
sbb
test
cmc
aad
call
jnp
lret
add
test
mov
addr16
out
adc
cmp
loope
cmpsl
and
nop
jmp
shlb
shlb
pop
aad
in
adc
fmull
add
cltd
and
test
repz
fisttps
pop
or
sub
cld
push
add
dec
addr16
bound
jbe
push
loope
sub
pusha
mov
clc
jmp
pusha
and
inc
and
icebp
aas
outsl
repz
adc
push
out
shr
sub
aam
jmp
cs
push
sub
add
js
or
jns
adc
xor
or
push
icebp
sub
nop
push
xchg
es
push
xchg
xor
std
fdivrs
sbb
in
mov
xchg
dec
mov
vpsrlw
push
insb
lcall
aam
test
aad
sbb
dec
mov
mov
lock
sti
pop
pushf
bnd
fsubs
pop
xlat
adc
jo
outsl
xchg
mov
clc
pop
sahf
sbb
rclb
xlat
es
fndisi(8087
or
in
fwait
sbb
aas
shrb
es
pop
sbbl
out
fnsave
repz
jo
and
xor
sbb
fsubl
jb
adc
jmp
jecxz
out
mov
sbbl
std
add
add
sbb
add
cmpsb
aaa
mov
test
or
xorb
loope
sub
cli
mov
hlt
out
test
cmp
std
mov
movsl
orb
mov
icebp
mov
push
mov
shlb
movsb
daa
js
fmuls
jo
pop
mov
cmp
xchg
adc
pusha
dec
into
shlb
arpl
clc
lcall
sbb
test
call
sbb
lret
jo
fwait
data16
in
out
jl
mov
cmp
sti
leave
or
cmp
dec
jmp
sbb
add
fdivl
call
jb
stos
mov
fisubrl
ret
jne
lahf
test
mov
sbb
mov
scas
movb
push
pop
test
jmp
mov
pop
mov
ret
sub
mov
xor
aaa
mov
pop
bound
imul
inc
lcall
jae
cmp
lea
out
add
push
pop
imul
pop
decb
mov
fldz
nop
insb
xor
cmp
out
mov
sbb
js
jg
inc
divl
sub
jae
test
subl
xchg
xor
jmp
add
sub
mov
into
jo
inc
jns
imul
mov
pop
lret
sub
mov
and
lods
cwtl
andl
mov
into
enter
mov
lcall
dec
sub
sub
popa
rcll
loopne
ljmp
mov
xchg
in
mov
rcrl
xlat
scas
cmpsl
push
add
xchg
push
xchg
stc
mov
fisubl
das
icebp
aaa
adcl
inc
xchg
push
rcr
jecxz
push
lcall
pop
and
sbb
push
fsub
aam
mov
nop
or
mov
insl
pusha
sub
pop
jp
pushf
out
mov
sbb
add
outsl
mov
pop
adc
in
cmp
inc
sub
loope
insb
scas
mov
ret
dec
and
lods
inc
out
mov
incl
xchg
add
in
in
add
popa
mov
hlt
pop
add
adc
aas
and
sahf
in
jb
std
bound
inc
add
xchg
ds
push
xchg
mov
sub
pop
into
shl
in
sbb
ljmp
aaa
lahf
lods
in
inc
push
and
test
mov
fs
fcmovnu
sbb
sbb
jae
loopne
push
push
push
mov
sub
mov
push
adc
movsb
adc
jnp
adc
inc
jle
add
mov
bnd
pop
lock
fistpl
xchg
cwtl
mov
jp
add
mov
pop
mov
xchg
or
add
sub
ret
fbstp
cltd
jmp
pushf
ds
repz
add
jp
and
lcall
outsb
mov
imulb
ds
mov
inc
outsb
push
subb
xorl
mov
xor
xor
rolb
xchg
inc
jmp
jl
xchg
test
adc
cwtl
adc
sub
cld
jbe
cmp
jns
and
rolb
add
mov
ficomps
mov
xchg
mov
and
pop
mov
ljmp
adc
rcr
stos
lcall
and
lret
mov
mov
arpl
lds
jecxz
clc
shrb
stc
nop
incb
enter
xchg
xchg
repz
inc
add
xchg
mov
push
mov
orb
ja
pushf
cmp
dec
or
cmpsl
push
fmuls
js
mov
xchg
mov
pmulhw
scas
movsb
repz
shlb
and
outsl
sbb
roll
int3
outsb
ror
xor
lret
jl
mov
jns
nop
imul
cli
scas
add
push
movsb
mov
daa
push
cmp
inc
aaa
mov
push
pop
repnz
movsl
jno
cmp
sbb
lret
movsb
jge
jae
repnz
call
xor
fistpl
inc
movsl
es
pop
out
jl
add
and
aam
xchg
dec
loopne
adc
cwtl
push
sbb
pop
sbb
ret
pop
pusha
add
cmc
sub
mov
js
ja
fs
das
das
andb
dec
mov
movsb
ds
add
aaa
data16
popa
aaa
inc
jecxz
bound
inc
or
or
mov
jl
xor
adcl
sti
mov
je
adc
loopne
lods
clc
inc
xor
aam
inc
add
xchg
hlt
mov
lahf
xchg
adc
inc
xchg
or
lahf
jae
xchg
push
mov
push
jns
lahf
sti
xchg
in
xchg
adc
or
dec
push
or
sub
flds
xor
inc
rcl
mov
push
lods
adc
fstp
or
mov
int3
inc
ret
loop
not
stos
pop
lea
pop
cmp
rolb
test
daa
pop
js
sub
aas
mov
aas
lret
lds
mov
ret
clc
mov
adc
in
sbb
xor
test
mov
aas
or
arpl
pop
stos
push
out
cmpsb
aam
arpl
pop
mov
add
cmp
loopne
arpl
cmp
leave
clc
idivl
add
cmp
enter
mov
mov
fistl
icebp
pop
notb
pop
js
das
mov
add
pusha
xchg
and
fucomip
movsb
jp
xchg
pop
les
fabs
push
dec
or
push
jbe
mov
cld
mov
sahf
push
repnz
push
jmp
mov
enter
movl
pusha
add
mov
mov
add
aam
mov
mov
mov
mov
cmp
pop
mov
movsl
lods
es
test
call
sbb
mov
and
jle
mov
into
mull
push
aad
jno
pop
adc
xor
data16
and
fidivrs
fimuls
enter
and
push
aam
outsl
xor
lods
xor
xchg
fildll
cmp
mov
jae
imul
testl
push
cwtl
shrl
roll
dec
xchg
or
cwtl
mov
cmpsb
sbb
jb
xlat
jge
add
cltd
movsl
and
adc
pushf
pushf
mov
adc
paddusb
dec
or
shrb
jne
ret
dec
inc
xchg
mov
sub
test
clc
pushf
inc
shr
jp,pn
xchg
shlb
cpuid
or
mov
jns
or
push
dec
ljmp
xor
adc
ss
lods
sbb
push
and
dec
inc
sarl
mov
out
int3
divl
ds
push
push
mov
in
pop
js
pushf
add
lret
jae
icebp
mov
jmp
ds
dec
bound
jg
jle
inc
aam
lret
popf
push
out
mov
lret
adc
push
aam
push
fiadds
cmp
popa
cmpl
sahf
and
lds
or
inc
lcall
add
rcrl
in
std
ja
jmp
nop
test
xchg
lea
repz
pop
repnz
es
add
sti
loopne
inc
cltd
adc
orl
jp
rolb
push
inc
mov
rolb
loopne
lods
pop
push
inc
mov
push
lds
mov
test
and
dec
loope
popl
pop
aad
mov
mov
test
cmp
lea
sbb
pop
mov
push
rcll
ss
xchg
andl
cmp
es
pop
mull
pusha
pushf
and
hlt
pop
cltd
dec
ret
aas
loope
add
and
in
sub
fnstcw
push
pop
push
lock
pop
test
jge
ret
dec
or
sub
cmp
lahf
pop
icebp
jno
mov
icebp
xor
iret
add
call
cli
or
mov
sub
rol
insl
pop
mov
jl
jns
push
xchg
outsb
jg
aad
inc
jge
push
ret
hlt
adc
or
cs
push
sbb
inc
popf
leave
imul
push
xchg
loop
adc
fstl
push
outsb
in
xor
xor
out
xchg
mov
cmp
dec
aam
insb
lock
fsubrp
push
jecxz
jb
shrb
mov
push
aad
je
cs
or
or
nop
test
sbb
roll
xchg
adc
inc
mov
pop
movsl
stos
negl
xchg
add
jp
movsb
and
test
adc
bound
shll
fcmovb
repz
sbb
sbb
movsl
push
in
lds
inc
mov
roll
inc
aas
add
mov
jmp
cmp
fwait
push
sub
iret
stos
pushf
inc
cmpb
xor
or
cmp
ja
adc
rclb
add
into
jmp
push
pop
mov
int
mov
push
aaa
daa
rcrb
and
xchg
jp
dec
int
pop
insl
cli
arpl
xchg
addl
cmp
sub
or
les
mov
adc
scas
xlat
stos
inc
mov
arpl
into
pop
xchg
mov
lds
cmpsb
jg
push
test
dec
jo
imul
mov
lods
icebp
imul
xor
mov
out
add
ljmp
xchg
and
cli
repz
mov
jl
movsl
add
les
add
divb
int
mov
push
fsubs
jns
inc
xchg
roll
push
push
push
dec
sbb
cmp
stos
js
popa
mov
add
xor
mov
mov
adc
outsl
mov
push
xor
push
mov
out
inc
out
outsb
jl
push
mov
dec
lea
cmp
sub
xchg
divb
cmpsb
das
sarb
cmp
mov
inc
xchg
cmp
loopne
int
das
das
add
jp
inc
cwtl
ret
or
orb
jp
insl
inc
sub
lcall
aas
jbe
xor
inc
test
sahf
pop
or
lods
mov
push
lcall
movb
mov
xchg
cli
stc
fsub
cmpsl
inc
enter
addl
out
sti
add
shll
inc
inc
imul
xchg
cmc
sbb
mov
and
push
mov
xor
int
pop
pop
aad
les
and
lret
out
inc
call
and
jp
cmpsl
dec
fiadds
out
pop
lds
ljmp
inc
mov
xor
sbb
bound
fsubs
push
cmp
inc
xchg
adc
es
stc
scas
loop
dec
xchg
xchg
adc
negb
and
sub
mov
dec
or
lahf
sub
movsl
in
ss
std
iret
mov
sbb
add
popa
pushf
xchg
neg
stos
and
push
and
out
out
out
mov
mov
and
bound
xchg
pop
xchg
shrb
aas
cmp
fwait
dec
add
cmp
stc
cmp
icebp
iret
enter
mov
lock
push
mov
pop
sub
inc
hlt
nop
shrl
mov
je
sub
fwait
lock
and
pop
enter
push
dec
xchg
outsl
test
ficompl
sbb
inc
adc
sub
aad
cmpsl
nop
nop
or
sub
sbb
or
notb
fidivrs
dec
out
imul
stos
mov
subb
outsb
or
stos
push
push
mov
sti
pop
and
dec
gs
cs
fidivrl
stc
aad
xor
push
dec
out
repz
sahf
loopw
aam
out
cltd
dec
loop
cmpb
out
inc
cld
dec
add
je
movsb
aad
popa
mov
nop
in
data16
sarl
aaa
leave
xchg
or
push
cmp
pop
idiv
inc
aad
cltd
sub
inc
jo
movsl
ja
shl
lods
out
xchg
or
add
cld
mov
std
sti
xor
in
aaa
add
mov
or
shrb
push
negl
shl
cmpsl
cmp
add
jns
add
xor
adc
sarb
jbe
push
out
cs
add
jb
in
adc
mov
mov
and
mov
lret
std
int
in
sub
push
sub
mov
lcall
dec
jmp
jge
and
sbb
out
mov
mov
clc
loope
xchg
mov
cmpsb
jne
ror
fildll
gs
divl
xchg
adc
mov
out
adc
cmp
les
xor
divl
cwtl
sarl
push
stos
mov
int
cmp
fidivrl
lret
inc
bound
mov
mov
repz
lods
es
ds
mov
enter
add
in
andl
jle
xor
out
insb
mov
stos
dec
pop
repnz
cmp
mov
lret
insb
xor
aas
bound
insb
xchg
push
push
mov
lea
xchg
cld
lcall
add
sub
or
loop
int
mov
fisttps
adc
adc
imul
push
rcll
enter
scas
dec
in
testl
test
fbld
dec
sub
icebp
pop
adc
rclb
pop
cld
mov
imul
inc
cltd
xor
aam
xor
and
sub
out
lahf
sbb
or
sbb
loope
add
nop
out
repz
mov
movsb
sarl
pop
add
pop
icebp
cmp
inc
cmp
add
into
mov
cmpsb
movsb
cmp
sbbl
test
jnp
aas
decl
outsl
or
mov
iret
imul
pop
mov
testl
xchg
sbb
fwait
add
icebp
mov
xlat
sub
repz
sub
or
nop
mov
and
addb
inc
pop
and
fmul
gs
and
sti
arpl
lock
popa
faddp
ljmp
stos
cmp
sbb
cs
push
test
inc
inc
sarl
cmp
push
inc
out
out
sbb
or
xlat
clc
test
mov
pop
mov
ljmp
sbb
jb
mov
cld
das
cmpsb
sbb
xchg
popf
mov
and
mov
sbb
shrl
sub
mov
sub
ret
cmpsl
cmp
sub
dec
movsl
fildll
js
mov
mov
xor
nop
cmp
daa
lds
xchg
popa
int3
pop
subl
cs
adcl
jle
mov
sub
test
adc
jo
je
arpl
mov
fcoml
add
fs
cld
stos
xchg
fcmovne
inc
fdivr
dec
test
and
imul
and
cmpl
repz
push
adc
icebp
add
dec
arpl
add
js
sbb
scas
sahf
jp
call
cmc
lahf
sub
lock
sti
jg
sbb
push
pop
mov
adc
fisttps
mov
or
dec
pop
cmp
cwtl
dec
push
push
mov
into
or
popa
inc
out
xchg
xchg
fscale
xchg
rorb
pop
in
lcall
mov
rorb
std
fistl
push
sti
pop
jnp
sahf
mov
insb
mov
sbb
aad
inc
fstps
mov
rorb
jb
inc
and
inc
decb
xlat
and
xor
pop
adc
jae
sbb
mov
mov
mov
mov
adc
outsl
mov
cmp
dec
into
lods
push
xchg
fs
mov
push
orb
pop
pop
and
mov
out
add
push
mov
fucomip
add
jae
das
divb
cli
mov
xchg
pusha
pop
cwtl
stos
xchg
mov
jne
mov
and
lods
lret
es
adc
std
push
inc
lret
pusha
jg
pop
cwtl
loop
loopne
push
movsl
xchg
mov
pop
nop
or
sub
sub
mov
stos
mov
mov
mov
add
xchg
pop
sub
jno
mov
rcl
add
scas
andl
add
mov
aad
aaa
xchg
shlb
outsl
orb
fcmovnbe
loop
mov
sub
xchg
xchg
pop
dec
push
cltd
push
dec
sbb
xchg
or
mov
insb
and
cmp
jno
xor
and
repnz
ret
mov
addr16
mov
adc
cltd
mov
lret
int
loop
arpl
push
pop
cmp
inc
sub
loopne
repz
add
xor
adc
xlat
std
sub
dec
pop
push
cltd
pop
xchg
lds
adc
cltd
das
cmp
gs
pop
test
out
sub
fisubrs
in
push
fsubs
mov
sti
pop
arpl
lahf
hlt
shll
rorb
xchg
push
xchg
cmp
dec
rcrb
data16
inc
in
shlb
xor
jo
in
lahf
andb
je
or
lret
out
pop
rcl
popa
push
sub
rclb
lcall
push
repnz
push
sbbb
cmp
dec
sbb
mov
pop
lcall
cmp
fiadds
cld
scas
xchg
lret
xor
xchg
inc
pop
push
dec
out
lods
std
mov
jnp
incl
pop
imul
adc
mov
inc
push
js
dec
mov
or
aad
testl
push
sahf
push
stos
jge
adc
movsb
add
sub
xlat
repz
add
filds
mov
inc
sbb
enter
mov
mov
jb
xor
cmp
cmp
dec
iret
call
mov
mov
mov
mov
lahf
test
sub
cs
pop
mulb
pop
sub
sbb
insl
movb
pusha
add
out
mov
dec
ljmp
loope
hlt
jnp
shr
hlt
fsubl
cmpsb
andb
xlat
ja
xchg
lcall
scas
jne
mov
in
cmp
icebp
cs
cmp
cmp
adc
add
sub
sub
popf
dec
jae
mov
sub
ret
xlat
push
aas
xor
sub
pop
lahf
mov
data16
xlat
push
cmpb
push
test
lock
dec
add
cmpsl
xchg
arpl
inc
test
push
loop
or
lcall
mov
call
jnp
call
rorb
imul
sbb
or
inc
adc
cmp
mov
adc
cltd
testb
xor
jns
cmp
dec
pop
push
xchg
fnstenv
pop
ret
mov
jp
dec
std
fidivrl
sbb
pop
negb
or
dec
cmp
xor
or
push
mov
dec
mov
push
insb
cltd
add
and
mov
dec
xor
ret
xchg
testl
adc
add
inc
pop
in
es
je
in
aas
cmp
dec
in
repz
push
cmp
out
adc
imul
mov
cmpl
jb
jp
mov
sub
jmp
repz
dec
add
pop
jle
ja
outsb
xlat
jp
inc
fildl
ds
sub
bound
pop
stc
popa
inc
inc
pusha
mov
pop
jle
out
fdiv
hlt
push
daa
adc
push
or
mov
stc
pop
cmp
pop
fcomps
mov
popa
jle
inc
je
xlat
daa
or
sub
lret
in
int
jecxz
push
daa
xor
cmp
xor
test
das
add
and
loop
int3
xchg
ljmp
repz
nop
mov
out
jnp
lods
push
sbb
and
fsubl
sub
jp
pop
rcpps
xchg
sub
mov
nop
fisttps
add
pop
pop
lcall
adc
cmp
dec
xchg
xor
test
lods
push
adc
scas
decb
xchg
insb
nop
stc
adcb
jnp
xchg
xchg
repnz
mov
dec
xor
scas
add
lahf
movsl
in
add
orl
cmp
xor
jge
or
xlat
je
lods
dec
cli
fldl
and
out
sahf
popf
lock
push
and
mov
and
es
jmp
pop
fiadds
inc
sahf
or
addr16
pop
ficoml
pusha
cmp
dec
stos
dec
sub
mov
imul
xchg
dec
insl
xor
pop
xchg
rol
scas
push
or
loop
cld
clc
loope
push
les
xchg
inc
les
mov
xlat
or
xchg
int
jp
mov
adc
or
inc
movsl
and
cmpsl
add
jl
lods
orb
xchg
or
test
int
sub
loop
xlat
mov
push
add
jp
shlb
inc
mov
xor
mov
lea
mov
pop
xorb
out
push
leave
fucom
jp
mov
lock
rorl
icebp
inc
and
mov
pop
jecxz
or
or
inc
cmp
add
pop
mov
xor
cmp
lea
aaa
outsl
stos
inc
jp
cmp
dec
es
push
fisttps
in
push
je
pushf
pop
jmp
int3
sbb
and
inc
mov
dec
mov
lods
mov
or
lret
sbb
add
pop
mov
mov
ja
xlat
xchg
andb
sbb
xor
jnp
mov
sbb
xchg
insb
fcoml
stos
scas
push
adcl
cmp
pop
enter
leave
fdivrl
sbb
and
lods
bound
pop
xchg
mov
adc
jo
xlat
push
add
ss
lcall
ljmp
arpl
test
lods
sbb
repnz
dec
frstor
adc
jne
xor
xor
test
in
test
shrb
stos
aas
or
test
inc
xchg
lret
sahf
lret
xchg
dec
mov
sahf
dec
int
lea
xchg
outsl
stc
rcrl
dec
inc
xorb
xchg
or
cmpb
imul
shr
lret
shr
push
aad
xchg
sbb
jb
pop
mov
xchg
mov
cmpsb
sti
ret
mov
mov
dec
out
sbbb
dec
pop
js
xchg
negl
cld
jbe
mov
inc
test
xchg
scas
inc
out
jmp
in
in
sub
sarb
lahf
imull
xchg
mulb
mov
ret
call
lock
dec
stos
jmp
lahf
scas
lret
lcall
gs
out
xor
lods
popf
push
pop
gs
shrl
lret
cli
ljmp
xor
dec
pop
loope
mov
add
insb
incl
mul
shrb
jno
and
iret
lock
fstpl
fnsave
testl
scas
scas
mov
mov
mov
daa
mov
int3
sbb
mov
mov
or
mov
imulb
test
jl
pop
lret
hlt
xchg
es
mov
dec
enter
lcall
in
mov
pushf
fwait
daa
cmp
test
call
mov
xchg
in
xor
mov
dec
mov
sar
and
leave
cld
adc
int3
sub
rol
mov
jae
cmc
lret
xchg
pop
iret
lods
in
lret
sti
ret
mov
mov
mov
xor
out
jbe
lret
loopne
sbb
arpl
sarb
sbb
xor
xor
gs
cmpsb
adc
xor
lret
out
lock
cmp
dec
sub
in
daa
or
mov
jecxz
out
or
shr
subb
xor
mov
movsb
mov
lret
aad
mov
adc
xchg
add
mov
push
mov
sbb
shl
mov
mov
int3
ja
in
mov
es
shrl
pop
adc
fwait
dec
movhps
int
xor
and
xchg
insl
inc
push
push
or
scas
dec
mov
stos
pop
in
push
xchg
in
xchg
bound
xchg
pop
cmpsb
mov
and
push
in
cmc
push
in
popa
adcb
xor
lahf
aam
loope
popf
pop
inc
cmp
sub
sbb
inc
jnp
push
shr
cltd
sbb
test
push
jns
out
and
push
fcomi
into
xchg
lret
lret
arpl
stos
mov
int3
adc
sbb
mov
lods
pushf
pop
xchg
mov
arpl
into
ss
sub
cld
sub
jmp
and
or
xlat
out
pop
dec
lcall
cli
jne
fwait
mov
iret
dec
in
fldt
xchg
es
mov
mov
loopne
xor
xchg
loope
dec
pop
and
add
jb
imul
repnz
fidivs
mov
pushf
ret
fstl
dec
mov
shlb
dec
inc
orl
mov
aam
or
push
cli
hlt
dec
jmp
lahf
pusha
mov
int3
in
imul
or
shlb
movsb
mov
adc
movsl
ficomps
popf
adc
mov
cmc
call
mov
je
andl
jge
repnz
into
cld
fiaddl
ljmp
cwtl
bound
sahf
mov
iret
inc
sub
lcall
das
dec
in
and
mov
fcomp
mov
jge
lret
sub
mov
and
pushf
scas
sbb
lahf
mov
les
mov
dec
cmp
in
jmp
fsubr
pop
and
add
out
or
mov
pushf
fisttpl
orb
jge
test
js
sahf
test
and
push
mov
lods
or
mov
mov
xchg
enter
int3
cmpsb
ret
cmp
push
push
adc
leave
out
cmp
cmp
shr
adc
outsb
mov
pop
lods
lcall
cmpsl
dec
mov
ljmp
in
and
inc
xchg
rclb
scas
int3
or
cmp
jmp
adc
insl
push
or
enter
loope
repz
jle
and
test
pushf
cmpl
mov
aam
cs
gs
fst
in
seta
pop
sbb
jbe
cmp
or
cmp
sub
mov
mov
leave
jo
push
aad
inc
xchg
daa
imul
fwait
stos
adc
mov
loope
dec
notb
rorb
push
stos
subl
sti
movb
pop
mov
lret
mov
adcl
jae
cwtl
push
jo
sti
or
lock
sub
lea
sahf
or
out
adc
movsb
sti
sbb
sahf
adc
pop
int3
push
mov
sahf
or
sbb
xchg
or
inc
pop
xchg
mov
adc
mov
mov
mov
push
xchg
dec
fists
outsb
scas
mov
rol
shll
pop
mov
mov
int
fucomi
mov
jmp
ret
sub
pop
xlat
or
cmp
stos
ljmp
mov
mov
inc
cmpsb
test
pop
or
addl
xchg
xchg
or
mov
scas
jbe
mov
push
scas
ficomps
dec
sbb
cmp
dec
out
push
sbb
ljmp
stos
add
test
repz
sub
xor
addr16
jge
cmpb
lahf
cli
loopne
in
cmp
ror
roll
int3
cld
enter
xchg
loop
addb
ljmp
jno
xor
fcoml
ljmp
sbb
ljmp
or
mov
cmpsl
fisubs
pop
mov
imul
inc
pop
movsb
shrb
xchg
fmuls
push
xor
cmpsl
xor
hlt
scas
push
enter
cltd
iret
sub
nop
lcall
inc
nop
negb
shl
imull
and
or
mov
pop
popf
out
jb
inc
sti
lcall
cmpl
mov
repnz
loop
xchg
test
xor
test
aam
lahf
mov
dec
repz
sahf
adc
bound
mov
cmpsb
pop
adc
ljmp
xchg
fst
cmc
leave
mov
int
xchg
loopne
lods
into
repnz
into
lods
lea
cmp
in
and
into
rol
repnz
outsl
mov
sarb
add
sti
dec
pop
lock
cmc
add
sar
stos
xorl
sub
cmp
movsb
sbb
mov
xchg
shl
cmp
and
mov
inc
and
xchg
test
xchg
mov
add
out
addb
out
xchg
inc
lcall
repz
or
sahf
popf
inc
push
push
mov
push
adcb
pop
loopew
rorb
das
xlat
pop
push
inc
xlat
push
icebp
push
int
hlt
inc
hlt
mov
mov
sti
fldl
scas
push
outsl
or
push
test
lock
cmpsl
cmpsb
shlb
rcl
lahf
test
jmp
sar
stos
dec
jno
or
ret
mov
sahf
inc
inc
mov
mov
fisubrs
cwtl
jb
hlt
xchg
rolb
and
jmp
adc
rorb
fisttpl
aam
sub
add
subb
push
add
mov
add
jo
mov
and
fwait
aam
pushf
inc
lahf
mov
cs
push
dec
sub
or
adc
lcall
pusha
sbb
jae
mov
mov
adc
test
stos
pop
cs
push
or
fmul
lahf
aaa
movsb
nop
or
nop
mov
mov
subl
fwait
inc
dec
int
mov
decl
xchg
les
xchg
push
movsl
mov
pop
inc
mov
pusha
daa
lods
sub
jle
movsl
lret
cmp
lock
mov
mov
and
xchg
push
out
ret
mov
ret
xchg
cs
mov
xor
xor
in
rolb
mov
out
into
pop
lret
mov
popa
xchg
jp
or
in
icebp
into
xor
mov
outsb
nop
sbb
fidivrl
xchg
lret
fdivr
mov
mov
sbbl
mov
aaa
mov
ljmp
stos
gs
ret
dec
lock
xor
mov
add
popl
enter
rol
testl
js
shlb
test
rol
dec
mov
loop
out
out
sbb
ret
shlb
cmpsl
jecxz
xlat
clc
mov
sti
stos
clc
cmp
pop
xchg
mov
aas
iret
xor
leave
std
pop
fwait
or
addr16
dec
push
or
jge
xchg
cld
clc
pop
repnz
mov
dec
mov
push
xchg
popf
nop
xorb
sbb
scas
stos
shr
shrb
xchg
jbe
jmp
loop
daa
push
mov
inc
mov
push
dec
popa
pop
leave
sub
xchg
jp
mull
mov
push
mov
test
xchg
in
pop
inc
pusha
xchg
mov
outsb
ret
shrl
subb
xchg
ret
outsl
xor
and
mov
or
or
aam
pusha
into
repnz
push
pusha
mov
aad
add
jge
inc
repnz
cs
popa
mov
popf
dec
loope
test
jmp
aad
mov
pop
xchg
scas
call
mov
popl
jg
lahf
inc
dec
push
add
into
push
popa
addr16
repz
int3
sub
mov
scas
arpl
cmp
idivl
loop
adc
xchg
pushf
mov
lock
imul
mov
xchg
loope
daa
aas
mov
add
jae
nop
popl
into
in
xor
cltd
cwtl
xchg
or
ja
cmp
daa
lcall
out
push
orl
sub
dec
in
jg
loopne
lock
ret
xchg
xchg
in
mov
scas
push
arpl
push
into
pop
or
loopne
out
pop
fisttps
rep
jbe
test
lret
mov
out
mov
int
mov
lret
insl
dec
divb
jbe
dec
cmp
popa
mov
inc
shll
lret
jae
mov
icebp
pop
xchg
rcll
inc
and
push
and
xchg
mov
mov
leave
loope
test
sbb
shl
out
xchg
sbb
xchg
js
test
cmp
cmp
dec
xchg
inc
dec
lock
fwait
mov
lret
loop
jle
mov
les
adc
jp
scas
mov
je
sahf
test
dec
sti
and
loope
mov
fs
pop
mov
xchg
dec
inc
int3
xchg
pop
mov
cmp
dec
into
les
stc
test
adc
fiaddl
and
mov
xchg
dec
fdivrp
push
jmp
mov
aaa
lock
mov
sbb
sti
or
xchg
out
sub
mov
test
aam
and
idivl
or
movsb
mov
xor
mov
adc
imul
rorb
add
lret
xor
test
ret
push
gs
xorb
out
repnz
add
mov
mov
or
dec
stos
std
mov
sub
hlt
out
testl
xchg
fsubrl
call
cmp
fimull
ja
bound
bound
sub
loopne
mov
mov
ljmp
divl
xchg
pop
or
loope
pop
xor
push
cltd
and
loop
add
loop
cli
sahf
loope
cmp
out
in
out
push
mov
nop
mov
shrl
xor
mull
test
jl
scas
jecxz
movsl
clc
cmpb
mov
test
test
popl
punpckhbw
js
repnz
test
mov
cmpsb
cmc
mov
jns
test
ret
pusha
out
fidivl
mov
fld
push
mov
sti
and
xor
mov
shll
xchg
data16
sbb
mov
pop
pop
out
dec
mov
flds
clc
repnz
mov
or
jg
sti
inc
adc
mov
sti
cmp
shll
aad
shll
cmp
cs
imul
out
and
add
mov
loopne
daa
fdiv
add
mov
imulb
insb
imul
push
lcall
hlt
mov
xchg
fidivrl
jns
mov
mov
loop
ljmp
xchg
mov
mov
fcmovb
jb
jbe
iret
outsl
push
out
xchg
jg
xchg
je
dec
or
jbe
loop
lret
mov
outsl
ja
mov
inc
sub
pop
dec
js
jmp
lods
movsb
ret
adcl
ss
in
push
lock
push
push
pcmpgtb
add
lcall
mov
iret
jecxz
aam
test
out
sub
test
mov
mov
pop
pop
out
and
fistl
orb
cltd
or
push
je
mov
imul
mov
lcall
xor
ja
cwtl
and
enter
pop
and
jp
adc
pushf
icebp
push
imul
xchg
ficompl
fcom
and
sub
pop
xor
iret
cli
scas
sbb
lcall
test
cmpb
xchg
cmp
insb
cli
sarl
pushw
jns
jns
insb
out
mov
and
dec
lcall
in
xchg
dec
xor
mov
outsb
loop
sysenter
iret
test
lods
movsb
jns
repnz
fnstenv
shll
cwtl
std
lcall
and
mov
nop
pop
xchg
fstps
divl
lcall
fnsave
dec
cmp
jmp
test
dec
ret
inc
xchg
xchg
test
xchg
mov
shl
xor
aas
outsl
adc
jmp
rol
pop
jmp
mov
sarl
mov
fwait
xchg
test
divl
or
dec
and
cs
cmpb
int3
pushf
cmp
imull
mov
loop
outsl
adcl
lock
or
mov
adc
movl
outsb
adc
fwait
sti
into
sarl
imul
dec
mov
xchg
cmp
or
into
inc
or
cmp
dec
idivb
faddl
inc
out
scas
dec
add
sahf
push
dec
xor
aas
mov
mov
add
xchg
rol
js
jne
and
mov
sbb
mov
pusha
mov
sahf
push
imul
or
cmp
mov
nop
out
pop
dec
or
jae
jb
jecxz
lret
fstps
jl
cmpsl
cmp
jo
xchg
mov
out
push
loopne
decl
xlat
xor
pop
data16
or
cltd
cmp
lcall
aam
mov
hlt
mov
add
icebp
dec
cmpsb
test
pop
or
xchg
out
cwtl
int3
adc
lock
mov
mov
lcall
sti
xor
stos
in
fmull
lcall
loope
iret
pushf
mov
and
es
xor
daa
nop
or
stos
outsb
and
jnp
scas
xchg
cmpsl
ja
in
cltd
dec
mov
xor
xchg
lret
xchg
inc
lret
mov
xchg
fldt
loope
push
sub
les
clc
inc
mov
or
mov
xor
repz
addr16
aad
inc
cmp
pop
cmp
lds
inc
mov
mov
pop
fdivl
divl
pop
mull
incl
div
add
sbbb
shrb
popf
outsl
out
cwtl
adcb
add
lock
addr16
rcrl
ja
jmp
imul
ljmp
or
shlb
jo
hlt
movsb
lahf
fisubrs
or
in
push
mov
scas
push
cltd
jb
data16
nop
sar
jbe
inc
push
or
divb
inc
add
dec
outsb
std
xchg
pop
xchg
xlat
cmp
clc
inc
shr
int
cmp
jecxz
test
popf
sahf
inc
or
dec
xor
fisttps
shlb
filds
jo
jbe
cmp
push
xchg
orl
aas
mov
jo
scas
cli
mov
pop
inc
leave
sbb
in
dec
dec
loopne
or
shl
rorl
cmp
fwait
test
gs
mov
popa
jmp
rcll
leave
lcall
mov
popf
mov
data16
inc
fwait
ds
push
cltd
imul
sub
repnz
fdivrs
in
test
mov
xchg
cwtl
aad
aaa
insl
cli
test
cmp
and
fldt
adc
or
mov
xchg
aam
scas
cmpsl
mov
ret
scas
add
icebp
mov
call
loope
cwtl
fwait
outsb
cli
cmp
data16
pop
stos
aas
je
and
adc
ret
cwtl
add
sarl
add
cmpsl
and
testl
rol
ret
mov
lock
data16
xchg
stos
repz
arpl
push
jb
cwtl
inc
iret
pop
inc
mov
stc
push
aam
scas
arpl
pop
filds
or
jmp
xor
mov
ljmp
mov
out
lahf
ret
int3
inc
stos
iret
mov
stc
rcl
mov
mov
hlt
xchg
mov
cmpsb
mov
loope
dec
aaa
outsb
push
cmp
mov
sub
sub
stos
jg
ret
in
mov
fildll
shl
mov
push
cmpsb
mov
outsl
or
outsb
xor
inc
mov
xor
sub
stos
adc
add
shlb
aam
scas
fwait
mov
dec
shlb
out
mov
xchg
sub
test
jno
and
jg
pop
mov
test
fistps
cld
mov
test
repz
sbb
adc
inc
ret
mov
push
leave
jno
int3
mov
cli
test
insb
xlat
jb
aas
pop
mov
ret
enter
leave
mov
enter
push
je
lds
les
cwtl
sub
pusha
inc
inc
neg
push
jo
movsl
cmp
shrb
aad
adc
xchg
ljmp
movsl
ret
jecxz
sub
and
mov
or
test
fisttps
push
repz
pushf
repnz
mov
lods
out
mov
shlb
mov
mov
mov
push
into
sub
xchg
cmp
fsincos
sar
stos
lods
mov
and
xlat
in
lods
scas
mov
dec
sbb
cs
mov
lcall
repz
cmc
jg
out
ret
xchg
mov
xchg
push
push
or
or
mov
xor
cltd
jmp
pop
dec
pop
mov
add
lods
repz
dec
mov
out
mov
xor
cltd
and
and
es
inc
jbe
push
fs
mov
mov
jp
or
xlat
adc
push
xchg
movsb
das
dec
xchg
sub
jo
sbb
dec
clc
cwtl
sub
imul
test
dec
in
dec
xor
xchg
je
mov
pop
add
and
lock
and
sbb
inc
lahf
mov
adc
cs
mov
std
xacquire
out
jp
mov
inc
add
es
adc
stos
jno
xchg
rorl
out
xor
xchg
gs
dec
movsb
imul
out
push
out
ret
jno
mov
sar
popf
test
fwait
dec
scas
mov
push
xchg
aaa
jp
je
xchg
or
es
jecxz
jp
call
fimuls
cmp
or
aaa
scas
cmp
and
jae
lods
ljmp
scas
dec
and
push
repz
lock
pop
fistl
out
pusha
pop
fadd
dec
mov
or
pushf
jle
or
jae
addr16
mov
aam
out
xchg
mov
push
mov
ret
jmp
push
es
fisubs
xchg
movsb
pop
es
xchg
or
mov
not
lods
mov
rol
push
cltd
sarl
sub
in
add
push
scas
adc
cmpl
or
imull
js
mov
mov
xor
jecxz
shlb
in
jecxz
fmull
hlt
sbb
addr16
cli
test
or
lret
out
movsl
cwtl
cmp
rcll
test
cmpsl
xchg
sbbl
push
sub
and
push
pop
data16
in
pop
into
and
dec
out
sbb
mov
popa
and
dec
repz
mov
outsl
jge
sarl
ja
fstpl
cmp
into
mov
pop
fsub
inc
inc
and
orl
mov
int3
pop
and
sbb
int
mov
notb
lods
in
pop
ficoms
stc
mov
or
sub
adc
xor
comiss
xchg
mov
lret
lret
js
test
or
aam
sub
mov
or
push
xor
mov
cmp
adcl
sbb
or
pop
jle
inc
cli
cmpsl
xorl
call
jae
inc
cmc
xchg
sbb
test
jp
ljmp
inc
fcomp
lock
pop
mov
mov
adc
popa
inc
dec
into
jae
xor
lods
pop
pop
je
imul
adc
repnz
adc
sub
out
popf
vxorpd
mov
pop
leave
popf
decl
ret
das
cmp
sbb
or
shll
fmuls
daa
cmp
in
std
push
fisubrs
xchg
enter
leave
xchg
push
movsl
jg
fs
mov
shlb
out
lcall
cmpb
push
mov
mov
mov
mov
into
lahf
mov
pause
xchg
mov
shl
pop
xchg
stos
notl
mov
sub
mov
ss
out
jge
mov
cmc
fwait
in
cld
mov
xor
push
aam
pop
jne
inc
adc
xor
mov
imul
xchg
cmp
xor
dec
in
lock
out
out
sbb
inc
xchg
loop
loop
mov
pop
fisubrl
mul
mov
mov
lods
sti
and
jb
out
lret
clc
jecxz
imull
mov
aam
jp,pt
or
nop
jg
xorl
sub
insl
mov
into
sarb
jno
mov
aad
subl
jnp
jp
lods
fadds
pop
lds
ret
jge
cltd
sub
mov
pushf
enter
sbb
adc
jecxz
cltd
push
inc
push
rol
inc
sar
mov
mov
stc
test
pop
or
sarl
jp
cld
cmpsb
rcrl
fsub
sub
mov
cmp
sub
pushf
push
adc
xor
sbb
sahf
aad
mov
cmp
nop
loope
shlb
xchg
push
xchg
mov
xchg
xor
into
stos
push
sbb
lahf
andl
sub
fcomps
out
cmp
sbb
filds
adc
ljmp
out
ret
cwtl
in
rcrl
push
icebp
cmp
mov
int3
lret
pop
push
push
jge
or
push
xchg
jecxz
pushf
or
fldpi
jp
iret
movsl
enter
ffree
imul
sub
std
add
movsb
fnsave
mov
in
out
xchg
leave
clc
xchg
loop
xchg
pop
scas
dec
push
lcall
pop
icebp
scas
xchg
mov
mov
pop
lcall
pusha
or
and
mov
rcll
popa
enter
aad
cmpl
push
jno
js
push
test
xchg
cmp
cmpsl
and
sub
stos
daa
sarb
or
fists
sbb
nop
jo
add
dec
cmp
pop
inc
push
test
int3
and
ljmp
dec
scas
sub
jae
mov
xor
push
pop
mov
sahf
inc
pop
mov
fimuls
mov
call
jae
jecxz
repz
stos
fwait
xchg
mov
into
xchg
sarl
adc
lahf
fwait
cwtl
cmp
inc
fdivrs
decb
or
popf
repz
cmc
or
xor
lds
and
shrb
loopne
into
cltd
daa
clc
mov
dec
lods
shrl
inc
call
insl
ja
fstl
cmp
push
adc
xor
rcrb
in
xlat
mov
outsl
cmpb
xchg
xchg
sub
mov
pusha
aas
dec
sub
cmp
sub
ss
insl
xchg
xchg
repz
iret
inc
push
addr16
mov
sub
jge
add
pop
xchg
mov
ds
xchg
inc
xchg
inc
test
ljmp
xchg
sub
pop
movsb
out
cwtl
mov
arpl
push
aas
imul
adc
repnz
pop
ljmp
shlb
sti
out
xchg
and
loope
test
add
cmp
lds
sub
leave
iret
dec
fstpt
push
jo
repnz
xlat
add
dec
stc
xor
sbbb
xor
jge
lock
shrb
mov
in
jge
shl
push
pushf
pop
movsb
out
ljmp
mov
test
xchg
sbb
cmp
push
or
or
fists
pop
repnz
and
mov
sbb
pop
mov
mov
into
repnz
cld
mov
fnstenv
cmp
popf
push
jecxz
lods
mov
and
daa
loope
les
outsl
cmp
inc
cmpsb
and
jecxz
aam
fcmovu
and
andl
pop
ljmp
addr16
push
fadd
in
ret
adc
adc
jge
add
aam
ds
add
mov
aam
xor
sbb
adc
arpl
xchg
mov
mov
scas
cmp
sbb
aad
mov
lret
ljmp
outsl
dec
pop
sti
sbb
inc
lods
lods
and
lea
xor
repnz
stos
iret
push
in
mov
sbb
jnp
mov
jg
adc
jp
sub
mov
ljmp
mov
loop
jno
loope
fldcw
lcall
out
jecxz
dec
mov
cmp
or
pop
subb
push
aas
jle
mov
fisttps
in
and
sarl
cmp
mov
jp
out
movsb
cld
mov
mov
and
clc
leave
mov
pop
mov
lahf
mov
out
lods
aas
and
fisttpl
daa
repz
stos
idivl
xchg
nop
dec
in
or
movsb
adc
pop
mov
jl
sub
jl
into
add
mov
cmp
int
les
repz
push
xchg
or
rorl
dec
mov
jl
sbb
push
cmc
stos
in
ret
shll
negl
rcll
push
mov
test
dec
lock
loope
mov
cmp
pushl
add
mov
popf
repz
test
fnstsw
sbb
push
adc
ret
cwtl
dec
repz
sar
xchg
fwait
dec
jbe
mov
xchg
leave
negl
mov
movsb
lret
addr16
mov
sbb
in
xchg
mov
mov
je
adc
clc
fcomps
cmp
lahf
out
xorb
dec
adc
cmp
fcmovb
aam
fildll
bound
push
adc
aaa
adc
insl
mov
les
mov
cmp
jb
outsl
fnstenv
add
mov
inc
imul
leave
xor
loope
mull
mov
mov
jno
rcrb
es
dec
mov
fistpl
cs
push
cmpsb
aad
dec
jmp
cmp
and
fcoms
loop
mov
and
jb
movsb
movsb
je
dec
and
xchg
test
lcall
dec
enter
pushf
sbb
nop
or
into
cmp
cld
sbb
out
fsub
xor
cmp
mov
cmp
push
addr16
mov
jae
pop
lods
lret
sub
std
out
data16
pop
lods
fwait
rcrl
movsb
mov
clc
addl
mov
inc
jecxz
mov
sbb
push
insl
icebp
cmc
xor
arpl
jecxz
cmp
push
in
notl
cmp
mov
icebp
testl
push
and
cltd
loopne
scas
bound
test
push
push
cmp
push
pusha
sbbl
insl
jmp
data16
loope
mov
inc
faddl
std
fbld
add
ja
ret
data16
je
popf
fdivrs
inc
cmp
movsl
jecxz
out
imulb
sbb
fwait
sbb
test
cwtl
out
hlt
cwtl
xchg
xchg
pusha
or
negl
sub
cmp
les
and
sbbl
xchg
pop
std
xchg
loope
ret
shll
push
mov
lahf
dec
ficoms
addr16
test
out
inc
xor
nop
jbe
xor
mov
hlt
iret
or
adc
lea
fildll
movsb
push
sarb
clc
test
sbb
clc
es
sbb
mov
pop
mov
or
out
out
cmp
in
mov
hlt
decl
cs
inc
cmp
push
imul
movl
shll
addr16
cltd
xchg
out
jg
mov
ljmp
cli
pop
in
lcall
ss
pop
push
and
mov
cli
je
dec
pop
in
in
cmp
mov
shll
scas
mov
mov
inc
cmpsb
aam
pop
jmp
pop
cmc
bound
pop
mov
pop
dec
sbb
pop
sbb
je
es
int3
das
sarl
js
mov
leave
out
scas
pop
pusha
mov
ret
xchg
xchg
divl
cwtl
pop
cmp
inc
dec
cmpsl
les
sti
in
scas
aaa
cmpsb
cltd
stos
loopne
sti
enter
lcall
subl
ret
push
hlt
outsb
pop
rolb
mov
push
pop
add
jl
xchg
jb
mov
jg
mov
je
mov
jle
popa
jmp
fdivp
mov
loop
xor
cmp
mov
outsb
fadds
aam
sub
dec
xchg
dec
ljmp
js
je
sbb
mov
cmp
wbinvd
cwtl
and
adc
fsubr
fnstenv
or
sbb
rcl
or
les
das
sbb
mov
push
cltd
nop
dec
es
and
cs
sbbb
cmpsl
xlat
mov
daa
jns
in
test
lea
mov
rcrb
js
xchg
popa
adc
in
adc
jle
aad
adc
clc
fwait
push
pop
fcompl
push
xchg
mov
xchg
or
xchg
add
in
sbb
adc
sub
jmp
mov
jbe
cmp
mov
jnp
sbb
test
jbe
xchg
add
mov
add
into
cld
jo
dec
shrl
ror
dec
mov
jle
movsl
leave
mov
cmp
in
in
adc
mov
and
repz
scas
cmp
lods
ja
clc
daa
int
fisubl
out
ss
sub
lods
mov
jle
xor
push
add
lods
mov
push
push
dec
jnp
jp
pop
pop
adc
xchg
insb
daa
jns
pop
dec
or
inc
daa
dec
out
inc
popw
enter
imul
test
mov
dec
sbb
mov
sbb
mov
mov
sub
and
test
and
stos
jmp
xor
shr
fistps
ja
and
jmp
mov
sbb
xchg
mov
lods
and
test
xchg
xor
gs
cwtl
int
ljmp
lcall
dec
inc
or
cli
mov
call
lods
shll
mov
or
add
and
repnz
sti
cmp
mov
insb
into
popf
push
push
mov
xor
stos
aam
cmpsb
fiaddl
mov
adc
pop
mov
xor
fwait
rolb
jecxz
jne
mov
xlat
repnz
pusha
xor
dec
xor
dec
mov
mov
dec
mov
sub
add
xlat
subl
mov
adc
dec
jg
cmpsb
out
negl
mov
aad
sar
jbe
mov
xchg
scas
in
pushf
xor
sarb
xlat
pop
cld
adc
xor
and
adc
sbbl
es
in
pop
iret
es
icebp
es
jo
mov
sub
rol
xor
sbb
mov
xor
lret
mov
adc
pavgb
dec
jnp
mov
repz
mov
jns
xchg
mov
aad
and
mov
push
xchg
pop
repz
pushf
ja
cltd
popf
mov
lods
lret
xchg
faddp
int3
mov
adcb
sbb
add
mov
xchg
inc
or
frstor
stos
push
test
cmp
pop
mov
loope
mov
nop
inc
sbb
adc
ret
out
add
pop
pop
push
ret
insb
inc
leave
add
ret
xchg
mov
in
xlat
and
addl
shlb
aam
mov
mov
jge,pt
mov
test
mov
fdivl
push
sub
pop
stos
out
ljmp
mov
push
faddl
dec
iret
lods
inc
shll
ja
ret
pop
es
sub
test
cmp
in
mov
ljmp
es
sub
pop
pop
push
popf
cmp
mov
fisubrs
mov
dec
add
jno
inc
aas
repnz
adc
loop
mov
jl
bound
adc
into
xchg
fsubs
jl
out
in
mov
jle
pop
icebp
popa
mov
mov
outsl
test
lcall
enter
icebp
jo
repz
bound
xchg
cmp
sahf
mov
push
rcrl
cltd
mov
gs
fsubr
stc
inc
mov
add
inc
pop
in
add
aas
xor
xchg
js
sbb
aaa
mov
push
lock
shl
adc
js
sbb
outsl
inc
sbb
loop
jo
idivb
int
in
cmpsb
dec
scas
sbb
sbb
sub
imul
mov
jbe
cmpsb
adc
mov
sbb
lock
adc
add
cmc
das
dec
xchg
jecxz
pusha
insb
jnp
jg
inc
inc
xlat
addl
mov
add
cmc
loop
mov
inc
neg
xchg
and
in
push
es
sub
adc
push
rcrb
sub
mov
jb
movsb
fwait
not
dec
aam
fwait
push
mov
loopne
insl
or
loop
lds
movsb
or
aam
jns
imul
stc
mov
and
mov
lret
cmpsb
divb
xchg
les
or
mov
test
roll
inc
mov
push
lret
lret
pop
ja
push
push
aas
pushf
pause
or
lock
pop
repnz
mov
call
and
aaa
fs
mov
nop
test
mov
xor
or
fnstcw
repz
mov
and
push
fisttpl
lods
jns
and
icebp
inc
cltd
out
lds
sbb
jno
and
popa
xchg
jecxz
or
cmc
mov
nop
negl
mov
mov
jecxz
loope
ret
mov
insl
jno
out
mov
loopne
mov
pop
in
cmpb
cmpsl
xchg
jno
inc
dec
lock
pop
cmp
pop
rclb
fiaddl
mov
decb
call
clc
roll
and
orl
fdivs
repz
fistpl
js
xchg
imul
mov
jecxz
repz
xchg
out
xchg
int3
sub
dec
out
gs
xchg
shr
mov
push
xchg
ret
scas
and
loope
cld
popa
mov
lret
pop
mov
out
adc
clc
not
jecxz
aam
mov
fisubl
cwtl
fnsave
sub
les
mov
xlat
int
negl
add
push
shl
xchg
jecxz
paddb
aad
out
mov
mov
mov
pop
ljmp
in
fnstenv
out
fcmovb
pop
adc
divb
sbbl
movsb
adc
jns
cs
in
mov
aam
mov
dec
dec
pop
pusha
lahf
repz
xlat
lret
sti
aad
mov
dec
mov
fdivrl
push
andl
insl
sub
pop
in
jg
jmp
mov
repz
xorl
roll
lret
dec
mov
sbb
fistps
add
mov
mov
xchg
loopne
addr16
adc
stos
mov
sti
jns
ret
cmpl
push
popf
xor
loope
rorb
cmp
int3
sbb
shlb
mov
mov
outsl
push
jo
scas
mov
xor
stos
jns
rcpps
jb
push
pop
mov
xchg
cmp
dec
cmp
jns
vandps
mov
mov
and
outsb
adc
sahf
fnstenv
dec
cwtl
pop
xor
in
stos
and
xchg
popf
jecxz
mov
testl
sahf
inc
mov
pop
add
movsb
mov
in
mov
sti
lods
cmp
mov
inc
dec
mov
sub
push
lcall
sbb
jne
inc
xor
jge
cmp
neg
jmp
or
inc
stos
les
imul
sarb
call
test
lret
push
insb
stos
dec
push
repnz
fadds
mov
ficoms
mov
cmpsb
iret
ret
mov
jbe
and
aam
fs
aad
lcall
sub
shlb
pop
addr16
test
mov
pop
fwait
xlat
es
ret
add
ret
adc
push
dec
imul
fbld
xor
icebp
ljmp
and
test
iret
shll
pop
mov
fmuls
mov
cli
iret
outsl
rol
stc
mov
mov
mov
arpl
mov
sbb
repz
jg
mov
cmp
mov
pop
and
pop
ss
inc
sbb
mov
icebp
fnstcw
adc
sbb
or
insb
or
sub
push
jne
test
std
cmp
pop
push
xchg
xchg
xchg
or
flds
data16
bound
dec
push
aam
inc
imul
daa
aam
aaa
and
pop
mov
xchg
xchg
mov
xor
sahf
and
push
push
mov
aaa
or
fnop
fdivl
pop
mov
cwtl
xchg
xchg
dec
or
out
or
mov
ror
pushl
fadds
imul
sub
cmp
dec
repz
lret
sti
shl
test
out
dec
mov
dec
mov
jbe
and
xchg
mov
andl
push
cmp
test
test
jo
pop
sub
out
xchg
push
push
cmp
out
lcall
das
fdivl
xor
sbb
icebp
hlt
or
push
add
and
repnz
lcall
in
mov
rol
cmp
xchg
mov
repz
sbb
fwait
int
in
jecxz
cmp
push
xchg
repnz
adc
cmpsw
and
mov
popf
pop
ret
lock
shlb
icebp
fs
imul
push
mov
xchg
lods
sarl
dec
icebp
cmp
dec
rolb
data16
and
jo
xor
ret
pop
repnz
and
xor
or
add
inc
mov
dec
sub
out
add
stos
mov
sti
xchg
mov
add
cmp
jmp
popf
jecxz
mov
xchg
iret
scas
sbb
adc
and
and
popf
xchg
jns
out
shll
jg
mov
enter
xchg
sub
adc
pop
in
or
scas
xchg
scas
lcall
dec
sbb
push
dec
out
cmp
mov
dec
shlb
sbb
xchg
std
fidivrl
imul
iret
and
dec
mov
pop
inc
mov
outsb
dec
not
out
jp
dec
and
idiv
cmpsb
shl
in
xchg
inc
test
into
in
neg
iret
pop
and
lret
shll
dec
ror
pushf
cmpl
testl
nop
add
mov
jmp
inc
adc
imull
in
push
dec
cmp
scas
in
popf
insl
pop
adc
mov
jbe
mov
incl
xchg
repz
cmc
sbb
rorb
in
mov
and
mov
jbe
xorl
jecxz
pop
out
ret
push
jno
pop
mov
sub
imul
dec
inc
es
sub
sti
pop
jae
mov
mov
insl
dec
dec
cmp
sbbl
xor
adc
movsb
mov
mov
dec
in
out
leave
and
cmp
xchg
jmp
mov
or
aaa
and
dec
mov
pushf
mov
mov
repz
inc
xchg
mov
sti
mov
mov
out
or
rorb
inc
add
iret
in
fwait
pop
push
addl
jle
mov
xchg
nop
scas
addl
fwait
xchg
xchg
ja
adc
scas
repz
iret
dec
in
negl
int3
lcall
or
clc
xor
dec
out
pop
lods
and
adc
push
out
sti
fidivl
cmpsl
loopne
cltd
pop
cmp
mov
mov
imul
je
add
mov
adc
cmp
cmp
sub
sub
call
repz
or
xchg
inc
scas
sbb
sbb
shlb
jo
out
sbb
scas
pop
mov
shl
sti
sbbl
xor
xchg
adc
cmp
ss
pop
mov
sahf
stos
cmp
and
jns
nop
gs
mov
lock
jb
loop
jne,pt
icebp
out
in
jmp
and
push
shrl
and
sbb
push
xchg
sbb
mov
call
mov
aam
outsb
mov
and
call
mov
pop
inc
push
dec
jns
lret
sar
nop
movsl
cmp
ret
cwtl
pop
jno
xor
jle
mov
out
jmp
sbb
testl
and
jae
mov
mull
test
mov
jge
adc
cs
in
cmp
int
jl
cli
pop
xchg
outsl
loope
cltd
out
add
inc
iret
adcl
adc
hlt
arpl
pop
xor
mov
xchg
and
add
out
rcl
adc
enter
jae
add
adc
loopne
dec
jle
xchg
mov
xor
out
mov
cld
push
mov
push
xchg
mov
and
jno
arpl
add
loope
xor
cmpsl
pop
mov
lret
jecxz
or
pop
push
cmp
mov
les
lahf
jne
dec
lods
cmp
pop
insb
sahf
repz
cli
jbe
dec
andl
or
or
dec
shlb
xlat
sub
nop
dec
iret
enter
sbb
testl
lahf
mov
jnp
sub
push
paddq
inc
outsb
test
mov
addr16
dec
rclb
jge
les
loopne
jne
mov
and
adc
lods
fisubrs
inc
xchg
sbb
xchg
popf
mov
mov
mov
xor
add
fwait
ret
cmp
test
mov
xchg
fldcw
sbb
out
pop
std
out
sub
cmp
sub
lods
push
sbbb
cmp
jl
iret
add
jecxz
js
cld
cmp
dec
out
into
nop
imul
xchg
outsl
push
imul
jp
sahf
sbb
in
nop
notl
xor
and
add
dec
mov
pop
pop
lcall
mov
dec
sub
xor
pop
test
cmpb
inc
sbb
outsl
push
cmp
out
orl
out
inc
xchg
inc
xchg
fwait
lahf
or
inc
subl
xorb
aaa
icebp
dec
mov
sbb
mov
sub
call
xor
push
ljmp
lret
and
std
push
sbbb
fwait
mov
stos
mov
dec
or
jg
lcall
inc
xor
mov
jmp
adc
repz
sbb
push
fwait
xchg
or
add
mov
scas
repnz
test
mov
mov
mov
cmp
cs
out
lods
pop
add
adc
dec
cmp
lods
or
repz
dec
push
loop
mov
push
cmpl
loop
adc
sbb
and
jmp
xor
rorl
out
notl
sbb
negb
xchg
out
push
pop
loope
stos
std
cmp
mov
and
cmp
and
stos
test
push
push
mov
out
mov
test
fldl
push
sub
and
xchg
repz
test
add
jg
into
lds
in
cmp
pop
test
repnz
adc
out
xchg
sub
stc
xor
js,pt
and
mov
data16
lcall
add
dec
or
cmp
das
xchg
dec
cmp
jo
sub
nop
xor
inc
repz
insl
mov
sub
imul
loope
divb
daa
negl
rcll
pop
lds
pop
aaa
test
lods
aas
rolb
xchg
stos
movsl
loopne
cmp
pop
push
xchg
rep
inc
movsl
pop
scas
mov
loopne
in
xchg
lret
scas
scas
jecxz
cmp
xchg
sub
subb
mov
dec
adc
sub
lds
ss
xchg
pop
xchg
mov
fwait
push
sbb
or
addr16
adc
cmp
test
xchg
aaa
mov
repnz
ss
lock
mov
gs
or
and
xor
pop
and
cltd
sub
xor
xor
push
xchg
popl
jge
dec
mov
cmp
dec
push
and
lahf
jo
push
cmp
cmc
cs
push
cmp
cld
xchg
ljmp
mov
xchg
jg
inc
repz
mov
mov
repnz
fldenv
lods
andl
rol
repnz
aam
cltd
ror
xchg
xor
lret
out
xchg
fld
mov
cmp
xchg
xchg
dec
xchg
outsl
repnz
movsl
out
xchg
inc
mov
mov
and
dec
addb
test
xchg
repz
adcl
and
adc
cmp
push
inc
mov
adc
xchg
loop
and
out
sbb
stc
mov
adcb
es
lcall
popf
rorb
cld
ss
dec
push
dec
out
lods
mov
stos
loopne
jb
cmpsb
ss
fisubrs
test
cmp
push
es
fcompl
push
adc
xor
addb
imul
and
aaa
jbe
cmp
test
xorl
push
add
fdivrs
sti
inc
mov
js
outsl
dec
push
mov
add
jns
shr
sbb
outsb
dec
cmp
aaa
cmp
insb
loop
adc
in
lret
add
fbld
pop
push
inc
cli
into
pusha
in
in
dec
xchg
fwait
xchg
or
dec
or
push
dec
pop
out
cvtpi2ps
fwait
addr16
aad
mov
mov
clc
pop
mul
jecxz
sub
adc
jb
mov
js
popf
pop
lds
out
pop
stos
je
sub
cmpsl
sub
test
stos
mov
out
mov
mov
xchg
stos
cld
out
jo
dec
fdivl
sbb
inc
js
mov
stc
mov
in
lcall
fcmovne
lock
mov
popl
cltd
sbb
aas
mul
fwait
push
sti
jle
cmp
icebp
xor
adc
mul
ss
andb
xchg
std
mov
lret
sub
push
addr16
add
xchg
sbb
lcall
sarb
hlt
call
mov
rcll
sbb
xchg
pop
push
cltd
lock
adc
xchg
mov
push
pop
dec
mov
sbb
xorb
rorb
repz
pushf
ljmp
call
repz
inc
movsb
cmp
outsl
loope
scas
nop
xchg
xlat
in
filds
cmpsb
mov
ja
rcrb
lock
insb
jecxz
mov
stos
les
mov
sub
fcmovu
xor
daa
pop
scas
out
sti
inc
mul
and
or
cltd
icebp
jecxz
mov
push
in
in
ljmp
sarb
sub
adc
stos
pop
jecxz
pop
inc
loopne
inc
rorl
or
fiaddl
mov
int3
cmp
pop
fadds
ja
cmc
jmp
movsb
nop
in
icebp
mov
repnz
inc
and
out
rcl
mov
enter
andl
repnz
cltd
jo
mov
das
mov
jle
cld
sub
hlt
add
add
dec
mov
jns
test
enter
scas
pop
cmp
shl
cmp
js
mov
cs
xor
shlb
outsb
rcrb
test
sti
xor
xchg
dec
xor
pop
and
inc
shlb
xchg
mov
xor
dec
pop
push
ds
test
scas
and
jl
divps
dec
loop
lahf
jge
lea
dec
and
or
call
movsl
mov
or
rcrl
xchg
arpl
xchg
ret
mov
out
mov
xchg
dec
mov
dec
das
sub
shll
fwait
jb
push
hlt
jb
push
movsl
mov
sti
or
add
push
xor
xchg
jp
icebp
ss
out
cmp
mov
nop
mov
subb
or
in
inc
sub
out
jecxz
cmp
xor
xlat
adc
lahf
pop
hlt
ret
xchg
js
fimull
xchg
scas
xor
pop
inc
jle
mov
out
xchg
mov
pop
sti
scas
mov
stc
sbb
jecxz
or
push
mov
add
in
insl
jns
dec
inc
pop
out
sti
test
shrb
cmp
movsb
xchg
imul
push
sub
sbbl
pop
dec
xchg
shr
mov
leave
or
mov
mov
mov
movsb
mov
popw
inc
notl
jp
jg
mov
rorb
jle
decl
sub
mov
or
jns
sbbb
xor
xchg
rcrl
inc
lahf
dec
push
and
xchg
arpl
pop
out
lret
sti
mov
sarl
xor
push
shl
push
and
xor
push
xor
ss
push
loopne
aaa
jbe
idivb
mov
stos
in
out
sub
aaa
xchg
aam
or
sti
scas
mov
ljmp
mov
xchg
cmp
roll
das
add
cmpsb
dec
scas
cmp
pop
mov
les
jg
and
mov
scas
mov
loop
or
js
js
cwtl
mov
and
bound
and
out
nop
out
cld
in
in
pop
inc
or
repnz
push
test
cmpsl
mov
xchg
je
mov
jnp
xchg
jmp
dec
cmp
inc
xchg
xor
mov
push
dec
in
scas
mov
test
incl
xor
fst
stos
add
imul
add
cmp
and
ret
cmpl
and
xchg
cwtl
popf
sub
and
data16
pop
out
sub
out
mov
dec
imul
jo
lods
cmp
sub
imul
repz
inc
rorb
out
pop
out
adc
adc
shlb
lea
dec
mov
or
cmp
sti
jl
jae
or
je
jecxz
or
outsb
aas
test
sbb
push
mov
pop
aam
sub
push
push
mov
movl
xchg
mov
mov
add
xchg
inc
shrb
sti
fldl
ljmp
pushf
push
out
xor
and
clc
dec
pop
ljmp
cltd
lret
repnz
nop
sahf
cmpsb
cmp
add
pop
addr16
hlt
cmpsl
jmp
cs
or
cmp
mov
cmpsl
incb
xor
mov
jle
cs
sahf
lret
repz
push
ficomps
mov
lahf
ret
pop
jns
inc
roll
push
pop
sarb
mov
pop
aas
ljmp
loop
outsl
mov
dec
jp
pop
mov
jb
repnz
loope
inc
mov
pushf
popf
cltd
mov
jo
push
ljmp
out
arpl
int3
or
stos
into
lcall
repz
mov
mov
xor
ja
cmpsl
and
out
sbb
cs
fnsave
sub
incb
sub
lods
shl
outsb
out
and
xchg
jns
mov
das
dec
adc
out
jle
dec
mov
mov
ss
test
pop
fnstenv
sub
mov
cmp
inc
stos
out
sbb
dec
adcb
dec
cmp
mov
inc
xchg
je
imul
popa
repnz
seto
and
dec
lcall
lret
xchg
pop
pop
aam
fwait
std
hlt
aas
cmpsb
divb
xor
out
mov
adc
out
mov
test
and
std
sti
popf
or
jns
add
stc
xor
loope
roll
lods
mov
arpl
lcall
test
cld
stos
ficomps
js
out
push
into
lods
push
mov
cmp
sub
repz
cmp
adc
lcall
pop
or
negl
cmp
mov
mov
dec
mov
mov
in
repz
repz
pop
xchg
xor
fisttpl
popf
sti
mov
nop
pushf
aas
inc
pushf
lods
pop
shr
mov
movsb
test
roll
lods
jo
in
repz
sti
fstpt
inc
repz
sbb
leave
sub
pop
in
fnstsw
cmpsl
imul
push
mov
pop
mov
repz
xchg
pop
mov
addb
insl
sbbl
add
stc
fcoms
mov
xchg
and
lods
or
mov
lcall
add
out
fwait
jbe
xchg
adc
test
or
mov
nop
or
aam
std
push
sub
cmp
subb
xor
in
lahf
pop
pushf
pushf
pushl
adc
xchg
aaa
jbe
xchg
and
mov
fcompl
iret
lret
or
jno
jb
aas
aam
addr16
cmp
or
xchg
repz
mov
pusha
pop
sub
add
negb
dec
mov
adc
dec
movnti
out
and
mov
popf
or
and
push
js
lahf
pop
nop
add
jnp
and
add
dec
popf
or
cmp
adc
ja
jno
scas
ds
dec
sub
out
and
or
ret
fwait
outsl
mov
or
dec
adc
jmp
push
lret
pop
mov
repnz
pop
test
scas
movsb
ljmp
arpl
fstps
movsb
xchg
out
xchg
xchg
sbb
dec
das
xchg
out
or
js
xchg
mov
movsb
and
addr16
sub
dec
mov
stos
loopne
sahf
xchg
inc
insb
mov
jno
in
cmp
int
jo
out
mov
imul
mov
cmp
popf
ja
pop
dec
push
adc
push
icebp
pmulhuw
xchg
xchg
cmpb
inc
mov
cmp
leave
lcall
nop
mov
out
push
or
cmc
mov
or
sub
inc
xchg
pop
lods
ror
mov
repnz
push
mov
xchg
ja
outsb
xchg
dec
cli
dec
fbstp
jo
imull
sar
pop
xchg
ret
dec
loope
or
mov
icebp
in
lcall
ja
shrl
loope
xchg
add
mov
xchg
sub
out
out
ss
or
out
mov
pop
mov
mov
call
sbb
push
aam
bnd
pushf
scas
or
sti
add
lret
mov
ds
mov
out
repz
mov
nop
mov
push
call
sbb
xor
and
pop
out
out
dec
outsl
inc
out
xchg
mov
push
out
mov
mov
fildll
out
lock
pop
loop
jge
nop
xchg
repnz
rolb
les
jecxz
mov
lea
cmp
out
rcll
mov
cmp
pop
xchg
movsl
fldl
inc
pop
inc
mov
push
pandn
aaa
mov
or
hlt
pushf
jecxz
ljmp
out
pop
jg
sbbl
push
lods
or
in
inc
xchg
mov
or
mov
inc
leave
inc
mov
mov
scas
xchg
cmp
push
mov
xor
or
decb
cmp
bound
arpl
fldl2e
inc
pop
sbb
mov
xchg
adc
and
insl
xor
mov
cmpsl
in
cmp
stc
in
sub
sub
push
pop
lods
mov
jmp
mov
sub
mov
mov
lret
adc
cmc
dec
mov
sub
movsb
shll
adcl
push
add
mov
cmpsl
jne
add
adc
mov
lret
mov
loope
in
cmp
dec
lcall
cmp
nop
mov
mov
fs
jmp
mov
cld
adcl
or
pop
loope
stc
push
and
mov
adc
xor
out
sub
sbbl
movsb
out
adc
loope
repnz
ljmp
lods
inc
mov
nop
mov
mov
push
mov
jp
sbb
sbb
pop
aam
push
mov
jnp
sbb
xlat
cli
jnp
lahf
ret
aad
mov
and
lahf
mov
lcall
jmp
add
jecxz
cmp
fbstp
scas
jmp
pushf
out
outsb
shll
adc
in
mov
ds
or
mov
sbb
mov
fcomps
int
cmpsl
jbe
xchg
dec
movsl
push
out
push
xor
push
in
and
xor
cmp
mov
push
xor
adc
scas
xor
jp
jmp
ljmp
lock
repz
sbb
fldcw
lahf
movsl
and
add
xlat
dec
sbb
xchg
sub
stos
scas
les
mov
out
xchg
scas
idivl
jnp
add
cmpsb
dec
lret
sub
jl
cmp
push
pop
mov
and
repz
ror
fwait
mov
mov
xchg
pop
add
lret
jg
push
loope
movb
cmp
mov
and
sub
stos
jg
ret
mov
cmpsl
aam
scas
mov
iret
cmpsl
add
icebp
dec
cmpsb
pushf
lret
pop
or
outsb
sub
inc
mov
aaa
push
sub
stos
addr16
fisttpl
xchg
xor
lahf
lock
data16
ret
stos
iret
in
mov
pushf
out
pop
ret
addr16
lods
iret
rdmsr
mov
stc
inc
aam
scas
pop
mov
adc
add
cmp
sti
stc
cmpsl
aam
scas
mov
push
add
icebp
mov
xchg
lret
inc
or
outsb
adc
arpl
cmp
aaa
stos
push
push
out
and
mov
sub
stos
mov
loopne
mov
pushf
jb
cwtl
mov
imul
jg
pop
aam
scas
das
mov
dec
daa
add
aaa
cmpsb
adc
or
lret
jbe
sbb
cvtpi2ps
hlt
outsb
mov
sub
pop
mov
jae
push
iret
sbb
mov
stc
push
aam
scas
arpl
cmpxchg
cmp
outsb
lcall
retw
stos
fists
push
ret
addr16
lods
iret
or
mov
stc
inc
aam
scas
push
mov
pop
out
in
in
xor
mov
fists
cmpsl
loopne
mov
nop
loope
movb
mov
lock
sub
aas
je
daa
mov
aaa
ret
fistpl
hlt
repz
sub
cmpsl
fmul
fwait
or
test
cmp
ljmpw
mov
mov
ret
sbb
mov
stc
arpl
pop
scas
jg
lss
or
cltd
fmul
fwait
mov
aam
scas
out
xchg
mov
hlt
subl
icebp
jg
push
lret
add
inc
loope
js
outsb
pop
cmp
mov
sbb
lcall
stc
fwait
aam
scas
mov
push
add
icebp
mov
or
mov
cmp
daa
lock
data16
dec
pusha
mov
mov
out
mov
jo
clc
or
mov
fcomp
outsb
mov
jmp
mov
mov
outsl
ret
jae
push
iret
add
mov
stc
dec
aam
scas
pop
mov
sbb
mov
cmp
mov
mov
mov
nop
jb
cwtl
mov
arpl
mov
stc
das
aam
scas
cmp
daa
iret
add
icebp
rcrl
lock
sub
stos
mov
mov
ret
xchg
jb
cwtl
or
add
arpl
xor
dec
and
fs
xor
or
jmp
sub
stos
xchg
sub
xchg
ret
cld
jb
cltd
xchg
iret
inc
divb
ja
or
push
sbb
dec
icebp
das
cmpsb
js
aaa
or
loope
or
xchg
out
mov
mov
out
add
jb
cltd
cld
iret
mov
jmp
fwait
scas
pop
mov
arpl
add
cmpsb
jo
daa
or
sbb
pusha
clc
xchg
paddsb
and
repz
aam
xchg
aam
scas
fistpll
lahf
push
add
jae
push
loope
movb
cmp
dec
lock
bound
pop
stos
jg
xchg
dec
popa
mov
fbld
sub
stos
lret
loopne
dec
mov
outsl
cwtl
mov
imul
aam
scas
inc
mov
daa
lret
add
fldt
or
add
icebp
xchg
cld
mov
mov
lock
sub
pop
push
mov
mov
ret
cmp
mov
stc
jae
mov
pop
xor
mov
sub
stos
mov
mov
ret
call
iret
imul
jnp
daa
aam
scas
xor
aas
xor
adc
ret
cmpsb
add
stos
xchg
sub
lahf
ret
enter
clc
iret
mov
jmp
fwait
scas
sti
mov
jnp
add
sbb
js
aas
push
sbb
stos
cmp
ficoms
fmull
dec
add
lret
push
or
outsl
outsb
sub
pop
mov
lock
push
sub
stos
sbb
xor
sbb
sti
mov
sub
stos
mov
loopne
mov
pushf
jb
cwtl
or
or
pop
scas
cmp
cmp
add
icebp
fildll
and
repz
aam
sbbl
mov
pop
add
lret
ja
pop
loope
dec
dec
outsb
push
cmp
mov
sub
sub
testl
aam
mov
hlt
mov
add
icebp
inc
cmpsb
test
push
or
outsb
cmp
cmp
dec
push
sub
stos
addr16
fists
mov
out
addl
icebp
xchg
cmpsl
cld
lret
mov
movb
adc
outsl
data16
pop
stos
cmp
mov
iret
ret
rcrl
out
loope
xchg
jo
stos
imul
icebp
mov
xchg
lret
inc
or
outsb
push
cmp
daa
lock
pop
stos
inc
js
xor
add
rol
xchg
mov
idivb
or
lock
sarb
mov
stos
pushl
out
ja
pop
jb
cwtl
je
and
and
outsl
aam
lods
xchg
jb
cltd
fmul
xchg
ret
mov
stc
scas
scas
out
mov
mov
test
pop
lret
pop
or
das
js
outsb
pop
cmp
mov
repz
cwtl
cmp
sti
lahf
mov
stc
scas
aam
scas
mov
clc
icebp
mov
nop
lret
inc
or
jae
adc
arpl
xor
inc
stos
dec
mov
mov
out
cmp
incl
sub
cmpsl
fmul
xchg
cmp
mov
cmp
data16
sub
pop
lods
mov
mov
ret
das
cwtl
js
aas
pop
mov
stc
imul
stos
xchg
repz
sub
outsb
scas
cmp
mov
sub
rol
mov
cwtl
mov
push
stc
aaa
aam
scas
inc
mov
das
ret
add
jmp
xor
mov
out
mov
lock
cmpsl
ret
call
iret
push
push
mov
stc
adc
arpl
xor
inc
das
add
cmpsb
push
loope
pop
xchg
repz
aam
xchg
mov
stc
out
xchg
scas
idivl
ja
add
adc
jo
daa
pusha
and
cmp
mov
repz
cwtl
xor
out
mov
stc
scas
aam
scas
mov
hlt
cmpsl
dec
add
outsl
or
outsb
cmp
dec
lock
sub
stos
ja
mov
repz
stc
fwait
aam
scas
stos
mov
mov
fisttps
mov
addr16
lods
outsl
outsb
cmp
aas
lock
dec
sub
stos
addr16
mov
loope
repnz
scas
xchg
mov
rcrl
cmpsl
in
mov
xchg
loope
movb
mov
lock
data16
inc
js
aas
mov
iret
ret
fistps
out
loope
adc
iret
xchg
ret
mov
stc
rcl
scas
scas
out
mov
mov
mov
lret
pop
or
das
js
outsb
pop
cmp
mov
pop
bound
cmp
mov
stos
lret
loopne
dec
mov
arpl
mov
stc
inc
aam
scas
push
mov
pop
out
mov
cmp
mov
sub
dec
mov
outsl
or
push
scas
aaa
mov
aaa
cmp
insb
icebp
iret
cmpsb
add
lock
imul
mov
sti
testl
ror
or
loope
call
fwait
mov
lock
sub
sbb
pop
mov
adc
jo
and
mov
stc
jae
notb
jp
out
mov
pop
cltd
cmp
cmpsl
mov
cmp
mov
mov
into
out
std
repz
mov
nop
cmpsl
xchg
leave
out
mov
mov
frstor
sti
mov
cmp
fiadds
inc
hlt
in
test
or
push
jne
xchg
push
orb
scas
call
paddsb
in
sbb
jbe
ss
xchg
test
add
inc
pop
mov
lret
jecxz
push
adc
lahf
jne
and
xor
shlb
inc
jb
xchg
int
pop
xchg
inc
int
das
sbb
in
push
xor
sub
pop
jnp
mov
loop
mov
dec
pop
in
out
test
add
fstpl
fs
mov
repz
pop
imul
clc
add
mov
mov
cmp
and
add
cli
xchg
cmpsb
mov
jmp
jp
mov
push
inc
fstps
mov
or
adc
pop
add
sbb
adc
sahf
pop
cmp
dec
mov
out
jl
add
ret
mov
xchg
xlat
scas
mov
mov
iret
loope
or
lret
daa
jns
pop
mov
xor
mov
call
ret
popl
mov
pop
adc
mov
push
clc
push
push
pushf
shll
popf
add
aad
scas
push
mov
int3
enter
int
sbb
in
fsts
test
push
sbb
ret
inc
stos
jl
xchg
sahf
push
add
or
mov
scas
sub
mov
leave
cwtl
inc
dec
jae
sti
les
out
adc
test
mov
jle
out
icebp
les
adc
dec
hlt
shll
or
cli
popa
jbe
idivb
das
jo
inc
loopne
jl
loopne
dec
icebp
repz
in
xor
fdivrl
push
ret
and
add
clc
add
jo
push
inc
stc
mov
or
nop
jmp
and
jmp
and
dec
cmp
and
out
in
int
add
adc
js
scas
xchg
jmp
int
or
mov
fadds
jle
and
jmp
push
lea
xchg
xchg
lret
mov
mov
sbb
outsb
push
push
out
adc
mov
mov
dec
jb
xor
test
pop
shl
shll
icebp
add
lcall
rorl
test
fwait
mov
shrl
sub
jne
cmp
mov
mov
adc
fwait
insb
and
and
inc
nop
push
scas
sbb
mov
push
push
and
mov
sbb
bound
mov
fbstp
scas
into
jl
inc
cmp
cld
stos
cmp
mov
jnp
mov
xchg
add
add
add
sub
movsb
in
shll
xlat
dec
lahf
imulb
cld
int
cmc
pop
ret
cmp
xor
and
pushf
int
sbb
push
mov
sub
add
mov
inc
mov
xlat
insb
push
sbb
dec
adc
inc
out
ja
sub
pop
mov
inc
or
dec
mov
out
jmp
or
cmp
lods
cltd
in
mov
sbb
sbb
ficoms
adc
js
dec
out
js
dec
jge
sub
in
mov
mov
ss
aad
stos
lret
mov
arpl
push
rcll
and
out
cld
pop
daa
mov
pop
fdivs
test
mov
mov
dec
or
pushf
scas
xlat
pop
add
jmp
jge
cmp
in
pop
fcomp
repz
push
frstor
rcl
pop
dec
mov
roll
mov
and
mov
movsb
sbb
lcall
rol
fisttpl
leave
push
repnz
mov
cmp
into
cwtl
mov
out
das
in
xchg
cs
pop
sti
sub
pop
scas
push
rcll
popf
fisubs
mov
add
inc
jns
or
fwait
sbb
push
mov
mov
xchg
movsb
dec
int
ja
clc
int
mov
test
stc
mov
or
jns
mov
mov
nop
or
cmp
mov
push
lea
repnz
shlb
test
xchg
shlb
lods
dec
std
jo
sub
jo
mov
or
cmp
jecxz
cmp
stc
push
cmpl
das
shlb
outsb
notb
icebp
sarl
jnp
jmp
jmp
rcr
icebp
lret
sti
ret
or
lret
mov
shl
mov
dec
in
lods
dec
loope
lock
out
lahf
imul
test
xchg
mov
dec
stc
sbb
jmp
lcall
cmp
add
fwait
out
lret
stos
lcall
xor
inc
dec
fisttpll
pop
push
jecxz
leave
xchg
rcll
sub
fimull
clc
xchg
repz
or
in
add
pusha
hlt
jle
sub
or
fsubs
out
rclb
in
add
mov
hlt
mov
in
inc
aaa
ficoml
loopne
jmp
mov
rclb
cmp
mov
mov
mov
cmpsl
mov
cwtl
xchg
clc
xchg
adc
shrb
jbe
jns
sbb
push
js
and
sub
push
mov
sub
dec
dec
test
xchg
in
add
inc
addr16
dec
pop
adc
sbb
pop
xchg
sbb
sarb
ljmp
repnz
mov
jle
mov
cmp
in
sub
mov
or
xor
enter
mov
pop
mov
and
sti
sub
sub
rcrb
adc
mov
or
push
pop
test
dec
aas
pop
sub
ds
nop
call
in
pop
pop
lock
call
or
out
cmp
mov
cmc
or
rcl
inc
in
ja
or
je
sbb
mov
mov
lret
mov
adc
xor
push
lcall
stos
sarb
jb
or
dec
inc
mov
xchg
push
xchg
mov
pop
mov
pop
loope
xor
loopne
leave
mov
jecxz
movsb
xchg
in
pusha
aas
lret
cmp
in
cmp
mov
shlb
rolb
mov
cltd
test
dec
jmp
mov
jne
mov
push
pop
xchg
cmpsb
and
mov
aas
cli
xchg
xchg
mov
xchg
lds
inc
mov
mov
xlat
inc
sti
sahf
repz
lock
sahf
add
loope
cmp
out
xor
scas
and
jmp
mov
int
test
xlat
add
fs
or
mov
ljmp
in
rol
ja
test
mov
dec
rcrl
jp
lahf
adcl
out
ljmp
xchg
iret
mov
jge
mov
mov
ficompl
loop
lcall
aad
fucomip
mov
push
adc
mov
mov
stc
mov
pop
add
add
xchg
rorl
mov
ljmp
loop
jnp
test
push
rolb
jle
sub
mulb
lds
sub
add
out
popf
test
enter
sub
add
cwtl
clc
or
push
subl
scas
ret
xor
dec
js
or
xor
mov
divl
mul
call
or
xor
test
adc
test
mov
push
sahf
or
mov
xor
fistps
dec
lds
stc
or
js
cmc
into
shlb
inc
lock
sbb
sub
stos
mov
cmp
sarl
out
mov
pop
xor
mov
dec
lods
mov
cmc
mov
int3
out
cmp
lcall
out
sar
rorl
test
fists
mov
fisttpll
xchg
or
inc
scas
xchg
fwait
dec
lcall
jbe
or
call
and
sysenter
jb
xchg
sti
decb
xchg
mov
dec
cmpsl
xchg
sbb
xchg
xor
lcall
xchg
push
in
call
mov
xlat
mov
add
pop
mov
insb
shlb
ret
fidivrs
xchg
sti
stos
das
ds
fnsave
fs
inc
mov
add
push
dec
pop
cmpsb
or
mov
test
adc
pop
leave
dec
icebp
lahf
lahf
cmpsb
or
push
shlb
fnstenv
aam
cli
pop
xchg
sub
add
pop
pop
cmp
outsb
psraw
stos
mov
mov
mov
push
insb
or
cmp
or
popf
and
add
adc
pop
xor
int3
push
test
rorl
cltd
mov
in
out
dec
jno
mov
les
addr16
faddl
inc
inc
add
dec
xchg
arpl
cs
xorl
ds
adc
cmpsb
fucom
mov
cmp
or
loope
inc
sbb
xor
sub
or
sub
mov
xorb
jge
ds
inc
nop
insl
or
call
pop
sbb
ljmp
mov
mov
aas
or
and
iret
das
add
fwait
push
mov
sbb
mov
fdiv
pop
das
cmpsl
pop
adc
mov
aaa
fwait
mov
sbb
mov
sti
pop
dec
jp
loop
arpl
add
adc
jp
xor
repnz
jae
clc
sub
push
add
lret
roll
js
loope
movl
mov
inc
inc
movsl
xlat
xlat
cmp
shlb
shlb
push
incb
push
fldt
xor
fildl
add
aaa
mov
scas
into
test
mov
scas
push
addb
ljmp
inc
stc
shll
jnp
fwait
mov
dec
xchg
add
int3
xchg
push
in
xor
xchg
dec
jno
rolb
and
fwait
cwtl
and
repz
lret
repnz
inc
cmp
jae
lcall
jns
mov
lcall
ds
xlat
in
stos
je
test
jmp
rolb
ljmp
and
jmp
add
add
call
sbb
mov
jecxz
add
mov
push
jg
mov
xor
loope,pn
popf
add
test
repz
lret
fwait
xchg
jp
xor
inc
push
test
push
jb
outsl
cli
sbb
xor
pop
push
jge
inc
xlat
leave
xor
imull
pop
iret
push
in
pop
hlt
insl
movsb
sub
out
xor
dec
or
sbb
jae
jnp
adc
mov
pop
inc
xchg
mov
add
dec
push
out
jge
xlat
ja
outsl
shl
push
or
outsb
adc
imull
add
xchg
push
test
sub
add
shl
cmp
mov
dec
mov
add
or
and
mov
mov
fwait
xchg
pop
insl
gs
mov
adcl
xchg
popf
mov
movsl
ret
cs
jb
cs
sahf
sub
adc
imulb
mov
sbb
push
mov
addr16
jecxz
push
mov
cld
mov
sub
in
dec
push
and
adc
xchg
mov
inc
cmc
test
xor
mov
lods
mov
push
add
jbe
test
jb
or
lods
data16
xchg
mov
out
mov
push
repnz
xchg
aas
addr16
mov
shlb
shl
lock
pop
shlb
enter
jns
sbb
imul
mov
mov
cwtl
out
stc
ljmp
push
testl
movsl
pop
jge
ljmp
push
movsl
adc
cmp
xor
shl
pop
pop
adc
cmp
jns
cmpsl
hlt
adc
fistps
xchg
pop
cwtl
xor
xorl
out
jo
jb,pn
rclb
xor
int
stos
loope
pusha
lds
mov
jecxz
out
jae
cmp
and
jecxz
test
xor
lcall
aam
rcrl
cmpsl
aam
iret
mov
shl
jmp
out
xor
xchg
push
int3
dec
mov
movsb
lret
ja
lds
inc
or
test
repz
pop
aam
stos
fwait
cmp
push
and
and
into
hlt
ror
mov
adc
fnsave
mov
sub
andl
jecxz
fnstenv
xchg
aad
xchg
push
out
ret
out
cwtl
push
add
cmpsb
lods
rcrl
cmpsb
stc
xchg
fiadds
mov
jl
sub
or
mov
ret
out
add
inc
pop
sbb
inc
jl
cmp
fbstp
test
add
mov
arpl
outsb
dec
stos
mov
aad
inc
mov
inc
jne
ja
fcmove
rcll
mov
fadds
clc
in
cs
jmp
inc
pop
mov
sub
repz
dec
dec
repz
cli
xchg
inc
sub
aam
les
cmp
xlat
xchg
std
leave
adc
adc
lahf
lds
lea
lods
shll
loope
std
cmp
test
fsubr
in
lcall
cmp
push
fs
xchg
cmpl
dec
mov
lcall
fcomps
xchg
in
mov
cmc
cmpsb
incl
fimuls
mov
movsl
ffreep
filds
mov
call
add
in
mov
ja
and
out
mov
pop
push
in
out
gs
cmp
fdivr
xchg
push
idivb
aaa
jae
icebp
sub
lret
xchg
ljmp
loop
cmp
aas
loope
pop
sarl
xchg
repnz
cmp
in
into
and
xchg
nop
ss
xchg
fisttps
cmc
and
fwait
push
mov
mov
lret
iret
movsb
jne
fbld
ret
gs
movl
dec
mov
xchg
fildll
test
pop
aaa
xchg
cltd
lcall
xlat
cli
jecxz
sahf
sub
nop
push
fnop
popf
arpl
jne
jecxz
xchg
cmp
jg
add
mov
stos
iret
fs
iret
cmp
movsl
xchg
lcall
xlat
loope
dec
adc
icebp
js
lods
inc
xchg
iret
in
xchg
adc
outsb
or
fldenv
pushf
sbb
pop
push
mov
cmpsl
fisubl
jle
mov
xor
hlt
pushf
xchg
xchg
cmpsb
ficoml
jns
sub
dec
out
in
imull
cmp
pop
mov
subb
shl
andl
mov
and
sahf
scas
test
test
int
push
lock
mov
popa
pop
mov
sbb
nop
rcl
pop
cmpsl
cmp
mov
push
or
push
pushf
shrb
mov
xor
stos
popf
je
or
dec
mov
negb
addr16
add
aas
mov
pop
shl
iret
cmp
dec
mov
std
cmp
ret
cwtl
cmpsb
pop
fwait
fs
int
iret
pop
pop
push
cmc
or
mov
push
add
mov
lret
lcall
pop
popa
pop
and
sbb
sbb
mov
jge
imul
push
iret
scas
out
pop
ss
scas
xchg
mov
sub
dec
xlat
ds
aad
or
inc
jnp
mov
jge
add
dec
lock
jmp
mul
test
xchg
mov
aam
mov
sub
out
mov
test
fwait
call
lret
cmp
dec
iret
jle
inc
mov
cmp
mov
lret
pop
repz
xchg
xor
loopne
mov
loope
sub
sub
hlt
or
scas
xor
fcoms
in
rcr
sub
xchg
scas
cmc
in
dec
ficoms
das
mov
repnz
push
mov
push
jbe
movsb
sbb
lods
jmp
mov
jmp
lret
stc
xlat
js
movsb
int
data16
das
test
lea
mov
xchg
mov
mov
outsl
rcrb
idivb
cld
push
sub
mov
jmp
jnp
cld
mov
mov
pop
dec
xchg
or
adc
mov
out
fwait
mov
lret
in
mov
dec
mov
out
iret
add
sub
les
inc
sub
mov
rcl
or
cltd
je
jne
fsubl
inc
ror
xchg
mov
fisubl
pop
mov
fsubrl
test
xorb
test
loopne
in
adc
ret
adc
mov
in
shrb
mov
ljmp
jl
mov
or
aaa
scas
sub
mov
loopne
mov
in
into
mov
pop
or
mov
rcr
push
xor
xor
aas
xchg
notl
lcall
notb
push
or
jns
insb
loop
bound
mov
shrb
sbb
nop
ret
push
mov
sarl
andl
shll
inc
ficompl
cmp
cmp
pop
xor
xchg
inc
sahf
test
frstor
pushf
js
int3
mov
mov
lcall
ljmp
lcall
rcr
jmp
xor
js
mov
jmp
mov
rorl
orb
or
xchg
sub
mov
xor
test
cmpsl
or
loopne
or
mov
jns
into
cmpsb
call
sahf
jecxz
mov
mov
or
jbe
cld
mov
test
cmp
or
push
lret
inc
inc
icebp
adc
xor
add
addr16
cmpsl
mov
push
clc
test
mov
movsl
or
out
leave
xchg
or
and
push
cmp
or
push
mov
ret
xor
dec
shlb
mov
xor
mov
or
or
pushl
xchg
jecxz
out
cmp
mov
nop
add
sub
adc
sub
jecxz
jl
mov
adc
inc
push
cmp
or
push
mov
aas
xor
jp
leave
sar
cmp
xor
adc
fptan
test
xchg
inc
cmp
mov
push
mov
in
int3
mov
add
in
leave
popl
inc
jns
cli
in
xor
cmpsl
or
std
iret
std
pop
in
or
cs
andl
sti
sbb
xchg
fdivrs
or
outsb
jns
stos
cmp
push
xchg
ret
incb
sbbl
loopne
add
sbb
and
cld
into
lods
xlat
push
push
in
dec
fistps
jbe
xor
cwtl
xchg
mov
ret
jnp
in
adc
stc
mov
pushf
jg
leave
mov
rcll
and
mov
mov
mov
xor
inc
rcrl
fidivl
and
mov
xchg
and
ss
xchg
fidivl
pop
hlt
scas
sahf
pop
and
dec
sbb
outsb
ljmp
loop
and
int3
icebp
inc
iret
mov
scas
fildll
fwait
or
pop
or
popa
pop
or
cmp
data16
push
xor
xor
cmpsb
cltd
int3
mov
add
cli
dec
int3
shll
mov
mov
mov
notl
and
adcb
jb
sbb
xlat
movsl
xchg
jo
push
enter
mov
das
lea
dec
cmp
aam
fisubrs
jae
jg
mov
mov
mov
das
lcall
mov
mov
out
idivb
xlat
test
or
pop
addb
xchg
lcall
push
leave
adc
mov
idivl
loop
scas
cmp
std
cmc
ret
fldenv
out
mov
movsb
leave
loop
jb
hlt
das
scas
mov
test
in
mov
rol
neg
add
test
push
cmpsl
or
das
sti
cmpsb
or
insb
ficoms
mov
out
out
ret
push
add
scas
mov
mov
cltd
leave
loop
jb
hlt
cmp
jbe
xchg
sub
fisubs
and
dec
repnz
and
fisubs
loopne
lds
or
movsb
pop
mov
cmc
mov
jo
flds
lret
mov
adc
ret
or
mov
jmp
xchg
jecxz
inc
sub
test
and
xchg
fmuls
cmpb
pop
mov
loope
fsts
jo
iret
mov
popf
not
jns
jbe
mov
scas
repz
mov
sar
mov
and
and
jmp
xchg
cmp
jnp
mov
mov
dec
shll
fildll
push
xchg
popf
inc
rol
fisubrl
in
loope
adc
rcrl
pushf
push
je
lret
xchg
test
bswap
inc
dec
fmuls
cmp
clc
mov
scas
aas
push
mov
jecxz
addr16
pop
adc
dec
mov
ret
dec
mov
repz
es
fwait
jmp
push
into
xchg
lods
ljmp
mov
jo
rol
loope
out
movsl
mov
mov
test
mov
sub
test
mov
lock
fistps
stc
mov
scas
into
mov
inc
sarb
mov
xchg
or
add
mov
mov
mov
mov
into
fisttpl
push
mov
add
lds
in
dec
and
xor
aam
lret
xchg
inc
test
mov
sbb
and
mov
daa
cmp
dec
sbb
jg
fsubrs
fs
and
in
mov
rorb
bound
movsl
sbb
xorl
mov
bound
int
ljmp
jnp
iret
mov
loop
mov
je
xor
test
mov
mov
call
pop
mov
bound
scas
shll
imul
inc
pop
imul
aad
dec
pop
mov
xor
outsl
inc
iret
sbb
neg
mov
mov
inc
pop
ret
or
mov
sub
outsb
lods
push
cwtl
clc
aad
cld
xor
xchg
sbb
iret
pop
insl
rcrb
enter
mov
jno
mov
fcoms
dec
outsb
xchg
sub
out
pop
sbb
push
leave
mov
outsb
daa
xor
mov
cmp
test
jne
shlb
aad
sti
or
imul
push
add
push
push
add
cmp
jae
xchg
pusha
iret
jns
mov
out
ljmp
mov
mov
mov
mov
push
or
add
lods
sbb
lahf
outsb
mov
sub
clc
add
repz
mov
out
dec
pop
imul
in
mov
shll
xchg
mov
std
sbb
aam
inc
mov
xchg
lret
std
repnz
insb
xchg
fwait
xor
mov
outsl
lods
inc
jne
pop
data16
icebp
dec
sbb
fnstenv
sbb
sbb
mov
addb
fstps
test
nop
daa
adc
jp
cmpb
jg
mov
out
sub
nop
jnp
shrb
mov
in
mov
repz
xlat
lahf
hlt
lret
clc
mov
shlb
or
fucom
sub
cmpsl
add
sbb
sub
mov
repnz
cltd
into
out
xchg
or
jnp
das
into
pop
jecxz
xchg
rorl
scas
les
in
ret
call
add
lods
movq
cmp
xor
sub
sbb
cmp
xor
inc
jecxz
fbstp
imul
add
int
sbb
imul
call
fcmovnu
dec
cmc
dec
and
sti
lret
pop
rorb
adc
pop
or
cltd
xchg
jmp
mov
mov
mov
mov
and
xchg
sbb
out
lcall
sti
pushf
xor
and
popf
jg
cwtl
ds
cmp
pop
cmp
add
cmpsl
mov
repz
stc
cwtl
fnstenv
pop
shl
add
daa
iret
fildll
out
jo
cltd
daa
scas
in
push
cltd
pop
or
ret
push
adc
es
jb
imul
stos
jmp
mov
mov
pusha
and
cs
and
xchg
cld
and
loop
dec
aaa
push
mull
jne
scas
sbb
imull
push
inc
out
sti
or
cmp
mov
sbb
and
xchg
cmpsl
popa
jecxz
clc
ja
mov
les
xchg
enter
cmp
xchg
shrl
call
mov
ret
icebp
std
jae
cld
movsl
rcr
repz
mov
mov
lods
xlat
shr
jmp
mov
enter
add
push
inc
shr
rep
pop
add
in
push
jle
and
out
bound
and
cli
lret
jae
test
dec
cmp
mov
fcoml
sbb
inc
fstpl
mov
loop
test
push
mov
jmp
mov
and
adcl
andb
mov
hlt
leave
daa
cmpsl
iret
adc
icebp
mov
mull
cmp
or
je
and
cmp
pop
lret
lods
lret
xchg
sub
les
lret
mov
xor
jge
mov
dec
adc
jo
fcmovnbe
ret
mov
and
out
out
sub
aad
jbe
out
fisubs
lahf
sar
and
sub
test
jmp
pop
xchg
push
insb
pop
mov
popa
mov
xchg
cli
fistpl
mov
outsb
jae
mov
test
or
push
test
int3
xchg
lret
cld
js
mov
ret
sbb
push
mov
mov
lds
movsl
mov
or
xchg
rol
or
in
or
outsb
mov
xchg
mov
mov
mov
mov
sub
dec
jge
scas
xchg
leave
lret
mov
pop
rcl
stos
sbb
ljmp
mov
add
loope
cmpsl
out
mov
xchg
lods
out
daa
inc
mov
and
sbb
sub
icebp
pop
das
scas
jp
mov
cwtl
stos
je
ret
shll
scas
ret
out
pop
mov
int3
loopne
mov
das
out
js
dec
xchg
pop
sbb
and
stc
mov
and
and
mov
inc
and
shr
arpl
movsl
adc
jb
xor
mov
mov
das
lret
mov
adc
mov
adc
in
mov
jno
xor
rcrl
and
dec
cwtl
cltd
out
sbbl
lret
iret
mov
lahf
xchg
xor
lret
sahf
lahf
and
mov
inc
xchg
iret
inc
pop
mov
xchg
sti
fld
jg
mov
xor
loopne
or
pop
mulb
adc
lock
pushf
aam
add
mov
mov
cmpsl
push
mov
aam
mov
sahf
inc
decl
adcb
lods
leave
ds
mov
jns
jge
je
test
and
xchg
sub
push
loop
inc
js
mov
sti
data16
cmp
adc
lcall
clc
or
push
cmp
test
outsb
inc
sub
aaa
lcall
jmp
scas
xor
and
fs
mov
xchg
dec
xchg
lcall
pop
add
int
clc
lcall
mov
insl
xchg
fcomip
addr16
push
xor
loope
cmpsl
rclb
test
push
icebp
iret
mov
pop
mov
stos
das
push
je
inc
sub
push
cli
lcall
add
sub
aas
leave
sbbb
add
loopne
leave
push
dec
out
aad
sti
das
push
push
mov
sbb
sub
test
inc
lret
fstpt
adc
aaa
stc
pop
enter
test
arpl
inc
jb
push
or
out
mov
iret
je
mov
mov
push
sbb
mov
in
lahf
xor
mov
cmp
outsb
sub
loope
js
or
repz
jecxz
xadd
pop
pop
xor
jmp
jl
or
out
fwait
outsb
mov
xor
jmp
lods
lret
pop
or
mov
sbb
mov
jl
jo
mov
cmp
jo
jge
out
test
add
icebp
jecxz,pn
das
cmpsb
add
fstl
mov
movsl
xor
fsave
mov
enter
jne
cmpsb
out
lcall
fs
les
mov
rorb
mov
call
dec
loop
mov
sti
subb
icebp
mull
test
fstpl
ret
hlt
call
jle
sbb
mov
andl
dec
popf
xchg
sub
add
les
sbb
iret
add
sbb
test
negb
jg
iret
fwait
cmp
fdivl
xchg
shlb
leave
sbb
and
sbb
sub
cmpsb
in
lahf
inc
jge
jb
inc
fisubs
ljmp
jmp
xor
push
andl
cmpsl
aam
pop
repz
frstor
and
stc
and
aaa
xchg
in
lret
mov
cmp
adc
push
frstor
cwtl
pop
cmp
stos
insb
repnz
push
iret
outsl
dec
inc
neg
adc
mov
push
cwtl
in
test
imul
movsb
hlt
test
popa
arpl
mov
imul
or
in
dec
cmp
add
cmp
adc
scas
fldl
cltd
in
push
xchg
ljmp
enter
leave
scas
dec
ret
popa
nop
xor
push
fmull
rclb
mov
fsubr
and
imull
jbe
lock
and
xor
push
add
aam
pop
aam
jg
or
sbb
rol
out
cld
mov
pop
jl
js
test
lret
stc
mov
mov
pop
add
mov
out
repz
add
sahf
mov
jns
xchg
mov
fnstcw
mov
test
pop
inc
stos
sbb
jnp
mov
stc
sti
sti
push
lret
xchg
fwait
mov
in
in
cmp
mov
xlat
stos
es
ficoml
jl
adc
pop
lret
scas
sub
xchg
xchg
fnstenv
pop
mov
inc
movsb
dec
xchg
fyl2x
out
test
adc
jge
xor
shrl
lods
push
cwtl
sbb
pusha
xchg
inc
sub
ret
adc
mov
fwait
rcrl
inc
mov
xchg
outsb
inc
fimuls
ret
divb
in
mov
aaa
xchg
mov
addb
jnp
jns
out
jne
inc
clc
jmp
popa
dec
cmp
bound
fisttpl
xchg
xor
fistps
dec
hlt
dec
mov
pop
leave
mov
rolb
mov
enter
jg
scas
jae
mov
sbb
cmp
rorl
icebp
mov
repz
cmp
jnp
repnz
shll
cmpsl
inc
sti
pop
fnstcw
enter
mov
mov
pop
sbbl
inc
lds
js
sbbb
ret
mov
stos
rolb
scas
psraw
stos
negl
popf
rol
shl
or
loope
pop
jmp
mov
inc
ljmp
or
or
loopew
mov
and
jae
repz
scas
int3
xor
fs
cld
scas
xchg
imul
push
cmpsb
jge
and
int3
je
cld
out
cmp
inc
push
scas
or
cmp
ret
das
mov
mov
rclb
lods
test
lea
cld
icebp
test
imul
stc
push
fmull
xorb
loopne
add
stos
jae
sub
lahf
js
pusha
outsb
mov
inc
leave
rorb
cwtl
mov
int3
mov
jne
mov
and
mov
adc
pcmpeqd
cmp
cmp
push
xchg
rcrb
mov
stos
mov
fdivrl
mov
loope
cmc
lcall
mov
cmp
je
xchg
enter
jl
mov
adc
jbe
nop
mov
icebp
push
aam
test
lods
sbb
lds
in
pop
fstps
roll
ret
mov
dec
popa
mov
cmc
adc
xchg
mov
cmpb
test
inc
shl
inc
cli
sub
inc
stos
loop
aam
adc
push
sbb
sub
jl
outsb
mov
mov
pop
test
test
fbstp
testb
icebp
fnstenv
stos
push
fcomp
imul
xor
lods
lret
xor
orb
nop
xchg
enter
sub
test
and
mov
outsl
dec
in
lret
mov
cmc
vcvtps2dq
fisttps
jg
outsl
xchg
movsl
repz
ja
xorl
stos
adc
dec
mov
and
sbb
cltd
pop
jmp
and
pop
in
pop
mov
sbb
jb
mov
jle
leave
add
in
pop
jae
stos
mov
pop
roll
loop
dec
mov
mov
mov
rcll
mov
lock
xor
test
dec
test
bound
jb
pop
in
movsl
shlb
and
or
fdiv
jmp
in
insb
sbb
lea
lcall
iret
sub
in
lret
inc
jae,pn
pop
pusha
mov
into
lods
add
sub
inc
in
ficomps
repz
jb
push
xchg
outsb
mov
sub
popa
scas
adc
ficoml
negl
loopne
lods
rcll
xor
jno
jl
lret
mov
cmp
out
imul
mov
je
fisubrl
std
mov
stc
jecxz
test
xchg
push
sahf
movsl
xchg
fildll
sti
xor
cmp
roll
mov
mov
loope
sub
xchg
fildl
cltd
dec
xchg
test
shlb
inc
das
cmpsl
ljmp
lock
add
xlat
rorb
and
stos
adc
mov
cmp
enter
pusha
mull
sahf
dec
fadd
clc
jo
loope
imul
aaa
loope
mov
or
scas
arpl
cmp
and
sub
sub
inc
out
sbb
cwtl
dec
iret
adc
inc
aam
scas
inc
mov
xor
cmp
xor
outsb
and
cmp
mov
sub
sub
stos
insl
sbb
ffree
add
cwtl
or
in
cli
cmp
sti
cmpsl
sub
lahf
enter
cmp
ljmpw
mov
arpl
push
jb
cwtl
inc
iret
pop
inc
mov
stc
pop
aam
scas
imul
outsl
mov
out
mov
sub
stos
iret
in
mov
cwtl
out
pop
ret
outsl
cwtl
mov
push
stc
aaa
aam
scas
dec
mov
das
ret
add
shll
dec
sbb
loope
in
outsb
out
stos
mov
lock
sub
pop
push
mov
mov
pop
ret
aas
cwtl
push
pop
cld
ja
or
or
mov
outsb
cmp
ljmpw
mov
mov
ret
pop
cwtl
dec
iret
and
and
arpl
adc
xorl
out
and
outsb
mov
lock
data16
sub
inc
mov
outsl
cwtl
movsb
iret
ja
mov
stc
aas
aam
scas
dec
mov
pop
roll
xor
push
notl
push
jge
mov
jbe
mov
js
sub
inc
repz
hlt
cltd
stos
cwtl
stos
fistps
movsl
sub
sti
push
sub
fmull
lret
jbe
xchg
xor
test
xchg
and
cmp
lea
jnp
std
std
mov
dec
rcll
inc
pop
jae
dec
outsb
sbb
fucomp
adcb
mov
aaa
xor
in
sbb
fwait
sbb
cwtl
gs
mov
and
add
shl
add
push
pop
dec
in
hlt
pop
in
or
mov
mov
mov
mov
add
and
int3
movsb
lret
arpl
mov
mov
sub
jmp
or
and
pushf
out
aad
sarb
mov
jmp
lods
outsl
loope
push
mov
fidivl
testl
sbbb
jp
lret
push
fcoms
rclb
mov
not
enter
lcall
mov
xchg
sub
fidivs
xor
mov
icebp
xchg
cmpsl
hlt
lret
mov
xchg
xchg
outsb
idivb
orl
sub
pop
scas
mov
stos
out
or
push
jb
cwtl
push
iret
add
push
stc
sub
pop
scas
xor
hlt
inc
pop
add
sub
jb
and
js
outsb
pop
cmp
mov
sub
sub
stos
jae
hlt
jmp
mov
icebp
sti
add
icebp
repz
mov
hlt
and
sbb
iret
xorl
int
enter
lock
ret
mov
shlb
dec
cwtl
cwtl
iret
pop
mov
stc
paddq
pop
mov
push
pop
add
das
cmpsb
js
cmp
xor
push
push
push
add
xor
out
rcr
add
and
pop
sbb
xchg
sub
add
mov
rcrl
ret
fstpt
mov
out
fptan
jbe
adc
ror
test
adcl
pop
mov
es
mov
sbb
cli
or
jp
add
mov
imul
or
sti
sti
cmp
inc
mov
sub
pop
lcall
xchg
lret
sub
push
lahf
jb
push
outsl
lods
sub
mov
sub
add
repz
in
aam
mov
pop
and
test
sbb
jae
fcoml
xor
stc
push
testl
xchg
xchg
lods
bsf
js
xchg
pusha
mov
icebp
nop
xchg
and
mov
rclb
or
insb
aas
or
scas
adc
lods
jno
std
es
insb
sahf
xlat
mov
sbb
push
jb
nop
cmpsl
andl
inc
stos
cmp
shrb
push
imul
xchg
mov
call
mov
or
inc
inc
jle
push
inc
jb
inc
dec
subb
add
les
adc
mov
add
lret
mov
aad
add
xchg
shl
lock
mull
adcb
mov
cmp
iret
notb
into
cmp
dec
call
mov
imul
jb
cwtl
movsb
iret
jmp
jge
mov
or
in
mov
mov
dec
sbb
cmp
stos
mov
sbb
dec
mov
inc
xchg
dec
mov
sbb
test
jo
xchg
ja
xor
jae
mov
popf
jp
cmpsb
lret
mov
daa
push
ret
add
fdivrp
pusha
inc
das
inc
lcall
cmp
inc
sub
push
jecxz
mov
aad
ret
cmpsb
movsb
mov
cmpsb
lcall
lret
pop
pop
mov
fmul
sub
bound
fsubs
cwtl
sarl
data16
out
lea
test
in
pop
out
enter
popa
or
outsl
hlt
ret
clc
fcompl
sahf
jl
pop
mov
sbb
rolb
cmp
dec
aad
xor
xlat
jnp
data16
push
mov
inc
jle
and
xchg
fists
test
xor
mov
jno
inc
and
hlt
jg
xor
mov
sahf
add
icebp
inc
xor
aam
negb
lret
cmp
ja
lods
movsl
imul
jns
mov
jmp
cli
jecxz
fwait
pushf
push
fstpl
inc
adc
xor
cld
ja
les
xorb
out
push
jle
inc
and
lods
cmpsl
iret
mov
push
mov
push
add
aam
cmp
push
ljmp
inc
mov
jmp
and
xor
mov
add
out
xchg
daa
or
lods
mov
out
int
jnp
jecxz
fildll
or
loop
es
insb
mov
scas
xchg
test
mov
andb
out
loop
or
movsl
xchg
adc
jmp
add
xchg
push
mov
cmpsl
cmp
xor
roll
push
jecxz
cmp
gs
movsb
jmp
aam
dec
pop
jl
xchg
rcrb
mov
sarl
pop
push
pop
inc
mov
sub
adc
or
ret
test
push
and
sti
mov
stos
xchg
lcall
mov
add
bound
out
cltd
add
cmc
les
pop
pause
dec
sbb
test
pop
xor
add
stos
fcomi
mov
xlat
xchg
cmpsl
jb
js
push
cmp
push
mov
mov
pop
lods
loop
js
jno
or
fdivl
sbbl
dec
das
jecxz
pushl
jns,pn
stos
pop
aas
xlat
int
call
lock
pop
in
in
dec
outsl
mov
insb
or
xor
cmp
leave
pop
xor
xchg
jb
and
fldenv
movsb
fidivrl
pop
stos
rcrl
testb
repnz
lahf
jg
jb
and
xorl
test
inc
cmp
and
scas
mov
movsb
xchg
addr16
xor
mov
fidivs
repz
call
fs
ret
imul
sub
fcompl
outsl
stos
sbb
jmp
lods
insl
mov
or
popa
sbb
mov
stos
and
mov
cmpl
adc
adc
pop
cmp
cs
insb
sti
shlb
fiadds
out
fidivrl
and
int
adc
mov
out
jne
pop
xchg
sub
mov
imul
inc
dec
mov
fisubrl
rcr
pop
jb
dec
cmc
push
mov
rcll
xchg
mov
mov
idiv
adc
lret
fistps
outsl
pop
aaa
cmp
fwait
lret
sub
scas
adc
in
data16
xor
jmp
fcomp
shlb
xchg
mov
popf
xor
sahf
sub
movsb
iret
xchg
repz
and
jle
insl
inc
movsb
sub
popf
xchg
mov
movsl
mov
add
mov
sahf
popf
icebp
divb
push
xchg
outsl
dec
rorb
jecxz
dec
mov
aad
push
movsb
cmp
sbb
ds
daa
outsb
push
mov
movsl
cmc
gs
sahf
mov
into
mov
dec
rorb
xchg
leave
and
mov
int3
and
and
lock
sub
mov
hlt
pop
imul
xchg
lret
and
cmc
in
adcb
jnp
dec
pop
push
test
or
pop
jo
jle
icebp
mov
dec
and
lods
adc
sub
lret
push
jmp
lret
icebp
sub
lcall
cmp
repnz
fildl
test
pop
bound
mov
or
dec
mov
test
arpl
cmp
push
mov
mov
cmpsb
or
mov
cmc
add
lods
mov
out
lcall
fcoms
push
pop
out
lahf
ret
stc
xchg
clc
sbb
xchg
dec
loopne
cmc
mov
mov
pop
adc
adc
jg
ljmp
test
scas
popl
mov
popa
sbb
cmpsb
xchg
mov
inc
rol
addr16
xor
mov
std
push
mov
call
lds
jbe
cmp
dec
pop
sbb
shll
xor
jb
lods
or
add
icebp
lahf
cmpsl
hlt
lret
cmpsl
or
loope
mov
outsb
and
pop
mov
lock
push
sub
stos
ja
loopne
aam
scas
cmpsl
mov
scas
pop
popa
mov
sub
pop
push
shll
adc
add
mov
cmpl
dec
inc
lods
jne
out
mov
in
stos
mov
jae
inc
pop
shrl
push
or
xor
ljmp
insl
cld
pop
mov
aad
stos
mov
mov
loop
add
neg
cmpsl
scas
je
sub
aaa
mov
cmpsl
stos
iret
cmc
cmp
mov
hlt
rorb
dec
arpl
loop
scas
inc
into
test
pop
add
stos
mov
repnz
xor
iret
lods
sahf
sbb
repz
push
data16
inc
ficoml
cs
push
dec
into
not
inc
dec
jp
mov
lahf
and
dec
out
jne
fldt
hlt
negb
mov
fcoml
jns
or
push
test
mov
mov
je
sbb
ja
sub
pop
daa
int3
enter
insb
mov
sbb
or
adc
mov
cld
pop
cmpsb
or
mov
push
mov
mov
pop
pusha
pushf
pop
test
aad
jecxz
ret
test
or
data16
or
mov
add
inc
and
pop
loopne
jl
xchg
iret
lret
fwait
mov
xchg
out
out
adc
or
sbb
cltd
stos
jecxz
mov
push
out
sbb
gs
jmp
movsb
xchg
xchg
inc
clc
jne
jl
push
and
and
cmp
inc
jbe
jle
int
enter
test
movsb
out
sub
les
ss
adcl
mov
cltd
cmpsb
adc
icebp
in
xchg
lods
dec
xchg
repz
pop
pushf
test
mov
scas
xchg
les
cs
and
shll
fincstp
cltd
mov
cwtl
adc
test
fcomps
scas
pop
clc
pop
lret
sub
cltd
mov
pop
mov
push
sahf
sbb
and
loop
scas
test
sub
and
lret
pop
dec
mov
lcall
jg
sti
movsb
lods
pop
xlat
andl
jecxz
test
bound
fisubs
in
hlt
div
leave
fdiv
das
aas
shll
pop
mov
cmp
sub
mov
mov
sub
xor
xor
pop
int
lahf
dec
sub
aas
test
or
pop
fcoml
or
jle
test
out
js
movb
idiv
lret
push
lods
std
loope
in
repnz
and
inc
add
iret
les
pop
sbb
gs
mov
popf
mov
sbbl
ss
stos
mov
mov
leave
imul
ret
addb
xchg
dec
in
fldl
mov
out
not
inc
cmp
idivl
aad
lahf
pop
mov
xchg
mov
dec
popf
daa
mov
inc
cld
ret
rcl
xchg
jp
push
test
ret
add
push
or
mov
test
or
add
add
and
stos
pop
dec
push
add
mov
push
nop
mov
inc
or
ret
pop
push
icebp
out
repz
lret
dec
add
movsb
jecxz
out
or
ja
aam
xor
cmpsb
mov
mov
mov
push
add
jl
add
pop
jg
adcb
mov
cmp
cld
addl
sti
mov
cwtl
clc
jb
scas
stos
arpl
arpl
mov
in
test
cmp
jp
movsb
sub
ret
mov
push
fildll
jns
or
adc
out
outsl
outsl
cmp
ljmp
mov
fstpl
out
repnz
jo
jae
mov
divl
ret
jecxz
fcmovb
orb
mov
mov
add
xlat
rorb
js,pn
add
mov
lock
out
jo
mov
sub
push
js
add
arpl
xchg
imul
mov
imul
js
aaa
ss
mov
xchg
xor
add
sub
pop
or
jnp
and
stos
outsb
jmp
mov
test
cmp
lret
bound
and
or
outsl
lret
jne
xor
sar
data16
sub
sbb
or
fcoml
cltd
lods
or
aas
pop
push
mov
mov
jg
xorl
xchg
sub
test
ss
mov
out
jecxz
xor
out
jmp
cmp
std
mov
loopne
out
mov
arpl
les
ljmp
pop
mov
mov
jp
enter
and
rcll
lds
xchg
out
lahf
repnz
add
roll
into
xor
mov
lock
cwtl
shll
addr16
push
xchg
das
and
pop
pop
sbb
notl
scas
test
testl
ja
cmp
cmp
repnz
mov
lock
jo
hlt
cltd
dec
iret
clc
xor
cmc
scas
and
mov
and
cmp
cmc
or
outsb
cmp
mov
lock
sub
stos
out
mov
ret
cmp
cltd
and
stos
xchg
mov
stc
xchg
aam
scas
cltd
mov
xlat
mov
sar
idivb
test
xchg
add
xlat
sbb
movsl
imul
rep
add
add
mov
call
sub
pop
and
and
pop
shrl
dec
enter
fstpl
test
mov
out
int3
or
sub
into
fcmovnu
pop
cld
mov
enter
outsb
subb
pushf
cmc
jb
or
fcmovne
repnz
mov
rcl
scas
xchg
sub
rcrb
out
aam
cmpsl
mov
fistpll
fidivl
lret
sbb
clc
je
xchg
xchg
cmp
push
and
adc
pop
xchg
xchg
repz
xor
stc
jmp
cltd
scas
fstpt
add
add
add
imul
mov
pop
test
leave
enter
add
rcll
mov
mov
mov
in
mov
lret
rolb
movsb
or
mov
filds
xchg
jmp
cs
nop
or
xchg
sub
pop
out
adc
in
xchg
and
xchg
pop
inc
dec
pop
push
xchg
int
xor
jp
lods
xor
jae
xchg
emms
mov
mov
pop
sahf
divl
push
mov
rorl
cmpsb
fcmovnbe
and
add
loopne
cmp
rolb
adc
xchg
xchg
mov
jae
or
in
mov
outsl
xor
fsubp
xor
test
or
add
idivl
loope
cmp
mov
push
sub
sbb
loopne
xor
aas
xlat
mov
int
lret
pushf
sub
stos
mov
cld
cmc
cmp
mov
fld
repnz
divl
loope
xor
fcomps
out
loop
and
rorl
loope
ret
loopne
out
fsubr
out
add
test
pusha
mov
dec
lods
loopne
or
mov
sti
cwtl
les
mov
out
mov
mov
andl
filds
push
jecxz
xor
xor
repz
ret
pop
push
mov
xchg
fcomip
das
cli
test
mov
mov
shll
ret
fdivr
adc
fdivrl
aam
bound
push
mov
inc
shlb
dec
xchg
jns
mov
out
pop
add
fisubrs
ret
repnz
jle
lds
xor
ljmp
mov
mov
mov
stos
or
mov
popa
mov
stos
mov
insb
lret
adc
inc
pop
nop
cmp
or
add
jbe
inc
repnz
lods
sub
sub
jnp
icebp
rcll
stos
xchg
imul
sti
dec
out
fimull
dec
movsl
sub
loopne
out
std
in
arpl
mov
inc
sbb
mov
xor
mov
mov
xor
shlb
dec
stc
arpl
enter
addr16
daa
jmp
cld
xchg
pop
enter
sub
add
add
push
lcall
and
dec
aam
or
cmp
cmpsl
cmpl
xor
cmp
fwait
xchg
setnp
in
pop
ret
and
ret
xchg
je
out
test
pop
popa
outsl
mov
push
mov
mov
jl
mov
mov
push
mov
sti
xor
fwait
jmp
call
pop
aaa
pop
sbb
pop
dec
dec
pop
cli
aas
xor
xchg
adc
or
outsl
bnd
sub
mov
push
xor
lods
lret
in
pop
xchg
lods
das
cli
xorl
divl
xchg
jae
adc
mov
inc
inc
mov
out
out
cmpsb
sub
ret
pop
in
out
ret
jnp
out
iret
insb
cltd
add
mov
pop
sbb
pop
mov
mov
outsl
adc
hlt
jae
daa
jo
cs
xorl
and
pusha
in
cmpsb
fmuls
ja
xchg
jns
sahf
fwait
and
out
mov
imull
movb
hlt
pop
hlt
sub
add
das
cmpsb
dec
lret
pop
or
pop
imul
arpl
push
sub
lfs
dec
test
mov
data16
sub
stos
stos
aam
testl
xchg
add
pop
jmp
in
fistpl
popa
shufps
add
jmp
aaa
sbb
ret
sub
lret
xchg
sbb
mov
repz
arpl
mov
inc
adc
cmp
clc
gs
vpmovqd
cmp
xlat
fwait
sbb
ljmp
dec
cmp
shlb
stc
cli
rolb
xchg
jge
data16
lea
jbe
sub
xlat
jb
arpl
mov
cmp
add
pushf
addb
sahf
dec
aaa
push
adc
js
lret
inc
push
or
inc
pop
mov
xor
cld
or
mov
jl
mov
hlt
jmp
mov
imul
inc
add
rorb
mov
xchg
aaa
sub
ds
add
daa
div
iret
xchg
cmp
sahf
cli
mov
pop
inc
lock
mov
ret
fcomps
clc
add
repz
dec
aad
mov
xor
cmp
outsb
arpl
mov
cmpsb
outsb
jno
add
cmpsl
sbb
mov
or
push
in
cld
dec
jo
sub
outsb
js
mov
fisttpl
xor
jp
sbb
push
xchg
ljmp
and
push
mov
push
push
inc
xlat
dec
xchg
xor
xor
pop
js
mov
pop
dec
or
push
stos
inc
sub
inc
pushf
add
int3
inc
test
cmp
cmp
xchg
dec
jmp
out
jl
add
aam
shrb
sub
jg
fs
jns
cli
fcomps
jg
sti
mov
xchg
pop
jnp
notl
popf
pop
xor
xchg
loopne
pop
dec
sbb
lock
mov
xlat
mov
xchg
xor
add
cmp
or
sub
in
rcll
lret
ds
add
js
mov
test
hlt
mov
data16
push
jo
cli
push
out
rcl
dec
push
xchg
lcall
jl
or
cmp
insb
mov
shll
clc
push
bound
add
push
test
xlat
mov
aad
test
out
repnz
xchg
jae
mov
mov
cmp
mov
xor
pop
repnz
test
repz
fbld
mov
inc
xor
jp
in
arpl
adc
mov
dec
std
in
fmuls
add
ss
mov
xor
xorl
loopne
sbb
out
mov
sbbb
dec
data16
mov
dec
cltd
dec
fcmovnu
and
enter
int3
jbe
cmp
sub
fwait
cltd
push
repz
lods
int3
cld
dec
mov
pop
dec
fldenv
inc
cmp
add
jno
add
mov
push
adc
mov
sbb
jp
inc
aam
or
sarb
hlt
sub
add
jns
sbb
test
movsl
pop
incb
lcall
imul
imul
ja
loop
sub
jns
mov
lcall
lock
jae
or
sub
stc
jbe
add
push
into
push
add
or
add
add
mov
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
movb
sub
mov
popa
jmp
sub
mov
sub
gs
movsb
pushf
jne
arpl
cwtl
dec
es
leave
in
js
pop
das
pop
mov
xchg
enter
jmp
mov
sbb
xchg
data16
and
jmp
mov
sbb
cwtl
dec
es
enter
mov
mov
cld
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
or
cld
and
add
adc
not
shr
jmp
push
gs
cmp
pushf
inc
jo
cs
js
and
mov
and
push
mov
out
and
sbb
cwtl
mov
test
pop
dec
js
inc
cli
in
add
insl
imul
pop
sbb
add
jmp
mov
and
pusha
call
in
daa
add
xor
inc
test
add
cmpl
or
call
in
cmp
and
and
push
or
inc
call
lcall
dec
mov
dec
aad
jmp
call
add
pusha
out
pop
sub
mov
movl
inc
mov
cmpl
and
xchg
cmpl
call
inc
jmp
fsubl
call
inc
or
add
pop
mov
pop
or
test
or
rol
mov
inc
mov
cmpl
lea
fdivs
or
pop
mov
js
rcrb
jbe
or
dec
inc
inc
shll
mov
shl
mov
inc
dec
jmp
inc
lods
xchg
inc
cmpb
inc
idivl
jge
xor
jg
clc
sbb
adc
cltd
push
hlt
push
adc
gs
add
pop
clc
shl
add
sub
xor
fisttpl
cltd
jb
xchg
cmp
cmpsl
jmp
dec
and
decb
or
jmp
ret
or
adc
or
inc
ja
and
inc
add
push
in
hlt
cmpl
jb
data16
jbe
in
stos
enter
rorb
cld
adc
cmp
mov
adc
movsb
aaa
add
cmova
cli
cmp
mov
sub
mov
test
sbb
push
jo
jle
mov
jmp
or
jns
pop
sbb
push
adc
add
mov
and
mov
lret
xor
push
cmpb
pop
jbe
cmovl
add
clc
cmp
inc
ret
push
jne
cs
adc
push
dec
in
in
nop
push
inc
push
test
add
fstl
adc
mov
and
push
cmpsb
int3
ljmp
xorl
xor
push
test
xor
mov
pushf
xor
into
inc
in
mov
jle
inc
inc
aas
inc
test
les
add
adc
stos
pop
test
adc
aam
subb
mov
adc
and
inc
mov
add
pop
and
nop
mov
mov
sbb
dec
pop
add
dec
push
fstpl
xor
xor
mov
mov
pop
sub
and
inc
sbb
push
popa
pop
enter
inc
adc
jb
ficoml
or
inc
popa
addb
xchg
pop
enter
inc
sbb
sarb
xchg
and
clc
insb
leave
adc
or
loopne
add
fsubrl
lds
dec
cmp
pop
or
adc
cmp
dec
push
sbb
ljmp
and
fistpll
push
ret
jb
call
outsl
mov
add
pop
adc
jmp
incl
cwtl
pop
inc
adc
jp
add
adc
pusha
addl
enter
xor
mov
pop
add
jns
xor
push
orl
sarb
sbb
mov
adc
sub
add
repnz
pop
mov
fiadds
aad
lret
push
push
mov
stc
adcb
lock
ljmp
bound
add
jns
jmp
or
pop
stos
or
dec
xor
cmpsb
and
add
dec
xchg
add
mov
cld
lea
sub
fadd
cmp
and
shrb
mov
out
sbb
push
inc
cltd
jle
add
xchg
pop
jl
pop
pop
pop
sbb
andl
xor
xor
sub
hlt
cld
pusha
and
test
popa
add
sar
or
dec
test
and
xor
push
lods
lock
aad
push
add
xor
in
push
add
rcrb
sbb
cli
pusha
dec
test
mov
push
imull
scas
inc
jg
lods
je
and
mov
inc
outsl
div
mov
addl
sub
out
jle
jge
sbb
std
jg
daa
fnsave
mov
ftst
ret
orl
or
sahf
mov
xlat
repnz
cs
je
iret
call
orl
mov
inc
push
dec
js
add
lahf
adc
jo
stos
jno
add
pusha
into
aam
xor
leave
xchg
mov
sub
lret
and
pusha
push
push
cmp
enter
movsb
les
out
cmpsl
xor
sar
cmp
add
aam
movsb
xchg
sbb
lods
lret
mov
jle
dec
repnz
sarl
insb
ljmp
jnp
sti
scas
mov
push
add
xor
push
aas
fsubrl
inc
and
in
outsl
add
jb
jg
mov
add
cmp
xchg
cli
fdivp
sub
pusha
sbb
mov
int
adc
and
and
mov
mov
nop
pushf
or
sub
addl
stos
hlt
and
sub
movsb
int3
and
ja
decb
daa
push
xor
adc
push
xchg
cmp
pop
mov
popf
mov
lock
enter
rolb
xchg
and
cmp
sub
or
cli
sbb
inc
dec
add
xchg
pusha
addl
ja
int3
pop
bound
dec
mov
xor
out
ja
add
inc
clc
sti
je
sbbl
mov
loope
pop
sahf
add
mov
cmp
adc
ja
mov
call
and
dec
sbb
insb
mul
and
clc
arpl
xor
insl
add
mov
dec
pop
push
ja
adc
js
pop
test
jl
xor
jns
mov
orb
or
cmp
je
mov
mov
adc
stc
cltd
and
adc
push
movsl
add
or
mov
mov
seta
mov
icebp
mov
mov
jo
push
lods
bound
outsb
pop
pop
fbstp
lahf
adc
outsl
addb
cmp
mov
and
nop
in
test
adc
pushf
push
bound
push
adc
inc
arpl
and
or
and
cltd
add
or
add
add
call
cld
dec
insl
insb
test
sahf
jo
mov
les
mov
nop
adcb
cmp
sbb
mov
pop
add
bound
cwtl
mov
or
xor
rclb
pop
mov
popa
hlt
lds
pushf
and
xchg
push
jb
pusha
mov
mov
enter
icebp
mov
inc
cmpsb
xor
popa
jge
push
js
int3
call
jns
mov
cmpsl
mov
jno
sbb
js
out
cmpb
push
xor
or
das
ljmp
jl
mov
pop
adc
push
mov
cmpb
mov
mov
and
enter
in
sub
pop
int
mov
mov
and
jecxz
sbb
je
andl
ja
mov
and
mov
fdivs
jl
or
sub
ljmpw
nop
lds
hlt
lcall
and
jne
add
dec
stos
inc
aad
cmpsl
test
mov
bound
es
xor
xchg
jmp
adc
das
add
xchg
jg
pop
fwait
inc
js
int
pop
or
sbb
ficoms
loopne
test
xor
arpl
nop
scas
add
in
mov
mov
sub
enter
mov
sbb
sub
sub
add
clc
daa
pusha
aaa
sbb
shrb
xchg
shll
and
orl
dec
mov
sbb
fdivr
ds
and
mov
sbb
shlb
xor
sub
sub
add
ret
pushf
arpl
pop
pop
hlt
popf
dec
push
sub
sub
aas
cmp
out
inc
sbb
jbe
jl
jg
add
cmc
sub
in
dec
xor
or
add
dec
adc
adc
add
sub
push
enter
dec
dec
jg
xchg
nop
and
jo
dec
rcrl
cld
add
adc
dec
daa
rorb
jnp
je
add
ljmp
or
jb
xor
xchg
pop
imul
jge
add
xor
add
cmpb
bound
push
push
cwtl
rorl
pushf
adc
push
shll
jns
subl
mov
push
in
jnp
xor
mov
pop
nop
movsb
and
pop
cltd
push
cmp
fmull
add
lods
pop
jl
mov
mov
or
push
mov
cmp
sbb
loop
andl
mov
jp
and
cmp
mov
lret
adc
scas
mov
dec
add
cld
cmp
hlt
mov
xchg
mov
sbb
dec
dec
sub
and
mov
xchg
ja
and
sti
subl
add
leave
popa
jno
dec
sub
and
outsl
leave
pop
add
or
jno
cmp
xor
rcrl
xor
cmpsl
or
cwtl
ret
add
mov
das
rcrl
dec
sub
jo
adc
inc
mov
lcall
test
sti
cmc
xor
mov
xchg
nop
loope
sbb
pushf
test
mov
in
sub
sub
and
jne
cmp
add
scas
add
dec
mov
sbb
movsl
adc
adc
aam
loop
or
sar
add
test
clc
pop
shl
enter
dec
pop
insb
add
iret
rcrb
add
cmp
out
pushf
add
sahf
leave
add
xchg
popf
push
inc
pusha
pop
push
call
mov
sbb
loope
xor
call
pop
push
fisttpll
fs
pop
or
jbe
xchg
and
mov
or
adc
jl
and
cmp
dec
in
aad
clc
pop
js
xor
movsl
adc
xor
outsl
sbb
lds
push
pop
stc
inc
mov
std
fidivrl
popa
mov
inc
cwtl
sub
xlat
and
add
ljmp
jl
inc
dec
and
outsl
mov
inc
lock
push
shll
insb
les
jle
ret
dec
inc
subl
aam
mov
pop
pop
pop
push
stos
sbb
push
ret
add
xor
fcmovnb
jo
xlat
mov
mov
shl
pusha
mov
lret
push
testb
pop
inc
in
jg
popf
sub
push
movsl
add
out
xor
jnp
mov
pushf
mov
inc
fnstsw
mov
rcr
mov
mov
and
lret
movl
ffree
fmull
adc
aad
or
movl
in
inc
mov
adc
movsb
or
daa
sar
push
mov
jl
pop
hlt
inc
inc
rcr
dec
clc
sbb
xchg
push
inc
mov
int3
mov
pop
inc
add
loop
inc
add
adc
das
gs
imul
xor
jnp
dec
aaa
jae
xor
adc
or
sbb
xor
mov
pop
cmp
mov
shll
fs
test
mov
and
gs
xchg
cmp
and
cmp
xor
loope
out
popa
test
and
pop
jne
loop
lods
jno
add
sub
mov
lds
jo
test
aas
fcoml
push
data16
mov
jne
inc
gs
xor
pop
dec
pushf
mov
and
adc
cmp
loopne
hlt
subl
and
int3
ret
or
inc
pop
shrl
push
add
mov
cmp
add
mov
les
sbb
aad
add
lcall
and
mov
filds
mov
pop
pop
add
sbb
jne
icebp
pop
shr
add
scas
push
aad
sbb
sbb
cmp
imul
std
adcl
addr16
out
mov
aad
test
and
or
fcomps
or
fucomi
pop
rorb
mov
or
push
sbb
inc
sub
insl
xchg
fisttpll
shrb
adc
xor
or
movsb
push
insb
add
adc
fnstenv
pop
mov
into
mov
pop
rolb
enter
push
sbb
loopne
jp
add
pop
int
flds
pop
andb
add
clc
pusha
nop
push
xchg
mov
push
loopne
or
mov
add
add
icebp
jge
and
shrb
je
mov
xchg
add
mov
mov
out
adcl
and
sbb
or
pop
int3
add
adc
je
ret
push
movaps
ret
pop
aad
or
test
jle
and
les
adc
aad
pop
in
ds
inc
test
adc
sbbb
jge
lods
sbb
call
adcb
pop
add
orl
pop
bound
cmc
xchg
lahf
sub
sbb
adc
and
sbb
in
pop
push
fwait
pop
filds
lock
mov
add
xlat
jl
adc
leave
stos
cmp
xchg
adc
mov
inc
sub
mov
add
rorb
jns
mov
cmpsb
cmp
movsl
xor
subl
mov
pop
clc
loopne
or
inc
mov
add
xor
inc
sbb
mov
push
and
bound
xor
sub
ljmp
dec
and
fchs
push
loopne
mov
inc
inc
mov
pop
sbb
pop
cmpsb
sub
xor
mov
ds
mov
jg
inc
adcl
adc
in
inc
inc
add
xchg
sbb
sbb
stos
or
dec
xchg
pushf
jg
add
lods
arpl
lea
mov
in
gs
inc
loopne
mov
leave
jecxz
clc
je
xor
clc
fimull
push
or
cwtl
push
jmp
push
fcom
add
dec
mov
jns
adc
add
inc
adc
adc
inc
aas
ficomps
pop
dec
push
pop
mov
add
mov
jns
sbb
jnp
dec
shrl
ficompl
push
or
cmp
sbb
leave
sub
push
loop
test
xchg
pop
mov
call
mov
pop
adc
adc
lea
mov
sub
adc
addr16
add
lret
pop
pushf
dec
add
fsubs
dec
or
mov
call
sbb
das
inc
test
shr
fwait
cmp
xchg
and
pop
xor
mov
das
jecxz
mov
xchg
loope
mov
mov
inc
rolb
cld
movsl
rcrl
add
push
cvttps2pi
sub
std
dec
adc
sbb
sbb
stos
les
inc
xchg
pop
loop
insb
les
xchg
lock
sbb
mov
aas
out
inc
leave
pop
nop
imul
add
sbb
mov
ljmp
les
fimull
add
xchg
jg
pusha
lahf
and
push
and
nop
xor
mov
int3
in
lea
push
lock
push
and
sub
cmp
cmp
xchg
add
ss
sub
loopne
mov
xor
popa
loop
in
imul
inc
fildll
push
ja
leave
dec
add
cmp
jne
inc
push
or
out
inc
cwtl
inc
shrl
lds
jp
xlat
mov
and
je
cld
or
mov
mov
les
fsub
cli
adc
or
jmp
add
or
and
dec
sbbl
or
mov
add
push
adc
cltd
xor
lds
pop
and
add
add
insw
lods
cmp
mov
push
shlb
push
push
rolb
add
pop
xchg
arpl
and
mov
mov
shll
add
jo
sbb
popa
out
pop
je
dec
mov
movl
jnp
jg
loop
jle
pop
cmp
iret
sub
add
hlt
lea
or
xor
mov
xchg
sbb
sub
sbb
xor
ret
cmpsl
sub
cmp
and
jecxz
add
fldl
mov
mov
xor
pop
dec
rolb
push
pop
addl
jnp
add
ja
fsubrp
inc
pavgb
stc
and
mov
aas
mov
ficoml
add
js
stos
aad
fs
jo
pop
fnclex
mov
mov
cmp
and
dec
sbb
dec
hlt
sbb
or
bound
call
adc
outsl
xor
fiaddl
lcall
or
and
mov
push
inc
pusha
rcr
lret
cmpb
push
mov
div
and
xor
pushf
mov
inc
inc
inc
adc
xor
mov
loope
cmp
or
or
push
call
push
adc
pop
cmpsb
xor
inc
inc
xor
jle
adc
js
mov
jmp
cmp
in
aam
sbbb
cmp
pop
sti
inc
inc
cmp
aas
sarb
call
push
cmpsb
mov
xor
lods
xchg
cmpb
xor
sub
push
and
and
mov
cmp
nop
cld
mov
nop
push
mov
es
lds
push
cmp
pusha
in
and
arpl
mov
cwtl
adc
in
sub
fidivl
inc
mulb
test
mov
sub
mulb
fsts
shr
add
push
cld
inc
adc
jcxz
mov
push
test
xor
popl
ret
and
xor
dec
xchg
nop
jo
mov
add
out
xorl
sub
push
js
cwtl
faddl
xchg
xor
insb
aaa
mov
adc
int3
insl
dec
fcmovnbe
nop
in
sub
test
enter
fmuls
xchg
add
lds
xor
pushf
dec
mov
adc
fcoms
rcrl
mov
xchg
jg
pusha
inc
xchg
jg
cmpsl
mov
jg
mov
or
ja
add
pop
mov
and
into
adc
add
or
or
pop
rcl
fisubrs
push
arpl
pop
mov
pop
sub
sbb
adc
or
enter
pop
aad
mov
call
jnp
sub
or
adc
and
lock
jo
daa
jp
jbe
xorl
sub
shl
pop
sub
jbe
or
inc
or
fdiv
shlb
ds
adc
sub
mov
mov
pusha
ret
sbb
cmpb
cmp
xor
out
and
shlb
shll
or
pusha
insb
sahf
sbb
add
or
sbb
xor
xor
adc
cmp
add
jnp
xchg
rclb
loopne
cmp
mov
popl
daa
fisttpl
mov
cltd
dec
push
dec
xchg
rolb
fwait
iret
pushf
in
stos
inc
xchg
add
sti
outsb
push
lret
mov
adcb
nop
shlb
add
pop
push
mov
rclb
psrad
pusha
adc
cmpsl
fsubl
test
imul
inc
pusha
or
lret
movsb
add
lock
sub
jl
dec
fdivs
shlb
or
mov
adc
in
stos
or
pop
jno
sbb
add
sbb
test
mov
nop
test
js
push
pop
lea
arpl
adc
add
movsb
sub
mov
add
inc
mov
pop
imul
clc
push
or
cwtl
and
ret
aam
add
out
push
lret
cmp
fstps
inc
mov
xor
loop
mov
insl
std
cltd
jmp
popf
dec
add
dec
loope
mov
shl
sub
aad
out
pause
or
push
int
xor
inc
push
imul
lret
das
pushf
and
add
scas
mov
mov
lahf
pop
lods
add
and
or
and
loop
nop
popf
xchg
cmp
add
cwtl
lods
add
jp
ficomps
mov
sub
pushf
sub
xchg
add
icebp
cmp
inc
and
xor
push
xlat
sub
adcb
test
jae
repz
in
jb
add
xchg
inc
adc
add
push
jo
or
push
sbb
push
sbb
or
xchg
and
arpl
and
add
pusha
out
mov
or
lds
orb
pop
sbb
adc
inc
sbb
fimull
test
sub
shrl
add
mov
xor
mov
sub
bound
cs
push
cwtl
adc
addr16
aam
add
addl
sbb
push
dec
mov
nop
add
adc
pop
pop
insb
inc
enter
test
push
push
xor
dec
in
mov
mov
fldl
pusha
sub
cmpsb
cmpb
jb
data16
add
xor
cmp
nop
sarb
pop
add
mov
lock
adc
and
mov
pop
data16
xor
das
rorb
movsb
je
jl
inc
and
or
pop
sbb
cmp
std
adc
add
mov
inc
pusha
inc
sub
sbb
das
andl
mov
cmp
shrb
cld
and
pop
adc
jg
sub
jnp
inc
cmp
cmp
pop
push
and
push
sub
inc
dec
push
push
pop
subb
or
dec
and
mov
xor
push
sarl
push
sbb
rcrb
cmp
in
xor
test
rorl
mov
or
inc
enter
ret
lock
jl
loopne
add
mov
dec
mov
mov
inc
mov
je
js
adc
pusha
iret
lods
nop
push
sbb
dec
fnstsw
lea
lret
cmp
movsb
hlt
add
xchg
adc
cmpsl
cwtl
xchg
mov
pusha
mov
xor
xchg
mov
and
fcoms
outsl
xchg
ss
jp
adc
jno
add
cmp
push
and
mov
nop
or
int
add
insb
fcomp
mov
cwtl
ficompl
data16
xor
es
dec
cmp
cld
enter
cli
jnp
popa
ret
mov
fs
adc
mov
mov
in
xor
mov
loop
jb
add
pop
leave
pop
add
std
add
fmul
mov
jnp
or
cli
xor
fcoml
icebp
int3
adc
jns
incb
push
pusha
pop
mov
int
jno
js
xchg
lret
sbb
test
cmp
add
jns
xor
into
jne
push
lds
or
leave
mov
shrb
fisttpl
adc
jne
icebp
addb
cmc
pop
mov
xor
or
pop
std
xchg
fstp
leave
add
mov
outsb
lcall
inc
push
add
adc
xor
data16
enter
xchg
mov
rcrb
mov
cmp
adc
add
xchg
cld
shlb
mov
outsb
es
lds
jne
insb
add
pop
dec
dec
xor
imul
loopne
cmp
xor
les
iret
push
mulb
call
mov
jne
pop
pop
fsubrl
pusha
shlb
das
mov
arpl
sbb
and
hlt
add
repz
addr16
xchg
addb
cmpb
push
cmp
inc
push
dec
pusha
mov
pop
mov
clc
loop
xor
enter
lea
sbb
mov
test
and
cmp
or
adc
or
pop
sbb
push
fdivrl
jecxz
sub
std
cmp
and
mov
or
movsl
loope
mov
and
sub
sbb
sub
and
push
sbb
les
loope
mov
test
dec
lret
out
add
inc
push
repnz
data16
popl
jecxz
lds
xor
aas
cmp
add
ffree
je
pop
push
js
and
test
sbb
and
cld
nop
adc
jecxz
sbbl
nop
in
push
data16
fmull
or
dec
or
nop
jg
imul
xchg
test
shl
das
sbbb
xor
imul
xchg
cmp
inc
adc
inc
aam
or
in
fdivl
push
pop
loope
cwtl
jne
cmp
gs
sub
movsb
xorb
addr16
loope
jnp
imul
das
inc
int
cwtl
mov
loope
sbb
ret
mov
leave
and
fs
daa
imul
and
inc
pop
mov
scas
sahf
in
pop
testb
inc
add
repnz
adc
inc
cmp
pusha
sub
in
adc
out
push
sub
xor
push
testl
add
jg
jl
and
dec
ror
call
mov
mov
mov
cwtl
sbb
movsb
fsubrl
adc
mov
or
mov
loop
xchg
xchg
xchg
mov
sub
add
dec
jns
add
cmp
xor
rorb
pop
aam
push
int3
push
dec
movsb
out
add
shlb
pop
or
mov
sbb
adc
mov
or
push
sub
aas
loopne
hlt
je
das
add
jnp
pop
ja
pushf
pop
leave
and
nop
outsb
push
aas
jbe
cltd
cmp
int
int3
inc
dec
test
out
sbb
add
pop
or
in
enter
pop
mov
pop
xchg
fisubl
mov
gs
outsb
pop
sub
lret
mov
rclb
jl
adc
mov
popa
pop
or
test
and
loopne
fstl
mov
jge
daa
xchg
ret
add
jp
ror
nop
enter
xchg
mov
fdivrl
jecxz
mov
sub
pop
sbb
test
or
add
divb
rorb
popa
dec
xchg
cmpb
nop
mov
mov
pop
adc
cmp
roll
push
pop
lahf
pop
aam
or
mov
cmpsb
add
gs
sub
dec
dec
ret
xor
dec
adc
add
and
insb
sbb
mov
mov
jo
mov
jne
out
pop
add
inc
sub
sbb
sbb
pushf
add
mov
shlb
int3
cli
sub
push
jl
adc
mov
dec
into
adcb
sbb
add
sub
loop
in
inc
dec
sub
pusha
dec
lods
and
cli
inc
sbb
xor
cmp
enter
movsb
xor
push
inc
rorb
push
mov
psadbw
sbb
dec
loope
addb
or
inc
xchg
add
cld
xor
push
movsb
mov
arpl
dec
pop
fwait
daa
adc
adc
pop
int
sub
cmp
pop
test
cmp
inc
add
push
cmp
cmp
add
faddl
and
xchg
jl
jo
fs
pop
dec
in
or
sbb
lods
clc
inc
lret
fs
inc
mov
inc
dec
and
cmpsb
sbb
data16
push
push
shrl
int3
xchg
test
and
les
add
sbb
and
or
jne
loopne
insb
push
pop
add
or
mov
sbb
xchg
arpl
and
pop
adc
aam
leave
test
loopne
pusha
and
sbb
cmp
xchg
mov
out
in
adc
or
data16
xchg
push
es
fsubl
mov
add
inc
cmp
xor
xor
movsb
xor
outsb
push
ds
and
mov
jmp
cmp
lret
and
aaa
test
cmp
cs
std
xchg
mov
pusha
loopne
aas
add
fidivrl
call
mov
xchg
jo
pop
sbb
inc
fs
and
mov
in
inc
dec
add
dec
test
mov
inc
cmpsl
sbb
pop
cwtl
andb
inc
inc
jl
add
cmp
adc
cmp
pushf
pop
mov
inc
add
xor
and
sbb
cwtl
insl
and
cmp
adc
cmpl
sub
add
jno
and
cmp
iret
scas
add
test
jo
sub
push
pop
and
sub
lea
je,pn
mov
ret
and
enter
imul
push
jl
arpl
shrl
sbb
add
outsl
dec
inc
xchg
jecxz
bound
outsb
xchg
lds
repz
es
adc
cmp
xor
add
fdivrl
inc
cmp
loop
movsb
pop
cmp
push
cmp
shrl
out
and
sub
fistps
mov
fs
jae
xor
out
iret
add
sti
jne
hlt
and
push
mov
mov
or
ret
xor
pop
adc
cltd
push
adc
mov
inc
and
test
aaa
test
fs
mov
sub
pop
in
add
ffree
inc
pusha
add
cmp
sti
jne
adc
push
add
fsub
data16
and
cmp
rclb
sub
stos
add
push
or
mov
fcoms
incb
inc
in
leave
rcll
pop
stc
sub
dec
in
sbb
in
fdivl
dec
clc
lock
sub
sbb
ret
add
jecxz
sbb
jne
xchg
testl
pop
das
shlb
push
cmp
mov
in
cmp
rcr
add
jbe
or
adc
mov
and
cwtd
fidivrl
xchg
pop
mov
fs
data16
adc
mov
cmp
lock
mov
push
mov
pop
mov
jno
shrb
cmp
add
lret
cmp
lock
pop
mov
stos
in
mov
add
lretw
in
and
jp
loop
popf
mov
jo
push
fwait
jp
add
mov
movsb
rorb
adcb
faddl
inc
and
cltd
enter
pop
dec
inc
mov
lret
xor
jbe
loop
sbb
mov
lret
mov
pusha
daa
pop
adc
addb
daa
cmp
add
ret
xor
mov
lea
cmp
xchg
adc
divps
fdivl
mov
sbb
imul
rolb
out
lea
and
mov
mov
mov
imul
cmp
add
adc
aam
enter
outsb
jnp
nop
lock
inc
aaa
fmull
mov
or
add
mov
pop
gs
dec
jmp
in
and
mov
fcoms
push
xor
repz
adcl
mov
and
and
xchg
movq
and
incl
jbe
in
push
xor
cmp
push
fcmovne
xlat
lahf
sub
mov
fs
mov
aas
sbb
hlt
xor
jmp
decl
shl
orb
xor
xlat
mov
pop
outsb
pusha
add
cmp
mov
and
xchg
les
leave
jne
push
sbb
jnp
or
and
fs
lcall
sti
cld
jg
addl
je
and
call
push
mov
je
push
sbb
in
mov
jl
adc
sbb
sub
or
sbb
mov
lock
aas
cmp
cmp
lahf
sub
sbb
push
sbb
fdivrs
mov
lods
sub
add
fs
call
sbb
shll
lock
jg
add
pusha
add
les
sbb
pop
or
or
pop
xor
xor
jmp
xor
mov
sbb
out
dec
pushf
test
pop
bound
roll
adc
nop
insb
cs
cmp
cmp
jo
sbb
inc
push
dec
les
lods
ret
jbe
fstpl
jbe
xchg
mov
jmp
dec
sbb
pop
lds
roll
fisubs
js
insb
adcb
mov
jecxz
inc
fnstenv
sbb
cwtl
in
data16
js
inc
fmull
mov
lock
cmp
aas
cmp
lds
dec
inc
nop
in
mov
add
and
decl
add
and
mov
cmp
or
inc
dec
cmp
xor
and
jae
mov
movsb
enter
loop
pop
fsubrl
fs
push
push
cld
enter
lods
loop
nop
outsl
xor
xor
pop
jg
enter
cwtl
leave
xchg
rcrb
or
mov
lds
aad
jl
pop
add
fs
dec
mov
adc
nop
test
jecxz
adc
mov
lock
movsb
sbb
mov
loopne
les
adcb
dec
pusha
ret
inc
xchg
mov
mov
mov
xchg
dec
lods
add
mov
mov
andb
int3
popf
out
ss
insb
dec
push
or
mov
cmp
test
jb
push
cmp
repnz
jmp
and
mov
popa
xor
incl
mov
pop
inc
sbb
insl
sbb
push
inc
faddl
or
lret
loopne
jb
or
dec
jo
push
call
dec
nop
fwait
cmp
out
add
loop
enter
push
or
cwtl
pop
jne
dec
outsb
inc
sub
push
test
xor
aaa
sub
add
pop
rorl
sub
pop
daa
mov
pusha
mov
verw
inc
pushf
popf
filds
push
jle
or
es
pusha
dec
enter
add
stos
mov
sub
fcmovbe
clc
repz
in
ja
pop
sub
jno
ror
loope
addb
leavew
gs
push
lret
in
jo
and
push
sbb
add
jb
push
movsb
pushf
inc
push
test
add
pop
outsl
lods
jge
mov
insb
clc
push
mov
or
jge
mov
adc
inc
dec
sbb
add
aam
sbb
mov
clc
xchg
in
push
iret
inc
sbb
mov
push
xor
stos
push
outsl
out
mov
jnp
fs
pop
jo
adc
arpl
mov
inc
pop
jne
pop
loop
mov
xor
pop
nop
xor
clc
and
rclb
sub
nop
mov
cmp
xor
push
pop
dec
or
jl
sub
arpl
in
enter
gs
jmp
nop
inc
repz
jne
jae
faddp
mov
pushf
adc
jbe
mov
dec
add
in
mov
add
lahf
sar
call
test
mov
push
add
xchg
jecxz
fs
push
repnz
push
mul
add
lcall
dec
lds
xchg
jae
xor
stc
hlt
cwtl
test
loop
repz
cld
mov
lock
jns
add
add
pop
pop
dec
sbb
test
rcrl
and
repnz
mov
push
and
cmp
inc
loope
in
ja
rclb
in
xchg
jecxz
push
ret
hlt
jg
test
add
xchg
mov
xchg
ficomps
and
jecxz
or
shll
aaa
add
push
mov
inc
or
pop
test
mov
xchg
fsub
sub
inc
test
orl
aam
or
je
notb
dec
mov
orb
and
jge
nop
pushf
sbb
hlt
push
subb
ss
std
mov
test
in
dec
sbb
fdivrs
dec
out
shrb
leave
shr
jbe
enter
mov
test
adc
xchg
call
and
pop
cmpb
adc
add
and
je
xchg
dec
shr
add
pop
push
out
adc
enter
cld
sbb
cmp
es
pusha
movsl
js
aaa
add
fisubs
cltd
and
je
push
xchg
and
push
faddl
pusha
push
push
push
sbb
cwtl
pop
dec
dec
or
xor
sub
add
mov
dec
add
add
ret
aam
addr16
inc
lret
orb
sub
cs
xor
bnd
mov
sub
add
mov
insl
inc
dec
dec
pop
repnz
add
mov
add
cli
and
stc
sub
pop
dec
add
sbb
xchg
or
add
mov
fucom
inc
cmpsb
movsl
je
add
mov
bound
push
dec
adc
cwtl
push
outsb
hlt
enter
icebp
out
sbb
mov
xor
out
outsb
cmp
bound
sub
xor
cmp
mov
add
ss
xor
push
les
enter
sar
imul
jl
xor
dec
jnp
call
mov
mov
push
add
pop
pusha
dec
push
xor
or
push
lcall
and
nop
mov
pop
or
in
mov
shrl
sub
mov
out
dec
ljmp
in
cld
add
inc
add
pop
jno
jge
cmp
cwtl
jb
cwtl
cmp
test
sub
mov
aam
sub
fisubrl
in
rorb
mov
jl
adc
test
ret
sub
mov
arpl
sub
insb
mov
shll
sbb
dec
loop
adc
das
fcmovnb
adc
add
lods
fdivrl
add
push
add
push
insb
ret
loopne
adc
int3
inc
cs
jmp
add
jo
mov
add
and
mov
das
add
lea
je
or
inc
mov
mov
aad
stc
sbb
sbb
lods
mov
or
mov
mov
mov
stos
js
pop
mov
leave
jge,pt
cmp
xlat
sub
in
insb
ret
fcmovne
and
arpl
dec
xor
pop
push
jmp
inc
add
xchg
jne
xor
mov
sub
leave
pop
jg
add
jl
mov
test
inc
xor
fildl
pop
loop
sahf
push
mov
inc
add
and
and
or
out
inc
mov
xchg
mov
sar
inc
xchg
and
in
clc
scas
adc
jbe
adc
adc
mov
or
add
mov
mov
or
mov
fdivl
loope
ret
je
lods
jle
adcb
or
adc
dec
inc
add
addb
dec
sub
rorb
mov
rorl
pop
iret
sbb
in
and
inc
pop
adc
inc
in
or
int3
ficomps
lock
add
mov
cld
dec
jno
fs
lea
xchg
in
enter
loopne
adc
pop
je
fdivl
fs
pop
in
add
mov
xchg
add
gs
les
xchg
mov
into
lods
mov
lds
in
push
pop
arpl
dec
das
fs
add
add
lods
xor
cmp
fadds
xchg
aam
pushf
and
pop
jmp
mov
test
test
out
lcall
push
cmp
jae
adc
dec
mov
sbb
test
or
repnz
or
pop
pop
nop
lock
inc
pop
les
sbb
adc
xchg
inc
rcrl
mov
and
lahf
mov
mov
jne
jmp
push
pop
mov
add
iret
dec
mov
pmulhw
dec
xchg
cld
adc
rcrl
and
cmp
or
enter
push
push
and
mov
sub
inc
loop
push
stc
clc
pop
rclb
outsb
sbb
pop
adc
and
pushf
inc
push
and
les
imul
lods
mov
cltd
incl
lret
inc
fidivrl
jle
xchg
clc
int3
nop
cmp
loop
jno
mov
loope
fisubl
mov
or
data16
lret
loope
mov
pushf
je
or
sub
inc
adc
lret
mov
xchg
sbb
ficoms
mov
inc
and
push
add
mov
mov
mov
xchg
adc
enter
fmull
dec
ss
loopne
push
add
leave
cld
jne
cld
pushf
adc
stc
adc
jns
add
shrl
pop
and
clc
add
lcall
add
dec
repz
int3
insb
fldl
outsl
pop
inc
and
pusha
pop
lret
or
faddl
add
das
sar
pop
lods
mov
jo
mov
rcrb
lret
add
adc
fwait
inc
add
sti
aam
shlb
mov
xor
shrb
shr
mov
mov
xchg
gs
int
and
or
xchg
and
mov
sub
inc
mov
xchg
clc
rcrb
jl
sbb
movsl
cmpsb
or
into
lret
pop
adc
push
test
cmp
cmp
test
or
les
das
adc
cltd
fildl
xor
in
mov
xor
xor
xor
jle
imul
add
movb
and
cmp
pop
outsb
insb
jp
imul
enter
cmp
test
and
or
push
cmp
dec
outsl
add
xchg
sub
and
icebp
or
rorl
je
mov
xchg
ret
mov
ds
enter
in
in
pusha
icebp
inc
repz
pop
aam
ss
mov
mov
pop
test
jmp
adc
inc
mov
bound
insl
in
pusha
add
into
scas
inc
mov
rolb
frstor
pop
loope
jp
cs
test
call
xchg
xchg
mov
sbbl
add
pushf
jl
sarl
jae
inc
in
outsb
or
clc
cwtl
mov
frstor
dec
mov
cmp
lods
test
mov
and
clc
push
add
outsb
les
jmp
and
adc
in
out
push
mov
or
sub
sbb
loop
lea
pop
cmp
out
clc
jb
daa
cmp
cmp
int
loopne
pop
inc
in
cmp
xchg
fs
mov
and
lods
test
jg
nop
and
xor
in
cwtl
or
bnd
mov
dec
push
lock
jns
or
xchg
adc
sub
or
stc
adc
jl
lea
das
or
icebp
sbb
cmp
jl
shlb
adc
or
mov
mov
les
jb
add
jle
mov
adc
jl
lret
dec
loopne
inc
cld
rcrb
sbb
push
loop
lods
loopne
shl
test
cmp
xor
ss
jp
jo
jno
mov
xor
push
mov
pop
inc
xor
mov
xchg
and
xor
inc
daa
test
imul
mov
das
push
pusha
inc
cld
orb
push
push
xor
test
hlt
daa
push
testb
movl
inc
and
and
out
pusha
jl
xor
adc
test
mov
imul
nop
adc
adcb
rol
loope
sbb
xchg
rcrl
mov
mov
push
pop
dec
or
subb
cmp
aad
mov
insb
sbb
shlb
mov
add
sbb
add
or
subb
fsubrl
sbb
or
les
addr16
push
or
adc
push
and
xor
add
add
inc
or
stos
jmp
fisubrs
adc
orb
adc
pop
adc
gs
inc
or
enter
aas
repz
dec
inc
pop
dec
fs
xor
pop
fisubrs
ss
stc
or
les
cmp
push
mov
mov
or
outsb
movsl
xchg
and
sbb
adc
cmp
iret
and
arpl
shl
and
or
mov
push
add
lock
ja
pop
je
std
mov
in
dec
or
xor
push
or
jo
or
addb
xor
push
add
sub
push
and
mov
and
ja
adc
xor
sbb
pop
add
adc
fnstcw
sub
hlt
mov
xchg
or
hlt
pop
dec
add
xor
dec
shlb
jmp
adc
subl
jmp
aaa
or
dec
adc
data16
arpl
pop
add
or
adc
adc
bound
ljmp
adc
inc
sbb
cmpl
or
inc
and
inc
cld
addb
xorb
add
fadds
push
add
cmp
inc
orb
xor
fcoml
scas
movsl
adcb
jmp
or
sub
pushf
inc
inc
mov
xchg
push
mov
inc
nop
fs
sub
or
notl
push
push
icebp
cmp
add
add
add
xor
adc
and
ljmp
xchg
in
pop
and
movsb
dec
subl
add
sbb
and
ds
arpl
jo
loope
insb
mov
jl
and
pop
rcrb
and
inc
adc
shlb
sbb
jl
loop
imul
sub
mov
lds
inc
arpl
jp
lock
jmp
or
mov
add
sub
lds
mov
pop
mov
cmc
stos
daa
lock
mov
imul
add
gs
mov
add
movl
push
sbb
orl
jge
or
dec
or
xchg
sbb
sbb
test
sbb
dec
push
sbbl
jmp
fstpl
mov
ds
hlt
shl
orl
xor
sub
pusha
pop
adc
mov
mov
dec
pop
test
xchg
or
dec
lea
enter
inc
call
ret
leave
cmp
jmp
inc
add
mov
mov
lret
or
jl
rolb
in
push
fstpt
push
pushf
adc
scas
add
cwtl
jg
push
mov
pop
aas
or
sbb
add
dec
aaa
out
jns
add
and
out
add
xchg
jne
data16
inc
mov
sbb
push
sbb
cmp
cmp
test
cmpsl
add
mov
stos
inc
add
xchg
jno
dec
paddd
sub
lahf
aad
mov
lea
inc
push
pop
pop
lock
xor
and
lcall
inc
inc
mov
add
fcmovnb
pop
cmp
xchg
arpl
and
in
add
lahf
out
lds
fdivrl
cmp
pushf
clc
sbb
outsl
imul
int
rcrl
add
es
push
mov
cmp
add
mov
mov
inc
sbb
add
mov
push
or
push
cli
fsubs
jp
add
cmp
inc
xor
test
adc
scas
ds
sbb
add
addr16
cwtl
bound
mov
lock
or
inc
mov
out
xor
jl
je
bound
outsb
inc
pop
ret
rol
mov
or
popa
cmp
rorb
frstor
jbe
xor
mov
rol
sbb
or
inc
mov
inc
fmull
mov
test
je
xchg
xchg
push
add
push
out
subl
add
mov
es
inc
fs
inc
xor
sbb
xchg
add
pusha
subb
rcll
adc
add
and
xchg
jo
cli
sub
nop
lret
cmp
add
xlat
and
iret
call
add
add
and
pusha
push
sbb
push
mov
sub
sub
js
fs
outsb
xchg
adc
nop
in
sbb
insl
mov
fdivrs
mov
in
mov
adc
rorb
mov
jmp
mov
push
test
jg
adc
roll
inc
jne
rolb
rcrl
sub
xchg
cmp
call
add
imul
inc
push
and
xor
jg
repz
jle
xor
pop
push
jo
pop
mov
filds
sub
add
xchg
jecxz
xchg
fistpl
push
in
sahf
push
sub
mov
cmp
xor
testb
rorl
sbb
push
sub
xor
and
pop
pop
das
and
test
in
pop
add
fsubrs
xor
sub
loop
add
inc
sti
loope
cs
jb
psubsb
mov
test
xor
sub
gs
ret
xchg
pop
dec
pushf
add
adc
cltd
aam
add
insl
cmp
dec
pusha
and
leave
push
in
ret
push
fcmovnb
fdiv
rorb
cmp
ss
inc
push
cld
dec
pop
mov
outsb
call
push
js
enter
jle
js
imul
fcoms
sbb
repz
loopne
ret
shrb
or
cmp
cld
add
push
xchg
addb
into
inc
adc
jecxz
and
pusha
cmp
push
das
add
insb
inc
loopne
xchg
bound
add
es
xchg
inc
xchg
sub
push
mov
out
mov
lds
add
mov
inc
call
inc
shrl
movsb
ja
cs
mov
mov
adc
movsb
fisubrl
dec
dec
push
nop
mov
xchg
inc
jne
not
inc
or
add
inc
xor
xor
jb
xchg
mov
xchg
pop
jne
mov
cmp
jle
xchg
add
pop
jno
jae
xor
cmp
push
cmp
push
or
sub
push
roll
add
add
cmp
pop
lret
data16
xchg
adc
dec
es
xor
sub
lock
test
mov
xor
add
jl
call
mov
push
or
pop
andb
inc
inc
lds
fs
loopne
push
add
bound
fmull
add
dec
mov
push
mov
xchg
sbbb
lret
inc
sub
icebp
cli
testl
sub
and
inc
sub
in
xchg
xchg
pusha
popf
mov
inc
je
add
jo
fcoms
fldl
lock
inc
cmp
js
cld
jl
add
jo
add
into
cmp
arpl
push
pop
pushf
add
pop
and
push
dec
push
jae
jmp
dec
test
sub
cwtl
pop
sbb
or
sbb
movl
sbb
xor
stc
cwtl
fdiv
inc
or
repz
cwtl
xor
mov
mov
sahf
add
faddl
andl
adc
or
fbstp
push
or
add
std
lock
inc
add
fstl
mov
test
xor
push
fcoms
frstor
mov
clc
sub
inc
sbb
fnsave
pop
imul
inc
adc
ret
mov
sbb
addb
scas
outsb
es
and
or
lahf
ja
inc
in
lods
push
enter
mov
clc
or
or
imul
xor
nop
stos
inc
xor
mov
xor
push
adc
ja
xchg
insb
outsl
mov
mov
call
loop
sahf
clc
mov
test
or
mov
ljmp
test
xor
xor
adcl
mov
inc
xor
xor
inc
in
jae
dec
in
icebp
sarb
dec
sbb
jp
xor
jb,pt
enter
jecxz
rclb
es
inc
push
orb
add
push
add
cmp
je
cwtl
test
adc
add
jmp
stos
or
addr16
rol
loope
ljmp
cmc
fildl
add
js
cli
add
add
mov
loopne
inc
sub
orb
or
gs
mov
fstp
imul
fcoml
lcall
cmpl
inc
jo
out
adc
in
mov
in
cwtl
xor
inc
dec
or
lret
mov
pusha
ret
dec
mov
addr16
pop
add
inc
cwtl
mull
cmpl
notl
mov
movsl
xlat
push
das
pushf
ds
xor
mov
call
cmp
test
dec
or
rclb
mov
aaa
add
inc
sbb
push
fisttpll
jae
cmpb
sbb
lock
adc
fdivrs
aam
clc
and
sub
lret
xor
sbb
out
mov
pop
jmp
fs
add
imul
nop
push
hlt
add
sbb
mov
imul
sbb
xor
lods
mov
pop
adc
and
lahf
call
rolb
repnz
cmp
adc
jp
pop
insb
and
loope
pop
push
add
mov
sbb
insl
cltd
mov
pusha
mov
into
cmp
dec
xchg
nop
js
adc
xchg
mov
pop
xchg
ror
jl
adc
scas
push
add
lods
pop
pcmpeqb
inc
inc
xchg
fcomi
and
lcall
call
push
or
sbb
mov
xor
fisttpll
cmp
cmp
insb
fmuls
pop
or
pop
pop
lret
add
inc
xor
loopne
mov
not
sbb
push
adc
pop
add
mov
ljmp
xchg
cmp
insl
mov
mov
cmp
adc
or
jb
add
insb
lods
rorb
ror
add
ret
sbb
aad
mov
movsb
rorl
rclb
add
jp
mov
add
pop
gs
pop
sbb
adc
sbb
dec
dec
call
or
xchg
inc
pusha
push
jo
sub
imul
ret
loope
add
rorl
mov
jecxz
xchg
add
fs
fisttpll
or
or
sub
test
shlb
jne
pop
sbb
add
int3
repnz
add
dec
add
jmp
mov
lret
pop
or
test
and
cld
xchg
sub
je
orb
add
rolb
xor
mov
add
pop
or
sahf
pop
inc
and
or
arpl
and
sbb
fsubl
rcrl
adcb
jecxz
mov
ret
orb
fldl
xchg
test
test
aas
mov
sub
mov
sub
mov
jno
addr16
fsubl
adc
mov
inc
adc
dec
mov
lds
jae
sub
daa
add
fnsave
fs
sbb
xchg
add
add
inc
and
frstor
sbb
mov
gs
aam
sub
dec
ja
sub
mov
clc
rolb
push
mov
mov
clc
je
and
es
dec
adcl
ljmp
mov
mov
pushf
outsl
call
gs
add
jnp
les
icebp
mov
pop
xchg
nop
sbb
add
inc
jnp
mov
mov
xor
int3
leave
call
push
xchg
repnz
ja
nop
frstor
jle
sbb
je
mov
cltd
add
add
movsb
xor
imul
or
dec
test
adc
fsubl
adc
xchg
lcall
outsb
nop
pusha
mov
add
insb
test
outsl
inc
lods
adc
inc
pop
js
adc
insl
push
push
cmp
and
jnp
test
movsb
fmull
or
xchg
gs
ss
imul
and
ret
cwtl
push
test
ret
lock
andl
add
out
xchg
xchg
negb
jl
sbb
icebp
pop
nop
lock
adc
or
imul
test
je
push
add
mov
cmp
sub
clc
mov
adc
add
js
cmc
inc
or
sub
das
fs
test
mov
sub
jl
add
xchg
aam
or
les
lahf
in
nop
ret
add
iret
mov
icebp
loopne
popa
std
ds
repnz
push
inc
aaa
sbb
sbb
jecxz
sub
movsb
enter
add
and
pop
add
inc
adc
mov
or
fildl
packssdw
in
in
push
test
xlat
add
add
and
js
xchg
hlt
mov
mov
orb
and
push
mov
adc
inc
pop
cmp
or
xor
fisttpll
add
xor
mov
add
call
adc
shlb
cmp
jns
insb
lret
add
mov
sbb
lea
cs
inc
loope
jle
lods
add
adcl
pusha
cmp
xchg
push
mov
jbe
cld
push
add
mov
push
sti
lock
sbb
jbe
push
or
testb
xor
fstpl
dec
mov
or
mov
push
pop
ja
and
xchg
cmp
sbb
gs
roll
cmc
mov
cmp
stc
or
sarb
jae
shrb
mov
imul
xor
pop
jmp
inc
subb
mov
outsb
inc
in
pushf
mov
or
mov
dec
test
mov
in
sub
add
inc
xchg
and
mov
popa
jl
adc
sub
xor
xor
add
das
adc
mov
inc
lods
add
add
cmp
nop
js
xchg
push
xchg
int3
js
xor
int3
cwtl
loopne
data16
test
push
push
test
sub
addr16
add
fsub
pop
or
lds
add
outsb
mov
mov
mov
stos
repnz
add
xchg
paddusb
pop
in
aad
and
xchg
in
pop
mov
inc
mov
fnstcw
dec
adc
sbb
mov
inc
pop
xor
call
dec
cld
mov
sub
ror
and
dec
ret
xor
int3
xchg
call
xchg
xchg
icebp
adc
adc
js
jne
or
aas
cmpsl
and
leave
ljmp
add
adc
ljmp
iret
stos
pop
fnsave
ret
add
xchg
push
mov
or
mov
dec
int3
sbb
push
xor
or
dec
xlat
push
fs
and
push
or
outsb
jb
enter
outsl
adc
pop
push
add
fwait
inc
lahf
fsub
add
pop
xchg
nop
xor
mov
jp
js
inc
or
mulb
rol
inc
mov
or
jp
mov
in
xlat
sub
xchg
mov
or
fldl
inc
aam
push
mov
pop
outsb
push
imul
lds
inc
pusha
sbb
dec
jg
pop
cwtl
ret
js
jge
add
or
sbb
and
inc
xor
inc
push
lds
mov
xchg
pop
sbb
frstor
mov
sbb
mov
adc
ss
xchg
cmp
mov
mov
and
jae
inc
xlat
pop
and
int3
xorb
xchg
bound
loopne
rcll
add
push
cmp
mov
sarb
jbe
jp
clc
jmp
mov
aam
xchg
arpl
push
pop
or
dec
adc
nop
sub
mov
popf
mov
pop
loop
sbb
push
cmp
add
lea
mov
mov
mov
in
pop
mov
pop
lock
push
adc
pusha
fisttpll
mov
and
arpl
pusha
sbb
sub
jmp
xchg
xor
in
or
push
inc
and
fistpl
pop
push
pushf
inc
dec
mov
ret
int3
dec
enter
insb
xchg
test
lock
sub
dec
xchg
ficoml
inc
aaa
aam
mov
xor
add
add
pop
xorb
push
cmp
lods
in
pop
aaa
js
mov
prefetchnta
imul
jae
ds
dec
sbb
add
push
lea
and
popf
in
cmp
pop
xorb
sbb
gs
mov
mov
pop
inc
js
jl
sahf
or
mov
inc
inc
call
fists
mov
lock
imul
xor
faddl
add
js
clc
inc
mov
in
rorl
inc
push
je
roll
inc
sbb
xor
jb
ret
or
sub
or
fnstcw
ret
mov
or
and
rolb
and
ds
sarl
xlat
add
inc
jo
call
pop
adc
enter
add
arpl
sub
pop
sub
xorb
add
xchg
jo
sbb
mov
or
adc
data16
xchg
sub
icebp
sbb
dec
addb
loop
fs
inc
pop
pop
jge
dec
aam
lock
jae
mov
push
mov
in
fst
cli
test
cmp
jg
xor
mov
out
cmp
or
inc
iret
add
mov
insl
lock
movl
mov
daa
int3
fsubl
add
push
push
aam
pop
addr16
or
fldt
push
in
mov
add
jb
inc
inc
or
add
mov
out
ds
mov
and
pop
inc
adc
inc
xor
fnstsw
or
add
aaa
pusha
push
pop
jo
xchg
sbb
cmc
mov
mov
inc
mov
fistpl
push
adc
data16
ret
add
dec
jne
inc
rorb
cmp
test
loopne
pusha
call
push
fucomp
mov
ret
cmp
sub
or
es
mov
in
or
or
fs
lods
dec
push
cmp
push
mov
fstpl
xchg
pop
xchg
sbb
lods
fidivrl
cs
sub
loopne
or
adcb
fstl
icebp
imul
and
jae
les
mov
mov
adc
jl
jl
lock
push
imul
or
fadd
bnd
sbb
cwtl
adc
pop
inc
mov
cmpsl
mov
pusha
xor
and
inc
or
and
or
jmp
xchg
sbbb
fdivrs
loop
add
adc
stos
dec
imul
pushf
loopne
xor
ret
imul
xchg
inc
sub
loope
mov
inc
add
mov
and
arpl
push
mov
cli
ret
rorb
stos
lock
faddl
jbe
push
loope
xchg
inc
push
lcall
cmp
popf
adc
les
mov
lea
or
stc
add
inc
cld
and
inc
das
in
adc
jne
fimuls
sbb
pop
adc
addb
fstpt
mov
jl
inc
jnp
adc
dec
cmc
push
je
lock
add
hlt
add
in
cmp
add
cmp
rolb
push
lock
inc
sarb
inc
sbb
ja
shlb
mov
mov
iret
mov
mov
push
sbb
and
mov
pop
frstor
flds
push
mov
cmpsl
and
add
mov
stos
add
inc
arpl
pop
outsl
lahf
xlat
pop
sub
sbb
and
adc
xchg
scas
mov
sbb
push
sbb
sbb
jle
mov
jecxz
add
cmp
cmp
adc
fs
or
or
pop
mov
sbb
cs
jle
test
in
jne
sub
add
lods
add
ret
push
xor
inc
xchg
in
lcall
test
mov
pusha
mov
fadds
in
outsb
fildll
ja
pusha
es
mov
inc
mov
add
rolb
add
mov
cld
mov
das
mov
or
aas
jo
push
es
sub
inc
sub
mov
inc
add
mov
xchg
fcomp
push
lock
test
loopne
dec
inc
test
setl
jl
in
sub
fcompl
call
repz
inc
inc
mov
adc
fstl
xchg
push
cmp
pusha
mov
inc
aas
or
fwait
pop
mov
inc
fcoms
fisubl
adc
rcl
push
insb
sbb
imul
mov
add
int3
pop
out
out
sub
xchg
inc
adc
nop
in
cmp
test
lock
adc
daa
inc
fldcw
das
jno
test
cmp
cmpsb
nop
xor
sbb
leave
ja
push
imul
sub
sub
adc
mov
adc
dec
or
lret
orb
les
cmp
mov
add
mov
fstpl
or
sbb
fisttpl
fisttpll
xchg
xor
out
xor
lret
call
lea
mov
adc
cmp
sbb
pop
clc
mov
inc
jl
jnp
or
loopne
out
jb
pop
pop
enter
je
hlt
loopne
bound
sub
mov
inc
jo
add
gs
add
xchg
enter
iret
sub
xchg
and
lret
sarl
sub
mov
inc
repz
xlat
adc
mov
pop
je
stos
jns
mov
in
sub
addl
fstl
sub
mov
jl
mov
dec
cmpsb
out
add
pop
fisubs
loope
mov
mov
notl
fcmove
mov
or
rcr
pop
mov
jp
or
cmpsl
mov
mov
jecxz
mov
add
mov
add
mov
lock
shrl
mov
cmp
flds
xor
les
clc
js
loope
in
inc
sub
mov
inc
pop
shr
popf
mov
mov
idivb
adc
sub
push
push
xlat
cld
sbbb
mov
leave
push
sbb
mov
cmp
clc
jecxz
fsubrs
push
inc
inc
sbb
fsubp
inc
xorl
outsl
fs
add
pop
sbb
movsb
pop
rorb
add
int3
gs
lock
add
movd
nop
inc
cmpl
insl
les
inc
mov
sub
call
mov
mov
fdivrs
fnsave
inc
add
sbb
pop
add
outsl
in
hlt
cmp
or
and
push
mov
push
or
into
or
gs
pop
jne
adc
sub
and
push
nop
mov
mov
push
xor
loopne,pn
or
mov
mov
and
mov
adc
adc
cmp
jecxz
lea
mov
insb
testb
cmpsl
pushf
adc
cmp
or
mov
adc
inc
clc
sbb
or
and
fwait
add
cmp
test
jge
push
adc
daa
xchg
cwtl
sub
push
mov
testl
cwtl
rorb
push
hlt
pop
int
movsb
add
mov
sub
fnsave
out
test
addr16
ds
fs
int3
shll
fdivl
sbb
sbb
and
xchg
aad
fcoms
jo
cs
adc
add
mov
add
jno
js
loope
lock
sbb
test
push
adc
orb
inc
das
inc
test
lds
lods
mov
in
push
repz
xor
in
lods
pop
push
cmp
cld
add
mov
in
pusha
mov
xchg
stos
sub
or
inc
clc
and
testl
das
push
sbb
pop
adc
in
js
repnz
jp
add
mov
and
sbb
incl
aaa
add
mov
call
imul
inc
fsubrs
mov
popa
cmp
mov
insb
cmp
popf
in
cmc
adc
inc
push
dec
dec
add
lds
pop
and
insb
add
cwtl
int3
mov
mov
inc
rcl
xchg
ret
xchg
or
adc
cmp
outsb
call
push
lock
add
shl
adc
push
inc
push
es
mov
test
dec
jns
xchg
add
ljmp
loope
je
jno
and
mov
shll
xor
and
divl
or
lock
xchg
mov
mov
push
and
adc
inc
xchg
adcb
pop
loop
call
jg
dec
fstpl
es
lods
cmpsl
or
pop
xor
leave
jno
sbb
xchg
add
adc
push
popl
lds
stos
cs
test
gs
cwtl
adc
jo
mov
or
pushf
iret
fldcw
and
add
jecxz
cs
clc
sbb
push
jecxz
mov
and
pop
nop
mov
jo
std
inc
mov
ret
pop
inc
lcall
cmp
mov
inc
fnstenv
scas
xor
frstor
pop
dec
les
xor
cmp
imul
cmc
add
xchg
adc
push
jecxz
bswap
sub
mov
ja
ds
lds
xchg
invd
je
popf
cmp
rcrb
mov
in
add
imul
in
push
mov
or
adc
shlb
add
popa
cltd
pop
test
sbb
pop
test
pop
cmp
in
cwtl
call
jl
mov
add
jo
clc
sub
adcb
xor
adc
fcoml
add
in
and
cwtl
test
dec
or
sub
inc
aas
xchg
pop
and
ljmp
and
cmp
lock
add
xorb
pop
and
loopne
cmpxchg
and
push
pusha
xchg
fdivr
xchg
imul
or
push
mov
mov
rclb
mov
dec
cmp
jl
mov
fsubl
and
cld
mov
pop
mov
jns
adc
pushf
pusha
adc
add
mov
jno
rolb
pusha
sbb
jae
cmpsb
enter
jmp
inc
ret
sub
or
xchg
sahf
mov
inc
nop
fistps
call
add
or
pop
and
sbb
insl
add
mov
mov
cmp
ret
pop
adc
inc
add
je
testl
test
leave
jg
fs
jo
js
movsb
loopne
fcoml
ret
sbb
loopne
shll
nop
pop
jmp
add
dec
in
frstor
mov
loopne
pop
xlat
pop
icebp
enter
jg
fldl
lea
pusha
xchg
loopne
jmp
pop
adc
out
inc
lahf
addr16
lock
insb
adc
or
jecxz
add
je
add
push
jecxz
int3
jecxz
addr16
ja
cmc
push
mov
inc
cli
leave
add
sub
shll
jge
sub
pop
scas
inc
cmpsl
fsubl
lcallw
mov
cld
insb
ret
cmpsb
rolb
fwait
mov
add
sub
push
add
mov
fsub
cmp
xchg
loop
mov
ljmp
pop
outsb
or
push
add
add
xchg
cmp
seto
shl
jb
inc
jae
add
incb
lock
sbb
test
mov
jge
js
push
insb
or
pop
loop
movsb
xchg
inc
push
inc
xorl
cmp
cs
push
shrl
xor
sbbl
scas
cmpsl
add
frstor
inc
add
inc
xchg
clc
rcrb
inc
inc
sub
gs
adc
cmp
data16
enter
dec
add
shl
fcomps
mov
in
mov
inc
jnp
or
pop
sub
imul
xor
gs
inc
add
outsb
call
enter
mov
inc
frstor
mov
pop
scas
pop
pop
mov
lock
cmp
cmp
andb
cs
inc
mov
inc
std
dec
push
mov
lahf
cmpsl
cmp
push
cmp
ret
adc
push
cltd
arpl
and
sti
and
ja
outsb
mov
jmp
cmp
test
clc
ret
loopne
ljmp
mov
pop
sub
ret
mov
cld
insb
add
jge
orb
les
mov
or
cmp
loopne
mov
aad
sbb
fidivrl
jmp
sub
add
cmp
mov
mov
and
mov
xchg
inc
xor
dec
cmpsb
je
subb
lret
add
mov
mov
je
push
test
dec
sbb
je
mov
fcom
sbb
out
enter
call
aas
dec
enter
stos
inc
lods
cwtl
xchg
sub
jmp
ja
sub
pop
int3
bound
popa
movsb
mov
add
mov
in
pop
shrb
pop
or
sarb
push
jo
imul
int3
mov
popa
pop
xchg
add
daa
pop
orb
scas
sbb
mov
push
inc
push
xlat
subb
and
filds
xor
imul
mov
nop
ret
sbb
or
rolb
mov
xor
xchg
jne
adc
add
jecxz
les
inc
xor
aas
or
xchg
push
sbb
imul
jno
and
cld
cmp
dec
incb
in
or
xchg
inc
dec
and
pop
mov
imul
and
lcall
fwait
loopne
jno
pop
mov
push
add
les
movsb
ret
jns
fisubrs
xchg
out
inc
sub
sbb
test
add
mov
das
leave
pushf
xchg
jg
pusha
or
cmp
inc
pop
or
maxps
mov
add
xlat
pop
jp
into
paddusw
and
mov
pushf
pop
sbb
adc
adc
shlb
mov
push
ret
inc
cld
and
add
clc
add
scas
mov
daa
and
mov
push
xor
sub
mov
test
push
loopne
outsb
push
inc
notl
xor
and
mov
sarb
push
mov
loopne
in
mov
cmp
adc
insb
cwtl
bound
addr16
or
adc
mov
imul
add
or
sbb
popa
or
mov
insl
mov
inc
xchg
mov
jge
add
fcomp
add
and
xor
shlb
cld
adc
sbb
lret
and
fwait
popa
xchg
popa
and
repnz
dec
insl
int3
cmp
nop
push
rcrb
sbb
mov
mov
les
mov
pusha
sub
mov
mov
adc
dec
je
cmp
push
cmc
lock
inc
sub
xchg
inc
add
lahf
push
jne
cmp
lret
xchg
or
jp
js
xchg
mov
lock
pop
and
nop
sbb
adc
cld
mov
or
sub
fld
pop
sub
mov
fidivrl
in
ret
jl
decb
sub
add
pushf
xchg
pop
add
inc
dec
jge
xchg
daa
ljmp
pop
les
adc
test
sub
adcb
out
push
ret
cmc
fs
inc
les
aaa
dec
emms
pushf
pop
jge
pop
aam
cmpsl
add
js
push
and
addr16
add
insb
or
les
fmull
cmc
pop
ret
fdivrs
fsubl
add
or
out
and
pop
sub
lea
sub
adc
fsub
dec
punpcklbw
cmc
sbb
iret
fldcw
fsubr
data16
addr16
add
adc
jo
pop
outsb
mov
push
or
sbb
mov
xchg
bound
or
fnstsw
iret
jo
lret
adc
aaa
in
xchg
jg
stos
sbb
out
add
mov
pop
mov
dec
loopne
add
ret
daa
cmp
les
sub
mov
add
inc
stc
and
imul
test
mov
mov
dec
in
icebp
add
and
imul
test
icebp
imul
dec
pusha
add
sub
cwtl
and
popl
pop
add
adc
pop
push
psubusb
out
xor
add
mov
xor
push
bound
lock
push
in
xchg
sub
xchg
les
pop
jg
pushf
xchg
or
or
add
data16
loopne
sbb
fs
lock
add
arpl
and
inc
sbb
into
pop
add
out
pop
add
leave
cmp
mov
test
loop
in
cmp
xchg
arpl
xchg
add
sub
adc
mov
xchg
add
pop
mov
fiaddl
movsl
xor
jecxz
mov
cwtl
outsl
mov
out
sbb
nop
pop
inc
cmp
iret
cwtl
xor
call
xchg
adc
pop
mov
mov
add
add
in
sbb
mov
aad
in
fistl
and
inc
je
add
in
add
rcr
lret
and
lods
std
or
sub
lcall
cmp
aas
mov
mov
mov
inc
fdivl
add
and
pop
adc
mov
sbb
jne
inc
lds
mov
addr16
fiadds
or
push
add
adc
daa
inc
add
adc
into
cmp
push
arpl
push
call
nop
add
les
mov
mov
mov
mov
inc
lock
adc
movsb
in
xchg
int3
add
jbe
jge
popf
xchg
arpl
cmp
mov
and
out
add
jmp
sbb
jp
jbe
loopne
mov
add
ss
mov
sbb
leave
and
test
push
mov
and
dec
add
mov
sahf
in
xchg
js
test
push
jb
nop
inc
js
sub
pusha
div
add
push
xchg
ljmp
mov
xor
dec
mov
mov
add
jp
loope
bound
mov
int
xor
stc
mov
xor
subb
addl
mov
dec
and
adc
mov
jp
test
cmc
loopne
add
ret
call
cmp
and
mov
mov
nop
imul
std
xchg
or
fcompl
xor
mov
cmpb
mov
aas
xor
testb
mov
sub
add
mov
push
icebp
xor
pop
call
cmp
and
pushf
mov
inc
jp
shrb
cmp
je
xor
pusha
psraw
fdivrl
mov
pushf
jecxz,pt
fsubl
sub
mov
inc
sbb
adc
fbld
into
push
sbb
es
inc
fs
scas
sbbb
add
fstpl
push
fstps
dec
inc
fs
add
outsl
push
out
lock
or
add
xchg
daa
mull
rolb
dec
xor
mov
dec
dec
xor
xor
push
fisubrl
je
mov
and
test
pop
xchg
scas
mov
nop
aam
mov
outsl
cmp
je
cmc
jl
or
mov
inc
lods
pusha
mov
xchg
xchg
add
test
add
pop
xchg
scas
scas
push
cltd
pop
dec
and
add
add
or
pop
sub
and
mov
jmp
add
hlt
cmp
add
pusha
add
shrb
or
in
sbb
cmp
mov
push
in
and
adc
ret
mov
add
leave
fs
xor
pop
mov
lret
push
mov
add
xor
add
cmp
adc
jmp
ja
xor
and
sub
pop
add
add
das
pop
mov
clc
xor
aam
pop
cld
cmp
xor
ret
or
push
adc
mov
mov
mov
adc
add
pop
dec
fnsave
out
icebp
lret
pop
and
mov
pushl
int
roll
cmc
mov
add
call
pop
fwait
rcrl
insb
lahf
inc
cmp
call
fistpl
add
dec
clc
pop
sbb
sub
sub
sub
xchg
inc
or
decb
jle
jmp
add
fcoml
push
shlb
sub
dec
ds
cwtl
and
push
mov
shlb
mov
ffreep
popf
loope
and
push
pop
push
xchg
pop
dec
or
aas
pushf
sbb
add
repz
and
pop
rcrb
sbb
cmp
or
sub
pop
nop
in
scas
pop
in
adc
js
push
add
push
rcrb
cld
sbb
pop
fnstenv
or
test
mov
xor
or
cli
inc
xchg
jae
add
mov
jmp
xor
sbb
ret
mov
fsubrp
sub
push
push
mov
sub
cmpsl
xchg
ja
cli
xchg
pop
sti
les
or
addr16
push
push
mov
popl
pop
repnz
xchg
sbb
ret
lea
cmp
inc
jge
aaa
pop
insl
test
lds
fwait
stos
xor
mov
xorl
nopl
xor
mov
scas
dec
pop
sub
jle
jp
xchg
and
mov
add
dec
leave
inc
cld
popa
fdivrs
shlb
adc
loopne
push
in
sub
cmpb
sub
shlb
jbe
mov
mov
jmp
out
js
xor
stc
adc
shll
mov
xor
dec
add
aas
mov
negw
lahf
sbb
add
or
loopne
cmp
sbb
data16
dec
push
add
mov
lock
xchg
jbe
adc
mov
loope
addb
cwtl
cmpsb
int3
test
pop
pop
cwtl
xchg
rsqrtps
adc
out
cmp
and
sbb
dec
mov
sbb
add
ficoms
mov
add
xlat
inc
or
push
popf
bound
mov
sub
sub
pop
add
add
mov
ds
pop
cmpl
xor
inc
adcb
jnp
es
fisttpl
sbbb
cwtl
adc
popf
sub
cmpl
add
jb
cmc
pusha
subb
add
aad
test
or
call
btc
stc
pop
dec
and
lcall
loope
dec
xchg
in
push
sub
xor
stos
std
push
pusha
call
jmp
mov
mov
lock
popa
out
loopne
iret
aam
jne
dec
in
jae
es
mov
push
mov
jb
shr
and
repnz
cmp
ja
mov
xor
and
add
mov
lods
test
out
pop
outsl
push
push
add
jmp
mov
lldt
ret
push
sbb
rcrl
sar
jmp
lock
outsl
mov
lods
gs
adc
rclb
ds
xor
out
and
and
pop
xchg
push
xor
outsl
pop
shrl
jp
dec
xor
inc
sub
pop
push
inc
cmpsb
dec
pop
dec
stos
stos
pop
loop
add
inc
mov
rcl
addl
sbbl
mov
enter
add
inc
lea
xor
sbb
add
ret
test
inc
ret
jbe
jmp
test
inc
xchg
addl
pop
inc
stos
add
mov
cmc
mov
sub
test
jmp
je
cmp
shll
mov
push
aad
rol
mov
lcall
add
ja
and
dec
sub
add
lock
or
cmp
test
push
push
add
rcll
cld
ss
xor
sahf
pop
ja
and
rep
cmp
dec
sub
aas
push
nop
mov
add
inc
in
and
les
fisttps
out
test
adc
pop
adc
inc
xor
xor
bound
push
in
cmp
mov
add
rcll
sub
pop
sub
mov
and
pop
mov
int
leave
dec
add
add
add
fidivs
cmovg
jnp
adc
adc
and
and
sub
adc
inc
test
inc
ljmp
ljmp
push
mov
notl
xor
rcll
or
or
outsl
jle
test
inc
adcb
int
push
sub
pop
icebp
mov
movsb
or
inc
cs
mov
jb
or
pop
push
mov
dec
fstps
inc
add
aas
xor
lea
lret
jno
leave
push
add
pusha
jg
test
xor
mulps
pop
test
js
cld
fisubs
xor
or
mov
inc
mov
push
and
jmp
aad
xor
add
or
les
sti
bound
inc
xor
dec
or
addb
in
hlt
jle
cs
sbb
sub
shll
mov
fstps
add
jge
dec
fsubrp
inc
or
xor
and
adc
sbb
aas
gs
lods
pop
fimuls
add
jne
xchg
dec
add
pop
idiv
jmp
mov
bnd
lret
jns
cmp
sub
inc
mov
lret
push
test
cmc
xchg
in
jmp
mov
or
loope
into
mov
and
add
pop
push
jmp
not
shr
sbbb
xor
cwtl
shr
or
jmp
push
push
mov
scas
add
neg
sarb
mov
and
mov
cmp
out
jne
inc
stos
jb
inc
add
push
mov
pusha
enter
xchg
xor
icebp
aam
dec
pop
adc
pop
pop
or
lahf
adc
push
or
lret
bound
inc
and
lods
hlt
jmp
mov
add
xor
cmp
inc
inc
xor
into
push
ret
fwait
dec
sub
adc
fwait
inc
icebp
mov
into
hlt
ret
pop
push
mov
shl
inc
movsb
xor
xor
int3
dec
inc
popa
or
push
pop
and
and
dec
push
rcll
int
movsb
or
push
sbb
pop
and
sub
cld
pop
dec
adc
adc
ret
sahf
push
stos
adc
popa
add
enter
push
push
cltd
mov
scas
xchg
mov
gs
mov
in
mov
ds
add
sbb
lret
cmpsb
shll
pop
bound
rcrl
jo
ret
xchg
cmpsb
lcall
mov
push
xor
adc
mov
lcall
cmc
leave
add
mov
push
sahf
fimuls
or
and
adc
es
loopne
stos
push
aas
gs
leave
arpl
rorl
jno
mov
pop
fmuls
call
jbe
add
lahf
add
inc
es
inc
adc
repz
test
dec
xor
sub
mov
xor
push
cs
jbe
arpl
dec
sbb
test
sbb
ficoml
jns
not
xchg
mov
gs
mov
test
movsl
in
jo
inc
push
mov
sub
decb
je
adc
push
inc
test
or
and
in
hlt
sub
jge
push
stos
inc
std
pop
out
lock
arpl
and
ror
and
xchg
pop
jb
pop
xchg
push
ret
adc
inc
mov
loopne
verr
inc
pop
xor
cwtl
mov
std
push
dec
mov
xchg
aad
adc
add
mov
xor
lcall
jge
mov
jnp
sub
aad
arpl
mov
xor
mov
shrb
pushf
jmp
leave
inc
sub
dec
inc
es
dec
in
int3
push
push
push
mov
jge
sub
addl
push
mov
not
or
clc
inc
push
push
loopne
push
daa
jmp
loopne
cwtl
int
fdivs
out
jecxz
push
clc
ja
or
and
movl
ficompl
sbb
aas
faddl
xchg
xor
nop
push
jp
push
in
ret
sbb
sub
sbbb
gs
inc
cmp
jmp
loop
mov
push
push
pop
es
pop
adc
fbstp
stc
mov
shl
dec
inc
jmp
pop
sub
or
lock
inc
inc
sbb
lock
mov
mov
pop
pop
mov
add
push
cmp
mov
mov
daa
adc
sub
jge
xor
and
loopne
and
rorb
inc
je
popa
push
sub
in
not
adc
pop
imul
push
jo
and
cmp
push
mov
aaa
aad
cmp
rolb
inc
or
jmp
pop
pop
jmp
dec
icebp
cli
fldenv
pop
sub
aam
mov
pop
pop
push
scas
add
enter
xor
adc
dec
jno
inc
adc
or
ds
mov
dec
jp
pop
add
add
ret
push
pop
mov
push
or
push
daa
jmp
outsl
mov
in
adc
cmp
jnp
inc
jae
jmp
xor
fnsave
shl
pushf
xlat
push
sub
pop
ljmp
or
mov
mov
xchg
loopne
mov
push
xor
out
jns
add
pop
js
pop
movb
cld
cwtl
mov
cmp
sub
dec
add
sub
cmp
xchg
mov
adc
push
jns
addl
jmp
push
mov
jmp
popl
sahf
lds
das
pop
xchg
fwait
xchg
adcl
mov
cmp
jmp
les
adc
jge
shll
imul
add
fwait
jmp
push
dec
rorb
gs
sub
add
js
push
push
push
and
xchg
insb
loop
cmp
add
or
enter
jge
xchg
int
std
out
inc
mov
dec
aaa
sbb
cmp
adc
xor
dec
mov
daa
into
jle
subl
sbb
not
jmp
adc
dec
cs
ret
add
aad
push
in
mulb
add
and
bound
pop
jnp
clc
cmpsl
movzbl
add
or
cs
xchg
adc
insb
and
cwtd
sbb
sub
adc
and
scas
dec
sbb
sbb
orl
or
out
add
fidivrl
inc
les
adc
push
outsl
movsl
cmp
sub
cmp
or
jmp
data16
cli
pop
jmp
js
pop
loope
mov
sub
mov
lret
sub
leave
and
xchg
daa
lods
das
or
fs
sub
fnstcw
push
push
jg
mov
les
loopne
inc
or
or
or
icebp
pop
adcl
lret
or
sbb
in
lret
push
pop
pop
dec
add
ljmp
dec
rcrb
and
adc
adc
int
in
pop
xor
ret
jp
pop
jecxz
ss
adc
sub
sub
or
add
mov
addr16
push
add
loop
xor
imul
fiaddl
inc
pop
sahf
fs
subb
push
mov
add
lods
sbb
or
lea
sbb
add
lds
cli
pop
repnz
mov
inc
mov
mov
ja
loope
xor
outsl
lahf
dec
jno
xor
add
inc
dec
jmp
nop
push
sub
pop
rcll
inc
xlat
inc
mov
cmp
push
push
push
dec
mov
add
fcoml
xor
movl
in
out
rorb
fsubrs
cld
icebp
pop
mov
jae
adc
call
outsl
adc
arpl
int
jo
sub
sub
cli
cmp
shr
mov
add
and
lret
movl
or
dec
js
inc
push
out
andl
fptan
icebp
push
jno
insb
cmp
adc
in
int
add
pop
push
sub
mov
mov
xlat
or
xchg
mov
repz
insl
xchg
dec
shrl
sbb
jmp
or
or
aas
imul
mov
or
std
mov
cmpl
lahf
add
cmp
cmpsb
movups
mov
xorl
push
out
add
lea
and
push
and
cmp
push
out
pop
imul
fidivrs
mov
mov
repz
bound
sbb
shr
addl
neg
inc
cwtl
push
mov
jbe
movsb
inc
popf
orb
ret
repnz
jb
adc
add
push
imul
dec
mov
mov
inc
int
sub
xchg
add
push
ret
sub
sub
mov
push
out
stc
inc
das
outsl
cld
xor
sarb
dec
cli
call
popa
push
push
jmp
and
insl
daa
lods
daa
ret
ss
add
cmp
add
push
daa
shrb
ljmp
or
pop
jge
insb
movb
sbb
rolb
push
cmp
add
loope
inc
or
jg
adc
mov
xor
or
xor
xor
push
or
mov
sub
ds
adc
mov
mov
jo
pop
rol
jmp
in
ljmp
rclb
inc
push
subb
dec
ljmp
mov
add
xchg
jl
dec
add
pop
orb
sbb
sbb
outsb
imul
mov
or
push
push
and
adc
jge
add
push
push
sub
repz
sub
push
xchg
test
and
loopne
popf
adcl
call
adc
push
rolb
aas
push
push
les
int3
dec
jl
add
ret
xchg
xchg
adc
dec
jmp
pop
xor
mov
jb
dec
test
inc
add
push
or
jmp
dec
call
out
mov
adc
mov
sub
pop
test
mov
adc
add
xor
push
add
push
rorb
in
inc
mov
push
dec
mov
lods
add
aad
xor
in
negb
mov
xchg
push
mov
jp
xor
pop
sub
dec
sbb
stc
sub
add
add
sbb
stos
sub
xchg
sbb
and
shr
leave
push
adcl
or
add
sub
icebp
in
xor
aam
adc
adc
adc
add
or
pop
neg
add
and
xor
jno
adc
jmp
movsb
jne
cmp
dec
push
or
and
pusha
mov
int
cmp
mov
lcall
dec
popf
xchg
sub
inc
jp
dec
mov
push
outsb
in
push
xor
repnz
add
pop
add
mov
stos
pop
add
push
or
jmp
out
ds
dec
or
shlb
and
jb
pusha
jb
cmp
or
es
or
lret
cli
insb
cs
or
inc
sahf
push
push
mov
fisubrs
or
or
pusha
pop
adc
repz
sub
pusha
pop
mov
inc
aaa
or
movsl
and
pop
jmp
addr16
nop
xor
xlat
mov
pop
or
sub
inc
test
add
loop
add
sbb
add
rolb
inc
push
and
iret
in
jmp
xchg
sbb
sarb
andl
cmp
ljmp
add
fdivs
es
mov
push
mov
or
and
testb
xchg
xor
imul
out
movsl
jnp
adc
and
pop
add
sub
push
out
push
pop
push
sar
cs
mov
mov
out
es
mov
adc
sbb
add
push
lock
xchg
xor
pushf
or
add
sbb
rcr
xlat
jmp
je
sbb
push
push
inc
jmp
subb
lea
in
imul
test
adc
mov
iret
shlb
shl
addb
jbe
shlb
pop
jmp
jl
int
add
out
xchg
sub
cli
add
mov
add
pop
jmp
repnz
cmp
push
xor
xor
pop
shll
leave
shlb
out
jmp
adc
in
pop
inc
mov
cmp
pop
sub
cmp
sub
imul
mov
xlat
push
jnp
mov
sbb
dec
sub
aas
push
sub
xor
dec
sbb
aam
jmp
xorl
loopne
imul
dec
add
aaa
out
add
subl
add
in
pop
sub
int3
lds
inc
and
inc
xor
push
pop
mov
add
xor
add
jb
xchg
push
push
in
sub
ficomps
push
inc
xor
cld
jae
pop
jmp
js
xor
and
jnp
push
and
xor
scas
inc
inc
mov
cmp
mov
shr
pushf
push
cmp
adc
loope
ret
add
dec
sbb
iret
adc
into
xchg
add
popa
shrb
add
adc
pop
negb
out
sahf
cmp
mov
dec
popa
add
jmp
push
mov
stos
ficomps
pop
mov
xchg
rcrl
cmc
adc
adc
pop
daa
incb
test
push
sahf
loopne
iret
mov
ret
pop
inc
clc
mov
add
fs
cmp
mov
mov
push
push
pop
out
and
dec
jb
dec
adc
or
push
mov
lds
mov
push
daa
mov
fcomp
daa
mov
lock
mov
jb
rcrl
les
std
jne
roll
jl
out
pop
sub
pop
lds
xchg
arpl
sub
ret
xchg
jg
loop
jns
dec
mov
pop
xchg
rcr
jmp
cld
mov
push
add
notl
pop
sub
inc
mov
gs
add
popa
addb
loope
outsl
cs
test
push
and
inc
dec
sbbb
sbb
or
mov
andb
hlt
pop
into
ficoms
movsl
mov
sbb
iret
xchg
clc
pop
push
mov
inc
push
dec
les
pop
loope
inc
sub
test
mov
ret
xor
fdivrs
xchg
mov
fdivs
dec
in
fmul
stos
inc
cs
sbb
add
js
mov
aaa
cs
aas
shll
xchg
xchg
mov
lods
push
or
and
and
not
inc
or
ljmp
pop
lock
pop
adc
sub
data16
lret
add
popa
icebp
sub
xor
movsl
in
mov
sarl
dec
inc
shll
adc
cmp
or
scas
and
insb
xchg
icebp
push
mov
mov
imul
adc
add
cmp
fisubl
imul
jecxz
push
pop
dec
inc
push
add
jae
aaa
pop
mov
mov
rorl
not
push
add
into
cmp
sub
and
jmp
movsb
outsb
mov
xor
je
xchg
int
aam
add
invd
add
orb
add
lea
xor
add
test
sarb
push
outsl
add
xor
arpl
push
rorb
mov
sub
lods
xchg
ret
add
and
inc
jae
imul
dec
pop
outsb
mov
pop
lret
sub
pop
push
and
jg
mov
jne
push
popa
lcall
add
sub
subl
jne
push
icebp
adc
or
pop
add
mov
mov
dec
out
addl
addl
out
xor
xor
or
or
or
jnp
sub
add
bnd
add
std
cmc
sub
mov
insb
or
inc
cmpb
adc
and
imul
lds
xchg
push
inc
insl
jb
and
ret
stc
push
dec
arpl
popa
mov
adc
cmp
or
xor
pop
jmp
mov
push
das
xchg
adc
push
aas
push
pop
orb
xchg
imul
das
cmp
mov
add
pop
rclb
inc
xchg
mov
cmp
popa
add
call
xor
int3
es
or
nop
stos
loopne
sub
int
inc
fs
fisttpll
add
sub
xchg
adc
mov
dec
mov
add
jge
cmpb
mov
push
push
push
enter
sub
and
in
pop
jno
addb
sub
test
iret
inc
out
pop
mov
jmp
faddp
mov
rcrb
mov
dec
sub
xor
jmp
mov
out
fidivrs
pop
ret
mov
cmp
jmp
sub
insb
jl
or
jmp
sti
xchg
pop
inc
mov
dec
mov
cmp
fs
push
xchg
mov
movsb
dec
ficomps
xchg
lods
sarl
jge
leave
mov
outsl
fs
mov
stc
addl
add
sub
arpl
gs
dec
jns
push
in
ss
insl
push
pop
cmpl
or
imul
cmp
bound
add
inc
mov
int3
adc
dec
dec
and
mov
add
lds
mov
xor
cmp
or
cmp
aaa
push
jns
adc
jmp
or
push
imul
ret
fsts
dec
xchg
fs
shl
test
pop
inc
sub
mov
pop
cmpsl
dec
ror
lds
es
jnp
xorb
dec
add
mov
out
add
cs
xor
les
or
jl
and
out
cld
inc
pop
pop
pop
jmp
into
inc
mov
adc
lea
adc
sub
jmp
or
or
adc
scas
out
push
sub
inc
dec
arpl
ljmp
cmp
clc
fs
or
xor
sarl
adc
jno
out
pop
jno
and
or
cmp
push
or
or
mov
push
call
add
je
clc
stc
xchg
sub
push
or
mov
out
nop
into
jl
sbb
adc
pop
push
push
push
pop
xor
sbb
cwtl
in
pop
aam
lds
or
add
fisubrl
inc
adc
cmc
jae
xor
inc
sbb
je
cwtl
add
es
xlat
jne
mov
push
dec
mov
icebp
gs
xchg
pusha
data16
mov
add
jmp
orb
movsb
int3
and
dec
repnz
add
bound
pop
fisubl
jge
and
and
xchg
dec
jmp
clc
sahf
mov
push
inc
inc
cmpsb
add
mov
dec
fcoms
sub
cmpsb
rcrl
push
inc
cmp
jecxz
inc
ds
add
or
xorl
rdmsr
loopne
sub
addr16
adc
lcall
in
add
inc
andb
fists
and
in
add
packsswb
fisttpll
pop
push
and
movsb
es
cmp
loopne
add
add
jmp
mov
and
mov
jae
int3
dec
mov
maskmovq
in
add
loopne
add
outsl
mov
pop
sub
pop
shrb
nop
add
push
ret
jg
adc
sbb
push
mov
mov
dec
jb
dec
pop
fstpt
jo
add
test
inc
int3
adc
sub
sbb
adc
test
gs
mov
jecxz
sub
mov
inc
jl
dec
fldenv
je
push
pop
sub
pop
les
adc
fmull
xor
push
or
mov
jbe
jge
or
adc
mov
idiv
xchg
rcrl
jno
mov
add
push
lds
daa
sbb
ja
clc
imul
fs
clc
cs
pop
popf
push
xchg
xchg
addb
jns
fmull
add
or
into
lock
pop
pop
lea
cmp
jmp
loopne
not
push
leave
outsb
xchg
jno
xchg
fwait
js
or
outsb
mov
add
dec
or
or
jl
dec
push
and
jb
and
les
push
cmpsl
inc
jae
mov
xchg
fists
push
in
jo
iret
pop
xor
mov
popa
push
jmp
adc
jbe
mov
fimull
mov
mov
push
jp
and
fs
mov
adcb
push
inc
inc
sub
stc
pop
or
push
jmp
xor
jmp
push
pop
mov
xchg
xor
mov
xchg
repnz
add
jle
add
test
pop
or
test
adc
sbb
out
fwait
sbb
sub
jle
adc
and
mov
inc
add
push
nop
sbb
xchg
dec
daa
xchg
xchg
cmp
ja
dec
fs
add
add
mov
movsl
inc
add
dec
lods
add
and
push
xchg
inc
mov
pop
add
lahf
xchg
cmp
fistps
ja
icebp
sbb
ja
xor
mov
shll
outsl
adc
mov
jg
popf
and
inc
or
cwtl
pop
cmc
push
sub
ret
or
add
adc
sbb
jmp
scas
into
lods
add
out
and
inc
add
add
jns
xor
pop
dec
jmp
xrelease
shll
inc
mov
pop
mov
jmp
add
pop
pop
shl
sub
pop
lea
daa
je
adc
aas
push
fldenv
testb
cld
dec
mov
add
aad
cmp
mov
and
xor
pop
mov
dec
es
sbb
lret
leave
xor
jp
gs
out
add
push
jmp
inc
jecxz
fs
and
popa
mov
cmp
test
addr16
xor
pop
dec
ret
push
sub
dec
loope
call
adc
inc
pop
pop
and
cwtl
cmp
xchg
push
add
xor
and
cltd
or
je
push
out
insb
nop
and
dec
sbbb
popf
pop
cmp
das
sub
ficoml
xchg
or
or
push
jnp
or
push
fcoml
dec
add
pop
cmpl
cwtl
xor
lods
adcb
pop
int3
outsl
leave
sbb
or
cld
adc
add
cmp
pop
or
push
sbb
push
movlps
int
div
dec
cld
repz
pusha
addr16
sarl
xor
inc
addr16
aad
cwtl
scas
add
xchg
add
inc
mov
adc
jns
sahf
in
das
fwait
inc
ret
xchg
daa
sub
ror
push
cmpl
cmp
or
dec
int3
adc
insl
pop
xor
in
loopne
jne
cmc
dec
pusha
enter
push
pop
hlt
and
cli
pushl
les
jns
lods
bound
hlt
or
jmp
dec
add
in
dec
in
or
insl
enter
test
pop
scas
xor
ret
test
insb
dec
les
cs
push
cmp
enter
repz
inc
and
outsl
clc
faddp
test
push
inc
pusha
inc
call
sub
repnz
stc
add
clc
roll
push
cmp
pop
pop
mov
sub
jbe
gs
in
fstpl
leave
push
or
icebp
and
or
or
sbb
mov
data16
sub
iret
xor
push
ds
push
std
loopne
xor
into
push
mov
paddsw
std
sbb
pop
adcb
jmp
add
repz
clc
or
icebp
jno
loope
dec
push
push
or
jb
mov
clc
test
pop
xor
or
mul
push
dec
push
or
or
and
adc
test
dec
hlt
popf
mov
add
push
push
push
mov
pop
mov
inc
push
pop
push
mov
stc
loope
nop
inc
pop
shl
sub
mov
sbb
outsl
fidivrl
cmp
mov
inc
and
fwait
sti
add
ficomps
jp
xchg
xlat
lock
mov
xor
mov
sub
sub
lods
sub
dec
xchg
insb
dec
js
or
dec
cmp
lahf
xor
subps
cmpb
pop
aad
cmp
jmp
mov
negb
jb
mov
inc
fs
xchg
rcll
stos
dec
or
fucom
xchg
push
push
mov
add
push
mov
add
jmp
paddw
inc
test
sar
push
or
mov
fs
and
vpsubsw
rorl
pop
lea
lods
mov
sub
adc
arpl
pop
repz
out
mov
lods
mov
out
movsl
sbbl
lods
insb
pop
xchg
xor
sub
xor
int3
push
xor
pop
loopne
sub
and
imul
sbb
rcrl
push
add
dec
shr
lods
adc
pop
push
xchg
add
lds
push
mov
aam
and
sbb
inc
jnp
cmpsl
movsb
enter
pushf
repz
ror
insl
add
push
push
das
jmp
lahf
bound
inc
lods
xor
xchg
into
mov
sub
add
or
inc
jecxz
pop
push
or
bound
mov
insb
lods
add
mov
cmp
push
nop
bound
fstps
and
jmp
jmp
push
push
xor
xor
sbbl
and
cmpsl
jmp
movsb
add
fistps
push
xchg
lret
jmp
cld
push
data16
mov
mov
neg
mov
inc
adcb
rcrl
xchg
repnz
negb
and
and
add
xlat
fstl
sarl
jecxz
vmovd
lcall
sbb
loope
mov
add
loopne
fidivrs
adcl
pop
sbb
push
mov
pop
xchg
insl
fimuls
sub
rep
push
push
es
xchg
cltd
dec
push
mov
les
pop
add
test
dec
call
bnd
fisubrl
shlb
mul
bound
adc
dec
sbb
in
inc
mov
mov
push
sub
loopne
icebp
cmp
mov
or
ljmp
je
rclb
mov
pop
mov
xor
or
out
inc
push
daa
xchg
push
cmp
lret
mov
add
scas
dec
xor
fsubrs
out
aad
mov
cmpb
sub
jg
jne
or
push
ds
push
daa
mov
pop
leave
jmp
inc
jle
add
pop
xlat
outsl
orl
insb
cs
in
and
pop
stc
scas
push
lcall
outsb
adc
ret
out
data16
pop
adc
mov
movsb
je
dec
or
or
jg
cmpsb
cmp
mov
xlat
and
cmp
xor
dec
push
enter
loop
or
mov
repz
add
mov
faddl
hlt
imul
pop
push
test
pop
push
mov
jge
pop
sarl
xor
xlat
pop
inc
mov
pop
not
rcrl
add
ja
ds
aaa
inc
stos
push
pop
jbe
movsl
jle
sub
and
inc
cltd
pop
add
sbb
loop
cmpl
sub
pop
jp
and
stos
pop
hlt
lods
ret
mov
pop
addb
inc
push
push
pop
xor
scas
inc
mov
inc
or
sahf
add
mov
xor
repnz
push
in
sarl
add
add
int
and
mov
sbb
lds
or
cld
das
and
or
or
dec
xor
pop
sub
pop
cmp
daa
sub
jne
sbb
xchg
mov
push
mov
pop
xlat
sub
mov
js
pop
int
jp
jne
subb
rcll
xlat
dec
and
and
movsl
push
jge
mov
inc
pusha
js
pop
cmp
ds
xor
insl
mov
outsl
popf
pusha
cmc
sub
nop
imul
sbb
or
push
xor
mov
cmp
arpl
sub
cmpsl
inc
inc
adcb
xor
xchg
seta
jmp
jge
sbb
push
aad
shl
prefetchwt1
shrb
rorl
mov
dec
repnz
inc
lods
pusha
mov
mov
xor
addr16
mov
mov
and
aaa
lret
fisubrl
roll
jne
push
shr
cmp
push
jbe
outsl
dec
fstps
pop
and
test
or
pop
lods
je
std
sbb
divb
mov
fdivs
pop
loop
loop
test
test
adc
adc
mov
push
out
push
mov
pop
push
loopne
or
mov
xor
cld
sbb
repnz
sub
push
cli
movsb
mov
mov
loopne
lock
arpl
adc
pop
data16
adc
rol
movzbw
addr16
fimull
jmp
jle
imul
mov
repnz
or
mov
add
in
add
inc
out
cmp
dec
insl
xor
hlt
stos
inc
mov
fwait
and
scas
and
jle
jecxz
or
test
mov
jmp
xchg
dec
sub
inc
push
mov
xor
les
repz
ret
xor
pandn
ficompl
loop
mov
adc
repnz
push
mov
mov
mov
les
xor
sbb
call
aam
add
mov
fdivl
das
inc
xchg
ret
pusha
push
cld
js
loope
cmpsl
sub
push
mov
inc
call
lret
or
sub
pushf
mov
rorl
jg
ret
sub
or
cli
mov
fucomip
in
xchg
repnz
xchg
dec
add
aam
into
dec
pop
mov
shrb
adc
sbb
data16
jl
lods
push
dec
out
inc
push
or
mov
xchg
addr16
mov
dec
mov
push
movsl
imul
sbb
negl
inc
add
icebp
sub
push
int
mov
in
push
mov
dec
ret
inc
xchg
lock
xchg
adc
add
shll
scas
lods
daa
push
mov
dec
pop
jl
repnz
xor
jmp
jl
adc
adc
add
jg
push
push
push
push
gs
mov
sub
jnp
mov
or
add
loope
je
sub
cmc
repz
aas
add
pop
add
in
fwait
jne
or
sub
inc
jne
pop
jae
or
mov
ret
push
test
in
pop
test
pop
mov
xor
mov
xor
or
mov
sar
shl
shr
rorb
mov
jmp
cmpb
pusha
ds
mov
inc
cli
cmp
dec
add
test
and
cmp
mov
mov
push
lods
repz
sub
lods
dec
dec
iret
pop
aad
and
arpl
cs
mov
or
jmp
je,pt
pop
mov
xor
push
push
pushf
jge
imul
pushf
inc
imul
btr
xor
mov
daa
sub
fsubrs
or
repnz
mov
add
inc
bound
notl
cwtl
inc
and
rolb
xor
jbe
add
stos
and
xchg
xchg
and
sbb
mov
xor
mov
and
or
rcrl
inc
push
ss
push
mov
inc
pop
daa
mov
xor
adc
sahf
outsb
dec
and
push
pop
xor
ffree
in
fimuls
imul
pop
jmp
dec
jmp
cmp
mull
or
add
enter
loopne
jnp
mov
xlat
pop
dec
pop
sbb
lret
imul
push
jmp
sbb
jmp
cltd
ja
into
into
mov
pop
push
pop
pop
mov
pop
dec
xor
es
test
push
mov
pop
add
pop
insb
pop
or
add
lret
sub
popa
je
inc
add
fiaddl
mov
inc
ret
push
lods
push
aad
or
mov
inc
dec
jg
add
mov
sahf
dec
out
or
sbb
mov
dec
mov
push
push
sub
imul
clc
das
mov
sar
stos
inc
cwtl
mov
and
sub
sbb
shr
dec
xor
cmp
and
jmp
mov
push
xchg
sbb
xor
xchg
xchg
pushw
adcl
jl
push
js
jge
or
shr
or
add
jmp
popf
mov
das
pop
inc
push
leave
adcb
mov
sti
mov
ret
fnstcw
leave
jns
inc
sub
bound
mov
cmp
add
ljmp
sub
add
or
pop
neg
dec
mov
les
fimuls
icebp
js
and
push
sbb
jbe
fwait
xchg
ljmp
add
push
stos
shlb
mov
sub
and
outsl
adc
pop
jne
adc
push
dec
enter
pushw
push
jne
push
adc
add
cmp
push
loope
aaa
add
aam
pop
adc
mov
leave
dec
sub
and
push
pop
pop
cmp
idiv
mov
add
lock
xchg
notl
inc
push
add
mov
dec
jno
cmp
adcb
cmp
mov
out
pop
push
icebp
div
ja
scas
xchg
xor
pop
mov
popf
inc
aad
in
push
shrb
jmp
addb
bound
cmp
and
sahf
loop
or
je
clc
pop
daa
pop
shll
leave
inc
mov
aad
mov
aam
dec
xor
sub
push
dec
sub
jg
enter
push
and
mov
add
ds
inc
and
inc
je
add
movsb
inc
leave
sbb
shll
rclb
in
xor
fildl
std
stc
jnp
je
js
mov
fists
adc
cli
cld
xor
xor
sub
lahf
xor
cmp
outsl
data16
or
movsb
fadds
and
sub
popf
jg
jp
ljmp
daa
inc
js
cmp
cmp
mov
out
jg
sarl
pop
popa
push
iret
jl
test
jmp
das
subb
mov
pop
pop
lahf
ret
inc
mul
push
push
mov
pop
pop
push
repnz
add
lock
xor
and
inc
add
rcll
pop
dec
adc
in
xor
jg
mov
mov
clc
and
clc
push
add
jmp
sub
add
push
rorb
jo
jns
mov
mov
rcrb
inc
adc
push
push
movsb
lcall
or
mov
mov
xchg
sub
jmp
pop
mov
mov
xchg
pop
and
add
sbb
add
dec
sahf
adc
fdivs
mov
mov
mov
out
push
bound
or
mov
sub
fisttpl
test
cmp
into
popa
jmp
js
lret
adc
add
fdivl
dec
insl
or
jbe
mov
sbb
lcall
repnz
jl
ja
in
sahf
clc
inc
push
pusha
inc
loope
js
jns
rcrb
ret
dec
jnp
push
in
cmpsb
sub
xor
sub
pop
cmp
or
lret
enter
dec
add
scas
jne
cmp
repnz
mov
jbe
cmp
out
cmp
outsl
xor
rcrb
inc
add
enter
loopne
mov
add
inc
rclb
inc
mov
or
cmp
iret
mov
clc
adc
mov
adc
cmp
shr
mov
sub
pop
cmp
mov
mov
nop
pop
or
xor
adcl
clc
das
add
mov
shr
pop
data16
pop
call
push
in
mov
mov
dec
pop
aam
push
dec
repz
dec
and
jmp
int
or
in
neg
ljmp
cmc
lahf
adc
jge
and
mov
rorl
add
jmp
dec
push
popl
dec
pop
fs
and
xchg
das
test
dec
imulb
insb
mov
add
adc
adc
sbb
stc
ds
cwtl
dec
adc
loop
xchg
xor
fsub
mov
adc
fwait
mov
push
pop
push
fwait
sarb
push
xor
jmp
rorb
mov
xchg
leave
nop
jmp
addr16
cmp
pop
mov
adc
xchg
push
push
jg
and
out
push
add
dec
inc
dec
adc
sbb
sub
std
icebp
push
inc
sub
mov
jb
dec
xchg
xor
fs
lea
insb
push
cmp
incl
mov
mov
and
popf
andl
sub
or
ljmp
and
pop
pop
popf
mov
xor
push
jle
xchg
add
mov
dec
dec
dec
cltd
jnp
cltd
in
pushf
imul
data16
adc
enter
and
orb
pop
lea
or
loope
sub
sbb
icebp
cmpsl
adc
pop
sub
or
insb
jno
cmp
xor
cmc
in
loop
add
pop
stos
and
out
scas
jns
inc
ret
addb
lcall
sbb
mov
mov
jmp
or
inc
enter
mov
stos
or
daa
sub
clc
inc
sub
lahf
mov
iret
pop
shr
xor
daa
rolb
or
xchg
push
and
lock
ret
add
mov
jno
or
mov
xor
jbe
leave
add
mov
pop
pop
adc
xchg
sub
shlb
fcomi
push
imul
xchg
dec
cmp
cmp
or
cli
add
mov
mov
daa
js
cmp
sub
adc
mov
add
sbb
xchg
xor
shl
mov
jmp
mov
push
les
push
andl
ljmp
and
fdivl
pop
test
bt
les
pop
mov
xor
sub
mov
sbb
pop
lock
mov
jnp
push
dec
sub
pop
lods
sub
sbb
push
std
cmp
aad
icebp
xchg
cmpsl
inc
inc
shrl
sub
push
mov
out
daa
jo
dec
add
shlb
test
and
mov
pop
push
dec
push
add
rclb
shll
out
stos
data16
mov
jo
xchg
adc
into
out
pop
inc
mov
pusha
fmull
arpl
in
sub
or
sub
sub
cmp
pop
adc
or
movsl
in
jmp
or
push
cld
cwtl
bound
pusha
push
out
mov
xchg
add
adc
sbb
push
jmp
subl
or
adc
lods
jns
and
mov
aas
divb
scas
lds
xchg
xchg
or
or
jmp
daa
int
addr16
in
ja
shl
push
call
mov
clc
lret
adc
inc
inc
dec
push
xor
ficoml
mov
rcll
add
push
inc
inc
lea
fcoml
ret
test
add
and
or
dec
repz
mov
hlt
data16
iret
inc
mov
test
jne
push
mov
xchg
syscall
mov
xor
inc
sub
push
mov
sub
test
push
pushw
bnd
or
lret
adc
push
sub
dec
dec
std
adc
int3
pop
mov
add
and
fistps
rcrl
xor
or
outsb
pop
cmp
push
lret
and
mov
mov
out
shrl
sarl
clc
inc
mov
push
add
pop
iret
nop
jo
and
mov
sbb
repz
push
xchg
inc
or
repnz
cmc
es
push
cmp
les
fs
mov
mov
add
in
es
ds
lret
sub
add
push
jmp
neg
xor
outsb
push
and
pop
inc
cltd
ds
mov
in
addr16
clc
jae
jmp
aas
add
cltd
dec
mov
cmp
std
das
imul
push
push
mov
jl
mov
gs
sbb
mov
xchg
jle
xchg
xor
sti
ud1
jnp
or
and
mov
dec
jle
xor
mov
aad
add
or
xorb
xor
jl
and
xchg
add
push
mov
add
filds
jge
dec
pop
ret
inc
push
push
js
mov
incb
jmp
or
lea
sub
pop
mov
loope
push
xor
cli
add
movsb
and
pop
xor
pushf
cld
and
inc
mov
xor
jmp
roll
pop
insb
scas
shll
outsl
jbe
cmc
or
sbb
push
inc
mov
sbb
jo
sub
or
jno
lahf
inc
aad
loope
fstpl
mov
pop
nop
icebp
shrb
dec
dec
ds
mov
xor
es
add
xor
add
pop
das
jmp
push
in
push
test
mov
dec
mov
add
pop
push
mov
jle
or
cmovno
pop
shl
xor
add
mov
pop
int
aas
inc
scas
ja
aam
or
push
jle
das
sbb
pop
lret
adc
inc
scas
mov
xorb
lret
sbb
sub
mov
sub
or
mov
pop
rcrb
or
outsl
outsb
gs
jl
mov
jbe
jne
jmp
arpl
pop
repz
jmp
sub
cmp
je
push
stos
addb
add
call
or
xchg
and
inc
inc
or
and
xor
sub
ret
jp
loope
add
pop
sub
aaa
push
inc
outsb
mov
stc
push
pop
pop
adc
push
jmp
cmp
dec
hlt
push
pop
out
testl
sub
push
mov
sub
pop
cmp
and
mov
cmp
or
cld
or
jno
adc
xor
icebp
lcall
adc
push
mov
scas
js
aaa
inc
mov
dec
mov
inc
pushf
mov
dec
push
sub
jmp
pop
jns
repnz
jp
sub
mov
push
out
add
loope
inc
or
test
pop
or
mov
fnstenv
adc
movsl
mov
dec
mov
push
adcb
loopne
push
cld
jbe
sub
sub
push
push
sarb
pop
data16
ljmp
out
mov
pop
popa
aaa
push
sub
and
fs
ret
push
push
aas
adc
xor
test
fistl
lea
cmp
xor
push
add
jo
insb
mov
inc
rorb
daa
lods
mov
xor
outsl
inc
mov
iret
sbb
out
stc
fdiv
aaa
mov
inc
mov
mov
pop
add
sub
cs
pop
sbb
add
jecxz
popf
loopne
jge
je
cmp
lret
mov
xor
and
or
lods
hlt
jbe
sub
push
xchg
ljmp
sbb
jp
or
hlt
loopne
cwtl
lcall
push
dec
add
not
rcrl
cs
popf
dec
mov
insl
sub
xor
test
inc
mov
xor
dec
ss
mov
out
cmp
sub
fwait
nop
mov
gs
add
sub
inc
xor
jbe
push
mov
or
dec
xlat
or
sub
jns
jmp
sub
stc
stc
pop
push
loope
in
sub
pop
daa
loopne
not
out
cmpb
lret
inc
adc
sub
rorl
jle
cli
sbb
jle
sbb
add
or
jmp
mov
add
sbb
jb
push
cli
divl
daa
stc
ja
mov
dec
push
into
test
pop
push
ficompl
or
mov
add
inc
jmp
pop
aad
jbe
mov
cmp
jae
insb
inc
inc
icebp
dec
push
std
xchg
or
stos
xchg
test
pop
in
dec
xchg
xchg
jmp
imul
sahf
in
shll
repnz
cmpsb
jae
push
js
pop
sub
jge
and
pop
inc
mov
out
rcr
in
or
dec
scas
pop
push
rol
inc
movsb
shr
pop
cmpsb
add
js
les
daa
js
add
mov
cmp
add
jbe
mov
negb
int
das
and
xchg
into
mov
add
ds
lahf
sbb
ret
pop
repnz
lret
push
sub
sbb
push
jmp
sbb
loop
shlb
ds
push
das
jno
sbb
cmp
pop
add
mov
add
fwait
pop
add
loop
add
jmp
inc
push
dec
adc
shrb
mov
test
addb
enter
and
cmp
popa
shl
push
dec
and
xchg
and
gs
add
jns
gs
int3
fsts
repnz
pusha
rorb
imul
ja
mov
int3
push
inc
mov
shll
ret
pop
sbb
rclb
sub
jo
movsb
leave
push
and
mov
push
add
mov
loope
and
cmp
push
add
popf
jbe
or
dec
push
mov
cwtl
rol
mov
push
ljmp
inc
mov
mov
stos
jle
push
orb
or
add
add
in
aad
nop
sbb
aad
mov
fmuls
jecxz
xor
pop
outsb
sub
mov
inc
and
pop
push
leave
sbb
jge
inc
sub
and
push
icebp
nop
sub
dec
jne
lcall
xchg
jnp
cmc
xor
pop
out
or
bound
loope
and
sbbl
shrb
inc
mov
jmp
xchg
add
push
sub
jmp
xor
popf
cwtl
sbb
subb
inc
mov
mov
jge
mov
mov
loope
sbbl
testl
mov
sub
push
addl
sub
xchg
push
xlat
daa
pop
push
pop
jp
sbb
dec
xchg
xchg
xor
pop
scas
fisttpll
push
push
lahf
insb
jp
shll
stos
mov
rcrb
cmp
inc
fisttpl
shr
loop
ds
fisttpll
push
and
jbe
xor
imul
pop
sub
loop
dec
test
ljmp
mov
or
dec
fisubrs
xchg
fstpt
inc
and
subb
mov
xchg
xchg
sub
inc
inc
mov
inc
jmp
push
mov
push
orb
clc
je
jo
lret
or
xorb
add
nop
jl
arpl
xchg
push
push
push
push
ss
pop
mov
cmpl
add
sub
nop
out
push
add
push
or
fdivp
inc
push
xchg
xchg
popl
xchg
xor
inc
adc
std
jle
sbb
ret
call
sti
jne
sti
sub
inc
cmpsl
xchg
clc
or
jo
add
inc
sub
or
lret
mov
int
push
push
jmp
push
or
pop
and
xchg
dec
mov
jo
sub
hlt
fists
jmp
adc
sub
push
mov
cltd
xchg
lods
pop
and
add
and
add
test
int3
js
push
sbb
shl
add
or
sti
pop
push
andb
sub
mov
enter
rcrb
fildll
jg
push
adc
cmp
xchg
out
and
adc
sbb
jecxz
sub
pop
jl
sub
pop
repnz
pushf
stos
mov
jmp
testb
adc
jne
pop
arpl
or
sub
hlt
das
lds
cmpsb
fwait
pop
ja
aaa
pop
ret
lahf
inc
jge
psubd
or
jae
push
pop
mulb
push
push
pushf
pop
mov
dec
mov
or
jne
gs
adc
repnz
cmp
das
inc
or
das
pop
or
sub
sahf
inc
mov
js
loope
inc
test
lods
aam
leave
sbb
cmp
sarb
adc
int
nop
add
test
add
out
fidivrs
lods
cmp
je
mov
lcall
add
jns
adc
or
jns
sbb
sbb
loop
out
imul
xchg
fs
sbb
rorl
or
cmpl
outsl
clc
xor
mov
loope
pop
jge
sarb
pop
sub
push
fstpl
shll
jle
dec
dec
and
add
incb
adc
add
sub
into
inc
imul
or
add
push
cmp
les
pop
xchg
fldcw
ja
mov
pop
and
jmp
in
jg
rclb
pop
fidivl
lret
das
add
sti
mov
pop
add
sbb
and
dec
gs
add
add
jle
mov
mov
mov
push
aas
imul
dec
arpl
xchg
jmp
cmp
gs
jp
cmp
enter
adc
add
fmull
push
xchg
test
ficoml
or
push
loopne
mov
mov
add
les
fidivl
nop
daa
rorl
or
mov
mov
xor
cmp
push
scas
push
rolb
sub
out
push
push
mov
movsl
or
jne
data16
repnz
adc
push
test
xlat
add
pop
shlb
push
pop
push
mov
and
and
in
adc
xor
adc
call
mov
shrb
jmp
shlb
pop
lock
cmp
dec
pop
dec
mov
xchg
mov
andl
sub
and
mov
cmp
pop
mov
xor
cmp
pop
dec
ret
cmp
or
adc
sub
fnstcw
cs
roll
xchg
int
scas
adc
push
out
imul
js
xchg
mov
insl
js
lahf
and
add
outsl
sub
cmc
or
push
mov
push
or
push
sub
mov
filds
xchg
xor
movsl
jecxz
outsb
inc
in
scas
jge
or
pusha
push
dec
add
mov
xor
and
push
popa
dec
xchg
push
cmc
xorb
daa
repz
mov
bsr
rolb
inc
test
fcmovnbe
inc
mov
pop
mov
xor
xor
push
test
and
adc
mov
mov
sarl
enter
sti
pop
mov
or
ljmp
sbb
inc
jne
inc
shl
add
call
int3
repz
cmp
les
adc
push
aad
aas
adc
arpl
in
dec
jno
cmp
rorb
clc
dec
bnd
pop
mov
xor
mov
lock
inc
test
push
lds
mov
push
out
scas
add
fnstenv
dec
scas
ja
xchg
pop
out
and
and
lea
xchg
repz
cld
dec
xchg
orb
rolb
repz
mov
in
lcall
lret
mov
add
push
nop
rcrb
mov
pop
push
adc
mov
sahf
icebp
pop
jmp
adc
leave
movsb
pop
aaa
xor
sahf
cmp
push
cltd
mov
test
lret
mov
int3
dec
sub
aas
shrb
pop
das
neg
add
aad
cld
and
or
je
jbe
jne
xchg
dec
lahf
push
stc
out
jge
push
pop
pop
shll
sahf
and
shlb
add
pop
jmp
fidivs
adc
ja
pushf
xchg
js
scas
mov
test
imul
repnz
in
dec
movsl
aas
or
jmp
xor
xor
mov
push
jno
mov
jl
mov
xor
add
repz
xor
push
push
cli
and
jae
jb
rclb
mov
pop
in
fcoms
repz
pop
jno
push
push
dec
out
popf
ljmp
push
mov
cmp
adc
jl
cli
dec
movsl
inc
sbb
or
fsub
add
stc
jmp
pop
push
lret
add
movsb
sub
sub
nop
out
or
push
xchg
inc
mov
bound
cmp
sbb
push
lock
imul
mov
cmp
sti
pop
and
test
mov
sub
loop
rol
stos
push
sahf
cld
movsb
ret
in
cmc
cmp
ficoms
outsb
pop
mov
nop
cmpsb
mov
inc
mov
insl
sub
pop
leave
sub
fcom
testb
mov
inc
fists
sub
or
pop
fbld
sub
inc
shr
scas
inc
out
out
ret
jge
add
sub
adc
sbb
jbe
repnz
add
mov
mov
in
andl
test
mov
jo
push
ja
dec
xchg
roll
ret
das
or
pop
sahf
push
mov
sbb
fnstsw
popa
sub
sti
mov
mov
lds
arpl
je
pop
dec
adc
in
sub
lock
adcb
push
inc
loope
in
stos
pop
xlat
mov
add
cmpsb
mov
roll
insl
out
sub
mov
sub
pop
mov
mov
inc
inc
scas
ds
add
fldenv
mov
test
mov
dec
mov
subb
shrb
sub
das
testl
and
cmp
pop
pop
add
lahf
jge
jne
xor
mov
add
lea
or
fdivl
pop
call
loop
jne
and
scas
cmp
test
sub
push
clc
jg
roll
cmp
cmp
sub
push
adc
imul
inc
adc
mov
push
sti
push
push
push
stc
push
inc
pop
jnp
mov
add
rcll
bound
pop
push
pop
pop
jb
xor
out
jno
and
mov
cmp
add
lahf
lahf
sbb
int3
pop
pop
cld
jecxz
xchg
and
push
testl
lret
pop
js
stos
pop
leave
mov
es
mov
addl
add
andl
shrb
mov
adcb
mov
sbb
dec
mov
adc
inc
dec
jmp
pop
mov
loope
push
pushf
mov
test
out
pop
push
mov
not
inc
fsubrp
inc
adc
inc
xchg
fbstp
or
data16
inc
outsl
sarl
push
push
imul
xchg
pop
mov
inc
xor
int
shr
in
lds
add
cmp
push
jns
loope
dec
xor
xchg
sbb
mov
mov
mov
xchg
les
nop
or
cmp
xchg
sbb
add
cmp
mov
adcb
jg
xchg
dec
mov
lahf
xor
mov
push
jmp
xor
push
dec
fdiv
sub
add
xchg
pushf
dec
bound
in
add
push
repnz
das
push
pop
lock
and
or
sub
push
adc
leave
cmp
int3
dec
pop
sub
sub
sbb
mov
add
imul
mov
push
aas
jb
and
sbb
enter
nop
std
pushf
sbb
pop
lock
lcall
movsb
add
fcompl
push
push
cmp
jb
or
mov
xor
and
or
push
daa
jbe
adc
shlb
pop
sub
sub
in
adc
xchg
repnz
notl
mov
push
sub
sbb
add
rcrl
jmp
xchg
dec
jmp
xchg
or
push
imul
les
mov
clc
jmp
and
pop
and
in
push
cmp
jo
dec
push
dec
lock
mov
loopne
ror
jmp
pop
mov
jo
cmp
and
sub
out
out
testb
lods
ljmp
out
sub
cld
loope
pushf
sub
push
mov
dec
in
imul
in
rcr
mov
push
fiadds
shr
mov
mov
cmpsb
test
in
dec
cmpsl
mov
pop
ja
xor
add
in
jmp
fbstp
xchg
mov
xchg
push
push
add
adc
push
pop
push
mov
nop
call
mov
lock
mov
adc
orb
mov
pop
xlat
jmp
popf
andl
test
or
in
rcrl
xchg
shld
lcall
rcrl
test
mov
dec
movsl
scas
cmp
sbb
mov
inc
gs
push
and
insb
or
pop
xchg
int
xchg
xchg
adc
aam
pop
fucomp
ss
xchg
dec
mov
add
scas
dec
addr16
jp
cltd
jb
push
test
fsubs
push
mov
shr
push
neg
push
add
daa
jmp
xchg
subl
jbe
or
clc
push
or
fistpl
sti
sbb
xor
add
adc
sub
mov
xchg
or
xchg
addr16
xchg
les
xchg
mov
add
out
sarb
daa
ljmp
inc
pop
sub
mov
sub
sub
or
shll
xorb
xchg
inc
nop
ret
sub
outsl
adc
sbb
sub
pop
shl
mov
adc
sub
lcall
push
hlt
cmpsb
sub
push
jae
mov
mov
lock
loope
push
dec
pop
popa
insl
lcall
enter
add
and
rcrb
mov
shlb
shl
cli
xor
dec
add
cmc
leave
emms
sbb
sti
sub
cmpsl
pusha
roll
dec
sbb
jmp
xor
mov
add
shl
aas
mov
cli
mov
or
enter
fnstenv
push
adc
lea
sbb
inc
ds
inc
repz
jle
adc
or
jecxz
pop
pop
shr
push
shr
es
outsb
add
adc
pop
adc
loope
outsl
rclb
repnz
push
je
dec
rcl
out
jg,pt
insb
push
push
flds
jg
xchg
test
add
xor
pop
push
mov
jo
mov
inc
and
arpl
dec
mov
xchg
int3
rolb
mov
ret
jp
and
and
xchg
adc
nop
icebp
or
loop
ljmp
nop
pop
xor
push
mov
out
mov
out
shl
fistpl
in
mov
push
adc
daa
shl
inc
outsb
mov
jno
lods
sub
sub
push
fimuls
mov
pop
push
inc
sbb
and
adc
imul
dec
rclb
or
jmp
es
add
mov
stc
or
out
add
hlt
test
sub
lret
jo
xor
or
gs
cmp
or
pushf
movsl
ljmp
jmp
dec
mov
iret
leave
jmp
push
inc
jmp
daa
mov
ljmp
xchg
mov
mov
jne
jge
out
aaa
sbb
jl
js
jo
mov
inc
add
pop
add
inc
xchg
jg
or
and
pusha
xchg
popa
add
idivl
push
inc
mov
xor
jmp
push
mov
aad
pop
xor
mov
fimuls
sub
push
ret
push
jecxz
or
cmp
mov
mov
fisttpl
ret
pusha
inc
bound
das
jmp
sub
cmpsl
xchg
cmpb
jb
jg
push
mov
inc
or
inc
add
jmp
add
sub
cmpsb
and
loop
inc
mov
cld
test
scas
sub
sub
xor
andl
sub
sti
addr16
sub
stos
outsb
or
inc
dec
mov
clc
scas
adc
ret
out
dec
loope
inc
stc
jo
nop
icebp
or
or
cmp
adc
shl
inc
shl
andl
push
mov
subl
xor
mov
cmpb
adc
xlat
jle
pop
push
loopne
dec
mov
arpl
sarl
cmpl
stc
cmp
mov
sarb
inc
sti
leave
mov
jno
jns
test
adc
loopne
and
or
int3
xlat
nop
jns
or
nop
mov
pop
pop
mov
popl
in
sub
sub
mov
test
popl
scas
pop
jmp
cmova
mov
mov
cld
or
push
and
roll
and
pavgw
aam
ljmp
sti
cmp
pop
sahf
add
cmp
add
ja
lret
jnp
bound
mov
sbb
loop
jno
mov
scas
mov
pusha
pop
fiaddl
jbe
outsl
insl
jmp
sbbl
pop
pop
pop
push
fcomip
jl
sub
and
lcall
popf
xor
or
stc
jmp
in
jmp
loopne
pop
add
jno
popa
adc
inc
mov
push
jmp
mov
rolb
frstor
mov
mov
rorl
cmp
rcll
loop
ljmp
hlt
pop
inc
out
jno
adc
pop
insb
incb
pop
pop
adc
inc
nop
and
cmp
sbb
mov
call
xor
test
call
mov
shl
push
push
or
cmp
push
pop
pop
ret
rcl
movsl
add
jle
xchg
jle
push
add
xor
or
jge
in
pop
mov
pop
adc
mov
and
pushf
pop
add
sub
mov
andb
mov
out
popa
test
mov
mov
sahf
push
xchg
stc
mov
loop
std
xor
pop
jmp
test
mov
push
addr16
iret
out
movsl
push
mov
pop
sub
jge
mov
inc
insl
pop
lcall
and
push
mov
xchg
inc
dec
in
fucomi
and
add
inc
jbe
sub
and
sub
cmpsb
mov
mov
xlat
add
dec
dec
pop
subb
inc
mov
xor
adc
cmc
gs
or
add
lods
sub
jmp
daa
mov
xchg
in
mov
pop
adc
lods
and
jnp
loopne
ret
outsl
jg
cmp
xor
xor
ss
mov
push
imul
cmp
cmpsb
jge
popf
jmp
sbb
push
pop
jno
dec
jl
test
mov
jge
xor
mov
and
lods
shll
jmp
daa
mov
push
jp
add
sub
test
orl
bound
and
or
push
pushf
cld
pop
jge
out
xorb
sub
inc
cmp
or
repz
mov
decl
shr
sub
adc
stos
aam
pop
ja
imull
cld
jp
cmp
inc
jnp
jl
shrb
outsb
jmp
dec
out
adc
add
adc
and
movl
pop
add
sub
jge
shrl
cs
shr
das
sub
jl
mov
in
in
jg
ss
rcr
and
test
add
sub
jno
clc
enter
dec
sbb
sar
jge
es
xchg
cmp
icebp
mov
sub
mov
mov
mov
aas
inc
in
nop
stos
inc
or
dec
adc
sub
popa
mov
insl
xchg
pop
sbb
call
push
inc
stos
push
cmpl
sbb
cli
int
sbb
push
arpl
nop
inc
jmp
add
enter
xor
shr
or
inc
pop
hlt
cmp
and
push
std
jle
xchg
loop
adc
and
test
movsb
stos
xchg
jg
leave
push
pop
sub
or
stc
or
push
stos
inc
lcall
sub
ss
popf
notl
call
push
or
repz
adc
push
mov
fucomp
mov
push
sbb
inc
shl
rcll
inc
inc
push
adc
add
mov
mov
pop
je
mov
insl
xchg
push
fadds
fsubrs
sbb
mov
imul
shr
push
add
sub
ret
in
sbbb
mov
cmp
out
fstpl
repnz
mov
je
mov
push
pop
jne
adc
ds
pop
adc
sbb
add
mov
sbb
jbe
push
adc
push
orb
jmp
jmp
jmp
stc
popf
inc
or
inc
call
push
loopne
adcb
cmpsb
rcll
or
es
sti
dec
mov
mov
inc
pop
jmp
loopne
movsb
cmp
dec
decl
or
movsl
lahf
xor
or
sbb
sub
cs
sbb
call
push
xorb
pop
loop
lahf
add
sbb
push
out
mov
mov
cmp
add
inc
ret
je
adc
push
dec
insb
test
cmp
jmp
mov
aaa
and
call
lcall
out
push
orl
in
repz
add
out
pusha
lret
or
ret
push
or
dec
push
pop
popf
shlb
les
test
xchg
cld
and
insb
movsl
and
insl
push
dec
sub
adc
imul
jmp
and
sub
xchg
xor
xchg
repz
stc
mov
add
das
xchg
cmpb
cmp
cmc
add
shl
sbb
adc
mov
jo
jle
mov
fs
cmpsb
cmp
push
xchg
sub
push
jae
fsubp
or
aas
test
and
pop
fbld
addb
jmp
enter
xchg
xchg
addr16
repz
adc
fneni(8087
icebp
push
adc
dec
in
mov
lea
arpl
iret
and
pop
and
lods
test
add
add
fsubp
pop
and
in
out
add
stc
sub
insb
or
or
mulb
or
out
sub
test
sub
pop
sub
pusha
xchg
mov
pop
or
adc
imul
in
and
std
add
mov
cmpsb
cmc
int
and
test
mov
adc
loope
ds
mov
popa
aas
outsb
shll
adc
sahf
cwtl
mov
xchg
sub
gs
or
adc
ror
cmp
push
es
push
ret
pop
in
jp
inc
xchg
push
push
mov
jne
stos
shll
xchg
dec
jp
repnz
fldt
xchg
pop
out
shll
rorl
lret
xchg
xchg
jno
lret
clc
dec
shr
outsl
leave
cltd
push
or
add
add
cmp
rclb
imul
mov
mov
add
pop
jnp
mov
sti
sub
or
test
add
and
or
ljmp
imul
sbbb
jmp
dec
pusha
imul
in
icebp
or
sub
jmp
mov
push
mov
rol
scas
leave
jecxz
adc
xchg
add
push
sub
cmp
inc
push
lret
push
pop
punpckldq
addr16
add
pop
mov
pop
sub
push
mov
repz
test
adc
aad
sbb
lods
lcall
pop
mov
dec
fucom
jae
lret
jo
dec
cmp
jmp
push
adc
stc
mov
push
xchg
xchg
add
push
push
imul
push
pop
xorb
mov
pop
adc
cmp
jbe
test
adc
adc
inc
add
inc
jo
jmp
pop
pop
cmp
aas
fcoms
fst
and
test
jmp
inc
cmpxchg
xor
jl
push
imul
cmp
or
pop
and
mov
pusha
push
ja
push
rclb
adc
inc
and
clc
das
pop
push
add
mov
sub
popl
mov
adc
rcll
xor
fwait
adc
adcb
sub
sbb
addl
sub
add
xor
jmp
rorl
mov
mov
or
sti
add
mov
ret
scas
sarb
repz
cmp
xchg
add
fnstcw
jo
mov
add
ror
push
add
popf
out
out
pop
push
ret
mov
mov
fucomi
jae
or
outsb
xor
jns
push
mov
push
add
or
fnsave
push
pop
aam
add
push
dec
push
add
sbb
xor
sub
repnz
in
pop
push
sbb
mov
dec
fsubrs
xchg
inc
movsl
rcrl
adcl
mov
cmp
dec
sbb
sub
add
aas
or
or
int
shl
adc
dec
popf
cli
icebp
pop
aad
jae
jmp
add
push
push
mov
or
xchg
push
xchg
xchg
or
roll
mov
out
faddp
dec
pop
and
movsb
mov
sti
lret
aaa
lods
cmpb
cwtl
adc
sbb
loop
jl
mov
adcb
xchg
das
pop
stc
add
imull
fisttpl
hlt
sbb
pop
push
test
out
call
adc
inc
das
ds
out
dec
sub
pushf
add
or
sub
add
lock
adc
mov
call
add
adc
push
pop
cmp
xor
add
mov
jg
pop
iret
shlb
je
les
out
and
shlb
or
mov
mov
ret
fs
sub
push
xor
dec
mov
scas
jae
xchg
add
and
loop
lock
and
ljmp
pop
mov
fwait
xchg
shrl
aam
inc
rorb
ds
jns
ljmp
dec
insb
jmp
dec
lahf
jbe
std
in
out
into
dec
imul
cmp
and
cmpb
int3
jecxz
std
mov
add
jbe
outsb
cwtl
dec
pop
out
jbe
adc
add
and
push
test
inc
call
or
mov
push
pop
mov
jmp
fs
addb
xor
lods
mov
pop
add
mov
cmp
mov
xchg
jecxz
cli
pop
pop
int
in
push
xor
sub
out
inc
or
xor
add
in
mov
inc
or
or
icebp
jne
mov
andl
insl
or
ret
sbb
and
cmp
dec
mov
jecxz
cmp
mov
cwtl
sub
mov
jo
stc
or
add
jg
sbb
push
inc
aaa
loopne
push
or
xor
add
push
sbb
jnp
mov
pop
add
int
je
jmp
jo
insb
loop
mov
jmp
pop
mov
lds
inc
rorl
jbe
adc
xchg
jo
aad
and
jbe
out
dec
int3
movsb
xor
add
or
mov
pop
outsb
test
mov
lret
lahf
fstps
sbb
xchg
add
test
pop
xor
sbbb
je
sub
jge
mov
push
push
and
lahf
inc
call
outsb
inc
out
out
icebp
std
jno
xchg
sub
and
sbb
cwtl
xlat
add
xor
es
inc
in
push
rcrb
movsl
mov
cmpl
arpl
pusha
pushf
jne
ja
or
mov
jo
movsb
addb
add
cmpsl
aad
or
scas
hlt
push
jge
push
dec
les
nop
dec
out
pop
das
xor
arpl
inc
jae
adc
das
inc
jns
ljmp
mov
push
imul
lds
idivb
stos
std
scas
mov
movsl
push
xchg
xorb
rorb
loop
les
xchg
xchg
in
jge
xchg
int3
movsl
xchg
mov
imul
pop
and
mov
xchg
jnp
shr
fwait
sahf
cmp
and
adc
aaa
push
pop
sbb
es
adc
jns
and
sub
ficoms
add
mov
pop
mov
xchg
divl
mov
lret
fisubs
cmp
leave
das
adc
mov
sahf
sub
fiadds
shrl
jno
popa
dec
xchg
imul
iret
pop
movsl
sbb
scas
ficoms
add
mov
xchg
leave
mov
fistl
dec
dec
subl
and
inc
int3
bswap
sbb
ljmp
xchg
adcl
lret
mov
dec
jae
and
or
icebp
add
cmpl
icebp
xor
cmp
pusha
rorb
insb
decl
xor
inc
pop
xor
add
jmp
cmc
test
aam
or
movsb
push
inc
dec
jbe
cld
shll
pop
cmpsl
rorl
ds
adc
inc
out
dec
mov
rorb
lock
push
xlat
mov
repz
dec
adc
mov
pop
cmp
ret
out
mov
ljmp
add
nop
pop
pop
repz
or
sub
xchg
pusha
sbb
into
sub
add
add
out
jle
int3
inc
push
and
addb
cmp
push
dec
push
in
js
or
fistps
jle
pop
mov
sub
jne
fwait
and
es
lret
loopne
add
sub
retw
in
es
fstpt
dec
mov
repz
mov
mov
popa
pop
add
test
hlt
imul
or
das
jp
pop
inc
or
inc
push
popl
cltd
pusha
or
or
push
jecxz
pop
ffreep
cmp
mov
ret
aad
jg
jmp
sbb
imul
xor
push
xor
test
in
inc
mov
pop
add
mov
mov
fs
gs
jns
int3
push
mov
xchg
fcmovbe
cmpsb
cmp
jmp
mov
and
and
clc
lods
adcl
or
rorb
jl
push
jmp
pop
adc
in
ss
push
nop
pusha
or
xor
adc
cmp
jb
inc
jmp
repnz
js
mov
int3
push
out
in
cmp
pop
cmp
add
scas
cmp
add
xchg
notl
push
xor
pop
stos
nop
sbb
push
dec
insb
push
pop
add
jcxz
or
addr16
negb
xor
push
add
pop
jns
testl
fidivs
add
mov
stc
pop
or
mov
in
or
xchg
xor
xor
mov
xchg
and
sub
inc
shl
aam
inc
xlat
sub
xchg
push
lea
js
jae
mov
adc
clc
xor
int3
cltd
aad
mov
shll
mov
addb
aam
jl
daa
jae
in
sub
dec
pop
aam
mov
shr
or
iret
mov
inc
iret
les
mov
nop
dec
or
add
add
arpl
das
inc
rolb
jmp
inc
sbb
push
pop
pop
lods
imul
or
xchg
pop
orl
ret
sbb
jmp
push
and
mov
and
sti
mov
dec
cmp
and
shrb
push
dec
push
arpl
inc
pusha
push
push
cmp
js
push
out
or
pop
xor
push
xor
mov
fxch
loop
adc
icebp
inc
push
movsb
cmp
adcl
adc
jge
ja
sub
mov
pop
sub
inc
sarb
adc
jmp
sub
sbb
call
in
mov
pop
jae
sti
fs
xchg
pop
fyl2xp1
inc
xchg
std
icebp
xchg
mov
and
xchg
dec
aam
dec
sti
and
add
pop
xchg
xadd
adcb
xor
movsb
dec
mov
inc
out
jmp
mov
inc
vzeroall
aad
scas
add
or
push
cmp
jmp
mov
call
push
lahf
icebp
in
or
pop
cmpb
or
test
mov
neg
pop
lret
leave
insl
xor
push
push
dec
stos
add
stos
adc
jns
inc
adc
sub
or
int
mov
fisttps
data16
or
jecxz
fidivrs
cmp
xchg
or
mov
in
mov
or
push
les
lds
shll
addb
test
jecxz
ljmp
and
jg
pop
andl
push
cmp
inc
movsb
xor
stc
sbb
out
pop
dec
jmp
jmp
and
icebp
ja
jns
dec
leave
call
add
sti
ds
jb,pt
pop
fstpt
aam
jbe
push
neg
push
add
pusha
or
test
xlat
std
aam
nop
and
push
adc
addr16
fstpl
stc
push
lea
sbb
pushf
mov
xor
ficoml
lcall
cmp
add
gs
jmp
xor
aad
lods
ds
mov
sub
call
mov
sub
jl
mov
call
or
stc
mov
inc
xor
icebp
jo
or
lock
push
scas
push
fs
adc
sbb
jecxz
fdivp
xorb
mov
dec
ret
or
pop
jmp
das
test
mov
bound
push
push
enter
fimuls
pushf
push
mov
pop
imul
flds
xor
rclb
mov
mov
push
mov
mov
movsb
loopnew
push
jne
das
in
in
dec
sahf
fwait
mov
push
sub
xor
shlb
popf
adc
pop
sub
xchg
fwait
jg
adc
dec
pop
lock
ss
jno
fisttpll
rcrb
rcrl
cmpb
cltd
mov
push
jmp
js
movsb
addb
pop
lea
js
and
add
invd
loope
add
outsb
lret
push
pop
add
aad
in
jmp
das
dec
test
pop
inc
and
stc
scas
cmp
imul
jnp
and
cltd
scas
add
fisttpll
jl
mov
mov
push
in
mov
jmp
cmc
pop
dec
imulb
idivb
and
cmp
pusha
ret
cmp
data16
or
cli
xchg
push
add
push
divl
jmp
sub
scas
and
push
push
push
gs
daa
or
mov
xor
pop
xchg
mov
clc
pop
ss
pop
loope
cmp
dec
lea
out
scas
push
loope
inc
mov
add
dec
push
dec
fisttpll
xor
inc
mov
std
pop
xchg
mov
cmc
add
into
or
and
push
jmp
sub
fadds
in
scas
add
jno
pop
mov
add
out
data16
sub
icebp
fxch
orb
mov
nop
and
mov
xor
or
arpl
shll
ror
mov
pop
fildl
xchg
mov
push
xor
imul
arpl
and
out
cmp
test
gs
push
pop
lods
bound
add
lahf
adc
test
or
xor
xor
dec
xchg
cld
mov
sub
dec
out
fdivrs
rcrb
call
ja
jno
add
jne
add
dec
into
xor
adc
dec
mov
loope
and
in
add
ret
data16
or
inc
cmc
push
push
add
dec
insl
jmp
xor
sarl
push
dec
mov
push
push
pop
lock
push
add
mov
lret
cmpsl
mov
aas
adc
fisubl
sbb
shrl
or
mov
mov
add
sarb
in
jl
dec
pop
not
dec
mov
jmp
mov
bound
negl
inc
imul
push
outsl
shlb
dec
cmp
repnz
or
pop
fldl
mov
fiaddl
nop
adc
add
pusha
decl
leave
jb
mov
int
or
add
xchg
cmp
pop
adc
dec
push
sub
cmc
ret
cmpsl
jae
or
mov
adc
or
mov
nop
and
cmp
ret
aam
xchg
in
and
test
xchg
mov
add
lock
mov
mov
xchg
jns
and
int3
and
fstpl
adc
pop
lds
sbb
popa
sub
mov
xchg
shll
ret
dec
notl
faddl
je
arpl
adc
sbb
xor
adc
call
jbe
or
orb
mov
imul
mov
mov
sahf
les
push
mov
mov
sub
loop
sub
adc
enter
xcrypt-ecb
cmpsl
dec
add
xchg
pop
sub
test
sbb
fs
loop
mov
fidivrl
adc
mov
pusha
pop
pop
aad
mov
sbb
std
cwtl
out
or
popf
dec
jnp
pop
shl
push
add
rorb
cmp
shll
mov
xchg
jle
mov
mov
shr
repz
jns
cmpsb
imul
idivb
add
xor
xor
cld
add
pop
sub
ret
je
adc
cmc
pop
xchg
or
push
pop
test
mov
loope
xor
push
nop
inc
mov
or
test
decb
push
iret
sbb
xlat
sar
js
out
into
sbb
mov
mov
inc
popa
subl
mov
mov
sub
sbb
push
pop
add
in
out
in
cs
mov
xchg
mov
movsl
dec
push
movsb
es
ljmp
add
cmpb
jecxz
adcb
frstor
sar
dec
and
push
fisttpll
orl
inc
xorl
adc
shr
or
mov
loop
into
or
inc
cmp
cmp
or
adc
pop
and
es
shlb
and
rclb
pop
addr16
push
mov
add
imul
push
add
icebp
stos
imul
push
push
xchg
mov
sbb
cld
adc
push
call
jg
adc
cs
pop
or
mov
adc
jmp
rcrb
pushf
leave
outsb
dec
pop
dec
imul
jle
popa
sub
icebp
jb
or
lods
jmp
mov
sub
notb
or
jae
adc
decb
or
add
js
or
xor
inc
mov
cwtl
mov
cmc
pop
xchg
xor
sub
jns
pop
arpl
ret
add
xchg
mov
push
dec
mov
pop
cmpb
jmp
cmpsl
insl
add
jne
jl
lret
push
add
jge
ret
rorl
or
mov
push
jecxz
jbe
add
mov
addl
push
andb
adc
sub
adc
jmp
mov
or
jo
lmsw
mov
ss
stos
add
iret
sar
scas
icebp
out
dec
add
cmp
adcb
cmp
fs
add
mov
mov
sbb
cmp
inc
jno
push
lea
xchg
clc
sub
mov
mov
xchg
mov
mov
cli
popf
movsb
sub
jb
nop
rorl
test
stc
je
add
push
ret
pop
scas
and
sti
sbbb
xchg
cmp
push
movsl
fstps
inc
pop
idiv
scas
adc
mov
test
pop
sub
inc
shrl
add
repz
rcrb
dec
ret
sbb
xchg
xchg
bound
xchg
and
cmp
ret
mov
push
pop
and
dec
add
arpl
in
or
mov
shll
add
nop
pop
iret
hlt
pop
aaa
pusha
inc
or
sbbl
int3
pop
in
sub
scas
loop
rcrl
xor
ffreep
js
mov
lea
bound
or
incb
add
push
popa
cmpb
and
cmpsb
cmp
mov
iret
add
into
pop
mov
fadds
dec
adc
cmpl
sub
add
pop
in
sti
mov
mov
xor
mov
push
inc
jmp
jns
cs
xchg
out
mov
pop
daa
fmull
add
leave
je
cmp
rolb
pop
mov
loop
adc
push
jg
mov
call
insb
rolb
cli
in
daa
outsl
and
dec
push
xchg
mov
jmp
sarl
or
fsubl
or
and
mov
and
fiaddl
sbb
cmc
popf
cmpl
fsubrs
inc
dec
or
xorb
pusha
mov
rcrl
sti
jg
pop
sbb
nop
loopne
pop
pop
in
mull
push
mov
test
push
pop
xchg
cli
popf
sub
das
jb
cs
pop
jbe
das
mov
imul
dec
jge
xchg
mov
adc
inc
lahf
cmpl
fsub
mov
jb
gs
or
add
adc
sub
add
pop
add
jnp
addr16
or
inc
sbb
fiaddl
mov
mov
lock
sar
mov
xchg
lret
sahf
add
imul
push
shll
scas
xchg
test
jg
lods
or
push
add
xor
add
pop
outsb
xor
adc
adc
jmp
pop
repnz
inc
orl
cmp
xchg
cwtl
ja
pop
out
cmp
sahf
lds
popa
ret
pusha
or
xor
es
jmp
jmp
jge
je
int3
jecxz
sub
adc
mov
loopne
mov
orb
stos
sbb
xor
or
in
sbb
into
fs
pop
in
sti
adc
mov
sbb
inc
jo
push
push
add
push
mov
cmp
ficoms
rolb
xorb
cli
push
cwtl
push
mov
and
and
xchg
cmp
pop
or
jmp
pop
mov
add
rorb
push
mov
add
scas
mov
inc
mov
add
add
inc
or
loopne
sub
inc
arpl
testb
sbb
jmp
push
and
data16
xor
or
ljmp
inc
or
sbb
or
cmpsl
call
out
xchg
add
frstor
dec
inc
add
ja
push
push
push
enter
dec
cmp
jb
sub
mov
jmp
cmp
xchg
out
pop
dec
int3
xor
cmpl
push
jo
out
ret
dec
lock
or
push
mov
enter
cwtl
div
sbbl
mov
ljmp
mov
arpl
dec
mov
addr16
xchg
adc
xor
ret
inc
or
dec
cmp
sahf
mov
jno
mov
push
adc
popa
inc
dec
aam
cmp
mov
jecxz
push
cmp
dec
xor
push
imul
shl
jl
push
repz
ljmp
mov
fimull
loopne
mov
xchg
pop
jae
mov
jae
mov
jg
mov
sub
sbb
js
movsl
ja,pt
hlt
loop
inc
pop
call
cmp
add
push
adc
enter
push
adc
mov
movsb
cmp
ret
pop
ljmp
or
cmc
sbb
outsl
and
xchg
rcrl
cmpsl
and
mov
push
test
lods
sbb
pop
daa
shr
xorb
mov
xor
push
sub
mov
lods
xor
fbld
pop
dec
push
sbb
jle
sub
inc
push
or
add
xchg
pusha
or
jp
jns
mov
roll
jp
sub
or
pop
dec
xchg
scas
roll
pop
leave
inc
std
xchg
xor
int3
add
dec
and
sub
push
in
add
pushf
and
ljmp
adc
mov
cmp
adc
jecxz
adc
movl
adc
cmp
dec
test
and
mov
or
sub
dec
or
clc
add
jl
cmp
and
nop
fnstenv
sarl
xchg
add
and
jmp
imul
loope
pushf
cs
movsb
int3
jmp
mov
xchg
cmp
movb
and
lods
pop
stos
push
jp
inc
into
push
cwtl
jne
pop
dec
das
mov
in
enter
pop
mov
negl
pop
leave
add
or
idivb
adc
pop
dec
mov
das
inc
pop
sub
dec
sub
add
or
stc
or
pushf
popf
popa
mov
shlb
shl
cmp
jmp
in
lds
adc
aas
pop
mov
fwait
cmc
aas
je
and
add
dec
dec
xchg
adc
push
dec
lods
mov
jnp
mov
jge
adc
adc
cmpsb
add
rol
faddl
in
std
pop
pop
jecxz
add
stos
push
xor
jmp
or
shlb
and
cwtl
sar
add
int3
pop
into
gs
int
mov
dec
mov
add
add
test
jmp
roll
add
mov
jb
pop
mov
lea
add
out
jae
fdivs
test
adc
dec
fwait
xor
cld
icebp
or
das
fsubs
mov
je
insl
sarl
scas
cmp
fists
sbb
add
in
dec
jbe
pop
add
xchg
add
mov
pop
sar
in
pop
xchg
dec
add
sub
jp
jge
loope
mov
inc
push
mov
outsl
add
jnp
insb
stos
cmpsb
or
dec
or
sub
aas
mov
push
lds
add
jl
jmp
jo
mov
imul
movl
push
call
ret
test
je
adc
jbe
mov
cltd
adc
add
push
pop
dec
jno
popa
inc
shl
xchg
mov
stc
xor
hlt
and
je
xchg
lods
mov
add
xchg
xor
ret
out
dec
loope
lods
adc
lret
subb
pushf
add
or
addr16
lret
pop
testb
rdtsc
cli
adc
rorl
xor
push
les
mov
jmp
pop
dec
in
xor
push
mov
testb
sbb
flds
repz
cwtl
and
xchg
cmc
inc
lods
fmuls
mov
xor
leave
out
mov
and
jg
inc
inc
jmp
andb
sub
or
jnp
jne
sub
inc
mov
add
push
insb
push
cwtl
dec
pop
mov
mov
adc
xor
add
aaa
sub
jmp
xchg
pop
dec
sub
sub
and
xor
cmp
pusha
push
sbb
rorb
cmpsb
pop
das
sbb
push
inc
in
and
aad
inc
stos
sub
or
xchg
in
fistps
movsl
fiadds
data16
pop
cmp
or
ja
test
pop
and
mov
xlat
mov
in
sub
cmp
repnz
or
loopne
outsl
xchg
test
add
jo
popf
fldcw
push
repz
push
mov
test
add
sub
dec
mov
xchg
and
pop
push
lods
adc
subl
add
dec
push
mov
sub
pop
jo
outsb
addb
test
gs
sub
mov
cmp
mov
add
es
add
dec
cmp
jns
dec
xchg
cmpsl
pop
cld
mov
mov
mov
mov
jl
dec
sub
mov
xlat
pop
mov
ret
cld
mov
xlat
xchg
mov
ljmp
xor
mov
and
insl
rorl
stc
gs
xchg
add
sti
cltd
add
jbe
mov
jle
mov
xchg
cmpl
or
adc
push
mov
nop
cmp
je
add
add
inc
xor
pop
and
lret
push
aad
je
pushf
shlb
testb
ret
out
mov
mov
inc
add
xor
ficompl
add
iret
inc
jb
jnp
xlat
mov
dec
mov
push
ret
cltd
loop
fiadds
enter
cmp
sarb
push
rorl
shr
lods
mov
in
jp
sub
push
and
mov
and
pop
mov
bound
or
in
ret
roll
sbbl
rorl
filds
imul
cmp
xchg
and
jno
icebp
outsl
adc
push
test
movsl
nop
scas
push
sbb
cmpb
xor
xchg
add
jg
jl
pop
andl
pop
mov
dec
xchg
clc
add
pop
dec
xchg
sbb
std
fdivrl
or
mov
es
adc
jp
add
cmpsl
add
and
cmp
test
sahf
push
inc
push
xchg
fwait
cwtl
hlt
and
mov
lret
push
inc
push
dec
lock
mov
pop
jg
in
or
mov
inc
mov
out
inc
push
xchg
cmp
pop
js
cmp
pop
movsl
mov
dec
mov
adc
subl
jnp
xchg
rcll
sbb
dec
adc
pop
inc
inc
imull
mov
xchg
loopne
add
cmc
ret
mov
rol
pop
decb
push
xor
sbb
xor
std
pop
out
jge
inc
jo
testb
adc
lcall
sub
mov
xlat
mov
roll
add
ljmp
bound
jne
popa
inc
jecxz
test
add
pop
and
js
ret
cmp
adc
push
sub
pop
cltd
and
jo
or
fildl
xchg
adc
and
mov
clc
stos
and
shll
xchg
jp
cwtl
and
es
or
lret
xchg
jle
mov
xor
or
or
iret
or
clc
add
sbb
enter
cmpsl
les
mov
or
pop
and
xor
or
and
loopne
rolb
fisttpll
and
and
das
inc
sar
in
sub
popa
mov
lock
movsl
add
les
in
push
xor
xor
jg
int
or
and
and
xor
outsb
or
sub
dec
add
popa
sub
mov
addr16
bound
popa
pop
or
jno
divl
dec
pop
movsb
pusha
and
and
and
and
mov
sub
sbb
add
pop
xor
push
out
mov
bound
push
mov
jo
leave
or
and
pusha
push
scas
stc
and
cwtl
push
repnz
fmuls
sbb
and
bound
mov
xor
mov
mov
or
and
dec
xor
lds
movsl
dec
and
int3
adc
les
xchg
pushf
dec
lcall
adc
or
js
push
add
jle
in
jl
xor
rorl
lahf
pop
lea
mov
add
sbb
lods
fnstcw
arpl
sub
mov
jmp
adc
faddl
repnz
mov
fldt
bound
rolb
mov
dec
xchg
test
add
inc
sub
loop
or
sub
jl
out
mov
xlat
test
cmp
adc
sbb
sahf
or
pusha
pushf
cld
call
bound
sahf
cmp
jp
cmp
add
xchg
cmp
popl
jne
sub
adc
add
mov
loopne
mov
dec
xor
push
sbb
mov
shrl
sub
and
and
dec
and
int3
push
sahf
dec
push
jns
inc
xor
repnz
aad
nop
idiv
jo
jb
mov
cld
push
enter
xor
sbb
push
faddl
and
inc
pop
cmpsb
xor
sbb
and
cmp
sub
inc
push
cmp
or
in
pop
mov
push
push
mov
push
push
mov
push
mov
or
mov
adc
leave
push
cmp
sarl
mov
hlt
lret
add
decl
push
orb
negl
mov
int
pop
dec
add
fwait
mov
insb
mov
pop
in
daa
or
fbstp
adc
bound
cmc
insl
and
icebp
xor
out
or
or
cmpsl
pop
pop
daa
pop
xor
lods
push
add
repz
adcb
mov
cmpb
add
xchg
adc
and
cmp
ret
mov
cmp
loopne
pop
test
sbb
pusha
out
in
int
xchg
pop
pop
addr16
out
xor
lods
inc
lock
pop
sub
jb
cmp
sbb
addb
pop
imul
dec
addr16
insb
leave
dec
shl
aad
adc
add
addl
or
lock
mov
mov
clc
out
test
xlat
pop
inc
sub
mov
sar
sbb
je
imul
in
or
lds
inc
xchg
or
cwtl
xchg
xchg
fisttps
push
push
push
jle
adc
adc
or
sbb
call
loope
pop
cld
scas
adc
jmp
std
xchg
jne
or
xchg
xchg
mov
jbe
roll
mov
mov
dec
add
push
jecxz
jnp
popa
dec
push
ret
jmp
clc
sub
movsb
or
outsl
push
outsb
or
inc
or
push
mov
inc
shl
ret
sarb
add
add
sti
jo
add
mov
hlt
sar
pop
jne
cmp
lcall
mov
shr
dec
subb
imul
rcr
jae
add
xor
mov
cmp
jl
lahf
inc
rorl
sub
das
mov
or
pop
sub
pusha
iret
jne
mov
inc
or
inc
out
or
sbb
out
mov
sub
dec
fistpll
into
pop
push
xchg
pop
pop
pop
fimull
or
dec
ret
push
dec
loop
mov
ljmp
adc
neg
mov
inc
push
pop
jmp
cld
adc
jne
cs
push
adc
sti
dec
cld
sbb
pop
into
popfw
add
mov
mov
lock
push
inc
imul
sbb
pop
push
ja
nop
test
adc
sub
and
add
push
xchg
pop
pop
or
sbb
cmp
mov
ja
insl
pop
jg
sub
cmpsb
add
stos
jbe
cmp
fistpl
testb
jg
sbb
stos
add
outsb
sub
adc
xor
sub
std
cmp
sub
sbb
maskmovq
mull
enter
sbb
lret
push
add
imul
mov
cli
mov
sbb
jge
movl
dec
cmp
cmp
mov
pop
sub
adc
sub
add
xlat
dec
jg
dec
sub
xchg
gs
popa
out
aas
mov
add
js
shll
add
xchg
sub
push
cs
cmpb
orl
dec
sub
adc
xor
adc
push
push
and
mov
addb
add
xlat
push
mov
dec
rorb
pop
xor
xor
rorb
dec
repnz
in
out
dec
or
std
sub
sub
inc
or
lahf
push
and
xor
jecxz
sbb
cli
roll
add
repz
scas
int3
sbb
inc
mov
mov
adc
cmp
push
inc
mov
cmp
fs
mov
lock
mov
or
leave
jmp
mov
jmp
xor
test
mov
sub
not
xchg
pusha
adc
shl
sbb
adc
mov
xchg
jo
mov
pop
push
xor
cli
les
stos
sub
cmp
xchg
mov
inc
das
in
xchg
test
stos
dec
push
xor
test
add
std
mov
ror
inc
dec
in
push
adc
push
sbb
mov
adc
pop
stos
adc
scas
orb
inc
mov
xchg
rolb
add
dec
jnp
add
ds
dec
shr
add
jecxz
sbb
ret
dec
xor
xor
jmp
xchg
and
pop
mov
imul
jp
xchg
not
aas
repnz
and
lods
add
inc
push
cli
push
jmp
pusha
mov
dec
and
or
ja
mov
xor
and
nop
fdivr
movsb
daa
pop
xchg
rolb
rclb
dec
inc
jns
repnz
sub
cmp
xchg
and
hlt
mov
xchg
and
sbb
adc
lahf
xchg
xchg
push
rorl
cmp
sub
sub
cmp
les
imulb
in
adc
xor
inc
push
out
mov
int
loop
sub
iret
jmp
iret
pop
rcrl
mov
jg
lahf
loope
push
push
pop
sub
jmp
dec
and
cmpsl
or
inc
or
dec
lcall
les
lea
imul
rorl
dec
fdivl
mov
jmp
mov
jbe
pop
out
out
test
pop
and
ds
or
add
pop
orl
sub
jne
loopne
add
ljmp
pop
cmp
and
push
jmp
out
sbb
fildl
add
repz
dec
femms
mov
or
and
mov
mov
dec
sub
add
lods
cmp
rorl
jg
mov
cmp
adc
pop
mul
addl
fstl
mov
push
inc
push
cli
or
lock
bound
into
or
ret
add
mov
mov
pop
movsb
addr16
jbe
jno
or
repz
pop
int
push
cmpsl
add
jo
xchg
addl
sbb
mov
aas
or
add
jmp
xchg
push
test
pop
adc
addr16
add
jne
sub
in
pop
sbb
mov
in
sbb
fadds
inc
aad
xor
in
in
push
or
jns
add
cmp
fdivrl
adc
jge
add
test
in
inc
pop
addb
add
push
push
mov
adc
add
scas
jg
mov
push
xor
leave
bound
xchg
inc
push
adc
push
fdivl
sub
bound
push
pusha
jbe
sbb
decb
pop
int
and
fcoms
bound
jmp
mov
imul
lods
or
push
add
sub
insb
pop
dec
notb
test
jo
cmp
xor
je
mov
jge
dec
pop
adc
in
test
clc
push
inc
filds
adc
sub
add
subb
in
push
add
cmp
pop
dec
rclb
addl
aad
ds
pop
xor
jmp
push
push
cmpsb
xor
pushf
addl
mov
mov
adc
jg
dec
push
lahf
leave
js
fs
mov
ds
ljmp
mov
or
fnstsw
ja
mov
addb
inc
in
leave
mov
jmp
mov
out
roll
adc
adc
jo
sub
ret
pushf
aaa
add
xor
pop
loopne
and
xchg
pop
inc
jbe
add
into
xchg
dec
int3
cmp
lahf
ret
cmpb
xchg
or
jmp
loop
mov
jbe
ror
ss
negl
lcall
sar
mov
or
add
ret
int
dec
sub
cmp
cmpsl
and
mov
mov
pop
xchg
and
mov
mov
mov
mov
shl
or
add
cmc
lods
int
mov
test
mov
jmp
or
shr
sub
iret
cmc
shlb
cmp
in
inc
xchg
std
dec
jbe
adc
out
ffree
repnz
or
or
lret
ret
jns
or
jnp
sbb
insb
adc
outsl
mov
lret
jl
mov
push
mov
xor
sub
lea
adc
or
pop
sub
sub
adc
inc
pop
xor
and
xor
xchg
and
daa
je
jns
dec
jnp
and
add
mov
pop
dec
popf
add
inc
sub
jmp
add
or
adc
cld
xchg
loopne
pop
fdivs
jae
jl
xchg
daa
mov
and
mov
or
jb
cmp
imul
out
pop
loopne
adc
xor
lcall
push
not
fsubs
and
sub
mov
mov
loopne
mov
addb
not
negb
sub
pop
adc
cmc
cmp
call
aaa
pop
scas
icebp
xor
enter
int3
add
adc
dec
inc
cltd
add
mov
outsb
sub
cld
dec
mov
xor
and
call
inc
pop
in
pusha
ret
jp
fmuls
xor
push
cli
jns
push
into
sub
and
push
call
ret
imulb
xlat
fucom
jns
fcomps
cwtl
es
cld
adc
push
out
sbb
jmp
inc
jo
ljmp
pop
xchg
pop
inc
jmp
mov
mov
push
xor
sbb
sarl
xchg
or
push
orb
pop
jp
fldt
and
pop
sub
or
shlb
repnz
sub
xor
aaa
fsubs
sub
inc
test
push
jmp
pop
lahf
jb
dec
pop
mov
xchg
xlat
or
xor
inc
fdivl
push
push
inc
jmp
pushf
or
xor
pop
outsl
data16
pop
jg
mov
jmp
mov
pop
cltd
cltd
sbb
push
or
pop
jnp
add
xor
pop
cmp
fcmovu
add
lock
cli
incb
pop
or
cmp
mov
out
cltd
aas
mov
bound
fcoml
push
push
adc
push
rcr
add
arpl
jnp
jecxz
daa
adc
jo
add
pop
popa
ret
pop
dec
bound
cmp
in
push
unpckhps
jb
pop
xor
xor
bound
and
mov
dec
cld
push
in
imul
jle
push
adc
mov
pop
out
pop
xchg
cmp
adc
or
or
ret
mov
inc
xor
xor
cmovs
sbb
add
pop
mov
xchg
mov
jg
mov
popa
dec
push
jmp
jnp
push
cwtl
xchg
jmp
mov
into
xchg
and
push
inc
mov
sub
xchg
push
push
sbb
push
insb
call
mov
aaa
push
mov
gs
std
pop
or
cmc
pop
push
cmp
xchg
mov
or
xchg
dec
shrl
in
cs
sub
pop
sub
or
dec
push
add
cmp
dec
repnz
add
xor
pop
loopne
sbb
dec
push
mov
inc
loop
mov
or
xor
and
jae
pop
jle
and
test
xchg
xor
cmp
or
xchg
dec
xchg
gs
cmp
and
cwtl
std
int3
dec
and
dec
inc
jno
add
pop
sub
mov
jns
push
cmp
mov
and
jmp
data16
sbb
cmp
and
mov
or
xchg
mov
cmpb
push
add
int
inc
push
popa
push
xchg
bound
into
push
mov
cmpsb
fcoml
add
ja
and
xlat
shll
jne
clc
notb
pusha
pop
xchg
in
bound
es
pop
sub
add
hlt
inc
testl
push
aas
mov
push
jmp
and
add
imul
aam
in
add
push
fsubr
je
and
out
pop
push
mov
lea
negb
push
imul
sub
pop
pop
mov
pop
xorb
pop
test
adc
clc
nop
or
mov
ljmp
jmp
or
jae
add
push
adc
shr
notl
sahf
push
test
les
add
inc
adc
sbb
add
decl
fistl
inc
push
xchg
fmul
and
in
mov
mov
test
xchg
rorb
das
add
add
xor
pusha
inc
roll
ret
cld
cmp
pop
or
icebp
rorb
pop
call
sbb
sub
push
lret
les
xor
adc
dec
fucomp
xchg
ja
push
xlat
int
and
or
inc
lods
int3
mov
push
sbb
testl
cmp
sub
lock
pop
out
fstpl
and
cmp
orb
jbe
inc
inc
mov
push
ss
cmp
dec
push
push
je
mov
or
mov
imul
shrb
dec
inc
aaa
das
push
pop
push
scas
daa
xchg
add
imul
popf
in
scas
pop
jl
jmp
pop
mov
adc
mov
adc
jne
or
sub
sahf
fldt
mov
add
pop
pop
or
mov
push
pop
push
push
pop
pop
leave
ljmp
xchg
sbb
pop
mov
xchg
jl
ljmp
int3
fiadds
cmpsb
mov
mov
jl
scas
jecxz
test
ret
mov
hlt
xchg
dec
adc
jae
into
sahf
fucom
aam
inc
jne
mov
imul
adc
and
pop
nop
leave
and
into
out
fstps
and
les
jns
repnz
jne
mov
inc
pop
lock
jg
aam
mov
aas
and
and
jmp
mov
fdiv
inc
jbe
dec
or
and
push
shr
mov
neg
adc
pop
mov
out
pop
std
xor
mov
jbe
incl
fnstenv
mov
inc
loop
add
daa
dec
jp
dec
cld
leave
jge
ret
inc
dec
adc
scas
sbb
popf
adc
rcr
or
xchg
mov
daa
push
cwtl
sub
mov
sbb
or
dec
pop
mov
mov
mov
sub
pop
mov
mov
push
push
mov
add
xchg
dec
cmp
ds
std
test
pop
aad
sbb
push
mov
sahf
stos
notb
fimuls
lret
lds
jp
hlt
cwtl
or
gs
xor
add
or
dec
les
mov
xchg
in
orl
loop
push
repz
jp
xchg
roll
push
mull
and
das
xlat
ret
mov
sub
add
std
inc
cmpsb
lds
out
addr16
and
iret
sub
pop
cmp
xlat
sbb
out
push
jno
lahf
shl
and
and
aad
pusha
mov
pop
and
popf
ret
setns
aad
pop
mov
enter
inc
inc
mov
adcl
add
jmp
inc
lods
mov
leave
push
stos
test
imul
outsb
stc
mov
add
add
iret
add
dec
ret
add
ljmp
push
jp
and
add
xor
aam
add
pop
sbb
mulb
out
cmpsl
adc
fimuls
jb
adc
sub
mov
aas
arpl
mov
dec
mov
or
and
daa
or
or
pop
jecxz
shll
ljmp
inc
xor
imul
je
stos
inc
loopne
adc
leave
cmp
lcall
jmp
shll
or
in
sarb
push
aas
ljmp
sub
cltd
std
jb
fisubl
or
add
sub
pop
cmpb
ljmp
loopne
cmpsl
sbbb
xchg
pusha
les
sub
mov
loope
dec
add
push
repz
call
rorl
inc
test
or
inc
add
les
adc
cwtl
ficompl
loop
lcall
inc
mov
dec
les
lret
add
xor
xchg
addb
dec
pop
mov
or
xor
dec
lods
cltd
loop
das
in
repnz
mov
xor
daa
in
jge
xor
or
aas
dec
pop
daa
test
adc
jge
cmpsb
or
test
dec
fsub
fs
sbb
jnp
in
inc
repnz
imul
repz
or
jmp
mov
in
pusha
lahf
filds
rolb
push
mov
sbbl
sbb
lods
outsl
rcll
stos
adc
xchg
mov
xor
and
test
mov
adc
pop
loop
rcrb
pop
mov
pop
std
mov
leave
and
cmpb
jecxz
xchg
push
adc
mov
pop
lock
repnz
fstl
jno
push
mov
je
xchg
add
adc
fldcw
cwtl
lock
dec
add
xor
and
jns
popa
clc
pushf
xor
push
mov
add
xor
popa
imul
dec
scas
push
hlt
call
dec
js
mov
xor
in
out
xor
pop
or
xchg
inc
push
push
pop
lret
pushf
cmp
add
pop
push
daa
xlat
and
and
push
and
or
inc
jecxz
clc
bnd
sub
jl
in
mov
push
sub
lret
push
inc
repnz
dec
fadd
fistpll
push
or
push
push
jg
dec
add
popf
mov
das
sbb
loopne
outsb
das
rorb
pop
jmp
jno
outsb
mov
popa
lods
bound
mov
push
fs
int
imul
cmp
cs
inc
iret
add
jmp
pop
pop
and
lock
fsubrs
mov
mov
shlb
ret
pop
jmp
pop
push
jne
jb
cmpsb
add
pop
mov
push
mov
xchg
or
push
and
and
pop
pop
in
sarb
scas
jnp
pop
and
leave
cmp
cltd
lret
call
mov
pusha
test
inc
pop
aaa
call
cwtl
js
popa
sub
push
mov
int
ret
shlb
arpl
test
dec
add
push
lret
pop
cmc
mov
icebp
stc
lods
aam
loopne
icebp
jmp
push
mov
jns
pusha
cmp
pop
xchg
hlt
and
or
sbbl
jns
mov
es
adc
icebp
cmc
ss
lods
mov
inc
xor
add
add
push
pop
add
xchg
lock
push
incb
mov
loopne
sbbb
dec
add
mov
scas
inc
push
or
jns
fs
push
addb
sarb
pop
jmp
mov
xor
pop
and
adc
pop
mov
dec
shlb
pop
mov
or
nop
fildll
rcrb
cmc
add
pop
dec
inc
add
dec
mov
xchg
adc
cltd
push
or
xchg
mov
es
sub
out
or
dec
daa
outsb
or
xchg
lcall
pop
or
add
cli
xchg
testl
dec
push
inc
popa
scas
push
sub
inc
mov
pop
int3
cld
mov
out
adc
add
dec
dec
sub
xchg
sbb
pop
loope
pop
rorl
jl
jo
ret
xchg
jmp
or
pop
cld
sub
pop
subl
fdivp
lods
push
out
mov
push
push
sbb
mov
add
inc
push
mov
jae
add
ss
adc
loop
pop
lret
pop
dec
mov
in
or
cmpsl
push
decb
jmp
xchg
push
sub
pop
addl
sbb
iret
mov
sbb
ja
pop
adc
sahf
add
xor
cmp
jbe
push
dec
push
mov
es
jle
sub
orb
negl
loop
movb
ljmp
rorl
push
out
mov
or
daa
roll
std
sarb
push
sbb
and
inc
pop
inc
inc
sahf
mov
mov
into
mov
ret
xor
xor
pop
mov
dec
cmp
popf
push
sbbl
test
stos
subb
adc
push
outsl
sbb
or
cmp
ret
push
lods
incb
std
cs
pop
push
and
or
fsubr
shll
mov
or
mov
pop
mov
pop
shr
or
int3
repz
jl
pop
sub
pop
dec
jl
jmp
icebp
xlat
stc
sbb
sub
add
mov
jne
jmp
pop
std
mov
mov
push
xchg
mov
add
push
cmpsb
loop
sbb
sub
stos
pop
add
push
adc
push
mov
fbstp
cli
inc
sub
aaa
xchg
std
dec
ficomps
and
fnstcw
add
shll
addl
loop
fiaddl
add
es
imul
je
cltd
aam
mov
fs
fld
hlt
mov
ljmp
dec
and
xor
jge
pminub
sub
push
cmp
lods
insb
fiadds
idivl
sub
mov
pop
nop
dec
loope
sub
cmc
inc
pop
mov
mov
xchg
das
cmp
cmp
pop
addr16
popf
pop
xchg
nop
pop
lods
xorb
daa
mov
jmp
sbb
xor
icebp
repnz
dec
cmpsl
sub
xchg
mov
pop
pop
sub
mov
dec
mov
xchg
sub
add
xchg
or
xor
pop
and
sbb
ret
lock
or
imul
mul
push
jb
mov
add
fdiv
fidivrl
ret
out
ljmp
mov
xor
daa
adc
into
cmpsb
cmp
xchg
cmp
repz
dec
int
cmp
dec
movsl
add
adc
or
lret
fs
mov
push
mov
add
in
ficoms
add
xor
cmp
bound
enter
xor
mov
sub
dec
push
or
jmp
jbe
jmp
addr16
cs
mov
test
out
shlb
xor
push
cwtl
cmp
lcall
push
pop
xor
cmp
imul
inc
or
and
mov
sub
jns
inc
or
xor
dec
std
lcall
and
cmp
mov
ljmp
pop
add
sub
and
push
mov
dec
test
mov
push
jne
mov
mov
sti
movzbl
xor
test
fldl
les
ljmp
sbb
fs
cmpsl
in
pop
cmp
setno
mov
inc
mov
rorb
push
push
push
sub
clc
outsl
aaa
add
adc
xor
imul
sbb
cmp
icebp
lea
loop
or
pop
jb
add
xor
rorl
loopne
test
adc
mov
mov
emms
lods
push
sbb
pop
sbb
pop
cmp
mov
test
mov
or
xor
imul
aas
sarb
loop
push
divl
jmp
cmp
fadds
dec
mov
pop
push
push
sbbb
por
pop
dec
add
lock
pop
jmp
xchg
outsb
sbb
pop
add
cmpsl
decl
add
and
inc
div
mov
lret
mov
ss
aad
or
adcl
stos
dec
and
shr
add
mov
mov
into
sbb
sub
inc
cmc
imul
lret
pop
fwait
daa
repz
lea
outsb
cmp
adc
or
xor
mov
add
insb
dec
adc
jmp
add
push
test
adc
jl
pop
data16
fadds
push
push
int3
jecxz
pusha
mov
dec
imul
push
dec
or
push
or
loopne
add
add
nop
mov
sbb
in
and
mov
or
adc
inc
or
mov
js
test
ljmp
rorb
ljmp
daa
loopne
inc
pop
xchg
xchg
add
or
pop
stos
loopne
outsb
and
sbb
sbb
sub
push
movsb
outsl
dec
scas
mov
inc
gs
pop
cwtl
or
adc
cmp
xor
cmc
cmp
clc
es
push
push
dec
out
sbb
pop
xlat
pop
cwtl
loope
mov
jnp
arpl
lahf
cmc
inc
mov
cmp
push
mov
adc
mov
dec
jmp
outsl
xorb
jnp
jmp
out
imul
mov
sbb
imul
loopne
pusha
repz
xchg
push
dec
cmp
fsubrs
jmp
pop
dec
sbb
out
jnp
fidivrs
jne
aad
and
orb
and
xor
lea
subl
cld
add
mov
dec
mov
lds
in
xor
sbb
cmc
cld
push
call
lcall
pop
push
inc
cmp
and
mov
or
jmp
and
push
lods
inc
pop
sub
adc
xor
push
xor
mov
clc
add
cmp
fstl
add
fimull
pushf
xor
dec
pop
xchg
pusha
mov
fmuls
sub
ret
or
add
xchg
xlat
adc
fldenv
lock
jl
daa
or
xchg
shlb
movsl
jbe
adc
adc
out
aam
call
cmc
sub
push
mov
xchg
push
xor
roll
sub
sbb
add
je
or
jo
mov
inc
and
les
aas
pop
enter
inc
sbb
mov
jmp
aas
test
or
mov
test
mov
and
scas
fldenv
lods
pusha
loop
shll
or
inc
and
sub
cmp
or
jmp
dec
mov
dec
adc
sub
rorb
inc
jno
push
xchg
loopne
mov
sub
je
sub
xchg
add
xchg
jge
add
jl
pop
inc
mov
pusha
shrb
shrl
add
sub
cld
and
inc
jp
or
jne
inc
or
cmp
pop
push
sbb
lods
xchg
fldt
negl
push
xor
push
and
add
push
lock
test
rcrl
aas
xchg
sub
mov
pushf
repz
or
dec
mov
adc
and
sub
sub
cwtl
test
jbe
mov
sbb
inc
fwait
xor
jmp
loop
pop
sub
clc
dec
and
sahf
add
push
incl
out
in
xchg
cmp
pop
push
sub
push
xchg
aas
sbb
dec
adc
sbb
mov
mov
sub
imul
or
int3
cld
pushf
loope
inc
push
inc
ja
je
mov
lret
add
jmp
inc
push
inc
repz
sub
cltd
jns
push
xchg
adc
add
mov
and
in
data16
pushl
xchg
or
lds
and
and
sbb
add
push
hlt
cli
add
jle
imul
or
mov
aad
adc
push
adc
cmp
xor
xchg
inc
add
pop
jnp
fistpll
mov
pop
push
addr16
mov
pusha
xor
aaa
cmp
cmp
add
push
js
dec
pusha
pop
sbb
pop
cli
decl
ret
xorb
dec
xor
rcrb
lds
ds
xor
mov
lods
test
ret
push
sarl
mov
pop
popa
jo
jnp
add
sbb
dec
sbb
push
movsb
out
fldcw
clc
mov
in
or
clc
inc
pushf
insb
jo
or
jno
push
insl
pop
xor
insb
or
adc
mov
and
aam
cmp
cmpsb
rcrb
fwait
lods
sti
push
inc
xor
or
sbb
outsl
add
pop
sub
sbb
pop
pop
xchg
je
clc
cmp
mov
mov
mov
cmc
lds
or
add
hlt
xlat
ret
sbb
call
mov
rol
shlb
jp
and
sub
or
test
pop
dec
push
mov
filds
pop
test
sub
out
sub
hlt
scas
add
sbb
pop
subl
jp
stc
pop
es
adc
adc
add
fistpl
mov
idivl
pop
sti
lahf
out
outsl
rcll
jns
mov
les
xor
outsb
pop
xor
stos
push
sti
lahf
rol
push
add
or
loop
mov
popf
add
loope
xchg
icebp
call
in
or
insl
outsl
rcrb
imul
data16
add
into
je
mov
adc
xor
inc
sbb
dec
add
jle
dec
sub
jmp
pop
lods
ret
outsb
into
lods
icebp
or
and
mov
pop
xor
pop
call
sbb
das
xchg
repz
add
popa
sub
dec
hlt
mov
add
dec
add
or
xchg
idivb
sub
lods
and
and
push
subb
sar
inc
jnp
fmul
sbbl
rcll
sbb
mov
movsb
lahf
mov
shrb
dec
pusha
adc
hlt
int
mov
add
iret
addr16
pop
cld
ret
cmc
fscale
or
jmp
orb
out
dec
mov
pop
stos
inc
int3
es
dec
stos
test
pushw
hlt
mov
cli
push
mov
and
into
call
cmp
sbb
aam
in
flds
clc
jmp
adc
xchg
sbb
adc
sub
mov
sub
jo
cmc
jl
mov
dec
loop
ret
push
mov
sub
push
mov
test
pop
das
js
fcoms
lahf
jl
pop
int3
mov
ds
jmp
inc
adc
ljmp
and
sub
adc
pop
push
jl
out
lock
xchg
push
add
or
aam
ret
insb
lgs
xchg
sar
aam
sbbb
add
jne
push
orb
jno
bound
dec
mov
les
ret
mov
stc
jmp
jnp
adc
aad
lods
dec
fimull
dec
xor
mov
out
sti
and
push
popf
lcall
gs
ja
rcrl
push
daa
or
mov
ja
lcall
lods
and
movsl
lock
lcall
and
shr
sub
push
mov
mov
not
and
inc
inc
pop
jmp
or
and
adc
sub
sub
repnz
mov
pop
pop
icebp
cmp
mov
adc
mov
add
imul
mov
lret
sbb
dec
inc
ja
cli
xor
inc
or
add
pusha
cmp
or
lcall
leave
jmp
in
or
jnp
or
inc
inc
cmp
inc
jae
push
push
jmp
std
lcall
and
cs
cs
pushf
inc
push
rolb
pusha
notl
cs
mov
rclb
dec
push
xchg
xor
fildll
add
rep
loope
aas
test
jo
fildl
push
xchg
andb
mov
lret
pop
mov
add
push
inc
sahf
cmpsb
popa
add
mov
xor
mov
icebp
sahf
test
sub
add
gs
push
adc
dec
push
sbb
cmp
push
loopne
in
int
sarl
xorb
sbb
loopne
adc
fcoml
sbbb
and
push
mov
popf
fldenv
xchg
scas
add
cmc
jnp
out
test
cmp
decl
inc
jp
push
out
lret
push
inc
mov
adc
xor
xor
pop
add
insb
movsl
push
bound
lea
inc
ss
mov
jmp
inc
dec
fisttps
hlt
jge
mov
fs
mov
imul
adc
lret
push
or
lods
fistps
push
mov
dec
rorl
test
jo
pop
xor
adc
outsl
clc
orl
sub
pusha
out
mov
mov
and
push
inc
neg
mov
in
in
xchg
mull
pop
push
jg
jae
int
orl
sbb
jp
sarl
ja
mov
test
dec
mov
pop
add
popf
pop
mov
cwtl
xchg
xchg
jns
cld
cli
pop
pop
int3
sbb
test
sub
adc
adc
inc
aam
popa
in
jp
push
loopne
push
push
cmp
push
mov
pop
ja
add
dec
push
inc
or
pop
xchg
scas
lds
cmpsb
add
outsl
hlt
add
xor
jge
data16
inc
push
adc
sub
arpl
pop
jmp
adcb
loope
lret
adcl
or
adc
add
xor
loop
cmp
push
adc
add
add
push
pop
mov
jecxz
dec
dec
icebp
and
fistpl
mov
and
nop
and
jmp
xchg
adc
inc
int
sti
loop
lods
notl
mov
out
filds
pop
mov
add
dec
pop
lret
mov
adc
push
sahf
sub
scas
inc
loope
mov
sbb
loopne
cmp
jo
mov
aas
xchg
push
dec
lds
mov
icebp
mov
push
mov
jecxz
pop
inc
rorl
ret
fmuls
mov
pusha
push
out
dec
push
loope
sub
mov
mov
sub
fildll
sub
daa
negb
rol
push
push
scas
test
and
int3
ds
jno
pop
xor
lret
dec
jne
repnz
jg
sub
shlb
imul
jne
or
push
notl
daa
ljmp
or
pop
sbb
fisttps
cmc
js
mov
mov
test
pop
idivl
sbb
addr16
mov
ret
add
outsl
stos
or
daa
pop
leave
jg
gs
negb
push
or
mov
sbb
mov
or
pop
sbb
push
lds
dec
pop
or
inc
sub
or
sti
xor
inc
jmp
in
testb
iret
lea
out
clc
jae
cmp
mov
rol
push
cs
jo
nop
fdivrp
pop
call
out
cmp
sahf
sbb
mov
add
cmp
dec
mov
mov
hlt
popa
adc
adc
mov
xor
loop
sbb
add
mov
ret
mov
and
mov
xor
cwtl
jmp
loop
lds
orb
nop
jne
sub
movsb
adc
mov
bound
cmc
dec
frstor
in
inc
or
les
inc
cli
shlb
stc
xor
orl
sarl
out
add
fbstp
xchg
repnz
sub
inc
xlat
inc
movsl
out
cwtl
xor
add
stc
push
shr
xor
and
out
jb
dec
fucomp
fsubrp
lahf
mov
out
adc
stos
adc
mov
mov
xor
stc
sbb
xchg
inc
cmp
or
add
cwtl
js
incb
add
add
and
nop
stc
add
ds
imull
adc
mov
inc
sub
cli
popf
adc
push
and
or
movsl
jmp
lahf
add
sbb
add
int3
push
push
push
mov
push
cli
lods
jns
ds
add
cmp
sbb
xchg
notb
dec
pop
dec
xor
shl
push
xor
xor
ljmp
mov
add
dec
inc
jmp
mov
jb
or
sub
xor
or
add
fistps
xor
and
add
cld
leave
shll
adc
pop
rcrl
mov
mov
inc
push
or
pop
icebp
lods
jmp
imul
and
pop
ret
add
rcll
xchg
idivl
in
bound
addb
pop
inc
push
push
pop
add
test
sbb
dec
out
jnp
and
test
add
add
adc
jp
pop
push
xor
lret
loope
add
pop
pop
pop
or
les
shl
xor
pop
xchg
out
push
ret
jl
pop
in
fcoms
jmp
mov
or
jmp
add
xchg
loope
das
inc
push
add
pop
stos
inc
xor
aad
xor
loope
or
dec
jbe
imul
nop
jne
or
imul
mov
lret
or
sub
ja
jmp
lds
push
jl
jmp
in
pop
notl
xchg
lods
mov
mov
add
push
pop
jmp
xor
mov
jno
ret
add
xchg
loop
sbb
inc
das
hlt
sub
adc
daa
jmp
push
and
adc
mov
clc
xchg
xchg
stos
xor
mov
sbb
lcall
popf
dec
push
das
jp
shl
in
cmp
adc
push
test
xor
jmp
or
lods
push
cltd
mov
push
loope
inc
xchg
jl
inc
sub
popa
jmp
shlb
ret
ja
adc
repnz
sub
or
inc
inc
and
cmp
and
mov
daa
xlat
pop
xor
mov
dec
fmuls
cwtl
push
fsubrl
push
aam
pop
sub
jmp
insb
lods
xor
call
mov
in
fcmovb
ljmp
xchg
dec
pop
sbb
push
mov
shr
ficomps
pop
sbb
fdivp
add
clc
xor
dec
or
push
sbb
test
rorl
push
lret
scas
sub
adc
ret
add
xchg
inc
add
jl
movsl
push
stos
rolb
loop
inc
or
scas
pop
pusha
lcall
xor
dec
scas
push
or
sub
push
les
ljmp
aas
cmpsl
pop
add
ljmp
push
push
jmp
insb
add
push
xor
and
push
cmc
xor
add
adc
fisubl
add
pop
push
jge
jle
inc
or
popf
sarl
data16
sarl
jb
push
mov
das
cmp
push
xchg
pop
and
sub
fbld
pop
push
xchg
dec
xor
and
jno
jo
loop
loopne
nop
add
mov
pop
icebp
in
jle
jns
jg
es
loop
repnz
xchg
sarl
aad
pop
or
imul
les
push
xor
or
cmpsl
mov
pop
jbe
pop
orb
cmp
cmp
or
jne
cmpsl
popf
xchg
inc
das
jle
dec
add
push
pop
pop
neg
dec
add
xor
enter
iret
lds
sbb
mulb
pop
or
daa
inc
xor
xchg
cmp
mov
dec
negb
pop
pop
pop
add
pop
inc
and
cmpsb
arpl
add
cmp
pushf
fisubl
cmpb
push
mov
sub
icebp
xor
xchg
push
xchg
pop
pop
push
mov
pop
mov
ljmp
in
jmp
scas
shll
test
jmp
loop
sbb
lcall
loope
pop
cmp
ds
add
pop
mov
mov
adc
pop
xchg
xchg
testl
push
inc
outsb
pop
xchg
je
out
jmp
lods
push
xlat
sbb
xor
sub
mov
or
add
jns
outsl
sub
fcoml
mov
add
xor
or
cmp
dec
sub
call
mov
inc
jns
bound
pop
dec
pop
hlt
adc
mov
adc
out
mov
jmp
add
jp
stc
or
je
rorl
pusha
push
and
add
filds
jne
iret
pop
adcl
sub
and
enter
cld
incl
push
es
jmp
or
mov
cmp
and
sarl
lahf
jecxz
add
cmp
icebp
incl
push
add
xor
pop
and
pop
iret
adc
jl
popf
and
loopne
roll
not
jmp
call
in
repnz
and
lcall
js
testl
daa
push
push
ljmp
fsubl
push
jle
call
and
dec
xchg
fisubs
jmp
imul
push
in
xchg
cltd
push
jno
pop
or
jmp
cmpsb
js
in
testl
xchg
pop
sub
iret
dec
pop
lods
ret
dec
add
adc
mov
fisubrs
jge
and
inc
es
and
call
push
rcll
xchg
inc
cmpsl
xlat
add
xchg
aam
sub
loope
add
mov
cmp
add
jg
in
sbb
sub
add
jmp
jmp
je
bound
push
add
dec
enter
add
adc
pop
mov
rcrb
xor
mov
cmp
add
sub
das
add
pop
dec
lods
fidivrs
pop
mov
fdivs
and
jns
adc
add
jmp
sarl
mov
cmp
mov
add
cld
cld
pop
dec
cmpsb
jns
add
aad
inc
ja
dec
adc
sub
stc
aam
fnstsw
jnp
xor
pop
stos
daa
xchg
mov
cmpsl
jnp
dec
mov
enter
pop
idivb
pop
pop
jbe
sbb
push
int3
test
or
pop
push
popf
lock
sub
sub
mov
xchg
daa
mov
xchg
out
mov
ret
fstps
inc
mov
lds
leave
js
pusha
int
int3
pop
sahf
xor
jmp
loopne
ffreep
jno
or
or
cmp
lea
and
dec
enter
sub
cmp
push
mov
cltd
and
and
test
int3
mov
rorb
mov
dec
cmovg
lret
xchg
or
in
fcompl
bound
lahf
gs
cmp
pop
sub
or
push
and
add
icebp
sbb
sbb
iret
aas
popl
jb
ljmp
adc
push
lahf
ljmp
sub
push
inc
and
jge
cli
xor
ret
sub
iret
leave
add
lds
je
aad
rorb
jmp
std
jae
mov
mov
repnz
mov
xor
sbb
sbb
add
jbe
jp
cmp
inc
adc
pop
fistps
dec
std
out
xchg
xchg
iret
popf
and
loopne
push
out
cmp
ds
add
leave
xchg
in
das
add
js
popa
sub
xchg
or
pop
push
jmp
pop
loopne
mov
loopne
sub
cltd
mov
dec
mov
adc
dec
aam
orb
pop
inc
rcr
hlt
pop
mov
fimuls
dec
fldenv
xchg
push
push
and
sub
daa
mov
push
arpl
leave
xor
call
fildl
mov
xor
inc
jge
cmp
xchg
cli
or
loope
ret
xchg
mov
jbe
push
movsb
in
jnp
insb
sub
ret
add
mov
repnz
loope
dec
jb
insb
jmp
pop
inc
sub
sbbb
mov
shl
pop
insl
or
sbb
cltd
dec
add
mov
repz
or
pop
loopne
xor
push
cmp
adc
mov
inc
jnp
cmp
ja
scas
pop
mov
mov
or
xor
into
and
or
out
jo
jecxz
in
stos
dec
push
das
push
mov
not
mov
sti
adc
std
xor
or
and
dec
mov
das
pop
loope
add
push
ds
popa
daa
add
pop
add
sbb
bound
mov
jle
test
sbb
pop
or
jmp
shl
pop
das
mov
shrb
lock
push
js
sti
pop
cs
jl
bound
mov
mov
xchg
add
push
cmp
pop
roll
pop
pop
test
mov
mov
pop
test
insb
adc
pusha
pusha
mov
sbb
out
jmp
insb
push
push
jmp
jecxz
dec
loopne
movd
xchg
dec
imull
mov
shrb
dec
pop
push
jne
loop
push
add
insb
test
shr
xchg
aas
daa
jecxz
scas
lock
mov
in
jle
pop
add
aad
out
push
push
sar
or
insl
lret
sub
cmp
movsb
lods
rorb
push
bound
dec
scas
cmp
jmp
pop
out
gs
shl
jnp
xchg
fsubp
rcrl
les
pop
repnz
xchg
jmp
jp
or
ss
cmc
jg
and
and
pop
in
enter
mov
pop
xor
push
in
pop
sarl
or
negl
sub
hlt
test
add
shlb
iret
mov
dec
insb
js
sub
push
pop
mov
mov
shrb
jmp
add
xor
fimull
jg
or
je
aaa
push
adc
insb
imul
mov
inc
lods
xor
lret
add
or
arpl
push
pop
mov
sarb
iret
orb
xchg
in
fsts
xor
push
stos
in
dec
pop
fsubrl
xchg
xor
fldt
push
dec
adc
add
outsb
pushf
sub
es
ficoms
inc
pop
sub
sbbb
lock
neg
nopl
ret
movsl
xchg
outsb
mov
adc
out
xor
addr16
dec
xchg
dec
push
push
popf
push
mov
addl
mov
fists
sub
and
hlt
popa
pusha
lea
mov
pop
and
gs
setb
dec
adc
fnstsw
xlat
cmpsl
add
inc
jmp
hlt
add
push
dec
xchg
insb
test
ret
cld
push
mov
sbb
mov
data16
or
mov
and
and
popa
sbb
add
ret
out
push
std
dec
pop
pop
cmp
mov
cmp
or
sbb
adc
bound
dec
iret
add
repnz
xor
and
inc
out
cmp
mov
aas
test
mov
ljmp
xor
loope
lods
leave
insl
stos
xor
xchg
add
lds
in
sub
in
nop
dec
icebp
inc
adc
push
add
sub
dec
add
dec
cmp
les
dec
mov
je
fsubrp
pop
orb
sbb
idiv
sbb
scas
push
add
add
adcl
and
cs
add
xchg
pop
or
jb
fsubr
add
das
out
mov
fmull
add
test
jmp
scas
sub
jecxz
lahf
xchg
push
push
outsl
fwait
mov
add
incl
imul
sub
mov
push
mov
nop
mov
cmp
lock
push
icebp
dec
cs
test
mov
rcrb
imul
lea
inc
lods
dec
jg
decb
push
mov
sbbb
and
pop
add
xlat
dec
jmp
pusha
and
mov
add
or
es
cmpsb
jns
mov
push
mov
pop
xchg
jns
test
int
adc
gs
sti
gs
notl
das
daa
push
enterw
pop
aam
sbbb
les
ss
dec
negl
inc
push
mov
and
mov
mov
mov
fcoms
dec
or
pusha
dec
push
xlat
loop
push
xchg
aaa
mov
aam
pop
push
inc
ja
dec
sub
sub
mov
add
gs
icebp
shlb
aad
cmp
pop
push
ret
push
pop
dec
push
sar
sub
and
adc
mov
ret
or
leave
and
mov
or
je
cmp
shrb
and
sub
sub
jne
clc
js
add
clc
in
mov
jb
outsb
rolb
pop
lret
stos
xchg
mov
mov
inc
nop
cmpsb
aas
nop
adc
and
sti
add
jmp
cli
mov
idivl
aaa
cmp
jae
mov
adc
xor
dec
mulb
pop
popf
or
inc
stos
xorb
dec
add
mov
nop
stc
movsb
inc
lret
in
cli
cltd
pop
pop
js
and
pop
push
mov
mov
or
adc
xchg
adc
and
icebp
arpl
movups
pop
mov
push
insb
inc
mov
lret
les
add
ljmp
mov
lds
pop
xor
fsubr
adc
xor
mov
push
fcom
aaa
stos
fisttpll
int3
xor
push
inc
add
rorb
ss
fcom
xchg
jmp
shll
rolb
xor
jl
adcb
aad
push
xchg
fwait
push
pop
push
daa
mov
push
fsts
jmp
and
test
mov
lahf
fidivrl
mov
add
xor
addb
out
adc
or
jmp
out
adc
mov
ret
lods
jne
mov
mov
inc
gs
scas
lret
je
mov
push
jbe
or
testl
shrl
call
xlat
sbb
pop
pop
loop
divl
adc
aad
mov
scas
cmp
mov
pop
repnz
pop
xchg
not
jnp
pop
jb
pop
mov
or
pop
mov
sub
dec
sarl
xor
jmp
ror
es
int3
jbe
mov
insl
or
jp
insb
add
mov
jl
shrl
orl
out
jnp
xor
mov
cmp
addb
pop
mov
mov
xchg
jl
inc
mov
xchg
popa
or
dec
test
pop
xlat
add
mov
jp
add
in
mov
inc
outsl
jb
pop
loop
adc
inc
pop
mov
and
imul
clc
hlt
pop
stos
adc
enter
xchg
popa
add
ds
popa
jno
cmp
xchg
call
imul
add
or
jne
jne
adc
pop
repnz
xchg
lods
mov
push
sub
adc
aaa
ljmp
inc
dec
scas
mov
stc
jnp
adcb
sub
testb
shr
xchg
mov
mov
jecxz
subl
adc
fsubr
add
rorb
and
mov
add
lds
in
paddb
adc
jmp
rolb
cmp
cs
idivb
rclb
cmc
sub
ficomps
cwtl
xchg
push
push
sub
cli
or
xor
add
jno
sub
les
fdivr
pop
fucompp
popa
sbb
inc
fnstcw
push
test
cmpsl
hlt
add
arpl
cmp
xchg
push
cmpl
jge
jecxz
lds
movsl
or
dec
cwtl
cmp
scas
lahf
jns
jmp
loopne
pop
xchg
xchg
jp
xor
in
adcl
sbb
cmp
decl
hlt
pop
mov
movsl
cld
das
lret
ja
in
icebp
roll
xchg
sbb
and
or
sub
nop
push
dec
rorb
mov
or
dec
jl
push
mov
pop
adc
pop
fsubs
push
cmp
dec
mov
adc
shll
xlat
push
inc
gs
nop
push
mov
shlb
pop
scas
lods
mov
out
int
pop
clc
mov
scas
and
in
outsb
or
lock
fs
je
sti
lods
add
mov
add
xchg
inc
mov
xchg
pop
push
inc
mov
xchg
rorl
sub
fsts
dec
xchg
push
ud1
daa
nop
cltd
sbb
divl
cmp
adc
xchg
mov
mov
popf
in
mov
xchg
loope
xor
push
mov
cwtl
jecxz
sub
add
leave
loop
or
xchg
pop
xor
cmp
jg
adc
pop
jmp
jnp
pop
std
mov
xchg
mov
decl
dec
lret
negl
ficoml
or
cmp
jmp
outsb
add
push
iret
mov
dec
pop
lea
sbb
dec
addl
dec
shr
decb
dec
lock
xchg
addl
lea
fwait
nop
ss
dec
incb
mov
mov
rcll
insl
jmp
xchg
in
inc
jmp
xchg
outsb
lea
cmpsb
add
cltd
xlat
std
mov
cmp
and
insl
clc
mov
or
fucomi
add
jae
jne
pop
loop
mov
push
out
jge
add
sbb
jmp
test
mov
pop
ret
push
sahf
fistpl
lret
lods
push
xor
add
sub
and
cmc
sub
ret
shrb
or
lods
mov
jmp
int
ret
or
and
push
adc
pop
cmpsb
nop
loope
xor
shl
fistpl
ljmp
sub
xchg
add
xchg
jbe
imul
jmp
cmc
fists
lret
scas
pop
add
pop
pop
out
test
xchg
call
jne
add
mov
pop
and
push
mov
loopne
icebp
fs
das
test
xchg
pop
adc
testb
and
mov
nop
mov
xbegin
xchg
xor
or
into
pusha
insb
push
bound
mov
jmp
push
scas
push
inc
xor
pop
ja
imul
dec
mov
push
mov
jg
sub
sarb
dec
mov
xor
lock
out
outsl
push
adc
pop
xor
fdivs
inc
inc
pop
jmp
incb
ror
pop
and
mov
add
and
mov
enter
adc
ljmp
inc
int3
jb
push
pop
popa
popf
add
mov
dec
sub
gs
imul
ljmp
pop
ljmp
pop
nop
xchg
push
insb
stc
push
shr
aas
imul
outsl
andb
and
jns
xchg
fwait
push
dec
out
jo
movsl
dec
xchg
pusha
daa
or
jl
outsb
sub
shll
or
or
dec
lock
push
movsl
mov
lahf
pop
push
mov
sbbb
jge
ljmp
mov
inc
inc
mov
jecxz
movsb
loopne
sahf
dec
jmp
cmp
out
xchg
mov
in
icebp
lret
sti
push
or
pop
shr
add
int3
pop
loope
push
jbe
push
cmc
ljmp
push
push
add
xor
mov
adc
push
fidivs
iret
add
cwtl
jg
fsts
jl
or
jge
in
shr
fcmovnb
mov
adc
push
pop
and
dec
mov
je
andb
loope
jbe
sbb
or
mov
out
pop
mov
sub
sub
pushf
sbb
repz
lcall
popf
out
xchg
xchg
cmp
and
lcall
mov
repnz
in
xchg
loop
pop
fisubs
add
inc
incb
push
dec
mov
sbb
push
fiadds
cmp
mov
xor
add
ss
sub
inc
or
pop
pop
xorl
roll
adc
fdivrs
xorl
mov
push
push
je
loope
and
loopne
ds
push
or
sub
adc
imul
repz
and
outsl
push
out
jl
daa
dec
add
lods
fdivrs
cmp
jmp
je
push
cmp
aaa
push
cmp
adc
test
pop
addb
mov
hlt
inc
mov
das
ljmp
sub
adc
movsl
mov
hlt
or
call
pop
mov
dec
or
and
lret
push
incl
mov
push
adc
jle
mov
notl
xor
mov
push
add
in
in
or
or
sbbb
sbb
addr16
push
push
adc
jmp
xchg
sti
dec
fmull
test
mov
cmp
or
sbb
mov
inc
movsl
xchg
push
push
pop
adc
push
cmp
dec
sbb
dec
jne
test
shl
push
dec
sbbb
lret
mov
mov
insb
pop
inc
inc
pop
xor
sbb
inc
icebp
sub
out
sbbb
pop
movsb
add
xor
dec
addl
nop
icebp
xor
mull
or
pop
xchg
rcl
cmp
push
inc
pop
push
mov
or
mov
push
outsl
cld
jl
cs
ret
push
sbb
and
add
std
lret
into
jmp
mov
inc
xor
js
inc
inc
fxch
fsubrl
js
add
mov
jmp
sahf
mov
and
jbe
repnz
shr
sub
push
pop
imul
adc
pop
mov
subb
pusha
shrl
or
push
add
add
ss
dec
or
or
arpl
jo
pop
and
sbb
daa
jp
sbb
push
pop
cld
lods
lret
xor
add
adc
and
cmpsl
pushf
xlat
mov
scas
flds
lret
int
fwait
btc
testl
or
stc
pop
mov
jmp
nop
iret
cmp
jle
test
shrb
add
sbb
cwtl
sbb
loopne
pop
and
incl
sub
jmp
pop
and
push
pop
lock
pop
rolb
cmp
pop
addr16
bound
out
sbb
adc
pop
cs
or
ret
inc
and
popa
in
aam
mov
cmp
out
push
insb
inc
iret
cmpb
out
sbb
in
sbb
loope
or
push
icebp
dec
pushf
inc
or
mov
cmc
xadd
lods
fstl
pop
repnz
repz
pop
lock
jbe
add
loopne
jmp
rcrl
jg
pop
inc
xor
lea
sub
inc
add
je
bound
daa
nop
xchg
pop
movsb
jmp
push
push
pop
subl
call
mov
push
mov
mov
jmp
fs
call
loopne
mov
sub
and
mov
ljmp
cwtl
and
and
imul
or
jo
push
mov
mov
mov
or
xor
out
mov
pop
push
add
or
push
das
fsubrs
xchg
cld
jae
cmc
hlt
in
movsl
push
cmc
add
addr16
dec
xchg
jmp
inc
ljmp
jbe
dec
leave
xor
mov
or
mov
add
subl
pop
inc
add
and
pusha
daa
stos
adc
movsb
sti
std
mov
push
xor
dec
mov
push
aam
push
xor
push
and
inc
sbb
add
outsl
inc
adc
xchg
not
or
cmp
icebp
jp
mov
xorb
xchg
add
mov
mov
push
lahf
movsl
shl
mov
notb
call
jnp
or
inc
pusha
sbb
daa
sub
pop
or
mov
pushf
test
outsl
mov
cmp
int3
xchg
dec
cmp
mov
xor
fsubrs
pop
push
scas
sub
cmpsb
aaa
hlt
mov
dec
bound
andb
sub
add
jmp
out
cmp
inc
int
addr16
mov
xchg
bound
bnd
dec
ret
mov
pop
out
out
les
mov
adc
fcmovu
dec
sub
push
inc
cmpsl
or
jo
cmp
in
xor
add
add
sub
test
mov
in
enter
mov
adc
push
fstps
adcl
jae
jp
idiv
jge
xchg
add
cld
nop
imull
add
stc
xor
in
rclb
dec
pop
xor
pop
xor
dec
flds
push
push
jb
je
xchg
add
ds
ljmp
or
push
adcb
xchg
push
orl
dec
push
cmc
sub
or
xlat
xchg
lods
cmp
in
or
push
add
fcoms
rclb
aaa
cmp
arpl
or
pop
pop
icebp
mull
fistps
bound
lcall
sbb
adc
pop
xor
arpl
or
or
sub
add
clc
inc
std
mov
rcl
test
test
insl
mov
jb
sbb
cmp
push
cmp
mov
subb
bound
xchg
fidivrs
or
push
orb
pop
daa
jns
sbb
mov
mov
add
adc
or
pop
sbb
subl
out
scas
push
sub
xor
cmpsl
cld
and
pop
xchg
subb
lea
pop
add
inc
jecxz
inc
fldenv
cs
or
jp
js
and
sbb
idiv
lds
jns
ret
lea
std
adc
mov
mov
add
cmp
add
pop
std
sbb
mov
pop
ja
adc
das
or
imul
push
or
add
pop
cli
pop
ret
in
loop
and
cltd
mov
add
add
push
int3
add
cltd
jg
jbe
add
push
int
aam
pop
dec
pop
addr16
in
imul
sub
sub
pop
call
or
push
push
inc
jmp
and
arpl
mov
outsb
push
pop
push
mov
outsl
sbb
jbe
ljmp
add
mov
and
cmp
push
scas
lea
sub
push
cmp
adc
sbb
jbe
push
push
and
pop
pop
pop
add
xlat
stos
sub
pop
push
ljmp
add
fildl
mov
or
hlt
cmp
mov
mov
push
cmp
jne
lea
cs
mov
sbb
mov
jecxz
sar
sbb
cmp
cmpsl
xchg
add
mov
push
mov
or
sbb
fs
xor
sarl
rclb
xorl
cmp
cwtl
mov
das
repz
out
movsb
push
push
clc
jns
cld
test
mov
stos
rcll
sub
sub
push
in
fisubs
or
xchg
add
add
jno
or
xchg
push
jmp
xor
pushf
pop
jmp
inc
outsl
inc
arpl
outsb
loopne
or
movl
jo
les
scas
sub
push
adc
popf
adc
fcoms
mov
cli
and
enter
mov
gs
mov
fstl
adc
stos
sbb
dec
xor
mov
ds
in
out
sbb
adc
addr16
ljmp
xchg
sahf
xor
and
repnz
cmpsb
dec
xor
jmp
mov
inc
ja
mov
sbbb
push
pop
jecxz
inc
add
xchg
pop
out
arpl
pop
pusha
xor
pop
pusha
int
pop
mov
pusha
mov
mov
scas
test
fsubrs
xor
es
add
and
pop
add
sbb
mov
add
jge
pop
and
mov
rorb
sbb
enter
lret
jns
cmp
fsubs
lea
arpl
jb
repnz
in
inc
xchg
shrb
mov
call
sub
shrl
sub
js
inc
or
xlat
std
shrb
jmp
push
push
in
aam
and
movsb
mov
lahf
addr16
das
rcrl
mov
insl
into
jb
jg
scas
push
repnz
push
push
xor
inc
daa
loopne
pop
stos
dec
arpl
das
pop
sahf
cmpsb
es
push
imul
aad
addb
dec
push
mov
xor
sahf
repnz
mov
jno
cmp
stos
dec
incb
pop
mov
adc
jmp
ja
or
pop
mov
sbb
or
stos
cltd
or
sbb
sbb
cmpsb
movsl
out
popf
testb
in
inc
mov
imul
push
jmp
mov
imul
cmp
push
andl
mov
mov
cmp
pop
fistps
push
sbbb
xor
push
cwtl
mov
push
mov
cmp
mov
jbe
sahf
jmp
sbb
push
in
dec
gs
and
mov
add
inc
push
dec
or
aas
xchg
jo
das
daa
inc
inc
fdivs
ffreep
push
imul
arpl
std
pushf
sbb
or
lret
add
sar
or
fwait
inc
jne
or
jmp
pop
pop
jmp
mov
xchg
pop
pusha
push
mov
add
dec
sbb
pop
mov
cli
lret
adc
clc
ds
ljmp
movsl
xchg
push
adc
shl
sub
loopne
out
add
and
push
push
mov
add
cmp
xor
lret
repnz
daa
and
inc
rclb
sahf
addr16
push
fisttpl
mov
ljmp
push
mov
shl
mov
mov
add
xchg
ljmp
aam
xor
mov
sub
mov
mov
rorl
jne
movsl
and
xchg
clc
mov
add
sub
out
push
or
xor
orb
mov
lods
mov
add
inc
mov
cs
jo
test
lods
test
sub
sbbl
inc
xor
jo
fimuls
clc
cmp
jmp
mov
adc
and
shl
or
je
push
add
inc
push
sub
movsl
mov
call
subl
enter
adc
mov
orl
out
and
push
movsb
mov
loop
or
or
inc
adc
aam
negl
fwait
sbb
insl
out
pop
pop
jmp
repnz
adc
xor
push
add
bound
xchg
pop
mov
and
outsb
nop
lods
loop
dec
sub
sub
add
push
jg
ret
into
std
rorl
sub
jns
lds
sub
sbb
xchg
add
lahf
clc
add
push
jae
dec
stos
and
cld
xchg
push
sbbl
fsubrl
leave
mov
fs
push
mov
adc
stos
sub
les
lock
and
dec
mov
dec
xchg
loop
aam
and
inc
mov
adcl
mov
mov
push
inc
mov
jne
sbb
dec
pop
push
and
push
adc
and
pop
lods
push
cmp
dec
jns
push
mov
outsb
mov
out
add
fiadds
popf
pop
shlb
xchg
adc
xor
or
fwait
outsl
inc
lock
xor
inc
or
orb
mov
jo
xor
sbb
cs
insl
pop
ljmp
popw
shr
add
dec
dec
adc
xchg
paddq
add
push
cmpb
push
sub
jae
pop
dec
enter
dec
clc
sbb
jae
shl
add
jecxz
fucomi
fdivl
out
jno
lds
movsl
lods
sti
loop
dec
push
adc
fnstsw
and
nop
add
test
mov
clc
test
pop
sbbb
sti
and
arpl
repz
push
inc
test
les
xchg
jno
jmp
ret
shll
roll
cmp
push
sub
mov
ret
push
fwait
pop
fistpll
dec
push
dec
cwtl
ret
pop
sarl
sub
inc
test
lock
nop
push
repz
add
jg
out
rcrl
jmp
mov
ret
adc
outsl
or
es
adc
mov
push
inc
pop
or
lods
and
add
sub
icebp
pop
popf
xorb
daa
cs
std
or
test
mov
push
cwtl
pop
add
and
stc
cmp
inc
jmp
pop
repnz
rcrb
push
xor
xchg
jl
push
and
clc
xor
push
push
add
call
leave
je
inc
or
and
in
nop
rorb
adc
jae
and
xor
cltd
bound
in
xchg
or
jecxz
nop
ss
inc
iret
and
daa
jo
add
inc
iret
jmp
js
xchg
testb
jbe
add
loop
push
mov
xchg
lds
pop
jmp
pop
xor
mov
or
jmp
and
adc
xchg
xchg
push
mov
inc
loop
call
dec
not
sti
add
cli
sub
pop
adc
xchg
ja
iret
xchg
lods
push
enter
jmp
sahf
inc
dec
lahf
jle
mov
daa
jmp
enter
sub
repz
inc
add
pop
xchg
pop
popf
loop
add
das
dec
data16
sbb
xchg
shll
test
fdivrl
icebp
push
cmp
outsl
xor
mov
jmp
jle
xor
das
mov
and
xor
rcrl
add
jle
imul
jmp
out
test
lods
aaa
jl
push
pop
or
lret
cli
insl
ror
jmp
popf
inc
dec
jge
adc
mov
out
push
mov
and
jmp
push
dec
jae
mov
int
repnz
xor
stos
cmp
and
je
fisttpll
or
mov
dec
inc
or
mov
mov
mov
mov
or
aas
in
inc
jmp
pusha
je
sub
rorl
fldenv
adc
jge
add
cs
ljmp
andb
xchg
cmp
repnz
cmp
push
adc
fistl
popa
cmpb
in
cmc
cmp
rolb
out
jmp
repnz
push
mov
add
mov
adc
mov
aas
and
addb
mov
mov
addb
outsb
idiv
dec
add
push
ffree
aaa
in
or
cld
xchg
jle
xchg
mov
mov
mov
jbe
repnz
inc
in
aad
mov
sub
jg
xchg
in
cld
icebp
loope
inc
das
aas
loop
sub
pop
mov
adc
add
test
mov
push
cmp
or
pop
gs
je
and
push
pop
out
jmp
cmp
std
inc
outsb
fstpl
add
into
popa
pop
pop
push
adc
mov
in
xor
push
repz
cmc
movsl
xchg
andb
loop
into
pushf
xor
pop
dec
inc
not
jl
push
push
fwait
push
aas
push
xchg
push
imul
push
js
dec
iret
daa
pushf
xchg
push
ljmp
inc
jmp
push
movsl
aad
xor
andb
daa
push
push
hlt
in
push
xchg
mov
aas
int3
daa
adc
shrb
in
aas
xchg
inc
outsb
dec
aaa
fstps
mov
inc
and
repz
xlat
sti
sub
jbe
or
imul
xor
adc
shlb
add
mov
mov
lods
mov
aad
imul
jae
jnp
dec
daa
cmp
sub
add
jecxz
mov
out
add
mov
push
ljmp
xor
cli
jb
sbb
jae
push
pushf
add
or
dec
add
enter
pop
add
jmp
hlt
ficoml
jmp
lods
jo
sbb
ss
imul
and
mov
inc
mov
mov
lcall
mov
mov
jo
inc
cmpsl
dec
faddp
fwait
nop
repnz
pop
push
stos
add
fstl
add
mov
fiaddl
daa
mov
enter
loopne
lahf
hlt
sbb
jo
ficoml
dec
mov
dec
xor
xchg
aam
inc
push
xchg
jns
jmp
sahf
cmp
lret
jmp
sub
dec
and
jo
mov
dec
or
xchg
outsb
sub
pop
divl
jl
push
sub
adc
xor
outsl
jmp
bound
dec
add
pop
or
or
in
xchg
sub
mov
iret
std
out
sub
xchg
or
and
aas
subl
adc
mov
stos
loope
clc
adc
xor
jo
addb
xor
out
stos
sahf
push
xor
jb
push
push
mov
ret
xlat
icebp
push
add
test
jg
repz
add
ret
syscall
mov
jmp
dec
out
popa
jmp
mov
and
and
rcrl
push
add
push
pop
inc
mov
mov
lret
imul
gs
jp
popa
dec
mov
xor
pop
insl
mov
pop
sarl
or
imul
inc
cmp
incl
pop
jle
pop
rcrb
orb
xchg
xor
mov
add
jmp
push
xchg
push
inc
nop
xlat
jmp
xorl
adc
or
xlat
jne
repnz
mov
mov
mov
mov
inc
mov
out
lahf
inc
adc
sbb
shll
sub
stos
lcall
inc
aad
ficomps
ja
imul
fs
sub
out
add
jge
fldl
and
fldcw
out
std
fistl
jle
mov
data16
stos
aam
loop
add
cmp
ficoms
cmp
mov
sub
jg
push
pop
mov
adc
fildl
mov
insl
or
shl
xchg
rcr
xor
jmp
xor
fmul
mov
int
dec
push
pusha
mov
stos
adc
out
adc
lods
rorl
add
jmp
jne
stc
in
mov
push
mov
or
xchg
xor
pop
add
push
sub
jmp
add
and
leave
nop
es
pop
aam
shll
jmp
scas
int
lock
sbb
sbb
push
add
and
fsts
cmp
mov
popf
xor
es
push
sti
jb
xchg
fnstcw
addr16
test
fadds
out
leave
adc
andl
pop
adc
push
mov
inc
xor
and
push
or
add
cmp
or
lods
pusha
push
and
mov
xchg
mov
push
mov
popa
mov
inc
push
mov
clc
pop
dec
sub
mov
scas
lret
sti
sub
mov
add
shlb
lret
cmpsb
mov
cmp
xlat
mov
popf
push
xor
push
adc
dec
adc
fucomip
cmp
jmp
xor
stc
sub
or
popa
xor
xor
add
push
icebp
xchg
dec
push
sbb
lock
sub
inc
fucomp
xchg
pop
scas
inc
scas
push
inc
or
mov
jmp
sbb
rclb
pop
ljmp
int
push
mov
sub
adc
stos
enter
inc
popf
adc
cld
js
jmp
mov
jle
insb
in
push
add
in
ljmp
mov
cld
std
rcl
test
push
aam
leave
lea
xor
and
mov
jmp
add
loop
loope
mov
pop
fs
insl
sbb
adc
sbb
add
xchg
idivb
lcall
sub
add
hlt
mov
mov
sti
in
mov
jmp
fisttpll
adc
inc
pop
add
es
faddl
or
les
add
xchg
sub
addr16
icebp
lret
jmp
push
push
cmpsl
mov
or
outsb
adc
add
sbb
das
sti
and
out
add
rolb
add
push
mov
xor
fprem1
shlb
aaa
test
jecxz
add
xor
pop
push
jl
fdivr
loop
xchg
sti
test
mov
xchg
aad
lcall
jl
push
dec
pop
movsb
lahf
adc
scas
inc
nop
adcb
cmpsl
hlt
daa
es
hlt
add
or
xchg
lds
and
addb
xchg
ds
repnz
push
push
pop
cmp
subl
dec
mov
hlt
add
stc
jecxz
iret
in
or
or
jmp
lods
cs
push
and
pop
es
jo
loop
in
adc
xchg
and
sahf
cwtl
bnd
sub
cmp
add
jns
cs
repnz
scas
pusha
inc
pop
xchg
push
adc
adc
aas
pop
and
cli
pusha
loope
jecxz
or
and
mov
inc
fiadds
cmpsb
sbb
out
fstl
xchg
or
inc
icebp
shlb
decl
repnz
int
dec
inc
incl
cld
dec
inc
jmp
outsb
dec
lock
lods
popf
je
inc
sarl
xchg
sub
cmpsl
subl
insl
pop
adc
repnz
test
xchg
mov
push
sub
add
push
pushf
mov
shr
push
mov
jae
fucompp
mov
jmp
stos
dec
xchg
add
loopne
and
cli
mov
sub
mov
mov
dec
outsb
aam
add
fiaddl
movsb
decb
adc
adc
dec
and
and
lahf
stos
repnz
add
push
xor
decb
fdivrl
lret
mov
jg
pop
dec
mov
in
fdiv
or
sub
add
js
cwtl
dec
popa
xor
sbb
js
mov
in
in
jns
push
loopne
jmp
loopne
les
mov
sbb
aad
push
das
adc
mov
ret
add
xor
or
rcrb
or
push
inc
add
inc
and
mov
mov
daa
pop
or
xchg
xor
out
pop
and
and
mov
imul
and
push
leave
jle
cmp
in
or
jmp
mov
push
dec
pop
out
push
xchg
mov
jecxz
xchg
xchg
add
outsb
sub
mov
shll
sub
jns
pop
mov
sbbb
push
idiv
adc
iret
idivl
scas
xchg
ja
test
scas
add
push
push
push
pop
and
pop
jmp
push
sub
dec
test
and
mov
xchg
outsl
cli
push
dec
aas
sbb
inc
sub
lock
adc
or
repnz
jbe
or
jmp
sar
mov
hlt
mov
cmp
enter
cmp
jo
pop
cli
jmp
mov
pop
or
ret
cltd
iret
andl
mov
add
jbe
inc
cltd
enter
das
shl
pushf
add
in
jle
and
int
enter
mov
dec
lret
jecxz
popa
pop
and
rolb
adc
out
cld
fisttps
mov
xchg
imul
sbb
jl
and
and
adc
push
fcoms
ret
dec
and
sub
jmp
in
in
cmp
cli
sub
mov
fidivs
movsb
pop
ss
cs
mov
jp
and
add
addl
push
popf
or
mov
lret
cld
inc
dec
fwait
cli
mov
jbe
scas
loop
lds
roll
push
xorb
in
test
pusha
sub
add
lods
dec
or
and
or
pop
out
lock
pop
jns
xchg
pop
pop
push
mov
mov
push
pop
jl
xor
cmpsl
rcll
push
mov
jnp
pop
add
cs
cwtl
cmc
std
sub
sbb
mov
and
sarb
add
aas
arpl
imul
jmp
scas
dec
pop
xor
xorb
ret
xor
push
mov
add
repnz
push
insl
das
mov
popf
sbb
push
fsubrs
cmpb
cmp
xor
and
pop
js
dec
xor
dec
loopne
pop
pop
lds
xlat
pop
inc
push
mov
or
rorl
orb
lods
and
jl
imul
inc
inc
push
cwtl
mov
adc
jp
popf
inc
loope
mov
jmp
add
jbe
gs
out
pop
imul
dec
rcll
push
test
lret
leave
dec
outsb
xchg
pop
shr
dec
pop
mov
push
dec
push
cmpsb
push
ss
test
add
or
clc
cmpb
xor
ret
stc
enter
jb
mov
sub
aaa
sub
neg
add
push
pushf
mov
cmp
ret
pop
out
inc
bound
push
out
out
mov
into
or
jmp
inc
dec
mov
out
mov
push
add
mov
dec
push
jmp
dec
movsl
add
rolb
xchg
inc
push
jmp
sub
cmp
cmpsl
insb
aaa
hlt
cltd
popa
xchg
popl
cmp
mov
std
inc
notl
mov
icebp
pop
cmp
pop
call
jae
call
inc
pop
shl
popf
mov
lret
adc
out
add
and
xchg
xchg
stos
push
dec
add
repnz
pop
jns
mov
xchg
mov
push
mov
inc
in
sub
add
cli
adc
mov
pop
jg
jl
dec
imul
inc
and
rorb
pop
rcll
shll
es
jmp
daa
cli
inc
mov
insb
inc
pop
loopne
scas
pusha
push
jno
cmp
jno
subl
and
push
jmp
outsb
mov
lret
roll
mov
push
mov
jmp
mov
pop
mov
test
add
je
sub
or
rcrb
das
iret
inc
cmpsl
adc
test
bound
push
andl
lods
push
dec
test
daa
jmp
in
das
push
jns
nop
inc
dec
lods
repnz
xchg
mov
inc
enter
ficompl
xor
pop
sbb
or
jg
pop
xor
mov
cmp
loope
aaa
cld
test
stos
shll
clc
pop
sub
mov
rorl
daa
daa
xchg
adc
dec
ljmp
push
adc
jo
out
jle
ret
std
loope
sbb
or
push
int3
popf
inc
jg
aad
inc
pusha
xchg
or
lahf
lods
add
mov
pop
mov
pop
lock
xchg
xchg
mov
fbstp
rclb
add
add
xorl
cmp
jbe
dec
movsl
fs
test
rorl
sub
xchg
pusha
mov
push
dec
icebp
pop
adc
mov
sarb
cs
sub
pop
aam
jb
sarl
push
inc
adc
int
add
fstl
iret
cwtl
lret
adc
je
fs
xor
inc
or
pop
jmp
sub
jge
add
push
ret
aad
pop
test
push
sbb
push
mov
pop
hlt
add
xor
test
int3
pop
ja
ret
in
mul
push
pop
ret
or
xor
push
push
push
jmp
mov
and
push
les
lods
xlat
pop
mov
or
pop
pop
push
push
xchg
fdivrl
addr16
repz
das
jmp
or
outsl
adc
mov
fsubrl
xchg
push
and
repz
or
push
stos
mov
shlb
push
clc
jge
dec
pop
rorl
mov
es
pusha
cmp
xor
out
mov
and
jnp
negb
inc
ret
int
jp
and
xchg
addr16
sub
loopne
xorl
inc
jmp
flds
mov
sbb
shll
mov
add
mov
pop
pushl
mov
push
xchg
sahf
in
test
xchg
repnz
les
mov
push
mov
jmp
mov
mov
cmp
inc
jnp
out
movsl
xchg
pop
mov
inc
sub
mov
push
in
fistpll
xlat
cwtl
jecxz
push
add
mov
jmp
mov
rcrb
cmp
dec
add
adc
or
pop
and
movsb
sbb
mov
div
out
and
push
das
icebp
ret
and
stc
rcr
loopne
sub
outsb
es
push
and
imul
nop
push
push
mov
cmpsl
or
out
jns
lret
add
inc
mov
jbe
sub
pop
imul
mov
jne
or
push
pop
jmp
jbe
shll
and
not
xor
mov
subb
cmpsl
leave
mov
cmc
or
push
mov
pop
adc
adc
and
adc
xor
adc
ret
loop
adc
popf
push
pop
mov
call
shlb
mov
sub
mov
or
jp
jbe
jb
or
movsl
pusha
stos
stos
adc
gs
cmp
scas
aam
or
pop
adc
mov
nop
add
cmp
mov
pop
adc
add
or
icebp
cmp
push
mov
in
fucomp
cld
js
bound
xchg
lret
iret
movsl
ja
add
inc
and
xor
fbld
xchg
add
cwtl
rorb
lods
mov
rorl
mov
cmp
jo
test
ljmp
addr16
jl
shrb
aas
mov
outsb
repz
dec
push
adc
pop
add
jecxz
push
mov
nop
ds
add
fucomp
cmc
imul
push
jo
xchg
and
xchg
dec
in
mov
into
pop
mov
push
std
jnp
adc
rcrb
sbb
dec
movsb
push
sarb
and
arpl
repz
notl
rcrl
sbb
test
xchg
pushl
adc
addr16
dec
add
daa
jmp
imul
inc
xor
xchg
fs
mov
xchg
adc
ja
or
test
jmp
add
frstor
je
sbb
and
and
mov
lret
daa
ljmp
push
loope
ja
sahf
imul
mov
or
add
icebp
xchg
pop
stos
xor
push
or
add
and
cmpsb
sub
jp
pop
sbb
ffree
das
fnsave
inc
js
andl
pop
pop
mov
pop
ljmp
xchg
mov
xchg
add
mov
test
cmp
push
add
pop
ficompl
shll
mov
push
lcall
push
or
mov
and
cmp
dec
push
jmp
cmpsb
sbb
popa
pop
mov
call
lock
shll
fcoml
ja
or
pop
adcl
or
in
add
cmp
cmp
cmpsb
mov
insb
push
dec
shll
jmp
movsb
inc
gs
mov
and
cld
lods
test
or
and
mov
mov
add
and
jmp
aad
lahf
clc
push
sub
push
jmp
repnz
push
pop
fnstsw
sarl
cwtl
pop
mov
pusha
loopne
out
lcall
add
loopne
daa
pop
not
xor
rcrl
push
addb
sbb
dec
inc
or
fidivrl
mov
test
sbb
sahf
pop
push
push
mov
sub
push
shlb
mov
cmp
mov
adc
add
scas
or
adc
push
dec
xor
push
xchg
mov
adc
dec
xchg
or
inc
hlt
aas
dec
push
les
mov
mov
add
cmovp
scas
mov
jmp
enter
xor
mov
bound
hlt
dec
test
add
sub
jae
enter
mov
mov
jmp
out
xchg
pop
jbe
inc
das
outsl
xchg
xor
jnp
cmp
pop
imul
jnp
add
aad
mov
sar
xchg
jl
popa
mov
and
inc
pop
push
cmpsb
mov
jno
xor
sub
or
dec
xchg
push
loopne
sti
xlat
sub
les
cmpsb
xchg
push
and
cwtl
shrb
jae
pop
xor
sub
push
xor
stos
push
js
add
out
add
stc
ror
push
sbb
jmp
clc
das
mov
pop
rclb
or
add
out
pop
loop
rcrb
pop
jne
sub
divl
test
adcl
shlb
cld
movsb
adc
ret
or
mov
push
cmp
sub
add
fcoml
stos
push
pop
pop
lret
mov
pop
out
ret
inc
movsb
mov
pop
test
cli
mov
jg
jp
pop
ljmp
xor
jmp
sub
sub
data16
add
jmp
daa
ficoml
push
jno
jle
repnz
out
fistpl
dec
push
out
lods
cmc
out
push
das
mov
faddl
push
mov
xor
out
or
shl
jge
push
mov
mov
pop
testl
sbb
je
pop
mov
dec
pop
pop
or
or
cmpb
shrb
scas
and
dec
jb
sub
fsubs
add
sbbb
mov
js
in
add
mov
push
jmp
in
dec
inc
test
add
leave
call
enter
in
sti
jmp
test
mov
in
in
xchg
pop
mulb
adc
cmp
cli
and
int3
mov
xchg
cwtl
movsl
lods
add
cmp
adc
rcrl
sbb
pop
cwtl
stos
enter
and
pop
jmp
pop
leave
out
cmp
imul
mov
sub
lds
push
fs
adc
and
mov
xchg
xchg
je
lods
sub
and
sub
mov
pusha
rclb
arpl
add
mov
cmp
addr16
jns
arpl
rol
dec
mov
push
pusha
es
lds
and
repnz
xor
pop
xor
out
fs
adc
ret
std
jns
aas
xchg
clts
mov
hlt
push
pop
das
repnz
add
mov
fadds
and
movsl
popa
push
push
or
mov
clc
int
into
shrb
jge
pushf
pusha
enter
dec
push
jge
mov
push
cmp
xchg
pop
mov
mov
fisttpl
jns
aaa
je
push
addr16
cmp
or
sub
or
lahf
jl
adc
iret
pop
aas
imul
int3
imul
sbb
jns
sub
adc
cmp
pop
loope
sub
mov
pushf
sbb
mov
cld
ds
bound
dec
push
in
fidivl
int
or
ret
loopne
sub
aas
fstpl
je
dec
sub
test
sub
orb
push
jns
xor
js
mov
mov
fchs
pop
jae
popa
loope
sub
js
test
cld
push
pop
mov
lds
or
xlat
popf
aam
inc
into
mov
xor
jl,pt
mov
push
int
xchg
fs
lret
data16
jg
xchg
nop
idivb
xor
jno
pop
std
xchg
jbe
jmp
mov
cld
icebp
loope
push
push
test
fidivrl
sbb
sbb
jmp
repz
or
aam
arpl
push
rsqrtps
mov
pop
cs
mov
or
negb
sbb
add
bound
add
jmp
mov
sbb
push
sahf
sbb
xchg
je
out
adc
mov
inc
jmp
out
xchg
or
dec
push
pop
fcmovnbe
or
mov
dec
mov
aad
jnp
pop
lds
clc
mov
adc
das
xor
cli
scas
or
bound
pop
sarb
jb
popf
xor
mov
cs
mov
test
arpl
add
int3
and
push
mov
into
pop
inc
shl
neg
xor
jbe
sbb
testl
stos
fwait
mov
pop
push
loop
cwtl
xchg
dec
loopne
gs
xlat
rcrl
jno
sub
xlat
jo
cmp
mov
mov
aaa
inc
cwtl
hlt
mov
inc
sbb
and
push
mov
inc
add
xor
push
icebp
add
xor
pusha
lock
mov
pop
sbb
mov
scas
inc
aaa
mov
push
add
loop
leave
push
push
sbb
sarb
or
daa
test
cmpsb
and
lods
pop
icebp
scas
faddl
shl
jge
or
push
mov
sarb
outsl
push
outsb
dec
add
aad
mov
or
mov
sbb
es
pop
xchg
jmp
ret
enter
jge
repnz
ret
jle
nop
sub
shrb
xor
push
es
jg
and
mov
je
daa
hlt
mov
shr
call
pop
ret
leave
add
pushf
add
icebp
pop
stc
rorl
xchg
cmp
mov
sbb
push
jmp
mov
fldl
jmp
mov
push
scas
rcl
insl
cmp
shr
cmc
insb
jp
xchg
mov
daa
adc
ja
cs
popa
repz
jae
cmp
not
stos
dec
lahf
loope
mov
adc
mov
frstor
sbb
xor
nop
addb
mov
push
outsb
neg
mov
pop
mov
xlat
sub
enter
xor
ss
pop
xor
mov
fistpl
imul
imul
push
xor
stc
fnstsw
and
addl
cmp
in
cmp
notl
cmp
loopne
jmp
fwait
in
sbbl
gs
ja
or
dec
jbe
aam
mov
in
xor
movb
testb
or
in
add
jmp
inc
cmp
dec
pop
in
sub
ljmp
push
push
das
add
int
aam
movsl
incb
push
mov
loop
aad
jae
or
movsb
push
flds
rcrl
push
push
cmp
inc
les
or
movzwl
inc
add
aad
test
movsb
out
mov
xchg
mov
dec
dec
mov
lds
pushl
imul
jp
jmp
xchg
or
xor
mov
movd
jo
outsl
cmp
pop
dec
push
aas
sub
fucom
pop
fidivrs
das
out
xchg
idivl
pusha
je
outsb
xor
pop
and
pop
add
rolb
or
jmp
jo
adc
adc
pop
sbb
xor
setl
or
pop
adc
mov
div
fs
sarl
das
jecxz
enter
mov
orb
out
fiadds
add
sub
mov
cmp
ror
sbb
outsl
mov
into
jg
sbbl
jo
jmp
movsb
jbe
ja
mov
xor
push
aad
in
dec
adc
and
sub
jge
add
or
dec
jp
fbld
xchg
out
ss
inc
nop
cmp
and
aas
shlb
xchg
mov
in
sarb
xor
mov
push
sbb
adc
mov
pop
xor
add
mov
sub
ljmp
std
stos
rcrl
lret
or
or
push
mov
xor
ret
outsl
sub
hlt
or
jmp
bound
jle
mov
and
repnz
jmp
or
xor
nop
lods
into
dec
inc
icebp
xchg
in
mov
mov
and
repz
cmp
or
call
pop
ficoms
int
cmpb
popf
xor
test
loopne
add
mov
clc
clc
add
cmp
insl
adc
aad
jno
lds
fdivs
lret
jg
lods
adc
mov
jle
lods
add
add
jmp
ret
stos
sub
push
cli
sub
out
add
xlat
addr16
pop
lret
inc
cld
pop
inc
add
adc
sbb
ficomps
push
xor
daa
in
push
fsubl
xor
cli
jecxz
cmp
fiadds
fnstsw
mov
and
add
arpl
leave
jl
ret
add
pusha
mov
cmp
js
mov
orl
test
push
or
outsb
ss
insb
mov
add
pop
out
push
dec
xchg
les
push
out
lcall
inc
bound
sarl
les
fnstcw
dec
test
or
mov
or
inc
inc
push
or
loopne
or
pop
push
cmp
pop
mov
mov
dec
adc
adc
adc
notl
jl
mov
jmp
sbb
arpl
add
lods
jg
add
in
and
add
pop
push
push
lahf
or
push
loope
add
clc
cld
xchg
or
jb
mov
push
dec
mov
xchg
inc
push
ds
ror
jno
loope
pop
xchg
pop
inc
sarb
out
sub
sbb
or
or
cmp
mov
add
adc
not
shr
or
push
cli
aam
mov
push
jne
les
push
cmpsb
inc
fwait
and
in
bound
pop
les
neg
pusha
mov
and
or
and
and
fs
sbb
push
je
int3
mov
enter
mov
rorb
push
daa
jns
cmc
mov
push
popa
xor
mov
push
pop
push
dec
and
adc
int
outsb
movsb
fwait
jo
aad
imul
stc
icebp
std
repz
mov
and
pop
call
sarl
push
sub
xor
and
mov
dec
inc
dec
sub
jb
pop
or
fidivs
dec
es
jmp
or
imul
xor
inc
xchg
xor
mov
and
ret
sqrtps
aaa
pop
insb
loopne
jecxz
xchg
aam
dec
imul
scas
and
mov
not
rcr
push
inc
sbb
mov
pop
pop
mov
add
fs
lods
or
and
insb
stos
adc
mov
jbe
inc
aas
in
xor
popa
xchg
outsl
or
jecxz
sbb
sarb
or
loop
ret
xor
xor
xor
outsl
pop
or
lds
inc
int
jo
push
cmc
rolb
popa
pop
sub
or
mov
dec
ljmp
inc
jmp
inc
adc
add
mov
ret
push
sub
cmpl
push
cmp
sti
scas
dec
ljmp
mov
int3
inc
gs
adc
out
xchg
shll
pop
add
daa
jmp
or
shr
sub
leave
adc
adc
or
pop
cmp
adcl
mov
lods
in
xor
lahf
mov
hlt
aad
cmp
cmp
leave
mov
out
jge
inc
icebp
enter
adc
imul
inc
mov
popa
in
sub
loope
add
add
inc
int
or
pop
xchg
sub
inc
add
fucomip
mov
outsb
sbb
xor
test
dec
fisttps
test
jbe
and
and
pusha
cltd
cmp
dec
jge
jge
lahf
clc
ficoms
fs
shl
dec
add
cmc
je
jbe
push
mov
ds
lret
bound
pop
mov
jnp
aas
cwtl
and
dec
lcall
xchg
xor
into
jb
pop
add
cmp
pop
jle
cli
mov
jbe
or
outsl
divb
and
adc
mov
xor
add
fldenv
sub
mov
pop
xor
lahf
out
jge
cmp
icebp
jo,pn
jmp
cwtl
out
cmp
dec
jmp
inc
xchg
fisubrl
sti
xor
mov
lret
dec
add
adc
sahf
adc
dec
xorl
jg
jmp
fwait
jns
push
mov
sti
addr16
adc
dec
data16
add
add
scas
out
jge
scas
or
sub
mov
cmc
push
sub
mov
in
insb
push
in
mov
repnz
inc
xchg
shrb
loopne
lcall
test
out
int3
add
stos
pop
xor
lods
aad
jmp
adc
scas
mov
cli
cmp
jmp
dec
add
dec
push
fsts
das
dec
cmp
iret
rolb
add
push
mov
sub
test
testl
jmp
fistl
push
in
mov
and
aaa
or
dec
dec
std
call
mov
fiaddl
jmp
loop
enter
inc
adc
or
daa
xor
arpl
jno
push
int
not
or
loopne
jae
das
dec
aam
add
rclb
adc
or
mov
adc
mov
inc
lods
jae
bound
notl
add
or
shrd
test
push
add
iret
xchg
loopne
ja
or
imul
add
mov
das
mov
cmpsl
aas
push
cld
popa
dec
sub
pop
fisttpll
jg
clc
cs
push
xchg
addl
mov
jae
pop
sub
ljmp
mov
ljmp
jns
push
jmp
jno
ds
filds
rcrb
shrl
push
adc
jp
aas
xor
lods
xchg
jg
and
pop
pop
sub
aam
mov
out
jne
cmp
jne
jecxz
xchg
lds
outsb
push
in
adc
cmp
stc
mov
add
repnz
push
sbb
lahf
pop
add
jnp
xor
sbb
push
insl
sbb
mov
aas
in
aaa
lahf
mov
add
mov
out
sub
push
jg
push
add
test
rcl
sub
loopne
xchg
cwtl
mulb
daa
and
cld
in
pop
inc
pop
mov
test
stc
jo
shl
and
mov
pop
and
pop
push
clc
xor
or
add
decb
movsl
sti
and
or
cmp
add
and
insb
add
scas
and
pop
stos
add
sbb
out
inc
jmp
sub
push
jmp
jnp
shrl
cmpsb
jecxz
sub
adc
rclb
push
rcrl
inc
xor
push
out
mov
or
jmp
mov
lods
mov
mov
popf
roll
imul
or
or
add
xchg
sbb
cmp
jecxz
or
pop
mov
ljmp
jmp
pusha
add
enter
rcrl
mov
or
out
sbb
ficompl
xor
xchg
dec
push
mov
insl
negb
cmp
pop
sub
push
adcl
dec
pop
adc
push
add
xlat
push
orl
sub
daa
inc
clc
fnsave
jb
test
mov
sub
pop
pop
dec
dec
push
cltd
cltd
push
xor
xchg
pusha
and
jb
xor
jg
test
xor
and
pop
aas
hlt
xchg
xchg
jecxz
mov
jg
push
cmpsl
cmp
jle
jb
test
xor
cwtl
dec
pusha
stos
pop
repz
pop
xchg
sub
xlat
jecxz
push
mov
jge
push
lods
push
dec
jmp
popf
insl
xchg
test
add
daa
cmp
pop
cli
pop
sub
mov
or
insb
jbe
sub
lods
aad
sub
pop
rcrl
sub
pop
sbb
lret
enter
jmp
cmp
rolb
fwait
adc
pop
insl
dec
std
in
sbb
push
or
insl
jmp
add
and
fs
push
mov
xchg
adc
xchg
ret
cmpsb
mov
jne
dec
mov
gs
fdivrl
push
popa
iret
mov
push
adcb
and
repz
and
jecxz
or
loope
push
push
adc
cli
gs
mov
mov
sbb
loope
aas
lods
add
outsb
test
adc
xor
je
adc
jmp
or
inc
add
stos
addr16
test
in
adc
push
shll
push
shrl
jmp
les
ret
inc
inc
mov
xor
imul
test
mov
cs
test
mov
lods
jg
addr16
fstl
js
cmp
out
dec
into
xchg
adc
mov
test
sub
sub
dec
pop
inc
xchg
or
jge
xchg
das
pop
jb
adc
nop
enter
xchg
popf
out
xorl
xchg
mov
out
bound
sarb
out
pop
xchg
das
adc
mov
push
jae
or
mov
and
xchg
xchg
push
out
cs
sub
lret
loope
fildl
mov
xor
mov
dec
mov
dec
dec
je
ret
push
dec
pop
mov
xor
repz
loop
mov
inc
sub
mov
pop
ja
push
popa
or
add
push
popf
xchg
gs
lock
xorb
xor
and
pop
in
nop
lds
not
xor
int
repnz
pop
pop
test
adc
dec
mov
gs
lods
icebp
mov
and
mov
lds
sub
cmp
cli
sbb
jne
xor
jle
movsb
dec
inc
mov
sub
hlt
cmpsl
jno
leave
mov
js
mov
pop
lret
and
pop
or
or
xor
add
scas
ds
mov
or
jmp
mov
neg
mov
jo
in
cmp
jmp
mov
add
inc
pusha
jle
aaa
xor
or
aas
xor
xor
enter
mov
jl
mov
sbb
je
mov
insb
push
add
andb
dec
push
jmp
push
daa
inc
sbb
test
cld
push
mov
dec
add
lret
ss
dec
mov
loope
add
ret
inc
add
into
inc
add
popf
mov
adc
push
push
bnd
mov
xchg
rcl
ret
jle
inc
jns
add
mov
adc
popa
out
es
outsl
je
sti
mov
jb
pop
sti
je
stos
stc
adc
mov
xor
push
pop
test
mov
mov
add
inc
push
jge
sub
or
enter
sbb
push
in
test
hlt
jp
and
fcomps
aad
test
cmovs
mov
jmp
push
cmp
xchg
jns
test
adc
or
sub
cmpb
or
or
out
fcom
dec
sub
mov
pop
jmp
aad
adc
mov
mov
sub
and
cmp
or
mov
pop
mov
dec
ds
mov
cs
add
inc
xor
jmp
cmp
jnp
xor
jmp
movsb
or
inc
pop
lcall
jns
test
std
mov
jecxz
inc
xchg
push
mov
push
push
nop
inc
mov
cmpsb
out
ror
mov
popa
xchg
je
lret
pop
aam
shr
ret
pop
adc
xlat
and
cmpsb
inc
mov
mov
adc
push
mov
outsl
push
adc
jp
pop
inc
mov
or
daa
movsl
mov
enter
pop
pop
pusha
imul
push
or
cli
xor
test
sbb
fwait
addb
mov
mov
das
push
adc
jnp
sahf
cmp
jmp
push
sub
mov
in
stos
jno
in
and
push
lods
add
not
inc
lahf
in
mov
jb
movsl
xor
addr16
jmp
movsl
jns
adc
aam
pop
xor
and
cmp
jmp
mov
das
jmp
nop
push
mov
jge
sbb
shrb
push
sbb
sti
cwtl
adc
mov
pop
stc
fucom
subb
add
mov
imul
dec
in
lock
dec
pop
mov
sti
into
xor
adc
inc
lahf
lret
dec
inc
testb
mov
sbb
inc
jmp
shll
insb
dec
or
dec
xchg
clc
dec
xor
jl
and
and
and
and
sbb
jae
cmp
mov
dec
cwtl
test
cltd
push
or
mov
add
pusha
push
jb
push
and
push
pop
sub
jp
jne
int3
add
leave
lds
std
stos
xchg
movmskps
in
add
lea
mov
scas
sub
in
add
popa
adc
mov
fldl
push
sub
adc
rcrb
xchg
out
lds
pop
cmp
loopne
dec
ja
rorb
inc
mov
mov
or
test
das
or
push
jmp
es
filds
sub
add
jnp
aas
shlb
test
sbb
loopne
inc
add
in
push
sub
jle
cmp
out
dec
sub
testl
arpl
scas
idivb
xor
in
shlb
push
inc
push
mov
mov
pop
xlat
sbb
lret
icebp
mul
int
push
pop
in
sbbb
rcll
mov
repnz
add
jg
out
jmp
fmuls
lcall
test
neg
pop
pop
inc
mov
dec
shll
xor
xchg
mov
je
aaa
pop
inc
cmp
and
cmp
je
or
cmp
pop
fiaddl
mov
push
mov
mov
xor
ja
outsl
fwait
ret
stos
fisttps
inc
sub
adc
inc
ret
add
mov
cmpsl
dec
pop
std
jecxz
int
or
push
xchg
cld
push
pusha
xchg
dec
jmp
imul
les
cwtl
insl
jmp
inc
jbe
push
shrl
mov
fstps
test
push
rorl
stos
push
outsl
xchg
ficoms
loope
jle
dec
adc
sub
add
push
mov
inc
jmp
xor
add
lods
mov
push
push
push
mov
test
xor
pop
mov
push
inc
pusha
mov
xchg
push
fisubl
lret
ja
jb
ja
outsl
aam
add
mov
test
dec
dec
mov
je
stos
mov
sub
xlat
imulb
ret
add
inc
add
sub
test
xchg
sub
leave
fistl
mov
xchg
xchg
push
roll
push
aad
or
push
data16
sub
jp
xor
or
loopne
in
xor
loopne
add
fsubrs
and
mov
add
mov
sti
mov
cmc
imul
adc
imull
and
jmp
push
fstpt
inc
mov
add
adc
jmp
push
iret
inc
jmp
shlb
ljmp
dec
dec
stos
sbb
pop
pop
push
jmp
outsl
hlt
xchg
push
adc
sub
pop
clc
or
push
scas
and
sbb
loope
mov
sbb
dec
cs
sub
mov
lret
scas
fadds
dec
gs
push
mov
jl
add
roll
out
in
out
mov
cmp
push
pop
or
lods
adc
add
xlat
cld
add
lea
pop
int3
pop
add
je
repnz
loope
shlb
pop
ja
call
add
outsl
cmp
fisubl
jo
sbbl
sub
dec
or
stos
xchg
or
and
psllq
add
pop
leave
sub
push
cmp
arpl
in
push
or
loope
les
lahf
pop
imul
dec
mov
lret
cli
and
cmp
adc
inc
dec
jecxz
xor
push
nop
push
pop
neg
or
sbb
inc
inc
sub
out
clc
add
pop
pushw
jmp
sub
shl
leave
or
std
mov
fadds
pop
inc
lret
cmp
inc
dec
cli
ja
rcr
push
sub
sub
movb
ss
in
in
cs
push
add
in
fistpl
dec
xchg
xchg
es
aad
push
fldenv
test
ficoms
add
shrl
xchg
mov
or
push
add
ret
pop
aaa
fcoml
fadds
pusha
jo
xchg
pop
sahf
inc
test
iret
add
jmp
insb
xor
leave
add
in
fimuls
or
xorb
adc
adc
mov
jo
mov
bound
pop
arpl
inc
and
push
fsts
pop
push
and
js
dec
inc
hlt
andl
xor
adc
add
montmul
cmpsb
add
xchg
ret
sahf
xchg
push
mov
pop
xor
pop
push
lret
pop
scas
sbb
mov
cmpsl
jecxz
leave
orl
out
in
or
and
rolb
in
or
imul
push
push
jns
inc
lret
jge
popa
mov
sub
cmpsb
xchg
mov
push
dec
call
cmpsl
jmp
pop
add
jae
outsl
jo
dec
shl
inc
das
sbb
outsb
out
lret
fstl
arpl
inc
sub
mov
dec
movsb
movsl
push
pop
inc
add
or
jmp
pop
loopne
dec
mov
adc
outsl
mov
add
add
push
incl
rorb
or
add
adc
add
popf
daa
pop
push
lahf
dec
loope
pusha
shrl
add
add
cmc
ffree
jmp
adc
add
and
out
add
sub
cmp
dec
inc
or
fdiv
daa
pop
mov
xlat
mov
add
ds
push
stc
and
les
pop
and
sbb
hlt
and
stos
adc
mov
add
cmp
out
add
not
out
xlat
add
push
jmp
or
xor
xor
adc
pop
stc
clc
je
dec
lahf
pop
or
mov
mov
imul
sub
inc
test
es
dec
cmp
int3
cld
and
xchg
ja
jno
flds
inc
aam
add
adc
outsl
sbb
add
pop
pop
je
pop
push
jmp
or
sub
ret
push
and
mov
push
xor
sbb
sub
pop
dec
add
mov
sub
push
sbb
dec
movsl
push
pop
add
out
mov
stc
pop
and
mov
xor
shr
iret
push
xlat
aaa
xor
hlt
addr16
xchg
mov
dec
call
loop
popf
pop
sub
adc
in
stos
and
cmpsb
arpl
add
pop
and
rclb
xchg
sub
in
cs
in
mov
stc
or
adc
mov
pop
add
test
icebp
popf
mov
and
pop
pop
sbbb
inc
add
movsl
je
and
mov
ficomps
sbb
jmp
ret
fcoms
push
ret
lds
add
push
mov
add
cmp
mov
dec
ljmp
out
ljmp
jno
iret
movsl
or
insl
hlt
push
repnz
jnp
lds
comiss
jno
dec
or
lret
and
or
aam
in
test
lock
jl
add
push
mov
or
shlb
adc
in
sub
add
jmp
mov
shl
jge
daa
bound
sub
pop
push
adc
lods
xor
ljmp
jae
push
movsb
xor
pusha
fcomps
rolb
sub
lret
imul
or
pop
sbb
fs
xchg
xor
jle
in
and
jge
sub
dec
pop
push
dec
out
enter
int3
push
call
inc
pop
sub
adc
enter
pop
int3
sarb
push
pop
adc
addl
pop
mov
jns
lods
fdivl
or
loopne
dec
adc
sbb
fnsave
mov
out
and
add
xor
mov
inc
mov
fsts
sub
imul
adc
pop
dec
cs
repnz
push
pusha
pop
mov
pop
inc
jmp
inc
add
sub
jl
jmp
das
hlt
mov
pop
push
lods
pop
lds
mov
push
xor
in
adc
mov
repz
add
stos
sub
std
inc
or
ret
mov
xor
or
in
fmull
dec
in
test
push
add
notb
mov
mov
dec
rorl
movb
sub
sub
mov
rcr
mov
neg
sbb
fdiv
sti
ret
jmp
pop
enter
fldcw
push
idivl
in
les
add
pop
dec
sub
lret
and
out
xchg
jb
xor
and
dec
jae
mov
sbb
push
mov
fs
pop
dec
testb
jns
cmpsb
in
adc
pop
pop
int
lea
adc
test
mov
into
sub
push
jns
mov
or
icebp
dec
sub
dec
sbb
aas
sub
dec
xor
pop
sub
hlt
adc
not
push
movsl
jmp
sub
out
pushf
pop
push
mov
pop
fisttpll
ret
dec
xlat
sbb
mov
jl
ja
test
add
cs
std
divps
mov
sub
lods
mov
lea
cmp
jne
cld
fcmovb
xor
cmp
test
rol
dec
mov
inc
lods
jno
test
add
ficoms
cmp
ds
xor
xlat
pop
shrb
fdivl
sbb
xorps
mov
xor
push
mov
sbb
enter
aam
lock
jp
dec
stos
adc
push
jle
and
int
cwtl
xor
pop
pop
push
jmp
movsb
cwtl
inc
gs
dec
insl
rorl
mov
mov
daa
jp
je
addr16
dec
rorl
push
orb
mov
shlb
shll
push
in
cmp
fists
add
ds
adc
mov
push
cmp
ja
xor
push
shr
lea
push
ficoms
je
and
gs
sub
mov
inc
cwtl
cmp
inc
aas
or
call
adc
mov
xor
jno
adc
fwait
notl
cmc
shll
enter
or
lods
ret
adc
aaa
jo
mov
call
sub
or
ds
and
add
xchg
filds
mov
and
mov
pop
jns
xor
mov
xchg
or
sbb
mul
clc
sbb
cs
es
mov
lahf
hlt
add
jmp
ret
shll
push
add
xchg
mov
movsl
xchg
inc
cmp
push
rclb
pop
jge
orb
insl
iret
enter
xor
push
and
cwtl
mov
repnz
fwait
fwait
in
mov
xor
cmp
dec
jle
or
add
jle
pop
cld
pop
push
lcall
push
gs
mov
mov
popf
shrb
sub
or
cmpsb
test
or
pop
jmp
cli
iret
ljmp
call
lahf
dec
inc
fnstenv
pop
push
sub
das
inc
pop
pop
or
push
in
js
mov
call
ret
data16
jge
jg
push
addr16
jno
fmull
inc
nop
inc
fmul
mov
and
fildl
scas
dec
dec
add
add
fpatan
pop
xchg
mov
pusha
mov
xchg
movsl
sub
jge,pt
jl
pop
and
roll
xor
aaa
sub
cwtl
pop
pop
leave
out
push
pusha
cwtl
jmp
and
jo
push
dec
iret
fs
push
jle
or
rorb
stos
or
icebp
push
mov
lock
mov
mov
je
out
push
repnz
adc
add
shl
jno
sub
in
test
scas
push
mov
sbb
add
incl
sbb
or
jae
push
popf
std
bound
push
or
andb
xor
pop
les
or
mov
dec
pop
push
adc
icebp
aas
add
cmp
add
das
mov
xchg
cmp
mov
and
sbb
out
or
nop
stc
or
xor
adc
stos
push
frstor
pop
cli
push
sbb
lret
rcll
fnsave
pop
shr
jb
imul
mov
adc
scas
ret
decl
sbb
repnz
mov
pop
jmp
xchg
pop
push
dec
push
repnz
iret
mov
popl
and
jg
jp
addr16
idivl
pop
int
xor
pop
test
mov
pop
dec
sub
jp
mov
xor
adc
fld
mov
test
addb
or
lods
mov
scas
mov
mov
add
dec
out
sti
adc
adc
dec
mov
psubusb
and
xor
aam
test
and
mov
lcall
icebp
ja
mov
push
nop
pop
daa
jno
mov
lods
sub
xchg
jae
sbb
cmp
sub
adc
dec
inc
scas
push
sbb
out
or
aad
mov
adc
mov
adc
fadds
xchg
xor
cmp
shlb
add
outsl
mov
push
or
leave
adc
jo
mov
adc
les
hlt
mov
jbe
gs
mov
or
incl
ss
inc
push
jle
nopl
jbe
inc
xlat
rolb
dec
adc
xchg
sub
adc
pop
shlb
jmp
data16
sbb
jecxz
dec
sarl
add
mov
jo
inc
xchg
xchg
mov
dec
mov
insb
jp
andb
mov
mov
inc
mov
pop
dec
mov
in
sar
mov
push
or
pop
push
adc
imul
add
lahf
and
and
pop
add
xchg
jb
enter
stos
das
push
scas
mov
add
cwtl
jl
push
mov
sub
pop
pop
mov
out
icebp
sub
mov
xor
adc
add
jg
es
inc
mov
mov
repz
push
sbb
xchg
or
stos
xor
sub
mov
ret
push
repnz
test
xor
pop
mov
push
movsb
imul
pop
mov
shlb
mov
push
and
jle
out
fsts
mov
les
clc
mov
and
pop
aas
repnz
sub
push
leave
loope
jo
pop
push
incl
ret
jne
sbb
dec
outsl
sub
cmp
pop
aas
mov
xor
or
test
test
jb
sub
jb
mov
int3
add
loop
loope
cs
push
adc
roll
fs
icebp
jnp
es
jo
sub
xor
jnp
dec
and
push
add
mov
mov
add
push
cmp
mov
ljmp
jg
mov
xor
inc
or
jmp
xchg
push
jb
pop
aad
iret
call
mov
loopne
push
stos
or
pushf
js
pop
mov
mov
mov
out
dec
sbb
sahf
iret
aas
push
xchg
xchg
cmpl
mov
pop
dec
mov
or
es
loop
jle
ret
mov
cmp
jns
adc
push
fstpt
adc
and
xchg
mov
aam
jo
pop
xor
lret
jmp
hlt
shrb
sbb
shr
les
test
xchg
xor
and
pop
push
add
push
sbb
mov
clc
mov
out
sub
fstl
add
pop
push
sub
rcll
std
xor
rorl
mov
jb
daa
pop
ja
js
popf
adc
or
test
adc
add
lea
pop
sbb
pop
mov
sub
out
cwtl
jo
mov
mov
arpl
out
sbb
testb
pop
and
push
sti
push
sbb
dec
out
movsb
xchg
lret
jne
lret
pop
dec
and
mov
lds
imul
dec
aam
inc
mov
add
test
rcll
dec
popw
leave
sbb
jmp
add
ljmp
lods
push
int3
sub
lods
add
and
pop
test
cmp
xor
repz
adc
sarl
mov
pop
and
dec
test
jnp
push
das
mov
xchg
cmovae
and
mov
or
adc
sarb
imul
ret
mov
jmp
push
xlat
or
cmc
mov
pop
add
cli
mov
and
lahf
mov
add
pusha
pop
je
pop
out
mov
and
xor
or
dec
cmp
testl
dec
clc
loopne
sub
cmp
sbb
xchg
jbe
push
push
sbb
inc
in
fistl
cs
pop
mov
outsb
shrb
mov
jmp
lahf
push
push
xchg
mov
push
mov
mov
popf
jne
xchg
mov
pop
dec
push
add
js
pop
jle
and
out
inc
sub
jmp
push
scas
mov
clc
outsl
mov
push
imul
scas
push
ss
xchg
icebp
andl
add
inc
mov
test
loop
push
popa
icebp
repnz
test
push
xchg
jg
mov
cmp
push
pop
jbe
pop
js
decb
inc
dec
jge
movsb
in
mov
jmp
sub
pop
cmpb
or
cmc
stc
mov
mov
and
xor
das
push
xor
adc
fs
xchg
pop
cmp
les
in
aam
not
add
xor
pop
fbstp
and
and
icebp
jmp
mov
stc
lods
xorb
push
pop
lods
mov
lret
dec
sub
aas
adc
pushf
addl
push
rorb
jmp
dec
pusha
jno
pushw
dec
mov
dec
fistpll
jp
xor
mov
xchg
xchg
cmp
repz
data16
jb
xlat
lret
bound
movsb
jmp
xchg
mov
xor
jmp
incl
push
mov
popa
not
mov
and
or
mov
outsl
push
repz
sub
cmp
cwtl
sbb
test
rolb
pop
andl
test
jns
ja
pop
sbb
xor
jmp
mov
stc
xchg
push
pop
cmpsb
dec
add
daa
aaa
xorl
cwtl
cli
or
add
xor
cmp
or
inc
xlat
ret
jmp
cmc
inc
or
popa
pop
pop
roll
mov
or
cmp
add
push
dec
roll
loope
dec
aas
dec
xchg
in
sub
push
or
lods
sub
imul
loope
inc
mov
pop
test
push
in
in
pop
mov
xlat
aas
sbb
mov
xchg
mov
push
xchg
jnp
mov
mov
ljmp
pop
fists
jle
dec
pop
insl
addb
sbb
inc
mov
sbb
inc
adc
hlt
pop
cmc
cmp
sub
push
cwtl
insb
rol
cld
or
add
mov
and
or
inc
mov
jmp
adc
jle
hlt
mov
test
les
and
lods
dec
bound
cmp
xchg
pop
ss
faddl
testl
pop
xchg
negl
add
nop
or
sub
adc
mov
push
jo
filds
jle
sbb
adc
mov
std
andl
pop
push
pop
and
cmpsl
or
je
jb
lods
pop
pop
mov
mov
jns
scas
lcall
filds
push
clc
inc
loopne
mov
mov
xchg
adcb
add
xchg
sti
out
jmp
arpl
mov
int3
cmp
pop
xchg
orl
pop
sub
shll
push
in
adc
xchg
rcrl
fmuls
pusha
push
lret
mov
xchg
mov
xchg
add
not
add
mov
cs
sti
push
pop
push
fwait
pop
lds
pusha
add
shr
sbb
lret
repnz
pop
adcl
iret
mov
ljmp
adc
ret
pop
out
sub
jbe
pop
aam
adc
cli
mov
xchg
lock
push
in
popa
and
in
rol
xchg
cmp
addl
sbb
icebp
pushf
add
cld
push
xchg
push
dec
mov
cmc
movsb
mov
out
adc
cwtl
dec
cwtl
mov
dec
inc
mov
mov
mov
nop
imul
rcrl
xchg
cli
jge
pusha
mov
cmp
ds
push
sarl
mov
mov
cld
mov
cmp
mov
repz
cmp
adc
jl
push
mov
addr16
sub
mov
cld
testl
in
stos
pop
and
orl
mov
pop
aad
and
in
mov
pop
daa
shrb
ret
cmp
repnz
xor
dec
xchg
ljmp
arpl
cmc
inc
out
pop
mov
cmp
push
add
add
aad
add
repnz
std
push
ror
xor
into
add
mov
js
push
xor
pop
sti
dec
pop
cld
aas
lods
fdivl
or
mov
cmp
adc
sbb
ss
mov
mov
adc
lret
sbb
mov
push
sub
adc
hlt
into
sub
hlt
push
push
clc
jge
cmp
inc
leave
pop
push
int
sub
dec
or
mov
rcrb
sbb
int3
out
or
sub
push
push
push
jl
pop
int3
mov
addb
mov
pop
in
mov
js
inc
fdivl
pop
and
fs
add
pop
and
push
pop
mov
lahf
nop
les
or
xor
or
or
jmp
bound
jge
hlt
jmp
loop
pop
xor
sahf
and
xchg
daa
repz
push
mov
dec
dec
pop
addr16
cmp
pushf
in
sbb
sub
push
inc
rol
jo
je
xchg
mov
mov
inc
loope
stos
xchg
sub
pcmpeqb
aam
jge
adc
cmp
cmp
es
lds
les
pop
cs
add
scas
jmp
scas
cmp
inc
aaa
push
push
shlb
dec
jne
push
pop
pop
mov
dec
imul
pop
sub
dec
sarb
mov
clc
push
add
enter
nop
jo
jns
cld
and
xor
mov
rcll
push
cmp
sbb
repnz
fstpl
push
icebp
inc
jnp
fimuls
ds
pop
xchg
outsb
inc
xor
cmc
aaa
hlt
test
inc
jl
pop
jmp
ret
test
push
add
adc
mov
es
add
pop
dec
xchg
cmp
icebp
add
daa
push
cli
aas
cli
mov
fmul
jmp
mov
pop
shlb
imul
cmc
mov
das
dec
push
mov
cli
xor
ds
nop
push
adc
out
stc
inc
pushl
inc
jmp
out
jmp
mov
adc
jg
arpl
inc
mov
js
pop
jb
mov
bound
jae
ret
xchg
popa
mov
dec
pop
jmp
add
lds
cmp
lret
es
xor
adc
cmpsb
add
repnz
sbb
mov
mov
and
and
test
mov
jns
clc
push
mov
test
sti
xor
hlt
push
shlb
pop
in
mov
daa
dec
xor
cld
xchg
daa
pop
push
in
pop
jmp
pop
addr16
jno
xor
dec
lds
jmp
or
xor
mov
pop
pop
xor
dec
xchg
inc
rol
push
insl
push
pushf
es
or
and
jg
jmp
and
mov
pusha
and
xsaves
or
or
sbb
imul
repz
sub
or
push
je
popf
out
or
dec
pop
out
or
add
inc
inc
add
jbe
and
or
and
sbb
lret
xor
lods
dec
dec
mov
or
mov
iret
push
sbbb
and
mov
mov
add
stos
xchg
mov
nop
sub
popf
dec
es
loopne
fcoml
jle
inc
sub
inc
int3
or
and
and
pushf
add
dec
xchg
or
cwtl
xor
push
jae
jge
bnd
and
sub
mov
test
xor
aaa
adc
xchg
xchg
push
out
out
add
xor
popf
cld
fdivl
xchg
rclb
or
scas
and
mov
ss
aaa
mov
jg
add
xor
mov
jns
mov
jbe
adc
repz
dec
das
or
jnp
push
sahf
and
cwtl
mov
push
cmp
loop
dec
ret
arpl
hlt
adc
sbb
mov
xor
add
sbb
les
dec
js
cmp
or
aad
cmc
mov
pop
lret
or
sub
dec
mov
and
cmovnp
push
test
nop
fimull
lret
add
jl
cmpl
mov
test
inc
and
dec
pop
pop
add
lret
lret
ret
jb
xor
dec
negl
fnstsw
iret
mov
push
pop
mov
gs
or
dec
sub
rorb
or
push
test
mov
jno
int3
push
push
cmp
add
mov
push
jp
dec
xor
push
xchg
jne
xor
sub
lcall
ret
xchg
add
rcr
mov
xchg
push
sub
bound
add
push
push
jne
bound
push
aas
xor
adc
dec
fldl
jl
jmp
pop
sarb
mov
jg
sub
adc
gs
bound
jns,pt
orb
sub
imul
aaa
add
addr16
cmp
and
push
push
adc
push
mov
cmp
push
sub
nop
mull
ljmp
sahf
mov
pop
pop
adc
adcl
or
mov
jae
into
xor
out
bound
mov
or
das
lods
add
xor
push
or
and
fisttpll
adc
adc
mov
inc
stos
mov
daa
or
mov
push
es
loop
push
out
sub
pop
xchg
push
xchg
inc
and
cmc
mov
xchg
cld
add
add
inc
mov
std
adc
sub
push
cld
push
movsl
inc
adc
push
pop
xchg
push
lahf
xor
sbbb
cs
je
dec
je
sbb
add
inc
xchg
add
xchg
push
jmp
sub
pop
cmpsl
dec
pop
mov
imul
aas
cli
inc
jp
jns
push
or
add
dec
or
mov
push
add
adc
mov
shr
dec
nop
jo
inc
rcll
mov
test
add
roll
inc
add
sahf
outsl
arpl
aas
in
sub
lods
mov
push
bound
push
mov
jo
dec
xor
mov
scas
mov
lods
repz
cwtl
xchg
push
jecxz
pop
fwait
lret
mov
cmp
cltd
aaa
push
rcrl
jo
movsb
fucomi
ret
or
pop
pop
repnz
inc
inc
push
or
adc
xor
pop
mov
adc
out
sub
jmp
out
mov
lds
mov
jno
dec
incb
push
push
inc
mov
sub
xor
cmc
sbb
add
stos
sub
ds
xchg
dec
lods
ficoms
negl
push
outsl
add
adc
push
pop
jmp
vpcmpgtw
add
push
jbe
xor
scas
dec
lea
clc
xchg
push
push
gs
push
das
cmp
push
or
in
pop
pop
mov
das
fisubrs
push
jmp
jge
cwtl
and
pop
neg
mov
fwait
xchg
or
mov
add
pop
pusha
je
dec
push
cmpsl
testl
cwtl
or
jno
adc
pushf
imul
mov
push
lahf
in
push
xrelease
adcb
orl
add
ret
sub
xor
cmp
in
in
and
push
add
push
mov
into
loopne
cmpsl
sub
jnp
sub
sbb
inc
shl
aad
sti
add
pop
push
adc
jo
mov
into
test
and
negl
stc
pop
jl
adc
sub
loopne
es
add
das
xchg
pop
scas
sbb
pusha
and
test
adc
sbb
ljmp
mov
xchg
or
dec
xchg
sbb
jmp
je
add
jne
fimuls
or
cwtl
inc
push
mov
roll
das
jb
gs
lahf
cmp
test
in
subl
in
dec
or
es
mov
pop
ljmp
jne
jb
not
mov
mov
ds
imul
jg
bound
cmp
push
lret
mov
jmp
pop
sarl
mov
aas
in
and
xor
push
negl
mov
int
pop
push
xor
test
pop
mov
rcrb
or
pop
xorl
push
mov
mov
in
add
into
sub
dec
xor
shll
push
push
and
iret
cmp
push
cmpsb
lock
or
adc
dec
out
nop
cmp
sub
xor
lret
ret
dec
xor
addb
jle
pop
lahf
fisubs
jmp
pop
pop
movsl
fimull
and
test
loopne
add
xor
jle
sub
dec
dec
and
aas
xchg
orb
imul
test
rorb
sbb
mov
xchg
ljmp
inc
xchg
aam
scas
fiadds
stc
insl
les
or
fnstsw
int3
adc
cmp
sbb
add
fwait
pop
jb
jmp
test
stos
loopne
nop
xlat
sbb
stos
mov
add
pop
das
xor
or
daa
push
pop
movb
ret
and
xor
inc
sub
out
int
arpl
mov
or
push
xor
or
pop
adc
hlt
jp
and
stc
je
sub
inc
sub
sbb
jmp
ret
add
fld
loope
xor
mov
out
iret
idivb
cld
cmp
and
ret
push
mov
js
lahf
lock
xor
in
adc
stc
add
xor
mov
daa
ss
in
pop
mov
adc
xor
nop
or
ljmp
jmp
cmpsl
pop
push
mov
sub
add
jno
js
pop
inc
popa
adc
andl
jg
jp
fs
std
insb
mov
push
xlat
add
and
xor
sub
adc
inc
pop
test
pop
lds
movsb
jmp
outsl
mov
inc
sub
sbb
cmc
into
hlt
sti
out
sarb
pop
addr16
dec
test
pop
add
add
pop
or
jg
xchg
and
xor
pop
and
shlb
rorl
stos
jp
sub
pop
movsb
mov
push
les
cmp
test
adc
shll
lds
mov
ds
mov
clc
dec
sub
or
cmc
dec
leave
pop
push
xchg
ds
adc
add
fnsetpm(287
pop
adc
inc
sbb
add
jmp
mov
push
mov
gs
push
lea
xor
jp
out
lcall
mov
out
and
jge
ret
pop
mov
or
mov
pop
hlt
scas
and
insl
push
fidivrs
aas
orb
mov
int3
pop
decb
cmp
test
scas
lds
ds
in
inc
jecxz
inc
inc
pop
daa
push
cld
sti
xchg
or
aad
outsb
aas
xchg
inc
push
jno
mul
cmpsw
jnp
ror
popf
ja
gs
cmp
daa
inc
test
add
sbb
sub
push
pop
or
clc
and
jmp
fs
dec
inc
jmp
call
xchg
push
adc
sub
xor
fbld
inc
inc
loopne
shrb
mov
inc
hlt
or
xor
mov
inc
mov
sub
mov
decl
out
pop
inc
mov
adc
lret
ja
icebp
add
add
cwtl
cmp
mov
jmp
sarb
mov
fsubs
jmp
ret
in
sbb
push
loope
iret
ds
sbb
xor
rcrl
lods
repz
inc
xlat
fs
mov
add
bound
add
inc
lcall
jmp
jmp
icebp
out
dec
mov
cmp
mov
call
push
mov
adc
daa
pop
mov
push
out
bound
sub
pop
packsswb
inc
imull
push
pop
adc
or
push
jbe
push
negb
fsubl
dec
or
xchg
or
repz
mov
cmp
adc
mov
inc
cmp
add
dec
push
cmpb
pop
and
or
test
cmc
ds
or
adc
mov
adc
sub
nop
mov
das
dec
cmp
in
ss
xchg
popf
ljmp
pop
pop
mov
jbe
es
test
jmp
add
insl
adc
and
mov
pusha
fidivl
cmpsb
gs
pop
jmp
sub
fsubl
fiadds
movsl
imul
pusha
ret
sub
ja
mov
fildl
jmp
adc
or
push
shl
iret
add
or
xor
inc
xchg
mov
movsl
jmp
icebp
xchg
iret
inc
dec
sub
inc
add
push
mov
mov
sbb
lret
inc
dec
lahf
imul
imul
ljmp
jmp
add
jmp
ljmp
cmp
pop
cmp
cmp
xor
pop
push
pusha
mov
push
lret
fsubrs
test
xor
add
stos
aaa
mov
add
pop
jne
sahf
xchg
push
add
ret
in
add
aas
inc
push
cwtl
sti
mov
mov
push
not
push
push
iret
ret
pop
mov
mov
add
or
inc
rep
movsl
pop
dec
add
jns
das
les
stos
les
xchg
mov
setne
lret
push
rcrb
pop
push
xchg
jge
je
mov
outsb
stc
add
or
adc
xchg
jmp
daa
mov
or
or
stos
pop
pop
or
push
dec
add
jne
cmp
js
cwtl
push
jno
mov
scas
mov
lcall
fsubrl
std
pop
pop
movsb
gs
cmp
insb
enter
adc
sbb
testb
inc
mov
leave
jle
out
sbb
aam
adc
addb
mov
or
rorb
loope
lret
in
add
ja
xor
push
or
jmp
mov
xorl
mov
jl
sbb
dec
enter
push
mov
shll
or
push
insb
mov
lcall
dec
sbb
sbb
and
iret
lcall
sub
and
jg
lods
les
or
pop
push
ret
mov
xchg
xchg
pop
in
in
inc
adc
pop
xor
fwait
dec
mov
bound
arpl
dec
in
adc
mov
icebp
xchg
stos
push
rsqrtps
push
lahf
pop
loop
ljmp
add
push
xor
jmp
sub
std
icebp
xchg
sti
adc
les
sub
xor
sub
jmp
xor
pop
mov
cld
sarb
into
cmpsb
arpl
jae
in
add
mov
mov
push
and
sbb
rolb
add
inc
nop
repz
lahf
pushf
xchg
jle
push
stc
call
aam
pop
int3
out
lods
adc
xor
pop
sub
cwtl
cmpsl
mov
ret
test
jle
push
jne
cmpsb
pushf
les
push
push
sub
addr16
cltd
popf
das
pusha
data16
ret
lret
outsb
dec
xchg
shll
dec
movsb
lahf
aaa
out
jge
xor
in
push
mov
shrl
jge
icebp
inc
inc
cmp
add
ret
outsb
fldcw
xchg
rclb
pop
sub
mov
aas
test
lea
pop
jmp
sub
push
dec
pushfw
xor
fsubs
adc
cmp
lret
xor
ret
add
rclb
push
repz
out
add
xchg
push
dec
adc
dec
cmp
add
loope
mov
pop
outsl
sbb
push
xlat
imull
add
mov
popf
push
les
mov
cmp
jne
jb
pop
push
pushl
sub
scas
cmpsb
xor
cmpsl
call
incl
push
mov
dec
shlb
lock
push
rorl
pop
dec
xor
fdivrs
mov
push
bound
std
sbb
add
dec
lahf
gs
mov
mov
pop
enter
movsb
and
pop
pop
push
push
faddl
push
je
ret
idivb
mov
mov
and
ss
add
rcll
add
adc
jmp
xor
mov
mov
clc
rcll
and
mov
testb
mov
dec
cmp
jmp
sub
push
jle
sub
sub
outsl
in
cwtl
dec
rcrl
pop
fisttpl
test
xchg
mov
test
and
fists
cmp
fidivrs
or
jno
ret
pop
in
pop
cmp
outsb
mov
cmpb
xchg
filds
cmp
pop
arpl
dec
adc
pop
inc
orb
sub
je
repz
rorb
testl
ja
insl
jmp
dec
in
cld
xchg
mov
jmp
das
jmp
enter
addb
sub
int
orl
out
mov
mov
outsl
rorb
push
sub
xchg
mov
or
enter
dec
lods
vpaddw
inc
addr16
push
cmc
or
xor
push
sbb
xchg
or
push
insb
rorb
jle
dec
adcb
xor
icebp
rorb
popl
or
mov
mov
mov
jne
mov
dec
jmp
bound
sbb
jmp
dec
rcl
pop
cmpsl
xor
push
std
push
rol
dec
or
and
outsl
std
aas
in
sub
pop
test
and
cmp
stos
dec
test
inc
aam
mov
push
pop
imulb
clc
in
lods
imul
mov
dec
push
push
or
inc
push
cmc
and
pop
or
inc
popa
pushf
add
sub
insl
loop
or
xchg
or
lret
mov
adc
ljmp
xor
sti
dec
push
mov
lahf
push
or
sahf
stc
std
xchg
jmp
insb
mov
test
sub
cmovge
push
and
scas
xor
cld
out
inc
mov
push
add
out
and
jp
xor
mov
push
xor
sub
mov
clc
mov
je
inc
sub
and
inc
lea
xchg
test
pop
out
in
add
ret
pop
pop
lret
rcll
add
push
xlat
or
std
jmp
mov
adc
mov
movsb
pop
outsb
movsb
lahf
mov
mov
or
pop
lahf
mov
jmp
popf
jno
pop
outsb
mov
sub
sub
cs
repz
cs
cld
inc
pop
push
repnz
push
jle
push
ss
lock
xlat
ljmp
jg
aam
inc
or
inc
pop
test
sbb
inc
jge
jle
pop
cmp
push
mov
push
jb
sub
mov
add
xor
sub
pop
in
leave
sub
jle
sub
xchg
push
push
icebp
jae
pop
inc
and
in
adc
dec
and
stos
popf
int
sub
adc
fidivs
sti
cmp
add
or
jae
fildll
outsb
das
mov
popa
iret
add
xchg
sub
jns
sti
addr16
arpl
or
pop
xchg
mov
cmpsb
outsl
loopne
push
add
mov
mov
xor
test
adcb
lods
push
jbe
and
sub
sbb
repz
cs
js
lret
arpl
inc
sub
cltd
pop
out
stc
ds
jmp
ror
int3
xchg
loop
pop
pop
rorb
leave
sbb
jb
ss
pop
neg
push
shll
daa
sub
push
push
or
mov
aad
notb
shll
fists
js
fdivl
cmp
pop
add
push
jmp
and
aas
pop
jae
or
inc
dec
add
add
loopne
push
xchg
inc
in
loope
jp
xorl
arpl
and
mov
dec
jmp
inc
icebp
ret
sub
fstpt
dec
mov
sbb
pop
mov
dec
jne
test
jo
push
push
mov
in
es
clc
sub
decb
pop
pop
test
shlb
dec
adc
and
inc
cmp
sub
std
push
inc
std
mov
sub
jb
ljmp
pop
inc
clc
leave
fnsave
and
cwtl
shrl
jp
popf
jecxz
add
xor
push
sub
clc
jl
aad
shrb
mov
fdivrp
leave
mov
mov
mov
es
xorl
ds
outsb
ljmp
pop
jmp
xchg
out
jl
stos
jle
pusha
push
push
cmp
ds
inc
pop
push
bound
or
push
mov
clc
popf
lock
jmp
andnps
div
add
pop
mov
hlt
dec
sbb
outsl
mov
and
add
cmp
mov
inc
movsl
inc
in
adc
ror
xchg
and
and
test
push
scas
fs
int3
mov
add
int
hlt
jl
pop
jecxz
mov
push
outsl
iret
sub
push
cmp
icebp
lcall
or
jle
enter
inc
pop
or
lea
sub
and
push
add
jne
push
pop
mov
lcall
sbb
pop
adc
pop
mov
shrb
cmp
call
inc
or
pop
dec
pusha
loopne
js
and
and
test
add
sbb
icebp
cmp
sahf
pusha
jl
test
out
movzwl
adc
or
notl
popa
adc
inc
push
hlt
sbb
and
div
mov
mov
or
pop
sub
push
hlt
cmp
or
jmp
push
xchg
dec
jl
aaa
xchg
out
dec
xor
dec
add
add
mov
daa
sub
call
dec
pop
add
xor
outsl
and
jle
loop,pt
cmpsl
rorb
adc
pop
test
push
sub
pop
mov
test
or
cmp
push
push
in
or
aad
aas
jae
pop
lock
and
xchg
addr16
nop
pop
xor
mov
mov
push
aad
aaa
pop
std
xchg
push
das
xor
rcrb
adc
sbb
loope
pop
add
movswl
mov
xchg
mov
mov
out
cmp
xor
mov
mov
or
mov
xor
push
jl
add
and
and
rcr
movsl
xor
nop
mov
mov
mov
sub
xor
orb
push
add
jmp
sbb
insb
or
wbinvd
icebp
inc
jmp
mov
pop
mov
dec
inc
int
mov
or
sub
aas
push
adc
insl
inc
mov
test
push
pop
adc
inc
sub
stos
les
push
or
add
rorl
xlat
jo
mov
push
inc
pop
jmp
sbb
add
add
push
sub
add
ret
test
adc
add
pop
jmp
pop
cli
jb
cmc
in
pop
jae
dec
call
dec
pop
push
shrb
inc
sbb
jl
lahf
daa
hlt
sar
imul
dec
arpl
sbbl
mov
jno
mov
incl
push
cmp
lret
push
xchg
aad
lods
jne
mov
jmp
loopne
clc
jo
sub
sbb
es
jno
adc
pop
dec
mov
cld
jae
pop
insl
js
push
push
fsts
xor
ljmp
fsubrs
popa
daa
fs
adc
push
mov
push
jle
push
js
sub
bnd
and
mov
add
push
fistpll
flds
hlt
insb
add
and
pop
fildll
jge
push
or
fimull
cmpsl
pop
pop
sti
xor
jae
sar
je,pt
sub
inc
xchg
add
fmull
cli
outsl
jae
xor
push
addl
and
xor
xor
add
jp
sbb
test
or
inc
push
or
movsl
pushf
xlat
out
cmpsl
scas
fldenv
add
sarb
pop
add
cltd
jne
outsb
popa
imul
jmp
test
mov
mov
xchg
mov
inc
leave
xor
cmc
into
lods
das
jmp
mov
push
push
inc
les
and
sub
push
sbb
cmp
popa
int
pusha
outsb
cmc
cmpsb
das
andb
pop
jl
xchg
repnz
xchg
dec
inc
add
out
ja
pop
push
movsl
add
adc
in
push
sbb
jmp
sub
test
push
pop
pop
movsl
pop
sub
cmpsl
cmc
enter
icebp
jl
repnz
fisubs
add
pop
js
add
das
addr16
mov
subb
loopne
xor
dec
out
push
cmp
and
cli
jge
add
add
cs
xor
push
fwait
into
cmp
rclb
cmpsb
sub
daa
sbb
addb
mov
add
or
aad
fimull
jmp
fs
cmp
xor
lahf
jge
in
iret
sub
pop
pop
and
mulb
lahf
gs
jnp
das
add
idiv
divb
push
or
fcoms
pop
mov
movsl
out
xor
addl
or
and
adc
and
lea
mov
jmp
mov
xlat
mov
jbe
je
jge
aas
or
pop
jmp
lret
pop
push
popa
push
cmpb
push
push
je
leave
jl
repnz
and
and
fisttpll
dec
icebp
sub
pop
inc
add
jp
push
xchg
jmp
dec
dec
or
repz
in
loopne
push
and
or
std
pop
repnz
jp
int3
sub
pusha
test
mov
cltd
adc
cltd
ret
inc
inc
hlt
rcll
or
iret
in
adc
jge
mov
dec
dec
cmpsl
pop
add
mov
in
mov
orb
xchg
dec
sub
es
data16
adc
insb
jle
mov
push
pusha
int
dec
mov
stos
dec
inc
outsb
stc
mov
js
mov
popa
jns
dec
fdivp
dec
or
adc
lret
pop
rcll
stos
ds
or
add
mov
mov
cmp
rclb
pusha
xor
out
out
and
sahf
or
icebp
or
add
jne
add
daa
add
lret
lods
pop
or
jb
and
testb
mov
add
fsts
xchg
xor
loop
imul
dec
cmpsl
in
lods
ret
ss
push
sbb
scas
adc
cld
cli
out
test
out
addr16
jo
sub
cmp
adcb
inc
jmp
divb
out
in
idivb
ljmp
mov
cmp
mov
aad
mov
cmp
push
mov
push
cmp
add
call
loope
cmp
mov
xchg
push
ret
shrl
arpl
sbbb
jns
and
arpl
mov
into
pop
and
xchg
test
add
cli
mov
sub
clc
jnp
addr16
lods
or
add
xchg
stos
sub
test
inc
inc
jns
or
ss
in
pusha
sub
and
inc
es
cwtl
pop
dec
mov
add
shrl
jno
jg
cli
xchg
sub
fwait
inc
pop
mov
cli
mov
and
xor
das
mov
xor
xchg
mov
clc
in
mov
les
mov
adc
pop
cmpb
fstpl
movsb
shr
sub
ds
jbe
jmp
push
mov
int3
fwait
sub
iret
xchg
and
mov
jnp
mov
sbb
dec
vunpcklps
fidivl
out
ret
imul
and
loopne
push
test
push
arpl
lret
cltd
cmpsb
pop
lods
in
iret
or
push
xchg
ret
push
cld
xor
pushl
or
lret
iret
das
adc
pop
test
mov
pop
out
and
push
mov
dec
sub
add
jmp
ficoml
and
out
push
filds
push
cwtl
in
pop
add
jl
loope
mov
cmp
inc
test
dec
aam
ljmp
xchg
negl
lock
sub
push
xchg
sbb
or
sbb
mov
adc
or
stc
mov
pop
cmp
ret
pop
mov
enter
mov
scas
dec
mov
mov
push
mov
addr16
rcrl
push
mov
pop
push
xorl
movsb
sbb
pusha
sbb
fcompl
movsl
loope
jle
inc
add
and
sbbb
and
or
fstl
dec
pop
xchg
nop
xor
adc
xchg
pop
cmp
popf
inc
add
sahf
mov
inc
sbb
xor
or
addr16
aad
fs
mov
stos
push
cltd
push
push
in
adc
rcr
or
xor
sub
sub
stc
clc
mov
jbe
xchg
pop
mulb
mov
aas
lods
cltd
rclb
out
pusha
in
pop
mov
xchg
mov
popf
inc
rcl
lods
inc
loopne
ret
pop
ret
mov
outsl
rcll
fadd
shlb
and
popa
es
inc
push
dec
jmp
mov
cs
dec
mov
stos
lahf
xchg
shrb
sub
mov
adc
and
push
push
pop
sarl
jge
pop
stos
xlat
mov
movsl
and
mov
push
add
mov
scas
push
pop
call
sbb
in
pop
and
aas
adc
jle
std
pop
xor
push
fcomps
add
stos
adc
jg
mov
test
stos
mov
dec
dec
jb
jnp
lock
adc
out
cmp
and
xor
in
testb
xlat
push
mov
out
pop
xchg
dec
rorb
or
pop
add
add
sub
adc
insl
daa
dec
int3
push
sbb
gs
iret
or
or
dec
gs
or
outsb
cwtl
cwtl
mov
push
inc
sub
cltd
int3
mov
or
sub
mov
test
popa
dec
ss
xchg
jmp
and
out
add
notl
lds
clc
lahf
dec
jmp
pushf
outsl
cld
jmp
inc
cmp
xor
shll
shll
mov
popa
sbb
arpl
cli
mov
add
sub
fisubs
mov
jp
add
and
inc
and
sub
sub
test
shrl
jbe
adc
xor
aas
test
add
cmp
pop
jnp
cmp
scas
inc
pusha
pop
lret
push
aas
add
sbb
or
adc
fcompl
inc
add
add
imul
arpl
sbb
sub
adc
rcr
add
rclb
xor
push
fbld
fiaddl
push
stc
ljmp
ficoms
xor
les
jns
popf
pushf
pop
add
or
test
xor
sub
icebp
or
xor
jp
ret
imul
mov
test
in
fdivrl
dec
or
pop
iret
dec
pop
adc
jmp
mov
lret
in
dec
add
aaa
cld
lcall
xorb
ss
or
and
enter
dec
dec
mov
xchg
jge
sub
daa
scas
or
jno
pusha
add
push
push
mov
gs
fwait
or
dec
add
cli
in
pop
into
mov
ss
notl
pop
ja
mov
pop
loopne
adc
mov
pushf
int3
in
mov
push
pop
jno
scas
adc
or
dec
shlb
std
fcoms
xchg
fmuls
dec
out
add
pop
xor
push
jne
add
xor
dec
nop
push
add
jns
not
inc
xchg
sbb
es
cmpl
fidivl
push
add
add
stos
outsb
and
and
inc
push
xor
lret
mov
dec
out
setg
into
xlat
inc
xchg
push
mov
jno
jge
mov
ss
dec
jecxz
imul
icebp
jmp
repz
sahf
pop
inc
mov
inc
das
pop
mov
push
adc
jb
push
lds
sub
mov
ret
jmp
roll
les
loope
pop
imul
inc
pusha
xchg
enter
push
jmp
insb
xchg
rcrl
jmp
mov
mov
aad
pop
sbb
fs
mov
mov
subl
inc
push
pop
mov
cld
xor
xchg
push
adc
mov
dec
add
add
fdivs
lds
mov
adc
add
push
push
push
test
sbb
or
es
add
imul
push
pusha
scas
test
xchg
mov
loope
outsb
test
das
mov
sub
cmc
icebp
pop
xchg
inc
fldl
pop
stc
out
pop
or
mov
or
dec
push
adc
push
push
mov
adc
add
out
adc
lret
adc
dec
inc
mov
inc
pop
cs
cmp
das
jmp
push
pop
add
movsb
push
xor
sahf
rclb
dec
pop
lods
shl
push
cmpb
mov
pop
cmp
sbb
xor
or
jg
mov
pop
and
popa
add
rorb
rolb
nop
xchg
cmp
mov
and
or
or
jo
jmp
mov
inc
cmp
leave
pop
or
loop
mov
out
pop
jcxz
mov
stc
mov
addr16
and
inc
stos
mov
pusha
pop
sub
subb
cmc
test
push
xchg
push
push
sbb
repnz
fsub
loop
adc
insl
sub
push
and
dec
scas
fisubl
mov
jnp
pop
or
mov
xchg
test
in
sub
mov
push
fs
sbb
arpl
pop
mov
pop
mov
filds
xchg
xor
stos
add
pop
pop
shr
addl
xchg
cmpsl
or
pop
pop
jg
xchg
and
mov
divb
aam
pop
adc
mov
int3
or
sarb
icebp
aad
ljmp
jmp
and
xchg
repz
jl
push
jmp
dec
pop
add
sub
pop
orl
movsb
repz
inc
call
push
mov
adc
pop
push
dec
push
mov
ror
xchg
sub
pop
push
push
mov
or
loop
outsb
jl
inc
stos
mov
sbb
sub
popf
or
push
int
cmpsl
dec
sub
insl
fistl
push
jmp
and
jmp
cltd
push
addr16
nop
or
pop
loopne
addl
dec
mov
loopne
lcall
orl
test
or
lret
cli
xor
dec
add
mov
fildll
pop
in
loop
das
or
dec
iret
mov
xchg
add
movsb
jl
adc
cmp
adc
lock
shlb
xchg
adc
test
or
aas
adc
jmp
outsl
and
xchg
inc
js
icebp
int3
idivl
xor
test
cmp
mov
push
push
add
jg
add
adc
dec
add
ret
inc
lret
mov
loope
cmpsl
or
lcall
sahf
std
lcall
xor
push
daa
hlt
fldt
popf
push
flds
jnp
mov
hlt
sbb
out
cmp
and
xlat
add
shll
jb
imul
add
sbb
mov
lds
lret
or
push
adc
test
icebp
sbb
gs
sub
fdiv
add
int3
sbbb
shlb
cmp
push
and
jae
add
push
sub
mov
cmp
mov
sub
loop
sti
aam
push
scas
cmc
and
cmc
fsubr
xchg
and
jp
push
rcrb
xchg
xor
das
mov
jno
jmp
mov
push
push
and
push
inc
jecxz
popf
jge
psubq
gs
cmc
popa
in
pop
xorb
mov
adc
jmp
add
scas
imul
add
jmp
xor
fldl
daa
lcall
add
imul
and
xor
push
test
les
loopne
rcrb
out
rorb
cmp
fbld
pop
push
and
add
std
fsts
push
aas
inc
divl
test
inc
popf
enter
and
add
cmp
pop
pop
push
pop
sub
adc
loope
insb
das
pop
add
fidivrs
pop
nop
dec
or
addr16
jne
ss
mov
std
or
add
dec
inc
push
cmp
rolb
inc
in
pushf
daa
ret
jo,pt
push
pop
push
push
scas
insl
jge
scas
insb
dec
jb
les
add
test
roll
jge
sbb
neg
jmp
push
aas
cmp
xchg
push
push
mov
xor
add
add
add
sub
popa
out
js
push
sub
mov
or
pop
push
out
stos
xchg
or
mov
inc
pop
into
insl
loope
shl
jmp
out
lock
xor
xchg
nop
out
jnp
sub
shlb
mov
popa
mov
and
pop
and
or
mov
pop
dec
push
inc
sub
or
jmp
nop
aas
add
dec
xchg
cmpsb
shl
je
hlt
mov
pop
pop
loop
pop
mov
pop
popf
stos
shll
rcll
sub
pop
cwtl
mov
push
mov
or
lods
gs
add
mov
adc
pop
push
dec
mov
add
dec
pop
xchg
and
inc
sti
pop
xchg
push
dec
xor
loop
mov
filds
sub
aaa
clc
add
pusha
or
jo
add
add
pop
dec
jmp
jg
cli
xor
push
aad
push
xor
loopne
and
xor
and
jno
xchg
add
xchg
stos
and
push
ss
xchg
cs
mov
sbbl
fdivr
mov
inc
or
xor
jg
add
lret
mov
lock
push
mov
lret
pop
mov
fcmovnb
outsb
iret
and
dec
xchg
mov
sbb
add
loop
inc
mov
or
sub
stos
and
ljmp
cmpsl
jne
lods
pop
pop
pop
add
add
xchg
xchg
adc
adcb
bound
frstor
add
adc
sbb
fidivrs
and
push
in
mov
jmp
imul
stc
ret
mov
lock
jg
cld
sbb
inc
sub
and
xor
cmp
setge
or
stc
sbb
or
cmp
shrb
rcl
inc
fs
dec
jbe
call
inc
add
or
inc
add
shll
dec
cwtl
ret
and
inc
int3
inc
sbbl
iret
adc
adcb
sub
mov
pop
shll
rcl
mov
pop
nop
sbb
out
push
decb
je
pusha
sbb
leave
jae
add
and
xor
mov
push
jbe
aad
add
iret
inc
jns
outsb
jp
dec
mov
stos
push
in
and
push
fs
mov
aas
fadds
in
lds
cmp
sub
xchg
dec
decb
mov
adc
inc
or
push
repz
adc
pop
lods
pop
mov
dec
push
mov
sbb
pop
add
repz
xchg
xchg
hlt
insl
add
cmc
sarb
sti
or
sub
cmp
out
xchg
fisubs
cmp
cmp
mov
sub
dec
not
push
jmp
add
pop
push
lret
scas
inc
addl
add
push
jge
inc
add
dec
fldcw
xor
es
jmp
add
xchg
into
dec
adc
fdivl
mov
cmpsb
fwait
jnp
ss
pusha
push
jmp
lods
popf
sarb
jp
adc
or
scas
mov
xchg
jl
imul
mov
nop
xchg
jmp
rcrb
icebp
testl
add
aad
out
ret
sbb
orl
outsl
and
cmp
les
mov
cwtl
dec
gs
xchg
shl
arpl
ror
mov
clc
jbe
mov
popf
or
out
and
fsubs
mov
jbe
adc
insb
push
repnz
lods
sti
je
mov
or
ficompl
xchg
pop
jge
sahf
mov
mov
mov
mov
in
mov
pop
int3
into
pop
dec
pop
rcrl
dec
lahf
ljmp
pop
pushf
push
jb
in
out
or
xor
adc
mov
or
adc
jmp
sbb
push
mov
pop
shll
ret
or
jle
pop
outsl
xchg
mov
mov
imul
mov
icebp
dec
push
in
jp
pusha
ret
pop
addr16
sbb
inc
aad
cmp
cli
cwtl
popa
jle
cmpsl
jns
aas
mov
aad
addr16
jne
jl
jbe
iret
shr
add
xlat
dec
out
push
add
sub
jo
clc
pop
or
jbe
adc
js
mov
or
popf
shlb
pop
dec
movsl
loope
mov
cli
inc
cmpsb
add
pop
or
pop
sub
ja
and
jno
aas
popf
test
or
pop
push
dec
xor
fdivrp
sub
mov
shlb
cmpsl
stos
repnz
mov
movsl
push
jne
sub
jecxz
jmp
out
mov
jmp
aam
orl
sbb
pop
inc
add
or
pop
test
mov
test
cwtl
iret
mov
cmp
sbb
mov
pop
jnp
imul
adc
adc
out
mulps
andl
push
jbe
roll
add
push
push
mov
lock
adc
and
sub
dec
push
popf
decl
push
mov
int
and
pop
mov
add
int
hlt
arpl
xchg
add
jmp
pop
cmpsl
pop
popa
push
jmp
sbb
dec
pop
je
ljmp
jmp
sub
dec
push
adc
pop
lcall
sub
sub
mov
in
jmp
mov
sbb
xchg
jle
loopne
sub
and
inc
js
add
aaa
mov
sub
adc
outsl
in
fiadds
daa
arpl
adc
sti
add
mov
inc
push
cmp
in
popa
mov
dec
loop
aad
popa
pop
and
add
loop
popa
insb
jp
loopne
ljmp
or
mov
pop
adc
clc
test
pusha
not
push
test
sbb
daa
inc
arpl
daa
mov
clc
push
lods
pop
jnp
rol
push
push
pop
mov
push
inc
call
jnp
fcoms
es
add
in
iret
hlt
stos
imul
clc
push
or
sbb
cmp
imul
push
pusha
jl
push
adc
test
rorb
pop
cmpb
iret
mov
insb
dec
adc
adc
push
cmp
pusha
leave
cmc
repnz
cmp
into
movsl
iret
xorb
push
mov
push
cld
adc
icebp
mov
push
xor
push
sub
add
xor
jo
and
inc
xchg
rclb
in
sbb
sbb
and
mov
push
dec
push
mov
imul
add
cmp
xchg
loop
clc
push
mov
fs
jg
jns
mov
int
sbb
scas
das
adc
sbb
jmp
fdivrl
jecxz
xchg
icebp
push
das
ret
jbe
lods
cmp
dec
sub
rep
xchg
adc
push
adc
sub
cmpsb
push
jge
sbb
adc
mov
mov
inc
loope
dec
clc
aaa
nop
pushf
jno
add
xchg
pop
addr16
add
nop
pop
jmp
jae
pop
inc
cli
jne
call
mov
pop
sbb
inc
sbb
stos
popa
push
aaa
jb
add
xor
in
mov
ficoms
push
add
or
sbb
lods
lds
or
jmp
sahf
sub
xor
mov
cmp
pop
mov
push
push
pop
lret
cli
and
sbb
sbb
pop
jmp
add
add
push
push
mov
xchg
lock
fldt
cmpsl
pop
jp
rorb
sti
pop
push
movsb
jle
sbb
call
loope
inc
inc
mov
test
adcb
jnp
dec
push
icebp
faddl
lods
fistl
lcall
lcall
dec
sub
cmp
bnd
subb
sub
es
or
stos
inc
es
pop
in
imul
xlat
fs
jge
jp
xor
jnp
inc
lret
leave
adc
jo
shrl
cmp
or
inc
push
aaa
cmpl
or
fs
call
mov
mov
push
push
jbe
pop
xor
and
pop
ror
adc
in
push
push
mov
orb
fisubrl
test
mov
repz
push
shrb
add
call
sub
jmp
pop
push
push
mov
jmp
or
rolb
scas
or
gs
sbb
lods
maxps
loope
jmp
add
je
std
jae
sub
jge
outsl
mov
arpl
leave
andb
insl
mov
es
mov
jmp
out
add
add
cmp
mov
xchg
sub
jns
push
inc
sub
mov
nop
and
xchg
dec
push
std
add
clc
xor
mov
xchg
test
push
mov
push
outsb
frstor
call
imul
cmp
test
fldenv
in
cld
orl
andb
sub
cld
lahf
mov
mov
das
push
pop
cwtl
mov
xorb
xor
in
push
enter
pop
add
sub
push
jmp
mov
outsb
iret
scas
or
mov
stos
or
int3
push
add
pop
push
shrl
cli
shl
push
mov
pop
mov
push
ja
xchg
push
or
or
adc
and
jmp
outsl
xchg
pop
adc
pushl
and
xor
cli
cmp
test
push
pop
pop
stos
or
cmp
cmp
mov
xor
daa
inc
add
insl
mov
sbb
jmp
pop
push
mov
mov
jno
outsb
aas
pop
std
cmpl
repz
imul
dec
mov
push
mov
sbb
and
or
shr
pop
adc
push
push
add
aas
pop
cmp
call
push
imul
pusha
test
icebp
sbb
out
sub
jg
sbb
xchg
and
push
jmp
or
xchg
sbbb
jle
lods
pop
add
nop
sub
xchg
sbb
mov
pop
fldt
add
push
movsl
movsl
jg
mov
repz
ds
cwtl
cltd
sbb
jmp
fsubp
add
jmp
out
mov
inc
loope
inc
push
mov
push
ljmp
inc
pop
xor
ja
jae
andb
pop
jg
inc
add
lods
pushf
cwtl
or
inc
and
cmp
mov
rcll
das
outsl
ret
add
xor
pop
pop
lock
jle
xor
jmp
mull
addb
arpl
mov
test
push
mov
inc
movsb
roll
add
and
cmp
shlb
sahf
push
pop
push
mov
clc
addl
add
or
enter
xor
xor
inc
incl
or
fwait
mov
mov
add
int3
jmp
insl
or
xchg
leave
and
das
pop
pop
bound
popf
push
xchg
stos
hlt
lret
shlb
mov
mov
and
push
mov
pop
dec
push
push
push
ja
xor
test
mov
dec
mov
push
xchg
mov
mov
rolb
mov
mov
dec
jmp
push
je
jle
add
mov
cmp
lods
inc
roll
adcb
sub
add
adc
ds
mov
push
add
adc
xchg
sub
jnp
not
daa
enter
cmpb
nop
lods
in
xor
jb
mov
or
lods
outsl
pop
cmp
pop
cmp
xchg
pop
push
stc
pop
fmull
test
idivb
xor
sub
lock
or
inc
shll
pop
das
mov
or
pop
pop
push
xor
loope
loope
in
mov
ficompl
ljmp
mov
or
jg
shrb
ficoml
or
inc
ja
jge
cmp
dec
mov
movsbl
push
sti
jmp
mov
push
mov
cmp
in
in
push
lods
andb
or
ds
jno
sub
or
imul
lahf
jb
add
and
and
dec
popa
mov
pop
push
adc
jl
rcrb
cmp
xor
idivb
fstps
jns
push
mov
jecxz
sub
mov
mov
mov
jmp
sbb
add
mov
pop
add
mov
sub
inc
pop
cmp
push
imul
scas
push
or
and
shll
int
stc
cmp
xor
ret
lods
popf
sub
cmp
int3
lds
out
mov
mov
jmp
repnz
push
xchg
push
pop
pop
push
mov
jmp
mov
push
ret
mov
sub
adc
orb
popa
xchg
push
ja
inc
ror
outsb
cmpsl
push
mov
add
mov
push
adc
cmpsb
inc
add
and
jmp
sbb
dec
sub
aam
jg
add
jle
pusha
pop
jo
ret
jmp
into
jb
add
adc
push
or
mov
sub
or
dec
xor
cmp
je
int3
inc
outsl
movsl
cmc
add
sub
xorb
sbb
and
pop
dec
loop
bound
mov
out
pusha
mov
pop
add
add
cltd
les
test
lcall
add
aad
add
loopne
inc
or
je
mul
cmc
std
xor
addl
lret
or
leave
outsl
clc
ljmp
push
jmp
add
or
or
dec
jl
mov
pop
or
xor
mov
fmulp
leave
inc
add
xchg
data16
sbb
adc
pop
scas
pusha
pusha
push
dec
sub
cs
pop
mov
xchg
xchg
jnp
testb
jg
dec
test
sub
add
jmp
mov
daa
mov
je
jo
jno
xchg
icebp
mov
mov
fdivs
cs
loope
push
push
adc
lock
dec
jo
sub
lret
cmp
jle
add
fadds
jmp
pop
push
and
mov
xlat
mov
sti
xor
insl
pop
xor
dec
jns
inc
dec
test
xchg
pop
sub
shl
rcll
arpl
jmp
jecxz
push
orb
sbb
sub
pop
scas
or
not
xchg
mov
fcompl
xchg
push
lret
jg
mov
test
xor
push
sbb
sbb
leave
adc
or
xor
stos
fs
clc
outsb
xor
pop
dec
push
mov
adc
mov
stos
in
fbstp
mov
je
xor
jne
nop
mov
sbb
or
inc
push
mov
push
adc
out
mov
sub
jg
or
cmp
jmp
jns
shrl
ss
imul
inc
xchg
nop
inc
insl
pop
loop
jle
adc
repnz
lds
outsb
xlat
adc
aaa
subl
ret
popf
imul
jecxz
clc
cmp
ret
arpl
pushf
lcall
int3
cmpsb
shrl
cli
and
pop
loop
push
adc
lock
and
push
jge
xor
cmpsb
icebp
lods
test
inc
ret
test
sbb
paddb
mov
leave
xchg
fdivrl
add
add
xchg
dec
mov
mov
xor
jo
sub
add
lcall
addr16
out
push
je
out
and
jmp
in
inc
add
scas
fbstp
and
inc
mov
push
mov
xor
push
xchg
daa
dec
inc
subb
pop
xchg
push
aam
daa
jle
pusha
mov
mov
mov
scas
inc
dec
imul
pop
imul
pop
jmp
rcrl
cmp
xchg
xor
mov
jne
js
push
lods
fdiv
shl
and
add
hlt
or
sahf
push
stc
out
test
mov
or
mov
cmpsb
cld
sbb
pusha
nop
jns
inc
sbb
and
int3
cmp
arpl
inc
lods
dec
pop
adc
inc
fiadds
or
pop
test
xchg
cli
ret
or
lret
mov
mov
andl
sbb
les
push
sub
or
sbb
add
pop
mov
pop
push
add
pusha
pop
repz
mov
popf
add
push
in
orb
and
out
mov
icebp
clc
ljmp
jbe
push
das
jmp
add
in
pop
push
xchg
mov
or
push
and
mov
pop
xor
pop
add
js
and
xchg
lods
fxch
imul
loopne
adc
loopne
sbb
je
fld
jno
adc
fildl
sbb
pop
sbb
xchg
mov
or
or
int
mov
push
std
insb
std
mov
cs
dec
push
popf
push
scas
test
cmp
xor
hlt
cmp
or
mov
repz
mov
out
pop
ljmp
scas
jmp
xchg
sti
mov
fnstsw
sbb
push
and
sahf
add
jns
jmp
jns
leave
push
cmp
bound
mov
and
out
push
dec
or
dec
mov
sbb
add
test
mov
pop
mov
inc
push
leave
adc
cmp
adc
fbld
int
dec
ds
nop
pusha
inc
daa
sub
repnz
mov
pop
lods
shrl
add
pop
ret
fldcw
movsl
pop
or
cmc
mov
mov
pop
outsb
loop
cld
mov
fnstsw
push
add
sarb
js
rcrl
push
std
dec
xchg
outsb
test
lock
inc
pushf
add
loop
sbbl
rcr
add
inc
dec
test
pop
call
daa
mov
out
pushf
inc
sbb
cltd
fimuls
ror
xlat
dec
cmp
clc
inc
int3
sbbl
inc
add
mov
or
push
push
js
adc
icebp
scas
aas
mov
testl
xor
sbb
xchg
dec
xchg
push
sbb
movsl
and
lods
setb
and
hlt
clc
ret
pop
ds
mov
repnz
and
sbb
xor
mov
mov
mov
loopne
push
dec
loope
cld
loopne
mov
rcr
jbe
icebp
cs
add
jp
cmc
lods
addr16
sbb
enter
leave
pop
mov
jmp
push
addl
pop
sub
push
sub
mulb
pop
std
cs
stos
lods
add
fbstp
xchg
icebp
mov
lahf
daa
rolb
shlw
ret
aam
out
nop
sbb
cs
adc
out
fldl
pop
push
push
test
or
pop
xor
mov
pop
sub
imul
dec
js
add
inc
jecxz
push
out
add
sub
mov
filds
jo
cmpsl
inc
cmp
stc
mov
add
sbb
fidivrl
orb
push
mov
cwtl
mov
popf
in
and
lea
push
std
int3
or
and
pop
xor
rorl
lret
idivb
sub
dec
sbb
adc
sub
xchg
inc
and
pop
or
mov
mov
push
and
xchg
jl
icebp
mov
cmpsl
and
fmull
in
scas
in
scas
lock
xor
and
add
mov
or
push
into
arpl
mov
add
lock
pusha
nop
dec
or
test
adc
dec
push
js
rcr
adc
inc
xor
mov
push
loopne
adcl
sbb
push
mov
lods
and
ja
repnz
rcrb
or
or
push
adc
fwait
movsb
clc
cmpsl
lds
test
or
lcall
movsl
fbld
jmp
div
sete
xor
xchg
adc
loop
shll
mov
jbe
popa
jmp
movsb
movsl
inc
xor
inc
mov
push
jo
jmp
sbb
mov
sub
out
loop
inc
jne
xor
jmp
in
mov
in
outsb
xchg
mov
cmc
ljmp
jmp
pop
pop
jg
or
jnp
add
adc
je
sbb
call
and
jle
inc
jecxz
idivl
cmp
cmp
lea
jmp
inc
outsl
or
cs
insb
jmp
outsl
xchg
cmp
adc
cld
into
push
mov
mov
popf
push
mov
jge
outsb
mov
adc
mov
fcmovnbe
sarl
daa
xchg
mov
loop
out
pop
sub
jno
cmp
add
pop
push
jmp
jbe
sub
pop
sub
in
inc
movsl
aam
jmp
mov
stc
or
xchg
push
iret
in
mov
add
jmp
pop
pop
movsl
push
fmuls
xchg
adc
or
xchg
push
inc
xor
push
mov
lret
pop
je,pn
inc
pop
scas
fld
call
mov
pop
add
lods
cmp
xchg
data16
jmp
push
dec
lret
cmp
mov
inc
dec
or
jno
mov
ficoms
jmp
adc
stos
in
lds
add
data16
call
or
pop
jle
ds
gs
lods
pop
inc
lods
aam
out
dec
lea
insl
adc
push
mov
or
jle
stc
mov
jg
jbe
push
xchg
dec
je
les
shlb
fldl
and
orl
push
inc
pop
clc
push
dec
mov
sbb
paddq
xlat
adc
sub
stos
and
dec
andl
or
push
repz
xlat
jecxz
xrelease
push
cwtl
das
lock
pop
outsl
das
dec
test
stos
pop
push
fs
xorb
ljmp
nop
xchg
das
jmp
rcrb
lea
xchg
sub
sub
adc
pop
jo
fld
lret
lret
sbb
ficoml
stos
jge
nop
ja
popf
cmp
cmp
mov
sarl
outsl
cmp
cmpsb
mov
nop
sub
and
daa
mov
push
mov
in
cmp
cmpsl
xor
in
xchg
sub
jb
lock
dec
jle
mov
sub
pop
pusha
and
neg
add
popf
sbb
push
fisubrs
shr
pop
out
arpl
lcall
cmp
sub
push
mov
mov
push
add
inc
mov
sarb
movsl
dec
jb
mov
sub
jns
int3
push
mov
adc
lods
add
xor
les
inc
orb
add
sbb
lock
cmpsl
cmpl
pop
dec
mov
or
aas
movsl
pop
cmc
and
jmp
mov
ret
js
insl
sahf
push
pop
repz
push
addb
mov
out
and
das
cli
mov
dec
scas
lcall
sub
leave
cvtps2pd
clc
sbb
scas
popa
mov
aam
mov
cld
or
mov
cmp
sbb
fsubr
add
pop
or
pusha
pop
sub
fldl
and
mov
pop
mov
jmp
and
mov
sbb
mov
ret
jg
rclb
adc
push
mov
sbb
clc
addr16
inc
add
xchg
adc
sbb
adc
ret
bound
js
pop
pop
loope
sub
push
pop
inc
or
pop
das
jg
mov
push
notl
in
jnp
bnd
pop
imul
adc
cwtl
xchg
sbb
xchg
ja
call
mov
sub
inc
mov
ja
cs
cmp
and
aaa
neg
jmp
adc
loope
lea
inc
or
test
popa
mov
imul
adc
es
popf
addr16
dec
les
pop
ds
cmpl
test
lret
shl
add
roll
rorb
xor
pop
lods
mov
and
mov
cmpsl
cmp
fisttps
pop
sub
sbb
dec
ds
push
sbb
xchg
add
imul
push
fistps
dec
jbe
test
pop
xlat
inc
push
mov
in
outsl
sub
das
dec
push
ja
push
ja
or
push
mov
xor
fmull
pop
jmp
jmp
out
ds
aam
test
and
vmwrite
or
insb
or
xor
rcll
mov
push
int
sbb
add
fisubl
mov
inc
shr
and
cld
ret
shlb
pop
xor
xchg
iret
cmp
sbb
test
ds
movsb
push
insb
rclb
push
adc
dec
push
sbb
push
test
clc
dec
sub
jb
dec
fisubrs
mov
push
adc
mov
push
pop
cmp
add
cli
cli
mov
inc
push
push
push
jmp
std
cmp
sub
aas
hlt
jns,pt
push
jmp
dec
shrl
add
add
jmp
notb
fs
pop
mov
icebp
faddl
test
pop
loop
and
into
add
push
jecxz
add
das
out
pop
push
cmp
sub
sub
test
ret
jns
xor
mov
jb
xchg
dec
notl
ror
mov
pop
sbb
or
sbb
or
sub
push
loop
je
adc
shlb
dec
pop
xchg
mov
mov
jge
leave
adc
pop
mov
sub
loop
push
popa
lahf
popa
ljmp
or
aam
aaa
mov
fstl
lret
insb
cld
and
lahf
jl
inc
push
mov
pop
jl
add
xchg
xor
sbb
ficoml
push
xchg
je
lret
or
dec
add
jmp
xor
and
test
cmp
arpl
bound
xor
push
inc
jnp
jmp
adc
jmp
mov
xchg
xorl
pusha
cmc
cld
inc
pop
mov
dec
aam
or
pop
ljmp
stos
sub
sub
pop
jl
loop
pop
leave
push
mov
sub
ret
mov
sarb
jmp
mov
scas
sarb
inc
movb
xor
push
je
ret
stos
pop
push
xchg
mov
scas
dec
movsb
outsl
loopne
pop
mov
outsl
xor
xchg
pop
sub
add
add
sarl
sar
sub
jb
ret
xor
jg
negb
in
push
and
or
jle
dec
or
adc
add
pusha
inc
inc
jmp
nop
cli
popf
push
xor
in
lods
cmpl
test
aad
xor
idivb
dec
rorb
ds
and
pushf
jecxz
jmp
cs
push
lcall
adc
aad
pop
sbb
loope
das
mov
subl
lods
bswap
repz
mov
or
or
mov
jg
dec
sub
inc
jecxz
ljmp
sbb
cmp
push
sti
mov
mov
lret
add
fdivrl
add
jo
or
sbb
cld
sbb
or
xor
inc
jnp
add
pop
add
add
pop
stc
adc
stos
push
lret
cmp
xchg
adcb
jno
push
aam
jl
movsl
jg
xchg
add
cmp
test
mov
adc
cmp
mov
imul
gs
jl
cmp
bnd
pushf
adc
in
jmp
pop
jmp
in
shl
mov
pop
in
cmp
jmp
or
inc
inc
add
cld
push
std
jg
insl
jle
fisttpll
icebp
call
xchg
or
outsl
xor
lds
mov
push
call
mov
jnp
shlb
call
add
ret
cmc
fdivr
xchg
fmulp
dec
add
and
add
pop
addr16
adc
add
notl
sub
lret
push
out
mov
ror
ljmp
loopne
ror
push
pop
dec
push
cmpsl
cs
jbe
push
dec
sbbb
lret
dec
int3
je
add
repnz
push
pop
jmp
xlat
sarb
stos
dec
push
or
pop
sub
lock
or
imul
pop
orb
mov
push
rol
add
inc
add
shr
jg
xchg
movl
pop
sbb
je
push
and
sbb
clc
fsubrp
imul
rolb
dec
ret
xor
adc
push
pusha
cli
sbb
into
xor
shll
mov
test
mov
decb
or
xor
add
inc
sti
xchg
jmp
mov
or
loope
frstor
lea
outsl
call
addl
jmp
mov
sti
fmull
mov
roll
ljmp
cmp
std
adc
testb
fildll
hlt
addb
jmp
xchg
mov
test
js
jmp
bnd
mov
add
cmpl
xchg
add
add
mov
lahf
mov
ja
or
aam
add
out
mov
dec
lods
dec
popa
and
mov
push
mov
mov
add
sbb
lret
push
in
dec
push
push
xchg
fwait
sbb
sbb
add
cmp
dec
mov
pop
mov
out
mov
push
lcall
xchg
mov
sub
pop
pusha
push
and
mov
or
xor
out
xlat
sbb
add
cmp
repnz
push
pop
leave
or
sub
bound
add
pop
pop
push
faddl
and
add
or
or
mov
xchg
or
add
xlat
mov
or
dec
outsl
imul
dec
xor
out
jns
adc
mov
mov
cmpb
les
lods
push
adc
cmp
ljmp
les
push
adc
jo
lret
rcl
lock
push
dec
lds
das
push
nop
out
cmpsb
pop
or
cmp
imul
pop
lock
adc
mov
pop
outsb
out
fmuls
mov
pop
shr
or
sbb
rorb
xor
cmp
pop
adc
jo
mov
or
bound
test
neg
sub
repz
push
jecxz
shrb
lret
mov
iret
jmp
icebp
jl
rorb
and
xchg
cmp
rorl
pop
pop
push
or
pop
leave
call
jo
das
in
ds
pop
daa
or
shlb
and
in
imul
mov
xchg
aaa
sbb
out
adc
inc
pop
or
inc
shlb
mov
mov
repnz
jnp
clc
scas
sub
testl
shr
loopne
test
dec
xchg
adc
incl
xor
mov
pop
pop
lea
stos
ret
jmp
push
loopne
ss
dec
clc
loop
add
jg
stos
push
mov
outsb
test
inc
or
ss
lods
push
daa
jmp
xchg
pop
mov
pop
mov
xlat
arpl
add
jo
xor
jmp
mov
popf
sarl
add
cli
cmp
push
scas
push
add
sub
add
mov
cmc
adc
iret
cmp
dec
xor
lock
dec
sub
sbb
jne
inc
mov
and
jmp
push
and
js
in
sub
das
xor
jmp
or
cmc
sub
or
dec
add
xchg
or
iret
xor
iret
jge
or
add
inc
fcompl
in
subb
mov
add
or
enter
call
xor
sahf
loop
je
push
gs
add
and
je
jmp
scas
jbe
adc
xor
std
mov
mov
jne
ret
dec
rorl
sub
in
or
jmp
subb
xor
pop
add
loop
push
mov
sbbb
pop
xor
pop
repz
mov
push
rcll
pop
inc
out
jb
mov
pusha
cmp
or
data16
out
sub
add
ffree
into
push
add
xor
pop
repnz
pop
push
sarl
inc
nop
xchg
sahf
jp
adc
add
add
adc
add
ja
je
or
cmp
push
adc
data16
lods
mov
not
mov
test
sub
aad
ret
add
sti
sub
sbb
cmp
xchg
push
aam
test
and
lods
adc
sub
mov
hlt
pop
stos
push
sub
jne
daa
shl
pop
out
push
sbb
push
test
in
xchg
ljmp
addb
out
lock
adc
out
add
or
add
adc
jne
sub
and
hlt
cmpb
xchg
mov
lods
hlt
mov
mov
fucomi
popa
sub
jle
and
movb
rorb
or
or
jne
int
jo
push
fisubl
ja
dec
insb
call
mov
add
lock
mov
jmp
into
mov
arpl
adc
and
insb
ds
cmpl
mov
shrb
jb
nop
jmp
pop
loop
das
pop
jge
dec
pop
push
sub
notb
pop
sub
push
dec
aam
aaa
pop
nop
inc
dec
out
inc
pop
push
daa
cmpsb
jle
jnp
mov
shll
inc
inc
mov
adc
pop
arpl
jmp
imulb
stos
push
jp
jmp
repnz
fildl
psubq
testb
pop
inc
rcll
and
dec
sti
adc
adc
xchg
cmp
xchg
xchg
pop
lock
insb
mov
fists
inc
fmuls
ret
andb
pop
push
pop
pop
cmpsl
daa
icebp
fnstsw
jg
arpl
pop
or
outsl
and
adcb
add
jmp
pop
jl
dec
mov
and
loop
xchg
hlt
push
cmc
out
pop
pmaxsw
or
dec
xchg
dec
xchg
add
xchg
adc
xchg
xlat
pop
mov
xor
or
jmp
ret
jle
dec
push
add
jmp
popf
iret
inc
pop
insl
psrld
dec
pusha
les
movsl
into
add
pop
jo
arpl
rcll
add
xchg
adc
aas
pop
fildll
or
loop
push
movsl
inc
sti
lock
repnz
xor
pop
and
push
cli
je
loop
xchg
stc
cmp
inc
jmp
ds
sbb
cmpsl
insl
jne
cmp
stc
pop
jl
loope
xor
mov
jno
mov
or
cmp
imul
pop
pop
dec
pop
mov
inc
in
mov
jmp
pop
add
adc
out
scas
loop
stc
inc
adc
fcoms
les
ljmp
jns
subb
popa
outsb
enter
loopne
ja
jl
add
mov
mov
pop
hlt
psadbw
outsb
cmp
xabort
es
shl
mul
pop
mulb
loop
les
je
or
mov
dec
mov
loop
and
or
popf
incb
popa
cmp
or
jp
sub
add
popa
cmp
fwait
cmp
or
push
sub
jmp
mov
lret
and
mov
add
mov
jp
lock
pushf
aam
outsb
xchg
pop
adc
xchg
adcl
xlat
stos
add
fwait
rcr
mov
sub
dec
adc
test
fcom
das
test
dec
sub
out
mov
pop
loope,pt
daa
jle
outsl
test
pop
mov
pushl
mov
pop
push
pusha
jecxz
or
das
mov
fbstp
scas
pop
rclb
ret
ja
jge
int
pop
mov
dec
mov
mov
sub
ds
inc
adc
pop
ja
dec
push
adc
mov
push
outsb
inc
inc
jno
mov
inc
add
andl
and
mov
jmp
inc
add
out
push
dec
and
fisubrs
push
pop
rolb
cmp
pop
lock
sub
das
cli
and
pushf
or
add
mov
push
pcmpeqw
jmp
inc
or
sub
xor
mov
cmp
stos
add
inc
sub
sbb
ljmp
jmp
xor
leave
pushf
add
stos
and
scas
icebp
lahf
insb
subb
das
ljmp
cmp
mov
jl
push
insb
xor
roll
rolb
test
mov
add
dec
jb
mov
decb
or
dec
or
add
pop
push
scas
dec
cmp
dec
inc
or
cmpsb
sbb
push
rcrl
jl
ret
jae
das
adc
pop
pop
dec
stos
adc
arpl
test
jg
out
outsl
aad
hlt
add
jmp
rcrl
lret
lock
jo
mov
call
pop
mov
xchg
in
enter
sub
mov
sub
or
ljmp
pop
lea
add
test
mov
popf
adc
fistl
add
jmp
imul
inc
xchg
rcl
cmp
out
xchg
push
testl
mov
dec
fsts
inc
out
xor
pop
addb
cmp
add
mov
xor
pop
xchg
mov
dec
pop
popf
push
jge
push
test
lahf
pop
xchg
cmpsl
sbbb
aaa
jno
add
hlt
ret
repnz
xchg
adc
jb
pop
push
aam
sbb
insl
add
sub
enter
push
cmpb
add
jnp
pop
push
call
divb
jmp
sub
pop
push
lret
and
add
out
fisttpl
js
pop
xchg
inc
jmp
push
int
dec
jb
mov
or
push
push
outsb
cmpsb
cltd
add
incb
arpl
mov
jmp
arpl
adc
add
das
jns
or
bound
in
xchg
fimuls
nop
adc
add
add
shr
shll
repz
lock
in
neg
leave
aam
sbb
stos
add
jg
lret
aad
insb
or
test
inc
cmp
xchg
sub
hlt
mov
dec
out
push
adc
pminsw
lcall
add
xchg
and
int
test
bound
fsts
push
data16
sub
pop
xchg
sti
ret
or
adc
push
lahf
or
push
xor
icebp
push
sub
jmp
adc
push
jo
jno
popf
push
orb
shll
push
push
cmpsb
inc
dec
adc
mov
in
mov
loope
pop
and
push
mov
insb
jae
repz
jle
pusha
mov
adc
inc
mov
push
jne
mov
mov
mov
sbb
call
or
in
test
sti
fidivrs
adc
fildl
mov
incb
mov
icebp
pusha
pop
adc
xor
sbb
mov
dec
push
pop
shrl
dec
pop
ds
pop
inc
enter
inc
std
fldenv
pop
in
test
call
outsb
cli
popl
mov
xor
mov
xchg
notb
mov
jle
loope
cs
pop
cs
sbb
rclb
ret
and
xchg
xchg
push
dec
push
pop
sub
in
inc
inc
inc
ret
mov
sub
jmp
sbb
push
mov
and
xor
add
flds
adc
mov
test
xorb
adc
ds
cmpb
pusha
push
push
scas
fiaddl
scas
xchg
rcr
or
mov
daa
aaa
leave
add
arpl
pop
jmp
xor
or
xor
mov
jmp
movzwl
push
jae
jg
ss
push
lds
xor
mov
jbe
hlt
jbe
inc
add
loopne
lds
jb
jns
jmp
push
mov
inc
or
bound
movsb
sub
loopne
sahf
xor
loop
cmp
daa
sub
lret
int
add
shrl
inc
leave
inc
mov
nop
mov
in
fcompl
and
and
add
xorb
ret
mov
ret
shl
fisubrl
adc
push
push
mov
add
jnp
ret
imul
dec
stc
cs
add
and
pop
pushf
or
ficoml
push
add
ja
js
xor
dec
sub
enter
mov
inc
push
mov
sub
scas
and
cwtl
sub
and
and
mov
mov
add
fldl2t
dec
mov
xchg
inc
pop
aam
pop
add
jg
add
jae
adc
jl
das
adc
xor
mov
mov
scas
fisubrl
adc
dec
xchg
aas
mov
pop
add
arpl
cmp
push
mov
cmc
pop
pop
std
sub
xchg
sub
movsb
sbb
jg
jmp
sub
jmp
shlb
in
pop
cld
xlat
loop
push
push
test
subl
dec
push
mov
popa
push
pop
call
and
idivl
subl
call
add
push
andl
and
cmpsl
out
push
movsb
out
mov
mov
cli
mov
icebp
xchg
neg
pop
jle
inc
push
pop
sbb
xchg
jge
inc
lcall
mov
inc
mov
mov
pop
int3
outsb
cmp
push
stc
mov
xchg
sbb
mov
mov
pop
push
and
dec
jle
cmp
ljmp
jmp
cltd
iret
lds
mov
lods
bound
inc
ret
std
icebp
fs
jge
dec
in
inc
bound
fcompl
mov
dec
sub
mov
or
cmp
sub
jbe
orb
arpl
add
jmp
sub
movsl
sub
jecxz
push
and
in
fists
loop
mov
ret
adc
push
loopne
jecxz
and
push
pop
lods
imul
ss
adc
pop
xlat
sahf
adcb
or
stc
hlt
in
es
pop
pop
pop
xor
cmp
jns
mov
jle
xor
pop
pop
mov
inc
iret
arpl
pop
icebp
jno
and
test
outsb
add
imul
add
inc
jmp
push
and
test
xchg
clc
stos
push
cmc
in
push
or
out
out
push
inc
andb
xor
cmpsb
cmp
cmc
leave
mov
dec
dec
in
jle
rorb
out
das
mov
iret
fcoms
das
int3
xchg
cmp
pop
ds
iret
ret
fs
add
cmp
mov
notb
sub
scas
leave
add
lahf
jae
and
aas
and
sbb
add
call
lcall
and
sbb
pop
negl
ret
pop
fsub
dec
sub
mov
out
add
jno
push
mov
add
mov
xor
int3
fnstsw
jge
lcall
in
cs
lock
pop
dec
xor
nop
xor
sbb
pop
aaa
sbb
dec
dec
add
scas
cli
stos
pop
mov
push
fcoms
sub
test
push
rorb
xchg
jle
add
fucomip
dec
addr16
xor
mov
mov
dec
xchg
imulb
pop
xor
xor
push
dec
shll
push
inc
or
mov
inc
push
sbb
sbb
ja
test
repnz
mov
ja
mov
cmp
incb
bound
clc
or
push
pop
out
stos
pop
add
sub
sub
or
dec
push
enter
xchg
jae
or
in
mov
loope
cmp
jns
push
add
pop
shll
insl
rol
mov
and
add
xor
push
mov
adc
sub
imul
ret
inc
mov
flds
and
xchg
cld
sub
data16
dec
ljmp
and
loop
mov
and
add
add
insb
and
addb
shlb
sub
pop
add
mov
inc
mov
adc
dec
or
or
les
in
repz
mulb
out
icebp
decb
xchg
test
movsl
cltd
pushf
loope
leave
int3
jnp
mov
add
inc
js
push
inc
cmp
addb
dec
imul
mov
or
pop
add
ficoms
jb
mov
aam
cmc
pushf
popf
stc
in
sub
push
nop
call
xor
bound
cmp
and
js
xchg
ret
pusha
aad
and
pop
mov
adc
jp
dec
pop
mov
add
aad
in
dec
data16
mov
mov
xchg
test
test
ret
std
out
xor
js
jb
xor
sbb
add
pop
in
insb
inc
or
cmp
in
lahf
inc
xchg
fisttpll
jmp
sbb
mov
jmp
sub
xchg
sti
lret
push
sub
cmpsl
jg
out
lock
lret
ss
shl
push
pusha
mov
fwait
xor
sahf
jmp
mov
shl
mulb
or
repnz
ficoml
imul
shlb
push
sub
add
cli
out
lock
popf
orl
repnz
sbbl
mov
and
loopne
jbe
sbb
xchg
sbb
ret
add
les
lock
das
in
repnz
sub
and
or
and
mov
mov
mov
jmp
add
lock
mov
dec
stc
loope
out
jp
xchg
movsl
jmp
inc
test
xchg
push
fcompl
sti
inc
push
pop
adc
add
lahf
mov
pop
ja
mov
pop
pop
lods
daa
aam
in
decb
outsb
repnz
jnp
in
movsb
dec
or
sub
add
add
dec
gs
das
mov
loope
fimuls
arpl
xchg
cmp
or
xchg
inc
and
data16
sub
pop
lds
lock
les
inc
inc
push
movsb
outsb
add
aas
pop
cmp
push
in
stos
add
mov
push
test
add
push
mov
lock
and
inc
push
xor
xor
fs
cmp
inc
inc
push
xor
cwtl
or
jecxz
or
stos
inc
inc
xlat
fwait
sbb
dec
std
lds
push
pushf
adc
popf
mov
inc
cwtl
and
adc
test
mov
add
dec
fiaddl
push
je
cmpsb
inc
dec
fsub
jae
mov
out
or
sbb
call
lcall
jo
adc
adc
inc
jp
fmuls
out
push
flds
and
adc
in
pop
ret
scas
shl
pop
mov
add
and
lahf
dec
pop
outsb
pop
bound
rcl
jns
xchg
movb
repnz
and
test
jecxz
add
insl
jge
push
lsl
mov
jns
mov
inc
cmp
addb
jns
mov
enter
js
add
cmp
test
iret
icebp
xor
and
inc
aam
lock
in
lea
loopne
addr16
aaa
faddl
imul
push
cs
loopne
out
insl
sub
add
mov
and
inc
add
das
cmp
mov
inc
jmp
add
fsubrl
inc
adc
cltd
add
test
cmp
int
sbb
adc
test
adc
mov
adc
cs
imull
dec
ret
push
push
jo
sub
mov
and
push
jno
mov
adc
nop
xchg
sarb
js
ret
mov
or
je
jo
outsl
push
or
xor
xchg
aad
xor
push
push
bound
ja
in
dec
fbld
jns
add
dec
imul
jmp
data16
lds
sub
mov
or
leave
loope
sbb
push
add
out
push
lods
add
shl
decb
call
sahf
dec
add
shll
es
xor
add
or
mov
subb
pop
int
push
imull
mov
ja
mov
int3
mov
pop
sahf
loopne
dec
xor
jecxz
dec
sub
imul
xchg
dec
xchg
mov
dec
cli
lods
xor
loope
add
or
inc
in
push
mov
lods
push
fidivrl
add
scas
imul
iret
pop
clc
es
adc
adc
ficoml
cmc
adc
test
fbstp
xchg
lret
push
rorl
sti
icebp
pop
sub
lahf
in
mov
jecxz
cmp
popa
loop
nop
in
inc
add
xchg
add
lods
add
xchg
jl
pop
gs
mov
and
fsubr
dec
mov
xchg
enter
xorl
mov
add
sbb
pop
imul
aas
loopne
push
dec
push
push
rorb
add
xor
and
add
addr16
pop
fcom
imul
and
rcrb
sub
addb
xchg
lret
fistpll
push
imul
es
insl
add
fisttpl
jp
iret
nop
sbbb
fs
into
pushf
mov
subb
stos
mov
cmp
bound
and
or
or
insb
rcr
dec
inc
movsb
add
into
idiv
sub
push
iret
stc
sbb
jge
inc
or
xor
inc
add
add
mov
push
pop
lea
add
mov
add
addr16
jnp
xchg
jge
add
stos
pop
loope
ja
nop
add
pop
ljmp
in
jo
cmpsb
adc
and
xchg
cmp
rcrl
sub
mulb
add
add
add
push
pusha
jb
dec
jecxz
sub
sti
lods
adc
inc
frstpm(287
cs
mov
adc
inc
loopne
sub
mov
cmpl
or
ret
fmull
mov
inc
gs
ror
xorb
mov
imul
xor
adc
mov
pop
add
or
add
xor
jg
add
testb
imul
xlat
add
ss
sti
add
lock
jns
mov
mov
pop
inc
jb
ss
add
inc
pop
notl
jae
mov
enter
xchg
adcb
mov
repz
sbb
std
add
lock
or
lea
dec
test
in
and
pusha
pop
std
inc
mov
pop
or
inc
xchg
ficomps
call
data16
mov
divb
add
mov
sub
mov
je
pushf
mov
cmp
mov
addr16
add
push
xor
sub
sbb
stc
dec
fistl
loop
out
fsubl
testl
addb
sbb
mov
mov
test
pop
adc
mov
and
add
sub
call
cmp
add
aam
jnp
lahf
stc
iret
aas
push
rorl
andl
mov
mov
mov
mov
gs
xor
cmp
fiaddl
pop
inc
rcll
jbe
fsub
ror
mov
addl
fisttpll
cmp
and
pop
fidivs
inc
add
push
or
mov
in
fstpl
enterw
cmpsb
jnp
add
adcb
pop
dec
mov
es
sub
lods
enter
jp
and
dec
dec
add
test
xor
xchg
cmpb
js
addr16
or
mov
ja
dec
jl
leave
andl
arpl
leave
rcl
cwtl
adc
insl
pshufw
xlat
movsl
outsl
and
push
xchg
push
fmull
leave
orb
lea
xor
mov
test
rorb
shlb
sbb
push
inc
jb
add
mov
sti
mov
icebp
jo
lret
nop
add
outsl
pop
in
test
scas
inc
out
out
sldt
stos
xchg
dec
pop
je
add
out
rorb
popl
je
sbb
mov
andb
xchg
mov
lds
add
popa
mov
pushf
xor
pop
addr16
inc
add
jl
push
mov
mov
gs
mov
pop
lret
cmc
push
mov
bound
push
call
sub
imul
mov
scas
lods
insb
ja
cltd
js
cli
arpl
loop
push
add
in
xchg
ds
cmp
xor
fstp
out
mov
or
rcrl
add
hlt
bound
mov
xor
outsb
lret
outsb
add
mov
jnp
inc
stos
jo
mov
cltd
ret
je
sahf
int3
jns
lret
adc
and
xchg
les
daa
popf
iret
pushf
push
out
lods
sbb
sti
xor
insb
mov
or
add
cld
add
pop
add
adc
or
add
push
mov
sbb
popl
addl
and
shr
or
fldl
mov
mov
add
xchg
mov
pop
add
jmp
loopne
and
pop
and
out
mov
add
push
mov
xchg
jo
popa
mov
or
add
dec
jge
add
or
call
sti
xchg
fisttpll
push
call
pop
adc
cmp
push
jle
xor
add
pop
jne
jmp
mov
test
aas
xor
movswl
push
mov
xor
adc
test
and
add
fnstsw
push
jle
add
sarl
scas
imul
addl
jp
and
jmp
mov
xlat
inc
and
xchg
sbb
push
sbb
add
or
mov
push
and
sub
in
mov
clc
dec
or
cmp
jne
fdivrs
or
push
dec
pop
mov
dec
int
hlt
xor
loopne
call
fisubl
cmp
lcall
and
sbb
mov
sub
xlat
jae
rolb
pusha
enter
frstor
and
add
mov
adc
dec
call
jmp
lock
push
mov
stc
nop
das
test
sti
out
loopne
xor
push
je
dec
int
js
sbb
lret
sbbl
pop
jo
int3
shl
jnp
out
add
dec
xor
cmp
icebp
xor
subb
ret
mov
repz
imull
mov
test
test
lahf
mov
sarb
mov
push
out
leave
or
mov
lods
pop
shlb
mov
xchg
cmpb
popf
filds
in
out
outsb
push
ljmp
inc
add
inc
pop
repz
les
jmp
jmp
pop
pop
push
inc
orl
mov
cmp
ss
pushf
stc
cltd
jg
mov
iret
test
stos
lods
add
test
mov
push
bound
sub
fisttps
push
aam
fadd
nop
add
pop
and
or
sarl
add
stos
cmp
cmp
in
add
outsl
xor
add
mov
lea
fdivr
mov
mov
lcall
mov
dec
nop
lods
push
xlat
mov
cmp
add
out
xchg
mov
rcr
dec
sahf
mov
push
je
add
xchg
lahf
roll
aad
ret
mov
rorl
mov
mov
dec
popf
or
pop
cmp
js
js
push
mov
mov
dec
call
testb
jmp
cmp
outsb
ljmp
shl
mov
or
aas
or
cwtl
test
add
add
pop
xor
add
and
add
shl
xchg
ljmp
add
aad
inc
add
pop
and
or
sub
outsb
sub
adc
nop
push
sub
rol
or
pop
or
and
xorb
jo
sub
pop
pushf
icebp
faddl
jns
js
sub
sbb
cwtl
inc
mov
js
mov
mov
push
cld
cmp
jle
adc
push
call
or
lods
jp
addr16
pusha
sub
pop
aaa
orl
or
outsb
stos
outsl
sbb
add
push
jmp
pop
roll
rolb
lock
enter
jb
add
and
inc
repz
orl
ret
adc
mov
cmc
je
xor
pop
inc
inc
mov
test
and
mov
sub
mov
sub
adc
lock
fldlg2
add
addr16
cmp
faddl
fwait
sbb
rcll
dec
mov
mov
pop
dec
xor
ret
and
or
pop
mov
outsl
xor
sub
mov
sub
mov
push
jo
popa
inc
xor
pushf
inc
loopne
jge
dec
or
sbb
addb
push
push
or
test
cmp
pushf
xor
popf
hlt
and
inc
push
add
aad
and
and
xchg
sub
inc
orb
nop
pusha
adc
aas
or
imull
jge
test
in
test
call
pop
push
adc
cmc
adc
lret
stos
mov
or
push
and
mov
and
push
cmpsl
jmp
sbb
stos
push
arpl
mov
jns
dec
fcoms
leave
ss
out
dec
pop
addr16
pop
rorb
add
aam
inc
xchg
inc
mov
js
or
fwait
mov
mov
sub
inc
cmp
sbb
mov
mov
test
testb
push
test
cmpsb
cmp
mov
sub
cmp
pop
sbb
xor
pop
inc
mov
lock
into
or
sbb
insb
les
not
push
xchg
movsl
pop
sarb
pop
cmp
inc
push
sarl
or
inc
mov
adc
sahf
xor
xor
mov
inc
shll
movsl
filds
repnz
xchg
mov
rolb
sbb
mov
mov
rorb
mul
sbbl
mov
ret
xor
push
cwtl
mov
not
add
movsl
jmp
mov
mov
sbb
sub
hlt
pop
cli
sub
cltd
and
add
roll
inc
icebp
test
add
addl
hlt
add
les
pop
outsl
insl
jp
out
fimull
pop
repnz
add
loop
stos
jo
add
mov
lahf
enter
dec
mov
cld
add
adc
dec
add
out
fimull
push
faddl
adc
and
or
insl
push
inc
ljmp
jp
out
mov
andl
sub
inc
popf
and
xlat
xor
ret
add
repnz
mov
or
test
jge
cmpsl
cwtl
inc
rclb
inc
xchg
add
pop
call
cmp
adc
clc
push
test
insb
or
add
loopne
sub
cld
je
mov
mov
sbb
add
dec
push
jmp
pop
xor
iret
xor
dec
pop
lahf
dec
lods
add
mov
sub
mov
cmp
outsl
cmp
dec
movsb
lods
inc
add
mov
ss
inc
loop
sbb
inc
fwait
outsl
push
push
test
sub
test
jle
pusha
out
inc
and
or
push
push
or
pushf
sbb
test
mov
inc
bound
cmp
hlt
test
inc
adc
or
and
push
inc
pop
out
xor
repz
movsb
sbb
mov
xor
cmp
movsb
popa
mov
inc
lahf
mov
mov
xchg
xor
push
pop
mov
xor
and
adc
movsb
cmpsb
adc
push
cld
dec
or
hlt
or
shll
cmp
inc
ret
mov
xor
dec
sbb
shrb
dec
jo
aam
pop
lcall
stos
adc
sbb
cmp
xlat
adc
fcomps
adc
aaa
push
dec
gs
xor
mov
adc
add
xor
sub
push
lret
xor
xor
xor
mov
sub
cltd
add
outsb
fiadds
shlb
pop
adc
lds
loop
out
int
cmpl
outsb
add
inc
lods
cmp
sub
add
push
repz
repnz
sub
sbb
shl
call
mov
cltd
xor
xchg
or
cmp
push
mov
pop
loopne
sbb
adcl
cmp
jns
add
fnsave
imul
cmp
stos
xor
add
push
pop
call
insb
sub
cmp
add
mov
pop
inc
push
ja
jmp
and
in
adc
mov
lahf
xor
mov
push
gs
cmpsb
add
mov
loopne
xor
in
add
add
add
loopne
nop
push
add
cmpsl
xor
mov
sbb
adc
pusha
int
dec
in
aas
iret
dec
xchg
pusha
sbb
push
jo
dec
jp
pop
in
dec
add
ss
mov
pop
shlb
sbbl
js
adc
jb
loop
xor
lds
add
push
mov
adc
adc
add
cltd
xor
sbb
outsb
mov
adc
jle
inc
lahf
add
pusha
ss
pop
pop
loope
xor
ret
dec
aad
jle
sbb
pop
clc
or
iret
sbb
fcomi
pop
sahf
add
adc
jl
mov
lea
stos
adcb
clc
dec
cmpl
inc
jae
clc
push
mov
pushf
xor
push
mov
aam
push
jne
lahf
inc
aas
addr16
js
roll
mov
aam
test
add
jle
fxch
nop
or
mov
lock
add
xor
test
in
mov
dec
xor
dec
sub
sub
fs
cwtl
adc
scas
add
push
loope
mov
aas
mov
int3
push
xor
push
in
xor
out
fs
push
cmpsl
add
mov
and
add
xchg
pop
xchg
sbb
test
shl
mov
xor
test
in
loope
popa
aas
das
ss
or
loop
sbb
push
add
in
xchg
clc
push
repz
popa
inc
xor
and
and
into
xor
and
roll
mov
enter
les
jo
and
mov
pushf
mov
or
cmpsb
mov
mov
push
aas
xor
mov
and
or
mov
adc
and
dec
xchg
pushl
or
or
dec
or
add
sbb
add
xor
inc
mov
mov
hlt
add
sub
push
mov
sahf
in
inc
icebp
js
xchg
add
sbb
movb
add
push
mov
jle
inc
jbe
aad
or
jp
mov
cmp
clc
inc
jecxz
add
lods
imul
add
stos
leave
lock
mov
icebp
clc
cmp
cmp
imul
subl
or
stos
lods
add
test
int
sti
fistps
shlb
and
lods
sbb
test
xchg
mov
pop
lret
pusha
in
fimuls
loope
add
xchg
rorb
mov
cmp
aam
loopne
xor
ret
inc
ficoml
xor
sbb
cmp
loopne
pop
inc
cmp
stos
gs
femms
mov
pop
cmp
xchg
push
add
movsb
pop
inc
cmova
jl
jae
sbb
addr16
pop
pushf
aam
data16
shlb
fs
mov
lods
sub
pcmpgtd
lahf
adcl
xchg
js
cmpsb
xor
cwtl
stos
xor
inc
movsb
sbb
push
cmpsl
xor
add
in
pusha
xchg
ss
stos
das
xor
movsb
pop
add
inc
pop
mov
mov
call
push
mov
lods
xor
inc
les
xchg
sbb
dec
mov
add
imul
cmp
adc
inc
xchg
pop
adc
xor
push
add
cmpsb
pop
dec
in
cmp
mov
cltd
pushf
push
push
xchg
inc
cwtl
push
pop
inc
cmp
dec
nop
loopne
push
xor
imulb
stos
aaa
xchg
clc
xchg
stc
xor
shrl
sarl
hlt
pop
pcmpgtb
dec
adc
ja
iret
add
xchg
xor
and
pop
lahf
sub
mov
pop
nop
lahf
inc
add
inc
sbb
bound
loopne
jbe
loope
data16
pop
cwtl
push
adcb
push
jmp
pop
call
pop
add
ja
stos
rcrb
or
mov
push
mov
scas
xor
lea
cmp
incb
stos
pop
dec
jmp
mov
xor
andb
push
out
shll
mov
mov
andnps
in
sbb
ret
pop
rcrl
icebp
xchg
xor
shr
cmc
sub
fistpll
rorb
adc
lock
pop
inc
jl
and
push
mov
dec
pop
sbb
xor
mov
add
lods
and
stc
test
jl
jb
imul
fcomps
inc
sub
inc
les
mov
into
in
mov
xor
shlb
xor
adc
pop
or
adc
inc
sbb
cmpsb
lds
mov
in
and
push
les
imul
mov
xor
inc
fildll
in
fs
xchg
xor
xor
sub
cmp
add
push
popa
xor
mov
and
stos
xor
add
ret
dec
sbb
push
pop
pop
jne
or
sar
icebp
dec
add
lock
xchg
add
je
cmp
pinsrw
push
call
pop
aas
mov
out
fs
jge
clc
adc
adc
xor
pop
mov
cmp
cmp
in
sahf
aam
cmp
addr16
inc
dec
out
xor
mov
cmpsl
pop
test
xor
push
pusha
sahf
and
cmpsl
addr16
lods
rclb
pop
enter
out
xor
dec
bound
xchg
pop
push
or
movsb
pop
xchg
das
gs
mov
call
sarl
stos
inc
lock
inc
xor
inc
push
pop
movsl
xor
push
mov
andb
imul
mov
je
loopne
loope
jo
xchg
movsl
adc
xchg
lock
jbe
call
and
and
mov
mov
inc
rolb
mov
pop
push
loopne
ja
pop
jb
movsl
les
adc
dec
jno
and
enter
mov
sbb
movsl
xchg
pop
add
stos
xor
lock
and
jnp
test
mov
lock
mov
push
in
jne
fsubl
xchg
jmp
pop
dec
fdiv
dec
push
pop
pusha
dec
pop
scas
pop
push
xor
cmpsb
xor
ljmp
fs
lock
inc
adc
xor
negb
cmpsl
call
jae
mov
aad
pushf
test
cwtl
fcoml
inc
popf
gs
sar
mov
call
add
mov
or
and
xchg
filds
mov
shrl
mov
add
cli
push
cmp
subb
outsb
ljmp
daa
rcrb
jbe
dec
sti
add
mov
xchg
out
inc
in
jp
pusha
addr16
add
push
push
add
xor
or
aam
dec
adc
loope
and
push
sbb
mov
jno
jns
push
aad
mov
loop
and
sti
dec
inc
std
add
adc
js
sti
xchg
pop
push
mov
ret
inc
pushl
push
and
mov
push
adc
aas
add
and
rorl
jno
in
sub
pusha
repz
out
adc
add
jnp
and
push
mov
aam
dec
addr16
fmuls
fcomp
xor
sbb
subl
int3
push
pop
loope
or
dec
mov
jp
shl
sbb
fxtract
add
test
pop
inc
add
pop
lret
xor
add
add
repnz
addb
xor
xchg
mov
les
inc
or
in
xor
mov
and
pop
les
pop
add
fnsave
subb
pop
jo
cmpsb
add
jmp
cmp
jae
adc
call
mov
pop
les
and
pop
cmp
jge
or
out
cltd
addb
std
inc
mov
jbe
inc
lret
clc
popf
mov
inc
add
sbb
fistpll
mov
sbb
lods
das
mov
pop
fwait
jg
cmp
xlat
dec
addb
xor
addb
cwtl
mov
push
fwait
pusha
es
pop
dec
stc
lods
add
push
mov
sub
fisubs
jns
popl
xor
cmp
cmp
mov
nop
lods
or
leave
xchg
add
fcoms
adcb
jg
out
add
out
imul
test
push
lret
adc
xor
addb
ss
divb
outsb
sub
sbb
and
add
mov
mov
jl
and
xor
adc
fwait
arpl
pop
lock
fldl
int3
jnp
push
cmp
loopne
sahf
out
mov
jno
stos
mov
mov
or
add
push
aad
xor
sub
jnp
add
pop
repnz
push
lcall
jno
mov
xor
and
mov
mov
add
lods
dec
xor
mov
leavew
adc
sub
sub
orb
sbb
xchg
add
shl
cld
inc
shl
add
lods
mov
jge
sub
add
push
rcrl
push
test
sbb
push
test
jae
sub
jno
stc
mov
out
lock
jbe
adc
aad
xchg
pop
dec
popa
pop
pusha
mov
push
inc
pushf
imul
cli
adc
cltd
fldt
mov
sbb
inc
pushf
xor
pop
xor
js
pop
lods
push
hlt
mov
dec
adc
cmp
out
sti
pop
inc
scas
and
shlb
add
sbb
xor
repz
add
mov
movsb
out
jne
pusha
push
mov
int
data16
in
xchg
inc
jne
ror
je
or
and
push
mov
aad
inc
pop
enter
or
xchg
int
inc
cmp
cwtl
xchg
insb
or
xor
adc
xchg
mov
lock
xchg
popa
fisttpll
push
pop
pop
dec
mov
mov
add
or
mov
pop
imul
add
addr16
xchg
or
and
sbb
pushf
jp
enter
sti
das
rorb
mov
cmp
orb
adc
das
in
and
ret
mov
and
jge
mov
sub
movzbl
movsb
and
inc
mov
jno
xor
push
pop
aam
andl
dec
cmp
or
dec
mov
mov
dec
andb
mov
add
outsw
xor
fdivrs
or
dec
inc
jbe
imul
inc
movsb
sub
lock
ret
inc
and
int
lods
jb
jns
adc
sbb
inc
out
jl
in
bound
add
or
xchg
js
andb
mov
xchg
stos
or
cltd
iret
mov
rorb
faddl
jnp
push
nop
jb
or
loop
and
insb
and
sbb
addl
adc
sti
ljmp
pop
out
cli
inc
pop
leave
out
aad
inc
push
add
pop
sub
push
aam
xchg
add
cmp
leave
test
and
mov
dec
xchg
mov
les
push
pop
fwait
lea
scas
mov
cmp
daa
jns
add
lods
mov
dec
pop
aam
sub
rorb
ret
mov
fdivrs
mov
sbb
fwait
shl
sub
cmpsl
repz
jno
mov
jmp
rorb
xchg
lods
and
jo
test
pusha
mov
lret
xor
sbb
mov
cmp
mov
xorb
shrb
mov
dec
jbe
and
in
dec
inc
xchg
add
mov
hlt
sarl
aad
enter
pushfw
add
cmpsb
in
dec
rcrb
xor
adc
xor
scas
add
pop
push
cmc
xchg
aam
push
adc
xchg
adc
lahf
or
fcmovu
adc
repz
xchg
out
xchg
je
mov
add
add
gs
sub
ret
pop
shrb
add
sbb
sub
xchg
test
repz
fisttpll
mov
jg
test
sahf
lock
push
ja
or
push
push
inc
mov
pusha
dec
dec
mov
aad
flds
push
fistpl
orb
clc
adc
xor
in
subl
mov
mov
subb
nop
xlat
cltd
ja
mov
iret
xor
or
push
and
mov
inc
les
fdivrs
cmp
and
mov
inc
ja
or
sbb
or
add
dec
xor
orb
lock
pop
inc
pop
into
xchg
fdivr
lock
stc
rorb
and
and
call
mov
lods
int3
add
hlt
pmaxub
icebp
call
jne
imul
mov
mov
and
movsl
fadd
or
stc
push
sbb
xor
jle
int3
xor
orb
pop
add
outsl
orb
movsb
add
and
test
adc
sbb
sbb
popa
inc
arpl
mov
clc
popf
out
xorb
lods
lock
mov
leave
jecxz
or
pushf
xorb
notb
adc
sti
testl
mov
jecxz
adc
pop
add
mov
mov
movsl
or
sarb
add
jo
sbb
sti
loopne
lods
sbb
rcll
sbbl
scas
movsb
dec
add
decl
pop
jecxz
mov
jg
mov
cwtl
mov
jno
imulb
orl
sahf
add
adc
inc
mov
cmp
jno
add
mov
gs
pusha
aad
add
daa
add
push
testl
jge
mov
in
inc
dec
mov
add
push
dec
add
cwtl
xchg
fldl
scas
adc
jmp
jg
stc
adc
sti
pop
fisttps
loop
clc
js
sbb
lea
pop
adc
test
mov
push
inc
xchg
cmp
sub
in
repz
aam
lret
test
dec
add
sub
add
out
daa
add
jge
or
adc
icebp
rclb
cmp
incl
xor
sub
dec
mov
mov
and
inc
xor
ret
cwtl
add
andl
pop
inc
daa
cld
mov
push
pop
insl
mov
mov
jne
sbb
add
lcall
enter
jnp
clc
inc
hlt
inc
ret
jp
mov
in
cmp
pop
add
or
in
dec
add
fadds
push
or
jb
shlb
add
es
pop
fcoml
sub
hlt
faddp
jo
int3
nop
enter
jb
and
pop
bound
mov
movsb
add
pop
pop
and
sub
mov
pop
cli
mov
mov
jecxz
dec
cmp
je
xchg
stos
adc
adc
daa
push
repz
xorl
scas
mov
cli
das
push
scas
dec
xor
mov
es
inc
mov
jb
pushf
sub
mov
add
sbb
jo
lahf
nop
les
jno
cmpl
pop
xor
ret
loope
ret
and
mov
enter
int
sub
lret
xor
or
sarb
fisttpll
imul
adc
and
inc
andb
mov
popa
pop
mov
push
push
imul
aad
inc
add
sub
or
test
add
enter
xchg
xor
leave
sbbb
sub
push
mov
cwtl
shlb
mov
push
dec
sahf
hlt
pushf
call
iret
aad
mov
add
and
mov
cwtl
pop
stos
push
jmp
inc
mov
jb
pop
data16
daa
cmp
sub
add
inc
jl
add
sbb
test
pop
jo
mov
mov
aad
adc
mov
push
push
rorl
cmp
in
lock
je
jge
adc
add
test
stos
ret
push
mov
and
movb
add
pop
pop
in
pop
fstpl
pop
inc
inc
add
xorb
cmp
xlat
xor
test
pop
adc
sub
mov
and
dec
addr16
cltd
sbb
std
push
lock
mov
in
faddl
mov
scas
adc
xor
add
cmp
aam
and
xchg
add
mov
outsl
nop
mov
es
xchg
mov
pop
sub
and
sbb
stc
xor
lret
adc
mov
test
loop
inc
scas
mov
pop
call
add
clc
dec
sbb
jmp
mov
cmp
idivl
popa
pop
cltd
mov
mov
or
repnz
inc
sub
mov
movsb
dec
call
mov
pushf
repnz
ficoms
test
xor
stos
cmp
stc
je
xchg
mov
mov
sub
lahf
cld
xor
ja
add
mov
cmp
xor
pop
int
dec
pushf
mov
loop
cmpb
imul
repz
add
cwtl
cld
adc
add
stc
mov
and
jns
fcomps
dec
mov
push
insb
xor
xchg
pusha
pop
inc
mov
jnp
and
out
jmp
mov
adc
nop
shll
sbb
loope
push
test
xchg
xor
les
js
aad
outsb
ficoms
and
adc
test
aas
popa
add
stc
mov
cwtl
mov
adc
inc
add
enter
xchg
subl
fdivrl
and
sahf
lahf
pop
lock
clc
incb
pop
sub
adcb
lret
push
cld
sbb
jmp
lahf
jns
push
lds
mov
pop
jnp
mov
sbb
mov
push
fs
inc
mov
outsl
jmp
out
mov
js
mov
mov
ret
hlt
js
and
cmc
testb
fcoms
add
es
sarb
nop
in
adc
fildl
inc
mov
add
ja
push
andb
in
roll
sbbb
mov
or
in
push
ljmp
repnz
jno
ds
dec
pop
dec
mov
xchg
shlb
mov
aad
or
rorb
loope
ret
inc
and
or
cwtl
fadds
xor
pop
fadds
inc
mov
add
ja
sub
in
inc
mov
lock
mov
pop
out
std
add
and
in
cltd
xor
xor
lret
scas
lcall
inc
and
fwait
adc
xor
dec
ljmp
in
fdivrs
adc
xchg
add
add
jg
das
sub
mov
cs
mov
jmp
je
xchg
push
or
pop
mov
sti
or
sarb
rcll
lret
cld
enter
fdivrs
dec
gs
dec
mov
mov
jp
and
push
dec
lret
xchg
mov
cltd
roll
mov
jmp
jnp
jae
and
out
fidivrl
out
in
add
lods
mov
int
jo
push
stc
cltd
sub
mov
paddq
add
add
xchg
pop
pusha
cmp
sbb
call
mov
mov
add
mov
push
cmpsl
and
fildll
add
test
les
ret
mov
aam
push
push
fdivrs
daa
lods
xchg
repz
in
mov
outsb
out
fs
and
add
pop
in
pop
adc
int3
int3
std
inc
rolb
in
bound
add
or
jg
dec
dec
adc
add
sub
adc
in
icebp
sti
out
lods
mov
in
adc
test
lret
rclb
cli
aad
add
push
inc
jno
imul
mov
and
js
xchg
mov
mov
rcrb
into
and
lods
add
sub
xchg
pusha
add
adc
push
lea
xor
in
mov
add
fistpl
xor
stc
gs
aad
add
pop
fprem
adc
or
cwtl
mov
leave
cwtl
stos
lret
and
out
and
mov
ja
js
rorb
addl
int
inc
and
sub
pop
adc
orb
addb
mov
mov
repz
or
lret
out
xchg
and
out
daa
add
pop
sbbb
mov
stos
je
repnz
scas
sti
add
mov
pusha
cmp
and
jno
fisubs
pop
out
pusha
fstl
mov
cmp
adc
add
sbbb
and
mov
xor
jo
iret
jecxz
dec
add
mov
push
xchg
cmp
mov
mov
jae
mov
jo
add
xchg
add
lahf
dec
pop
test
mov
cmp
setle
scas
and
cmp
imul
ds
mov
es
xor
mov
sub
sub
in
mov
inc
dec
inc
mov
je
and
or
push
mov
add
inc
or
in
xchg
dec
cs
sbb
xchg
add
sbb
jmp
std
or
mov
jns
lahf
inc
bound
push
seto
into
clc
and
daa
test
add
es
fs
lcall
cmpsb
mov
in
lahf
sbb
add
in
sub
xchg
int3
inc
pop
stos
cmp
mov
outsb
sub
mov
in
fisttpll
test
push
pushf
xchg
add
notl
stos
cmp
je
sub
mov
inc
enter
fstpt
adc
xor
mov
xor
iret
and
or
in
inc
pushf
js
sub
push
mov
cmc
or
lods
test
sub
popa
xchg
jb
les
xor
push
pop
aaa
test
inc
sub
mov
mov
outsl
push
pop
lahf
cmp
test
adc
or
or
imull
andl
out
outsl
add
sub
ja
or
addl
scas
adc
sub
pop
or
lahf
pop
les
imul
mov
mov
push
inc
xor
lods
and
or
scas
inc
orl
je
fucomi
push
mov
cmp
mov
insb
and
shr
add
rorl
dec
mov
mov
ret
pop
and
mov
jecxz
and
add
lods
or
mov
mov
fbld
ficomps
daa
sbb
jns
lahf
les
imul
imul
std
aaa
xchg
add
jp
inc
xlat
add
popa
aas
mov
add
and
xor
stc
mov
bound
adc
add
divl
adc
notl
add
mov
xchg
cs
ret
lahf
xor
pop
mov
nopl
inc
addb
nop
loope
out
push
js
mov
adc
fs
inc
mov
lahf
xor
lret
aas
push
mov
push
and
or
adc
pop
add
mov
rorl
movhps
inc
xor
loop
pushf
adc
rorb
nop
adc
aas
in
and
inc
xchg
jg
repz
sysenter
push
int
cwtl
push
push
add
clc
sti
mov
adc
mov
enter
insb
sub
sub
mov
dec
adc
in
or
push
sub
add
lods
inc
les
out
out
xchg
cmp
fadds
or
sub
inc
in
inc
jno
ret
stos
daa
xchg
push
or
test
or
pop
and
inc
jp
sub
xchg
push
pop
nop
ret
dec
or
jne
test
dec
add
mov
movsl
add
ss
jbe
mov
sbb
jns
and
jbe
jo
inc
pop
jns
xchg
dec
cmpsb
and
sbbb
jp
push
sub
rolb
xor
and
inc
cmpsl
shlb
icebp
push
xorl
xchg
xchg
fcoms
aaa
add
jp
outsb
pop
js
in
add
mov
pop
mov
repnz
fnstenv
add
mov
xor
push
add
xchg
xor
mov
or
jb
inc
cmp
cld
hlt
rolb
or
add
xorb
mov
add
ficoms
mov
leave
sub
mov
loopne
fmuls
int3
mov
sub
adc
jmp
nop
mov
push
sahf
mov
addr16
mov
call
hlt
mov
cmp
inc
and
push
push
adc
popl
adc
push
jo
jbe
push
jl
mov
dec
adc
mov
es
aam
or
xor
fdivrs
lahf
or
mov
mov
mov
loope
mov
sahf
mov
push
mov
fildl
adcb
inc
js
stos
push
add
inc
sbbb
xchg
push
or
ja
nop
insb
clc
mov
movsl
or
push
mov
add
popa
out
pop
pushf
push
hlt
nop
test
inc
outsl
lret
sub
mov
inc
les
mov
sti
add
pop
dec
es
add
aad
fwait
adc
add
lahf
test
lods
ja
sub
imul
xor
js
inc
aas
push
pop
push
les
sar
xacquire
cld
push
xor
inc
and
je
lahf
lcall
push
pop
pop
sub
mov
aas
push
add
mov
in
pusha
inc
and
inc
and
xchg
xchg
sbb
and
xchg
arpl
add
pushl
and
js
sbb
sarl
scas
add
ss
dec
mov
mov
mov
add
jmp
lock
add
adc
pop
xchg
dec
add
sbb
cmpsb
add
addl
testb
sub
addr16
adc
lret
out
mov
mov
lahf
or
shrd
outsb
xor
lock
dec
shlb
cmp
jmp
inc
int3
adc
mov
jl
mov
out
jne
xor
je
cmp
and
add
mov
les
inc
jae
inc
fcomps
or
sbb
mov
cmpsl
and
and
and
add
mov
test
notb
lret
mov
mov
in
and
lods
nop
enter
mov
sbbb
aaa
les
adc
mov
mov
cmp
add
jmp
imul
jmp
icebp
xchg
out
repz
hlt
adc
inc
and
into
leave
jb
xor
mov
mov
push
in
imul
int
xor
aaa
inc
addl
jl
stos
fwait
inc
xchg
stc
inc
mov
sbb
inc
sub
xor
stos
lea
or
add
test
add
aam
aaa
pusha
sbb
jl
fs
mov
fldenv
mov
cmp
loopne,pt
adc
imul
pusha
adc
add
cld
shll
cmpsb
sub
cltd
test
mov
adcb
leave
hlt
sete
cmp
sub
xor
mov
add
sub
and
mov
add
jbe
cwtl
pop
jb
and
xchg
add
jns
add
and
movsl
mov
mov
incl
fcomps
rolb
and
mov
pop
cltd
shrl
push
and
repz
in
test
ret
in
mov
mov
sub
mov
movntq
or
mov
pop
daa
add
rorl
xchg
add
xor
xor
mov
divl
adc
idiv
xor
sbb
and
dec
add
mov
leave
call
dec
les
lods
ss
fucompp
push
mov
mov
pusha
cmp
adc
stos
sub
adc
add
and
add
shll
scas
or
shrl
psubd
xchg
popa
jg
or
xlat
jno
xor
or
cmp
fwait
and
jmp
filds
pop
mov
fsubl
inc
or
or
mov
repz
or
ficoml
pop
enter
xchg
sbbl
push
add
xor
aas
cmp
or
fldenv
addr16
roll
lods
aam
or
hlt
mov
pop
cmp
and
cmp
movsl
inc
and
jo
add
adc
stos
lret
sbb
outsb
add
pop
mov
repz
loope
jo
daa
std
push
xchg
lods
pushf
inc
dec
add
flds
add
pop
pop
arpl
pusha
ret
jno
icebp
jno
std
add
fimuls
out
mov
xor
mov
add
or
loope
fstps
in
xlat
adc
pop
add
sub
fwait
cwtl
inc
add
push
push
loop
aaa
ss
mov
leave
mov
setge
sub
aam
addr16
sub
dec
jb
add
scas
sti
xlat
rcll
mov
add
repnz
add
hlt
addb
movsb
add
je
imul
rorb
mov
movsb
sub
jo
notl
add
ret
pusha
movsb
test
arpl
inc
dec
jp
add
dec
ret
mov
cwtl
jbe
sub
and
adc
and
or
in
inc
xorl
dec
jecxz
int3
or
movaps
xor
xorb
shl
pop
xorb
das
mov
add
push
sub
sbb
cwtl
imul
push
cmp
push
push
test
pop
jnp
or
movsl
arpl
xor
xor
push
cwtl
jno
sbb
das
xchg
or
xor
notl
xor
add
testl
sub
mov
jae
scas
mov
aad
xchg
or
es
jg
cmp
je
or
cltd
xchg
or
cmp
inc
jno
sbb
dec
int3
dec
inc
sub
loopne
push
sub
loopne
cs
pushf
std
add
sub
bound
mov
or
adc
lods
push
inc
push
xor
xor
sarl
jno
sbb
adc
mov
sbb
add
mov
ja
cmc
mov
lods
mov
adc
inc
leave
or
mov
sub
sub
aam
adc
mov
test
add
push
add
loopne
test
out
xchg
pop
sub
popf
xorl
iret
inc
stos
pusha
call
and
dec
inc
or
aam
repz
add
hlt
mov
mov
push
add
ret
and
lea
pop
rorb
jl
in
scas
dec
mov
jo
mov
jl
xor
sub
cmc
in
mov
add
xchg
add
xchg
lods
cmp
and
js
add
sub
inc
test
cld
daa
clc
repnz
push
sbb
cmp
mov
js
pop
sbb
inc
push
or
push
sbb
pop
lea
call
pop
push
pop
cmpl
push
pop
push
push
mov
adc
in
or
cmpb
push
push
call
sti
ret
xchg
mov
sub
ret
in
inc
adc
icebp
iret
and
js
rolb
xchg
insl
xchg
pop
cmp
sbb
add
push
mov
mov
mov
xor
daa
or
jbe
lea
test
mov
pop
rdtsc
mov
in
inc
adcl
pop
push
mov
push
enter
pop
mov
add
inc
mov
pop
insl
add
jmp
dec
push
mov
les
adc
push
and
adc
dec
push
iret
outsl
ret
movsb
mov
and
ret
nop
add
pushf
cmpw
clc
push
mov
add
add
in
add
push
and
into
mov
jno
xor
adc
xchg
add
out
add
mov
andl
repz
push
pop
ret
inc
mov
add
jne
repz
adc
and
adc
inc
jo
mov
insb
cwtl
lret
int3
push
add
add
inc
xchg
add
sar
std
or
sbb
lods
adc
cmc
sbb
inc
xchg
mov
mov
sbb
dec
enter
dec
pop
sub
inc
ja
jmp
pop
cwtl
adc
pop
ret
and
push
ret
sbb
fsubr
push
add
stc
push
or
cmpsb
shll
insb
ret
jmp
inc
aas
insb
adc
add
mov
inc
pop
gs
xchg
iret
jge
and
inc
lahf
mov
inc
xchg
aam
mov
inc
adc
push
sbb
gs
mov
add
fstps
dec
shll
jmp
or
push
adc
jo
orb
sub
lea
adc
sbb
icebp
mov
mulb
rcr
enter
push
mov
jns
mov
idivb
and
call
les
arpl
dec
dec
dec
enter
mov
mov
add
pop
sub
cmp
pop
popa
pop
mov
leave
add
stos
in
adc
push
sbb
lods
push
or
lret
add
sbb
mov
lea
or
push
movsb
sub
faddl
adc
jecxz
lcall
clc
add
dec
mov
nop
add
and
and
stc
mov
or
mov
mov
aas
rolb
push
pusha
mov
or
sub
push
push
cmp
pop
ret
inc
mov
and
ret
fidivs
push
fsts
pusha
jmp
movsb
loope
sbb
xchg
inc
testb
push
xor
in
or
and
jne
lret
sbb
cmp
xor
flds
fildl
inc
dec
je
cwtl
popf
push
sub
mov
mov
imul
mov
sub
testb
xchg
jnp
fs
outsb
pushf
cmp
pop
stos
in
mov
xor
inc
mov
jo
loopne
lea
push
xchg
int
push
mov
mov
and
and
sbb
and
add
mov
ds
cltd
sub
sbb
fcoms
inc
xchg
notb
or
mov
add
inc
rol
jecxz
test
mov
scas
xor
inc
push
mov
mov
sbb
ror
mov
sbb
cmc
sub
icebp
adcb
stos
lea
xor
addr16
cmpsb
call
push
test
jle
sarb
mov
jg
inc
sbb
imul
push
jbe
insl
add
push
mov
dec
cwtl
stos
lcall
push
out
lods
cli
or
push
dec
enter
stos
inc
jge
push
mov
sarb
fildl
xor
mov
push
jge
stos
dec
jmp
cli
cmp
adc
add
and
or
pop
es
or
sub
xor
out
or
fnstsw
mov
sbb
mov
push
mov
jb
sbb
mov
mov
dec
roll
cltd
jb
sbb
ret
sub
push
add
scas
cltd
jae
mov
sbb
movl
mov
daa
jmp
mov
cmp
adcl
pop
pusha
shr
lahf
jae
xchg
jns
adc
aas
mov
sahf
std
add
pop
add
mov
cmp
inc
mov
push
cmp
pop
outsl
xchg
pop
repnz
test
pop
fimull
add
push
add
shlb
cmp
rcll
ss
faddl
ja
sbb
pop
mov
clc
or
add
jo
es
popa
test
mov
mov
decl
imul
inc
pop
push
cmc
and
cmpsb
sub
ljmp
das
js
dec
dec
or
nop
jmp
fistpll
fisttpl
mov
add
rorl
or
in
orl
inc
icebp
adc
js
sidtl
lea
addr16
add
and
pushf
test
js
add
push
sbb
iret
fstl
or
inc
adc
sbb
mov
sti
mov
inc
sbb
mov
leave
or
rclb
xor
jecxz
imul
fsubrl
inc
push
rolb
ret
daa
push
data16
add
lods
adc
roll
jns
add
push
repnz
clc
cmp
cwtl
dec
inc
mov
mov
lahf
and
xorb
mov
add
sbb
push
xchg
fnstenv
push
mov
pop
jecxz
xlat
sbb
pusha
mov
push
fcomi
ret
dec
add
xor
sbb
mov
enter
or
pop
in
sub
push
jle
push
lods
or
test
notl
ficoms
inc
sub
lods
sbb
push
bound
lock
push
dec
push
loopne
add
push
sbb
push
push
sub
test
jne
jne
inc
push
mov
enter
dec
push
andb
mov
add
mov
push
push
or
xor
je
sbb
incb
sub
insl
add
xchg
mull
xchg
add
cs
xor
rolb
movsb
gs
mull
adc
in
jg
dec
popf
add
or
lcall
pop
fs
into
test
push
xchg
push
addb
or
sub
push
clc
call
and
cltd
dec
lods
cmpl
jo
cld
pop
mov
sarl
push
cwtl
inc
sbb
mov
and
sbb
imul
add
cld
mov
test
imul
add
xor
mov
xor
test
cmpsb
lret
adc
inc
movsb
mov
adc
rcrb
pop
add
aas
sarb
add
add
jno
sbb
add
xchg
push
lcall
lret
push
push
add
test
jno
ror
add
pusha
sub
mov
cli
lea
dec
shll
add
mov
sbb
andl
inc
mov
mov
and
aas
adc
sbbl
dec
cmp
mov
adc
jne
sbb
mov
push
jne
inc
add
xchg
push
xor
pop
jle
icebp
xor
sub
lock
dec
add
mov
xchg
hlt
ljmp
sti
push
jne
or
shrl
and
xorb
out
xchg
or
adc
outsb
insb
add
push
sbbb
imulb
call
lea
js
call
mov
mov
icebp
and
inc
push
movl
mov
inc
js
add
je
outsl
outsb
and
data16
jb
insl
popa
or
inc
cltd
gs
jae
sub
arpl
sbb
clc
ljmp
icebp
ja
jb
adc
lahf
insb
pop
jo
mov
xor
sbb
sbb
fsubs
jae
out
push
mov
jns
jne
or
add
add
sub
pusha
jae
inc
push
push
dec
jne
pushl
inc
sub
bound
jns
or
fisubrl
sub
addl
mov
push
inc
call
dec
setno
push
push
cmp
jg
mov
cmp
nop
repz
mov
cmp
lret
mov
sbb
sub
sub
add
push
mov
stos
movsl
scas
test
enter
inc
sbb
imul
adc
push
mov
inc
cmpsb
add
and
lods
sbb
and
and
sbb
adc
and
test
ret
add
mov
lds
xor
xchg
mov
imul
add
clc
je
jmp
sub
shrl
ret
aam
pusha
dec
fstl
and
push
inc
mov
loope
dec
sbb
push
test
enter
cmp
test
enter
push
fsubl
push
nop
or
enter
xor
sbb
or
leave
sbb
dec
pop
sub
xor
aad
and
dec
inc
je
sbb
ffree
loope
sub
shr
mov
push
jmp
pusha
xchg
sbb
and
xor
popa
ret
out
dec
xor
or
sub
dec
cwtl
and
jmp
mov
xor
mov
xchg
nop
imul
les
add
mov
cmp
xchg
fstl
and
and
push
add
enter
shlb
pop
sub
push
stc
pop
or
sbb
fstpt
and
and
add
enter
push
out
cmc
adc
loope
add
jnp
dec
pop
mov
dec
hlt
mov
cld
lds
add
push
or
inc
inc
loopne
mov
and
mov
cmp
jbe
movl
rcrl
push
jecxz
sub
and
mov
and
ds
xor
cmp
add
lods
mov
add
jb
push
ror
stos
or
inc
inc
add
or
in
and
push
mov
push
int3
jp
adc
shr
push
stos
cmpb
lea
push
push
push
jb
dec
fisttpl
add
roll
aaa
fidivs
xchg
call
cmp
sub
cmpsl
xchg
std
lods
xchg
ljmp
jb
sbb
xchg
cmp
aam
mov
sub
xchg
pusha
orl
sub
mov
xor
push
mov
add
mov
stos
inc
sub
lds
stc
and
sub
add
jb
dec
jp
mov
test
jb
add
enter
jb
ljmp
dec
sub
adc
sub
or
sub
sub
add
rol
nop
sbb
addr16
pop
push
pop
aaa
add
pop
xor
mov
mov
shll
push
pop
sub
add
loope
jns
sbb
add
int
mov
test
nop
ja
add
jns
enter
mov
jb
adc
xor
pusha
out
adc
mov
inc
xor
out
aam
jg
sub
or
fiadds
jmp
pop
sub
push
call
add
fstps
addl
sbb
and
dec
stos
vmwrite
data16
jle
ror
pop
push
adc
popa
pop
add
add
nop
pop
cs
cmpsl
jo
jne
push
test
inc
dec
inc
cmc
mov
data16
mov
xor
add
fdivl
and
and
and
add
jmp
data16
in
push
mov
add
mov
mov
pop
jg
aas
popf
arpl
out
pop
repnz
jbe
lldt
xchg
setbe
cmp
jecxz
rcrb
inc
add
dec
or
aaa
dec
jb
addb
cmp
mov
xor
jns
pop
jg
sbb
jl
add
in
add
roll
cmp
popf
mov
in
lods
int3
inc
addl
sub
daa
xchg
push
xor
push
push
sbb
xor
sbb
adc
xchg
les
add
adc
call
mov
inc
fisubl
xor
mov
dec
pop
jp
adc
movsb
not
fbstp
inc
les
popf
loope
inc
push
hlt
fdivs
sbb
fwait
add
ja
sub
push
into
mov
cmp
lret
ret
push
ficoml
dec
push
sbb
jle
flds
stos
jne
mov
add
jbe
lds
ja
push
adc
cmp
jg
jns
dec
jo
mov
lds
aad
dec
add
sbb
test
scas
mov
sbb
inc
lret
popf
add
add
mov
sti
mov
sbb
lahf
int3
sub
or
inc
mov
add
jb
call
in
jo
cld
fbld
inc
dec
push
divl
adc
mov
std
pop
add
or
pop
femms
cwtl
mov
add
add
fldcw
xchg
lea
sub
inc
jmp
inc
sbb
cmp
push
popf
test
pop
mov
mov
inc
add
pushf
stc
push
pushf
xchg
aam
xor
xor
xchg
add
cmp
lea
push
adc
pusha
adc
test
adc
mov
pop
mov
mov
add
xor
mov
movsl
dec
dec
dec
xchg
es
add
rolb
cwtl
jecxz
mov
inc
mov
inc
fdivl
adc
push
jno
push
dec
mov
dec
adc
add
pop
pusha
mov
cmp
or
sbb
jno
cld
jle
sub
mov
or
rorl
inc
xchg
out
inc
pop
stos
sbb
addl
icebp
or
jmp
add
addr16
inc
jmp
lock
or
xlat
add
fbstp
push
add
jno
popl
push
nop
add
mov
mov
jmp
pop
jns
mov
call
clc
fs
add
les
loop
repnz
or
ret
sbb
addb
or
push
movsb
xlat
call
test
add
push
push
out
fwait
rorb
test
pop
pop
mov
push
push
cld
pop
pop
and
dec
lret
test
or
xchg
fbstp
dec
nop
xor
xlat
pushf
add
inc
rcr
mov
sbb
lock
cmp
arpl
subb
adc
mov
push
inc
sub
cmp
inc
jge
add
sub
sub
jmp
add
sbb
mov
xchg
ret
add
imul
packsswb
int3
in
mov
xchg
add
xchg
ds
shll
xchg
out
mov
lret
xchg
cmp
and
pop
nop
xchg
or
notl
pop
or
repnz
pop
and
pop
int3
xor
add
or
lock
mov
insb
add
test
cmpsb
add
mov
mov
dec
jb
sub
fiadds
xchg
add
inc
pop
push
sarl
add
out
aaa
clc
dec
movsb
add
pop
gs
mov
add
mov
add
mov
and
add
int3
rcrb
fdivrs
stos
or
ds
xchg
pop
xor
dec
loope
inc
shrb
add
lds
xchg
add
adcb
sbb
pop
push
push
push
pushf
aas
orb
cltd
insb
xor
mov
dec
icebp
sub
or
jo
notl
add
out
push
fwait
add
lods
jns
repnz
xorb
cltd
fcmovne
pop
out
mov
mov
jge
push
dec
pop
inc
pop
and
add
addr16
rol
adc
mov
push
sbb
arpl
ds
in
xchg
add
lcall
add
js
xchg
jno
and
pop
es
sarl
push
aad
pop
adc
movsl
jmp
adc
add
or
pusha
pushf
cmp
inc
dec
push
push
stc
lea
mov
call
add
xchg
arpl
cld
cwtl
add
mov
add
into
cmp
push
jge
sbbb
push
lods
and
cld
negl
sub
stos
mov
clc
pop
sbb
add
in
imul
ja
mov
call
loopne
es
sti
int
add
dec
push
jnp
mov
jbe
mov
sub
hlt
xchg
test
and
dec
xchg
inc
xchg
push
dec
adc
pushl
es
add
jmp
outsb
mov
fwait
enter
ror
cmp
test
int
add
xor
xor
add
sbb
and
test
loopne
cs
cmp
add
and
jle
daa
int
fsub
sti
sub
dec
add
xor
dec
push
xor
rorb
add
mov
cmp
aas
stos
dec
push
cmpsl
add
popa
sarb
pushf
pop
jg
jp
push
and
push
call
mov
lds
sahf
xchg
test
sbb
mov
or
lods
int3
arpl
dec
dec
inc
loope
mov
or
inc
xor
xchg
push
out
roll
insl
in
aad
rcll
mov
les
add
or
ret
xor
jg
sbb
les
cmp
mov
shll
jge
int
add
nop
scas
nop
cmp
mov
xchg
jo
mov
xor
shl
jg
sbb
or
imul
inc
sarl
shll
push
mov
dec
xchg
nop
add
xchg
sbb
xor
inc
sub
sldt
xchg
ret
push
add
mulb
cwtl
mov
add
shlb
add
repnz
xlat
cmp
stc
fchs
jb
dec
push
xchg
sbb
cmp
je
sub
sub
ljmp
and
out
or
inc
pop
and
xorb
sub
xor
adc
loope
pop
or
mov
mov
je
ficoml
inc
icebp
inc
pop
xor
mov
out
imul
test
sbb
inc
add
cmpsb
mov
add
push
xorb
mov
add
push
mov
mov
stc
es
lahf
sbb
das
sub
in
or
inc
push
mov
aam
adc
push
movb
popa
mov
iret
es
shlb
inc
and
cld
in
sbb
orl
call
xchg
xchg
sbb
mov
pop
add
mov
and
jne
jg
add
daa
aam
pcmpeqw
sbb
stos
jp
push
mov
call
mov
les
xorb
cmpsb
in
add
jp
sbb
idivb
int
movsl
fcompl
add
xchg
sar
lods
jmp
xchg
jne
mov
jo
mov
idiv
jp
jns
mov
add
pop
lea
mov
pusha
push
call
push
jge
daa
pop
cli
popw
inc
sub
xchg
add
addr16
add
into
xchg
mov
mulps
in
repz
pop
mov
lock
adc
mov
add
sahf
and
hlt
int
scas
aad
movsl
adc
inc
or
in
xor
jae
cmpsl
or
sbb
xlat
mov
les
lock
add
in
data16
leave
fimuls
push
test
push
add
mull
loop
add
jecxz
cmovbe
cmp
jmp
xor
adc
mov
test
hlt
cmp
add
arpl
loopne
add
lds
adc
dec
and
xor
aas
outsb
add
stc
gs
jp
bound
add
add
or
in
add
dec
add
add
in
jno
mov
add
dec
mov
jle
xchg
inc
test
sub
sbb
push
loopne
pushf
cmp
aaa
rolb
popa
das
pop
sbbb
cmp
popf
iret
mov
push
js
fwait
into
add
dec
sahf
ja
mov
add
jbe
out
xchg
leave
xor
call
shlb
js
js
add
push
stc
or
test
cmp
shrb
xor
or
or
cmp
mov
xor
push
data16
lea
jmp
mov
jg
iret
mov
cmpb
mov
and
int
roll
and
fcoml
clc
xchg
add
xchg
mov
pop
adc
xchg
fsubs
lds
pop
dec
cs
addr16
add
fs
testb
mov
cmp
enter
test
sbb
xchg
mov
push
fwait
adc
hlt
movl
add
mov
les
cmp
nop
movsb
push
pop
add
int3
sub
pop
adc
pushl
add
test
fisubrs
and
insl
repnz
push
pop
xchg
cmp
mov
test
lock
leave
mov
pop
lods
fsub
lcall
cmp
add
mov
mov
xchg
add
xchg
jp
mov
aaa
add
cmpsb
lret
add
shrl
sbb
inc
cmp
or
cltd
mull
add
data16
clc
bound
add
mov
arpl
jle
lea
add
aaa
roll
cli
jbe
add
xchg
xlat
out
add
loop
test
mov
addr16
hlt
xor
into
mov
andb
add
mov
cmp
or
mov
rorl
pop
pop
nop
sub
add
int3
add
sbbb
sbb
sub
xor
pop
je
int
aaa
push
jp
or
sub
mov
add
push
lods
push
pop
sbb
and
push
jmp
jno
fdivr
out
nopl
nop
add
pop
es
inc
dec
adc
mov
sbb
stc
xchg
xchg
pop
fsts
or
jb
dec
xchg
add
int3
lods
or
push
jmp
jne
jae
sbb
shll
or
sbb
sbb
jmp
int3
addb
lods
loopne
xor
add
inc
enter
shlb
push
push
mov
xor
xchg
sbb
out
cmp
ret
lds
pop
or
mov
sbb
sarb
mov
jbe
sbb
movsb
or
sbb
mov
mov
imul
cmp
out
repnz
lods
int3
cmpb
xor
jmp
push
imul
rolb
dec
movsb
adcl
sbb
js
aam
fs
cmp
xor
mov
repz
add
mov
or
push
cmpl
cwtl
add
xchg
cmp
dec
nop
push
push
fwait
inc
add
loopne
sahf
popf
cltd
push
test
xor
add
ja
xchg
sbb
lahf
add
fists
xor
xchg
cwtl
dec
outsb
mov
dec
cmp
mov
imul
jne
sarl
pop
add
add
insl
jmp
add
or
add
leave
call
clc
cmp
or
sbb
nop
lret
inc
mov
adc
loopne
call
incb
pop
addr16
sti
and
push
jmp
inc
ss
cs
pop
loopne
leave
jne
fcoms
in
mov
jo
add
loopne
push
cmp
mov
add
xor
or
inc
adc
add
je
lahf
and
mov
and
xor
lock
jbe
out
jl
scas
add
pop
adc
add
addl
pop
mov
cmp
dec
pop
dec
xchg
cs
daa
pop
pop
test
add
mov
scas
and
xchg
push
loop,pt
cltd
adc
xchg
and
mov
aas
mov
add
sub
mov
dec
cmp
cmp
inc
xchg
inc
or
inc
lahf
adc
inc
mov
movsb
mov
adc
adc
adc
adc
mov
adc
jle
and
jge
loope
add
mov
loopne
jp
idiv
faddl
mov
aad
push
dec
push
add
dec
add
mov
cmp
insl
push
sbb
sti
push
jae
add
add
and
cmp
sub
mov
cmpl
mov
sbb
mov
int
fistpl
adc
pop
pushf
jo
cmp
add
add
mov
mov
add
mov
test
insb
add
loopne
jb
daa
jne
lods
int
pop
sbb
mov
mov
pusha
jnp
add
lret
inc
add
loope
sar
add
aaa
inc
and
cmp
add
push
int3
sbb
xor
cmpsb
mov
aas
shlb
push
sbb
pop
jnp
sbb
pop
mov
cmp
popa
scas
mov
loop
or
rcr
outsl
jl
cmp
add
mov
add
xor
insb
add
ret
out
mov
and
lods
dec
inc
mov
jg
cmp
lock
pop
cltd
stos
rclb
aaa
adc
or
xchg
rorl
out
pop
jne
xchg
xchg
adcl
add
and
fwait
lret
cs
and
cmp
call
add
clc
cmpb
roll
inc
leave
adc
sub
ja
sbb
xchg
push
add
pusha
jmp
push
aad
add
call
cmp
rorl
aaa
jne
dec
add
pop
push
imul
out
xchg
sub
push
pop
inc
mov
push
repnz
mov
pop
push
pop
inc
cmpsl
adc
or
rorl
in
adc
push
mov
adc
sbb
inc
add
or
adc
jecxz
add
imul
xor
xchg
loop
clc
insb
cmp
xor
mov
xchg
fdivrp
add
cli
mov
mov
call
cmp
pop
pop
out
adc
ds
adc
sti
add
mov
or
and
dec
inc
add
shll
out
and
inc
enter
dec
lret
mov
shrl
movb
or
loopne
data16
add
sbb
adc
pop
ljmp
push
negb
mov
push
add
cltd
je
icebp
jae
push
stc
pop
test
fucomp
andl
xchg
insl
lcall
xchg
int3
scas
and
adc
leave
pop
mov
call
imull
pop
aad
ja
or
dec
or
mov
add
cmc
lea
lock
out
dec
add
add
xchg
das
addr16
stos
xlat
push
add
cmpsb
fisttpl
add
xchg
clc
int
xorb
inc
aad
push
movsb
add
gs
movsl
jnp
and
jl
add
jle
jp
mov
shll
jae
add
add
gs
mov
imul
ja
stos
sbb
pop
shll
scas
add
and
jae
sbb
pop
pusha
push
push
add
mov
push
jnp
adc
jbe
jge
add
mov
xchg
pusha
cwtl
mov
aam
jnp
call
lock
sub
fadd
push
pop
mov
mov
add
cmp
out
fisubs
scas
and
xchg
push
lock
rolb
add
sbb
icebp
imulb
cwtl
add
leave
sbb
fstpt
sbb
xchg
pop
dec
pop
sbb
add
adc
popa
and
lods
jp
add
xor
mov
test
cmp
fdivrs
add
std
push
dec
add
or
dec
sbb
inc
in
gs
iret
add
rorb
popa
insl
pop
cmc
or
and
fadd
or
jb
lods
clc
in
lds
or
icebp
fs
add
cltd
hlt
lret
mov
pop
jecxz
push
popa
rcr
pusha
mov
pop
mov
mov
js
imul
push
fwait
divl
insb
fadd
aas
push
add
lret
jae
add
jne
jae
adc
cmp
out
sbb
adc
add
lds
sbb
or
imul
add
hlt
mov
testb
movsl
add
mov
xchg
lods
and
mov
stos
push
in
cmp
test
add
cmp
or
clc
stos
cmp
jns
add
insl
or
fnstsw
rolb
dec
sbbl
aaa
cmpps
daa
fistpll
xchg
xchg
jp
pusha
rol
int
xchg
lcall
add
mov
cmpb
faddl
negb
popa
add
pop
mov
jo
add
repz
fnstenv
add
sub
incl
ja
add
dec
sbb
lock
add
add
sbb
add
adc
jno
dec
jl
loopne
mov
lea
mov
sbb
adc
add
push
or
adcb
sbb
dec
push
add
push
out
pop
pop
pop
nop
add
add
fdivs
add
mov
xor
pop
dec
repnz
rolb
cmp
mov
hlt
div
push
add
pop
stc
add
in
jle
cmp
jmp
add
sbbb
add
dec
sarb
add
scas
cli
out
pop
and
add
test
dec
mov
xor
jmp
add
push
sbb
and
sub
add
jnp
add
push
stos
add
cmpsl
ret
pop
mov
add
cs
mov
cmp
adc
fsubrl
xchg
stos
sub
add
mov
in
pop
mov
addb
add
xor
or
outsl
and
fsubrl
or
scas
dec
sub
rcll
repz
add
xchg
subb
ljmp
mov
fildl
test
push
or
or
addl
aaa
xchg
mov
movsl
xchg
xor
push
in
add
sub
flds
fistl
sbb
pop
jp
sbbb
xchg
inc
xchg
inc
dec
flds
add
dec
mov
cltd
jp
add
pop
scas
jns
xlat
dec
cmpsl
fidivrl
out
loop
repz
fcomps
pop
pop
dec
stos
cmp
add
mov
repnz
mov
mov
loopne
lcall
sub
mov
mov
pop
lahf
and
dec
loop
mov
add
aam
popf
sbb
ss
pop
pop
mov
arpl
add
sbb
ds
add
stc
fdiv
movsl
adc
pop
out
fistl
addl
daa
adc
pusha
data16
fldln2
push
add
sub
inc
dec
mov
shr
pop
loop
add
push
data16
out
pusha
in
mov
dec
xchg
call
push
mov
dec
js
pushf
xorl
inc
loopne
rorb
mov
mov
clc
xor
ja
push
out
mov
fildll
movsl
std
das
dec
xchg
rorb
loopne
pop
adc
jnp
pusha
test
jp
shll
hlt
adcb
xor
mov
repnz
mov
dec
push
enter
add
imul
andps
add
push
dec
loopne
jmp
cmp
and
mov
insl
push
lahf
out
fiadds
in
jne
outsl
adc
xchg
mov
mov
push
push
add
popf
cmpsl
push
xchg
and
enter
dec
or
sbb
cmp
aaa
movsl
xchg
xor
adc
addl
mov
or
sub
or
std
aas
xor
rcrb
adc
add
xlat
push
cmpb
insb
in
loope
rolb
dec
lar
je
andl
mov
jmp
in
sbb
mov
scas
inc
jo
mov
sbb
mov
jg
scas
add
insl
mov
in
mov
nop
adc
and
icebp
out
sbb
lock
xor
xchg
cmp
loopne
push
rorl
movsb
add
sti
adcb
sbb
aas
jns
mov
cmp
pop
adcb
into
imul
pop
addr16
add
cltd
mov
add
aam
outsl
mov
adc
adc
jle
inc
sbb
or
jo
sub
xchg
lret
imul
adc
adc
add
fadds
cmc
mov
and
add
mov
or
and
push
add
stc
or
sbb
xor
jne
inc
fistps
mov
mov
add
sub
mov
mov
adc
rcll
mov
mov
dec
xlat
lods
cmpsl
fstp
stos
dec
js
add
scas
enter
jl
add
fisubrl
mov
add
adc
xor
mov
adc
sub
pop
hlt
adc
lds
jmp
xor
rolb
call
add
add
inc
faddp
popa
loopne
add
fucom
lret
int
mov
and
testb
mov
into
in
add
pop
aam
sahf
sbb
mov
push
testb
jbe
or
out
mov
sub
addr16
add
cmpsb
jne
movsb
outsb
rol
push
lods
aaa
loopne
cmp
xchg
xor
mov
cmp
mov
lods
mov
ss
in
addr16
add
mov
nop
jg
aam
jbe
iret
test
mov
mov
rolb
out
jo
add
add
mov
testb
scas
jbe
pop
inc
popa
adc
or
pusha
push
daa
mov
ds
bswap
push
push
shlb
sub
push
out
xor
pop
out
je
mov
nop
aas
adc
inc
xorb
add
sbb
lcall
movsb
fadd
lock
out
stos
xchg
shlb
ja
add
es
pop
cmpsl
cmpsb
pusha
mov
add
nop
out
mov
mov
dec
enter
xchg
jae
lock
mov
add
jmp
jns
add
sahf
in
shll
pop
push
add
lcall
ret
xchg
aas
cmp
leave
sbb
jg
ss
or
dec
pop
mov
inc
outsl
addb
scas
add
movsb
pop
insl
pusha
movl
add
lret
incb
bound
lods
mov
xchg
enter
mov
push
cld
inc
add
mov
adc
xchg
pop
enter
int
sbb
sbbb
inc
loop
stos
mov
and
nop
xor
xchg
aaa
add
popf
lcall
inc
lods
mov
arpl
int3
imul
push
repz
adc
call
add
clc
or
or
shr
adc
or
dec
add
out
cmp
int3
lods
add
sub
decb
cld
add
mov
out
aad
hlt
jae
rorb
loope
mov
repnz
and
pop
add
lret
jnp
jl
in
lcall
inc
shlb
add
jne
mov
push
mov
sub
cltd
pop
inc
loop
outsb
pusha
sahf
mov
mov
jbe
imul
add
dec
mov
shr
jno
add
test
rcll
xor
ss
mov
inc
mov
mov
insb
lcall
lock
dec
int
std
rcll
mov
add
or
adc
adc
cwtl
push
jbe
jb
mov
outsl
add
jns
repz
jne
lahf
stos
adc
jp
das
scas
adc
in
sbb
scas
jo
mov
test
jmp
jnp
xchg
adc
sti
push
add
add
and
add
mov
mov
loop
adc
fstpt
xor
cmpsb
push
gs
cs
or
jo
iret
add
xor
jmp
jb
push
mov
add
aaa
out
pusha
fbld
addl
insb
add
imul
pop
rcrb
xor
das
in
int
sub
and
xchg
mov
cmpsb
dec
add
xchg
or
pop
ret
xor
adc
movb
sbb
and
jmp
add
std
loope
stos
add
xchg
fcom
in
add
or
dec
cmp
xchg
loopne
dec
subb
pop
pop
adc
mov
int3
sub
mov
xor
pop
add
fsubp
iret
adc
adc
or
pusha
dec
jbe
jg
jmp
sbb
mov
dec
jle
push
loopne
in
jp
mov
aas
inc
lock
les
setno
xchg
push
loope,pt
dec
testl
int
add
jg
adc
push
data16
jg
add
leave
adc
jp
loope
xchg
adcb
clc
cmp
das
pop
xchg
test
add
stos
and
enter
test
sbb
adc
pop
idivl
add
aam
mov
aam
call
pop
add
push
add
mov
add
mov
ss
fcom
insl
xchg
insb
lods
orl
add
dec
and
dec
outsl
add
pop
jne
add
fcoml
xchg
pop
adc
push
rol
dec
add
fdiv
arpl
pop
mov
aam
xchg
into
add
or
dec
in
pop
fxtract
mov
xlat
jb
unpckhps
mov
mov
or
and
add
rolb
subb
mov
pop
mov
sti
or
fdivrl
enter
adc
xchg
in
push
xor
vmread
insl
dec
cs
stc
xchg
adc
aas
insb
mull
int
xchg
or
pop
jne
push
and
test
orb
jge
imul
sub
or
jno
add
sbb
inc
sarb
sub
aam
nopl
les
pop
lea
xor
add
lahf
mov
pop
int
es
cli
adc
or
pusha
inc
out
jns
adc
xor
xchg
les
in
clc
adc
or
nop
insl
rcrl
add
sub
cltd
mov
lock
push
push
stc
sub
cs
jl
dec
mov
les
adc
cwtl
xchg
add
fcoms
hlt
add
cmp
xor
add
in
jg
xor
lods
adc
ffreep
enter
add
or
adc
cmp
cmpsb
add
or
pop
repnz
clc
xor
sbb
adc
xchg
sbb
adc
in
xor
enter
sahf
int3
add
sbb
push
jae
inc
mov
loopne
pop
fs
movsl
add
mov
jb
pushf
loopne
sub
lds
movsl
inc
fsubrl
cmp
push
call
add
adc
add
and
pop
inc
adc
iret
test
mov
jno
lds
sbb
roll
pop
pop
fdivr
test
fsubp
iret
jge
mov
pop
jmp
mov
popa
in
add
jno
inc
popl
jp
in
int
je
sarl
add
and
cmp
inc
cmpsb
fldt
movsl
adcb
in
adc
das
testb
add
cmpsb
xor
ss
js
add
adc
cmc
and
and
pop
sahf
add
shlb
in
add
dec
enter
imul
test
ljmp
mov
es
addl
das
mov
jl
add
adc
cmp
cli
mov
sub
sub
arpl
clc
push
rorl
add
pop
adc
sub
mov
ficoml
push
add
loop
shrb
inc
andb
popa
mov
imull
fisttpll
sub
shlb
daa
into
sbb
xchg
mov
iret
push
sub
out
mov
or
jno
add
idivb
inc
ffreep
adc
pop
loop
not
test
iret
add
mov
sbb
pop
cmp
push
push
test
push
das
repnz
jp
push
jnp
dec
or
add
push
pushf
or
pop
add
ret
jae
add
xor
out
dec
add
insl
ds
lock
cmpsl
cmp
add
pop
test
out
mov
pop
popf
inc
aam
mull
add
enter
jl
js
fcoml
mov
fwait
mov
mov
ret
add
xchg
add
rorl
push
jg
dec
sub
cmpsl
add
xor
outsb
lods
sti
push
add
add
or
pop
mov
jo
test
mov
repz
cmc
sbb
and
shr
mov
inc
roll
mov
sbb
lret
stos
push
push
fcoml
enter
movsb
jb
add
test
cmp
add
popf
fsub
cwtl
push
addr16
fimull
dec
iret
rorl
mov
and
cmp
jg
jle
lock
mov
jge
dec
sbb
adc
jb
and
aad
js
daa
sbb
loopne
dec
mov
inc
jnp
push
fcomp
scas
xor
in
cmp
inc
mov
cmp
lock
add
jge
jmp
daa
inc
add
aas
mov
mov
ficompl
test
shr
xchg
inc
xchg
adc
into
cld
cs
mov
cmp
sahf
addr16
add
or
cli
arpl
or
loope
adc
in
sub
xchg
jae
int3
mov
add
jnp
out
aaa
lock
xchg
mov
je
icebp
and
and
aas
jle
sbb
out
add
faddl
data16
lods
cmp
fiaddl
mov
daa
dec
insl
add
shrb
insb
add
push
pop
mov
xor
add
xor
or
es
insb
add
pop
outsb
lock
ficompl
aam
add
pushl
rorl
mov
out
add
repnz
add
mov
xor
jno
nop
add
jns
pop
in
mov
fcomi
clc
sahf
cmp
aad
sub
xor
mov
js
pop
xchg
inc
xor
test
pop
xor
push
repz
xor
dec
xor
ds
xchg
inc
xor
movsb
out
push
lcall
js
inc
pop
cmp
add
stc
adc
insl
movsl
test
mov
pusha
sarb
test
adc
sub
mov
rolb
in
iret
add
pop
or
out
adc
jns
xorb
push
adc
cmpsb
js
jmp
add
cli
pop
sbb
in
subl
sub
push
or
data16
aaa
cmpsb
jle
hlt
loop
sub
repz
rolb
push
popf
aad
or
sbb
fistl
in
inc
enter
cmp
mov
mov
jns
sbb
mov
dec
jmp
inc
and
icebp
test
stos
das
cmp
mov
and
in
jle
scas
loopne
sbb
in
mov
xchg
pusha
push
in
xor
dec
xchg
cmp
push
pop
js
jo
and
scas
das
cmp
adc
jnp
or
mull
push
popa
fdivs
aam
add
clc
inc
pusha
push
push
xor
aam
xorb
lahf
add
and
and
dec
dec
or
sub
call
leave
pop
jbe
add
or
jp
cld
imul
or
bound
js
adc
add
xchg
repnz
add
adc
inc
xchg
lret
jnp
adc
popf
orb
dec
or
add
jmp
rolb
mov
cs
sbb
or
fs
fmuls
aam
lea
sub
jnp
in
mov
push
ja,pt
xor
mov
xchg
pop
add
aas
in
xsha256
cmpsb
aam
mov
cwtl
stc
jae
mov
notl
sahf
pushf
add
cmp
dec
mov
push
pop
loop
shlb
dec
jp
xor
jo
mov
inc
out
data16
rcrl
xchg
cmp
pop
or
fnsave
test
xor
ja
mov
repnz
pop
inc
fsubp
sarl
fldenv
icebp
stc
or
pop
aas
add
mov
add
jae
pop
sbb
cmp
add
sub
aad
xorb
adc
movb
idiv
cli
cmpsl
repnz
int3
hlt
lret
mov
jne
or
add
adc
cmpsb
aaa
add
dec
mov
inc
addr16
sbb
jno
add
mov
pop
xchg
into
mov
cld
xor
dec
insb
or
dec
mov
jl
lcall
cs
insb
js
xchg
fmull
nop
call
mov
mov
or
insl
adc
push
add
add
push
sub
test
sub
inc
jbe
jp
push
test
push
jae
jle
add
sub
add
pop
jp
or
or
pop
je
add
stos
pop
pop
push
test
mov
mov
aaa
xchg
sbb
push
lods
jns
jbe
andb
or
inc
mov
jo
lret
mov
insb
sahf
xchg
xor
aaa
xchg
loop
lea
data16
ljmp
cmp
add
xchg
ja
adc
add
and
push
pop
lock
out
jmp
inc
ja
idivl
fwait
mov
push
out
pop
iret
add
repz
inc
outsl
jne
orb
xchg
add
cli
outsb
into
rorl
jg
rolb
jl
enter
insb
movsl
jno
cmp
jmp
add
inc
add
push
adc
sbb
testb
add
cs
xchg
fisubrs
add
fdivl
pusha
jns
pop
pop
xchg
add
mov
addl
sub
and
add
pop
xchg
mov
rol
imul
xchg
imul
add
cwtl
or
xor
enter
xchg
cld
xorl
inc
out
add
test
xchg
pop
ret
popa
or
mov
js
add
jmp
jl
cwtl
stos
jp
fidivl
adcl
sub
outsb
push
flds
xor
push
popa
or
jge
and
xor
in
adc
adc
xchg
inc
push
cmp
cltd
add
clc
sub
das
imul
adc
fs
jns
das
cs
add
in
mov
pop
xor
and
sub
loopne
sub
jp
mov
pop
add
mov
imul
add
das
adc
pusha
sarb
lret
cmpsb
mov
mov
xchg
pop
nop
in
clc
es
lock
into
or
nop
in
jno
mov
jbe
fmull
mov
xchg
push
or
pop
stos
and
lahf
fidivrs
bound
and
add
and
dec
or
pop
or
pop
dec
lahf
add
inc
jge
sbbb
leave
fildl
mov
dec
outsb
es
sbb
repnz
clc
push
jecxz
and
pop
fs
pop
lahf
xor
push
adc
mov
in
cmpsb
cmp
mov
je
sahf
sub
sbb
and
jp
in
int
stos
mov
xchg
nop
cmpb
lcall
and
add
mov
out
xchg
test
pop
add
stc
bound
or
js
js
rcrb
push
sub
inc
lock
clc
ds
imul
imul
or
lock
js
add
mov
pop
test
rorl
and
dec
lcall
add
in
and
push
mov
dec
mov
and
inc
pusha
js
movsb
add
mov
push
fmull
inc
in
and
add
lods
lret
pop
dec
call
mov
or
jns
aad
lods
fs
mov
cmp
repnz
into
add
adc
xchg
insl
adc
add
push
push
lods
push
ljmp
divl
cmc
testb
inc
xchg
push
jno
cmp
add
imul
mov
rol
mov
push
dec
add
inc
sti
fsubrl
and
add
sahf
and
adc
cmp
arpl
ret
add
je
idivb
das
icebp
add
sar
insl
jb
mov
add
pop
faddl
movsl
xlat
add
aaa
cld
xor
push
xchg
adc
push
add
mov
xchg
add
cmp
sbb
loopne
mov
mov
das
jle
sub
add
or
stos
pusha
dec
inc
jno
ret
pop
add
lds
test
mov
aaa
movsl
cmp
or
insb
add
imul
inc
daa
mov
aam
jecxz
hlt
mov
or
clc
mov
out
icebp
dec
add
js
add
pop
sbb
ja
and
push
cwtl
push
sbb
mov
loopne
inc
xor
mov
loope
inc
xor
rorb
pop
add
cld
test
push
inc
jmp
leave
pop
popf
dec
mov
andb
imul
or
push
add
repnz
pusha
cmpsl
adc
adc
sbb
cmp
add
mov
clc
push
xor
mov
cmpsl
in
cmp
pop
aaa
push
cmp
inc
je
xor
push
loope,pt
sbb
mov
xchg
fbstp
xchg
imul
movsb
mov
xchg
push
mov
add
rcrb
test
mov
mov
mov
jmp
nop
testl
pop
sub
pop
mov
adc
xor
xor
lea
xchg
mov
out
jne
push
jns
and
pusha
mov
idiv
jmp
fsub
imul
lock
mov
jnp
nop
jns
shrb
mov
inc
pop
scas
or
add
sub
daa
push
xchg
call
insb
add
inc
fcom
or
jmp
adc
inc
and
xchg
cmp
test
adcb
div
cli
push
mov
popa
add
aas
cmp
push
cwtl
add
into
test
mov
hlt
xor
das
out
cmpsb
sbb
cmc
addr16
sbb
push
push
jg
cmp
add
or
fs
in
sub
xchg
mov
lods
jp
add
ss
mov
test
mov
xor
add
imul
lcall
pop
add
sahf
pop
and
aam
mov
mov
mov
or
dec
out
sub
adc
cmp
sbb
mov
imul
je
test
mov
push
stos
or
sub
idivb
add
sar
xor
dec
insl
js
push
fwait
aam
pop
lcall
mov
dec
push
adc
adc
add
mov
insb
adc
gs
adc
rorb
sbb
or
xchg
sbb
andb
das
add
pop
test
xchg
pushf
or
insb
push
add
push
or
cmp
call
aam
out
pop
in
pop
rcr
jmp
iret
add
ret
insl
pop
sub
jmp
rolb
add
mov
ret
add
sub
fsubs
jg
and
js
test
dec
sbb
add
fwait
xor
icebp
push
shl
add
inc
int
and
lods
jbe
jg
add
gs
jl
mov
push
push
sbb
sbb
insb
movsb
cmp
aas
add
adcl
filds
add
cmpsl
adc
xchg
mov
ds
stc
sarl
push
push
test
add
or
shlb
enter
adc
add
mov
rcrb
into
cmp
loop
cwtl
add
fsubl
mov
pop
mov
xchg
fdivr
mov
push
jl
js
cmp
cwtl
jnp
adc
stos
or
ds
filds
ficompl
movsb
out
in
inc
jbe
mov
movsl
in
lock
lds
xorl
sti
mov
lea
mov
mov
mov
dec
push
aam
enter
ret
adc
ds
cmp
xor
and
inc
pop
lahf
rolb
insl
cwtl
or
and
xor
xor
pop
push
and
adc
cmc
add
sub
mov
mov
adc
inc
rcrb
ret
mov
pop
inc
xchg
xor
add
pushf
subl
xchg
pusha
pop
jmp
rolb
jbe
adc
pop
mov
popf
xor
add
in
das
ret
pushf
xchg
lahf
test
repz
jge
sbb
das
outsb
fisubrs
iret
xchg
sub
mov
mov
push
add
and
shll
aam
pop
xchg
sahf
mov
lock
fildl
pusha
xlat
mov
pusha
aas
adc
mov
add
stc
ljmp
loop
rorb
lds
xchg
rcll
cmpsl
or
cmpl
clc
push
movsb
cmp
push
roll
das
mov
and
add
mov
xor
add
jo
pop
lock
jecxz
push
orb
lret
sbb
adc
xchg
sbb
cmp
jp
mov
lahf
add
and
add
mov
cld
iret
dec
jns
and
add
and
dec
xchg
inc
and
call
arpl
jo
icebp
enter
pop
fcompl
popf
add
stos
mov
pop
out
mov
imul
fsubl
andb
stc
mov
xchg
lods
jg
in
dec
sub
movsl
sbb
sbb
add
xlat
enter
push
fmull
push
push
pop
mov
dec
lods
mov
add
push
xchg
and
incl
cltd
aad
or
in
out
jg
add
inc
test
mov
add
mov
sbb
jg
mov
add
pop
cmpb
fnsave
test
cwtl
cltd
lea
hlt
dec
je
insl
mov
pusha
and
test
dec
cwtl
rorb
les
dec
fcoml
cmpsb
inc
scas
test
push
das
push
leave
pop
add
cmp
xlat
shll
int
xor
jno
xor
xor
mov
outsb
pusha
out
jnp
xchg
mov
sbb
adc
mov
fstpt
cmp
push
or
test
test
jmp
mov
add
out
xor
add
cmp
mov
into
popf
adc
pop
xor
add
sbb
out
lods
or
sti
int3
sub
mov
push
xchg
add
add
popa
aad
cmpl
testl
and
call
sarb
xchg
sbb
push
faddp
out
add
inc
pushf
stos
jb
rolb
cld
mov
enter
clc
aam
mov
or
add
dec
insb
in
insl
incl
orb
xor
inc
adc
scas
pop
mov
movsl
push
inc
call
push
cmp
push
mov
dec
adc
je
sbb
inc
and
add
jecxz
inc
mov
shr
sbb
push
es
jb
insb
dec
aad
pusha
push
fs
lock
xchg
adc
mov
outsb
pop
add
push
mov
rorb
in
test
mov
xchg
adc
mov
dec
inc
adc
and
out
adc
add
jmp
shrb
out
pushf
sbb
imul
aad
icebp
js
and
inc
call
js
hlt
aaa
mov
mov
enter
int3
test
dec
jo
mov
stos
lcall
xchg
sub
mov
mov
lds
lret
cmc
mov
add
mov
or
xor
cmp
ljmp
add
pop
sbb
or
pop
xchg
lret
cmp
and
inc
inc
sbb
push
rcl
imul
cmp
mov
fisubs
and
in
inc
clc
fxch
adc
sbb
loopne
and
js
or
inc
shr
in
add
loope
sti
adc
pushf
stc
pushf
adc
dec
xchg
cmp
popa
fbld
sub
or
fsubrl
xor
fdivrp
orb
pushf
and
or
pop
aas
pop
mov
scas
and
add
jmp
pop
sbb
cmp
add
dec
adc
dec
arpl
inc
bound
jae
sbb
lock
pop
shll
jmp
dec
aad
iret
pushl
xor
dec
pop
and
pop
sub
dec
cmp
add
push
xor
mov
cld
rolb
mov
sub
mov
mov
sbb
inc
pushf
adc
cmp
sti
and
sub
inc
lret
jg
push
mov
mov
mov
dec
sahf
push
test
jl
sub
movsb
adc
adc
sbb
add
orl
popa
pop
call
lcall
mov
cli
pop
loope
rolb
shlb
xor
cmp
or
rorl
add
jmp
das
fnstcw
jae
sarb
pop
enter
jb
adc
sbb
add
sub
xor
xchg
inc
ret
decb
mov
daa
xchg
cmp
fdivrs
mov
push
pop
add
es
cmp
fnstenv
int
adc
je
leave
mov
jl
sbbb
push
lock
and
add
repz
js
and
out
sub
jo
aam
in
es
mov
adc
jbe
les
cmc
loopne
adc
lock
add
cmp
popa
jb
pop
clc
insb
ljmp
je
leave
add
xchg
in
pusha
add
mov
js
int3
loop
jmp
shl
jnp
add
push
dec
jns
pop
add
pop
xor
fdivrl
mov
fs
add
inc
inc
sub
sbbl
add
inc
and
fidivrs
jp
add
aaa
icebp
push
pop
mov
mov
sub
push
fbld
cld
scas
sbb
repz
mov
or
ljmp
in
into
xor
addr16
jo
push
pop
enter
pop
jns
test
fcoml
cld
jg
jmp
clc
push
add
aad
jbe
test
xor
inc
xor
add
insl
xchg
lcall
or
inc
enter
push
or
icebp
adc
inc
cmpsl
push
mov
dec
adcb
add
mov
pop
lods
mov
inc
pop
cmc
shl
mov
andb
decl
inc
fdiv
mov
aam
dec
test
hlt
cmp
aad
and
push
xchg
pop
xchg
fcoml
mov
pop
pop
imul
mov
push
add
lcall
rcrb
cmp
add
insl
push
dec
scas
fidivrl
dec
xchg
enter
shrl
pushf
lea
sub
stos
or
mov
jo
sbb
jne
dec
aas
jo
sti
sub
enter
adc
jae
insl
pop
add
subl
xchg
shll
in
xor
arpl
filds
sbb
test
or
std
pop
scas
dec
sbb
nop
mov
test
add
jl
sub
xchg
test
test
je
add
push
cmp
out
test
imulb
pop
adc
les
add
xlat
pop
ret
lret
and
aad
adc
push
dec
pusha
jge
jmp
fcoms
sbb
out
icebp
mov
pushf
xchg
sbb
push
jno
mov
mov
mov
push
outsb
enter
in
stos
xor
je
daa
xchg
and
addr16
sub
sbb
arpl
xor
jp
sub
mov
mov
cmp
pusha
jecxz
out
lods
push
mov
std
shlb
out
push
sbb
and
stos
cmp
mov
insb
stc
aas
movsb
mov
mov
xor
adc
pushf
test
sahf
jb
sub
mov
or
xlat
enter
arpl
test
outsl
aas
sbb
or
in
adcb
mov
cwtl
push
push
push
fmuls
repz
add
cmc
clc
mov
mov
inc
or
jo
and
pusha
adc
imul
in
add
xchg
sbb
popa
shlb
adc
and
pop
jo
sbb
push
jno
add
cmp
mov
lock
add
in
cmp
jmp
mov
jae
pop
dec
or
inc
and
ret
lcall
cmp
andl
xor
adc
scas
pop
cmp
fstl
gs
pop
shll
push
cmp
dec
and
hlt
add
mov
cmp
inc
add
and
faddl
sbb
addl
sahf
mov
popf
repnz
inc
mov
push
xchg
inc
rolb
bound
push
cmc
jmp
jno
add
loopne
jecxz
dec
nop
xor
pop
xor
inc
pop
pop
push
test
push
dec
int3
loopne
inc
or
cmp
mov
and
xchg
in
mov
fs
sub
push
icebp
loopne
inc
xor
push
fwait
aam
dec
fcoml
push
popa
xchg
inc
or
mov
jmp
xchg
push
inc
fsubs
shll
pushf
aam
add
push
icebp
mov
jecxz
cmp
and
add
rcrl
addr16
mov
adc
fdivl
pop
xor
cmp
pop
sub
insb
lods
js
push
push
mov
mov
push
push
std
adc
out
add
xor
xchg
sahf
sbb
shlb
rorl
sbb
add
add
push
stos
lock
dec
popa
outsl
cli
fdivl
cwtl
dec
and
or
add
stos
pop
nop
add
or
inc
dec
out
insb
push
cld
lock
fcoml
mov
mov
imul
cmp
enter
xchg
add
mov
jae
test
or
jbe
push
cmp
inc
adc
pop
push
outsl
dec
add
cmpb
mov
out
add
shrl
out
sub
pop
loopne
jmp
repnz
popf
sub
into
andb
adc
aad
xchg
loopne
rorb
sti
pop
xchg
mov
adc
adc
pop
mov
enter
cmp
add
pop
ffree
test
add
andb
add
popa
or
int3
and
sub
aad
or
cmp
in
sbb
mov
rolb
mov
in
pusha
cmp
jno
sub
pop
sahf
add
push
adcl
and
lock
add
outsb
ja
add
and
out
push
jbe
fisttpl
test
jmp
inc
xchg
and
nop
sbb
jge
into
lcall
add
cmpl
in
rclb
outsl
es
or
int3
xlat
aaa
push
pop
dec
add
iret
or
push
int
inc
add
pusha
ret
sbb
mov
out
fdivl
or
dec
stos
cmp
les
lock
pop
xchg
pusha
push
xor
arpl
dec
movsb
daa
add
jns
xor
sub
jae
outsl
or
cwtl
add
cmpsl
add
dec
scas
leave
je
sub
mov
sbb
mov
inc
insl
xchg
sub
add
sbb
mov
lock
fwait
pop
jo
icebp
add
rolb
push
sbb
jmp
repnz
cmp
push
andl
sbb
dec
sbb
sbb
imul
and
push
push
movsl
mov
loop
dec
or
mov
fadd
pop
pop
add
into
addr16
cli
mov
dec
arpl
cmp
popf
mov
jp
sbb
mov
outsl
add
test
adcb
int
add
movsb
xchg
int3
mov
repnz
js
sti
sub
das
movsl
jb
fldt
pop
repz
xchg
push
js
pop
repnz
dec
push
cs
adc
insb
push
push
pushf
jbe
shlb
mov
adc
jbe
pop
imul
lahf
stos
inc
movsb
fdivs
int3
hlt
inc
clc
popa
cmpsl
sbb
test
and
mov
push
ja
jmp
dec
aam
inc
gs
loop
xor
mov
stos
daa
mov
or
mov
xchg
mov
test
or
jl
notb
lahf
ja
inc
add
aad
and
movsb
aam
sbb
cltd
fsubrl
cs
and
add
dec
xadd
inc
sub
pop
add
outsl
jge
aam
test
mov
lods
mov
add
sbb
adc
call
jnp
mulps
arpl
xlat
and
jecxz
adc
jae
sub
jns
dec
rorl
inc
mov
push
dec
sbb
jo
add
movd
rcrl
pop
pop
jg
push
add
dec
lret
sbb
add
or
or
in
pop
sub
xchg
movsb
mov
inc
adc
sub
mov
push
dec
xor
fmuls
movsb
or
and
xor
cmpb
or
nop
fsubs
pop
adc
adc
sarl
jno
mov
push
movsb
add
mov
add
mov
mov
pop
sbb
mov
lock
mov
add
ret
int3
and
in
insb
inc
test
mov
add
xchg
in
fwait
int3
js
orb
lret
mov
or
mov
pushf
jl
adc
call
add
jl
data16
xor
roll
sbb
pusha
rorb
hlt
fisubrl
jbe
movsb
cmp
adc
movsb
gs
mov
inc
test
pop
arpl
add
in
nop
fwait
push
mov
sbb
add
popa
sbb
scas
add
jb
mov
shlb
clc
mov
mov
jp
and
jns
mov
add
pop
dec
mov
es
and
dec
dec
cs
push
and
je
or
mov
add
cmp
stc
xor
and
out
hlt
jns
push
add
sbb
mov
rcll
loopne
mov
inc
sub
dec
fs
icebp
enter
pop
mov
cmp
sbb
dec
cmpl
dec
test
add
push
movsb
pop
aam
pop
inc
aad
int3
jbe
and
gs
into
xor
jne
or
mov
mov
test
mov
inc
in
adc
insl
jmp
xchg
pop
lock
lock
jle
mov
add
cmc
sbb
or
cmp
push
push
and
xchg
dec
jle
add
icebp
test
jge
loopne
lret
cs
pop
shr
mov
mov
adcb
inc
lret
add
or
out
push
xorl
sub
inc
dec
pusha
idivb
cmp
cmpl
jns
pop
jb
mov
cmp
out
loopne
rcll
mov
stos
test
aam
call
mov
xor
mov
adc
adc
mov
rorl
out
jno
enter
inc
and
test
mov
les
outsb
movsb
dec
or
sbb
in
loop
add
push
push
aas
mov
xchg
pop
test
dec
icebp
push
jns
sbb
bound
lret
lods
sub
mov
pop
mov
push
push
fwait
or
and
dec
jns
mov
sub
mov
pop
hlt
and
stos
pop
and
imul
aam
mov
and
loope
loope
xor
adc
ret
pop
or
cmpb
jg
fwait
cmp
add
adcb
imul
adc
adc
add
or
jl
inc
stc
add
dec
outsb
mov
adc
sub
push
xchg
pop
cmp
jo
lods
push
ja
mov
push
add
iret
add
ret
dec
in
add
test
push
jl
mov
adcl
push
dec
xchg
out
aaa
ret
adc
loopne
imul
je
sub
xchg
popa
push
add
shll
iret
dec
lcall
sti
dec
inc
pop
loop
les
leave
pop
xchg
sub
mov
xor
in
push
loope
rolb
xor
dec
cltd
ss
imul
jp
xchg
cmp
add
push
mov
add
insb
int3
push
jo
add
lcall
cmp
pop
test
add
xor
scas
iret
cmpsl
pop
lock
lods
shl
loopne
fcmovu
push
int3
out
xor
arpl
popf
cs
fisubs
push
add
jbe
mov
cwtl
mov
mov
mov
inc
push
add
divl
or
cmp
mov
dec
inc
xchg
jnp
cmpsl
aas
insl
mov
xchg
fisttpll
add
sahf
or
xor
je
add
jecxz
or
cmp
mov
fstl
xchg
xchg
orb
xor
rclb
mov
add
js
lret
adc
lret
jle
out
mov
add
pop
push
cmp
fimull
push
add
xlat
das
mov
in
sbb
dec
popa
cmp
data16
adc
enter
pusha
xor
and
pushf
xor
jno
push
loope
pop
add
imul
cmpsb
dec
mov
add
add
and
nop
cmp
add
pop
mov
movd
dec
inc
and
mov
incb
push
jge
dec
add
sbb
enter
jae
cmp
loopne
or
dec
dec
or
lds
add
cli
roll
mov
lods
add
add
scas
dec
adc
out
inc
add
loopne
leave
shlb
cmc
inc
scas
dec
xor
roll
daa
pop
jne
mov
lret
lret
add
xor
mov
adc
push
lea
cmp
into
sub
cmp
lret
and
and
out
push
leave
pop
es
xchg
cmp
aaa
loopne
push
mov
adc
jne
add
ficomps
and
aam
sub
addb
sub
inc
cli
mov
or
xchg
fsts
xabort
cmpsb
and
loopne
pop
add
push
or
fdivr
test
xchg
xchg
cli
or
add
sub
dec
dec
pop
ljmp
test
lret
std
shlb
pop
sbb
cmp
adcb
aam
cwtl
xor
mov
iret
mov
or
pop
and
push
outsb
cmpl
sub
aam
add
pushf
jp
lea
inc
push
popa
adc
shufps
lcall
test
and
jb
rolb
cmpsl
mov
push
ret
adc
cmp
push
mov
idiv
das
cli
and
dec
sti
jns
push
sbb
adc
std
inc
mov
push
adc
and
mov
rolb
mov
jecxz
push
jg
call
xlat
and
cmp
or
xor
adc
lock
xchg
loop
inc
frstor
leave
pop
shrb
and
xorl
lock
icebp
std
jecxz
sbbl
push
lock
add
jmp
js
sub
add
dec
add
and
adc
push
clc
add
pop
inc
shl
inc
fmuls
and
adc
inc
les
adcb
loopne
and
mov
inc
cmp
adc
dec
aam
or
jle
adc
inc
mov
xor
and
push
in
aad
sub
leave
ja
es
mov
add
dec
jle
and
loopne
loope
enter
mov
loope
cltd
mov
mov
inc
xchg
cmpsb
xchg
adc
xor
nop
clc
or
push
jl
adc
inc
inc
dec
test
aas
testl
cmpb
push
sbb
insl
and
pop
aas
xchg
fnsave
add
movsb
notl
test
dec
push
xchg
mov
clc
in
xchg
push
xchg
mov
push
outsb
mov
les
cmpsl
sub
daa
test
ret
mov
loope
ja
xor
loope
or
loope
rcrb
push
js
and
clc
mov
push
sub
cld
push
and
imul
adc
test
frstor
ljmp
jo
jg
pusha
push
adc
xlat
and
and
pop
xorb
add
mov
dec
sbb
iret
addr16
mov
push
scas
pop
incl
mov
add
jno
out
add
jg
jae
add
dec
mov
sub
add
scas
test
aad
pushf
push
add
daa
jge
push
adcl
cmp
add
fsubl
mov
push
mov
fidivs
shll
sbb
jle
add
je
dec
push
xor
adc
add
jno,pt
adc
shlb
in
cld
xchg
cs
repz
xchg
leave
and
mov
xchg
in
mov
js
fmull
cs
jne
jo
jle
cmp
inc
in
jecxz
in
rcr
clc
and
sub
ja
sub
cs
pop
xlat
jb
cltd
pop
in
lcall
add
jp
popa
or
push
je
adc
iret
add
aaa
das
in
jno
inc
push
data16
mov
dec
inc
pop
sbb
cld
js
mov
sbb
stc
mov
sbb
filds
ret
pop
sub
dec
add
movsl
cmpb
js
call
mov
xor
nop
and
pusha
sbb
sub
imul
and
pop
ret
ret
push
fdivs
mov
xchg
aam
jmp
push
enter
add
jl
mov
aas
cld
cmp
dec
imul
loopne
shlb
add
add
cmpl
out
sbb
pop
lret
subb
hlt
shlb
int
add
mov
and
enter
add
xchg
pop
mov
rclb
jns
cmp
frstor
enter
inc
adc
loop
les
mov
cmp
mov
sti
push
adc
mov
fidivs
xchg
add
sbb
jo
notb
lret
ret
shlb
test
sub
push
mov
pop
int
jno
dec
gs
mov
es
addb
call
and
pop
mov
into
add
loopne
lret
pop
loope
add
push
xchg
mov
call
push
push
add
rolb
fdivs
xorl
add
es
lds
mov
loope
outsl
mov
or
pusha
xor
xchg
fstps
push
mov
mov
fld
dec
add
ret
xor
cmpsb
pop
add
push
lock
scas
int3
outsl
or
pop
cmp
push
sbb
xchg
mov
inc
cmp
add
xchg
inc
add
cli
adc
inc
shrb
pop
mov
sbbb
ficoml
pop
mov
cltd
sar
das
add
mov
fwait
movsb
jo
daa
dec
xor
adc
add
fdivl
movl
push
mov
jg
and
mov
jp
jbe
mov
add
dec
and
andb
icebp
sub
or
popf
push
out
mov
les
int
pop
add
or
dec
loopne
jl
or
cli
push
and
pusha
fmulp
and
mov
add
leave
fidivs
add
mov
sti
add
pop
dec
gs
shlb
movsb
outsl
jne
add
fsubl
or
xchg
pop
dec
add
add
stc
push
xor
flds
cmp
enter
leave
or
ret
xor
pop
icebp
and
pop
dec
cmp
pushf
mov
int3
imul
jmp
xchg
js
pop
jne
dec
adc
loopne
mov
fidivrs
add
aad
inc
push
xchg
ret
orb
jns,pt
sbb
ret
push
js
push
ret
cmp
mov
inc
or
call
jo
pop
leave
jge
or
jb
andb
jns
push
fcomi
add
sbb
add
push
and
add
or
sub
jl
push
xorl
dec
mov
push
and
xchg
fbld
xor
outsl
loop
pop
or
add
lods
cs
lret
aad
not
gs
out
cwtl
or
insb
and
lods
aam
add
and
add
jecxz
and
popa
inc
mov
aaa
lret
inc
mov
sbb
hlt
and
ret
inc
aaa
in
lods
setp
in
xchg
mov
pop
sbb
repnz
xchg
cmp
add
mov
mov
push
mov
xchg
xor
std
imul
outsl
call
into
and
pop
stos
cmovle
add
pop
test
mov
call
mov
add
cmpsb
jge
add
jno
dec
cmp
loopne
rcrl
in
adc
xchg
int
xchg
scas
or
fistl
pop
jb
add
push
xchg
jmp
or
mov
les
sbb
mov
xor
push
and
adc
sbb
mov
jecxz
and
sbb
and
mov
sbb
enter
mov
fsts
insb
pop
or
out
pop
mov
pop
and
dec
adc
testl
or
add
add
jmp
cmp
inc
andb
or
cmp
cwtl
in
sti
push
adc
add
xor
lcall
xor
fiadds
xor
mov
lock
movsb
add
xor
out
push
xor
cmpsb
inc
inc
add
mov
and
loopne
jge
xor
lcall
shlb
in
ret
filds
adc
orl
imul
jl
ja
enter
loope
std
jnp
in
notb
roll
dec
mull
ret
mov
cli
scas
add
sbb
jno
pusha
stos
outsl
adc
mov
movsb
and
or
sti
fldl
push
les
inc
test
push
xchg
and
add
jecxz
and
es
jo
verr
mov
cmc
or
or
leave
in
hlt
int
push
mov
add
shlb
jg
jl
test
push
loopne
xor
pop
add
ljmp
cltd
cmp
push
xchg
pushf
sarb
xchg
push
rorb
inc
lret
shlb
xchg
jle
mov
das
jns
fwait
add
adc
popa
inc
add
mov
test
xchg
subb
dec
lods
shlb
add
leave
dec
fadds
inc
pop
jmp
push
adc
cmpsb
xchg
sub
add
fsub
add
push
xchg
aas
mov
jo
inc
sbb
dec
bound
cwtl
pushf
push
and
mov
test
test
xor
xchg
mov
test
pop
sub
cld
add
cmpsb
push
sbb
mov
fsub
and
or
in
pusha
stos
loop,pn
fwait
push
adc
ds
add
cmp
imul
repnz
or
sbbl
lcall
cli
rclb
inc
or
pop
lahf
mov
xor
add
test
fs
cmp
pop
insl
xchg
int
lahf
and
mov
inc
jmp
aas
mov
in
cs
and
stos
dec
outsb
arpl
scas
dec
icebp
add
or
pop
adc
fxtract
test
push
out
clc
lock
add
lods
and
xor
and
outsl
sbbl
pop
pop
cwtl
mov
add
lock
push
fwait
out
pop
add
adc
mov
lods
mov
and
add
fwait
dec
mov
sarb
mov
pushf
data16
add
cmp
mov
add
or
into
cmp
mov
pop
pusha
mov
scas
addb
je
add
lahf
jge
arpl
dec
pusha
enter
sbbb
push
add
sbb
lret
mov
movsb
mov
xchg
adc
inc
adc
imul
add
das
add
dec
cmpsb
sbb
sbb
mov
fcoms
arpl
adc
nop
loopne
test
xchg
mov
andb
and
inc
ret
jg
lret
dec
pop
add
and
mov
jns
inc
sbb
subl
test
add
enter
push
dec
xor
rcrl
mov
pushf
inc
lods
add
push
xchg
lock
inc
js
pop
adc
xor
and
cmpb
add
enter
enter
lret
mov
pop
pop
add
dec
or
add
adcb
orb
adc
add
mov
cli
aam
mov
add
test
enter
test
jle
ss
jge
adc
sub
mov
add
incb
jnp
aas
cmp
js
hlt
cwtl
add
or
stc
iret
adc
cltd
mov
js
or
in
xor
and
orl
in
pop
movsl
add
ficompl
repz
inc
int3
fs
mov
cmp
jp
adc
sbb
pop
das
nopw
add
add
add
addr16
jg
sbb
add
in
inc
sbb
xor
sbb
push
jl
xchg
scas
mov
bound
cmp
mov
sarl
pusha
jge
xchg
mov
fs
mov
mov
cvtpi2ps
push
cmp
enter
cltd
cltd
pushf
jnp
pusha
mov
xchg
sbb
jle
sar
out
les
pusha
push
in
or
andb
pop
test
cwtl
dec
pop
rolb
lock
lret
inc
enter
sbb
mov
dec
pushf
insl
es
rolb
xor
in
ss
adc
int3
add
lret
in
xor
inc
cmp
sbb
xchg
xor
pop
add
lods
stc
push
add
aam
clc
add
test
aad
mov
fidivl
das
mov
adc
cmp
dec
dec
xor
inc
add
adc
int
movsl
call
flds
sbb
cwtl
push
mov
scas
test
jp
and
cwtl
mov
repz
xor
daa
mov
jnp
add
inc
cmp
add
mov
loopne
cwtl
adc
in
inc
xchg
xchg
cmpb
xchg
add
mov
mov
and
push
in
mov
adc
loopne
dec
mov
and
add
pop
add
es
int3
les
or
mov
xchg
lock
add
loop
aaa
cmpsb
mov
add
ja
mov
paddsw
fsubrs
fwait
add
mov
pop
or
iret
add
sbb
test
inc
adc
out
aam
add
dec
mov
aas
loope
hlt
aaa
pop
sbb
in
jmp
in
lahf
add
test
test
loopne
bound
dec
adc
add
lret
and
stc
xor
mov
jle
jo
into
ret
add
out
pusha
stc
cmp
out
mov
hlt
pushf
aad
movl
icebp
test
int3
add
cmp
jp
xor
sbbb
cmp
add
mov
nop
pop
dec
pusha
ret
and
faddl
addb
rclb
stos
dec
loopne
pop
addr16
push
movsl
or
and
pop
xchg
pop
jg
cs
jge
inc
daa
std
imul
movsl
add
xchg
flds
cmpsl
fdiv
leave
add
xchg
dec
outsl
xchg
mov
movsl
pop
push
add
imul
test
adc
dec
dec
xor
and
test
xchg
xor
adc
cmpsb
cs
adc
push
fcomps
rorb
push
xchg
dec
adc
cmp
pop
insb
or
add
add
push
add
imul
or
insb
add
inc
addb
jl
fisttps
sbb
outsl
call
lea
mov
push
sub
cltd
pushf
jns
sbb
mov
pop
adc
mov
sbb
push
pop
pop
loopne
in
lea
xchg
cld
cmp
cli
add
push
xchg
int
add
loope
lds
push
ficoml
pusha
or
clc
fiadds
aam
or
jmp
jae
movsb
or
add
inc
movsl
mov
mov
aaa
cmp
push
push
pop
mov
jle
sub
int3
and
es
cmp
sahf
nop
adc
les
inc
mov
xor
push
cld
mov
fidivrs
sahf
xchg
mov
sub
add
in
jnp
sbb
repnz
stos
jo
dec
lock
lods
add
xchg
mov
push
xchg
pop
cmp
xor
jmp
and
mov
xchg
sbb
imul
rolb
lret
fbstp
popf
mov
leave
sbb
jp
cltd
cltd
cltd
lods
jnp
or
psrlq
cmp
xor
xchg
dec
xchg
nop
adc
clc
jns
pop
pushf
sub
pop
dec
sbb
add
mov
dec
sbb
push
add
jno
cmpsb
cmp
push
hlt
cmc
and
aad
mov
add
dec
loope
pop
xchg
xorb
jae
pop
ficoms
mov
jne
xchg
adc
or
push
lret
mov
jns
pushf
add
adc
adc
int3
sbb
les
inc
enter
pop
int3
aam
add
repz
mov
pop
jae
movsb
and
add
in
dec
push
cmp
add
call
sbb
mov
aaa
xchg
push
mov
xchg
lahf
fadds
les
aaa
popf
test
lock
add
push
jnp
das
adc
push
jmp
fnstcw
dec
clc
bound
cmp
jns
pushf
xchg
add
cmp
pop
sarb
adc
andl
mov
stos
pop
jmp
test
jl
mov
mov
cwtl
mov
xchg
adc
adc
push
outsl
push
sarb
pop
cld
ret
inc
xor
mov
fs
xchg
mov
inc
ljmp
scas
mov
imul
add
ja
mov
leave
aam
mov
scas
cmpsb
daa
pushf
mov
rolb
mov
dec
jmp
or
and
hlt
icebp
call
notb
cli
xchg
je
pop
int
mov
dec
rclb
pusha
xchg
sahf
test
mov
push
push
orl
mov
imul
rolb
jmp
xchg
lock
push
jl
jg
push
and
testl
pop
push
add
xlat
sbb
cmpsl
or
fadds
cmp
add
cwtl
pop
fnstsw
repz
lret
mov
dec
sbb
ds
pop
lock
adc
test
pop
add
mov
js
int3
je
iret
or
popa
enter
jge
add
and
dec
sahf
pop
enter
xchg
or
lcall
lret
sbb
cmp
push
xchg
sbb
lods
scas
daa
add
sbb
xchg
sti
outsb
or
call
dec
in
nop
mov
mov
and
test
pop
jo
int
xor
inc
sti
lds
ficoml
jbe
jnp
xchg
dec
pusha
rcr
ds
pop
repz
stos
in
out
push
push
mov
or
int3
push
sub
ds
fdivrs
outsl
aas
shl
in
iret
fistl
pop
hlt
jo
gs
xor
lcall
outsl
subb
mov
xchg
pusha
pop
inc
shl
lahf
hlt
dec
aam
in
dec
mov
les
dec
pop
adc
add
rolb
add
clc
push
xchg
sbb
dec
adc
jg
loope
scas
sub
push
jmp
jbe
adc
mov
popa
mov
cld
dec
lock
dec
inc
test
addr16
jl
leave
and
cmp
or
clc
add
and
pop
imul
jns
sub
mov
cmpsb
out
jge
rorb
push
repnz
pushf
fsubr
pop
xor
and
sarb
aam
inc
loopne
pushf
andb
lds
clc
rcrl
mov
inc
inc
rorb
iret
inc
jl
js
orb
mov
jmp
push
dec
ret
outsl
jnp
dec
add
test
in
repnz
cli
add
cwtl
aad
inc
out
inc
add
fiaddl
lret
daa
jg
mov
adc
xorl
or
mov
dec
push
mov
or
jge
push
mov
lea
fmuls
mov
mov
cmp
dec
aam
lods
jb
leave
test
sbb
je
cmp
dec
ret
push
loop
inc
mov
sub
inc
enter
mov
pop
add
mov
cmp
pop
sbb
call
xor
push
cmp
dec
inc
push
add
dec
sarl
push
mov
add
adc
je
icebp
ds
int3
mov
inc
xchg
loopne
orb
cmp
pop
inc
cmc
push
cli
scas
popa
shl
sub
je
mov
jbe
es
stc
rolb
add
addl
pop
fldt
mov
push
push
cwtl
nop
clc
data16
mov
lods
add
jbe
adc
or
adc
test
xor
xor
leave
push
or
add
jb
nop
cmp
push
outsb
imul
in
xor
and
cmp
add
int
push
xor
nop
push
xor
into
add
out
ljmp
icebp
inc
add
outsb
cli
and
cwtl
adc
das
adc
adc
sbb
mov
fcomps
mov
sbb
das
adc
add
in
or
dec
or
or
jo
fcmovnu
nop
add
adc
mov
scas
push
cmpsl
adc
and
mov
pusha
xchg
adc
and
lret
mov
sub
int
xorb
cmc
or
daa
in
or
movsl
lods
adc
cltd
push
sbb
or
movsl
andb
cs
sub
xor
pop
std
pusha
sbb
inc
add
repz
addl
cmpb
lcall
stos
jne
jge
jno
xor
dec
rolb
call
gs
fdiv
std
xchg
loop
test
pop
adc
dec
jg
hlt
cmp
in
or
xchg
inc
xor
jge
ljmp
and
mov
sbb
mov
xor
add
in
cltd
jmp
adc
push
test
xchg
rolb
int3
inc
inc
dec
nop
dec
rolb
lock
mov
add
or
out
shl
call
loope
sub
sbb
pop
sbb
pop
xchg
inc
out
dec
and
dec
add
faddl
mov
ret
add
mov
nop
orl
push
cmp
data16
and
or
adc
cli
xor
imul
pop
out
aad
jecxz
add
and
add
bound
mov
sub
ss
fdiv
inc
in
mov
dec
add
add
fdiv
fs
inc
sub
pop
mov
sub
insb
lea
fstpt
das
cmp
data16
andb
stos
fiadds
and
pusha
xor
add
int3
or
and
aas
sub
push
sbb
mov
pushf
les
jmp
or
out
xor
push
sbb
leave
xchg
adc
adc
xor
sbb
add
fiaddl
mov
imul
pusha
mov
sbb
pop
imul
enter
pop
loopne
pusha
inc
adc
in
add
loopne
insb
movsb
xchg
inc
mov
xchg
fwait
xor
push
jnp
stos
add
das
pusha
stc
inc
or
mov
adc
loopne
test
test
in
add
shlb
popa
and
pop
or
fisubl
adc
stos
adc
pop
cltd
inc
pop
or
loopne
or
out
or
add
sub
ds
add
mov
incl
aaa
and
add
fucomp
insb
or
popa
scas
in
orl
das
cwtl
lea
add
jno
jge
dec
xchg
rclb
sbb
loop
jecxz
cli
arpl
push
and
les
mov
mov
jge
iret
sbb
jns
sbb
pop
loope
sbb
dec
out
rol
mov
sarb
sub
iret
sub
stc
jp
xorl
pop
cmp
xchg
andl
gs
mov
sbb
cmpb
test
test
in
shl
pop
xlat
and
cld
add
cmc
push
clc
sub
sub
push
mov
cmpsb
inc
push
mov
push
jb
mov
in
or
jae
xchg
push
sub
das
mov
add
shl
jbe
lea
add
sbb
into
inc
fcmovnb
shr
push
add
rol
lcall
or
pop
jne
inc
mov
bound
add
pop
push
movsb
adc
and
sbb
pusha
bound
cmp
fsubrl
stos
test
fnstenv
cmpb
push
adc
mov
adc
cwtl
pop
adc
xor
js
ss
out
push
inc
inc
push
les
int3
cwtl
xchg
cmp
adc
adc
xchg
fidivrl
and
sti
addb
je
and
and
cmp
cwtl
inc
mov
and
ret
cmpsb
sbb
stos
mov
jp
add
and
test
push
sub
sbb
bound
push
cmpsl
add
jne
jnp
add
dec
stos
jo
dec
fadd
sbb
sub
sbb
icebp
add
sbb
in
add
lcall
int
and
aad
add
cmpsl
mov
and
cmc
inc
xor
xor
cmp
dec
cmp
mov
imul
mov
loop
jecxz
das
in
cltd
inc
or
lds
jno
add
bound
stos
add
ja
xchg
or
in
sbb
jge
roll
addb
cltd
lods
dec
xor
pushf
adc
dec
repnz
adc
shrb
jns
inc
daa
and
jl
add
jnp
lds
bound
or
cwtl
daa
sarb
adc
popa
inc
sahf
adc
mov
cmp
cli
lret
iret
sbb
lea
cmp
add
dec
jg
pop
push
sub
les
imul
xorb
in
roll
and
insb
in
push
push
mov
xchg
dec
or
sbbl
mov
push
shlb
push
jnp
mov
add
push
sub
mov
hlt
gs
mov
ljmp
andl
ret
mov
and
jb
out
hlt
repz
mov
mull
sbb
nop
jns
pusha
aaa
dec
inc
scas
adc
nop
mov
insb
ds
outsb
mov
pop
mov
adc
subb
adc
xchg
xchg
jnp
ret
push
fsub
aas
xchg
rclb
iret
clc
dec
dec
test
hlt
cmpb
and
lret
add
mov
fwait
pusha
xchg
cmp
cmp
jmp
je
cli
or
xchg
pop
inc
in
jge
insl
add
push
mov
aad
push
mov
xchg
mov
mov
dec
cmpsb
add
pop
das
ljmp
data16
dec
out
jl
and
and
hlt
call
sbb
or
jne
inc
inc
je
inc
sub
repnz
imul
imul
jmp
sub
stc
out
in
add
mov
push
sub
int3
add
pop
lock
jg
mov
mov
jae
mov
lret
mov
cmp
dec
push
std
lret
and
pop
adc
jnp
sbb
pop
fildl
out
gs
out
jae
push
enter
add
into
mov
mov
add
lcall
add
pop
pop
mov
xchg
cmp
sub
inc
mov
add
sahf
cs
pop
lcall
adc
movb
or
scas
stc
iret
pop
decb
loopne
jecxz
mov
jge
lods
jle
mov
das
mov
jno
jmp
fsubl
push
xchg
add
mov
cmp
mov
test
sub
aaa
mov
pushf
je
inc
cmpsl
jge
test
repnz
push
aaa
subb
push
mov
pop
adc
dec
dec
mov
ret
inc
ja
cwtl
subb
xchg
and
or
sbb
jl
pop
inc
les
xor
ret
mov
lret
inc
xchg
pusha
out
pop
mulb
push
push
lods
psubd
mov
xchg
and
sbb
push
adc
out
adc
decb
add
outsl
sbb
jg
sub
push
sub
jnp
jmp
pop
pushf
or
popf
jge
cmp
push
adc
clc
rcl
in
jo
push
sub
inc
adc
data16
nop
jo
mov
sbb
sub
push
test
test
and
pop
xor
pop
add
mov
jl
lods
or
add
push
movsl
pop
or
xchg
fstl
in
jb
repnz
movsl
int3
cwtl
mov
jmp
dec
shr
loop
and
cmpsb
movsl
lock
xor
jmp
inc
adc
pop
sub
stos
cmp
dec
mov
pushf
and
pop
add
push
cmpsb
sbb
add
or
clc
jnp
ror
icebp
fs
jg
mov
add
lods
outsl
mov
sbb
add
cmpsb
mov
or
pop
add
jae
ja
cwtl
ficoms
adc
int
sub
add
nop
mov
loopne
int
rclb
ds
lahf
add
mov
inc
ret
repz
bound
dec
mov
stos
mov
inc
add
adc
xchg
add
and
cmp
and
enter
xchg
pop
out
inc
int
ret
pop
xchg
adc
adc
add
sbb
inc
cld
push
sub
loop
add
sbb
xor
repz
fidivl
rcrl
pop
icebp
add
ss
cmp
fildll
ja
push
shlb
push
enter
loopne
inc
push
inc
and
mov
inc
pop
aam
add
rcrb
out
or
inc
repz
push
add
gs
mov
add
xchg
or
push
add
mov
mov
and
lds
pop
xor
add
cld
test
push
into
push
pop
addl
decb
test
inc
lock
add
out
xchg
lods
pushf
fiadds
outsb
mov
push
imul
jmp
je
sub
int3
or
jb
fistpll
lods
cmpsb
inc
add
inc
add
push
dec
inc
sbb
or
fistpll
orb
or
dec
in
add
mov
and
cmp
fildl
add
inc
shl
or
cmp
mov
add
xchg
xor
nop
mov
adc
xchg
test
jg
out
push
andb
std
pusha
cmc
fisubrs
inc
stos
add
dec
lret
jbe
andb
insl
and
jns
push
add
sbb
mov
and
push
mov
rclb
std
rcl
add
cmp
subb
int
push
xchg
in
mov
pop
jb
sbb
int3
xchg
dec
enter
mov
addr16
rcrl
jne
mov
mov
iret
shrl
lret
pop
mov
sbb
mov
xchg
stos
mov
xchg
test
push
ret
repnz
pop
add
iret
popa
inc
sub
pop
mov
fldl
outsb
adc
subb
outsl
pop
jge
pop
mov
idiv
add
pop
out
xchg
jmp
fs
sbb
jns
inc
add
jo
xchg
mov
insb
adc
jbe
stc
mov
jl
xchg
mov
push
fcomps
xchg
fs
pop
jno
repz
enter
in
mov
rolb
shll
pop
inc
and
sbb
outsl
sbb
cmp
jmp
int3
es
mov
shl
xlat
add
cmp
push
ljmp
inc
xchg
inc
lock
in
mov
adc
mov
stos
xchg
xchg
loopne
push
ds
push
xchg
test
sub
or
dec
sub
sub
mov
inc
nop
leave
mov
mov
and
mov
push
jae
scas
mov
stc
js
inc
hlt
outsb
cld
xor
sbb
inc
xchg
imul
adc
pushf
aad
push
pop
add
push
mov
add
std
popa
jle
lahf
aas
addl
aaa
sbb
jns
movsl
cmc
and
mov
add
ja
test
add
cmp
add
aaa
adc
and
nop
push
fwait
ret
mov
daa
push
mov
fiaddl
pusha
test
adc
and
xchg
mov
add
rcll
stos
mov
rcrb
addr16
sub
cmp
push
add
ljmp
pop
loope
outsl
pop
stos
adcb
fbstp
add
test
sbb
imul
ret
divb
out
aam
push
xor
cmp
call
repz
sbb
add
stos
test
xor
add
dec
pop
cwtl
jmp
out
xlat
sbb
mov
and
ss
xor
in
sbb
xlat
add
xor
adc
out
nop
jo
adc
test
cmp
fcoml
rcrb
xor
add
cwtl
imul
jne
sub
loop
xchg
jbe
dec
jb
add
js
inc
aaa
cli
shl
add
pop
xor
popf
lock
fildl
pop
sub
movsl
nop
push
xchg
insb
add
fldenv
test
mov
cli
lds
mov
inc
inc
ret
call
pop
mov
push
dec
adcb
les
in
inc
mov
mov
pusha
mov
add
sub
fs
add
loop
call
and
mov
mov
cld
add
push
js
cmpsb
dec
test
add
sub
and
sub
push
add
pop
popa
inc
test
and
pop
pop
mov
stc
int3
mov
cmp
dec
inc
and
add
jl
popa
dec
mov
mov
mov
addb
sarl
jmp
cmpsl
inc
sub
add
pushf
lea
stos
jge
addr16
adc
pusha
cmp
add
shll
mov
add
std
ja
mov
xor
and
fdivl
inc
push
dec
les
cmp
out
xchg
add
in
popf
adc
cmp
insb
mov
test
call
addl
lea
sbb
int3
xor
loop
dec
insb
push
mov
dec
add
xchg
dec
inc
loope
popf
pop
icebp
inc
adc
mov
adc
loope
add
pop
cmp
add
push
in
cmp
gs
mov
in
js
into
cmpsl
or
daa
test
add
push
and
loop
add
sub
xchg
xor
imul
add
add
add
lock
or
jg
cmpb
xchg
loope
imul
test
push
fsub
inc
inc
adc
inc
or
and
cmp
push
add
in
dec
std
xchg
push
nop
adcb
fstps
jne
jg
or
cmp
or
ss
push
cmpl
mov
lods
mov
aaa
mov
or
or
jmp
fdivr
cli
pop
push
push
sub
inc
pop
cmpsl
xlat
xchg
mov
xor
in
or
subb
push
cmp
ljmp
loopne
pop
leave
loopne
loope
jmp
fcmovu
int3
add
xchg
mov
dec
add
cmp
je
inc
pop
xor
push
sbb
or
push
pop
jae
xchg
das
xorb
mov
inc
in
inc
add
mov
xor
outsb
int3
arpl
xchg
add
cs
push
in
pop
sbbb
dec
push
mov
push
sbbl
sub
dec
lods
push
mov
add
pop
xor
sub
add
nop
ljmp
pop
repz
fmuls
sbb
or
sub
jbe
dec
clc
call
jl
push
orl
add
cmp
mov
xchg
cmp
push
or
pop
jmp
cmpl
jp
jg
rorb
dec
adcl
push
lock
pusha
rorb
pop
push
sti
test
rcrb
addb
into
or
ret
xor
push
hlt
aas
push
jge
int3
hlt
adc
loopne
pusha
sub
out
inc
pop
sub
mov
int
adc
lea
jg
sub
insb
push
je
in
cmp
add
jae
js
ss
push
loopne
pusha
or
sbb
pop
loopne
xor
mov
stc
dec
in
mov
jmp
outsl
stos
sar
stos
inc
add
jle
or
adc
pusha
cmp
mov
push
shlb
push
add
icebp
bound
jl
xor
adc
sub
xor
ljmp
ret
inc
inc
fsubr
insb
mov
jle
mov
call
aaa
insb
faddl
fcmove
xchg
jmp
and
push
mov
pop
shl
cmp
in
and
cli
decb
movsl
inc
cmp
push
out
rorl
pop
shrl
inc
lods
mov
cmpb
jns
sbb
or
ret
cmp
test
sub
sti
or
inc
xchg
add
lcall
pop
loope
inc
imul
hlt
xchg
decl
mov
add
adc
mov
add
adc
xchg
push
sbb
xor
inc
aas
mov
stos
cmpsl
add
lods
inc
add
and
mov
adc
inc
inc
inc
cli
pusha
scas
mov
pop
xor
test
mulb
jg
pop
or
jmp
dec
push
add
jp
jns
in
fadds
fdivl
and
rcrb
pop
lcall
nop
adc
testl
pop
loopne
fcomps
add
mov
in
or
push
outsb
xor
add
sbb
jmp
scas
insl
lahf
pushl
and
cmp
orl
test
inc
lods
shr
xor
test
or
mov
or
cli
add
in
dec
ss
push
fildll
push
lahf
aaa
faddl
pusha
mov
rorl
bound
gs
mulb
sti
cmp
jo
sub
lcall
lsl
popf
jmp
push
sub
cmp
mov
into
jbe
adc
sbb
repz
add
ret
sarl
push
sub
lret
jae
mov
jno
add
mov
aas
imul
cmp
jnp
and
mov
pop
dec
push
add
mov
add
ljmp
lret
mov
xor
test
adc
mov
out
test
or
xchg
dec
adc
addr16
jns
sbb
add
nop
cmpb
int
lock
and
popf
pop
push
aam
bound
sub
sbb
sub
fucom
dec
xchg
add
push
mov
xchg
inc
call
push
enter
or
xor
or
sub
cmp
add
insl
dec
sbb
jo
mov
mov
and
jae
pusha
add
fimull
and
rcll
sbb
add
adc
ret
bound
ljmp
out
sbb
add
mov
inc
sub
adc
lret
jl
cmc
rcl
push
jns
xchg
dec
rcl
mov
sahf
push
lods
hlt
jmp
sbb
loopne
mulb
sarb
mov
or
pop
addr16
sub
cs
mov
jge
xchg
loopne
cmp
test
in
aas
movsb
and
cld
jle
std
sub
mov
test
insb
incl
pop
loope
inc
cmp
shlb
mov
sub
shr
sbb
sbb
jbe
hlt
mov
jmp
in
push
clc
add
or
inc
shrb
ss
push
pop
jae
rclb
jne
mov
cmp
out
leave
lcall
mov
jp
pushw
shll
shrl
mov
inc
push
stc
add
xchg
and
inc
rcrl
add
ljmp
shrl
xor
imul
cmp
push
adc
adc
xor
add
fdivl
cmp
movsl
into
jno
add
push
cltd
hlt
sub
ficomps
sbb
cmp
add
sbb
xchg
aam
add
js
pop
mov
push
nop
bound
xchg
in
pop
xor
fsts
mov
add
pop
cmp
pop
data16
mov
imul
and
push
cmp
or
and
adc
mov
lock
fdivrl
mov
lods
gs
cmpb
cltd
pop
icebp
cmp
les
mov
inc
mov
cmp
pop
adc
repnz
sbb
and
adc
push
mov
imul
jle
loopne
adc
dec
mov
jns
push
mov
pop
int
jns
xchg
sti
or
pop
lds
sub
jne
test
push
inc
repnz
pop
int3
dec
aad
and
adc
call
scas
int
dec
and
xchg
push
insl
test
sub
or
notb
pop
pop
int3
inc
mov
cmpb
in
rep
js
test
cld
cltd
in
cmc
in
bound
mov
and
sarb
sub
mov
imul
jle
mov
cmpb
jns
ret
cmp
and
add
pop
pop
pop
rol
jne
pop
inc
inc
sbb
jg
pop
in
es
rorb
xchg
je
out
mov
xor
xor
sbb
jmp
sbb
call
or
jae
cmp
int
dec
jns
cmp
mov
pusha
sbb
imul
adc
xchg
mov
push
mov
sbb
fstl
addl
lret
lcall
enter
shlb
into
in
jp
push
clc
cmp
add
jle
pop
dec
mov
mov
fwait
bound
and
and
xor
loopne
jle
ret
mov
mov
xchg
add
and
mov
lea
ljmp
jbe
fisubrl
shlb
xchg
pop
out
in
xorb
mov
fsubs
sbb
cmpsl
add
cltd
shrl
cmp
loop
enter
adc
or
andb
insb
inc
lcall
js
add
jg
aam
ljmp
add
iret
sti
out
bndmk
sbb
test
xchg
out
lock
ret
shrb
jo
pop
mov
das
jecxz
cmpsl
out
scas
xchg
push
and
in
inc
inc
sbb
jnp
pop
rcl
jo
and
lock
cmc
clc
adc
or
or
rclb
adc
push
push
and
das
or
mov
xchg
adc
pop
add
lret
mov
pop
cmp
in
mov
lcall
pop
mov
xor
adc
clc
push
mov
inc
lds
addb
lea
cmpsb
sub
push
pop
mov
out
sub
das
icebp
sub
add
or
sub
loope
mov
insl
loopne
aaa
jo
push
sbb
inc
xorb
hlt
or
dec
loopne
dec
jns
sbb
sub
inc
and
in
add
adc
test
popa
insl
test
subb
mov
test
imul
loop
sub
imul
call
jns
loopne
out
in
push
stc
sarb
sbb
jecxz
aad
sub
dec
add
lods
stc
add
adc
xchg
xchg
pusha
mov
inc
rcrl
xchg
add
hlt
fmull
mov
inc
push
test
imul
dec
jge
dec
in
xlat
xchg
mov
jmp
sbb
out
adc
and
outsb
xchg
in
out
addr16
in
pop
add
ds
fsubs
test
pop
lods
lmsw
sti
daa
data16
ljmp
mov
mov
push
and
pop
sub
gs
in
pusha
dec
bound
xchg
pop
negl
orb
add
lahf
mov
inc
push
test
mov
pop
mov
test
fs
add
dec
scas
lods
in
and
xor
divb
fwait
sbbl
mov
xchg
arpl
in
roll
add
pop
xchg
aaa
test
xor
pop
push
sbb
andb
pop
mov
adc
and
mov
or
add
das
ret
arpl
rcrb
adc
jbe
adc
add
jmp
rcr
lcall
scas
xchg
outsl
lock
fucomp
add
push
inc
cmpsb
and
adc
add
push
test
add
repnz
fsts
push
lock
fildl
out
loope
jns
test
dec
mov
sbb
test
adc
aaa
xchg
sub
push
add
sub
push
in
enter
add
pop
cmp
or
xor
jb
adc
clc
adc
jge
xor
stc
je
cmp
test
adc
imul
adc
pop
test
mov
mov
mov
fwait
out
xchg
or
insl
sub
sbb
push
xchg
add
push
ss
push
xchg
ljmp
sahf
xor
stos
loopne
mov
mov
fisubs
add
test
ficoms
out
cmpsl
add
enter
or
add
or
jb
adc
xorb
daa
andl
mov
mov
rolb
insl
xchg
add
mov
xor
out
adc
fs
loopne
lea
and
js
adc
mov
outsb
loop
or
mov
inc
xor
stc
mov
push
and
inc
mov
adc
loop
lret
xor
cmp
xor
cmp
movsb
or
xchg
inc
add
pop
push
add
sub
add
imul
sar
pop
lret
inc
js
adc
mov
dec
pop
cmp
dec
icebp
icebp
sbb
in
pop
sub
pop
xchg
enter
inc
stc
and
insb
mov
mov
sub
fiaddl
push
leave
movsl
popf
daa
ja
in
cld
mov
xchg
sbb
inc
jns
sbb
or
aaa
inc
fs
sub
in
inc
sar
aas
nop
and
jge
adc
in
les
mov
cli
cli
add
sbb
cld
cs
pop
js
push
sbb
hlt
mov
in
sbb
adcb
test
xchg
and
sub
mov
sarb
call
inc
ja
inc
mov
lret
xchg
aas
jecxz
pop
cmpb
mull
mov
lahf
lock
xor
sbb
jle
rcrb
mov
pop
fnstsw
fs
add
cmc
ret
sahf
or
rorb
std
mov
aam
lret
xchg
adc
add
pop
movsb
push
xchg
mov
mov
dec
ror
testb
adc
lahf
insb
add
adc
inc
xchg
mov
out
je
lea
xlat
push
xor
sub
pop
cwtl
pop
insl
rolb
jmp
xchg
adc
in
lea
out
imul
dec
pop
rclb
adc
lods
add
mov
xchg
push
iret
clc
sbb
mov
out
dec
add
clc
jns
dec
scas
retw
and
shlb
pop
mov
ficompl
and
xchg
fs
pusha
insl
cmp
mov
lcall
pop
inc
mov
inc
adc
sti
lcall
in
pusha
dec
cmpsb
xchg
cli
das
adc
xor
test
mov
out
push
data16
pop
or
aam
add
jmp
call
fcoms
mov
shr
sbb
pop
mov
cmp
add
sub
and
inc
rcrb
push
xchg
mov
fadds
sbb
sub
mov
in
and
inc
adc
mov
mov
insb
add
mov
mov
pop
cmp
add
xchg
out
xor
push
out
mov
fsub
mov
add
in
inc
adc
mov
add
xlat
and
lea
add
pop
or
clc
mov
in
inc
stc
add
test
adc
lods
cmp
sub
sbb
xor
rolb
rcl
lahf
jmp
mov
add
adcb
loope
sub
or
in
out
xorb
aad
cli
int
jo
pop
aas
in
adc
cmp
clc
xor
adc
mov
lret
mov
xchg
add
mov
ljmp
ss
scas
mov
add
mov
inc
or
dec
and
dec
and
stos
fucomp
in
insb
push
xor
loope
loope
imul
cmp
jle
inc
leave
add
push
xchg
adc
je
inc
test
xlat
cmpsb
int3
add
ffree
sbb
xor
pusha
ljmp
jo
cld
lods
adcb
scas
mov
jnp
add
leave
lods
loope
in
sbb
fisubrl
mov
arpl
fwait
data16
dec
faddl
push
sbb
add
popf
out
cmp
rclb
xlat
and
inc
push
pusha
cmp
pop
aaa
and
insb
push
sbb
loopne
sub
sbb
dec
faddl
data16
dec
mov
lods
subb
xchg
js
mov
mov
push
popf
clc
mov
push
dec
push
adc
imul
and
pop
pop
adc
sub
std
test
jne
or
push
jg
and
pop
fs
es
dec
add
pushf
xchg
pusha
xchg
or
mov
test
gs
in
imul
pop
test
inc
hlt
xchg
adcl
das
fbld
fadds
mov
add
cmc
adc
adc
xchg
xchg
or
add
xchg
sbb
inc
das
out
inc
xor
test
xchg
add
cmp
jnp
aad
adc
mov
in
mov
add
cmp
popf
jle
jecxz
mov
xor
imul
out
add
jnp
jecxz
in
adc
pop
ficoms
mov
add
aam
test
or
jo
pop
pop
out
mov
inc
xchg
arpl
imul
sbbl
add
xor
fcomip
dec
lahf
sbb
iret
pop
or
fnstcw
roll
pusha
into
dec
enter
sbb
test
jle
in
into
sbb
jmp
call
add
fxch
lock
mov
stos
xchg
inc
xchg
mov
loopne
adc
subb
xchg
sbb
out
cli
or
stos
ja
add
cmp
sbbl
dec
adc
add
out
jbe
jo
or
test
and
sbb
dec
push
and
dec
jne
or
mov
cwtl
pop
inc
in
add
mov
loop
pusha
faddl
shr
lahf
lods
push
inc
add
mov
or
insb
mov
and
push
iret
test
mov
jmp
cli
fidivs
dec
push
addl
scas
movsl
loopne
mov
pop
insb
sarb
xor
int3
addr16
js
std
mov
js
sub
test
pop
stc
mov
cmp
sub
testb
sub
jmp
out
push
popf
sbb
rcrb
int
daa
xor
stc
pop
fincstp
sbb
add
mov
jmp
push
aas
fsubs
mov
jl
push
add
pop
dec
push
mov
dec
and
rorb
xchg
push
mov
push
or
repnz
jmp
push
add
or
pop
adc
test
fsub
cmp
test
add
add
rcr
inc
insb
in
xchg
add
push
mov
jno
xchg
add
pusha
dec
pushf
mov
scas
mov
xor
test
add
popf
or
xor
movd
or
movsl
fs
orl
sub
cld
out
lahf
call
mov
mov
clc
cmp
dec
mov
inc
call
nop
pop
pop
lea
dec
std
dec
sub
add
sti
sub
mov
dec
sbb
push
or
in
decb
test
nop
lods
lds
repz
mov
adc
jp
add
dec
lret
or
aad
fcoml
or
loop
adc
sub
popa
push
nop
aam
adc
add
sets
adc
mov
mulb
clc
pop
add
out
into
icebp
loopne
pop
xor
daa
daa
xchg
dec
sub
out
ret
cltd
test
shl
hlt
lahf
mov
adc
mov
aas
add
xchg
lds
inc
movsl
jmp
test
nop
ret
mov
xchg
push
adc
pop
adcb
adc
inc
ret
call
push
pusha
ja
sbb
mov
nop
jp
jae
rolb
mov
cwtl
stos
push
xor
lahf
or
and
pop
jmp
in
or
es
add
call
loop
pop
mov
in
jg
loopne
mov
mov
xchg
call
cmp
clc
cmp
mov
jmp
decl
stos
cld
and
in
push
mov
mov
mov
or
cmp
aam
lds
sub
xor
or
popf
jecxz
scas
loop
in
dec
add
or
inc
or
ja
pop
dec
and
insb
mov
xor
jmp
inc
mov
aaa
pop
and
pop
xlat
push
add
mov
cld
data16
inc
add
mov
aam
push
mov
scas
out
mov
add
in
jae
push
pop
int
or
outsb
pop
adc
adcb
push
add
addl
adc
pop
in
jmp
mov
icebp
xchg
pusha
sbb
and
sub
add
out
jg
movsl
xchg
mov
nop
add
sbb
and
xor
cmp
add
bound
mov
xchg
pop
int
movb
sarl
cmp
add
ljmp
insb
lahf
adc
jle
jecxz
fildll
mov
jle
add
pop
insl
stc
add
adcb
ljmp
loopne
xor
out
xor
daa
cmc
inc
jb
les
pop
movsl
adc
push
push
xorl
push
mov
in
in
add
stos
mov
xchg
testl
movsb
pop
fwait
add
push
mov
mov
scas
pop
push
inc
icebp
add
rclb
xor
pop
or
js
test
inc
push
cmp
loope
push
xor
lret
jmp
mov
cmpsl
jo
cmp
hlt
add
es
or
in
pop
sbb
pushf
nop
js
xchg
ds
mov
mov
popa
and
mov
dec
and
call
mov
add
repnz
mov
pop
xchg
nop
push
and
dec
imul
xor
mov
mov
hlt
in
xchg
inc
add
cmp
testl
pop
xor
fs
shrl
pop
jne
lahf
push
fmul
dec
enter
pop
mov
xor
xorb
ljmp
mov
mov
call
adc
and
loop
pop
pop
lahf
jne
push
cmp
fbstp
psrad
shr
and
sbb
xchg
sub
add
sbb
add
out
add
jle
jg
add
inc
roll
jecxz
insl
mov
int
add
xchg
pop
test
pop
mov
or
and
cld
ljmp
mov
jl
aaa
cmp
fs
sbb
dec
adc
stc
sbb
add
mov
mov
call
push
hlt
add
lcall
jnp
or
repz
ret
and
mov
pop
je
ljmp
mov
inc
mov
es
mov
nop
jb
cmp
push
or
adc
mov
and
xchg
fcoms
movsl
dec
shrb
add
cli
add
pop
out
gs
mov
pop
and
test
lea
clc
cmp
mov
xchg
inc
das
rorb
inc
or
ljmp
orb
add
fs
cmc
out
and
pop
cltd
mov
add
cmp
loope
and
pushf
push
loopne
shll
and
sub
push
mov
pop
sbb
add
les
xchg
inc
sar
mov
cmp
cmp
dec
add
lock
frstor
and
adc
sbb
enter
inc
ret
mov
push
push
jnp
pusha
add
jne
push
mov
lock
dec
cmp
in
add
in
jle
in
push
jg
nop
cmp
lea
frstor
in
pop
xor
repz
xor
jne
loop
mov
inc
arpl
mov
dec
ljmp
mov
adc
push
adc
ltr
mov
jae
add
fidivs
add
scas
jne
pop
mov
sbb
adc
popf
mov
test
xor
lahf
je
or
mov
inc
xchg
add
sbb
cmp
js
fimull
add
add
pop
or
jns
jns
sbb
add
pop
push
inc
out
dec
jo
scas
pop
jp
mov
push
nop
mov
decl
inc
jo
mov
jp
fs
mov
testl
mov
fsubl
lcall
or
and
push
aam
add
in
adc
fdivrs
inc
icebp
jp
cwtl
adc
add
add
testl
mov
out
xor
sub
and
add
xchg
repz
dec
mov
mov
xor
popf
rorb
or
push
mov
xor
add
jo
sbb
mov
fs
or
aaa
ret
bound
adc
cltd
mov
add
add
js
pop
stc
in
sbb
adc
mov
test
cld
cli
mov
mov
sahf
pop
mov
or
cmp
pop
sub
and
xchg
mov
pusha
mov
scas
outsl
jecxz
or
adc
ljmp
fcoms
test
xcrypt-cfb
cmpsl
loop
insl
shl
fsubrl
mov
orb
jns
adc
ret
dec
mov
lret
pop
out
scas
fsqrt
inc
pop
sub
icebp
daa
cmp
xchg
xor
xor
push
jle
mov
add
add
push
jae
fdivs
pop
mov
xorb
test
jne
adc
imul
dec
or
fwait
or
add
pop
pop
nop
or
adc
fadds
cld
adcb
jns
dec
mov
fsts
cmp
xchg
fistpll
jecxz
enter
sub
inc
rclb
xchg
rcrb
cmp
jae
imul
dec
jne
sbb
das
decb
cmp
cmp
fs
dec
push
mov
fisubs
and
dec
imul
loopne
push
push
add
imul
shr
pusha
or
xor
loopne
pop
push
jle
rorb
sbb
aam
fldl
jmp
add
sub
cmp
add
mov
into
mov
imul
pop
rolb
mov
nop
rclb
cmp
aad
loop
mul
inc
push
push
enter
dec
pusha
or
xlat
js
xor
xchg
into
pop
or
xor
xor
notb
and
pop
push
sub
jg
lret
push
xor
cltd
mov
loopne
call
pop
out
loop
sbb
jmp
inc
fsubrs
and
inc
xchg
dec
dec
xor
mov
in
and
adc
pop
add
cmp
movl
adc
lock
fimuls
loope
mov
xor
dec
outsb
adc
js
add
fcoml
mov
or
pop
leave
lret
inc
std
mov
hlt
jmp
xor
pusha
push
xchg
xor
add
rclb
out
jae
add
push
inc
xor
dec
sbb
mov
sti
rcrl
loope
sbbb
enter
pusha
pusha
jmp
clc
add
cmp
adc
or
and
and
fidivl
cmpsl
leave
aaa
fwait
stc
push
rcrl
mov
inc
fildl
addl
sub
cmp
in
xchg
and
push
cmp
xor
fdivs
aad
or
and
cmp
nop
xchg
mov
aam
test
hlt
add
add
inc
clc
bound
push
call
xchg
jmp
mov
mov
nop
push
push
dec
and
xor
and
cmp
mov
mov
js
mov
fcomps
cmpsl
fcmove
rcrb
leave
call
ljmp
fmuls
jmp
push
and
sub
test
sarl
mov
mov
xchg
jno
cmp
and
xchg
popf
add
movsb
mov
mov
enter
addr16
adc
es
test
or
mov
add
ljmp
inc
add
in
xor
aad
scas
hlt
add
test
jno
xor
xor
adc
imul
push
sbb
jecxz
push
cmp
and
xor
stc
lahf
cmp
xor
push
call
dec
subb
lcall
popf
les
sti
orl
out
test
je
popl
lds
dec
mov
pop
ret
push
inc
adc
push
mov
xor
cmp
push
and
xchg
popa
xlat
inc
mov
push
sub
rolb
shlb
push
cltd
imull
cli
inc
sub
cltd
call
push
mov
mov
add
in
xor
xor
sbb
or
lock
sub
cltd
pusha
addb
sub
fidivs
cltd
xchg
xchg
pop
or
cmp
inc
outsb
add
cld
outsl
and
call
and
out
inc
jmp
pop
mov
andb
not
lea
jge
fbld
test
jo
dec
outsl
fsubrl
add
pop
mov
sbb
inc
or
andb
push
mov
shr
outsl
cmpl
out
addr16
jns
inc
sub
stc
popa
rclb
mov
scas
cld
push
ja
or
xor
mov
ljmp
push
sbb
and
insb
notb
mov
add
and
xchg
cmpl
sbb
and
dec
andb
popf
ret
add
cli
and
rcrb
inc
imul
push
pop
in
iret
or
daa
jno
test
inc
test
pusha
mov
inc
repnz
add
ja
mov
das
stc
add
adc
jge
fldenv
mov
dec
or
sbb
inc
and
jno
push
sbb
and
push
pusha
push
mov
lret
push
push
fisubs
add
inc
es
xor
sbb
js
and
adcl
mov
or
adc
lea
std
sarb
cmc
int3
fstpt
or
mov
cmp
dec
and
in
in
lea
inc
add
mov
xchg
or
sub
sbb
mov
add
dec
mov
in
fcomps
incl
and
push
nop
je
sub
jg
xor
adc
mov
add
roll
enter
je
pop
pop
aas
mov
push
aam
xor
push
jmp
sbb
movsb
sub
lds
cmp
xlat
in
push
add
ficomps
jmp
es
jbe
and
adc
pop
cmp
lock
or
add
jg
fstl
addb
call
xchg
loopne
pop
sbb
and
out
pop
xchg
xchg
adc
and
lret
mov
cmpsl
add
cmp
leave
lds
test
xchg
daa
push
js
mov
lds
push
bound
test
lds
mov
pushf
inc
push
pusha
xor
dec
sub
sbb
inc
mov
dec
dec
addb
push
and
sbb
inc
dec
and
lods
cli
ror
push
dec
movsb
lock
xor
test
enter
add
fwait
pop
jg
cmp
add
adc
push
add
imul
negb
add
out
jno
fcmovu
movsb
test
push
pop
in
bound
std
ffree
sbb
xchg
mov
jns
call
add
mov
pusha
mov
push
sarl
fwait
inc
mov
adc
mov
loopne
dec
and
xchg
test
negl
add
pusha
jae
mov
add
inc
inc
bound
repnz
xor
insl
add
dec
ret
xlat
rcl
dec
dec
jg
pop
or
add
mov
jle
ret
flds
loopne
dec
mov
xor
f2xm1
mov
dec
and
cmp
xor
pusha
subb
mov
fs
fisttpl
adc
add
ret
cli
jo
lock
mov
cs
sbb
sbb
popa
mov
shr
mov
stos
and
jmp
sbb
addb
pop
stos
jno
sbb
mov
mov
movsb
mov
mov
sub
stos
andl
or
jbe
roll
push
push
and
pop
cmp
xchg
aas
ja
popa
adc
pop
out
pop
in
or
xchg
xchg
call
sub
mov
mov
cwtl
add
push
jnp
scas
stos
pop
mov
stos
cs
and
pop
mov
movswl
jp
in
movsl
dec
les
lods
mov
movl
mov
inc
pop
inc
adc
loop
rcll
mov
sbb
test
stos
notl
adc
jmp
ret
fildll
enter
test
daa
mov
ljmp
repz
jge
push
xor
popf
sub
push
aas
sub
xchg
lds
nop
insb
test
mov
mov
xchg
dec
push
xor
pop
mov
nop
jecxz
inc
sbb
xor
xchg
cmp
nop
or
sbb
inc
or
movzwl
jge
inc
sbb
sti
jl
mov
gs
out
mov
or
dec
cld
inc
repnz
add
ds
and
addl
lea
pop
jle
add
or
insb
push
popa
call
rcrb
xor
or
pop
push
sub
jmp
add
mov
data16
aas
std
sbb
mov
sub
js
push
xor
add
push
lcall
mov
sbb
lock
push
xchg
pop
rcll
and
test
mov
rcr
enter
fstpl
inc
iret
insb
fs
pop
add
mov
cmpsl
or
add
pop
push
mov
lahf
mov
jge
adc
push
pop
call
cs
fadds
mov
pusha
add
repz
popa
sbbl
scas
add
xchg
popf
fwait
sub
push
pop
add
lds
or
stc
stos
and
sub
stos
nop
mov
sub
leave
mov
adc
mov
nop
addr16
push
dec
loop
inc
adc
aaa
xchg
mov
add
or
popf
xor
enter
cwtl
leave
out
mov
mov
sarl
fs
pusha
xchg
add
jp
pop
inc
lea
shlb
xchg
rol
mov
sub
popa
mov
add
mov
mov
mov
ja
loope
push
shl
sub
popa
sub
cmpsl
test
icebp
int3
jecxz
add
adc
pushf
cmp
xor
or
daa
adc
clc
cmpl
cmp
cmp
mov
fcomps
jg
fs
xchg
sbb
sbb
push
mov
cmp
pop
in
push
mov
cwtl
inc
nop
repz
add
movswl
movsb
aaa
loope
pop
imul
mov
test
xor
rolb
fidivl
xchg
xchg
mov
xchg
pushf
push
andl
jne
and
mov
hlt
mov
in
cmp
incl
aas
adc
jle
or
out
add
sub
ret
add
sub
sub
push
repz
or
aaa
adc
add
fsubl
inc
sub
pop
add
push
hlt
rdpmc
xchg
and
xor
xor
adc
stos
mov
push
xor
in
imul
inc
xchg
mov
cs
call
inc
fstl
mov
push
add
popf
sbb
push
out
mov
mov
dec
adc
sahf
inc
in
fstpt
daa
les
pop
mov
or
jns
mov
insb
xorps
sbb
jnp
dec
mov
lds
test
mov
popa
lahf
or
push
cmp
jb
xlat
jae
mov
add
and
add
and
imul
clc
mul
cmpsb
dec
loopne
sbb
jle
pop
pop
lock
icebp
adc
sub
outsl
jmp
and
fidivl
pop
movsb
push
add
test
divps
xor
cmp
orb
imul
loope
mov
or
sbb
pop
mov
test
pop
push
andb
add
call
inc
adc
inc
aam
add
mov
pop
call
cmp
add
add
negl
inc
inc
shl
sbb
adc
add
int3
insl
xor
enter
xor
pop
subl
xor
cmp
cmp
ja
popa
xchg
cmp
jae
andl
rcrl
xor
or
add
sarb
jmp
std
add
adc
add
sbb
fistl
sub
outsb
test
rolb
fstl
pusha
and
jo
sub
mov
pop
xchg
pop
rcrl
sbb
add
cwtl
mov
rcrl
add
les
mov
daa
mov
adc
jl
inc
icebp
add
idivb
dec
mov
stos
mov
cmpl
cmpsl
xor
or
mov
xorb
test
data16
sti
mov
test
xor
ret
add
or
sbb
js
add
mov
push
pop
or
repz
adc
pop
pop
pop
movzwl
mov
mov
and
cwtl
pop
and
or
and
call
mov
daa
sbb
adc
xor
repz
add
rcll
push
movsl
mov
in
bound
xorl
bound
lcall
xchg
cs
mov
sarl
nop
sub
mov
xchg
aaa
mov
push
mov
sbb
sbb
popf
lea
mov
in
addb
xor
jae
insl
movsl
mov
shlb
inc
cmp
test
lret
add
data16
inc
xor
push
int3
inc
pop
jecxz
jmp
cmp
mov
push
sysexit
in
xchg
sub
add
stos
adc
mov
pop
sbb
into
inc
mov
push
cmp
mov
add
mov
cwtl
pusha
mov
mov
es
sub
and
pop
and
mov
add
or
add
mov
xor
mov
stc
or
pop
cmp
adc
and
and
es
cmp
lcall
mov
and
pop
mov
roll
add
in
xchg
rcll
cmp
dec
lcall
les
cmp
int3
lret
repnz
add
xor
popa
xor
dec
lock
and
orb
cmc
pop
popa
sbb
jae
jo
push
mov
xchg
out
mov
inc
pushf
inc
imul
movsl
in
mov
sbb
cmp
and
mov
inc
add
inc
and
inc
shll
jno
add
sbb
mov
shll
sbb
adc
mov
ja
adc
sub
sbb
in
mov
mov
and
outsb
xor
loopne
dec
mov
xchg
test
popa
add
inc
out
push
fstp
push
pop
or
or
or
mov
and
fimuls
or
into
data16
rclb
push
push
cwtl
push
subb
xchg
xchg
push
cmp
dec
mov
clc
sbb
addb
sbb
jle
lods
test
or
pop
dec
push
je
jl
mov
lds
pop
lahf
pop
xchg
pop
sbb
sub
mov
rclb
push
sub
fcompl
mov
inc
pop
lods
mov
adc
sbb
outsl
add
inc
xchg
and
sbb
sub
xchg
mov
adc
mov
daa
popf
pop
or
out
loopne
dec
adc
mov
call
cmp
pusha
xchg
mov
mov
mov
add
and
add
ja
mov
fsubrs
cmp
shlb
aaa
mov
sbb
sub
popa
lods
and
jp
sbb
fdivl
sarl
inc
es
xchg
out
add
movsl
ja
cmp
mov
pop
lock
jbe
sbb
pop
push
jmp
and
add
insl
mov
cmpb
mov
shl
jmp
das
popf
jmp
jo
mov
adc
lret
pusha
push
mov
scas
loop
jge
xor
sub
sbb
cli
stos
or
mov
mov
in
into
xor
xor
sbb
mov
ror
pop
ffree
pop
sub
pop
aas
cmp
cmpsb
adc
clc
xchg
mov
push
and
fstps
dec
popf
js
sub
imul
fsubl
jle
adc
mov
mov
mov
std
shl
xchg
adc
ret
xchg
xchg
scas
pop
pushl
lods
adc
shlb
xchg
addl
nop
sub
or
jno
std
lods
cmp
inc
sub
pop
pop
test
xor
neg
enter
inc
lea
mov
inc
je
mov
pop
push
fwait
movsb
js
int3
push
div
xor
lods
dec
dec
sbb
ret
lret
lcall
lock
mov
insb
pop
loopne
scas
stos
arpl
fadds
xchg
add
add
pushf
les
lret
inc
add
sbb
fmull
test
and
mov
iret
andb
aas
xchg
movsl
movl
jnp
ljmp
pop
mov
add
xchg
scas
mov
cmp
dec
dec
mov
stc
adc
lret
dec
xlat
or
sbb
mov
out
daa
or
inc
pop
jno
add
testb
add
jb
dec
jecxz
insb
jne
and
je
add
sarl
rcll
mov
enter
cmpsl
lcall
pop
cmp
aaa
mov
mov
jbe
shlb
sbb
add
jae
dec
cmp
jg
mov
into
push
mov
dec
and
mov
mov
or
nop
cmp
xor
mov
xor
cli
or
pop
cltd
stc
jmp
mov
pop
test
dec
push
add
mov
push
add
pop
mov
push
or
push
mov
jmp
jg
test
insb
cwtl
bound
inc
and
insb
cmc
loopne
test
xchg
rcll
dec
lock
enter
sub
sub
or
in
mov
adc
inc
adc
xor
in
imul
loopne
arpl
mov
cltd
pop
or
loopne
or
cmpsl
int
cld
mov
or
xor
inc
js
jbe
inc
orb
add
inc
add
xor
push
push
mov
add
out
adc
test
dec
or
pop
pusha
add
test
pop
outsb
in
pop
mov
int
shrb
cmp
repnz
push
add
cmp
icebp
dec
pop
dec
fistps
aad
int3
xorb
dec
rorl
int
sub
push
sti
lock
cmp
call
inc
adc
mov
add
mov
push
cmpxchg
mov
sub
mulb
pusha
popa
push
push
hlt
add
cld
jp
dec
pushf
repz
jne
mov
push
inc
inc
and
pushf
iret
dec
jle
xchg
aaa
pushf
add
gs
jo
fcmovnb
mov
xor
aaa
aam
test
add
scas
cmp
xchg
shr
jp
int
mov
pop
mov
push
fdivrs
cwtl
movzwl
dec
add
jno
and
int
aam
mov
test
shlb
hlt
repz
test
push
jae
jne
sub
or
and
xchg
cmpsb
mov
sbb
outsl
jge
insb
cmpsl
lea
mov
mov
jb
popf
movsl
sub
dec
outsb
inc
mov
movsb
hlt
sub
sub
add
xor
mov
pop
mov
inc
popf
and
les
add
add
dec
or
cld
push
mov
and
xor
lret
mov
jo
mov
call
cmp
sti
pop
jo
mov
add
lret
aaa
lcall
jecxz
rcrb
cwtl
add
xchg
or
sub
mov
sub
mov
mov
push
jae
dec
dec
bound
pop
inc
jb
push
in
lahf
xchg
mov
adc
jbe
and
mov
repz
mov
dec
andb
mov
mov
xchg
or
xchg
lret
mov
orl
or
pop
sub
adc
pusha
lahf
or
push
or
popf
sub
xchg
test
leave
inc
rol
sub
jo
iret
add
inc
lods
xchg
mov
les
push
mov
mov
ljmp
inc
sbb
mov
or
or
add
cmp
adcb
push
mov
ss
nop
xchg
sbbb
rcll
stos
les
movsl
add
add
mov
adc
mov
dec
sub
into
nop
push
mov
pop
test
out
mov
pusha
int3
in
call
xor
or
and
sub
fildll
icebp
push
adc
popa
pop
push
in
into
nop
xor
clc
xorb
sub
inc
lea
xchg
and
push
mov
add
nop
push
shll
addr16
sbb
adc
jnp
cmp
data16
xchg
fstl
xchg
xor
lea
inc
dec
or
orb
fidivs
dec
push
repnz
sbbb
push
jno
push
bound
sarl
ljmp
xchg
stc
or
test
inc
lea
outsb
xor
or
ficomps
inc
rorb
xor
dec
nop
enter
insb
fcompl
xor
jl
orl
ret
jns
add
inc
data16
cli
stc
sub
enter
add
cltd
aam
fidivl
adc
and
cld
sbb
cmpsl
cmc
std
xchg
or
pusha
nop
sub
sahf
and
xchg
dec
or
test
xor
inc
out
add
lods
mov
dec
cmpb
cwtl
cwtl
and
or
pusha
push
adc
xor
add
nop
mov
mov
pop
xchg
adc
imul
popf
and
popf
xchg
dec
loope
addb
fdiv
movsb
add
adc
adc
xor
sbb
add
nop
loop
pop
pop
imul
scas
or
sub
sub
pop
sub
sbb
pop
ret
xor
jecxz
push
pop
out
inc
idivb
inc
scas
or
rclb
sub
in
or
nop
mov
dec
dec
xchg
popf
sbb
adc
jnp
fsubs
pop
movswl
shr
xor
in
and
and
ds
and
add
adc
lea
push
cmpb
mov
mov
xchg
sub
jne
testb
pop
in
andb
imul
pop
mov
xor
adc
bound
leave
incl
mov
inc
inc
and
test
cmpl
dec
add
nop
in
and
lds
pop
sub
and
je
pop
call
fmuls
mov
sarl
cmp
jns
fstps
add
or
jg
xor
sbb
mov
mov
add
lahf
jns
mov
das
lret
fcoml
jecxz
les
jge
fs
std
or
add
sbb
cwtl
or
push
mov
mov
inc
adc
cltd
faddl
cli
sbb
rcl
dec
fldt
sbb
cmpsb
scas
push
adc
pop
add
mov
xchg
adc
mov
or
add
pop
insl
dec
das
lret
cmpb
or
mov
xorb
cmp
rcrl
int3
mov
add
mov
imul
popf
cmp
push
push
lock
or
sub
aaa
sub
repz
xchg
add
mov
add
jle
pop
fwait
xchg
mov
jne
dec
mov
jmp
push
orb
xchg
inc
add
pop
fiaddl
lea
mov
push
out
push
adc
jl
and
inc
pop
jnp
cmpb
jmp
pusha
vmread
pop
fs
insb
or
add
or
xchg
popf
rcll
rcr
fisttpl
mov
add
mov
pushl
jecxz
sbb
std
add
xor
and
push
lcall
add
mov
push
mov
sub
enter
mov
pop
pop
cwtl
xchg
pop
lds
popa
lock
ljmp
add
and
sbb
cli
jmp
inc
roll
mov
push
pop
push
mov
xor
and
in
jl
mov
add
xchg
je
in
xchg
mov
sahf
sbb
and
shlb
out
xchg
xchg
popf
in
aad
test
cltd
or
pop
pop
push
pop
mov
sub
xchg
aaa
scas
add
nop
or
adc
scas
nop
jp
fidivrl
adc
mov
testb
jmp
mov
cltd
mul
cmc
mov
sti
lahf
jno
lods
aaa
cld
add
cmp
repz
cmp
mov
push
and
imul
cs
inc
enter
xorb
cs
or
mov
fsubrs
aam
imul
in
mov
push
cmpb
mov
or
sub
pop
mov
movsl
outsb
adc
enter
daa
pusha
push
push
jno
add
pop
lret
hlt
cmpsb
pop
loop
mov
mov
jbe
xor
mov
cmp
xor
aas
outsb
daa
add
cmc
addr16
cld
or
pop
add
jns
test
rorl
lds
cmp
jg
sbb
pop
add
arpl
or
push
sub
popa
inc
pop
pusha
fcmovnb
sbb
or
cmp
and
mov
add
or
sbb
jmp
cmp
xor
xchg
push
push
and
push
jl
push
outsb
add
popa
ret
shl
mov
lock
dec
adc
adc
daa
jns
out
pop
and
pop
mov
mov
pop
sub
sub
lock
add
lock
add
cmpl
call
sub
enter
movsb
or
inc
cmp
push
jnp
add
xabort
ret
sbb
add
cmp
popa
outsl
dec
insb
or
jns
add
in
mov
push
mov
inc
adc
subl
mov
std
mov
shrb
nop
xor
jmp
push
sbb
mov
add
jl
push
xchg
js
jmp
lock
adc
adc
add
test
cmp
outsb
sub
mov
or
inc
jae
mov
mov
or
in
repnz
xor
adc
stc
pop
add
mov
push
add
and
cmp
mov
jg
imul
and
mov
loope
sbb
clc
and
mov
sbb
and
adc
js
lods
gs
add
mov
jmp
cmp
ret
outsb
lret
xor
testb
mov
sbb
out
stos
je
rorl
cmpsl
xchg
cmpsb
xor
jno
pop
mov
add
cwtl
xchg
shrl
push
int3
lods
rcrb
add
push
sbbb
adc
andb
test
lea
jecxz
xchg
out
dec
clc
or
dec
jge
shrl
rolb
stc
mov
into
jnp
or
cwtl
das
pop
mov
or
inc
and
or
sbb
rol
andb
roll
repnz
pop
jl
sbb
adc
push
jb
mov
xchg
jg
out
xor
or
sub
adc
xor
jge
and
add
mov
adc
jns
shll
into
mov
push
imul
loop
je
sbb
sbbb
dec
ljmp
sub
sahf
cmp
adc
add
dec
call
inc
sbb
or
shlb
inc
call
scas
icebp
add
jne
inc
mov
punpcklbw
xor
push
and
and
jbe
add
andb
jo
lods
dec
sbb
fmuls
das
les
inc
push
je
mov
jns
ja
dec
xchg
outsb
dec
test
sub
pop
cld
add
xorb
cmp
cwtl
and
inc
call
mov
push
adcb
jle
mov
fisubrl
add
add
and
sbb
sub
mov
and
mov
xchg
mov
xchg
das
lret
mulb
and
jecxz
mov
or
das
inc
outsb
nop
lret
jl
add
and
dec
adc
add
cmp
pop
sbb
orb
or
push
dec
pushf
mov
outsb
push
and
add
cmc
jp
sbb
cwtl
pop
cmp
mov
dec
sbb
add
imul
pop
add
cmp
sub
stos
push
add
xlat
dec
xchg
test
pop
pusha
mov
jb
cmpb
add
xchg
decl
fmuls
push
push
pop
cmp
xor
in
call
xchg
push
fmuls
js
les
es
or
push
jne
xor
and
xor
std
add
andb
mov
jb
lds
xchg
lea
cmc
mov
je
add
lret
or
lcall
pop
push
mov
adc
add
mov
fwait
out
jle
pop
mov
xor
dec
mov
jge
or
sub
pushf
dec
xor
adc
mov
sahf
sub
fcomp
es
fcompl
add
sbb
dec
jl
jno
add
push
mov
aaa
add
xor
xchg
mov
cmp
adc
jp
inc
call
sarb
pop
call
test
inc
in
aad
jl
push
mov
xor
cwtl
add
inc
dec
adc
cmp
test
pusha
and
and
mov
push
icebp
adc
sbb
push
mov
jbe
mov
out
in
dec
cwtl
add
and
sub
sub
cmpl
pop
hlt
enter
fdivrl
je
jo
add
pop
adc
mov
bound
gs
mov
xchg
add
test
or
ret
push
movsb
add
aam
pop
sub
int3
jl
cmpsl
leave
ljmp
mov
mov
mov
sbb
push
data16
mov
pop
rcrl
flds
dec
rcll
outsb
pusha
jo
mov
shrl
icebp
cli
pop
jle
movaps
jge
and
lcall
cmpsl
xor
jb
pop
fistpll
stc
test
inc
xchg
pop
fsub
mov
rcrb
test
jae
mov
popf
arpl
sub
aam
inc
fwait
loop
add
das
jnp
loope
dec
mov
cmp
jle
ss
dec
andl
dec
adc
add
out
add
lods
mov
stos
xor
jl
mov
popa
or
std
mov
inc
add
xchg
ficomps
push
repnz
dec
in
lock
sbb
clc
or
fidivrl
mov
je
cmp
aam
sbb
xchg
imul
cmp
fdivs
cmp
add
adc
shl
add
fucompp
les
clc
test
fsubr
adc
mov
jl
inc
nop
push
les
sbb
out
xor
rcr
add
ds
or
xor
call
mov
in
inc
test
or
cwtl
mov
dec
and
adc
pop
fmul
xchg
pop
jo
jbe
fdivrs
xchg
add
lods
pop
add
or
rcrb
adc
dec
shll
dec
mov
add
pop
dec
mov
mov
cs
aas
add
icebp
repz
push
call
test
mov
jecxz
in
mov
adc
adc
popa
in
cmc
cmpl
mov
xor
push
lock
jae
lods
dec
outsl
jb
mov
add
xor
lcall
test
mov
out
and
pmullw
pop
mov
pop
sbb
cs
loopne
mov
call
in
mov
sbb
xchg
mov
scas
or
arpl
jae
lret
inc
fsts
or
or
mov
xchg
mov
andb
hlt
mov
js
sub
insl
mov
mov
call
mov
js
dec
call
shlb
cmp
add
cmp
inc
cmp
dec
adc
sbbl
arpl
add
sub
sub
add
xor
test
dec
and
inc
je
or
xor
xchg
add
jge
rcrb
add
loop
jo
inc
push
in
inc
inc
add
mov
xor
adc
jnp
add
aas
lcall
sbb
xor
shll
jae
hlt
out
or
jl
popf
and
mov
fwait
imul
mov
adcb
loop
xor
loopne
adc
or
adc
jecxz
inc
jb
sub
sti
xor
ljmp
jb
and
adc
cmpsl
shlb
inc
stc
add
loope
out
clc
mov
outsb
push
adc
test
cmp
das
xor
adc
cmpb
mov
cld
test
aad
jg
pop
cmp
xchg
ret
and
shrl
or
cmp
xor
dec
js
popa
in
xchg
ficomps
mov
mov
shrl
push
add
in
lds
nop
cmp
es
lret
adc
xlat
shrl
inc
adc
or
out
imul
fwait
adc
testb
add
sub
imul
push
les
cld
addl
sarb
jb
cs
xorl
mov
add
push
push
cld
ret
scas
mov
dec
je
lldt
das
pop
popa
add
dec
je
ret
sbb
stos
push
jp
pusha
hlt
mov
mov
subb
mov
ret
popf
and
popl
xchg
jmp
mov
and
jp
sub
mov
in
orb
xor
xchg
cmp
adc
mov
xchg
fs
add
int
and
add
or
inc
repnz
lea
push
arpl
add
aam
inc
jl
mov
idivl
fidivrl
adc
adc
xor
hlt
adc
shl
or
cmp
stos
add
mov
js
and
rcrl
and
fsubl
add
insb
and
inc
movsb
push
lret
int3
xchg
ret
test
add
rorl
adc
adc
and
inc
call
mov
hlt
lods
mov
repnz
rclb
inc
add
dec
arpl
inc
pop
mov
add
orb
cmpsb
dec
scas
stc
xchg
push
pusha
or
outsl
adc
and
pop
jge
clc
js
jo
les
and
arpl
andb
repnz
add
mov
add
leave
subb
inc
testb
add
mov
mov
xor
jge
add
int
and
mov
inc
sbb
lock
icebp
mov
test
xchg
stos
ret
negb
pop
int3
jmp
sahf
jecxz
ja
xor
or
inc
mov
mov
dec
mov
inc
mov
adc
pop
daa
insl
hlt
int
push
cmp
pop
cmp
sbb
adc
shrl
mov
loope
add
fdivrs
aas
xlat
cmpsl
sbbl
push
test
xor
jo
loopne
adc
cwtl
cmpsb
aaa
fwait
ljmp
lods
sbbl
xchg
push
outsb
in
add
lock
mov
and
add
xchg
cwtl
cld
xlat
aad
loop
or
nop
xor
testb
add
movsb
popf
jg
pusha
dec
mov
mov
push
movmskps
stc
xchg
and
rolb
add
push
mov
dec
pop
fwait
or
mov
inc
pop
mov
inc
addb
dec
not
adc
lods
push
bound
and
xchg
jmp
icebp
sbb
push
mov
les
addl
or
xchg
add
or
pop
test
mov
mov
pop
push
mov
movsl
ret
shl
add
out
ret
jno
add
mov
movsb
dec
jno
adc
mov
rol
bound
sub
adc
inc
sarb
sub
out
lcall
adc
fwait
movsl
xor
sbb
adc
cmp
adc
ss
xor
sbb
sub
mov
mov
mov
fstpt
add
gs
cmpsl
test
mov
mov
dec
inc
lock
add
clc
xchg
sbbb
out
mov
mov
xchg
cli
or
test
loopne
test
loope
ja
pop
inc
enter
xchg
push
add
cmp
out
sub
lods
and
sar
and
sbb
popf
das
je
rorb
insb
cld
sub
mov
mov
test
test
cli
repz
clc
ret
pusha
adc
mov
mov
ds
mov
out
mov
add
xor
add
sbb
inc
lock
adc
xorb
insl
cli
jae
cld
out
enter
cmp
cmp
repnz
cli
add
sub
push
test
sub
xchg
out
and
pushf
xor
shll
out
and
jle
push
and
aas
xor
imul
lea
ja
nop
addr16
adc
lahf
addb
or
daa
call
jb
xchg
shlb
sbb
sub
movsb
in
inc
sbb
into
ss
or
lock
loopne
cmpsb
jge
into
js
or
push
xchg
mov
shrb
adc
inc
or
jg
jns
add
add
sub
xchg
add
xor
xorb
mov
jmp
mov
dec
pop
cwtl
xchg
out
iret
dec
sbb
mov
and
sub
imul
and
bound
cwtl
sbb
inc
cwtl
popf
pop
jge
je
fwait
inc
sahf
js
movsb
rcl
jnp
pusha
mov
loop
jp
cltd
imul
inc
lar
insl
push
popf
add
dec
sub
mov
js
rcr
adc
sbb
icebp
in
sub
xchg
sbb
jae
lret
pop
cmp
stc
nop
nop
push
scas
or
fwait
xchg
mov
push
call
pusha
mov
out
lcall
sbb
and
sbb
lods
or
push
and
sbb
mov
and
adc
cltd
lea
mov
dec
mov
jge
mov
and
test
or
jno
sub
icebp
cmp
rcl
add
pop
mov
andb
out
and
cs
and
fs
loopne
mov
push
mov
dec
cwtl
and
inc
sbb
repnz
icebp
inc
lcall
aad
ret
pop
sti
push
inc
inc
adcb
cwtl
ret
adc
push
cmp
daa
jnp
out
add
cmp
sbb
in
sub
out
or
and
and
or
inc
mov
cmp
adcb
xor
mov
dec
and
test
sbb
xchg
imul
ret
cld
xchg
ss
les
test
adc
flds
push
inc
and
out
and
addl
je
in
inc
repnz
movsb
or
popa
outsb
cmp
push
in
loope
or
ficomps
adc
adc
fnstenv
pop
mov
jp
aam
add
mov
mov
inc
lods
mov
test
mov
add
xchg
sbb
fsub
es
sub
dec
pop
sub
xor
mov
add
sbb
inc
push
aad
sub
push
stos
popf
pusha
shrb
pop
sbb
adc
mov
fwait
ss
sub
xor
pop
cmp
out
jns
sub
in
fs
stc
pop
xchg
push
pop
add
gs
xor
call
cmpsl
test
shrb
test
dec
add
inc
jo
icebp
add
fldenv
sbb
fs
xchg
aaa
pop
inc
scas
adc
xor
or
pop
jo
std
pop
addr16
add
fwait
into
dec
dec
adc
cmp
add
in
adc
mov
or
add
sbb
xor
insb
jge
push
cmpsl
add
jo
adc
scas
xchg
sbbb
aaa
ljmp
mov
mov
dec
xor
push
pop
mov
je
inc
ss
mov
cmpsl
sbb
ljmp
inc
jo
in
xor
sub
add
mov
in
mov
int
cmc
xchg
fdivs
and
dec
and
ret
and
xchg
arpl
mov
push
cmp
add
notl
mov
adc
data16
sub
in
scas
jl
rcrl
push
roll
push
jno,pt
insl
push
addb
sti
nop
subb
mov
dec
or
add
test
data16
dec
xchg
es
sub
sbb
add
adc
fwait
jne
fs
adc
mov
fbld
imul
add
in
and
sub
iret
push
and
fwait
call
push
nop
dec
adc
or
or
in
add
jnp
test
imul
sub
dec
mov
addr16
les
jp
insb
loope
jae
inc
cmp
cmp
test
mov
ficomps
inc
and
pusha
jl
movsb
daa
mov
dec
nop
and
adc
leave
js
mov
adc
out
loopne
inc
xchg
add
xor
pusha
sbb
inc
xor
sub
pop
ds
in
aas
dec
pop
sbb
mov
jg
adc
shlb
es
mov
mov
sbbl
jo
push
pop
lock
je
add
pop
movsb
inc
outsb
add
call
or
mov
sbb
adc
sbb
and
pop
mov
and
leave
add
xor
cwtl
nop
je
cmpb
xorb
lock
xchg
add
pop
jmp
rorl
and
jbe
push
push
and
test
mov
add
fwait
adc
or
lahf
push
cli
inc
sbb
xchg
test
pinsrw
adc
rclb
mov
jbe
subb
dec
dec
insl
sahf
add
lcall
push
lock
int
loopne
ficoml
es
add
shrb
clc
push
add
ret
insb
add
sbb
add
cmpsb
in
negl
add
or
xchg
jge
add
xor
int3
addb
gs
adc
loop
or
mov
pop
lock
repnz
test
jl
pop
pop
lret
or
jge
sub
mov
jb
xchg
and
stos
rcr
mov
jmp
cmpsb
sbb
js
cwtl
fsubs
lahf
mov
push
in
and
mov
mov
mov
dec
clc
mov
add
ficompl
add
lcall
push
xor
movb
adc
out
jne
mov
arpl
mov
andl
rclb
inc
cmc
pushw
pop
pushf
insb
inc
and
ret
mov
cwtl
and
pop
xchg
insb
add
jp
add
xchg
cmp
ds
andb
sub
jle
push
in
test
nop
pslld
sahf
or
inc
adc
or
add
movsb
sarb
or
psubusw
jge
or
dec
aaa
andb
test
out
sbb
les
xor
or
test
jne
or
cs
mov
lock
sub
pop
jne
clc
rolb
repz
aad
int
or
dec
sub
pop
bound
clc
sub
sbb
clc
je
xchg
mov
add
out
adc
xchg
in
sar
mov
add
cmp
enter
out
and
movb
cmp
test
mov
dec
fdivrl
mov
jbe
dec
loopne
pushf
insb
loopne
out
ficomps
add
stos
movsl
jno
sbb
stos
imul
adc
dec
jmp
add
mov
add
pop
add
into
jl
das
fcoms
or
das
andl
inc
mov
mov
sbb
jmp
mov
mov
pop
push
cmp
sbb
add
shll
push
mov
xchg
out
pop
fdivrs
or
add
outsb
fsubrl
sbb
notb
movsl
push
imul
inc
push
jmp
and
adc
and
cmpsl
nop
nop
fsubl
and
pop
enter
andl
xchg
out
andb
sbb
into
or
sbb
loopne
jl
jno
sarl
jg
xor
add
sub
mov
pop
sbb
adc
insl
lock
add
mov
in
cwtl
push
rolb
mov
test
mov
call
lods
cld
sub
js
ret
nop
lods
dec
pop
fildl
or
dec
sub
adc
sti
mov
adc
cmc
pushf
ror
add
dec
out
or
xor
orl
pop
jo
fs
test
and
inc
lcall
sbb
push
or
adc
add
cli
mov
aad
cwtl
sub
jecxz
mov
xor
jne
insb
adc
xchg
mov
les
and
xor
xchg
lock
lahf
mov
mov
cmp
jp
and
add
adc
in
add
sbb
sub
add
outsb
movsb
scas
cmp
pop
mov
add
stos
subb
mov
mov
fimuls
and
sub
icebp
mov
aas
add
dec
lret
jo
dec
xor
jecxz
lods
subb
or
stos
cld
jno
rcr
pusha
test
mulb
xchg
inc
mov
and
inc
xchg
es
add
ficoms
lahf
movsl
mov
mov
push
mov
or
inc
cmp
bnd
jo
and
add
movsb
sahf
insl
repz
sti
mov
dec
pop
cs
popl
push
jmp
daa
mov
pop
push
fwait
icebp
andb
xorb
pop
mov
out
xchg
cmp
sub
push
dec
xor
mov
fsubl
add
jge
mov
cmc
cmpsl
inc
in
sbb
and
in
cmp
jnp
pop
or
dec
inc
xchg
push
inc
push
inc
jge
mov
push
cmp
adc
jo
dec
inc
inc
call
xchg
sbb
adc
xor
and
lcall
mov
dec
enter
and
gs
std
stos
ficomps
xor
js
insb
enter
or
jne
ss
repnz
mov
push
mov
out
inc
fs
jnp
lret
add
mov
adc
push
jl
jo
mov
insl
xchg
add
scas
or
test
add
shlb
arpl
repnz
xor
add
jmp
mov
inc
ss
test
mov
data16
icebp
lea
addl
xor
and
xor
add
mov
mov
fbld
pop
add
out
addr16
or
lods
addl
je
and
jle
pop
cmpsl
add
sub
mov
test
dec
ds
mov
cli
mov
lcall
sbbb
loop
add
and
sbbl
xchg
mov
loopne
or
das
sbb
xchg
xchg
js
or
sub
sbb
sub
push
xchg
hlt
std
xor
mov
jle
dec
mov
or
hlt
xchg
pop
mov
movsl
shlb
xchg
popl
push
add
insl
mov
out
dec
adcb
dec
mov
add
mov
in
adc
jle
out
inc
cld
mov
mov
flds
xchg
and
hlt
rol
and
or
mov
js
dec
fwait
into
push
add
pop
rorb
push
mov
or
push
movsb
movsb
or
add
and
repz
int3
cmpsl
dec
cmp
pusha
out
movsb
bndldx
stc
inc
in
mulb
ret
sbb
jns
cmp
rcll
add
out
mov
add
cmp
push
xchg
repnz
repnz
mov
fidivrl
jne
dec
pop
xchg
jmp
adcb
pop
shrl
jnp
pop
jae
pop
cmp
add
pusha
cmp
push
add
ljmp
pop
arpl
or
mov
clc
andb
xorb
addr16
fucomi
clc
pop
jl
cmp
mov
pusha
hlt
sti
lret
xchg
and
mov
movsb
mov
jmp
repnz
mov
roll
sbb
cmove
mov
mov
lcall
mov
popl
push
push
sub
scas
add
aaa
cmpsb
test
mov
add
sbb
sub
xchg
pop
movsb
xchg
repnz
lock
jl
loope
and
repz
lcall
adc
push
mov
test
loop
add
xchg
push
push
fadds
sub
or
jns
pop
cmp
cltd
dec
push
pusha
mov
mov
test
and
jmp
pop
les
addr16
insb
dec
dec
mov
push
adc
orl
pop
xchg
mov
fisttps
fnsave
adc
int3
bound
sbb
sub
add
jno
mov
jo
imul
fwait
es
lock
cwtl
mov
pusha
xor
mov
mov
jecxz
dec
loopne
fs
xor
fildl
shrl
js
movsl
enter
sahf
test
or
or
int
rcr
sahf
lahf
inc
sbb
sarb
scas
add
ss
and
xchg
cmp
add
fmuls
shrd
js
add
mov
enter
mov
in
inc
cwtl
add
inc
add
pop
and
hlt
xchg
inc
adc
and
fs
push
pusha
jecxz
cmp
mov
add
xlat
and
jp
mov
jne
mov
add
xchg
sbb
adc
dec
dec
enter
push
pop
push
insl
jle
add
mov
sub
sbb
mov
push
inc
cli
mov
pop
fwait
pop
sarb
xchg
mov
cmp
adc
adc
into
push
in
mov
or
test
loopne
lcall
subl
xbegin
lods
lcall
hlt
xchg
stos
jb
ficompl
xchg
mov
inc
push
add
jnp
popf
addr16
loope
sub
in
mov
cmpb
jp
loop
jo
xchg
sub
xchg
add
mulb
mov
add
aad
xor
ret
add
jns
jae
flds
add
jb
jmp
aam
push
pop
sahf
outsb
nop
cvtps2pd
imulb
aam
int
lret
add
in
gs
aas
inc
mov
ret
lods
dec
sub
add
sub
jp
add
stc
stos
sar
fdivs
sbb
push
xchg
test
pusha
inc
add
int3
pop
clc
cwtl
adc
add
in
popf
out
loopne
inc
cmp
mov
sub
and
mov
ds
mov
lret
sbb
or
inc
xchg
inc
jno
movsl
insl
and
popa
mov
xchg
sub
dec
mov
sahf
sti
orb
jecxz
add
in
out
adc
repnz
icebp
add
clc
js
ss
and
ja
fistl
pop
pop
test
ljmp
cwtl
dec
xchg
push
dec
pop
sub
das
add
dec
stc
xchg
std
push
mov
mov
aad
and
dec
pop
loop
push
in
addr16
push
and
inc
call
fs
inc
lock
dec
jno
jecxz
bound
inc
in
mov
cli
mov
pop
cmp
dec
xchg
das
push
cmc
in
adc
repz
cmpsb
sarb
sbb
aaa
stc
sub
or
pop
les
mov
add
inc
imul
dec
clc
popa
pop
xor
jno
imul
cli
fwait
ds
mov
push
clc
xchg
xchg
inc
bound
loopne
push
add
push
fdivr
mov
iret
les
pop
gs
popf
ja
mov
cmp
mov
fistl
into
insl
cmpb
lret
ret
xchg
or
outsl
repz
cli
dec
mov
jo
cld
dec
fcmovnb
add
sbb
scas
add
test
mov
shlb
movsb
cmp
add
mov
adc
inc
aad
in
faddl
sub
push
imulb
xchg
jge
cmc
mov
add
jns
xor
xor
pop
push
jge
xchg
daa
cwtl
movsb
inc
test
mov
sbb
std
fiaddl
lcall
xchg
loop
push
push
or
jnp
int3
filds
pop
loopne
xchg
jb
mov
add
adc
daa
xchg
and
push
mov
andl
daa
inc
sbb
pop
dec
add
dec
js
lcall
pushf
addr16
push
pusha
mov
es
inc
mov
and
stos
cld
ss
lcall
stc
cmpsl
or
pusha
dec
jno
jp
xor
aam
jge
loopne
call
clc
repz
imul
cmpl
scas
mov
dec
or
add
fwait
into
idiv
or
pop
les
stc
sbb
popf
fs
sub
mov
cmp
sub
movsb
pusha
jmp
xor
out
loopne
push
sbb
out
and
mov
aam
arpl
xorl
push
insb
adc
insb
adc
or
jo
mov
xor
test
mov
pop
sbb
mov
or
popf
mov
xorb
push
add
fdivrs
leave
sub
pusha
xor
mov
mov
enter
pop
xchg
cwtl
dec
jp
mov
jo
sub
and
cmp
add
adc
inc
ret
jle
nop
inc
sahf
inc
lahf
push
inc
jecxz
dec
aad
pop
dec
inc
int3
pusha
dec
mov
mov
xchg
cmpsb
push
mov
push
add
idivl
mov
xchg
in
add
mov
lcall
fmull
sub
cmp
lret
rcrb
out
lcall
push
fsubs
lds
or
pushf
pusha
fwait
push
repz
add
test
xchg
xchg
dec
jle
subb
stos
jae
and
fwait
test
and
mov
jle
bound
push
mov
popf
mov
loopne
xor
add
mov
cmpb
sub
jo
mov
add
fcompl
aam
adc
mov
add
dec
adc
arpl
pop
dec
sbb
adc
dec
lds
and
add
inc
imul
cwtl
mov
enter
inc
ret
push
pop
and
xor
xor
dec
mov
and
sti
push
xor
jl
mov
dec
jo
mov
lods
jl
cmc
in
sti
inc
orb
mov
sahf
arpl
movsl
nop
outsb
push
mov
fwait
pop
test
mov
pusha
jge
lea
test
sub
mov
inc
jle
push
dec
repnz
push
lret
popa
mov
jmp
fidivs
lret
cwtl
mov
rclb
lcall
cs
pop
enter
push
out
xchg
out
lds
ret
or
and
inc
inc
inc
xchg
int
jbe
mov
push
lds
shl
adc
adc
loopne
push
cmp
dec
xchg
push
xor
ljmp
dec
shlb
cld
add
fwait
icebp
adc
add
ja
mov
add
mov
pusha
xchg
fdivrl
push
daa
pop
and
ret
js
daa
add
sti
pop
pop
xchg
sub
imul
or
idivl
adc
mov
add
sbb
xchg
or
subb
mov
out
push
test
cs
and
xlat
movsl
shr
aas
into
push
mov
xchg
xchg
sub
and
cmpb
xchg
shl
sbb
pop
pop
out
adc
adc
stc
cwtl
rorb
add
sbbl
pushf
add
sub
in
test
ret
dec
push
sbb
xlat
aaa
xor
movsl
popa
mov
cwtl
sub
dec
adc
ret
xchg
data16
daa
shll
jo
imul
push
sbb
daa
hlt
rclb
out
nop
aas
aaa
pop
roll
add
xchg
jmp
pop
shl
loopne
mov
xchg
jnp
arpl
mov
subl
adc
loop
xor
fiadds
dec
clc
in
imul
inc
lea
lods
sub
cmp
imul
pusha
nop
xlat
rcrb
movsl
mov
cmp
mov
das
fs
out
add
xor
mov
add
xor
and
mov
insl
xchg
sub
jo
dec
or
faddl
sahf
xor
xchg
push
pusha
jle
lds
lea
inc
dec
jl
or
loope
shlb
dec
adc
ret
pusha
inc
push
adc
cwtl
sub
mov
inc
push
sbb
insl
in
mov
mov
shrb
inc
fwait
out
mov
push
mov
adc
lods
jge
and
subl
andb
fucomip
popf
inc
int
mov
cmp
add
add
inc
sub
lock
xor
pop
loop
add
aam
push
int3
lcall
mov
dec
jo
mov
dec
fsub
fcoms
xor
fildll
jb
ret
in
gs
sub
mov
lret
outsb
fildl
mov
xchg
in
subl
inc
enter
pop
jge
and
dec
repnz
jbe
and
in
or
aad
fbstp
sbb
lock
push
or
lea
andl
jo
cmp
push
dec
outsl
in
dec
add
nop
cmpb
mov
aas
push
pop
xor
add
jmp
hlt
and
push
adc
stc
push
sub
mov
pop
rolb
repz
subb
rcrl
sbb
add
mov
add
mov
and
cs
fsubl
add
shll
cmp
add
dec
imul
add
pop
or
imul
push
clc
std
dec
lods
adc
and
gs
les
add
loope
sbb
fwait
jno
inc
sub
test
insb
jno
cmp
cmp
add
mov
xchg
decb
loop
aam
mov
sbbl
xchg
out
mov
fs
jnp
jo
mov
sub
js
in
add
push
inc
stc
lahf
aad
mov
push
lock
or
dec
inc
cmp
inc
or
into
test
lock
and
outsb
ljmp
and
push
enter
popf
adc
pop
incl
sub
test
aas
push
add
jl
scas
jg
pop
or
mov
cwtl
sbb
jmp
outsl
arpl
add
insb
push
and
mov
andb
pop
aad
add
add
pop
mov
jle
mov
push
and
mov
add
test
sbb
scas
aas
pop
jo
pop
movl
scas
or
andl
mov
lods
adc
push
lods
fdivrl
pop
int
pop
adc
cmp
mov
sarb
in
jno
push
ror
push
dec
data16
lcall
cmc
stos
inc
inc
sahf
lcall
dec
lret
les
push
cmp
mov
xor
jecxz
orb
jle
out
das
inc
or
data16
stos
mov
mov
push
test
add
pop
sub
and
adcl
add
idiv
sbb
jge
push
pop
mov
xor
add
mov
cld
lcall
add
stos
pop
data16
sub
movsl
cmp
sbb
cld
xchg
add
add
shrl
pop
and
add
call
arpl
lods
js
inc
loop
or
inc
inc
sub
pop
ret
push
cmp
imul
push
add
dec
lods
mov
xchg
cwtl
in
je
repz
std
or
adc
movsb
sahf
sbb
sbb
cli
pop
cmp
pusha
int3
mov
dec
adc
mov
rclb
sbb
pop
scas
cmp
cmp
jmp
decl
ds
and
add
or
sbb
inc
and
das
inc
xor
pop
frstor
jg
cld
add
sbb
or
fwait
les
pop
xchg
lods
adc
mov
stc
cmpsl
repnz
pop
in
pusha
es
cli
lds
icebp
int
shrb
pop
add
dec
jo
inc
xor
xor
je
adc
or
xchg
or
dec
inc
mov
adc
data16
sbb
or
mov
fdivrs
and
mov
js
insl
pusha
test
jne,pn
xchg
sbb
in
and
std
test
test
lods
movsb
lods
dec
mov
inc
add
enter
adcb
add
xor
push
jmp
or
sub
push
cmp
lods
testl
mov
inc
out
ret
loopne
std
cmp
insb
popa
cmp
and
je
cld
and
roll
mov
cwtl
sub
lea
mov
xchg
enter
dec
adc
add
insl
xorl
call
movsb
pop
add
pop
xor
mov
cmp
pop
inc
jge
dec
mov
jo
add
shlb
xlat
pop
dec
and
cmp
das
test
cmpb
insl
push
add
mov
inc
and
das
jnp
dec
sub
and
mov
in
or
arpl
sub
repnz
pop
jns
clts
add
popa
jno
cwtl
ljmp
into
imull
mov
dec
fidivrs
mov
insb
xor
sub
dec
mov
and
outsl
addr16
imul
enter
and
mov
add
mov
add
into
scas
cld
sub
int3
add
repz
adc
sbb
dec
mov
add
subb
and
add
jae
filds
add
jl
inc
repnz
stos
pop
jo
and
lret
jnp
dec
mov
lock
mov
repz
add
rorb
jae
mov
sub
pop
add
adc
sub
ret
fcompl
add
pushf
adcl
addr16
mull
repnz
nop
sahf
inc
xchg
add
dec
test
cmp
sub
bound
cmp
loopne
pop
addr16
mov
add
xor
mov
outsb
lock
cltd
pop
scas
mov
add
insl
hlt
fwait
push
iret
sub
sbb
sub
xchg
push
daa
lods
push
add
data16
lods
sub
sub
and
or
loope
or
ja
mov
or
mov
xchg
inc
inc
mov
loopne
dec
xchg
mov
or
add
xor
mov
out
sub
incb
add
add
hlt
bound
insb
or
and
inc
into
add
lahf
mov
subb
adc
addb
xor
xchg
or
test
clc
cwtl
repz
icebp
ds
movsb
or
dec
mov
cltd
fidivs
add
dec
dec
or
test
xchg
stc
scas
jne
lods
cld
or
shll
cmovp
int
das
fwait
movsb
cmpb
cs
adc
sar
mov
mov
jne
add
add
pop
pop
mov
js
adc
cli
rcl
jecxz
adc
dec
lods
mov
movsl
mov
std
cmp
cmpb
xchg
iret
sti
int3
and
xor
ret
idiv
lods
insb
mov
pushf
adc
stos
jl
push
adc
stc
mov
add
push
mov
add
ss
sub
hlt
or
loop
xor
add
je
xchg
cmpsb
add
jnp
test
pusha
inc
mov
sbb
and
inc
xchg
dec
mov
or
jl
or
inc
jle
xor
jecxz
sbb
push
movsb
movsb
hlt
adc
mov
pushf
adc
clc
jl
faddl
pop
inc
in
adc
dec
fmull
jge
push
sub
push
nop
popa
inc
stos
pop
les
sbb
std
test
xor
les
test
sbbb
add
lock
das
test
or
mov
dec
test
and
push
adc
xor
mov
in
jg
pusha
jp
lahf
mov
add
scas
push
outsb
xchg
fisubl
fdivrs
adc
lcall
jno
jmp
repz
aam
lret
test
ret
xor
pop
or
mov
cmpb
jmp
orl
in
push
popf
mov
jmp
insl
add
bound
fstpt
xchg
cld
sbb
cs
push
sub
fdivrl
lock
cmc
fadds
mov
adc
add
repnz
lret
arpl
or
mov
bound
addb
jle
sub
lret
xchg
xlat
mov
sti
push
enter
loopne
xchg
mov
add
data16
pop
xor
addr16
popf
pop
add
mov
push
loopne
mov
add
test
cmp
jo
fsubrp
jnp
pop
mov
mov
xchg
mov
ret
fdivrs
cmp
jb
cmp
inc
lahf
cmp
jg
xchg
cmpsl
out
push
mov
add
insl
push
ror
mov
popa
jbe
repz
push
cmpsl
push
xchg
nop
add
daa
ljmp
xchg
and
rorb
mov
fldt
addr16
adc
add
pop
imul
sti
inc
js
cmc
clc
lods
add
ret
mov
nop
sahf
adcl
into
les
jge
shlb
in
cltd
std
add
push
pop
and
mov
pop
lcall
testl
pop
sbb
jns
add
push
pop
cmp
dec
lds
popf
and
sub
push
dec
or
arpl
xchg
call
add
jl
fists
popa
sbb
es
mov
daa
pop
cs
xorl
inc
pop
dec
imul
in
add
pop
xchg
out
push
repnz
int
rolb
add
out
in
pop
std
pop
pop
insb
mov
mov
mov
adc
insl
push
jl
push
inc
ret
aam
enter
cld
pop
push
jmp
fistpll
add
mov
cltd
mov
cmp
xchg
inc
mov
inc
mov
ret
bound
sbb
aas
mov
add
add
dec
decb
incl
mov
fisttpll
sbb
inc
outsb
icebp
dec
pop
sub
out
or
add
xor
xor
mov
cwtl
movsb
sti
xadd
add
pusha
adc
dec
das
xchg
mov
pop
cwtl
push
leave
cmp
push
push
addr16
pushf
outsl
or
xor
add
inc
mov
jp
inc
xchg
add
loopne
xchg
push
fcoms
add
cmp
stos
add
out
repz
or
cwtl
inc
fisubrl
add
lock
push
or
lods
lahf
or
xor
xor
cli
add
jb
std
call
or
xor
aad
adc
scas
xor
xchg
add
int3
xchg
xchg
call
cmc
mov
cltd
pushf
add
cmp
xchg
add
aaa
lods
cmpsl
add
sub
cs
fwait
dec
sbb
jp
pop
add
xor
mov
or
inc
mov
lods
mov
imul
cmp
or
clc
lahf
pop
mov
sarb
jle
add
jp
and
ficoml
test
mov
cmc
addb
mov
dec
popa
cmp
push
add
lcall
je
js
pop
fs
lret
ljmp
lahf
sub
adc
mov
les
adc
sub
aad
out
inc
add
in
dec
or
in
cli
inc
int3
popa
aam
lea
int
pop
pop
sarb
ret
mov
mov
mov
xor
xchg
jecxz
ds
sub
pusha
rcrl
mov
add
out
mov
sahf
push
lahf
out
arpl
pop
add
mov
ja
cmp
jmp
mov
pop
cmp
cmp
fcmovne
xor
lock
add
test
test
cs
cmp
aas
push
mov
insb
jne
jb
cmpsb
ja
inc
imul
mov
fnstenv
pop
mov
add
xchg
inc
add
push
ret
mov
cmp
inc
mov
fbstp
add
jnp
imul
lcall
aas
push
cmp
inc
xor
jl
add
arpl
cmpsb
sbb
mov
sar
cmp
jmp
icebp
adc
stos
fsubrl
shll
nop
add
mul
scas
adc
shrb
add
inc
mov
popa
or
adc
xlat
sbb
cwtl
je
sbb
inc
adcb
or
adc
sub
sbb
iret
dec
daa
lock
sub
clc
add
subb
popf
bound
incb
add
sbb
sti
movsb
xchg
aad
add
repz
clc
fcmovb
push
add
sub
pop
add
ljmp
sbb
mov
jp
push
xor
jne
mov
jae
por
and
mov
sub
sbb
jo
es
mov
cmc
jl
clc
mov
andl
je
adc
adc
mov
test
push
add
xor
push
stc
pop
rol
xor
mov
sub
add
jle
sub
cli
pushf
je
inc
sbb
mov
sub
stos
std
jl
mov
cli
jmp
dec
sbb
scas
mov
xchg
je
pushf
add
pop
push
inc
or
es
dec
test
xchg
sahf
std
mov
and
dec
inc
test
hlt
in
lret
and
test
les
jns
and
jp
mov
xchg
sub
addb
dec
push
outsl
dec
inc
ffree
loopne
xchg
push
loopne
dec
fadd
xor
aas
enter
dec
xchg
add
mov
flds
inc
or
cld
test
inc
dec
imulb
ja
enter
add
add
jmp
scas
jo
jb
adc
push
add
xchg
sarb
or
or
mov
cltd
pusha
dec
dec
xchg
out
push
xchg
idivl
daa
js
shrb
out
add
cwtl
das
add
les
cltd
pop
sar
aam
icebp
roll
sub
jns
in
pop
add
sub
add
jns
adc
enter
or
xor
add
out
sub
and
bound
add
in
popa
jae
imul
mov
mov
add
in
xor
lahf
pop
inc
adc
lock
inc
inc
stc
xchg
imul
popa
aas
test
outsb
hlt
jge
sub
cmp
lods
out
aaa
cmp
adc
jmp
sub
ds
sbb
dec
xorl
lods
nop
adc
jg
mov
mov
sbb
or
pop
and
jb
jle
adc
adc
bound
pop
enter
sub
push
add
adc
ljmp
js
sub
fcomi
ret
pop
pop
push
pop
outsl
fbld
jbe
push
inc
int3
icebp
sbb
das
imul
je
xchg
leave
push
out
daa
enter
lock
sub
test
sbb
and
mov
aaa
sbb
lret
insb
and
xchg
add
inc
mov
push
pop
dec
mov
fwait
pop
lods
mov
imul
mov
test
add
pusha
psadbw
enter
or
cmp
cmp
sbb
inc
push
gs
scas
sub
jge
xchg
jno
dec
push
mov
mov
sbb
jmp
inc
cs
addb
sub
jp
and
xchg
shlb
jo
jle
or
test
and
mov
shlb
dec
jne
nop
test
ds
add
dec
sbb
jecxz
dec
sbb
xchg
andb
ja
lods
jle
xlat
xchg
jmp
push
cwtl
ret
inc
pop
out
loop
pop
xlat
fcomps
jl
das
push
clc
jo
dec
or
cli
lahf
sub
add
or
mov
sub
out
repz
call
mov
cld
mov
push
mov
in
dec
nop
cmp
roll
outsb
inc
adc
mov
aas
dec
and
cs
xor
mov
mov
js
mov
loopne
daa
pop
push
mov
add
loopne
test
inc
in
repz
loop
push
in
dec
or
cld
jnp
sti
loopne
xor
jecxz
adc
pop
mov
popf
bound
jo
mov
cmp
sarl
les
xchg
adc
in
cld
or
dec
mov
in
cwtl
adc
notl
insb
jno
lods
cmp
or
shr
push
xchg
or
pop
lock
nop
pop
imul
bound
sbb
leave
outsl
outsb
or
pop
aam
add
mov
or
and
mov
loopne
add
and
dec
push
inc
mov
sub
int3
lret
or
stc
outsb
mov
notb
mov
mov
and
fs
jmp
js
jne
pop
subb
ds
movsl
sub
insb
push
inc
outsb
push
pop
sahf
xchg
or
scas
dec
add
std
xchg
push
repnz
outsb
and
js
adc
sub
mov
and
inc
movsl
adc
fstpt
test
popf
inc
out
push
and
imulb
mov
shlb
nop
stc
movsl
sub
mov
out
mov
and
aas
ss
enter
gs
sarl
or
into
shlb
je
push
adc
jecxz
push
stc
insl
mov
adc
ret
inc
test
xorb
loopne
inc
or
sbb
add
mov
push
add
add
xchg
xchg
adc
rclb
adc
mov
xchg
pop
push
js
fadds
mov
js
rcl
or
cmp
hlt
xchg
add
pop
rcrb
and
mov
inc
daa
data16
add
in
imul
add
inc
adc
push
adcb
xchg
into
repnz
in
sarb
mov
in
pop
mull
push
add
fldt
cli
sub
jecxz
and
or
inc
mov
loop
pop
xchg
popa
mov
test
push
xor
push
or
enter
mov
rcrl
outsb
fwait
les
popa
cwtl
dec
add
inc
insb
mov
jns
jle
inc
pusha
xor
cmp
dec
jno
scas
shl
hlt
clc
dec
mov
lock
jg
add
andnps
scas
cwtl
adc
pop
repnz
or
add
add
mov
jmp
adc
dec
mov
or
and
adc
mov
dec
cmp
mov
mov
dec
push
std
lret
dec
adc
jmp
pop
daa
and
lahf
inc
inc
add
loop
imul
jl
or
xchg
mov
xor
fcmove
xor
lods
lods
push
ja
xchg
lds
sbb
ja
rcl
gs
sbb
fs
xchg
dec
pop
loopne
out
dec
pop
lret
nop
and
jo
sub
inc
and
mov
ss
lock
push
aam
jae
push
out
inc
mov
xor
add
clc
and
frstor
cwtl
in
dec
fwait
jle
pop
fstl
cmpb
sub
dec
int
das
outsb
insb
add
push
aad
cwtl
xchg
arpl
and
push
adc
adc
xchg
inc
add
or
or
fadds
popa
pushf
jecxz
xchg
es
xorb
rorb
mov
push
jg
add
cmc
mov
shlb
jg
inc
aaa
stc
jl
inc
add
mov
mov
dec
icebp
inc
ds
fsubs
enter
stc
xchg
cwtl
mov
xor
sbb
inc
or
add
xchg
or
pop
xor
jmp
adcb
inc
ficompl
jb
fimuls
mov
jne
jo
xor
jns
add
jb
in
mov
cwtl
divl
sbb
nop
xchg
jnp
scas
cld
cld
stos
outsb
clc
imul
mov
pushf
loopne
mov
cmpsl
cmc
subb
mov
in
fstpl
jl
or
cmp
jg
lods
mov
or
dec
andl
and
or
mov
jae
fisubrs
or
inc
leave
pop
dec
jl
pusha
arpl
imul
lods
es
nop
mov
in
inc
mulb
adcl
xchg
aaa
pop
push
cmp
xor
and
push
icebp
js
xchg
add
xor
fs
or
loopne
or
cmpsb
cmp
addb
cltd
pop
inc
adc
mov
adc
shlb
shl
add
jno
out
add
scas
orb
das
lea
cld
movl
flds
out
or
inc
sub
aam
jmp
pop
andb
inc
add
adcb
mov
pusha
cld
push
push
add
cmp
cs
inc
add
add
mov
popf
scas
prefetchw
inc
sbb
mov
mov
loopne
xor
out
add
jmp
lret
sbb
call
jnp
jge
sub
sbbb
shrb
add
jle
xchg
lds
lods
inc
add
scas
sbb
mov
rolb
adc
into
lcall
cmc
mov
mov
mov
sub
mov
mov
adc
ss
rolb
int3
sub
and
cwtl
add
rcrb
pop
cs
add
mov
sbbl
add
xchg
imul
xchg
ds
insl
mov
in
shlb
mov
jge
mov
adc
xchg
adc
add
sub
jns
pop
push
sbb
xchg
jbe
rcrl
xor
mov
add
xor
fs
add
cmp
add
sub
and
add
insb
sbb
mov
fdivs
or
fs
and
dec
adc
inc
jmp
aad
xchg
xchg
xor
xchg
add
movsl
sub
mov
les
sub
and
dec
call
push
mov
jno
pusha
shll
and
add
icebp
daa
mov
or
jmp
add
sbb
add
mov
test
icebp
sub
cli
xlat
mov
lea
loopne
cwtl
push
mov
orb
xor
inc
pushf
xor
pop
sbbb
ljmp
lock
arpl
push
sub
addb
mov
idivb
ret
push
mov
add
add
jge
pop
xor
addr16
pusha
insl
divb
push
in
je
jmp
test
fwait
lret
call
xorl
orl
out
andl
pushl
add
push
das
int3
inc
in
aam
push
add
roll
test
out
aam
pop
loopne
mov
insb
cmpsb
add
gs
add
cmp
xor
in
or
daa
aas
sbb
jg
int
shrl
negb
dec
pop
xor
or
sbb
fwait
bound
add
test
ss
aam
adc
lcall
jp
sbb
sbb
add
mov
add
pusha
add
cmpsl
pusha
ret
rorb
lds
adc
inc
clc
pop
mov
or
lahf
mov
cmp
or
mov
mov
insl
and
push
cmpsl
cmc
out
push
test
mov
xchg
enter
and
pusha
xor
filds
inc
push
dec
mov
adc
sub
lcall
sahf
repz
or
iret
ret
lods
mov
and
dec
and
push
roll
pop
add
ret
fnstenv
popf
mov
xchg
jns
fnstsw
mov
push
add
fsub
push
xor
inc
mov
jnp
ds
je
mov
andl
mov
xor
rclb
aaa
add
rorl
das
add
nop
cmp
push
add
pop
mov
mov
add
out
test
jmp
xchg
pop
and
cmpl
lock
sub
add
mov
or
xor
out
add
xchg
int
ret
and
jl
xchg
les
popl
or
lods
mov
mov
pop
aas
loope
dec
sbb
decb
jne
add
add
arpl
test
xor
testl
jno
add
movsl
sub
or
es
data16
add
mov
fcoms
xchg
pop
add
dec
fsub
jbe
pop
testb
test
pop
je
inc
test
add
inc
icebp
out
xlat
jo
fwait
cmp
pop
je
lods
cld
les
xchg
adc
imul
sub
roll
fucomp
mov
cmp
fwait
and
add
fistpll
sbb
imul
stos
jae
cmp
das
xchg
and
je
aaa
faddl
lea
ret
pop
push
stos
adc
or
out
popa
push
lret
scas
add
sub
clc
and
lock
es
movsl
ja
into
jns
xchg
pushf
mov
mov
ljmp
push
add
push
test
es
dec
add
loop
push
inc
ljmp
repnz
add
stos
push
daa
jl
push
add
sub
out
subl
xchg
pop
rcrb
or
and
or
dec
and
inc
pop
add
and
mov
xchg
jo
mov
ret
je
mov
adc
lahf
int
and
jno
daa
popf
iret
pushf
push
push
pop
xorl
ljmp
push
mov
add
or
repz
loop
and
cld
sub
add
pop
dec
and
sbb
fimull
push
mov
mov
dec
add
sbb
out
movsb
scas
pop
pop
pop
add
pop
mov
jno
ja,pt
jo
and
subl
pop
sbb
push
or
pushl
les
mov
fcoml
or
and
jmp
out
fwait
lock
pop
add
mov
jle
dec
add
out
inc
dec
imul
add
fs
shll
aad
ds
outsl
js
movsb
adcb
pop
or
jae
fisttpl
pushf
add
movsl
jecxz
pusha
xchg
add
sbb
out
xchg
and
testb
test
popa
ret
sbb
mov
mov
movsb
subl
icebp
sti
push
add
jle
or
mov
fisttps
das
push
mov
out
or
jae
pop
xor
add
ljmp
add
cmc
mov
push
and
jle
je
pop
add
es
int
mov
add
lea
pop
inc
xlat
les
loopne
push
cwtl
das
or
dec
fsubl
or
inc
sub
pop
call
pusha
mov
mov
push
add
int
sub
pop
adc
push
andl
aad
jmp
push
push
push
rol
jl
pop
scas
test
adc
popf
xchg
push
or
xchg
or
xor
pop
push
into
out
outsb
add
ljmp
hlt
mov
nop
pop
pusha
sahf
mov
and
inc
and
icebp
inc
xor
or
lods
or
cmp
outsl
add
bound
xor
mov
mov
movb
jb
mov
adc
movsl
add
pop
mov
pop
mov
fists
sbb
je
pop
in
icebp
xorb
pop
cmp
push
dec
and
mov
out
std
inc
inc
mov
mov
je
add
flds
mov
je
fwait
imul
shrb
jp
xchg
jecxz
mov
inc
dec
mov
out
out
adc
push
adcl
mov
ficoms
push
andl
cmpsl
mov
mov
out
mov
add
xor
in
xor
cmp
test
clc
dec
call
test
es
inc
sub
cli
mov
enter
jae
pop
mov
pop
adc
xchg
xor
sub
out
ja
call
push
xor
enter
jb
dec
imul
jmp
mov
addr16
sub
jo
mov
cmp
fmuls
cltd
push
pushf
test
orl
sbb
cmp
xchg
and
or
pmaddwd
jmp
imul
and
add
sbb
les
flds
adcl
pop
pusha
mov
mov
popa
mov
clc
add
mov
push
lea
mov
fcoml
and
cs
cltd
in
fstps
sbb
sti
pop
or
mov
adc
add
into
sarl
mov
mov
shl
jbe
leave
xor
in
jg
stos
add
dec
or
orb
sub
mov
sub
inc
cmpsl
lods
push
mov
add
mov
push
imul
sarl
pop
loope
hlt
add
pop
sbb
mov
dec
or
mov
push
sub
mov
sbb
repnz
out
loopne
xor
sbb
rorl
cmpsb
mov
sbb
aaa
testl
xchg
aad
fistps
xchg
pop
into
mov
inc
mov
dec
jl
ss
adc
dec
adc
cwtl
sub
jno
or
lods
sbb
add
out
les
iret
test
push
jp
out
stc
jmp
and
jo
xchg
sbb
leave
push
sbb
inc
add
pop
lahf
adc
fbld
loopne
mov
movsl
sub
test
mov
int
and
adc
and
xchg
jl
dec
mov
insl
add
add
xchg
dec
rorb
std
inc
xor
ljmp
ficompl
iret
and
mov
sub
add
leave
or
cmpsb
dec
dec
cmp
into
out
fldt
insl
mov
add
loop
xor
test
dec
push
sti
lods
adc
lds
lret
pusha
xor
insl
loope
add
in
push
stc
jp
sti
and
clc
outsb
push
lcall
faddl
pop
stos
add
out
out
inc
mov
or
and
rcr
sbb
mov
in
bound
pop
xchg
add
jmp
adc
sar
mov
xchg
mov
cmp
and
cmpsb
arpl
adc
call
or
lods
aad
xchg
inc
dec
repz
repnz
outsl
je
push
jae
jl
adc
or
out
inc
adc
xchg
nop
aam
sub
cmpsl
add
pop
xor
inc
add
in
cmpsb
ror
sbbb
push
arpl
mov
push
pusha
xor
mov
pop
sub
fiadds
addr16
cmp
add
rcrl
add
mov
loop
push
rclb
sbb
xor
push
xorl
and
js
pop
inc
filds
mov
clc
and
jle
pop
std
or
xor
stc
sbb
ljmp
pusha
sar
lods
es
cmp
into
jecxz
clc
dec
fisubs
pop
sbb
push
add
sti
or
popa
scas
cmpsb
adc
sbb
test
or
movl
les
lcall
jmp
or
mov
shr
cmc
movsb
push
jo
dec
mov
pop
dec
sbb
jmp
ss
mov
push
lcall
adc
push
sbb
push
rorb
dec
push
xchg
daa
loop
in
and
cld
and
add
cmp
pop
mov
mov
jno
jb
test
mov
mov
mov
or
xchg
xor
fs
out
cli
push
push
divb
add
fcomp
pop
add
arpl
dec
mov
popa
push
and
mov
push
repz
adc
xor
lds
cwtl
sub
mov
out
or
shll
mov
adc
in
mov
int3
ret
or
sub
mov
xor
ret
sbb
mov
mov
sti
xchg
mov
js
jge
pop
push
addb
add
or
adc
dec
mov
mov
add
add
movlps
dec
and
cmc
pop
xchg
test
pop
adc
cmpsb
addr16
xor
cli
sub
cmc
adc
cmp
xor
mov
jmp
lret
jmp
cmp
cwtl
sbb
xor
mov
add
sbb
scas
or
xor
adc
adc
shlb
fiaddl
or
adc
bound
adc
rorl
and
lds
orb
xchg
lahf
imul
je
clc
js
stos
or
cmp
std
lods
lods
and
movl
add
jns
mov
inc
rolb
lock
add
add
push
and
mov
loop
cmp
je
sub
test
imul
xorb
test
mov
faddl
add
push
sub
je
fwait
push
xchg
push
nop
call
xchg
test
into
cs
mov
cmp
mov
adc
xchg
pop
push
xchg
pop
stos
xchg
sub
imul
arpl
bound
sub
and
mov
bound
cmp
cltd
fdivrs
adc
jmp
xchg
sub
movsb
adc
add
push
jg
adc
lea
cmp
xchg
add
mov
xchg
out
xchg
test
cwtl
test
jmp
lock
add
jp
shll
jb
xor
mov
lea
inc
and
lods
push
and
mov
sbb
adc
adc
mov
addr16
inc
xchg
imul
js
or
sbb
stc
aas
movl
sbb
shll
mov
jmp
jbe
lock
outsl
jo
xor
arpl
sarl
sub
mov
nop
pusha
movzwl
nop
cli
roll
mov
push
mov
push
dec
ficoms
and
popf
add
lods
cmc
in
sbb
sbb
inc
in
mov
or
inc
push
mov
mov
js
and
movsl
push
movsl
bound
loop
add
cmp
cmp
sbbb
pop
pop
outsb
add
std
sbb
add
mov
pop
mov
lret
cmc
mov
add
push
scas
jge
call
push
adc
mov
sub
and
and
enter
dec
or
fldcw
mov
xchg
cli
das
call
hlt
pop
fcoml
push
jl
cmp
adc
sub
outsl
lret
add
push
or
mov
ljmp
dec
mov
sub
add
cmp
test
mov
jb
and
es
jne
sbb
add
sub
rorb
subl
add
add
mov
out
test
mov
xor
pop
inc
jb
lock
inc
movsb
add
fldt
rcr
mov
nop
mov
adc
mov
mov
add
lods
cmp
mov
jne
adc
outsl
sbb
jnp
mov
adc
adc
or
and
test
cmp
cmp
ljmp
push
outsb
fs
push
add
cmp
sub
lcall
jo
xchg
cmpsl
pop
idivl
nop
test
movsl
sbb
adc
or
mov
stos
or
adc
add
pop
xchg
or
adc
inc
and
es
push
out
sub
test
popf
dec
es
adc
lahf
mov
inc
pop
sub
enter
cmp
shll
filds
xor
mov
and
cs
pop
mov
sub
and
fsub
jo
push
popf
sarl
xor
xor
movsb
sbb
daa
sub
jb
std
pushf
add
rol
pavgb
test
xchg
ror
jo
fadds
jbe
pusha
and
adc
mov
pushf
push
add
dec
jae
and
add
fdivrs
sub
mov
cmpsb
mov
jne
fs
add
lret
push
xor
cmp
xchg
xor
test
or
push
cltd
ret
or
insb
add
adc
xchg
idivb
add
add
mov
std
xchg
sub
je
inc
push
lock
push
adc
jbe
mov
xchg
sub
push
push
in
pop
and
mov
shlb
popf
call
push
xor
test
pop
mov
fs
les
dec
leave
inc
popf
mov
jecxz,pt
shll
push
aas
dec
stc
js
imul
sub
daa
or
mov
and
icebp
je
xchg
mov
fiadds
scas
lahf
sbb
lods
mov
ljmp
dec
cmc
jno
imul
jge
stc
sub
insl
jno
sub
or
and
push
test
jmp
xor
push
sub
adc
xor
pop
add
mov
pop
sub
and
cmp
nop
push
fcomi
js
or
and
shrb
cld
add
ds
sub
push
and
mov
push
mov
cmovnp
cltd
inc
pop
sub
pusha
cmp
shrl
inc
jo
jb
dec
andl
imul
add
fsubs
sub
sahf
or
pop
imul
test
cli
ret
mov
data16
inc
mov
mov
add
mov
pop
popa
push
pusha
test
mov
icebp
ds
es
pop
jbe
rcll
stos
out
mov
loop
pop
xchg
mov
mov
sbb
inc
push
add
push
xor
out
cmp
mov
ljmp
xchg
in
in
stos
lret
les
mov
out
push
or
lock
mov
mov
out
and
jmp
lahf
xchg
aaa
sbb
mov
xchg
dec
xor
les
and
mov
push
push
inc
clc
inc
xchg
add
movsl
out
inc
and
popa
ficoms
mov
lds
mov
pop
imul
pop
sub
sbb
outsl
loop
adc
out
pop
push
push
or
mov
out
fyl2x
add
leave
mov
and
insb
fsubl
fmul
sub
test
aad
aas
aam
ja
jae
mov
mov
pop
in
les
in
stc
push
popa
xorl
loope
clc
xor
or
sbb
add
jmp
xchg
mov
adc
dec
or
mov
pop
sahf
and
sbb
daa
out
xor
das
jmp
mov
pop
or
dec
or
popf
movsl
sub
pop
test
push
add
sbb
xlat
sub
mov
mov
and
sub
aam
xchg
jp
iret
gs
sub
pop
jnp
movsl
insl
push
inc
pop
pusha
mov
popa
bound
fisttpll
or
xorb
xchg
sub
add
shr
mov
int3
loopne
dec
mov
sbb
mov
fistpll
sub
adc
jno
sub
int
mov
es
loopne
push
fldl2t
in
xor
cmp
shll
or
aas
insb
mov
cmp
mov
imul
adc
sti
jno
push
and
test
popf
insl
sub
mov
lea
add
orb
roll
xor
lds
mov
push
cmp
in
outsl
pop
mov
push
pusha
add
nop
sub
mov
pop
dec
call
dec
es
scas
xchg
ret
pop
add
loopne
mov
mov
push
test
cmpb
daa
pop
das
sbb
sbb
ret
xor
push
fucomip
fsubr
div
jp
dec
push
push
add
fisttps
repnz
add
mov
mov
in
jns
hlt
pop
mov
test
test
xchg
and
xor
fiadds
roll
mov
inc
mov
pop
push
xor
jecxz
and
pop
faddl
add
in
into
lahf
gs
adc
mov
mov
in
mov
lcall
ret
jmp
or
adc
cmp
xchg
adc
jo
popf
jbe
ficomps
or
and
pusha
xor
in
nop
mov
xor
sahf
test
xor
push
cmpsb
sub
jmp
inc
jp
stc
aam
jbe
jnp
cmp
push
sub
inc
jo
push
xchg
sbb
push
icebp
sar
and
insb
push
jle
jnp
push
and
xchg
adc
mov
lock
mov
push
mov
push
jbe
subb
mov
outsl
outsl
inc
or
gs
xchg
js
mov
cmpsb
pushf
hlt
mov
insl
sub
es
bound
mov
fs
pop
in
int
test
or
push
pushf
and
les
out
mov
jmp
sbb
es
into
daa
loop
stc
ss
xchg
mov
daa
pop
mov
shlb
out
call
inc
fildll
in
xchg
pusha
mov
xchg
sbb
sub
sub
adc
inc
insb
orl
add
add
fs
pusha
mov
xor
nop
sbbb
add
inc
dec
cmp
imul
mov
dec
stc
mov
dec
jmp
bound
aaa
add
stos
popa
or
adc
jmp
or
pop
mov
xchg
inc
jbe
cmp
int3
push
sub
loopne
add
push
scas
test
fcmovb
pop
cmpsl
mov
fcompl
add
popf
in
jl
mov
aad
movsl
push
mov
pop
shlb
pop
add
test
les
sbb
imul
outsb
jae
sub
mov
jmp
mov
or
aad
aaa
cmp
sub
xchg
sbb
dec
lcall
add
xchg
xchg
ret
pop
pushf
lods
out
mov
inc
xor
sbb
loopne
add
mov
jns
and
js
dec
sub
aad
in
jns
add
stos
jbe
add
add
mov
add
cld
sbb
pop
xchg
or
xchg
add
nop
sub
mov
add
xchg
or
and
sbb
gs
mov
sub
cli
addb
out
xlat
cmp
push
int
mov
add
sub
xlat
sub
xor
aam
xor
dec
add
add
push
ja
rol
xchg
in
cs
aad
adc
or
dec
sub
mov
call
add
int
stos
jmp
and
ja
sbbl
jecxz
iret
mov
shll
and
adc
jle
mov
popa
test
jge
add
and
test
add
sub
jmp
lcall
or
pusha
iret
fs
adc
in
add
fildl
jmp
push
dec
sti
and
pop
inc
inc
and
std
pop
jg
movsl
sbb
add
mov
xchg
sub
sub
mov
icebp
xchg
in
xchg
mov
pusha
movsl
cli
mov
mov
adc
xchg
mov
dec
rolb
shr
add
pop
stos
data16
mov
fsubrl
repnz
add
pusha
xor
iret
jmp
icebp
imul
clc
add
add
jb
xchg
add
loopne
and
and
cwtl
int3
out
fwait
jne
mov
aad
cmpl
and
and
icebp
dec
add
rolb
mov
gs
sub
pop
and
mov
nop
fisttps
add
xchg
in
in
jmp
jp
xor
mov
lds
in
push
insb
push
outsl
cmp
outsb
inc
addr16
lods
dec
or
add
aas
fwait
mov
xchg
outsb
fstl
mov
add
loope
lea
fimull
in
mov
fistl
inc
in
xor
popa
mov
add
fistpl
xchg
mov
and
pusha
cmp
mov
orb
fcoms
or
pop
jb
hlt
popa
xchg
or
sbb
and
or
sahf
mov
lcall
push
es
adc
cmpsl
mov
xchg
cltd
pop
push
pusha
or
nop
cmp
adcb
mov
dec
stos
mov
sarl
call
mov
aad
daa
clc
mov
xlat
xchg
mov
pop
jle
cmp
mov
mov
jge
mov
mov
sarb
mov
movsl
dec
cmp
in
sbb
fstpt
and
das
js
test
mov
jmp
adcb
dec
xlat
mov
inc
imul
rcrb
pop
lret
rcrb
or
fcoms
sub
andl
sub
pop
daa
bound
sub
loope
jo
sub
out
add
imul
lods
and
xor
mov
add
push
mulb
loope
mov
out
fiadds
cmp
cmp
jb
jns
jbe
lock
xchg
pop
pushf
jns
ds
and
or
add
mov
ds
cs
add
adc
push
push
mov
mov
mov
dec
dec
mov
lods
adcb
push
stc
xor
pop
mov
or
and
mov
or
outsb
out
mov
fwait
mov
pop
dec
dec
cs
adc
push
jecxz
shlb
fxtract
shl
add
jmp
mov
add
fs
adc
push
pop
mov
mov
lods
pop
xchg
lahf
sarb
push
mov
cld
cmp
or
dec
es
adc
inc
je
and
xchg
inc
add
mov
xchg
hlt
mov
inc
xchg
mov
push
imul
out
mov
mov
inc
adc
sarl
dec
and
sbb
dec
daa
mov
pop
adc
faddl
cmpsb
loop
jbe
movsl
data16
mov
stos
jne
cmpsb
push
sti
add
pop
mov
jnp
cmp
sub
add
cmp
sbb
punpckhdq
mov
sub
inc
add
sub
mov
xchg
sbb
insb
cmp
rcrb
xchg
je
add
rorb
add
and
daa
add
fsubs
fs
fiadds
and
dec
pushf
js
mov
mov
popa
push
jmp
push
push
jns
jno
sbb
sbb
pop
out
xchg
out
jp
cs
jns
imul
inc
and
push
mov
xchg
or
push
int3
mov
out
add
test
call
add
sti
repnz
sub
sub
push
dec
fisubl
and
sbb
sub
mov
test
repz
push
mov
loopne
cmp
rcr
ljmp
cs
and
adc
cli
sbb
jno
aad
mov
sub
xchg
lcall
mov
stc
xchg
add
xor
into
xchg
mov
add
lods
repnz
pop
jo
addb
sub
mov
jg
jle
jle
push
stos
lods
mov
jle
sbb
cwtl
pop
lahf
and
testl
fisttps
xchg
adc
stos
daa
sti
adc
add
inc
adc
xor
add
aad
stos
je
outsl
rorl
and
fldcw
or
js
ss
jmp
fdivrp
jno
jmp
fsubs
fisttps
jge
cltd
and
ret
xor
rcll
mov
xchg
imul
inc
lahf
fs
jne
daa
aad
pop
add
or
push
mov
adc
das
pop
nop
ljmp
enter
nop
cmc
push
fldt
aas
push
arpl
dec
outsb
mov
scas
xchg
orl
and
lock
xor
imul
mov
adc
daa
lods
out
or
rorl
or
adcb
push
pop
push
mov
imul
imul
mov
mov
mov
dec
pop
mov
aad
popa
stos
xor
test
imul
cmpsb
jge
adc
dec
test
sub
inc
adc
xor
add
jmp
add
dec
adc
stos
stc
pop
cs
mov
pop
call
out
out
mov
aaa
jg
sti
out
ss
vmovss
add
hlt
sbb
push
xor
out
cmp
push
or
int3
dec
mov
fwait
in
push
addr16
add
adc
dec
mov
scas
push
mov
pop
data16
add
push
cwtl
mov
cs
mov
movsl
or
or
mov
adc
mov
push
arpl
xchg
sbb
test
repz
sub
je
sub
sub
mov
and
pop
inc
mov
outsl
dec
inc
nop
mov
imul
mov
cmc
xchg
cmp
mov
or
call
and
scas
dec
and
push
add
rcll
jo
or
add
mov
jbe
ffree
cmp
jmp
push
inc
mov
xlat
jle
mov
lds
jo
add
sub
jns
clc
ror
sbb
pop
stc
movsl
shll
add
jno
ror
imul
pop
popa
mov
dec
xchg
jge
xchg
mov
loopne
push
jp
add
cmp
mov
add
pop
aam
push
popa
in
push
adc
pop
push
sub
or
lea
es
jecxz
pop
test
jecxz
enter
mov
mov
fs
xor
pop
fwait
push
push
add
xor
or
inc
lcall
sbb
test
add
pop
mov
xchg
ret
or
dec
orps
ss
ss
incl
cli
dec
mov
xor
sub
aam
or
add
mov
mov
fstpl
mov
adc
fwait
add
inc
sub
fsts
test
add
and
mov
sub
xchg
es
or
push
popf
dec
jo
mov
sub
mov
mov
orb
mov
shl
jb
ljmpw
sbb
cmp
xchg
sub
add
and
xchg
adc
nop
jo
push
jp,pn
lahf
dec
dec
inc
pop
or
adc
add
outsl
int3
and
mov
popf
dec
lret
mov
std
leave
add
mov
icebp
inc
jge
mov
jno
scas
fstl
movsb
or
in
mov
dec
lret
test
aam
das
or
and
ret
sbb
xchg
xor
popa
xor
adc
add
push
rcrl
lret
les
cli
ljmp
repz
decl
sbb
mov
push
pop
add
cmp
subl
das
sub
fisttpl
xchg
mov
lea
pusha
xor
xchg
das
fcmovb
cmp
add
test
add
adc
mov
add
out
sub
in
popa
pop
sbb
cmc
sbb
xchg
or
or
fwait
inc
sub
lods
hlt
or
pop
pop
dec
jb
sub
daa
movsl
stos
xchg
in
dec
loopne
mov
push
out
inc
lds
push
and
mov
jo
movsl
adc
cmc
in
push
loopne
into
jp
mov
cmp
lea
add
sti
lea
pusha
mov
cs
loopne
sub
xchg
jne
pusha
mov
jl
pop
cmc
inc
add
xchg
push
dec
es
mov
mov
add
mov
jns
jb
add
inc
adc
mov
mov
jecxz
popf
clc
pop
sub
jl
mov
shll
jge
push
jle
or
xlat
dec
clc
push
and
mov
push
sbb
lock
lahf
pusha
movaps
out
ljmp
rol
addr16
push
lcall
inc
adc
mov
inc
jnp
repnz
add
cwtl
lods
jl
lock
pop
lock
int3
adc
push
dec
popa
lds
push
insl
sbb
mov
fsubs
cmp
and
daa
mov
xor
lods
add
pop
out
jae
mov
pop
icebp
test
pop
add
mov
data16
jecxz
dec
repnz
add
push
icebp
jge
in
pop
and
mov
decl
mov
pop
inc
lods
jecxz
sarb
aam
fmull
sbb
imul
mov
jbe
testb
mov
xorl
dec
mov
pop
das
cmp
movsl
ficompl
xchg
aam
push
mov
cmp
jo
or
sbb
push
add
iret
hlt
jl
sbb
dec
mov
cmp
dec
dec
aad
jnp
add
mov
xchg
addb
aaa
or
in
sub
push
push
popa
movsb
jmp
adc
push
mov
mov
cmpsl
add
loop
dec
jo
in
pop
xchg
cmp
lea
int3
inc
mov
enter
or
cwtl
aad
xchg
add
push
stos
jl
jae
test
mov
rorl
testl
xchg
test
mov
cmp
aaa
repnz
xchg
or
mov
dec
inc
les
out
jae
pop
sbb
jle
and
xor
xchg
pop
mov
call
insl
in
test
push
add
loop,pn
fs
insb
mov
add
daa
std
aaa
enter
xchg
out
sbb
sbb
mov
icebp
pop
mov
or
push
sbb
in
jg,pt
add
dec
mov
fcoml
mov
dec
mov
es
enter
jp
loopne
inc
lret
loop
jle
xor
scas
jnp
or
adc
adc
jecxz
add
push
adc
inc
aas
mov
sub
fsubl
add
mov
arpl
lods
jmp
dec
mov
fadds
pop
mov
jno
test
push
and
popf
mov
xlat
pop
fs
adc
shlb
das
push
mov
out
das
mov
add
mov
ret
push
or
lret
es
in
push
pop
testl
adc
jne
in
dec
mov
adc
movaps
dec
popf
cs
add
push
dec
and
adc
mov
outsl
inc
loope
inc
lods
pop
mov
dec
scas
jl
and
fs
out
fisubrs
ret
sub
push
call
or
lds
pop
push
lock
lods
cmp
popa
cld
repnz
inc
adc
jmp
xor
mov
mov
xchg
iret
mov
adc
scas
add
cwtl
in
xchg
jg
das
xor
pop
push
push
xor
jne
inc
add
enter
and
stos
pop
mov
push
sub
or
push
pushf
test
cmp
stc
or
mov
aas
mov
lret
inc
ja
mov
divl
lods
adc
gs
pushf
lock
add
push
insb
add
das
fstpt
pop
jbe
out
or
call
push
cmp
lea
imul
callw
fsubs
mov
inc
leave
aas
ds
dec
mov
sbb
fldenv
push
fiadds
dec
sub
aam
addl
mov
or
adc
mov
cmp
jbe
and
testb
pop
jecxz
fnsave
mov
ja
adc
pop
or
loope
imul
ficoml
into
iret
add
push
cmpsb
cmp
icebp
add
inc
pusha
mov
cmp
call
pop
test
sbb
mov
andb
xor
daa
repz
in
mov
imul
arpl
aam
inc
ja
icebp
mov
sbbb
ror
pop
mov
mov
fnstcw
dec
push
jl
inc
xor
mov
out
cmpb
test
jno
pusha
mov
mov
or
cltd
jae
pop
mov
test
popf
std
pop
push
push
sub
dec
cmp
or
pusha
mov
pop
sub
add
push
add
test
sar
nop
xor
xchg
incl
in
add
push
test
push
filds
mov
mov
cli
and
sbb
or
pop
pop
push
or
push
mov
sub
jbe
sbb
add
clc
cs
mov
xor
mov
and
cmp
push
inc
fnstenv
scas
push
adc
sbb
cli
adc
cwtl
mov
mov
xor
sub
stc
test
mov
andb
mov
out
into
leave
xor
pop
iret
inc
xchg
mov
pop
call
and
shlb
int3
push
xchg
pop
mov
lods
scas
xchg
adc
loope
sub
push
mov
clc
sub
idivb
daa
sub
mov
push
lds
sbb
mov
jno
pop
aaa
hlt
push
stc
mov
adc
mov
adc
cmpsl
jg
mov
jg
fs
pop
pop
fs
xchg
aaa
jnp
lods
shrb
loop
add
lds
out
stos
addl
dec
dec
fdivrs
sub
jns
and
out
loope
mov
fs
inc
sbb
loop
scas
call
cmp
mov
mov
adc
xchg
sub
mov
mov
pop
jl
pop
and
aaa
pop
or
mov
sub
mov
push
adc
aam
or
dec
and
jnp
fadds
mov
ljmp
xchg
lcall
xor
into
pop
jo
cmc
sub
xchg
dec
xor
push
fildl
je
daa
cmp
add
fldenv
int3
pop
mov
jne
divb
sti
loope
int3
adc
roll
or
sbb
inc
xor
dec
add
hlt
fldcw
add
lret
cmpsb
jne
in
fs
push
daa
arpl
nop
jnp
jmp
out
mov
jmp
dec
push
inc
push
mov
test
stos
fstl
pusha
out
inc
pop
dec
mov
ja
mov
mov
xor
pop
popa
stos
sub
push
add
or
adc
fxam
cmp
aam
add
mov
pusha
add
mov
lds
xchg
lcall
pop
add
cmpb
fnsave
jns
push
xor
pop
stc
sub
mov
shrb
stc
xchg
pop
push
jg
out
xor
xchg
cltd
pop
scas
int3
stc
add
fiaddl
add
repz
out
in
add
sub
adc
sahf
cmp
shrb
jo
dec
sub
in
aas
shll
push
or
int
orl
pop
outsl
xor
sti
pop
inc
sbb
jne
lahf
orb
popa
ret
sub
stc
xor
arpl
aad
cli
mov
loop
push
lods
adc
add
pop
jmp
xlat
inc
push
add
push
insl
or
loope
lods
cltd
jecxz
movsb
mov
daa
push
pop
popa
inc
push
jg
sub
jns
sbb
mov
or
inc
or
add
push
sub
in
shlb
mov
shrl
int3
test
cmp
stos
push
hlt
pop
dec
outsb
mov
xchg
sub
xchg
mov
xchg
sbb
jne
xchg
std
or
popa
adc
dec
or
cltd
cmp
cmp
lods
mov
pushl
stos
sub
repnz
mov
std
xchg
xor
int
sbb
or
cmp
xchg
into
lock
xchg
xchg
aas
pop
and
add
es
push
dec
imul
add
push
inc
fisttpll
push
push
pop
pop
or
mov
cmc
adc
jl
mov
dec
pop
mov
xchg
stc
add
or
push
push
cltd
push
pusha
fidivrl
adc
fwait
add
cltd
push
in
mov
adc
jo
xchg
adc
xor
push
push
push
pop
addr16
sbb
pop
mov
stos
add
jmp
adc
jb
daa
fisttpll
in
nop
or
in
mov
sub
popf
ljmp
sub
insl
push
repnz
test
call
sbb
orl
adc
cli
cmp
sub
xor
ficoml
sbb
jae
jne
pushf
sub
repnz
pop
orb
xchg
adcb
jne
or
pop
mov
test
mov
out
or
rcr
imul
xor
dec
adc
sub
dec
cmp
outsb
mov
pop
pop
ljmp
lods
hlt
mov
mov
add
ja
or
test
jno
add
sarl
pop
movsl
sbb
test
in
pop
rcll
ret
loope
sbb
cmp
andb
jge
jne
sti
and
adc
sbb
mov
push
and
jge
xor
cmp
xor
inc
adc
lea
pop
imul
sarb
cmp
inc
lcall
dec
inc
into
adc
push
sub
dec
imul
cmp
jb
sbb
jns
lods
mov
int
sub
sbb
movsb
or
or
movsl
add
insb
call
mov
adc
sbb
cmp
fst
or
repnz
es
imul
insb
in
push
test
jnp
arpl
mov
cwtl
pop
dec
fadds
or
iret
out
and
and
lahf
les
xchg
mov
adc
stos
sub
dec
adc
add
mov
xor
push
cld
arpl
jo
pop
popa
jb
and
test
dec
push
dec
stc
lods
sub
add
or
clc
or
sti
dec
jnp
out
dec
mov
jno
add
mov
mov
mov
lds
stos
add
test
adc
jmp
mov
xchg
stos
data16
iret
mov
and
add
mov
fs
out
insl
cli
ret
in
pop
sub
adc
sbb
cld
sub
jmp
out
enter
ljmp
jno
or
shrl
mov
scas
in
daa
ret
push
inc
imul
mov
mov
cmp
nop
sbb
sub
nop
mov
ror
pop
mov
pop
sti
in
xchg
xchg
adc
dec
fldcw
sbb
mov
gs
cld
or
push
mov
imul
or
mov
or
je
push
jmp
xor
into
popf
or
mov
int3
js
pop
decl
lods
add
dec
cmovp
dec
mov
mov
sub
add
test
sub
adc
stc
mov
add
push
jecxz
xchg
leave
mov
or
pop
or
mov
cld
cmp
sar
push
test
nop
sub
mov
mov
mov
rorb
in
jmp
mov
mov
pop
dec
sub
lock
test
sbb
sub
dec
or
scas
testb
test
or
fnsave
btc
cmp
ljmp
pop
and
movsl
dec
cmpb
test
xor
cs
popa
ss
mov
dec
sti
push
and
repz
test
popf
jmp
stc
mov
cmp
sub
or
jae
add
inc
sarb
pop
cmp
or
mov
jg
repz
push
jb
gs
and
pop
es
inc
lahf
stos
add
and
add
movsb
shr
out
xchg
gs
rorl
xchg
lret
roll
inc
or
mov
cwtl
add
or
fsubrl
add
pop
call
adc
popf
adc
add
cmp
insb
inc
or
or
push
cmpsl
test
lods
push
dec
call
test
js
pushf
inc
or
loop
mov
inc
and
xchg
mov
dec
sbb
andb
js
lds
fwait
mov
idiv
push
aaa
lahf
or
push
xlat
fidivrs
cmp
push
and
mov
lahf
loopne
shrb
bound
pop
mov
jle
gs
mov
pushf
add
xchg
cli
mov
add
scas
mov
lods
pop
cmpsl
jnp
mov
mov
lea
mov
scas
xchg
or
sbb
pushf
lods
add
jp
add
stc
cmp
inc
jno
mov
je
fwait
sub
jnp
and
movsb
fsubrs
sub
imulb
js
cmovnp
insb
adcl
insl
jns
mov
inc
orl
leave
pop
pop
fs
cltd
lds
cli
mov
adc
stos
outsb
cli
add
pop
je
inc
insl
inc
clc
push
ja
cmp
out
mov
pusha
mov
push
enter
aam
jecxz
adc
imul
jae
stos
xchg
cmp
cs
xchg
jmp
daa
push
popl
mov
pusha
add
jecxz
cmp
sbb
ret
push
mov
sub
mov
and
mov
xchg
or
cs
cmp
add
jmp
push
push
clc
dec
in
aaa
dec
add
adc
test
frstor
std
jg
fs
cwtl
out
xchg
jns
cmp
or
jbe
inc
xchg
js
icebp
in
dec
add
andb
xor
mov
xor
in
jmp
popa
or
out
repnz
cmpsl
push
mov
xor
shll
nop
push
cld
push
sub
sub
addr16
sbb
stos
or
jmp
mov
int
into
sub
sbb
movsl
mov
push
xchg
in
into
sbb
mov
and
add
sarb
xchg
xchg
add
ja
and
or
mov
popf
scas
fs
fcomi
in
bswap
pop
ss
pop
mov
dec
inc
mov
js
scas
jle
dec
lea
adc
mov
mov
push
mov
add
ficoms
xchg
mov
inc
les
inc
shrb
add
addb
adcb
in
stos
xor
push
ficomps
cltd
sbb
pop
xorl
pusha
push
mov
fisubs
frstor
dec
popa
mov
dec
fcmovb
test
mov
fstl
push
xor
stos
imul
adc
test
cmp
out
stc
shrb
and
mull
push
mov
shll
icebp
enter
xor
or
loop
std
jge
test
ss
xchg
sub
ja
addb
mov
jb
lcall
cltd
ss
and
push
subb
inc
adc
out
fs
jnp
and
fldt
sahf
pusha
jge
sbb
adc
scas
mov
add
jbe
dec
sbb
or
sbb
add
test
into
pop
push
popf
push
bound
sbb
jb
or
rcrl
pop
push
jmp
push
sbb
sub
in
cmc
xor
das
mov
and
imul
cmc
or
xor
or
sub
fstl
xchg
outsb
xor
mov
jmp
jb
adc
push
repnz
or
cmp
popa
xor
or
call
cmp
dec
es
idiv
dec
mov
pop
mov
push
pop
pop
cmp
testl
sub
and
push
jmp
stos
mov
shll
xor
add
cmp
leave
pop
add
push
jbe
inc
test
test
cmp
cwtl
and
inc
gs
mov
icebp
pop
das
sub
xlat
inc
testb
cmp
mov
jns
or
inc
movzwl
xchg
mov
je
pop
xor
sbb
and
mov
adc
jmp
outsb
sub
andl
clc
test
or
int3
add
arpl
loop
ud2
push
out
push
pop
lods
xchg
out
dec
mov
xchg
dec
xor
shlb
or
nop
mov
push
mov
add
cmp
push
or
aam
or
cmp
cli
push
adc
sub
mov
data16
loope
or
jnp
mov
jae
shl
iret
aam
outsb
loopne
out
sub
mov
popa
and
dec
mov
bound
xor
sub
sbb
test
xchg
daa
xchg
adc
les
jge
dec
loop
subl
fbld
jne
or
xchg
dec
out
movl
pop
nop
pop
jp
arpl
mov
jns
add
pop
jno
in
lock
pop
xor
mov
or
adc
test
popa
add
pop
stos
in
int
xchg
xchg
je
mov
into
dec
test
loope
aad
cmp
cmpsl
sbb
jo
pop
inc
mov
mov
mov
pop
jb
dec
fists
cmp
pop
add
cmpsl
jmp
mov
mov
iret
fcmovne
in
adc
dec
pop
inc
aad
icebp
mov
pop
sub
into
daa
nop
dec
pop
lods
and
lret
cli
repnz
pop
fidivrs
xor
fptan
fbld
sub
jmp
mulb
scas
ljmp
lcall
mov
bound
inc
decl
fdivrl
inc
jmp
lcall
add
sub
pop
jmp
js
add
add
dec
sbb
iret
mov
adc
or
in
inc
or
daa
rcrb
dec
das
rolb
xchg
push
push
or
addb
aam
jae
or
rcrb
add
inc
andb
stos
leave
cmp
mov
pop
clc
or
and
mov
daa
cmp
pop
outsb
xlat
dec
push
call
imul
loope
popf
les
push
clc
pop
dec
cld
pop
shl
ljmp
pop
lea
mov
xchg
int3
sbb
pandn
add
inc
aaa
sbb
enter
pop
gs
ja
adc
sub
and
inc
ffree
push
xchg
dec
out
std
pop
ret
pop
in
pop
cmp
lret
add
xchg
lock
xchg
xor
orb
in
fnsave
sub
push
addb
xlat
adc
mov
pusha
arpl
add
or
jmp
mov
mov
pop
cli
icebp
hlt
ja
iret
sbbl
dec
dec
sahf
add
dec
loopne
xor
fidivrs
cld
mov
jbe
lea
push
rorb
iret
pushf
inc
pop
pop
pop
js
and
mov
mov
adc
xchg
sahf
stos
xchg
mov
mov
mov
add
or
out
add
pop
mov
movsl
jnp
jo
add
ds
punpcklwd
popf
mov
repz
pop
mov
pop
pusha
data16
lret
sub
adc
insl
mov
sbb
fs
add
xlat
ljmp
jg
imul
or
daa
das
cmp
cwtl
adc
popf
and
nop
mov
loope
fnsave
xchg
xor
fstpl
sub
add
fsubs
add
mov
addl
push
dec
add
repnz
mov
xchg
repnz
sti
outsl
or
or
fwait
bound
cmp
add
js
fisubs
repnz
pop
and
jno
scas
popf
mov
fcmovb
int
popa
pop
adc
jecxz
ljmp
aam
pusha
xor
mov
dec
test
and
out
xor
add
dec
lods
jecxz
add
mov
sbb
dec
iret
and
pushf
test
adc
hlt
xchg
push
push
repnz
pop
xchg
jl
add
sbb
outsb
mov
clc
pop
stos
add
jle
sbb
pshufw
inc
sub
les
adc
inc
movsb
dec
das
test
cmp
add
mov
jmp
add
sub
mov
rcrb
or
out
fidivl
popf
mov
addr16
jmp
adc
xlat
notb
or
pusha
add
xchg
push
femms
jmp
clc
jno
fcompl
mov
lret
test
sbb
popa
icebp
out
test
jnp
and
movsb
test
ret
adc
xor
or
sbb
mov
mov
aas
xor
rcr
add
shrl
cmc
andb
adc
inc
stos
incl
sti
push
mov
das
mov
add
pop
fnsave
pop
popf
and
andb
xchg
add
dec
dec
mov
pop
mov
movsb
subl
jbe
jge
fwait
xor
xchg
stc
mov
jae
cmpsl
lds
mov
lods
push
mov
jmp
addb
mov
rorl
fisubrs
adc
or
cmp
cli
mov
int3
out
repz
mov
mov
out
pop
jmp
push
cwtl
add
shrb
out
jb
inc
xor
dec
lock
adc
lock
jb
mov
icebp
mov
popa
xchg
xor
mov
and
jmp
pop
dec
jo
stos
or
inc
mov
add
push
inc
pop
push
pop
or
add
adc
popa
sub
int
xchg
into
iret
mov
xchg
push
aaa
push
dec
mov
outsb
frstor
andb
jno
aas
sub
xor
jnp
add
dec
lahf
add
pop
pop
mov
rorl
cmp
xor
add
mov
sbb
ret
rdtsc
xchg
cmp
sub
add
cmp
xchg
cs
mov
mov
jge
into
add
inc
scas
stos
dec
pop
mov
mov
outsb
in
daa
paddsw
leave
push
push
add
mov
cltd
xor
ljmp
sub
mov
xchg
push
add
das
repnz
lcall
js
mov
xchg
jmp
add
and
or
push
inc
inc
push
test
mov
out
push
and
daa
mov
hlt
sbb
mov
out
pushf
fiadds
mov
loope
imul
adc
loop
add
dec
or
pop
jae
pop
sbb
jne,pt
mov
cld
jns
sbb
pop
mov
xchg
mov
icebp
call
push
adc
sbb
stos
mov
pushl
stc
outsl
int
cmp
dec
jle
push
insb
or
aaa
cmpsl
add
adc
inc
push
add
push
add
icebp
inc
sub
adc
jno
stc
push
xlat
out
xchg
cli
xchg
pop
loope
or
dec
out
xorl
sbb
lds
fcmovnb
xchg
add
xchg
outsl
lods
add
outsl
adc
ja
pop
ljmp
idivb
add
inc
popa
xchg
lods
loope
clc
lea
mov
out
pusha
mov
mov
fists
or
pop
std
and
jb
mov
test
jmp
and
push
xor
aaa
pop
pop
lret
ficoml
sub
xor
add
call
lock
inc
imul
push
pop
jecxz
xor
repnz
addb
imul
outsb
popa
xor
inc
or
add
adc
push
rcrl
mov
mov
mov
jecxz
faddl
jno
cmp
lret
push
push
fiadds
inc
or
xchg
pop
adc
testl
mov
test
test
rolb
cmp
mov
xchg
imul
popa
cld
fcmovu
push
push
push
or
incb
and
mov
jle
gs
lods
or
mov
enter
dec
add
xor
cmp
mov
shrb
mov
fwait
mul
jo
mov
insl
add
add
jle
cli
xchg
ljmp
movsl
mov
in
repnz
add
outsb
pop
cs
cmp
and
adc
enter
scas
dec
xorb
inc
and
out
or
push
mov
jmp
push
out
ficoms
add
negb
add
outsb
mov
and
enter
jno
mov
or
mov
mov
add
cmp
jmp
psrld
or
push
inc
aad
push
rcrl
fsubr
in
mov
enter
in
test
and
push
cmp
orb
cmp
sbb
mov
and
adc
mov
cs
jmp
sbb
out
pop
push
and
int
pusha
stos
js
rol
sub
pop
and
push
fdiv
pusha
pop
ret
or
mov
pop
sbb
sbb
leave
jp
das
std
imul
movsb
adc
cltd
outsl
std
adc
sbb
mov
add
mov
push
iret
stc
inc
sti
stos
cltd
clc
jb
add
lcall
icebp
pop
mov
imul
mulb
add
stos
mov
pushf
mov
or
jns
inc
push
or
add
pop
push
add
es
xor
mov
shlb
cmpl
aam
dec
mov
roll
nop
and
fbstp
add
jae
cmp
mov
scas
mov
out
or
inc
push
add
xchg
stos
cs
enter
jl
popf
gs
sub
add
adc
adc
pop
mov
mov
dec
pop
lret
push
dec
ja
stos
mov
in
ret
inc
pop
mov
out
sub
inc
mov
lcall
inc
sarb
push
add
mov
or
lahf
xchg
mov
push
inc
and
int
or
pop
jg
popa
add
iret
dec
add
sbb
sbb
mov
out
sub
xchg
lea
jle
gs
push
push
pop
imul
pusha
lods
fwait
loopne
pop
jmp
adc
insb
mov
ds
sub
inc
neg
loopne
sahf
call
pop
and
adc
add
mov
lret
or
sbb
out
lds
jae
mov
ret
popf
push
ja
mov
cmp
das
pop
dec
sbb
test
adc
sti
add
push
je
push
cld
insb
push
xor
insl
imul
stos
mov
xor
xlat
stos
int
fs
sti
sbb
in
bound
testb
movsb
xchg
mov
fmuls
add
xor
iret
fnstsw
pop
mov
popa
or
aad
add
pop
dec
xor
in
mov
lea
push
andl
lahf
shlb
shlb
jnp
mov
arpl
mov
xorb
sbb
pop
mov
pusha
mov
sahf
jnp
rol
mov
cmp
lret
pop
push
add
inc
inc
xor
sbb
insl
jno
sahf
add
mov
push
in
les
test
sbb
pop
mov
call
pop
js
jae
out
incb
outsl
push
in
mov
xchg
sub
or
cmc
xchg
inc
xor
loopne
mov
fmulp
popa
add
cs
mov
pusha
dec
sub
push
mov
ljmp
add
rcr
sti
sub
jb
sbb
adc
dec
jbe
pop
sti
aad
lret
mov
jb
insl
rcll
mov
push
jecxz
dec
inc
popa
mov
xchg
jno
leave
clc
pop
sahf
push
fisubrl
mov
and
lea
pusha
mov
ss
popa
pop
sbb
cmp
cmp
pmuludq
mov
mov
rcl
xor
imul
mov
dec
cmpsb
add
mov
or
loopne
inc
movaps
push
aad
adc
sub
mov
xchg
sbb
dec
shlb
fldt
xor
pusha
fsubrs
or
mov
xchg
sbb
lock
inc
fistps
insl
pop
popa
fnsave
daa
jae
cmpsl
pop
cmpsb
imul
sbbb
loopne
mov
push
push
das
aaa
stos
adcb
push
xor
mov
loope
stc
jg
hlt
xor
cmc
pushf
sub
push
add
fbstp
sahf
adc
or
xchg
ret
mov
ret
xchg
and
inc
jno
add
cli
mov
mov
les
mov
outsl
pop
jne
pop
lods
pop
mov
mov
int3
rorb
adc
gs
mov
pop
pusha
mov
and
popa
pop
mov
mov
pop
jne
clc
mov
push
daa
scas
sub
andb
movsl
adc
adc
test
lea
add
gs
adc
loopne
jecxz
and
pusha
push
lock
mov
sahf
xor
out
cs
cmp
cmp
adc
shll
mov
pop
push
fs
add
inc
fcomps
pop
push
popf
aaa
cmpsb
xchg
sbb
leave
mov
les
sbb
and
push
rolb
andb
popa
dec
rolb
mov
cmp
jb
in
push
add
mov
ficoms
adc
mov
sbb
loope
call
mov
jo
out
inc
nop
pop
popa
scas
cmp
ret
repnz
lcall
aaa
das
or
jge
jge
jecxz
inc
mov
js
push
stc
mov
fldt
xchg
add
shll
adc
and
adc
add
shrl
fnstsw
and
cmp
jge
sub
mov
add
scas
neg
sbb
xor
aaa
mov
jnp
pop
mov
cmc
call
ljmp
mov
cld
sub
pop
mov
addr16
cmp
jne
hlt
add
rcll
push
jo
xor
sub
cmp
add
fwait
mov
inc
jmp
shl
adc
pop
outsl
rolb
add
sub
popf
clc
sbb
idivb
mov
hlt
xchg
mov
add
push
push
mov
das
js
mov
xchg
inc
or
mov
push
mov
and
mov
dec
jbe
clc
repnz
mov
mov
test
xchg
ds
in
push
dec
in
loope
adc
push
adc
ficoml
imulb
imul
pop
pop
pop
nop
outsb
test
and
iret
aas
mulb
pop
insb
jbe
sbb
and
push
xchg
inc
and
sti
sub
pop
out
dec
test
leave
or
sbb
outsb
and
jg
daa
fisttpl
nop
pop
mov
mov
ror
dec
loopne
nop
pop
or
lea
popf
and
das
mov
add
sbb
xchg
xchg
call
push
push
push
mov
mov
mov
fldcw
bound
inc
sbb
mov
incb
dec
mov
jno
inc
mov
test
vcvtps2dq
or
and
cmp
fwait
dec
or
adc
arpl
and
int3
dec
mov
mov
bound
mov
out
mov
push
dec
cli
shrl
mov
aam
nop
jb
scas
pushf
in
dec
test
mov
mov
cmp
loopne
cwtl
lea
les
mov
fnstcw
mov
mov
jg
push
jg
pop
adc
enter
xchg
insl
sbb
aam
pop
jnp
and
and
jae
mov
stc
pop
inc
inc
daa
push
mov
addl
sbb
lock
test
mov
cmc
pop
jae
jbe
out
lock
clc
das
jbe
test
stc
into
add
jmp
inc
adc
enter
pushf
xchg
mov
outsb
mov
sbb
sub
sub
mov
xor
and
out
add
cld
lret
jo
adc
and
imul
add
dec
cmc
xchg
xor
and
loop
inc
mov
cwtl
fbld
or
cwtl
lods
xor
cmp
pop
add
or
outsl
repz
dec
stc
dec
xor
cmp
je
cmpsb
aad
fsubl
sub
adc
sbbb
mov
add
nop
sub
andb
sub
inc
mov
in
pop
cld
rcr
fwait
mov
xlat
fildll
adc
daa
cmp
pushl
insb
ret
push
jmp
out
loopne
lds
scas
out
pop
mov
add
aaa
lds
cmpsl
inc
mov
into
mov
inc
pop
xchg
push
mov
push
jae
ja
pop
jnp
cmp
inc
inc
or
xchg
leave
add
and
push
sbbl
mov
clc
pop
jg
fcomip
mov
daa
flds
rcrl
shl
fistpll
mov
xor
adc
in
push
sub
aaa
popf
add
jb
and
xchg
cmp
jne
scas
aas
repz
mov
mov
ficomps
jl
xorb
adc
nop
je
cs
movsl
sbbl
insl
cmpsb
loopne
inc
add
mov
xor
push
int3
mov
adc
mov
xor
mov
in
outsl
out
mov
aaa
adc
xor
jbe
das
in
add
add
fnstsw
jecxz
in
repnz
in
aaa
fsubrs
xchg
lcall
sub
loope
sbbb
mov
outsl
mov
mov
sub
lea
pusha
push
stos
in
jg
sbb
push
inc
pop
jne
and
push
jns
xchg
xor
cmp
icebp
mov
lock
dec
add
cmp
cmp
movsl
pop
pop
and
pusha
push
repnz
add
bound
xor
test
pop
mov
mov
push
aaa
je
xchg
inc
repz
insb
mov
xchg
fldt
imul
fxch
inc
fildl
mov
xchg
cwtl
add
xchg
adc
rclb
pop
and
negl
push
mov
push
add
pop
push
pusha
xchg
popa
cld
rcrl
xchg
cmp
push
sbb
js
cmpsb
cwtl
add
sbb
shlb
sub
push
add
pop
xchg
mov
cmpsl
add
rcrl
int3
stc
pop
andb
add
mov
sbb
outsb
lods
add
sar
push
pop
scas
adc
lahf
rolb
add
sub
add
dec
cmp
mov
popa
out
adc
cmp
add
out
mov
mov
or
cmc
pop
nop
and
int
or
movsb
popa
jno
inc
or
xchg
leave
push
lcall
add
mov
clc
stos
pusha
cltd
mov
and
sbb
adc
fstpt
sbb
xchg
add
pop
push
push
mov
adc
or
inc
shll
push
mov
mov
mov
jp
sbb
in
inc
lock
mov
add
in
adc
dec
mov
inc
movl
or
sbb
adc
fstps
stos
lret
lret
add
repz
outsl
add
loop
test
add
xor
ljmp
jnp
pusha
add
dec
pop
adc
push
xchg
decb
push
in
in
mov
test
stos
add
jmp
sub
popf
inc
cmpsl
stc
adc
or
fists
mov
pop
sbb
inc
pop
add
je
mov
pop
and
ljmp
push
mov
popl
mov
xchg
mov
mov
notl
push
in
xor
jne
stc
pop
test
add
and
xchg
inc
xor
push
sub
xlat
loop
aam
idivb
xchg
jb
xor
lods
adc
ljmp
pop
jae
mov
sub
push
add
jbe
cmpsb
mov
xchg
pop
out
mov
xor
add
std
sbbb
mov
fcoml
es
mov
jno
stc
push
inc
inc
add
fistpl
push
rolb
mov
and
jmp
dec
cwtl
sbb
lret
and
adc
jmp
ds
lods
rcll
jl
mov
subb
cmpsb
call
scas
popa
cmc
push
movsb
pusha
popf
add
adc
lds
ret
inc
jmp
mov
in
mov
shlb
add
jne
inc
add
out
xor
mov
xlat
jmp
xchg
out
pushf
clc
cmc
loopne
nop
mov
jno
add
lods
fmuls
sub
divb
dec
adc
addr16
in
add
pop
dec
out
stos
push
xor
inc
mov
xor
add
nop
pop
jae
stos
and
ret
rcll
icebp
test
jo
mov
js
xchg
xchg
imul
adc
mov
mov
or
xchg
add
lahf
and
jbe
dec
cli
lods
sbb
divb
lret
mov
leave
pop
gs
rcl
fiaddl
dec
sbb
ljmp
out
ret
cmp
gs
lds
mov
je
xchg
pop
ds
sub
or
in
mov
add
sub
add
insl
sub
dec
ret
cwtl
push
sub
pop
and
and
dec
or
adc
add
aaa
shlb
repz
aad
sti
or
add
ret
mov
js
add
xor
dec
push
or
and
popa
pop
adc
pop
add
mov
xlat
pop
inc
repz
and
add
xchg
filds
push
hlt
mov
popf
rolb
sahf
xor
into
outsb
push
imul
lds
mov
int3
pop
fistpll
push
jns
pop
add
pop
and
sub
dec
adc
sbb
sub
test
add
cmp
in
jmp
fiaddl
push
cltd
sbb
cmp
sub
psllw
idivl
add
in
sbb
dec
popf
dec
jnp
fisubrl
mov
pop
pusha
mov
dec
cmc
jg
adc
sahf
dec
aas
pusha
aaa
push
mov
mov
ds
or
or
nop
xor
imul
dec
or
adc
hlt
insl
add
xchg
les
and
test
fbstp
add
xchg
jo
adc
push
inc
add
push
adc
jne
cmp
add
loop
incl
mov
imul
push
loopne
dec
stc
lods
mov
fwait
xor
int
stos
push
and
lcall
stos
mov
das
adc
loope
mov
movsb
sbb
std
es
dec
shrb
jle
push
sbb
pop
or
fistl
add
pop
aas
iret
xchg
outsl
mov
cli
inc
jmp
cwtl
and
cmp
push
cld
inc
or
add
xor
add
xchg
or
imul
leavew
mov
mov
jecxz
jnp
push
pop
add
cmp
add
les
add
and
cmp
xor
sbb
outsb
adc
xchg
cs
dec
jae
mov
fsubrl
cltd
add
mov
lock
pop
loop
mov
imul
inc
sub
cltd
cs
push
pushf
leave
push
lds
and
xchg
mov
push
push
mov
lret
mov
mov
add
out
jae
popa
push
sarl
stc
and
arpl
sbb
ror
mov
lret
push
mov
inc
stos
push
xchg
ret
xlat
aaa
shlb
out
lahf
ds
pop
addb
pop
add
add
mov
jmp
adc
pop
orb
daa
notb
xor
jo
stos
xor
out
jge
mov
jp
popf
clc
add
ds
jl
cltd
push
sub
mov
dec
call
pop
lret
and
and
pop
addl
or
push
add
stos
pop
and
cmp
or
add
in
ficoml
mov
add
iret
adc
ds
jle
fimuls
loop
cmp
jns
arpl
adc
repz
jnp
xchg
jle
add
push
stos
shrb
test
inc
mov
adc
xlat
jo
ja
inc
sbb
cmp
jnp
movsl
mov
bnd
push
or
lret
add
adc
push
stos
pop
jae
mov
daa
cmp
sub
addr16
mov
pop
and
mov
pop
push
adc
add
pop
popl
fidivrl
mov
je
push
pop
cli
arpl
sub
or
add
jmp
fmull
nop
incb
or
mov
jo
add
sbb
add
and
and
push
dec
cmp
push
sbb
gs
and
mull
nop
push
mov
iret
rolb
add
jae
lds
mov
cltd
pop
mov
dec
pop
pop
lds
std
or
scas
out
add
xor
fidivl
nop
pop
jp
sbb
add
clc
xor
insb
sub
neg
fiadds
cvtdq2ps
jns
sub
xchg
mov
add
jb
daa
or
sti
jg
sbb
fsubrl
pushf
push
subb
add
clc
dec
test
ja
stos
ljmp
add
jo
xor
inc
daa
sub
mov
call
loopne
mov
dec
dec
fbstp
jnp
jge
add
xor
push
or
dec
lea
jnp
add
sbb
fldt
call
xchg
pusha
jecxz
and
out
mov
and
dec
pusha
dec
mov
testb
adc
push
popf
dec
pop
rclb
xor
popf
or
push
jecxz
push
out
xor
mov
cli
std
aaa
sahf
or
fisubrs
jnp
fwait
aaa
fxtract
add
fs
inc
mov
jle
ds
jbe
xorb
jmp
xchg
adc
mov
jbe
add
sti
cmpsb
and
jp
jne
pop
rcrl
int
les
push
or
push
mov
lcall
stos
sbb
inc
scas
shr
and
jo
pop
leave
dec
pop
subl
lods
mov
mov
mov
adc
pop
jo
iret
inc
xchg
pop
imul
ss
xor
push
fisubrs
cmpsb
jmp
mov
fucomip
in
xchg
fidivl
pop
jl
add
pop
jmp
add
mov
push
sub
outsl
pushf
insb
xor
pop
mov
push
out
jo
test
in
mov
icebp
and
or
inc
xchg
pop
ja
pop
fldenv
jb
sbb
dec
jp
test
or
sarl
pop
sub
loopne
push
lods
cmpsb
mov
cli
pop
pop
push
daa
in
add
sti
test
add
orb
fisttps
mov
aaa
cmp
icebp
test
mov
movsl
fbld
das
fsubp
ret
mov
dec
xor
stc
push
push
in
xchg
sub
sbb
inc
mov
negl
push
mov
sbb
stos
mov
sbb
push
incl
scas
imul
mov
fs
or
repnz
adc
lods
push
enter
xchg
iret
xchg
subb
pop
dec
in
cmp
xchg
mov
daa
shll
inc
filds
jmp
xchg
stos
mov
or
cmp
or
or
pop
add
add
cld
add
popa
mov
int3
je
dec
loope
and
in
test
add
sub
xchg
sub
scas
pop
xlat
jbe
aad
pop
fildll
or
aad
pop
dec
sub
pop
cmp
mov
pop
and
jle
add
pusha
mov
and
sub
stos
addb
xchg
xlat
sbbb
fbstp
adc
shr
shll
lea
adc
dec
inc
pop
daa
pusha
jns
das
jbe
push
je
inc
into
mov
ficoms
mov
jp
pop
add
scas
in
lods
add
pusha
push
cmp
mov
dec
popa
jecxz
das
mov
out
lods
jbe
xchg
xor
jb
xchg
jge
push
xlat
les
aas
and
dec
jb
test
mov
push
outsl
mov
mov
cld
call
inc
xchg
mov
add
dec
add
in
cltd
sbb
mov
clc
jp
and
iret
cld
mov
mov
aam
or
pop
jmp
fstpl
mov
push
xor
stc
fs
or
movsb
pushf
add
mov
adc
push
or
add
mov
js
clc
je
lock
dec
inc
scas
sub
sbb
mov
out
jle
mov
ss
sarl
adcl
mov
cmp
pop
mov
add
mov
or
aaa
add
push
es
cmp
inc
and
push
and
xchg
add
add
jnp
jno
lea
sbb
xchg
pop
jl
mov
fs
fsubrs
cmp
imul
sub
jnp
jg
push
ret
xor
push
roll
pop
dec
push
cmp
lret
pusha
aam
loope
mov
push
and
inc
xchg
out
push
add
jmp
icebp
jle
xor
xor
sub
pop
xchg
mov
das
mov
add
popa
xchg
jo
jbe
pop
int
xor
pop
mov
insl
push
push
mov
popf
jae
sub
xchg
jnp
js
lret
daa
mov
les
xlat
inc
xchg
sub
pop
mov
mov
nop
lahf
and
inc
push
mov
push
pop
adc
pop
popa
jnp
jo
ljmp
xor
mov
lods
imul
rcr
int3
cmc
pop
daa
jmp
push
cmpsl
test
adc
adc
nop
repnz
adc
repz
dec
negl
push
mov
dec
lds
adc
jmp
lret
xchg
jnp
sub
and
int
push
add
and
pop
mov
into
jae
js
out
add
adc
imul
or
mov
out
leave
push
adcb
or
jne
sbb
cld
adc
loope
adc
cld
push
mov
sbb
lahf
adc
fsub
pop
jge
jnp
add
insl
mov
xlat
pop
xor
rcll
fisubrs
xchg
dec
repz
fs
add
jmp
sbb
rclb
push
and
and
jmp
shll
inc
sub
rcl
mov
push
data16
test
and
xor
fcmovb
xchg
out
icebp
mov
jmp
mov
pop
andl
xchg
aam
cmp
es
test
jmp
mov
lods
fisttpll
or
popa
push
mov
inc
cmp
adc
or
arpl
mov
sub
adc
aas
dec
pop
cmp
divb
divl
out
cmp
mov
pop
lret
lods
imul
add
movaps
adc
cmp
cld
ja
sti
jo
repnz
out
push
add
lds
fwait
mov
pop
mov
cld
jp
or
sub
sub
lret
cmp
xor
mov
mov
test
shl
push
mov
jl
inc
iret
sbb
ds
or
pop
ljmp
push
xor
jnp
xchg
push
sub
dec
hlt
mov
and
in
mov
xor
push
pusha
mov
fwait
add
popa
adc
ljmp
nop
int
rcr
xchg
stos
add
mov
and
ret
dec
inc
push
mov
fildl
clc
cmpsl
xorb
sub
add
stc
cs
pop
push
mov
fistl
pop
dec
nop
outsb
jne
push
jle
loop
fldl
sbb
mov
xchg
dec
add
or
daa
add
dec
pop
mov
pop
dec
add
mov
subb
sub
sub
es
add
movlps
sbb
sub
and
add
repnz
jns
xchg
lcall
dec
add
test
inc
sbb
enter
sub
orb
in
or
shl
leave
in
das
xchg
adcl
pop
clc
addl
pop
outsl
dec
imul
xor
add
jnp
xchg
adc
mov
pop
mov
xchg
mov
cmpl
add
pop
adc
sbb
nop
push
hlt
in
xchg
out
minps
adc
ret
inc
add
jbe
lods
cmpsb
adcb
cli
pop
mov
out
jne
data16
mov
mov
dec
push
sbb
mov
scas
clc
popa
inc
add
scas
aam
loope
mov
out
in
pusha
bound
add
and
movsl
js
sbb
daa
inc
or
cmpb
mov
cmpsl
lcall
add
mov
rorl
clc
push
lods
insl
cli
lods
dec
push
outsb
sbb
and
rorl
adc
sbb
xchg
or
rorb
xlat
popf
pop
mov
mov
clc
push
xchg
cld
mov
add
jo
and
pop
pop
mov
dec
outsb
stos
das
fdivrs
repz
and
pop
xor
out
add
test
ljmp
gs
mov
mov
jno
mov
in
mov
sub
pusha
xchg
or
sub
fnstsw
cmc
push
lret
les
lods
inc
dec
xchg
adc
loopne
mov
xor
enter
cmp
sub
push
aad
inc
nopl
lea
add
mov
pop
adc
mov
leave
jmp
jne
xor
data16
mov
cli
push
sbb
stc
push
push
movsb
rcll
sub
inc
pop
add
incl
cs
or
cwtl
sbb
mov
and
mov
mov
add
mov
nop
outsl
jg
sub
lods
mov
pop
daa
je
hlt
add
lds
mov
mov
xor
mov
imul
adc
mov
inc
stc
jne
add
and
test
fldl
mov
cmp
jp
in
dec
rol
fisubrs
enter
pushf
popa
fwait
xchg
push
stos
mov
aad
hlt
lods
shrl
int3
mov
testb
add
fmuls
shrl
pop
or
pop
cmpsl
jmp
dec
and
icebp
test
jne
mov
sub
xchg
fisttps
shll
lea
dec
sub
pop
push
mov
mov
dec
adc
xchg
cmp
or
push
dec
psllq
mov
xchg
add
and
mov
add
fmull
dec
add
movsb
and
xchg
push
and
cld
sub
lods
push
mov
imul
cmp
add
adc
popa
xor
int
stos
xchg
pop
insl
hlt
add
and
frstor
and
push
test
adc
or
js
add
add
jb
in
jl
pop
sub
shlb
sbb
imul
mov
cli
add
insl
ret
lods
stc
push
jl
mov
push
xor
jg
xchg
pop
push
mov
mov
add
aam
and
mov
push
add
mov
mov
mov
fwait
mov
inc
jae
or
pop
fs
mov
cmp
xor
and
xor
mov
xor
mov
and
mov
out
lods
sbb
sahf
add
cmp
aaa
and
enter
test
mov
outsl
addb
out
cwtl
mov
mov
insb
gs
fxch
andl
daa
cmpsl
jmp
enter
test
loopne
lods
sbb
cli
cmpsb
dec
pop
xchg
push
jmp
test
bound
and
inc
lock
or
mov
adc
and
add
push
sub
mov
mov
cld
cwtl
dec
in
mov
mov
repz
gs
mov
xchg
outsb
insl
mov
add
inc
and
pop
je
xchg
mov
add
shrb
jp
loopne
test
mov
lea
push
pop
aam
push
mov
cmpsb
nop
add
or
lods
subb
fldenv
mov
cli
outsl
jecxz
mov
leave
add
pop
call
xchg
add
push
mov
les
mov
push
xchg
push
mov
cmc
testb
cmp
rolb
insl
add
push
pop
push
adc
cmp
std
hlt
dec
jmp
lret
add
lcall
sahf
fucomip
popf
mov
inc
nop
push
adc
and
jo
inc
push
push
fistpll
push
push
imul
jb
cmpl
mov
ljmp
push
and
push
pop
ljmp
fwait
mov
das
mov
cmp
jle
call
test
add
pop
gs
imul
fwait
loopne
cvtps2pd
xor
fcomps
sub
pop
jns
dec
fisubs
push
xchg
sbb
jle
loop
or
dec
cli
mov
sub
xchg
pop
and
insb
ret
popa
scas
fcoml
popf
and
sbb
or
push
cmp
int3
jae
mov
test
dec
stc
test
mov
mov
mov
test
mov
add
fadd
xchg
sub
outsb
iret
xchg
push
jb
mov
mov
cli
xchg
sbb
lds
fistpl
xchg
push
int3
cmp
or
xor
and
xchg
mov
adcl
out
faddl
xlat
push
lret
adc
inc
addl
aad
sub
je
dec
jne
cmp
ss
aas
lods
push
test
pop
jmp
add
mov
fidivrs
mov
aaa
pop
clc
mov
or
mov
mov
lcall
out
and
add
leave
test
pop
push
push
jge
inc
push
add
fldcw
mov
pop
hlt
xchg
cmp
fdivrl
pop
push
stc
sub
popf
cmc
add
xchg
jnp
cmp
ljmp
in
jno
test
fisttpll
stos
pusha
icebp
arpl
cmp
fsubrs
repz
inc
int
mov
das
outsb
jge
fsubrs
adc
adc
cld
add
popa
jle
inc
mov
aas
sub
pop
jno
cmp
ficompl
mov
fimuls
sub
sub
fdivrl
dec
jecxz
repnz
mov
movsb
pop
pusha
pop
push
sub
pop
inc
data16
andl
loope
mov
pop
add
jns
leave
push
cmc
xchg
fstpl
imul
push
lods
mov
cli
hlt
push
push
mov
negl
inc
or
add
int
call
mov
vpmacssdd
ja
rorl
inc
pop
jne
lahf
sbb
out
lods
pop
cmp
push
ja
jns
sti
add
fdivrp
jl
cs
adc
mov
add
xchg
or
shlb
lcall
cmpsb
lods
add
adc
mov
mov
push
pop
outsl
popa
mull
mov
mov
or
lret
sub
test
leave
jnp
pop
ds
jl
cmp
jg
sti
sub
and
andb
addr16
mov
into
pop
mov
and
aad
push
or
cmp
adc
faddl
ror
xor
xchg
mov
loope
lahf
std
jle
sub
add
repz
int3
pop
sarb
and
aaa
xchg
fistps
xchg
mov
sub
xchg
ds
mov
icebp
dec
xchg
cmp
adc
shl
ja
and
aaa
sbb
adc
shrl
lcall
dec
mov
mov
clc
rorl
jmp
ds
ficoms
sub
scas
sbb
add
jbe
add
sti
mov
lods
add
push
int3
jnp
cmp
add
and
inc
pop
bound
xchg
popa
out
xor
or
pop
jae
add
jbe
push
rorb
adc
ret
int
add
cmp
add
inc
xor
movsb
sub
cmp
add
and
mov
je
rcr
dec
enter
cmp
cmp
mov
xchg
push
pop
add
ret
and
pop
add
sub
jae
xchg
mov
int
scas
dec
test
xor
add
popa
mov
or
push
leave
xchg
jmp
add
aaa
addb
dec
arpl
into
inc
cwtl
out
add
aam
push
fldenv
add
lock
add
adc
std
xor
sarb
cmpsb
aad
dec
cld
str
xor
rolb
scas
sbb
push
pop
and
lods
add
aaa
mov
jle
or
cmpb
test
scas
add
ds
add
push
imul
data16
gs
js
push
dec
lock
and
aas
aaa
stos
out
jnp
cmp
shrl
jmp
clc
mov
pop
cmc
dec
outsl
and
add
sbb
mov
pop
loopne
sbb
lods
mov
xlat
sbb
adc
dec
pushf
aad
cld
leave
jbe
add
aam
sti
cs
sbb
sahf
mov
mov
ret
or
lret
pop
roll
in
popa
out
push
xor
gs
push
jle
adc
mov
inc
xchg
push
pop
insb
mov
pop
push
idivl
icebp
shrb
xchg
mov
adc
js
add
push
out
mov
sbb
pushl
add
and
pop
pop
add
mov
dec
jno
add
mov
scas
add
sub
push
push
sub
mov
jle
or
stos
or
scas
xor
sub
movl
movsl
out
ljmp
push
pop
adc
aas
add
or
mov
loope
rolb
imul
cmp
test
cmp
inc
add
adc
lods
xor
aad
inc
imulb
add
adc
pop
inc
ss
xchg
rol
idivb
das
push
cmp
lret
mov
xor
and
insl
push
movsb
lret
add
mov
outsl
add
lahf
mov
shr
fwait
add
add
ja
xchg
scas
outsb
orb
adc
popa
into
in
fisttps
insb
inc
andl
xchg
or
jb
and
pusha
push
cmp
lea
lock
clc
lds
and
push
orb
add
add
and
fldl
mov
cmp
xchg
imul
pop
sub
add
push
jne
push
insb
cmp
cmp
add
cwtl
mov
add
sbb
xchg
js
add
insb
cmp
xchg
jo
mov
mov
inc
je
add
xchg
jecxz
jg
add
sbb
scas
pop
cmp
cmpb
nop
add
add
xor
jg
adc
add
jb
add
xchg
jmp
rol
sbb
push
aam
dec
adc
jle
mov
movb
loope
add
add
pop
or
xchg
es
push
imul
mov
mov
rclb
sbbb
lea
orb
ss
jnp
cmp
cmpsl
add
rdmsr
sbb
shll
pop
add
insl
rorb
xchg
add
sub
xor
mov
outsb
mov
jecxz
add
adcl
xorb
xor
fsubrp
rolb
xchg
fcomps
add
das
lds
sbb
xlat
roll
aam
loop
into
cmp
fidivl
scas
pop
aad
and
xor
stos
in
test
inc
fwait
out
mov
dec
add
add
clc
adcl
xchg
cmp
mov
jmp
pop
repz
pop
call
movsb
adc
lods
jbe
movd
mov
icebp
cli
inc
add
rcrb
pop
push
pop
mov
orl
add
icebp
dec
xchg
ljmp
lods
mov
xchg
into
shl
push
sbb
jae
xor
clc
add
add
shrl
frstor
div
jl
sbb
mov
cmpsl
cmp
xor
lock
stos
sbb
sti
sbb
sub
and
cmp
jmp
cwtl
add
jecxz
add
imul
out
xor
xor
cmp
xchg
adc
stos
xor
js
loopne
xor
lods
shll
sbb
stos
mov
subl
nop
cwtl
addb
rolb
dec
mov
jmp
fisttps
stos
sbb
push
cmc
add
inc
xor
cmp
jl
mov
mov
cs
add
jbe
popf
mov
stos
mov
lret
pop
mov
mov
lock
ja
ljmp
in
or
test
jne
aaa
mov
je
nop
xchg
out
std
jns
mov
mov
add
sbb
aaa
outsl
fnstsw
ds
add
sub
xor
xor
and
mov
popf
in
and
in
f2xm1
push
pop
inc
push
out
jno
cmp
aad
js
ljmp
pop
jg
mov
mov
sub
cmp
push
dec
push
repnz
or
icebp
divl
cmp
shll
jbe
adc
push
addb
adc
pmaxub
jbe
sbb
lock
mov
xor
mov
fcmovnbe
mov
mov
dec
sbb
jl
outsb
outsl
shlb
pop
daa
jl
add
cs
add
int3
loope
xor
in
in
dec
jl
dec
jae
or
push
popa
ljmp
mov
mov
idivl
adc
pop
push
jne
aam
rolb
or
mov
data16
push
add
aad
fisubs
push
cmp
push
fistps
nop
enter
and
adc
nop
mov
inc
lret
jb
popf
push
add
cmp
xor
or
add
mov
jl
insb
push
push
sbb
and
in
jae
cmp
push
push
and
gs
cmpsb
nop
pop
rol
xlat
inc
sbb
xchg
lcall
jns
rorb
push
add
sub
add
out
jmp
add
loopne
imul
add
xor
iret
jmp
pop
lock
lahf
pop
cwtl
ja
test
lods
cmp
stc
in
mov
sbb
mov
dec
addr16
pop
push
rclb
je
inc
mov
aas
incl
mov
inc
das
lea
dec
pushf
xor
sbb
mov
inc
mov
push
push
addr16
xchg
icebp
push
add
add
inc
jmp
push
dec
rcl
jg
jo
sub
or
mov
push
xlat
dec
add
mov
xchg
ljmp
add
or
add
push
xor
push
addl
sbb
jns
add
mov
mov
pop
push
out
sbb
sbb
in
loopne
cmp
int
testb
js
cmp
cmp
insb
add
inc
les
xor
mov
push
jne
std
cmp
and
push
and
outsb
push
sbb
push
jecxz
sub
sbb
cltd
adc
addr16
mov
mov
sbb
idivb
dec
ret
add
addb
data16
andb
or
int
push
js
jmp
mov
fcomps
out
les
jp
add
push
stos
lock
call
aaa
mov
pusha
xorb
sbb
stc
ret
shlb
jbe
fisubrl
or
sbb
or
sub
jo
jp
pop
sbb
sub
mov
xor
fcoml
push
add
mov
adc
shl
divb
clc
jns
jb
xor
mov
add
lret
add
and
mov
add
repnz
popa
pusha
add
imul
push
jg
cld
test
fsubr
pop
ljmp
div
jae
and
and
pop
mov
sub
sbb
push
adc
fstpt
loopne
ret
dec
enter
loop
out
jmp
dec
hlt
mov
add
das
ja
cmp
mov
xchg
stc
mov
xchg
shll
xchg
adc
add
xor
repz
add
mov
or
bound
or
and
adc
mov
roll
inc
cmp
icebp
pusha
out
or
and
ljmp
and
lret
jecxz
push
ret
aam
sbbb
adc
mov
sbb
in
int
enter
mov
or
xchg
sbb
sub
lahf
sbb
pop
lock
jne
sar
enter
addb
lret
xor
lock
sbb
fnstsw
xor
adc
lods
icebp
xor
jecxz
push
clc
imul
ds
daa
out
aas
xor
push
cmp
cmp
and
test
pop
mov
add
iret
xchg
ficompl
cmp
icebp
adc
in
push
inc
sbb
push
mov
cmp
fs
call
icebp
ljmp
pop
test
add
push
cmp
imul
adc
cmp
or
mov
fcoms
pusha
out
repnz
add
sbb
outsl
push
push
push
sub
jmp
insl
lahf
add
movsl
jle
cmp
mov
add
xchg
add
add
and
mov
or
push
xor
mov
push
dec
hlt
pusha
rclb
fmul
inc
pop
add
lret
out
jo
test
push
lock
sarb
sbb
add
fldenv
data16
jne
cld
cmp
movsb
inc
dec
add
ret
inc
mov
and
outsb
out
addb
in
jo
gs
push
je
inc
cltd
insl
cmpb
pop
lods
add
outsb
inc
push
mov
mov
in
testl
xor
cltd
mov
gs
jle
daa
insb
pop
cli
pusha
inc
add
xchg
movsb
or
pop
mov
stos
xchg
clc
pop
roll
je
sub
test
sub
add
fs
cmp
mov
aam
flds
out
shll
pop
out
enter
sti
push
in
xor
sbb
mov
paddusw
pop
rorl
cmpsl
add
push
loopne
sbb
add
jl
push
push
sub
jb
sub
jns
and
xor
xchg
push
bound
rorb
jno
dec
repnz
shl
das
dec
mov
movsl
add
xchg
loope
subb
dec
clc
inc
into
add
sub
cmp
and
add
xchg
mov
push
and
push
xor
or
jecxz
pop
xor
add
shl
adc
sub
loopne
out
ja
mov
inc
ss
mov
sub
inc
mov
push
movb
or
dec
mov
push
les
fs
pushf
sbb
cmp
aam
jmp
lret
loopne
fadds
mov
aaa
ljmp
add
mov
icebp
adc
lret
testl
or
add
mov
cltd
cmp
into
adc
cmp
stc
es
jge
push
add
cmp
or
arpl
adc
loop
pushw
cltd
lock
add
lahf
ljmp
pop
lods
repz
jg
fistpl
loopne
ret
fnstenv
add
inc
test
ljmp
lret
jp
cmp
inc
xlat
jle
jne
or
int
imul
xchg
pushf
sbb
push
ret
mov
push
cmp
add
popf
sub
add
dec
push
and
or
sbb
loopne
aaa
fcompl
inc
xor
sarb
xchg
mov
and
aad
or
dec
push
add
push
stos
stc
arpl
and
sbbb
pusha
inc
jmp
pop
push
sbb
in
mov
enter
mov
add
cmp
inc
add
or
xor
es
js
inc
sub
jge
push
push
outsl
mov
pop
les
jl
dec
xor
movsb
shll
dec
push
cmp
fwait
sub
jp
pushf
xchg
pop
add
lods
xor
jbe
adcb
mov
mov
cmp
push
roll
jbe
cmp
jecxz
in
mul
or
push
cli
unpcklps
and
add
add
outsl
dec
push
sarl
mov
xor
popf
jae
dec
adc
pop
in
loopne
lock
push
cltd
add
lcall
add
push
cwtl
cli
mov
dec
fs
ret
push
and
push
cmp
lods
dec
add
imul
xchg
and
rolb
int
cld
iret
push
clc
fiaddl
xlat
jle
sbb
mov
push
lret
adc
mov
hlt
lcall
push
xchg
add
andl
or
pop
sub
push
push
negl
xchg
rolb
fiaddl
rcl
pop
add
pop
roll
test
mov
fsts
sbb
jo
jmp
push
sarb
push
pop
add
rorb
mov
or
mov
enter
sbb
shll
sbbb
loop
lock
call
mov
add
mov
call
fwait
push
add
jg
popf
add
out
adc
dec
mov
mov
mov
mov
andb
ds
mov
mov
outsl
jo
add
xchg
ljmp
outsb
sbb
xchg
add
jne
add
lds
std
repnz
add
out
or
shr
scas
push
push
test
push
inc
stos
sbb
and
or
sub
xlat
and
loopne
push
or
add
jno
fs
or
and
sub
jp
xor
dec
scas
int3
mov
pop
xchg
andb
test
test
mov
add
sbb
and
xchg
jbe
ret
ficoms
xchg
inc
pop
cmp
jnp
inc
jb
out
xor
cmp
xorl
xor
pop
xor
stos
adc
std
push
xor
mov
add
fwait
push
loopne
pushf
or
in
and
in
sub
in
sbb
dec
ja
cmp
movsl
cmp
dec
js
sahf
mov
stos
jno
jge
push
push
mov
mov
add
arpl
sbb
mov
mov
sub
cli
lcall
jne
adc
fs
lret
mov
repnz
mov
and
mov
cmp
jnp
lock
mov
stos
pop
test
in
das
lcall
adc
or
shlb
mov
jns
testl
push
lds
fcmovnb
xor
cwtl
push
mov
adc
stc
filds
out
or
and
sub
push
mov
rorl
add
cmp
call
pop
jno
imul
in
sub
jmp
xorb
aad
cli
cmpsl
xor
mov
xor
dec
shlb
adc
int
adc
enter
stc
std
sbb
mov
pop
adc
xchg
stos
mov
fimuls
or
cwtd
cmp
add
or
jbe
mov
mov
push
mov
call
dec
pop
subl
clc
orl
inc
mov
push
in
mov
push
test
inc
in
cmp
js
sub
cmp
imul
nopl
cmp
add
enter
ret
sbb
mov
and
mov
mov
in
xor
dec
sbb
sub
xchg
dec
xchg
add
mov
stc
jg
add
xchg
jmp
sbb
xor
test
sub
cmp
dec
push
push
xor
sti
shrb
pop
mov
mov
add
cs
fisubs
and
rcr
mov
inc
iret
cmp
add
je
xlat
add
mov
iret
mov
dec
leave
cmpsb
cmp
imul
rol
jo
inc
cmp
mov
xchg
jbe
fbld
add
mov
cltd
cmp
add
jnp
test
pop
jns
addb
pop
mov
lock
jnp
adc
pop
fsubrl
leave
sub
cmp
imul
adc
cmp
jns
add
pop
bound
movsb
je
bound
lret
mov
cli
cld
push
add
sarb
jae
add
add
jg
add
add
repz
lcall
cltd
scas
mov
add
mov
mov
aas
cmpsb
call
lcall
xchg
add
lahf
je
add
pushf
push
push
xchg
fdivrs
sub
comiss
inc
lods
and
sbb
push
mov
rcrb
cmp
xchg
lds
add
jmp
mov
xorb
mov
add
pop
inc
xor
xsha1
cmpsb
or
mov
movsl
scas
inc
enter
add
int3
and
in
dec
mov
lock
add
sbb
sub
or
push
mov
js
jmp
cwtl
push
in
and
ja
add
dec
pop
andb
cmpsb
dec
sub
xchg
push
xorb
lea
mov
xor
mov
mov
add
inc
sub
add
bound
rclb
sub
xchg
scas
lock
pop
pop
add
test
sahf
sub
xchg
aas
adc
sbb
add
pop
data16
cmp
cli
pop
inc
loopne
mov
cmp
xchg
mov
jmp
cwtl
or
sarb
popf
or
lret
shll
mov
mov
pop
sbb
test
mov
call
xchg
mov
inc
shll
sbb
or
out
pop
test
mov
sbb
addb
lock
jle
les
lahf
lret
xlat
mov
mov
add
stos
sbb
addr16
insb
mov
cmp
xor
enter
icebp
add
push
popf
xchg
stos
cmpsb
data16
hlt
add
add
jno
dec
cmp
call
out
push
sub
inc
add
std
push
mov
nop
outsl
out
add
insl
repnz
daa
jno
call
xchg
dec
push
sbb
lds
mov
xor
xorl
jne
xlat
fcoms
lods
push
stos
mov
add
cmp
add
lcall
cs
pop
adc
sbb
push
push
adc
clc
add
add
orb
out
cmpsb
arpl
pop
dec
cwtl
add
bound
sbb
jmp
mov
jno
cmp
rcr
jbe
mov
inc
shlb
int
sub
sbb
add
fldl
pop
addb
jnp
hlt
jno
stos
insb
sub
rorb
andl
xchg
mov
add
add
xor
mov
lods
and
mov
cmpb
fisubrs
loope
fdivs
xchg
add
loopne
ja
aam
jo
ret
add
bound
xchg
pop
cmpsl
add
jno
mov
loope
sub
aas
add
adcb
mov
push
sbb
adc
add
and
enter
add
mov
mov
xchg
jb
add
dec
add
aam
int3
mov
les
in
xchg
jl
add
inc
shlb
sbb
pop
push
movsl
adc
adcb
add
mov
or
arpl
fcoml
cmp
pop
jle
ret
adc
divl
in
dec
les
jge
inc
lock
jns
add
loopne
xchg
in
cmpsb
stc
andb
daa
sbb
out
std
and
pop
xchg
outsb
add
lret
cld
add
jb
adc
add
flds
lods
test
dec
xlat
cmp
pop
nop
mov
inc
ficoml
push
push
imul
int
insb
cmpsl
cmp
and
or
sub
xchg
cmp
movaps
lds
popa
add
xor
jbe
scas
out
mov
inc
mov
sub
leave
subb
mov
mov
sbb
mov
in
clc
hlt
dec
push
add
rorl
jo
xchg
xchg
cmp
or
add
aam
rcrl
inc
mov
pusha
sbb
jae
movsb
and
cld
shlb
sbb
in
xchg
xor
add
dec
lea
rolb
call
add
fstps
inc
cmpsb
mov
fbld
mov
jg
dec
add
fmul
adc
adc
dec
into
outsl
ret
pop
jo
inc
lock
js
add
out
mov
fsub
fistpll
push
bound
enter
adc
add
inc
fistpll
add
lea
aad
loop
shrb
xor
or
call
mov
jnp
cli
nop
fsubrs
fchs
mov
xor
popa
pop
fstp
jmp
stos
sbb
rolb
orl
push
movsb
in
scas
loopne
adcb
movl
xchg
fists
inc
or
das
jns
cs
dec
mov
add
stos
test
imul
popa
cmp
inc
push
inc
xor
dec
fs
jl
das
xlat
je
mov
add
xor
psubusb
jmp
rcr
in
dec
xor
xor
gs
or
pop
add
push
subb
insb
out
repz
and
jnp
add
push
mov
inc
pop
mov
outsb
ljmp
or
pusha
sbb
outsl
or
mov
add
rcr
cmpsl
lcall
outsb
imul
aam
in
arpl
add
mov
ret
imul
cmp
inc
push
int3
jp
add
sbb
insb
push
push
jno
cmpsl
aas
les
and
xchg
subl
jae
popf
stos
cmc
shl
add
push
fisttpl
inc
lock
insl
loopne
push
mov
jo
outsb
cmpsb
lods
inc
sarb
aas
test
andb
dec
outsl
dec
inc
pusha
inc
adc
fstl
dec
sbbb
add
popa
stc
mov
pop
pop
test
cli
enter
or
dec
orl
loop
popa
test
xchg
ret
inc
decl
and
cmpsl
add
pop
push
dec
xchg
ret
arpl
pushf
movsb
lods
in
int
sub
xchg
pop
add
shr
inc
scas
adc
add
and
test
sub
outsl
and
popa
je,pn
push
sub
pop
add
fs
int3
add
pop
dec
cmp
add
mov
pusha
sar
sarl
shll
nop
mov
mov
rcrb
or
lret
add
or
push
or
xor
fcmovnu
mov
cmp
lds
ret
add
ret
test
sbb
call
mov
or
rorl
jecxz
fs
lock
or
fadds
ljmp
sarb
sub
sbb
push
rol
insb
insb
add
pusha
jne
cmp
dec
mov
xchg
jecxz
pop
in
and
into
lahf
add
adc
cmp
adc
jge
add
mov
std
in
inc
add
push
mov
shl
data16
lcall
push
xchg
in
mov
mov
outsl
inc
mov
enter
dec
int
push
rcrb
xchg
stc
add
xor
cmp
sbb
mov
movsb
xor
sarl
nop
fistpl
cs
daa
dec
fisubrl
add
into
inc
cmpsb
test
mov
loope
mov
and
les
add
cmp
add
loopne
inc
inc
mov
xor
stc
test
les
adc
pop
outsb
add
cs
notb
int3
mov
jo
testb
pop
or
jbe
filds
sub
jb
add
xbegin
add
les
fstl
fdiv
add
push
aaa
mov
popf
add
and
pop
jmp
push
dec
pop
out
es
adcb
lahf
inc
pusha
sub
nop
mov
lcall
ss
and
adc
adcl
imul
add
xor
inc
dec
mov
add
xchg
fists
xchg
faddl
mov
jle
add
lret
inc
test
call
cmp
add
push
shll
mov
push
or
dec
add
cvtdq2ps
fmuls
mov
ds
in
add
fadd
cld
mov
xor
mov
call
das
xor
xor
jo
mov
add
lods
out
pop
and
add
movsb
test
pop
popa
pop
mov
inc
cmp
or
add
orl
jae
cmp
test
adc
cwtl
add
cld
icebp
sub
jno
xor
dec
mov
je
mov
mov
and
ret
mov
ljmp
push
cmp
test
jnp
fwait
or
xor
mov
test
out
loopne
loope
mov
or
out
aad
add
mov
cmp
hlt
push
inc
ret
stos
out
nop
add
cltd
xchg
add
and
pop
push
adc
leave
nop
pop
jg
jmp
jo
jg
add
jnp
push
add
xchg
and
jbe
adc
popf
add
add
mov
jae
fadds
dec
push
cmp
icebp
js
dec
es
mov
jo
push
scas
or
cmpb
add
movsb
scas
jg
lods
cmp
cmpl
push
add
fistpll
add
push
push
add
pushf
insl
jp
add
inc
pop
xchg
sbb
rol
movsl
aas
cwtl
cmc
add
orb
test
push
out
sbb
inc
cmp
cmp
gs
imul
add
cmp
outsb
cmpsl
push
add
pop
xlat
pop
jg
lods
push
add
ficoml
lea
sub
ret
pop
and
shlb
mov
push
cwtl
mov
xor
push
jmp
inc
mov
rol
add
fs
addr16
sti
jmp
cmp
insb
add
in
lret
add
xchg
rcll
mov
cwtl
or
adc
lods
enter
outsl
add
fs
inc
scas
xor
cmp
pop
push
addr16
add
decb
faddl
mov
es
add
stos
dec
js
aad
sub
and
jp
insl
arpl
push
dec
popa
pop
loope
movsl
mov
arpl
add
aam
insb
faddl
out
jo
cmc
or
imul
add
push
pop
jle
adc
mov
lods
add
mov
pop
inc
or
fs
or
xchg
jp
add
loop
clc
and
addr16
jg
add
push
adc
imul
or
cmc
outsl
daa
push
add
pop
pusha
in
mov
popa
or
orb
repz
notb
inc
xor
adc
add
lcall
xor
mov
bound
jnp
jno
sbb
outsl
add
pop
leave
adc
int3
arpl
add
jae
xor
jecxz
mov
mov
sahf
adc
and
in
jp
popf
inc
dec
push
nop
mov
js
flds
adcl
aas
scas
fwait
daa
cmpxchg
imul
mov
test
dec
daa
popf
pop
fmuls
cmp
mov
dec
jb
push
adc
andl
mov
hlt
jnp
in
subb
ret
and
sbb
jbe
xchg
and
andl
in
js
add
or
mov
inc
sub
dec
jb
cli
arpl
in
mov
sbb
pop
mov
inc
inc
sbbl
mov
and
inc
add
xor
lock
mov
add
clc
lret
movl
push
lods
popf
or
jbe
test
je
sbb
lods
adc
fidivs
or
shl
andb
loop
push
sub
test
jbe
and
loopne
lods
jl,pn
mov
sub
leave
and
ret
cmp
or
and
pusha
rorb
pusha
sbb
xor
sahf
xor
inc
clc
push
push
out
dec
adc
add
push
jb
aam
cmp
push
add
mov
add
inc
rorb
pop
mov
and
pop
mov
addr16
add
or
pop
xchg
sbb
ds
movlps
fwait
imul
in
adc
leave
add
daa
call
popa
or
and
jns
add
dec
iret
pushl
xchg
or
out
cld
mov
add
sti
out
dec
sub
sahf
adc
nop
fwait
add
dec
mov
out
cmp
iret
add
dec
clc
xor
adc
add
pushf
in
pop
push
mov
xor
testb
arpl
or
mov
inc
sbb
fsubs
add
cmp
add
lds
daa
add
ss
rorb
push
adc
aaa
add
lock
sbb
adc
aam
js
sub
fidivl
nop
pop
add
int
arpl
popl
add
jne
jbe
sub
pop
dec
mov
ja
jg
jns
flds
repnz
xchg
mov
stos
adc
pusha
popl
sbb
aad
or
mov
pop
out
ss
and
mov
add
inc
movsl
test
icebp
hlt
roll
add
imulb
lock
xor
subb
pop
in
pop
add
or
popf
cmc
and
cltd
jg
cld
inc
psubw
and
add
or
push
add
test
sbbb
xor
add
xchg
add
or
fadd
fdivs
mov
inc
out
or
inc
in
pop
or
add
adc
push
iret
syscall
loopne
cld
clc
or
sbb
test
cltd
or
xor
xchg
or
add
sub
xchg
mov
enter
cltd
packuswb
nop
int
add
add
iret
jg
loope
xchg
je
jl
orb
fwait
std
jns
or
lds
sbb
rolb
fcmovbe
mov
mov
dec
or
dec
pop
xchg
popa
outsb
sbb
addl
cmp
or
es
and
xor
sbb
jne
cmp
iret
in
push
push
loop
lret
mov
xchg
int3
add
imull
jo
add
sbb
fsts
dec
cmp
mov
subl
mov
jg
or
adc
cmp
jne
pop
idivl
inc
imul
add
les
add
js
sbb
addl
xchg
jge
pop
mov
mov
pop
frstor
jp
arpl
inc
inc
test
cmp
iret
js
addr16
ja
dec
xchg
xor
inc
in
or
mov
fildl
pop
adc
dec
push
fs
cmp
adc
sbb
inc
push
add
add
fstp
lock
cmp
jg
fneni(8087
inc
test
add
and
adc
cmp
test
out
add
push
fwait
pop
sbb
mov
movsl
sbb
add
add
mov
or
inc
xchg
sbb
lds
dec
fmuls
addb
popf
pop
push
or
std
inc
and
hlt
add
cmc
add
xor
std
add
push
inc
stos
mov
test
add
mov
pop
loope
in
mov
popf
add
mov
in
movsb
sub
pop
jg
clc
cwtl
inc
pop
adc
addb
or
fmull
pushf
cmc
add
push
cmp
mov
cmp
cmp
popf
mov
andl
je
insl
and
xchg
enter
dec
popf
or
lahf
cld
inc
xor
aam
imulb
push
shll
cli
add
mov
mov
fbld
enter
sbb
outsb
mov
pop
add
mov
or
ds
and
add
div
loope
mov
out
inc
jl
roll
push
push
lock
inc
cmp
int3
xchg
cmp
or
pop
fldl
call
cs
pop
add
add
fbld
cmp
push
add
mov
add
or
adc
jg
inc
xchg
push
fisubs
les
ds
ret
into
push
pop
mov
xor
cmp
or
xchg
insb
js
push
pop
add
push
fwait
dec
insl
jmp
sub
and
add
aas
stc
mov
xchg
scas
add
lods
sub
mov
dec
xchg
in
lock
mov
add
mov
sub
mov
cmp
leave
add
adc
sbb
cmp
push
add
mov
inc
jne
push
jno
out
pusha
sti
testb
add
inc
cmp
or
push
add
out
pop
push
cmp
and
cmpsw
jle
inc
mov
jge
pop
pop
mov
xor
push
push
mov
sbb
ror
iret
cld
or
sub
ds
addr16
fcompl
loopne
inc
rcl
add
movsl
dec
mov
movsb
adc
jns
xor
ljmp
push
mov
dec
xchg
add
cmp
mov
jecxz,pt
or
pop
xchg
test
rcll
push
std
rorl
pop
dec
js
je
gs
jbe
xchg
and
sbb
add
xor
sub
jle
add
push
add
add
xlat
rorl
lea
xor
hlt
mov
and
daa
jno
xlat
std
addl
mov
sbb
ds
add
jbe
aaa
and
sbb
leave
or
aad
vorpd
sbb
imul
repnz
shrl
or
push
mov
push
inc
dec
sbb
insb
fwait
mov
pop
sub
push
and
test
inc
or
or
cmpsb
lock
mov
or
ret
push
movl
inc
dec
fcoml
xabort
xor
and
push
cmpb
fadd
aas
pop
out
add
jae
cltd
pop
xchg
or
test
cmp
add
cmp
cld
lods
or
or
jg
adc
nop
cmp
enter
adc
outsl
loopne
and
jmp
and
ret
push
sbb
fwait
outsb
les
sbb
dec
add
or
dec
push
cmp
mulb
cmp
dec
mov
daa
sub
clc
cld
dec
orl
xchg
sbbb
frstor
ljmp
test
invd
and
popf
push
push
mov
pusha
and
imul
jmp
jb
adc
fwait
sbb
sahf
mov
add
jne
iret
rorb
aam
and
add
cmp
mov
sbb
into
sahf
imul
push
out
add
mov
dec
jo
sub
ret
js
test
mov
xor
sarb
stos
jecxz
mov
test
orl
les
sarb
add
xor
add
xor
loop
jmp
add
out
fwait
push
adc
test
mov
popf
and
add
addb
ret
xor
cmp
cmpsb
adc
int3
lock
hlt
add
mov
shll
adc
xchg
sarb
pop
mov
inc
dec
dec
adc
lods
push
clc
shlb
fnstenv
add
or
pop
mull
xchg
mov
hlt
cli
ret
push
nop
std
inc
add
pop
sbb
xchg
push
jle
push
enter
enter
test
push
xchg
mov
add
add
nop
ljmp
xor
loop
shrb
fmuls
jns
or
push
jmp
or
arpl
push
jno
add
inc
lds
inc
mov
adc
fwait
pop
dec
adc
lock
les
out
mov
pop
cmp
call
xor
data16
jne
popa
cwtl
sbb
lcall
mov
sub
dec
pushf
test
mov
iret
pop
add
inc
sti
xor
nop
add
jne
jo
xor
adc
cli
add
cmp
test
sub
xchg
popf
mov
sbb
or
jle
outsl
and
aaa
stos
cwtl
sbb
push
ds
mov
ret
test
pop
and
into
orb
in
test
int3
arpl
sbb
idivb
sbb
lods
stc
sti
rolb
ret
or
lret
mov
nop
sbbl
mov
add
sub
inc
cmc
in
lcall
dec
add
mov
mov
icebp
and
ds
mov
xor
orb
rol
push
sub
pop
test
repz
add
sbb
lcall
inc
push
movsl
cmp
xchg
add
add
mov
xchg
push
jl
add
int
jno
inc
add
subb
fadds
es
inc
fsts
mov
sbb
xchg
in
jmp
sti
pop
push
das
loopne
cmpsb
dec
add
clc
inc
test
cmp
jo
mov
add
mov
or
sbb
movsl
or
and
push
xchg
lret
xor
mov
or
push
lcall
shlb
lret
sahf
inc
pusha
xchg
jno
pop
jno
add
jae
jnp
or
jle
icebp
xlat
push
sub
cmp
lahf
add
lcall
push
mov
push
xlat
push
test
bound
out
dec
jg
or
mov
pop
lods
pop
loope
jb
add
add
pop
fcoml
loopne
cmp
movl
iret
xor
aas
mov
jg
pop
mov
sub
iret
mov
push
sub
cmp
cld
inc
out
lret
jnp
ficomps
add
push
pop
mov
xor
lret
or
add
out
lret
lea
repz
add
call
cs
cmp
cmp
das
sbbl
in
clc
mov
cld
pusha
xor
sub
and
fisubrs
bound
adc
mov
cmp
xchg
lret
sbb
add
sti
pop
jo
mov
arpl
mov
mov
jno
cmpsl
mov
sbb
sbb
and
test
cmp
ds
sbb
mov
mov
pop
lods
cmp
push
adc
cmp
loopne
inc
xor
dec
mov
or
and
and
inc
cld
cmp
mov
push
add
xor
add
sub
fdivr
outsl
push
es
jmp
in
lret
or
add
jl
add
scas
call
mov
dec
js,pn
adc
fcomps
imul
inc
je
icebp
add
pushf
jb
mov
add
jne
and
nop
add
mov
insl
lret
cld
jae
push
adc
and
add
fisubrl
flds
pop
or
negl
bound
mov
pop
cltd
lods
add
mov
inc
add
add
subl
pop
imull
cwtl
dec
aaa
xchg
add
pushf
add
call
pusha
cmc
inc
insb
imul
add
outsl
mov
dec
cli
add
mov
add
fcmovnu
dec
mov
addb
clc
and
add
out
jge
sub
cmp
jecxz
push
jno
sti
cli
add
mov
add
ja
inc
add
popf
mov
mov
test
rorb
call
enter
push
nop
mov
in
in
rorb
test
leave
filds
popf
aad
jl
pop
mov
jle
mov
add
mov
movsl
xchg
or
xchg
add
pop
cmpsl
adc
int3
movsb
ret
add
lcall
shll
or
lret
mov
jle
cmp
sbb
mov
scas
loope
mov
rcrb
xor
or
jmp
les
mov
adc
add
mov
shl
adc
pop
mov
add
pop
movsb
out
jecxz
out
add
cltd
je
out
fildl
mov
rcrb
adc
add
je
lahf
add
mov
jge
outsb
push
add
add
adc
bound
movsb
scas
and
push
fdiv
push
rcrb
mov
add
mov
jmp
addr16
add
push
ret
in
fisubl
cmp
stos
pop
push
lahf
add
pop
adc
mov
popf
test
out
rolb
xchg
out
and
daa
or
pop
insl
mov
lahf
jp
adc
cli
lods
in
shlb
add
pop
ret
movsb
push
out
aas
add
xchg
rcr
sub
es
pop
int
cmc
mov
add
imul
add
incb
outsb
test
jge
lcall
ljmp
test
pop
imul
adc
lahf
add
or
imul
xchg
add
inc
adc
push
inc
inc
jp
mov
clc
fidivrs
dec
aas
lds
or
jge
xchg
shlb
popa
add
xor
sbb
daa
movsb
mov
sarb
ljmp
mov
sub
fistpll
adc
int
push
add
int3
into
dec
xor
cli
stos
add
daa
sub
fsubs
add
pop
push
insl
imul
add
xor
mov
dec
mov
or
rcrb
and
mov
and
pop
cld
sarl
pop
dec
call
or
js
push
add
aaa
je
sub
jae
dec
clc
add
pusha
push
stc
sahf
dec
lahf
outsb
mov
lock
iret
mov
jmp
add
daa
lods
mov
dec
out
sbb
jno
mov
sysenter
jae
add
movsl
add
xchg
aam
add
lock
mov
add
xor
ds
cmp
inc
adc
add
repnz
aaa
fbstp
sbb
inc
cmp
loop
add
mov
icebp
pop
dec
xlat
addb
mov
movsl
add
push
mov
arpl
dec
mov
ds
push
test
pop
int
inc
pop
push
popa
maxps
aas
fs
test
test
std
pop
mov
add
faddl
rcrb
push
stos
ds
popf
cmp
jle
arpl
insl
shll
add
xchg
clc
push
popf
mov
test
loopne
negb
enter
popf
jno
cmpsl
cld
movsl
or
in
mov
pop
lods
fadds
cmp
pop
outsb
sub
imul
nopl
pusha
inc
cmpsl
dec
ja
loopne
push
or
out
push
xlat
add
push
cmp
add
test
sarl
fcompl
push
add
jmp
add
jbe
push
test
out
sub
xor
pushf
repnz
or
sub
stos
push
adc
divb
jmp
mov
mov
movsb
sub
sbb
aas
mov
andb
add
push
push
sub
jle
fcoml
mov
cmp
pusha
and
sub
enter
jmp
add
xlat
inc
ljmp
aaa
cwtl
pop
add
mov
xchg
fdivrl
loopne
mov
shll
pop
mov
dec
push
cmp
loopne
insl
test
dec
push
enter
mov
mov
loop
orb
cmp
or
fdivl
stos
setae
inc
inc
daa
cmpsl
push
mov
pushf
dec
or
loope
aam
and
cmp
fistpll
lret
addr16
add
mov
addb
insl
lea
and
jle
pop
ret
sbb
add
fdivrs
sbb
insl
add
inc
adc
or
stc
test
mov
ror
and
lods
pop
dec
xor
ucomiss
or
cld
sbb
test
pop
xchg
mov
adcl
pop
inc
fdivr
add
mov
outsl
cmpsl
enter
push
push
mov
add
adc
clc
add
sub
fdivs
push
inc
imul
and
int3
aam
add
out
lcall
imul
xlat
arpl
mov
or
test
mov
lcall
std
mov
dec
add
cmp
adc
int3
push
adc
movsl
aam
xchg
ret
mov
pop
adc
jbe
add
cmc
in
loopne
movsl
pop
add
sbb
add
mov
bnd
rol
add
pop
dec
add
inc
stos
xchg
es
add
jbe
testb
xlat
mov
inc
enter
incb
sbb
mov
imul
adc
adc
pop
jo
push
orb
mov
inc
and
int
repnz
sbb
and
mov
movsb
push
out
mov
pop
jbe
push
mov
jno
sti
or
gs
jne,pn
mov
xlat
add
inc
and
test
out
jmp
push
daa
jbe
and
pop
add
pop
clc
dec
shlb
mov
popf
jg
pop
jbe
out
das
dec
pusha
shrl
jns
adc
test
jno
fs
sub
repnz
and
xchg
scas
jmp
hlt
add
popf
loope
sub
mov
js
dec
test
and
outsl
add
dec
out
loopne
xor
lods
xor
adc
mov
lret
loopne
out
arpl
xchg
cmc
pop
pusha
cwtl
lods
xchg
add
sub
out
adc
pop
enter
jns
repnz
add
movsb
add
push
jno
insl
pop
and
adc
jne
add
mov
fwait
add
sbb
adc
lret
pop
sbb
nop
enter
adc
mov
xchg
fldl
into
test
out
call
dec
pop
sahf
movsb
andb
subl
inc
dec
mov
sub
push
add
push
loopne
rcl
push
mov
xchg
fnstcw
mov
icebp
in
loopne
cmp
pop
jo
mov
push
sbb
int
out
cmpl
add
jge
sub
or
sbb
xor
daa
pop
pushf
mov
push
dec
jne
pop
aam
pop
mov
inc
jb
cmp
push
je
sysexit
adc
mov
add
das
test
insl
or
cltd
lcall
cmp
ret
add
push
imul
push
pop
add
test
push
dec
sub
add
sti
pop
fsubl
mov
or
push
ret
or
push
ret
sbb
dec
xchg
sbb
and
cmpsl
push
push
add
pop
fs
pop
jne
mov
mov
aad
jle
add
add
subb
add
movsb
mov
xchg
fisubrs
into
jo
in
lods
xorb
cmp
xlat
or
test
popa
enter
jbe
roll
jp
add
test
adc
mov
or
mov
sbb
loope
outsb
and
adc
lock
xchg
dec
shrb
fstp
pop
inc
aaa
mov
pop
add
cmpsb
daa
dec
push
inc
cli
fwait
xor
adc
sbb
repz
mov
mov
push
pop
pop
test
add
inc
jne
sbbb
and
and
pop
or
dec
jo
cmpb
mov
jge
xchg
and
bound
sbb
and
nop
pop
add
imul
mov
pushf
outsb
or
fsubs
xor
push
sbb
daa
mov
jecxz
dec
fldl
jno
xor
sbb
movsl
repz
loope
pop
mov
mov
or
pop
push
jp
inc
add
xchg
mov
pop
mov
ret
test
ret
push
push
aas
pop
aad
add
adc
outsb
jg
push
mov
lds
inc
inc
mov
and
cmp
lds
dec
sub
jp
mov
lahf
sbb
pop
cmc
vmread
aas
daa
inc
add
test
out
test
or
pop
mov
lret
test
int
adc
std
add
rcrl
push
sub
stc
push
lcall
ds
push
mov
sarl
cs
pushf
sbbb
inc
fs
nop
xor
add
sub
lds
test
pop
pop
and
mov
mov
out
bound
add
aam
pop
inc
adc
push
into
sub
shlb
or
dec
inc
shll
leave
dec
ficoml
jg
roll
cmp
stos
adc
shrb
enter
ret
xor
movsb
push
jge
and
in
lahf
pop
rolb
in
cwtl
mov
mov
rorl
xchg
test
adc
add
rorb
imul
fisubrl
push
add
imul
movb
add
mov
popa
push
push
ljmp
jae
dec
sub
out
icebp
negl
push
jl
mov
dec
pop
add
push
push
test
xchg
testb
loop
add
jns
nop
jbe
dec
mov
add
rclb
jo
addl
aam
sub
data16
loopne
cmp
mov
add
pop
dec
add
lods
mov
icebp
add
cmp
adc
xor
mov
push
push
add
imul
sarb
mov
xchg
inc
outsl
mov
sbb
push
add
sbb
imul
mov
pusha
push
pop
xchg
mov
imul
fwait
outsl
testl
push
out
push
add
push
cmp
jno
stc
or
inc
cld
push
mov
rorb
iret
ds
in
mov
add
loopne
pop
cld
shl
push
inc
mov
popa
push
shrl
push
dec
jp
andb
sbb
lea
jmp
mov
add
adc
roll
shll
jae
dec
cmp
into
stos
cmp
addr16
test
int
inc
mov
push
mov
insb
enter
add
clc
outsb
adc
pop
push
add
loopne
inc
sbb
push
jp
add
mov
in
fs
je
out
add
repnz
pushf
inc
inc
dec
mov
sbb
mov
or
rorb
add
mov
jnp
push
sub
and
lahf
ja
add
inc
shlb
inc
push
incb
and
ret
sbb
jecxz
es
adc
fidivs
push
inc
jb
cmovo
je
cmc
xor
inc
stos
ss
jmp
add
sbb
lcall
cld
pop
xchg
int
loopne
cmp
movsl
push
addb
loop
and
lods
adcl
out
je
add
cmp
lret
xchg
outsl
mov
pop
sbb
and
cmp
push
ljmp
add
inc
add
jp
adc
cmp
aaa
icebp
or
gs
shrd
mov
cmp
add
dec
scas
mov
fdivl
cmpsb
aad
cmpb
mov
cmpl
sub
shld
and
scas
cmp
sbb
je
std
pusha
adc
sbb
mov
stc
mov
sbbb
sbb
jne
mov
insl
mov
call
enter
sub
das
xchg
push
add
js
mov
jmp
and
loope
sbb
push
roll
out
cld
push
call
mov
shlb
sbb
inc
and
iret
and
jecxz
sub
add
fxam
push
xor
outsl
mov
xchg
cmpl
mov
daa
sub
cwtl
dec
sub
add
sub
cmp
add
popa
adc
rolb
add
cmp
fistpll
adc
sbb
and
psllw
icebp
daa
lock
or
pop
jmp
cmp
pop
jno
xor
add
addr16
sub
inc
loop
mov
clc
pusha
pand
sar
in
add
jne
mov
mov
out
add
inc
sarb
rcll
adc
adc
sbb
push
out
loop
mov
not
mov
dec
push
lahf
or
sub
add
dec
pop
jns
mov
push
or
jbe
mov
jns
jmp
and
cmp
add
jnp
sbb
xchg
pusha
jns
fdivrl
pop
push
pop
movsl
dec
call
ret
sub
add
sbb
sarl
inc
xor
add
xchg
cmp
xchg
adc
aam
clc
jg
jmp
addl
mov
andb
pushf
out
add
mov
dec
sbb
mov
cmp
rorb
mov
mov
mov
movsb
insb
pop
add
in
dec
push
shlb
dec
fbstp
adc
out
jo
add
push
cmp
test
inc
cwtl
pushf
jmp
cmp
mov
imul
and
add
jmp
sub
or
rcr
aaa
pop
xchg
jo
inc
pop
xor
out
sbb
pop
mov
mov
pop
in
int
enter
mov
xor
and
int
cmpxchg
mov
inc
sbb
insb
xchg
lcall
add
cmc
and
bound
mov
lds
or
adc
hlt
mov
nop
push
jmp
mov
in
or
outsl
lahf
add
and
sbb
sbb
sub
lds
push
sbb
or
mov
faddl
int
jge
das
pop
or
pop
push
ret
push
jae
mov
cmp
add
or
jo
cmp
cwtl
xor
jmp
xchg
sub
roll
xorl
sbb
fisubl
push
jp
decb
cmc
mov
add
mov
aas
sub
shlb
and
gs
addl
arpl
cmp
pushf
add
sub
ret
andl
jp
divl
cld
leave
loopne
add
inc
xor
push
push
pop
or
mov
pusha
mov
pop
jno
mov
xchg
scas
dec
add
xchg
xor
lods
daa
mov
icebp
stc
add
dec
lock
push
cmpsl
pop
outsb
cmp
test
leave
icebp
mov
xor
lahf
xchg
shl
or
push
sbb
add
sub
push
dec
frstor
in
or
adc
xchg
adcb
outsb
rolb
leave
or
adc
arpl
adc
aaa
imul
divl
addb
jne
mov
and
inc
fldl
jnp
movsb
sub
add
test
dec
xlat
fadds
pop
add
pop
pop
lods
pop
pusha
dec
sbb
pop
inc
out
test
sbb
mov
fdivr
pop
out
dec
jns
or
sub
lods
sbb
pcmpgtd
stos
in
inc
mov
xor
xor
lret
add
out
sarb
mov
loopne
fcmovnbe
add
out
lahf
sarb
flds
rcrl
dec
add
sub
push
in
aad
add
pusha
xor
mov
rcrb
mov
jle
aas
or
xchg
stc
add
gs
jge
push
pop
cmp
negb
cld
add
js
mov
mov
shrl
mov
jmp
int3
push
into
dec
std
push
enter
add
or
pop
hlt
pop
cmp
mov
push
add
int3
pop
ds
pop
push
pop
andl
cmp
jne
and
jno
std
imul
call
mov
mov
dec
fwait
xor
fdivrs
adc
repz
lret
add
jg
push
jle
sub
add
xorb
jae
cld
mov
adc
cmp
cmp
mov
stos
cltd
pop
add
inc
test
dec
cmp
xor
pop
jge
jp
cmc
mov
and
nop
xor
testl
push
ds
testb
mov
add
mov
test
rorl
sub
rolb
lea
arpl
std
inc
ror
dec
add
leave
dec
sbb
nop
mov
loopne
sub
js
icebp
popa
jecxz
insl
xchg
movsb
xchg
adc
sbb
lcall
xor
sbb
mov
add
mov
xor
add
mov
lods
in
imul
loope
jg
push
int3
shll
add
mov
mov
pop
test
push
dec
andb
and
add
cmpb
mov
or
movsl
mul
adc
sbb
jge
rol
aam
ljmp
lcall
xor
add
in
push
stc
sub
mov
les
add
fldcw
movsb
pusha
loope
push
add
cmp
pop
js
push
xchg
ja
adc
pop
aad
mov
jle
andl
es
jb
add
xchg
mov
rorb
pop
jne
add
xor
add
or
and
in
cmpsb
pop
ficoml
and
mov
add
inc
pop
jge
mov
mov
repnz
inc
add
jge
aas
in
faddl
je
imul
inc
mov
mov
add
cltd
incb
push
ret
pusha
or
xor
add
dec
in
sbb
dec
dec
add
pop
les
stos
loopne
jl
mov
add
rorl
add
pushf
inc
push
cmp
sub
aad
add
mov
jb
daa
inc
add
into
shrl
aas
aam
mov
test
add
mov
add
movsb
xorb
repnz
imul
test
pushf
jae
add
mov
or
enter
mov
mov
xchg
add
xchg
and
loopne
daa
pop
in
xchg
rcrb
push
test
jp
call
mov
add
das
sub
or
test
ja
add
sti
push
mov
or
adc
loop
or
lcall
sub
mov
cwtl
add
xchg
cli
mov
int
add
out
push
cmp
stos
pop
cmpsb
add
bswap
cli
mov
call
sbb
out
test
xchg
push
push
je
fstps
and
xor
lds
add
or
jo
dec
enter
add
dec
mov
cs
outsb
rcr
inc
fdivs
or
mov
add
and
fiadds
filds
adc
dec
movsl
mov
test
sbb
fld
ret
cmpl
insb
jb
add
cmpsb
scas
outsb
add
fwait
xchg
push
repz
call
jne
aaa
pop
jmp
add
pop
xor
jle
xor
add
adc
imul
mov
sbb
aaa
bound
jle
mov
test
test
in
dec
dec
rolb
mov
lods
rcrb
ja
mov
mov
stos
imul
lea
add
xchg
xchg
into
xchg
jbe
addb
adc
enter
add
or
mov
lret
ss
inc
add
cmp
add
cmp
lret
inc
mov
outsl
add
cwtl
ret
scas
fcoml
movsb
aam
ja
stc
ljmp
xchg
inc
push
fnsave
jmp
cmp
mov
and
mov
gs
nop
inc
pop
aas
aad
cmp
jo
insb
sub
mov
cltd
jmp
xchg
adcl
sbb
dec
lock
notb
aad
in
xchg
outsb
fwait
cmp
dec
dec
sbb
sub
aam
call
and
inc
pusha
sub
and
push
add
out
jp
jg
add
call
jb
mov
pop
call
jmp
cmp
mov
pusha
mov
inc
xchg
cs
rol
imul
sbb
aaa
cmp
xor
dec
pop
push
push
inc
loopne
add
in
incb
mov
andl
jl
add
jp
mov
mov
pop
hlt
shlb
or
fcmovnu
mov
lock
inc
add
jo
xchg
inc
neg
add
lds
adc
add
inc
nop
inc
les
adc
xlat
add
pop
mov
ret
cmp
data16
hlt
sub
xor
popa
aas
sti
inc
lret
add
xchg
inc
add
mov
and
aaa
xor
subl
shrb
add
mov
add
sbb
sbb
sbb
mov
cmp
lods
add
rcrl
or
pop
mov
pusha
iret
add
cmp
fdivrs
cs
cmpsb
sbb
add
cmpsl
iret
test
nop
int3
add
xchg
inc
je
pop
cmp
ds
fbld
pop
sbb
js
sub
cmpsb
mov
or
nop
push
shl
lods
lret
stc
movsb
add
shrb
mov
jb
add
aad
lods
sbb
sub
sub
cmp
pop
add
dec
enter
xchg
and
add
sub
mov
mov
cltd
and
adc
jg
or
xlat
push
ret
add
xchg
popf
add
jecxz
push
xor
out
add
dec
pop
fwait
xchg
hlt
xchg
fisubs
pop
outsb
lcall
mov
jbe
call
cli
mov
lcall
out
xchg
mov
xor
add
dec
fsubrs
popf
getsec
in
sub
or
push
add
sub
fstpt
sti
or
add
pop
pop
mov
or
xchg
and
movsl
pusha
pop
and
jb
add
add
mov
mov
sahf
or
hlt
int
jmp
bnd
sub
pop
cmp
fcompl
lock
iret
lods
jae
jle
xor
fldt
adc
inc
rcrb
add
stos
movsb
into
cmp
in
xor
and
mov
xor
lods
pop
sbb
in
or
cltd
pop
rolb
daa
test
jb
inc
or
cwtl
jl
lea
data16
inc
out
add
add
pop
jbe
adc
mov
dec
lcall
ret
jb
dec
sbb
dec
xchg
xor
pop
aas
pusha
push
pop
in
pusha
outsb
adc
push
pop
add
and
repnz
stc
jo
mov
jns
mov
test
pop
jno
pop
fmul
cmp
je
mov
repnz
add
dec
stos
outsb
add
subl
add
jl
rcr
outsl
xchg
out
add
pop
jecxz
add
in
add
adc
lock
xchg
cmp
lods
std
ds
pop
and
add
in
push
shlb
pushf
add
pop
js
xor
dec
add
orb
push
nop
add
inc
push
fldl
roll
mov
add
xor
lock
dec
lret
stos
xor
xor
call
push
popf
insl
ret
cmp
jae
jae
popa
imul
in
jo
pushaw
add
rcl
mov
pop
cs
adcb
ss
sti
add
mov
jmp
sub
mov
cmp
inc
adc
inc
push
ror
fs
jl
loope
jg
mov
nop
lods
jo
add
hlt
sbb
push
sbb
lsl
add
push
ror
push
xchg
mov
sub
xor
mov
push
bound
repz
add
lcall
addr16
flds
call
push
test
mov
sub
cmpsl
stos
add
in
xchg
and
add
ret
icebp
std
dec
scas
jl
add
mov
and
mov
mov
cmp
int
leave
mov
test
imulb
into
mov
decb
cwtl
sub
inc
int3
add
rcrl
push
cli
fildl
jnp
repnz
call
cmpxchg
pop
pop
int3
pop
sbb
sub
ljmp
adc
xor
repz
ds
push
jg
or
jns
flds
aas
mov
sbb
dec
jp
add
aam
mov
push
add
sbb
rcrl
add
pop
sti
inc
pop
sbb
pusha
xor
jl
add
mov
in
adc
inc
xchg
and
adcb
add
in
adc
add
sbb
repnz
call
fcmovbe
jecxz
faddl
imul
xchg
adc
addl
lcall
sbb
add
gs
in
testl
push
mov
and
fsubrp
cmp
addr16
fsubrs
bswap
and
inc
rcll
aad
imul
inc
push
clc
in
adcb
or
lahf
int
inc
or
lret
jns
test
lods
lods
es
test
mov
sbb
scas
and
mov
imul
int3
cwtl
cmp
movb
sbb
cs
xor
or
push
repnz
sub
add
rorl
cmpsb
rolb
jp
roll
loope
loopne
cli
aas
repnz
subb
ret
ds
push
add
sub
fs
inc
inc
fisttpl
jecxz
xor
inc
cmpsb
sub
loopne
sub
icebp
xchg
and
fistpll
in
cltd
lahf
push
xor
add
xor
rcrb
add
xchg
lret
test
mov
in
add
rol
test
pop
add
push
add
sub
jb
add
mov
adc
and
rclb
jae
push
es
out
or
push
je
push
add
out
lods
xchg
stos
sbb
adc
fidivl
cmp
cmp
addr16
mov
mov
roll
in
mov
add
int
int3
push
call
push
push
mov
or
add
xchg
sbb
and
pop
adc
adc
mov
add
in
call
cwtl
les
sbb
mov
mov
orb
in
into
xchg
lock
iret
or
jle
dec
mov
fwait
xor
int
sub
mov
xchg
and
and
outsl
or
xchg
fmuls
movsb
clc
or
jns
jge
in
jae
add
ret
lcall
pop
cwtl
sti
add
cld
sub
lahf
add
adc
pushf
xchg
mov
jbe
adc
jne
inc
flds
xor
jg
pop
jp
add
stos
or
jne
jnp
adc
fdivr
jo
inc
and
fs
mov
pop
xor
push
into
insb
rol
sub
push
mov
mov
jle
cld
shr
or
pushf
dec
jb
pop
push
hlt
add
cmp
lahf
mov
dec
and
aas
pusha
add
popf
add
or
pop
push
mov
jle
adc
pushf
mov
sti
mov
push
mov
decb
mov
add
popa
ror
add
daa
jecxz
hlt
cli
push
out
out
sub
adc
mov
sub
sub
enter
inc
sub
andb
jge
aaa
sbb
in
std
mov
add
fnstcw
xor
push
js
int3
mov
or
add
push
adc
xlat
jns
sbb
sub
pushf
mov
hlt
push
add
out
adc
mov
jno
adc
push
bound
sarl
leave
cld
sub
daa
add
shr
or
sbb
repz
lock
add
mov
out
mov
hlt
imul
popa
adc
or
roll
add
push
dec
push
sbb
mov
pop
or
mov
mull
je
or
add
cmp
clc
fdivr
lds
or
jb
xchg
or
fwait
push
popf
in
dec
sub
ror
add
cwtl
push
fdivs
cs
add
out
sub
and
popa
repz
mov
lret
mov
fmull
cmp
add
inc
pop
leave
shrb
jnp
xlat
mov
pop
out
sbb
push
jge
add
popf
pop
aaa
ja
scas
add
rclb
add
js
dec
lods
and
out
lock
add
int3
rcll
clc
sbb
jo
pusha
leave
nop
out
and
pop
sbb
add
jl
in
add
rorb
ja
add
das
sub
mov
inc
mov
inc
or
ljmp
sarl
stc
jecxz
jle
add
fcmovnb
addr16
jge
add
dec
sbb
lea
into
push
push
dec
iret
sbb
subb
add
mov
sbb
je
adc
jmp
mov
mov
mov
cmp
jle
xchg
into
xor
mov
stos
loop
jns
shlb
nop
movsb
mov
or
mov
insb
out
add
cmpb
adc
les
add
mov
pusha
mov
xorb
lods
lret
cld
movsl
roll
fsubrs
aam
cmp
adc
sbb
adc
mov
clc
lods
addl
insb
daa
and
arpl
add
popa
sub
sub
jmp
jp
pop
arpl
mov
in
sti
cwtl
mov
sub
daa
jnp
mov
jbe
imul
jecxz
push
scas
shlb
add
and
pop
aad
cmpl
sub
mov
push
sub
call
lods
rclb
popf
loopne
in
and
push
sub
fdivrl
dec
aad
fscale
ds
and
sbb
mov
ja
and
jae
mov
lret
add
out
xlat
or
fistpll
xor
xchg
sbb
push
xlat
leave
dec
xor
and
adc
pop
adc
inc
sbb
xchg
mov
insl
push
and
dec
enter
cli
mov
cld
xor
jnp
aaa
add
and
shlb
mov
adcb
or
mov
add
les
pusha
aam
add
lahf
adc
cwtl
mov
cmp
jns
movsb
clc
add
push
les
cli
dec
fldcw
sahf
iret
inc
xchg
push
bound
pop
fidivs
jno
sub
jae
pop
cmp
loop
aad
pop
jno
add
push
add
inc
mov
add
repnz
ret
xchg
mov
popf
outsl
xorb
lock
add
movsb
jo
bound
fs
cwtl
and
xchg
mov
xchg
lods
mov
and
pop
jp
cld
jb
data16
xchg
outsb
das
add
cmp
push
std
push
sub
add
pop
into
push
adc
push
jg
mov
out
cmpsb
xor
sbb
clc
mov
fnstcw
or
push
push
dec
mov
mov
aas
mov
push
mov
leave
gs
out
mov
mov
loopne
pop
andb
add
lods
rcr
and
test
mov
jnp
add
xor
mov
mov
sub
aad
add
adc
dec
ret
rolb
sub
js
add
roll
jne
cmp
and
or
xor
jmp
loope
aad
inc
popa
icebp
pop
jae
or
mov
xchg
sbb
dec
cld
push
xor
mov
cmp
xchg
cmp
or
jmp
shlb
hlt
jl
add
sbb
shlb
in
ret
mov
les
xor
stos
in
iret
pushf
ja
inc
out
aad
ud2
push
pop
loopne
inc
cmp
sbb
int
ljmp
sub
int3
loopne
test
or
mov
inc
jae
cwtl
movsb
push
push
mov
sub
cld
add
cmp
inc
add
out
inc
mov
loopne
enter
cli
lock
shlb
jle
enter
popf
sub
mov
fstpt
dec
and
ficoms
int3
and
loop
add
cmpsb
pop
xchg
lret
push
push
pop
mov
nop
mov
adc
sub
jg
test
neg
rcll
je
pushf
test
xchg
adc
push
add
mov
xchg
jle
jne
popa
mov
sub
pop
add
pop
and
add
data16
xlat
pop
mov
push
dec
push
out
roll
frstor
int
sbb
imulb
int3
addr16
pop
andb
push
aaa
inc
addl
add
add
jnp
rolb
cmp
jne
mov
sahf
push
std
lock
push
pop
fucomp
or
or
mov
lock
add
hlt
in
add
add
inc
mov
xchg
mov
call
mov
les
movsb
push
or
push
jmp
in
adc
repz
sti
jmp
mov
movsb
mov
insb
add
ja
cmp
mov
cmp
push
aad
push
jb
pop
fdiv
inc
aam
mov
sub
pop
mov
push
sub
mov
or
and
pop
das
incl
out
aaa
scas
orb
into
cmp
cli
add
jp
and
pop
out
mov
push
iret
pop
lock
mov
add
mov
addl
xchg
jae
cli
add
rcrb
jne
stc
jns
add
mov
out
roll
add
les
cmpsb
add
lcall
add
notb
add
add
in
rorb
add
add
jo
int
es
iret
add
jmp
out
in
lret
cmp
clc
mov
cmp
push
mov
jae
cmp
push
divl
loopne
cmp
daa
ficoms
sub
add
dec
lods
in
cmp
xchg
fnstcw
fistps
mov
sar
add
pop
fwait
clc
add
xor
push
lahf
sub
test
ret
sbb
gs
out
les
fsubrs
add
popa
call
insb
add
inc
outsb
xchg
iret
rorb
jmp
test
pop
dec
push
add
call
add
mov
loope
pop
verr
in
scas
rcl
xchg
push
stos
pop
sbb
data16
mov
mov
icebp
gs
sbb
inc
mov
jge
jl
sbb
xchg
pusha
sti
std
test
add
lahf
dec
push
push
mov
not
or
add
push
jb
mov
dec
movsb
bound
andl
cmp
jmp
stos
adc
jecxz
das
out
pop
and
mov
cli
add
out
pushf
jmp
add
jae
arpl
sarb
aad
cmp
push
push
dec
adc
js
repz
mov
icebp
xlat
add
loop
inc
dec
sub
inc
xor
icebp
xor
add
sub
mov
pop
insl
mov
incb
and
hlt
add
push
imul
cmp
pop
test
xor
inc
push
inc
push
inc
mov
add
push
mov
pop
sub
add
idivl
mov
jae
and
push
xlat
xchg
add
in
in
xchg
sbb
rolb
ds
mov
add
pop
dec
push
jecxz
repnz
mov
mov
repz
lock
xchg
mov
or
out
cmp
add
fstpt
jle
lds
jecxz
lahf
aam
or
dec
add
cmc
mov
wbinvd
xor
add
aas
loope
xor
mov
test
mov
or
repnz
imull
std
shlb
je
add
shrl
sbb
cmp
xchg
data16
jle
fwait
inc
imul
adc
push
cs
shlb
loopne
add
nop
mov
add
pusha
push
add
fwait
push
jno
dec
dec
sbbb
data16
add
jecxz
jecxz
inc
add
cmp
loope
pop
jmp
add
xor
jno
daa
aam
mov
test
push
aaa
xchg
and
pop
add
mov
fdiv
test
in
aaa
ret
outsb
xchg
push
add
mov
rcl
or
lock
ficoml
mov
mov
push
inc
int3
icebp
dec
add
mov
sbb
cmp
rolb
outsl
xor
popf
stos
sub
add
pop
mov
pop
add
fcmovu
loop
movsb
pusha
pop
dec
jb
stc
xor
test
add
imul
lret
pusha
mov
mov
inc
das
movsb
inc
sub
pop
add
mov
inc
xor
test
insb
adc
push
xchg
mov
adc
andb
sbb
mov
scas
mov
pusha
pushf
jle
std
mov
xor
xor
pusha
xor
dec
clc
test
pusha
add
inc
decb
add
mov
inc
enter
and
jecxz
dec
lods
mov
sahf
mov
add
repnz
cmp
jge
lret
mov
xor
test
ret
pop
mov
xor
fwait
sbb
add
lds
test
mov
mov
leave
adc
cmpsb
cmp
aas
and
jae
add
dec
fdivs
int3
dec
sti
shrl
scas
lret
add
xor
les
jmp
xor
mov
mov
in
xlat
pop
jmp
mov
add
mov
mov
fwait
dec
scas
in
xor
jbe
add
mov
movl
dec
aam
leave
in
add
cltd
orb
dec
enter
in
dec
data16
cmc
and
add
push
ror
push
sub
pushf
add
pop
xor
shrl
pop
cli
add
test
adcl
add
std
je
mov
mov
loop
xlat
xchg
in
cmp
add
fimuls
mov
add
sbb
dec
cs
add
and
ds
add
cmp
popf
jge
dec
cltd
pop
not
bound
hlt
pop
ja
sbb
lcall
mov
and
das
xlat
jle
stc
sub
add
or
inc
ds
enter
adc
add
jns
add
mov
dec
pop
adc
xchg
jae
push
sub
imul
mov
ret
add
mulb
insb
cmpsb
in
sbb
dec
or
or
sub
nop
lods
daa
je
imul
ret
scas
cmc
ja
add
mov
fxam
ja
add
mov
ljmp
dec
or
cli
in
add
clc
inc
inc
or
jp
nop
sub
add
sbb
test
sti
sbb
mov
cmp
cwtl
jno
sub
test
scas
fstpt
sbb
pop
lcall
out
inc
in
and
std
lock
fldl
aas
fwait
mov
and
cld
cmp
mov
dec
fmuls
out
xor
add
in
loop
dec
shl
cmp
lret
mov
outsb
mov
lea
push
and
lcall
ljmp
push
ret
fists
pop
fadds
lock
add
add
or
or
add
fucom
pusha
fimuls
js
mov
movsb
mull
cmp
movsl
lods
hlt
lcall
int3
mov
cmp
or
adc
sbb
cmp
stc
or
add
repz
sbb
push
lret
pop
daa
je
add
aaa
icebp
cmpl
leave
fs
xchg
dec
test
loopne
jecxz
jo
enter
fwait
int3
out
sub
and
jge
jp
push
cmp
mov
jle
add
add
rcll
fiadds
test
ja
repz
lock
jge
sub
ror
add
adc
push
in
push
les
nop
adc
or
pop
arpl
add
test
push
add
lret
mov
jle
pop
or
push
mov
rolb
lahf
dec
push
push
adc
add
xchg
stos
jnp
mov
fists
push
cmpsb
add
mov
fs
pop
jmp
in
add
aaa
fchs
movsl
add
mov
stos
je
jmp
add
popf
aam
clc
test
add
stos
adc
gs
pop
sbb
push
ljmp
adcl
add
xchg
repz
or
add
add
sahf
dec
jl
pop
fsub
fs
in
or
out
add
ja
arpl
scas
lock
mov
mov
or
push
out
lcall
aad
stos
push
mov
int3
lret
shl
inc
push
mov
add
cmc
or
outsb
add
adc
aaa
pop
pop
mov
mov
inc
add
dec
xor
add
add
or
loopne
pusha
jne
lods
push
std
xor
push
and
push
adc
sbb
jle
pop
pop
pop
out
mov
cmp
mov
das
es
push
sub
add
pushf
push
adc
aam
mov
gs
and
mov
je
and
fsub
cld
in
cmp
into
push
rorb
add
pop
lods
imul
lods
mov
pop
loop
add
jnp
push
sarl
ljmp
push
inc
and
and
add
dec
data16
ljmp
icebp
jns
je
add
lea
dec
ds
push
aas
shlb
ja
mov
xchg
mov
fwait
push
cmp
iret
adc
loope
lret
mov
dec
sub
lret
sbb
in
inc
inc
filds
jae
dec
rcrl
cltd
adc
mov
push
lds
jg
ret
xchg
or
dec
pop
test
bsf
sub
fcom
add
orl
add
jp
or
sbb
movsl
sbb
mov
add
dec
xor
xor
add
ds
or
data16
sub
lds
jns
inc
outsl
or
leave
push
je
divb
int3
ret
add
lret
repz
or
and
nop
fwait
cs
add
movsb
sub
cmpsb
enter
dec
sub
mov
aaa
mov
mov
and
sbb
sub
adc
add
xchg
xchg
aas
mov
mov
push
in
dec
sar
mov
mov
mov
add
mov
movsl
add
pop
fwait
inc
sahf
fdivs
lock
out
movl
xchg
ret
add
cmp
adc
add
jle
mov
add
mov
loope
test
jl
pushf
sbb
add
xchg
out
rcll
mov
jg
and
xor
adc
hlt
loopne
sti
inc
push
in
hlt
stos
add
fstpt
sub
sbbl
scas
lcall
orl
add
jae
aaa
push
pop
xor
adc
inc
or
lods
es
add
aam
movsl
and
mov
jo
push
outsb
clc
ror
cmpsl
pop
adc
and
ds
ja
pop
fstpl
addr16
and
xor
pop
das
call
or
inc
xchg
push
jnp
lds
or
fs
in
out
imul
xchg
push
mov
cs
imul
rcrl
nop
cmovnp
mov
subl
int3
shll
sahf
jmp
mov
add
cli
test
scas
inc
jge
mov
mov
or
scas
cwtl
sub
movsl
xlat
sbb
not
mov
pop
sahf
test
add
pop
rolb
dec
mov
sbb
add
andl
pop
outsb
jb
pop
xlat
int3
repnz
and
mov
enter
repz
js
add
test
cmp
adc
push
mov
add
out
pusha
jb
add
mov
bound
in
std
pop
cltd
sbb
xor
or
dec
stc
nop
test
jle
in
pusha
sbb
cld
dec
push
aas
or
pushf
add
jns
test
addb
sub
sbb
repz
cmpsl
xchg
mov
add
jecxz
addr16
cmp
add
repz
inc
add
lods
out
and
test
fdivl
fidivrs
mov
adc
sub
adc
lcall
inc
inc
adcb
jge
push
in
add
xchg
dec
mov
xchg
inc
loop
rolb
stos
add
sub
fldl
call
jl
add
xorl
loopne
xor
inc
cmp
xchg
pop
pushf
imul
add
xchg
add
popf
cmpsl
mov
inc
or
fs
movsb
lods
and
or
pop
add
ret
loopne
aam
movb
inc
lods
mov
xchg
and
pusha
sbb
pop
inc
imul
cmp
in
mov
push
mov
add
mov
cld
roll
adc
cmp
push
jp
addl
lahf
sbb
jne
add
jo
adc
add
mov
xor
sbb
add
sbb
inc
or
ret
or
repz
out
stos
in
pop
lds
movsb
inc
mov
add
push
or
adc
das
push
subb
arpl
or
or
add
lods
xchg
inc
gs
cmp
nop
in
fisttpll
test
loopne
adc
inc
out
xor
xlat
pop
mov
push
or
push
addl
test
add
xor
adc
loopne
dec
pop
fmuls
push
mov
ljmp
adc
out
sbb
aam
aas
lcall
jle
insb
add
scas
push
xor
dec
jl
sbb
jae
xor
dec
mov
add
push
mov
mov
jne
dec
pop
mov
add
and
sbb
and
nop
xchg
cmp
jbe
mov
push
es
dec
mov
sbb
adc
loop
add
or
sub
adc
rolb
push
fcoms
adc
fiaddl
cli
dec
stos
mov
sahf
movb
cwtl
adc
sub
ficoml
and
jmp
cli
fildl
rcrl
jns
pop
cmp
repz
daa
xchg
sbb
inc
push
pop
cmc
cwtl
mov
add
mov
inc
push
fdivl
in
das
sahf
add
lods
movsl
gs
fistl
in
stc
test
pop
aaa
repnz
inc
add
inc
fildl
aad
pop
call
add
jnp
inc
add
or
hlt
aas
cmp
xchg
mov
shrl
or
push
push
rcl
clc
adc
inc
hlt
ds
ret
pop
xor
pop
or
xchg
daa
jmp
add
cmp
pop
cmpsb
test
jl
mov
add
xchg
cmp
test
shr
jo
fists
leave
xor
addb
pop
dec
lds
notb
xchg
mov
xlat
jge
lock
dec
add
mov
ds
in
push
add
xlat
call
push
add
jne
push
test
add
shl
stos
push
inc
insb
add
fstps
add
or
incb
mov
sbb
mov
mov
mov
lret
ds
push
xor
mov
add
ljmp
aam
loop
xor
sbb
movsb
lds
enter
into
sarl
or
cmpsl
loopne
add
sbb
xchg
jg
add
repz
mov
hlt
add
cs
add
aam
insb
add
cmpsb
mov
push
out
mov
popf
or
enter
push
mov
jo
add
sbb
lds
pop
insb
bound
sub
out
loop
arpl
or
pop
orb
in
cmovl
cmp
cmp
test
mov
pusha
sub
dec
push
outsb
fiaddl
dec
adc
pop
rorb
or
inc
mul
add
call
sbb
mov
pop
mov
xchg
add
pop
lock
push
sbb
sub
cmp
jmp
arpl
fdiv
push
add
pop
clc
mov
lret
mov
xchg
repz
mov
cmc
add
and
daa
out
fimuls
scas
cmp
incl
and
shr
push
nop
fsubs
popa
mov
rorl
frstor
push
inc
inc
imul
ror
repz
xor
adc
add
js
in
add
movsb
nop
add
push
insb
sub
adc
xchg
xchg
lret
data16
mov
inc
jnp
add
mov
add
xchg
lea
add
push
inc
sbb
sbb
pop
cwtl
pusha
add
pop
imul
dec
xchg
leave
add
push
cwtl
cmpsb
dec
xchg
shll
xchg
decl
out
test
and
sub
sbb
pop
pop
lret
inc
ret
add
int3
pusha
popa
mov
fwait
data16
clc
ret
or
mov
cltd
mov
push
add
aas
cmp
mov
cmp
add
push
add
int
mov
insl
outsb
jb
lea
mov
inc
outsl
jge
push
add
push
xchg
or
add
ds
xcrypt-cfb
cmpsl
out
add
mov
xchg
rcrl
add
insl
test
and
das
push
mov
ja
dec
mov
push
xor
cmp
mov
ja
les
aad
and
gs
pushf
repnz
cmp
xor
add
jl
movb
jbe
push
cmp
aam
xchg
sub
pop
xor
xchg
pop
inc
sbb
add
and
pop
sub
inc
push
mov
arpl
add
push
pusha
mov
xchg
ret
dec
pop
push
cmp
sbb
loopne
test
out
push
fildl
cmp
ljmp
fs
inc
adc
ss
dec
add
in
add
iret
andb
cli
movd
dec
inc
and
xchg
ret
pop
fnstsw
fdivr
add
hlt
aaa
int3
mov
sbb
pop
ljmp
lcall
add
or
cpuid
testb
xor
push
and
add
push
enter
out
add
adc
xor
gs
cmp
cmp
sbb
sbb
into
mov
mov
xor
loope
out
sub
andb
lcall
cld
xchg
xchg
add
push
int
cmc
lods
pop
ljmp
inc
scas
jno
push
ret
lods
mov
sub
cltd
add
or
insl
dec
add
add
pandn
add
cmpb
jl
js
test
pusha
and
mov
ret
xor
add
push
push
adc
cltd
jp
aam
dec
leave
and
adc
insb
jg
cld
pop
mov
or
and
inc
in
mov
loop
nop
std
repz
push
es
adc
mov
stos
add
ret
push
xor
mov
enter
test
dec
loopne
hlt
push
mov
rol
pop
pop
jp
inc
sub
ret
sbb
jae
inc
pop
and
inc
lods
or
sub
ds
aaa
into
inc
push
sahf
es
mov
rep
pusha
mov
sbb
xchg
out
or
in
sub
pusha
call
aas
sarb
roll
dec
add
pop
adc
add
orb
rcll
out
mov
mov
sub
mov
add
cmp
add
cmp
inc
sbb
mov
or
sti
aam
jo
inc
push
jnp
inc
test
add
and
bound
mov
stos
pushf
cmpb
inc
jns
push
push
xchg
jge
add
shl
test
lods
loopne
flds
mov
push
mov
add
xor
add
imul
adc
push
xor
add
and
add
fnstcw
mov
add
xor
sub
push
and
adc
and
inc
dec
aaa
loopne
adc
dec
xor
push
in
scas
icebp
popa
dec
imul
fs
pop
xchg
int3
adcb
xchg
nop
lods
add
jg
jae
aam
dec
add
inc
mov
pushf
into
or
stc
sbb
add
add
iret
roll
mov
hlt
movsl
sbbb
insb
bnd
adc
push
and
in
push
xor
add
out
sahf
adc
cmp
xor
cmp
stc
int
aam
xchg
add
dec
repnz
and
jnp
jo
sub
add
gs
add
fisubrs
add
xor
push
cmp
sub
dec
jg
adc
dec
push
dec
std
add
pop
dec
sbb
add
lods
loopne
nop
outsl
add
fistps
jle
sbb
inc
les
and
and
cmp
mov
cmpsl
shlb
jbe
sbb
in
add
loop
add
jmp
ret
add
stos
rorb
xor
out
jo
add
imul
out
adc
lahf
js
add
adc
je
insl
cmp
cmp
pusha
mov
mov
outsb
jge
mov
sbb
stos
push
test
jns
dec
fistpl
add
mov
frstor
daa
scas
dec
or
push
aas
add
jecxz
xor
filds
mov
dec
into
inc
je
pop
inc
push
jno
rcrl
fisttps
js
stc
mov
pop
xchg
lock
xorb
ret
popf
add
mov
hlt
pusha
data16
insl
xchg
aas
es
sahf
add
mov
inc
into
aad
sbbl
fidivs
test
stc
mov
xchg
pop
add
or
iret
xchg
xchg
fs
dec
add
sub
and
xchg
add
sub
dec
add
movsl
loope
shl
push
add
dec
arpl
mov
push
xor
cmp
xchg
add
aas
iret
fists
jb
popf
cmp
dec
ds
shlb
hlt
pop
xor
or
ret
push
daa
pusha
testb
cmpsl
mov
test
add
orl
fwait
cwtl
xchg
cmp
out
xchg
jbe
call
cmp
jp
adc
call
push
dec
icebp
mov
testb
add
push
das
loopne,pn
je
add
pop
pushf
cmc
and
cmp
lods
add
add
mull
jp
hlt
cmpxchg
sbb
rclb
out
call
add
pop
jae
cltd
jns
add
fcomps
lods
addr16
scas
or
movsb
adc
roll
pop
loope
inc
jo,pn
adc
sub
jae
jecxz
sbb
mov
mov
add
lods
xchg
add
add
jbe
cmpsb
adc
sarb
psraw
or
in
test
add
pop
inc
mov
mov
lock
in
xor
cmp
add
sbb
hlt
lods
sbb
add
mov
out
shll
cmp
xor
call
cmp
add
sub
xlat
xchg
sub
sub
mul
test
cs
lea
dec
jge
adcl
cmp
add
sbb
lcall
repz
cmp
sub
aam
push
mov
movsb
mov
cmpsl
jp
add
dec
sbb
mov
or
cmc
xchg
sub
inc
mov
add
xor
pop
sti
ds
ficoml
push
push
sbb
push
cmp
jl
loope
adc
mov
cmp
std
or
popa
dec
adc
push
iret
sti
and
add
inc
int3
loopne
ja
and
lcall
push
pop
dec
xchg
add
in
sbbb
mov
gs
sbb
mov
rclb
add
cmpsb
sub
pop
or
mov
pushf
pusha
pop
stc
xchg
add
popa
loop
add
push
push
sbb
mov
je
mov
add
pop
lods
fcoms
add
stos
mov
pop
dec
push
push
lcall
mov
push
aam
andb
rclb
jnp
push
addl
sahf
jp
inc
aam
mov
dec
jg
fsubr
test
pop
jae
test
int3
and
add
pop
add
push
jmp
pop
add
scas
push
inc
mov
jecxz
inc
xchg
jo
scas
test
and
cld
daa
xor
push
aad
stc
icebp
cld
sub
add
pop
imul
lret
mov
xchg
shrl
inc
push
repnz
inc
add
jo
outsb
bound
add
mov
or
test
lret
add
imul
ja
push
jge
add
out
leave
adc
pop
ret
pop
scas
iret
jno
push
aam
shr
lcall
ds
icebp
add
jns
add
push
xor
nop
mov
mov
mov
or
je
xor
aaa
push
pop
fprem
inc
or
inc
xor
sbbb
cmp
cmp
add
push
lcall
iret
lds
mov
add
xor
lret
hlt
xchg
add
cmp
out
mul
rorl
mov
hlt
in
adc
add
push
mov
testl
mov
jnp
sub
clc
addb
xor
pop
add
js
testl
clc
out
push
sbb
mov
inc
lods
jno
movsb
jbe
test
add
popf
sbb
std
or
mov
cs
stos
daa
cmp
out
xchg
fsubrl
add
testl
aam
rcrl
subb
push
add
sarb
or
outsb
jmp
or
mov
pusha
je
add
in
stc
adc
sbb
xchg
aas
dec
addb
aam
nop
hlt
aas
and
jno
sub
dec
add
icebp
lock
add
imul
aad
lock
out
ja
cld
add
test
dec
mov
cmp
xchg
mov
cwtl
jmp
psrad
add
js
das
add
cld
adc
pop
into
add
mov
ret
pusha
xor
xlat
mov
popf
cmp
sti
shlb
aaa
lcall
in
rolb
and
xchg
inc
xchg
mov
sbb
adc
jno
subl
add
outsb
dec
lods
lret
xor
add
jae
xchg
add
lahf
dec
es
loopne
add
mov
fmuls
xor
dec
sbbb
jl
add
add
and
add
sub
push
pusha
cmpsl
dec
pop
scas
dec
arpl
xlat
shrb
incl
push
sbb
dec
add
xchg
rcrb
inc
repz
rcr
inc
rcll
scas
cmpsl
mov
arpl
cwtl
incb
mov
ds
adc
outsl
cmp
xor
adc
shrb
and
sbbb
push
sub
arpl
add
repnz
push
mov
je
or
frstor
cmpsl
idivl
xor
in
incb
cmp
xchg
add
xchg
xor
fiaddl
arpl
sub
ja
add
aad
mov
inc
enter
or
in
lcall
push
cmp
js
arpl
jp
sbb
xchg
shll
testb
sbb
cwtl
push
insb
jge
add
xor
sbb
dec
stos
sbbb
sbb
push
pop
jge
sub
sub
jne
cmp
adc
sbb
pop
and
mov
std
jno
mov
push
pop
jbe
sbb
mov
or
vmulss
shrb
cmpsl
jmp
es
fmull
imul
shrl
aam
or
xchg
mov
fnsave
xor
push
sub
mov
sub
fimull
add
imul
rorl
sbb
addr16
arpl
or
inc
push
and
pushf
add
es
mov
xor
adc
lret
lea
aad
imul
add
cmp
ja
movsl
fcmovne
inc
sbb
and
subb
lock
xor
sub
adc
insl
xor
lods
das
enter
sub
sbb
out
sbb
sub
pop
adc
test
inc
xchg
nop
sahf
add
out
sbb
pushf
and
aad
outsb
mov
cwtl
mov
ret
fsubr
mov
sub
add
cld
inc
push
mov
push
sbb
std
sarb
inc
push
xor
or
push
xchg
test
enter
mov
adc
push
aam
adcb
lahf
pushf
mov
add
inc
or
inc
dec
and
rclb
sbb
rolb
add
jo
sti
inc
pusha
fnstenv
adc
add
ret
xor
rorl
xor
out
dec
int3
cld
sub
jecxz
inc
push
fildll
cltd
pop
push
sbb
adc
das
jp
inc
imul
cmpsl
cmp
or
inc
loop
jmp
cwtl
sahf
iret
scas
cmpb
pop
xor
outsb
fiaddl
je
jg
inc
and
cmpsb
push
inc
leave
ret
xchg
mov
faddl
leave
mov
fwait
add
stos
int
cmp
push
sbb
sub
push
jbe
sub
dec
or
add
in
add
mov
inc
loope
add
pop
jnp
clc
call
push
pop
fstpt
jns
aam
jb
loopne
out
scas
add
mov
stos
pop
add
jmp
mov
jge
or
push
test
and
cwtl
dec
sbb
lahf
inc
pop
cli
mov
xor
mov
dec
push
jl,pn
add
notl
mov
push
push
push
xor
pop
test
add
js
xchg
dec
in
cli
ljmp
adcb
ja
sub
es
push
ds
adc
nop
add
repnz
jg
mov
mov
xchg
test
xor
call
cmc
dec
outsl
sub
add
leave
fnstenv
testb
cmp
movl
ret
stos
lea
das
cmp
sub
add
lods
mov
fsubp
add
loop
vmwrite
add
pushf
aaa
cmp
and
loope
add
enter
dec
scas
inc
xchg
test
add
inc
cmp
daa
push
add
sbb
and
mov
cs
xlat
inc
xchg
add
fidivrl
outsb
aam
lret
rolb
jae
mov
scas
and
add
call
daa
stos
jp
popf
add
out
mov
lret
pop
sbb
jnp
sbb
bound
cmp
cld
xchg
xchg
jg
push
fs
push
jnp
test
in
int3
fiaddl
ret
cmc
sub
cmp
add
loop
test
aaa
pop
add
sub
jp
sub
xor
lret
jmp
mov
jno
inc
cmpl
sub
dec
sbb
add
jecxz
or
sbb
cmp
cmpsl
and
sbb
push
lar
negl
in
mov
pusha
add
and
rolb
gs
dec
and
adc
add
inc
fidivrl
clc
int3
mov
or
repnz
add
xor
inc
sub
ss
push
adc
in
jnp
ds
push
stos
cmp
mov
out
pop
jge
mov
bound
add
and
not
movsb
pusha
clc
shlb
out
mov
mov
push
lea
adc
rorb
xchg
cmp
cmp
push
stos
daa
add
mov
xor
fwait
movl
add
jl
jbe
push
aad
add
xor
sub
cli
scas
rcll
push
dec
ds
andb
cmp
test
adc
sarb
mov
add
in
push
ss
dec
cltd
mov
mov
js
lds
add
ret
call
mov
sti
xor
stos
bound
jb
dec
mov
cmp
pop
aad
leave
rcll
mov
add
sbbl
add
test
ficoml
xlat
and
jo
rorl
loopne
mov
daa
arpl
mov
jno
ficomps
add
push
mov
mov
in
iret
mov
lea
std
lock
add
js
cmp
jno
orl
add
daa
pop
xorl
int3
sbb
adc
push
movsl
addb
loopne
andl
push
or
das
jp
pusha
sbb
jns
cmpl
addr16
add
scas
and
sbb
bound
add
dec
sarb
inc
cmp
or
movsb
lcall
in
xchg
data16
pop
add
lds
mov
dec
pop
add
je
sbb
xchg
inc
and
push
ror
add
and
mov
push
add
cs
sbb
cmp
jg
add
in
add
shr
adc
adc
and
add
fdiv
and
dec
dec
pop
xor
aam
cmp
inc
xchg
ja
adc
add
jnp
lods
push
or
or
push
cmp
mov
mov
jmp
add
mov
imul
aas
rol
and
fsubr
jbe
add
in
stos
mov
adc
pop
jae
es
jg
add
cld
jmp
mov
adc
bound
cwtl
mov
cmovge
test
scas
jl
out
dec
in
lods
cwtl
dec
pop
and
pusha
or
lcall
fmuls
cwtl
xchg
in
lock
add
cltd
es
and
sub
xor
sbb
lcall
mov
add
pop
sub
dec
nop
jg
sbbl
xor
push
add
and
nop
push
aaa
enter
push
std
jae
cmp
and
aas
xchg
jl
ljmp
es
xor
fcmovnb
push
lock
shll
mov
adc
adc
popf
xor
loop
inc
adc
mov
and
and
cmpb
xchg
jno
add
add
or
inc
add
clc
aas
les
inc
jle
push
jae
jmp
shr
inc
sti
clc
push
add
hlt
cmp
add
mov
out
sub
adc
lea
push
lods
jne
inc
mov
pop
fsubrs
cs
dec
pop
jg
ljmp
out
cld
js
pushf
pop
add
adc
mov
arpl
jle
movsl
xor
gs
nop
xorb
jns
addr16
pop
into
outsl
add
out
orl
cmp
lret
and
jnp
leave
hlt
btc
mov
jge
adc
shl
add
mov
jmp
and
repnz
into
or
stos
in
add
push
pop
push
out
popf
cmp
jbe
js
add
push
testb
test
les
mov
in
pop
pushl
sub
add
push
xchg
mov
std
cwtl
or
mov
add
or
jp
add
jnp
add
lock
stos
mov
loopne
sub
test
mov
leave
or
or
xor
jbe
cmp
lret
test
adc
cmp
dec
and
add
pop
roll
out
rdmsr
xor
push
jmp
fsubrs
loop
das
add
movsb
cld
fwait
dec
push
mov
dec
inc
int3
repnz
adc
inc
jl
push
loope
test
pop
aaa
add
jle
adc
fs
xchg
orb
inc
xor
push
pusha
aas
jb
outsl
add
jecxz
jae
lret
add
pop
inc
sbb
mov
push
jle
xor
lea
fst
js
int3
push
and
and
inc
adc
pop
mov
rcl
sbb
add
cltd
push
movsb
and
and
aaa
mov
or
and
sbb
mov
into
mov
add
jecxz
fsubs
stc
mov
add
test
mov
enter
fmuls
mov
adc
pop
sahf
pusha
adcb
dec
add
xor
add
cmp
dec
add
push
call
sbb
shlb
add
xchg
cmp
and
xor
inc
stos
lea
jp
add
ds
out
sub
dec
push
cltd
clc
int3
lret
mov
or
outsl
and
gs
xor
jecxz
add
cmpsb
push
sbb
repnz
pop
mov
mov
mov
push
push
insb
fadds
jno
pop
out
xorb
add
jecxz
and
adc
arpl
and
xchg
rcrl
cltd
lds
lcall
jmp
gs
jb
push
negb
add
insb
pop
sub
pop
pop
adcl
push
fldt
jmp
mov
dec
sub
in
mov
rcrb
jg
shll
cmp
repz
push
xchg
popa
loopne
or
movsb
stos
aaa
mov
incb
add
pop
push
xchg
push
cltd
push
push
pop
inc
xchg
add
add
cmpsb
leave
sbb
push
cmp
shlb
and
ffree
xchg
cs
hlt
jns
je
jp
lcall
into
loopne
dec
sarl
add
outsl
jg
ds
fildl
adc
mov
clc
les
sbb
incb
movsb
inc
add
jp
pushf
mov
lahf
add
jb
add
sub
in
fnstsw
push
iret
sbb
pop
dec
lea
cmpsl
andb
fisubl
add
add
pop
js
mov
aas
pop
popl
jp
repz
insb
jecxz
daa
jo
adc
mov
fcomip
andb
xor
push
add
into
xor
roll
stc
ss
iret
shrl
pop
xchg
shlb
add
cwtl
jp
add
jb
jns
cmp
fnstenv
sldt
clc
and
push
xchg
dec
je
add
sub
push
mov
cld
inc
dec
add
mov
cmp
add
aaa
jl
icebp
testb
jl
inc
or
push
add
add
negl
lock
rcrb
lock
or
outsl
mov
push
sbb
or
add
icebp
xchg
mov
mov
aas
jge
jb
sbb
ror
setbe
xorl
testl
jl
ljmp
sub
pop
hlt
add
pop
fsubl
es
lock
push
sarb
fldl
push
sub
sahf
cmc
mov
add
ret
xchg
xchg
lds
mov
jecxz
stos
clc
mov
dec
add
aad
test
cwtl
xchg
jb
xchg
mov
add
mov
test
outsl
sar
imul
sahf
adc
add
test
mov
lds
add
sbb
xchg
jno
xchg
add
sub
loope
mov
mov
popa
add
cmp
or
cld
testb
push
lahf
mov
orb
pop
fsub
mov
xlat
imul
sti
xor
mov
popf
repnz
lret
sbb
repz
add
fs
jecxz
out
push
cld
pushf
fldl
loope
in
inc
mov
popa
add
jns
out
lods
lcall
mov
inc
or
out
jb
add
fimull
jno
or
xchg
adcb
add
cli
lgdtl
sbb
in
lahf
sub
std
mov
sti
outsl
add
pop
jl
and
add
push
mov
in
loopne
sbb
mov
add
jge
mov
in
pop
add
hlt
jge
mov
jbe
mov
cmp
bound
add
int3
add
pop
sub
xchg
xorb
pop
cwtl
push
andl
leave
loop
xorb
mov
mov
xchg
or
mov
out
fwait
lock
and
test
call
adc
ret
mov
or
cwtl
push
movsl
inc
mov
cmp
add
xchg
or
add
jle
push
roll
stc
arpl
lret
je
pop
lods
add
add
daa
sbb
sbbb
pop
xor
enter
jmp
inc
xor
and
mov
iret
in
popf
add
and
in
add
ja
pop
pop
sub
hlt
stos
mov
mov
push
sub
scas
jp
loop
popl
push
dec
out
fdivrl
mov
sbb
cmpsl
arpl
jecxz
out
adc
sbb
push
dec
subl
adc
add
pusha
mov
mov
and
movsb
mov
sub
mov
cmp
mov
mov
and
mov
scas
es
sahf
adc
push
mov
add
pop
xchg
cmp
pop
mov
jb
dec
mov
jno
shll
add
aam
pop
dec
add
mov
add
imul
adcb
xchg
test
mov
push
jbe
push
fisubrl
mov
incw
jns
ljmp
ret
shll
int3
fcompl
sbb
add
out
mov
cmp
gs
cwtl
pop
jns
hlt
dec
test
push
push
lea
ds
mov
jae
cmpsl
nop
mov
sbb
adc
mov
negb
call
test
clc
sub
shlb
jne
mov
adc
xchg
lods
mov
add
push
cmpsb
mov
das
push
mov
ds
mov
mov
sahf
mov
mov
and
dec
call
mov
sbb
cmpsb
jle
shlb
add
xchg
decb
sbb
cmp
add
andb
repz
pop
lea
cmp
call
add
stos
sahf
test
stc
xor
sbb
sub
sub
dec
adc
movsb
adc
dec
out
das
mov
psrld
xchg
leave
subl
add
xor
movl
lods
pop
dec
xchg
dec
dec
add
shll
pop
and
lea
and
sub
mov
arpl
mov
pop
jb
or
and
rorb
test
loopne
inc
fmul
jle
push
pop
and
jecxz
jb
xor
shll
andb
sub
add
adc
and
sub
sub
mov
inc
mov
push
jl
jne
jbe
jbe
andb
add
mov
dec
fcomps
and
push
xchg
mov
sar
pop
lret
xchg
sbb
incb
add
or
dec
in
and
mov
int
push
jle
xchg
add
dec
mov
jbe
pop
rcl
mov
sub
push
rorl
add
test
pop
pusha
jg
add
out
jo
add
push
test
jbe
sub
mov
lahf
sbb
outsb
adc
mov
adc
gs
pop
xor
add
insb
sbb
test
xor
mov
outsb
push
sbb
mov
shll
rorl
mov
push
orb
leave
adc
sbb
xchg
xchg
jno
xchg
push
js
aaa
sbb
dec
and
push
rorl
std
mov
dec
jb
daa
inc
movsl
xchg
pop
cld
dec
out
sub
add
jecxz
sbb
xor
loopne
and
jbe
dec
inc
les
pop
cmp
push
shlb
inc
xchg
lahf
fdivs
cmp
int
cmp
icebp
bound
daa
sbb
fadds
nop
mov
inc
cmp
in
lods
iret
push
test
inc
lret
dec
cmp
inc
add
rcrb
test
lods
push
cld
dec
in
subb
xchg
cmp
movsl
mov
xor
add
lods
add
or
mov
cmc
mov
xor
dec
mov
popa
jle
pop
call
adc
sarb
in
push
ret
push
or
jmp
mov
sahf
add
lea
aad
push
in
jne
push
xchg
add
and
cs
in
xchg
sub
hlt
push
xor
fsubrs
and
or
out
adc
ss
fcmove
jle,pt
sahf
pop
sti
xchg
mov
sub
push
mov
lock
mov
push
cmp
aad
mov
cmpb
cmp
push
xchg
push
or
adc
fsubrl
or
pusha
clc
mov
enter
push
xor
push
xor
push
sub
add
and
cmp
pop
loopne
movsb
pop
adc
fwait
sbbb
lea
icebp
push
incb
push
test
aas
mov
ss
cmpsl
mov
sbb
mov
stos
aaa
mov
mov
stos
xchg
andl
xchg
fs
ds
add
cwtl
mov
mov
mov
jp
add
push
stos
cmp
cwtl
sbb
pop
xchg
xor
call
jg
out
add
lcall
movsb
bnd
sbbl
cmpsl
mov
ficomps
and
popa
pop
movsb
inc
in
add
push
cmp
jecxz
loopne
jb
add
fildll
jae
insl
and
add
scas
sub
es
cli
dec
add
xchg
insb
and
add
outsl
movsb
cmpsl
push
loopne
mov
in
xor
mov
or
or
mov
adcl
fldl
dec
cmp
dec
pop
dec
push
int3
sub
adc
insb
shrb
mov
movsl
icebp
add
adcb
mov
test
rcr
add
add
jo
sub
stc
mov
adc
or
cmc
lock
or
sub
and
dec
aad
mov
mov
movsb
in
xchg
aaa
sbb
xor
jns
or
jle
adcl
mov
add
pop
adc
movsl
cwtl
movsb
dec
testb
lock
stc
or
daa
loopne
cmp
mov
mov
mov
xor
movsb
insl
xchg
xchg
outsl
stc
xchg
and
inc
xor
mov
push
pop
int3
add
aaa
test
enter
adc
nop
je
xor
adc
shrb
hlt
adc
jp
pop
test
inc
sbb
mov
aas
add
or
stc
outsb
cmp
xor
and
or
scas
add
negl
sbb
xor
add
cmpb
scas
or
cmpsl
lds
or
icebp
pop
stos
loopne
adc
add
jne
fwait
jae
pop
jno
jecxz
and
push
add
fcoms
inc
or
or
repnz
adc
sub
clc
dec
in
mov
ret
or
pop
xor
mov
and
lret
cltd
cmp
pop
outsl
fistpl
pop
shl
xor
sbb
or
fists
mov
push
cmp
jmp
fsubs
xlat
add
loope
dec
in
insl
rcrl
push
xchg
xor
cmp
sub
test
adc
or
fadd
xor
inc
in
test
lock
popa
add
ret
vandps
and
sub
jae
sbb
add
clc
xor
call
adc
add
ds
sub
lds
inc
mov
add
sbb
sbb
mov
xchg
popa
out
shr
cmp
xchg
inc
movsb
loop
xor
mov
movsb
sbb
shr
mov
dec
ja
add
in
jmp
mov
pop
jmp
pop
lds
in
or
lds
push
cmp
sbb
mov
mov
xor
dec
push
mov
std
ja
popa
cmp
jbe
add
mov
mov
sub
in
loope
push
add
insl
cmpsl
in
popa
bound
mov
loope
adc
in
sbb
shlb
push
or
dec
and
cmp
xchg
ljmp
dec
aas
adc
xor
or
sti
daa
jp
mov
arpl
aaa
in
and
loop
mov
adc
or
nop
sub
cmp
ret
ss
xchg
mov
js
xchg
call
fisttpll
aas
pop
adc
fisubrl
or
outsl
sub
add
mov
jae
xchg
dec
sbb
add
push
addb
sbb
add
mov
fildl
scas
mov
das
adc
jo
fst
pusha
int3
xchg
orb
lock
or
add
cwtl
lret
dec
insb
mov
nop
mov
add
cs
mov
shlb
out
lahf
add
xor
pop
xchg
test
out
cmp
iret
pusha
jmp
dec
lds
jecxz
add
mov
cmpsb
pop
stc
or
sub
xchg
xor
and
cltd
imul
aad
cld
sbb
cmp
fldenv
mov
shr
cmp
insb
cmp
push
xchg
das
and
or
mov
and
dec
pop
mov
cmpsl
das
stos
mov
add
repnz
addl
mov
mov
jmp
xchg
adc
sahf
inc
hlt
and
jb
push
cmp
lahf
add
das
jecxz
enter
adc
mov
mov
push
dec
sti
aaa
cmpsb
shrb
mov
add
push
repnz
push
test
sti
dec
cld
nop
adc
cmp
xor
sbb
mov
stos
lret
and
inc
pop
push
and
cmp
in
xor
pop
cmp
or
dec
nop
roll
xchg
fsubrl
out
mov
lcall
add
dec
and
adc
sub
sbb
sbb
push
fdivl
jo
fnstsw
jno
gs
aas
int3
mov
shr
enter
pusha
sub
in
xchg
int3
jns
hlt
jmp
and
xor
ficoml
fstps
test
pop
inc
out
push
sbb
pusha
xchg
imul
es
in
sub
mov
loopne
add
sbb
pop
push
mov
hlt
gs
and
test
push
xor
das
sbb
sbb
xor
and
lds
cwtl
jb
cltd
jae
push
cwtl
xchg
add
xchg
cmp
cwtl
jmp
add
daa
mov
dec
lcall
loopne
aam
sbb
fisttpll
mov
stc
movl
adc
scas
sbb
fdivrl
push
bound
push
repnz
push
add
aaa
repz
leave
inc
inc
xchg
push
jmp
push
repz
xor
cmpsb
jo
test
aad
bound
movsl
dec
data16
pop
push
sbb
pop
mov
xchg
xchg
insb
add
mov
jo
scas
add
out
pushf
xor
pop
cmp
sti
mov
xor
ret
jle
xor
cmpsl
pusha
pop
dec
pushf
add
lcall
das
push
add
ds
and
popf
out
subb
add
dec
or
xlat
out
fidivrl
je
sbb
add
mov
arpl
pop
mov
xchg
add
sbb
xchg
sbb
mov
test
mov
xor
push
inc
sbb
pop
mov
cmpsl
inc
mov
cmp
and
lret
xchg
mov
jg
adc
mov
loopne
mov
or
call
cmp
adc
mov
mov
aaa
pop
fildll
popl
dec
cmp
fnstcw
xor
sub
subl
jae
mov
inc
aaa
xor
inc
push
loope
dec
sub
xchg
and
daa
ljmp
mov
fildl
pop
add
fdivs
sub
xor
pop
aaa
cmp
adcb
in
cli
sbb
xchg
adc
mov
dec
pop
mov
fsubrs
cwtl
jle
push
sbb
add
jmp
test
push
dec
pop
xor
pop
add
movsl
inc
jo
lods
push
add
push
cli
add
out
adc
sub
jo
sbb
xchg
roll
inc
imul
cltd
divw
stc
pop
jecxz
mov
mov
xchg
adc
in
xor
orb
jns
mov
stos
adc
xor
and
fsubl
imul
pusha
push
dec
test
add
test
nop
xor
mov
xor
orb
ds
sbb
inc
jl
add
mov
push
inc
jg
mov
jecxz
sbb
inc
pushf
bound
adc
or
sets
cmp
and
inc
xor
dec
sub
push
sub
rclb
push
adc
imul
inc
dec
sub
add
jp
push
fildll
sbb
add
sar
or
jb
int
sbb
mov
mov
inc
or
ss
nop
mov
inc
pusha
pop
lock
test
arpl
movsb
adc
or
nop
fbstp
add
mov
add
sti
out
sub
jecxz
xor
out
pop
out
clc
mov
dec
add
loopne
arpl
shll
jmp
cmp
xchg
ret
imul
stc
jb
xor
cltd
lods
pop
push
cli
repz
inc
and
orl
mov
jb
xchg
js
sahf
inc
cmc
add
aad
cwtl
xor
pushf
cmp
aas
bound
xchg
push
jmp
js
pop
loop
imul
mov
mov
or
mov
mov
insb
and
and
cmp
insb
pop
lods
ror
es
and
add
pop
sub
je
push
or
push
rcl
add
rolb
dec
aas
pop
mov
outsb
das
mov
cmp
out
xchg
mov
pop
push
scas
sub
adcb
ret
or
insl
sbb
xorb
cli
pop
xor
inc
add
int3
dec
cmp
sbb
lcall
adc
mov
dec
cltd
push
sbb
pushf
dec
add
or
sbb
mov
fwait
insb
and
cmp
data16
fsubs
sbbb
sub
pushf
jl
dec
adc
and
dec
add
mov
mov
and
loope
inc
push
inc
out
add
sub
jg
and
ljmp
cwtl
mov
hlt
sbbl
inc
loopne
fs
ds
push
sub
cmp
sbb
cs
and
adc
jns
xchg
cmp
fmuls
pop
add
enter
xchg
jae
mov
test
xor
test
jg
add
pop
push
adc
mov
test
testb
sub
shlb
pop
sbb
inc
fsubs
cmp
add
xor
sar
addr16
fldcw
mov
and
cmp
mov
icebp
repnz
and
push
test
mov
daa
add
or
js
xchg
pop
mov
pop
push
out
sbb
sub
rclb
add
in
inc
mov
mov
mov
mov
fs
pop
add
daa
shlb
jl
add
xchg
ljmp
add
mov
mov
add
rcrb
jl
mov
fildl
add
add
add
cs
jg
cli
adc
mov
enter
ret
pop
stos
jle
mov
data16
aas
pop
cmp
pushf
lahf
jne
fistpll
add
mov
add
arpl
inc
xor
sub
and
outsb
sub
je
lahf
push
fsubr
add
aad
pop
mov
fstpt
insl
add
pop
idivl
xchg
sahf
add
dec
pop
dec
mov
inc
ss
ss
adc
inc
push
add
inc
out
or
push
cmpsb
sbb
add
dec
xor
sub
mov
cmp
stos
sbb
ja
push
sbb
adc
ret
clc
mov
popa
testb
popa
shll
and
in
push
push
sbb
inc
jecxz
cmp
cmpsl
cmpl
add
scas
or
cmp
jmp
addb
mov
cmp
fsubl
lods
loopne
ror
divl
mov
ret
dec
push
pop
cmpsb
xchg
jns
mov
push
xor
mov
xor
ficoms
push
add
mov
add
scas
inc
cmp
pushf
mov
jle
test
xor
pop
cmpsl
outsl
dec
mov
inc
shl
aas
add
jnp
xchg
push
jo
add
mov
mov
sbb
fcomi
lahf
fs
std
xchg
inc
je
mov
out
sub
dec
or
mov
data16
montmul
cmpsb
add
call
or
jge
adc
enter
mov
cwtl
popa
mov
imul
pop
add
stos
jne
mov
lea
fnstcw
in
xchg
mov
dec
insb
xchg
loop
stos
adc
xor
sbb
xor
into
push
test
xchg
addl
popf
ss
imul
les
xchg
sbbb
ret
rcrl
xchg
pop
add
xorl
xor
sbb
add
xor
jmp
ret
pop
mov
mov
imul
cld
mov
lret
pop
adc
pop
or
xor
sbbb
out
pop
aaa
or
jns
sbb
push
mov
imul
repz
xchg
out
lret
push
sbb
xor
aad
xchg
sbb
inc
mov
add
out
addr16
xchg
push
rcl
adc
and
cltd
sbbl
adc
mov
push
and
int3
add
mov
sbb
dec
loop
jnp
mov
pop
repnz
mov
cli
add
fdivrp
cmp
fcmovbe
xrelease
add
cli
push
loopne
add
lods
adc
sub
hlt
push
mov
and
pop
fs
addr16
adc
andb
call
orl
mov
jne
sahf
sbb
add
into
adc
movsb
subb
test
mov
add
or
icebp
xor
enter
dec
loopne
jl
add
lret
lods
shll
cmp
sub
aad
es
addb
inc
xor
push
cmpsl
rclb
add
xor
enter
cmp
push
inc
jecxz
leave
fdivrl
js
push
stos
xchg
add
mov
mov
arpl
pushw
mov
and
sti
jg
addr16
aad
xorb
loop
inc
jge
es
aad
int3
add
xchg
in
push
jecxz
rolb
xor
xor
roll
pushaw
call
adc
cld
loop
data16
dec
clc
jp
sbbb
pusha
adc
pcmpeqb
sub
add
push
sub
jmp
push
insl
loope
pop
inc
xchg
xor
pop
fs
sub
add
mov
adc
les
mov
or
sub
or
insb
rclb
pop
or
lds
jo
add
ret
xor
jl
or
loopne
add
push
xchg
inc
aam
es
test
fbstp
dec
movsl
andb
cmpsl
fcmove
test
add
jp
in
pop
push
out
call
lret
into
add
lcall
add
cld
sbb
insb
lahf
add
mov
add
sbb
sbb
mov
lods
adc
and
fmulp
xchg
popa
in
mov
sbb
adc
add
aaa
mov
add
outsb
sub
inc
or
orb
and
mov
xor
mov
jns
testb
xor
add
jo
mov
add
pop
pusha
mov
sbb
out
fistl
aas
xor
popf
jne
ret
sub
in
xor
sarb
fstps
or
sub
nop
add
inc
mov
ljmp
push
mov
pop
lds
push
in
hlt
jno
sub
or
xchg
test
push
cmp
jle
add
inc
pop
jbe
or
repnz
test
and
jne
sbb
cmpb
sub
jne
xor
mov
cli
outsb
or
jle
xor
sahf
add
cmp
iret
xlat
cmp
stc
jno
xor
pop
lods
outsb
or
cmp
dec
cmpsb
add
push
data16
shlb
inc
pop
mov
add
mov
jbe
xor
cmp
lock
mov
pop
mov
loopne
ret
pop
in
push
nop
cmpsl
lahf
xor
mov
addb
sbb
xor
mov
jbe
fld
jns
call
mov
loopne
mov
lea
decl
pop
pop
push
lret
cmp
pop
insb
sahf
mov
jecxz
hlt
inc
or
scas
jbe
mov
mov
mov
lahf
inc
orb
sbb
insb
mov
popf
xor
or
push
jg
popa
lret
cmp
xor
dec
push
sub
ja
adc
cs
daa
mov
ss
add
push
ds
inc
adc
es
dec
dec
int3
nop
add
movsb
je
cmpb
insb
add
cmp
inc
adc
ret
mov
xor
popa
lahf
nop
dec
mov
adc
add
add
pop
clc
in
fidivrs
leave
or
push
mov
arpl
loopne
enter
xchg
mov
mov
push
add
mov
roll
push
xchg
push
ror
xorb
mov
movb
pop
das
test
sbb
addb
addr16
sbb
fwait
inc
dec
shlb
inc
out
test
adc
jl
add
mov
pop
call
pop
xor
and
jge
and
push
fdivs
sbb
pop
mov
divb
add
fdivrs
mov
cmp
add
add
fnstcw
sub
mov
add
jb
sub
scas
sbb
or
add
test
arpl
and
inc
jae
jns
movl
and
sub
inc
fnsave
icebp
imul
or
enter
add
imul
scas
mov
mov
sub
mov
and
cwtl
inc
cmp
sarb
add
out
mov
add
cmp
loopne
adc
xchg
sbb
push
es
jnp
add
and
and
cmpsb
jns
or
dec
mov
mov
mov
movntps
js
add
sti
and
inc
cwtl
pop
adc
test
loope
cmpsb
mov
enter
ror
and
test
and
jecxz
imul
xor
shll
xor
fs
xchg
lea
mov
nop
mov
push
test
lods
test
adc
mov
aaa
roll
lret
jle
mov
add
sub
dec
add
cmpsl
jne
insl
in
mov
cs
or
jmp
aam
mov
fdivs
addb
xorl
push
js
insb
das
add
mov
arpl
or
pop
out
fcomps
inc
je
sbb
jl
and
cmc
mov
add
and
iret
jb
popf
or
mov
inc
lahf
add
mov
add
pop
popf
jp
add
adc
mov
insb
nop
and
test
xchg
add
sub
out
mov
notb
add
pushl
jmp
cltd
int3
add
sbb
jno
lmsw
ljmp
xchg
fs
call
test
data16
mov
cmpsb
push
in
outsb
dec
sbb
call
sub
out
push
cmp
test
mov
inc
pusha
mov
cld
in
add
mov
adc
fldenv
mov
pop
out
rolb
xor
popf
pop
fs
inc
sti
add
push
mov
sbb
adc
xor
xchg
or
incl
shlb
xchg
cmp
test
mov
iret
cld
sbb
inc
test
loopne
cltd
xchg
aas
dec
lret
xchg
iret
mov
clc
sub
add
loope
int3
es
adc
std
dec
shr
hlt
adc
sub
jns
mov
add
jnp
fdivrs
and
cmp
sub
add
inc
sbb
jns
push
sbb
jnp
popf
mov
inc
add
inc
in
pushf
fidivs
std
sbb
pop
or
xor
cmpsl
scas
dec
mov
sub
sbb
push
xchg
movb
fdivr
add
mov
cwtl
sbb
pop
jae
xor
testb
das
ja
jecxz
mov
out
gs
xor
mov
add
cli
adc
xor
stc
gs
mov
pop
not
stos
add
jb
mov
test
pop
sarb
sarb
add
sbbl
sbbb
sarb
xor
pop
mov
mov
add
int3
repnz
fdivrs
leave
dec
rorb
ja
add
add
popf
cmp
adc
adc
xlat
rorb
repz
ljmp
jp,pn
add
cmp
cmp
in
xchg
dec
push
js
jnp
cld
push
dec
int3
or
ljmp
call
lods
subl
jge
leave
add
and
popf
pusha
in
in
pushf
inc
nop
mov
adc
push
or
add
mov
popa
inc
punpcklbw
int3
pusha
mov
out
dec
rcll
mov
inc
sub
jp
pop
and
jl
int3
sbb
jb
call
xchg
sarl
xor
xor
shlb
add
push
cmp
int3
movaps
insb
testb
add
add
and
sahf
or
leave
loopne
mov
and
inc
adc
add
cs
test
incl
push
dec
dec
add
push
push
xor
cmp
sub
aam
int3
inc
cltd
add
inc
insb
cmp
dec
jnp
push
ss
loopne
andb
add
fadds
cmp
fsts
in
or
sub
fwait
add
fidivrs
daa
je
cmp
pop
dec
test
out
xchg
add
stos
add
xchg
add
mov
lret
shl
lds
movsb
mov
call
cli
frstor
cmp
mov
add
mov
add
ja
xor
mov
into
mov
shl
push
mov
leave
cmp
cmovs
loopne
jns
pop
into
xor
insb
jmp
fidivrl
or
add
push
xor
mov
dec
cmp
loopne
into
movsb
arpl
jns
adcb
mov
cmp
inc
add
iret
mov
jno
mov
xchg
jp
cmp
cltd
cli
mov
xor
adc
movl
add
xorb
loopne
iret
in
jae
insb
sbb
rclb
cmp
fbld
cmp
ja
mov
xchg
andb
movsl
leave
mov
cmp
lea
sub
popa
add
cs
or
inc
outsb
test
push
add
mov
push
mov
inc
fisttps
lahf
ds
fiadds
push
and
rcr
cmp
inc
add
lods
dec
popf
sarl
jl
or
push
inc
rolb
bound
rorb
pop
aad
enter
push
dec
cli
jb
add
jno
cmp
inc
add
in
bound
lods
pop
ljmp
pusha
xlat
sub
add
or
push
add
jns
push
and
and
mov
sub
lea
cmp
or
xor
pusha
and
cmp
shlb
pop
push
pushf
add
jmp
call
and
push
jbe
addb
iret
sbb
pop
mov
jne
dec
adc
pop
dec
inc
rclb
aaa
cmc
ljmp
lahf
or
add
loopne
mov
xor
xchg
test
and
jb
imul
pop
dec
pushf
xchg
jo
lahf
call
outsl
xor
push
add
mov
fmuls
orb
push
das
mov
js
ret
add
sbbb
cltd
cmp
leave
mov
dec
loopne
jg
add
popl
sub
mov
cmp
roll
lock
adc
cmovno
scas
lret
addr16
in
nop
sub
pop
and
or
addr16
pusha
lahf
sbbl
in
pop
jmp
ljmp
shl
jl
add
push
inc
cs
inc
sub
sbbb
dec
dec
lods
pop
xor
je
enter
xor
push
push
pop
loopne
mov
mov
adc
sbb
push
sbb
mov
popf
notb
out
sbb
loope
xor
int3
stc
fisttpl
push
mov
and
push
int3
or
sbb
cmp
in
movntq
xchg
sub
stos
add
imul
xchg
sahf
andl
les
and
jge
lret
jmp
xor
fucomp
sub
inc
dec
inc
adc
xor
cmove
mov
add
mov
add
daa
or
insb
or
dec
cmpsl
jmp
lods
inc
fiadds
xorl
cmp
dec
xor
rorb
push
lahf
mov
jb
lock
pop
adcb
sub
loop
pop
and
test
mov
add
xor
es
icebp
adc
cs
jle
or
push
cmp
cmpl
out
hlt
or
jnp
stc
add
subb
mov
push
les
orb
add
repnz
cmp
sub
les
rorb
or
adc
add
insb
xchg
ja
and
faddl
call
cmpsb
in
sbb
cmc
xorl
xor
clc
push
mov
cmp
sub
imul
pusha
clc
lods
inc
xchg
add
push
test
pop
sub
es
in
jmp
shr
jnp
rcrb
lods
sbb
xor
inc
mov
in
iret
push
sub
xor
pop
sbb
sub
inc
bound
lea
pushf
adc
inc
dec
or
fists
dec
or
lcall
cwtl
adc
mov
add
cmpsb
test
push
pop
pushf
adc
out
call
mov
and
cli
dec
push
add
jmp
cmp
popa
das
cltd
popa
or
lds
jp
in
in
aad
mov
sbb
cmpsl
dec
add
inc
addr16
pop
test
jnp
fwait
nop
mov
push
add
xlat
mov
in
xor
lahf
dec
mov
cmp
and
cmp
xchg
pushf
add
lods
sbb
jge
mov
add
dec
adc
rcr
mov
rcll
sub
add
lea
or
sbbb
xor
and
and
in
gs
push
jbe
out
jno
sbbl
dec
and
push
or
mov
jp
rcr
in
xor
push
subb
dec
mov
add
mov
mov
sub
pop
dec
outsl
mov
out
leave
add
dec
je
sub
sbb
xor
cld
inc
add
fsubp
or
pusha
push
daa
mov
insl
jge
loope
or
loope
mov
outsl
and
shr
pusha
ljmp
movsb
and
sarl
cmpb
popa
addr16
mov
sbb
jmp
loopne
adc
inc
arpl
inc
push
xchg
vpmacssdql
xor
cld
int
popa
jo
fsub
mov
push
cmp
push
stos
lods
jno
test
jo
sti
push
lret
adc
xchg
arpl
daa
push
add
xchg
hlt
movb
or
jl
jnp
jo
outsl
sbb
mov
jo
or
loopne
mov
xor
and
pop
mov
ja
lret
popa
inc
xchg
push
add
mov
gs
dec
mov
and
imul
mov
cmp
aam
scas
dec
popf
inc
add
test
mov
or
in
pop
xchg
pusha
addl
sti
pusha
push
dec
cmp
clc
adc
icebp
mov
arpl
xchg
nop
test
inc
add
add
movsl
xchg
inc
push
stos
sbb
je
pop
pop
cmc
insb
leave
imulb
test
bound
pop
or
je
subl
nop
in
test
jge
add
mov
pop
mov
std
add
and
pop
cmp
mov
stc
aas
js
or
add
push
pop
add
mov
or
pop
leave
clc
test
sub
push
push
jne
loopne
mov
jl
movsb
mov
sbb
or
adc
push
loopne
jo
outsl
cmp
mov
sbb
pop
mov
fcmove
dec
dec
lods
adc
jb
stc
inc
test
and
loopne
mov
sti
add
push
or
hlt
test
or
sbb
add
push
in
arpl
in
orb
lcall
push
rcrl
cwtl
or
scas
test
mov
adc
rcl
out
cli
add
mov
fldcw
in
adc
orb
pop
and
movsb
add
jb
and
mov
mov
add
movsb
jmp
sbb
sbb
addr16
inc
add
dec
pop
sub
or
jnp
add
cwtl
cmpsl
sub
jmp
pop
and
subl
incb
xor
sub
pusha
push
or
sahf
bound
xor
cltd
into
mov
add
pop
push
cmpl
and
in
xchg
add
outsl
mov
add
js
jne
add
movmskps
cld
scas
addb
add
jae
and
loopne
into
out
mov
add
adcl
loopne
bound
mov
add
push
inc
outsb
pop
loop
dec
mov
xor
jp
xor
mov
clc
ja
cmpsl
xor
movsl
dec
push
or
fiadds
in
outsl
mov
xor
sbb
aam
test
int
add
push
or
stc
add
mul
dec
clc
adc
cmpsl
rcrl
dec
aaa
add
xlat
mov
sti
fiadds
xor
push
sbb
or
test
pusha
sbb
sbb
push
mov
shrb
movb
loop
sub
test
pop
add
sub
loope
std
or
adc
inc
sub
stos
add
pop
jle
dec
xchg
pop
mov
out
dec
sbb
add
imul
add
and
sub
or
dec
fiaddl
clc
enter
push
push
mov
inc
sti
lret
jmp
pop
sahf
nop
shll
add
call
sahf
push
xchg
or
bound
and
mov
and
dec
push
add
ljmp
jle
mov
mov
or
mov
pop
add
clc
sub
add
das
inc
rorb
ret
add
lret
jle
and
add
dec
push
loopne
cwtl
xorb
aam
test
mov
push
mov
hlt
pop
es
fxch
jp
nop
insb
inc
int3
and
gs
adc
outsb
xchg
sbb
and
repz
pop
out
xchg
in
hlt
icebp
je
push
xor
xor
cmp
subb
sub
idivl
mov
jo
js
push
sbb
div
repz
sub
in
pop
shrb
daa
jge
mov
lds
or
hlt
add
mov
sahf
cmp
scas
dec
hlt
test
nop
pop
mov
cltd
les
xchg
add
je
cmp
insb
dec
pop
mov
or
push
inc
and
mov
push
shll
ss
pop
push
mov
pusha
push
inc
mov
sub
mov
sarb
pop
test
sub
and
insl
and
mov
add
addl
pop
inc
movsb
shl
pop
lods
cmp
repnz
xor
adc
pop
ja
xor
loopne
pop
adcl
aaa
sbb
loope
or
lret
mov
testb
jmp
inc
cmp
dec
movsb
cmp
cmp
fs
push
xor
add
sbb
bound
add
cs
pop
and
or
je
xor
jle
xchg
outsl
sbbl
mov
add
jbe
cltd
adc
inc
in
pusha
mov
jns
nop
inc
lds
dec
adc
orb
jno
add
jp
xchg
or
stos
sti
popa
xorb
inc
adcb
fs
cmp
sbbb
jl
xchg
add
scas
insb
test
inc
es
or
int3
cs
mov
xchg
inc
fsubl
outsl
sbb
rcr
add
rcrb
inc
pop
add
outsb
leave
push
xchg
lock
fs
add
xor
cwtl
jbe
add
sub
test
cmpsb
neg
adc
lock
pop
push
cmp
ja
fs
cli
jae
repnz
mov
push
in
bound
out
xchg
add
inc
test
cwtl
dec
js
orb
adc
inc
in
sub
rolb
pusha
scas
sub
mov
call
in
jne
cmp
push
or
or
pop
inc
mov
add
subl
rcrb
pop
sbbb
cmovl
mov
test
adc
or
outsb
and
ret
aam
adc
add
mov
add
dec
cmp
jnp
jmp
shlb
mov
iret
pop
adc
aam
cmp
shlb
push
inc
shl
clc
dec
cltd
cmp
shrb
dec
ja
and
adc
sbb
cs
push
fs
dec
call
pop
les
out
aam
arpl
and
in
add
adcb
mov
or
ficompl
pop
xchg
and
dec
sbb
lods
sarb
dec
push
cltd
pushf
rcrb
out
add
lds
cld
aaa
fimull
lock
fs
movsl
clc
cltd
pop
in
sbb
pop
movsl
dec
dec
adc
xchg
rol
inc
inc
daa
add
int3
mov
mov
pop
mov
jle
addl
clc
or
stos
inc
xchg
xor
repnz
dec
ret
inc
clc
stc
mov
or
mov
push
dec
iret
subl
ret
imul
bound
aas
jecxz
jp
loopne
scas
out
mov
filds
dec
push
arpl
pop
mov
adc
adc
and
outsl
leave
popa
pop
pop
hlt
sbb
imul
imul
fstpl
cmpsb
les
cmp
scas
in
or
and
mov
xor
cmp
outsb
adc
movsl
xor
ss
jbe
incl
or
mov
pop
pop
pop
mov
dec
loopne
sbb
scas
rclb
inc
roll
pop
and
and
loope
sbb
sub
push
sbb
test
pushf
pop
cmp
cmp
hlt
add
mov
xor
add
cmp
or
insb
jae
and
int3
add
xor
mov
dec
cmp
jge
mov
cmp
ret
add
ss
sub
push
or
leave
jns
add
or
pop
cmp
jo
enter
mov
add
imul
mov
bound
addb
xlat
fsubl
js
std
jmp
cltd
testl
and
mov
push
fiadds
dec
push
dec
inc
sbb
and
leave
fbld
cmp
add
pop
and
adc
test
and
add
adc
andb
cmpsb
or
add
add
sbbl
jmp
ja
lahf
sbb
push
pop
sbb
lcall
loopne
fisttpl
call
icebp
cltd
xor
jno
or
and
push
adc
add
pop
or
and
das
or
lods
add
mov
push
aam
fsubl
jle
arpl
jns
in
popa
lods
xlat
add
pop
fnstsw
shll
add
or
ret
cmp
dec
add
and
addl
mov
addb
jbe
sbb
push
test
stc
mov
jo
or
push
int3
jns
push
cmp
sub
in
xchg
in
push
divl
int3
mov
add
xor
jecxz
xor
stos
xchg
jno
or
cmc
pop
fisubs
loop
lahf
nop
scas
add
pop
push
clc
rorb
cld
push
xchg
aam
or
insl
sbb
jno
loop
add
pop
nop
xchg
and
add
lods
adc
shrb
enter
jns
and
pusha
pop
cmp
push
sub
pop
sub
pusha
addb
ja
mov
in
push
movsb
enter
jecxz
pop
or
xchg
push
mov
add
in
cmc
int3
or
aad
pop
leave
in
inc
sti
orl
cmp
imulb
leave
sub
add
loope
dec
enter
pop
push
xor
pop
jno
add
popa
push
nop
loop
xlat
or
sub
ljmp
cmp
dec
shll
fdivl
popf
repz
cs
push
enter
adc
dec
pop
lock
add
pop
rcrb
mov
and
inc
aad
xorb
pop
cmp
jbe
adc
fstpt
sub
adcb
mov
pop
xchg
or
dec
jl
andb
mov
pshufw
sub
xchg
inc
jmp
push
inc
jl
add
aaa
pop
daa
mull
sbb
mov
adc
add
pushf
bound
shlb
stos
sti
jno
add
test
sub
xorl
cmc
and
dec
and
push
push
or
xchg
push
arpl
insb
add
fdivl
jns
and
jle
mov
fimull
lahf
lock
adc
imul
lret
sbb
sbb
mov
loope
loopne
pushw
add
adc
add
pop
ljmp
or
cld
pop
mov
cmpb
dec
fdivl
jo
jmp
sub
add
loopne
jl
push
inc
aam
push
sub
sarl
or
mov
or
fs
lock
jnp
add
sub
push
dec
aam
mov
mov
xchg
popa
push
fnsave
test
xor
jo
aam
rorb
in
push
out
sbb
mov
lret
push
pop
ja
lahf
sbb
adc
fnstsw
cmp
push
mov
adc
mov
adc
add
push
nop
add
movsb
lea
insb
jl
adc
push
test
and
jecxz
or
fdivl
call
xchg
call
test
clc
mov
shr
dec
fwait
leave
mov
insl
mov
pop
adc
mov
gs
leave
jmp
xchg
mov
add
xor
sbb
popa
int
mov
mov
jbe
mov
dec
add
dec
outsl
into
sti
jbe
in
push
shlb
add
ljmp
or
fnstcw
fdivl
jo
xor
push
lret
aaa
push
les
addl
shrb
enter
jp
cmp
xchg
adc
or
mov
xor
pop
adc
popa
push
lds
loope
mov
sbb
pop
sub
push
add
pop
xor
dec
mov
add
cmp
and
adc
sub
icebp
pop
daa
cmp
outsl
addb
and
pusha
xchg
sbb
sbb
xchg
movsl
push
sbb
in
mov
mov
and
mov
cmp
or
jae
add
or
mov
xor
mov
and
push
lods
jge
addl
jle
subb
nop
scas
push
mov
add
orb
xorb
sbb
test
inc
adc
inc
push
or
xor
mov
dec
add
or
and
cli
add
xchg
mov
cltd
call
call
pop
lret
push
xchg
jo
or
add
rcrb
and
dec
push
aas
std
js
add
push
enter
insl
push
lahf
mov
add
xchg
push
and
pop
sahf
leave
pushf
iret
leave
push
add
jg
push
xchg
clc
lods
addb
jmp
add
gs
cmpsl
push
adc
push
and
test
pop
movsb
insb
faddl
xchg
cmp
add
push
hlt
add
pop
xor
jle
push
xchg
addr16
mov
dec
push
sbb
and
mov
add
xor
add
jb
and
xchg
jp
jbe
add
insb
sub
and
lock
adc
xor
outsb
in
add
insl
add
push
pop
mull
lods
das
inc
notb
jmp
mov
out
outsb
adc
mov
and
and
xlat
add
andl
xchg
inc
pop
sub
movntps
les
call
add
addr16
decl
pop
ret
inc
pop
mov
mov
adc
add
or
stc
xchg
insb
cmp
adc
scas
inc
add
aam
xchg
sub
mov
setge
inc
xor
xor
and
mov
cmp
push
fwait
pop
cmpb
mov
stos
jnp
outsb
add
adc
xor
call
cmp
scas
and
xchg
shlb
mov
cmp
sbb
adc
jb
xor
fwait
pusha
or
inc
xor
and
pushf
xchg
mov
inc
xor
popf
aam
dec
xor
dec
es
push
insb
dec
enter
scas
hlt
xchg
add
aad
rcr
mov
sbb
xor
inc
push
sub
mov
push
dec
mov
xchg
andb
idiv
jnp
sbb
mov
jmp
jb
sub
and
add
mov
pop
jle
leave
add
sub
mov
cmp
jo
loope
cmc
cs
or
test
insb
xchg
dec
hlt
rcrb
roll
cmc
sbb
or
mov
mov
xor
jb
xor
shrl
mov
mov
rorl
iret
test
call
adc
cmp
gs
ret
mov
mov
adc
xor
cmpsl
and
mov
add
inc
pop
lahf
xchg
add
scas
add
loope
jns
inc
sbb
mov
and
xor
sbbb
add
dec
add
and
add
shl
gs
inc
mov
xchg
and
test
orb
jns
nop
jne
test
mov
jno
xlat
out
rcrb
or
pop
sbbl
fmuls
stc
pop
testb
inc
cli
icebp
xchg
add
fsubs
insb
nop
xchg
outsl
lret
out
mov
test
cld
mov
cmp
ret
js
movsl
cmp
jae
adc
into
mov
mov
adc
rcl
and
or
sub
xor
jno
stc
sbb
and
mov
pop
pusha
push
push
add
add
xchg
sbb
imul
popf
stos
dec
test
add
mov
adc
and
es
adc
mov
mov
or
aad
inc
push
rolb
jno
and
mov
push
outsb
clc
adc
add
cwtl
nop
xchg
xor
pop
wbinvd
pop
lock
ja
out
jnp
cmp
popf
int3
push
sbb
test
neg
cmpsb
decl
leave
out
int3
push
pop
dec
xor
cmpb
or
pop
jg
dec
sbb
inc
xor
push
scas
jp
jbe
ja
inc
arpl
sub
push
jnp
add
loopne
stos
int3
orl
stos
unpcklps
cmp
mov
call
and
or
or
jl
pop
aam
mov
add
call
aas
ljmp
push
or
fcomps
jne
dec
lock
adc
stos
or
or
ret
sbb
movsl
pop
xor
mov
push
out
push
dec
movsb
ret
es
and
outsb
pop
push
mov
je
inc
mov
scas
clc
iret
or
addb
dec
pop
inc
cmpb
jae
dec
cmpsl
or
out
xor
inc
insb
das
xor
sbb
sbb
int3
fs
add
outsl
int
or
bound
cmp
cmp
sub
or
sub
mov
cmp
nop
xchg
jg
hlt
jns
jl
xor
sub
sti
aas
push
xor
pop
push
fisttpl
nop
or
jbe
inc
push
cltd
xchg
outsb
add
or
in
or
sahf
pop
popl
adc
push
into
hlt
add
jnp
pushf
mov
or
outsb
test
or
sbb
mov
sub
repz
mov
int3
pop
loopne
test
inc
lcall
cwtl
popa
mov
jb
jl
adc
mov
pop
add
rcll
fstpt
test
int
push
dec
enter
mov
hlt
insb
mov
ljmp
loopne
jle
mov
testb
out
stos
and
inc
sbb
add
or
adc
lds
mov
push
sub
mov
dec
xchg
int3
and
pop
std
lcall
mov
faddl
push
sti
jle
and
adc
mov
pop
lret
inc
adc
xor
das
sub
dec
loop
out
mov
outsb
push
cmp
aas
scas
orb
add
popa
dec
mov
jge
mov
adc
mov
mov
in
add
xor
or
cld
xchg
ja
subb
cmpsl
aas
in
mov
cld
daa
addb
sbb
push
add
stos
pushl
dec
inc
add
xchg
cmp
cwtl
shll
jp
dec
jl
or
stos
inc
add
mov
xchg
nop
rcrl
lock
lock
int
mov
rcll
lea
sbb
or
bound
les
lock
xchg
test
incb
sbb
mov
cltd
scas
add
mov
dec
adc
add
xchg
out
pop
jecxz
sub
call
mov
mov
sub
mov
pop
push
push
and
push
dec
xor
call
loopne
pop
ja
xor
icebp
and
fwait
mov
nop
xor
adcb
inc
test
push
jb
adc
enter
or
popf
rolb
sub
testl
mov
loope
mov
jmp
push
daa
popa
cwtl
jo
adcl
and
sbb
stc
icebp
mov
or
mov
nop
adc
outsl
adc
shrb
pop
xchg
arpl
fmuls
lods
push
jmp
jl
adc
dec
pop
inc
sbb
or
push
test
movsb
mov
dec
inc
std
int3
pop
fistl
add
leave
push
bound
repz
dec
sub
sub
mov
xor
pusha
add
and
lock
pusha
mov
add
fstpl
pop
sbb
dec
jb
divb
push
adc
lock
fadds
push
leave
sahf
pop
pop
dec
add
and
hlt
add
xor
je
scas
inc
mov
imul
pop
add
xor
xor
addb
xor
movsb
xchg
pop
add
lock
cld
or
inc
test
es
mov
add
call
add
popa
pop
sbb
xlat
dec
popa
pop
xchg
push
hlt
nop
xchg
je
shlb
bound
sub
sbb
and
mov
add
lret
xor
insb
dec
jae
jecxz
repnz
or
mov
mov
popf
add
inc
lret
add
pop
fwait
outsb
insl
es
int3
push
mov
mov
inc
add
xchg
mov
and
jno
subb
cmp
loopne
in
dec
sbb
dec
in
dec
add
insb
mov
or
outsl
cwtl
jnp
jp
test
jnp
add
lods
lahf
sub
add
aad
hlt
or
dec
sbb
test
jns
sbb
imul
stos
popa
or
pop
or
data16
dec
loopne
xchg
inc
xor
jnp
sbb
push
push
dec
bound
test
jns
mov
and
dec
dec
xchg
xor
call
add
mov
loop
add
jl
repnz
mov
fadds
mov
pop
sbb
mov
incl
mov
movsb
add
pushf
loope
sbb
pusha
add
iret
sbb
and
push
adc
aas
jmpw
jecxz
loopne
or
push
lret
xor
xchg
stc
jno
jno
mov
inc
pop
jb
icebp
call
sbb
inc
mov
push
insb
mov
xchg
jl
xor
xchg
pusha
jmp
mov
push
in
xor
adc
or
mov
sub
add
out
mov
ljmp
pop
lea
jg
psraw
call
imul
jle
fistpll
xchg
push
add
movzbl
repnz
adc
scas
js
inc
test
or
add
and
fimuls
cmc
xor
add
mov
add
daa
ficoms
test
and
adc
enter
and
cmp
sub
pusha
adc
push
lods
dec
fadd
imul
and
xchg
lock
sbb
jmp
cld
mov
andb
sbb
insl
in
sbb
pop
jg
sbb
lds
cmp
and
movaps
push
or
adc
xor
jns
xchg
pop
xor
int3
lock
push
aaa
pop
or
subb
mov
push
test
rcrl
ds
inc
push
je
add
icebp
xor
cmp
push
gs
aam
dec
jno
inc
sub
inc
popf
sub
add
dec
xchg
lret
loop
add
xlat
fwait
add
enter
mov
add
mov
adc
dec
imul
lahf
mov
or
push
repnz
daa
orb
mov
sbb
mov
cmp
lret
clc
add
sarl
loop
xchg
dec
cmp
lds
or
popf
jecxz
fcompl
push
jp
dec
cmp
test
cltd
sub
add
pop
adc
mov
add
push
hlt
sbb
add
into
cltd
adc
mov
dec
test
mov
pushf
sub
shrd
loopne
fimuls
loope
lcall
mov
adcb
xchg
add
pusha
xor
popl
push
stc
lock
jle
adc
dec
jnp
test
mov
fldt
push
sub
enter
and
jg
jle
mov
addl
xor
rcrl
push
xor
adc
adc
out
add
mov
cwtl
lods
sub
or
xchg
sbb
mov
ficompl
aaa
add
in
or
add
aam
lret
push
rclb
sahf
cltd
add
enter
adc
ret
daa
sub
in
add
push
out
or
jg
mov
clc
cld
dec
mov
fld1
adc
ds
lret
lds
pop
rolb
fsubr
out
mov
mov
cmpsl
popa
gs
add
pop
or
in
inc
mov
and
xor
pop
add
mov
mov
testb
hlt
and
and
ja
movl
jo
fisubrs
pop
sbb
add
or
bound
mov
and
loopne
out
loopne
push
add
out
in
stc
jp
movsl
ja
mov
xchg
mov
out
loop
push
sbb
and
lods
xor
inc
rclb
add
mov
bound
push
add
mov
and
push
lds
out
or
iret
rorb
pusha
and
sbb
mov
ret
xchg
adcb
xchg
add
lahf
jg
pop
ret
sub
and
xor
or
sub
xlat
outsb
cmpb
loopne
js
inc
sbb
cld
aad
jns
mov
leave
push
popa
rol
dec
fiadds
add
mov
test
sub
add
pop
mov
push
adc
sbb
sub
into
adc
aaa
inc
data16
sbb
jne
sti
jp
lock
out
jle
add
dec
add
inc
cli
sahf
or
ret
sbb
cwtl
fcmovbe
aad
add
mov
and
push
cmp
gs
cmp
pusha
orl
push
push
pop
pop
adc
cmp
sahf
sarb
jae
xchg
loopne
or
mov
xor
and
std
cmp
cmc
ja
loop
dec
rolb
add
cmp
aam
dec
dec
in
add
jmp
sbb
pop
popf
lcall
mov
ffree
adc
cwtl
push
jnp
clc
push
and
add
aam
xor
or
sub
hlt
or
sbb
mov
push
adc
stos
adc
ja
adc
ljmp
jmp
dec
add
loopne
cmp
rcl
jecxz
mov
jmp
mov
and
or
popa
cli
push
shll
scas
push
jg
icebp
data16
xor
xor
fiadds
and
xor
mov
add
gs
cmpsb
pusha
sub
inc
or
flds
xlat
add
pop
lods
xor
add
fmuls
out
arpl
dec
insb
jbe
stc
shr
or
ret
add
inc
test
mov
sbb
adc
push
add
xchg
mov
lret
loope
aam
sub
mov
pusha
dec
rclb
or
or
or
idivl
aam
add
adc
add
dec
sbb
or
or
xor
mov
mov
pop
mov
cmpsb
test
inc
mov
add
inc
mov
stos
jmp
out
arpl
repnz
xlat
xor
push
xor
and
arpl
inc
and
sbb
xchg
popf
pop
out
ss
out
roll
dec
or
sbb
xor
int3
mov
mov
sbb
mov
and
add
in
in
add
or
mov
arpl
and
xor
jbe
add
push
cwtl
xchg
rorb
test
fsubs
pushw
hlt
add
xchg
mov
jle
and
inc
iret
nop
and
mov
adc
jge
loope
and
dec
xor
add
push
ret
add
in
push
mov
pop
jb
icebp
mov
fdivrp
cmc
shlb
addl
xchg
and
pop
and
or
fwait
and
sti
int3
loope
add
fisttps
mov
sub
xlat
jle
push
xor
sub
xchg
pop
repz
outsl
push
and
and
and
adc
clc
orb
cmp
sbb
lcall
mov
ljmp
xor
pusha
fs
jmp
dec
push
push
or
add
fstl
into
cwtl
or
or
fsubl
add
addl
in
or
adc
push
clc
test
add
pop
jb
cmpsl
push
add
inc
negb
dec
dec
das
sub
cmp
lods
add
sbb
aaa
nop
inc
jge
jae
xchg
mov
in
mov
inc
pop
cli
add
xchg
add
nop
ficomps
sbb
js
push
push
push
adcl
mov
js
fcmovu
add
and
xchg
xchg
shlb
dec
sbb
add
jmp
dec
out
and
add
popa
jmp
or
mov
mov
mulps
arpl
lea
xor
mov
adc
dec
test
mov
cmp
stc
mov
jne
adc
data16
jb
mov
and
pop
mov
xor
fwait
push
gs
addr16
jno
lahf
in
pop
or
xchg
add
ret
or
jp
lahf
and
pop
shlb
mov
cwtl
outsb
adc
add
aas
jmp
icebp
cmp
jns
push
push
rorl
push
test
cs
jae
or
aaa
mov
xor
adc
xchg
xor
inc
cmp
mov
or
mov
je
insb
pusha
sahf
aaa
mov
fs
or
push
int3
out
cwtl
rclb
adc
add
cmp
dec
add
dec
jne
mov
popa
lock
pop
push
lahf
xor
mov
add
xchg
or
sub
ljmp
inc
js
testl
adc
cmp
mov
add
mov
or
lea
fistpll
pop
cmpl
ljmp
adc
je
lds
imul
jl
and
fcompl
les
and
out
test
jmp
xchg
rorb
mov
das
enter
push
dec
les
cmp
dec
mov
pusha
xlat
adc
inc
xchg
popa
mov
aas
nop
pop
addb
jnp
inc
push
pop
xchg
daa
addb
inc
push
nop
sbb
mov
sarb
scas
aad
movl
imul
adc
pop
cli
add
and
rorl
ja
push
cmp
cmp
cli
xor
std
cmpsb
nop
and
push
sub
les
push
add
mov
add
jno
mov
xlat
push
ss
mov
shl
fcoml
jno
mov
lret
pop
std
aam
cmp
jbe
push
popf
sbbl
out
sbb
in
outsb
lock
popa
xorb
xor
cmpl
mov
fnstcw
mov
adc
jo
or
and
xor
test
dec
or
les
cmp
aas
dec
dec
or
dec
jbe
cmp
incb
addl
or
xor
sarl
repnz
mov
dec
pop
inc
out
addl
in
add
adc
push
dec
sbb
fs
inc
add
or
mov
inc
and
dec
sbb
adc
xor
arpl
xor
fimull
dec
test
jne
add
pop
cs
out
mov
sbb
arpl
popf
add
aad
push
push
ja
sub
adc
dec
pushf
jns
sti
rclb
sbb
pop
cmp
scas
mov
inc
stos
rclb
aad
adc
push
lods
fcoms
cmpsb
inc
add
push
xor
xor
or
sbb
mov
jg
xor
add
xor
faddl
add
sub
outsb
or
aam
cmp
adc
insb
js
mov
inc
imul
xor
fnstsw
add
repnz
lock
orb
aam
xchg
jo
adc
in
je
adc
ja
jnp
add
and
rcrb
inc
xor
lahf
shrl
int3
xor
sbb
push
test
cmp
add
or
inc
dec
jge
repnz
adc
scas
aam
andb
in
out
outsl
aas
add
cwtl
jmp
bound
hlt
lret
test
shrl
sub
mov
aam
add
mov
xor
add
mov
sub
and
in
fs
aad
pop
pop
sub
fisubrl
sbb
rcll
js
add
sub
xor
xor
ja
mov
sub
push
arpl
pop
fwait
adc
sbb
pop
lds
adc
sub
scas
xor
sbb
orl
and
add
cmp
arpl
add
push
cmpb
dec
lcall
mov
cltd
mov
mov
mov
cmp
add
jo
test
mov
js
aam
xor
imul
push
push
add
push
pop
push
adc
dec
sbb
and
add
mov
fdiv
dec
sahf
push
inc
sarl
movsl
add
js
inc
fimuls
mov
hlt
mov
aad
xor
jne
loop
hlt
mov
shr
nop
adc
mov
aad
sbb
push
mov
xor
in
cmp
insl
mov
sub
add
rolb
test
dec
repz
fcoms
into
cltd
out
arpl
mov
sbbb
push
outsb
and
cmp
dec
add
mov
sbb
sub
mov
push
fidivs
add
jno
dec
jne
lcall
aam
add
aad
cmp
pusha
mov
out
lcall
and
push
mov
mov
sbb
dec
aad
mov
pop
and
nop
sbb
pop
ja
dec
add
arpl
sub
stos
mov
cmp
ss
adc
mov
cld
cwtl
pop
and
pop
mov
stos
lea
cwtl
pop
push
enter
add
scas
jbe
dec
and
fs
in
in
sahf
add
xor
aad
lds
jl
enter
inc
dec
jae
cmp
in
aad
add
loope
push
add
and
sbb
adc
enter
in
and
daa
and
add
xchg
sub
inc
pusha
std
xor
xchg
inc
adc
and
testl
and
xor
mov
mov
push
rolb
lret
leave
cwtl
cltd
push
push
insb
pop
sub
inc
inc
inc
sbb
add
mov
fistpll
imul
sbb
add
sahf
nop
add
ret
jo
adc
and
sbb
cmp
outsb
xor
mov
in
add
or
cmp
mov
dec
roll
inc
lock
push
cltd
xorps
leave
inc
mov
or
sbb
or
mull
cmp
int3
test
jge
aam
xchg
adc
xchg
xchg
mov
cwtl
call
pop
sub
call
je
scas
push
cwtl
addb
shll
push
loope
inc
add
pop
popf
aam
pop
xor
sahf
jl
push
and
sbb
dec
push
nop
test
out
andb
xchg
cmp
and
mov
shll
push
sti
and
mov
ss
inc
fldl
mov
add
mov
rolb
dec
insl
jne
pushf
push
mov
pop
cltd
test
xor
cld
shrl
or
sbb
mov
scas
xor
push
rcl
inc
andb
adc
and
add
jo
test
pusha
mov
and
aam
es
aad
pop
lahf
cmp
cli
pop
sub
mov
outsb
sahf
mov
loopne
lahf
push
mov
jno
add
or
test
pop
push
das
jno
mov
ja
adc
ds
jns
mov
mov
sub
xchg
inc
ret
lods
push
sub
or
adc
mov
adc
inc
add
sti
or
pop
pop
fimull
in
cmpsb
addb
stos
xchg
cmp
add
dec
mov
add
je
arpl
int3
cwtl
hlt
adc
pop
mov
std
cwtl
add
cld
or
mov
testb
add
sub
or
pusha
cmpxchg8b
lret
cmc
mov
fcomp
pop
xor
fcompl
xor
xchg
addr16
add
bound
jge
ret
sbb
sbb
inc
adc
mov
ficomps
add
xlat
int3
lcall
in
loope
cld
fcmovnu
adc
out
cmpl
lret
loop
inc
pusha
dec
mov
xchg
push
in
shlb
int3
mov
adc
mov
lret
jo
and
xor
addl
aam
test
jo
or
pop
neg
aad
inc
insb
or
push
enter
xchg
pop
fbld
sbb
dec
int
insb
insb
out
push
add
push
push
cmpsb
les
add
mov
sbbl
aas
xchg
mov
fcomps
mov
cmp
test
pop
sbbb
and
in
jp
add
sar
mov
and
xchg
mov
jb
daa
sbb
xor
fs
pop
lret
je
sahf
xchg
push
jne
add
mov
mov
repnz
mov
js
add
movsb
pushf
gs
fstpt
stos
mov
jo
add
or
arpl
in
or
outsl
inc
push
jmp
sub
fadds
out
cwtl
cwtl
rolb
add
mov
jp
pop
inc
rol
or
push
movsb
add
pop
and
sbb
jge
rol
out
sbb
adc
lahf
insl
adc
push
xorb
js
add
sti
and
lret
jl
add
lea
adc
int3
stos
cmp
addb
popf
jge
jmp
push
lock
les
cld
add
push
xor
mov
jne
sbb
enter
adc
inc
mov
add
leave
sbb
ficompl
out
movsb
mov
ljmp
dec
in
xchg
pop
jns
mov
aad
fmull
orb
dec
lahf
sbb
popf
es
inc
aaa
pop
cwtl
js
int3
inc
sbb
clc
jg
push
xor
add
xchg
cmpb
jne
div
je
add
lds
popf
sbb
incb
dec
out
cmp
jne
add
aad
loopne
cmc
inc
add
add
and
jl
xchg
inc
arpl
push
add
mov
js
stos
sub
repz
std
xor
lds
sahf
xchg
add
cmp
and
xchg
cmp
add
enter
dec
outsl
fiadds
imul
adc
jecxz
jmp
insb
imul
adc
leave
mov
sbb
push
jno
ljmp
push
lcall
aad
rol
cmp
sub
mov
test
xchg
jmp
xor
sarb
and
ljmp
add
cmp
cmp
adc
and
or
aam
add
inc
inc
dec
enter
add
fldpi
lret
cmpb
cld
xchg
int3
aaa
or
add
daa
or
shlb
xor
insb
cmp
sbb
fisttpl
inc
setno
jnp
add
xor
sbb
aaa
push
cmp
or
in
dec
cmp
xchg
adc
cmpsb
mov
loop
add
test
jns
ja
pusha
cmp
out
testb
pushf
pop
lds
fildl
aam
push
mov
scas
push
xlat
sti
in
aas
add
lahf
pop
xchg
add
gs
mov
or
iret
incb
push
inc
push
test
sub
loopne
mov
les
lods
jno
mov
pop
or
xor
add
xor
stos
add
enter
add
fsubs
mov
inc
xor
sbb
ss
nop
pop
mov
mov
jae
imul
stos
jecxz
dec
push
lods
roll
inc
adc
add
outsb
sub
lea
add
call
mov
push
mov
mov
test
pop
subb
inc
jno
jns
push
add
mov
add
pop
repnz
xchg
cld
sub
add
jbe
dec
jle
cmpb
xchg
std
cli
mov
and
ds
add
pop
in
aaa
gs
fs
imul
add
xchg
out
mov
dec
lret
jle
xchg
add
push
xlat
fidivs
push
ds
mov
leave
add
jl
jo
fsubrl
nopl
jb
loopne
jns
xchg
cmp
add
mov
sbb
ret
fwait
pop
mov
fiadds
into
cmp
icebp
add
daa
dec
jne
repz
add
cmp
cmp
push
or
mov
rclb
xor
rolb
stos
push
addr16
pop
shll
adc
and
and
ja
add
in
add
sub
add
pop
push
enter
xor
adc
aad
mov
ja
shlb
add
push
cmpsl
cmp
or
loope
shrb
sbb
push
fiadds
pop
pop
filds
pop
pop
fldcw
or
mov
and
in
and
and
aas
jmp
add
inc
andl
ret
pop
cli
aaa
xor
inc
rorl
pop
adc
jge
cli
dec
mov
adc
xchg
adc
add
movsl
or
mov
mov
lret
cltd
bound
cltd
or
adc
add
push
xchg
sbb
push
cmpsl
add
repnz
jcxz
sub
sbb
cmp
xchg
fcompl
sbb
out
out
lret
jmp
mov
mov
and
jge
mov
out
out
cltd
adcb
sbb
int
dec
push
sbb
dec
push
xchg
es
add
je
xor
add
sub
dec
inc
sarb
jg
inc
test
filds
adc
ror
dec
xchg
orb
xchg
push
int3
jb
add
ja
ss
mov
js
mov
and
adc
and
xor
sub
mov
dec
inc
in
jno
adc
sbb
push
add
rol
add
ficoms
dec
mov
xchg
sbb
add
out
or
xchg
adc
lret
add
mov
add
push
in
inc
jl
stos
mov
mov
ss
cmp
jl
or
add
ja
xchg
and
add
int
inc
mov
subb
in
das
mov
inc
mov
pop
xlat
push
dec
mov
sbb
lcall
pop
add
test
dec
icebp
inc
add
jge
hlt
xor
fnstsw
jecxz
cmp
mov
inc
out
test
mov
mov
xchg
out
mov
push
jae
push
in
pop
loope
cmp
sarb
out
and
dec
mov
xchg
push
fadds
or
popa
cmp
movsb
shlb
add
and
dec
add
loopne
rcrb
lods
loope
mov
int3
bound
adc
fsub
clc
sarl
or
add
push
aas
call
push
stos
cwtl
and
add
or
mov
and
mov
ja
push
push
adc
mov
daa
pop
out
jo
and
shl
add
xchg
or
shlb
mov
adc
pop
xor
fwait
testb
enter
loop
std
add
sbb
push
ss
insb
mov
xchg
dec
pop
add
add
cltd
lock
xabort
and
pop
jecxz
out
jnp
int3
inc
jp
vcomisd
ljmp
adc
sub
mov
inc
add
pop
incl
fwait
js
fsts
adc
jmp
addl
cmp
xchg
push
ljmp
or
xor
sbb
movsb
divb
cmc
fisubrs
sub
add
mov
jge
sbb
cwtl
xor
pop
out
pop
sbb
sbb
cwtl
test
fisubs
pop
sub
or
jg
mov
and
jmp
and
or
dec
jno
add
sbb
xchg
xchg
mov
pushf
in
push
or
subb
add
jp
jecxz
cmp
adc
in
add
fsubs
loop
andl
adc
cmpsb
xchg
das
adcb
mov
scas
lahf
jecxz
sbb
test
aad
mov
cmp
icebp
mov
movsl
in
sbb
addb
cmove
pusha
push
jb
sbb
pop
inc
fidivrs
push
push
mov
jae
lahf
add
sti
push
xchg
ds
add
xor
mov
repnz
fisubs
sbb
add
mov
xchg
add
jne
out
inc
add
add
sbb
movswl
jb
lods
mov
add
mov
mov
andl
jnp
inc
insb
push
mov
out
and
add
std
jo
movsl
pop
cs
push
push
xchg
jg,pt
arpl
loop
add
jp
inc
inc
mov
add
pop
and
lahf
lock
xor
aam
jg
ljmp
xchg
pusha
inc
dec
push
pminsw
sbb
int3
xor
movsb
and
shr
jo
add
cmp
mov
jle
mov
add
add
in
cmp
or
xor
jb
and
js
add
add
rcll
inc
add
pop
bound
adc
lods
pavgb
sub
popf
cmp
xchg
add
jne
out
repz
add
aad
lock
push
sbb
xchg
cmp
add
adc
insl
push
mov
or
inc
push
dec
iret
ja
xchg
aaa
push
xor
xchg
and
add
lcall
fistl
or
inc
js
fadd
test
jmp
int3
xchg
inc
cld
xchg
add
cmp
shld
xor
inc
pop
pushf
mov
add
sarl
daa
adc
add
adcl
enter
push
mov
cmpsb
adc
mov
sbbb
imul
ss
push
lea
enter
inc
movb
jge
mov
test
ret
ljmp
xchg
pop
mov
sbb
sti
bound
addr16
xor
or
xor
push
fwait
mov
jne
mov
mov
decb
addb
pop
shlb
das
add
inc
mov
imul
add
lds
pop
hlt
nop
leave
out
pop
lret
sbb
inc
pop
dec
or
aaa
xor
add
data16
push
or
sahf
outsb
stos
xor
fsubr
shlb
add
pop
inc
pop
mov
bound
idivl
lcall
lods
add
stos
xchg
imulb
les
mov
pop
add
es
movl
pop
xchg
jmp
mov
mov
lahf
popa
add
inc
leave
mov
stos
xchg
xor
aad
adc
add
test
das
cli
mov
in
mov
lock
cmc
sti
xchg
stos
call
mov
push
jno
fiadds
mov
sbb
add
insb
pop
in
push
nop
add
hlt
sti
jg
pop
cmp
jo
mov
add
scas
sahf
mov
icebp
add
jecxz
mov
add
mov
jnp
scas
loop
fsubr
push
repnz
outsl
jbe
or
lods
add
sarb
push
add
out
out
cwtl
xchg
xor
xor
test
pop
stc
rorl
gs
pop
shl
pop
or
push
sbb
repnz
mov
jl
inc
add
xlat
jg
or
popa
lret
stos
lcall
adc
and
jle
add
xchg
add
cmp
jl
jnp
jne
mov
and
add
sub
xchg
call
test
data16
add
xchg
das
hlt
test
sbb
test
nop
push
add
call
lds
iret
mov
xor
add
popl
nop
pop
cmp
mov
and
cmc
inc
outsb
faddl
bound
push
fistps
inc
xchg
popf
cwtl
cmp
dec
or
cmp
adc
ljmp
enter
es
pop
stos
imul
add
jb
aad
add
cmp
push
lods
in
test
add
mov
push
in
xchg
pop
lret
cli
mov
mov
jl
and
lds
xchg
sbb
aaa
xor
clc
cmp
or
jbe
stos
js
add
rcr
or
leave
insb
sub
jno
add
repz
in
add
mov
imul
loop
addr16
cmp
mov
adc
roll
add
jbe
stc
push
pop
ret
js
hlt
push
addb
cmpsl
pop
mov
mov
adc
andl
mov
sahf
dec
inc
jno
and
call
mov
out
testl
mov
js
cmp
imul
sub
pop
jb
mov
lods
lahf
push
clc
pop
mov
mov
add
mov
mov
arpl
pusha
add
push
or
cmc
mov
enter
outsl
sbb
rcrb
mov
inc
and
or
lret
inc
stc
add
mov
pop
dec
in
adc
xor
insb
clc
addw
xchg
and
adc
push
push
add
jg
out
add
xor
jle
pop
punpcklwd
and
mov
daa
xor
push
pop
popf
fsub
ds
or
xor
mov
add
cmc
xchg
push
repz
pop
sarb
push
gs
add
in
mov
jns
xchg
adc
shll
push
or
add
aad
int3
pop
sub
popf
ret
jp
dec
push
inc
imul
jnp
push
sbbb
inc
addl
adc
push
mov
mov
divl
loopne
cmovnp
jl
div
add
lahf
cwtl
and
sub
aas
test
int
push
mov
or
cmp
jnp
add
push
jp
pop
jmp
add
test
sbb
push
jno
jae
add
nop
stos
or
leave
xchg
push
pop
addl
jg
pusha
stos
push
pop
push
add
and
xchg
test
inc
or
stos
inc
xchg
dec
mov
addb
sbb
cwtl
or
inc
xorb
rcll
lea
stc
jge,pn
mov
sbb
xor
dec
xchg
std
mov
push
cli
add
enter
call
popa
add
sbb
xchg
rolb
mov
push
xor
cmp
adc
aam
pop
cmp
xchg
fsubr
fnstenv
xor
add
les
mov
mov
clc
sub
cltd
aas
sub
orb
xor
add
lea
jb
xchg
mov
nop
or
lds
mov
adc
mov
test
verr
outsl
leave
sbb
out
in
cmp
cmp
cmp
pusha
adc
or
popf
mov
mov
call
sub
push
int3
xchg
out
leave
or
and
aas
pop
jg
cmp
je
out
push
lods
pusha
cli
clc
and
pushf
mov
xchg
jns
jb
pop
adc
inc
xor
jmp
or
enter
add
jp
popf
out
popa
inc
insb
mov
fdivrs
xor
cli
fstps
jg
in
pop
dec
add
add
add
loop
lahf
jge
add
dec
pop
in
xchg
mov
add
loop
dec
add
dec
push
mull
jnp
sbb
xor
pusha
pusha
xlat
negb
js
fucom
gs
dec
testl
shl
xchg
add
mov
nop
xor
insl
add
dec
rcll
pop
fldenv
jge
hlt
mov
shrb
add
loope
pusha
test
sub
insl
xchg
pop
test
dec
cmp
js
mov
and
cmp
push
inc
mov
shrb
mov
or
adc
data16
sbb
inc
ljmp
add
mov
add
add
dec
inc
shlb
icebp
outsl
ja
add
pop
fucomi
ret
int3
shll
shl
jns
add
jl
mov
mov
rcrb
mov
outsl
dec
leave
pop
shr
xor
mov
jl
stos
addb
mov
ret
aaa
xchg
lock
insl
shlb
cwtl
out
or
push
lahf
fsubrl
cmp
jecxz
add
jge
loop
dec
jp
xor
addr16
mov
jg
sub
sbb
adc
mov
add
lock
sub
or
push
xor
leave
dec
push
scas
test
stc
popa
add
inc
sbb
jns
push
adc
int3
jge
jnp
lahf
loope
push
mov
fisubs
ss
imull
je
insl
fimull
xor
or
test
hlt
add
pop
push
psubb
inc
pop
pop
fwait
arpl
rorl
adc
hlt
mov
jno
xor
sbb
shlb
add
mov
cmp
iret
out
inc
add
aaa
inc
cmc
xchg
mov
sti
bswap
mov
jle
jbe
lret
add
aaa
dec
xchg
mov
mov
push
rolb
mov
and
inc
sub
pop
add
xchg
or
xor
mov
xchg
stos
lock
push
xchg
call
sbb
dec
pop
and
add
pop
mov
pusha
ret
mov
jbe
or
cs
jecxz
inc
out
lcall
repz
and
call
xlat
sbb
fisubs
adc
add
jl
out
add
pop
scas
into
je
xor
lea
testb
dec
popa
hlt
xor
ljmp
gs
xor
and
xor
add
xchg
loopne
lock
add
jmp
je
xor
fstenv
dec
push
loop
inc
jp
pop
mov
in
cmpsb
divl
and
xchg
mov
stos
cmpl
jmp
lods
and
push
mov
out
sbb
add
cmp
inc
jmp
out
xor
xor
mov
push
clc
jbe
sub
test
fadd
addr16
das
rorb
and
cs
xchg
lahf
out
cmpsb
aas
loopne
sub
lret
jmp
pop
cwtl
sub
cmc
inc
mov
popa
add
cmp
bnd
cmp
test
mov
pop
mov
and
pop
inc
adc
insl
mov
aam
cmp
jno
inc
movups
adc
cmpsl
cmp
sub
adc
leave
mov
stc
mov
jo
call
cltd
les
add
sub
in
sbb
cld
mov
cmp
inc
xchg
incb
imul
mov
pop
mov
pop
cs
xchg
push
inc
mov
jne
sub
xlat
addb
mov
sbb
and
rcrb
xchg
push
lods
add
into
add
mov
inc
roll
inc
sub
rolb
or
inc
pusha
je
cmp
imulb
sti
ss
cmovns
in
rclb
add
xchg
adc
mov
pop
stc
pop
cmp
into
out
jne
mov
outsb
or
add
scas
test
mov
adc
loope
pop
lods
pop
test
xchg
add
sbb
cmp
pop
add
sub
cmp
xchg
jp
inc
mov
bound
aad
lcall
out
je
cmp
mov
inc
and
movsb
xchg
aam
inc
hlt
mov
fmuls
lcall
adc
xchg
ds
adc
dec
sbb
mov
sub
adc
pusha
xor
push
cmp
and
push
xor
add
subl
push
lods
jl,pt
xchg
sti
add
clc
pushf
xchg
cmp
adc
mov
std
addb
mov
add
nop
fcmovu
cmp
arpl
mov
insl
pop
xchg
sbb
mov
push
and
aad
jb
add
mov
cmp
dec
jmp
push
ret
subl
jo
dec
push
movsb
add
imul
popa
shll
dec
movsb
lock
jns
push
lahf
loop
test
orb
imul
push
inc
mov
ret
jecxz
out
add
test
fistl
lods
jnp
xchg
adc
jns
add
push
sub
mov
xlat
rcrb
add
or
add
xchg
jl
add
jb
sub
les
inc
add
jnp
adc
mov
add
pop
in
mov
adc
inc
je
add
ja
sbb
in
adc
popa
addr16
pop
add
icebp
fwait
sbb
subb
clc
xor
es
mov
add
or
out
lret
mov
dec
mulb
adc
cwtl
stos
cs
add
cwtl
sbb
dec
repnz
jb
cld
mov
pop
in
jae,pn
jo
testb
jl
and
ja
adc
or
loope
push
sub
cmp
outsl
jbe
test
rorb
je
inc
mov
add
jae
jg
or
loope
test
filds
packuswb
and
clc
fisubrl
or
cmpsl
cmp
xchg
inc
out
cmp
sbb
push
push
pop
adc
jle
dec
add
cmc
add
dec
mov
and
cmp
sbb
xor
js
add
adc
movl
out
loopne
scas
sub
bound
loop
add
shl
jno,pt
pusha
es
cmp
xchg
popf
mov
xor
add
xor
or
mov
sub
rol
imul
fiaddl
arpl
xchg
inc
jg
cwtl
pop
das
testb
lret
xor
dec
push
shll
insb
test
int
cld
and
fisubrs
sbb
add
pop
pusha
and
sahf
add
lret
andb
add
xchg
aaa
int
sbb
jbe
adc
dec
push
and
inc
in
out
mov
mov
mov
or
add
ss
aas
mov
mov
leave
scas
adc
enter
pop
stos
pop
into
adc
lcall
fisttpl
sub
outsb
and
add
inc
xchg
mov
add
mov
add
cltd
jns
int
out
pop
mov
sub
inc
mov
movhps
call
iret
gs
loopne
jge
xchg
mov
fnstsw
adc
and
adc
add
lock
jae
mov
mov
mov
xor
call
lahf
add
jmp
pop
lock
add
mov
push
in
and
add
aas
inc
ja
mov
jnp
jae
sbb
push
shll
lock
push
ss
add
jl
pusha
leave
mov
std
notl
cmp
lcall
or
dec
add
push
cmp
int
lcall
mov
add
jmp
fnsave
xchg
fs
push
cmp
repnz
add
sbb
daa
mov
cmp
add
inc
jns
sbb
ret
fistl
pop
push
lret
add
sbbl
or
data16
jg
add
jne
jb
negl
movsl
pusha
fstl
mov
inc
mov
and
ljmp
push
push
jl
call
mov
push
scas
cs
push
sbb
mov
ss
mov
bound
and
add
in
add
lea
pop
stc
in
shlb
insl
pop
sbb
mov
test
lret
icebp
mov
add
ss
jns
pop
stc
test
add
xor
pusha
mov
jbe
jo
ljmp
shld
rol
push
inc
add
jle
les
mov
call
add
aad
in
fcomps
mov
xchg
push
repz
lods
and
jmp
les
pop
xchg
aad
ret
mov
inc
add
pop
out
inc
or
aas
stc
lret
sbb
cli
les
bound
jbe
ja
push
or
pop
clc
repz
cmc
and
iret
call
mov
push
jecxz
out
xchg
repz
into
xchg
mov
and
cmp
or
pop
mov
lods
dec
cmp
add
rcpps
dec
pop
ret
pop
mov
inc
xor
ljmp
mov
jbe
push
or
rolb
call
mov
xchg
es
cwtl
addr16
pop
ja
fstps
cmpsl
pop
xor
dec
sti
cmp
xor
push
rcl
pop
jno
vpmaxsw
ss
cmpb
xchg
fcmovnbe
add
imul
adc
push
sbb
add
xchg
rorl
mov
pop
sub
sarb
shll
clc
addl
fistps
test
xor
pusha
dec
add
into
lods
and
jg
and
mov
clc
mov
into
cmp
inc
xor
enter
jns
xchg
mov
clc
sbb
sarb
out
mov
or
inc
popa
lcall
adc
outsl
push
and
loop
addb
pop
xlat
push
int
mov
pop
mov
in
pop
mov
loope
dec
es
cmp
xchg
subb
fistps
divb
cmpsl
shlb
jo
jl
cmpsb
or
nop
js
hlt
add
mov
movsb
dec
jmp
bnd
nop
xor
dec
fdivrs
add
icebp
adc
out
add
sahf
movsl
mov
dec
popa
data16
push
push
xor
inc
je
ja
add
movsb
out
mov
mov
add
stos
mov
mov
and
mov
push
cmc
pop
scas
test
pop
add
mov
jl
add
cwtl
mov
add
jle
xchg
mov
insb
add
sbb
cli
adc
addb
shrb
pop
hlt
ja
push
push
cwtl
dec
lea
nop
insl
add
inc
jle
gs
fnstcw
push
enter
add
les
or
cmp
pop
adc
mov
inc
insb
mov
dec
fwait
jecxz
lahf
mov
push
jno
rcrl
lcall
movsb
and
pop
cs
pop
inc
cmp
add
gs
mov
mov
and
test
repnz
lea
xchg
jnp
mov
ffreep
fs
and
dec
add
xchg
ds
add
sub
xchg
inc
mov
loop
jb
bound
xor
add
shl
into
mov
pop
popa
mov
add
mov
dec
enter
cmp
adc
iret
xor
sbb
xchg
je
push
filds
add
add
jecxz
in
test
add
nop
pop
pop
mov
xor
loop
sub
xor
in
jecxz
push
mov
mov
mov
mov
nop
loopne
or
fwait
push
push
std
out
push
push
mov
imul
ss
insb
add
or
addr16
ljmp
adc
andb
inc
jae
jno
cmp
nop
dec
cmc
fcoml
and
mov
loope
cltd
jns
jnp
add
mov
push
push
xchg
pop
or
outsl
xchg
cmpb
add
and
fmul
and
add
pop
jg
fwait
test
sbb
add
jno
popl
call
add
decl
pop
jnp
adc
inc
rol
nop
loopne
add
stc
int3
xchg
or
enter
pop
add
lahf
xor
push
add
outsb
fistl
imul
dec
inc
out
jne
int
push
add
xchg
mov
aad
push
ror
xor
dec
lods
test
add
jne
mov
inc
and
loop
js
add
movsb
ss
out
add
scas
adc
lock
rorl
mull
mov
jnp
push
cs
enter
mov
adcl
sbb
cltd
fs
xor
sbb
sbb
ljmp
loopne
add
repnz
out
pusha
clc
ret
mov
jb
or
add
inc
add
scas
shlb
inc
push
mov
pop
popf
add
add
mov
clc
mov
mov
push
bnd
add
andb
and
mov
bound
clc
pop
xorb
test
and
mov
aad
mov
xchg
sbb
negl
mov
and
push
or
add
addb
mov
add
cmpsl
nop
jecxz
pop
pop
sarl
adcb
sbb
cmp
inc
into
xchg
mul
ja
pop
mov
dec
push
incb
fidivl
sbb
inc
adc
lcall
jno
adcb
loope
cmp
repnz
mov
inc
mov
mov
and
mov
std
loope
adc
jg
das
mov
xchg
loopne
mov
jmp
add
xor
add
push
and
jns
mov
push
xchg
stos
fnsave
aad
pop
dec
cmp
pop
mov
add
cmp
sbb
mov
mov
popa
cli
std
pop
andb
xor
add
inc
stos
icebp
aas
lds
mov
jmp
sbb
pop
and
push
jle
fmuls
inc
cmp
sarb
add
insb
cld
push
stos
add
repz
fsubs
pop
push
les
add
test
jp
fdiv
imul
cs
xchg
popf
add
sub
xor
nop
add
adc
or
sub
jl
lods
xor
add
movsl
add
mov
test
out
dec
add
ror
dec
add
scas
jmp
mov
insb
popl
lea
cltd
sahf
gs
lahf
cmp
sbb
mov
adc
adc
jae
out
add
add
push
add
and
shl
loope
add
cmp
xchg
and
in
shlb
dec
cmp
cld
add
sti
xor
shl
and
add
push
aad
fldl
ljmp
add
cmp
cmp
add
cmp
dec
add
in
into
or
cli
fstpt
es
add
pop
and
jp
mov
das
into
pop
rclb
cld
xchg
and
mov
sbb
dec
in
repnz
pop
mov
push
inc
jnp
sbb
mov
push
inc
or
sbb
add
in
and
add
or
pop
xchg
pop
loop
dec
cmp
inc
cwtl
ficompl
add
push
mov
pop
ds
jns
imul
xchg
pop
test
add
sub
sti
mov
addb
or
pop
xchg
mov
push
jns
pop
sub
add
out
pop
loope
inc
add
adc
jge
push
add
dec
sub
dec
invlpg
lret
mov
cltd
cld
add
add
gs
cmc
les
arpl
dec
add
adc
push
ds
pop
and
jge
jbe
rcrl
add
mov
add
out
movb
mov
cmp
ret
pop
aaa
push
cmp
sets
shrl
sub
xor
hlt
add
cmpsl
add
sbb
jbe
sub
xor
imul
adc
nop
jp
dec
dec
sbb
pop
pushf
add
mov
sahf
stos
and
sbb
add
loop
call
adc
pusha
jnp
int3
pushl
ret
push
daa
fwait
jecxz
imul
cmp
xor
jo
push
adc
adc
add
pop
rclb
repz
fistpll
fldt
or
inc
andl
inc
aam
cmp
or
sub
add
jo
stc
fmull
jmp
pop
push
out
adc
dec
pop
int3
paddsb
rolb
add
in
sbb
xorb
jbe
testl
cwtl
mov
adc
jmp
sbb
lock
and
dec
mov
add
xchg
jmp
dec
and
sti
stc
add
clc
sub
add
jle
outsl
add
push
xchg
and
xchg
outsb
add
addr16
adc
addr16
jecxz
adc
adc
fiaddl
add
add
xchg
xchg
out
into
stc
loopne
outsb
add
mov
fsubrp
jo
loope
xchg
and
mov
add
movsb
sub
add
cmp
mov
adcb
or
mov
add
loopne
add
cmp
sbb
pop
roll
sub
inc
adc
add
call
fisubl
add
in
dec
movsl
add
jno
call
add
dec
clc
addb
add
dec
pop
fisubrs
or
push
jmpw
push
jle
sbbb
out
add
sbb
addr16
orb
ljmp
push
loop
stos
outsb
or
nop
xlat
inc
pop
inc
jne
or
xor
adcl
out
mov
loope
popf
out
mov
cmp
subb
mov
leave
jp
push
nop
add
mov
daa
jecxz
add
sbb
arpl
in
sbb
cmp
dec
xchg
add
xor
jecxz
in
int
sahf
add
dec
scas
mov
push
mov
out
jne
sub
testb
sarb
sbb
pop
outsb
rcrb
sahf
pop
mov
gs
add
push
std
jb
inc
xor
int3
add
pop
sbb
icebp
insl
loopne
add
adc
mov
test
outsb
sbb
sub
add
mov
jle
push
mov
cmc
pop
sub
pop
add
jg
mov
jae
mov
out
rcl
lods
add
mov
fmuls
in
add
pop
ljmp
shll
mov
shrl
data16
cltd
add
or
sahf
dec
add
outsl
pusha
mov
add
imul
fneni(8087
pextrw
push
out
mov
cs
ror
mov
mov
add
adc
jmp
add
push
daa
add
mov
xlat
pushf
int3
aas
outsb
add
add
xchg
push
popa
cmp
loopne
inc
jmp
fwait
add
sbb
sbb
in
lea
jge,pt
push
push
sub
in
popf
das
dec
test
aad
inc
inc
cmp
push
orb
jl
pop
loope
inc
dec
cmp
dec
xchg
push
pop
jecxz
jno
addr16
jp
addl
lcall
push
dec
add
insl
adcl
ja
push
mov
in
popf
add
inc
add
pop
add
pop
dec
stc
cmpb
xchg
sbb
xor
pop
mov
mov
add
sbb
jp
add
dec
jmp
pop
outsb
xchg
and
fwait
xchg
and
les
clc
jl
ljmp
sub
add
imul
jne
je
xchg
add
sub
aam
mov
add
mov
loop
mov
xchg
and
inc
cli
add
cmp
or
fcoms
in
and
push
testl
in
loopne
xor
cli
inc
add
fistpl
and
jne
insl
sbb
add
add
or
aas
add
dec
mov
pushf
call
add
add
and
pop
mov
pop
pop
xor
cwtl
or
scas
push
leave
inc
shlb
out
cmp
addr16
andb
movsl
add
mov
dec
inc
roll
addr16
in
in
or
adc
add
jmp
adc
cmp
inc
dec
test
lret
mov
push
mov
popa
push
sub
add
pop
cltd
mov
jno
dec
mov
mov
add
mov
sahf
push
adcl
xchg
shlb
in
lahf
sarb
fadds
jae,pt
enter
inc
push
dec
or
jo
jl
test
jo
jge
and
jb
lahf
adc
loop
inc
aam
ja
push
shlb
cmpb
loopne
jnp
leave
cmp
or
or
sub
xorb
fwait
xchg
add
repnz
stc
dec
sbbb
pop
mov
add
adc
outsl
sahf
mov
pop
push
mov
dec
fstps
cwtl
fs
stos
dec
pop
xor
movsb
add
add
inc
out
nop
insl
daa
pusha
rcpps
into
push
push
aam
adc
cmp
mov
add
test
jne
jmp
pop
xor
in
push
insl
testl
sub
gs
jecxz
cwtl
sbb
jbe
fbstp
in
jo
bound
jg
out
lar
arpl
in
mov
sub
add
sbb
stos
pop
inc
sahf
cmp
mov
jns
mov
or
std
enter
hlt
jnp
mov
cmpsl
fdivl
mov
mov
jno
push
xor
jbe
rol
add
adc
fidivrs
fisubl
add
and
cli
hlt
jbe
add
sub
stos
and
pop
push
push
mov
adc
in
sbb
fs
ds
mov
xor
push
ja
arpl
jmp
stos
and
in
cld
adc
xor
mov
ret
loopne
lods
xchg
pop
inc
sub
loopne
jge
inc
fdivs
jne
orl
movsb
lfs
leave
mov
dec
jmp
cwtl
add
dec
xor
pop
scas
sbb
loopne
add
bnd
and
dec
leave
mov
add
test
xor
mov
flds
sub
mov
cmpsl
or
testb
cli
shll
jnp
cmp
mov
mov
test
sub
push
fists
aas
mov
lahf
fdivrl
lods
lods
andb
adc
xor
mov
mov
test
add
or
jmp
push
jb
ja
adc
adc
sbbb
push
in
lods
pop
jb
clc
ret
or
mov
jmp
add
int
add
inc
push
push
pop
ret
push
xchg
and
add
cwtl
aas
cltd
cmp
ja
pusha
aad
xchg
sub
out
adc
mov
and
test
xor
enter
jbe
push
dec
add
dec
push
cwtl
pusha
inc
pop
mov
call
sti
mov
add
ja
adc
or
mov
out
dec
push
and
ror
js
sub
add
xchg
mov
arpl
sbb
xor
adc
cmp
adc
pusha
mov
outsb
or
fimull
add
mov
add
mov
sahf
dec
add
ret
or
mov
add
or
mov
add
pop
sub
iret
clc
or
jno
out
and
inc
aad
cli
mov
inc
mov
xor
mov
loop
or
add
pop
rcll
test
das
out
xlat
sbb
loop
push
push
bound
jne
mov
sti
fdivrp
mov
in
dec
js
lcall
add
iret
push
aaa
xor
test
mov
push
out
fwait
insb
mov
sbbl
pop
push
movlps
int3
and
add
mov
xor
andb
or
ret
mov
jbe
pop
push
mov
dec
mov
mov
xor
nop
sub
popf
push
sub
pop
pop
jmp
add
mov
xor
lds
cmp
hlt
cld
add
sub
sbb
data16
cli
daa
dec
out
fadds
jl
cs
xchg
pop
inc
mov
fildl
lcall
adc
or
sti
and
jmp
add
repz
sbb
mov
cmp
sahf
loopne
adc
repnz
xor
mov
mov
inc
mov
dec
add
push
xchg
aas
xor
lret
pop
rorb
dec
bound
add
push
dec
xchg
shlb
add
in
push
js
xchg
ret
repnz
or
or
pusha
out
cmp
sbb
cli
cwtl
dec
push
adc
shrl
mov
jns
dec
cmpsb
adc
leave
and
and
pop
sti
and
cmp
shll
inc
mov
push
js
iret
jbe
and
or
in
and
test
mov
sbbb
es
add
cld
pusha
push
shlb
pushl
cmpsl
sti
add
loopne
ret
add
cltd
rolb
out
mov
sar
lods
cmp
cmpsl
imul
cmp
cmp
xchg
aad
insb
in
add
and
inc
xor
inc
add
xchg
jne
scas
je
clc
in
orb
incb
jbe
stc
mov
add
pop
push
inc
adc
push
adc
nop
cmp
add
shl
and
add
shlb
icebp
test
fildl
and
xchg
push
testb
xchg
cld
fisubs
arpl
sbb
push
loop
outsb
mov
enter
mov
mov
movsl
adc
push
and
sbb
cmp
or
pop
mov
pop
pusha
add
sbb
mov
pop
outsb
out
repz
xor
pop
ja
data16
push
xor
mov
jmp
xchg
addr16
lds
mov
ljmp
push
mov
adc
cmp
cmp
xor
jo
dec
push
xor
pop
lods
mov
les
cmpsb
sub
insl
pop
cmp
push
cs
mull
mov
mov
xlat
rcrb
xor
xor
out
popa
dec
or
pop
add
lods
shlb
call
push
sbb
and
or
jle
jo
clc
repz
mov
or
bound
jmp
and
incl
movsb
loope
pop
sbb
mov
out
add
icebp
out
add
enter
cmc
mov
popa
hlt
pusha
add
pop
sbb
icebp
int
mov
data16
push
pop
sbb
call
icebp
stos
dec
adc
cmp
xchg
xchg
push
adc
loopne
jne
loope
mov
pushf
add
and
dec
mov
add
mov
xlat
jbe
cwtl
testl
or
cmp
add
lock
sbbl
or
loope
jge
cmp
aaa
add
jle
or
add
test
sarb
inc
push
dec
jge
hlt
mov
xor
jo
mov
jl
rcrl
jmp
jb
aas
in
or
mov
lock
mov
push
add
test
mov
add
movsl
dec
iret
push
xchg
scas
pop
push
add
test
testl
inc
or
add
xchg
add
stos
addr16
push
js
hlt
xor
add
dec
mov
add
ljmp
cld
xor
jb
mov
mov
mov
add
cmc
pop
xchg
dec
addl
inc
xchg
bound
dec
push
jecxz
loopne
subb
add
insb
or
sbbl
add
mov
ljmp
add
add
push
fstpt
pop
sahf
ljmp
or
jns
pminsw
sub
pusha
lcall
mov
adc
ja
xchg
leave
fbstp
mov
cmp
into
mov
add
cmpsl
sub
into
mov
jno
bound
xor
and
inc
or
or
cmp
pop
xchg
rcl
loopne
pop
sbb
or
pop
sbb
popa
jae
xlat
add
or
mov
inc
sub
add
or
ljmp
mov
add
stos
xchg
imul
pop
ret
and
lods
add
data16
fsubrs
add
outsl
push
subl
add
dec
mov
cmpsl
sbb
aaa
push
jl
or
jno
lds
cmpsb
in
add
or
pusha
adc
aad
pop
and
sbb
fistl
mov
fisttpll
push
dec
jbe
add
xchg
cwtl
call
pop
push
mov
roll
mov
add
dec
pushf
jle
out
pop
cmp
inc
popa
cld
or
and
imul
mov
movsb
xor
fs
out
arpl
inc
outsb
js
jle
dec
jbe
and
arpl
mov
add
mov
add
out
xchg
cli
xor
cs
out
orl
loope
jb
ficomps
mov
test
jnp
xchg
mov
cwtl
or
data16
jb
xor
scas
push
stos
add
sbb
lcall
push
cmp
and
push
pop
or
fsubp
add
imul
jne
or
sbb
sbb
add
or
test
shrl
add
andl
rcl
add
jg
adc
repnz
std
popf
push
iret
cltd
dec
dec
mov
aas
jle
cmp
lcall
sbb
inc
movsb
and
fs
jne
add
xchg
dec
popf
int
dec
cmp
mov
adc
mov
das
add
lahf
adc
pusha
stc
adc
test
inc
add
sub
popa
cli
jbe
les
mov
mov
and
pop
push
stc
repnz
aas
xchg
arpl
rorb
dec
mov
push
mov
repz
or
mov
addl
out
dec
xchg
pinsrw
addr16
daa
xor
add
or
push
ret
insb
loope
cmp
and
push
mov
sbb
cmp
sub
cmp
or
bound
xchg
test
in
inc
out
scas
mov
nop
or
inc
adc
mov
sub
shlb
mov
sub
std
mov
fcompl
and
adc
lret
out
mov
inc
xor
scas
roll
aad
fidivrl
int
push
adc
enter
add
mov
int3
cwtl
sarb
mov
cmp
scas
add
bswap
sbb
lds
pop
dec
divl
mov
adcb
inc
lods
dec
dec
lret
or
sub
test
add
dec
cmp
sbb
loopne
push
imull
mov
xor
inc
or
add
call
push
or
sub
in
pusha
mov
pop
cwtl
jo
xor
nop
jbe
push
loop
add
adc
mov
cmp
mov
pop
mov
mov
add
cmpsl
dec
xor
scas
lahf
sub
add
jne
lods
adc
dec
add
fs
or
sbb
add
cmp
outsl
pop
clc
scas
add
sahf
push
mov
cltd
jbe
mov
cwtl
fcmovnu
sbb
cmp
pop
dec
sub
ret
rorb
nop
scas
out
iret
adc
mov
dec
mull
das
push
int3
mov
jg
push
rcr
xchg
pusha
cmpsl
mov
ret
xor
in
aad
add
push
mov
adc
jb
cmp
add
call
cli
mov
push
push
aam
jg
sbb
pushf
sbb
lds
inc
xchg
jae
lods
imul
js
pop
mul
add
lahf
divl
decl
add
pop
mov
inc
mov
dec
inc
jl
shrd
or
mov
sub
in
arpl
cltd
loopne
sbb
mov
pushf
push
pop
push
fwait
pop
adc
fcomps
xchg
test
mov
pop
jmp
std
ret
mov
call
add
sbb
adc
sub
cmp
cmpsl
fcomps
nop
mov
sbb
add
lods
dec
fnstcw
flds
sbb
insb
cs
mov
cld
roll
aaa
inc
gs
rolb
dec
or
cmp
aas
sub
add
add
and
add
jns
sahf
adc
jbe
cwtl
adc
shrl
pop
adc
cmp
sub
or
flds
mov
gs
pop
sbb
test
sahf
add
rcrl
or
mov
sahf
adc
cld
or
inc
mov
flds
xchg
xchg
add
shlb
mov
jge
into
push
call
mov
aam
mov
pop
add
add
jge
gs
cmp
test
push
fs
pushf
mov
add
add
stos
add
mov
or
leave
sbb
aas
jmp
or
and
std
fmulp
push
mov
mov
jge
pop
and
addr16
daa
movsl
dec
add
sub
pop
pushf
add
dec
xlat
aas
cmp
and
loopne
jecxz
mov
add
inc
adc
fs
pop
stos
mov
xor
mov
push
imul
cwtl
jne
sbb
sbb
sub
jl
sar
push
cltd
cmp
add
aad
sbb
push
add
das
mov
push
adc
iret
mov
in
lods
push
xchg
mov
add
add
int
sbb
dec
pop
leave
add
or
add
inc
pop
lock
add
mov
sbb
pop
push
push
enter
sbb
push
jg
iret
mov
adc
jnp
push
push
push
pop
shll
mov
inc
add
xor
arpl
pop
es
dec
out
mov
cmpsb
mov
ds
sub
fnsave
mov
leave
push
dec
adc
and
pop
jl
and
push
adc
out
lock
je
add
aad
pop
pop
repz
cs
inc
xchg
add
in
out
int
call
das
adc
mov
sar
mov
xlat
pop
jmp
subb
rolb
add
jmp
sub
ds
psadbw
adc
add
push
into
mov
or
add
push
jae
mov
popf
adc
dec
je
rolb
iret
fs
inc
mov
das
shlb
pop
and
xchg
dec
add
push
xchg
pop
sbb
dec
mov
test
leave
cmp
adc
xor
sub
repz
cmp
add
fcom
fmull
loope
and
or
or
and
fcoml
mov
mov
negl
mov
sub
xor
cmp
jmp
mov
push
xor
movsl
mov
dec
and
cmp
add
xchg
lock
shll
inc
and
cli
xlat
cmp
aas
sub
and
add
push
inc
out
sub
lret
pop
and
add
push
rcll
sub
mov
ljmp
adcl
iret
xchg
add
ret
add
fsubrp
mov
add
and
mov
push
and
mov
inc
pop
xor
movl
loope
test
or
add
fidivl
push
add
push
dec
add
insl
cld
mov
pushf
cmp
push
add
test
in
xchg
incl
mov
xorb
sahf
adc
inc
enter
push
or
inc
loope
mov
adc
add
sbb
cli
cmpl
out
das
lods
pop
cmp
mov
into
add
scas
fdivp
xchg
hlt
cmp
lods
cmpb
aad
pop
ret
clc
add
dec
sub
add
movsl
push
add
fwait
jg
mov
add
or
add
inc
sub
movsb
sbb
cmp
and
aas
mov
adc
js
add
push
lcall
xor
jp
addl
pop
lock
and
add
dec
inc
or
repz
imul
daa
cmp
or
inc
loop
mov
mov
cmp
cmp
ss
fbld
adc
lods
enter
inc
mov
je
ret
jno
mov
mov
push
xlat
lret
add
push
xchg
mov
loop
add
push
cmp
or
out
stos
sub
jae
jbe
mov
sar
and
add
jb,pn
jle
cmc
add
mov
add
ret
xchg
bound
sub
mov
add
xchg
aam
push
mov
and
in
mov
loope
divl
add
shr
add
lahf
enter
cmp
xor
adc
cmp
adc
cmp
mov
lcall
cmp
mov
adc
outsl
loope
pusha
fwait
call
add
rclb
inc
add
int
add
push
xor
cli
xchg
out
in
pop
add
pop
in
int3
adc
loope
or
cwtl
cmc
or
push
icebp
and
adc
fcmovnb
mov
add
or
pop
fiadds
jo
push
and
push
scas
xor
mov
push
sbb
push
sub
add
shlb
pop
push
mov
in
loope
adc
scas
add
pop
and
arpl
bnd
push
int
call
adc
xor
fisubl
add
inc
aas
data16
cmp
jo
gs
cmpsl
add
pop
jbe
sar
xchg
ljmp
xchg
add
daa
jo
mov
dec
mov
mov
xor
stos
loop
loopne
or
or
loope
add
jbe
sbb
jl
push
jae
cmp
mov
mov
loop
call
xor
pop
or
mov
add
mov
add
call
sbbl
add
jl
add
sbb
loope
clc
dec
stos
testl
jge
inc
add
pop
sub
sbbb
pushf
add
nop
repz
sbb
pop
icebp
dec
pop
int3
or
cmp
arpl
fdivrs
rorb
scas
jns
push
mov
sub
sbb
in
xor
and
dec
or
test
jge
fimuls
cmp
inc
add
fwait
inc
mov
mov
push
jns
ljmp
adc
faddp
mov
pop
dec
stos
pusha
adc
jno
js
rcll
or
mov
cs
jae
sbb
xchg
and
fwait
add
xlat
xchg
cmc
jb
pop
and
and
inc
push
sbb
dec
lahf
incb
int3
bound
add
cmp
add
mov
imul
int
sub
movsb
rclb
jecxz
cld
mov
fwait
in
add
jnp
pop
and
add
mov
pop
bndldx
pusha
xchg
xchg
cmp
enter
fs
or
mov
popf
ja
dec
in
mov
push
or
mov
sub
out
mov
lods
cmp
inc
stos
inc
inc
inc
fildl
inc
adc
xor
or
or
or
sbb
jno
divl
iret
rol
stos
or
xor
cmc
and
or
cmp
adc
cmp
xchg
enter
cmp
add
dec
xor
orl
pop
mov
jge
cmp
jb
fcmovne
inc
bswap
jne
les
add
or
mov
xchg
test
add
cmp
add
inc
and
mov
loop
es
cltd
adc
add
in
cmp
mov
add
or
sub
cmp
push
cwtl
pop
je
mov
add
sbb
xchg
xchg
xor
pop
neg
in
adc
add
aaa
cmp
mov
add
fisttps
mov
test
add
andb
or
sub
in
mov
test
add
pop
gs
add
jl
and
push
das
and
cmp
mov
sarl
addb
xor
or
cmp
pop
or
aas
push
addl
arpl
ja
dec
jno
lcall
sbb
nop
inc
stos
shlb
divl
iret
scas
xor
push
shlb
adc
push
add
cltd
pushf
sahf
cmp
mov
jnp
in
xorb
xchg
fsubrl
test
ja
cmpsl
xchg
or
add
and
test
bound
pop
dec
and
add
stc
call
and
lods
inc
clc
mov
add
xchg
lds
cmpsl
push
je
pop
rcl
cli
out
repnz
add
or
sahf
add
fistl
dec
inc
dec
cmp
ljmp
xchg
cmpb
inc
cmp
mov
ret
les
loop
ds
or
jno
popf
cli
outsl
push
xor
iret
test
jp
xchg
and
shr
mov
fsub
mov
sbb
pushf
cmpsb
inc
fiadds
xlat
inc
cld
movsb
sbb
mov
cmp
stos
add
mov
mov
bound
pop
mov
and
push
mov
mov
add
mov
add
inc
push
cmpsl
add
adc
pmullw
movl
rcl
sbb
outsb
pop
xorb
sbb
add
fwait
push
or
clc
push
add
pop
sub
shll
in
cmp
push
aas
loopne
lcall
aas
insb
sbb
je
cmp
pusha
ljmp
add
sarb
test
lret
add
or
aad
mov
add
xlat
add
mov
add
mov
mov
inc
xlat
es
push
add
dec
jmp
and
decl
loopne
jle
dec
movl
test
jae
mov
dec
adc
loop
add
enter
fwait
pop
jecxz
mov
imul
push
or
shrl
dec
movsb
push
stos
loopne
pop
nop
insl
dec
mov
and
sub
rorb
push
imul
xor
push
loop
mov
adc
les
negl
and
or
je
outsl
orb
lahf
push
adc
gs
js
orb
push
xlat
std
sub
cmp
jmp
push
xor
in
movsl
dec
add
int
clc
inc
rolb
add
dec
shr
adc
in
addb
lea
test
lods
frstor
push
cmp
ljmp
inc
in
std
add
into
jnp
pop
fucomp
add
mov
loop
subb
sbbb
dec
mov
dec
scas
movnti
fsubp
ss
shrl
rcrb
push
xchg
cmc
add
mov
jno
in
pop
add
adc
xor
xchg
dec
or
jmp
mov
rorb
mov
jae
push
adc
icebp
inc
add
call
push
add
xor
jne
and
subb
inc
addl
add
ds
mov
xchg
add
imul
lret
adc
add
shlb
rcr
and
mov
ret
loope
int
call
insl
add
fdivl
mov
add
mov
and
out
fnsave
mov
and
iret
lock
dec
data16
cmp
add
int
xor
push
or
les
ljmp
sub
pop
mov
mov
stc
lret
loopne
leave
cmpsl
clc
add
mov
jo
fisubs
into
add
push
fs
in
cmp
pop
mov
cmp
loopne
cmpsb
jecxz
add
je
mov
xchg
mov
aam
add
push
xchg
popf
clc
aaa
pop
add
mov
mov
mov
addr16
aam
mov
add
xor
scas
stos
sbb
addr16
sbb
jb
add
ja
repnz
js
add
cwtl
pop
jecxz
rcl
add
std
mov
lock
hlt
std
and
ja
rdtsc
dec
cmp
inc
inc
mov
call
and
push
nop
lcall
jle
cmp
mov
add
xchg
ja
pushf
add
dec
cmc
inc
outsl
roll
pop
pop
or
jle
add
inc
xchg
or
hlt
cltd
pop
add
cmp
bound
inc
add
lock
pushf
pop
cmp
add
daa
add
shlb
fidivrl
adc
ret
lea
adc
jge
and
subl
ret
shlb
xor
jle
or
adc
arpl
lcall
adc
push
push
mov
ja
or
or
push
inc
gs
imul
push
stos
mov
cmp
dec
cmp
aaa
in
scas
fldenv
test
fsubrl
mov
fmuls
inc
cmp
movsl
or
xor
dec
loop
add
mov
sub
adc
and
jne
add
popf
adc
dec
js
add
cmp
js
fwait
add
movl
sub
in
shlb
ret
adc
int3
pop
mov
sbb
xchg
shll
and
movsb
sbbb
sar
and
out
add
pop
push
cs
test
cmp
test
or
and
adc
push
es
rcl
popf
xchg
and
pop
add
ja
rorb
or
stc
mov
bnd
cli
cld
int
test
mov
jo
cmp
add
push
lock
add
test
imul
call
add
cmpsl
mov
mov
inc
in
add
cmpsl
sbb
ss
cmp
lds
add
js
mov
or
xchg
push
test
sub
cmp
mov
dec
xor
push
mov
jae
adcl
add
xor
loopne
pop
and
and
mov
add
pop
lds
cltd
jb
push
popf
lret
mov
add
jle
add
fcoms
in
jge
jno
add
orb
jl
inc
das
mov
mov
data16
mov
and
into
ds
sti
dec
jo
or
add
movsl
ljmp
dec
or
mov
call
rcr
cmp
xor
js
sbb
add
or
mov
add
inc
push
and
and
and
push
jno
inc
inc
les
in
push
out
xorb
mov
ret
pop
mov
mov
ds
cli
andb
scas
add
jo
mov
add
mov
xchg
cmp
adc
mov
leave
mov
in
fs
scas
data16
add
pop
fucomip
lock
pop
ja
cmp
add
mov
jne
scas
stos
sahf
es
out
or
ret
pop
mov
shrb
add
mov
fisubrs
ljmp
cs
and
ret
lds
and
add
xlat
dec
jne
mov
fstcw
cmpb
stos
push
mov
adc
sub
mov
cmp
push
add
mov
jne
bound
insb
lahf
pop
jge
and
sub
sbb
push
and
loopne
cmp
enter
dec
mov
mov
mov
in
enter
add
jo
outsl
jp
or
inc
jmp
inc
xor
enter
and
jnp
dec
cmp
mov
dec
sub
xor
addr16
cmc
add
lret
aas
call
loop
nop
push
jns
add
push
push
scas
aas
cmc
dec
add
stos
or
pop
inc
cs
mov
or
push
push
fidivrs
cmp
push
out
nop
and
dec
dec
int3
shl
sbb
fsts
pusha
jg
jp
sahf
xor
dec
dec
sub
or
imul
jne
add
mov
sbb
lahf
insb
xchg
sbb
push
testl
add
mov
xor
stos
loop
cmp
sub
scas
mov
das
add
and
movsb
addl
push
cmpxchg
xchg
push
push
sbb
mov
mov
out
cli
push
mov
add
popa
ljmp
jno
xor
jmp
lock
fbld
mov
dec
jp
mov
push
rorl
cmp
add
jno
movsl
or
jbe
add
cmp
dec
jo
pop
movsl
cs
data16
les
popf
stos
push
pop
sbb
stc
int
mov
or
or
nop
popa
add
out
out
pop
insb
add
mov
xchg
or
sub
addr16
cmp
push
push
shll
std
es
and
xlat
pusha
push
add
jbe
add
push
aaa
orb
jle
sbb
rclb
mov
adc
icebp
mov
inc
mov
add
push
mov
roll
ljmp
pop
add
adc
outsl
sub
pop
add
ss
sub
adc
adc
add
cmpsb
mov
clc
mov
mov
jae
sbb
jle
cmp
adc
pop
sbb
lods
add
je
clc
aad
mov
xor
mov
sbb
addr16
xchg
insb
mov
and
bndldx
xor
xchg
mov
bound
les
cmpsl
test
pop
inc
push
cmp
sub
dec
and
mov
add
insb
mov
add
aas
jno
adc
jp
push
dec
cmp
push
add
lret
add
jl
push
ss
xchg
fcoml
adc
or
shlb
jl
pusha
xor
ret
pop
cli
push
adc
imul
pop
aam
decl
xchg
or
add
subb
mov
add
popa
sub
ds
mov
outsb
add
iret
ljmp
and
aam
add
in
sbb
sarb
jl
add
and
in
or
arpl
xor
mov
mov
or
add
jge
sbb
xchg
sub
mov
cli
scas
sbb
clc
mov
add
jge
add
add
mov
jns
mov
incl
lds
sbbb
sbb
xor
mov
lock
lcall
arpl
sub
gs
jnp
dec
shrb
stc
add
cwtl
idivb
add
jg
int
leave
in
out
sub
add
repz
add
dec
mov
or
sub
aas
or
in
int3
push
ljmp
or
outsb
mov
out
push
jp
sub
dec
adc
fcoms
popa
loop
push
orb
or
outsb
mov
and
cmp
add
bound
push
jo
inc
dec
jle
add
mov
add
xchg
push
or
popf
dec
cmc
sarl
cwtl
add
pop
cmp
fadd
push
mov
scas
ret
adcb
lret
inc
movsb
mov
sub
divl
negb
cmp
jle
pop
cmpb
inc
xchg
and
mov
inc
imul
js
sub
cmc
xor
mov
sbb
xlat
jae
test
xchg
int
sti
jp
mov
fisubrs
mov
add
in
jns
pushf
roll
cld
out
inc
mov
aam
cmp
xchg
fcoms
adc
loop
sbb
pop
adc
std
jecxz
adcb
movsb
out
add
divb
sub
add
dec
mov
fbld
cwtl
cmpsb
add
xor
bound
popa
pusha
jp
lea
faddl
ficomps
addr16
bound
cmp
pop
or
fs
mov
pop
sbb
xorb
add
add
push
dec
add
je
mov
adc
adc
arpl
inc
sbb
es
jle
add
xchg
sti
xchg
in
adc
orl
xchg
xchg
jle
call
scas
push
cltd
mulb
int
dec
into
push
repnz
add
xchg
loop
jecxz
insl
pop
adc
xor
add
mov
les
sub
inc
cwtl
cmpsb
mov
lods
cmpsl
js
or
add
call
sbb
jbe
inc
xor
sub
add
xlat
lret
pop
fiaddl
mov
sub
xchg
add
mov
cmp
mov
dec
mov
and
dec
iret
arpl
add
filds
xor
das
ret
push
cs
pop
push
adc
paddsb
jp
subb
shrl
fidivs
inc
mov
arpl
scas
leave
ss
scas
in
add
hlt
out
loope
add
into
inc
mov
add
pop
sbb
add
jbe
xchg
add
sub
sub
mov
mov
shrb
enter
add
pop
sbb
iret
push
xor
jnp
inc
bound
add
add
rcr
jo
cmp
orl
add
ret
mov
inc
pop
mov
sbb
pop
notl
mov
add
in
jmp
les
dec
xchg
shlb
out
xor
lea
jl
jnp
clc
add
adc
push
sarb
js
mov
mov
subb
fs
fldenv
xchg
pop
or
aas
add
aad
dec
call
in
inc
les
add
shr
test
popa
inc
add
jno
mov
outsb
mov
xchg
add
xchg
xlat
dec
lret
add
cmpsb
adc
imul
out
add
push
ljmp
xor
mov
push
jne
lcall
xor
cmpsl
jns
and
add
sub
subb
popa
add
lret
jb
add
test
pushf
mov
push
cmp
stos
mov
fidivrl
add
jo
jmp
loop
xchg
add
cmp
out
scas
add
fdivr
rorl
aam
sbb
or
pop
adc
into
scas
add
aas
es
roll
jne
std
add
mov
lock
loopne
scas
fwait
out
sub
add
pop
adc
push
leave
in
in
cmpb
push
stos
mov
jge
fsub
or
rcll
std
lods
test
adc
popf
add
or
push
jne
enter
mov
loope
lahf
push
fwait
add
pop
out
cli
lret
cs
movsl
and
sub
add
fisubrl
sub
pop
xchg
add
xchg
mov
pop
add
push
mov
add
push
outsl
rcrb
pop
add
or
clc
or
pushf
jne
xchg
xchg
lea
dec
push
jb
int
daa
sbb
mov
verw
lcall
adc
or
add
ret
xchg
and
cmpsl
add
out
push
jns
sub
fmull
leave
jae
cmpl
jmp
cld
pop
xlat
sub
xchg
orb
push
popa
insb
dec
pop
in
add
add
jg
lahf
rcll
mov
rclb
insl
mov
or
mov
sub
pushf
jbe
call
push
cld
xchg
add
mov
add
dec
push
cmp
add
pushf
and
mov
int3
aas
ja
roll
dec
mov
push
dec
inc
sbb
mov
or
rcrl
push
push
and
mov
cmpsb
ds
sti
je
xchg
add
in
push
mov
test
jecxz
sub
js
or
mov
dec
add
mov
pop
xor
adc
ss
sysret
sbb
mov
mov
add
std
xlat
sbb
inc
dec
mov
lret
and
pop
and
xchg
mov
clc
add
call
and
lock
add
mov
xor
enter
ret
add
sbb
lds
adc
or
out
cwtl
add
idiv
sbb
mov
lock
adc
push
ret
loopne
add
es
xor
mov
add
inc
adc
xor
xadd
rorb
mov
out
ds
das
add
outsl
clc
rcrb
mov
mov
aad
outsb
jns
lret
add
xor
adcb
dec
add
aaa
iret
xchg
cld
cmp
inc
add
xor
mov
pusha
adc
into
shlb
inc
fdivrs
add
sub
jl
and
lock
dec
push
push
iret
inc
cli
mov
pop
test
nop
sbb
jo
cmp
sbb
sbb
sbb
imul
lahf
int3
push
add
mov
inc
push
cmp
mov
mov
adcb
in
sbb
pop
mov
movhps
add
test
xchg
push
mov
push
add
xchg
pusha
bound
add
mov
andb
jge
xchg
xor
imul
jo
add
test
jmp
insb
mov
data16
and
add
repz
add
xor
aad
inc
aas
push
or
roll
mov
push
xor
push
jae
add
iret
test
inc
add
pop
adc
pop
cmpsl
push
and
cmp
je
clc
and
cwtl
pop
fisttps
add
jg
mov
push
and
pop
cltd
ret
cmpsl
rorb
cmp
adc
sub
movsb
add
add
outsl
or
or
rclb
add
popa
mov
add
lcall
ret
dec
mov
pop
in
pop
mov
mov
cmpl
inc
sbb
jg
mov
ja
inc
arpl
mov
cmp
dec
fwait
sbb
dec
cmp
pop
js
and
mov
push
xor
or
pusha
inc
xor
mov
pushf
mov
lods
clc
xor
leave
loopne
clc
cmp
push
push
adc
inc
test
sbb
add
xchg
movsb
add
and
push
and
inc
mov
push
mov
js
dec
ud0
mov
pop
add
ss
push
ror
faddl
adc
sti
fs
sub
push
enter
test
imul
pushf
inc
nop
dec
fldenv
cld
add
fildll
xor
jae
mov
je
mov
subb
movsl
add
and
sbb
cwtl
or
stos
sbb
data16
or
lahf
enter
ret
xor
cmpsb
xchg
leave
icebp
rcrb
adc
add
mov
push
cmp
daa
movsb
adc
lret
add
pop
adc
incl
lock
pop
push
pop
jp
js
in
clc
jl
add
push
mov
mov
add
push
sub
xchg
popf
popa
mov
add
cmp
mov
enter
je
add
adc
mov
repz
xchg
rcrb
inc
aam
shr
mov
call
pop
popf
mov
call
and
jl
adc
mov
mov
rol
mov
aaa
das
sbb
stos
fs
test
jmp
inc
scas
movl
cmp
addl
mov
je
insb
adc
push
scas
incb
jne
dec
fnstcw
add
sub
lock
cwtl
loopne
dec
lret
sub
out
add
jl
pop
add
data16
dec
lods
out
cmp
pop
shlb
or
xchg
or
mov
stc
fcompl
add
add
sub
add
pop
in
lahf
cltd
cwtl
add
mov
orb
jmp
sbb
mov
lahf
push
add
movsb
lea
inc
jp
mov
inc
aas
sub
or
pusha
jmp
fadds
rclb
mov
fisubl
fdivs
or
xchg
out
mov
ror
enter
sbb
jp
mov
xchg
je
popf
fs
cmp
es
pusha
xchg
insb
repnz
push
jb
ljmp
mov
sti
shrb
scas
inc
or
loope
or
std
jbe
fisttpl
and
pop
test
sub
add
mov
test
pop
fwait
hlt
jne
rclb
fnsetpm(287
hlt
subb
mov
inc
jne
icebp
xlat
mov
sbb
in
fsubs
inc
pop
sbb
cmp
dec
iret
loopne
mov
or
stos
inc
push
lock
push
or
sub
das
cld
pusha
dec
icebp
mov
add
popf
fcomp
pop
sbb
or
int
mov
add
insl
cs
push
dec
sar
lds
xor
pushf
out
fstl
cs
xorb
mov
mov
pop
daa
add
mov
mov
add
insl
cmp
adc
add
and
or
insl
push
nop
add
pop
pop
and
add
mov
adc
test
rcrb
movl
dec
xor
and
cmp
xchg
pusha
mov
push
dec
xchg
pop
add
push
shl
lcall
add
js
add
loop
mov
jnp
add
xchg
jle
add
push
addr16
mov
lods
jl
add
enter
insl
adc
test
mov
push
push
into
int3
add
insb
xor
in
cmp
mov
mov
add
in
add
add
dec
adc
sbb
mov
std
imull
pop
add
pop
push
sar
push
sbb
sbb
add
or
cmpsb
sti
jnp
mov
adc
and
cmp
insl
add
sbb
fs
add
mov
lods
flds
xor
addb
adc
loopne
aad
loopne
cmp
mov
pop
inc
repnz
popa
add
in
scas
stc
push
out
adc
ss
dec
daa
cwtl
add
int
mov
or
mov
push
ret
cmpb
clc
jo
and
mov
pop
mov
push
add
mov
les
test
aas
add
jno
fwait
jp
pop
push
add
pop
or
mov
add
jno
push
lds
and
sub
pop
sub
jo
icebp
push
mov
sub
jnp
fnstcw
xor
inc
push
sbb
pop
push
pop
push
xor
loopne,pt
sub
repnz
ficompl
popa
add
jmp
negl
in
xor
inc
shrl
jmp
test
add
mov
jns
mov
add
test
out
stc
sbb
test
xchg
add
pusha
sbb
push
test
psubusb
jge
or
cmc
ret
fs
or
push
mov
mov
fxtract
and
out
push
mov
dec
movsl
mov
faddl
pop
inc
cmp
xchg
push
mov
sbb
dec
jbe
add
and
add
dec
pop
pop
xlat
sbb
clc
push
xchg
and
mov
jae
shlb
dec
cli
adc
add
ss
mov
imul
repnz
push
fisttpll
adc
and
mov
jne
xchg
pop
jp
add
jle
test
sahf
pop
mov
outsl
inc
mov
lret
jge
inc
add
fistl
jb
out
mov
jae
or
cs
dec
aas
dec
popl
daa
sarb
push
loopne
insl
sbb
mov
fmuls
call
add
lods
js
add
push
mov
mov
push
xchg
add
sti
inc
lods
inc
mov
shll
out
movsb
cmpl
or
loope
rclb
push
imul
inc
repnz
bts
xchg
inc
pushf
mov
add
sbb
call
xor
popf
mov
add
pop
dec
push
xchg
dec
dec
add
adc
filds
jb
adc
jp
jns
add
lods
dec
ljmp
push
cld
outsl
pop
push
mov
jmp
add
ss
inc
mov
xor
inc
insl
test
jno
icebp
mov
mov
arpl
add
dec
adc
sbb
jno
add
sti
aas
push
addr16
add
sub
mov
fimuls
in
cmpsb
xchg
testb
jmp
int3
cmovs
inc
inc
push
add
jae
movl
push
cmp
jno
add
and
dec
int
push
cmp
leave
add
popa
test
push
adc
adc
xchg
or
xor
pop
mov
lret
in
add
xchg
repz
lods
or
les
imul
pop
in
cmp
xor
add
mov
out
sub
in
cltd
and
jne
add
call
test
in
shrb
add
lods
xchg
and
add
add
rorb
xchg
hlt
cltd
add
and
lock
call
ja
and
clc
pop
jne
add
stos
rclb
jle
add
sbb
ret
shl
call
adc
insb
in
sub
andl
cmp
sbb
jmp
loopne
cmp
pop
dec
lock
jmp
out
inc
or
pop
cmp
ja
cmc
sbb
push
ljmp
lcall
cmpsl
into
pop
push
jnp
add
fstpl
mov
push
stc
or
jbe
adc
aad
mov
fs
mov
adc
add
lar
adc
test
add
mov
jge
pop
into
jl,pn
cld
add
xchg
mov
pushf
add
rolb
add
xor
push
sbb
cmpsb
data16
and
lds
add
sub
xor
data16
ja
pop
mov
push
mov
adc
movsb
lods
mov
mov
jo
cmp
scas
mov
out
add
jmp
mov
pop
icebp
mov
repz
loopne
add
dec
push
sahf
mov
add
dec
repz
mov
cwtl
push
or
mov
cmp
xor
xor
dec
inc
or
sti
mov
add
pop
sbb
or
daa
call
fs
add
sti
add
xor
xchg
add
and
rcrb
cmp
xchg
cmp
pop
add
loop
incb
sti
in
xor
pop
addb
fcoms
sub
lret
lahf
inc
leave
call
rolb
sub
jb
cmp
cmc
push
negb
ret
test
loopne
lds
add
xchg
sub
ljmp
push
xchg
nop
hlt
fadds
or
jg
adc
mov
popa
loopne
sub
cwtl
and
in
and
dec
repnz
mov
in
and
fs
xchg
imul
jno
add
xor
outsb
pop
insl
les
adc
and
outsl
shll
push
xchg
bound
pusha
mov
cmpsl
out
add
add
mov
in
and
mov
sti
testb
add
rcl
stos
add
push
xchg
andnps
xchg
or
push
mov
scas
sbb
jg
mov
incl
push
cmp
and
ja
xchg
das
xchg
add
out
push
add
mov
add
push
int3
xchg
push
add
add
clc
in
stc
aas
out
add
repz
xabort
nop
sbb
mov
mov
sub
addr16
add
mov
xor
pop
out
shrb
loopne
in
jno
push
adc
pop
ljmp
xchg
orb
test
cmpl
pop
add
sbb
pop
ret
in
fmul
stos
lock
dec
imul
lods
cmp
ficoml
mov
jecxz
jns
sbb
pop
xor
jae
jnp
lds
fcoml
outsl
pusha
or
rcrb
jle
mov
push
sbb
sahf
push
pushf
addb
inc
movsb
stc
pop
mov
dec
cmp
xchg
lods
sub
or
jp
lahf
add
add
pushf
xor
add
adc
adc
hlt
shlb
outsb
sar
pop
sbb
mov
cmp
shr
addl
add
sbb
lods
xor
mov
adc
add
mov
cli
push
popf
jmp
mov
sarb
xchg
pop
sub
mov
gs
test
aad
jnp
mov
add
xchg
out
add
jae
out
cmp
mov
add
jno
hlt
mov
cmpsl
js
mov
mov
loop
and
rcrl
mov
mov
or
ljmp
lcall
sub
pop
mov
add
imul
adc
and
test
inc
pop
xchg
jg
adc
mov
add
repz
gs
sub
push
mov
pusha
or
sbb
dec
mov
frstor
jp
pushf
test
pop
cmp
stos
sbb
push
cmpsl
or
movsb
and
les
ret
sbb
lock
addl
loopne
arpl
and
dec
cld
push
sbb
aaa
in
inc
popf
fldcw
add
addb
data16
add
add
in
mov
fwait
sub
inc
pop
add
cmc
testb
push
jae
cmp
mov
pop
popa
mov
popf
in
out
adc
add
int
loop
xor
or
xor
lret
add
push
mov
mov
sti
adc
add
ret
or
push
sub
cs
pushfw
adc
mov
jl
pop
mov
dec
sub
cmp
xchg
adc
test
cltd
enter
adc
std
fisttps
push
adc
or
pop
add
jbe
xchg
or
loope
add
arpl
push
pop
xchg
ret
adc
stc
int3
subl
push
loop
es
and
add
leave
xchg
pop
fwait
or
add
or
sbb
and
push
add
js
test
jae
or
cli
bound
add
mov
push
add
xor
rcr
sbb
bound
jo
insb
int3
movsb
add
push
mov
std
add
nop
jg
pop
and
add
stc
aad
push
pop
adc
jl
insl
push
out
push
in
push
push
call
pop
mov
aaa
divb
psubusw
jae
cmpsl
xchg
add
lcall
paddd
pop
inc
jge
movsb
sbb
imul
ficoms
inc
add
and
lcall
mov
outsb
add
sti
pusha
add
cmpsl
loop
add
inc
iret
xor
aad
frstor
sbb
add
sahf
push
mov
cmp
push
mov
insl
mov
push
add
fucomip
xchg
pop
lods
pop
and
iret
cmp
mov
add
bound
out
je
jmp
movsl
add
arpl
add
jb
add
add
pop
js
mov
dec
mov
lods
and
xlat
pop
sub
and
xor
xor
loop
std
pop
pop
push
xor
loopne
icebp
add
jno
cmp
aam
inc
jmp
xor
push
rcll
mov
add
in
fildl
cwtl
cmp
adc
sub
cmp
jl
add
addr16
mov
xchg
aad
hlt
add
mov
in
adc
loop
add
xchg
add
js
je
add
cmp
push
xor
and
push
lea
add
pop
ret
sbb
adc
sub
lock
and
sub
pop
cmc
push
cmp
xor
cltd
mov
push
pop
bound
pop
xor
loope
xor
jg
cs
mov
cld
lcall
std
in
hlt
scas
or
test
cmp
les
add
hlt
mov
icebp
cmpsb
int3
icebp
andb
jbe
mov
pop
or
lock
xor
outsl
mov
push
int
cltd
out
and
add
jnp
popl
cli
inc
add
mov
dec
add
adc
fcmovnu
aas
call
ja
andb
push
pop
jge
fiadds
add
pop
filds
in
pop
jp
xchg
add
push
sahf
call
outsl
rorb
mov
push
fldenv
aad
arpl
loopne
mov
out
movsb
add
xchg
out
bound
pushf
inc
push
xchg
mov
sysexit
imul
repnz
sub
repz
adc
aas
test
loope
lds
push
iret
mov
mov
nop
stc
add
xchg
push
iret
mov
in
xchg
fcmovnb
mov
add
pusha
mov
adc
ret
jns
mov
mov
add
pop
leave
add
dec
jns
cmp
imul
pushl
jae
mov
adc
insb
lock
pop
mov
out
mov
sbb
xchg
loop
xchg
sbb
push
lods
or
sbb
inc
jae
xchg
adc
jno
inc
sbb
or
outsb
add
cmp
jmp
scas
push
pushf
mov
mov
aad
jno
stc
daa
pop
push
mul
mov
mov
push
pop
ljmp
movzbl
mov
out
push
mov
ds
add
outsb
or
pop
dec
and
sbb
fists
and
jae
push
out
lock
idiv
shlb
sbb
into
in
xchg
mov
sub
movsb
lea
in
push
daa
add
sbb
mov
sbb
jae
ljmp
insb
int3
cmp
add
add
test
and
ljmp
sub
outsb
mov
push
pop
and
je
mov
adc
mov
popa
dec
sub
hlt
sub
divb
xlat
es
lret
loopne
add
mov
popa
adc
inc
add
dec
mov
cvtpi2ps
add
pop
ljmp
jae
shl
or
adc
movsl
add
mov
aaa
movb
cwtl
dec
add
cmpsb
iret
cmp
test
ja
arpl
scas
sub
add
jno
cmp
dec
mov
adc
rcrl
mov
jb
add
pop
adc
in
add
inc
mov
add
daa
mov
xchg
pop
jnp
add
push
pop
xor
ret
add
cmpsb
pop
mov
add
lods
dec
leave
icebp
jmp
add
sub
pop
add
enter
and
add
imul
push
call
sub
xor
xchg
sbb
cmp
cwtl
loopne
cmp
stos
and
cmp
add
xor
scas
cmp
add
outsb
sub
xlat
cmpsl
ss
xor
cwtl
sti
movb
add
mov
testb
addb
rorb
cld
cmpl
push
xchg
enter
rclb
pop
mov
jl
into
addl
cs
aas
and
or
sub
fadds
lret
add
mov
pop
imul
and
add
imul
sub
scas
pusha
insb
add
xorl
lahf
jle
jl
fildl
pop
stos
shr
mov
pop
jge
xchg
push
add
imul
dec
or
pop
mov
test
adc
sub
add
mov
inc
orl
push
scas
add
data16
mov
push
hlt
jl
add
fisubl
xorl
sub
mov
sbb
xlat
int
repnz
sbb
pop
xor
pop
push
or
sub
and
adc
icebp
adc
mov
decb
and
pop
fimull
push
clc
jmp
mov
mov
add
and
adc
cltd
adc
in
sub
or
addr16
and
in
push
sbb
ret
adc
push
and
or
cmp
xor
cmp
xchg
imul
jge
xchg
mov
adc
repnz
arpl
and
in
push
add
loope
pop
sbb
enter
shr
jecxz
mov
xchg
or
rcl
rclb
mov
mov
xchg
and
sbb
das
cmc
popf
cld
push
sahf
xchg
and
sbb
enter
jp
or
push
testb
addl
test
ja
add
cwtl
outsb
jno
rcrb
idivl
or
pusha
dec
test
jge
mov
mov
in
push
sbb
and
push
inc
outsl
mov
and
in
push
jne
add
cmp
sub
push
push
or
ret
pop
pusha
and
add
and
mov
aad
add
xor
lea
fiadds
cmpsb
mov
imul
and
lds
or
scas
andl
imul
dec
or
negl
and
add
hlt
xchg
mov
lods
rcll
in
push
into
mov
rsm
mov
lods
cmpb
icebp
xor
testl
xchg
movsl
add
test
mov
lods
rclb
push
adc
inc
xor
push
leave
jge
and
ja
dec
mov
outsl
sbb
add
mov
sti
dec
sbb
mov
outsb
test
hlt
adc
loop
xchg
mov
or
sbb
mov
inc
fildll
jecxz
xchg
sbb
and
outsl
push
mov
repz
sub
sub
stc
fadd
xor
nop
push
jne
push
es
add
andl
fldcw
out
les
arpl
std
repnz
es
test
adcb
nop
mov
adc
add
test
out
add
divl
inc
push
sbb
cmp
add
xor
pop
cli
dec
push
sbb
test
sub
push
mov
enter
je
add
add
shll
add
jns
sub
sub
dec
inc
adc
mov
nop
fs
add
enter
pop
repnz
adc
rcrb
sti
pop
add
shll
std
dec
mov
adc
shlb
add
jmp
cmp
add
push
movb
jl
ret
add
imul
and
push
mov
js
xor
daa
jle
pusha
push
and
sub
or
jl
mov
subb
xchg
rclb
cmp
add
jno
test
adc
adc
mov
jmp
ljmp
icebp
pop
add
loope
fsub
test
xor
mov
jmp
je
clc
js
add
or
sbb
gs
arpl
push
sbb
lahf
aam
enter
lret
jbe
xor
pop
mov
loopne
jo
sbb
std
add
lock
pop
pop
dec
aad
test
std
cli
popa
or
pop
mov
ss
in
xor
movsl
movsb
jbe
add
add
mov
rolb
lea
cmp
arpl
lret
in
stc
push
insb
xor
mov
pop
xor
or
shll
fsubrs
cld
xchg
pop
xor
xor
pusha
push
and
mov
js
cltd
add
push
mov
jae
mov
adc
add
scas
mov
fldl
repnz
test
add
and
testl
daa
add
inc
jg
jae
xor
pusha
xor
mov
add
insb
add
sahf
clc
pop
filds
loopne
and
fdivrs
and
shrb
lcall
out
scas
jae
add
fistpll
lahf
mov
pop
sbb
sbb
pop
pop
filds
xchg
fdiv
je
xchg
add
jge
mov
add
jne
and
test
lods
mov
sbb
loop
mov
cmp
mov
sbb
hlt
test
xchg
adc
repnz
add
fdiv
enter
push
dec
sub
adc
add
mov
xor
cmc
shl
jb
sub
cmp
cli
clc
inc
xchg
xor
pop
xchg
sbb
aam
xor
add
xor
add
repz
scas
sub
jns
xor
and
add
loopne
int
pop
jecxz
xchg
adc
pop
in
ja
adc
add
mov
sbb
xor
add
shrl
call
sbb
jecxz
sbb
cmp
add
xchg
ret
mov
loope
insb
dec
or
out
out
add
push
adc
les
movsl
add
mov
and
clc
lahf
repz
lret
xchg
lds
je
ficoml
hlt
jbe
loope
push
jge
roll
cmp
add
xlat
repz
test
pop
push
in
in
adc
jnp
add
inc
out
jbe
fdivs
ljmp
and
xadd
daa
test
mov
sti
cmp
mov
push
cwtl
adc
and
enter
in
test
outsl
push
stos
bound
inc
addr16
push
popf
push
xor
add
cmpsb
fs
and
adc
out
or
or
loope
ret
add
pop
jae
je
inc
push
add
outsb
mov
cmpsl
adcb
adcb
add
mov
orb
addb
movsl
sbb
inc
and
lret
lods
xor
jne
cmc
fildl
popf
enter
out
adc
mov
xor
sbb
lods
xchg
arpl
scas
mov
test
jno
adc
cmp
xor
mov
ljmp
add
gs
cmpsb
js
pop
sub
sub
rorl
push
xchg
mov
cmp
xor
or
pusha
movsb
clc
or
cmp
and
sti
xchg
cmp
mov
out
dec
mov
or
shr
subb
add
inc
insl
fisubrs
pop
jle
xchg
scas
aaa
add
fbstp
fisttpll
scas
and
sub
inc
push
mov
cltd
pop
and
cwtl
sbb
out
test
mov
lahf
nop
fcoml
push
shlb
ss
cmp
fadds
pushf
add
pop
cmp
icebp
add
add
call
pop
loopne
jle
inc
imul
mov
fimuls
mov
jne
out
movsl
aaa
xor
push
pop
xchg
lret
test
aas
and
mov
adc
add
scas
sar
lahf
popa
xchg
mov
or
pop
inc
sahf
or
icebp
test
je
xor
or
in
int
into
int
and
mov
bound
shlb
push
or
sbb
inc
enter
addb
add
mov
xchg
int3
lock
inc
leave
add
jle
add
in
xchg
fwait
lds
or
aaa
call
lahf
lea
into
imul
cmp
cmpb
xor
movsl
inc
xchg
pop
nop
add
cli
gs
add
fwait
sbbl
xor
mov
inc
or
dec
jns
bound
jl
bound
dec
lea
inc
fisubrs
or
mov
mov
mov
andb
jae
ret
fsub
divb
or
adc
lret
lods
pop
daa
push
pop
into
sbb
out
mov
mov
fxch
add
mov
mov
scas
xor
sbb
xlat
daa
push
push
add
lcall
inc
dec
sbbl
or
iret
inc
fnsave
add
jge
cmp
pop
fbstp
repz
push
jns
mov
mov
push
jne
push
jb
scas
push
loopne
mov
pop
pop
arpl
cmpsl
pushf
adcl
mov
les
cmp
ds
ds
mov
mov
jp
adc
push
int3
pop
xor
add
mov
jge
xor
cmp
call
rcl
adc
shlb
add
fwait
mov
add
mov
xor
add
mov
xchg
jbe
jo
pslld
nop
cmpsl
pusha
mov
adc
xchg
daa
sbb
scas
and
test
fwait
std
out
mov
cmpxchg
mov
cmp
xor
add
lret
and
idivl
orl
sub
sbb
loope
xchg
inc
idivb
or
faddp
and
pushf
add
and
rcrl
xlat
stos
je
adc
loope
sub
into
jne
and
sub
jmp
adc
or
imull
inc
aas
jnp
loopne
xor
sbb
jl
inc
mov
scas
sbb
cwtl
jns
rcr
add
ja
inc
movzwl
xchg
sub
ja
add
adc
pushf
push
jle
sarb
call
call
sbb
or
iret
cmpsl
xor
mov
movsb
inc
xchg
xchg
mov
xchg
add
mov
pop
nop
push
add
mov
add
test
jb
adc
xor
js
fiaddl
ja
add
xchg
sbb
jl
and
mov
inc
jb
loopne
ja
add
cmpsb
sbb
pop
in
jnp
lahf
mov
rcrl
mov
dec
scas
adc
push
mov
lds
adc
call
xchg
inc
and
lods
add
xlat
pusha
clc
adcb
push
pop
mov
in
pop
aaa
inc
dec
ret
or
pop
pushf
xchg
pop
lret
fwait
rcll
push
xor
iret
inc
popa
insl
fptan
jno
cmpsb
pusha
cld
push
das
ja
mov
lret
inc
add
pop
inc
lds
adcl
and
xchg
aad
out
call
mov
sti
lock
xchg
add
jae
jmp
xor
popa
push
sti
addb
sub
jno
adc
and
sbb
xor
push
jnp
adc
lods
add
jns
or
pop
sbb
inc
push
rclb
sub
das
fisubs
jecxz
add
sbb
fwait
push
sbb
adc
inc
sar
mov
push
fcomi
jae
add
int
gs
or
add
cmp
add
movsb
pop
out
add
mov
aad
mov
or
add
xchg
out
push
iret
fwait
scas
out
cmpb
je,pn
dec
add
jle
cmc
cmp
push
mov
shlb
loope
jne
nop
je
frstor
call
cmc
loopne
inc
sub
js
add
mov
dec
pop
loopne
cmp
repz
pop
fsubp
mov
hlt
clc
jp
inc
cli
mov
lcall
push
subl
sti
jo
add
adc
or
arpl
dec
int
sbb
push
dec
test
add
fistps
cmp
std
call
and
push
repnz
xlat
mov
pop
mov
add
jb
and
xlat
jnp
xchg
ret
hlt
adc
out
add
bound
lods
sbb
push
jo
sbb
je
push
pop
sbb
or
inc
aaa
add
jo
pop
xchg
push
fistpll
bound
je
pusha
adc
jge
inc
pop
xchg
add
cli
sbb
inc
subb
add
cmc
xor
push
mov
jb
or
addr16
push
or
add
jae
sbb
iret
js
inc
mov
movsb
pusha
add
cmp
inc
rorl
hlt
lods
lahf
aam
push
xor
xchg
rcl
leave
addb
psrad
mov
shrb
repz
clc
es
adc
cmp
cwtl
xchg
mov
cmpsb
into
sbbb
sbb
pusha
sub
sub
mov
sub
sti
and
or
sub
enter
cwtl
int
push
mov
mov
aas
es
sub
sbb
pusha
stos
mov
adc
lret
pop
push
adc
inc
push
jecxz
push
testb
push
lret
inc
cwtl
adc
stos
xchg
pop
enter
xchg
or
inc
arpl
or
push
test
push
xor
sbb
or
repz
out
inc
adc
xchg
dec
add
orl
pop
pop
sub
inc
push
movsb
push
stos
add
mov
mov
mov
insb
add
inc
sbb
rorl
push
insl
mull
or
add
addr16
and
cmp
sbb
or
shl
add
dec
in
psubusb
sbb
in
rorl
sbb
add
mov
adc
push
adc
out
push
push
call
cmc
mov
aaa
sahf
pop
in
loopne
cs
gs
inc
dec
jb
ds
pop
js
addr16
push
scas
mov
push
and
jne
lock
inc
dec
stos
jecxz
insb
dec
aas
cmpb
dec
jl
sti
and
cmc
inc
and
or
sbbb
subb
lods
and
adc
clc
xor
lret
cmp
fmul
jle
js
popf
orb
movb
xor
adc
sbb
or
imul
arpl
mov
pop
lods
xor
stc
rolb
leave
sub
adc
xor
and
fsts
push
xor
loopne
dec
int3
sbb
into
scas
nop
orb
mov
sub
sbbb
int
int3
push
sbb
fstp
mov
adc
mov
lods
jo
cmpsl
fs
test
mov
and
in
xchg
xor
push
xor
sbb
cmp
lods
lds
push
sub
mov
inc
or
cwtl
mov
pop
insl
es
xor
or
adc
repnz
shlb
or
nop
and
insl
lahf
sbb
ss
and
pop
xor
lds
dec
pop
dec
ds
rclb
movsb
out
cmpb
push
int
out
and
inc
push
dec
xor
sbb
shlb
es
dec
andl
lods
sub
nop
push
nop
negl
mov
outsl
push
aam
insl
xor
adc
jne
or
divb
sti
pop
jo
jecxz
int3
cmpsb
inc
jg
add
xchg
jbe
pop
and
or
outsl
push
adc
mov
mov
xchg
rorb
jle
sub
dec
or
sbb
aaa
xor
push
mov
shll
mov
pusha
pop
test
xor
orb
enter
dec
cmp
ds
pop
dec
fnstenv
adc
movsl
adc
push
or
lds
ficomps
xchg
insl
pop
mov
cmp
in
clc
sahf
xor
and
mov
pop
mov
clc
jnp
repz
jle
jns
pop
xor
jnp
enter
lret
push
loopne
sti
push
aas
mov
fisubrs
je
repnz
pop
fnstcw
push
mov
sbb
pop
add
mov
js
fmuls
push
test
dec
pop
sbb
pop
dec
jns
jmp
dec
pop
nop
add
xor
int
jno
add
movsb
pop
pop
into
mov
rclb
insl
jmp
scas
sbb
adc
cli
loope
je
cmp
arpl
xchg
out
pop
add
out
add
mov
rorb
cmp
ret
add
xchg
sub
icebp
subb
jno
add
inc
lods
mov
imul
dec
std
sahf
adc
movsl
add
mov
or
popa
lods
nop
gs
mov
ds
clc
or
or
mov
mov
add
adc
pop
and
mov
shlb
jae
cmp
sbb
pop
lock
mov
cmpsl
sbb
mov
cmp
cs
sub
sub
movsl
sbb
call
add
fwait
scas
in
jo
enter
pop
xorb
and
insl
or
push
ds
incb
or
ror
xor
cmp
test
xchg
cwtl
push
push
pop
sub
lock
in
jg
iret
cmp
xchg
add
and
clc
popl
cmpsl
xchg
punpcklbw
cmp
cmp
out
sub
add
or
rcr
pop
xchg
jne
shlb
pop
rolb
sub
scas
popa
imull
iret
addr16
adc
ficompl
cmpsb
sub
movsb
in
lods
bound
pushf
lock
scas
inc
loop
lods
in
push
pusha
fwait
loopne
enter
mov
in
adc
push
inc
add
jmp
lock
out
and
push
scas
and
jmp
shlb
xor
or
call
out
or
int
cmp
or
cwtl
adc
add
xchg
push
punpckldq
xor
push
lods
sub
sti
stos
mov
fnstcw
das
pop
test
jmp
addb
xor
js
aam
mov
cmp
adc
jne
mov
xor
add
cmc
fwait
xchg
mov
negl
mov
inc
pop
cmp
dec
adc
not
add
adc
xor
pusha
sbb
jo
ja
pop
nop
push
inc
es
clc
sbb
cmc
mov
add
imulb
xchg
gs
mov
inc
movsl
adcb
iret
movsb
add
test
or
mov
nop
adc
add
out
setne
orb
push
push
push
add
push
jne
xlat
mov
push
and
outsb
adc
mov
mov
or
andl
outsl
pop
xor
pop
xor
adc
jne
dec
aad
or
mov
sarl
cmp
cwtl
xchg
aaa
repz
adc
push
adc
jl
or
xchg
call
loop
push
xchg
inc
fadds
or
push
mov
adc
arpl
sub
and
outsl
enter
jecxz
arpl
and
xchg
pop
xor
push
ds
mov
filds
sbb
jo
scas
cmp
cmp
adc
ret
dec
mov
and
xchg
sbb
jns
push
nop
jp
cs
aaa
sub
dec
mov
push
xchg
cmpl
je
bound
gs
js
xor
sub
sti
nop
or
in
jb
pop
pop
loopne
test
cmp
sub
lock
jne
push
int
ror
in
aad
out
lea
insl
inc
xchg
insb
les
push
orb
push
pop
mov
adcb
pop
sub
push
das
and
fadds
imul
sbb
inc
pop
xor
movsb
cmp
push
icebp
mov
xor
into
adc
testb
jp
adcb
and
shr
mov
leave
cmp
add
pop
test
imulb
je
in
xor
fisttps
pop
xchg
shl
orb
test
push
xor
xchg
cmp
sub
xchg
cmc
jnp
into
mov
mov
xor
lahf
add
mov
gs
rclb
ja
nop
dec
sub
mov
cs
mov
insl
inc
movsb
or
hlt
mov
fdiv
xchg
bound
or
int3
je
jg
test
pop
push
jbe
cld
lock
leave
hlt
mov
cmpsb
add
ss
aaa
adc
and
shlb
pushf
cs
inc
pop
das
iret
xor
jge
repz
mov
leave
add
xchg
out
jnp
adc
mov
mov
xchg
pop
lock
xor
mov
adc
hlt
outsl
cwtl
pop
jbe
aam
xor
mov
aaa
popa
cmp
rorl
mov
out
xchg
inc
cli
add
mov
xor
repz
gs
jecxz
pushl
mov
js
mov
pop
stc
and
push
push
je
mov
int
jge
loope
lahf
push
add
sbb
pushf
shll
mov
xor
dec
addb
sti
mov
add
cmpsb
jle
ss
je
add
enter
sbb
adc
mov
arpl
loopne
fs
xor
pusha
push
pop
inc
cld
xchg
mov
and
xor
or
xorb
lret
adc
out
dec
and
push
rcrl
mov
mov
popa
cmpsb
enter
xchg
lock
fnstenv
xor
xchg
loop
mov
inc
cmp
aam
lahf
xor
fcmovne
stos
lret
cwtl
xchg
push
push
push
lods
pop
xchg
cmp
fstpt
xchg
push
cld
xor
xrelease
sub
ds
ficoml
inc
rol
cmp
dec
xchg
xchg
mov
mov
nop
lcall
cmp
mov
pop
nop
mov
fistpl
insl
add
stos
js
inc
fldenv
imul
mov
les
insb
sub
pop
insl
and
negb
or
and
mov
pop
and
dec
lret
push
stc
test
push
and
mov
insl
pavgb
stc
loope
subb
add
jle
jo
lock
sbb
dec
dec
cmp
mov
sbbb
mov
add
xchg
mov
add
pop
lods
pop
jl
push
sti
dec
jmp
cmc
sub
jl
int
xchg
add
sar
mov
or
add
outsb
incl
and
sub
pop
lods
pusha
cmpl
adc
sti
pop
mov
rorb
cld
mov
mov
push
mov
outsb
xchg
add
loop
xchg
sbb
xchg
push
add
jle
or
xchg
sub
push
sub
cmp
out
sbb
adcl
lds
shl
aaa
clc
mov
push
push
loope
and
sbb
imul
popf
or
jbe
add
ljmp
xor
cmovg
into
add
mov
mov
inc
adc
or
sub
cmp
fadd
xlat
sbb
push
sub
aam
add
pushf
add
bound
fimuls
sub
or
push
sbb
jl
lods
mov
outsb
dec
lret
lods
js
ja
mov
push
mov
mov
cmp
test
mov
sbb
or
adc
cmp
xchg
or
dec
push
or
out
outsb
jne
loopne
fisubrl
mov
or
mov
lahf
jo
sahf
add
incb
pop
fmuls
inc
flds
sub
cwtl
out
and
pop
data16
sti
imul
jnp
popf
test
les
ds
js
sbb
sbb
js
pop
xchg
jne
add
out
aas
sub
or
mov
popf
xchg
sarb
adc
sub
mov
jo
imul
mov
lret
shl
inc
jmp
add
mov
in
or
orl
mov
shr
shrb
pop
jl
and
xor
stos
loop
xchg
gs
cmp
test
daa
mov
mov
pop
pop
xor
test
mov
push
insb
test
mov
mov
pop
jno
icebp
add
mov
test
pop
mov
push
pop
jge
nop
dec
and
xchg
cmpb
dec
and
xor
adc
or
push
rsqrtps
shll
call
mov
enter
mov
shll
adc
pf2id
mov
mov
inc
rcrb
sub
inc
mov
cmp
cmpb
push
aaa
xor
sub
push
add
or
push
mov
cmpb
daa
inc
xorb
add
jg
push
xor
or
shrb
cmp
sahf
jp
fucomip
ret
cmp
sahf
jl
movb
jmp
or
subl
adc
xor
add
or
sub
mov
rolb
lock
push
sbb
adc
orb
push
lret
push
subb
scas
adc
mov
or
xchg
mov
repnz
popa
or
mov
add
je
push
cmp
arpl
enter
fsubrs
lods
xor
adcb
push
test
mov
decb
dec
push
call
or
adc
mov
iret
or
cmp
add
xor
mov
pop
or
jo
test
cmpsl
or
das
mov
ds
add
mov
push
aad
adc
lods
test
mov
mov
fs
mov
and
add
mov
xor
xor
shl
fwait
inc
movsb
push
jl
test
shlb
sbb
jns
inc
mov
xor
aad
in
enter
mov
nop
aaa
push
or
movsl
cmp
mov
push
pop
dec
push
cltd
daa
cld
rcrl
adc
mov
sbb
mov
fisubs
std
push
add
pushl
pushf
pop
sub
jg
mov
or
ja
lret
sub
es
out
or
inc
mov
push
aaa
and
shlb
bnd
hlt
sahf
or
andb
rol
or
inc
loopne
lcall
clc
adc
push
push
js
or
mov
xlat
inc
or
push
or
sbb
out
shrb
insl
inc
sbb
mov
out
dec
and
nop
or
adc
sbb
or
inc
push
jge
int3
and
add
adc
loopne
mov
and
cmp
mov
cltd
cld
adc
xor
ds
sub
or
dec
and
mov
clc
and
lret
inc
dec
jle
addb
mov
imul
sbb
rol
jo
scas
insb
js
or
adc
in
lahf
std
mov
enter
push
jge
shl
iret
insb
mov
push
mov
dec
lods
pushf
lock
es
inc
or
jae
es
lods
fcoms
or
add
xchg
cld
loop
loopne
add
pop
insb
dec
add
jae
mov
add
stos
mov
mov
in
add
xchg
or
sbb
clc
push
imul
out
mov
pusha
adc
inc
adc
sbb
cltd
jnp
jno
mov
call
fldenv
movsl
lods
in
xor
shr
ja
add
xlat
addr16
or
adc
pop
jb
test
fldl
fmul
add
call
je
push
push
push
pop
sbb
cmp
idiv
andb
add
add
fcompl
mov
addr16
pop
sarl
add
mov
cwtl
cmc
cmp
add
pop
add
lods
mov
adc
dec
dec
pop
push
mov
inc
mov
in
ss
add
dec
jmp
shrl
inc
add
aaa
xchg
jne
rclb
push
pusha
jns
lea
mov
into
lahf
add
mov
adc
add
inc
aaa
sbb
sbb
jle
push
shlb
rorl
add
out
mov
subl
mov
add
or
push
enter
add
jl
int3
lcall
movsb
add
outsl
lods
js
lods
add
notl
ffreep
and
in
add
push
cmp
je
pusha
pop
sub
call
cmp
dec
sbb
hlt
icebp
add
outsb
ret
dec
cld
mov
test
adc
lret
dec
hlt
pop
rorb
push
and
inc
es
add
inc
movsl
push
in
mov
xchg
test
cmp
stos
xor
loop
mov
loopne
jge
sbb
pop
shrb
mov
js
lock
inc
jmp
aaa
sbb
push
mov
mov
mov
lods
jge
cmp
test
popf
lret
inc
inc
add
lret
mov
aam
sub
stos
in
cmp
push
mov
xchg
jl
add
sbb
add
pop
int3
adc
sysret
mov
loopne
mov
repz
shll
xchg
aaa
lret
pop
cmp
push
xchg
fidivrl
mov
add
roll
pop
sub
add
repz
ss
pop
sbb
mov
push
dec
test
jmp
add
inc
sarb
add
leave
sbb
fiaddl
pop
push
mov
insb
xchg
and
into
test
push
cmp
fldl
stc
mov
add
push
push
xchg
sbb
test
out
cli
sbb
and
jb
xor
cmp
test
add
push
popf
sti
les
and
add
cmp
out
pop
jb
inc
std
xor
pop
push
add
xor
sti
and
and
mov
add
push
pop
mov
sbb
cmp
dec
scas
push
mov
movsl
cmp
movsb
shrb
outsb
ret
sarb
fistl
mov
adc
bound
adc
shlb
cmp
popa
mov
sti
dec
inc
add
jnp
inc
out
add
int3
inc
fldl
jbe
adc
jp
mov
test
or
sub
iret
sbb
add
xor
jge
add
push
sbb
xchg
and
or
and
xchg
sbb
sub
rcl
cmp
add
cs
int
adcb
xchg
jecxz
decl
mov
and
stos
xor
subb
fs
cwtl
or
xor
test
cli
mov
mov
xchg
fstpl
adc
ret
push
mov
xchg
or
add
jbe
pop
aaa
leave
pop
push
jb
dec
cmp
lock
insl
sub
in
cmc
cmp
and
pop
xorb
pop
or
call
imul
arpl
push
rclb
fs
test
inc
lods
or
push
loope
add
adc
mov
imul
add
notl
out
mov
and
add
fisubrl
mov
jl
xor
xorb
add
rorb
int
sbb
stos
inc
roll
clc
or
jns
adc
dec
mov
sbb
xor
bound
stos
call
cmpsl
sub
xchg
test
repz
int
add
and
fs
xchg
sub
mov
add
test
pop
mov
add
insl
sbb
adc
add
hlt
jb
cmp
sub
movsl
push
xor
sub
xor
aam
push
jnp
roll
or
movsb
jp
loopne
call
add
and
cmpsl
push
adc
push
rolb
add
mov
add
jo
xchg
cmp
repz
dec
cmpsl
loop
push
imul
js
hlt
call
setl
lea
inc
mov
orl
fdivrl
es
push
adc
xchg
sbb
enter
insl
add
cmpsb
insb
cld
push
pop
push
push
dec
xor
push
mov
decl
xor
xchg
jmp
mov
and
lock
mov
mov
lds
jmp
pop
mov
punpckhbw
stc
scas
xor
lods
pushf
xor
les
add
xor
int
xchg
movsl
rcrb
lds
or
addb
daa
adc
mov
inc
stc
fsubl
movsl
and
dec
ss
ljmp
sbb
mov
pop
adcl
lea
jns
nop
or
pop
jns
cs
fnsave
or
add
pop
stos
push
push
add
xchg
pop
in
in
cld
lret
sbb
push
inc
xor
add
lea
add
sbb
dec
push
add
cmp
dec
mov
adc
test
mov
adc
fdiv
cmp
or
sti
add
adc
dec
or
je
cwtl
sub
sbbb
inc
hlt
xorb
cmpb
mov
mov
dec
ss
push
mov
mov
addr16
push
mov
sub
rolb
in
sbb
sahf
fwait
xchg
lea
pushf
cmc
jb
pop
out
pop
jmp
in
mov
dec
cltd
or
inc
hlt
and
lock
lret
or
mov
jmp
aaa
add
dec
mov
or
out
xchg
adc
jmp
jp
or
push
xor
add
jno
mov
jnp
xor
sub
inc
add
out
mov
adc
lods
fisttpl
push
mov
mov
dec
pop
inc
mov
add
cmp
push
in
test
and
cli
sub
mov
scas
test
pushf
push
xor
sti
inc
test
jnp
cld
push
jl
add
pushf
push
add
sarb
add
add
in
pop
jg
lcall
xchg
mov
dec
repnz
and
adc
loopne
and
lock
cmp
call
inc
mov
mov
lret
xchg
ljmp
sub
mov
xorps
or
test
cmp
ljmp
ss
add
jle
xchg
scas
push
add
stc
pop
push
xor
je
sub
icebp
lfs
xlat
test
xchg
xchg
hlt
add
and
int3
push
pushf
pusha
cmpsb
sbb
mov
sub
scas
dec
cmp
ret
jb
or
add
adc
pop
cltd
add
aas
xchg
dec
xor
push
fwait
mov
add
sti
and
outsl
adc
sbb
inc
fwait
mov
stc
xor
mov
xor
cmp
into
mov
push
int3
fwait
pushf
jmp
mov
lock
add
push
pushl
or
insb
stc
daa
subl
push
pusha
dec
jge
cli
flds
dec
js
adc
sub
mov
pop
xor
or
or
pushf
std
add
ret
dec
fucomip
xchg
and
jnp
aam
dec
data16
call
jno
sbb
mov
sti
and
dec
sub
jb
fimuls
pop
shll
cmp
bound
cmpb
push
sbb
cltd
lock
arpl
mov
mov
add
mov
cmp
and
push
add
mov
adc
test
add
in
movsl
mov
insl
add
icebp
pusha
sbb
mov
mov
cmp
cs
stos
dec
movb
jl
cmp
cbtw
repz
shlb
cmp
xor
adc
aas
mov
pop
push
aad
jecxz
inc
cmp
stos
cmp
xchg
js
sbb
sbbb
add
jecxz
call
xor
add
lds
sub
adc
int3
fdivs
jge
hlt
mov
jne
lock
push
test
fcmovnbe
mov
xlat
es
add
pop
and
call
add
cs
outsl
add
and
in
shlb
add
xchg
push
test
mov
or
ss
cmp
mov
inc
adc
push
and
pop
pavgb
pushf
loope
xchg
push
add
bound
movsb
dec
xchg
fildll
jnp
cld
or
jp
nop
cmp
pop
adc
iret
loopne
fcmovnu
add
ja
or
daa
add
jo
xor
hlt
adc
addb
xor
lods
loope
sub
sbb
xor
dec
es
int
add
lock
push
out
push
dec
adc
shrb
icebp
pop
add
adc
jmp
ja
push
or
inc
jae
scas
push
ret
mov
pusha
arpl
push
sub
les
pushf
jb
outsb
or
push
pop
out
lea
rol
aad
add
jmp
pop
sbb
push
test
and
inc
test
arpl
jl
int
fidivl
dec
andl
sub
shr
push
test
and
mov
add
jge
data16
iret
enter
xor
mov
loopne
mov
adc
cmp
inc
jmp
shl
ljmp
sbb
dec
mov
movsb
add
or
stos
sar
enter
sbb
xchg
in
call
and
jmp
cli
add
and
imul
inc
sub
outsb
shll
add
movsl
fildl
test
aam
ficompl
loopne
movsl
test
inc
out
add
xor
add
aad
int3
or
loopne
or
adc
outsb
pop
pop
or
out
sbb
gs
lock
add
mov
enter
imull
hlt
rorl
inc
cltd
orb
adc
pop
push
jp
shl
sbb
push
mov
add
push
std
and
mov
ljmp
sub
dec
add
pop
mov
push
and
and
mov
or
cwtl
pop
or
inc
subl
jb
pop
mov
mov
cmpb
mov
and
imulb
shlb
add
test
es
cmp
adc
xchg
je
jecxz
mov
lock
adc
loope
inc
add
adc
lcall
aad
test
test
insb
inc
shlb
cmpsb
fidivl
mov
loopne
cld
sarl
ret
pop
sar
pop
mov
arpl
xchg
clc
lahf
push
add
sbb
faddp
inc
mov
pusha
xor
into
cmpl
popl
and
xchg
add
cmp
xor
clc
push
xor
loope
js
mov
dec
lret
imul
pop
mov
sub
movsl
push
fistps
push
mov
add
jge
add
pop
loopne
mov
fdivs
aam
add
sbb
add
int
push
push
icebp
or
mov
sbb
pusha
inc
push
test
mov
stos
sbb
out
andb
sbb
call
dec
pop
cli
mov
int3
gs
push
test
mov
add
jo
test
and
pop
stc
fstps
cmpsb
fsubr
pop
pop
add
inc
pop
sahf
in
fcmovnb
adcb
adc
sbb
imull
sub
repnz
call
test
mov
add
mov
sub
xlat
in
pushf
cmp
add
sbb
pusha
pop
adc
ss
jle
add
or
fsubrs
movsl
add
loope
pop
sbb
outsb
punpcklwd
cld
pop
or
cmp
data16
mov
jne
add
sub
jecxz
dec
pop
adc
mov
xchg
shl
mov
add
cltd
jmp
cs
mov
pop
add
pop
mov
cwtl
sarb
out
add
or
pusha
and
dec
add
sbb
xor
or
dec
or
pop
lods
adc
aam
add
pop
arpl
js
add
clc
pop
imul
dec
pop
mov
add
jle
mov
push
jmp
add
repnz
movsb
sub
push
clc
add
adc
repnz
or
loop
add
or
shlb
cmp
stc
xchg
pop
jl
out
cmp
push
lcall
rcrl
add
jae
push
push
xchg
jmp
mov
sbb
jge,pt
cmp
and
sbb
sbb
sbb
shll
add
jno
add
mov
ret
lret
xor
push
xor
out
xor
iret
lock
rorl
enter
lret
loopne
stos
xchg
jno
add
jle
mov
push
push
arpl
gs
out
rorb
add
jb
mov
mov
add
addb
div
cmp
arpl
mov
mov
aaa
add
js
popa
inc
ljmp
pusha
outsb
jno
fsubrl
mov
out
popa
add
inc
sbb
cmp
sub
sbb
or
aas
loopne
in
adc
push
aam
shrb
std
add
aaa
mov
enter
dec
je
add
sub
pop
or
cs
movsl
rolb
shl
pop
mov
bound
out
lret
in
divb
jecxz
mov
sub
fmull
cmpsb
test
insb
push
add
pop
cmpsl
addb
push
jb
and
fs
mov
add
sub
mov
outsb
sbb
psubusw
sbb
pop
xchg
add
xchg
mov
sub
dec
mov
add
mov
xchg
enter
jnp
aad
add
push
mov
aaa
push
iret
std
out
ficoms
sub
mov
ljmp
int
stc
data16
push
or
test
das
shrb
pusha
add
pop
imul
add
les
push
pop
fwait
adc
add
adc
sti
dec
mov
and
cmc
xor
pop
je
out
adc
push
les
push
and
add
xchg
mov
mov
iret
andl
pop
test
push
rclb
nop
add
leave
popf
lahf
pop
gs
rcrb
movsw
push
pop
mov
fsts
ffreep
es
or
add
inc
imul
rcrb
cmp
mov
sti
ja
pop
jno
push
jp
add
or
add
ljmp
xorb
cmp
cmp
cmpb
jl
ret
flds
cld
int
push
orl
mov
push
fwait
cmp
test
pop
jmp
sbb
cmpsl
mov
iret
mov
mov
mov
enter
icebp
imul
fimuls
inc
add
xchg
add
jnp
push
xor
mov
aaa
mov
add
loop
add
in
xchg
sbb
mov
fwait
rcrl
fistpll
leave
inc
adcb
cltd
addl
mov
add
lea
inc
jl
shlb
fs
pusha
sbb
inc
gs
mov
negl
sti
mov
sbb
stc
incl
sub
mov
jno
pop
scas
les
test
sbb
jg,pn
shrb
mov
fwait
and
push
in
mov
xchg
sbb
cmp
jmp
ret
add
dec
jne
andl
mov
repnz
adc
sub
xchg
adc
xchg
sbbl
rcrb
out
les
in
out
cmpb
and
add
xchg
mov
sbb
push
popa
nop
and
mov
scas
xchg
ret
pop
push
jnp
sub
fsubl
cmp
vpaddw
push
and
aaa
lret
xchg
add
or
aam
cmpsl
add
xchg
jle
pop
mov
xchg
in
add
ds
hlt
fwait
out
push
pop
clc
jb
iret
and
std
ss
inc
push
pusha
mov
push
out
sub
adc
leave
cmpsb
fs
nop
add
fisubl
push
test
enter
add
dec
mov
add
cmc
push
push
aad
arpl
or
pop
adc
xlat
imul
push
repz
les
add
test
sub
sbb
loopne
cmp
movsl
push
cld
lret
aad
imul
jle
pop
inc
jp
add
xor
push
xor
in
xchg
pop
int3
setbe
and
repnz
dec
repz
pusha
or
add
mov
fcompl
flds
sbbb
mov
or
jge
mov
push
aaa
dec
pop
andl
adc
out
xchg
sbb
andb
push
mov
inc
mov
and
pusha
cmp
sbb
mov
aad
rorl
cmc
xor
and
add
fwait
xchg
cltd
ret
pusha
adc
addl
and
inc
test
cmc
fdivrs
lock
fidivl
jmp
jle
mov
cmp
movl
push
in
mov
inc
add
test
je
or
cmp
inc
mov
pop
or
cwtl
scas
sub
pop
in
adc
inc
movsb
mov
jg
rolb
add
xchg
sub
add
dec
pop
cmp
outsb
xchg
lods
add
mov
sti
ret
xlat
mov
das
inc
int
add
xchg
push
mov
ja
test
std
cmpsb
popa
inc
adc
bound
out
out
inc
cs
xchg
scas
xor
cmp
add
lods
int
rorl
cli
push
add
push
andb
test
push
push
bt
xor
add
shrl
and
and
in
fsubs
push
sub
cmp
inc
xchg
sbb
adc
test
push
cmp
loopne
mov
add
xchg
lret
loope
sub
fs
mov
aas
cmp
sbb
jb
mov
xor
pusha
test
add
out
mov
add
or
cmpsl
movsb
arpl
clc
dec
sbb
addl
jbe
add
lcall
out
scas
add
mov
inc
sbb
es
repnz
leave
lds
add
ljmp
mov
inc
mov
sbb
push
leave
add
pop
sub
push
out
in
push
xchg
adc
mov
mov
and
xlat
mov
mov
aam
cmpl
xchg
or
cld
xchg
in
jle
add
sti
lods
outsb
sbb
xchg
stc
mov
rcrb
fxch
xor
test
imul
fdivl
adcb
rcl
cmpb
fsubrs
loop
fs
sbb
push
sbb
int
mov
pushf
pop
pop
sub
push
out
or
mov
mov
test
in
sbb
js
imul
add
xchg
dec
aas
out
push
out
jo
lock
xor
fs
dec
jmp
cltd
aad
sbb
pushf
movsl
add
jae
pop
push
mov
dec
cmp
push
mov
mov
add
loopne
xor
cli
cwtl
nop
jecxz
dec
imul
les
test
cmpsb
jmp
or
pop
push
arpl
dec
test
jns
add
fdivrs
inc
add
xchg
push
push
pop
fiadds
mov
adc
stc
adc
cmp
adcl
icebp
add
imul
adc
add
or
cmp
aam
clc
cltd
test
repz
xor
jne
xor
decl
push
mov
sbbl
cli
sahf
icebp
inc
add
pusha
notb
lods
mov
xchg
clc
mov
daa
jmp
sbbl
and
fwait
mov
xor
clc
cmp
adc
or
jecxz
cli
lret
mov
int
movsb
dec
fwait
es
inc
shlb
inc
add
loopne
or
neg
pop
add
or
test
std
lahf
and
fld
inc
aaa
into
cmp
and
rorb
pop
jp
nop
clc
or
inc
int
mov
fmuls
xlat
dec
push
xor
adc
fists
out
jl
pop
aaa
sub
add
out
push
cmpsb
enter
pop
enter
shl
xchg
add
sub
cmpb
arpl
es
xor
cld
movsb
or
rol
inc
xchg
scas
xchg
movsb
jg
roll
push
cmp
jl
and
sub
in
je
add
jecxz
mull
mov
mov
rcl
mov
lahf
mov
je
nop
je
cmpsb
inc
add
mov
xchg
cmc
lea
mov
push
push
xor
cltd
add
or
push
jo
jns
add
jno
movl
leave
in
rolb
mov
call
testl
aaa
cmp
xorb
push
sbb
inc
sub
dec
jg
dec
mov
jmp
dec
pop
rclb
ret
lahf
add
xchg
lret
and
push
shrb
imul
inc
mov
daa
addl
or
or
sub
mov
loop
or
loope
pop
in
cmp
addb
cmp
into
adcb
lods
add
iret
loope
cmp
sbb
sub
shlb
fs
ffreep
fmuls
cmpsb
cmc
sub
pop
ds
dec
adc
dec
das
scas
mov
or
stos
ss
icebp
cmp
add
xchg
cld
jp
mov
add
pop
or
imul
hlt
int
out
add
stos
ret
jbe
in
adc
mov
jae
push
pop
push
mov
add
sub
repz
xchg
inc
fistps
repnz
out
sub
or
fdivrl
xchg
and
add
add
mov
pop
xor
leave
adc
sbb
jle
loopne
rclb
dec
popa
pop
pop
sub
in
jnp
stos
mov
rep
and
aam
sbb
xlat
shlb
fldcw
fwait
pop
and
add
or
sbb
movsl
rclb
lret
push
adc
mov
add
adc
xor
es
push
cltd
testl
add
jge
inc
movsb
mov
stos
mov
lods
cmp
xchg
add
sarb
sbb
inc
imul
lahf
popa
sub
push
cmpsb
arpl
invd
push
push
incb
enter
les
sbb
jge
push
or
add
add
out
ss
or
movsb
adc
sub
test
cmp
jl
and
xorb
add
xor
xor
add
push
sub
test
sub
add
inc
and
idiv
push
sar
ja
add
or
pop
add
div
push
faddl
popf
add
mov
aaa
lods
dec
inc
data16
add
pop
subl
fwait
insb
and
push
cmp
shlb
loop
add
fldenv
mov
icebp
mov
pop
lea
add
ja
inc
jns
inc
sbb
jmp
add
aaa
mov
or
and
add
mov
push
enter
add
sti
jp
imul
fiaddl
insb
loopne
xchg
xor
pop
push
xor
mov
jecxz
inc
mov
bound
sbb
imul
pusha
or
subl
cs
or
xchg
out
ds
hlt
aad
sbb
pushf
or
and
cmp
add
push
mov
addr16
jae
add
gs
adc
jl
cmp
shll
xor
cltd
xor
in
leave
shlb
mov
push
xchg
sub
push
jne
add
mov
mov
out
cwtl
ljmp
addl
add
ss
xchg
jae
sbb
push
jnp
xchg
ljmp
std
add
dec
mov
jmp
push
or
movsl
mov
mov
mov
repz
add
shr
lea
mov
xor
je
bound
add
lods
lds
cmp
sub
and
sub
js
dec
mov
or
add
push
ss
xchg
and
xlat
sub
popa
mov
loope
or
movsbl
mov
sbb
mov
xor
cmpsb
xchg
and
leave
sub
or
inc
mov
incb
pop
popa
xchg
cmp
xchg
add
mov
popf
pop
aas
dec
dec
xchg
sbb
fmul
lret
xchg
inc
jge
pusha
dec
jo
cld
mov
add
lcall
pusha
mov
imul
insb
mov
and
inc
mov
push
push
mov
pop
inc
mov
inc
cld
add
lods
loope
fimull
or
pop
mov
fcoms
or
bound
add
or
movb
xor
pop
repnz
mov
shl
push
jl
popa
lods
mov
orb
pop
pusha
scas
add
jne
lret
data16
nopl
test
sub
je
add
lcall
out
in
mov
leave
rolb
mov
imul
cmp
mov
push
cmp
push
or
xor
jl
pop
add
aad
aam
mov
add
mov
subb
xchg
sub
dec
loop
int3
ljmp
sbb
add
pop
push
and
mov
mov
jge
add
stos
adc
push
mov
adc
pushf
jp
push
ds
flds
sbb
pop
andb
and
stc
out
pop
inc
ret
int3
sbb
stos
sub
cmp
xor
insb
adc
cmp
add
pop
cmpsb
dec
add
dec
push
and
or
xchg
xor
sbb
push
pop
xor
jbe
inc
add
aam
rolb
xor
sub
mov
cmp
and
mov
jg
out
clc
sarb
mov
lahf
mov
cltd
add
jecxz
xchg
out
sbb
popl
stos
bound
ds
pop
jo
xchg
or
decl
adc
push
adc
cvtdq2ps
in
ret
int
scas
pop
push
in
ret
nop
test
popa
cmc
add
into
pop
mov
loope
cwtl
sahf
lret
jmp
or
lahf
mov
jo
fcmovbe
jns
push
call
rcrl
add
adc
dec
outsb
ljmp
fs
out
call
ret
roll
fstps
aaa
cmp
push
pop
out
add
sbb
mov
or
xchg
aad
xor
and
jp
cs
loope
ja
dec
enter
and
enter
or
dec
xor
or
call
inc
add
sbb
dec
fisttpll
subl
xor
andb
pop
pop
lock
xchg
mov
xchg
repnz
xor
cld
push
ss
dec
test
lret
adc
js
inc
pop
xchg
movsb
fs
dec
sub
inc
cmp
movsl
out
cwtl
xchg
mov
xchg
inc
mov
push
or
add
pop
sub
out
testl
mov
mov
jmp
inc
inc
add
sbb
mull
ja
bound
mov
into
and
cmp
and
inc
lock
out
xor
lds
cmpsb
dec
mov
or
shrl
enter
nop
mov
add
loope
inc
add
adc
jns
aas
cli
test
adc
add
jmp
test
lods
cmp
push
ja
sbb
movsb
sub
cwtl
add
shll
xchg
adc
test
mov
lods
fwait
popf
add
pop
dec
pop
xchg
loopne
nop
mov
addr16
ja
jbe
or
sbb
and
loopne
xor
andl
shll
fsubl
and
sbb
adc
jle
or
push
data16
lcall
ja
mov
pop
ret
imul
cli
loopne
inc
mov
fadd
insl
mov
jno
push
or
push
fsubrs
leave
out
pop
shll
shrb
push
shrd
repnz
inc
mov
push
adcb
jmp
imul
jl
add
push
add
inc
mov
fmuls
add
pop
test
in
rorl
cltd
movsb
nop
sub
in
mov
fs
xlat
xchg
mov
test
popa
or
fdivrl
mov
movb
fldl
std
mov
add
lock
ss
sub
push
mov
enter
jp
js
sbb
cmpsb
nop
dec
testb
shlb
popf
ja
jg
push
cld
mov
nop
andl
push
rol
fsubs
imul
sub
jl
js
mov
filds
dec
fstpt
add
or
xor
test
imul
pop
popf
xorl
jns
mov
jecxz
push
loope
add
inc
xor
add
clc
xor
loop
fidivrl
cltd
cmpsb
fidivs
mov
inc
mov
sbb
push
fwait
and
inc
push
inc
fbstp
sti
push
pusha
cmp
imull
xor
xor
ljmp
adc
outsl
in
mov
sub
mov
test
push
cld
jns
repz
dec
dec
dec
add
push
repnz
push
test
jo
ud1
pop
add
mov
je
add
mov
jne
ds
sbb
sub
in
arpl
push
les
mov
jl
pusha
call
mov
and
loope
add
test
sub
cmp
inc
sub
repnz
inc
andl
and
into
stos
sub
mov
mov
pop
stos
fs
test
add
loopne
fidivrs
movsb
push
xor
ud0
pop
mov
mov
into
add
fmuls
call
or
loop
cmp
jg
jmp
mov
push
push
out
in
mov
adc
add
jmp
ficomps
add
into
iret
pop
mov
jbe
test
cld
push
hlt
jo
pop
ror
mov
nop
and
adc
mov
in
add
fisubs
and
mov
enter
or
int
jecxz
pusha
sub
xchg
add
into
clc
and
sbb
or
imul
icebp
xchg
mull
add
aam
xchg
scas
orb
mov
mov
push
insl
inc
pop
add
and
lds
push
or
lock
pop
adc
jge
pop
pop
dec
adc
jecxz
test
jge
push
mov
inc
mov
inc
xor
pop
rcrb
dec
mov
add
pop
mov
shrb
cmp
data16
addb
subb
xchg
inc
dec
or
and
outsb
into
or
rorb
push
dec
inc
adc
xor
jmp
sbb
lods
mov
add
or
inc
mov
in
ljmp
inc
repz
mov
int3
movsb
int
pop
hlt
es
or
popa
ret
mov
add
jp
xchg
inc
repnz
dec
mov
jns
iret
pop
scas
sub
inc
pop
xlat
xor
and
scas
shll
fstl
sbb
arpl
jmp
xchg
js
cmpsb
adc
call
arpl
mov
sub
jo
testl
mov
dec
sub
nop
add
push
hlt
out
scas
popa
add
imul
lahf
out
and
add
xchg
dec
aaa
or
add
int3
mov
cmp
cmp
sbb
and
inc
scas
xor
mul
adc
inc
aas
mov
sub
popf
push
sbb
or
lods
push
ficoms
sub
add
sub
mov
rolb
test
lret
aaa
fisubrs
lock
add
nop
mov
add
ret
ret
fnstenv
mov
or
imul
fstpt
mov
sub
dec
fcomip
fiaddl
sub
inc
xchg
mov
xorb
xchg
pop
ljmp
xchg
mov
add
pop
jg
lcall
mov
in
add
jle
inc
or
inc
jo
sahf
add
icebp
loop
add
mov
xor
data16
leave
cmp
jo
add
inc
jecxz
add
mov
into
inc
dec
mov
dec
adc
add
out
jnp
stos
shl
pop
push
addb
aas
nop
cmpsb
jg
or
cltd
push
cwtl
xorb
inc
movsb
cmp
inc
push
mov
jecxz
or
and
or
std
ljmp
jmp
dec
pop
xorb
aam
loop
les
xchg
or
mov
rol
arpl
or
or
andb
dec
sahf
xor
ffree
lds
sbb
fadds
das
pop
out
sbb
outsl
out
cltd
jl
in
pop
add
xchg
outsb
popl
orl
dec
rcll
jo
adc
sub
lock
xor
rcl
mov
jecxz
testl
jnp
mov
jle
outsl
push
xor
cltd
push
add
enter
lar
js
outsl
mov
es
inc
xchg
idivb
dec
fisttps
and
push
push
in
add
add
push
dec
xor
ljmp
or
jl
add
leave
in
hlt
pop
ret
add
je
adc
gs
xchg
pop
sub
push
loop
pop
dec
mov
clc
xor
lock
outsl
nop
xchg
add
lret
cli
add
add
push
inc
nop
xor
ja
mov
scas
or
add
das
add
cmp
add
xchg
iret
add
loopne
sbbl
pop
xor
mov
mov
dec
vpackuswb
mov
sbb
sub
shrb
and
add
scas
aam
sbb
clc
lods
shll
mov
sub
nop
add
cltd
or
xchg
or
add
push
mov
add
add
sti
loope
add
or
ret
enter
gs
push
pop
or
sbb
loop
mov
xchg
cmpsb
outsb
lds
es
add
cmp
xchg
test
test
inc
or
jb
xchg
lock
in
push
pop
call
cmp
clc
mov
jne
or
pop
pop
jg
movsb
stos
jno
test
jae
test
dec
mov
mov
repnz
cmp
mov
cmp
shl
add
xchg
in
jg
ret
fs
cltd
pop
pusha
push
aas
mov
inc
jecxz
enter
sub
inc
mov
test
mov
add
jp
out
push
pop
ret
inc
clc
movsl
add
and
notl
add
stos
inc
loopne
repnz
push
mov
dec
out
jl
add
push
push
cmp
lock
fdiv
fs
jmp
jl
testb
int
fisubl
stos
jo
sub
mov
out
fnstsw
add
faddl
mov
lods
inc
imul
xchg
add
lock
dec
mov
dec
xchg
scas
cmpb
iret
dec
addl
rcrl
orl
movsb
push
icebp
scas
pop
es
aaa
inc
fucom
and
lret
jo
xor
jne
push
pop
lods
mov
dec
add
daa
insb
filds
xchg
dec
in
push
mov
or
iret
push
push
and
mov
inc
push
inc
hlt
jnp
int3
pop
add
aas
pop
jne
sbb
mov
push
xchg
jae
nop
fs
aad
and
add
xchg
pop
push
dec
mov
pop
imul
cmpsl
repz
iret
push
scas
leave
shlb
mov
or
jbe
test
out
les
xorb
lea
divl
mov
sbb
sub
es
stc
sub
mov
adc
push
dec
adcb
sbb
cmp
jb
push
xchg
out
je
pop
add
xchg
sbb
ljmp
add
adc
push
ss
and
mov
rcrb
sub
pop
sub
call
jmp
jp
push
bound
pop
mov
fcmove
aaa
xchg
push
jae
xchg
and
inc
cmc
cmp
sbb
int
cli
cwtl
adc
xchg
add
sbb
mov
sbb
lods
add
test
add
xor
das
dec
les
repnz
into
xchg
imul
loopne
push
ret
cmp
sbb
mov
je
mov
inc
rorl
adc
jno
inc
or
pop
test
sbbl
dec
jl
mov
sbb
sub
shl
subl
scas
std
add
mov
mov
mov
mov
sbb
hlt
popf
inc
mov
fwait
sti
inc
imul
call
sbb
xchg
and
xor
lret
xchg
jge
jne
mov
and
roll
fistl
subl
xor
aas
jmp
into
push
push
shll
aaa
pop
bound
pop
mov
xchg
and
jg
in
rorb
enter
aaa
dec
pop
sbb
jge
outsl
leave
or
or
xor
pop
mov
adc
call
mov
and
mov
cmp
pop
movsl
aaa
loope
xor
adcb
jg
xor
xor
into
cltd
pop
sbb
hlt
jne
jae
mov
mov
leave
mov
loope
enter
stos
mov
inc
gs
leave
jl
arpl
clc
loopne
add
adc
cmpb
sub
sbb
mov
pop
push
cmp
and
repz
xchg
sbb
cmp
push
js
sbb
add
mov
adc
movsb
mov
imul
add
push
pop
pusha
and
aad
xchg
loop
pop
pop
mov
and
cmp
or
lods
addl
pop
sbb
in
pop
notb
lea
add
cmp
and
js
mov
lods
enter
sub
and
add
fucom
cmp
xchg
mov
clc
ret
shlb
sti
cwtl
inc
fcompl
std
int3
fidivs
loop
cmp
push
xchg
rclb
mov
add
mov
sbbb
add
xchg
pop
rclb
lcall
andb
inc
dec
negl
enter
andl
inc
jbe
push
fsubrl
adc
dec
add
mov
push
cli
pop
xor
xchg
test
mov
jns
xor
incb
add
dec
mov
mov
add
cmovle
dec
jecxz
in
adc
pop
sub
inc
insb
pusha
popa
mov
add
jns
or
cltd
inc
and
xchg
insl
popl
mov
push
dec
ret
call
ret
loopne
loope
lea
mov
add
pop
dec
jne
mov
pop
jno
push
ljmp
stos
add
sbb
adc
add
push
xchg
xchg
pushf
fs
cmp
js
pop
test
sub
or
nop
inc
push
and
leave
sbb
jp
sbb
cmp
sarb
jnp
add
sub
dec
call
add
cld
cmp
imul
xor
into
xchg
mov
inc
inc
inc
cmp
add
iret
mov
test
sbb
rolb
xchg
lea
pop
and
movsl
inc
add
test
adc
cmp
stc
fstpt
lret
aaa
push
rorl
and
fcmovbe
mov
lahf
push
inc
mov
fnstsw
xor
stos
and
xchg
push
inc
xorb
mov
pop
adc
push
outsb
fnsetpm(287
loopne
call
and
cmpb
or
sarl
movsl
pop
xrelease
mov
or
cmp
subb
mov
push
pusha
test
add
inc
and
testl
xor
add
cmp
loope
or
cmp
inc
dec
filds
test
dec
push
hlt
cmp
pop
add
push
jnp
mov
inc
mov
add
adc
pop
xor
jle
pop
stos
orb
addb
xor
dec
pop
mov
lcall
popa
add
mov
ja
pusha
pop
inc
mov
mov
add
mov
jno
add
xchg
and
push
jp
out
jl
xchg
pop
stc
insl
pop
add
stos
cmpsl
inc
loope
add
jg
test
and
xchg
stc
push
adc
add
sub
fcomps
std
sub
loopne
hlt
mov
dec
repz
add
pop
mov
push
jbe
lock
cmp
sbb
ds
fmull
sub
icebp
mov
clc
das
cmp
adc
je
mov
repz
rcrb
add
adc
insb
adc
faddl
ss
roll
popa
cmp
adc
lcall
and
iret
pop
cmpsb
or
daa
popf
nop
repnz
aam
flds
arpl
cmpsb
sbb
cmp
dec
jo
and
mov
push
add
cmp
mov
cltd
and
imul
aam
icebp
sub
xchg
cmc
test
sbb
lock
lea
pop
roll
mov
jb
sub
add
cmp
inc
out
push
repnz
mov
adc
add
fsubrl
xor
call
mov
into
jl
add
cmp
pop
gs
lods
sbb
and
js
adc
jp
mov
fildll
aam
addr16
arpl
aas
testb
mov
flds
jnp
loopne
sti
mov
loope
push
mov
sbb
js
jle
pop
test
add
xchg
loopne
iret
jecxz
push
sbbl
or
mov
pop
jb
sbb
inc
call
neg
roll
mulb
rcrl
sub
ret
mov
dec
or
xchg
pop
ds
jge
push
inc
or
icebp
jl
in
xchg
xor
in
cmp
daa
adc
hlt
pop
incl
int3
jmp
shlb
add
cmp
cld
shl
mov
mov
pop
lcall
ljmp
push
pop
cwtl
add
in
mov
add
repnz
je,pt
add
cli
int3
call
push
mov
push
arpl
cmpsl
adc
bnd
xor
fnstenv
inc
pop
add
and
cwtl
mov
add
lock
iret
ss
cmp
dec
stos
push
mov
sub
pop
push
jno
movsb
jmp
xchg
xor
sub
sub
or
jo
xor
shll
add
call
jle
jno
adc
mov
out
mov
pop
dec
inc
sub
and
xor
insl
data16
jb
leave
add
or
add
int3
pop
xchg
ficompl
fldcw
pop
add
jno
pop
js
loop
mov
mov
mov
test
sbb
decb
in
xchg
sub
cmp
shrl
lret
cwtl
incl
jl
pop
adc
das
fildl
insl
sub
add
sub
pushf
jb
lret
cmp
inc
mov
add
dec
in
push
hlt
xor
mov
push
push
push
imul
jne
flds
icebp
mov
adc
je
push
pop
scas
inc
enter
dec
in
nop
jge
rorl
or
sbb
vmaxpd
stos
inc
sbb
xor
pop
jle
ret
mov
jns
xor
lds
gs
mov
add
mov
int
push
mov
xor
jne
jp
adc
cmp
lret
rcrb
pop
sarl
aaa
mov
cwtl
push
push
adc
adc
xor
jle
adc
dec
inc
enter
mov
push
adc
je
xor
data16
jbe
xor
xor
mov
test
mov
cli
in
add
call
movsl
dec
shl
sbb
in
xor
call
dec
push
pop
loop
or
and
pop
adcl
in
jbe
adc
loope
push
mov
mov
xchg
cmc
add
cmp
scas
sbb
int3
fcmovu
xchg
add
or
cli
lock
adc
xor
cld
test
addl
ljmp
out
in
add
adc
ret
aad
sub
jns
fdivp
mov
jmp
clc
inc
add
inc
or
cmc
dec
in
sbb
push
pop
neg
and
sub
mov
test
cmp
pop
mov
xor
or
xchg
shlb
mov
dec
dec
ret
xor
enter
pop
hlt
sub
scas
nop
pcmpgtb
xchg
xor
jns
lods
inc
add
mov
cmp
out
loop
fwait
push
pop
rorb
or
loopne
test
test
testl
lock
subb
shlb
cmc
and
out
mov
out
in
adc
or
xor
inc
std
adc
mov
sub
push
cmc
adc
cmp
add
pop
jl
ret
mov
icebp
neg
and
aaa
dec
xchg
sarb
test
movsb
add
nop
pop
or
add
jmp
lock
jge
cmp
test
scas
add
cmp
mov
orb
test
jae
mov
pop
cli
inc
push
xchg
xor
cld
add
cmp
xchg
mov
mov
imul
shrb
cmp
cmp
mov
cmp
or
pop
jge
loop
pushf
sbbb
jo
or
pop
pop
sbb
dec
jle
lret
push
sbb
out
popa
push
ret
mov
and
xor
or
push
dec
add
scas
loopne
jp
mov
mov
add
sar
or
jno
mov
nop
jb
pop
les
xor
call
push
cmp
mov
adc
jbe
adc
pop
mov
shlb
test
lock
outsl
int3
jge
dec
call
cld
cmp
sub
in
jns
jl
add
stos
mov
je
xchg
lods
orl
xchg
ret
icebp
popf
adc
or
add
xchg
or
lock
cmpsb
stc
mov
add
mov
xor
in
loop
lea
xor
call
dec
lods
jnp
dec
and
hlt
nop
push
adcb
adc
pop
insb
lcall
dec
push
pop
repz
jb
cmp
dec
sbb
nop
cmp
fwait
add
mov
js
pop
and
jns
sub
pop
sub
add
cs
mov
imul
adc
push
xchg
jnp
mov
dec
cld
inc
adc
adc
lds
dec
mov
push
out
lock
mov
mov
adc
add
leave
cmpsb
lcall
int3
or
ljmp
adc
and
add
push
dec
addl
ljmp
les
rorl
test
mov
jmp
cmp
aam
pop
add
call
lea
and
sbb
mov
leave
push
mov
pushf
rolb
adc
mov
scas
pop
mov
or
sub
shl
add
mov
mov
dec
outsb
xlat
dec
leave
push
rcr
pop
cwtl
pop
add
cmpb
loopne
cmp
movsl
push
mov
xchg
cmp
sarb
fnstsw
popl
shr
js
cmp
shrb
add
dec
and
sti
int
xor
and
cld
mov
xor
daa
test
mov
cmpsb
jne
inc
and
jns
pushf
dec
pusha
push
jmp
add
into
cmc
mov
sbb
jmp
adc
shlb
xor
and
out
add
fnstenv
xlat
cmp
ret
add
dec
sbb
push
sbb
addr16
and
in
rcr
orl
lea
insl
loopne
mov
pusha
fwait
mov
add
aaa
and
in
jbe
add
cmp
cwtl
jne
cmp
frndint
sahf
out
cmp
into
mov
dec
xor
clc
mov
push
add
loopne
sub
inc
frstor
push
andb
xor
pushf
xor
push
mov
je
xor
xchg
cmp
repz
inc
inc
and
inc
ffree
repnz
adc
mov
mov
aaa
mov
push
adc
data16
fnstsw
into
cli
out
mov
shrb
shll
xor
fsub
xor
ljmp
fadds
test
dec
sbb
iret
xor
int
arpl
sbb
enter
add
gs
pusha
push
xor
js
pushf
pop
sbb
add
and
jg
loope
xchg
cld
adc
mov
xchg
or
jbe
add
fadds
ja
repz
add
adc
and
inc
sub
divb
push
sbbb
ficoms
popf
xlat
pop
add
sti
push
andl
imul
add
test
inc
push
sub
dec
fbstp
jl
add
push
cmp
fmul
xchg
mov
sbb
dec
test
int3
clc
cmp
sbb
push
repnz
cmpsl
sbb
into
mov
mov
xor
loopne
cmp
mov
lcall
or
in
push
cs
aad
and
cmpl
push
fsubrl
ja
hlt
imul
inc
jge
xlat
and
sbb
dec
mov
fstps
dec
stc
pop
xchg
mov
xchg
cmp
fsubl
jle
sub
mov
lret
inc
mov
rol
or
cltd
fsts
nop
ret
and
or
push
mov
fdivrl
mov
xchg
enter
mov
add
jg
mov
pop
js
incl
push
and
or
add
xchg
jge
stc
stc
scas
cltd
and
mov
in
mov
sub
daa
dec
lret
mov
lock
mov
and
imul
les
adc
mov
and
aaa
sbbb
xchg
mov
rorl
xchg
pop
inc
pop
sub
sarl
mov
sbb
iret
pop
mov
arpl
sbb
mov
cmp
shlb
add
ja
aad
rorb
mov
scas
jae
sub
mov
cmp
pop
or
out
imul
out
leave
mov
out
data16
inc
loopne
hlt
aas
pusha
xchg
adc
movsl
cmp
jl
pusha
and
adc
add
cmpsb
mov
or
jmp
jle
cmp
lods
es
jo
enter
pushf
xchg
dec
pminsw
cs
push
enter
inc
pop
jns
xor
in
inc
das
push
jo
aas
add
mov
jle
and
xor
add
fsubrl
pop
xchg
nop
lock
and
cmp
test
jmp
xorl
mov
mov
orb
hlt
dec
jmp
mov
gs
movsl
ljmp
push
fs
inc
js
xor
jnp
pushf
xor
xor
and
leave
pusha
into
xor
test
cmc
xchg
jno
add
mov
daa
inc
fldcw
xchg
mov
sbb
push
jns
es
cld
pop
push
bound
ja
xchg
call
inc
mov
push
xor
int
cltd
inc
dec
call
addb
test
pop
sbb
int
ret
push
jno
dec
sub
fs
ds
fs
xor
xor
xchg
int
xor
into
test
or
loopne
xchg
mov
clc
and
sti
sbb
jns
pop
or
imul
mov
fwait
lahf
fcomip
mov
das
ja
out
add
mov
fwait
pusha
cmp
fs
jp
icebp
shll
push
jo
add
and
ja
test
aad
push
inc
das
mov
loopne
in
andb
or
clc
add
inc
sub
cmp
sub
repnz
adc
cmpsb
jmp
mov
loope
sbb
cmp
out
scas
sub
sbb
xchg
add
adc
mov
jl
pop
addb
add
ja
add
and
rorl
adc
inc
es
push
mov
shr
pop
sbb
mov
sbb
mov
and
mov
jbe
inc
add
imul
xchg
imul
in
mov
xchg
inc
jo
shll
add
mov
or
adc
and
sbb
pop
adc
add
data16
ja
or
dec
js
in
scas
xchg
xchg
fadds
mov
sub
push
sub
rol
mov
test
and
enter
js
mov
adc
or
add
sbb
movsl
mov
clc
add
fstl
les
sub
xor
and
dec
xor
mov
ret
add
icebp
mov
lcall
and
bound
test
and
lret
mov
or
xchg
or
xchg
xor
push
popa
es
pop
clc
pusha
dec
push
rcll
mov
and
mov
or
repnz
jns
scas
cmp
adc
mov
sub
sub
xor
sbb
pusha
lahf
cmpsl
mov
js
mov
mov
or
xor
lock
cltd
dec
fldenv
mov
jnp,pn
mov
add
aaa
sbb
push
or
lret
add
push
rcrb
enter
imul
add
mov
or
movsl
pop
dec
lret
in
stos
popa
rcrl
mov
lock
mov
mov
loop
xorb
daa
call
ja
dec
pop
clc
xor
cmp
jmp
add
pop
loope
mov
push
mov
test
push
mov
enter
sub
js
movsb
push
xchg
sub
inc
lods
adc
orl
mov
sbb
jg
fimuls
mov
dec
mov
or
loopne
cwtl
mov
fmuls
lock
and
cmp
and
and
pop
test
dec
leave
pop
clc
and
and
je
fistpl
adc
or
sub
andps
enter
xchg
or
nop
dec
sbb
rcrb
push
jnp
jle
aaa
push
xchg
rorl
or
sbb
or
out
jge
bound
out
int
sahf
jno
lock
ja
add
insl
sub
xchg
xchg
mov
fidivl
and
mov
mov
xchg
js
pop
adc
lahf
out
mov
lret
test
push
jl
ljmp
jo
gs
add
int3
pop
cmp
les
sbb
ror
popa
cmp
or
notl
push
test
aas
loopne
dec
adc
cld
jp
fstps
das
xlat
nop
and
jle
cmp
loope
shll
xor
cmp
push
pushf
inc
sbbb
add
jbe
mov
int
xchg
mov
ja
aam
dec
cmc
pusha
add
mov
gs
jg
jnp
add
js
aam
jnp
cli
add
xchg
cs
or
xchg
flds
adcb
pushf
dec
or
mov
pop
inc
mov
test
and
mov
sub
insb
ror
ja
hlt
adc
fsts
out
jo
addb
int3
xorl
jb
dec
mov
mov
dec
add
leave
ljmp
xor
sbb
aas
jno
lock
int
xchg
and
out
xchg
sub
outsl
lds
xchg
jbe
test
cmpsb
dec
pushf
inc
jo
xor
loopne
ja
pop
clc
adc
push
mov
cmp
in
arpl
lods
mov
inc
imul
movsb
ja
inc
push
in
rolb
es
imul
cmc
arpl
lcall
stos
jl
iret
and
addr16
jo
adc
jnp
push
movsb
inc
add
inc
sub
out
push
mov
xor
testl
mov
dec
mov
and
push
lock
pusha
pop
and
adc
jbe
vpmaxsw
lock
scas
push
jo
pop
fwait
dec
add
jno
loope
pop
js
pop
xor
ret
iret
inc
xchg
push
jmp
andl
aas
lret
cmpsl
in
test
lods
add
add
adc
xchg
xor
aaa
out
enter
fidivrl
mov
sbb
loopne
call
in
dec
push
add
int3
clc
dec
lret
mov
aad
mov
movsl
iret
add
into
mov
je
call
mov
cli
scas
push
cmc
add
add
ljmp
cmp
fbld
pop
mov
adc
xchg
cmp
xor
pop
test
mov
add
and
lds
ja
pop
clc
inc
mov
adc
fmuls
mull
or
xchg
sub
inc
cmpsl
call
stos
lds
xlat
cmpl
push
cmpsl
repz
add
insb
inc
fstl
cltd
push
mov
xchg
xor
add
cmp
das
test
jle
xlat
mov
inc
xchg
roll
sti
adc
inc
add
arpl
std
test
or
fs
pop
and
inc
push
movsl
cwtl
add
inc
pop
ja
nop
sbb
hlt
inc
mov
or
leave
hlt
or
dec
pop
daa
inc
sbb
rdpmc
and
mov
roll
or
stos
andb
sbb
shlb
mov
enter
inc
addl
ds
fiaddl
fcmovne
shll
or
adc
dec
adc
lds
je
adc
or
fmull
pop
pop
xchg
test
xlat
movsb
push
rorl
add
jo
add
dec
pop
shl
mov
jle
push
cmp
das
pusha
pop
testb
push
mov
enter
test
add
pushf
lods
pop
inc
add
test
mov
cli
lahf
andb
jge
mov
es
decb
loop
add
and
adc
dec
dec
int3
mov
cld
or
cmp
push
xchg
and
insb
push
dec
mov
cmp
sub
fs
jge
mov
xchg
jno
and
inc
push
mov
mov
dec
push
into
adc
ja
add
dec
jle
mov
add
test
jbe
push
push
inc
fcoms
or
push
xchg
xchg
mov
lret
xor
mov
mov
lds
leave
adc
cli
repnz
incb
dec
dec
mov
fsubs
and
cmp
popa
cwtl
xchg
inc
in
and
add
add
arpl
call
dec
cmp
icebp
mov
dec
mov
add
push
sti
mov
add
leave
or
add
xchg
mov
out
lret
rorl
jecxz
outsl
and
add
test
push
adc
fldt
out
in
inc
jbe
add
lcall
mov
pusha
inc
push
movsb
dec
sbb
fisubs
repz
dec
cmp
pop
xorb
out
in
add
cs
mov
call
jg
daa
push
repz
dec
sbb
pop
jns
jb
sbb
push
aas
mov
add
int3
aaa
cwtl
jo
cmpsb
or
pop
int3
mov
or
in
or
jecxz
push
iret
xor
adcl
mov
xorb
jecxz
cltd
adc
nop
test
mov
cmpl
fsubp
fnstsw
testb
call
cld
lods
pop
scas
and
or
and
push
movsb
add
inc
clc
dec
push
std
add
shrb
push
and
fildll
adc
inc
das
mov
pop
push
pop
aam
enter
jbe
adc
pop
or
dec
in
dec
in
fmull
cmp
pop
push
sub
and
lea
pop
inc
xchg
int
sbb
test
insb
fstpl
cltd
sub
fwait
add
in
push
cld
ss
mov
mov
add
cmp
xlat
inc
enter
push
pavgb
add
mov
in
jbe
aaa
mov
adc
pop
sub
aad
or
fstps
add
add
daa
fucomi
orb
dec
scas
xchg
nop
dec
pusha
hlt
xor
dec
mov
jb
xchg
sbb
sti
adc
cmp
and
mov
pop
mov
fiadds
cmc
test
mov
nop
sti
stc
add
xchg
faddl
dec
add
scas
mov
cmp
xor
notb
jbe
mov
add
lods
repnz
push
loop
lock
in
jnp
or
ljmp
dec
call
cmp
mov
or
cmpsb
fs
mov
movsl
sub
dec
inc
das
out
or
nop
adc
mov
pop
add
pushl
in
add
cli
xor
jl
jg
push
mov
mov
push
or
sar
mov
popl
test
or
sbb
bound
and
loop
stc
pop
add
sbb
imul
movsl
hlt
cli
cmpsl
sbb
daa
lock
cmp
shrb
es
out
test
sarb
cmc
aam
dec
dec
icebp
xchg
mov
insb
sub
mov
lods
push
dec
inc
or
mov
adc
push
push
sarl
pop
aaa
fcoml
lldt
pop
mov
jne
inc
pop
in
inc
jle
pop
xor
rcr
xlat
popf
ret
subb
mov
shll
pop
add
cld
mov
jbe
add
dec
sbbl
adc
push
inc
dec
pop
and
in
cmp
jle
add
lret
mov
jg
popf
cld
cmpsl
push
hlt
or
lods
and
test
daa
ljmp
sarb
leave
fstl
scas
cli
in
mov
rcll
fdivrl
popf
adc
mov
adc
cmp
push
jp
mov
xor
add
cmp
xor
xchg
test
xchg
call
cmp
pusha
sbb
mov
xor
out
xlat
cltd
or
test
adc
divb
and
xor
xlat
icebp
mov
mov
popf
nop
cwtl
and
xchg
hlt
inc
mov
mov
xchg
jle
fwait
sub
das
aad
sub
inc
add
pop
adc
js
test
fcmovne
adc
or
sarb
pop
sbb
sub
pop
bnd
dec
push
adc
and
andl
ret
or
mov
jl
pop
cmp
sub
inc
sahf
imul
mov
push
sub
shlb
lds
pop
mov
js
pop
add
adcb
mov
loopne
incb
lahf
fiadds
inc
into
add
push
orb
dec
inc
test
adc
aam
aam
add
xchg
inc
or
or
fsubs
out
xor
dec
add
and
sbb
push
outsl
mov
xor
push
adcb
xor
addb
lods
jmp
xor
push
gs
lds
add
stos
lcall
add
cld
loopne
scas
sti
xchg
cmp
mov
stc
aam
lds
adc
nop
add
mov
and
fiaddl
pusha
out
xor
cld
jle
popa
out
movsb
sub
xor
push
cli
cmp
xchg
nop
xchg
and
cmpsb
pop
or
sbb
cmc
outsl
lea
adc
shlb
dec
jg
pushf
cs
add
jnp
xor
sbb
add
data16
and
dec
in
mov
bnd
shlb
fadd
sub
sub
or
cmpsl
out
jne
sub
cmp
popa
repnz
jl
stc
jb
shl
in
psubusw
mov
adc
dec
mov
push
and
inc
add
fldenv
dec
mov
jl
iret
pusha
mov
sahf
or
test
sub
cmp
clc
loopne
mov
push
pop
imul
dec
insb
fdivrs
test
lcall
out
pusha
fwait
loope
cmp
mov
movsb
sbb
shl
xor
mov
add
jns
xor
xor
push
cs
loope
cwtl
out
movl
shll
lahf
and
add
xlat
xor
insl
push
add
push
fnstcw
mov
sub
cld
jg
clc
push
test
int3
adc
lds
dec
stc
mov
cmpsl
push
xor
movsb
ret
jle
sub
jmp
pop
push
xor
inc
mov
lods
push
mov
xor
iret
incb
and
arpl
jb
and
sbbb
adc
loope
adc
mov
mov
pop
daa
jo
aaa
add
incb
push
faddl
inc
mov
and
or
cmp
dec
add
cmp
pop
ja
in
and
pusha
sbb
in
pop
mov
inc
mov
and
scas
in
imul
roll
add
sbb
mov
ja
fisubrl
add
push
cwtl
cmp
or
fs
arpl
and
add
mov
sbb
std
push
lahf
push
movsl
addr16
add
mov
or
push
inc
lods
dec
iret
mov
flds
sub
movsl
dec
imul
cmp
push
mov
in
xchg
adc
pop
adc
cmp
mov
addb
push
jae
test
dec
js
adc
jg
inc
js
jp
test
fadds
pop
mov
add
push
pop
cwtl
pop
mov
andb
pop
js
xor
adc
cltd
jne
in
add
jae
lock
or
sbb
pusha
inc
popa
out
and
es
adc
in
add
add
sarb
dec
add
call
sbb
outsl
and
add
test
jp
cmp
call
jl
pop
mov
mov
cmpsb
out
xchg
into
xchg
pop
add
lods
xor
inc
mov
rorb
sar
je
enter
add
push
icebp
mov
sbbl
xor
and
push
cmpsl
adc
and
lcall
mov
xor
fists
add
dec
hlt
mov
les
mov
mov
mov
pop
xor
js
addb
out
fs
xchg
xchg
jae
mov
inc
in
mov
into
mov
add
call
cs
ja
nop
adc
inc
pop
xchg
xor
loopne
rcrl
clc
dec
dec
add
jne
cmp
adc
clc
mov
inc
les
add
sub
test
rolb
sti
out
testl
jbe
in
aaa
dec
pop
and
mov
popa
adc
loopne
mov
add
sar
sub
popa
enter
cmp
cltd
popl
mov
push
dec
addr16
shll
stc
mov
jl
scas
xchg
mov
pop
lret
jae
jo
mov
dec
rclb
add
push
jno
punpcklbw
xorb
sub
pushf
jl
fldl
sub
mov
clc
add
jle
loope
fistps
shlb
sti
movl
cwtl
xchg
scas
add
add
adc
into
and
test
rcll
jmp
orb
or
mov
or
arpl
int
pop
decl
movsb
jle
push
xor
rolb
sbb
mov
call
lcall
cmp
add
int
dec
dec
cld
nop
cmpl
or
cmpsb
push
xor
popa
adc
stos
in
clc
xchg
jl
addb
hlt
xchg
mov
adc
into
xchg
mov
lret
mov
icebp
popa
or
add
movl
dec
add
shll
fdivrl
je
jp
sbb
sbb
push
sub
ret
fcoms
pop
cmp
adc
pusha
xchg
and
mov
jge
adcl
clc
cli
dec
adc
sbb
test
faddl
mov
jbe
mov
dec
jno
sbb
loop
sahf
lea
cmp
ja
lahf
jnp
and
push
call
xor
shll
xor
and
mov
lahf
addb
call
js
mov
xchg
push
addr16
aaa
subl
lock
add
pop
movl
cmp
jl
adc
inc
push
xor
add
add
jns
fcompl
add
cmp
pop
rorb
call
mov
xchg
int3
cli
inc
dec
inc
jbe
insl
xor
aam
jne
pop
push
inc
movsb
xchg
ja
les
loopne
xor
movsb
or
fsubs
pusha
inc
pop
cld
jo
fwait
insb
scas
in
jg
sub
out
xchg
cld
sub
and
enter
push
push
sahf
push
xor
dec
dec
xor
ljmp
mov
dec
adc
add
pop
sub
ficompl
inc
cltd
cmp
cmp
inc
into
xor
pop
mov
aam
adc
fsubs
in
and
add
mov
fcoms
sub
pop
pop
add
mov
notl
dec
imul
push
xchg
lahf
inc
int3
sbb
shlb
pop
and
or
mov
xor
lret
push
mov
mov
inc
jl
xor
mov
xor
pop
faddl
sbb
testb
ret
add
xor
es
sti
insb
inc
cmp
cmp
lods
pop
jle
xor
sbb
add
iret
jle
mov
insl
push
add
leave
stos
cli
mov
and
int3
sub
pop
mov
fldl
sbb
aaa
dec
sub
js
add
sub
add
adc
push
jge
test
negb
mov
popa
add
sub
inc
pop
adcl
jge
loopne
sub
add
out
mov
or
int3
mov
add
xor
dec
add
xchg
clc
lcall
lds
into
push
jne
push
fnstenv
das
dec
cld
and
cmp
sub
add
mov
and
push
adc
rorb
int
fadd
sub
add
or
dec
aam
nop
mov
sub
add
addr16
movsl
in
jle
mov
cmp
mov
pop
add
xor
add
push
mov
inc
xor
mov
loopne
mov
cmp
ja
movsl
inc
pusha
hlt
jp
push
in
sub
add
add
add
sbb
dec
add
std
sbb
in
mov
push
cwtl
int3
pop
clc
sub
pusha
adc
xchg
mov
mov
xchg
mov
daa
push
mov
mov
roll
xchg
repnz
outsl
repz
jg
xorb
ljmp
xlat
in
add
jns
outsl
mov
inc
sub
call
mov
clc
pushf
dec
movl
inc
shll
ja
add
loopne
daa
jb
adc
mov
fldenv
lock
ja
or
sbb
cltd
sbb
sbb
aam
mov
das
ja
movsl
inc
xchg
jmp
push
sbb
sbb
in
fsubs
sarb
sub
pop
add
ret
repz
xchg
mov
dec
xchg
test
jmp
mov
in
fstl
cmc
sbb
lret
insb
pop
sti
jl
pushf
sahf
jmp
pop
shl
subb
bound
sub
add
loopne
pop
sar
lock
stos
imul
insb
into
pop
popa
imul
nop
xchg
mov
push
pop
or
add
dec
jp
test
out
stc
jb
add
mov
push
xchg
sub
adc
jl
push
cmp
dec
pop
rcll
jns
sbb
mov
adc
fs
inc
lods
sbb
call
xorb
jns
and
fmull
xchg
adc
sub
pop
int3
iret
hlt
xchg
inc
stc
out
xor
cmp
rorb
dec
jb
js
in
leave
stc
push
jl
stos
mov
into
aad
aam
arpl
xorl
push
sub
movsl
add
jae
sub
jns
mov
push
in
loopne
call
or
mov
lret
xchg
leave
mov
add
imul
cmp
jge
sbb
xchg
rcll
dec
adc
fcomi
frstor
sbb
xor
jl
lcall
inc
subb
cmpsl
popa
outsl
cmp
lcall
add
cmp
mov
add
xchg
or
insb
pusha
and
cwtl
dec
adc
loop
pusha
pushf
jno
cmpsl
add
push
pop
nop
dec
adc
add
je
pop
and
add
wbinvd
lea
cwtl
hlt
xor
sbb
pop
xlat
add
or
inc
inc
mov
testl
lds
pop
imul
movsl
push
fcompl
pop
popl
addb
sbb
and
add
adcl
roll
push
xorb
mov
call
dec
jo
adc
out
add
or
cmp
lret
stc
add
fiadds
je
push
aas
std
repz
sti
rolb
scas
add
mov
pusha
or
sub
jne
mov
cwtl
adc
cmp
push
das
xor
cmc
add
push
inc
mov
add
dec
loop
aam
inc
faddl
adc
xor
mov
stc
inc
or
aaa
cmp
cmp
dec
jo
sbb
push
cmp
adc
enter
imul
lock
sub
sub
pushf
sub
mov
insl
add
loopne
sbb
cmp
pop
cmpb
sbb
pop
jle
xchg
pop
inc
pushf
and
fsubrs
add
pop
insb
mov
lret
push
or
pop
pusha
shlb
mov
adc
add
dec
subl
jl
push
lret
stc
mov
xchg
add
cli
orb
add
pop
cmp
mov
xchg
sarl
inc
pop
enter
data16
sub
jecxz
xor
add
jns
push
aas
rcl
pop
lods
xchg
dec
push
mov
mov
mov
fisubs
andl
das
test
loopne
xor
dec
cmp
cmp
cmp
sub
js
cmpl
test
cmp
mov
cmp
add
push
cwtl
lret
push
cmp
mov
jno
adc
or
cld
jbe
jo
jo
inc
loopne
sti
out
les
fmull
mov
add
add
jo
out
push
cmp
ja
es
add
dec
dec
shll
ljmp
xor
movsb
add
mov
hlt
push
sarl
bound
cld
adc
add
cwtl
mov
cmpsb
xchg
nop
cmc
jge
sbb
in
dec
inc
in
lods
dec
fld
xchg
adcl
inc
pop
shll
addb
xor
outsb
pop
add
push
cmp
fsubs
imul
adc
nop
add
jge
mov
or
loopne
cs
cld
ja
not
dec
flds
sub
dec
nop
jnp
nop
sahf
pop
add
xchg
lods
into
out
xorb
pop
mov
dec
or
cmp
add
xchg
pop
or
mov
add
mov
and
cmpb
pusha
test
add
add
fwait
and
daa
bound
pusha
sub
mov
push
mov
mov
movsl
push
ja
xor
cmpsl
mov
adc
dec
pop
enter
and
andb
mov
mov
sbb
and
add
scas
add
mov
nop
mov
cmpb
add
outsl
pop
daa
adc
cwtl
add
arpl
std
aad
add
dec
or
insb
xchg
add
movb
iret
rol
adc
mov
loope
pop
sbb
popa
and
xlat
adc
xor
sub
ret
lods
add
sbb
xchg
mov
mov
aad
add
mov
lods
push
js
loopne
push
mov
mov
dec
incb
and
call
loopne
mov
sbb
inc
leave
imul
mov
cld
dec
dec
enter
test
or
je
jge
aad
lret
pop
cmp
aad
int3
ret
rcll
in
pop
xchg
test
jnp
in
mov
call
pop
out
push
popa
in
ja
jecxz
lahf
sbb
cmp
or
add
rclb
add
or
add
and
sub
cmpsb
aam
sahf
loopne
call
mov
or
out
add
ret
lds
push
rcll
stc
push
adcb
or
sbb
addb
mov
or
add
sub
add
inc
ja
pushl
mov
cmp
jno
add
push
xchg
adc
xchg
cld
cmp
inc
test
int
jne
mov
add
shll
iret
mov
mov
cmp
daa
adc
or
add
push
cli
pop
add
test
add
pop
clc
mov
mov
aas
call
mov
stos
loope
rcr
adc
dec
aam
dec
pop
cmpl
jge
xchg
adc
adc
inc
mov
popf
cmp
push
shlb
pop
xlat
popa
fdivs
cld
loope
jge
and
shll
inc
hlt
and
or
mov
and
lret
sub
xchg
pop
lds
push
and
pop
cld
leave
js
lods
jo
add
fdivrs
mov
xchg
jmp
push
loopne
inc
int3
add
stos
notb
jge
les
jl
std
lret
rorb
ret
loopne
push
aam
push
push
or
ficoms
mov
lret
rcl
dec
and
add
xchg
leave
add
cmpsb
inc
jno
shlb
js
je
repz
ja
mov
inc
movsb
popa
pop
lcall
ja
lahf
rclb
pop
fcomps
fincstp
add
adc
cmpb
mov
imul
iret
lcall
icebp
shrl
jns
mov
call
add
lret
shl
add
nop/reserved
and
sub
jo
pop
push
call
es
das
ja
dec
cmc
mov
xchg
pop
or
sahf
imul
lret
mov
test
inc
scas
cli
clc
sbb
mov
sbb
comiss
js
in
add
mov
mov
out
repnz
and
pusha
in
ret
pop
cmc
adcb
cmp
dec
add
test
cmpb
aad
jg
cwtl
sbb
cmp
push
fnstenv
ja
popf
mov
scas
push
jno
inc
add
adc
add
scas
clc
fcom
add
daa
inc
or
cs
in
xchg
and
call
mov
daa
push
xchg
lock
jno
or
sub
std
lock
dec
add
xchg
stc
xchg
mov
fsubr
scas
fwait
stos
dec
arpl
dec
pop
push
add
jns
fsts
popa
add
xchg
insb
lret
orb
and
and
in
mov
sbb
mov
filds
sbb
imul
popf
iret
jo
xor
add
and
cmp
in
cvtdq2ps
or
dec
pop
adc
sub
addl
subb
sahf
pop
pop
add
dec
dec
aam
mov
xor
adc
push
mov
push
xchg
xor
add
outsb
add
add
jg
xor
cmp
cltd
dec
fldcw
cmc
movsb
add
cmp
sbb
pop
enter
or
sbb
push
add
sahf
dec
mov
pushf
and
or
add
mov
add
push
dec
cmpb
fdivl
sub
imul
out
dec
test
sbbb
xor
push
xchg
or
adc
out
mov
mov
ljmp
xor
das
push
or
les
cs
or
lds
les
jl
dec
call
cmp
push
je
sahf
adc
push
xchg
add
enter
or
iret
clc
push
jae
add
lea
jecxz
das
loope
and
inc
enter
mov
cmp
adc
jbe
cld
pop
out
mov
xor
inc
jo
inc
cmp
mov
mov
mov
sbb
or
mov
enter
insl
into
mov
pop
inc
loop
insb
shlb
out
mov
jmp
lahf
sbb
add
inc
leave
movsl
dec
cmpsl
cli
pmaxsw
cld
adc
push
sti
mov
xor
inc
xor
inc
mov
into
add
jne
dec
add
xchg
fsubs
sub
cmp
fcoms
cmpsl
add
clc
std
xchg
cmp
scas
pop
shll
ds
xorb
adc
jb
movsb
shr
add
ja
xchg
loope
lret
and
pop
cmp
cld
push
jge
add
aaa
adc
pop
xchg
hlt
push
call
push
inc
enter
jge
out
mov
mov
rcll
sub
xor
push
dec
fwait
iret
inc
stos
mov
sub
cmpb
or
aad
arpl
shlb
inc
mov
jbe
cmpsl
mov
xor
cmp
ret
test
sahf
lock
dec
pop
decb
enterw
sbbb
adc
xchg
in
add
je
movsl
adcl
adc
mov
sbb
mov
sub
inc
cmp
mov
add
orl
pop
call
push
movsb
add
dec
cmp
pop
inc
idivb
push
xchg
push
inc
pop
mov
mov
jns
add
hlt
or
cmp
fidivs
fwait
mov
mov
out
xchg
fistl
nop
cld
sub
sti
cmp
fdivs
and
lods
stc
fs
push
add
fisubl
inc
add
cmc
mov
xlat
notl
fdivs
movsb
or
lahf
xor
or
mov
inc
xlat
dec
pop
xor
loope
fcomps
adc
lods
add
jo
vaddsubpd
ror
push
add
js
add
dec
call
xlat
call
push
mov
add
or
cmpsb
push
imull
dec
add
dec
pop
movsb
adcb
imul
cmp
test
mov
call
mov
cmp
adc
and
sbb
nop
add
mov
call
jmp
pop
fdivr
mov
push
jo
sub
mov
add
mov
add
cmc
testl
stos
movb
adc
mull
mov
xchg
add
cld
je
sub
xchg
fisttpl
jp
lods
mov
push
cwtl
push
pop
dec
int3
dec
dec
dec
mov
add
lods
mov
add
out
call
shll
test
pop
mov
mov
inc
add
mov
dec
cli
jbe
les
pusha
es
xchg
add
mov
adc
dec
adc
jo
cwtl
nop
int
add
xchg
addr16
sub
gs
sub
add
dec
push
rorb
scas
jno
pusha
inc
or
test
or
daa
insb
cmp
lock
jbe
add
popf
xor
pop
repz
and
sub
pusha
xor
nop
or
loop
sub
push
jl
fdivr
mov
push
adc
xchg
decb
sub
popa
or
jns
push
sub
xor
in
out
nop
lock
jnp
or
dec
aam
push
mov
mov
out
add
mov
or
add
js
imul
into
jg
pushf
mov
mov
jb
jp
cs
mov
stos
push
mov
xchg
js
test
je
pop
sbb
inc
movsl
and
test
addb
cmc
sub
push
mov
pop
aad
dec
jp
add
mov
outsb
fnstsw
pushl
mov
adc
jnp
xor
add
rorl
or
mov
mov
and
add
out
imul
adcb
pop
addb
mov
aas
les
jo
add
nop
into
or
pop
int3
or
in
clc
or
jge
pop
fs
divb
add
loop
lret
dec
out
insb
add
inc
mov
push
dec
dec
or
icebp
push
xor
js
add
mov
sbb
add
call
paddb
push
imul
adc
lods
test
fidivrs
sbb
pop
add
pop
pop
add
les
fs
push
das
scas
cmc
dec
mov
dec
lock
faddl
imul
jle
mov
add
je
or
cld
xor
or
xor
sbb
mov
cmp
push
and
mov
mov
jle
lock
cmp
jno
inc
add
lods
inc
pop
insb
mov
push
add
mov
and
xor
xchg
or
pop
add
push
rcrb
adc
xor
daa
xor
sub
xor
pop
shll
jle
pop
push
pop
add
or
jbe
shr
jg
aam
mov
sub
in
fmull
xor
push
call
mov
push
inc
add
pusha
add
fisubrl
sub
sti
mov
ds
or
test
mov
pusha
inc
iret
out
fmull
mov
add
xchg
xlat
mov
cmp
fadds
loope
mov
jae
cmp
mov
scas
dec
flds
dec
stos
lret
js
dec
add
pop
mov
xor
mov
add
sbb
push
lods
jecxz
bound
addb
fiadds
push
insl
inc
loop
mov
mov
lds
cmpsb
repz
jg
mov
adc
nop
xlat
mov
cmp
aad
lock
fs
in
loopne
into
pop
jle
mov
cmp
jg
pusha
and
jo
mov
cld
add
mov
into
imul
lds
filds
mov
inc
pop
rclb
add
dec
out
das
add
mov
icebp
cld
fcoms
stc
lods
mov
dec
lods
loop
sub
rorl
mov
popf
mov
sbb
lret
popf
jbe
mov
loop
sti
pop
pusha
rolb
dec
push
mov
popf
loopne
fimuls
arpl
popa
push
xor
pusha
and
inc
cwtl
push
xchg
inc
add
push
mov
aaa
add
add
push
xor
cli
jne
test
movsb
sbb
or
clc
jmp
fdiv
push
sub
inc
les
rolb
dec
in
sub
es
sbb
or
pop
clc
jl
mov
mov
push
fimull
pop
xlat
out
mov
mov
test
add
sbb
loopne
dec
rep
les
ds
add
inc
je
outsl
daa
ret
xchg
aas
jg
test
dec
jle
adc
xchg
xor
or
sahf
pop
pop
jle
push
mulb
adc
add
sub
mov
enter
in
add
push
push
dec
ja
hlt
push
arpl
jns
mov
loop
inc
xorl
out
scas
dec
scas
adc
xor
adc
add
sahf
bound
mov
repnz
mov
or
pop
xor
lret
clc
cmp
xchg
ja
inc
rcrb
pusha
mov
or
or
xor
icebp
mov
add
je
push
ds
jmp
out
cmp
lods
pop
push
push
add
movsb
xor
push
and
popa
arpl
fimuls
out
cmpsb
in
shr
sbb
cmc
cmp
add
lods
clc
pop
aam
cmp
pop
sbbl
sub
andl
lock
inc
les
add
or
adc
or
add
cwtl
push
loopne
aad
or
pop
mov
ds
mov
pop
lea
jae
js
bound
cmp
push
add
stos
inc
mov
lds
mov
add
leave
mov
or
dec
mov
insb
xor
mov
int
push
in
ljmp
ret
movsb
loopne
add
xchg
sbb
xor
mov
daa
sbb
add
dec
repnz
les
add
cmp
fcomps
adc
fidivl
inc
ret
xchg
xor
sarb
dec
add
xchg
movsb
mov
or
mov
add
psubd
push
push
xchg
xorb
lods
ret
jle
aam
or
shlb
sub
xchg
or
add
testl
std
nop
sbb
push
nop
int3
add
nop
cwtl
lahf
xor
pusha
add
ret
jae
sub
mov
and
test
in
push
xchg
ret
cmpsb
inc
xchg
pop
adc
xchg
pop
mov
and
dec
cld
mov
dec
in
clc
dec
mov
or
sbbw
mov
mov
push
fiadds
xor
sbb
les
or
clc
ja
dec
mov
cmpl
mov
inc
call
inc
pop
jae
pusha
aad
imul
divl
cmpsl
fdivrp
cmp
mov
outsb
and
leave
or
pusha
push
andb
add
loopne,pn
sbb
inc
aaa
mov
add
cmp
mov
xchg
mov
mov
inc
hlt
lds
xchg
stos
mov
rcl
inc
xor
in
pop
ds
rcrl
xchg
mov
maskmovq
divl
cmpsb
push
add
lahf
or
jg
xchg
repnz
sbb
xor
xchg
adc
mov
dec
add
mov
lock
js
loop
push
sbb
xor
movsb
inc
jo
mov
and
inc
xchg
jo
push
int3
adc
sbb
pop
stos
rclb
xor
sbb
ds
and
mov
sbb
pop
movsl
push
fimuls
jne
pop
mov
pusha
pop
dec
and
add
aas
shlb
imul
sbb
into
cmp
pop
insb
arpl
call
and
or
push
push
pusha
dec
and
cs
int3
iret
gs
mov
push
cmp
mov
test
and
leave
add
jne
ret
jnp
incl
xchg
pop
or
sahf
jo
xor
enter
inc
mov
daa
fadds
movsb
xor
ret
jmp
push
or
mov
je
jno
add
xchg
push
cmp
fimuls
mov
add
mov
xor
call
out
daa
xchg
push
dec
loopne
cmp
mov
xor
fs
lock
add
notl
cmp
pusha
adc
inc
cmove
enter
loopne
sbb
add
movb
adc
adc
mov
or
pop
adc
les
nop
insb
mov
inc
adc
xor
mov
dec
inc
addr16
sub
mov
scas
mov
pusha
les
ja
pop
das
inc
cmpsb
sub
in
in
add
inc
cmp
xor
or
mov
mov
jecxz
outsl
push
jae
ds
sbb
mov
insb
push
sbb
pop
sub
xor
ds
push
inc
test
jmp
mov
mull
shr
nop
xor
pop
iret
and
mov
mov
add
xlat
push
dec
add
cmp
dec
push
cld
or
sbb
adc
nop
mov
aaa
xor
push
ret
mov
pop
add
in
xadd
add
jl
mov
add
adc
inc
test
push
pop
add
pop
mov
xchg
push
mov
cmp
pusha
popa
xor
and
in
sbb
and
add
call
mov
add
insb
test
sub
mov
xchg
cli
add
scas
dec
hlt
lahf
enter
ds
cmpb
cs
lea
cmp
inc
push
add
sbb
sbb
stc
dec
subb
pushf
jb
adc
push
xlat
mov
adc
inc
add
inc
rorb
mov
mov
nop
data16
adc
add
rcrl
aas
add
movsb
xchg
hlt
scas
popa
ud2
ljmp
and
enter
cwtl
fadds
xor
sti
mov
add
mov
bound
mov
outsl
loopne
and
mov
or
pop
dec
sti
and
bnd
shll
rorb
cs
and
repz
pop
sub
pop
mov
mov
decl
sbb
in
inc
mov
inc
mov
sbb
pop
addl
out
je
xchg
test
call
inc
mov
mov
inc
jle
push
and
mull
cmp
fwait
xchg
add
movsb
movsb
push
out
jecxz
push
add
mov
add
fwait
call
sbbb
add
sahf
hlt
add
inc
xchg
mov
cmp
xchg
cmpb
in
add
loope
push
add
sahf
pop
lcall
push
cmc
aad
subb
add
pop
lea
scas
rolb
cmp
popa
push
fisubrs
inc
and
cwtl
xor
cmpsl
cmp
and
add
inc
jns
cli
push
mov
sub
jp
inc
jle
xor
sub
xor
push
cld
and
add
push
jb
or
xor
outsb
es
mov
pop
out
jns
pusha
cmp
insb
dec
outsb
inc
add
jle
add
push
add
pop
repnz
adc
nop
and
cltd
xchg
orb
ret
jb
insb
dec
jl
fwait
dec
adcb
pusha
cwtl
mov
scas
in
add
cmp
push
xchg
jl
xchg
pop
das
push
xor
xor
pop
cmpsb
lcall
pop
dec
xlat
adc
ds
popf
push
sbb
sbb
ja
pop
in
and
pop
rcl
sub
adc
push
out
xchg
inc
cltd
popa
ss
adc
daa
dec
enter
ret
or
lea
shll
mov
movsl
xchg
xor
push
aam
bndldx
adc
ja
push
push
enter
push
inc
test
mov
add
mov
loopne
cli
pushf
xchg
imul
jle
xchg
repz
sub
aam
cltd
mov
dec
sbbl
in
add
mov
orb
aas
and
xchg
cmp
or
cmp
ficoms
push
cmpsb
adc
or
js
out
loop
xchg
mov
je
adc
call
push
clc
jle
mov
ljmp
insb
sbb
imul
mov
lds
push
cmpsb
enter
push
in
push
xlat
pop
or
xchg
loopne
js
add
pushf
sarl
sub
xchg
push
loopne
and
pushf
mov
or
in
int3
dec
aaa
push
out
adc
insb
push
xor
pop
mov
pop
sbb
dec
xor
jno
add
and
test
or
mov
inc
xchg
or
mov
lds
into
arpl
lock
pop
inc
jo
inc
dec
or
add
cmpsl
mov
lock
xor
es
popl
sbb
mov
leave
out
in
movsb
add
lcall
loopne
loop
loop
add
inc
xor
add
jae
movsb
xchg
mov
lock
orl
cltd
dec
add
popf
sbb
aaa
andl
lcall
psubusw
xchg
mov
push
push
repz
sahf
loopne
mov
adc
call
mov
xor
push
or
aam
adc
pop
call
fdivrp
push
xchg
add
mov
push
mov
xor
inc
mov
rcr
jg
add
std
daa
mov
add
mov
xor
jno
push
in
jnp
add
popf
mov
add
or
test
adcb
inc
add
lods
mov
pop
cmp
sub
inc
add
cwtl
dec
xor
sub
xchg
add
call
das
mov
invd
mov
ljmp
addb
add
rorl
xor
adc
stc
add
js
inc
int3
scas
pop
loop
add
icebp
mov
mov
andb
xchg
inc
mov
inc
aad
mov
sub
mov
adc
mov
push
sub
mov
add
inc
xor
or
pop
add
add
imul
push
movsb
xor
stc
popa
lds
inc
mov
sbb
stos
lock
dec
mov
pop
pop
loopne
inc
xchg
jmp
push
push
add
or
adc
sahf
out
jp
aaa
nop
add
scas
or
pop
dec
cld
add
dec
in
or
push
add
jmp
inc
sbb
sti
cltd
xor
mov
mov
int
es
push
pushf
pop
loopne
or
sbbl
faddl
adc
dec
insb
or
push
jb
inc
sar
loope
icebp
jg
add
mov
fbld
out
sarb
cmpsb
jnp
test
iret
mov
push
jg
clc
cmp
imul
mov
mov
icebp
dec
pop
cmp
jecxz
add
nop
xor
int3
sub
cmc
adc
loope
jge
sbbb
or
sub
loope
cltd
pushl
data16
dec
push
shlb
cmp
jns
mov
adc
inc
xchg
stos
pop
mov
mov
int3
lret
js
out
imul
insl
pop
sbbb
out
mov
sbb
cmp
lret
pushf
inc
add
inc
dec
inc
fmull
add
mov
loopne
add
jg
mov
push
shlb
mov
xchg
out
addb
stc
js
out
popa
mov
insb
cld
sbbb
push
mov
je
pop
mov
movsb
pop
add
push
inc
adc
inc
pop
sarb
and
aad
add
fsubr
dec
fcoms
mov
dec
add
cli
cltd
lods
pop
dec
out
mov
add
lods
loopne
cli
and
cmp
jp
inc
inc
xor
pop
mov
sub
adc
enter
icebp
test
inc
rolb
frstor
loop
nop
ljmp
pop
push
inc
addr16
repz
mov
xor
add
inc
mov
add
scas
iret
fs
mov
push
mov
sbb
xor
or
or
adc
adc
push
add
xor
test
outsb
xchg
xchg
mov
mov
jb
repz
or
push
adc
test
xchg
enter
call
xchg
dec
or
movsb
mov
pop
push
mov
add
fwait
add
sarb
fistpll
orb
jp
hlt
fistl
mov
and
push
add
jno
push
inc
jbe
sbb
or
repnz
imul
inc
test
popa
repnz
jo
dec
mov
dec
dec
add
sub
enter
cwtl
adc
add
adc
cwtl
xchg
fs
fistpl
cmp
push
add
dec
loopne
inc
ss
sub
inc
xchg
cmp
add
repnz
pop
mov
xorb
or
add
loop
fisubs
in
add
mov
fstps
inc
inc
cwtl
stos
pop
lock
test
xchg
push
lods
imul
test
std
into
test
test
shlb
jp
or
outsl
pop
pavgb
and
adc
xchg
sti
jg
adc
out
inc
aad
mov
sub
dec
lea
xchg
movsl
or
xor
cmp
add
testb
mov
ss
test
int3
fsubrs
inc
mov
adc
js
mov
andb
push
sub
or
cmp
addb
xor
jp
sti
andb
mov
jmp
nop
hlt
mov
jnp
mov
out
nop
movsb
xchg
pop
sbb
rclb
call
push
add
or
jne
add
cmp
fmuls
dec
add
je
xchg
js
push
and
and
inc
nop
mov
inc
insb
xchg
adc
ret
sub
loopne
test
clc
rclb
jg
add
or
jecxz
add
and
js
add
jnp
pop
and
push
mov
sub
shl
add
sub
push
or
enter
xchg
stos
ret
mov
iret
fadds
mov
mov
sbb
xchg
cli
mov
pop
dec
xor
inc
xor
outsl
add
mov
mov
int
inc
pushf
stos
mov
pop
cs
sub
imul
mov
push
pop
xchg
sub
enter
push
sub
test
in
es
jecxz
cmp
sbb
pusha
dec
leave
and
mov
mov
hlt
mov
adc
jo
mov
aas
sarl
adc
lock
pop
mov
and
nop
add
test
add
cmp
fsub
and
rol
jns
addr16
mov
pop
xchg
mov
and
jo
repnz
in
inc
mov
ficompl
sbb
mov
mov
xorb
rcl
mov
les
fwait
outsb
je
cltd
mov
and
pop
pop
push
sub
into
pop
int3
and
test
lret
xchg
inc
test
pop
data16
push
push
xor
mov
ret
mov
sbb
pop
mov
cwtl
mov
lods
fcoms
int3
xor
rcrl
add
inc
cmpsl
aad
jle
mov
cmp
push
sarl
int3
mov
jp
jnp
inc
inc
pop
and
jo
bound
sbb
enter
xor
sti
and
cld
and
inc
les
movl
xlat
inc
mov
or
or
lret
mov
sbb
aad
shr
mov
adc
or
push
push
ret
gs
adc
jo
sbb
dec
mov
aaa
and
cmp
aas
cli
nop
in
int3
out
inc
insb
push
loop
pop
sbb
push
loopne
cmp
lods
inc
mov
leave
or
daa
pop
cmp
ja
ss
out
push
in
adc
mov
movsb
ljmp
shrb
fs
inc
push
repz
push
xchg
mov
fdivrs
cmc
and
add
movsl
sub
or
xchg
into
mov
pusha
add
push
loopne
in
js
and
adc
jnp
adc
cmp
pop
jb
dec
cmp
add
into
and
xchg
mov
dec
lea
fbld
pop
ljmp
adc
adc
mov
add
loopne
inc
stos
mov
mov
mov
jno
pop
cmp
or
pusha
sarb
add
pop
xor
mov
push
dec
jae
fsub
movb
and
daa
xchg
fdivs
adc
pop
test
add
mov
jb
pop
xchg
or
xor
lret
stos
adc
rcll
adc
aaa
xor
mov
enter
je
add
or
divb
jne
pop
out
xchg
jbe
movsb
imul
fs
std
mov
cs
jo
xor
and
in
adc
cmpsl
jl
loop
sbb
testl
xorb
loope
push
add
or
aad
xchg
test
adc
aam
enter
clc
add
fmull
xchg
adc
je
add
std
adcb
subl
subb
neg
add
aam
inc
inc
mov
or
aas
xchg
daa
movsb
fdivs
addb
cmpsb
sbb
adc
jl
mov
cmc
sub
fstps
outsb
sti
jo
jnp
mov
add
or
mov
mov
insb
popl
and
mov
orb
cmpsl
pop
dec
or
xor
adc
hlt
ret
pop
scas
sbb
es
pop
or
fistpl
or
xor
and
add
mov
fldenv
imul
test
bound
xor
xor
or
hlt
fmuls
jo
inc
flds
jo
cli
in
cmp
nop
mov
lock
andb
fucomip
mov
push
mov
jbe
insl
ja
add
negl
das
daa
fcom
js
addr16
cmp
mov
push
iret
inc
sub
fcomps
add
and
movsb
xorb
clc
loopne
xchg
cmp
test
dec
imul
dec
push
xchg
js
shll
lods
outsl
cs
xchg
and
vdivsd
mov
cld
adc
cmp
adc
nop
test
lds
push
and
movl
jns
decb
inc
adc
sarb
call
aad
jp
inc
and
xchg
les
dec
add
outsl
pop
je
pop
popf
add
push
movb
daa
movsl
insb
dec
push
add
mov
adc
sbb
mov
out
add
jmp
into
inc
cmp
add
fimull
sub
fwait
xor
orb
fistpll
add
es
movsb
rclb
loopne
or
jb
dec
test
gs
sub
aad
mov
insb
and
or
or
push
and
pop
mov
mov
add
cmp
out
and
fisubl
lods
jecxz
movb
ficoms
notb
test
int
sbb
xchg
cmp
out
mov
call
jo
add
call
repnz
xchg
sbb
pop
rolb
movsb
xchg
js
fidivrs
inc
pushf
aad
or
or
sahf
or
cmp
fiadds
and
dec
pop
lret
in
jl
push
dec
push
orb
shr
inc
mov
inc
arpl
test
inc
mov
mov
sub
jo
adc
add
cltd
leave
add
or
mov
lret
xchg
push
fs
sbb
adc
pop
xchg
push
sbb
cmp
jno
fdivrs
mov
orl
pop
sub
sbb
add
mov
or
jne
insb
push
cwtl
rcrb
xorb
jns
mov
add
inc
ret
dec
cltd
or
rcll
call
xor
rcrb
in
or
push
int3
dec
loop
popa
or
adc
inc
clc
cmp
add
inc
add
insb
push
insb
sbb
popa
int3
dec
lock
xchg
and
sub
adc
jno
add
shll
inc
int3
push
inc
xor
xchg
insl
sbb
jno
xor
andb
call
cmp
add
lcall
jnp
adc
mov
repnz
push
stos
fcompl
mov
cmp
into
inc
dec
add
out
and
add
sub
mov
and
je
push
mov
sub
xor
xchg
cmp
mov
lods
or
cltd
movsb
push
sbb
xor
inc
sbb
pop
imul
cld
mov
pop
or
inc
clc
cltd
fisubrl
enter
pushf
xchg
in
notb
mov
xor
loope
xlat
push
cmp
inc
lock
or
orb
rorb
or
loope
pop
pusha
lea
add
and
in
adc
orb
pusha
mov
jae
and
and
xor
add
sub
mov
adc
and
or
xor
xchg
mov
push
lret
adcb
adc
sbb
arpl
sarl
clc
inc
add
add
int
or
mov
xchg
inc
or
mov
xchg
sub
shrb
add
lock
cmp
or
pop
xchg
mov
jnp
addb
ret
les
outsl
arpl
xor
mov
aad
pushf
pusha
xor
call
and
inc
inc
pop
in
sub
rolb
cmp
dec
sub
lock
in
sbbb
and
jg
fwait
cmp
aam
shr
xchg
inc
test
jae
pop
test
push
repnz
sbb
sti
sub
sbb
inc
roll
and
aam
sbb
cmp
insb
aam
aaa
add
testb
js
pusha
lods
mov
leave
repz
xchg
adc
or
adc
addb
into
popf
pop
jl
fldl2t
in
popa
stos
and
out
les
xchg
inc
add
loope
pushf
arpl
insb
mov
mov
or
jbe
jne
mov
loopne
add
popf
int3
adc
and
add
ds
pop
les
mov
mov
stc
shlb
xor
inc
add
xchg
test
sub
or
inc
mov
mov
mov
pusha
cbtw
aas
add
dec
pop
std
test
fisubs
stos
mov
clc
into
mov
call
aas
call
mov
in
pop
add
in
rcrb
cwtl
push
inc
xchg
add
cmp
cli
jnp
aas
mov
shrb
inc
pop
sub
ret
mov
inc
dec
or
addr16
mov
or
add
imul
jp
mov
test
scas
push
test
push
mov
fidivrs
daa
jb
xchg
inc
adc
or
or
mov
adcb
inc
jbe
orl
out
xchg
dec
hlt
mov
js
lea
and
add
jne
mov
sub
fwait
xchg
lds
or
or
movsb
fs
dec
icebp
mov
jns
xchg
push
add
imul
lcall
sub
fistps
jno
add
imul
sbb
adc
movsb
sub
adc
mov
pop
das
mov
push
add
loop
jl
mov
push
pop
int
xor
testb
dec
mov
fdiv
cli
les
xchg
call
test
mov
insb
add
leave
aam
xchg
cwtl
add
jecxz
cmp
imul
std
add
mov
add
dec
iret
mov
pusha
sub
std
in
clc
int3
add
iret
out
xchg
or
stos
cld
inc
pop
scas
add
jge
or
and
lock
push
xchg
incb
movsl
adc
nop
xor
loop
insl
inc
or
inc
lods
ret
jp
rcrl
ja
mov
jno
outsl
mov
sub
jo
add
sbb
pop
and
cld
in
repnz
mov
add
fwait
adc
xor
add
cmp
out
jmp
sbb
pusha
add
xor
imul
add
pushf
mov
ljmp
movsb
pop
xchg
daa
in
mov
push
mov
sarl
cmp
mov
fisubl
pop
sbb
push
cmp
pop
popa
push
cmpsb
pushw
fiaddl
pop
aas
fcomps
dec
fldl
ds
loope
enter
dec
aad
xor
fisttps
sub
inc
inc
aad
sbb
adc
fnstcw
adc
add
sbb
dec
or
enter
xchg
movsb
mov
xlat
jle
fbstp
jo
pop
xchg
daa
sbb
xchg
mov
stos
fs
xchg
sub
add
add
or
sub
rolb
jg
adc
dec
pusha
xlat
pop
repnz
xor
je
inc
cwtl
es
add
push
jg
rcll
jmp
stos
imul
sbb
add
aas
out
dec
pop
pop
ret
sbb
add
inc
cmpsl
add
js
xor
add
xchg
mov
rolb
idiv
out
push
mov
add
in
mov
inc
inc
int3
or
inc
inc
xlat
leave
repnz
sbb
btr
mov
dec
lcall
lods
mov
pop
jo
movlps
inc
iretw
ficompl
loopne
jg
pusha
push
clc
leave
xchg
pop
fadd
sbb
add
mov
inc
push
shll
inc
push
aad
nop
adcb
nopl
fildl
cmp
xchg
push
call
add
mov
dec
out
xor
test
cmpsb
sbb
jle
xchg
or
mov
pop
out
outsb
add
shl
ret
inc
ja
inc
xchg
fdivs
sub
iret
repnz
call
out
subl
hlt
adc
mov
xchg
add
mov
lock
xor
jl
cmp
inc
add
mov
sbb
push
inc
jo
aad
mov
cs
data16
cmp
add
call
and
loop
push
dec
call
or
add
nop
fwait
inc
inc
add
std
cltd
xchg
and
pop
mov
sub
aad
xchg
lret
xchg
xchg
loopne
xor
add
and
push
sub
inc
orl
stc
mov
es
cwtl
andb
add
andb
and
aam
add
out
add
adc
add
stc
aas
mov
sahf
jno
mov
add
jae
movsb
add
outsl
popf
pop
mov
mov
nop
rolb
std
sub
fiadds
add
mov
cs
fildl
pop
xchg
enter
sbb
mov
test
or
das
sbb
pop
gs
shl
outsb
ficompl
nopl
jae
cs
pop
stos
add
mov
incb
fcmovnb
add
mov
lods
sbb
into
mov
imull
pop
movsl
mov
cmp
leave
pusha
cmp
pop
jae
cmp
push
xchg
xor
and
icebp
popf
rorb
mov
sarb
pop
addl
xor
xor
in
mov
mov
imul
arpl
push
popf
pop
addb
inc
aam
push
add
leave
loop
add
dec
aad
sarl
adc
mov
outsl
sarb
add
mov
call
pop
cs
stos
push
arpl
and
mov
push
daa
sbb
cmpb
mov
xorb
mov
pop
test
xchg
mov
int3
xchg
pop
rcr
outsb
jae
fidivrl
or
mov
fisttps
pop
paddusb
sbb
push
adc
jno
pop
addr16
mov
cli
jmp
add
xor
xor
pop
pop
fcoms
sbb
push
fstps
or
sti
popa
add
rcr
loopne
hlt
xlat
add
mov
add
mov
and
pushl
add
das
insl
xor
outsl
add
sub
and
sub
and
sbb
push
sbbl
js
sti
in
and
dec
push
fsubrs
dec
or
ds
addl
mov
fldt
add
jg
xchg
rcl
lcall
je
adc
cmova
insl
btc
or
add
mov
les
cmp
cwtl
xor
sub
sub
xchg
jbe
testb
xchg
fcoml
fwait
add
add
mov
aas
or
dec
dec
adc
mov
jg,pn
add
adc
sub
and
adc
add
or
aam
mov
or
sbb
mov
xor
fimull
sub
sub
ret
xor
fisubrl
leave
cwtl
pop
add
cmpsl
rorb
iret
mov
jno
andb
mov
outsl
fcompl
push
pop
inc
imul
mov
cmpsl
add
push
test
mov
jmp
add
inc
xchg
xorb
ja
cmovp
cmp
scas
sbb
sbb
push
aad
insb
mov
pop
outsl
rcrb
cmp
add
addb
mov
adc
fldenv
addr16
ret
leave
orl
mov
std
add
mov
add
pop
nop
adc
test
and
or
into
push
and
mov
jl
sbb
add
push
shll
rolb
cmp
pop
mov
mov
sub
imul
pop
xor
jbe
int3
sahf
pop
clc
mov
aam
xchg
add
enter
push
add
les
mov
inc
add
inc
or
add
add
dec
and
sub
lcall
jo
sti
jmp
stos
or
xchg
push
movsb
rcrl
rcrb
mov
mov
icebp
mov
dec
sbb
adc
call
dec
arpl
cltd
enter
dec
jne
add
inc
loopne
jp
xor
cmp
shll
adcl
hlt
fisubrs
jle
jo
inc
add
mov
pop
mov
add
lret
adc
movsb
xlat
fistpl
jbe
cld
int
mov
jo
inc
hlt
fildl
add
inc
and
dec
mov
cmp
and
into
xchg
std
out
push
in
dec
dec
addr16
icebp
movsl
adc
sarb
sub
subb
push
aaa
mov
cmc
add
paddusw
ljmp
inc
movsb
mov
faddl
pushf
xlat
adc
xchg
ret
and
and
addl
mov
and
shll
inc
jecxz
xchg
sub
outsl
push
mov
or
mov
jae
gs
sub
in
arpl
xchg
push
sub
xor
std
cmp
xor
into
add
out
and
nop
cwtl
btc
or
fimuls
adc
mov
jo
mov
inc
and
dec
addl
inc
mov
add
xchg
loopne
call
inc
and
and
jl
or
arpl
cmp
xor
ds
je
outsb
or
adc
xchg
das
mov
and
pop
xor
les
inc
clc
dec
pushf
sbbl
lods
fbld
mov
test
mov
mov
jg
orb
mov
dec
mov
mov
dec
jae
add
pop
cmpsb
pop
push
jae
dec
or
add
enter
add
sahf
jmp
xchg
and
popf
test
xchg
mov
mov
push
lea
mov
adc
fildl
aam
jle
and
and
or
mov
xor
mov
sub
jp
pop
xor
fs
out
pop
push
add
push
adc
mov
outsb
cmp
pushf
cmp
dec
inc
sub
sub
test
xor
mov
adc
imul
sbb
notl
mov
add
imul
scas
frstor
push
loopne
push
add
xor
mov
scas
add
rol
push
cmp
sahf
push
aam
test
out
fists
jmp
rolb
les
cmp
ljmp
pop
adc
ja
ja
adc
sub
or
push
outsl
hlt
insl
mov
mov
xor
xor
scas
mov
sub
or
dec
inc
jno
icebp
sti
add
aam
scas
add
cmc
mov
mov
adc
ss
insl
or
mov
lret
xchg
pop
xchg
push
and
push
lahf
in
pushf
pop
dec
mov
adc
xchg
mov
and
add
popa
sub
mov
add
sbb
push
pop
push
add
inc
mov
cmp
push
dec
xchg
nop
adc
xor
add
cld
mov
xlat
lock
mov
test
push
icebp
aam
jo
and
inc
pushf
aaa
mov
xor
test
cmp
pushf
dec
sub
fs
leave
xor
insb
mov
mov
mov
cmp
push
xlat
mov
pop
add
jns
xor
or
pop
add
pop
mov
pop
andb
les
or
fstpl
aad
and
mov
pop
in
push
xor
cmp
xor
stos
mov
std
xor
fidivs
shl
jb
pop
fstpl
mov
cmpsl
test
in
add
ret
dec
mov
mov
cmp
add
sub
push
push
mov
std
add
addr16
das
push
fimuls
xor
lea
iret
jmp
orb
pop
mov
leave
pop
mov
inc
add
or
jl
add
xor
dec
js
setno
outsb
inc
add
loopne
sti
mov
and
mov
sbb
add
popa
out
mull
xor
inc
aad
push
mov
push
xor
into
outsb
inc
lock
ja
sub
andb
sbb
cmpsb
push
cmpb
add
test
loopne
add
int
sahf
push
loopne
or
js
bswap
xchg
jle
xorl
add
pop
adcb
enter
mov
fsubrl
mov
pop
or
inc
fdivr
cmp
inc
add
popa
pop
mov
movsb
cmp
movsl
jmp
sahf
loopne
insb
lds
je
add
fwait
shl
jecxz
sbb
iret
and
add
cmp
nop
sbb
popa
pop
sbb
jne
jge
cmp
mov
sbb
inc
push
call
icebp
hlt
in
or
orb
sti
adc
inc
adc
out
fnstenv
xlat
cmp
insl
mov
push
imul
sbb
aas
out
popa
add
xlat
sbb
movsb
pop
aad
popa
add
cmp
mov
out
pop
loop
ficompl
loopne
std
jbe
push
add
stos
out
lret
push
cwtl
xor
jo
mov
shrb
imul
daa
push
add
and
push
jecxz
imul
mov
mov
mov
ret
inc
jle
lock
push
adc
sbb
pop
or
jg
xchg
dec
shlb
movsl
or
inc
ret
inc
or
loopne
nop
adc
cmp
fwait
mov
mov
es
lahf
add
adc
add
mov
test
mov
add
and
clc
iret
outsl
not
add
adc
sub
dec
lret
mov
fbstp
mov
add
stos
test
lds
rolb
push
or
repz
call
dec
les
cmpsb
dec
loopne
repz
icebp
rorb
pop
loopne
or
or
push
push
icebp
adc
pop
fcompl
daa
repnz
jo
xor
rorb
adc
xchg
jecxz
adc
shll
and
push
jecxz
xchg
jle
enter
push
mov
sub
mov
dec
pusha
enter
inc
dec
cs
nop
pop
mov
and
mov
push
ret
add
testl
add
addr16
dec
add
imul
xor
mov
mov
add
sub
leave
or
nop
clc
jns
and
repnz
add
cmc
test
xchg
push
cmp
mov
add
insb
xlat
dec
in
sbb
insl
cs
fisubs
dec
pop
mov
outsl
ret
pusha
cmp
fildll
inc
mov
mov
adc
add
or
push
daa
scas
ljmp
pop
or
imul
add
push
shrb
mov
dec
iret
test
mov
dec
cmpl
pop
adcb
push
mov
imul
sub
ljmp
and
sahf
inc
add
or
loop
add
xchg
jns
cli
mov
pop
cmp
sbb
leave
adc
rclb
or
jno
and
arpl
push
jle
mov
xchg
xchg
imul
jo
adc
inc
test
jae
clc
lea
subb
mov
arpl
andb
cwtl
jecxz
jnp
pop
ja
xchg
cmp
jecxz
pop
push
je
rcrb
push
lock
add
sbb
mov
xlat
and
cld
loop
ss
add
lods
out
cmpsl
mov
mov
push
cmpsb
or
pop
div
push
inc
das
cmp
pop
inc
jmp
or
adc
pop
das
je
imul
sub
les
adc
jle
aas
pop
jmp
jbe
add
cmp
pusha
je
jmp
dec
sti
mov
jl
fdivrl
shlb
or
fst
pusha
push
adc
jb
xor
add
dec
inc
mov
shrb
mov
lret
roll
rorb
jb
rolb
movsb
cmp
fnstenv
cs
sbb
jbe
iret
sub
adc
inc
cmovb
dec
cmpsb
clc
inc
lret
cltd
arpl
adc
inc
imul
jecxz
mov
mov
dec
push
ss
into
add
jbe
mov
pop
inc
imull
sbb
insb
add
rorb
jmp
cmp
or
sbb
add
insl
sub
aam
repnz
and
or
stos
jbe
sbb
add
out
and
fwait
or
adc
lcall
fldenv
inc
out
outsb
jo
ret
in
rorb
xchg
insl
dec
js
push
sub
mov
mov
pusha
repnz
sub
add
inc
popf
les
and
xchg
sbb
xor
sahf
aam
mov
and
cltd
popa
jg
pop
call
ret
pop
test
pop
sbb
sub
lea
adcl
shrb
mov
int3
fwait
js
insb
add
daa
dec
mov
cmp
and
add
xchg
jle
arpl
jbe
cmp
lcall
in
adc
inc
lret
ja
mov
jno
int
call
add
jle
sti
jb
or
and
mov
lret
sub
outsl
stc
int
adc
scas
in
dec
push
add
add
add
jnp
insl
inc
sbb
add
cmp
sub
xchg
inc
in
pop
fmuls
adc
jg
dec
add
push
daa
cld
dec
adc
or
push
es
push
cmpsb
add
xchg
std
push
jmp
push
imul
mov
inc
mov
dec
sbb
and
rcrl
bnd
adc
test
mov
dec
and
sub
iret
pusha
push
sbb
jns
lock
imul
push
jl
out
imul
xor
mov
jmp
push
add
test
and
out
jno
pop
mov
cld
jl
rorb
repnz
jo
and
pop
test
xchg
testl
mov
cmp
jge
pushf
insb
dec
add
pop
adc
cs
push
call
xor
add
xor
jo
aad
add
imul
pop
sbb
lock
and
loopne
pshufw
fsubs
push
jge
cmc
push
lret
lret
int3
rcl
out
loop
lods
xor
fsincos
push
js
scas
stos
add
add
movsl
add
add
add
jae
add
jnp
ja
call
cmp
mov
popf
sub
cmpsb
xchg
mov
add
into
xor
pop
call
outsb
add
mov
jle
mov
stos
sbb
loopne
or
and
push
fwait
xchg
sbb
popl
jo
xor
addb
mov
movq
cmc
jo
aas
bound
pop
mov
stos
loopne
mov
mov
dec
gs
mov
push
add
daa
mov
cmp
cmp
ret
add
pop
sub
cmc
lea
jne
scas
out
stc
add
add
lret
aas
push
popa
fisubrl
popl
xchg
leave
mov
sbb
lods
shll
testb
add
sbb
jnp
and
cmp
incl
sbb
movhps
in
dec
push
sbb
pop
add
callw
sbb
in
leave
aas
adc
mov
inc
inc
push
xor
sbb
cli
jns
pop
push
cmpsb
pop
fiadds
xchg
aam
lods
pop
lret
and
add
and
jns
pop
push
jb
xor
fimull
aas
mov
add
add
sub
push
mov
dec
sub
jae
sbb
add
std
pop
pop
cld
sbb
nop
and
rcr
or
shlb
mov
fldcw
addl
cmp
ljmp
ds
std
ret
xchg
pop
gs
stos
sub
fnstenv
lahf
jnp
xchg
and
dec
push
push
ja
pusha
stos
pusha
ds
push
roll
sub
stos
and
add
adc
in
inc
push
repz
xchg
add
ja
insb
cmp
lret
mov
idivb
jmp
sbb
jecxz
shlb
jne
mov
adc
sbb
sti
cs
lret
rolb
jno
lock
idivb
add
adc
orb
andb
out
test
mov
inc
sub
test
add
mov
rcll
jns
or
and
sub
push
sub
jns
add
pop
orb
mov
out
xchg
scas
das
jmp
push
cltd
bound
mov
gs
xor
add
add
sub
pop
and
xor
and
jmp
or
xor
mov
cmp
dec
hlt
push
subl
dec
jbe
lds
mov
je
pop
mov
add
add
dec
inc
insl
ds
cmp
scas
xor
dec
insl
sub
sbb
push
fsubl
cmc
mov
jecxz
test
lods
inc
mov
lods
cmp
mov
xor
cmp
data16
sbb
das
cwtl
mov
push
movsl
pop
sahf
jnp
xor
xlat
inc
arpl
enter
sbb
popa
out
jle
add
jp
or
testb
cmp
cmove
xchg
std
adc
cmpsb
cmpsl
cli
mov
push
add
sysenter
xchg
cmp
lret
rorl
fdivl
adc
aam
add
jns
sbb
or
push
adc
stos
pop
jmp
mov
add
jmp
outsb
add
sub
inc
jp
jmp
hlt
xor
adc
in
push
in
ret
jae
les
mov
or
sub
adcl
aad
or
sub
adc
jge
cmc
sub
push
adc
and
and
pop
sub
lahf
inc
shlb
scas
pop
xchg
add
dec
pop
jno
jns
inc
and
and
aad
cmpsl
jo
mov
and
aaa
lahf
sub
rolb
dec
pushl
idiv
addr16
jns
outsl
add
sub
mov
pop
rolb
lea
roll
pop
xor
mov
jno
pop
roll
jg
xchg
lret
adc
xchg
ljmp
mov
pop
pop
pushf
mov
jbe
pop
loope
movsl
sbb
cltd
into
dec
loopne
jecxz
adc
and
mov
pop
mov
js
cli
sbb
daa
sbb
aam
sub
mov
dec
call
sahf
xor
or
xor
test
dec
test
jo
js
mov
xor
sbb
or
lahf
rolb
pop
fmuls
insl
mov
fsubl
add
cmc
lahf
icebp
movsb
outsl
lock
mov
inc
xchg
add
dec
lods
movsb
push
jo
and
ret
mov
into
mov
bound
mov
adc
ja
and
rolb
sbbl
les
jo
aad
mov
pop
orl
std
shll
subb
roll
shrb
pushf
popa
jnp
pop
push
sub
shlb
add
lods
add
pop
pusha
iret
mov
test
push
jmp
pop
xor
add
shrb
cmp
sub
lahf
jle
cld
sub
cmpsb
aas
sub
add
mov
pop
nop
cmp
and
xchg
pop
add
push
lds
add
imul
pop
sbb
loopne
add
ret
rcl
mov
add
fwait
cltd
jl
add
loop
sti
cld
mov
int3
aaa
fcomip
xchg
lock
add
push
loopne
pusha
mov
sbb
push
add
jl
cld
fwait
dec
add
cmp
sub
or
inc
sahf
out
test
insb
test
adc
aad
nop
jb
out
dec
cmpsb
inc
jg
and
and
test
adc
sub
adc
test
mov
repnz
mov
mov
sbb
mov
lahf
mov
inc
jne
pop
add
scas
or
cs
add
jp
hlt
xchg
js
add
cmp
aas
jl
sub
mov
mov
fs
and
add
mov
ret
rorl
add
jbe
aas
test
and
call
adcl
jo
mov
cmp
scas
dec
add
mov
shlb
jae
push
add
xchg
loope
jne
sbb
push
icebp
push
push
dec
in
aas
cmp
mov
por
popf
add
push
push
push
inc
mov
scas
add
sar
xor
cmp
inc
inc
sub
push
xchg
nop
mulb
leave
shll
and
xlat
lret
loope
cmp
mov
movsb
add
iret
mov
and
mov
pop
mov
cmp
adc
aas
push
dec
sub
or
mov
nop
jo
outsl
xchg
mov
ljmp
pop
shll
xchg
fs
fldt
push
cmp
filds
dec
sub
loope
fidivs
inc
add
je
xor
jno
add
ret
jg,pn
mov
add
iret
push
popa
das
icebp
cmp
add
cmp
pop
out
xor
stos
pop
in
cld
adc
xor
mulb
cld
add
mov
push
loop
repnz
jmp
into
add
lods
loope
mov
incl
data16
and
pop
add
mov
fs
pop
mov
jnp
into
es
cmp
add
popf
rclb
push
cli
and
out
lock
fdivp
in
cmpl
rolb
add
cld
xchg
or
mov
sub
xor
push
jns
aam
add
or
and
icebp
pop
dec
push
shlb
outsb
mov
adc
sbb
sub
popa
mov
ret
jbe
test
cmp
je
nop
push
cmp
rorl
pop
icebp
ret
imul
cmp
loopne
add
xchg
int
call
cld
add
jne
fiadds
adc
push
cwtl
lods
rcrl
push
inc
hlt
add
xor
nop
clc
mulb
push
dec
add
mov
jmp
movsb
inc
js
sets
inc
pop
pushf
add
mov
xchg
fs
addb
inc
cmp
add
mov
lret
mov
inc
lret
jns
add
ret
add
add
xchg
sarb
out
push
dec
shr
pop
sub
or
mov
and
or
dec
xlat
cwtl
pop
mov
cmp
jae
jecxz
jp
push
push
leave
and
or
add
pop
mov
xchg
flds
mov
imul
pop
cmp
cmpb
mov
imul
xchg
add
lret
inc
loopne
pop
add
jnp
pusha
cli
mov
or
or
add
push
dec
rclb
flds
ds
fwait
mov
inc
lods
cmp
pushf
add
aaa
xor
inc
shrl
lods
pop
je
inc
mov
push
sbb
fidivrs
rcrb
je
sub
enter
outsb
mov
add
sbb
cmc
push
pop
cmp
mov
aad
sbb
shrl
add
and
movsb
jno
sbb
hlt
mov
pusha
push
arpl
pushf
int
inc
out
rcl
cmp
sub
add
add
push
int
xor
inc
and
add
fadds
cmp
xchg
pop
jb
mov
ror
mov
call
pop
jp
mov
hlt
incl
add
data16
xchg
pushf
cmc
add
xor
mov
dec
out
popa
cmp
test
pop
add
out
fldcw
push
addb
jmp
xor
fldcw
xor
clc
inc
pop
in
out
dec
stos
orb
push
add
jbe
in
rclb
or
and
sbb
outsb
cwtl
add
cmp
mov
inc
inc
mov
adc
push
fistpl
test
dec
push
mov
std
xor
ss
fdivrs
mov
fiaddl
push
or
aam
rol
push
pop
dec
mov
adc
or
or
xchg
sti
nop
dec
in
ret
out
push
xchg
sbb
rorb
stos
pop
stc
jb
add
sbb
jmp
hlt
shlb
loop
add
push
push
fdivrl
mov
es
or
jno
dec
sub
cli
or
fidivrl
std
add
mov
and
push
and
lock
mov
roll
nop
pop
add
lods
mov
add
mov
jo
in
cmp
dec
xor
aam
dec
dec
loopne
cltd
pop
lods
loope
fcomps
sbbl
jl
dec
cmp
and
add
mov
jp
and
push
in
imul
pop
mov
push
test
xor
xchg
adc
dec
jge
add
mov
std
add
js
pop
dec
ljmp
inc
test
pop
xchg
add
jmp
nop
xchg
pop
and
ror
add
aad
nop
mov
xchg
xchg
loop
mov
mov
mov
and
pop
dec
adc
xchg
cwtl
lock
icebp
add
and
sub
add
or
fiaddl
iret
jmp
push
dec
mov
cmpsl
add
jl
lods
fstps
ja
mov
add
icebp
cmp
add
sub
push
push
stos
dec
push
xchg
stc
rorl
in
dec
or
mov
loop
push
push
js
inc
ret
cmp
add
xchg
push
lret
pop
outsb
pop
mov
pusha
mov
jo
cs
inc
cld
add
pop
in
mov
aad
pusha
or
or
ja
add
addl
loopne
jg
add
test
pop
adcb
sahf
rcrb
push
cltd
add
xchg
push
lahf
jns
adc
psrad
test
inc
or
xlat
pcmpgtb
test
mov
push
xchg
enter
and
repnz
push
add
mov
adc
add
or
sub
fldt
int
ret
fcom
push
enter
pcmpeqb
xchg
jle
add
inc
loope
jb
lea
jmp
mov
scas
out
ffreep
add
sub
into
pop
popf
mov
xchg
push
xlat
sbb
jbe
lret
pop
mov
mov
inc
or
mov
test
pop
add
mov
fistpll
imul
aas
xor
and
je
jle
adc
pop
mov
cld
loopne
jne
jno
sub
cwtl
add
jg
sbb
dec
lods
mov
sbb
lock
dec
enter
faddl
aad
xor
cltd
out
cld
mulb
sub
flds
addl
je
pop
fisttpl
push
add
sahf
iret
add
lahf
stos
cli
jmp
cmp
jne
ss
push
jno
or
jmp
ret
nop
or
sub
inc
add
mov
jle
sbb
faddl
mov
sub
hlt
sbb
cmp
roll
push
mov
mov
sub
adc
mov
mov
scas
push
add
clc
dec
rcrb
mov
inc
jb
je
aas
in
xor
loop
pcmpgtw
lcall
sbb
inc
lretw
add
mov
jb
hlt
cmp
pusha
add
cmpb
lds
cld
rolb
adc
mov
add
lds
add
sahf
cwtl
notl
jno
xchg
in
jae
add
push
add
stos
loop
call
add
or
add
push
adc
loopne
add
sbb
xchg
add
fmul
push
add
add
dec
or
icebp
in
loopne
add
mov
testb
jbe
outsl
arpl
mov
or
dec
add
pop
cs
out
pop
cmp
shll
inc
dec
lods
imul
ja
mov
call
xchg
test
mov
sbb
add
jle
lret
xchg
mov
inc
or
clc
pop
cli
jae
or
loope
pop
dec
mov
sbb
aad
ret
mov
mov
ret
mov
cmpb
shl
in
rol
fsubl
xchg
sub
scas
fcom
fldl
shll
orb
sub
out
mov
movsl
add
lret
jno
js
adc
out
add
add
movsw
dec
jo
pop
cmp
lahf
mov
test
aas
call
add
jns
sub
les
roll
xchg
inc
add
loope
out
mov
fldl
add
arpl
fwait
or
add
pushf
shr
ror
lcall
jecxz
inc
outsl
mov
mov
add
mov
mov
ret
rolb
sub
mov
mov
push
aad
dec
pop
add
pop
cmp
mov
push
scas
roll
lods
and
out
insl
sub
repnz
add
jae
movsb
scas
sub
dec
fidivrl
add
inc
push
stc
mov
lahf
fbstp
loop
scas
xlat
or
int
dec
mov
mov
push
pop
je
push
push
je
add
cli
sub
mov
inc
addr16
outsl
test
popa
test
push
mov
pop
adc
cmp
sahf
sub
add
cltd
or
adc
xor
xor
jne
roll
and
fstps
int3
mov
push
or
adc
xor
roll
ds
add
sub
cmpsb
stc
sbb
addb
jnp
mov
int
daa
add
sub
es
sub
and
or
inc
mov
loope
add
inc
cmp
stc
lock
daa
add
mov
insb
add
test
mov
sbb
lahf
add
lcall
loopne
decb
mov
add
mov
push
pusha
xor
add
dec
xor
inc
dec
test
popa
pop
cwtl
scas
iret
flds
dec
or
lret
fisubrs
lret
in
daa
xor
mov
lcall
in
add
xor
add
mov
xchg
aas
ljmp
lret
mov
xlat
into
adc
negl
add
aaa
sbb
add
repz
lret
sbb
sub
js
imul
aad
inc
das
mov
stos
cmpsl
inc
stos
push
in
add
pushf
cmp
mov
xchg
les
jmp
xchg
jo
sub
cld
jno
sub
xchg
jg
cmpsl
or
rcrb
sti
jnp
mov
cmp
inc
les
je
roll
and
add
addb
mov
enter
loopne
jae
push
popf
pop
xchg
mov
lcall
aad
fsubrl
fisubrl
sahf
fdivp
mov
cltd
jo
jnp
jp
xor
out
ds
jbe
add
lret
add
xor
pop
decl
adcl
int3
mov
pop
cld
sub
cmp
fmul
and
jo
add
jno
or
dec
sbb
sbb
and
mov
dec
xor
jle
dec
clc
loope
sbb
sbb
mov
xchg
add
pop
or
cmpsl
pop
pop
js
add
dec
jne
push
and
hlt
or
or
insl
or
mov
sub
flds
insb
gs
sbb
xchg
es
cmp
add
pop
add
nop
mov
loope
mov
and
lcall
iret
mov
dec
push
mov
aaa
imul
in
mov
icebp
and
adc
clc
add
enter
pushf
fiadds
fdivrs
push
cld
sub
or
push
hlt
mov
add
cltd
mov
jl
or
and
jns
xchg
loope
sbb
test
inc
mov
inc
mov
mov
mov
inc
jle
cwtl
pop
add
and
mov
nop
movsb
add
push
inc
inc
add
iret
sbbb
loope
cld
in
lret
fwait
add
shrb
rclb
negb
pop
add
sub
jge
and
pushf
lcall
pop
push
rolb
shlb
int
add
std
in
movsl
mov
mov
mov
sbb
mov
mov
adc
and
add
rorb
mov
outsb
movsl
mov
mov
jb
xor
push
adc
jnp
out
lds
imul
pop
jecxz
scas
xorb
mov
add
xor
xor
lcall
addl
test
std
and
mov
add
dec
and
push
sbb
int
and
adc
fiadds
lods
cmpl
fisttpll
stos
pop
mov
lods
jnp
pop
sbb
mov
adc
xor
sub
rcll
cmc
xor
add
loope
stos
adc
mov
outsl
jae
add
and
cmpsl
xchg
push
dec
xor
add
loopne
fiadds
add
cmc
daa
repz
cltd
cmp
lock
lcall
imul
fnstcw
xlat
filds
daa
push
lea
mov
jl
stc
je
add
xchg
inc
sub
les
dec
rcl
xor
push
xchg
mov
add
dec
pusha
adc
in
or
out
dec
xor
outsl
or
xchg
cwtl
add
aaa
stc
hlt
jb
adc
stos
add
adc
into
rolb
pop
cmp
push
xchg
sub
dec
clc
xor
shrb
dec
aad
sub
cwtl
pop
decl
mov
pop
stos
orb
jbe
shrb
nop
mov
pop
xor
mov
jle
in
mov
or
add
les
mov
and
push
and
xchg
and
jnp
sub
cmp
xor
in
pusha
pop
movsb
subb
adc
hlt
pop
push
stos
or
mov
enter
sbb
lock
les
out
aam
lea
fs
and
das
cltd
fisubl
xchg
xchg
add
shrl
lret
call
add
insl
hlt
push
mov
jle
aam
mov
in
icebp
push
push
or
loopne
sbb
out
std
xchg
test
add
push
loope
icebp
mov
pop
in
sbb
xchg
mov
daa
test
pop
inc
push
add
scas
loop
and
gs
iret
rcrl
fwait
add
dec
mov
lock
in
add
sub
fdivr
sarl
add
dec
outsb
rol
rol
lods
nop
add
jl
xchg
fdivrl
je
ljmp
pop
fiadds
mov
lret
cmpsl
mov
xlat
mov
cmpsb
ret
cmp
mov
jns
pusha
js
lock
xlat
sbbl
cmp
push
mov
lret
stos
mov
jecxz
xorb
xchg
loopne
or
lea
js
testl
mov
test
push
lret
push
mov
gs
test
jb
add
imul
xor
gs
out
inc
jb
adc
bound
dec
cmc
jle
jp
insb
cltd
fistl
psubq
mov
data16
popf
popa
bound
out
or
mov
add
out
jne
push
mov
push
inc
pusha
mov
cs
sub
add
ja
and
call
aam
femms
xchg
pop
cmpsl
mov
dec
rep
dec
push
add
shll
bound
testl
jnp
imul
les
notl
or
ja
iret
cmp
test
enter
add
push
add
out
ror
dec
mov
add
xor
fsubr
push
ljmp
enter
bound
and
sub
or
loopne
sarb
push
enter
rcrl
repnz
cmpl
test
add
orb
mov
or
ss
pushl
adc
cli
cmpsb
jns
mov
xchg
mov
cltd
add
imul
je
add
mov
pop
outsb
add
out
sbb
pop
sub
pusha
aam
div
sbb
mov
xchg
mov
sbb
cli
jbe
xor
cmp
mov
enter
cmp
adc
add
push
inc
scas
sbb
mov
pop
jg
shll
or
lret
sbb
leave
insb
add
inc
in
mov
mov
xorl
add
sbb
dec
rclb
int
adc
stc
cmp
xchg
jno
lret
push
out
add
inc
jns
add
xchg
xor
push
cmp
xor
push
mov
in
pop
insb
sbb
or
add
sbb
jnp
xchg
jae
add
iret
cmp
ret
dec
push
and
dec
cmpsl
mov
iret
adc
cwtl
inc
mov
or
and
stc
adc
loope
add
loopne
pop
pop
push
imul
popa
js
mov
add
xor
sbb
iret
mov
inc
or
jmp
push
outsl
rorb
dec
bound
test
mov
lock
pop
pusha
iret
adc
outsl
filds
add
loop
repnz
push
addr16
dec
mov
rorl
cltd
jg
mov
clc
nop
xor
aad
sbb
mov
cmp
sahf
in
je
mov
incb
lods
dec
aam
xchg
cmp
add
or
int
cwtl
aad
xchg
add
sbb
ds
add
add
lock
clc
int3
add
test
mov
ss
sbb
mov
xor
push
xchg
ljmp
popa
or
mov
pop
cmp
lock
sub
in
or
add
out
loope
cmpsb
pop
sbb
or
or
and
jno
mov
push
jl
dec
xor
mov
fists
jbe
jno
adc
jae
scas
add
cwtl
push
cs
lcall
aas
mov
add
movl
pop
mov
testl
and
lods
add
cli
shll
sub
enter
sbb
push
xchg
sbb
rolb
jne
mov
add
add
jno
arpl
jae
les
arpl
pop
out
xchg
wrmsr
adc
lret
sbb
jg
add
lcall
and
jl
cmpl
cmpsb
imul
loopne
loop
sarl
call
fldt
inc
mov
cmpsb
and
push
test
jge
pop
pushf
punpcklwd
arpl
mov
andb
mov
add
sub
in
jnp
mov
gs
js
cmc
in
andl
and
insb
mov
xchg
insb
xchg
adc
leave
mov
jae
in
adc
lods
fsubrp
shlb
gs
add
jl
daa
lret
jb
lahf
mov
cwtl
cmp
push
in
mov
ror
data16
and
loope
mov
push
push
sbb
popa
fcomp
pop
jle
or
pop
cmc
iret
xchg
js
bnd
ficoml
mov
nop
mov
push
sub
add
jnp
test
add
mov
jo
int
stc
mov
adc
xor
mov
dec
add
imul
push
data16
inc
inc
cmp
in
bound
cltd
or
dec
xchg
mov
mov
inc
mov
call
mov
push
add
xor
fsubrl
ret
ja
cmp
push
and
dec
test
fcoms
cmp
es
push
lds
xor
push
fsubs
lock
mov
xlat
push
cmp
add
lods
sbb
loope
dec
mov
push
scas
add
adc
xlat
pop
gs
push
rorb
mov
sub
xor
fcompl
sbb
iret
roll
pop
stos
pusha
fisubl
push
loop
arpl
and
xchg
cmpsl
clc
add
jo
xor
push
clc
nop
push
pusha
cmp
mov
mov
enter
pusha
ret
and
call
dec
cmpw
lcall
jb
xchg
mov
shr
cmp
pusha
sub
sub
xlat
xor
movsb
pushf
fstl
cmp
cmpsb
sbb
sub
mov
cld
outsl
into
enter
add
sbb
push
inc
xlat
pop
loopne
sbb
loope
inc
push
pop
mov
add
pusha
sub
jnp
movsl
push
jmp
mov
lcall
out
fisubl
sub
cmpsl
das
jp
add
daa
xor
cld
mov
cld
mov
loop
jno
ja
cwtl
xchg
iret
cmp
mov
mov
add
jmp
lds
fcom
cmp
cmpb
pop
aad
and
loopne
jmp
inc
cmpsl
jnp
mov
iret
xor
inc
cmpsl
jle
mov
pop
in
rcll
mov
int
sub
pop
lods
dec
imul
jmp
in
jo
adcl
in
jno
outsb
mov
inc
pusha
in
dec
xor
push
jmp
jo
fnstcw
xor
cmc
push
and
mov
rolb
pop
cmp
adc
fiadds
inc
dec
xor
mov
add
lcall
adc
insb
push
add
popf
in
push
mov
orb
push
sar
dec
dec
test
push
out
mov
les
xor
sub
gs
add
rol
push
sub
leave
xchg
and
push
cli
aas
pop
rclb
icebp
add
enter
or
pusha
lods
fadds
jmp
cmp
mov
clc
xchg
sub
sub
inc
test
mov
inc
stos
rorb
ret
pop
and
push
xchg
arpl
or
or
sbb
stc
push
negl
add
mov
jbe
sbb
fdivrl
outsl
outsl
push
cmpsl
inc
sub
add
leave
pop
or
adc
shll
and
mov
sbb
aam
push
push
pop
add
cmp
dec
jnp
shll
mov
std
jmp
repnz
adc
mov
dec
push
mov
out
add
arpl
push
es
call
je
dec
add
aad
rclb
mov
jmp
mov
test
dec
jno
add
daa
dec
pop
mov
adc
in
std
xchg
push
das
js
mov
add
push
adc
push
sbb
mov
dec
gs
push
or
cli
das
xor
lahf
and
and
jp
add
mov
nop
and
es
movsb
sbb
and
xor
shlb
mov
pushf
jns
add
test
push
xchg
ds
lds
mov
add
pusha
cltd
sub
mov
push
sbb
mov
hlt
mov
push
stos
test
xchg
arpl
xchg
push
aas
pop
gs
pop
pop
xorb
mov
sti
movsb
add
mov
daa
cli
or
xor
leave
pop
imul
cli
arpl
pop
adc
mov
push
loop
adc
shrb
add
fs
sbb
into
es
push
xor
cmp
in
stc
lods
int3
ret
mov
add
ljmp
andb
pop
add
aaa
fstp
or
rcrb
add
lods
in
mov
rcrl
pusha
dec
cs
add
sbb
pop
push
lods
ret
mov
mov
div
push
push
test
insb
or
lods
popf
jae
call
push
jns
adc
pusha
jl
dec
fsubrs
call
mov
cli
movl
cmp
scas
push
add
iret
out
in
std
int
test
pop
mov
add
inc
pushf
jmp
xchg
les
and
adc
test
add
mov
or
mov
pop
and
add
fucomi
xchg
insl
pop
or
lahf
sahf
rcrb
or
fldenv
lock
test
or
clc
lods
mov
push
pop
add
xchg
or
mov
lret
test
push
add
jns
hlt
aam
out
xchg
outsb
cmpb
cli
adc
xor
nop
loopne
aad
add
cs
outsl
push
add
shlb
fisubs
clc
add
pop
movsb
call
xchg
inc
sub
add
daa
push
pop
shll
pop
loop
inc
dec
fld
cmp
or
lds
sub
aam
dec
xorb
stos
cmp
out
cmpb
stos
xor
cmp
cltd
sbb
movsl
and
outsl
lock
ret
mov
xchg
xor
and
je
incl
push
jg
out
push
loop
sbb
ret
ds
loopne
and
dec
push
rorb
adc
xchg
xor
xor
jae
fstl
push
adc
and
cmp
add
sub
and
cmp
mov
inc
leave
and
daa
data16
add
ss
negl
mov
loopne
and
push
pop
xor
sar
dec
or
mov
jnp
or
rcll
cld
ja
or
ja
int3
pop
loope
insl
outsb
or
dec
cmp
shl
xor
jns
in
add
inc
adc
sahf
cmp
or
ret
insl
ja
add
insb
cmpsb
dec
sbb
xor
idivb
add
ljmp
sbb
xchg
dec
stos
std
in
cmp
insb
sbbb
jbe
dec
insl
add
mov
xchg
pushf
add
push
mov
push
rcr
xadd
sbb
jbe
js
add
xlat
mov
add
add
add
jnp
cltd
and
sbb
cmp
mov
add
insb
frstor
hlt
ljmp
or
call
pop
push
mov
cmp
and
lahf
es
pop
dec
cmp
add
bound
inc
jg
adc
xor
lcall
test
rorb
push
jbe
mov
xorb
push
fs
cld
lds
xor
add
pushf
outsb
xorb
xchg
add
movsb
cmp
jb
jp
add
lcall
ljmp
jb
fimull
lret
and
ja
scas
add
xchg
pop
stos
sub
fxch
popl
fdivs
int3
cmp
arpl
call
xor
inc
sbb
push
push
mov
loopne
dec
lods
imul
cmpb
vpunpcklqdq
js
int3
testb
cmp
jne
xchg
xor
stc
mov
sub
cmp
or
mov
loopne
gs
inc
xchg
mov
pusha
mov
jns
ds
ss
loopne
in
or
popa
insl
data16
and
push
ret
add
cli
mov
out
xchg
xor
jae
repz
outsl
add
stos
sbb
es
pop
lods
sar
shl
mov
pop
das
dec
fldt
xchg
ret
xchg
and
add
sub
into
add
or
insl
filds
sub
mov
shlb
add
arpl
adc
fadds
cmp
rcr
push
inc
lds
loope
mov
sub
sbb
insb
add
sbb
imul
dec
xchg
inc
or
pop
cmp
scas
dec
ja
clc
adc
cmpsl
pop
sbb
add
ljmp
sahf
add
push
or
xchg
shlb
ja
clc
add
mov
cwtl
ss
or
movsb
cmp
int
push
xorl
sarb
test
mov
add
in
push
add
orl
add
std
mov
sbb
adc
push
popf
lods
sub
int3
sub
pop
cmp
cli
inc
inc
xor
xor
add
push
xor
cmp
add
jae
jg
aaa
iret
arpl
xchg
mov
sbb
adc
add
into
sti
lret
inc
clc
inc
lahf
pop
cmc
jecxz
subb
aaa
push
jne
push
mov
clc
imul
xor
out
inc
shll
pop
sbb
jns
dec
fsubl
xor
add
and
add
iret
dec
lret
ljmp
ret
fbstp
pop
mov
add
aad
mov
add
dec
dec
fistpll
lea
add
popa
cmpsb
inc
pop
dec
enter
arpl
xor
cmp
js
xor
test
mov
add
add
les
cwtl
xchg
fdivl
add
sti
movsb
gs
pop
push
ljmp
ss
repnz
add
orb
fcomps
and
sahf
add
testb
dec
cmp
test
cmp
rorl
je
add
mov
xor
add
aad
outsl
dec
jg
add
movsb
dec
call
dec
inc
ret
std
add
add
aaa
jbe
push
test
add
dec
lcall
xchg
add
andb
dec
cld
push
fcomps
idivl
and
cmp
jns
loopne
push
jp
and
subb
or
imul
call
fnsave
add
sub
mov
sbb
sbb
movsb
sub
imul
lods
mov
rol
orl
sahf
add
cmp
popf
add
sub
mov
inc
inc
push
xchg
aad
scas
cmp
push
push
add
scas
fdivp
in
lods
cmp
mov
icebp
popa
pusha
in
call
rep
rcll
fstpt
test
sarb
dec
fisttpll
enter
mov
addb
mov
in
pop
and
xor
rorb
cmp
push
into
loop
sub
out
jne
or
inc
xor
hlt
in
or
cltd
cmpsb
and
add
ljmp
icebp
xor
jo
and
jno
loop
cmpb
stc
lahf
sub
jmp
add
rol
or
or
arpl
pop
adc
push
pop
xor
xchg
dec
sbb
add
stos
out
outsl
xchg
xchg
and
stc
mov
push
push
outsb
dec
mov
dec
repz
mov
mov
or
push
add
push
les
push
mov
add
daa
test
rcrb
jns
cmp
sbb
mov
loopne
test
in
xchg
dec
xchg
bnd
push
xchg
xorb
sub
sbb
sarl
push
xor
gs
adc
icebp
es
mov
loop
daa
enter
add
notb
adc
call
xor
add
enter
xchg
sub
jmp
outsl
decb
fnstenv
out
adc
xor
add
add
icebp
test
adc
in
jmp
loope
lcall
mov
orb
cmp
jo
add
inc
movsl
andb
dec
cmp
in
adc
sti
test
inc
hlt
aaa
mov
xor
xor
push
adc
and
adc
mov
pop
push
add
push
mov
push
xor
rcpps
push
adcl
rorb
sbb
stc
mov
mov
jb
push
out
xchg
fistps
push
stc
pop
sub
popf
push
aaa
or
lods
dec
pop
pop
inc
push
sti
xchg
nop
inc
jmp
xchg
jmp
add
xchg
push
adc
loop
xchg
mov
dec
out
xchg
aas
out
out
xchg
rclb
mov
mov
stos
test
shl
adc
popf
cmpl
pushf
xor
cmp
inc
jge
sbb
clc
mov
aaa
inc
xchg
add
jo
orl
xor
push
mov
jl
push
or
pop
out
pusha
mov
xor
add
pop
jge
outsl
mov
out
jp
add
sub
bound
dec
jne
or
mov
mov
or
sti
push
pop
stos
sub
je
cli
aad
mov
or
testb
sub
aaa
cmp
fs
push
xchg
jbe
clc
jle
cmp
pop
orb
in
push
dec
push
mov
inc
inc
jns
and
add
das
out
or
loop
jno
cmpsb
sbb
pop
out
cmp
or
popf
je
cmpb
pop
push
and
test
sbb
in
sub
movb
stos
mov
xchg
or
adc
add
rorb
add
cli
cmpsl
mov
xor
cmp
adc
es
lcall
int3
push
add
xchg
jns
arpl
push
add
sbb
cmp
shl
cmc
or
iret
lock
mov
lods
mov
test
roll
cmp
adc
sbb
repz
mov
out
pop
movsb
mov
inc
push
mov
add
pop
pop
add
jp
out
xchg
sahf
stc
mov
adc
jne
xor
paddsb
pushf
push
and
xchg
push
ja
jns
or
popa
pop
xchg
sar
add
mov
aas
push
add
add
into
xchg
add
popf
and
add
add
inc
sub
les
add
sbb
mov
add
xor
xchg
jle
cmp
xchg
paddusw
pop
add
leave
adc
sbb
stos
xor
daa
idiv
cmp
cmp
mov
add
adc
dec
xchg
ret
add
mull
popf
push
lds
xlat
add
lock
jecxz
cmp
mov
and
jae
mov
mov
inc
std
cmp
cmp
inc
neg
push
push
cmp
fsubl
out
push
mov
in
push
sbb
mov
jnp
add
aam
std
leave
inc
popf
testl
and
mov
xlat
fldl
adcl
jecxz
push
add
adcb
int
inc
lods
lahf
adc
mov
cwtl
pop
add
test
scas
xor
and
cmp
add
cmp
pop
and
sbb
aas
add
push
aam
add
jo
or
out
rcrl
filds
adc
pop
sub
rcll
xchg
add
xlat
jo
mov
or
cmpb
repz
dec
push
data16
add
negb
sbb
push
pop
das
inc
mov
cltd
inc
add
loopne
pop
lock
xor
xchg
test
mov
cmc
pop
in
sbb
inc
sub
lcall
sbb
pop
mov
mov
and
add
jns
jg
aaa
jmp
add
cmpsl
inc
mov
add
xor
fs
or
scas
rcr
xchg
fadds
leave
dec
adc
add
sbb
add
add
and
aam
lods
push
dec
jg
jle
cmp
inc
xchg
sbb
jnp,pn
jl
lds
or
mov
xor
cmp
imul
dec
cmp
inc
sbb
sbb
cwtl
mul
loopne
add
int3
fwait
cld
add
and
jmp
sub
add
or
pushf
sbb
mov
les
das
mov
mov
mov
cs
inc
ret
xor
mov
xor
add
push
jp
mov
adc
add
mov
jbe
mov
jne
outsb
int3
sbb
xchg
or
xor
jecxz
repz
pop
adc
add
imul
repnz
lcall
in
add
sarb
jg
jp
push
push
ret
and
add
icebp
ficoms
cmp
pushf
jmp
xor
mov
in
out
add
sub
fidivrl
mov
ret
add
or
rol
jmp
and
jb
add
sub
aas
rol
add
lods
cmc
xchg
and
push
and
jne
in
repnz
pop
sub
xorl
cli
clc
add
xor
in
cmp
add
cmp
es
xor
test
mov
roll
shll
int
and
lret
xor
and
sbb
push
add
sti
dec
clc
popf
cmpsb
daa
cmp
fadds
xor
arpl
call
out
add
popf
shll
test
repz
sbb
or
mov
mov
in
add
and
cwtl
pop
lock
adc
mov
loop
mov
mov
push
lcall
repnz
popf
das
dec
mov
mov
nop
loop
dec
xor
insb
in
fdiv
jne
add
leave
or
push
push
sbb
and
scas
or
outsl
sbb
and
jle
xchg
cmp
xchg
in
xchg
mov
xor
orl
pop
icebp
adc
pop
lods
add
out
cmp
mov
mov
lret
aas
pop
and
dec
mov
js
jle
outsl
pop
push
fsts
mov
in
out
xor
fiaddl
add
subb
clc
sbb
jecxz
inc
insl
insb
mov
xor
sub
outsl
ss
cwtl
das
add
pop
pop
into
ds
jp
pop
jg
lock
mov
rcl
adc
insl
and
mov
inc
dec
mov
in
or
push
mov
xchg
sbb
arpl
or
xchg
jno
insl
mov
gs
jmp
rclb
mov
repz
mov
add
fistl
push
cmp
negl
sbb
pop
cmpb
push
ds
pusha
out
rol
cld
inc
in
lock
fmuls
pop
inc
sub
fbld
and
and
adc
push
or
out
pavgb
xlat
xor
dec
in
leave
out
add
push
aaa
sbb
js
inc
pushf
ficomps
cld
add
scas
adc
jno
sub
mov
pop
scas
add
sarb
leave
lods
das
add
xor
jbe
sub
push
xor
pop
pop
pop
pop
lds
add
or
dec
add
fbstp
cwtl
xor
pop
pop
add
out
cmp
mov
cwtl
pop
and
ss
add
mov
add
dec
push
lock
pop
adc
mov
mov
inc
add
and
mov
pusha
add
mov
daa
adc
xor
mov
add
xor
jae
movsb
sub
flds
mov
pop
xor
sbb
xlat
mov
jbe
lds
add
or
mov
bound
aas
or
xchg
sub
xchg
xchg
pop
xchg
jle
rorb
mov
add
mov
xchg
push
call
leave
mov
pop
cmpsl
subb
sub
or
outsl
add
ficoml
jnp
subb
add
rorl
inc
inc
icebp
sbb
cs
or
inc
cwtl
pop
mov
add
and
dec
daa
addr16
rcll
ss
sub
sub
mov
ds
mov
mov
aam
out
push
adcb
mov
xor
push
pop
outsl
xchg
xor
mov
pop
test
mov
fcmove
mov
xorl
pop
int
cmpsl
pop
or
out
mov
jmp
stos
mov
dec
xchg
add
mov
xchg
inc
fadds
aam
leavew
stos
icebp
inc
xlat
fldcw
movsb
add
aas
sti
mov
dec
out
mov
fisubs
mov
test
jp
add
gs
or
or
test
rorb
enter
add
cmpsb
xchg
dec
std
fiaddl
push
mov
cltd
iret
adc
out
add
out
rcr
inc
outsl
push
mov
add
pop
sbb
inc
add
cmp
popa
adc
or
mov
xchg
les
add
sub
loope
jns
and
xchg
jmp
xchg
dec
inc
pop
add
decl
popa
mov
mov
add
std
shlb
in
int3
cmc
sub
add
flds
ja
lods
icebp
ret
pusha
aas
pop
cmpsb
pop
adc
jnp
add
stc
std
or
js
pop
ret
sbb
jo
fwait
popa
popl
fs
jns
adcb
stos
add
add
test
xor
pop
mov
adc
and
pop
mov
das
popa
mov
repz
or
incb
xorl
push
sbb
mov
add
mov
int
insl
stos
add
and
sti
cmp
or
lds
adc
int3
jb
mov
test
xor
bound
dec
sbbl
mov
lahf
ffree
shrl
adc
xchg
push
addl
sarl
lds
pusha
pop
mov
add
xchg
mov
pop
cli
pushf
or
insl
ret
and
sbb
inc
shl
dec
mov
pop
repnz
xor
cld
sbb
repz
dec
sub
cmp
mov
xchg
push
xchg
decb
addb
out
scas
jmp
popa
outsb
aam
fisttpll
push
jl
mov
cmp
inc
adc
leave
lods
inc
clc
cmp
insl
cmpsl
or
jl
js
or
sub
lock
cmp
or
frstor
dec
or
adc
sbb
inc
adc
loop
jl
adc
gs
and
push
sahf
stc
pop
nop/reserved
jo
call
add
hlt
mov
ljmp
test
add
mov
rorl
out
and
je
inc
imul
xchg
add
in
and
sbb
mov
test
out
mov
jmp
dec
xor
add
scas
and
mov
insb
adc
cmp
inc
sbbb
stos
in
icebp
pop
movsb
sbb
add
sub
add
popf
cltd
push
pop
push
pusha
mov
mov
test
adc
xor
enter
sub
push
ljmp
push
mov
jne
dec
leave
mov
cli
out
popf
loope
jp
jb
out
out
loope
dec
add
inc
mov
pop
jbe
and
stc
pop
push
daa
or
add
movb
call
shr
outsb
jae
pop
add
push
pop
xchg
je
add
mov
arpl
dec
inc
add
mov
dec
aam
bound
popa
frstor
xor
xchg
fdivrl
pop
in
pop
inc
dec
cmpsb
mov
icebp
add
cmp
or
sbb
aam
jbe
cmc
add
or
lcall
cmp
sbb
adc
push
xchg
lahf
push
pop
add
add
shll
or
es
shrl
jo
or
pop
cltd
sub
popa
add
inc
dec
and
mov
dec
pop
jl
push
inc
shrl
pop
sbb
movsb
dec
dec
popa
dec
rcr
mov
adc
pop
mov
xchg
daa
fildl
or
add
sahf
je
adc
add
mov
pop
fs
clc
inc
sbb
movsb
mov
add
cmp
add
in
cmp
loopne
shlb
dec
push
xor
sbb
dec
negl
mov
shll
test
jnp
clc
inc
in
add
mov
js
dec
or
sar
dec
mov
adc
loopne
sbb
jl
into
lea
push
jbe
shl
and
out
mov
adc
adc
add
dec
enter
or
out
and
ljmp
sbb
imul
cltd
out
std
mov
es
loope
frstor
push
mov
popa
or
cltd
sub
sub
outsb
add
pushf
push
jb
dec
xchg
pop
out
cmpsl
rol
jae
xor
ljmp
iret
pusha
repnz
ds
add
jle
add
iret
and
or
or
jae
sbb
imul
inc
loopne
arpl
cltd
push
fcmovnb
idivb
cmp
xor
add
lea
xchg
sahf
mov
inc
addb
sub
mov
mov
jae
xchg
cmp
mov
jmp
push
and
sbbl
xchg
movsb
push
sbbl
cltd
xchg
das
orb
push
jp
xchg
add
loop
fidivrs
add
or
xor
mov
inc
fcomi
out
inc
cwtl
mov
sar
sub
inc
cmpl
pop
test
mov
add
dec
sahf
aad
mov
mov
test
inc
pop
in
test
cwtl
push
pop
mov
cmp
shlb
fidivrs
lcall
rcrb
rolb
mov
add
int3
push
gs
repnz
sbb
sub
push
sbb
adc
test
jbe
rcrb
je
or
ret
jb
mov
cwtl
out
inc
faddl
mov
add
out
pop
xchg
cmp
cmp
xor
xchg
jbe
mov
ret
fsubrl
es
push
dec
shrb
loopne
popl
adc
adc
incb
orb
movsb
xchg
add
jmp
pop
push
cmp
cltd
add
mov
pop
jns
enter
sbb
mov
cmc
ja
mov
loop
or
push
pop
clc
adc
xorl
or
pop
fprem
cwtl
and
mov
and
adc
mov
inc
fs
mov
jmp
bound
sbb
sbb
imull
mov
mov
ficompl
sti
pop
mov
adc
daa
adc
add
dec
nop
out
cwtl
repz
sub
pop
jmp
call
in
clc
add
enter
rcrb
es
inc
jge
bound
pop
imul
insb
add
shlb
adc
cmp
mov
aam
pop
test
add
mov
outsl
xor
xchg
mov
loop
pop
pop
pop
lods
xchg
inc
and
ds
cmc
sub
and
push
or
inc
xor
push
push
inc
pop
mov
add
sbb
add
add
xchg
xchg
or
push
pushf
in
fwait
mov
lods
or
inc
out
cwtl
pop
pop
push
incb
aaa
lahf
loope
addb
arpl
xor
scas
into
insl
les
arpl
rolb
sub
stos
mov
or
pop
lock
jo
sti
xchg
and
fs
nop
mov
adc
add
lret
pop
sbb
add
xchg
pusha
dec
jle
add
mov
mov
cmc
pusha
xlat
or
addl
iret
test
jno
sub
out
cmp
test
sahf
jg
cmp
or
add
sub
imul
xchg
push
and
mov
mov
xchg
ss
leave
push
ja
or
dec
dec
sbb
dec
out
xchg
adcl
push
dec
out
dec
xor
shrb
mov
dec
daa
push
push
xchg
cmp
cmpsb
subb
push
ss
adc
xchg
jns
jle
xsaves
xchg
lods
sub
in
sub
sbb
rcrb
in
adc
sbb
inc
xor
sub
roll
fwait
add
pop
xchg
jle
arpl
cmc
mov
jg
sub
inc
mov
test
jmp
pusha
or
inc
enter
out
adc
aam
jbe
jge
lret
out
inc
les
add
jne
dec
inc
sub
nop
add
pop
push
push
xchg
sysexit
arpl
movsl
or
pop
jno
add
inc
std
test
leave
arpl
in
mov
add
mov
xchg
push
nop
fcoms
jge
push
cmp
test
cmp
fs
nop
popa
mov
and
xor
or
repz
lcall
mov
cmc
adc
and
dec
imul
mov
push
adcb
rcrl
dec
cmpsb
aam
and
mov
rorb
jle
in
repz
cld
jg
nop
negl
add
ret
xchg
ja
add
lock
inc
sub
xor
adc
icebp
pop
cltd
inc
arpl
jl
jae
dec
jp
xchg
xchg
jnp
jne
clc
pop
pop
inc
mov
movsl
push
inc
orb
xchg
sub
xchg
iret
subl
xor
sub
inc
fnsave
fmull
cmp
add
or
mov
popa
adc
add
pop
adc
cmp
push
dec
gs
add
mov
sbb
jge
adc
sahf
pop
jl
cmp
or
push
loopne
mov
xor
mov
dec
add
cwtl
mov
shrl
push
or
ret
xchg
out
xor
mov
int
cmpsl
cmpl
add
ja
dec
jbe
andb
xchg
test
sub
add
stc
and
mov
enter
add
sbbl
rorb
js
pop
orps
fidivrs
outsb
ds
mov
mov
xchg
cmp
pop
mov
dec
in
repnz
pop
and
jecxz
jbe
fistpll
pop
stos
outsb
fadds
arpl
pop
inc
inc
mov
jbe
sbb
pop
imul
les
mov
js,pt
inc
xor
lcall
gs
dec
stc
insl
pop
jbe
add
push
cwtl
adc
ret
mov
repnz
out
js
push
mov
cmpl
add
xchg
xchg
call
add
addr16
jg
dec
ljmp
cwtl
adcb
adc
outsl
js
sbb
std
jns
add
shl
xchg
add
jne
inc
push
push
int3
sbb
dec
cmp
cmpb
push
add
popa
mov
je
adc
js
test
mov
mov
jne
cmc
jns
into
jae
lea
adc
jecxz
ds
loop
mov
add
shll
inc
aaa
rorb
xor
and
adc
mov
pop
mov
sub
in
popa
adc
dec
popf
and
or
arpl
xor
in
xchg
adc
clc
mov
jne
les
cmp
dec
and
add
xor
daa
mov
orl
push
je
enter
rcr
loop
add
repnz
sti
sbb
and
cwtl
mov
hlt
add
imul
aam
mov
add
mov
pop
shll
loopne
add
enter
jae
push
dec
push
rolb
push
push
arpl
jmp
add
push
lods
rcll
fs
push
mov
push
pop
xchg
sbb
jbe
jo
arpl
and
rorb
insb
pop
inc
je
sub
jb
adc
dec
int3
mov
adc
lods
cmp
fildll
call
inc
lods
add
imul
add
sahf
mov
mov
cli
jns
and
inc
inc
jmp
mov
lahf
ficompl
test
scas
and
in
mulb
hlt
push
xchg
mov
xchg
add
addb
and
cmp
fiadds
inc
push
sub
xchg
mov
stc
adc
arpl
dec
jb
jo
jge
imul
sbb
shl
imul
jnp
add
imul
fs
xor
dec
dec
xchg
add
mov
push
addb
jl
in
andl
push
shrb
and
add
jo
mov
iret
add
ljmp
add
adc
adc
popa
pop
inc
jb
sub
inc
add
mov
fadds
loopne
outsl
inc
dec
divl
or
test
pop
mov
and
sub
lds
xchg
and
and
lcall
bound
or
jbe
and
aam
imulb
mov
pop
lret
popa
pushf
jno
and
mov
sub
dec
and
or
stos
inc
out
add
add
xor
loope
inc
add
ret
mov
mov
loopne
xor
mov
pushf
aam
ja
mov
clc
divl
je
popa
pusha
and
sbb
inc
icebp
shlb
add
mov
leave
dec
stos
lods
lock
in
neg
jno
add
pop
int
leave
test
mov
test
mov
add
inc
dec
cmp
sbb
insl
fstpl
add
push
add
je
pusha
mov
dec
add
pop
pop
add
or
jne
fiadds
xchg
fidivrl
decb
imul
add
or
int
sbb
add
hlt
clc
pop
dec
fldl
es
nop
sahf
test
push
inc
shrb
sbb
push
iret
add
mov
in
mov
cmp
test
add
data16
pop
sbb
push
mov
cmp
add
push
and
scas
xor
lea
outsb
xchg
lock
xchg
imul
add
pop
xor
push
pop
clts
pop
jno
xchg
aaa
mov
in
es
sti
sbb
inc
out
aaa
add
lea
aam
pop
dec
enter
adc
into
lock
sbb
or
ja
push
in
jb
adc
out
xor
jl
jo
decb
cwtl
push
nop
push
xchg
and
fdivr
pusha
adc
mov
out
mov
cs
out
inc
sbb
arpl
add
cmp
add
sbb
jl
adc
fsubr
nop
dec
cmp
mov
fs
xchg
jle
add
sub
call
jmp
js
stos
outsl
ljmp
cmp
sbb
enter
sub
and
dec
add
jle
xchg
sub
xchg
stos
idiv
gs
or
and
ret
inc
popf
push
les
ficoms
in
xchg
pop
cwtl
insb
out
mov
sahf
xchg
add
in
jge
popl
push
dec
clc
inc
mov
and
leave
loopne
dec
xor
mov
add
mov
inc
lcall
cmpsb
bound
stos
enter
adc
movl
mov
mov
inc
mov
ret
mov
xchg
mov
sbbl
aaa
sbb
add
add
xchg
fucomip
add
loopne
mov
add
popa
xor
sub
lock
push
lret
xor
add
hlt
imul
pusha
or
sub
out
rclb
mov
jno
pop
cmp
add
test
sbb
and
add
pop
sbb
pop
sub
enter
fmuls
and
or
rol
dec
sub
inc
jl
and
js
mov
inc
adc
sbb
lret
cltd
sub
pop
orb
cmp
sbb
pushf
mov
and
test
adc
and
push
test
add
dec
mov
pop
in
inc
mov
in
jae
inc
xchg
aas
daa
pushl
adc
test
pop
pop
lea
ficomps
loop
cmp
in
push
mov
iret
xchg
dec
arpl
lods
sbb
mov
sbbl
popa
jbe
adc
push
add
or
fwait
sbb
add
cmp
movsb
inc
sbb
mov
rcrl
incb
vmwrite
subb
pop
sti
xchg
or
insl
stos
or
xor
inc
cwtl
aam
mov
dec
cli
sub
mov
xchg
add
inc
add
mov
stc
cmp
int3
xor
loopne
add
aam
and
or
ds
mov
jmp
dec
test
movsl
pop
pop
add
inc
js
std
add
aad
pushf
and
xchg
sahf
or
je
repz
xor
pop
add
jmp
subb
pusha
pop
dec
and
jb
mov
mov
xchg
test
nop
sar
add
mov
scas
or
dec
jno
add
imul
mov
jnp
cmpsl
sub
nop
aam
in
or
pop
xor
mov
cwtl
push
add
or
imul
mov
pusha
push
cmp
pop
pop
or
mov
movsl
cbtw
xchg
cwtl
pushf
add
popf
or
dec
dec
dec
add
push
add
mov
pop
pop
shrb
orb
fsts
jb
sub
and
or
stc
cmp
xorb
xchg
or
jno
sbb
bound
or
and
pop
in
cmp
test
cld
mov
test
xchg
sub
xor
das
mov
add
xchg
clc
stc
sub
in
icebp
jno
mov
movsb
sbb
add
jae
and
add
pop
dec
int
xchg
push
dec
or
nop
addl
push
xor
add
xchg
jbe
inc
inc
mov
jae
jl
add
mov
cld
jnp
and
pusha
sbb
enter
sarb
jae
sahf
push
xchg
cmpsl
and
lods
and
adc
in
adc
mov
nop
pop
adc
fimuls
pushl
cmc
cwtl
ds
call
mov
arpl
xor
ret
test
lcall
jge
and
xchg
adc
js
clc
adc
sub
add
mov
fadds
and
jo
or
bound
imul
xor
mov
push
aaa
adc
cwtl
add
loope
mov
xchg
add
pop
push
inc
cmp
bound
aam
fistpll
mov
xor
xchg
in
lock
inc
adc
push
inc
xor
jb
push
scas
adc
mov
enter
cld
or
adc
lods
stc
clc
fxtract
lahf
dec
test
add
je
sarb
test
rol
gs
cmp
insl
scas
enter
cmp
lock
jl
ja
pop
or
push
mov
loopne
sub
or
ret
dec
movsb
add
add
cmpsb
dec
xor
adc
mov
adc
test
mov
sbb
xchg
sbb
sbb
movsl
inc
sub
push
cltd
add
inc
cmp
fs
test
out
add
aam
pusha
lods
pop
jle
add
aad
sub
mov
nop
cwtl
clc
jl
add
and
int
add
movsb
mov
lcall
addb
ljmp
mov
adc
test
fs
imul
mov
adc
and
stc
scas
rcll
sti
sub
rcr
lock
cld
inc
int3
fwait
xor
jl
mov
out
lahf
add
dec
hlt
clc
sbb
adc
jnp
add
mov
mov
pop
adc
jge
and
js
add
pusha
inc
movsl
mov
je
lret
or
add
cltd
push
mov
jge
or
push
mov
out
add
inc
cmp
add
xchg
ret
xor
and
push
pop
add
andb
test
cli
xchg
and
bound
adc
rorb
add
mov
mov
or
addb
push
cmpsl
dec
jno
add
pusha
std
test
mov
aad
out
mov
fidivs
roll
add
add
adc
add
das
mov
fiadds
cld
jb
dec
sbb
mov
out
bound
xor
repz
mov
and
icebp
adc
add
stos
add
jg
es
jmp
add
pop
inc
dec
dec
push
and
leave
push
ljmp
mov
add
cltd
cmc
or
mov
xor
pop
pop
and
mov
call
outsb
xchg
fsts
add
mov
cs
and
inc
dec
inc
add
repz
data16
sti
into
push
mov
stos
mov
pusha
out
mov
mov
jl
pop
mov
sbb
and
dec
js
popa
scas
jg
mov
add
sub
out
adc
outsl
imul
pusha
or
ja
out
sbb
lret
sub
mov
imul
int
pop
mov
jle
dec
cltd
loopne
xor
leave
push
mov
lahf
fsubrs
jb
mov
in
js
inc
sub
test
add
pop
dec
repnz
leave
ret
mov
jno
sub
sub
mov
outsb
stos
int
add
dec
inc
cmp
and
mov
subb
div
in
fdivr
add
mov
mov
stos
mov
and
orb
add
mov
jg
pop
lods
and
jo
mov
mov
popf
lock
xchg
test
cwtl
dec
adc
int
mov
enter
sub
test
ret
adc
mov
fists
dec
jge
add
popf
cmpb
es
dec
aas
iret
pop
xchg
sub
arpl
cmp
cwtl
sbb
jecxz
frstor
outsb
lcall
test
xor
push
mov
shlb
inc
add
jne
pop
jmp
shlb
es
and
adc
lcall
xchg
and
xor
popa
or
sarl
add
cld
xchg
add
call
xchg
or
cmc
add
inc
add
movsl
flds
sar
dec
aad
in
insl
xor
add
push
fcompl
pop
xor
imul
mov
or
jae
into
cmp
push
push
inc
sub
add
lods
dec
pop
and
nop
imul
add
mov
add
rol
lods
stc
dec
insb
sbb
mov
jne
xlat
cwtl
jecxz
aam
dec
shlb
pop
add
inc
outsl
mov
sub
shrb
pop
jg
pop
cmp
test
es
or
outsb
sti
loopne
sub
hlt
or
jno
fiadds
dec
das
or
fadds
outsb
add
rorb
or
pop
xor
in
cld
fstl
orb
jg
pusha
in
adc
cltd
xor
jp
sbb
inc
dec
push
sbbb
xor
int3
jbe
mov
popa
mov
roll
inc
iret
add
push
and
xor
dec
add
mov
add
add
cld
push
cmp
flds
stos
jbe
roll
mov
inc
sub
push
jae
dec
repz
movsl
rorl
test
xchg
clc
ds
sub
movsl
add
sbb
ja
jns
icebp
or
test
pop
pusha
test
push
push
lock
xchg
imul
xlat
adc
aad
inc
add
mov
rorl
enter
adc
mov
xchg
roll
adc
adc
movsb
test
adc
push
cmp
push
add
test
inc
xor
xor
lea
in
mov
xor
jo
mov
sub
jns
cltd
jecxz
add
jge
mov
sbb
push
xchg
cld
icebp
pop
adc
add
mov
add
mov
imul
enter
test
addr16
sbb
pusha
sbb
mov
jo
mov
shlb
jne
xor
xor
inc
mov
lock
popf
sbb
repz
xor
fildll
dec
int
mov
test
rolb
loope
mov
inc
cwtl
fdivr
dec
inc
les
js
push
sbb
in
pop
hlt
out
inc
xchg
adcb
cwtl
lods
sti
pop
add
mov
aam
lock
sbb
add
lea
nop
xchg
mov
mov
jecxz
dec
sahf
test
cmovbe
add
cwtl
call
adc
packuswb
enter
movsl
or
or
aas
les
mov
add
mov
sbb
rcr
dec
add
outsl
je
bound
aas
dec
data16
xchg
mov
in
movsl
int
xor
movsb
test
xlat
ud2
adc
lcall
sar
leave
outsb
negl
mov
out
cmc
mov
imul
or
adc
xchg
pop
out
push
sbb
es
sbb
cmp
xchg
mov
sbb
insb
scas
jmp
test
pop
add
fsubl
sbb
jns
pop
roll
and
lds
pop
fbld
and
mov
xchg
fildll
inc
jge
push
fdivrp
lods
or
js
add
sub
sbb
arpl
adc
push
das
and
xchg
sub
fwait
cmp
xchg
xchg
lock
sbb
jge
int3
add
lea
add
pop
roll
add
ret
ds
addr16
cmp
enter
in
inc
push
jle
lretw
test
jae
jo
mov
ja
repz
jecxz
sub
adc
int3
sub
jnp
paddd
das
loope
jns
pop
lods
sbb
push
mov
inc
stc
in
fcoml
mov
add
sti
xlat
pop
cmc
orb
test
fdivl
and
stos
call
ja
inc
adc
fildl
ffreep
fldcw
shr
push
movsb
cmp
outsb
xor
dec
or
or
inc
lret
push
and
jge,pt
dec
inc
je
adc
cltd
add
lret
dec
sahf
insb
fsubl
mov
or
push
jbe
je
in
aam
mov
or
mov
lret
push
add
nop
stos
fisttpl
dec
add
ds
or
sub
push
xorb
nop
add
ret
je
add
fistps
jnp
or
cmp
xchg
js
fs
dec
es
sub
sbb
movsl
cmp
popa
repz
push
out
xchg
hlt
sub
pop
aas
cmp
mov
add
sub
mov
es
pop
hlt
mov
shll
sti
inc
popa
mov
pop
imul
daa
mov
mov
push
scas
shrb
sub
leave
inc
dec
inc
xchg
in
outsb
mov
scas
xchg
shlb
jecxz
mov
sub
outsb
mov
aaa
ds
inc
out
add
or
inc
sbb
mov
es
popf
push
fwait
lahf
add
ret
sbb
or
fldl
pop
ret
mov
loopne
test
adc
add
cli
push
xchg
jnp
pop
or
in
adc
divb
add
jae
movsl
mov
and
outsl
data16
inc
fsubr
add
fwait
pop
add
jg,pt
push
jo
push
cltd
and
push
mov
xor
call
hlt
sbb
popa
sbb
push
sahf
pusha
out
fs
stos
lods
or
and
idivl
jne
adc
mov
mov
or
inc
inc
mov
dec
leave
and
rcrl
pop
jno
sbb
orb
mov
cld
outsb
repnz
push
add
inc
push
mov
or
sahf
int
jle
adc
xchg
dec
mov
cmp
ret
int3
sbb
adc
add
scas
inc
adc
nop
addb
insl
hlt
shrb
sbb
jo
xchg
xchg
xchg
inc
aas
or
or
sub
mov
ja
pinsrw
inc
lret
pusha
pusha
jne
mov
push
lea
test
paddsb
adc
hlt
xchg
mov
pop
add
in
add
nop
push
mov
jge
push
movsb
adc
jne
rcpps
call
fs
loopne
and
clc
xchg
pop
roll
cmp
pop
cmp
push
popf
ss
push
mov
out
xor
mov
xlat
int
arpl
add
add
out
jle
in
fcmovbe
dec
mov
fsubs
fsubr
jb
ret
and
fcoms
xchg
add
hlt
ja
pop
mov
sub
fildl
pop
hlt
sub
les
sub
mov
pusha
mov
mov
ret
jae
add
xor
mov
xchg
mov
sbb
pop
or
cmp
pop
sub
and
jp
mov
add
xor
xor
lret
fdivs
mov
sarb
lea
inc
and
ds
and
add
push
mov
popf
movsl
ret
xor
mov
rcrl
push
sbb
jne
cmp
sbb
lea
hlt
jecxz
xor
in
test
dec
add
adc
push
adc
inc
call
pusha
inc
xchg
mov
push
add
lds
testl
fnstsw
pushf
sub
in
scas
cmp
add
xor
shrl
fs
mov
es
pop
lods
ds
mov
sarl
cmpl
sbb
les
push
outsb
pop
sub
push
cmp
enter
mov
push
add
test
sub
es
add
in
and
xlat
add
mov
push
lock
inc
mov
jns
es
xor
std
mov
mov
loop
nop
das
mov
jae
mov
dec
dec
and
mov
out
fsubrl
jno
push
fstl
mov
mov
pushf
sub
lock
outsb
push
and
rcrb
enter
test
lods
add
jne
push
aad
scas
pop
or
popa
loop
lock
jmp
cmp
jne
ja
loop
xlat
and
add
push
sbbl
mov
xchg
dec
xchg
faddl
bnd
add
inc
add
or
lods
ret
xor
movsb
rcrl
pop
enter
fisubs
shlb
mov
xor
sub
cmpsb
ret
inc
xor
jp
fnstcw
add
add
sub
mov
ret
loopne
xchg
add
test
inc
pop
sti
or
jmp
insb
xchg
add
mov
mov
or
jle
out
mov
cld
xlat
adc
subl
shlb
and
sbb
cmp
push
jmp
cmp
inc
inc
call
sar
pop
in
test
push
rorb
add
mov
repz
or
psubq
or
repnz
imul
sub
test
dec
lret
sub
cmp
orb
jb
mov
fiaddl
cwtl
pushf
nop
cld
pop
fcomip
add
insl
jb
cmp
sbbb
fnsave
add
jmp
mov
daa
mov
shll
dec
inc
sbb
jp
and
clc
insl
or
lock
or
fwait
sbb
jg
into
rorb
jp
jo
xchg
sub
and
aas
add
mov
add
cmp
imul
sbb
outsb
fsubs
dec
stos
clc
inc
test
shlb
xor
push
sahf
add
xchg
and
xchg
inc
mov
out
mov
or
fcmovb
shlb
outsb
in
add
mov
xchg
es
fwait
add
les
jo
mov
sub
add
mov
add
cmp
cwtl
js
push
ds
pushf
out
es
aam
clc
mov
adc
mull
movsb
call
mov
lods
dec
movsl
sahf
push
bound
pushl
jg
jle
dec
inc
idivb
push
out
jne
or
int3
add
pushf
repz
add
dec
sarb
jbe
dec
mov
outsl
and
add
add
adc
push
adcl
in
cmp
mov
jns
fwait
mov
roll
sub
je
add
popa
imul
xchg
sbb
lods
xlat
jno
loopne
dec
sub
sub
xchg
cmpsl
mov
xor
pushf
and
or
or
mov
adc
fcmovne
push
inc
out
mov
cli
or
repnz
add
jbe
sub
ja
inc
adc
rolb
and
rcrb
inc
push
in
jno
data16
lret
loop
in
add
or
popf
push
ja
push
pop
fld1
int3
push
add
push
arpl
jno
outsb
cld
mov
add
add
les
cli
es
push
mov
lods
mov
sbb
inc
test
rol
xchg
int3
inc
into
add
std
pop
xchg
sbb
lret
and
cli
inc
mov
sbb
addr16
faddl
pop
fs
dec
inc
xor
push
push
lods
test
jmp
rcl
pop
dec
in
and
popf
mov
loop
sbb
out
mov
jno
sub
dec
cmp
sub
push
lcall
dec
sbb
adc
sbb
int3
add
in
subb
cs
in
loope
add
fwait
sbb
jnp
jo
and
movb
inc
pop
xchg
inc
adc
xor
lret
fisubs
sbb
cld
leave
sub
add
and
pop
aam
out
add
inc
mov
pop
sahf
arpl
ja
sti
cmp
mov
ret
xorb
add
and
call
push
xor
jno
mov
pop
lods
pop
sbb
add
add
jp
in
add
add
dec
pushf
sahf
jle
enter
int
sbb
cmp
mov
xchg
pushf
pop
fwait
out
xor
notb
movb
mov
enter
cmpsl
pop
add
movsb
pop
faddl
sub
sbb
jl
pusha
inc
sbb
and
fiadds
test
rolb
cmp
push
fstpl
push
xchg
popa
push
out
filds
push
inc
pushf
mov
ss
dec
nop
jae
std
lods
test
inc
ja
hlt
push
cwtl
jle
insl
add
fistpll
das
lret
xchg
inc
cmp
cmp
inc
pushf
ret
jae
arpl
lcall
cwtl
and
mov
movsb
add
or
dec
push
stos
or
pop
xlat
lods
rolb
add
xor
jl
lret
cmp
arpl
jmp
add
cmpl
hlt
popf
pop
add
mov
stos
jbe
in
or
mov
fisttpll
add
in
sub
ja
xor
enter
push
sub
jno
dec
out
sub
sarl
sub
mov
push
or
icebp
test
mov
pop
sbb
stos
mov
add
gs
and
test
mov
push
jp,pt
movq
add
popa
fs
in
lock
call
mov
mov
mov
jo
stos
shll
jle
xorb
xchg
xchg
ret
xchg
mov
gs
and
mov
push
lock
pop
ss
xchg
fmull
xchg
cmp
adc
adc
in
add
bound
or
int3
aas
push
gs
mov
shll
fildl
mov
movsw
mov
pop
xchg
xorl
imul
scas
dec
add
dec
or
out
adc
popa
xchg
xchg
jns
and
clc
push
jns
adc
or
inc
test
sub
arpl
out
mov
pop
shr
insb
in
mov
dec
jne
and
push
jns
or
fldcw
xor
push
std
inc
adc
outsb
add
adc
jne
inc
inc
insb
add
push
mov
insl
pop
aaa
cmp
stc
mov
xor
adc
in
popf
add
or
add
subb
pop
dec
add
pop
cmove
pushf
lds
js
outsb
inc
pushf
jl
xchg
movsb
lcall
xchg
cmpb
test
mov
cmp
pop
xchg
add
push
ret
subb
int3
pop
movsb
rcr
in
xchg
inc
add
andb
or
push
shrl
fucom
es
and
in
mov
testl
pop
pop
inc
jae
loop
cmpsl
rep
dec
add
fldenv
xor
pop
sarl
adc
xlat
add
mov
push
cmp
dec
dec
call
loopne
movsb
js
das
divl
into
sub
mov
push
add
ficompl
sub
nop
pop
mov
xchg
sbb
out
fsubs
add
ret
dec
or
inc
dec
loopne
add
jmp
scas
cli
fldcw
icebp
fcmovnb
adc
xorl
clc
adc
add
inc
adc
js
add
mov
mov
rorl
fadds
adc
pop
nop
andb
add
jae
xchg
out
jg
bound
sub
dec
cld
mov
incl
dec
insb
jo
inc
push
jnp
add
sahf
iret
jbe
lahf
sti
pusha
push
shl
nop
push
clc
in
dec
jae
cmp
add
xchg
add
xchg
mov
and
stos
test
ffreep
xlat
add
push
fiadds
mov
cmp
mov
mov
outsb
inc
xchg
shrb
add
data16
cli
mov
pop
add
inc
pop
out
mov
pop
adc
push
in
mov
adc
data16
adc
inc
jnp
add
es
dec
push
push
int3
js
ret
inc
sbb
pop
mov
out
shlb
pop
shl
nop
mov
and
xchg
rcrl
rcrl
adc
fldt
shr
cmpsb
cld
in
and
les
lret
pop
ret
les
jns
add
jbe
es
push
jecxz
fcmovnb
in
insb
lds
dec
nop
ret
and
hlt
imul
out
mov
testl
adc
in
out
mov
es
enter
fidivrl
jl
pslld
dec
lret
mov
xor
push
push
xchg
shl
push
and
out
add
xor
jno
jne
sub
sub
enter
out
cmp
cld
add
sub
mov
mov
shl
js
xchg
adc
mov
sub
jle
mov
pop
ficoms
jae
rorb
add
add
push
and
gs
add
sbbl
inc
nop
mov
es
lock
das
lods
cld
mov
sbb
aam
mov
cmpsl
sti
lods
leave
arpl
in
lret
or
enter
jbe
mov
add
jnp
lods
pushf
and
and
mov
movsb
add
dec
adc
add
mov
jnp
and
les
fcompl
insb
sbb
ret
jae
jle
cmp
faddl
lret
mov
ljmp
cli
rorb
enter
push
test
mov
cwtl
and
rcrl
pusha
das
daa
clc
xchg
cltd
add
xchg
xor
pushf
dec
xor
fs
inc
cli
mov
pop
jo
add
lahf
inc
insb
add
ljmp
mov
adc
add
pop
lods
fs
mov
mov
inc
dec
mov
push
mov
subl
add
mov
add
orps
add
and
rolb
jne
adc
xchg
popa
mov
cmpsb
mov
aad
out
adc
mov
jge
and
imul
add
add
sbb
inc
addl
int
mov
mov
add
bswap
adc
mov
out
mov
cmp
or
shld
imul
movsl
das
push
or
add
lcall
into
repnz
or
test
cld
adc
adc
dec
add
cmpsb
in
nop
add
dec
andl
jge
add
mov
pop
and
in
cwtl
shll
add
stos
stc
fidivrl
cmp
add
jno
cmp
hlt
sbb
push
pop
movsl
xchg
orb
test
jg
add
sbb
sub
mov
jge
adc
sub
and
lret
clc
jmp
mov
cs
mov
push
sub
mov
pop
aas
push
push
lcall
add
hlt
jb
ja
or
jecxz
inc
jo
adc
push
shlb
cltd
nop
push
add
lock
aaa
pop
xor
jge
popa
xchg
sbb
int3
add
into
adc
subb
pop
push
jae
cs
jbe
add
or
in
in
add
sub
clc
add
arpl
dec
mov
std
xchg
add
mov
enter
mov
or
sub
add
xor
cmp
arpl
push
mov
inc
shr
gs
jb
add
mov
push
mov
cld
movsl
and
pop
add
and
out
adc
in
jecxz
add
mov
push
fistps
jno
stc
add
pop
mov
mov
fs
loope,pn
aam
cmp
xchg
pop
mov
xor
or
cwtl
arpl
pop
mov
sub
mov
xchg
add
call
sub
jae
add
sbb
in
add
insb
xorb
frstor
cld
add
mov
add
and
push
mov
sbb
decl
dec
dec
add
in
mov
mov
aam
sarb
nop
push
mov
fcoms
dec
mov
stos
pop
pop
imul
jb
xchg
fmull
insl
add
xor
movsb
jno
cmp
fucomip
movsl
mov
fcompl
jbe
scas
movsb
push
jle
add
mov
inc
jns
shrd
movsl
jo
mov
mov
cs
push
popa
dec
and
nop
add
arpl
inc
cmp
test
repz
cmp
mov
dec
insb
pop
rcl
addb
jbe
push
jg
stos
xchg
sub
dec
push
fs
inc
push
pop
sbb
call
or
adc
movsl
cmp
pop
or
cmp
ja
sub
mov
jbe
out
test
add
cmp
in
in
ret
rol
sbb
das
add
andl
jo
sarb
add
in
mov
ret
je
daa
sub
inc
add
cmp
int
inc
sahf
dec
jne
pop
add
push
repz
imul
cwtl
xor
pop
shl
add
leave
cmp
sbb
mov
ret
mov
mov
push
imul
lods
iret
cmc
mov
push
jo
ret
push
out
push
sbb
cmp
outsl
shld
test
xor
ds
fs
push
subb
pusha
scas
out
sahf
sub
mov
cltd
ss
cmp
lahf
dec
add
arpl
repz
push
jp
jmp
xchg
rorl
sbb
push
mov
je
jp
movsl
push
or
fwait
psubusw
mov
push
xor
inc
mov
hlt
faddl
addr16
sbb
je
mov
dec
xchg
loopne
add
mov
nop
push
jl
jle
rorb
in
mov
daa
push
frndint
push
dec
lods
pusha
sbb
mov
cmp
icebp
mov
cmpsb
cmp
jno
hlt
sbb
pop
mov
xlat
mov
int3
push
or
mov
mov
mov
mov
sar
add
cs
pop
push
mov
add
iret
mov
call
rorb
add
xor
lds
mov
imul
xchg
pop
fildl
add
and
xchg
and
jb
insl
xor
lods
ret
push
cltd
xchg
cmp
add
mov
sub
shll
and
add
xchg
sub
inc
cld
repnz
out
jae
dec
mov
aam
pusha
cmpsl
shrl
mov
dec
adcl
sub
push
inc
add
xchg
je
xlat
mov
loope
es
xor
mov
mov
pop
std
arpl
loopne
mov
pop
in
cmp
jbe
xchg
pop
mov
dec
sbb
mov
cmc
inc
mov
and
loopne
ret
mov
sub
std
sub
test
add
or
and
jmp
add
rcr
cmp
adc
test
fcmovnb
jg
and
lahf
inc
add
fwait
or
movsl
pushf
jns
and
js
stos
adc
loop
jle
ja
lods
and
bound
test
insb
mov
sti
ss
pop
test
and
test
push
mov
packsswb
dec
or
loopne
or
pop
cmpsb
neg
daa
fidivl
outsb
inc
push
movsl
push
add
cmpsl
sti
or
cltd
and
cmp
in
and
mov
mov
mov
mov
repnz
mov
mov
sub
lods
jl
mov
data16
xchg
add
js
iret
std
and
or
add
lahf
jge
mov
mov
dec
clc
test
mov
incb
ficompl
jae
test
lock
jmp
add
pop
roll
mov
aad
sti
and
lods
fs
and
pop
add
lea
mov
adc
sarl
pushf
mov
dec
pusha
rolb
jne
xchg
fadds
into
rclb
out
pop
lcall
xlat
jecxz
cmp
jl
ja
adcb
test
inc
inc
cli
gs
inc
shlb
ror
cwtl
cmp
popa
lods
imul
mov
push
and
jl
popa
inc
int3
inc
xor
jnp
jno
or
iret
add
add
pusha
jne
and
sub
add
test
shrb
lea
scas
xchg
data16
inc
add
cltd
xor
cmpl
das
les
int3
dec
jb
call
adc
or
je
sti
loopne
add
inc
frstor
or
dec
mov
mov
add
pop
inc
notb
sub
inc
and
out
cltd
jo
ficompl
jae
jns
mov
mov
scas
push
and
add
and
sbb
sub
loope
sub
imul
cs
jg
lock
add
push
aas
mov
add
jnp
int
movsl
xchg
out
push
rolb
mov
call
rolb
es
mov
adc
cld
xor
inc
mov
sub
mov
add
jl
jbe
mov
push
addr16
adc
or
pop
lahf
fld
and
xor
hlt
jno
cli
incl
lods
daa
jl
push
inc
and
push
xchg
and
fs
aaa
adc
cmc
adcl
and
daa
jle
xchg
out
add
dec
jo
add
cmc
pop
cs
lods
dec
inc
daa
inc
add
push
ss
add
mov
mov
lock
pop
call
cmp
cld
mov
in
mov
mov
js
lds
scas
sub
cmpl
daa
cltd
mov
mov
lret
jno
repz
cmc
inc
in
xchg
nop
jne
cmp
insl
test
in
addb
