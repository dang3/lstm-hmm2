fcoms
push
mov
xchg
push
mov
jno
outsb
lock
jo
add
in
adc
add
pop
push
imul
pop
cmp
loop
pop
adc
pop
push
mov
in
mov
pop
in
dec
test
add
mov
test
inc
jg
iret
xchg
sub
dec
or
jp
adc
mov
xchg
test
aaa
addr16
mov
cmp
clc
push
dec
movsb
push
icebp
mov
inc
jecxz
and
inc
sbb
fidivrs
filds
out
scas
jb
adc
push
jecxz
rorb
out
stc
adcb
jno
xchg
in
or
ficompl
decb
mov
pop
test
fcoml
jb
inc
rcrb
movsl
or
outsb
adcl
inc
sbb
mov
out
sub
fmuls
fidivrl
in
mov
xor
lods
lods
add
int
cmpsb
dec
cmp
sbbb
push
fsubl
jecxz
jl
xchg
dec
insb
inc
jle
mov
pop
and
mov
push
daa
gs
ja
es
mov
das
mov
mov
mov
adc
dec
lods
bound
notl
and
sbb
mov
out
cltd
dec
xchg
fildll
sbb
mov
lods
jae
xchg
push
and
bound
dec
cmpsb
outsb
daa
lock
outsl
movsl
mov
push
rcr
repnz
popf
push
mov
mov
jg
mov
rcll
mov
inc
pusha
cmp
mov
or
mov
inc
push
dec
push
cmp
cltd
inc
popa
cwtl
push
mov
jae
and
data16
cltd
inc
lea
pop
aas
cmc
cwtl
cmp
mov
arpl
and
pop
inc
pop
push
lret
popl
and
subb
cmp
mov
retw
dec
push
and
mov
inc
pop
sub
insl
sbb
mov
inc
rclb
push
pop
jns
dec
push
ficoms
jp
ret
cmpsb
push
mov
xorl
xor
out
outsb
scas
cmp
in
pop
sub
push
cmp
adc
out
es
cmpsb
outsb
mov
lods
mov
inc
sub
inc
sbb
cli
arpl
int
call
add
pusha
fbstp
cmp
inc
jge
loopne
popf
filds
sbb
clc
sbb
lret
psubusw
or
ljmp
mov
push
xchg
xchg
mov
mov
repnz
int
sub
subb
jmp
loopne
mov
cmpsl
and
lret
mov
test
insb
jecxz
arpl
adc
jb
cmp
jb
leave
xor
adc
out
push
xor
push
or
fiadds
les
loopne
push
push
mov
pop
call
cmpsl
dec
xor
add
stc
in
icebp
sti
out
pop
movsl
jecxz
push
sub
push
jl
push
jge
xlat
lret
jo
pop
cltd
std
leave
and
dec
jl
dec
cmp
mov
bnd
int3
fndisi(8087
dec
push
xorb
add
jno
adc
pop
in
cmp
mov
xchg
xchg
mov
cmp
jle
lock
scas
xor
sub
bnd
adc
xor
xor
pop
ret
add
inc
or
dec
pop
inc
aas
push
repz
or
stos
dec
jg
test
addl
icebp
cmc
rorb
mov
cmpsb
ret
add
push
xchg
or
xchg
imul
mov
pop
pop
push
mov
bnd
outsb
movsl
test
mov
stos
fldz
notl
xor
clc
xchg
xor
xchg
imul
inc
in
xchg
outsb
pop
daa
in
daa
int
das
jb
xchg
jns
shl
in
shr
push
outsl
out
push
fsubrp
mov
and
imul
jl
xchg
int3
in
sbb
push
lods
cmp
jno
push
add
dec
jg
push
movsb
add
pop
jbe
lret
ret
sbb
mov
mov
cs
andb
jg
filds
aas
and
in
and
iret
pusha
mov
and
xchg
out
sub
mov
lahf
jge
pop
jae
mov
jns
rcll
add
inc
jns
mov
inc
aaa
pusha
inc
mov
adc
shlb
jns
push
mov
dec
or
inc
mov
lret
jecxz
es
jb
adc
rcrl
lds
dec
call
rcrb
stc
dec
int3
sub
lods
ret
shlb
rclb
push
push
stos
jmp
xchg
jnp
lods
cmpl
jno
ficomps
jns
cmp
add
insl
fadds
fimuls
pop
int3
shrb
stc
arpl
int3
call
pop
das
cmc
out
mov
mov
push
test
sub
jmp
dec
adc
jnp
add
sbb
inc
push
sti
jmp
add
movsb
fsubs
sub
sbb
xor
popf
lods
add
loopne
xchg
sbb
sbb
push
dec
jmp
sub
mov
mov
mov
sub
inc
adc
pop
enter
push
xor
fdivrl
fsubl
enter
std
dec
adc
lret
lods
imul
push
sbb
jecxz
cmpsb
ja
adc
or
inc
rorb
add
inc
mov
push
mov
or
roll
or
nop
xor
icebp
mov
pushf
xor
fnstcw
xchg
test
leave
and
sahf
and
das
add
push
out
les
mov
loope
mov
lods
adc
jg
pop
fdivrl
cmpsl
shll
add
sbb
aaa
mov
dec
sub
and
pusha
add
inc
dec
push
movzbl
or
jle
xor
add
cld
sub
and
loop
pop
push
pop
cld
clc
cmc
push
pop
shl
jae
push
je
add
pop
jbe
push
push
mov
pop
pop
push
jno
push
add
pop
pop
clc
stc
mov
xchg
push
movzbl
push
jle
xor
pop
push
push
test
pop
pop
sub
stc
cld
loop
pop
push
jae
neg
neg
pop
mov
jmp
sti
fwait
in
xchg
xchg
xchg
ret
or
mov
lahf
cmp
xor
fs
sbb
loop
ja
fsubr
bound
fnclex
mov
jmp
jmp
call
cmc
push
push
or
pop
pop
cmp
push
or
pop
push
rol
pop
cld
add
mov
add
push
push
mov
pop
pop
test
jge
jbe
and
js
add
inc
dec
push
cmp
pop
sub
push
add
push
pop
pop
xor
push
push
rol
pop
pop
ror
push
inc
pop
push
pop
push
pop
push
add
pop
push
movzbl
ror
jnp
push
jp
jnp
cld
pop
push
push
mov
pop
pop
jbe
push
add
clc
cld
loop
pop
push
jae
jb
test
pop
test
rol
cld
cld
cmc
pushl
pop
push
sub
pop
cmc
nop
test
jne
jmp
push
js
sub
pop
jb
xor
push
pop
cmc
clc
push
add
pop
jmp
jo
stos
loopne
pushf
push
adc
pop
mov
fistpll
adc
mov
cs
push
cs
sub
pop
mov
sbb
pop
xor
subl
std
ss
hlt
push
stc
dec
loopne
cmp
je
xchg
dec
cs
into
sti
adc
sub
ror
or
cmp
push
push
ja
rol
pop
pop
ror
push
push
push
push
pop
pop
stos
push
push
pop
pop
pop
pop
jb
test
xchg
add
push
dec
pop
loop
jecxz
mov
jns
aad
lret
xchg
mov
ret
push
jecxz
cmc
xor
ficoms
rcrl
sbb
sbb
mov
cltd
xchg
inc
mov
or
rol
dec
jne
jmp
outsb
fsubp
hlt
jbe
mov
cmp
cwtl
lds
dec
fisttpll
mov
inc
xor
xor
adc
lahf
pop
pop
cmc
cmpsl
mov
aad
xchg
inc
es
sahf
push
cmp
jmp
fstps
xchg
inc
iret
cmpl
mov
cmp
xor
xchg
add
xor
mov
jmp
add
clc
dec
sbb
adc
push
jecxz
sub
cmp
xchg
fmull
jmp
loopne
out
xchg
mov
xor
movsl
jno
cmp
mov
inc
out
adc
out
xchg
rcr
stos
cmpb
inc
dec
sub
testl
arpl
pop
and
lock
loopne
scas
push
push
mov
inc
loop
dec
cld
dec
nop
push
xchg
push
call
je
jns
add
cmp
or
lds
aaa
xlat
out
scas
sub
inc
lock
or
xchg
repz
aam
xlat
subl
repz
jl
mov
and
jb
or
jl
mov
xor
xchg
pusha
adc
stos
repnz
cli
test
clc
fsubrs
mov
push
repnz
test
inc
imul
jmp
push
call
inc
and
popa
pop
testl
imul
icebp
adc
sarb
xor
inc
adc
inc
cli
pushf
lea
pop
adc
sti
loopne
clc
jns
and
lret
jle
xchg
aaa
rcr
cmp
popa
ja
cmp
fisttpl
sub
dec
pop
inc
or
or
pop
in
adc
pop
and
mov
add
xor
dec
push
mov
push
and
das
sarb
inc
out
loop
push
dec
aaa
dec
aad
testb
nop
mov
sti
cli
cmp
pusha
subl
inc
push
popa
aaa
add
test
fcoms
sbb
loope
push
clc
or
xor
arpl
into
call
out
pushf
xor
push
mov
or
sbb
js
pop
cmpsb
insl
pop
insl
fiaddl
adc
pop
decl
push
ja
push
jo
daa
fnstenv
out
push
ret
lock
jne
cwtl
ja
mov
out
push
xchg
cmp
add
stos
mov
mov
push
inc
fiaddl
and
add
sub
lret
roll
and
daa
lahf
xor
xor
mov
lock
sub
pop
int
rdmsr
mov
xlat
inc
sbb
outsl
pop
xchg
aaa
test
mov
mov
mov
outsl
inc
jno
adc
and
sbb
adc
mov
hlt
push
fbld
cmp
inc
mov
xor
idiv
dec
mov
mov
xchg
xor
or
inc
loopne
leave
cs
pop
cli
arpl
fdivrp
pop
lea
xchg
push
add
dec
adc
inc
push
push
ret
int3
ljmp
dec
cwtl
xor
movsb
icebp
mov
clc
jecxz
ret
mov
dec
jbe
cli
aad
sub
mov
testl
shll
sbb
ret
es
outsb
imul
stos
addr16
sbb
ficomps
popa
sub
roll
or
dec
aad
data16
fwait
xor
jmp
pop
aad
aas
scas
jmp
mov
xor
push
loopne
repnz
data16
or
jmp
movsl
push
jmp
in
imul
enter
add
clc
xor
cwtl
inc
xor
ret
mov
mov
jl
inc
xchg
mov
imul
enter
dec
cmpsb
popf
add
rorb
jge
xchg
adc
loope
into
mov
pop
mov
mov
push
ficompl
loop
push
mov
adc
in
test
lret
mov
fistl
loope
mov
dec
mov
or
mov
jmp
les
pop
push
and
mov
mov
std
lock
xor
sub
xor
lea
insb
aam
shl
fstpl
popf
imul
hlt
lret
nop
stos
jns
xchg
mov
mov
lock
loopne
lock
push
fcmovnb
adc
fidivrs
jl
lods
lahf
sbb
or
jge
shr
inc
popf
test
loope
out
arpl
popf
jb
test
or
xchg
dec
jne
fdivrs
iret
push
iret
xchg
jmp
outsb
sahf
xor
mov
jbe
xor
cltd
sub
sub
cmp
pop
enter
jp
push
inc
jl
jb
mov
loope
int
cmpsl
xchg
inc
cwtl
sub
pop
icebp
push
lds
not
mov
sarl
nop
cmp
popf
divb
repnz
stos
out
gs
xchg
imul
aam
or
mov
cwtl
fisubs
jp
pushf
jmp
inc
push
adc
xchg
enter
popf
cmp
cs
dec
jmp
decl
std
repnz
xor
ret
icebp
jbe
or
aam
or
cmp
in
mov
pushf
sub
xchg
cmp
movsl
cltd
pop
push
cltd
fwait
mov
outsl
mov
mov
and
insb
cli
repz
dec
in
pop
xor
cmpsb
fs
imul
in
ret
or
out
in
das
push
jecxz
sbb
sub
aam
push
loop
cwtl
inc
mov
cmc
das
jl
push
adc
mov
inc
rcl
mov
add
out
add
mov
jb
ficomps
and
mov
dec
movb
in
sbb
shr
sbb
pop
fdivs
into
in
lahf
add
iret
stos
pushf
test
xor
xchg
mov
mov
fxch
sbb
xchg
das
pop
push
and
inc
inc
pop
cmp
dec
xchg
push
xor
icebp
xchg
sbb
fldl
or
cld
add
std
and
int3
shrl
sub
es
aaa
std
cmp
lea
add
sbb
mov
pop
call
repnz
jns
xor
sbb
push
dec
cwtl
jp
jle
out
xchg
int3
dec
outsl
sub
rolb
enter
jne
inc
inc
cmp
xor
js
je
xor
mov
sub
jae
mov
inc
xor
sub
in
mov
sbb
or
mov
mov
test
sub
and
jp
std
and
pop
xor
fwait
sub
data16
sarb
xchg
std
ficoms
jbe
xorb
push
dec
inc
pusha
or
mov
push
push
push
pop
scas
fnstcw
out
mov
cmp
jbe
push
lock
test
mov
fbld
aas
loop
pop
dec
lahf
pop
out
js
cmp
pop
bound
js
fcompl
ret
or
push
mov
scas
jge
pop
pop
mov
cmp
std
subb
popa
sbb
mov
jnp
xor
fst
mov
adc
cltd
aam
xor
pop
lret
in
xorl
pop
inc
enter
mov
jl
out
int3
daa
out
rol
pop
mov
and
xor
loope
fnstcw
adc
icebp
stc
mov
and
dec
mov
mov
in
shlb
pushf
or
std
inc
mov
addr16
pop
ficomps
fxam
and
add
jne
jle
mov
bound
in
jg
movsl
and
fs
pusha
pop
cmpsl
xor
inc
pop
sub
pop
jo
cltd
xor
bound
jae
arpl
int3
xor
sbb
push
out
pop
bound
mov
ror
add
xchg
or
push
arpl
push
subb
addr16
pop
movsb
dec
ds
out
popf
ja
and
pop
push
lods
cs
push
lret
fcomps
jg
adc
test
loopne
je,pn
and
cmp
into
mov
lahf
mov
fs
mov
xchg
fistl
mov
je
ljmp
andl
add
dec
movzwl
inc
inc
and
movsb
xor
test
jno
enter
inc
in
add
adc
adc
rcll
in
jns
shlb
add
lea
mov
icebp
stos
addl
cmp
lods
add
repz
or
fisttps
dec
ja
nop
sarl
or
arpl
ret
dec
mov
mov
xor
cmc
lds
sarl
inc
sbb
mov
mov
push
sub
call
pop
push
add
push
fnstcw
out
call
cmpsl
lods
cmpsb
addr16
mov
push
cwtl
fidivrl
xchg
jmp
xor
mov
lods
cltd
sub
cmp
ja
sub
fadd
nop
shr
pop
insl
push
mov
mov
pop
sbb
dec
or
cwtd
test
insl
negb
lock
mov
data16
mov
cld
imul
sub
mov
jnp
pop
in
movsl
xor
add
mov
adc
sub
int
push
pop
cmp
xchg
lock
pop
xlat
lret
adc
fisubl
les
aam
lcall
push
mov
sbb
clc
sbbl
in
popf
push
cmp
movsb
movsb
xor
cmp
cmp
cmp
test
loopne
sbbb
arpl
ret
pop
daa
jl
xchg
and
xchg
subb
or
and
lods
add
sbb
les
inc
xor
inc
aas
push
jae
sti
ffree
rcrb
inc
mov
into
push
ja
nop
mov
mov
or
inc
mov
lea
pop
add
xchg
xchg
mov
or
adc
inc
repnz
inc
push
bnd
adc
and
xchg
fstl
lds
insb
imul
push
lahf
scas
sbb
out
cltd
mov
xchg
outsb
push
mov
mov
hlt
pusha
jle
add
mov
ds
mov
jbe
lret
push
adc
cld
shr
push
push
fdivl
pop
cltd
cs
jnp
sahf
and
nop
xor
in
outsl
xchg
das
mov
cwtl
push
dec
popa
fwait
std
sub
adc
xchg
jno
inc
or
stc
sub
ficoms
popf
iret
loope
mov
mov
push
push
add
enter
pop
outsl
lds
xor
jo
xchg
push
or
fistpl
roll
fdivs
scas
sub
xlat
mov
pop
sbb
mov
push
mov
cli
lods
enter
hlt
mov
mov
mov
and
adc
jg
inc
cmp
cld
or
imul
jne
or
dec
shrl
jle
imul
add
xlat
ficoml
jo
loopne
jecxz
subl
out
jo
jp
in
aaa
add
rolb
add
pop
sbb
shlb
aaa
pop
mov
adc
cmp
ficompl
jnp
push
cmp
jo
inc
cmp
push
lret
bound
mov
inc
xchg
gs
inc
mov
shrb
push
int
loopne
push
pop
lock
jp
dec
cli
mov
push
xor
test
cmc
fidivrl
fs
les
test
loop
mov
jg
ret
pop
insl
and
mov
lods
fistpll
pop
in
dec
insl
fwait
in
sub
icebp
popa
sbb
sbb
adc
iret
insl
addr16
cmp
shrb
jecxz
cmp
test
inc
imul
mov
push
add
sbb
or
shrl
xorb
jge
ds
movsl
mov
jp
inc
or
dec
inc
and
mov
xor
cltd
xlat
out
jp
popa
pop
mov
in
cmp
cld
jbe
push
add
xor
sbbl
xchg
or
roll
imul
movsl
lret
cmp
shl
sbb
push
ret
jp
cmc
add
push
dec
mov
clc
mov
dec
dec
adc
loopne
push
sbb
xchg
push
lcall
push
imul
push
add
xor
jg
add
cmp
and
and
add
notb
push
mov
sub
xlat
mov
push
cmp
inc
shll
clc
or
jb
push
dec
cmp
jmp
out
mov
lret
fidivs
es
shll
addb
jnp
pop
insl
jae
fs
mov
pop
cmp
xchg
fildll
out
imul
mov
mov
popa
and
imul
aas
push
adc
mov
rolb
mov
mov
bound
xor
cmpsb
cmc
dec
mov
push
icebp
test
sti
fs
add
xchg
or
test
jmp
pop
popa
mov
adc
sbb
push
cmc
cmpsl
mov
inc
lds
push
push
test
mov
pop
pop
scas
jecxz
aam
ljmp
flds
shll
sub
push
or
pusha
sub
outsb
inc
mov
cs
loopne
into
mov
movsl
mov
xor
push
ret
pop
aaa
rcrl
mov
cltd
sbb
push
sbb
int3
mov
insl
test
inc
in
popa
mov
out
adc
int
push
loop
and
sub
cmp
push
jl
and
xor
ret
jno
rcl
mov
leave
lea
inc
adc
aad
imul
clc
outsb
jno
lcall
test
sbb
mov
nop
dec
xor
fs
sbb
add
sub
inc
and
sbb
and
std
mov
test
mov
mov
xchg
mov
fstps
dec
sub
lret
jmp
fmull
lods
into
cmp
lret
fsubrl
add
popf
jmp
outsb
xchg
fcomip
push
pop
jecxz
mov
jbe
insb
fcoml
ds
push
xlat
aas
inc
and
cmp
push
mov
sbb
rcrl
addr16
jo
subl
adc
mov
pop
xchg
inc
push
cs
adc
jecxz
or
lcall
stos
mov
or
outsl
jae
movsl
fldl
lret
negl
pop
cmp
popf
mov
cwtl
cmpsl
int3
push
pop
pop
enter
cmpsl
mov
notb
push
loopne
idivb
jnp
and
rcrb
mov
pop
popa
add
jp
clc
sbb
mov
popf
mov
jne
xchg
cld
sbb
xor
add
int
and
lds
arpl
mov
stos
lds
icebp
jp
data16
dec
xchg
adc
call
inc
dec
xchg
push
cmpsl
and
mov
mov
push
mov
outsl
enter
gs
jmp
sub
insl
ret
insb
xchg
cmp
fists
sbb
push
popl
or
rol
fs
fisubl
xor
mov
push
sub
fldt
mov
jbe
stos
les
jnp
dec
mov
sbb
and
sub
pop
ss
jne
xchg
inc
cmp
dec
or
push
into
adc
add
inc
jle
mov
fstps
lcall
sbb
daa
push
cmp
xchg
scas
icebp
push
mov
imul
cmc
xor
cmpsl
mov
inc
repz
fstp
mov
lds
test
fdivl
jae
dec
jne
popf
inc
push
stos
fstl
subb
fbld
mov
fidivl
mov
lods
sbb
fsubrl
fnstsw
xchg
push
test
sahf
test
push
stos
ret
mov
in
fwait
or
daa
and
in
inc
xor
loop
arpl
js
aam
lock
ret
and
jmp
fs
icebp
out
mull
add
cmp
rep
cwtl
push
mov
xor
and
aad
inc
pop
shrb
icebp
mov
jns
popa
xor
push
scas
cmc
leave
test
call
push
sbbb
mov
mov
clc
xor
mov
in
add
imul
fstpl
pop
call
xchg
cmp
out
mov
cmp
gs
movsb
sbb
mov
cmp
jns
xchg
mov
sbb
ret
movsl
pop
pop
add
mov
pop
xor
daa
int3
sub
add
fstpt
or
cmp
je
add
clc
sbb
mov
pinsrw
stc
pushl
mov
dec
mov
or
cmp
mov
cltd
in
ja
inc
iret
jp
js
sub
shrb
cltd
addr16
mov
pop
mov
or
repnz
ss
push
xor
adc
stc
add
mov
add
push
xor
jbe
adc
leave
in
push
mov
imul
sub
insl
lret
ds
orl
test
pop
mov
xchg
push
push
inc
adc
mov
stos
inc
sahf
mov
lods
jae
in
fnstsw
stos
pushf
mov
mov
mov
call
adc
pushf
dec
pop
jnp
xchg
repnz
dec
filds
jl
xchg
cmp
add
test
daa
add
inc
mov
fisubl
enter
inc
sbb
sub
testb
or
jno
pop
mov
sbb
and
dec
xchg
popa
jne
jl
shlb
pop
les
xor
ljmp
inc
lods
sbb
pop
lret
xchg
sbb
mov
scas
xor
aad
push
rolb
sbb
repz
cmp
lret
pusha
jns
xchg
movsl
int
mov
or
dec
fistps
data16
mov
mov
sbb
add
xor
rorb
pusha
sub
nop
inc
cs
add
pusha
lods
outsl
call
mov
and
add
into
xor
sub
in
or
data16
repnz
sub
ja
pop
lcall
bound
lds
scas
test
xlat
arpl
pusha
or
out
addr16
mov
sub
mov
imull
mov
out
pop
leave
rorl
mov
dec
mov
or
add
sub
push
fnstenv
lods
inc
test
fs
inc
hlt
jp
inc
cmpsb
pop
loopne
sarb
fcomps
mov
cli
rorl
mov
pop
fldt
daa
out
push
cmp
es
or
pop
int3
jg
mov
jns
mov
mov
pop
cmp
sbb
rorl
das
leave
xchg
add
lods
mov
or
xlat
mov
aad
mov
pop
sahf
shrb
daa
faddp
jno
jo
and
mov
pushf
mov
jecxz
mov
pop
out
xchg
rorl
pop
cmp
sub
sbb
repnz
jne
sub
repz
imul
push
push
add
adc
leave
aad
xchg
gs
fiaddl
movsb
sarl
adc
nop
dec
xchg
inc
push
mov
cltd
xchg
mov
pop
repz
pop
mov
dec
cmp
xchg
jmp
and
pop
pop
enter
mov
aad
adc
faddl
int
loopne
test
hlt
in
fisttpll
in
xor
gs
pop
jmp
inc
inc
jbe
ficompl
pop
int
sahf
mov
mov
sar
mov
add
mov
jno
jbe
or
dec
int3
adc
cmp
subb
stc
mov
mov
push
pop
cli
iret
imul
in
dec
or
xchg
push
out
outsl
dec
test
jle
push
xor
push
push
mov
jbe
in
xchg
pop
movl
xchg
out
and
cmp
mov
jb
and
adc
lods
mov
sbb
test
jecxz
es
adc
xor
jle
gs
stos
out
aas
aad
sub
clc
xlat
subb
adc
ja
add
sub
mov
cld
and
out
mov
pop
sbb
stc
fstpt
jno
add
cwtl
sub
les
daa
das
xchg
es
mov
jmp
pop
mov
push
sub
sbb
lods
cld
push
dec
mov
imul
mov
sbb
scas
icebp
adc
insb
or
pop
jle
fisubl
mov
ljmp
addb
insb
dec
movsl
push
lret
adc
das
push
adc
shll
lea
cmp
stc
das
clc
popa
ret
leave
cmp
sub
jle
js
jae
ss
mov
jo
incl
je
call
loope
pop
xchg
lods
aam
dec
xor
adc
std
inc
lods
rolb
pop
lods
sbb
stos
test
test
iret
jo
ds
std
shrb
lods
xchg
mov
jo
mov
cmp
mov
aam
pop
sahf
lock
int3
pop
sub
fisttpl
or
xlat
iret
cmp
decb
add
mov
shrb
repnz
mov
fdivrl
nop
adc
out
and
shrl
mov
mov
or
std
cmpl
push
sar
and
inc
es
rcrl
stos
pusha
dec
xchg
mov
pop
inc
mov
hlt
and
push
aaa
popa
mov
push
jg
loopne
lods
sub
xchg
inc
xlat
dec
mov
in
inc
fs
sub
mov
xor
out
test
mov
mov
dec
xor
jl
jno
movsl
push
in
ficoms
cmpsb
movsb
sbb
in
xchg
and
and
push
in
mov
roll
popa
xchg
test
cld
lods
xchg
testl
xchg
push
cli
sahf
popf
add
test
addr16
addl
fdiv
pop
mov
rep
out
mov
mov
out
test
ja
xchg
out
cmp
push
dec
push
sub
scas
push
mov
mov
cmpsl
dec
mov
movsb
or
ljmp
mov
push
nop
xor
leave
xchg
xchg
mov
sbb
xlat
test
sbb
enter
sub
xchg
insb
subl
mov
insl
loope
cmp
popa
mov
popf
mov
ror
adc
mov
hlt
add
sbb
lret
cmc
dec
dec
popf
pop
test
in
push
sbb
nop
fcmovbe
imul
xlat
aam
pushf
xor
dec
dec
shl
inc
pop
xlat
bound
push
inc
imul
movsb
mov
sahf
sub
jl
std
mov
inc
ret
jl
cmpsb
push
rol
fisubrl
nop
xchg
lea
push
in
mov
cmp
pop
or
mov
jo
mov
scas
movsl
or
insl
leave
sbb
mov
mov
addr16
pushf
cmpsb
aaa
xchg
mov
xchg
dec
arpl
mov
cwtl
pop
nop
sbb
jb
fisttps
outsb
jnp
js
xchg
int3
aam
shl
addb
test
subb
scas
mov
fadds
andl
stos
int3
int
mov
leave
decb
test
or
push
or
jmp
lcall
mov
xor
fimull
imul
lea
xor
sub
std
scas
push
aas
xchg
dec
inc
adc
out
dec
dec
mov
and
sbb
cmp
dec
test
jp
adc
lcall
jge
cmp
add
inc
bound
in
add
iret
adc
xchg
cli
lods
push
or
jl
andl
cmp
mov
sti
shlb
test
dec
mov
mov
xor
pop
jmp
lret
pusha
movsb
ret
sub
pop
int
rcrb
loopne
and
pop
sub
push
ret
cwtl
cwtl
orl
push
and
stc
out
lahf
out
in
sub
lahf
adc
xlat
and
stos
xchg
aam
je
add
aaa
fcomps
push
sbb
out
mov
je
ja
add
in
idivl
mov
pop
mov
mov
mov
sbb
lods
xor
cmpsl
scas
int
push
pop
inc
jnp
pop
std
jo
sbb
pop
jb,pt
xor
lea
add
sub
leave
mov
mov
imul
adc
cs
insb
repz
gs
mov
faddp
loope
pop
ja
sub
mov
fdivrl
std
dec
ret
jb
ljmp
dec
pop
xchg
bound
cmp
cmp
mov
sub
enter
out
xchg
lret
sahf
je
mov
std
mov
adc
xor
mov
sti
js
and
sbb
and
cmpsl
xchg
cmc
mov
sub
cld
es
jae
fnstenv
sub
mov
lcall
test
js
push
lock
inc
ret
lock
mov
mov
mov
clc
inc
icebp
dec
mov
cmpb
mov
movsb
cltd
dec
sbb
mov
sub
push
std
jae
loope
mov
rolb
jp
lcall
dec
inc
mov
out
pusha
pop
cltd
cmpsb
jmp
lock
adc
xor
mov
je
cmp
sbb
adc
cli
xchg
dec
int3
mov
pop
fnstsw
xchg
rcl
and
add
insl
int
or
cmc
mov
inc
test
fidivs
or
addb
aas
repz
shr
pop
inc
scas
dec
sub
mov
imulb
inc
movl
inc
adc
jae
sub
repz
add
jmp
mov
pop
arpl
jmp
push
dec
loopne
and
push
mov
loopne
ljmp
inc
test
pop
xor
cmp
push
jnp
int3
mov
push
iret
jmp
insl
mov
inc
hlt
int
mov
mov
jecxz
adc
inc
pop
adc
lods
dec
fs
out
andb
sahf
jae
loopne
stos
xor
inc
repnz
sub
add
aam
push
sub
jae
mov
jne
movl
fisttpl
or
pop
in
pop
dec
mov
mov
pop
jo
mov
ja
or
std
and
pop
cmp
dec
jp
ss
lret
xchg
or
dec
jg
sarl
lret
cltd
fwait
jl
std
jbe
inc
in
out
cmp
or
mov
jnp
inc
pop
lcall
mov
mov
push
mov
jp
adc
lock
push
adcb
out
inc
mov
ljmp
outsl
shl
stos
ljmp
or
outsl
dec
and
mov
std
clc
or
pop
mov
mov
imul
xchg
negb
sbb
into
sub
mov
fsubr
adc
lret
mov
lods
dec
pop
fs
mov
cmp
test
add
dec
lret
lcall
das
cmc
adc
enter
flds
sbb
pop
cli
test
cmc
aam
cwtl
cmp
dec
jne
jns
cmp
xchg
int3
shrl
sti
lock
adc
cmp
pop
aad
xlat
mov
lcall
jae
mov
push
bound
rorl
shlb
das
mov
inc
mov
andl
mov
cmpsb
sbb
sarl
mov
push
mov
xchg
mov
sbb
mov
sub
xor
and
mov
cmp
pop
cmpsb
cld
xchg
add
ret
fists
xor
lea
pushf
cmp
xor
add
filds
jns
movsl
or
adc
cmp
dec
paddsb
pop
mov
pop
add
aad
fbld
icebp
lock
jge
inc
scas
call
popa
and
das
test
lods
xor
das
mov
mov
fucomi
stos
sarb
jne
clts
pop
jp
xor
inc
mov
mov
aam
adc
lds
js
mov
inc
mov
fstps
cmp
das
jmp
mov
enter
imul
mov
rcrl
and
mov
cmc
sub
dec
cmp
push
dec
leave
stos
out
push
dec
and
fldcw
ds
testl
or
inc
push
sbb
repz
sub
push
stc
les
jbe
mov
mov
xchg
mov
sbb
pop
jle
roll
pop
inc
sub
mov
imul
repnz
cmp
fsts
sbb
insb
inc
sti
mov
std
dec
int3
jne
mov
or
jg
push
bound
stos
lahf
mov
ja
loopne
leave
pop
scas
jle
push
aad
ffreep
pop
pop
cmp
and
jp
or
stc
orl
jge
push
bound
es
cmp
sbb
aad
sbb
into
add
outsl
aad
mov
or
xchg
xor
test
mov
cmp
adc
prefetch
int
inc
ljmp
scas
lret
ret
fwait
jnp
dec
dec
inc
push
lret
inc
cmp
add
ret
dec
enter
nop
jns
dec
into
mov
pop
pop
js
icebp
sti
add
mov
loopne
adc
jl
rolb
jb
mov
cli
int3
sbb
xchg
pop
repnz
repnz
dec
xchg
inc
cmp
xchg
ds
insl
dec
jmp
sub
jle
pop
cwtl
fnstenv
test
fildl
sbb
pop
test
cmp
mov
js
mov
js
arpl
cmp
push
das
push
or
mull
push
pop
sbb
xlat
nop
filds
jle
ret
adc
add
aam
enter
testl
sbb
addb
mov
adc
cld
orl
mov
xlat
xchg
pop
je
mov
pop
adc
dec
rorb
leave
andl
push
jecxz
and
pop
dec
outsb
out
and
imul
stos
add
xor
test
cmp
js
test
inc
xchg
push
push
std
xchg
stos
inc
xchg
es
sub
cmp
pop
pop
cmp
xchg
idivl
add
testl
mov
sahf
outsl
pop
lahf
cmp
sbb
jl
jmp
adc
push
add
xor
cwtl
or
sti
sub
js
xor
nop
pop
insb
cld
lret
or
mov
inc
push
dec
xchg
leave
push
or
inc
inc
dec
dec
sarb
leave
lea
mov
mov
out
cmc
xchg
xchg
inc
loopne
pop
xor
mov
sub
pop
push
xor
jle
push
jno
into
xchg
lahf
or
mov
xor
out
test
movsb
adc
daa
sub
adc
xor
dec
mov
scas
xlat
sub
or
cs
lods
das
push
test
sub
in
pop
mov
mov
push
xchg
sbb
mov
or
fistpll
mov
dec
sarb
movb
out
jne
stos
call
mov
and
roll
or
gs
sar
out
call
inc
jbe
cmp
xor
xchg
call
test
cwtl
pusha
lret
xchg
add
xchg
das
pop
flds
push
shlb
inc
gs
xchg
lret
outsl
xchg
jp
inc
nop
mov
jecxz
orb
addr16
into
popf
pusha
pop
dec
mov
loope
lods
loopne
adc
inc
or
pop
aaa
and
cmp
cld
lcall
mov
or
loope
or
int3
mov
cwtl
rcrb
out
xchg
iret
xor
xchg
xchg
cmpsb
das
inc
xchg
leave
or
test
fists
inc
mov
push
movsl
outsb
shll
mov
jb
xchg
cs
aam
dec
pop
dec
adc
mov
push
mov
cmp
xor
clc
adcl
inc
into
pushf
shrb
ret
ficoms
inc
cmpsb
xchg
jmp
sbb
and
mov
jecxz
fmull
aaa
mov
mov
dec
xor
outsb
js
xchg
lahf
fiadds
addr16
or
mov
mov
stc
add
and
out
adc
pop
dec
jmp
fstpl
or
inc
jecxz
and
inc
xchg
sbb
js
mov
ss
out
stos
sub
outsl
xor
mov
inc
add
enter
loop
sbb
inc
pop
ret
and
xchg
rolb
push
arpl
cmp
out
mov
xor
int3
add
outsl
shlb
rclb
lret
fadd
ret
sbb
adc
jle
int3
mov
push
pop
sub
repnz
inc
mov
push
sub
mov
and
or
pushf
in
mov
xchg
gs
aad
stos
outsb
and
jns
fnstsw
lds
lret
and
pushf
jle
aam
leave
je
xlat
cwtl
into
mov
leave
sbb
sbb
jecxz
lret
sbb
xor
pushf
jecxz
or
cwtl
cmpsl
fcmovnbe
lahf
rcrb
lock
push
inc
xchg
mov
gs
xchg
sbb
rorb
jb
les
jne
push
loopne
xchg
out
or
mov
mov
pop
xchg
mov
jmp
sbb
mov
fcom
cmpsb
mov
arpl
pop
pusha
and
pop
push
stos
fdivl
mov
test
pop
pop
xchg
dec
stc
lods
sbb
in
and
xchg
lods
mov
ficompl
adc
repnz
test
cmp
sti
push
iret
mov
sub
test
movsl
fwait
test
push
push
mov
adc
lds
int3
pop
mov
lock
inc
fiaddl
sbb
leave
jge
sub
cs
pop
inc
stc
jns
addr16
rcrb
jns
test
sbb
pusha
int3
pop
jns
sub
mov
roll
mov
incl
repz
mov
insl
fcoml
pop
jmp
fbld
jecxz
sbb
push
adcl
jae
cmp
testb
inc
and
inc
mov
push
rorb
pop
jecxz
aas
mov
sbb
test
lret
scas
insl
adc
call
divb
test
sahf
aas
fldcw
std
aaa
xchg
lods
sar
xchg
ljmp
xchg
mov
mov
popf
adc
pop
jmp
cmp
cwtl
ds
out
push
mov
cltd
and
dec
dec
sbb
inc
inc
lcall
fdivrl
pop
add
jnp
adc
sahf
mov
into
jp
adc
mov
mov
mov
mov
mov
dec
push
cmp
lods
rclw
mov
mov
loope
out
addr16
push
xchg
cwtl
push
and
rcr
mov
pop
incl
inc
jno
fadds
jb
test
mov
lahf
and
xchg
hlt
repnz
ljmp
mov
subl
test
add
call
aam
cmp
xor
ljmp
aam
std
or
pop
loop
xchg
or
test
sub
pop
inc
sarb
ss
call
test
push
add
mov
cmp
lds
mov
push
imul
ds
out
insb
imul
push
or
xchg
lret
mov
mov
cmp
jne
add
dec
sub
into
push
stos
in
call
jbe
jl
push
js
out
pushf
sbb
rcl
jne
inc
jb
mov
mov
mov
sub
and
mov
pop
pop
mov
inc
icebp
mov
pop
jae
pushf
subl
cld
int
fistl
jecxz
int3
mov
test
sub
jne
adc
lock
stos
pop
sub
xor
scas
popa
loope
jnp
addr16
inc
popf
pop
mov
repz
lock
scas
sbb
rcll
fistpl
pusha
fcoml
xor
push
cs
xor
incb
fsts
push
lahf
incb
mov
push
jae
and
adc
pop
test
lock
mov
add
mov
fldcw
scas
into
jle
pop
and
test
daa
addl
lea
sbb
sub
push
mov
fbld
sbb
test
cmpsb
gs
push
push
jb,pn
adc
mov
stc
mov
cmpsb
insb
in
add
mov
xchg
mov
and
aad
enter
mov
je
pop
test
mov
cmpsb
xor
mov
je
jb
sbb
test
mov
or
jae
divl
sarb
jae
inc
and
adc
and
cmpsb
cmc
gs
or
iret
test
test
xchg
movsb
in
pop
sub
cltd
pop
jg
in
lock
or
mov
fidivrl
jbe
rorb
jmp
or
sbb
es
fdivs
mulb
sbb
and
iret
cmpsl
out
mov
mov
fwait
push
and
notl
mov
das
jae
xchg
xor
cld
js
aam
xor
dec
fcmovne
xor
loopne
inc
out
stc
mov
inc
xchg
in
aas
dec
imul
aam
sbb
nop
hlt
stc
arpl
mov
mov
cmp
add
lds
shl
int
fwait
sub
in
jbe
shrb
gs
sub
jae
idivl
sbb
xor
aam
sub
stos
ss
mov
arpl
loopne
outsl
adc
xor
aad
shlb
scas
mov
push
dec
jnp
mov
cwtl
out
adc
jl
sarb
cli
xchg
sahf
int
decb
popa
rcrl
hlt
lret
cmp
mov
and
xlat
sbb
pop
loop
jns
in
popl
xchg
and
stos
mov
clc
out
outsl
push
daa
dec
dec
inc
push
aas
lock
cmpb
mov
lods
pop
push
out
in
lret
lret
in
and
mov
adc
adc
clc
xlat
xor
test
out
nop
rcr
sbb
mov
notb
adc
jo
dec
incb
sti
jmp
aam
cs
addr16
sub
pushf
inc
shlb
jnp
and
aam
lods
mov
jle
xchg
xor
sub
jmp
lods
pop
sbbl
fildl
outsb
repnz
jge
cs
adc
mov
ljmp
cmp
movb
daa
jnp
rcrl
movsl
clc
push
aam
mov
mov
into
push
push
mov
lods
adc
imul
jnp
xchg
pmovmskb
and
push
mov
dec
sub
adc
adc
loop
mov
data16
in
mov
pop
or
dec
lods
push
rol
jo
stos
cli
insl
sbb
pushf
stc
and
orb
in
jmp
das
rcll
jbe
sbb
andb
dec
lea
mov
addr16
xor
add
cmp
shll
cmp
dec
jg
mov
icebp
notl
lret
lods
and
sub
vunpckhps
loop
jmp
popf
es
xchg
cmp
cpuid
sbb
xor
xchg
aam
bound
cltd
cltd
jns
add
std
pop
sub
outsb
push
subl
jb
imul
jb
je
out
sub
nop
in
sub
enter
mov
mov
cs
pop
cwtl
push
push
jbe
nop
inc
or
shll
aam
dec
sub
je
out
sub
mov
data16
jno
push
icebp
mov
and
dec
sti
cs
hlt
add
adc
mov
cmpsb
xchg
lods
inc
push
xlat
add
movsl
daa
dec
dec
adc
aaa
add
inc
adc
or
into
push
adc
fsubl
fstpt
mov
lret
pop
addr16
aam
call
mov
lds
rorl
cmpsb
cmp
ret
not
or
out
mov
xchg
mov
aas
mov
and
scas
outsb
push
div
add
lods
repz
pop
and
cld
inc
sub
dec
jmp
inc
inc
pop
jecxz
sarl
and
scas
mov
jbe
inc
sbb
pop
pop
lods
push
cld
sub
jo
adc
jecxz
xor
sub
fwait
push
int
pop
popf
push
jae
xchg
or
inc
add
inc
cmpsl
cmp
cmp
ret
mov
aam
push
cmpsl
or
push
mov
or
nop
mov
clc
mov
inc
sahf
aas
add
fimull
mov
xchg
mov
ss
andl
inc
movsl
pop
push
add
or
xchg
enter
insb
pop
adc
mov
push
cmpsl
sbb
sbb
scas
dec
stos
adc
lret
out
adc
scas
mov
mov
push
cld
pop
aad
shrl
movsl
aaa
cld
mov
sbb
xor
cmp
xor
iret
or
dec
pop
mov
shlb
mov
int
sti
lea
cwtl
mov
cmp
mov
fwait
or
inc
xchg
pop
jno
pop
call
in
mov
mov
sub
add
dec
andb
popa
imul
pop
mov
repnz
xchg
movsb
popa
scas
mov
stos
ljmp
jne
aas
or
lahf
call
mull
sub
xchg
rclb
lret
inc
and
sub
dec
std
test
dec
sbb
cltd
xchg
fisttpl
lds
fwait
in
mov
fsubl
cmp
pop
es
nop
out
xchg
sbb
jo
sti
test
int3
sbbl
jp
mov
imul
insl
dec
sub
or
xor
mov
pushf
or
xchg
mov
imul
jne
inc
cmp
dec
imul
jecxz
or
imul
xor
test
and
jb
pop
rcll
insl
pop
cmpsb
pop
jg
or
daa
jmp
dec
sub
out
jb
push
cmp
loopne
lock
ljmp
in
sub
pushf
cmp
dec
sbb
imul
mov
pop
test
iret
inc
call
jbe
fwait
sahf
test
cmc
dec
popa
jl
and
sbb
push
adc
and
inc
ja
jge
mov
adc
repz
adc
push
rcrb
stc
push
popl
jmp
pop
pop
or
xlat
mov
gs
in
fistps
das
icebp
mov
cltd
jge
cmpsb
sub
imul
movsl
imul
mov
xchg
push
cli
dec
mov
or
inc
and
pop
pop
adc
fbstp
lds
mov
dec
lret
sbb
mov
fisubrl
or
jbe
lds
dec
cmp
pop
cs
sub
lock
mov
mov
add
sbb
fbstp
push
test
iret
ljmp
or
subb
aam
aaa
imul
repz
dec
xchg
cmp
je
call
adc
imul
imulb
xchg
xor
push
popa
lods
out
vpsubb
and
xor
sarl
sub
out
xchg
lret
xor
mov
sbb
popa
addb
cltd
mov
mov
mov
iret
cli
cmpsl
jns
cltd
int
inc
cmp
jl
lods
ss
es
or
push
or
dec
pushf
jmp
or
gs
es
push
leave
push
outsb
cmp
sub
movsb
stos
pop
xor
fdivrp
dec
cmp
pop
pop
xchg
ss
movsl
cld
rclb
add
xor
outsb
sarb
mov
and
dec
fiadds
in
push
loop
push
xchg
test
nop
jbe
sbb
aas
mov
addb
jnp
insl
add
adc
mov
push
fimuls
loope
lret
xor
push
mov
inc
sub
movsb
sti
ljmp
test
cmp
push
repz
pextrw
pop
popf
inc
xor
jl
push
orb
push
push
mov
int3
ja
push
and
nop
jg
jbe
int
push
out
ret
sub
int3
aam
or
xchg
mov
sbb
xchg
fildl
rorl
push
loop
inc
enter
jns
cmp
ljmp
jae
cltd
xor
decl
icebp
in
jg
stos
fcomps
jge
sub
mov
ljmp
lods
jmp
or
out
ljmp
push
flds
jle
sbb
cmp
push
pop
inc
lahf
add
iret
je
xlat
scas
sub
ret
cmp
jnp
adc
cmp
cltd
cmp
orb
nop
push
inc
mov
lods
xchg
jg
sub
xchg
mov
jl
xor
cmp
popf
jecxz
push
pop
loopne
mov
rcrl
pop
jb
inc
pop
dec
stos
into
xor
jecxz
ds
lret
push
imul
mov
xor
subl
stc
mov
rcll
adc
subl
outsl
data16
movsb
pop
pop
cmp
mov
sub
out
adc
sti
fwait
shlb
jmp
cmp
jge
dec
xchg
sub
call
jns
ljmp
cld
cwtl
or
or
dec
sub
xchg
pop
or
ret
inc
shll
ret
test
xor
jp
pop
sub
call
pop
mov
or
mov
sti
add
xchg
add
ffreep
rcll
xchg
cmpsl
hlt
mov
insb
adc
dec
fstpt
sbb
fcoml
cmp
sbb
push
inc
add
cmpb
jno
jge
jge
dec
cmpsl
out
std
pop
mov
iret
pop
cmp
sub
jns
jns
and
das
data16
pop
push
adc
inc
sbb
push
test
push
add
roll
aas
push
mov
add
ret
cwtl
adc
sub
fstpl
ret
testl
sub
pusha
jp
sub
xchg
rclb
pop
fsubl
push
pusha
add
frstor
cmp
bswap
movsb
or
dec
mov
jg
ret
jne
adc
or
addr16
popa
sbb
pop
in
sub
push
call
lret
shrb
out
or
ds
scas
mov
pop
jge
fadd
decl
jmp
in
jbe
pop
ret
lods
sbb
or
je
adc
adc
mov
shl
mov
xchg
mov
imul
fnsave
lret
in
mov
stos
ja
cmp
iret
mov
pop
ret
daa
jnp
adc
xor
stos
mov
lret
clc
xchg
cmp
cmc
int
pop
jge
xchg
push
pop
ja
nop
mov
or
es
ds
clc
stos
test
mov
in
lea
lret
sbb
enter
jg
add
dec
lret
and
push
cmp
jecxz
xchg
and
outsb
adcb
sub
dec
jecxz
sbb
add
dec
mov
shl
test
mov
sub
enter
xchg
enter
aaa
pop
dec
cmpsl
cwtl
ja
push
ss
aaa
fldl
in
inc
andl
inc
mov
sub
call
out
test
and
jg
loope
das
loopne
xchg
mov
sti
pop
fsub
sti
dec
or
inc
inc
or
mov
int
std
int3
int
sub
lods
sub
mov
movsb
add
jo
sahf
ss
add
inc
ljmp
fstl
call
cmpsl
andb
mov
sar
push
lret
pushf
popa
dec
ret
negl
xor
jae
nop
pusha
sbb
xchg
rorl
scas
adcl
lock
testb
cltd
pop
xor
push
mov
dec
xchg
negl
stos
and
or
inc
sub
xchg
xchg
cmp
shrb
mulb
or
jmp
sbb
jmp
sbb
lret
cwtl
xchg
aaa
mov
ret
roll
jbe
jl
mov
dec
sub
in
cmp
adc
add
int
les
push
in
sbb
nop
inc
lahf
pop
cs
push
test
ss
push
sahf
test
test
daa
mov
inc
push
sarb
mov
fstpl
lods
das
daa
xchg
jmp
inc
push
pop
rcrb
in
int3
pushf
adc
xor
lret
movsl
imul
xor
lahf
mov
inc
mov
jno
js
ss
sub
test
sahf
lahf
int3
xchg
stos
mov
lock
pop
mov
sub
mov
push
sbb
dec
mov
stos
mov
adc
insb
sub
fcomps
stc
ror
addr16
pop
testb
inc
xchg
add
xchg
int
sub
xor
cmpsl
adcl
iret
stc
popf
xchg
inc
cmpsl
test
mov
push
jg
xor
mov
jns
or
cmpsb
push
mov
mov
inc
inc
inc
pop
cmc
out
dec
inc
push
fistpl
dec
lret
sbb
rclb
sub
jp
call
insb
std
jg
out
mov
push
jl
jns
sbb
pusha
cld
add
xchg
loop
popa
shl
xor
es
ret
sub
mov
mov
insb
leave
imul
jp
test
in
mov
ljmp
and
fwait
mov
pop
mov
leave
dec
cmp
or
cmp
sahf
mov
fdivl
jnp
dec
xchg
add
cmc
sub
push
mov
mov
pushf
js
dec
inc
cmp
inc
scas
sub
and
sub
fsub
and
lret
or
jecxz
fdivs
inc
mov
or
inc
sti
test
xor
fidivs
shl
and
pop
sub
pop
pop
jmp
adc
inc
mov
pushf
loop
jo
sbb
xchg
push
adc
stos
jae
fisubs
adc
pop
leave
cmp
push
sub
inc
mov
sub
sub
xor
jns
out
sbb
mov
loope
sub
sbb
sub
mov
mov
loopne
pop
ret
mov
lret
repz
fstps
xor
pusha
scas
fwait
add
mov
sub
stos
sbb
sti
lcall
ret
cmc
pop
lahf
sbb
lret
shr
mov
out
jg
dec
push
ss
push
sub
or
movb
mov
sbbl
stos
gs
mov
fcom
mov
push
mov
xor
sub
dec
sahf
iret
loop
test
les
dec
mov
pop
repz
jg
nop
and
xor
daa
mov
or
sub
loope
and
fstl
sarb
jl
inc
or
xchg
jae
push
mov
scas
outsb
cmp
leave
cld
scas
icebp
and
xchg
dec
mov
stc
pop
int3
cmp
negb
je
cmpsb
psllq
jb
shll
add
mov
dec
repz
inc
jecxz
cmpb
adc
inc
outsb
and
adc
adc
xor
lods
xor
pop
xor
add
repz
loope
aad
fimull
or
cmp
enter
pop
add
sbb
stc
sub
je
jle
int3
dec
and
clc
aad
xchg
inc
xor
test
std
decl
imul
pusha
xchg
bound
loopne
insb
cmp
xchg
push
orl
loopne
test
adc
jmp
xchg
lea
fiadds
or
call
addr16
cmp
jmp
jmp
imul
mov
fisttpll
stos
lahf
push
push
adc
sbb
xchg
mov
sbb
jmp
mov
out
sar
daa
inc
data16
sub
cmp
loop
mov
xchg
mov
jl
inc
sub
mov
or
outsl
gs
jecxz
loop
cmp
inc
xor
add
mov
loope
mov
sub
xchg
push
jl
cmpsb
ss
loope
loopne
lock
jne
test
sbb
inc
fsts
mov
jns
sub
sahf
loop
fwait
sub
dec
pop
mov
mov
jp
jae
stc
popf
xor
mov
and
or
imul
sub
shrl
adc
fs
jo
test
jo
sar
xchg
pop
xchg
mov
push
pop
shl
test
in
out
cli
aad
inc
jnp
add
jmp
pop
jmp
xchg
in
pop
dec
mov
addr16
mov
dec
jecxz
push
imul
mov
cmp
ret
subl
and
mov
les
lock
pop
and
loope
fs
push
rorl
mov
push
aaa
mov
pop
in
adc
cmc
jne
sub
inc
xsave
push
push
sub
jae
in
sbb
in
mov
into
mov
scas
lret
cmpb
outsb
adc
shll
push
lcall
fisubrl
inc
mov
push
bound
test
push
mov
mov
jmp
clc
push
xor
je
dec
rorl
dec
mov
jp
and
out
add
les
jns
and
in
test
mov
adc
cmp
test
add
rcl
shr
sub
lods
pop
mov
sub
sub
jecxz
push
arpl
sbb
adc
test
xor
jg
aam
bound
fadds
and
imul
xchg
xchg
bound
ret
rcrb
std
cmpsb
int
cmp
lcall
xor
cwtl
push
push
out
test
gs
xlat
aaa
shl
or
cmp
imull
jmp
outsl
pop
cwtl
push
pop
inc
lods
in
pop
dec
scas
les
or
stos
jle
sub
mov
adc
es
in
dec
or
sub
aaa
movsl
out
xchg
xor
xor
popf
ret
mov
out
push
or
mov
gs
mov
cmp
dec
das
inc
decl
dec
pusha
xor
lahf
fucomip
jbe
cs
mov
pop
imul
pop
lea
rcl
ja
nop
int
popa
push
scas
mov
mov
cltd
sbb
psubw
sub
sub
test
test
js
sbbl
lcall
push
stos
iret
inc
sbb
and
enter
cmc
les
xchg
mov
iret
mov
jl
push
ret
add
outsl
xchg
cmc
pop
fwait
cmpsb
push
test
mov
mov
loope
adc
dec
sub
mov
mov
arpl
mov
jle
mov
repnz
push
mov
lea
jge
sbb
pop
fldcw
mov
pop
push
lods
or
movlps
mov
inc
cmp
xchg
nop
mov
aaa
insl
add
dec
testl
mov
shr
push
shll
xchg
movsb
icebp
sub
xor
popa
les
clc
add
cmpsl
dec
and
mov
imul
push
cmp
insl
ds
popa
in
jno
adc
cmp
in
mov
enter
push
add
or
leave
cmp
movsl
lock
jae
cltd
cmp
sbb
mov
jl
shrl
test
ds
adc
cld
in
add
inc
mov
cmpsl
lods
nop
push
leave
shlb
and
xor
and
inc
outsl
lcall
icebp
inc
clc
sub
xor
mov
aad
stos
mov
push
dec
movsl
cmp
mov
add
cmp
test
icebp
xor
adc
cmc
rcl
add
push
ja
push
test
pop
mov
jg
cltd
add
jl
andl
loop
fsubl
add
sarb
jmp
pop
inc
test
dec
insl
inc
iret
and
loop
jge
mov
mov
and
lock
inc
adc
frndint
push
sub
pop
push
xchg
outsb
push
mov
mov
push
insb
outsb
into
xchg
test
mov
cmpsb
mov
in
lds
repz
or
cltd
flds
call
fwait
scas
and
cmpsb
push
pop
in
fwait
sub
jns
dec
push
inc
pop
cs
add
es
cmpb
lds
xor
gs
adcl
pop
sub
test
divb
sub
lods
repnz
jnp
mov
xchg
popf
xchg
add
fiaddl
sub
add
or
mov
push
aam
filds
cmp
jecxz
sahf
notb
fimuls
xchg
xor
ljmp
xchg
sub
lds
into
into
cwtl
pop
popa
push
hlt
and
fisubrl
pop
pop
push
out
xchg
and
bound
adc
cltd
pushf
mov
cmp
and
cmp
push
pop
shrl
cmpsb
arpl
leave
jg
hlt
aas
stc
pop
cmp
cmpsb
ror
insb
pop
out
cmc
cmp
int3
or
jg
or
jbe
into
add
mov
xchg
mov
jge
fidivrl
mov
fdivrl
filds
sahf
push
xor
ljmp
test
cmpsb
mov
cmp
adc
sbb
lret
movsb
ss
or
and
cmp
mov
jo
sub
xchg
rorb
loopne
insb
mov
inc
lret
mov
pusha
stc
pop
jge
mov
data16
shrb
and
ljmp
sub
lahf
les
inc
mov
lahf
and
in
mov
and
imul
or
sbb
inc
arpl
icebp
loop
sti
jnp
out
decl
test
mov
popf
push
add
push
push
lcall
mov
cli
lods
sub
cltd
int
push
pop
shll
mov
jo
or
sub
pop
and
mov
mov
sub
jno
dec
sbb
mov
jns
or
inc
jns
sub
sbb
cmp
adc
dec
ja
ret
mov
xor
add
fwait
icebp
gs
dec
xorl
add
sahf
out
ret
xchg
inc
fiaddl
decb
or
das
call
test
stos
and
or
lock
adc
movsb
push
push
dec
inc
popf
add
out
movsb
repnz
lcall
repz
mov
js
test
sub
ret
cmpsl
pusha
xor
or
inc
leave
fildl
jae
sub
movsl
mov
lock
in
ror
sbb
enter
popa
cmc
std
xor
adc
cwtl
adc
adc
inc
mov
dec
or
das
repnz
stos
sub
mov
sub
dec
cltd
mov
push
xchg
popa
mov
ljmp
inc
popf
or
mov
sub
mov
in
dec
and
add
fcompl
mov
pop
clc
out
loopne
cmpsl
xor
jne
or
mov
dec
and
jp
jg
mov
sbb
icebp
insb
addb
add
adc
sbb
cli
lret
pop
mov
cmp
push
cli
int3
fisttps
gs
jmp
mov
push
xor
mov
ret
iret
cld
push
loop
enter
test
dec
divb
jg
and
cli
js
inc
mov
ss
movb
cmp
jle
js
inc
arpl
das
shll
sub
push
or
lret
fs
mov
repz
pop
in
mov
push
cltd
jae
repnz
xor
xchg
mov
cmp
inc
sub
outsb
inc
xchg
add
mov
sbb
cs
and
jg
jo
ja
xor
pushw
lret
bound
xchg
adc
push
push
mov
imul
pop
or
dec
pop
jl
or
mov
jmp
or
mov
jg
stc
std
xchg
push
push
xor
test
add
add
and
push
push
push
call
pop
lods
out
test
sbb
stc
xchg
mov
and
or
mov
xchg
push
adc
jl
pop
outsl
aaa
jae
inc
ret
ljmp
cmp
dec
cmp
mov
rorl
mov
popa
sbb
cmpsl
sbb
mov
push
dec
or
mov
pop
ret
data16
jp
inc
fsubl
sbb
inc
pop
pop
das
mov
inc
insl
mov
mov
jl
cwtl
push
repz
inc
int
pop
in
cmpsl
mov
lds
cmp
popf
sbb
and
pop
cmp
pop
lret
cmpsl
mov
push
fnsetpm(287
sub
and
popa
popa
out
in
out
decb
jo
add
popa
jns
lds
mov
xchg
sub
and
mov
cmp
repz
mov
pop
das
scas
sti
dec
call
push
pushf
push
pop
adc
es
addl
std
mov
jno
test
sbb
les
pushw
push
mov
ljmp
roll
adc
cmp
cmp
dec
sbb
xor
shrl
ds
or
xor
add
add
aam
lcall
dec
push
das
mov
dec
hlt
inc
cmpsb
stos
mov
outsb
jno
icebp
jmp
aas
push
push
rcrb
sub
ljmp
xchg
pop
jecxz
mov
cltd
jle
cmpsb
ja
inc
add
cmp
xchg
xchg
mov
add
xor
cmp
test
push
inc
fcmovbe
ss
lea
and
or
or
push
sbb
dec
push
push
cmp
sbb
mov
cwtl
in
and
fadds
ljmp
jnp
xchg
mov
add
aam
lahf
or
out
jb
cwtl
mov
cmp
or
sub
cmp
jle
pop
jle
pushf
fwait
jo
push
jl
into
push
jns
enter
jns
neg
jno
jg
sbb
or
xlat
push
and
arpl
ljmp
mov
cwtl
aaa
out
xchg
das
jbe
outsl
scas
sbb
xchg
imul
loope
push
popl
mov
pop
push
inc
xor
das
shlb
xorb
in
out
int
out
pop
lea
stc
fldcw
adc
xchg
fbstp
fdivr
push
pusha
inc
imul
inc
and
negb
gs
arpl
jbe
fstpl
pop
pop
fwait
data16
add
insl
cltd
mov
inc
sbb
push
sarl
les
or
pushf
mov
add
and
cli
push
ss
test
nop
outsb
movsl
lahf
or
cmp
call
mov
pop
inc
addr16
outsb
mov
cmpsb
sub
bound
inc
stc
clc
cmpsb
and
jno
bound
pop
outsl
and
jne
jae
dec
sbbl
pushf
pop
xchg
insb
add
loope
lcall
mov
mov
pusha
mov
add
aas
mov
stc
lock
sar
lcall
sub
cmpsb
dec
and
sahf
sahf
dec
repnz
insl
dec
shlb
out
pop
aam
sub
das
ljmp
nop
outsb
jae
cmpsb
enter
mov
pushf
inc
and
mov
popa
fcmovne
and
cmp
xor
enter
or
mov
hlt
mulb
mov
inc
pop
adc
test
xor
push
or
mov
mov
nop
mov
inc
adc
jg
and
inc
inc
pop
pop
and
sub
rclb
lahf
loop
filds
sub
loop
out
dec
hlt
mov
cmpb
cmpsb
mov
aas
ljmp
insl
in
mov
cmp
mov
pop
aad
adc
xchg
popl
jle
fnstcw
fs
das
jmp
or
push
pop
dec
adc
popf
mov
lea
sbb
sbb
xor
fnstenv
ss
shlb
out
add
mov
pop
add
and
addb
jmp
lret
into
ds
xor
jne
lret
mov
sub
lods
mov
push
and
outsb
mov
push
push
push
mov
gs
mov
mov
inc
push
in
js
xor
rclb
jo
and
int3
add
iret
cmp
shr
fsub
jnp
xor
fwait
push
add
repnz
data16
pop
xorl
mov
stc
fldt
mov
pop
lret
sub
xchg
mov
pop
aad
inc
addr16
inc
jno
lods
jl
sub
xorb
adc
test
jge
fwait
out
mov
mov
negb
adc
and
cs
pop
cmp
paddq
pop
aaa
mov
int
int3
test
mov
xchg
std
aaa
pop
adc
addr16
pop
out
das
fs
xchg
sbb
std
mov
add
jl
icebp
sub
dec
mov
and
insb
outsl
xchg
adc
scas
xor
dec
scas
mov
ds
and
sbb
inc
pop
imul
cmc
inc
popf
in
hlt
add
xchg
subb
xor
js
mov
ret
jo
xchg
lods
push
sub
ret
mov
mov
mov
push
sbb
add
popa
jl
xchg
and
push
add
mov
pop
icebp
mov
mov
iret
xorb
dec
in
push
jno
dec
mov
sbb
dec
dec
enter
jmp
push
sbb
test
xchg
test
outsl
sbb
repz
jne
stc
cmpsb
scas
sub
cmp
dec
aad
fisttpll
test
mov
and
push
mov
jne
iret
sbb
push
jg
pushl
fildl
mov
or
int
mov
xchg
je
es
fcomps
out
fs
mov
push
xchg
add
pop
sar
fsubrs
movsb
inc
mov
dec
sbb
pop
mov
ljmp
fwait
gs
adcl
push
cld
rcrl
add
dec
hlt
adc
out
mov
cld
xor
out
fdivs
push
ret
stc
mov
aas
inc
mov
pop
movsl
xor
mov
sbbb
pushf
jmp
sub
and
cmp
test
push
push
lods
or
push
dec
mov
mov
cmpl
into
xchg
cmp
cltd
jl
loop
stos
mov
and
add
mov
mov
out
adc
inc
fs
mov
data16
sub
push
mov
sbb
xchg
subl
xchg
rcll
mov
dec
sub
adc
pop
jp
movsl
outsl
adc
rolb
jae
adc
insb
jno
es
int3
mov
push
inc
xchg
xchg
mov
out
or
imul
jle
jne
xchg
sbb
les
in
rep
mov
mov
push
fadds
mov
fists
sub
xchg
rcll
in
lea
les
lods
xchg
mov
dec
add
xchg
push
push
jbe
shrl
mov
decb
or
in
jle
nop
lret
sarb
xchg
mov
adc
inc
jnp
xlat
stos
mov
out
pusha
inc
jmp
push
or
es
dec
leave
popa
sbb
xor
ljmp
les
cld
lcall
pop
fcoml
fsubs
inc
movsb
mov
sub
addr16
movb
stos
adc
mov
sti
add
inc
stos
push
mov
leave
lahf
aad
dec
ds
test
jbe
roll
fmuls
imul
in
jne
cld
jae
call
mov
mov
xchg
cmp
and
jmp
or
cli
clc
or
js
push
and
pop
add
and
cmc
xchg
inc
dec
shrl
add
jnp
divl
clc
push
inc
aaa
add
xchg
pusha
pusha
push
jbe
jb
sbb
xchg
mov
in
sbb
popa
daa
lret
sub
sbb
pop
repz
outsb
int3
jnp
jae
push
mov
movl
dec
dec
push
hlt
mov
or
xchg
jbe
jp
and
mov
xor
push
add
popf
sbb
test
popa
sbb
push
and
push
es
push
fcoms
adc
ss
sub
xor
mov
insb
xchg
repz
test
out
fiaddl
repnz
cmp
mov
mov
fiaddl
fwait
loopne
nop
pop
xbegin
insl
cmp
jmp
in
pop
xchg
pop
lea
out
dec
lcall
cli
pop
out
aad
ficompl
push
gs
fldenv
cmp
pop
cltd
xor
push
mov
jge
call
xchg
inc
xchg
and
fnstenv
outsb
push
xchg
imul
push
mov
xchg
lea
mov
add
sub
and
popa
push
stos
push
xor
pusha
xlat
jmp
push
int
outsl
fnstsw
imul
dec
push
dec
or
dec
push
pushf
int
in
mov
push
dec
inc
testl
mov
mov
push
ret
sbbl
test
and
pushf
dec
in
xchg
out
out
out
je
dec
sahf
cwtl
xchg
fsubr
imul
sbb
dec
xchg
repnz
mov
dec
sbbl
in
cmp
pop
sub
and
lock
mov
in
inc
insl
adc
lcall
inc
sub
jmp
sub
js
daa
out
ja
and
mov
stos
mov
sub
out
scas
mov
fistps
add
inc
shrl
out
out
xor
ja
fucomi
cmp
outsb
jl
pop
lock
push
adc
fcmovnb
xor
dec
mov
xchg
je
adc
xchg
mov
test
repz
fiaddl
or
dec
into
popf
add
dec
add
xchg
cwtl
outsl
inc
pop
xor
cld
mov
adc
mov
shll
mov
movsb
mov
sub
cmp
jo
inc
inc
dec
push
push
shl
push
cwtl
stos
cmpsl
add
jne
ret
stos
pop
ds
jmp
push
inc
add
popa
icebp
fmull
sarl
movsb
fcoms
lods
mov
fsubs
bound
cmp
rolb
xor
and
cmc
movsl
imul
dec
pop
add
sti
aaa
in
dec
mov
addr16
jmp
and
cmp
popa
pop
cwtl
popa
imul
gs
fnstenv
je
and
xchg
mov
insl
movsl
push
mov
dec
xchg
or
cmp
sar
je
dec
rcr
xlat
mov
push
in
mov
and
mov
in
xorl
scas
in
adc
jo
xlat
xchg
cmp
popa
idivb
xor
jmp
fstpt
lret
sbb
sub
shrb
mov
aas
cmpb
adc
sub
gs
xchg
mov
inc
xor
cmpl
cmp
sbb
mov
into
into
cmp
stos
push
popa
or
and
pop
pop
sbbb
push
stos
xchg
push
repnz
mov
xchg
dec
in
pop
inc
imul
sbb
pop
add
xor
and
hlt
or
sub
push
push
leave
hlt
pop
iret
pop
les
lret
mov
sub
xchg
mov
sub
jne
fsubrs
jno
loope
in
insl
enter
or
dec
add
mov
cmp
inc
stc
cld
pop
jae
dec
test
insl
hlt
sbb
add
cmp
jbe
sahf
mov
int3
sub
nop
insl
add
pop
das
add
jge
inc
aad
sahf
fdivs
leave
inc
repz
enter
insb
outsl
fdivl
imull
dec
in
or
aaa
pop
loopne
or
cmp
inc
aaa
pop
push
lcall
icebp
xchg
adc
sub
cmp
mov
fsubrl
cmp
int
pop
int3
mov
inc
ljmp
mov
mov
push
faddl
adc
in
dec
adcl
jl
cld
stos
clc
jp
and
imul
push
fstp
rcrb
pop
imul
or
inc
dec
shl
jb
notl
das
or
dec
inc
aas
repz
imul
pop
dec
pop
lds
inc
lods
add
mov
mov
sbb
lret
xchg
sub
dec
loop
pop
aaa
mov
out
cli
mov
xor
cvtps2pd
push
inc
jb
aam
and
out
pop
push
and
arpl
cmp
or
add
in
lds
stos
orl
push
das
lcall
fyl2x
mov
cmp
jl
ret
push
mov
cmpl
push
sbb
in
arpl
dec
bound
vandps
addr16
pop
jne
faddl
jl
add
inc
mov
std
shl
xor
xlat
cltd
pop
cmp
pop
call
mov
sub
and
gs
sti
cwtl
jg
das
icebp
pop
movsb
hlt
mov
sahf
ret
popa
xor
push
lcall
test
add
mov
das
pusha
sbb
adc
ss
sub
shl
fs
arpl
inc
dec
mov
cmp
cld
xor
lock
imul
in
push
aaa
adc
dec
pop
mov
mov
sti
out
jp
sub
push
rdmsr
loop
push
insb
pop
rcrl
or
js
aam
loop
stos
test
or
xchg
sub
jmp
bound
adc
ror
sbb
adc
imul
sbb
fnstcw
lcall
sbb
fisubrs
mov
xor
rorl
and
pop
int3
jle
call
aam
pop
jp
pop
xor
mov
gs
xor
lahf
leave
fnsave
cmp
pause
mov
rorl
icebp
push
pop
and
rol
jno
mov
mov
or
add
mov
jmp
rcll
aam
pop
shr
mov
rorb
mov
rcll
push
adc
mov
je
rol
enter
imul
adcl
cs
mov
or
stos
xchg
stos
xor
or
into
stc
inc
maskmovq
testl
push
pushf
push
leave
stos
mov
pop
cmp
movl
test
into
cmp
xchg
xor
pusha
push
ret
adc
sarl
loop
orps
xchg
inc
cmp
cmpsl
dec
push
jnp
out
inc
lock
out
xchg
cmp
ror
mov
pushf
mov
jl
jle
push
fdivs
jne
das
cmc
jg
shrl
ljmp
jb
sbb
xchg
mov
add
sub
mov
xor
mov
jns
cmpsb
iret
pop
xor
mov
inc
rcll
out
cmpb
dec
xor
int
call
arpl
scas
mov
xchg
pushf
or
repz
outsl
scas
filds
popa
nop
fsubr
shlb
stc
loop
dec
xor
xchg
addl
mov
and
add
jle
rcrl
bound
pop
icebp
xchg
lcall
mov
jb
dec
mov
xchg
aad
xchg
test
jmp
pushf
cmp
push
mov
rclb
xlat
arpl
out
in
xchg
mov
jbe
adc
mov
bound
iret
cltd
mov
hlt
fwait
shr
in
jns
outsb
dec
xchg
addb
iret
outsb
jecxz
aam
jne
dec
scas
icebp
mov
loop
or
sbb
or
in
movl
mov
xor
les
sub
xor
mov
jecxz
jo
sub
or
leave
xor
sti
jb
je
push
xor
dec
sahf
adc
imul
sbb
cmp
mov
push
mov
jecxz
sub
cld
mov
xor
and
adcl
shlb
mov
repnz
and
mov
sub
pop
sub
ror
lcall
xchg
aam
xor
sub
lahf
fldcw
push
dec
pop
adc
push
cld
inc
cld
insb
xor
mov
or
dec
mov
rcr
fwait
xchg
push
repz
movsl
jnp
or
js
lods
iret
mov
dec
out
mov
lret
lods
enter
in
jge
pop
ret
ss
pop
test
cmp
mov
arpl
test
loopne
outsb
inc
rorb
mov
and
dec
xlat
cmp
dec
add
imul
shlb
xor
rcl
push
imul
mov
fiadds
cmp
jge
cmp
cmp
daa
xor
lea
sar
xchg
xchg
jg
xor
mov
shlb
cmpsb
or
out
fstpt
out
jp
jp
lods
roll
dec
sub
jl
scas
xchg
adc
push
call
mov
mov
js
pop
int
xor
xchg
sub
fsubs
add
sbb
mov
inc
fnstsw
mov
ret
push
rcrl
jg
sbb
sbb
xor
lods
jp
out
jno
xor
sub
add
int3
push
sbb
data16
popl
fists
add
test
rcll
scas
xor
ja
push
jp
fwait
xchg
adc
fsubs
lahf
sbb
mov
mov
pop
xor
insl
xchg
sub
mov
mov
ret
mov
mov
push
sbb
test
cld
mov
mov
sub
testb
or
cmpsl
lods
mov
test
rcrl
daa
std
out
lcall
out
xchg
xchg
out
aad
lahf
stc
sbb
jmp
inc
xchg
mov
cmpsl
cmp
adc
fwait
lods
adc
or
pop
or
ss
repz
out
out
push
jp
mov
out
jge
out
sub
push
adc
lcall
outsb
push
push
and
dec
and
fcomi
nop
or
ror
add
dec
mov
add
pop
fmuls
out
sub
sbb
int3
sub
mov
loop
cmp
add
push
mov
ret
xchg
jae
in
cmp
clc
or
pop
ljmp
mov
insb
jbe
mov
out
shrl
jecxz
add
adc
sub
jne
inc
fucom
cs
dec
testl
xor
sbb
test
jge
andl
and
xor
cmc
ja
sub
adc
shl
ja
mov
xor
mov
xchg
out
test
ljmp
jb
xor
mov
lock
out
pop
fcompl
add
or
mov
mov
sti
mov
addb
incl
scas
popf
inc
out
inc
fdivl
aaa
rol
jns
data16
mov
out
cmp
or
js
adc
and
jl
mov
lods
cmp
add
mov
dec
mov
ret
add
outsl
mov
movsb
mov
push
sbb
fs
dec
out
in
shlb
xorw
arpl
xchg
ss
mov
jecxz
js
movsb
add
pop
inc
pop
lods
cmc
sbb
or
sub
xchg
sub
push
bound
mov
lret
mov
pop
jg
lahf
dec
xor
push
out
add
push
stos
push
mov
mov
xor
add
mov
xchg
fldpi
inc
inc
mov
xor
into
mov
les
push
adc
lods
xchg
mov
les
dec
out
sub
jg
in
aad
test
jnp
cmc
mov
ficompl
cmpl
out
add
cmp
lods
xchg
in
dec
nop
mov
shrb
fstl
ret
jmp
sbb
mul
cmp
jle
sets
mov
adc
arpl
pop
xor
jmp
adc
inc
xchg
aam
inc
or
ljmp
xlat
call
dec
push
imul
inc
jl
xchg
std
and
ds
add
popf
jmp
or
pop
xorb
sub
lahf
mov
cmpsl
xchg
cmpsl
jg
sub
outsb
inc
loop
adc
jmp
sbb
pusha
imul
push
sub
lcall
adc
mov
ja
packsswb
aad
inc
adc
orl
cld
jbe
je
mov
lret
mov
imul
addr16
mov
xor
sarl
add
sub
pop
push
xchg
sbb
test
sub
inc
rolb
testl
pop
and
pop
pop
sub
push
xor
cs
push
adc
pop
jle
insb
clc
imulb
mov
cmp
mov
cmp
int3
mov
bound
lea
dec
ret
movsl
pop
loope
cmp
add
test
gs
xor
lahf
ret
cltd
aaa
cwtl
lock
movsl
out
cmp
pusha
inc
xchg
ss
xor
sbb
fsubs
xchg
push
dec
sbb
ds
lcall
sbb
out
shrl
insb
or
fisubrl
shll
sub
sbb
and
inc
lea
dec
ljmp
cmpsb
pop
add
adcl
cmp
or
adc
and
or
aas
mov
stos
xor
sbb
mov
push
xor
jp
sbb
daa
xlat
xor
cmp
out
mov
push
jl
mov
fdivr
sub
cli
and
loope
pusha
cmp
adc
push
and
cmp
xchg
imul
mov
xchg
ds
addr16
orl
inc
lods
data16
push
mov
fdivs
popa
and
inc
pop
lahf
cmp
dec
loop
and
das
negb
rol
gs
testl
andb
cmp
out
jg
dec
add
pusha
gs
sbb
mov
mov
aam
jg
lock
insl
div
stos
das
sbb
jge
push
push
mov
fldl
adc
lock
and
add
jae
rcrb
in
sbb
es
repz
out
cmpsb
repnz
pop
imul
or
fiadds
xchg
ja
mov
jg
pop
xchg
xor
rcrb
pop
mov
sbb
pop
jg
xchg
dec
movsl
xor
xchg
mov
icebp
lret
pusha
pop
leave
mov
in
movsl
mov
popf
xchg
ja
pop
repnz
outsl
mov
push
dec
jbe
inc
shrl
push
sarl
or
lods
dec
sub
xchg
jne
stos
inc
stos
scas
addr16
sbb
cmp
dec
enter
scas
loope
mov
jmp
pop
add
psraw
js
pop
xchg
inc
jbe
mov
xchg
shlb
inc
shll
inc
ret
xor
repz
lea
call
push
fldt
cwtl
cwtl
andl
fs
dec
push
mov
popf
shl
add
outsl
dec
sub
mov
call
in
out
sub
aas
test
dec
imul
cmpsl
mov
mov
jg
adc
adc
test
jecxz
sbb
rcr
sti
inc
push
pushf
cmp
stos
xchg
imul
into
pop
movl
hlt
sbb
jne
and
cli
sub
sbb
mov
cmp
popa
push
inc
mov
xchg
jo
inc
rclb
je
fs
fdivrs
shrl
mov
shl
gs
inc
cmp
xlat
lret
push
ror
dec
sbb
cmpsl
pop
lock
cmpsl
push
lds
jge
in
iret
mov
pop
push
cmp
inc
jmp
cmpsb
verr
ja
lcall
mov
cld
imulb
push
push
cmp
call
inc
fdivs
cmpsl
xor
jnp
mov
loope
out
jg
push
pop
fidivs
cs
cld
xor
sub
sub
int
imul
in
and
popa
sahf
das
repz
push
push
repnz
mov
pop
pop
sbb
lea
fcmovnbe
fsubrs
aam
push
mov
jl
add
icebp
add
cmp
in
enter
pop
push
fwait
pop
xor
int3
shrl
jb
inc
or
push
ret
dec
js
xchg
out
dec
mov
int3
mov
mov
divb
jb
loope
jg
pop
mov
or
pop
xchg
rcrb
pop
push
cld
pop
orl
movsb
pop
lret
outsb
arpl
aam
dec
jbe
lret
test
dec
in
int
cld
xchg
lods
inc
jnp
ljmp
xor
inc
xor
adc
mov
mov
scas
hlt
sbb
adc
movsl
jmp
clc
sbb
mov
call
add
cmp
push
in
or
das
hlt
fidivrl
aas
push
out
sub
movsl
mov
popa
sarb
and
pushf
cwtl
scas
rcll
xor
out
popf
xchg
jl
stc
xchg
xchg
xlat
mov
push
mov
inc
pushf
clc
sbb
fldz
addr16
cmp
dec
jle
lods
sub
les
inc
sbb
push
out
xor
cmp
lods
inc
movsl
xchg
push
mov
nop
xchg
int
insl
jae
xchg
push
fcom
cmp
cmp
mov
ficompl
sub
out
les
repz
sbb
ss
sbb
pusha
movsb
push
mov
lds
mov
pusha
popa
test
cld
outsb
mov
loope
adc
xchg
inc
iret
mov
mov
and
data16
insb
cmp
outsb
dec
test
div
cld
mov
testl
push
sub
lods
push
mov
and
cli
les
aas
jno
dec
pop
mov
icebp
sbb
add
in
aam
push
lcall
xor
sahf
jo
jmp
add
outsl
test
ficomps
adc
dec
cmp
mov
into
lcall
shlb
int3
lahf
mov
mov
or
imul
stos
sbb
iret
bound
xor
sub
inc
icebp
lcall
lock
insl
push
cwtl
out
add
in
shlb
mov
ret
leave
es
hlt
sub
iret
xchg
mov
popa
inc
shr
lods
lcall
ret
int3
adc
popa
fimuls
and
cltd
in
push
jmp
cmp
lds
inc
cltd
hlt
mov
mov
mov
ficomps
jmp
xchg
xchg
mov
cmp
or
loopne
mov
out
mov
xchg
dec
sti
incb
and
mov
movsb
aam
mov
xchg
or
rcrb
into
push
sti
clc
mov
leave
cld
aaa
inc
pop
ljmp
test
sti
dec
jp
add
dec
rorb
jp
jb
push
add
gs
std
add
inc
sub
and
int
aam
mov
lds
lahf
sub
mov
and
push
inc
arpl
sub
and
out
sub
inc
and
dec
mov
in
mov
test
dec
in
or
sbb
cmpl
imul
adc
pop
sub
in
stos
fsubl
sbb
sahf
push
sarb
ljmp
mov
insb
xchg
cmpsb
jmp
outsb
push
or
pop
ds
loopne
lret
addl
pop
arpl
sbb
cmpsl
mov
pop
jns
push
sub
lcall
std
sar
xchg
shlb
outsl
in
push
mov
es
push
or
xlat
popf
pop
or
imul
shrl
mov
cld
stc
inc
pusha
cmp
xchg
insl
std
daa
daa
nop
cmpsl
mov
and
lds
or
cmpl
sub
into
in
add
jb
sbb
xchg
pop
pop
xor
xchg
lock
jne
sbbl
mov
pop
pop
dec
pop
sbb
in
mov
adc
aas
movsl
mov
pushf
lea
sbb
push
adc
rcll
mov
cmp
in
mov
stc
mov
xlat
and
stc
mov
or
xor
aad
imul
pop
mov
push
daa
mov
mov
test
push
xor
es
fdivrs
in
adc
jae
jbe
repz
je
adc
sbb
lock
iret
aad
push
data16
lods
sub
add
xor
ljmp
xchg
enter
test
rcll
pop
sub
inc
cmc
cltd
fisubrs
jl
jle
push
inc
in
iret
popa
lcall
add
imul
add
loope
adcb
enter
aad
push
rorb
clc
jg
jmp
fs
jg
dec
push
sarl
cmovg
je
adc
mov
push
out
aad
xor
fnstenv
and
jmp
jno
das
dec
pop
sub
jae
lds
fisttpl
pop
sub
out
icebp
and
movsl
mov
cmp
test
fisubrl
lds
add
loop
push
xor
ss
push
mov
arpl
fimuls
rcrb
adc
adc
jl
cmp
pop
les
movsl
sbb
call
pop
jno
insb
imul
sbb
aas
fistpll
adc
add
sbb
sbb
aad
fucom
leave
sub
sub
mov
mov
cwtl
dec
or
xor
fistl
mov
cmp
add
cld
push
mov
and
jge
add
in
dec
push
mov
clc
xchg
sti
leave
mov
in
cmp
cld
idivb
jmp
dec
push
dec
jmp
fdivrl
into
cs
hlt
cmp
andps
jl
decb
pop
xchg
das
mov
shrl
jbe
repz
aam
test
push
xor
jno
xchg
addr16
in
fnsave
mov
fstpt
mov
les
and
nop
mov
jb
decl
push
push
jle
lods
fcomi
jg
and
in
lds
ret
dec
jbe
aam
jno
xchg
push
jno
arpl
flds
inc
jo
mov
mov
pop
scas
shrl
or
andb
xor
je
mov
xchg
xchg
mov
ret
push
cmpsl
inc
faddp
inc
aaa
mov
sub
movb
shll
jb
jb
cli
std
or
adcl
xlat
test
lea
sub
add
ret
jo
cmp
adc
xor
adc
mov
notl
jl
aas
arpl
adc
sub
daa
lahf
adc
lahf
faddl
sahf
sub
fwait
movsb
sbb
mov
out
sbb
rorb
dec
enter
xorl
inc
addr16
in
mov
or
lret
xchg
ss
sub
int3
pop
int3
pop
adc
nop
lahf
adc
out
cmp
pop
nop
hlt
enter
call
xor
mov
push
jo
xor
icebp
and
cmc
dec
mov
outsl
mov
in
int3
call
hlt
push
stos
insl
mov
pop
cmp
incl
jb
dec
jle
lock
pop
das
je
js
mov
cmp
mov
push
imul
push
addr16
jmp
inc
sbb
es
nop
rorb
jge
mov
fs
push
fcomps
mov
sbb
inc
inc
or
stc
sub
pop
push
mov
mov
lahf
or
mov
xchg
push
fs
add
inc
test
jl
fdivrp
dec
scas
ret
pop
sbb
adc
fstpl
or
enter
in
jle
cli
pop
into
clc
jl
fsubrs
fwait
push
ret
das
loope
insl
xchg
jmp
mov
pop
mov
ja
fimull
fstl
cld
adcl
mov
out
fists
icebp
dec
scas
xor
pop
les
mov
xchg
pop
jg
inc
fwait
addb
cltd
into
sbb
out
and
or
mov
andb
xor
xadd
jb
es
and
xchg
push
cld
outsl
sbb
inc
xor
jno
mov
gs
jp
cmc
sbb
fucomip
sub
shrb
dec
mov
xchg
lahf
iret
mov
add
imul
push
fistpll
cmc
sub
cmpsl
dec
cmc
jmp
out
scas
stos
loopne
outsb
cmpsb
sub
fsubs
js
jno
mov
cmp
pop
and
jle
mov
fcmove
clc
imull
push
mov
or
inc
cld
clc
xchg
in
jae
xor
push
or
pop
out
cmp
fdivrl
sub
xchg
decl
inc
jle
pop
data16
and
ds
roll
mov
out
lods
pop
jns
lret
test
xchg
pop
sub
jne
sbb
cmp
fbstp
push
pop
mov
push
repnz
mov
pop
fistl
dec
push
dec
or
scas
idivl
ljmp
int
sbb
lock
es
aas
icebp
sbb
jp
ds
add
stos
shrl
testl
cmp
mov
mov
lock
leave
ret
in
lea
adc
jg
aaa
ds
sbb
mov
or
aad
pop
movsb
lcall
fwait
sub
cltd
xchg
and
fs
add
and
clc
cltd
mov
js
adc
clc
mov
loop
hlt
fstpt
sbb
adc
lahf
loop
mov
mov
shl
adc
xchg
jno
dec
mov
adc
dec
xchg
dec
mov
cwtl
das
shll
adc
jp
leave
xchg
xchg
fsubrl
pop
jmp
mov
rcrl
mov
jae
sub
push
fmuls
icebp
pusha
sub
inc
daa
jne
dec
imul
mov
jp
inc
int3
and
mov
fdiv
and
push
sub
cwtl
scas
dec
and
out
dec
adc
sbb
sbb
jmp
lret
xor
addr16
fs
enter
ja
subl
int
xchg
sahf
mov
scas
dec
fcoml
xor
or
xchg
xchg
sub
inc
in
loopne
dec
dec
hlt
inc
jp
add
mov
jae
cwtl
mov
aas
gs
xchg
stos
arpl
jno
scas
ret
adc
mov
jmp
rcrb
inc
pop
div
sub
mov
orl
or
addr16
mov
and
mov
and
dec
lea
loope
js
out
adc
mov
outsb
icebp
mov
loop
jnp
dec
cmp
dec
xchg
cmp
scas
dec
jg
ret
insl
stc
xchg
inc
fcmovnu
pop
xorl
loop
in
xchg
inc
inc
ljmp
mov
call
lods
out
insb
rorb
jo
inc
cmp
scas
mov
data16
and
outsl
mov
dec
mov
orl
fwait
cmpsb
push
outsl
divb
and
testl
test
push
jg
push
add
movsl
btc
and
aad
sub
xor
data16
ficoml
cmp
lcall
dec
gs
cli
push
cmp
xor
jl
mov
cmp
lods
pop
mov
vmwrite
mov
and
test
les
int
bound
or
ret
lret
call
js
dec
jnp
popa
and
sbb
push
pop
mov
lods
or
cld
xchg
shr
sbb
push
push
mov
rcl
loope
lods
dec
clc
insl
loop
mov
xlat
or
icebp
sbb
sub
repz
test
out
outsl
or
cmp
arpl
inc
pop
loop
mov
repnz
scas
mov
movsb
rcll
pop
jo
outsl
rcll
hlt
fsubrl
pushf
insl
js
xor
mov
in
push
lods
jp
cltd
enter
lods
ror
ret
jne
or
fmul
aad
mov
ret
mov
inc
lods
push
mov
out
out
xchg
and
je
pop
push
cmp
mov
icebp
int3
aad
imul
ficomps
mov
cmp
adc
and
ficoms
sahf
out
cs
cmpsl
in
push
sub
mov
mov
jmp
insb
stc
jbe
mov
dec
adc
rolb
je
outsb
xor
data16
pop
call
mov
enter
push
pop
aam
hlt
cltd
xlat
pop
mov
lods
in
jp
adc
add
pop
jno
out
aad
jnp
mov
inc
ret
nop
xor
add
hlt
sub
mov
jg
cmp
sub
fidivl
and
cmp
pcmpgtb
dec
adc
lds
xor
jne
pushf
or
cltd
iret
dec
out
xor
jne,pn
add
push
mov
test
aad
mov
push
out
pop
lret
scas
mov
jecxz
and
leave
les
push
ja
mov
aam
fs
sub
enter
popf
sarl
push
test
int3
loopne
test
pop
push
mov
inc
test
sbb
test
dec
jmp
jnp
mul
xchg
ret
inc
dec
shll
jno
cmc
xor
out
cmp
aas
jl
dec
popf
stc
shlb
jp
mov
loopne
or
or
inc
ja
insb
daa
adc
and
fdecstp
arpl
nop
fldl
inc
inc
lea
hlt
jmp
decl
inc
imul
addl
sbb
cmp
test
add
inc
jp
adcl
hlt
movsl
hlt
cmp
jns
pushf
in
scas
sbb
sbbb
jmp
sti
or
in
outsb
dec
cmp
nop
jl
jb
fstl
or
test
add
ret
bound
dec
and
gs
out
push
roll
xor
adc
out
notb
jecxz
int
jne
aaa
ljmp
inc
cmp
push
adc
sub
push
loopne
fsubrl
aaa
in
add
addb
stos
daa
ret
fcoms
jno
imul
adc
and
ds
adc
jge
ljmp
cld
test
inc
or
lcall
inc
setnp
push
out
add
stos
sbb
je
movsl
jg
jbe
lea
scas
negb
mov
idivb
repz
lock
mov
cli
rclb
and
pop
clc
call
movsb
push
xchg
xchg
test
stos
flds
mov
xlat
jbe
mov
bound
ljmp
arpl
aaa
test
mov
int
jno
mov
adc
push
lods
xchg
or
and
push
push
push
cmp
adc
inc
mov
sbb
adc
mov
rcr
or
and
mov
sbb
aaa
jge
fmuls
sub
in
sahf
orb
mov
sub
push
dec
out
fistl
mov
sti
int
adc
aad
ljmp
pop
sub
sub
xchg
rcrl
jle
dec
push
xor
sbb
fiadds
mov
cmp
sahf
mov
xor
xchg
mov
inc
and
insb
stos
int3
pusha
roll
std
stc
clc
test
mov
lea
lcall
lds
sbb
pop
inc
roll
mov
aam
cmp
sub
pop
filds
xor
iret
jecxz
test
pop
popa
sbb
dec
adc
or
mov
jb
addl
out
lds
jmp
mov
adc
mov
xchg
mov
idivl
mov
push
dec
sbb
and
das
mov
sti
daa
pop
loope
pop
add
jle
gs
add
pop
jae
and
adc
cli
lock
scas
push
ret
pop
fsubrs
insl
mov
ljmp
mov
rcr
mov
aam
xchg
jle
jle
fistpll
out
dec
cli
push
cld
xlat
shrl
cmp
addr16
mov
popf
xchg
ret
sbb
or
jge
inc
inc
mov
add
jae
dec
rorb
in
ljmp
jle
test
push
rolb
dec
sub
int3
enter
and
add
push
inc
mov
lds
xorb
scas
test
lahf
mov
daa
pop
test
cltd
mov
push
push
push
cli
mov
fs
sbb
push
in
movl
push
js
jp
scas
outsl
inc
iret
aaa
aam
nop
subb
out
inc
pusha
mov
add
icebp
add
jno
cmp
xor
hlt
shll
inc
imul
lahf
sbb
lods
xor
das
test
out
mulb
pop
lret
jp
jl
pop
pop
xchg
dec
std
shrl
call
shl
insb
xchg
rorl
xor
push
ret
jns
xchg
mov
or
push
cli
test
xchg
sbb
sahf
addb
push
std
push
out
ja
mov
dec
int
scas
push
fs
int
mov
sub
cmpsl
adc
inc
cmp
out
mov
jmp
movsl
shrl
mov
lods
nop
cmp
xchg
fcomps
mov
std
aaa
ljmp
das
adc
xchg
std
pop
shrb
fildl
pop
shll
fisttps
mov
cmp
stos
jg
adc
add
lea
subl
popf
insb
jbe
fstps
mov
or
jle
movsb
or
icebp
xchg
or
mov
jne
or
outsl
jb
addr16
out
xchg
or
call
loop
push
repnz
scas
sub
sub
insl
push
sub
push
xor
fmuls
sbb
ficomps
imul
inc
fcos
shll
movsb
fimull
cmovl
lea
pushf
mov
daa
fstps
jecxz
cmp
int3
mov
pop
xchg
cmp
pop
adc
dec
sarb
call
mov
jp
inc
jns
scas
sarb
aam
lds
xchg
mov
lods
and
xor
aad
in
jg
shll
mov
outsl
and
push
out
insb
sbb
cmp
ret
int3
and
in
pop
loope
nop
sbb
or
push
mov
xor
in
je
cmc
inc
test
ret
lcall
mov
jg
mov
lret
and
cwtl
stos
sbbb
xchg
js
bound
sti
jp
shrl
and
test
inc
je
inc
loope
loopne
fistpl
int3
sub
and
and
aas
les
out
jg
in
mov
dec
jp
outsl
iret
dec
sti
rcrb
fimull
cmc
test
insl
or
int
jnp
add
shlb
loope
xor
loope
lret
fmul
jmp
pop
xabort
adc
cmp
inc
pop
fisubs
std
push
cmp
jo
push
jg
je
arpl
jle
in
pop
fidivrs
or
ret
push
andl
addb
jns
fwait
imull
pop
rcr
xlat
out
adc
std
cmp
out
lcall
sbb
adc
ficoml
gs
dec
fsubl
xor
push
dec
adc
sbb
dec
ljmp
pop
or
mov
add
scas
call
pop
sbb
mov
push
jns
jno
cmp
enter
ffree
pop
mov
sub
push
fstpl
add
mov
out
jecxz
popa
mov
repnz
push
shr
ja
and
inc
sbb
test
enter
sbb
pop
aam
imul
jns
jne
and
daa
and
shl
fsubrl
je
pusha
cmp
sbb
lret
test
mov
sub
dec
lahf
lcall
and
out
mov
int
aad
xor
sbb
xchg
mov
call
dec
jae
mov
aam
xchg
out
dec
jg
mov
lock
sbb
mov
dec
xchg
movsb
mov
mov
mov
adc
popf
add
sub
sbb
pop
movsb
xor
jmp
loopne
dec
rorl
repz
mov
mov
fsubl
pop
lret
mov
xchg
pop
jb
add
shl
inc
jmp
ret
fmul
mov
sahf
sbb
adc
sbb
jo
js
lahf
push
push
xor
lahf
iret
mov
sub
sbb
xor
stos
jne
sub
push
rcrb
sub
inc
sbb
sbb
jecxz
test
cmpb
add
pop
push
mov
xchg
cmp
or
ret
pop
mov
arpl
jecxz
mov
test
pop
xchg
sahf
push
rcr
cmp
aad
lahf
mov
mov
hlt
arpl
mov
jb
jno
adc
adc
add
das
out
sub
lods
rol
rcll
in
mov
xor
mov
sbb
out
shrl
pop
add
mov
clc
jp
jne
enter
aas
scas
subl
jae
push
xor
cmc
pop
xchg
stos
mov
dec
int
cwtl
mov
inc
ss
mov
shrd
call
and
adc
cli
add
insb
push
mov
outsb
arpl
pop
push
xchg
loopne
sub
pop
ljmp
and
cltd
repz
subl
mov
sbbl
lret
sbb
insb
mov
pop
xor
out
pop
fisubrl
dec
push
test
adc
pushw
mov
fwait
xor
lret
mov
push
dec
mov
pop
push
jbe
xor
dec
mov
cmc
hlt
imul
or
cmpsl
out
adc
sub
movsl
sbb
andl
mov
outsb
insl
rcl
ss
rcll
lcall
mov
sub
push
insl
mov
dec
fisttpll
lcall
lcall
fdivl
ja
icebp
sbbb
and
xlat
adc
cmp
and
jb
mov
enter
xchg
fisubs
arpl
aad
mov
rclb
inc
out
xchg
jb
jecxz
pop
adc
and
outsb
mov
dec
out
add
fiadds
push
push
cltd
loop
xchg
adc
lods
lds
xchg
sbb
jmp
sahf
mov
sub
lcall
xor
pop
aas
das
and
push
call
sti
mov
xchg
outsl
shrl
xor
xorl
repnz
add
stos
aaa
jae
and
test
and
out
cmp
xchg
inc
xchg
adc
jnp
or
xchg
lret
or
in
push
mov
xchg
xchg
sti
outsb
fs
mov
ljmp
mov
dec
inc
xor
push
xchg
addr16
adc
leave
in
jno
lds
iret
push
xchg
gs
add
xchg
sub
out
push
mov
push
xor
xor
ficoml
xor
sbb
sub
test
pop
mov
fdivl
and
xor
adc
mov
adc
jecxz
mov
add
outsb
mov
sbb
jbe
movsl
popa
pop
rclb
jno
aad
lods
push
sbb
inc
pop
mov
data16
mov
pop
test
xor
or
outsl
sbb
inc
add
dec
pop
push
fwait
pop
test
adc
mov
and
mov
and
mov
cmp
dec
rcrl
fldl2e
and
int3
xor
mov
jle
leave
sbb
jo
in
xchg
mov
jecxz
jno
popf
pop
aas
jb
aas
push
addr16
mov
jmp
pop
xchg
sub
pop
rclb
es
or
loop
mov
aaa
mov
jb
push
mov
out
pop
mov
mov
sub
jbe
test
and
mov
in
out
fisubrl
popa
push
loop
pop
dec
fwait
fs
clc
sub
je
mov
dec
arpl
test
xchg
and
repz
movsb
cwtl
js
ret
pop
ss
or
into
enter
xor
lahf
mov
sbb
mov
xor
mov
push
imul
push
loope
adc
mov
cli
sti
xor
ret
addr16
mov
mov
xor
or
push
divb
pusha
add
push
pop
pop
sub
dec
mov
mov
push
mov
dec
fnsave
mov
cwtl
or
cmp
inc
ds
cmp
lret
push
in
test
push
jle
enter
push
lock
outsb
gs
sub
pop
fists
fists
push
inc
mov
arpl
jns
mov
sti
les
mov
stos
test
fnstsw
xorl
ljmp
mov
cwtl
jo
jecxz
outsb
and
ds
mov
ljmp
mov
movb
aad
jge
mov
mov
ret
mov
enter
aaa
mov
sbb
hlt
push
sub
add
outsl
pusha
bound
adc
push
cmp
stc
jp
inc
cwtl
cmc
push
sbb
daa
mov
push
out
hlt
int
pop
div
jbe
cwtl
testl
sbb
and
in
in
add
sub
push
add
lcall
add
ds
icebp
mov
aaa
dec
jmp
sti
add
sub
jo
in
and
xchg
scas
inc
loopne
andb
xor
push
fsubrl
and
iret
or
xor
js
dec
ret
fsubrs
add
inc
pop
or
pop
push
pop
lock
fstl
ss
test
out
loopne
lcall
jno
sub
mov
sub
movnti
jnp
inc
lahf
pop
push
aas
mov
and
sti
addb
lds
outsl
loope
pop
adc
and
shl
or
mov
add
or
mov
lds
repnz
adc
fildl
mov
xor
sahf
pop
sub
push
lcall
lretw
aam
jle
sub
pop
sbb
push
cmp
leave
rcrl
in
jae
mov
push
xor
and
push
dec
jb
or
or
dec
mov
mov
sbb
test
pop
bound
xor
pop
push
dec
mov
call
scas
add
sub
in
adc
test
sbb
sbb
popa
mov
in
mov
xor
fldcw
cs
adc
aam
and
adc
das
sub
pushf
push
cmpsb
sarl
dec
lcall
mov
aas
and
xor
or
lahf
lret
ss
les
cli
inc
fldl
mov
mov
and
cmp
out
jbe
idiv
pop
sbb
frstor
shlb
inc
and
sbb
fiaddl
xor
insl
out
int
scas
aam
cmpsl
mov
adc
cmpsb
jg
mov
cmp
iret
jl
data16
jg
pop
cltd
inc
loopne
orb
or
ds
xor
lods
push
std
and
mov
and
int3
fs
popa
push
icebp
inc
cld
cmp
jl
fidivs
xchg
out
push
xor
out
pusha
in
sub
int
sbb
push
fimuls
std
push
cs
mov
jp
push
sub
cli
adc
shrl
cmp
addb
scas
in
hlt
push
addr16
ret
and
stc
pop
pop
jl
mov
fisubrl
adc
subl
or
push
or
dec
sbb
mov
cwtl
mov
popa
inc
fmul
addl
loopne
pop
pusha
jp
and
out
out
dec
pop
es
dec
sbb
cmp
lret
fwait
adc
es
adc
hlt
lock
pop
adc
inc
out
mov
jmp
xor
loop
jb
cmpsl
bound
sub
add
adc
subb
lcall
aad
mov
enter
lret
mov
xor
int3
pushf
mov
mov
in
mov
push
push
insl
popf
into
mov
xlat
sub
xchg
or
into
imulb
loop
out
push
popf
inc
popa
adc
mov
jl
push
jmp
loop
fnstenv
les
and
cltd
outsb
rclb
add
xchg
daa
push
xchg
fcmovbe
push
rcrl
mov
dec
scas
lret
ljmp
dec
add
in
cmp
sbb
jg
fbld
sub
sub
xchg
cs
sub
dec
dec
push
or
fistpll
xchg
fbld
inc
fcoms
jg
leave
lahf
mov
loopne
into
scas
lret
sub
jnp
or
jg
push
push
lahf
sbb
pop
bound
mov
push
cmc
movsb
mov
popf
mov
xor
dec
jbe
fcmovne
adc
ret
repnz
out
hlt
pop
outsb
cmpsl
ja
xor
fimuls
addb
hlt
das
aas
pushf
and
fidivrl
rclb
push
lcall
scas
pusha
leave
aad
jno
pop
sub
popf
add
mov
push
inc
scas
adc
roll
int3
es
movsb
add
das
dec
push
test
pop
push
stos
je
mov
mov
fwait
mov
cltd
lahf
cmpsl
jle
cmpsl
int
or
addr16
push
cmp
cmp
addr16
adc
and
push
lods
xor
add
mov
stos
pushf
sbb
push
jae
ret
jns
outsb
push
pushf
jle
jne
adc
mov
push
xor
fwait
lret
call
jne
mov
inc
sahf
rol
out
mov
dec
xchg
inc
scas
ss
enter
jb
aaa
in
mov
popa
or
xchg
push
push
add
test
xorb
push
jno
pop
xchg
clc
addb
iret
fwait
pop
xor
negl
xchg
aad
adc
sti
xchg
add
out
fidivrl
je
aad
mov
cmp
sbb
inc
insb
xor
pavgw
clc
sbb
aaa
sbb
mov
dec
add
adcb
and
ja
call
aam
jge
xor
sbb
xchg
dec
fidivs
repz
test
sub
cmp
pusha
fidivl
js,pt
stos
adc
or
fnstsw
enter
pop
adc
push
jne
lds
int3
jae
pop
jbe
and
test
jmp
aaa
cmp
push
pop
mov
int3
fstps
jns
xor
mov
jnp
cmp
push
popa
in
add
sub
and
scas
and
bound
push
sub
sub
xor
aad
fistps
addl
out
mov
mov
cmp
xor
mov
dec
lock
adc
dec
jb
fsubr
lcall
push
shll
pop
movsl
lea
lods
inc
mov
cmp
negb
call
jp
sub
icebp
mov
push
and
pop
gs
or
xor
lahf
pop
in
pop
shl
test
ljmp
std
dec
xrelease
loope
or
out
fsts
adc
lock
mov
repnz
xchg
stos
dec
cmp
sbb
cmpsl
cli
out
and
cmp
into
sbb
ds
ret
repnz
ja
cmp
pop
in
mov
lds
fstpt
lds
mov
add
lods
xchg
out
bound
int
add
vmwrite
arpl
lahf
and
mov
sbb
adc
jg
adc
cld
sub
cmp
aam
dec
cmp
mov
mov
inc
mov
jecxz
ja
add
pop
sub
push
and
aaa
mov
outsl
jnp
into
test
or
ret
scas
mov
jge
push
inc
sub
xor
insb
or
push
cmpsb
lcall
add
push
mov
lahf
inc
cwtl
dec
and
je
pop
rcll
aas
pop
jbe
ljmp
movsb
or
cld
andb
cmc
fistpll
dec
mov
pop
fdivr
mov
pop
sbb
sbb
push
rcrl
add
sbb
mov
flds
pop
fcmovb
pushf
loope
rolb
sbb
xor
enter
and
jne
mov
sub
aas
xor
pop
push
cmp
out
shlb
ficomps
jmp
cld
sbb
push
push
rcll
inc
xor
cmpsb
test
push
test
mov
sbb
je
mov
jno
fs
into
mov
jmp
ljmp
mov
xchg
cwtl
in
cmpl
sti
cli
loopne
sub
cwtl
or
pop
inc
int
mov
xor
inc
add
clc
xor
xchg
jo
sub
js
int3
insb
les
lds
imul
xchg
xchg
xchg
dec
push
sub
push
xchg
or
mov
push
and
stos
mov
divl
sbb
sub
in
xchg
mov
loopne
mov
push
push
xor
pop
sti
add
outsb
rcr
cmc
imul
adc
mov
data16
rcrb
adc
fidivrl
sub
sahf
ljmp
add
pop
scas
cmc
mul
into
add
btl
sub
mov
pushf
test
lret
pop
sahf
add
xchg
sub
xchg
add
cmp
outsb
add
xor
cmpsl
addr16
sbb
jg
test
jg
jnp
hlt
dec
sub
shrl
mov
aaa
lds
xor
pop
call
xor
add
push
adc
cmp
adc
cmpb
and
mov
call
add
push
enter
ja
mov
leave
popf
gs
pop
sbb
inc
mov
in
push
or
les
fstpl
xor
or
je
dec
lret
pop
test
not
cmp
pop
gs
outsl
inc
gs
or
cwtl
pop
movsl
or
flds
fsubp
pop
and
inc
outsb
xchg
movsl
mov
into
inc
ret
mov
adc
adc
jmp
rorb
cli
ret
nop
xor
inc
push
stos
mov
pop
popa
xlat
clc
jb
and
xchg
es
test
fistl
pop
cmp
mov
imul
int
push
sub
repnz
clc
in
stc
fwait
mov
mov
inc
xchg
lds
pop
in
aas
or
adc
aaa
cmp
dec
mov
dec
xor
inc
adc
inc
cltd
push
fstl
sbb
lea
push
inc
lcall
repnz
test
mov
or
clc
out
or
sahf
xorb
lcall
divb
sbb
dec
xchg
inc
mov
xchg
in
addr16
in
push
xchg
sub
ret
cli
inc
ret
negb
lret
fmul
ljmp
push
dec
pop
dec
add
jae
fisubrl
into
push
sbb
push
push
das
mov
fisubs
sbb
test
and
jo
or
mov
js
jne
sub
adc
mov
vpand
xor
mov
subl
in
and
fldenv
out
imul
movsl
mov
je
outsb
push
pop
sbb
arpl
mov
inc
mov
imul
push
xchg
or
jb
test
rorb
out
in
loope
jle
xchg
xchg
sub
insb
leave
mov
pop
fcom
pop
sbb
sti
imul
js
adc
adc
inc
and
or
dec
push
ds
jge
or
add
inc
cmp
hlt
out
int3
es
lock
leave
inc
scas
adcb
fdivl
jb
push
xchg
pop
stos
or
inc
jnp
aaa
jl
cmpsl
iret
imul
cmpsb
or
imul
scas
mov
pop
dec
outsb
pusha
popa
push
ret
fisubrl
push
lcall
xor
mov
adc
inc
pushf
mov
push
sub
mov
lods
je
imul
daa
jno
loopne
adc
movsb
inc
leave
push
lods
imul
data16
std
inc
enter
mov
aas
pop
xchg
shlb
js
test
pop
in
inc
mov
cwtl
lea
jo
pop
jl
cmc
fbstp
sti
inc
mov
repnz
pop
inc
xchg
mov
data16
mov
push
fmull
out
mov
cmpsb
dec
into
mov
sub
enter
cmp
jl
jno
dec
and
adc
fimull
cs
in
dec
mov
repnz
rol
jmp
mov
mov
fimuls
or
adc
andb
rorb
mov
inc
sti
aaa
pop
imul
ljmp
or
sub
add
ds
out
insb
insl
pop
add
or
dec
sbb
in
and
notb
mov
mov
inc
rclb
cmpsl
sbb
loop
mov
xchg
sbbb
cli
lock
lods
test
stc
aas
outsl
mov
shl
fwait
rcll
push
lds
or
mov
mov
cltd
add
fstpt
dec
lahf
lret
pop
mov
out
or
xchg
and
and
mov
enter
or
mov
dec
inc
mov
fcoml
add
mov
add
cmp
aaa
dec
jl
or
add
push
das
aad
loop
and
mov
lret
in
into
cwtl
cmpb
scas
mov
imul
pushf
adc
cmp
jae
fisttps
and
push
imulb
sub
repz
loopne
pop
fildll
icebp
call
fidivs
ficoml
mov
lods
and
and
mov
xchg
out
das
jnp
inc
dec
cmp
add
fistpll
scas
push
cmp
adc
call
mov
js
mov
xchg
mov
ret
pop
pop
arpl
or
pusha
xchg
mov
repnz
mov
insb
and
xor
into
cmpsb
sbb
jb
push
jp
lret
push
jne
and
push
cmc
mov
inc
dec
push
xchg
xchg
aas
jae
js
icebp
loope
xchg
adc
lea
lea
xor
add
sbb
jo
cs
push
clc
sbb
mov
movsb
sub
cltd
xor
out
lcall
in
out
sub
inc
adc
repz
ror
dec
sub
push
rol
jmp
xchg
rcrl
cmpsb
mov
lahf
and
adc
dec
outsb
ret
add
jmp
xor
sbb
mov
mov
pop
jge
sarb
movsl
outsb
cmp
sbb
or
xchg
insl
and
and
jne
adc
jnp
lahf
push
daa
xchg
fdivs
xor
or
jp
ds
pushf
push
add
in
movsl
idivb
push
jmp
cmc
xchg
mov
loope
insb
sub
bound
icebp
xchg
pop
cmc
mov
cmp
mov
push
mov
xor
cmp
mov
vcomiss
leave
add
cmp
data16
call
loopne
dec
aaa
jmp
andl
pop
pop
cmc
insl
mov
jo
add
sbb
ljmp
and
mov
mov
lock
push
mov
jecxz
movsl
xchg
nop
out
std
adc
pusha
popf
fdivrp
std
dec
lock
and
adc
call
mov
imul
arpl
sub
pop
mov
jmp
mov
inc
leave
out
lret
loopne
stos
call
jl
jne
push
jmp
add
push
sub
ret
mov
sbb
lahf
int
cltd
aas
in
inc
inc
xlat
dec
jmp
aaa
jo
lds
rcrl
fucomip
jmp
pusha
add
mov
push
xchg
or
mov
mov
test
lea
test
jecxz
leave
stos
add
jmp
and
fstps
repnz
in
pop
mov
pop
jbe
lret
pop
and
test
enter
inc
mov
adc
xchg
adc
shll
or
adc
cld
or
insl
inc
inc
popa
aad
out
xchg
dec
mov
pop
nop
jnp
or
adc
fs
xlat
or
pop
dec
sub
scas
push
out
inc
daa
mov
in
xchg
push
mov
dec
cmp
pusha
sub
lahf
data16
mov
enter
inc
pop
xchg
mov
pop
pusha
sbb
clc
pop
xor
sbb
frstor
add
mov
add
jecxz
xchg
xor
mov
sub
xchg
or
sti
cmc
ret
outsl
jno
mov
sbb
adc
test
outsl
mov
and
rorb
enter
xor
adc
inc
movsl
dec
sub
jns
or
mov
shll
imull
mov
lods
loope
sub
or
divb
xlat
into
stc
flds
mov
cmpsb
lahf
mov
popa
pop
jne
fwait
int3
xchg
scas
inc
mov
fsubs
nop
call
push
lods
pop
addr16
leave
push
mov
lods
andb
ror
divl
mov
in
sarb
aas
cld
shl
or
xchg
and
ret
adc
aas
jns
int
push
adc
adc
hlt
addr16
inc
imul
cmpsl
xor
lods
xchg
cmp
fists
scas
fisubl
cpuid
add
mov
test
add
fcomip
ror
fisttpl
nop
and
arpl
jno
adc
cmpsl
push
test
adc
inc
mov
cmc
dec
inc
test
popa
testl
cmp
js
dec
jb
gs
and
pop
scas
loope
xchg
adc
lods
push
insl
mov
inc
adc
mov
mov
dec
pop
scas
add
gs
jae
add
sub
mov
xchg
fwait
lahf
aaa
add
adc
out
xchg
add
push
mov
inc
and
imul
pop
ret
fisubrs
sub
test
xchg
sahf
bound
or
sub
in
jno
movsb
scas
cmpsl
lods
ljmp
cmp
into
fstpt
outsb
jl
in
test
aaa
lock
add
and
lahf
je
filds
jae
lea
std
mov
xor
inc
dec
hlt
call
mov
int
xor
cltd
jmp
mov
adc
mov
icebp
lods
je
inc
mov
sbb
mov
stos
fwait
cmp
and
cwtl
mov
dec
lock
pusha
rolb
xorps
ljmp
pop
mov
jle
mov
in
dec
add
and
fistl
cs
sbb
or
outsb
lret
in
ret
daa
fwait
mov
lods
iret
mov
dec
push
fistl
push
fwait
cmpsb
in
mov
movsl
loope
push
lret
jnp
pop
inc
adcb
rcrl
imulb
sbb
sbb
pop
mov
loopne
imul
dec
mov
cmp
mov
jecxz
mov
pop
div
in
cmp
add
pop
sub
fdivrl
scas
jecxz
dec
fisttpl
push
jg
push
xchg
pop
addb
pop
and
sub
mov
outsb
and
and
push
test
inc
adc
add
and
out
test
jp
stos
in
cmpsl
xor
mov
stc
popf
push
xchg
and
mov
imulb
cmp
cmpsb
mov
pusha
inc
orl
scas
jne
jl
sbb
add
enter
gs
enter
dec
push
jae
cltd
neg
pushf
rorl
mov
lret
adc
jl
divb
xor
das
pushf
xchg
mov
mov
xchg
movsl
icebp
mov
jp
cmp
and
mov
outsl
outsl
mov
inc
rcrb
sbb
daa
jg
xlat
mov
and
mov
adc
cmp
lods
add
imul
mov
fiadds
mov
decl
mov
sbb
loope
sub
xchg
lods
je
push
out
pop
test
and
in
sbb
cltd
cwtl
dec
xor
loop
jne
cmc
push
push
mov
adc
jl
scas
mov
push
push
je
ss
push
insb
add
mov
pop
jmp
aam
paddsw
xchg
jecxz
xchg
not
sub
shl
mov
cmp
fists
push
sub
cmp
push
jns
push
xchg
aad
sbb
push
xor
arpl
or
mov
pop
outsb
or
push
or
or
cwtl
stc
or
fcomip
arpl
pop
mov
mov
add
mov
mov
push
insl
inc
sbb
rcrl
mov
testb
bound
movsb
int3
sahf
jge
cmp
fdivs
xchg
outsb
jb
fisubl
int
sub
adc
xor
sbb
bound
and
and
enter
hlt
inc
jae
mov
aaa
cld
fs
cmpsb
jae
mull
test
lahf
xor
mov
loope
dec
push
mov
fwait
push
xor
add
scas
popf
in
and
out
fmull
mov
push
or
mov
sub
add
pop
pop
bound
cmp
clc
inc
rclb
and
pusha
into
adc
cmc
in
cs
mov
cltd
les
leave
fs
cwtl
je
mov
roll
in
test
mov
sub
cmpb
int3
test
fadds
add
mov
sub
lret
std
add
ja
push
jge
mov
pop
stc
adc
mov
scas
add
inc
pop
push
fwait
xor
jns
mov
pop
cmp
xchg
mov
cmp
push
mov
jae
js
movsl
pop
gs
das
insb
push
and
negl
mov
ja
cmp
push
aas
jns
adc
clc
mov
ds
or
xor
insb
stc
and
shlb
jb
ret
push
sub
into
cs
jno
fdivrs
ljmp
push
adc
loope
ljmp
ss
inc
sahf
mov
sbb
lods
push
movsb
into
aam
test
jle
sub
dec
rcrl
push
cmc
fucomp
sub
mov
xor
xchg
negl
add
dec
ljmp
cmp
je
push
icebp
mov
mov
cmpsb
loop
gs
cwtl
cmpsb
test
mov
xchg
fdiv
dec
movsl
mov
daa
dec
mov
sub
inc
jl
pop
dec
sbb
sub
imul
or
in
mov
sarb
jns
mov
inc
stos
pop
dec
mov
insb
cli
jle
movsb
inc
jecxz
dec
jmp
push
sbb
cmp
xor
or
and
pop
cmpsb
je
push
int
xchg
push
push
aam
inc
pop
cmp
aas
int3
mov
cmpsb
add
jmp
add
sub
jns
mull
mov
test
cmp
test
andb
popa
negl
idivl
sub
dec
rol
mov
sti
call
repnz
out
arpl
std
cmpsl
cmp
jno
iret
xchg
jmp
pop
in
inc
inc
int3
gs
mov
test
or
mov
adc
adc
cs
stc
test
rcrb
and
lret
push
fildll
and
fs
test
insb
cmpsl
dec
push
std
inc
sub
imul
push
mov
sbb
add
inc
inc
mov
mov
out
add
lahf
xor
rolb
sbb
cmp
fs
push
push
lret
and
loope
mov
js
mov
and
xor
mov
cmpsl
cmp
jp
mov
cmpsb
xor
pop
int
adc
fsubs
mov
testb
mov
add
pusha
or
loopne
mov
int3
outsb
jnp
add
fcomps
mov
in
xor
out
movsl
or
sbb
fildl
jge
mov
imul
lret
xchg
test
pusha
push
outsb
lods
push
les
sub
orl
icebp
dec
rcll
bswap
das
sarb
and
add
dec
test
push
sbb
push
aam
ss
jb
repnz
xorps
ljmp
xor
xchg
cmp
in
adcb
push
or
adc
in
mov
rcll
fwait
push
push
sbb
push
pop
push
push
nop
pop
jecxz
mov
sub
imul
mov
xchg
xor
lods
lock
in
cmp
mov
mov
notl
gs
sub
in
lret
cmc
adcl
popa
add
repz
jge
pusha
dec
push
mov
lods
into
insl
xor
xorl
sub
push
and
dec
test
fs
mov
imul
out
cmpsl
push
mov
cmc
movsb
jnp
jno
js
dec
rolb
cmp
add
rolb
shl
mov
sbb
loopne
mov
inc
ss
sbb
xor
les
or
mov
pop
mov
or
inc
cmp
jno
lods
dec
lret
sbb
jb
test
pop
push
mov
mov
mov
std
in
pop
dec
cmc
ds
movsl
pushf
rcl
mov
fwait
xchg
mov
sbb
icebp
mov
push
xor
jb
xor
clc
cmp
rcrb
mov
or
movsb
add
scas
in
lahf
inc
cmc
cmpb
inc
and
inc
add
andl
cld
xchg
dec
lock
inc
mov
insb
aaa
mov
iret
and
cmp
or
mov
push
nop
sub
adc
aas
mov
cmc
adc
jno
ret
jmp
or
cltd
xor
imul
xor
pushf
inc
lods
shrl
ss
xor
jnp
xlat
testl
pop
xor
lret
cmp
jg
bound
adc
stos
fcoms
sbb
push
dec
shrl
hlt
sbb
xchg
sbbb
testb
pop
pop
inc
test
xchg
inc
addb
test
xchg
aam
adc
rcr
roll
rcl
mov
mov
and
push
cmp
push
fimuls
or
loopne
mov
insl
xchg
mov
push
pop
das
sub
lret
dec
mov
sbb
cmpsb
xchg
xchg
mov
pop
xchg
jle
in
push
jbe
addr16
icebp
inc
and
out
jne
xchg
enter
bound
aad
or
cmp
std
lods
frstor
xchg
sub
and
nop
inc
lret
and
fdivrs
ds
dec
push
pop
mov
mov
and
call
out
lock
jo
adc
push
clc
xchg
jbe
xchg
imul
xor
push
jg
cmp
int3
push
test
dec
mov
jp
sbb
mov
pop
push
sti
pop
add
lcall
subl
orb
push
push
add
daa
clc
test
mov
nop
jg
out
insl
ljmp
sbb
xor
fstl
mov
stos
call
aas
xchg
loopne
mov
lds
das
lret
divb
mov
xlat
cmpsl
xchg
mov
adc
push
subb
jp
shrl
xchg
int
or
cmp
popf
adc
and
dec
jno
cmc
and
rorl
xchg
movsb
cmp
shrb
shrl
push
add
pushf
hlt
mov
or
jnp
pop
out
push
addr16
xorb
fdivl
xchg
sbb
xchg
adc
arpl
sub
jle
mov
xor
jb
jns
lcall
mov
jge
out
jmp
adcb
in
pushl
ret
into
into
dec
insl
or
jbe
xlat
inc
sbb
aaa
sub
inc
mov
jmp
xchg
push
xor
jb
mov
jb
add
push
sub
and
or
xor
adc
fimull
push
sub
scas
ds
stc
das
scas
or
sbb
out
dec
jle
mov
rcrl
out
outsl
fnsave
dec
sub
dec
xor
aad
sub
and
leave
sub
out
mov
dec
jne
xchg
imul
mov
xor
xorl
and
lea
jbe
lcall
adc
aad
das
fiadds
sbb
xchg
iret
mov
stos
pusha
inc
xchg
fsubl
dec
cmp
xchg
imul
xor
jb
mov
push
pusha
xor
mov
daa
mov
inc
sbb
sbb
mov
neg
out
jnp
and
ss
imul
adc
adc
pusha
cli
sub
mov
or
fmuls
jg
leave
arpl
jle
xchg
mov
jae
ret
add
out
int3
fisttpll
or
sbb
ja
insb
push
lds
fdivs
jae
repnz
pusha
outsb
jno
pop
mov
lods
mov
dec
adc
push
les
dec
je
in
mov
fstl
rcll
sbb
addr16
roll
decb
jae
pop
in
idivb
mov
xchg
cs
xor
lds
mov
loopne
pop
mov
lock
ss
enter
mov
jns
push
jg
hlt
sbb
mov
mov
imul
ja
pop
pop
in
notb
fs
and
mov
popa
stos
test
jle
into
pusha
cmp
inc
imul
andb
jnp
and
adc
sbbb
insb
subb
imul
adc
xchg
out
jecxz
je
aam
inc
sti
pop
xchg
or
lock
loopne
sub
incl
push
scas
popa
cwtl
fs
jl
fsubr
sahf
dec
mov
dec
call
push
push
pushf
add
cmpl
sub
adc
mov
inc
icebp
sbb
daa
dec
pushw
dec
and
mov
fdivs
stc
in
xor
xlat
std
sahf
add
enter
imul
push
fisubs
dec
push
sbb
xchg
jecxz
inc
mov
mov
shr
push
push
xchg
in
cmc
xchg
and
incl
loope
xchg
sbb
mov
mov
jl
mov
adc
xor
push
pushf
cmp
je
push
sahf
test
loope
push
pop
mov
jne
mov
icebp
lock
repnz
dec
jg
sahf
aaa
sub
fstpl
cwtl
js
int3
repnz
outsb
mov
daa
out
fwait
clc
adc
movsb
jmp
sub
mov
and
pop
dec
cwtl
lock
sub
sub
sub
mov
and
pop
push
inc
cmp
mov
aam
sub
adc
add
and
mov
loopne
test
inc
stos
pushl
popf
fwait
pop
mov
mov
mov
xchg
jae
jl
ret
mov
cmp
icebp
je
adc
cmc
xor
jmp
popa
pushf
mov
sbb
xchg
xchg
jle
aad
shlb
les
jecxz,pn
push
and
xor
and
icebp
add
ja
popa
call
add
jae
orl
lods
mov
inc
mov
andl
pop
cltd
insl
fcmovnu
in
cmp
js
pop
sbb
mov
fs
call
loop
aas
cmp
iret
jmp
dec
inc
sbb
and
cmp
xor
addb
jmp
out
mov
insb
jbe
lret
and
sub
ret
aam
push
rcrl
stc
popf
pusha
adc
clc
push
mov
mov
dec
dec
mov
int
sahf
addr16
xor
jge
insl
sub
mov
inc
notl
xchg
ret
add
test
popf
roll
push
cli
in
mov
and
xchg
stos
xor
mov
xchg
dec
in
cs
roll
add
lods
movsb
test
fdivr
mov
inc
rcl
ret
stos
jecxz
and
xchg
mov
xchg
xor
arpl
pop
roll
or
orl
push
sbb
jle
or
arpl
rolb
xchg
mov
shlb
enter
cmpsb
mov
rcrl
xor
ljmp
or
iret
xchg
mov
cmp
rorb
int
jmp
push
ret
mov
adcl
rorl
ja
aad
pop
adc
repz
ja
dec
pusha
pop
pushf
cmp
and
jle
xchg
push
dec
mov
sbb
push
pop
lahf
inc
stc
fwait
push
mov
cltd
rcrl
outsl
cmp
jo
dec
iret
das
mov
or
jg
out
xor
or
pushf
enter
pop
mov
add
jae
out
sti
cmp
lret
call
sbb
sub
lods
xorb
add
loope
sbb
jbe
sub
xor
arpl
xchg
push
push
mov
xchg
xor
cmp
sub
mov
les
xlat
lcall
int
jbe
popf
pop
repz
clc
jp
daa
cwtl
push
push
xchg
pop
mov
mov
add
sub
nop
mov
add
inc
js
fmul
xchg
xor
sbb
into
adc
stc
push
sub
cld
mov
cmpsb
sti
pop
aam
sbb
and
call
push
cmp
mov
xor
or
dec
shrl
fucomi
adc
ret
lds
dec
lahf
jecxz
xor
leave
dec
in
sub
out
mov
enter
xchg
not
xchg
cs
movl
push
pushf
jg
adc
push
cwtl
call
iret
mov
cmc
lea
aad
ljmp
fs
add
add
jge
sub
outsb
in
dec
mov
scas
popa
cmp
adc
mov
or
mov
push
repz
movsl
jns
add
jge
popf
jmp
addr16
cmp
add
bound
sub
mov
fisubrl
cld
xchg
mov
pusha
in
or
or
xchg
push
dec
mov
sub
test
sarb
adc
lock
in
cmp
je
scas
lret
xor
ss
xchg
inc
cmp
pusha
mov
sub
ret
out
sub
pushf
mov
mov
mov
dec
nop
cmpsb
js
jns
in
cwtl
in
insl
aas
and
test
imul
mov
je
pop
cld
mov
sub
arpl
aas
scas
mov
leave
lock
test
mov
call
xorb
mov
iret
mov
popa
mov
lods
add
or
mov
mov
ficompl
xor
hlt
pop
loope
leave
push
insl
mov
inc
or
loopne
sbb
movsb
lods
push
sub
xor
cmp
mov
cs
jmp
aas
mov
movsl
iret
or
stos
mov
xchg
andb
dec
clc
jae
and
and
in
dec
lock
filds
clc
push
mov
stc
aad
sbb
dec
fsubp
pop
mov
scas
andl
test
and
jno
and
sub
aad
jb,pt
outsl
stos
dec
fs
inc
xor
add
into
je
pop
repnz
pushf
inc
stc
bound
mov
push
ret
insb
das
aas
add
mov
les
sub
daa
mov
xor
push
mov
gs
test
ljmp
pushf
xor
push
add
out
pop
mov
push
xor
cmc
ficoms
xor
dec
push
flds
outsl
icebp
cmp
jmp
add
test
adc
jb
lods
mov
shll
jns
mov
imul
jl
and
inc
bound
scas
rcll
jle
or
pop
mov
cmc
sbb
aad
test
and
cli
aaa
rol
les
lea
jmp
add
stos
xchg
enter
push
and
popf
in
hlt
mov
sti
adc
outsl
rclb
xchg
xor
and
mov
mov
test
sahf
cmp
test
push
pop
adc
push
jg
and
sbb
adc
xchg
call
mov
leave
lock
aas
cmpsl
fistpll
int3
mov
js
stos
cld
lret
rep
jae
xor
adc
fnsave
cltd
or
mov
decb
inc
jno
jmp
xor
sarl
jb
adc
call
or
or
das
lods
fsubrs
cltd
mov
pop
jmp
sub
movsl
leave
repz
lock
loopne
fidivl
sbb
imul
stos
pop
cltd
in
fsubs
subb
lret
cmp
aad
push
xchg
leave
or
mov
add
in
jp
popa
jns
add
push
test
rorb
jl
pop
mov
dec
pop
jno
xor
cs
adc
sbb
pop
ror
cmc
mov
ret
repz
fstps
push
imul
pop
js
push
fcmovb
jmp
jnp
das
and
insb
movsl
aas
push
dec
jp
xchg
jo
jne
clc
jne
scas
push
add
adc
repz
loop
jno
out
in
out
mov
dec
rol
inc
adc
mov
fldt
adc
sbb
push
jo
mov
and
mov
push
cmc
mov
mov
jno
in
xor
lods
fs
movsl
jge
leave
ss
jp
xchg
pop
sbb
fimull
icebp
xor
ss
jp
jg
js
ret
and
push
jle
fstl
sub
fnstenv
adc
inc
xor
enter
fisubs
mov
stos
mov
sbb
or
adc
pop
jecxz
inc
aad
jp
cltd
fwait
outsb
insl
rcrb
js
fldenv
cs
jb
lds
insb
or
xor
test
stc
jns
std
sahf
cmp
mov
mov
imul
fistps
div
and
sbb
jns
ds
adcl
xchg
inc
lock
sub
imul
aas
mov
add
stc
adc
ljmp
mov
cmp
sub
adc
or
out
enter
ljmp
xchg
mov
in
sub
test
sub
jno
xor
jle
mov
mov
adc
lret
test
mull
jmp
ret
sbb
cltd
push
xchg
dec
inc
xor
or
or
sub
into
shl
or
push
push
inc
dec
sub
cwtl
push
stos
or
add
jno
loop
jge
push
dec
and
cmpsl
adc
js
push
std
and
loopne
sub
loopne
or
bound
rcrl
adc
pop
ja
lcallw
or
sbb
inc
xchg
fsubrs
inc
negl
scas
adc
adc
pop
icebp
add
push
pop
stc
stos
std
adcl
xchg
push
push
xor
pop
shr
mov
jnp
add
jmp
push
push
dec
push
pop
or
arpl
fnsave
lods
shlb
pop
stos
mov
es
mov
popf
fcomip
adc
fnstsw
dec
adcb
addb
mov
adcb
fdivp
cmpsb
rolb
stos
loope
es
pop
movsl
dec
sub
ret
sub
orb
and
pop
in
or
lahf
mull
aam
rcrb
mov
fcmovne
in
mov
sub
jbe
setp
adc
cmp
and
movsl
test
pushf
push
lock
inc
cmp
test
mov
stc
fwait
push
push
cmp
cmp
stos
push
pushf
and
lret
pop
ret
cmc
jne
jnp
jnp
in
sub
sbb
in
imul
notl
mov
outsl
jle
xlat
inc
adc
fsubr
cmp
xchg
inc
pushf
bound
fcmovnu
push
movl
shll
sub
aaa
in
fsts
ljmp
mov
into
adc
cmc
and
rcr
cmp
nop
and
jle
xchg
pop
dec
fistps
mov
jnp
rorl
daa
mov
lods
stc
lea
imul
push
fistpll
out
ficoml
in
ljmp
data16
sbb
into
es
mov
xchg
cmpsb
sbb
in
xchg
pop
sbb
push
sbb
xor
add
mov
pop
xor
in
inc
inc
mov
cmp
imull
insb
mov
icebp
jns
or
inc
and
xor
out
xor
scas
add
inc
stos
aaa
int
jne
fnstcw
and
fs
xchg
outsl
clc
jecxz
ficoms
loope
xor
ret
repnz
jno
inc
mov
jne
mov
dec
mov
mov
mov
ja
mov
testl
mov
mov
xlat
inc
cmpsl
sub
fstpl
iret
cmp
pushf
dec
sbb
adc
lret
push
xlat
in
mov
int
xchg
fadds
inc
xchg
pop
push
in
add
add
pop
xchg
mov
loope
mov
adc
lds
pushf
jno
filds
lock
add
adc
dec
das
push
mov
lea
mov
leave
cmp
outsl
dec
je
lret
les
cli
pop
add
sbb
aad
add
popa
xchg
and
cmc
aad
clc
dec
andb
je
icebp
jp
in
push
test
cltd
and
jo
pop
xchg
dec
jp
inc
sbb
push
mov
sub
xchg
outsl
add
dec
das
mov
inc
imul
dec
xchg
fidivl
in
mov
fisttps
pop
mov
ret
dec
or
add
cmp
cmp
ficoml
rcrb
adc
fwait
adc
pop
shr
call
push
shlb
stos
leave
lahf
cli
pop
rolb
mov
mov
stos
xchg
push
fistpll
sbb
movsl
mov
pop
mov
push
das
push
les
sbb
fisttps
in
int
in
lds
mov
addr16
mov
sub
call
ret
push
or
sbb
aas
movsl
inc
mov
sbb
out
ret
mov
or
pop
aas
dec
xchg
arpl
bnd
jbe
dec
push
lds
daa
cs
repz
cmpsl
xchg
lcall
shlb
ja
shlb
xlat
pop
jg
jns
shlb
xor
xchg
outsl
xchg
jns
in
add
inc
comiss
mov
mov
mov
sahf
xchg
rol
insb
repnz
gs
mov
cmp
rcrl
mov
scas
adc
cmc
mov
jl
xor
pop
in
bound
cwtl
cs
test
hlt
std
mov
lcall
push
stc
stc
aam
inc
pop
xor
test
mov
negl
and
mov
dec
outsl
or
incb
jmp
bound
das
ret
mov
das
lret
inc
lods
aaa
and
jno
and
imul
call
xchg
or
xor
fistps
inc
ljmp
jbe
sbb
repnz
lahf
arpl
or
leave
insl
xchg
in
mov
lods
cmc
xchg
xchg
xor
enter
jl
ret
subb
scas
aas
daa
cs
popf
inc
fdivrs
ljmp
lods
jmp
jae
cmpsl
subl
and
add
andl
jno
xor
mov
adc
sub
xor
mov
call
incb
imul
call
fadds
inc
fistpll
insb
hlt
mov
xchg
cmp
ds
mov
inc
aas
fmuls
ficoms
adc
mov
jp
mov
xchg
int3
push
jnp
cmp
mov
dec
jns
testb
sub
xor
mov
jge,pt
jle
outsl
pop
pop
mov
inc
mov
dec
fdivrl
mov
pop
add
ss
mov
repz
sahf
jecxz
jl
xchg
repz
xlat
ret
pop
jnp
cli
sub
mov
xor
push
xchg
aad
sbb
push
lret
iret
arpl
filds
pop
mov
in
dec
lock
aam
lret
popf
adc
stos
cwtl
ret
inc
inc
adc
cmp
or
sbb
or
adc
sub
js
cmpsl
pop
jae
ret
or
jnp
popa
mov
pop
rorl
lods
or
mov
imul
pop
push
int3
fcoml
out
int3
jle
xchg
jle
fprem1
adc
mov
pop
and
xchg
icebp
cmc
imull
gs
xchg
push
sub
icebp
sub
inc
jle
mov
mov
pop
hlt
fadd
sub
cltd
scas
and
mov
add
ljmp
ja
push
test
mov
push
insb
or
adc
push
and
mov
aad
sbb
jp
dec
cltd
mov
mov
ljmp
frstor
xchg
cld
scas
cmpsl
sub
mov
push
push
add
into
jae
test
fistl
imul
aas
xor
add
dec
add
aas
dec
jmp
sti
mov
jle
je
adc
mov
fxch
movsb
jle
push
cwtl
inc
mov
mov
adc
lock
dec
sarl
jmp
pop
sbb
dec
mov
mov
xchg
in
mov
ja
xor
cltd
mov
or
dec
in
ret
inc
push
sbb
lock
in
mov
inc
sub
cmp
loope
mov
fldl
jge
out
adc
prefetch
imul
jbe
movsl
cmp
add
dec
cs
sti
pop
jle
mov
lahf
mov
movsb
shl
dec
push
pop
aam
jnp
test
mov
mov
loope
movsl
mov
and
pop
or
adc
fsubrs
js
out
inc
mov
xchg
sbb
aaa
or
insl
dec
cmp
aaa
hlt
push
das
movsb
das
mov
xor
cli
aaa
dec
dec
sub
dec
ljmp
sarl
adc
leave
es
fsub
mov
push
mov
pop
jl
mov
pop
xor
or
dec
jg
xchg
adc
and
jb
mov
psrad
add
lock
xchg
test
jnp
xor
das
xor
xchg
xor
aaa
outsb
adc
ret
xchg
aam
mull
mov
divb
call
sbb
imul
push
aaa
mov
cwtl
push
rcrl
dec
stos
jne
cs
adc
loope
or
in
int3
dec
insb
or
les
cmp
sbb
call
scas
sti
pop
ss
rclb
data16
dec
rcll
push
fmuls
das
cli
sub
xor
es
add
add
inc
adc
fwait
scas
ficomps
push
stos
jnp
pop
shrb
and
dec
push
inc
cmp
xor
mov
mov
and
fucomp
inc
dec
jns
outsl
adc
mov
fistl
inc
jecxz
lods
out
lea
out
shl
xor
mov
gs
fcoml
arpl
push
nop
push
popa
adc
loopne
mov
out
mov
and
sub
sahf
cmp
dec
mov
movsl
push
jecxz
xor
jmp
lret
ficompl
xlat
hlt
jg
adc
pusha
out
test
push
pushf
stos
cmp
mov
loopne
dec
pop
xor
add
in
scas
xlat
outsb
dec
loopne
lock
and
adc
mov
aaa
xor
test
pushf
inc
cmp
cmp
lret
mov
cmp
add
leave
adc
bound
ljmp
or
dec
ret
or
in
sbb
adc
out
and
shlb
cmc
ds
mov
rcr
pop
mov
movsb
lock
jnp
pusha
pushf
sub
xchg
inc
jecxz
pop
xor
in
push
clc
cmp
xor
stos
fsubl
mov
dec
or
mov
sub
dec
inc
dec
fnstenv
mov
insl
adc
dec
xchg
push
or
pushl
shrb
divb
jge
insl
xchg
xor
dec
jne
and
repnz
jl
xchg
pop
sarb
or
fbld
cmc
adc
js
in
jae
pop
pushf
inc
mov
add
and
dec
out
fisubrl
popa
add
pop
xchg
dec
or
xor
mov
ret
add
hlt
imul
cmpb
mov
push
stos
and
push
sub
addb
add
repnz
jne
dec
cmpsl
cmc
jmp
call
loope
fstpl
cmp
or
push
cmp
push
imulb
lret
js
leave
xor
push
test
jnp
rol
movsl
clc
xor
lcall
adc
jb
mov
jno
stos
sub
mov
out
stos
pop
mov
sub
mov
sbb
pop
or
mov
sub
and
or
das
jp
xchg
inc
incb
jg
ja
mov
gs
or
pop
lods
pop
dec
dec
in
addb
and
xchg
std
dec
mov
insl
inc
pop
ficompl
loope
dec
mov
ficompl
pop
aas
push
rorb
fsubrs
lds
movsb
mov
shrb
sub
inc
mov
repnz
movsl
adc
pop
xor
ret
lods
or
hlt
adc
sbbl
sarb
fdivp
insl
cld
andb
cmc
pop
idivl
fwait
pop
mov
sub
push
add
ficoml
cs
mov
mov
clc
adc
and
leave
in
sbb
push
mov
add
jmp
jmp
jp
loopne
orl
mov
xor
pop
insl
jmp
mov
dec
sbb
lock
jnp,pt
add
adc
jne
cmp
data16
into
jge
xor
cmp
scas
cld
enter
mov
iret
dec
pop
in
dec
sarl
push
pusha
inc
pop
fadds
adc
lods
or
pmaddwd
stos
xchg
adc
xchg
mov
mov
jg
cmpsl
stos
mov
test
hlt
jg
jno
fwait
dec
std
or
lahf
mov
mov
repz
daa
inc
lret
and
mov
dec
movb
and
ret
xor
bound
imul
ljmp
outsb
xor
push
pop
pop
lock
je
mov
add
sbb
int3
sub
push
cmp
or
sbb
mov
cld
daa
mov
call
pop
addr16
mov
adc
mov
sub
cld
sbb
cmp
roll
cli
and
jp
cmpsb
and
addr16
fnstsw
je
pop
sbb
mov
mov
and
test
insl
jp
mov
fidivs
aaa
mov
jl
inc
test
fwait
mov
pop
pop
bound
xlat
jp
lret
xchg
push
cs
mov
loopne
or
out
cmc
int3
movsl
into
fnstsw
xor
fcmovnb
pop
jle
mulb
xor
mov
call
and
cmp
pushf
imul
mov
hlt
push
jecxz
and
xor
xor
aad
push
and
push
push
inc
mov
notb
pop
and
mov
lds
mov
mov
bound
jne
cld
mov
cmpsl
adc
icebp
push
cwtl
nop
sub
jnp
ret
jnp
lahf
push
xor
testl
sub
sahf
inc
fbstp
sbb
loopne
sbb
mov
mov
test
mov
daa
pop
xchg
fmull
popf
xchg
rol
pop
xor
std
ret
pop
call
cld
sbb
popa
cltd
data16
aam
aam
lcall
jge
push
cmp
mov
mov
xchg
nop
lods
ss
es
addr16
xlat
dec
mov
outsb
xchg
div
mov
mov
sarl
push
push
xchg
xchg
jb
repz
fwait
mov
push
jmp
movsl
xor
mov
outsl
fwait
aad
pushf
out
stos
push
or
loope
xchg
cs
mov
jb
lods
mov
mov
jp
adc
mov
sub
cmpsl
adc
scas
daa
mov
aas
xchg
test
or
mov
ffreep
add
xchg
addb
lds
xchg
stos
or
fnsave
jmp
fdivs
pop
ds
adc
outsl
xchg
push
mov
data16
xor
lods
testb
test
inc
clc
sbb
sub
jbe
pop
pop
xchg
cmp
fs
div
inc
inc
out
xor
dec
insb
mov
mov
inc
data16
jle
popf
sub
filds
and
dec
add
and
dec
add
jne
jmp
rolb
mov
mov
outsb
xor
sbb
jl
xchg
sub
inc
scas
out
xchg
push
add
pusha
lea
push
fistl
push
mov
out
add
cli
movsl
incl
fdivl
or
pop
mov
loop
add
aam
cltd
jge
loope
push
lock
sbb
sarl
arpl
jb
push
leave
jnp
push
jo
sbb
or
pop
arpl
pop
add
push
mov
xchg
lahf
lods
lock
mov
imul
xor
pop
mov
cmpb
jge
add
movsb
scas
adc
cmpsl
in
cmp
cwtl
fiadds
pop
mov
ljmp
sti
pop
xchg
das
int3
cmp
mov
in
ljmp
cmp
sub
xchg
sahf
push
int
clc
add
inc
dec
add
mov
add
shl
jp
imul
jo
lcall
lea
mov
push
pop
or
sub
mov
test
jae
repnz
adc
nop
stc
out
sub
ret
add
pop
adc
imul
insl
call
mov
add
icebp
mov
xor
int3
push
insl
inc
mov
dec
inc
cltd
pushf
popf
imul
jmp
stos
adc
lea
inc
lcall
fs
into
cmp
pop
jae
dec
cmp
test
ljmp
test
mov
ja,pt
and
lds
das
xlat
xchg
stos
cmp
leave
sbb
daa
mov
inc
insl
xor
aas
fldcw
sub
mov
adc
push
insb
ja
mov
xlat
ja
test
je
test
arpl
test
xlat
lahf
pop
in
add
pop
rcr
pusha
cmc
and
adc
xchg
sbb
fistpll
test
test
jns
jp
dec
push
jl
scas
gs
mov
test
mov
push
mov
inc
enter
test
mov
and
fnstenv
jg
mov
lods
jne
mov
mov
cmp
out
enter
orl
jno
lds
cld
and
imul
mov
or
je
jmp
pop
sti
jb
scas
mov
iret
jne
sbb
outsl
add
mov
and
stos
pusha
outsl
pop
call
jnp
mov
mov
imul
adc
cmp
jmp
das
xchg
cwtl
stos
scas
jecxz
leave
ret
jnp
sti
sbb
push
push
stos
call
mov
lcall
inc
or
inc
dec
dec
into
cltd
repz
fs
imul
push
xchg
cmp
adc
mov
fs
test
faddl
lods
and
jo
add
push
adc
into
cmp
push
pop
clc
ds
imul
adc
pushf
lret
jmp
ficoml
hlt
mov
push
pop
aaa
fiadds
fcmovnu
sub
divl
fdivr
or
std
loope
popa
negb
dec
sbb
clc
je
je
mov
clc
sbb
les
xorb
pop
jp
int
aas
popf
mov
jge
mov
stc
xchg
jg
jp
push
and
xor
inc
les
rep
sahf
clc
scas
adc
push
dec
pushl
mov
out
or
aad
arpl
xchg
add
mov
fs
mov
lods
add
jmp
adc
jle
sub
test
lds
dec
test
mov
jbe
or
mov
into
push
orl
jl
push
movsb
pop
jg
xchg
insl
out
jb
push
fcomi
sbb
aad
lcall
mov
jge
out
fimull
and
inc
dec
les
cmpsl
inc
rcll
arpl
addr16
fmuls
mov
push
out
or
push
mov
andb
int3
and
movsl
pop
divl
das
mov
xchg
loop
mov
sub
dec
push
mov
inc
les
std
add
mov
cmc
dec
loope
inc
mov
les
push
adc
mov
bound
loope
test
xchg
das
js
in
jno
setl
faddp
jae
sahf
pop
adc
bound
xor
push
aam
outsl
mov
inc
mov
jnp
or
std
rcr
or
xlat
mov
mov
jo
dec
and
andl
outsb
mov
push
pop
push
in
sbb
out
pop
mov
push
add
lret
pop
sub
push
jmp
mov
loope
push
inc
fldl
mov
sbb
mov
ds
fwait
jae
in
mov
and
sbbb
dec
lock
lds
addr16
les
jecxz
mov
add
out
scas
out
fstl
daa
stc
sub
cmp
inc
mov
jb
push
aas
aam
out
dec
fsub
pop
sub
pop
add
in
pusha
cld
dec
lds
pop
inc
out
icebp
enter
repnz
fisubl
out
and
cld
in
xchg
mov
fnstenv
leave
cmp
outsl
insl
xor
jne
scas
in
cmp
das
ret
icebp
mov
aas
pop
dec
and
lret
add
cmpsl
xchg
into
pushf
test
xor
sub
out
ljmp
andb
xor
or
pushaw
fimull
and
cmp
cmp
aas
sbb
je
dec
and
xchg
sbbb
repnz
in
int3
push
ret
movsl
mov
lea
lods
xchg
xor
cmp
insl
jl
jecxz
jge
cmp
cmp
icebp
pop
sahf
fs
mov
daa
jmp
jb
or
jns
ret
xchg
dec
in
jl
mov
out
dec
push
movsl
psraw
insl
adc
aaa
dec
xchg
inc
xchg
mov
push
inc
incl
ret
cmpsb
xor
out
cmpsb
jne
sbb
rcrb
rep
push
int
cwtl
xchg
lret
jle
mov
xor
cmpsb
pushf
aas
arpl
jp
in
inc
push
pop
sub
and
pusha
xchg
daa
jle
mov
pushf
pop
scas
jne
dec
and
and
in
push
lret
ljmp
inc
pop
daa
cld
mov
aad
xchg
xchg
fidivrl
mov
adc
pop
xchg
or
int
mov
iret
shl
call
stos
push
sbb
pushw
pop
and
das
es
fcoml
test
out
stc
mov
insl
xchg
pop
pop
adc
cmp
lret
lea
jle
jae
sub
int3
icebp
dec
mov
ret
sub
jbe
es
fs
iret
push
adc
stc
dec
jp
shrb
cmp
gs
push
mov
subb
jmp
sub
fnstcw
mov
sbb
and
mov
std
xchg
stos
sub
test
mov
inc
aas
lock
adc
adc
jle
insb
ret
jb
aad
insb
cmp
fildl
rcrl
fistl
fsubr
les
mov
jle
cld
nop
mov
jb
jno
xchg
jp
jae
and
inc
lods
mov
aas
pop
mov
push
dec
in
popa
adc
add
adc
sbb
sub
xchg
dec
and
cmp
les
adc
test
std
icebp
cwtl
xchg
dec
out
jl
das
andb
out
lret
ljmp
mov
sarl
push
jae
int
in
mov
mov
loopne
inc
leave
mov
aas
inc
push
ds
cmpsl
xor
xor
and
bound
ja
outsl
sub
movsb
fidivs
xchg
sbb
cmp
inc
sub
dec
cmpl
mov
cli
and
out
sub
pop
js
jge
adc
js
jl
inc
sti
jns
mov
inc
mov
out
into
or
xorb
cmpsb
repz
pop
ret
cmp
sbb
mov
stc
mov
push
fisubl
repnz
jne
sub
mov
sub
or
push
notb
loop
adc
out
sbb
in
xchg
idivb
pop
jae
mov
cmc
into
clc
dec
inc
push
jge
or
and
repnz
pushf
cwtl
xlat
jmp
ss
inc
lahf
repnz
lods
les
lock
std
test
ds
out
cmc
setg
lcall
mov
mov
test
mov
stos
inc
rcrb
sbb
push
out
shll
mull
pop
push
sbb
and
jne
jne
cmp
xor
push
sbb
lcall
xlat
fabs
pop
fsubs
mov
lods
push
into
mov
out
ja
or
push
sub
xchg
sub
dec
ja
scas
cmp
jmp
lret
ljmp
pop
add
or
insl
push
scas
js
sub
xchg
sbb
fldpi
jp
fsubrl
icebp
dec
aas
fsubrl
outsl
stc
adc
push
xchg
aam
cmp
mov
imul
imull
pushf
hlt
push
lcall
mov
xchg
lahf
popf
mov
jae
addr16
adc
xchg
xor
xchg
addr16
es
sbb
lock
ljmp
push
adc
xor
icebp
cmpsl
pop
and
ret
xchg
jne
dec
daa
xchg
push
mov
fistpll
test
cmp
mov
fs
adc
push
out
popf
aas
stos
repnz
cli
out
hlt
add
adc
sbbb
and
nop
mov
je
in
or
inc
cltd
rcrl
or
push
fucomi
mov
hlt
push
dec
mov
aad
js
jp
add
sbb
loope
jnp
ljmp
mov
arpl
adc
stc
mov
popa
pushf
xchg
and
aaa
dec
enter
pop
push
adc
jae
xchg
add
out
pop
inc
rclb
sbbb
xchg
cmpsl
aas
pslld
or
cmc
in
xor
dec
ds
add
jne
dec
insl
mov
ja
cmpsb
sbb
xchg
test
jne
sub
adc
fidivs
xorl
fwait
sbb
push
mov
push
push
jnp
mov
repz
xchg
fstpt
jl
inc
cs
mov
mov
mov
adc
sti
icebp
pop
clc
icebp
fsubp
js
inc
mov
or
repnz
or
out
iret
fs
mov
test
mov
and
ljmp
inc
cmp
fs
jae
ficoml
xchg
je
in
dec
mov
adc
cmpsb
mov
pop
pop
or
cmp
pushf
push
aad
sti
dec
popa
popa
xchg
cmp
dec
dec
push
cmpsb
sub
jae
addr16
mov
dec
in
aas
inc
lods
sub
dec
aas
imul
xlat
shl
pop
cmp
test
outsl
mov
ss
xor
outsl
sahf
mov
mov
sub
js
pop
mov
cmp
mov
push
mov
push
jo
int3
inc
in
es
and
test
sub
xchg
xchg
push
xchg
push
scas
mov
out
inc
pop
sbb
mov
loop
clc
lea
dec
mov
cmp
es
lods
callw
bound
das
movsl
push
sahf
loop
fstps
popa
push
fsubs
mov
adc
adc
push
lods
fs
cwtl
dec
sub
pop
in
shl
and
nopl
cmp
cmp
push
push
and
lret
daa
sbb
imul
cwtl
mull
mov
je
mov
shl
or
lea
ja
cli
push
test
inc
out
or
pop
scas
or
add
sub
fs
cmp
adc
inc
loope
iret
notb
xor
cmp
cmp
xchg
xor
pop
loop
sub
enter
push
sub
cmp
pop
sub
cmp
inc
xor
mov
mov
lret
scas
push
pushl
mov
and
jo
repnz
mov
js
pop
cmp
sbb
sub
mov
shll
loopne
cwtl
push
es
sbb
inc
mov
jb
lock
xchg
idiv
test
popa
pop
mov
mov
jno
mov
leave
sbb
arpl
sti
fucomi
push
gs
in
xor
pop
addb
ret
stos
decl
cmpsl
push
pop
and
stc
roll
and
ss
bound
and
dec
cmp
jns
cmp
mov
fstps
incb
fnstcw
inc
test
cli
push
call
mov
xchg
xor
dec
add
sbb
sbbl
inc
mov
leave
aam
or
adc
out
test
cs
xor
jecxz
and
mov
cmpsb
jbe
pop
jg
aam
leave
and
mov
pop
inc
test
xchg
adc
out
sub
scas
pop
ss
outsl
out
or
cmpsb
pop
xchg
sbb
fnsave
mov
xlat
adc
inc
mov
cmpsb
push
lret
inc
xor
out
mov
push
in
and
inc
jno
mov
xchg
imull
jb
and
adc
xor
clc
jl
cld
bound
sahf
loope
in
ds
stos
adc
inc
les
ret
or
ja
cmp
cmpl
sub
inc
xor
pop
fstpt
inc
adcl
out
les
xor
sub
outsl
sbb
out
cmp
imul
clc
or
add
imulb
mov
cmp
aaa
or
push
pop
cli
outsb
sub
insb
mov
cmpsl
popf
testb
mov
test
push
cmp
imul
xchg
and
jp
inc
mov
pop
and
cld
pusha
popf
mov
loop
jne
pop
out
and
add
push
ds
mov
xchg
mov
inc
ds
fstpt
fsubr
cmp
int
pop
scas
xor
cmp
pushf
fdivp
pop
xchg
and
or
add
mov
insl
xchg
cmova
push
stos
test
add
cmpsl
in
add
out
mov
into
and
pop
push
mov
mov
out
cmc
pop
xor
das
sarl
std
inc
popa
fnstsw
mov
inc
mov
jecxz
lods
dec
je
adc
pop
xchg
mov
movsl
xorb
pop
lock
or
into
dec
xchg
pusha
test
aam
leave
and
out
loopne
loope
ret
in
out
fs
fstpl
out
loopne
jno
xlat
jl
add
xor
in
pop
out
pop
test
adcb
jg
sbb
dec
sbb
idiv
cmp
jl
sarl
xchg
fdivl
in
enter
fsubr
mull
inc
xchg
outsl
xor
lds
inc
and
add
mov
and
call
mov
lods
sub
jmpw
gs
xorl
insl
xlat
dec
push
xchg
cmp
push
sbb
ret
test
test
jge
mov
sbb
mov
mov
les
xchg
xchg
dec
push
fwait
ud0
int
sbb
enter
ljmp
sti
mov
ffree
push
push
loop
inc
insb
or
xor
adc
lret
mov
hlt
lods
jmp
cmp
add
xor
test
out
scas
mov
push
movd
clc
movsb
cmp
fs
or
repz
scas
add
cmpsl
push
mov
fnstenv
add
pop
dec
push
test
loopne
pop
sti
cli
das
ljmp
out
in
lds
cs
or
inc
jecxz
pop
outsb
ja
push
insb
mov
test
aad
test
push
leave
sbb
test
les
xchg
mov
mov
add
clc
xchg
enter
iret
in
cltd
add
ss
and
lods
ds
out
mov
and
mov
gs
int
sbb
popa
xchg
scas
and
inc
sub
cmc
dec
or
xchg
and
and
ret
loope
test
ret
hlt
pop
clc
mov
cmp
jmp
js
jmp
jecxz
lds
xchg
imul
dec
or
jno
lret
popf
jb
pop
lret
arpl
dec
jnp
jg
xchg
stos
mov
and
mov
sub
xlat
in
neg
loopne
xchg
cmp
xchg
ljmp
pop
fisttpll
daa
cmpsl
es
mov
es
cmp
adc
mov
dec
pop
movsb
jmp
arpl
xchg
dec
push
adc
push
push
pop
ss
addr16
ror
cmp
sub
in
js
and
push
stos
movsb
mov
lcall
add
xchg
cmpsl
fdivl
inc
xor
pop
cmp
jbe
xchg
adc
jbe
rolb
mov
ljmp
adc
je
int3
inc
mov
into
loope
hlt
push
loope
sbb
std
nop
cld
push
mov
mov
cmp
or
addr16
inc
pusha
clc
das
imul
lahf
mov
pop
push
xchg
scas
call
stos
push
or
sbb
push
jle
jmp
cs
je
scas
mov
ljmp
mov
call
in
outsb
push
out
arpl
adc
xor
les
add
ja
bound
es
push
sbb
xchg
jl
mov
adc
sub
test
add
mov
xor
pop
loopne
es
mov
lea
cmp
pop
pop
pop
insl
xchg
pusha
jmp
cs
fdivr
or
ja
orl
in
pop
cmc
and
loop
ret
test
inc
fildll
hlt
in
orl
imul
int3
jb
jmp
mov
test
cmp
cmpsb
cmp
jae
mov
call
push
pop
inc
pop
mov
and
test
sub
mov
in
cli
pop
jno
incb
jb
mul
sub
mov
jmp
outsb
dec
dec
add
gs
cmpsb
add
push
add
sub
test
test
loopne
cld
mov
std
inc
cwtl
mov
jae
sub
sub
or
imul
cmpsl
lret
fwait
push
pop
push
test
dec
pushf
push
mov
pop
fdivrs
push
push
mov
jecxz
pop
mov
or
mov
jmp
idivb
rcll
pop
stos
cltd
and
xchg
xor
scas
popa
sub
mov
pop
les
jb
frstor
adc
or
xchg
jmp
adc
sub
pop
repnz
xchg
and
movb
cmp
jge
lods
mov
push
das
arpl
and
sar
dec
pushf
cmpsb
and
inc
or
jnp
out
pop
paddusb
xor
scas
xchg
sub
jecxz
xor
sbb
pop
sbb
ret
and
popl
mov
pop
je
insl
das
pusha
fiaddl
lea
sbb
sbb
dec
sub
cmp
xor
mov
ror
push
jecxz
add
inc
xor
xor
jno,pt
loope
stos
lods
mov
in
fstl
ja
repnz
adc
adc
mov
out
into
test
jecxz
jo
adc
add
aas
jl
mov
insl
je
notb
sbb
outsb
mov
and
sbbl
ja
outsl
lret
out
arpl
lret
pushf
or
popa
outsl
push
push
pop
xchg
lret
movsl
dec
mov
mov
fdiv
mov
xor
clc
lret
mov
and
test
leave
out
and
cmpsb
pop
jno
imul
sub
pop
xchg
lahf
push
fs
insl
lahf
mov
hlt
jg
call
jno
cmp
xchg
std
out
xchg
xchg
mov
loope
xor
push
gs
dec
lods
xlat
xchg
test
and
enter
and
pop
fisubrs
insl
repz
mov
or
leave
cli
iret
call
leave
xchg
sbb
bound
xor
adc
mov
fdivl
ljmp
or
or
sti
inc
bound
xorb
pushf
xorb
pop
sti
sub
mov
cld
xor
mov
sub
movsb
mov
inc
jmp
adc
out
scas
sbb
and
loop
adc
xchg
fisubrl
and
push
fstps
push
shll
inc
loope
sbb
ror
outsl
idivb
jbe
push
sbb
sbb
adc
call
xchg
jb
sub
and
and
mov
mov
xchg
mov
push
mov
xchg
cli
lret
cmp
sub
out
xor
ljmp
repnz
icebp
mov
sbb
jae
fistpl
mov
aam
stc
pop
and
sbb
xor
popa
int
xor
aaa
stos
mov
lret
or
dec
mov
rorl
push
test
cmpsb
dec
jnp
cmp
sbb
pop
mov
or
adc
and
hlt
add
std
pop
mov
mov
sbb
mov
pop
fwait
adc
mov
xchg
cmpsl
enter
test
jnp
hlt
stos
in
dec
fisubrl
xor
das
cwtl
dec
test
push
xchg
xchg
mov
push
cli
pop
fwait
mov
push
jmp
push
sbb
aam
dec
mov
cld
faddl
repz
inc
fucom
add
and
call
mov
inc
movsb
mov
or
add
aaa
xchg
stc
ror
adc
dec
mov
jg
dec
xchg
jl
into
loope
lock
mov
xchg
xchg
out
andl
repnz
dec
imul
xchg
fs
dec
aaa
aad
xor
ss
cld
jmp
dec
mov
inc
inc
xchg
mov
test
rclb
push
imul
insl
mov
mov
iret
mov
mov
and
push
jg
sbb
or
and
dec
mov
xchg
sbb
mov
pusha
icebp
pop
sub
sub
js
push
ds
ss
xchg
imul
push
fstpl
mov
imulb
cmc
andb
out
divl
xor
push
dec
es
insb
hlt
pushf
in
cmpsl
cld
xchg
mov
ds
inc
cld
popa
mov
outsl
adc
loope
push
adc
xchg
and
sbb
push
out
dec
adc
jmp
insl
inc
xor
test
push
pusha
cmp
loop
push
cli
or
dec
insl
in
ds
movsl
cmpsl
in
pop
bound
rolb
movsl
dec
mov
add
faddl
fwait
jecxz
clc
pop
inc
shlb
into
lahf
lods
stos
xchg
fwait
sbb
clc
cmp
loope
lea
jmp
dec
sti
adc
rolb
outsl
or
ds
js
aam
pop
movsb
ret
cli
xor
cmp
pushf
adc
lock
xor
or
fwait
sub
testl
popl
scas
sub
bound
daa
sub
mov
repnz
mov
dec
and
hlt
imul
les
pop
and
pop
xor
aas
cmp
dec
out
addr16
movsl
push
es
cmp
addb
adc
test
cmp
mov
cmp
push
dec
fildll
addr16
clc
or
mov
cmc
hlt
in
outsl
xor
jo
mov
inc
pushf
loopne
imul
ffree
xor
andb
scas
mov
iret
addr16
inc
add
and
push
loope
lcall
xor
mov
mov
aad
enter
mov
jmp
mov
ret
aaa
loop
in
test
sub
mov
lahf
mov
call
loope
jle
and
in
push
addr16
fs
mov
fwait
lret
mov
xor
pop
pop
pusha
or
rcrb
outsl
pop
xchg
add
add
lods
fwait
aad
mov
push
jno
shl
adc
or
xchg
jge
lret
loope
iret
addl
fsts
push
adc
inc
inc
test
adc
sub
add
daa
sub
movsl
lcall
and
aaa
mov
insb
add
push
inc
lahf
push
mov
test
push
lret
stos
divb
xchg
pop
xor
jle
jae
int3
pop
repz
push
dec
sbb
sbb
rcrl
bnd
sub
adc
mov
flds
jne
sub
sbb
xor
jmp
rorl
jae
pop
mov
dec
call
inc
ss
pop
xorb
fdivl
aaa
and
lea
adc
pop
push
inc
and
xchg
mov
inc
mov
les
ds
test
sub
cmpsb
aad
loop
out
push
in
xor
mov
es
push
aas
pop
fstl
lret
stos
bound
andl
lret
xchg
cltd
lcall
pop
jmp
insb
fstl
call
sbb
lods
pop
cmp
xchg
and
out
mov
call
out
fstps
nop
test
insb
lock
cmp
sub
jb,pn
fwait
sbb
and
leave
add
lds
inc
mov
shll
aaa
test
rorb
add
movsl
fwait
xchg
sahf
xchg
iret
popf
mov
outsl
pop
jb
repnz
xor
test
ljmp
popa
pop
rorb
lcall
imul
dec
sub
lret
pop
lods
cmc
sbb
xchg
ret
out
jmp
decl
mov
mov
mov
push
arpl
dec
mov
lods
mov
sbb
sub
pushf
dec
sub
mov
in
sbb
aam
ja
and
lods
mov
sbbl
daa
or
xchg
and
std
test
pop
xor
pop
popa
jecxz
cs
ljmp
repnz
out
pushf
inc
pushf
jp
jae
insb
sbb
and
and
mov
jmp
mov
insl
es
clc
and
into
fists
std
pop
enter
lods
lret
testl
mov
inc
js
sub
jl
sbb
cwtl
mov
pop
fs
add
or
repnz
clc
jmp
decl
push
test
test
xchg
inc
push
or
xchg
in
cs
shrl
dec
cmp
pop
sti
mov
outsb
pop
dec
push
jmp
inc
mov
pop
daa
xor
dec
in
fisubrs
insl
mov
clc
jecxz
xor
jb
add
sub
cltd
dec
inc
xchg
ret
in
into
inc
pusha
and
in
ret
scas
jmp
mov
jmp
mov
mov
lds
cld
xchg
sub
xor
pop
or
mov
xor
aad
mov
adc
mov
mov
mov
inc
sub
pop
cmp
mov
inc
dec
ficomps
mov
mov
or
pusha
jb
imul
and
xor
add
out
test
insb
fiaddl
shlb
dec
dec
mov
inc
in
dec
stos
loopne
imul
rorb
xchg
mov
mov
dec
jp,pt
push
push
sahf
shrb
fldl
xlat
out
push
scas
mov
xor
jge
mov
mov
pushl
stos
rclb
jle
sub
pop
fsubrs
iret
scas
jp
icebp
inc
test
and
jg
sbb
loop
mov
insl
push
sub
add
push
or
mov
scas
scas
push
sbb
pop
mov
cmp
jno
test
testb
jns
mov
sub
sti
mov
jae
fistpll
and
lods
cld
stc
mov
xor
test
jne
test
and
imul
dec
and
push
mov
ss
mov
call
addb
sbb
in
add
lock
hlt
push
in
sbb
push
mov
enter
push
jle
xor
jmp
xchg
sbb
js
andb
iret
jmp
inc
pop
shrl
in
mov
loop
cmpsb
ret
lret
pop
jne
insb
ret
sub
iret
pop
push
xchg
xchg
insl
jle
jns
jo
out
ficoml
pop
jnp
xchg
sar
and
dec
enter
adc
sub
icebp
lret
loope
xor
mov
cld
push
mov
pop
outsb
aad
pop
jbe
add
xchg
mov
inc
mov
or
pop
ljmp
lock
shrd
mov
test
test
jbe
mov
lods
lcall
stos
cmp
movsl
sub
cvtps2pi
mov
lds
mov
and
mov
mov
movsl
dec
mov
ret
and
nop
in
xchg
mov
cmpsl
mov
xchg
les
push
dec
daa
pop
jno
mov
ret
insl
out
fnstenv
and
adc
hlt
jne
movsb
jmp
stos
jge
mov
push
xlat
inc
js
incb
popa
sarl
sub
aas
xor
das
insl
and
xchg
adc
inc
test
mov
jo
scas
inc
sti
push
lea
cmp
mov
cmpsb
jge
adc
das
ja
notb
outsl
xchg
push
push
inc
loop
inc
lods
xor
mov
xchg
fldl
lods
push
jmp
loop
push
jecxz
test
jg
js
add
ds
sub
mov
cmp
sub
aas
cmpsl
std
pop
push
movsb
mov
mov
pop
in
or
xchg
rclb
scas
inc
and
sbb
cmp
jp
icebp
xor
fisttpll
in
mov
movsb
xor
cld
jg
repnz
loopne
sub
push
ja
xor
sub
lcall
mov
cmp
push
add
rorl
aas
pusha
xchg
outsb
push
aaa
push
loope
loope
jmp
addb
mov
mov
cli
sarl
and
fwait
imul
jle
adc
inc
lea
and
mov
clc
sub
xor
jl
mov
sbb
fistl
or
xchg
dec
dec
lcall
mov
test
repnz
dec
jg
sti
les
mov
cs
dec
jecxz
mov
mov
xchg
push
iret
inc
push
insb
inc
cltd
nop
mov
lcall
adc
cmpsl
push
pop
dec
jecxz
outsb
repnz
add
and
xchg
and
sub
sub
fbld
outsb
cmp
in
push
fwait
adcb
lret
push
shll
jnp
adc
mov
int
push
jns
roll
lea
xchg
ja
mov
adc
xor
mov
mov
mov
inc
push
xchg
test
push
xor
mov
into
test
int
jle
xlat
dec
sarl
iret
out
and
mov
mov
scas
in
lcall
mov
out
neg
test
mov
xchg
push
lods
ret
mov
pop
repnz
hlt
xlat
movsl
mov
cltd
test
cmp
mov
inc
xchg
adc
mov
mov
or
cwtl
cld
shr
icebp
dec
jmp
cmp
add
dec
outsl
jnp
mov
andnps
push
mov
je
mov
mov
dec
or
hlt
and
xchg
jg
dec
sub
pop
jo
cmp
adc
and
pop
pop
or
and
in
mov
mov
dec
cltd
mov
adc
mov
and
adc
faddp
push
andb
daa
in
mov
pop
fdivr
dec
sub
mov
pop
addr16
outsl
loopne
xchg
cmp
cmpsb
mov
xchg
sub
sahf
xchg
gs
add
jae
mov
ret
mov
rclb
adc
xor
test
cmp
out
shr
push
jae
sub
pop
xor
adc
jle
pop
mov
lret
clc
jecxz
pop
fldcw
loope
lahf
fnsave
fistpll
push
push
or
mov
xchg
xchg
sub
lods
ja
xchg
push
test
sbb
jbe
jecxz
icebp
mov
jae
dec
dec
cmp
das
cmp
cli
fnstsw
dec
clc
adc
jbe
fs
setp
xchg
jo
sub
add
and
cmp
inc
sbb
in
imul
inc
hlt
pop
jb
insl
scas
pusha
dec
imul
xor
mov
iret
lock
cmpsl
loop
les
sbb
cwtl
test
aas
mov
or
dec
adc
lock
ret
jnp
sub
push
pop
or
nop
lods
jmp
fildll
push
cmpsl
and
pushf
movsl
out
cmp
fwait
inc
jne
lock
mov
sbb
sub
ror
stc
or
mov
adc
dec
pop
in
pop
jae
or
xchg
hlt
pop
inc
mov
movsl
ret
aam
xchg
xlat
shl
outsl
stos
stos
rorb
dec
and
in
lds
ja
ss
xor
inc
mov
leave
mov
repnz
push
xor
adc
lret
add
dec
cmpsl
add
aaa
push
mov
jnp
mov
cmc
push
std
rolb
pop
dec
enter
pop
scas
and
nop
push
popf
fisttpl
push
enter
sub
jecxz
adc
aam
push
insb
inc
ret
popf
inc
ret
push
dec
lods
fisubs
test
mov
shl
lret
mov
pushf
mul
filds
imul
ja
imul
loope
push
fs
or
in
testb
cmc
ja
je
mov
or
dec
jge
push
mov
sbb
je
and
or
jecxz
in
mov
scas
fdivs
pop
inc
mov
pop
adc
pop
insb
daa
out
ds
mov
insb
in
pusha
or
xlat
sbb
call
mov
mov
stos
lods
fnstcw
mov
dec
dec
mov
xor
outsb
addr16
cmp
fs
fsub
sti
fidivs
nop
xchg
cmpsl
inc
jo
xchg
in
push
xor
sbb
pop
cli
int
stos
adc
xor
and
mov
fisttps
fwait
sti
cli
in
nop
jecxz
decl
dec
sbb
or
add
add
fbstp
xchg
outsb
push
pop
sarb
icebp
xchg
sub
enter
sbb
insl
xchg
dec
mov
movsl
xlat
mov
jns
mov
hlt
stos
in
xchg
loop
lahf
inc
xchg
push
mov
pop
hlt
fidivrl
sti
daa
mov
sbb
pop
mov
out
das
lahf
mov
or
pop
data16
add
inc
rorb
int
pop
inc
sbb
or
jle
add
outsl
lods
movsl
test
cmovle
or
push
pusha
xchg
bound
dec
sbb
lods
cli
add
jne
or
addr16
mov
mov
xlat
inc
aaa
adc
mov
adc
mov
dec
scas
jno
std
imul
movsb
mov
testb
mov
pop
out
push
das
mov
add
ficoms
pop
pop
enter
ficoml
mov
popf
push
pop
mov
adc
adc
lods
notb
or
insl
cwtl
inc
test
adc
and
xchg
sbb
mov
in
xor
pushf
and
cwtl
dec
xchg
iret
lcall
cmpsl
dec
push
fcoml
inc
or
fsubs
icebp
scas
das
dec
jns
addr16
mov
sub
add
jg
in
xchg
dec
aaa
arpl
call
gs
xor
in
adc
add
cmp
mov
dec
push
push
popf
cmpsb
out
and
and
cmpsl
push
jecxz
or
fisubrs
shr
sbb
mov
dec
into
and
mov
cmp
push
sbb
xchg
add
mov
movsl
inc
mov
mov
add
sti
inc
nop
sar
mov
or
sub
repnz
dec
dec
mov
pop
sbb
xorb
outsb
jg
xchg
shl
mov
aas
test
fldenv
repnz
movsl
sub
loop,pn
js
arpl
mov
inc
xor
and
ja
mov
mov
loope
xor
or
rcrb
adcb
mov
addr16
xchg
negb
pushf
imul
loop
fmulp
push
mov
lock
ror
sbb
push
dec
scas
inc
jns
jno
push
loop
add
pop
fdivs
test
mov
lea
push
dec
push
sahf
xchg
lahf
in
jnp
push
and
mov
enter
inc
pop
pusha
inc
out
std
and
shll
and
js
sub
cmp
xor
rcrl
mov
test
mov
dec
inc
les
adc
add
cltd
push
add
pop
add
ss
lds
test
lods
sub
pop
arpl
push
loopne
addr16
jbe
adc
out
mov
or
fldt
add
jbe
or
and
inc
popf
das
adc
fldt
cmp
pop
movsb
psubb
adc
repnz
test
aad
jp
push
rep
rcll
xor
mov
dec
pop
es
int3
scas
xlat
mov
imul
push
xor
push
add
dec
sti
dec
aad
fnop
call
and
out
cwtl
imul
movsl
adc
test
out
cs
aas
adc
mov
mov
pop
xchg
mov
jl
xchg
sub
sar
nop
loop
in
jp
aad
sti
stos
bound
inc
push
hlt
insl
and
xchg
sub
div
arpl
daa
insl
jbe
incb
clc
or
inc
push
aad
adc
int
xchg
ljmp
or
imul
das
cmp
imul
sbb
pop
loop
sub
push
sahf
add
add
xchg
inc
jmp
ljmp
mov
out
leave
mov
cmpsl
bound
inc
inc
mov
cmpsl
xchg
mov
mov
sbb
xchg
mov
dec
xchg
data16
flds
movb
jl
sbb
popf
dec
out
inc
jmp
inc
insl
xor
stc
sub
lret
inc
clc
not
push
iret
sub
mov
cli
xchg
fwait
jo
fnstcw
mov
idiv
pop
shll
stc
lods
dec
push
das
mov
xchg
dec
mov
movsb
outsb
ret
pop
push
daa
in
out
mov
sbb
xchg
xlat
push
fbstp
push
les
clc
sbb
dec
jne
icebp
lds
mov
insl
scas
fcmovu
fnsave
push
mov
jg
std
mov
pop
jnp
pop
repnz
test
push
sbb
and
test
add
xchg
lahf
or
stc
adc
stc
pop
cmpsl
and
adc
xchg
stos
xor
or
int
mov
mov
lret
aas
ficoms
gs
mov
cmpsb
loopne
subb
test
movsb
jmp
in
rcll
add
int
pusha
das
rclb
jecxz
xor
add
cmp
insb
in
fs
xchg
test
add
mov
or
cmp
mov
mov
or
pop
adc
or
aad
jno
mov
sub
xor
xor
xor
fcomps
das
lea
loop
insl
outsb
repnz
jle
add
les
out
cld
into
sub
xor
stc
mov
dec
sbb
into
and
add
mov
mov
imul
out
data16
cmpsb
aad
jl
lret
repz
jbe
andb
in
adc
hlt
push
push
pop
out
data16
data16
popf
jle,pt
push
xchg
inc
repnz
pop
mov
aas
insb
dec
stos
call
and
cs
add
fnsave
enter
push
in
ja
in
pop
das
mov
pop
ljmp
cli
mov
shlb
push
insb
fs
in
outsb
stos
cmpl
dec
dec
sub
ss
lock
mov
call
push
jbe
sbb
and
and
cmp
mov
inc
or
xor
mov
cld
lock
jae
lods
or
sbb
lahf
push
fisubs
jecxz
pop
jbe
cmp
popf
xchg
ret
sbb
sbb
popl
cli
mov
sar
imulb
ss
hlt
mov
pop
sbb
scas
mov
shl
push
jmp
scas
add
add
cmp
ret
in
enter
jle
xor
xorb
iret
fucomip
shrl
adc
js
and
call
dec
xor
icebp
push
repz
mov
mov
out
insb
popf
lock
rcrb
mulb
push
clc
cld
add
inc
shl
and
lods
push
inc
jae
out
xlat
inc
imul
out
mov
mov
cmp
out
pop
sbb
leave
mov
stc
ret
xlat
xchg
lahf
lahf
in
outsl
pop
fidivrs
and
jecxz
and
js
pushf
add
pop
mov
xchg
inc
or
cmp
or
js
push
xchg
push
cwtl
into
aam
faddl
mov
dec
les
lods
mov
test
jp
rcr
int
nop
shr
sbb
dec
jge
test
mov
pop
fcomps
fldt
ss
or
sbb
ss
mov
rcl
add
cmp
movsb
sbb
clc
xchg
inc
lcall
repz
push
dec
xchg
movsl
sbb
mov
sbb
leave
push
in
lret
sub
mov
cmp
test
aaa
in
arpl
repnz
aaa
cmp
in
pop
movsl
mull
cmp
stos
sub
mov
cmc
dec
out
dec
pop
stos
jg
addr16
xor
or
js
push
shr
sub
es
xchg
or
pop
fists
rcrl
jo
rol
int
clc
les
sti
pop
sbb
std
jnp
in
pop
mov
ds
clc
in
mov
mov
fidivs
fisttpll
jecxz
or
jl
mov
test
out
fldenv
cmp
cmpsl
push
push
mov
fmuls
iret
es
push
add
or
mov
pusha
out
dec
pop
and
insl
mov
test
jle
call
mov
cmc
ljmp
int3
mov
mov
js
les
pop
cmpsb
loop
sub
jmp
adc
aam
cmp
jle
sub
loope
mov
cli
loopne
cmp
mov
jg
insl
cmp
inc
push
ret
es
add
pop
in
jno
mov
push
mov
dec
sbb
pop
pop
pop
aas
add
js
and
and
xor
icebp
stos
popf
xor
push
and
mov
adcb
idivb
and
push
sub
or
movb
gs
jno
jae
cmp
cmpl
dec
mov
cmp
push
or
pop
int3
je
out
cltd
push
int3
and
adc
jo
bound
add
jns
adc
xor
call
inc
mov
int3
adc
sysret
out
cmp
sarl
into
and
mov
jne
sbb
pop
insb
and
mov
push
aam
lea
lret
or
xchg
sub
inc
ljmp
pop
jp
mov
nop
test
mov
mov
mov
or
ja
ss
mov
push
aam
mov
movsb
dec
and
dec
sub
xchg
cmpb
pop
and
test
hlt
inc
jle
pop
fcoms
dec
sbb
mov
test
in
leave
inc
jmp
int3
pop
push
sub
push
xchg
imul
movsl
mov
sarb
add
pop
adc
sbbl
ja
dec
outsl
jecxz
sub
xchg
sub
and
xor
int3
mov
fstps
push
push
xlat
negl
xchg
outsl
mov
aam
lret
add
xchg
test
xlat
inc
add
and
or
insb
int3
iret
xacquire
inc
std
inc
jg
loopne
sub
fsub
bound
loop
dec
aam
cmp
popa
fstps
mov
inc
xor
sub
lods
fldenv
scas
pusha
xchg
or
pop
fwait
mull
mov
iret
sbb
ljmp
lea
push
jp
iret
push
nop
mov
jae
sahf
aam
mov
pop
insb
dec
shl
xor
cmp
pop
pop
sub
mov
jbe
stc
in
stos
rclb
or
je
dec
xor
xchg
xor
pusha
xor
or
add
sbb
cmp
xor
push
pop
add
add
mov
fdivr
out
lods
ret
fs
mov
and
lret
rol
sub
sub
std
rcrb
mov
cmp
in
cmp
loope
lret
andb
in
sbb
dec
ror
or
xchg
fnstenv
stos
scas
pushf
and
dec
pushf
inc
js
gs
inc
mov
lods
push
xor
movsb
insl
jns
push
insl
adc
adc
sti
sbb
xchg
sbb
hlt
aas
pop
outsl
xchg
fs
enter
jl
test
repz
xlat
loope
shr
pop
insl
and
pop
xlat
enter
jl
or
das
adc
sbb
roll
and
scas
dec
lahf
pop
mov
and
cmp
mov
clc
hlt
js
inc
adc
fsubl
push
mov
push
push
dec
jns
adc
adc
dec
rcrb
mov
xor
subb
inc
cmp
sbb
mov
popa
inc
pop
adc
mov
adc
mov
push
lea
adc
arpl
test
iret
xorb
loopne
lret
sbb
imull
jb
sub
xchg
mov
push
loopne
ja
lods
inc
in
dec
push
xchg
out
cmp
icebp
insl
sub
ficoms
cmpsb
inc
mov
add
add
jnp
lret
imul
rorl
jo
das
les
cmp
lea
push
dec
push
mov
mov
dec
jge
xor
mov
push
insl
mov
push
repz
xor
in
push
lret
or
jle
cs
cmp
add
mov
cmp
scas
pop
stos
xchg
ljmp
jae
jecxz
je
pop
test
es
pop
movsb
adc
mov
loopne
filds
fidivrs
out
mov
mov
loop
test
xchg
lds
popa
or
fldt
aad
negb
sub
imul
test
xor
cmp
xchg
lods
jmp
mov
cmp
pop
mull
adc
jns
sbb
sbb
pop
mov
and
fwait
jecxz
add
push
pushf
in
jb
mov
out
dec
dec
mov
sahf
push
jnp
pop
jb
xor
xor
sub
out
aam
jmp
rcll
shrb
add
fcmovne
addb
in
push
adc
popa
fldt
out
sub
xor
insl
or
addb
mov
icebp
inc
shlb
jg
sub
lock
lcall
scas
jo
mov
or
fs
mov
cmp
mov
mov
adc
mov
rcr
push
ret
fcomps
jl
ret
and
sbb
inc
add
adc
mov
pop
nop
test
pop
dec
insl
push
jno
xchg
fwait
cld
sub
push
enter
bound
pop
mov
dec
popf
xor
xlat
push
loopne
adc
cwtl
ret
mov
cmp
push
fwait
movsb
aad
or
je
out
test
xchg
stos
cmp
mov
pop
mov
jmp
mov
cmp
and
jmp
and
mov
repnz
pushf
arpl
pop
xchg
sbb
imul
cltd
jb
roll
cmpsb
movsb
push
lcall
leave
mov
pop
leave
and
dec
jp
out
shrb
int3
cmp
pop
pop
mov
scas
xor
dec
add
out
repz
jg
subb
sbb
lret
xchg
pop
mov
cmp
sub
enter
cwtl
mov
enter
pop
dec
dec
arpl
mov
add
push
cmp
lock
pop
xlat
out
adc
out
aad
sub
mov
dec
jmp
sbb
and
fnsave
mov
cltd
stc
in
int
mov
out
fisubrl
jns
fs
std
cmp
ss
ja
mov
jnp
adc
cmpb
mov
adc
inc
mov
jmp
or
pop
pop
subb
adcb
inc
pop
add
out
mov
shl
mov
in
fstpl
mov
mov
jl
jmp
ljmp
lcallw
mov
inc
or
jecxz
pop
jl
xchg
lock
xchg
out
icebp
sbb
jge
jg
aas
pushf
push
sbb
imul
dec
test
daa
inc
or
imul
mov
pop
sbb
add
nop
jecxz
out
fwait
leave
jb
pop
jns
cli
adc
icebp
das
in
push
pop
call
decl
repz
mov
pop
aaa
xchg
sti
adc
pop
nop
or
jle
cmp
lcall
loope
fadds
add
sarl
repnz
cli
xchg
leave
xchg
push
leave
jne,pn
mov
pushf
pop
aad
jmp
push
loope
andb
repz
pop
sbb
and
js
mov
push
push
inc
cmc
loopne
xor
mov
test
mov
inc
xchg
bound
mov
jmp
xchg
movsl
push
cmpsb
push
dec
lcall
push
loop
ja
outsb
mov
clc
fadds
dec
sbb
mov
xchg
divps
loopne
ljmp
mov
sub
aaa
fsubr
sub
movsl
into
data16
clc
mov
mov
sahf
pop
mov
jns
xchg
mov
inc
fldl
xor
sahf
adc
les
lret
outsl
mov
adc
outsl
in
pop
pushf
xchg
xchg
test
jo
adc
les
insl
fwait
add
ds
mov
lods
test
lock
insb
sub
add
idiv
dec
pop
loope
pop
daa
jnp
adc
jno
xor
xorl
pop
xchg
sti
pusha
mov
daa
dec
adc
jp
mov
lds
imul
bound
loopne
or
pop
cs
mov
lret
mov
dec
in
jle
int
lods
push
pop
pop
in
cmp
in
lods
sbb
add
and
aas
push
fisubrl
push
inc
ja
mov
pusha
incb
js
push
jno
xchg
stos
cmp
xor
in
fmul
bound
shr
jns
inc
mov
jecxz
ljmp
push
pushf
insl
xchg
loopne
mov
inc
pop
mov
mov
sbb
sbb
and
xchg
dec
push
mov
int
enter
cmc
pop
push
xchg
dec
push
mov
mov
inc
adc
adc
and
mov
mov
jg
cli
push
cmp
faddp
xchg
xchg
adc
sbb
loopne
js
pop
sub
inc
mov
aas
int3
jp
lock
inc
push
or
and
sbb
sub
adc
mov
pop
in
sub
adc
jo
mov
jbe
out
or
and
jne
jae
mov
push
pop
push
mov
sub
dec
push
fistl
xor
mov
lret
push
loope
or
mov
loope
shl
xlat
es
pop
pop
es
cmpl
xchg
and
outsb
test
insl
sub
cwtl
pop
xor
and
in
sub
dec
xchg
lods
sub
pushf
jg
ljmp
mov
inc
sub
jnp
lds
sti
imul
rorb
cmpl
pop
push
inc
iret
cmp
push
lock
mov
cmp
cmp
push
int3
lea
ljmp
mov
cmpl
cmp
movsl
imul
adc
js
out
sbb
jno
adc
sub
mov
sub
adc
xchg
jmp
adc
ljmp
add
sbb
scas
xor
cwtl
or
xchg
mov
jo
dec
pop
xchg
push
adcl
daa
mov
popa
lcall
push
andb
add
dec
sahf
repnz
pop
sbb
mov
mov
ja
ss
jbe
xchg
inc
pop
cmp
cmp
inc
lret
mov
xor
xor
mov
jle
repnz
adcl
ret
jl
iret
and
lods
loop
mov
cs
add
retw
mov
add
mov
xor
int3
pmaddwd
push
inc
xchg
idiv
aam
inc
das
fsubrs
xchg
sbb
lods
mov
insb
imul
cmpsl
jl
enter
jbe
cmp
sub
jae
test
pop
push
mov
jo
aas
add
test
test
mov
inc
mov
pop
in
inc
into
or
cld
pusha
stos
notb
xor
inc
mov
lock
jecxz
mov
cwtl
loop
adc
shll
sarb
cli
xor
aaa
mov
add
scas
popf
mov
int
fisubrl
repnz
hlt
sub
popf
jno
outsl
mov
repz
xlat
xor
adc
ds
jo
repnz
push
push
sub
mov
dec
lods
push
pop
add
cld
or
xchg
mov
movsl
mov
fs
mov
dec
and
xchg
addb
inc
addr16
in
shl
xchg
adc
inc
and
and
int3
cmp
xchg
ss
pop
and
dec
out
cmp
dec
cmpsb
sahf
cmp
jle
sahf
sub
dec
gs
sbb
lcall
push
xchg
or
push
adc
xor
lds
sbb
fsubl
daa
imul
jecxz
cmp
lods
mov
in
mov
movsl
mov
mov
cmpsl
xor
repnz
lods
pop
or
cwtl
xor
or
dec
pop
xlat
push
scas
fcomi
imul
pop
jnp
es
pop
fistpl
sbb
inc
fnstsw
int3
pop
xchg
repz
push
adc
sbb
cmp
push
pop
imul
xchg
fwait
push
add
sbb
or
mov
add
add
xchg
jg
and
hlt
jns
outsl
repnz
add
and
adc
test
leave
and
jle
cltd
ret
fldcw
mov
fnsave
push
into
or
js
shll
mov
inc
fmul
and
mov
scas
dec
push
pusha
pop
insl
insl
aad
fstpt
in
push
xor
adc
sbb
js
js
icebp
daa
pop
ja
or
xor
ljmp
test
stc
pushf
fstpt
push
pop
and
scas
ja
lcall
in
fists
pusha
and
push
decb
fidivl
shr
cmp
xchg
push
aam
pushf
mov
and
jg
add
aas
pop
shll
cmpsb
mov
sub
dec
nop
xchg
test
jp
loop
rolb
or
adc
loope
cmpsl
getsec
in
cmpsl
mov
mov
ss
cltd
inc
lret
jp
repnz
jle
idivl
mov
ficomps
xor
jno
aas
or
jae
fstps
pushl
ds
fnstsw
and
mov
fiadds
xor
xchg
add
lods
es
icebp
mov
repz
pop
data16
stos
mov
jp
mov
push
jno
pop
jle
mov
dec
jl
or
outsb
pop
adc
add
xchg
movl
cmp
or
inc
fiaddl
aas
addr16
sub
repz
std
roll
lea
xor
lods
insl
inc
dec
adc
mov
movsb
shll
cmp
mov
pop
cwtl
rcrb
xor
sbb
in
add
fstpt
loop
fsubrs
jb
rcll
push
sub
pop
push
mov
push
ror
test
xchg
mov
addr16
test
sti
mov
dec
jl
cltd
mov
insb
cltd
shl
jae
adc
imul
jae
sbb
pop
divl
pop
dec
xchg
pop
add
dec
enter
and
cltd
out
xchg
test
ljmp
mov
push
idivl
lea
arpl
mov
push
arpl
and
mov
pop
mov
jle
jo
or
dec
mov
int
xchg
xchg
pop
pop
cmp
fbld
icebp
dec
int
jne
les
lahf
leave
aas
sti
push
fucomp
push
sub
cmc
jb
fdivrs
mov
sbb
decl
data16
into
aam
mov
inc
aam
out
andb
loope
int3
sbb
add
sub
xchg
pop
and
adcl
xchg
pop
dec
and
rcl
icebp
push
cmpsl
cmp
mov
sti
je
or
xchg
lock
popa
clc
adc
fisubrl
idivb
ret
cmp
cld
mov
xor
cmpsb
das
sbb
mov
sbb
lea
xchg
cmp
xor
and
movsl
or
mov
xor
sti
jp
or
jg
pop
sbb
push
stc
repz
mov
push
mov
in
cmp
mov
cmp
sbb
clc
bswap
insl
or
mov
cmp
jb
sbb
cs
mov
insb
jnp
dec
sbb
mov
xor
dec
fldenv
push
shll
fmul
dec
mov
sti
stos
add
movsl
jmp
sub
ds
add
and
dec
in
pop
sub
pop
mov
push
sarl
cld
loope
push
in
std
mov
mov
call
cmc
xorl
mov
mov
ljmp
and
jp
jbe
pop
daa
lret
jae
pop
stos
push
popf
mov
pop
push
sbb
xchg
nop
dec
mov
xor
out
dec
sub
push
jbe
mov
clc
push
mov
cmpsb
fcomp
cmpsl
int
outsl
cmpsb
mov
push
sub
dec
cltd
adc
dec
int
shrb
mov
in
cmp
aas
xchg
mov
cmp
sbb
lods
scas
scas
push
pmuludq
cltd
xchg
pop
idivb
andl
adc
gs
in
push
xor
loop
in
mov
cli
mov
adcl
call
mov
fmull
push
les
test
fwait
mov
xchg
jnp
outsl
adc
xor
fwait
cmp
popa
pusha
adc
ret
push
aam
xchg
xlat
loop
pop
jo
jnp
das
xor
pop
test
mov
jl
cld
jecxz
lock
pop
xor
xchg
lods
in
lret
inc
push
andl
aas
and
xchg
push
ss
xchg
add
outsl
out
sbb
push
sti
roll
lret
clc
ja
push
cmpsb
inc
inc
sbb
cmp
push
dec
mov
mov
aas
pop
pop
scas
pop
clc
repz
jge
shlb
cmp
xor
ficompl
sbb
xchg
xlat
xlat
arpl
or
cs
lods
xor
cmpsl
jnp
sbb
mov
dec
push
fildl
push
and
jecxz
cmp
loope
adc
in
lcall
mov
dec
loopne
sub
les
mov
dec
xchg
mov
cld
leave
sub
sub
outsl
aad
push
sbb
mov
addr16
stos
mov
sahf
scas
cmc
cmp
push
mov
jns
cmpl
stos
xor
clc
jecxz
jo
inc
dec
loop
std
pop
xchg
xchg
sar
mov
adc
bound
push
lock
dec
adc
fidivl
icebp
or
xor
and
inc
bnd
aam
jmp
mov
jbe
jmp
xchg
mov
pop
mov
dec
cld
das
mov
add
mov
push
pop
je
xor
int3
xchg
xchg
leave
xchg
lock
add
or
test
mov
movsl
xor
dec
enter
dec
and
mov
inc
addl
cmpsl
dec
mov
pop
outsb
leave
inc
les
addr16
jmp
xor
lock
add
leave
adc
pop
dec
icebp
push
cmp
jl
push
mov
sub
fmul
dec
xorb
leave
inc
jbe
ljmp
lods
mov
ljmp
lods
fildll
ss
mov
jp
sbb
adc
insb
push
popa
xchg
sbb
sahf
cmp
outsb
es
pop
jno
in
mov
mov
imul
int
cltd
jne
subl
xor
out
inc
adc
xchg
loop
ret
xchg
popa
mov
and
add
adc
movsb
inc
xlat
xor
and
mov
mov
aas
or
pop
test
out
mov
dec
popa
add
out
mov
jae
mov
out
lahf
movsl
addr16
fs
cld
dec
jbe
push
loope
mov
pop
out
lret
fstl
fxch
shll
mov
adc
mov
out
sub
inc
add
jnp
mov
test
cwtl
ror
nop
test
xchg
ss
cmp
into
pop
jmp
inc
add
xor
inc
and
and
inc
xchg
mov
inc
adc
lret
fnstcw
xorl
lret
xchg
pop
fsubrl
push
stos
cmpsb
push
push
scas
jns
xchg
inc
dec
xchg
jne
cmp
lea
adc
sbb
push
push
and
cli
int
test
jle
or
cltd
xlat
sub
or
jno
push
scas
mov
insl
enter
sub
and
fisubl
inc
mov
fmulp
xor
int
int
bound
lds
add
fildll
ret
movsb
cmp
mov
push
iret
shrl
in
xchg
and
xor
es
mov
iret
test
push
cmp
movsl
leave
movlps
add
push
xchg
int
ficoml
dec
loope
in
mov
clc
and
loope
in
add
mov
or
push
xor
xor
cmp
mov
add
mov
daa
outsl
jecxz
arpl
test
aam
lcall
les
or
js
mov
ljmp
mov
outsb
aad
mov
out
int3
decb
add
pop
sbb
xor
bound
mov
test
outsb
int
inc
lods
jmp
in
sub
int3
add
lock
or
ljmp
mov
fldcw
mov
ss
out
lret
and
icebp
xlat
fisttps
scas
lret
or
mov
mov
xchg
cmp
ret
inc
jmp
lcall
int
ret
pop
sub
pop
xlat
out
mov
push
outsb
aam
sbb
adc
mov
in
cwtl
and
int3
ja
shrl
or
popf
fwait
pop
jnp
loope
push
dec
les
dec
mov
jns
or
rcll
stc
leave
dec
sarb
rorb
and
rorb
fucom
dec
mov
stc
sub
mov
ja
xor
push
xor
movl
push
jo
xchg
rorl
flds
aam
ret
loope
jle
mov
addb
loopne
add
dec
sti
pop
mov
repnz
xchg
les
sbb
stos
mov
gs
adc
cld
insb
repnz
es
pop
fs
add
scas
jbe
test
int3
mov
rorb
ret
int3
test
in
aam
add
pop
faddl
testl
xchg
lea
ds
push
jne
jns
loope
fwait
leave
mov
cmp
xchg
sub
inc
mov
out
outsb
dec
enter
cmp
out
cs
lods
decl
mov
aaa
jg
ret
dec
pop
imul
mov
dec
push
call
push
scas
push
test
insl
xor
add
sahf
mov
jmp
iret
mov
popf
mov
sbb
outsb
shl
add
xorl
lock
pop
pop
loop
mov
out
push
adc
cli
lock
aad
incl
inc
outsl
mov
mov
or
in
movsl
andnps
jo
push
push
cmc
mov
mov
aas
dec
je
shl
inc
and
jg
fdivrl
dec
jmp
scas
fstp
js
xchg
scas
rcrl
fimull
outsl
outsb
jne
cmpsl
dec
xchg
ds
cmpsl
mov
pop
out
adc
adc
call
mov
outsl
dec
ss
ret
mov
jmp
test
mov
stos
mov
enter
pop
bound
mov
cmpsl
and
lds
cmp
push
cmp
outsb
push
cmp
sub
ret
add
fildll
inc
jns
je
fwait
dec
les
mov
arpl
mov
sub
jl
int3
mov
idivb
dec
outsb
sbb
push
call
scas
push
push
arpl
lahf
pop
push
test
pop
or
jg
imul
lcall
push
lret
inc
push
cmp
jno
loopne
sub
sub
sub
mov
ss
mov
mov
mov
test
xor
shlb
xchg
jl
in
mov
ret
mov
lea
or
dec
shrb
mov
jmp
idiv
out
mov
aaa
inc
jecxz
jae
daa
fldl
iret
mov
and
stos
shrl
sbb
repz
jg
cmpsb
add
mov
nop
mov
mov
mov
sti
ss
les
loopne
jmp
push
xchg
jecxz
mov
cld
sub
push
or
mov
inc
xchg
aaa
fimuls
mov
mov
push
or
mov
xchg
iret
inc
dec
mov
xchg
mov
das
mov
cmpsb
adc
in
mov
xor
popf
push
mov
or
pop
pop
fsubl
xchg
xor
popa
cmc
xlat
xchg
call
fldcw
mov
call
cmc
add
jl
pushf
mov
aaa
cmp
mov
push
daa
or
std
mov
mov
clc
and
and
mov
mov
xorl
or
imul
in
inc
cmpsb
and
stos
lea
or
dec
rcll
repz
aaa
sbb
jl
bound
in
cwtl
sarb
lret
push
cltd
jnp
mov
mov
stc
subb
dec
sub
adc
mov
shll
sub
leave
xor
push
push
mov
mov
popf
rolb
sbb
ret
ror
jns
mov
add
inc
push
sbb
or
cltd
shll
jl
cld
ror
cld
scas
out
adc
notl
stos
xchg
pop
int3
add
popa
mov
das
dec
inc
dec
add
push
fldcw
pop
jo
xlat
mov
addr16
in
dec
push
cmpsl
pop
shll
ret
xor
sub
sub
add
cmp
out
cwtl
loope
mov
loopne
in
test
push
mov
addr16
fisubrl
fnstsw
int3
shrb
adc
test
imull
scas
xchg
cmp
orl
sbb
sub
mov
dec
mov
xchg
cmpsl
push
and
or
pop
addl
mov
cld
stos
dec
or
xor
fimuls
sbb
scas
xchg
mov
in
and
stos
fdiv
jle
push
test
lock
add
out
pop
push
lahf
pop
xchg
pop
in
xchg
xor
pop
sbb
xchg
lods
out
cmpsb
mov
mov
sbb
hlt
std
mov
cmp
loopne
cld
and
and
sti
mov
push
nop
pop
jle
shll
xor
cmp
das
add
push
std
sub
mov
mov
and
jo
fcomip
push
push
cs
cmpsb
dec
pop
jg
mov
ficomps
sub
sbb
sti
and
call
cmp
lret
test
hlt
inc
push
adc
stos
sub
or
lahf
mov
cmp
mov
adc
not
sub
in
mov
jno
aad
cmp
in
sub
aad
mov
adc
adc
fcomip
rcr
lcall
ret
pop
mov
ja
push
dec
dec
push
xchg
or
mov
ss
out
mov
pop
rclb
fwait
push
lock
mov
test
aas
jl
jp
adc
xchg
pop
sbb
lret
and
jns
icebp
mov
std
fs
push
aad
or
jb
inc
xor
lea
cmp
cmp
sbb
ljmp
push
lret
rcrl
xchg
and
dec
test
pop
adc
rol
stos
aaa
cmc
fdivrs
int
add
push
call
arpl
lods
iret
jg
lods
sbb
popf
jmp
ljmp
in
mov
loop
pusha
adc
lock
lds
subl
fistps
mov
aam
and
cmp
pop
xor
adcb
pop
jecxz
and
stos
xor
sahf
scas
xchg
xchg
out
divb
loop
cltd
mov
jo
icebp
xchg
push
fiadds
movsb
int
outsl
ja
mov
ljmp
jmp
cmpl
dec
les
xchg
arpl
pop
insb
stos
jle
shrl
fstpt
lret
nop
fdivrs
ljmp
cltd
arpl
push
test
cltd
jge
addr16
inc
das
pushl
dec
fnstcw
fldcw
xchg
pop
arpl
dec
subb
and
dec
fldt
dec
pushf
inc
pushf
cwtd
cld
inc
cld
mov
popf
shrb
in
cmp
mov
pop
xchg
hlt
out
repnz
cmp
es
adc
jl
adc
jae
or
cld
sbb
pop
xchg
in
lods
inc
xor
mov
call
cmc
addl
jne
bound
sub
adc
mov
dec
fs
xchg
push
xchg
pop
mov
fistpll
cmp
ljmp
imul
rorb
in
pop
mov
stos
clc
lret
add
xor
mov
mov
xchg
nop
push
je
testb
inc
cli
xchg
pop
xchg
dec
insl
mov
mov
xor
mov
xor
mov
in
or
cld
call
xor
mov
leave
ss
inc
aad
mov
je
stos
cmpsl
sbb
repz
or
and
test
cli
fcoms
jecxz
cmpsl
int
aad
das
call
pushf
stos
mov
das
aad
fs
and
clc
push
mov
jg
lahf
xor
out
cs
movsl
xchg
shll
out
pop
sbb
or
add
out
rorb
nopl
push
jmp
push
push
nop
sahf
mov
mov
push
sub
addr16
dec
into
and
jge
pop
add
push
pop
lahf
mov
mov
jnp
out
cmpsl
shlb
push
xchg
loopne
and
loop
leave
dec
mov
imul
lret
mov
lret
push
mov
fidivl
mov
in
inc
sbb
mov
jae
xchg
xchg
push
mov
into
or
in
pop
xchg
sbb
xor
inc
cmpsl
cli
sti
outsb
mov
aas
andb
test
fldenv
pop
add
ffree
sbb
mov
das
in
popa
push
mov
add
cmpsb
push
test
adc
jbe
pop
xor
mov
cwtl
fsub
repnz
mov
sub
lahf
ja
lock
push
shrb
sbb
add
pop
sbb
leave
in
insl
fstpt
or
dec
ljmp
mov
cwtl
mov
jbe
adc
adc
jg
dec
int3
pop
add
push
hlt
mov
fs
inc
imul
movsb
sahf
jmp
lods
in
jmp
push
rorl
jge
push
xchg
jg
loope
add
lods
shll
mov
adc
pop
and
sbb
jge
rclb
mov
ljmp
mov
es
repz
clc
int3
or
push
mov
pushf
shrl
lret
dec
into
lcall
dec
or
popf
xor
ss
inc
push
stos
rcr
or
lock
inc
std
cmp
xchg
nop
push
pop
sbb
cmpsl
cmpsl
ljmp
test
adc
pusha
fs
pop
fcos
push
hlt
xor
cltd
ja
or
cmpsl
scas
fldt
sbb
sbb
testb
mov
push
or
out
jle
fwait
lret
notb
clc
andb
pop
lcall
add
adc
icebp
popa
dec
and
sti
cmp
adc
imul
jp
shl
mov
or
mov
enter
inc
into
adc
and
add
cmp
xchg
mov
sub
mov
lock
pop
mov
fwait
arpl
mov
aad
int
mov
mov
loop
mov
inc
out
mov
sub
ja
mov
pushf
lcall
xor
sub
sub
notl
xor
xchg
repz
sarl
pop
rcl
fnstsw
add
hlt
mov
aas
orb
clc
inc
insl
and
mov
adc
jns
imul
int
repnz
jle
cmp
sub
lcall
jno
test
shrb
cmp
testw
cmc
fidivs
aam
mov
jo
fxch
enter
jp
out
mov
lock
sub
mov
cltd
dec
sbb
mov
lds
sarl
pop
mov
cmp
jge
aad
or
test
idivl
pop
insl
mov
sub
mov
cmp
xchg
push
lcall
or
fisttpll
andl
push
mov
mov
ds
insl
mov
push
ret
mov
ss
jns
dec
lods
xchg
cld
adc
wbinvd
testb
jg
mov
mov
imul
ret
scas
cwtl
popl
scas
cmp
shl
cli
sub
arpl
sarl
ret
data16
mov
in
pop
cmpsb
mov
aad
adc
sti
ret
jecxz
insl
iret
pop
or
adc
inc
xchg
xchg
iret
test
stos
xchg
lods
fldl
xchg
or
lods
fildl
gs
add
or
push
push
loopne
push
in
stos
mov
pushf
rcll
aaa
jge
mov
cmp
mov
ss
inc
icebp
cmp
xchg
push
ret
fstpl
add
out
mov
push
lods
adc
xor
shlb
mov
dec
or
lods
mov
scas
inc
ja
jl
sbb
sub
mov
daa
cwtl
aaa
outsl
add
xchg
adc
sbb
xchg
je
push
fistps
cmpsb
xchg
pop
dec
adc
jne
push
lock
add
sahf
jge
pushf
sbb
sub
int
pushf
lret
ret
jp
je
dec
jg
pop
in
push
ret
sbb
add
jmp
sub
fstps
lods
sbb
cmpl
into
cmp
xchg
insb
lahf
lods
jne
int
mov
sbb
aaa
jle
lret
pushf
cmovg
rorl
aas
nop
push
fimull
cmp
push
inc
call
pop
lret
sub
push
or
pop
push
enter
mov
ljmp
xchg
and
or
ds
jle
cltd
mov
dec
mov
jl
jge
push
fistps
add
jb
sub
aaa
mov
mov
pop
rclb
shll
sub
add
cmp
arpl
rclb
shrl
idivb
repz
movsl
inc
repnz
jae
push
push
cmp
mov
xchg
cs
pop
scas
cmp
pop
int3
mov
addl
mov
pop
jl
cmp
mov
mov
subps
jne
xchg
mov
repnz
fiaddl
pusha
loope
sub
je
mov
mov
lods
fcmovne
adc
push
pop
jns
aam
adc
xor
stos
mov
or
ds
popf
ss
mov
repz
cmc
in
sub
and
popf
mov
mov
xor
lahf
out
cmpsb
scas
xchg
jne
fidivrs
sbb
hlt
jo
call
xchg
movsl
sbb
dec
mov
pusha
fsin
lods
les
inc
jmp
or
in
and
daa
sub
sub
add
xchg
ret
fcompl
push
daa
int3
xor
repz
mov
test
ja
mov
sbb
mov
in
push
ljmp
sub
dec
hlt
std
push
sbb
rcrb
xorb
xchg
mov
mov
outsl
jge
sbb
cmpsl
rcl
mov
mov
push
ficoms
push
pop
push
xchg
ret
aam
mov
cmpsb
repz
push
les
fisttpl
subb
sarb
dec
jae
popa
imul
xchg
lock
gs
addr16
pop
lcall
bound
push
movsb
jle
rclb
cwtl
push
test
mov
punpcklwd
inc
dec
testl
sub
clc
or
cmpsb
jnp
rcll
lret
or
test
shl
outsl
clc
neg
push
mov
mov
xchg
jbe
orb
aam
bound
je
gs
pop
push
nop
mov
nop
lods
jno
push
pop
inc
pushf
ljmp
stos
mov
stc
cmp
gs
in
sbb
adc
cli
or
mov
int3
fidivrl
fcoml
and
and
pushf
clc
or
push
sahf
mov
lock
mov
mov
shrb
pop
int
loop
cmp
sbb
icebp
aam
sahf
sub
jge
ret
push
mov
mov
add
cmp
daa
jg
mov
cmp
loop
insl
movsb
imul
sub
stc
in
pop
cwtl
cld
sub
push
out
imul
pushf
lret
mov
popf
mov
push
rol
lret
out
jae
sahf
out
rorb
pop
mov
int
test
jb
fs
imul
rolb
into
addr16
dec
mov
xchg
mov
movsl
mov
dec
add
icebp
movsb
ficompl
jmp
inc
hlt
nop
xor
fs
int
sbb
sarb
jmp
lahf
test
and
xlat
lods
repz
jns
jecxz
fwait
out
pusha
add
jecxz
dec
loope
pop
insl
adc
mov
shlb
mov
inc
pop
mov
sbb
adc
sbb
or
mov
sbb
in
adc
xlat
cs
decl
pop
arpl
pusha
xchg
mov
adc
pop
cltd
test
popa
call
icebp
lret
cmp
jne
jle
jne
pop
add
psraw
std
imul
pop
stc
aad
xlat
or
icebp
push
add
mov
mov
push
div
outsl
rcll
inc
mov
sub
imul
cmp
iret
lds
push
sbb
adc
xchg
dec
jns
mov
add
add
add
in
shrl
in
inc
fdivs
mov
popf
pop
fistl
cmpb
jl
into
add
push
sbb
jno
dec
enter
outsb
mov
es
data16
rcl
loope
xchg
dec
shlw
ficoms
insb
scas
jnp
mov
je
adc
fstps
lods
mov
aas
dec
push
pop
and
lcall
ds
insl
adc
inc
fistpll
cltd
test
movsl
xor
fdivl
jg
sbb
ret
pushf
mov
rorl
sub
ds
stos
pop
sbb
call
jg
dec
mov
sbb
jnp
push
rcll
pop
xor
jl
jne
clc
outsb
sti
ficoml
fdivrs
push
enter
push
cmpsl
jnp
mov
mov
jmp
mov
dec
dec
sub
cmp
gs
dec
bnd
push
mov
pop
xchg
inc
cltd
mov
rclb
adc
fnstenv
stc
cmc
xorl
repz
xlat
aad
xor
cmp
andb
mov
shl
lods
mov
lods
xor
in
and
push
cltd
xor
orl
jg
mov
test
mov
movsb
or
cwtl
ret
xchg
adc
insl
dec
or
jmp
out
lods
mov
xchg
stc
pop
dec
pop
jmp
outsl
stc
sbb
push
or
push
hlt
inc
dec
insl
xlat
dec
mov
cmp
adc
inc
outsl
ds
mov
add
lds
in
inc
add
hlt
orl
ja
sbb
dec
xchg
push
call
jg
sbb
repz
fldt
dec
cmpsb
popf
sub
sbb
imul
mov
mov
fs
mov
dec
into
arpl
dec
repnz
jp
in
outsb
pop
jo
stos
dec
shll
adc
enter
mov
or
mov
js
add
and
or
mov
aam
scas
out
icebp
or
and
jmp
mov
lahf
inc
aaa
rolb
repnz
iret
insb
insl
imul
jp
repnz
ss
pop
mov
pop
fstpt
push
xchg
scas
cmp
out
in
xlat
jnp
test
fwait
sub
imul
sbb
jg
mov
add
jmp
or
roll
cmp
or
xchg
add
flds
xchg
aaa
jle
pop
out
insb
xchg
fstps
scas
mov
loop
jmp
mov
ss
mov
push
lods
inc
adc
subb
push
mov
lods
add
pop
xchg
adcl
dec
or
movsl
jecxz
jae
out
fistpll
imul
or
jle
jle,pn
insb
cmp
pop
add
lods
stc
dec
pop
jecxz
sbb
scas
add
mov
pop
mov
movsb
mov
dec
sub
insl
cmp
push
adc
inc
and
fstpt
in
fadds
das
sbb
popa
mov
std
mov
faddp
cmc
cli
jae
fs
popa
lds
stos
lret
adc
adc
sbb
xchg
push
sub
cmp
outsb
stc
pop
jmp
and
aam
mov
lret
gs
out
test
pushf
arpl
pusha
neg
nop
mov
movsl
outsl
call
adc
cmc
pop
xlat
pop
fdivr
popf
cmp
lock
mov
ret
push
dec
cmpl
lret
std
xor
cmp
pop
cmp
repz
test
aas
inc
loope
dec
adc
mov
pop
dec
repnz
cmp
loopne
rcr
enter
or
in
ljmp
jmp
mov
pop
aas
std
repz
cmc
add
pop
push
lea
jns
hlt
test
xchg
ret
pop
jns
mov
add
sub
ret
sub
jmp
sub
mov
pop
lcall
out
push
jns
mov
rorl
je
mov
mov
into
out
jb
jb
fldl
shlb
push
insb
mov
jb
int3
sub
cmp
dec
mov
push
cmp
adc
stos
fs
enter
decl
sub
jnp
dec
js
push
outsl
push
movl
push
jne
jno
jae
jne
adc
xchg
idivb
pop
cli
dec
xchg
cmpl
fiadds
ficoml
adc
sub
push
mov
stos
dec
mov
into
jle
out
inc
jns
dec
cmp
enter
mov
inc
xor
test
rcr
icebp
leave
xchg
cld
jmp
pop
hlt
jns
xchg
mov
fisubrl
cli
add
rol
stos
rorb
fiaddl
addr16
sbb
rcrb
jno
pop
icebp
daa
lods
xchg
loopne
xor
xor
enter
stos
ret
or
xchg
aaa
or
inc
push
cmp
mov
sti
adc
adc
mov
sub
sbb
aas
mov
push
arpl
cmp
xchg
dec
orb
cmpl
sbb
mov
jns
dec
push
aad
mov
jg
pop
gs
add
mul
mov
and
mov
repnz
bound
pop
mov
inc
das
aaa
mov
pop
mov
ret
test
jecxz
shlb
out
inc
jbe
int3
ror
pop
lahf
jno
lcall
out
loopne
adc
inc
mov
lods
add
jbe
xchg
mov
jecxz
out
dec
repnz
loope
cltd
cmp
fstps
add
pop
mov
repnz
je
adc
fs
or
pop
and
inc
cltd
add
or
fcom
pop
mov
test
push
adc
mov
fwait
mov
and
dec
mov
sbb
test
insl
or
call
movsl
and
mov
mov
data16
cmp
lds
mov
or
loopne
mov
sub
clc
jns
and
rcrl
mov
out
fstpt
fildl
fdivr
push
push
adc
in
sbb
mov
test
inc
fidivrl
test
iret
hlt
sar
jmp
inc
fsubrs
hlt
mov
enter
int
bound
jo
pop
pop
mov
cmp
pop
xchg
int
cltd
sti
cmp
outsl
inc
adc
fisubrs
std
int
or
js
push
gs
jle
dec
arpl
loop
jmp
pushf
jae
fadds
andl
sub
adc
push
push
repnz
inc
testb
clc
and
bound
push
add
loop
mov
fdivrs
adc
add
pop
push
lock
ja
xlat
dec
das
out
int3
xchg
push
fldenv
aas
mov
fs
js
mov
and
jl
mov
icebp
das
mov
or
and
sub
xchg
scas
fwait
xchg
bound
xor
mov
dec
call
in
jbe
lea
sahf
loope
lods
sbb
nop
pop
jle
test
sahf
in
js
iret
jae
sti
xlat
adc
or
jge
outsl
lock
test
das
mov
mov
adcb
lds
push
stos
inc
adc
call
and
cltd
jle
mov
mov
mov
call
inc
or
dec
cmp
push
insb
cmc
std
ss
xchg
add
call
or
push
jbe
add
adc
sbb
pop
inc
sbb
fs
add
loope
popf
mov
sbb
loop
je
mov
ds
int3
repnz
and
ss
es
lret
lahf
dec
mov
out
rcrl
data16
aad
and
sbb
inc
mov
mov
idiv
add
iret
sub
adc
or
loope
aas
pushf
lret
mov
sbb
ret
insb
cmp
push
stc
clc
pop
das
mov
inc
dec
adc
stos
mov
cli
ljmp
pusha
imul
stos
push
xchg
loop
test
adc
cmpsb
xor
xor
mov
aaa
out
out
enter
fildl
add
jge
aad
fs
mov
sub
lahf
in
ret
or
aam
ret
daa
shr
pusha
add
cmp
mov
nop
int3
add
outsl
mov
sub
mov
sub
daa
pop
nop
stos
inc
xor
cmp
inc
xchg
stos
inc
add
cwtl
mov
dec
ljmp
inc
in
loope
cmpsl
pusha
pushf
es
inc
cwtl
out
lods
loope
inc
sub
sbb
jp
inc
mov
into
movsl
movsl
ret
cs
cmp
mov
nop
mov
out
enter
mov
lods
test
add
dec
dec
cmp
or
fs
sub
inc
mov
ss
jb
shrl
mov
mov
cmpb
lcall
xchg
jecxz
push
stc
sbb
lret
mov
fldl
pop
popf
cmp
outsl
or
cs
or
mov
pop
mov
repz
int3
push
xor
scas
mov
fdivp
lds
ljmp
lret
out
push
jmp
push
clc
and
jmp
or
lret
adc
js
adc
pop
stos
adc
sbb
enter
enter
stc
mov
sarb
adc
inc
movb
and
dec
das
xchg
lcall
fmul
mov
dec
aam
adc
pushf
jle
sbb
pusha
into
ljmp
ss
xchg
jge
and
cwtl
mov
ret
and
jge
lahf
mov
shrl
shl
adc
rcl
inc
and
jb
fwait
and
mov
movsb
in
test
cmc
sub
mov
cmpb
fcomps
xlat
pop
jno
sub
dec
lret
sub
pop
add
mov
notl
sub
mov
xor
dec
and
ficomps
cld
lds
sbb
div
call
mov
int3
push
mov
imul
jnp
push
xchg
shlb
pusha
mov
sbb
mov
sbb
mov
mov
inc
lock
pop
push
mov
xchg
ret
and
dec
lret
lods
in
push
fcoms
mov
mov
je
outsl
push
jne
ficoml
inc
fstps
insb
and
sub
pop
dec
fcmovne
pop
das
je
cwtl
jge
lds
jno
fidivl
mov
lock
xor
and
test
ret
leave
pushf
fs
xchg
inc
add
xchg
push
mov
pop
inc
jmp
sar
arpl
add
loopne
push
sbb
xor
lods
rcll
push
push
lcall
mov
mov
jo
popf
repz
iret
add
sbb
dec
and
push
inc
jo
mov
sub
aad
jae
ds
push
loope
insl
mov
adc
adc
xor
iret
sbb
jnp
adc
iret
aas
ljmp
mov
mov
and
and
les
pop
inc
adc
imul
int
mov
inc
fwait
shlb
push
je
mov
xchg
push
push
push
test
dec
ret
mov
ljmp
inc
leave
ss
adc
out
bt
pusha
test
cmp
lock
call
adc
repnz
std
js
outsb
fiadds
inc
jmp
fdivs
mov
cmp
inc
and
nop
lcall
push
cmp
jg
or
mov
jecxz
movsl
push
push
jns
jle
dec
push
nop
fmull
fisubs
add
psubq
fisubrl
pop
sbb
xor
adc
jl
testb
mov
pop
cmp
mov
shr
mov
rol
push
rclb
push
dec
aas
stos
ror
dec
jne
add
mov
sub
cli
loope
and
cmpl
jne
pop
mov
sbb
sbb
xchg
mov
mov
hlt
pop
mov
or
cltd
negb
cmp
jnp
pop
mov
nop
jge
push
lahf
push
arpl
repnz
out
jp
fstps
ljmp
dec
adc
jo
jecxz
dec
out
jae
in
cmp
adc
jns
scas
adc
sbb
sub
mov
aam
sarb
outsl
hlt
mov
mov
xchg
and
push
out
lcall
sbb
aas
sti
sar
stos
mov
hlt
aam
add
ja
adc
dec
sub
outsl
fnsave
stc
dec
adc
test
out
inc
mov
test
lret
pusha
pusha
int
insl
popa
scas
pop
iret
jp
dec
xor
dec
stc
fidivs
movsl
xchg
je
insl
mov
mov
aas
ret
jle
mov
lods
push
mov
stos
imul
jp
mov
lea
inc
ret
pop
movsl
mov
push
adc
fadd
aad
push
dec
ds
add
jmp
xlat
push
fs
and
mov
arpl
hlt
push
subb
popf
movsb
mov
aaa
add
ret
inc
jge
xchg
pop
sub
pop
outsb
sbb
inc
xor
sarb
lock
ffreep
daa
in
dec
mov
mov
ficoml
out
xor
add
jnp
xor
out
cmp
fwait
jp
sbbb
mov
add
cmpsb
mov
repz
fisubrl
xchg
adc
pop
xchg
pop
lret
loopne
aas
cltd
enter
cmp
jg
adc
movsl
push
xchg
push
jnp
sub
jns
adc
pop
mov
mov
test
aaa
inc
lret
xchg
sub
je
sub
movups
gs
mov
enter
rcl
pop
dec
inc
pop
mov
xchg
lahf
mov
scas
test
push
cmp
mov
jge
jmp
lcall
pop
leave
push
imul
repz
sti
jle
fisubl
pop
push
rcll
jge
cld
cmpsl
add
mov
cli
add
xor
or
adc
iret
mov
fs
lret
xor
cltd
jb
adc
dec
in
addl
hlt
cmp
sbb
dec
or
aam
inc
dec
cmp
jl
mov
test
cmpsb
mov
lahf
mov
sbb
pop
adc
add
and
dec
push
fadds
call
scas
cs
mov
ficoms
push
lods
inc
sub
mov
pop
fcmovnbe
mov
adc
jo
int3
ret
jne
std
es
xchg
out
and
jecxz
dec
add
mov
push
sub
lahf
and
push
adc
rolb
pop
aaa
ret
test
es
sbb
imul
in
inc
ret
andl
mov
add
mov
pop
pop
mov
pop
mov
sub
aaa
xlat
lock
push
inc
adc
mov
adc
xor
mov
es
pop
clc
mov
dec
or
mov
lds
ret
xchg
fsubrl
jge
jecxz
cmp
mov
push
jmp
scas
mov
pop
sub
mov
fisubrs
jp
sbb
inc
mov
or
rorb
mov
push
pop
mov
iret
or
jns
test
fdivrl
and
cmp
lahf
xor
stos
push
push
cwtl
fbld
cmpl
dec
popf
sub
sub
mov
sub
jecxz
iret
fs
xor
sarb
or
adc
ret
jb
cmp
mov
sub
xchg
xor
mov
xchg
adcl
xchg
xor
xchg
mov
jmp
enter
or
mov
aam
push
lock
adc
push
dec
lock
arpl
aaa
mov
jne
mov
jmp
mov
cmp
or
pushf
xor
push
jae
dec
adc
in
xchg
push
jb
ss
mov
adc
cmpsl
xor
xor
jb
or
fsubrs
xor
popa
inc
cmp
out
jne
mov
xor
cmpl
xchg
pusha
xchg
pushf
mov
xlat
sbb
xor
scas
sbbl
lods
mov
push
cltd
outsb
jecxz
xchg
xor
or
js
and
push
push
and
mov
xchg
sahf
dec
ss
jno
inc
sub
clc
out
jb
sub
cwtl
xor
pop
xchg
jle
add
mov
popf
mov
insb
jmp
ja
and
or
test
and
daa
xor
push
mov
cwtl
pop
bound
cmp
mov
lods
sub
inc
imul
inc
pop
adc
std
xchg
lock
inc
add
xchg
mov
inc
jbe
cmc
pop
push
outsb
cli
popf
push
and
pusha
push
mov
std
sahf
xlat
jne
jae
lret
inc
shll
or
ret
push
incb
cmp
push
testb
push
add
std
pushf
cmpsl
xchg
stos
xchg
into
add
in
sahf
and
cmpsb
loope
imul
cmp
push
ror
mov
aam
inc
incb
mov
lcall
js
nop
popf
pop
rcl
hlt
dec
lds
outsb
adc
dec
cmp
out
inc
int
loopne
and
pop
mov
jge
frstor
das
cmp
mov
out
mov
fs
fs
mov
xchg
les
sahf
pusha
popf
test
jg
ret
mov
movsb
fsubrp
sbb
in
sub
imul
mulb
and
lcall
stos
jo
nop
or
add
xor
pop
dec
sahf
ret
pop
push
mov
adcb
push
mov
cltd
inc
data16
sahf
inc
mov
jnp
or
call
cli
mov
movmskps
lods
jp
adc
lcall
push
mov
mov
daa
jmp
jge
out
jae
pop
nop
cmp
sub
mov
sbb
data16
and
xor
fisttpll
push
daa
mov
jb
adc
adc
mov
insl
in
test
mov
xchg
shl
jns
stos
jne
daa
int3
punpckhwd
stos
mov
in
sub
lds
fistpll
mov
aas
pop
inc
sbb
loope
ss
sub
xor
sahf
xor
push
pusha
outsl
cmp
xchg
lock
cld
push
cltd
shrb
fmuls
xlat
cmpsl
mov
fucomi
cmp
xor
and
scas
and
mov
ret
mov
shl
and
pusha
fsubp
inc
movsl
ja
dec
lock
repz
lcall
push
push
add
dec
insb
push
xchg
jb
fbld
jl
xchg
inc
inc
xor
imul
sbb
pop
imul
lods
repz
jecxz
mov
scas
sbb
leave
outsl
or
dec
mov
mov
xor
add
gs
test
dec
mov
lret
or
sbb
or
mov
iret
jo
sbbl
int3
or
pop
push
sbb
adc
out
cmp
lea
lods
sub
jmp
adc
pop
das
ss
pop
mov
dec
fildl
and
rcrl
push
orl
dec
push
stos
or
xor
iret
push
mov
push
push
aam
rorl
push
sbb
push
mov
mov
xabort
pop
push
test
pop
push
mov
prefetchw
push
nop
cwtl
xor
xor
ret
leave
cmpxchg
aam
add
sub
jae
and
js
xor
pushf
and
icebp
lock
shll
mov
inc
mov
push
xor
jno
and
adc
cwtl
and
xor
popf
negl
nop
filds
jge
sub
das
shl
add
pop
shlb
incl
pop
sub
push
icebp
sub
js
dec
jmp
leave
adc
or
dec
testl
sbb
lods
jne
xor
loop
adc
add
fidivl
cld
nop
movsl
popa
mov
sbb
sbb
push
jbe
iret
das
movsb
outsb
adc
push
jge
cld
in
cli
and
jmp
jge
push
push
pop
lods
lds
jge
rolb
or
jge
orl
insb
add
mov
fs
cltd
out
cmp
repnz
cmpsb
aaa
stos
adc
cmpsl
inc
loopne
test
je
mov
stos
and
aas
sbb
pop
dec
outsb
push
testb
int3
stos
pop
fisubrl
pop
jo
flds
dec
nop
push
pop
out
jnp
jns
ds
sahf
mov
and
in
cld
ds
push
clc
jge
rcrb
fsts
dec
les
gs
arpl
iret
cli
sub
adc
inc
addr16
pop
push
arpl
icebp
pop
pop
or
adc
mov
xchg
inc
sbb
jmp
adcl
jmp
mov
pop
mov
fwait
sub
mov
in
arpl
out
cmp
fsubl
int
rcrb
bound
mov
ljmp
in
mov
mov
sub
cmp
sti
push
call
js
and
sbb
hlt
xchg
fildl
mov
xchg
push
into
sub
inc
or
js
test
add
flds
add
xor
mov
ficomps
mov
test
cmc
push
jns
xor
es
adc
addr16
pop
iret
add
movsl
push
push
subl
jo
and
sub
icebp
out
shll
push
cs
dec
repnz
clc
loope
arpl
or
or
add
outsl
cwtl
idivl
out
cmp
pop
push
stc
les
pushf
int
test
sub
and
jbe
lret
repz
inc
lahf
pop
mov
js
push
ret
inc
push
push
push
ljmp
dec
mov
dec
and
js
lret
jge
or
bound
cli
pop
aaa
enter
icebp
popf
es
mov
adc
inc
mov
mov
mov
int3
dec
jb
xorb
dec
sbb
call
or
cmpsl
fnstcw
lea
scas
cmp
cmp
mov
gs
jns
push
jp
inc
mov
and
sti
test
xchg
xlat
push
out
xchg
pop
js
pop
arpl
dec
jge
fildl
das
lahf
fldz
push
dec
das
test
cmpsb
addr16
test
ljmp
adc
mov
pop
mov
jnp
faddl
or
out
and
mov
jmp
push
cmpl
aad
js
pop
sarl
test
mov
pop
shlb
lea
jae
mov
pop
movsb
add
or
shll
inc
mov
inc
or
scas
ficoms
mov
pop
das
mov
and
incb
dec
negb
mov
and
cmp
cmp
or
stc
mov
or
xor
jmp
mov
and
andb
fbstp
adcb
jnp
or
xchg
movsb
dec
mov
ss
dec
cmp
insb
repnz
lret
pusha
and
popa
or
cmc
push
mov
addl
nop
clc
insl
jecxz
hlt
cmp
leave
sti
cld
sub
dec
rorb
mov
xchg
clc
movsb
rorb
add
inc
in
mov
ficomps
mov
imulb
mov
test
fistpll
ret
push
mov
mov
add
sub
clc
and
aad
mov
aam
scas
mov
pop
adc
icebp
mov
push
sub
inc
inc
fwait
mov
lods
aaa
std
jmp
loop
shr
jg
sub
sbb
adc
in
mov
lret
mov
subl
mov
sbb
test
push
xchg
pop
mov
sub
scas
jge
fmuls
xchg
mov
jle
mov
xchg
xchg
and
inc
scas
ss
pop
adc
mov
xlat
cmp
rol
roll
inc
cmp
lock
xchg
pop
scas
stc
mov
std
test
and
shlb
cmp
ljmp
dec
push
outsl
cmp
and
daa
jge
stos
inc
mov
push
jg
fs
cmc
out
xor
mov
hlt
xlat
sbb
pop
inc
and
mov
ficomps
fucomip
iret
mov
stc
dec
xor
adc
call
sub
pop
mov
push
xchg
roll
xlat
into
scas
push
pop
in
test
xchg
mov
addr16
ss
cli
popa
lock
cmp
cmp
jmp
push
adc
aad
out
sbb
orl
int
add
jmp
mov
sbb
stos
mov
int
lods
mov
in
lret
mov
cmpsb
mov
movsl
daa
or
push
pop
insb
dec
mov
push
inc
mov
xchg
frstor
add
add
loope
divb
lods
fsubrs
lret
push
test
mov
xorl
mov
adc
testl
out
icebp
fnstcw
repz
jl
xchg
pusha
mov
in
sarb
dec
push
sbb
pop
bswap
mov
sarl
fs
or
js
xor
jmp
mov
xor
or
pop
mov
xchg
mov
clc
ss
std
cwtl
aaa
cmc
jmp
pop
insl
or
xchg
aas
mov
lret
lret
inc
and
stos
adc
ret
cmc
pusha
add
sub
push
mov
adc
in
push
dec
jecxz
leave
pop
popf
xor
icebp
loop
mov
scas
xchg
nop
fdivrl
subb
fiadds
dec
sbb
sbb
pop
adc
lods
or
cli
ret
xor
sbb
mov
push
inc
pop
fcmovnbe
pop
ror
idivb
pop
mov
jns
je
lret
push
xchg
and
mov
daa
inc
add
enter
inc
add
shll
test
popa
andl
and
xchg
mov
popa
pop
add
xor
out
in
aas
arpl
out
pop
pop
sub
inc
jno
pop
lods
mov
mov
int3
pop
sbb
jne
lahf
lods
out
add
lret
dec
test
jns
mov
mov
xor
cmc
rclb
push
jecxz
jg
clc
pop
mov
pop
nop
fiadds
cmp
leave
pop
mov
arpl
push
ja
xchg
fcmovnu
push
pushf
rclb
adc
mov
mov
inc
pop
and
mov
ret
cmpsb
lock
xor
imul
andb
mov
sbb
or
out
mov
xchg
sbb
pop
sbb
nop
out
push
dec
jne
sbb
fnsave
sbb
lsl
mov
hlt
or
push
jo
arpl
ret
adc
sub
es
pop
or
mov
outsl
mov
int3
jp
or
xor
mov
nop
xor
and
arpl
xchg
xchg
das
push
in
sub
jae
sbb
fsts
les
shl
xchg
sbb
adc
jmp
sub
pushf
es
dec
mov
push
sbb
mov
test
movsb
pop
mov
ja
je
jne
mov
out
hlt
movsb
dec
or
mov
jno
pop
inc
mov
icebp
cmp
enter
fwait
sub
inc
sub
ss
mov
and
aam
lock
call
push
xlat
stos
sbb
outsl
push
jge
pop
in
mov
testl
pop
cmp
hlt
insl
fldl
jmp
je
mov
or
inc
sub
scas
test
dec
cmp
push
push
push
rorl
sub
ljmp
inc
aad
pop
ret
icebp
jmp
inc
pusha
fidivrs
cs
das
sahf
test
mov
adc
or
xchg
cli
sbb
dec
into
jno
xorl
jne
adc
mov
and
sub
inc
cmp
pop
pop
xchg
lds
mov
dec
mov
jge
mov
push
cmp
adc
insb
inc
mov
add
lock
data16
in
mov
inc
nop
movsb
stc
or
pushf
add
sub
insb
mov
sub
inc
lods
mov
ja
push
inc
fistpl
dec
imul
je
iret
pop
into
ss
out
push
frstor
adc
sub
add
cwtl
out
call
inc
lea
jl
int3
or
adc
stc
mov
loope
mov
mov
inc
rcr
mov
jns
rclb
xor
gs
fiadds
dec
jmp
in
and
imul
and
inc
xor
fistps
js,pn
push
cli
imul
pop
stc
setp
add
fwait
dec
mov
test
sarl
push
mov
xor
repz
data16
pushf
jne
pop
add
imul
xor
cli
pop
mov
aaa
outsb
or
pop
std
mov
cmc
push
imul
or
jmp
sub
mov
jmp
push
xor
cld
mov
cltd
shrb
cld
mov
add
adc
or
call
sbb
pop
mov
cwtl
ficompl
dec
into
sbb
jo
dec
add
loopne
sbb
shlb
roll
jg
std
cmp
adc
push
cmpl
jae
cltd
xchg
jge
push
pop
lret
pop
adc
ss
fsubr
mov
cmp
mov
push
mov
shll
lods
jecxz
cmc
inc
sti
pop
cs
in
loop
add
and
nop
and
sarl
cld
es
push
xchg
jg
dec
fmuls
cmp
add
je
push
mov
inc
jg
insl
xchg
mov
cmp
adc
ja
adc
ret
pop
call
sbb
aad
nop
pop
popa
or
inc
cmp
xor
jl
int3
xchg
nop
xchg
xor
cwtl
hlt
pop
sbb
mov
cmc
lahf
ret
daa
sub
adc
das
jb
push
sbb
orb
sub
sbb
dec
fs
sbb
stc
sbb
cmp
dec
xchg
cmpsb
les
inc
jle
or
je
pop
jae
pop
or
iret
fbld
ret
fisttpl
int
lds
pop
cmp
fstpt
adcb
cmp
sub
dec
push
mov
adc
and
xchg
test
arpl
add
adc
xchg
pop
inc
in
ret
and
push
inc
push
push
clc
iret
jae
mov
cmpsl
and
mov
sbb
push
test
sbb
pop
mov
call
outsb
xchg
inc
sar
mov
out
fbld
inc
imul
mov
loop
mov
add
aaa
daa
jle
jns
pop
jno
jp
lcall
and
cmp
dec
pop
rclb
mov
adc
cmp
or
daa
inc
inc
in
in
fsubrl
dec
jb
and
fsubs
fstpl
dec
xchg
fldl
xchg
enter
repnz
cli
xor
and
cmpsb
aam
lock
adcl
push
addb
add
sbb
shlb
aas
outsl
add
out
and
add
ret
push
push
in
cmp
xor
js
sbb
jl
call
jge
ror
nop
pop
out
and
dec
into
xor
out
and
dec
and
pop
lods
push
push
cli
sub
cmp
loope
jecxz
pop
cmp
and
sahf
jmp
outsb
inc
lret
cli
adc
xor
push
lahf
shrb
xor
pop
sti
xchg
push
add
imul
sbb
xor
xchg
push
cmp
add
cmpsl
pop
mov
dec
scas
add
enter
lods
mov
pop
sub
bound
push
push
mov
repnz
cmp
lret
lea
xor
and
hlt
inc
dec
xor
mov
inc
idivl
sub
movsb
mov
lock
jp
jle
imull
push
pop
ds
dec
pop
enter
dec
jbe
or
sarl
inc
inc
add
and
adc
popl
xor
cltd
sahf
push
sub
adc
repz
push
mov
sub
jg
mov
idivb
mov
loope
inc
fwait
cmpsl
lods
mov
jp
xor
inc
lret
imul
fwait
mov
subl
cwtl
inc
xchg
fcmovbe
push
add
push
adc
add
test
call
xchg
cmp
or
mov
adc
mov
or
sub
je
pop
cmc
mov
lods
popa
or
aad
cs
out
cmc
add
fwait
cmp
cmpsb
test
inc
insl
mov
or
or
inc
mov
es
sub
lods
ljmp
fsub
push
sub
dec
call
and
fiaddl
mull
lods
in
pop
dec
orb
repz
sbb
xor
fdivr
shlb
cwtl
and
aad
stos
repz
pop
outsb
adc
cld
and
xor
sbb
push
int
sbb
xchg
push
mov
sub
pop
mov
negl
out
dec
ds
xchg
shll
mov
jae
cmp
pop
adc
lods
push
and
cmp
jno
pop
sub
mov
pop
mov
mov
stos
test
test
sbb
popa
pop
es
loopne
int
pop
mov
mov
inc
ds
loopne
test
push
out
push
mov
arpl
jbe
inc
adc
mov
sub
divl
jp
mov
add
inc
jae
mov
pop
jmp
loopne
clc
mov
dec
cmp
xchg
xchg
xchg
cmc
push
push
sub
inc
mov
and
push
test
xchg
push
test
rcrb
movsb
jle
dec
xchg
cmc
and
xor
loope
pop
data16
enter
sub
xchg
dec
rorb
jnp
cld
in
mov
lss
push
xchg
jbe
scas
icebp
pushf
jl
jmp
ret
xchg
pushf
stos
popa
inc
dec
push
adc
scas
dec
mov
xchg
test
les
pusha
cs
xor
insl
lods
mov
pop
jo
cs
mov
or
clc
lret
xlat
scas
icebp
or
stos
out
sub
pop
push
add
xor
test
cmp
stc
pusha
mov
add
cmpb
xor
in
fmuls
outsb
lods
movsb
mov
or
arpl
fs
push
inc
mov
jo
xlat
daa
dec
and
or
mov
popa
mov
outsl
mov
test
cmpsl
mov
mov
fildl
pop
movsb
mov
scas
ficoms
pop
sbb
sbb
inc
in
mov
shr
daa
mov
sbb
pop
test
in
pop
lock
dec
sub
arpl
in
inc
push
cmc
loop
inc
nop
add
pushf
and
cmp
and
mov
lret
xor
shll
sbb
sbbb
je
addr16
push
xchg
pop
pusha
hlt
add
jne
cmp
xchg
mov
jo
mov
jns
in
adc
in
inc
scas
addb
mov
loop
sub
jno
jg
xchg
in
or
xor
out
xor
jns
xchg
adc
ja
inc
xor
dec
xor
mov
cmp
lods
fildll
cmp
shrl
mov
leave
out
xchg
xchg
bound
adc
xor
rcll
sbb
dec
in
mov
mov
xor
cmp
sarb
xchg
fwait
pop
sbb
repz
adc
iret
ds
lahf
test
aam
movsb
lahf
rolb
fistpll
imul
adc
sub
mov
mov
or
xlat
adc
jmp
jle
orb
push
push
and
push
stc
push
push
gs
jae
jo
mov
js
scas
cmp
or
popf
or
push
push
test
shlb
fisubs
pop
insl
sbb
sti
lcall
sbb
push
in
mov
mov
mov
int
sahf
cltd
clc
pop
jae
xor
mov
scas
cmc
out
xchg
pop
mov
cmp
cmpsl
leave
push
lcall
dec
loope
ret
iret
leave
cwtl
loop
xor
cmpsb
mov
sti
xchg
int3
iret
notb
inc
pop
repnz
mov
push
jg
imul
inc
cmp
aaa
stos
iret
sub
push
popf
xchg
jae
pop
dec
int
and
les
in
jnp
stos
data16
and
xchg
js
daa
in
js
or
push
sti
in
es
sub
scas
mov
xor
push
aaa
sbb
and
cs
ja
addb
or
and
ret
jge,pt
fadds
int
mov
int
popf
mov
cmp
jns
cmpsb
fsubl
out
les
fldl
mov
stos
add
es
scas
add
jns
sub
sub
inc
mov
lods
imul
loop
dec
fdivp
leave
adcl
mov
aas
xchg
aam
push
dec
and
sbb
mov
cld
lods
sbb
mov
push
inc
jmp
shrl
pop
imul
in
cmpsb
in
or
shrb
scas
inc
daa
mov
ret
sbb
or
mov
in
mov
dec
mov
out
lods
xor
mov
mov
cmp
xor
popfw
sbb
mov
jo
out
jg
jl
add
sti
lahf
pop
dec
cmp
mov
inc
cmp
xor
enter
into
mov
push
pop
inc
add
sub
lcall
mov
mov
in
cld
push
sbb
sbb
imul
jecxz
pop
lea
mov
idivb
fmull
dec
and
imul
popf
pop
bound
mov
inc
gs
mov
int3
mov
js
add
push
adc
push
push
fsubrl
inc
out
lods
test
fidivrs
cltd
rcrl
mov
jno
jl
pop
clc
sbb
cld
xchg
dec
xchg
push
pshufw
push
rep
js
cmp
lcall
mov
and
je
ljmp
xor
stc
mov
loop
shlb
scas
sahf
cmpsb
std
sbb
jo
nop
je
cmp
int
push
or
or
xor
jg
clc
pop
scas
cmp
or
dec
int3
out
add
lock
adc
arpl
xchg
mov
loope
lods
stc
xor
push
loopne
sbb
ret
jl
push
ret
ja
sub
cltd
or
push
push
cmpsl
test
xchg
fsubrl
faddl
pop
imul
sbb
push
push
or
filds
mov
adc
push
push
int
inc
xchg
imul
int3
out
xor
add
xor
je
xchg
scas
mov
push
ret
mov
add
enter
mov
ss
mov
mov
xchg
dec
sahf
push
test
push
push
aas
lret
addb
push
jl
push
push
push
fwait
adc
ds
cmpl
outsb
outsl
sbb
and
push
ret
pusha
arpl
mov
push
pop
test
hlt
ret
ds
jp
mov
mov
add
or
pop
jle
jne
push
movsl
inc
and
ret
loope
jno
shlb
pop
cli
jns
loopne
adc
mov
orl
clc
loope
sarl
mov
mov
fwait
cmp
fimuls
sbb
pop
ja
stc
hlt
sub
mov
mov
cmpsl
or
inc
jle
loope
xchg
jl
xchg
sub
push
jle
mov
call
xchg
cmp
movsl
sbb
mov
insl
mov
xor
loope
adc
fmull
addr16
mov
jno
daa
daa
jae
adc
test
mov
xchg
imul
test
out
adc
call
push
sub
shrb
push
fdivrs
int3
dec
in
or
pushf
and
dec
pop
add
jo
cmpsb
jp
fs
inc
inc
mov
ss
pop
cmpsb
cmp
outsb
pop
testl
rcl
dec
std
out
out
jno
fs
cwtl
hlt
dec
jno
stos
cmpb
jl
es
mov
shrl
inc
fs
imulb
adc
hlt
loope
sbb
imul
movsl
inc
stos
cmpsb
cmp
mov
int3
mov
cmp
loop
push
jae
movswl
pop
ja
or
shlb
or
inc
loope
inc
or
inc
sbb
push
ds
sub
imull
pop
xor
rcll
jl
sub
xlat
shll
adc
mov
xchg
push
popf
push
popa
insl
mov
jge
xor
into
mov
jnp
lcall
ss
jg
adc
in
aas
push
xor
sub
adc
pop
ds
test
adc
xchg
mov
xchg
fstps
jle
inc
sbbb
std
mov
pushf
add
scas
fisttps
pop
mov
in
xchg
mov
pushf
mov
add
add
add
push
dec
xchg
xor
mov
decl
stos
xor
inc
in
xor
arpl
cmp
push
shlb
out
xchg
dec
push
mov
ret
shll
dec
insl
xor
test
pushl
dec
and
cld
out
or
aad
dec
mov
inc
lea
xchg
shll
faddl
test
jo
mov
jns
jg
fadds
rorb
dec
push
mov
mov
mov
and
out
sbb
push
pop
in
jno
rolb
das
nop
mov
stos
data16
xchg
adc
jnp
and
adc
aas
mov
ret
shl
mov
add
fldt
pop
inc
rcll
and
push
push
cld
pop
aas
data16
lea
jg
jge
repz
jb
ret
in
xchg
add
sbb
xor
repnz
loop
ss
inc
push
stos
mov
filds
add
js
mov
pushf
aad
add
iret
test
and
push
jge
mov
scas
repnz
arpl
push
shrl
push
in
lea
fldcw
fwait
loopne
aas
enter
push
shl
ljmp
hlt
sub
mov
neg
lods
lock
ret
mov
adc
loop
push
sti
or
or
mov
lods
loopne
loop
lahf
shl
jbe
icebp
pop
push
loop
dec
push
test
lret
inc
mov
rorb
jmp
cmp
in
fidivrs
xchg
je
mov
in
cmp
mov
inc
jecxz
cmp
inc
jmp
movsl
xchg
fs
mov
and
insb
jecxz
push
in
inc
les
addr16
and
in
sahf
in
mov
rep
jae
pop
dec
repz
jle
mov
xor
lods
push
and
jbe
jnp
mov
cs
adc
arpl
sub
jns
sbb
in
push
aas
scas
inc
jno
push
iret
enter
stc
ret
test
pop
and
inc
lock
lahf
lods
jle
sbb
sahf
mov
mov
repz
cltd
bnd
sbbb
dec
push
jl
cmp
pop
mov
mov
stc
mov
js
inc
jbe
mov
jae
xchg
insb
aaa
xor
fsubrs
lods
repz
popa
bound
jmp
mov
scas
or
jne
push
lret
push
sbb
jb
jns
in
scas
or
int
cwtl
inc
lret
or
add
dec
xchg
insl
inc
lods
mov
in
aaa
inc
mov
fnstenv
sbb
push
inc
lret
popa
cmp
into
push
xchg
addr16
inc
mov
mov
cld
idivl
shl
lret
and
pop
aaa
icebp
fbstp
adc
into
mov
aad
xchg
popf
mov
sub
mov
cwtl
xchg
jo
cmp
xchg
add
cli
jae
aas
leave
cmpsb
dec
push
jmp
out
mov
xorl
push
and
leave
sbb
xor
test
mov
sarl
call
adc
adc
pop
pop
dec
add
mov
sbb
or
sbb
loope
pushf
mov
call
lods
les
das
mov
mov
fistl
lahf
mov
or
insb
arpl
loop
mov
aas
mov
jae
divl
mov
imul
jns
cmp
mov
adc
dec
push
mov
pop
arpl
mov
fcoml
jbe
popf
stos
xchg
enter
cmpsl
or
inc
sbb
arpl
add
mov
outsl
mov
cmp
pop
add
push
add
mov
adc
sub
inc
cmc
add
lahf
nop
pop
xchg
xorb
add
push
add
out
pop
clc
xchg
out
fwait
popa
dec
cmpsb
dec
inc
imul
aas
adc
dec
lcall
call
pop
clc
push
mov
aad
mov
ljmp
stc
mov
sub
out
ret
lcall
xor
dec
pop
adc
pop
outsl
sbb
push
ret
popa
xor
jge
repz
jnp
jmp
adc
lahf
add
push
fisubs
test
lret
gs
cmpsl
jge
fcomip
daa
das
divl
sub
orl
nop
sarl
and
inc
addr16
mov
enter
or
pop
pusha
mov
cmp
push
adcl
aad
pop
int
mov
push
xor
add
test
fs
xchg
sarl
test
xor
mov
aad
jb
adc
push
sub
xchg
pop
out
or
addr16
or
popf
inc
imul
dec
clc
push
rorb
cmp
fwait
and
mov
or
out
movsb
xor
inc
in
sti
cmpsl
cmpsl
sbb
jbe
cmp
icebp
pop
sub
mov
lcall
faddl
and
mov
js
mov
in
adc
jb
sbb
shrb
add
mov
mov
mov
mov
fidivrl
push
test
rcrb
inc
bound
nop
sub
into
int3
mov
clc
sub
roll
pop
jne
mov
push
iret
pusha
aad
outsb
sbb
in
mov
xchg
cmp
lods
nop
jae
inc
aaa
pushf
icebp
test
pop
sub
scas
inc
jae
insl
loopne
inc
ss
lea
pop
out
lock
outsb
aad
jecxz
xor
lods
push
aaa
roll
rol
pusha
gs
imul
xor
jbe
lods
pop
push
out
pop
inc
mov
jmp
or
sbb
out
lret
ffree
or
jp
cmp
pop
mov
pop
popa
jno
jmp
pop
out
popa
outsb
mov
dec
ret
mov
sub
add
adc
leave
add
pop
mov
sub
lret
loope
fstpt
sar
test
or
jbe
mov
fidivrl
mov
push
stos
fwait
sbb
add
jmp
mov
mov
pop
daa
xlat
mov
sbb
test
and
xchg
idivb
mov
sub
add
outsl
sbb
cmp
pop
adc
jnp
inc
mov
jmp
push
push
dec
ja
mov
mov
xchg
push
out
sbb
repnz
jo
fwait
lcall
repnz
mov
mov
push
daa
mov
fstpl
push
outsl
lock
std
js
jmp
mov
cld
cmpsb
and
das
das
outsl
mov
xlat
ss
enter
iret
or
mov
outsb
jne
ds
mov
shrb
pop
leave
pop
pop
and
and
mov
gs
into
andb
sahf
xchg
mov
mov
pop
ljmp
stos
cmp
push
jg
xor
mov
or
cld
out
and
dec
cmp
mov
sbb
test
inc
adc
scas
imul
add
lret
in
enter
hlt
cmc
xchg
jbe
mov
pusha
push
xchg
cmpsb
pop
jb
stos
outsb
mov
adc
in
sub
mov
loope
mov
and
xor
mov
popf
cmp
nop
sti
enter
aas
mov
cmpsl
cmpb
lret
mov
xor
in
scas
fdivr
leave
jle
mov
es
aaa
add
rorl
add
repz
push
add
mov
or
outsb
sbb
stos
aas
jae
jp
in
mov
test
stos
repnz
dec
and
pushf
cmpsb
xchg
jbe
jmp
pop
aad
xchg
or
js
sbb
or
inc
idivl
popa
mov
cmp
adc
adc
mov
daa
and
cmp
subb
push
pop
inc
insl
imul
arpl
int3
pop
data16
pusha
add
insl
test
hlt
mov
xor
xor
stos
or
pop
bound
pushf
and
and
jmp
and
sahf
nop
les
mov
out
test
jnp
xchg
pop
mov
gs
ret
and
jle
ljmp
mul
into
xor
adc
xor
pop
sbb
shrb
test
jne
pop
call
scas
scas
pop
shll
push
out
push
sbb
stc
popa
xchg
sub
lret
int
imul
fstps
mov
cs
sbb
mov
imull
outsb
sbb
cmp
out
xor
addr16
jle
loope
int
ficompl
pop
mov
jl
int
cwtl
sub
pop
into
int
xchg
out
or
xchg
adc
dec
cs
mov
and
or
cmp
jb
sub
in
faddl
cmpb
addr16
xor
mov
ja
inc
add
dec
iret
jl
dec
cmp
stos
pop
inc
fidivl
xchg
mov
loope
and
mov
jmp
xor
arpl
dec
std
jnp
mov
cmp
inc
mov
mov
push
cmpsb
sbb
jo
inc
jle
mov
mov
dec
rcrl
sbb
and
sbb
ret
mov
adc
cmpsl
push
in
cmp
xor
fs
jno
lock
dec
sbb
dec
jnp
xor
sbb
stc
pop
lret
cmp
sub
mov
xorb
jbe
ret
push
aad
cwtl
nop
shll
or
dec
push
dec
ret
mov
mov
pop
gs
es
bound
jb
mov
sub
aam
mov
jae
pushf
jnp
outsl
pop
inc
inc
inc
aad
stc
jp
sub
and
in
xor
mov
adc
cwtl
int
xor
call
mov
cmpsb
rcrb
mov
and
mov
lret
fsub
push
push
imul
mov
adc
mov
loopne
out
dec
repz
push
mov
pushf
lcall
adc
push
pop
cmpsb
add
push
push
xchg
push
xchg
stos
call
adc
adc
xchg
sbb
lock
sahf
pop
fistl
lds
shrl
inc
mov
ret
mov
cmp
into
aas
insl
push
mov
std
out
mov
ret
iret
sbb
inc
mov
cwtl
mov
fwait
leave
dec
add
lods
or
ret
movsl
std
ds
lcall
inc
xor
stc
fcompl
sub
test
push
jns
gs
push
push
mov
xor
fcom
mov
jnp
adc
mov
xor
xchg
mov
imul
or
cmpsl
vpsubb
je
pop
nop
jecxz
lods
adc
test
add
loopne
das
add
xchg
inc
add
nop
outsl
es
inc
push
add
mov
pop
sahf
adc
outsb
mov
inc
hlt
std
xchg
push
lret
push
adc
adc
sbb
sahf
sbb
test
adc
mov
movsb
mov
rolb
sub
pop
ljmp
add
cltd
bound
xorb
jbe
xchg
scas
es
out
mov
sbb
in
push
sbb
lea
mov
jae
in
pop
cs
push
mov
enter
pop
outsl
xor
mov
push
xchg
mov
xchg
adc
pop
es
sub
bswap
cltd
divb
lahf
sbb
sub
fldcw
inc
cltd
imul
add
leave
pop
movsb
gs
cmpb
sbb
fldt
mov
xchg
pop
sahf
fldl
xchg
sti
fldt
popa
jo
jo
sbb
cmc
arpl
pop
subl
repz
fwait
lds
ficompl
push
lods
push
pop
or
cmp
dec
mov
aad
shlb
pop
lret
mov
or
sub
jmp
ss
xor
push
in
dec
push
sbb
je
cld
cmp
cmpb
dec
pop
xchg
mov
cli
nop
and
out
adc
cmp
into
rcll
out
and
rolb
sub
jo
daa
lcall
mov
in
cld
lahf
test
out
inc
sub
add
cltd
fdivl
in
fadds
jno
shlb
cs
pop
les
fsubrs
addl
nop
stos
adc
xor
cmp
fiadds
sbb
aad
loopne
xchg
es
pop
or
push
jns
xchg
sbb
cltd
sub
add
mov
test
out
xor
or
in
inc
sbb
cltd
add
and
and
outsb
xor
cmpsl
test
iret
xor
mov
pop
sbb
sti
mov
ss
repnz
dec
jo
and
icebp
insl
xor
mov
jns
nop
loopne
inc
lods
in
outsl
xchg
call
push
movsl
mov
jae
xchg
adc
mov
jg
je
dec
mov
sub
push
inc
and
jmp
inc
lock
rcll
jns
fistpll
lret
test
call
test
test
mov
cmc
dec
dec
sbbb
bound
sti
dec
sbb
dec
adc
out
sbb
imul
push
adc
mov
xchg
lret
in
mov
mov
or
mov
daa
dec
aaa
cmc
ja
or
fldt
jno
int3
push
andl
imul
adc
xor
outsb
push
sbb
pop
nop
jns
cmp
iret
enter
and
jb
sub
out
xchg
push
cmp
push
scas
jno
jle
xor
repnz
pop
and
cmp
push
push
int
rclb
aaa
js
in
push
ret
add
mov
out
add
int
lds
in
xchg
je
pop
push
mov
adc
orl
jg
out
xchg
and
push
fsubr
pushf
sbb
cwtl
mov
sbb
push
shr
push
gs
ret
cs
aam
mov
loop
scas
adc
cwtl
inc
jmp
cld
push
lret
push
frstor
adc
adcb
cmp
xchg
adcb
stc
call
and
cmc
cmp
push
movl
out
mov
inc
out
push
sbb
inc
cmpsb
and
sti
lods
mov
mov
stos
inc
sti
push
fcmovne
pop
ljmp
or
xchg
pop
pop
jp
sbb
cmp
enter
jge
je
mov
pop
inc
loope
push
jge
push
pop
pop
push
repnz
dec
sarl
mov
xchg
aad
mov
fnstcw
mov
sbb
fs
sahf
adcb
movsl
push
ss
jmp
inc
lods
push
hlt
dec
pop
sti
fs
sub
push
mov
sub
imul
cmp
mov
adc
push
pop
mov
idivb
pusha
ds
rorb
add
adc
nop
xchg
push
mov
xor
jecxz
xchg
push
cmp
adc
adc
jg
cmpsl
jo
push
daa
andl
adc
mov
cmpsb
dec
jne
insb
or
std
cmp
addr16
add
push
lcall
out
push
cmpsb
inc
in
push
shl
jb
pop
mov
sbb
and
ss
mov
lock
add
inc
push
mov
nop
push
mov
sbb
aaa
or
xor
jne
jmp
fidivl
lret
clc
mov
ds
stos
lret
push
movsl
cmc
and
pushf
mov
inc
add
fimuls
jae
mov
ljmp
push
jnp
insb
mov
jl
push
decb
lock
adc
sub
jge
mov
cmpsb
mov
testl
mov
xchg
xor
lcall
sbb
fistpl
and
in
sbb
pusha
fdiv
movsl
adc
xor
sbb
xchg
ljmp
adc
inc
fsts
loope
dec
fldl
sbb
jecxz
orl
add
mov
mov
scas
jmp
add
and
sub
int
call
lods
lds
mov
push
push
jmp
lret
cmpsl
cmp
pop
sub
out
ret
xor
and
push
iret
iret
aas
rep
sub
addl
pop
fildl
dec
xchg
xchg
scas
movsb
mov
lods
insl
or
data16
mov
adc
mov
ret
in
adc
adc
push
jo
cmp
pop
shll
lods
jecxz
xor
cmp
jae
pop
pop
adc
mov
bound
ficompl
aas
xchg
pop
sbb
lods
inc
lock
enter
cs
inc
xlat
adcl
sub
out
cmp
mov
fiaddl
inc
in
fnstenv
in
mov
fdivrl
jbe
sub
xor
adc
lcall
scas
enter
nop
xchg
dec
xor
sbb
jo
lahf
mov
int
mov
push
xor
push
out
cmp
lds
jg
daa
jecxz
dec
cwtl
xor
outsl
jg
pop
pop
mov
mov
icebp
add
sbb
adc
fidivrs
dec
adc
aad
inc
mov
ret
pop
lcall
rolb
les
rcr
fildl
add
add
add
roll
xor
mov
dec
jge
movsl
cmp
fdiv
jo
daa
shll
enter
mov
jecxz
pushf
add
xchg
pop
push
idiv
jno
push
into
jg
xchg
mov
leave
pop
rcl
clc
pop
stos
jl
fptan
mov
push
lods
subl
hlt
sub
or
jmp
add
xor
sub
or
leave
sahf
test
es
jae
xorb
adc
cmpsb
pop
add
fcmovu
pop
call
mov
mov
push
jmp
jb
in
jns
test
ds
adc
and
lock
inc
scas
xchg
sbbl
adcb
jnp
cs
cltd
in
dec
lahf
imul
stos
xor
lcall
movsl
inc
mov
lods
lds
ja
xchg
das
sbb
les
loope,pn
xchg
pop
imul
cwtl
aam
mov
mov
dec
mov
xor
std
add
jnp
cmp
ret
push
rcl
xor
and
add
loop
push
jg
les
cltd
cs
sub
hlt
jns
loop
or
scas
mov
enter
mov
aas
mov
xchg
add
lods
das
xchg
into
mov
jp
or
and
sbb
jp
stc
pop
xchg
adc
xor
adc
in
ret
and
jae
jb
or
ret
hlt
enter
mov
sbb
inc
out
jo
jg
adc
inc
adc
imul
pop
in
sub
adc
inc
movsl
lods
cmp
mov
pop
dec
jg
jp
jo
lods
loop
cmpsb
fimuls
movsb
pop
push
les
fwait
pop
addb
add
add
incl
jecxz
mov
stos
push
loop
fstps
fsubs
or
xchg
fwait
aad
pop
lahf
mov
pushf
adc
aas
sub
mov
or
jecxz
mov
sbb
add
mov
sub
shll
rcrb
mov
sbb
les
bound
dec
psrld
dec
add
mov
adc
sub
inc
bound
stos
mov
xchg
xlat
sub
lret
and
adc
xor
jmp
hlt
or
mov
xchg
sti
pop
pop
decb
js
push
and
sbb
and
mov
in
je,pt
inc
ffree
fwait
scas
dec
and
or
lds
xor
push
sbb
mov
fs
rorl
fisttpl
add
ud0
adcb
mov
outsl
push
fistps
xchg
pop
ja
sub
mov
into
cli
add
repz
sbb
jae
mov
movsb
icebp
shlb
imul
push
or
fldt
loopne
in
subb
sbb
pop
jne
sub
fdiv
xor
cmc
subb
adc
mov
sahf
dec
shll
outsl
clc
xor
xor
adc
xchg
hlt
jae
add
mov
mov
es
sbb
adc
inc
mov
adc
push
outsb
inc
jo
testl
lret
inc
inc
mov
imul
adc
adc
or
inc
mov
fsubrs
insb
std
ficomps
or
cltd
pusha
sbbb
aaa
xchg
clc
mov
adc
jno
test
mov
cwtl
mov
push
aad
mov
mov
cmpsb
jmp
jmp
subl
ljmp
fimuls
dec
das
nop
xchg
dec
dec
aad
or
pop
out
mov
jb
sbb
jl
cmp
push
pop
jmp
xchg
loope
xchg
pop
sub
inc
mov
popa
xchg
jp
push
push
inc
arpl
js
and
pop
and
sbb
test
mov
in
shl
jno
cmc
add
in
jecxz
mov
inc
movsl
lea
jne
mov
test
mov
xor
push
xchg
hlt
insb
scas
mov
fidivrl
jo
mov
ja
cmp
in
into
sbb
jle
xor
jno
inc
into
ret
int
push
jp
or
xor
or
push
je
scas
mov
adc
add
mov
repnz
pop
push
fnstsw
cmp
mov
icebp
push
push
int
cmp
fsubs
cmpsb
xchg
dec
add
sbb
nop
adc
pop
cld
push
adc
mov
mov
outsb
ret
xchg
sbbl
fildll
out
lock
mov
adc
hlt
repnz
pop
iret
xor
stc
cmpsl
push
push
pop
call
hlt
fsubs
cli
scas
sub
sub
inc
loop
cmp
or
pop
mov
dec
out
and
sbb
pushf
mov
in
inc
lock
add
fcoml
xor
mov
and
mov
cld
out
test
sbb
icebp
sub
xor
sbb
jns
shl
push
xlat
sbb
stc
iret
cli
pop
in
pop
xor
pop
xor
loopne
mov
jmp
int3
add
cmc
adc
aas
clc
xor
adc
cmp
cmp
inc
shl
icebp
sub
push
pop
hlt
addr16
sub
inc
shlb
jb
pop
adc
outsb
test
xor
add
jle
push
or
pushf
inc
push
sub
out
fwait
xchg
dec
jbe
outsb
xchg
roll
jbe
ljmp
cwtl
jbe
dec
mov
jle
aam
adc
cwtl
xchg
sbb
insb
daa
mov
pop
in
outsl
movsl
pop
push
xor
adc
inc
flds
in
shrl
push
add
mov
daa
sbb
jnp
cmpsb
lods
xor
and
push
jl
clc
adcb
ror
adc
in
setno
subb
or
out
ds
mov
loopne
push
dec
fldenv
ljmp
add
sub
adc
leave
push
mov
test
out
pop
xchg
push
fs
xor
inc
push
movsb
fsubrs
and
in
loopew
add
mov
mov
loope
push
jmp
std
cli
stos
mov
adc
dec
cmpsl
insl
arpl
jmp
jbe
xlat
dec
push
lock
lods
sub
pop
lods
insl
sti
jl
ror
fs
sbb
ret
ja
in
mov
sub
cli
cmc
or
xor
sub
pop
add
xor
out
xor
sub
add
or
cli
or
ljmp
jb
int
dec
fnstsw
xlat
xlat
sub
or
repnz
mov
mov
xor
push
mov
push
fmull
cld
adcb
rcrb
mov
mov
mov
mov
push
test
shll
mov
push
ljmp
mov
aad
test
outsl
push
xor
clc
pop
sbb
inc
sbb
adc
push
mov
repnz
lods
arpl
inc
inc
dec
sarb
aad
fcomi
xor
ljmp
int3
cmpsl
lret
pusha
xchg
stos
sbb
into
stos
and
pop
pop
cmpsb
xor
in
cmp
adc
stc
and
xor
sbb
ljmp
mov
test
mov
sarb
in
push
subl
and
aaa
xchg
cmc
test
pop
sahf
pop
in
decl
scas
dec
sahf
inc
std
xor
call
cmp
sub
nop
jo
pusha
lret
jbe
mov
sub
xchg
and
addr16
sbb
lds
add
and
into
mov
xor
sbbl
jne
jge
mov
cmp
xorb
mov
xlat
rcrb
je
daa
push
and
and
outsb
gs
jge
jge
daa
adc
inc
push
cmp
cltd
insb
stc
xchg
stos
daa
hlt
pop
or
mov
hlt
gs
popl
out
pop
push
mov
shlb
dec
cli
sbb
xor
gs
jl
shrb
sub
inc
ss
xchg
jae,pt
ja
sub
lahf
mov
pop
jns
pop
out
jp
nop
pop
xchg
cmpsb
testl
xor
into
push
jbe
mov
push
cmp
push
cmp
mov
sub
subl
jle
mov
ror
cld
in
mov
jl
push
pop
je
mov
cmp
or
dec
adc
movsl
sbb
inc
xchg
popa
adc
sarl
add
ret
addl
mov
jle
push
or
out
dec
int
shll
es
int
cmpsb
test
nop
xchg
cwtl
hlt
cwtl
mov
das
push
pop
lock
stos
mov
sbb
pusha
fisubl
jbe
mov
inc
sub
jl
mov
sub
inc
inc
cmp
jmp
push
stc
cmp
lcall
incb
aas
aaa
or
lds
addr16
push
cmp
push
xor
test
cli
faddl
in
sub
sub
inc
xchg
jnp
ljmp
fldcw
sub
out
xor
call
in
jle
movsb
dec
in
rcrl
mov
cs
dec
and
adc
rcrb
rcrl
add
adc
lds
repnz
sbb
popf
outsb
mov
call
pop
push
jnp
mov
mov
fldt
and
ret
pusha
test
mov
ja
popa
test
adc
cltd
mov
addl
je
rcll
xor
aaa
pop
xlat
into
mov
add
repz
inc
scas
and
out
test
movsb
fisttpl
and
xor
sbb
sbb
and
pop
je
out
or
and
popa
xlat
fs
ret
arpl
bound
xlat
and
divl
imul
pushf
push
fidivs
iret
roll
mov
hlt
iret
xlat
cltd
stos
jmp
push
or
jae
xor
cmp
sarl
adc
sub
cmp
pop
lds
mov
rcll
fisubs
and
xchg
es
pop
add
aad
test
push
push
scas
mov
pop
aam
popf
mov
push
and
mov
sub
lea
fs
xlat
adc
mov
adc
call
xor
xchg
pop
pop
ljmp
push
pop
clc
pop
out
dec
ret
jl
imul
cld
imul
dec
cltd
add
mov
pop
fdivrl
imul
dec
or
scas
movsb
lods
sti
aaa
inc
loop
cmp
int
mov
dec
cmc
xchg
loop
inc
add
or
adc
mov
pushl
imul
inc
pop
test
aas
pop
in
icebp
es
fbstp
mov
add
test
mov
sbb
pop
fidivrs
cmp
jnp
xor
xchg
pop
stos
fs
ss
fwait
test
jge
lahf
jnp
test
or
jo
enter
int
mov
add
jecxz
pushf
jecxz
insb
sub
jae
sbb
shlb
popf
push
mov
rol
mov
addl
sar
sub
fiaddl
xor
in
cs
or
push
lods
sbb
stc
cmc
enter
xor
pop
jo
sarb
fldl
out
xor
jle
iret
inc
loope
jp
or
lcall
js
and
xor
fs
test
loop
fidivrs
popa
nop
or
push
pop
iret
cmpsl
and
fs
push
sahf
arpl
pop
jno
and
orb
dec
out
xchg
mov
clc
inc
pop
dec
inc
push
out
mov
idivl
aaa
imul
pop
cmp
ss
mov
loopne
sbb
ret
fwait
in
cwtl
dec
jo
enter
mov
mov
dec
dec
in
lahf
mov
stos
cmpsl
jmp
clc
xor
add
inc
nop
stos
mov
in
xchg
gs
mov
hlt
ljmp
jae
push
test
mov
js
je
fcomps
arpl
sub
pop
push
sub
insb
pop
inc
iret
cmp
xchg
das
xchg
outsb
aas
add
sti
imul
mov
imulb
and
cltd
jae
sub
add
xor
lea
push
sbb
pop
mov
push
ja,pt
cmpsb
fisttpl
insl
xor
xchg
fists
jns
aas
popa
in
test
aaa
or
iret
call
push
cmp
xor
jns
inc
test
sub
jae
sbb
sub
dec
jae
mov
sub
jo
jns
scas
push
dec
or
pop
lods
call
aaa
and
inc
test
add
cmp
sbb
int3
add
pop
xor
push
dec
add
mov
or
mov
dec
outsl
roll
dec
inc
pop
mov
lods
sub
jge
fsubrl
dec
jbe
sub
je
sub
int
pushf
hlt
movsb
scas
mov
push
dec
aam
sub
adc
xor
out
cmovns
loopne
inc
sarl
daa
and
lret
adc
adc
cmpsl
push
imull
jo
xchg
pop
outsl
xchg
sbb
xor
pop
dec
sbb
cs
sub
adc
lods
fnstsw
xor
mov
push
lock
stos
lahf
jo
int
dec
sub
shll
dec
fidivl
mov
mov
stos
cli
and
imul
aaa
mov
mov
pop
sbb
mov
xchg
add
inc
push
xchg
scas
pop
das
mov
incl
icebp
mov
push
xor
imul
add
adc
loop
cmpsb
std
movsl
mov
lret
cwtl
inc
into
fwait
jg
dec
jmp
jns
mov
iret
pop
call
xorl
lds
std
stc
in
sbb
repnz
inc
and
or
inc
add
cmpl
pop
cmp
in
xor
jnp
lea
lock
push
into
aad
test
xchg
lock
cmp
xor
cmpsl
faddl
adc
cmp
mov
pop
hlt
xchg
xchg
pop
insl
pop
repnz
pop
imul
dec
inc
jp
test
in
push
inc
fcmovbe
fnstcw
xchg
clc
xchg
push
hlt
and
rolb
or
xchg
rorl
lcall
popf
sub
pop
dec
mov
cmp
sbb
mov
inc
jno
and
jb
jl
hlt
push
add
call
or
fwait
sbb
cmp
in
imulb
ret
incb
cmp
add
push
test
test
push
int
pusha
repnz
arpl
xor
sbb
mov
fstpt
pop
int
pop
sub
push
pusha
dec
or
push
pop
sub
pusha
jb
addr16
scas
cmpb
ja
fcoms
je
fistpll
xor
adc
inc
and
int3
pop
movsb
cmp
push
xor
cmpsb
clc
jo
aad
aam
push
and
push
inc
pop
addl
jp
cmpsl
ss
aaa
insb
xor
rsqrtps
pop
sbb
ja
push
pushl
xchg
cmp
add
scas
sub
rorb
in
sub
mov
bnd
out
pushf
lods
daa
pop
loop
or
xchg
push
ficoml
mov
inc
pop
cmp
xchg
cmpsb
por
lret
adc
incb
arpl
jl
in
jae
jns
ja
sub
mov
icebp
push
notb
dec
pop
jno
std
dec
into
inc
nop
int3
inc
fnsave
shrl
je
rdmsr
dec
fcomps
scas
dec
mov
jnp
aas
cmp
mov
inc
mov
jp
std
sub
adc
inc
test
stc
cmp
jl
jb
push
push
or
inc
outsb
dec
sub
int
loop
pop
mov
xor
addr16
sti
sti
scas
data16
lahf
add
cli
repz
push
int
push
sbb
mov
rcrl
pushf
aad
out
out
push
push
mov
sbb
and
arpl
inc
cmpsl
dec
mov
sbb
cmpsl
popf
ds
or
sub
pop
push
lcall
movsl
adc
ret
lock
xor
nop
or
sub
mov
mov
cmpsl
mov
popa
lods
mov
aaa
cmp
les
lock
mov
lds
dec
aam
ds
pop
cmp
std
repnz
rorl
pop
call
mov
test
fs
add
dec
adc
xchg
fdivrl
sbb
push
sub
mov
lods
dec
mov
mov
push
subl
dec
jmp
mov
loope
cmp
out
repz
movsl
cltd
adc
hlt
loop
inc
fiadds
add
shl
enter
movsb
les
fldl
push
jp
arpl
jecxz
lods
mov
dec
gs
ret
cs
pop
sbb
mov
loopne
std
dec
or
add
jb
cmp
pushf
jmp
push
ljmp
out
imul
lods
sti
hlt
test
cmp
sahf
cmp
fstp
cmpb
out
ja
ds
sar
mov
push
into
je
mov
and
sub
jo
arpl
mov
ret
push
jp
out
pop
into
mov
repz
push
adc
inc
mov
shrb
mov
cmpsb
fadds
roll
adc
int
iret
xchg
ljmp
adcb
mov
sub
cmp
stos
bound
loopne
mov
lods
lods
cmp
divb
cmp
xor
ja
pop
pop
data16
pop
mov
push
es
push
dec
jne
rcr
and
mov
xchg
jmp
adcb
fimull
stos
aas
jb
mov
lds
mov
lock
lret
sbb
inc
inc
cs
fisttps
mov
out
sub
leave
push
scas
lret
adc
loope
mov
jg
mov
stos
mov
sbb
aam
scas
mov
pop
pop
daa
call
mov
loop
loop
and
test
cmp
imul
push
movsb
outsb
ficomps
aaa
movsl
in
xor
mov
mov
shll
xchg
xchg
mov
aaa
cmp
test
cmp
adc
cmc
inc
movsb
jbe
sbb
sub
out
mov
imul
inc
stos
sbb
clc
sti
jb
add
jle
test
les
fimull
rcl
gs
test
aas
les
popl
data16
rorl
and
ss
rcrb
mov
into
inc
lret
inc
jbe
or
adc
mov
repz
adcb
add
lods
cmp
mov
add
stos
cmp
ret
cwtl
inc
loope
fstp
jae
jle
sbb
mov
or
mov
mov
sub
arpl
xchg
cmp
adc
out
mov
test
out
xchg
push
adc
inc
inc
push
sti
fisttpl
push
mov
push
xchg
jb
loop
mov
inc
jl
add
icebp
ficoms
cwtl
add
movsl
mov
pop
mov
push
pusha
mov
dec
fwait
lahf
xor
into
xchg
pop
imull
out
dec
pop
test
xchg
adc
dec
mov
ret
sbb
sbb
sub
lods
mov
dec
mov
bound
push
mov
fisubrs
sbb
popf
push
mov
mov
add
lahf
mov
ja
or
lret
repnz
in
mov
mov
notl
outsb
inc
iret
into
mov
mov
xor
in
xchg
daa
jmp
inc
jmp
fsub
adc
push
call
pop
jmp
inc
enter
xchg
pushf
or
fstpt
ss
arpl
xchg
movsl
inc
mov
push
xchg
sub
add
add
ljmp
pop
add
push
out
jns
and
rcrl
or
ds
repz
push
mov
push
fsubrl
xchg
adc
decl
into
dec
jl
inc
jae
mov
scas
adc
lods
sub
insl
mov
mov
sub
hlt
clc
jl
cltd
dec
lret
sub
scas
and
jge
pop
cmp
mov
inc
and
enter
cs
xor
dec
xchg
mov
and
fs
xor
out
pop
sub
jno
es
adc
adc
out
testb
int
mov
push
popf
sbb
push
jno
jg
jns
push
sti
jne
push
or
pop
xchg
jns
adc
pop
sti
stos
or
pop
adc
and
push
push
sub
lock
in
fidivs
adc
rorb
mov
test
inc
xchg
outsl
leave
shrl
xlat
shll
mov
or
xor
xchg
gs
and
inc
sub
jge
jno
std
test
stos
sbb
pop
jl
xor
inc
faddl
mov
lret
pop
pop
out
jne
sbb
scas
int
fisttpl
fisubl
daa
inc
loope
pop
adc
roll
imul
jmp
adc
imul
popa
ds
sub
pop
ss
mov
push
mov
pushf
inc
fs
sbb
cmp
xchg
jge
dec
sub
imul
inc
sub
inc
test
in
cmp
push
mulb
scas
jnp
cmp
dec
fs
push
pop
testl
data16
mov
les
cs
lret
sub
pusha
mov
push
cmp
ds
movl
mov
daa
fwait
push
sub
loop
jb
lods
movsl
jnp
mov
aas
pop
inc
inc
cmp
pop
lods
xchg
adc
and
jg
mov
adc
mov
es
cmp
mov
sbb
and
jmp
dec
push
push
out
and
sub
and
sbb
or
xchg
inc
jno
pop
cs
or
fsubs
shlb
adc
sbb
dec
stos
lea
xchg
push
scas
ss
imul
ds
inc
out
xor
xchg
loope
out
out
cs
dec
jno
adc
xor
inc
adc
add
test
std
dec
fiaddl
mov
in
or
fiaddl
stos
out
pop
cwtl
mov
xchg
push
sbb
fdivs
jno
pop
mul
xor
pop
loope
push
testb
cmpsb
lock
mov
bound
test
data16
sub
pop
or
imull
aaa
jo
mov
pop
cmp
and
dec
out
stos
dec
and
test
aas
cmp
ds
jno
mov
or
stc
pop
or
fildll
xor
mov
call
or
mov
out
cs
adc
stos
xor
jne
filds
mov
scas
insl
push
cwtl
cmpsb
sbb
mov
ja
cltd
dec
cmp
scas
jecxz
jae
push
nop
nop
movsl
fwait
jmp
in
pop
icebp
js
push
mov
fidivrl
and
ret
pop
js
rclb
in
xchg
sbb
cmpsl
ja
rolb
push
out
inc
sbb
mov
mov
stc
mov
cmp
cmp
mov
xchg
mov
cs
idivl
mov
or
lock
iret
sbb
inc
sub
lds
add
repnz
in
ret
in
inc
fdivl
daa
xor
fsts
jbe
cs
fisttpl
inc
adcl
loope
shll
or
movsl
lahf
leave
add
aas
daa
std
sub
adc
insl
movsb
out
lcall
or
xor
faddl
ja
scas
adc
rcl
nop
fadds
sub
inc
xor
movsl
mov
fistps
mov
jg
push
sbb
rcrb
in
mov
mov
push
repz
jmp
mov
jl
out
sub
pop
ljmp
sbb
or
adc
outsb
rcll
mov
dec
mov
inc
xchg
shlb
fsubs
fidivl
sub
dec
sahf
aaa
push
add
sahf
inc
adcb
mov
mov
outsl
xchg
jmp
idiv
lahf
adc
jmp
jl
mov
inc
fwait
cmp
lods
scas
push
push
xchg
add
jg
and
std
push
sub
inc
rcl
orl
dec
mov
lcall
pop
test
ffree
out
imul
sbbb
mov
sbb
jle
jcxz
repnz
lock
add
subb
adc
test
pop
or
sar
insb
push
xchg
push
mov
xor
fwait
cmp
add
int
icebp
in
lods
sub
outsb
stc
loope
rol
or
xor
movsl
cmpsl
push
dec
cli
xor
testl
jnp
lcall
mov
test
sub
xchg
xchg
inc
dec
jge
lock
fimull
mov
outsl
sti
pop
or
sar
jl
xchg
jne
jns
pusha
cli
sti
ljmp
mov
xor
add
and
sbb
aam
or
add
jl
inc
cld
cli
dec
inc
insl
sub
es
pop
stos
jnp,pn
jb
or
adc
imul
jle
dec
lds
mov
mov
mov
mov
outsl
xor
pusha
movb
dec
testl
nop
fdivrp
lods
pop
xor
pop
mov
or
pop
out
scas
mov
stos
insl
stos
test
jo
into
mov
out
jge,pt
out
lahf
push
dec
test
mov
dec
lock
insb
aas
mov
popa
movswl
mov
in
and
mov
movsl
mov
js
dec
mov
jecxz
sub
cmpsl
dec
xchg
adc
cmpb
mov
mov
add
pop
or
imulb
jo
js
mov
fst
call
pop
xor
mov
leave
cli
aad
sbb
adc
pop
push
out
bound
pop
int
daa
sbb
ja
jno
pusha
and
aaa
in
xor
cmp
dec
imul
jnp
cmpsb
xor
lods
incb
shlb
imul
xchg
imul
and
pushf
out
lods
lea
std
stc
gs
xor
lahf
loope
lea
cltd
jp
adc
and
ja
inc
fistpll
xchg
jmp
push
lahf
inc
cmpl
call
sbb
cmpsl
or
push
cwtl
dec
cmpsb
lcall
and
stos
jp
dec
xchg
test
pop
xchg
std
xor
mov
and
or
lret
dec
out
movsl
aaa
gs
jne
out
mov
jnp
xchg
push
adc
inc
jmp
xchg
dec
dec
ret
sbb
enter
push
imul
mov
xchg
dec
popa
rcll
pop
pop
inc
cmp
mov
rolb
jp
outsb
jge
xchg
popa
into
add
pop
xor
out
adcb
mov
shll
loopne
sub
mov
icebp
pop
sub
movsb
adc
mov
lds
jp
jecxz
mov
bound
es
sbb
loope
lahf
xchg
cwtl
xchg
cmp
mov
arpl
dec
push
popa
sub
rclb
cmp
cmpsl
mov
ficompl
cwtl
daa
push
sahf
in
cmpsb
jmp
xchg
pop
sbb
lcall
inc
loopne
jmp
ficomps
mov
xlat
sub
lret
daa
mov
out
add
in
sub
mov
pop
cmc
fistpl
fsubp
std
inc
test
pop
cmpsl
xchg
mov
xor
inc
mov
inc
test
cmp
mov
std
xor
jbe
sub
jnp
xchg
mov
sbb
and
in
mov
outsb
rcrl
add
into
cmovp
cmpb
fisubs
leave
rol
jns
das
shrl
lods
repnz
xchg
fsubs
sub
and
push
sbb
jle
mov
incb
sub
dec
xchg
ds
sbb
mov
imul
sub
int
cmp
std
movsb
mov
mov
mov
adc
jl
es
push
js
cmpsl
inc
adc
mov
loop
ss
mov
ljmp
es
repz
jp
pushf
sbb
or
arpl
and
lds
iret
pushf
testb
subl
sbb
push
test
xchg
sbb
dec
xchg
scas
jge
xchg
movsl
sti
fdivrs
sub
orl
cs
mov
jne
dec
lret
mov
mov
stc
mov
pop
push
mov
mov
mov
mov
mov
add
mov
pop
jl
ret
mov
pop
mov
imul
push
add
xor
add
inc
adc
push
dec
add
jne
daa
repz
xchg
inc
jmp
test
fistpll
sbb
sub
pop
scas
test
adc
div
adc
outsb
mov
insb
xorps
push
sub
add
call
mov
ds
mov
jb
fwait
les
dec
subb
add
jno
add
scas
in
lds
test
push
mov
inc
inc
jne
push
es
jmp
lcall
mov
push
lods
mov
fcmovnu
dec
and
xchg
jae
ds
mov
test
pop
leave
pop
push
sbb
xor
aam
add
outsb
xchg
imul
roll
fmuls
sarb
in
push
xor
iret
mov
stos
int3
cli
movsl
mov
test
mov
andb
fdivl
int3
add
mov
add
add
adc
and
std
fimuls
mov
int3
dec
fidivs
jp
lret
popf
lret
xchg
in
xor
inc
int
mov
jb
adc
aam
jbe
jg
nop
stos
mov
or
adc
call
push
movsl
ss
shrl
lcall
mov
dec
or
imul
mov
test
sahf
js
xchg
xor
xchg
push
dec
inc
xchg
imull
push
test
mov
in
cltd
fnsave
mov
bound
add
xchg
pop
mov
dec
mov
mov
and
gs
popf
mov
lock
push
repz
adc
mov
push
leave
nop
iret
adc
sarl
scas
jns
loope
add
sub
xor
mov
inc
cmp
cltd
cmc
mov
subl
cmp
fwait
pushf
out
cmp
lret
pop
out
push
pushf
mov
adc
in
ret
lcall
jle
mov
adc
in
cwtl
outsb
pop
xchg
inc
sbb
adc
incl
mov
adc
jns
imul
adc
and
fwait
pop
dec
sbbl
ds
aaa
xchg
or
add
lret
sub
and
or
ret
outsb
adc
ja
setae
fcoms
sbb
hlt
push
jl
cmp
cmp
sbb
fidivrs
loope
test
lock
xor
pusha
or
inc
add
ds
scas
nop
icebp
cmp
mov
in
and
sub
or
inc
loopne
add
or
dec
loopne
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
