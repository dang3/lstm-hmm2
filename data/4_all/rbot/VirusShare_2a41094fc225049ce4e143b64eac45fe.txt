stos
std
jno
repnz
pop
sbb
mov
fstps
mov
xchg
push
dec
xor
cmovge
mov
add
push
mov
inc
test
and
sbb
adc
jl
jge
stos
sbb
sbb
inc
das
int3
sbb
or
leave
lret
ret
push
sub
inc
enter
jmp
loopne
adc
mov
rcrb
mov
fdivs
jl
jmp
mov
insl
aas
mov
cmp
rdmsr
cmp
cwtl
push
jns
cmp
mov
xchg
cmp
je
leave
insl
daa
daa
js
add
jecxz
mov
and
popa
cmpsl
pushf
push
push
mov
mov
inc
pop
test
outsb
dec
fcoms
and
dec
inc
sub
push
sub
xor
mov
xchg
xchg
xor
aam
sbb
sub
jae
xchg
adc
imul
notl
sti
dec
sbb
fdivrs
std
fcompl
push
ficoml
push
into
mov
pop
in
xchg
aad
pop
xor
add
pop
inc
add
lcall
push
dec
inc
ds
mov
lods
and
mov
or
dec
dec
inc
repz
dec
dec
cmc
cwtl
mov
cmp
scas
push
cmp
dec
scas
imul
jb
int3
fisttps
sar
jo,pn
xchg
xchg
inc
mov
les
das
std
jl
cmp
testb
mov
clc
pop
and
and
data16
mov
lret
jno
call
or
loopne
mov
add
leave
bsf
jmp
sahf
pop
ja
dec
into
repz
pushf
cmpsb
pop
enter
rol
push
sbb
xchg
push
inc
sbb
ds
dec
sub
int
int
sahf
sahf
ds
faddl
sbb
mov
sbb
adc
push
gs
push
cmp
pop
add
adc
add
les
sbb
inc
pop
in
xchg
in
lcall
pop
lret
test
pushf
mov
aaa
pop
mov
or
dec
sub
inc
test
and
adc
fadd
jae
mov
add
les
icebp
lock
mov
dec
mov
mov
mov
lods
outsb
xchg
jecxz
clc
mov
lahf
psllq
filds
fsub
movsb
fs
ret
and
mov
mov
lods
frstor
js
shr
jmp
jns
pop
mov
jno
sub
negb
mov
jne
je
or
and
push
push
jae
lahf
adc
shrb
ja
sbb
int
jmp
subl
jle
pop
jnp
cmpsb
sbb
ficoml
test
cli
lret
mov
loope
xchg
pop
inc
add
inc
leave
push
test
adc
sbb
cmpb
bound
pushl
dec
out
mov
ret
mov
dec
test
jb
push
test
xor
gs
mov
mov
popa
xchg
push
pop
sbb
mov
add
js
cmp
jmp
into
aas
cltd
pop
insl
cmp
inc
pmuludq
cmp
cmpsb
js
fwait
mov
push
jbe
mov
adc
sub
and
xor
cmp
lret
jge
popa
int3
out
pop
pop
stos
cmp
or
in
cmp
shll
or
stos
sar
xor
loop
in
sbb
jecxz
cmc
mov
sub
push
push
int
xchg
xchg
mov
xor
jg
je
imul
pop
sbb
pop
notb
jnp
sbb
sbb
ss
test
jbe
mov
ds
and
testl
push
shl
sahf
push
pop
nop
adc
test
jge
incl
pop
push
rorl
stos
push
dec
fmuls
and
sub
dec
lret
lock
dec
mov
pextrw
aas
add
repz
xchg
out
pop
cmp
pop
mov
or
stos
xchg
jge
lods
fisttpl
cmp
jp
test
pop
pop
push
mov
jne
jae
cmpsl
sub
mov
cmp
ret
test
and
addl
int
mov
cld
ljmp
lret
mov
test
sub
xorl
sbb
movsb
adc
int
out
push
lahf
cmpsb
icebp
pop
iret
cli
and
stos
mov
out
rep
cmp
repz
pop
es
gs
fidivrl
lret
xchg
push
sbb
cmpsl
pop
xchg
shll
cmp
dec
hlt
mull
cltd
push
insb
scas
fsubrs
cmpsb
and
ds
sub
pop
pop
aam
push
daa
lahf
add
mov
out
adc
cmpsl
mov
flds
or
inc
arpl
mov
xor
add
sahf
lret
shr
int
out
mov
mov
ret
insl
pop
lea
sbb
sarb
mov
mov
gs
clc
xor
fcomi
cmp
daa
jge
xor
cli
movsb
ljmp
cmp
and
push
in
push
stc
xchg
cmc
scas
scas
or
cld
outsb
stos
imul
mov
jno
imul
out
add
insl
pop
pop
iret
push
in
pop
repz
sbb
xchg
adc
shl
xor
adc
sub
sbb
sbb
ror
in
aam
imulb
pushf
fstps
sbb
mov
iret
cwtl
cwtl
mov
shl
cmp
pop
or
xchg
addl
fcmovnb
add
frstor
fwait
sub
rol
addb
sub
decb
mov
lret
add
leave
ljmp
or
inc
sub
dec
push
sub
jbe
lods
lods
outsl
test
data16
xor
mov
jno
lahf
xchg
jg
mov
out
outsl
mov
leave
xchg
adc
mov
out
imul
push
fcmovnbe
cmp
xor
xchg
es
daa
out
and
inc
jae
and
jle
mov
mov
mov
pop
dec
mov
pushf
sub
sub
inc
outsb
test
into
dec
or
addr16
xor
repz
xchg
push
das
pusha
dec
ljmp
movsb
add
jb
add
dec
cli
movsl
mov
push
push
jl
xor
ficomps
sbb
gs
ss
ljmp
mov
fcomps
xchg
ret
movb
adc
push
ret
fcoml
add
fnstcw
into
add
fldcw
sub
clc
dec
dec
or
pop
inc
inc
inc
cmp
add
jmp
divb
sbb
je
xor
repnz
jb
sbbl
mov
mov
aaa
test
out
cli
jo
cmp
clc
mov
xor
arpl
sbb
add
push
jmp
loop
mov
and
mov
popf
jmp
stos
sti
sub
fwait
and
xchg
lods
sub
arpl
pop
cmp
shrl
call
fwait
pusha
dec
fsubrl
mov
push
adc
jo
add
rclb
xor
daa
push
push
aas
mov
mov
cmpsl
jne
pop
pushf
pop
xlat
adc
mov
push
inc
adc
sub
add
mov
sub
add
and
sub
addb
pop
jo
add
sbb
outsl
push
cmovae
stos
push
jle
pop
sbb
fdivl
test
mov
mov
testl
xchg
inc
popa
in
icebp
xor
int3
xor
mov
push
inc
lock
sbb
jo
lods
dec
or
jnp
push
cld
and
nop
xor
enter
sub
or
int3
mov
fsub
lahf
hlt
and
fs
xor
sti
cltd
movzbl
push
popf
pop
cli
sbbb
stos
mov
call
sti
mov
and
out
negb
bound
scas
int
rcrl
jmp
adc
and
rcll
dec
push
rclb
inc
jle
dec
dec
xchg
sub
fdivrl
push
xor
test
push
fsubp
xchg
pop
shlb
and
rclb
add
mov
lahf
sub
test
in
stos
mov
jge
into
sbb
ds
int3
mov
or
sbb
sub
dec
push
subl
sbbb
icebp
push
jl
out
cmp
jno
sub
in
in
ficoms
test
ss
mov
dec
mov
sbb
mov
je
gs
xor
fnstenv
clc
out
icebp
jno
stos
mov
shll
loop
inc
mov
and
movsl
stos
testb
cmc
das
das
mov
pop
stc
cld
out
std
jmp
stos
leave
insb
mov
jp
mov
sub
push
cmp
movsl
arpl
xor
push
xchg
insb
xchg
xchg
in
adc
imul
out
rclb
cmp
sbb
pop
sub
in
sbb
fsqrt
inc
add
pop
jl
addr16
mov
xchg
nop
nop
mov
adc
stc
data16
inc
addl
sbb
inc
mov
adc
mov
mov
scas
add
out
mov
in
sbb
movb
add
fmuls
xchg
imul
jbe
jbe
in
fimuls
rorb
repnz
out
ss
jne
sbb
xchg
sbb
popa
fldt
jnp
cld
sbb
sub
inc
fcmovnbe
pop
and
xor
neg
in
jb
pushf
lods
pop
mov
divl
mov
bound
rcl
aas
imul
outsb
sub
clc
ja
shll
sub
xchg
push
lret
mov
sbb
sarl
push
mov
gs
push
push
out
mov
fiadds
adc
push
data16
gs
sahf
mov
push
xchg
adc
jns
cmp
lcall
test
lahf
jne
movb
add
sti
push
addl
lock
adc
scas
dec
iret
out
mov
sahf
fwait
add
fsubrs
cwtl
xchg
push
jno
jle
data16
testb
lods
ds
hlt
mov
pop
cli
adc
xor
mov
dec
loopne
lahf
shlb
int
insl
xor
jae
std
or
cs
xor
pop
in
divl
cmp
push
aas
xchg
sarl
jae
mov
push
rcr
mov
and
loop
mov
inc
int3
nop
sbb
das
iret
xlat
jg
shrb
sub
test
or
ljmp
push
and
test
inc
dec
daa
loope
fst
sub
rclb
adc
sbbl
pop
sahf
push
push
mov
fsubrl
in
sbb
mov
lcall
lcall
add
push
inc
push
xchg
andb
shll
mov
loopne
mov
inc
dec
or
push
cltd
ficoms
or
inc
sub
orb
xchg
enter
add
inc
fwait
scas
divb
lods
ds
xchg
pop
cli
icebp
add
xchg
sbb
adc
rorb
sbb
xlat
lods
mov
mov
mov
jb
jns
pop
jo
fcomp
jne
and
add
clc
cmc
mov
mov
popf
jecxz
and
and
and
rorb
pop
and
fnstsw
pop
pop
scas
outsb
sub
inc
aas
cmp
sub
cmpsl
addr16
xchg
xchg
push
mov
in
mov
popa
pop
jecxz
sbb
push
out
movsl
xchg
stos
push
xor
test
cs
in
pop
push
push
push
jle
subl
in
pop
ljmp
pop
sub
xchg
xchg
xchg
ffree
and
dec
adc
sbb
pop
inc
dec
gs
les
add
adc
push
cmp
inc
pop
jp
scas
mov
inc
ret
or
sub
dec
or
fadd
std
fmuls
or
xor
test
adc
shr
popf
cmc
xor
xchg
icebp
mov
and
dec
or
inc
outsl
jo
fmuls
pop
outsb
or
test
imul
mov
cmp
inc
push
mov
mov
jne
inc
addr16
mov
jg
sbb
lods
pop
cmc
bound
int3
scas
or
jmp
lcall
imul
stos
stos
icebp
out
lods
insb
sub
movsb
mov
and
stc
dec
jae
or
pop
push
jp
and
mov
adc
xchg
cs
xchg
push
adc
lea
loope
dec
dec
in
mov
and
shr
rcrl
cmp
sub
dec
fwait
push
push
sbb
bound
cwtl
mov
movb
inc
add
rcll
and
inc
jne
lret
pop
rolb
jge
pop
outsl
pusha
mov
fstps
push
int3
xor
lds
dec
in
pushf
in
dec
or
mov
ret
call
mov
je
mov
pop
int3
jmp
mov
jle
lods
sbb
sarb
mov
cmp
out
push
fcmovne
cmp
sbb
push
js
andb
insb
and
mov
mov
loope
add
loope
mov
jbe
mov
adc
fucomp
scas
ja
mov
imul
pop
xor
xor
sub
imul
arpl
push
jle
and
xor
adc
insl
sbb
and
std
mov
pop
sub
mov
aaa
xor
fstps
push
xchg
xchg
mov
or
xchg
push
fstpt
xchg
add
orl
mov
addb
xchg
out
loopne
mov
movsl
pop
dec
or
mov
add
sbb
mov
jge
shll
mov
xchg
jne
icebp
into
iret
push
enter
mov
inc
mov
imul
sbb
mov
stc
cmp
sub
pop
or
xor
pop
popa
inc
xor
std
and
inc
sbb
mov
sub
daa
aaa
loopne
sub
pop
dec
out
outsb
outsb
sub
sub
adc
add
inc
xor
call
lret
and
out
cmc
and
xor
dec
cmpsb
mov
in
in
mov
insb
jb
adc
xlat
int
jmp
in
ficomps
sbb
cltd
cltd
xor
and
js
loop
sahf
sub
loopne
push
das
pop
inc
push
gs
push
jge
add
ret
loopne
decl
cmp
leave
push
mov
xchg
fisttpl
ret
mov
ss
inc
or
inc
lea
dec
inc
mov
xchg
inc
repz
arpl
pushl
xor
shr
decl
adc
out
scas
or
lock
cmp
pop
lret
jle
jmp
inc
jp
ds
jp
vmread
js
nop
cmc
mov
jg
out
retw
jmp
mov
mov
clc
mov
lock
xor
jg
mov
mov
and
arpl
sbb
call
mov
adc
push
imul
ret
cmp
xchg
mov
pop
cmp
sahf
std
test
insb
adc
movsl
js
aaa
dec
pop
adc
sbb
add
cld
adc
loope
test
push
iret
ret
sbb
add
adcl
jmp
lahf
mov
cmp
or
outsl
or
loopne
push
inc
or
dec
test
xchg
cld
mov
push
push
data16
mov
jb
repz
jmp
je
mov
inc
repnz
xor
fidivrl
mov
shl
lret
lods
sti
ljmp
mov
fwait
lret
mov
pop
mov
sub
xchg
repz
cltd
sbbl
lock
push
sbb
mov
and
jns
loopne
pusha
jns
cmpsl
pop
das
out
mov
imul
lret
jns
les
push
inc
or
mov
mov
mov
es
movsl
sar
mov
nop
push
aam
adc
or
xchg
fsub
cli
mov
ds
aaa
ss
fwait
fwait
pop
imul
add
in
xchg
fimull
add
xchg
ret
xchg
add
pop
jnp
cmp
test
jmp
xchg
add
mov
cltd
push
ds
inc
jge
xchg
or
sub
enter
fdivl
mov
daa
pop
lds
call
into
addr16
adc
call
jb
xor
outsl
mov
pop
pop
xor
decb
dec
cmp
scas
xchg
dec
cli
cli
sbb
cmp
mov
in
icebp
cmc
cmc
shlb
add
popa
imul
and
outsb
push
adc
sbb
and
gs
iret
jl
or
push
imul
test
loope
test
push
pushf
sbb
push
call
negl
sbb
pop
push
jo
pop
rcll
aaa
outsb
loope
out
rol
adc
xchg
push
sahf
push
shrb
adc
push
push
js
sahf
sahf
in
sbb
jbe
pop
test
push
push
adc
sub
xlat
fdivrs
sbb
push
push
fwait
xchg
xchg
in
pop
xchg
add
add
pop
aam
inc
add
incl
add
dec
pop
outsl
pop
mov
add
in
cld
orl
call
sbb
dec
dec
cmpsb
stos
outsl
inc
mov
inc
or
hlt
dec
adc
mov
aam
mov
cmp
cli
lods
insl
insl
mov
mov
cmp
mov
fldenv
push
faddl
in
addr16
cmc
push
icebp
js
and
or
lahf
pop
jl
mov
add
cmp
outsb
movsb
mov
push
sub
inc
pop
jl
out
cmpsl
movsl
addr16
mov
push
sub
fists
push
aam
stos
push
lcall
inc
fiadds
testl
in
pop
std
int3
xchg
add
mov
cltd
pop
sbb
push
sbb
into
cwtl
xchg
pop
movsb
dec
addr16
out
xchg
add
fistl
mov
pop
outsl
pop
mov
mov
xchg
cmp
mov
adc
int
stos
cmp
stc
cmpsl
in
clc
stos
inc
cmpsb
mov
xor
iret
mov
aam
mov
mov
mov
inc
cmp
jo
or
cmp
icebp
xor
mov
repz
imul
jecxz
sub
roll
mov
mov
insb
push
ss
cmpsb
rorl
push
gs
imulb
test
test
ror
and
xor
test
pushl
cmpsb
pop
mov
imul
shrl
adc
push
push
adc
out
xchg
fucomip
icebp
lahf
adc
iret
push
and
push
cli
std
scas
scas
mov
xchg
rcll
xchg
pop
orb
rcr
jns
or
mov
xlat
repnz
inc
add
cmc
push
xor
dec
insb
xchg
ret
inc
inc
inc
mov
jo
dec
insb
and
fiaddl
inc
push
fisttpl
xor
and
ja
test
int
mov
test
jbe
xor
dec
dec
add
inc
repnz
bound
jle
mov
jg
jo
or
cmp
push
lret
jle
cmp
inc
xchg
or
stc
cli
sbb
icebp
outsb
je
clc
out
mov
daa
daa
jnp
push
gs
and
jp
mov
sub
inc
lock
rcl
in
jns
cmpsl
test
out
scas
mov
movsb
mov
lods
sar
les
mov
cmp
gs
and
sbb
aam
pop
adc
xchg
push
adc
mov
iret
iret
in
insl
mov
popf
int
dec
sbb
insl
sub
es
cltd
ficompl
adc
dec
pop
js
xchg
movsl
push
movsb
push
push
adc
ret
dec
push
push
bound
loope
lcall
mov
call
outsl
pusha
lret
mov
cmpsl
insl
dec
dec
or
push
in
test
or
inc
xor
inc
aaa
aaa
xchg
push
jno
xor
dec
xor
je
jmp
enter
arpl
aas
loopne
shr
push
push
in
lods
insl
or
jnp
mov
pop
push
sbb
mov
idivl
jo
pusha
cmp
ret
mov
sub
loop
push
stc
lcall
and
in
js
fistpll
adc
xchg
sub
outsb
cmp
and
mov
daa
loopne
sub
jbe
adc
inc
test
and
xor
shl
inc
sbb
scas
lea
push
adc
lock
stos
dec
das
jmp
push
insl
lret
stc
mov
fistl
sbb
fdivrl
sbb
jp
sub
cmpsb
je
xlat
sbb
push
add
xchg
push
and
jl
mov
jge
push
inc
inc
fbstp
ret
fldt
or
pop
sbbb
lret
fsubrs
in
enter
or
pop
or
dec
test
popa
add
push
inc
aaa
subb
repz
in
mov
hlt
icebp
add
pushl
pop
mov
jbe
lcall
dec
lods
in
xchg
or
mov
pop
daa
sbb
mov
out
mov
out
dec
jmp
imul
sbbl
test
mov
roll
cmp
fnstenv
sbb
jp
iret
cltd
je
test
stc
lods
lods
xchg
daa
into
nop
hlt
mov
shl
dec
or
sahf
es
add
fs
ljmp
mov
in
push
insl
jo
daa
sbb
cld
ljmp
daa
jmp
cwtl
fisubl
xchg
jp
sub
shlb
pop
xlat
xchg
push
push
out
add
pop
pop
or
andl
fdivs
or
jg
rcrl
sbb
pop
lcall
cmpsl
pop
inc
insl
and
xor
movl
xor
push
getsec
decl
mov
rorl
ja
and
mov
inc
ja
sbb
not
mov
mov
mov
enter
fistpll
cmp
clc
jp
cmc
mov
xor
stc
jb
jecxz
in
fs
scas
xchg
and
roll
cli
lock
ljmp
loopne
scas
outsb
in
in
mov
test
shl
addr16
xchg
jae
xchg
in
sub
loop
adc
shll
xchg
xchg
jmp
mov
lds
shlb
and
repnz
int
decb
mov
fcmovne
fmul
mov
in
sub
xchg
add
cmp
out
rcl
pop
sarb
add
rcrl
adc
stc
icebp
lcall
mov
or
xlat
push
add
aad
int
mov
in
cltd
dec
xor
popl
xor
push
ret
jbe
jmp
xchg
es
mov
aas
lea
dec
lret
test
lea
cld
pop
adc
ja
or
jnp
inc
jnp
xchg
cmp
test
test
jp
cmp
fildll
ret
jno
ret
das
add
fistps
pusha
push
stc
enter
scas
outsb
fstpt
insb
ss
mov
ljmp
sub
es
and
mov
adc
xchg
push
das
lods
arpl
adc
xor
mov
inc
stc
scas
mov
call
fdivl
das
in
ss
icebp
cltd
lcall
mov
pop
push
addr16
aad
xchg
mov
push
les
inc
pusha
lret
ret
xor
mov
addb
pop
and
sbb
sub
lahf
ss
or
movl
adc
inc
jmp
test
imul
out
shl
int3
sub
incb
jb
fdivrl
jo
lretw
dec
or
push
stc
or
push
dec
or
cmp
pop
or
lret
cmc
cmc
mov
roll
or
in
fs
and
sbb
lock
and
xchg
insl
sub
out
pop
das
das
adc
sbb
sahf
jle
jmp
push
push
dec
cmp
jmp
in
mov
push
adc
cmp
aam
push
push
mov
pop
das
adc
or
loopne
adc
sbbl
pop
add
fwait
pop
es
cmc
test
pop
rcl
jne
or
psubusb
adc
push
out
ret
addl
add
add
dec
incl
dec
jmp
mov
sbb
into
jmp
or
pop
pop
mov
xchg
mov
aam
xchg
or
jp
or
push
add
add
enter
adc
out
jo
adc
add
dec
pushl
aad
mov
cs
lahf
add
mov
jl
lds
pop
aam
divb
ss
mov
ret
inc
shlb
movsb
fs
mov
jle
andb
push
mov
outsb
sub
pushf
sub
enter
imul
cmpsb
sub
sahf
movsb
xor
gs
xchg
int3
loope
movsb
adc
xor
and
xor
push
pushf
sahf
imul
push
push
int
jge
lahf
add
pop
clc
mov
sbb
mov
xlat
xchg
push
cmp
adc
jle
popf
test
ret
je
push
lahf
gs
add
adc
fldt
or
rcrb
out
fimuls
into
jmp
add
or
push
mov
hlt
adc
or
enter
movb
test
rcll
pop
cli
mov
and
or
cmp
mov
in
cmp
push
lret
jle
iret
fdivr
jnp
popf
lret
mov
pop
shl
jae
fnstenv
fs
jecxz
cmp
and
mov
sub
dec
mov
or
shlb
cmp
xor
insb
dec
iret
jmp
push
sbb
xor
or
movsl
arpl
mov
push
je
xor
test
push
adc
jnp
xor
lea
out
cld
cmc
sbb
pop
pop
jge
pushf
sbb
sbb
ficompl
test
mov
xchg
push
pop
adc
pop
aaa
ret
adcl
test
leave
fcoml
scas
pushf
mov
je
dec
mov
dec
test
pop
mov
dec
mov
movsb
pop
lret
stos
rol
jmp
add
ret
inc
mov
xchg
inc
repz
arpl
fxch
xorb
push
adc
out
dec
adc
dec
cs
jb
aas
cmp
pop
dec
ja
mov
mov
jns
mov
lcall
daa
cwtl
pusha
gs
and
in
loopne
mov
and
mov
xor
imul
inc
outsl
cmp
jmp
int
sub
fwait
jnp
arpl
sbb
mov
xchg
loopne
popa
cmpsl
ljmp
lock
pop
movsb
mov
adc
shrl
sub
test
adc
test
popa
mov
fistl
mov
icebp
pop
dec
dec
xchg
cltd
sahf
aam
imulb
mov
movsb
mov
ffree
fdivs
or
jle
pusha
adc
and
or
inc
arpl
arpl
popf
push
cwtd
lret
fwait
popf
jg
xchg
out
dec
std
int3
inc
push
aam
shl
pushf
or
and
testl
hlt
enter
add
push
xchg
or
dec
adc
shlb
jno
pop
mov
in
sbbl
aas
mov
jnp
cld
fwait
sbb
jg
xchg
mov
ja
mov
jno
adc
cmp
andl
ret
in
pop
mov
cmp
push
fnstsw
rcrb
sub
int3
pop
sub
jmp
stos
push
dec
dec
or
es
xchg
push
mov
and
adc
jo
sti
mov
hlt
push
push
xchg
inc
sub
push
push
sbb
iret
mov
shlb
hlt
cmp
push
sbb
adc
push
dec
std
push
xchg
add
mov
ret
pop
loop
jg
flds
cmovae
cmp
or
lds
mov
mov
or
enter
test
xchg
push
inc
stos
xor
addl
icebp
rcrb
lea
xchg
xor
lea
cmc
fmuls
and
cld
outsb
and
or
int3
shll
inc
sbb
clc
mov
daa
out
push
and
mov
repnz
pmullw
rcl
aas
inc
mov
subl
cmp
mov
sub
jbe
and
call
popa
icebp
mov
xchg
push
adc
mov
adc
mov
notb
stos
dec
jbe
rclb
daa
ds
pop
lods
scas
jne
stos
pop
pop
xlat
sbb
or
sub
and
pop
push
and
push
push
int3
fstp
pop
mov
fbstp
out
jbe
repz
ret
cmpsb
push
std
std
mov
sbb
dec
mov
outsl
push
lret
loope
repnz
inc
aad
scas
pop
aaa
aaa
testb
rolb
aad
icebp
icebp
rcrb
dec
fdivrl
outsl
mov
cmp
iret
push
or
jne
inc
dec
xchg
jno
jl
mov
jns
dec
hlt
dec
mov
jne
mov
nop
lock
add
int
mov
outsl
es
and
aas
popf
or
fisttpll
adc
jmp
cmp
sti
sub
mov
test
addr16
sbb
adc
das
cmc
dec
push
notl
shrl
repz
xchg
push
lahf
stos
cmp
fidivl
sbb
lret
fld
sti
test
xchg
int3
xchg
push
cmpsl
xlat
jno
fcomp
cwtl
into
mov
rcll
addr16
xchg
pop
add
add
rsqrtps
adc
test
inc
or
pop
jge
jnp
dec
or
xchg
mov
fmull
dec
pop
aaa
clc
adc
or
mov
jmp
inc
aaa
mov
into
test
or
push
jp
xor
dec
fistl
mov
lret
dec
push
cmovnp
aaa
cld
stc
mov
sbb
cmp
mov
lds
add
into
into
das
adc
mov
dec
cmp
dec
add
add
mov
int
shrl
sub
add
mov
pusha
jbe
adc
call
outsl
or
and
and
push
xchg
adc
xchg
push
fistl
adc
mov
push
int
imul
sbb
data16
pushf
mov
adc
lds
and
push
sarb
sbb
mov
inc
add
filds
add
es
ds
in
jge
into
mov
or
imulb
inc
movsl
imul
mov
vaddsubpd
xor
jno
loope
hlt
add
jp
aas
inc
mov
cld
out
dec
fistl
in
xor
lret
adc
popa
cmp
fcoms
cli
sbb
repz
js
mov
jbe
inc
xor
insb
inc
and
and
loop
and
lahf
in
mov
enter
fldt
sub
sbb
dec
repnz
leave
popa
call
dec
gs
movsb
xchg
int3
fimull
dec
push
mov
dec
xchg
pop
xchg
push
in
lods
stos
cmp
fcoms
nop
push
jmp
pop
jnp
sub
popf
pop
pop
sbb
push
xor
cmpsl
sbb
mov
mov
sbb
push
popa
and
mov
inc
cltd
cmpsl
push
loopne
xchg
lock
add
ds
out
jp
test
lret
push
pop
push
fimuls
add
rcrb
mov
lds
xor
fs
daa
sbb
xor
adc
xor
jae
inc
mov
into
les
aas
mov
jnp,pt
mov
cmp
jp
cmp
cwtl
sub
clc
daa
sub
mov
mov
jecxz
pop
cmp
loope
jg
popa
scas
scas
outsb
scas
fistpll
add
xchg
insl
push
fldl
clc
in
clc
stc
jns
pop
mov
cmpsl
dec
sbb
imul
int
add
push
movsl
movsl
gs
mov
ss
aam
push
mov
ja
lahf
mov
xor
dec
rclb
int
fisubrs
mov
mov
imul
inc
jecxz
cmpsl
sbb
rcrb
movb
pop
les
cmp
adc
in
push
inc
ret
std
loopne
sbb
dec
jno
pop
mov
in
fisttpl
dec
ret
mov
lcall
inc
cmp
add
orb
xor
sti
jae
lods
adc
ret
xor
aad
out
pop
push
out
lock
mov
or
and
mov
cli
cli
jo
rcrl
ja
addr16
add
xor
fs
into
mov
mov
pop
movsl
stos
mov
das
push
pushf
xchg
inc
sub
mov
fildll
test
cmpsl
addr16
xor
and
cmc
popa
push
aaa
or
xchg
xchg
fcmove
in
mov
imul
nop
out
sbb
ds
jne
jp
sub
fcompl
lods
adc
mov
aad
cmp
popa
and
ret
adcl
imul
addb
xchg
mov
push
mov
mov
dec
insb
std
mov
ljmp
dec
dec
test
popa
cmp
dec
dec
ret
dec
inc
test
repnz
xor
inc
imul
aas
mov
jge
out
dec
fistl
mov
sarl
mov
mov
mov
pop
jmp
repnz
je
pop
inc
pop
ss
mov
fdivs
mov
xor
adc
add
pusha
push
mov
scas
shll
in
or
ljmp
lods
xchg
test
in
lock
pop
pop
imul
fcoms
fcmove
loop
scas
icebp
inc
out
imulb
out
inc
stos
stos
scas
fidivrs
or
fsubl
fimuls
stos
fidivl
das
fcmovbe
xchg
loope
popa
mov
movsb
dec
ljmp
out
push
xchg
roll
mov
sbb
scas
sub
mov
addb
push
push
imul
aas
or
cmp
mov
cmc
ret
push
xchg
push
pusha
test
testb
lcall
jno,pt
int
xchg
dec
fimuls
push
inc
or
pop
mov
sbb
ret
jnp
lods
js
inc
mov
jp
repz
ret
or
daa
arpl
xor
notl
and
iret
add
and
dec
aas
popf
mov
sbb
mov
mov
loopne
mov
or
in
es
jecxz
sbb
mov
ds
mov
xchg
cs
xchg
push
mov
cmp
jp
push
push
add
sahf
pop
push
push
fs
nop
ljmp
sbb
mov
mov
aad
push
movb
cmpsb
lahf
gs
add
mov
ficomps
addb
fstpl
dec
mov
mov
push
adc
int3
mov
jecxz
aad
lret
or
push
sub
enter
addr16
shll
daa
out
dec
and
mov
je
mov
xor
pop
int3
mov
outsl
dec
mov
aas
lahf
scas
or
out
dec
fwait
adc
mov
cmp
mov
mov
cmc
jne
adcb
cmc
es
daa
out
cmpsb
aam
inc
cmp
lret
out
loope
insl
std
andl
sub
enter
push
pushf
mov
out
stos
addr16
jmp
push
cmp
sub
call
int
xchg
xchg
fdiv
mov
dec
push
adc
aad
rcl
insl
sub
insl
in
jnp
dec
sub
icebp
pop
fcmovnu
jp
dec
fcompl
sbb
hlt
xchg
push
imul
jg
in
inc
mov
fistpl
int
cmc
adc
sti
mov
sub
lcall
rcrl
mov
cs
test
repz
fldenv
movsb
inc
aaa
divb
gs
insl
shlb
sbb
adc
nop
fucomip
mov
cs
dec
cmp
dec
mov
outsb
or
or
fwait
mov
push
icebp
js
push
shlb
data16
mov
inc
lods
jno
insl
adc
jns
or
test
cmp
out
mov
imul
stos
test
jne
mov
inc
shl
push
xchg
pop
jne,pn
leave
pop
in
scas
mov
adc
shll
iret
lock
data16
dec
stc
lcall
jb
icebp
iret
sbb
xor
pusha
addl
xchg
bound
pop
movsl
loopne
mov
inc
lahf
xchg
dec
add
ret
into
mov
je
scas
push
and
into
lods
call
cmpsl
popf
jo
stos
data16
das
or
test
inc
xchg
cltd
jl
xchg
push
sub
notb
jae
test
xchg
dec
push
pop
xor
xchg
int3
loopne
scas
outsl
fwait
andl
popf
fsubr
mov
cmp
cli
cltd
aam
pop
mov
orl
mov
inc
inc
xlat
and
pop
cmp
fs
into
mov
sbb
bound
stc
scas
loopne
dec
or
add
popf
jnp
testl
lea
push
adc
ffreep
push
gs
sti
fwait
xchg
pop
mov
xchg
xchg
xor
adc
test
lods
sub
adc
jnp
or
ljmp
std
int3
push
cwtl
aaa
sub
pop
sbb
je
sbb
fcomps
adc
push
adc
adc
ret
ret
in
add
jmp
fdivp
test
add
mov
ds
mov
add
out
mov
push
popl
xchg
push
enter
dec
repz
iret
mov
push
ret
mov
pop
loop
outsl
xor
or
lock
adc
test
cmp
fwait
inc
pop
add
inc
xchg
mov
mov
sbb
ss
stc
mov
mov
das
and
popf
stos
and
sti
jle
js
jno
aam
in
push
push
jle
pop
stos
mov
lret
lods
out
push
enter
daa
sub
push
lea
sbb
daa
gs
inc
and
cmp
inc
and
shrb
push
mov
ffree
pushf
fisttpll
mov
ficomps
push
mov
xchg
sbb
js
mov
sarl
popa
push
add
xchg
push
sbb
les
or
adc
xchg
mov
mov
fisttpl
push
into
into
mov
or
xchg
leave
aad
dec
xor
mov
enter
sub
test
and
int
dec
xor
xorl
xorl
xor
sbb
adc
jge
cmp
test
mov
dec
push
mov
cli
mov
orb
or
push
inc
cmp
repnz
ss
hlt
arpl
mov
lods
shrb
pop
inc
xchg
pop
and
sub
rcrb
int3
fstl
mov
scas
test
in
dec
push
testl
test
mov
out
fs
push
push
mov
out
inc
test
jmp
mov
jmp
scas
pop
cmp
sahf
sub
fcompl
pop
sbb
push
push
sbb
bound
cwtl
xchg
pop
mov
xchg
fcmovnbe
int3
xchg
rcr
xchg
add
mov
mov
jg
pop
pop
push
ds
inc
push
loope
popa
dec
orl
xor
adc
inc
jl
push
push
lds
jbe
add
xor
mov
popf
xor
mov
mov
sbb
and
aas
sbb
jns
insb
pop
push
sub
dec
sarl
pop
push
cwtl
in
add
mov
popa
mov
xor
push
jbe
das
and
cld
add
loop
bound
mov
scas
aam
pusha
cmp
pusha
xor
cmp
cli
jmp
mov
cmpsl
cs
and
add
mov
lahf
xor
cmp
rclb
xor
rclb
dec
pop
std
cmp
fistpl
imul
xchg
jge
fcmovu
pop
dec
cmpsl
adc
test
and
rcll
lcall
mov
mov
mov
jp
jge
sub
or
call
add
orl
test
push
pop
inc
inc
aaa
dec
mov
shr
jae
out
cmpsl
icebp
icebp
rcrb
dec
fdivrl
jo
jbe,pn
pop
or
lock
mov
in
xchg
add
cmp
and
xchg
jne
lods
pop
data16
mov
or
insl
adc
add
push
sub
pusha
xchg
stos
stos
imul
loop
sub
ljmp
call
pop
gs
mov
dec
into
adc
insl
adc
int
rcl
insl
sub
insb
in
jnp
sbb
lea
lock
fcmovnu
adc
jge
loopne
fldenv
mov
xchg
jno
dec
pop
pop
lahf
ret
paddd
xchg
xlat
fcmovnbe
add
addl
mov
pop
dec
mov
or
shll
or
or
lret
shrb
testb
xchg
stos
sub
jae
xor
hlt
mov
mov
or
lock
cwtl
aam
cs
and
push
mov
jnp
jl
add
stc
mov
jo
pusha
dec
addb
xchg
sbb
push
cmpsb
jae
aas
cmpsl
push
xor
jne
sarb
xor
add
bound
filds
cmp
add
cli
hlt
scas
in
mov
fsubrs
jmp
aaa
into
dec
cmpsl
and
mov
fs
les
out
mov
add
pop
outsl
adc
jno
outsl
pushl
nop
push
pop
jmp
fstps
pop
data16
fwait
orb
and
out
out
xchg
mov
lahf
pop
push
push
xchg
shld
inc
pusha
and
add
jp
add
fistpl
mov
test
test
pop
jl
adc
sbb
cmc
cwtl
cmp
push
push
xor
add
in
mov
cmp
in
lods
xor
or
adc
stos
jl
stc
test
lret
loope
mov
stos
clc
mov
or
mov
cmpsb
xor
pop
fisubl
ret
aas
push
loope
popa
clc
cmp
push
mov
loopne
push
int
add
das
out
scas
hlt
pop
orb
add
pop
sub
or
es
incl
mov
xchg
rcll
xchg
fcmovu
loop
out
test
icebp
aad
nop
push
jmp
ficomps
fistpl
mov
insb
and
xchg
push
adc
push
aad
sub
adc
adc
js
popa
out
mov
mov
pop
inc
jle
rolb
jecxz
mov
lret
adc
mov
mov
cs
or
mov
xchg
test
arpl
test
mov
jbe
lods
sbb
mov
adc
dec
icebp
add
incb
jb
dec
dec
lcall
lods
mov
cmp
xlat
stos
inc
mov
push
cmp
mov
mov
cmc
jno
data16
and
pop
inc
mov
ret
adc
lahf
jno
stc
mov
das
pusha
jmp
stos
sub
jb
cmp
add
mov
out
in
mov
sub
jo
add
dec
dec
scas
and
lock
xchg
push
push
mov
jmp
push
push
push
pop
js
sahf
mov
xchg
mov
jecxz
mov
imul
sbb
lcall
jb
movsl
pop
lock
mov
scas
mov
fwait
pushf
pop
clc
loope
mov
lea
inc
outsl
and
lret
xchg
cmp
leave
mov
or
fadds
out
jge
dec
push
or
aaa
jae
push
add
add
movsl
mov
movsb
in
scas
scas
pop
shl
inc
ud0
insb
sti
push
les
mov
or
jne
loop
outsl
pop
xchg
mov
popa
pop
les
mov
sbb
js
in
add
loopne
sub
enter
and
sahf
insb
jb
push
iret
rclb
inc
dec
in
stos
push
out
mov
movsb
adc
mov
addr16
imul
push
dec
popf
lods
pop
popf
int
xor
ljmp
pop
xchg
mov
adc
xor
movsb
sbb
push
imul
clc
pusha
adc
movsl
dec
jne
sahf
pop
inc
cmp
cmp
add
mov
bound
mov
lods
pop
lret
push
daa
fstp
sahf
push
fimull
fdivl
and
or
xchg
inc
div
mov
xchg
inc
addr16
test
mov
repz
pop
andl
or
js
cmp
sbb
jl
fwait
inc
push
mov
or
jp
je
xorb
arpl
mov
cli
cmpb
and
jle
icebp
adc
jnp
push
fucom
adc
addb
mov
sub
mov
inc
rcrl
hlt
mov
ja
push
adc
pop
pop
rcll
adc
imul
push
sub
push
push
insl
lret
jmp
test
movsl
rcrb
jnp
mov
imul
data16
fcomps
mov
ja
mov
nop
loopne
nop
addl
pusha
ja
lea
arpl
sahf
or
push
es
xor
lds
dec
fs
pushf
mov
jae
sub
dec
push
rorb
xor
inc
addr16
and
jae
rorl
jno
lcall
repnz
inc
test
mov
cmp
cmp
mov
cmp
xchg
packssdw
cmc
mov
repnz
pop
mov
test
loopne
adc
jmp
lret
cmpsb
lahf
pop
pop
in
dec
roll
cmp
inc
mov
cmp
mov
addr16
test
mov
movsl
sub
cltd
xor
push
xchg
adc
or
xchg
xchg
push
xor
adc
mov
jb
int
mov
mov
sahf
push
push
rorb
aad
pop
sbb
imul
pop
stos
fcomps
push
or
movb
jns
xlat
cmpsb
ret
sbb
out
pushf
xchg
add
pop
pop
inc
mov
add
pop
jge
pop
and
cmpsb
in
or
mov
addb
test
lds
divb
push
xor
pop
xchg
jle
jbe
dec
or
or
cs
ja
mov
jle
aad
cld
fldcw
scas
pop
gs
xor
aam
aaa
mov
cmp
xor
jb
movsb
test
and
mov
cmp
cmp
push
frstor
jmp
and
jns
sahf
imul
cmpsl
xchg
sub
shrb
mov
mov
adc
jne
push
out
rcll
shll
aaa
push
rclb
push
nop
nop
lods
or
jl
sbb
jns
xor
fwait
paddusb
pop
sbb
fldenv
sub
sub
add
xchg
out
cmp
inc
les
lahf
ficomps
and
mov
inc
sahf
mov
lret
repnz
or
lret
sub
mov
sbb
or
push
sub
adc
jbe
subb
jae
push
in
mov
repz
divl
rcr
cmc
mov
mov
lods
mov
out
in
mov
inc
orb
xchg
ja
jns
scas
cs
fsubrs
cmp
jle
and
popf
movntq
sub
and
das
in
fidivrl
add
jecxz
xchg
into
fdivrs
std
sub
pusha
loope
pop
mov
pushf
gs
adc
xchg
jmp
push
xchg
push
out
rolb
and
adcb
jp
mov
fisubrs
jp
fwait
pop
cmp
push
stos
fcmovb
and
cmp
cwtl
pop
pop
mov
mov
ss
cmc
adc
inc
mov
and
rorb
fwait
sahf
fucomi
scas
lods
into
dec
or
add
add
fcmovne
sub
test
imul
add
add
das
cmp
hlt
or
into
in
mov
xor
or
dec
gs
xor
dec
jo
mov
ds
mov
mov
sbb
cli
xchg
and
and
mov
aad
data16
orb
aas
fldenv
pusha
roll
add
jle
push
test
inc
push
push
add
jne
lret
into
push
stos
push
push
jnp
js
add
fisubrl
bound
das
lcall
mov
sbb
outsl
insl
sub
dec
xchg
lea
orl
pop
stos
sahf
cld
fcompl
pop
out
cmp
or
xlat
push
cmp
cwtl
pop
daa
js
mov
and
test
and
xlat
add
sub
adc
add
scas
pop
mov
sub
lods
mov
es
mov
movsb
jg
enter
cld
inc
inc
adcl
mov
loope
adc
out
mov
into
repnz
mov
scas
adc
loop
cs
pop
push
lods
aas
decb
jp
mov
rorl
js
cwtl
mov
sbb
push
js
mov
pop
outsb
cs
insl
ds
movb
fisubrl
in
jo
sbb
shlb
jp
das
into
sub
fisttps
inc
add
lods
test
fwait
es
mov
xchg
push
cmp
adc
bnd
lods
jae
mov
iret
imul
or
out
repnz
sbb
imul
pushf
cltd
pop
adc
rclb
add
push
inc
add
adcl
gs
add
dec
lahf
pop
sbb
outsb
and
jg
adcb
mov
add
cmp
andl
cmc
pushl
mov
jae
xchg
add
mov
mov
jp
aas
inc
mov
int3
lds
scas
outsl
int3
mov
push
jge
nop
cmp
sti
inc
das
into
hlt
leave
cmp
cli
jbe
movntps
cmp
test
cmp
jae
add
pop
jecxz
arpl
xchg
and
mov
lahf
pop
ret
push
pop
sub
dec
inc
subl
lods
insb
cmpsl
jmp
jns
cmp
sbb
movsl
movsl
sbb
adc
scas
fstl
push
or
cmc
mov
push
fstpl
mov
pop
in
sbbb
test
repnz
sbb
nop
push
mov
cmp
cmpsl
lds
dec
mov
arpl
fcmovu
test
nop
push
push
ret
pop
stc
stc
mov
shr
adc
mov
lds
aad
aad
dec
dec
mov
test
inc
cmp
out
loope
div
aad
jne
push
add
leave
cmp
xorl
lods
mov
ljmp
call
pop
aaa
int3
or
enter
jle
lcall
xor
movsl
js
stos
bound
mov
pop
and
and
lods
addr16
subb
mov
pop
pop
int3
xchg
and
jmp
jno
movsb
cmp
fwait
and
lahf
cmp
xchg
push
mov
jnp
scas
and
inc
pushf
out
dec
je
lcall
lods
arpl
pushf
mov
loope
jp
xor
push
out
ds
sbb
mov
addr16
mov
gs
rcrl
js
push
hlt
out
or
fadds
pop
mov
xor
lcall
add
push
popf
jg
mov
bswap
mov
daa
lahf
add
stos
sahf
ret
xchg
pushf
scas
aam
call
fiaddl
lds
add
aad
je
icebp
int3
add
cmp
dec
aad
mov
cs
insl
add
mov
xor
cmp
dec
cmp
jbe
dec
xchg
jp
mov
fidivl
ss
es
daa
out
lods
ret
jecxz
and
in
and
xchg
push
in
loopne
add
cmc
cs
out
cmp
mov
stos
imul
or
ret
sub
loop
addr16
sub
pop
imul
adc
cwtl
push
rcll
sub
iret
lods
in
mov
inc
lea
mov
dec
mov
lods
fdivl
adc
fstps
add
sbb
adc
inc
inc
loop
popf
addl
push
cmp
mov
add
mov
popa
mov
das
or
mov
inc
inc
jge
fldcw
sub
leave
inc
dec
or
add
inc
lds
enter
add
mov
lret
into
addr16
je
xor
xchg
fildl
loopne
jb
outsl
xchg
push
jo
lods
or
dec
loope
jns
pop
jmp
adc
je
cmp
js
jae
cmp
cmp
and
inc
arpl
in
and
popa
aas
aam
rorb
or
pop
cli
dec
or
jmp
cmp
out
adc
jecxz
dec
loopne
test
repnz
movsl
gs
lahf
dec
ficoms
push
jno
cltd
in
lods
jae
jne
iret
aad
lods
nop
out
fmul
adc
lock
sbb
jp
sbb
repz
pop
sbb
dec
push
adc
mov
push
push
cmpsl
cmp
lea
jl
cltd
addb
or
inc
add
insb
or
sbb
mov
or
mov
jo
leave
inc
movsb
or
add
or
lock
inc
out
dec
adc
jbe
in
lds
hlt
hlt
dec
mov
xchg
decb
nop
mov
xor
cli
add
jnp
icebp
aaa
cmp
out
and
movsl
xor
outsl
outsl
repz
rcrb
jecxz
jecxz
icebp
jno
imul
lret
and
ljmp
dec
pop
pop
stos
mov
adc
call
jmp
push
divb
pop
in
sub
cmpsl
mov
dec
push
push
jno
lahf
sub
iret
iret
cmp
stc
dec
nop
push
test
cld
scas
adc
int
xor
cmp
sbb
add
xchg
and
ljmp
push
addl
cmp
pop
movaps
pusha
and
add
dec
addb
mov
dec
test
jl
repnz
sub
pop
jle
pop
mov
inc
arpl
add
es
push
xor
add
xchg
xor
scas
outsl
push
loope
xchg
mov
div
dec
test
push
fmul
cmpl
aam
xor
add
add
jne
dec
nop
add
and
and
loop
sbb
adc
and
fildl
stos
rcr
das
mov
cld
in
push
add
lods
ss
aad
ljmp
out
sub
adc
mov
mov
cmp
xchg
sub
adc
out
test
pop
mov
fcompl
xor
xchg
stos
stc
mov
fistl
xor
ja
adc
fstps
ficompl
xlat
jno
rcrb
out
pop
xchg
and
testb
int
and
add
pop
jg
cltd
add
cmpsl
aam
into
mov
test
mov
mov
push
sbb
sub
add
sub
mov
movsb
test
xchg
xchg
lret
jno
jb
ja,pt
lock
aaa
pushf
pop
jb
aas
decb
jp
mov
adc
and
cmp
mov
lock
rcrb
and
lock
jno
movsl
and
loope
sub
mov
fistpll
js
pusha
mov
xchg
push
scas
scas
in
cld
sub
xchg
std
push
addr16
mov
out
stc
push
movsl
arpl
inc
xchg
adc
dec
sbb
mov
or
popl
mov
lea
xchg
jmp
mov
pop
sbb
jbe
cltd
sbb
push
out
mov
sbb
aaa
add
adc
cmp
int
add
je
fbld
lea
or
pusha
dec
jg
mov
ds
mov
fdiv
push
cmp
int3
mov
or
dec
mov
jbe
fs
adc
outsb
jge
inc
mov
in
push
push
and
mov
loop
scas
scas
nop
and
pop
sbb
jo
lods
or
sti
inc
jnp
fistl
jl
pop
inc
xchg
pop
dec
mov
fbstp
jne
jnp
ds
and
loope
pop
ret
bound
pop
loopne
pusha
mov
test
push
xchg
in
lods
mov
rorl
sbb
stos
and
out
and
ss
mov
arpl
in
outsl
add
insb
lds
cmp
dec
jp
lcall
bnd
adc
fwait
jo
std
fisubl
ficompl
push
dec
bound
sbb
shll
loope
aam
mov
add
shll
and
adc
int
jg
xchg
popa
jo
or
xchg
push
roll
push
pop
mov
adc
dec
jle
push
inc
or
sbbl
dec
cmp
add
sbb
out
cli
mov
aas
add
mov
mov
stc
testl
push
push
mov
jne
inc
xor
and
xor
popf
repnz
mov
inc
arpl
mov
cmpsb
mov
sbb
mov
sbb
inc
or
cmpsl
mov
test
xlat
inc
xchg
or
push
dec
xchg
aad
push
out
scas
subl
cmp
cwtl
test
stc
mov
xchg
imul
pop
pop
in
ret
xlat
clc
inc
aas
add
mov
fcoms
fcmovnb
pop
cmpb
addb
inc
jbe
mov
stc
jge
fcom
add
inc
inc
aas
push
pop
jge
scas
xchg
dec
or
gs
je
dec
movl
in
or
enter
cmpsb
stos
test
leave
mov
xor
out
pop
in
shll
dec
inc
icebp
xor
dec
sub
ja
xor
dec
push
repz
sbb
lock
jnp
jno
push
cwtl
push
jae
cmp
jbe
test
mov
cmp
xchg
jecxz
add
cmpsb
jecxz
xor
push
dec
fs
sub
fistpll
mov
insl
popf
mov
or
fs
loopne
fs
jmp
pop
dec
adc
cmpsl
xchg
sub
sub
inc
cmc
daa
xor
and
mov
mov
push
and
jmp
test
xor
push
out
lea
aas
xlat
sub
pop
xchg
fcmovnu
notl
sbb
mov
push
mov
xchg
dec
ds
xchg
or
and
dec
out
stc
mov
inc
shll
test
sahf
icebp
cmp
fidivl
test
pop
jl
rorl
jo
addr16
mov
inc
or
test
or
mov
xor
ficoml
in
lods
dec
adc
cmp
mov
jl
xchg
test
mov
in
fadds
sbb
lock
repnz
lods
pusha
or
mov
cwtl
sti
fildll
add
cs
dec
and
cmc
cmc
cmp
pop
sub
lods
mov
mov
cmpsl
addr16
xchg
push
push
push
xchg
xchg
push
ljmp
pop
sbb
dec
or
shrb
or
xchg
adc
stos
push
or
sub
pop
in
adcb
sbb
xchg
movsl
jae
std
pop
pop
aad
xchg
fldl
out
add
xchg
dec
add
nop
dec
or
xchg
dec
or
and
cld
cwtl
inc
mov
pop
xor
add
into
scas
cmp
pushf
mov
pop
stos
and
mov
mov
leave
imul
xor
test
xor
es
scas
jne
imul
mov
cld
dec
pop
or
leave
in
cmp
cli
or
jle
adcl
cli
fisttpl
pop
cmc
or
hlt
cli
rcrb
xchg
arpl
test
popf
andl
outsl
aas
cmc
fsubp
add
in
mov
mov
rcl
stos
push
pop
inc
movsb
out
out
scas
or
fistpl
push
cmp
test
xor
cmp
fcom
dec
int3
in
gs
adcb
push
pop
inc
jle
scas
enter
adc
int3
rclb
rcrb
pop
add
jno
lods
lcall
lds
push
xlat
pop
aas
sbb
pop
xor
inc
out
inc
add
rcrl
sbb
inc
cmp
in
add
int
popa
sarb
flds
pusha
dec
cmovnp
lods
mov
sbb
sub
push
or
push
or
outsl
or
or
push
add
call
xor
mov
xor
aas
inc
mov
and
cmp
out
sbb
sti
fdivrs
dec
cmp
pop
aaa
stc
mov
dec
push
iret
xlat
add
and
mov
dec
enter
aas
jo
push
mov
and
loope
mov
and
mov
push
out
repz
cmp
dec
mov
pushf
ljmp
adc
leave
in
es
push
pop
adc
stos
outsb
inc
out
in
ret
add
push
xor
rclb
rcrb
fisubrl
clc
lret
jge
pop
xchg
sbb
xor
shlb
cs
aas
and
pop
push
pusha
lea
jno
xchg
mov
inc
add
push
arpl
mov
inc
sbb
std
add
cmovnp
pop
mov
cmp
jecxz
push
and
mov
imul
cmpsb
or
test
pop
jne
sub
ret
xchg
pop
cld
aad
nop
leave
out
mov
into
rorb
insl
mov
mov
cmp
repz
lods
dec
cli
xor
ja
out
cltd
test
and
daa
out
data16
and
mov
js
xchg
js
pop
pop
pop
mov
das
push
sub
sub
arpl
movsb
stos
movsl
mov
stos
push
push
cmpsl
in
shr
nop
daa
gs
out
out
popa
test
xor
adc
xchg
add
pop
ja
push
nop
mov
lods
out
dec
sbb
in
pop
insb
pop
lods
lods
insb
cmp
cltd
and
cmp
dec
pop
sub
add
xchg
addr16
push
adc
frstor
add
fimuls
rclb
pop
mov
cmp
mov
pop
jle
adc
pop
or
hlt
sbb
imul
mov
or
xchg
shrl
push
shrl
and
push
push
xor
pushf
push
roll
mov
jno
lea
xor
xchg
nop
jge
mov
jno
mov
jnp
mov
outsb
adc
or
cli
cmp
ss
pusha
mov
cmc
cmp
js
cmpsb
mov
jecxz
add
xor
stc
stc
int3
adc
pop
add
lods
push
cmp
leave
jmp
sub
fmulp
mov
cmpsb
loope
sub
adc
mov
sub
sub
push
xchg
rclb
dec
clc
divl
push
pop
mov
cmp
fcmovnu
adc
out
in
add
push
mov
insb
adc
js
push
test
pusha
out
xchg
iret
imul
movaps
mov
and
add
fsubr
leave
ljmp
sub
dec
dec
rorl
out
xor
xchg
ljmp
inc
push
xchg
push
test
ljmp
shl
mov
cld
xor
add
or
xchg
dec
mov
ret
cmp
test
dec
loop
push
jo
mov
insb
or
popf
mov
xchg
fsub
xor
in
fs
jle
mov
pop
jns
lahf
in
shrl
ljmp
bound
sub
test
dec
push
leave
sub
adc
mov
push
test
adc
xor
xchg
pushf
pop
cmc
jb
inc
subb
mov
add
sbbl
sub
mov
push
dec
lock
sbbl
rolb
pop
jle
mov
je
repnz
mov
cmp
lods
scas
daa
or
stc
test
or
sub
fimull
out
out
dec
pop
in
adc
repz
cmp
enter
push
ljmp
xchg
pop
lock
ret
xor
adc
jp
shrd
enter
xor
mov
push
lret
fidivs
data16
mull
or
sbb
inc
es
outsw
jge
jge
mov
push
jl
mov
or
loopne
rcrb
in
pop
jp
dec
inc
inc
sub
stc
cmp
xchg
test
fstl
call
in
adc
lods
dec
in
fs
xchg
repnz
and
xor
push
inc
add
je
push
int
sub
push
pop
pop
xchg
xorl
add
mov
sbb
push
imul
push
loope
mov
dec
aaa
imul
and
xchg
inc
mov
add
int3
sub
loopne
or
inc
sbbb
in
loopne
mov
arpl
lret
hlt
mov
pop
xor
movsl
push
aaa
shlb
mov
test
cwtl
xor
push
sarl
js
in
fcoms
cmp
add
jnp
sbb
sbb
loop
mov
cld
sub
icebp
or
int3
out
daa
xorl
pop
stc
in
and
add
pop
lahf
or
scas
mov
div
movsl
imul
std
inc
inc
and
inc
cmp
cmpsl
xacquire
gs
ss
adc
out
cmpsb
test
rcll
lahf
adc
rclb
pop
cmp
dec
jle
ficomps
sbb
cmp
cltd
into
stc
cmpsl
sbb
mov
xchg
push
aad
sbb
rcrb
xchg
inc
subl
inc
jg
mov
ja
ds
sub
hlt
jle
mov
test
mov
lret
ret
push
sub
adc
shll
subl
push
ret
lock
xor
lock
lcall
lods
mov
cmp
jmp
mov
ds
dec
pop
push
mov
popa
daa
out
jb
adcb
ret
xor
add
bound
fildll
push
adc
push
arpl
adc
mov
daa
stc
cmp
out
mov
aad
out
insb
aad
dec
hlt
shlb
gs
jl
adc
movsb
out
mov
loopne
adc
sub
cmp
iret
jb
int
std
pop
ficompl
mov
adc
sbb
mov
sbbl
and
call
ds
ja
mov
fildl
pop
lea
dec
lcall
fcmovnbe
add
call
sub
cs
int3
int3
mov
cmp
or
int3
lods
stos
clc
push
push
vandps
out
aaa
mov
xchg
xchg
push
sub
hlt
mov
pushf
scas
icebp
jno
sbbb
xor
and
lods
insl
nop
aam
cmp
loopne
das
std
jl
cmp
cli
lock
fldenv
clc
clc
inc
add
adc
mov
daa
mov
fldz
arpl
aad
aas
adc
add
loop
mov
popf
pop
and
imul
stos
imul
dec
or
cmp
adc
repnz
inc
and
rcrl
stc
fwait
adc
xor
inc
and
in
jnp
sbb
int
stos
ljmp
shr
scas
icebp
inc
cltd
cltd
adc
lods
pop
mov
mov
xchg
jg
enter
lock
inc
jbe
rcrl
adc
stc
lds
rol
sub
fwait
sahf
xor
into
mov
stos
push
ret
or
mov
cmpsl
xor
xchg
imul
test
aas
mov
xorb
lock
icebp
mov
aam
jb
and
aas
lahf
sbb
aas
loope
ds
cmpsb
dec
dec
sub
nop
push
and
pop
fcmovnbe
cmp
adc
mov
jne
mov
jne
repnz
int3
fbld
mov
and
fistpll
fldpi
push
push
or
scas
outsb
testl
jmp
in
jp
loope
test
loop
mov
jbe
test
mov
rcll
sarb
in
cld
push
dec
adc
rorb
int
stc
mov
cmpsl
fwait
rcl
scas
pop
cltd
fstps
sbb
cltd
xchg
movsl
push
and
push
or
in
test
inc
mov
loope
es
xor
or
push
fmull
mov
adc
mov
xchg
rcll
aaa
pop
pop
divb
jg
xchg
mov
mov
call
mov
jmp
int
aaa
pushf
pop
jns
aas
decb
jp
mov
loop
aam
cmp
dec
jge
cmp
push
sbb
js
repz
and
loop
data16
cli
xor
xchg
jno
loope
pop
int
bound
lods
mov
pusha
push
inc
leave
lea
ss
int3
scas
test
sub
inc
add
and
es
or
push
adc
mov
rclw
mov
inc
xor
in
inc
sbb
fidivrs
clc
rcr
fwait
pop
rcl
dec
and
sub
fwait
mov
addr16
push
cmp
inc
push
push
xchg
sbb
ret
adc
rclb
lahf
pop
pop
ret
lret
adc
xchg
mov
push
add
xchg
push
push
lret
or
xchg
mov
mov
adcl
test
int3
adcb
jmp
adc
fiaddl
mov
mov
dec
fimuls
dec
jb
lods
dec
adc
mov
pusha
dec
sub
sub
stc
mov
sarl
divl
jno
js
fists
pop
out
ret
push
addb
and
aad
loop
js
into
mov
mov
popf
pop
das
imul
cmp
jecxz
lods
insb
mov
push
lret
decb
stos
push
out
ds
test
imul
fidivs
aam
push
inc
inc
push
adc
aas
in
jecxz
dec
in
mov
int
mov
cmp
cltd
movsb
mov
es
lcall
into
cwtl
inc
adc
gs
arpl
incb
inc
aam
add
ljmp
and
fldcw
loopne,pt
or
lret
out
or
mov
push
adc
xchg
adc
pop
aaa
xchg
push
imul
mov
xor
sahf
jo
xchg
xchg
bnd
in
fs
push
cmc
mov
inc
int3
dec
cs
ja
cld
mov
stc
jns
mov
stc
movsl
ja
mov
jmp
daa
cmpsb
data16
push
movsb
and
out
adcb
and
mov
popf
out
scas
adc
int3
sub
mov
jp
test
mov
fmulp
movsl
push
pop
xchg
ja
lea
or
xchg
sahf
adc
das
and
xor
mov
stos
cmp
repnz
fwait
pop
sbb
iret
ljmp
xchg
and
sti
xchg
cwtl
pop
fistpll
js
mov
fs
mov
fdivrp
test
sub
adc
sbb
outsb
cld
into
sbb
pop
sub
mov
mov
test
adc
xlat
add
mov
xchg
sub
push
and
repz
mov
inc
adc
testl
outsl
repnz
jb
in
mov
and
jle
cwtl
xchg
jle
cmp
pop
mov
mov
fdivl
js
lahf
cmp
out
add
xlat
mov
cmova
mov
rorb
pop
and
fstpl
outsb
sub
mov
dec
cmp
push
sub
or
xchg
push
xor
rcll
sbb
and
repnz
xchg
in
notb
cmp
mov
lea
lock
fcmovnu
imul
pop
xchg
xlat
xlat
pop
xchg
and
hlt
xchg
cwtl
pop
push
jle
add
movsl
hlt
shll
add
test
ret
adc
jg
stos
popa
dec
jle
std
rorb
xchg
or
mov
lret
xor
rcl
dec
aam
stos
inc
rcll
sarl
dec
inc
xor
iret
mov
in
mov
push
out
aas
insl
aas
and
push
fcmovnb
orb
adcl
sbbl
ss
jg
clc
xor
xor
mov
in
aas
xor
aam
push
bound
rorb
xchg
push
xor
out
and
cli
fwait
mov
jge
cmp
mov
call
fidivrl
mov
push
adc
insb
push
in
test
dec
dec
jp
lcall
lock
push
fcmovnu
cld
dec
sbb
add
xchg
xlat
xchg
and
push
cwtl
pop
fists
push
ds
add
les
dec
dec
fdivrl
add
mov
outsl
push
int3
into
xchg
mov
decb
sub
mov
mov
mov
sbb
ljmp
adc
nop
dec
inc
icebp
xor
dec
jb
mov
mov
xor
sbb
sarl
dec
mov
sub
pop
jmp
pop
aam
jp
ja
mov
cmc
pop
jne
in
repnz
add
cmpsb
jecxz
xor
mov
push
fldcw
mov
fbstp
in
push
pusha
sub
imul
lahf
stc
sub
ljmp
call
jb
in
lahf
and
stc
adc
aam
pusha
lock
cmpsl
adc
scas
xchg
lock
push
daa
add
push
sbb
xchg
out
pop
mov
fucomi
sub
incb
push
xor
lret
xchg
push
sbb
fwait
in
movsb
bound
pop
int3
adc
incb
mov
ret
stc
rol
pop
in
stos
xchg
jge,pt
lcall
sub
dec
incl
ja
fnstenv
or
xchg
ret
data16
in
mov
xchg
daa
xor
xor
lods
cmpsb
adc
xorl
sub
jnp
aad
ja
cld
push
pop
xor
mov
xchg
inc
sbb
mov
mov
mov
out
inc
push
adc
fwait
aad
mov
jl
fbld
loopne
pusha
mov
int
sub
dec
popa
sub
in
js
sub
pop
jp
aaa
imul
stos
cmpsl
addr16
push
loope
in
xor
and
lock
iret
jo
adc
adc
iret
fwait
xor
int
push
mov
ficoms
cvtps2pi
out
loope
push
cmp
nop
jnp
sbb
push
pop
push
lahf
push
push
xchg
in
add
fistpll
sahf
pop
inc
ret
int3
negl
addb
or
lret
ljmp
pop
dec
mov
inc
lcall
dec
dec
pop
mov
fdiv
test
xor
sahf
xchg
in
xchg
push
dec
dec
jle
jl
or
leave
stc
or
mov
enter
outsb
dec
mov
cmp
sbb
jp
cmp
daa
daa
ja
jmp
mov
loope
xor
mov
and
bound
shl
jmp
dec
ds
inc
pop
push
sub
test
ljmp
pop
outsl
jne
jecxz
enter
shl
inc
pop
xchg
rcll
ror
cmpsl
add
test
lock
dec
sahf
addr16
pop
cli
inc
dec
pop
ficoms
push
sub
pop
clc
mov
sbb
rclb
ret
sbb
mov
stos
push
push
pop
iret
push
ds
add
inc
addl
dec
pop
push
subb
fisubrl
adc
mov
cmp
pushf
loop
xchg
adc
lds
outsl
mov
or
push
hlt
xor
jge
mov
mov
int
xorb
push
pop
xor
in
dec
adc
idivl
sbb
pop
inc
cmp
fwait
test
jp
ds
sbb
xor
out
popf
and
add
mov
cltd
fldcw
dec
jae
das
out
jp
mov
lret
mov
pushf
stc
cmpsb
pop
mov
cmpsl
addr16
xor
es
mov
xchg
xor
clc
xchg
xchg
push
loopne
imul
cmc
xchg
push
jmp
lods
jb
dec
dec
stc
scas
mov
lcall
sub
mov
push
push
cmp
test
push
daa
mov
clc
rolb
add
push
inc
rcrb
rcrl
rol
cmp
sbb
insb
xor
std
into
mov
or
inc
aas
ret
or
imulb
movl
mov
mov
mov
shlb
and
dec
or
dec
int3
xchg
cmc
mov
cltd
pop
pop
cmp
inc
jnp
mov
loop
aam
cmp
divl
cltd
cmpsb
cmp
cmc
cmp
clc
xchg
test
frstor
and
mov
adcl
add
insb
push
push
mov
pop
scas
outsb
imul
and
sub
test
stos
push
sbb
or
arpl
idiv
movsl
xchg
push
fbstp
add
stos
inc
movsb
bound
shlb
pop
pop
cmp
pop
cli
mov
in
xor
push
sbb
nop
xchg
daa
hlt
in
pop
xchg
push
aam
aaa
add
adc
movsl
loopne
xchg
push
mov
sahf
push
test
mov
int
lods
push
std
bswap
xchg
sbb
fmulp
int3
int3
jmp
mov
rorb
pop
add
push
lds
int3
dec
ret
xor
push
push
and
loop
repnz
arpl
sahf
dec
inc
out
xor
mov
xlat
cmc
cmp
incb
cwtl
cmpl
clc
stc
sub
sbb
jp
mov
pop
cli
xchg
mov
daa
loop
retw
data16
loope
cmp
xor
iret
jmp
aad
loopne
pusha
mov
stos
sti
sub
data16
adc
inc
stos
push
arpl
cmpsl
xor
loope
mov
pop
and
fbstp
add
lea
movsb
and
leave
das
lcall
add
and
mov
cltd
gs
xchg
push
mov
pop
mov
pop
adc
std
movsbl
mov
ret
stc
rclb
stos
xchg
jge,pt
lcall
sub
dec
inc
inc
jns
mov
add
outsb
or
mov
jle
jmp
inc
cmp
xor
adc
push
jo
repnz
xor
movsl
jl
in
fsubrs
adc
mov
cmp
leave
mov
cmp
and
jle
clc
mov
js
daa
out
xor
stc
pop
in
rcll
inc
pusha
cmpsl
and
add
or
pusha
ficoms
stc
cli
popf
jmp
stos
sti
sub
js
mov
sub
test
rcr
xchg
clc
sub
xor
and
add
outsb
and
push
lahf
mov
test
nop
das
pop
add
jnp
sbb
inc
sbb
xchg
adc
xchg
adc
jns
int3
std
push
cli
cmc
test
aad
inc
int3
pop
cmp
sbb
jne
aam
and
aad
inc
inc
jne
pop
les
aas
push
test
scas
mov
cwtl
out
test
cmp
or
xchg
push
mov
mov
inc
enter
push
push
add
hlt
lret
cs
jle
dec
into
movsb
fnstcw
scas
nop
and
xor
insl
mov
mov
cmp
fwait
inc
fimuls
mov
or
orl
loope
mov
mov
les
stc
mov
xchg
out
nop
jae
xor
pusha
push
push
jle
cmp
jmp
loope
in
or
jecxz
push
mov
loop
sub
push
cltd
dec
hlt
mov
in
pop
fsubl
stc
adc
out
lds
xchg
push
out
jmp
fsubr
cli
mov
xor
lea
mov
popf
fwait
fwait
mov
cs
fstps
pop
cmpb
pop
mov
cmp
fbld
lea
jecxz
addl
loopne
pop
adc
call
or
push
dec
popl
push
cmpsl
out
push
jmp
mov
dec
test
dec
cs
xchg
adc
bound
lock
in
lods
insl
dec
jo
pop
jne
pop
add
jl
cmp
bound
or
or
mov
add
xor
jecxz
aaa
sarl
and
fwait
adc
add
es
adc
fucomp
scas
outsb
mov
mov
insb
sub
stos
push
ds
call
jb
es
bound
jp
xchg
push
adc
adc
test
test
cwtl
fwait
pop
mov
push
lcall
out
adc
sbb
cltd
mov
pop
andb
loop
cwtl
xchg
push
fcomps
jge
incb
out
adcb
stc
inc
dec
pop
scas
pop
dec
add
rolb
fmul
mov
lret
adc
dec
int3
mov
lret
sub
dec
inc
or
inc
mov
jae
mov
mov
in
lods
ret
push
jl
xor
dec
outsl
mov
ficoms
mov
sbb
enter
out
lock
test
xor
xchg
das
out
mov
mov
jne
out
adc
inc
push
das
and
push
outsb
mov
pop
lahf
pop
inc
shrl
popf
pop
cli
sbbb
jmp
loope
mov
and
and
adc
cmp
aam
and
and
dec
cmc
xchg
push
push
jae
xchg
in
inc
movsl
rcll
xor
and
mov
leave
sti
mov
rclb
test
stos
sbb
pop
inc
sbb
out
jnp
adc
std
jno
fcomp
cwtl
pop
add
xchg
push
mov
stos
and
ret
push
add
jecxz
add
adc
dec
lcall
sub
aad
lea
inc
outsl
push
xchg
scas
fisttpl
mov
data16
lahf
imul
push
cld
stos
push
ja
test
cs
xor
imul
mov
cs
call
cs
stos
sbb
fstpl
cmp
rorb
jl
mov
cmp
movl
push
or
xchg
arpl
bound
push
inc
inc
in
roll
push
ds
out
inc
xor
stos
imul
adc
mov
imul
call
movsl
gs
movsb
sub
out
jae
adc
mov
push
mov
scas
loopne
xor
fisttps
push
mov
sahf
mov
addr16
dec
cld
sub
jp
xchg
daa
in
sbb
setp
aad
pop
sub
xchg
add
cmpsl
cmpl
call
or
aaa
mov
jecxz
addr16
into
mov
enter
leave
mov
mov
or
pop
jb
popa
enter
mov
or
movsb
data16
std
push
adc
jno
mov
nop
mov
fistl
mov
lods
mov
mov
mov
mov
jns
jmp
cs
pop
pop
jne
pop
dec
cmp
cmc
mov
int3
mov
shl
mov
das
fs
adc
add
pusha
push
mov
scas
outsb
mov
lods
insb
out
out
xlat
xchg
imull
sub
addr16
mov
jne
in
jo,pn
push
and
aam
repnz
push
lods
pushf
push
dec
adc
imul
cmp
mov
add
js
sub
ficompl
jecxz
xchg
cwtl
pop
push
xchg
xchg
jmp
pop
xchg
push
inc
add
mov
ret
pop
xchg
mov
sub
xchg
dec
test
stos
and
mov
aam
adcl
or
or
xor
xor
lods
mov
pop
in
push
adc
jno
mov
out
mov
jp
jo
leave
pop
and
insl
mov
jnp
mov
dec
stc
imul
divl
outsb
rep
or
mov
movsb
mov
and
addr16
xchg
inc
pop
pop
and
test
scas
pop
pop
pop
mov
dec
imul
imul
call
je
pop
gs
xchg
push
test
loope
fisttpll
scas
cmp
dec
rclb
cmc
cwtl
pop
pop
jmp
pop
fcompl
xchg
cmp
fcom
shlb
add
xchg
ret
mov
sbb
popa
js
add
fstpl
dec
mov
mov
mov
repnz
test
or
movl
out
notb
sub
mov
rcll
xor
stos
fldl
mov
pop
int3
xor
mov
mov
fsubrl
popf
cmp
jns
int3
mov
jp
mov
and
cmp
xlat
scas
lahf
dec
mov
jo
cmp
aas
hlt
mov
pop
clc
pushaw
pusha
mov
lods
jmp
push
or
lods
insb
lret
xor
sub
popa
and
ss
pop
loop
loop
xchg
xchg
out
scas
jne
adc
call
and
in
shrb
sbb
pop
sti
dec
add
mov
or
xor
lcall
ss
inc
push
push
aad
cwtl
jecxz
pop
ret
push
sahf
cmp
shll
mov
adc
std
mov
aas
ss
mov
int3
xor
imul
in
mov
adc
enter
movb
xor
xor
mov
icebp
hlt
mov
xor
jp
mov
mov
cld
aad
fisttpl
mov
iret
in
xor
xlat
lea
cmp
mov
aam
divb
test
mov
adc
retw
fiaddl
adc
and
mov
bound
and
notb
lahf
jl
mov
addr16
das
out
push
clc
out
clc
or
aad
lods
insb
arpl
sub
xchg
repnz
movsl
and
push
and
fsts
aam
inc
adc
push
or
and
fcmovne
push
xor
mov
out
fdivr
insb
pop
sub
sbb
jbe
pop
aaa
out
pop
mov
xor
mov
daa
push
xchg
mov
jecxz
adc
jl
inc
and
outsb
fidivs
add
add
mov
inc
xchg
std
or
test
dec
subb
sub
test
stos
mov
sub
aaa
inc
aaa
imulb
repz
test
movsb
mov
jno
out
jb
out
imul
sbb
mov
es
cld
mov
lahf
jns
fldcw
js
push
es
mov
out
jne
out
popf
fldenv
jecxz
sub
ret
addr16
and
jo
out
out
scas
cld
shrb
inc
xchg
lods
or
lcall
adc
mov
lcall
inc
and
xchg
rorb
outsb
lods
adc
xchg
aas
in
aam
dec
in
mov
lcall
jg
fistpl
sti
imul
test
pop
mov
jmp
and
iret
push
xchg
popf
arpl
mov
inc
fidivs
and
addb
outsb
jb
bswap
sub
lock
jle
or
xchg
scas
rcr
addr16
dec
or
or
push
adc
mov
test
jo
jae
in
je
icebp
push
adc
push
repnz
dec
scas
dec
adc
cmp
cs
stos
jl
popa
sti
int3
mov
mov
jl
pop
sti
sbb
jnp
idivl
and
loop
repnz
gs
add
cmpsb
jecxz
xor
std
push
loope
jg
inc
mov
outsl
incl
mov
popf
pop
or
pop
sub
mov
jmp
in
lods
fcmovbe
jmp
call
sub
push
push
adc
and
leave
jbe
adc
gs
stos
sub
scas
stos
lods
nop
iret
dec
adc
insb
imul
sahf
pop
std
xchg
sahf
aaa
loope
sbb
pop
cltd
sbb
sbb
xlat
xchg
xchg
vmovaps
add
cmp
fs
les
add
sbbb
sbb
cmc
mov
outsb
decl
add
or
mov
arpl
jbe
lea
mov
addb
int3
jecxz
lret
dec
sahf
loope
push
call
mov
dec
dec
int
data16
sbb
fadds
jnp
scas
mov
test
mov
movsl
mov
fbld
sub
popf
add
movsb
movsb
sti
scas
jg
loopne
adc
add
jo
mov
and
dec
add
enter
testl
mov
sub
movsb
stos
test
in
mov
dec
jae
shrl
jmp
xchg
xchg
push
in
mov
mov
pop
xor
out
dec
dec
mov
jge
pop
sbb
cltd
shl
stos
add
inc
adc
addr16
push
loope
mov
inc
and
sbb
fs
loopne
jg
int3
popa
inc
mov
dec
or
mov
pop
int3
add
lret
jnp
xchg
fs
or
dec
xor
imulb
inc
ds
jge
jno
shl
xor
xor
mov
aas
sbb
mov
push
fs
cmp
test
cmp
imul
daa
repz
inc
mov
jle
pop
subb
mov
sub
and
popf
popf
xor
outsb
mov
lret
mov
cmp
or
inc
es
xor
pushf
mov
inc
adc
jb
add
cmp
rcrl
out
repz
mov
xchg
mov
ret
ljmp
data16
fcomps
push
fwait
mov
aam
push
pop
pop
xor
roll
mov
out
lea
das
mov
add
fldt
out
dec
or
pop
dec
call
ljmp
inc
mov
cmpsl
mov
divl
and
xchg
mov
jo
xchg
iret
xor
cmp
rcll
cmp
cli
xlat
imul
ss
mov
shlb
inc
mov
incl
loop
or
lock
push
rolb
push
fstpl
stc
imul
insb
dec
test
pushf
jmp
xchg
sub
insl
addr16
add
outsb
and
repz
push
adc
mov
fisttpll
jmp
sahf
cmp
lret
sahf
fwait
pop
into
pushf
fstps
fldenv
pop
ja
andb
cwtl
pop
push
mov
xchg
loope
mov
inc
add
sub
les
pop
add
cmp
movsl
mov
in
stos
lods
inc
jge
lcall
lods
nop
dec
or
inc
mov
add
sbb
enter
ds
push
mov
or
xor
outsl
xchg
rcl
shlb
scas
mov
and
fwait
fwait
mov
repnz
mov
lock
ja
mov
mov
call
adc
add
mov
fdivrs
lock
and
lds
aas
popf
popf
fwait
loopne
mov
xchg
insb
insb
inc
mov
mov
sub
aas
push
dec
daa
arpl
cmc
arpl
rol
daa
xor
imul
mov
mov
mov
cmp
dec
dec
dec
nop
jl
imul
sbb
cmp
shr
cmpsl
sbb
and
fcomps
mov
leave
mov
dec
testl
ljmp
sub
into
addl
test
pushl
inc
std
mov
rcrb
lea
daa
data16
xchg
inc
repz
xor
inc
mov
jno
in
push
fiaddl
in
or
imul
or
mov
sub
push
or
jno
push
push
js
sahf
mov
je
and
inc
and
incb
repnz
loop
cmp
add
and
lds
aas
popf
popf
fwait
loopne
into
mov
or
insb
insb
inc
mov
mov
sub
aas
push
dec
daa
arpl
mov
rcl
shll
xor
dec
lods
and
out
mov
jg
dec
dec
dec
nop
push
mov
sar
test
rcl
cmpsl
sbb
xchg
loop
fcomps
mov
leave
mov
dec
testl
ljmp
mov
dec
icebp
mov
cmpsb
pop
int3
orl
mov
inc
or
mov
push
test
inc
mov
pop
loope
xorl
xchg
add
sbb
out
out
into
aas
add
mov
imul
lahf
insl
and
add
pop
mov
repz
xchg
stc
sub
mov
mov
pop
inc
xor
lods
push
popf
popf
pop
das
loopne
btc
jmp
inc
ljmp
sub
pushf
jg
ja
movsl
addr16
stos
jno
jne
mov
adc
add
mov
push
push
test
ror
sub
jb
adc
cmc
inc
jg
lea
stos
fucomi
movsb
sbb
pop
pop
jb
dec
stc
push
nop
pop
clc
and
rcr
xchg
pop
sub
in
ret
mov
rorb
mov
mov
into
xchg
dec
int3
test
dec
pop
cmp
jbe
mov
dec
or
addl
pop
jnp
inc
mov
pop
ljmp
cmp
sarl
out
in
mov
fistpll
dec
pop
or
jae
mov
mov
add
mov
cmp
mov
jne
daa
or
arpl
mov
fbstp
ds
mov
inc
mov
cld
imul
pop
or
loopne
mov
sub
popa
sbb
ss
data16
cld
cs
mov
adc
and
jno
iret
in
mov
push
inc
inc
push
push
js
pop
arpl
jge
sbb
in
jnp
sbb
mov
test
fldl
xchg
pop
fstpt
xchg
add
rcrb
lret
nop
add
xorl
or
mov
stos
imul
testl
dec
scas
mov
xchg
fistpl
mov
cmc
loope
xorl
les
cs
out
jecxz
jl
fsubrl
mov
pop
dec
mov
dec
sbb
fistps
xchg
cmp
jno
xlat
push
js
lfs
ds
inc
xor
inc
scas
mov
push
cmpsl
outsl
jle,pt
mov
roll
mov
sub
cmp
xor
lds
int
cmc
es
popa
jo
xchg
xchg
mov
aam
mov
push
dec
pusha
sbb
jno
dec
js
add
aad
std
stos
sbb
imul
jmp
dec
sub
stc
cmpsl
sbb
dec
daa
jmp
sub
std
jmp
add
dec
adc
shl
xchg
add
dec
adc
pop
popl
loopne
mov
cmpsl
dec
ds
dec
or
xchg
and
fmull
lea
dec
or
jmp
inc
or
lret
aad
push
pop
nop
add
cwtl
xor
mov
icebp
iret
mov
les
cwtl
adc
jo
data16
dec
dec
mov
mov
sbb
jns
add
aad
ss
jne
xor
cmpsb
mov
addb
inc
repnz
popa
pop
mov
outsl
lahf
mov
push
push
sbb
and
cmp
je
movsl
jl
in
ret
enter
out
inc
dec
cmp
stos
mov
jecxz
add
jecxz
push
jl
pop
jb
xchg
stos
jns
sub
fs
ss
lret
adc
shr
sbb
in
jbe
pushf
pushf
mov
stos
mov
sbb
call
dec
pop
gs
xchg
outsb
in
add
xor
or
inc
pop
sub
clc
sbb
add
in
scas
pop
mov
sbbl
bound
orb
cwtl
or
pop
dec
push
and
mov
loope
in
adc
xor
xchg
rolb
leave
xchg
into
xor
xchg
aas
sbb
insl
insl
imul
inc
rcrb
cmp
sbb
pop
or
add
into
add
adc
jge
xor
mov
mov
decl
bound
push
mov
hlt
or
xor
imul
mov
jmp
imull
es
ss
mov
fdivrl
push
inc
cmpsb
jne
popa
xchg
scas
jp
xor
xlat
lock
outsb
jg
fwait
fwait
pop
ljmp
jbe
lcall
push
aad
push
in
stos
in
ret
jmp
les
push
ret
idiv
mov
out
dec
std
leave
push
into
mov
mov
cmpsb
pop
int3
enter
mov
mov
test
test
cltd
rolb
repnz
xlat
repz
ret
xchg
inc
icebp
in
dec
fcomi
mov
in
sbbl
cld
mov
popf
dec
sti
negl
cld
mov
xchg
dec
cli
out
xlat
divl
movl
lods
test
xchg
cmp
stos
mov
jno
xorb
filds
iret
insl
fnstsw
lea
mov
lret
jns
mov
ja
mov
testb
xor
arpl
test
loop
mov
popa
shll
mov
iret
mov
ficoms
scas
adc
imul
sbb
push
xorb
or
sub
icebp
loop
sbb
pop
jno
pop
xchg
pop
pop
movb
inc
mov
inc
ja
std
pop
sub
addb
pop
rolb
pop
shl
int
fimuls
adc
mov
cltd
leave
xchg
and
jne
pop
mov
aaa
aaa
sbb
jae
sbb
out
add
push
fsubrs
ds
cmpsb
mull
addl
decl
mov
loopne
xchg
cmp
jno
xchg
push
js
pop
shlb
int3
ds
cmp
insb
xorl
mov
xorl
adc
jle
mov
pop
jl
mov
les
scas
pop
fstl
lods
pop
fistl
stos
pop
pop
aas
test
fwait
lcall
cltd
sahf
icebp
pop
iret
mov
ficoms
scas
pop
pop
or
fisttpll
mov
insb
fcompl
fld1
test
mov
xchg
push
adc
cwtl
cwtl
icebp
and
roll
mov
add
test
shr
pop
adc
nop
add
dec
push
test
mov
sbbl
sbb
push
in
jmp
push
add
dec
nop
add
mov
int
adc
ret
outsl
inc
cmp
push
shrb
and
cmc
fstp
mov
ja
insb
mov
xchg
jnp
bound
dec
mov
ja
mov
jne
daa
out
inc
stc
jae
mov
inc
push
mov
je
movsl
xor
and
bound
mov
test
jnp
jmp
pop
jmp
repnz
les
stos
stos
and
pop
mov
ja
gs
test
sub
mov
adc
adc
lock
cmp
sbb
xchg
out
pop
and
fwait
fwait
mov
lea
mov
pop
jo
insl
aaa
push
addr16
pop
pop
sub
inc
push
sub
call
push
call
xorb
mov
add
fimull
xchg
add
inc
push
adcb
push
movb
push
aas
adc
les
addb
push
ret
cmpsb
inc
cmp
xchg
shrb
jle
sub
jl
xor
jnp
mov
lret
cmpsb
in
cmpsl
fsubs
fisubl
test
into
jne
xor
nop
loopne
mov
movsb
movsb
fs
mov
sbb
out
sahf
shlb
mov
and
mov
sub
or
rcr
or
js
lods
adc
inc
xchg
dec
push
or
jl
scas
mov
and
imul
xchg
jae
xor
in
sbb
lahf
ljmp
xchg
xchg
mov
jg
addr16
xchg
scas
daa
roll
mov
sti
addl
xchg
ret
das
adc
lea
mov
mov
lret
cmp
ljmp
dec
pop
mov
dec
pop
mov
aaa
aaa
sbb
jae
sbb
out
add
push
fdivs
ds
cmpsb
mov
mov
jnp
movsb
dec
and
add
enter
jmp
and
mov
mov
int3
popa
add
movsb
mov
ljmp
and
mov
mov
loopne
dec
ret
in
pushf
and
mov
mov
dec
jns
cmpsl
jb
or
iret
cmp
data16
stos
adc
inc
xchg
inc
adc
sbb
int
push
jp
lods
lahf
adc
dec
pop
cmp
nop
push
push
int
push
aas
sub
divb
add
ljmp
fucomp
sbb
pop
xchg
xchg
mov
xchg
mov
ret
shrl
jp
push
inc
push
sbbb
add
inc
xor
adc
in
pop
lret
lret
stc
aas
repz
sbb
push
push
push
mov
or
push
aas
adc
les
mov
cmp
cmp
shrb
jle
and
into
insl
xor
loope
int3
cmp
mov
mov
ret
or
mov
mov
movsb
mov
inc
fptan
mov
xorb
popa
pop
mov
subb
dec
clc
adc
in
push
mov
jl
mov
xchg
jl
ljmp
fdivl
pop
xor
adc
rcll
sub
insb
lds
adc
dec
insb
add
cmpsb
add
sbb
idivb
sarl
stos
sbb
xlat
push
add
es
adc
adc
or
addl
lea
jnp
cmp
sbbb
pmaddwd
out
lea
fidivs
or
push
jle
jmp
xor
movl
mov
addl
push
in
sub
ljmp
shr
xorb
push
jo
cs
ja
fimuls
or
jg
stc
cmp
jp
mov
mov
jmp
lds
jmp
cmpb
and
je
pushl
pop
cmp
fnstsw
iret
out
das
scas
outsb
cmp
jle
inc
jmp
push
clc
cld
repnz
test
cmpsb
pop
mov
push
xchg
adc
insl
aaa
hlt
and
xor
in
iret
adc
push
scas
lahf
ja
jo
sahf
jnp
subl
out
sti
test
iret
stc
cmpsl
sbb
fcomps
cmc
pop
push
adc
adc
in
add
sahf
inc
xchg
pusha
icebp
mov
call
mov
loope
pushf
or
or
inc
adc
sbb
loope
stos
or
aas
adc
inc
cmp
mov
ds
mov
fidivrs
mov
in
fwait
mov
lods
aas
jo
fisttpl
sarb
stc
cmp
cmp
ja
mov
mov
xlat
scas
sub
loopne
mov
stc
cmpsl
movsb
repnz
mov
mov
fistpll
shrb
cmp
xor
das
out
xor
stos
imul
mov
mov
stos
inc
aam
aaa
fst
mov
es
pushf
movsl
fcmovnbe
mov
adc
jo
xchg
adc
and
les
notb
iret
cs
rclb
nop
push
sub
stos
dec
xchg
cwtl
jo
mov
fwait
jl
test
ljmp
lcall
jns
cwtl
push
aad
add
adc
adc
maskmovq
testl
sbb
jns
mov
test
or
mov
icebp
hlt
cmpsl
cltd
or
lret
sub
inc
add
lds
xlat
divb
mov
add
data16
mov
xorb
mov
mov
cltd
pop
jle
cmp
jne
sbb
adc
cmp
xor
aam
cmp
js
cmpsl
pop
sbb
out
inc
shrb
mov
ret
xlat
mov
pop
lahf
and
bound
ds
pop
cmp
xor
sub
cmp
int
sub
cmpsb
imul
nop
xor
gs
lahf
dec
das
xchg
call
lods
iret
dec
adc
insb
imul
mov
pop
cmp
pushf
fcompl
jae
out
lcall
push
cmpsl
cmp
movb
xchg
rcrb
pop
lea
data16
mov
lret
add
sbb
dec
pop
insl
sbb
aas
adc
sbb
or
imul
adc
mov
nop
xchg
inc
repz
popa
push
sbb
mov
in
jno
lea
mov
mov
in
ficoms
cmp
leave
xlat
popf
mov
jl
mov
cmp
mov
pop
inc
push
mov
jne
jae
adc
and
mov
movsb
subl
stc
xchg
inc
out
scas
mov
jmp
in
lods
mov
mov
or
addr16
adc
ss
jae
roll
mov
adc
shll
adc
and
jmp
jnp
es
int
imul
ret
fwait
mov
adc
mov
xchg
insb
stc
mov
arpl
push
pop
aad
adc
cmp
fs
aas
inc
mov
mov
aas
mov
ds
cltd
lcall
fmuls
or
dec
addl
xchg
mov
in
sub
sahf
adcb
call
mov
ret
xlat
or
cld
dec
dec
fildl
or
adc
cmp
xlat
popf
sub
cmp
aam
add
add
dec
ja
ss
inc
inc
hlt
test
push
jge
add
out
in
fs
test
push
icebp
xchg
jl
aad
pop
das
sub
jp
mov
or
int3
jmp
ror
out
mov
iret
jae
add
outsl
imul
and
stc
inc
adc
sahf
lock
push
adc
dec
sti
mov
mov
pop
fistps
aad
pop
mov
sbb
js
gs
lcall
arpl
xor
mov
ret
xor
inc
inc
ficoms
loopne
add
mov
fwait
jns
jecxz
inc
andb
jg
xlat
lret
or
sub
dec
ficoml
or
aam
push
sbb
push
test
jmp
mov
fcmovnu
mov
xor
mov
pop
mov
mov
ja
mov
dec
cmp
stc
mov
push
xchg
or
fdivl
cmpsb
out
popf
icebp
sbb
movsb
aam
inc
xor
aam
xchg
fistpll
mov
in
shrl
cmp
lods
and
cli
sub
mov
ljmp
in
jmp
mov
push
je
movsb
ljmp
insl
sub
lods
in
mov
xor
dec
mov
sbb
pop
scas
pop
sbb
push
call
push
sarb
movb
inc
push
sbb
push
jecxz
pop
jle
ret
cwtl
cld
mov
ds
sbb
out
mul
mov
outsl
push
pop
stc
loopne
or
mov
pop
add
jmp
iret
xchg
inc
aaa
testb
mov
dec
stos
cmc
gs
fimuls
dec
sbb
shrb
cltd
dec
push
or
stc
cmp
int
push
mov
icebp
pop
clc
mov
jne
xlat
test
mov
and
inc
add
sbb
mov
stc
add
jp
dec
lea
pop
sub
pushf
insl
jne
dec
or
sub
stos
and
out
pop
cmp
push
push
pop
xchg
ds
xchg
push
and
push
adc
jo
add
rclb
fstp
lcall
adc
cmp
sbb
fistpl
adc
pop
jns
fnstcw
adc
xor
xchg
aam
cwtl
std
loopne
pop
adc
pop
add
inc
pop
add
pop
adc
adc
outsl
and
std
fistpl
adc
fmull
xchg
mov
or
lds
lret
add
enter
xchg
aaa
ret
lods
repz
aad
loop
je
or
int3
loopne
scas
outsl
int3
xchg
int
in
lods
lock
sti
jne
xchg
or
in
int3
cmp
push
adc
cmp
js
icebp
inc
or
icebp
and
loope
ds
clc
or
mov
mov
pop
dec
fildll
stos
imul
imul
test
pusha
dec
cmp
dec
in
in
bound
shl
and
aam
sbb
mov
sbb
rclb
stc
mov
xchg
arpl
pushf
push
sbb
xlat
push
xor
movsb
bound
pop
push
ds
jge
add
shll
ds
mov
in
out
mov
pop
pop
jecxz
mov
lods
xorb
lds
ss
sbb
dec
gs
mov
in
mov
int
xor
xor
add
in
jb
out
pop
cmp
or
lock
adc
test
cmp
ss
imul
ret
repz
out
and
jle
and
loop
push
das
mov
sbb
popf
fnstsw
mov
sub
std
jmp
push
sub
stos
push
in
xor
jecxz
jne
hlt
xchg
push
adc
jecxz,pn
sub
sub
fstl
repz
add
xchg
aaa
sbb
imulb
pop
push
sbb
jns
xchg
mov
mov
or
or
ret
adcl
fcoml
add
mov
inc
pop
ds
pop
push
or
fstpl
insl
dec
dec
or
movl
adc
inc
inc
lret
push
lds
mov
inc
hlt
shll
sar
int
xchg
mov
xor
dec
dec
xor
pop
shrd
jle
fcoml
icebp
ja
sbb
imul
ficompl
icebp
push
sbb
cmpl
and
dec
push
pop
inc
loope
ret
bound
fistpll
jns
jle
into
rorl
loop
stos
mov
imul
cmpsl
addr16
lods
xchg
inc
mov
xchg
lahf
push
mov
xor
in
mov
mov
inc
and
stos
push
and
sub
sbb
lcall
push
sbb
and
push
pop
imul
dec
fists
cmpl
ret
pushf
cmpsb
add
pushf
bound
std
mov
or
in
js
add
pop
call
lret
jnp
xchg
mov
adc
ja
ret
xchg
sarl
xor
and
mov
ja
adc
mov
inc
xlat
inc
repnz
frstor
rorb
jno
jb
icebp
fidivrs
cli
fstps
xchg
push
das
ds
xchg
xor
pop
in
pop
cmpsb
data16
lahf
mov
daa
in
pop
aad
mov
imul
push
fstp
and
rcr
sub
in
fnstsw
ss
cmpsb
addr16
in
sub
enter
out
adc
gs
pushf
cmc
shlb
cwtl
add
stos
in
dec
repnz
in
insl
add
push
or
lea
mov
call
pop
sbb
stc
icebp
sbb
int3
xchg
js
test
data16
mov
je
imul
pop
xor
or
loopne
or
repnz
icebp
js
pop
lock
pop
cmp
adc
movsl
xchg
sti
std
jne
xor
lds
daa
cmp
repz
inc
out
adc
idiv
pop
int3
jecxz
scas
outsl
repnz
mov
repz
nop
icebp
nop
sti
mov
cmpsb
je
lock
cmp
sbbb
movsl
or
mov
jne
pop
xlat
ret
push
arpl
in
lods
inc
sbb
outsb
sub
add
sti
cltd
in
and
mov
push
and
cmp
lret
lds
in
pop
sbb
jmp
jl
daa
cmpsl
cmp
push
clc
add
inc
jae
stos
test
shrl
enter
rclb
dec
insb
insl
out
out
fbstp
sahf
in
fidivrl
sbb
cmc
xor
fxtract
insl
cmc
mov
xchg
aad
popf
subl
mov
mov
cmpl
into
sar
add
sahf
je
aas
mov
sbb
or
dec
dec
fisubl
add
inc
inc
cwtl
and
repnz
and
movl
imul
neg
inc
ficoms
push
inc
xchg
mov
sbbb
jle
je
mov
adc
jle
cmp
arpl
insb
clc
cmp
jo
pop
mov
xchg
mov
sbb
addb
pusha
arpl
sti
sti
jp
shll
jl
inc
push
and
insl
popa
sub
mov
pusha
scas
or
jmp
stos
imul
sub
jmp
stos
push
popa
cmpsl
popa
sub
push
jno
adc
rcll
pop
xor
rorb
outsl
sbb
stos
cmp
dec
add
sbb
jnp
jg
mov
mov
jnp
pop
sbb
aad
inc
cmpsb
arpl
aad
add
mov
test
test
cmp
xor
dec
popa
insb
sbb
jo
or
xchg
jle
jne
or
pop
leave
in
jmp
jno
inc
ss
hlt
push
dec
mov
dec
dec
add
data16
lahf
enter
xchg
and
mov
mov
push
dec
dec
mov
inc
cmp
lock
ss
ja
imul
push
mov
ds
lahf
and
fnsave
popa
popa
out
outsl
inc
pop
addps
loopne
loopne
outsl
sub
je
jmp
bound
push
mov
cmc
push
adc
pushf
push
mov
inc
outsl
loope
rolb
ljmp
mov
push
int
lea
cli
mov
adc
pop
pop
sbb
pop
jns
xchg
aad
test
inc
sbb
mulb
ret
adc
push
rcr
xchg
xchg
jge
ret
out
pushf
mov
jg
addb
popf
pop
jge
in
je
or
pop
sbb
push
outsl
pop
movsl
pop
outsb
add
ss
push
dec
inc
adc
xor
mov
dec
mov
xchg
or
mov
jno
repnz
aam
lock
cmp
iret
rorb
sbb
rorb
jne
cli
xor
shlb
add
add
shl
fmul
cs
jno
aaa
movsl
movsb
pop
and
mov
and
popf
cmpsb
adc
xchg
testb
lar
call
sar
subl
mov
cmpsl
imul
sbb
adc
jo
adc
mov
adc
sbb
cmp
testl
sahf
push
int3
imul
sbb
fstps
xor
xchg
push
and
mov
push
pop
xchg
push
inc
mov
jecxz
ja
std
jecxz
addb
jg
pushf
sub
jge
xchg
lods
fwait
lret
xchg
gs
movsb
mov
mov
fcmovne
add
movsb
xchg
insl
inc
or
cld
ret
pop
jmp
hlt
cmp
in
add
xor
cmp
scas
repnz
leave
xchg
aad
mov
inc
jae
xor
aad
jns
sbb
cmpsl
cmp
mov
jne
in
jb
push
jo
ss
fs
scas
lcall
sbbb
push
stc
ljmp
imul
cli
sub
test
or
or
addr16
gs
loop
or
out
mov
aam
adc
xchg
push
jmp
xor
into
rclb
pop
ljmp
push
fdivs
and
jne
and
xlat
xchg
adc
gs
and
stc
xchg
and
in
rcll
rcll
add
fstpl
leave
pop
jge
push
js
aam
mov
dec
or
xchg
ds
lret
aam
push
sbb
jecxz
inc
dec
inc
cmpsl
loop
push
xor
push
and
pop
xor
outsl
pop
int
jb
mov
or
lahf
dec
push
insl
mov
ss
sub
jae
jae
cli
mov
mov
movl
fnsave
arpl
in
loope
push
je
mov
and
push
aas
xor
ret
shl
outsb
sub
js
jns
jnp
es
add
push
jno
addr16
mov
aam
std
mov
lahf
aam
push
aad
and
adc
es
nop
push
sub
push
aas
cli
sub
mov
fsqrt
inc
add
data16
aad
push
pop
shlb
xor
jge
rcrl
mov
fwait
pushf
jg
movsl
add
call
mov
int3
int3
xorl
or
mov
loope
stc
or
and
cmpsb
push
sub
cmpsl
jg
mov
push
mov
mov
adc
jne
sbb
js
aas
test
mov
mov
test
push
mov
add
aam
mov
jne
lcall
jge
push
pusha
incb
jl
fistps
or
sbb
and
mov
sub
test
sub
or
call
imul
das
inc
movsl
gs
mov
rcll
xor
push
mov
xor
jle
or
nop
test
adc
xchg
mov
mov
mov
cmp
fnstcw
cmp
push
aad
mov
cmp
mov
sub
inc
pop
xchg
addb
xchg
xchg
inc
ds
cltd
test
rorb
pop
int
mov
or
orl
mov
in
dec
xchg
mov
push
lds
jbe
loopne
add
jecxz
je
xchg
jl
int
scas
xor
out
push
pop
lock
or
js
imul
jns
mov
jp
divl
ss
jae
pop
lds
cmp
xor
add
and
mov
ret
and
insl
and
or
sub
sub
ds
lret
aaa
adc
imul
sbb
out
pop
pop
imul
rcll
push
xor
push
jae
sub
aaa
scas
mov
sbb
nop
test
dec
pop
fisubs
fdivr
mov
pop
cmp
hlt
mov
pop
lahf
inc
sbb
cwtl
inc
cmp
pop
ret
inc
ds
insl
add
sbb
scas
dec
arpl
cmc
mov
mov
sbb
inc
std
push
and
dec
mov
movsb
pop
lret
adc
xchg
cltd
lods
mov
not
xchg
dec
push
add
lock
repnz
jo
cmp
push
xor
mov
mov
mov
sbb
test
mov
negb
cmp
cmp
mov
js
movsb
popa
mov
inc
add
data16
aaa
out
icebp
and
loop
addl
popf
adcb
stos
or
jecxz
lods
insb
arpl
cmp
or
and
bound
popa
outsb
and
adc
xchg
rcrb
mov
mov
lea
pop
xchg
mov
add
ljmp
movsb
xchg
mov
fadds
xchg
dec
xchg
ret
pop
adc
inc
loopne
mov
inc
mov
ss
ds
mov
mov
insb
push
or
xchg
mov
dec
popl
shrl
subl
nop
xchg
jae
hlt
shll
add
mov
out
out
outsl
fs
mov
rorb
mov
test
sub
out
nop
inc
leave
mov
pop
xor
inc
cmpsb
adc
jbe
adc
ja
jge
jnp
js
pusha
push
setp
fisubs
je
xor
lods
fsubrl
cli
imul
call
enter
rcll
lahf
mov
adc
test
mov
pop
dec
jo
popf
mov
mov
jnp
sbb
pushf
ds
sub
js
sbb
adc
xchg
mov
push
push
notb
stc
jecxz
movups
mov
aam
inc
rcr
inc
popl
gs
and
iret
inc
xchg
je
pushf
sbb
mov
dec
dec
stos
mov
push
shrb
sub
dec
scas
mov
xchg
aad
insl
or
das
adc
push
jb
clc
rolb
xchg
icebp
dec
fs
or
leave
in
xor
dec
xor
dec
jns
sbb
cmp
mov
addr16
or
pop
xor
jne
jnp
pushfw
mov
pop
mov
xor
lret
cmp
pop
push
mov
push
push
ljmp
dec
cwtl
lret
fwait
aad
sbb
mov
adc
test
mov
scas
xchg
fwait
outsl
mov
push
xlat
lods
cli
scas
fidivs
sbb
fwait
push
sub
pop
xrelease
jecxz
xlat
jno
sbb
cwtl
pop
or
push
clc
test
and
sbbl
movsb
mov
push
out
mov
ret
ja
sbb
xchg
enter
mov
std
push
xlat
or
mov
push
test
xor
leave
pop
rclb
dec
or
add
leave
inc
xchg
lock
fnsave
dec
add
cmp
pushf
cli
mov
pop
pusha
or
mov
or
mov
cwtl
xorb
shl
adc
xor
jmp
mov
leave
mov
fmuls
cld
sub
dec
cmp
in
jp
ja
mov
ljmp
mov
xchg
dec
xor
lret
lea
jmp
mov
and
push
insl
lret
sbb
bound
sbb
dec
imul
movsl
sbb
pop
push
pop
xor
push
add
popa
push
add
roll
add
addl
iret
sbb
loope
popa
sub
ret
ret
lret
jmp
sbb
sub
dec
jb
in
rol
xor
xchg
mov
cmp
repnz
fdivrl
sbb
iret
in
sbb
int3
cmp
jnp
scas
cmp
stc
test
jp
scas
mov
adc
js
in
and
cmpsl
bound
in
mov
and
push
cli
loop
lret
dec
loopne
pusha
int3
mov
clc
cs
mov
jbe
dec
mov
sarb
enter
mov
xchg
mov
int
cs
xor
adc
insl
and
lcall
xchg
rolb
lcall
lcall
xchg
xchg
dec
cmpsb
push
daa
in
xchg
jno
out
cwtl
pop
shll
xchg
addl
sahf
je
std
mov
sub
sar
jge
mov
pushf
mov
jne
leave
stos
cmp
aam
mov
sub
xor
lds
jb
repz
mov
xorb
mov
movl
out
or
roll
push
jnp
popf
sbb
stc
mov
in
shll
outsl
outsb
jg
pop
leave
cmpsb
cmpsb
data16
mov
jb
andl
jg
in
xchg
and
jge
adc
mov
outsb
sub
dec
push
lds
test
inc
mov
mov
ficoms
xor
gs
xor
dec
dec
pop
shrl
adc
sub
or
xchg
push
adc
orl
jo
sti
shrl
cmpsb
or
scas
pop
pop
cmpl
cli
sub
jmp
ja
lcall
test
push
loope
xchg
xchg
les
fbstp
and
fdivrs
sbb
mov
pushf
mov
ret
movl
or
dec
xor
test
mov
hlt
int
xor
xchg
aas
xor
inc
cs
fwait
sarl
incb
xlat
int3
jnp
dec
dec
mov
cmp
sbb
mov
ds
divb
lods
icebp
push
lods
pop
inc
xlat
lods
mov
cmp
mov
mov
ret
push
frstor
push
enter
cld
ljmp
lret
cmp
or
mov
push
popa
dec
es
fs
gs
dec
adc
xchg
push
adc
lret
sbb
shr
inc
sbb
push
cld
stos
lahf
imul
pop
jmp
test
xlat
cmp
cmpsb
cmp
adc
lret
rolb
dec
xchg
add
sar
rcrb
jg
jns
mov
mov
adc
dec
jns
stos
jns
rolb
inc
lret
leave
mov
mov
cli
mov
sub
push
mov
xor
or
mov
or
adc
jo,pn
or
insl
mov
push
push
cmp
mov
cmp
add
cmp
fstps
mov
mov
loope
adc
arpl
outsb
push
aas
mov
insb
push
cmpsl
push
mov
outsb
outsb
mov
or
sub
jns
dec
inc
cmpsl
addr16
pop
mov
pop
pop
mov
adc
adc
xchg
pop
add
push
rclb
dec
xchg
cltd
sahf
in
fnsave
mov
dec
sbb
push
cli
rcrb
sbb
aad
add
inc
push
in
andl
repnz
xchg
shll
icebp
jmp
add
outsb
and
dec
std
ret
adc
sbb
fmull
leave
mov
lret
outsb
lret
xchg
hlt
test
xor
bound
aam
cmp
pop
jbe
add
aad
lock
mov
std
fistpll
aas
mov
mov
xchg
xor
mov
ljmp
je
outsl
arpl
pop
loop
jmp
mov
orl
cmpsl
push
in
loopne
sub
jle
jp
subb
stos
mov
jmp
addl
or
aaa
aam
xchg
push
enter
shl
inc
adc
jmp
out
loopne
xlat
fisubrl
mov
add
push
nop
nop
pop
mov
nop
push
xor
jns
push
insb
and
xchg
push
adc
dec
xchg
loopne
mov
popa
xchg
shll
adc
addb
lea
mov
ljmp
int3
push
jle
rcrb
dec
xchg
xor
call
addb
test
push
xor
lret
rep
sbb
xor
mov
ficoml
sbb
jo
dec
jns
movsl
push
push
mov
mov
out
sarb
xchg
in
fnsave
xor
sub
jbe
out
icebp
aas
cmc
into
das
and
outsl
push
shll
mov
push
aaa
mov
cmp
nop
addr16
sarb
loopne
and
sub
pop
ja
inc
dec
sbb
push
jae
xchg
push
mov
sbb
adc
jno
mov
iret
adc
sub
mov
sbb
push
jbe
pushf
aaa
or
adc
sbb
loop
sbb
push
pop
adc
xchg
mov
les
push
inc
pop
hlt
adc
pop
xor
outsl
cwtl
mov
into
test
lret
fstps
add
pop
sbb
mov
mov
push
sub
xchg
mov
icebp
adc
aaa
ret
pop
repz
hlt
push
jae
xor
iret
wbinvd
lret
fs
out
scas
pop
subl
insl
cmp
jne
cltd
or
adc
cmp
xor
xchg
mov
je
xor
test
out
ja
mov
loope
pop
xor
fsubl
loopne
push
int3
mov
jp
cmp
mov
in
lret
or
dec
dec
loop
adc
xlat
jnp
scas
and
dec
adc
mov
out
add
lret
js
adc
jnp
adc
jnp
sbb
mov
mov
pushf
rcr
mov
fcmovbe
adc
aam
push
mov
cwtl
addr16
cwtl
xchg
sbb
popa
and
xchg
adcl
popa
roll
int
adc
scas
pop
inc
incl
rcl
sbb
sbb
insl
cwtl
mov
test
dec
leave
or
jl
nop
sbb
ljmp
rcll
add
cmpsb
cmp
xor
mov
icebp
bnd
sahf
dec
jb
xor
jb
xchg
or
adc
cmp
das
cmp
jl
cmp
xor
push
pop
cmp
or
aad
push
ss
daa
data16
push
shll
adc
and
cld
loop
lahf
pop
jge
mov
sbb
int
das
sub
push
lea
idivl
data16
inc
sub
xor
arpl
inc
push
adc
mov
aas
in
rclb
dec
shlb
ja
mov
ds
fcompl
push
test
push
faddl
xchg
push
fmuls
jge
mov
inc
fwait
andl
cwtl
fcmovnu
pushf
and
mov
inc
outsb
lcall
cs
int3
mov
push
fimull
pushf
xor
movl
ret
add
repz
test
adc
mov
mov
sti
pop
shlb
xchg
das
sub
lods
lock
cltd
pop
insl
cmp
leave
or
lds
call
mov
jnp
sbbl
ss
jg
ret
xor
xor
cmovg
mov
cmp
cmp
loopne
cli
loopne
popa
sub
sub
gs
leave
cmp
xor
ljmp
sub
fs
and
mov
hlt
inc
and
scas
xchg
adc
movsb
dec
cmp
imul
mov
push
dec
cmp
int
sahf
pop
cmpsl
test
pop
sbb
sub
sbb
sbb
lcall
adc
and
ret
inc
test
lahf
pop
hlt
push
mov
add
adc
push
mov
inc
rcrl
dec
lds
pop
das
cmc
mov
mov
or
incb
inc
adc
jle
or
jp
push
jae
xor
dec
push
filds
jb
jmp
cmp
lcall
cmp
sti
xor
cmp
and
bound
mov
pop
cmp
pop
inc
inc
xor
test
in
andps
scas
loop
loop
clc
js
push
lahf
in
dec
aas
and
cmp
clc
ret
sub
addl
ja
xor
out
pop
adc
ds
xchg
push
xor
mov
sahf
mov
mov
xchg
rorb
sbb
cmpsb
push
outsb
je
fwait
xchg
std
imul
int
lods
mov
sub
ficompl
push
fcomp
cwtl
adc
movsb
bound
pop
pop
xor
testb
add
and
jecxz
inc
addb
dec
sbb
sahf
sbb
mov
mov
shrb
jg
stos
sub
pop
sub
push
imul
aaa
aam
or
add
das
mov
int
movsb
xor
out
ss
cs
jg
ds
pop
daa
mov
mov
out
cmpsl
push
fdivl
je
adc
jne
jae
add
cmpsb
jecxz
arpl
mov
push
shll
filds
and
out
and
push
sub
dec
push
ljmp
addr16
call
shr
cmc
mov
out
mov
adc
mov
das
or
adc
cmp
nop
int
dec
xchg
lcall
scas
cmp
sbb
mov
int
cwtl
popl
mulb
adc
addl
rcrb
jecxz
inc
add
loopne
pop
pop
fildl
das
mov
jl
fsubrl
or
icebp
imul
mov
or
mov
push
test
mov
push
cld
push
les
icebp
mov
inc
mov
loope
scas
outsl
xor
push
std
cs
mov
xadd
mov
lret
sarl
fcoms
std
stos
sub
cmp
mov
loop
push
jns
fimull
popa
and
mov
push
outsl
lahf
add
loopne
pusha
sub
mov
das
push
punpcklbw
or
mov
sub
negb
insl
fsubrl
gs
jmp
pusha
les
adc
pop
repnz
stos
inc
jg
xchg
mov
jmp
imull
sbb
sti
out
pop
ss
push
sub
sub
lret
sbb
cltd
jp
cmp
rcr
mov
mov
sbb
add
or
sub
inc
jnp
fwait
inc
outsl
push
cmpb
shl
or
sub
xadd
das
test
movsl
lcall
outsb
das
xor
divb
div
and
xor
cmpsb
jno
adc
fistpll
mov
jo
pushf
pop
push
lods
aas
decb
mov
leave
cmp
cli
lock
push
push
cmp
clc
je
lret
daa
addl
pop
sub
pop
flds
or
loopne
popf
mov
sub
imul
xchg
fnstenv
inc
imull
icebp
jne
sub
das
add
push
pop
xor
int
xchg
push
mov
rcll
xchg
adc
daa
mov
jmp
sahf
in
jp
pop
jnp
adc
idiv
mov
into
dec
or
fmuls
mov
mov
mov
setge
loope
lods
popf
jno
xchg
ds
mov
das
cmp
outsb
jp
addl
jp
mov
repnz
mov
je
lds
mov
mov
sar
jbe
jae
nop
xor
icebp
mov
mov
dec
xchg
inc
mov
lret
aam
call
int3
cmp
inc
or
mov
add
idiv
pop
cmp
aaa
jne
mov
jb
subb
ljmp
scas
cld
mov
and
nop
das
das
out
dec
comiss
das
mov
jmp
add
lods
xchg
push
jae
gs
xor
adc
shrl
add
mov
out
sub
sub
jnp
pop
adc
mov
pop
pushf
sbb
xchg
pop
in
div
sbb
push
cmp
mov
add
mov
pop
pop
push
and
cmp
in
add
clc
and
mov
fsincos
mov
push
cmpb
fwait
outsb
mov
push
adc
mov
inc
leave
cmp
sbb
in
lahf
int
enter
push
mov
repz
mov
xlat
icebp
add
adc
jb
icebp
outsl
outsl
xor
dec
outsb
mov
loop
inc
push
jle
cmp
shlb
sub
mov
fwait
inc
or
aad
jne
mov
mov
aas
sub
sahf
je
pop
lahf
pop
cmp
cmp
sub
ljmp
imul
inc
daa
test
and
inc
push
out
call
lock
ja
push
mov
push
adc
and
in
iret
daa
icebp
shlb
jnp
dec
adc
std
sub
out
cs
push
push
pop
cli
jbe
je
mov
xlat
fiaddl
sbb
ret
pop
rcrb
and
lret
out
inc
fildl
je
sti
mov
xor
mov
xchg
ljmp
cmp
leave
mov
movsl
pop
insb
add
push
mov
mov
test
jbe
hlt
mov
mov
and
pop
dec
or
jo,pt
in
loop
dec
jo
cmc
sti
cmp
ja
mov
aam
jno
cmc
sub
dec
pop
mov
js
outsb
repz
xor
mov
mov
push
xlat
xchg
fs
inc
push
sub
mov
aaa
dec
fnstsw
jne
fstps
scas
adc
push
sbb
lods
insb
add
insb
test
sub
cmpsl
mov
test
xchg
xor
movsl
gs
pop
push
push
adc
mov
aad
xorl
subb
loopne
mov
cmp
sbb
sub
in
xlat
shrb
cmpsb
test
cmpsl
xlat
xchg
and
xlat
bound
cmp
lea
inc
fs
mov
addl
fwait
sub
cld
or
lret
fmuls
ja
cmpl
or
sarb
scas
xor
divb
mov
adc
inc
add
pushl
lret
mov
les
aas
lahf
scas
jae
jne
sbb
into
cmp
mov
cmp
mov
jno
mov
jb
mov
outsl
pushl
xor
push
bound
cld
jnp
lods
movsb
iret
insl
fisttpll
add
outsb
or
lds
imul
lods
rcr
les
or
test
xchg
in
xor
xchg
imul
mov
push
add
cmp
adc
pop
pop
sbb
setnp
in
pop
xorb
xlat
xchg
push
jecxz
mov
test
mov
es
push
loop
mov
inc
add
fcmovb
inc
add
sub
incb
dec
das
pop
popa
adc
pop
jl
cwtl
mov
ud0
dec
dec
mov
xchg
pop
enter
movsl
push
jbe
sarb
mov
xor
jae
div
repnz
sbb
outsl
push
xchg
cmp
packsswb
add
jle
or
sbb
fistps
sub
mov
cli
imul
xor
mov
push
fisubl
arpl
andb
cmpsl
das
inc
lods
test
add
stos
and
adc
pop
pop
mov
test
sub
inc
daa
push
pusha
repnz
cwtl
and
mov
movsw
pop
lds
adc
push
adc
nop
rclb
shll
dec
rclb
dec
fwait
mov
imul
dec
jnp
adc
cmp
mov
packuswb
jne
cmp
dec
shll
in
inc
test
pop
add
addb
mov
mov
scas
pop
inc
call
loope
or
enter
inc
lret
inc
cmp
dec
dec
test
xchg
xlat
xchg
push
jle
sbb
sub
mov
ljmp
xchg
pop
lock
adc
push
repnz
dec
mov
ss
insl
fstps
xchg
out
jl
fbstp
mov
aaa
divl
ss
inc
add
sbb
cmpsb
push
loopne
in
xor
ret
lods
arpl
addl
in
sbb
xor
leave
pop
stos
imul
stos
or
std
call
cmc
mov
mov
push
gs
test
mov
xchg
pop
pop
lds
dec
repz
jl
mov
adc
nop
push
add
mov
pop
sbb
pusha
mov
adc
sbb
mov
pop
js
inc
and
pop
push
adc
sbb
clc
call
movsb
add
std
pop
xor
add
ljmp
dec
or
xchg
mov
icebp
mov
or
scas
mov
fwait
scas
mov
adc
test
aaa
xchg
jge
push
jmp
hlt
mov
dec
jge
xchg
xchg
xchg
jb
mov
inc
mov
sbb
push
aas
sbb
jp
mov
sbb
rcr
mov
mov
mov
adc
add
jne
mov
fsts
arpl
lock
push
and
mov
bound
aas
mov
dec
inc
pop
das
out
mov
sub
lahf
dec
insb
scas
sub
xor
ljmp
inc
gs
mov
mov
push
mov
xchg
push
adc
sub
jo
dec
popf
sahf
pop
popf
int
cmp
repnz
sahf
pop
sbb
pop
sub
xchg
mov
pop
pop
mov
sub
pop
mov
xor
addl
lret
inc
negl
sbb
popf
fadd
pop
adc
inc
inc
push
mov
push
int3
mov
lds
test
xchg
sti
mov
push
push
data16
mov
xchg
inc
repz
add
lock
repz
xor
pop
int3
das
scas
outsl
int3
pop
sbb
sub
sbb
cmp
xchg
ucomiss
mov
sbb
push
cli
mov
xchg
clc
mov
pop
je
out
xchg
mov
mov
jp
add
push
loop
jnp
cltd
stc
lcall
adc
add
scas
ja
mov
loope
in
adc
add
push
push
mov
dec
sub
push
jae
gs
vunpcklpd
popa
ss
mov
xchg
icebp
lahf
adc
sbb
sbb
ret
pop
push
pop
pop
xchg
mov
mov
dec
xchg
stc
insl
idiv
sbb
fcom
into
dec
sub
push
ret
in
xchg
add
into
arpl
xchg
mov
jp
movsb
into
pminub
add
dec
xchg
mov
imul
ja
imul
sub
jno
cmp
les
test
outsb
adc
repnz
mov
mov
mov
jnp
outsb
push
mov
cmp
adc
mov
xchg
mov
jae
jmp
data16
push
and
mov
popa
and
cmp
mov
aaa
jl
push
gs
cmp
or
or
in
lods
or
shrb
xchg
mov
out
inc
lds
xchg
sbb
or
jmp
adc
mov
cld
rclb
push
lods
insl
lods
cmp
dec
ljmp
add
js
cs
ficompl
sbb
mov
cmpsb
cmp
popa
and
xchg
adcl
addl
cmp
sbb
sub
jge
sub
pop
and
dec
or
or
xchg
xchg
test
jg
ret
sub
mov
sub
add
rolb
dec
movaps
pushl
lret
test
lea
stc
pop
and
lods
mov
stc
out
jl
lds
push
mov
mull
das
or
js
mov
mov
fdivrs
data16
test
movsb
jp
mov
loope
or
out
bound
in
data16
and
mov
popf
inc
rcr
outsb
stc
mov
insb
mov
test
aaa
hlt
in
jb
mov
push
ss
sbb
rcrl
push
lock
mov
push
adc
outsb
or
inc
dec
adc
adcl
ficomps
cmp
out
pop
pushf
pop
sbb
sbb
lcall
popf
cmpb
aad
testw
shlb
pushf
jecxz
addb
ret
stos
mov
mov
in
lret
mov
xorl
sbb
das
inc
int
dec
dec
scas
xchg
nop
inc
notb
in
aam
jae
roll
mov
xor
sarl
and
shrb
push
xor
insl
in
pop
outsb
mov
push
fcmovnbe
popf
jnp
cld
lds
aad
mov
mov
pop
inc
sbb
jo
jne
xchg
adc
popf
add
mov
jno
es
or
mov
inc
jb
lods
js
xor
sub
fwait
gs
mov
test
sub
inc
dec
or
inc
dec
outsb
enter
aad
push
adc
sbbl
mov
sti
mov
int
add
jmp
inc
push
insb
mov
clc
push
xchg
xchg
pop
xchg
mov
cltd
mov
loope
add
pusha
pop
inc
add
jno
add
mov
sbb
push
inc
jge
push
aam
inc
aaa
dec
or
add
xor
mov
stos
and
xlat
imul
ret
mov
mov
adc
out
je
jmp
jecxz
repnz
arpl
sahf
jl
or
cs
jg
mov
test
cmp
lret
dec
dec
push
or
hlt
in
repnz
data16
fisttpll
push
and
cmp
shrl
aam
inc
sahf
pusha
testb
pop
inc
cmp
mov
push
dec
lret
sbb
cmpsl
inc
je
jns
dec
loopne
adc
xchg
mov
imul
cmp
push
shl
icebp
dec
rcll
sbb
or
jp
inc
jb
pop
jge
or
mov
popf
fcompl
cwtl
sbb
nop
dec
das
xchg
push
cwtl
pop
cwtl
pop
sub
es
add
mov
in
test
dec
inc
pop
add
popa
adc
inc
ds
pop
push
pop
lret
aas
int
mov
mov
xor
adc
aad
aam
xchg
enter
push
shl
xor
dec
shll
lods
adc
mov
xor
inc
outsl
cmp
lods
lods
insl
pop
sarl
mov
inc
mov
int3
cmp
incb
packuswb
mov
sub
adc
mov
dec
and
popa
scas
mov
lahf
pop
bound
jns
cmc
pop
outsb
sub
cwtl
push
mov
mov
out
jmp
clc
addr16
daa
gs
aad
adc
popa
ss
mov
ret
jecxz
push
xchg
fdiv
cli
mov
xchg
fldcw
adc
jl
fcompl
pop
lods
cmp
sub
aad
jg
xchg
mov
sbb
popf
push
push
loopne
cltd
push
sub
cmpsl
lret
push
xor
dec
ret
push
movl
mov
ret
push
sbb
push
outsb
inc
push
add
cld
jbe
pop
inc
iret
test
pop
xor
iret
arpl
sahf
jl
dec
jb
dec
jo
mov
sti
out
mov
dec
jg
int3
or
lds
ss
jne
sbb
js
xor
out
out
mov
data16
add
in
repz
jnp
stc
xchg
pusha
push
setp
mov
movsl
sti
mov
loope
in
adc
add
mov
addr16
in
cmp
pushf
shlb
cmp
push
daa
aad
push
adc
shrb
adc
in
inc
sbb
pop
ficoms
fwait
fwait
pop
sub
faddl
sbb
sub
mov
xchg
dec
xchg
push
lock
pop
mov
mov
movsl
push
ja
in
roll
pusha
and
add
sbb
add
add
rolb
outsl
fidivrs
dec
sub
dec
mov
popf
xchg
mov
movsb
pop
lret
aam
xor
aad
jb
aaa
mov
push
rclb
je
mov
dec
movlps
or
jo
sbb
jle
cwtl
js
cld
mov
jns
insb
divl
sbb
mov
pop
repnz
add
lock
or
push
das
jb
mov
xor
insl
push
sub
popf
jecxz
dec
cmp
in
jbe
in
mov
imul
in
or
push
push
out
mov
adc
xor
push
stos
adc
in
lods
arpl
jmp
flds
nop
lods
or
jl
and
push
outsb
sub
dec
pop
cltd
test
das
int3
cltd
movsl
cmpsl
xlat
xchg
jno
mov
pop
shll
pop
add
ret
pop
push
fists
cmc
repnz
fbstp
and
mov
xchg
mov
clc
xchg
push
or
dec
mov
test
sub
xchg
inc
pop
or
push
inc
jg
lods
fldenv
push
add
or
inc
or
push
jo
mov
pop
adc
lock
cltd
mov
xchg
cmpsb
mov
xor
js
cmp
idivl
push
cmp
inc
aaa
mov
mov
jae
mov
add
fdivr
xor
xor
fstpl
pop
sub
mov
push
inc
cmp
push
outsb
js
fs
pop
gs
pushf
ja
loope
iret
xchg
jmp
sub
jnp
adc
in
rclb
int
fnsetpm(287
std
stos
sbb
insb
dec
pop
cltd
movsb
mov
loop
cmpsl
sbb
inc
push
mov
les
inc
add
mov
lds
roll
int
data16
subb
faddl
std
ds
cltd
loopw
mov
clc
test
sar
mov
je
in
stos
dec
dec
or
push
aaa
enter
xchg
inc
jo
aaa
dec
jo
fnstenv
rorb
mov
out
scas
pop
xchg
test
in
dec
mov
std
pop
pop
xor
or
insb
or
cli
and
add
ja
mov
shlb
xor
cmp
mov
cltd
rcl
loopne
cli
out
cli
sti
jnp
js
add
in
lods
jge
fisubrs
out
cmpsl
cmpsl
aad
cmp
icebp
mov
xchg
push
adc
xchg
rcr
repz
dec
add
scas
xchg
adc
sti
mov
nop
push
push
test
stos
sbb
int3
insb
popf
cmp
pop
mov
ficompl
or
fcomps
pop
sarb
movsb
call
add
mov
inc
add
push
fsubrl
cs
std
mov
mov
gs
push
int3
mov
mov
jmp
mov
orb
mov
loope
sbb
divb
xor
lock
xchg
jo
ret
xor
scas
sbb
out
xlat
lods
fisttps
dec
push
inc
xchg
fldcw
sar
dec
adc
mov
pop
leave
jmp
xchg
add
lds
jnp
test
sub
ljmp
mov
cli
out
cmp
imul
mov
push
test
mov
mov
jne
pop
mov
push
push
adc
xchg
pop
add
xor
push
sub
int
sahf
pop
lods
test
mov
movsl
cltd
out
leave
sbb
push
sbb
dec
aas
movsb
bound
pop
push
ds
pop
addl
jo
cmp
inc
add
mov
rcrb
rorl
icebp
cmp
mov
inc
inc
pop
movsb
das
andb
dec
movl
div
mov
in
scas
les
icebp
mov
test
out
sbb
std
jo
jmp
lods
mov
pop
or
or
jl
out
push
fcomi
cli
mov
sbb
sahf
mov
jbe
ret
je
test
stc
mov
loope
aas
and
inc
xor
or
pop
cli
dec
or
out
jmp
pop
out
stc
sub
xorl
ljmp
or
test
pop
add
add
xchg
push
adc
xchg
adc
inc
ds
jo
popf
cmp
dec
ljmp
shl
scas
sbb
fstps
add
sub
call
and
shl
leave
cmpsb
mov
ds
xor
test
jns
mov
cmpsl
jge
pop
js
mov
add
lret
loope
mov
xchg
sub
loop
cmc
roll
stos
adc
fstl
int3
mov
mov
je
push
loopne
lods
adc
cmp
push
int
mov
push
add
cltd
int3
push
jo
xor
jp
lock
in
pop
add
dec
add
cld
xor
sub
jle
mov
mov
mov
out
cmp
sub
lret
or
scas
push
jl
lcall
es
and
push
das
in
lods
scas
gs
mov
dec
lods
stos
dec
adc
dec
shlb
jne
lret
jns
cwtl
sub
in
pop
inc
push
cmpsb
je
sbb
fcomps
out
pop
xchg
ret
sub
inc
les
and
inc
jg
pushf
bound
std
mov
cmp
ret
lds
pop
addr16
mov
fld
test
add
outsb
outsl
xor
inc
jbe
stos
into
inc
hlt
push
shlb
mov
or
push
scas
cmc
cli
pop
mov
ljmp
in
dec
jp
lea
pop
mov
sbb
scas
test
mov
sub
and
add
fs
aad
sub
and
sub
lahf
mov
or
sub
cmp
out
cltd
cmp
int3
leave
mov
mov
inc
cmpsl
sub
cmp
movsl
gs
cmp
rcll
push
push
adc
daa
rcl
xchg
jae
fldt
nop
push
ret
cwtl
pushf
mov
arpl
mov
jbe
lcall
adc
jp
push
aad
int3
mov
fldl
jl
pop
adc
fsubl
jg
add
std
mov
dec
cmc
dec
dec
or
enter
sub
xor
xchg
cmp
test
xlat
jecxz
mov
inc
mov
notb
xor
jb
xor
jp
cmp
mov
pushf
and
mov
mov
cmp
jns
lods
cli
ficomps
jecxz
sbb
in
mov
sub
add
adcl
xor
cmp
pop
jo
test
add
testb
mov
gs
mov
push
push
lock
push
adc
push
rcll
sbb
loopne
jo
xchg
push
jg
iret
add
int
sahf
add
pop
adc
ja
push
cltd
pop
adc
add
mov
scas
fcomps
bound
inc
popa
and
xchg
xorl
xor
mov
fwait
sub
aam
addb
in
into
lcall
std
mov
out
or
call
repz
cmp
inc
aaa
shll
lods
push
mov
xor
dec
push
mov
repnz
sub
mov
pusha
lret
into
loop
fucomip
aas
mov
cmp
jns
fwait
or
push
mov
cmp
js
bnd
pushl
push
int
mov
adc
cmp
sbb
lahf
mov
es
popf
pop
das
arpl
shr
sahf
in
loop
rol
movsl
cli
sub
out
dec
test
pop
or
and
leave
jbe
xor
push
outsb
movsl
mov
push
sbb
insb
imulb
sub
iret
adc
clc
fisttpll
xor
aas
sti
sahf
pop
sbb
fwait
pop
sbb
sbb
gs
or
xchg
adc
std
adc
out
push
xchg
je
adc
rorl
xchg
addb
push
adc
std
add
test
lret
fstps
or
dec
or
pop
cmp
stc
scas
adc
xchg
push
dec
lds
mulb
test
jmp
or
sbb
xor
movsb
xor
out
scas
aas
cmc
out
inc
or
cmc
or
fcomip
insl
mov
or
stc
inc
jns
lods
mov
dec
cmp
xchg
adc
inc
or
mov
cmpsb
xor
pop
mov
sbb
cmp
and
js
mov
jo
mov
and
test
imul
call
je
jp
mov
push
dec
xchg
push
fisubrs
mov
ja
les
push
push
push
popa
xchg
lods
inc
sub
mov
shrb
out
data16
push
pop
fidivrs
add
cltd
push
stos
scas
shlb
mov
pop
add
add
inc
mov
pop
push
dec
hlt
pop
mov
inc
add
push
cltd
lret
in
ljmp
jge
xor
push
pop
stc
jp
or
mov
xorl
xchg
repnz
xchg
push
push
jbe
inc
aaa
test
subb
out
hlt
mov
std
icebp
add
dec
lock
inc
push
jo
lahf
cwtl
dec
sti
pop
jno
jl
test
dec
cli
mov
aam
jp
ja
orb
mov
adc
cmpsb
inc
shlb
insb
mov
and
mov
sar
mov
cmp
out
scas
push
push
xor
enter
imul
out
lods
test
mov
sbb
in
xor
inc
stos
int
inc
or
push
icebp
in
je
sarb
xor
jmp
fcmovnb
std
stos
sbb
mov
rcl
faddl
and
mov
ficompl
xlat
push
sbb
call
stos
pop
jecxz
add
sbb
inc
addl
pop
pop
jg
rcrb
mov
xchg
or
lods
ds
addr16
sbb
lds
inc
test
nop
xchg
push
and
sbb
repz
shll
jo
icebp
adc
ret
ljmp
das
jb
dec
cmp
xor
pop
cli
cld
sbb
cmp
xchg
or
cmp
mov
jno
adc
data16
nop
mov
inc
add
mov
cwtl
jnp
cmpl
outsb
lds
xor
leave
pop
adc
ljmp
sahf
fisubrs
pop
pop
imul
mov
xchg
fcmove
loop
sub
push
pop
nop
push
cld
mov
and
pop
sbb
mov
sbb
sbb
aas
ds
push
data16
andb
addl
jae
les
mov
sbb
and
mov
inc
or
or
mov
sarl
dec
or
mov
std
lock
in
repz
cmpsb
shll
dec
adc
neg
or
mov
cwtl
int
push
jb
cmp
sbb
icebp
jnp
jl
stc
adc
mov
test
dec
clc
in
es
cmc
cmp
daa
arpl
xor
les
mov
loop
cld
sti
lock
frstor
xor
es
imul
test
or
mov
sub
in
add
jno
and
xchg
and
rorl
cmc
rclb
icebp
jmp
nop
push
jmp
fisubrs
cmc
insb
fistpl
mov
sbb
fcomps
push
xchg
push
adc
ret
ret
in
add
mov
frstor
incl
fsubrl
sbb
std
mov
dec
or
gs
iret
int3
mov
mov
jmp
dec
mov
mov
add
push
outsb
dec
push
add
mov
fildll
adc
inc
mov
push
dec
push
sbb
mov
dec
and
lret
dec
cwtl
inc
insb
fnsave
addl
stc
add
repz
or
divl
js
cmc
mov
jmp
mov
test
xchg
xchg
mov
dec
enter
and
jnp
mov
xchg
stos
sub
dec
inc
cmp
sbb
and
push
cmc
es
adc
shlb
out
push
push
adc
adc
pop
bound
dec
in
xchg
int
int
ds
sbb
int3
aaa
in
icebp
fdivs
mov
mov
cmp
pop
pop
push
or
xchg
add
inc
add
add
pop
sbb
popf
fadd
pop
sbb
pop
jge
scas
mov
dec
or
push
pop
or
mov
mov
jbe
push
sub
xchg
mov
xchg
push
ja
aaa
testb
push
outsl
repz
xor
xor
push
jp
cs
dec
xor
cld
lret
cmp
pop
jge
cmp
ret
cli
push
adc
xor
ss
jno
icebp
movsl
data16
nop
addr16
aas
lret
mov
mov
inc
bnd
shll
popf
add
mov
sub
test
loope
jle
fisubrl
es
mov
daa
gs
shl
dec
push
stos
push
movsl
mov
push
rcl
xchg
test
jle
push
dec
rclb
pop
ljmp
push
fdivs
add
pop
sbb
add
xchg
mov
in
mov
data16
orl
mov
xchg
rcr
cmp
adc
add
enter
dec
std
int3
mov
xor
dec
lods
or
adcl
mov
enter
dec
lds
xor
sub
and
arpl
sar
xor
sub
lock
lcall
or
cmp
ss
inc
push
jbe
mov
sub
mov
or
cmc
in
mov
mov
stc
in
arpl
mov
mov
xchg
push
pop
and
xor
das
out
scas
mov
sub
movsl
cli
sub
and
xchg
addr16
scas
push
mov
je
adc
jb
adc
xchg
push
mov
jb
adc
fs
das
in
int
dec
sbb
outsl
inc
sub
fsubrl
mov
pop
pop
sbb
xchg
jecxz
popf
pop
push
rclb
cmpsl
add
add
add
adc
sahf
mov
add
decl
add
push
inc
inc
sahf
mov
fisttpl
cmp
dec
mov
in
lret
lock
fs
test
movsl
add
arpl
cmc
cmpsb
in
icebp
mov
dec
or
cmp
mov
jns
incb
mov
divb
jns
cmp
and
mov
push
arpl
mov
je
je
jns
xchg
insb
pop
jl
mov
popa
pop
and
jl
sub
popf
pop
mov
or
sub
stos
pop
cld
in
stc
sub
xorl
ljmp
addr16
adc
ja
push
adc
pop
pop
jbe
xchg
push
jmp
mov
shr
fs
loopne,pt
xor
loope
push
mov
ficoms
and
and
ss
rcr
lcall
loopne
push
daa
mov
pusha
aam
and
fists
fwait
cmpsb
mov
sbbb
cmc
ds
ds
xchg
fwait
or
repnz
int
aad
sub
or
mov
fcompl
das
fadd
test
sysenter
repz
out
inc
je
push
adc
xor
mov
in
mov
test
dec
sbb
test
or
aaa
cmp
mov
lods
add
cltd
push
xchg
xor
jp
inc
inc
jne
xor
int3
std
and
in
in
xchg
ret
add
inc
jb
lods
bound
mov
popf
pop
loopne
out
mov
out
lods
insb
dec
test
lret
loope
stos
push
sbbl
loopne
movsl
add
push
and
das
ja
shr
cs
dec
imul
clc
push
push
aas
mov
int3
jns
xor
jp
pop
add
pushf
gs
imul
lcall
int
pop
push
and
scas
xchg
add
lret
lds
and
add
sbbb
adc
unpckhps
mov
sub
or
mov
ficoms
dec
or
shrl
sbb
movl
jae
pushf
stos
push
xor
icebp
jl
leave
mov
xor
xchg
das
cmp
jle
jne
jmp
cmp
jl
hlt
inc
lret
mov
maskmovq
divl
and
mov
shrb
mov
mov
insl
popa
scas
lods
shrl
dec
in
mov
adcb
mov
ds
adc
out
insb
add
test
out
mov
xchg
or
push
adc
xchg
imul
push
daa
ret
adc
pop
push
pop
bound
xor
push
scas
mov
pop
jnp
sbb
inc
adc
shrl
stos
fimull
icebp
xor
pop
pop
pop
or
sub
in
fs
push
fstps
in
adc
cs
fbld
dec
or
push
fimull
aaa
stos
sbb
lret
andl
mov
mov
rcll
mov
fsubr
xchg
shll
rorl
add
sbb
int
in
lods
lock
sahf
push
mov
or
add
jl
out
stos
lret
fidivrs
cmp
push
cmp
clc
pop
ljmp
lds
sti
sti
push
frstor
push
or
lahf
pop
dec
mov
divb
jnp
dec
ret
and
stos
inc
mov
dec
and
stos
push
shll
or
cmc
mov
push
test
pusha
inc
xchg
aam
xor
adc
insb
and
cmp
aad
nop
push
jmp
fidivrs
or
jge
xor
mov
int3
add
xchg
jno
in
cwtl
pop
lahf
aad
sbb
dec
inc
in
push
addl
int
and
ret
sub
lock
ds
add
sbb
dec
imul
dec
roll
mov
enter
xor
pop
outsl
into
fcomps
add
into
or
xor
scas
mov
clc
or
sti
fisttpll
jnp
scas
push
out
cmpsb
cmp
inc
add
js
mov
clc
mov
jnp
and
inc
add
popa
loop
cmp
jl
pop
and
jl
mov
or
jns
inc
pop
sub
daa
addr16
mov
data16
es
insl
jo
xchg
xor
mov
xchg
adc
jb
and
xor
cmp
push
int
dec
xchg
mov
and
pop
rclb
xchg
xchg
xchg
mov
push
sbb
mov
nop
loop
pop
in
pop
push
dec
test
jno
dec
inc
add
test
pop
mov
mov
push
add
mov
test
sahf
into
into
sbb
dec
or
push
in
mov
inc
sub
int3
dec
push
pop
mov
dec
jbe
repz
icebp
xchg
mov
and
adc
jo
lret
cmc
add
mov
mov
xor
or
mov
jecxz
lds
and
fnsave
popa
push
sar
cli
jge
ror
and
mov
pop
das
xor
out
sub
mov
subl
mov
adc
push
push
ja
movsl
cmp
inc
inc
xor
out
xchg
push
loopne
das
es
rcll
push
adc
inc
cmpsb
jp
movswl
lods
mov
fistpl
cli
js
sbb
daa
hlt
out
xchg
push
aam
and
pop
aad
adc
pop
dec
inc
mov
sbb
les
add
bound
adc
xor
lcall
sarb
or
mov
insb
cmpsl
mov
jb
inc
enter
lds
push
es
aas
xor
pop
and
arpl
mov
mov
insl
mov
mov
pop
xchg
inc
xor
mov
jns
xor
ljmp
shr
les
out
jb
xorb
and
inc
cmp
mov
fisttps
neg
dec
cmp
das
out
inc
stc
mov
imul
jmp
data16
mov
sub
cltd
dec
rcll
pop
jb
xor
mov
cmc
rclb
or
daa
nop
out
fildll
pop
cli
mov
mov
imul
pop
jecxz
movsb
xor
adc
loope
mov
jge
daa
test
sbb
add
fstpl
std
repnz
call
pop
add
or
xchg
in
subl
jbe
ret
aad
mov
icebp
sbb
xor
mov
int3
mov
jo
in
lods
sbb
loop
mov
fcos
mov
in
popa
jo
push
sar
mov
or
gs
xor
test
and
js
subl
xchg
xchg
and
pop
mov
jecxz
mov
xor
jge
push
sub
push
imul
popf
xor
push
ja
and
cmove
data16
xor
ret
push
outsl
scas
inc
sarl
dec
sti
popa
push
xlat
push
jmp
ficomps
sbb
sbb
cltd
or
shll
mov
std
adc
ds
adc
ds
inc
add
mov
ret
insb
adc
pop
ret
std
std
add
loopne
adc
or
push
das
sub
sub
lret
dec
test
xchg
hlt
mov
push
test
sbb
repz
es
xor
mov
div
mov
dec
mov
inc
mov
loope
lods
insl
les
mov
cmp
sbb
jns
loope
jp
mov
addr16
and
mov
cmp
int3
repz
in
and
mov
fsubr
and
push
gs
and
inc
shll
pop
hlt
adc
cmp
in
lods
insb
sub
cmp
or
or
sar
adc
jo
ljmp
xor
adc
xchg
jb
adc
push
xor
sub
outsb
loope
cltd
jp
cmpl
movsb
bound
pop
push
dec
std
in
add
lahf
cld
jae
mov
add
out
das
add
std
mov
fwait
lret
movsl
lds
mov
out
inc
test
pop
mov
std
out
push
shl
sub
rcrl
scas
sub
div
mov
testl
arpl
in
dec
adc
lds
mov
repnz
sbb
loopne
mov
xchg
mov
addr16
inc
mov
sbb
data16
inc
insl
jecxz
in
sarb
je
push
xor
movsl
stos
inc
popl
fstpl
outsb
sub
inc
push
cmp
lods
dec
xchg
test
push
dec
push
or
add
mov
ja
adc
xchg
xchg
jmp
adc
in
fsubs
aad
mov
js
int
ja
sahf
pop
movsb
aad
mov
cltd
adc
lret
hlt
inc
push
push
sbb
jns
pop
push
aad
sbb
ret
adcl
pop
and
sti
loope
add
pop
sbb
jmp
xchg
loope
add
sbb
in
xchg
or
pop
lcall
mov
pop
mov
inc
mov
pop
popa
in
mov
cmpsb
mov
addr16
push
push
in
cmpsl
gs
mov
clc
dec
or
or
in
dec
and
test
mov
or
aas
stc
mov
push
xor
scas
shlb
sbb
sub
pop
sti
filds
shl
mov
loope
mov
add
add
mov
das
ds
mov
ss
jmp
popf
push
movsl
dec
cmp
in
fs
mov
pop
jne
stc
aaa
aam
xchg
cmp
lock
push
mov
add
pop
outsb
push
adc
jmp
fs
fcompl
pop
sbb
push
pop
mov
mov
cmpsb
cmp
js
inc
add
rcll
loope
roll
sti
loope
add
pop
sbb
popf
ret
std
cmpsl
rcl
mov
call
or
repnz
cmp
mov
mov
js
inc
or
inc
xor
pop
inc
aaa
mov
mov
je
icebp
add
mov
xchg
in
jb
mov
outsl
xor
push
loope
mov
xor
fstpt
stc
adc
cmp
mov
in
mov
sub
cs
mov
movsb
rol
loope
popa
hlt
mov
scas
fistps
aaa
loopne
or
pop
cli
dec
or
scas
jmp
faddl
pop
cmp
cmp
les
sub
call
jp
xchg
push
adc
addr16
adc
and
shll
rcr
mov
mov
cmpsl
mov
iret
fcompl
xor
pop
icebp
jb
xchg
push
sbb
pop
push
aad
xor
inc
dec
std
in
add
pop
adc
repnz
inc
add
jg
rcl
rcll
ss
ror
dec
ret
fwait
cmpsl
lcall
aas
jmp
jae
inc
aaa
xchg
insl
push
inc
mov
push
outsl
or
bound
xor
mov
in
outsl
xor
lcall
out
sti
mov
add
mov
cmpsb
adc
or
js
cmc
mov
aad
cmpsb
pushw
inc
jo
and
mov
mov
pop
and
popl
lea
out
leave
int
popa
outsb
sub
xchg
sahf
jl
jns
add
insb
out
pop
leave
fcomps
repnz
gs
pop
mov
xchg
daa
loop
loope
lret
sarl
lods
in
push
nop
push
ret
mov
fidivrl
pop
fwait
pop
pop
loope
push
pop
sbb
mov
int3
sub
mov
mov
add
pop
push
pop
pop
stos
and
fbld
fisttps
adc
add
mov
and
rolb
test
jb
or
cmpsb
ffree
data16
es
mov
stos
lods
mov
or
sub
lds
int
jbe
cmovo
xchg
sbbb
xor
add
mov
aad
out
sbb
les
and
sub
pop
gs
cmp
or
int3
adc
div
add
ljmp
sbb
nop
jo
test
xor
jge
or
fistps
push
in
popf
mov
sub
xchg
shrl
insb
mov
stos
popf
push
mov
xor
test
xor
jne
pop
mov
adc
rcl
cmp
adc
sar
shrb
add
push
push
int
sbb
pop
sbb
dec
sbb
sub
scas
lahf
lcall
cwtl
adc
lds
movsb
dec
push
xor
add
mov
sub
add
mov
inc
ds
xor
dec
jno
xor
jo
out
enter
pushf
fxch
movl
sbb
aaa
divb
xor
sbb
jae
mov
pop
lcall
jmp
cmp
mov
jne
mov
jno
push
push
js
loope
jne
lods
inc
push
icebp
and
mov
ret
popa
ret
add
inc
imul
sub
lods
fs
les
stc
sub
and
cmp
lds
mov
ja
adc
scas
add
test
push
adc
nop
dec
repz
adc
xor
adc
nop
cs
cltd
add
dec
sahf
pop
sub
pop
rep
sbb
rcl
call
sti
push
aad
cmp
or
loopne
ret
addl
pop
or
roll
add
pop
and
inc
sbb
xor
or
and
fidivs
mov
mov
int
fmuls
ljmp
daa
mov
mov
ret
mov
xor
dec
xor
test
sbb
mov
and
mov
jno
cmp
fistpll
xchg
mov
movq
pop
jne
out
leave
dec
mov
or
xor
mov
fisttps
shl
mov
leave
mov
outsb
sub
inc
shll
lods
add
push
je
repnz
cmp
pop
xchg
and
aam
sub
les
cli
adc
in
cmp
ret
push
push
sbb
lea
pop
idivb
js
aas
jne
and
xlat
xchg
push
aam
rorl
inc
inc
add
sahf
inc
test
push
add
mov
mov
sbbb
ds
dec
or
pop
push
cmc
cmp
or
leave
cmp
jbe
jge
sbb
outsl
out
test
notb
sar
repz
rolb
pop
cmpsb
mov
fimuls
jb
cmpsb
rcrb
jle
pop
dec
ja
jl
cmp
pop
cmp
and
popf
idivb
clc
xchg
mov
push
fistps
add
sarl
add
jle
and
mov
inc
shll
pop
hlt
sahf
cmp
jno
sub
sub
test
sub
out
sub
cmc
es
sarl
mov
xchg
push
lods
xchg
repz
push
adc
arpl
push
sbb
cmp
ficomps
mov
push
sbb
sub
xchg
je
into
fldl
ror
stos
push
pop
rorb
add
addl
inc
and
push
inc
ds
int3
mov
loope
lret
out
lret
or
mov
adc
ficoml
dec
sbb
notb
push
cli
int3
xorl
fs
mov
mov
ficoms
mov
popa
cmp
mov
sbb
mov
sbb
cmp
mov
cmp
lcall
icebp
out
out
jecxz
pop
icebp
or
loope
dec
xor
out
das
and
or
inc
pop
das
scas
jg
stc
cld
je
popa
jmp
or
ret
shrl
push
movsl
mov
dec
arpl
in
gs
nop
dec
add
lds
sbb
pop
push
adc
rclb
jmp
sahf
cmp
repnz
aaa
sub
fstps
xor
cs
push
mov
xchg
andl
inc
add
test
ror
mov
ljmp
fdivr
mov
fwait
lret
xchg
gs
rorl
dec
or
aad
enter
out
push
jne
lods
aad
jns
movsb
mov
push
jg
xor
jge
mov
fs
loope
mov
stc
ficoms
pop
jg
push
pop
cmp
mov
insl
jp
testl
daa
sti
mov
mov
loope
mov
add
stc
mov
mov
testb
fstpl
outsb
sub
xor
add
sbb
sub
cmpsl
sub
inc
cmc
es
add
pop
mov
bound
aam
xchg
fisttpll
outsb
sub
dec
loopne
daa
mov
decb
int
adc
fisubrs
lods
outsb
sub
ja
sbb
xlat
push
add
icebp
stos
push
aad
jb
mov
roll
rolw
cld
pop
mov
addb
addr16
sub
mov
mov
push
sbb
sub
dec
push
mov
inc
jbe
repz
mov
push
call
rcr
jo
pop
stos
jl
lahf
mov
jmp
jmp
pop
inc
jp
divl
jmp
xchg
sbb
bound
or
arpl
xchg
push
into
mov
mov
stc
xchg
inc
out
scas
push
clc
out
push
lea
jne
cmc
mov
sub
je
dec
fcoms
fs
mov
movsl
gs
add
jp
xchg
xor
enter
fst
xchg
push
jmp
push
sbb
sub
push
jmp
rcr
mov
mov
sarb
mov
cltd
pop
sbb
lcall
outsl
cwtl
pop
adc
sbb
sarb
and
loopne
test
push
jecxz
std
addb
icebp
cmpsb
rolb
jmp
or
push
pop
and
jno
stos
mov
sbb
mov
outsl
daa
fbstp
add
xor
mov
inc
jb
out
push
sub
in
lods
pop
clc
loope
jp
mov
sub
mov
pop
rolb
add
in
loope
cmc
mov
insb
mov
and
jno
pop
loope
mov
aaa
imul
cmp
and
cmp
push
sub
xchg
cmc
ljmp
sub
shll
pushf
shlb
mov
cmpsl
or
rclb
fwait
xor
push
lret
outsb
sahf
jo
and
pop
sarb
xchg
push
adc
loopne
push
xchg
bound
add
xchg
pop
add
loope
add
pop
sbb
cmc
and
cmp
into
mov
add
cld
inc
mov
icebp
aam
or
mov
popa
lds
mov
xchg
mov
jno
cmc
test
rorl
add
fnstenv
mov
int
mov
lret
xchg
shlb
shl
xchg
dec
push
sub
mov
adc
clc
mov
cmp
daa
mov
mov
mov
fidivl
jnp
lahf
xor
aas
jno
and
mov
inc
roll
stc
mov
jno
fucomp
test
adc
inc
cmc
es
and
pop
fsubrl
cld
and
push
adc
cwtl
xchg
add
sbb
pop
shlb
aas
out
pushf
xchg
adc
mov
sbb
in
sbb
push
cmp
mov
pop
pop
push
pop
fldl
mov
jno
push
xorl
nop
shlb
out
push
sbb
add
cmpl
mov
sbb
pop
orb
push
and
mov
lds
jae
xchg
movsb
adc
push
out
repnz
dec
jno
sbb
fbld
dec
cmp
leave
jne
jmp
add
mov
push
cwtl
movsl
mov
lods
mov
loopne
sti
xchg
repz
mov
aas
xor
mov
out
and
lds
and
jbe
push
mov
push
bound
jmp
cmpsl
fisubs
jne
jp
add
stc
cmpsl
addr16
in
xchg
and
ret
popa
sub
adc
rcll
or
imul
and
fwait
jne
mov
mov
ffreep
fisubrl
fcmovnbe
xchg
push
pop
cltd
pop
adc
mov
add
aas
push
add
cli
adc
loope
inc
add
mov
fwait
add
mov
adc
int3
inc
daa
cmp
mov
shrl
rol
test
adc
xchg
inc
mov
rcrl
pop
jnp
sbb
ja
sub
push
in
jnp
mov
insb
negl
mov
in
iret
rol
call
add
mov
icebp
and
loope
and
js
adc
push
fs
push
fucom
and
jmp
outsl
pop
jl
add
cmp
imul
add
repnz
sub
pop
mov
xchg
cmpsb
jnp
popa
xchg
imul
and
pop
loope
adc
xchg
jp
pop
lea
cmc
sahf
pop
jmp
std
jne
sbb
xlat
push
cmp
pop
xor
mov
dec
roll
mov
mov
hlt
lock
mul
imul
pop
and
cwtl
into
arpl
ret
std
cmpsl
shll
mov
call
lods
pop
dec
or
addl
mov
xchg
test
add
aaa
idiv
dec
or
add
je
dec
popa
enter
mov
jmp
pop
aas
incb
mov
pop
push
lea
mov
mov
add
mov
fld1
outsb
movsb
add
jne
sub
mov
fs
mov
jecxz
and
std
jns
sbb
pusha
or
les
mov
pop
stc
sub
mov
sub
lds
sbb
movsl
gs
cmpsl
mov
jp
xchg
xor
shrl
xchg
mov
bound
jb
xor
mov
in
stos
mov
pusha
sbb
xorl
sbb
arpl
adc
adc
in
inc
test
inc
pop
add
inc
add
mov
sub
std
scas
add
pusha
into
cld
or
cltd
aas
loope
jecxz
nop
or
inc
and
ficoml
mov
iret
test
lds
mov
aad
dec
mov
fcmovb
jno
or
in
mov
lret
lcall
cmp
leave
jne
push
sarb
pop
push
and
mov
mov
mulb
fsub
andl
loopne
jno
mov
fldt
loopne
cmp
int
test
sub
movsl
push
cwtl
jl
jle
ja
imul
les
sub
fisubrs
inc
daa
gs
xor
mov
mov
loope
xchg
scas
and
leave
in
adc
cmp
stos
fnstcw
scas
sahf
pop
fs
enter
loope
fstps
xchg
setp
gs
jg
pop
xchg
mov
xchg
adc
rcr
sbb
inc
cmp
daa
jg
xchg
popa
jo
or
xchg
push
sarb
fmull
leave
inc
sub
xor
and
xchg
lret
xchg
lds
add
jecxz
scas
push
and
je
adc
fs
scas
outsl
xchg
mov
mov
pop
addr16
jl
mov
imul
divl
lds
cld
daa
out
add
filds
xor
mov
mov
xchg
vpandn
lods
or
in
pop
das
xor
stos
inc
lds
cltd
and
idiv
sub
in
or
adc
jae
pop
pushf
ja
loope
mov
mov
xlat
psrad
in
adc
insl
xor
cmpsb
fdivl
pusha
lea
rclb
in
fcompl
cmp
sub
push
xchg
push
mov
cwtl
jp
mov
mov
inc
loopne
roll
insl
adc
loope
inc
add
mov
fwait
add
cmp
or
lds
or
xchg
data16
and
enter
lds
mov
adc
jae
or
imul
mov
int
lahf
pop
cmc
div
inc
icebp
in
lods
insl
jo
jo
addr16
leave
cmp
lock
sub
or
in
js
mov
gs
mov
push
ljmp
pop
repnz
ja
bound
fistps
int3
push
fisttpll
adc
test
daa
add
pop
cli
sub
jecxz
shrl
addr16
xor
push
lods
xchg
jb
pop
xchg
aam
push
mov
pop
push
cmpsl
xchg
xchg
push
adc
push
sbb
cmp
lret
ss
scas
fwait
pop
imul
mov
and
lcall
bound
jp
push
xchg
loope
inc
fisubl
bound
fcoms
adc
lds
insl
aam
scas
or
aas
clc
js
or
rcll
inc
and
xor
mov
iret
mov
lds
repz
aad
dec
mov
sub
jno
or
in
mov
lret
lcall
cmp
leave
jne
test
jl
loope
jns
mov
push
and
mov
add
push
mulb
fsub
jl
jecxz
push
adc
xor
sbb
fistps
cmp
int
test
sub
movsl
inc
fdivrs
sarl
imul
les
push
andl
push
adc
jo
ljmp
scas
and
leave
in
adc
cmp
stos
fnstcw
fcompl
or
cltd
adc
lret
xor
setp
gs
jg
sbb
mov
jg
call
add
fistps
mov
in
jg
xchg
popa
jo
sahf
push
sub
lock
dec
lds
pop
das
movsl
mov
orl
or
lds
ret
and
mov
mov
jecxz
pop
int3
stc
jb
outsl
int3
xchg
jbe
cs
scas
add
mov
mov
sti
dec
loope
mov
inc
stc
mov
jp
icebp
xchg
jle
mov
insb
mov
and
jno
pop
loope
mov
aaa
imul
das
push
push
shl
out
scas
outsb
cmp
cmpsl
push
popf
mov
gs
rol
sub
pop
xor
mov
xchg
push
push
test
push
or
add
test
inc
in
sbb
mov
out
fsts
jo
je
pop
sarb
xchg
adc
fcmovu
cmp
mov
loope
aad
or
and
pop
inc
sbb
insl
rolb
hlt
lcall
xor
mov
inc
or
adc
data16
aaa
stos
cmp
movl
outsl
rcll
rcll
jns
icebp
icebp
cmp
les
in
lock
fcmovu
dec
mov
cmp
dec
ja
imulb
cmp
loope
cmp
jo
sub
mov
jg
xchg
xor
push
in
arpl
push
mov
mov
sbb
xchg
cmp
lock
jecxz
push
mov
out
pop
leave
fcomps
xor
sbb
pop
imul
mov
cmp
shrl
add
dec
dec
xchg
pushf
push
xor
das
dec
xor
jnp
sbb
js
rcrb
mov
cltd
ffreep
mov
addr16
jno
movsl
cwtl
pop
shll
aam
add
ret
sbb
mov
loope
ret
fsubr
pop
mov
clc
je
ds
dec
add
xchg
or
lds
or
xchg
data16
mov
es
dec
xor
dec
inc
aaa
mov
nop
aam
hlt
mov
shr
mov
inc
mov
in
scas
outsl
xchg
mov
and
decb
mov
mov
ret
xor
ljmp
cmp
jge
add
xchg
mulb
fsub
cmp
adc
in
popa
popa
cmpsl
scas
je
pop
add
lea
mov
stos
stos
loope
sahf
pop
push
jns
inc
shl
push
test
pop
es
sub
call
lds
aam
xor
shrl
xchg
pop
adc
mov
push
mul
jbe
fisubs
test
pushf
pop
pop
mov
sub
in
push
sbb
mov
xchg
lcall
jbe
ljmp
dec
fcompl
add
rcrb
movsl
jns
into
mov
add
cld
inc
mov
push
in
dec
or
dec
jbe
shlb
push
push
lds
daa
mov
mov
jae
mov
and
add
rcrl
cmp
lods
lods
repz
mov
sub
push
in
mov
xor
xor
ds
cmc
lahf
loope
out
xor
shll
push
sbb
and
inc
pop
xor
fld
mov
loopne
or
mov
scas
outsb
outsb
mov
cmp
imulb
mov
test
test
shrl
dec
lds
xchg
push
ljmp
pop
adc
shlb
sbb
xchg
dec
mov
int
and
cmp
pop
sbb
rolb
mov
or
xchg
push
push
fwait
sbbb
adc
inc
add
mov
mov
cmp
shrl
dec
fldcw
mov
or
leave
adc
cld
andb
mov
add
cmc
inc
mov
mov
jbe
xor
outsl
pop
shlb
xor
dec
or
in
mov
inc
testl
fucomp
jb
sarl
dec
seta
fsubs
out
cmp
jecxz
mov
bnd
popa
mov
fisttps
sub
mov
dec
addr16
in
or
ljmp
or
xor
mov
adc
push
popa
outsl
das
xor
rcll
adc
mov
jl
nop
cmp
dec
rcrb
jne
negl
fstps
fcmovbe
inc
shll
mov
std
sub
xchg
movb
movsl
movsl
inc
inc
add
dec
adc
sbb
mov
sub
bswap
push
std
int3
or
sub
rorb
mov
les
arpl
sub
mov
jbe
ja
xor
pushf
mov
push
jmp
pop
mov
insb
jge
push
loope
mov
xor
test
addr16
jb
cmp
jne
push
incl
clc
jecxz
mov
frstor
and
cmp
fcomi
and
rorl
fnstsw
pop
mov
or
fidivs
shl
stos
es
xlat
gs
loop
stos
pop
inc
jne
dec
shll
sub
loop
data16
and
sarl
lods
insb
jg
sbb
lea
jle
fwait
adc
push
cld
pop
in
inc
inc
push
xor
xlat
xchg
push
sbb
xor
roll
push
add
or
and
cmpb
dec
mov
xchg
out
stos
stos
inc
jge
in
sbb
lds
daa
or
dec
or
mov
shl
dec
test
mov
xor
jne
ucomiss
ja
xor
mov
sub
xor
jno
cmp
xchg
in
cld
mov
add
cmp
cmc
ret
cltd
xorl
mov
jb
ret
and
and
jnp
dec
xor
lret
stc
or
pop
pusha
fs
xchg
dec
imul
mov
inc
xor
or
call
adc
out
lahf
pop
adc
push
adc
lock
xchg
push
movsb
jl
iret
sahf
inc
mov
lea
pop
pop
pop
sbb
paddw
jmp
fstps
ficoml
mov
sbb
mov
test
push
pop
pop
or
add
add
bound
mov
incl
or
std
cmpsl
shrl
mov
call
or
mov
mov
mov
mov
iret
test
xchg
push
add
jmp
mov
dec
shll
jb
out
sbb
cli
jecxz
fisttps
decb
cmp
sti
ja
sub
shl
inc
cmp
outsb
add
mov
lods
les
push
gs
xchg
sbb
and
insl
std
andl
jo
jl
xor
das
or
imul
insl
imul
mov
pop
rcrl
lds
mov
xor
fsubs
push
les
insl
push
jg
push
lret
inc
aam
adc
mov
lahf
iret
dec
jg
rclb
out
pop
lock
sbb
imul
pop
mov
loopne
adc
jbe
sbb
loope
push
aad
sub
mov
inc
mov
lds
fistps
lods
adc
add
or
in
lret
mov
mov
arpl
pop
mov
movsb
mov
int
enter
inc
sub
int
and
mov
shl
dec
adc
jle
sbb
scas
in
lods
xor
mov
dec
cmp
inc
lret
mov
jae
dec
dec
ja
mov
ret
mov
clc
lcall
movsb
fs
into
scas
adc
jnp
inc
bound
movsl
mov
sub
xor
outsb
sub
pop
sub
insb
test
adc
jg
push
cmpsb
dec
inc
popf
rcll
loope
lret
shr
shrb
add
nop
push
jg
fwait
pushf
dec
shrl
in
fiadds
pushf
pop
mov
cmp
clc
sbb
and
xchg
mov
xchg
ror
mov
xor
xchg
inc
add
addb
inc
sahf
into
lcall
std
mov
mov
mov
or
dec
mov
enter
pop
inc
aaa
shll
nop
mov
mov
shrb
jb
jg
outsl
xor
mov
mov
mov
int3
cmp
stc
ja
sub
movsl
pop
stos
cmp
js
xchg
mov
daa
out
and
gs
dec
cmp
mov
mov
cmovp
popf
mov
in
test
stos
cmp
push
imul
out
test
shrl
dec
lds
test
push
out
xchg
lcall
xchg
shlb
and
cmp
push
pop
adc
dec
ljmp
push
cmp
mov
jns
jge
push
push
fwait
sbbb
adc
inc
add
mov
stos
and
int3
mov
sub
inc
dec
add
js
or
lds
or
inc
sub
mov
test
mov
jae
lds
xor
xchg
iret
imul
scas
scas
cmc
cld
mov
in
jge
push
loope
mov
xor
jns
cmp
stc
add
in
mov
in
clc
mov
mov
and
push
pop
aaa
jecxz
icebp
and
loope
and
js
adc
mov
addr16
lds
pop
out
xchg
adc
stos
stos
enter
add
test
shl
fdivl
dec
fwait
adc
jmp
inc
mov
iret
daa
icebp
shlb
dec
aad
pop
pop
push
pop
push
lock
sbb
fsts
or
xchg
push
push
popf
test
hlt
pop
push
cmp
mov
jae
add
add
dec
mov
inc
fldt
loopne
or
lret
add
mov
shll
mov
in
inc
mov
in
dec
push
push
data16
loope
ret
xor
lds
hlt
dec
mov
in
dec
addr16
jb
nop
mov
jo
loope
insl
aas
test
leave
cmp
mov
es
mov
ja
cltd
test
fs
daa
out
adc
mov
xchg
loope
loope
cmp
sarb
cmp
and
sub
pushf
das
rol
sub
jns
sbb
xchg
test
pop
cmp
cmp
mov
mov
xchg
xchg
jmp
popa
xchg
dec
shll
push
in
lods
mov
push
push
int
adc
shlb
in
fcompl
cmp
sbbl
fbstp
mov
xor
jmp
adc
sub
adc
vmovdqu
xchg
popa
jo
or
mov
movl
dec
shrb
out
or
enter
xchg
fs
test
push
repz
aad
dec
mov
cmpsb
cmp
xor
or
scas
shlb
loope
cs
dec
and
test
pop
mov
mov
jns
loope
jp
mov
addr16
and
mov
sti
loop
push
adc
pop
in
movsb
fs
mov
add
es
fldl
cmp
fstpt
push
push
xchg
insb
sub
dec
gs
rol
sub
pop
xor
mov
xchg
push
push
test
push
or
sub
inc
in
sbb
pop
pop
rclb
or
jo
jge
pop
sarb
inc
sbb
fidivrl
add
xchg
jbe
fdivrs
or
and
inc
add
int
rolb
hlt
lcall
xor
mov
inc
push
cli
sbb
dec
or
stos
shl
movl
cmpsb
rolb
stos
mov
xor
mov
shll
out
dec
adc
xchg
push
push
imulb
jo
pop
or
jl
mov
imul
divl
dec
jo
mov
loope
cmpsb
data16
adcb
and
loope
das
hlt
sahf
mov
lret
cmp
int
test
sub
jl
pop
fucom
stc
sub
roll
movsl
roll
test
push
shll
lds
adc
push
scas
pop
sahf
rclb
inc
or
nop
jb
mov
mov
pop
clc
pop
sbb
sarl
in
xlat
xchg
psubw
dec
test
scas
adcl
lret
mov
add
rcrl
cwtl
into
arpl
test
and
push
jnp
or
mov
idivb
lds
mov
jno
int
xor
repz
scas
pop
xor
mov
int3
fisttps
adc
jo
cs
jns
ljmp
pop
cmp
mov
push
inc
jne
jp
cwtl
mov
js
loope
jne
lods
inc
push
icebp
and
movsb
ret
push
dec
jb
push
pop
testb
sub
out
out
cmp
mov
jmp
pusha
xchg
add
sub
xor
shl
enter
shll
add
rclb
jno
adc
sahf
inc
mov
mov
sub
lods
fsubrl
adc
lret
xor
sbb
and
lock
pop
clc
in
add
push
es
ret
addl
cmp
jg
lds
insl
aam
scas
mov
mov
jnp
mov
in
dec
lds
mov
xor
cmpsb
movsl
xor
lds
hlt
mov
into
loope
lods
adc
in
jb
xor
xor
out
std
xlat
loope
aas
incb
mov
pop
sub
mov
sub
jp
in
ja
scas
pop
push
out
cmpsb
cmpsb
aam
mov
push
loope
mov
outsb
cld
or
and
loopne
sub
mov
dec
jmp
and
fsubl
pop
xchg
ljmp
cmc
ret
lret
es
cmp
pushf
shlb
adc
nop
cs
add
lods
insb
jg
sbb
lea
out
or
jne
js
pop
pop
mov
lcall
arpl
and
aad
adc
ret
ret
sbb
add
dec
xor
fsts
jg
mov
pusha
add
cmpsl
insl
push
sbb
sub
dec
push
orl
lods
xchg
into
inc
hlt
dec
jb
mov
xor
push
add
imull
fcomp
mov
dec
jns
shrb
cmpsb
out
mov
inc
out
ja
clc
inc
add
mov
mov
aas
lds
movsb
cmpb
and
jle
mov
mov
popf
pop
cli
dec
or
xchg
inc
sub
jne
mov
ja
js
adc
test
xor
dec
repnz
adc
adc
shll
daa
insb
fists
iret
dec
dec
adc
jnp
aaa
test
lea
and
lods
sbb
sbb
xchg
pop
in
stc
xor
jecxz
movsb
scas
pop
push
xchg
rcll
mov
in
jl
inc
and
mov
int
out
lea
ds
inc
test
mov
call
fdivrs
es
dec
mov
mov
movsl
and
jnp
add
nop
mov
adc
xor
mov
nop
mov
mov
ljmp
es
jbe
jl
ja
stos
mov
xchg
jp
idivl
and
cmc
lahf
loope
out
xor
shll
push
cmp
and
xor
fld
add
loopne
or
mov
scas
outsb
dec
cld
insb
dec
jp
call
test
sub
cmp
lds
mov
ja
push
rcll
sbb
adc
sub
ret
pop
push
nop
cmp
dec
ljmp
push
xlat
push
add
mov
push
sbb
fadds
aaa
push
aad
push
fwait
cmpl
cmc
andl
inc
fidivs
xor
addb
mov
into
lcall
ficomps
test
rolb
and
roll
and
insl
xor
pop
stos
repnz
lret
pop
adc
call
nop
adc
call
mov
dec
fldl
mov
pop
jmp
jb
popa
cltd
shll
xor
and
inc
outsl
jg
nop
shrl
lea
inc
test
scas
outsb
lret
inc
imul
test
mov
mov
push
mul
and
pop
daa
testb
jmp
imul
daa
daa
cmp
out
fists
dec
sub
jne
xchg
imul
lret
xchg
push
sar
js
push
mov
aad
fcmovnbe
xchg
xchg
hlt
ret
addl
jg
sbb
inc
and
add
pushf
bound
std
mov
cmp
lret
mov
fidivs
xlat
or
push
mov
add
mov
mov
daa
mov
cs
leave
jns
je
mov
adc
jmp
inc
dec
inc
cs
push
insl
mov
mov
jnp
jno
adc
mov
cmp
sub
clc
mov
jbe
daa
sub
arpl
and
insl
xor
fld
andb
std
push
daa
mov
imul
sbb
sub
rorl
movsl
mov
xrelease
outsl
and
push
push
vrcpps
repnz
push
leave
sbb
adc
push
pop
cmp
jp
pop
add
sub
mov
fdivr
pop
cltd
cltd
pop
push
mov
inc
sbb
xlat
aad
cli
jns
aad
sbb
mov
ret
rcll
idiv
gs
rorl
hlt
leave
sbb
pop
movsl
rolb
mov
pushf
mov
enter
data16
or
test
adc
xchg
mov
aaa
cmp
jae
adc
jae
fidivrs
mov
xchg
dec
je
xor
lahf
lret
and
xchg
mov
cmp
imul
jns
mov
ds
das
mov
sbb
test
data16
arpl
ret
cmp
cmp
mov
and
push
enter
imul
inc
dec
sub
mov
clc
call
xchg
push
cmpsb
cmc
xor
mov
loopne
in
mov
jnp
iret
jo
dec
popf
xchg
pop
popf
int
push
and
xor
ret
ljmp
xlat
js
add
pop
cmp
mov
inc
add
jge
jecxz
inc
fistps
arpl
cli
add
pushf
jmp
mov
inc
ds
add
fcmove
sub
dec
addl
and
loop
xchg
scas
lods
xchg
push
xor
push
inc
xor
mov
xchg
rorl
sarl
outsb
xor
sbb
insl
add
mov
dec
in
mov
sbb
shl
ja
in
ss
cmc
cmp
addb
and
pop
leave
add
or
loop
bound
dec
or
inc
fstpl
sub
jmp
xor
in
lods
enter
imul
out
addr16
mov
xchg
push
adc
insb
push
adc
and
les
xchg
adc
in
cmp
ret
push
push
pop
imul
cmp
movsl
mov
aas
jne
and
xlat
xchg
push
aam
sub
push
pop
inc
inc
add
sahf
fucomip
out
inc
fwait
jae
add
mov
mov
sbbb
ds
dec
or
pop
push
enter
sahf
sub
decb
mov
jge
sbb
jmp
mov
jbe
mov
iret
xchg
mov
je
mov
inc
mov
sub
into
outsl
xor
fcoms
sub
ret
jnp
dec
jnp
xchg
cmpl
aaa
divl
jnp
mov
sti
fcompl
mov
or
loope
adc
and
lret
andl
lds
lods
mov
xchg
mov
call
in
gs
adc
sti
rclb
out
cli
adc
push
adc
imul
rcll
push
jle
dec
pop
fidivrs
sbb
fcompl
sbb
or
pop
xlat
xchg
adc
push
aad
jmp
stc
xchg
lods
jne
les
inc
pop
popf
arpl
inc
mov
mov
scas
add
push
mov
popf
mov
enter
inc
add
rorl
push
push
pop
imul
je
add
or
xor
mov
dec
sub
push
or
jnp
pusha
cld
and
cmc
or
orl
js
jg
pop
vmwrite
aas
cmc
loopne
vpsraw
ds
lahf
pop
and
mov
adc
popf
cld
sub
jmp
mov
push
out
sub
call
movsl
gs
xchg
dec
ds
rcll
adc
mov
repnz
xor
dec
rclb
pop
pop
push
pop
std
mov
scas
in
fstps
pop
aam
je
xchg
sbb
cltd
pop
inc
push
loopne
stc
inc
add
push
fidivrl
je
mov
add
and
mov
xor
aad
mov
or
jno
add
push
and
dec
sub
xchg
enter
cmpl
push
rdmsr
in
movsl
js
icebp
int3
add
or
bound
lret
test
or
fisttpll
cmp
popa
dec
jns
lea
mov
jmp
clc
mov
shr
repz
inc
jno
and
and
and
xor
ss
mov
movhlps
push
into
jmp
shll
sub
cmp
ljmp
or
dec
leave
xor
push
jae
mov
adc
rorb
or
dec
pop
mov
push
outsb
aam
mov
or
sub
jp
or
mov
pop
push
sbb
inc
in
xchg
movb
fisubs
rcll
pop
iret
inc
mov
add
cmp
lods
test
mov
lods
mov
dec
or
and
mov
mov
nop
xchg
pop
enter
ret
inc
ret
or
mov
es
sbbb
iret
jecxz
es
jl
popf
jge
push
lods
sbb
enter
enter
stc
mov
push
repnz
loopne
es
add
divl
jge
outsl
pop
in
andb
movsl
clc
mov
out
fwait
add
or
inc
fstpl
inc
push
in
lods
dec
mov
test
push
inc
pusha
cmpsb
sub
mov
call
xchg
jne
mov
cmc
hlt
cmp
shrb
sub
mov
mov
lea
or
ljmp
bnd
pop
adc
push
js
cmpl
xor
inc
and
int3
sbb
mov
add
xchg
pop
dec
lcall
jns
lahf
addb
lods
adc
xor
xchg
lods
out
dec
or
sub
fnsave
or
test
xchg
xchg
jbe
repz
mov
repnz
push
out
scas
int3
int3
pop
sbb
mov
lods
xor
call
cmpxchg
mov
cmp
xor
clc
aad
sub
daa
out
lock
scas
add
cmc
bound
sub
cs
cs
dec
mov
push
sub
sbb
xor
cli
imul
sarl
addr16
in
fmuls
pop
in
xchg
adc
push
adc
cld
repz
mov
repnz
push
int
jge
pop
sahf
pop
jmp
sub
sbb
dec
lret
fdivs
add
cmc
mov
int3
movsl
cmp
fldenv
add
inc
jg
cmpb
jge
shrl
dec
insl
fildll
das
mov
mov
lret
xor
inc
push
xor
mov
xor
push
jae
xor
enter
scas
outsl
push
jo,pn
mov
sbb
mov
gs
cmp
pop
addr16
jmp
addr16
js
mov
xor
pop
push
mul
mov
and
jnp
sbb
bound
lods
jg
movb
push
and
adc
scas
outsb
mov
test
lret
in
lods
and
cli
sub
mov
cmpsl
arpl
mov
or
gs
mov
pop
push
adc
dec
das
test
outsb
pop
rcll
rclb
in
rclb
xor
xchg
sahf
pop
mov
inc
sbb
mov
xlat
sbb
push
dec
pop
in
mov
push
enter
jmp
xchg
aad
addb
mov
inc
inc
sahf
mov
or
int3
push
and
lods
lret
aad
or
shrb
stc
mov
imul
mov
cs
movsb
adc
jae
xor
enter
scas
outsl
push
jo,pn
mov
sbb
mov
mov
in
mov
idivl
divl
or
fistps
mov
leave
mov
loope
loope
dec
sub
nop
dec
xchg
lahf
movsb
imul
mov
sub
fwait
insb
lods
in
lods
sub
in
scas
mov
push
loope
fnstcw
es
gs
mov
sub
scas
jne
adc
icebp
xchg
push
push
mov
cmp
out
nop
push
mul
jo
fdivrp
sub
loope
fcompl
sbb
daa
hlt
repnz
xchg
push
mov
aad
cmp
fwait
inc
add
mov
pop
mov
arpl
pop
rol
inc
mov
inc
jg
push
pop
sar
jge
xchg
jge
or
adc
lret
int3
mov
movsb
pop
lret
in
dec
xchg
mov
outsl
xor
mov
jg
push
jge
xor
stos
lea
notl
or
lock
mov
xchg
jle
enter
xor
cmp
idivb
cmp
inc
insb
cmp
clc
add
daa
jne
sub
push
ret
lret
and
ficomps
fs
outsl
lahf
add
mov
sub
ljmp
imul
imul
out
ljmp
in
jmp
jno
or
int
adc
rcrl
or
iret
iret
es
adc
nop
jg
pushf
cmp
divl
sahf
pop
mov
fmull
fstps
jno
sbb
jno
jbe
pop
addr16
mov
daa
pop
movsl
pusha
jns
add
addl
ljmp
out
in
addb
adc
popa
into
mov
inc
pop
call
or
sub
leave
dec
push
add
test
mov
xor
je
fidivs
mov
sahf
jl
or
cs
mov
lock
enter
mov
mov
aam
push
dec
cli
mov
cmp
jmp
xchg
mov
out
and
mov
jbe
dec
xor
imul
in
push
xchg
dec
pusha
subl
test
lods
sub
test
stos
push
mov
push
pop
mov
jb
adc
xchg
jmp
pop
xchg
push
push
xchg
mov
cli
clc
xor
rorl
int
add
clc
pop
jle
sbb
call
inc
push
shll
mov
les
das
jp
xchg
gs
js
test
push
popa
push
and
mov
rclb
call
or
and
rorb
test
push
js
inc
or
sbb
fisubrl
test
push
jb
xor
psubusw
test
je
stos
int
repnz
cld
repnz
ss
lcall
iret
in
pop
sbb
dec
sti
mov
cld
cmp
jae
imul
xor
cmp
das
add
jne
mov
arpl
mov
jge
add
dec
add
loopne
jns
cmpsl
scas
add
scas
mov
sub
insl
sub
enter
imul
jnp
daa
movsl
sub
pop
push
push
adc
pop
daa
movb
mov
adc
shrb
ret
push
cwtl
pop
mov
jno
lea
jo
fcmovnu
fwait
into
jnp
jge
out
sbb
rcll
fwait
xchg
push
xchg
mov
aad
xchg
js
xchg
addl
gs
mov
roll
cmpl
mov
ret
into
mov
movsl
rol
int3
mov
add
movsb
mov
add
data16
xchg
mov
push
aaa
mov
mov
lret
movsb
and
repnz
loopne
fs
outsl
shrb
je
in
fisubrs
cltd
pop
pusha
cmp
mov
xor
sbb
out
shll
xor
scas
xor
gs
in
lods
fs
mov
movhps
fistps
push
fucomp
sahf
enter
jnp
jl
imul
arpl
or
sbb
pop
mov
je
adc
inc
or
and
push
adc
in
insl
in
mov
ror
jmp
mov
fistl
add
scas
in
push
fstps
scas
pop
sbb
push
add
mov
shl
cmpsl
mov
sub
add
in
push
add
sbb
pushf
stos
je
add
pop
or
cmpsl
in
add
mov
pop
sub
inc
jmp
mov
dec
or
adc
shrb
push
sbb
test
mov
int
es
adcb
sub
xor
rcrb
push
lock
mov
jae
jnp
in
mov
adc
xor
push
inc
nop
cmp
mov
call
test
out
scas
pushfw
movsl
pop
mov
ret
add
pop
loope
hlt
mov
nop
lret
dec
insl
fnstsw
pop
stos
scas
push
jmp
setge
insb
enter
imul
cmpsl
addr16
fsts
cmp
ret
pop
adc
push
aam
push
adc
xchg
sahf
fists
test
leave
adc
push
xor
mov
insl
mov
fldt
sbb
fldenv
add
jmp
cmpsl
loop
mov
add
ret
dec
aaa
icebp
fadds
mov
and
ret
in
mov
push
lods
push
mov
in
mov
or
lret
ljmp
rcll
divb
jae
adcb
sti
je
jno
mov
mov
jae
jo
pushf
pop
addr16
aas
cmc
mov
xchg
mov
cld
mov
sbb
adc
mov
ret
cltd
xchg
and
bnd
dec
nop
jbe
xor
mov
and
loop
shl
and
adc
adc
hlt
mov
das
mov
cmpsl
cld
sub
jns
cmp
mov
aam
push
gs
stos
dec
int
or
or
sbb
push
ljmp
icebp
lods
orl
adc
cld
lret
int
dec
mov
sub
pop
sbb
pushf
xchg
in
ret
lcall
sbb
cwtl
not
xchg
push
add
in
movsb
add
jecxz
add
ret
jmp
pushf
fidivrs
mov
leave
insl
sbb
scas
and
dec
push
adcl
decl
inc
enter
repz
je
nop
dec
jnp
xor
leave
aas
lret
test
lea
jecxz
and
lods
mov
xlat
popf
test
sub
xor
movsb
lds
add
daa
out
aad
and
add
enter
cmpsl
push
lock
mov
add
add
scas
movsl
dec
jmp
sub
mov
sub
scas
dec
shll
pop
mov
dec
ss
xchg
shl
xchg
ror
push
loope
scas
xorl
lods
cltd
adc
out
pop
lret
adc
sbb
sbb
mov
adc
pushf
xor
cltd
pop
or
icebp
pusha
and
xchg
and
push
fadds
jge
flds
and
sbbb
insb
bound
rolb
mov
mov
or
leave
adc
or
and
dec
inc
or
icebp
inc
rcll
mov
je
icebp
or
xor
mov
mov
cs
lods
dec
adc
out
jle
pop
dec
jp
popf
mov
cmp
or
inc
add
pushf
cmc
mov
xchg
add
aad
movsb
fs
mov
paddb
bound
push
fnstsw
outsb
ja
dec
push
jmp
in
jecxz
cmc
orl
fimuls
add
call
popa
icebp
mov
lea
loopne
daa
cmc
pop
adc
out
xchg
sahf
fists
cmp
repz
sbb
ficomps
dec
pop
add
ds
loop
lods
sbb
xchg
ljmp
xchg
and
lret
pop
sarl
mov
out
add
dec
inc
rsqrtps
mov
lret
mov
xor
pop
aad
and
jge
or
mov
test
test
push
pop
xor
lds
sahf
insl
inc
arpl
test
dec
insb
out
xor
cmp
mov
movsb
xchg
jle
sti
xor
cmp
mov
ss
aaa
jne
sbb
inc
inc
pop
daa
out
ret
data16
stos
jle
clc
mov
mov
inc
push
int3
mov
in
es
cld
sub
jmp
cmp
lret
sub
xor
jg
pop
enter
shll
add
xchg
xchg
push
in
mov
rclb
stos
imul
xchg
mov
ficoms
cmp
clc
mov
pop
sbb
pop
out
test
push
sbb
adc
ret
dec
fbld
fwait
push
jb
sbbb
ret
xor
mov
jnp
push
or
leave
mov
dec
call
test
sbb
push
rcr
sub
pop
mov
adc
scas
jle
mov
xchg
in
aas
incb
adc
les
mov
sarb
lcall
push
jne
out
ror
mov
push
and
cmp
sti
cltd
icebp
loopne
cli
loopne
or
icebp
add
lea
or
test
fdivr
sub
mov
scas
in
jecxz
mov
pop
push
adc
adc
xchg
sub
sbb
jae
mov
iret
cmp
hlt
lods
cmp
dec
sub
pop
push
aad
pop
je
cmpsb
sti
pop
sbb
push
pop
cwtl
pop
dec
aaa
addr16
sub
roll
add
inc
push
fstpt
dec
mov
add
or
or
dec
fcompl
mov
cmp
or
push
or
jecxz
aaa
call
inc
push
and
pop
icebp
mov
mov
scas
outsl
xor
jo
scas
push
icebp
jae
jle
lcall
ljmp
jle
cmp
mov
sti
clc
mov
mov
mov
adc
cmpsb
and
loop
mov
pop
icebp
bound
and
out
lret
pop
adc
mov
sbb
sub
xchg
cmc
es
lods
cmpsb
mov
adc
scas
in
push
lret
idivb
push
adc
push
adc
imul
loope
dec
pop
movsb
jg
jmp
sbb
aad
push
sbbl
icebp
not
xchg
mov
adc
scas
jb
les
inc
pop
outsb
and
mov
std
adc
bswap
mov
mov
cmp
or
mov
ret
mov
adc
inc
enter
repz
int
icebp
mov
int
mov
jb
mov
inc
mov
sbb
mov
aas
cltd
pop
pusha
cmp
inc
pcmpeqd
in
cli
mov
arpl
pop
ss
repz
in
cmpsb
data16
xchg
movsb
fs
mov
mov
dec
or
mov
sbb
sub
test
pop
in
lods
mov
sub
fwait
push
xlat
shl
outsl
iret
test
pop
iret
lds
jne
xchg
rcll
pop
adc
jo
adc
jmp
out
in
lea
into
sbb
fldt
and
movsl
test
pop
sbb
xlat
xchg
xchg
lea
sub
xchg
movb
je
inc
push
sti
adc
ret
leave
ret
mov
cmpsl
ds
dec
jmp
or
pop
mov
xor
leave
or
xchg
je
jae
aaa
idiv
push
ret
hlt
xor
in
push
jae
mov
fimuls
jb
sbb
insl
dec
shr
mov
sti
jne
and
idivl
mov
dec
mov
mov
mov
pop
mulb
fdivrs
data16
push
cld
loop
jle
mov
lahf
in
adc
fstpl
mov
lea
push
lcall
sub
pop
iret
lds
loope
xor
aam
stos
or
in
adc
insl
fwait
sti
outsl
fistl
mov
fisubrs
ret
imul
sbb
fstps
pop
sbb
in
add
int3
pop
push
jae
inc
neg
les
jecxz
lea
incl
pop
add
sub
ret
mov
xchg
outsl
testl
mov
outsl
xor
dec
jle
notb
mov
mov
outsl
outsl
mov
cmp
add
jmp
jb
aas
insl
lods
insl
les
addb
mov
mov
ljmp
mov
scas
popf
movsb
add
jne
sub
cmc
mov
pushl
cmp
push
in
and
jns,pt
nop
cs
pusha
mov
out
scas
mov
lcall
jmp
ljmp
call
movsl
sbb
xor
imul
adc
or
mov
xchg
int
adc
lock
cmp
pop
pop
push
imul
push
aas
ficompl
sbb
clc
sbb
add
addr16
push
test
add
hlt
dec
roll
pop
inc
dec
loope
lret
ds
push
mov
pushf
xchg
or
lret
or
aam
enter
leave
push
push
out
mov
mov
mov
jns
jg
dec
adc
dec
jo
or
lods
mov
icebp
testl
sub
cmp
xchg
adc
pop
push
fsub
cmpsb
sub
hlt
filds
stos
movsb
fs
aad
and
loop
sub
sbbl
mov
popf
jecxz
dec
jg
imul
dec
std
lret
push
lret
xchg
add
and
ficomps
inc
push
or
scas
xchg
push
pop
loope
xor
and
push
xchg
push
xor
dec
adc
mov
sub
das
cmc
push
pop
sbb
mov
push
push
cli
js
pop
push
shll
out
push
xchg
fwait
xor
setbe
cmp
add
sub
inc
jge
xchg
outsl
jle
or
stos
cmp
std
stos
sub
stos
ror
lds
cmpsl
rcll
dec
ds
icebp
or
xor
mov
mov
lock
xor
ret
cmp
xchg
cld
mov
mov
cmp
mov
std
loop
in
cli
cmc
mov
jae
inc
push
xor
xor
adc
loop
push
xor
insb
push
ret
pusha
push
out
pop
mov
loopne
imul
jle
imul
mov
push
out
sub
insl
push
push
dec
mov
push
and
rcll
push
iret
lods
adc
sbb
mov
ficoms
pop
fwait
pop
sub
xchg
sbb
cli
inc
add
loopne
sbb
xchg
jnp
push
sbb
mov
shll
test
testl
jns
int3
rolb
scas
mov
dec
or
mov
jno
dec
or
inc
xor
loope
jl
enter
sub
jbe
das
lea
inc
mov
into
sti
je
jno
movsb
xor
scas
pop
xacquire
in
lret
push
loope
mov
xor
sbb
pop
xor
xchg
pop
dec
js
divl
mov
inc
jb
daa
out
data16
arpl
and
xchg
mov
add
add
pop
loopne
cmp
jp
mov
or
jecxz
pop
mov
and
je
es
jmp
mov
xchg
push
adc
sub
push
pushf
popf
mov
and
mov
ficoms
lret
sub
xchg
sbb
push
adc
push
mov
fcmovu
cwtl
adc
lds
out
xchg
mov
test
mov
ret
loopne
movaps
sahf
xchg
jae
jno
pushf
sbbb
lds
dec
fistpll
dec
or
popa
leave
adc
jbe
in
mov
in
jmp
inc
je
inc
push
jno
repnz
mov
addr16
aas
decb
xor
jmp
adc
jecxz
jecxz
out
mulb
push
in
add
xor
and
adc
std
mov
mov
pop
das
mov
pop
stc
sub
in
in
lods
mov
mov
fstl
or
mov
add
add
repnz
mov
lds
rolb
scas
pop
cs
xchg
sbb
shrb
in
fstps
jmp
adc
in
push
pop
mov
leave
xchg
les
xor
and
cmp
into
sbb
pushf
int3
cwtl
pop
das
inc
mov
sti
test
sbb
clc
aad
scas
aas
aaa
aaa
testb
aad
jae
je
aas
xor
repnz
jg
lea
std
hlt
jo
sbb
sbb
in
mov
cmp
jns
xor
dec
clc
mov
mov
add
call
push
xor
loope
out
xchg
push
cmp
lret
adcl
outsb
sub
cwtl
push
int
popa
push
mov
ljmp
addr16
xor
popl
jo
aam
push
mov
ljmp
fdivl
xchg
lea
pop
push
jae
cmc
push
pop
sbb
aas
push
xchg
cmp
inc
pop
sbb
mov
jp
pop
xchg
push
xchg
clc
fadds
add
inc
addl
adc
pop
pop
inc
sbb
jge
loopne
add
lret
in
js
and
add
lret
jae
mov
or
sub
dec
dec
push
adc
cld
xor
jg
das
adc
or
xchg
mov
jb
push
mov
shlb
adc
and
jle
aad
jae
cld
jb
out
mov
add
xor
adc
ja
mov
js
xchg
mov
daa
out
and
push
mov
sub
loop
sbb
lahf
pop
mov
dec
daa
fstpl
jle
sub
mov
sub
les
out
ljmp
or
cmp
or
xchg
pushf
fisttps
mov
shlb
inc
push
adc
es
adc
nop
sub
int
pop
fdivrp
sub
sub
sub
fcompl
lret
lods
lcall
mov
pop
push
sub
xchg
movb
shlb
sahf
frstor
add
std
out
jp
test
jle
or
sub
loopne
sub
fsub
mov
xchg
push
inc
inc
add
das
cmp
pop
inc
push
xchg
cmpsb
push
cmp
and
push
jb
mov
jo,pt
imull
lret
jp
mov
jl
dec
mov
mov
push
adc
mov
jne
out
aam
icebp
pop
lods
outsl
in
jp
mov
mov
push
fldenv
mov
pop
push
fnstsw
sub
stc
or
out
ljmp
ljmp
jb
xchg
cmp
icebp
lret
movsl
gs
pop
push
adc
pop
out
mov
push
push
adc
outsb
or
sub
add
mov
std
sub
mov
fdivrl
neg
mov
xor
adc
push
aad
xor
setnp
lret
inc
addl
pop
jg
push
mov
out
stos
mov
and
push
sub
int3
mov
xorl
or
xor
imul
repz
mov
add
jae
jg
dec
xor
pop
std
cs
push
shrb
fistpll
mov
add
add
dec
into
push
divl
test
inc
gs
in
js
xchg
xor
pop
mov
mov
fbld
loopne
push
pop
popf
pop
cmp
loop
sub
inc
fsubrl
lds
sub
mov
pushf
lea
jecxz
neg
gs
push
test
insl
sbb
stos
push
shll
or
sub
sbbl
lods
aaa
sahf
pop
sub
aas
fcompl
scas
lahf
lcall
sbb
push
out
add
incb
rclb
dec
add
xor
and
ljmp
int
loop
fmull
or
and
mov
jne
push
pop
test
ss
mov
inc
outsb
mov
mov
mov
xor
insl
aas
mov
das
dec
mov
jl
sbb
mov
add
lds
pop
xchg
popa
inc
mulb
mov
and
aam
xor
mov
and
jl
xor
das
mov
push
test
loop
lret
int
ljmp
sub
jne
popa
or
pop
push
adc
adcb
dec
xchg
push
imul
sub
dec
popf
scas
lcall
jp
imul
insb
xchg
into
lods
dec
test
sbb
dec
cmp
out
cwtl
pop
addr16
out
adc
jbe
dec
pop
les
incb
fdivs
mov
mov
mov
sbb
dec
mov
push
addl
inc
inc
or
iret
test
scas
add
mov
rclb
xchg
mov
and
adc
jo
xchg
in
mov
xlat
mov
shl
outsb
cmp
dec
jp
divl
data16
mov
lods
push
leave
mov
imul
fistps
cmp
out
das
das
out
out
and
jns
lds
jmp
stos
push
sub
test
in
lock
pop
pop
imul
jmp
inc
and
push
call
and
fisttpll
sub
in
ficomps
pop
sbb
fsubrp
pop
sub
xchg
xchg
fcomps
arpl
jmp
mov
xchg
sarl
fsubr
pop
push
xchg
ljmp
push
lcall
dec
mov
mov
test
xchg
dec
xchg
mov
push
lret
jae
xlat
mov
mov
movsb
jmp
adc
int3
jo
mov
das
add
sti
mov
dec
dec
mov
lea
xor
js
shlb
outsl
addb
and
lods
mov
bound
inc
outsb
add
aaa
mov
leave
nop
das
outsb
sub
inc
push
insb
in
lods
out
lret
outsb
testb
ds
negb
shll
sbb
aad
adc
and
sub
jae
adc
imul
scas
pushf
ja
imul
movsb
aad
mov
mov
stos
fcmovu
cmp
icebp
mov
push
sbb
pop
or
imul
ret
addl
inc
add
add
add
popf
add
ror
cmpsl
aad
jge
aam
and
sbb
pop
scas
or
inc
cld
mov
pop
mov
enter
outsl
jae
divb
mov
push
dec
je
icebp
dec
adc
mov
or
fimuls
xor
fisttps
cmp
pop
sbb
cmp
mov
rcl
or
xchg
dec
push
xchg
mov
js
cmc
mov
sbb
jle
and
inc
push
daa
mov
lods
pop
lods
lods
mov
or
xlat
dec
cmp
stc
dec
adc
mull
mov
sub
pop
jp
mov
ret
push
push
ja
cmp
jecxz
les
and
mov
mov
adc
rolb
lea
cmc
out
lret
dec
popf
outsb
sub
cltd
pop
sti
lret
cltd
rcrl
push
mov
aad
sub
repz
les
frstor
fstpl
cwtl
inc
ds
mov
sub
pop
lret
mov
aad
repnz
sub
xchg
dec
xor
inc
push
adc
repz
shlb
sub
add
adc
push
ss
mov
lcall
cmp
cld
sbb
out
int3
mov
fidivrs
divl
icebp
xor
add
rolb
and
loope
ret
repnz
mov
xor
loopne
cmp
scas
int3
cli
inc
stos
imul
cmp
mov
inc
push
out
call
lea
xchg
mov
fnstenv
es
xchg
lock
test
mov
mov
in
imul
push
fcmovnu
lcall
sbb
sbb
push
cmp
out
pushf
test
popf
jle
inc
adc
test
outsl
les
into
adc
stos
mov
fs
mov
or
pop
xor
add
lret
test
leave
inc
dec
push
sub
fsubrp
cwtl
ret
xor
mov
or
lcall
lcall
push
cmp
adc
fstp
push
mov
adc
mov
stos
ret
cltd
mov
js
mov
jb
pushf
mov
mov
in
lods
sarb
jle
mov
mov
pop
dec
fildll
stos
imul
aad
jmp
testb
mov
xor
mov
movsl
and
stc
das
adc
popa
jne
xchg
lock
push
adc
sub
adc
xchg
jno
sahf
cmp
nop
push
mov
ficoms
fistpl
xchg
sbb
hlt
sub
cmp
ja
xchg
stc
loope
cwtl
pop
movsb
bound
pop
es
cmp
sub
sbbl
mov
xchg
pop
mov
das
cltd
dec
or
mov
mov
xchg
stc
mov
rcl
sub
add
hlt
mov
add
lret
mov
mov
xor
sbb
lock
sti
cmp
lret
pushf
mov
and
mov
jno
pushw
js
imul
fsub
lahf
hlt
and
and
inc
pop
xchg
movsl
and
push
aad
loopne
pusha
sub
or
jmp
push
sbb
ret
lds
in
mov
call
in
jo
pop
imul
mov
out
fcom
xchg
push
out
insl
sub
xchg
loopne
jb
push
inc
insb
pop
sbb
mov
cli
xchg
or
sub
pop
push
sbb
push
cmp
pop
inc
add
inc
je
add
out
inc
aam
inc
add
fwait
jns
xchg
addb
mov
das
cvtps2pi
or
sub
sub
mov
js
insb
or
mov
out
inc
test
jne
les
shll
push
mov
mov
mov
leave
mov
push
das
inc
lods
insl
dec
cltd
pop
pusha
cmp
out
std
enter
stc
mov
adc
ret
mov
jne
out
jb
push
call
movsb
ljmp
push
fcmovbe
push
pusha
push
sub
mov
sub
jnp
jmp
cmc
mov
aaa
shrl
addr16
das
sahf
in
mov
shll
adc
jns
aam
push
outsb
pop
rcll
shrb
xorb
outsl
dec
int
nop
inc
ficoms
ljmp
insl
insb
idiv
outsl
call
or
pop
or
in
movb
dec
adc
inc
ja
pop
mov
add
incl
add
push
inc
inc
ds
mov
pop
dec
lret
pop
ror
mov
and
dec
mov
mov
jp
push
lds
enter
repz
pop
xor
add
mov
mov
insl
lahf
scas
sbb
in
mov
cmp
lods
push
push
inc
mov
cmp
js
ffreep
jo
out
dec
int3
and
xor
loop
out
insl
and
xor
and
pop
and
mov
cmp
out
mov
in
stos
loope
mov
jne
mov
out
adc
cmp
scas
jl
xchg
push
mov
push
cmpsb
push
xchg
mov
test
mov
in
movsl
loopne
cmp
out
int
dec
pop
push
pop
ss
push
pop
sbb
xchg
jp
or
cmp
es
in
push
push
pop
xchg
js
mov
mov
mov
jo
jg
rolb
bswap
es
dec
mov
shll
dec
or
mov
leave
lret
or
xchg
mov
fwait
mov
xor
xor
fbstp
xor
out
jb
push
push
lcall
cld
xchg
fmuls
xchg
jmp
pop
or
sub
push
sbb
jmp
jns
mov
and
es
mov
fs
and
inc
add
mov
mov
and
orb
fstpl
das
outsb
sub
and
in
sbb
sub
test
ds
cmpsl
xrelease
dec
jp
pop
xchg
jae
popf
pop
outsl
into
xchg
push
push
mov
xchg
out
rclb
xor
nop
push
mov
ficoms
loope
pop
sub
punpckhwd
fsqrt
inc
or
add
or
push
mov
fs
cmp
pusha
popf
sub
test
xor
inc
inc
mov
mov
or
por
movsl
popf
dec
dec
or
leave
mov
stos
stos
dec
dec
or
inc
xor
cmp
jno
hlt
push
inc
jae
hlt
adc
shll
rorl
or
stos
jl
adc
cmp
mov
jl
lcall
notl
xor
in
cmp
adc
out
jecxz
and
jmp
mov
scas
fistpll
pusha
jns
dec
push
out
in
testl
or
test
mov
mov
popa
sub
data16
loopne
ror
nop
loope
sub
shrb
shl
dec
adc
scas
pop
xchg
sbbb
call
fstps
sbb
mov
push
fcomps
inc
xor
fldl
push
test
in
lret
inc
cmpsb
cmp
mov
mov
std
add
shrb
add
mov
push
lret
hlt
mov
int
enter
movb
mov
inc
rep
add
xor
insl
xor
pop
int3
stc
jb
outsl
xor
jo
mov
jle
mov
jnp
mov
jl
stc
add
int3
push
aaa
jp
mov
dec
dec
mov
or
mov
cmpsb
xchg
cmpsb
mov
daa
in
fwait
insl
mov
mov
lahf
cmc
in
mov
add
jns
outsb
in
mov
in
mov
mov
jl
movsb
out
cmpsl
in
out
pop
sub
push
inc
gs
xchg
rorb
mov
int
mov
ljmp
nop
das
fdivrp
jle
rcr
sahf
pop
sub
insb
imul
rcrl
ficoml
inc
xchg
mov
pop
movsl
aad
sub
movb
shlb
mov
and
mov
inc
xchg
into
mov
loop
dec
or
or
xchg
fld
push
adc
lds
rol
jmp
jbe
xor
jge
xor
xor
lock
xor
mov
pop
fucom
cli
mov
aaa
xchg
pop
outsb
mov
cli
mov
jne
mov
add
and
movsb
sti
xchg
mov
and
aad
sarl
sub
cmpsb
stos
imul
mov
insb
sub
test
sub
call
cmp
add
push
adc
mov
push
shlb
and
jbe
rclb
mov
push
pop
pop
sbb
jl
pop
sbb
fcomps
sbb
xchg
jno
into
cwtl
pop
addr16
test
inc
add
es
sub
test
test
inc
sub
icebp
mov
ds
inc
mov
mov
pop
rorl
dec
outsl
loopne
jp
xlat
inc
adc
int3
xchg
int
test
repz
add
in
dec
xor
int3
sbb
loop
mov
ja
dec
adc
test
popf
scas
jnp
cmp
pop
notb
adc
divl
mov
daa
arpl
jae
mov
fs
mov
jbe
mov
push
jle
jp
lock
sub
sub
jne
xor
push
lret
test
outsl
sbb
adc
jle
adc
aam
push
mov
push
adc
icebp
ret
push
xlat
mov
jo
out
pop
push
sbb
cltd
xchg
lcall
pop
inc
add
rclb
std
dec
scas
addl
push
roll
inc
sbb
pop
dec
incl
rolb
pop
jge
loopne
pop
or
fsubrs
in
out
dec
mov
dec
pop
or
dec
or
xchg
rep
cmp
lds
and
mov
mov
rclb
shlb
outsl
mov
push
icebp
enter
and
or
inc
or
mov
mov
arpl
pushf
mov
fmuls
cmp
add
adc
and
inc
outsb
add
xchg
repz
outsb
jmp
push
out
push
insb
sbb
imul
cmpsl
cmpsl
in
rorl
outsl
es
or
push
xor
cli
je
rclb
push
adc
nop
push
scas
pushf
ja
ss
sahf
jnp
lcall
lret
pop
sbb
rol
sarl
jno
gs
mov
sbb
adcl
sbbl
mov
shrb
ds
mov
fmuls
and
or
jg
dec
or
xchg
inc
int
mov
aaa
xchg
cmpsb
add
inc
mov
iret
and
add
loopne
push
outsl
xor
and
repnz
insl
and
jae
inc
pop
push
or
cld
mov
ret
jp
in
lcall
cmc
push
loopne
inc
imul
mov
mov
rol
fistps
iret
mov
cmp
in
imul
jmp
lea
mov
test
iret
loop
pop
repz
adc
push
or
jo
push
test
aas
in
fsts
dec
shlb
ja
imul
rcll
in
lods
sub
lcall
xlat
fcomps
loope
mov
inc
add
dec
pop
mov
fiadds
add
outsb
pop
add
rorb
into
rdmsr
sti
cs
nop
pushf
or
movb
clc
push
xchg
mov
mov
jns
xor
repnz
stc
sahf
mov
xor
adc
dec
call
int
jo
lcall
aaa
movsb
or
jl
mov
add
out
mov
ss
daa
daa
out
cmpsb
in
jecxz
arpl
loope
add
mov
js
loopne
cmp
test
push
or
mov
add
push
je
repnz
sti
xchg
add
movsb
aam
data16
xchg
adc
test
insb
cmp
cmpsb
dec
pop
sub
push
sahf
fistpl
lods
sub
cmp
aam
xchg
push
mov
bound
pop
adc
out
aam
int
inc
mov
das
cmp
mov
int3
mov
pop
lret
pop
xor
lea
leave
xchg
inc
sub
sbb
jp
xchg
cmp
aaa
xchg
dec
jae
xor
sub
int3
out
repnz
aas
aam
int3
dec
xchg
in
in
lods
mov
pop
sarl
mov
jmp
adc
scas
and
bound
je
subb
dec
jae
outsl
pop
imul
sub
cmp
lods
ss
inc
cld
lea
fnstsw
ret
sub
cld
fsubrl
lret
or
fucomp
stos
push
add
repnz
inc
shlb
xorb
push
je
push
jae
mov
sbb
sbb
dec
ljmp
fmull
pop
mov
fs
xchg
jno
push
cwtl
pop
shll
mov
nop
inc
sbbl
addb
jne
call
insw
sbb
lret
mov
int3
dec
aad
add
clc
movb
push
test
xorb
aad
xlat
mov
std
mov
inc
mov
pop
adc
mov
cli
add
popf
sbb
cmp
mov
mov
ja
clc
movsb
ret
mov
clc
scas
dec
mov
jecxz
cmp
add
add
pop
jl
andb
fstpl
outsb
cmp
and
sub
add
cmp
lds
sub
cltd
push
repnz
mov
push
adc
pop
out
mov
xchg
push
adc
push
push
mov
dec
stos
popa
rclb
dec
pop
stos
push
adc
sub
outsb
data16
or
and
lret
pop
sarl
mov
sub
fcoml
sbb
push
daa
test
lcall
sbb
fdiv
mov
test
jo
or
addb
jle
or
inc
adc
mov
aaa
aaa
dec
jno
stos
inc
mov
push
ja
xor
jge
rolb
jle
stos
inc
mov
or
ja
ret
or
push
xchg
sbb
push
cmp
lcall
roll
in
mov
sub
push
ret
mov
and
and
adc
inc
jne
push
fucom
jge
xor
imul
in
dec
shlb
outsl
imul
sub
push
rorl
mov
shrl
sbb
rcll
lahf
iret
mov
dec
shrb
mov
out
pop
fisubrs
lods
cmp
repz
sub
sbb
lcall
sarl
fld
les
fildl
and
stc
mov
jg
fnsave
scas
push
dec
or
mov
jge
lret
mov
sub
sub
aad
dec
or
pop
inc
addb
ret
lods
adc
inc
dec
mov
fmuls
je
icebp
mov
push
enter
push
dec
adc
int3
jo
pop
stos
jl
sub
mov
cmp
mov
icebp
mov
pop
or
cwtl
mov
mov
add
sahf
mov
and
insl
push
mov
pusha
mov
pop
das
jnp
push
lret
lock
sub
cmp
pushw
test
mov
mov
xchg
testl
xchg
jmp
sub
fisubrs
sti
mov
mov
xchg
cwtl
sahf
aam
imulb
sbb
cmc
pop
mov
sbb
adc
pop
insl
inc
mov
nop
and
in
addl
fwait
jns
lcall
ds
lds
movsl
xchg
pop
int3
mov
testb
dec
mov
xchg
push
adc
movb
test
rclb
or
xor
mov
icebp
mov
popa
imull
loope
fstpl
jno
jl
mov
mov
mov
das
aad
ja
jnp
clc
js
jae
jecxz
sub
and
pop
pop
xor
and
add
enter
push
jle
pop
stos
mov
jnp
jmp
sbb
jmp
xchg
push
mov
in
mov
adc
push
adc
pusha
push
pusha
popa
ljmp
addl
or
push
sbb
ds
pop
pop
sbb
cmpb
dec
sbb
xlat
push
mov
inc
pop
pop
push
inc
loop
mov
adc
shl
ds
in
or
pop
adc
fidivrs
test
in
test
lret
dec
or
in
or
mov
jae
imul
mov
xchg
inc
repz
xchg
sbb
jge
mov
mov
cs
fdivrs
jo
popf
cmp
mov
pop
adc
cmp
cmp
popf
mov
fnstcw
ss
loope
negl
adc
xor
mov
shlb
push
lods
fnstsw
outsb
mov
dec
pop
sub
in
jecxz
cmc
orl
clc
sub
mov
inc
out
aad
pop
cmc
and
mov
js
and
adc
sbbl
jno
and
fstl
stos
mov
stc
mov
jmp
sub
sbb
cltd
aam
out
and
fidivl
in
loopne
test
push
inc
addl
inc
cmp
jg
push
scas
fcmovb
inc
insl
xor
mov
iret
nop
push
pop
int3
int3
xor
and
test
or
dec
inc
xor
inc
aaa
mov
scas
les
jne
add
incb
jb
xchg
cmpsl
push
push
add
jl
in
lret
fstl
push
fld
mov
push
fucomi
lea
ja
clc
pop
push
add
jne
adc
mov
adc
in
and
popa
scas
mov
inc
pop
movsl
int
arpl
fstpl
push
cmpsl
stos
imul
mov
sub
and
in
mov
sub
jmp
shlb
xchg
push
aam
xchg
push
jmp
mov
push
sbb
lods
sti
mov
hlt
push
push
adc
lock
dec
sbb
fxch
sbb
xchg
lcall
inc
inc
addr16
xchg
sub
jne
fldl
bound
cmp
test
add
data16
addb
push
mov
rcll
xlat
fisttpl
test
sub
jecxz
cwtl
or
inc
rorl
jo
xor
lea
xchg
aam
scas
les
xor
insl
add
rclb
cmc
in
dec
jo
push
jnp
enter
cmp
mov
imul
bnd
scas
inc
xor
test
out
jb
xchg
movsl
mov
and
push
das
jb
cmp
enter
push
int
sahf
push
fidivrs
inc
int3
ljmp
fnstsw
stos
stos
enter
call
arpl
call
rcll
adc
mov
repz
xchg
push
adc
adc
inc
fisttpll
jmp
sahf
mov
pop
xchg
cwtl
cmp
fstps
cltd
pop
int3
mov
jno
test
test
out
pop
xchg
orl
adc
add
add
or
dec
push
outsl
pop
mov
pusha
les
mov
jbe
ret
sub
lds
dec
or
push
dec
push
cmp
mov
icebp
xorb
push
inc
repz
aad
xor
iret
arpl
sahf
jl
dec
pop
mov
insl
dec
mov
cmp
dec
mov
test
divl
scas
les
pushf
popa
ss
and
mov
sbbb
andl
pusha
push
sub
stos
sti
sub
jbe
sbb
in
pop
jmp
imul
test
arpl
and
loopne
aad
rcll
sbb
aad
jnp
seto
lea
pop
inc
push
sbb
fldl2e
cwtl
jmp
int
jnp
ficompl
xlat
push
push
sbb
add
push
movb
add
dec
inc
je
xchg
pop
std
dec
mov
dec
and
cmpsl
out
mov
int
cmp
int3
mov
dec
mov
jbe
mov
dec
or
jnp
xor
mov
lret
mov
xchg
mov
sbb
mov
dec
fdivrl
jl
in
mov
in
mov
jp
cld
mov
mov
hlt
mov
in
divl
mov
daa
mov
pop
ret
fidivrl
cli
jp
les
popa
and
loopne
mov
aaa
jl
ljmp
cltd
jnp
stc
imul
pop
gs
pop
push
out
cmp
cmp
shll
jecxz
mov
dec
push
or
pusha
jle
xchg
rclb
push
xor
cmp
sbb
cmp
lock
lods
lcall
xor
inc
hlt
ja
sbb
out
add
pop
push
cwtl
add
int3
push
lret
adcb
cli
push
inc
mov
ret
mov
jg
lock
cmp
lcall
frstor
sub
mov
or
rcrb
or
mov
nop
jmp
add
xchg
inc
iret
test
push
ret
int
enter
int
shll
inc
pop
and
insl
mov
sub
add
cmp
and
mov
sub
pop
leave
daa
out
cmpsb
aam
xor
loopne
fs
xor
and
inc
ljmp
inc
shrb
jae
stos
jge
sub
pop
xor
xor
sub
xchg
in
scas
pop
adc
xchg
dec
xor
push
ljmp
or
iret
mov
xlat
push
sahf
ficomps
fdivrp
dec
sbb
pushf
cmp
lds
pop
int3
jmp
aad
test
mul
and
lea
test
rorl
inc
fnstenv
bound
dec
mov
jge
or
gs
sahf
or
mov
stc
cmp
sub
stos
gs
lds
cld
jl
mov
shlb
xchg
aam
popf
push
lock
fcmovbe
jo
insl
cwtl
dec
js
jmp
cld
cmp
dec
jns
cmp
add
cmp
inc
and
cmpsb
lds
jg
and
ds
frstor
mov
pop
lods
test
insl
fisttpll
jecxz
out
in
outsb
movsb
mov
jl
in
or
cmp
sub
pusha
mov
mov
ret
gs
or
out
movsl
sub
add
mov
lods
nop
sahf
imull
pop
fidivrs
sbb
fwait
mov
test
stos
repz
dec
cmp
test
xchg
push
loope
mov
add
pop
roll
mov
loope
lcall
inc
sub
std
jge
inc
dec
cmp
dec
or
or
aaa
pop
mov
xchg
test
aaa
cmp
and
jae
xchg
xchg
inc
icebp
mov
mov
lret
test
xchg
mov
lret
jle
xchg
mov
jae
lods
jp
dec
mull
das
or
js
mov
ss
popf
add
enter
in
inc
add
and
mov
cmp
pop
sub
pop
test
int3
or
sub
and
sub
push
cmpsl
aad
divl
or
xor
xchg
rcl
nop
loope
mov
pop
push
adc
outsb
pushf
mov
out
fisttpll
negl
lea
fisubrs
sbb
mov
and
inc
pop
add
xchg
push
sbb
xor
push
jg
xchg
pop
xor
add
pop
rcll
into
adc
pushf
fwait
mov
cltd
inc
or
es
lret
dec
or
pop
dec
or
mov
jae
pop
mov
push
in
add
lret
icebp
push
jbe
sub
hlt
shl
xor
jp
dec
add
ja
cmp
or
repz
sub
shlb
imul
mov
jp
das
insb
call
stos
bound
scas
bound
in
arpl
ret
sub
pushf
mov
sbb
pusha
or
fstpl
lahf
imul
fldenv
dec
rorb
stos
stos
push
mov
in
push
and
leave
je
or
fcoms
rcl
xchg
cs
test
nop
in
cmp
mov
inc
paddsb
repz
cltd
sbb
cmp
icebp
sbb
fdiv
dec
add
ret
dec
fst
leave
aam
les
or
repnz
or
mov
inc
ds
pop
jge
jg
into
dec
cltd
pop
mov
sub
or
push
sbb
test
xchg
hlt
mov
push
add
jno
xchg
inc
xor
inc
jecxz
sub
mov
ret
out
cmp
std
jo
jp
lock
popf
dec
push
jnp
xchg
fwait
dec
stc
aam
pop
push
cli
cmpsb
adc
or
mov
data16
data16
dec
je
jg
sbb
mov
and
pusha
push
out
popf
pop
maskmovq
imull
sub
imul
mov
fnstcw
or
mov
lock
movsb
dec
jp
adc
ljmp
and
sahf
push
adc
stos
cmp
lret
lods
test
outsb
fdivrp
dec
jnp
fistl
sbb
jp
cmc
stos
xchg
push
xchg
fsts
mov
mov
push
inc
hlt
jo
imul
ret
add
push
sbbb
mov
jns
mov
das
sbb
pusha
dec
or
inc
and
movl
lds
xchg
divl
or
ret
xor
jge
dec
fdivl
cs
dec
push
cmp
leave
or
dec
push
leave
stc
pop
or
ja
mov
cmp
jae
call
jmp
dec
je
jns
fs
sahf
pop
mov
mov
pop
add
loopne
mov
adc
sub
cmovae
imul
out
xor
push
fs
push
and
das
and
push
mov
cs
repz
push
push
outsb
jge
mov
mov
mov
sub
fidivl
cmp
fcomps
xchg
pop
dec
mov
stos
sahf
push
int
lret
xchg
add
dec
push
mov
aad
cmp
std
mov
dec
or
xorb
pop
das
mov
cmp
add
cwtl
enter
xchg
test
in
jb
lock
inc
es
add
stc
enter
scas
outsl
fs
int
cmp
mov
or
mov
cmp
inc
mov
and
lcall
jecxz
test
and
cmp
xchg
jle
clc
mov
and
cmpb
and
sub
in
xchg
jmp
cmpsl
clc
ljmp
mov
push
daa
pop
cs
mov
insb
outsb
sbb
jecxz
xchg
icebp
or
sbb
stos
jge
clc
je
imul
call
add
in
subb
xlat
push
and
xlat
or
gs
push
xchg
pop
inc
jle
push
sbbl
and
mov
and
std
push
mull
and
adc
or
inc
ret
mov
jno
loope
fmuls
enter
inc
aam
push
fadds
pop
popa
into
movsl
dec
dec
pop
mov
es
or
xor
push
sahf
std
lods
insl
les
xchg
jge
mov
sub
cmpsb
or
lcall
adc
aaa
jne
fucomp
pop
ret
arpl
rcll
jb
add
flds
outsl
and
sub
lret
mov
mov
ficoms
mov
mov
xor
clc
sub
add
inc
push
push
add
cmc
dec
repz
adc
call
scas
ret
loopne
inc
mov
nop
push
push
mov
pop
adc
pop
cltd
sbbl
movsl
jae
ljmp
push
sbb
push
sbb
movb
jecxz
test
add
ret
add
jb
jg
sar
pop
cs
ss
mov
dec
or
cmp
pop
mov
inc
or
ret
out
ss
push
inc
mov
pop
adc
hlt
das
sarb
and
xor
mov
nop
icebp
fists
daa
ficomps
xor
mov
adc
or
fisubrl
add
cli
mov
mov
mov
mulb
push
push
pusha
lods
std
sahf
pop
mov
cmp
jp
ret
loop
loopne
int3
stos
das
aad
mov
push
inc
sbb
aas
scas
outsb
movsl
insl
dec
and
mov
sub
add
ja
sub
cltd
push
mov
xchg
inc
subl
shrl
enter
outsl
rcrb
sbb
and
dec
jle
sub
mov
push
sahf
push
adc
sub
add
xor
xchg
clc
cld
mov
insl
add
es
testb
push
mov
cmpb
pop
getsec
pop
mov
ret
add
lods
dec
bound
jo
int3
js
jae
fmull
cmpsl
pop
gs
jecxz
fmuls
lret
xchg
pushf
inc
sub
fmuls
adc
mov
and
push
cs
jmp
cmp
outsl
mov
push
int
lods
insl
pop
out
mov
enter
leave
sbb
bnd
stc
scas
lahf
sbb
cmp
movsl
add
cli
pop
ss
cmc
cmp
fsub
jbe
jecxz
push
cli
xor
mov
adc
in
dec
push
mov
imul
pusha
mov
mov
push
in
cmp
sahf
lds
adc
fstp
sub
add
push
adc
pop
push
jmp
scas
mov
adc
nop
mov
nop
inc
fs
pop
sbb
pop
mov
jmp
push
sbb
arpl
cmp
mov
mov
aad
add
mov
iret
cld
loope
add
movsb
xor
xchg
rorb
lods
cmpsb
pop
int3
jmp
imul
xor
pushf
xlat
push
and
pusha
jnp
repz
xor
ret
inc
repnz
xor
outsl
mov
mov
notl
cmp
stc
mov
inc
jp
divl
js
mov
jne
cwtl
push
addr16
mov
push
fsub
add
dec
inc
xor
and
rorl
stos
stos
imul
data16
or
aaa
out
or
mul
xchg
out
add
jle
rcll
xchg
push
adc
push
xchg
mov
adc
jnp
or
lea
ret
inc
jmp
out
fcompl
pop
int3
ficompl
sbb
xchg
mov
daa
push
xchg
push
fsubrl
add
mov
mov
add
pop
sbb
pop
faddl
fwait
pop
cmovnp
pop
mov
sub
lret
stos
mov
or
dec
scas
mov
xchg
push
repz
into
or
out
int
stos
leave
sub
int3
xchg
int
in
lods
sahf
xor
decb
xchg
or
jns
mov
or
orl
loop
add
fidivs
arpl
sbb
and
mov
pop
int
pop
and
jno
mov
and
hlt
push
orb
in
stos
imul
movsb
movsb
sub
dec
mov
addr16
push
cmp
pop
xchg
push
test
push
adc
push
adc
dec
dec
sahf
push
nop
push
insl
lret
shl
mov
ret
adc
aad
pop
xlat
cmp
push
sbb
mov
push
and
inc
inc
add
inc
addl
jg
popf
add
sbb
ds
std
or
fisttpl
sti
pop
cwtl
test
and
lods
ret
mov
add
xchg
inc
les
dec
jbe
push
loopne
les
mov
push
fimuls
mov
aas
push
jg
push
adc
jnp
into
bswap
cmp
ja
jns
mov
mov
and
add
jne
lods
sahf
mov
scas
pop
punpckhwd
xor
jl
fbld
loopne
jmp
out
cmp
imul
inc
jmp
pop
inc
out
sahf
jae
sub
scas
mov
adc
in
popa
aam
sbb
push
pushf
pushf
mov
adc
sbb
xlat
scas
test
push
push
pop
pop
addb
out
mov
andb
in
pop
ds
pop
cmp
adc
rolb
rcrl
xchg
nop
add
or
sbb
jge
popl
sub
fisttps
dec
aad
xor
mov
adc
aam
lods
push
inc
aaa
mulb
xor
jne
jno
mov
xor
mov
test
lods
cld
mov
dec
mov
cmc
jl
cmp
pop
sbb
xchg
pop
dec
fstps
mov
repnz
add
fnstenv
mov
and
jmp
and
rorl
icebp
les
pop
das
jecxz
pushf
sub
retw
jl
mov
imul
cwtl
xor
gs
shrb
dec
and
pop
mov
imul
xchg
push
sub
fisubs
shr
inc
sbb
push
sbb
mov
fdivrl
push
in
and
sbb
xor
mov
in
mov
js
incb
fs
and
mov
xor
push
aas
xor
repz
orb
daa
sbb
pop
sub
insb
pop
dec
mov
call
mov
test
jge
mov
loopne
mov
xchg
movsb
adc
call
in
inc
cmp
outsl
push
mov
push
call
jle
jle
aad
mov
sbb
mov
push
pop
idivl
clc
mov
sti
loope
adc
arpl
jle
loope
loop
sbb
fistps
std
ficompl
aas
in
ss
arpl
outsb
sub
inc
imul
or
jl
push
adc
pop
cmpsl
sub
xor
gs
lahf
dec
das
fsts
pop
lods
jae
rclb
iret
imul
notl
pop
pop
fisubs
mov
ja
xor
push
pop
mov
mov
cmpsb
cmp
popa
and
xchg
adcl
push
mov
xor
xchg
xor
and
mov
lcall
fmull
or
leave
leave
mov
fcmovne
cmp
or
cmpsl
inc
or
mov
push
add
cld
jbe
mov
rorb
or
cmp
jl
fildl
arpl
test
out
cld
push
scas
insl
push
dec
mov
and
add
ja
call
cmc
mov
and
xchg
in
xchg
pop
mov
lods
pop
adc
std
mov
insl
pop
aas
popf
subb
inc
out
sub
gs
cmp
xor
frstor
push
movsl
gs
imul
inc
push
push
test
rcll
in
push
dec
in
mov
mov
and
push
sub
xchg
sbb
imul
inc
frstor
arpl
cmp
adcb
iret
pop
push
cmp
inc
inc
cltd
andl
rcll
and
inc
fsubr
outsb
and
mov
xchg
mov
pushf
int3
cwtl
pop
das
aas
mov
or
or
jo
xchg
push
mov
xchg
in
xor
sub
xor
xor
jge
xor
xor
jne
mov
pop
and
lods
mov
jnp
mov
xchg
cmp
cmp
xchg
and
mov
mov
mov
inc
das
daa
aas
hlt
arpl
and
loope
mov
bound
clc
push
in
push
push
xor
aad
scas
mov
loop
imul
insb
pop
movsb
add
test
xchg
xor
mov
push
popa
loopne
faddp
rcll
sub
mov
rcl
mov
int
rcr
stos
sahf
in
fcmovu
adc
out
cmp
pop
sbb
inc
or
xlat
push
cmp
fcomps
cmp
and
inc
xchg
lahf
ret
add
adcb
fdivp
arpl
adc
mov
xor
pop
cmc
jge
into
or
or
mov
pushf
enter
mov
jns
rolb
or
subl
int
stos
test
dec
aas
sub
jge
loop
jb
adc
jo
mov
dec
fldt
hlt
sbb
aam
sbb
rolb
mov
cmp
fs
test
repnz
cmpsb
xchg
in
fdivl
fs
sahf
mov
mov
and
std
push
sub
inc
data16
mov
dec
inc
jmp
in
lods
lret
test
sub
ds
addr16
pop
lfs
in
bound
jp
rcll
adc
repz
xchg
push
mov
rclb
push
das
dec
sub
adc
sbb
imul
fstps
fimull
sub
cli
push
aad
or
rcll
es
mov
mov
push
xor
rcrb
mov
pop
jns
or
cltd
xor
add
add
stos
sbb
push
lds
add
mov
xor
movsl
pop
std
int3
int
and
inc
xlat
into
aas
aas
jo
cmp
rcr
xchg
pop
sbb
jle
cli
in
cmp
mov
cmp
mov
aaa
fbstp
pop
cs
add
mov
into
lods
mov
xchg
dec
popl
imul
out
imul
mov
pop
add
xchg
fmuls
es
xor
shlb
in
aam
pop
adc
popf
xchg
dec
push
pushl
pushf
fdivs
dec
popf
xchg
pop
popf
int
push
and
pop
mov
pop
xchg
stc
call
pop
pop
xchg
sbb
mov
push
aad
push
pusha
push
sbb
movsl
push
jge
push
andl
pushf
push
data16
mov
add
dec
fimuls
ss
inc
int3
fstpl
repnz
fists
popa
pop
pop
or
push
xchg
mov
xor
mov
icebp
hlt
stos
jge
cmp
sub
mov
push
icebp
leave
mov
imul
cmp
mov
sti
icebp
aaa
cmp
mov
or
jecxz
ja
psubb
pop
shll
inc
jecxz
arpl
movsb
pop
and
pusha
popa
scas
mov
inc
out
mov
xor
pop
mov
inc
dec
ljmp
test
sub
jbe
xor
ja
rcll
push
mov
sub
fildll
adc
sbb
sahf
pop
std
mov
pop
pop
sbb
fnstenv
cmpsl
xlat
je
fldl
aas
add
pop
push
adc
xchg
cmp
ret
testb
mov
add
pusha
roll
pop
or
loope
inc
dec
inc
xchg
inc
cmp
sbb
int3
dec
xchg
in
dec
popl
or
orb
bound
nop
add
movsb
mov
popa
xor
rcl
sub
fisubl
xor
jbe
mov
fimuls
incb
cmp
jle
adc
sbb
jns
mov
sbb
std
cmc
je
adc
imull
xchg
xchg
mov
gs
loope
xchg
adc
sbb
mov
pop
jbe
add
je
je
fidivrs
and
jbe
cmpsl
out
or
sar
sub
xor
mov
and
fstps
shr
es
imul
lahf
sub
or
mov
popf
int
rcr
push
sbb
std
lods
mov
cmp
mov
mov
clc
lret
pop
push
bound
xor
jbe
lahf
mov
lods
add
fdiv
sarl
add
int3
push
subb
rcrb
or
mov
mov
jbe
fs
lock
add
adc
out
repz
repz
adc
addr16
cltd
push
inc
repnz
sti
add
jge
aaa
cmp
or
mov
pop
jmp
cld
ja
push
imul
jne
call
pop
or
pop
inc
and
icebp
jno
inc
pop
pop
lock
push
xchg
pop
shl
aad
mov
das
adc
fstpl
stos
lret
sub
and
sub
aaa
movsb
mov
loop
xor
in
adc
jb
and
xchg
push
adc
push
push
lahf
test
pop
iret
insb
jg
push
jnp
and
imul
sbb
dec
sbb
adc
mov
lret
jns
xchg
inc
test
fsubr
jne
pop
jbe
pop
sub
aam
idivb
test
pop
sbb
fnsave
outsl
cwtl
ljmp
std
fcmovu
jb
aam
out
int
loope
andl
fadds
inc
imul
mov
push
inc
mov
jne
adc
xor
jae
xor
inc
sub
push
orb
jg
mov
mov
jb
mov
sub
cmp
and
or
repz
mov
aaa
in
imul
popaw
and
in
out
repnz
inc
icebp
fisubs
lcall
in
cwtl
mov
sub
xchg
jne
xor
out
add
mov
sub
or
aam
xor
xor
mov
fisubl
xchg
pop
cmp
stc
mov
sub
cmp
ljmp
ds
testb
inc
add
aas
mov
clc
add
add
arpl
sub
pop
jg
mov
imul
mov
add
mov
repz
xchg
int
je
jmp
mov
rcl
push
and
mov
dec
mov
mov
adc
xor
adc
jl
test
aas
dec
mov
test
int3
stc
sub
div
ds
inc
hlt
lds
es
add
xor
mov
sbb
popa
std
sub
xor
cmp
test
pop
aas
pop
xor
in
les
cmp
int
push
pusha
jbe
sub
and
int
pop
repz
and
sbb
int
push
adc
add
insl
adc
cld
ficoml
imul
sbb
push
mov
fnstcw
adc
xchg
mov
add
inc
mov
std
icebp
dec
add
test
iret
add
icebp
xor
subb
pop
pop
cltd
std
cmp
int3
inc
das
lret
mov
inc
and
mov
insb
inc
push
jge
jl
push
insb
inc
cmpsb
stos
je
icebp
add
dec
push
push
xor
outsl
lock
cmp
popf
nop
iret
dec
les
jnp
jl
cmp
test
out
mov
sbbb
mov
jne
insb
xor
insb
popf
xchg
mov
and
popa
cmpsl
pushf
push
fistps
inc
inc
adc
lea
jecxz
jecxz
lret
ja
out
adc
push
cmpsl
addr16
rcrl
std
pop
mov
xchg
roll
pushf
out
dec
loopne
popa
push
xor
jb
repnz
xor
xchg
jno
scas
lcall
sbb
pop
sbb
xor
test
add
ret
aaa
ret
fildl
addl
or
inc
ss
jge
mov
dec
addb
ret
dec
xor
dec
pop
data16
mov
mov
xor
and
cmp
daa
cmpsb
je
jo
jo
mov
jo
lret
dec
jne
and
sbb
and
hlt
cmp
lock
lock
mov
sti
xor
jns
xchg
dec
mov
cmp
icebp
stos
cmp
aad
and
js
js
pop
xor
test
adc
mov
mov
pop
add
xlat
pusha
push
setp
iret
pop
stc
xchg
js
mov
mov
fistpl
xchg
jmp
test
das
loope
lds
xchg
rcll
call
xor
push
int
nop
sarl
test
std
fisubl
jnp
sbb
movsb
mov
mov
aad
jb
pop
lock
inc
addl
sbb
fcomp
mov
stos
inc
fs
xchg
jl
cwtl
mov
dec
or
imul
xlat
dec
xchg
scas
inc
inc
or
push
pop
test
daa
xor
repz
scas
or
cmp
or
decb
outsl
mov
mov
out
lods
insl
shl
mov
cmp
inc
xlat
popf
sahf
cmp
iret
dec
mov
ja
push
test
cmp
jae
add
cmpsb
jecxz
arpl
test
popa
and
lahf
pop
ret
pusha
push
into
pop
sub
dec
push
out
sub
ja
push
fsubr
insb
cmpsl
dec
cmp
out
xor
aad
divl
lock
nop
xchg
push
mov
adcl
mov
rclb
repnz
dec
sub
adc
fcmovnu
adc
mov
jle
sbb
xchg
pop
in
lods
lds
xlat
jns
or
xchg
mov
or
movsl
outsb
adc
jecxz
ret
pop
fwait
pop
bound
push
inc
xchg
push
std
or
lret
insl
lcall
or
cmp
ljmp
xchg
leave
mov
push
rcll
divb
xor
icebp
mov
and
shll
repnz
xor
cmp
cmp
aad
sti
mov
add
test
mov
cli
orl
inc
shlb
insb
mov
and
mov
rcl
mov
adc
out
scas
push
push
adc
imul
sub
cmpsl
lods
cwtl
dec
sbb
movsl
fcompl
in
sub
mov
push
iret
push
push
adc
pop
push
insb
insl
out
add
mov
lock
mov
int3
jg
xlat
sbb
jmp
movsl
push
cmpsl
stos
insb
pop
movb
aad
inc
inc
add
arpl
inc
ret
mov
jae
ds
lcall
jle
mov
and
sub
or
xchg
rcl
xchg
push
push
data16
sbb
mov
lock
xor
push
adc
push
repnz
icebp
lods
outsl
xor
lock
jo
mov
dec
pop
outsb
pop
stc
sti
loope
mov
stc
add
divl
ja
movsb
fs
xchg
sub
out
and
inc
sbb
in
inc
aam
loopne
popa
mov
lahf
pop
das
mov
gs
jp
cmp
jmp
aas
lds
pop
loopne
bound
hlt
fisubl
test
loope
inc
adc
dec
pop
inc
adc
daa
aam
push
adc
shrb
dec
adc
lret
int3
lea
mov
add
fwait
mov
ds
cltd
push
dec
xchg
push
pop
push
in
pop
data16
das
roll
mov
jge
adc
bswap
adc
lret
outsb
adc
sbb
xchg
outsl
out
popa
or
lods
ds
aas
sub
arpl
sub
cs
inc
inc
loop
xor
adc
jmp
les
repnz
fsts
mov
sub
push
pop
lods
lods
xor
mov
popa
jp
cld
test
fildl
cmp
in
stos
divb
outsl
cmc
mov
sbb
inc
add
and
mov
fs
xor
add
bound
fildll
or
in
pusha
pusha
mov
scas
outsb
stc
cmp
sub
call
sbb
out
stos
sar
xor
mov
jecxz
and
mov
pop
rclb
rcll
mov
jmp
mov
or
lcall
fistpl
sbb
cli
inc
or
xlat
xchg
lcall
push
pusha
adc
xchg
test
ret
pop
add
or
lret
jmp
or
push
daa
xchg
mov
dec
or
cs
loope
cli
or
in
xor
aaa
idivb
mov
add
es
scas
pop
movb
aaa
push
sbb
insl
insl
arpl
xor
jnp
mov
sbb
mov
and
or
insl
clc
pop
ds
jne
mov
mov
sub
fnsave
popa
incl
xchg
add
fcompl
cmp
cmp
dec
scas
outsl
sub
rclb
mov
lods
insb
sub
sbb
mov
shlb
repnz
movsl
gs
pop
subl
bound
xchg
push
adc
sub
nop
rclb
push
mov
fisubs
fdivr
dec
sbb
ficoml
push
test
push
push
movb
pop
roll
mov
inc
movsl
add
fstpl
sub
jge
cld
into
inc
inc
sbb
mov
adc
sbb
inc
aam
mov
inc
aaa
xorb
dec
shll
dec
mov
repnz
sahf
dec
jb
xor
or
dec
jg
mov
fcoml
icebp
bound
mov
cmp
inc
push
mov
or
jle
andps
mov
and
sti
clc
js
fistpll
iret
andb
push
pop
cld
imul
insb
xchg
ljmp
stc
shll
and
dec
addr16
xchg
xchg
aam
xchg
push
adc
lcall
faddl
or
insb
imul
sahf
cmp
icebp
cmpsl
push
mov
sbb
je
lcall
outsb
cwtl
pop
push
adc
sub
xchg
movb
int3
jecxz
add
arpl
add
pop
adc
shll
into
push
sub
pop
fldcw
or
sub
clc
cwtl
sbb
aaa
lock
aad
rcll
divb
xor
dec
push
shr
jno
jb
mov
loop
jo
leave
pop
and
lods
mov
xor
jl
jmp
addr16
pop
or
mov
pop
inc
or
mov
cmpsb
ds
ds
and
loope
ds
stc
test
mov
mov
pop
dec
fildll
mov
jmp
or
jmp
push
ret
jmp
push
sti
clc
xchg
push
adc
pusha
push
and
int3
dec
xchg
adc
dec
call
lock
sti
mov
adc
jmp
xor
sbbb
mov
xchg
sbb
cli
jg
pop
jnp
pop
sbb
cmp
sbb
cwtl
dec
pop
pop
add
jl
pop
adc
inc
add
pop
cmp
leave
jg
sbb
scas
add
jmp
dec
or
sub
sahf
or
add
or
push
push
mov
inc
enter
repz
je
mov
mov
xor
sub
lock
cli
insl
insl
aas
lret
hlt
cli
mov
cmp
cmp
jns
cmp
je
sahf
xchg
out
je
test
pop
lds
in
and
insl
popa
scas
mov
scas
and
xchg
imul
sub
cmp
cld
xor
sub
enter
dec
inc
call
push
mov
scas
fs
das
or
rcll
adc
mov
adc
sub
adc
out
int
jg
pop
fistpl
sbb
ficoml
sbb
fdivs
sbb
pop
inc
addl
nop
jbe
dec
addl
loopne
popf
sbb
ds
pop
pop
cmovnp
mov
cmp
int3
mov
push
loope
or
xor
pop
aaa
daa
insb
xchg
shl
icebp
xchg
jns
stos
iret
enter
push
xor
jge
inc
outsl
inc
pushf
pop
push
in
aas
inc
or
sti
cmp
jmp
addr16
pop
or
xchg
leave
mov
daa
ds
inc
loopne
cmpsl
hlt
and
jno
ds
bound
pop
adc
sub
sub
push
mov
insb
sub
add
ljmp
and
cmp
movsl
gs
push
repnz
adc
adc
adc
adc
insl
xchg
add
jnp
shrl
dec
fdivrp
dec
sub
negl
sbb
mov
sbb
lcall
mov
mov
xchg
push
inc
add
arpl
add
pop
jmp
test
inc
ds
sub
loop
mov
movsl
dec
dec
int3
mov
cmpsb
mov
pop
fcoml
inc
sub
mov
push
cmp
sub
push
and
iret
xchg
cmpsl
xchg
je
icebp
cmp
into
dec
or
or
cs
push
cmp
mov
fistpll
jns
mov
in
mov
and
loop
data16
insb
mov
mov
je
xchg
pop
mov
jnp
pusha
push
popl
cmp
out
scas
jg
es
scas
xchg
in
sub
jne
push
push
sub
mov
test
push
xlat
lcall
fcoms
sub
xchg
push
adc
adc
jp
nop
lods
xor
jg
xor
mov
jmp
pop
movsl
or
cmp
sbb
mov
push
shll
xchg
jmp
sub
nop
jbe
movb
insb
mov
dec
inc
xchg
sbb
out
push
sub
cli
cmp
and
fadds
lea
shlb
cs
out
fdivrp
stos
xor
int3
mov
adc
shr
cmp
std
jo
in
mov
or
lea
cli
jns
mov
inc
divl
add
dec
inc
xor
icebp
add
in
dec
inc
aas
and
insb
and
out
lods
mov
and
inc
dec
dec
mov
or
mov
leave
adc
in
sub
movsl
lret
cmp
arpl
shll
sub
outsb
cmp
pop
movsl
gs
movsb
jbe
push
adc
push
dec
jae
xchg
jmp
mov
dec
jp
inc
mov
negl
xchg
dec
fs
pop
jbe
pushf
cwtl
dec
leave
jnp
aaa
cmp
pop
movsb
xchg
test
jle
xchg
mov
xchg
ficoms
xor
out
inc
ret
sub
jg
stos
push
jmp
fucomip
imul
out
xchg
mov
arpl
xor
test
push
lds
int
jbe
xchg
push
inc
jae
hlt
lret
add
stos
or
mov
dec
fcompl
mov
and
jnp
lea
jno
cmp
jbe
icebp
fbstp
jp
add
jne
mov
stc
sub
mov
lock
popa
je
jle
test
cmp
cli
dec
or
sub
stos
cmp
int
sub
lret
test
mov
mov
pop
and
imul
stos
scas
fs
push
push
repnz
jecxz
insl
sbb
sub
stos
nop
pushf
aas
sbb
pop
cmp
pop
dec
cmpsb
mov
lcall
mov
xchg
pop
dec
cmp
pop
xor
lahf
repz
adc
pop
iret
inc
sbb
pop
dec
jg
rolb
pop
jge
loopne
aaa
or
push
or
push
jbe
or
jnp
sub
test
enter
scas
out
mov
clc
mov
sub
in
xor
icebp
push
cmp
shrl
jmp
scas
push
push
mov
insl
aam
mov
xchg
cli
push
push
pop
popf
stc
jns
cmp
xor
divl
es
jne
cld
movsb
cwtl
mov
lret
mov
jg
outsl
imul
sbbb
pop
dec
dec
imull
lods
insb
mov
shll
mov
sbb
cmpsb
cmpsb
xor
movsb
fbld
and
cmc
dec
loope
inc
mov
sbb
leave
ficomps
sbb
adc
xor
pushf
cmp
rcr
cltd
pop
push
xchg
mov
sbb
gs
aad
xchg
ret
iret
inc
roll
mov
push
and
inc
add
jle
rclb
and
mov
and
std
mov
imul
sub
xor
pop
pop
out
sub
movl
cmc
lret
divb
data16
and
repz
es
out
scas
outsl
cmc
test
loopne
in
lods
insl
mov
into
mov
stos
mov
jl
cmp
jp
hlt
repnz
xor
push
lds
mov
push
and
ret
pop
fs
mov
adc
dec
and
sbb
stc
cmp
loope
das
out
int
dec
popa
add
insl
pop
add
pop
pushf
ljmp
pop
call
stos
lcall
jmp
xchg
push
pop
dec
in
add
push
xchg
xchg
in
nop
push
pop
shrb
shrl
push
push
int3
mov
push
hlt
mov
mov
inc
fmul
or
dec
loopne
mov
jle
enter
fdivl
fldl
aas
xor
mov
add
cmp
loop
add
or
pop
add
push
adc
push
lds
aaa
rorb
pop
push
jns
xor
pop
xor
mov
clc
hlt
jnp
xor
jmp
loopne
in
lods
insl
pushl
loope
mov
pop
lods
xchg
je
inc
jp
popl
js
test
mov
daa
and
ror
arpl
fdivl
popa
push
out
adc
and
lahf
stos
movsl
push
cli
loopne
pop
mov
sahf
mov
or
sbb
insb
adc
cmp
cmp
sbb
sub
test
xchg
xor
push
test
in
mov
rol
adc
push
adc
fimull
popa
dec
xor
adc
fistpl
adc
sub
adc
mov
sbb
inc
imul
movsb
das
push
add
sbbl
pop
pop
adc
roll
add
mov
mov
xor
dec
or
push
test
or
popa
call
lret
push
adc
mov
test
cmp
mov
es
pop
cltd
mov
inc
repnz
xor
push
lret
inc
cmp
or
cld
sbb
shr
ja
cmp
jp
mov
aaa
jg
add
fstpt
xor
pop
push
mov
ret
pop
sbb
add
lret
andl
outsb
stc
mov
push
in
sub
imul
sarl
xrelease
es
and
test
mov
aad
push
pop
push
and
and
lods
mov
dec
adc
ljmp
out
movsb
sbb
arpl
insb
pushf
roll
mov
lods
flds
xchg
mov
cmp
aad
or
adc
dec
adc
aaa
push
nop
and
iret
rolb
mov
sub
jge
mov
incb
mov
jmp
cmp
enter
js
les
mulb
xor
hlt
xchg
pop
stc
mov
mov
lret
pop
adc
lock
pushf
pop
inc
in
aas
decb
mov
mov
and
cli
mov
jbe
clc
je
andb
xor
jecxz
arpl
loope
xor
loop
bound
xchg
pusha
push
mov
inc
lods
cmp
lods
out
mov
sti
pop
jl
and
sub
sti
in
xchg
lahf
fildll
data16
push
push
xchg
mov
dec
jp
lcall
mov
and
cmp
pushf
pop
xchg
dec
mov
daa
hlt
clc
xlat
xchg
push
pop
cwtl
push
add
ds
pop
and
inc
arpl
test
xchg
pop
sbbl
inc
pop
fwait
sub
in
add
outsl
sahf
imul
pop
dec
or
sbb
fdivl
jo
movl
aam
stos
data16
popf
call
das
cli
mov
iret
in
add
adc
fildll
imul
lret
or
adc
cmp
xchg
adc
mov
ds
jge
and
xor
jne
mov
rcl
mov
or
mov
je
pop
lahf
pop
pop
movsl
stos
inc
push
test
sbb
and
pop
mov
mov
xor
stos
ljmp
in
xchg
sbb
out
gs
repz
mov
addl
inc
sub
sarb
in
lea
in
gs
fsubrs
pop
pop
cmp
pop
aad
xlat
push
sbb
and
and
roll
stc
ret
pop
aad
pop
inc
mov
fsubr
mov
std
cltd
xor
mov
clc
mov
rol
int3
mov
xchg
stos
mov
push
push
or
mov
xchg
push
bound
mov
xor
xor
icebp
xchg
and
dec
or
or
cs
add
aas
mov
cmp
mov
push
aaa
pop
jno
xor
xchg
xchg
mov
fadds
mov
add
in
or
mov
fistpll
add
pusha
cmp
xor
das
out
lret
pop
sub
in
or
dec
or
push
ljmp
sub
gs
adc
pop
cmp
push
xor
mov
adc
nop
push
mov
mov
sbb
fwait
adc
faddl
push
aad
pop
cmc
mov
xchg
xchg
movsl
push
daa
mov
and
ret
adcl
not
add
mov
ss
pop
inc
sbb
and
mov
xchg
mov
cwtl
sub
testb
dec
lret
mov
xchg
cmp
pop
mov
test
jbe
xor
mov
xor
or
aaa
cmp
mov
pop
or
or
jl
out
repz
and
lds
xchg
roll
mov
and
pushf
mov
ret
pusha
push
addr16
fstpt
in
mov
insb
sub
jecxz
mov
test
repnz
add
loop
test
out
adc
cmc
scas
or
xlat
push
fists
shr
inc
ret
inc
and
dec
push
hlt
inc
repnz
push
aam
jb
jo
jne
inc
pushf
pop
pop
in
jnp
xor
in
inc
xlat
or
mov
cld
aad
xchg
add
mov
addb
je
int3
mov
and
or
popa
fcomps
int3
cmp
leave
mov
test
fldcw
push
repz
jbe
sub
jae
scas
xchg
inc
icebp
mov
out
sarl
mov
fstps
mov
sub
adc
popa
jns
mov
push
fdivrs
out
fcoml
xor
jne
jo
xchg
insb
mov
sbb
imul
shlb
les
cmp
jmp
mov
jp
jl
js
rcll
sub
dec
inc
and
jae
dec
movsb
jo
or
and
adc
scas
notl
ja
push
lret
xor
ror
cli
insl
int
dec
pop
dec
outsl
jae
sbb
pop
jbe
pushf
into
sti
cmpsb
add
and
lds
sub
jnp
and
aam
adc
insl
incb
pushf
push
ret
int3
outsb
adc
inc
mov
xchg
mov
roll
ret
xor
push
shl
movl
inc
sub
push
push
xor
mov
mov
lret
test
sbb
or
sti
inc
psllw
cmp
push
lret
aam
jbe
fldenv
cmp
test
mov
daa
ds
arpl
inc
xor
je
jle
mov
mov
pop
dec
fildll
cmp
and
jmp
stos
enter
sub
cmc
push
cmp
push
adc
pusha
push
push
or
pop
cmpsl
mov
push
mov
xor
rclb
dec
pop
fisubrs
jbe
pushf
mov
dec
lret
or
xchg
cwtl
pop
push
inc
cmp
xchg
and
lock
addl
jle
mov
ret
pushf
scas
mov
bound
pop
and
dec
or
mov
mov
mov
movsl
imul
movl
sub
mov
xor
arpl
xor
icebp
mov
jecxz
pop
int3
fucomip
scas
outsl
int3
xchg
jbe
jo
lods
ret
iret
mov
cmp
cmp
daa
dec
mov
add
lds
sahf
add
out
add
shlb
arpl
xchg
mov
jge
adc
fistps
push
stc
xchg
in
scas
mov
jmp
in
lods
lret
push
lret
fcmove
stos
push
pop
pusha
addr16
fs
mov
in
pop
mov
xchg
push
cmp
push
adc
jle
lods
jae
jne
iret
imul
jle
push
push
jle
dec
pop
fidivs
fstpl
pushf
ret
ljmp
mov
sbb
ror
dec
and
test
js
add
data16
pop
insl
test
mov
in
addb
outsb
xor
inc
sbbb
into
bound
lret
mov
stos
sub
lret
lock
xchg
sub
mov
jae
mov
xor
pushl
sahf
dec
dec
das
xor
jb
xlat
or
adc
cmp
fsubrl
mov
jl
stc
add
push
adc
ja
lahf
mov
std
daa
cmpsb
out
jecxz
push
jecxz
movsb
sbb
mov
outsl
into
mov
mov
popf
pop
mov
out
outsb
sub
cmp
lods
sub
daa
jmp
push
test
push
out
aad
pop
fbstp
cmp
mov
inc
push
lret
aad
adc
out
inc
pop
shll
push
nop
nop
sti
push
lea
pop
pop
jge
fwait
aad
lods
or
push
pop
adc
sbb
bound
cwtl
mov
push
jbe
sbb
incl
add
inc
add
loopne
add
stc
mov
jg
stos
popa
push
ds
inc
xor
dec
sbb
or
xchg
or
xchg
mov
je
lds
add
hlt
inc
or
add
in
jle
out
int3
sbb
shrb
js
aas
decb
cwtl
xchg
jnp
mov
int3
push
mov
sbb
clc
mov
mov
out
add
mov
and
mov
and
sub
lahf
iret
and
pusha
dec
mov
sub
sub
mov
fmul
iret
test
sub
in
leave
test
and
push
adc
lds
add
int
adc
je
adc
adc
iret
nop
push
insl
lret
out
leave
stos
cmpsl
cli
mov
in
sbb
mov
lcall
fcomps
push
pusha
xor
orl
xor
jae
orl
pop
xlat
xlat
outsl
mov
lcall
lods
scas
mov
imul
or
xchg
push
mov
sub
jae
push
add
xchg
inc
sub
lods
jno
rcrb
xor
pop
cmp
lods
dec
frstor
negl
mov
mov
cmp
mov
stc
mov
jns
js
cmc
add
flds
add
aad
and
lods
ds
fs
sti
dec
add
loopne
cmp
rcll
mov
insb
sub
fsts
out
xor
shr
or
xchg
mov
iret
jo
dec
mov
push
adc
out
scas
push
xchg
nop
inc
repz
cmp
dec
clc
jne
mov
fcmovne
std
mov
sbb
fcmovbe
mov
mov
xlat
xchg
mov
push
jg
std
xchg
lock
iret
icebp
pop
lsl
mov
inc
xchg
and
jle
sbbb
std
or
fisttpl
test
dec
dec
or
xchg
inc
and
movsb
cmpsl
insl
inc
or
push
out
cmp
sti
repz
mov
mov
jno
repnz
xor
scas
or
cs
dec
insl
sbbl
mov
cld
cltd
daa
loop
sbb
clc
cli
mov
mov
outsb
and
mov
scas
mov
push
mov
sbb
mov
subl
loopne
cmp
push
outsb
sub
gs
cmp
xor
sub
inc
add
and
testb
xchg
shll
xchg
femms
outsb
cmp
rclb
dec
jp
push
push
int
int3
pop
mov
fwait
lea
fisubl
push
pop
mov
leave
stc
bound
or
loopew
cmp
addb
mov
add
outsl
xor
mov
cli
sbb
pop
arpl
xlat
ss
or
pop
popa
out
lods
out
dec
or
cld
lret
pop
jne
xchg
aam
sahf
adc
jmp
and
ss
shll
mov
into
repnz
js
pop
ds
push
mov
sbb
fsubrs
push
aas
enter
dec
mov
mov
leave
aad
mov
cmpsl
mov
lods
pushfw
mov
cmp
pop
nopl
bound
std
lahf
in
enter
push
jle
add
jl
imul
cmp
mov
cmpsl
std
hlt
sub
pop
pop
lahf
push
mov
inc
push
rcll
fists
push
shrb
and
in
pop
loope
in
fdivrl
adc
pop
fs
movsl
ret
mov
jg
adc
jnp
adc
pop
inc
test
frstor
out
lcall
inc
outsl
fidivl
push
pop
lret
mov
leave
imul
rcl
dec
imul
mov
lcall
rcrb
fadd
jae
adc
mov
int3
push
xor
fiaddl
cmp
mull
popf
mov
jle
rolb
jnp
nop
cmpsb
sbb
mov
jp
xchg
cmp
mov
lret
clc
out
data16
in
add
fstpt
and
call
jns
lahf
in
in
lods
in
push
ss
rorl
imul
insb
mov
push
mov
cmp
in
or
xlat
xchg
xchg
cmp
push
xor
repnz
rclb
outsl
inc
mov
adc
nop
das
les
cmp
ficomps
sahf
pop
aad
enter
outsb
psubusb
xor
push
popf
test
test
inc
add
movsb
ss
out
adc
inc
push
mov
mov
add
push
fldt
mov
outsl
and
and
sub
lret
imul
aam
pushf
pop
inc
div
xchg
jbe
mov
test
inc
mov
jns
and
add
mov
or
popf
js
in
icebp
jge
mov
jb
stc
xor
and
cmp
jg
std
inc
cmc
xchg
or
repz
and
push
mov
loop
stos
bound
or
in
pusha
iret
push
jne
pop
cmp
mov
pushf
divl
mov
or
in
loopne
call
inc
and
shlb
adc
je
sub
mov
jp
insb
test
js
cltd
ds
fimuls
sub
adc
jp
daa
cmpsl
fstpl
xchg
cmp
movb
add
syscall
mov
orb
rcrb
xchg
sbb
outsl
sti
push
imul
sbb
pop
out
cwtl
enter
sub
hlt
xchg
test
mov
cmp
and
ffree
je
or
lods
ja
pop
inc
mov
mov
int
fwait
jl
decb
in
mov
dec
fwait
adc
mov
pop
mov
in
daa
out
jb
xchg
stos
pop
outsb
and
xchg
cmp
fbld
lahf
pop
and
pusha
mov
cmp
cmp
das
out
in
leave
pop
adc
inc
add
lods
mov
daa
gs
xor
adc
hlt
inc
adc
jae
adc
jae
xchg
adc
aad
lods
nop
out
fmul
adc
lock
cld
dec
sbb
fldenv
jp
ficompl
dec
mov
sbbl
inc
xchg
in
push
xor
rolb
fsubrl
popa
sub
int
out
out
xchg
push
pop
into
push
dec
daa
out
rcrl
stos
imul
xlat
dec
ja
shrb
jmp
hlt
push
inc
dec
ret
add
iret
dec
adc
icebp
les
jmp
fwait
adc
cs
insl
cmp
mov
mov
cmpsb
xchg
stos
mov
movsb
test
mov
xchg
mov
inc
xchg
mov
inc
nop
mov
jg
mov
mov
xchg
mov
dec
add
pop
mov
das
out
fsubrs
int
cld
sub
iret
or
sub
es
in
enter
inc
ret
pop
sbb
adc
stos
inc
ret
adc
xchg
cs
push
xchg
push
jmp
loope
rclb
lea
jns
add
mov
ja
sbb
push
adc
sub
icebp
lsl
fdiv
dec
add
sbb
cwtl
inc
cmp
pop
clc
loope
inc
mov
sbb
mov
int3
ds
out
jp
inc
clc
sbb
dec
mov
or
jb
sbb
adc
repz
aaa
nop
inc
imul
andb
mov
push
jecxz
pop
cld
shll
jnp
dec
lock
add
insl
pop
in
decb
xlat
popf
xchg
push
jl
testb
daa
jp
mov
jae
cltd
sbbl
ss
jne
lods
test
les
cmp
sbb
das
popa
and
lret
adc
pop
add
outsb
sub
cmp
sub
dec
inc
sub
out
and
ss
pop
repz
adc
or
cmc
rcll
daa
push
shrb
adc
fsts
push
push
dec
sbb
call
mov
adc
out
movsl
mov
out
lcall
mov
push
shll
aad
xchg
call
mov
add
andl
lds
cmpb
lret
mov
popf
mov
dec
stos
mov
or
mov
mov
jmp
shrl
rcl
mov
xor
nop
xchg
dec
daa
inc
mov
xor
lret
xor
fcoms
test
cmp
push
aaa
push
xor
lock
imul
sub
test
cmc
mov
mov
roll
or
arpl
cmp
cmp
jle
jl
and
sahf
push
xchg
inc
cmc
test
dec
push
stos
sub
cmc
es
loopne
fucom
cmpsl
and
xchg
movsl
gs
push
push
adc
jo
rclb
aad
adc
sub
pushf
movsl
cmpsl
insl
sub
jle
popf
cmp
loope
cmp
mov
inc
es
ficoml
loop
mov
idiv
mov
adc
mov
les
mov
jb
fdivr
jg
rorb
pop
inc
mov
adc
mov
mov
and
lret
dec
or
mov
mov
lea
rcll
repz
shlb
and
inc
or
push
js
cmc
call
in
lods
insl
mov
dec
push
icebp
std
jnp
sbb
jmp
cmp
xchg
mov
pop
sbb
lahf
in
addr16
adcl
lock
test
mov
mov
orl
int
jmp
sub
stc
insb
dec
std
clc
mov
mov
mov
fs
mov
es
mov
xchg
push
push
mov
jge
and
push
push
loopne
test
ds
sbb
mov
std
in
pushf
pop
cli
fistl
insb
sub
or
jb
push
bound
pop
pop
xor
paddd
rcr
sub
mov
adc
addl
mov
movsl
das
int3
mov
aam
or
outsl
add
enter
mov
adc
fnsave
jae
hlt
and
hlt
icebp
mov
jb,pt
jb
pushf
js
xchg
cltd
shll
mov
cmpl
cmp
leave
jl
lcall
cmp
push
pop
cmp
cmc
mov
xor
sbb
jnp
cmp
mov
scas
loop
push
shrl
lahf
pop
jl
mul
stos
addr16
loopne
das
imul
stos
mov
sub
xchg
adc
je
stos
call
movsl
gs
xchg
call
adc
rcll
lahf
adc
xchg
push
outsl
js
sahf
mov
pop
pop
imulb
aad
sbb
lcall
cli
sbb
push
aad
and
aad
mov
cli
add
pop
jmp
addl
sbb
out
hlt
jge
jmp
or
inc
jb
jecxz
lds
lret
or
inc
repz
jle
dec
cmpsb
xchg
add
push
push
sub
hlt
mov
int
imul
mov
jb
xchg
sbb
rclb
or
icebp
clc
cmp
leave
out
cmp
stc
mov
jp
rol
es
das
pop
cmc
addr16
inc
xlat
stos
push
lock
push
pusha
sub
jg
loope
sti
sbb
mov
pusha
mov
inc
in
outsl
scas
outsb
dec
fsubrs
fldl
cld
mov
in
jae
and
sbb
push
mov
xchg
push
aam
xchg
gs
scas
add
jmp
iret
insb
daa
mov
lcall
pop
movsb
cmc
rcrl
fmul
insb
mov
cltd
xchg
sub
sbb
leave
mov
push
sbb
roll
mov
and
lea
ret
addb
mov
popf
cmp
add
orb
dec
ret
pop
and
dec
dec
or
mov
push
or
mov
xor
ja
aaa
mov
fldcw
xor
nop
dec
insb
in
repnz
aad
int
stc
jp
cs
out
or
icebp
cmp
or
mov
jl
pushf
mov
xchg
jae
ss
movsl
scas
xchg
pop
jne
das
in
push
bound
and
pusha
popa
and
xchg
or
pop
das
cmp
stc
jns
imul
movsl
push
sub
or
push
gs
mov
es
repz
rcll
or
sub
int
add
ficomps
sbb
fstps
and
xlat
xchg
push
fnstsw
pop
xchg
push
pop
imul
dec
fists
cmpl
add
loope
jg
inc
fldenv
lods
call
add
sbb
pop
mov
jg
ret
sub
shrb
cmp
cmpsb
adcl
int3
adc
dec
cmp
stos
rorb
out
bound
dec
cmp
insb
mov
data16
pop
sub
inc
js
pushf
push
add
leave
loop
or
out
icebp
daa
out
test
in
and
mov
jo
scas
mov
bound
or
mov
mov
pop
cmp
sub
imul
adc
or
and
push
mov
adc
push
cwtl
add
shrl
inc
scas
icebp
inc
jmp
cli
sbb
rcll
lods
mov
addl
jmp
push
rcl
jns
and
cmp
aaa
ret
pop
fcmovnbe
addr16
mov
and
sbbl
push
xlat
lds
mov
mov
loop
mov
sub
test
aam
rolb
out
dec
test
movl
push
inc
aas
sbb
mov
pushf
mov
das
mov
lahf
lret
insl
pop
sub
imul
notl
mov
ja
cmp
test
and
sbb
cmpsb
mov
inc
mov
pushf
or
mov
add
insl
enter
xchg
cld
addl
adc
stos
fwait
sbb
sub
inc
lods
push
jbe
xchg
pop
out
das
call
out
shrl
adc
mov
xor
sbb
mov
xchg
not
push
cmp
xor
sbb
inc
lds
js
pusha
pop
pop
or
mov
std
and
mov
incl
ds
call
cltd
std
cmp
mov
cmp
mov
jae
push
and
fimull
add
cmp
jae
mov
and
inc
mov
xor
lahf
jp
in
in
lods
dec
sti
push
iret
sti
mov
ret
stc
jns
mov
and
jne
daa
cmpsb
jnp
lea
nop
jo
pusha
adcb
pop
jg
loopne
pusha
les
xchg
inc
pop
jmp
sub
jl
inc
sbbb
ss
add
psrad
pop
pop
lret
push
xchg
push
les
out
or
xchg
xor
sub
xchg
pop
mov
and
sub
adc
clc
fisubrl
pop
adc
cmpsb
jle
push
adc
dec
fsts
xor
aad
jne
rolb
ja
push
xor
in
inc
add
loopne
pop
mov
fidivs
mov
or
or
dec
stos
cmp
ja
fwait
jae
aas
add
jns
rolb
repnz
mov
fs
dec
mov
dec
dec
lret
sbb
or
inc
pop
adc
cwtl
dec
push
fimull
or
test
lret
sar
sbb
sub
cmp
cwtl
xor
out
popf
daa
out
push
and
pop
jle
sbbb
cltd
inc
sub
fldcw
into
lods
xchg
jnp
loopne
pop
call
push
sbb
fstpl
xchg
push
sbb
cwtl
pop
push
cmpsl
leave
jge
xor
pop
fadd
or
cmp
dec
mov
push
enter
mov
into
movb
icebp
mov
or
mov
int3
mov
test
pop
adc
movsl
jnp
hlt
jp
fadd
push
xlat
xchg
push
testl
mov
pop
aas
into
adc
xchg
in
jg
mov
cmp
cmpsl
fisubrl
mov
out
xchg
daa
stc
stos
lods
push
jmp
adc
add
xchg
test
lret
xor
push
inc
scas
push
dec
mov
xor
jecxz
xor
mov
xchg
sbb
shlb
jae
add
mov
insb
leave
negb
mov
mov
add
push
mov
mov
ss
lea
fdivrl
dec
subb
cmpsl
ljmp
movsl
imul
pop
das
das
arpl
int
imul
jmp
dec
ljmp
cmpsl
addr16
imul
xchg
xchg
add
test
pop
les
jno
mov
dec
mov
mov
test
into
dec
or
notb
sbb
pop
jnp
fwait
mov
cmp
test
sbb
add
test
adc
sbbl
mov
shll
mov
arpl
push
ds
in
dec
into
mov
movsl
mov
or
movsb
mov
leave
outsb
jmp
dec
sbb
or
adc
mov
jbe
fs
xor
push
add
cmp
lods
shl
fiaddl
pop
adc
out
nop
cmp
dec
jnp
in
jl
out
pop
lahf
mov
mov
enter
ss
push
shlb
push
pop
movsb
out
and
and
and
test
and
pop
or
int
int
std
fdivrl
stos
out
push
or
stos
or
call
sub
pop
flds
and
adc
sbb
adc
xor
adc
push
and
iret
push
push
push
cmp
mov
das
mov
mov
cs
cmpsb
aas
and
cmp
xchg
loope
mov
nop
filds
sahf
xchg
mov
add
sub
rolb
jge
imul
mov
or
adc
or
sub
or
push
sbb
sbb
cmpb
cmpsb
adc
push
jo
inc
jne
or
xor
jae
cmp
lcall
pop
or
pop
cmp
pop
push
cmp
xchg
mov
xor
add
test
mov
cs
push
loope
pop
loop
loopne
and
loop
inc
bound
dec
pop
jle
popf
mov
push
scas
adc
inc
cmp
add
stos
push
lea
pop
in
test
cwtl
xor
negl
and
fdiv
and
and
jp
lea
mov
ss
sub
sbb
push
or
add
mov
out
adc
bound
xchg
jge
cmpsl
xchg
inc
pusha
adc
repz
loope
andl
mov
sub
add
jge
push
lods
popf
dec
popw
leave
sub
or
fwait
mov
xchg
push
aaa
add
jbe
repz
popf
mov
aaa
lcall
xor
cmc
add
xlat
into
ds
aas
ror
cmp
icebp
or
cmp
decl
cmp
fmuls
cmp
test
and
mov
sbb
aas
mov
and
scas
std
das
mov
lods
lret
sub
mov
sub
mov
xchg
push
sub
stos
push
lret
call
inc
inc
mov
mov
lret
adc
jmp
and
fcoml
dec
stos
sub
cmp
xor
mov
int
jp
sbb
sub
hlt
stos
pop
mov
xchg
and
adc
and
xchg
adc
in
inc
movsl
xchg
test
add
inc
pushf
sar
sbb
or
in
addr16
mov
fisttpl
mov
jns
xor
push
repnz
or
call
nop
sub
jle
xorb
xor
mov
cmp
xor
pop
or
pushf
dec
jns
cltd
dec
push
jle
mov
jl
sbb
gs
xchg
push
adc
xchg
push
adc
push
mov
and
push
movsb
and
inc
popa
xor
cmpsl
jb
loopne
and
gs
fstpl
icebp
outsb
outsb
sub
insb
fmul
inc
insb
pop
sbb
out
inc
dec
or
js
xor
xchg
cmp
stos
pop
std
rcll
cmp
rcll
paddd
xchg
xchg
das
lea
test
mov
lods
pop
mov
lret
sub
and
test
es
dec
add
xchg
dec
push
movsl
cs
dec
aaa
mov
adc
mov
incb
inc
jae
sti
das
jne
add
cmc
cmp
push
fstl
rorl
stc
loope
mov
sub
push
in
inc
mov
testb
popf
rcrb
cmc
comiss
ret
rclb
jle
in
lret
cld
mov
pusha
jmp
imul
jge
cmp
mov
in
and
mov
ja
mov
mov
sbb
nop
test
andb
add
xorl
lods
xchg
push
add
sub
push
popf
push
fstpl
shr
mov
pandn
test
scas
adc
rcll
xchg
aad
adc
inc
push
je
xchg
roll
mov
lods
push
add
mov
or
std
mov
pop
ficomps
in
stos
pushf
push
xor
pop
mov
sbb
xlat
sbb
xchg
js
push
out
jne
pop
in
fwait
xor
xor
das
rcr
test
xor
xor
add
pusha
jecxz
scas
fcmove
sbb
fnstsw
push
dec
jge
lahf
leave
mov
xor
push
sbb
or
add
iret
jae
not
xor
inc
push
push
mov
jmp
dec
mov
xchg
aas
jbe
lods
add
in
sub
fs
xchg
sbb
rcrl
adc
dec
arpl
mov
xor
jo
mov
movsb
fs
outsl
and
call
and
dec
les
jge
out
lds
lret
ja
in
mov
and
or
movsl
pop
testl
mov
shll
mov
lret
aas
aam
shrb
dec
sbb
in
add
ja
clc
and
mov
repz
iret
stos
jp
jge
mov
adc
inc
inc
lret
xchg
dec
xor
pop
sbb
mov
pop
test
sbbb
and
sub
push
inc
scas
lret
daa
iret
outsl
jle
mov
push
cmpsl
adc
push
and
lret
mov
inc
inc
inc
mov
xor
mov
lret
rsqrtps
dec
jno
pop
leave
push
cmc
mov
lods
pop
in
jle
scas
mov
jno
pop
lcall
mov
ss
imul
mov
pop
pop
mov
add
subl
out
pop
dec
push
adc
call
out
fadds
cmp
test
adcl
adc
pop
imul
scas
sahf
adc
mov
xchg
xor
jb
cli
mov
add
inc
aas
fisubrl
pushf
sbb
cltd
ffreep
lods
into
xlat
xchg
mov
add
es
inc
gs
xorb
mov
andb
andb
fcomi
mov
or
xorl
dec
jmp
inc
pop
leave
adc
fsub
aas
or
rcrb
ss
inc
push
xchg
mov
xor
adc
lea
arpl
pop
stos
jl
out
jle
in
sbb
popf
cld
jno
sbb
cmp
sbb
imul
xchg
fs
out
aaa
inc
mov
push
adc
loope
stc
js
iret
cmp
jnp
dec
movsl
stos
or
push
mov
and
jmp
and
jecxz
add
call
xor
fdiv
mov
xchg
pusha
stos
lret
or
adc
out
inc
pop
lods
mov
das
and
outsb
push
xor
pop
sbb
mov
sbb
rcrl
sbb
and
lcall
jb
pop
cmpsb
mov
pop
or
mov
and
xor
fs
mov
inc
add
xchg
std
push
aam
add
pop
or
out
pop
or
imul
and
movl
or
sub
mov
dec
movsb
int
out
scas
adc
xchg
push
mov
loopne
push
sub
ss
pop
adc
icebp
and
cs
lds
push
rcl
fsubs
arpl
insb
aam
ret
inc
addr16
mov
sub
and
xchg
xchg
sarl
jmp
sub
sbb
test
shll
mov
xchg
testb
sbb
les
adc
ja
pop
bound
adc
pop
xor
mov
pop
dec
insl
sbb
fldt
test
xchg
pop
in
popa
ficompl
clc
roll
fmuls
jb
and
pop
mov
pop
mov
fisubl
sbbb
scas
bound
sbb
mov
or
into
or
mov
fmulp
cmc
popa
test
or
les
and
mov
mov
fdivs
inc
xor
xor
push
pop
sub
and
call
lcall
pop
adc
mov
adc
xor
pop
adc
xchg
adc
inc
dec
or
fwait
inc
lods
in
adcl
sarb
subl
dec
xor
cmp
jns
dec
jo
in
lods
insb
sub
lcall
pop
inc
sbb
sahf
pop
adc
xchg
inc
push
outsb
adc
or
xchg
sub
jg
dec
adc
push
xor
dec
mov
pop
movsb
pop
mov
pushf
jl
or
mov
fcoms
js
fdivs
dec
ja
repz
and
mov
jg
rolb
jge
cmpl
jl
sbb
out
ljmp
scas
loop,pt
mov
loope
stos
cmc
out
mov
sbb
in
jns
leave
das
push
daa
shrb
pop
mov
inc
xor
dec
add
aaa
mov
sub
hlt
mov
mov
push
pop
cltd
mov
jae
jb
jne
fistpl
stos
daa
jno
lods
aam
mov
pop
out
mov
out
subl
fstpl
arpl
mov
xor
lret
dec
sbb
lahf
pop
lahf
aad
enter
pop
add
dec
add
addb
mov
inc
xor
in
mov
fnstcw
adc
clc
xor
fidivrl
pop
imul
push
or
ret
mov
and
xor
dec
hlt
icebp
jecxz
dec
mov
cmp
inc
popa
push
shlb
test
dec
out
decl
insl
pop
mov
cld
xorl
dec
cwtl
bound
and
sbb
inc
push
daa
sub
divb
dec
or
enter
cmp
xor
dec
pop
cmc
mov
dec
jo
mov
jp
int3
mov
jl
sbb
mov
loope,pt
pop
shll
cmc
mov
xlat
mov
xor
cli
add
fldl
and
fildl
pop
mov
iret
mov
sahf
push
cmc
jmp
imul
fisubrs
test
ljmp
cmp
adc
push
pop
int
jne
xchg
in
dec
gs
dec
shl
adc
inc
xor
fiadds
mov
int
repz
subl
icebp
outsl
sbb
aas
sti
jle
pop
cltd
sub
jns
lcall
dec
out
add
in
xor
cltd
andl
cmp
dec
jg
push
mov
ljmp
inc
dec
mov
dec
dec
loop
jb
jecxz
lret
dec
test
ret
lds
xor
mov
outsl
xchg
adc
or
loope
ror
cmp
xlat
jno
dec
mov
out
mov
pslld
mov
jae
cmc
mov
adc
pop
inc
mov
filds
ret
sub
and
loop
mov
jg
or
stos
push
sub
lods
dec
insb
andl
or
and
xor
ja
rcll
fldenv
xlat
pusha
insb
mov
call
test
nop
lods
or
jp
roll
jo
sbbb
pop
cli
inc
mov
aam
cmpsl
sbb
out
pushf
pop
out
adc
sarl
jp
xchg
rol
add
sbb
or
and
ljmp
stos
mov
pop
add
dec
lcall
sub
sbb
imul
push
add
enter
inc
std
adc
mov
icebp
int3
imul
mov
fs
sbb
js
adc
mov
jg
mov
imull
and
js
sahf
stos
and
and
sub
mov
mov
xor
lret
push
fistps
or
out
outsb
sub
fnstsw
bound
movsl
lret
push
push
sub
sub
adc
test
xor
dec
dec
adc
aam
xchg
leave
int
iret
rclb
imul
insb
push
scas
lahf
ja
inc
sahf
pop
jge
cld
dec
sbb
cltd
pop
sbb
dec
pop
xchg
xchg
pushf
movaps
push
jl
rcll
hlt
mov
mov
or
xor
inc
sub
xor
int3
cmp
mov
or
inc
loope
sub
out
lds
call
aam
cmp
icebp
mov
dec
or
xorb
push
stc
pop
in
pop
mov
jl
xchg
jge
data16
cli
push
imul
icebp
pushf
clc
mov
jne
mov
inc
inc
mov
fwait
sub
sub
out
jno
and
jmp
out
stos
enter
imul
imul
into
ljmp
test
repnz
xchg
not
xchg
push
pop
and
add
sbb
xlat
adc
adc
dec
mov
push
scas
lahf
rcrb
pop
inc
inc
sub
fldl2e
pop
jmp
xchg
imul
orl
iret
dec
xchg
push
out
dec
xor
fwait
and
xor
mov
cs
popa
add
jmp
mov
ja
sbb
cmp
sub
and
dec
jge
ja
or
mov
jmp
inc
aaa
jae
aam
jae
and
repnz
ja
sbb
adc
mov
sbb
mov
sar
mov
cmp
jns
es
cli
xchg
out
jge
pop
loop
cmp
sbb
add
cmc
lds
loop
adc
add
sbb
xor
nop
frstor
fnstsw
inc
scas
dec
movsb
dec
push
test
imul
dec
test
ljmp
jmp
inc
inc
into
testl
inc
pop
adc
push
adc
xchg
jb
adc
push
adc
iret
jo
cmp
add
stos
inc
sbb
lret
sar
sbb
push
cltd
mov
cld
cltd
cmpsl
adc
xchg
iret
adc
xchg
pop
mov
mov
and
pushf
ljmp
ror
out
mov
loopne
mov
daa
pop
inc
test
pop
inc
or
mov
aam
ljmp
lds
sub
mov
jae
mov
das
mov
xchg
push
jae
lcall
and
int
mov
mov
lods
ja
adc
xor
loopne
leave
fsts
int3
add
icebp
xchg
jns
ret
loope
jns
cmp
outsl
inc
pop
rcr
inc
pusha
iret
xorl
outsl
pop
arpl
imul
adc
mov
push
aaa
fldlg2
mov
inc
addr16
lahf
lock
arpl
adc
lea
dec
aam
xor
shrl
sbb
sbb
push
popa
pop
cli
std
in
lahf
dec
scas
fwait
sbb
fistpl
push
jmp
rcl
push
mov
mov
rcr
clc
pusha
xor
mov
outsl
stc
sbb
cmp
mov
sub
loopne
adc
pop
fnsave
sahf
mov
aam
daa
xor
out
pop
sbb
outsb
ret
cmpsb
data16
mov
and
xchg
jb
xchg
add
mov
in
adc
loopne
lock
scas
in
stos
cwtl
adc
mov
mov
cmp
push
mov
cmp
in
cmp
lcall
popa
mov
push
gs
and
notl
sbb
rcrl
pusha
inc
icebp
sub
stos
cmp
lods
xchg
out
es
sub
fs
xchg
ss
inc
mov
mov
inc
adc
pop
push
adc
xchg
mov
adc
push
cwtl
mov
shrb
in
mov
ret
jno
inc
sbb
mov
sub
inc
push
sbb
repnz
xchg
push
mov
enter
scas
outsl
xor
mov
cs
mov
xor
xchg
mov
pop
cmpsb
and
movsb
data16
cmp
subb
jno
adc
and
daa
and
xor
adc
sbb
mov
xor
lcall
imul
cmp
mov
cmp
lds
ftst
mov
sub
rcll
push
adc
lds
push
stc
ljmp
sub
rcr
pusha
or
sub
fiadds
dec
dec
rcr
inc
cli
int
dec
out
addr16
stc
xchg
addr16
testb
ret
inc
inc
inc
push
subb
or
inc
dec
out
lahf
push
out
or
in
and
rcrl
push
lcall
fwait
test
rcrb
mov
mov
mov
aad
add
mov
xor
mov
xor
or
ficoms
rol
in
rcrl
es
mov
xor
outsl
push
cmp
in
pop
xor
jnp
leave
stos
add
mov
and
cmpsl
es
imul
lock
in
aad
cmp
into
inc
ds
cmc
fnsave
int3
outsl
dec
ret
mov
lods
push
sbb
pop
int3
mov
jnp
enter
adc
sbb
push
gs
je
jg
js
ret
icebp
mov
jb
fdiv
fsubs
cmp
jb
lods
popa
inc
jecxz
mov
sbbb
mov
inc
aam
fldcw
and
pushf
call
jne
cmp
mov
arpl
pop
addr16
lock
xorb
out
mov
push
sub
xor
leave
xlat
mov
mov
xor
jmp
push
pop
cmpsl
sub
fwait
mov
sbb
jp
xchg
lods
mov
mov
adc
adc
mov
sahf
push
inc
and
add
sahf
flds
pusha
inc
popf
add
dec
fistpll
dec
imul
cs
int3
leave
adc
or
inc
lea
test
mov
dec
dec
lret
fistps
pusha
push
adc
push
add
lea
inc
lret
cwtl
xchg
push
lea
aaa
jmp
ffree
mov
stc
fldenv
dec
bnd
mov
test
aam
aas
out
in
cli
and
lea
inc
or
rcrb
aad
mov
jmp
lds
mov
mov
test
mov
push
in
rcrl
adc
imul
movsb
mov
lahf
add
repnz
push
imul
mov
scas
imull
aam
repnz
rep
insb
fdivrs
cmp
daa
jae
repz
rolb
loopne
xchg
or
clc
xchg
add
mov
and
mov
sbb
call
pop
or
in
js
sub
test
inc
cmpsl
repz
or
sar
cmpsb
jo
lock
xchg
xor
dec
in
mov
dec
fbstp
jo
mov
jle
mov
gs
call
cmp
lock
sbb
cmp
outsb
xor
addr16
pop
jbe
lds
icebp
in
aad
aam
gs
adc
cmp
scas
mov
scas
nop
rcr
stos
lods
mov
add
mov
lret
pusha
out
pop
sub
jmp
and
loopne
sub
pushf
imul
pop
sub
mov
lahf
xor
into
mov
lea
iret
mov
fdivs
das
fs
rcrl
cld
call
popa
insl
sbb
lret
cltd
adc
mov
push
and
pop
testb
inc
xchg
push
mov
iret
lea
and
fstl
ljmp
sahf
and
mov
out
cwtd
xchg
cmp
and
or
xlat
sub
adc
mov
xor
push
jns
mov
sti
add
lods
xchg
pop
mov
xor
dec
jle
ljmp
mov
fcomps
cld
mov
mov
jmp
adc
jl
cmp
ret
or
and
mov
js
scas
mov
and
push
pop
cmpl
in
cs
jge
cmp
jae
std
stos
into
sub
sub
popf
lds
ljmp
rorb
adc
push
and
push
push
inc
leave
es
push
je
xchg
mov
xchg
out
fisubrs
inc
out
jge
outsb
pop
sub
push
sbb
pushf
lods
xchg
daa
repnz
mov
push
add
push
fisttpll
fdivs
add
pop
dec
mov
inc
add
sarl
jl
dec
nop
shl
pop
das
lahf
xchg
xchg
sbb
shl
or
or
dec
add
mov
dec
push
lds
dec
xor
add
je
adc
leave
xor
nop
je
sarb
cs
fisubrs
sub
jle
mov
mov
stc
mov
mov
mov
pop
mull
mov
out
mov
hlt
and
fnsave
popa
inc
shrl
sub
dec
xor
mov
ljmp
xchg
jbe
xchg
addr16
lods
cmpsl
fwait
or
mov
mov
imul
and
mov
fs
and
test
push
testl
sub
lds
inc
test
ficompl
mov
fcomps
addr16
inc
nop
inc
inc
mov
fdivl
cmp
add
mov
mov
iret
in
xchg
mov
dec
ljmp
and
xchg
es
insb
push
jmp
test
adc
ja
dec
adc
adc
roll
cs
cmp
ret
outsb
jo
dec
push
cmp
jnp
mov
xchg
js
js
dec
dec
mov
je
push
nop
vpmuldq
ret
loop
mov
jo
mov
adc
mov
adc
loopne
add
sahf
stos
or
imul
stos
sub
lret
ljmp
call
mov
sbb
sbb
push
test
rclb
adc
lods
push
mov
insl
push
lcall
pop
ss
ds
jl
std
jp
mov
test
push
ffree
sub
aad
sbb
fcmovnbe
jecxz
inc
or
mov
rol
sbb
push
cmpsb
adc
or
add
loopne
test
pop
add
push
jg
pop
mov
or
out
add
xor
mov
fs
lret
pushl
mov
jno
mov
xor
lahf
cmp
out
fucomip
mov
jp
in
inc
mov
aam
pop
mov
lods
mul
cld
in
inc
mov
cmpsl
test
fstpt
arpl
loop
push
arpl
push
mov
cmpsl
arpl
aas
sub
ret
xor
dec
and
push
jg
outsb
mov
movsl
lods
insb
sub
sbb
jne
dec
mov
insl
push
repnz
xchg
jo
nop
ss
hlt
cs
lret
and
adc
mov
fidivl
add
xchg
and
lods
mov
fstpt
cmp
data16
cmp
leave
sbb
inc
xchg
pop
mov
inc
jecxz
cmp
add
andl
sarb
icebp
popa
sbb
mov
pop
inc
call
dec
pushf
dec
popfw
mov
fs
mov
jmp
sti
cli
jne
jge
arpl
mov
std
mov
adc
lods
mov
sti
mov
scas
push
loope
popf
jo
mov
jp
sti
pop
imul
cld
and
cmc
or
jp
push
out
mov
ss
jae
adc
shll
adc
dec
adc
nop
push
push
mov
cld
mov
in
aad
dec
fwait
enter
fmull
ret
mov
or
push
pop
idivb
imul
xor
popa
outsb
jmp
inc
popa
repz
int
scas
xor
jb
fnsave
das
pop
decb
pop
pop
insb
adc
xor
pushf
fnstcw
adc
xchg
push
fsubr
addl
int3
lret
pop
push
inc
movsb
pop
jle
test
sub
test
cli
mov
cmp
inc
or
mov
or
adc
inc
fimull
sub
dec
xor
rclb
lods
bnd
scas
mov
xor
mov
sbb
mov
push
mov
mov
idivb
ja
fs
jle
cmpl
fistpl
xlat
dec
ss
lcall
sub
lds
out
movsb
adcl
mov
out
shrl
and
dec
sub
imul
insb
dec
push
inc
sub
stos
push
test
dec
cmp
movsl
fdivl
es
adc
popa
xchg
mov
or
dec
adc
nop
pushf
xor
mov
outsb
ficomps
pop
das
sub
pushf
pop
mov
mov
add
movsl
aad
and
fstl
lds
push
jno
add
and
pop
push
mov
fldenv
cs
xchg
gs
xor
mov
mov
sub
aad
add
push
addl
shrl
xchg
repz
inc
xor
inc
outsl
xor
mov
cmp
xchg
or
mov
cmp
mov
leave
cmp
mov
or
ja
stc
cmp
cmc
cmc
push
xor
cwtl
nop
cmc
jecxz
cmp
and
push
das
jb
clc
or
imul
mov
enter
in
scas
jl
xchg
imul
push
enter
mov
gs
cmc
loop
fcoms
scas
pop
dec
jae
nop
mov
rcll
push
jae
push
shl
fmull
scas
fsts
sti
pop
mov
push
stc
pop
mov
cltd
push
icebp
cli
rcrb
fdivrs
shll
push
inc
add
push
mov
pop
loop
pushf
xchg
cld
loope
dec
in
push
shrb
xor
sbb
fsts
fidivrs
jbe
movsb
pop
inc
popa
cmp
das
xchg
jne
loopne
add
cmpxchg
xor
out
mov
jle
out
push
jg
clc
mov
mov
xor
shlb
cmp
fsubrl
sbb
jbe
mov
icebp
testl
sub
add
popa
lds
cld
jns
add
pusha
sub
out
sub
loopne
xchg
in
movsl
or
data16
pop
mov
mov
loopne
xor
pop
dec
cmp
jmp
jo
or
mov
adc
in
push
aaa
add
mov
cmp
jp
mov
pop
stc
test
sbb
mov
jl
aad
dec
stc
cmp
inc
call
jg
lret
inc
cmpsl
lock
mov
aas
paddusb
mov
mov
out
sbb
punpckhbw
out
movsb
sub
fisubrs
or
inc
or
lods
push
adc
mov
mov
cld
jle
sarb
xchg
and
insb
scas
outsl
push
mov
insl
aas
sbb
insl
cmp
cmp
cli
mov
sbb
jns
js
mov
out
jmp
loop
stc
sub
push
in
fwait
or
mov
dec
jmp
stc
inc
in
daa
insb
sub
fnstenv
and
iret
adc
sahf
mov
leave
xchg
xchg
push
xor
pop
sub
lret
sub
adc
jae
in
mov
jae
mov
sub
pop
jo
fcomp
fwait
cmp
mov
int3
dec
mov
imul
push
push
sbb
sti
sbb
dec
mov
sbb
mov
fidivl
fsubrp
jle
add
dec
add
mov
fstpl
iret
into
mov
in
lea
cmp
ljmp
call
push
jbe
xchg
jl
dec
scas
xchg
sub
and
adc
jbe
lret
lods
repz
cli
out
imul
fwait
std
cld
mov
js
xchg
pop
jne
test
movsb
test
mov
mov
shlb
fs
push
rolb
sub
pop
inc
fidivrs
int3
inc
popf
pop
das
or
je
or
imul
test
xchg
add
loop
insl
sub
cmpsl
inc
sub
push
push
mov
xchg
adc
aam
push
xlat
shll
push
xor
lcall
call
popf
pushf
pop
mov
pop
pop
aam
mov
inc
stc
sbb
push
aad
xor
and
pop
aaa
adc
scas
into
cld
inc
inc
add
loope
popa
js
and
mov
mov
jge
dec
or
cmp
js
lret
sub
scas
test
cwtl
adc
inc
cmp
push
jmp
mov
pop
mov
mov
jmp
scas
outsl
mov
inc
outsl
and
dec
jp
mov
mov
dec
jle
notb
lds
jp
repz
sbb
mov
mov
daa
out
push
and
inc
in
scas
lahf
and
loop
cltd
jmp
push
std
inc
out
pop
jg
iret
subb
inc
insl
insb
in
lods
jle
out
imul
sub
cltd
stc
int
push
adc
mov
xchg
push
lock
lea
and
push
adc
push
mov
outsl
pop
push
in
fsts
sti
test
xor
xor
insl
aad
aad
and
pusha
adc
add
inc
imulb
add
lahf
mov
ret
fstpt
add
sbbb
xchg
or
sbb
mov
dec
dec
stos
mov
adc
push
ret
fcmovnbe
push
push
nop
inc
jne
data16
iret
xchg
mov
push
ret
loopne
mov
ret
cmp
xor
jne
dec
ljmp
cmp
mov
fcmovnbe
mov
dec
stc
cmp
jbe
mov
outsb
pop
pop
add
pop
jnp
ret
and
and
push
mov
mov
fistps
cld
mov
pop
scas
outsb
lea
jns
aad
insb
sub
sub
popa
xchg
or
sbb
aas
push
adc
movsl
ss
xchg
push
adc
mov
jb
iret
sahf
sub
ljmp
pop
cmp
fwait
pop
mov
daa
xor
pop
sbb
test
cmp
cwtl
cwtl
pop
loop
jbe
pusha
orl
mov
cld
mov
dec
bound
jge
cmp
push
lret
mov
popf
mov
out
fcmovne
stos
mov
enter
enter
sbbb
jmp
inc
push
adc
in
cmp
and
lock
lea
in
jle
cmp
movaps
jl
jp
jl
mov
cmp
mov
pop
shl
xor
mov
jmp
cs
int3
sub
and
and
lods
or
ljmp
loop
jl
imul
xchg
dec
rorb
imul
in
xchg
dec
or
fcoml
movb
pop
dec
add
xchg
push
out
push
out
inc
jbe
sbb
sbb
sub
dec
pop
movsb
cmc
jbe
and
pop
sbb
cmpsb
pushf
imul
push
mov
add
out
pop
es
add
and
mov
andb
and
frstor
and
pusha
or
mov
sahf
push
sub
dec
and
mov
fnstenv
push
add
inc
imul
mov
or
mov
fimull
in
lods
insl
mov
popf
sub
lods
mov
rol
int
cmp
popf
in
add
mov
into
sarb
daa
jno
push
loope
or
mov
stos
out
loope
and
and
cmpsb
iret
cmp
jecxz
dec
pop
cld
stos
jmp
sub
lret
cmp
push
imul
lds
push
mov
imul
aas
pop
mov
push
push
mov
inc
cmp
jge
scas
cwtl
scas
ss
dec
test
sbb
cli
icebp
cld
and
pop
jg
or
jnp
push
jbe
xchg
pop
mov
addl
into
clc
lea
shll
add
pusha
je
loop
ds
out
jp
arpl
dec
sbb
addl
mov
les
sarl
inc
or
in
xor
push
xchg
les
imul
add
sbb
ljmp
aas
test
leave
pop
and
iret
dec
mov
lret
in
dec
push
divl
xchg
inc
gs
rcr
sbb
arpl
loope
and
bound
ffreep
dec
sub
sub
inc
mov
ficoms
jmp
dec
mov
stc
inc
jle
inc
push
push
mov
and
or
stos
incb
out
loope
fs
mov
loopne
lret
mov
out
ficoms
in
fsubrl
xor
fwait
js
and
jmp
xchg
shr
lds
inc
mov
jge
add
test
lahf
loop
inc
and
loopne
loopne
jg
in
cmpb
fistpl
popf
ja
daa
std
xchg
in
cld
sub
ja
or
insb
ss
xor
mov
ss
movsl
jg
movsb
xchg
imul
mov
sbb
mov
fcoms
cmc
fnsave
div
jmp
xor
mov
or
sbb
bound
mov
fstpt
cli
xchg
jle
lods
gs
loope
mov
dec
or
dec
out
enter
jp
pop
pop
mov
insl
dec
jmp
xlat
and
inc
dec
sbb
enter
cmc
add
scas
push
outsb
sub
jmp
xchg
dec
jp
lcall
or
das
adc
fcomps
pop
in
pop
fstps
xlat
push
add
pop
push
inc
imul
aas
cmp
pop
xchg
add
pop
popf
push
inc
pop
fstpt
sbb
fldenv
mov
aaa
cltd
or
ljmp
xor
fxch
pop
test
pop
test
sub
mov
mov
adc
movsb
jb
test
adc
push
insl
pop
mov
jle
cmp
ss
push
xor
aam
lahf
in
sbb
in
mov
cmp
and
add
pop
dec
sar
pop
in
fwait
pop
fsub
mov
mov
jecxz
in
push
sub
mov
jle
add
dec
pop
and
aaa
sub
jbe
aaa
xor
int
sub
and
dec
pop
test
je
pop
imul
dec
out
mov
mov
iret
loope
imull
jo,pn
ret
rol
mov
in
pushf
xchg
rcrl
testl
mov
fcomps
je
and
mov
out
cmpps
add
jle
or
fsubl
sbb
and
test
dec
or
mov
imul
jno
movb
call
icebp
push
jp
jae
mov
jno
xorb
nop
or
scas
sarl
push
fld1
and
cmp
aam
stos
jg
sbb
mov
in
clc
jnp
loope
sti
loopne
xor
out
popf
or
in
add
loope
sbb
inc
mov
cmp
mov
cmpsl
push
ret
out
sub
sub
sub
roll
test
inc
push
adc
adc
adc
dec
cmc
xchg
push
adc
int
movsb
push
xchg
push
outsl
push
jmp
sbb
adc
jg
fistpl
mov
sbb
fsts
pop
xchg
shlb
mov
and
xchg
jbe
sti
inc
add
and
out
mov
jg
frstor
in
jle
mov
enter
jmp
dec
inc
cltd
xchg
aaa
push
pushf
add
mov
outsb
push
xchg
test
adc
mov
xor
stos
lret
aas
aas
fisttpl
xor
mov
aaa
aaa
xchg
pop
jnp
mov
add
push
js
loop
xchg
out
push
adc
and
subb
insb
fbstp
and
andb
mov
aas
ficoml
lret
jg
sub
ljmp
sub
pop
iret
fs
pop
cmc
jl
testb
out
wrmsr
rep
mov
jb
mov
lahf
iret
dec
out
sbb
xchg
test
pop
movsb
fs
mov
cmp
sbb
mov
sti
lret
jns
cwtl
xchg
sar
jns
aaa
add
sbb
loopne
rolb
xchg
add
mov
push
and
add
mov
push
imul
xchg
in
mov
push
dec
dec
xchg
scas
and
mov
ret
outsl
pusha
ja
jbe
loope
xchg
jb
dec
or
mov
jmp
ss
inc
push
jo
scas
and
mov
and
in
into
mov
lea
jns
sbb
cwtl
pop
lds
mov
fs
pusha
mov
mov
and
jg
pushf
add
in
cli
cmp
sahf
arpl
sub
inc
pop
push
aaa
cmpl
insb
addr16
jmp
out
mov
shrl
xlat
xchg
jbe
inc
xchg
cmc
lahf
push
push
adc
pop
inc
xor
aas
in
loop
dec
in
fadd
ljmp
sahf
aam
sbb
adcl
test
jb
pop
xlat
sub
xor
aad
xchg
push
daa
mov
inc
cmpsb
shlb
mov
hlt
push
jnp
xorl
add
std
mov
outsl
es
mov
enter
mov
fadd
mov
cmp
inc
es
test
cli
icebp
inc
imul
xor
xor
push
lahf
sub
fistps
cmp
sahf
pop
push
sti
sbb
lods
lea
pop
pushf
mov
pop
dec
jb
sbb
mov
jnp
cwtl
jl
and
les
lock
pusha
inc
sbbl
sub
scas
popf
fldl
xchg
mov
call
out
out
adc
jns
adc
pop
ss
das
jmp
test
jb
xor
jo
pushf
test
adc
nop
push
and
in
pop
sbb
sbb
insb
pop
pop
cmpsl
fwait
movsl
xor
push
pop
sbb
jno
fcomp
cwtl
cwtl
test
sbb
clc
inc
add
push
sahf
cmp
hlt
lods
and
xor
mov
dec
mov
lds
pop
push
mov
out
mov
test
mov
fadds
out
sbb
inc
addr16
cwtl
cmp
hlt
into
shll
add
shll
int3
sub
push
rorl
push
cmp
mov
push
sub
in
movsl
mov
pushw
pushf
dec
xlat
inc
gs
pop
or
push
and
gs
and
xor
out
adc
pop
shr
cmc
sbb
int
push
scas
jb
pop
inc
imul
lods
mov
sbb
dec
out
cmpsl
addr16
xchg
push
adc
inc
push
jne
mov
xchg
repnz
jmp
adc
insl
daa
jo
mov
pop
clc
xor
imul
fcompl
sub
cmp
jnp
js
ja
xchg
cmp
push
push
fcomi
in
stc
arpl
jno
inc
rdpmc
dec
into
ljmp
push
mov
scas
das
movsl
lret
pushf
sbb
cltd
leave
stos
sbb
aaa
cmp
aam
or
int
mov
enter
xor
jbe
aad
pop
jae
xchg
sub
into
dec
cmp
add
mov
pop
mov
sahf
xor
xor
mov
aaa
fistpl
cli
mov
xor
clc
mov
xor
lret
mov
repnz
loop
and
inc
ret
and
mov
cli
fmul
and
dec
lahf
imul
dec
mov
dec
in
push
sub
mov
mov
and
out
sub
xor
sbb
dec
add
les
ret
adc
out
fdivr
cs
ficoms
sbb
sbb
pop
sub
xchg
loop
loop
mov
subl
jecxz
cmp
roll
pop
xchg
test
rolb
popf
jge
into
xlat
pusha
pop
or
jecxz
rol
or
in
out
inc
or
test
push
inc
pop
push
mov
cmpsb
fldl
subl
mov
mov
sub
pop
push
adc
fwait
into
icebp
push
int3
cmp
div
push
pop
jp
jp
mov
mov
ss
mov
add
jle
mov
and
pop
inc
mov
cmp
fstpl
in
sub
inc
imul
test
loopne
out
add
bound
mov
xchg
inc
aad
pop
dec
xor
rcrl
or
pusha
adc
add
xor
ficomps
out
in
iret
pop
cltd
pop
rclb
ret
je
fcomps
mov
arpl
ret
nop
mov
inc
and
adc
std
out
std
sbb
lcall
cltd
leave
dec
jmp
and
or
mov
mov
add
mov
push
je
cmp
pop
test
add
imul
cld
pop
clc
outsb
sbb
mov
cmp
divl
pop
mov
mov
sub
outsl
inc
and
mov
lods
rcrl
pop
xor
mov
or
ret
loopne
add
inc
push
das
mov
stos
test
stos
test
out
cmpsl
mov
sahf
jb
or
pop
add
pusha
out
adc
shrl
xor
cmc
xchg
sub
sbb
push
jb
cmp
ja
sbb
jl
insl
cltd
and
sbb
ja
mov
push
out
das
and
shl
aas
movsl
xchg
inc
jbe
movsb
and
add
andl
and
fldl2e
into
add
addr16
dec
push
or
dec
pop
fisubs
leave
in
shlb
les
push
daa
xor
leave
in
ret
xor
sbb
sarb
fs
out
scas
outsl
cmp
scas
sbb
stc
jae
jle
mov
sbb
and
test
add
mov
inc
sub
and
mov
jecxz
sub
movsb
mov
bound
iret
pusha
push
fnstsw
inc
and
mov
lret
in
lods
insb
insb
mov
jmp
sub
enter
inc
dec
push
shll
xchg
cltd
es
test
les
stos
daa
inc
xorb
xor
lods
push
add
addps
fsts
insb
pop
stc
pop
cmp
push
out
or
ds
scas
pop
repnz
and
addl
dec
int3
out
std
lea
jle
mov
add
jne
or
inc
dec
call
cmp
push
addl
push
mov
add
fs
out
sub
icebp
mov
adc
outsl
xor
xlat
cwtl
outsl
aaa
aaa
stos
les
xchg
or
mov
or
pop
cmp
mov
ret
and
js
or
aaa
pop
jb
push
lods
aas
inc
jp
je
adc
jecxz
neg
inc
mov
cmp
sarb
iret
jl
or
insl
dec
in
lods
inc
imul
sbb
jmp
stos
call
test
test
mov
push
repnz
inc
orb
rcll
sahf
or
pushl
hlt
fwait
stos
stos
and
mov
jo
sub
and
cmp
fld
je
cwtl
cwtl
pop
dec
sub
or
lock
ja
add
mov
xchg
lahf
jecxz
rcrb
fwait
cmovnp
pop
mov
mov
jp
cmp
sub
test
cmp
jbe
pop
pop
psubq
mov
movsl
xor
mov
rclb
mov
cs
dec
xchg
cwtl
mov
add
cld
clc
ljmp
sub
cmp
addb
divl
std
xor
xchg
cmp
jmp
sbb
cmp
sbb
or
insl
popf
jge
out
int
cmp
int
popa
into
add
gs
popf
push
cs
mov
out
icebp
cmp
fwait
shll
and
icebp
inc
push
xlat
iret
rcrb
jo
push
xchg
mov
pop
pop
sub
sbb
popa
ret
add
in
add
in
es
xorps
scas
outsl
adc
mov
lods
sti
sbb
xchg
mov
sbb
addb
pop
bswap
sahf
pop
dec
lret
mov
mov
mov
adc
or
jo
dec
inc
push
jnp
jae
in
js
ret
mov
push
sbb
aas
in
mov
cld
sbb
aas
rolb
jle
sti
loopne
dec
cmp
data16
xor
sbb
and
fwait
cmc
sti
loop
and
and
fs
lods
das
mov
jmp
subb
push
popf
popf
pop
das
das
push
jns
jnp
mov
jmp
test
sti
in
sub
cmpsl
sub
call
lcall
les
lcall
xchg
popl
shlb
nop
push
jge
sbb
fmulp
jl
fstpl
pop
sbb
lret
ljmp
adc
stc
scas
scas
or
inc
imul
push
add
shr
or
subb
xor
jge
test
lret
xor
je
dec
dec
mov
aaa
lcall
cmc
enter
ss
aaa
aaa
notb
mov
out
test
or
gs
out
ja
loopne
mov
push
cmp
mov
sbb
sub
lods
cmp
jns
mov
and
adc
lahf
daa
lcall
fadd
mov
add
fs
xchg
sub
cmp
stc
and
loopne
out
cli
xchg
jg
das
push
push
xchg
std
stos
ja
lea
jne
stos
mov
ljmp
in
fcmovnu
sbb
adc
lahf
xor
adc
out
push
xchg
mov
mov
ficomps
sbb
lock
sbb
push
push
lea
test
movb
fistps
sbb
into
xor
and
popa
rolb
lcall
mov
fwait
hlt
pop
int3
jecxz
mov
push
ljmp
xchg
aad
imul
lds
mov
test
inc
loope
cld
and
loop
scas
scas
outsl
push
out
inc
icebp
sti
pop
xchg
les
sahf
pop
lret
and
cmpsb
pop
jmp
bound
lock
xchg
sbb
sti
loope
shlb
jecxz
decb
les
pop
flds
bound
out
out
shll
jo
sbb
scas
outsb
cld
addr16
sub
iret
stos
lods
insb
cmpsl
fldt
shll
pop
movsl
testl
xchg
pushf
jne
xchg
das
repz
imul
xlat
int
inc
roll
jo
fwait
mov
cmp
stos
mov
push
mov
sub
mov
add
ljmp
js
adc
mov
inc
loopne
push
mov
jae
sar
dec
xchg
sahf
jno
into
arpl
loopne
loop
and
rolb
popf
xchg
test
ret
add
addr16
aas
mov
imul
loop
mov
inc
ja
mov
mov
divb
xor
aas
inc
mov
iret
in
cmc
std
fisttps
lcall
push
jns
notl
mov
lea
arpl
mov
jne
out
xor
inc
jge
and
mov
out
and
jle
push
fucomp
jecxz
lret
pop
and
stos
in
pusha
cmpsb
jecxz
out
ljmp
dec
cmpsl
addr16
and
push
push
mov
push
out
mov
mov
sahf
cmp
mov
lea
ds
xchg
mov
pop
add
mov
cmp
cmpsb
je
sti
sbb
fistpll
push
xchg
clc
ret
andl
xor
jne
inc
and
loope
add
bswap
lcall
int3
lcall
movsl
or
or
ds
cwtl
in
idivl
jns
mov
into
xor
sub
icebp
insl
jo
dec
add
mov
xchg
es
mov
add
mov
mov
loop
sbb
loope
sbb
sahf
cs
mov
popf
mov
inc
gs
subl
sub
das
testl
and
pop
addr16
pop
cwtl
pop
fdivs
push
sub
xchg
push
adc
lods
inc
and
xchg
xor
cmp
lds
cmp
nop
push
aas
mov
movw
pop
push
sbb
pushf
pop
xor
cltd
pop
sbb
sbb
aas
cli
adc
fildl
and
inc
sbbl
pop
outsl
inc
inc
mov
add
in
cld
shll
fisttpl
push
sub
jo
dec
push
pop
jp
mov
mov
jb
mov
lock
cmp
sbb
scas
jnp
lock
pop
xchg
mov
or
pop
jns
cmpl
sbb
imul
fdivs
js
cmc
cmp
push
sub
sbbl
cmp
add
aaa
iret
loopne
pop
mov
subb
pop
in
sub
mov
cmp
stos
push
cmpsb
mov
in
fs
adc
out
dec
fsubrs
xchg
lods
scas
shrl
cmp
mov
push
add
fsubrl
into
dec
lahf
in
jnp
jmp
pop
dec
in
xlat
jnp
xchg
test
aam
gs
mov
pop
push
cmc
loopne
jb
popa
push
add
mov
dec
pop
lea
lcall
mov
or
clc
xor
or
or
or
xchg
push
addl
imul
in
dec
rdpmc
sbb
insb
pop
dec
mov
sub
insb
mov
icebp
jl
int3
negl
lahf
lcall
push
inc
cmp
mov
cs
xor
cmp
xor
xchg
pushf
inc
and
fwait
inc
cmp
nop
add
mov
push
adc
xchg
out
push
daa
cmp
out
cli
lea
sub
test
ja
ret
inc
pop
imul
adc
push
aad
jae
xchg
sbb
or
aas
popa
movl
mov
pop
sbb
sbb
pop
fstl
jnp
fwait
add
pop
pop
and
bound
loopne
add
pop
inc
gs
test
jecxz
add
fbld
add
pusha
inc
dec
jbe
popa
mov
lods
pop
mov
sub
mov
push
dec
in
mov
xor
add
or
push
xor
movswl
hlt
loope
xor
xor
push
sarb
ss
int
call
ds
mov
mov
lret
test
stc
in
sub
xchg
in
loope
lock
or
xchg
jle
sahf
and
fiadds
sbb
bound
fadd
lret
rorl
sub
jg
int
dec
js
jmp
aaa
sub
push
scas
xchg
shlb
call
andb
cmc
adc
pop
movsl
push
outsb
cltd
lods
push
mov
adc
adc
nop
pusha
push
int
sub
std
sbb
inc
lods
pop
in
add
outsl
cltd
pop
sbb
repz
cltd
and
test
push
add
test
mov
push
or
xchg
nop
call
sub
dec
fmull
push
dec
mov
mov
roll
mov
div
dec
xor
mov
cld
cmp
xor
aas
inc
mov
cmp
outsl
pop
mov
pop
jp
scas
xchg
sti
pop
in
inc
ja
mov
daa
push
mov
inc
and
mov
xchg
loope
and
movsl
mov
pop
inc
mov
outsl
in
sub
push
stos
in
add
mov
xchg
std
stos
mov
push
mov
fs
pop
cmpsl
leave
jge
into
nop
xor
push
mov
fisubs
repnz
mov
shll
adc
mov
jmp
inc
xor
scas
decb
mov
out
jl
lcall
cmp
ja
xlat
mov
sbb
scas
or
push
cmp
dec
pushf
dec
ret
loope
inc
sahf
movsl
mov
das
incb
xchg
mov
movsl
pop
orl
and
orb
sti
lods
jmp
lds
dec
xor
lods
cmpsb
lods
sub
je
mov
push
jno
push
mov
adc
or
adc
ficompl
push
sub
pop
movsb
fildll
dec
rcrb
cmp
stc
mov
popa
and
pop
mov
std
outsb
pusha
mov
ljmp
push
mov
dec
cmp
stos
leave
mov
mov
add
movsl
gs
mov
pop
mov
shlb
sub
xchg
mov
movhps
insl
xchg
nop
dec
stc
call
insb
dec
roll
sti
ss
fstps
mov
sbb
sbb
clc
es
push
gs
adc
test
add
pusha
pusha
ret
inc
add
lods
push
inc
jl
or
stos
jg
lret
mov
xor
cmpsb
jnp
lret
cmpsb
bound
sbb
mov
aad
test
xchg
mov
adc
jo
mov
lock
cli
cld
enter
fwait
jle
pop
sahf
push
mov
xchg
dec
sbb
fisubrl
xor
subb
xor
pop
inc
mov
sub
movd
into
pop
and
sbbb
std
lods
outsl
lret
pop
sub
xchg
push
jmp
enter
adc
arpl
and
push
jne
xchg
scas
mov
icebp
xor
adc
and
push
xchg
cmp
fcmovu
jno
int
dec
js
mov
aas
scas
cwtl
cmp
mov
fists
mov
fwait
mov
add
sbb
push
xchg
pusha
xchg
rolb
add
pop
pop
and
loope
sbbb
push
dec
xor
stc
jp
dec
mov
lret
mov
sub
mov
and
movsb
pop
popa
cmp
cmp
cmpsl
testl
mov
ret
mov
xor
adc
popa
adc
scas
outsl
xor
lods
insl
pop
sub
jl,pt
dec
push
frstor
pop
dec
out
shll
std
fdiv
adc
je
add
aas
push
je
pop
inc
adc
cmpsl
popa
cmp
ljmp
cld
loopne
sub
push
mov
push
sub
sub
inc
mull
push
jo
out
mov
xlat
sbb
adc
loope
push
or
mov
sub
sub
pusha
pop
cwtl
ljmp
sub
ficoms
push
xchg
adc
xchg
ret
xchg
loopne
ds
push
and
rolb
inc
xchg
pop
inc
and
push
dec
mov
subb
lahf
decl
and
push
inc
jae
outsl
fisttps
ret
lds
lds
dec
or
mov
xchg
mov
das
push
or
inc
aaa
jnp
mov
shll
movsb
jg
jb
add
icebp
lock
jne
insl
pop
dec
mov
in
jae
jmp
xchg
lock
jnp
inc
mov
pop
out
sahf
mov
sbb
xchg
mov
jbe
pop
popa
mov
push
sub
mov
adc
out
dec
insl
xor
push
push
lods
sbb
ljmp
out
addr16
test
push
ja
aad
inc
push
xchg
push
adc
jo
adc
xchg
push
inc
jne
sti
sub
cmp
ficompl
sbb
jge
sbb
push
ficompl
pop
jnp
fsubrs
sbb
divl
add
inc
inc
add
and
lret
inc
jle
std
mov
pop
or
xchg
lret
imul
sub
jp
stc
mov
push
or
adc
into
push
das
into
add
xor
mov
xor
fisubrl
cmc
leave
mov
mov
sub
ja
mov
lock
pop
inc
cmovae
jno
inc
mov
sbbl
adc
rcr
and
mov
lahf
pop
lret
jl
jg
ret
push
out
outsb
lret
jp
lret
movsb
lods
movsl
test
push
sub
sub
in
es
cmp
loopne
xchg
push
outsb
lahf
xchg
add
into
arpl
ss
rcrb
jp
xor
in
pop
pop
cwtl
sub
push
add
mov
pop
out
push
push
jge
inc
dec
and
push
add
push
in
push
mov
push
and
roll
fsubp
outsb
pop
rol
mov
bswap
mov
int
push
cmpsb
xlat
je
pop
and
mov
orl
call
nop
shl
loop
xorb
nop
pop
mov
xor
push
jno
mov
sbb
insl
prefetch
repz
pop
fwait
je
push
ss
xor
xor
mov
aas
jno
jb
sahf
add
add
push
mov
mov
jge
sub
imul
les
and
repz
sub
test
ja
enter
iret
push
iret
jb
or
icebp
into
test
adc
int3
jle
cmp
mov
sahf
pop
cmp
das
pop
sbb
push
jnp
pushf
ss
cltd
cmp
mov
aad
into
les
mov
or
cmove
mov
push
addb
add
out
sbb
pop
dec
cs
into
push
jo
jmp
push
stos
inc
dec
cli
dec
mov
jmp
sbb
test
lds
rclb
dec
jae
je
std
push
jno
shrb
inc
pop
or
dec
pop
insl
cmpsb
scas
cmpsb
sub
call
mov
repnz
push
mov
das
fcompl
outsb
add
in
lea
mov
and
fldt
or
mov
loopne
xor
push
cmp
xchg
je
dec
cmpsb
stos
xchg
lret
mov
mov
inc
daa
stos
mov
dec
sub
xchg
adc
shll
shr
fs
in
push
cmp
mov
or
adc
add
jg
and
in
pop
std
test
iret
stos
sbb
xchg
hlt
es
fwait
mov
mov
bound
out
addb
mov
les
pop
lea
adc
inc
ds
stc
pusha
mov
das
dec
lret
pop
inc
out
movsb
mov
data16
jmp
inc
shr
xchg
jns
lds
jbe
repz
mov
in
push
mov
ret
mov
xchg
sbbb
les
jge
xchg
rorb
loop
jp
jno
mov
loopne
jb
ss
push
and
test
sbbb
push
fbld
cmp
mov
addr16
mov
loopne
das
pop
lea
mov
cmpsl
push
cltd
lods
insb
sub
cwtl
sub
push
and
xchg
sub
fisubrs
cmp
xchg
push
adc
mov
movsb
aam
dec
repnz
repnz
mov
mov
insl
mov
sahf
sub
lods
fdiv
add
push
popa
js
push
cmp
es
addr16
andb
mov
andl
ljmp
fstl
and
stos
sbb
movsb
push
and
into
mov
inc
xchg
cmp
jno
adc
push
add
xchg
scas
inc
dec
mov
fldenv
outsl
push
jle
mov
es
jge
fistl
lock
fcoml
mov
jg
sti
mov
js
stc
int3
push
push
imul
xor
xchg
ja
jp
scas
js
lods
and
pop
xor
sti
and
jb
stos
in
mov
lock
nop
mov
mov
in
dec
sub
dec
movsl
test
sub
test
sbb
sub
clc
adc
xchg
sbb
sub
adc
sub
ret
movb
sbb
jle
insb
pushf
aam
cmp
lods
push
lcall
ror
cmpsb
movsb
stc
xchg
int3
mov
es
inc
add
push
inc
add
mov
inc
fisttpll
mov
xor
test
int3
mov
aaa
lret
dec
mov
xor
daa
cs
mov
aaa
jno
jb
mov
test
push
fs
shlb
xor
mov
insl
cmp
mov
xchg
fildl
sbb
push
jg
jg
sbb
ja
sub
cmc
test
lods
add
cmpsb
aam
xor
and
mov
lds
fcompl
inc
push
push
fstpl
cmpb
cmpsb
or
sub
lds
sub
mov
jb
xchg
imul
mov
fs
movsl
shr
or
dec
jbe
fwait
aad
pushl
dec
dec
pop
mov
fwait
stos
mov
test
xchg
cmp
sar
mov
jl
test
dec
jbe
xor
shlb
icebp
test
pop
repnz
adc
andl
int3
jo
or
cs
ja
or
or
enter
test
mov
enter
mov
mov
not
pop
xor
test
mov
icebp
jno
dec
lahf
enter
int3
or
lahf
inc
cmp
cmp
les
aam
xor
divl
xchg
and
gs
xchg
sahf
popa
arpl
and
mov
mov
cmp
aad
add
mov
gs
mov
out
out
scas
mov
ljmp
sub
adc
sub
es
and
push
pop
aam
jmp
repz
cwtl
xor
cmc
fidivs
stos
xchg
inc
cmp
pushf
dec
in
push
add
adc
fdivrl
sbb
dec
pop
mov
push
andl
xchg
add
mov
pop
ja
adc
dec
sarb
lea
inc
ds
sub
rorb
fwait
or
repz
stos
pop
outsb
leave
leave
mov
pop
sbb
in
call
repnz
lret
icebp
aad
jns
out
push
popa
hlt
mov
imul
mov
adc
xor
aam
pusha
sub
lea
adc
xor
ss
pushf
mov
push
cmp
xabort
pop
add
mov
std
mov
cli
ret
scas
xchg
and
adc
push
addr16
popf
jecxz
xor
stos
inc
mov
inc
movb
divb
in
mov
in
gs
push
cmc
fists
push
repz
pop
inc
mov
adc
fcoml
jmp
scas
movsl
xlat
insb
fdivl
or
cltd
pop
push
xlat
js
ss
inc
jg
in
jl
lret
xor
push
sbbb
mov
inc
int3
cmp
stos
sub
std
mov
pusha
or
cld
xorl
les
cmc
leave
rclb
push
mov
icebp
pop
test
lahf
aad
mov
cltd
push
jbe
add
mov
scas
and
push
sbb
test
mov
scas
pop
add
cli
mov
sbb
or
or
out
das
shl
inc
pop
xor
mov
in
sbb
into
scas
mov
push
pop
popf
pop
das
sub
dec
mov
pop
inc
push
es
scas
jp
nop
dec
inc
mov
mov
xlat
jecxz
dec
or
enter
pop
adc
ror
dec
fnstenv
fsubr
sti
int
dec
js
lea
mov
ljmp
out
cltd
cmpsb
jge
cmp
add
xor
sbb
sbbl
movsl
jmp
mov
jo
push
sahf
sub
test
dec
in
movsb
jbe
testl
je
xorl
xchg
xor
fs
in
int
cmp
bound
cmp
mov
jbe
cmp
dec
jge
mov
mov
push
xor
sub
xchg
repz
cltd
xor
lahf
mov
mov
sbb
mov
push
sbb
insb
int
lods
lods
stc
jmp
jge
jmp
test
sub
hlt
imul
cmpsl
addr16
loopne
sub
mov
sbb
jno
or
xchg
push
bound
sub
into
dec
mov
push
iret
jo
and
mov
mov
mov
inc
push
add
jo
add
mov
dec
sti
faddl
enter
inc
jbe
pop
out
rolb
pop
push
popa
sbb
and
pop
dec
rorb
jge
cs
jge
inc
ret
xchg
mov
sbb
data16
aaa
lret
arpl
clc
jle
xor
inc
data16
orl
mov
cmp
out
scas
outsl
pop
sub
scas
fst
jp
xchg
daa
pop
jne
sti
arpl
lods
ud1
and
sti
jp
icebp
ss
or
mov
push
push
add
and
mov
sub
mov
loop
and
cltd
sub
mov
jle
xor
stos
and
sub
test
stos
shl
xchg
clc
sub
mov
or
aam
xor
scas
dec
jb
scas
test
iret
daa
jb
roll
decb
cmp
push
pop
jl
out
sbb
fstps
rcl
bswap
aad
fldl
outsl
data16
push
hlt
inc
sbbl
rcr
pop
mov
pop
ljmp
dec
xchg
cmp
lods
sbb
addl
or
lock
or
imul
aaa
bt
hlt
shrb
jmp
sti
xor
lock
pusha
and
cwtl
xor
mov
int
sbb
cltd
sarl
cltd
cmp
stc
ja
in
or
bound
call
call
and
mov
dec
push
push
int3
add
shlb
sub
call
mov
lret
imulb
and
sub
sahf
pop
push
dec
movsl
in
faddl
fcompl
cwtl
dec
push
aam
loop
cltd
arpl
jno
cmp
cmp
out
cmpl
in
mov
sbb
push
movsl
jae
sbb
lcall
in
andl
dec
add
pop
mov
mov
add
mov
mov
mov
dec
and
mov
dec
lret
daa
cld
pop
mov
test
mov
imul
push
lds
jne
repz
mov
xor
cmp
mov
xor
outsl
leave
ret
and
shl
jne
sti
dec
mov
sbb
jbe
jbe
jmp
cmp
je
pop
mov
js
shlb
adc
stc
testb
cmpsl
xchg
cmpl
orl
or
xchg
dec
pop
imul
lods
or
fcoms
fs
enter
mov
sub
testb
cmc
pop
xchg
xor
adc
jb
insb
pop
sar
shll
das
pop
adc
pop
pop
ficompl
aaa
lods
fstp
lret
jnp
xchg
or
jo
xbegin
inc
push
test
ss
mov
and
push
int
and
push
ljmp
jecxz
push
ds
xor
ror
push
repnz
push
or
sub
inc
test
mov
xor
repz
mov
je
xchg
add
addl
scas
outsl
jle
cld
push
imul
insl
jns
scas
fwait
adc
fcomi
xor
fiaddl
or
shll
and
in
or
lods
mov
rorb
arpl
loope
popa
inc
mov
bound
or
add
scas
scas
outsb
sub
pop
addr16
sub
cmp
shll
sub
insb
push
inc
call
rclb
xor
xchg
push
inc
je
push
push
rcll
xchg
add
in
jb
out
scas
outsl
adc
sti
jo
in
sbb
xchg
push
adc
dec
push
testb
xchg
xorl
cmp
add
adc
xor
rolb
bswap
pusha
xor
lret
loope
cld
addl
out
popa
xor
sbb
mov
jbe
mov
ss
mov
push
jecxz
pop
aas
es
sub
and
jo
mov
or
pop
jb
popf
mov
loop
jb
fwait
mov
aam
cmpsb
mov
das
imul
mov
pop
cmpsl
mov
xchg
mov
cmp
pop
sub
sub
sbb
lods
pop
cs
or
outsl
push
pop
mov
cmp
mov
cmpl
ja
xchg
push
and
jo
push
mov
repz
push
jb
xor
test
lock
add
adc
inc
jge
add
pop
xchg
xchg
xchg
rorb
aas
aam
bound
xchg
into
adc
ret
addl
dec
mov
add
jnp
das
or
inc
ljmp
in
sbb
and
int3
or
stos
ret
enter
imul
sub
adc
mov
or
mov
les
mov
add
push
xor
lock
in
in
lods
insl
scas
iret
mov
insb
scas
cld
mov
idivb
scas
outsb
jp
lods
arpl
imul
sub
xor
mov
mov
push
jae
pushf
mov
jne
cli
mov
pop
dec
fsubl
push
lods
lods
insb
ss
jb
sub
pusha
add
negl
daa
movsl
pop
dec
icebp
loope
push
mov
xchg
push
aaa
hlt
shlb
rcll
adc
and
push
adc
xchg
mov
ret
fidivrs
outsl
pop
jge
mov
in
fcomp
inc
dec
mov
sbb
testl
sub
bound
xorb
std
jnp
add
adcb
sahf
mov
fnsave
sbb
dec
faddp
mov
xchg
test
movl
inc
push
xor
jnp
xor
jns
inc
mov
and
mov
ss
push
dec
push
cs
jge
jle
bound
int
mov
mov
mov
mov
stc
and
fsub
push
mov
aam
push
movsl
sahf
sbb
sti
loope
loope
out
xchg
popa
mov
jmp
add
mov
mov
imul
call
test
test
fs
mov
xor
aaa
adc
xchg
mov
xor
fcoml
fldt
rcrb
push
int
dec
dec
pop
pop
test
xor
mov
aam
xlat
add
push
into
test
push
push
pop
es
divl
int3
and
ret
jg
shr
hlt
adcl
into
mov
out
mov
jle
pop
add
xchg
int
iret
test
outsl
inc
jo
jbe
loopne
mov
repnz
xchg
lods
adc
mov
xor
jl
decb
pop
push
cmp
sbb
fistpll
test
sub
mov
repnz
add
pop
mov
adc
xchg
in
je
jecxz
mov
inc
and
xchg
lcall
inc
sbb
pushf
or
ret
imul
imul
sbb
jge
sub
movsl
and
fxam
adc
shlb
lock
test
mul
xorl
icebp
sbb
pop
mov
int
out
int3
rorl
fsubrl
sbb
ror
fcmovnbe
push
mov
in
add
push
pop
sub
ret
jge
add
mov
jl
xor
es
pop
sbb
std
add
lss
or
and
test
aam
ljmp
lds
xor
lea
ss
mov
imul
add
mov
jle
cmp
test
fdivrl
dec
cmp
fwait
dec
dec
mov
mov
pop
pop
in
sub
mov
daa
adc
mov
in
adcl
iret
je
fnstsw
pop
and
mov
das
out
je
pop
mov
inc
dec
call
cli
sub
stos
aad
call
bound
stos
movsb
jge
leave
mov
or
mov
sbb
adc
xchg
xchg
xchg
sbb
sub
into
orb
lret
push
daa
push
sub
pop
test
xchg
push
test
inc
sbb
push
inc
inc
out
hlt
aaa
ljmp
inc
cmp
stc
dec
mov
add
jle
fwait
sahf
je
sub
pop
loop
mov
xchg
push
sbb
test
jae
cmp
push
mov
test
notb
ja
adc
dec
popa
xchg
mov
es
in
adc
fidivrl
pop
cmp
and
dec
es
sbb
sbb
hlt
fwait
sub
out
sarb
loop
jb
lds
pusha
xor
push
push
cmpsb
jle
inc
rol
pusha
inc
loopne
cmpsl
pop
add
movl
adc
jl
aaa
inc
push
dec
pop
scas
sub
call
daa
gs
aas
out
insl
push
popa
inc
push
test
out
xor
adc
jo
push
sbb
sub
mov
xchg
sahf
mov
jbe
lcall
in
or
fs
adc
aad
sbb
mov
jmp
out
xor
cmp
push
dec
jge
addb
mov
or
lahf
jge
mov
xchg
cld
cwtl
in
cmp
pushl
sbb
mov
add
sub
add
rep
jle
out
divb
icebp
int3
or
adc
sbb
mov
mov
jns
scas
lahf
in
cwtl
shlb
jns
inc
push
push
mov
mov
xor
test
pushf
das
movsb
cli
add
mov
addl
ja
stos
xchg
mov
mov
sub
test
cmp
or
sub
cmpsl
cmc
loopne
mov
mov
xor
adc
cld
iret
xchg
dec
jmp
adc
gs
ficomps
testb
cli
cwtl
xchg
stc
inc
mov
pop
sbb
and
sbb
add
inc
sahf
aad
sbb
adc
jl
stos
add
mov
push
fidivs
pop
cmp
cwtl
dec
insl
mov
data16
mov
fdivrs
addr16
jle
push
mov
shlb
cmpsl
idivb
cmpsb
cmp
sub
test
je
xor
xchg
sbb
mov
pop
dec
pop
mov
aaa
int3
push
arpl
neg
fs
or
xchg
mov
sub
xchg
mov
inc
push
inc
fnsave
and
fistpll
popa
aam
mov
iret
sbb
cmp
stos
stc
inc
mov
int3
inc
cli
sub
movsb
mov
and
js
push
loopne
push
add
push
ror
inc
dec
mov
insb
dec
jmp
or
sbb
aad
dec
pop
sti
dec
adc
xchg
xlat
mov
xor
stc
cmp
xchg
push
xor
mov
push
pop
sub
adcb
ficoms
mov
sbb
jge
xorb
sbb
insl
in
subps
adc
dec
aam
enter
mov
fs
sbb
mov
mov
enter
xlat
je
jno
mov
add
test
ret
mov
cli
fists
cli
int3
popa
push
mov
fisttpll
daa
dec
aas
xchg
mov
jl
sbb
sbb
xor
lcall
loop
jno
aam
cmp
mov
jae
mov
filds
in
loopne
adc
xchg
rcl
out
sub
sbb
dec
adc
adc
addr16
xchg
enter
adc
push
sbb
xor
inc
outsl
mov
sub
inc
in
xor
stos
scas
inc
jle
lcall
sbb
fwait
jae
pop
ficompl
dec
sbb
pop
mov
xchg
fcmovnb
xor
inc
add
popl
verr
and
mov
lods
das
lock
dec
sarl
imul
dec
xchg
fstps
dec
or
xor
outsb
inc
aaa
adc
jb
or
mov
std
mov
popf
xchg
jo
lods
cld
mov
and
outsl
jle
mov
dec
fnstsw
mov
dec
pushf
cli
ss
and
mov
cmp
mov
push
mov
bound
push
and
mov
shll
fistps
jp
out
popf
pop
das
arpl
cwtl
call
imul
sbb
addr16
add
es
sub
xchg
mov
fsubr
out
outsl
lods
imul
and
jmp
nop
sahf
jmp
in
sbb
fstps
xchg
pop
xchg
inc
push
ret
or
dec
int3
mov
mov
lcall
arpl
fmull
add
sar
xor
into
mov
scas
test
or
test
mov
sbb
nop
mov
imul
repz
xor
lods
mov
in
repnz
xor
cld
inc
mov
test
lods
insl
pop
in
jle
fsubrs
mov
fs
inc
dec
jne
mov
mov
mov
sarb
xor
fwait
gs
and
das
jb
sbbl
sbb
inc
or
popf
pop
enter
sub
int3
pop
insb
aad
jle
lock
mov
mov
sub
sbb
sbb
das
repz
icebp
and
mov
in
aad
shrb
pop
push
outsb
pop
nop
sahf
fisubrs
sbb
or
push
cmp
sbb
push
popf
sbbb
es
mov
sar
push
shlb
mov
inc
pusha
dec
std
add
cmovae
pop
dec
addl
dec
in
repz
mov
cmc
push
adc
push
inc
push
xchg
jb
xor
or
arpl
scas
sbb
gs
insl
loop
push
in
push
mov
adc
jae
pop
mov
ss
xor
sub
test
jne
jnp
imul
add
and
popa
cmpsl
popf
mov
and
cs
lret
dec
in
mov
test
jns
daa
lods
lret
xor
jcxz
adc
addr16
nop
test
rclb
adc
mov
mov
outsl
adc
shll
cmpsb
mov
mov
imul
aaa
lcall
cmp
or
inc
dec
loopne
adc
hlt
add
cli
incl
loop
and
mov
iret
push
and
sahf
jae
lret
push
aas
enter
xor
push
mov
fisubl
jae
mov
add
pop
xlat
ret
xor
mov
xor
jmp
aad
xor
int
icebp
ss
or
insl
pop
iret
cmp
mov
cmp
pop
icebp
and
out
cmp
hlt
and
in
mov
adc
roll
mov
addr16
in
movsl
sbb
das
mov
ljmp
into
sub
and
sub
mov
clc
push
push
pop
sbb
xchg
loope
les
outsb
pusha
mov
int
adc
jmp
fidivrl
pop
push
jo
push
dec
pop
cmp
rcrl
es
sbb
mov
pop
sbb
stc
adc
mov
push
fcomp
cwtl
cmp
daa
push
add
ret
push
negb
cli
inc
add
je
push
jns
mov
js
stos
lods
add
cs
movsl
inc
daa
inc
inc
pop
pop
mov
inc
pop
mov
adc
jae
or
sarb
lea
das
adc
mov
rdpmc
dec
outsl
repnz
or
pushf
dec
jg
lock
and
cmp
mov
aam
cwtl
or
js
mov
push
popa
mov
mov
fcoml
js
iret
subl
fnstsw
bound
int
dec
lcall
in
or
xchg
enter
shl
stos
sbb
pop
imul
and
mov
into
ret
adc
push
fsts
inc
push
ljmp
jbe
stc
mov
fildl
mov
mov
mov
adc
fiadds
les
out
mov
mov
addb
scas
leave
sbb
dec
dec
or
in
jge
add
in
push
test
xor
jecxz
data16
jnp
cmp
push
mov
inc
je
mov
inc
mov
xor
arpl
aas
loopne
shr
mov
mov
cmp
std
fimuls
cmp
aam
push
aaa
mov
push
sub
test
inc
xor
outsl
adcb
les
test
push
arpl
shrb
movsl
std
sub
cmp
jnp
add
sbb
pop
movsl
hlt
stos
shrb
out
mov
sub
es
mov
in
add
ss
push
adc
push
rcrb
mov
adc
mov
out
fists
or
or
sbb
or
sbb
cmpb
adcb
inc
jnp
rolb
mov
xchg
inc
sbb
inc
mov
ret
in
mov
outsl
and
js
mov
or
dec
or
sbb
outsb
enter
stos
ds
mov
sub
inc
divb
cltd
jae
hlt
mov
pop
lock
adc
dec
push
and
cmc
jno
ljmp
push
enter
xchg
int
jge
mov
cmp
mov
hlt
clc
out
insl
insl
icebp
push
push
lods
pop
jo
jns
sbb
popa
popa
and
cmpsl
and
loopne
jbe
mov
test
sub
ljmp
jmp
sub
out
cmpsb
call
in
mov
pusha
adc
bound
lahf
xor
out
int
adc
pushf
push
outsl
mov
fwait
icebp
lret
push
cmp
sub
mov
sbb
dec
jl
cmc
iret
fs
in
jne
xchg
cmpsb
mov
push
xor
leave
jmp
push
inc
add
inc
jge
mov
fldl
std
loopne
int
mov
pushf
mov
or
inc
sbb
movl
inc
sbb
mov
insl
inc
inc
nop
xor
and
bound
add
xchg
gs
dec
jl
mov
sbb
gs
push
mov
movsb
hlt
call
mov
push
and
push
aam
aad
or
icebp
fs
popa
popa
xchg
mov
outsl
fbld
popa
pop
sbb
out
into
test
test
or
in
xchg
out
jbe
jb
je
or
pop
adc
xchg
mov
push
aad
adc
int
push
loopne
xchg
iret
cs
xchg
jl
call
xlat
in
pop
jl
xchg
popl
lahf
jg
pop
test
mov
in
pop
fs
xor
and
pop
roll
fdivrl
mov
dec
and
sub
push
jbe
xor
je
xor
stc
stos
aaa
inc
pop
mov
inc
or
or
in
push
cmpsb
scas
ret
mov
sarl
push
shrl
mov
lds
fildll
pop
cld
xor
xchg
cmp
cltd
enter
cmp
clc
mov
lds
jecxz
xor
int
movsb
incl
xchg
nopl
mov
popf
dec
ret
jg
insb
inc
cmpsl
imulb
ja
ljmp
loop
jbe
pop
and
enter
adc
dec
ljmp
xor
pop
shlb
push
push
pop
xchg
lahf
mov
std
pop
fisubrs
fs
jne
loopne
pushf
xlat
cmp
rcrb
pop
push
push
lea
popa
sub
adc
mov
int3
pop
pop
repz
lret
mov
mov
scas
and
cmp
lock
dec
cltd
add
and
bound
sbb
addl
outsb
je
inc
mov
push
clc
test
mov
int3
icebp
add
mov
push
aad
add
int3
pop
or
leave
lret
rorb
cmp
push
cmp
jnp
negb
mov
sub
jmp
out
sbb
cmpsb
data16
ss
jg
and
mov
std
pop
insl
loopne
pusha
dec
mov
mov
jge
and
mov
and
repnz
cmp
popa
pop
negb
pop
imul
jbe
inc
aam
push
adc
in
and
mov
push
adc
jp
sbb
out
ds
jmp
fiaddl
jle
scas
jbe
mul
add
cwtl
aad
cmp
xchg
pusha
mov
movsl
add
arpl
incb
pop
in
shll
mov
sbb
sbb
addl
fwait
fs
jbe
pop
in
push
repnz
je
mov
les
jnp
inc
adc
push
in
shrl
icebp
iret
das
cmp
jmp
jmp
cmp
ss
cmp
scas
jns
fistl
arpl
jbe
jge
aad
and
and
popf
xlat
ret
test
fs
jle
sub
jl
jg
pushf
or
jmp
aaa
daa
push
das
lahf
call
rolb
daa
stc
cli
mov
enter
call
fwait
dec
push
sub
mov
rcrl
pop
aam
xchg
mov
add
icebp
xor
add
fdivrl
mov
std
xchg
or
jge
cmp
or
adc
sbb
cld
loop
stc
xor
daa
js
pop
fwait
push
mov
xchg
and
and
aaa
sbb
xchg
jbe
popf
int
lahf
jge
ret
or
pop
fwait
mov
data16
push
faddl
cmpsl
xchg
lock
or
lea
test
jl
xor
push
test
icebp
add
repnz
clc
mov
xor
cs
sbb
inc
inc
leave
mov
enter
or
idivb
push
popf
lcall
adc
imulb
les
inc
xlat
repnz
cmp
into
pop
cmp
mov
loop
mov
add
pushf
imul
and
jmp
stos
push
or
push
jmp
cmp
dec
cmc
add
sub
cltd
xor
jmp
push
fstpl
sbb
mov
outsb
jbe
insb
pushf
push
add
imul
jns
add
fsubrs
sbb
push
js
test
adcl
and
mov
sbb
mov
cltd
inc
cmp
insl
ret
dec
into
inc
xor
movsl
inc
aad
int3
or
les
jbe
or
hlt
pop
mov
add
xor
mov
cs
mov
es
mov
cmp
in
jge
hlt
jae
gs
cmp
xchg
pop
mov
fdiv
in
fstpl
jne
scas
fucomip
jne,pt
ret
push
and
jecxz
cmp
aam
push
sar
cli
cli
aaa
jge
push
xorl
cmp
and
outsb
outsb
sub
cmp
imul
xor
mov
pop
push
xlat
sbb
adc
xchg
push
adc
rcll
jb
int3
mov
adc
ljmp
sahf
mov
pushf
mov
mov
fiaddl
sub
mov
movsl
aad
test
mov
hlt
shlb
addl
aad
inc
add
repz
enter
mov
pop
or
mov
dec
cmp
loope
dec
inc
or
ret
out
xchg
div
cmp
xor
push
mov
into
mov
xor
shlb
clc
xchg
dec
sub
popa
cmpb
sbb
sahf
das
clc
pop
sub
mov
fldenv
mov
sbb
sub
push
jb
sub
or
add
add
and
and
and
and
mov
lods
fisttpll
and
int
dec
sbb
in
or
out
imul
fptan
xchg
repnz
and
cmpsl
repz
adc
adcb
cmp
cltd
mov
xchg
loopne
push
jmp
lret
lret
insl
adc
push
or
mov
sbb
add
sbb
ret
addr16
mov
aaa
add
xchg
ret
loope
roll
mov
add
arpl
rolb
mov
sub
popf
and
pop
enter
dec
gs
in
fldcw
dec
mov
sub
mov
and
or
shrl
xor
push
jno
in
jns
cs
lds
aaa
imul
pusha
cmp
stc
mov
jp
fsub
orb
mov
add
jecxz
mov
cmp
jne
push
out
fbstp
push
loop
sbb
out
scas
outsb
dec
clc
nop
push
inc
loop
mov
call
pop
popf
or
mov
mov
ja
cli
xor
fists
jbe
aad
xor
shl
arpl
mov
rclb
mov
xlat
cli
sbb
fwait
pop
jl
xchg
xchg
xchg
adc
mov
sar
pop
sbb
xchg
push
clc
mov
jns
movsl
xchg
sbb
es
inc
gs
adcb
pop
aas
sbb
fistpl
sub
cltd
fldcw
in
sbb
lods
dec
out
lea
enter
lret
mov
inc
fdivr
cmp
mov
mov
mov
mov
inc
xor
mov
xor
shlb
lock
lret
adc
cwtl
dec
insl
fimull
fldt
pop
jns
jg
xchg
jns
jb
repz
pusha
sti
jnp
cmp
push
shlb
repnz
loopne
jge
stos
or
xor
stos
imul
enterw
ljmp
cmpsl
addr16
imul
push
jne
xchg
xor
imul
addr16
xchg
push
dec
fisubl
mov
cmpsb
jl
sbb
cmpsl
ss
pop
cmp
pop
sbb
push
xchg
xchg
psrad
iret
push
push
cmpsl
adc
es
jge
pop
push
inc
adc
les
outsb
cmp
cmpsl
orl
aas
xorl
or
int3
mov
fdivl
jl
ret
shl
cmpsb
testb
mov
repz
mov
mov
iret
and
es
movsl
pop
out
out
scas
lcall
mov
jae
sbb
mov
dec
stc
pushf
pop
mov
pop
sub
lds
andb
cmc
mov
inc
sbb
mov
das
jg
mov
lods
or
pop
sub
stos
cmpsl
push
subb
sub
pop
and
push
test
aam
out
mov
add
xchg
adc
and
lds
insl
daa
sti
mov
rclb
jmp
stc
mov
mov
and
fsubrl
mov
xor
adc
push
loopne
loope
movb
jge
push
roll
ret
icebp
cs
mov
ljmp
or
bswap
mov
cmpsb
orl
inc
xchg
imul
lods
add
add
loope
jae
hlt
loop
in
ret
xchg
mov
loope
lock
stc
mov
aas
cltd
pop
jbe
cmp
jne
mov
data16
cmp
xlat
imul
ret
mov
mov
js
jb
inc
popf
in
and
hlt
or
outsl
jl
outsl
lahf
jnp
lods
xchg
insb
lods
fnsave
sbb
outsl
pusha
sub
stos
gs
xor
leave
jne
in
push
repnz
addr16
adc
dec
adc
xchg
push
inc
nop
icebp
and
into
jo
and
rclb
rclb
pop
and
js
dec
aaa
test
push
adc
sub
mov
jg
push
add
fs
into
rolb
movsb
cmp
leave
xchg
inc
lahf
push
sbb
das
sarb
and
mov
adc
add
push
jecxz
mov
lret
cmp
cltd
inc
jmp
dec
mov
sarb
lods
or
mov
pop
loope
inc
xor
xor
adc
mov
mov
sub
pop
je
cmp
mov
imul
iret
in
cmp
and
jbe
push
push
pop
in
pop
lods
inc
fidivrs
ljmp
inc
pop
in
or
mov
lret
sbb
jnp
sub
test
insb
or
jmp
stos
push
jp
xchg
loop
push
push
xchg
sbb
mov
repnz
insb
xorb
sahf
and
push
pushf
imul
or
xchg
fwait
mov
cmp
adc
ficoml
sbb
push
push
in
test
rcrb
or
rorb
dec
jl
push
sbbb
lret
int3
add
mov
mov
or
mov
and
dec
inc
jnp
lods
push
mov
add
out
shlb
cmovo
and
cmpsb
and
or
jp
jnp
mov
jns
dec
jg
cs
mov
add
xchg
jl
stc
test
xchg
xchg
jecxz
sub
push
cmc
aad
xor
aam
repz
cltd
and
push
in
int3
mov
pop
outsb
mov
pop
movsl
stos
jl
outsl
popf
sar
ljmp
jl
pop
sbb
outsl
xor
mov
in
jmp
xor
sbb
mov
push
je
aam
das
pop
andl
add
iret
push
sbb
out
lahf
int
sub
test
pop
xchg
lods
push
lods
fdivrl
pop
mov
cltd
pop
sbb
leave
ja
popf
cmp
fcomps
test
xchg
sbb
cmpb
ret
sbb
icebp
mov
std
aad
iret
add
adc
mov
cmp
jl
jg
stos
or
jns
popa
jp
cmpsb
mov
fs
cmc
mov
inc
push
mov
mov
leave
inc
xchg
adc
lods
mov
icebp
cltd
dec
ss
fs
cmp
jae
test
loope
jnp
jb
mov
or
pushl
pusha
or
test
daa
and
pop
hlt
jle
inc
shl
stc
js
loop
inc
pop
subl
ljmp
sub
fcoml
imul
insb
inc
andl
sbb
add
es
sub
xchg
mov
fucomip
out
outsl
lods
imul
popa
adc
lret
cmpl
cmp
imull
push
or
pop
xchg
sbb
push
xor
mov
jg
sar
xchg
rcrl
ret
adcl
loope
roll
sahf
mov
and
addb
add
ret
mov
das
mov
sbb
sbb
add
xchg
lcall
or
dec
test
xchg
repnz
aaa
test
jbe
repz
hlt
xor
xor
mov
leave
clc
ja
xlat
sar
xor
in
xor
aas
jae
pop
mov
cltd
adc
mov
mov
mov
push
imul
mov
aaa
jecxz
xchg
inc
aam
insl
and
and
or
mov
pop
das
lret
pop
sub
out
in
loop
mov
ret
fiadds
sub
testb
in
adc
imul
shrl
sbb
xchg
mov
lock
nop
sti
pop
out
pop
ss
or
push
dec
jbe
mov
sti
cwtl
cltd
pop
sbb
rcl
push
mov
jbe
repz
xor
xchg
in
dec
dec
ficomps
add
inc
arpl
mov
or
mov
cmp
mov
or
stos
enter
imul
push
adc
hlt
jbe
mov
push
lods
mov
xor
lods
mov
jecxz
jbe
shrb
xor
mov
punpckhbw
sbb
mov
jle
xlat
push
or
cmp
push
or
and
mov
stc
ret
xorb
cwtl
and
jo
aad
add
mov
push
add
mov
lock
add
pop
pop
enter
int
stos
pop
aas
lods
imulb
dec
push
sub
sub
mov
sub
xor
cmc
nop
cmc
aad
les
xchg
cs
xchg
adc
sarb
push
es
das
pop
jmp
xor
sub
ljmp
sbb
xor
sbb
cs
and
mov
aaa
sahf
xchg
mov
ss
xchg
scas
daa
sub
and
lcall
daa
cwtl
out
cmpsb
popf
test
and
fwait
xchg
or
mov
jmp
push
dec
stos
xorl
xor
sub
xor
sub
xor
sub
xor
inc
jp
push
outsl
scas
sbb
pop
js
dec
jge
xor
cmp
jnp
add
or
xor
daa
inc
and
inc
ss
scas
popa
xorl
cmp
or
mov
stos
sub
stos
and
pushf
jle
dec
inc
ljmp
or
jne
or
jl
sbb
outsl
and
sub
xchg
push
outsl
mov
aam
mov
fdiv
sub
sbb
cmp
repnz
call
lock
bound
xchg
jge
cmpsl
xchg
inc
push
jbe
adcl
add
pop
xor
or
cmpb
outsb
sbb
push
mov
dec
push
or
loopne
sub
lret
test
pop
mov
adc
or
inc
adc
mov
lahf
xchg
test
icebp
adc
xor
xorl
xor
in
lea
sub
jle
sti
cmp
test
dec
lret
or
call
int
ss
aaa
daa
rcr
xor
int3
fdivl
and
fidivl
and
xlat
xor
or
sub
mov
mov
pop
mov
mov
add
mov
repz
mov
icebp
adc
mov
mov
mov
cs
xchg
push
dec
repz
fnstcw
xor
mov
sbb
mov
sbb
in
scas
sub
cmp
xchg
adc
and
sbb
mov
cmc
xor
jno
xchg
inc
pushf
mov
sbb
sub
mov
sbb
in
cwtl
dec
lods
popf
mov
or
dec
movsb
fcmovnb
add
inc
es
jns
cli
jmp
idivb
xor
jae
and
icebp
jno
xor
and
lock
jno
push
call
adc
movsl
sti
stos
xchg
mov
pop
cmp
add
sbb
inc
sbb
pop
fdivs
cwtl
sbb
pop
data16
mov
movsb
fs
lcall
sub
mov
sub
jmp
sub
or
cmpsb
imul
adc
gs
dec
or
dec
sub
test
mov
pusha
xchg
xchg
xlat
and
in
xchg
lods
add
and
cmp
mov
dec
out
pop
xor
fidivrl
test
push
jp
cwtl
push
push
and
mov
psubusw
aam
cmp
pop
inc
aas
add
dec
fimuls
cs
lock
and
test
or
hlt
add
repnz
out
mov
cmp
add
xor
notb
dec
mov
insb
nop
test
in
jne
aas
scas
adc
xchg
int3
mov
outsl
jns
sub
lret
enter
mov
cmp
jo
es
mov
and
xor
stc
mov
jo
push
pop
adc
jno
imulb
xor
out
pop
and
xchg
ja
lcall
shr
pop
outsb
icebp
dec
pop
xorl
xlat
loope
cmc
and
jge
pop
ds
mov
mov
xchg
lret
sbb
xchg
dec
sub
push
mov
xchg
xor
pushf
ds
orb
jmp
dec
cld
roll
fldenv
sbb
or
push
enter
cmp
mov
or
or
pop
fwait
icebp
add
loopne
xor
hlt
mov
push
jecxz
mov
pop
cli
fimull
or
stos
xchg
dec
dec
sub
cmp
mov
jno
fwait
je
stos
mov
push
and
xor
in
inc
and
inc
push
stc
mov
mov
insb
and
pushf
jg
and
cmc
push
pop
aad
cmp
mulb
in
ljmp
pop
push
mov
gs
add
adc
xchg
inc
inc
sar
pop
adc
xchg
push
and
int3
mov
adc
ljmp
sbb
mov
adc
sti
dec
add
cltd
mov
jns
test
jle
or
cmp
cmp
add
testb
addl
or
scas
add
fnsave
jno
mov
add
mov
fldcw
or
xchg
test
out
add
daa
stc
movsl
je
icebp
in
int3
mov
test
icebp
lock
mov
mov
dec
mov
or
or
mov
stc
test
ss
sarb
xchg
jecxz
xchg
cmp
ret
and
sahf
out
sub
jg
push
sub
mov
mov
outsb
sub
test
testl
ljmp
inc
ret
sub
test
dec
push
mov
ret
xchg
dec
pop
cmpsb
xchg
xchg
push
sub
lds
aas
pop
stos
push
push
adc
cltd
call
fwait
scas
stos
dec
pushf
rcrb
ss
xchg
lcall
pop
inc
pop
mov
in
dec
cmp
std
push
andl
mov
pop
or
pop
jge
loopne
mov
jge
and
ljmp
or
test
repnz
add
cmp
mov
mov
je
int3
xchg
dec
and
nop
test
pushf
sbbb
cmpsb
mov
push
cld
xchg
ja
jne
or
xchg
cmp
cwtl
jl
fcomps
jge
jg
clc
jne
cwtl
popa
pop
and
test
ffreep
bound
push
out
inc
xor
outsb
mov
inc
loopne
pusha
aas
mov
out
lret
fsubrp
clc
cmc
jle
inc
jmp
add
adc
adc
inc
dec
enter
shll
adc
xchg
in
sub
inc
test
iret
mov
fucomi
dec
push
scas
pushf
stos
xor
dec
sahf
pop
test
inc
jl
adc
imul
ret
clc
xchg
dec
add
fs
or
in
pop
pop
fisubrl
je
jecxz
int
call
and
stc
movq
shr
outsl
lcall
fmul
hlt
push
or
ret
mov
andb
gs
sbb
shl
rolb
lock
jbe
repz
leave
mov
mov
mov
dec
sbb
pop
scas
das
insl
mov
ss
insb
in
js
jl
jbe
sub
clc
jcxz
clc
and
aaa
movsl
push
daa
fs
shl
adc
fisubs
ficoms
pop
and
iret
pop
pusha
loopne
movsl
xchg
nop
popf
out
das
out
mov
push
leave
dec
test
fs
inc
dec
xchg
push
add
xchg
push
or
aaa
rcll
outsb
test
rcl
xchg
adc
or
adc
adc
cmpsl
jp
sahf
pop
sbb
call
mov
pop
rcl
aad
mov
fstl
inc
add
inc
sbb
addl
incl
ret
shrb
inc
mov
outsl
cmp
mov
jle
int3
or
scas
mov
or
repz
test
push
bound
es
test
mov
bound
adc
adc
icebp
mov
xor
lods
adc
out
scas
xor
mov
mov
scas
inc
in
stos
cmp
mov
pop
sub
ljmp
filds
pop
mov
mov
xor
jl
fnstenv
jmp
inc
push
loope
lcall
push
and
xor
outsb
cld
push
mov
int3
paddusb
loopne
xchg
pop
xlat
and
popa
pop
jecxz
pop
ss
pop
or
xor
mov
lcall
adc
inc
dec
lret
pop
fdivl
fstpl
call
outsb
mov
sbb
push
daa
mov
cmpsb
cmp
adc
jecxz
pop
xor
ss
pop
mov
pop
stos
sahf
addb
mov
inc
mov
jae
cmp
mov
hlt
jmp
xchg
fptan
add
lds
nop
push
shl
call
test
add
mov
icebp
test
or
fisttpll
mov
aad
mov
cld
ja
lret
cmc
xlat
jmp
nop
jp
xor
loope
cmp
loop
xor
sub
add
or
sub
fimull
iret
jno
out
enter
xor
loop
rolb
jmp
scas
dec
loop
es
adc
fstps
cmp
popf
inc
cmpsl
pop
adc
inc
mov
aam
adc
xor
jno
imul
out
mov
xor
std
sub
sub
test
sbb
cli
lds
stc
mov
cwtl
sbb
cwtl
xchg
sti
cmpsl
push
push
pusha
xchg
andl
add
jecxz
insl
jbe
clc
addr16
mov
ljmp
mov
leave
push
cmpsb
jbe
testb
leave
push
or
sub
dec
push
adcl
ja
cmpsb
sub
jns
xchg
scas
dec
subl
jae
adc
lcall
enter
dec
push
jbe
repnz
insb
mov
dec
pop
shlb
lock
int
mov
cmc
xchg
jne
xorb
cmc
es
out
fld
outsb
mov
subl
mov
stc
fcompl
sub
in
or
in
dec
rol
mov
sub
push
mov
xchg
push
repnz
adc
shrb
test
adc
jle
ss
jnp
cmp
mov
lea
ficomps
xor
scas
test
jnp
cmp
out
dec
adc
and
aam
jge
inc
les
and
mov
mov
sub
cmpl
ljmp
int3
dec
or
popl
loope
or
xlat
xorb
subb
repz
in
mov
stos
xchg
mov
xor
mov
push
int3
xchg
mov
in
lods
jae
sahf
or
push
adc
mov
mov
out
imul
in
cli
clc
lcall
and
aam
add
flds
popa
pop
fwait
sub
std
adc
xlat
mov
pop
inc
int
add
mov
jmp
outsl
dec
inc
sub
push
ja
mov
ljmp
xchg
sbb
shlb
imul
pushf
pusha
rcl
push
add
int
or
mov
sahf
sbb
mov
add
ljmp
clc
mov
cwtl
pop
daa
mov
jbe
in
arpl
orb
add
fstl
sbbb
or
ds
dec
jmp
ror
mov
mov
movsb
push
sub
inc
add
xchg
inc
je
xchg
inc
imul
push
cmc
xor
nop
jle
pmulhuw
jb
rcrb
fldl
pop
aam
or
or
aaa
cmp
aaa
sbb
ja
cwtl
sbb
stos
jnp
adc
pop
subb
or
mov
xor
mov
lods
pushf
add
or
add
mov
jge
xchg
mov
cmp
lods
pop
insb
push
cmp
cmp
movsb
out
sub
adc
gs
pushf
pushf
int
enter
inc
push
sub
test
add
aaa
xor
pop
jmpw
xor
mov
sbb
fwait
adc
xchg
mov
adc
xchg
imul
lcall
xlat
popa
sub
movb
fs
mov
or
sarl
pop
or
mov
dec
js
nop
inc
pop
int3
stos
dec
sbb
lahf
push
aaa
aam
ret
inc
xchg
sub
xlat
aas
xor
push
add
data16
jae
adc
aaa
xor
mov
loop
mov
outsb
xchg
jl
pop
inc
mov
mov
mov
mov
fistpl
sarb
xchg
or
mov
xchg
daa
out
sub
sbb
xchg
stc
pusha
xlat
ret
xor
mov
cmp
aaa
ljmp
das
out
dec
daa
das
pop
pop
sbb
imul
daa
sub
test
sub
ss
xchg
lds
or
lock
sub
out
add
adc
decl
sbb
lret
in
popf
xchg
xchg
sbb
xchg
pop
mov
loop
ficoml
inc
push
xchg
ficompl
sbb
push
pop
jecxz
add
test
adc
sbbb
dec
add
mov
dec
leave
xchg
adc
hlt
pop
ss
jecxz
insl
stc
data16
mov
rol
clc
test
xor
icebp
xchg
cmp
adc
xor
inc
mov
xor
aad
inc
sbb
cmp
mov
and
ja
cld
mov
xor
addr16
cli
shlb
shlb
cmp
std
dec
and
mov
xchg
or
bound
jecxz
dec
and
movsb
aas
adc
xor
pop
shrb
in
mov
xor
lcall
sub
mov
and
adc
sarl
xchg
pop
aad
dec
jecxz
mov
jne
xchg
ja
mov
leave
out
sub
in
push
jo
xchg
nop
sub
xor
fidivrs
in
add
cmp
and
adc
mov
sarl
movsl
cmp
sti
mov
add
mov
ja
mov
mov
cs
cltd
xor
insl
loope
cs
sbb
add
jb
dec
dec
mov
jae
enter
push
data16
xchg
mov
push
repz
jp
cmpsb
out
and
icebp
adc
mov
cmp
xchg
aad
lods
insl
sbb
jns
repz
xchg
adc
test
icebp
ja
imul
lods
nop
pusha
cmp
push
jb
mov
inc
test
icebp
mov
push
test
fistps
aas
popf
decl
repz
jo
inc
add
push
cmp
mov
cld
test
pop
mov
dec
and
test
push
jmp
inc
mov
lea
icebp
lods
push
adc
mov
mov
sahf
lcall
leave
mov
jp
ret
mov
add
fcoms
imul
xchg
xchg
pop
inc
rcll
gs
and
mov
sub
fistpl
inc
daa
dec
or
js
sub
dec
or
shrb
or
mov
lds
jbe
xor
roll
aad
je
mov
repnz
sub
jno
xor
mov
inc
aas
cli
mov
cld
push
daa
mov
stc
lea
mov
jmp
xchg
addr16
loope
xchg
inc
mov
loopne
loope
sub
lahf
sub
loopne
mov
sub
andb
jmp
and
add
or
out
in
jl
ret
fs
push
loop
or
outsb
enter
push
test
lock
rcll
pop
stos
push
fmul
lea
fwait
lahf
pop
stos
fnsetpm(287
popa
xchg
out
rcrl
sbb
push
in
popa
jno
sbb
inc
add
xor
sub
nop
inc
inc
fs
fcompl
repnz
and
sbb
loopne
dec
je
imul
cmp
adc
cmp
fnstenvs
mov
or
shrb
hlt
aas
mov
cmp
pusha
aaa
divb
and
out
mov
fs
xor
scas
push
loope
sbb
into
lods
clc
pop
enter
mov
cmp
stc
mov
sub
clc
mov
loop
repnz
cmc
mov
inc
and
mov
mov
jecxz
mov
and
sbb
or
pop
push
push
daa
jg
aaa
out
or
cmpsb
sbb
fbstp
and
and
mov
das
movsl
push
outsb
dec
repz
inc
les
rdmsr
and
cli
push
shlb
or
mov
cwtl
dec
pop
js
push
mov
sti
outsl
jns
xchg
mov
aad
mov
dec
rcr
adc
pusha
mov
push
and
pop
mov
pop
and
fs
jmp
fisubl
bswap
mov
cwtl
lahf
push
pop
fimuls
mov
arpl
xchg
mov
lret
mov
notb
sub
cmpsb
sub
repnz
cmc
inc
loope
dec
mov
fisttpll
psubb
cmp
cli
xchg
pop
stos
pop
out
mov
fs
mov
push
ja
inc
movsb
push
push
adc
add
fsubl
jnp
mov
cmp
push
fstpl
mov
test
gs
mov
out
mov
in
cmp
hlt
mov
addr16
push
ret
sub
in
outsb
sub
pop
push
in
mov
jno
or
mov
out
idivl
xor
cwtl
sti
pop
stc
jg
and
mov
ja
inc
popf
add
mov
std
mov
dec
psraw
jecxz,pt
add
addb
mov
pop
jl
out
mov
int3
mov
hlt
in
pusha
fimull
pop
rol
sbb
or
hlt
clc
jne
scas
mov
and
xor
mov
mov
dec
repnz
mov
add
lock
jo
lret
rolb
mov
mov
lcall
js
ret
daa
out
cltd
insl
aam
inc
bound
movsl
inc
mov
dec
inc
loopne
loopne
cmp
sub
and
lret
stos
imul
sub
pop
and
arpl
adc
movsl
movsl
gs
or
aad
shlb
dec
outsl
sub
test
push
pop
in
insl
dec
adc
and
ficomps
fwait
pop
sbb
inc
pop
in
push
cli
ret
add
mov
push
aad
int3
pop
inc
sarl
fiadds
sbb
inc
inc
jb
faddl
in
fsubr
mov
or
leave
call
jge
pop
scas
mov
loope
jb
or
sbb
fs
popa
push
pop
xor
stos
push
dec
out
shl
call
adc
inc
push
in
rcl
data16
out
or
pop
clc
mov
arpl
mov
shrl
cmp
mov
mov
and
jecxz
ffreep
and
and
stos
nop
adcb
out
daa
pop
mov
and
ret
mov
mov
mov
clc
test
lret
ljmp
sub
sub
out
lds
test
mov
sbb
mov
aas
ss
push
test
jmp
jp
xchg
mov
int
jecxz
js
sub
dec
js
push
std
and
sbb
hlt
lret
insb
adc
lcall
ja
cmc
aam
mov
ret
and
mov
loop
inc
packsswb
or
pop
xor
cmc
popf
mov
jbe
fsubp
sub
pop
mov
ljmp
or
out
mull
add
jmp
das
or
data16
hlt
xor
push
jo
ja
imul
out
sbb
fistl
popf
dec
ja
stc
xchg
xchg
stos
jns
cli
xlat
aaa
adc
cmp
js
cmp
data16
fisubrs
shll
mov
sbb
fistps
adc
popf
pop
pop
mov
stos
nop
orl
test
fcoms
movsb
arpl
cmp
push
ss
imul
xor
loope
mov
ret
pop
inc
lret
gs
insl
int
fistpl
subl
int3
in
cltd
pop
hlt
lahf
mov
ljmp
test
fmuls
sarb
sbb
cmp
mov
add
xor
cmp
popa
jo
mov
test
mov
or
xchg
sbb
stos
es
xchg
das
push
add
data16
gs
ja
jae
inc
mov
repnz
mov
mov
lcall
jl
mov
pop
and
mov
cld
idivl
cmp
lcall
push
inc
shlb
loope
xor
mov
pop
shlb
xor
scas
jnp
das
rolb
lods
mov
dec
pop
mov
test
or
je
jb
xchg
test
movsl
inc
das
sbb
push
push
xor
push
adc
push
xor
jae
adc
repnz
in
nop
push
mov
out
lret
sbb
out
lea
cltd
push
sub
and
bound
loopne
mov
mov
jge
enter
cmp
movsb
jbe
repz
inc
hlt
mov
xchg
mov
mov
or
mov
cs
mov
or
rolb
cmp
inc
xchg
dec
not
mov
das
mov
out
shrl
push
add
shll
xor
push
ds
sub
or
cmp
fisttps
cmp
or
sub
or
mov
push
ss
daa
mov
pop
inc
fisubrl
cmp
add
fistpll
and
mov
adc
xor
push
ds
aaa
mov
aad
xor
lret
and
roll
or
push
es
aas
pop
mov
add
inc
and
sbb
adc
mov
dec
out
faddp
ss
enter
mov
xlat
getsec
test
push
push
cli
fnstcw
xchg
ss
pop
mov
pop
jge
adc
add
adc
inc
inc
add
inc
pusha
mov
add
lahf
fnstenv
inc
inc
jae
pop
iret
outsb
popf
mov
or
mov
ljmp
mov
push
mov
mov
lds
pop
ss
and
testl
mov
lret
fnstsw
xor
sbb
cmp
je
dec
mov
pop
roll
movsb
movsl
mov
adc
in
jns
sub
inc
scas
out
cmpsl
subb
dec
push
gs
and
mov
aaa
sbb
mull
sbb
or
and
xchg
adc
out
inc
pop
outsl
xor
mov
jns
xor
mov
pushf
sbb
pop
inc
ficoml
mov
and
push
add
bound
xchg
sahf
jecxz
loope
lret
aam
sbb
mov
gs
jecxz
adc
cld
pop
inc
push
lret
mov
popf
mov
mov
push
jno
test
sub
movsl
xor
repnz
inc
addr16
or
xor
or
adc
mov
sahf
shrb
or
push
mov
leave
sti
pop
or
lds
jle
mov
test
mov
xor
push
cltd
arpl
fwait
mov
in
pop
lret
sarb
setp
shr
cmp
sub
fs
lods
popa
fimull
xchg
les
lea
jmp
sub
nop
inc
xchg
push
pop
or
xchg
pop
mov
adc
rclb
pop
rolb
fisttpll
sbb
lahf
pop
jge
sahf
xchg
xchg
sbb
dec
mov
pop
cmp
mov
push
jmp
fnstenv
daa
into
push
mov
add
mov
les
pop
mov
stc
mov
popf
xor
inc
test
mov
stos
and
jnp
int
xchg
or
jp
test
mov
jne
aaa
mov
clc
shll
jge
xchg
outsb
push
ljmp
jle
shlb
pop
sub
aaa
cmc
in
lods
mov
sti
iret
daa
inc
cmp
ja
and
xchg
loop
and
mov
xchg
mov
sbb
cwtl
data16
jns
mov
adc
out
push
int
or
rorl
lea
mov
and
mov
out
dec
push
pop
int
lds
movsl
inc
pop
sub
push
xor
dec
aam
popa
dec
push
xor
xor
adc
fwait
jo
push
push
push
push
insl
int3
int
fidivrl
xchg
mov
xchg
mov
xor
int3
hlt
movl
aaa
add
push
inc
out
xorb
lds
idivl
xor
inc
inc
add
inc
enter
xor
inc
icebp
sbb
leave
sub
stos
sbb
in
mov
test
push
add
xchg
inc
pop
rolb
jo
xor
xor
rol
xor
sbb
cli
pop
or
dec
jl
mov
push
cmp
push
js
mov
mov
add
pop
test
xor
imul
shlb
sub
cmp
and
jae
lahf
add
mov
add
outsb
out
cmp
sub
push
mov
cmp
push
push
pop
enter
or
cmpsb
mov
jno
pandn
xor
rcl
xchg
adc
push
dec
outsl
dec
adc
fdivrl
fwait
pop
xchg
cmp
sbb
cwtl
ss
fs
out
pop
adc
xchg
mov
push
xchg
mov
jge
mov
hlt
bound
lahf
sbb
addb
loopne
mov
sbb
mov
mov
int3
pop
dec
sub
imul
rcrl
call
adc
jmp
dec
push
adc
xor
jle
mov
sar
mov
inc
rclb
in
adc
push
push
aaa
jne
mov
push
test
mov
inc
mov
or
xor
mov
xor
mov
mov
fistps
pusha
ds
std
mov
and
mov
add
subb
xchg
push
ja
faddl
dec
adc
scas
and
add
dec
repz
nop
mov
ljmp
loope
adc
and
and
mov
sbb
cli
jno
push
dec
pop
jl
xchg
addr16
mov
fs
andl
in
add
sbb
xchg
xchg
icebp
add
pushf
mov
pop
pop
cltd
std
cmp
mov
cmp
mov
push
repz
xchg
push
push
push
cmpl
cmpb
roll
xchg
lock
push
mov
mov
ds
int3
ds
dec
jnp
cmp
insb
and
pop
xchg
sbb
xor
sub
push
xor
in
test
call
das
jo
fldt
pop
mov
loope
cmp
fstpl
cmp
loope
movsb
movsb
lcall
sbb
xchg
xlat
pop
fsub
jb
xchg
push
repnz
mov
adc
pop
pop
sbb
push
scas
outsb
inc
call
leave
lds
data16
cmpps
imul
push
imul
inc
xchg
lea
rcrl
pop
pop
adc
push
sbbl
xor
add
fwait
jns
inc
addb
lods
adc
fmul
jge
mov
inc
dec
push
in
test
mov
mov
aaa
call
aam
cmp
movsb
push
mov
sarl
pop
sarl
mov
out
into
aas
lock
lret
sti
mov
cmp
out
pop
and
cli
mov
mov
das
inc
cmp
sub
and
ss
mov
fs
mov
shlb
fistps
arpl
insl
popf
adc
jecxz
push
icebp
cmpsl
jge
add
loop
daa
mov
mov
aam
test
push
adc
adc
gs
xchg
mov
shlb
sbb
jo
xor
push
push
push
stos
imul
sbb
fwait
mov
pop
mov
fidivrl
add
js
push
popf
sbbl
adcb
nop
inc
inc
add
sahf
adc
add
push
and
mov
lcall
pop
adc
add
mov
or
leave
adc
or
xor
xchg
fchs
sti
loop
shlb
aaa
aaa
notb
aaa
adc
cmpsb
in
cmp
icebp
or
sarl
inc
pop
sbb
bound
or
jnp
jno
js
adc
cli
xor
jp
mov
sar
pop
pop
ss
popa
cmp
and
and
push
imul
pusha
mov
jle
pop
ret
adc
fistpll
std
pop
movsl
cwtl
mov
sub
arpl
movsb
movsl
sub
cmpb
out
cltd
stc
out
push
push
fbld
xchg
out
lods
xchg
jb
xchg
xchg
dec
pop
adc
daa
notrack
cmp
xor
inc
cmp
dec
pop
aaa
jle
push
xchg
push
push
pop
fldenv
xor
pop
jae
mov
fdivrs
and
fwait
push
xchg
nop
inc
inc
sbb
jecxz
or
ss
popa
mov
add
sub
inc
mov
gs
add
ret
or
iret
icebp
lret
push
lret
dec
jo
scas
xchg
not
inc
jns
movsb
jo
pop
jmp
jne
push
or
adc
add
lock
mov
cmpsl
js
enter
push
lcall
mov
jb
mov
pop
incl
cmpsb
aam
out
cs
bound
adc
mov
inc
popa
pop
and
outsl
das
scas
fildll
xor
inc
cmpsl
mov
test
rorl
push
fs
mov
cs
xchg
xchg
push
adc
shll
ret
jno
xchg
fwait
gs
fwait
pushf
jle
bswap
or
mov
sub
aam
sub
shll
sbb
xchg
push
adc
xchg
cmpsb
cmp
iret
int3
dec
movsl
pop
jge
repz
rcll
hlt
fwait
ret
pop
inc
adc
pop
jge
cmovnp
mov
cmp
sbb
xchg
add
mov
or
mov
into
jno
aaa
xchg
cmpsb
mov
inc
jae
xor
in
inc
xor
mov
sarb
out
ss
jo
mov
xor
into
fidivrs
sbb
cmp
imull
pop
mov
mov
shlb
mov
and
test
add
and
sub
jle
insb
sbb
stos
imul
stos
mov
sub
stos
push
pop
inc
jb
jb
aas
pop
jecxz
or
imul
lahf
xchg
xchg
dec
pop
and
and
out
int
sub
add
clc
gs
sbb
sbb
pop
lahf
xchg
cwtl
fcomps
add
ret
loopne
jmp
les
add
subb
push
add
sub
pop
mov
insl
out
add
and
ret
leave
cli
movsb
ret
fdivr
mov
call
mov
cs
and
aas
hlt
roll
cs
test
iret
jle
scas
mov
lret
in
or
or
mov
sbb
sahf
cmp
mov
cmc
cmp
sub
popf
stc
sbb
in
pavgb
xor
sbb
xchg
adc
test
lods
popf
pop
das
out
out
jns
.byte
sub
or
xor
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
add
or
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
lea
les
jb
insb
gs
push
inc
sub
arpl
and
xor
fs
insb
and
and
and
and
arpl
and
xor
xor
and
and
arpl
popa
imul
imul
inc
insb
imul
or
les
pop
xor
cmp
outsl
imul
gs
imul
xor
sub
arpl
insb
imul
cs
arpl
jae
cs
arpl
addr16
or
cmp
bound
imul
sub
cmp
bound
imul
or
cmp
jno
jno
and
sub
cmp
bound
imul
outsb
and
jne
push
insl
and
jae
insl
jns
imul
je
insl
and
jb
aas
or
cmp
jno
jno
and
cs
jns
jns
jne
popa
jb
and
jb
and
and
sub
cmp
bound
imul
ja
outsb
je
je
and
outsb
insb
outsl
popa
and
data16
popa
jb
and
and
xor
or
xor
xor
jno
jno
and
push
xor
cmp
push
and
sub
or
cmp
inc
imul
and
data16
popa
jb
and
je
inc
and
ja
outsl
ja
insb
outsl
popa
fs
and
and
xor
addr16
inc
and
ja
insl
jo
arpl
or
cmp
jno
jno
and
jae
cmp
or
cmp
jo
imul
push
pop
xor
cmp
bound
imul
push
and
je
ja
je
and
jb
and
jne
arpl
and
je
imul
cmp
xor
cmp
insb
gs
and
jns
jne
outsl
outsb
je
ja
outsb
je
je
and
insb
jo
and
and
jns
jne
outsl
outsb
je
imul
or
cmp
xor
cmp
gs
and
popa
insb
insb
jns
and
gs
and
jne
push
and
and
or
cmp
xor
cmp
insb
gs
jbe
jb
insl
imul
xor
xor
pop
and
imul
imul
or
xor
pop
and
imul
insb
insb
popa
and
fs
imul
sub
cmp
sub
push
insb
cs
outsb
gs
or
xor
pop
and
sub
jae
je
and
fs
sub
bound
insb
popa
or
xor
pop
and
popa
insb
insb
popa
and
popa
je
insl
gs
jae
sub
aas
or
xor
pop
and
imul
insb
popa
or
xor
pop
and
insb
outsl
insb
or
xor
push
popa
and
push
popa
or
or
cmp
xor
outsl
imul
outsb
popa
xor
xor
sub
popa
outsb
popa
inc
jo
xor
xor
cs
popa
insb
imul
or
cmp
imul
and
sub
push
push
outsb
je
and
arpl
je
ja
je
and
and
or
cmp
imul
and
je
cmp
das
ja
ja
jae
insl
insl
gs
insb
imul
data16
fs
je
jo
imul
aas
imul
or
cmp
xor
push
gs
imul
das
or
cmp
inc
outsl
jb
pop
and
je
and
fs
sub
cmp
cmp
push
gs
imul
dec
inc
inc
inc
or
cmp
jne
je
cmp
imul
or
push
add
add
jmp
jmp
int
jmp
lcall
add
add
and
add
add
mov
call
lea
call
call
loop
jmp
imul
add
call
jmp
movl
inc
jmp
call
lcall
add
add
imul
pop
sub
mov
lea
mov
lods
rol
clc
nop
ror
jmp
ret
call
shll
sub
dec
add
clc
stc
add
nop
xor
stc
nop
add
dec
jmp
jmp
stos
loop
xchg
push
in
dec
add
sbb
popf
mov
divl
mov
and
cmpsb
pop
repz
sub
loope
add
movsl
mov
jg
pop
inc
xor
popf
or
notb
jle
lea
insl
inc
stos
inc
pop
dec
sarb
arpl
pushf
xor
out
jne
xor
int
push
ret
pop
adc
dec
and
xchg
or
inc
add
fisttpll
jle
fistpl
adc
lret
sbb
push
or
fsub
jle
mov
jecxz
add
sbbl
add
sbbb
jns
adc
out
fs
stos
ds
pop
into
imul
pop
imul
in
sti
push
or
imul
cmp
mov
hlt
cmpsb
dec
xor
mov
roll
dec
add
mov
inc
in
lods
insl
fcomps
pop
push
enter
adc
mov
xor
mov
fnstenv
inc
jne
out
add
sub
test
loope
gs
mov
outsl
and
popf
inc
gs
scas
outsb
int
dec
cmp
push
mov
push
mov
clc
test
bnd
jne
loop
bound
xchg
adcl
sahf
push
adc
mov
sub
inc
inc
push
int
imul
lods
lcall
insb
add
xchg
pop
sbb
adc
dec
call
andl
jne
nop
inc
roll
add
fists
xchg
push
xor
sbb
outsl
mov
fisttpl
mov
test
or
push
in
jle
xchg
push
testl
dec
ss
je
movsb
out
mov
repnz
pop
add
mov
testl
cmp
sbb
stc
or
das
mov
cmp
test
stc
add
cmp
inc
fmulp
mov
mov
mov
fisttpll
adc
mov
cmp
les
add
cmpsl
sub
fdiv
movsl
popf
pop
mov
xchg
push
jecxz
pop
inc
xor
xchg
add
enter
int3
nop
xchg
loopne
dec
ud1
int
adc
scas
pop
mov
jmp
insb
sbb
hlt
cmp
mov
xchg
push
sbb
sbbb
sub
mov
jns
and
xor
add
xorb
inc
aad
lret
jge
into
outsb
fidivs
lea
or
mov
cltd
insl
or
push
or
add
mov
jp
dec
int3
mov
stos
xchg
adc
imull
ss
xchg
dec
mov
popf
mov
cld
dec
setns
mov
mov
ja
ja
and
xchg
hlt
adcb
and
pop
mov
shlb
and
fcompl
outsb
cmp
mov
xor
sub
xchg
adc
add
aas
out
lcall
and
inc
mov
sbb
jp
add
nop
add
ret
std
movsl
inc
outsb
sbb
sti
outsb
jbe
mov
cli
cwtl
sbb
xchg
loop
dec
sbb
in
jb
xchg
push
pop
in
fisttpll
cltd
add
incb
stc
adc
jg
stos
push
pop
hlt
int
mov
or
mov
rcll
mov
sti
cmp
rol
or
push
add
aad
test
xchg
jecxz
adc
rcr
xor
adc
mov
mov
xor
out
or
lods
fildl
stos
xor
sbb
mov
roll
ja
or
mov
mov
inc
daa
push
rcrl
jecxz
arpl
test
xor
lods
xchg
mov
lds
inc
jo
jle
jne
cmp
sbb
sub
cmpsb
test
pushf
pop
ja
jmp
adc
idivl
push
data16
out
test
ficoms
push
adc
in
fisttpll
cmp
push
mov
clc
jmp
sbb
pop
ret
das
dec
fcompl
sbb
pop
test
cwtl
push
jns
int3
in
push
cmp
movb
nop
nop
lea
lds
ret
loopne
pop
loop
addb
adc
xor
mov
int3
or
sbb
xchg
or
inc
sbb
push
jbe
xor
mov
add
hlt
sbb
js
jno
loop
ja
dec
push
lock
xchg
dec
and
aas
mov
pop
scas
outsl
and
cltd
clc
jns
cli
mov
mov
cmp
movsb
sbb
cwtl
mov
jecxz
mov
mov
repnz
aam
push
std
inc
ljmp
mov
push
insl
dec
pop
cmpsb
mov
ljmp
dec
pop
xchg
test
sti
pop
xchg
push
sbb
imul
dec
dec
adc
xchg
mov
pop
sbb
pop
jge
movsb
mov
xchg
jg
sbb
pop
stos
jb
daa
hlt
sti
jmp
xchg
pop
clc
clc
repz
inc
add
add
enter
jb
mov
mov
lock
mov
ucomiss
adc
mov
sub
jns
dec
adc
xor
es
sub
and
inc
xlat
inc
or
inc
fisubl
imul
xchg
mov
dec
inc
ja
dec
dec
mov
sub
dec
adc
sarl
mov
sub
stos
sarl
or
imul
adc
xor
xchg
dec
mov
mov
popf
mov
jge
out
push
sub
jmp
aam
xor
xchg
fs
imul
xchg
or
cwtl
push
inc
mov
dec
dec
int3
shlb
cwtl
shl
loope
dec
dec
jecxz
inc
inc
dec
xor
jb
arpl
adc
outsb
dec
roll
inc
insl
les
adc
and
inc
ret
ja
push
imul
es
pushf
shrl
pop
lods
and
xor
pop
mov
push
daa
pop
inc
data16
xchg
dec
or
leave
lahf
jecxz
lcall
enter
lds
jbe
repz
xor
icebp
mov
fsubl
dec
xchg
pop
push
fiaddl
cmp
in
lods
lods
inc
xchg
and
sbb
sbb
ljmp
cmp
mov
cmp
mov
jne
nop
shll
repz
xor
and
mov
pop
and
mov
pop
sub
dec
test
in
lods
insb
sub
test
push
out
addr16
test
es
gs
xchg
push
adc
xchg
push
adc
rcll
push
adc
dec
adc
nop
push
push
int
dec
pop
ficomps
pop
sbb
fstps
pop
sbb
xchg
push
sbb
cwtl
pop
push
aad
push
pop
movb
add
roll
add
mov
inc
ds
mov
dec
or
mov
int3
mov
mov
lret
or
xchg
enter
lds
jbe
repz
xor
icebp
mov
xor
mov
xor
scas
outsl
xor
mov
cs
lods
insl
aas
mov
jnp
cld
mov
jns
cli
mov
ja
clc
mov
jne
out
data16
mov
fs
mov
bound
fistps
pusha
push
fstpl
outsb
sub
stos
imul
test
push
out
addr16
test
es
gs
xchg
push
adc
xchg
push
adc
rcll
push
adc
dec
adc
nop
push
push
int
dec
pop
ficomps
pop
sbb
fstps
pop
sbb
xchg
push
sbb
cwtl
pop
push
aad
push
pop
movb
add
roll
add
mov
add
roll
pop
test
inc
ret
aam
into
cmp
enter
jle
lret
dec
dec
add
fs
mov
mov
inc
mov
jbe
inc
jb
repnz
inc
xor
mov
mov
inc
jae
repz
mov
mov
data16
mov
cmp
outsb
daa
cmp
loop
bound
fistpll
sub
out
scas
mov
and
test
mov
sub
and
mov
movsl
gs
xchg
es
in
jmp
fstl
sub
stos
pop
push
adc
xchg
gs
rclb
add
jnp
add
