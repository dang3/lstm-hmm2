jnp
fptan
dec
inc
inc
xchg
xchg
leave
scas
mov
mov
inc
into
stos
addb
jbe
mov
add
int
push
cs
pop
insl
lods
sbb
cltd
dec
pop
clc
xor
mov
jbe
inc
xor
rcl
stos
xor
push
add
push
leave
mov
or
pop
aad
cli
out
push
fisttps
xor
mov
mov
cwtl
xchg
xchg
push
push
pop
mov
xlat
dec
out
push
cmpsb
ret
dec
fiaddl
mov
cli
cmpsb
pop
imul
sahf
sahf
xor
mov
sub
and
adc
push
pop
enter
lds
incl
cwtl
jbe
fs
cmp
inc
mov
movsb
lods
and
mov
dec
dec
out
push
fldcw
pop
fwait
divps
inc
pop
std
add
jo
push
jg
mov
pop
xchg
std
xchg
shr
cli
jb
pop
mov
je
imul
fidivrs
neg
jmp
cmp
outsb
rcl
jbe
lods
push
push
ret
mov
push
xor
push
mov
and
push
icebp
lds
lretw
pusha
aam
mov
insb
pop
insb
pop
push
lds
cmpsl
xlat
out
shlb
inc
lock
aad
dec
lods
in
decl
stos
stos
push
sub
mov
xor
pop
xor
xchg
mov
mov
inc
aam
mov
adc
sub
faddl
xlat
push
into
xor
js
ss
sahf
int3
sahf
outsl
dec
cmp
mov
xlat
loop
loop
push
jae
jg
cmp
push
mov
xor
and
push
or
jmp
shl
push
mov
push
fsubl
adc
outsb
push
into
mov
jg
vcvtss2sd
push
push
rcrb
test
stos
pop
leave
cwtl
jns
push
sub
mov
pop
cmp
dec
jae
mov
out
scas
insl
jp
cmpsl
hlt
dec
mov
push
push
lds
out
push
popf
aas
jmp
outsb
or
shr
sbb
cmp
sub
data16
out
cmpsb
divw
push
pop
das
outsb
aas
adc
push
mov
cmp
scas
mov
inc
or
xor
adc
mov
jg
mov
xor
cmp
scas
xlat
push
decb
adc
push
test
xchg
outsb
xchg
sub
push
mov
dec
insb
sbbb
dec
leave
mov
fsubrs
xor
jp
mov
xchg
lret
xor
mov
cmp
push
ss
xchg
stc
pop
inc
fcomip
aaa
add
nop
sbb
rol
ds
pop
mov
iret
cmpl
repnz
pusha
push
adc
outsb
test
call
mov
cmp
ljmp
std
mov
lods
or
sub
cmc
in
notl
pushf
stos
inc
xchg
mov
aas
ret
out
js
push
inc
mov
push
pop
push
mov
and
push
insb
aam
mov
pusha
stos
push
in
adc
fdivs
cmp
outsb
movsb
or
mov
pop
jge
das
xor
fsubr
cli
lods
fimull
in
dec
sbb
dec
add
xor
push
dec
jnp
fdivl
xchg
fldpi
jbe
inc
jmp
mov
lds
dec
mov
repnz
nopl
cmp
lret
push
scas
lret
enter
pop
pusha
test
sti
mov
or
out
dec
xchg
inc
aaa
into
mov
xor
loopne
fdiv
cwtl
push
pop
ss
pop
sbb
cwtl
mov
dec
cmpb
scas
rol
or
lds
cmc
test
pop
stos
in
sbb
mov
mov
or
div
mov
mov
rcll
mov
dec
mov
sahf
sub
mov
out
add
adc
push
imul
sti
mov
pop
inc
cli
push
mov
in
shrl
jl
and
fs
sahf
xchg
xchg
adc
icebp
mov
shlb
cwtl
add
lock
add
fistps
push
fcmovbe
fistl
das
push
push
push
mov
call
in
cmp
dec
inc
pop
rcr
fcoml
dec
and
lret
sub
push
aaa
pop
fimull
sub
ljmp
repnz
shrb
test
sbb
and
pushf
clc
push
sub
rolb
mov
dec
aas
jl
out
sti
popl
fstl
outsb
arpl
mov
mov
test
cmp
dec
jle
dec
popf
or
push
xchg
lock
mov
andb
adc
rcrl
sub
loop
jle
pop
and
mov
jae
xchg
mov
push
sub
jp
mov
jle
push
dec
xlat
fistpll
dec
sahf
inc
xor
xchg
imul
notb
pop
decb
dec
mov
lret
dec
rorb
inc
and
pop
stos
call
ds
repnz
lea
dec
insb
hlt
xor
ljmp
mov
sahf
dec
mov
clc
stos
sbb
dec
imul
xchg
push
data16
jmp
push
outsb
add
xchg
jae
add
pop
sbb
fnstcw
dec
ds
push
jp
ds
popf
pop
mov
jecxz
ret
cmc
scas
test
repz
negl
into
js
and
xlat
sbb
cwtl
aad
mov
out
jmp
enter
fstps
mov
lcall
test
out
cmpsl
sahf
or
sub
xchg
sbb
adc
sbb
pop
add
pop
adc
xlat
push
lcall
push
enter
xor
mov
or
int
loop
xchg
xchg
mov
lret
test
or
pop
push
sub
pop
lods
sbb
lret
or
mov
pop
sub
mov
mov
push
adc
lret
push
test
std
addr16
add
fisttpl
adc
or
icebp
test
roll
mov
out
outsb
rcrl
std
cli
pop
scas
mov
test
pop
or
cltd
push
mov
push
in
adc
in
sub
mov
stos
ds
jle
pop
adc
jge
xchg
int
pop
ljmp
and
mov
pop
cltd
mov
test
test
mov
dec
arpl
pop
mov
dec
sub
pop
pushf
adc
mov
out
adc
fnstsw
in
dec
mov
jp
sbb
and
test
xchg
andb
rcrb
adc
test
scas
mov
outsb
jns
in
fstp
cmpl
fucomi
cs
sti
ss
fidivs
sbb
push
push
mov
pop
popf
fiaddl
cmp
jns
cs
out
or
push
mov
in
fwait
xchg
xor
jns
test
mov
daa
out
out
pushf
out
cmp
test
cmpsb
xchg
mov
or
jb
loop
in
mov
mov
dec
lret
inc
xor
dec
fistpl
out
mov
es
jbe
adc
add
loope
out
fnstsw
clc
jle
push
or
xchg
pop
addb
jae
and
popa
lods
inc
push
mov
imul
inc
xor
lock
jecxz
cmp
xchg
sbb
test
jp
push
loopne
scas
mov
pusha
mov
push
sub
ja
arpl
out
daa
jecxz
data16
outsl
das
imul
movsb
jbe
loope
jo
call
pop
jo
pop
push
sbb
shlb
ret
cmp
bound
enter
push
jne
mov
adc
dec
jge
ficoml
mov
repz
addr16
mov
lret
pop
lret
mov
mov
repnz
mov
cltd
push
or
mov
xchg
add
add
popa
cmp
adc
cmpsb
hlt
scas
pop
test
icebp
dec
cmp
into
scas
cmpsb
jp
into
push
dec
jae
mov
mov
add
push
mov
jle
out
jns
fsubp
sub
xor
idivb
notl
and
js
pop
fadd
int3
push
repz
in
push
push
mov
ljmp
loopne
push
adc
mov
sub
inc
pop
xchg
test
int
cmp
adcl
mov
xchg
sbbl
sbb
cmpsb
shl
cld
xlat
stos
shr
pop
xchg
jmp
or
inc
mov
jo
mov
push
ds
out
cmp
sub
mov
push
add
or
data16
aam
cs
sub
shll
jecxz
xchg
and
jecxz
call
lock
shlb
mov
push
dec
jecxz
pop
cmp
rorl
mov
inc
sub
loope
das
shr
aam
in
scas
cmp
shll
pop
enter
hlt
mov
out
in
out
xor
fnsave
outsb
add
push
ficompl
lods
xchg
mov
lds
lods
pop
mov
jbe
scas
push
dec
cmp
test
lods
incb
out
add
out
pop
insl
push
sar
inc
cmc
mov
add
mov
xorl
or
pop
or
mov
sbb
pop
or
push
into
sti
bound
sbb
sbb
push
and
or
xor
sarb
mov
aam
jge
push
cli
das
test
out
sbb
or
call
shll
add
divl
lds
mov
cmpsl
jle
jbe
mov
int
inc
push
movsl
movsb
sbb
or
clc
push
cs
mov
movsb
jp
dec
ficoms
aaa
mov
cmp
mov
or
iret
xchg
mov
push
icebp
out
xchg
insl
push
stos
mov
inc
sub
insb
shlb
sub
popf
fdivs
mov
lret
orb
mov
xor
movsb
or
push
jp
ljmp
xchg
outsb
loope
cwtl
push
push
fistpl
lahf
push
cwtl
jecxz
scas
inc
push
cmp
xchg
insb
sub
inc
sti
adc
sub
movsl
pop
hlt
pop
packssdw
cmpsb
or
addb
push
outsl
sahf
cmpsl
push
push
outsb
cmp
mov
lret
pop
imul
push
data16
jmp
sub
hlt
orb
in
mov
repnz
inc
jp
aas
cs
pop
outsb
scas
sub
fwait
or
shrb
or
mull
aad
add
mov
lods
outsb
div
fimull
in
pop
jp
jp
push
scas
outsl
xchg
push
add
add
mov
cmp
in
xchg
aaa
cmp
sbb
mov
inc
in
xlat
out
into
pushf
sbbl
int3
push
xchg
xchg
iret
cwtl
lock
psrad
sbb
ret
inc
movb
dec
mov
enter
pop
xchg
filds
inc
loopne
add
dec
push
iret
pop
scas
cwtl
or
mov
xchg
xchg
mov
addr16
xor
mov
repz
clc
mov
in
jmp
out
xor
cmp
fmuls
mov
scas
add
push
add
mov
cld
test
lret
pop
xor
sub
xchg
into
cmc
push
test
or
pop
dec
push
loop
ljmp
lock
dec
push
cmp
jmp
push
cltd
jmp
popa
mov
ret
dec
lea
iret
test
mov
add
adc
jbe
mov
popf
imul
mov
fsqrt
cmpsl
mov
adc
sub
movsl
rorb
roll
out
inc
pop
fistps
out
dec
jg
scas
shlb
mov
lret
or
bound
ffree
sar
mov
cmpsb
push
dec
js
xor
jns
fld
scas
fcmovne
stos
shrb
jbe
mov
and
mov
pop
cli
bound
mov
xchg
mov
cmp
dec
stos
inc
gs
iret
mov
xchg
sub
and
jmp
incb
out
aam
add
daa
xchg
sbb
xchg
lret
lea
pop
add
sub
pop
mov
mov
inc
cmp
cmpsb
icebp
adc
inc
adc
push
mov
and
cmc
mov
jb
lea
mov
test
pop
imul
mov
scas
mov
cmpb
mov
xor
mov
lea
stc
aas
and
lods
or
arpl
inc
shlb
mov
stos
xor
test
mov
leave
fbstp
cmp
stos
xor
mov
mov
mov
or
fadds
pop
rcrb
scas
std
sub
rclb
xchg
ror
jmp
addr16
insb
pop
aam
dec
lahf
adc
xchg
testl
adc
fnstenv
pop
call
repnz
jo
inc
and
mov
push
stos
or
jbe
pop
out
js
das
pop
repnz
jb
cwtl
jle
push
lock
add
cltd
stc
mov
jl
jae
mov
enter
jne
push
lods
adc
push
push
or
cmpsb
ljmp
test
mov
inc
ret
mov
leave
add
rorl
dec
fistl
loopne
test
fsubr
js
insb
cltd
or
sbb
or
mov
or
imul
fsubs
mov
mov
popf
pop
and
mov
push
iret
dec
pop
cmp
xor
sarb
inc
es
das
inc
aad
imul
rorb
stos
push
inc
mov
xchg
ljmp
clc
fxch
jmp
sub
mov
mov
mov
pop
dec
sbb
mov
gs
es
inc
pop
fs
xchg
mov
jmp
arpl
cld
and
lret
ljmp
push
mov
imul
pusha
clc
jecxz
int
out
gs
mov
jp
mov
lret
xchg
jecxz
mov
or
jmp
mov
rcr
cmp
pusha
nop
lods
in
adc
gs
push
cmp
push
mov
mov
jbe
pop
fwait
pop
pop
in
bound
jecxz
cmp
dec
pop
pop
orb
iret
test
or
mov
push
dec
mov
loope
divl
xchg
outsl
jp
dec
mov
inc
jg
xor
insl
mov
rorb
jnp
bound
rclb
sub
xchg
push
aam
imul
loop
in
push
pop
xor
lods
ret
dec
inc
nop
push
pusha
test
xor
loopne
outsl
cmp
sub
jl
sbb
test
mov
mov
mov
mov
jmp
push
push
aad
into
daa
push
aaa
ud1
xchg
ds
mov
pop
std
push
jno
out
popf
ss
out
cmpb
inc
fcmovu
clc
test
cli
inc
inc
mov
mov
nop
pop
lods
std
scas
inc
jns
das
mov
push
adc
mov
mov
shll
cwtl
mov
mov
and
loope
and
leave
out
out
mov
push
xchg
jle
aaa
popa
sub
mov
lret
es
adc
imul
popa
scas
insl
jo
sbb
sbb
insb
sub
or
jns
and
rcrl
push
pushf
inc
rcr
pop
push
jb
mov
aam
push
mov
out
outsb
mov
lahf
stc
or
cld
cltd
or
mov
or
inc
imul
jnp
daa
xchg
lea
mov
sahf
dec
xchg
sbb
or
dec
jnp
xor
lods
or
ss
cmp
xchg
fldl
loop
imul
popf
lret
jmp
push
mov
push
fimull
out
mov
mov
jnp
mov
dec
mov
jl
or
and
imulb
mov
mov
test
jmp
push
shl
pop
imul
push
jae
xchg
popf
jno
jecxz
pop
dec
jle
inc
sti
mov
mov
arpl
push
mov
cmp
popf
mov
mov
pusha
xor
aam
jbe
sub
sbb
dec
inc
or
aaa
pop
dec
cmp
pop
loopne
lds
xchg
leave
sub
leave
jle
xchg
adc
and
inc
mov
mov
sub
inc
push
lods
xor
push
or
ficomps
test
add
dec
mov
push
fisubrl
lahf
and
imul
and
je
mov
dec
xlat
adc
dec
call
stc
imulb
lds
fmul
imul
mov
hlt
cmpsb
dec
fs
pop
ror
push
call
pop
aam
movsl
pop
xchg
cwtl
imul
sarl
js
loope
dec
adc
xchg
mov
outsb
jg
lcall
mov
test
and
fldt
in
adc
ljmp
jno
pop
cmp
ljmp
out
mov
xchg
lock
ljmp
jl
mov
dec
ja
push
cwtl
test
cmp
add
adc
into
push
imul
popa
fucom
stos
cmpsb
scas
inc
or
cmp
add
pop
push
lahf
test
cltd
insb
ret
pop
mov
cmpsl
aas
inc
shlb
pop
or
pop
imul
int
out
dec
push
pop
cmp
int3
fldl
push
mov
aam
test
jle
jmp
movsl
mov
fisubl
pop
mov
jne
xchg
ror
jge
mov
dec
pop
xor
enter
mov
cmpsb
stc
lcall
push
push
fsubr
jno
and
cmp
push
mov
fdivs
xchg
mov
push
mov
scas
test
aam
mov
xchg
xchg
mov
sbb
stc
lea
mov
cmp
mov
inc
pop
or
jmp
add
lahf
mov
inc
iret
xor
mov
pushf
lds
out
pop
mov
mov
mov
arpl
xchg
lcall
fimuls
insb
add
mov
fsubp
fidivrs
xor
inc
lods
jno,pn
in
fsubr
jmp
jge
aam
sbb
dec
int3
into
jns
or
push
iret
jbe
sbb
jmp
xlat
sub
orl
dec
fimuls
test
jae
push
or
mov
push
jnp
or
lret
inc
jns
fsts
ds
cmp
adc
loop
push
jp
mov
lds
mov
outsl
cmp
fldt
jge
dec
cmp
addr16
pop
xchg
sub
mov
mov
fdivrl
dec
rcll
and
jle
or
dec
bound
push
data16
out
leave
cmpb
inc
fistpl
mov
xchg
je
mov
lret
mov
out
xlat
cmp
cmp
dec
mov
push
push
sub
mov
outsl
adc
mov
popa
xchg
cs
and
mov
leave
or
ds
pushf
push
mov
fdivrs
push
rorl
mov
aad
sub
je
xor
push
adc
in
aad
sbb
or
jle
popf
mov
dec
dec
rcll
ss
test
mov
xchg
clc
sahf
mov
pop
or
adc
cmp
test
lret
loope
sub
jg
je
aad
mov
scas
cs
std
xchg
jae
je
js
pop
adc
lcall
stc
rolb
fmul
clc
and
push
adc
js
sarl
xchg
push
cmp
rorb
mov
dec
pop
pop
xchg
fistl
mov
cmp
pop
push
cmp
fstpl
mov
outsb
mov
sbb
sbb
fnsave
stos
mov
or
xor
lock
sub
or
sbb
int3
fisubs
pop
mov
push
test
jbe
dec
lods
cmp
rclb
lcall
out
imul
cmc
mov
or
push
test
push
push
pop
xchg
xchg
cli
rcr
fsubrs
enter
lahf
lock
js
lahf
push
loope
je
pushf
je
xor
and
xlat
pop
push
push
xchg
dec
xor
loopne
lods
cld
inc
xchg
fwait
mov
dec
dec
and
into
icebp
outsb
cmp
xchg
pop
aaa
lock
and
add
sbb
push
or
je
loop
adc
fwait
adc
sub
shrb
xor
arpl
dec
arpl
lea
sub
outsb
shlb
mov
aad
xchg
ja
stc
mov
mov
insl
push
stos
dec
push
fistpll
out
dec
pop
testb
dec
mov
sub
cmp
cli
xor
push
jecxz
mov
cwtl
jno
ja
outsl
aas
fdiv
ds
mov
gs
fldl
imul
stos
mov
fmull
addb
mov
roll
mov
rorb
test
lret
push
mov
scas
not
ret
push
jbe
push
dec
lea
iret
mov
dec
add
sbb
mov
scas
mov
pop
popa
out
mov
dec
jecxz
jae
nop
in
jns
push
adc
adc
inc
in
cmp
lret
cli
jmp
push
cmp
and
push
xchg
cmp
push
test
mov
jmp
push
enter
cli
insl
lock
inc
mov
sbb
out
iret
push
pop
push
jge
dec
mov
jp
or
call
jb
adc
lea
sub
out
data16
gs
push
pop
sub
pusha
cmpsl
cli
mov
push
fs
xchg
jbe
cmp
mov
icebp
shl
xchg
mov
push
push
out
mov
cmc
pop
ss
push
das
int3
push
test
lods
nop
cwtl
aam
mov
test
ljmp
lock
in
popf
daa
stos
dec
pop
pop
dec
cmp
push
jmp
xor
mov
in
jg
mov
jle
orl
sbb
mov
subb
adc
push
roll
jg
jns
pop
xchg
inc
clc
push
lods
and
sbb
xchg
jg
nop
sbb
call
dec
or
les
push
mov
imul
sbb
ret
aad
pop
lret
lods
imul
int3
test
push
push
in
decl
lcall
lcall
or
pop
negb
or
arpl
scas
push
iret
mov
mov
outsl
call
aad
test
shl
scas
int3
scas
outsl
add
or
rcr
push
call
mov
cmpsb
mov
mov
and
push
enter
fbld
popf
sbb
ja
or
rcll
fsubl
mov
aas
jp
ja
stos
push
fnstsw
mov
jle
rcr
and
mov
jle
aas
lcall
sar
cmpb
and
es
jno
daa
fnsave
xor
push
sub
push
popa
xchg
push
jg
push
scas
mov
sub
pusha
mov
mov
pop
pop
sub
addl
sahf
call
loop
mov
pop
roll
mov
jmp
fistpl
fwait
ret
or
push
push
ljmp
not
out
arpl
dec
out
icebp
pop
out
dec
in
fidivs
xchg
push
adc
sbb
jne
sbb
mov
test
lret
push
sahf
pop
pusha
in
imul
addr16
js
ja
push
inc
mov
mov
mov
mov
xor
pop
push
add
push
dec
rolb
sahf
lret
mov
fsubs
cltd
cmp
cmpsl
sarb
push
addr16
enter
cvtps2pd
pop
or
or
mov
outsb
fwait
push
xchg
jb
sti
lea
lcall
fldenv
push
or
xchg
std
iret
and
pop
dec
lret
ss
cmp
jmp
mov
add
into
dec
test
or
jnp
dec
test
adc
mov
nop
test
or
test
cld
insl
addl
jne
notl
mov
xchg
sarb
inc
fiadds
in
out
lcall
push
inc
dec
or
add
call
dec
xchg
pop
in
jne
adc
mov
mov
ljmp
jmp
mov
mov
scas
mov
bound
imul
outsl
dec
jae
dec
cmp
test
jb
popa
jge
and
bound
out
out
addb
lahf
pop
push
xor
insl
test
insb
imull
aas
int3
leave
mov
sbb
lods
ja
jle
jg
ljmp
jb
ja
rol
ljmp
or
addr16
movsb
out
push
jle,pn
dec
int
pop
push
dec
dec
shl
pop
fldcw
push
add
push
mov
loope
jno
jno
pop
add
js
push
stos
addb
fwait
jns
sub
aaa
repz
fsubrs
cwtl
mov
aam
lret
mov
test
xchg
shlb
adc
out
ljmp
test
mov
outsl
bound
xchg
dec
lea
int3
punpcklbw
into
mov
clc
jb
pusha
pop
loopne
arpl
es
les
mov
outsl
inc
mov
mov
cmpb
cmp
pop
rclb
jmp
sbb
xchg
pop
dec
mov
inc
das
mov
std
sahf
ljmp
ret
dec
into
pop
lcall
loope
test
cmpsl
sbbb
inc
jg
rolb
push
out
jecxz
jnp
xor
push
add
sub
mov
shlb
fidivrs
ret
icebp
add
dec
dec
sti
fcompl
into
lret
icebp
and
ds
sarl
jge
repnz
cmp
add
mov
pop
lret
cmp
cmpsb
jae
mov
es
push
pop
andl
imulb
fistpll
mov
xor
mov
adc
daa
icebp
jno
mull
std
imul
dec
leave
fidivrs
adc
cwtl
fwait
inc
aas
push
jne
sub
inc
mov
sub
sub
inc
xchg
inc
addr16
adc
daa
daa
inc
or
or
pop
mov
lret
push
cmpsl
ret
cmc
mov
jmp
test
lcall
ja
mov
cmpsl
loopne
nop
jo
test
call
xor
adc
sbb
adc
dec
sub
fisubrl
stos
pop
repz
and
out
pop
fstpl
loope
jo
lcall
rclb
push
mov
stc
jmp
out
pushf
mov
nop
out
nop
adc
jae
les
das
and
into
jg
push
ja
jp
cmpsl
or
test
cmpsb
adc
mov
jle
std
sub
mov
push
mov
into
test
push
xchg
test
call
in
fiadds
call
jmp
mov
mov
movsb
mov
stos
subb
push
push
push
stos
pop
mov
ss
jbe
push
xor
cmp
jge
into
popf
mov
or
mov
mov
rorl
paddb
push
leave
pop
xor
into
insl
in
loope
add
mov
xchg
outsb
aam
xor
mov
mov
jno
push
imul
fsubrs
out
dec
mov
rorb
jb
lock
cmp
adcl
stc
test
cli
loope
gs
mov
dec
pop
movsl
sbb
loopne
aad
pop
ret
sti
or
sbb
dec
loope
dec
push
iret
pop
jb
mov
loopne
cmp
jle
xorl
stc
pop
imul
shll
xchg
inc
clc
push
mov
sub
sbb
mov
pushf
gs
xchg
adcb
pop
jne
add
negl
mov
mov
test
xchg
push
jnp
out
sbb
add
pop
sub
xor
mov
push
fstl
or
pop
fiaddl
orb
shrb
pop
and
add
rolb
lods
leave
loop
push
fsubrl
fisubs
xchg
loop
loop
sbb
add
scas
pop
test
andb
mov
xchg
das
add
sbb
adc
ja
sbb
push
jb
mov
sahf
and
pop
ja
cmp
adc
xorl
in
mov
cmp
xor
cmpsb
dec
pop
sbb
inc
push
push
sbb
dec
sbb
xchg
mulb
pop
adc
or
mov
jbe
inc
push
push
clc
pop
cli
xchg
xchg
pop
pop
jle
loopne
sub
cs
mov
mov
das
stos
mov
imul
sbb
fwait
ret
push
idiv
popa
test
nop
mov
xchg
in
jb
push
sub
dec
jno
inc
rorl
aas
mov
clc
call
js
or
xor
loopne
rcl
into
into
and
jg
loope,pn
addr16
adc
mov
push
sbb
gs
ficomps
xlat
arpl
aad
jbe
jb
sbb
ret
jp,pn
push
fcomps
push
adc
xor
aam
jle
or
test
adc
fsts
push
push
or
out
mov
bnd
sub
stc
int
cmc
sbb
ficoms
ljmp
icebp
mov
stos
adc
mov
shll
rcl
sbbb
or
lcall
add
jecxz
or
push
or
ret
push
mov
pop
into
xor
jge
cmpb
push
arpl
xor
cmp
jmp
xor
xchg
imul
test
loop
ja
nop
pop
cwtl
and
inc
cmp
xor
push
cmpsb
fimuls
imul
jo
test
sub
xchg
in
and
push
movsb
dec
pop
fisubl
testl
push
xchg
fisubl
hlt
xchg
jno
xchg
lods
adc
adc
rol
daa
lock
pop
les
mov
fiadds
push
dec
div
mov
pusha
js
loop
cmp
je
cmp
imul
sub
jnp
and
push
lock
jbe
std
pop
mov
mov
lods
test
gs
fdiv
loopne
js
pop
or
jg
dec
add
cmpsl
xchg
cmp
mov
sahf
enter
and
insb
push
je
dec
or
jl
sub
mov
sahf
cwtl
stos
inc
aas
das
pop
into
xchg
xchg
push
call
inc
xor
push
and
sbb
icebp
sub
adc
push
xor
or
inc
rorl
scas
lret
stos
cs
sbbl
inc
fsubrs
call
hlt
xchg
fnstcw
xor
push
movsl
and
gs
mov
leave
into
dec
fs
mov
hlt
jae
mov
imul
pop
mov
call
lea
add
ret
push
inc
iret
dec
call
popa
or
or
lods
sahf
adc
into
mov
stos
mov
push
outsb
pop
imul
xchg
aam
xchg
mov
rorl
xor
push
outsb
sub
xor
xor
inc
xchg
push
mov
add
cmp
cmc
push
add
cmp
insl
dec
pop
push
jge
push
cmpsl
ss
test
out
ficomps
inc
ret
test
mov
pop
mov
xchg
or
adc
jo
nop
mov
loope
call
inc
ror
insb
pop
int
popf
shl
stos
pop
jp
int
jae
scas
pop
lcall
aaa
add
inc
jmp
xor
or
stos
js
pop
jmp
sub
pop
fnsave
add
xchg
mov
lret
sub
outsl
xchg
outsb
fsubs
inc
jns
addr16
inc
fidivrl
or
mov
dec
sahf
int
ret
push
shl
inc
mov
xchg
notb
or
push
pop
data16
mov
push
xchg
push
pop
stos
cmpsb
mov
repnz
push
shlb
mov
pop
xor
mov
rclb
cmp
push
rcll
in
rcll
cmp
push
jg
xchg
push
out
bnd
adc
mov
jns
adc
mov
es
ja
iret
adc
hlt
pop
ljmp
jp
out
pop
mov
sbb
sbb
dec
cltd
adc
mov
fistpl
cs
fidivl
push
jp
jge
mov
xchg
pop
cmp
rcll
in
shl
test
cmp
or
in
mov
jg
mov
push
leave
jns
fisubl
outsl
lcall
xchg
sub
outsl
push
sti
int3
dec
push
mov
test
les
repnz
push
cld
push
out
out
xchg
jle
mov
push
int
push
sahf
push
lret
pop
push
mov
pushf
outsl
test
imul
addr16
lcall
fwait
in
xchg
jp
xchg
popa
fmuls
inc
scas
push
lods
and
cmp
lods
lcall
jp
lahf
push
push
adc
sbb
xchg
mov
cmp
mov
dec
mov
aad
shl
xchg
in
mov
mov
cmp
pop
sbb
icebp
data16
imul
imul
pushf
shlb
into
mov
pop
arpl
daa
push
outsb
out
dec
bound
fnstsw
sub
mov
aaa
cmpsb
fildll
push
adcl
cmpsb
mov
imul
mov
xor
movsb
xchg
loope
xchg
jo
ljmp
ret
aam
sbb
add
sub
jo
pop
adc
add
jle
aas
jecxz
popa
sbb
aad
jno
cmp
push
ficoml
pop
pop
inc
fs
cli
popa
insl
dec
xlat
and
jle
mov
dec
cld
xchg
inc
jge
pop
fmuls
xrelease
mov
in
dec
xor
loopne
and
push
outsb
adc
cs
adc
pop
push
ficoml
mov
pop
fcomip
out
pop
fidivs
in
callw
les
xchg
div
sbb
shrb
sbb
xor
xor
jbe
or
stos
mov
push
inc
nop
push
in
fsts
inc
stc
xchg
mov
push
cmpsl
dec
mov
xor
pop
lods
int
fsin
iret
out
pop
xchg
pushl
pop
pop
xor
sbb
int
push
sbb
inc
add
cli
xchg
and
ljmp
out
cmp
mov
adc
int
or
add
inc
fdiv
lret
insl
in
ficoml
addr16
rcrl
adc
test
mov
push
fwait
cwtl
out
mov
push
or
mov
cmpsb
stc
fisttpl
cmp
aas
repz
iret
mov
cmp
mov
mov
sbb
xchg
jne
das
xor
ljmp
jp
subb
stos
leave
insb
imul
add
add
inc
out
shll
stos
add
orb
inc
outsl
mov
and
out
test
mov
xchg
sub
mov
mov
in
jnp
shlb
mov
into
loop
xchg
call
lods
faddp
call
xlat
push
lret
add
add
inc
xor
xchg
jle
sbb
sub
mov
adcb
stc
cmp
das
dec
cli
push
jne
fcomps
sbb
push
cs
stos
pop
sbb
test
gs
cltd
and
int3
sub
aam
repz
mov
sbb
jns
inc
stos
pushf
push
pushf
cld
daa
cwtl
sbb
add
test
sub
imul
inc
imul
cs
and
rorl
add
sub
cmp
dec
jp
fimuls
jnp
jp
xchg
dec
insl
das
pusha
pop
rclb
bound
pop
popa
call
imul
test
add
add
enter
imul
mov
or
jge
xorl
adc
xchg
outsl
jno
sbb
leave
pop
sahf
mov
mov
fisubrs
int3
shll
push
loope
ret
push
sahf
xchg
lahf
pop
push
adc
lea
fisubrs
inc
outsl
jmp
pop
xchg
mov
cmp
mov
or
bound
sub
mov
stc
aaa
icebp
jo
lret
cmp
jg
insl
or
mov
out
imulb
inc
nop
enter
repz
mov
mov
push
xor
add
in
inc
cmpsl
xchg
jo
xor
aad
inc
sub
mov
pop
or
ret
aaa
cwtl
lahf
mov
xor
inc
inc
sbb
sub
xchg
outsb
xchg
inc
xchg
popf
or
or
jo
and
ret
xor
xor
dec
adc
outsl
pop
and
jg
push
fimuls
adc
dec
xchg
push
call
dec
pusha
jb
jecxz
adc
jmp
ret
ja
sbb
mov
fmulp
lods
out
or
dec
pop
ljmp
sbb
es
shll
mov
mov
push
sub
pop
mov
cmp
cltd
mov
lret
xchg
or
sub
dec
call
fsincos
cmp
loope
sarb
cltd
repz
int
sbb
lret
imul
orb
xor
jecxz
fmuls
dec
fmul
dec
push
xor
aaa
scas
xor
dec
in
out
push
jp
push
loop
xchg
sbb
out
insl
in
lret
mov
push
jle
icebp
scas
jp
loop
xor
sub
out
ljmp
xor
mov
lret
jbe
mov
jmp
adc
test
fwait
mov
leave
std
cmc
lret
dec
in
push
nop
push
dec
popf
mov
sbb
xchg
sub
adc
pop
lcall
cwtl
jl
js
shlb
sub
int
fistps
out
mov
popa
rclb
inc
jmp
jo
dec
rcrl
and
enter
into
lahf
dec
in
subb
shrb
call
lods
mov
subb
test
ret
pushf
dec
ss
repnz
mov
cmpsb
in
movsb
je
arpl
lcall
mov
pop
push
packssdw
xchg
lock
xchg
int3
dec
lock
scas
push
sbb
sbb
dec
xchg
xchg
push
lret
fwait
rorb
xchg
inc
ficoml
out
pop
xor
sbb
lahf
jmp
push
xchg
in
enter
js
add
xor
outsb
idivl
es
fimuls
bswap
aad
cmp
sbb
test
aam
insb
inc
mov
fs
popl
mov
lock
insl
add
int
fnstsw
cmp
or
pusha
movsl
dec
mov
sar
fs
leave
push
adc
das
rolb
push
fs
xor
fists
mov
add
lods
mov
inc
xchg
dec
sub
dec
inc
inc
lods
xor
fsubl
inc
jo
dec
fisubs
js
lret
nop
cltd
in
mov
cmpsl
jno
add
mov
xchg
add
xor
repz
xchg
inc
ret
dec
push
dec
xor
movsb
jbe
hlt
jg
into
into
dec
test
dec
lret
ret
add
cmpsb
test
push
test
pop
test
xchg
jp
sbb
bnd
adc
pop
cmp
test
dec
sbb
inc
scas
mov
sahf
mov
cmpl
pushf
push
jne
cmp
dec
pusha
fisubrl
fildl
mov
mov
push
jle
sub
inc
push
inc
stos
pop
lea
add
adc
lret
jnp
mov
fildl
sub
sbb
sub
dec
pop
mov
xlat
add
add
jg
shrb
dec
sbbl
jno
icebp
int3
nop
push
cli
xor
outsl
popf
incb
dec
pushf
dec
xchg
out
stos
idivb
sbb
or
daa
or
sbb
pop
lcall
jne
popa
cmp
mov
sbb
inc
adc
mov
in
fwait
cmp
jae
push
fnstsw
xabort
xor
or
nop
mov
and
rorb
jp
and
andb
dec
lahf
push
dec
cmp
dec
cmp
pop
mov
bound
ljmp
out
pop
imul
add
cli
pop
imul
pusha
sahf
popf
fbstp
stos
pop
mov
push
fcompl
lret
out
push
icebp
mov
fcmovnu
sub
mov
lret
add
in
ss
sbb
addr16
xor
inc
in
jns
lods
cs
cmc
pop
sti
jp
jb
jl
je
jmp
pop
leave
aad
je
inc
xchg
mov
mov
lret
sti
cmc
scas
das
jo
inc
and
jp
mov
dec
sarb
jl
and
out
mov
push
outsl
fstpl
lret
jo
scas
or
push
mov
sbb
inc
aad
xchg
movsl
loop
ficoms
lahf
jbe
aas
jmp
mov
adcl
cld
xor
inc
sub
ljmp
scas
das
scas
pop
mov
rolb
aaa
push
dec
gs
cmp
xchg
cli
popa
sbb
lret
push
push
outsl
push
fstpl
mov
and
dec
fxch
push
xchg
dec
push
push
pop
fimull
pop
je
movl
imul
xor
jns
pop
push
inc
sbb
sbb
stos
andb
popl
loop
outsb
sbb
testb
stos
aad
js
xlat
mov
xchg
mov
popf
sbbl
int3
xor
adc
insl
ficoml
data16
lcall
in
inc
adc
push
xchg
cmp
jns
jg
scas
aas
scas
mov
sahf
mov
cmpsb
adc
sbb
sbb
mov
xchg
dec
adc
push
or
subb
pop
sub
mov
mov
lret
adc
mov
xchg
add
int
loope
and
nop
pop
cmp
or
movsb
mov
and
stc
pop
dec
rorl
shll
mov
lret
outsb
jle
adcb
dec
push
mov
pop
adc
aad
pop
pop
lret
movsb
fsubrl
inc
insb
jge
popf
insl
scas
xor
out
fiadds
pop
sbb
das
stc
imull
lds
jns
movsl
sub
dec
sub
mov
fistpl
dec
cltd
mov
shrl
mov
fs
xor
push
sub
aas
out
jbe
jns
xchg
mov
sbb
rorb
push
movsl
jl
push
das
aaa
jmp
jbe
ret
xchg
sub
scas
fstl
pop
sbb
jmp
sti
xchg
jbe
inc
adc
push
or
jg
pushf
inc
fldcw
cmp
jbe
mov
je
mov
inc
orl
jp
add
pop
arpl
push
ja
sub
sahf
pop
dec
pop
out
ret
xchg
pop
icebp
bound
jg
lods
dec
sub
xor
imul
fmulp
aad
xchg
add
inc
mov
int3
in
pop
pop
lret
fsubs
loopne
push
mov
sahf
addb
addr16
push
jmp
mov
dec
push
pop
aad
dec
push
insl
or
fiadds
push
mov
jno
pop
cs
loopne
fnstsw
jno
popl
aaa
push
jo
ds
adc
pop
dec
add
outsb
jnp
mov
or
mov
stos
icebp
cmp
loope
mov
fiadds
imul
stos
dec
test
lea
sbb
orb
movsb
out
inc
mov
out
push
nop
dec
js
cmp
jmp
add
jmp
xchg
cmc
xor
adc
cwtl
dec
push
jno
adc
mov
test
lea
mov
dec
xchg
adc
incb
jo
push
insl
iret
clc
inc
mov
push
cmp
mov
xlat
pushf
xchg
stos
inc
mov
push
test
idivl
xchg
stos
scas
sarl
inc
pop
imul
outsb
iret
stc
cli
mov
jo
push
test
int3
pop
outsb
push
inc
or
jp
leave
sbb
mov
scas
xchg
jns
pop
fs
fmulp
int3
add
push
jns
dec
out
xor
mov
cmpsl
pop
out
push
push
mov
xlat
loope
mov
dec
adc
push
gs
xchg
xchg
arpl
xchg
inc
mov
pop
jne
popa
or
and
lret
xchg
xor
mov
nop
shl
popa
loope
pop
xor
push
mov
mulb
rcr
in
cmp
pop
mov
lret
cwtl
fwait
test
and
cmp
shll
or
add
xchg
outsl
inc
cmp
inc
pop
pop
ret
mov
jne
xor
sub
call
fucomip
jns
sbb
mov
xchg
add
or
xchg
sub
jl
mov
pop
mov
mov
push
dec
xchg
cwtl
mov
pusha
mov
mov
aaa
sub
xchg
ljmp
lea
sbb
ja
mov
repz
mov
add
sbb
daa
les
pop
inc
bound
iret
stos
out
jo
lahf
push
in
ret
inc
jno
pop
fadds
cmp
sub
inc
rcrl
int
mov
lods
cmp
mov
enter
pop
add
sbb
and
cwtl
scas
sbb
mov
and
into
push
in
sbb
fmuls
repz
pop
adcb
mov
pop
jl
adc
push
jg
sub
loopne
insb
xchg
adc
adc
inc
jnp
push
sub
mov
mov
cwtl
ds
dec
pusha
and
movsl
xchg
mov
repz
arpl
jne
push
cld
out
aam
adc
cltd
rcll
mov
inc
or
xor
in
cmp
outsl
cli
cmp
sahf
arpl
pop
mov
jae
inc
mov
aaa
sbbl
and
scas
in
cmp
jg
call
pop
imul
pop
cmpsb
lods
push
push
cld
mov
xor
dec
mov
mov
outsb
and
add
inc
test
sbb
inc
add
mov
push
jns
ret
inc
sbb
fcoms
stos
je
imul
adc
pushf
mov
sub
bound
dec
mov
push
insb
inc
fidivs
imul
cmpsl
push
sarl
pusha
faddl
aaa
mov
push
pushf
xor
outsb
repz
test
mov
jle
jp
mov
data16
mov
lods
stos
xchg
cmp
dec
inc
mov
sbb
push
pop
pop
push
push
stos
xchg
mov
pop
mov
xor
add
mov
fwait
sub
in
push
nop
inc
ss
lcall
fs
int
int3
rcr
jmp
inc
pop
out
dec
js
in
stos
cld
mov
xchg
or
push
mov
push
jnp
imulb
mov
outsb
pop
icebp
subl
xchg
imul
push
subl
ret
imul
notl
jne
call
mov
test
ss
clc
push
inc
and
ret
push
fstpl
push
xor
enter
iret
sbb
scas
pop
pushf
jle
mov
nop
push
clc
mov
fdivs
xchg
lea
xchg
pushf
pop
lret
inc
cltd
jp
ljmp
into
jmp
jno
test
aad
inc
into
fcoml
test
rcrb
lret
push
ljmp
fildll
xor
or
cmpsl
andb
xchg
dec
mov
and
ljmp
cmp
push
dec
xchg
pop
push
sub
cli
in
mov
or
pop
jmp
push
dec
aad
mov
cwtl
mov
inc
jmp
inc
adc
andl
dec
inc
push
mov
mov
cmpsl
imul
mov
mov
xchg
leave
movsb
incl
pop
shr
cmp
adc
jne
pop
pop
xor
push
jne
outsl
shll
lea
push
cmpsl
scas
int
sti
arpl
out
outsb
mov
push
test
or
imul
jecxz
fdivrl
mov
sbb
xchg
pop
jecxz
xchg
pop
xchg
popa
aad
out
mov
xchg
sub
xchg
cmp
xor
pushf
xchg
xor
push
pop
inc
pop
push
mov
ret
cmp
fisubl
das
push
xor
arpl
fldt
xlat
cmp
stc
lret
lret
ffree
inc
fisubl
push
lods
jp,pn
and
outsb
adc
pop
cmp
outsl
cs
bound
mov
xchg
jbe
mov
add
jg
imul
dec
dec
js
ret
in
ljmp
cld
fdivs
sarb
mov
sbb
mov
into
les
mov
dec
jecxz
jp
test
adc
imul
int3
pop
adc
xor
xchg
test
add
loope
aam
or
das
sub
jg
frstor
fwait
jnp
fiaddl
out
enter
popf
jbe
mov
xchg
jle
repz
rorb
cmp
aas
lcall
lret
orl
push
outsl
inc
lret
sub
fcmovne
out
mov
sarb
xchg
das
and
xchg
sarb
mov
out
daa
adc
movsb
out
push
popf
sub
jp
movsb
sar
or
jp
push
xorb
mov
in
mov
xchg
jecxz
jl,pt
ss
les
scas
pop
mov
xorb
enter
sysret
subb
and
inc
in
dec
int3
xor
rorb
mov
add
inc
inc
jmp
mov
push
mov
in
push
mov
arpl
xchg
das
loop
mov
push
cmp
insl
fucom
sbb
add
popa
or
in
nop
fiaddl
js
addr16
es
enter
push
aaa
dec
andl
jne
pop
scas
fistpl
test
out
scas
mov
mov
jbe
stos
inc
jns
push
pop
cwtl
test
ss
xchg
stc
fstps
xor
ds
fs
lret
mov
je
cmp
mov
les
ljmp
push
and
hlt
inc
inc
and
dec
inc
pop
lds
xchg
test
insb
jl
adc
negb
je
or
mov
inc
xchg
out
push
xor
jl
int
fisttpll
in
jp
in
lea
shrb
mov
mul
cmpsl
dec
lea
dec
dec
outsl
ljmp
shr
das
test
or
sbb
testb
or
das
inc
rol
inc
fwait
mov
mov
aam
ds
sbb
insb
xchg
punpckldq
aad
sarb
shlb
lahf
pop
incb
mov
iret
outsb
ljmp
xchg
cmp
loop
sbb
jp
bound
pop
or
fisubrl
push
loop
out
push
out
xchg
inc
loop
hlt
fwait
inc
add
call
and
push
cmp
testl
adc
xor
stos
push
insb
shlb
out
ret
pushf
mov
jno
lea
pop
arpl
jle
aam
push
mov
repnz
mov
adc
and
sbb
cs
fldcw
insb
arpl
xchg
xor
mov
pusha
jmp
insl
inc
jle
lcall
stos
not
mov
xchg
mov
jne
pop
rcrl
sahf
mov
popf
dec
leavew
or
adc
mov
shlb
icebp
inc
xor
hlt
aaa
mov
icebp
mov
stos
xorl
dec
mov
mov
inc
imul
rcll
push
aam
sarb
incb
leave
mov
add
cmpsl
and
or
mulb
les
scas
lds
cld
xchg
jne
mov
adcl
push
scas
scas
jge
inc
dec
xchg
xchg
cmp
popa
out
mov
hlt
lcall
dec
notl
mov
test
or
add
or
movsb
jbe
push
jns
mov
mov
cmpsl
adc
in
jo
xor
rol
xor
rol
out
jp
dec
rorl
int3
mov
fbld
aaa
subl
inc
ret
jle
cmp
jmp
push
outsb
gs
push
xor
pop
test
mov
and
fisubl
sbb
jnp
mov
out
call
add
sahf
insb
xlat
insb
bound
pop
push
push
xchg
fldt
lcall
cmp
cli
xor
and
pop
orl
daa
popf
mov
insb
lods
push
ja
lret
mov
rcrb
fsub
js
xchg
xchg
mov
mov
and
das
mov
cmpsb
loope
sahf
xor
xchg
add
jmp
out
sahf
cmp
pop
adc
dec
dec
pop
sub
cmp
pop
sbb
pushf
push
push
add
nop
jg
lods
push
and
add
les
fdivrl
or
clc
scas
dec
dec
pop
dec
pop
pop
out
arpl
mov
cwtl
nop
cmpsb
shrb
lock
pop
sub
mov
add
lcall
xchg
mov
push
push
mov
mov
scas
inc
push
sarb
lret
push
rclb
push
shll
pop
inc
adc
or
mov
jmp
clc
push
and
mov
out
pop
movsb
or
shl
sub
mov
pop
inc
incb
rcll
mov
mov
mov
jbe
loopne
cmp
push
mov
adc
imul
jmp
test
pop
inc
negl
push
mov
jno
cmpsb
mov
mov
mov
scas
sbb
neg
mov
fxam
jge
adcb
push
into
mov
aad
fs
adc
cmp
mov
mov
aaa
call
mov
leave
repz
ja
sbb
push
mov
mov
outsl
add
xor
push
or
les
ret
mov
jge
or
inc
arpl
pop
mov
dec
mov
push
lea
xchg
pop
mov
xor
jp
mov
ret
push
cmc
xor
dec
cmp
ds
push
stos
dec
cmp
aad
out
insb
jecxz
sub
ret
nop
sub
pop
enter
pop
sahf
into
dec
push
lea
into
jns
sub
lods
sub
mov
mov
lcall
pop
cmp
insb
dec
mov
out
fdiv
jecxz
push
cwtl
out
push
sbb
test
fdivrs
mov
lret
jp
cld
mov
push
sub
popf
jbe
pop
push
jle
imul
repz
mov
mov
mov
push
xchg
std
sahf
pop
dec
or
pop
mov
into
addb
cltd
enter
mov
dec
data16
roll
rorb
scas
xchg
lods
fists
add
xlat
hlt
fwait
push
sbb
jns
in
xchg
inc
dec
fisttps
movsb
pop
sub
and
dec
cmp
sub
loopne
add
outsl
in
cwtl
imul
push
add
push
jnp
das
fdivs
lock
movsb
pop
stos
pop
cmc
das
or
inc
adc
cs
js
adc
adc
inc
scas
pusha
lret
mov
push
sahf
and
stos
push
out
scas
jo
les
stc
cs
mov
mov
jo
cs
cmp
push
std
jp
sbb
push
insb
lcall
lods
insl
fcoms
stos
jbe
dec
mov
stos
jo
in
add
stc
jae
pusha
sbb
push
push
xchg
adc
or
call
stos
cli
inc
shrb
push
jb
jae
sahf
shr
call
ret
lcall
mov
fucomip
jg
xor
fstl
xchg
cltd
and
cmp
pushf
mov
aam
and
mov
popa
roll
xchg
dec
mov
jle
out
add
mov
test
add
cmp
xchg
movsb
xchg
xchg
add
pop
push
mov
xchg
dec
cmpsb
sahf
inc
dec
lahf
jg
clc
add
add
insb
in
adc
movsl
leave
rolb
aaa
rolb
fadds
cs
lret
cli
jo
fimull
lock
jo
push
and
negb
mov
nop
rol
aam
xor
push
adc
push
mov
imul
iret
or
cmp
xor
icebp
roll
pop
or
jnp
jbe
mov
cmpsb
les
xchg
xor
aas
cmp
sub
mov
mov
push
pop
xor
mov
or
dec
inc
inc
clc
dec
call
out
lcall
or
cmp
arpl
jl
pop
xorb
mov
cwtl
cmp
sub
jnp
daa
adc
and
daa
push
fists
or
ljmp
adc
leave
fidivrs
xor
sub
mov
icebp
mov
ds
adc
jnp
in
mov
in
scas
pop
xchg
push
fnstsw
and
popf
aas
into
fisttpl
mov
sub
jnp
cmpl
jle
imul
jmp
xchg
mov
ss
cmc
xchg
mov
lahf
stc
mov
add
xor
test
sbb
jae
jbe
jmp
xor
cmp
cmp
call
cwtl
mov
inc
in
pop
data16
enter
jo
push
shr
out
sbb
divl
sub
pop
push
into
mov
sub
je
mov
xor
stc
punpckhwd
push
bound
or
inc
insl
adc
mov
dec
pop
mov
cmp
data16
clc
push
push
jb
test
and
push
sarl
shl
mov
loopne
data16
dec
push
mov
mov
sahf
into
xchg
jns
xchg
adc
mov
lcall
mov
or
inc
add
jle
push
insl
jp
ret
mov
sti
mov
fisubs
bound
push
cmpsl
sbb
dec
pop
push
jne
jp
cli
cmp
pop
andb
dec
fisubrs
add
sbb
outsb
fwait
push
push
inc
scas
je
mov
and
aaa
popf
clc
addr16
rcrb
cmpsl
mov
jnp
jne
aaa
bound
je
ret
mov
and
dec
rcll
test
inc
ficompl
mov
add
xchg
divl
mov
cs
in
divb
ficompl
mov
push
rcr
cmp
jle
sar
push
jne
cmc
cmp
inc
les
pop
jge
mov
lods
add
inc
arpl
pop
mov
mov
mov
xor
push
xor
inc
pop
in
loop
pushf
repnz
jns
loopne
mov
cmc
pop
popf
dec
inc
lcall
movsb
or
aas
rorb
add
push
mov
pop
jns
sbb
mov
cmc
cmp
je
scas
sub
out
pop
clc
mov
xchg
xor
dec
out
inc
cmp
and
push
cltd
pop
xor
xchg
or
push
movsb
in
lcall
add
push
sbbl
test
mov
int
test
sub
cmp
sbb
xor
inc
pop
loope
mov
lret
ret
in
mov
pushf
rorl
xchg
xor
hlt
jmp
push
or
pusha
idivl
out
mov
enter
adc
rorb
fisttpll
mov
fidivs
and
xchg
js
push
iret
sahf
push
popa
pop
or
adc
lret
fsubrl
cli
pop
les
popa
js
jge
and
dec
jbe
xor
fimull
jecxz
icebp
inc
sub
mov
sub
aaa
mov
sti
xor
arpl
jbe
push
into
mov
test
push
push
push
and
mov
xchg
mov
test
push
cmp
dec
push
cmp
xor
pushf
movsb
jae
insl
inc
fistpll
push
arpl
mov
dec
neg
inc
mov
out
leave
mov
inc
inc
loopne
adc
ret
cmp
or
test
mov
mov
add
test
sbb
jnp
lret
and
iret
out
adc
jg
mov
int3
mov
jbe
repz
scas
mov
pop
lea
jbe
inc
mov
popa
inc
imul
dec
aad
jge
adc
cmp
das
mov
scas
rcrb
daa
fsubs
cs
push
cmp
sbb
in
pop
jb
cli
or
icebp
sub
push
pop
xlat
div
mov
xor
lock
jp
clc
mov
cmp
test
mov
xchg
jnp
xor
push
and
es
mov
shl
adc
repz
mov
cltd
mov
xor
fnsave
idivl
cmpsb
add
jb
push
fstpt
test
or
add
fxch
inc
enter
fcoms
fisubrs
icebp
loope
aas
xor
jns
shrb
ljmp
adc
repnz
adc
ftst
jge
sbb
sbb
clc
into
cs
rcr
pop
cmpsb
pusha
aam
out
lret
jne
adc
repnz
stos
sub
inc
jle
negb
out
dec
scas
lds
add
inc
lods
jmp
insb
push
cmpsl
int3
je
or
popa
outsb
sbb
add
jle
imul
cmp
dec
pop
rolb
adc
xor
pop
sbb
or
out
shrl
mov
dec
addr16
stos
insb
sub
jecxz
ret
dec
xor
fmul
dec
sub
pop
icebp
les
push
es
and
leave
sbb
mov
pushf
movsb
bound
push
fstpl
imul
out
sub
sbb
insb
sub
bound
jmp
cmp
add
jmp
pushf
add
sbb
repnz
mov
mov
add
jo
mov
cmpsb
or
xchg
xor
test
add
enter
out
mov
shrb
outsl
nop
into
ret
sbb
inc
dec
popf
xchg
xor
mov
shrl
aaa
inc
mov
addr16
sub
dec
cmp
sub
out
mov
push
scas
sti
ret
xchg
mov
sbb
aad
jns
int3
sbbl
loopne
pop
xchg
mov
aad
movsb
sarb
outsb
push
and
sbb
cltd
sub
outsb
cmc
cmp
inc
sahf
pop
mov
adc
adc
push
mov
xchg
out
dec
rcrl
aad
cwtl
outsb
lret
rcrb
sbb
scas
sarb
dec
movb
flds
ret
outsl
scas
jge
fiadds
adc
cmc
popf
bound
jmp
jmp
or
mov
mov
jg
jge
dec
rcr
minps
ss
jo
and
push
ss
cmpsb
xchg
mov
jle
hlt
jbe
mov
fstps
call
push
pop
out
push
mov
inc
and
loop
shlb
adc
sti
and
cmc
add
sbb
add
lods
xchg
pop
in
fisubl
dec
mov
add
inc
out
inc
lret
icebp
hlt
sbb
call
cltd
and
adc
add
and
mov
pop
mov
mov
pop
pop
and
les
test
adc
int
lcall
and
sub
mov
call
test
xchg
jns
jge
xchg
pop
sbb
aas
inc
cmpsl
inc
aas
cs
daa
add
aaa
fdivrl
rolb
sub
popa
ret
mov
mov
mov
mov
bound
ljmp
cmp
fsubrp
xlat
fcomps
lret
xchg
xchg
inc
std
stc
data16
nop
movsl
jp
cli
and
dec
mov
xlat
fidivrl
xlat
aas
clc
and
push
orb
outsl
mov
cmp
jecxz
cwtl
jns
dec
mov
pop
mov
sub
outsl
addl
bound
dec
inc
adc
push
mov
lret
xchg
jae
push
push
pop
and
int3
filds
ss
nop
dec
add
xchg
lods
sbb
les
push
xchg
adc
push
add
jecxz
scas
xlat
loop
dec
icebp
push
pop
jp
mov
pop
lea
sbb
add
mov
push
jmp
mov
or
sub
add
push
addr16
test
dec
push
mov
adc
lret
pushf
sub
mov
scas
and
mov
jae
pusha
ficomps
adc
sbb
icebp
xor
cmp
adc
xchg
jg
add
push
mov
inc
mov
lock
lret
and
jp
ficomps
jae
dec
pop
imul
cmp
mov
inc
arpl
call
push
adcl
lods
inc
jge
cmp
cmp
out
sbb
and
sub
dec
adc
sahf
and
ret
enter
dec
adc
sarb
cld
mov
sub
push
push
aad
stc
add
jmp
bound
lret
sbb
ss
and
pop
mov
sti
add
push
ljmp
ffree
lock
movsl
repnz
mov
push
movsl
sub
imul
sahf
mov
mov
add
ds
inc
push
inc
insb
xchg
ljmp
bound
and
mov
sbbl
push
xchg
arpl
iret
stos
dec
call
pop
fs
les
adc
fistps
pop
inc
lods
sti
mov
testb
sub
sbb
loope
cmp
fadd
lock
outsl
ret
enter
pop
out
outsl
mov
gs
inc
roll
repz
shrb
jae
push
out
lret
fisttpl
scas
push
sub
stos
ljmp
test
out
pop
push
cmpps
cmc
push
int
sti
cmp
push
repz
pop
into
xor
and
and
sub
test
test
mov
sub
sahf
inc
aad
jle
adc
mov
inc
add
lret
fisttpl
adc
push
lods
and
push
mov
cwtl
leave
mov
mov
sub
sub
cmpsl
movsl
mov
push
inc
dec
call
or
lock
fcmove
shl
test
push
push
mov
loop
sbb
test
mov
mov
test
ficomps
stc
and
mov
repz
mov
inc
pop
scas
push
bound
pop
push
mov
pop
sub
push
ljmp
push
jp
es
out
rcrb
adc
scas
enter
xlat
mov
push
inc
mov
dec
xchg
mov
or
and
iret
push
lahf
out
push
ss
mov
push
data16
scas
adcl
jp
mov
aas
lcall
pop
jns
add
test
mov
leave
jo
test
stos
xchg
jge
or
cmpsb
lea
jle
stc
and
pop
push
mov
pop
shrb
push
popf
jnp
lcall
arpl
fidivl
sbb
sub
in
or
fsubl
mov
jmp
push
pop
in
push
aaa
fwait
mov
in
inc
jmp
push
rol
test
sub
aas
pop
push
xor
pushw
stc
fists
enter
xor
js
into
add
cmp
outsb
loopne
popf
mov
xor
pop
add
adc
jb
pop
xor
jp
sbb
fbld
mov
pop
cli
fcomi
dec
int
mov
decb
test
cmp
cmpsb
ljmp
mov
pop
adc
stos
lahf
sbb
sarb
jne
hlt
push
xor
es
ss
outsb
bound
jl
jbe
adc
scas
dec
xchg
pop
push
mov
mov
or
mov
cmp
dec
mov
mov
jge
jl
movsl
in
test
push
jae
ss
icebp
or
and
add
xchg
sbb
dec
sub
iret
aad
sbb
push
xchg
mov
idivb
xor
pop
mov
addr16
dec
ficoms
push
jae
lret
mov
lock
into
faddl
fimuls
cld
hlt
push
fcmovbe
stos
mov
cmp
jnp
xchg
adc
repnz
mov
daa
fsubr
push
cmpsb
lock
shll
xchg
sarb
insl
add
dec
sub
bound
arpl
lea
out
fsubl
pop
push
int
jp
sub
insl
jb
cs
pop
cli
sahf
jae
fcompl
into
jl
arpl
iret
cmp
mov
loop
popa
ljmp
xor
mov
jns
xchg
push
rcl
mov
addr16
adc
pop
shr
or
jp
fmulp
mov
lea
into
sub
inc
mov
mov
aam
out
sbb
leave
and
cli
popf
dec
into
mov
cmp
and
enter
pop
in
push
cmp
adc
pop
sbb
pop
rcr
push
out
fistpll
nop
test
ret
aas
pop
pop
jp
mov
mov
stos
test
outsb
out
fsubp
fwait
dec
inc
aad
xchg
popa
adc
cwtl
jp
fstp
sub
ret
mov
rolb
ficoml
mov
dec
xor
dec
mov
arpl
adc
sbb
push
shr
push
push
ret
mov
mov
lcall
jnp
cmp
aad
dec
jae
rcrb
push
popa
mov
xchg
out
pop
jb
pop
lcall
and
cmovp
pushf
sarb
or
xor
stos
stos
pop
and
mov
jns
cwtl
xchg
pop
and
shrb
sahf
jp
xor
inc
dec
arpl
fld
xchg
lret
loop
add
pop
das
stos
inc
pusha
mov
mov
data16
push
cmp
stos
push
mov
push
xchg
push
push
push
push
lea
push
bound
mov
jns
arpl
mov
sub
mov
sub
inc
inc
aam
nop
and
adc
lock
bound
pop
or
fdivrl
fsubp
or
mov
daa
dec
mov
push
out
subb
sbb
lods
ds
js
cwtl
test
outsl
jle
ss
lahf
stc
sub
sub
sub
inc
and
call
dec
or
pop
push
xor
nop
test
sub
pop
pop
ficoml
movsb
cmp
mov
idivl
dec
pop
fstl
pop
jo
lret
push
pop
xchg
imull
pop
mov
jo
adc
scas
ret
nop
fsts
sbb
push
lcallw
daa
insb
out
shrb
in
data16
lahf
sbbl
sbb
lods
sbb
fdivrl
push
push
and
sahf
xchg
cs
lds
sarb
jp
jo
and
subl
and
inc
push
cmp
xchg
data16
inc
or
mov
push
dec
jl
leave
fwait
pop
test
push
ret
orl
ljmp
xchg
call
xlat
push
lcall
xchg
fsub
or
out
stos
mov
mov
mov
out
jle
cmp
ja
pop
sbb
divl
push
iret
data16
popf
cmpb
stos
push
sahf
inc
sbb
ret
xor
inc
mov
outsl
pop
mov
cmp
inc
mov
daa
dec
scas
mov
daa
sbb
jb
negb
pop
mov
cmpsl
sahf
data16
pop
lcall
cs
sub
ds
insl
pop
push
cmpsb
add
mov
cmp
sbb
call
jb
test
std
jbe
sarl
cmp
add
mov
mov
aam
mov
push
mov
mov
das
mov
das
cmpsl
mov
stc
popl
jae
push
cltd
jns
pop
cmp
cltd
cs
sub
push
mov
push
cli
gs
and
pop
mov
sbb
outsl
jns
fnsave
sbb
sti
dec
mov
pusha
shlb
idivb
enter
adc
stos
xor
enter
mov
cmp
lret
mov
pop
dec
decl
int3
sbb
push
ret
jle
dec
pusha
sarl
les
or
xor
or
insb
sahf
cmp
iret
dec
adc
push
mov
inc
jne
push
pop
out
test
andl
movb
mov
and
cld
test
dec
jns
aad
and
cmc
pop
dec
sbb
xchg
push
inc
shrl
mov
mov
imul
push
cmpsb
adc
mov
cwtl
inc
adc
ds
repz
insb
lea
dec
outsb
aaa
and
outsl
push
mov
xor
shrb
ja
mov
cmpsb
bound
mov
dec
sub
dec
add
das
ljmp
pusha
pushf
push
stc
call
mov
push
into
mov
imul
or
pusha
stos
sbb
dec
aas
movsl
orb
out
popa
jle
mov
outsb
lcall
sbb
je
fbstp
test
xchg
add
mov
pop
bnd
cs
dec
push
js
or
imul
das
cmp
inc
mov
out
dec
push
xchg
dec
or
imul
cmpsb
dec
and
mov
lret
rorl
jb
fildl
mov
fdivs
push
lcall
sub
dec
inc
jp
lock
inc
jge
pushf
jns
popf
add
fldenv
sbb
mov
cmpb
push
adc
xchg
lret
mov
mov
cld
sub
push
stc
test
repnz
push
xchg
loop
mov
jmp
decb
dec
dec
rorb
fldl
mov
mov
sbb
lahf
lret
dec
test
push
in
sbb
cmp
repz
ret
and
cmpsb
pop
xchg
pop
jg
in
stos
ljmp
in
mov
ret
movsb
sti
lret
adc
int3
pop
loop
jb
push
xchg
test
sbb
mov
test
andb
cmp
out
jo
mov
jecxz
or
mov
xchg
dec
lds
clc
push
cli
lcall
sbb
adc
mov
push
lahf
bound
imul
add
dec
and
lds
and
pop
xlat
aam
xchg
mov
sub
sbb
mov
inc
outsl
popa
inc
pop
sbb
sti
sub
inc
stc
repz
inc
push
mov
andb
xchg
sbbb
cmp
adc
mov
pop
lods
into
push
dec
mov
test
push
sarb
scas
dec
inc
add
or
adc
pop
sti
adc
ds
mov
scas
aad
rorl
xor
mov
movsl
jl
pop
insb
push
push
cmp
aad
inc
inc
mov
addr16
data16
arpl
xchg
mov
jl
push
hlt
aad
push
adc
ror
lds
push
push
adc
arpl
pop
aad
xchg
movups
sub
mov
leave
cld
repz
jmp
cwtl
stc
push
bound
mov
movsl
cmp
pop
mov
push
pop
add
mov
jmp
inc
daa
ret
rorb
pop
int3
mov
cwtl
xor
std
push
call
cmp
outsb
fimuls
push
insl
outsb
fisttps
cli
mov
ds
jl
xchg
arpl
gs
ret
push
mov
lea
in
sahf
inc
pop
cmp
ret
or
scas
sub
mov
insb
ds
stc
sbb
ljmp
mov
ret
pop
xchg
push
stos
dec
add
outsb
sub
mov
sahf
incb
fisubrl
and
cmp
stos
xor
js
into
adc
stc
sub
xor
aas
mov
dec
mov
sarl
aaa
pop
inc
xchg
aam
sbb
bound
loopne
xlat
mov
repz
mov
jne
imul
loop
je
or
out
mov
outsl
xchg
cmp
add
imul
push
push
push
popl
rol
or
jmp
jb
pop
push
or
cli
xchg
notb
or
dec
or
imul
add
pop
insb
or
inc
and
leave
jp
dec
inc
or
into
dec
insb
dec
mov
pop
loop
pop
xchg
sbb
push
out
js
rcl
fisttps
ja
cmpsb
adc
xchg
stc
test
jg
xchg
lods
fstl
dec
sub
xchg
jbe
popf
mov
out
ljmp
inc
call
sub
mov
or
mov
mov
cmp
insb
sbbl
pop
push
pusha
cmp
cmp
int
sub
cmp
xchg
leave
jl
mov
mov
int
inc
push
int
int3
pop
adc
mov
loope
sub
stos
push
test
pop
jmp
sub
dec
jns
xor
ja
push
and
rcr
push
fucompp
stc
lcall
sbb
dec
pop
repnz
cmp
loope
test
pop
push
jge
mov
enter
cmp
xor
lahf
les
push
lods
push
bound
cmpsl
fisttpl
sahf
inc
cmp
sbb
es
xchg
mov
js
or
cli
jl
add
sub
cmpsb
fwait
dec
in
stos
sbb
sbbb
or
mov
or
insl
lret
mov
or
xchg
push
push
loopne
xor
imul
dec
mov
sbb
mov
fildl
iret
pushf
mov
gs
or
sub
xor
inc
fwait
repnz
and
sub
or
mov
pop
lods
test
adc
push
mov
call
inc
imul
add
pop
adc
sub
pop
cld
ss
or
xchg
jmp
jl
add
arpl
mov
push
insl
les
andl
jne
arpl
jno
adc
scas
repnz
mov
cwtl
sti
repz
in
sti
and
pop
push
cmc
loop
cmp
mov
jns
xchg
loope
ret
sub
test
xchg
pop
addr16
push
lcall
clc
push
js
sbb
mov
pushf
add
repz
sbb
xor
stos
ljmp
or
push
cmpsl
ss
das
popa
test
sbb
es
int3
jbe
push
push
insl
push
lea
dec
or
jo
pop
imul
out
dec
and
jp
fildl
test
mov
push
pop
int3
dec
pop
fistps
lods
dec
mov
push
push
aad
push
loop
stos
pop
sbb
or
xor
dec
fcmovbe
test
cli
dec
scas
cwtl
adc
pushf
bound
xchg
pop
xchg
fxch
push
stos
mov
dec
fidivrs
push
jp
mov
jbe
mov
dec
cmpsl
movsb
or
jle
dec
mov
sub
pop
ds
ljmp
xor
outsl
shrl
push
dec
xchg
xchg
xchg
arpl
push
push
js,pn
enter
cs
jns
sbb
mov
arpl
mov
mov
and
pusha
mov
cltd
push
outsl
fcomps
ror
dec
adc
popf
jbe
inc
movsb
test
xchg
jb
js
pop
sub
lret
push
insl
push
std
out
xchg
fcoml
sbb
ss
cmp
jg
outsb
jns
cmpsl
pop
ljmp
mov
lods
mov
dec
stos
notl
out
pusha
and
fnstenv
adc
lea
daa
arpl
pusha
dec
insb
stc
push
stos
push
or
add
mov
dec
lock
mov
push
and
sub
push
jb
scas
jnp
sahf
into
mov
addr16
lcall
xor
enter
sti
sub
or
ja
mov
dec
pop
xchg
dec
pop
adc
mov
dec
mov
aad
and
pop
les
push
dec
popf
jb
cmpsl
jbe
arpl
cmp
lods
nop
sahf
dec
daa
jbe
in
loopne
stos
mov
add
popa
or
inc
sub
xchg
adc
negb
push
fdivrl
insl
fcmovbe
mov
jno
mov
dec
xor
call
mov
cmc
sub
pop
adc
push
sbb
in
shr
push
pop
and
gs
pop
neg
dec
pop
cmpsb
iret
sbb
fadds
push
pop
hlt
outsb
mov
insb
fistl
lods
jne
outsb
jno
sub
hlt
outsl
xchg
repnz
or
aad
or
jo
sbb
dec
jp
and
mov
mov
aas
lcall
push
ret
pusha
sahf
in
xchg
rorl
imul
jl
aas
repz
xchg
jbe
pushf
fldcw
dec
inc
cmp
movsb
scas
outsl
cmpsb
jb
xor
sbb
dec
cmp
jp
and
lcall
movsl
jge
roll
xor
call
mov
rorb
nop
inc
mov
std
pop
scas
mov
pushf
ds
mov
lods
xorb
mov
shlb
rcrb
push
push
lods
jp
ret
stos
mov
adc
or
mov
add
mull
mov
jne
mov
outsl
mov
mov
lea
inc
outsl
lods
xor
popa
vmread
iret
xchg
mov
inc
and
xchg
aam
and
and
roll
stc
ljmp
and
sbb
or
js
std
bound
or
rcrl
fsubr
cmpsl
mov
and
and
cmp
lret
cld
leave
xor
push
pusha
ss
sar
sbb
sahf
mov
je
jnp
lret
notl
mov
movsb
test
out
mov
outsl
mov
or
adc
call
cmpsb
dec
push
adc
mov
adc
arpl
daa
sub
outsb
push
xchg
jns
outsl
lret
push
add
mov
inc
aas
aad
jp
imul
lahf
pop
push
adc
gs
push
xor
icebp
cmp
or
fwait
mov
in
push
mov
lret
lods
dec
sbb
cs
fs
insl
pop
out
stos
sub
das
adc
gs
jge
jns
loope
cmpsl
stos
dec
js
xor
mov
shlb
out
repnz
cmp
push
popw
pop
fisubrl
daa
mov
jp
mov
test
inc
push
mov
pop
dec
out
dec
pop
push
pop
mov
push
lods
ret
pop
stos
leave
out
rclb
pop
leave
mov
sub
mov
push
lret
popf
scas
es
test
rcrb
or
jle
mov
add
push
js
jns
jns
data16
dec
pop
fnsave
stc
or
iret
insb
xor
lret
push
cmpsb
mov
mov
out
loop
fimuls
add
fisubl
pop
add
xor
sbb
loopne
fucomip
xor
frstor
mov
rorw
push
cwtl
mov
es
push
mov
ror
lea
xchg
fcmovbe
fisubrl
dec
loope
jne
notl
jge
adc
cwtl
fs
mov
pop
cmpsb
xor
fsubr
mov
data16
iret
cmp
sub
add
scas
xor
adc
and
mov
test
pop
in
inc
jge
lret
shrb
mov
dec
pop
jno
mov
lods
lcall
fldt
mov
jp
pushf
cmp
scas
ret
ljmp
mov
mov
fcmovu
idiv
cmpsl
fisubs
mov
sbb
dec
xor
int3
in
int
sbb
xor
push
dec
dec
mov
ds
xlat
lahf
dec
and
jmp
ficoms
dec
pop
push
jnp
mov
addr16
dec
test
pop
inc
imull
mov
xor
xchg
inc
xor
sbb
pop
mov
jbe
xor
ljmp
mov
dec
lock
daa
push
lds
sbb
inc
jl
scas
cmp
cmp
push
rolb
cmp
fisubs
pop
movsb
scas
xor
add
cmp
xor
xchg
repz
or
in
adc
dec
cwtl
fistl
push
les
or
sarl
cmpsb
mov
pop
inc
mov
lds
sbb
out
sbb
xchg
and
mov
sub
mov
jb
les
call
lods
hlt
movsl
setg
dec
push
mov
mov
lret
or
jmp
push
xchg
cmpsb
ret
movsl
mov
pushf
bt
repz
and
shlb
and
push
push
jg
testb
test
test
rcll
pop
jmp
dec
imul
pusha
mov
fnstcw
adc
fcoms
add
arpl
aam
popa
mov
push
mov
inc
or
dec
xchg
mov
pop
push
es
stos
lcall
addr16
push
mov
adc
fstps
cmp
pop
xor
jp
pop
js
xor
pop
mov
xchg
out
add
adc
add
push
iret
bnd
fbld
xor
jecxz
aad
adc
and
out
sahf
pop
ret
adc
out
jmp
bound
sub
dec
es
out
fisttpll
push
in
imul
mov
adc
xchg
lock
fisttpll
ljmp
xor
cmc
mov
fisttpl
lcall
xchg
add
ljmp
xor
scas
xchg
mov
pop
in
push
imul
sbb
jne
or
imul
cs
push
lock
nop
pop
push
mov
js
incb
jge
sahf
mov
jmp
jne
push
jmp
leave
into
rcrb
jmp
jnp
sub
cs
subb
sbb
cltd
xor
push
push
fisubrl
push
lret
mov
sbb
inc
sarl
mov
leave
push
dec
xchg
jle
ret
inc
test
test
jmp
cmp
mov
add
lods
jo
ds
sub
pop
jmp
push
dec
jno
pop
lahf
cli
sub
xor
push
lret
gs
adc
push
xchg
inc
sahf
inc
mov
mulb
test
cmc
jmp
pusha
cmp
dec
adc
mov
or
outsl
xlat
pop
in
jns
add
lods
adc
rorb
aam
mov
popa
adc
pop
stos
xchg
in
out
sbb
outsl
je
mov
aaa
mov
iret
mov
aas
sbb
fisubl
xchg
push
lds
dec
lcall
or
addr16
push
data16
pop
and
ficompl
push
mov
incb
push
adc
mov
push
jns
pop
outsb
mov
bound
int3
inc
mov
jo
push
mov
xor
and
call
popa
add
inc
xlat
xchg
or
cmp
mov
out
jnp,pn
cli
jbe
inc
adc
mov
jae
sub
pop
je
jo
cmp
ucomiss
int3
add
cmp
jmp
xchg
sub
xor
pop
lcall
das
xor
pop
stos
enter
mov
loop
pop
inc
inc
fcomps
sbb
xchg
pop
mov
dec
lahf
sub
inc
ljmp
xchg
aas
jbe
out
fsubrl
loop
push
inc
in
dec
or
inc
fiaddl
dec
rorl
fdivr
push
sub
jnp
cmp
push
mov
or
repz
mov
insb
jle
decb
sub
rcl
xor
and
cli
sbb
push
mov
xchg
es
dec
mov
out
sbb
inc
sbb
ret
push
mov
cli
push
enter
outsb
mov
add
fwait
cvttps2pi
arpl
add
out
ficoms
mov
lods
ljmp
fdivrl
enter
ficoms
dec
sahf
sahf
adc
jle
outsl
mov
mov
xor
pop
pop
pop
sub
mov
ret
pushf
aas
dec
rcrb
arpl
fwait
mov
jl
jae
in
xchg
lds
call
mov
xchg
into
pushf
xchg
or
lods
pop
xchg
and
dec
jo
filds
sub
in
cmpsb
cmp
mull
jmp
imul
mov
ds
lea
inc
movsl
leave
and
aad
fldt
mov
fstl
inc
test
movsl
insb
out
jge
pop
shrb
dec
lock
cmpsl
fldl
mov
xor
iret
cmpsl
mov
push
push
sarb
fmull
sbb
stos
add
push
out
jno
jne
insb
loope
iret
mov
mov
subl
hlt
inc
lods
clc
fcomps
lods
ds
cs
mov
stos
mov
jle
pop
ret
add
into
std
loopne
pop
les
lods
add
push
nop
fs
sub
jmp
sbbl
mov
das
add
jmp
hlt
js
sub
imul
inc
out
rcl
push
mov
pop
mov
xchg
ja
cltd
mov
mov
push
jno
repz
push
jne
cmpb
cmp
sbb
arpl
xchg
mov
das
adc
mov
repnz
push
push
dec
or
xlat
push
cmp
lret
test
cmpsb
adc
jle
lret
cld
sbb
lock
xchg
lock
jecxz
push
iret
shll
jns
xor
aam
call
arpl
pushf
sti
add
sub
lock
seta
mov
ret
lret
pop
lods
movsl
xor
ljmp
data16
cmp
cmp
push
jnp
mov
stos
int3
mov
fmuls
data16
and
sbb
sub
cwtl
stos
mov
sbb
inc
sub
and
jle
mov
fisubrl
or
push
jnp
std
pop
test
lcall
pusha
xchg
jge
out
sbb
stos
loope
mov
dec
scas
fstl
push
sahf
ficompl
mov
aam
lret
push
dec
dec
mov
daa
ljmp
rcrl
sub
test
and
push
mov
adc
es
ret
dec
mov
idivl
dec
lret
bound
add
loope
or
cmp
mov
ds
mov
clc
jo
cmpsb
add
sub
xor
pop
outsl
xor
xor
jp
pop
mov
loop
into
pop
mov
lret
stos
and
movl
stos
xor
xchg
or
push
add
dec
push
pop
iret
mov
dec
jb
leave
xchg
pop
mov
adc
pop
stos
insb
imul
xchg
stc
jbe
test
js
cmpsb
in
jnp
cmpsl
imul
test
scas
pop
or
xchg
iret
addr16
and
mov
jno
shll
cmpsb
hlt
dec
pop
mov
jle
sahf
and
addr16
loop
loop,pt
ror
outsl
and
mov
jns
cmp
cmp
cmp
ja
inc
insb
xchg
shrb
jge
xor
aas
push
lret
jae
outsl
pop
out
mov
popa
or
ror
lods
inc
popf
dec
ss
push
jmp
into
jbe
les
push
add
mov
lods
ficoml
jg
inc
roll
mov
jg
mov
insb
jns
cmp
je
call
mov
cmc
movsb
data16
xchg
push
leave
cwtl
dec
xor
lods
pop
jb
into
mov
int3
jp
mov
jno
enter
ljmp
addr16
imul
mov
and
pop
adc
sbbl
mov
cltd
xchg
mov
sbb
outsl
and
mov
enter
jg
hlt
dec
fcmovne
dec
sub
mov
imul
and
shrb
orb
scas
xchg
ds
jp
gs
cmpb
push
imul
cld
fldenv
sahf
add
popf
stos
pop
xchg
adc
sahf
loope
iret
insb
outsb
jl
jae
lret
dec
mov
push
mov
fidivrl
and
mov
in
ss
jo
dec
into
push
lret
add
mov
into
jge
jo
outsl
aaa
add
dec
stos
js
test
fists
insl
in
or
adc
sti
jno
push
xchg
stos
mov
dec
sbb
ret
mov
sub
je
xor
cli
xor
or
cmp
cs
sub
pop
or
subb
mov
push
out
cli
mov
xor
out
xchg
rcll
sahf
fs
mul
nop
lock
jnp
jp
jl
xchg
sub
mov
xor
sub
stc
sub
lods
cld
adc
ja
push
dec
repz
adc
dec
mov
in
xchg
insl
aas
aas
jb,pn
inc
andb
add
popf
and
sbb
fsubr
scas
or
rcrl
dec
ret
int3
jmp
arpl
imul
xchg
push
adc
jp
fwait
jb
and
rcrb
movsb
xlat
jns
push
fcoms
or
addr16
sbb
adc
jb
dec
mov
or
add
int3
push
int3
push
jg
mov
jge
pop
cmp
bound
mov
call
fmuls
fwait
push
push
arpl
mov
jnp
push
jl
in
dec
mov
sub
push
dec
fbld
out
lret
sbb
ds
push
mov
push
int3
subb
jns
ljmp
scas
jl
in
dec
in
fnstenv
inc
jl
push
shlb
jns
and
shll
dec
loopne
jl
mov
call
in
ror
sbb
inc
sub
outsl
mov
dec
sub
test
xchg
cs
dec
lods
enter
push
mov
ljmp
xor
push
mov
jp
jnp
rcrb
adcl
dec
andb
jb
test
push
cmp
jo
pop
js
aas
mov
dec
fwait
push
bound
aam
jle
inc
xchg
insl
mov
out
adc
xlat
rolb
push
movsb
inc
jp
movsl
movb
leave
sti
push
mov
sub
lds
ret
jp
pop
outsb
nop
add
and
jmp
mov
and
andb
cmp
fs
out
push
adc
push
mov
cmp
andb
sbbb
pop
nop
sbb
fistpl
mov
out
push
mov
aaa
inc
jnp
mov
aad
mov
pop
lret
fidivrs
push
sahf
sbb
pop
dec
push
xorb
pop
pusha
push
inc
ror
out
or
int3
ret
insb
lret
push
outsl
test
arpl
daa
and
push
mov
psubsw
xchg
cmpsb
popa
jne
cli
and
sub
push
outsl
ret
mov
mov
mov
in
mov
jb
add
pop
das
pop
shll
scas
mov
jle
xlat
sbb
movsb
fdivs
repnz
jl
loopne
lock
cs
imul
xor
xor
popa
push
aam
xor
sbb
push
adc
xlat
fwait
xchg
dec
jne
les
mov
nop
ja
lret
mov
push
insl
fmuls
or
xor
ret
pop
jge
dec
ljmp
mov
jbe
and
push
and
addr16
je
stc
aam
inc
fsubs
aam
sub
fdivrs
or
sbb
sub
je
cltd
popa
mov
lds
sahf
ret
jo
loopne
cpuid
test
xor
mov
sbb
stos
dec
das
loop
iret
xchg
dec
sub
pop
adc
in
add
adc
xchg
into
xor
fldt
mov
mov
mov
out
inc
inc
sbb
int3
stos
movsl
cmpsl
inc
jg
cmp
mov
xor
pusha
jbe
shrb
das
nop
add
aaa
or
xor
scas
je
push
jb
xor
xchg
lret
sbb
in
mov
mov
cmp
xchg
stos
mov
push
jne
mov
pop
xor
stos
mov
jo
push
mov
stos
cli
out
pop
mov
sti
push
mov
push
ss
loope
clc
pop
pop
push
xchg
in
xchg
push
andb
cmp
cmp
sub
loop
push
cmc
test
in
cmp
popa
dec
movsb
pop
aam
jb
ficompl
mov
pop
sahf
rclb
pusha
mov
insb
cmp
cmpsl
adc
push
loop
pop
loope
pop
ss
xor
outsb
call
lods
lds
push
jp
pushf
js
inc
inc
dec
ror
sub
push
in
inc
stos
push
divb
jns
or
outsl
dec
inc
mov
mov
xchg
outsl
aam
pmulhuw
pop
ret
lret
cmp
and
and
scas
add
lret
sub
call
mov
imul
jno
rcl
aad
mov
or
xchg
stos
lcall
out
jnp
jo
mov
inc
jb
xorl
arpl
push
sub
pop
cltd
int
ficompl
cmc
pop
pop
xchg
xchg
leave
je
ljmp
dec
mov
inc
lds
insb
mov
call
dec
mov
lret
mov
daa
dec
lret
fmuls
clc
daa
call
out
push
lahf
push
and
dec
pop
sbbb
xchg
push
sahf
push
addr16
or
dec
pop
dec
ss
stos
adc
lock
std
pop
add
xchg
pop
xchg
push
sub
arpl
rclb
stc
negl
or
lock
loop
in
dec
push
fstps
jecxz
xorb
mov
or
test
jge
popa
mov
ret
xchg
dec
push
mov
ret
int3
mov
scas
mov
invd
lcall
mov
sub
sti
scas
leave
pop
jbe
xorl
cmpsl
popf
ret
cli
into
dec
jo
push
xchg
rclb
push
ds
popa
mov
sub
push
mov
xlat
aam
pop
cmp
cs
into
push
mov
adcb
fisttps
outsb
sub
cs
aaa
testl
jmp
pop
out
fdivrl
push
into
test
ljmp
mov
adc
testl
push
into
test
add
xchg
pop
push
push
xchg
push
outsl
pop
aam
push
pop
jecxz
push
es
ret
insl
pop
out
mov
push
xlat
push
outsb
repz
enter
fwait
outsb
ficompl
mov
outsb
sub
xchg
mov
and
dec
iret
mov
push
pop
mov
repnz
mov
jl
and
jb
repnz
xchg
add
jnp
push
ret
add
mov
inc
ljmp
ret
push
add
testb
leave
out
push
outsb
push
lock
test
call
mov
mov
cmpsl
xor
loope
mov
data16
mov
iret
sahf
add
inc
mov
in
pop
pushf
lahf
and
aam
adc
sub
push
xchg
nop
xchg
popf
mov
lods
mov
xor
gs
sub
cwtl
mov
jo
dec
mov
rorb
dec
mov
xlat
push
jb
pop
xchg
ficoml
dec
mov
jge
pop
inc
aaa
adcb
mov
push
mov
pop
pusha
in
pop
jns
arpl
push
nop
cmp
into
dec
mov
push
push
xor
daa
inc
in
fcomps
mov
daa
xor
fbstp
pop
or
int3
sbb
lcallw
push
imul
int3
add
out
xor
ret
push
scas
cs
push
ss
rcrb
into
cwtl
jmp
ds
mov
call
daa
lock
aaa
push
stc
repz
dec
out
rorb
inc
xchg
and
sti
popa
jo
bound
inc
adc
mov
fcmovne
inc
sahf
cmpb
sahf
ss
xor
loop
pop
mov
adc
push
and
xlat
jle
fistpll
daa
insb
pop
out
je
aaa
outsb
mov
adc
xorl
imul
inc
jg
sar
mov
jb
jl
xchg
test
jae
mov
push
jo
push
dec
pop
iret
outsb
add
test
push
xchg
lods
stos
sbbb
cmovnp
xchg
mov
call
cs
xlat
or
cli
dec
enter
add
mov
jnp
rolb
test
push
sbb
fs
jbe
into
mov
pushf
and
or
fsub
pop
or
or
gs
shr
out
push
sbb
ja
loopne
sbb
cmp
fdivrs
jae
hlt
pop
fsubr
cmp
sbb
ljmp
repnz
mov
mov
iret
pop
jno
ret
inc
outsb
fwait
ret
xchg
jle
inc
mov
lret
mov
jb
mov
les
and
adc
mov
pop
fst
fists
scas
mov
and
cltd
pop
stos
cmpsl
pop
or
insl
xlat
xchg
mov
scas
cmpsl
jl
mov
mov
imul
xlat
pusha
mov
cmpsb
packsswb
pop
out
pop
lods
push
pop
testb
jg
test
sbb
or
enter
hlt
pop
cmp
mov
clc
sub
jle
fs
dec
sbb
pop
fldl
ret
incb
outsb
imul
stc
ja
ret
jae
xchg
jmp
stc
fdivrl
mov
loopne
stos
inc
xlat
sub
push
xchg
movsl
ret
pop
std
popa
inc
shrb
jne
jae
dec
stos
mov
out
mov
into
mov
add
and
xlat
repnz
jne
mov
daa
inc
lcall
inc
sti
xchg
addr16
push
pop
sub
and
mov
aaa
lds
ja
sub
lahf
and
xorb
inc
mov
inc
add
cwtl
pop
pop
or
aas
hlt
bound
cs
nop
lods
cmp
sar
ljmp
sbbb
jge
jle
mov
fdivp
shrl
xchg
inc
mov
insb
inc
add
xchg
cmpsb
push
adc
ret
xlat
sub
sub
aaa
cli
arpl
inc
shrb
rclb
sbbl
outsb
jae
inc
push
in
inc
rorb
imul
loope
mov
xchg
mov
mov
push
jbe
idivb
or
sub
aad
fisubs
sub
mov
dec
gs
insb
dec
out
rcr
fcoml
sub
es
cli
sub
mov
xchg
pop
cld
push
lock
fstpt
shlb
lret
or
mov
ljmpw
shrl
into
test
lock
mov
mov
mov
jle
leave
xchg
inc
or
jb
ret
pop
out
cmp
outsl
pop
fnsave
cmp
and
stc
dec
xor
push
inc
xlat
call
dec
stos
repnz
add
mov
ljmp
adc
dec
pop
push
xchg
lods
pop
jnp
ss
pushf
out
and
imul
dec
ror
push
adc
jno
and
cmp
fwait
lock
ficoms
jge
shlb
xor
in
fwait
jge
outsl
xchg
jb
mov
lea
icebp
filds
adcb
cmp
lret
js
dec
daa
out
mov
imul
cmc
push
cmp
loope
jae
dec
dec
int
stos
test
push
cld
rcrl
and
test
hlt
push
dec
rcll
into
test
dec
into
cli
test
das
push
xchg
jp
mov
stos
xchg
es
popf
mov
inc
fsts
push
push
mov
ja
or
scas
sahf
js
ljmp
iret
ret
enter
dec
insl
scas
and
cs
xchg
aam
faddp
int3
push
stc
aam
js
imul
cwtl
adc
push
push
mov
inc
dec
lahf
into
mov
and
mov
adc
mov
jae
dec
sub
push
sub
sub
push
xchg
push
sbb
cs
xor
push
jb
push
mov
sbb
fistps
inc
cwtl
add
mov
pop
notl
mov
js
adc
pop
mov
mov
or
jnp
dec
xchg
mov
ljmp
mov
mov
push
push
sub
push
cmp
daa
and
in
outsl
jmp
and
jbe
mov
push
dec
mov
jp
cli
cwtl
mov
xchg
imul
out
or
push
cmp
lret
popa
cli
fisubrl
test
sbb
dec
shll
outsl
push
push
pop
lcall
js
lret
xor
sub
inc
push
mov
scas
pop
pushw
lret
cmpb
sbb
lods
or
adc
push
es
int3
xchg
rcrl
push
jne
stos
sbb
xchg
sahf
ret
mov
pop
das
ljmp
pop
rcrb
push
cmp
popa
mov
jmp
pop
sbb
or
sub
push
xchg
lods
mov
jg
dec
push
dec
rcr
sahf
outsb
sub
fcomps
mov
dec
push
sbb
lret
daa
lcall
dec
shrl
xor
mov
sahf
xchg
mov
push
add
and
inc
dec
dec
mov
jle
sub
mov
out
pop
subb
data16
gs
push
push
mov
push
push
push
jae
inc
mov
out
and
in
stos
or
lahf
mov
sub
jns
lahf
je
out
jmp
orb
add
push
or
ss
push
pusha
mov
and
push
fmull
lret
pop
dec
dec
ds
ret
xor
fistps
ret
mov
cmp
int
push
scas
push
ss
xchg
in
xor
out
sbb
aaa
ja
enter
xchg
ret
xchg
daa
sbbl
and
es
push
cwtl
dec
popl
xchg
jne
mov
repz
push
dec
and
cld
loope
xchg
andl
add
addr16
sub
cmp
sub
sub
mov
rorb
ret
outsb
in
add
sub
ret
lock
scas
loopne
fcmovnu
std
fldcw
enter
xor
add
mov
mov
jnp
lea
xor
arpl
popf
mov
add
lahf
ret
aaa
sbb
iret
mov
imul
or
scas
push
mov
call
inc
inc
mov
lods
push
stos
fadd
and
mov
hlt
loopne
mov
mov
mov
out
mov
inc
rcl
fsubrs
rorb
gs
xor
pop
push
sbb
mov
mov
pushf
mov
pop
pop
stos
mov
and
push
sbb
scas
insb
lcall
push
stos
inc
pop
push
shl
mov
pop
scas
adc
xor
lret
mov
out
jae
filds
xor
mov
cld
jae
scas
inc
es
out
dec
mov
xchg
in
popl
pop
xchg
je
pop
fwait
xchg
pop
out
push
pop
fstpl
into
inc
arpl
mov
in
invd
test
xchg
mov
lea
inc
pop
mov
movsl
sub
aas
push
roll
mov
push
inc
into
lahf
jg
push
dec
cmpl
push
inc
dec
rolb
mov
decl
cmp
shlb
xor
fcompl
rorl
rcll
lret
dec
jno
pop
int3
adc
and
into
mov
push
mov
pop
cmc
nop
lret
and
jge
into
xchg
cmp
xchg
xor
rcrl
insb
inc
mov
out
test
int
jmp
outsb
stos
arpl
or
mov
ror
or
cmp
ret
out
bound
push
push
cmp
fbstp
mov
sub
adc
cmp
rorb
mov
mov
mov
mov
push
mov
pop
lds
call
mov
ss
rcrb
aas
xchg
adc
sbb
ja
sub
scas
std
xchg
inc
add
fdivrl
push
iret
pop
leave
movsl
add
mov
xor
dec
pop
xchg
dec
mov
mov
mov
jmp
mov
cmp
int
arpl
mov
xchg
sub
cmp
jbe
repnz
in
sub
shrl
fs
mov
cwtl
xor
mov
sbb
and
xchg
popa
dec
mov
mov
dec
jle
fdivrl
or
adc
mov
mov
jns
fists
sbb
push
ret
mov
xchg
adc
fwait
xchg
not
addr16
ds
ja
inc
sub
cwtl
lcall
mov
cmp
test
ret
ret
inc
xchg
or
sbb
lock
push
mov
sbb
cli
sbb
adc
imul
lods
in
stos
xrstor
xor
cltd
xchg
hlt
dec
sarb
shll
fstl
lret
mov
ficompl
xchg
push
into
xor
xchg
fsub
hlt
loope
dec
and
lcall
ljmp
xchg
in
js
mov
cmp
test
outsb
push
jl
std
into
xchg
cmp
xchg
fcomps
data16
in
lret
adc
out
fs
add
imul
mov
enter
test
stos
inc
pop
mov
daa
inc
loopne
cmc
jbe
jno
jmp
lret
mov
cli
fcoms
or
out
xor
mov
dec
fidivl
lds
icebp
sbb
stos
subb
addb
push
imul
movsb
sub
and
insb
pop
push
out
mov
ds
jecxz
mov
and
inc
adc
dec
int3
cmpsl
jmp
les
xor
mov
nop
leave
jb
adc
jecxz
sub
fimull
sbb
daa
mov
mov
aas
icebp
ljmp
test
sub
sarl
jb
push
mov
dec
jb
fiadds
fmul
adcl
push
adc
sub
mov
sub
adcl
je
add
mov
jle
mov
jmp
sbb
mov
aaa
jb
mov
shll
mov
sub
mov
rolb
in
push
xlat
ret
cmp
je
movsl
mov
and
dec
mov
xlat
push
fisttps
push
mov
mov
neg
shr
jae
jb
sarl
outsl
stos
fs
ficoms
pop
bound
dec
mov
dec
test
int3
dec
mov
adc
push
mov
call
ljmp
ss
out
scas
fs
fiaddl
dec
mov
into
jp
fists
popf
jmp
sub
xchg
clc
leave
adc
out
xchg
xchg
addr16
push
sarl
out
and
mov
xchg
or
bnd
push
xchg
xchg
into
cmp
ljmp
jle
pop
mov
sbb
push
sbb
lods
xchg
jecxz
push
scas
nop
inc
mov
pusha
cld
and
xor
cmc
les
and
adc
mov
jge
out
out
fsubs
stos
andl
or
sub
repz
dec
inc
push
dec
int3
dec
cmp
repnz
mov
push
mov
mov
dec
std
into
js
loope
add
dec
aas
jnp
jae
inc
mov
enter
or
pop
mov
dec
testl
xlat
pop
movsb
loope
xor
testb
iret
call
push
mov
movl
bound
jnp
xor
pushl
pop
xchg
pop
xchg
int
lret
fldenv
pop
scas
into
iret
stos
mov
push
inc
xchg
sub
or
ja
lods
mov
push
popa
outsb
iret
test
pop
xchg
outsl
enter
mov
out
sbb
push
mov
data16
ja
imul
loope
jae
jmp
mov
outsb
pop
and
and
xchg
xlat
sub
orl
repnz
jo
loop
cmp
xor
iret
push
repz
jns
loope
jo
jnp
ss
out
jne
sub
dec
imul
push
xor
fcoml
cli
sbb
sub
xor
in
mov
adc
cwtl
sub
xor
imul
xor
sarb
xlat
lahf
jg
scas
ja
push
push
dec
xor
jmp
xchg
pop
out
push
push
jns
test
pop
enter
loop
out
push
fcoml
sbb
jnp
add
push
xor
mov
repz
shll
push
ds
icebp
scas
mov
loop
mov
dec
aas
int3
inc
mov
rcrl
xchg
fsubs
dec
sub
mov
ret
shll
xchg
inc
aas
push
sub
enter
cwtl
fsubrs
sub
push
roll
sbb
outsb
or
sbbb
popa
repnz
dec
mov
sbb
inc
push
test
imul
call
xchg
jb
mov
cmpsb
enter
call
stos
cmp
cwtl
punpckldq
pop
into
cli
sub
jo
fs
ds
sub
mov
sbb
test
sahf
lcall
push
cltd
add
addr16
jnp
add
push
stos
outsb
mov
or
imul
cmpsl
loop
cmp
and
or
jge
js
push
outsb
add
push
mov
mov
mov
fimuls
jo
aas
ja
push
cld
insb
or
jge
fcomps
dec
push
aam
sbb
mov
psrld
cwtl
xor
push
fadd
mov
outsb
push
xlat
push
fidivl
xlat
sub
fcoml
xchg
xchg
repnz
call
in
insb
cmp
and
mov
jg
cwtl
dec
aam
or
add
push
sub
adc
jle
jo
dec
lret
test
lods
xor
rcl
addr16
xor
mov
and
jmp
jae
and
jmp
mov
xor
stos
popf
and
dec
push
arpl
cmp
stos
cmp
divb
pop
fstpt
shlb
mov
mov
push
push
data16
cmp
jo
pushf
xor
ljmp
adc
lcall
cs
inc
push
jae
inc
lahf
xchg
jne
adcb
jecxz
in
les
int
pop
aas
inc
stos
mov
sub
mov
push
fwait
test
push
paddsb
fnstsw
mov
push
ret
mov
outsb
inc
sarl
loopne
jge
push
mov
xor
test
bound
inc
cld
pop
xchg
adc
aaa
and
out
mov
aas
sbb
mov
out
xchg
sbb
dec
mov
mov
mov
pop
and
xor
jae
test
mov
sbb
loopne
std
push
ret
dec
push
push
cmp
pop
ficoms
movsb
es
or
pop
in
stos
lods
fidivrl
into
in
fsubrs
pop
mov
movl
cmp
mov
cltd
jl
add
jp
hlt
data16
lods
arpl
xchg
out
adc
sahf
pusha
sbb
fsubr
xchg
lret
into
pushf
imul
fwait
xor
sbb
push
push
cmpsb
jne
mov
cmp
sbb
cltd
sahf
mov
out
mov
int
jno
int3
pop
pop
jne
push
mov
mov
inc
jp
and
pop
ja
rcrb
sub
xor
into
mov
xor
in
dec
out
ret
xchg
dec
out
imul
outsl
jle
cld
adc
dec
cmpsl
xchg
sub
mov
xorb
stos
pop
and
xchg
rolb
repnz
sub
cmpsb
fdivrs
or
das
std
mov
lret
sbb
lahf
sti
addr16
cmpsb
mov
fisubs
repnz
int
lds
sub
adc
mov
mov
mov
mov
adc
test
mov
cwtl
sub
jns
imul
mov
arpl
lret
sbb
es
inc
leave
add
sbb
or
mov
hlt
lea
add
jbe
push
and
fwait
sbb
inc
imul
stos
imul
jns
cmpsb
test
or
cmpl
xchg
mov
into
int3
inc
outsl
push
mov
repz
orb
or
mov
fisubrl
fadd
dec
or
mov
pushf
into
push
mov
outsb
adc
mov
mov
pop
adcb
mov
sub
shrw
mov
mov
mov
mov
sbb
mov
loop
fcmovb
insb
pop
dec
stos
xchg
test
pop
and
pushl
into
cmp
in
xlat
test
fistpll
aas
xchg
shlb
ret
into
test
inc
cmp
pop
pop
jmp
jb
test
fmuls
fimuls
mov
or
shr
push
in
cwtl
mov
cmp
jne
inc
addr16
stc
inc
mov
and
pop
jae
sbb
scas
mov
mov
jb
rcl
adc
fdivs
push
enter
cmp
and
test
fiadds
pop
sbb
ss
sbbb
xchg
xchg
out
int
cmovge
sbb
jbe
repz
push
push
iret
stos
je
in
adc
mov
sbb
cltd
roll
sub
notb
cmp
and
stos
aam
xchg
clc
adc
pushf
sbb
push
mov
fisttpl
sub
cmp
gs
popf
mov
fadds
mov
sahf
int3
and
lret
mov
mov
enter
or
mov
inc
jle
dec
mov
fisubl
or
push
sub
fnstenv
nop
rcrb
cli
jle
inc
pop
andb
xchg
dec
ds
xchg
stos
or
ficomps
mov
mov
or
push
daa
inc
lea
jle
shl
dec
adc
es
dec
ss
rcr
or
ljmp
xchg
push
iret
leave
push
jae
inc
pop
dec
out
xchg
aas
fnstsw
cmp
movsb
loope
lcall
ret
roll
jb
dec
jno
mov
mov
pop
out
jecxz
mov
in
data16
mov
sbb
mov
pop
mov
mov
in
imul
add
mov
cmp
nop
adc
push
mov
sbb
out
movsb
stos
jbe
mov
into
aam
pop
jbe
xchg
xlat
inc
idivl
outsb
cltd
scas
ja
iret
ja
hlt
pop
mov
xchg
cld
jecxz
mov
cmp
in
inc
sbb
jecxz
popa
shll
push
pop
icebp
sub
ljmp
push
ror
scas
xchg
shlb
mov
enter
mov
xchg
push
sub
int3
stc
cmpsl
adc
add
push
or
mov
movsb
mov
add
sahf
xor
cmpsb
in
push
imul
shll
cld
mov
sbb
imul
lock
adc
enter
pop
and
sbb
fiaddl
pushf
or
mov
jne
xorl
add
mov
dec
shlb
add
daa
loope
cltd
setp
cmpsl
pop
inc
test
jns,pn
in
adc
xor
stc
popf
insl
test
xchg
add
jo
adcl
mov
inc
push
mov
push
cwtl
aaa
mov
mov
mov
xchg
push
xchg
je
mov
jp
inc
mov
add
ret
pop
add
mov
lods
jge
scas
in
xchg
notb
jp
dec
fdivrl
jb
mov
stc
data16
dec
not
adc
sbb
pushf
bnd
cwtl
push
cmp
jmp
ror
push
cmp
out
sbb
in
xchg
mov
imul
arpl
into
pop
sub
jo
or
outsl
icebp
lcall
test
xor
or
dec
movsb
pop
iret
cmp
fnop
add
push
adc
sub
mov
sbb
pop
pop
push
scas
or
mov
cli
mov
lret
or
push
lret
jl
fisubl
test
pop
jae
sahf
cld
xchg
int
insl
into
ja
mov
sbb
pop
dec
ljmp
xchg
ljmp
push
fistpll
cmp
pop
lret
jae
test
stos
dec
outsl
jg
sbb
outsl
es
loope
mov
xchg
and
mov
sti
nop
xorl
mov
inc
mov
mov
sbb
push
pop
pushf
ret
sbb
or
add
into
mov
loopne
aad
aad
or
jae
in
push
les
lea
adc
pop
pop
cld
andb
push
inc
ljmp
out
stc
cmpsl
fcoml
arpl
call
addr16
or
lods
pop
rcrl
jo
mov
dec
pushf
das
sahf
or
arpl
pusha
sub
sahf
aad
pop
into
stos
mov
fcmovne
cli
pusha
pop
out
fistps
test
lods
pop
mov
daa
imul
int3
add
push
int3
xlat
jp
and
xchg
addb
rcrb
aaa
dec
lds
mov
xor
cmp
push
int
pusha
arpl
outsb
mov
fs
lret
inc
addr16
es
arpl
shlb
ja
jb
enter
enter
cld
addr16
bound
mov
sub
loop
loope
cwtl
in
dec
pop
les
cmp
xor
add
sub
adc
add
and
pop
lret
pop
jnp
fidivrs
and
adc
pop
fiaddl
pusha
cmpb
testb
jmp
outsl
cmp
sahf
imul
push
dec
bound
pop
ja
or
mov
add
dec
inc
dec
push
dec
movnti
jns
inc
pop
sub
dec
or
xor
or
fistps
pop
inc
and
mov
mov
add
sub
or
fcomi
psrld
xor
aaa
and
rclb
fildl
stos
lods
popa
inc
popf
int3
adc
ds
in
push
mov
adc
jle
dec
clc
mov
cli
mov
jecxz
je
mov
fldt
sahf
mov
jl
jnp
push
cld
mov
push
dec
or
jbe
jg
call
ret
ret
jb
mov
repnz
loopne
jl
fwait
sbb
into
xor
push
jnp
push
mov
jbe
mov
sbb
jb
cmp
push
cmc
rcrb
scas
pop
fisttpll
hlt
cltd
lret
dec
test
iret
mov
sub
call
xchg
movsl
cwtl
pop
sub
mov
mov
mov
leave
ret
cli
adc
push
ljmp
push
push
stos
pop
mov
pop
aaa
or
mov
int
push
adc
dec
out
cmpsl
mov
mov
jnp
xchg
lret
or
pop
das
pop
test
or
sub
mov
pop
aad
add
aas
push
mov
sub
js
aaa
ss
cmc
push
das
sub
mov
cmp
dec
ljmp
dec
les
xchg
mov
cli
cli
xor
iret
mov
push
test
xchg
cmp
mov
pop
mov
mov
sbb
loope
xor
fcmove
fimull
xlat
xor
push
test
bound
outsl
sbb
jno
push
dec
sbb
stos
cmpsl
aad
push
mov
cmp
clc
add
sbb
jle
push
in
jge
dec
push
rolb
stc
negb
push
gs
or
aas
pop
fiaddl
in
shrl
inc
cmc
jb
enter
enter
rclb
mov
fmul
and
loop
and
fildll
js
cmpsl
inc
xchg
cmpsb
jle
mov
inc
dec
idivb
pop
push
sarl
dec
inc
cmpsb
jnp
push
sti
add
repnz
movsb
lock
loop
je
cli
xor
es
scas
int3
stos
inc
pop
out
scas
nop
jo
inc
cmpsb
scas
sbb
cmp
mov
test
dec
fwait
dec
mov
mov
aas
adc
pop
mov
jg
outsb
xchg
push
dec
sbb
sahf
pusha
outsb
and
fs
lahf
int
gs
and
insb
dec
add
mov
mov
mov
test
adc
sahf
mov
and
xchg
mov
jl
and
out
movsb
and
cld
jge
xchg
mov
mov
xchg
cmpsb
mov
xchg
jb
lahf
notl
adc
adc
out
xor
mov
daa
ss
mov
mov
mov
push
cs
push
inc
mov
sub
ss
adc
es
push
xorl
pop
pop
popf
scas
mov
sub
dec
es
icebp
xchg
push
cwtl
push
xchg
lcall
sarb
inc
hlt
sbb
test
inc
jo
in
jmp
dec
mov
clc
das
mov
mov
cmpb
xor
addr16
je
or
in
pop
or
rorl
iret
sbb
dec
cld
or
js
movsb
sahf
ss
add
or
xor
adc
pusha
out
sub
sbb
mov
ja
nop
aad
pop
scas
pusha
mov
idivb
pop
jne
outsl
jg
aas
add
sub
into
jge
cmpsb
daa
pop
lock
cmpsl
mov
jle
cmc
xchg
pop
xchg
stos
mov
out
push
imul
jge
ret
jo
or
dec
cmp
fists
lds
jae
in
mov
retw
repz
inc
add
and
aaa
movsb
jne
in
xchg
out
mov
cltd
xchg
cmpsb
push
xchg
test
xchg
shlb
pop
lret
cmpsl
gs
shl
cmp
shll
imulb
or
fisubrs
ds
cmpsl
mov
inc
repz
stc
lret
sub
fistps
pop
adc
out
push
sub
xchg
mov
lcall
sub
mov
sahf
xchg
adc
pop
nop
cs
mulb
xchg
dec
add
jb
outsl
mov
subb
pop
sub
data16
test
test
add
cmpsb
int3
repnz
outsl
ja
loop
bound
add
clc
xorb
xchg
xor
mov
std
mov
test
enter
jmp
jp
push
fdivl
pop
jecxz
add
adc
filds
test
push
jnp
pop
sub
fsubrl
push
enter
mulb
lods
xor
cs
push
push
mov
sub
mov
cmpb
jmp
clc
ss
pushf
jno
bound
mov
das
ss
popf
arpl
adc
and
inc
fucomi
je
imul
cmp
jle
or
out
mov
lahf
pop
gs
pop
cmc
pop
mov
jle
daa
mov
inc
lcall
mov
je
imul
push
pop
xchg
mov
xchg
mov
aam
dec
jno
ljmp
pop
inc
shl
adc
sbb
pop
fldenv
rcrb
add
mov
and
jne
jb
pop
es
into
xor
push
pusha
jbe
mov
mov
push
scas
adc
cmp
mov
fstpt
xchg
sbb
xchg
lahf
lcall
push
sbb
adc
mov
mov
daa
fildll
scas
lds
scas
gs
mov
push
sub
into
inc
fs
xchg
cli
or
push
cmp
adc
cmp
xchg
in
xchg
ss
sbb
xorb
stos
pop
sub
adc
outsl
pop
shll
inc
pop
jecxz
inc
sbb
jp
into
mov
inc
cmp
test
xor
iret
dec
arpl
pop
and
insl
xor
push
js
push
xchg
ret
pop
push
sarl
inc
loop
aas
inc
inc
cmp
lcall
and
in
push
mov
ds
gs
fcomps
xchg
xchg
rcll
xchg
je
in
pop
mov
aam
mov
push
test
cmp
add
repnz
xchg
or
xor
repz
dec
iret
push
inc
add
pop
jb
das
std
inc
stos
add
xlat
xchg
fstps
inc
rolb
mov
push
jmp
dec
xchg
mov
pop
fsubs
cli
mov
daa
mov
jge
jmp
aad
cwtl
loop
and
lret
lahf
jle
sbb
in
jns
xor
jl
sahf
inc
sub
pop
adc
pop
and
aaa
std
lret
lea
cmp
xchg
jge
sub
sub
mov
mov
mov
aad
xchg
iret
xchg
and
lds
scas
jo
jmp
pop
mov
test
enter
and
jecxz
mov
cmpsb
ret
jmp
loop
cvtps2pi
scas
pop
cmp
cmp
and
sub
shrl
andl
dec
cltd
iret
jb
push
sarl
sarl
pop
test
pop
push
push
outsl
outsl
fldl2t
jbe
pop
jns
aad
inc
lahf
out
sbb
ficoms
sbb
adcb
int
loope
pop
test
mov
icebp
ds
cmpsl
and
mov
iret
jbe
mov
lods
lret
dec
dec
jecxz
pop
jns
sbb
inc
lahf
test
lret
adc
sti
divb
or
xchg
jle
inc
push
jecxz
lock
cmp
xor
daa
push
push
mov
cmp
leave
es
mov
pop
daa
iret
jmp
cs
repz
mov
push
jl
jmp
xor
xorl
mov
bound
cmp
push
and
cwtl
inc
sbb
cmp
mov
inc
ljmp
xchg
dec
rclb
iret
arpl
ret
push
mov
faddl
jmp
jnp
jae
cwtl
push
push
out
orl
fsubs
xchg
jecxz
outsb
les
xchg
sub
mov
js
cmp
leave
dec
rcrb
stos
inc
mov
push
cvtdq2ps
inc
lret
repz
or
sti
insl
xchg
lret
lods
jge
inc
cmp
adc
sbb
mov
push
xchg
xchg
loope
push
jo
xchg
mov
jg
andl
mov
fbld
mov
stos
mov
fisttpl
into
xchg
call
xchg
adc
je
mov
pop
gs
aaa
xlat
mov
divb
cmpsb
pop
push
popa
lcall
outsl
out
ret
push
mov
jg
cmp
push
hlt
push
xchg
repz
lods
add
repz
pop
jle
sub
inc
into
inc
sahf
leave
dec
in
out
adc
ljmp
push
mov
bound
or
mov
dec
or
in
mov
mov
xchg
bound
bound
pop
cmp
dec
dec
ljmp
inc
jnp
push
xchg
pop
xchg
and
mov
int
negl
jmp
jg
mov
xchg
fidivl
jae
push
jnp
stos
mov
leave
cmpsl
xor
pop
jmp
jo
xchg
popfw
add
push
lahf
fldcw
popf
in
mov
rcrl
mov
into
jb
in
push
dec
into
lret
jecxz
gs
sbb
xchg
add
insl
test
xor
xchg
lret
subl
fs
add
jno
sbb
jae
int
push
jnp
out
jge
mov
dec
mov
push
mov
loope
cmpsb
mov
jns
xlat
cmc
ds
push
cmpsb
outsl
sub
pushf
pop
sbb
cmp
and
cld
in
scas
pop
xlat
add
adcl
cwtl
fdivl
mov
push
outsb
pop
fsubr
lret
call
sahf
imul
arpl
arpl
push
cmpsb
add
in
jo
xorb
mov
lods
mov
popa
cmp
push
std
cmp
cmp
mov
sub
cld
mov
and
notl
ljmp
es
lret
cltd
lret
xchg
sbbb
add
popl
or
mov
jge
xchg
repz
daa
cmpsb
xor
rcl
icebp
or
dec
subb
ret
leave
mov
in
sub
adc
push
push
int
decl
repz
and
sbb
ja
and
hlt
arpl
test
mov
inc
ljmp
js
das
push
out
stos
mov
mov
adc
lret
cld
je
lcall
fwait
sub
push
jecxz
adc
xchg
mul
adc
out
das
pushf
push
shl
pop
aad
aad
xchg
into
dec
es
es
pop
adc
pop
xchg
xor
add
xor
push
pop
jp
lods
fmull
test
jge
add
fldcw
test
add
xchg
or
arpl
mov
cltd
push
in
xchg
jg
push
int3
unpckhps
xchg
into
lahf
fs
adc
xchg
cmpsb
pop
dec
call
xor
in
movsl
mov
mov
aad
lock
mov
daa
mov
or
outsb
and
xchg
in
mov
outsl
mov
cmpsl
and
daa
mov
push
jnp
or
pusha
insl
or
or
xchg
test
cmp
xchg
jmp
shr
fs
cltd
gs
adc
mov
mov
xlat
or
or
or
loope
push
sbb
imul
stos
iret
or
xchg
mov
sbb
jo
xchg
or
dec
mov
sub
pop
sbb
movsl
sub
jbe
pop
addr16
cmp
push
aam
rorb
xchg
aad
sbb
pop
lret
rol
es
pop
enter
push
cmpsb
out
xchg
inc
jno
xchg
add
xor
in
cmp
pop
in
out
add
fwait
push
lea
jno
je
arpl
outsl
sbb
addr16
mov
data16
dec
push
jo
push
int3
mov
inc
lcall
sar
rorb
rcll
or
mov
notb
jo
jns
insb
and
dec
outsl
push
mov
dec
call
sbb
sbb
mov
ret
mov
push
push
mov
jno
cmpb
test
xor
mov
lahf
adc
pushf
test
mov
shrl
das
gs
xchg
movsb
out
xor
dec
add
fsubr
aas
or
add
call
cltd
cwtl
dec
sub
mov
pushf
xchg
xchg
sub
int3
cmpsb
push
jmp
in
mov
jne
cmpsb
mov
jbe
cwtl
lcall
arpl
sub
movsl
data16
rclb
cmp
into
movsb
cmp
rcll
sub
jge
lcall
aam
scas
inc
std
repz
mov
ds
arpl
sub
out
das
outsb
pop
mov
sbb
test
pop
pop
dec
mov
sar
scas
mov
mov
loopne
add
inc
in
fidivrl
and
inc
xchg
sub
mov
rsqrtps
adc
jns
dec
icebp
sub
push
mov
push
in
decl
cld
repz
lock
adc
push
pop
jb
in
mov
inc
pop
loope
lret
aam
cmp
fwait
inc
ret
or
pop
inc
lahf
push
jae
inc
mov
jns
scas
outsb
sbb
cwtl
or
aad
shll
and
xor
cmp
mov
xchg
push
xlat
test
cs
outsb
push
call
xorl
sub
daa
aaa
in
daa
movsl
add
pushf
xchg
lret
push
jnp
xor
inc
rcrl
cmp
ret
mov
enter
add
jno
lods
or
in
pop
mov
int
mov
cmp
sub
jge
push
push
data16
or
pop
sub
mov
inc
mov
mov
pop
push
imul
push
pop
movb
mov
xor
mov
fildll
pushf
pop
fiaddl
sbb
scas
sahf
frstor
xchg
jne
or
and
clc
shrb
out
lret
lcall
mov
ficompl
xchg
pop
pop
movsl
imul
mov
jg
enter
fs
dec
dec
das
sbb
test
into
push
add
fdivl
jge
cs
ljmp
cld
cmp
sub
leave
mov
mov
cmp
mov
mov
repz
pop
aad
inc
jbe
sbb
cmpb
mov
test
clc
mov
jnp
xchg
lret
or
or
jge
mov
mov
cmp
scas
push
sbb
pop
outsl
and
adc
scas
mov
pop
cmp
ret
mov
stos
test
pop
or
wrmsr
xchg
and
push
loop
or
jbe
icebp
or
dec
mov
sub
lcall
cmp
fstps
push
into
push
ss
cs
daa
fs
out
cmpsl
adc
outsb
lret
repnz
ss
sbb
jo
mov
inc
push
or
lret
jo
push
cmpsb
jge
and
adcl
pop
or
test
in
test
sub
ljmp
nop
pop
loop
std
jns
push
mov
push
push
jle
or
xor
mov
lods
pop
cmp
jle
sbb
mov
les
aam
shll
or
xchg
insl
test
dec
mov
dec
jbe
mov
cmpb
push
sub
fstps
push
or
ret
dec
inc
arpl
push
daa
sub
into
fwait
stos
xchg
fwait
jg
cmpsl
gs
rcl
xchg
sub
setns
dec
mov
gs
jecxz
push
add
roll
cmp
and
das
or
mov
ss
or
cli
loopne
enter
insb
fisubl
mov
fnsave
or
hlt
stos
push
inc
ffree
xchg
ds
ss
les
xor
pushf
fdivrl
cmp
jle
bound
das
adc
cltd
rcl
mov
popf
fsubrp
scas
insb
jge
ljmp
pusha
inc
jp
pushf
jns
fwait
loope
pop
loope
sbb
cmp
testb
fsubrl
sub
add
addr16
cmp
jo
push
or
sahf
aam
xchg
insl
addl
cs
nop
lcall
add
aam
scas
mov
out
push
out
push
daa
or
les
aad
dec
mov
mov
nop
sub
nop
je
push
xchg
pop
dec
mov
hlt
fistl
call
lret
mov
scas
push
addr16
xchg
ljmp
and
push
sbb
push
inc
adc
icebp
dec
pop
cmp
icebp
xchg
je
push
and
out
push
jp
movsb
pusha
jns
enter
imul
filds
into
dec
xchg
arpl
pop
mov
xchg
xchg
cmp
daa
mov
and
cmp
jbe
inc
popf
stos
mov
imul
inc
fimuls
or
aaa
lret
dec
pusha
cmp
mov
push
jmp
mov
sub
cmpsl
mov
cmp
mov
rcrl
pop
jb
in
lea
xchg
mov
cmp
pop
rorl
xlat
pusha
popa
test
mov
sbb
fisttps
cwtl
xor
dec
push
dec
jecxz
fidivrl
mov
mov
filds
lret
xor
call
xchg
pop
mov
xor
add
fidivrs
sub
cmp
iret
test
pop
push
pusha
jmp
jp
jg
stos
dec
sbb
js
popf
lock
and
test
cmp
mov
fldz
xchg
ljmp
lcall
sub
adc
jne
xchg
or
push
jl
cld
cwtl
aaa
mov
cmp
sub
shrb
dec
stos
sbb
inc
and
les
inc
ja
imul
imul
xchg
out
ds
cmpsl
xor
loop
cmp
xchg
inc
jns
stos
loop
dec
inc
push
imul
std
dec
loop
xchg
mov
into
lret
push
stc
mov
pop
inc
in
ss
jbe
or
jecxz
or
push
mov
cmpsb
cli
enter
cwtl
mov
lods
pop
push
sbbl
inc
mov
stos
cmp
in
pushf
pusha
lahf
ret
aas
inc
push
cmpsb
fdivl
mov
mov
jbe
scas
stos
cli
outsl
loop
subb
aad
lahf
mov
sti
xchg
imul
gs
scas
adcb
push
inc
gs
pop
lret
xchg
jl
in
lcall
add
pop
cltd
xchg
inc
xchg
mov
aas
pop
sbbb
pop
add
imul
push
jb
sbb
adc
push
mov
or
mov
sahf
sahf
sub
pushf
cmp
enter
into
cmp
test
enter
pop
jmp
data16
sub
pop
mull
subb
xorl
adc
scas
sahf
test
ljmp
fcmovbe
mov
out
mov
fadd
cmpsl
push
fildl
outsl
ljmp
push
pop
mov
xchg
aas
bound
pusha
mov
loopne
xor
cmp
dec
fxch
cmp
jo
std
aaa
mov
mov
movsb
test
mov
adc
fcomps
pop
xor
dec
add
mov
into
xchg
inc
je
cmp
aaa
inc
mov
jnp
jecxz
lods
sarl
icebp
xlat
inc
push
je
aam
add
es
pop
mov
scas
arpl
mov
add
inc
mov
mov
xor
cli
cmpsb
aaa
loopne
gs
sti
pop
xorl
push
dec
dec
push
pop
lahf
lret
mov
or
cmp
orb
sub
lret
pop
dec
push
xchg
repnz
mov
jno
push
xchg
ds
out
int3
loop
addr16
sar
cwtl
test
mov
test
iret
nop
enter
dec
fistl
fwait
dec
push
xchg
jns
insl
mov
ljmp
cltd
gs
daa
test
mov
test
jno
jmp
insb
xchg
jmp
mov
daa
pop
out
cmc
push
jb
lods
popf
cmp
enter
in
les
sub
mov
lds
jo
sub
cmp
sub
pop
icebp
repnz
jge
pop
dec
sub
clc
ret
call
cwtl
mov
popa
lcall
pop
push
shlb
ljmp
loop
jecxz
pop
cmp
lods
xor
pop
incl
std
fsubr
nop
jne
fmull
sub
popa
les
cwtl
lods
psubq
mov
add
loopne
push
jle
ljmp
push
das
push
ja
and
or
mov
pop
push
jb
arpl
lods
xchg
js
xchg
mov
mov
jecxz
imul
and
aad
lret
cs
add
shl
imul
outsb
shlb
imulb
push
ret
jecxz
clc
mov
hlt
mov
or
into
sbb
lret
push
rcrb
adc
stos
popf
sub
adc
jle
mov
sub
xchg
adc
add
mov
out
adcl
sub
mov
or
mov
push
movsb
xchg
jns
push
ja
jb,pn
push
jo
dec
sbb
inc
cmpsb
mov
sti
mul
ds
jnp
sub
push
imul
hlt
loopne
mov
lods
xorb
sbb
cmp
test
stos
and
test
jns
push
sti
imul
push
addb
loopne
iret
mov
and
mov
sbb
lahf
push
mov
inc
mov
fmul
idivl
cs
fcmove
pop
lods
lret
in
fwait
pop
movsl
adc
data16
dec
inc
sub
inc
fildll
jnp
mov
dec
mov
mov
mov
push
mov
xor
inc
jle
or
lea
arpl
xchg
fldt
push
arpl
adc
sarb
dec
mov
sbb
dec
cmp
inc
imul
add
or
fimuls
icebp
pop
cmp
leave
push
aaa
inc
test
repnz
cwtl
xchg
stos
mov
sbb
push
jo
cli
insl
push
pop
das
mov
aas
add
popf
jge
jb
cmp
add
mov
lods
lods
inc
cmp
stos
push
arpl
in
enter
fisubrs
xchg
icebp
outsb
push
xor
fcomps
mov
out
cmp
fbstp
scas
repz
xor
stos
sbb
cmp
mov
inc
mov
loope
and
pop
adc
sbb
inc
xor
mov
pusha
cmp
repnz
imul
dec
pop
out
push
les
xchg
fdivrp
dec
mov
cli
loope
xor
jecxz
fsubp
and
fsubl
dec
dec
ss
mov
xchg
lock
jnp
out
adc
bound
aaa
sbbb
xchg
pop
cwtl
or
leave
stc
int3
push
xchg
sbb
fnstenv
push
cs
push
xor
insl
js
mov
repnz
pop
adc
pop
mov
imul
push
sbb
mov
mov
dec
bound
cltd
cmpsl
ss
xchg
iret
push
leave
jne
mov
int3
inc
pop
cwtl
xchg
push
popa
loope
loopne
je
xlat
xchg
test
pop
xor
ss
mov
dec
shll
push
xor
hlt
cltd
rcll
jle
iret
dec
cmp
cmp
in
xchg
push
sahf
sbb
adc
stos
in
nop
mov
rorb
push
add
imul
or
ss
dec
rcrl
push
mov
mov
pusha
out
mov
jno
shll
loope
lcall
mov
jmp
bound
popf
out
jne
xlat
mov
in
sbb
call
cmpsb
out
leave
sub
adc
lret
cmpsb
jbe
inc
mov
mov
cld
ret
cmpsb
dec
xchg
dec
repnz
push
mov
loope
bound
mov
insb
das
pop
and
dec
push
pop
dec
sbb
dec
mov
xor
mov
addb
mov
mov
pop
test
jg
xor
enter
inc
lock
gs
cmp
sub
pop
mov
jne
inc
xchg
xchg
add
xchg
pop
jae
or
lret
or
xchg
cmp
push
jno
dec
mov
faddp
cmp
enter
popa
out
call
sub
sub
dec
clc
jl
ficompl
push
push
bound
add
sbb
scas
or
mov
int
mov
scas
gs
out
mov
sbb
push
push
sub
pop
pop
and
out
fs
or
imul
or
addr16
inc
outsl
mov
jbe
adc
dec
mov
mov
pop
in
lea
scas
and
movsl
push
push
sti
cmp
xor
cmc
push
outsb
push
sbb
adc
adc
insb
xor
mov
cli
sbb
sbb
inc
mov
xchg
push
cmp
pop
pop
clc
xchg
pop
lea
jno
cmc
mull
sbb
push
push
and
sti
sub
pop
xchg
xchg
jnp
fcmovne
adc
push
fwait
dec
pop
lea
add
out
sub
popf
sbbb
insb
pop
sbb
xor
xchg
in
cli
xchg
jge
jae
xor
ret
xchg
dec
scas
jge
mov
jbe
mov
cmp
fsub
test
test
sbb
mov
aad
dec
ljmp
imul
notb
push
adc
jbe
mov
inc
outsb
popa
imul
out
out
jmp
dec
stos
dec
mov
mov
ljmp
rorl
jns
inc
or
jmp
xor
mov
dec
or
cmp
push
pop
adc
inc
cmpsl
xchg
mov
mov
jns
outsb
mov
ret
dec
scas
push
out
jle
mov
mov
lret
fidivrs
push
int3
rcll
jecxz
push
fs
dec
add
insl
std
lret
mov
mov
mov
and
add
in
sarl
pushf
mov
xchg
mov
repnz
iret
xor
mov
divb
jo
jbe
adc
push
pop
pop
sub
dec
outsb
fisttpl
add
mov
in
jo
and
sbb
sbb
xor
movsl
pop
ficomps
cmp
mov
je
ja
jne
repnz
pop
xchg
dec
mov
das
fwait
stos
mov
lea
inc
scas
fs
dec
sub
sub
cmp
lahf
or
mov
mov
pop
sbb
clc
jge
das
dec
jp
mov
sub
ljmpw
mov
sbb
icebp
loop
dec
mov
orb
inc
test
add
ror
cmp
mov
pop
sub
cmpsl
sub
into
dec
pusha
fwait
jg
mov
mov
adc
pop
mov
push
out
dec
imul
mov
test
or
jne
xor
lcall
loope
inc
out
jle
xlat
ret
sti
inc
mov
and
push
inc
sbbb
xchg
jnp
mov
mov
push
into
sti
or
mov
fidivrl
jmp
mov
test
xchg
or
push
cmc
nop
pcmpgtb
les
lods
jbe
pop
xchg
addr16
rcrb
cltd
inc
fcmovbe
stos
dec
cwtl
aaa
mov
popa
xchg
mov
jp
dec
cmp
cs
jl
popf
sbb
jnp
ja
daa
cmp
mov
xchg
pop
jecxz
sbb
push
bnd
fs
hlt
popf
hlt
mov
nop
xor
out
mov
cmp
push
mov
or
scas
mov
or
xchg
jle
push
add
push
xchg
xchg
lds
roll
xchg
cmp
aad
xor
pushf
push
outsb
cmpsb
jl
ret
cmp
dec
imul
test
push
add
xchg
mov
and
insl
push
aam
dec
sbb
push
pop
adc
sar
cld
jg
add
dec
xchg
xchg
mov
inc
in
repnz
and
rcrl
cmc
sub
cli
or
outsl
pop
mov
cmp
mov
push
xlat
cli
inc
stos
and
xchg
jae
enter
push
cltd
pop
out
cmp
dec
movsb
out
cli
mov
pop
cmp
bound
fs
cmp
add
cmp
pusha
scas
ficoml
lret
xor
rcrb
jg
cmp
es
sbb
shll
popa
dec
cmpsb
into
fsubrl
mov
pop
movsl
push
push
fisubrs
jbe
pop
rcrb
mov
xor
inc
push
jnp
pop
in
mov
movsb
xchg
nop
xor
mov
add
xor
inc
call
imull
jno
dec
or
cmp
push
xor
mov
ja
jmp
icebp
inc
aas
or
arpl
jp
lahf
fwait
mov
shlb
movsl
pop
push
icebp
xchg
iret
jno
cmpsl
test
mov
sub
pop
dec
mov
lea
mov
push
rcrl
sbb
movsb
inc
mov
sub
dec
rorl
pop
mov
es
sub
decb
and
aad
cmc
arpl
push
mov
mov
jo
frstor
mov
jg
add
mov
add
popf
push
jbe
test
sbb
cltd
pop
ja
adc
pop
insb
inc
scas
cmp
es
mov
loop
out
sbb
popl
outsb
cwtl
test
out
inc
dec
insb
pop
outsb
ror
xchg
push
mov
mov
pusha
pop
or
lret
fstps
mov
mov
out
loope
int
ror
es
inc
sub
mov
into
xlat
jno
enter
aaa
pop
lods
cmp
out
add
cmp
cmp
popa
icebp
mov
sub
add
push
or
inc
xlat
test
jge
push
insl
popf
rcl
jns
pop
mov
subb
aaa
aad
sahf
iret
push
sahf
dec
push
lret
mov
push
std
sahf
mov
dec
lret
rol
jae
ljmp
add
or
das
shrb
pop
add
push
in
jnp
adc
in
aam
cmp
rcrb
and
jp
xchg
push
outsb
inc
subl
add
pop
ja
movsl
mov
inc
jns
and
push
cltd
and
arpl
inc
mov
cmpsb
sub
lret
jecxz
cmp
mov
arpl
jecxz
xchg
jmp
fimuls
je
jno
fidivrl
xchg
cld
fcoml
cmp
fistl
jl
clc
orl
xchg
fstps
scas
cmpsb
xor
outsb
jns
cmp
inc
add
jo
aas
and
jmp
pop
icebp
mov
out
into
stos
mov
jp
push
ficoml
inc
xor
test
push
mov
xor
adc
mov
ret
into
push
pop
gs
mov
jge
pop
add
mov
call
clts
inc
test
or
sbb
lret
or
cmp
mov
and
push
imul
mov
ljmp
jg
xlat
mov
cmp
andl
inc
pop
xor
ss
into
out
jl
pop
fdivs
icebp
push
push
mov
push
jp
es
xor
push
mov
cli
sahf
sbb
lock
rorl
insb
rcrb
mov
push
loope
mov
fs
in
jg
mov
in
jmp
pop
frstor
daa
adc
lret
inc
and
xchg
and
addr16
inc
sbb
mov
push
cmpsb
aam
push
stc
sbb
mov
mov
mov
cmpl
mov
aas
jp
in
cmp
lds
mov
lcall
mov
cltd
pop
nop
pop
mov
scas
push
das
leave
call
dec
mov
dec
pushl
aad
jbe
pushf
fidivl
mov
daa
sub
fisttpl
imul
scas
lds
or
fdivs
pushf
stos
and
and
add
adc
xchg
cmpsl
pushf
fstpt
mov
repz
push
out
adc
jecxz
cmc
fisubs
out
mov
repz
enter
stos
sahf
add
lods
mov
push
xor
out
xor
imul
pop
xlat
test
push
inc
ljmp
daa
jbe
repz
push
sahf
ss
fimuls
dec
mov
mov
xchg
push
enter
roll
jb
sbb
scas
insl
cmp
cwtl
sbb
jecxz
pop
sbb
pop
sbb
ror
mov
push
ja
cmp
lods
inc
pop
inc
pusha
add
fcmovbe
cli
shr
ret
add
rorb
cmpsl
shr
lahf
push
cmp
cmp
int
add
cmp
repz
fisttpll
inc
pushf
mov
sub
mov
xlat
xchg
dec
rcrl
jle
jg
dec
mov
int3
mov
jmp
fwait
lock
or
mov
insl
vpsubw
pop
add
cwtl
dec
inc
jl
sahf
mov
cmpsb
pop
add
inc
lcall
arpl
daa
mov
dec
jns
mov
mov
add
mov
imul
mov
ss
out
lods
xor
fmuls
rolb
or
bound
mov
lods
loop
into
sub
push
stc
pop
mov
nop
adc
pop
mov
pop
inc
out
pop
push
mov
push
sbb
xor
mov
aam
add
sarb
dec
pop
mov
mov
or
lahf
inc
stos
adc
cmpsl
popa
mov
add
scas
push
insl
gs
dec
enter
ficomps
data16
lret
rcrb
outsl
daa
loopnew
test
sub
mov
jmp
pop
adc
repz
ffree
mov
inc
ret
or
je
ret
idivb
sub
mov
jbe
arpl
xor
xor
pop
sbb
fstpl
adc
fiadds
outsl
dec
mov
and
cltd
popa
outsl
xchg
scas
fbld
xchg
dec
inc
mov
push
loop
rcrl
mov
cmp
xchg
xchg
xor
dec
cmc
mov
orb
lock
idivb
mov
push
outsl
sbb
sti
sbb
mov
insb
movsl
fildll
cmpsl
lahf
adc
addl
cs
es
insb
dec
push
icebp
add
push
imul
ljmp
cmp
clc
mov
jo
shll
pop
push
ret
pushf
cmp
jg
xchg
jnp
stos
fistpl
jmp
in
roll
pop
cmp
or
add
inc
jge
mov
inc
sbbb
mov
mov
dec
mov
les
lcall
nop
xchg
aad
cmp
cmpb
inc
push
mov
movsb
xor
add
lret
jbe
jl
xor
inc
adc
dec
xchg
mov
ret
push
dec
push
bound
jl
inc
mov
mov
imul
es
repz
inc
and
iret
inc
nop
sub
cmpsl
inc
out
inc
add
mov
ficoml
in
jl
mov
les
lret
adc
or
xchg
icebp
pop
int
pusha
ret
pop
loopne
xor
dec
subl
popa
mov
and
cmp
mov
inc
mov
cmp
fscale
jmp
adc
sti
mov
dec
sarl
pop
cmp
jmpw
pop
bound
push
cs
jne
or
jae
pcmpeqb
dec
adc
xchg
xchg
pop
add
pop
dec
jne
shrl
xchg
mov
push
test
jb
mov
lock
cmp
mov
or
adc
add
and
stos
sub
fistpl
mov
and
repz
adc
shll
dec
outsb
inc
ss
dec
mov
stos
into
divl
loope
loopne
and
inc
dec
inc
enter
mov
ljmp
adc
and
call
jle
rsqrtps
mov
xorl
scas
jae
pusha
inc
jge
testb
jbe
adc
pusha
inc
add
xchg
mov
dec
mov
dec
jnp
mov
aam
push
pop
xchg
dec
inc
fisubl
jno
orl
push
cld
inc
loop
pop
jg
xchg
fisubrl
lret
bswap
outsl
cwtl
mov
lds
sub
cmpsb
jb
sar
jb
mov
enter
or
adc
inc
cmp
imul
xor
sub
imul
sub
jmp
push
loop
dec
push
out
push
push
or
fcoms
push
aas
fstpl
loope
mov
stc
add
sub
adc
jg,pn
in
mov
adcl
push
repnz
push
pop
loop
lock
xchg
cmp
fistps
mov
js
jbe
xchg
ret
loopne
lahf
cmp
mov
sahf
imul
aam
push
pop
fnstsw
scas
xor
aam
push
cmp
pushf
xchg
movsl
nop
sbbb
in
fwait
push
fs
add
jge
sbb
or
sub
jp
lods
push
mov
mov
loope
loopne
out
xor
popa
mov
cltd
or
incl
repnz
sub
lret
sub
jmp
mov
sbb
push
mov
in
stc
dec
rorl
repnz
adc
or
inc
cmp
nop
sbb
sub
test
shl
add
mov
lret
mov
test
fdivl
dec
les
sbb
lcall
das
jbe
push
in
fwait
jl
cmp
cmp
and
dec
fisttpll
push
bound
mov
sbb
lds
dec
pop
leave
cmc
sub
xor
insl
pop
sub
inc
mov
cmp
test
fstpt
adc
push
mov
jne
outsl
push
jo
lret
sub
mov
xchg
cmp
fldenv
mov
jno
xor
pop
sbb
lea
add
push
loope
imul
pop
sbb
rcll
jp
stos
outsb
popa
iret
and
xchg
pushf
das
jns
pop
fistpl
add
ret
push
cmp
pop
loope
inc
out
dec
ja
mov
mov
add
out
aad
dec
mov
jb
cmp
sbb
mov
popf
push
mov
in
push
mov
mov
fs
call
cmp
mov
mov
enter
sub
fisttpl
sbb
adc
mov
jp
cwtl
rorb
inc
jns
xchg
pop
push
jg
mov
xchg
outsb
enter
scas
aaa
ret
mov
sbbl
in
push
out
add
adc
cwtl
sbb
outsl
xchg
cmp
iret
sub
repnz
jg
ss
add
shrb
sub
mov
outsb
cmp
push
outsl
ror
push
int
cli
mov
xchg
sub
outsl
and
nop
cmpsb
rol
gs
arpl
scas
rcll
clc
jb
push
inc
adc
call
xor
mov
ljmp
and
lcall
divl
fcomps
jmp
xchg
mov
sub
xor
push
jne
mov
orb
adcb
int3
pop
pop
dec
dec
push
dec
nop
cmp
cmpsl
cld
stos
aad
pushf
xchg
xor
mov
sub
cmp
das
fbld
movsb
pop
jge
lea
ja
push
add
lea
push
pop
inc
push
loop
mov
mov
es
orl
mov
or
jge
push
jge
stos
outsb
mov
push
into
inc
insb
das
inc
jbe
fisttpl
mov
xchg
pop
cmpsl
xchg
inc
dec
fsts
int
cltd
pushf
outsb
xor
sarl
or
jecxz
imul
les
push
imul
and
scas
js
mov
adc
jae
adcb
xor
loop
popf
movsb
pushf
div
stos
lret
fcompl
pop
jmp
jge
in
aaa
sub
pushf
jp
cld
jnp
pop
jge
iret
jmp
add
xchg
leave
and
sub
inc
sbb
sbb
xchg
cmp
pop
xchg
mov
arpl
aas
mov
into
jmp
jno
mov
test
cld
mov
popa
mov
repz
or
leave
push
mov
nop
lea
dec
mov
jb
mov
pop
xchg
pop
jnp
pusha
fmuls
pop
int
dec
mov
fidivrl
shrl
imul
jle
xchg
icebp
repnz
xor
cmp
out
repz
fstpt
daa
je
adc
cwtl
push
rclw
sbb
pop
ret
js
jo
add
mov
jo
mov
inc
dec
sbb
pop
inc
int3
xor
dec
dec
lds
jle
leave
inc
ret
loopne
je
mov
push
fsubrl
stos
loopne
and
push
into
les
or
in
movsb
loope
dec
xchg
pop
xor
adc
add
imul
cmp
fdivl
shlb
mov
je
push
mov
hlt
dec
es
scas
rcrb
pop
pop
mov
mov
jbe
lret
pop
xchg
sahf
or
aaa
dec
mov
imul
or
lcall
scas
mov
stos
loop
mov
rorb
fmuls
cmpb
movsb
cmp
enter
xor
cmc
mov
jbe
test
mov
dec
cmp
or
jo
adc
imul
add
ret
repz
dec
nop
popa
fstpl
jg
sbb
adc
pushf
xchg
mov
add
xor
cs
pushf
xor
aas
jmp
mov
dec
mov
add
push
jp
mov
pop
outsb
dec
or
insb
pop
nop
movsl
dec
mov
adc
inc
leave
repnz
push
sbb
scas
mov
mov
push
test
cmc
mov
xlat
in
jmp
stos
fsubrs
call
cmp
or
clc
push
xor
cmp
hlt
cmp
jle
xor
jno
add
jecxz
out
mov
inc
scas
and
fs
ret
das
sub
cwtl
imul
add
call
pop
out
add
andb
les
xchg
jle
outsb
mov
cmp
pop
je
xchg
frstor
cmp
test
mov
lea
pop
orl
pop
and
movsl
sahf
and
aad
or
test
dec
popa
cld
adcb
test
cwtl
in
pop
xchg
imul
jecxz
movsb
das
pop
and
xchg
push
inc
or
sbb
push
add
mov
sbb
aas
pop
sub
out
dec
mull
ror
rorl
dec
enter
mov
pop
mov
nop
pop
jp
mov
in
mov
stc
mov
adc
mov
xor
inc
mov
out
pop
push
roll
cmp
inc
inc
js
dec
cmp
popf
dec
adcl
sahf
pop
push
add
push
sub
mov
mov
aaa
shrb
push
ljmp
xlat
xchg
test
stc
jecxz
fs
mov
and
mov
aam
jmp
daa
cmp
pop
jns
dec
data16
ja
adcb
rol
daa
xchg
xor
insb
or
fsubrp
push
bound
out
cmpsb
imul
shlb
flds
out
sub
xor
in
div
push
fs
jnp
push
les
ret
movsb
push
push
fistl
push
out
dec
nop
inc
or
aaa
addb
int3
or
dec
xor
add
mov
mov
shll
inc
fstpt
push
sub
leave
jp
push
adc
insl
adc
mov
or
inc
inc
fwait
bound
outsl
jae
adc
push
shrb
lret
shll
push
or
lds
inc
mov
in
dec
push
jo
xchg
or
and
cmpsl
fadd
insb
cmp
mov
mov
rolb
int3
aas
testl
int3
jl
mov
push
call
test
mov
dec
outsb
mov
ljmp
cmpsl
andb
outsb
inc
push
inc
cmpsb
cmp
cmpps
ror
push
xchg
xlat
or
aad
ljmp
fmuls
xor
icebp
mov
dec
push
std
and
repnz
iret
xchg
sbbb
add
jns
js
adc
imul
and
cltd
aad
cs
xchg
xchg
outsl
es
idiv
rorb
into
es
sub
into
cmp
out
cmp
aad
cmp
bound
push
xchg
stc
mov
xchg
pop
fs
pop
lret
loop
or
push
nop
cltd
in
call
sbb
push
sub
push
push
repnz
fisubrl
push
ljmp
bound
subb
iret
test
testb
ds
mov
pop
inc
lods
outsb
and
push
dec
mov
js
lret
les
mov
mov
fidivl
push
xchg
dec
sarl
xchg
clc
cld
mov
js
icebp
rclb
mov
mov
pop
adc
and
rcll
dec
cwtl
mov
loop
dec
push
push
outsl
pop
push
rorl
daa
sbb
push
insb
outsb
cs
or
aas
out
imul
push
call
sub
sub
sbb
ficompl
jg
das
lahf
pop
fs
pop
push
cmp
adc
into
mov
insl
mov
fstl
dec
push
sahf
insl
test
jbe
pop
movsl
add
xchg
dec
in
out
imul
jge
dec
scas
jae
add
and
mov
jle
pop
pop
adc
push
jnp
xor
jmp
sub
jecxz
add
pop
lds
pop
inc
cmp
jle
sbb
jge
es
push
ficoml
mov
sahf
sbb
rorb
pop
push
cwtl
jne
jns
jp
arpl
push
insb
int3
cmp
ret
dec
lods
inc
pop
sbbl
icebp
sub
jne
repz
mov
inc
push
movsb
push
test
pop
mov
jecxz
dec
push
dec
xchg
pop
ss
shlb
pop
std
lretw
cmp
lret
test
gs
fs
sub
std
cmc
xchg
push
sbb
bound
pop
cmpb
sbb
xor
pop
sub
repnz
andb
roll
dec
fisubs
pop
mov
insl
stos
jmp
orl
xor
outsl
andl
push
mov
xchg
xchg
lahf
cmp
mov
and
js
aas
clc
js
cmp
cmp
mov
push
mov
jge
fwait
push
popf
push
and
pushf
cmpb
sahf
mov
lahf
cs
jmp
mov
push
push
mov
inc
outsl
or
arpl
stos
push
fildl
xchg
stos
imul
push
mov
imul
inc
js
aam
mov
addr16
insb
sbb
sub
scas
jbe
ds
push
mov
mov
mov
xchg
sbb
in
int3
stos
es
insl
loopne
push
push
stos
lahf
pop
idiv
mov
add
inc
push
out
out
mov
into
xchg
or
shlb
jnp
mov
jae
loopne
pop
mov
sbb
testb
js
sbb
inc
dec
sbb
pop
cmc
orb
mov
push
lock
add
push
xor
mov
mov
lock
mov
pop
or
fdivrp
sarb
add
push
cltd
in
mov
push
es
pushf
inc
add
loop
addr16
push
mov
fstpt
movsl
adc
cmp
andl
pushl
cmp
nop
pop
pop
pusha
icebp
or
cwtl
or
or
xchg
test
jmp
pop
sbb
pop
sub
sti
cli
sahf
loope
aaa
in
dec
jl
inc
jbe
ret
pushf
sarb
push
jp
je
scas
mov
scas
ss
jp
sahf
insl
iret
jnp
std
lret
xor
dec
cltd
push
xchg
cs
insl
mov
xor
scas
jne
mov
push
popa
xor
outsb
lgdtl
mov
push
or
test
sub
cltd
jmp
in
ja
addr16
imul
ss
push
stos
push
fistps
xor
dec
xor
lret
jecxz
popa
fistps
cmp
pushf
jo
sbb
sbb
dec
dec
jno
xchg
pop
sub
and
inc
dec
adc
pop
sbb
mov
test
mov
fiadds
jbe
mov
sbb
jno
dec
das
shll
loopne
nop
test
mov
stc
or
fsubs
pop
jnp
loope
rclb
jbe
cmp
ret
ret
fmuls
cmp
test
mov
fcoms
insl
pop
movsl
xchg
cmpsl
xchg
sub
and
lea
sbb
je
xchg
mov
loop
cmp
xor
ss
decb
adc
stc
xor
mov
lahf
sbb
sbb
xchg
push
imul
cs
dec
gs
lods
loope
jl
rcrb
pop
pop
dec
pop
rcll
xor
mov
pop
test
push
shlb
or
xlat
jbe
mov
dec
mov
fldenv
shll
inc
jno
push
fmuls
adc
jle
mov
add
cmpsb
adc
in
pop
mov
pop
ljmp
mov
inc
xor
or
jo
shlb
push
mov
mov
test
jl
sbb
jnp
xor
inc
or
fisubl
jne
ljmp
xor
lds
xor
and
adc
arpl
fdivr
lock
inc
add
push
mov
test
mov
ja
jl
cwtl
mov
pop
push
mov
enter
scas
sub
jg
data16
cld
repz
ljmp
jns
andl
pop
ja
hlt
jecxz
mov
cmp
ljmp
adc
push
mov
xchg
mov
ljmp
xor
or
test
rsqrtps
loope
pop
push
mov
adc
aas
add
sub
mov
lds
or
jp
cltd
shrb
in
push
fstpl
ret
mov
js
push
push
test
jbe
int
in
cs
int3
sub
outsl
sub
jl
jo
pop
pop
mov
icebp
ficoms
adc
pop
ret
push
fldcw
shll
mov
dec
test
cld
arpl
jb
jne
repnz
push
popa
aam
adc
sbb
int
push
jge
push
and
decl
iret
mov
push
and
cmpsl
adc
xchg
mov
in
stos
lahf
jge
pop
inc
out
inc
cmp
xchg
push
movsb
outsb
xor
push
adc
jb
cmp
adc
mov
mov
pop
loopne
add
lcall
push
or
jne
mov
fimuls
mov
andl
data16
xor
fldl
jb
aaa
push
jnp
jb
pop
sbb
or
jbe
dec
les
mov
jl
sbb
cmpsl
outsl
mov
push
adc
xchg
ret
pop
push
or
jg
enter
imul
pop
cltd
jl
sub
sbb
shrw
push
mov
in
and
and
push
and
push
add
push
push
mov
pop
inc
stos
ds
fstpl
outsb
fisubl
push
add
dec
inc
push
js
mov
mov
fbstp
and
pop
mov
push
mov
fdivl
pop
or
or
jb
sbb
js
sbb
xchg
cltd
dec
fldl
mov
ficoml
or
loopne
jno
aaa
and
jmp
out
shl
pop
icebp
shl
daa
popl
rorl
test
mov
push
pop
out
pop
mov
or
push
fcompl
dec
push
lret
add
test
mov
out
push
dec
xor
das
or
xchg
std
dec
sub
jae
test
imul
repz
fistps
mov
mov
inc
lods
ds
xchg
pop
stc
scas
lahf
mov
mov
fdivs
adc
dec
sbb
int3
and
fwait
jb
sar
jge
ljmp
jg
push
into
dec
idivl
int
xchg
sti
outsl
jp
inc
sub
xor
push
cmp
xor
fcomi
js
dec
push
in
mov
xchg
mov
xor
mov
jg
inc
aam
mov
gs
pop
add
imul
xor
xchg
sbb
pop
inc
sub
das
mov
sub
jmp
orl
cmpsb
mov
in
sahf
push
loop
or
xor
scas
pop
scas
xlat
push
cmp
xor
repnz
pop
jle
pop
or
mov
dec
pop
scas
ficompl
pop
jl
movsb
pusha
orb
jae
imul
jo
sahf
ss
mov
js
insb
push
pop
lcall
pop
xchg
adcl
rcll
nop
out
sub
loop
pop
add
imul
jl
add
mov
sub
sub
int
push
push
push
cmp
les
jmp
stc
scas
push
push
lds
jl,pt
inc
icebp
push
sub
pop
mov
mov
mov
add
fildll
outsb
inc
and
inc
subl
cltd
mov
ret
sahf
mov
subb
fwait
mov
testl
mov
cmp
lcall
popa
mov
lcall
shl
add
mov
pop
popa
popf
jno
in
mov
in
mov
pop
rclb
and
hlt
mov
arpl
adc
mov
add
std
xchg
shll
jnp
pop
lahf
outsl
mov
jo
lods
ljmp
push
andb
mov
les
inc
push
fldenv
movsb
pop
pop
inc
rclb
sub
push
cmp
or
inc
nop
and
dec
push
dec
lea
mov
or
jne
add
dec
mov
xchg
xchg
mov
cmpl
or
cmp
add
and
mov
mov
divl
xchg
sahf
dec
notb
icebp
mov
xchg
adc
mov
int3
movsb
push
fcmovb
inc
sub
mov
jae
dec
pop
ljmp
push
pop
inc
mov
std
sbb
iret
mov
cmp
pop
ficomps
into
mov
stos
int3
mov
push
push
lret
lea
jae
cmpsb
push
push
xchg
jae
xchg
fiaddl
dec
scas
es
sub
mov
and
fists
dec
pop
mov
adcb
push
xchg
mov
mov
outsb
pop
add
xorl
mov
xor
mov
xor
xor
lods
pop
xor
icebp
jmp
inc
dec
cwtl
sbb
or
push
mov
xchg
lret
scas
ja
icebp
xchg
pop
jmp
push
cmovs
and
inc
enter
mov
cmc
outsl
addl
mov
ret
mov
test
adc
sti
loopne
adc
mov
arpl
imul
add
jbe,pn
mov
and
xor
setbe
xor
nop
icebp
and
fstl
xor
mov
sbb
mov
std
ret
js
pop
in
pop
inc
pop
push
outsl
aam
xor
dec
inc
dec
cmp
xchg
push
push
stc
pop
mov
scas
or
inc
cltd
jecxz
push
and
and
cmp
fidivs
sub
in
xchg
jae
ljmp
or
inc
inc
int
into
in
cwtl
outsl
and
jl
and
imul
addr16
xchg
outsb
xchg
sbb
pop
out
ror
scas
jmp
xchg
pop
loope
sbb
mov
mov
test
inc
movsl
or
pusha
pop
cmpsl
arpl
xor
cmp
xchg
xchg
ss
cmpsl
pop
mov
pop
push
push
insl
mov
pop
repnz
add
xchg
dec
inc
mov
mov
xchg
push
push
nop
int3
xlat
test
out
adc
dec
in
sbb
fxch
ds
cli
dec
mov
imul
lcall
mov
xchg
mov
ficomps
pop
mov
lods
fwait
push
mov
lret
rcl
mov
pop
test
add
jge
jle
add
cmpsl
adc
mov
add
mov
jmp
icebp
aaa
pusha
inc
cwtl
out
xor
sahf
xchg
sub
js
subb
es
insl
pop
pop
mov
push
push
outsb
pushf
jg
push
pop
sub
insl
das
cld
iret
je
test
push
int3
pop
sub
mov
shr
inc
popa
inc
test
nop
mov
or
pushw
xchg
fucomi
pop
scas
rcrb
sub
shrl
frstor
sti
jns
jmp
jno
pushf
fsubp
jae
jne
or
mov
pop
xrelease
jb
mov
data16
mov
rolb
or
jnp
out
or
jmp
adcb
and
xor
xchg
pop
xchg
mov
jo
cmp
xchg
fnstsw
fabs
xchg
repnz
sbb
iret
or
test
insb
stc
mov
or
dec
cwtl
adc
cmp
test
nop
cmp
cli
or
pop
ds
mov
neg
mov
push
cld
stos
sbbl
sarb
pop
push
cs
adc
pop
push
sub
mov
fiaddl
dec
cwtl
cmp
push
pop
ss
inc
fcmovu
adc
nop
pop
in
mov
pop
sbb
push
mov
jg
pop
movsl
loopne
push
mov
push
cmpsb
or
and
pusha
push
inc
bound
dec
inc
ljmp
pop
aad
insl
jns
cmp
sbb
rcl
add
pop
sub
jmp
fwait
pop
sahf
daa
inc
sub
xchg
add
jl
xchg
movsl
stos
jle
sbb
inc
pop
in
out
pop
sbb
xchg
xchg
mov
test
das
ljmp
dec
sub
orl
mov
jmp
push
xlat
pop
xor
cmp
push
out
enter
in
cli
in
push
mov
mov
out
mov
xchg
fs
lret
ret
sbb
mov
sbb
or
jmp
push
lret
sub
pop
inc
mov
or
sub
sbb
daa
push
cmp
push
cmpsl
iret
sbb
jl
ljmp
push
cmp
imul
or
bound
movsl
sub
mov
xchg
lea
insb
std
sarb
xchg
dec
cmpsb
mov
arpl
imul
pop
lds
inc
fadd
sbb
add
stc
sbb
sbb
mov
cltd
test
inc
dec
scas
pop
mov
into
jno
les
mov
push
jno
mov
gs
aad
ficompl
sbb
dec
push
xor
adc
mov
jns
mov
dec
rorb
std
push
flds
outsb
cld
enter
xchg
push
and
lods
aam
or
push
sarb
sub
cmp
inc
fucomip
push
sbb
jp
daa
lea
or
cmpsl
loop
sbb
push
mov
sub
and
out
and
dec
in
adc
sub
mov
push
push
sub
mov
mov
or
dec
fs
inc
jle
xor
push
mov
sbb
lret
loope
pop
daa
or
daa
jbe
andl
jae
mov
scas
insl
inc
insl
push
push
insb
in
adc
call
dec
pop
inc
loopne
push
bound
adc
mov
pushl
imul
sbb
cmp
repz
pop
repnz
xor
push
int3
sub
or
jecxz
outsb
test
addb
insb
xchg
shlb
sbb
jle
pushf
xchg
les
adc
les
push
test
repnz
fistpl
fcoml
xchg
addr16
mov
cmp
or
sub
fs
bound
mov
cmp
int
cmpsb
or
xchg
xchg
sahf
popa
roll
dec
cmp
or
in
add
mov
push
xor
pop
das
mov
jns
inc
push
shrb
pop
adc
mov
outsb
das
xchg
in
add
xor
push
aad
popa
out
stos
mov
leave
mov
mov
loope
ret
es
push
lret
insl
fisubl
stos
pop
jnp
mov
je
scas
lahf
divl
fstps
insl
pop
rcr
test
add
jge
mov
loope
andl
movsb
in
aaa
push
xor
ret
js
int
lret
sahf
jne
inc
push
sub
mov
inc
inc
iret
sub
jb
test
sbb
dec
or
int3
pop
mov
or
aad
xor
adc
aad
daa
mov
xor
pop
add
cmp
mov
je
push
aam
out
jae
rorl
aaa
jae
lods
aaa
lret
scas
scas
adc
mov
mov
push
out
mov
jns
sti
pushf
dec
out
les
mov
add
sbb
cmp
xor
and
mov
test
sub
js
hlt
leave
into
cmp
addr16
sub
dec
xor
ljmp
sub
fwait
loopne
push
mov
bnd
jno
push
pop
pop
cmp
xor
dec
ljmp
into
mov
pop
dec
sti
jp
rcll
int3
mov
pop
inc
cmpsb
int
mov
scas
mov
ja
scas
or
xchg
cwtl
out
bound
jp
cmp
mov
cmp
sbb
xor
loope
out
mov
pop
lahf
cmpsw
shl
neg
daa
xor
in
jg
popf
adc
adc
jg
cltd
shlb
clc
sub
aaa
dec
cmp
sbb
mov
enter
loope
fistl
enter
or
inc
mov
loopne
sub
rcl
in
xorl
mov
shr
movsb
jmp
ja
or
sbb
push
stos
add
xor
and
iret
lret
addr16
xchg
push
rorb
inc
mov
daa
mulb
dec
enter
mov
cmp
repz
scas
in
test
lds
and
xlat
jo
int3
test
mov
mov
pop
out
in
mov
push
jne
fcmove
pop
pop
mov
int
stos
mov
jbe
and
fwait
ret
mov
or
fistps
xchg
loope
mov
data16
fistl
outsb
jl
add
jle
sub
and
je
daa
push
mov
arpl
inc
xchg
es
sbb
decb
dec
int3
adc
jae
adc
pop
testb
lods
sbb
cmp
jecxz
lret
jns
inc
dec
xlat
fildl
inc
lret
cli
paddq
cld
test
mov
into
ficoml
xor
or
cmc
sub
push
es
push
ja
lahf
ret
gs
inc
outsl
and
pop
aam
sti
push
scas
fsts
out
jbe
repnz
add
dec
ficoms
pop
int3
insb
jne
inc
push
icebp
push
add
sbb
dec
inc
or
les
lret
and
imul
mov
or
fistpll
sub
sub
adc
mov
cmp
dec
inc
loopne
cmp
sub
sub
outsl
mov
repz
mov
sahf
push
sbb
movsb
cmp
and
jno
enter
add
fsubs
cltd
ss
test
je
mov
clc
or
dec
push
pusha
push
fisubl
ja
rolb
ret
push
adc
or
mov
sbb
mov
dec
add
jbe
dec
jg
mov
aad
add
jecxz
into
xchg
movsl
mov
or
data16
pop
jle
jge
ret
imul
lret
push
imul
in
sub
jns
fisubl
pop
push
dec
lods
dec
rorb
push
in
lret
push
adcb
push
inc
movsb
iret
pop
andb
bound
push
xchg
movsb
or
jecxz
pop
or
sarb
adc
push
dec
mov
negb
or
fwait
outsl
mov
pusha
mov
mov
push
push
lods
dec
scas
xor
jbe
jnp
hlt
push
mov
outsb
or
mov
pop
lret
cmp
push
sbb
scas
pop
cmovns
push
add
int
jge
fimull
jle
push
test
test
push
cwtl
jbe
pushl
addr16
dec
mov
ret
loopne
mov
ret
rorb
xchg
pop
pop
pop
or
imul
test
in
dec
ds
mov
lcall
sbb
jne
sub
jle
cmp
mov
popf
lea
fcomps
lods
ja
in
cld
cmp
std
mov
jle
shrb
stc
nop
cli
dec
jl
add
outsl
ljmp
mov
jg
cmp
idiv
and
xchg
inc
push
inc
sub
mov
test
xchg
cmc
addr16
jbe
bound
mov
adc
outsl
movl
mov
add
aad
mov
aaa
out
ds
iret
daa
mov
aaa
inc
aaa
mov
push
roll
add
fucom
dec
mov
lcall
and
fdivr
push
or
loope
push
jb
push
je
lea
push
fdivrs
iret
add
lock
fbld
or
test
mov
out
cmpsl
jecxz
push
aam
push
leave
sbb
dec
xchg
jae
out
sub
jbe
push
out
ror
push
aas
pop
or
orl
shlb
push
cmpsl
cmp
loopne
mov
out
daa
mov
gs
imul
jge
inc
dec
xlat
or
jmp
dec
xchg
lcall
xorb
rcll
fcmovbe
enter
push
push
xor
pusha
xchg
iret
or
lods
pushf
sarb
andl
add
sbb
sbb
pusha
xchg
jl
call
sbb
into
mov
inc
int3
pop
mov
cwtl
cmp
inc
mov
pop
jp
out
ss
pushl
stc
stos
jmp
lods
cmp
outsl
xchg
cmp
rcrb
dec
rcr
mov
nop
jle
loop
aad
dec
stc
jae
mov
cs
iret
jmp
pop
adc
outsl
cwtl
mov
adcb
xor
pushf
pushf
mov
adc
icebp
lret
mov
or
xchg
mov
dec
xchg
iret
jnp
hlt
mov
pop
cli
jbe
dec
dec
lcall
repnz
or
subb
lret
mov
outsb
dec
mov
adc
mov
ds
or
out
sub
ret
pop
inc
lea
fs
push
jnp
pop
stc
sbb
adcb
mov
fidivrs
jns
in
out
clc
sub
dec
cmp
rorb
stc
inc
cmp
fcoms
fdivl
or
or
cs
sub
dec
mov
pop
xchg
outsb
inc
xor
fadds
dec
mov
popl
into
stos
inc
arpl
adc
xchg
mov
add
mov
jl
shrl
push
add
movb
ja
sbb
adc
cmp
sbbl
and
cmp
mov
cvtps2pi
repz
jae
iret
dec
push
call
mov
jae
mov
insb
xor
repnz
push
fsub
fbstp
push
les
add
push
cmp
aam
add
fxch
cli
push
lods
xchg
je
test
lret
mov
cmp
jno
add
fldcw
cltd
fcmovnb
xchg
dec
lahf
xor
cmp
cmp
or
test
repz
sbb
xor
ss
inc
fsubp
call
mov
fcompl
arpl
scas
pop
add
jmp
scas
push
mov
push
rolb
mov
insl
add
test
adc
in
loopne
and
sub
outsb
lea
sbb
repz
cs
fstpt
jmp
xchg
testb
mov
push
addr16
ret
test
push
push
mov
add
in
lret
sbb
pop
pop
inc
hlt
push
jno
push
cmp
push
mov
xchg
out
cmp
call
sub
jecxz
sub
cmp
add
xchg
idivl
push
aad
push
mov
out
fidivrl
xchg
cltd
inc
sbb
or
jno
dec
frstor
dec
test
lahf
mov
push
outsb
dec
mov
orb
pop
lea
mov
mov
pop
xor
rcll
inc
lret
xchg
sbb
sub
or
loop
mov
fnstsw
mov
sub
mov
outsb
lods
inc
aad
cmpsl
stos
out
adc
loope
int3
dec
push
xchg
stos
mov
push
popa
lret
out
out
rcll
stos
movsl
cmp
sbb
push
push
out
imul
imul
inc
insl
inc
loop
push
addl
pop
leave
pusha
and
or
add
xor
mov
mov
add
push
xor
repnz
add
imul
lods
movsl
dec
xchg
lret
outsl
repnz
or
pop
jle
xor
pop
daa
push
dec
cmp
and
iret
arpl
test
les
cs
lahf
xor
test
push
dec
push
lea
lret
ja
ret
jge
fnstcw
aas
cltd
dec
push
in
cmp
push
nop
sub
fsubr
fmuls
test
push
les
mov
test
or
sbb
jle
xor
mov
mulb
mov
push
out
pop
push
push
scas
pop
fistl
push
test
and
movsb
repnz
pop
pop
jbe
fmuls
rcll
xor
sbb
push
dec
dec
rorl
sub
mov
ss
fisubl
dec
scas
xlat
lahf
xchg
test
jp
rcll
gs
int3
or
mov
rcrl
pop
mov
scas
stc
mov
push
sub
lods
addr16
mov
clc
cmp
pop
xchg
xor
addr16
movmskps
dec
cmpsb
andb
mov
das
or
call
dec
into
push
notb
insl
int
mov
sub
pop
xor
pop
pop
ret
xorb
xor
pop
iret
shll
bound
and
andl
jp
inc
das
cmc
je
repnz
push
pop
lcall
loopne
or
insb
mov
push
and
xor
push
push
test
inc
mov
mov
into
and
insl
mov
std
jg
mov
xor
or
add
push
adc
and
jo
in
stc
ljmp
or
aaa
out
push
testb
int3
jl
or
scas
mov
mov
lahf
rorl
sub
jle
sub
jne
add
lret
push
sti
adc
xor
arpl
xchg
mull
push
pop
cmovbe
les
test
loopne
push
cmc
cmp
cmpl
push
mov
push
repz
subb
popl
test
cmp
inc
dec
mov
pop
xchg
mov
imul
sub
call
pop
jl
jmp
adc
inc
push
pop
insb
aas
cmp
nop
and
dec
leave
repnz
mov
lods
sub
nop
xor
pop
aad
je
in
stos
dec
stos
pop
cmp
popf
xchg
pop
js
mov
pop
push
jl
int
cmpsl
xchg
aam
sub
leave
mov
or
mov
mov
hlt
push
adc
out
sub
push
inc
pop
mov
mov
push
sahf
and
xor
mov
dec
scas
out
pop
aad
and
push
xchg
xchg
mov
xchg
xor
jmp
int
rcr
pop
push
lods
loop
rcrb
lock
pop
bound
jne
jnp
push
xchg
rclb
cltd
dec
mov
lea
mov
mov
adc
dec
cwtl
mov
test
shll
jo
fs
sbb
pop
dec
ss
xor
mov
incl
cmc
out
push
inc
jecxz
cltd
push
popa
pop
mov
mov
pop
and
jns
mov
sub
loopne
stos
sub
cltd
add
je
pop
adc
in
sbb
mov
xorl
dec
icebp
rcr
arpl
cmp
js
sub
movsb
mov
aam
cld
sbbl
jo
mov
jp
fimull
add
pop
mov
adc
ss
pushf
arpl
xchg
rorb
cmp
mov
jg
push
push
push
xchg
push
pop
sarl
not
std
repz
mov
sbb
into
pushf
adc
lds
sbb
sbb
in
mov
bound
mov
pop
push
popf
xchg
popa
xchg
test
jecxz
arpl
mov
rcrb
jb
push
bound
mov
inc
mov
xchg
sbb
xor
mov
ja
test
push
jo
aam
sbb
xor
mov
push
adc
push
dec
add
dec
push
testb
jle
mov
cwtl
mov
pop
add
jecxz
fwait
out
xor
push
bound
xlat
inc
sub
xchg
cltd
out
stos
mov
into
mov
push
dec
out
ror
sub
adc
pop
insl
ss
es
xor
shl
fadds
adc
cmc
sbb
xor
ficoml
fisubs
test
dec
inc
xchg
xchg
addr16
popa
pop
push
mov
or
xchg
testl
dec
xchg
addb
int3
leave
mov
dec
add
stos
pop
push
sbb
jae
fcoms
push
daa
cmpsb
arpl
pop
pusha
es
jno
push
jle
pusha
adc
fcmove
sahf
insb
xchg
xlat
push
sbb
or
int
in
scas
dec
fcomps
popa
sbb
sub
ret
mov
mov
and
mov
jge
ret
mov
cmpsl
popf
outsb
or
and
daa
mov
and
test
dec
fdivrl
lock
pushf
dec
int
imul
mov
push
sti
aaa
mov
pop
daa
cmpsb
add
lahf
mov
cmc
push
ret
jns
pop
mov
int3
dec
mov
push
inc
or
bound
adc
dec
cwtl
pop
into
adc
inc
movsl
jnp
loop
fidivrs
mov
orb
cmc
cmp
push
pop
imull
pop
mov
repnz
int
inc
mov
dec
adc
push
cmpsb
movsb
sbb
dec
xchg
fsts
dec
cmpsb
jge
dec
in
std
xchg
repz
int
out
push
sbb
and
in
sub
jne
es
xlat
repnz
roll
dec
lret
push
xlat
mov
mov
dec
ret
ret
pop
xchg
test
iret
adc
stos
push
popf
jo
xchg
pop
mov
mov
lock
cs
xchg
xor
dec
mov
aas
inc
jecxz
push
sbb
mov
jb
aad
stos
pop
inc
pop
mov
das
rolb
lret
pop
fdivrs
push
dec
jo
xchg
pop
rcll
xorl
shll
cmp
inc
xlat
pop
sub
push
dec
add
icebp
mov
jne
jmp
jmp
add
in
mov
jne
inc
cmp
repnz
pop
lretw
loopew
sbb
sbb
gs
mov
lret
mov
cld
cmpsl
mov
xor
iret
push
sub
pop
xchg
sub
adc
xchg
inc
pop
push
push
dec
and
repnz
adc
dec
dec
xchg
sbb
jl
lcall
mov
mov
jg
bound
xor
or
fcmovne
push
lock
andl
mov
sarb
push
cmp
imul
pushf
lret
add
add
into
jmp
xchg
movsl
adc
movsb
xor
test
pop
xchg
outsb
fimull
xlat
push
sbbb
je
inc
sub
pop
mov
mov
mov
mov
sahf
insb
push
push
push
push
fnstenv
xlat
xchg
fcomps
fnclex
push
mov
fimuls
xchg
loop
push
cmc
push
xor
jle
fstl
ds
enter
mov
sbb
or
dec
cmpl
pop
sbb
inc
dec
iret
test
jae
aaa
xchg
mov
jl
rcr
xchg
aad
dec
mov
jmp
adc
ss
ljmp
stc
cmp
das
mov
fdivrp
das
inc
cli
adcl
je
mov
mov
lods
stc
adc
sbb
cld
adc
call
cmpsl
gs
insl
push
lods
push
or
inc
lret
lock
ficoml
inc
inc
cmp
imul
push
xchg
fcmovnb
and
mov
xchg
enter
fdiv
movsb
inc
es
sub
fsubrl
jg
icebp
push
and
shrl
and
orl
js
inc
mov
inc
and
out
lcall
sub
mov
cld
insl
fistps
sarb
jl
int
dec
fs
aad
aad
pop
mov
dec
mov
mov
orl
inc
mov
imul
adc
jo
push
insl
dec
xchg
mov
lret
and
adc
jl
and
stos
mov
push
mov
jmp
fstps
popf
sbbb
dec
insb
ficompl
jne
hlt
lods
cs
jmp
mov
cltd
gs
jecxz
adc
push
add
loop
shll
negb
jns
adc
push
ja,pn
jmp
lret
sub
stc
fwait
sbb
aas
add
in
mov
iret
push
iret
push
xor
addb
or
xor
ret
into
pop
mov
in
pusha
mov
mov
pushf
daa
mov
dec
jns
hlt
cmp
cs
mov
sbb
test
shl
adc
sub
inc
sti
outsl
es
fcmovne
dec
out
ret
dec
cli
fmul
adc
push
movsl
sbb
dec
dec
sbb
add
sbb
orb
jmp
jmp
insl
xchg
cmpsb
push
push
fwait
imul
or
inc
mov
lahf
push
repz
mov
and
cmp
pop
outsb
mov
jp
pop
jno
movq
mov
hlt
fxch
fimull
das
add
xor
fbld
lcall
cltd
push
mov
dec
xor
and
push
add
dec
pushf
sti
dec
fisubrl
mov
es
pop
pop
cmp
sub
and
mov
inc
mov
lods
ljmp
xor
jne
dec
les
leave
jge
and
test
dec
cmc
mov
xor
inc
imul
jno
and
fwait
dec
add
add
inc
stos
jmp
insl
xor
mov
ret
mov
cs
sbb
dec
call
xchg
fs
cltd
xor
lods
push
mov
xchg
lock
cmp
sarl
in
sub
scas
or
mov
movsl
or
call
pop
sarb
xchg
mov
inc
jbe
xchg
push
fcom
sbb
aaa
addr16
out
xchg
cmp
aas
adc
mov
loope
loop
nop
mov
aam
clc
ja
ljmp
scas
in
and
test
pop
adc
inc
nop
in
roll
mov
sahf
pop
inc
or
jp
xor
aas
aas
nop
pop
nop
mov
int
popa
and
das
imul
xchg
clc
dec
mov
push
clc
fstps
push
in
xchg
mov
ret
and
cmp
arpl
pop
cmpsl
clc
inc
adc
push
jmp
lahf
mov
mov
mov
lds
data16
stc
sub
adcb
adc
dec
pop
mov
jae
out
pop
test
rorb
pop
sbb
xchg
cld
xchg
xchg
das
sti
adc
and
or
int
mov
dec
mov
movb
jp
fdiv
outsl
aas
lahf
pop
into
xchg
rcrb
aaa
lret
mov
pop
aaa
insb
in
xchg
or
xor
or
pop
lods
lcall
call
inc
xchg
pop
outsl
into
pop
xchg
push
pop
repz
aas
mov
jo
cld
daa
or
mov
scas
out
clc
addb
fcompl
mov
push
mulb
add
lea
sbb
sub
and
jge
or
dec
cmp
sahf
fs
pop
fcompl
shll
bound
pop
push
dec
push
pop
sub
js
cmpsb
xor
fisubl
inc
mov
imul
inc
xor
loope
mov
ljmp
rclb
cmp
jbe
rorb
xor
das
aam
push
pop
dec
dec
xchg
aad
mov
pop
inc
out
test
js
loop
lds
add
icebp
pop
sub
ljmp
push
pop
inc
pop
mov
mov
out
insb
cltd
shlb
int3
lods
daa
inc
mov
adcl
call
sub
jl
jecxz
xchg
adc
movsl
xchg
lods
dec
mov
mov
mul
dec
mov
xor
and
adc
iret
mov
pop
into
js
js
sbb
call
mov
sbb
inc
mov
test
or
mov
cltd
rcr
mov
pop
inc
test
add
dec
or
aad
pop
lret
cmp
cmp
js
lock
mov
jo
aas
insl
xchg
cmc
pop
xor
stos
bound
xchg
or
push
test
dec
push
mov
pop
movsl
mov
scas
lods
fimull
sub
ret
pop
mov
adc
add
pop
push
jl
movsl
cmp
sub
nop
out
and
call
cmp
xchg
lds
push
js
sub
pop
add
lods
ficompl
push
shll
int3
fisttpll
jno
nop
mov
es
repnz
sti
or
movb
dec
sbb
frstor
dec
inc
adc
mov
fisubrl
neg
dec
test
into
push
xchg
xor
mov
xchg
cmp
xor
rorl
in
movb
push
add
repnz
int
sbb
dec
sbb
js
sbb
insb
adc
lds
popf
push
push
repz
outsl
cmpsb
sbb
test
cmpl
xor
push
xor
ljmp
xchg
jg
stos
call
adc
mov
out
jle
iret
mov
fistps
inc
aam
add
imul
mov
add
loope
mov
int
leave
push
cld
or
mov
rolb
sbb
in
dec
xor
pop
ret
sarl
dec
daa
int
xchg
loop
add
mov
inc
jo
mov
cmp
icebp
and
push
fsubrs
pop
gs
add
shll
sub
mov
dec
adc
xchg
jno
ss
je
ljmp
nop
cmpsb
xchg
pushl
mov
or
lock
xchg
sub
rclb
in
ljmp
cltd
cs
aad
mov
push
push
lret
sbb
loop
fdivr
jge
pop
ss
int3
ret
je
add
ljmp
xlat
cld
push
insb
lods
mulb
jmp
clc
out
cli
push
cmp
paddb
mov
inc
outsl
add
lods
fildll
sbb
fistpl
jmp
rolb
mov
sub
pop
pushf
test
pusha
js
stos
pusha
inc
out
pop
iret
inc
pusha
inc
xchg
add
inc
cmp
jle
fstpl
lea
sbb
shlb
dec
sub
outsl
add
rcll
pop
jge
out
push
mov
push
jp
mov
jp
add
sub
push
lds
fstpt
cmp
insb
out
cmp
pop
xchg
decb
xlat
sub
xor
insb
stc
das
or
mov
add
loope
push
iret
faddl
jbe
call
in
lret
sub
mov
aad
fiadds
dec
fsub
std
sahf
xchg
push
pop
mov
sbb
dec
or
fwait
add
xor
clc
rorl
jmp
inc
outsl
je
adc
xor
mov
lock
sahf
aad
bound
mov
stos
loop
mov
sub
cmpsl
push
pushf
mov
xor
push
and
es
pop
mov
fstps
pop
and
mov
test
js
popf
sahf
sub
add
lock
shrb
dec
push
xchg
push
cmpb
jl
sub
mov
shll
and
push
push
jge,pn
mov
dec
jo
xchg
fmul
or
jne
mov
inc
jge
jns
xor
leave
insl
iret
jae
mov
inc
adc
sbb
int3
inc
stos
pusha
outsl
dec
les
fnstcw
imul
gs
cli
shl
push
inc
xor
dec
pusha
lods
call
es
pop
test
mov
retw
inc
iret
inc
int3
in
lods
xor
xchg
data16
jle
jb
pop
inc
xchg
pop
in
stos
stos
std
roll
jnp
mov
in
je
mov
test
or
dec
shrl
sub
xor
mov
repz
pop
pop
ret
xchg
dec
ljmp
dec
cwtl
sbb
ss
int3
int3
lods
and
and
repnz
cmp
push
or
jle,pn
pop
cmp
repz
cmp
ds
xchg
imul
das
mov
sub
decb
pop
or
mov
test
cmp
pop
int
pusha
sub
scas
jle
testb
into
scas
mov
and
mov
cmp
adc
jno
shll
pop
pop
lds
or
iret
add
xlat
gs
pushf
jecxz
lahf
es
pop
mov
sub
jp
sbb
int3
push
lea
mov
mov
rorb
cmpsl
sbb
push
sub
add
xchg
jnp
push
gs
jnp
pop
sahf
ret
mov
mov
cli
es
xor
cltd
cld
sbb
aam
inc
imul
jbe
test
mov
bound
add
sbb
js
inc
pop
mov
push
jae
fisttpl
jmp
vphaddudq
push
dec
push
dec
adc
data16
push
jnp
mov
lret
shrd
imul
lahf
sub
out
xor
test
or
sub
jp
les
or
sub
jnp
pop
mov
rclb
mov
js
mov
imulb
imul
jnp
pop
fimuls
dec
pop
adc
mov
int
bound
mov
push
cltd
sub
push
aaa
ljmp
ja
les
pop
xchg
outsl
stos
push
mov
push
jno
scas
mov
sub
dec
pushw
xor
aaa
shll
idivb
or
rorb
sbb
insb
ja
push
subb
push
imul
data16
lret
imul
insl
pop
nop
out
xor
pop
aaa
mov
js
in
xor
lods
ja
cmp
fistpll
andb
mov
xor
rorb
cwtl
pop
leave
inc
or
mov
fwait
mov
popa
dec
inc
push
sub
stc
cmp
addr16
mov
inc
or
pop
dec
mov
adcl
lods
outsb
cmpsb
outsl
jp
mov
fcomps
dec
xchg
or
mov
xchg
inc
scas
stc
fimull
inc
dec
dec
bound
loope
imul
test
mov
pop
test
dec
cmp
ret
loopne
push
call
pop
mov
scas
adc
sahf
adc
int
sahf
aad
push
mov
arpl
dec
xchg
popf
daa
dec
shll
mov
test
push
inc
or
rorb
pushl
rclb
sbb
aad
push
xchg
adc
xchg
or
jmp
pop
pop
cmpsl
lret
jle
xchg
jns
adcb
jl
pushf
xor
cld
imul
pushf
into
push
mov
dec
pop
or
sbb
imul
pop
out
into
mov
lds
jbe
out
mov
dec
mov
dec
js
out
out
aad
popa
dec
inc
stos
push
mov
add
adc
jp
sbb
mov
test
and
push
aas
and
lret
xchg
fistps
xchg
out
xchg
adc
imul
stc
fmull
test
xchg
mov
xchg
outsb
lret
out
fistl
notl
add
dec
jae
fisubs
repnz
insb
mov
in
xor
addr16
cmp
xlat
addr16
mov
dec
pop
mov
pushf
inc
insb
or
nop
inc
pop
pop
jle
pushf
aaa
cmp
dec
mov
fs
mov
fwait
jl
outsl
cli
popa
sti
push
xor
dec
mov
ret
fninit
mov
pop
into
mov
jge
sub
push
push
movsb
and
jl
xchg
stos
in
call
lock
sbb
push
out
inc
jecxz
sub
xchg
xchg
adc
pop
and
mov
insb
pop
or
dec
mov
cmpsb
jns
popf
pop
stos
cltd
dec
mov
xlat
add
cltd
notl
mov
out
push
mov
jp
aas
inc
push
jle
pop
or
mov
cmp
into
ja
int
push
or
sub
push
sbb
scas
ljmp
mov
dec
dec
fnstenv
adc
mov
test
push
mov
mov
rcll
movb
outsl
cmp
cmp
fiadds
push
std
aam
gs
or
cwtl
mov
and
sbb
xchg
pop
cld
cmp
lahf
ds
imul
push
cmp
std
test
push
mov
mov
add
fidivrl
inc
push
xor
jl
pop
js
addr16
sbb
jnp
xchg
test
addb
idivb
cli
mov
adc
orb
mov
dec
hlt
adc
mov
xchg
test
ret
leave
sbb
xlat
cmc
ret
arpl
repnz
or
dec
cmpsb
sbb
aas
mov
mov
mov
mov
push
outsl
addb
loopne
outsl
xor
push
lret
sbb
adc
xchg
xchg
jl
cmp
andb
sub
sbb
xor
dec
sub
lret
xor
mov
testb
popa
ds
mov
pusha
push
mov
mov
dec
jns
sahf
and
popa
jbe
cmp
or
gs
fcomi
aas
pop
call
mov
mov
repz
dec
inc
mov
dec
adc
lret
sbb
inc
xor
rolb
push
mov
not
rolb
insb
shlb
lret
mov
sahf
in
mov
pop
lods
cmp
adc
jno
push
mov
movsl
add
jg
sub
mov
pop
dec
leave
and
xlat
lods
mov
push
lret
dec
fcmove
negb
xchg
cld
mov
repz
adc
nop
lods
cs
jg
pop
add
fcmove
sbb
flds
leave
loopne
pop
bound
fidivl
rcrb
adc
rol
sbb
sbb
push
repnz
negl
aad
frstor
push
xor
ret
mov
mov
movsl
sub
daa
outsl
add
mov
and
mov
pop
sahf
gs
xor
inc
int3
xor
sti
into
pop
addr16
sbb
pop
mov
cmc
aas
or
fcmovnb
ret
dec
dec
add
icebp
jo
nop
rcrl
cmp
mov
inc
lds
cmp
push
mov
inc
pop
xor
rol
sbb
out
scas
aad
mov
mov
mov
or
dec
ret
or
xchg
leave
or
sbb
rol
mov
jmp
lret
mov
adc
divb
mov
dec
out
push
fldl2e
scas
xchg
in
cmpl
xchg
icebp
stc
loope
mov
ss
stc
xchg
cmp
in
call
jl
fdivr
fwait
sahf
bound
dec
push
mov
test
cmpsl
and
push
mov
imul
add
push
stos
xchg
out
test
ret
sbb
rcl
insl
mov
jge
dec
repnz
add
add
out
movsb
cmp
out
xchg
push
inc
fnsave
lahf
es
mov
cmpsl
push
into
sub
xor
lret
pushf
push
sti
jl
enter
arpl
cmp
push
add
or
pop
pop
iret
add
cli
cmp
outsl
pop
fs
inc
push
and
sbb
stos
gs
int3
adc
jae
mov
pusha
mov
ja
dec
mov
cltd
dec
push
ds
adc
xor
sub
jl
mov
mov
scas
push
mov
and
insb
mov
dec
notb
out
mov
jmp
add
jbe
xor
xor
test
or
andl
add
adc
imull
std
pop
scas
inc
cwtl
xchg
outsl
adc
xchg
bound
xchg
jecxz
cmp
das
dec
or
cmpsl
inc
sub
mov
cmp
imul
mov
xchg
mov
iret
es
fbstp
cmp
dec
popa
jecxz
dec
ja
mov
imul
mov
jecxz
xchg
stos
mov
cmp
add
ljmp
add
xchg
fdivrl
push
jg
into
inc
fwait
mov
dec
fnstenv
scas
jae
push
inc
fstpt
aaa
es
push
cmp
pop
push
mov
push
mov
inc
mov
dec
mulb
aad
push
jp
add
outsb
jo
dec
xchg
rorl
jo
cwtl
sbb
cltd
and
dec
stos
mov
pop
or
and
pop
bound
cmp
cld
ficoml
mov
inc
lcall
inc
sahf
sarl
mov
fs
loope
cmp
out
sbb
jmp
icebp
sub
push
fs
cli
pop
push
mov
xchg
sbb
and
loope
xchg
push
aas
dec
pop
dec
cld
fdivl
mov
xchg
and
sbb
cli
repz
scas
lods
and
subl
mov
or
push
push
insb
push
inc
jp
cld
adc
rol
push
icebp
mov
mov
mov
mov
mov
mov
xchg
scas
test
mov
xchg
icebp
jbe
fists
inc
mov
mov
ret
mov
or
pop
icebp
dec
or
dec
sti
cmp
ficomps
push
cld
cmp
lock
and
lcall
xchg
orl
mov
jb
mov
sti
pop
and
and
add
push
insb
or
mov
aas
in
inc
xchg
scas
cmp
sbb
jbe
xor
iret
or
pop
pop
jbe
imull
clc
out
leave
push
es
loopne
js
jmp
dec
in
xor
xor
xchg
fidivs
mull
and
jnp
clc
push
dec
cmp
in
xchg
stc
mov
or
fnstsw
xchg
out
call
cmp
fs
jbe
daa
mov
push
adc
bound
cmp
dec
ud1
push
cs
jno
aam
add
lods
xchg
in
lret
pop
jo
adc
xor
data16
xor
and
cld
test
inc
adc
bound
xchg
lret
rcl
inc
xchg
pop
andl
mov
imul
adc
xchg
lock
xchg
ja
lret
cmpsb
cmpsb
out
aaa
cli
leave
int
call
xor
aad
insb
mov
dec
xchg
inc
mov
xchg
stos
inc
lods
rolb
inc
jo
rorl
cmpsl
in
cltd
iret
jo
jmp
cld
mov
cmp
pop
inc
mov
mov
xchg
cmc
inc
ljmp
popf
mov
adc
adc
outsl
mov
cmpsl
pushf
mov
fistl
dec
into
cmp
rol
mov
aad
es
add
movsb
dec
ret
sbb
jl
pop
pop
dec
scas
rcrb
dec
shll
jne
rcrb
add
adc
xlat
mov
shll
and
push
push
push
mov
pop
mov
cmpsb
les
mov
outsb
leave
cmp
std
mov
mov
faddp
push
jecxz
jecxz
xchg
outsb
movsl
sub
imul
incb
push
js
add
pop
push
inc
or
rcrl
iret
cwtl
pop
pop
adc
out
outsb
add
imul
jbe
mov
push
shrl
ljmp
push
rcl
idiv
sahf
cmp
push
or
xor
mov
std
xchg
int
lret
std
lds
mov
cmp
adc
frstor
push
popa
and
and
scas
adc
mov
ficompl
mov
xchg
sub
scas
pop
cmc
xchg
jge
iret
insl
mov
fcomps
mov
ljmp
xor
push
xchg
jmp
call
sbb
shl
or
orl
pop
sbb
pop
rcrl
repz
and
cmp
push
insb
daa
inc
pop
mov
outsb
xor
test
xchg
ja
jp
push
ficomps
divl
rolb
sub
xor
adc
xor
sbb
inc
scas
ss
daa
xor
iret
add
dec
in
adc
ja
adc
std
test
in
cmpl
cmp
mov
leave
mov
pop
fsts
jp
jl
jmp
call
leave
or
outsl
outsl
jmp
mov
push
or
and
add
pop
mov
loope
or
out
movsb
fcoms
in
imul
fmul
add
fxtract
movsl
loope
js
mov
filds
ljmp
cltd
or
sbb
cmp
lds
outsb
mov
shlb
mov
sbb
dec
lret
scas
leave
das
test
in
xchg
aad
in
dec
clc
fnstenv
xchg
fdivs
ja
jnp
dec
inc
dec
dec
push
fistpl
xor
daa
aas
dec
sub
imul
and
bound
adc
or
jbe
dec
push
mov
cmp
je
and
sbb
outsl
fiaddl
mov
out
fdivrl
es
nop/reserved
sub
shll
jp
mov
add
sbb
sbb
daa
ret
out
push
ljmp
xchg
sub
in
cmp
inc
push
test
push
pop
mov
loope
adc
push
inc
mov
daa
jae
incb
mov
pop
pop
pop
cmp
sarl
cs
insl
fcmovnbe
aam
xchg
lods
cmp
sub
insl
roll
push
js
insb
sti
insb
test
push
sub
jmp
in
pushf
adc
add
pop
and
xor
gs
dec
popa
fwait
int3
inc
insb
sbb
push
dec
xchg
mov
jmp
jmp
scas
xchg
cwtl
inc
sahf
mov
cmpb
xor
adc
lret
imul
xor
loope
mov
xlat
stos
xchg
in
or
jns
inc
addr16
add
lea
jge
fisttpll
in
cmpsb
or
pop
adc
mov
pop
sub
adc
add
mov
popf
or
mov
shlb
scas
mov
ljmp
cmp
jae
pusha
mov
cltd
mov
mov
ficoms
jl
cwtl
adc
movsb
and
int
add
sub
leave
syscall
fdivrl
cmp
jle
bound
aam
negl
mov
lods
cmp
push
push
int
mov
cmp
xor
fwait
clc
std
stos
das
adc
mov
pop
mov
xchg
pop
mov
fsubs
mov
rorl
jle
pop
mov
cmpsl
lahf
std
into
mov
or
out
xchg
test
pop
andb
iret
lds
and
dec
push
push
es
pop
and
lret
pop
and
cmp
movsb
outsb
adc
and
in
stos
jl
xchg
jge
lock
rorb
mov
lcall
or
mov
in
shlb
ja
out
roll
cwtl
dec
mov
outsb
leave
mov
mov
and
adc
clc
or
jae
ss
loope
cmpsb
mov
sbb
jle
xlat
cwtl
dec
mov
cmc
fsubrs
cmp
ss
ret
in
rclb
push
addb
xchg
push
lea
enter
mov
sub
popf
jecxz
lcall
cs
aam
data16
jno
push
mov
inc
icebp
in
xor
mov
and
or
out
add
sti
sti
psrld
xchg
add
add
movsb
sar
pop
inc
jmp
mov
scas
add
xchg
xchg
jnp
lods
pop
in
lahf
lahf
jp
and
stos
xchg
ja
dec
out
push
sbb
mov
inc
in
adc
mov
push
js
lods
mov
or
ljmp
cltd
mov
dec
loop
aas
lahf
push
inc
sbb
pop
dec
sahf
lods
sbb
repnz
mov
into
imul
push
popf
jno
loope
xchg
into
mov
push
shl
lods
push
lock
out
cmpsl
xchg
psubusw
int3
cmpl
push
inc
push
fwait
xor
int
mov
pop
mov
cmp
sub
and
sbb
jl
inc
sub
mov
xchg
int
fstp
ret
lahf
jnp
dec
aad
ret
imul
fildl
fcoml
stos
cmp
mov
xor
lret
es
xchg
push
jae
lret
mov
push
js
dec
mov
in
dec
das
cmp
or
push
push
xorps
sub
lret
divl
sti
les
cltd
aas
jmp
out
push
mov
pop
out
dec
cli
fstpl
dec
test
enter
xchg
jae
fucomip
enter
dec
lds
out
fldcw
inc
jmp
fistpl
shl
mov
sub
push
inc
jg
xchg
pop
pop
sub
xchg
test
dec
rcrb
in
mov
adc
mov
mov
lret
inc
sahf
jecxz
mov
push
stos
push
test
out
cmp
and
push
mov
xchg
ret
pop
adc
cmp
imul
das
mov
lret
rcrl
dec
stos
pop
mov
mov
xchg
or
pusha
pop
or
cmp
cmc
jmp
add
scas
cmpsb
inc
sarb
shll
ret
dec
aam
fmull
out
adc
and
fnstenv
lret
mov
dec
lods
out
shr
jle
or
inc
rcl
xchg
cli
scas
bound
mov
jge
sub
icebp
or
pop
push
xor
sbb
pop
pop
add
ficompl
out
mov
orb
mov
push
or
xor
mov
fnstsw
cmp
jo
addr16
mov
into
adc
adc
pop
xor
nop
dec
inc
jle
mov
clc
gs
and
mov
in
cmp
loopne
int3
or
mov
das
xor
in
push
rorl
fadds
cmp
leave
or
es
mov
adc
fdivrs
lcall
pushf
adc
jle
or
fstl
mov
sti
dec
rorb
into
cmpb
scas
out
cltd
mov
shll
scas
xchg
mov
inc
or
or
push
test
jnp
ss
mov
call
aam
sbb
fmull
pop
gs
insl
ljmp
insb
push
je
dec
mov
scas
sbb
movb
pop
dec
adc
pop
xor
pusha
push
sbb
add
cmpsb
stos
pushl
out
in
int
pop
addb
dec
es
add
ret
xor
sub
xchg
xchg
cmp
push
int
cmpb
movsb
enter
rcrl
int
jp
jne
push
xor
test
or
std
xchg
scas
xchg
into
ljmp
mov
jle
loop
xorb
push
cs
inc
mov
sbb
std
inc
mov
pop
sbb
lgdtl
pop
mov
rolb
jbe
fimull
pop
pop
mov
pusha
or
lahf
dec
mov
push
sub
aad
jecxz
pop
test
cmpsb
insb
sahf
dec
fwait
jecxz
sti
jge
std
sbb
mov
inc
add
call
cwtl
lahf
push
mov
rorl
pop
adc
aaa
fadds
dec
inc
lock
jmp
mov
inc
or
push
gs
lds
insb
mov
mov
mov
stos
xlat
fsubl
cmp
cmpsl
call
shl
int
mov
adc
push
and
pop
sarb
add
adc
lret
sti
cli
xor
push
fmul
mov
push
jo
xor
bound
stc
adc
jnp
push
lret
loop
xor
sti
push
insb
mov
ret
push
nop
mov
jo
xlat
pop
leave
pop
sub
in
mov
addr16
enter
push
mov
dec
nop
mull
adc
int
mov
outsb
ljmp
jns
fsubrs
pop
test
xor
hlt
pop
sti
and
adc
jo
jl
cs
test
das
xor
rcrb
int3
pop
outsb
in
cwtl
mov
popa
mov
les
cmp
pop
pop
fs
shll
inc
cli
lret
addr16
dec
mov
rol
push
das
add
imul
fsubr
int
pop
sub
cmp
outsb
and
sub
adcl
sub
inc
jmp
inc
popa
subl
fimuls
mov
or
adc
pop
stos
ja
xchg
sbb
mov
push
xor
nop
jl
outsb
stc
jg
lods
push
mov
push
sahf
cwtl
jecxz
ljmp
outsl
jae
cs
mov
jnp
out
xchg
pop
insb
fidivrl
sub
aas
sbb
cltd
bound
push
call
inc
cmpsb
rcrb
test
gs
gs
sub
pushl
push
dec
out
push
test
cmpsb
cmp
sbb
dec
push
mov
mov
aad
cli
mov
out
outsb
mov
pusha
iret
fistpl
test
or
daa
je
insb
push
lock
decl
and
inc
push
pop
pop
pusha
pusha
inc
add
mov
testl
push
dec
mov
or
pop
xlat
jmp
ds
mov
dec
fs
les
mov
dec
loope
mov
fwait
hlt
les
ret
into
pop
push
xor
iret
and
xchg
or
stc
inc
xchg
test
scas
jge
mov
add
test
xchg
aas
popf
ljmp
lods
ds
pop
xchg
cmp
xorb
bound
imul
push
mov
fcomp
inc
jle
xlat
jl
movsl
adc
or
clc
inc
push
dec
repz
shlb
test
cld
stos
nop
lcall
lcall
dec
bound
roll
dec
pop
mov
and
les
pop
fs
cmp
popf
imul
jp
adc
ja
jno
stos
pusha
pop
outsb
scas
cmpsl
orb
lahf
inc
push
cmp
push
test
addr16
or
hlt
jae
jne
sub
cmp
mov
rcr
mov
and
push
idivb
clc
mov
bswap
mov
insb
nop
or
fxch
ljmp
movsb
mov
xor
add
pop
outsb
cmp
insl
mov
inc
cmp
xchg
popf
push
daa
mov
add
cli
stos
outsl
sbb
jge
mov
mov
or
test
cmp
mov
pop
and
mov
cwtl
mov
mov
xchg
mov
int3
test
mov
lods
pop
dec
test
mov
push
jbe
inc
popa
push
inc
cld
cmp
xchg
mov
call
call
mov
movsl
mov
jp
bound
das
je
push
pop
xor
jecxz
fldt
xchg
fsts
imul
sub
mov
adc
pop
mov
pusha
out
aad
push
xchg
inc
mov
in
xlat
sub
ror
movsl
sub
cwtl
test
ds
sub
adc
cmp
lahf
mov
insl
ds
arpl
sub
sbbl
outsl
test
adc
jns
dec
mov
xacquire
dec
lret
loopne
push
mov
mov
xchg
imul
adc
cmp
in
xchg
je
cs
pop
sub
and
inc
out
mov
rorl
pusha
and
jmp
mov
mov
pop
ficoml
js
cmp
fimuls
cmp
dec
call
xor
adc
xchg
cmp
lods
add
fadd
outsb
sub
adc
jns
inc
imul
mov
fnstenv
mov
cli
push
sub
shlb
sbb
cmpsb
movsl
jg
push
fisttps
push
pusha
inc
sub
dec
fcomi
pop
cmpsl
clc
pop
jecxz
popf
xchg
daa
mov
enter
sti
cmp
mov
fwait
push
or
dec
insl
adc
dec
push
mov
jl
push
in
cmp
fwait
rorl
xor
iret
call
dec
enter
pushf
jmp
js
fsubl
mov
pop
mov
movsb
jle
mov
es
xor
mov
outsb
pop
or
mov
xorb
add
mov
pop
ds
stc
sbbl
test
arpl
icebp
out
sub
out
je
add
fimull
sub
in
aam
xchg
sbb
mov
pop
nop
lock
js
cmpsl
pop
fstpl
mov
push
inc
push
dec
xlat
jae
lahf
fdivrl
jb
pop
popa
bound
push
mov
jmp
pushf
cwtl
pop
lock
sub
cmpsb
inc
jmp
sub
dec
cld
cmp
out
sti
pop
jnp,pn
pop
les
je
aaa
sarl
push
frstor
push
enter
int3
jmp
sub
and
fnsave
fwait
leave
insl
fdivrp
inc
in
fsubrl
cmp
es
pushf
push
xorb
lds
ds
xchg
and
pop
jp
xchg
jne
je
jns
jecxz
sbb
lds
sub
cmp
mov
out
jmp
mov
or
test
pop
sarb
cmp
mov
inc
jg
dec
data16
cmp
subb
loop
test
gs
loopne
and
das
aas
sbb
mov
mov
push
mov
shufps
xchg
fstpl
inc
cli
mov
add
adc
lahf
xchg
andl
jnp
mov
lahf
push
xor
mov
sbb
testb
inc
cmpsl
push
push
push
pop
int3
cmp
lds
jns
rorb
icebp
daa
mov
insl
or
andb
pushf
aad
outsl
mov
push
int
fadds
dec
incl
cltd
aad
aas
sarb
jl
dec
stos
addr16
aas
ret
push
cwtl
fstp
ret
movsb
mov
push
out
int
sahf
cmp
inc
or
mov
js
adc
stos
stos
mov
outsb
mov
or
into
adc
dec
testb
xor
sbb
adc
icebp
sarb
fadd
shrl
out
call
repz
sbb
pop
inc
loope
xor
rorb
adc
dec
pop
mov
push
mov
lcall
mov
in
lret
je
es
ljmp
cli
shl
aaa
mov
xlat
lret
imul
in
xor
ja
lcall
mov
insb
pop
dec
and
push
push
iret
lahf
push
xchg
dec
xor
pop
jns
xor
shlb
xor
xor
lcall
or
loope
push
push
jno
mov
inc
lods
mov
test
jp
pop
mov
xor
insl
xor
push
ds
mov
fdecstp
sahf
enter
out
add
nop
aas
sbb
pop
int
mov
fmull
add
scas
js
bound
fildll
sub
lds
gs
cmpsb
je
xor
lods
adc
or
scas
iret
into
das
popf
dec
dec
call
push
repnz
jmp
mov
mov
mov
es
cmp
cmp
lret
sub
mov
or
pop
mov
or
stos
xchg
stos
adc
aam
sbb
orl
je
ss
mov
xchg
repnz
int3
adc
push
mov
mov
cs
mov
stos
jl
and
sbb
sub
pop
inc
push
imul
sti
sbb
add
je
cs
adc
aam
ret
sub
mov
pop
mov
mov
sbbl
lcall
pusha
out
imul
in
fxch
fwait
scas
aaa
dec
outsb
dec
or
fcomps
aad
testl
pop
inc
mov
dec
inc
inc
ljmp
filds
adc
sti
stos
cmp
inc
pop
ds
or
push
xor
cmc
inc
inc
fnsave
xor
es
push
mov
lret
ficoms
cmp
push
rol
add
sahf
leave
lods
dec
outsb
ds
sbb
mov
leave
in
stc
repnz
mov
imulb
into
push
jno
ficoml
sti
les
jnp
and
jg
mov
cli
repz
jbe
mov
mov
insl
fsts
in
rclb
cmp
ss
sub
cmp
push
ja
dec
inc
js
adc
xor
jae
xor
inc
dec
fldt
ret
bound
test
aad
outsb
mov
scas
bound
and
ficomps
fstpl
pop
movsb
add
sub
xor
mov
pop
push
test
sub
rclb
arpl
add
fldcw
jnp
sti
arpl
data16
hlt
dec
inc
jnp
mov
arpl
idiv
xor
mov
scas
push
int3
adc
fucomi
test
loopne,pn
out
jp
lret
shrb
pushf
insb
test
and
sbb
inc
daa
addr16
inc
xchg
sub
shlb
test
push
popa
add
out
xor
cmp
cmp
or
ja
cmp
rcl
inc
int3
enter
sub
sub
xorl
mov
ljmp
mov
pop
pusha
xlat
sbb
and
fs
push
jo
addr16
mov
loop
adc
push
int
out
adc
test
push
push
jne
fnsave
enter
pop
xchg
stos
push
mov
xor
add
pop
cmc
ret
xor
and
pop
lret
fdivrs
aad
stos
fnstsw
sub
dec
leave
sbb
and
sbb
mov
cltd
add
dec
cmp
cwtl
fiaddl
cmp
sbb
mov
mov
cmp
pop
xchg
lret
cmp
lahf
in
adc
pop
mov
pop
cld
mov
push
mov
or
mov
push
mov
lea
dec
lahf
and
xor
mov
xchg
and
sti
popa
in
aas
popf
cmpl
push
push
push
push
mov
xchg
push
jnp
into
jne
xchg
or
jnp
hlt
and
lahf
or
or
in
lret
jp
cmp
addr16
mov
push
fwait
xlat
in
inc
popa
xor
js
lret
push
pop
pop
jecxz
stos
push
xlat
fs
sahf
xchg
jl
mov
out
mov
dec
jbe
fs
incl
out
mov
sbb
jo
mov
push
or
in
out
mov
lock
and
test
dec
push
and
mov
insb
jl
xchg
cmpsb
inc
sub
adc
bswap
fcmove
adc
xlat
dec
icebp
or
cmp
jb
fldz
imul
push
imul
xorl
adc
mov
inc
aad
scas
push
sub
pop
jnp
sub
push
cmp
lret
xchg
dec
adcl
sub
xor
sub
mov
inc
cmp
cmc
mov
push
and
rcl
push
dec
sub
movsb
aaa
rolb
das
or
fs
insl
inc
lahf
cmpsl
je
cmpsb
popf
dec
lock
inc
push
shrb
hlt
jmp
pop
cmp
pop
pop
inc
pop
cmpsb
ss
mov
push
dec
in
rcrb
cmp
and
scas
out
xchg
push
ret
sbb
or
fdivr
jmp
xorb
movsl
xchg
addr16
fistl
out
sbbl
inc
rcrb
mov
lds
mov
mov
xchg
pop
sahf
cs
stos
dec
and
out
push
outsb
xchg
idivb
sub
ror
and
jne
xchg
daa
rcl
push
add
cmp
xlat
jge
dec
andb
xor
inc
mov
inc
push
ret
enter
xlat
lret
cmp
icebp
inc
pop
pop
into
leave
out
imul
and
aad
scas
push
aad
outsb
cmp
scas
or
out
mov
or
jb
dec
pop
push
iret
insl
sbb
std
push
clc
lea
pop
movl
cmp
sbb
mov
loopne
mov
xlat
pop
pop
lock
or
pop
scas
repz
subl
movsl
inc
test
outsb
daa
loope
adc
sub
lret
inc
or
push
dec
js
mov
pop
les
aam
js
cmpsb
scas
imul
fisubs
ljmp
xchg
loop
lahf
mov
mov
mov
dec
inc
sahf
mov
hlt
std
es
aas
mov
dec
add
mov
pushf
pop
xchg
sbb
sbb
push
stos
xchg
mov
ja
xchg
testb
inc
daa
push
dec
addr16
pop
cli
jle
jmp
xchg
fimull
fisttpll
lahf
fmull
out
fimull
add
test
jnp
cmp
in
xor
jg
icebp
sti
and
ljmp
mov
xchg
sbb
inc
mov
ret
popa
jb
mov
in
add
je
lea
inc
fcompl
sbb
test
push
aaa
mov
mov
cmpsb
test
mov
jne
adc
sub
sahf
add
loope
jns
mov
xchg
pop
inc
orb
push
lret
in
decl
aaa
push
xchg
mov
imul
mov
adc
xchg
lcall
iret
testb
out
xor
shlb
stos
mov
lahf
outsl
in
das
adc
imul
aas
je
push
xor
sbb
inc
testb
sbb
sbb
push
lea
mov
aaa
imul
pop
and
push
pop
rcrl
movsl
xor
lock
sbb
xor
sbb
sub
icebp
add
cmp
sbb
jp
dec
lret
rclb
movsb
mov
mov
test
inc
adc
ds
dec
imul
rolb
xor
ret
lods
pusha
outsb
stos
in
pop
mov
loope
test
adc
dec
and
rolb
out
or
int
xor
or
jle
inc
das
jb
inc
ljmp
fldlg2
lcall
pushw
shlb
dec
inc
mov
decl
pop
push
dec
mov
dec
addr16
lret
clts
js
aas
test
pop
sbb
adc
test
push
push
push
inc
sub
sbb
or
push
outsb
neg
rclb
sbb
push
sub
mov
adc
lods
jnp
shll
pop
xchg
cmp
xchg
sbb
mov
rorb
mov
push
xor
mov
imul
pop
nop
cwtl
and
lds
orb
lret
lret
push
icebp
dec
clc
loopne
lret
xchg
stos
ret
xchg
mov
and
mov
pop
add
push
mov
push
mov
cwtl
les
cmp
lods
popa
adc
push
jne
xor
jp
sbb
subb
jmp
sahf
push
shrl
scas
push
jnp
jo
pop
dec
adc
cmp
inc
jbe
dec
xor
loop
orb
pusha
das
and
lret
push
call
cmovle
std
nop
pop
pop
faddl
and
pushf
pop
sbb
pop
or
cltd
fldcw
ret
pop
lret
icebp
out
fnstcw
cs
inc
and
mov
popa
bound
pop
xor
roll
xor
mov
add
adc
inc
cmp
enter
xchg
jb
ds
and
test
cwtl
jns
pop
xchg
dec
xchg
push
fwait
and
cltd
cs
mov
inc
pop
iret
add
jnp
xchg
ret
fiadds
cmp
call
popa
pop
mov
fdiv
imul
jbe
pop
stc
add
fs
ljmp
in
mov
rcrb
cli
sub
sti
mov
dec
or
movsb
out
out
push
orl
xchg
xchg
dec
pop
mov
xchg
jbe
sbb
sub
xor
sbb
mov
push
nop
stc
shrb
fldenv
xor
es
dec
cmp
sbb
jae
out
mov
sbb
cwtl
ja
fisubrs
cld
sub
orl
loop
cmpl
adc
shlb
repnz
aad
xlat
leave
mov
mov
movsl
mov
mov
xchg
cmc
in
jl
inc
jno
xor
lods
mov
stos
jge
adcl
inc
fistl
shlb
ret
cwtl
add
and
jp
jne
adc
es
movsl
lcall
xor
lds
jb
xor
xor
push
bound
and
aaa
int
cmp
jmp
inc
and
out
outsb
pop
jne
pop
cmp
pop
data16
inc
push
fucomip
aad
dec
lret
mov
cmp
sbb
movsl
aam
xor
das
mov
push
dec
adc
mov
xchg
rolb
adc
ja
stos
pop
or
sahf
dec
shrl
leave
pop
push
xor
jnp
lret
aam
jnp
jge
push
inc
int3
outsb
jb
shrb
pushf
xor
mov
cli
push
lret
pop
idivl
mov
outsb
test
adc
add
mov
mov
push
cmc
mov
adc
call
add
mov
jb
ja
dec
fcompl
lret
dec
divl
stos
jbe
xchg
ja
adcb
cltd
mov
data16
fildll
pop
repnz
mov
lret
cli
mov
add
into
in
pop
mov
cld
cmpsb
push
xchg
pop
bound
sub
aaa
dec
inc
push
push
sahf
push
adc
insl
cmpsl
int
ret
pop
pop
in
jnp
mov
inc
stos
cmp
push
imul
enter
int
out
lret
fwait
sbb
imul
jae
pop
cmp
popa
aas
jg
pop
fstl
or
pop
adc
xor
mov
fstps
mov
mov
scas
stos
and
push
or
jns
ja
adc
pop
js
jnp
xor
test
mov
mov
cmp
mov
jo
or
push
adc
mov
lods
add
test
dec
jle
push
rcrb
mov
cmp
sub
jmp
insb
test
jns
or
inc
cmp
mov
inc
adc
pop
out
int3
mov
xor
pop
inc
dec
test
adc
nop
inc
stc
repz
push
mov
lret
test
or
push
push
ret
mov
iret
mov
pop
mov
icebp
dec
es
sub
cmp
ja
shrl
cwtl
pop
mov
cli
sbb
jno
dec
push
outsb
iret
lret
cmpb
pop
ljmp
push
pop
aaa
repz
insl
cld
mov
pop
inc
push
cmp
sbb
es
divb
leave
fstpt
adc
xor
mov
test
xchg
cmpsl
insb
mov
out
adc
out
mov
pop
movsb
or
popf
fidivl
jno
push
dec
std
fcoms
pminsw
les
icebp
pop
dec
cmp
cmpsl
dec
mov
ja
push
sbb
dec
or
mov
mov
adc
sti
shlb
jmp
andb
popf
xchg
jnp
mov
js
ret
test
push
or
pop
dec
fadds
jnp
inc
inc
or
loop
jmp
hlt
mov
stc
push
out
push
lods
cmp
cmp
dec
movsb
icebp
jmp
ror
inc
dec
cmpsl
dec
dec
cs
clc
jecxz
pop
pop
inc
data16
imul
aad
sub
pop
lds
xchg
in
cli
lods
add
ss
mov
movsl
push
aas
lock
ljmp
dec
nop
push
test
mov
jo
xchg
adc
mov
test
lods
popa
xor
cltd
testl
push
mov
and
in
cmc
les
mov
add
lds
push
fcomps
frndint
cltd
into
mov
mov
aam
enter
mov
mov
adc
repz
inc
pop
sub
add
ror
imul
add
or
jnp
out
jecxz
int
mov
es
arpl
xchg
cmp
jns
fsubrs
push
pop
leave
inc
push
imul
je
shll
sub
sahf
ret
jns
cmp
jns
rorb
into
leave
push
hlt
shl
sbb
ret
sbb
xor
add
pop
pop
sub
out
enter
js
pop
cli
fstl
ss
dec
push
add
rorl
push
inc
scas
push
xchg
cs
jnp
jge
sub
pushf
lods
nop
addr16
imul
movsl
push
adc
shll
pop
adc
int
ucomiss
jne
mov
add
loopne
push
adc
aam
push
ljmp
jns
pop
rorl
add
arpl
cmpsb
loop
orb
rclb
lcall
push
adc
out
xchg
xchg
stos
xchg
xor
scas
in
out
dec
pop
mov
add
xchg
rorl
jg
call
pop
mov
pop
out
arpl
pop
ja
aam
testl
jno
fwait
mov
and
outsl
inc
shrb
lods
dec
das
aas
mov
xchg
or
xor
push
movsb
dec
pop
push
dec
pop
cli
ficoml
sti
adc
xchg
jmp
subl
add
mov
dec
cmpsl
jmp
and
hlt
mov
test
sbb
add
and
outsb
pop
pop
in
jno
or
mov
icebp
mov
movsb
fucomi
js
xor
xchg
xor
xor
enter
mov
mov
dec
adc
mov
jne
fbstp
jae
loop
jge
ret
jne
lock
push
push
fisubrl
shlb
dec
mov
pop
arpl
jp
sarb
cmp
nop
je
xchg
and
rorl
scas
repnz
and
rorb
mov
xor
xlat
fistl
rolb
sbb
sub
js
xor
pop
out
jo
add
xor
fcoms
inc
jne
dec
out
sahf
sbb
xchg
inc
xchg
fcmovnu
mov
jnp
out
scas
xchg
andb
std
lock
js
outsl
xchg
fucomp
mov
scas
jmp
mov
test
pushf
and
or
pop
push
popf
sbb
xor
scas
imul
rcrb
or
test
out
pop
test
inc
and
test
dec
jle
pop
sarl
sbb
sahf
sbb
stc
inc
bound
pop
dec
or
loop
jb
jl
hlt
in
enter
lods
test
and
sub
mov
adc
xchg
lret
dec
xor
dec
push
lret
pop
push
ds
mov
jl
test
daa
ja
fists
inc
push
sub
outsb
das
cmp
outsb
loop
push
movsl
pop
push
cwtl
aad
adc
lods
mov
test
enter
cmp
push
push
push
mov
pusha
insb
pop
cmpsb
adc
out
test
daa
pop
add
dec
jp
dec
mov
fcmovnbe
je
aaa
mov
jecxz
adc
xchg
pop
push
jno
in
and
push
es
push
or
add
add
push
jbe
jbe
xor
icebp
dec
arpl
or
ret
ds
jo
dec
out
cmpsb
inc
and
clc
mov
ret
mov
fst
mov
pop
cmpsb
push
cli
out
in
lock
jp
mov
pop
dec
pop
ret
cltd
hlt
stos
jmp
push
xchg
aaa
bound
lea
loope
dec
imul
lret
mov
out
shl
popa
aam
mov
dec
cmp
or
cmpsl
inc
push
mov
xorl
mov
sub
xor
jae
repnz
lds
ss
inc
push
xor
les
add
xchg
inc
or
imul
dec
lods
fbstp
nop
cmp
adc
add
fsubr
insl
int3
adc
insb
cmpl
jno
pop
mov
loopne
filds
dec
xchg
sub
popf
scas
pop
xor
lds
mov
test
mov
clc
sbb
or
push
in
sbb
out
xchg
jnp
rol
cmp
out
push
in
imul
sbb
sub
mov
aaa
incb
lret
push
jmp
mov
rcrl
pop
jne
push
mov
nop
adc
xor
mov
insl
inc
inc
fisubrs
imul
into
sarb
xchg
jp
xchg
xchg
cmp
adc
nop
add
push
mov
cmp
lret
inc
frstor
add
jo
movl
jb
sub
xlat
in
xor
cmp
dec
inc
mov
cmp
cmp
imul
imul
ljmp
cmp
arpl
out
jmp
mov
test
xchg
fdivs
dec
cmp
call
loope
or
ret
fwait
rorb
jle
dec
inc
fildl
dec
out
xchg
dec
out
pop
fstps
mov
out
cli
imul
bound
testb
push
outsl
scas
or
leave
pop
out
ret
add
ja
adc
rclb
inc
adc
fs
movb
fbstp
mov
mov
pop
movsb
inc
jmp
repz
mov
outsl
xchg
jnp
xchg
nop
pop
into
repnz
mov
pusha
pop
mov
fistpl
test
mov
lret
pop
nop
shrb
inc
pop
jnp
stos
ds
inc
nop
jnp
xchg
call
mov
in
lea
fmull
jo
arpl
jo
pop
fldenv
cmp
lret
xor
imul
cs
aas
repz
mov
inc
test
inc
xor
pop
dec
jne
push
pop
cmp
lcall
sbb
cld
dec
push
loop
jp
xor
xor
lret
in
sub
insb
sbb
ljmp
adc
pusha
sub
dec
lea
jne
jg
imul
ret
or
jae
int3
aaa
inc
xchg
push
mov
push
lahf
insb
jae
pusha
orb
mov
mov
shr
addr16
mov
cmp
xor
sahf
inc
inc
ret
fisttpll
inc
decl
mov
sub
stc
inc
or
gs
leave
mov
pop
lahf
mov
rclb
pop
mov
jne
scas
mov
xchg
call
dec
repz
inc
sub
push
cmc
dec
sbb
nop
jg
outsl
jge
add
mov
xchg
dec
mov
push
adc
cld
cmp
jno
push
test
xor
mov
imul
cmp
cli
mov
push
aaa
xor
fisttpl
jmp
repnz
inc
ffreep
rolb
mov
lock
movntps
shll
les
ret
ffreep
sbb
dec
cli
jle
insl
js
scas
scas
dec
pop
ret
insb
inc
out
and
push
sub
mov
cltd
adc
adc
jge
in
jl
cmp
or
and
mov
push
pusha
cmp
ret
jo
pop
aaa
mov
push
aam
cltd
pushf
and
mov
jae
xlat
pop
std
out
test
push
and
cmp
adc
fnstsw
gs
dec
cmp
inc
jle
ljmp
add
xor
inc
jne
or
addr16
mov
enter
insl
inc
dec
sahf
jl
fwait
adc
jnp
test
push
push
cmp
jge
mov
dec
frstor
popa
or
pop
das
loope
mov
xor
adc
ljmp
mov
sub
mov
js
or
xor
dec
jb
test
dec
sbb
xor
imul
mov
lods
dec
mov
mov
insb
arpl
ret
jo
or
jno
std
aam
dec
js
pop
cmpsb
iret
dec
jne
iret
push
cmpb
es
inc
and
or
fs
fisttpll
inc
sbb
adc
sarb
mov
mov
push
mov
mov
cs
insl
dec
subl
scas
pop
test
fldcw
push
or
inc
dec
jno
xchg
dec
mov
and
sbb
ficoml
jo
rcr
andl
mov
pop
hlt
leave
cmp
out
jne
add
pop
jmp
aam
push
cmp
xor
ret
add
jmp
leave
fiaddl
data16
in
or
gs
lods
fnop
js
sub
sub
or
xor
ss
push
jno
aaa
push
xor
jo
pop
cs
out
sbb
jmp
out
call
mov
mov
mov
addr16
adc
out
sub
adcl
adcb
loope
sbb
shl
lcall
add
jecxz
inc
insb
fcmove
xchg
hlt
cld
adc
or
mov
ja
pop
aad
jns
sbb
xchg
add
jnp
add
add
test
mov
addr16
push
xchg
loop
and
sub
mov
sbb
inc
std
js
pop
fiaddl
outsb
fsubs
iret
out
rcrl
mov
sbb
stc
cwtl
test
orl
call
scas
lret
decl
lahf
jmp
outsb
pop
flds
push
sub
shlb
cmp
sti
ret
cmpsb
sahf
hlt
pop
ds
add
sbb
ljmp
sbb
jmp
in
jae
xchg
pop
fwait
shrb
mov
mov
push
or
ljmp
sar
ljmp
lret
pop
cmp
jns
fldt
repnz
push
push
adc
add
repnz
stos
mov
jmp
cs
xchg
ja
pop
dec
jae
mov
jne
push
dec
imul
pop
out
sub
or
cwtl
xchg
sub
iret
loopne
fwait
aam
test
out
sbb
mov
mov
gs
pop
mov
pop
leave
mov
in
pushf
inc
ficomps
add
test
sub
popf
push
rcrb
sti
cmp
add
sar
shlb
es
out
add
out
in
inc
cwtl
mov
pop
pop
or
mov
enter
jbe
icebp
enter
pop
aaa
push
or
in
sub
das
mov
sub
add
push
rcrl
imul
jno
adc
inc
lods
fistps
scas
movsb
ficoml
mov
rcr
push
push
xchg
aaa
push
mov
scas
out
mov
rorb
clc
sub
dec
inc
mov
psubusw
je
push
xchg
lods
mov
ret
js
mov
lahf
fcomps
and
imul
loope
popf
jnp
sbb
mov
data16
