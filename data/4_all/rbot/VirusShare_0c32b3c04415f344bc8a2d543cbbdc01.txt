pop
add
addb
sub
mov
mov
jecxz
and
add
mov
jne
xchg
cmc
push
mov
sub
lret
adcl
hlt
jnp
mov
shlb
mov
shl
outsb
adc
pop
orb
sbb
fcomip
mov
cwtl
gs
jns
shlb
inc
icebp
add
fwait
pop
jbe
subb
mov
fucom
and
in
int3
sahf
fsts
pop
cld
dec
cmc
sbb
xchg
xor
jmp
shl
lahf
out
andl
mov
mov
lret
lret
fidivrs
xor
mov
loope
cmp
cmp
lahf
shll
dec
jae
jmp
push
dec
aam
adc
insl
xchg
inc
lods
mov
sbb
jmp
test
mov
mov
bound
movsb
and
push
sbb
push
aad
out
shl
sti
fimull
les
loope
ja
inc
jns
jo
or
mov
add
sar
mov
dec
roll
mov
aam
mov
cmc
push
or
lods
push
data16
pop
icebp
jle
popa
dec
push
daa
sbb
push
sbb
and
fistpl
hlt
xchg
add
pushf
add
jl
xchg
pop
ds
dec
mov
inc
mov
lahf
xchg
gs
or
sub
mov
jecxz
daa
inc
fcompl
leave
mov
cs
das
loopne
aam
push
nop
push
ret
sbb
ficoml
adc
mov
cmp
adc
dec
xchg
imul
lds
mov
aas
call
pop
sub
stc
adc
cwtl
mov
daa
cmp
mov
and
add
imul
mov
ljmp
mov
sti
out
popa
xor
push
mov
mov
sub
mov
adc
push
xor
das
leave
bound
ret
ljmp
test
xor
outsb
dec
add
mov
test
cmpsb
clc
and
or
out
xchg
aas
mov
sub
ret
push
aas
push
dec
inc
sbb
lods
loopne
xchg
xor
out
push
lret
adc
dec
xor
xchg
cwtl
pop
sub
aam
pop
mov
mov
dec
cmp
andb
adc
jns
mov
sahf
fdivr
addr16
icebp
mov
setle
cwtl
inc
lds
rcr
lret
popa
inc
sti
and
jmp
in
insl
fisubs
push
dec
xlat
mov
jp
sub
cwtl
sub
dec
push
mov
xchg
sbb
xor
xchg
xchg
push
adc
pop
dec
xor
aas
and
mov
mov
mov
aam
enter
sbb
sbb
sbb
pop
lods
andb
fisttps
push
int3
stos
test
jno
push
and
mov
scas
mov
arpl
and
pop
mov
aaa
int3
cli
push
cmp
add
leave
dec
lods
scas
das
fistpll
or
xor
minps
jb
jno
dec
xor
loope,pn
jnp
out
jns
insl
push
int
mov
in
push
jbe
mov
mov
lret
lcall
test
inc
sub
mov
out
sbb
imul
push
or
inc
lcall
pop
arpl
imul
dec
out
push
inc
shr
push
push
lock
pop
out
pop
cli
outsl
mov
outsl
jmp
cmp
sbb
hlt
push
scas
inc
and
dec
fstl
push
out
lea
add
loop
negl
out
xchg
jg
cmpsl
jp
push
fsts
mov
aad
cltd
sahf
mov
mov
int
xchg
sti
and
roll
in
scas
scas
loop
lcall
or
outsl
push
jno
push
cmp
cmp
add
sub
fsubp
push
push
rol
aam
mov
gs
int3
sbb
enter
sub
ret
xchg
sub
lea
dec
aaa
andl
push
ret
mov
cmp
mov
cwtl
out
mov
add
fldenv
das
cmp
repnz
adc
inc
push
addr16
sub
mov
into
pop
xchg
lds
add
mov
jmp
icebp
add
aaa
dec
dec
sbb
pop
xchg
xchg
inc
test
jbe
clc
sbb
mov
mov
push
add
aam
call
jo
dec
test
mov
das
and
out
es
xor
fstpt
cmp
dec
mov
sub
cmp
lods
jbe
fists
dec
pop
into
xchg
jbe
dec
pop
sahf
cmpsb
cmp
xor
sub
fmuls
dec
jmp
adc
je
loop
mov
dec
fldenv
cmp
popa
adc
js
sub
cwtl
push
mov
inc
mov
adc
push
out
loopne
mov
lock
nop
cmc
mov
lcall
iret
jo
movsb
sti
or
push
sub
fsts
enter
repnz
mov
subl
ja
test
sbb
jge
push
xchg
dec
and
stc
xchg
push
std
jmp
add
add
pop
jmp
mov
mov
sub
js
ja
in
push
fsub
cwtl
dec
cmp
mov
cmp
xchg
xor
dec
cmc
or
lcall
mov
sti
test
movsl
or
mov
imul
mov
mov
jno
int3
int
push
mov
sbb
ret
aas
add
sahf
inc
sub
das
xchg
mov
inc
and
sub
in
leave
jno
inc
rorb
jl
mov
add
call
or
push
stos
test
fadds
loopne
add
mov
adc
jle
test
sub
aam
push
push
pop
add
je
out
out
ffree
inc
stos
and
xor
test
jno
pusha
fnstenv
lahf
cld
pop
cli
cmp
into
fldl
gs
or
les
repz
shr
loopne
add
jo
outsl
cs
daa
ja
dec
dec
or
mov
xchg
pop
imul
xchg
loopne
into
jle
rorl
out
scas
in
mov
popa
in
push
or
loopne
ret
dec
nop
repnz
push
ds
out
out
sub
mov
clc
cmp
or
xlat
cmp
mov
lods
pop
add
outsl
jmp
push
dec
imul
insl
cmp
repz
add
add
int
push
push
loopne
xchg
jle
pusha
push
add
xor
jl
mov
xchg
dec
sbb
jmp
jp
mov
mov
add
inc
enter
iret
jb
xlat
enter
lcall
mov
mov
xor
outsb
adc
xor
pop
jnp
imull
mov
mov
jnp
sub
cmp
inc
loope
notl
in
je
mov
pop
cltd
repnz
mov
inc
out
shrl
and
xchg
fistpll
jo
xorb
movsb
inc
push
addr16
je
lahf
cmpsb
add
jg
push
jb
pop
js
imul
out
jle
fs
mov
jo
jo
repnz
gs
xchg
mov
and
dec
fistl
jp
cmpb
sbb
xlat
and
pop
movsl
mov
xchg
inc
jae
shl
and
sbb
ss
cmp
push
dec
lea
cmp
rcl
loop
xor
dec
cld
out
out
dec
hlt
cmp
les
pusha
cmpsl
and
es
mov
jo
cmp
xor
add
cmpb
or
jl
push
bnd
mov
inc
fisubrs
clc
pop
pop
push
test
inc
adc
push
hlt
pop
cmpsb
sbb
out
lock
cmpsb
data16
js
cmc
cmpsl
and
lcall
mov
xchg
je
in
in
test
cli
out
dec
adc
int3
cli
andb
pop
popf
and
jg
pusha
and
and
lods
incb
sbb
dec
das
scas
mov
cmc
lods
call
pop
enter
dec
jge
or
push
loope
in
outsl
push
fsubrs
dec
aam
leave
pushf
enter
cmp
mull
ljmp
loope
movsb
in
adc
inc
iret
jmp
outsb
mov
fs
in
hlt
or
aas
inc
fisttpll
mov
mov
jecxz
xchg
mov
push
jmp
mov
cmp
cld
dec
push
xchg
shll
jb
mov
sahf
cli
and
fistps
lds
mov
ss
xchg
mov
dec
and
mov
mov
adc
test
aaa
insb
push
push
sahf
stc
cmp
jnp
ljmp
push
mov
std
mov
adc
mov
sub
mov
cmp
cmp
pop
mov
sub
add
insb
imul
lahf
mov
or
adc
aas
popf
fprem1
pusha
xorl
addl
js
imul
mov
xor
pop
xor
sub
test
sti
fimull
mov
lea
or
mov
pop
insl
stos
fldt
movsb
mov
call
adc
add
mov
inc
test
sub
push
cmp
into
mov
jbe
fiadds
out
std
sub
mov
xlat
push
mov
inc
cmp
adc
popf
pop
xchg
push
aaa
ret
std
ja
sub
or
neg
cmp
sub
cmc
mov
pop
sahf
dec
cmp
cld
fmulp
sub
add
test
imul
pop
push
into
sub
pop
xchg
xchg
cwtl
xor
je
jno
movsb
outsb
dec
int3
push
push
dec
enter
outsb
ud0
and
lret
jae
out
addb
cli
sub
cs
cltd
aaa
sbb
cli
rorl
mov
test
xchg
or
pop
fwait
pop
xchg
mov
jb
test
mov
mov
jp
cltd
mov
jle
gs
mov
xchg
icebp
mov
pop
das
das
std
out
adc
xchg
inc
cmpsb
mov
cmpsl
loop
add
and
rol
lcall
sub
in
jo
dec
sub
shrl
pop
jp
fcmovne
cmc
aaa
je
xor
test
imul
lds
mov
jno
or
lret
mov
mov
sbbl
call
inc
xor
mov
mov
loop
sbb
jb
push
sub
pusha
push
cld
push
addl
xchg
shlb
pop
cld
xlat
xor
and
mov
in
dec
mov
pop
in
lahf
sub
leave
sub
std
mov
push
push
xor
pop
out
mov
jmp
sbb
mov
pop
gs
jnp
mov
cmp
lea
inc
jp
ret
cmp
arpl
jnp
cmc
scas
sbb
movsl
jns
out
fsubrl
mov
test
jo
push
jge
cmpsl
inc
or
cmpsb
mov
in
adcb
mov
cmp
push
rolb
xchg
iret
ljmp
sub
cmp
test
sarl
xor
rcr
pushf
mov
dec
mov
inc
popl
arpl
push
cli
jnp
mov
out
jnp
pop
cmp
out
nop
shll
sahf
jb
nop
test
mov
les
cmp
or
aas
mov
movsb
jbe
dec
xchg
xor
andl
ss
mov
push
inc
sub
test
mov
and
sbb
int3
mov
mov
into
mov
mov
scas
inc
int3
jge
adc
in
xchg
sub
mov
jge
mov
and
inc
sbb
mov
pop
mov
fldenv
sti
cltd
or
stos
dec
xor
cmp
inc
ret
in
sbb
fimull
scas
mov
es
faddl
arpl
cmp
xchg
xchg
pop
pushf
or
adc
lods
mov
inc
ficoms
out
stos
sar
xchg
cwtl
jecxz
push
arpl
inc
test
icebp
and
add
cmpsl
les
mov
ret
lods
ror
in
fistl
add
mov
jmp
sub
ror
push
adc
fsubrl
imul
add
push
push
dec
mov
ret
mov
arpl
cmpsb
cmpl
xchg
movsl
cmp
call
nop
sub
mov
jecxz
lds
sub
and
pop
mov
loope
stos
ret
push
xchg
shlb
out
in
sahf
lds
pop
fwait
mov
ljmp
inc
ja
sarb
push
jb
mov
or
or
out
clc
jl
cltd
inc
andl
mov
out
xchg
push
out
call
mov
or
mov
mov
dec
aad
lods
movsb
bound
add
fstps
out
and
sbbb
aad
fdivrl
ret
or
cmpsb
imul
aaa
sub
cmp
mov
out
daa
lods
pop
push
xchg
in
and
cmp
imul
or
cltd
inc
daa
or
icebp
push
push
and
jmp
mov
and
jae
sub
nop
movsb
push
sbb
dec
add
mov
loope
inc
mov
pop
movsl
jge
fld
sub
dec
cs
xor
and
push
sbb
ja
clc
lea
jb
sbb
int
sbb
dec
adc
push
xor
xlat
pop
mov
pop
xchg
add
inc
leave
imul
pop
or
inc
mov
push
jne
lods
daa
add
jo
and
pop
mov
push
bound
mov
imull
lods
inc
divb
sti
in
loope
push
pop
jns
imul
repnz
adc
inc
mov
adc
sub
leave
jo
imul
add
pop
add
or
pop
out
popf
fmuls
sub
ret
faddl
push
jmp
dec
jp
xor
mov
sahf
cmp
test
mov
fnstsw
shlb
mov
mov
xchg
cltd
sahf
dec
push
xchg
idivb
fdivs
sub
xor
fisubrl
and
idiv
sbb
jb
aaa
cs
iret
negl
mov
adc
fwait
adc
js
jnp
jmp
imul
mov
cmp
jle
cmpsl
mov
mov
pusha
inc
outsl
scas
pop
pop
clc
cmp
bound
add
dec
and
push
sub
push
repz
jno
dec
and
aaa
add
and
dec
pop
enter
pop
push
or
test
sbb
push
loope
fxch
xor
mov
jge
dec
stos
dec
lcall
and
repnz
and
roll
jno
call
jo
nop
fsubl
pop
jae
cmp
movb
in
cld
mov
jecxz
cmp
fldcw
outsl
pop
xchg
test
in
pop
subb
fs
mov
notl
sbbb
adc
sub
jo
add
jge
dec
pushf
insl
pop
jle
gs
sub
cli
mov
out
test
jns
out
fbstp
sahf
mov
test
add
jb
mov
mov
adc
in
pop
cmp
and
xchg
mov
push
popf
add
mov
popa
pushf
fists
sti
xchg
setns
jb
sbb
add
shr
jge
xchg
sbb
fnsave
pop
cmp
dec
mov
dec
jo
xchg
popa
les
andb
push
mov
dec
push
mov
xchg
and
jecxz
sub
push
cmp
xchg
adc
outsl
sub
mov
push
pushf
dec
sub
fnsave
out
scas
mov
sub
lods
int
mov
adc
pop
jg
les
gs
imul
fcmovb
scas
int3
int
std
push
enter
sti
mov
clc
add
mov
nop
imul
mov
inc
inc
xchg
adc
adc
mov
adc
ret
ret
call
rorb
fs
stc
sbb
into
movsl
ds
add
add
ret
fwait
stos
lret
pop
mov
inc
push
loopne
into
mov
push
jnp
test
pusha
aad
push
fs
rclb
fdivr
out
insl
adc
or
fwait
xchg
cld
pop
inc
int3
pop
push
fistps
sub
out
inc
orb
ss
jns
lret
insl
shr
movsb
inc
test
mov
or
fdivrs
dec
dec
sub
mov
sbb
sbb
xor
mov
fwait
sbb
in
sarl
push
test
jl
fwait
lds
jl
push
testb
mov
cs
mov
xor
jle
or
push
push
lods
lret
fwait
xchg
lods
jecxz
fldcw
jae
in
pop
cwtl
mov
xchg
daa
xor
pop
mov
fnstcw
push
xor
mov
stos
lcall
fs
jmp
and
jbe
fisttpll
adc
dec
stos
call
out
popf
adc
ss
sub
sbb
loope
mov
movsl
cmp
adc
in
sbb
mov
xchg
andb
fsubrl
adc
lcall
ljmp
enter
xor
add
inc
cli
out
lret
lret
outsb
out
test
push
ror
mov
icebp
pusha
dec
cs
es
xchg
cmp
mov
push
jmp
mov
stc
sub
add
or
dec
add
cmpsb
std
pop
or
loope
outsl
cmp
push
shll
jmp
mov
scas
mov
int3
fildl
inc
cmp
loop
sub
fs
push
xchg
adc
adc
outsl
push
jo
test
pop
sahf
and
clc
jg
and
mov
addl
jge
or
outsl
jmp
test
xchg
stc
or
ljmp
adc
cmc
outsb
je
jp
push
push
repnz
scas
iret
scas
xor
add
jne
push
cmp
mov
clc
mov
inc
rolb
xchg
fadd
insl
stos
aad
xor
xchg
or
sub
dec
rorb
mov
pop
xchg
and
scas
inc
repz
mov
mov
clc
insl
mov
lret
dec
insl
push
ret
sub
mov
popf
mov
pop
sbb
pop
or
sub
mov
das
movsl
mov
out
xchg
in
pop
sbb
adc
pushf
lret
mov
fistpll
mov
movsl
adc
dec
int
popa
daa
or
out
pop
jecxz
imul
cmpsl
clc
sti
cltd
mov
aaa
xor
mov
add
sub
jp
fmul
fs
mov
jmp
std
outsb
mov
pop
add
rcll
sub
adc
jne
into
loope
push
lret
fmulp
jo
ret
xchg
test
scas
or
mov
bnd
lods
inc
mov
pop
into
ds
cwtl
cmc
insl
mov
fmul
mov
dec
sti
sbb
into
mov
push
test
pop
push
mov
inc
xchg
orl
jae
idivl
mov
imul
sbb
mov
imulb
pop
sbb
xor
sbb
std
lret
dec
pop
mov
scas
lcall
js
lds
sub
dec
pop
test
mov
push
rcrl
ljmp
xchg
fildl
shl
into
push
dec
icebp
iret
test
pop
xorl
cmpsl
repz
mov
sub
mov
mov
sti
and
pop
out
inc
lahf
es
xchg
gs
pop
jne
loop,pt
movsl
jg
mov
xchg
in
sahf
pop
mov
jno
push
cmp
xchg
cmc
adc
add
fistps
adcl
adcl
push
in
mov
ret
dec
fcmove
shll
fstpl
pushf
leave
jns
push
mov
or
xchg
and
rol
pop
movsb
insl
insb
jo
sub
ficompl
in
out
cmc
outsl
pop
lea
mov
in
orb
lret
push
mov
lock
inc
iret
test
xchg
pop
sub
stos
xor
cmc
addr16
mov
ffreep
mov
pop
and
cmpsl
mov
mov
mov
jge
adc
jge
jns
iret
pop
jle
stc
enter
mov
pop
dec
decl
xlat
inc
imul
xor
sub
mov
add
movsb
fistpl
sti
and
sbb
inc
jo
sub
arpl
fstpt
xchg
push
push
mov
jne
dec
flds
std
sbb
icebp
pop
loop
test
std
jo
xchg
xor
push
adc
addr16
cli
adc
push
or
cld
dec
dec
mov
mov
fbstp
jb
fildl
inc
xchg
test
pop
or
cs
push
cli
sahf
inc
xor
inc
pop
xor
jo
enter
mov
out
mov
xor
xor
mov
push
cli
out
adc
mov
imul
xchg
lret
adc
cmc
add
mov
pop
push
lea
lahf
std
fldt
inc
ffreep
push
sbb
or
mov
pop
fdiv
in
int3
mov
fidivrs
pop
xchg
and
dec
sahf
shlb
lods
les
sbb
jp
aas
rclb
cmp
aas
adc
adc
in
imul
call
aaa
icebp
pop
roll
popf
comiss
jge
cmpsl
cmpsl
xlat
js
pop
ss
add
push
stos
fs
int3
ret
movsl
adc
xor
or
cmc
mov
les
jl
mov
mov
jge
xchg
mov
or
xchg
cs
inc
cmp
xor
pop
xor
addr16
fst
or
out
dec
sbb
outsl
xchg
and
xchg
fstpl
xor
cmp
inc
dec
mulb
pusha
lahf
mov
sbb
fists
or
mov
cli
lods
pop
push
jmp
xchg
dec
movsl
dec
call
adc
jle
sub
scas
loopne
pop
in
shll
add
mov
sub
arpl
jmp
add
add
stos
push
shl
push
ffreep
fchs
arpl
xchg
mov
pop
cli
mov
ret
je
mov
xor
faddp
xchg
cmp
mov
cwtl
mov
pop
mov
mov
mov
fsubrs
in
push
pushf
push
jge
adc
xor
jl
cmp
jmp
fstps
push
ss
bound
pop
xchg
cmp
es
xchg
sarb
dec
mov
aas
icebp
jb
sti
mov
sbb
aam
adc
inc
dec
inc
je
in
xchg
test
mov
sub
xor
out
adc
fwait
mov
test
dec
lods
fstpt
pop
sub
sub
dec
stos
sbb
or
sbb
xorl
aas
pop
push
aas
mov
sub
stos
aad
in
insl
dec
cmp
mov
popa
stos
in
movsl
mov
cmp
das
mov
out
sarl
add
arpl
jnp
roll
add
mov
or
add
pop
mov
sar
xchg
sub
in
mov
test
lret
dec
leave
rcl
frstor
pop
stos
in
or
test
mov
pop
cmp
cwtl
call
into
std
jbe
xchg
push
leave
cs
jne
jmp
rcrb
sbb
mov
jle
scas
mov
mov
push
mov
lahf
arpl
jge
je
add
inc
subb
adc
mov
das
aaa
push
in
and
push
inc
or
jne
sub
leave
adc
jns
push
fxch
inc
lret
dec
jno
pop
das
mov
lret
inc
cmp
add
and
jb
jg
xlat
negb
dec
dec
mov
insl
ja
cmp
push
gs
push
sti
mov
sbb
lods
mov
imul
mov
cmp
orl
jno
xchg
adc
das
hlt
arpl
adc
pop
mov
jp
add
sbb
das
movsl
fldt
jmp
xorb
es
jnp
into
mov
loop
loopne
mov
xor
rcrl
subl
cmc
stos
jmp
icebp
enter
sti
add
dec
pop
adc
cs
insb
mov
sarl
adc
mov
imul
sub
add
jmp
out
mov
pop
pop
jp
lds
jo
xor
mov
std
and
sbb
stos
inc
xchg
addl
adc
dec
out
and
sbb
cli
ljmp
pop
inc
sub
orl
sbb
push
xchg
mov
aad
jmp
mov
hlt
popa
and
pop
outsl
inc
xcrypt-ctr
cmpsl
push
sub
pop
sbb
out
mov
jno
mov
xchg
mov
push
or
adc
or
aad
xchg
bound
loope
inc
in
lods
pop
push
inc
xchg
or
cmp
sbb
je
pushf
in
push
ja
pop
rcl
roll
sahf
push
xchg
sub
stc
push
mov
int
xchg
imul
xchg
sub
lods
scas
inc
data16
inc
xorl
adc
inc
lds
mov
fs
dec
insb
cwtl
cltd
outsl
push
mov
jne
clc
jmp
sub
mov
mov
int
adc
and
add
dec
dec
scas
pop
call
pushf
iret
js
jbe
mov
sub
jp
addr16
dec
cs
hlt
testl
cwtl
aas
xchg
mov
incb
xchg
or
lods
pop
shll
xchg
adc
jae
mov
cmpsl
roll
idivb
push
clc
insb
int
dec
xchg
shll
out
fdivrs
push
fidivs
push
pop
pop
xchg
loop
or
fimuls
jb
int3
lret
imul
add
repz
fwait
stc
jb
scas
les
cs
mov
cmp
scas
icebp
bound
es
jecxz,pt
mov
imul
out
cmp
jle
dec
pop
xlat
rcrl
enter
xchg
jge
or
insl
mov
inc
xchg
cltd
sbb
xchg
sub
or
cmp
in
inc
mov
andb
xor
mov
mulb
mov
imul
cltd
lods
sub
in
jge
in
jmp
add
adc
xchg
or
adc
js
add
xchg
sub
insl
and
xlat
mov
or
fs
lods
push
jp
or
ljmp
mov
or
rcr
cmp
lret
adc
fidivl
out
in
cmp
loopne
ds
std
addr16
xor
mov
xor
pop
int
pop
and
and
jns
add
and
xchg
inc
inc
xor
nop
in
es
inc
xchg
xchg
scas
fnstsw
mov
sbb
jle
adc
stos
lock
ficoml
es
fs
in
and
push
pop
push
inc
mov
xchg
pop
add
cli
xchg
dec
stc
and
pop
mov
vshufps
mov
add
dec
popfw
aad
dec
pop
pop
stos
add
adc
and
cmp
lods
xchg
add
call
fisubl
mov
pop
cmp
cld
pop
pop
mov
fs
xor
hlt
ja
mov
mov
lret
repz
xor
fnstenv
and
repnz
cmp
loop
push
jb
scas
mov
and
sub
mov
loop
mov
xadd
fld
daa
mov
or
and
ds
sbb
gs
adc
fst
adc
aaa
xor
mov
outsb
lcall
cmpsb
shl
lea
jo
mov
call
fs
pop
jb
out
dec
mov
sbb
dec
lret
sub
dec
outsl
shlb
jp
in
xchg
in
mov
add
adc
adc
add
pop
popf
es
sahf
pop
push
and
andl
cmp
mov
mov
pop
jo
jmp
test
sbbb
or
out
xor
dec
out
jg
inc
jge
push
pop
inc
lcall
cs
or
aad
mov
and
lds
cmpsb
push
mov
xchg
fwait
jae
mov
fldl
xchg
lea
shr
int
loop
popf
rcll
imul
mov
pop
mov
xchg
aad
push
xchg
outsb
insb
mov
add
iret
icebp
inc
pop
mov
daa
pop
mov
push
push
sub
test
cmp
clc
sub
mov
xor
add
aaa
sbbb
in
enter
shrl
lret
inc
sbb
orb
fs
dec
add
add
loopne
cltd
movsl
imul
stc
fcmovb
lret
mov
movsb
xchg
mov
xor
push
cli
cmpsb
dec
stos
mov
adc
repz
cmpsb
jp
loop
xor
outsl
xchg
cmpsb
xor
pop
cmp
add
mov
leave
lea
inc
jl
push
dec
push
daa
rolb
lods
movsl
fldenv
mov
mov
push
lcall
rclb
dec
pop
pusha
cwtl
adc
push
add
sub
xchg
jp
test
sbb
adc
in
ds
scas
mov
fldcw
sbbl
aaa
fadd
add
or
shll
sbb
lcall
cltd
sbb
jo
xor
mov
ja
rcl
xor
push
xchg
outsb
fisubs
mov
sahf
pop
and
repnz
in
es
and
ret
push
dec
movsb
push
adc
pop
cmpsb
push
mov
lret
and
fs
push
sub
sub
orb
iret
sbb
add
cmp
mov
mov
fwait
xchg
cmp
xlat
rcl
sbb
adc
pop
lcall
movsl
jns
cwtl
inc
std
adc
aam
add
fnstcw
js
cld
xor
jne
adcl
rcl
pop
repz
or
sbb
out
jne
bound
sbb
fs
jnp
push
sbb
rcrb
sbb
pop
pushf
cli
mov
or
jmp
shll
addl
movsb
inc
and
sub
les
mov
push
xchg
sub
lods
fsubrp
pop
sbb
fnstcw
pop
adc
cmp
mov
loope
imul
pusha
push
in
test
jns
fs
lret
sbb
mov
sbb
sahf
pop
pop
pusha
int3
icebp
sub
jo
pop
rcl
fistpl
mov
aad
mov
fwait
dec
cltd
mov
adc
inc
or
daa
xor
sbb
add
in
out
icebp
test
sbb
pop
cli
or
fwait
mov
arpl
aas
out
icebp
sub
popf
stos
clc
inc
mov
xor
dec
outsl
mov
cmp
fstpl
xchg
or
js
aas
rcrb
cli
insl
adc
adcl
mov
imul
arpl
push
or
jne
leave
hlt
repnz
fdivs
movsb
push
pop
dec
test
dec
shrl
xor
push
fs
mov
push
mov
xchg
out
fwait
add
cs
sbb
mov
repz
loop
insb
popf
lock
jle
jl
je
pusha
jns
lcall
lret
add
cld
mov
sbb
pop
stos
xor
xchg
and
cmpsl
pop
aas
jl
jmp
call
inc
out
sbb
and
cmpsb
popa
or
add
clc
sbb
jae
jg
jae
clc
mov
sub
xchg
adc
xor
push
push
mov
call
cli
gs
xor
das
das
inc
cmpsl
pop
addl
stos
cwtl
add
cmp
or
sahf
xchg
lcall
jl
dec
sbb
aaa
push
sub
das
push
bound
inc
cltd
sahf
xchg
xchg
or
push
xchg
orl
and
add
mov
clc
xor
js
cmpsb
inc
js
push
adc
call
pop
icebp
inc
add
fsub
scas
add
jb
cmpsb
inc
fwait
pop
fldt
sbb
sub
jo
insb
inc
push
idiv
movd
enter
and
imul
iret
jl
inc
es
pushf
adc
hlt
sbb
lds
push
lea
mov
fsubs
call
and
mov
xchg
les
mov
inc
add
mov
outsb
push
clc
arpl
push
icebp
insb
pop
loopne
xchg
pop
push
inc
fwait
js
xor
adc
pop
jo
clc
dec
fldt
leave
push
push
push
inc
mov
dec
sub
push
jne
adc
pusha
in
mov
and
jge
adc
push
xchg
and
rol
inc
jb
or
dec
cmp
and
pop
js
push
pop
imul
test
call
xlat
stos
sbb
mov
dec
fwait
pop
inc
pop
add
fbstp
cmpsb
xchg
xor
cwtl
in
push
sub
addr16
and
mov
fsubl
std
cli
jno
jbe
jle
mull
push
ss
xchg
and
xchg
mov
test
cmp
cmp
adc
jmp
push
cmp
push
adc
and
push
clc
xchg
add
call
cmp
add
cmp
inc
inc
cwtl
cs
add
popa
shrl
mov
xor
push
out
inc
mov
sti
inc
dec
mov
scas
mov
mov
push
sbb
mov
in
cmp
sbb
sub
xor
adc
mov
sub
mov
stos
pop
xchg
es
xor
out
xchg
cwtl
mov
notl
mov
dec
mov
mov
jl
outsl
js
sarl
pop
cmpsb
xchg
push
enter
je
jg
nop
fadds
outsl
movsl
and
mov
cmp
dec
call
or
mov
daa
jmp
sahf
jb
cld
cmp
mov
lret
andb
push
sub
outsl
out
mov
add
repnz
mov
out
js
call
rclb
add
rcll
add
leave
fmul
adc
xor
imul
test
sub
inc
test
adc
js
popf
xor
cmp
dec
popf
and
call
pop
adc
mov
mov
sahf
and
loope
daa
adc
push
int3
xchg
cmp
stos
pop
xchg
cld
jne
cvtdq2ps
mov
pop
pop
inc
adc
jp
xor
jmp
jne
imul
ret
fidivrl
pop
mov
cmp
xchg
iret
jb
inc
adcb
imull
rorb
jge
sahf
lock
call
mov
adc
out
mov
subl
jecxz
and
jl
stos
mov
lahf
iret
clc
rolb
dec
and
xchg
das
subl
or
xchg
aas
push
xor
mov
movsb
scas
and
dec
mov
inc
add
call
jns
jno
mov
jo
push
sbb
sbb
adc
loop
movsl
xor
sbb
xchg
insb
int
hlt
and
out
incb
mov
aam
and
outsb
xchg
and
cltd
out
dec
inc
out
mov
and
lock
mov
adc
cld
aam
iret
adc
lahf
mov
out
cmp
outsl
lcall
add
cli
xlat
mov
mov
jb
inc
sti
cmp
je
add
fisubl
clc
inc
mov
push
sbb
xchg
out
stos
jge
fildll
mov
cwtl
outsb
push
pop
inc
insl
out
xchg
add
int
cmp
icebp
xor
enter
adc
and
addr16
pushf
push
std
jge
popa
addr16
mov
xor
rcrb
fcmovnu
pop
test
sbb
insl
mov
mov
mov
test
and
loop
clc
into
jne
lret
in
rcll
inc
cmp
bound
repz
loopne
fsub
cs
lods
fldt
mov
sti
into
mov
clc
call
notb
data16
sbb
or
mov
cmovno
lret
inc
mov
insl
mov
icebp
jle
rolb
xchg
out
sub
dec
jl
aam
gs
push
xchg
cmpsl
cmpsl
hlt
loop
pushf
add
lods
mov
add
xor
mov
aaa
mov
daa
mov
inc
in
mov
lods
lahf
pop
call
sbb
xor
jne
rorb
sub
pusha
movsl
mov
and
add
in
xchg
mov
mov
divl
idivb
inc
xchg
mov
mov
cltd
xchg
test
sub
fcomp
inc
mulb
mov
pop
fiaddl
dec
dec
jne
sqrtps
dec
in
mov
mov
xchg
and
loop
jle
imul
lahf
sbbl
dec
xor
out
stos
xchg
test
sbb
call
iret
push
sbb
loopne
xchg
ret
cwtl
and
push
fsubrp
cld
ret
outsb
pop
leave
pushf
add
and
mov
push
out
jle
xor
or
push
jne
lcall
mov
sub
das
pusha
sub
cmc
push
inc
pop
pop
cmpsb
cltd
sbb
sub
adc
imul
stc
mov
and
push
pop
adc
sub
xchg
cmpsb
dec
push
xor
std
and
push
cli
inc
and
data16
incl
insl
mov
cs
push
jb
sub
cltd
ss
dec
filds
or
dec
arpl
mov
push
or
sbb
pop
dec
ja
xorl
fisubl
ficomps
loop
jb
adc
repnz
xor
jl
outsb
dec
xchg
fs
cmpsl
and
sbb
xor
mov
push
pop
or
push
shr
push
mov
adc
push
test
jle
rol
pop
adc
jo
insb
push
fiadds
vpaddsw
xchg
in
loopne
fincstp
shrl
out
or
fnstcw
cmp
cmp
test
in
xchg
lods
sub
jmp
sub
mov
inc
in
fwait
aad
push
inc
aad
or
mov
sbb
sub
inc
je
aaa
je
es
icebp
and
test
icebp
add
xchg
jns
lds
not
mov
mov
mov
add
inc
sub
movsb
jb
and
shr
lods
test
sbb
sahf
sbb
insb
lea
xchg
pop
bound
stos
shrb
in
push
lds
cli
lret
push
push
cs
pop
mov
jbe
push
cmp
mov
push
adc
fcmovu
imul
dec
movsb
inc
adcb
add
xchg
pop
dec
and
ret
xorb
mov
test
jb
cmp
sbb
in
out
leave
cmp
mov
dec
shll
jecxz
outsb
scas
aaa
shll
fsub
inc
inc
sbb
or
lahf
fiadds
insl
cmp
jg
xor
or
inc
testl
jg
push
push
int3
mov
test
mov
bound
adc
adc
jbe
ret
pusha
push
out
inc
add
jo
hlt
push
stos
or
adc
xchg
movb
jle
cwtl
clc
sub
mov
or
add
popf
popf
adc
jmp
push
xor
fadds
dec
inc
popf
add
lcall
into
jbe
or
insb
jl
or
mov
lahf
sbb
jmp
in
out
mov
mov
pop
xorb
jecxz
in
inc
movlhps
lds
pop
orl
sbb
adc
aad
and
rclb
fists
fwait
imul
mov
mov
flds
enter
inc
movsl
call
std
jp
out
adc
ret
lret
jmp
sahf
pop
mov
ror
gs
adc
mov
mov
add
mov
mov
jb
fwait
outsb
scas
ds
pop
push
and
imul
mov
js
push
ljmp
add
dec
sarb
inc
or
xor
mov
jle
test
dec
xchg
push
outsl
int
mov
or
sti
add
notb
jg
stos
arpl
jge
jp
mov
pop
imul
lahf
xchg
pushf
sti
mov
cmp
sbb
jg
cs
sbb
imul
mov
add
idiv
xor
test
int
add
xor
mov
into
pushf
rcr
stos
not
sub
or
int
daa
cli
test
push
loop
sbb
fcoms
sbb
jg
les
lret
sbbl
ljmp
mov
jecxz
sbb
jg
cld
insl
sti
sbb
ljmp
xchg
jle
push
push
sbb
mov
inc
pop
push
aas
mov
xor
sahf
dec
jg
and
test
pushf
jg
loop
bound
push
dec
lcall
mov
nop
jp
push
xchg
lret
xor
mov
subl
idivl
arpl
bound
dec
adc
ljmp
inc
mov
test
xorl
xchg
scas
scas
sub
mov
add
jmp
push
dec
jns
lcall
add
subb
push
push
fildll
mov
inc
out
lea
or
rcll
pop
popf
xchg
adc
inc
mov
push
and
mov
xchg
fdivs
mov
mov
ret
out
sbb
dec
jno
shl
adc
mov
popa
icebp
out
sbb
jo
mov
cltd
sub
sbb
stos
pop
mov
cmpb
sbbb
xor
sub
or
leave
jbe
push
jle
mov
cmp
leave
lret
xchg
mov
shl
inc
jbe
insb
xchg
xchg
fistps
test
outsb
outsb
pop
mov
and
xchg
sbb
aaa
sub
add
scas
out
push
dec
loop
inc
stos
push
xchg
inc
rcrb
aam
aam
outsl
and
mov
cmp
aad
xor
clc
lret
in
xlat
or
fildl
push
loopne,pn
jle
jb
addr16
and
mov
mov
sub
dec
or
jbe
sub
cmp
leave
arpl
repnz
push
dec
pop
mov
int3
cmpb
inc
lock
jb
push
cmp
lea
jns
bnd
and
sub
in
fmuls
loope
sbb
push
shll
mov
jmp
adc
and
mov
jno
rolb
jns
daa
dec
in
mov
or
loop
cli
sbb
pop
adc
mov
addr16
or
lods
xorb
xchg
or
mov
xchg
cs
mov
jmp
fcomip
cmp
sarl
mov
pusha
or
test
inc
and
out
xchg
sub
orl
cmp
push
ret
fldenv
jne
fadd
shrb
fiadds
fwait
adc
or
sub
fmuls
bound
pop
and
add
inc
pop
push
sbb
mov
mov
inc
mov
sub
jecxz
iretw
mov
cmpsl
sti
cs
and
jmp
adc
pop
cwtl
daa
fcoml
dec
sub
cmp
mov
loop
mov
cli
adc
and
sbb
leave
ret
sbb
pop
test
push
lret
cmp
dec
imull
mov
jle
loopne
or
xchg
mov
cwtl
rorb
jmp
orl
mov
insl
cmp
dec
scas
mov
mov
jge
sbb
lock
push
ljmp
enter
sbb
inc
fs
cmpsb
inc
mov
cmp
push
jo
stos
mulb
std
sbb
mov
ficoml
in
bound
push
or
bound
cmpl
sub
jb
adc
and
inc
int3
jle
fildl
fstpt
or
push
jle
or
inc
shll
or
mov
pop
pushf
movsl
fidivl
ret
outsb
movsl
je
pop
mov
push
and
mov
sahf
lahf
js
int
addr16
sbb
mov
fnstsw
fildl
mov
xchg
loope
int
inc
sbb
add
movsb
cltd
and
and
and
cmpsl
bound
pop
xchg
les
push
aas
lds
stc
fs
mull
pusha
push
mov
mov
mov
aaa
fs
inc
and
inc
push
push
aas
or
cltd
fucomp
cs
sbb
xchg
xchg
pop
mov
xchg
test
ja
les
add
aas
mov
clc
or
inc
jmp
sub
out
stc
fdivr
xchg
cli
cmp
adc
xchg
sarb
js
cmp
adc
sarb
test
inc
loope
xchg
leave
mov
sbb
stos
movsl
push
push
add
inc
rorl
or
outsb
mov
or
push
push
loopne
lock
scas
icebp
jmp
pop
addl
xor
xlat
nop
sbb
and
int
sub
into
inc
dec
inc
lcall
es
fldl
mov
cmp
dec
lods
fldl
inc
jle
ljmp
stos
cltd
xor
hlt
and
pop
pusha
mov
cmp
pop
jge
lods
cmpb
cltd
cld
das
data16
cs
dec
and
cltd
mov
insl
jmp
push
jge
mov
insb
add
mov
lret
cmp
sbb
insb
xchg
sub
sub
rcr
enter
mov
ret
xor
dec
adc
pop
xchg
jmp
fcoml
popa
fdivs
inc
pop
inc
or
push
jb
lods
lret
cmp
xor
std
rorb
jo
inc
idiv
cmp
into
push
sub
sti
push
mov
and
imul
xchg
js
icebp
sbb
mov
pop
ja
scas
cmp
or
leave
adc
or
pusha
lods
mov
inc
sub
fwait
push
fs
jle
fidivrl
xchg
adc
inc
leave
mov
adc
push
xchg
dec
and
push
mulb
ret
ret
cmp
call
ret
enter
or
shll
jo
add
scas
int
xlat
cmpsb
push
int
ds
test
add
leave
lahf
out
sub
test
popf
in
fstl
cwtl
lods
loop
sbb
push
in
insb
test
test
cmpsb
iret
ljmp
repnz
sub
jmp
test
neg
mov
arpl
pop
cmpsl
mov
jb
sub
js
ljmp
xor
hlt
test
mov
xchg
cmp
dec
fs
add
mov
aas
pop
cmpsl
int3
push
adc
xchg
xor
push
jl
aad
xchg
cmp
scas
data16
ss
sbb
ljmp
pusha
clc
fidivs
mov
cmp
fisubrl
adc
mov
mov
aad
cmpsb
pop
insb
imul
lret
sub
leave
movsb
xlat
outsl
jecxz
cli
dec
stos
pop
dec
out
stos
jbe
add
mov
add
lods
push
daa
cli
hlt
jmp
pop
add
push
aaa
mov
xor
sub
shlb
sbb
sahf
aam
sub
lahf
cmpsl
into
stc
adc
mov
push
nop
sub
pusha
insl
push
mov
jns
js
push
dec
sub
sub
ljmp
mull
inc
repnz
fisttps
stos
rolb
hlt
mov
ret
stc
mov
add
nop
dec
jle
mov
xchg
stos
loope
sub
shlb
enter
mov
aaa
mov
mov
lock
stc
arpl
fxch
inc
pop
push
insl
shll
hlt
cs
loop
adc
mov
stos
xchg
jne
mov
jne
jnp
cld
into
pop
jns
or
push
xor
push
es
lret
out
std
faddl
mov
push
fmulp
pop
mov
pusha
out
mov
dec
push
subl
mov
cmp
push
jmp
add
push
lahf
adc
xor
fdivs
adc
dec
pop
jae
sbbb
mov
js
loop
inc
icebp
les
ret
ds
ja
fwait
push
aam
cmp
test
sub
lahf
adc
jnp
add
mov
xor
subb
jnp
stos
pusha
in
fnstenv
sbb
mov
inc
mov
inc
bound
mov
pop
sub
jmp
push
divb
xor
lods
and
xchg
sti
adc
arpl
aam
xor
in
cmpsb
repz
mov
ret
inc
mov
adc
or
outsb
insl
sti
mov
cmpsl
test
nop
insl
int
negb
sbb
leave
and
push
push
popf
movsl
dec
cmp
int3
fmuls
mov
ljmp
cmc
push
dec
cmpsb
andl
fmul
movsb
adc
lods
jl
cmp
pop
ret
mov
jnp
mov
push
push
jmp
imul
mov
xchg
sahf
adc
loope
div
ljmp
mov
jns
and
rcrl
lods
loope
sub
add
adc
inc
das
sub
notb
std
fistl
je
es
aas
pop
mov
lret
lret
xchg
fnstcw
lds
xchg
push
into
call
pop
mov
outsl
sub
push
jmp
pusha
xchg
cli
int3
and
xchg
frstor
dec
in
sbb
inc
pop
sahf
mov
daa
dec
scas
in
in
test
push
cmp
addr16
or
outsl
pop
int
daa
bound
lea
or
adc
iret
or
icebp
psubb
mov
test
dec
or
fists
fs
mov
mov
in
adc
arpl
dec
xchg
mov
cmp
aad
test
xor
dec
test
sub
enter
gs
outsl
outsl
sub
cld
jg
push
jb
mov
inc
and
mov
push
loop
xor
repnz
dec
sarb
lods
jae
jns
clc
mov
repnz
in
mov
mov
daa
pop
sub
enter
out
xor
adc
in
cmpb
adc
push
mov
daa
adc
fcmovbe
aaa
and
in
mov
dec
sub
pop
sti
mov
xor
push
xchg
push
rorl
mov
jge
je
adc
sub
andl
mov
ret
xor
and
daa
add
xor
jbe
sbb
int
jo
cmp
xor
jg
mov
in
jecxz
or
jae
out
dec
inc
pop
adc
mov
popf
dec
outsb
mov
rcrb
dec
mov
test
ljmp
or
sbb
clc
pop
test
inc
add
pusha
or
dec
sbb
and
enter
cvtpi2ps
in
mov
lods
stos
pop
dec
dec
faddp
in
and
mov
sbb
pushf
mov
push
pushf
jnp
lret
loopne
stc
std
aas
fimuls
inc
mov
pop
mov
loopne
and
mov
pop
repnz
fistl
daa
cmpsb
imul
add
sub
mov
add
lret
add
push
into
or
xchg
mov
in
pop
push
ficoml
scas
sub
hlt
sbbw
jno
into
stc
filds
cmp
pop
outsl
jl
les
and
pop
mov
xchg
adc
mov
jmp
fimuls
mov
sub
nop
popa
les
mov
out
enter
and
or
sub
cmpsl
mov
dec
mov
cmpsb
test
and
xchg
or
jbe
sub
lods
mov
and
js
in
mov
mov
inc
leave
inc
xchg
fsubr
leave
sub
pop
dec
cmp
xchg
lock
dec
jl
repnz
out
idivb
jle
pop
hlt
sbb
loope
aas
call
pop
jl
cmpsl
mov
outsb
int
and
int
fcomp
bound
or
popa
into
push
daa
hlt
cmp
insl
push
inc
pop
cs
pop
out
cld
int3
mov
add
jge
xchg
pop
push
stos
fcompl
ljmp
lock
xchg
jmp
cmpsb
out
cmp
in
cwtl
jmp
xchg
add
int3
inc
jbe
lahf
jns
sti
inc
adc
mov
jl
loope
sbb
mov
pop
sub
sub
add
inc
add
pop
inc
adc
jl
adc
pop
add
add
in
pop
aas
call
lock
and
dec
mov
movb
ret
daa
repnz
bound
cmp
dec
inc
sbb
mov
cmp
sbb
loopne
icebp
out
imul
stc
incl
cltd
or
std
mov
mov
jb
adc
push
ss
mov
xchg
sbb
add
sub
cmp
repz
fwait
jae
call
cld
daa
push
xor
mov
jmp
in
adc
fiadds
mov
divb
mov
movlps
mov
push
cmpsb
fucomip
cmp
lahf
data16
lea
mov
push
xor
inc
call
or
mov
mov
and
ja
mov
push
lds
mov
pop
cmp
sub
jns
lods
pop
cltd
xor
fxtract
mov
arpl
sahf
lock
sub
daa
incb
mov
call
jp
pop
xor
cmp
notl
jl
push
sbb
mov
push
icebp
in
xchg
sub
ret
add
mov
pop
lret
mov
imul
scas
sbb
insb
and
mul
stos
frstor
imul
xchg
pusha
dec
je
jmp
xchg
xchg
test
or
pop
inc
ret
dec
dec
mov
loop
mov
loop
imul
les
add
call
repnz
aam
xchg
addr16
cmp
ss
std
imul
and
in
pop
loop
pushl
faddp
std
pop
mov
push
xchg
cmpsl
int
xchg
mov
sub
add
int
push
xchg
sbb
shll
es
mov
inc
cmp
sbb
sub
mov
mov
shl
dec
arpl
movsl
out
hlt
sub
mov
fisubrl
push
in
or
xchg
pop
cmp
push
xor
mov
hlt
popl
dec
jne
mov
mov
clc
add
outsl
push
addr16
js
cmp
scas
insl
dec
jl
fnstsw
dec
jo
sbb
sub
add
fsts
mov
fcompl
inc
xor
rolb
sub
cld
rolb
sti
cli
and
stos
adc
in
lock
daa
repnz
and
push
mov
cmp
ds
lock
inc
push
out
pusha
lcall
pop
cmp
imull
pop
pop
les
ljmp
lods
stc
ficompl
xchg
fiaddl
xor
mov
ja
call
cwtl
movsl
mov
nop
mov
sti
popl
xor
ret
inc
mov
jg
dec
movl
push
jmp
insb
cmp
pop
push
pushf
or
fldenv
enter
outsl
push
fwait
mov
adc
sbb
shrl
inc
stos
xorl
sub
in
lahf
scas
popf
fcmovu
insl
in
sbb
add
xchg
leave
inc
push
mov
ret
push
xchg
inc
fsub
addb
add
and
mov
lcall
fmull
lret
fwait
xor
push
mov
cmp
mov
pushf
insl
sbb
aas
cmpsb
sub
je
inc
xchg
mov
mov
xorb
sub
sbb
lock
add
stos
nop
das
or
test
test
ret
pop
mov
ds
jae
subb
fdivr
mov
test
test
rorl
sub
mov
cmp
or
push
mov
dec
pop
cmp
mov
sub
popa
fidivs
xchg
dec
push
mov
and
jno
mov
aas
xor
mov
std
int
xchg
xor
inc
and
inc
jb
outsl
mov
push
adc
adc
sahf
add
outsl
pop
dec
push
rol
fstps
add
mov
in
fwait
mov
test
inc
stos
in
xor
lahf
addr16
xchg
or
inc
jnp
dec
aad
cli
xchg
fcoms
dec
sarl
xor
out
movsb
jno
jno
lahf
rcrl
cmp
mov
iret
in
and
sahf
cmpsl
out
jbe
push
mov
pop
xchg
mov
gs
push
push
test
sub
gs
pop
je
in
jnp
out
in
cmpsb
imul
pusha
out
cld
xchg
xor
outsb
jb
add
imul
clc
xchg
pop
xor
mov
cmp
inc
inc
sahf
das
andb
mov
insb
mov
pop
cmpsl
and
fwait
jmp
clc
dec
repz
pusha
inc
daa
in
aas
div
push
fsubp
gs
mov
sub
mov
lahf
and
ja
lods
pop
mov
cmc
jnp
loope
pop
xchg
roll
or
mov
add
xor
pop
pop
ficompl
lret
pop
push
je
outsb
out
xchg
jne
push
push
xchg
mov
daa
push
jo
xchg
sbb
mov
cmp
fstps
dec
adc
rcrl
sti
outsl
pop
fadds
push
iret
mov
mov
cmp
inc
jge
aam
mov
lahf
and
push
jo
fs
movsb
bound
mov
and
shl
test
mov
lea
mov
add
xchg
cwtl
out
mov
inc
shrb
mov
subl
sbb
jg
insb
out
mov
jae
dec
pop
push
les
xor
sahf
ss
nop
adcb
in
movzwl
das
shlb
or
dec
mov
cmp
sub
pusha
and
std
inc
inc
subl
add
loope
iret
xor
fadd
adc
pop
push
iret
test
cmp
cli
lret
jmp
jns
add
push
cli
inc
push
mov
mov
xchg
add
cmpsl
daa
in
xor
xchg
mov
arpl
or
aad
adc
pop
into
cltd
inc
aas
xor
inc
outsl
outsl
in
and
and
or
mov
push
jo
fmul
mov
decb
outsb
mov
mov
pop
adc
mov
xor
push
das
adc
cmc
imul
or
cwtl
loope
iret
pop
inc
jp
xor
mov
scas
jmp
aas
roll
daa
pusha
cs
test
fisubl
loop
cmc
cmpsb
scas
sbb
cmc
jae
push
xchg
mov
ss
loopne
dec
cmp
and
addr16
aam
test
inc
subl
cli
fsubrl
jo
push
sub
xlat
enter
push
sbb
mov
add
stos
push
add
mov
mov
sub
lods
mov
sar
dec
daa
jnp
xchg
dec
insb
call
sbb
popl
mov
fisubs
pop
mov
aas
xchg
dec
add
insb
mov
add
sahf
les
mov
aam
in
rcl
dec
cli
pop
inc
ljmp
jg
sbb
inc
popf
and
test
jle
xor
in
mov
das
js
int
add
lea
pusha
add
jecxz
adc
bound
shll
leave
pop
rcrl
jo
add
popa
pop
pop
mov
test
in
mov
cmp
call
in
inc
push
mov
js
leave
jb
loopne
stos
fwait
dec
in
mov
jmp
or
in
aam
cmp
dec
pop
aaa
push
fldt
or
dec
leave
mov
cmp
and
sbb
shrl
imul
cmp
sbb
mul
add
test
jp
cltd
xor
lods
or
mov
dec
push
mov
adc
jge
popa
sarl
js
nop
pop
xor
ljmp
cld
sub
add
idivl
loopne
cmp
xchg
dec
dec
sahf
add
fidivrs
out
in
mov
jo
imul
loop
arpl
pop
outsl
js
test
jle
testb
leave
add
fdivrl
inc
lods
mov
or
iret
jne
outsb
fsubr
js
lea
adc
inc
lret
and
insl
and
data16
daa
and
add
jp
pop
xchg
adc
add
pushf
test
lods
dec
dec
mov
loopne
cmpl
cmc
lcall
jp
dec
insb
xor
cmpsb
xchg
sbb
or
insl
iret
test
aas
andb
adc
mov
adc
cmovb
cmp
jae
mov
add
or
ret
xlat
call
push
int3
push
fmul
outsl
cwtl
xchg
outsl
mov
iret
mov
jno
dec
dec
adc
insl
repnz
mov
shrl
jno
cmpsl
popf
mov
add
push
sbb
xor
repnz
adc
gs
fs
inc
lds
fwait
push
outsb
jnp
aad
in
dec
loope
hlt
dec
pusha
cmpsb
inc
jnp
push
adc
inc
addl
mov
movsl
sub
xor
lahf
mov
test
cmp
fcmovnu
jbe
es
push
fdivrl
xor
jae
push
ret
adc
ss
sahf
sub
mov
adc
dec
ss
mov
xchg
stos
ja
mov
lods
adc
fst
cmp
pop
jae
cli
ss
pop
cmp
push
xchg
fbstp
sbb
lret
daa
out
mov
popa
adc
icebp
jge
shlb
or
insb
dec
icebp
sub
std
sub
decb
out
stos
daa
icebp
mov
pop
in
xchg
movsb
in
les
in
les
jp
push
mov
xchg
test
or
loope,pn
stos
adc
sbb
dec
lahf
fwait
pop
int
and
leave
es
mov
add
dec
cmc
jl
test
jo
idivl
xchg
cmp
jge
and
xchg
out
xor
call
repz
test
pop
clc
int3
xchg
pusha
pop
aam
in
lea
nop
push
mov
pop
push
shl
lea
mov
push
push
scas
push
lds
daa
mov
jae
push
jecxz
out
add
sub
xlat
jbe
xchg
inc
movsl
mov
sbb
scas
pop
sub
mov
call
pop
push
cli
inc
lcall
roll
out
out
addr16
mov
je
push
push
mov
xor
dec
add
pop
aam
cmp
jmp
lret
or
push
jg
movsl
mov
movzwl
mov
lret
cmp
jmp
and
shrl
fnstenv
out
jno
xchg
sub
dec
inc
mov
stos
daa
mov
mov
in
lret
mov
into
ror
xor
popa
mov
cmp
jle
xchg
mov
xchg
scas
mov
push
xor
add
or
push
jp
popf
lds
push
js
loope
ljmp
inc
cli
jle
leave
repz
mov
cwtl
notb
mov
arpl
push
data16
pop
mov
cmp
mov
loopne
movsl
mov
dec
pop
adc
into
mov
js
stos
mov
adc
pop
ror
arpl
lods
push
hlt
mov
or
out
jno
loop
mov
mov
xchg
xchg
movsb
loopne
jns
lock
sbb
sub
or
pop
rcr
rcrl
movsb
rcrl
mov
dec
lock
mov
jbe
mov
and
xchg
adc
leave
les
scas
std
xchg
mov
int3
cmp
fdivrl
jmp
cwtl
lret
xor
lods
ret
mov
push
lds
fdivrs
lret
stos
lods
jl
mov
and
into
repnz
inc
out
aam
lret
mov
sbb
push
insl
out
xor
jo
sub
and
mov
mov
pop
or
jg
test
subl
jns
pop
aas
sbb
dec
pop
xchg
call
xchg
stos
push
js
push
loopne
mov
scas
pop
dec
daa
sahf
pop
or
sbb
es
int
js
outsb
data16
jle
in
mov
lock
stos
pop
add
cs
lds
js
and
leave
hlt
pop
mov
inc
lds
inc
test
movsb
outsl
cmp
add
xorb
pop
addb
mov
inc
mov
push
xchg
jge
int3
ja,pt
inc
pushf
sti
in
in
jp
rcr
fwait
sahf
js
dec
fcompl
xchg
jbe
pop
push
pop
pushf
add
shrl
jecxz
xchg
add
mov
xor
push
or
mov
sarl
add
insb
mov
cmp
icebp
outsb
fisttpll
mov
cmpsl
hlt
sub
mov
test
xor
fwait
add
loopne
dec
cltd
loopne
ljmp
sbb
pop
cmpl
ds
dec
in
xchg
sarb
dec
cmp
ljmp
mov
insb
jg
pop
js,pt
sti
sbb
mov
test
pusha
cmc
jnp
adc
xchg
jo
mul
scas
pop
inc
push
xchg
fldcw
out
push
mov
imul
ss
in
stc
fwait
das
push
push
fdivs
test
xchg
jb
add
lahf
cmp
icebp
int
inc
mov
or
testb
lahf
jne
shrl
mov
push
stos
pop
cli
sbb
xor
or
sbb
jno
xor
call
in
inc
sub
fcmovne
call
sbb
push
inc
lods
pop
xor
movl
dec
xchg
mov
sarb
jle
cmp
xchg
pop
outsb
or
loope
or
int
mov
mov
sbb
lds
mov
rorb
pop
andl
mov
mov
leave
xor
cmp
pop
adc
push
fisttpl
pushf
scas
inc
dec
and
insb
insb
xor
mov
repz
lds
imul
jmp
mov
shlb
inc
mov
mov
lcall
inc
mov
dec
lods
pop
imul
aad
daa
add
add
out
repnz
and
push
xchg
pop
movsb
stc
adc
mov
mov
loope
pop
push
jne
fiadds
iret
mov
xchg
scas
ds
jns
in
ret
call
stc
lret
mov
fdivl
push
adc
sbb
jo
aad
cmpsl
lock
dec
xchg
mov
cmp
cmpsb
xchg
outsb
ja
out
stos
repnz
rol
sahf
sarl
test
test
cs
test
shlb
pusha
cmp
loope
loope
xchg
shlb
lahf
xorl
out
mov
sahf
xchg
add
sbb
mov
movsb
stos
jge
sub
int
pop
fs
jg
movsl
mov
scas
mov
insb
bound
mov
fsts
lock
jl
hlt
add
rclb
mov
mov
xchg
sbb
je
jbe
dec
out
out
cli
test
mov
out
jge
adc
cli
mov
enter
mov
popa
fnstcw
test
shl
or
xchg
fxch
xchg
mov
push
xor
fdivs
jbe
mov
iret
jmp
sub
cwtl
test
push
pop
push
mov
les
sub
xchg
xchg
or
lods
mov
pop
add
int
bound
sub
std
scas
popw
fldl
enter
add
std
and
cmp
out
jno
loopne
jg
fidivs
mov
clc
xchg
scas
jle
in
cmpsl
test
je
adc
lods
or
sbb
mov
pop
cmp
mov
loopne
jne
sahf
sarl
addb
xor
mov
rcll
icebp
xor
sahf
pop
jne
xchg
repnz
mov
mov
inc
xlat
orb
mov
and
and
ljmp
insl
push
sahf
or
cli
std
lret
sti
or
cwtl
cmc
jb
mov
jp
push
xchg
fiadds
mov
movsb
xor
xor
addl
icebp
out
cmp
icebp
push
add
push
sub
push
dec
testl
pop
cmp
cli
hlt
mov
roll
jno
call
cmp
loop
mov
jo
mov
addr16
data16
xlat
pop
dec
stc
hlt
imul
sub
lcall
add
sti
cmpsl
jge
mov
jnp
and
adc
fiadds
idiv
loopne
movsl
adc
imul
xlat
jns
cs
jp
add
stc
or
rcrb
in
repnz
popa
icebp
cwtl
xchg
pop
loopne
ret
fstps
pop
add
loop
jmp
jp
mov
aam
inc
hlt
in
push
and
push
fiaddl
bnd
mov
fistps
daa
lcall
shlb
or
scas
and
mov
das
outsl
repnz
xchg
mov
leave
cltd
push
fstpt
xchg
xor
xchg
dec
shrl
std
insb
mov
xchg
and
jne
sub
xor
call
inc
repnz
mov
imul
mov
in
outsb
hlt
cltd
sarb
mov
sarb
fs
push
call
aas
mov
hlt
cmp
mov
cld
fstp
aam
cltd
sub
int3
test
mov
add
jmp
and
mov
mov
pop
and
adc
xchg
clc
jbe
jbe
movsl
pushf
mov
push
les
and
pop
das
pop
shrl
ds
in
arpl
hlt
push
push
bound
cmpsl
lock
rorl
cmp
lcall
mov
ja
push
rcl
popa
or
in
xor
push
adc
frstor
test
rol
xor
pop
lahf
sbb
icebp
stos
bound
out
sbb
jg
push
out
mov
xor
ret
jl
aad
shl
mov
sub
aad
jne
push
cld
clc
mov
ljmp
adc
loope
mov
lds
ficoml
dec
fwait
rcl
syscall
dec
or
mov
push
jo
mov
test
jne
jecxz
mov
or
ret
xor
or
fs
scas
cmp
jmp
iret
jnp
sbbb
lods
mov
bound
aad
fidivs
lret
xor
in
mov
or
fists
cmp
loop
pop
cwtl
pusha
mov
pop
mov
jno
incb
cs
mov
xlat
fistps
mov
in
insb
imul
mov
lret
xor
adc
mov
stos
mov
fidivl
adc
cmpsl
cli
or
pop
push
mov
test
aas
jle
jl
outsb
add
cmpsl
sub
inc
outsb
inc
mov
adc
jl
inc
adc
mov
mov
mov
addb
sub
movsb
push
out
aas
add
mov
repnz
jmp
repz
lods
push
mov
mov
inc
rcr
mov
testb
cld
adc
mov
ljmp
add
push
jge
pop
dec
cmpsb
outsl
pop
test
daa
add
ret
lock
cltd
add
cmp
mov
out
sub
leave
xor
ret
hlt
sbb
sub
mov
jb
test
jp
call
dec
int3
mov
inc
and
mov
dec
ret
jb
mov
std
daa
xchg
in
adc
xor
sbb
inc
xchg
sub
cmp
mov
mov
push
cmp
in
mov
pop
iret
dec
pop
aad
adc
ret
mov
xor
cltd
int
jbe
test
shl
insl
dec
cli
or
xlat
lock
enter
aam
int
subb
or
cmp
out
ficomps
push
mov
fldt
cli
fbstp
in
lahf
int
dec
dec
pop
sbb
out
jge
js
aad
pop
inc
es
pop
es
xchg
hlt
scas
cmp
jge
aas
sub
or
idiv
jns
lea
inc
mov
dec
jbe
mov
xchg
push
mov
pop
xor
dec
les
repz
mov
jns
pop
flds
fidivs
or
int3
or
jl
sub
push
ja
xchg
push
into
adc
and
aam
ja
add
pop
test
push
add
in
push
cmp
sahf
push
adc
mov
lret
pop
inc
cmp
iret
aam
and
popa
and
call
shlb
mov
xchg
into
cmp
adc
sub
jge
out
rcrb
mov
shll
int
insl
xchg
loop
jg
clc
xchg
jmp
lods
popf
sub
dec
jge
xor
ret
test
push
dec
inc
adc
mov
pushl
popf
mov
xor
dec
pushf
mov
or
movsb
adc
jge
pop
call
std
bound
fimull
push
push
pop
cmp
mov
loope
lock
into
fnstsw
and
daa
sbb
push
outsb
lahf
mov
cmp
es
and
ljmp
enter
ficomps
imull
fst
sbb
xchg
lahf
jp
js
xchg
cmp
sbb
or
xchg
inc
push
outsl
cmp
adc
cmp
test
jb
imul
ds
and
push
shll
xor
mov
xor
xor
push
mov
mov
push
inc
mov
stos
cmp
mov
gs
pushf
add
aad
cmpsb
stos
test
or
fdivrs
loope
inc
je
jb
aam
sbb
sub
lods
add
xchg
inc
adc
subb
adc
addr16
nop
sub
mov
bound
lds
les
or
out
sbb
and
push
xlat
popa
in
bound
sub
arpl
loop
pop
ficompl
push
jmp
add
add
mov
cmc
sbb
xlat
gs
xchg
pop
and
dec
imul
aam
je
test
mov
xchg
int
ror
mov
xchg
stos
out
aad
test
fsubs
xchg
fistpl
lock
mov
mov
fnstenv
xor
inc
inc
mov
in
mov
jl
cmpsl
push
cli
jle
cwtl
stos
jmp
pop
push
sbb
lock
iret
fdivrl
and
push
sub
call
stos
test
dec
js
idivb
jo
cmpsb
push
or
sbb
loop
movsb
jmp
into
test
js
aad
and
mov
pop
rcl
sub
xchg
leave
cmp
bound
ud0
sub
or
or
sub
ret
mov
shrb
daa
mov
adc
jmp
xchg
dec
rcrb
stos
loop
fimuls
mov
add
pop
lods
ds
xor
add
enter
dec
xchg
jmp
mov
stc
inc
xor
fcmovne
jbe
fwait
icebp
xchg
or
jle
js
std
dec
fnstsw
cmp
mov
adc
cmp
subl
pop
nop
dec
xchg
or
mov
mov
lcall
mov
divb
sub
dec
ficoms
movsb
push
popa
xchg
push
or
adc
cmp
stc
sbb
jg
pop
outsl
out
sbb
inc
gs
lret
pop
negl
outsb
stc
js
test
cmp
dec
das
push
mov
popa
push
xlat
sbb
repnz
sub
add
sub
push
out
out
rol
push
xchg
add
inc
xchg
mov
nop
adc
cmp
jge
mov
adc
icebp
adc
faddp
xor
mov
icebp
cmp
push
pop
xchg
xchg
lds
sbb
push
les
jb
adc
xor
sarb
mov
adc
daa
mov
adc
cmp
daa
mov
mov
lcall
lcall
insb
dec
cmc
loope
pop
mov
stos
loop
sti
into
jbe
push
mov
imul
stc
pop
shrb
fs
adc
loop
sub
pop
mov
xor
push
rcl
or
dec
test
dec
xchg
xor
aad
adc
movsb
xor
je
scas
jns
sub
mov
inc
sbb
mov
ljmp
add
add
pop
xchg
aas
cld
or
rolb
pop
sbb
or
mov
jge
mov
fcmovne
gs
das
test
lcall
xchg
sub
push
jb
cmp
or
pop
pop
mov
cmpb
sti
push
cmp
dec
xor
adcb
in
andl
pop
jmp
sbb
dec
push
and
movsb
sbb
in
shlb
mov
cmp
push
mov
push
cmp
xchg
aas
test
test
jmp
sbb
aaa
insb
dec
push
divl
jne
sti
lahf
jg
lock
adc
mov
sbb
sub
add
xor
cmp
les
lahf
fwait
push
adc
add
cwtl
and
movsl
insb
fs
data16
and
mov
repz
in
aad
push
dec
mov
mov
icebp
adc
dec
outsl
stc
push
dec
mov
push
push
movsl
arpl
loopne
lahf
das
insb
ret
int3
adc
push
jb
sbb
bnd
mov
pop
xchg
push
inc
dec
shrl
test
lock
movsb
xchg
insb
cmp
out
mov
iret
cmpsb
pop
notl
sbb
and
aas
xchg
inc
pop
out
icebp
push
jb
inc
insl
negl
in
jg
dec
add
sbb
mov
fldcw
iret
enter
dec
jae
mov
adc
inc
or
cltd
and
add
mov
adc
inc
cmp
adc
out
mov
pop
sbb
cmp
jae
dec
add
daa
xor
inc
into
push
mov
jg
and
dec
jns
jae
or
jmp
rcrb
into
cwtd
jne
mov
shrl
push
adc
das
cmp
repz
pop
imul
orb
adcl
cwtl
loopne
adc
inc
cwtl
aas
leave
xchg
outsl
insl
fildll
fsubrs
and
push
push
xor
clc
pusha
or
push
pop
cmpb
xor
jb
pusha
call
jmp
loop
ss
mov
outsb
mov
mov
loopne
add
pop
xchg
mov
test
test
sbb
adc
rcrb
out
cmpsl
cmc
pop
jmp
sbb
mov
mov
cmp
in
jl
vmaxsd
jae
popa
arpl
lahf
out
dec
mov
inc
pop
aam
fstpl
movsb
data16
insl
in
mov
in
stc
fs
xor
push
and
jns
push
dec
sti
jmp
push
jl
gs
adc
and
rolb
popa
pop
sub
mov
int
test
jmp
cmp
push
mov
dec
add
out
pop
mov
push
fmull
pop
jne
add
fbld
popa
mov
scas
lds
in
arpl
or
in
imul
jns
mov
adc
in
add
push
xchg
cltd
sbb
jae
pop
pop
xchg
xchg
xor
fmul
cltd
repz
pop
out
int3
loopne
nop
xchg
sub
jg
repnz
xchg
hlt
enter
pop
pop
pusha
leave
mov
stos
inc
imul
mov
jb
pop
mov
shll
sub
adc
shlb
pop
cmp
aaa
bound
xchg
aam
lods
int3
mov
lcall
gs
dec
out
sahf
mov
xchg
lds
fildl
lods
ja
dec
int
mov
or
adcb
imul
push
add
enter
imul
data16
enter
xor
imul
and
inc
add
mov
dec
and
mov
dec
pop
stc
mov
mov
cs
push
xorl
scas
xchg
sbb
lcall
imul
xchg
push
dec
cmp
cmc
movsb
in
shr
out
aaa
cmp
shlb
inc
push
insl
adcb
mov
jbe
fisttps
cli
js
adc
sub
out
dec
addr16
aad
mov
pushf
inc
jg
inc
xlat
mov
push
and
push
xor
mov
mov
addb
sbb
jbe
mov
fdivr
mov
shr
pop
sbb
lods
shll
cltd
inc
xchg
cltd
mov
xor
test
xor
xchg
int3
data16
cmpsb
ds
test
arpl
or
jbe
subl
fdivp
fwait
add
and
pushf
fsub
outsl
shll
addb
ret
std
cmp
shll
dec
pushf
sahf
in
cmp
dec
loop
inc
xchg
decb
lcall
inc
mov
adc
mov
sub
repz
mov
or
and
js
push
xor
inc
jns
mov
mov
dec
inc
pop
mov
fiaddl
rcr
cs
clc
mov
cmp
mov
out
and
movsl
xor
xchg
lods
sbb
mov
in
incl
lret
push
rcrb
mov
pop
inc
aam
addb
roll
popf
in
arpl
insb
pop
pop
add
sahf
ljmp
shlb
xor
popf
sarb
jae
add
jo
gs
cli
shrb
inc
sub
inc
loop
adc
dec
mov
lods
inc
xchg
and
jne,pt
dec
dec
cmp
cmp
and
out
inc
inc
jns
cld
sbb
add
or
xchg
out
ret
push
xchg
xchg
push
xchg
mov
out
jo
jp
inc
es
pop
mov
lea
add
xchg
cwtl
fidivl
cmpb
and
pop
dec
orb
mov
jmp
mov
push
push
sub
cmp
mov
xchg
jp
test
sub
inc
movb
and
or
dec
mov
outsl
pushl
sbb
or
and
daa
jo
in
sub
sbb
push
mov
outsb
fwait
sbb
inc
movsb
mov
imul
ja
inc
mov
loop
mov
shl
xchg
icebp
push
out
xchg
jno
aaa
adc
mov
and
loopne
jge
mov
fidivs
mov
movsb
xor
lea
popa
jns
mov
in
rorl
outsl
xor
data16
nop
pop
sbb
add
addb
mov
inc
sbb
sar
lock
add
mov
sub
xor
popa
jmp
lret
test
and
in
mov
test
addr16
mov
push
pop
add
fcomip
outsl
mov
mov
fstl
loope
add
ljmp
fsubr
icebp
or
push
inc
mov
in
jmp
maskmovq
notl
push
xlat
push
jmp
jne
test
or
pop
push
mov
or
aam
or
in
mov
lods
leave
mov
jb
subb
pusha
add
mov
sbb
pop
dec
jo
mov
add
inc
mov
sub
push
sbb
lret
xorb
inc
movsb
add
movsb
dec
pop
dec
call
insb
and
arpl
out
push
rorb
data16
xchg
mov
mov
ja
fnsave
pop
scas
test
sub
inc
cmp
mov
rorb
dec
cld
and
test
mov
mov
lds
dec
dec
lea
mov
xchg
jle
push
xchg
cmp
mov
mov
enter
outsl
jmp
mov
pop
mov
mov
je
js
xor
mov
dec
ja
mov
xchg
test
mov
bound
cld
push
jb
loop
shl
dec
test
push
je
mov
cmpsb
sub
loop
in
out
xchg
dec
pop
mov
adc
lret
sub
sub
mov
or
cltd
out
sbb
shlb
pop
sub
cmp
nop
ds
test
lret
push
das
jmp
pop
xchg
mov
cmpsb
enter
outsb
fbstp
pop
sbb
hlt
loope
stc
sub
data16
movsb
mov
cmp
mov
and
dec
cmp
pop
add
push
repz
sarb
cmp
and
test
xor
int
sbb
push
mov
inc
push
mov
sub
lret
xchg
fldl
mov
dec
mov
jecxz
or
test
sbb
mov
push
in
adc
and
insl
out
int
lahf
cmpsl
and
mov
jge
ljmp
dec
dec
test
mov
mov
mov
in
pop
cmpsl
fs
psubsb
ret
je
sbb
push
push
add
das
fldcw
aam
dec
data16
xchg
pushf
inc
sbb
pushf
stos
and
ret
insb
test
cmp
in
or
xchg
imul
sbb
popa
push
inc
loope
lods
cmp
adc
sub
jecxz
mov
insb
insl
mov
loope
into
mov
and
sbb
jecxz
cmp
scas
xor
stos
cmp
sub
pusha
sbb
pushf
mov
aad
xor
pop
rcr
mov
sbb
inc
ljmp
stc
sbb
mov
dec
add
aaa
or
push
dec
vpaddusb
cmp
push
cmp
add
test
xor
repnz
sub
lcall
mov
xlat
cmpsl
testb
cmp
xchg
rol
dec
push
jmp
and
sbb
add
addl
sbb
into
aad
dec
jnp
and
into
icebp
add
int3
test
xchg
xchg
andl
cmp
mov
add
mov
test
sub
leave
or
mov
insl
jb
jmp
popa
cli
mov
xor
je
clc
addr16
cwtl
pop
pop
and
test
addr16
inc
push
cld
lcall
out
xchg
or
mov
mov
or
mov
test
into
inc
mov
mov
aam
dec
fisubrl
xchg
aam
add
mov
arpl
adcl
scas
pop
mov
fbld
add
pusha
insb
or
inc
sbb
xchg
rorb
movsl
inc
shrb
icebp
icebp
clc
call
mov
movsl
inc
clc
filds
test
in
or
add
jge
aas
iret
outsb
lock
in
clc
inc
div
shlb
cs
inc
cmpsl
lret
or
fisubrl
cli
sahf
dec
pop
data16
dec
and
mov
jp
jae
fndisi(8087
cld
or
daa
loop
cmp
xchg
cmp
push
inc
inc
and
bswap
or
cwtl
sbb
es
aaa
repnz
out
das
sbb
adc
sub
push
mov
fcomip
xlat
cs
aad
sub
xchg
sbb
push
ds
into
outsl
pop
jnp
xor
js
divl
add
in
cmp
lods
fcmove
xchg
mov
in
lock
jg
xchg
int3
hlt
adc
fcomp
and
or
lock
add
mov
xchg
xchg
js
pop
lods
push
insl
icebp
rolb
lret
lret
notl
jle
push
mov
add
pmaddwd
or
pushf
out
push
xchg
mov
mov
inc
ds
shrb
adc
cli
push
jmp
sub
xchg
mov
jle
and
les
sub
sub
sbb
sub
push
push
icebp
xor
jl
add
or
mov
or
rcll
fcomps
data16
add
push
lods
orb
xchg
scas
jmp
mov
jb
cmp
fistpl
sbb
mov
jl
outsl
mov
outsb
mov
das
mov
sbb
in
int3
xchg
lcall
sub
jo
ja
ffree
sub
dec
pop
je
ficoml
shr
loope
cmpl
lods
dec
or
push
pop
or
imul
inc
repz
jmp
xchg
dec
sub
cmpsb
repz
sub
sub
mov
repnz
pop
and
jp
and
lahf
shrb
bound
in
rorl
into
std
adc
lds
das
shlb
cmpl
call
lahf
xor
xlat
add
and
out
dec
jmp
lcall
inc
popa
or
sbb
xor
or
arpl
sbbb
pop
into
pop
pop
out
cmp
or
cld
jl
or
sbb
lds
mov
lret
xchg
xchg
sahf
inc
push
je
test
in
das
mov
js
dec
icebp
test
or
and
or
mov
pop
jb
shlb
jge
popa
in
jnp
lds
push
cli
sbb
clc
add
lds
clc
adc
lods
jb
int
aaa
pop
bound
into
mov
pop
pop
xchg
aad
je
xchg
lea
jle
sarl
adc
orl
push
cmp
mov
xorl
push
push
popa
push
pushf
pop
add
adcl
or
jo
adc
dec
nop
jne
movsb
jmp
xchg
dec
pop
and
mov
dec
xchg
shlb
push
xchg
jp
add
push
add
cmpb
in
into
fdivrl
lods
sbb
cmp
mov
pushf
aaa
adc
push
pop
insb
jne
jge
lret
mov
add
inc
push
out
cmp
mov
les
xchg
adc
cmpsl
adc
mov
sahf
call
adc
loope
cmp
aad
enter
imul
daa
iret
inc
cltd
dec
push
xchg
jae
adc
dec
shrb
insl
cmp
mov
int
sub
in
pushf
mov
mov
jl
je
xor
daa
int3
aad
testl
repz
test
xor
or
imul
insb
jge
inc
test
pop
mov
loope
jp
fwait
pop
mov
andb
add
pop
mov
mull
mov
jge
jmp
cli
std
cli
cmpsb
out
sahf
xor
icebp
adc
push
mov
cld
lds
inc
mov
stc
xchg
push
xlat
mov
mov
and
push
jns
hlt
mov
xor
int3
ror
push
addl
test
test
xchg
rol
shr
mov
scas
addb
dec
push
sbb
jp
sub
sahf
nop
flds
pop
or
es
fisubrl
pop
inc
pop
mov
in
scas
mov
adc
les
shrl
adc
cmc
dec
hlt
nop
push
sub
jmp
push
iret
in
mov
xchg
or
jmp
mov
jae
dec
rclb
lods
bound
add
sub
dec
adc
ret
xchg
mov
pop
cs
cmp
mov
inc
lods
mov
xlat
pop
or
inc
mov
dec
dec
sbb
int3
ja
cmpsl
mov
in
or
lret
insb
mov
dec
add
or
jp
cmpsl
int
jbe
cmp
shlb
sbb
popa
mov
jae
movl
sbb
push
mov
inc
loopne
push
fmull
in
sar
ret
test
xor
pop
sbb
shl
ljmp
ret
dec
out
push
fiadds
jne
sti
cmp
in
fbld
xor
int
push
xchg
out
negb
test
dec
lods
lahf
pop
mov
adc
lahf
or
outsb
mov
inc
cmp
std
adc
add
aas
cmp
pop
cld
enter
adc
jnp
cmpsl
sub
ret
sub
cmp
flds
xor
sub
shr
and
andb
push
fbstp
das
das
mov
lods
inc
push
inc
ljmp
xchg
pop
xor
dec
xor
mov
push
sub
sbb
mov
movsl
jns
div
pop
je
lret
pusha
pop
scas
leave
pushf
cld
push
adc
stc
inc
inc
push
imul
or
add
sub
lcall
leave
pop
pop
add
mov
arpl
movsl
cmpsl
cmp
push
mov
mov
ss
mov
sbb
loope
cmp
gs
sub
sahf
imull
int
add
lods
adc
out
mov
adc
mov
pop
mov
cld
pop
inc
mov
rclb
stos
and
cmp
dec
add
idivb
jecxz
xor
xor
popf
push
adc
out
jnp
dec
add
adc
ja
aaa
cwtl
mov
inc
cmpsl
data16
lret
jecxz
sbbl
or
or
add
mov
adc
push
mov
dec
xchg
add
pop
fwait
pop
hlt
sbb
mov
add
in
xlat
xchg
mov
sbb
cmp
cli
sbb
inc
in
rcrb
lds
ljmp
repnz
ss
adc
jge
adcl
adc
and
jmp
outsl
and
ja
cwtl
es
fcompp
sbb
fadd
into
setge
sbb
shlb
negb
test
je
pop
jo
inc
lods
movsb
in
cmovae
pop
xorl
je
adc
and
pop
sub
sub
fs
fisubl
jne
addb
xchg
loop
mov
sahf
push
aaa
imul
xor
lcall
pop
scas
mov
mov
scas
out
addr16
jle
cwtl
pop
stos
and
icebp
lea
mov
aas
pop
pop
xchg
jge
sbb
mov
pop
int3
or
or
inc
xchg
push
push
xchg
cmp
add
jae
inc
mov
cli
xchg
clc
sarb
int3
xchg
lods
in
adc
xlat
fimuls
lret
adc
push
ret
cmpsb
mov
pusha
test
jge
push
fsubl
cmp
adcb
lcall
jmp
sbb
cltd
push
and
xor
or
mov
xchg
sti
jns
mov
icebp
lods
cmp
lods
enter
mov
enter
shll
mov
lret
negl
and
test
jp
inc
xor
repz
push
fldcw
jp
adc
cmp
scas
mov
ficoms
dec
or
pop
or
mov
lock
inc
loop
fidivl
push
out
cld
rorl
js
push
insl
mov
jns
or
vmread
push
mov
ret
lods
sub
or
inc
lods
in
dec
test
test
mov
push
lds
ja
enter
mov
add
rcr
nop
nop
pop
or
mov
mov
stc
mov
lods
adc
or
sbb
or
jl
fiaddl
dec
mov
mov
jl
stos
or
cli
or
shl
add
adc
lea
xchg
mov
mov
add
add
shlb
in
shll
aad
xchg
and
fisubrs
cltd
cmp
call
ja
lea
ret
sub
shrl
pusha
in
pop
out
inc
sub
jl
sub
sbb
cltd
cs
addr16
inc
mov
pop
push
push
inc
xchg
lahf
inc
dec
jbe
test
das
mov
mov
scas
fsts
fildll
je
inc
outsb
jb
mov
mov
iret
outsb
add
cmp
cmpsl
push
or
mov
nop
mov
cmp
mov
lock
push
cmp
lods
test
xor
and
cmp
pusha
push
cmpsb
dec
sub
imul
sahf
rcrl
inc
fcompl
xlat
cmpsb
cmp
cld
jns
mov
jb
adc
ds
cmpb
dec
in
jecxz
xor
xchg
in
loopne
pop
insb
jmp
mov
call
mov
sub
xchg
or
mov
xchg
mov
jo
mov
mov
rcl
rcrb
loope
cmp
adc
inc
push
scas
sbb
ljmp
fcmove
idivb
inc
dec
mov
outsb
jecxz
or
or
stos
xchg
pop
lahf
push
inc
cltd
cmp
int3
fs
pop
jmp
jns
mov
rorl
mov
out
sub
jbe
test
and
add
sti
dec
jle
scas
sahf
std
pop
pop
rcr
add
ljmp
enter
daa
pop
push
test
jg
push
js
jl
ds
push
push
pop
add
and
sbb
popf
lods
inc
add
mov
cmpsb
add
push
mov
pop
xchg
push
jo
jge
in
push
jle
fwait
mov
enter
int3
xchg
mov
lret
jmp
mov
inc
and
or
rolb
xlat
popf
mov
test
inc
imul
leave
ret
and
pop
jb
sbb
aad
test
insb
mov
clc
push
movsb
jae
or
vpmaddwd
jnp
lods
inc
loop
fstpt
xlat
ja
xchg
das
sti
sbb
xchg
sahf
inc
adc
sub
js
inc
call
jecxz
cwtl
inc
xorb
adc
aas
pop
or
and
lods
xchg
shlb
push
outsl
repnz
outsl
adc
lods
mov
jno
mov
cltd
fs
imul
xor
je
dec
scas
sub
sbb
test
xor
xlat
cmp
and
mov
mov
cmpsb
push
repnz
inc
je
push
cmp
cmp
mov
jb
jecxz
imul
xlat
push
into
fdivrl
mov
sti
push
arpl
lret
xchg
xor
sbb
lods
loop
xchg
arpl
addl
cmp
adc
movsl
loope
mov
push
cmpb
sbb
inc
das
insb
mov
cmp
pop
mov
sub
rcrl
xor
int3
outsb
jecxz
xor
push
repnz
fs
addr16
es
lret
mov
cmpsl
xchg
rcrb
loop
adc
mov
sbb
and
hlt
dec
jl
out
js
pop
xchg
inc
or
push
jbe
inc
rorb
sti
test
pop
dec
xchg
dec
fsubr
cmp
xchg
jp
fistpll
subl
adc
add
or
pop
dec
movsb
xor
jne
out
dec
jg
loop
or
mull
loopne
xchg
lret
xchg
push
negl
mov
scas
mov
push
inc
lods
jg
movsb
or
pusha
pop
aaa
sbb
xchg
push
inc
xchg
mov
fs
xchg
jae
fisttps
dec
mov
adc
or
mov
push
sti
sub
sbb
sub
ljmp
mov
movsl
push
es
hlt
jmp
or
xchg
aad
aas
or
test
sub
outsb
sub
lahf
aad
dec
test
adc
jns
addl
sub
jmp
xor
adc
int3
ds
mov
loopne
sbb
push
push
and
cmc
pop
jb
add
mov
gs
lock
insb
pushf
imul
fs
push
cmp
or
insl
hlt
sbbb
bound
or
dec
mov
les
xchg
xchg
pusha
scas
mov
cmp
mov
sbb
sub
jnp
cmpsl
stc
inc
mov
mov
add
push
pop
fmul
dec
lds
xchg
pop
aad
shrl
mov
imul
in
lods
pop
pop
inc
sub
mov
test
enter
in
mov
shlb
pop
sub
movsl
das
repnz
xchg
cmpsl
negb
out
das
lret
add
je
mov
mov
mov
loopne
loop
dec
lcall
push
mov
jecxz
cmp
ljmp
dec
or
mov
bound
lods
fld
cmpsb
cmp
jae
lea
mov
jle
push
xor
outsb
mov
call
or
and
xchg
pop
xchg
pop
lock
shrl
loopne
pop
or
jmp
xor
jp
repz
mov
out
arpl
inc
stos
mov
ret
pop
pop
pop
lds
call
cwtl
lds
loop
fstp
or
test
xchg
sarb
sub
inc
js
jmp
es
cmp
test
test
jp
in
clc
adc
dec
fcomps
push
roll
xchg
es
lods
or
and
lods
jne
xchg
sub
jp
loop
pop
jge
or
pop
pop
insb
cmp
inc
mov
dec
jb
push
ljmp
adc
xor
or
loope
jnp
ficoms
mov
call
xor
jmp
push
lock
xchg
push
inc
mov
mull
mov
lods
enter
lahf
mov
lods
adc
cmpsb
inc
stos
inc
sbb
repz
ret
mov
aas
push
fldt
sub
inc
rol
sti
nop
mov
jle
inc
aaa
rorb
cmp
xchg
mov
and
mov
add
out
mov
cmp
xor
inc
mov
ja
xchg
sbb
jl
add
shrl
repnz
cmpb
fdiv
sbb
bound
pop
jge
mov
pop
mov
lret
jnp
push
rcrl
shlb
mov
and
xchg
lds
jne
jne
movsb
popf
dec
stos
js
repnz
pop
sub
cmpl
loopne
cmp
jmp
push
xor
dec
pop
stc
push
dec
dec
jnp
mov
in
mov
adc
in
mov
frstor
arpl
cs
pop
vpunpcklbw
xchg
xchg
es
sbb
fsubs
loopne
dec
adc
sbbb
adc
psrlw
push
pop
les
cltd
aaa
sbb
shll
int3
andl
ljmp
arpl
mov
gs
xor
lea
and
mov
inc
iret
mov
test
shrb
push
in
mov
push
jl
pop
xchg
xchg
enter
fisubrl
push
xchg
popa
jns
imul
out
jne
xchg
inc
punpckhdq
sub
cwtl
jg
dec
and
mov
pop
pop
out
push
test
out
lods
dec
stos
lret
cmp
sbb
imul
adcb
lds
xchg
in
lods
pop
xchg
or
jo
inc
stc
jl
mov
fwait
int3
jns
sub
pop
xor
dec
xor
push
iret
std
repz
fistl
adc
or
cmp
jae
call
or
push
rclb
mov
mov
lret
jae
or
pop
insb
aas
inc
gs
jle
push
jg
in
fs
call
xor
inc
scas
jns
loop
inc
bound
pop
push
adcb
and
imul
dec
adc
jecxz
pop
sbb
mov
pop
lods
lods
call
imull
cs
in
movsb
stc
ljmp
loopne
mov
insl
bound
inc
mov
cs
lcall
adc
rcrb
mov
sbb
push
sbb
and
shlb
xchg
das
adc
push
call
cli
add
add
jp
loopne
mov
cmp
jmp
lock
pop
inc
out
and
and
jns
adc
mov
pop
push
inc
sub
xchg
or
pop
in
add
jge
xor
repz
mov
fildl
in
ficoms
sub
and
adc
outsl
or
xor
mov
das
shrb
fmulp
aam
jmp
clc
mov
pop
test
cmpsl
cmp
imul
jg
push
fmuls
mov
pushf
out
test
cld
loop
xchg
out
loopne
add
adc
lds
pop
mov
adc
dec
mov
dec
push
jbe
ja
in
scas
in
sti
test
pusha
sbb
mov
mov
and
call
cli
and
sarl
pusha
sbbl
pop
in
mov
imul
push
lahf
mov
es
and
cmp
sbb
push
pop
outsl
sarb
add
mov
jp
jmp
out
mov
jns
xor
int3
clc
cltd
hlt
scas
sahf
jo
fsubl
lock
sbb
and
cmp
pop
push
mov
test
lret
jg
inc
cmp
lds
mov
fwait
imul
repnz
mov
call
jl
add
ljmp
add
dec
cmp
sahf
negl
dec
mov
loop
sbb
inc
push
or
addl
push
out
ljmp
mov
ret
xor
test
xchg
pop
gs
mov
shrb
imulb
mov
pop
xor
adc
inc
and
mov
lods
or
stc
add
add
pop
nop
scas
push
cltd
test
inc
rcl
xor
and
lcall
pop
adc
leave
icebp
out
negb
mov
xchg
lahf
xchg
addb
addr16
fldt
fwait
jl
repz
push
outsb
jmp
sbb
jbe
lods
mov
dec
test
sahf
fs
push
add
lret
dec
addr16
dec
inc
and
cmpsl
orb
int
idivl
xchg
jmp
mov
sub
cmpsl
popf
xchg
rcll
inc
testb
icebp
sbb
les
loop
mov
orl
dec
lret
mov
xorb
lret
add
sub
cltd
sbb
xchg
push
mov
lock
inc
test
fimull
pop
xchg
mov
or
aas
push
ljmp
adc
sbb
daa
dec
aad
sar
fcmovbe
mov
mov
lods
outsl
push
dec
inc
cld
dec
xor
cvtdq2ps
cmp
fists
stos
jg
call
push
inc
xchg
or
popa
call
shll
adc
pushf
mov
pusha
icebp
iret
sub
jno
movsb
daa
and
mov
mov
pop
shrb
push
xchg
pop
lcall
pop
or
mov
js
xor
xor
xor
lds
mov
es
int3
sbb
xor
movsl
add
mov
and
stos
das
mov
sahf
mov
das
pop
xor
pop
push
and
daa
or
rcrl
dec
fidivs
dec
inc
lret
dec
pop
pop
lds
loopne
ficomps
ret
add
inc
and
and
cltd
inc
test
adcl
icebp
xchg
outsl
popa
pop
imul
push
jne
repnz
jns
faddl
js
test
stc
fldenv
std
sbb
xor
push
cmpsb
out
cmp
sarb
imul
faddl
std
shl
push
imul
xorb
aam
out
insb
mov
repnz
inc
push
and
lcall
leave
inc
add
xor
cmp
push
ljmp
adc
out
leave
movsl
mov
ret
nop
mov
in
inc
and
rorl
xchg
mov
dec
dec
outsb
inc
popl
rolb
cli
jge
mov
mov
and
pop
jb
cli
call
cwtl
mov
js
jge
mov
fdivs
daa
clc
sarl
scas
pop
movsl
rcl
sub
mov
cwtl
add
subl
sbb
mov
lret
push
mov
scas
push
jmp
mov
mov
mov
pop
mov
std
cwtl
push
or
jl
xor
cmp
enter
dec
mov
pop
push
cmpsl
test
pop
rorb
test
out
inc
xor
rorb
and
inc
rorl
inc
xchg
lock
push
call
jb
push
xchg
call
rcr
shll
subb
dec
movb
push
testb
test
arpl
adc
sbb
cld
decb
fmul
sti
cmp
test
push
dec
pop
movsb
insb
test
es
dec
jg
sbb
jge
and
dec
sub
dec
mov
iret
xlat
inc
in
lods
push
es
push
gs
sbb
xchg
or
adc
or
repz
pop
or
xchg
jmp
ljmp
daa
xchg
mov
sbb
divb
popf
out
sbb
push
fistpl
jle
jb
dec
push
jbe
sub
add
mov
leave
xor
mov
jns
xchg
cli
xchg
pop
adcb
mov
cmp
push
fmuls
out
aaa
adc
mov
test
sarb
fimuls
stos
adc
jb
push
out
pop
hlt
and
and
dec
jle
pop
add
xchg
jmp
mov
insl
lods
pop
or
ds
imul
add
test
icebp
ret
mov
test
xchg
adc
cmc
enter
adc
enter
cmpxchg
fstps
in
fbld
mov
mov
int
cmp
pop
push
ds
fldl
ds
push
imulb
cmp
test
pusha
leave
ds
sbb
mov
cld
call
mov
cmc
and
fistl
gs
das
xchg
or
sub
pop
jae
lock
lods
xor
push
pop
outsl
cmc
jbe
lcall
mov
jnp
insb
mov
jp
test
jne
mov
xor
cmp
push
xor
scas
mov
inc
ret
jge
mov
ret
cli
scas
jne
xchg
pop
lea
xchg
adc
jg
mov
mov
cmp
outsl
ss
lods
sbb
imul
repz
sbb
cmc
fnstenv
movsl
mov
es
or
cltd
pop
sahf
cmovp
and
rolb
and
je
loope
dec
lret
in
xchg
pushf
cmp
xor
mov
popf
add
inc
jmp
arpl
cmpsb
mov
test
jbe
testb
xchg
mov
xchg
mov
xor
and
shrl
push
add
sbbb
push
or
cwtl
cmp
cwtl
add
out
sahf
sbb
sub
in
fcomps
pop
sbb
pop
repz
xlat
std
fstpl
stos
sahf
dec
rclb
cmpsl
insb
out
pop
repnz
cld
test
scas
push
mov
lahf
test
mov
or
shl
incb
mov
movsb
in
cmp
imul
mov
je,pt
cmpsb
aaa
shl
mov
and
push
out
mov
cmpsb
pop
out
test
xorb
push
data16
sar
fidivrl
cmp
movsl
popf
jp
je
dec
gs
ret
in
imul
test
dec
repz
jl
mov
mov
inc
rolb
adc
fdivrl
lret
push
xor
xor
fs
cmp
add
push
pop
mov
bound
or
pushf
inc
sahf
mov
xchg
add
mulb
in
ljmp
add
sub
and
xchg
add
insb
filds
fidivs
movsb
jo
sub
or
jbe
addr16
lcall
dec
mov
lods
jnp
das
pop
xchg
out
and
or
test
gs
and
outsb
jb
cmp
xor
jl
dec
aad
fwait
mov
jnp
xor
aam
jb
les
ret
lret
adc
mov
cmp
inc
aas
push
inc
faddl
mov
xor
mov
pusha
or
in
fstl
shlb
shl
push
jp
enter
int
xor
mov
sub
mov
pop
cld
mov
cwtl
push
cmc
fcmovu
sub
out
popf
outsb
insl
cltd
xor
lods
mov
in
idivb
push
iret
lcall
lods
int3
lock
aas
movsl
fnstcw
push
mov
mov
iret
xchg
lods
mov
xchg
xchg
adc
xchg
jmp
sbb
inc
ret
insb
aaa
fsubr
add
test
aaa
cli
bnd
loopne
cli
fidivl
lcall
cld
push
mov
sti
xchg
stos
mov
shlb
into
sbb
add
sub
sbbl
sahf
dec
mov
flds
test
cmp
clc
inc
push
mov
sub
movsl
in
xchg
loop
sbb
shrb
cmpsb
imul
ljmp
iret
lahf
in
jns
mov
mov
idiv
lock
mov
push
arpl
mov
jbe
mov
cs
cmp
out
dec
adc
hlt
leave
leave
sbb
sub
leave
pop
popa
jno
fstps
rcrl
mov
cltd
scas
lahf
or
mov
sbb
jbe
gs
mov
mov
sub
xorl
cld
lea
ljmp
rcrb
mov
enter
cmc
dec
jbe
push
lret
icebp
push
push
dec
popf
pushf
jp
or
popf
mov
ja
enter
sbb
push
imul
xor
subb
aad
pop
icebp
insb
cs
fistl
lret
mov
fnstsw
pinsrw
or
daa
xchg
mov
cltd
fwait
adc
jmp
subl
pop
sbb
pop
bound
mov
cli
iret
dec
mull
xor
push
fwait
adc
jecxz
sub
imul
push
fmul
dec
dec
xchg
loope
loop
pusha
pop
add
inc
or
fistps
daa
jb
shll
ja
ficoms
cmp
mov
lds
loope
dec
out
fists
jae
loope
and
adc
or
mov
jge
sbbl
notl
add
out
ljmp
xchg
jp
fmuls
nop
adc
jo
out
shrl
pop
test
mov
push
mov
adc
loopne
adc
add
lahf
jecxz
fyl2xp1
xchg
cmp
jbe
jmp
fcom
bound
test
in
pusha
leave
pop
inc
fcmovnb
sub
jl
push
push
into
mov
pop
addb
insl
pop
and
mov
fisttpl
div
mov
add
ja
iret
imul
mov
xchg
add
sbb
pop
push
iret
xor
mov
add
pop
rep
sub
mov
out
xchg
sub
pop
mov
push
mov
jge
mov
push
dec
adc
sub
jnp
dec
mov
jl
fiaddl
mov
jp
add
jle
idivl
jmp
loopne
jp
lahf
xor
rcrb
push
jno
out
fistpll
je
xor
loopne
or
mov
pusha
mov
es
and
ror
add
mov
push
stos
sub
mov
adc
test
jns
cltd
xchg
mov
pusha
notb
adc
gs
loope
pop
lcall
ret
inc
test
int
add
dec
cmpsl
xchg
mov
dec
sbb
iret
dec
dec
jl
lods
mov
adcl
pop
or
sbb
or
ret
dec
cvtps2pd
mov
sbb
and
or
dec
pusha
cwtl
or
dec
or
jno
inc
out
pushf
xor
ljmp
ret
xchg
sub
mov
imul
in
imul
dec
int
imul
mov
xchg
and
sti
and
divb
jnp
push
jb
cli
add
or
dec
addb
xor
call
sahf
mov
inc
jbe
mov
pop
int3
mov
sbb
in
push
cld
push
jb
adc
push
sbb
rclb
cld
sti
xor
pop
stc
lods
icebp
add
and
ret
xchg
pop
outsl
popf
jecxz
ret
lock
xchg
les
xlat
pushf
les
xor
jle
pop
pop
inc
dec
jp
or
jns
imul
xchg
or
test
jno
cmp
imul
mov
ljmp
jmp
repz
movsb
xchg
std
test
mov
leave
rclb
xlat
mov
inc
pop
mov
xor
pushf
sbb
push
fwait
in
sub
jecxz
xor
sub
adc
sar
imul
inc
or
push
je
sbb
mov
stc
dec
or
sarl
and
leave
adc
test
xor
cmc
test
leave
int3
or
in
into
das
cwtl
dec
test
jbe
repnz
push
jl
mov
push
je
ss
xchg
lods
pop
lret
or
sbb
mov
xchg
add
xchg
fiaddl
ds
test
shll
sbb
inc
outsb
loop
scas
and
inc
movq
das
mov
pushf
inc
in
push
loope
std
mov
xlat
or
lock
push
out
add
lret
add
outsb
dec
and
call
xchg
repnz
cmpsl
stos
mov
lcall
inc
pop
test
addl
jl
movsb
xchg
jmp
xchg
jmp
pop
mov
fsubr
fmul
jp
xchg
pop
mov
pop
or
jmp
mov
mov
dec
out
in
int
lods
sbb
add
mov
adc
mov
sub
fwait
das
adc
mov
sbbl
add
jge
cmp
jl
call
daa
push
je
frstor
bound
and
test
mov
lods
fwait
sbb
fidivrs
rcrb
cmp
cmp
popf
imul
mov
dec
mov
loopne
xchg
push
out
pop
std
xchg
and
sbb
scas
xchg
insb
pop
mov
dec
popf
imulb
sub
xor
dec
sbb
sub
dec
adc
or
mov
jmp
into
add
sti
cmpsl
sahf
xchg
mov
arpl
jl
mov
sbb
mov
add
imul
flds
shlb
xor
jle
adc
aas
gs
loopne
je
out
loopne
sarl
push
mov
nop
out
mov
mov
push
test
testl
call
sub
xor
dec
loope
testl
cmp
adc
int3
insb
test
inc
stc
or
popf
mov
adc
dec
add
das
test
test
faddl
loop
pop
or
xor
add
sbb
aaa
push
loop
jecxz
int3
mov
mov
bound
test
jns
pop
sub
xor
pop
push
sti
pop
fstps
test
jnp
clc
cmp
inc
mov
ss
test
adc
mov
mov
ficomps
jle
out
fisubrs
xchg
and
add
inc
pop
jae
sbbb
mov
jl
outsb
test
sbb
mov
fcmovbe
dec
xchg
ret
jg
cmp
test
adc
jle
adc
pop
insb
insl
stc
movsl
cld
pusha
cmp
sbb
xor
jbe
xor
pop
push
fstpt
mov
mov
cltd
jp
and
cli
in
add
daa
sbbb
xor
sarl
push
pop
mov
push
jo
ja
or
and
lock
xchg
mov
lea
mov
stos
cmc
xchg
mov
ret
jo
cmp
lods
cmp
popf
ds
insb
daa
xor
idiv
adc
mov
rcll
inc
aam
fdivrs
cmpsb
imul
lret
cmc
mov
sub
or
daa
adc
jb
cmp
outsb
pop
pop
cmp
outsb
xlat
shrl
fnstenv
out
popa
mov
jg
jl
out
repnz
inc
jle
aas
push
jno
inc
jecxz
xchg
cmpxchg
add
jle
sub
adc
fnstcw
rorb
scas
loopne
add
popf
jae
stos
fisubrs
insb
rcrb
fisttpl
add
xor
ds
push
jmp
popf
mov
xchg
pop
xor
repz
and
js
popf
jns
ret
add
lea
add
add
adc
push
mov
and
sahf
aam
adc
lea
std
int3
push
popf
scas
rorb
push
xchg
into
aad
repnz
pop
jmp
jle
push
xchg
int3
fdivs
clc
mov
dec
or
outsb
cmp
sbb
jle
sbb
push
hlt
jae
shl
dec
ljmp
cmc
lahf
pop
ds
mov
and
cmp
insl
ret
loop
cmp
and
and
out
mov
xchg
mov
push
movsl
push
dec
jecxz
sahf
cs
das
inc
push
lahf
add
or
fs
or
movsb
pushf
ret
ret
mov
imul
dec
add
sbb
sub
sti
leave
in
add
inc
mov
xor
mov
xlat
push
add
mov
sti
test
dec
pop
test
or
xchg
cmc
adc
jnp
xor
dec
aas
into
lcall
mov
lahf
out
cmp
pushf
and
mov
out
pop
icebp
fs
out
inc
js
add
roll
loope
adc
dec
pop
mov
movsb
xorl
insb
add
adc
mov
jge
dec
cld
dec
movsl
pop
jecxz
push
divl
pop
and
xchg
add
xor
pop
and
mov
pop
lods
ret
xchg
dec
sbbb
adc
in
adc
fildll
popf
or
ljmp
in
xchg
mov
stc
inc
dec
cmpl
insl
add
lds
int
push
xor
mov
stos
pop
es
lea
push
pop
es
sti
cmp
pusha
stos
rcrb
sahf
cmp
mov
enter
popf
mov
gs
and
rclb
dec
pop
pop
add
imul
sbbl
mov
sbb
lret
out
in
clc
jge
or
popf
je
dec
push
lahf
xor
mov
testl
xor
fidivl
jecxz
pusha
jb
mov
or
in
dec
sahf
dec
push
or
inc
mov
cmp
out
xchg
into
xchg
cmp
xchg
mov
or
icebp
repnz
out
jg
loopne
les
lods
lcall
or
pop
cmp
call
sub
lods
push
sub
pushf
mov
fidivrl
mov
add
test
or
inc
add
sub
push
adc
xor
sbb
sbb
sub
aad
sub
lods
mov
inc
movsl
adc
sub
adc
cwtl
cmp
sub
fimuls
push
xchg
jae
shlb
push
pop
sub
lret
jo
push
cltd
mov
gs
cmp
jmp
nop
fwait
sbb
jnp
jecxz
mov
in
sbb
aas
mov
xchg
movsb
push
test
adc
jno
testb
imul
sbb
mov
add
cwtl
clc
and
inc
gs
xor
stc
jmp
test
shlb
mov
mov
dec
add
mov
xorl
iret
popa
push
sbb
adc
jne
in
jb
mov
lcall
loop
dec
lcall
cmp
add
daa
adc
push
pslld
imul
mov
xlat
fwait
mov
cmp
add
inc
pop
jl
icebp
lds
std
pop
cmp
xor
popf
sahf
inc
clc
mov
call
mov
sub
xchg
mov
into
jg
adc
mov
inc
shrl
shll
cld
outsl
push
ret
push
sarb
adc
in
in
sub
cmc
cmp
dec
lcall
xor
outsl
movsb
test
jg
sahf
cmp
add
sub
fwait
inc
adc
xchg
and
js
insl
xor
cld
lret
pop
dec
sbb
lret
mov
adc
jle
lcall
adc
pop
test
ss
cli
add
hlt
pop
mov
sbb
mov
jmp
cmp
jmp
xor
pop
sbb
jge
outsl
push
and
in
popf
sbb
into
or
inc
mov
xchg
cmp
push
inc
lcall
or
in
or
xchg
popf
scas
cmp
fscale
adc
cmc
in
lcall
int
loope
add
mov
push
aam
xchg
xchg
dec
in
xlat
cmpsb
es
sbb
iret
mov
mov
gs
jno
shlb
mov
xchg
lret
push
test
out
push
add
sub
mov
sub
mov
mov
mov
jg
and
lcall
mov
and
sub
pop
cmp
push
mov
insl
lret
mov
and
imul
jbe
push
push
das
sar
sti
lret
xchg
cwtl
in
aaa
fisubrs
inc
jb
into
stos
inc
mov
xlat
sbb
daa
and
inc
lds
cmp
shlb
xor
sbb
jne
pusha
adc
and
in
and
fistps
inc
push
js
popa
dec
push
lods
outsb
std
mov
xor
insl
inc
mov
xor
push
push
sbb
mov
cmp
stos
dec
enter
cmp
add
jecxz
fsubr
sbb
dec
shrb
stc
lea
outsb
mov
xor
inc
mov
negb
mov
aam
mov
sub
xor
imul
fistl
cmp
inc
push
stc
mov
add
dec
sbb
sbb
test
sub
jno
inc
aas
fstps
push
pop
pop
popf
lcall
insl
cmpl
arpl
mov
jmp
sub
jbe
mov
mov
out
dec
mov
ret
sbb
jle
mov
nop
jge
cmpsl
mov
cmp
lcall
jb
test
inc
or
fstpl
push
adc
inc
test
sub
enter
fnsave
fstpl
jge
and
repz
sahf
jno
mov
mov
sbb
in
divb
xchg
cltd
cwtl
add
adc
xchg
cmp
pushf
into
cmovb
insb
xchg
push
cs
sbb
mov
icebp
popa
xchg
cmpsb
js
inc
inc
push
ljmp
test
sub
or
adc
cld
sbb
mov
gs
movb
pop
jle
jmp
push
shrl
pop
in
xchg
xor
aam
fmul
jl
jne
mov
popa
cmp
lods
pop
adc
add
fs
push
imul
call
or
fldt
inc
mov
cmc
test
sbb
sub
sbb
jp
enter
mov
pushf
dec
ret
leave
in
test
ficompl
mov
add
push
es
or
cmp
daa
xor
imul
sahf
out
xchg
testl
mov
xlat
cmp
shrb
popf
cmp
mov
cmp
adc
xchg
jle
cmp
add
jp
popf
js
mull
ja
push
xor
test
ja
jg
je
adc
mov
sub
incl
mov
pop
jno
call
test
sub
or
je
xor
fsub
bnd
or
push
mov
xchg
dec
cmp
nop
aad
push
xchg
add
das
fwait
mov
push
data16
out
call
in
lcall
jnp
pop
in
xlat
jnp
xchg
icebp
mov
int3
sbb
or
fwait
push
pop
fnstsw
xchg
pop
repnz
or
lret
cmp
inc
mov
lea
add
pop
in
xor
adcb
jns
mov
mov
pop
arpl
in
mov
or
lods
pusha
ljmp
adc
shrb
movsb
jl
mov
sbb
jb
inc
movsb
dec
mov
rclb
iret
mov
mov
jb
lahf
xlat
popa
jnp
pop
mov
js
aad
lds
adc
das
xor
and
pop
jbe
mov
into
jg
or
adc
sub
dec
push
sub
jmp
jnp
xchg
dec
int3
push
testb
loop
mov
dec
mov
fwait
test
insl
jg
enter
mov
mov
in
out
mov
jae
aad
movl
inc
pop
insl
cmc
subb
test
stc
push
cmp
out
aam
stos
or
imul
out
rep
daa
lahf
mov
stc
push
inc
andb
xor
sub
and
xor
notb
xor
cmp
mov
lea
sbb
repnz
push
mov
ss
jbe
pop
sbb
or
cmpsl
push
jo
sbb
xchg
xor
les
out
sub
inc
xlat
nop
test
aam
clc
xlat
test
fnsave
xchg
je
xor
xor
loop
test
in
adc
ror
pop
add
rorb
mov
aam
cmpsl
out
and
mov
fisubrs
imul
mov
lcall
and
shrb
xor
mov
sub
jecxz
inc
cmp
popf
mov
jne
push
mov
push
sub
test
push
nop
mov
and
mov
shl
mov
pop
sbb
stos
das
shll
fcom
adc
mov
jns
clc
push
mov
or
cmpsb
in
sub
gs
repnz
movsl
inc
repnz
dec
sbb
lcall
popf
aas
mov
stos
cmp
and
jmp
pushf
pop
outsb
mov
add
inc
and
push
cli
cmp
popf
test
mov
or
cmp
mov
mov
insl
scas
rcl
add
sbbb
rorb
push
std
push
and
mov
cmp
loopne
aaa
fprem1
and
dec
or
xlat
mov
vorps
mov
and
add
add
jg
shlb
pushf
lods
test
dec
cmpsb
cmpsl
repnz
xor
sbb
mov
sub
lods
and
and
imul
mov
cmp
or
sub
mov
orl
ljmp
mov
mov
dec
add
mov
push
xor
jne
stos
std
clc
dec
adc
adc
jmp
cltd
mov
mov
and
cli
js
push
jb
fs
xorb
inc
mov
add
mov
lods
push
idivb
mov
arpl
and
inc
pop
mov
gs
lret
pop
movlps
sbb
and
xchg
loop
je
cmp
rcll
xor
mov
push
out
push
add
and
test
or
push
nop
xchg
mov
out
imul
ljmp
stos
dec
in
xchg
idivl
popa
add
mov
lea
pusha
lret
dec
cld
loop
adc
cmc
push
jno
pop
jnp
lahf
jnp
lods
xor
cmpsl
das
outsl
fisttps
test
fistl
mov
xchg
push
in
pop
push
mov
out
mov
xchg
test
je
insb
test
arpl
inc
xchg
out
jp
push
pop
push
test
imul
sub
dec
movsl
inc
gs
mov
mov
pop
dec
xchg
adc
fdivs
sbb
ljmp
pushf
in
add
mov
mov
cmp
mov
jge
fbstp
in
push
jae
mov
js
mov
cltd
jge
pop
sbb
and
iret
push
sub
and
jne
or
mov
test
mov
sbb
pusha
fs
or
push
push
mov
adc
cmpsb
xlat
cmp
jne
xchg
scas
sub
mov
lret
and
dec
pop
cltd
xor
lcall
inc
sub
jo
pop
imul
jl
call
fmull
loope
push
lret
sha256msg2
movsl
insb
iret
pop
andb
mov
lods
arpl
xor
imul
xorb
inc
cli
ret
inc
cmp
dec
and
cs
out
xchg
lea
mov
mov
xchg
scas
shrl
enter
popa
mov
mov
jmp
aam
mov
daa
cmp
frstor
in
or
js,pt
out
aaa
movb
mov
sub
outsl
pusha
mov
pop
shlb
lret
adc
sub
int
push
pop
xor
leave
sub
enter
cmp
push
jl
movsb
out
xor
xchg
pop
push
jno
push
or
adc
lcall
cmp
fiadds
pop
cmp
inc
adc
sub
cwtl
inc
mov
sub
lods
push
xor
leave
mov
mov
ret
pusha
mov
xor
xor
adc
stos
test
pop
xor
incb
xor
movsl
and
push
sbb
mov
movsb
mov
popf
bound
daa
xchg
push
hlt
inc
xlat
adc
insl
dec
dec
push
cs
sub
addr16
jb
loop
rorb
inc
mov
int
jmp
into
push
fwait
out
sti
sbb
aam
popl
mov
lods
int
int
je
clc
js
add
mov
sbb
jne
fldt
in
les
setp
jge
aas
fstpt
in
fsubl
loop
push
leave
push
scas
xor
pop
push
cmpsb
cs
adc
stos
jle
or
adc
lods
jne
pop
ljmp
jo
push
push
cwtl
lcall
sbb
fistps
jg
cmp
mov
iret
mov
nop
scas
pop
mov
jecxz
lds
push
ja
sti
cmp
imul
pop
sarb
std
out
clc
insl
lahf
ljmp
test
aam
jnp
push
cld
dec
add
xchg
ret
cmp
sbb
cltd
gs
push
mov
jnp
inc
add
xchg
mov
fdivs
pop
or
pop
jmp
sbb
cmc
outsb
cmp
xchg
lret
mov
xchg
sub
pop
cmp
popf
sub
das
jmp
dec
inc
fdivrl
mov
mov
inc
ds
movsb
shlb
jb
repz
std
mov
pop
dec
xchg
cmp
push
xchg
inc
lret
cmp
mov
and
push
stos
adc
inc
pop
cmp
cltd
es
fsubl
loop
jp
jo
sub
jbe
ss
sahf
imul
mov
es
sahf
xor
out
sbb
xlat
jbe
jecxz
out
mov
jmp
mov
xlat
and
cli
push
mov
test
mov
and
ret
sti
mov
ds
dec
pop
jmp
insb
cmc
cmpsb
cmp
dec
xchg
push
cmpsl
rolb
lcall
dec
and
cmp
cmc
mov
aas
mov
sub
mov
sbb
aam
out
insb
out
mov
ljmp
xchg
xor
mov
mov
insb
insb
jb
cmpsl
sub
movsl
movsl
decb
pop
push
rclb
scas
andl
ret
addr16
data16
cmp
dec
icebp
fnstcw
movsb
stos
mov
inc
jle
lock
cmp
xchg
pop
ficoml
jmp
loop
int
lock
outsb
push
jmp
pop
xor
in
icebp
and
popf
mov
jl
insl
adc
xchg
mov
mov
gs
sub
push
cmp
pusha
lahf
mov
push
mov
inc
jmp
repz
fwait
mov
hlt
mov
cmpsb
outsl
mov
mov
stos
dec
das
mov
adc
icebp
aad
mov
cs
jge
addr16
rcl
popa
add
out
movb
call
or
les
outsb
add
enter
ja
push
lahf
xchg
sahf
push
xchg
bnd
push
mov
fwait
test
insb
push
and
mov
add
sub
aas
pop
jp
or
mov
popf
enter
fildll
mov
daa
pop
cmc
pusha
fisubs
mul
cmp
lahf
mov
jno
repnz
arpl
int
push
outsb
add
ret
pop
xchg
outsb
adc
jb
add
outsl
jle
les
inc
testl
push
and
je
pop
out
subl
rcrb
xor
stos
mov
cmc
inc
movsl
test
mov
push
push
in
cmp
aaa
inc
fldenv
adc
mov
xlat
and
and
addr16
popa
cmpsb
dec
or
clc
inc
or
stos
sbb
mov
xor
add
push
jnp
xor
stos
sub
mov
jmp
iret
mov
stc
out
and
push
jle
cmp
subb
roll
test
pushf
inc
pop
xchg
add
lds
fldcw
ja
inc
inc
test
mov
movsl
and
cld
out
dec
add
push
dec
adc
sbb
mov
mov
mov
aaa
or
sub
adc
outsb
pusha
lods
cmpsl
movsl
xor
ror
ret
fadd
lahf
xorl
add
dec
sbb
jne
add
xchg
xchg
fmulp
cmpsb
ret
in
jns
ficoms
iret
adc
jl
mov
les
sub
dec
ds
bswap
in
xorl
cmpsb
mov
fwait
ss
lea
stc
cld
mov
mov
fmul
dec
pusha
mov
mov
fcoms
mov
call
mov
xchg
subb
push
or
and
test
cmc
inc
sahf
xchg
push
jecxz
cmp
test
insb
daa
out
jle
out
scas
jmp
arpl
xchg
scas
aad
and
jbe
push
xchg
dec
movsl
loopne
dec
jnp
fs
repz
adc
cmc
call
nop
lcallw
jbe
int3
adc
loope
sbb
cs
lret
jbe
loopne
lods
dec
cwtl
cmp
xchg
imul
sub
and
out
das
lahf
inc
scas
mov
mov
add
lahf
icebp
dec
shll
decl
xor
jb
ret
inc
mov
pop
jae
pusha
and
dec
or
mov
enter
bound
call
fwait
jl
fistps
push
and
repnz
movsl
daa
movsb
or
pop
out
ror
repz
lock
ret
jmp
movsl
ja
push
rolb
in
pop
es
xor
cmp
addr16
imul
mov
xchg
bound
inc
inc
ss
sub
inc
loopne
sub
iret
mov
leave
bound
aad
fnstsw
cmp
xchg
call
movsl
xchg
and
jp
sbb
xchg
stos
xor
pop
jbe
jmp
mov
add
cmp
sub
cmp
int
sbb
jl
les
cmp
inc
aam
iret
fcompl
add
popf
es
cmp
sub
loope
pop
pop
push
adc
movsl
push
push
repz
pushl
movsb
pop
add
inc
adc
dec
fcmovnbe
mov
insl
dec
cmp
jo
mov
or
mov
sub
xor
cmp
jmp
outsl
lcall
fs
dec
dec
scas
lret
clc
push
dec
sub
repnz
inc
pop
lret
mov
lret
and
push
int3
inc
lods
lahf
cltd
repnz
or
mov
cs
push
jb
dec
xlat
adc
push
cwtl
ss
jns
push
push
fchs
jle
shrb
cli
pusha
or
test
cmp
cmp
test
loop
jge
arpl
push
push
inc
fs
pop
js
dec
pushw
lods
mov
push
sub
cmc
cmpsb
jo
add
ret
push
jo
icebp
pop
pop
int
push
pop
mov
xchg
das
jecxz
or
mov
std
jl
std
jbe
cmp
cwtl
loopne
xchg
mov
hlt
jmp
push
cli
dec
sbb
js
stos
sub
pop
icebp
inc
inc
push
ja
push
lock
pop
ret
iret
imul
cmp
pop
hlt
mov
sub
xchg
xor
cmp
outsl
mov
enter
ficoms
popa
ret
xor
sub
mov
out
out
addr16
adc
dec
sub
fcmove
xchg
pxor
xchg
incl
sbb
jbe
mulb
mov
cmpsl
jae
jno
xor
lea
dec
mov
push
or
adc
pop
in
push
jbe
jae
cmp
cmp
cmp
jle
mov
cmp
outsb
pop
jns
out
fidivrl
outsl
rcl
out
imul
dec
in
xor
addl
jecxz
push
mov
testb
lea
adc
out
mov
test
xchg
dec
pop
shrl
in
inc
dec
testl
fdiv
jg
dec
aas
sbb
jb
add
mov
jl
std
pusha
add
movsl
pop
mov
or
in
xchg
inc
jle
sbb
mov
xchg
push
iret
aas
loope
mov
push
loop
outsb
sbb
pop
outsl
frstor
pop
cmp
out
lea
popf
out
call
je
popa
ds
push
sub
sub
push
mov
cs
jp
push
cmp
ljmp
push
xchg
in
xchg
adc
in
jnp
push
pop
stc
mov
dec
imull
xchg
mov
aam
pop
test
loope
dec
lcall
mov
in
sub
aaa
xchg
sub
lods
cld
jl
aas
and
loop
and
or
mov
push
or
fistps
mov
mov
hlt
leave
pushf
ja
add
xor
mov
dec
inc
leave
fwait
loope
loop
mov
stos
ljmp
je
ret
rcl
subl
mul
jle
push
mov
adc
call
stos
ja
inc
add
aas
jg
adc
in
movl
and
push
add
sub
mov
xchg
add
out
cmp
mov
inc
adc
or
xor
xorb
mov
adc
pusha
xor
cmp
mov
adc
fidivl
jl
mov
mov
jne
aaa
cmpsb
jg
jl
fbstp
adc
cmc
sahf
mov
incl
js
inc
mov
mov
outsl
mov
orl
imul
push
xchg
and
mov
and
stos
stc
js
fs
push
fsubs
fcoml
jle
adc
sbb
push
xchg
jge
pop
add
mov
pop
jae
adc
cli
imul
add
mov
stos
out
mov
je
test
nop
adc
or
in
mov
out
inc
jp
push
and
add
xlat
adc
and
pushf
rcr
mov
mov
ret
mov
jbe
imulb
call
mov
pop
jp
push
mov
mov
sub
adc
lahf
in
add
cmpsl
mov
es
jmp
push
inc
call
pusha
xor
jge
sub
mov
stos
in
mov
cmc
in
mov
pop
push
mov
cmpps
jne
push
push
mov
inc
cmpsl
ss
pop
cmpsl
push
xor
into
pop
dec
idivb
jmp
pop
test
jmp
shrl
inc
mov
cmp
outsb
ljmp
jmp
adcb
pop
fidivs
or
mov
into
fwait
pusha
aad
lea
out
mov
jne
cmp
fbld
out
xchg
mov
out
adc
test
loopne
insl
cmp
xchg
jno
scas
fldcw
in
aaa
pusha
jl
jne
or
in
mov
push
cltd
sbb
out
mov
sub
out
adc
jmp
dec
jp
out
test
sub
mov
mov
dec
popa
mov
nop
test
andl
stc
scas
push
inc
sub
mov
and
pop
daa
aas
jne
popa
xchg
pop
notl
imul
xlat
jno
aad
push
jge
dec
sub
mov
jp
cmp
lock
scas
mov
bnd
mov
pop
inc
jecxz
insl
cmp
popa
jp
jae
mov
pop
mov
xchg
mov
mov
out
cmp
pop
pop
ror
popf
jl
or
jns
mov
jp
and
stc
dec
and
stos
into
xor
test
addr16
cmpsb
das
cmp
mov
test
fwait
push
mov
sub
test
mov
inc
andl
and
lret
aas
xchg
cli
add
and
filds
lock
fisubrs
jb
icebp
aaa
add
test
lods
cmp
pop
xor
std
ret
inc
mov
loopne
mov
fwait
out
push
xchg
mov
fcomps
mov
sahf
inc
es
xor
aam
in
jp
lret
jnp
int
sub
ljmp
cld
xchg
rclb
and
jle
fisubl
cmp
neg
lds
imul
mov
icebp
xchg
je
inc
loopne
sub
call
int
dec
iret
push
adc
test
jle
xchg
adc
cmp
sub
jge
add
xor
add
mov
mov
sti
push
scas
stos
leave
xchg
inc
cs
mov
and
jp
stos
xchg
dec
lds
lret
cld
add
sbb
sbb
mov
ja
mov
or
mov
in
push
jmp
fisubs
repz
shrl
pop
fldl
xchg
sbb
adc
pop
push
lock
add
pop
dec
mov
adc
cmp
add
sub
jmp
pop
mov
mov
lea
in
dec
lret
mov
and
sbb
pop
fxtract
lcall
mov
loop
hlt
test
xchg
out
mov
add
cmp
or
and
iret
inc
pop
pop
dec
jg
or
out
dec
fstl
popf
xchg
or
insb
or
aaa
pop
mov
cmp
xorl
jo
sub
cmp
decb
xchg
mov
xor
lods
xchg
push
xchg
jmp
f2xm1
adc
cmp
test
or
and
jnp
dec
dec
inc
ds
dec
mov
ret
hlt
fwait
dec
mov
push
sbb
jecxz
shrl
sub
lahf
pushf
ja
test
mov
fcompl
mov
mov
je
sbb
test
inc
push
int
sbb
iret
sub
ss
mov
popf
pop
idivb
ja
int3
adc
daa
stos
jmp
inc
in
test
mov
push
jp
clc
sub
aas
lock
pop
cmp
outsl
ficompl
push
stos
jg
test
popa
sti
cmp
loop
add
push
xor
cltd
mov
or
cld
dec
pop
rcl
rolb
cli
clc
add
lahf
mov
dec
add
repnz
jle
dec
push
or
lcall
adc
jns
testl
pop
clc
pushf
adc
cmp
jge
jle
sub
sub
mov
arpl
mull
cmp
jnp
sub
push
adc
mov
inc
lods
into
pop
leave
outsl
add
mov
ret
lods
or
dec
push
mov
push
sbb
xor
cli
leave
add
imul
lcall
inc
jbe,pt
xchg
sbb
inc
sub
adc
stos
mov
xchg
push
inc
mov
push
lahf
push
jns
movsb
mov
dec
aas
addb
test
rorl
ds
popf
sbb
mov
in
imul
push
jmp
fsubrl
fdivrl
mov
mov
repnz
lock
xchg
fwait
lea
rcl
cmp
mov
pop
push
sub
cli
or
push
mov
mov
mov
mov
sbb
hlt
aam
movsb
dec
cltd
loope
push
pop
orb
outsl
push
ljmp
mov
repnz
push
pop
xchg
inc
cmpsb
xchg
pusha
ds
sub
movswl
and
aad
test
jmp
xchg
adc
out
test
test
jo
bound
push
push
inc
sub
das
imul
jne
out
fisubs
inc
movb
and
add
jg
push
jnp
add
dec
xchg
dec
mov
pop
loop
and
push
loope
pop
jns,pt
test
outsl
out
fstpl
fwait
arpl
lea
mov
push
mov
sub
adc
and
xlat
mov
icebp
inc
and
xchg
pop
shlb
xor
or
jg
iret
pop
xor
sub
test
push
mov
hlt
jge
dec
pop
xchg
pop
sbbb
aas
ret
pop
ja
mov
push
push
push
rolb
dec
add
add
hlt
repnz
and
in
push
scas
cmp
xlat
das
sti
push
sub
add
or
pop
mov
pushf
leave
xlat
sub
out
mov
or
leave
in
cs
mov
rcrb
add
jmp
push
ds
leave
shrl
arpl
dec
push
stos
out
dec
or
std
add
mov
pop
maskmovq
divl
pushf
insl
scas
cmp
imul
je
xlat
mov
sbb
mov
pop
inc
adc
or
test
insl
xor
test
loope
iret
jp
pop
cmp
jae
dec
jl
loope
dec
ja
adc
mov
or
sbb
fldt
pop
jns
add
pop
add
or
movsl
mov
es
aaa
and
push
adc
outsb
iret
int
adc
mov
cmp
mov
and
dec
push
inc
xchg
pop
jbe
push
stc
cmp
jp
or
adc
test
dec
push
fsubl
repz
jl
lods
popa
cmpsb
je
test
insb
in
cmpsl
loope
test
xlat
jecxz
cmp
mov
jns
jbe
sub
sbbb
arpl
test
js
in
dec
xchg
iret
push
lret
fiadds
shl
jmp
mov
inc
xlat
pop
mov
subl
stos
adc
mov
in
sub
mov
cwtl
xchg
push
mov
cmp
std
inc
stc
or
punpckhbw
ficoml
scas
testl
xchg
shlb
cs
cltd
test
cli
or
xlat
pop
xor
ds
movsb
cs
or
mov
or
jno
add
push
outsb
ds
and
int3
ret
xchg
sbb
aad
mov
mov
pop
out
lea
test
test
jg
inc
adc
adc
loopne
pop
in
movsb
cmpsl
mov
sti
fnsave
push
add
enter
mov
sbb
mov
sub
jae
add
ret
pop
es
lret
lds
cmp
jmp
jmp
mov
or
sub
dec
ja
cmp
cmp
std
xchg
lret
nop
jmp
dec
into
test
dec
daa
mov
fbstp
in
and
cmc
or
call
insb
inc
and
inc
in
test
pop
jge
into
xor
dec
aad
cmp
push
int
or
sub
loope
mov
test
jns
fisubrl
mov
aad
sahf
pop
test
out
mov
jo
pop
push
roll
subb
mov
daa
rclb
pushf
mov
ss
jmp
push
inc
cltd
cmp
jns
outsl
push
mov
scas
mov
add
lods
dec
jnp
jnp
shlb
imul
mov
into
lock
jp
idivb
mov
xchg
mov
test
sbb
fs
idiv
icebp
and
or
dec
addr16
cmp
mov
lahf
jae
pop
imulb
testb
xchg
xor
xchg
cli
or
inc
rclb
mov
packsswb
adc
pop
push
ret
xor
stos
das
stos
mov
test
mov
arpl
cmp
add
cld
leave
js
xor
mov
and
jmp
mov
jo
mov
jno
mov
xor
and
call
dec
push
sarl
add
add
jb
in
xor
xchg
loope
push
jp
xchg
dec
cmp
cmp
out
fisubs
fwait
sub
sub
fbstp
aas
mov
and
into
out
xlat
iret
inc
shrb
scas
push
push
sub
out
cmpsb
ja
outsb
xlat
mov
scas
mov
sub
test
les
or
jae
add
shll
pop
push
add
stc
dec
rcrl
pop
add
cmp
xlat
inc
push
xor
pop
dec
and
repz
or
hlt
push
int3
scas
or
movsl
jbe
pop
pop
pop
lods
or
sbb
arpl
or
or
and
xchg
mov
inc
xchg
dec
fs
xchg
sbb
subl
push
mov
adc
jns
adc
sub
xchg
movsl
test
das
xchg
jb
sbb
mov
sarb
lret
lret
jae
hlt
mov
mov
jno
adc
jl
xor
mov
dec
fistpll
cli
in
imul
sbb
cmp
sub
push
pop
mov
test
mov
inc
pop
add
add
and
mov
shl
fisttpl
push
bound
icebp
ss
not
inc
push
mov
into
lods
movsl
pop
xchg
out
jle
mov
das
cmp
insb
push
mov
push
sub
insl
mov
cmpsb
in
out
add
inc
and
and
xchg
cltd
outsb
mov
iret
sub
repnz
pop
sub
xor
fisubrs
sub
stos
sub
mov
std
gs
push
add
pop
loope
insb
push
and
lea
xchg
test
addr16
xchg
pop
andl
mov
into
sti
dec
cmpb
stos
sbb
ret
scas
xchg
bound
in
jge
adc
adc
pop
cld
add
aam
sahf
enter
lds
cld
nop
xlat
sbb
adc
and
out
mov
fidivl
dec
lret
scas
or
dec
movsl
mov
jb
xchg
daa
adc
push
or
out
sub
int3
mov
orb
push
sbb
dec
adcb
lret
sub
push
and
and
adc
lock
aaa
xchg
mov
mov
stc
cs
aad
stc
sbb
xor
xchg
dec
fwait
dec
inc
test
xlat
mov
push
sbb
pop
or
sbb
dec
jo
push
pop
insl
xor
ret
ret
cwtl
sub
push
xchg
movsl
in
push
imulb
fwait
repnz
pop
ret
mov
sbb
loope
dec
mov
pop
filds
cmp
cmp
and
add
xchg
push
pop
mov
imul
insl
lods
rclb
and
xchg
adc
jae
loopne
enter
lock
loopne
mov
adcb
das
imul
adc
stc
xchg
and
dec
sahf
push
mov
push
int3
pushf
cmc
jmp
pop
sub
lods
in
jns
mov
or
cld
or
push
add
jne
lret
inc
cmp
push
sti
fdivs
xchg
mov
xchg
repz
aam
and
dec
add
rcrl
movsl
int3
jb
loop
pop
lret
int3
hlt
xchg
or
fcmove
push
xor
sub
xor
mov
andl
dec
sbb
dec
xlat
incl
jb
pop
imul
es
and
xchg
test
lods
mov
mov
push
clc
in
mov
cmc
shll
lret
pop
pop
mov
lock
mov
jge
out
andl
adcb
jle
xchg
arpl
lret
pop
popa
mov
adc
mov
sbb
dec
or
stc
loopne
jmp
stos
lock
mov
xchg
out
pop
cmp
idiv
clc
add
mov
loop
jae
inc
out
push
mov
xor
and
aaa
repz
cmp
ljmp
mov
mov
mov
jg
divb
mov
cmp
ret
adc
xor
scas
xor
mov
fucomi
mov
test
mov
jb
mov
xchg
adc
mov
xchg
adc
sub
cltd
sub
and
loopne
cli
test
xchg
push
mov
add
pop
rorl
adc
push
pop
notl
insb
idiv
sub
xchg
rolb
test
dec
stc
xchg
push
mov
push
and
mov
movsb
data16
insl
cmp
ljmp
mov
rorl
fisttps
xor
xlat
and
add
ljmp
pushf
adc
cwtl
push
shr
repnz
fdivs
jnp
push
xor
scas
movsb
adc
xchg
imul
xchg
dec
mov
mov
jns
push
rcl
xchg
xchg
and
jge
adc
rol
mov
push
pop
arpl
int3
pop
testl
mov
filds
or
xchg
add
mov
mov
into
pop
aaa
shll
or
sub
icebp
inc
clc
insb
sub
mov
adc
jb
gs
lahf
jp
cmc
add
inc
push
test
xchg
adc
pushf
mov
add
dec
lret
add
rclb
orb
imulb
les
test
int
xor
mov
orl
pop
mov
cmpsl
mov
xchg
lods
dec
fistps
pushf
sub
bound
lods
push
imulb
xchg
notb
dec
mov
add
or
sbbb
add
mov
insl
bound
mov
add
pop
xchg
test
into
iret
add
push
mov
nop
xchg
repz
cmp
push
sbb
movsl
push
and
test
mov
pop
mov
lds
fsts
shrb
data16
jl
xchg
mov
repz
dec
je
pop
sbb
hlt
insl
mov
cmpsl
ds
imul
xor
imull
rorb
fldpi
push
mov
imul
sub
movsl
ds
leave
in
push
add
lret
or
aam
in
test
mov
pop
sub
cmpsb
pop
mov
push
shlb
mov
jmp
pushl
orb
ficoml
dec
filds
dec
aam
fcmovb
jmp
in
xchg
test
mov
in
ljmp
in
push
call
adc
out
push
mov
push
insl
fsubr
and
test
xor
sahf
stc
mov
addb
push
lock
stc
xlat
mov
inc
lods
rcll
push
inc
inc
inc
inc
out
xchg
mov
cli
leave
xchg
dec
mov
fldl
inc
mov
popl
or
lret
xchg
cmp
es
xchg
fidivrs
stos
mov
pop
push
push
aam
and
daa
das
cli
popf
js
fildll
push
jg
roll
sub
mov
aad
and
lea
mov
nop
cld
mov
lcall
or
leave
push
mov
mov
adc
xchg
daa
sub
std
stc
aaa
cmpl
pushl
lock
repnz
aas
int3
ret
aaa
imul
loopne
les
mov
test
xor
mov
sarb
pop
push
jmp
stos
and
scas
inc
dec
insl
imul
push
outsb
lods
iret
lcall
mov
ret
push
cs
sahf
or
jg
or
sub
push
adc
cmp
lods
push
loope
fadd
push
cwtl
fldenv
pop
les
pop
jp
lea
int
stc
test
sahf
call
and
daa
add
sahf
and
pop
mov
fiaddl
test
push
push
in
addb
or
in
or
ja
dec
sbb
out
sahf
inc
xor
jle
push
fwait
shl
ljmp
mov
fnstenv
std
mov
inc
movsl
stos
and
jbe
add
push
cmpb
dec
add
rcrb
dec
pusha
sti
xor
mov
jno
mov
idivb
sub
cmp
rcr
mov
pop
xor
ret
das
dec
cli
in
ret
andl
fstps
adc
fistl
sub
push
aad
cltd
jb
data16
xchg
sub
aad
xchg
or
test
cwtl
hlt
xor
iret
pushf
push
push
inc
sub
mov
adc
ret
and
adc
jbe
lret
inc
aam
aam
add
ret
sub
ljmp
mov
and
test
sub
jnp
and
xor
mov
mov
inc
insb
lret
fildl
sub
mov
test
or
dec
xchg
jp
push
dec
fwait
cmp
push
sahf
movsl
mov
out
cmp
andl
aam
dec
inc
out
inc
adc
repz
mov
das
in
js
mov
adc
dec
call
or
lahf
dec
xchg
test
test
lods
sbbl
outsb
loopne
shlb
cs
cmp
ret
notb
jge
mov
insl
adc
out
clc
or
cltd
pop
cwtl
enter
lret
sbb
and
inc
aas
das
add
jbe
testl
fdivrs
xor
mov
shlb
cli
mov
cwtl
lret
xlat
add
repnz
rorb
add
scas
int
dec
xchg
adc
fwait
test
pop
test
sbbb
cmp
insb
mov
ret
inc
cmpsb
jecxz
and
and
xchg
add
xor
jbe
mov
xchg
jo
cmc
fnsetpm(287
xchg
adc
mov
and
outsl
repnz
lcall
fs
popf
stos
mov
loope
pop
stos
push
xchg
enter
mov
jle
mov
and
push
insb
xor
add
dec
push
insl
xchg
mov
inc
sbb
gs
push
punpckhbw
cmp
push
loopne
inc
add
cld
push
jecxz
xorb
insb
rcrl
add
dec
sub
ja
inc
push
sbb
popa
dec
adc
and
scas
pop
mov
cwtl
out
sbb
scas
arpl
lock
in
or
dec
bound
inc
cmp
test
xchg
mov
cltd
dec
fldt
movsb
add
xchg
push
fnstenv
stc
outsl
hlt
fistpl
daa
cwtl
mov
mov
fwait
sbbb
xlat
jo
das
xchg
or
arpl
adc
imul
outsl
lock
scas
ret
mov
jo
daa
jmp
lea
jae
inc
aas
adc
jl
mov
push
cmpsb
sbb
add
ret
push
inc
jbe
push
test
subl
sahf
jmp
sub
mov
sahf
xchg
je
data16
and
mov
clc
and
jae
jb
dec
xor
xor
cmp
lret
mov
aam
es
xchg
sub
out
aas
push
in
fstp
mov
mov
xchg
xchg
xchg
mov
sbb
addl
adc
xchg
data16
cmpsl
shrl
push
mov
jb
mov
loope
cli
rcl
xchg
inc
arpl
jne
sar
pop
inc
frstor
pop
sahf
and
jo
stos
sub
lea
lods
in
xchg
into
xor
and
xchg
and
mov
sub
arpl
xchg
add
cmc
mov
imull
inc
sub
adc
push
loopne
and
lods
out
xchg
stos
xor
inc
xor
push
popa
cmp
pop
scas
sbb
cmp
lahf
loop
inc
scas
mov
aas
ds
fstpl
repz
fstps
loop
mov
cli
sbb
push
lret
cmp
dec
faddl
imul
sub
push
iret
inc
scas
and
or
and
push
sbb
hlt
decb
out
in
pusha
xchg
sub
sbb
ret
dec
das
jl
jb
sbb
and
jo
insb
fidivrl
sub
daa
xchg
dec
dec
sahf
mov
decl
sbb
sub
gs
sbb
enter
xchg
ret
clc
lahf
jne
ret
add
xchg
rcrb
mov
push
das
jge
push
pop
pop
jnp
mov
adc
pop
mov
loopne
rep
pop
neg
fldln2
sbb
fadds
shrl
xor
mov
pushf
cmp
imul
enter
lret
pop
insb
rcl
leave
leave
pop
scas
mov
jmp
adc
les
hlt
sub
push
enter
cmpsb
inc
fidivs
jge
push
inc
ss
lock
dec
addl
xchg
add
or
pop
inc
mov
mov
adc
movb
and
push
xchg
frstor
in
sub
push
pop
xchg
and
pop
dec
dec
add
loop
add
inc
ljmp
xchg
shrl
xlat
cmp
cmp
ja
push
bound
dec
hlt
icebp
int
jne
jae
loop
inc
divl
mov
cmp
add
or
aam
sbb
repz
insb
roll
movsb
pop
dec
xchg
repnz
pop
int
jno
jne
cmp
jnp
and
or
inc
xor
rclb
xchg
jnp
fstl
fadds
cs
xor
pop
jl
lret
ss
mul
add
mov
or
or
sub
inc
lock
bound
hlt
out
jns
lock
bound
scas
jmp
js
adc
fisubs
mov
sbb
sbb
idivb
inc
js
mov
xor
and
ljmp
hlt
and
lahf
cld
mov
jp
sub
dec
clc
inc
ret
stos
push
push
inc
xor
fidivrl
or
push
fldenv
cmp
inc
cmpsl
jge
pushw
lods
movsb
dec
das
shl
loope
push
hlt
hlt
stos
mov
sahf
sub
outsb
xorl
orl
dec
into
xchg
and
pop
out
test
adc
ljmp
jo
inc
and
ja
inc
pop
cltd
inc
xchg
imul
cmpsl
jns
in
iret
xchg
popa
addb
sti
fidivl
daa
movsb
popa
dec
dec
push
js
int3
xor
js
sbb
rolb
repnz
push
sbb
ret
cmp
push
xchg
push
js
xor
ret
and
ficomps
mov
pusha
fbld
mov
mov
in
pop
sbb
xor
repz
xchg
test
and
mov
ja
es
push
xor
mov
in
scas
mov
in
out
or
lret
or
mov
sahf
pop
inc
pop
xor
mov
ret
sub
cli
daa
jae
adc
ret
stos
push
mov
and
jmp
xchg
mov
add
adc
lcall
pop
in
jle
inc
int
pop
std
xlat
or
inc
lds
orb
jle
sbb
sub
or
dec
or
mov
cmp
cli
push
cmc
jnp
jl
enter
xchg
gs
add
sahf
and
hlt
jns
fimuls
pop
mov
xor
sbb
mov
into
es
orb
addr16
push
in
cmpb
fimull
pop
pop
inc
sub
mov
xorl
lock
dec
mov
mov
andb
cmpb
xor
mov
pop
lea
and
adc
cli
adc
pop
icebp
pop
or
or
imul
mov
lock
pusha
test
lods
movhps
and
sbb
cwtl
inc
scas
cwtl
cmp
stos
push
pop
sbb
loopne
cld
cmpsl
pop
lock
lock
sbb
xchg
sub
mov
loopne
mov
outsb
xor
xchg
outsb
dec
incb
testl
pop
addr16
in
repz
stc
sub
out
pop
inc
add
and
xor
mov
inc
fisubs
faddl
jl
cmp
test
cmp
push
loope
pop
pop
add
lret
das
mov
loope
push
cmp
shlb
jp
movsl
add
loope
pop
and
insl
cli
jns
xchg
push
aaa
and
cltd
rorl
enter
outsb
mov
arpl
dec
sub
aaa
push
jo
mov
bound
dec
popf
push
lock
add
popa
and
adc
pop
sub
fmuls
inc
jecxz
lcall
jb
mov
xchg
push
int3
sub
es
inc
lods
aad
ss
cmpb
aam
inc
jb
cmp
cmc
jecxz
sbb
add
lds
cmp
push
in
ss
ret
fsubrl
out
or
jle
pop
stos
scas
xor
xor
roll
dec
out
cmpsb
add
xchg
in
movsb
hlt
or
push
enter
xor
sti
jecxz
ljmpw
mov
js
aad
pop
xchg
jmp
inc
lcall
and
sti
repz
lret
mov
jbe
jnp
xor
mov
sbb
cli
loope
insb
mov
out
push
inc
mov
call
call
mov
mov
in
inc
add
pop
add
ds
les
cltd
std
ja
mov
lret
adc
and
inc
push
cmc
add
imul
mov
dec
or
shlb
mov
jbe
mov
repz
repnz
movsl
fdivrl
ret
das
inc
bnd
jne
push
xor
cmove
jnp
mov
or
insb
daa
dec
inc
jecxz
pop
loope
xor
pop
sbb
fdiv
push
inc
decl
inc
xor
rclb
daa
mov
cld
lret
dec
mov
jnp
movb
test
ficoms
add
and
test
push
loope
sti
mov
lret
dec
adc
adc
dec
out
mov
mov
or
jno
push
inc
adc
cmp
cli
push
push
je
stc
mov
adc
sbbl
sahf
aas
insl
adc
push
lcall
std
std
inc
stos
popa
adcb
and
out
mov
fistpll
bound
ja
pop
sub
pop
and
fidivl
aas
fs
mov
and
inc
cmc
loope
out
imull
cmp
ficoml
shl
js
xchg
sub
out
iret
pop
jne
xchg
aaa
fs
or
mov
jne
xlat
lret
pop
mov
push
jb
adc
arpl
aam
and
adc
jl
xchg
adc
jle
push
shlb
pop
mov
arpl
dec
in
fucomp
lods
fcoms
enter
addb
push
into
out
scas
sbbl
sbb
inc
movsb
dec
test
cmpsb
xlat
loopne
xlat
cmp
out
rol
push
lcall
loope
lret
imul
pop
and
mov
insl
adc
adc
adc
arpl
movsl
nop
add
sarb
pop
aaa
inc
enter
into
inc
orb
rclb
pop
cld
inc
push
xchg
ss
rorl
testb
es
pushf
adc
xchg
xor
jmp
lahf
mov
adc
pop
dec
sub
add
xchg
ds
jne
testb
xlat
jbe
or
ds
lds
sti
push
mov
repnz
inc
or
xchg
mov
jp
jb
gs
inc
imul
iret
les
cs
stc
or
add
bound
mov
xor
cmp
xchg
jnp
rcrl
adc
imul
xchg
int3
lret
int3
sub
je
in
push
std
iret
inc
ficompl
inc
fdivrs
aaa
lea
sub
mov
push
push
adc
xor
test
test
lock
push
int
jnp
and
je
mov
stos
jne
lock
adc
and
adc
int
repz
imul
les
mov
ja
jl
bound
lret
sbb
mov
sub
dec
js
push
pusha
nop
daa
jge
loop
cwtl
dec
xchg
arpl
push
mov
sbb
in
aad
push
adc
pop
mov
data16
pop
and
fisttpll
loope
sub
lock
arpl
insl
or
sbb
push
paddsb
and
sbb
pop
lcall
rcl
adc
mov
mov
sbb
movsb
test
adc
sbbl
mov
negl
xor
cmp
ljmp
xor
jg
pop
test
mov
hlt
push
cmpsb
adc
jo
sub
inc
andl
test
mov
pop
adc
into
mov
popa
sbb
ja
cmp
movsl
and
inc
push
test
xchg
pop
addr16
movb
cmp
push
lea
xchg
and
add
or
test
movsb
inc
cld
pop
sub
aad
inc
xor
inc
jno
xlat
hlt
hlt
mov
jl
mov
notb
xor
pop
rcrl
push
andl
popf
int
and
inc
sahf
dec
xlat
push
xor
mov
jl
shll
pusha
adc
adc
xchg
pop
fidivrl
add
jbe
pop
adc
imul
mov
test
decb
or
mov
lock
loopne
xchg
imulb
std
fwait
roll
cmp
push
and
jle
test
add
push
xchg
lcall
pop
rol
pop
cltd
in
icebp
iret
cmc
fs
mov
mov
cmpsl
mov
enter
shl
jge
sub
sti
pop
inc
and
add
mov
pop
mov
or
mov
jmp
je
daa
clc
push
mov
jne
push
or
inc
jp
sub
or
add
aad
lea
add
push
mov
fildl
jmp
addr16
xor
test
cmp
jle
cli
sub
mov
scas
test
mov
xor
lcall
add
arpl
or
or
jns
dec
adc
lock
mov
xchg
je
repnz
and
in
push
mov
or
and
and
pusha
int
imul
xchg
aam
leave
ds
cmp
lea
int
pop
cmpsb
mov
imul
mov
lret
pusha
and
popa
lahf
outsl
xchg
dec
mov
inc
mov
pop
xchg
push
sbb
and
hlt
adc
mov
adc
pop
cmp
movsb
and
sarb
andb
pop
mov
jnp
inc
insl
push
jl
jl
scas
sbbl
ret
hlt
inc
xchg
cli
xchg
rcrb
pop
test
stos
jle
sub
mov
push
nop
cwtl
sub
orb
mov
mov
mulb
movsl
fmull
out
pusha
dec
or
clc
lret
inc
jle
cld
dec
wbinvd
imulb
mov
insb
in
mov
mov
jnp
or
cmp
loopne
stos
mov
sahf
ljmp
xor
xchg
out
stos
int
insb
mov
or
leave
xchg
enter
push
nop
jnp
sub
xchg
cmp
add
cmp
test
sbb
std
jge
push
cmp
leave
xor
and
stos
xor
les
iret
repz
add
roll
in
pusha
mov
add
loopne
movsb
pop
in
jbe
sbb
inc
out
xorb
adc
shlb
pusha
jo
scas
adc
test
movsl
fimull
push
cmp
fstps
push
loopne
cmp
sbb
pop
std
sub
mov
inc
hlt
jp
idiv
in
xchg
rcll
loop
add
stos
call
jecxz
push
ds
add
or
jge
cmp
mov
push
rep
mov
push
pop
inc
sbb
push
shll
mov
inc
mov
movsb
rcll
gs
jg
jb
bound
xor
mov
push
stos
push
cli
mov
out
lret
insb
insb
scas
int
clc
jge
dec
mov
cmp
fdivr
aad
cwtl
inc
sub
fldl
movsb
adc
inc
les
les
push
in
cmp
xor
xor
dec
mov
push
loopne
jle
fsubrl
mov
ds
cmp
out
jle
jo
rclb
inc
sbb
xchg
mov
adc
lods
jmp
pushf
imul
dec
fdivrp
sub
lcall
or
sub
insb
sub
stos
inc
arpl
lock
inc
sub
or
mov
std
rorl
xchg
imull
test
mov
out
push
adc
push
adc
lock
push
xchg
inc
sbb
ret
lea
jg
and
stos
xor
jbe
sar
or
jbe
fidivrs
pop
adc
lahf
out
dec
fldcw
dec
mov
jecxz
pop
adc
dec
cmpsb
sub
inc
lock
movsb
inc
bound
jecxz
je
mov
add
rcll
push
enter
aam
pop
fisubl
and
pop
stos
arpl
dec
lcall
data16
mov
sbb
hlt
dec
dec
rcll
das
sub
pop
out
pop
shlb
push
in
loope
cld
js
cmp
outsb
cmp
data16
inc
push
leave
cmp
bnd
sbb
mov
mov
push
push
jns
and
jns
cs
shlb
dec
jae
cmp
shlb
ds
repz
mov
or
xchg
xchg
into
mov
add
lea
lret
int3
jecxz
fcmovbe
test
scas
ret
ljmp
fldcw
arpl
jb
lods
mov
add
xchg
in
ja
and
dec
gs
sub
push
cmc
xchg
or
sbb
pop
cmp
mov
adc
xlat
cli
ror
dec
int
jge
and
data16
and
int
sahf
fdivrs
cltd
push
fdivp
and
je
repnz
and
dec
xchg
fs
add
xchg
pop
test
mov
mov
pop
stos
mov
mov
lcall
in
out
xchg
jno
enter
movl
ss
in
push
mov
sbb
and
sbb
inc
pop
out
and
imul
mov
icebp
inc
sbb
ficomps
js
dec
je
fdiv
add
inc
in
mov
ljmp
jnp
data16
cmp
insl
pop
fnstenv
mov
mov
loope
ljmp
inc
pop
and
arpl
dec
lods
jnp
or
xor
dec
loop
and
imul
fs
xor
cmp
push
sbb
xor
out
push
fisubl
jmp
xor
mov
and
daa
lret
sub
xor
mov
push
cmp
fldlg2
mov
stos
xchg
into
xchg
add
cld
or
scas
test
xor
jg
sarb
adc
sub
push
cltd
mov
sbb
pop
jne
ret
cmpsb
test
divl
mov
mov
test
mov
jge
mov
dec
inc
jno
push
add
jb
lea
shlb
mov
mov
int
xchg
mov
sbb
dec
or
pop
cmc
sbb
cmc
mov
sub
push
jecxz
jl
lret
pop
fcomps
dec
mov
lds
mov
inc
pop
inc
jbe
or
adc
imul
adc
adc
inc
loope
mov
jae
mov
adc
in
add
pop
add
into
push
push
mov
mov
int
ja
cmpsl
arpl
xchg
inc
and
loope
imul
les
cmp
cmp
ret
stos
inc
mov
sahf
pop
hlt
ja
ret
hlt
xchg
lret
cmp
xchg
clc
cmc
cs
sub
xor
notl
or
push
loope
adc
dec
lods
je
addr16
out
mov
jl
jg
int
xor
lahf
pop
lods
push
dec
cmp
add
cvtdq2ps
cwtl
sbb
test
cmp
push
in
sub
dec
jl
and
nop
test
lock
jbe
aad
mov
mov
out
lds
subb
pop
leave
push
pop
push
jp
inc
add
call
jnp
aaa
sbb
dec
mov
xor
mov
out
add
rcll
test
frstor
data16
pop
mov
push
das
cmpsl
push
repnz
dec
adc
sbb
xor
add
adc
test
fmul
imul
test
adc
adc
sub
and
sub
mov
imul
lods
frstor
pop
pushf
and
xor
inc
lds
je
adc
mov
sub
mov
jl
imul
add
jmp
pop
jle
mov
push
fisubrl
ret
push
rcll
flds
xor
insl
dec
jmp
clc
lds
or
addr16
push
and
vpsraw
dec
pop
shlb
popf
pop
iret
shlb
cmp
es
push
push
imul
inc
sbbl
mov
inc
and
push
push
shl
test
rcll
sbb
jnp
clc
sub
cmp
mull
pcmpgtb
into
leave
sbb
xchg
or
adc
inc
jbe
xchg
aam
dec
add
mov
and
jns
add
ds
adc
xor
jnp
addr16
scas
adc
or
and
mov
in
sbb
loopne
sub
scas
cmc
rcl
fmuls
pop
push
xor
fiadds
enter
sub
sbbb
movsb
js
jnp
add
dec
pop
mov
mov
add
xlat
add
out
dec
mov
push
mov
lods
cmpl
cmp
js
push
int
notb
inc
enter
xor
add
fsubl
pop
and
inc
repnz
sub
loop
jmp
adc
jmp
sbb
out
inc
inc
inc
nop
shl
inc
jae
orb
jmp
movsb
call
mov
pushf
xchg
push
jmp
jg
adcl
push
adc
or
lahf
ret
mov
call
mov
dec
push
out
aaa
pop
jecxz
fisttpll
sbb
cmp
movd
xchg
fcoms
dec
add
ret
jl
mov
insb
mov
and
arpl
in
push
mul
pop
xor
jmp
outsl
jl
adc
pop
jb
or
incb
popf
jl
lods
ret
test
inc
or
adc
dec
pop
cmp
lret
dec
sub
jl
out
mov
inc
dec
fcoml
sbb
dec
jl
adc
outsl
fmull
inc
dec
stos
test
mov
mov
pop
sub
cwtl
cmc
clc
jns
data16
sbb
xor
push
les
inc
fdiv
sbb
mul
jp
ja
sbbl
push
cmpl
cltd
push
mov
repz
ss
adcl
mov
jp
iret
mov
mov
jl
mov
adc
cmp
and
faddl
xchg
fisubrl
cmp
mov
mov
push
sarl
sub
xchg
out
pushf
push
shlb
sub
outsl
sub
fcmovbe
loopne
cld
push
fidivs
sbb
and
adc
or
and
inc
jns
rorb
movups
sub
mov
pop
ja
dec
ret
jge
add
xlat
pop
add
in
lahf
xchg
add
ja
movsl
cmp
out
stos
scas
xchg
imul
dec
xor
bnd
add
leave
in
pop
fwait
out
jmp
in
jecxz
pop
push
enter
hlt
cmp
fsubs
addr16
or
add
stos
lods
pop
xchg
jae
and
cmp
stc
into
and
jg
mov
das
sarl
test
mull
mov
mov
movsl
stos
adc
in
add
xorb
mov
ja
addl
or
cmpsb
push
add
push
ja
in
ds
les
into
jae
sub
sbb
sub
and
pop
inc
jl
xor
mov
mov
pushf
jp
mov
in
adc
sub
imul
rorl
leave
fsubs
imul
adc
shr
pop
cmpsl
loope
mov
mov
push
xchg
xchg
and
fs
mov
add
jno
movq
repz
das
test
cmc
jnp
or
sub
ficomps
ds
mov
pop
dec
push
mov
test
and
popa
or
mov
inc
imul
les
jae
sahf
les
jg
in
jnp
sub
cmpb
int
mov
aam
fcomps
adc
cwtl
lret
aaa
shrb
pop
fmulp
add
dec
push
jae
mov
repnz
or
test
in
adc
lds
cmpsl
in
mov
lods
in
iret
jg
fcmovnb
mov
fs
int
xchg
mov
add
pop
push
pop
and
popa
jg
jl
lahf
sub
mov
mov
icebp
out
rcpps
pusha
or
xlat
sub
sub
sbb
push
pusha
ljmp
int3
mov
jmp
xor
cli
mov
lock
scas
dec
adc
add
stos
inc
adc
mov
mov
mov
push
jnp
jns
push
in
inc
les
aad
scas
push
fwait
subl
mov
es
lcall
mov
sahf
push
adc
sbb
dec
iret
rolb
loope
ss
pop
inc
add
mov
or
scas
aad
pop
nop
jg
pop
inc
jb
add
xor
mov
xor
and
int
jmp
jle
push
clc
mov
inc
inc
shrl
int
cmp
call
aaa
sbb
loope
cwtl
iret
cmp
sub
jl
cmp
testb
jae
in
jg
cmp
movsb
daa
mov
fdivrl
out
mov
sti
repnz
dec
dec
add
cmp
leave
outsb
push
push
xchg
sbb
out
mov
popf
aas
loope
mov
jbe
nop
mov
xor
inc
in
pop
add
jl
mov
int
xchg
sub
gs
imul
out
add
addr16
and
cmpsb
cmp
fs
cs
inc
cmpsl
add
dec
fistps
add
iret
test
and
std
xor
jle
jle
mov
ficompl
push
mov
fs
jge
into
pop
fcmovnu
xor
sbb
xorb
jb
cwtl
imul
jge
movsl
inc
aad
fldenv
test
xor
fiaddl
cli
mov
mov
sub
xchg
jg
add
xor
movsb
push
mov
mov
ret
dec
sbb
fs
push
or
ja
fucomip
icebp
adc
aaa
xchg
xchg
inc
mov
cmpsl
mov
push
xchg
xchg
xor
add
fnstsw
mov
sbb
jns
aam
sbb
dec
or
insl
inc
aaa
mov
pushf
aam
sub
fistps
fldenv
addb
xchg
xchg
pop
inc
mov
mov
jmp
icebp
lea
xor
in
xlat
pop
push
push
ds
loop
fwait
add
aam
jo,pt
sti
cmpsl
in
loop
xlat
mov
add
xorl
in
idiv
cli
push
rol
mov
and
adc
jge
xchg
lods
cmc
xchg
and
fst
and
add
pop
push
inc
enter
mov
mov
mov
sub
xor
rorb
xchg
das
push
dec
xchg
sbb
int3
dec
fidivrl
in
xor
push
lea
mov
push
movsb
popa
push
aas
testl
cmpsl
inc
pop
cmp
and
fldt
into
lahf
mov
arpl
out
xlat
shll
push
aam
cmp
popf
fistl
inc
neg
fwait
jns
fwait
inc
sub
fwait
xchg
cli
inc
shrb
popl
outsb
nop
xchg
mov
cmp
fnstsw
cltd
dec
sub
in
xor
xlat
pop
enter
outsb
and
mov
xchg
mov
shrb
inc
xor
push
cwtl
imul
dec
mov
mov
or
cld
pop
popf
inc
jl
xlat
sub
lea
shrl
enter
lds
pusha
sbb
and
xor
fisubrs
jp
insl
out
cli
scas
mov
out
imul
fbstp
in
jb
mov
sbb
mov
mov
mov
fs
xor
data16
add
in
cli
inc
or
mov
sub
xor
lcall
test
call
fdivp
loopne
sti
lds
mov
nop
arpl
or
mov
add
mov
arpl
inc
jecxz
sbb
xchg
inc
sub
cli
adc
mov
lods
lea
adc
int
sti
lcall
sub
shll
orb
jmp
fadds
leave
les
dec
or
add
mov
ret
pop
jb
out
cld
jbe
aaa
ljmp
xlat
inc
leave
enter
fmull
test
adc
inc
les
or
or
pop
roll
sub
fdivrp
div
pop
fldt
sub
test
xor
sbb
inc
gs
sbb
adc
xor
dec
mov
test
mov
mov
fstpl
gs
test
mov
push
icebp
dec
xchg
fwait
movsb
fdivr
push
push
std
mov
xchg
dec
lcall
mov
lret
fisttpll
sarb
adc
arpl
test
gs
cld
sti
mov
cmp
iret
out
xor
mov
fnstcw
pop
cmp
lcall
cwtl
ja
dec
mov
addr16
repz
xchg
pop
cmc
fistl
insl
es
sbb
aaa
dec
fcmovb
jle
xor
leave
adc
adc
imul
cmp
mov
hlt
dec
loopne
xchg
mov
cmpsl
sub
push
adc
mov
rcrb
push
xlat
adc
dec
filds
and
in
sub
je
mov
cwtl
and
mov
jge
mov
pop
ds
scas
pop
out
lock
and
popl
mov
mov
add
rolb
and
or
nop
mov
inc
pop
in
pop
rolb
aam
jns
sub
cmp
sahf
xchg
out
sbb
cmp
mov
mov
lret
stos
dec
arpl
cmp
out
fidivrl
sub
pop
pop
es
push
cmp
int3
jmp
cli
data16
cmp
insl
test
cltd
and
adc
push
stos
fistps
mov
push
xchg
xchg
pop
and
pop
adc
cmp
popf
ficoms
pop
cmpb
outsl
pop
insb
cld
adc
inc
aad
pop
cmpb
call
cmc
nop
divl
data16
inc
fadds
test
add
cmpsl
jg
dec
xor
cmp
orb
and
dec
int3
fcmovne
sbb
xchg
in
cmp
test
fisttpl
jge
dec
push
push
push
mov
out
outsl
lods
add
dec
pop
ret
inc
mov
inc
xchg
imul
xor
dec
lods
cltd
test
push
jo
and
push
pushf
popf
call
in
cmp
push
cltd
outsb
popf
mov
push
and
loop
stos
or
movsb
push
test
pop
sbb
je
mov
jp
or
jecxz
js
or
inc
repnz
mov
add
outsl
jne
call
insl
xor
fistl
mov
test
and
arpl
dec
xchg
pop
dec
inc
scas
push
xor
nop
xlat
dec
or
xor
bound
xor
xor
jae
inc
ficoml
xchg
imul
mov
xchg
pop
sti
or
add
mov
dec
jns
nop
aam
je
ficoml
push
sub
cmp
int3
mov
repz
jo
inc
in
cmp
negb
jl
gs
stc
dec
xor
cmp
mov
inc
js
and
jge
xchg
mov
and
mov
adc
add
repnz
arpl
mov
lret
fcoml
lahf
test
inc
mov
psrad
pop
push
sbb
add
leave
ret
aad
xchg
imul
dec
dec
and
xor
inc
xchg
loop
xchg
push
stos
iret
lret
cmp
sub
jno
ja
sarb
and
or
jge
cld
imul
iret
xorb
rcr
mov
adc
decl
lea
sub
aaa
rorb
dec
xchg
loop
rorb
movsl
sub
cli
rep
adc
or
mov
jnp,pt
inc
ret
mov
xchg
fiaddl
movsb
mulb
sarl
ficoml
xor
pop
and
dec
push
ss
push
dec
test
xchg
ja
std
lahf
cmp
inc
inc
pop
add
xchg
and
das
outsl
xor
jo
ja
test
popa
inc
fcompl
mov
cli
imul
data16
push
ja
add
subb
movsb
daa
add
movsl
inc
xor
jb
jecxz
popf
jecxz
inc
fisubrl
negl
sbb
cmp
mov
cld
mov
popf
sub
mov
mov
or
cmp
cli
jmp
int
sub
ret
sub
mov
enter
xchg
pop
je
call
adc
xlat
sub
mov
mov
xor
push
inc
adc
inc
push
sbb
mov
call
iret
test
iret
inc
jmp
jbe
lock
in
xor
or
mov
mov
sub
cmp
or
inc
xchg
loop
jo
adc
cli
enter
out
adc
ret
lods
dec
push
and
mov
push
dec
and
cli
jp
ja
leave
shlb
fldl
adc
jns
push
loop
loopne
add
ds
xor
mov
add
into
push
adc
jae
cmc
adc
outsb
mov
inc
idivb
mov
xor
gs
out
inc
adc
repz
pop
adc
mov
in
es
mov
xor
pop
mov
sbb
orb
cmp
mov
add
xchg
sub
and
jmp
pop
imul
loop
popf
je
xchg
jne
pop
inc
mov
mov
daa
js
xlat
xchg
dec
popa
cmpsl
lods
sahf
ss
scas
pop
xchg
mov
mov
jl
sub
pushf
rolb
sub
pop
scas
in
in
sbb
push
test
imul
fbstp
mov
out
or
aam
negb
cltd
push
cmpsb
xchg
push
aad
clc
icebp
jbe
into
repnz
dec
lea
pop
xlat
sub
mov
das
in
sub
out
push
mov
pop
daa
jg
ljmp
js
jne
stc
daa
jmp
adc
sub
dec
je
movsl
mov
fwait
dec
int3
lcall
fcoms
out
insl
mov
and
loop
xchg
int
cltd
sbb
inc
sbb
outsl
dec
mov
xchg
fisttpll
jno
sti
mov
jmp
push
and
mov
jl
int3
pop
fs
pop
mov
sub
and
add
mov
ficoms
das
outsl
mov
cs
sahf
pop
mov
xchg
test
xor
test
ret
mov
fimull
ss
int
loop
das
jecxz
leave
movsl
cmpsl
nop
out
cmp
cmpsl
sbbl
insl
test
mov
lods
mov
pop
xchg
push
dec
add
pushf
push
mov
fwait
lea
fcomps
negb
cltd
and
sti
pop
sub
js
arpl
mov
mulb
add
xor
xlat
imul
add
push
mov
or
adc
inc
mov
sub
outsl
push
movsb
nop
lahf
xchg
dec
mov
subl
cmpsb
fcmovb
xchg
and
int3
pop
loop
pushf
jg
cmp
lods
sub
xchg
mov
xchg
inc
sbb
sbb
cmp
mov
or
mov
iret
add
inc
sub
push
out
cld
xor
mov
add
popa
std
pop
sub
jg
aaa
sub
rcrl
sbb
xchg
xchg
xorb
mov
mov
cs
ja
inc
aad
out
xchg
pusha
js
aam
sahf
add
xchg
push
add
inc
lahf
xchg
mov
imul
in
xlat
adc
incl
push
cmc
dec
mov
cmp
outsl
lret
mulb
dec
stos
adc
pop
aad
mov
lock
enter
mov
bound
dec
cld
mov
aaa
push
mov
pop
jb
stos
mov
movsl
xchg
xchg
cmpsb
cmp
loop
pop
in
jae
pop
push
test
fs
fstps
cs
aaa
lds
out
stos
sbb
mov
dec
lods
ja
ret
adc
in
or
lock
xchg
xchg
sub
pop
push
jnp
rcl
clc
cmpsb
sbb
sub
push
dec
jno
out
mov
imul
jge
add
pop
inc
dec
shll
leave
outsb
or
shlb
sub
mov
test
fs
cld
jle
mov
hlt
int
pop
pop
lds
add
or
into
repz
subb
in
mov
imul
xor
cltd
roll
jns
test
in
bound
mov
lahf
pop
sbb
xor
stos
and
scas
or
dec
push
jle
or
lahf
into
inc
outsl
push
ljmp
jge
mov
sub
and
repnz
dec
int
fdivl
adc
mov
sub
test
idivl
cmp
lcall
xchg
scas
cli
fiadds
jo
inc
dec
scas
out
sbb
and
hlt
and
inc
xchg
js
pop
fs
lock
sbb
jno
cmp
and
fsts
mov
jg
xchg
push
pop
inc
push
loop
sub
adc
mov
sarb
cmpsb
mov
sbb
test
or
inc
lock
push
push
cltd
nopl
int
out
jno
xchg
scas
inc
sets
lret
pushf
jnp
mov
pop
xlat
cmpsb
loop
ret
inc
je
call
insb
int3
and
mov
insb
test
adc
jmp
mov
movsl
sbb
loop
lahf
imul
inc
jne
jns
xchg
and
jno
hlt
push
or
mov
lods
mov
or
push
xor
adcb
adc
frstor
xlat
movsl
lcall
cmp
int3
cmp
adc
repz
push
ret
icebp
xor
out
adc
pop
mov
incb
mov
lcall
xlat
cmp
arpl
cmp
movsb
fidivl
pusha
imul
fisubl
fistpll
mov
cltd
lea
or
into
push
push
mov
cwtl
inc
ds
addr16
jnp
or
mov
xchg
int
xchg
jmp
fldt
mov
push
dec
xor
dec
mov
roll
jb
sbb
cmp
push
pushf
cmpsb
mov
xchg
and
xchg
or
push
pop
insb
pop
and
arpl
sub
lret
xchg
in
je
push
rorl
xchg
mov
push
fcoml
push
sub
pushf
mov
xchg
ss
xlat
mov
out
jno
mov
out
in
mov
jnp
pushf
aaa
jle
add
xchg
xor
jnp
mov
loop
pop
fisubs
sbb
rclb
loop
or
push
aaa
call
call
push
or
mov
pop
jbe
mov
int3
mov
cs
fidivrl
mov
test
push
dec
addr16
cmp
loop
mov
orl
mov
imulb
imul
dec
aam
popa
adc
loop
xor
or
sbb
inc
cmp
loop
push
test
movsb
enter
dec
xchg
hlt
jecxz
ja
pop
cmp
sbb
push
int3
jmp
stc
pop
insb
sarb
movsb
xor
repz
xor
test
daa
add
cmpsb
or
mov
xor
xchg
jge
mov
dec
ljmp
scas
jno
inc
xorb
jbe
ret
into
mov
pusha
push
push
in
stos
mov
fnsave
mov
xlat
test
enter
lcall
scas
push
sub
xchg
fwait
push
mov
xchg
add
or
xor
or
push
adcb
fldt
decb
sub
and
fcom
xor
sub
fwait
stc
and
mov
and
sbb
loop
aam
inc
out
push
sub
push
inc
push
andps
adc
sbb
adc
cmp
xchg
sahf
inc
sbb
push
push
adc
out
ljmp
jp
idiv
or
fildl
dec
je,pn
sbb
dec
push
aaa
mov
aaa
and
seto
add
or
jge
push
data16
jns
mov
cmpsl
add
cmp
mov
jb
data16
sub
hlt
add
adc
xor
and
in
int
lcall
iret
outsb
clc
pop
push
jg
jle
mov
adc
lock
add
shll
cwtl
jb
jno
outsb
pop
cmpsb
rcrb
arpl
daa
fidivrs
movsb
icebp
push
jl
mov
in
fcmovne
mov
in
dec
ret
jmp
pop
mov
add
pop
enter
cmp
stc
or
jecxz
loop
loop
leave
ud2
sahf
adc
les
stc
mov
aad
test
pop
sar
adc
push
jns
adc
or
add
fcmovbe
repnz
xchg
insl
std
das
arpl
inc
ds
outsl
add
sbb
pop
add
scas
cld
sahf
mov
sbb
adc
sbb
push
test
outsl
push
jbe
ds
imul
iret
xor
cmp
xor
mov
add
xor
xor
test
mov
rcrb
and
push
out
int3
stos
sub
adc
add
mov
jnp
ljmp
jne
icebp
in
push
pop
mov
push
imul
mov
daa
leave
fwait
ja
and
dec
hlt
xor
xchg
stc
lods
jbe
pop
sub
insb
mov
imul
xchg
add
or
push
dec
repnz
mov
mov
and
pop
jae
filds
loop
push
cmpsb
enter
sub
xchg
jno
push
ficomps
insb
sub
sbb
std
repnz
push
jp
xchg
loop
lea
outsl
outsb
cmpsl
dec
jg
setno
jp
mov
and
push
cmc
sbb
out
mov
out
inc
and
in
adc
ret
cltd
test
lock
sub
jg
inc
movsl
adc
pusha
and
sub
push
xchg
imul
jb
jge
mov
and
pop
repnz
cs
loope
cltd
out
mov
push
sarb
xchg
pop
loope
loope
push
xor
pop
out
dec
test
movsl
or
adc
dec
adc
add
subb
pop
xor
adc
lcall
pop
je
mov
pusha
aas
xchg
fisubrs
add
mov
and
mov
scas
cld
clc
jb
lcall
nop
or
xchg
adc
in
mov
add
sub
movsl
and
pop
test
pop
pushw
cltd
inc
loope
cltd
and
aaa
jl
andl
and
fcomps
mov
repnz
add
add
xlat
int
push
xchg
mov
add
jg
sarl
pop
sub
mov
sub
jp
pop
pop
cmc
lock
mov
cmpsl
popf
mov
adc
pop
xor
adc
leave
jge
pop
fnstenv
mov
dec
or
lock
xor
fsubr
repz
int
mov
add
imul
push
mov
outsb
insl
cmp
pop
ja
insb
fdivr
mov
scas
inc
jb
or
xor
lds
mov
imul
or
inc
ficoms
push
xchg
dec
cmp
sbb
sbb
jp
sbb
xorb
stos
aam
adc
dec
pop
inc
dec
xchg
iret
test
lock
xchg
test
inc
aam
jge
out
sahf
sbb
fstpl
sub
and
insb
jl
cmp
daa
add
fisttpl
mov
lods
push
out
loopne
adc
cmp
aaa
insl
xor
inc
inc
repz
add
std
cmc
jbe
pop
push
stos
and
mov
popa
cmc
daa
mov
add
xchg
sbb
and
scas
stos
mov
lods
rclb
push
jmp
or
jecxz
push
testb
mov
push
stos
das
in
xlat
fstpt
ret
out
xor
and
inc
mov
jle
mov
aas
mov
cwtl
adc
xor
jae
es
stos
sub
arpl
inc
call
or
repnz
adcb
pop
xchg
subl
loop
mov
xchg
mov
dec
mov
mov
push
dec
icebp
cmpsl
xor
repnz
test
cmp
lret
sub
mov
inc
cmpsb
jp
jl
leave
mov
jg
mov
enter
les
cmpl
idiv
xor
lods
push
mov
sub
lods
dec
imul
inc
incb
lds
aaa
std
jb
iret
hlt
shrb
dec
subl
in
push
inc
inc
cmp
ret
jg
add
jecxz
enter
xor
lret
setl
jnp
ficoms
mov
pop
pop
sti
mov
fcoml
xchg
ss
lds
add
lods
ja
mov
rcl
stos
out
mov
lock
mov
imul
jg
and
ss
mov
je
mov
iret
mov
sub
out
fucomip
pop
push
mov
das
addr16
mov
iret
and
aaa
stos
mov
xchg
aad
dec
cmpsl
mov
lods
in
or
adc
jnp
jae
dec
xor
loopne
lret
ss
xchg
xor
xchg
inc
xchg
pop
jecxz
lret
mov
cli
jp
and
gs
pop
push
cltd
cmc
push
mov
fstpt
mov
add
jb
add
xor
push
push
ljmp
fnsave
cmpsb
imul
sub
movsl
sbb
dec
call
es
sbb
rorb
jmp
jbe
popa
inc
andb
es
push
pushf
int3
xchg
jg
sub
fsubs
outsl
sbb
fisttpll
mov
mov
fisttpll
sub
lahf
lods
xor
sub
in
insb
test
or
pusha
das
add
sbb
xor
inc
jmp
filds
push
sub
addr16
fisttps
mov
cmp
movsl
and
stos
enter
insb
xchg
call
jg
sbb
add
aam
and
repnz
cmp
xchg
gs
scas
push
xchg
sbb
aas
add
dec
dec
movsl
jecxz
es
ds
cs
pop
mov
jnp
push
inc
mov
mov
insb
lret
ret
push
pop
sbb
nop
fwait
loop
clc
ret
pop
pop
movsl
jns
xchg
ja
bnd
xchg
cld
push
mov
xlat
shlb
gs
ret
mov
mov
mov
mov
dec
fs
sub
inc
jge
or
pop
push
jb
test
daa
jne
dec
outsb
jnp
mov
cwtl
jo
adc
jmp
mov
vunpckhpd
jne
inc
lock
lret
push
mov
push
and
out
cmc
out
outsl
rep
fcmovb
xchg
xor
mov
stc
inc
ja
icebp
daa
inc
jg
pop
jnp
inc
jge
cld
mov
leave
pop
jnp
sub
lcall
pop
pop
add
ret
imull
xchg
inc
sbb
into
roll
inc
sti
scas
pushf
shlb
sub
jle
cwtl
je
cld
pusha
jg
clc
sub
adc
cmp
sbb
mov
mov
xor
bound
mov
sti
add
mov
add
mov
rcl
sub
pop
outsb
inc
jne
bound
jp
adc
hlt
popf
repz
int3
outsb
repnz
nop
dec
ret
out
push
insb
imul
fwait
popa
jno
das
cmp
cmp
inc
cmp
jg
mov
push
popf
jb
pop
and
cmc
pop
negl
push
push
sarl
je
lds
fcmovne
jl
aaa
or
js
sbb
xchg
das
mov
inc
test
add
notl
lods
leave
pop
test
aam
mov
pop
xchg
rcrb
arpl
lea
sbb
push
data16
loopne
int
inc
dec
popa
lret
and
inc
adc
add
and
pop
out
mov
xchg
xchg
mov
sbbb
shl
dec
mov
ret
xor
and
jbe
sarl
out
mov
sub
pop
orl
nop
dec
jae
pop
das
imul
iret
aas
lahf
out
pop
cmpsl
inc
lahf
shl
cmp
out
push
and
xchg
fcmovbe
cld
enter
dec
fnstcw
lcall
and
xchg
jns
or
test
outsb
xchg
loop
es
push
inc
lcall
aas
jmp
and
xchg
adc
xchg
mov
popa
pop
sub
shlb
inc
sbb
in
pop
sub
pusha
outsb
sbb
in
ret
shr
mov
jbe
das
and
lahf
insb
out
data16
jecxz
push
and
mov
imull
inc
mov
int
mov
loop
add
shll
inc
out
push
rorl
mulb
add
dec
cmpb
test
mov
mov
jnp
xchg
add
pop
inc
mov
cmp
hlt
dec
and
les
repz
and
mov
xchg
jae
std
and
dec
aad
xchg
jns
mov
movsl
repnz
push
rcrb
repz
in
cld
in
adc
arpl
mov
mov
fdivrs
pop
lds
lcall
loope
ja
je
and
mov
xchg
pop
pop
pop
outsl
loope
fdivrs
xchg
sbb
jbe
xor
or
mov
cmp
es
cmp
pop
dec
mov
mov
stc
jae
nop
imul
adc
mov
xor
and
pushf
mov
sti
push
xchg
addr16
insb
out
lea
les
inc
mov
stos
ss
push
lret
adc
pop
xlat
cmp
gs
pop
cmc
cmp
mov
xchg
loop
pop
inc
repz
push
and
bnd
cmpsb
mov
push
or
out
aad
fcomps
out
cld
lret
inc
push
sub
jo
jmp
in
pusha
jle
sub
sbb
hlt
and
mov
xchg
fisubrl
xchg
popa
xchg
or
js
es
jg
xor
stc
lods
xchg
xor
or
cmp
insb
insb
xor
xchg
cwtl
push
mul
testb
add
scas
lahf
mov
aad
fsubs
insl
push
inc
and
out
adc
jl
cld
repz
xor
leave
inc
loope
sti
sbbl
fstpl
stos
add
repz
inc
popf
and
mov
sahf
out
push
push
adc
xor
cmp
push
in
clc
cmp
rorl
cmp
or
ljmp
or
sbb
push
xor
jg
outsl
pop
mov
and
jmp
sbb
mov
fsubp
dec
in
jns
push
or
pusha
cmc
fwait
sub
adc
pop
outsb
sbb
pop
mov
xchg
cs
xchg
sub
push
dec
rorb
sub
arpl
sbb
push
test
mov
and
cli
sub
addr16
sub
xchg
bound
and
sahf
sbb
testb
imul
cmpsb
push
cli
adc
je
mov
stc
mov
ret
mov
xchg
les
pop
dec
sbb
cmp
push
clc
jg
push
jnp
pop
call
push
xchg
mov
aas
push
or
cwtl
pop
repz
xchg
ja
lret
and
pop
push
arpl
pop
out
mov
dec
push
addr16
int3
fistpl
push
sbb
jl
lahf
mov
fnstenv
es
aaa
stos
xor
add
xchg
negb
into
mov
ret
mov
jne
cli
dec
xchg
cltd
shlb
popa
mov
cmp
sbb
ljmp
jmp
jns
mov
xchg
or
sbb
and
mov
xor
cmp
xchg
adc
sbb
lahf
and
pop
mov
jb
xchg
jns
fsub
or
repz
push
pop
enter
mov
cmp
sarl
mov
test
xor
hlt
pop
imul
jge
icebp
dec
sbb
stc
rep
mov
and
mov
mov
adc
xchg
enter
out
lcall
cwtl
insl
out
cmpsl
sar
xor
mov
outsl
rolb
mov
iret
ret
sti
push
arpl
add
dec
xor
push
mov
adc
xchg
push
out
push
fs
test
aad
mov
sbbb
dec
dec
xchg
jns
cltd
fisttps
inc
sbb
mov
mov
jnp
jno
sub
std
hlt
stos
add
mov
sub
xlat
data16
arpl
shrb
popf
cld
inc
fxch
lods
fistpll
adc
in
push
cmpl
mov
inc
insb
out
idiv
daa
aad
out
mov
jecxz
pop
in
add
repnz
rol
std
aas
mov
lahf
push
paddw
push
push
xor
call
push
sahf
and
ret
pop
test
fcompl
jmp
addr16
clc
inc
jae
jns
fdivs
ficomps
retw
xchg
repnz
mov
push
fildl
popa
fwait
sbb
and
jg
int
pop
jp
mov
testl
mov
jne
fidivl
enter
cmp
mov
mov
out
nop
ror
clc
cmp
push
ficoml
cmp
mull
cmpsb
dec
inc
shrb
jl
add
int
push
pop
shl
mov
xlat
add
mov
mov
pop
cmpl
cmpsl
push
test
add
dec
ret
ret
mov
lods
push
orb
mov
aad
cmpsl
jo
mov
outsb
xchg
push
xchg
hlt
cmpsb
sbb
addr16
mov
xchg
lods
das
testl
repnz
sub
fwait
dec
dec
or
ror
pusha
mov
sbb
mov
push
popa
adc
movsl
mov
std
test
mov
fmuls
lcall
mov
dec
addr16
aaa
jo
mov
mov
cmp
pop
lahf
inc
dec
es
aam
loope
test
xor
mov
jmp
dec
dec
addr16
int3
mov
pop
std
data16
pop
jne
adc
or
sbb
insb
aad
fldenv
dec
outsl
cmpl
fsubs
sahf
aam
and
wbinvd
fildl
sub
xchg
shl
lahf
mov
dec
fidivrl
std
fninit
icebp
adcl
scas
loop
cs
adc
jge
addr16
jne
push
mov
xchg
push
sub
decl
dec
xchg
fwait
lcall
stos
sub
les
push
add
jne
ss
xchg
dec
cmc
sarl
lcall
jb
push
test
call
insl
adc
imull
jle
gs
gs
fdivrl
jl
xor
daa
addr16
jg
lock
ds
fisttpll
adc
js
mov
mov
cmpl
xchg
inc
inc
cmp
inc
or
mov
nop
push
adc
fmuls
jnp
sahf
pop
in
sahf
xor
push
lret
xchg
jne
into
mov
jb
mov
sbb
lret
loope
nop
dec
loopne
cwtl
test
jle
xchg
ja
iret
lret
pop
pop
xlat
mov
inc
loopne
int3
and
dec
and
loope
jle
dec
pop
pop
push
cli
ljmp
int
mov
mov
out
sub
hlt
xorl
jns
add
add
jo
push
loopne
cli
xchg
in
incb
outsb
imul
sub
inc
cmpsl
ret
sbb
fisubrs
xchg
and
shrb
shl
mov
pop
pop
sbb
sub
pop
jmp
dec
ss
jae
test
insb
push
and
out
or
or
and
dec
add
call
nop
loop
incb
xchg
or
and
pop
scas
das
xor
xchg
dec
jne
cld
cmpb
lcall
push
push
iret
pop
in
cmpsb
lcall
inc
xchg
sub
testl
outsb
dec
and
lock
mov
clc
and
sahf
stos
mov
lret
test
into
cmc
ffree
or
in
adc
pop
push
icebp
pop
jmp
cmp
and
lods
lds
mov
add
insl
inc
js
xor
gs
dec
cmpsb
test
mov
mull
jl
mov
arpl
lds
or
sbb
shll
xchg
and
insb
mov
xchg
pop
or
lock
mov
shrb
jne
fstps
stos
jg
and
pusha
xlat
popa
scas
mov
inc
setnp
cvtps2pd
pop
and
xor
lret
int3
mov
mov
aad
pop
mov
push
add
sub
inc
test
je
testb
push
push
sbb
jmp
cmp
iret
gs
pop
or
inc
in
adc
js
xchg
pop
cmpl
cld
push
jp
sahf
sub
stos
sbb
jg
or
dec
lret
addr16
cmp
add
repnz
dec
and
imul
pop
fimuls
in
jl
sbb
dec
cmp
pop
push
push
stc
fdivl
sbb
xchg
xor
mov
push
arpl
stc
lods
call
mov
jle
stc
xchg
sub
icebp
mov
push
loop
push
addb
adc
add
dec
rcll
test
push
imul
sbb
fcompl
push
repnz
sub
lds
data16
pop
pop
sbb
in
sub
mov
lret
mov
mov
jmp
sbb
aam
xchg
inc
call
clc
cmp
lcall
loopne
lret
pop
fsubr
stos
outsl
sbb
pop
xchg
jbe
sub
fcmovu
mov
mov
jns
cmp
stos
dec
ss
int
lahf
sub
inc
out
inc
jnp
out
push
fwait
ja
lcall
in
fadds
cli
pop
loop
sbb
dec
clc
lea
test
sub
sar
pop
test
cs
imul
jge
mov
and
cli
clc
test
mov
popa
subb
add
in
mov
add
push
mov
or
js
mov
hlt
mov
add
loop
lods
popf
jno
shlb
cli
xadd
mov
dec
and
mov
xor
jns
into
pushf
pop
push
fnsave
clc
inc
jo
mov
sbb
sub
inc
dec
ret
pop
andl
sbb
cmp
rcrl
pop
mov
cmpsl
insb
pop
mov
add
and
fdivrl
icebp
hlt
dec
lds
xor
fcomps
fcmovne
inc
xorb
fs
mov
dec
in
pop
dec
sbb
adc
dec
or
or
xchg
adc
sar
ss
add
jae
hlt
xor
xor
or
mov
mov
fldenv
stos
fstps
cmp
jae
fnsave
int
shlb
pop
mov
stos
xchg
sub
mov
add
jecxz
and
jns
in
pushf
push
dec
nop
pop
jne
add
xchg
das
sbb
outsl
dec
ja
mov
pusha
loopne
jl
adc
repz
mov
jl
icebp
js
aaa
movsb
cmp
ret
cs
ss
popa
adc
pusha
stos
sub
pop
mov
mov
mov
insb
pop
inc
jnp
push
jo
mov
adc
pop
lods
and
lods
add
fisttps
je
xchg
push
xor
sbb
fdivrs
jne
add
sbb
xchg
push
jp
xchg
add
test
jae
in
or
add
or
xchg
fs
mov
scas
pop
inc
repnz
popf
push
sub
xor
pusha
leave
call
or
xor
mov
stos
push
int3
sbb
div
je
dec
fmull
jbe
and
cmc
mov
int3
pop
es
mov
inc
cmc
add
out
jne
sarb
fwait
pop
cmp
dec
insl
repz
xchg
xor
mov
fs
lahf
insb
loop
adc
dec
lcall
insb
mov
pushf
xor
addr16
mov
xchg
inc
dec
and
inc
pushf
inc
sahf
cmc
lea
cmpsl
and
repz
es
and
xchg
dec
loopne
aas
or
xor
xorb
mov
dec
cs
sbbb
sbb
ja
pop
shll
or
je
ljmp
test
push
dec
inc
cltd
inc
clc
jge
mov
add
jnp
daa
or
pop
int3
push
loope
xchg
insb
ret
add
xor
add
xlat
int
ficomps
ret
rol
clc
je
dec
inc
inc
ds
rcr
push
mov
sbb
mov
xchg
cwtl
or
test
mov
or
pop
add
cmp
in
cwtl
loope
sub
aam
into
imul
xlat
mov
iret
loopne
repz
xchg
mov
in
sub
mov
popf
cmp
lds
je
add
xlat
mov
jnp
cs
sbb
rolb
mov
push
xchg
mov
mov
inc
jbe
cld
and
popa
insb
fs
popf
xchg
xor
add
or
sarb
and
cwtl
stc
sti
sbb
lea
inc
sahf
xchg
in
jo
cmpsb
call
inc
fsubrs
cmp
dec
sub
mov
lods
xor
gs
cmpsb
mov
std
adc
js
jnp
xchg
xchg
push
dec
sbb
ficoml
cmpsl
mov
push
mov
sub
cmp
inc
in
xchg
mov
lret
jnp
fnstenv
mov
gs
fbld
data16
xor
xchg
xor
mov
push
inc
lcall
pop
cli
js
negl
outsb
stos
vpunpckhbw
and
jns
sbb
call
ret
or
cs
jmp
add
inc
adc
inc
enter
mov
cmp
stos
push
wbinvd
mov
add
adc
xlat
sahf
fildll
cmp
pop
sti
fisubl
out
lcall
int
mov
jecxz
test
neg
daa
pop
push
pop
out
call
dec
rorl
mov
xchg
or
arpl
cmp
xchg
fsts
xchg
iret
out
std
rcrb
jne
icebp
iret
jnp
aam
add
fwait
jo
negl
xor
enter
jo
ficoms
pop
mov
cmp
or
test
cmp
inc
mov
int
push
xor
leave
jl
imul
negb
mov
adcl
fidivl
mov
psubsb
xchg
shrb
cmpsl
xor
fcomi
adc
add
mov
ud0
jno
or
push
das
fxch
popa
cmp
nop
out
pop
push
cmp
pop
das
push
fisubrs
imul
lods
mov
repz
ljmp
fisubrs
push
or
push
sahf
pop
scas
test
pop
fcoms
and
mov
mov
sbb
sbbb
cmp
sahf
add
pop
in
es
scas
mov
lahf
jle
mov
dec
test
notb
addr16
test
inc
test
jp
sub
add
into
mov
xchg
pushf
cltd
pusha
pop
push
std
rcll
and
popf
inc
or
imul
fisubrs
cli
ljmp
xor
mov
rolb
xchg
daa
sub
lret
adc
hlt
pop
loop
popf
xchg
cmpsb
mov
inc
ror
addr16
out
sti
adc
mov
fstpt
test
sub
sub
in
cmp
test
in
and
xor
adc
adc
add
js
jb
lcall
xor
jae
mov
hlt
shlb
push
rcrl
insl
ret
cmp
ss
push
inc
dec
in
aas
push
test
clc
leave
fwait
sbb
xchg
cmc
loop
insl
inc
sti
negb
addr16
loop
xor
repnz
into
mov
popa
sahf
mov
lock
mov
outsl
sub
insl
das
add
outsl
xlat
pop
ficoml
or
sub
pop
les
test
cmp
and
xlat
mov
adc
xor
ja
subb
add
mov
sub
outsb
iret
pushf
ja
in
jle
sub
pusha
jae
cld
repz
xchg
sbb
je
mov
cwtl
lahf
lea
inc
loope
push
std
or
ret
jnp
cmpsb
lahf
lahf
pop
rclb
sub
scas
inc
push
inc
fisubrs
call
xlat
ret
push
lahf
and
imul
mov
lret
jp
mov
mov
mov
jne
mov
pop
cli
push
leave
out
mov
bound
aas
les
gs
and
fcompl
mov
mov
mov
and
sti
daa
inc
xchg
js
in
mov
in
sub
sbbl
sbb
push
cmp
xlat
or
mov
and
xor
loop
mov
sbb
adc
or
jnp
lcall
pop
outsl
clc
imul
lds
pop
xor
outsl
jns
add
outsb
push
mov
sbb
cmpl
push
adc
hlt
sub
sub
pop
addr16
popf
dec
enter
test
and
loop
sbbb
xor
sbb
jns
push
pushf
and
pop
jns
mov
into
rcrl
mov
inc
mov
mov
sub
sub
inc
fstps
test
aaa
popf
add
mov
dec
dec
movzwl
popf
xor
mov
out
scas
push
sub
jnp
sbb
mov
inc
and
mov
icebp
cmp
sbb
andl
sti
lahf
add
mov
or
cmpsl
fwait
std
aas
adc
rcll
mov
or
adc
nop
or
fsin
add
fdiv
bound
mov
in
sbb
rorl
jns
stc
sub
cmc
push
push
mov
js
xor
or
sub
jp
sahf
subl
mov
pop
xchg
pop
into
and
iret
cmc
and
pop
xchg
push
sbb
fstl
xchg
cmp
cmp
push
or
cmp
add
lret
push
lret
mov
xor
or
jmp
lods
xchg
aam
cmp
sahf
xchg
add
and
stos
push
push
addr16
ja
scas
out
pusha
shl
xor
mov
add
lods
mov
jnp
sahf
or
ret
ds
loop
sbb
mov
mov
dec
lcall
adc
adc
scas
jge
push
clc
popa
fiaddl
jg
dec
and
jp
popf
inc
xchg
fwait
sti
cltd
cltd
push
lea
fisubs
arpl
cmp
dec
lea
push
jnp
xor
mov
push
inc
mov
in
push
jb
jmp
jns
push
shlb
pop
pop
call
orb
adc
addr16
sub
lret
lahf
insl
pop
filds
lcall
lds
fwait
push
cmpb
jns
enter
inc
into
test
sub
or
arpl
aas
fwait
out
sbb
sub
lret
int
scas
inc
popf
mov
adc
movsb
sbb
imul
lods
inc
adc
int
loopne
sbb
xor
lods
aam
in
addr16
loope
sub
fbld
add
es
inc
push
xchg
mov
bound
lds
mov
stc
mov
pop
push
in
jnp
inc
mov
mov
inc
mov
xor
lock
lea
xor
sti
sbb
aad
cltd
jnp
lock
pusha
sub
add
int
jbe
in
daa
fiaddl
cmpsl
enter
jmp
mov
icebp
sti
xchg
sub
jno
arpl
aas
xchg
xchg
push
and
push
sti
mov
xor
stc
pusha
jecxz
xor
sub
scas
repz
inc
xor
sbb
fwait
and
pop
mov
insb
sub
xchg
stos
lcall
jle
push
je
stc
jno
pop
inc
scas
sub
in
push
aad
push
and
popf
ja
stc
jl
and
push
fsub
jb
mov
ror
xchg
xor
or
push
and
cld
sub
adc
pop
jnp
or
xchg
jbe
jge
adc
addr16
in
int3
popf
jmp
dec
pop
shlb
mov
pushf
cmp
xor
jge
jl
mov
inc
mov
push
loope
push
dec
mov
mov
arpl
inc
dec
mov
mov
iret
inc
setp
stos
int3
out
xor
out
sub
test
dec
mov
sbbl
iret
push
gs
int3
scas
int3
jnp
out
mov
cs
daa
add
jecxz
arpl
lods
out
pop
aam
xchg
outsl
cmp
jno
and
pusha
data16
test
xor
cmpsl
and
sbb
faddl
and
sub
clc
mov
inc
xor
daa
sahf
adc
add
sti
clc
xchg
std
xchg
aas
fistpl
dec
pop
filds
push
and
mov
lret
mov
xchg
sub
jbe
cmp
and
cmp
out
iret
popa
or
jnp
sbb
add
mov
sub
cwtl
shlb
stos
mov
pop
sbb
lcall
jae
sbb
pushl
mov
pop
leave
movsl
cwtl
dec
daa
lret
outsb
int
fcomp
or
fld
jnp
mov
lret
sbb
aad
ja
stos
sub
mov
mov
and
xor
mov
dec
testb
and
xor
mov
stos
not
xchg
cmp
or
sub
data16
mov
sti
jae
mov
in
dec
call
test
and
sbb
or
mov
pushf
mov
inc
rcrb
mov
subl
add
aad
xor
inc
jle
lahf
xchg
xor
inc
inc
in
shlb
mov
es
pop
fildll
add
mov
mov
aaa
push
jno
sub
mov
pop
adc
push
loopne
fcmovne
notl
test
mov
incb
sar
cltd
dec
push
test
push
int3
pop
dec
jbe
lock
cmp
xor
jge
add
repz
or
ss
int3
xchg
xlat
cmp
dec
lea
in
push
push
adc
mov
add
push
inc
popa
inc
xchg
push
push
aas
mov
test
and
mov
push
pop
lods
sbb
mov
lcall
or
jg
lds
mov
mov
sub
sub
lods
and
adc
adcb
or
dec
and
and
and
lret
mov
mov
sbb
std
outsb
push
int3
enter
ds
aaa
jnp
arpl
std
enter
push
cmp
out
push
sti
xchg
push
test
stos
ret
out
xor
gs
imul
insl
push
lahf
lcall
sti
test
or
or
mov
lcall
adc
mov
in
push
shl
inc
dec
in
mov
cmp
addr16
mov
jecxz
push
arpl
hlt
cmp
fstpl
stc
out
ftst
inc
sub
mov
mov
fcmovne
jecxz
fisubrs
outsb
xchg
inc
insl
paddsb
adc
std
pop
js
dec
add
mov
fwait
cmp
cld
xor
scas
lahf
scas
aam
fldl
jg
ljmp
push
test
dec
int
jge
and
inc
mov
faddl
sbb
mov
mov
sub
movsl
xor
or
insl
adc
add
xchg
jge
inc
orl
ret
inc
and
jp
das
mov
enter
loopne
popa
dec
leave
dec
or
add
pusha
pop
xor
popf
pop
ret
insl
jmp
sbb
gs
aad
clc
sbb
dec
mov
mov
out
add
push
xchg
gs
cmpsl
shr
adc
test
or
ret
ss
shll
int
or
shl
ds
push
imul
movsl
or
dec
sub
shlb
int3
out
and
jp
inc
inc
xchg
popa
xchg
xchg
cmp
test
aas
dec
xor
cmp
push
push
and
fwait
sub
add
dec
pop
in
pop
mov
nop
xor
mulb
jnp
mov
adc
add
cmp
push
xchg
push
stc
arpl
lods
adc
and
ret
pop
push
xor
iret
ret
jle
mov
xchg
int3
cmp
push
xorb
sahf
mov
mov
outsb
add
sbb
sbb
xchg
fstpl
mov
inc
jae
push
sbb
ficoml
jns
push
push
orb
addr16
add
ret
lods
ja
jmp
xchg
or
xchg
arpl
or
ljmp
sub
xorb
mov
inc
dec
cmp
jo
out
inc
mov
je
stc
or
fsts
xlat
dec
xchg
js
jnp
or
hlt
insb
push
out
cmp
out
lods
out
push
lods
mov
mov
mov
popf
jge
jns
ss
ja
cwtl
xor
popf
leave
pop
push
mov
out
cwtl
bound
jne
mov
push
mul
aas
jmp
faddl
movsb
or
inc
pop
cmp
stos
dec
rcl
outsl
sub
mov
and
mov
inc
pop
in
and
inc
ud2
push
into
mulb
push
into
dec
iret
subb
imul
mov
push
jmp
adc
test
call
sub
xor
testl
call
js
and
sub
fidivl
clc
shrl
add
push
pop
test
leave
pop
push
inc
rorl
incb
jge
popf
xchg
stos
sbb
dec
andb
mov
pop
pop
mov
jnp
insl
jno
das
test
pop
push
fcom
push
dec
jb
aad
cwtl
pop
and
mov
jmp
rolb
arpl
outsl
jb
push
cmp
sub
xchg
enter
xlat
xchg
jae
sub
xchg
xchg
push
lret
inc
and
divl
mov
fyl2x
outsb
scas
dec
inc
push
and
adc
pop
cmc
pushf
fwait
insb
xchg
lret
lods
pop
mov
mov
mov
and
std
mov
xor
cmp
loop
mov
mov
push
ljmp
adc
leave
dec
pop
cld
add
sti
push
push
dec
movsl
adc
xchg
xchg
test
stos
pop
mov
jmp
es
dec
cld
dec
mov
in
dec
rol
lock
push
xchg
or
sbb
jl
sbb
ret
push
test
adc
js
pop
xor
enter
cmp
mov
inc
inc
add
adc
sbb
xchg
cld
adc
test
sbb
xor
xchg
cltd
test
lcall
push
push
push
fisubl
loope
pop
cmp
xchg
fs
imul
ljmp
or
adc
jg
addl
fnstenv
popf
xchg
icebp
ss
idivb
push
movsb
out
das
in
sub
movsl
stos
out
mov
mov
test
js
ljmp
in
rolb
jbe
mov
ja
cmp
mov
and
xchg
mov
lret
fsubs
je
jo
sahf
stos
jne
dec
popf
sub
add
pop
push
outsl
xor
sahf
out
xchg
in
jno
sub
lret
cmp
jmp
out
dec
pop
mov
adc
sti
xchg
popa
hlt
imul
xor
sub
adcl
loop
je
data16
imul
ds
clc
add
adcb
or
testl
pop
fcomps
add
sbb
ret
roll
lcall
inc
scas
dec
fmul
dec
mov
mov
xchg
add
call
pushl
or
push
xor
stc
push
adc
in
insb
cmpsb
push
and
into
aam
and
jno
xor
stos
adc
push
push
je
sbb
jns
adc
test
jae
ret
xor
testb
movsl
push
sar
arpl
ret
out
inc
jmp
mov
out
sub
cli
xchg
pmulhw
test
cltd
lock
ljmp
call
sbbl
in
cs
or
cmp
stos
xchg
inc
xchg
mov
bound
call
lcall
lods
pop
inc
mov
fwait
lock
cmp
arpl
or
ljmp
pop
pop
cwtl
sub
lea
adcl
push
popf
jle
enter
mov
inc
outsl
lret
insb
inc
pop
sbb
ljmp
or
das
rclb
icebp
ljmp
and
lods
dec
shr
xchg
test
fs
cli
push
lahf
push
pushf
add
sub
stos
mov
xor
or
inc
lret
mov
mov
jbe
lret
adc
adc
leave
in
pop
cmc
jg
mov
mov
pop
mov
jmp
xchg
les
call
in
lret
aas
xor
add
insl
xor
dec
dec
insb
test
sub
jecxz
push
inc
xlat
iret
add
enter
push
int
ss
jecxz
rcrl
test
dec
xor
idivb
mov
lea
mov
xor
add
mov
out
idivb
sub
aas
dec
and
outsl
in
cmp
frstor
dec
cmpsb
cmp
mov
mov
popf
jb
add
push
cmp
cmp
pop
in
insl
and
mov
pop
jle
pop
dec
xchg
mov
dec
int
loope
setnp
cmp
sbb
addl
pushf
dec
test
outsl
xchg
sub
dec
shrb
cmpsb
jle
add
mov
hlt
ljmp
adc
jg
jp
movsl
cmpsl
mov
jb
fistpl
jp
sbb
cmp
sbb
cmc
and
into
mov
popl
aas
insl
jge
inc
pop
orl
jns
faddl
pop
fstpl
bound
ret
stos
movsl
jae
inc
lods
jno
adc
pop
dec
into
lea
cmp
int
bound
mov
jle
div
pop
pop
pushf
idivb
xchg
ss
lcall
pop
pop
jmp
mov
push
rcl
loopne
sub
mov
mov
or
adc
mov
out
sbb
sub
testb
out
lods
fcoml
unpcklps
stos
mov
inc
stos
popf
loopne
pop
pop
mull
mov
push
push
xor
insb
outsb
adc
hlt
lret
jle
or
and
push
bound
test
pop
and
in
push
in
jnp
adcb
xchg
mov
sbb
xchg
leave
xor
or
xchg
inc
xor
outsl
mov
mov
xor
iret
lahf
push
aaa
pop
dec
leave
lret
rorl
fwait
orl
hlt
ljmp
dec
stos
xlat
push
dec
and
in
mov
notl
add
mov
jb
fistps
movsl
hlt
sar
inc
lock
movsb
movsb
mov
jnp
jbe
mov
mov
mov
sbb
stc
and
or
jnp
cwtl
jo
or
lret
in
ljmp
sbb
into
dec
sub
xor
shlb
and
aaa
push
inc
mov
pop
test
lret
cwtl
out
adc
dec
mov
pop
fcoml
scas
call
or
mov
addr16
and
and
add
or
cli
add
aam
inc
je
pop
sbb
mov
cmp
insb
jge
push
or
jo
fdivrp
jb
inc
jae
xlat
sahf
dec
xor
pop
cli
test
test
and
xchg
les
push
xchg
sub
lods
mov
adc
adc
cltd
in
dec
out
and
aad
ljmp
dec
mov
in
jecxz
or
jecxz
scas
btc
scas
add
out
out
sti
jl
mov
out
jbe
fidivs
dec
addb
inc
lock
push
push
push
rclb
aaa
es
ds
push
rcll
push
int
push
add
and
inc
je
jne
les
jecxz
lods
sarb
cmp
fistps
cld
jg
xor
repz
xor
jns
mov
adc
test
fistl
int3
test
mov
pop
rclb
shll
jp
popf
pop
xor
sbb
loopne
xchg
jmp
pop
loop
mov
lock
jecxz
loop
fimull
daa
fldenv
inc
fiadds
in
dec
fwait
pop
mov
out
jo
xchg
fsts
jae
inc
ficompl
jb
outsb
popf
scas
or
ret
pop
xor
mov
ss
ljmp
cmpsb
fnstsw
mov
ljmp
ja
aaa
sub
or
cmp
mov
stos
fisubrs
fstps
push
inc
rcll
dec
stc
insb
mov
push
jns
mov
xor
xchg
sub
push
push
std
mov
pop
mov
clc
push
mov
mov
or
inc
sub
cmp
inc
cmc
leave
add
xchg
out
mov
jbe
cmpsl
ret
jnp
mov
cmc
sub
dec
and
lods
cli
out
sahf
adc
mov
xchg
clc
cmp
je
pop
adc
pop
fisttpl
in
mov
test
popa
and
mov
bound
xor
roll
lds
movsb
movsb
jp
adc
aas
rol
cmpsb
jp
adc
add
hlt
pop
iret
jl
adc
std
je
arpl
lret
jo
jo
xchg
add
mov
or
xchg
add
dec
nop
xor
xchg
aaa
dec
stos
dec
jne
testl
rolb
sbb
pusha
rorl
shrl
test
in
cs
test
pop
mov
sbb
xchg
adc
mov
lds
xchg
divl
push
pop
out
repz
jle
loopne
popf
outsb
dec
ljmp
lods
xchg
xchg
jl
insl
xchg
scas
inc
mov
das
mov
fwait
xchg
mov
xchg
out
jnp
imul
jle
mov
sahf
add
push
cmpsb
sbb
pusha
jecxz
push
aad
mov
mov
mov
sbb
mov
ljmp
dec
out
lock
adc
repnz
arpl
adc
xor
dec
lock
lahf
pop
xchg
mov
add
mov
fisubrl
inc
in
mov
xchg
loopne
or
les
lret
push
pusha
and
push
ja
dec
repnz
clc
mov
dec
mov
ljmp
dec
js,pt
mov
out
mov
rcl
fstpt
orb
out
sub
cmc
pop
aas
shrl
arpl
cmp
sti
enter
xchg
jnp
jg
mov
adc
dec
adc
cmp
leave
out
fstp
lock
rcll
in
pop
push
popa
nop
mov
pop
jmp
repz
cwtl
int3
inc
loopne
pop
mov
push
shrl
dec
fcompl
aaa
lods
mov
jns
jge
xchg
loopne
inc
scas
lahf
fsubrs
andl
fisttpl
pop
push
cmp
or
push
scas
sub
pop
jg
inc
sub
dec
je
push
sahf
adc
push
int3
sarb
cmpb
mov
jbe
jnp
js
jle
imul
int
pop
outsl
push
jns
js
pop
sub
shrl
adcl
into
jne
shrb
push
mov
aas
or
mov
cmpxchg
aam
lcall
dec
lds
orb
cmp
push
mov
out
mov
adc
pop
jno
shlb
pusha
rcl
call
jp
or
in
movsb
enter
add
inc
or
mov
sti
aaa
repnz
adc
pop
daa
xchg
and
std
lahf
sahf
loope
mov
push
push
or
mov
scas
mov
pop
push
sbb
fcoms
mov
ret
fs
jecxz
cmp
loope
sahf
mov
lds
orb
push
push
inc
cmp
test
aam
lret
in
adc
shlb
xorl
mov
and
int3
out
and
lea
sub
mov
std
outsl
adc
into
nop
push
fsubp
sub
fisttpll
lret
xchg
fsts
jg
push
jmp
push
fildll
mov
push
xchg
pop
adc
cmp
jge
mov
aaa
pop
push
pop
test
cwtl
and
mov
stc
and
and
lods
div
cmpsl
mov
rorb
out
cli
fwait
sub
aam
dec
jo
lcall
int
pop
add
testl
or
fnstcw
fdivrl
data16
or
xchg
cmp
gs
xor
lods
mov
fmuls
jmp
inc
xor
pop
movb
cmp
rcl
mov
sub
std
pop
pop
push
pop
mov
push
push
insb
test
sbb
jmp
loopne
movsb
mov
gs
shll
pop
cld
sbb
outsl
lods
add
mov
mov
jl
insb
mov
mov
fistl
insb
pop
xchg
js
cli
addr16
mov
add
mov
sarl
mov
outsl
insl
out
loopne
pop
das
mov
lods
inc
je
fistps
xchg
lret
xorb
flds
popa
lret
sub
inc
sbb
clc
out
andb
loop
test
cmp
jle
mov
push
mov
aad
jl
imul
loop
jle
jo
pop
lcall
lret
adc
jp
scas
add
hlt
lret
in
pop
jge
repnz
sub
push
jo
mov
sub
adc
rolb
outsb
adc
and
inc
cltd
dec
rorb
add
adc
loop
cli
arpl
and
mov
push
cwtl
push
scas
lods
stos
popa
lret
add
data16
sahf
mov
loopne
dec
xchg
out
lea
enter
clc
jge
les
je
xor
xlat
dec
dec
mov
shll
and
subb
stos
sub
es
add
lods
pop
cmp
rcrb
cmp
filds
es
mov
mov
sub
sbb
xor
out
data16
xor
imul
xchg
xor
dec
push
leave
cmp
jae
and
insb
inc
mov
loope
jg
dec
sahf
jnp
adc
test
jl
jg
repnz
loop
mov
lahf
xor
jmp
insl
lret
in
ror
mov
cmpsb
sbb
insl
mov
mov
cmpsl
hlt
pop
leave
xor
inc
mov
mov
mov
addl
cwtl
pop
inc
stos
pop
mov
shlb
ja
adc
lds
xor
in
call
xor
add
loop
push
into
movsl
cmpsl
jg
rcrb
xchg
cmp
mov
adc
in
jae
imul
ss
arpl
and
sahf
movb
rcrl
test
pop
sbb
es
or
mov
jno
sbb
test
test
fbld
adc
xor
imul
push
loop
pop
push
insl
push
xor
mov
push
std
cmpsl
test
loopne
stos
sub
aad
pop
xor
fs
mov
ja
add
mov
push
push
xchg
aas
fisubrl
pop
fdivrp
sub
cli
lcall
add
or
movsl
daa
adc
imul
ds
jb
xchg
shr
imulb
sbb
add
mov
xor
lret
xor
int3
push
mov
dec
pop
push
or
jg
enter
leave
sbb
xchg
mov
sbb
xor
pop
sbb
push
pop
cmp
inc
out
adc
sub
shll
pop
mov
inc
xchg
and
and
xor
aas
jo
xchg
clc
xchg
rcll
mov
int
leave
iret
jmp
jge
sbbb
inc
cli
jle
add
rcrl
sbbb
stc
adcb
loope
and
mov
jg
mov
mov
xchg
mov
cmp
mov
popf
inc
stos
int
jo
jns
rcrl
push
jmp
xchg
or
popf
cwtl
xor
test
or
mov
movsl
dec
hlt
mov
nop
adcl
dec
mov
fmul
mov
sub
gs
ds
stos
pop
adc
push
sbb
sub
orb
shr
jmp
ja
and
out
out
mov
sbb
out
lret
jo
lock
test
insb
rcl
push
aad
or
sbb
jecxz
rcrb
sbb
jmp
jnp
outsb
pop
pop
xor
cld
call
xchg
mov
nop
adc
sbb
sbb
movsb
lods
mov
mov
push
cmpsb
cmp
gs
jge
inc
and
out
jae
ret
mov
lea
cld
pop
sub
mov
addr16
fdivs
xchg
in
add
pop
sarl
mov
push
in
out
pop
test
inc
add
les
iret
daa
mov
add
inc
sbb
pop
inc
jo
ja
call
addr16
pop
mov
in
mov
push
pop
mov
pusha
xchg
insb
ret
pop
das
inc
dec
xor
cwtl
leave
push
mov
cmp
out
into
mov
cmp
fidivs
add
xor
and
xlat
xor
jcxz
enter
and
xchg
into
sti
orb
arpl
push
int3
add
popf
sub
xchg
pusha
into
dec
lcall
jns
lea
xchg
fcomps
inc
nop
je
jo
and
and
and
incb
adc
push
pop
add
mov
ja
psrlw
inc
idivl
push
mov
mov
dec
mov
stos
in
adc
outsb
mov
cs
xchg
dec
cwtl
pop
mov
or
xchg
mov
push
in
push
adc
xor
aad
mov
or
out
ss
icebp
cmp
test
xor
jns
scas
pusha
cmpsl
dec
push
push
xchg
std
jg
jns
pop
fsubs
repnz
mov
fndisi(8087
xlat
shlb
jno
mov
pusha
or
dec
pushf
xchg
wrmsr
push
xchg
imul
roll
aas
push
adc
mov
sub
adc
pop
mov
insb
cs
out
pop
aas
add
inc
push
aad
data16
push
and
cmp
int
fwait
jne
jno
or
lock
dec
add
int3
jge
jne
pop
push
jae
aad
mov
mov
push
pop
jo
pop
adcl
xchg
mov
je
icebp
sar
loope
cmp
pop
dec
sbb
mov
and
and
sbb
aas
repnz
ret
aad
inc
pop
les
mov
lret
inc
cmp
xchg
aad
mov
or
cmp
mov
imul
mov
jno
sub
cmp
adc
loop
loop
xchg
addr16
mov
xor
mov
pop
inc
nop
arpl
and
add
cmp
lods
xchg
cmpxchg
lock
popa
push
adc
pop
jae
mov
jge
mov
movsb
mov
sbb
neg
mov
mov
sbb
mov
dec
outsl
sbb
sbb
loopne
adc
scas
dec
xchg
daa
adc
and
cwtl
cmp
std
clc
xchg
arpl
pushf
pop
push
nop
subb
out
mov
xchg
push
int3
inc
xlat
repz
jle
sahf
jecxz
pop
sub
inc
fbld
sarl
jmp
sti
lods
sub
aad
xchg
imul
pop
sbb
mull
out
push
test
clc
push
cmpsl
sub
jbe
lret
jmp
mov
scas
maskmovq
lods
mov
outsb
push
jmp
test
sub
push
cmpsl
add
sti
pop
repz
inc
into
xchg
test
xchg
cmp
cmp
and
scas
leave
xlat
pop
push
or
xchg
mov
mov
repnz
cs
mov
xor
push
dec
movsb
jecxz
pop
add
mov
icebp
shrl
or
xor
icebp
xchg
lea
mov
mov
push
and
icebp
mov
stc
shll
cmp
jbe
lock
or
fsubrl
cmpsb
int3
fimuls
add
or
add
mov
call
push
push
cmp
dec
inc
add
inc
and
rorl
pop
sarl
cltd
pop
or
lock
gs
or
out
xor
inc
es
mov
pop
arpl
in
inc
jle
imul
pop
repz
js
xchg
push
js
push
dec
cmpsl
push
rcrb
push
mov
aaa
pop
add
outsl
sub
in
out
stos
rcl
jle
insb
ret
sub
jno
mov
push
stos
test
sbb
andnps
push
fldenv
stc
push
mov
lret
test
gs
mov
push
addl
xlat
leave
or
dec
mov
inc
outsb
mov
out
popf
adc
test
cs
mov
aas
cmpsl
sti
icebp
add
ds
int3
jo
mov
fisttpll
in
xor
jmp
popa
mov
mov
ret
stc
hlt
lock
adc
adc
pop
cmp
bound
xchg
sub
cmpb
rcrl
add
push
lock
daa
mov
pop
xorl
ret
negb
add
push
insl
aas
mov
sbb
das
das
adc
mov
scas
cmp
mov
and
fs
mov
adc
ss
popl
daa
insb
sbb
fnstsw
push
sti
cli
imull
dec
push
fistl
sub
das
push
out
fildl
mov
add
push
jbe
or
fsubrl
mov
mov
inc
call
and
mov
test
pop
repz
pop
jb
movsl
sub
rcll
outsl
in
mov
daa
cld
mov
ret
sti
push
cmp
flds
daa
arpl
push
jnp
mov
int3
loope
aam
push
xchg
xchg
pop
mov
and
es
popa
fstl
popa
mov
jp
or
in
cltd
out
add
inc
add
push
inc
and
or
shlb
aad
jnp
lret
dec
mov
xlat
cmp
aam
adc
push
dec
mov
adc
loop
cmpsb
fadd
enter
cmpsl
xor
movsl
mov
daa
loope
pop
sbb
adc
xor
aas
or
in
pusha
mov
shlb
addr16
push
out
pop
cmp
or
cmc
and
clc
xor
xchg
das
jmp
test
loope
int3
jbe
push
arpl
addr16
aad
lock
outsb
out
jne
mov
movsl
xchg
stos
or
ss
jmp
inc
inc
push
div
loope
cmp
adcb
push
int
insl
inc
jns
jns
in
into
sbb
mov
sbb
in
xor
or
xor
adc
mov
push
and
cmpsb
leave
ds
out
xchg
ja
mov
enter
adc
pop
mov
jp
adc
mov
sbb
ja
mov
cmp
sarb
xchg
cmpsl
sti
lcall
jne
mov
je
jne
aas
test
add
cmpsb
gs
cmp
pop
inc
mov
xchg
jle
imul
test
fcmove
jmp
pop
outsb
negl
cmp
imul
xchg
sub
push
shrl
fildl
push
aaa
xchg
test
jbe
sbb
dec
fcmovu
inc
xchg
dec
pushf
jmp
mov
hlt
ret
and
lahf
jle
cmpsb
ficoms
sbb
pusha
pushf
ja
roll
mov
pop
lock
xor
xchg
sbb
repz
divl
hlt
fisubl
jge
repnz
dec
jg
or
ror
push
clc
mov
das
hlt
std
adc
inc
lock
push
pop
imul
cmp
cmc
and
sub
cmp
inc
in
cmpsl
mov
loopne
lock
repnz
lahf
test
lea
cmp
push
dec
enter
fldenv
repz
or
dec
std
and
jnp
enter
sub
ret
ret
mov
shll
arpl
hlt
mov
faddl
sub
idivb
sbb
rcr
xor
and
jb
cltd
pop
in
ficompl
jbe
inc
mov
arpl
xor
dec
pusha
mov
scas
push
popf
das
pop
xchg
push
add
mov
mov
out
out
shl
out
push
jns
aam
popa
mov
out
xor
and
ljmp
leave
outsl
fwait
or
inc
lds
push
out
aad
xor
pushf
mov
mov
mov
sub
jae
dec
push
sahf
fcmove
out
adc
in
mov
mov
inc
cmp
into
aad
push
sbb
xchg
outsl
xor
outsb
rclb
jmp
fistpl
push
cld
sbb
mov
roll
xor
and
sbb
in
and
dec
pushf
insl
sbbb
shlb
mov
dec
lods
lock
fwait
dec
ljmp
cmp
pop
mov
pop
repnz
int
aaa
sub
cmp
lds
mov
push
insl
lea
ljmp
cmpsb
inc
xor
jle
mov
imull
xchg
add
lea
mov
orb
das
mov
sub
jp
inc
sbb
cmp
mov
jbe
xor
sbb
mov
xchg
jns
ficompl
mov
rorb
mov
bswap
addr16
jmp
cmp
push
mov
aaa
push
insb
mov
xchg
xor
mov
lea
dec
pop
cmp
push
shrb
or
lock
pop
mov
mov
adc
aad
cmpsb
loopne
push
mov
ljmp
scas
mov
or
bound
add
dec
push
inc
pop
xor
out
insl
ja
xor
push
mov
jno
fisttpl
adcl
sub
add
push
leave
add
mov
mov
clc
icebp
test
sbb
arpl
mov
shlb
and
into
push
cltd
cmpsb
xchg
mov
mov
add
loopne
sbb
push
pop
jecxz
outsl
cltd
jmp
les
xor
sub
cltd
stos
jb
mov
es
push
dec
out
xchg
adc
ret
int3
sarl
mov
aam
push
inc
addr16
loop
push
sub
push
nop
mov
xor
out
in
leave
test
sub
cs
test
enter
sub
insb
out
fdivs
or
adc
lea
mov
jle
lcall
mul
or
jge
add
mov
ret
mov
stos
and
xorb
lret
mov
loopne
and
push
mov
sbb
in
psubsw
sbb
dec
xchg
test
out
or
je
push
xchg
test
dec
add
sbb
cwtl
or
outsb
vpcmpeqd
mov
jbe
addl
clc
sbb
jae
movsb
cmpsb
add
mov
pop
filds
sahf
xchg
stos
mov
fwait
outsl
fstpt
pop
aas
push
or
sbb
rep
push
mov
cmc
mov
jnp
addl
movsl
dec
push
lcall
std
jecxz
out
jg
add
lock
adc
fsubrl
test
xchg
add
pop
pop
shr
ja
pop
fnsave
mov
push
sub
out
orl
xor
add
roll
and
lods
pop
adc
cmpsl
or
inc
dec
test
mov
pushf
fdivs
mov
xor
popf
mov
stos
cli
scas
je
movsb
or
bound
inc
xchg
loopw
sbb
pop
sub
mov
aam
test
lods
add
mov
lahf
jbe
jl
scas
inc
cmp
in
or
mov
mov
int
xchg
push
addl
cs
pop
pcmpeqd
scas
mov
adc
fists
icebp
popa
add
nop
mov
pusha
mov
inc
adc
and
adc
enter
lret
scas
hlt
bound
inc
ficomps
fisubrl
xsavec
das
or
repz
cld
in
icebp
cmpsb
or
xor
lock
mov
fsub
aad
test
inc
pop
testl
out
enter
push
xchg
aam
pusha
cmp
int
pop
xor
add
mov
pop
in
leave
push
adc
jmp
ljmp
dec
and
cmp
adc
lea
and
inc
xchg
cmp
pop
dec
or
aad
imul
mov
push
shll
popf
andb
mov
daa
or
mov
xor
aad
bound
notb
pop
je
xchg
fsubrp
fs
in
movsb
aaa
dec
in
mov
and
push
jae
cmp
mov
xchg
mov
cmp
out
mov
pusha
jge
stc
addr16
cmp
cld
pop
cmp
mov
fmul
xor
or
dec
popa
and
sbb
lods
push
pushf
adc
push
scas
fidivl
loop
test
mov
inc
inc
orb
mov
mov
mov
test
push
push
in
mov
aam
push
fiaddl
jno
and
enter
test
js
xlat
cmc
idivb
mov
je
cmp
lods
test
adcl
fidivrl
pop
adc
mov
dec
mov
xchg
sbb
push
ja
sub
repnz
xlat
or
add
lret
mov
mov
rep
cmp
lahf
xorb
dec
jno
cmp
pop
hlt
mov
add
mov
mov
repnz
mov
testl
pusha
pop
inc
or
jns
imul
jge
xor
pop
test
mov
sbb
fiadds
shlb
dec
xchg
bnd
js
jmp
andl
leave
pop
dec
hlt
fdivrl
xlat
adc
rcl
push
pop
inc
cld
and
rorb
sub
sub
dec
andb
inc
jns
fwait
pusha
es
in
icebp
addr16
adc
push
rcrl
lret
add
loop
pushf
mov
loope
jbe
push
cwtl
inc
xor
shlb
push
inc
or
xchg
mov
test
cmp
sbb
xlat
loop
leave
inc
repz
inc
popf
aaa
mov
inc
jno
mov
shrl
push
movsl
cltd
in
jns
ds
push
in
pop
push
out
jno
add
fsubrl
aaa
loop
imul
xor
fimuls
fisubrl
lods
dec
lods
jle
xchg
lahf
push
mov
cmp
scas
sub
inc
dec
inc
fwait
call
mov
jmp
fists
fisubs
cmp
stos
push
dec
and
fs
xor
mov
cltd
xchg
movsl
mov
mov
xor
xor
nop
enter
inc
in
test
inc
in
xchg
jne
pop
add
mov
fidivrl
inc
add
outsb
es
mov
repnz
lret
hlt
mov
aaa
push
gs
cmp
pop
pop
push
sarl
dec
cli
dec
test
sbb
mov
test
xor
lock
inc
rcrb
mov
sahf
ss
fcmovne
sub
flds
mov
jle
std
push
mov
and
mov
inc
add
mov
xchg
push
adc
stos
sbb
dec
fisubl
imul
xor
lret
hlt
and
mov
push
jl
das
fadds
clc
or
and
add
loope
mov
dec
xor
jg
test
lret
push
faddl
je
bound
nop
dec
mov
fistpl
nop
add
hlt
popa
stos
sub
adc
inc
jge
das
inc
pop
jbe
jns
jb
or
shlb
dec
push
pop
or
dec
mov
pop
popf
idiv
mov
inc
push
stos
cmp
in
fcomps
jne
sbb
std
icebp
push
add
cltd
xchg
adc
pop
lea
out
shll
imul
xlat
sahf
aaa
xchg
lret
add
icebp
adc
sahf
je
or
fimuls
jnp
adc
push
xchg
adc
mov
loope
scas
xor
fsts
push
mov
or
inc
cmp
in
mov
repnz
lret
movsl
and
adc
call
inc
push
and
mov
cmpsl
in
int3
mov
ds
in
mov
shr
stos
pop
dec
repnz
mov
imul
jmp
jbe
mov
jl
les
fsts
mov
adc
mov
push
test
mov
dec
push
aad
mov
adcb
int3
insl
push
scas
imul
adc
rol
xchg
lret
out
lcall
mov
and
xchg
push
push
mov
fstl
add
bndstx
lods
aam
test
jae
pushw
dec
jns
xchg
movb
imul
loopne
es
repnz
mov
jmp
add
and
add
mov
scas
xor
or
cmp
pop
pop
inc
pop
enter
inc
das
mov
rorl
push
ss
data16
jmp
fsubrp
xor
push
lods
pop
add
adcb
ret
in
stc
mov
adc
ds
not
std
xchg
xor
jne
out
fimuls
and
sbb
sbb
dec
pushl
pop
jle
fistpl
jle
push
inc
stos
sub
inc
xchg
std
jns
mov
jg
add
mov
enter
dec
pop
sbb
and
jmp
push
in
push
das
notb
jae
int
pop
lock
mov
jno
ficomps
mov
or
icebp
or
mov
test
jb
sub
scas
and
aad
xchg
sti
fsubrl
cli
shr
std
jp
es
xor
movsl
test
ret
outsl
push
pop
push
sbb
repnz
inc
scas
cmp
outsl
jb
lahf
scas
mov
sarl
mov
cmp
inc
test
bound
hlt
in
js
int3
gs
addr16
fdivrl
xchg
out
iret
fwait
out
stc
lret
outsb
push
pop
shrb
leave
lods
aam
popa
sub
jmp
in
pop
shl
pop
bound
sbb
mov
cmp
dec
icebp
and
cmpsl
inc
ret
js
and
adc
sub
or
loopne
test
ss
les
call
xlat
out
sub
add
and
xor
jl
ret
or
xor
cld
mov
xchg
jp
mov
into
cmp
mov
cmp
cld
rcrl
lret
jg
xchg
rep
push
xor
test
sbb
adc
mov
enter
lods
pop
addr16
xor
sbb
mov
movsl
sub
pop
not
pushf
in
mov
sub
bound
or
jae
pop
inc
nop
into
dec
cmc
jmp
jbe
jp
mov
push
sub
mov
push
mov
mov
push
mov
dec
sub
xchg
std
outsl
sub
cmp
mov
in
inc
jp
jae
incl
pop
lea
push
lds
cmpsl
into
cld
add
mov
jno
add
jae
pop
les
imul
aaa
jb
inc
sbb
lods
cmp
add
or
fldcw
mov
mov
test
fdiv
jmp
push
add
adcb
xor
in
xchg
xchg
ss
cmp
lahf
sti
xlat
push
jb
out
inc
mov
inc
cmp
imul
cmp
jl
addr16
lock
cmp
add
jb
push
lret
push
cmp
push
mov
test
fcoml
mov
fcoms
adc
and
dec
sub
adc
int
mov
adc
pop
mov
sub
into
cltd
dec
and
jecxz
fstpt
stc
xor
xchg
loope
shl
jae
xchg
mov
push
fwait
cwtl
jmp
lret
adc
and
mov
sub
sti
cltd
push
cmpsb
sbb
fidivs
cmp
ret
or
jbe
lahf
xchg
pop
call
pop
push
dec
xor
pop
cs
sti
inc
mov
push
int3
push
cmp
dec
shrl
fs
dec
xchg
daa
test
xor
popa
mov
sub
dec
mov
mov
test
cmc
xchg
scas
jno
cli
imul
push
jbe
into
clc
aas
adc
jp
test
loop
ljmp
and
lcall
iret
jno
inc
and
testl
ss
or
lods
mov
and
adc
ret
xlat
fisubs
cmp
bsf
sbb
popa
pop
dec
in
inc
popa
inc
inc
lock
inc
mov
jb
sub
cbtw
mov
xchg
jmp
add
out
das
dec
push
std
arpl
inc
neg
scas
sub
add
lea
or
mov
cmp
loope
mov
inc
or
repz
push
sbb
dec
js
inc
or
jl
adc
int3
dec
cld
mov
movb
xor
pusha
pop
iret
xchg
cmc
lcall
orb
std
repnz
inc
or
mov
sub
fisubl
movsb
xchg
arpl
faddl
mov
test
mov
mov
mov
pushf
insb
repz
push
mov
daa
add
xchg
addl
mov
push
aaa
popf
add
test
mov
jge
jmp
ds
movsb
and
pop
cmp
ja
aas
pop
inc
sub
push
push
ds
add
cmp
sub
mov
mov
shrb
fs
pop
testl
pusha
outsb
lods
lcall
mov
icebp
mov
mov
push
push
xor
lea
push
idivb
xor
xor
fdiv
nop
daa
xchg
das
popa
into
xchg
xchg
fildll
cmp
push
aas
xchg
test
insl
popf
aaa
test
out
lds
dec
sar
sti
push
sbb
cwtl
sub
cmp
sbb
or
imul
dec
scas
mov
gs
rolb
sbb
stos
dec
idiv
push
orb
xor
shlb
inc
push
repnz
adc
clc
adc
push
and
outsb
adcb
rcll
fadds
mov
mov
stos
mov
lock
jns
pop
jmp
icebp
stc
dec
cmp
cltd
dec
lcall
sub
in
mov
xchg
sub
aas
das
aaa
jmp
cmp
lcall
sbb
and
cvtdq2ps
out
adc
jmp
inc
xchg
icebp
jecxz
cmp
push
rorl
dec
sbb
mov
punpcklbw
jno
pop
aas
aad
add
movsb
int3
std
arpl
and
xchg
outsb
mov
inc
sldt
xchg
push
or
js
or
rclb
mov
add
add
add
add
or
in
push
or
cli
push
or
or
add
or
cs
or
inc
push
or
push
push
or
bound
add
add
add
add
add
push
or
cli
push
or
or
add
or
cs
or
inc
push
or
push
push
or
bound
add
add
add
add
add
push
imul
jb
add
push
imul
insb
insb
outsl
arpl
add
push
jb
arpl
fs
jae
add
dec
add
fs
imul
js
add
ja
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jnp
push
imul
jb
je
arpl
scas
add
imul
jae
jne
inc
gs
outsl
fs
gs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
fiadds
dec
gs
popa
addr16
outsl
js
add
inc
push
xor
cs
insb
add
push
mov
mov
mov
push
xor
mov
push
mov
test
jle
push
mov
shr
shl
cmp
jb
sub
or
cmp
jae
mov
shl
cmp
jne
movl
or
jmp
mov
inc
mov
movzbl
shl
or
decl
jne
pop
mov
mov
pop
pop
pop
ret
mov
mov
push
push
mov
movzwl
mov
shr
imul
mov
cmp
jae
mov
mov
movzwl
mov
sub
sar
add
mov
mov
cmp
jae
mov
cmp
jne
movl
or
jmp
mov
inc
mov
mov
movzbl
shl
or
shl
mov
mov
xor
jmp
sub
sub
mov
mov
mov
push
mov
shr
sub
mov
mov
cmp
pop
jae
mov
push
cmp
jne
mov
or
jmp
mov
inc
mov
mov
movzbl
shl
or
pop
shl
mov
mov
pop
pop
ret
push
mov
cmpl
push
pop
jle
push
push
mov
pushl
lea
mov
add
push
call
pop
add
dec
pop
jne
pop
pop
mov
push
pop
shl
sub
pop
ret
push
push
xor
push
xor
cmp
pop
jle
push
mov
pushl
lea
add
push
call
pop
lea
pop
mov
shl
or
inc
cmp
jl
pop
mov
pop
pop
ret
push
mov
push
push
movzbl
shr
shlb
mov
push
mov
pushl
shl
lea
push
call
pop
mov
pop
or
cmp
jne
cmp
jge
movzbl
shr
pushl
lea
shlb
shl
add
lea
push
call
pop
add
pop
or
jmp
mov
cmp
jge
pushl
add
lea
push
call
pop
or
pop
jmp
pop
mov
pop
pop
pop
ret
push
mov
push
mov
push
push
call
pop
pop
test
push
jne
mov
push
shl
lea
push
call
add
jmp
lea
push
call
pop
pop
test
push
jne
mov
push
shl
lea
push
call
add
add
jmp
add
push
push
call
add
add
pop
pop
ret
push
mov
sub
mov
push
push
push
mov
push
pop
xor
lea
mov
shl
xor
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
mov
mov
dec
mov
mov
shl
dec
mov
mov
test
jbe
mov
mov
mov
shr
rep
adc
rep
mov
mov
andl
andl
orl
lea
mov
mov
movl
cmp
jne
mov
or
jmp
mov
mov
incl
mov
movzbl
shl
or
decl
mov
jne
mov
andl
cmpl
jbe
mov
lea
and
push
mov
shl
add
lea
push
call
pop
test
pop
jne
mov
mov
sub
and
movzbl
shr
mov
shl
add
lea
shl
cmpl
lea
jge
andl
jmp
cmpl
jge
subl
jmp
subl
cmpl
je
mov
mov
sub
mov
mov
lea
pushl
push
push
call
add
andl
mov
jmp
push
pop
add
lea
push
lea
push
call
or
pop
cmp
pop
jl
mov
jmp
mov
lea
push
movl
lea
push
call
pop
cmp
pop
jne
lea
push
lea
push
call
pop
test
pop
lea
push
jne
lea
shl
add
lea
push
call
pop
test
pop
jne
cmp
mov
setge
dec
and
add
sub
mov
mov
mov
mov
incl
mov
jmp
lea
push
call
pop
test
pop
jne
mov
jmp
lea
push
lea
push
call
pop
test
pop
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
push
call
mov
add
xor
cmp
setge
dec
and
add
mov
jmp
mov
push
mov
mov
mov
mov
mov
xor
cmp
setge
dec
and
add
mov
lea
push
lea
push
call
mov
add
cmp
jge
jmp
push
pop
shl
lea
push
lea
push
push
call
add
cmp
jl
mov
mov
sar
and
dec
or
shl
cmp
jge
lea
push
push
mov
sub
lea
push
call
add
add
jmp
add
lea
push
push
call
shl
add
lea
push
lea
push
push
call
add
jmp
mov
mov
inc
mov
cmpl
je
inc
inc
mov
mov
mov
sub
mov
mov
inc
dec
mov
test
jle
cmp
jb
mov
cmp
jb
mov
mov
pop
pop
mov
xor
pop
leave
ret
push
mov
sub
mov
push
push
push
mov
cmp
jae
xor
cmp
mov
jb
movzbl
push
xor
pop
div
mov
add
dec
jne
cmp
jb
movzbl
push
xor
pop
div
mov
add
dec
jne
movzbl
mov
push
lea
push
shl
lea
push
push
call
test
mov
jne
push
pop
jmp
lea
push
mov
push
add
pushl
push
mov
add
push
pushl
push
push
push
push
call
add
mov
xor
mov
push
push
pushl
call
lea
mov
push
lea
push
push
push
movl
pushl
call
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
andl
repz
gs
push
jb
jbe
xor
xor
add
add
mov
mov
mov
sub
mov
cmpl
je
mov
mov
add
mov
jmp
movl
jmp
add
inc
dec
lock
inc
dec
lock
add
add
lock
je
andl
push
push
push
push
call
mov
push
pushl
pushl
call
mov
lea
mov
mov
movsbl
cmp
je
mov
dec
mov
jmp
mov
inc
mov
mov
sub
mov
push
push
push
push
call
mov
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
add
andb
mov
shl
mov
add
mov
mov
mov
add
mov
mov
add
mov
mov
cmpl
je
push
push
mov
pushl
push
call
mov
mov
mov
cmpl
jne
push
call
mov
mov
mov
mov
mov
add
mov
mov
mov
xor
divl
add
mov
pushl
mov
pushl
pushl
call
add
jmp
mov
inc
mov
mov
movzwl
cmp
jge
mov
imul
mov
mov
mov
mov
imul
mov
mov
add
mov
shr
rep
mov
and
rep
mov
imul
mov
mov
add
mov
jmp
push
push
pushl
call
jmp
mov
mov
add
mov
sub
mov
mov
mov
xor
divl
add
mov
andl
jmp
mov
inc
mov
mov
movzwl
cmp
jge
mov
imul
mov
cmpl
je
mov
imul
mov
cmpl
jbe
mov
imul
mov
mov
add
mov
mov
imul
mov
mov
mov
mov
imul
mov
mov
add
mov
pushl
mov
imul
mov
pushl
pushl
call
add
jmp
mov
mov
add
mov
mov
cmpl
je
mov
cmpl
je
lea
push
push
push
pushl
call
mov
mov
add
mov
pushl
call
mov
cmpl
jne
push
push
pushl
call
mov
cmpl
jne
mov
mov
add
mov
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
push
push
pushl
call
mov
cmpl
jne
push
call
mov
mov
mov
mov
movl
mov
mov
add
mov
mov
cmpl
jne
mov
mov
jmp
mov
mov
add
mov
mov
cmpl
je
andl
mov
mov
and
test
je
mov
mov
and
movzwl
push
pushl
call
mov
jmp
mov
mov
add
mov
mov
inc
inc
push
pushl
call
mov
cmpl
jne
push
call
lea
push
push
push
pushl
call
mov
mov
mov
mov
add
mov
mov
add
mov
jmp
mov
add
mov
jmp
mov
mov
add
mov
push
push
pushl
call
push
push
pushl
call
mov
pop
pop
pop
add
pop
push
mov
cmpl
jne
pop
xor
inc
ret
pop
jmp
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
push
mov
pop
mov
mov
mov
xor
and
mov
mov
mov
add
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
mov
mov
mov
cmp
je
cmp
je
inc
jmp
mov
mov
mov
sub
add
add
cmp
mov
jbe
andl
jmp
test
jbe
mov
and
shl
dec
mov
jne
mov
test
je
cmp
jne
mov
mov
shrl
mov
and
cmpl
je
and
cmp
jae
xor
mov
mov
movzbl
shl
or
movzbl
shl
or
sub
sub
sub
cmpl
mov
je
mov
push
movzbl
mov
shl
mov
pop
sub
mov
shr
test
je
cmp
jne
push
pop
sub
push
shl
pop
mov
shl
dec
xor
jmp
mov
mov
add
shr
and
dec
not
mov
mov
shr
mov
mov
shr
mov
mov
andl
jmp
orl
mov
inc
test
je
cmp
jne
or
mov
cmp
jbe
pop
pop
pop
leave
ret
add
movsb
add
add
add
add
aaa
add
add
add
adc
add
add
add
add
sgdtl
add
add
or
add
dec
add
add
add
add
add
cmp
add
adc
add
rorb
and
add
add
add
add
add
aaa
add
add
or
les
add
and
add
