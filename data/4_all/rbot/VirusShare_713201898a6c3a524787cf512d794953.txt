xchg
jp
dec
xchg
cmpsl
ss
stos
adc
movsl
ja
jne
push
jl
push
out
pop
jg
js
ret
mov
jne
repz
jbe
xor
lds
test
movsl
add
rclb
mov
psllq
ret
xchg
sbb
sbb
in
cli
insl
xchg
mov
mov
cmpsl
fdivl
insb
addr16
int3
lods
pusha
icebp
mov
inc
movsb
xor
mov
je
jns
sbb
sbb
push
fisubs
addr16
xor
in
dec
fs
inc
sbbb
stos
and
out
or
push
inc
inc
xlat
rclb
sbb
xlat
dec
js
mov
insl
xlat
scas
push
sbb
xor
popa
lcall
push
xchg
cmp
dec
frstor
jno
aam
sarb
inc
js
outsl
xchg
adc
fwait
arpl
cmpsl
push
or
aaa
and
icebp
fcomps
adc
or
loope
push
and
pop
inc
mov
dec
cli
jnp
gs
cmp
pop
lahf
push
mov
inc
push
wbinvd
push
jnp
imul
pop
popa
mov
jo
loopne
sbbl
sub
push
mov
sbb
cmp
or
dec
iret
cs
push
testl
mov
cmp
sub
mov
and
data16
in
dec
pop
shll
dec
sub
loope
add
dec
in
mov
add
add
mov
mov
jno
ja
movsl
and
xor
ljmp
aam
data16
xor
xchg
je
pop
inc
enter
pop
sbb
xlat
jl
cwtl
sbb
ret
loope
clc
andl
fs
push
popf
jle
pop
cld
cmp
mov
lds
jae
dec
or
pop
dec
out
loop
js
into
cmp
mov
loop
lock
ja
or
push
scas
xchg
fidivrs
rcr
cmp
xchg
pop
repnz
pop
imul
stos
and
mov
pop
cmpsl
inc
mov
jecxz
jecxz
adc
repnz
stc
stc
in
aas
inc
mov
push
jg
lods
call
test
lods
sarl
xchg
cmpsl
out
ret
adc
mov
sbb
cmp
inc
inc
add
dec
imul
ret
stos
pop
inc
pop
dec
cmp
daa
mov
or
aas
or
or
jae
push
xchg
inc
xchg
ret
push
push
inc
xchg
scas
jmp
lods
add
mov
jns
ret
daa
jge
cmpsl
adc
pop
imul
cmpsl
in
sub
push
shl
and
repnz
jmp
add
cmp
les
std
cmp
insl
repz
jmp
add
pop
pop
punpcklqdq
push
inc
xchg
fdivr
loop
sub
pop
jge
js
mov
ficomps
and
and
jne
cmpsl
lret
aas
ret
rorb
add
xchg
sub
xchg
stc
push
xor
imul
das
stc
arpl
xchg
push
xchg
outsl
push
test
imull
pusha
and
repz
inc
mov
jnp
and
loopne
dec
inc
mov
add
sti
xor
pop
xchg
mov
pop
test
inc
pop
inc
test
dec
cmp
idivl
dec
cmp
cmp
inc
mov
inc
aam
rclb
push
in
lds
xor
sub
stos
sub
rclb
inc
notl
cld
pop
lds
push
outsb
mov
jmp
xchg
fidivs
jmp
int3
mov
outsb
test
aas
xchg
inc
mov
loop
mov
inc
mov
addb
xchg
push
or
pop
pushf
inc
push
pop
jb
pop
pop
add
cmpsb
add
pop
pop
dec
xchg
mov
shll
repnz
xchg
and
xchg
sti
inc
sub
shl
sti
adc
test
xchg
pusha
into
in
rorb
xor
dec
sub
mov
leave
stos
mov
cmp
or
jns
enter
neg
cltd
pushl
mov
std
sti
dec
pop
fs
add
mov
add
mov
sbb
dec
insb
iret
mov
pop
cltd
ror
and
aam
xchg
mov
xor
push
inc
outsb
mov
xor
addl
push
call
add
cmc
in
imul
imul
pop
adc
in
leave
jl
addr16
mov
dec
adc
decb
push
cmpsb
pop
or
mov
ja
or
into
pop
jae
jnp
outsb
xchg
aaa
xchg
jl
movsl
fadds
lock
cmp
stos
pop
movsl
push
mov
and
rcrl
jle
or
bound
and
push
jb
jne
fnsave
xor
pop
inc
jge
jecxz
aad
push
and
adc
jg
repz
addl
fidivrl
mov
fildl
pusha
inc
mov
push
push
int
cmp
rcr
jmp
popa
imul
jne
or
pop
testb
xor
jl
fidivl
sub
jno
mov
lock
push
lea
rol
xchg
pop
daa
cmp
push
and
in
and
pop
fidivrl
imul
cmpsl
std
mov
jle
test
add
jle
mov
jae
add
xlat
stos
ret
outsb
inc
stos
dec
adc
and
popf
mov
repz
pop
xchg
dec
pop
lock
std
test
inc
movsb
xor
add
negb
and
inc
lret
jns
insl
movsb
push
mov
movl
sar
stos
and
out
xchg
ljmp
jo
in
mov
mov
cmpsl
sbb
hlt
mov
and
add
ja
pop
sub
sti
mov
mov
jp
jbe
scas
xorb
sbb
std
add
and
cmpsb
rol
shlb
dec
sbb
dec
loopne
dec
pop
inc
stos
push
xchg
inc
push
jne
adc
mov
and
repz
cltd
xor
hlt
sti
arpl
mov
iret
xchg
psllq
push
dec
fcomps
scas
xchg
pop
adc
and
test
mov
stos
rcrl
and
xor
cmp
notl
jns
inc
ds
inc
movsl
and
or
xor
and
cli
mov
div
push
ret
pop
xchg
pop
cmp
nop
rclb
fsubrl
stc
add
jae
movsb
adc
mov
jmp
das
push
fcmovb
jns
je
das
push
sarb
xchg
pop
adc
adc
fisttps
les
adc
xchg
dec
xor
mov
dec
sbb
lods
inc
mov
flds
jb
sti
stc
xchg
pop
xchg
jmp
cld
inc
xchg
sub
sub
sbb
imul
vpsrad
push
jns
rol
hlt
inc
in
movsl
mov
adc
pop
popf
mov
sbb
movsb
cmpsl
cmp
mov
mov
jnp
jnp
or
pop
mov
cmc
inc
testb
ss
imul
loope
and
mov
mov
sti
neg
jb
fcmovnbe
test
enter
test
xor
aas
xchg
fs
loopne
mov
xlat
std
mov
dec
xor
cwtl
dec
arpl
lcall
jns
jp
inc
addr16
loopne
push
ja
negl
xor
incb
pop
inc
ds
jle
pop
subb
jecxz
sbb
imul
mov
pusha
jb
stos
inc
outsl
dec
ret
inc
out
clc
stc
sarl
in
mov
hlt
sbb
or
mov
icebp
mov
cld
repnz
outsb
sbb
inc
adc
roll
and
adc
push
testb
sti
jle
sbb
adc
xchg
out
or
xor
mov
lret
or
negb
jl
cld
dec
fisttpl
mov
mov
jmp
negl
in
rolb
in
xchg
test
adc
lret
mov
add
ljmp
arpl
pop
sbb
inc
adc
add
in
leave
pop
repz
mov
xchg
lods
xlat
lds
sbb
fnstenv
mov
pop
push
mov
xor
movsb
cmp
cmpsb
dec
cmp
stos
pop
lods
xor
pop
mov
out
mov
je
cmpsb
stos
fisttpl
xchg
dec
pop
cwtl
fs
jecxz
stos
xorb
xchg
cwtl
inc
mov
adc
add
push
stos
call
adc
pop
pop
mov
xchg
sub
andb
jle
test
les
sbb
stos
fidivl
push
outsb
inc
shlb
lret
fisubl
lcall
jne
xlat
mov
sub
dec
or
push
and
shlb
lcall
adc
pop
mov
insl
xchg
dec
call
cmp
jmp
leave
pop
scas
idivb
adc
xchg
movsb
stos
pop
rcll
in
jns
in
sbb
and
insb
ret
popa
shl
push
xchg
hlt
int3
loopne
pop
sbb
popa
out
notl
scas
out
sbb
push
mov
cli
sbb
push
pop
jp
cmp
mov
test
sbb
inc
jge
cmp
loopne
inc
pop
push
fs
clc
dec
insl
fsubs
pusha
xor
lock
add
push
jb
xchg
adc
rorb
cmp
inc
inc
mov
daa
push
movsb
cwtl
clc
mov
out
push
test
inc
jmp
push
xchg
out
or
xchg
adc
sbb
popa
pop
btl
ret
clts
rcl
push
sti
cmc
adc
lcall
adc
sbb
mov
in
cmpsl
pop
rep
popf
ds
push
stos
add
jne
sarb
aaa
sub
mov
push
add
inc
mov
iret
iret
inc
movsb
test
push
out
or
xor
inc
icebp
and
sub
push
pushf
and
add
sti
jecxz
xlat
outsl
ja
addl
mov
adc
dec
popf
sbb
pop
sti
and
fmull
jnp
je
out
inc
jmp
das
rol
mov
pop
cmp
mov
std
lcall
out
arpl
push
rcr
dec
dec
imull
cwtl
lea
pop
stos
ljmp
push
mov
mov
fbld
sbb
push
mov
mov
loope
xchg
pop
ja
imul
push
js
xor
cmpsl
out
out
aas
outsl
fnstsw
movsl
outsb
cmp
imul
fwait
push
insb
into
mov
mov
mov
std
pop
out
loopne
adc
cmp
mov
sbb
xchg
cli
mov
out
jg
inc
xchg
xorl
sbb
dec
jnp
stc
inc
out
ret
fisubl
sbb
push
mov
out
inc
xchg
pop
int3
mov
int
mov
sbb
movsl
insl
leave
test
push
pop
mov
cmc
stc
clc
sub
sbb
shrl
pop
lret
or
mov
or
jae
lds
xlat
enter
push
push
or
loopne
cmpl
fs
es
bound
jo
and
lcall
divl
sub
sbb
outsb
cmp
jp
sarb
scas
lret
pop
xchg
out
cmp
push
adc
and
pop
imul
loop
cwtl
mov
sahf
sti
xor
fwait
pop
mov
sbb
mov
pop
xchg
lds
inc
rcrb
cmp
sbb
std
pop
jmp
pop
mov
cmpsb
and
and
push
das
push
pop
dec
xor
xchg
int3
test
mov
push
stos
stos
mov
fisttpl
lock
lea
mov
ret
mov
dec
pop
or
inc
arpl
ja
test
push
test
sub
pusha
push
in
jmp
les
imul
addr16
jmp
repnz
and
jno
cwtl
mov
std
push
cmp
mov
scas
loopne
xor
dec
int
dec
push
cmc
pop
sbb
pop
push
pop
mov
test
push
adc
aam
clc
inc
sahf
sbb
push
jmp
lock
xlat
lret
outsl
xchg
jne
bound
push
add
jns
cmp
pop
or
sbb
fildl
decl
mov
mov
mov
fwait
jo
add
and
fcompl
data16
sarb
in
scas
pop
dec
clc
and
sbb
int3
sub
icebp
jmp
daa
mov
cli
data16
pop
jb
lods
cltd
pop
xchg
mov
xchg
pop
jae
or
fcompl
in
les
loope
push
lahf
adc
jle
out
mov
xchg
outsl
mov
aaa
das
stc
addr16
jl
outsl
push
outsl
fcmovnu
and
pop
mov
dec
adc
leave
arpl
mov
mov
inc
ss
inc
fs
cmp
bnd
pop
push
fdivrp
cmp
mov
dec
and
pop
cmpsb
pop
out
dec
inc
test
movsb
xchg
fidivl
jb
ret
mov
mov
aam
inc
imul
dec
cmp
push
cmp
adc
or
mov
shl
ret
push
movsb
sti
jns
cmp
jecxz
fildl
mov
ja
pop
inc
pop
jb
mov
data16
enter
movsb
scas
adc
xchg
pop
xchg
loop
lock
cs
imul
ja
imul
faddl
out
stc
imull
jle
sbb
repnz
jge
fistl
pop
inc
xchg
push
popa
in
sub
and
inc
inc
sbb
push
and
out
sbb
cmp
lret
stos
mov
pop
jbe
jmp
mov
pop
stos
jbe
mov
leave
ss
jle
xor
lock
sbb
xchg
in
pop
and
push
cmp
push
xchg
or
sub
movsb
ljmp
bound
out
mov
dec
adc
dec
sbb
xor
inc
out
push
negl
add
or
icebp
addr16
sbb
cmp
or
inc
mov
sbb
pusha
or
inc
or
loope
xchg
in
arpl
or
sbb
idivb
mov
cmc
adc
jb
out
add
daa
adc
movsb
pop
jmp
push
outsl
fwait
mov
daa
jmp
insb
in
fwait
rol
inc
pop
mov
out
out
pop
out
addb
mov
sbb
xchg
ds
gs
push
inc
icebp
jecxz
mov
cmovno
or
inc
xchg
inc
divb
jo
repz
sub
leave
jle
pushl
stos
add
inc
xchg
pop
repz
jb
lea
mov
jp
lahf
mov
xchg
insb
inc
push
push
bound
fisttps
js
mov
or
bound
dec
pop
inc
inc
cld
fstl
xchg
push
push
in
orb
sarb
dec
out
push
xchg
mov
rclb
inc
daa
cld
sarb
adc
scas
push
push
mov
adcl
mov
shll
in
bnd
mov
cmp
push
pop
imul
sub
add
mull
xchg
cmp
cmpsl
gs
outsl
stos
testb
xor
add
mov
sbb
mov
jecxz
cmpsl
das
jmp
fmuls
sub
mov
mov
lret
arpl
mov
cmp
cli
sub
sbb
and
stos
aas
inc
andb
xchg
adc
sti
and
inc
mov
aam
sub
sbb
push
mov
addr16
add
mov
out
repz
and
mov
push
add
xchg
push
sbb
incl
aaa
jp
fsubl
mov
insl
movsl
in
aas
rorb
or
push
pop
jnp
push
fcomip
inc
in
dec
in
pop
push
cmp
sub
push
cmc
imul
cmp
add
std
ret
lcall
dec
mov
fistl
iret
mul
xchg
push
testl
or
mov
xlat
sbb
or
ds
arpl
nop
mov
insb
push
insl
push
fwait
jecxz
inc
mov
add
incb
mov
dec
cmp
sub
popa
inc
xlat
cmpsb
sahf
pop
push
lret
arpl
mov
repz
dec
jmp
xor
daa
pop
dec
hlt
in
data16
dec
rcl
ficoms
pop
outsl
dec
cmp
xor
rol
outsb
shll
sbb
inc
jmp
xor
rorb
jg
inc
out
mov
inc
cmpsl
and
pop
push
fwait
lcall
ljmp
xlat
lock
mov
sti
outsl
pop
pop
sbb
daa
not
in
addb
adc
jno
call
cmp
ficoml
sub
rcll
dec
popa
dec
adc
sub
push
mov
lret
push
jmp
mov
in
popf
insb
outsl
xchg
or
sbb
sub
inc
stos
negb
in
std
mov
dec
cmp
push
sti
adc
pop
jle
sub
sub
cmp
idivb
sbb
imul
adc
test
fsubrs
mov
jmp
push
pop
mov
sbb
pusha
or
xor
mov
les
mov
pop
leave
imul
adc
inc
jp
pop
js
ja
mov
cmp
mov
xchg
inc
test
rcrl
inc
mov
es
lock
dec
dec
ret
ret
adc
mov
mov
movsl
pop
adc
je
out
dec
cmp
ja
loop
push
outsl
outsl
mov
leave
adc
rclb
loop
sbb
xor
sarl
adc
out
and
into
sub
inc
xchg
out
popf
or
stos
stc
inc
js
lret
dec
nop
sbb
dec
aaa
xor
arpl
bound
ret
mov
mov
sbbb
mov
loopne
push
mov
sti
dec
inc
jp
pop
lds
xchg
clc
fsubr
xor
cmpsl
test
stc
clc
xchg
sub
xchg
inc
inc
dec
sub
mov
notb
mov
or
mov
bound
push
inc
imul
frstor
or
loope
jg
push
mov
dec
inc
cmp
or
pop
icebp
jmp
bnd
pop
jae
cmp
push
dec
sub
cld
outsl
std
adc
mov
inc
aaa
push
or
inc
aas
repnz
into
outsb
imul
xchg
test
sbb
adc
insb
pop
xchg
mov
sbb
lds
push
rcl
jl
mov
movsb
mov
sbb
shlb
fwait
loope
xor
and
popa
test
add
test
lods
push
movsb
sub
pop
add
adc
and
xchg
push
daa
fwait
bound
mov
xchg
aas
loop
jae
mov
push
into
insl
test
jl
inc
out
dec
sbb
outsl
fs
ss
fs
xor
mov
pop
repnz
dec
fsub
dec
shrl
jecxz
mov
jb
arpl
dec
jae
movsb
lret
xor
int3
les
and
push
out
jne
sbb
into
arpl
mov
testb
add
inc
inc
push
add
and
adc
mov
lret
arpl
mov
mov
mov
daa
mov
sub
dec
movsb
les
or
adc
pop
xor
icebp
in
xor
dec
mov
cmp
xchg
and
nop
es
je
test
or
cmp
stc
push
mov
loope
ss
xor
outsb
add
xor
lods
dec
dec
cmp
sub
mov
js
xor
push
cmp
jmp
mov
push
test
sub
pop
fidivrl
iret
xor
loop
push
imul
jl
add
imul
pop
pop
dec
shrl
movsb
push
lods
mov
scas
mov
loopne
dec
or
inc
cmp
or
mov
popf
out
aam
and
mov
stc
or
push
popf
adc
xchg
jmp
and
mov
mov
sub
add
shlb
pop
rcpps
mov
push
das
jmp
fwait
and
mov
or
inc
testb
jle
inc
cmc
fstl
stc
pop
xchg
dec
or
adc
jb
dec
gs
sbb
push
sti
adc
sti
out
and
add
adc
out
jmp
sub
cwtl
or
inc
xor
shl
test
jp
add
jecxz
aam
pop
fcmovnbe
fldcw
cmp
mov
test
mov
mov
mov
dec
mov
loope
xchg
fildl
imull
or
loope
popa
inc
inc
xor
imul
adc
aaa
int
ret
test
dec
popa
sti
out
dec
adc
jmp
ds
cmpsl
xor
cmp
pusha
movsl
pop
xchg
and
fldcw
lods
cwtl
ljmp
lcall
mov
movsl
es
inc
ficoms
call
mov
xor
jp
and
and
cmp
xchg
xor
dec
jmp
test
push
adc
andl
aas
and
xchg
cltd
arpl
sbb
dec
and
push
outsb
int3
loopne
push
jmp
push
sbb
inc
das
cmp
cmp
jb
mov
cwtl
imul
push
out
fildl
test
and
sarl
xchg
dec
addr16
adc
jo
xor
inc
mov
sub
hlt
jne
mov
popf
push
leave
dec
popa
push
inc
fcmovnu
sbb
inc
jae
cmpsb
loopne
push
adc
cmp
out
negb
inc
shrb
mov
xchg
inc
mov
imul
add
out
ss
in
call
xchg
notl
std
cmp
aad
cmpsb
pop
and
cmp
push
lods
idivl
mov
daa
and
clc
jns
imul
jae
std
inc
popf
aas
pop
sti
sti
mov
cwtl
pop
xor
xlat
lea
or
sub
jmp
and
lahf
push
or
mov
mov
and
icebp
inc
mov
cltd
xchg
add
jae
in
fcompl
dec
dec
out
mov
jmp
decb
sbb
pop
std
adc
in
pop
xor
adc
dec
adc
sub
mov
adc
stos
popa
ret
push
filds
mov
cmp
push
inc
or
repz
js
arpl
adc
cmpsl
scas
lods
or
adc
in
jne
xchg
scas
and
lcall
into
stos
jecxz
xor
pop
test
sbb
loopne
test
loope
mov
popa
push
inc
inc
in
sbb
fisttpl
gs
outsb
pop
pop
mov
movsl
mov
or
sbb
xor
popa
jnp
pop
leave
sbb
in
inc
inc
aaa
out
insl
inc
fistps
cs
push
cmpsl
xor
loopne
ret
pop
movsb
movsl
stos
daa
xor
fmull
icebp
aas
dec
je
nopl
iret
and
jle
test
icebp
dec
gs
push
push
dec
into
stos
je
mov
ret
movsb
hlt
insl
dec
imul
xor
add
ret
xor
pop
jmp
or
inc
daa
xor
xchg
lret
mov
outsl
push
out
jmp
mov
int
mov
pop
mov
fistpll
and
xorl
jmp
sbb
daa
fmuls
xchg
ret
fdivs
outsl
sbb
pop
sub
clc
pop
xchg
aad
xor
jae
lds
dec
pop
fcoml
push
out
leave
xchg
mov
loop
mov
add
daa
push
je
xchg
mov
cltd
xchg
les
out
daa
neg
push
mov
fmull
xlat
mov
xor
fistl
dec
setbe
cmp
in
shlb
cmp
mov
and
cmp
mov
pop
es
inc
shll
xor
insb
mov
scas
aaa
popf
sub
mov
jp
mov
inc
neg
loop
mov
mull
aaa
cld
adcb
sbb
jnp
sub
cld
add
or
clc
push
pop
sbb
inc
daa
or
lret
js
shlb
xchg
cmp
add
cltd
jnp
shr
movsb
dec
dec
jge
cld
jae
icebp
cld
push
adc
dec
fbld
mov
pop
shr
out
pop
and
push
mov
mov
push
push
mov
adc
cmpsl
jns
and
mov
mov
out
shrb
sbb
or
jns
pop
std
sub
adc
jns
mov
ja
out
xor
imulb
mov
aad
jbe
std
cmp
inc
and
jle,pn
outsb
pop
pop
adc
adc
dec
push
lret
loopne
jnp
cmc
in
icebp
movsb
addl
pop
sarl
mov
ljmp
data16
data16
ret
out
sti
jns
jp
shlb
cmp
xchg
cmp
dec
imul
nop
xchg
cltd
xor
dec
test
mov
sbb
pop
ljmp
xor
xor
mov
inc
cmpsl
test
cmpsl
xchg
ljmp
xchg
rolb
ss
ss
pop
cmp
or
mov
mov
ret
jae
in
add
add
outsl
adc
sbb
cwtl
push
jmp
shr
lods
out
mov
std
push
loope
int
imul
and
jl
sbb
pop
popf
shll
add
pop
lock
cwtl
lods
jno
or
movsl
dec
cmc
pushf
ds
pop
lea
sbb
aaa
push
ret
out
test
loop
mov
insl
jb
jno
push
shl
inc
sub
cmp
jl
arpl
jl
jmp
xor
cmp
rorl
std
sbb
ja
lret
pop
xchg
icebp
sbb
adc
out
call
insl
stc
jno
out
xchg
mov
dec
pop
xor
insb
mov
jl
out
pop
dec
push
shlb
xchg
fstpt
xor
stos
nop
sub
cmp
or
inc
dec
in
jecxz
test
lcall
or
loop
fnsave
cmp
add
cwtl
push
mov
arpl
rorl
gs
fnsave
scas
xchg
ja
incl
loopne
popf
test
stos
rcrb
mov
sahf
xchg
js
shrl
cmc
adc
sub
add
mov
dec
cli
sahf
stos
scas
cwtl
addr16
pop
sbb
sti
jbe
dec
jbe
and
popf
out
xlat
xor
xlat
in
mov
mov
dec
cld
das
ficompl
pop
ds
adc
test
add
lock
ljmp
dec
mov
aam
pop
adc
mov
stos
pop
cld
out
mov
pop
sbb
insl
sbb
sti
and
int3
fnstenv
sbb
jae
hlt
cmpb
pop
mov
ficoms
xchg
mov
pop
xchg
jg
mov
jle
sbb
xor
test
jae
xchg
mov
jbe
sbb
push
notb
stos
rorb
sti
imull
inc
js
xchg
add
xchg
outsb
hlt
cli
shr
add
hlt
mov
xor
shrb
adc
xor
outsl
rcrl
out
push
gs
dec
pop
in
jb
and
pop
decb
jp
add
dec
xchg
xlat
dec
or
add
inc
dec
repnz
hlt
cli
xor
fdivrs
jne
fstpl
sub
inc
shrl
mov
fisttpl
and
orb
insl
pop
mov
inc
inc
mov
outsl
stos
xor
out
jl
sbb
push
xor
inc
nop
dec
mov
sbb
loope
cmp
dec
movsl
rclb
test
xchg
dec
cmpsb
push
sub
mov
shll
push
mov
xchg
pop
jg
sahf
xor
adc
loope
shll
lds
sti
into
imull
pushf
in
cmp
push
mov
les
out
mov
scas
push
mov
inc
negb
dec
dec
inc
jae,pt
lahf
fildl
sbb
fdivs
and
mov
adc
mov
dec
div
ds
add
std
mov
sbb
outsl
popa
push
mov
pop
adc
bound
into
xor
ficoms
lcall
add
or
fildll
ss
sub
pavgw
or
ficompl
sub
add
fwait
out
or
stos
and
xor
add
add
sbb
ret
jnp
mov
dec
pop
xchg
add
mov
or
xchg
out
fcomps
icebp
sub
popf
repnz
es
dec
inc
cld
and
insb
dec
jl
xor
lock
push
sub
mov
xchg
aam
loop
cmp
pop
or
sbb
fistl
inc
addl
movsl
inc
inc
or
push
and
jne
dec
pop
daa
movsb
push
sbbl
xchg
je
lock
jno
negl
pop
sar
mov
fs
cmp
jno
in
add
movsl
in
sub
sbb
pop
rcll
xor
add
cmp
das
dec
std
pop
add
fisubl
stc
into
sbb
mov
cmp
scas
jmp
dec
filds
push
loopne
mov
dec
je
mov
aam
and
push
fcoms
and
pop
cltd
movsb
adc
sub
pop
pop
pop
and
xor
movsl
xchg
jmp
pop
in
pop
clc
jb
pop
pop
aad
sbb
inc
mov
push
lock
dec
mov
sbb
jnp
push
loope
cmp
push
xor
push
xchg
pop
push
in
cmc
call
cmpsb
xchg
nop
jb
das
push
jmp
push
out
call
rcl
and
daa
in
repz
subl
mov
inc
in
sub
pushf
inc
xor
arpl
nop
or
mov
jmp
xor
cmpsl
push
dec
popa
push
cmc
sub
stc
fsubr
rolb
mov
sbb
in
popa
mov
jae
insl
jmp
xor
fsubrs
mov
incb
pop
jecxz
mov
notb
mov
scas
dec
sbbb
sbb
mov
or
js
or
push
andl
rolb
xor
lds
xchg
xor
xchg
mov
out
jmp
pop
imulb
sbb
std
sar
repz
mov
or
ja
mull
mov
cwtl
sub
adc
xchg
pop
stos
inc
out
icebp
xor
jo
mov
sub
loop
dec
push
sub
shrb
cld
push
sbb
sbb
mov
mov
mov
pop
por
sarl
fidivl
fcomps
std
xchg
arpl
xchg
and
xlat
xchg
lret
fldenv
xor
clc
add
outsb
es
mov
push
sbbb
inc
aas
loope
scas
jge
outsl
into
repz
adc
or
mov
add
cli
insl
pop
or
add
add
loop,pn
cltd
mov
mov
fimull
sbb
cmp
cld
outsl
jne
outsb
or
xor
out
and
adc
jbe
leave
xchg
sbb
out
ret
icebp
add
std
mov
movsb
or
insb
std
loopne
push
aam
push
mov
imulb
frstor
mov
sahf
pop
push
fbld
out
add
sub
gs
mov
ja
push
push
adc
movsl
pop
test
data16
orl
inc
das
xchg
add
stos
xor
icebp
jl
sbb
mov
pop
std
lahf
xor
lock
jecxz
mov
idivb
adc
insb
fldcw
call
cmp
sbb
fwait
inc
insb
in
or
loop
jmp
rolb
jecxz
stc
dec
shlb
pop
adc
add
iret
rcll
inc
mov
out
xchg
mov
ret
pusha
in
jle
push
loop
popf
inc
outsl
sbb
or
sbb
xor
pop
aas
dec
cmp
cmp
pop
adc
sbb
push
movsl
lret
test
adc
cmp
repnz
cmp
push
mov
push
movsl
ljmp
push
call
inc
jecxz
cld
loopne
fnstenv
or
gs
jecxz
mov
add
mov
cmp
dec
push
dec
lahf
jg
enter
stos
shrl
mov
sub
jns
mov
fnstcw
dec
and
xchg
pop
and
mov
xchg
test
cmp
cmp
and
int
daa
push
fisubrs
test
cmp
xor
dec
push
std
adc
push
and
cmp
fldt
or
mov
jmp
test
xchg
divb
aad
icebp
push
imul
push
repnz
xor
ret
test
mov
inc
shll
add
pop
jae
jo
clc
ficoml
dec
or
icebp
sahf
mov
fisttpl
mov
mov
out
push
jecxz
inc
add
les
push
insb
inc
sub
dec
push
imul
mov
movsl
mov
test
push
cmp
cmp
je
loopne
xor
insl
out
sub
fisubs
mov
mov
subb
push
pop
xchg
out
pushf
adc
jecxz
cmp
xchg
xchg
mov
and
sbb
dec
pushf
jo
mov
dec
dec
inc
push
adc
fsts
sarb
sub
sub
cmpsb
cmpsl
mov
imul
ret
int3
push
or
cmpsb
xor
negl
mov
cld
mov
sbb
jbe
pop
or
push
push
mov
imul
dec
jg
mov
imul
test
imul
dec
flds
jnp
das
in
outsb
xchg
mov
dec
adc
mov
push
jb
and
fbld
fwait
mov
pop
mov
mov
pop
daa
or
fistl
xor
push
std
push
cmp
pop
out
arpl
pop
lds
sub
out
stos
lods
sarl
sbb
pop
imul
fwait
in
push
sbb
sub
rcll
jecxz
fstpl
cs
mov
or
shlb
jnp
ret
mov
pop
xor
leave
inc
aad
pop
repz
rorb
ljmp
in
inc
push
mov
push
mov
aam
mov
cmp
mov
sbb
inc
add
inc
dec
gs
push
cmpsl
repnz
test
inc
leave
push
dec
sbb
nop
das
pop
jp
shl
or
imul
mov
imul
sub
mov
pop
add
es
mov
mov
lods
inc
gs
out
inc
cmp
push
cwtl
test
shlb
out
inc
push
jbe
or
pop
in
dec
addr16
mov
repnz
addr16
iret
das
movsb
pop
adc
jb
or
out
les
leave
inc
incb
dec
cmp
movsb
jecxz
fsts
sbb
push
adc
bound
insl
or
scas
rorl
jbe
das
pop
pushf
repnz
dec
jae
pop
mov
andl
cltd
out
fwait
shlb
incb
mov
insb
mov
leave
cmp
sti
cmc
pop
push
add
push
cltd
and
testb
sbb
test
inc
dec
testl
ret
cmc
jae
out
cmp
mov
dec
xchg
mull
pop
movsl
push
xor
cwtl
cltd
jmp
push
es
pop
mov
cmp
cmp
repnz
les
daa
aad
repnz
push
add
push
std
fnstenv
lods
inc
ljmp
std
in
movsl
into
jmp
test
out
cmp
out
test
cwtl
inc
in
lahf
push
and
mov
daa
ljmp
fldt
mov
push
hlt
inc
push
inc
sbb
ljmp
fbstp
leave
repz
pusha
push
mov
jecxz
mov
cmpxchg
or
inc
jb
repz
dec
sub
jecxz
push
xor
or
ljmp
popf
push
fwait
testb
daa
add
fldenv
sbb
sti
xor
dec
out
or
jmp
dec
or
mov
push
adc
pusha
pop
sbb
pop
push
dec
jecxz
pop
mov
inc
outsl
mull
pop
dec
in
mov
scas
adc
ret
sub
mov
mov
cmc
inc
aas
test
mov
negb
iret
std
dec
fcmovnu
xor
pop
push
pop
jmp
repnz
sub
sub
sti
andl
jnp
adc
sti
push
es
out
mov
out
add
lahf
jns
int
adc
cmc
inc
inc
sbb
add
out
imul
outsb
mov
dec
jnp
or
add
mov
mov
ret
pusha
inc
jecxz
mov
dec
sbb
fs
fistps
xchg
mov
xchg
imul
gs
jmp
jnp
pop
mov
cli
add
mov
mov
data16
pop
imull
xor
push
add
dec
jae
mov
inc
push
pop
cmp
das
pop
jmp
addr16
inc
dec
iret
clc
daa
xor
sbb
sbb
inc
dec
sbb
add
mov
aaa
fcompl
dec
popa
ljmp
mov
lods
push
mov
les
repnz
es
mov
lock
fdivl
push
out
ljmp
dec
push
sub
lret
inc
inc
xor
arpl
movb
inc
outsb
jns
sbb
push
xor
imul
inc
add
popa
inc
popa
jge
fistpl
xor
pop
out
fldenv
icebp
jnp
sbb
or
jmp
jb
test
negl
mulb
test
shll
sti
aad
push
fistpl
mov
push
in
dec
jne
das
pop
push
ljmp
adc
loop
clc
mov
pop
or
hlt
pushf
sub
sbb
movsl
cmp
bound
push
in
sbb
imul
jno
cmp
sub
repnz
cmp
push
mov
in
and
ja
outsl
xor
inc
adc
shl
cld
xchg
inc
jae
xor
fldenv
fadd
sbb
outsl
mov
clc
mov
dec
pop
dec
mov
test
dec
imul
sub
int
ljmp
sub
fbstp
pop
icebp
call
arpl
cmp
sub
dec
and
lods
or
inc
mov
sbb
lods
sub
popa
inc
lret
pop
dec
mov
add
pop
mov
mov
fmuls
scas
mov
scas
xor
cmc
ret
mov
rorb
cli
call
aas
testb
int3
sbb
dec
decb
cmp
cmp
test
mov
jg
imul
push
xchg
mov
mov
jb
sub
ret
ret
dec
push
rcll
sbbl
lcall
dec
jecxz
jg
push
mov
call
out
loopne
mov
mov
xchg
cld
int
xor
add
das
push
inc
mov
xchg
add
or
mov
iret
and
clc
mov
sub
pop
mov
and
out
lret
std
imul
fwait
movsb
and
xchg
lret
out
add
push
sti
cmp
push
and
add
pop
cmp
push
jle
cmpsb
jle
pushw
cld
mov
pop
je
popf
xor
mov
mul
xchg
adc
cmpsl
into
mov
loope
int3
arpl
in
and
repnz
outsl
sub
pop
dec
inc
rolb
fldcw
gs
fyl2x
fmuls
outsl
pop
fs
inc
jne
imul
rorb
fmuls
and
scas
or
rcll
cld
mov
gs
shrl
lret
les
pop
dec
or
out
jo
aam
fsubp
jae
inc
imul
in
sti
cli
stos
mov
inc
cmpsb
or
fsts
mov
insl
mov
dec
mov
les
sti
jbe
cltd
pop
insl
cwtl
stos
pop
jecxz
clc
ljmp
insl
test
leave
jae
movsl
ret
push
push
dec
cmpsb
sahf
fdivs
mov
fs
fnstenv
mov
gs
pop
mov
cmc
es
jg
adc
and
mov
out
inc
pop
adc
in
add
ss
xchg
test
arpl
gs
movsb
push
arpl
jg
push
xor
sbb
test
pop
icebp
and
lea
add
ss
mov
pop
sarl
inc
flds
dec
lds
cwtl
jbe
cmp
mov
stc
cltd
inc
dec
dec
fildl
in
xchg
repnz
out
push
xlat
aam
hlt
ja
out
lods
add
imul
je
sbb
lret
cltd
xor
adc
dec
in
daa
popa
roll
scas
or
mov
repz
lahf
stc
dec
loop
scas
cmpsl
stc
movsl
mov
rorb
pop
mov
data16
sti
jne
sti
aaa
adc
push
pop
or
test
stos
push
and
scas
imul
inc
push
in
scas
hlt
int
outsb
cmp
mov
push
ss
nop
insl
push
dec
stc
adc
aas
mov
lahf
cmp
mov
jecxz
push
and
lcall
pop
fcmovnu
lahf
loope
test
jp
addr16
add
ret
push
inc
sub
mov
mov
popa
outsb
std
insl
jbe
aas
movsl
cmp
aam
imul
repnz
dec
sub
ret
call
sub
iret
mov
jp
out
ret
enter
pop
sbb
xchg
or
ficoml
lods
mov
gs
push
push
adc
and
cmp
cmp
mov
jge
push
lea
mov
enter
ds
push
pusha
jns
repnz
inc
or
add
loopne
idivl
stos
push
cmp
xor
xchg
pop
xchg
jnp
in
dec
or
pop
adc
mov
int
cmc
or
jne
or
jno
lds
pop
std
lods
xor
nop
pop
adc
lods
xor
jg
mov
test
int
dec
inc
ret
mov
pop
in
dec
and
ss
pop
and
pusha
push
jmp
repz
add
push
cmp
into
sarl
pop
cmp
or
into
add
pushf
pop
inc
movsl
shll
pop
or
mov
mov
mov
jmp
adc
iret
or
jle
or
addr16
adc
push
daa
push
adc
sub
ljmp
sub
imul
xor
pop
jle
cmc
fdiv
push
jo
push
or
or
cmpsb
rcrl
fwait
hlt
jge
out
or
cltd
test
rorl
mov
fnsave
jg
and
iret
xor
int
aaa
pop
lock
outsl
std
out
insb
hlt
movsb
adc
push
faddl
gs
cmp
dec
pop
arpl
insb
sti
stos
push
out
mulb
pop
and
add
sbb
pop
inc
push
mov
jle
sbb
jg
xchg
inc
data16
inc
jmp
movsl
sbb
movsl
out
xor
iret
jle
ljmp
cmp
mov
cld
and
adc
test
mov
test
lock
xchg
in
mov
je
out
movsl
push
jae
inc
xor
sbb
push
jecxz
jl
sbb
out
pop
sti
lcall
int3
daa
int
cmp
jbe
mov
shrb
cmc
movl
std
out
idivb
decl
add
addb
jo
imul
pushf
shll
pop
mov
cmp
cmpsb
jne
cmp
loope
mov
shll
in
adc
cmp
scas
or
das
stc
xchg
pushf
arpl
inc
cltd
movsl
ret
jne
add
outsl
or
das
movsl
mov
mov
sti
sbb
test
mov
inc
cld
inc
xchg
mov
dec
adc
std
in
icebp
loope
mov
std
out
lea
and
scas
mov
cmp
cmpsl
fisubs
xchg
pop
mov
jae
xchg
ljmp
lcall
popf
cmp
xchg
outsb
ret
mov
in
push
addps
pop
push
xor
cmp
mov
pop
xchg
mov
stc
pop
pop
fucomip
mov
lahf
gs
adc
hlt
inc
adc
jle
xchg
sub
jns
inc
cmp
jl
popf
test
daa
mov
mov
mov
sbb
adc
enter
lret
ds
mov
je
pop
jne
push
aam
jae
add
xor
repnz
jmp
pop
out
popf
outsb
pop
gs
jp
jae
bound
mov
pop
push
inc
xchg
sub
rcrl
inc
xor
out
jge
arpl
jge
lds
mov
andb
arpl
xor
test
mov
rclb
lea
in
sub
inc
mov
imul
jp
mov
mov
fwait
ret
adc
sbb
out
fisttps
cmp
or
fdivp
inc
adc
cli
xor
pop
cmp
sahf
cmpsl
push
repnz
je
stc
imul
outsb
inc
adc
out
mov
arpl
cmc
xchg
mul
scas
inc
sub
subb
xor
call
mov
xchg
les
ret
xlat
pop
mov
leavew
add
sub
fidivs
sbb
stos
lahf
popf
mov
fisubrs
cmpsb
lods
inc
mov
lods
fs
mov
sbb
jb
push
xchg
jbe
in
jge
cmp
sbb
or
mov
cmp
in
cli
lret
sbb
clc
testb
jecxz
das
daa
cmp
std
xchg
push
or
pop
lret
std
xchg
push
mull
and
push
cld
adc
jne
or
popl
sbb
sub
ja
mov
dec
push
jecxz
mov
imul
sbb
mov
pushf
sahf
adc
fwait
movsb
ss
test
cld
insl
push
push
sbb
movsb
sub
scas
test
je
push
frndint
stos
out
fidivl
inc
arpl
bound
pop
mov
out
mov
imul
or
mov
cmpsl
sub
cs
inc
aaa
gs
dec
lods
in
inc
xor
cmpsb
cmpsl
push
xor
jge
aas
push
inc
scas
popw
mov
int
adc
in
inc
arpl
xlat
mov
sbb
ficompl
jne
inc
fidivrs
scas
ljmp
inc
shll
mov
push
xor
ret
cmp
out
sbb
mov
cmpsl
xor
and
mov
mov
mov
leave
jae
xchg
scas
xor
xor
inc
inc
imul
cmp
or
dec
dec
dec
mov
imul
xchg
daa
jl
or
ficoml
scas
call
pop
dec
sbb
test
adc
pop
add
arpl
sbb
fisubrl
cld
push
icebp
push
inc
test
push
pop
pop
mov
dec
sahf
xor
clc
sbb
inc
xchg
add
push
or
enter
add
mov
test
hlt
ret
insl
sbb
adc
mov
iret
mov
add
mov
jge
scas
into
xor
jb
je
inc
adcb
push
mov
and
push
dec
sbb
sarl
sub
or
scas
out
mov
fs
imul
add
mov
mov
test
xor
and
jmp
fiaddl
dec
enter
test
dec
xor
inc
jmp
std
sub
cmp
xor
out
imul
lock
inc
pusha
pop
sti
push
or
mov
rcll
test
jnp
gs
mov
xor
pop
aad
ljmp
xor
pop
imul
lretw
out
mov
repz
out
imul
mov
cmp
icebp
push
xchg
xchg
xlat
jbe
sub
add
mov
sub
lds
pop
subl
xchg
xchg
dec
pop
lods
adc
iret
bound
sbb
pusha
cmc
pop
mov
inc
push
push
bound
and
cmpsb
aas
inc
adc
mov
dec
je
xor
push
pop
cmp
pop
stos
cmpsb
mov
sbb
mov
cmp
dec
addl
orb
out
popf
push
dec
iret
imul
pop
das
outsl
ljmp
insb
adc
aas
leave
mov
push
mov
mov
daa
adc
dec
mov
out
mov
mov
rolb
jl
pop
pop
imul
xchg
test
inc
imul
xor
jnp
inc
stos
psignb
push
ds
adc
orb
and
das
lahf
ja
cmp
pushf
pop
push
ret
mov
divb
imulb
and
icebp
loopne
mov
add
dec
icebp
pop
or
xor
jp
jecxz
dec
or
test
lahf
lods
add
lcall
stc
aad
outsl
ret
jecxz
adc
bnd
dec
fimuls
mov
sub
push
add
inc
mov
mov
sbb
and
js
cmp
fwait
in
mov
outsl
push
shrb
push
subb
cld
mov
xor
cmp
mov
sub
fdivp
or
pop
ret
sbb
cltd
in
dec
mul
push
cltd
adc
and
cmp
push
call
bound
in
adc
and
or
das
or
jmp
inc
mov
inc
out
shlb
imul
aas
jg
rorl
imul
lcall
imul
idivb
pop
fwait
jbe
xchg
mov
or
imul
imul
outsb
push
and
dec
sub
out
or
mov
pop
adc
pop
lret
mov
fidivl
pop
movaps
mov
mov
test
adc
mov
inc
xchg
jne
xchg
pusha
rcr
push
mov
fsub
xor
jmp
out
xor
dec
inc
lcall
xor
mov
mov
aam
mov
test
aaa
repnz
insl
push
loop
lret
jae
adc
sbb
jecxz
pusha
leave
or
dec
mov
mov
pop
insl
out
pop
pop
call
inc
dec
andl
movsb
ja
es
jmp
imul
jl
jne
call
push
fildl
int3
out
xor
pop
adc
mov
out
adc
pushf
dec
loop
test
inc
jecxz
inc
cmp
mov
repnz
mov
mov
cmpsl
jns
cli
and
add
pop
stos
sbb
call
pop
subb
pop
push
mov
push
ret
mov
mov
aaa
pop
insl
pushf
sub
xchg
sub
adc
sbb
and
jg
fistpl
mov
mov
inc
pop
cld
fidivs
xor
push
lret
aaa
cmpsl
or
pop
dec
das
les
int3
pop
cmp
push
dec
in
mov
test
aas
bound
or
in
je
pop
mov
or
push
mov
jo
or
dec
jl
cmpsb
inc
cmp
outsl
cmp
sbb
lahf
or
fildll
dec
dec
mov
jl
pop
sub
dec
fdivrl
dec
movsb
pop
push
add
xchg
mov
push
lock
dec
out
out
fnsave
es
lea
les
jae
sti
dec
push
test
add
push
scas
out
mov
in
lds
mulb
xlat
scas
popa
mov
pop
cwtl
push
xchg
loop
xor
pop
in
imul
insb
ret
push
aas
in
das
dec
imul
or
in
dec
dec
sbb
or
lds
cmp
xchg
cmpsl
cli
and
movsb
arpl
pop
pop
in
mov
int3
cmpsl
cmp
inc
icebp
cltd
inc
add
fimuls
cs
in
dec
insb
pop
sahf
mov
xchg
testb
mov
in
das
popf
clc
push
out
push
enter
mov
fmull
out
mov
mov
aad
fwait
jmp
lret
rol
loop
lcall
adc
mov
iret
out
lds
nop
or
mov
xchg
ds
mov
mov
mov
pop
mov
push
lock
lcall
cmpsb
and
jp
push
dec
popf
dec
ret
imul
fidivrl
pop
shlw
push
jle
and
js
add
in
outsl
or
add
push
cmpsl
adc
inc
add
dec
nop
ret
pop
in
sub
jecxz
mov
push
adc
ret
xchg
add
dec
mov
sahf
inc
ljmp
in
jp
jg
adc
std
mov
add
jmp
adc
outsb
cmc
mov
sbb
les
ret
fldcw
inc
jo
lahf
pop
in
cmp
xchg
inc
dec
adc
adc
js
inc
mov
pop
jbe
push
pop
call
xchg
in
lods
dec
xchg
ss
scas
les
xor
aas
adc
lock
pop
rcr
stos
push
lods
cmp
sbb
mov
jmp
rcrb
ficoms
xor
cmpsl
xor
add
xchg
loopne
jno
cmc
cmc
sbb
sub
add
dec
mov
inc
push
sbb
in
out
dec
je
add
jge
lods
push
out
out
inc
xor
pop
ljmp
xchg
push
mov
shll
sub
sbb
movsl
lret
dec
cltd
jg
xchg
push
xor
and
int
inc
fwait
test
testl
sbb
jecxz
lret
jecxz
sub
mov
cmpsb
wbinvd
in
inc
adc
xchg
xchg
inc
add
clc
push
mov
gs
loopne
mov
enter
rclb
hlt
dec
lock
push
jmp
mov
push
push
inc
mov
lock
arpl
je
mov
mov
les
in
mov
pusha
inc
xor
loopne
xorl
pop
scas
js
xchg
shll
pusha
pop
ja
adc
push
inc
fmuls
fnstsw
or
xor
push
jmp
mov
orb
mov
jge
jl
and
pop
mov
dec
into
cmpsl
dec
nop
pop
movsl
leave
inc
inc
mov
push
mov
inc
data16
cmp
loope
out
pop
mov
shr
push
fs
test
jb
push
cmp
aaa
dec
je
int3
fwait
ljmp
xor
mov
pop
clc
dec
loopne
into
or
les
mov
mov
in
popl
fwait
daa
out
mov
xchg
pop
mov
jmp
mov
scas
inc
je
lods
iret
sbb
sbb
xchg
test
and
xchg
dec
movsl
mov
sar
jecxz
jle
jmp
cmp
fiaddl
jmp
xchg
adc
mov
cmpsb
into
mov
je
fidivrs
xor
fs
sub
pop
mov
mov
in
fiadds
in
insb
test
iret
mov
enter
leave
jae
call
and
pop
idivl
icebp
aad
jnp
jmp
sbb
shl
dec
inc
sub
xor
mov
mov
inc
das
sbb
jp
pusha
jmp
mov
sub
cs
dec
jo
scas
les
hlt
fadd
aas
cmpsb
xlat
push
stos
inc
pop
js
arpl
xchg
sub
cmpsb
ficoms
xchg
sti
imul
cmp
push
test
pop
shl
xor
fldt
push
mov
sub
sbb
fnstcw
cmp
iret
fstpl
imul
cmp
es
or
mov
inc
imul
xchg
popf
xchg
loopne
bound
push
xor
lret
outsb
dec
pusha
cmp
lds
imul
xor
mov
push
push
adcl
mov
mov
movsb
shll
push
sti
or
and
push
stos
mov
sub
push
inc
add
xor
in
mov
orb
cmp
or
arpl
int3
ss
cmp
sbb
inc
adc
loopne
mov
jnp
push
leave
xor
pop
lods
loop
sub
test
cli
out
out
sub
cmc
mov
cmp
jae
es
sbb
gs
sbb
dec
sbb
xor
stc
xlat
adc
stos
mov
cli
idivb
fdivrl
aad
pop
jns
adc
mov
lock
jl
mov
cmp
fnstenv
call
xor
add
js
cmc
jmp
xor
sahf
xchg
js
dec
cmc
inc
ds
inc
or
jbe
idivl
inc
es
ret
jge
rcrl
dec
movsl
dec
xchg
sbb
inc
cli
into
cmc
push
mov
jg
sbb
push
xchg
inc
test
xor
mulb
sbb
in
push
sbb
mov
imul
jge
or
mov
xchg
rcll
and
pop
popa
int
inc
inc
inc
xor
stos
pop
jp
push
bound
in
xchg
push
ficompl
pop
cwtl
negl
bnd
fidivrl
ret
lahf
repz
dec
sbb
pop
mov
or
pop
mov
pop
inc
in
or
mov
lea
jl
pop
mov
repz
inc
dec
lock
sbb
sbb
pop
push
imul
or
push
out
stc
sub
dec
xchg
arpl
mov
sti
aaa
addr16
pop
adc
cli
nop
bound
std
aam
addr16
fs
repz
scas
push
sub
sbb
popa
dec
xor
pop
mov
mov
fdivrs
pop
and
cmpb
bound
sub
xor
test
mov
sbb
mov
lret
pushf
scas
push
pop
mov
subl
mov
fwait
ja
movsb
jmp
adc
xor
xchg
insb
sbb
ficoml
mov
or
dec
pop
jle
rorb
scas
mov
aas
cmp
mov
fildl
mov
lcall
cmp
in
and
inc
push
insb
arpl
notl
add
jle
insb
dec
test
push
scas
push
psubusw
les
adc
mov
xchg
lds
xchg
imul
aam
into
jmp
push
pop
inc
add
sub
inc
subl
ja
das
dec
imul
pop
jae
popa
movsl
pop
or
mov
fidivrl
sub
push
imul
and
push
push
mov
mov
mov
aam
xchg
or
inc
jmp
imul
pop
ja
mov
stc
aas
hlt
imul
pop
mov
inc
lods
test
iret
xchg
push
and
lods
lds
inc
push
push
adc
mov
test
lock
push
xchg
xchg
sub
dec
lahf
hlt
lret
fldenv
aas
pop
in
and
adc
mov
je
push
je
push
push
dec
or
add
bound
repnz
fbld
pop
mov
jns
imull
inc
jg
mov
arpl
dec
adc
push
inc
imul
mov
repnz
dec
popa
outsb
push
das
mov
inc
mov
jae
xchg
in
jg
ljmp
rclb
out
and
out
dec
aaa
push
push
ljmp
sar
imul
insb
lds
addr16
push
push
pop
incl
cmpsl
push
movsl
push
xor
cmpsl
mov
pop
inc
dec
fwait
pop
shl
and
lret
fnstenv
inc
adcl
adc
push
jp
sbb
push
sub
xchg
bound
adc
pop
popa
sub
repz
xchg
push
test
jae
sarb
pop
lods
outsb
lock
pop
pop
inc
jmp
xor
pushl
imul
inc
lcall
inc
stos
or
inc
mov
call
xor
sti
rolb
mov
hlt
aaa
dec
xchg
out
pop
das
pop
ja
push
adcl
bound
pop
arpl
jecxz
push
icebp
mov
xchg
outsb
mov
adc
mov
sbb
mov
stc
mov
inc
ljmp
adc
push
mov
push
test
xchg
lods
das
xchg
mov
and
xchg
aaa
or
fsts
sub
or
push
push
pop
les
idivl
jle
push
fsubrs
das
imul
push
lahf
arpl
fisubl
xchg
pusha
sbb
or
ret
xchg
test
dec
pop
add
xchg
inc
lahf
jnp
into
xchg
inc
inc
sub
repnz
pop
dec
jp
lds
pop
inc
arpl
push
jns
mov
xchg
xor
cmp
xchg
cmpsb
mov
in
arpl
scas
enter
lock
andb
mov
aaa
mov
push
std
mov
jge
flds
jmp
dec
add
pop
mov
xchg
jo
pop
jne
bound
mov
push
adc
movsl
cmpsb
inc
lahf
popf
test
jmp
xor
push
xorl
sub
push
add
fwait
xor
lret
cmp
repnz
das
inc
sub
out
pop
neg
push
cmpsl
mov
rcll
jmp
sbb
xchg
stos
inc
push
or
pop
imul
dec
lods
nop
outsb
ror
fwait
aas
imul
stos
ss
push
adc
sahf
mov
out
lods
sbb
cltd
hlt
loopne
sub
repz
movsb
jmp
movl
mov
shlb
clc
cltd
ljmp
repz
imul
dec
into
xchg
fldenv
xchg
je
xchg
push
loopne
push
xor
mov
pop
inc
fdivl
xchg
movb
sub
push
imul
insb
ljmp
pop
ret
cmpsl
push
dec
push
fsts
aaa
shll
cwtl
cmovb
or
cmc
mov
dec
rorb
movsl
lock
out
add
out
hlt
mov
xlat
shll
test
push
imul
inc
lret
xchg
cmp
push
and
push
sub
inc
iret
pop
mov
fnstenv
testl
clc
lahf
jo
jnp
sbb
pop
and
or
aas
sbb
mov
mov
fcom
push
dec
inc
in
xchg
sub
mov
pop
pop
addr16
fldenv
pop
daa
or
or
addr16
outsb
fwait
xchg
mov
gs
scas
test
insl
enter
imul
cmp
test
jns
xor
lods
push
divl
sahf
mull
outsl
fwait
xchg
popa
icebp
or
sahf
jp
into
jp
mov
divl
push
push
jmp
push
movsb
aas
xchg
insl
jbe
fidivl
rorl
dec
fwait
jae
fs
pop
mov
test
out
xchg
ret
jl
nop
out
mov
mov
xchg
jg
rcll
push
xchg
dec
mov
push
xchg
mov
inc
fimuls
addr16
scas
lahf
arpl
push
leave
jb
mov
push
mov
mov
imull
add
clc
add
add
rol
dec
out
dec
mov
insb
fcmovnbe
pop
or
dec
ja
test
push
pop
inc
rclb
xor
dec
insb
dec
fisubrl
into
cmpsl
popa
jne
push
or
xor
jae
sbb
int3
insb
sub
and
add
arpl
in
mull
js
cmp
inc
push
popf
jb
adc
lods
cmpb
je
fsubrl
pop
pop
out
hlt
outsb
lock
repz
loopne
xor
in
push
cli
std
pop
ss
insl
imul
jne
mov
ret
push
jp
push
movsl
inc
pop
in
call
das
outsb
jno
mov
xor
lods
push
in
inc
fdivl
mov
push
jno
aas
rorb
xor
xchg
inc
xor
mov
and
add
lods
ja
fbstp
pushf
dec
ja
jg
or
dec
adc
imul
sbb
mov
jge
or
push
shll
and
rorl
xchg
sbbl
cmp
mov
push
ret
icebp
mov
dec
cmp
movsl
mov
insb
push
jno
insb
std
mov
sti
arpl
inc
out
jle
clc
push
push
dec
std
xchg
xor
fdivr
aad
xor
pusha
mov
out
fld
fldl
ret
jge
data16
outsb
adc
int3
ja
jo
pop
xchg
ret
cmpsl
and
jno
das
push
fistpll
imul
push
pop
lret
xor
out
js
mov
nop
leave
jge
xchg
bound
rorb
mov
cwtl
data16
and
out
sbb
jp,pn
push
jecxz
idiv
std
gs
sub
mov
cmp
out
scas
sub
idivb
adc
in
pop
or
xchg
out
bound
out
addr16
jns
sahf
out
or
cmp
pop
repz
jmp
ret
call
insb
test
out
lahf
sbb
ret
out
loopne
int
sub
mov
je
mov
dec
dec
ljmp
push
dec
in
inc
lea
mov
das
cltd
dec
mov
sbb
je
xor
ss
sbb
gs
sub
push
xchg
inc
insb
fsubs
out
nop
sub
pop
push
fidivs
je
push
popa
push
mov
fwait
jl
inc
insl
rep
adc
sahf
inc
push
xchg
clc
js
mov
dec
cli
into
jle
test
out
cmp
repnz
imul
ret
ret
inc
rorb
sub
push
cli
adc
sbb
jb
addr16
ds
wrmsr
and
push
hlt
adc
mov
inc
punpckldq
lea
in
or
popf
pop
cwtl
out
rcll
icebp
mov
js
pop
addr16
adc
iret
fisttpl
in
cs
inc
dec
xchg
push
cmp
cmc
inc
push
xchg
mov
dec
fiaddl
stc
out
jp
in
aaa
mov
insb
movsl
adc
dec
lcall
addr16
test
repz
dec
sub
repz
mov
mov
enter
loopne
sub
dec
gs
js
imul
or
pop
push
dec
movsl
dec
pop
inc
fmull
pushf
mov
movsb
das
cld
or
fistpll
je
dec
repnz
test
mov
jae
and
loopne
stos
out
mull
loop
in
xchg
jmp
outsl
jmp
mov
cmp
adc
inc
mov
push
sbb
movsl
test
and
push
insl
ss
cmp
jb
mov
inc
or
sub
inc
jp
cmp
pop
mov
scas
sbb
pop
fistps
pop
mov
dec
jl
clc
out
mov
mov
add
fs
or
mov
xlat
roll
and
repz
mov
fisttpl
imulb
loop
in
push
add
or
ljmp
sti
sbb
xchg
jge
adc
mov
push
ljmp
add
loope
push
inc
cmpsl
pop
mov
xchg
cmpsb
xor
pop
sbb
inc
jns
lock
xor
rcrl
out
cmc
adc
pop
dec
fisubrs
sahf
jmp
add
aad
in
inc
loop
ljmp
mov
repz
dec
cmp
xor
add
sarl
insl
out
pop
shll
jle
jg
push
dec
outsl
loope
dec
test
mov
ljmp
mov
fwait
ja
xchg
jg
cltd
stos
shll
add
push
mov
inc
push
dec
jmp
jnp
pushf
push
xchg
mov
and
dec
mov
pop
add
outsl
shrb
pop
test
insb
sbb
out
out
je
mov
data16
les
fs
push
jae
cli
adc
pop
mov
inc
push
in
rclb
jg
iret
stos
sub
loope
dec
dec
rorl
mov
mov
jp
jnp
mov
mov
testb
sahf
iret
cmp
jae
push
out
arpl
loopne
dec
sbb
cs
pop
ret
push
mov
inc
jl
sub
jns
imul
movsl
jno
mov
mov
xor
out
pushf
cmp
mov
dec
cmp
push
insl
jnp
bound
push
push
insl
or
mov
in
cmp
mov
lahf
mov
out
push
jbe
inc
arpl
pusha
out
dec
ds
dec
mov
pop
push
pop
stc
and
inc
push
inc
test
and
xchg
mov
jg
daa
loopne
mov
fstp
cli
test
jno
dec
jnp
sbb
mov
or
push
and
pushl
outsb
fistps
inc
rcll
cld
lahf
inc
mov
mov
xchg
iret
mov
jnp
pop
mov
les
ljmp
loop
push
push
adc
ljmp
out
cld
aam
sub
add
in
pop
pop
xor
loope
aam
lahf
mov
mov
out
cmp
sub
lahf
jo
into
enter
inc
fldl
fcoml
fnsave
ret
cmp
aam
outsb
mov
pop
data16
inc
nop
lahf
push
sbb
push
and
add
lods
sub
cwtl
addr16
les
dec
jae
ss
inc
push
mov
or
les
cmp
cmc
inc
stos
cmpsb
add
fildl
ja
cwtl
push
inc
pop
in
jnp
aad
fadd
pop
stos
adc
in
and
popf
or
lock
fistpl
ss
mov
add
and
pop
fsubr
dec
std
inc
cmc
inc
mov
sarl
xchg
ret
fnsave
insb
fwait
xor
lock
sbb
xchg
lcall
cmp
sub
mov
mov
push
mov
push
and
adc
pop
or
dec
push
add
or
jb
xchg
nop
jle
pop
gs
mov
inc
dec
pusha
insb
sbb
hlt
and
rcrl
mov
cmpsl
and
ret
xor
shl
sub
add
stos
push
cs
insb
loope
push
sub
out
dec
es
call
dec
xlat
icebp
mov
push
out
insl
dec
sti
jge
sbb
in
in
sub
pop
mov
mov
rcr
les
imul
testb
inc
xchg
cmp
pop
popf
adc
and
movl
test
inc
in
xchg
jbe
cmpsl
lds
mov
in
mov
pop
insl
adc
imul
lcall
iret
push
nop
into
subb
lahf
repz
das
push
add
pop
sbb
cli
orl
pop
stc
in
and
cmpsb
fimull
lret
cmpsl
js
xor
iret
jmp
dec
xchg
mov
adc
pop
inc
mov
mov
jbe
es
fisubrs
fwait
not
aam
jle
mov
pusha
mov
jne
xor
outsb
and
push
popaw
std
jno
cmp
sub
adc
outsl
ss
xorb
les
out
mov
adc
jbe
and
mov
xor
movsl
lahf
hlt
mov
fstps
clc
rclb
sbb
sti
xor
ljmp
dec
dec
mov
inc
loope
rorb
sbb
xchg
dec
xchg
pop
mov
inc
in
fnsave
rcr
outsb
jp
iret
xor
cmpsb
movsl
mov
sub
bound
test
jbe
xor
aad
in
cmp
loopne
cmp
icebp
sub
stc
dec
add
fbld
cld
sbb
stc
daa
jb
std
lods
in
pushf
pop
data16
aaa
mov
pop
push
mov
ret
xchg
ret
pslld
out
les
fistl
inc
adc
sbb
popa
jmp
cltd
mov
call
pop
inc
mov
mov
addr16
mov
push
push
gs
jp
mov
sub
mov
and
mov
pop
add
xchg
dec
dec
adc
xor
scas
clc
enter
cmp
xorb
stos
push
push
pop
mov
arpl
sub
in
and
bound
push
inc
or
jb
ret
push
divl
jecxz
in
push
mov
lock
bound
fisubl
imul
xlat
xchg
push
cmpsl
or
cltd
xchg
and
jecxz
xchg
out
jno
push
pop
call
xlat
push
push
cmp
out
dec
pop
pop
add
out
mov
inc
jl
add
or
jne
xor
outsl
ljmp
std
sub
les
or
lcall
daa
xchg
addr16
xchg
pop
or
jnp
fbld
add
or
xchg
lret
movsl
jb
in
cwtl
inc
mov
ss
mov
xor
and
aam
push
in
push
mov
pop
jg,pn
mov
movsb
leave
cmp
mov
js
sbb
adc
xchg
lcall
fdivl
push
pop
aas
fisubrl
push
leave
repz
cld
in
mov
sbb
fldl
or
jbe
mov
pop
jbe
mov
jg
ret
sub
jmp
clc
gs
test
xor
sub
xchg
ret
mov
xchg
test
sti
jg
in
das
push
iret
aam
mov
jno
bound
ja,pn
cmp
pop
or
pop
ret
scas
adc
mov
inc
popf
lret
xchg
mov
jns
cmp
mov
testb
cli
inc
push
mov
psraw
inc
xchg
dec
push
imul
inc
push
ffree
fidivs
and
xor
js
push
sbb
ds
test
adc
xchg
mov
aam
test
jle
pop
outsb
into
leave
sbb
out
gs
inc
pop
lret
inc
jne
insl
mov
in
mov
add
mov
inc
or
fnstsw
fldl2t
xor
call
idivl
mov
sbb
pop
jae
loopne
sbb
ror
inc
cmp
sbb
push
mov
stc
nop
test
leave
pop
xchg
xchg
pop
call
ja
push
fldenv
pop
mov
jne
sbb
mov
xor
lea
mov
cmp
xor
lods
data16
pop
dec
mov
xlat
ret
adc
push
sub
jge
mov
or
and
push
inc
stos
ret
inc
lods
shrl
and
cmp
inc
jge
adc
and
jo
cld
mov
insl
pop
shr
mov
data16
cld
push
js
sarl
in
orl
xchg
fldenv
mov
inc
jecxz
out
fstpt
lods
mov
imul
addr16
xor
test
push
add
cmpl
jne
adc
xor
dec
fstpl
loop
fwait
add
dec
movl
dec
pushf
push
cmp
gs
mov
cmp
cmp
cmp
and
mov
and
outsl
lods
outsb
shrb
xchg
mov
mov
ret
fcoms
push
inc
sarl
dec
movsb
icebp
add
cmp
dec
and
aad
ss
push
popa
lods
push
jb
pop
jns
cmp
cmpsb
xor
insb
push
inc
pop
mov
mov
adc
jmp
and
nop
mov
jl
movsb
xchg
mov
cmp
push
jns
inc
ja
adc
inc
mov
out
and
push
sahf
and
or
dec
lret
roll
dec
jbe
loope
repz
movsb
das
pop
xor
mov
arpl
in
adc
adc
xor
faddl
orl
mov
mov
push
addr16
add
xchg
loopne
loop
ror
jns
ds
movsl
stc
out
ret
lds
int
jne
push
xchg
aas
xchg
sbb
pop
cld
or
push
mov
movsb
xchg
sahf
or
cmp
push
lods
push
lea
repnz
cmpsb
sbb
cmp
mov
dec
fucom
dec
das
loop
stos
subl
ljmp
mov
xchg
es
xchg
dec
mov
jp
test
dec
pop
cmp
inc
cmp
adc
dec
sbb
ss
add
fwait
jge
push
cmpsl
dec
leave
jnp
bound
aad
loope
cli
out
push
imul
xchg
scas
mov
stos
mov
je
lret
cs
xchg
xchg
rorl
leave
mov
out
iret
ljmp
test
les
rolb
dec
jae
pop
xor
cli
outsb
ret
iret
scas
xchg
call
xor
nop
cmpsb
lcall
mov
sub
test
shl
sub
xor
mov
lods
rclb
rcrl
xchg
mov
outsl
jp
int
mov
push
cmp
adc
sub
imul
dec
push
dec
sbb
cmpsl
add
pop
lds
mov
push
rcrl
jl
inc
daa
ljmp
bound
xlat
lret
mov
js
adc
test
lea
cmpl
shrb
xchg
inc
lahf
mov
xchg
lret
inc
dec
mov
test
data16
mov
mov
imul
pop
add
mov
repz
inc
popa
pop
jno
nop
mov
cmp
repz
arpl
xchg
clc
cs
cmc
repz
pop
test
lret
jne
dec
xlat
mov
dec
sbb
mov
out
push
nop
leave
and
adc
loope
cmpsl
pusha
loop
cld
fs
pop
ret
push
ret
jp
testl
inc
clc
stc
cmpsl
gs
mov
in
and
out
lods
out
jnp
add
into
aaa
push
and
ja
loopne
loopne
mov
and
sarb
fs
jo
xchg
loope
push
inc
fs
cmpb
cwtl
or
in
arpl
inc
pop
mov
gs
fwait
dec
xor
cmp
lret
cmp
jg
subl
iret
xorb
inc
jp
mov
ds
ljmp
xchg
mov
mov
insl
mov
or
cli
lcall
into
mov
shlb
jae
jmp
ret
mov
leave
les
and
aam
pop
mov
stc
lea
sub
mov
mov
push
pop
insl
cld
adc
imul
out
sub
jnp
jae
mov
and
add
or
pop
mov
xlat
out
mov
cli
outsb
imul
mov
pop
movsb
mov
bound
push
ret
movsb
icebp
in
lea
jl
popa
addr16
mov
cmp
bound
pop
xor
dec
fcoms
push
mov
jmp
cmpsb
add
or
in
adc
sbb
jmp
or
scas
and
pop
lret
jns
ret
stos
int3
insb
cmp
sub
insb
xchg
jg
shrb
lods
push
or
mov
cmp
dec
aad
mov
in
insb
mov
outsb
pop
xchg
loopne
jnp
iret
nop
xchg
push
fnstenv
repz
int3
xchg
or
mov
push
inc
clc
iret
xchg
jecxz
icebp
and
mov
hlt
into
mov
sub
mov
dec
fs
xor
and
or
push
enter
mov
aas
xchg
ljmp
or
xchg
cld
cmp
and
dec
dec
out
push
cmpsl
cld
adc
das
pusha
imul
cmp
pop
movsl
shl
in
mov
cmp
dec
or
ret
call
or
popf
fcomi
fbld
xchg
ss
es
cmp
inc
pop
and
fadds
jg
sub
mov
add
rorl
adc
jae
pop
fnstcw
jns
lret
xlat
pop
fsub
push
cs
mov
sbb
aaa
mov
or
in
rcl
jmp
pop
mov
mov
pop
xor
gs
mov
sti
ret
aas
iret
xor
mov
xor
ja
mov
or
jnp
out
scas
cmp
fistl
repz
pushf
out
xchg
movsl
pop
sbb
in
mov
mov
or
mov
inc
pop
insl
jge
xor
das
loop
imul
imul
imul
xor
pop
in
dec
fisttpll
int
je
popf
sub
push
mov
inc
fcmovb
aam
push
mov
push
dec
dec
sub
dec
jl
nop
mov
std
xchg
jg
push
mov
and
data16
aas
add
jmp
movsl
jge
rcrl
pop
cmpsl
gs
add
loope
xchg
cmp
popa
in
cmp
inc
movsb
sub
cmp
into
add
sub
divb
clc
push
aas
cmp
xchg
inc
jmp
push
ret
pop
mov
inc
arpl
fwait
call
std
dec
dec
movsl
mov
cmp
lods
and
je
push
js
sbb
ret
sbb
int3
icebp
sbbb
mov
test
fwait
cmpsb
dec
inc
mov
mov
lods
cmp
sbb
xchg
rclb
leave
mov
mov
and
push
pop
testb
imul
rcr
aaa
xor
xchg
in
mov
insl
push
div
fwait
out
cli
and
in
sub
dec
dec
cmp
aas
dec
incb
hlt
jns
mov
lret
in
leave
or
fwait
sbb
jne
mov
cmc
in
add
out
xor
pop
xchg
inc
or
pop
pop
jmp
jle
test
inc
and
mov
mov
cmpsl
jg
popa
mov
sub
xchg
sub
stc
inc
repz
pop
or
jmp
stc
inc
and
push
mov
add
jno
scas
cli
mov
cmp
lods
inc
mov
pop
addr16
adc
notb
jnp
mov
test
mov
add
and
push
xchg
out
aas
jg
push
mov
push
adc
pop
fcompl
mov
mov
je
sbbb
or
xchg
loop
jno
pop
dec
pop
mov
add
bound
ficomps
stos
inc
gs
mov
pop
cltd
imul
cmpb
xchg
ljmp
sbb
mov
mov
mov
dec
cmp
sti
lahf
sahf
adc
les
push
xor
pop
xchg
inc
shrl
aad
mov
push
xchg
in
stos
nop
dec
mov
lods
fsubrl
dec
ret
dec
scas
rcrl
dec
sub
inc
lock
in
jl
xchg
call
movb
push
and
push
xor
aam
sub
push
sahf
lods
cli
popf
lret
dec
roll
ffree
push
jge
xchg
pop
outsb
push
ja
push
mov
xor
cld
add
jns
xchg
mov
test
pop
jp
or
daa
fisubrs
pop
in
push
xchg
inc
idiv
inc
dec
out
adc
sahf
imul
dec
and
test
mov
out
or
js
or
adc
lds
adc
loope
lods
push
xchg
lods
scas
lret
mov
call
jo
rorl
insl
pop
popa
mov
jbe
aas
mov
cli
mov
lods
dec
cmp
add
popf
lea
inc
xchg
jge
dec
add
lds
mov
mov
mov
mov
push
fstpl
rol
jb
jmp
sarb
xchg
and
mov
jg
dec
mov
jns
inc
xor
jecxz
and
mov
dec
lcall
sub
xchg
cs
rcrl
dec
jge
dec
data16
sti
mov
push
sub
mov
imul
add
sub
adc
adc
cmp
mov
call
dec
adc
es
push
int3
mov
orl
and
inc
ja
xchg
inc
dec
pop
loop
mov
in
subl
and
or
pop
xchg
xchg
sahf
cmc
jae
cmpsb
into
jge
pop
mov
loopne
insl
pop
insl
test
cltd
jl
hlt
call
push
push
pusha
fildll
mov
or
jne
je
add
es
scas
mov
or
in
hlt
xorl
notl
popa
mov
popa
and
movb
pop
push
push
jae
cld
jmp
mov
pusha
cmpsb
jb
imul
jnp
mov
out
rcrl
je
arpl
adc
mov
xor
pop
mov
cmp
call
push
jno
pop
bound
roll
dec
pop
repz
fstpt
test
sti
addb
sub
push
pop
inc
jge
enter
add
pop
and
mov
mov
in
jno
jge
pop
add
pushf
dec
mov
xchg
inc
inc
push
jb
mov
mov
ja
push
adc
pop
jmp
subl
sti
jmp
into
idivl
pop
lret
pop
loop
fstpt
test
sbb
pusha
xor
pop
mov
inc
jmp
cmp
push
ja
jae
mov
cli
or
add
inc
call
hlt
int
jmp
pop
aas
addr16
call
loope
jnp
mov
jle
pop
or
je
jge
movsb
inc
cmp
and
loop
clc
xor
jae
inc
js
leave
inc
fisubl
test
outsl
in
sbb
insl
mov
mov
inc
inc
dec
outsl
hlt
jb
aam
sbb
sti
in
leave
stos
stc
xchg
push
cmc
nop
jns
out
add
fnstsw
shlb
inc
mov
movl
mov
sti
and
cld
mov
out
inc
mov
fcoml
movsb
inc
jl
lock
dec
jmp
pop
mov
ret
push
push
arpl
dec
test
and
addr16
adc
cmp
dec
out
filds
push
shl
dec
inc
sub
mov
fldl
lods
sub
into
push
sub
loop
out
inc
repz
daa
shll
ja
push
gs
pop
sub
mov
mov
mov
loopne
mov
add
popf
ret
mov
and
sahf
adc
cmp
shr
mov
and
imul
jb
call
fsubl
sbb
sub
xchg
pop
inc
or
xchg
shll
dec
adc
cwtl
mov
xchg
outsb
mov
push
xchg
fnsave
inc
rorb
pop
sub
enter
test
pushf
sbb
aaa
gs
xchg
add
imul
add
and
jnp
xchg
xor
dec
lea
and
gs
push
sti
out
lods
sbb
push
cmc
fs
pop
movsb
addr16
jl
loope
clc
adcb
and
leave
sub
mov
jns
inc
inc
je
add
pop
add
hlt
cli
mov
dec
scas
ficomps
stos
pop
xchg
mov
cmpb
xor
inc
test
addr16
jmp
ficoms
mov
scas
push
inc
mov
pop
pop
inc
add
test
sub
add
jp
popf
mov
adc
aad
or
and
xor
inc
popf
sbb
add
js
cs
sub
push
pop
adc
ret
pop
cmp
jl
sbb
adc
xor
xor
add
sub
jnp
stos
into
int3
hlt
and
or
inc
cmp
jmp
insb
movsl
cltd
notb
pop
add
sbb
lahf
jecxz
leave
iret
push
xchg
xor
mov
inc
cmp
pop
mov
mov
jne
int3
dec
lods
gs
mov
mov
ret
dec
mov
imul
ret
into
dec
xchg
xchg
enter
inc
lods
mov
testb
insb
insb
mov
test
and
and
and
in
movsl
ja
movsb
jmp
or
xchg
addr16
push
loopne
mov
cld
push
sbb
fiaddl
repz
mov
lcall
add
inc
xchg
push
mul
shll
sti
xchg
push
js
addr16
cmc
movsb
cmpsb
shrl
and
sub
pop
inc
movsb
push
scas
iret
cld
mov
pushf
mov
adc
shrl
push
psubb
mov
pusha
mov
inc
inc
or
test
cmp
mov
fisttpll
mov
je
fiadds
push
gs
lcall
sbb
std
jbe
pop
or
enter
mov
lds
xor
ss
testb
lock
mov
frstor
loop
sub
sbb
nopl
lahf
mov
push
inc
jbe
outsb
or
test
push
push
jns
movsl
loop
in
jl
or
pop
jns
ret
jp
xor
xchg
divl
xlat
fidivs
and
in
jge
movsb
sub
inc
inc
push
ret
sbb
aas
and
or
popa
inc
fwait
xchg
scas
sti
ja
loop
negl
xor
leave
addr16
lret
mov
ret
adc
dec
add
jae
jmp
nop
and
pop
es
lahf
dec
mov
push
and
pop
jmp
mov
lea
or
ret
push
and
insb
jbe
notl
adc
xor
mov
inc
mov
dec
mov
dec
cmp
pop
repnz
aas
ja
mov
int
and
xchg
mov
xor
incl
loop
cmp
fisttpll
inc
outsb
mov
rclb
inc
cmc
sub
in
in
andl
mov
popa
jbe
enter
sbb
fwait
push
fsubl
adc
or
mov
data16
mov
jo
push
sub
aam
das
push
xchg
mov
imul
fdivrs
lds
push
dec
cmp
jne
lds
outsl
or
and
adc
push
dec
fiaddl
push
mov
sbb
js
inc
lahf
insl
dec
mov
jge
sti
or
fisubrl
jg
and
dec
fdiv
push
pop
ret
ds
xchg
cmp
lret
jg
cld
movsl
scas
cltd
sub
mov
outsl
in
fucomp
fldcw
imul
adc
push
movzbl
jp
addr16
out
dec
push
mov
mov
xchg
xchg
decb
pusha
mov
push
dec
inc
jae
push
or
mov
cmpsb
mov
fldl2t
push
mov
leave
mov
add
testl
aam
fdiv
sbb
dec
scas
fwait
mov
or
popf
scas
jmp
add
push
jns
mov
sbb
jae
rorb
jg,pt
fldcw
xchg
bound
push
rcll
sub
pop
arpl
mov
adc
jmp
shlb
idivb
pop
push
and
ficoms
or
dec
jne
sub
mov
and
sahf
push
pop
mov
loope
push
cmp
aaa
test
sub
fdivs
push
mov
loope
inc
fsubl
cs
or
push
enter
or
jge
jbe
clc
jecxz
adc
or
push
das
rol
in
push
pop
popa
ja
stos
dec
movsl
ljmp
mov
jmp
ret
cld
sahf
push
pop
imul
pop
icebp
cld
dec
xor
mov
adc
jmp
dec
jl
mov
jbe
or
test
test
jmp
xchg
hlt
out
das
movsl
pop
add
scas
fisubrs
xor
push
push
scas
fnstsw
mov
cld
das
gs
daa
lcall
pop
sbb
jl
sub
das
out
push
aas
call
sub
push
into
fcmovbe
psubd
sub
mov
dec
in
adc
mov
xchg
adc
daa
xchg
sbb
or
cmpsl
loop
popa
sbb
in
add
push
pop
sbb
pop
sub
xchg
adc
les
cmp
lcall
iret
mov
mov
inc
push
mov
inc
imul
push
xor
jo
stos
inc
sub
push
outsl
sbbl
adc
sbb
sub
xor
jb
aas
inc
repnz
psubsw
adc
nop
jne
movsb
mov
xor
rorb
lret
ret
in
aas
jae
mov
dec
adc
and
inc
pop
push
inc
pop
cmpsb
jmp
mov
push
fisubs
cltd
jmp
jb
fldl
data16
sbb
jg
out
jp
je
incb
mov
imul
add
mov
xchg
push
sbb
pop
mov
dec
bound
call
out
sbb
or
into
xchg
clc
lds
mov
push
lods
fbld
shr
dec
pop
aas
ret
add
or
jae
mov
test
repnz
iret
inc
fidivrl
das
cmp
push
cmp
mov
cs
jno
sub
ljmp
nop
xor
mov
popa
dec
push
adc
and
xlat
sub
rcl
testl
xor
add
cmp
or
mov
and
push
test
popf
mov
aam
into
jbe
xchg
mov
cmp
cmp
outsl
shrl
sar
push
xlat
data16
push
jecxz
pop
add
jl
loop
mov
out
mov
sub
jle
inc
pusha
add
mov
pusha
and
jl
in
jecxz
testl
pop
jbe
mov
mov
mov
cmpsb
ds
sbb
jp
cmpsb
movsb
fnstcw
or
dec
lret
lret
nop
stc
jbe
adcl
repnz
jbe
fdivrs
addr16
mov
xchg
popf
push
ss
es
sbb
push
or
sub
test
jb
push
push
mov
cli
jne
mov
mov
mov
add
flds
mov
into
xchg
pop
div
jecxz
push
pop
pop
mov
into
lods
add
xchg
sub
into
fisttpl
mov
jo
push
jg
loope
jo
dec
movsb
push
cld
sub
mov
jg
dec
into
adc
or
sub
pmaxub
fadd
inc
xor
lods
adc
adc
pop
shr
sub
add
sub
fmul
adc
fldcw
mov
jmp
cmpsb
dec
out
insl
xor
push
movsb
xlat
push
icebp
xor
nop
lods
inc
aam
lods
adc
jmp
mov
in
dec
xchg
and
mov
and
mov
mov
cld
call
lcall
out
in
mov
repz
sub
mov
ret
sbb
cld
add
in
and
push
arpl
mov
cld
testb
inc
fnstenv
nop
rcrl
leave
mov
jnp
test
push
sub
inc
nop
xor
mov
mov
adcl
movzbl
movsl
shl
shlb
sbb
mov
or
popa
jno
and
mov
int3
mov
rep
popf
jns
int
test
roll
shll
add
in
jnp
pop
mov
daa
adc
shll
push
mov
and
imul
stos
or
stos
loop
lcall
mul
or
repnz
adc
rcr
dec
xor
rorb
in
push
fdivl
mov
pusha
push
xchg
inc
sahf
aad
mov
test
and
out
insb
rol
mov
decl
stos
inc
insl
sub
gs
popf
push
aaa
add
xchg
lods
inc
lcall
mov
cmpsb
call
ja
xchg
mov
loope,pt
pop
mov
pushf
je
inc
idiv
into
cmp
gs
or
xor
into
mov
cld
lds
push
xor
das
iret
cmp
fsubp
popf
fwait
jecxz
pop
outsl
mov
mov
fsubl
xchg
clc
cs
or
out
push
push
sub
push
lcall
in
jns
xchg
mov
jl
or
cwtl
clc
ds
popa
loopne
inc
xchg
mov
stos
aas
or
dec
xor
insb
lds
jl
add
rcrl
or
push
inc
add
rolb
dec
xchg
out
mov
lcall
push
xchg
dec
and
roll
ss
es
cmp
into
lea
inc
movsb
clc
mov
xchg
scas
jno,pt
sub
push
xchg
inc
pop
jl
jmp
out
loope
pop
pop
and
into
xchg
inc
xchg
xor
inc
xor
fnstcw
adc
pop
and
sub
mov
sbb
mov
pop
xchg
in
ror
push
pop
push
vcvtdq2pd
imul
in
dec
and
cmp
cmp
popa
loope
cmp
rolb
inc
mov
dec
imul
mov
inc
add
and
out
dec
enter
jmp
stos
jnp
lods
mov
movsb
lahf
sub
pop
jl
or
mov
mov
pslld
addr16
sub
jnp
ret
pop
fidivrs
adc
mov
addb
insl
inc
mov
outsl
pushl
or
mov
add
pop
xor
fstpl
bnd
cltd
pop
push
in
in
cmp
cmpsl
sti
xchg
sbb
mov
daa
push
pop
int3
out
mov
mov
add
inc
sbb
mov
pop
int3
loope
repnz
in
add
ja
push
mov
xor
sarl
push
aaa
and
pusha
cld
rcrb
xor
jl
adcb
call
addr16
aam
push
adc
push
mov
ret
mov
mov
pop
aaa
fnstenv
nop
inc
dec
mov
in
ret
lret
inc
ja
idivl
repz
and
aas
or
cmpsb
mov
xor
bound
jp
mov
mov
lods
mov
sti
add
cltd
ja
and
shlb
inc
xchg
sti
out
push
lods
shl
lahf
mov
outsl
pusha
inc
cmpsb
stos
jecxz
sub
test
daa
cwtl
mov
xchg
dec
mov
popa
cld
gs
popf
xchg
fsubs
jg
xorl
xchg
aam
inc
and
leave
movsl
rorb
cmp
mov
xchg
xor
or
pop
mov
xchg
cli
or
in
and
pusha
shll
mov
mov
jno
inc
or
bound
pushf
mov
mov
jnp
xor
jns
jmp
push
lods
rcrl
inc
dec
out
iret
mov
mov
xor
or
lods
sbb
push
ss
dec
pop
xchg
sub
and
add
movsb
das
loopne
mov
aam
mov
push
adc
cmpsb
jge
pop
and
mov
mov
fstpl
inc
fistps
xlat
outsl
push
add
aaa
push
and
clc
test
dec
cld
cs
lahf
repnz
or
dec
test
out
ja
fsubs
or
jb
lock
jb
cmp
sub
pop
inc
or
mov
subb
std
loop
mov
sbb
jnp
dec
xor
scas
lea
cwtl
xor
jb
scas
sub
or
mov
xor
cltd
xor
add
xor
mov
inc
xchg
sbb
cmp
test
dec
ds
in
xor
out
sahf
sbb
out
xchg
mov
add
pop
pop
iret
jo
cltd
lock
fcompl
mov
jge
adc
dec
inc
push
sbb
mov
xor
mov
andb
and
mov
jae
mov
fistpll
repnz
test
ljmp
cld
jl
in
or
pushfw
lods
mov
inc
jl
add
mov
push
mov
xchg
mov
gs
add
in
stc
mov
test
and
cmpsb
or
mov
adc
xchg
adc
jns
leave
cltd
and
adc
js
popf
dec
jb
xchg
push
data16
mov
ss
aad
mov
lahf
bound
test
fs
mov
push
mov
inc
cltd
mov
jnp
and
ret
cld
fdivl
xchg
daa
cmp
pop
add
fistpll
outsl
sbb
jns
stc
fisubrs
sbb
lret
dec
jge
rorl
dec
inc
lock
mov
outsl
xor
into
jb
jle
or
hlt
daa
lahf
ljmp
pushf
push
mov
cmp
es
xlat
jg
xor
nop
jle
mov
push
popa
jb
jne
or
into
call
sti
push
or
mov
push
inc
pop
and
mov
jg
insb
and
iret
mov
dec
outsl
add
clc
cs
icebp
inc
in
xchg
ret
pop
negb
stos
fmuls
push
push
mov
mov
push
or
mov
les
fldenv
sahf
xchg
or
cmp
add
and
push
inc
loopne
ret
faddl
out
leave
popa
mov
xor
mov
and
imulb
daa
lea
mov
movsl
les
xchg
int
sbb
inc
dec
adc
jg
cmp
jo
push
inc
push
divl
pop
les
sbb
dec
push
pop
adc
adc
in
ljmp
mov
insl
repz
call
dec
cmpsl
mov
lea
add
das
inc
insl
push
push
push
cmp
jne
dec
lret
imul
in
inc
in
dec
inc
dec
repz
or
repz
push
ljmp
stos
or
cmc
lea
jae
pop
jmp
xor
sub
and
movsl
out
out
push
stc
mov
or
or
jne
rcll
negl
xchg
outsl
pop
mov
push
cmpsl
mov
outsl
push
jo
push
ja
neg
addr16
xchg
fsts
push
loopne
popl
stc
pop
roll
aad
fwait
sti
cmp
sti
jmp
cmp
loop
mov
hlt
loope
mov
sbb
adc
adc
into
xor
push
or
push
push
aad
inc
fdivr
shll
call
rclb
sub
pop
adc
mov
mov
push
test
jp
xchg
and
mov
dec
cmpsl
lret
cmc
mov
fwait
mov
sti
mov
add
scas
test
and
add
mov
mov
subl
movsb
jle
inc
and
ret
jecxz
mov
jnp
movsl
sub
lahf
mov
sub
test
shlb
outsb
xor
add
lea
out
mov
xor
push
fisubrl
testl
sub
mov
xchg
out
lea
push
xor
dec
push
lds
popl
and
mov
inc
and
mov
fs
cmp
aam
notb
pop
xchg
mov
jg
dec
xor
xor
and
sti
loopne
je
fcmovb
inc
cmpsl
roll
jmp
xor
rorb
inc
sbb
cmp
dec
movsl
mov
add
pop
mov
fmuls
cmp
sets
imul
cmp
orb
xchg
push
xchg
arpl
pop
pop
sbb
cmp
fiaddl
into
insl
mov
xlat
stos
decb
in
fucomi
cwtl
mulb
pop
push
jg
add
cld
lds
mov
stos
xchg
pop
lret
mov
sarl
ljmp
stos
cmpsl
cmpsb
sub
mov
dec
fistpl
pusha
inc
lea
inc
and
adc
jg
mov
cmp
adc
add
fwait
outsl
lea
cmp
shrl
sub
add
fadd
cmp
jno
out
or
mov
push
add
xchg
repnz
jae
push
out
lret
mov
pop
xor
xchg
pop
jo
mov
dec
add
mov
bound
jbe
lret
adc
aas
into
out
out
sbb
aam
sbb
sub
push
adc
xchg
ret
inc
dec
inc
aad
jle
jg
jnp
add
dec
addr16
rclb
push
fs
jge
sarl
rcll
lahf
jbe
mov
cmp
mov
push
jmp
ja
ret
dec
or
std
out
mov
sbb
push
shll
cmpsl
das
jae
movsl
sub
mov
lahf
sti
ss
leave
dec
movsl
xchg
mov
movsb
pop
sbb
mov
jb
mov
push
push
mov
push
mov
or
movsl
pop
sbbl
push
xlat
pop
in
inc
xchg
leave
xor
push
sbb
cltd
mov
ret
fwait
mov
sbb
adcl
mov
dec
add
or
and
or
insl
fwait
lret
test
lea
xchg
pop
shll
cmp
hlt
cmp
add
aaa
xor
imull
jg
mov
xor
stc
addr16
imul
adc
js
sbb
dec
mov
pop
sbb
or
jp
out
add
sbb
adc
nop
adc
in
cs
add
xor
inc
mov
cltd
sub
test
sub
jg
fs
je
push
loope
and
cmp
mov
popf
cld
lock
fisubrl
das
mov
xchg
jns
xor
out
xchg
add
repz
adc
mov
idiv
push
mov
pop
dec
mov
ss
lcall
cmp
xchg
mov
mov
fisubrl
jge
mov
mov
sub
mov
mov
pop
stc
fs
adc
push
movsl
mov
xor
repz
or
leave
or
push
xchg
cld
and
sub
call
add
shrb
insl
mov
mov
daa
lcall
imul
jnp
xchg
mov
pop
push
ret
pop
bound
xchg
xor
and
dec
mov
cmpsl
inc
aaa
inc
sti
push
fmull
xor
pop
pop
adc
push
jo
inc
std
lods
pop
gs
scas
jns
movsb
xchg
js
jmp
push
mov
loop
inc
xchg
cmpsl
push
dec
and
test
movsl
add
in
cmp
out
pop
xchg
pop
xor
jle
and
ror
cli
or
dec
mov
inc
xor
lock
push
adc
test
std
pop
push
push
daa
test
lcall
rclb
repz
xor
mov
cld
ds
stc
inc
dec
call
push
jecxz
xor
cmp
inc
arpl
ds
stos
dec
mov
inc
mov
push
loop
ret
outsb
xchg
and
mov
mov
adc
enter
aad
cld
mov
sub
outsl
xor
test
jecxz
int3
jle
out
loop
jno
mov
jle
dec
idivb
push
pop
insl
push
fbld
lcall
and
dec
sahf
out
sahf
cmp
or
add
cld
cltd
xchg
mov
fmuls
sbb
out
pop
mov
xchg
and
mov
xchg
jle
xchg
scas
mov
loop
dec
jge
mov
or
push
inc
mov
fsubs
inc
gs
pop
sub
mov
aad
cmpsb
fnstsw
mov
or
cmp
aas
mov
mov
add
repnz
add
sub
dec
push
mov
stc
stos
fadd
mov
inc
ret
pop
cmp
lcall
push
xor
out
js
mov
adc
cmpb
imul
inc
repnz
leave
decl
jnp
iret
mov
hlt
and
xchg
or
imul
push
xor
cs
lahf
les
ret
mov
add
mov
daa
aad
inc
call
inc
or
push
out
mov
dec
mov
jmp
test
or
sub
addr16
jg
iret
or
lock
add
push
out
pop
xchg
cli
sbb
push
daa
test
cmp
sbb
pop
loop
dec
sub
cld
add
nop
dec
inc
adc
push
cmpsl
lahf
push
test
xchg
loopne
dec
mov
sub
aaa
mov
aas
cwtl
push
and
ss
ss
xchg
adc
or
mov
push
and
inc
fiaddl
incl
frstor
cmpsl
aas
mov
imul
add
cli
push
mov
testb
add
sahf
inc
hlt
xchg
pop
aaa
sbb
movsl
jmp
shlb
ja
movsb
sub
cmp
lret
mov
inc
out
xchg
insl
sahf
movsl
cmc
adc
aad
pop
inc
xchg
mov
xor
push
addl
je
pop
sub
jbe,pt
sub
or
adc
xchg
cmp
lret
push
inc
stc
and
addb
sbb
lea
push
mov
jbe
mov
addb
or
inc
push
adc
sti
cmpsb
add
sub
add
subl
aad
xchg
movsb
cmp
sbb
sub
xchg
inc
repnz
mov
cld
mov
shr
mov
movsb
pusha
mov
pop
mov
pop
and
loope
jg
push
insb
call
adc
inc
add
mov
and
sbb
push
fsincos
bound
and
fs
add
inc
fildll
push
out
sbb
cmpsl
bound
cmpsl
add
int
mov
pop
fsts
add
sbb
mov
and
gs
adc
or
xchg
pop
negl
mov
sbb
jp
cs
inc
fisttpll
imul
dec
mov
insb
or
mov
push
ss
mov
xchg
in
jmp
mov
ret
pop
divb
jno
js
test
pop
or
add
aaa
add
cmp
mov
pop
add
pop
mov
inc
daa
push
lcall
popa
addr16
cmp
mov
aam
aam
sub
in
pushf
lods
pop
test
enter
inc
xor
dec
nop
lods
adc
lods
xchg
adc
frstor
mov
js
data16
leave
sub
sub
dec
ja
stos
inc
cmp
push
jns
pop
mov
fcoms
into
xor
fisttpl
mov
push
sbb
xchg
cwtl
sahf
sbb
xchg
stos
xchg
inc
dec
insb
imul
xchg
dec
sub
stos
out
imul
jge
mov
enter
in
paddq
lret
sub
mov
mov
sub
or
mov
pop
add
adc
hlt
cltd
pop
mov
es
mov
xchg
mul
rolb
mov
xchg
loop
adc
mov
aam
xlat
and
test
in
shlb
aas
dec
mov
dec
std
jg
adc
or
jl
repz
or
inc
xchg
sbb
push
insl
pop
int
cltd
ficomps
mov
mov
push
mov
fidivs
rclb
imul
add
fldt
in
outsb
into
and
sbb
cmp
pop
fists
or
sbb
ja
mov
mov
andb
xor
cmp
pop
sbb
push
dec
fstl
out
js
push
loop
and
pop
and
dec
push
aas
cmpsl
iret
bound
xchg
mov
mov
lds
lods
and
loopne
mulb
inc
cwtl
int3
call
outsl
pop
arpl
mov
pop
xchg
mov
jnp
push
and
cltd
push
pop
pop
cmp
bound
xchg
ljmp
aam
les
ds
sub
push
dec
pop
clc
enter
push
les
stc
fdivrl
clc
jl
clc
jbe
xchg
mov
out
scas
movl
mov
lods
loopne
icebp
sub
clc
es
fmul
mov
or
ret
mov
test
cmp
pop
popa
cmp
loope
std
cltd
mov
sub
cmp
jno
mov
inc
mov
ja
leave
sub
pusha
adc
lcall
inc
movsl
cmp
rcll
or
imul
arpl
mov
push
test
call
andb
mov
mov
pop
cmpsl
mov
rcrb
push
pop
xchg
mov
or
inc
xchg
dec
clc
call
rcl
aad
jmp
adc
loop
aas
mov
adc
mov
out
fmull
mov
push
out
pusha
inc
cmp
mov
sub
outsl
popf
jg
or
test
adc
mov
sub
in
lret
and
and
loopne
ljmp
cli
dec
inc
mov
addr16
pop
dec
jb
jmp
inc
insl
jne
negl
dec
xchg
mov
inc
out
pop
add
frstor
mov
lahf
fs
call
clc
cmp
fcoml
out
leave
mov
mov
adc
sbb
insl
push
cmp
adc
mov
push
dec
pushf
push
clc
arpl
test
cld
cmp
or
outsl
or
push
xchg
and
dec
jg
daa
fs
cs
loopne
jbe
mov
xchg
cld
mov
enter
sti
jnp
addr16
xchg
jge
pop
mov
sbb
les
jb
cmc
shrb
push
shrl
jle
rcrl
xor
jne
shll
sub
fs
xchg
push
jnp
or
xor
sub
inc
mov
data16
movsl
ret
mov
jecxz
in
inc
das
cwtl
xchg
fsubrs
inc
xchg
push
inc
inc
popf
pop
mov
les
mov
dec
arpl
xor
repnz
loope
add
ljmp
cmpl
cwtl
or
pop
or
jae
mov
jnp
aad
jmp
or
out
pop
mov
jns
sarl
cs
push
test
push
jb
or
and
or
sbb
pop
lods
sbb
dec
ret
push
repz
xchg
loop
mov
in
or
popf
shlb
mov
inc
popa
scas
fdivr
push
iret
xor
push
and
aaa
mov
xchg
push
and
push
pop
rcrb
popf
ss
punpcklbw
mov
jecxz
push
pop
cld
lock
pop
cmp
jp
push
in
push
cmc
outsl
inc
adc
and
xchg
dec
cltd
ret
lock
mov
add
jb
or
loopne
xchg
mov
addr16
mov
subl
cmp
mov
push
fsubrl
out
jno
into
sub
cmp
nop
mov
push
and
mov
jmp
push
and
mov
inc
and
mov
add
sub
xor
cmp
scas
out
mov
repnz
inc
xor
clc
cmpsl
pop
pushf
jnp
popa
push
fistl
in
cs
pushl
dec
pop
cltd
add
fnstenv
fidivs
push
sbb
dec
lea
inc
or
push
out
loopne
add
xor
ret
inc
aaa
out
pop
mov
dec
inc
stc
push
inc
dec
out
mov
notb
push
cmp
aas
lret
or
inc
pop
icebp
add
insl
mov
test
mov
xchg
testb
in
out
fndisi(8087
cmpsl
push
adc
xor
pop
shrl
movsb
xor
lods
xor
sbb
push
pop
dec
mov
test
lahf
addr16
fidivl
pop
xchg
xchg
into
icebp
xorl
xor
inc
or
and
mov
mov
jns
or
or
vphsubwd
jecxz
mov
pop
adc
cmp
sub
dec
ret
idivl
subb
xchg
sub
into
movsl
xchg
mov
and
mov
sub
and
and
inc
inc
xor
lcall
inc
in
xor
lret
jns
jle
jl
es
lods
js
mov
in
jae
hlt
popa
sub
aaa
mov
jmp
fs
xchg
pop
push
jecxz
pop
jmp
fcomp
jle
fsub
inc
inc
jae
inc
inc
xor
or
mov
ficompl
ret
arpl
mov
mov
aad
rcr
mov
push
mov
xchg
popa
push
not
xchg
dec
lahf
es
cmp
fisubrs
lcall
mov
mov
ss
push
cmp
mov
xor
inc
adc
jge
call
adc
xchg
push
jl
lock
and
movsl
or
stos
dec
xlat
and
insl
inc
pop
jae
mov
stos
fstpt
mov
jle
dec
cmp
mov
subb
xchg
mov
push
cmc
out
addr16
jno
xchg
repnz
out
pop
push
jmp
fsubr
fcoml
loop
mov
or
aad
push
push
fcmovnu
push
popf
imul
in
pop
ret
lcall
aas
sbb
add
jbe
jae
outsl
sti
stos
fldcw
fcmovb
enter
aaa
std
fldenv
jl
add
dec
sub
add
sbb
sub
cwtl
push
inc
test
ficomps
dec
inc
fcompl
mov
test
mov
outsb
mov
push
ret
sbb
in
xor
sti
out
aas
roll
push
negb
or
mov
test
xor
push
mov
fucomp
sbb
or
sbb
push
xchg
mov
inc
inc
test
push
in
mov
insb
popa
xor
decb
sub
mov
push
cmc
ret
dec
xchg
sub
and
gs
fstl
imul
shlb
lea
mov
icebp
ljmp
cmp
into
stos
and
pushl
popa
lods
pop
adc
imul
adc
pop
test
cmpb
ret
cmc
pop
xchg
add
xor
push
mov
enter
xchg
mov
pop
and
aaa
dec
push
je
mov
pusha
in
cld
clc
mov
aas
aad
loope
mov
pop
cmp
icebp
ljmp
jmp
lret
jno
call
neg
ja
sti
lds
dec
pop
inc
cmp
jae
or
jne
add
xchg
aam
out
in
push
lahf
xchg
mov
adc
testb
subb
imul
push
jns
push
imul
fldcw
cs
popf
pushf
lret
inc
hlt
addr16
xor
sbb
cmpsl
dec
pop
into
xor
stos
stos
mov
sub
in
out
sar
popa
shlb
adc
jae
in
mov
lea
lds
xor
loope
in
push
shlb
out
bound
je
hlt
xchg
out
add
dec
sub
jmp
mov
jg
adcl
xor
cmpsl
insl
sti
add
mov
add
xchg
cld
inc
mov
mov
sub
imul
jecxz
pop
lock
data16
stc
lret
leave
dec
std
dec
ds
cmp
fs
movsb
out
enter
dec
lcall
dec
or
push
cmpsl
and
push
pop
leave
sbb
push
sbb
out
lcall
push
out
mov
or
mov
adc
in
dec
jno
popl
jne
in
adc
movsl
mov
mov
add
daa
xchg
sub
mov
or
xor
pusha
mov
out
rolb
fbstp
fistpl
or
ds
push
mov
notl
ret
imul
jno
add
jl
xor
fadd
in
jnp
repnz
mov
dec
pop
pop
pop
cmp
gs
pop
push
loop
jle
cwtl
adc
shlb
pop
or
xchg
js
adc
nop
ljmp
dec
push
into
fnsave
cmc
lret
sub
idiv
shl
cli
lea
loope
pop
je
aas
sub
aam
xchg
jbe
sub
fsubl
pop
test
lods
stos
xor
sbbb
hlt
outsb
or
in
jl
div
and
popf
cwtl
ljmp
pop
jmp
inc
adc
push
into
xchg
fidivrl
push
mov
cmp
jbe
fs
loop
mov
aam
mov
pop
bound
imul
std
lds
hlt
cltd
enter
inc
fs
outsl
jno
jp
xchg
push
rclb
lea
mov
mov
pop
dec
stos
js
jg
push
add
xchg
adcb
std
jne
pop
cmpsl
aam
mov
test
push
adc
xor
jno
movsl
fdiv
xor
sbb
test
and
cmpsb
xchg
dec
or
or
int
fildll
dec
or
test
jne
loopne
inc
into
int
push
push
pminub
or
xor
cs
imul
cmp
dec
dec
addr16
mov
cld
cmp
loop
or
ss
std
fbld
mov
push
es
aad
push
push
dec
inc
add
popf
mov
addr16
lea
push
std
aad
mov
push
and
js
push
xor
and
ret
jno
push
imul
mov
cs
leave
or
mov
in
ss
inc
out
add
cli
sbb
sti
andb
insb
lds
repnz
jns
pop
clc
xchg
mov
push
dec
pop
lcall
mov
cld
pop
xchg
into
xchg
fildll
sti
mov
jmp
aam
cmp
push
cld
pop
mov
ljmp
sub
mov
inc
data16
xor
ljmp
dec
pop
mov
sbb
js
jbe
inc
sub
dec
pop
and
daa
adc
je
dec
movsl
out
push
jns
xchg
push
hlt
mov
jg
xchg
xor
push
mov
scas
lcall
push
dec
sbb
mov
aam
adc
push
sbb
push
movsl
jmp
add
icebp
stos
pop
aad
stos
outsb
adc
xchg
add
mov
add
test
push
aad
call
neg
pop
add
scas
in
or
push
out
inc
sahf
fwait
jle
repnz
enter
cld
std
or
ds
roll
dec
clc
add
or
popf
add
sbb
cmp
popa
das
or
mov
cmc
push
pop
sbb
push
xor
fdiv
pop
mov
cltd
jmp
jo
shll
jnp
mov
dec
sarl
repnz
ret
inc
xor
mov
dec
jle
addr16
movsb
pushf
filds
jecxz
jge
push
leave
push
pop
xor
pushf
or
xchg
xchg
push
inc
dec
shrl
dec
pop
or
dec
push
add
cmpsb
js
and
imul
gs
cmp
lods
inc
jno
stos
adc
test
in
push
add
pop
xchg
push
ss
repz
lea
dec
add
idivl
mov
je
fcmovnb
scas
push
fnstsw
xlat
fistl
mov
insl
jns
add
dec
push
mov
push
add
xor
inc
les
xor
daa
cmp
in
out
push
fcomps
xor
cli
nop
mov
rol
mulb
bound
adc
lock
push
sbb
cmp
out
stos
sub
xchg
sub
adc
sbb
inc
push
in
jle
ljmp
inc
inc
int3
mov
adc
insb
out
push
sbb
notb
or
lcall
fldcw
aad
inc
dec
or
push
loop
xor
pop
insb
cmp
dec
mov
xchg
mov
adc
cmovno
in
in
daa
out
out
int3
ss
sbb
and
addr16
jo
call
jge
sbb
call
jno
ja
sub
jo
fucomi
inc
mov
cmp
mov
pop
ss
xchg
cmp
pushl
les
dec
mov
pop
sbb
pop
data16
int
or
jno
and
in
sub
aas
xchg
add
xchg
out
jns
mov
and
xor
ja
push
loope
stos
inc
mov
or
pop
mov
xlat
aas
mov
test
rcrl
lahf
mov
clc
test
fcmovnbe
and
add
cmc
sbb
or
adc
adc
test
pop
es
xchg
dec
and
mov
adc
out
mov
jne
mov
sbb
loop
push
aad
fs
jg
pop
push
cmp
add
jne
ret
imul
xor
insl
jne
cmp
js
cmpsb
das
and
push
inc
stos
xchg
test
mov
call
jb
jge
insb
fisubl
std
jns
cli
mov
adc
and
and
add
pusha
insl
int
daa
and
fs
jl
jmp
idivb
sbb
dec
xchg
jae
sub
mov
push
cmpsb
rcll
rorl
inc
jp
std
cli
and
cltd
mov
loopne
xor
frstor
and
fs
fsubs
jge
and
hlt
mov
ss
fcomip
in
rcl
jmp
pop
xchg
jp
xchg
shl
jecxz
rolb
push
jnp
shll
mov
and
inc
pop
or
mov
icebp
insb
loopne
pop
or
subb
insb
insl
inc
fwait
jnp
fwait
fs
enter
fistl
cltd
push
int3
mov
rcrb
loopne
loop
pop
fstp
add
cmpsb
push
and
cmp
inc
lods
fiaddl
sbb
pop
mov
dec
movsb
mov
pop
pop
and
adc
in
mov
xor
sbb
fisubl
imulb
test
jp
and
fcoms
and
popa
aaa
xor
jmp
xor
cwtl
push
jl
movsl
inc
mov
out
pusha
xlat
push
imul
test
ljmp
out
xchg
data16
mov
movsl
inc
and
xchg
pop
fsts
test
xchg
sub
ja
pushf
sbb
or
popa
outsb
xor
movsb
je
adc
sbb
push
cltd
es
sub
cmpsl
jl
mov
pop
imul
jecxz
dec
pop
mov
or
xchg
cmpsl
inc
or
pushf
and
pop
jle
testl
dec
bound
inc
cltd
xor
push
mov
push
dec
aaa
std
jmp
test
and
add
ljmp
ret
notb
movl
jge
cmp
gs
dec
out
sbb
out
mov
inc
xchg
jle
nop
mov
js
or
movsl
pop
add
movsl
add
mov
stos
push
lock
pushf
lcall
div
adc
xlat
addb
out
scas
cmp
lods
fcoml
pop
sti
inc
push
adc
test
mov
scas
out
xor
in
push
fs
mov
rcrl
mov
adc
loop
ljmp
imul
add
int3
or
out
sub
pop
out
nop
xor
jae
lds
aad
ljmp
dec
in
cltd
movsb
dec
je
fs
out
jl
xchg
mov
shlb
rolb
cmp
mov
mov
fcmovu
loop
xchg
mov
mov
xchg
add
mov
bound
repz
add
mov
imul
ja
push
jno
shll
and
ret
subl
aaa
bound
mov
push
in
pop
dec
add
mov
repnz
insb
xorl
xchg
and
ret
mov
popf
addr16
push
dec
leave
sub
das
and
rcll
jmp
pop
mov
mov
aam
idiv
mov
and
out
inc
mov
mov
xchg
jo
js
hlt
das
out
rol
lods
add
mov
jae
or
or
rolb
dec
mov
ljmp
div
push
pop
mov
pop
pop
mov
clc
or
movsb
inc
test
js
mov
sbbb
and
cmpl
or
cmp
cmp
xchg
imul
dec
cmp
es
fcmovne
out
cmpsl
pop
inc
cmp
push
out
lock
scas
shl
aam
negb
mov
mov
sub
je
jb,pt
loopne
cmpsl
add
movsb
xchg
inc
fwait
mov
push
aas
ljmp
pop
dec
in
out
cmpsl
sbb
pop
pop
test
pop
pop
imul
xchg
pop
inc
pop
in
dec
dec
cmpsl
es
les
in
sarl
inc
or
stos
int
movsl
movsb
adc
test
inc
es
bound
mov
cmp
mov
inc
aam
sub
pop
movsb
push
orl
pop
out
js
bnd
jo
mov
lahf
sahf
or
mov
adc
aas
mov
movsb
fstpl
mov
inc
xor
xchg
sbb
jle
mov
inc
cmp
aas
cwtl
pusha
inc
xor
imul
js
hlt
negl
xchg
push
sbb
pop
ret
mov
sub
pop
push
mov
pop
out
or
ja
test
mov
ret
add
cmp
dec
xor
cmpb
mov
adc
mov
test
sahf
mov
or
mov
outsb
in
push
lods
add
xor
sub
ljmp
jno
add
or
insl
xchg
sub
and
add
mulb
sbb
pop
pop
and
xchg
sbb
lahf
add
xor
cmp
ret
daa
nop
pop
leave
imul
sbb
sub
aam
or
pop
push
sbb
jge
dec
loop
imul
clc
movsl
xchg
dec
adc
dec
sub
xor
gs
dec
ja
push
imul
adc
sbb
scas
push
adc
adc
imul
lcall
push
pop
inc
pop
add
push
adc
inc
inc
or
mov
test
adc
jb
push
mov
push
enter
add
out
cmp
mov
push
lea
ja
lret
add
jle
mov
movsb
cmp
jg
rcrl
jle
cld
out
repz
xor
ja
movswl
orb
xor
mov
push
repnz
outsb
mov
add
imul
lret
add
ljmp
roll
ljmp
or
push
pop
or
jle
movsl
and
jl
sbb
sti
addl
aas
xchg
jmp
out
xor
adc
mov
dec
adc
loopne
stos
add
mov
add
stos
push
daa
imul
xchg
sub
push
dec
into
popf
mov
int3
lds
sbb
test
push
add
cltd
lea
lods
and
jae
scas
fdivs
pop
push
push
and
es
cwtl
push
inc
outsl
push
push
repz
jo
clc
mov
daa
adc
xor
jnp
pushf
jg
aas
xchg
mov
pusha
xchg
dec
stos
divb
pop
inc
arpl
push
jmp
aaa
js
mov
imulb
mov
push
mov
shlb
xor
jle
mov
cltd
sub
mov
sbb
mov
bound
adc
outsb
mov
jge
repnz
adc
rcrb
out
cmp
ret
and
lods
sub
or
in
or
dec
fimuls
aad
call
clc
nop
cmc
sub
add
xchg
cmp
adc
pop
lds
fcoml
mov
jg
add
mov
sahf
adc
and
xchg
and
push
pop
add
cmp
cmp
jae
sbb
mov
jnp
adc
pusha
adc
out
jmp
into
or
pop
ret
adc
push
rcrl
sbb
jnp
jecxz
push
sbb
lret
jge
or
sbb
mov
scas
js
push
movsb
sbb
dec
incl
and
inc
out
in
out
jp
or
int
pop
mov
dec
stos
arpl
push
movb
lcall
add
or
cmp
cmc
add
jmp
dec
or
ret
dec
cmp
inc
adc
sub
push
imul
orl
repz
enter
stos
adc
xor
shrl
xchg
les
std
cmpsb
das
inc
mov
cmp
daa
out
ljmp
push
shlb
fs
pop
xchg
out
div
fadds
not
xor
loope
adc
mov
add
pushf
imul
in
out
and
dec
xchg
cmpsb
repnz
mov
movl
mov
test
enter
ret
scas
cmp
xor
pop
enter
inc
push
and
call
jns
in
push
icebp
xchg
lods
mov
pop
inc
xor
xchg
push
test
push
std
sbb
movsl
sbb
pop
testl
push
xchg
or
push
outsb
pop
push
cltd
mov
shrb
cwtl
push
dec
hlt
pop
mov
dec
pop
aam
cli
push
es
push
mov
or
mov
inc
data16
movsb
sbb
xchg
cmp
push
shr
repnz
call
or
jbe
lret
inc
pop
mov
push
imul
mov
mov
push
ret
std
dec
cld
pop
jbe
adc
pop
adc
outsb
iret
hlt
push
inc
mov
add
rol
push
sbb
dec
sarl
std
pop
jno
xchg
mov
lahf
out
aas
mov
stc
outsb
dec
sbb
dec
push
stc
fnstcw
sbb
std
dec
sbb
xor
pop
fstp
and
enter
fistpl
cmpb
mov
pop
aas
cmp
lods
shrb
jns
scas
xchg
jmp
insb
xchg
cmpsl
hlt
mov
and
mov
xor
movsb
jp
ss
lcall
daa
dec
outsl
jl
iret
pushf
or
negb
jnp
add
mov
cmc
into
rorl
imul
mov
mov
fndisi(8087
mov
stc
sbb
adc
pop
in
lret
pushf
loop
pop
push
leave
loopne
cmc
cmpsb
mov
or
aad
pop
add
push
sahf
adc
insb
push
enter
sbb
in
cmp
mov
fwait
and
popf
cmp
xchg
imull
call
lret
mov
stos
sub
repnz
out
lods
pop
inc
lahf
mov
dec
in
xchg
cmp
sahf
jle
in
xor
insl
xchg
aaa
push
adc
push
dec
inc
xchg
lret
mov
mov
or
ret
iret
andl
or
mov
je
insl
movsb
push
cmp
sti
xchg
femms
cmp
fists
sub
xchg
and
inc
fildll
jge
lea
or
push
jecxz
inc
js
add
xchg
std
adc
sub
pop
ja
incb
int3
ja
mov
out
mov
lcall
cmpsl
lret
lods
ret
in
dec
mov
and
arpl
push
ss
xchg
inc
dec
dec
jle
mov
out
rclb
test
in
nop
out
mov
sarb
in
add
aas
sbb
mov
mov
mov
jae
insb
movsl
shrl
mov
mov
and
add
xor
imul
and
lock
mov
mov
icebp
popf
rcr
or
adc
fisttpl
mull
sti
cmp
push
lods
mov
popa
call
loop
sahf
mov
mov
jp
rcll
enter
push
addr16
sub
out
mov
cmp
mov
leave
in
push
jge
in
or
xor
mov
jns
xor
pop
movsl
xchg
cmc
fdiv
add
mov
mov
lea
negb
adc
mov
push
lds
pusha
inc
xor
cmp
xchg
outsl
inc
shlb
and
sahf
push
scas
das
xchg
sahf
pushf
sbb
push
mul
cwtl
push
mov
lret
in
in
lahf
ret
and
mov
pop
shl
adc
xor
lods
int3
inc
sti
adc
sbb
xchg
cli
mov
xor
in
sti
xor
out
call
inc
out
or
sub
insb
adc
sar
inc
outsl
cwtl
push
fldt
cltd
mov
and
ljmp
mov
sbb
das
xor
add
dec
rclb
mov
scas
nop
into
adc
mov
mov
pusha
cmc
daa
cs
sbb
ret
js
dec
xchg
imul
jbe
adc
aas
jno
jl
jae
dec
insl
jb
cld
add
push
mov
add
loope
sbb
xchg
repnz
jbe
or
js
adc
iret
in
insl
lahf
push
movsl
ret
xchg
pop
loope
iret
adc
sti
jb
rcr
popa
inc
push
cmovs
addr16
push
andl
sub
jbe
insl
or
sbb
jmp
out
xor
out
aad
push
shrl
aam
mov
loopne
sbb
cmc
data16
cli
add
pop
adc
mov
dec
and
and
fisubl
push
loopne
cmp
pop
pop
xor
decl
out
sub
xchg
pop
inc
inc
aas
fldcw
adcb
into
mov
inc
decl
dec
adc
cli
inc
add
lahf
nop
xchg
sub
pop
dec
mov
out
jb
xchg
mov
push
dec
and
add
loopne
jmp
lea
pushf
loopne
mov
insl
pushf
mov
mov
int
mov
and
stos
fwait
shrb
fdivrs
fdivrl
in
test
jl
xchg
stos
or
add
fsubl
mov
xchg
cmpsl
add
push
pop
jge
lea
les
mov
mov
xchg
outsb
in
xor
fs
sub
das
jl
dec
mov
push
sar
shll
and
cmp
sub
pop
lock
mov
int
dec
stos
pop
fistpl
mov
push
repz
dec
fcmovu
push
mov
dec
imul
pop
push
fnsave
not
push
cli
adc
dec
jo
cmp
ljmp
movsb
mov
lahf
repnz
hlt
mov
inc
outsl
cmp
mov
imul
mov
ficoms
xchg
imul
pop
cmc
addb
mov
push
push
pop
pop
lds
mov
inc
dec
cmp
in
dec
pop
leave
fildl
push
cltd
inc
sahf
rol
or
sbb
out
das
movsb
dec
scas
nop
out
les
jmp
jno
mov
rclb
mov
cmp
stc
mov
mov
mov
out
imul
mov
inc
pop
pushl
movsl
add
addr16
std
shr
add
jnp
sbb
sbb
xorb
mov
lods
mov
jmp
test
aam
sbb
xchg
adc
aaa
ret
popf
xchg
adc
jbe
in
cmp
icebp
jmp
mov
push
dec
outsl
rolb
nop
cmp
ret
push
aad
or
insl
cmpsb
pop
sub
pop
push
nop
imul
jecxz
in
daa
pop
add
mov
ss
rcrl
imul
sti
jge
jbe
test
cmp
and
movsb
inc
mov
jb
mov
cmp
push
stos
fwait
test
xor
add
and
jl
movsb
pop
std
js
mov
sbb
ret
inc
insl
and
jb
pop
push
fwait
mov
stc
enter
inc
xor
es
cmp
xor
push
insb
bound
jne
fisubs
loope
and
xorl
rcll
call
sbb
cld
cmp
mov
mov
cmp
ja
aam
xchg
dec
dec
rorl
icebp
js
rcll
mov
push
jecxz
fisubrl
adc
pushf
mov
inc
xchg
fnop
sub
loop
push
sti
jecxz
push
scas
xor
or
xchg
mov
jl
aas
rolb
dec
aas
mov
sub
dec
ds
popa
test
jmp
jns
cli
lahf
ret
push
adc
inc
jns
mov
or
mov
mov
push
aam
lock
dec
movsl
push
sub
js
cmc
into
ljmp
or
imul
popf
lods
mov
loopne
jae
adc
xor
pop
fists
inc
add
sub
lods
inc
push
out
gs
or
xchg
add
mov
mov
cmp
or
xor
xchg
inc
and
and
je
mov
test
or
push
and
dec
icebp
mov
pop
mov
sub
jo
push
popf
cmp
or
mov
aad
sarb
mov
push
add
dec
int
out
cli
mov
gs
scas
aas
add
test
xlat
ficompl
cmp
jmp
cmp
rol
xorl
push
cmpsb
push
xchg
int
je
cmp
sbb
jno
inc
inc
add
inc
imul
push
add
out
mov
push
fcmovne
inc
ja
add
add
push
inc
rol
mov
pop
sbb
push
push
inc
mov
inc
cmp
add
mov
cli
out
pop
cmp
movsl
adc
dec
sti
lea
jl
out
fsub
cmpl
in
into
xchg
jle
sbb
push
xchg
scas
js
mov
movsb
inc
mov
pop
and
xchg
adc
dec
cmpsl
aas
push
xor
aam
xorb
cmc
push
hlt
jo
in
cli
fucomp
xchg
js
rcr
mov
and
imul
clc
aad
in
mov
pushf
and
ds
ja
mov
dec
sub
movsl
sbbl
mov
jle
push
shrb
adc
je
imul
fsubr
leave
sub
ret
aad
ljmp
les
cmp
dec
shl
shrl
mov
inc
xor
cmp
jmp
jne
fwait
pop
mov
je
out
mov
and
fidivs
mov
bound
mov
in
push
fbstp
arpl
arpl
adc
fwait
add
sub
pop
dec
ss
inc
cltd
push
inc
dec
adc
lret
stc
adc
hlt
aas
push
xchg
in
pop
pop
lret
mov
lods
mov
jl
add
div
cmp
pop
fstl
sbb
in
repz
inc
push
cmpsb
stc
fmull
std
mov
push
insl
arpl
mov
and
leave
scas
add
jge
jo
pop
cmpsl
adc
in
adc
sbb
lods
mov
dec
add
and
add
push
inc
shl
test
test
sahf
xor
rcrb
enter
and
daa
or
sbb
lret
pop
xchg
fistpl
aaa
sub
mov
push
mov
pop
push
inc
cmp
adc
xchg
dec
roll
adc
and
mov
insb
popf
mov
inc
lret
dec
xlat
push
mov
jl
jae
lods
pop
fadds
into
add
pop
imull
or
andl
mov
jae
fnstsw
jecxz
shrl
dec
jl
pop
or
push
ja
mov
or
sti
insb
leave
daa
push
lret
xchg
push
and
cmp
cmc
fidivl
insb
and
sti
push
negl
and
movsl
and
aaa
mull
and
jmp
mov
out
xchg
subl
fstpl
cmp
imul
aad
mov
dec
pushf
mov
adc
push
sbb
outsb
jns
sub
repnz
repnz
aas
mov
loopne
xchg
je
lret
test
mov
ljmp
cltd
pop
imul
dec
outsb
andl
pop
inc
xchg
sarl
fcmovnb
in
mov
aas
xor
pop
imul
jbe
cmpsb
mov
pop
test
clc
and
cmp
mov
jbe
mov
clc
or
rorb
fldt
and
cmpsb
pop
test
adc
or
out
sbb
rcl
push
negl
sub
stc
dec
xchg
dec
out
xchg
push
push
fisttps
inc
sbb
pop
push
enter
dec
mov
xchg
push
shlb
lea
pop
mov
repnz
cmp
xor
iret
mov
and
stos
push
mov
ret
mov
inc
out
inc
push
xor
jne
pop
movsl
es
jb
jmp
lar
dec
in
dec
mov
pop
cmpsb
mov
push
jg
movsl
dec
mov
pop
push
cmp
push
ret
mov
adc
jp
mov
rcr
add
stc
aam
data16
mov
mov
pop
lods
call
stos
xchg
fisubrl
push
cld
and
dec
call
loopne
pop
fdivl
push
cs
sbb
mov
xorl
test
or
mov
xor
mov
roll
rorb
jbe
cmpsl
mov
das
inc
sbb
lcall
inc
movsl
add
xchg
notl
xchg
cld
add
adc
shl
mov
pminub
cmp
jle
loop
mov
enter
and
mov
or
enter
add
test
aas
or
sahf
lret
gs
and
sub
mov
lods
js
fistpl
ja
xor
hlt
adc
jmp
mov
or
mov
mov
icebp
inc
ljmp
and
push
add
enter
adc
push
jo
js
xlat
jns
mov
xlat
fstpl
or
sub
sti
mov
sbb
scas
into
mov
repnz
inc
jle
mov
mov
mov
add
xchg
and
inc
repz
or
add
add
dec
mov
xor
ret
test
jb
sub
fisttpll
cwtl
xor
push
movsb
repnz
cmp
not
pop
sbb
jl
sbb
pop
pop
mov
mov
and
xchg
jno
mov
aad
inc
gs
dec
mov
fidivs
push
fisubs
inc
inc
inc
and
pop
xor
ret
jno
fldl
ret
inc
jecxz
adc
stos
sub
cmpsb
test
xor
mov
cld
inc
clc
adc
cmp
mov
ret
ljmp
jbe
outsb
mov
xor
test
cmpsl
fisttpll
loop
jge
shlb
imulb
mov
cmp
xchg
fwait
andl
out
mov
adc
sbb
push
cmp
sbb
add
in
popf
adc
xchg
mov
sub
inc
stc
pusha
xor
cwtl
and
jp
pop
cmp
idiv
in
mov
sub
sbb
in
adc
sbb
push
scas
xchg
jecxz
mov
mov
loope
xchg
in
sub
daa
ffree
out
ljmp
xor
or
xchg
mov
aaa
push
lcall
xchg
loope
popf
scas
push
ja
movsl
push
decl
cmp
mov
inc
xchg
sbb
sbb
ret
xor
mov
jo
sub
jl
xchg
jmp
mov
in
aad
push
out
aas
xchg
aam
cltd
scas
ljmp
push
lock
enter
xchg
dec
rcr
pop
xchg
ret
pop
mov
loop
xor
in
mov
dec
pop
mov
adc
and
xor
fs
mov
shll
inc
mov
pop
aad
and
test
lcall
sub
repnz
push
xchg
lret
lret
dec
pop
cmp
dec
insb
cld
ja
or
sti
out
ds
push
ficoml
xor
loope
and
inc
adc
sub
ja
lods
jmp
out
sbbb
in
test
add
xchg
mov
shlb
loop
rcrb
pop
xchg
arpl
pop
and
and
out
adc
insb
jae
sbb
pusha
mov
aad
jge
push
loopne
mov
scas
jns
test
xor
inc
lock
std
mov
cli
sub
dec
cmpsb
adc
ljmp
push
cmp
les
fcoms
xchg
sub
push
xchg
out
lods
mov
mov
out
cmp
ds
sbb
mov
inc
aas
jl
pop
cmp
movsb
cmp
iret
add
xchg
push
jae
in
push
pop
xor
or
or
popa
insl
loopne
pushf
mov
jae
mov
xchg
jl
sub
sti
ljmp
lcall
mov
jbe
stc
out
and
hlt
shrb
dec
and
dec
lods
les
lret
idivl
mov
data16
les
addr16
std
das
dec
mov
sahf
inc
push
stos
fdecstp
lods
dec
dec
xchg
rorb
fsubr
out
jecxz
fwait
mov
sub
or
pushf
jle
dec
push
xchg
test
sbb
lret
sbb
mov
cmpsb
out
idivb
inc
lcall
xchg
xchg
dec
cmp
jns
jbe
sbb
je
cltd
lret
out
and
pop
pop
mov
or
mov
add
ret
in
fcmovne
mov
pushf
pop
stos
jns
aaa
add
stos
or
out
jns
add
nop
pop
mov
mov
sub
fs
cli
cmp
stos
adc
stc
adc
stos
xor
add
sti
xchg
jne
adc
fistl
jp
scas
mull
push
fisttps
lock
sub
jb
fiadds
sbb
jo
push
inc
mov
sarl
ja
sbb
adc
jg
adc
in
inc
push
arpl
test
lods
pop
lods
repz
not
mov
mov
cld
add
sti
lret
jl
adc
loope
cmpsb
stos
repnz
in
enter
mov
scas
mov
mov
sbb
push
pop
daa
mov
es
xor
ljmp
inc
or
es
sub
pop
or
sti
lods
adc
push
xor
shll
fnstcw
push
inc
xchg
je
sbb
pop
push
imul
sbb
mov
jns
inc
sbb
jnp
add
cmp
jo
insl
cmp
scas
push
inc
fstl
sub
pusha
loop
outsl
inc
inc
fwait
xchg
dec
xlat
xor
inc
xchg
and
push
call
sub
and
jle
lds
rorl
pop
xchg
sbb
fstpl
loope
inc
xlat
lret
dec
popa
inc
adc
jp
add
lahf
adc
pop
mov
sbb
jns
std
stc
sahf
xor
aas
dec
xchg
mov
lret
in
cs
push
pop
xchg
inc
mov
add
mov
pop
nop
test
push
stc
lahf
shrl
cmp
xor
xchg
mov
mov
fstpl
ret
sbb
aas
movsl
pop
jno
mov
sbb
or
lret
daa
xor
jne
enter
xchg
lahf
int
sbb
loope
inc
push
call
arpl
cmp
popa
leave
lret
push
sahf
stos
push
cmp
loope
out
xlat
sarb
xchg
roll
mov
jg
cld
sub
sbb
fsubrs
ljmp
dec
and
pop
dec
leave
or
scas
imul
xchg
outsb
pop
adc
mov
ror
add
in
cmp
dec
pop
inc
mov
mov
arpl
push
mov
out
lea
popa
dec
xchg
pop
add
cld
fwait
xchg
scas
pop
pop
adc
imul
sub
cld
mov
mov
mov
arpl
sbb
imul
adcl
push
push
icebp
cmp
ljmp
ret
jg
gs
sub
aaa
lahf
jb
insl
scas
add
rolb
movsl
dec
out
xchg
jl
loop
int
jg
pusha
outsl
mov
and
push
pushf
out
xorb
add
mov
jns
sub
pop
sbb
xchg
add
mov
jno
or
jp
xchg
dec
mov
out
inc
andb
xchg
mov
aaa
cmpsb
test
xor
push
and
jno
xchg
fsubr
cmp
jmp
mov
cs
mov
mov
inc
stos
mov
loop,pn
add
push
out
xlat
inc
xchg
imul
mov
ss
mov
sbb
stc
call
xchg
stos
lret
add
push
mov
xchg
jb
lret
sub
sti
mov
jae
and
loop
sbb
adc
call
add
shll
mov
mov
out
mov
into
and
out
ljmp
repnz
jo
out
cmpsl
out
bound
lods
fwait
ss
adc
xor
clc
in
adcb
pop
rcll
out
pop
jns
xor
aam
inc
xor
aad
cs
xchg
aam
inc
into
inc
and
jne
add
sbb
ds
nop
div
shl
cs
ret
and
out
pop
out
enter
gs
xchg
sub
lret
pusha
or
mov
addr16
dec
insb
jl
in
inc
fiaddl
adc
out
shl
iret
mov
push
pop
loopne
sub
inc
xor
rcrl
jmp
sti
jns
out
pop
push
cmpsl
js
pop
movsb
test
in
mov
dec
adc
nop
das
sbb
pop
pop
mov
pop
ficompl
loopne
adc
dec
sbb
add
adc
or
movsl
pop
add
sbb
pop
sub
inc
ret
inc
sti
lea
fdivrl
mov
das
js
push
and
mov
popl
ret
add
popf
push
mov
sti
cs
or
cmp
cmp
insl
push
or
aad
cltd
cwtl
dec
cmc
sub
dec
negb
stc
sub
mov
fcompp
xchg
loopne
dec
inc
push
mov
mov
in
pop
push
and
cmp
or
push
pushf
add
mov
xchg
jge
sbb
outsl
idivl
in
xchg
enter
sbb
push
rorb
cmp
fwait
int3
mov
xor
outsb
jmp
int
orl
xor
lock
adcl
in
or
adc
or
dec
iret
mov
mov
mov
ss
cmp
ret
mov
mov
and
sub
adc
popa
adc
pop
insb
jnp
push
rcrb
push
mov
shll
ss
test
mov
aaa
xchg
mov
jne
xchg
fmulp
cmp
ds
jg
adcl
or
cwtl
in
fs
cmp
jno
call
movsl
testl
fisttpll
stos
add
test
pop
or
lods
cld
daa
popa
jbe
enter
inc
pop
xchg
pop
jecxz
pop
mov
ret
or
push
stos
add
popa
addl
push
xchg
in
mov
xlat
sub
dec
cmpsl
or
xchg
inc
cld
xchg
fs
notb
push
adc
cmp
fildl
push
xchg
jnp
movl
cmp
pusha
jbe
and
arpl
add
ds
cmpsl
and
sbb
movsb
mov
in
int3
fs
cmp
testl
out
lahf
sub
loop
push
sub
clc
adc
data16
popf
roll
pop
mov
mov
dec
gs
jb
notb
lods
inc
mov
data16
pop
cmpsl
mov
sub
stos
hlt
or
stc
out
fadds
hlt
rclb
add
mov
scas
jp
sbb
or
push
lcall
sub
push
xor
aas
loope
jge
adc
hlt
mov
xor
popf
pop
imul
les
out
divb
xchg
mov
pop
adc
icebp
fdivl
hlt
xchg
xchg
adc
test
aaa
and
cmp
pop
pop
daa
pop
insb
out
xchg
insb
inc
dec
jne
outsl
push
aam
pop
cld
xor
enter
iret
aam
out
ret
xchg
aam
sub
shll
sbb
data16
enter
jge
test
mov
lods
mov
aad
and
enter
repz
sub
mov
in
ret
mov
add
lret
ljmp
fldcw
xor
lea
stos
daa
xlat
nop
sub
cmp
mov
adc
xchg
jae
leave
xchg
in
bnd
fnstenv
pop
imull
xchg
lods
add
jl
test
mov
lock
outsb
jne
jbe
testb
sub
cs
sbb
pop
sub
bound
push
fnstenv
pushf
mov
jb
cmp
mov
fdivp
sbb
mov
dec
movsb
mov
mov
ds
xlat
add
fdivrs
mov
scas
xor
dec
xchg
lods
pop
mov
dec
or
xlat
mov
mov
mov
or
xchg
in
ret
sbb
in
and
inc
mov
test
outsl
push
adc
lods
fs
rcrl
jns
xchg
cmp
jmp
xor
jae
pop
insl
in
jp
and
push
sbb
sub
fisttpl
xor
je
and
sbb
dec
pop
pop
dec
pop
cmp
fcmovnbe
xchg
leave
ficomps
mov
sub
lcall
cmp
fpatan
or
out
daa
mov
imul
mov
negl
or
add
nop
sarl
cmp
movntq
mov
jg
lret
mov
iret
pop
stos
shrb
xchg
jns
xlat
ljmp
mov
stc
mov
and
and
mov
mov
inc
cmp
lea
jns
roll
hlt
jecxz
in
movsb
lea
push
icebp
cs
jle
enter
xchg
bnd
movsl
or
popa
fsts
mov
cmp
sbb
cs
cs
popf
dec
cmp
fs
sub
mov
jecxz
inc
pop
pop
loop
loope,pt
idivl
adc
push
or
imul
add
ret
clc
push
popa
iret
mov
das
and
gs
sub
or
mov
and
les
dec
lods
repnz
push
scas
dec
icebp
fcom
loop
push
mov
cltd
push
ja
dec
out
stos
xchg
dec
es
xchg
push
in
cmp
push
xor
mov
push
pop
cmc
dec
hlt
dec
jg
push
push
outsl
cmp
les
jnp
sub
jae
pushf
js
test
daa
ds
dec
xlat
cmp
cmp
pop
fdivs
test
jecxz
sbb
ret
fs
std
pop
jnp
add
notb
loope
outsb
jno
aaa
pusha
or
mov
inc
inc
lret
pop
lods
js
sbbl
jle
gs
push
and
xchg
in
mov
or
sbb
negb
sar
inc
add
mov
adc
je
rolb
push
mov
dec
fnstcw
lahf
sbb
xor
sub
fisttpll
divb
mov
ret
cli
add
mov
cmp
and
jl
add
stc
and
inc
mov
lods
xor
imul
mov
mov
mov
xor
bound
mov
lods
sub
push
pop
jmp
mov
decb
pushf
in
rcrb
out
cmp
aas
pop
jno
cmc
jmp
in
and
clc
xchg
gs
cltd
jl
hlt
imul
cld
dec
loope
jl
das
mov
sbb
sub
in
pop
add
inc
pop
jns
mov
lds
fdivr
mov
jnp
or
add
dec
inc
gs
pop
fsubs
add
jmp
and
mov
out
out
lea
push
pop
pop
jg
cld
cmp
mulb
inc
mov
pop
loopne
lods
fisubrs
lret
mov
lods
les
xchg
inc
outsb
gs
mov
daa
les
int3
or
ljmp
cs
clc
pusha
inc
pop
and
add
mov
jl
daa
xchg
nop
lcall
aaa
sub
gs
jle
xchg
jp
push
adc
or
in
push
and
xchg
mov
pop
movsb
cmp
pop
jb
insl
jae
addr16
mov
and
repz
sti
adc
lds
pusha
jl
loope
in
or
repnz
in
cmp
xor
jle
jge
push
mov
inc
aad
jecxz
repz
jae
hlt
sarl
pop
dec
pop
inc
ud1
js
movsb
mov
aas
pop
jle
inc
inc
xlat
jg
popa
je
les
je
mov
imull
xchg
cmp
inc
mov
pop
mov
pop
xlat
push
lea
mov
pop
mov
and
pushf
gs
xchg
subl
filds
xchg
inc
aas
pushf
loopne
aaa
push
add
je
mov
sub
dec
xchg
pop
dec
xchg
xchg
lods
int
popf
scas
repnz
or
jecxz
cli
push
fnsave
or
ret
out
pop
rcl
inc
cs
xor
insb
push
fnstsw
and
cmp
int3
insb
jge
pop
cmp
mov
and
adc
sbb
push
fcoml
insl
jb
xor
sbb
sbb
imul
stos
dec
dec
jle
and
stos
inc
push
sub
mov
mov
cltd
lahf
cmp
lret
mov
sub
jl
std
repz
jl
push
jo
adc
cld
icebp
mov
mov
shll
ss
push
jl
movsl
push
in
les
adc
cmp
adc
gs
out
popf
mov
push
adc
xor
subl
rcrl
and
cmp
ret
call
int3
lods
aam
sbb
dec
into
mov
out
or
ljmp
inc
inc
loop
push
pop
jns
std
movsb
stc
lods
jecxz
popa
inc
mov
or
lds
inc
xchg
xchg
sbb
add
inc
scas
adc
inc
pop
test
sbb
into
test
mov
outsb
test
pop
cld
xor
aad
sub
femms
adcl
inc
inc
pop
imul
lods
mov
test
inc
testl
out
push
stos
and
aam
cmp
inc
test
jl
push
sbb
fwait
xchg
cld
aaa
shlb
push
xor
inc
cltd
or
arpl
mov
xchg
cmc
dec
dec
jmp
pop
addr16
jae
mov
cmp
mov
pop
dec
push
push
mov
fsubs
sub
hlt
sarb
push
das
mov
cli
shlb
xchg
popa
pop
xchg
and
lods
xor
mov
xor
stos
daa
stos
dec
aas
addl
ss
mov
push
add
pop
insb
inc
insb
movsb
sbb
cmp
adc
pop
cwtl
pop
adc
xor
sti
test
jle
push
fcompl
les
push
stc
mov
fiaddl
dec
cmp
inc
repz
push
outsl
inc
movsb
inc
pop
lods
push
loope
jno
xor
xor
cltd
sti
add
repnz
pushf
mov
xor
lret
push
imul
mov
fimull
sti
lds
xorl
or
xchg
jae
out
mov
jg
jg
sbb
iret
incb
lock
fmul
stos
movsl
ss
adc
push
sub
pop
stc
push
push
pop
fmul
cld
jmp
push
sub
jb
imulb
outsb
idivl
pusha
addr16
pop
ror
or
ja
mulb
loop
orb
pop
sbb
jmp
out
mov
outsl
scas
loopne
fisubrs
add
fisttpl
stos
dec
ss
loop
xor
adc
test
mov
xor
xchg
inc
data16
sbb
stos
js
jne
inc
lcall
ret
cmp
push
lods
cli
mov
mov
sbb
jb
outsl
push
dec
pop
jb
mulb
jge
mov
ret
dec
ss
or
out
adc
mov
mov
inc
jge
mov
andl
xor
out
add
test
and
adc
aam
adc
cmp
insb
dec
push
pop
cmp
xor
inc
push
sbb
inc
lods
addr16
xchg
and
xlat
jo
daa
or
cmp
mov
cmpsl
decb
mov
jne
ret
sbb
je
or
sbb
out
xor
loop
lods
inc
stc
out
jp
or
inc
popa
push
bound
xorl
pop
push
shlb
ds
mov
sbb
pop
add
out
mov
loopne
mov
repnz
sbb
sti
xchg
int
std
adc
lret
jnp
pushf
dec
fwait
imulb
imul
and
movsb
insb
push
push
mov
roll
pop
daa
pop
out
xchg
xchg
je
rcrb
mov
call
adc
out
mov
repz
in
bnd
pop
imul
ret
mov
jge
lahf
sbb
stc
xchg
stc
test
cld
leave
xor
inc
leave
int
ljmp
jmp
sbb
inc
add
gs
cmpsb
push
dec
mov
dec
push
ljmp
jle
dec
mov
or
into
jnp
add
sub
lea
idiv
mov
xor
push
dec
mov
mov
mov
addb
iret
sbb
scas
ret
pop
nop
jno
stos
and
pop
stos
js
aad
les
out
stc
movsb
and
subl
xor
jb
ljmp
mov
mov
adc
insl
or
div
mov
sbb
les
fistpll
push
ds
push
ja
mov
push
hlt
ret
mov
push
xchg
add
addl
psrlw
or
out
cs
and
add
mov
jnp
pop
ja
push
out
mov
pop
test
xor
testl
adc
mov
repnz
into
mov
dec
mov
pop
and
sbb
mov
movsl
and
movsl
jl
ljmp
mov
adc
fs
lret
xor
jl
adc
mov
fldt
sahf
gs
std
movsl
inc
out
dec
mov
sub
mov
outsb
stos
into
push
ds
add
jae
mov
xchg
push
imul
mov
je
mov
lods
das
test
les
outsb
mov
cmpsl
outsl
push
jecxz
dec
xchg
fs
adc
lret
and
inc
xchg
lods
xchg
lret
cmp
inc
add
enter
and
mov
ljmp
das
cwtl
sub
xchg
cltd
cmp
popf
mov
add
jg
loope
pop
sbb
jl
negb
sbb
rorl
lods
mov
mov
bound
pop
je
adc
inc
mov
sbb
cmc
imul
xchg
testb
es
push
lock
stc
mov
daa
lahf
mov
iret
mov
jnp
adc
ficomps
fistl
call
out
test
or
and
cmc
sub
dec
popa
inc
push
and
leave
addb
movsl
sub
ja
push
mov
repnz
xlat
push
sahf
imul
or
lret
gs
sbb
test
in
inc
neg
jb
out
xor
shlb
mov
pushf
insb
in
movsb
mov
scas
fwait
repz
fdivp
scas
jae
adc
insl
lcall
mov
push
cli
jb
scas
cli
enter
jo
pop
dec
fwait
sbb
in
push
dec
in
cmp
std
adc
les
dec
dec
fistps
or
cmp
loopne
mov
in
es
add
lret
push
rorb
mov
adc
or
in
xchg
push
add
mov
pop
in
pusha
bound
lods
cmp
or
lds
lds
add
test
es
push
int
clc
loopne
xchg
scas
clc
stos
in
xchg
jbe
adc
and
mov
add
xchg
and
fwait
dec
xor
out
cwtl
insl
mov
and
call
xchg
repnz
cmp
sub
pop
cmp
lret
or
push
lds
push
push
and
mov
nop
aaa
cmp
sbb
mov
fdivs
jmp
sbb
ja
cltd
int3
cmc
lods
push
mov
out
push
jg
fldcw
iret
cmpl
push
mov
and
add
xchg
std
out
stc
and
jno
cs
scas
cmp
dec
das
sub
jb
lods
add
sub
cmp
sti
loope
imul
jle
or
inc
lea
xchg
sub
jb
adc
inc
mov
mov
mov
jmp
inc
addr16
xchg
test
scas
jecxz
loope
jb
add
cli
xchg
mov
xchg
shlb
pop
jge
or
xor
in
mov
cmp
outsl
loopne
xor
and
das
ret
stos
push
shll
cmp
xchg
or
movsl
ss
pusha
lret
call
mov
dec
jbe
mov
jne
data16
idiv
pop
cmpsl
rcr
fimull
iret
or
pop
les
fmull
sbbl
fdivrl
push
out
inc
in
pop
shll
jge
sbb
cmp
xchg
int
mov
cli
cmp
pop
in
or
cli
loopne
jns
lds
and
movsl
add
iret
adc
mov
loop
subl
xchg
cwtl
add
cli
jne
iret
add
mov
mov
data16
inc
sarl
imul
int3
dec
insl
cmp
or
cmp
sbb
out
mov
divl
into
and
fadd
mov
enter
xchg
cmovnp
iret
inc
pop
pop
jg
je
sub
out
out
das
xchg
fnsave
add
mov
aas
inc
inc
mov
cmc
mov
aad
xor
fs
inc
add
mov
shrl
sahf
inc
mov
addb
jecxz
testb
fdivp
cmp
jg
xchg
push
inc
pushf
adc
dec
loope
mov
andb
push
mov
xchg
out
cmp
repnz
addr16
repz
add
aad
repz
popl
mov
cmp
mov
push
hlt
jo
xor
dec
inc
jne
dec
sahf
add
outsl
jl
in
loope
stc
sbb
imul
add
sbb
lods
xchg
call
std
jmp
das
clc
or
cwtl
in
fistl
jne
push
dec
imul
push
in
pop
inc
push
pop
out
and
push
jle
bound
mov
test
jo
enter
inc
xor
xchg
mov
mov
dec
xor
pop
fldcw
aad
jle
add
std
scas
iret
in
mov
lock
inc
stc
sub
push
inc
enter
lret
or
rolb
mov
fwait
int
data16
outsl
test
mov
hlt
mov
mov
or
out
insl
xchg
push
pop
xlat
xor
out
add
adc
pusha
mov
insl
ret
lret
pop
inc
sub
jb
add
jb
push
in
xor
shll
test
sarl
ret
gs
xor
xchg
pop
jg
cwtl
pop
mov
jmp
push
push
inc
push
mov
dec
outsl
mov
pop
popa
mov
outsb
lret
sbb
pop
js
sub
inc
aaa
mov
jmp
xchg
in
std
sbb
cmpsb
or
sbb
push
mov
imull
add
xor
loope
cmpsl
jb
add
jle
out
jne
pop
pop
imul
push
mov
mov
loop
fcoms
adc
and
outsl
mov
clc
cli
mov
ljmp
push
push
or
add
sbb
push
fcompl
dec
in
or
imulb
dec
mov
inc
out
xchg
test
dec
call
bound
cmp
mov
andb
mov
aam
imul
inc
cmpsl
cmpsb
pop
xchg
dec
imul
int3
divb
lcall
ja
sub
ja
mov
cmp
pop
imul
jle
jb
cmp
jge
imul
and
pop
dec
ss
out
fiadds
sbb
or
pop
push
add
inc
ljmp
sbb
and
mov
mov
dec
icebp
pop
xchg
inc
lock
lock
das
mov
shlb
xorl
fcoml
fs
and
mov
jmp
in
cmp
pop
mov
hlt
or
pop
dec
insb
outsl
xlat
test
in
xorl
nop
mov
ret
inc
or
ss
lret
testb
or
dec
cmp
fcompl
inc
sti
mov
add
pop
cmp
dec
mov
insl
push
imul
dec
call
std
out
adc
inc
loope
in
fs
or
pop
mov
or
push
loopne
push
arpl
scas
pop
insb
push
stc
inc
mov
jae
jg
idivb
cmp
mov
adc
sub
add
mov
lcall
aaa
push
unpckhps
ret
insb
add
adc
sbb
int
out
jo
dec
add
xchg
movsb
inc
aaa
icebp
dec
cmp
xchg
jmp
enter
push
std
test
jnp
repnz
imul
fs
pushf
inc
dec
sub
loop
mov
out
push
add
stc
push
push
or
inc
aaa
mov
cmp
or
mov
xor
rol
dec
adc
sub
and
add
and
jp
and
enter
inc
jns
mov
mov
sarl
fwait
xor
outsl
or
mov
jae
or
sarl
or
ljmp
cld
insl
in
add
sub
lcall
cmp
cmp
stos
pop
add
mov
movl
lods
in
sbb
mov
push
and
rcll
insb
sub
jbe
idivl
mov
ljmp
xlat
sbb
test
nop
mov
jmp
pop
sti
int3
fsts
mov
loopne
scas
sbb
and
jo
mov
xchg
pop
jg
popa
pushf
sub
leave
xchg
stos
fsubr
mov
in
imul
jno
leave
push
or
and
jle
xchg
or
jno
popf
enter
jmp
lcall
popa
andl
cmp
jbe
jno
out
push
or
push
lock
out
pop
sbb
push
sub
loop
int3
push
push
push
cmc
or
pop
mov
jmp
iret
popa
pop
ss
and
push
decb
fucomi
cmp
in
xor
outsl
adc
repz
test
fnstsw
loop
fwait
inc
jp
aas
test
icebp
mov
push
lret
mov
and
cmp
lods
inc
mov
inc
test
je
pop
mov
test
orl
cld
mov
rcll
fists
rcrl
in
sub
cmpsl
lahf
imul
push
cmp
or
icebp
aad
xor
mov
bswap
pusha
jecxz
imul
sbbb
or
xchg
add
dec
add
fwait
jo
xchg
in
adcl
sbb
into
fsubr
dec
push
pavgb
ret
call
adc
sub
inc
mov
out
push
in
or
push
sub
inc
clc
mov
dec
mov
ret
add
mov
adc
hlt
mov
cltd
sar
int
fcompl
daa
inc
jo
sahf
daa
dec
jns
xchg
test
mov
scas
loop
mov
mov
mov
mov
test
addr16
cmp
add
push
mulb
inc
mov
or
mov
lods
jge
mov
cltd
xchg
xchg
adc
cmp
das
push
repz
cmp
data16
cs
pop
dec
loop
xlat
xor
push
jmp
decl
xlat
cltd
xchg
fisttpl
rcrl
push
imul
sahf
jp
insb
pop
xlat
mov
or
stc
les
adc
push
and
rclb
sar
fwait
idiv
scas
cmc
sub
dec
cmc
mov
xchg
cmp
xchg
mov
popf
ret
or
inc
repnz
adc
push
imulb
enter
inc
and
rclb
cmc
dec
adc
ret
fucomi
sub
mov
movsb
cmp
xlat
pop
jo
push
or
xchg
repz
inc
outsl
push
daa
xchg
add
scas
inc
outsl
iret
mov
push
mov
ror
dec
test
mov
add
jne
dec
xlat
mov
sahf
inc
sub
jmp
in
push
out
movsb
out
aas
mov
pop
shlb
ljmp
sar
ffreep
test
dec
les
ret
fsubl
xchg
jl
cmpsb
stc
imulb
dec
test
push
mov
and
rol
sbb
pop
daa
inc
addl
fsubrs
push
adc
lret
lret
dec
pusha
jnp
repnz
xchg
fcmovnb
test
scas
addr16
iret
sub
jl
mov
movsl
push
jle
push
sbb
imul
movb
push
mov
out
fcmovu
or
pop
les
arpl
sahf
xor
and
sbb
cmp
or
inc
cld
pop
push
xlat
pop
insb
adc
mov
adc
pop
gs
scas
stos
mov
repz
rorb
movsb
inc
lds
mov
ljmp
pop
jns
nop
imul
mov
into
scas
adc
mov
push
push
cli
arpl
or
and
jmp
xor
and
hlt
mov
dec
loopne
xor
jl
hlt
pop
sti
fidivrl
imul
xchg
jl
inc
ficomps
pushf
mov
std
add
lcall
inc
in
vpcmpgtw
pop
pop
insl
pop
lret
aam
movl
cmp
ret
mov
aad
mov
lret
jl
mov
lahf
scas
pushf
and
ss
dec
pop
or
push
mov
out
xor
xchg
mov
fwait
push
or
inc
loope
test
push
and
mov
ret
xchg
leave
pop
push
pop
pop
hlt
es
lea
jbe
lcall
cmc
into
flds
das
pop
xchg
jp
push
and
xchg
pop
sarb
es
stc
jecxz
and
stc
notl
pop
jns
shl
xchg
out
or
or
aad
fidivl
inc
pop
and
xor
push
jmp
sti
pusha
xlat
repnz
lret
mov
jle
stc
nop
inc
mov
cli
dec
jg
add
mov
outsb
test
pop
stc
inc
imul
enter
xchg
xor
adc
dec
mov
aam
dec
mov
push
push
cmp
jmp
add
cmp
pop
std
je
adc
push
loopne
mov
mov
lods
insb
push
scas
mulb
dec
mov
cmp
cmp
shll
inc
sbb
std
cmp
dec
lock
lods
push
in
arpl
xlat
push
push
sar
adc
notb
xlat
or
in
xor
jae
or
dec
xchg
adc
or
xorl
jo
dec
push
lcall
dec
in
jae
inc
sbb
sarl
test
insl
add
xlat
aam
addr16
jecxz
or
add
popl
je
mov
ret
popa
push
int
lahf
cmpsl
jg
mov
sub
sbb
daa
adc
cmp
push
stos
es
mov
and
mov
aaa
mov
cmp
xlat
dec
adc
mov
dec
xor
ret
xchg
aam
jbe
xchg
mov
pop
test
sarl
sub
dec
mov
inc
ja
loopne
nop
dec
and
insb
adc
cmpsb
inc
mov
and
imul
stc
xor
sbb
in
fisubs
inc
or
or
out
stos
mov
cmc
rcl
and
jmp
fwait
clc
lods
into
cmp
fs
xor
decl
hlt
push
jnp
stc
clc
cmp
or
js,pt
movsb
addr16
int3
sub
ret
jne
movsb
adc
stc
sbb
movsl
rclb
js
xor
stos
jmp
and
movsb
cmp
int3
aad
xor
xchg
xchg
aam
push
stc
sub
clc
and
andl
dec
dec
leave
jnp
out
inc
insl
pop
orl
jl
leave
dec
lahf
sub
test
sbb
stos
shlb
movsl
lods
push
mov
ficomps
jecxz
mov
jl
mov
and
outsl
call
jb
sbb
add
push
pushw
andl
imul
pop
in
and
repnz
sbb
or
shl
adc
sbb
mov
push
dec
push
or
loop
nop
fwait
xchg
rcll
enter
cld
mov
jnp
mov
mov
psrld
out
pop
push
push
outsl
iret
mov
imul
mov
pop
iret
or
push
lret
hlt
cmpsl
aaa
jb
mov
rorl
das
push
inc
mov
fistl
fnstcw
hlt
dec
fcomi
jmp
out
repnz
fcoml
adc
shrb
mov
ret
mov
pushf
je
imul
jmp
pop
mov
mov
in
cmp
out
push
lahf
in
mov
popa
adc
outsl
mov
xor
mov
jae
jmp
gs
jmp
or
push
in
mov
or
inc
inc
sub
mov
fadds
cmpsl
jg
clc
jns
fucom
addr16
sbb
and
test
xchg
cmp
addl
popa
pusha
arpl
mov
out
push
insb
mov
or
testb
insl
push
or
xlat
in
mov
xchg
arpl
aas
dec
sub
lret
pop
lea
xchg
or
adc
mov
xor
mov
fstp
add
dec
int3
jb
push
popa
push
setb
ror
shll
cmpsl
push
popf
iret
addb
shrl
push
add
xor
add
pop
stos
leave
stos
orl
inc
mov
or
lret
es
mov
jge
sbb
inc
fsubl
ja
outsl
sbb
pop
cltd
sub
movsl
aaa
into
jmp
fsubrl
add
add
and
sub
stos
arpl
pop
and
lods
sbb
stos
mov
sub
sbb
cli
je
call
hlt
into
sub
sbb
and
push
es
cld
cld
push
push
or
repnz
daa
mov
push
out
pop
dec
xchg
shrl
ja
adc
add
pop
mov
push
aas
das
imul
idivl
xor
jnp
xchg
or
push
movsl
pop
adc
xchg
jb
xor
mov
es
cmp
fistps
hlt
adc
jle
lods
mov
push
sub
push
pop
or
cmpsb
push
call
sub
inc
addr16
dec
sub
out
cmp
fwait
dec
and
pop
jecxz
cmpsl
jb
push
shl
sbbl
push
sbb
xchg
adc
add
or
pop
jae
and
aad
and
mov
add
and
scas
mov
ss
shrb
jge
mov
imulb
cs
rcll
stos
in
adc
sbb
data16
or
lods
xchg
shl
pop
cmpsl
shl
lods
pop
cltd
inc
cmp
jecxz
xchg
or
cltd
xchg
aad
push
movsb
dec
shll
xchg
insb
pop
inc
out
dec
inc
and
rdmsr
test
ret
dec
mov
das
mov
add
add
cmp
fisubrl
lods
rorl
dec
push
push
mov
push
ljmp
gs
mov
scas
and
jl
inc
mov
bound
pop
and
fdivrs
inc
adc
movsb
mov
test
lret
lret
push
lock
es
or
adc
mov
lcall
or
xor
popa
pushf
lds
bound
xchg
in
sarb
push
popa
mov
adc
sbb
movsl
push
icebp
and
mul
xchg
xchg
bound
mov
je
scas
outsl
ja
lret
jp
les
cmp
imul
mov
popa
movsb
push
mov
pop
enter
imull
repz
or
xorl
test
sub
dec
dec
popf
xor
xor
in
xlat
sarb
push
clc
call
or
shrl
xchg
sahf
sub
xchg
pop
adc
int3
xor
push
mov
or
inc
push
cli
cmpsb
mov
js
ret
negl
arpl
imul
out
jo
inc
cmp
jg
sub
sbb
inc
mov
arpl
pop
inc
out
mov
push
push
sti
jnp
xchg
pop
test
mov
mov
sub
jno
push
daa
jmp
fwait
mov
sbb
push
pop
jmp
mov
cmp
jl
sbb
lods
and
movsb
xchg
mov
leave
sub
addr16
adc
ret
sub
mov
in
jnp
outsl
inc
popa
test
mov
mov
or
ljmp
loopne
ficompl
movl
sbb
jb
loopne
push
pop
shlb
xlat
les
movsl
shrb
jb
adc
andb
test
and
inc
sbb
ret
or
pop
loopne
xchg
adc
xor
mov
mov
jne
out
lds
push
xchg
dec
data16
enter
inc
in
stc
leave
stos
in
fdivl
mov
fs
loop
movsb
adc
mov
shll
shr
out
mov
insb
push
add
inc
inc
jg,pn
jnp
repz
aaa
clc
jge
pop
rol
outsl
xchg
clc
adc
or
pop
cmp
xor
sbb
inc
adc
dec
std
fimuls
les
lret
jle
add
scas
dec
or
jno
inc
push
in
pop
cmpsl
lahf
shrl
into
dec
in
stc
shrb
mov
decb
add
xor
or
mov
ljmp
outsl
sub
ret
xor
sbb
sarb
pusha
pop
push
js
fwait
pop
push
cmp
push
or
insb
pop
inc
sbb
pop
sub
and
iret
or
clc
popa
outsl
or
imul
cld
aas
xchg
mov
lock
add
add
adc
loopne
jl
test
add
fcomps
fsts
mov
jge
sub
xor
mov
push
push
arpl
rorb
add
mov
cs
addr16
or
imull
sub
sub
pop
cmp
outsl
stos
ret
in
or
mov
cli
mov
mov
xchg
jecxz
rolb
ds
mul
fisttps
push
pusha
xchg
subb
push
hlt
outsl
mov
pop
aas
lds
dec
dec
stos
and
jnp
loope
jg
sub
jecxz
rorb
sbb
arpl
jg
cli
int
negb
jge
sbb
adc
sub
inc
dec
pop
xchg
mov
inc
lods
cmpsl
mov
nop
jbe
push
push
clc
sub
into
push
mov
mov
and
pop
pop
lcall
ljmp
movsl
outsb
je
addr16
sti
lea
test
ret
xchg
lcall
or
stos
add
in
xor
pushf
mov
mov
out
clc
scas
push
loopne
sahf
mov
or
pusha
aad
sbb
mov
xchg
loop
adc
data16
hlt
xchg
jb
shlb
std
pop
mov
jg
and
fwait
outsb
in
iret
xchg
mov
shll
into
mov
popa
out
cltd
inc
mov
adc
sub
add
push
xchg
xor
mov
and
dec
mov
subb
xor
cmp
js
insl
fldt
dec
push
mov
scas
xor
jge
push
lret
stos
icebp
push
and
mov
imul
ret
lret
call
mov
mov
imul
add
push
lods
adc
pop
and
mov
mov
mov
pop
dec
push
add
lret
inc
sbb
jl
dec
mov
or
imull
pop
pop
loop
pop
gs
pop
xor
pusha
shlb
fidivl
mov
lock
rolb
pop
cli
mov
ret
out
repz
fisttpll
outsl
inc
pusha
dec
jno
shll
out
inc
pop
sbb
jp
movsl
cmp
adc
in
xchg
in
int3
mov
or
stos
fisubl
stos
and
adc
es
std
sbb
adc
negl
popa
pop
call
sti
sub
cmc
cmpb
lock
cmp
or
clc
pop
push
mov
cmp
jl
inc
add
sub
notl
jns
push
in
idivb
sbb
out
imul
testb
mov
inc
add
xor
sbb
fisubs
lods
mov
aad
insl
inc
adc
ret
xor
and
je
ret
movsl
leave
testl
sbb
add
and
dec
pop
je
rclb
in
dec
or
mov
pop
inc
sub
push
imul
in
cmc
sub
mov
cld
push
jne
fs
jb
out
mov
jecxz
shrl
call
js
btsl
out
shll
stos
psadbw
imul
cmp
sub
cmp
ds
mov
lahf
pop
sahf
push
sub
inc
mov
in
cmp
out
cmpl
push
jmp
adc
lret
xchg
loopne
add
bound
lea
in
loopne
clc
insb
and
or
imul
xchg
enter
les
scas
fiaddl
xor
mov
popa
outsb
fcoms
outsb
stc
loop
fiadds
add
imul
popf
or
imul
lret
fdivrl
cmc
loopw
lret
outsl
dec
dec
out
sbb
test
fdivr
inc
imul
push
imul
dec
mov
push
mov
pop
fwait
stos
jmp
fs
lahf
rol
or
mov
iret
sbb
mov
or
jg
lock
lcall
ds
stc
leave
cs
out
fdiv
pop
dec
sub
dec
jne
adc
test
sub
imulb
lcall
scas
cmp
scas
fidivrs
jecxz
add
into
inc
fnstenv
xchg
xchg
scas
or
xchg
mov
add
scas
stc
lret
push
sub
add
pop
insl
jae
and
nop
or
rcrl
popa
dec
xchg
outsl
leave
fwait
fs
popa
frstor
out
dec
jl
xchg
lret
inc
in
inc
sub
xor
orl
outsb
fidivs
and
and
jmp
fldenv
mov
pop
test
mov
scas
jge
sbb
mov
fmuls
mov
int
ja
pop
push
inc
sti
push
out
xor
sub
sub
inc
nop
push
movsb
test
fcmovne
xor
mov
mov
jnp
loope
jae
fucom
int3
movsl
adc
dec
mov
addr16
inc
dec
sti
adc
inc
popa
or
jp
add
out
fwait
or
sahf
outsb
mov
xor
xchg
ret
mov
pop
loop
lods
js
shl
scas
clc
push
adc
and
pop
loopw
jo
movsb
mov
push
dec
mov
outsl
je
das
lods
jg
and
imul
retw
push
cwtl
mov
hlt
fiaddl
loope
fldcw
sub
mov
gs
adc
in
cltd
dec
adc
aaa
sbb
add
inc
adc
dec
stos
sub
push
enter
mov
popa
out
cmc
sti
hlt
push
loope
fdivl
scas
adc
fs
push
mov
clc
jae
and
ret
mov
mov
ss
orl
sti
add
mov
xor
fiaddl
stos
mov
xor
and
cmp
pop
jns
mov
pushf
mov
in
addr16
or
push
sbb
in
in
out
fwait
orl
xchg
lods
mov
mov
mov
mov
pop
lret
sub
test
mov
inc
icebp
add
mov
insb
fbstp
scas
sub
sub
sar
sub
stos
popf
push
dec
adcl
pusha
fdivs
or
adc
sbb
pop
rcrl
xor
xchg
stos
jo
testb
imul
mov
adc
jnp
inc
push
cmp
test
ds
cs
sub
stos
pop
push
push
add
xorl
jg
sub
mov
xor
sbb
and
mov
inc
jae
cmp
xor
dec
jmp
cld
imul
mov
mov
les
lret
in
add
aad
loope
adc
mov
pop
add
ret
daa
jg
cmc
hlt
inc
sahf
dec
leave
mov
scas
dec
testb
jp
mov
cli
out
lds
jns
andl
cmpsb
jl
add
bound
rcll
or
jl
gs
cli
and
aad
fs
test
mov
test
fnsetpm(287
imul
push
fsubr
xchg
add
mov
mov
test
sub
sub
cwtl
add
pop
lahf
stos
cmp
les
mov
inc
and
adc
xor
xor
sti
push
shll
mov
jns
sub
dec
mov
outsb
les
jae
ljmp
orl
imull
imull
add
push
sbb
push
roll
fs
xorl
int
addr16
cli
add
push
cwtl
addr16
fimull
cmc
loope
mov
ds
jecxz
in
push
ljmp
std
shll
xchg
iret
into
push
pop
mov
js
push
outsb
sbb
stc
jecxz
sub
dec
mov
fmuls
xchg
push
mov
sub
inc
mov
nop
test
stc
ljmp
pop
sub
jg
pusha
lahf
rcr
jno
sub
mov
dec
push
stos
ret
fisttps
call
sub
push
dec
pop
and
push
and
mov
mov
cwtd
outsb
push
pop
mov
push
fstpt
int3
mov
data16
stos
mov
out
arpl
jle
ja
sub
pop
aaa
arpl
inc
push
inc
cmp
sti
push
testl
stos
mov
adc
add
repnz
pop
pop
mov
mov
jo
cmpsb
outsl
push
addr16
inc
ja
mov
adcl
or
sub
lcall
xor
jge
push
mov
inc
test
inc
add
jmp
pop
stc
stos
add
lret
repnz
lret
or
in
pop
rcrl
xor
push
sbbl
push
mov
and
das
mov
mov
adc
sbb
adc
loope
pusha
lcall
sub
out
and
mov
daa
andl
push
cmp
cmp
sub
sub
int3
mov
mov
dec
jmp
lods
lds
mov
mov
mov
mov
lods
add
stos
push
sbb
lret
loope
imul
shr
cmp
inc
xor
mov
js
cli
xchg
rcrb
mov
imul
jae
notb
adc
mov
mov
stos
cs
mov
icebp
sbb
xchg
add
fstps
pop
lods
test
mov
scas
mov
leave
xchg
xchg
dec
pop
bound
ds
fwait
pop
cmp
mov
dec
add
mov
add
mov
subl
idiv
push
or
jns
lds
cmp
stc
add
psrlw
mov
jns
sub
xchg
inc
fildll
lcall
jnp
and
push
cmc
jnp
shrl
inc
pop
popa
stc
mov
push
pop
add
jl
out
cmpsl
mov
ja
fs
pop
outsl
mov
out
sbb
or
aaa
mov
dec
xchg
or
pop
stc
cli
rorl
sub
ds
sti
xor
aaa
xor
movsb
mov
fcomp
lods
js
fcoml
sbb
out
jl
fbstp
inc
sub
scas
push
les
cmpsl
dec
jmp
pop
pop
cmpsl
sti
insl
rcll
inc
in
rcr
sti
inc
dec
mov
dec
imul
fcoml
fwait
in
neg
add
and
jle
xor
jbe
pushf
leave
lods
xor
push
insl
fsubl
jb
test
in
shll
pop
movsb
jno
outsb
pop
pop
out
shl
push
in
push
or
sub
fimuls
insb
sarb
rorl
xor
push
or
rcr
mov
push
frstor
pop
mov
jmp
add
add
xor
xor
push
out
loope
addr16
ljmp
jno
ljmp
shll
cs
pop
movl
fwait
es
xchg
xchg
lock
or
adc
mov
test
cmpsb
jb
push
addr16
call
clc
sbb
pop
arpl
seta
cwtl
imul
push
out
data16
sub
and
sub
xchg
sbb
sbb
scas
pop
lret
in
out
rcll
cmp
mov
inc
or
pop
mov
pop
jnp
cmp
sub
dec
adc
inc
sahf
cmp
shll
cmp
mov
add
ret
mov
test
imul
mov
jecxz
inc
scas
adc
nop
cmpsl
das
jae
dec
push
pop
adc
push
aad
inc
add
mov
inc
mov
pop
mov
cmp
popa
fistl
gs
sbb
cmpsl
add
pop
test
stos
mov
pop
cli
sub
repz
xor
cld
jmp
hlt
dec
sbb
cmpsb
cmp
out
xchg
mov
nop
cs
imul
fmulp
test
dec
ja
outsb
iret
add
xchg
aaa
jae
mov
loop
fs
ja
outsl
movsl
mov
popf
shrb
ds
stos
ret
push
inc
and
xchg
imul
xor
fadd
pop
imul
cwtl
pop
out
add
xchg
rolb
into
pop
sub
mov
fdivs
stos
dec
jo
imul
xor
sbb
vmovhps
popf
pushf
nop
jl
test
or
mov
xchg
cmp
sbb
aad
or
stos
cwtl
js
js
push
push
sub
mov
or
pusha
mov
adc
ret
or
xchg
xchg
pusha
rcrb
faddl
push
xchg
jno
xchg
push
loop
dec
js
pop
pop
aam
rclb
test
and
icebp
jg
shll
jae
jb
fists
dec
cs
sahf
ficoml
xchg
sbb
cs
ss
rcrb
adc
dec
movsl
daa
dec
std
xlat
fcomps
pop
add
jg
or
add
xchg
add
or
lret
call
test
cmp
enter
addr16
js
pusha
push
pop
negl
mov
scas
faddp
sub
scas
std
les
xchg
orl
add
add
mov
test
clc
xchg
sbb
arpl
addr16
lods
cmp
aas
cmpsl
jns
lods
orb
jl
into
pop
jle
inc
jb
sarb
popf
push
aaa
xorb
mov
mov
cmpsl
int
inc
mov
test
stos
test
call
xchg
jmp
add
fldcw
add
loope
in
pop
pop
add
aam
or
fwait
sub
cs
mov
or
pop
jp
push
addr16
jmp
in
fsub
enter
jne
shll
mov
ffreep
mov
cmp
movb
jo
jl
xchg
stos
rclb
cli
cmpsb
lods
jbe
jns
mov
jae
mov
or
out
and
sub
push
repnz
xchg
inc
vmovhps
cmp
mov
fcompl
fcmovb
pop
fwait
dec
push
lcall
xchg
lret
aaa
mov
cmpb
int
xchg
mov
data16
add
stos
icebp
lcall
enter
cmp
insl
movsb
jno
aaa
jg
arpl
aas
inc
jno
cmpsl
ret
or
pop
push
enter
repz
cmp
xchg
sub
lahf
mov
mov
out
mov
pop
call
sub
arpl
sub
inc
and
outsl
ret
insl
cmp
push
push
arpl
push
push
inc
in
cmp
sub
mov
aas
mov
lahf
cli
out
mov
and
popa
outsl
gs
lods
cli
cli
popa
cmpsl
repz
sbb
mov
adc
lods
push
repz
cmp
add
or
adc
lret
adc
fcomip
mov
sbb
scas
mov
das
fisubl
dec
cmc
aas
pop
daa
sti
pop
repz
daa
lret
into
inc
repnz
in
arpl
xchg
outsl
mov
mov
pusha
mov
loope
mov
cwtl
pop
xor
das
mov
cmpsl
dec
sub
sti
lcall
dec
adc
add
out
pop
repz
jmp
add
pop
mov
mov
imul
movsb
icebp
xchg
ja
mov
cmc
inc
das
insl
loope
ret
clc
inc
jb
cwtl
movsl
mov
or
adcb
loopne
jge
adc
xor
and
inc
and
or
inc
repnz
push
add
sbb
pushf
cmpsb
push
or
mov
add
icebp
jg
jmp
mov
pop
in
ficoml
sbb
gs
pop
enter
sarb
ja
sub
mov
mov
sarl
mov
pop
dec
xchg
aam
fimull
cmpsl
into
loopne
mov
lret
fidivs
fs
hlt
push
xchg
push
in
pushf
jnp
outsb
pop
xchg
mov
and
push
push
xor
push
fisubrl
adc
inc
xor
dec
lods
imul
push
and
dec
aas
ja
ret
inc
push
mov
cmpsb
sahf
and
imul
iretw
xor
push
push
jb
mov
inc
and
jb
in
jmp
in
pop
push
lret
dec
lds
push
mov
push
ficoms
fcmovbe
adc
out
or
mov
jl
xchg
ret
mov
dec
lea
inc
jg
inc
push
or
jno
add
pusha
in
lea
cmc
pop
pusha
cmp
pop
cmp
lcall
dec
cmpsb
pusha
cmp
cmpb
xchg
sbb
das
dec
insb
test
add
sbb
stos
xor
imul
fs
ret
pop
and
xor
push
gs
out
lea
jmp
push
pop
jl
add
outsl
loop
aaa
and
loop
sbb
pop
ss
inc
movsl
jno
pop
sub
jne
push
push
cltd
sahf
xor
pop
inc
dec
xchg
cltd
daa
xor
sbb
incl
fdivl
mov
jno
push
push
andl
dec
xchg
mov
test
testl
xor
sbb
rolb
xchg
es
dec
add
lcall
sub
cmp
lods
sbb
cmc
popa
and
fcoml
dec
fs
sar
push
imul
stc
es
js
inc
or
push
fbld
mov
adc
xchg
daa
adc
add
shrb
mov
cmp
call
test
jnp
mov
cmc
ja
jae
sahf
scas
divl
pop
pop
outsl
adc
js
test
xor
jae
shr
jne
cmp
les
daa
daa
call
pop
add
outsb
mov
inc
imul
pop
call
jl
push
scas
and
ss
jmp
mov
jmp
and
pushf
in
ret
test
push
out
sub
xlat
test
testl
sbb
lock
mov
push
lods
repnz
mov
mov
mov
pop
fucomi
mov
mov
add
mov
xchg
push
ds
jne
pop
cmp
mov
in
das
jg
add
adc
sti
inc
jg
outsb
sub
pop
std
gs
pop
sbb
lcall
clc
jns
xor
je
jl
sbbl
shl
out
pop
lret
mov
sub
je
sbb
mov
cmp
cld
pusha
movsl
xorl
mov
es
sbb
loop
sbb
sahf
pop
add
popf
sub
inc
insl
std
scas
enter
out
mov
cmp
cmp
push
or
ljmp
jg
mov
cmp
jp
cmp
stc
pusha
or
push
divl
fiaddl
lods
imul
mov
and
psadbw
inc
push
stos
jmp
cvtps2pi
xor
lcall
test
pop
mov
add
fistpll
mov
xlat
in
dec
fisubrs
mov
xchg
mov
inc
leave
dec
jno
xor
bound
xchg
push
mov
shr
stos
lods
and
push
sbb
outsl
test
mov
push
inc
inc
or
call
imul
je
fsubr
push
adc
cmpsl
call
orl
lret
insb
mov
lret
out
mov
push
fs
pop
and
cmp
dec
xor
push
popf
jne
fs
daa
popa
dec
in
lret
loop
bound
ret
and
data16
mov
gs
lret
cmp
enter
jno
mov
outsb
jb
shl
cmpsb
roll
xchg
dec
xor
mov
push
ljmp
iret
arpl
mov
aam
fwait
adc
lea
mov
out
scas
enter
mov
and
inc
icebp
adcb
sti
cmp
add
in
test
outsl
enter
xchg
fs
popa
xor
push
std
add
jns
jecxz
mov
sbb
loop
fwait
insl
mov
clc
fildll
loopne
jb
jo
scas
in
pop
adc
mov
sbb
add
xchg
ds
insl
data16
outsl
mov
lods
or
repnz
inc
xchg
jle
mov
in
ss
mov
or
jnp
jb
pop
and
jae
add
push
jns
xor
dec
mov
jnp
xchg
mov
xchg
mov
jl
mov
outsb
lcall
jb
inc
lret
xchg
cld
inc
push
inc
push
push
push
dec
adc
ja
rorl
decb
add
ret
sarl
test
xchg
jbe
pop
enter
jl
fidivs
movsb
xchg
xchg
cmp
stos
bound
mov
shll
test
adc
iret
into
cmpsb
fidivrl
imul
scas
int3
xchg
xchg
movsl
movsb
push
xchg
jne
sbb
sub
or
addl
hlt
sbb
in
stc
sub
es
shll
cmp
movsl
sub
xchg
fisubs
mov
aaa
xor
in
lock
xor
push
es
sti
jns
inc
pop
out
insl
scas
push
lock
xchg
jbe
adc
jbe
jb
or
pop
scas
std
sahf
es
cmp
inc
add
xor
push
bound
es
push
fcoml
inc
add
inc
mov
shrl
neg
negb
cmp
push
sub
lea
jb
hlt
out
dec
sbb
fdivrs
lahf
cwtl
xor
adc
dec
jne
adc
test
idiv
cmc
jl
push
mov
addr16
ret
sbb
in
adc
add
insl
gs
jne
imul
je
mov
shrl
ret
inc
or
push
cmp
jge
inc
test
mov
pop
add
add
lods
cli
push
std
mov
xchg
xchg
roll
or
push
cmpsl
push
outsb
jb
rcll
sbb
sub
inc
push
mov
push
movsl
js
jmp
scas
mov
pop
cmpsl
jnp
jb
cs
std
lret
aad
mov
xor
adc
push
sbb
mov
or
repz
repnz
adc
popa
jne
stc
or
sbb
sbb
subl
cltd
xor
es
xor
repz
or
add
ret
dec
add
outsb
cmp
dec
repz
insl
lods
mov
inc
cmp
pop
repnz
pop
mov
jmp
jne
dec
mov
cmp
imul
lret
fwait
inc
and
jne
jmp
adc
jae
fs
cmp
jae
in
dec
pop
ret
xor
jo
pop
mov
adc
inc
jl
repnz
fdivrl
stos
data16
idivb
inc
rorl
pop
jnp
loope,pt
push
lds
pop
or
imul
adc
mov
outsb
aaa
jle
pop
cmp
jecxz
test
mov
pop
push
roll
rep
jne
lods
mov
inc
subb
adc
jl
adc
shll
movsb
sub
dec
insl
lret
outsb
int3
push
mov
jmp
cli
out
push
rolb
adc
call
mov
icebp
add
xlat
push
fwait
xacquire
inc
aam
daa
loopne
fnstsw
nop
dec
xchg
clc
xchg
push
test
mulb
fcompl
lret
movsl
xchg
sbb
sti
mov
les
ret
and
pop
xchg
cmpsl
stc
mov
or
xlat
mov
pop
pop
lcall
xlat
ljmp
pop
pop
stc
fstpt
in
addr16
pop
add
mov
mov
push
or
dec
push
mov
mov
mov
aad
inc
jns
clc
sbb
repnz
and
fsubrp
lret
daa
mov
lret
mov
mov
dec
imul
inc
jbe
mov
cmp
fstl
mov
jae
sti
jne
mov
dec
mov
adc
std
rcr
scas
jle
test
das
pop
in
enter
cltd
jecxz
adcb
inc
das
gs
lret
xchg
es
jns
idivb
clc
imul
popf
sbb
and
outsb
jno
daa
push
jge
pop
icebp
xor
lods
shlb
ja
arpl
in
xor
outsl
cmp
sbb
daa
rolb
xchg
ja
call
jge
bound
je
xor
mov
sub
dec
mov
mov
test
mov
lods
bound
outsb
sbb
mov
test
xchg
add
inc
out
add
pop
add
aaa
ret
dec
cmp
jb
jne
cmp
dec
push
pop
and
cltd
insl
in
push
std
cld
aaa
or
push
adc
mov
xchg
outsl
cmpb
sbb
mov
pop
push
test
scas
clc
fwait
push
les
icebp
test
and
add
idivb
nop
dec
add
frndint
mov
bound
out
xor
or
xor
lods
fisubrl
sbb
jmp
pxor
ss
xor
add
sti
out
stos
mov
cmp
in
sub
gs
lods
lea
and
popa
mov
and
cli
ljmp
addr16
js
add
int
cli
cmpsl
ja
cmp
loop
push
sub
imul
notl
and
mov
pop
subl
and
mov
aam
and
insl
in
adc
push
push
cli
dec
mov
pop
test
sub
mov
ds
ror
and
adc
pop
aam
mov
mov
in
fadd
inc
cmp
jb
mov
outsl
inc
ficoml
ret
pusha
out
cli
push
dec
inc
ljmp
jnp
push
xor
mov
pop
adc
push
mov
jl
inc
mov
push
mov
or
lcall
popa
and
push
pop
jmp
test
cmpsb
ss
popf
add
gs
jbe
mov
mov
loope
pop
imul
or
inc
xchg
sub
xchg
sub
sbb
rol
ret
bound
into
pop
jnp
incb
ficompl
test
dec
test
insl
jo
aad
sahf
shr
fwait
ljmp
fcmovbe
adc
sbb
dec
pop
out
mov
std
fwait
scas
sarl
mov
mov
pop
repnz
jae
pusha
or
jne
mov
jbe
lods
add
sub
clc
xchg
and
arpl
stos
add
inc
push
jge
popa
mov
cwtl
xchg
popa
test
clc
out
dec
xchg
js
test
jp
lods
sub
adc
clc
pusha
pop
dec
add
rcr
mov
cmp
repnz
pop
jns
insb
testb
gs
mov
mov
mov
popf
inc
xor
lret
loop
fistps
mov
push
or
ljmp
lods
divb
dec
out
dec
push
dec
and
pop
cltd
add
xchg
pop
jmp
push
test
and
jns
push
ret
xchg
mov
enter
inc
out
mov
jo
adc
out
hlt
popf
dec
mov
jecxz
pop
out
ds
inc
lds
lock
arpl
out
das
enter
lock
mov
int3
jg
inc
into
xchg
testb
test
push
inc
rcr
ret
and
daa
fdivrp
mov
xor
fisttps
sbb
lds
mov
addr16
fs
jl
and
inc
sub
xor
movsb
divl
mov
xor
mov
lret
cltd
scas
cld
stc
mov
cmp
rol
adc
repnz
mov
fists
clc
enter
sub
out
ljmp
mov
ja
aaa
cmpl
inc
mov
and
cmp
xchg
stos
stc
and
push
jae
sbb
or
pop
jo
xor
push
add
jg
adc
adc
pop
ljmp
jns
cltd
shl
lock
enter
lods
jl
hlt
scas
inc
push
dec
fwait
aaa
fstps
jbe
scas
jle
imul
adc
insb
jge
mov
adc
cli
movsb
pop
data16
loopne
adc
movsb
faddl
dec
out
jbe
xchg
rol
sub
in
test
shrb
jge
xchg
or
das
and
inc
dec
in
push
cmp
outsl
out
mov
cmc
fs
repz
aad
inc
stos
les
pop
jle
sub
mov
lret
dec
dec
cmp
jge
dec
inc
in
mov
clc
subl
fwait
mov
loopne
jnp
add
dec
icebp
cmp
xor
cmp
or
sub
jmp
popf
sti
loopne
inc
test
adc
xchg
add
out
lahf
jne
dec
shl
push
add
lds
inc
add
iret
add
sub
data16
sub
cld
push
xchg
or
mov
sbb
mov
int
stc
stos
inc
or
fwait
in
ja
pop
rcrb
pop
mov
sar
mov
adc
add
inc
xchg
fistps
daa
pusha
addr16
and
mov
mov
nop
mov
imul
ja
jb
aas
mov
dec
xchg
sub
fimuls
daa
mov
or
divl
in
push
fisubs
fisttps
sbb
inc
cwtl
movsl
popf
and
or
and
pop
cmp
xchg
pushf
mov
or
mov
scas
xchg
or
inc
out
cmp
outsb
xchg
in
pusha
mov
pop
sub
xchg
call
push
push
xchg
or
call
cs
in
test
cmpsl
popf
pop
push
push
addr16
pop
push
mov
test
insb
sahf
xor
adc
rorb
adc
xor
flds
xchg
cmpsb
stos
inc
push
push
dec
lret
push
cmc
jg
dec
or
clc
mov
xor
aaa
sarb
xchg
in
int3
mov
fs
out
pop
pop
push
daa
mov
or
mov
testb
xchg
lret
daa
sbb
bound
insl
inc
pop
loope
pop
les
pop
aaa
inc
icebp
jbe
jae
adc
pop
cmpsl
mov
fmull
out
fcoms
jnp
jne
push
adc
das
ror
ret
mov
dec
pop
test
into
push
es
xlat
testb
and
xchg
and
sub
mov
in
xor
dec
push
pop
xor
addr16
dec
dec
fwait
shll
mov
cmp
cli
popa
into
cmc
idivl
fsub
ja
mov
mov
inc
pop
adc
adc
inc
jns
add
cmp
ljmp
data16
into
jecxz
add
shlb
sbb
xchg
cmpsl
xchg
fs
mov
mov
sbb
dec
clc
sti
or
or
mov
leave
add
in
add
imul
pop
daa
add
mov
test
fdivrs
nop
pushf
xchg
ret
jl
adc
jo
inc
push
out
les
hlt
addr16
cmp
fidivs
cli
outsl
movsl
push
cmp
or
arpl
cmp
jnp
add
shrl
negl
cld
inc
shrb
shrb
xchg
cmp
cmp
sub
xor
push
stc
leave
movsb
sbb
mov
divb
cld
ret
cli
jns
or
lods
add
leave
inc
adc
and
es
imul
in
xchg
aam
adc
add
mov
mov
outsl
push
pop
mov
push
sar
push
inc
dec
sbb
inc
or
xor
inc
pusha
pop
adc
movsb
jo
nop
or
inc
fimuls
push
adc
mov
data16
mov
pop
add
xchg
sti
pushf
out
push
dec
arpl
outsb
cmc
sbb
add
push
push
imul
mov
push
fdiv
lods
push
inc
insb
shrb
dec
mov
pop
ja
push
xchg
cmp
mov
cmp
add
ret
int3
mov
test
cli
mov
loop
test
xchg
jno
std
jg
out
out
dec
cmp
inc
jne,pn
insb
push
adc
pop
and
loop
data16
and
adc
imul
sub
push
jp
and
inc
jp
bound
int3
std
pushf
mov
loopne
out
outsl
pop
outsl
lock
cmp
cmc
scas
push
push
or
dec
cmpb
jno
je
scas
dec
add
or
jns
push
sbb
cmpl
aas
adc
pop
adc
push
and
and
add
in
push
and
lds
mov
fwait
cmp
dec
mov
repnz
xchg
adc
xchg
jo
sbb
repz
and
dec
mulb
inc
ds
xor
inc
stc
xor
xchg
stos
add
adc
add
pop
fs
outsl
xlat
xor
lock
mov
aad
scas
addr16
stc
sub
dec
dec
insb
fistpl
ja
jmp
daa
xchg
inc
push
adc
stos
hlt
out
loop
mov
cmp
dec
mov
push
ja
clc
jne
xor
fstpl
fwait
jmp
lret
jmp
push
inc
stos
arpl
cmp
bound
rorl
ret
clc
sbbb
test
mov
cli
mov
xor
push
mov
inc
adc
pop
push
or
inc
dec
xor
jo
cmp
xchg
add
push
push
and
dec
xchg
stos
jmp
mov
je
addr16
adc
test
jae
xchg
dec
clc
and
jmp
or
roll
or
into
lock
clc
bound
je
bound
imul
xchg
mov
push
or
test
cli
jae
sahf
jecxz
cmp
dec
jmp
push
mov
mov
lock
leave
cld
sub
xchg
ljmp
in
insl
ss
sbb
cmp
outsb
bound
jmp
imul
repnz
daa
add
fcomi
xchg
jecxz
adc
sbb
fbld
mov
popa
jbe
jne
sub
fsts
sub
je
sub
mov
data16
dec
mov
loope
inc
cli
stc
mov
sub
addb
test
js
jb
add
test
mov
dec
call
dec
outsl
in
out
or
into
cmp
cmp
pop
cld
and
imul
pop
pop
ja
out
and
xchg
gs
mov
push
aad
and
cmp
in
ljmp
push
stos
repnz
dec
adc
adc
jle
mov
movsb
add
enter
dec
scas
push
xor
sub
push
enter
xchg
sbb
mov
insb
add
dec
in
and
sbb
and
mov
mov
mov
mov
das
outsl
pushf
inc
lea
mov
movsl
ss
arpl
xor
roll
jo
and
stc
test
test
mov
xchg
mov
stos
cltd
das
sbb
xchg
popa
ja
inc
cmp
fildll
scas
pop
adc
inc
sub
fidivs
or
into
pop
ja
incl
mov
sbb
jmp
push
shrl
sbbb
imul
lret
sbb
push
xor
stos
add
lret
loopne
movsl
into
das
imul
jmp
pop
or
cmp
jmp
lds
mov
pop
sbb
das
sti
les
leave
aas
dec
push
and
sub
pusha
push
movsb
lea
dec
add
or
psllq
jo
dec
imul
repnz
scas
cmpsb
cmc
in
mov
adc
outsl
cltd
mov
add
movsl
mov
sbb
arpl
pop
jnp
jecxz
inc
enter
jl
out
orl
adc
lahf
and
pop
mov
push
pop
and
and
lods
fsubs
cmpsl
jmp
repz
rcll
and
cmp
out
sbb
adc
mov
or
mov
inc
cmp
cmpsb
int
mov
xor
mov
pop
mov
inc
push
pop
sahf
sub
sub
cmp
cmp
orl
insl
out
gs
rcr
mov
sbb
adc
sub
les
sti
adc
sbb
jp
inc
lret
pop
add
xor
ret
sbb
inc
sub
in
popf
test
cltd
push
adc
and
push
pop
adc
fxch
rcrb
imul
mov
js
xor
pop
fisubl
inc
test
adc
inc
sti
popa
and
cli
jnp
jecxz
lods
inc
xchg
ret
mov
popf
jp
sbb
ds
xchg
cmc
add
lret
push
push
call
adc
notb
xchg
and
xor
pusha
repz
cmpsl
dec
mov
pop
adc
sarb
loop
cmc
jae
addr16
xchg
pop
jae
pop
imul
mov
mov
ror
jecxz
xor
push
sbb
rorl
jns
outsl
mull
cmp
lds
xor
dec
jl
inc
cld
mov
call
sbb
adc
inc
jbe
pushf
mov
fimull
pop
movsl
jp
adc
pop
mov
cmp
lret
pusha
in
pop
mov
or
push
jno
jnp
dec
js
sbb
sub
cli
push
xchg
repz
jle
xor
jbe
cmp
and
std
mov
mov
cwtl
pop
mov
xchg
into
insb
fldt
and
jecxz
repz
sbb
dec
fisubrs
lcall
adc
jns
xchg
rcll
fs
push
cmpsl
outsb
shrb
mov
adc
jge
cltd
cld
and
dec
dec
mov
jne
or
push
pop
jae
jge
aas
jge
mov
call
les
dec
jge
cmc
cmc
negl
cld
fwait
adc
push
cld
xchg
push
or
or
popf
stos
in
push
fldenv
enter
bound
testl
mov
in
lcall
sti
jge
sub
fisubrl
jl
push
and
pusha
inc
leavew
das
xchg
test
mov
mov
js
ret
push
mov
jns,pn
mov
stos
jb
or
cmp
xor
sbb
pop
xchg
sub
nop
dec
sbb
pop
and
fbld
arpl
test
jg
sbb
jecxz
or
mov
in
sub
js
mov
leave
or
jg
call
repz
xlat
js
in
jne
ret
and
lock
sub
or
pop
and
sub
in
sub
in
jle
mov
scas
pop
and
gs
enter
mov
jecxz
adc
xor
mov
sbb
pop
rorb
mov
movsb
sub
leave
sub
ljmp
ljmp
testb
inc
shlb
int
lret
fs
push
push
lods
xchg
mov
sbbl
ret
stos
jle
imul
or
test
push
mov
sti
in
adc
sub
and
ret
pop
ret
iret
sub
jmp
sahf
jns
mov
loop
imul
jmp
sbb
mov
lock
bound
insl
cwtl
mov
mov
rclb
arpl
sbbb
jne
sub
mov
cmp
idiv
sti
aas
mov
pop
pop
lds
popf
xor
push
cmp
imul
dec
xchg
mov
push
aad
add
mov
add
mov
pop
sbb
dec
inc
fs
cs
dec
sbb
add
cmp
out
repz
push
push
jmp
imull
mov
cmc
xor
mov
das
xor
std
xor
sbb
test
test
stc
notl
clc
sub
cmp
movsl
push
xor
dec
mov
mov
notb
mov
adc
dec
cmp
ljmp
add
inc
dec
movsl
aad
in
loope
and
add
mov
dec
mov
mov
orb
fs
pushf
pop
dec
pop
jb
movsl
lock
jmp
int3
and
addr16
adc
imul
clc
aam
js
xor
and
sub
add
ret
movsl
loopne
imul
mov
inc
mov
mov
or
loop
insl
inc
adc
pop
jmp
lahf
xchg
jns
sub
lods
xchg
addr16
sub
inc
bound
test
out
mov
call
popa
xchg
sub
dec
inc
leave
mov
mov
push
call
shlb
cli
out
loopne
cmp
cmpsl
xor
add
add
mov
sti
rorb
xchg
clc
adc
data16
add
stos
movsl
dec
pushf
dec
jle
inc
mov
in
stos
xor
push
mov
aas
cli
inc
aaa
dec
iret
dec
aad
divl
jnp
sbb
xchg
or
les
ret
cs
mov
mov
insl
add
je
or
mov
push
sub
jecxz
psrad
inc
xchg
les
lods
aad
js
inc
ljmp
pop
jae
pop
xchg
pop
xchg
jnp
icebp
arpl
aam
add
inc
inc
jne
shlb
sub
imull
or
xor
mov
xor
cmp
scas
rolb
hlt
cmp
cmp
out
push
cmp
jne
jmp
mov
sbb
pop
inc
cmp
adc
sti
sbb
enter
sub
push
stc
shll
mov
jnp
or
mov
lods
ret
jge
inc
add
pop
xor
push
pop
and
sub
out
out
inc
fxch
push
dec
gs
hlt
fnstsw
pop
jae
xchg
mov
dec
mov
mov
mov
inc
loopne
inc
mov
push
cmp
or
mov
ja
adc
mov
cmpsb
loop
arpl
pop
pop
mov
jns
rol
cmp
cmp
dec
pop
adc
push
xchg
bound
pusha
lret
xchg
out
cld
jns
cltd
shlb
mov
adc
jl
in
arpl
popa
loop
mov
pushf
bound
jmp
pop
xchg
fmuls
pop
ss
lahf
out
enter
cmc
jp
fucomp
mov
mov
loope
pusha
add
mov
js
addr16
popf
or
stos
insl
mov
js
outsl
ljmp
loop
leave
cmp
in
aas
pop
adc
cmp
xchg
mov
fidivs
fstps
push
loopne
cmpsb
cmp
adc
pop
adc
test
repnz
mov
pop
rol
push
jbe
push
pop
push
sbb
imul
je
jb
sbb
mov
mov
or
stc
pushf
mov
sarl
insl
adc
or
out
xchg
mov
mov
inc
dec
jae
push
cld
inc
out
pmaxub
mov
jl
or
sbb
aad
xchg
shll
pusha
inc
mov
inc
cmp
mov
sbbl
mov
out
dec
dec
and
jno
aam
mov
cmp
jae
mov
adc
sarb
jle
dec
jl
mov
lock
pop
xor
cmp
xchg
cmp
pop
dec
lds
mov
xchg
fcompl
lods
push
and
repnz
imul
mov
push
sub
push
cmc
xor
loope
fistpl
xor
cmp
test
shll
mov
jns
in
cmp
iret
call
push
push
inc
dec
inc
add
push
addr16
mov
sub
xchg
add
sbb
cmp
les
xor
in
push
hlt
jecxz
out
enter
sub
aaa
xchg
cmp
js
adc
adcl
lret
mov
adc
movsl
lret
in
sub
cmp
fistpll
sbb
inc
jmp
shrl
cmp
sub
push
idivl
inc
insb
leave
leave
and
sub
data16
mov
cwtl
ds
movsl
movsb
lret
dec
cmp
mov
mov
nop
dec
jl
aaa
clc
ljmp
loopne
mov
cmpps
pop
dec
mov
cmp
jl
inc
jo
pop
mov
xchg
iret
dec
jns
imul
imull
rolb
lcall
mov
inc
push
add
js
imul
xchg
push
outsb
popa
xchg
jle
xchg
lcall
cli
push
icebp
sbb
cli
ret
or
and
ja
cmpsl
sub
cmp
bound
jb
push
push
ss
hlt
test
xorl
xor
fidivl
sub
and
add
pusha
push
movsl
and
pxor
push
data16
xor
add
push
int3
xor
mov
stc
loopne
mov
xor
mov
aam
cmp
dec
imul
arpl
sub
cwtl
jnp
xor
iret
jmp
shll
aad
imul
add
pop
outsb
push
ret
sbb
mov
movsb
sbb
in
ss
pop
in
mov
das
pop
out
lds
leave
in
mull
jo
addr16
xchg
xchg
dec
sbb
cmp
dec
inc
lret
notl
or
cmpl
push
movsl
hlt
or
ret
dec
lcall
adc
insb
xor
scas
jge
mov
lods
in
mov
pop
insl
push
hlt
push
test
jp,pt
mov
xchg
and
fsubl
xor
loopne
mov
iret
jbe
pop
sbb
mov
mov
push
xchg
lods
movsl
jnp
cltd
scas
scas
fsub
imul
ds
pop
pop
in
lret
and
fdivl
push
jp
jae
push
dec
dec
and
dec
leave
jns
push
sub
pop
xchg
and
pusha
loopne
or
mov
and
cwtl
sub
divb
pop
xchg
and
and
scas
sbb
movsl
push
lcall
push
adc
popf
pop
cli
sarl
push
imul
adc
sbb
push
and
and
lods
cmp
push
jg
cmpsl
jb
inc
push
addr16
pop
pop
push
aam
sbb
arpl
pushl
in
adc
mov
xor
in
ret
adc
mov
addr16
cmc
pop
ret
pop
call
lret
and
push
adc
gs
jge
scas
cmc
xchg
cli
imul
push
popa
mull
xor
fs
mov
mov
and
loope
fisttps
xchg
xchg
mov
or
cmpl
inc
fdiv
js
inc
insl
into
jbe
addl
outsl
mov
lret
or
call
inc
rcll
ja
inc
fdivrl
dec
add
stc
cmc
outsl
gs
mov
lods
xchg
sbb
imull
push
sbb
push
add
push
rcr
dec
dec
daa
dec
or
in
push
jbe
shrl
es
mov
mov
mov
insl
dec
pop
jl
mov
into
sbb
pop
out
push
lahf
inc
ret
scas
push
and
test
mov
and
testl
dec
test
inc
or
pushf
out
adc
cld
gs
mov
and
adc
hlt
imul
push
push
in
mov
shr
sub
cmpsl
add
loope
test
mov
inc
pop
bound
xchg
adc
cs
lds
or
and
mov
ja
adc
aam
mov
mov
not
sub
mov
jecxz
add
ret
dec
ret
das
testb
sbb
sbb
loope
pop
jne
sarb
imul
push
stos
and
dec
mov
dec
jl
adc
sti
stos
xchg
aad
hlt
jp
int
jl
mov
pop
push
inc
lahf
or
dec
sub
or
sub
xor
das
aaa
imul
sbb
hlt
test
push
mov
jb
movsb
mov
pusha
rorl
cmpl
testl
int3
in
pop
mov
add
ja
les
gs
inc
fucomip
xchg
jmp
in
adc
xchg
popa
ja
dec
pop
mov
mov
sbb
shlb
xchg
hlt
jae
dec
jg
cmp
std
addb
negl
pop
int3
push
ss
ds
test
shr
xchg
jmp
std
xchg
cs
cmc
mov
std
mov
push
push
scas
js
insb
mov
fld
mov
mov
loop
dec
fnsave
jmp
int3
inc
cmp
cmp
xor
fisubrl
hlt
negl
sbb
add
loope
insb
push
pop
jmp
or
in
sbb
fs
dec
jbe
inc
fistpl
and
sti
out
cmpsb
faddl
popf
pop
repz
pop
pop
xrelease
mov
dec
or
pop
gs
dec
mov
push
fldt
xchg
popa
cmpsb
fs
cmc
push
xor
test
orl
divb
in
loop
sbb
inc
pusha
insb
fwait
dec
outsl
scas
xchg
pop
data16
jae
xchg
lret
mov
cltd
sti
nop
push
pop
pop
fstpt
push
adc
dec
aas
popa
cli
cmp
lahf
cmp
xor
inc
loope
jnp,pn
lcall
movsb
push
lahf
sbb
inc
rorl
or
mov
jp
fidivrl
jbe
push
orb
and
shlb
xor
mov
jecxz
imul
pop
data16
mov
jl
inc
mov
inc
mov
inc
sub
lret
pop
lds
lods
sbb
repz
xchg
clc
icebp
sbb
mov
cmp
mov
add
int3
inc
push
mov
ret
push
pop
movsl
insb
dec
pop
mov
mov
adc
test
mov
push
inc
mov
xchg
xor
fnstsw
addr16
mov
insb
xor
jp
lret
es
insl
add
fcomip
inc
shr
mov
das
es
movsl
jnp
scas
dec
lahf
xchg
push
push
js
adc
dec
imul
test
loope
das
xchg
fabs
pop
pop
fcompl
hlt
insl
js,pt
push
or
push
xor
pop
addr16
cmp
pop
adc
dec
mov
sub
mov
loopne
mov
xchg
sbbl
stos
fdivl
jno
inc
loop
addr16
test
repnz
cmp
ja
sbb
mov
xchg
movsb
mov
push
mov
sbb
fdivl
and
das
xor
mov
aaa
lock
lahf
imul
negl
pop
outsl
jge
rolb
inc
sbb
sbb
das
decl
arpl
mov
fistpll
xchg
stc
mov
leave
fstpt
imul
outsl
push
cmc
cmpb
repnz
mov
dec
jns
cmpsw
call
lahf
fidivrl
sbb
push
shrl
sub
fistps
jns
jecxz
imul
mov
fidivs
lods
push
imul
adc
and
xor
sub
cmc
sbb
and
rdpmc
leave
sarb
sbb
in
out
xor
test
mov
or
notl
idivl
sub
sub
stos
or
xlat
in
mov
negb
mov
mov
xchg
inc
fwait
jl
fidivs
repz
push
daa
data16
aaa
pop
pop
sub
std
pop
or
int
stos
je
jns
or
xchg
sub
adc
jecxz
sahf
repnz
repz
cmpsl
les
mull
mov
jecxz
mov
sbb
xor
or
inc
and
movsl
hlt
das
ds
jp
aas
clc
inc
inc
sbb
mov
jg
stos
pop
jns
add
imul
pushf
dec
idivb
mov
adcl
lret
notl
mov
sti
jns
pop
leave
es
popa
jge
or
lahf
mov
lods
add
das
arpl
ror
pop
test
add
inc
stc
sbb
xchg
sbb
push
ljmp
sbb
out
mov
cmpsb
mov
mov
pusha
je
sub
add
popl
data16
sbb
sbb
mov
fcompl
and
enter
test
jb
aaa
repz
aas
cmpl
or
fildll
clc
cld
cmc
add
data16
push
mov
cmp
dec
pop
jns
sbb
pop
in
xor
dec
js
lods
jmp
fs
mov
ds
add
pop
loop
mov
cmpsl
push
dec
call
notl
movl
jbe
movsb
and
imul
xchg
mov
mov
add
pop
data16
loopne
shll
imul
out
shl
push
pushf
cltd
cltd
mov
fld
addb
pop
inc
cli
ja
fidivrs
popa
sub
mov
cmc
sub
mov
addr16
out
sbb
push
aam
add
decb
in
pop
jnp
mov
inc
bound
gs
xchg
jbe
cmp
sti
mov
fsubr
imul
push
inc
addr16
sbb
iret
test
lea
arpl
loop
adc
add
mov
sbb
mov
mov
outsl
fnsave
cld
jne
inc
pop
outsb
adcb
popa
mov
push
sti
push
push
dec
loopne
jne
mov
imull
cmpsl
repnz
stc
and
int
and
sub
add
mov
pop
jo
stos
pop
sub
dec
push
decl
push
push
aam
test
adc
sbb
mov
jle
push
enter
cmc
inc
nop
push
int3
call
xchg
or
std
andl
jle
icebp
out
addr16
sub
jb
pop
cmp
cmp
cmp
les
lods
aas
lcall
outsb
or
cwtl
not
addr16
pusha
mov
adc
outsl
adc
pop
mov
out
rcrl
fs
test
sbb
stos
dec
cwtl
pop
cmove
sub
scas
fidivl
xlat
bound
shrl
push
pop
jecxz
imul
test
pop
outsl
sbb
addb
pop
fsubs
adc
xchg
mov
bound
arpl
mov
xchg
jmp
xchg
outsb
lret
js
jne
jl
addr16
add
jns
or
mov
cmp
pop
dec
xchg
mov
adc
inc
sti
fbld
call
inc
insb
sub
cmp
xchg
inc
add
adc
adc
adc
test
or
sbb
jae
out
fs
scas
leave
mov
pop
cmp
stos
push
cmp
mov
inc
inc
pushfw
pop
pop
out
roll
dec
inc
cs
and
pusha
xlat
in
rep
mov
xchg
rolb
stos
iret
imul
jmp
jge
test
inc
ret
jnp
mov
xor
inc
cli
shll
mov
jp
in
dec
dec
dec
jmp
hlt
mov
pop
out
repz
stos
xchg
mov
push
call
cltd
fdivrs
and
pop
cmc
pop
push
add
jmp
push
and
dec
push
out
lret
pop
mov
mov
shlb
loop
je
cmp
mov
into
push
stc
pop
or
lods
test
and
or
cmovae
xor
rcrb
add
jle
jg
or
fisttps
inc
xchg
mov
mull
je
loopne
jl
fstps
je,pt
push
xchg
addr16
in
inc
add
in
add
mulb
mov
cli
mov
jae
insl
subl
cwtl
test
movsb
inc
aad
adc
fildl
pop
jg
or
cli
lods
popf
in
sti
push
cmp
mulb
aaa
xchg
fnsave
mov
stc
jmp
xchg
xchg
ds
inc
testl
push
addr16
andl
jle
sub
in
push
sarl
or
mov
test
or
mov
cmp
aas
jnp
push
xchg
add
xor
xchg
fisubs
fs
pushf
ljmp
mov
jae
je
pushf
mov
mov
cmp
lods
fbstp
pop
leave
scas
adc
fucom
jne
add
lods
push
jp
insl
inc
aad
adc
jo
in
je
mov
pop
sub
lcall
push
int
pop
push
mov
mov
dec
imul
and
pusha
adc
outsl
add
mov
push
dec
imul
sti
imulb
jle
notb
pusha
xor
mov
sti
xchg
push
mov
ror
push
add
popa
mov
outsb
xor
test
sub
dec
js
mov
fidivrl
ljmp
pop
jo
notl
dec
movb
pop
or
xchg
add
lock
pop
in
pop
xlat
fcoml
scas
test
pop
sti
leave
adc
dec
jae
sub
mov
in
sbb
sub
jl
hlt
lods
jle
in
lds
out
leave
in
adcb
add
push
push
cmp
stc
jno
out
mov
hlt
loop
cwtl
add
out
fists
popa
inc
std
sqrtps
icebp
push
add
stos
in
cmpsl
cmp
mov
sahf
rorl
or
mov
mov
sti
scas
test
leave
pop
cmp
or
fdiv
sar
sbb
add
arpl
xor
rcll
pop
out
out
psllq
loop
jbe
mov
dec
cld
jnp
in
or
mul
inc
pop
jbe
cli
add
xor
pushf
jno
and
dec
mov
call
js
test
pusha
repz
pusha
mov
mull
push
inc
jg
inc
xchg
ljmp
sub
mov
fimull
mov
ret
add
shl
dec
outsb
pop
push
and
mov
push
pop
cli
pop
xor
pop
scas
call
cmp
fwait
cmpl
mov
pop
clc
cmp
inc
jae
push
imull
mov
bound
dec
insb
xchg
dec
hlt
outsb
dec
sti
rol
mov
ret
lea
add
stos
dec
mov
mov
in
sti
cmp
sub
jecxz
add
pop
or
cltd
xchg
test
and
pop
adc
repz
inc
outsl
mov
dec
rcrb
out
or
xor
ret
sarb
cwtl
adcl
imul
add
daa
pushf
lods
or
pushf
and
loopne
scas
ror
jp
arpl
add
out
pop
and
push
pop
es
pop
cmp
push
push
or
in
clc
mov
mov
stos
pop
sub
enter
sub
inc
aam
xchg
std
outsl
mov
outsb
call
arpl
mov
outsb
cmp
lret
sti
ret
stos
imul
sbb
loopne
aad
pop
push
jle
sbb
insl
xchg
clc
mov
aas
sbb
je
push
loopne
aad
rol
out
gs
inc
mov
xor
pop
mov
loope
lret
jmp
mov
fcomps
imul
pop
inc
inc
cmp
or
mov
jecxz
pop
pop
jmp
retw
dec
test
cltd
jbe
mov
adcb
popf
jge
jae
movsl
cmpsb
pop
inc
bound
lret
mov
lods
xrelease
mov
mov
dec
mov
mov
addr16
and
icebp
std
mov
add
xor
cmpsl
xor
lcall
xchg
sub
or
test
cmp
pop
cmpsl
rol
out
pop
push
or
or
mov
dec
xchg
or
inc
loopne
add
lock
insb
jecxz
mov
repnz
or
fwait
clc
ret
popa
incl
ljmp
jae
mov
xor
icebp
inc
out
fimuls
add
icebp
cmp
mov
movsb
lods
int
mov
push
dec
push
int
mov
ret
add
adc
inc
mov
add
pmaxsw
and
cwtl
dec
rol
cmp
adc
cwtl
mov
push
add
and
stos
add
pop
jle
dec
add
sahf
push
clc
icebp
push
push
dec
pop
or
mov
mov
or
lret
ja
adc
lret
fs
sbbl
enter
adc
in
movsb
in
sbb
mov
orb
mov
xorl
lds
and
jp
cmc
adc
hlt
mov
push
aad
cmp
lods
les
shll
xchg
cwtl
loopne
push
pop
aaa
mov
adc
sbb
adc
adc
and
scas
pushf
sub
dec
jne
sti
call
cmp
pop
or
pop
arpl
cmp
or
push
sub
test
outsl
mov
jmp
dec
mov
cmp
pop
jg
out
enter
aad
movsl
lea
jo
mov
adc
sub
sbb
sub
jp
js
jge
hlt
stos
mov
xor
or
clc
stos
mov
mov
push
jae
sti
outsl
and
jne
lahf
into
andl
push
pop
sbb
loopne
lock
push
jge
sub
fstl
roll
push
pop
ds
jb
or
sbb
sub
imul
enter
mov
sub
sbb
ret
insl
adc
mov
push
cmp
xchg
fidivl
push
push
pop
cmp
cmpsb
cmc
add
inc
mov
push
pop
jp
mov
outsb
movsl
fisubl
loope
xchg
repnz
add
add
push
call
decl
mov
inc
xchg
pop
adc
mov
pusha
lahf
int3
mov
inc
xchg
pop
jge
mov
adcb
jb
stos
fs
out
sti
fnstsw
push
aas
imul
adc
pushf
out
mov
sti
ljmp
mov
pushw
cmp
lock
cmp
mov
sbb
xorl
cwtl
popf
inc
dec
repz
cmp
sbb
test
or
lcall
divb
jne
jne
insb
mov
xchg
adc
adc
mov
insb
les
mov
out
and
jbe
ror
lods
movl
mov
jbe
mov
test
enter
inc
call
xchg
clc
loop
dec
data16
sbb
out
mov
loope
mov
test
lods
mov
xor
and
inc
dec
sbb
loope
jo
call
test
sub
pcmpgtd
xchg
xor
mov
arpl
pusha
lret
mov
pushf
sti
ret
sbb
int
jnp
lret
mov
dec
loope
lcall
dec
jnp
xor
mov
or
add
xchg
xchg
aas
and
ja
jo
in
loope
dec
xlat
mov
shl
in
rcrb
enter
jl
jnp
cmpsb
imul
pop
sub
std
lcall
loope
sbb
push
and
test
xchg
mov
mov
fstpt
outsl
fistpl
sub
es
add
mov
jns
test
adc
ret
in
fistpll
push
push
mov
push
imul
push
adc
lods
cli
pop
stos
xor
push
insl
mov
xchg
inc
jl
dec
loopne
imul
std
push
into
loope
mov
sub
sub
xlat
test
cmp
mov
stc
sarb
test
cltd
cmp
or
ret
ret
in
add
call
dec
in
and
mov
push
push
loop
push
loopne
into
inc
adc
and
mov
lock
add
push
pop
les
dec
fstps
js
pop
sbb
push
nop
dec
flds
outsl
jbe
or
cmp
loopne
mov
mov
cli
nop
bound
clc
aad
adcl
out
shll
dec
sbbb
pop
insl
push
jecxz
xchg
out
sbb
mov
subl
jl
and
es
push
or
add
in
mov
pop
repz
lret
out
ss
cmpl
cli
arpl
ss
shll
popa
testl
sbb
or
xchg
pop
adc
xchg
cmp
mov
sub
rclb
push
outsb
sub
or
push
sar
test
popa
movsb
cmp
orl
mov
inc
push
lds
cld
and
fnstsw
push
enter
lret
adc
shrb
mov
repnz
repnz
xchg
dec
hlt
out
notb
ret
dec
pop
xchg
push
mov
sbb
iret
les
notl
jmp
pop
jno
cmpsb
stc
call
aaa
ret
mov
fcomps
popa
jl
sbb
jns
pop
push
push
inc
sub
scas
fbstp
ja
sub
lds
out
insb
pushf
sbb
cmp
cli
jl
xor
loop
push
insb
lea
mov
out
jne
xor
aaa
mov
push
sub
aaa
ret
sbb
cld
addr16
inc
mov
jmp
int
fstpt
outsl
and
loop
iret
xor
and
outsb
or
push
scas
ja
adc
insl
dec
sub
and
loop
mov
sti
pusha
jecxz
aaa
pushl
mov
inc
lahf
loope
jmp
imul
mov
cmp
xchg
sbb
ljmp
lahf
dec
imulb
lods
jno
arpl
xor
loop
mov
or
mov
js
push
jg
cmpsb
imulb
push
test
cmp
mov
fs
sub
sub
subb
mov
sub
or
enter
outsb
jmp
fidivl
das
imul
pop
insl
ja
adcb
or
shlb
out
pop
xor
mov
es
xor
dec
push
addr16
test
loopne
repnz
imul
sbb
icebp
scas
mov
inc
aad
xchg
push
jnp
push
addr16
pop
std
mov
xchg
jmp
insb
pop
js
cmp
fsubs
daa
cli
inc
sti
sbb
jg
mov
insl
push
loope
imul
xchg
test
push
or
mov
aam
bound
inc
pop
std
sbb
imul
mov
and
cwtl
cmp
enter
xor
push
or
cwtl
imul
jg
inc
add
pop
inc
cmpb
jno
sub
data16
mov
stos
mov
xchg
sub
cmp
mov
mov
test
icebp
jp
xchg
pop
ret
adc
dec
repnz
mov
xor
ss
or
popf
mov
dec
push
and
sahf
movsb
pop
mov
sub
mov
cmp
xchg
inc
or
inc
daa
mov
inc
sahf
repnz
mov
dec
xor
jae
in
ret
adc
jge
orl
or
out
fsubp
movl
and
sub
mov
add
jg
pop
imul
mull
adc
sbb
mov
push
test
sub
imulb
pop
orb
in
mov
daa
movsb
cli
insl
dec
mov
in
mov
mov
adc
rcrl
loopne
ljmp
scas
incl
mov
jecxz
mov
ret
pop
push
repnz
push
or
fwait
mov
pop
mov
adc
cmp
loopne
ds
mov
cli
mov
daa
sub
xor
push
mov
outsl
ss
lock
fucomip
jp
stc
in
pop
gs
sub
loope
push
and
jl
out
fidivrs
mov
lcall
lock
daa
pop
aaa
inc
inc
rolb
std
xlat
cltd
jnp
out
add
xchg
fcompl
inc
ret
inc
sub
adc
add
pop
and
es
addr16
int
jne
jp
sarb
enter
out
adc
push
push
dec
mov
imul
xchg
or
mov
pop
rcrl
pop
incl
or
xlat
and
loope
lock
xor
clc
out
push
sbb
mov
jge
mov
mov
or
test
data16
mov
shl
test
xchg
ret
jo
ret
sbb
addr16
fs
jp
sti
cmp
stos
dec
fstl
movsl
jmp
inc
lcall
push
ss
stc
flds
push
adc
jle
repz
dec
hlt
shll
or
lret
pop
roll
pop
int
ret
sub
mov
push
outsl
movsb
rorb
imul
xchg
stos
clc
in
sub
mov
jmp
sbb
fiadds
add
insb
les
cmc
mov
sbb
pop
andnps
rep
dec
hlt
dec
inc
repz
adc
push
xchg
dec
sbb
testb
out
cmp
jb
ds
dec
arpl
adc
pop
lock
push
in
and
pusha
in
cmp
mov
out
punpckhbw
movsl
out
pop
aam
inc
cmp
cmpl
and
mov
add
ss
jo
pop
jno
mov
sbb
pop
jbe
jmp
dec
adc
test
enter
mov
dec
inc
xchg
inc
xchg
shll
sbb
push
and
xchg
adc
imul
sub
push
insl
adc
jmp
out
push
jno
fnstsw
addr16
adc
xchg
or
xchg
sub
xchg
push
sahf
dec
cmp
imul
cmp
mov
lahf
adc
in
pop
mov
pop
icebp
xor
negl
ss
adc
pop
jb
outsb
cmp
in
scas
mov
xor
adc
mov
fwait
lods
imul
test
cmpsb
orb
enter
stos
jo
or
int3
jecxz
sub
stos
stc
dec
addr16
fisubrl
push
mov
jnp
and
mov
outsl
lods
dec
out
insl
mov
jge
shlb
outsl
sbb
cld
test
fs
ss
cmc
fisubs
inc
and
mov
mov
das
iret
inc
cmp
pop
mov
repnz
call
push
mov
mov
iret
xchg
scas
inc
je
sbb
adc
or
push
mov
repnz
jno
cwtl
imull
sarb
ds
cld
data16
mov
push
push
mov
jnp
add
lret
push
xor
stos
lret
cmp
cwtl
mov
sub
pop
push
and
lret
out
mov
inc
adc
push
xor
pop
mov
mov
sbb
insb
or
clc
lret
xor
into
mov
test
fs
negb
adc
das
fwait
or
stc
scas
int
mov
inc
popf
and
negl
xchg
inc
xorps
sub
stos
xor
inc
xor
addr16
aaa
pop
xor
shll
imul
push
mov
inc
psraw
adcb
sub
repz
push
inc
inc
cmpl
lret
jl
adc
mov
sub
dec
inc
imul
fs
mov
mov
cli
cmpsl
rolb
int
cli
in
pop
pop
in
inc
cmp
leave
adc
xchg
pop
stos
inc
pop
loop
rorl
jl
jns
loopne
lods
mov
sub
pop
cmp
push
jnp
addr16
jnp
sub
movsl
inc
inc
xchg
mov
add
aas
subb
je
lea
aad
mov
adc
shll
scas
jg
adc
jmp
gs
movsb
jmp
aam
cli
lcall
mov
addb
pop
dec
xchg
arpl
add
movsl
call
add
mov
jb
js
inc
into
push
and
inc
mov
xchg
dec
scas
mov
mov
scas
sub
xchg
cmp
mov
cmp
scas
push
pop
icebp
lcall
xor
popa
or
cld
mov
jns
les
test
out
imul
push
jne
mov
rorb
test
jnp
push
or
test
xor
pop
and
fnstenv
repz
mov
xor
mov
pop
jmp
xlat
dec
insl
mov
mulb
out
aad
fdivrl
push
mov
loope
ficomps
lock
jae
icebp
mov
cmp
dec
sub
xchg
push
aam
jne
clc
cmp
fisubs
pop
adc
lcall
push
sbb
xchg
and
out
or
add
aas
pop
cmpsb
inc
insl
add
stos
pop
dec
and
xchg
inc
inc
sbb
shrb
negb
push
adc
mov
adc
arpl
xchg
inc
and
mov
clc
and
adc
xchg
imul
sbb
adc
cli
lret
add
in
mov
ljmp
fisttpl
sahf
out
xchg
adc
loop
mov
adc
xorl
outsl
adc
js
outsb
inc
mov
jo
jmp
nop
pusha
cmp
xor
mov
mov
mov
xor
dec
pop
dec
push
jg
cltd
pop
fcmovu
add
push
dec
or
in
bound
inc
imul
jae
or
hlt
cli
push
arpl
and
ds
cmc
shlb
pop
and
and
cmpsb
hlt
or
fcompl
repz
jmp
sub
jbe
mov
pop
jnp
pop
aaa
pop
shll
jmp
jbe
xchg
adc
leave
lods
aas
mov
repnz
out
adc
cld
sbb
jl
xchg
dec
push
call
idiv
mov
fidivs
mov
mov
arpl
or
inc
push
mov
push
mov
cli
add
mov
lahf
and
xchg
sar
mov
hlt
pusha
ret
lcall
div
fldl
lcall
inc
push
lods
nop
cli
pusha
sub
jge
xor
aam
les
adc
cmp
cld
dec
icebp
jmp
mov
cmc
shr
jmp
icebp
fildll
push
cmp
push
cmp
sub
daa
push
mov
les
std
xchg
popf
adcb
and
lret
xchg
hlt
lds
std
ja
test
push
dec
and
imul
jge
cmp
insl
inc
push
pop
outsb
clc
ret
pop
pop
cmc
jo
pop
xchg
ds
bound
bound
xchg
add
in
fsubl
notl
mov
or
xchg
ljmp
dec
dec
cmp
push
popa
in
mov
js
and
jmp
dec
loopne
jge
and
ljmp
movsl
cmp
sub
sub
adc
loope
stos
xchg
and
jecxz
fldt
loop
xchg
dec
mov
push
test
mov
ds
in
data16
pop
lret
adc
mov
imul
mov
aaa
inc
fldenv
xchg
pop
inc
mov
in
sbb
push
inc
pop
scas
cmp
mov
pop
arpl
cmp
jl
fistpl
mov
repnz
ffreep
lcall
pop
push
cmp
popa
push
mov
andb
gs
jo
xor
xchg
sub
in
mov
adc
sub
xor
shlb
xchg
loope
in
movsb
in
jae
pop
push
xorl
xlat
es
sahf
std
xchg
mov
sbb
sub
add
sub
testl
xor
push
mov
sti
loopne
and
out
negb
daa
sti
jl
adc
les
push
repz
pusha
fnstenv
inc
xor
inc
pop
pop
repnz
cmc
adc
fidivs
loop
popa
js
xor
shrb
fwait
daa
in
mov
inc
mov
mov
mov
subb
mov
pop
add
flds
dec
enter
les
mov
pushf
push
xchg
test
cmpsl
xchg
cli
addr16
mov
push
in
int
push
mov
fstl
addr16
mov
mov
sbb
push
pop
leave
out
jbe
insl
or
push
test
and
mov
adc
popf
out
pop
mov
mov
mov
inc
xchg
fidivl
inc
imull
movsl
and
inc
pop
sti
daa
dec
and
ret
aas
orl
jb
sub
jno
lods
lret
fldl
mov
pop
push
clc
popf
in
inc
push
ljmp
ja
cmc
ljmp
arpl
pop
pop
into
mov
xchg
out
inc
cmpsl
hlt
insb
mov
ret
aas
inc
scas
jae
mov
pushf
xchg
outsb
negl
adc
rcrb
adc
sbb
dec
ss
negl
loop
adc
aam
sbb
ret
pushf
mov
push
gs
aam
fwait
inc
in
push
adc
jecxz
xchg
adc
cwtl
incb
jp
sbb
data16
pop
xor
out
pop
push
pop
dec
mov
aam
push
andl
cmp
cmpsl
ret
push
ret
xor
arpl
leave
rcrb
cmp
and
decl
aas
add
add
jo
hlt
daa
jl
bound
lods
clc
ret
gs
test
mov
int3
ret
mov
xchg
inc
in
cltd
xchg
xchg
fimuls
lds
je
cmp
rcl
mov
pop
sub
ljmp
fnstcw
repnz
js
xchg
ljmp
icebp
mov
pop
cmp
fisubrl
scas
aas
and
jge
sbb
jl
pop
push
add
push
int
mulb
mov
xor
imul
test
mov
call
loope
enter
adc
outsl
les
fadds
fcompl
cmp
add
mov
mov
sbb
aam
mulb
mov
push
mull
div
aad
pop
test
repnz
push
xor
sub
jno
push
sub
lds
mov
xchg
inc
inc
xor
lods
dec
lds
loopne
out
jo
pop
mov
int3
mov
cmp
mov
push
mov
enter
out
out
jne
dec
dec
mov
mov
loop
xchg
sub
iret
xor
xchg
add
aaa
mov
push
stc
sub
out
daa
scas
cmp
sub
popf
ljmp
stos
xchg
adc
pusha
pop
sub
arpl
jne
mov
jl
cmp
repz
adc
lea
ret
lahf
cld
loop
mov
xor
adc
icebp
ror
mov
clc
xor
or
jecxz
or
and
int3
dec
pusha
push
push
out
adc
sub
adc
stos
jge
lret
xchg
movsb
cld
dec
add
loope
adc
xchg
sbb
bound
orb
enter
dec
pop
sahf
xchg
test
xor
aad
inc
out
sarb
stos
negb
mov
sbb
sbb
jge
or
popa
ret
sbb
jo
xchg
mov
outsl
adc
mov
fmuls
lds
add
int3
mov
into
mov
push
jle
sbb
adc
lds
sbb
cmp
or
shl
mov
jl
and
mov
mov
out
out
inc
push
fidivs
inc
or
fldl
lods
and
into
or
hlt
cli
push
adc
pop
add
push
insb
ficompl
sbb
mov
out
jb
in
add
sub
add
das
frstor
mov
cmp
and
jecxz
addr16
or
adcb
pop
cmpsb
push
inc
mov
push
repz
jp
jecxz
std
mov
das
scas
pop
adc
iret
inc
mov
and
adcl
pop
push
jae
js
and
mov
addr16
cmpb
cs
mov
dec
sbb
push
idivl
jp
fwait
das
jne
push
aad
addb
mov
shl
loop
loop
jne
add
idivb
loopne
cmp
jecxz
cmp
dec
cs
fcmovne
mov
pop
outsb
imul
int
insl
pop
in
jbe
int3
ret
fdiv
outsb
ds
add
add
outsb
inc
and
sbb
pop
xor
jmp
int3
pusha
fsubs
dec
and
jnp
jl
and
pop
push
lret
push
pop
cltd
fcmove
addr16
gs
lock
scas
leave
push
jmp
fnstsw
data16
gs
mov
fidivrl
outsl
mov
popf
aaa
xchg
or
test
cmp
push
repz
jo
add
ljmp
or
testb
popf
or
sub
add
jns
mov
jmp
xorb
and
jae
aaa
xor
out
mov
ffree
in
mov
mov
dec
fistl
out
mov
pusha
inc
mov
repz
sub
insb
call
push
imul
xchg
jle
and
and
sbb
aam
lods
xor
clc
mov
mov
push
arpl
jmp
add
pop
ja
divb
mov
gs
xchg
xchg
movsb
rcrb
cltd
jge
push
std
sub
enter
sub
xchg
popa
pop
loop
and
ds
adc
jnp
pop
cmpsl
mov
or
loope
jb
dec
jns
xor
lods
aas
pop
jmp
rolb
hlt
and
pop
adc
jno
sub
lret
push
and
push
aad
pop
pop
xor
jns
adc
sahf
mov
imul
and
hlt
pushf
and
sub
hlt
mov
inc
mov
test
addr16
std
xchg
ja
jne
mov
add
sub
push
mov
adc
push
sarb
jecxz
xor
or
ja
add
movsb
dec
mov
decb
pop
push
or
scas
mov
ret
pop
ljmp
pop
cmpsl
xchg
cmp
dec
inc
mov
add
inc
sarb
xor
sti
or
mov
push
sbb
or
inc
xor
add
pop
jns
in
xchg
ljmp
jecxz
cwtl
mov
not
mov
mov
mov
inc
hlt
push
xchg
pop
js
ljmp
in
dec
push
add
and
or
pop
out
cmpsb
push
cwtl
in
stos
outsl
jnp
cli
jl
pop
mov
cmp
loop
cmp
insb
dec
pop
inc
xchg
fcoml
mov
and
in
cmp
ljmp
push
pop
nop
inc
or
pop
xchg
xor
pop
ljmp
jo
adc
popf
cmp
jne
imul
push
jo
jecxz
jbe
shll
lret
out
repz
mov
repnz
int3
jae
les
testb
call
adc
mov
decl
sbb
ja
lds
js
in
inc
cmc
sbb
mov
push
std
cld
mov
in
imul
push
aaa
fisubrl
xor
nop
adc
adc
jmp
sub
out
rolb
cmp
enter
sbb
adc
divl
mov
mov
pusha
sbb
ret
mov
push
das
push
xor
jnp
stc
adc
gs
cmp
arpl
mov
push
mov
out
jb
ljmp
fs
jg
push
lahf
sub
arpl
ret
add
hlt
adc
out
add
jmp
out
cli
xor
adc
xor
outsb
jp
pushf
push
aas
jp
jg
loope
enter
insb
mov
loope
stos
mov
out
mov
or
inc
or
insb
mov
pop
gs
movsb
outsl
sbb
pop
dec
insb
mov
lret
in
into
lock
xchg
jg
or
inc
imul
adc
sahf
dec
jmp
jge
and
aad
movsl
notl
mov
mov
lcall
pop
insl
mov
xchg
mov
aam
mov
testl
stos
bound
out
rcrl
dec
insb
cltd
lcall
ja
dec
lock
adc
mov
push
js
push
mov
ja
sbb
jle
mov
fsub
pop
loopne
mov
sub
mov
or
xor
out
lea
xchg
cmpsl
add
sarl
mov
and
cli
jns
push
insb
clc
fsubrl
jp
mov
adc
gs
xlat
inc
test
movsl
imull
loopne
test
add
js
xor
xchg
cwtl
dec
into
testb
push
mov
and
xchg
cwtl
push
sbb
or
cwtl
mov
data16
lcall
les
clc
sahf
xchg
xlat
xchg
or
xor
stos
mov
push
aad
gs
or
add
dec
cmp
pushf
hlt
xor
sar
mov
fidivrl
adc
xchg
aas
in
mov
lcall
enter
cltd
mov
leave
jne
inc
icebp
xchg
fwait
add
stc
out
cld
std
push
push
push
sahf
sbb
push
add
pop
xor
fcmovnbe
mov
nop
xchg
mov
jnp
lods
sub
mov
sar
pusha
xorb
or
dec
sub
pop
adc
stos
sti
leave
and
scas
cmpl
daa
push
mov
test
rorl
dec
push
push
sti
jns
push
mov
lods
jns
jae
lods
repz
cmp
mov
mov
stc
pop
inc
shl
mov
in
adc
xchg
cmp
addr16
lahf
sbb
loope
jae
fcomip
mov
xor
sub
or
lock
and
add
in
clc
outsb
test
nop
loop
daa
popf
out
aaa
pop
ljmp
or
loop
mov
or
xchg
popa
cmp
addr16
aam
mov
cmp
stos
clc
insl
bound
mov
adc
pop
ljmp
inc
data16
mov
test
sub
lods
cmp
mov
sbb
mov
movsb
xor
inc
jl
test
arpl
jl
pop
gs
daa
in
lock
xor
ret
outsl
and
out
inc
sbb
js
jmp
data16
pop
pop
cmp
adc
mov
push
ljmp
jne
clc
fidivrl
jb
add
cmpsb
das
lock
insb
cmpsl
addr16
sub
notb
test
call
push
into
xor
std
xor
jp
jo
test
xor
loop
fwait
pusha
xor
xor
je
into
cs
test
mov
jl
ret
push
mov
ret
lea
imul
std
jae
jge
notb
push
iret
je
fmul
add
cmpsb
bound
cld
push
push
scas
lea
dec
enter
sub
std
mov
xor
push
xchg
adcb
lods
loope
dec
cmp
jae
adc
jecxz
jae
sbb
out
cmc
and
push
clc
sarb
dec
xchg
add
loope
adc
call
cmp
ss
outsb
fs
les
inc
xchg
dec
jge
aaa
outsl
data16
out
add
nop
push
outsb
repz
fistpll
or
mov
or
sub
idivl
push
mov
fistpll
sbb
pop
insb
mov
fcoms
lahf
sub
int
dec
shll
decl
dec
ja
es
mov
jp,pt
jl
mov
pop
mov
pop
or
and
ret
sub
push
xlat
or
imull
push
sub
jb
into
fwait
dec
repz
lahf
out
lcall
mov
cltd
lahf
ljmp
cmp
mov
cwtl
lods
cmp
xchg
jl
and
or
jl
sbb
mov
and
sarl
push
shlb
pop
push
fbstp
scas
shlb
rolb
lret
and
inc
les
mov
pop
lds
stc
insb
insl
sbb
inc
xchg
out
fidivrl
lahf
push
cli
dec
stc
shl
test
jl
arpl
fs
fnstsw
inc
daa
jmp
xlat
sub
adc
push
lret
cwtl
ficoml
pop
outsl
inc
popf
mov
dec
pop
cmovnp
pop
ds
lahf
lcall
stc
mov
mov
pop
push
xchg
add
push
inc
jl
jb
add
mov
frstor
mov
or
sub
adc
call
pop
xchg
loop
xchg
leave
push
add
inc
icebp
ficomps
fdivrl
jle
aam
lret
nop
bound
jg
pop
dec
jp
imul
int
xor
lods
adc
or
cmp
pop
roll
adc
fwait
push
cmpsl
sub
pop
dec
stos
mov
inc
out
xor
out
mov
sbb
adc
adc
clc
xor
lahf
bound
inc
sbb
push
out
lahf
sbb
mov
ja
sbb
cmc
inc
in
sbb
jmp
pop
jbe
sbb
fisttps
in
add
xchg
inc
in
pop
push
jl
mov
mov
dec
out
xchg
cmpsb
into
jmp
pop
mov
xchg
mov
je
pop
add
dec
call
test
fwait
repz
mov
scas
stc
mov
lret
fs
fdivl
imull
push
enter
mov
xchg
cwtl
xor
mov
shrl
adc
jb
jge
mov
mov
inc
sub
xchg
or
sub
and
jne
push
pop
jae
sub
push
or
jl
xchg
and
popf
je
ljmp
push
insb
and
dec
aas
inc
pop
lods
jno
pop
icebp
imulb
sarb
mov
test
and
add
push
repnz
jno
stos
jg
and
jp
cmc
iret
jnp
test
jge
or
mov
xchg
xchg
jecxz
mov
adc
faddl
cli
ret
sub
cld
dec
pushf
dec
lea
mov
ljmp
inc
pop
addr16
push
push
sub
inc
mov
cwtl
mov
fistps
pusha
pop
or
pusha
pop
sti
jecxz
jl
and
cltd
inc
sbb
mov
outsl
push
lock
mov
mov
rorb
out
outsb
ret
xor
adc
or
pop
enter
shr
lahf
dec
pop
xor
fsubrs
push
ret
pushf
out
je
call
and
or
mov
or
lds
sbb
data16
dec
lea
out
es
inc
ret
idivb
movsb
dec
cmp
jg
gs
es
hlt
fmuls
rol
jmp
leave
push
movb
mov
repz
call
rorl
cmp
out
movsl
cwtl
out
mov
and
jle
popa
test
popf
and
fwait
push
mov
jp
inc
push
or
pushf
cmp
mov
cld
stc
adcb
outsl
mov
stc
dec
jle
cmp
outsb
ret
in
mov
xor
in
adc
lea
lcall
nop
lret
cltd
mov
xchg
scas
daa
dec
push
cld
cs
movsb
and
insb
inc
mov
and
out
and
mov
sbb
sub
ss
nop
js
out
movsl
xlat
fwait
out
cmpsl
push
test
ficoml
and
xchg
daa
mov
push
andb
out
imul
lret
or
rorb
in
subb
pop
lea
outsb
dec
pop
mulb
negl
mov
aas
mov
push
popf
mov
push
dec
fdivr
inc
shll
jb
cmp
andb
pop
movsb
lret
inc
lods
lods
cmpsl
fldt
sbb
push
movsl
pop
pop
sub
stc
mov
cmp
test
add
dec
add
and
idivb
stos
hlt
stos
cwtl
lods
test
xor
mov
rclb
xor
push
push
jecxz
xchg
imul
jge
leave
push
rcrb
test
iret
pop
inc
shrb
add
out
and
cmp
sarb
jae
fildll
or
jns
sub
jns
and
and
lods
adc
push
jns
jae
stc
dec
mov
xchg
test
push
ds
repnz
pop
cmpsb
test
pop
cli
daa
pusha
jmp
xor
in
dec
cmpl
arpl
lods
test
pop
cmp
mov
xor
movsl
fs
pop
push
rcrb
adc
in
imul
cmc
in
pusha
add
jp
fcmovnu
test
scas
mov
mov
ret
or
mov
cmpsl
pop
jp
arpl
sbb
cmpsl
stc
xor
add
enter
mov
push
test
lods
int3
mov
icebp
adc
pop
ljmp
push
cmpsb
es
inc
inc
push
or
dec
fwait
or
outsl
fidivrs
idivb
scas
daa
pop
jne
inc
outsb
movq
sub
sbb
in
stc
adc
ja
inc
popa
das
and
mov
sbb
sub
dec
test
scas
push
sbb
leave
cmpsb
mov
imul
mov
sbb
push
or
xchg
pop
xchg
cli
cmc
xchg
ja
imull
mov
dec
push
repz
sti
sub
out
cmp
pop
jg
fsubrl
adc
repz
adc
sti
mov
es
pop
cmp
push
rorb
mov
and
push
fidivl
inc
jno
xor
insl
pop
sbb
pop
test
ror
sbb
cwtl
jns
or
jl
jp
dec
push
cmp
rcr
adc
cli
addr16
sarb
test
push
jmp
hlt
fldenv
sbb
add
leave
pop
out
sti
les
add
aam
add
imulb
push
lahf
mov
cmc
cli
pop
pop
cmp
pop
jnp
xor
cmc
aas
pop
mov
cmc
je
cmc
cmpsb
jmp
dec
ljmp
je
cmp
push
jae
dec
stc
cmp
insl
mov
fimuls
jmp
bnd
stos
push
xlat
push
jb
pop
dec
addr16
loop
pop
fstl
cltd
out
xchg
sub
adc
insb
test
imulb
jle
adc
jecxz
shll
addr16
adc
inc
jno
and
test
cmp
add
test
pop
cmpsl
int3
arpl
cli
sub
mov
inc
cmp
mov
push
jbe
or
push
sub
rcrl
test
mov
mov
and
mov
mov
mov
sub
outsl
jae
in
pop
loope
mov
inc
mov
popl
leave
fstpt
adc
lret
and
fstl
pop
inc
cmp
jbe
fabs
mov
xchg
mov
pop
cltd
adc
jmp
cmp
push
lods
inc
pop
testl
gs
push
jne
addr16
jb
stos
test
add
lret
mov
loop
or
mov
mov
dec
out
clc
cmp
in
xchg
mov
xor
cmp
pop
add
adc
imul
subl
pop
jae
sub
xlat
jecxz
xor
cmp
in
adc
mov
xchg
clc
add
mov
jns
sub
enter
adc
cmc
cli
inc
cmp
rcrl
stos
out
cs
fwait
mov
mov
jae
shll
mov
cmp
popf
push
fisttpl
dec
aas
stos
mov
dec
dec
mov
sub
xor
mov
jp
cs
xchg
clc
out
enter
dec
cmp
test
mov
mov
repnz
pop
insb
mov
jg
jo
inc
pop
cli
push
adc
push
jns
inc
mov
xchg
pop
push
jg
outsb
bound
cwtl
cld
sarl
into
or
gs
cltd
shrl
dec
sarl
mov
push
pop
popa
sbb
and
aad
inc
xor
dec
outsb
stc
mov
add
mov
lock
jb
xor
mov
repz
ja
sub
mov
setp
gs
mov
sbb
mov
rsm
mov
out
imulb
jb
inc
movsb
lret
mov
jno
stos
out
sbb
cli
divb
clc
mov
push
ja
push
cmp
jo
stos
std
movsl
ret
mov
pop
lret
sub
add
lods
mov
pop
aaa
clc
mov
mov
sti
lret
imul
bound
lret
mov
lods
jle
dec
bound
jo
out
ja
fs
mov
mov
lds
pop
shrl
lret
mov
fidivrl
and
dec
push
in
movsl
cli
fdivl
dec
inc
cltd
es
lods
sub
stos
and
addr16
add
cmp
aad
mov
pop
add
inc
sub
das
dec
and
leave
mov
scas
cld
inc
jg
das
mov
push
rcll
xor
pop
ret
or
inc
or
call
push
dec
ret
es
mov
cmp
inc
pop
sbb
mov
subl
rcrb
push
inc
pop
faddl
test
pop
mov
insb
rol
movsb
and
sub
ds
outsl
test
push
jl
pop
je
pusha
into
dec
xchg
jl
and
gs
mov
jl
shll
xchg
adcb
and
sub
mov
stc
or
mov
arpl
notb
je
cmp
cmpsb
dec
pop
sti
idivl
cli
repnz
xchg
jnp
cmc
lcall
xchg
dec
scas
mov
cld
mov
dec
inc
and
push
mov
mov
rorb
pop
jle
mov
inc
sahf
stc
and
jae
fildll
lahf
xor
imul
notl
js
js
add
test
je
inc
lods
or
aad
lds
xchg
bound
cmp
xchg
inc
jmp
xchg
repz
xchg
push
mul
jecxz,pt
aam
ret
outsb
lods
mov
rolb
dec
mov
inc
das
mov
xchg
sub
addb
push
mov
pop
stc
scas
xchg
nop
add
mov
test
out
cmp
push
cmp
rclb
lods
pop
dec
imul
jp
push
fisubl
pop
stos
cltd
lock
mov
pop
cmp
cld
xor
dec
pop
loopne
insb
scas
cmpsb
adcl
out
and
ret
test
inc
jne
aaa
and
in
push
in
stc
mov
into
ret
mov
popf
movsl
lea
adc
enter
aad
mov
decb
cmp
negl
add
xor
or
jbe
mov
cld
cmpsb
xchg
adc
sbb
push
loopne
in
jp
in
in
loop
adc
shr
call
loopne
loope
cmc
js
ds
mov
negl
cwtl
or
add
cmpsb
cmp
out
test
aam
ret
sahf
and
sub
sbb
cmp
add
mull
out
ficompl
out
orb
imul
data16
mov
lahf
adc
sub
idivb
ret
fildll
dec
popa
pop
pop
push
lds
pushf
ljmp
ret
mov
add
aas
dec
rclb
xor
inc
or
in
pop
icebp
cmc
addl
mov
stc
cld
test
sub
pop
jns
lret
inc
dec
jbe
cmp
pop
add
push
fs
fsubrl
xchg
and
out
out
and
pop
jmp
jecxz
push
repz
scas
fsubrp
cmp
inc
jg
add
aas
push
cmp
mov
fmul
cmp
add
xor
out
loop
ss
mov
push
bound
dec
pop
mov
scas
cmp
clc
mov
xchg
jl
pop
xchg
in
scas
push
add
mov
rclb
js
jmp
pop
mov
xchg
cmp
iret
xchg
adc
sti
add
or
inc
pop
icebp
lret
sbb
xchg
mov
pop
add
or
pushf
aad
xlat
pop
lret
dec
test
ret
mov
mov
negl
scas
push
and
lods
sub
xor
xor
fs
push
daa
in
or
sbb
dec
mov
cs
sub
fdivrs
sbb
xchg
cs
fs
jg
mov
addr16
pop
aas
scas
sti
repz
pop
push
repnz
dec
mov
mov
xor
mov
mov
and
out
loop
aaa
call
negl
add
cmp
add
imul
movsl
xchg
int3
ficomps
sti
cs
frstor
js
xchg
enter
lcall
mov
inc
mov
lret
cs
xchg
push
cs
fmuls
cmp
aaa
ds
clc
jp
in
daa
xor
xchg
mul
xor
out
jl
hlt
das
call
lcall
sti
bnd
call
dec
mov
mov
in
mov
sub
das
aam
in
ret
lods
pop
and
gs
adc
jecxz
sti
push
out
and
xchg
push
sub
sbb
xor
push
and
test
adc
popa
push
lahf
fcompl
add
shll
movsl
leave
and
fdivrl
adc
lock
mov
sbbb
outsb
add
pop
pop
pop
jp
sahf
mov
es
das
pop
ret
sbb
call
popf
ss
mov
outsb
mov
sub
jne
enter
sti
mov
and
addr16
push
adc
cwtl
dec
lea
xor
cmp
ret
notb
es
inc
je
and
ljmp
addb
in
cmpsl
pusha
test
adc
repnz
xor
fiaddl
cmp
jno
jl
mov
ret
lock
lds
vmwrite
push
push
scas
sub
fsubrl
jae
inc
aam
push
mov
inc
nop
cli
fsub
imul
stc
add
imul
cmp
mov
dec
mov
lahf
repnz
jb
lds
cltd
cmc
or
mov
sbb
dec
sbb
dec
loopne
aaa
xchg
notb
jnp
jmp
dec
cmovp
sbb
push
sbb
xchg
insb
scas
scas
in
dec
aam
jne
mov
negl
and
aas
pop
and
pop
outsb
or
mov
aaa
inc
push
lret
pop
scas
pushf
mov
mov
push
and
xor
inc
aas
xor
aam
dec
mov
cmp
push
push
stc
in
jo
sub
cld
push
xchg
mov
pop
mov
or
lods
jb
addb
cli
mov
pop
fbstp
xor
mov
andl
mov
lods
aas
das
mov
or
stos
cmp
xchg
idiv
dec
fsub
mov
lahf
lock
test
push
lahf
cwtl
lds
push
sub
cld
sbb
fildl
mov
scas
bound
mov
mov
and
cmpsl
pop
mov
call
add
insl
dec
repnz
rorl
and
repnz
mov
and
push
sbb
je
stc
clc
dec
xor
jno
mov
js
mov
sbb
icebp
xchg
ja
in
and
dec
popa
shlb
or
test
cmp
nop
outsl
out
sbb
insl
sub
iret
jp
mov
sbb
dec
push
int3
enter
divl
mov
inc
and
push
jns
aaa
pop
jg
pushf
shlb
ret
dec
sbb
outsb
iret
sti
sub
fs
lahf
mov
mov
insl
jae
xor
sbb
sbb
cmp
push
nop
inc
testb
mull
mov
cmpsb
jne
jns
mov
movsb
js
inc
mov
rcr
mov
push
fsubl
cmp
sub
outsb
data16
xchg
scas
mov
sbb
stos
lods
xchg
cmp
cmp
pop
loopne
ficoml
enter
or
push
push
and
xchg
mov
lahf
jmp
jle
hlt
sbb
mov
jp
xor
push
push
mov
out
popa
cmpsb
scas
or
mov
pushf
popf
roll
mov
adc
icebp
jbe
xchg
cmp
push
pop
arpl
loope
je
nop
mov
push
shll
jmp
push
and
pop
mov
in
mov
addr16
jb
divl
push
jno
vmovd
and
data16
jmp
sub
pop
daa
clc
mov
or
shlb
mov
ret
add
mov
imul
jno
aam
push
movl
hlt
pusha
in
xchg
xor
outsb
dec
dec
xlat
mov
pop
push
lock
stc
cmpsl
lods
test
push
and
cmp
cli
mov
pop
stc
or
std
pop
scas
addb
xor
in
mov
lret
iret
out
aas
lods
mov
xor
mov
mov
test
leave
and
mov
in
mov
and
xchg
inc
shlb
inc
mov
xor
ss
in
std
dec
xchg
imul
add
jnp
test
sub
in
out
adc
mov
cmp
out
mov
jb
hlt
fisttps
xchg
and
cmc
dec
sbb
mov
cld
inc
add
sti
mov
mov
jp
adc
xor
add
cld
mov
sti
test
and
fs
cmpsl
out
lea
or
out
adc
mov
cmc
add
sub
int3
or
loopne
push
or
adc
mov
mov
sub
loope
jnp
inc
inc
push
push
xlat
xchg
pop
mov
sbb
sub
mov
mov
pop
mov
xchg
dec
jne
in
mov
mov
mov
sbb
cmp
testb
pop
mov
sub
ljmp
mov
and
shlb
jnp
cld
rcr
outsb
push
add
in
cmp
into
pop
mov
jnp
imul
pop
jae
mov
subl
fistl
test
lds
add
in
jp
iret
ss
push
iret
arpl
lcall
imul
aas
pop
insb
push
mov
xor
mov
adc
mov
out
jecxz
cmp
pop
and
mov
ss
cwtl
jp
push
mov
fs
xchg
ret
gs
lds
jno
mov
outsb
xchg
arpl
rorl
jnp
ret
mov
out
fisubl
mov
jl
jo
lret
mov
imul
inc
xchg
jns
test
rolb
jno
mov
and
sbb
lret
push
dec
jnp
mov
sub
bound
fdivrs
cmp
daa
xchg
sub
jo
or
add
xchg
pop
pop
push
xchg
repnz
daa
jp
jbe
sbb
int3
mov
or
inc
jnp
jle
sbb
inc
sbb
inc
lahf
shll
xchg
lcall
cmp
mov
mov
pop
popf
bound
test
or
and
jp
jg
mov
and
adc
sub
hlt
dec
leave
jnp
adc
js
fwait
add
int
pop
push
adc
data16
insb
in
outsl
int
inc
and
xor
pop
ja
jnp
les
fldt
jb
cwtl
je
or
inc
adc
mov
and
shl
imul
ds
and
jle
cltd
mov
fs
adc
or
repz
int3
push
mov
pop
pop
jnp
insb
sub
mov
and
pop
shll
sub
mov
jl
in
jecxz
pushf
pushf
inc
jo
daa
jecxz
sti
add
sbb
arpl
and
xor
cld
mov
arpl
into
pop
mov
jp
push
lods
scas
ret
lock
push
fnstsw
es
sbbl
or
mov
jne
cmp
inc
mov
test
jo
cmp
loope
or
and
icebp
addr16
scas
aad
xchg
fs
rorl
and
ffreep
sub
das
fidivrl
jp
movsb
ja
pop
das
leave
and
insb
xchg
mov
jne
or
jne
and
xor
jp
jl
xor
lods
adc
int3
loopne
sbb
xor
xor
nop
mov
xlat
int3
shl
jp
gs
lock
jnp
xor
pop
test
mov
stc
popf
cmp
in
jp
pop
xor
ljmp
fdivrl
aad
jp
adc
pop
inc
sbb
push
and
inc
cmp
jp
ret
mov
push
pusha
int
loop
out
imul
cmpsl
rolb
push
daa
fistps
push
fsubs
in
cli
enter
daa
out
xorb
iret
dec
subl
pop
and
clc
addr16
adc
mov
pusha
sub
and
push
int
lods
and
or
lds
and
cmpsb
sarl
loopne
lcall
pop
fstpt
sbb
cmpsl
cbtw
aaa
push
enter
arpl
mov
mov
mov
mov
lods
int3
fisubl
je
ret
mov
loope
lock
push
mov
mov
jno
out
jo
loopne
mov
or
xlat
inc
dec
aas
and
fnstcw
mov
sbb
enter
sbb
clc
cmp
add
jno
pop
and
cmpb
push
aas
movsb
ss
pop
dec
push
out
shlb
pop
sbb
aaa
sub
mov
gs
in
add
sub
push
mov
push
push
cmc
sti
cltd
sahf
push
aad
mov
sub
lods
gs
pop
mov
clc
push
cmc
dec
cmp
sbb
dec
out
xor
inc
and
stos
or
xor
outsb
cmp
test
test
gs
mov
fs
fisubs
enter
dec
add
pop
in
stos
pop
xor
or
pop
jns
idivb
sti
lret
add
mov
aas
add
std
jb
jno
pop
mov
sbb
mov
mov
arpl
repnz
or
xor
leave
xchg
and
xchg
test
andl
test
in
xchg
mov
arpl
mov
sub
cli
cmp
push
xchg
fs
lock
jl
push
lret
clc
movb
cld
cmp
inc
and
arpl
xchg
sbb
push
cli
inc
hlt
and
iret
ds
cmp
std
bound
sub
dec
cmc
mov
sub
inc
push
cltd
les
mov
pop
lods
pop
sub
cmc
pop
mov
rorb
inc
mov
lods
rep
addr16
add
push
add
std
call
add
push
adc
push
mov
sub
repnz
lret
or
ret
ret
and
inc
sbb
mov
in
leave
neg
cltd
sar
filds
jmp
popf
xor
cmpsl
xchg
push
mov
jo
dec
aas
and
mov
daa
nop
test
sti
sub
sbb
roll
adc
ljmp
sbb
cmpsl
in
pop
pop
ret
jae
push
arpl
ljmp
in
xchg
call
and
stos
fcomi
call
inc
inc
add
popa
sub
aas
inc
dec
and
fists
jmp
mov
jns
xchg
jge
scas
ret
repnz
xchg
outsb
in
cmp
scas
sub
imul
stos
std
aam
repz
mov
cmp
inc
xchg
dec
test
sbb
mul
addb
es
pop
push
push
jb
xchg
sbb
imulb
and
and
mov
hlt
inc
test
in
popa
fwait
insb
les
or
out
lret
scas
hlt
and
xchg
push
push
or
pushf
xchg
shr
movsl
mov
setns
in
loopne
push
add
sub
fistl
lods
int3
clc
mov
out
pop
adc
add
ss
in
xor
xor
fsub
aad
xor
movsb
dec
out
ret
outsl
das
push
xchg
add
add
hlt
adc
in
adc
cmp
sbb
shll
sar
shll
sbb
mov
push
sub
movsl
xor
and
pusha
and
adcb
pop
sub
inc
mov
add
gs
mov
xchg
call
sub
in
scas
rcl
jb
jne
sahf
add
imull
leave
pop
fs
pop
adcl
sub
inc
lcall
mov
pop
jne
push
dec
pop
and
fsts
xchg
ficompl
add
cmp
cli
mov
jb
push
es
jne
inc
pop
sbb
xchg
movsb
xchg
jo
mulb
cmc
lea
sbb
xor
fbstp
lcall
mov
sbb
pop
insl
cmp
mov
push
int3
inc
lcall
bound
push
aaa
sti
pop
inc
shl
inc
sbb
pop
pusha
outsb
iret
into
jecxz
and
stc
sahf
sti
fistpl
sub
push
or
ds
in
mov
pop
xchg
lods
cmp
push
vpsubd
cmp
in
push
jne
and
inc
dec
sbb
mov
jecxz
lahf
push
dec
out
pop
fimuls
cmpsl
into
jecxz
add
shrl
mov
insb
repz
inc
or
cmpsl
xchg
jns
xchg
add
mov
movsb
pop
pop
mov
cld
leave
mov
adc
outsb
fildl
mov
push
into
ret
ret
or
aad
sub
cmp
lahf
clc
sti
sarl
dec
scas
xchg
shlb
addr16
pop
push
pop
cld
adc
bnd
cmpsl
hlt
leave
loop
fnsave
idiv
movsb
daa
arpl
fstps
mov
fsubs
test
sub
add
cs
gs
cli
add
cli
pusha
andl
mov
mov
stos
pusha
and
mov
or
pop
cmpsl
inc
cmp
cmp
lods
push
ret
jbe
js
rcrb
fisttpl
push
sub
jl
jno
cmp
std
sub
fmull
push
jns
int3
clc
xchg
sub
sti
je
pop
test
mov
adc
pop
adc
pop
xchg
ds
inc
dec
sti
mul
les
xlat
jecxz
push
out
pop
fsts
sub
pop
in
sarb
mov
cmp
dec
ret
loop
scas
cld
lret
es
test
incl
cmc
jns
aad
pop
push
xchg
add
lea
repnz
sbb
popf
sbb
pop
adc
out
test
mov
mov
les
inc
push
push
pop
testb
dec
popl
xchg
repnz
adc
xchg
fsubs
imul
push
mov
loop
inc
sub
or
and
add
cmp
outsl
into
test
in
sbb
subl
mov
mov
mov
testb
and
rolb
out
push
push
xor
jnp
sbb
cmpsb
inc
xor
xchg
cmp
mov
mov
shl
scas
cli
lret
shr
test
xor
dec
mov
add
jae
mul
aam
inc
mov
icebp
jmp
jg
adc
xchg
imul
ss
shrb
fidivl
arpl
add
push
test
scas
push
cmp
mov
lret
inc
fcmovne
push
pop
and
cmp
push
jge
out
inc
lret
push
xchg
call
xlat
inc
stos
or
fwait
in
or
stos
push
sbb
loop
gs
sbb
enter
jnp
inc
pop
pop
push
pop
jecxz
scas
push
aaa
ret
mov
mov
or
mov
ljmp
jmp
pop
and
in
sbb
inc
sti
or
add
imul
sub
rcrb
ljmp
addl
aaa
push
popa
daa
fiadds
push
out
out
mov
dec
pop
jecxz
push
ljmp
inc
xlat
lahf
cmpsb
add
cmpsl
adc
mov
call
es
xor
fldenv
or
pop
mov
subl
in
fwait
inc
jmp
jecxz
in
pop
push
inc
das
and
push
xchg
ret
fildl
add
cmp
repz
push
inc
jl
mov
arpl
outsl
jmp
arpl
mov
and
in
aam
mov
jp
cli
test
xchg
cwtl
push
mov
in
pop
rcrl
jno
jae
mov
inc
mov
mov
mov
ret
and
dec
idivb
jnp
push
pop
mov
pop
out
or
cli
or
js
xchg
pop
xor
test
xor
cli
sbb
sub
mov
sbb
pop
jae
imul
push
fsub
es
pop
fsubrl
add
ret
sub
or
adc
mov
dec
in
nop
dec
pop
jg
nop
das
add
divb
jae
sti
gs
jl
stos
out
sbb
adc
xchg
add
les
push
pushl
daa
jmp
loopnew
and
mov
stc
xchg
cli
clc
stos
push
jne
mov
inc
or
mov
xchg
pop
in
sbb
cld
mov
lret
pop
ficompl
std
mov
dec
pop
xchg
out
pop
les
cmpsl
pop
or
cmp
push
fnstenv
dec
lret
inc
sahf
jno
ljmp
inc
sbb
gs
lds
notl
dec
or
xchg
adc
dec
xchg
mov
mov
lock
cmp
lret
or
daa
sub
and
jmp
movsb
jl
fidivs
adc
imul
cmpsl
lret
shlb
sub
mov
jmp
dec
pop
sti
mov
mov
pop
cld
jle
pusha
sbb
or
or
adc
inc
adc
repz
push
inc
push
xor
test
pop
jae
aaa
out
les
xor
cmp
call
ljmp
xor
out
aas
insb
push
and
inc
jmp
test
pop
adc
jge
adc
xchg
mov
xchg
stos
addr16
hlt
repz
sti
xchg
out
int
pop
sub
int
sub
lods
jle
pop
dec
cmpsl
mov
add
stos
cmp
in
pop
adc
mov
lock
xchg
mov
mov
cmp
push
or
pushf
lret
or
xchg
imul
into
mov
pop
stos
or
adc
out
mov
lds
fs
lret
mov
jno
pushf
inc
jo
and
cmp
cmp
xchg
jae
orl
ds
push
sub
xchg
enter
sub
ss
dec
stos
xor
iret
pushf
sbb
mov
or
sbbb
aad
mov
insl
jmp
cmp
add
popf
xchg
push
sti
mov
and
enter
xchg
sbb
mov
mov
push
fdivrp
outsl
jo
pop
push
notb
imul
test
xchg
mov
sbb
cmp
outsb
pop
cmpsb
cmp
lock
stc
out
mov
adc
mov
test
inc
insb
add
cmp
push
imul
lret
inc
cmp
cmp
pop
cs
in
mov
testb
jns
sub
bnd
nop
in
inc
jno
add
rcrb
lods
mov
sbb
pop
out
mov
cmp
ret
in
xchg
addr16
out
cld
cmp
enter
dec
fldt
sub
clc
push
adc
or
cmp
das
cmpsl
xlat
push
jl
ss
insb
test
push
and
push
stos
mov
sub
pop
adc
cmp
push
mov
and
cmp
mov
xchg
rcrb
add
mov
sbb
hlt
rorb
adc
pop
aam
sbb
cld
call
pop
mov
les
xchg
sub
xchg
push
pop
sbb
mov
sub
fmulp
inc
xchg
aad
dec
or
hlt
mov
push
sbb
jmp
xchg
inc
add
es
repnz
xchg
dec
jae
mov
push
cli
nop
jg
and
int
xor
lock
and
pusha
testb
sti
mov
cltd
xchg
xchg
mov
and
daa
arpl
leave
xchg
xchg
leave
sbb
cmc
mov
daa
popf
dec
jl
cmp
add
dec
mov
push
xchg
jno
loope
in
mov
pop
push
jns
orl
mov
inc
or
mov
jl
sbb
call
cmp
test
test
into
lret
and
lret
shll
in
rcrb
iret
xchg
xchg
iret
sti
aad
enter
pop
mov
push
rclb
in
and
push
xor
add
fnstcw
xchg
mov
dec
mov
mov
inc
push
arpl
into
pop
repz
data16
lods
cmpsb
push
inc
mov
pop
or
sub
xlat
and
iret
or
loop
dec
and
mov
adc
or
cltd
mov
push
test
jecxz
mov
xchg
aaa
ljmp
leave
jmp
jmp
adc
add
cli
jmp
xchg
mov
mov
imul
lea
mov
mov
add
dec
test
outsl
inc
mov
xor
xor
jo
fisttps
aad
rclb
loope
movsb
push
cmp
repz
add
pop
push
stc
adc
xor
add
icebp
push
scas
and
add
inc
jnp
pop
push
or
inc
repnz
mov
push
fwait
or
lds
sbb
mov
insb
mov
std
sub
shrb
dec
ret
xchg
mov
dec
out
out
push
popf
dec
out
mov
cmpsb
pop
imul
push
ljmp
xchg
inc
jge
shl
xchg
enter
jae
xchg
jne
cld
mov
aad
outsl
mov
stos
mov
inc
xor
rorl
pop
loop
lea
jl
mov
fdivs
xchg
push
pop
out
dec
scas
push
mov
ss
xchg
hlt
mov
aas
imul
xor
in
clc
adc
push
es
xchg
xchg
mov
pop
addb
cmpsl
adc
dec
mov
movsl
fsubl
fs
add
mov
cmpsb
inc
push
pushf
imul
loope
test
shll
scas
cmpsl
or
mov
ret
or
fdivrs
in
dec
xchg
lcall
ljmp
mov
jo
std
pop
pushl
pop
add
sub
inc
cmp
aad
mov
inc
dec
mov
push
push
sub
lds
neg
ret
dec
xchg
xor
leave
fsub
stos
sar
inc
daa
mov
sbb
inc
pop
jb
or
cmp
icebp
lock
scas
xor
sub
idivb
xor
imul
imulb
xchg
and
add
sbb
cmp
ret
sub
pop
cld
mov
lahf
inc
push
cwtl
dec
cs
dec
out
dec
mov
sti
test
or
xchg
and
cmp
aam
das
lods
and
loopne
mov
leave
jb
lods
int3
in
xchg
rcr
add
shrb
fisubs
les
sub
bnd
add
ror
xlat
sbb
call
cmp
jmp
repz
xor
mov
cld
inc
mov
jp
cmp
add
xor
hlt
in
stos
or
rcl
fildll
daa
sub
cmc
cmpsl
test
dec
rolb
cwtl
rcr
adc
add
scas
jne
mov
sub
jbe
pop
sbb
out
pop
inc
xchg
loope
lods
inc
loope
sahf
or
mov
or
push
inc
ds
xchg
lcall
sbb
push
add
hlt
mov
inc
sbb
jmp
addr16
mov
inc
addr16
push
in
flds
ja
or
repz
jmp
aaa
adc
call
jg
mov
mov
repnz
lahf
jns
dec
ret
push
and
push
xor
cld
mov
sub
enter
in
jb
xchg
stos
pop
push
stos
cld
fld
lea
mov
mov
and
mov
jne
test
incl
imulb
in
les
mov
popf
inc
jge
imul
mov
and
pop
sbb
jo
mov
sbb
jg
out
daa
scas
aam
mov
pushf
mov
call
and
pop
outsb
adc
lods
into
clc
lcall
xchg
xchg
scas
push
xor
loop
sahf
gs
cli
mov
and
rep
mull
lock
inc
xor
xchg
adc
pop
xchg
lcall
xor
sub
mov
scas
cs
rcrl
and
push
into
fs
dec
andb
jmp
pop
adc
in
test
pop
aad
sub
roll
mov
cmp
lcall
add
pop
dec
xchg
or
jb
mov
xchg
or
insl
pop
sub
xchg
push
xchg
in
repz
ds
ret
popa
stos
stos
sub
pop
or
shl
pop
or
push
stos
jmp
and
aas
or
into
cmp
dec
pop
xchg
ret
mov
push
test
loopne
push
lea
pop
xchg
and
fwait
fwait
je
negl
pop
int3
xchg
std
push
mov
ljmp
lret
dec
jbe
xchg
fildll
xchg
inc
mov
in
xor
xor
in
add
xor
push
and
cmp
and
and
pop
jae
ljmp
stos
sahf
cld
push
xor
push
movsb
add
xchg
das
sbb
lcall
xchg
add
mov
daa
pop
ljmp
pop
enter
cmpsb
dec
rcrl
enter
rol
lods
xor
in
popa
sub
les
lret
mov
xchg
xchg
ror
jno
repz
xlat
ljmp
and
sub
inc
sub
sub
fsubrp
loopne
and
fld
cmp
and
and
pop
loopne
sti
mov
lret
fsubr
js
mov
xlat
mov
jp
adc
xor
fisttpl
mov
jp
dec
sbb
mov
dec
xchg
xchg
popf
lret
sbb
fbstp
fsubrs
xchg
ret
inc
xor
push
stc
inc
or
movsb
pop
test
and
mov
je
ret
xor
mov
push
jmp
fscale
xor
aas
sti
pop
xchg
fwait
push
inc
aas
dec
lods
clc
add
sbb
mov
jg
mov
cmc
mov
dec
adc
das
pop
repnz
push
aad
pop
jge
dec
sbb
cmp
mov
stos
inc
xchg
rcl
xchg
popa
and
outsb
sbb
or
inc
std
outsl
imul
mov
ret
jb
push
or
dec
in
jno
jmp
cli
testb
mov
mov
icebp
sbb
popfw
repnz
repnz
xor
cmp
cmc
jne
sbb
aaa
mov
popa
mov
mov
push
stos
outsb
int
or
mov
xchg
push
test
ret
or
mov
cmp
cmp
sub
push
pop
imul
dec
xor
xchg
in
addr16
adc
rcrl
leave
cmp
jb
stc
mov
lret
pop
test
sub
push
ja
adc
push
pop
jo
dec
aad
cmc
arpl
inc
addr16
add
pop
shrb
lret
push
inc
pop
cmp
mov
addb
jbe
mov
mov
into
jne
add
js
xor
std
into
mov
clc
das
mov
insb
nop
xor
cs
mov
xchg
insb
shl
or
or
ss
jmp
out
out
dec
leave
out
jb
mov
aaa
cs
fsub
adc
loopne
jmp
and
popa
enter
push
out
es
push
lock
out
fs
pop
mov
xor
adcl
push
and
sti
movsl
and
inc
sub
stc
pop
test
dec
ret
cmp
scas
push
pop
ljmp
stc
jl
mov
xor
ja
adc
mov
insb
jmp
jns
fwait
dec
idiv
in
xchg
push
mov
mov
or
cmpsl
lock
cltd
call
and
in
or
mov
movsl
push
dec
pop
stc
inc
push
and
adc
out
cltd
ret
sub
xchg
or
mov
mov
and
negl
pusha
xchg
clc
xor
movlps
push
adcl
inc
push
fdivs
rorb
pop
enter
icebp
cwtl
xor
push
dec
cmp
into
mov
in
mov
rcrl
into
jmp
mov
out
pop
sbbl
mov
lods
inc
fimuls
bound
mov
mov
mov
sahf
jecxz
mov
adc
jbe
lmsw
cs
jp
ret
or
ljmp
mov
push
push
loope
xor
cli
cmp
push
shlb
pop
lods
out
std
mov
add
mov
mov
mov
pop
out
mov
aam
dec
rcrl
sbb
notb
lahf
pop
pop
aad
dec
adc
sub
in
scas
hlt
into
aam
sub
fsts
fdivs
or
insl
mov
or
test
xchg
orb
jb
add
daa
mov
add
and
scas
and
mov
mov
sbb
repnz
mov
xchg
mov
insl
push
sub
pop
adc
mov
or
scas
inc
les
mov
bound
in
inc
imul
jne
adc
cmp
fbld
lods
adc
adc
dec
fwait
popf
mov
enter
add
and
enter
ljmp
lock
scas
movsb
xor
inc
ja
cli
fnstcw
loop
xchg
push
push
mov
add
loope
lcall
cltd
test
loopne
or
lods
push
mov
mov
js
icebp
sbbb
inc
dec
jmp
dec
fidivl
lea
inc
jmp
mov
pop
adc
inc
mov
sub
jmp
sbb
mov
jle
pop
daa
repnz
push
lods
mov
arpl
mov
scas
pushf
pop
mov
fwait
dec
sub
cmc
mov
fmul
test
imul
out
sahf
fistl
in
sub
xchg
stos
fnstsw
push
icebp
lcall
cmp
mov
gs
in
or
fimull
sub
pop
incl
hlt
xor
icebp
aas
mov
mov
and
lods
cmp
push
mov
fidivrl
fistps
xchg
adc
hlt
imul
xor
push
nop
push
repz
daa
xor
jecxz
inc
push
dec
sbb
or
das
jae
cmp
mov
xchg
les
das
repz
test
and
cmp
sub
and
jp
sub
mov
mov
or
in
xor
and
daa
es
push
mov
loope
pop
loopne
sahf
adc
jecxz
pop
pop
inc
nop
sub
adc
jae
filds
cli
pop
pop
jle
push
sbb
and
pop
inc
idiv
shlb
ss
ss
xchg
orb
pop
jae
outsl
lret
pop
repz
adc
sub
adc
fcmovbe
rcpps
daa
push
mov
jmp
jmp
stos
out
add
pop
flds
sbb
xor
stos
ret
outsb
adc
mov
mov
add
pop
pushf
jbe
mov
jb
adc
gs
inc
mov
add
lcall
imul
inc
xchg
xor
inc
negl
dec
xor
outsl
jns
sahf
pop
mov
mov
lea
xchg
dec
and
loope
icebp
jmp
pop
in
sahf
push
xor
pop
insb
jmp
sbb
adc
mov
aaa
call
adc
sub
push
shlb
xchg
out
add
icebp
jmp
mov
std
cmp
arpl
mov
push
cli
movsb
push
shl
nop
mov
inc
and
in
adc
pop
push
sub
popf
sub
or
cmp
test
cmc
outsl
call
sbb
push
pop
dec
xchg
iret
imul
xorl
loop
xlat
rcll
pop
mov
lods
or
mov
cmp
scas
cwtl
insl
push
pop
inc
pop
iret
cwtl
mov
xchg
lahf
mov
pop
jmp
ss
movl
and
das
movsb
incl
add
dec
sbb
aaa
in
icebp
pop
out
lret
push
inc
jg
cli
iret
ljmp
aam
outsb
push
sete
scas
loope
in
xchg
xlat
sti
adc
cmpsb
or
xor
xchg
cmp
push
dec
pop
sub
int
sub
cmp
sub
cmpsl
pop
adc
data16
dec
mul
lcall
add
xchg
push
loopne
aas
and
inc
push
into
mov
or
push
adc
mov
add
xor
pop
sub
ljmp
aas
into
sub
scas
mov
bound
cld
imul
ret
xchg
xchg
les
lret
arpl
call
xchg
cmp
les
add
fidivrs
jne
mov
add
clc
xchg
mov
scas
jb
xchg
in
dec
in
fcompl
ja
push
add
mov
into
ret
mov
hlt
ja
push
nop
mov
cmp
dec
pop
stc
cmp
lock
sub
jbe
push
inc
pop
mov
stos
addps
mov
pusha
jae
pop
mov
sahf
adc
wrmsr
dec
sbb
xor
mov
sbb
push
jecxz
mov
clc
movsb
popf
dec
cmp
lods
inc
jo
mulb
pop
push
or
and
ds
mov
mov
jl
push
pop
sarl
aad
movsl
cmp
fistl
xor
push
adc
cmp
insb
test
push
dec
arpl
jecxz
lock
jmp
subb
sbb
fimull
push
pop
pop
je
xor
test
cmpsl
shll
repz
fldt
ds
inc
lahf
pop
sbb
sbb
cmp
rclb
add
scas
in
sub
mov
xchg
clc
daa
into
test
pop
inc
lods
push
loope
stos
leave
mov
xor
fldlg2
jnp
imul
mov
test
mov
jb
adc
and
int
xchg
das
cmpsl
call
lods
fimuls
mov
cmp
imul
sub
dec
push
sbb
mov
enter
int
orb
cltd
test
ljmp
sub
or
mov
test
cmp
push
sbb
shrl
out
mov
xchg
pushf
mov
pop
fadds
aas
jecxz
inc
ss
dec
arpl
push
sub
mov
movsb
fildl
outsl
lods
and
xor
cmp
push
push
cmp
ret
scas
xchg
pop
jb
ds
or
and
sub
fdiv
bound
insb
jecxz
fwait
or
popa
call
push
and
push
outsb
sub
cmpsl
ja
aas
and
pop
mov
loope
outsb
jmp
shll
inc
mov
cmpsl
cmp
dec
pop
mov
cmp
add
mov
xchg
imul
push
mov
fwait
out
daa
lds
pop
xchg
movsl
test
pop
ret
cli
stos
mov
aas
int3
lock
in
orb
mov
in
add
xorb
fwait
sti
jae
push
scas
or
xchg
es
pop
xchg
dec
in
jmp
push
mov
add
pop
movsb
push
jnp
dec
test
and
or
enter
add
ds
cmp
scas
cmpsl
adc
dec
aam
sub
call
sbb
push
mov
mov
int
sbb
pop
push
in
out
xor
loope
movsl
outsb
xchg
movsb
loopne
loope
add
and
ds
int
inc
xchg
test
shl
mov
add
imul
or
jae
or
incl
mov
pop
clc
cmp
pop
jo
mov
and
mov
pushf
aaa
lret
pop
mov
stc
cmp
push
push
imull
daa
lcall
jle
out
jl
cmp
call
xchg
sbbl
fwait
jp
jmp
cmc
sub
mov
mov
sarl
pop
pop
xchg
dec
jmp
cmp
stos
jns
xor
add
cmp
movsl
das
fstpt
pop
xchg
es
call
xlat
adc
les
loop
sub
mov
and
fdiv
std
cmp
lods
sub
into
stc
inc
lds
push
sahf
inc
stos
pminsw
push
push
cmpsl
and
push
sbb
push
jmp
sti
push
cmp
test
mov
insl
pop
pop
shlb
sbb
outsl
jg
dec
divb
xor
arpl
ror
mov
insb
adc
das
xor
mov
xchg
popa
std
leave
ljmp
and
cmc
sub
in
stc
aaa
push
xchg
test
ret
ret
movsl
push
and
push
test
add
cmp
imul
cli
and
jmp
lea
hlt
jecxz
popa
mov
dec
repnz
push
or
cmc
xchg
sahf
jl
lods
pusha
enter
mul
in
int3
push
pop
mov
imul
imul
inc
sti
data16
xchg
jp
sub
push
xchg
les
aas
push
sub
into
iret
arpl
cmp
negl
mov
adc
jle
int
pop
es
push
lret
lea
push
into
inc
pusha
sub
inc
enter
adc
cmp
cmpsl
sahf
mov
cmpsl
xor
pop
push
and
ljmp
push
sub
adc
xchg
mov
and
pop
inc
rol
imull
leave
xor
cld
lods
add
inc
das
jbe
or
add
jno
push
and
jecxz
add
sub
repnz
fmuls
dec
mov
aas
repz
push
or
pop
leave
pushf
pop
test
js
ljmp
in
in
stos
mov
jmp
inc
mov
daa
aam
push
push
sub
les
pusha
xchg
ret
das
inc
sti
mov
shl
sti
sbb
jbe
and
and
ret
ss
sbb
jl
pop
int3
lcall
in
out
pop
cmp
add
outsl
pop
sbb
xchg
adc
sub
jg
and
out
notl
data16
pop
das
inc
pusha
add
fwait
mov
lret
mov
mov
je
lods
push
xchg
xor
enter
dec
sub
pop
mov
dec
test
in
sbb
shlb
hlt
cli
ja
mov
jmp
and
inc
adcl
xchg
fwait
out
jnp
inc
decl
idiv
in
sub
mov
and
mov
pop
fdivrl
outsl
shlb
jg
sbb
bound
mov
fidivl
cli
mov
rcl
ljmp
fs
pop
divl
cmp
lahf
mov
aas
push
dec
jmp
imul
jg
mov
inc
ficompl
cli
push
inc
xor
rol
ljmp
fs
pop
divl
xor
xchg
scas
inc
daa
push
mov
jl
inc
outsl
lods
imul
add
shrb
ljmp
fs
pop
jecxz
push
ljmp
inc
sub
call
add
or
pop
repnz
les
push
ljmp
fs
push
xor
jns
inc
notl
call
sub
or
stos
in
sbb
mov
mov
mov
add
and
in
sbb
mov
mov
inc
xlat
add
pop
ljmp
cmpsl
mov
andl
mov
ljmp
inc
pop
push
addr16
jg
push
sbb
lods
push
fisubrl
cli
cmpsl
inc
ret
add
rcr
ljmp
fs
ljmp
inc
add
jmp
imul
pop
push
daa
call
mov
iret
or
out
push
and
in
sbb
mov
add
arpl
gs
gs
inc
fwait
sbb
inc
sub
mov
xor
and
push
js
dec
sbb
mov
ret
ficompl
add
rolb
or
gs
pop
pop
mov
jecxz
imul
inc
adc
pop
or
mov
and
in
sbb
mov
xchg
cli
sti
inc
xchg
rcrb
or
mov
jmp
ljmp
les
push
mov
adc
and
imul
push
sub
fwait
xchg
jnp
inc
mov
or
stos
push
sbb
sbb
shlb
cli
jae
movsl
push
add
test
and
inc
push
fucomi
xchg
fwait
bnd
inc
orl
sti
in
sub
mov
and
mov
sbb
sti
imul
sbb
ds
dec
mov
push
loopne
jb
es
inc
lahf
push
jmp
out
cmpb
xchg
or
mov
add
push
adc
sbb
clc
jge
gs
sbb
inc
xor
push
shlb
ljmp
fs
out
push
ljmp
inc
das
push
mov
aas
fwait
dec
jl
inc
arpl
imul
pusha
loop
cli
dec
inc
pop
add
shrb
ljmp
fs
ret
mov
ljmp
inc
iret
push
fwait
call
cmp
or
mov
push
leave
and
dec
jb
pop
adc
test
push
lea
sub
pushf
sbb
mov
xchg
cli
sti
inc
mov
rcrb
or
stos
fs
ljmp
or
in
lods
push
and
xchg
sbb
mov
lahf
cli
jecxz
sti
add
rclb
cmp
fwait
adc
mov
loopne
inc
push
cmc
es
jns
push
pop
lds
jg
test
fisubl
cli
scas
inc
aaa
add
rol
ljmp
fs
pop
and
and
call
pop
inc
imul
and
adc
or
sub
and
in
sbb
mov
sti
fiaddl
add
rcrb
adc
mov
in
inc
mov
ljmp
or
in
lods
push
and
cwtl
sbb
mov
lahf
cli
out
incl
rorb
xor
xchg
fs
ljmp
inc
imul
push
add
sbb
lods
push
fisubrl
cli
mov
rcr
ljmp
fs
pop
pushl
cmp
aaa
push
push
jmp
imul
imul
call
stos
inc
aaa
or
cmp
and
in
sbb
mov
lret
ficoml
add
shlb
in
inc
gs
pop
push
mov
mov
add
jg
movsb
push
adc
test
and
cli
xchg
inc
jmp
out
ljmp
add
cmpsl
mov
ljmp
inc
imul
push
add
sbb
test
fisubl
cli
scas
inc
cmp
rcl
ljmp
fs
pop
repz
ljmp
inc
aaa
push
dec
jmp
outsl
inc
ja
jae
and
jnp
inc
aaa
or
iret
push
jns
frstpm(287
push
sbb
mov
ret
ficompl
add
rolb
xcrypt-ctr
cmpsl
pop
cmc
loop
gs
sbb
or
lss
es
lret
push
fucomip
jmp
bnd
inc
xchg
iret
xchg
xor
xchg
push
or
scas
in
sbb
push
addr16
add
or
and
in
sbb
mov
mov
into
cli
fwait
inc
jecxz
jmp
imul
jmp
cmp
lahf
mov
ljmp
inc
pop
push
imul
cmpsl
jle
bound
mov
push
fisubrl
cli
cmpsl
inc
aas
add
ror
ljmp
fs
pop
divl
xor
xchg
stos
inc
and
call
pop
inc
arpl
imul
daa
imul
rclb
ljmp
fs
push
xor
inc
daa
out
inc
lret
push
xchg
call
cmp
or
inc
repnz
imul
ljmp
test
das
mov
jmp
lret
ljmp
fwait
mov
inc
lahf
or
cmpsl
in
adc
push
loope
inc
ljmp
fdiv
or
jb
jmp
adc
inc
mov
fwait
sarb
inc
jecxz
jmp
in
push
imul
in
sbb
dec
sti
add
add
addr16
mov
pop
fisubrl
cli
cmpsl
inc
aas
add
ror
ljmp
fs
pop
jmp
pop
ljmp
inc
daa
push
mov
jl
inc
push
or
push
repnz
lds
rorb
ljmp
mov
aaa
mov
ljmp
inc
out
call
filds
or
mov
push
in
and
lret
fisttpl
aad
jnp
lods
push
pop
mov
jmp
xor
inc
fwait
push
jecxz
jmp
bnd
inc
decl
lret
sti
in
sub
mov
and
mov
sbb
sti
imul
jae
jb
jmp
pop
cs
cmpsl
push
aas
call
fwait
inc
out
jecxz
in
push
imul
in
sbb
inc
sti
cmova
pop
shrb
addr16
jg
es
inc
inc
push
and
stos
fwait
xor
inc
or
fists
and
in
sbb
mov
aas
inc
dec
add
pop
cmpsl
jb
into
ja
ret
pop
fisubl
cli
scas
inc
cmp
ror
ljmp
fs
pop
jmp
and
xchg
mov
jmp
sbb
or
repz
jle
dec
rcrb
ljmp
fs
push
aas
mov
ljmp
inc
lret
push
xchg
call
das
inc
mov
in
inc
push
cmc
and
lret
fildl
ficoml
insl
test
and
in
sbb
mov
xchg
loop
jmp
repz
rolb
sub
xchg
add
mov
push
in
daa
dec
imul
inc
jae
adc
inc
stos
push
aaa
call
fwait
inc
out
jecxz
in
push
imul
in
sbb
pop
sti
adc
add
imul
inc
push
push
xor
mov
inc
xlat
or
out
push
and
in
sbb
mov
add
adc
or
fwait
adc
inc
and
stos
sbb
mov
push
popf
and
in
sbb
mov
jecxz
idiv
incl
add
rcrb
add
mov
mov
repnz
inc
arpl
lea
aam
gs
inc
test
xor
test
clc
sub
pop
or
push
sub
inc
cmc
jae
ljmp
test
dec
and
pop
es
dec
cmp
sbb
dec
pop
mov
cwtl
pop
pop
lea
add
ja
clc
int
pop
subb
fincstp
xor
xchg
mov
lock
and
clc
add
xchg
pushf
pop
mov
sbb
adc
xchg
cmp
aas
xchg
push
cmpsl
xchg
popa
in
in
iret
adc
popa
cli
xchg
pop
arpl
sbb
mov
mov
fwait
sub
add
cs
push
pushf
dec
or
bound
dec
outsl
cli
arpl
jb
sub
pop
arpl
add
mov
gs
in
lahf
in
imul
xor
dec
mov
nop
mov
or
pop
inc
sub
loopne
cmp
pop
test
push
jno
jae
xchg
inc
and
cmp
and
mov
es
or
xchg
cmp
pop
movsb
and
mov
popa
push
pop
scas
shr
inc
fcmovb
jmp
xchg
stc
adc
leave
shrb
mov
ds
inc
push
xor
pop
jl
in
xchg
es
ljmp
fimuls
int3
and
inc
fnclex
fnstenv
push
imul
push
pop
or
jl
loopne
push
and
ret
jmp
fdivr
or
sub
pop
and
inc
cs
sbb
jp
in
cmpl
or
push
ficoml
pop
cmp
repnz
mov
lods
stos
in
leave
add
in
das
push
cmpsl
aas
icebp
out
push
pop
aad
mov
andb
rorl
or
cmpsl
sti
mov
subb
xchg
out
sti
adc
pop
cmc
lcall
and
pushf
push
mulb
xor
fwait
std
incl
fwait
mov
jb
data16
mov
add
sti
out
sbb
pop
addr16
xchg
mov
cmpsb
lea
mov
cmp
imul
jnp
sbb
push
subl
div
outsb
sti
lds
push
dec
int
and
mov
jae
out
pop
fs
mov
add
push
mov
sbb
fdivrp
dec
push
notb
data16
mov
das
cwtl
mov
inc
fs
addl
mov
xchg
lds
push
add
push
jl
push
cld
fcoms
fdivrl
arpl
and
or
push
loope
adc
dec
das
add
addb
addr16
insl
mov
loop
ret
xchg
xchg
jecxz
push
test
lds
pop
stc
add
leave
pushf
ret
jae
bound
rcll
cmc
daa
jecxz
push
movsb
inc
pop
adc
sub
push
daa
outsb
fldl
pop
cmp
ficoml
test
and
pop
dec
adc
xor
xlat
in
mov
inc
test
fimuls
addr16
push
push
cltd
out
in
rolb
in
loope
pop
les
cmc
jb
lds
mov
jmp
fisttps
push
or
lock
inc
lahf
inc
mov
mov
in
ljmp
fwait
repz
push
xor
push
pop
add
and
and
cld
fmuls
push
cmc
arpl
mov
imul
incl
mov
aad
jmp
hlt
leave
xchg
les
sbb
mov
push
pop
cmpsl
xchg
xchg
repz
fldenv
jmp
jecxz
add
pop
push
push
fisubs
into
or
lds
loope
sar
push
sub
fadd
sub
jl
lahf
enter
orb
cmp
imulb
dec
imul
jmp
cld
fidivl
scas
xor
mov
jnp
push
ret
or
testb
mov
or
movsb
rcl
mov
and
and
scas
std
shrl
inc
mov
test
xchg
or
testl
mov
std
cmp
dec
scas
dec
movsl
sbb
int3
pop
cmpsb
jnp
outsb
mov
cmp
pop
and
mov
cwtl
pop
sbb
icebp
mov
repnz
jb
lods
adc
sub
nop
mov
cmp
sbb
mov
inc
std
repz
fsubrl
rcr
ljmp
pop
cli
movsb
fnstenv
ljmp
sbb
mov
sub
adc
and
in
in
test
sbb
add
xor
iret
clc
sahf
pop
adc
add
arpl
pop
ja
clc
pop
mov
imul
add
mov
and
std
daa
sti
sub
mov
pushf
outsb
cmp
push
mov
add
cmp
in
arpl
gs
add
addr16
pop
std
je
jb
mov
loope
sbb
pop
dec
shll
adc
insl
sbb
push
xchg
add
xchg
pop
push
sbb
aad
push
fcoml
jb
lds
cmpsb
add
mov
movsb
push
negl
gs
bound
mov
dec
xchg
jecxz
les
or
push
sbb
nop
cld
hlt
pop
aam
xchg
popf
outsb
es
push
sti
andb
outsb
cmpsl
bound
popf
jl
hlt
inc
xchg
mov
dec
lahf
and
add
std
les
inc
add
sahf
and
push
and
push
add
push
jo
icebp
inc
iret
push
xchg
call
jl
xchg
nop
repnz
xlat
sbb
mov
xchg
jge
adc
add
cmpsl
push
and
jae
loope
stos
and
loope
pop
int3
rcrl
popf
and
adc
adcb
mov
out
popf
jae
mov
imul
and
out
inc
jmp
adc
xchg
out
mov
sbb
int
into
push
dec
dec
push
push
mov
daa
aaa
pop
push
imul
pminsw
xchg
cld
bound
cmpsb
inc
and
int3
push
dec
dec
cwtl
movsl
pusha
or
fwait
insl
sti
fildll
fimull
daa
cmp
xchg
and
sahf
xchg
ret
push
xchg
xchg
imul
es
inc
xor
dec
test
xor
push
adc
popf
rcl
int
shlb
sti
scas
lds
stos
adc
and
dec
mov
xchg
stos
push
pop
ljmp
mov
sbbb
xchg
outsb
dec
xor
cmpsb
jle
mov
hlt
nop
mov
bound
and
in
sbb
outsl
mov
cmp
dec
lods
cli
loop
cmpsb
les
nop
add
xchg
insb
mov
test
inc
iret
sbb
cmp
fistpl
repz
mov
insl
pop
push
push
cmpsb
lock
and
or
ret
lea
aas
imul
adcl
call
testl
stos
push
pop
sbb
ds
inc
lea
push
fld1
cli
pop
stos
ljmp
inc
ret
les
ds
push
or
dec
roll
add
and
push
push
test
in
or
sub
sub
dec
and
jecxz
jns
rorl
sbb
xchg
movsb
aam
stc
push
sbb
cs
xchg
inc
loopne
lcall
push
sahf
bound
clc
cmpsb
mov
add
pop
dec
sti
xchg
ret
out
aam
arpl
xchg
sub
xchg
and
daa
xorb
ret
jnp
scas
push
push
sarb
pop
mov
pop
repz
push
sarb
das
sti
cs
pusha
dec
outsl
adc
lcall
scas
js
push
dec
inc
add
push
inc
mov
sub
dec
sub
pop
xchg
aad
dec
xchg
gs
les
or
rorb
sbb
in
mov
out
aad
arpl
data16
nop
pusha
enter
cld
test
sti
dec
inc
outsl
push
fwait
jne
mov
jbe
adc
les
push
negb
sbb
stc
hlt
cmp
mov
arpl
pop
into
filds
add
xchg
mov
mov
pop
sti
les
xchg
add
xchg
adc
repz
jge
cmc
cmc
iret
lock
mov
psubsb
sbb
xchg
sbb
das
dec
push
ja
ss
loopne
inc
pop
mov
hlt
gs
and
mov
test
push
adcb
leave
mov
sti
adc
repnz
fucomp
stc
pop
mov
xchg
lret
xor
lds
cld
scas
out
pop
les
ss
push
in
les
mov
cld
mov
popf
repnz
jne
jae
jbe
scas
adc
aam
out
outsb
mov
test
loope
aad
sub
test
aaa
pcmpgtb
push
enter
inc
mulb
add
xchg
and
sub
int3
pop
lea
add
pop
movsb
pop
pop
push
loopne
aam
cmp
jne
dec
arpl
movsb
stc
jle
outsb
sub
and
xor
iret
xor
lret
sbb
sti
lods
mov
int
cltd
jmp
lahf
pop
sub
imul
dec
xchg
aas
adc
repz
movsl
or
aad
add
sbb
repz
call
in
pop
ret
or
jb
mov
ljmp
das
sub
cwtl
stos
cmp
stos
pop
mov
loope
or
arpl
es
xor
xchg
rcrl
add
lock
cwtl
pop
add
clc
pop
xor
and
divl
push
cld
fmul
cmpsb
or
imul
hlt
scas
in
cmpsl
out
fmul
psrld
arpl
jo
adc
pushf
sub
mull
outsl
test
pop
sbb
jge
lock
hlt
sub
ss
imul
push
xorl
xchg
ljmp
pop
adc
lret
pop
cmp
inc
into
adc
loopne
insb
adc
pop
inc
adc
pop
xchg
push
mov
cmp
pop
test
cmpsl
jb
lret
lock
mov
and
imul
jp
iret
mov
inc
sub
push
fs
pop
movl
push
jb
jb
adc
push
sbb
sub
sub
push
pop
negl
push
ss
sub
loop,pt
pop
mov
and
lahf
hlt
xor
mull
cld
fdecstp
sub
and
bound
test
pop
mov
not
mov
xchg
push
test
shlb
aam
aad
gs
dec
sbb
imul
pop
push
mov
pusha
pop
adc
add
add
les
jne
icebp
test
je
in
adc
push
stos
mov
pop
and
into
mov
jns
cmpsb
test
and
std
scas
or
push
cli
dec
daa
lret
cmp
dec
popf
xchg
mov
sbb
inc
stos
push
call
cli
outsl
popf
dec
xor
push
roll
sahf
xchg
mov
test
mov
pusha
nop
dec
and
cld
movaps
lret
lods
rcr
dec
pop
fdiv
inc
repz
dec
mov
inc
arpl
movsl
clc
les
add
xorl
mov
loopnew
and
cmp
pop
lods
iret
inc
jnp
pop
mov
xchg
pushf
sub
push
mov
mov
call
and
fwait
ss
mov
sbbl
aad
push
call
push
ja
inc
add
notl
test
cmc
lock
hlt
andb
inc
iret
aam
push
adc
mov
and
dec
divl
xchg
outsb
imul
cmp
loop
ds
inc
jae
ret
cltd
xchg
cltd
fst
pop
call
lea
fisubl
xor
cld
bsr
int3
ljmp
lods
mov
shll
hlt
or
dec
push
es
jae
mov
pop
ja
xor
push
pop
daa
fs
clc
mov
xchg
mov
test
leave
push
add
jb
jmp
pop
out
fisubrl
std
jb
insl
mov
sbb
mov
repz
outsb
stos
mov
sbb
add
adc
xchg
cld
fcmovnu
rcrb
ror
push
in
inc
fisubrl
sbb
outsl
cmp
fistl
pop
dec
scas
repz
xchg
or
or
and
cmp
jb
dec
lret
or
xchg
cld
lret
fisubs
or
push
pop
mov
repnz
xchg
and
or
pushf
sub
push
pushf
push
idivl
adc
cmp
pop
arpl
xor
in
cmp
push
and
sub
sub
dec
or
adc
ja
push
push
popf
push
loop
loope
enter
xor
jne
arpl
inc
cmc
mov
jp
pop
inc
outsl
out
scas
scas
cld
and
bound
aaa
cmc
xor
arpl
dec
pop
xchg
mov
xchg
outsl
push
mull
inc
adc
or
jb
lcall
faddl
pop
push
andb
leave
shrb
scas
ret
aam
in
notl
pop
lock
pop
outsl
leave
arpl
and
inc
push
jae
addr16
in
inc
pop
xor
loop
mov
in
mov
hlt
sbbb
subl
mov
aaa
test
sbb
movb
and
jg
mov
imul
div
xlat
cwtl
ss
insb
dec
imul
xchg
push
cmc
int
int
pop
stos
daa
arpl
dec
mov
outsb
xchg
jns
mov
int3
hlt
mov
pop
out
icebp
pop
lcall
stos
sub
pop
mov
or
hlt
xchg
mov
adc
mov
xchg
push
lcall
push
push
in
data16
cmp
data16
mov
xchg
rclb
mov
filds
or
xchg
in
add
insb
mov
jmp
and
xchg
pop
lcall
rcrl
add
push
lock
mov
lea
add
mov
xchg
pop
xchg
repnz
movsl
push
rclb
push
mov
push
mov
push
push
lds
jge
mov
push
outsl
or
jae
insb
mov
sub
cld
push
mov
sub
sub
push
xlat
pop
daa
adc
mov
pop
cmpsl
and
loopne
xor
cld
mov
inc
out
fistl
pop
adc
xchg
push
xchg
pop
push
rorl
inc
mov
in
or
sub
mov
popf
xchg
push
adc
into
sub
adc
xor
sub
jecxz
push
cmc
mov
xchg
cwtl
clc
xchg
adc
xor
jbe
int
pop
fmull
fcom
fwait
mov
cmp
mov
xchg
ja
arpl
adc
mov
cmpsb
pop
arpl
je
mov
add
arpl
jno
pop
xchg
popf
stos
inc
xor
dec
loope
xchg
add
arpl
and
lods
inc
xchg
pop
xor
clc
push
jb
test
xchg
cld
xchg
int3
or
lret
jg
ss
mov
adc
and
pop
cmp
mov
insb
lahf
mov
fisttps
sbb
xchg
cltd
push
xchg
xlat
das
cltd
push
sbb
iret
add
scas
inc
adc
jb
or
xchg
mov
lret
es
adc
call
pop
jmp
jns
xor
les
gs
ret
es
xchg
in
aad
xlat
test
arpl
mov
pop
mov
xchg
push
clc
gs
push
test
int
mov
xchg
sti
out
jae
stc
adc
mov
cltd
loopne
mov
aas
stos
mov
mov
int3
scas
add
addr16
push
jae
mov
xchg
push
out
jecxz
aam
mov
xchg
push
pop
push
or
mov
mov
or
int
nop
xor
sti
cmpsb
rorl
push
and
andl
outsl
mov
xchg
hlt
jno
mov
push
jge
or
cmp
mov
movsl
xchg
or
cmp
xor
add
icebp
bound
les
and
call
add
aas
fimull
or
sub
lcall
jo
repz
test
xchg
inc
lcall
icebp
lcall
rclb
movsb
stos
mov
andb
push
pop
movsl
mov
mov
scas
pop
cld
jmp
pusha
jae
sub
lds
adc
xor
push
inc
xchg
cmpl
push
shrb
mov
iret
mov
sub
mov
test
jecxz
shrl
xchg
or
pop
std
out
push
jl
push
dec
pop
out
xchg
and
mov
negb
xor
psrlw
gs
bound
sub
adc
inc
cmc
fsub
enter
and
outsl
dec
xor
push
push
sub
loopne
hlt
bound
mov
rep
jmp
mov
dec
mov
cwtl
mov
es
cld
outsl
adc
xchg
push
dec
inc
gs
add
shlb
out
dec
inc
jae
adc
hlt
aad
lret
xchg
lcall
xchg
sbb
xlat
mov
icebp
mov
aaa
sbb
outsl
sti
in
arpl
cmpl
inc
aaa
fs
push
mov
cld
insb
test
mov
dec
mov
add
add
addr16
add
imul
insl
std
testl
sbb
arpl
outsb
jnp
lret
jno
outsb
pop
jmp
pop
adc
es
dec
sub
subl
rcl
mov
xor
fiadds
pop
ret
stc
cmp
nop
xchg
push
mov
sub
in
ret
mov
sbb
mov
and
pop
ja
icebp
ljmp
aaa
pop
mov
nop
push
lcall
ss
xor
inc
and
push
jns
dec
push
imul
pop
mov
pop
mov
pop
adc
iret
dec
adc
xchg
jb
xlat
sub
cmpsl
sbb
add
push
xor
push
push
mov
and
dec
sub
mov
push
test
dec
imulb
into
xchg
mov
and
mov
jns
cmp
push
gs
leave
hlt
dec
xchg
icebp
and
pop
mov
sub
pusha
test
sbb
lock
xchg
pop
jbe
outsb
mov
outsl
daa
cmp
and
add
clc
enter
repz
jno
and
add
jb
pop
sub
xor
xor
in
cmp
pop
xchg
push
fstl
and
rolb
xor
repz
ficoms
lea
stos
fmuls
cwtl
scas
mov
jb
mov
xor
dec
xchg
ja
push
repz
out
push
mov
aas
lea
loop
pop
add
pop
push
lcall
and
inc
imul
mov
cld
mov
mov
pop
nop
inc
movsl
jb
call
xchg
adc
push
inc
je
dec
mov
push
mov
mov
pop
fidivl
mov
shlb
dec
xchg
xchg
xchg
sbbl
jmp
fwait
push
xchg
xor
movsl
fdiv
arpl
mov
push
push
data16
sub
mov
stos
adc
in
cmovne
rolb
mov
rolb
jb
push
daa
sbb
pop
sti
sar
hlt
inc
outsl
cmp
push
loope
jb
stos
test
cld
test
xchg
repz
cmp
or
push
iret
loopne
outsb
out
fsubr
cmp
mov
pop
movsl
fldt
rorl
pushf
repz
popa
xchg
repnz
cltd
and
pop
push
std
xor
mov
xchg
xor
in
lea
jmp
push
xor
in
sub
push
fnstsw
lods
pusha
or
xor
pop
inc
into
dec
pushf
sbb
clc
fs
nop
pop
aaa
mov
add
push
pop
lods
cmp
inc
std
pushf
inc
repnz
outsl
adc
test
cli
arpl
sub
push
out
pop
lret
sbb
pop
out
repz
push
clc
arpl
cltd
push
or
push
dec
cld
scas
push
stos
push
xor
ljmp
mov
shrb
jb
movsl
outsb
inc
clc
push
lds
je
xchg
mov
loope
push
jo
push
xchg
adc
or
mov
test
insb
outsl
insb
lods
add
int3
mov
sub
stos
or
pop
push
pop
jge
call
jns
inc
add
and
lds
cmpsb
jne
xor
cmp
push
inc
sub
xchg
fldl
sub
or
jl
lret
adc
jnp
pushf
rorb
nop
xchg
insb
jecxz
pop
insl
fnsave
fwait
ljmp
mov
xor
dec
icebp
mov
mov
out
imul
mov
and
push
or
insl
sbb
roll
mov
cli
cli
ljmp
dec
mov
idivl
into
ja
dec
mov
cmpsb
in
add
dec
js
push
fs
cli
pop
adc
dec
and
ret
add
and
xchg
adc
bound
ret
jo
insb
out
data16
and
xor
xchg
mul
dec
xchg
fcmovnb
loopne
jmp
flds
mov
jp
outsl
cmp
pusha
and
xchg
pop
dec
mov
adcl
jle
add
loope
gs
aad
pop
sti
cmp
je
jns
lret
out
and
push
xchg
lock
outsl
lds
mull
mov
insb
dec
jp
outsb
jl
pop
adc
pop
or
push
or
insl
jle
pushf
mov
pop
cmp
mov
or
or
enter
sbb
jno
push
mov
and
mov
test
or
xchg
pop
or
inc
xor
or
out
mov
mov
fisubrs
add
xchg
popa
lret
xchg
stc
inc
outsl
lret
add
dec
jnp
push
js
xchg
cli
je
or
mov
cs
inc
fsubl
pop
jo
out
pusha
js
insl
fldenv
and
imull
mov
adc
pop
jne
push
lea
adc
mov
movsb
push
cmpsl
test
dec
jb,pt
dec
stc
leave
sarl
jle
pop
dec
js
nop
inc
shrl
int
cwtl
jne
lcall
pop
mov
pop
sub
lods
xchg
mov
dec
mov
jle
scas
mov
fcomps
arpl
rclb
outsl
dec
fiaddl
mov
pop
lcall
push
fs
into
cmp
imul
ret
xchg
std
add
loop
addr16
sbb
adc
jns
sub
cli
jl
jge
push
mov
xchg
pop
popa
ss
mov
pop
pushf
aaa
les
lea
scas
jle
sub
mov
inc
sbb
lahf
fnsave
xchg
out
push
rcrb
stos
dec
pop
imul
mov
jno
popa
movsl
hlt
int3
frstor
cmp
xor
jne
inc
pop
insb
or
lods
jnp
lahf
inc
out
pop
stos
jb
fsubrs
inc
loopne
dec
sub
lds
cmp
pop
mov
fstpt
js
fs
push
imul
xlat
aaa
imul
adc
sbb
in
jae
push
cmp
ret
and
aad
ret
fwait
xchg
push
imul
jo
sahf
mov
rclb
jge
movsb
sbb
push
push
movzwl
adc
cmpsl
mov
xor
mov
xchg
and
in
push
push
push
pop
xchg
cmp
int3
push
dec
cmovns
and
mov
fstpl
add
pop
je
and
lret
cmp
ja
mov
int
cwtl
addr16
pop
mov
filds
lcall
daa
mov
rorl
in
rorl
ja
lock
mov
jnp
and
sub
addl
pusha
dec
out
shrl
test
sub
inc
shl
lcall
pop
in
outsb
lock
or
sti
repz
xchg
and
mov
jl
sub
dec
xchg
incb
fcompl
cmp
add
sub
dec
mov
aaa
lods
and
xchg
jl
push
and
lcall
jp
jb
sbb
dec
bound
sub
pop
out
adc
inc
cli
fs
xchg
int3
jns
mov
sub
nop
movsb
add
mov
xchg
sbb
lahf
jecxz
mov
ret
or
pushf
enter
repz
sbb
sahf
mov
xor
jg
or
in
sbb
inc
pop
or
inc
cltd
hlt
pop
insl
sbb
outsl
push
ja
popa
dec
adc
add
les
loop
xchg
adc
rcr
mov
pop
push
or
gs
pop
lret
gs
cmp
dec
and
lods
add
mov
jp
sub
int3
rorb
xchg
es
xchg
and
cld
mov
pop
outsl
pop
repz
jp
cmc
call
dec
sar
es
push
cltd
and
or
ficoml
movsb
sub
lret
xor
test
push
arpl
aam
pop
jmp
mov
div
pop
mov
imul
icebp
or
cld
jl
stos
fidivl
ss
andb
pop
xlat
or
stos
lret
jo
aam
in
mov
pop
ss
jo
lods
lods
adc
sahf
in
jnp
mov
adc
inc
in
push
pop
je
push
or
bound
daa
cmp
aaa
insl
test
ficoml
lret
in
je
pop
je
pop
push
fs
mov
rorb
xor
and
add
mov
aad
sbb
adc
divl
popa
scas
paddq
in
jno
sub
aam
outsl
lods
aam
dec
mov
jns
aad
fwait
test
sub
dec
inc
stc
insl
test
enter
call
jge
xchg
out
jge
add
add
xor
or
jl
pop
rorl
and
jge
jae
jbe
call
and
nop
mov
pushf
xor
pop
inc
cmp
pop
sbb
into
adc
cmp
jne
shrb
jl
aas
mov
jo
cmp
fs
pusha
out
ret
cmp
push
pop
addr16
pop
pop
cmpsl
xchg
xor
ficompl
sub
jmp
mov
sti
lds
cwtl
dec
pop
mov
push
arpl
adc
mov
sub
scas
ud0
jo
in
leave
jecxz
into
loopne
mov
fsubp
out
aam
pop
ss
bound
js
and
aad
bound
dec
bound
out
xchg
pop
clc
add
xor
jo
mov
sub
adc
push
sbb
mov
push
lods
subl
adc
call
icebp
push
inc
bswap
or
inc
xor
fnstcw
cmc
pop
push
push
hlt
mov
imull
dec
js
loope
pushf
idivl
lret
and
adc
jns
xor
aad
orl
cld
testl
pop
push
jge
push
pushf
test
mov
xor
jae
inc
jnp
cmp
stos
cltd
dec
jbe
pop
test
push
jnp
dec
inc
xchg
aam
sbb
lods
sub
test
fldcw
jnp
test
mov
bound
push
pop
mov
and
mov
loopne
or
ret
xor
jg
pop
stos
jne
cmc
pop
xchg
ds
sbb
dec
sti
adc
jmp
jae
stos
and
adc
push
adc
std
mov
mov
gs
mov
mov
outsl
andl
inc
out
sub
mov
int
daa
sbb
or
push
push
jo
mov
xor
enter
mov
je
add
test
xor
xchg
mov
adc
xchg
sub
out
arpl
add
lods
or
mov
pop
in
mov
mov
dec
inc
jge
rcrl
add
dec
and
cmovnp
sub
popa
jnp
lea
pusha
or
pop
in
dec
dec
add
jnp
or
popf
dec
xchg
sbb
arpl
sbb
hlt
stos
xor
pop
pop
sbb
pop
pop
fwait
hlt
sub
mov
sbb
cmp
pcmpgtd
push
ja
jecxz
cli
lock
pop
insl
loop
fwait
lcall
repz
int
bound
rcrl
repnz
jbe
push
sahf
xchg
pop
addb
es
mov
sbb
scas
in
loop
out
stc
inc
pusha
jb
imul
dec
das
jmp
lock
aam
inc
jp
push
cmc
mov
push
rolb
jo
call
push
dec
sub
pusha
aam
push
xchg
pop
int3
sub
arpl
fs
lea
aad
movb
popf
jns
push
lret
jne
xchg
fs
and
push
cli
jne
inc
pop
je
jp
add
js
sti
lret
jb
ja
xchg
bound
or
jo
imul
into
xchg
test
loopne
mov
xor
sbbb
cli
out
repz
int
jg
scas
mov
xor
jl
pop
lock
scas
adc
xchg
adc
test
arpl
pop
xlat
std
pop
ficomps
or
add
push
mov
jbe
loope
int3
mov
outsb
xchg
cmpsb
aas
pop
adc
pop
movsb
fdivrl
ja
es
sti
sbb
inc
adc
pop
inc
push
aam
adc
mov
outsb
xchg
fdivrp
xor
dec
fimull
cmp
jp
pop
lcall
jmp
pushf
test
mov
out
loope
es
scas
mov
out
xchg
call
lds
cltd
dec
push
into
ret
stos
pop
push
sbb
dec
pop
pop
sub
fisttpl
pop
cli
rorb
jge
loop
ficomps
mov
imul
jecxz
icebp
inc
mov
or
xor
xchg
in
cmp
jnp
cwtl
cwtl
dec
sub
dec
push
aam
pop
xchg
push
mov
rorl
xchg
fildl
in
dec
lea
pop
pusha
mov
push
shll
pop
jno
inc
cmp
outsb
dec
addr16
ds
and
jno
xchg
cmp
into
cmp
std
add
ss
into
xchg
inc
mov
loope
ljmp
sub
sub
mov
es
add
mov
adc
add
movsl
int
push
fisubs
cmp
sub
sarl
xor
ficompl
movsb
iret
jge
sbb
insb
stos
inc
sbb
es
jge
shrb
sbb
or
ret
shll
cld
cltd
adc
mov
rcl
xor
cmc
cli
inc
dec
notl
push
or
adc
sbb
cmp
movsl
push
cli
ja
dec
sub
add
sbb
stos
mov
lds
jl
or
pop
arpl
add
cltd
xorb
mov
add
xchg
cmpsl
in
and
andl
mov
jecxz
cmp
mov
fwait
jecxz
xchg
jnp,pn
lcall
neg
cmpsb
xor
xchg
mov
fs
in
sbb
push
leave
inc
xchg
xor
cmp
mov
cmp
dec
sahf
lcall
mov
andb
repnz
mov
jecxz
dec
loop
ret
xchg
dec
xchg
lods
ja
adc
or
lods
leave
divb
je
mov
xchg
sbb
sbb
hlt
stos
dec
and
stos
pop
push
imul
lahf
loopne
sarb
icebp
cmovne
test
xlat
ss
mov
xchg
mov
push
sub
std
rcll
insb
pop
scas
cmpsb
xchg
loopne
shr
imul
imul
sub
les
push
sahf
inc
xor
cltd
test
fbld
pop
nop
inc
mov
mov
cmp
movsb
mov
cmp
data16
mov
cld
cmpsl
or
aaa
fs
cs
lahf
ljmp
dec
mov
fwait
pop
push
aam
repnz
adc
mov
mov
gs
pop
loope
dec
xchg
jmp
mov
std
je
xor
add
std
inc
out
scas
dec
iret
add
or
mov
addr16
and
jmp
sbb
xchg
fwait
movsl
es
movsl
test
xchg
pop
adc
mov
nop
pop
jns
dec
fists
bound
das
enter
jmp
orb
mov
cwtl
es
clc
outsl
imul
sub
cmpsl
lret
xor
mov
inc
or
jae
icebp
inc
scas
cmp
add
pop
xor
cmpsl
popf
ret
sub
push
das
mov
push
imul
fiadds
push
mov
dec
push
or
in
mov
sbbl
mov
call
ret
xor
dec
push
popa
lock
lea
pop
xchg
stos
and
movsb
hlt
loopne
hlt
sub
mov
pop
pop
dec
adc
aad
js
lds
or
pop
test
xor
ret
or
js
mov
cmp
and
das
es
push
and
mov
in
inc
pop
sbb
outsl
adc
pop
test
pusha
out
mov
adc
out
and
push
mov
int
out
popf
adc
lods
push
mov
and
jbe
hlt
mov
in
in
add
in
rcrb
cmc
lcall
xchg
sub
jb
mov
fwait
outsl
sub
xchg
fstps
scas
mov
or
shrl
mov
push
push
adc
dec
pop
cmpsb
mov
gs
insl
cmp
scas
mov
dec
push
xor
fwait
ss
ss
lahf
das
enter
aaa
cld
or
ds
cmpsl
in
sub
movsb
outsb
testl
pop
xor
dec
mov
adc
je
mov
iret
mov
popf
outsb
test
shr
or
mov
and
fldenv
outsb
cmp
add
outsl
pop
cmp
dec
or
mov
pop
in
or
in
pop
adc
sti
push
rclb
mov
sbb
push
mov
mov
sub
ja
jne
dec
cld
jge
mov
cmp
das
pop
in
add
mov
imul
repz
sub
scas
sub
mov
loopne
sti
int3
dec
movsb
xchg
xlat
mov
int3
iret
add
xor
mov
nop
inc
push
mov
cmp
mov
xor
lcall
add
sti
les
rcrb
or
mov
rclb
pop
or
push
movsb
add
pusha
and
jns
or
loope
jle
pop
jae
and
repz
xlat
push
nop
lret
mov
mov
jb
bnd
in
pop
sti
mov
xchg
and
sbb
in
in
and
pop
jmp
mov
shrb
aaa
insl
stos
int
scas
sbb
fmuls
int
inc
xchg
mov
sbb
les
daa
ss
mov
inc
mov
orl
dec
push
repnz
outsb
cmpsb
inc
mov
dec
addr16
out
repz
push
cmp
cmp
pop
and
lds
or
repnz
movsb
cltd
sahf
arpl
mov
xchg
pop
ror
xlat
repnz
jns
stos
decl
aaa
jae
jns
xchg
aaa
insb
lods
xchg
test
push
outsb
test
je
sub
inc
cltd
arpl
je
hlt
pop
inc
shlb
pop
xchg
lret
imul
ljmp
jns
push
stc
inc
adc
jmp
inc
xrelease
add
mov
dec
sbb
sbb
ja
pop
dec
inc
addr16
push
inc
leave
iret
fs
lods
push
mov
enter
cld
mov
inc
sbb
xor
andl
add
cmp
out
or
mov
iret
ja
sbb
cmp
push
fwait
outsl
cs
push
mov
cmp
pop
loope
mov
inc
jne
jae
outsl
and
xchg
mov
add
cmpsb
fidivrs
je
cmp
bound
mov
inc
pop
xchg
lret
call
pop
movsb
lret
xchg
lea
inc
jp
sub
mov
pusha
lock
fs
outsl
add
nop
dec
out
loope
push
mov
stc
jle
mov
jae
jns
fistpll
cmpsl
insl
sub
pop
fs
and
fwait
jne
and
nop
add
jne
mov
mov
mov
ljmp
shl
scas
js
ljmp
das
bound
aaa
xor
scas
and
push
jmp
frndint
outsb
pop
gs
rcll
scas
inc
pusha
fidivl
xchg
pop
xchg
roll
pop
ret
mov
shr
into
clc
daa
xchg
mov
inc
jp
cs
mov
pusha
push
jp
add
ret
inc
mov
xchg
cmp
or
dec
push
in
cmpsl
push
xor
repz
jle
push
pushf
cmp
jae
dec
adc
lds
gs
leave
lcall
loopne
aad
cmp
push
xchg
lds
in
in
dec
scas
add
push
xchg
int
divl
dec
imul
jp
xchg
test
and
jl
jae
mov
cmp
loope
adc
add
cltd
cmpsb
mov
pop
jo
ret
lds
mov
movsl
sub
loope
push
add
nop
lds
ljmp
pop
es
out
sbb
std
adc
fistpl
stos
and
add
inc
iret
mov
sub
das
push
sub
lods
xor
hlt
ds
fdivrs
nop
add
repz
mov
in
pop
lahf
cmp
ret
lea
divb
sbb
or
cld
inc
dec
add
add
or
lds
xchg
out
arpl
adc
bound
cmp
cld
jge
into
adc
adc
mov
lods
pushf
push
lea
cmpsl
loopne
xor
jle
in
push
push
sbb
dec
dec
cmp
dec
rcr
fcoms
inc
mov
sub
movsb
clc
ficompl
inc
in
mov
dec
les
aad
push
inc
push
call
inc
inc
mov
dec
mov
jne
in
jmp
jle
in
lcall
and
and
fdivs
cmp
mov
out
inc
cltd
roll
xor
std
movsb
dec
fisttpl
inc
jmp
jg
repz
mov
imul
inc
pop
inc
or
enter
fsubs
pop
mov
dec
gs
lea
pop
fmuls
dec
and
insb
sbb
sbb
xor
std
movsb
push
rcll
push
dec
cmp
out
addr16
or
jno
das
sbb
lods
shll
pop
push
stc
stos
ret
cld
mov
stc
adc
stos
cld
sub
loopne
adc
cmp
mov
je
ds
rcr
dec
cmpsb
cmp
fwait
repnz
push
add
jae
xchg
push
ja
or
mov
and
je
cmp
xor
daa
xorb
adc
pop
stos
push
push
pop
aas
movsl
stos
mov
mov
pusha
in
add
fadd
mov
cmp
fisubl
cmp
add
call
pushl
sub
push
push
mov
jno
push
jecxz
shrb
mov
mov
or
inc
loopne
mov
mov
mov
arpl
out
push
or
pop
mov
or
pop
pop
or
loopne
daa
lods
mov
pop
or
repz
add
negl
add
cmpsb
sbb
stos
xchg
mov
cmp
push
sbb
fdecstp
ja
inc
cmp
adc
mull
ret
inc
xlat
cmp
daa
push
adc
mov
repnz
mov
add
jmp
cmp
adc
sti
lahf
dec
sbb
mov
aaa
push
xchg
mov
or
shll
xor
faddl
mov
inc
fnstenv
shrb
cltd
cltd
loope
mov
mov
bound
inc
rol
bound
mov
xchg
rolb
aad
add
and
test
or
loopne
icebp
out
sbb
pushf
xor
cmp
popa
cmpsl
mov
insl
cwtl
mov
mov
cmp
add
sbb
jbe
ret
lahf
out
daa
aam
insl
push
inc
test
and
pushf
jmp
adc
pop
and
inc
sbb
or
add
xor
sahf
mov
jno
xchg
and
dec
movq
loop
mov
mov
lret
rolb
mov
mov
push
in
mov
in
and
addl
cli
insl
cmc
jae
or
pushf
popa
push
cmp
dec
xchg
mov
jmp
es
cmp
or
mov
stos
call
cld
pusha
mov
shll
aam
sub
cmp
test
xchg
inc
sbb
sahf
mov
dec
sub
mov
sub
jnp,pn
mov
hlt
sub
cmp
lock
or
mov
mov
mov
jmp
cmp
push
pop
sub
cmp
punpckhwd
sti
cmp
add
cmp
lds
ja
insl
loop
scas
in
es
and
sbb
out
loopne
dec
add
xor
and
mov
dec
xchg
mov
sub
lret
push
in
mov
arpl
mov
cmc
shrb
daa
jl
fcoml
jnp
sahf
mov
ds
sbb
aas
sub
test
lahf
add
pushf
into
mov
sub
mov
stos
rol
iret
inc
xchg
stos
ljmp
inc
push
addps
sub
pop
rclb
mov
enterw
aad
and
loop
test
inc
scas
add
xchg
repnz
mov
cmp
lods
mov
pop
cmpsl
lods
cmp
dec
scas
or
inc
and
inc
or
sti
daa
cld
or
insl
imul
out
inc
in
lret
pop
fwait
xchg
adc
pop
ljmp
fucomp
scas
pop
ret
xor
inc
xlat
or
movsl
ljmp
ja
rolb
inc
pop
dec
mov
jns
xchg
adc
bound
imul
sti
pop
and
add
xchg
test
bnd
sbb
test
or
mov
jmp
pop
daa
loop
iret
mov
adc
stos
ds
imul
lret
pop
push
push
and
pop
out
jmp
jge
mov
jmp
inc
pop
fstpt
add
mov
hlt
stos
jb
ljmp
stos
in
sbb
cld
dec
jp
ljmp
dec
push
mov
lock
sbb
dec
les
mov
fildll
jle
repz
jmp
pop
xor
imul
inc
inc
dec
and
mov
les
jg
es
gs
push
ret
ret
xchg
out
jmp
in
cwtl
mov
cmp
into
mov
cmp
repz
fiadds
and
mov
fisubl
pop
push
dec
pop
clc
cld
dec
xor
jno
pop
jns
lea
xor
inc
jge
fmuls
dec
or
cmpsl
shl
add
mov
pop
jnp
or
mov
les
lea
into
fmuls
pusha
dec
adc
push
adc
vpshaq
cli
sbb
in
cmpsl
xchg
mov
xchg
cld
in
test
icebp
and
scas
sbb
xchg
and
fwait
jnp
pop
mov
mov
jmp
cmp
xchg
xchg
enter
push
push
or
cmpsl
add
test
lods
xor
movsb
in
aad
loope
rclb
adc
xchg
xor
push
xchg
jo
xchg
sbb
or
std
cmp
and
and
sti
xchg
mov
xchg
mov
jg
incb
testb
cmc
icebp
push
mov
test
mov
pop
not
movsb
jnp,pt
mov
icebp
dec
mov
out
subb
push
jmp
cmc
inc
in
xchg
jnp
fdivs
dec
inc
inc
add
in
cmc
and
and
add
decl
cli
mov
int3
cli
xchg
mov
ss
test
and
inc
jge
xchg
cs
cld
cmp
mov
cltd
unpcklps
mov
hlt
sbb
mov
adc
icebp
movb
sbb
xchg
xchg
cmp
loop
lahf
loopne
and
and
or
loopne
mov
mov
xchg
xor
and
int3
fwait
push
in
jmp
xchg
icebp
sub
push
or
test
pop
add
mov
sar
std
xor
jns
jnp
push
mov
call
cmp
mov
cli
aas
jae
cmp
jmp
cmpsl
shll
repz
mov
popf
nop
aas
add
inc
dec
pop
and
sti
add
call
out
ss
ds
inc
xchg
and
cs
jmp
cmp
cmc
and
ret
iret
inc
popa
dec
icebp
dec
stos
addr16
inc
neg
cmp
or
pop
push
inc
mov
mov
lods
mov
cmpsl
and
scas
mov
jmp
mov
mov
pop
repz
aam
adc
ja
ljmp
mov
push
loope
movsl
test
push
add
cmp
lods
xor
jg
xchg
mov
fstpl
add
out
add
xor
bnd
jge
push
add
cmp
mov
clc
ret
insb
mov
insl
sahf
ljmp
mov
xor
add
enter
insl
or
mul
pop
addl
mov
sbb
sub
ds
scas
imul
push
sub
push
adc
lahf
mov
and
xor
xor
mov
sub
sar
sub
adc
push
dec
leave
push
dec
cmpsb
pop
ret
aad
mov
out
inc
fstps
lea
adc
test
lret
adc
aaa
fstl
scas
jmp
fsubl
movsl
xor
add
sub
inc
jge
test
pop
sub
push
movsl
cmp
rcll
inc
popf
nop
nop
cmpsb
int3
sub
add
ljmp
into
mov
rcrb
xchg
xchg
xchg
sbb
sahf
push
out
cli
cmp
jne
push
arpl
adc
aas
leave
test
xor
out
out
addr16
ljmp
cmp
notb
xchg
adc
jne
aad
cmpsl
push
sbb
cwtl
in
adc
xchg
pop
das
cli
and
cmp
mov
icebp
adc
cwtl
xchg
fimull
xchg
sub
adc
mov
adc
push
and
adc
in
outsl
and
adc
and
pop
mov
fidivrl
mov
sbb
inc
xor
cmp
ret
xor
mov
clc
in
xrelease
or
add
pop
cmp
in
mov
dec
aas
mov
pop
data16
mov
xchg
jbe
pushf
aad
cmp
and
xchg
mov
daa
iret
dec
ss
pop
push
push
cli
ja
jp
sti
lahf
iret
outsl
mov
ja
std
outsb
adc
sbb
nop
iret
push
mov
out
loopne
pusha
jle
mov
jnp
ficoml
ret
bnd
pop
fs
repz
xchg
inc
inc
orb
mov
mov
adc
dec
xchg
pop
mull
scas
mov
stc
test
mull
xor
mov
mov
xor
adc
stc
or
movsl
mov
pop
and
xor
outsb
mov
out
scas
mov
lock
jne
pop
test
insb
daa
pop
dec
add
sbbl
jo
mov
aam
cmpsb
mov
jns
push
psubb
xchg
inc
rcl
mov
or
and
sub
das
aaa
mov
pusha
hlt
cmp
cmpsl
pop
mov
fildl
iretw
mov
aas
lds
test
mov
sbbl
movsl
cmp
pop
scas
inc
ficoml
push
xchg
test
ss
push
and
filds
lcall
aad
adc
out
pop
pop
mov
out
and
add
test
add
sub
stc
shrb
cltd
add
sbb
pop
pop
jg
inc
aaa
sbb
cmp
add
stc
and
cld
mov
add
add
push
clc
repnz
scas
aaa
popf
lcall
cmp
xchg
fstps
xchg
fmuls
pop
push
xchg
or
dec
add
adcb
push
out
or
mov
add
pusha
in
nop
dec
dec
in
adc
push
pop
testl
adc
mov
pop
add
lcall
mov
push
sub
es
mov
or
inc
shl
mov
mov
lock
mov
adc
mov
fidivs
std
ja
mov
lods
sarl
aam
popf
jle
xor
add
nop
adc
out
test
pop
push
push
push
add
jae
mov
hlt
cmp
shll
mov
out
inc
sti
fwait
js
push
xor
push
adc
add
sbb
in
xchg
sub
pushl
xor
sub
xlat
pop
mov
repz
pop
xchg
inc
push
fwait
call
imul
ret
add
cli
and
repz
cli
xor
add
add
gs
pop
push
mov
mov
add
jg
test
orps
sbb
mov
mov
cli
lahf
inc
out
jmp
repnz
xor
xchg
mov
ljmp
inc
pop
push
addr16
jae
add
mov
adc
inc
mov
lret
call
xchg
loopne
dec
imul
in
sbb
inc
sti
or
add
outsl
cmpsl
jbe
into
fcompl
cli
push
inc
das
add
rol
ljmp
fs
out
push
ljmp
inc
and
call
sbb
or
push
aad
or
inc
rcrb
ljmp
imul
fists
jmp
inc
ret
push
lahf
call
cmp
or
inc
repnz
shl
push
pop
ljmp
test
and
gs
ret
loop
jmp
out
call
ret
inc
fwait
or
xchg
in
or
push
loope
inc
ljmp
jae
rcl
fistl
mov
inc
push
sbb
push
fwait
sub
inc
cmp
mov
in
fs
cmp
jnp
push
jle
dec
and
lahf
push
mov
dec
das
call
call
mov
and
sub
xlat
xchg
negl
pushl
sub
das
push
mov
aas
popf
decb
xor
stos
test
xchg
jns
daa
bound
mov
cs
sbb
insl
cmc
push
cmp
enter
inc
imul
jmp
dec
pop
adc
rcrb
ljmp
fs
push
aaa
mov
ljmp
inc
out
sti
out
jno
cld
ss
call
sub
aam
in
mov
cld
div
out
xchg
scas
in
iret
add
fnstcw
les
pushf
nop
bound
mov
sbb
fiaddl
jb
sbb
xor
add
cmp
scas
insb
arpl
clc
js
push
jge
notl
pushf
ret
xorl
lahf
mov
incl
mov
mov
cmp
mov
sub
mov
imul
push
push
pop
cmp
cmpsl
pop
test
mov
push
je
dec
jg
or
pop
push
lret
xchg
sbb
mov
subb
movsb
mov
stc
in
imul
adc
cld
ret
notb
or
push
js
push
imul
pop
or
add
cs
mov
cld
cwtl
in
mov
jne
xlat
cmpsb
mov
sub
inc
xchg
sbbl
inc
inc
or
stos
test
ss
in
movsb
cmp
int
jne
andl
mov
mov
sbb
fists
sub
fistpll
gs
cmp
into
mov
add
lock
xchg
mov
fildl
and
jl
push
mov
push
and
or
imul
mov
outsb
cmp
adc
pushf
stos
cmp
mov
jl
sbb
lds
mov
cmp
ret
inc
stos
jns
inc
push
dec
lods
nop
repz
test
jno
inc
ret
xor
mov
sbb
push
pushf
shlb
push
jb
ljmp
mov
mov
xlat
xchg
adc
stc
aad
fdivl
jmp
ljmp
sahf
fistpll
and
cmp
ja
xor
mov
and
add
stos
stc
mov
daa
sub
repz
out
addb
movsb
lcall
hlt
inc
addr16
les
pop
das
stc
lods
out
inc
hlt
add
in
sbb
mov
dec
out
mov
sub
lds
add
add
lcall
into
testl
insl
fstpl
adc
fwait
lods
and
mov
movsb
cltd
scas
insl
andl
mov
cwtl
inc
sbb
push
ficompl
and
inc
sub
pop
in
loopne
add
aad
fwait
mov
xchg
push
or
xlat
shrb
xchg
stos
sbb
and
pop
ret
stos
push
ret
push
fldl
or
sub
and
sbb
int
mov
or
fcoml
dec
pop
or
dec
test
jecxz
jmp
dec
sub
and
xchg
dec
lea
xor
sub
movl
aaa
test
sbb
std
in
ret
mov
ss
xor
testl
xlat
and
mov
imul
nop
and
lret
xchg
push
aaa
insb
cmp
popa
pop
outsl
mov
inc
hlt
sub
inc
pop
sbb
cld
cmp
jle
pop
not
xchg
jmp
iret
or
inc
fwait
jbe
sbb
cmp
pop
mov
add
jmp
sub
xchg
or
or
scas
inc
cwtl
pop
arpl
mov
les
fstps
cmp
movsl
decl
gs
jp
pop
add
mov
cli
sub
cmpsb
ds
mov
pop
mov
in
xchg
lret
in
sbb
jl
repnz
imul
repz
cli
push
movsb
sbb
adc
xchg
js
mov
jl
lcall
fiadds
push
push
sbb
push
mov
addr16
jl
push
push
sbb
jge
inc
add
aam
adc
pop
or
ret
cwtl
rclb
insb
movsb
jg
repnz
sub
mov
lock
sub
hlt
cld
sub
xchg
aas
roll
or
xor
movsl
xchg
add
mov
lcall
mov
addr16
test
popa
xchg
cld
leave
mov
pop
and
popf
add
pop
push
ljmp
pop
sarb
inc
push
movsl
and
pop
scas
stc
mov
xorl
or
bound
mov
roll
add
shrb
add
pop
xchg
mov
ljmp
insb
bound
insl
cmp
test
push
sbb
mov
ficoml
popa
notl
aas
dec
ret
inc
out
sbb
sbb
pop
loopne
loope
xchg
out
inc
jbe
testb
and
xor
call
xor
jno
adc
je
fmull
dec
pop
push
insb
lret
xor
out
adc
mov
jecxz
mov
dec
mov
cli
outsb
in
jge
loop
mov
rclb
cs
xor
sub
sub
rclb
gs
arpl
subl
fstps
jp
aad
inc
mov
test
loop
jnp
clc
stos
gs
scas
inc
jl
jp
movsb
lahf
ja
imul
sub
mov
call
inc
cld
fs
pusha
mull
xchg
push
mov
inc
outsb
pop
mov
cli
xor
sub
xchg
push
adc
ret
inc
test
push
xchg
cli
arpl
sub
pop
fldt
jg
cld
int
pop
outsb
add
clc
mov
or
cmp
jns
shrd
cmp
or
pop
cmp
jmp
dec
cld
aas
pop
ljmp
dec
ljmp
fstpt
jb
je
dec
mov
test
mov
push
pop
mov
cmp
inc
or
imul
pop
lret
or
imul
out
inc
fwait
and
and
push
pushf
sub
sbb
jne
lea
int
mov
push
test
inc
inc
push
ss
dec
es
inc
stos
imul
xchg
ljmp
inc
jecxz
ficomps
xchg
test
in
es
mov
inc
shlb
add
call
into
jns
testb
sarb
jb
mov
or
mov
clc
xchg
insb
scas
cmp
mov
call
test
add
call
js
stos
inc
in
adc
push
cwtl
enter
rolb
jle
push
into
mov
cwtl
mov
out
hlt
out
sbb
inc
cmp
inc
adc
pop
pop
out
xchg
nop
pop
cmp
mov
sub
jl
test
data16
pop
inc
jg
or
xor
pop
adc
andb
xor
mov
out
mov
cmp
out
dec
or
jge
cwtl
cmc
inc
inc
mov
mov
daa
and
pop
scas
mov
shrl
hlt
insb
mov
cmc
mov
push
fcomps
ss
mov
sbb
sub
or
cmp
in
and
pop
and
sahf
mov
mov
dec
in
or
daa
aas
mov
dec
inc
sub
push
sub
jp
inc
mov
inc
add
xorb
xor
dec
arpl
jb
mov
inc
inc
add
cli
loope
test
adc
repnz
lret
adc
and
call
aaa
ds
add
cmp
shlb
xor
xlat
nop
or
fistpl
dec
lahf
inc
sub
push
in
dec
lds
or
mov
and
daa
push
jns
adc
mov
sahf
mov
lahf
jnp
xchg
adc
lods
lods
sbb
leave
cwtl
aam
repnz
and
imul
stc
or
daa
sbb
dec
and
inc
cmp
jge
push
test
dec
imull
into
scas
pop
dec
jl
nop
ljmp
cmp
mov
out
fs
cmp
mov
mov
fs
jp
cmpsl
sub
fdivrs
mov
hlt
les
test
out
sbb
lret
sbb
push
ljmp
aam
pop
sub
mov
imul
stos
maskmovq
testl
sbbb
shrl
xor
movsl
add
incl
shlb
dec
loop
mov
mov
jecxz
inc
rorl
test
xchg
test
bound
lods
mov
add
lods
out
cmp
shrl
xorl
loop
repnz
or
aaa
stos
lea
adc
fwait
ds
and
push
cmp
or
mov
dec
aas
bound
mov
loop
sbb
mov
push
pop
nop
inc
enter
xchg
or
test
gs
mov
pop
pop
xchg
js
insl
sahf
jo
dec
negl
xor
frndint
inc
dec
lcall
fnsave
push
sbb
xchg
cltd
sbb
fld
mov
out
or
movsl
and
lcall
adc
sub
lret
cmp
or
inc
xchg
mov
mov
in
sbb
add
push
pop
xchg
push
or
xlat
or
xchg
inc
xor
insb
ljmp
aad
mov
or
out
dec
and
sahf
stos
test
iret
pop
pop
adc
arpl
call
out
xchg
push
ret
mov
idivb
dec
mov
jecxz
std
fwait
mov
aad
das
or
shrl
fmull
add
cwtl
shl
jbe
xchg
aam
or
inc
in
mov
dec
into
xchg
mov
js
sub
dec
push
xchg
and
shlb
sub
lods
aaa
ror
mov
mov
sbb
or
scas
mov
mov
in
rorl
int
jge
scas
mov
sahf
dec
aas
sbb
jp
outsb
int3
dec
lahf
ljmp
imul
aaa
add
ror
ljmp
and
xorl
daa
mov
xchg
sbb
icebp
lods
mov
cli
jle
lea
sub
popf
pop
jns
push
push
pop
pusha
xchg
xchg
cmp
popf
ja
mov
mov
xchg
out
imul
cs
insb
xor
sbb
push
jecxz
test
xchg
or
outsb
jnp
pop
inc
sub
mov
insb
and
enter
cs
mov
cli
adc
test
sub
clc
pop
mov
pop
pop
sar
out
in
push
inc
data16
test
fimuls
cmp
test
icebp
lahf
inc
out
cmp
aam
mov
pop
adcl
jecxz
out
es
or
adcb
dec
dec
je
in
rolb
add
repnz
and
jg
pop
sub
push
das
cltd
imul
insb
cmp
rclb
mov
movb
cmc
mov
pop
outsb
pop
dec
stos
sub
arpl
jbe
cs
jnp
xor
ja
fildl
push
or
outsl
ja
fdivr
push
idiv
jae
pop
les
jae
jl
mov
ret
inc
inc
sbb
daa
lods
sahf
movb
jns
imul
xlat
out
shr
sub
inc
jnp
cmp
subb
rorb
out
xor
pop
mov
imul
popf
inc
pop
cmp
push
cmp
rolb
stos
mov
mov
mov
jle,pt
adc
cs
out
push
imul
negb
xor
aas
adc
loopne
fwait
sub
mov
cmpsl
jmp
fs
scas
push
jmp
repnz
and
mov
es
and
add
and
lret
push
jb
cmp
cmp
movl
push
pusha
mov
mov
cwtl
xor
cmc
fwait
gs
xchg
push
sub
sub
mov
or
cs
or
cmpsl
fistpl
dec
int
divl
dec
cmpsb
mov
call
divl
cmpsl
or
add
xchg
js
sub
stos
cld
sti
push
call
mov
shll
test
ljmp
sbb
and
dec
sbb
mov
out
cmc
cld
sub
pop
and
test
jo
jge
or
faddl
imul
ret
notb
xor
movl
int
and
mov
addb
adc
and
sbb
sbb
sbb
xchg
lea
xlat
lods
ss
mov
mov
es
jbe
sub
or
shll
aas
jg
sub
inc
addr16
repz
add
ljmp
or
mov
cmc
mov
push
sub
xchg
test
sbb
rorb
xchg
adc
or
xchg
loope
mov
aas
mov
out
loopne
rolb
mov
lahf
decl
add
or
add
fwait
cld
push
sbb
in
push
xor
test
mov
bts
xor
sarl
out
mov
mov
xchg
sbb
dec
ret
stos
or
jae
cmp
stc
addb
loope
or
sbbl
mov
or
and
push
aas
jns
std
inc
stc
test
add
daa
xchg
pop
inc
das
daa
stc
cmp
clc
xor
mov
or
out
lds
mov
insb
loopne
testb
xchg
mov
sub
lahf
cmp
jp
mov
lcall
lock
push
cld
sti
sbb
xor
push
sub
sbb
push
adc
lahf
or
loop
mov
loop
push
jmp
pop
dec
mov
dec
enter
sbb
stos
mov
fsubl
insb
mov
push
shlb
cmp
int
pop
or
dec
add
and
sbb
imul
out
dec
lret
sbb
in
insl
popa
cmpsb
and
push
sbb
cld
sbb
xchg
cmc
lret
cwtl
imul
hlt
loopne
gs
or
push
lea
ljmp
inc
jb
js
stos
les
mov
push
add
inc
test
jb
lcall
shlb
clc
dec
or
push
cmp
mov
jge
mov
sbb
daa
adc
test
dec
hlt
cmpsl
mov
xor
ss
ljmp
pop
sbb
sub
pop
adc
scas
sbb
jge
or
xchg
outsl
dec
repnz
je
arpl
rolb
mov
ljmp
les
ljmp
xchg
mov
pop
push
repnz
addr16
sbb
call
sbb
pop
xchg
xor
ljmp
cltd
js
push
les
mov
sti
aaa
sub
arpl
mov
inc
add
jae
ret
xchg
mov
xchg
adc
push
add
ja
bound
repz
push
pop
push
pop
repz
lock
gs
sub
jmp
inc
xchg
sti
push
inc
stos
or
in
mull
inc
fsubrl
es
mov
push
cld
sbb
inc
pop
xor
cmpsl
pop
shl
gs
push
clc
daa
addr16
inc
jg
cmc
repz
hlt
sbb
mov
pop
fisubl
push
inc
push
add
scas
cmpsl
push
test
push
jp
sti
add
and
dec
fisubrs
push
in
into
les
push
mov
aad
addr16
or
push
cmp
shlb
xor
inc
int
sbb
rcll
xor
fisubs
shrl
in
pop
ljmp
aam
add
xor
ljmp
mov
mov
sti
bound
cmp
scas
mov
add
out
push
xchg
lret
fildl
mov
xor
test
sbb
or
and
mov
je
jmp
inc
adc
cmp
icebp
ficoml
push
hlt
pop
jnp
or
nop
sub
insb
adc
sbb
push
scas
xor
jp
cmpsl
xlat
push
dec
adc
lret
jg
dec
sbb
outsl
ja
popa
dec
cli
add
dec
adc
inc
clc
inc
sti
repz
jae
adc
mov
dec
cmp
xchg
adc
out
push
mov
ja
imul
pop
lods
test
pop
mov
mov
push
fiaddl
cli
push
and
cmpsl
test
loope
inc
adc
daa
out
push
mov
hlt
cwtl
push
adc
fisubl
das
cmp
scas
inc
iret
test
insb
fwait
gs
shrl
jb
mov
xchg
aaa
std
out
push
fldcw
cli
cld
xchg
lret
pusha
insl
sbb
cmp
adc
mov
ret
scas
adc
mov
cmp
dec
rol
lret
mov
fsubrl
push
pop
jg
dec
or
clc
arpl
data16
mov
jp
mov
stos
fs
in
psubq
lods
in
int3
jmp
dec
int3
sbb
inc
inc
arpl
andl
out
cmp
jp
rclb
in
pop
out
mov
pop
rcrl
rcrl
cmp
or
pop
add
or
cmc
out
cmpsl
push
std
adc
add
cmpsl
insl
ja
adcl
aad
add
pop
xor
arpl
sahf
lcall
cmc
insl
pop
xchg
addl
cmp
sarl
lods
inc
xchg
sbb
push
das
ds
xor
int3
dec
ret
out
adc
out
lea
add
or
bound
and
test
push
cli
pop
das
sbb
int3
xchg
inc
in
lret
ss
daa
sbb
insb
mov
mov
repz
jecxz
sub
add
cli
clc
jbe
mov
jp
adc
add
ljmp
rcr
jb
jp
mov
mov
in
jp
ds
mov
inc
push
imul
adc
outsb
push
gs
hlt
pop
iret
test
mov
xor
ja
mov
add
mov
lods
sub
xchg
xor
scas
ret
sub
leave
out
mov
sti
dec
pop
inc
xor
or
cmpsb
xor
out
fs
fninit
and
or
jo
mov
cmpsl
clc
add
or
dec
cmpl
test
xchg
push
stos
push
jp
cmp
inc
cmpsl
leave
hlt
in
jnp
scas
loop
xor
push
fadds
sbb
fisubl
xchg
pop
outsb
jp
aas
pslld
dec
lret
add
data16
xor
movsl
jp
mov
adcl
pop
jecxz
fbld
sarl
xor
repz
in
imul
jnp
sub
mov
mov
dec
int
lcall
sbb
rcrb
int3
mov
inc
fldenv
ljmp
cmc
sub
add
popf
outsb
pop
out
push
sbb
pushf
adc
pushw
shlb
pop
dec
push
cmp
mov
mov
mov
sub
bnd
cmp
xchg
lret
scas
shr
test
out
fmull
fstp
mov
cld
scas
push
cmpsl
shrl
xchg
and
jne
jae
add
jp
sti
int
bound
aad
jne
int3
fsub
jnp
jp
add
dec
inc
jp
cld
pusha
push
int3
jbe
jnp
adc
aaa
mov
iret
mov
sbb
dec
jp
jge
jnp
