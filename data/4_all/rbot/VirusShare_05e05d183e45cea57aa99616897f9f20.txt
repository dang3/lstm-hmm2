push
pusha
xor
repz
xchg
sbb
insb
pop
cmp
cltd
fldcw
ss
push
ljmp
or
andl
popf
fs
out
shlb
loopne
test
fisttpll
lret
push
xchg
xor
movsb
push
or
shlb
mov
aam
cmp
aam
mov
sub
pushf
push
and
or
fs
adc
xchg
mov
inc
aas
pop
xor
mull
aam
mov
ja
inc
and
repz
lods
push
sahf
jmp
mov
iret
and
push
mov
out
aam
aas
rclb
sub
push
cs
rorb
es
negl
sbb
mov
fs
xor
pop
rcl
cmp
jle
push
loopne
adc
les
mov
clc
sbb
sub
lret
fcomps
xchg
stos
inc
push
hlt
fimull
mov
sarb
into
ds
out
mov
pop
lods
mov
add
clc
xor
mov
rcrb
mov
and
fadd
aaa
mov
into
mov
inc
in
shrl
popa
inc
arpl
sarl
pushf
cld
aad
xchg
test
sbb
pop
or
mov
bound
sbb
pop
pop
loope
mov
ss
or
cmp
test
mov
popa
adc
lods
in
inc
insl
scas
test
mov
shll
xchg
xchg
nop
push
add
xor
push
sbb
sarl
outsl
out
movl
push
sbb
jg
cmpsb
sbb
add
push
push
adc
lcall
mov
das
dec
rcll
xchg
lods
lds
shll
int3
and
dec
mov
cmpsl
mov
jnp
fldenv
aad
adc
lds
rol
lods
cwtl
es
bound
lret
daa
mov
jbe
pop
inc
mov
fsubs
test
cmpsl
cmpsb
inc
xor
fstps
gs
fmull
mov
xor
mov
adc
pop
pop
cli
xor
push
xlat
cli
icebp
lahf
out
dec
push
or
pushf
sti
jo
or
cli
or
sahf
xchg
sbb
and
orl
or
das
push
dec
and
hlt
xor
popf
inc
fsubrs
push
pop
push
add
cmp
int
pop
or
push
repnz
sti
divl
add
mov
lods
sahf
mov
inc
scas
mov
imul
dec
fimull
mov
imul
pop
aam
in
mov
fst
repnz
inc
roll
nop
push
mov
and
and
or
fadd
in
loopne
ss
aaa
mov
mov
aaa
mov
mov
leave
test
shl
pop
fidivrl
lahf
rcrb
mov
into
sbb
and
mov
test
ret
add
lds
mov
mov
inc
mov
movsl
ja
and
aad
dec
out
inc
arpl
dec
frstor
xor
cmp
decb
or
xor
call
xor
bound
inc
aaa
mov
out
fdivrp
scas
adc
xchg
pushf
sub
mov
cltd
push
in
mov
lock
clc
dec
sub
loopne
shlb
cmp
mov
adcl
out
lret
pop
out
cld
ret
pushf
jle
mov
push
xor
sub
daa
inc
in
cmp
scas
mov
mov
scas
into
fisubs
fwait
ja
xor
orl
pop
arpl
loope
enter
ficomps
adc
adc
imul
pop
fs
jp
push
xor
cmp
pusha
ss
imul
and
addl
cmp
jg
stc
or
or
pop
inc
add
filds
inc
repnz
or
ret
lds
stc
sbbl
adc
mov
movsl
mov
dec
inc
rorb
xor
inc
in
adc
xlat
rolb
nop
mov
cmp
fwait
movsb
xor
clc
movsb
dec
cmp
jl
sub
add
xor
mov
mov
pop
mov
add
xchg
push
adc
inc
dec
loope
dec
mov
inc
dec
bound
add
arpl
jmp
dec
popf
ret
dec
nop
mov
aad
add
mov
test
dec
pop
cmp
jae
gs
and
push
pop
les
aad
mov
mov
lods
loop
pop
jecxz
inc
add
xchg
xchg
sub
fildl
xchg
enter
lds
xchg
jbe
inc
int
jne
and
xchg
sub
push
daa
mov
mov
test
dec
cmp
or
js
aas
mov
and
ds
and
es
push
mov
loopne
shl
or
sbb
icebp
adc
mov
or
pop
adc
push
adc
push
ss
repz
mov
mov
push
sahf
jle
lret
scas
sahf
lds
mov
std
mov
pop
cmp
sbb
and
push
jp,pn
test
repz
mov
mov
xchg
and
movsb
cltd
xchg
in
lds
fdivl
shlb
ds
cmp
hlt
adc
mov
jnp
in
xor
inc
fninit
dec
sbb
out
les
ds
xor
sbb
imul
das
mov
or
cld
hlt
addr16
adc
mov
je
mov
adc
test
outsl
ret
cmp
shrb
mov
push
movsl
mov
test
xor
mov
mov
mov
fisttps
mov
xchg
mov
mov
dec
mov
and
cmp
xor
pop
popl
dec
cld
repnz
dec
mov
adc
lea
xchg
or
mov
dec
mov
rcrl
xchg
mov
push
and
lea
data16
cmpsb
mov
mov
push
clc
mov
aaa
les
push
cwtl
jg
mov
jne
loop
and
in
and
out
push
lea
cli
xor
sub
adc
loopne
mov
adc
cmp
inc
int3
das
mov
in
push
jecxz
iret
test
mov
outsb
xlat
adc
loopne
xor
push
xchg
outsb
and
mov
jne
rcr
cltd
cltd
popf
icebp
or
push
jns
inc
or
xor
in
cs
fwait
mov
xor
pop
mov
insb
js
xor
leave
in
pop
cltd
enter
lret
adc
push
cmpsl
imul
pop
adc
stos
test
ss
aam
add
les
sbb
or
pop
cmp
je
cmp
jne
int3
sub
stc
cmc
jns
dec
inc
jnp
push
cmp
pop
cld
ja
ja
jne
add
cld
nop
loop
pop
push
push
jp
sub
pop
pop
jb
sub
push
push
push
push
lea
push
push
push
push
push
push
pop
cmp
je
cmp
jne
int3
push
add
pop
add
and
push
dec
inc
pop
jge
push
push
push
pop
pop
pop
dec
inc
clc
jl
inc
dec
not
not
loop
pop
push
push
pop
cmp
je
cmp
jne
int3
or
clc
nop
cmc
loop
pop
test
jle
push
sub
pop
add
test
nop
and
mov
push
call
xchg
int3
dec
rorb
test
dec
jmp
sbb
mov
cli
fidivrl
ret
jae
repz
fdivrl
sub
mov
mov
mov
push
movzbl
push
dec
pop
je
js
push
sub
pop
jno
xor
push
push
ja
ror
pop
pop
push
jns
or
pop
jge
jno
sar
loop
pop
push
dec
pop
cld
add
xor
jo
jne
and
push
test
pop
push
push
pop
cmp
je
cmp
jne
int3
push
push
sar
pop
pop
jo
cmp
jne
jp
xor
cld
cmp
loop
pop
and
test
add
test
jmp
jmp
call
jmp
xchg
pop
dec
icebp
push
inc
std
cmp
add
mov
lret
aas
js
cld
leave
rolb
shlb
mov
push
xchg
ret
pop
mov
out
gs
pop
test
and
inc
xor
xor
pop
xor
mov
xchg
scas
loop
pop
adc
fldl
cmpsb
rcr
adc
or
leave
hlt
jmp
mov
stc
stos
lods
scas
inc
mov
pop
push
jae
add
pop
push
push
push
push
fnop
pop
pop
pop
pop
test
cmp
cmc
push
add
pop
push
sub
pop
or
push
jo
test
pop
dec
inc
cld
lea
push
call
subb
ja
mov
and
mov
aam
adc
sub
push
pop
xor
movsw
mov
mov
fisttpll
jecxz
xor
ja
ds
rcrb
scas
inc
iret
xchg
insl
mov
ss
aas
sbb
and
js
push
push
js
push
pop
pop
pop
cmp
nop
pushl
pop
push
mov
pop
push
cmp
pop
add
ja
push
jns
push
inc
pop
pop
clc
shl
push
jp
clc
pop
shl
jbe
rol
test
je
cmp
push
push
jb
test
pop
pop
push
push
jae
rol
pop
pop
push
shr
pop
nop
push
push
shr
pop
pop
or
rol
jno
rol
clc
add
xor
loop
jecxz
sti
sub
clc
push
jp
in
mov
inc
loop
ss
std
js
pop
icebp
in
cmc
mov
mov
xlat
out
aaa
ret
fbstp
cli
mov
mov
cmp
fucom
lds
out
cmp
xchg
pusha
fdivl
in
pop
insb
jmp
sub
pop
lea
mov
xchg
sub
out
stos
fldt
xor
les
push
sbb
dec
xlat
and
mov
fisttpl
in
out
push
mov
xor
pop
jmp
pop
jg
iret
roll
mov
ss
fsubrs
repnz
jmp
mov
inc
lcall
sub
into
mov
test
sbb
mov
test
leave
shr
xor
xchg
pop
xchg
shl
mov
jg
inc
hlt
jge
lods
out
je
dec
gs
mov
mov
out
jb
mov
into
cmp
cmpsl
jae
add
inc
inc
inc
inc
loop
jecxz
cmp
xor
inc
iret
cmp
cmp
and
inc
push
add
push
pop
js
mov
div
push
dec
cmp
mov
cwtl
iret
ficoml
sbb
clc
jp
xchg
dec
xchg
pop
scas
cmp
pop
clc
idivl
imul
jle
dec
int
add
sahf
roll
xchg
dec
leave
push
aas
xor
cmp
push
and
pop
push
test
pop
push
push
pop
add
pop
push
inc
pop
loop
jecxz
inc
mov
inc
jne
inc
dec
jl
push
push
dec
pop
pop
mov
push
add
push
or
pop
dec
jne
push
sub
pop
push
movzbl
push
push
mov
pop
pop
push
test
pop
cmp
push
push
inc
pop
pop
shl
cld
loop
pop
cld
test
push
je
push
add
pop
nop
nop
push
movzbl
sar
lea
loop
pop
push
or
pop
jae
inc
dec
js
push
push
cmp
pop
pop
rol
cld
dec
jne
push
call
inc
ja
xchg
push
and
stos
jmp
xchg
dec
daa
adc
in
pop
sbb
cmp
in
inc
sub
fcoms
dec
enter
adc
pop
jns
repz
jns
cmp
rcl
sbb
in
push
pop
mov
jns
sub
and
test
adc
popf
test
push
sarb
xchg
xor
xchg
shll
out
insl
xorl
les
shl
xchg
loopne
jne
test
mov
jmp
hlt
daa
xchg
cmp
arpl
and
mov
dec
mov
xchg
rcrl
dec
in
push
xor
sbb
and
nop
aad
xchg
jg
push
fadds
incb
jnp
dec
dec
mov
into
cmp
int3
cld
aad
popf
in
rcl
xor
inc
ret
pop
lahf
test
popa
xlat
clc
jbe
ret
outsl
loopne
or
xor
xchg
loop
stos
xor
cmp
nop
xlat
and
xchg
test
test
sub
xchg
jne
mov
ficoms
outsb
jl
loopne
xchg
cmpsl
repz
jae
pop
adc
mov
rorb
push
popf
and
pop
xchg
push
nop
imul
sub
mov
int
pusha
adc
sub
dec
loope
jg
les
pop
mov
xchg
shr
out
adc
pop
fisubrs
inc
jecxz
stc
sub
repz
das
aas
test
add
ds
push
jae
in
pop
mov
dec
leave
popf
outsl
stos
mov
jecxz
iret
aad
pop
jae
lidtl
mov
test
and
cmpsl
mov
ret
fs
outsl
dec
jne
jg
mov
jge
adc
jmp
out
xor
adc
inc
pop
jmp
mov
arpl
add
aaa
mov
mov
inc
inc
mov
pop
andb
fwait
scas
js
cmp
mov
xor
pop
dec
mov
popf
jg
sub
out
cmp
fbld
push
ror
sbb
mov
push
in
int3
loop
icebp
ret
mov
push
xchg
pop
pop
inc
cs
mov
sbb
popa
mov
push
aad
pop
mov
sbb
stos
cmpsb
sub
add
jnp
adc
daa
inc
enter
aam
ja
ficoml
lahf
les
stos
cmp
imul
inc
xchg
dec
aam
mov
inc
je
mov
add
xchg
inc
adc
icebp
pop
movb
fucom
or
cmp
ljmp
xchg
xor
out
mov
adc
outsl
mov
mov
mov
dec
nop
inc
lock
push
mov
jmp
sbb
sbb
cmp
insl
mov
and
in
mov
add
test
out
push
sub
mov
sub
mov
and
push
stos
in
sub
push
ja
nop
mov
ljmp
mov
push
sub
pop
cwtl
ja
fisubrs
xor
jp
fisubrl
mov
jecxz
adc
push
shrb
and
push
cld
es
lea
xor
xchg
fcmovnb
lods
addb
gs
mov
fsubrl
ss
jbe
xorl
cwtl
dec
in
movsl
int
mov
sub
loope
add
pop
push
and
es
mov
push
hlt
fldcw
jo
sbb
jp
lcall
out
loop
cmc
andl
test
arpl
push
xlat
icebp
call
dec
rol
mov
stc
shrb
hlt
inc
cld
loopne
loop
inc
clc
insl
cmp
insb
stos
imul
les
leave
insl
adc
shll
gs
push
inc
jp
loopne
scas
mov
outsl
mov
mov
stos
push
mov
cs
pop
ret
and
mov
subb
sti
int3
shr
cwtl
repz
out
inc
or
aad
cs
in
imul
aam
jge
out
in
rcrb
ret
mov
sub
lods
xchg
push
or
mov
inc
aaa
mov
mov
movsb
xchg
out
or
xchg
int
daa
push
inc
test
jl
hlt
std
cwtl
into
inc
mov
les
mov
sub
xor
test
rolb
scas
int
aam
xchg
into
cli
lods
add
dec
dec
or
mov
in
js
sbb
stos
rclb
ret
out
xchg
sbb
fcomip
popa
mov
add
inc
mov
jns
aad
movsb
sbb
xchg
xchg
cmp
ss
shrl
mov
out
rorb
mov
in
xor
or
movsb
sub
dec
je
aad
lcall
fcomp
xor
sbb
ret
in
int
aas
out
add
pop
lods
xor
adc
popf
sub
ficompl
xchg
test
mov
mov
call
sub
dec
pushf
push
pusha
int
lahf
data16
idivb
rcl
popf
in
pop
in
pmaxub
and
aam
cmp
jo
jl
aam
mov
mov
cld
fnstsw
aam
in
ljmp
in
orb
mov
out
fdiv
idiv
pop
mov
push
rcl
xor
xor
lcall
jno
subb
inc
lahf
loope
loope
inc
test
mov
hlt
stos
push
mov
aad
push
clc
call
lods
ds
pop
mov
aam
fldenv
pushf
adc
in
cmp
mov
outsb
pop
ss
jle
shrl
ret
in
aaa
mov
push
das
in
addr16
cmpsb
mov
inc
fwait
int3
in
dec
roll
adc
in
mov
pop
out
mov
sarl
push
in
hlt
inc
mov
mov
mov
popa
rcrb
sub
dec
dec
mov
aam
jp
ds
pop
sbb
xchg
out
jmp
addr16
popf
add
idiv
xor
mov
fldl
icebp
jae
mov
aas
cmpb
jmp
outsb
outsl
js
lock
or
push
push
jbe
gs
lahf
cs
pop
mov
cmc
or
jns
dec
into
xchg
sub
leave
cmp
lods
fcoml
or
into
push
or
addr16
in
mov
xor
push
stos
dec
out
or
leave
pushf
cmp
cmpsb
dec
mov
cmp
xchg
ljmp
dec
movsb
mov
mov
fisttpl
mov
push
push
jns
sub
dec
push
movsb
hlt
sahf
scas
lret
rcrb
dec
movl
mov
arpl
push
sbb
lea
jnp
test
sub
iret
cmpsl
xchg
push
not
outsb
fwait
jmp
add
xchg
cs
enterw
fcoml
adc
std
arpl
mov
add
adc
test
subl
pop
aam
pop
imul
in
bound
dec
repz
xchg
xchg
movsb
enter
icebp
fisubl
mov
cld
xchg
mov
cmp
stos
test
xlat
mov
mov
xor
and
cli
mov
or
stos
pop
stos
mov
cli
adc
test
repnz
xor
inc
and
xchg
mov
and
pop
nop
ret
sbb
jecxz
cltd
out
dec
cmp
jae
ja
jg
outsb
mov
mov
inc
mov
xor
mov
icebp
xchg
cld
sahf
sbb
arpl
adc
xchg
xchg
push
mov
add
xor
and
mov
cmp
int
fistpll
pop
cli
mov
fcomps
test
sbb
mov
gs
mov
xlat
aam
xor
das
cmp
ret
inc
iret
mov
stos
mov
out
cmp
les
add
test
fsubl
sbb
les
push
cmpsl
mov
push
mov
gs
pushf
xchg
add
jno
bound
mov
cli
mov
jmp
mov
and
xchg
test
push
aam
pop
hlt
icebp
xor
xor
xchg
add
jmp
cmp
cmpsl
out
mov
mov
mov
mov
push
mov
adc
sbb
xchg
jae
outsb
mov
aad
dec
aas
sbb
sbb
adc
enter
jge
pop
jbe
andps
cmp
rorl
cmpb
std
hlt
scas
loopne
andb
shrb
and
test
fldt
add
cmc
sbb
mov
pop
jns
and
bound
pop
repnz
addr16
movsb
pop
popa
xchg
stos
scas
push
cli
ss
pushf
pop
sub
rcl
jle
pop
ret
sub
add
cli
or
inc
mov
lret
int3
xor
push
fwait
cmpsb
shl
loop
inc
xor
and
mov
icebp
xor
bound
lea
movsl
in
popf
mov
frstor
jne
mov
cmp
fs
in
daa
enter
pushf
xlat
aad
push
shrb
test
sub
or
xchg
lods
movsb
xor
sbb
add
xor
sbb
movsb
gs
cmp
push
mov
aam
fldenv
sbb
sbb
mov
sub
add
sbb
jo
or
pusha
cmp
jmp
loopne
jmp
push
sbb
testl
outsb
inc
push
js
cmc
sub
ljmp
jmp
cmp
sbb
bound
mov
pop
data16
push
cmpsl
mov
loopne
adc
adc
dec
mov
sub
repnz
push
movsb
addr16
pushf
dec
pop
push
fwait
pusha
mov
jns
xor
int
dec
int3
or
popa
repz
xchg
jg
push
inc
add
push
inc
and
testl
dec
jg
mov
ljmp
dec
xor
hlt
adc
mov
lret
loope
scas
dec
icebp
mov
mov
inc
jl
lods
mov
inc
mov
rcrb
addr16
mov
xchg
std
or
cwtl
xchg
in
movsb
lock
ds
bnd
lcall
fst
cmpsb
insl
pop
mov
adc
test
xlat
out
xchg
dec
push
jg
mov
jmp
in
sub
lcall
dec
pop
or
fnsave
add
xchg
jne
jp
ret
daa
adc
adc
outsl
mov
inc
test
pushf
pop
dec
das
xchg
jp
fstps
dec
or
cmp
push
add
xchg
push
lahf
jbe
mov
inc
les
std
mov
mov
dec
sub
test
fs
jecxz
add
sbb
pop
push
sbb
addr16
xor
mov
pop
repz
dec
add
jae
scas
nop
sti
cmpsl
sub
mov
paddb
daa
inc
jbe
xchg
lcall
cmc
sbb
loop
sbb
out
pop
fsubs
push
fidivs
pop
sbb
jo
and
int3
test
test
inc
push
push
std
fadds
pushl
mov
jo
sbb
int3
stos
in
movsl
in
jns
or
mov
mov
js
in
or
mov
sti
cmp
dec
or
sub
xchg
inc
ja
jle
sti
mov
out
out
sub
test
ds
iret
fadd
and
sub
test
test
push
je
xchg
gs
xor
iret
arpl
mov
pop
inc
and
out
orb
jp
mov
js
rcll
call
dec
xchg
in
xor
dec
xlat
cmpsb
xor
test
xor
sub
les
inc
ret
inc
sub
iret
cmpsl
mov
xchg
idivl
sbb
xchg
outsl
outsb
pop
lock
cmp
imulb
outsl
pop
into
scas
cmp
sub
outsl
cmp
ljmp
ss
jbe
xlat
mov
frstor
xor
adc
in
inc
out
push
in
mov
mov
data16
mov
fs
fmuls
in
test
sub
jae
adc
fstp
xor
stos
jl
aaa
daa
pusha
call
mov
pop
xor
dec
imul
shrb
pop
mov
fimuls
pop
xchg
stc
lods
jns
shll
mov
clc
inc
loop
or
lods
add
lret
xchg
outsb
call
loop,pt
scas
cmp
or
pop
cld
inc
iret
and
sub
out
leave
iret
in
out
inc
pop
jns
mov
fs
ret
insl
mov
outsl
add
cli
hlt
or
pop
repnz
ret
adc
push
push
nop
bound
pop
pop
mov
or
and
sar
inc
pop
lds
fwait
into
andl
shr
jle
and
cmpsl
xor
gs
test
jbe
js
cmpsl
push
mov
stos
mov
sbbb
sbb
jns
adc
enter
aad
int
pop
add
test
popa
outsl
pop
pushf
xor
jmp
pop
push
ljmp
stos
add
mov
inc
scas
nop
sbb
and
into
dec
sub
fsub
adc
stos
mov
mov
insb
lcall
cmp
popa
js
rcrl
lock
mov
stos
test
adc
out
shrl
or
in
mov
dec
std
les
in
mov
inc
data16
stos
hlt
cmp
cmpsl
out
call
jl
sub
popa
frstor
ja
adc
push
imul
pop
movsb
jae
sbb
push
std
jbe
push
fcompl
fcompl
dec
pop
into
out
sti
imul
in
hlt
sub
sub
mov
inc
mov
insb
rorb
jl
in
lret
xchg
add
je
mov
cmp
or
xorl
in
jnp
pop
xor
xlat
xor
add
push
dec
popf
inc
notl
sti
scas
cmp
cwtl
xchg
in
xchg
xor
les
and
enter
pop
jge
push
mov
shrl
imulb
iret
addb
andl
dec
flds
mov
add
repnz
adc
or
or
jg
mov
sbb
pop
fwait
adc
mov
loop
xchg
std
pop
imul
std
push
int3
xchg
shlb
enter
mov
arpl
xor
out
push
popa
pusha
js
lahf
push
mov
lcall
jne
leave
mov
mov
push
jo
dec
sub
xor
sbb
xor
arpl
push
movsb
mov
lcall
cs
sub
mov
mov
inc
mov
mov
scas
aad
es
mov
ret
xchg
es
or
pushf
sarb
jne
jle
aam
jno
imul
cli
enter
add
jbe
pop
sahf
frstor
push
pop
cli
in
and
mov
movsb
mov
mov
pusha
mulb
lea
sti
das
jmp
ljmp
test
ss
test
loopne
xchg
cs
mov
movb
cmp
sahf
add
inc
cmpsl
inc
cmp
lods
and
enter
xchg
xchg
js
inc
into
outsl
into
mov
push
das
fdivs
push
hlt
add
outsb
ljmp
or
gs
outsb
mov
repnz
push
add
pop
jg
mov
jle
pop
enter
std
dec
sbb
sbb
testb
or
mov
sub
mov
test
fs
daa
out
enter
ss
shrb
clc
sub
dec
xchg
aaa
aaa
inc
or
mov
mov
in
and
jno
mov
sub
xchg
call
inc
lahf
clc
mov
call
mov
das
pop
popa
pop
jbe
sbb
pushf
add
lret
ds
cmp
jne
ja
xchg
icebp
das
lgs
jbe
or
and
inc
test
cmpb
ret
mov
xchg
stos
mov
outsb
jnp
pop
aam
ja
jae
xor
fisttpl
dec
xor
jnp
jae
flds
pop
bound
repz
sub
pop
sub
data16
inc
jmp
cli
adc
mov
test
movsl
xlat
movsb
mov
add
pop
lock
or
xchg
mov
xchg
inc
push
jg
dec
cmp
stos
lods
pushaw
scas
adcb
jmp
cmp
jno
insl
mov
push
imul
xor
push
lea
popa
push
mov
std
rcr
cmc
add
lds
lcall
cmpsl
loopne
pop
cmp
inc
or
ja
sarb
test
and
popf
shll
mov
gs
or
push
insl
sti
pusha
pushf
sbb
pop
clc
cmp
es
ret
inc
sub
xchg
mov
push
out
pop
dec
add
cmp
push
sub
cmp
mov
inc
mov
aaa
lods
in
push
shlb
je
mov
mov
or
fisttpll
jns
nop
jne
inc
les
adc
aad
or
push
mov
adc
inc
orl
ljmp
pop
cmp
arpl
fimuls
hlt
addr16
lods
xchg
jge
enter
xchg
adc
or
xchg
pop
popa
add
jno
and
xchg
push
fisubs
in
fs
icebp
shr
xchg
xchg
movl
jb
nop
and
aam
jno
ficomps
lcall
sub
add
push
inc
in
out
xchg
xlat
test
push
mov
inc
mov
push
fwait
inc
movsl
sub
mov
ja
xor
cmp
push
fsubs
jnp
in
aam
xor
sub
cli
adc
adc
or
nop
out
sbb
or
clc
ds
cmc
jg
lock
dec
aas
and
mov
push
push
std
int
ljmp
cmc
sub
mov
inc
sbb
sahf
out
out
xchg
std
gs
lods
fadd
aad
dec
cmp
cwtl
sbb
or
mov
aas
test
fists
xchg
cmpsl
popa
add
loope
test
cmp
int3
sbb
mov
popa
popf
cmp
dec
insb
jnp
stos
or
lahf
pop
fstl
pop
in
iret
xor
xor
repz
bound
js
insb
js
loopne
lahf
and
mov
imulb
rclb
addr16
pop
loopne
and
inc
cmc
cmp
cs
scas
rcll
ljmp
js
shll
orl
or
aaa
imulb
push
sub
loop
adc
pop
icebp
das
cmp
ja
movsl
imul
les
and
or
scas
push
mov
popf
aam
xor
xor
inc
xchg
mov
mov
jmp
aas
jb
dec
and
inc
adc
stos
mov
mov
or
sub
das
inc
lods
leave
and
hlt
xchg
push
push
daa
imul
shr
out
xor
lea
xchg
push
fsubrs
pop
je
dec
xchg
sarb
je
stos
adc
les
mov
mov
push
sub
push
stos
outsl
mov
iret
dec
fstpt
push
daa
imul
mov
bound
ljmp
iret
cmpsb
in
pop
xchg
out
adc
popf
data16
add
sbbl
pop
adc
les
jecxz
sub
xchg
dec
sub
sti
or
or
rclb
cli
sbb
sub
dec
xor
nop
mov
cmpsb
outsl
mov
test
int3
and
cwtl
mov
or
lods
loopne
mov
adc
pushl
mov
imul
int3
test
xor
sub
mov
in
and
xor
dec
mov
in
push
mov
orb
aam
or
sub
rclb
cwtl
xor
push
std
ljmp
xor
faddp
inc
sarl
cmp
cld
sub
icebp
data16
pop
and
aas
scas
add
pop
lret
xor
in
daa
imul
daa
mov
adc
pop
icebp
push
jae
jnp
mov
out
mov
xor
fildll
xchg
pop
inc
jb
xchg
pop
lods
pop
push
inc
fucomi
mov
mov
lea
mov
lock
adc
les
or
push
jbe
or
hlt
and
sti
jbe
lret
xor
fwait
js
jbe
push
cmpl
popa
inc
shrl
mov
int3
int
mov
pusha
popf
popa
out
cld
push
fimull
icebp
outsb
adc
or
fisubl
cli
or
inc
sub
cmp
dec
les
mov
mov
sahf
ss
test
and
mov
std
push
mov
pop
mov
xor
sub
sbb
sub
push
push
out
sbb
es
mov
mov
or
and
or
add
sub
mov
sub
jmp
aas
scas
mov
ss
std
inc
jp
sbb
stc
xor
test
out
jbe
pop
repz
adc
sbb
cmp
stc
inc
mov
and
mov
pushf
rcll
xchg
sbb
mov
repnz
add
movsl
imull
decb
hlt
ret
lret
movsl
or
sarl
mov
inc
pop
sbb
xchg
mov
jmp
aam
daa
scas
mov
loope
mov
jmp
scas
dec
loope
or
adc
sub
cmp
add
push
xchg
jmp
xor
mov
test
mov
cmp
aaa
xchg
das
xchg
or
loopne
subl
xchg
inc
cmp
add
mov
add
enter
aaa
hlt
gs
cltd
mov
shl
out
popa
mov
rcl
popa
call
mov
push
xor
mov
inc
cltd
stc
dec
lcall
push
sbb
jl
xor
fwait
sub
loop
push
pop
fcomp
adc
leave
hlt
pushf
add
js
imul
push
jb
cmp
cmp
pop
sbb
jl
sub
xor
ss
rcl
pop
sub
rcll
or
xor
adc
add
or
add
cltd
cli
cmp
jo
pushf
adc
jbe
xor
push
jmp
add
and
loope
insl
jge
sub
cmp
xchg
mov
insl
rcrl
add
js
xor
stos
pop
jne
mov
mov
imul
gs
sub
pop
or
test
pcmpeqw
jp
fcoml
xchg
sbb
jl
jge
lods
insb
and
adc
mov
adc
cmp
sarl
aam
inc
repz
outsl
xor
call
mov
dec
lods
cmp
pop
cli
and
mov
iret
xchg
jbe
mov
xchg
in
mov
test
or
xor
lods
mov
iret
dec
cmc
stc
popf
data16
sbb
pushl
mov
push
xchg
scas
mov
test
dec
sbb
ds
int
jb
sahf
shll
cmp
or
aaa
pop
mov
pushf
cmp
mov
inc
cmp
scas
sti
mov
sub
mov
cmp
nop
pop
jge
mov
pop
ja
iret
push
jnp
iret
adc
mov
dec
mov
jp
fistl
pop
cld
mov
fstpl
pop
pop
mov
iret
mov
fisubrl
ds
jo
fcoml
mov
jae
cld
mov
xchg
shrl
and
shrb
inc
mov
lock
addr16
cmpsl
in
adc
dec
imul
dec
out
adc
xor
movsb
and
arpl
sbb
or
lea
rorb
popf
mov
mov
bound
in
lret
loopne
sbb
lcall
mov
cli
and
add
rolw
dec
ljmp
fistl
xchg
jnp
cmc
cmp
mov
xchg
test
and
hlt
inc
or
inc
add
sti
fdiv
mov
in
dec
adc
cs
xchg
or
push
iret
add
pop
mov
daa
pop
lds
xor
adc
cmc
pop
ljmp
sub
mov
inc
mov
jmp
push
jmp
ffree
cmp
cs
sti
inc
pop
fiaddl
cmp
test
mov
mov
push
or
jp
xchg
insl
adcb
jp
cmp
stos
jae
lret
jnp
sub
mov
xchg
cltd
lret
jnp
aas
dec
adc
xor
test
ret
dec
mov
das
xor
xchg
loopne
push
and
mov
test
cmp
push
cld
scas
out
sarl
aas
inc
ror
mov
sub
jo
mov
enter
shll
cmp
pop
adc
imul
pop
stos
ret
daa
mov
cld
out
pushf
inc
cwtl
jg
dec
push
testb
fs
rcl
out
aaa
push
jmp
xor
daa
xlat
dec
pushf
xchg
cmpsb
mov
into
imul
std
call
movsl
inc
xor
ret
ss
imul
rolb
mov
adc
adcb
ss
setnp
lods
std
cmpsl
adc
fs
mov
push
in
js
xchg
add
or
out
jns
aam
mov
lcall
sar
push
out
fstps
or
inc
test
gs
nop
scas
je
mov
sbb
and
stos
xlat
cmp
and
xchg
test
mov
lods
nop
lcall
dec
andl
icebp
jg
mov
cmpsl
out
je
fbld
enter
rclb
icebp
cmpsl
pop
loope
pop
pop
pop
push
fbstp
cltd
mov
mov
push
testl
mov
outsl
aam
jg
jmp
cmovns
bound
das
fdivrl
loopne
call
andb
cmp
adcb
or
inc
aam
or
loope
loop
icebp
mov
dec
push
notl
sbb
imul
es
pop
sti
mov
fmuls
inc
repnz
jno
es
dec
repnz
push
mov
bound
pusha
sbb
sub
add
pop
mov
sub
xchg
dec
inc
mov
orb
loope
dec
xor
sahf
insl
cmc
lcall
adc
mov
jge
neg
loopne
jbe
mov
cmpsb
les
icebp
push
and
fwait
inc
lahf
sub
push
adc
pop
popa
fs
mov
sbb
xchg
xchg
insb
scas
xchg
pop
pop
cmp
inc
xlat
or
inc
mov
sbbb
insl
test
inc
jmp
cmpsl
add
out
push
jmp
out
mov
mov
leave
mov
push
inc
cltd
js
jl
insb
outsb
adc
stos
mov
mov
mov
out
aad
out
out
mov
data16
data16
out
push
sbb
pop
cmp
orb
fs
incl
stos
lods
jne
mov
mov
xchg
std
divl
rorb
pushf
test
and
inc
jne
add
or
inc
and
inc
inc
push
mov
dec
jecxz
sub
das
cmc
arpl
jne
jle
sub
inc
mov
mov
mov
ljmp
incl
imull
and
mov
jbe
fstp
pop
fucomip
pop
xchg
popfw
sub
out
dec
cltd
popa
aas
cmpsl
mov
mov
and
test
icebp
mov
adc
mov
cmp
or
cmp
test
in
cmp
or
mov
neg
sahf
call
mov
mov
nop
andb
ret
sahf
arpl
aaa
inc
xchg
mov
loopne
shl
lahf
fidivl
mov
xchg
leave
fldlg2
and
cmp
inc
adc
pop
pop
jmp
iret
notb
in
pop
mov
or
cmp
or
mov
fidivs
mov
pushf
imul
std
jb
mov
xchg
and
sub
cmp
add
mov
lret
pop
mov
mov
mov
mov
outsl
adc
pop
xchg
pop
test
mov
pop
cmp
popf
outsl
std
dec
mov
xchg
and
test
and
lods
jae
jnp
insl
pop
mov
adcb
pop
dec
in
ds
lods
in
testl
les
sbb
fmuls
bound
cmp
icebp
lods
fldl
testb
mov
movsb
sti
cli
sub
jne
std
pop
mov
cmp
mov
sbb
xor
adc
das
cmp
and
loopne
imul
enter
lds
enter
insb
mulb
adc
xchg
mov
pop
or
aas
aam
in
jge
imul
bound
in
jecxz
test
roll
cmp
fwait
cmp
dec
sahf
dec
fisubl
enter
lcall
hlt
xorb
adc
inc
outsb
sbb
and
daa
lahf
or
jo
jns
gs
adc
shll
insl
jecxz
push
mov
out
ffree
adc
jecxz
mov
cmp
mov
rcrb
jno
mov
or
cmp
jae
lahf
adc
cmp
jno
mov
std
mov
dec
shr
cltd
sbb
xlat
push
xchg
dec
out
inc
aad
adc
inc
mov
imul
xchg
cld
mov
push
adc
jecxz
fs
iret
enter
cmp
sbb
jo
movsb
mov
notb
pcmpgtb
je
sbb
mov
je
xlat
sbb
mov
lds
out
or
lods
cmp
test
hlt
jg
lds
sti
pop
or
and
pusha
jne
xchg
das
loope
cmp
xchg
loop
xchg
es
fidivs
in
cmp
and
std
scas
lods
les
stc
xor
lock
int3
or
sbb
push
mov
imul
add
fildll
movsl
gs
ljmp
jno
pop
push
inc
mov
and
hlt
mov
pop
sbb
clc
fsqrt
jo
cmp
daa
cmp
xor
mov
ret
xchg
mov
sbbl
add
popf
nop
mov
lods
inc
test
fiadds
jl
das
aas
rcrl
insb
aam
mov
dec
insl
loope
adc
add
lret
lods
test
fisubrs
dec
dec
add
dec
outsb
in
jmp
mov
loop
popf
xchg
pop
ficomps
adc
data16
fisubl
xlat
in
sub
xor
xchg
lahf
aam
cmp
hlt
or
outsl
cmpsl
cmpsl
inc
cli
dec
push
popf
mov
fstpl
sub
sub
dec
push
push
push
ret
inc
xorl
addr16
out
lahf
cmp
lret
sub
sti
push
dec
jne
shrl
sub
aad
lret
xor
scas
enter
xchg
fwait
pop
ja
hlt
inc
pop
into
dec
rcrl
into
push
shlb
nop
pushf
mov
push
sahf
out
mov
idivb
mov
mov
add
outsl
movsl
daa
filds
pop
test
rcrl
sbb
sti
or
mov
test
xlat
stos
ret
out
ret
repz
shr
pushf
ja
ss
mov
mov
cmp
stos
adcb
mov
inc
inc
push
mov
push
pop
mov
fdivr
es
into
test
jmp
js
xchg
enter
outsl
ds
loopne
cmp
shll
xchg
jno
dec
cmp
add
dec
cltd
cmc
scas
cmpsl
mov
xlat
mov
xchg
nop
rorb
jae
scas
imul
push
mov
ljmp
int3
lret
push
pop
std
stc
sbb
scas
xchg
adc
inc
inc
push
outsb
rol
dec
jl
mov
push
lock
shl
std
fmull
bound
fcoml
xor
mov
adc
pop
cmc
movsb
movsl
jl
test
add
dec
cmp
cwtl
lret
add
testb
rcrb
insl
lcall
leave
out
cmp
mov
imul
rolb
push
or
xchg
test
call
xchg
scas
fs
mov
sbb
sti
stos
pop
or
insl
cwtl
repnz
stos
xchg
pop
fildll
sbb
bnd
cmc
sbb
fsubs
sbb
das
mov
fsubrl
pop
inc
pop
je
sar
mov
mov
sub
imul
in
mov
xchg
push
dec
int3
lds
sarb
ret
movsb
movb
insb
cmc
lret
push
or
add
xor
mov
cs
sub
mov
mov
pop
enter
movsb
data16
scas
lods
aaa
pusha
test
inc
cld
sub
or
mov
mov
fsubs
cmc
test
jp
mov
fcompl
or
xchg
out
fnstenv
into
and
jb
fmuls
and
sub
cmp
cld
push
inc
cmp
cmp
and
test
cmpsl
imul
je
in
xchg
mov
sub
or
fldl2t
pop
into
and
mov
xchg
inc
mov
pop
jne
stos
shlb
loopne
pop
xor
hlt
sub
scas
mov
leave
or
ret
adc
and
repnz
cmp
xor
inc
mov
or
out
stos
and
fimuls
sub
in
jbe
es
shl
sub
mov
sbb
dec
push
pop
push
icebp
xchg
mov
push
cwtl
add
cld
mov
push
loope
and
jecxz
add
scas
mov
fsubp
add
mov
lret
pop
adc
mov
sbb
hlt
add
cld
adc
in
test
fbstp
dec
xchg
gs
fst
fldt
and
sbb
jp
roll
cmp
pop
pushw
jb
cmp
cmpsl
push
lds
imul
or
arpl
int
sahf
jge
inc
call
jno
ds
dec
jge
jle
push
pop
imul
jae
pop
jne
pop
mov
push
and
in
pop
push
jmp
test
add
push
popa
fbld
lods
sub
divb
push
pushf
cmpb
pop
fwait
sbb
imul
std
dec
cmpsb
lcall
lock
gs
push
sbb
pusha
cmp
or
pusha
and
dec
mov
movsl
dec
mov
je
jbe
hlt
fwait
lret
jmp
xchg
pop
pop
repz
dec
mov
jg
insl
push
and
mov
xor
mov
negb
push
jbe
sarl
adc
mov
repz
push
and
pop
add
fstpl
jbe
hlt
hlt
add
cmp
mov
jge
push
mov
sahf
cmpl
lahf
lea
push
pop
sbb
fstl
pop
pop
or
shr
popf
dec
repz
in
lea
cmp
push
out
add
out
add
fists
pop
mov
sarb
sub
scas
pushl
addr16
in
aaa
stc
pop
xchg
and
dec
fadd
pop
cmp
adc
xchg
dec
lret
mov
popa
pop
sahf
adc
aaa
hlt
orb
or
or
or
and
rcr
and
fsubp
xchg
shlb
je
dec
das
xlat
subb
or
add
mov
jbe
sbb
pop
in
cs
arpl
xor
das
xchg
daa
sbb
push
sti
jge
jns
and
cmc
pop
pop
add
scas
xlat
iret
out
or
adc
js
das
jnp
pop
roll
test
pop
scas
repnz
dec
dec
dec
mov
jmp
push
mov
pop
repnz
dec
aaa
gs
ret
hlt
stos
outsb
in
push
loope
scas
push
push
rolb
inc
int
leave
loope
mov
push
pop
addr16
cld
aaa
add
jp
lahf
jns
stos
movl
mov
lea
push
mov
jnp
dec
cs
mov
xchg
push
sbb
and
hlt
lret
cld
pop
pop
and
cmpsb
inc
xchg
lods
int3
sar
loope
bound
jb
or
push
or
cwtl
add
jecxz
add
out
pop
inc
push
push
stc
outsl
cld
aaa
aam
jl
adcl
push
inc
dec
xlat
add
fst
add
aad
and
inc
pushl
adcl
in
pop
in
push
xorb
scas
sub
lahf
xchg
jnp
push
mov
push
inc
jp
imul
cmpsb
sti
stos
adc
cmpsl
jns
aam
jg
hlt
cmpsb
xchg
fnstenv
popf
dec
outsb
jmp
jnp
pop
stos
aaa
outsl
xchg
icebp
sbb
jle
ret
cmp
icebp
daa
roll
push
sbb
mov
loop
pop
mov
daa
imul
add
fbstp
dec
clc
sbb
and
or
mov
out
out
mov
or
mov
sbb
dec
ds
adc
cmp
loopne
dec
mov
mov
out
pop
push
adc
cs
cmp
jmp
jb
outsl
xor
cli
addr16
rcrb
push
push
lods
or
adc
lret
and
cmpsb
subb
shrl
sti
cmp
std
or
inc
jae
stos
int3
mov
xchg
insw
iret
sbb
inc
fsubl
lea
lcall
xchg
lds
nop
test
mov
les
xchg
sbb
sub
xchg
pop
pushf
pop
or
fldt
jb
dec
ds
jns
jmp
mov
add
scas
in
out
fbstp
in
inc
sbb
aas
nop
pushf
cwtl
pop
ret
cmp
insb
int3
ja
test
clc
ret
mov
leave
stos
sub
fiaddl
sbb
and
xor
jnp
loope
lret
lret
push
bound
insl
push
jmp
xor
push
out
int3
cmp
sub
adc
push
cwtl
ds
in
cltd
cmpsb
addb
loop
pop
movsb
es
pop
call
inc
fsubrl
scas
jno
inc
out
mov
push
push
shr
daa
lds
jns
mov
pushf
mov
psubusb
je
push
pusha
ja
xorb
dec
movsl
je
push
jb
inc
inc
mull
push
adc
push
imul
mov
fstps
xlat
cmp
pusha
mov
out
loopne
push
adc
rorl
dec
test
cli
and
loopne
insb
ds
test
add
sub
lcall
sti
rcrl
mov
into
rol
xor
sahf
insb
stos
cs
cmpsb
fsts
mov
mov
das
lock
arpl
out
adc
mov
sub
daa
inc
mov
and
roll
pop
pop
in
in
rorb
mov
pop
int
je
js
or
push
adc
fildll
adc
xor
push
sbb
in
les
sar
sub
dec
jns
repnz
inc
movsb
shlb
outsb
or
inc
pop
int
in
stos
cmpsl
mov
cmp
stc
inc
insb
mov
xlat
stc
fnstsw
rcll
inc
inc
mov
push
inc
sbb
fbld
loopne
iret
leave
scas
sub
addr16
adc
jl
pop
aaa
lea
dec
mov
fildll
insl
inc
aam
jl
jns
mov
aam
pop
mov
cmp
and
fnstenv
jns
ljmp
pop
dec
addr16
mov
push
push
push
push
xorb
fiaddl
and
inc
movsl
dec
dec
or
xchg
sti
je
inc
test
cmp
pop
inc
mov
call
mov
jp
mov
out
pop
sbbb
mov
or
mov
and
ds
es
or
push
and
mov
in
enter
pop
adc
inc
and
fistps
sbb
add
stos
xchg
repz
xchg
sub
insb
mov
push
sbb
nop
or
push
shr
stc
mov
mov
cmpsl
fistpll
push
cmp
fsubs
call
sahf
add
adc
jle
pop
xchg
push
inc
mov
jns
movsl
cmpsb
cmp
lret
mov
pop
mov
loop
xor
add
lcall
jg
ss
cs
mov
mov
arpl
cltd
cli
aam
mov
daa
cmc
push
add
imul
repnz
cmc
push
ret
push
jp
pusha
pusha
adc
push
sahf
js
sbb
out
sbbl
sbb
push
cmp
push
int3
outsb
in
fcmovnu
mov
repz
roll
mov
cwtl
adc
jbe
sbb
daa
dec
pop
and
lahf
jmp
loope
clc
sbb
fldenv
cmp
dec
fimull
and
push
mov
dec
jmp
aas
fucom
inc
sahf
xorb
bound
and
lods
cmp
daa
lahf
subl
sahf
fdivrs
sahf
lea
into
push
jmp
push
add
push
or
jp
fsubs
in
jae
and
or
lcall
push
imul
add
js
mov
cltd
fs
add
push
lds
fnstenv
scas
dec
pushf
ja
mov
rolb
sub
inc
gs
sbb
pop
cmpsl
movsl
dec
das
fdivs
test
mov
aam
shll
loop
and
sbb
or
insb
add
movsl
test
jge
sar
insl
and
leave
lret
sbbl
adc
scas
jno
mov
pop
push
test
out
test
shlb
push
dec
imul
scas
outsb
das
mov
loope
cmc
xlat
sub
outsb
call
xlat
bound
or
xor
test
or
cs
cli
aaa
cltd
add
mov
cwtl
cmp
push
movsl
push
icebp
cmp
jmp
rclb
pop
in
hlt
push
adc
cmp
scas
aad
data16
xor
inc
rcll
les
xor
jne
xlat
jl
test
cmp
aad
adc
sahf
xlat
std
adc
dec
mov
fnstsw
mov
jns
aaa
pusha
pop
cmp
pop
push
int
adc
ret
jmp
pop
fsubr
adc
bnd
fiadds
add
das
loopne
sub
inc
jo
imul
inc
fmull
js
or
add
mov
pop
mov
mov
pop
sarl
sbb
jne
adc
test
ret
shl
pusha
pop
sti
pushw
adc
adc
test
dec
shr
stc
fidivrs
pusha
adc
rolb
push
mov
out
push
imul
jle
mov
movsl
jmp
fldcw
and
jns
xchg
mov
out
jns
sbb
shlb
stos
push
lods
andl
mov
ret
out
and
mov
in
and
mov
loopne
cld
and
outsl
cmovb
daa
daa
je
insb
jae
push
in
cmpsb
jg
inc
std
xchg
sub
in
hlt
mov
xor
jge
loop
lret
mov
imul
sti
cmp
sahf
sbb
les
js
das
xchg
data16
inc
ljmp
mov
das
sti
fisttpll
js
sub
push
outsl
in
call
cs
leave
js
adc
iret
mov
jp
sbb
out
je
mov
cmp
push
test
lcall
fwait
not
sub
jmp
add
pushf
insb
or
and
xchg
pop
cs
xchg
ret
arpl
addb
xchg
and
dec
imul
mov
or
test
test
fdiv
sbb
jl
sbb
mov
mov
mov
add
out
ja
push
push
rcl
out
jnp
add
add
outsl
jb
sub
out
fdivl
xchg
sbb
lods
fildll
adc
mov
push
data16
mov
or
dec
xchg
xchg
push
out
testl
fistpl
out
dec
scas
insb
add
mov
cmp
dec
adc
dec
mov
and
add
xor
mov
add
xchg
or
mov
xchg
or
fmuls
mov
stos
das
sti
push
mov
jne
dec
xor
push
mov
shr
xor
mov
jmp
nop
xor
inc
arpl
inc
and
inc
out
test
adc
imul
outsl
popf
cld
popa
inc
clc
dec
fldt
testl
jnp
ds
nop
cs
dec
dec
xor
ret
testb
sahf
sub
stc
add
push
sarb
cmp
fsubrs
int3
add
mov
jnp
sub
xchg
movsl
xchg
xlat
or
and
adc
pop
sub
adc
pusha
nop
aad
push
sti
mov
jge
xchg
dec
cmc
and
pop
or
push
add
sbb
add
dec
jnp
push
jg
lods
xchg
fldenv
jl
push
add
int3
and
add
pop
push
push
pop
or
loop
xchg
dec
test
in
test
lea
sub
sub
lea
int3
jbe
inc
sarb
repnz
leave
cmp
icebp
test
ljmp
sbb
and
rorb
outsb
movsl
inc
jecxz
pshufw
mov
mov
xorb
push
imul
mov
rcll
sbb
jl
xor
sub
aas
dec
dec
fs
adc
mov
lea
insl
or
push
jmp
push
mov
imul
dec
int
icebp
shlb
nop
popf
push
orb
ds
rorb
sbb
jns
jae
mov
test
test
fucom
mov
mov
push
out
bound
and
call
sub
sub
mov
xchg
pop
loop
aad
mov
or
aas
ficompl
out
outsb
mov
push
adc
stc
sub
dec
loope
in
imul
cltd
fnstenv
xchg
inc
div
xchg
push
lock
sub
ja
jb
les
cld
jae,pn
mov
stos
cld
or
push
sbb
addr16
push
pushf
pushl
daa
xchg
xchg
add
or
mov
aad
fisubl
icebp
and
mov
ret
dec
add
ds
xor
out
dec
xchg
and
or
hlt
into
test
out
dec
xchg
jbe
in
xchg
lret
es
mov
lret
mov
inc
xor
fwait
sti
adcb
and
xchg
aas
sbb
das
or
sub
adc
mov
xor
cwtl
xchg
adc
pop
fsubl
adc
fadd
adc
clc
push
mov
xchg
sbb
push
nop
add
dec
aad
push
or
and
jne
xor
enter
stos
imul
mov
int3
pushf
shll
inc
insb
push
stos
insb
out
and
cmp
add
lret
subb
sub
mov
lock
xor
fdivrs
push
clc
insl
jo
push
ficoms
mov
stos
fwait
inc
sahf
mov
int
jne
cmp
loopne
xchg
repnz
dec
iret
scas
sub
push
ljmp
or
mov
imull
and
imul
jne
sbb
nop
jno
cmpsb
pop
sbb
xchg
ja
cltd
jo
insb
addr16
xor
add
jp
fst
jne
clc
lahf
jmp
jg
xor
out
xchg
scas
jge
push
cmpsb
adcb
daa
mov
sbb
shrb
xchg
jmp
mov
lds
mov
and
sbb
cwtl
sbb
mov
gs
mov
xor
repnz
push
fwait
cmp
mov
pop
sub
and
jl
xchg
adc
mov
xchg
hlt
fisttpll
imull
movsl
add
push
clc
imul
jmp
out
lcall
fisubs
ud2
mov
push
xchg
mov
movsb
stos
roll
or
sub
pop
cvtps2pi
mov
aad
or
jbe
mov
cmc
test
std
in
pop
xchg
lods
imul
xchg
xchg
insl
xchg
mov
adc
mov
cmpsb
icebp
cmpsl
les
out
out
shlb
insb
aam
cmpl
fs
mov
or
fistl
inc
lds
dec
test
xchg
sbb
cmpsb
mov
sarb
pop
addr16
mov
push
sbb
mov
out
push
movsb
movsl
test
gs
mov
fnsave
or
daa
repz
stos
pop
mov
or
fprem
mov
add
push
addl
adc
es
pop
or
dec
outsl
or
and
sbb
insl
test
test
push
add
ucomiss
dec
mov
and
fsubs
sbb
ds
dec
jmp
test
gs
mov
jne
cmpsb
jecxz
in
ret
mov
shr
xor
pusha
stc
movsl
or
mov
testl
test
shll
push
arpl
or
movsl
fmulp
cmpsb
mov
test
in
mov
push
add
pop
ja
jns
add
mov
ja
inc
add
pushf
and
arpl
jle
shrl
stos
sbbb
mov
mov
or
jae
cmp
jp
lock
es
dec
pop
test
xor
jno
sub
xor
jge
lahf
cmp
repnz
fiadds
ljmpw
sti
mull
mov
mov
pop
inc
orl
or
movsb
xorb
movsb
push
xchg
repnz
scas
xor
mov
ja
adc
nop
jnp
out
nop
lock
and
andb
or
xchg
inc
lds
jae
sbb
or
sub
shlb
push
out
iret
negb
sub
test
xchg
inc
ret
mov
dec
loop
mov
inc
outsb
push
pop
jmp
std
inc
in
or
and
jae
push
xor
pushf
mov
fwait
cltd
negl
dec
mov
push
adc
add
mov
mov
test
xlat
xlat
mov
aam
add
sbb
int
mov
and
cli
ss
jmp
cmpsb
sbb
daa
ss
ljmp
mov
ret
cmp
fistps
adc
in
arpl
test
mov
add
adc
mov
cmp
and
dec
ljmp
cmp
or
icebp
test
popa
cmp
movsb
fsubp
testl
and
xchg
add
cmc
jecxz
jecxz
lret
add
xor
sub
and
adc
adc
loope
inc
add
pop
andb
push
xor
xor
cwtl
scas
and
fsubrs
out
sub
mov
jnp
in
mov
ret
mov
aam
lcall
xchg
repnz
ret
test
aas
cmp
mov
pop
sbb
xchg
daa
cmc
in
xor
cmp
or
mov
xchg
call
inc
sub
shl
mov
out
jo
mov
mov
mov
cmp
xlat
out
xchg
dec
idivl
push
jmp
mov
xchg
out
fildl
push
lods
mov
mov
in
mov
std
jne
push
popa
lds
lahf
add
inc
pop
mov
test
aaa
sahf
fs
stc
pop
mov
movsl
inc
mov
sub
ret
sub
test
or
addb
mov
adc
mov
jne
push
inc
ret
sub
pop
xchg
ret
fldcw
dec
scas
arpl
cmpb
push
pusha
xchg
sbb
xor
ret
xchg
leave
les
xchg
jg
scas
fmuls
pop
jb
cwtl
int
je
hlt
ljmp
ds
les
jg
inc
cli
les
inc
out
test
add
scas
jne
aam
pop
stos
inc
pop
popf
lock
fmuls
test
pop
insb
inc
add
dec
and
lea
xor
inc
pop
mov
mov
mov
out
inc
aad
mov
add
cmp
ljmp
xor
enter
mov
xchg
sti
xchg
in
cltd
pop
mov
out
sbb
loope
ljmp
mov
jl
data16
insl
iret
pop
cmpsb
loope
insl
sub
xchg
ds
jo
iret
ffree
dec
icebp
sub
test
out
inc
dec
arpl
fwait
push
dec
or
dec
cltd
ret
jo
imul
lret
test
pop
loope
jge
cs
testb
in
repnz
pop
mov
imul
xor
stos
data16
jge
sub
out
repnz
cli
push
mov
sub
dec
xrelease
out
push
test
mov
test
es
mov
pop
push
mov
inc
sub
adc
inc
jmp
daa
mov
int3
outsl
test
lahf
cmp
add
add
into
pop
and
cld
enter
add
pop
jecxz
cmpsb
push
sbb
sub
and
pop
jns
fists
mov
xor
decl
or
sbb
imul
les
sub
out
stos
xchg
jmp
mov
test
loope
bound
or
loopne
jg
xor
inc
mov
outsl
repz
ss
dec
enter
sbb
and
jns
mov
inc
cli
push
mov
add
hlt
pop
push
enter
inc
lret
xchg
or
jne
pop
jge
fldl
loopne
mov
dec
cmc
mov
outsl
jle
pushf
cmpsb
and
sbb
outsl
jmp
sti
jmp
adc
loop
jae
pusha
iret
lahf
mov
push
mov
xchg
push
push
mov
imul
xor
into
adc
lret
inc
pop
imul
mov
mov
lcall
jle
jg
repz
retw
shll
xchg
movsl
cld
cltd
loope
mov
sti
sub
xor
dec
sti
movsl
or
jp
clc
jno
test
mov
std
pop
mov
sub
fmull
cmpsb
mov
enter
into
xlat
nop
out
je
push
sub
es
int
cmp
test
xchg
push
lcall
mov
mov
ffree
sub
rorb
stos
pop
insb
push
pop
sbb
movsl
sbb
sub
xchg
hlt
int3
pop
jecxz
int3
mov
mov
js
loop
adc
lock
mov
jnp
scas
or
loop
cmovae
mov
and
in
sahf
in
pushf
sub
out
out
cmpsb
cld
pop
xchg
arpl
sahf
in
pop
xchg
dec
jb
add
arpl
popf
loope
mov
xchg
bound
inc
jae
jnp
rorb
out
inc
pop
mov
adc
cwtl
and
jp
push
scas
inc
push
aas
clc
mov
cltd
cmpsb
imul
ljmp
sub
adcb
adc
mov
add
out
sarl
lds
lds
sub
stos
shll
sbb
lea
cmc
jbe
lret
push
out
cmp
sub
inc
shrb
in
lcall
mov
movsl
lcall
push
mov
sti
jge
jb
pop
lea
into
subl
mov
ret
ja
outsl
xor
inc
adc
ja
repz
das
or
lret
popa
adc
in
mov
jns
mov
push
pop
xchg
jg
shlb
stos
add
xchg
cwtl
inc
test
mov
xor
mov
das
icebp
push
add
push
roll
outsl
dec
mov
into
aad
test
cmpl
sub
arpl
xchg
mov
leave
es
das
cmpsl
arpl
mov
sbb
xchg
ja
cli
sub
dec
loope
xchg
jp
jno
insb
popa
shrl
fdivrl
sbb
in
and
or
mov
popa
test
cmp
dec
lods
sub
inc
jno
cwtl
mov
cmpsb
add
insb
pop
xchg
jns
sub
push
mov
mov
dec
loope
ret
stc
add
mov
xor
xchg
xchg
cmpsl
stos
movsb
shr
movhps
scas
pop
xchg
mov
sub
mov
sti
pop
scas
lahf
gs
jne
movsb
loope
pop
xchg
pop
clc
es
push
lods
lea
scas
push
push
sbb
xor
iret
push
mov
fcomip
out
cmpsl
fs
xchg
pop
or
sbb
fnstenv
add
out
imul
dec
and
mov
inc
aaa
sub
psubb
pushl
hlt
in
push
into
stos
adc
xor
pop
jo
inc
cmp
xor
xchg
or
push
iret
leave
pop
xor
dec
sbb
mov
and
and
imul
push
lds
lcall
cmpsb
cmc
loope
int
shrl
and
es
inc
xchg
or
clc
xor
cwtl
sbb
into
cmp
outsb
jge
mov
fnstsw
xchg
xor
mov
ljmp
dec
pop
stc
xor
daa
icebp
xor
mov
adc
dec
lock
sarb
ror
push
ss
pop
ror
clc
sub
mov
push
or
nop
and
mov
jmp
xchg
sub
out
jp
pop
std
fisttpll
pop
jns
cmp
mov
ds
adc
dec
popf
aaa
popf
sbbb
xlat
xchg
push
ljmp
mov
loope
dec
xor
push
sub
and
imul
mov
mov
xor
addl
lock
out
enter
push
test
ds
fldcw
leave
stos
push
out
fsubp
pusha
les
sbb
adc
movsb
hlt
rcll
push
jl
mov
out
push
gs
test
cmp
test
xchg
fistl
jl
xchg
pushf
xchg
mov
cmpl
dec
dec
shll
push
test
xlat
or
pushfw
ja
leave
fistl
movsl
adcl
fsub
jge
loop
push
xchg
int3
xor
loop
insl
cli
out
stc
out
shrl
dec
imul
fstl
mov
subb
mov
xchg
sbb
adcl
lcall
dec
cltd
or
shlb
jnp
mov
sbb
js
push
jmp
jae
push
push
scas
cmp
cmc
pop
not
xchg
mov
inc
push
cmp
jno
jae
negl
std
inc
xchg
fldt
mov
lock
adc
lret
shrl
lea
sbbl
and
mov
mov
cmp
loop
xlat
ret
xor
cmpsb
add
lods
sahf
pop
mov
mov
sbb
cmp
mov
std
mov
ss
push
popf
inc
inc
adc
cs
in
mov
pop
ds
repnz
sbb
dec
fldenv
popa
fsubrp
fistps
shrl
xor
push
aam
lret
mov
push
push
orb
lods
cltd
sub
sub
cld
lds
mov
test
mov
clc
je
add
and
bound
mov
mov
pop
add
pop
arpl
ret
mov
repnz
fwait
or
sahf
loop
push
xor
mov
out
jg
inc
mov
push
outsl
sbb
lret
std
jle
jl
or
addr16
test
push
repz
jecxz
adcb
xor
repnz
out
bnd
jmp
cwtl
lds
pop
cmp
popa
ret
inc
icebp
pop
cmp
cmp
dec
rcrb
cltd
xor
mov
add
dec
fwait
ret
into
cmp
daa
shrl
pop
dec
leave
mov
in
fstps
js
in
pop
push
add
mov
outsb
push
fimuls
data16
out
pop
mov
xor
jl
dec
inc
cmp
push
add
jl
push
mov
push
call
imul
dec
in
pop
ja
jb
push
in
mov
xchg
dec
xchg
and
popa
mov
stc
ret
xor
jg
sbb
pop
sbb
mov
push
adc
fnstcw
icebp
mov
inc
inc
pop
daa
add
pushf
mov
cld
pop
gs
push
lahf
adc
lds
adc
xor
ljmp
jg
fistpl
das
out
and
call
sbb
pop
push
dec
xor
rcll
push
idivb
mov
cmc
pop
int
jp
test
sti
cltd
sbb
dec
sub
fwait
lret
push
arpl
sub
mov
add
dec
push
sti
je
outsb
shlb
mov
cmpsb
sub
addr16
jae
sbb
ret
imul
filds
mov
push
loopne
mov
int3
hlt
push
jo
lods
mov
xchg
inc
jae
leave
movsl
popf
into
sub
into
inc
add
fbstp
not
inc
dec
mov
xchg
mov
inc
push
rcrl
sub
es
cmp
mov
arpl
or
arpl
jecxz
rcr
mov
sbb
xchg
testl
xor
mov
fucom
test
dec
popf
fstl
loop
sbb
or
out
mov
daa
test
cmp
push
mov
mov
pop
lds
sub
mov
dec
dec
pop
into
xor
data16
das
dec
repz
xchg
mov
rolb
sbbb
push
push
jb
pop
sub
xor
enter
inc
mov
push
push
sub
push
push
pop
or
mov
sub
cld
sub
push
loopne
cmp
movsl
mov
ljmp
xchg
lods
popa
xor
clc
dec
xor
pop
mov
mov
scas
lods
sbb
dec
adc
inc
dec
add
xor
fwait
or
push
push
lock
dec
aam
dec
decl
push
icebp
lahf
adc
cwtl
jae
cmp
addl
por
push
push
jb
xchg
hlt
inc
call
cmp
jns
push
not
mov
cltd
pop
adc
fisttpll
movsb
lcall
adc
pop
mov
fsubs
jg
inc
out
jg
out
push
inc
or
sbb
fdivrs
cmc
adc
mov
dec
cmp
xchg
push
xor
lret
inc
lods
stos
ss
jns,pt
cltd
aam
pop
and
mov
pop
adc
scas
push
lret
cli
lret
imul
dec
fistpll
test
or
lcall
pop
mov
test
pop
mov
sub
pop
pop
sub
xor
jmp
cmp
sub
lock
dec
aaa
outsl
xchg
inc
xchg
imul
fbld
cmc
xor
jecxz
mov
daa
inc
imul
dec
in
sbb
sub
mov
push
in
ja
in
out
insl
push
pop
lahf
cld
lods
mov
nop
jecxz
push
lds
hlt
add
and
shll
jo
inc
and
push
stos
mov
mov
add
xchg
inc
mov
nop
imul
push
cmpsb
icebp
inc
les
or
add
fdivrp
inc
push
and
pop
cmp
add
cmc
sbb
and
scas
pop
mov
mov
xor
dec
test
sbb
jmp
mov
cmp
sbb
mov
push
and
inc
lock
dec
mov
mov
xchg
jne
js
pop
pop
xchg
mov
mov
cmp
mov
cmp
jno
hlt
in
movsl
sub
loopne
cmc
shlb
out
in
lea
lcall
imul
xor
clc
push
xor
bound
idivb
lock
mov
outsl
inc
sahf
add
xchg
out
pop
push
aam
inc
div
frstor
aam
lea
divb
mov
mov
imul
dec
xor
xchg
xchg
dec
in
mov
xor
call
push
dec
aad
loopne
dec
fwait
mov
lock
jmp
jne
ljmp
cli
push
sarb
mov
push
xor
sarl
scas
rcrl
and
cs
or
mov
push
xchg
sbb
inc
leave
aam
pop
jge
xor
mov
cmp
jl
ds
jb
add
dec
xchg
and
jo
lods
xor
les
mov
cld
lret
sub
in
lret
scas
int3
dec
cmc
iret
mov
inc
jno
dec
mov
mov
mov
mov
aas
addr16
int3
xchg
das
outsl
mov
add
push
je
cmpsb
std
adc
push
xchg
or
sub
add
loopne
movsb
fisttpl
pop
push
test
jns
push
jnp
mov
lcall
push
add
fistps
dec
icebp
mov
std
pop
daa
mov
or
cmp
mov
mov
ja
and
out
lea
pop
dec
roll
adc
movsl
pop
mov
inc
daa
mov
daa
roll
mov
add
xchg
test
adc
rcll
sarb
xchg
xor
ret
mov
push
xchg
arpl
pop
lea
inc
aam
xor
or
call
icebp
or
and
cmp
dec
jge
jp
adc
loopne,pn
push
mov
nop
cld
aas
loop
pop
xchg
pushf
jmp
pop
xchg
mov
sbb
mov
in
mov
cmpsl
movsl
add
idiv
popa
aaa
adc
add
mov
sbb
add
mov
rcrl
cli
fs
insl
or
push
stc
xor
jnp
adc
push
lods
cli
pusha
mov
pop
bound
add
sbb
xchg
cmc
xchg
sbb
xchg
imul
jg
xchg
fmuls
push
mov
repz
inc
hlt
out
sahf
dec
aam
mov
popa
xor
mov
jmp
lcall
data16
xchg
add
push
jo
das
flds
sub
fwait
push
jo
jge
scas
jb
mov
sub
fwait
or
das
xor
data16
popf
fidivs
and
repz
out
in
in
aas
and
dec
sbbl
lods
sub
stos
cld
xor
out
sub
pop
iret
jle
aad
pop
and
push
mov
jg
mov
cmpsl
pop
iret
pop
lods
push
pop
int3
adc
inc
call
mov
mov
fisttpll
sub
xchg
sub
inc
lret
xlat
shlb
push
nop
push
mov
inc
add
inc
and
and
clc
mov
into
cmp
sub
out
cmovne
mov
dec
ud2
test
jmp
sarb
xchg
das
movsb
mov
jne
or
ja
push
stc
aas
mov
jae
mov
xor
jge
sahf
lea
arpl
fstpt
out
inc
cwtl
les
les
cmp
pop
andb
rcll
mov
or
std
decb
std
std
out
cs
pop
cwtl
or
dec
mov
push
mov
test
push
int
or
ret
mov
movsl
mov
and
or
mov
xchg
outsl
lahf
insb
stos
popf
add
add
inc
xchg
or
mov
cwtd
aam
lods
shlb
jge
fisttpll
scas
push
push
gs
sub
push
nop
je
rcll
dec
imul
pop
mov
xchg
mul
adc
lret
fisttpl
orb
call
icebp
pusha
inc
les
aad
xlat
or
in
mov
popa
inc
xchg
lcall
in
xor
mov
bound
std
aaa
popf
sahf
and
mov
and
sub
mov
jno
fdivrp
push
cli
aam
adc
loopne
and
in
xor
xorb
or
add
jmp
adc
jae
xor
arpl
lods
out
sahf
xchg
test
das
cmp
mov
addr16
aas
adcl
ror
subl
andb
insl
icebp
ds
jle
aad
aad
jl
jmp
lahf
enter
test
fnstenv
adc
and
adc
cs
mov
push
dec
std
mov
adc
stos
stos
out
outsb
nop
lahf
jns
cs
pusha
pop
shrb
cltd
push
xchg
sbb
jp
loopne
inc
jbe
mov
sbb
or
add
addl
jp
mov
adc
je
insl
add
push
movsb
pop
imul
and
cmp
mov
aam
ds
mov
mov
xor
mov
cmpsb
inc
test
mov
loopne
mov
pop
cmp
push
pop
push
lds
push
or
xlat
pop
lret
sbb
xchg
scas
mov
cmpl
cltd
pop
rolb
xor
xor
mov
and
mov
jp
les
dec
mov
imull
std
ljmp
stos
ret
sbb
sub
lret
mov
dec
subb
dec
imul
and
dec
dec
dec
int3
repz
jge
lcall
stos
dec
roll
fcomps
lea
lea
sbb
out
arpl
xor
test
add
mov
push
mov
xchg
push
sbb
inc
pop
xor
dec
adc
xchg
pop
fistpll
jno
pop
popa
pop
shl
int3
push
push
sar
xorl
cld
popa
mov
and
lock
mov
xlat
test
inc
fmul
mov
push
lret
push
add
into
aas
inc
test
push
aaa
xchg
inc
mov
gs
lahf
mov
lods
negl
daa
jmp
mov
out
pop
cs
mov
mov
call
mov
imul
mov
xchg
orb
inc
jb
jge
js
mov
clc
pop
dec
dec
dec
inc
mov
push
add
xchg
jae
pop
and
dec
hlt
shr
push
sbb
mov
cmp
xchg
push
in
jne
aam
mull
rcl
dec
push
xchg
ljmp
pop
das
out
or
fcomp
testl
pop
cmp
jnp
rorb
in
and
mov
dec
into
repnz
mov
shr
jbe
push
xchg
adc
lahf
lret
movsl
sub
dec
in
das
fs
pop
cmp
repnz
mov
lret
mov
ret
mov
mov
jp
jg
leave
rolb
addl
divb
mov
push
js
cmp
jp
stos
push
or
or
or
add
push
test
adc
xchg
pop
mov
stc
mov
outsb
aas
xchg
inc
out
unpcklps
xor
mov
dec
ss
cli
rcl
fdivrl
lahf
lret
fdivl
fwait
outsb
fldcw
inc
sub
leave
dec
mov
and
push
movsb
inc
add
jbe
mov
fsqrt
or
add
test
in
push
cmpsb
xchg
cmpb
rorl
cmp
stos
jnp
rorb
dec
ss
inc
mov
movsb
pop
sbb
addr16
mov
pop
jno
mov
into
push
jmp
mov
push
pop
insb
movsb
sbb
jnp
lcall
das
es
out
cmp
and
push
fst
jnp
mov
hlt
pop
sarl
nop
push
mov
scas
hlt
repz
pop
xor
dec
notl
les
ss
sub
shll
push
fidivrs
loopne
js
jo
jb
jg
loop
pop
out
xchg
jecxz
pop
andl
ret
jb
arpl
jns
sbb
fstps
lock
pop
cld
call
sub
cmp
outsb
sbb
arpl
stos
xor
test
rcl
shl
fwait
sub
xor
jp
nop
mov
mov
mov
rorl
imul
dec
cli
hlt
hlt
fbstp
sbb
dec
daa
pop
jge
inc
cmp
arpl
das
jge
mov
daa
imul
fisttpll
dec
push
int3
gs
push
xchg
xchg
sub
lea
jbe
lea
inc
rorb
shlb
xchg
popf
std
cmpsl
addl
xchg
xlat
jmp
sarb
and
and
sbb
inc
insl
loope
lds
pop
add
shll
fwait
mov
push
lret
jnp
pop
ret
sbb
cmc
popa
ljmp
je
fiadds
in
in
dec
rorl
mov
fcompl
dec
sub
dec
pop
mov
or
xor
inc
sub
mov
ss
shrl
and
rclb
jge
dec
ds
cltd
mov
stc
mov
or
sbbb
sbb
mov
nop
or
mov
andb
movsb
inc
jl
mov
lahf
mov
ss
xor
jmp
loope
push
mov
mov
push
loop
orl
loopne
daa
pop
mov
mov
dec
aas
pop
stc
push
dec
lret
mov
sub
mov
aam
pushf
xor
sbb
mov
mov
and
jbe
fildl
shr
in
std
jp
aam
sbb
mov
xchg
mov
jnp
enter
fiadds
adc
repz
and
push
ds
push
mov
jne
pop
sbb
movsb
pop
xor
pusha
pop
pop
mov
shlb
pop
outsl
dec
cmp
mov
mov
push
js
mov
cs
xchg
sbb
mov
lahf
jo
pop
rcr
mov
mov
imul
aam
lahf
lds
and
sbb
adc
outsb
cmp
sbb
mov
pop
int
pusha
sbb
cs
les
adc
adc
jo
pop
loop
xor
call
enter
push
pop
lds
or
sub
jne
sub
jnp
jecxz
pop
shll
mov
faddl
pop
ja
push
cmp
das
pop
mov
popa
inc
int
push
fidivrl
std
sbbl
aaa
clc
imul
sbb
and
jb
jg
cmpsb
imul
adc
push
stos
xor
and
xchg
gs
imul
pop
sti
andb
lahf
add
lods
inc
sbb
jge
mov
sbb
fsubp
adc
jmp
fwait
mov
sub
idivb
xchg
das
inc
cmp
nop
mov
mov
data16
mov
outsl
bound
xor
jo
ljmp
cmp
mov
push
mov
sub
leave
in
pop
mov
dec
mov
dec
xchg
cld
xor
inc
cmp
add
ret
shl
xchg
ss
test
in
cmp
les
xor
cmpsb
pop
loop
mov
cmpsb
fwait
and
jae
lea
cmp
jne
outsb
cmp
enter
int
xchg
outsl
dec
fisubs
jns
adc
mov
inc
cmpsl
aaa
dec
incb
call
mov
test
lahf
enter
jmp
imul
xchg
scas
sub
xchg
push
pop
ret
lcall
cmpsb
and
adc
mov
ret
mov
out
aam
dec
lods
xchg
bound
lods
jae
push
in
mov
outsl
xchg
pop
push
mov
int3
add
loope
ja
jbe
adc
cltd
addr16
cmc
jo
insb
push
out
fistpll
push
mov
ja
jns
lods
jns
sbb
nop
out
sbb
push
loopne
adc
lds
jmp
aaa
movsb
popf
lahf
fisttps
add
mull
movsb
xor
mov
movsl
dec
mov
pop
dec
push
dec
inc
jb
dec
push
int3
inc
add
lods
ss
aaa
dec
jl
pop
loop
scas
mov
adc
stos
testb
push
aaa
sub
pop
shl
inc
cmp
cmp
shlb
shrl
jno
push
scas
in
fisttpl
nop
or
sub
mov
xchg
das
mov
sbb
mov
cmp
rorb
jp
sub
and
lods
test
or
lret
fnstcw
cmp
pinsrw
mov
je
jmp
jno
cltd
cltd
sti
inc
movsb
leave
inc
imul
and
outsb
xlat
jecxz
xchg
jge
dec
mov
leave
pop
dec
adc
jp
adc
jle
sub
push
lock
push
jb
js
cwtl
rolb
sbb
xor
mov
pushf
cld
push
mov
inc
in
std
ret
pop
rcr
pop
nop
or
movsl
dec
dec
in
adc
pop
lcall
mov
lock
aas
gs
adc
ret
test
insl
mov
dec
mov
cmpsb
arpl
lods
mov
inc
mull
jg
in
outsl
sbb
lods
xlat
clc
insb
sbb
push
bound
outsl
movsl
aaa
inc
test
loop
add
out
pop
pop
push
pop
lcall
pop
dec
cmp
mov
arpl
push
int3
leave
cmp
lods
stos
add
je
aas
sub
adc
ds
fs
daa
dec
push
sbb
sbb
je
add
sbb
adcb
cmc
stc
push
adc
popf
jle
arpl
cmc
cmpsl
push
inc
pop
in
enter
in
jnp
cmc
mov
repz
loop
imul
stc
scas
mov
pop
mov
xchg
push
lods
dec
cmp
sbb
in
repnz
jg
mov
pop
push
push
popa
pop
xchg
jp
cli
and
nop
es
inc
jmp
sti
js
imul
pushf
pusha
dec
into
cli
add
jl
mov
cmp
imul
out
es
int3
dec
mov
fistpll
test
ret
lea
fwait
mov
xor
lock
cmp
sti
xor
xlat
call
xchg
fidivs
mov
xchg
lea
in
enter
cmp
pop
push
daa
mov
pop
xchg
dec
jns
xchg
push
lahf
mov
scas
repnz
cmp
es
xor
add
sub
push
jae
sarl
out
test
pop
push
fucom
sbb
movsb
addb
ror
and
add
ret
xchg
cmpb
int3
push
bound
inc
stos
outsb
pop
mov
cmp
pusha
jb
pop
xchg
xor
jg
jb
jge
ljmp
inc
adc
jns
shll
push
lcall
les
scas
iret
inc
insl
cmc
daa
mov
dec
test
inc
lods
mov
cs
and
lods
jg
dec
test
inc
push
dec
int
call
mov
adc
popa
sub
std
jae,pt
repnz
xchg
repz
mov
xor
sub
add
sbb
jp
jne
push
ret
pop
cwtl
das
in
push
fisubl
add
cmp
data16
stos
sbb
imul
and
pop
add
iret
sahf
movsb
in
divl
int
cmp
or
cmc
aaa
lods
mov
xchg
dec
aaa
adc
pop
movsl
mov
mov
loopne
cmc
leave
and
xor
mov
aas
testl
out
cmpsl
dec
jecxz
repnz
or
dec
and
push
xor
lret
lods
adc
negl
add
scas
add
fcoml
sbb
add
cmc
mov
inc
push
mov
rclb
cmp
int
mov
xor
popf
negl
push
xchg
cld
sahf
pop
dec
xchg
fiaddl
fwait
ret
mov
push
pop
xor
fstpl
cmp
sbb
incb
les
rcr
rolb
pop
pop
lret
pop
insb
mov
aas
insb
insl
fdivs
data16
mov
pop
ss
cmp
sbbl
jg
in
fistpl
test
lret
imul
test
mov
hlt
gs
fisttps
jmp
mov
push
pop
add
cmp
mov
shl
test
ds
test
mov
repz
mov
stos
cmpsb
xchg
mov
stos
ljmp
adc
push
inc
push
lret
add
adc
popf
xchg
movsl
jg
push
int
or
aad
hlt
jno
cltd
mov
leave
lods
ljmp
mov
dec
mov
pushf
mov
orl
fildl
shrb
mov
test
cmpb
pop
and
inc
jecxz
idiv
mov
add
imul
sbb
sub
cli
inc
push
inc
scas
xchg
out
cmp
enter
divb
pop
hlt
adc
ja
mov
das
orb
sub
jnp
out
xlat
mov
bound
push
sub
movsl
lods
movsb
lock
std
jmp
jl
cmp
adc
in
push
cld
add
pop
push
jecxz
push
fcoml
add
cmpsb
sbb
pop
mov
mov
sbb
mov
sbb
lahf
inc
mov
cmpsb
inc
test
ss
adc
lret
ja
sbb
pop
mov
mov
add
or
and
dec
adc
ljmp
or
pop
xor
adc
xlat
sbb
jb
sub
cmp
mov
push
mov
push
mov
add
hlt
sub
str
adcb
out
push
xor
jge
xor
mov
and
repnz
mov
outsb
arpl
push
pop
pushf
inc
ds
fiaddl
pop
mov
enter
rcll
enter
loop
lret
xchg
push
sub
mov
inc
cmp
cmp
jle
imul
pop
cmp
popf
and
inc
lahf
jp
push
ljmp
mov
data16
mov
scas
or
sub
and
shll
add
dec
xchg
aas
xchg
and
add
cld
sbb
pop
dec
sub
jns
or
dec
jecxz
aad
or
add
adc
jnp
xchg
mov
sbb
mov
shll
push
aad
iret
lds
pop
icebp
hlt
in
pop
mov
inc
push
imul
xchg
adc
test
inc
push
aam
pop
decb
imulb
and
out
dec
mov
jb
jp
jl
mov
shrb
iret
fildll
lcall
push
jne
mov
pop
mov
mov
lea
aaa
and
push
in
dec
dec
sbb
sub
pop
inc
out
lods
gs
leave
dec
dec
xchg
xor
push
mov
xchg
outsb
jae
push
rclb
cmp
pop
cmpsl
or
hlt
fwait
mov
add
fidivs
sbb
lcall
cmp
mov
pop
cmpsb
push
hlt
push
cmp
imul
pop
mov
ds
jge
mov
or
add
jg
inc
pop
pushf
movsl
ds
mov
sub
pop
ljmp
push
add
adc
loop
mov
sub
daa
xor
fldt
xchg
inc
push
int
jecxz
enter
ds
mov
jmp
xor
pop
push
cmp
fldl2e
outsb
popf
adc
mov
dec
pop
xchg
and
rorl
cs
adc
sbb
loop
xchg
or
jl
push
pop
ret
imul
add
jns
clc
dec
fisubs
and
cmp
inc
insl
xor
push
inc
mov
fwait
xor
insb
jbe
out
rorl
ljmp
sub
cmp
mov
push
arpl
cli
jmp
pop
test
ret
push
pop
xchg
adc
sahf
in
fadd
xchg
mov
adc
insb
dec
jl
lds
xchg
mov
dec
ret
dec
cmc
mov
adc
xlat
dec
push
subl
sbbl
incl
push
aaa
cmc
mov
jno
add
aaa
loope
shlb
inc
in
lret
xor
popf
sbb
pushf
pushl
popf
lret
cmp
mov
and
ffree
adc
dec
cmc
xchg
outsl
insb
sub
mov
adc
testb
push
xlat
cwtl
orl
cmp
aam
xor
mov
nop
lret
cld
jns
lret
mov
daa
mov
lock
mov
rcrb
arpl
test
mov
fsubrl
push
cmp
out
test
lret
sub
dec
adc
mov
jp
mov
gs
mov
jecxz
jb
jmp
je
pusha
pop
inc
and
ljmp
outsb
sysenter
js
out
mov
insl
sub
jno
or
pusha
sub
cmp
mov
jns
pop
sbb
fdivs
jmp
repnz
dec
inc
push
outsl
in
int3
and
imul
jae
iret
mov
xchg
mov
dec
mov
pop
ljmp
test
xor
icebp
mov
leave
in
sub
or
add
jg
dec
xor
mov
mov
lcall
js
add
push
fwait
insb
lods
pop
jb
fstpl
xor
push
mov
dec
cli
rcr
scas
in
inc
frstor
pop
test
out
in
fistps
lea
jmp
popf
pop
stos
cwtl
mov
bnd
mov
xchg
pop
movsb
fadds
or
cmp
mov
out
adc
push
add
mov
add
enter
enter
or
and
jp
pop
inc
xchg
jae
jne
aad
dec
mov
aaa
lods
mov
cs
outsb
mov
xchg
cmp
inc
sub
pop
xor
ljmp
adc
pushl
push
cmpsb
cli
clc
inc
pop
push
jg
adc
in
inc
into
scas
xlat
scas
fwait
inc
sbb
xlat
loop
or
mov
div
sbb
inc
stos
sub
arpl
mov
loop
mov
pop
add
dec
pusha
sbb
aaa
inc
stos
gs
repz
stos
lahf
sbb
mov
sbb
insb
sbb
sti
and
push
cmp
mov
shlb
and
push
jg
addr16
jl
mov
negl
jp
jl
push
fwait
sub
mov
jle
push
mov
cli
loop
shrb
mov
imul
and
xchg
push
xchg
rep
push
dec
xor
lret
and
xchg
jae
lcall
nop
fmull
inc
cmp
divb
and
or
fcoml
or
daa
mov
hlt
out
dec
imul
insl
into
mov
push
dec
mov
push
mov
xchg
sub
xchg
repz
jno
fwait
adc
cmp
mov
inc
pop
mov
mov
push
push
push
inc
push
sub
aaa
das
cwtl
sub
xchg
iret
cmp
cmpsl
cmpsl
sbb
fdivrl
stos
jae
xchg
sub
cmp
enter
lret
arpl
movsl
adc
mov
mov
sysexit
mov
mulb
mov
fsts
jmp
dec
dec
add
cmp
shl
lret
sbb
push
sbb
mov
not
sbb
pop
jae
mov
inc
das
data16
adc
sbb
xchg
aad
mov
push
mov
ds
les
and
sbb
inc
sub
idivb
popa
sbbl
movsl
inc
jb
and
mul
pop
jne,pn
pop
sbb
mov
popf
sbb
aad
dec
hlt
std
pop
addr16
fsubrl
int
rcrb
adc
xchg
xlat
or
jmp
push
xor
aad
mov
sbb
negl
pop
dec
ljmp
fisubrl
push
add
in
ljmp
push
in
jle
pop
xchg
rcr
shrl
loopne
lahf
cli
adc
insl
or
out
xlat
sbb
pop
lods
cld
adc
insl
js
js
and
fstpl
into
clc
in
xchg
jg
es
mov
and
adc
mov
mov
jmp
jle
ret
jl
cli
hlt
aad
imul
inc
cmp
icebp
loope
cmp
outsb
aas
dec
cli
arpl
aas
lods
add
ds
cwtl
push
movsl
sbb
ret
mov
mov
popa
mov
rol
cmp
xchg
lock
inc
jno
inc
in
rcll
mov
jne
jp
mov
or
aaa
mov
stos
dec
xchg
in
iret
into
fmul
xchg
insl
scas
pop
adc
shll
imul
xor
mov
jno
sub
sbb
movsl
popa
sbb
cmpsl
xlat
sti
jns
adc
push
pushf
jae
jecxz
loope
push
pop
fldenv
lods
dec
cmp
adc
xor
mov
pop
pop
jp
dec
nop
xchg
push
dec
inc
or
or
fs
repz
stos
insb
push
cltd
sub
mov
xchg
fst
inc
or
decb
and
rclb
fdivrs
pop
out
sti
js
or
or
lret
call
jmp
dec
jnp
mov
push
inc
insb
sub
sbb
jp
pop
push
dec
ret
and
clc
jl,pt
popa
inc
sbb
pop
imul
and
pop
mov
rclb
movsb
and
xchg
stos
sahf
mov
ja
nop
repnz
xlat
add
mov
xchg
nop
fs
insl
les
dec
aam
fnstenv
push
decl
cs
in
xchg
pop
add
in
loop
sub
pop
mov
inc
test
es
jecxz
push
or
pop
test
cmpsb
add
iret
fcoml
test
add
iret
mull
fwait
and
mov
cmp
pop
roll
xor
js
mov
mov
mull
xchg
cmp
iret
loopne
inc
mov
xor
les
lahf
sbb
mov
sbb
lret
pop
imul
push
popf
sbb
ja
int3
adc
pop
idivl
lods
mov
xor
fcoml
shl
add
movsl
hlt
push
push
mov
aam
cltd
xor
lea
enter
test
gs
cmp
pushf
inc
xor
lods
aad
ds
jecxz
in
xchg
rcll
push
imul
cs
inc
les
and
mov
movsb
pop
int
cli
arpl
in
in
je
mov
cmp
mov
out
lods
pop
movsl
ljmp
into
jle
sub
test
dec
xor
mov
shr
xchg
cmp
insb
adc
sub
out
pop
add
cmpsl
adc
jge
inc
mov
mov
sbb
add
or
stc
pop
xchg
cmp
lds
adc
mov
lret
js
iret
and
and
adc
data16
sub
mov
jl
sbb
cmc
clc
aam
int3
mov
adc
or
icebp
pop
mov
cmp
repnz
sahf
sarl
es
mov
jmp
mov
cwtl
ljmp
mov
and
aad
jl
adc
mov
mov
xor
xor
sbb
movsl
xchg
ret
arpl
scas
push
pusha
es
insb
pop
shrb
popf
and
cmpsl
cmc
jo
fdivp
cmp
cltd
mov
jns
pusha
xchg
pop
cmp
pop
adc
repz
mov
pop
std
adc
jne
test
pop
adc
loop
push
mov
jge
adc
nop/reserved
cmpsl
test
push
stos
popf
push
sub
idivl
mov
daa
or
pop
cli
mov
fdivrl
or
iret
lret
jns
sbbl
adc
adc
cld
jo
dec
mov
cmp
int
shlb
mov
push
nop
ret
shrb
je
push
in
jp
imul
cmp
imul
imul
and
xchg
push
or
inc
dec
out
lea
popa
mov
test
call
cmp
cmp
xchg
aaa
fstp
sbb
mov
pop
pushf
jne
cmp
outsb
xchg
adc
icebp
outsl
cld
push
and
xchg
rorb
inc
iret
push
fucom
imul
int
dec
ljmp
in
adc
mov
xchg
and
xchg
out
loope
sbb
lods
xor
xchg
loopne
inc
cli
dec
in
repz
insb
adc
or
and
les
dec
dec
pop
sar
lret
aad
imul
in
ljmp
fsubrl
lret
mov
mov
rcl
lret
int3
dec
orb
loop
inc
inc
cmpsb
push
push
dec
cmp
pop
aas
jno
out
bound
xchg
xor
jle
ss
fistpl
test
sub
or
stc
add
aas
push
xor
and
or
jg
sbb
imul
or
and
sahf
jl
pop
out
jecxz
jae
mov
imul
out
rcl
cld
sbb
in
add
mov
and
aam
arpl
xchg
or
jns
and
pop
cld
xlat
cmp
push
mov
sub
mov
dec
fisttpl
jmp
add
stos
push
js
out
mov
lock
lods
gs
in
push
mov
aam
pop
ljmp
lock
jb
arpl
sahf
mov
cmp
pushf
icebp
add
js
add
dec
daa
addl
sbb
insb
mov
daa
xor
aam
fbstp
mov
or
pop
stos
outsb
xchg
outsb
cmp
das
addr16
and
ret
xor
lret
scas
inc
sub
aaa
in
push
cmp
push
and
jb
jmp
push
out
and
xor
xchg
scas
jmp
ja
insb
xchg
shlb
leave
sar
xchg
mov
clc
or
mov
fsubr
dec
inc
cmp
xchg
subl
adc
mov
fcmovnu
mov
cs
pop
cmp
and
into
adc
aad
sub
stc
out
push
push
sahf
xchg
add
cmp
cltd
ja
jecxz
stos
js
sbb
xchg
inc
dec
mov
jns
negl
int
pop
sbb
fmull
aaa
xor
lods
sub
cmc
gs
sub
push
push
xor
sbb
inc
push
xchg
aas
popa
rcl
mov
mov
fiadds
jl
xchg
outsl
fcoml
add
mov
xchg
and
cmpsl
jo
icebp
imul
xchg
pop
in
xchg
rcl
push
xchg
in
imul
sbb
mov
dec
bound
mov
or
mov
in
add
hlt
cmp
pop
add
jne
push
dec
or
pusha
jbe
dec
xchg
movsb
ret
mov
in
adc
and
xchg
lods
sub
jg
je
sub
mov
out
dec
lret
stc
imul
lahf
cmc
int3
add
cmp
jb
xor
shlb
push
cmp
rcr
es
sub
push
aas
enter
sarb
arpl
shlb
sub
inc
fimuls
lret
pop
cmpsb
dec
flds
rorl
inc
push
sar
xchg
repz
outsl
loop
lods
cli
jae
rcrb
mov
fwait
cld
nop
inc
stos
mov
mov
daa
ret
push
test
push
push
xlat
sub
nop
push
inc
push
and
adc
in
push
xor
xchg
aas
cmc
mov
pop
add
test
ret
push
mov
leave
outsl
test
pop
fdivrs
push
inc
sbb
mov
mov
cwtl
insb
sub
idivl
ljmp
xchg
scas
lods
add
enter
fisubl
jl
xor
and
mov
jbe
outsb
fnstcw
sub
inc
stc
lcall
pop
and
in
es
rol
hlt
mov
push
add
pop
mul
mov
xorb
add
lcall
movsl
xor
cmp
scas
ljmp
mul
jl
hlt
imul
cmp
addb
or
pop
push
xorb
dec
jo
push
test
jb
ret
and
mov
shll
xor
dec
shlb
lods
mov
aam
in
int
sbb
or
xorl
mov
clc
fsts
outsb
dec
xor
dec
mov
out
xlat
inc
pop
sti
clc
dec
dec
mov
lock
ret
dec
dec
mov
add
jo
add
jns
push
rclb
inc
jns
addr16
fucomip
sub
addr16
xchg
lods
jle
sub
pop
pop
dec
loope
es
hlt
js
insl
cmp
js
loopne
or
jg
pusha
ja
xor
cwtl
out
mov
mov
mov
cli
das
rol
cmp
jge
fwait
pop
test
fdivrs
outsl
iret
iret
call
loope
les
jecxz
add
sbb
pop
add
aas
lcall
loope
and
mov
pop
jl
pop
jb
or
imul
js
out
xorb
pop
int
sbb
push
out
andb
nop
hlt
testb
xchg
mov
movsb
xchg
or
test
lods
out
sbb
cmpsl
xchg
mov
fadd
xor
je
shlb
sub
or
insl
xchg
mov
dec
sub
je
adc
mov
mov
std
xchg
cltd
and
lar
jnp
into
mov
jne
cmp
mov
pmulhw
mov
test
sub
aad
loop
mov
xor
inc
mov
pop
mov
insl
jmp
jnp
push
xchg
and
and
je
pop
sub
pop
mov
pushf
mov
pop
ret
jb
and
in
nop
in
repz
pop
and
outsb
dec
loop
in
pop
in
push
enter
outsb
add
or
out
xor
mov
xorl
test
push
orl
pop
mov
pushf
lret
sbb
push
pop
inc
je
pop
add
jb
push
pop
jle
and
or
pop
movsb
push
cmp
cltd
sub
scas
cs
jo
pop
jo
or
int3
xor
and
cmp
aas
sahf
test
sbb
add
jl
out
sbb
jp
pop
xchg
xor
ret
enter
iret
inc
addr16
mov
add
pop
mov
popa
adc
in
clc
roll
insl
iret
push
inc
scas
and
cmpsl
lods
fwait
mov
insb
in
out
mov
xchg
call
lods
das
pop
dec
sub
cmp
cmp
or
mov
xchg
repz
cmp
addr16
loopne
sub
test
fstpl
xor
jg
sti
cmp
sbb
ss
inc
inc
insl
fdivrp
decb
jl
aaa
fcompl
mov
push
sub
sahf
push
lods
push
fisubl
pop
sahf
jmp
fs
adcb
mov
pusha
jnp
insb
sub
shrb
mov
outsl
fisttpll
test
cltd
aad
push
push
insl
stc
stos
loopne
js
ss
or
push
sbb
xor
pusha
or
cltd
lret
fs
mov
sub
sbb
xchg
in
xor
xchg
sahf
push
pop
inc
adc
sbb
jge
sbb
sub
cmc
adc
daa
xchg
roll
test
mov
jecxz
in
and
in
cltd
pushf
das
cli
sub
adc
pop
mulb
add
and
stos
lea
imul
adc
pop
movsb
hlt
cli
adc
imul
jmp
rcll
jp
iret
repnz
xchg
add
push
cmp
outsl
ret
or
addr16
lcall
popf
add
add
les
and
jno
sub
arpl
aad
mov
ss
mov
jns
das
sti
daa
fiadds
xor
in
pop
loop
adc
lods
add
push
adc
xchg
xor
push
add
clc
push
std
movsl
int3
dec
stos
scas
or
scas
lods
insl
int
sbb
mov
outsb
and
sub
xchg
stos
lret
mov
ja
jbe
xlat
or
ljmp
xlat
pop
push
xlat
sbb
cmpsb
jns
mov
mov
and
adc
jne
jmp
adc
push
xor
data16
jbe
imul
imul
stos
inc
repnz
add
xchg
arpl
ret
mov
dec
pop
shll
or
into
ficomps
mov
add
cld
kortestw
jns
pop
movsl
jle
icebp
flds
cli
or
hlt
gs
bound
push
bound
push
jl
inc
push
xchg
outsl
push
imul
jge
fwait
mov
cwtl
pop
pop
shl
and
imul
int3
sti
jb
jg
aam
jnp
ljmp
jb
rcrl
mov
imul
cld
push
fsubp
add
sub
stos
jg
into
pop
or
movsl
pop
push
stos
shll
out
mov
scas
icebp
sbb
jmp
inc
xor
xchg
xchg
addr16
push
sub
push
in
sub
enter
sahf
out
mov
loop
addb
jmp
adc
sbb
push
and
pop
mov
mov
stos
pop
pop
push
dec
push
test
add
push
jmp
fadds
mov
insb
hlt
iret
ficoml
roll
pusha
orb
mov
sti
jmp
sub
shlb
cmc
dec
mov
mov
shlb
mov
fsubr
add
xor
hlt
xor
out
sub
pop
jbe
xchg
ds
push
adc
adc
and
stos
stos
loopne
shlb
adc
jnp
loop
sbb
loop
nop
or
dec
pop
add
adc
shlb
pop
cmp
addl
insl
mov
stc
loope
jg
lods
mov
mov
cld
add
shl
xchg
sbb
xchg
out
pop
outsl
and
sbb
test
loop
pop
push
dec
mov
add
aad
mov
cmpsb
ss
mov
das
xor
and
xchg
pop
dec
cmp
notrack
cmc
in
int3
jecxz
push
ljmp
cmpsl
jnp
cmp
out
movsl
es
or
fcoms
jecxz
inc
add
cmp
and
scas
lret
jnp
or
fwait
cmpsb
xor
pop
scas
dec
enter
jmp
dec
nop
mov
outsb
inc
bound
rcrl
and
mov
dec
adc
xor
sbb
and
and
pop
sbb
dec
in
xchg
push
lea
mov
je
and
loopne
pushf
pusha
mov
pushf
xchg
and
test
cmpsl
sbb
push
sbb
mov
sbb
mov
outsb
xchg
xor
call
shll
ffreep
add
push
sar
iret
adc
adc
cmp
xor
push
jno
push
movsl
mov
xor
mov
push
cmp
jge
pop
jae
ss
dec
in
test
sub
addb
jns
into
insl
xchg
xor
add
scas
xor
repnz
icebp
xchg
pop
xor
inc
inc
int3
fsubs
add
das
xchg
push
push
xlat
out
and
pop
fdivrs
imul
popf
adc
test
pop
cmp
inc
adc
mov
outsb
test
pop
mov
out
das
inc
dec
and
faddl
and
xor
xor
std
cmp
les
mov
cmpsb
ljmp
ret
clc
das
lret
lahf
loopne
add
adc
adc
ss
fsts
mov
js
jns
scas
mov
in
int3
aam
sub
loopne
ret
repz
rcll
cmp
pusha
mov
push
gs
rorl
out
adc
xor
xor
jb
mov
ja
les
lahf
or
stc
mov
popf
int3
jp
lahf
mov
in
xor
cld
mov
nop
jns
jo
cmp
cmp
arpl
mov
stos
add
sub
cmp
dec
je
or
adc
icebp
and
stos
push
shll
in
cmp
jg
add
stos
pop
dec
and
punpckhbw
daa
leave
cld
xchg
inc
jge
les
mov
xchg
cwtl
scas
into
mov
xor
arpl
aaa
push
repnz
sbb
hlt
jns
xor
outsb
jno
jmp
cmp
adc
mov
shld
xor
xor
add
cs
add
adcb
inc
imul
jns
and
inc
rdmsr
cltd
inc
push
aad
lock
push
stc
cmpsb
add
add
sahf
cmpsb
xlat
jecxz
inc
sbb
mov
inc
clc
aaa
mov
iret
xorl
mov
fidivrs
popf
and
cmp
push
lcall
sub
mov
out
dec
aam
fnstsw
out
xor
jnp
jb
int3
xor
pop
mov
push
xor
idivl
mov
icebp
int
dec
out
lret
dec
push
mov
pop
mov
stos
adc
inc
xor
cmp
call
ss
or
imul
dec
ss
ss
mov
cmc
jl
push
incb
lret
mov
add
mov
jb
pushf
loopne
mov
sub
sbbl
bound
jecxz
sbb
xchg
jl
mov
inc
mov
sbb
imul
cmpsb
dec
popf
out
adcb
jbe
add
jmp
lock
out
into
cltd
add
push
push
cmp
xchg
gs
mov
jecxz
jo
lods
push
jmp
aas
mov
inc
inc
jnp
jecxz
es
ret
fwait
ljmp
icebp
icebp
or
inc
cltd
dec
jo
rcl
xor
roll
into
add
test
cmc
movsb
xor
out
inc
mov
or
aam
xor
stc
jae
or
push
les
ds
mov
adc
icebp
and
jne
fists
mov
inc
lods
mov
pop
and
jbe
mov
nop
ret
das
mov
mov
repz
sub
pop
lcall
addr16
andb
std
mov
xor
pop
mov
mov
imul
push
repz
ret
lret
loop
dec
dec
xchg
mov
cmp
das
pop
loop
repnz
jp
nop
jl
mov
or
lods
jno
xor
push
cmp
jbe
in
dec
ss
add
xchg
add
dec
add
cmpsl
mov
popf
psrld
shll
sbb
sbb
and
jge
push
dec
jmp
mov
xchg
mov
xchg
movsb
jg,pt
sar
or
mov
imul
test
and
mov
pop
mov
fdivs
mov
or
lret
lods
insb
cli
js
xor
cmc
xchg
rcr
xorb
xchg
addb
and
les
jbe
lcall
out
mov
les
mov
cli
xlat
call
call
imul
scas
lret
sahf
adc
sbb
pop
push
mov
lcall
or
inc
cmc
inc
int
mov
stos
in
dec
movsb
pop
cmpsb
in
mov
cwtl
dec
jge
sti
rol
aaa
add
pop
lahf
pop
mov
fisttpl
lcall
testb
iret
xchg
jnp
imul
fsubs
or
test
pop
jb
pop
inc
in
loope
int3
mov
and
adc
push
sub
push
adc
jecxz
fidivl
mov
mov
lahf
hlt
cltd
dec
push
fmull
call
ds
ror
sub
pop
sub
loop
call
jl
mov
stos
flds
inc
or
and
mov
push
lret
sbbl
jp
xchg
ret
jbe
popa
ljmp
adc
js
inc
or
xchg
out
xchg
push
cmpsl
roll
lods
cli
xor
jmp
push
popa
sbb
mov
push
cltd
idivl
pop
mov
enter
test
inc
jmp
adc
fisttps
mov
scas
mov
add
es
and
or
xchg
int
dec
adc
cmpsl
cmp
ja
mov
and
frstor
xlat
xor
es
inc
enter
or
cmp
mov
int
hlt
jge
inc
sub
xchg
or
stc
jle
fstps
nop
xchg
adcl
lods
inc
dec
lahf
sbbl
fdivs
lcall
je
add
sarl
roll
stos
jle
dec
popf
pushl
jl
sbbl
iret
ret
jge
adc
inc
repnz
cmpsl
xchg
stos
mov
or
insb
pop
inc
pop
mov
faddl
jb
aas
cmp
push
sbb
inc
adc
out
push
out
mov
mov
cmc
xor
call
cmp
icebp
push
and
cli
test
rcpps
out
push
cmc
and
fidivrl
jb
sbb
ds
data16
pop
mov
in
push
cmpb
jmp
and
xchg
jbe
insl
lret
repz
js
jg
push
inc
addr16
adc
es
mov
stc
data16
pop
inc
adc
push
jns
mov
cmpsl
push
lds
sub
rcrl
sub
cmp
jle
xchg
in
cli
push
add
cmp
or
mov
fistpll
push
dec
jbe
cmp
test
pop
fchs
cltd
cltd
jns
cld
xchg
mov
dec
stc
in
sub
outsl
aad
mov
sbb
xchg
popf
jae
sbb
iret
cli
pop
les
inc
in
mov
cltd
cmp
insl
das
push
or
lret
lods
dec
jmp
mov
jl
test
and
cwtl
ret
test
mov
adc
xchg
sbb
pop
sti
mov
ret
cmp
push
add
or
jnp
sti
push
lsl
mov
or
push
shl
push
inc
das
sub
mov
or
inc
sbb
fidivrl
jmp
pop
mov
das
inc
cmpsb
mov
hlt
fwait
xchg
ret
in
mov
add
or
aam
mov
push
sahf
out
push
in
add
add
call
std
pop
lock
mov
pop
mov
inc
inc
inc
or
cli
xchg
add
ljmp
sbb
xorl
jbe
hlt
push
sub
inc
or
pop
pop
mov
pop
test
dec
fstpl
idivb
dec
addr16
test
int
aaa
ficoms
or
xchg
das
lcall
xor
es
pop
outsb
mov
movsl
and
jnp
mov
lods
cli
aaa
lea
fwait
and
mov
fidivrs
dec
rep
in
imul
cmpl
lods
pop
orb
test
adc
dec
pop
test
cmc
int3
stos
mov
in
lods
jns
xlat
xchg
push
adc
mov
xchg
xchg
cmp
stos
mov
and
les
imul
imul
mov
pusha
je
mov
jecxz
push
and
icebp
stos
arpl
orb
mov
push
mov
xor
aam
lods
inc
fldcw
xchg
adc
test
das
ret
addr16
dec
aas
xchg
ja
dec
imul
pusha
lcall
cmp
or
repnz
jge
jno
mov
in
pop
bnd
dec
sahf
pop
sbb
inc
or
adcb
and
xchg
jno
fisttpll
pop
sbb
and
mov
jo
push
out
les
dec
xor
sbb
mov
adcb
les
xchg
or
lods
scas
mov
push
dec
adcb
xchg
mov
out
add
xchg
popa
cmp
in
outsb
xchg
daa
sbb
jbe
cs
push
rcr
out
adc
adc
lods
mov
xchg
movsl
sub
sub
mov
mov
jl
xor
cwtl
lds
push
mov
or
gs
sbb
mov
les
mov
xchg
or
xchg
add
rclb
xchg
adc
call
inc
cmp
push
push
lods
sub
aad
push
adc
jnp
mov
mov
mov
inc
sub
xorl
aad
jbe
int
xchg
sbb
rclb
mov
mov
pusha
jns
and
in
mov
pop
cmpl
pop
and
pop
xchg
or
sbb
orb
jnp
sub
cwtl
test
enter
adc
xchg
add
mov
dec
push
mov
scas
pushf
or
or
push
je
cmp
xor
add
add
test
adc
inc
out
shr
mov
in
xor
mov
aam
pushf
dec
leave
add
xor
jnp
das
or
ljmp
enter
mov
xchg
cmp
movsl
jno
cmpsb
cltd
sbb
mov
pusha
cmp
cli
aas
xchg
jl
or
fsubrs
addb
and
mov
push
popl
imul
js
stos
xchg
filds
jnp
fnstenvs
sbb
xchg
fdivl
jns
test
adc
pop
inc
out
xchg
pop
pop
mov
xchg
insl
lahf
cli
enter
mov
insl
loopne,pn
enter
or
je
enter
dec
mov
sbb
insl
add
mov
fidivl
xchg
jno
adc
xchg
lret
iret
les
loope
pop
pop
dec
leave
push
retw
sti
inc
mov
movsb
pop
test
inc
inc
xchg
call
push
movsl
movsl
stc
sub
push
in
test
sbb
loopne
stos
jne
nop
adc
or
loop
cli
leave
sub
lahf
test
loope
sbb
xchg
addr16
adc
int3
mov
sarl
jae
repnz
das
add
mov
pop
add
addr16
in
sub
or
rcl
push
push
dec
mov
stos
nop
add
ret
jl
aad
rcrb
test
aaa
xchg
mov
jae
jnp
and
into
dec
push
jle
sub
addr16
pop
mov
andb
and
stc
int3
std
test
mov
loopne
sbb
out
mov
ficompl
cmp
add
loopne
aad
mov
or
in
gs
xchg
ds
fsts
mov
mov
ja
xchg
mov
xchg
rol
sbb
movsb
leave
pushf
push
adc
cltd
dec
mov
mov
push
fnstenv
cmp
or
adc
cmp
out
add
loop
hlt
std
add
xchg
cmp
loopne
push
and
nop
mov
jl
push
or
sub
jne
add
sub
and
jo
pop
into
jmp
imul
std
fwait
imul
mov
fldt
push
push
pop
mov
or
rclb
fstps
pop
cmp
sbb
inc
xchg
repz
dec
sbb
sbb
lock
lahf
add
push
nop
dec
sbb
xchg
pushf
std
pop
outsl
aas
dec
stc
mov
stc
jne
insb
sub
push
outsl
mov
in
lods
lds
les
leave
push
in
dec
idivb
mov
cmpsb
mov
push
add
or
push
pop
push
daa
push
icebp
outsb
add
movaps
out
bound
insb
xor
xchg
in
movsb
cmpsb
js
stc
push
dec
xor
cmc
lods
test
imul
push
loopne
push
sub
into
sub
into
adc
repz
sarb
insl
cmc
out
pop
xchg
lret
mov
iret
xor
sti
jmp
fcoml
push
cmp
cld
iret
in
xchg
loopne
mov
outsl
add
mov
icebp
test
and
mov
jp
mov
filds
cmpsl
adc
adc
mov
push
sub
fisubs
mov
pop
repz
mov
sti
arpl
jne
pop
xchg
mov
mov
nop
inc
arpl
std
sub
orb
push
ds
mov
push
adcl
enter
mov
push
lock
pop
pop
jns
sarl
dec
mov
or
mov
out
mov
pop
push
xor
lds
push
add
push
mov
sbb
jno
or
jmp
sub
pop
iret
inc
das
stos
in
cmp
push
fdivr
jnp
lahf
arpl
sub
mov
xchg
mov
lahf
inc
or
and
sub
in
lcall
push
clc
dec
sbb
mov
dec
jnp
mov
adc
and
xchg
jb
shrb
adc
int3
jmp
stos
fcmovnu
cmp
fstpt
jo
aad
inc
mov
xchg
jb
push
scas
mov
sub
stos
adc
sub
pop
hlt
cli
add
pushf
fistl
ret
xor
pop
xorb
inc
add
sbb
jnp
cmpsb
dec
or
mov
inc
jp
mov
int
mov
push
cs
jns
cmpsb
xchg
push
daa
negl
cmp
xlat
xor
sbb
imull
mov
popf
adc
lods
repz
in
rol
adc
imul
cmpsl
lea
aas
orb
sub
fwait
iret
sahf
andb
fndisi(8087
adc
into
and
test
xchg
mov
dec
push
mov
and
loopne
lcall
jo
outsb
lret
jmp
mov
dec
es
pop
fildl
ds
adc
int
push
mov
test
mov
dec
ja
jne
cmp
and
cmp
or
add
cmp
mov
and
scas
pop
fidivl
and
adc
int3
xchg
popf
mov
dec
leave
mov
and
pop
pop
xor
push
xrelease
mov
jp
sub
test
fcmovnu
mov
mov
jno
arpl
sbb
push
dec
or
inc
mov
pop
sub
js
lds
mov
push
inc
sti
xlat
scas
inc
lods
push
std
adc
dec
popa
leave
or
stos
xlat
sahf
cmpl
xchg
insl
push
inc
mov
out
xchg
push
call
cli
cltd
cmp
push
imul
or
ds
jae
fbld
aas
int3
nop
or
add
mov
mov
mov
mov
sahf
arpl
xor
in
pop
jp
adc
and
push
call
js
cli
push
xchg
dec
jl
cmp
cmpsl
xchg
lret
je
dec
stos
lahf
xchg
mov
and
jecxz
xchg
sar
js
inc
daa
popa
sbb
cltd
or
xor
aas
aas
mov
mov
cld
xchg
and
out
push
into
popl
outsl
sahf
aam
mov
sub
or
dec
in
xchg
pop
and
jecxz
jno
cmpsl
mov
rcr
out
add
push
and
shll
pop
xor
lock
dec
sub
adc
das
ss
jge
push
dec
call
inc
mov
xor
mov
shrl
add
mov
push
into
sbb
xchg
xor
lahf
jp
fdivr
das
inc
xchg
and
pop
data16
std
fisubrl
filds
mov
pop
mov
xlat
and
mov
adc
adc
das
and
xchg
inc
sbb
push
and
cwtl
rolb
mov
lock
nop
imul
imul
test
lds
jle
jecxz
or
mov
xchg
adc
loope
sahf
jnp
adc
pusha
imul
rol
cmp
push
push
cmp
out
cmp
lahf
andb
inc
mov
stc
or
test
cmp
pop
jg
icebp
aad
into
gs
repnz
into
mov
rcrl
orl
cmp
clc
repz
jecxz
repnz
pop
push
mov
cmp
rcr
insl
mov
mov
mov
mov
fisttpll
je
inc
xchg
adc
mov
xchg
movsl
pop
dec
mov
out
inc
mov
lcall
jg
in
test
and
loope
rorb
repnz
xor
pop
mov
xlat
sub
xor
push
outsb
adc
xlat
and
adc
stos
mov
ret
inc
xchg
mov
jno
adc
jmp
loop
sub
fmul
sub
roll
mov
cli
xor
test
aam
push
aaa
into
xchg
jb
or
lods
ds
jge
xchg
orb
mov
xor
movsl
dec
mov
xor
daa
mov
icebp
xchg
adc
lock
pushf
sub
daa
or
dec
push
das
inc
jne
push
sub
and
and
xor
inc
popa
into
fbld
push
pop
push
pop
inc
pop
jmp
std
pop
xor
adc
sti
loop
in
mov
cs
sahf
xor
jbe
dec
adc
mov
pop
xor
in
int
cmp
jb
xlat
push
insb
jne
movsl
mov
int3
xchg
jmp
lcall
dec
lock
out
push
and
stc
jp
nop
rclb
cmp
dec
movsb
dec
icebp
fcomi
enter
push
int3
xor
lods
add
and
adc
lds
sub
negl
push
push
and
test
push
test
int3
sub
lea
cmpsl
xchg
and
shlb
shrl
dec
enter
in
cmp
push
jmp
or
fstpt
scas
out
fsubr
ja
sub
push
insb
xchg
cmpsl
cwtl
jns
add
mov
add
cmp
mov
out
imul
cmp
adc
scas
adc
ror
pop
loopne
jbe
add
fcmovnb
pop
das
lcall
lods
adc
lret
aam
inc
mov
xor
jns
mov
dec
popa
in
out
into
fadds
adc
adc
jle
lret
xchg
xor
mov
fcoms
adc
enter
imul
pop
nop
push
shll
mov
lods
cmp
push
rcr
dec
outsl
cmpsl
xchg
stos
mov
xchg
push
add
xor
mov
bound
es
dec
add
sti
dec
lcall
lds
and
jecxz
add
jnp
addr16
fmul
mov
pop
ljmp
nop
inc
mov
push
jbe
pop
les
dec
in
subb
xor
enter
mov
cs
jmp
arpl
movsl
push
fwait
std
bound
ret
xchg
shrb
js
cs
lcall
in
inc
pop
fcoms
xor
jle
stc
ret
jbe
jle
pushf
fs
cmpl
jno
jmp
popf
dec
jg
inc
push
cmp
sbb
pushf
out
in
push
test
xchg
cld
xor
mov
imulb
dec
pop
cmp
mov
mov
dec
cmp
mov
ss
push
iret
fldl
idivb
push
leave
std
jbe
dec
push
out
cltd
andb
loopne
clc
lea
jns
jns
aas
movsl
xor
fdivrl
notb
arpl
mov
and
pop
scas
adc
out
xchg
mov
inc
frstor
mov
adcb
pop
popa
dec
push
sbb
adc
and
pop
dec
mov
jge
or
jns
pop
mov
xor
cmc
or
scas
leave
add
fisubrl
xchg
adc
push
sbb
dec
mov
call
adc
xor
sbb
ljmp
mov
outsb
scas
and
xor
mov
add
icebp
dec
sbb
in
xchg
aam
jnp
idivb
mov
push
popf
jecxz
xor
aaa
dec
cmp
orl
mov
nop
outsb
faddl
popf
mov
add
mov
cmpsb
shr
inc
sbb
call
sbb
outsb
mov
jbe
cmp
subl
push
jns
adc
inc
cmpsb
data16
ljmp
popa
mov
jecxz
sub
shr
jo
cli
stos
cld
loope
imul
outsl
or
out
aaa
aam
sarl
lahf
scas
mov
les
fcoml
test
test
les
and
fidivs
arpl
cmpsb
pop
faddl
inc
push
mov
mov
push
mov
mov
sbb
outsl
inc
nop
sbb
push
or
ds
cmp
test
ret
sbb
add
or
leave
xor
clc
push
adc
loopne
push
jmp
mov
fadds
mov
jb
aam
xchg
fildll
inc
js
loopne
add
push
inc
mov
and
mov
jle
lods
adc
mov
subl
pop
in
push
xchg
xor
mov
lret
and
scas
cmpsl
sub
outsb
arpl
cmpsl
es
js
lahf
filds
mov
or
add
movsl
lea
cmp
call
adc
cmp
mov
mov
nop
xor
ja
jmp
pop
test
adcb
nop
lods
call
dec
mov
xor
clc
cmpsl
xor
inc
pusha
nop
andb
lcall
lahf
out
mov
sti
repz
adc
jecxz
fistps
inc
xor
pop
mov
es
sub
mov
pop
loopne
int
push
cltd
outsb
or
lds
mov
mov
dec
adc
dec
cmp
js
imul
pop
mov
jg
pusha
leavew
mov
sbb
adc
mov
mov
out
push
imulb
daa
sahf
lahf
sub
xchg
cmp
jg
dec
aam
addr16
mov
pop
seto
and
or
mov
mov
loopne
xor
xor
pop
mov
push
xor
fisubrl
repnz
nop
push
inc
mov
dec
xor
pop
sbb
in
push
ret
pop
decb
divl
jl
jecxz
es
xor
outsl
insb
shl
mov
in
pop
rorb
jecxz
dec
fldt
push
mov
clc
insl
repnz
pop
in
call
mov
xchg
push
mov
arpl
cmpsb
or
jl
xchg
and
out
dec
mov
nop
dec
pusha
aaa
scas
movsb
pop
push
sbb
fisubrl
adc
mov
stc
adc
sbb
sbb
das
sbb
jo
fstpt
add
cmpsb
outsl
add
sahf
mov
push
or
bnd
mov
aaa
scas
into
mov
test
jb
imul
xchg
sub
mov
add
mov
mov
data16
pop
or
mov
js
push
inc
and
les
lock
imulb
sbb
ret
jg
int
cmp
cmc
jo
mov
test
mov
mov
mov
cld
and
in
adc
aad
pop
jl
and
pop
xchg
sahf
dec
mov
in
adc
sub
sub
movsl
adc
stos
and
pop
std
adc
insb
insl
iret
cmp
xchg
xchg
xor
pop
in
or
test
mov
test
push
cmp
out
dec
lock
xchg
mov
or
imul
jno
dec
and
daa
loopne
test
scas
addr16
and
jle
push
mov
inc
enter
fnsave
mov
adc
es
mov
and
sub
mov
std
call
inc
mov
insb
and
test
pop
out
inc
mov
mov
push
rcrb
adc
and
hlt
movsl
test
aas
testb
rcrl
pushf
and
pop
into
push
fldt
lret
cmc
inc
shrl
push
inc
dec
fnstcw
xorl
sarb
fiadds
jnp
rolb
mov
ds
jae
sar
sti
cwtl
sub
aas
pusha
outsl
pop
and
xchg
lods
scas
enter
test
imul
mov
pop
mov
xchg
test
adc
and
sti
inc
lds
pop
into
jg
xor
je
insb
scas
add
cmp
push
cmp
jp
pop
cmp
stc
fidivrl
mov
jb
adc
lds
dec
repz
daa
or
pusha
cs
push
cli
dec
add
inc
cltd
xchg
mov
gs
iret
out
adcb
jbe
push
xlat
lret
loopne
jno
dec
lods
jle,pn
loopne
xchg
or
lods
adc
cmp
push
jmp
arpl
cmpsl
dec
je
popa
xor
test
pop
xor
shll
pop
ffree
test
aad
in
cmc
or
rorb
aas
mov
and
dec
test
call
sti
movswl
pop
adcb
fs
out
cmp
into
add
loopne
cmpsb
xchg
ljmp
pop
inc
push
in
push
sbb
sbb
inc
inc
pop
push
movsl
dec
add
shrb
add
aaa
icebp
cmp
jnp
negb
xor
mov
sbb
call
gs
add
movsl
pop
pop
push
imul
roll
out
jp
xor
lret
mov
cmpsb
stos
fidivs
cmp
hlt
pop
cmp
test
mov
cmpsl
pop
mov
or
pop
arpl
stc
jl
add
ret
cli
mov
xchg
scas
sub
out
out
xchg
pop
call
push
cld
sbb
cltd
cwtl
xchg
add
cmp
cmpsb
stos
mov
stc
iret
inc
xlat
cmp
jne
in
add
cmpsl
pop
cld
mov
mov
std
inc
adc
sub
xchg
adc
inc
les
mov
cld
or
loope
cltd
or
push
repnz
fcmove
mov
mov
mov
pop
pmaxub
inc
push
subl
js
loopne
mov
incb
repnz
test
mov
cwtl
je
fs
mov
mov
mov
popf
stc
subl
out
xchg
rdpmc
into
mov
test
lods
cmp
addl
js
sbb
mov
or
jne
adc
lods
out
adc
fisttpll
mov
cmp
cmpsb
daa
mov
aad
mov
inc
outsb
cmp
popf
je
pusha
sbb
xchg
lea
aam
inc
cmpsl
cmp
out
add
cmpsb
cmpsl
sub
pop
ds
and
movsl
lahf
mov
insb
and
push
push
dec
mov
enter
sti
movsl
jbe
xlat
and
cmp
loopne
and
cld
shlb
push
call
inc
jmp
fsubrl
and
jnp
rolb
addl
into
outsb
subb
or
cs
aad
cltd
pop
out
pop
shrl
cld
addr16
dec
dec
ficoms
cltd
adc
popf
stos
in
int
daa
adc
push
adc
in
into
xor
cltd
add
lret
xchg
jns
pop
cltd
inc
and
sub
cld
cmpsb
shr
mov
mov
stc
int3
xor
sub
adc
scas
movsb
lret
insb
imul
sbb
and
jo
test
pand
dec
xlat
mov
popf
mov
pushaw
jno
jp
jg
leave
push
mov
icebp
nop
imul
pop
cltd
into
pop
and
ret
fldl
jle
xchg
cmp
adc
dec
cmpsb
push
shlb
loopne
stc
popf
fstpl
and
dec
in
loop
cmp
nop
sub
aam
adc
sbb
mov
mov
cld
enter
pop
fs
adc
pop
mov
loop
out
daa
xor
jnp
ja
sbb
aas
call
data16
sti
test
sub
call
or
mov
pushf
fstl
mov
subl
lock
inc
aas
aad
fwait
xchg
leave
fildl
mov
cmp
pop
shll
xchg
pop
xchg
xor
das
xor
sarl
dec
inc
push
movsb
pop
call
inc
int
inc
cmpsb
pop
scas
inc
inc
adc
dec
clc
mov
sub
test
hlt
iret
push
sarl
jmp
xchg
ljmp
xchg
icebp
or
mov
xchg
inc
into
mov
jae
lods
xor
jmp
ljmp
xlat
aam
fdiv
push
inc
jmp
mov
push
dec
jno
rorl
rclb
xchg
insl
call
icebp
sub
cmpb
xchg
leave
lods
daa
clc
sub
push
ss
rorl
xor
xorl
lahf
or
jne
int3
lret
aas
cmp
pop
and
fmulp
ret
pop
cmc
jae
push
add
loopne
mov
out
jle
mov
aam
shrl
mov
inc
loop
outsl
in
and
mov
xor
dec
pop
inc
pop
imul
enter
fwait
testb
ss
push
and
jb
mov
sub
pop
push
popa
adc
cmp
out
fidivrs
mov
jbe
mov
ret
push
sarl
call
mov
or
decl
dec
and
add
xchg
and
aaa
xchg
sbb
test
inc
cs
lock
loopne
insb
and
dec
sub
mov
lods
push
xor
ret
adc
xchg
sub
ss
push
mov
cld
cmp
fisttpll
out
in
or
add
jae
mov
xchg
imul
pop
mov
inc
xchg
cli
inc
ret
or
mov
orl
pushf
leave
mov
stos
daa
das
sub
lods
and
fs
mov
popa
imul
scas
cmp
in
nop
push
or
and
cmp
pop
jne
dec
sub
adc
rcrb
xchg
inc
and
dec
rcll
mov
int3
mov
add
adc
or
and
lret
jo
lret
pop
pop
mov
sub
pop
jge
sahf
and
mov
sbb
cmp
dec
inc
sbb
out
fisttps
in
push
jecxz
mov
push
hlt
ret
jmp
adc
jns
lcall
sub
mov
je
xor
imul
adc
ficoms
in
stos
mov
outsl
jo
xor
sub
fcomip
jle
call
jecxz
repnz
cmpb
push
movsb
xor
lcall
ja
movsl
loope
mov
mov
jns
dec
mov
push
sub
arpl
mov
mov
or
orb
xchg
mov
mov
push
dec
in
jg
cmp
mov
pop
mov
loope
or
mov
adc
cltd
bnd
cmc
jbe
push
mov
inc
push
mov
imul
cmpsl
ss
out
loopne
sbb
nop
push
das
outsl
fisubrl
xlat
jae
xlat
inc
sbb
and
out
scas
pop
mov
dec
stc
jle
jp
mov
aas
adc
sbb
lds
fs
jb
cmp
lea
aaa
and
es
out
jnp
cltd
xlat
test
jecxz
dec
in
pop
push
movsl
loopne
sbb
out
pop
repz
xchg
adc
imul
test
add
sub
inc
jl
jecxz
xor
stc
xchg
push
es
sub
imul
cwtl
sarl
push
push
mov
stc
push
iret
aad
clc
repnz
ret
sahf
adc
cmp
arpl
and
adc
xor
push
or
shlb
rcrb
jne
sbb
jb
iret
sti
ret
imul
outsl
pusha
lcall
leave
push
in
adc
cmp
leave
jno
dec
std
out
mov
cltd
jle
and
cmp
mov
push
int3
cs
fs
test
pop
xchg
maxps
lahf
xchg
shlb
or
mov
pop
and
xchg
outsl
push
inc
loop
mov
mov
dec
xlat
mov
fs
enter
pop
fs
cmp
push
push
xor
sub
inc
stos
sub
and
pop
pop
cld
fsubrs
out
repz
push
hlt
shlb
xchg
and
sub
add
mov
cmp
pop
push
xor
mov
jg
mov
mov
mov
jg
in
xor
lea
push
int3
xchg
scas
jge
repz
and
cltd
setge
lock
mov
mov
in
add
mov
jne
lock
je
xchg
cltd
cmpsb
and
xlat
int3
and
xor
add
xchg
lock
test
xchg
dec
mov
push
dec
mov
into
int3
movsb
mov
pop
dec
push
mov
push
test
jmp
xlat
addr16
fdivl
push
pop
shl
jae
jmp
pop
cld
mov
loope
fcomps
cmp
xchg
loope
out
cld
mov
dec
cmp
lret
lods
js
outsl
ret
scas
jno
inc
ljmp
jb
jp
clc
sbb
mov
cmpsb
mov
imul
sbb
fdivl
push
test
aad
je
mov
std
roll
data16
mov
jge
in
pop
imul
stos
imul
mov
ds
pop
xor
loopne
push
lret
pop
ljmp
arpl
fsubs
mov
cli
test
lods
jg
pop
ror
fidivl
scas
sbb
adc
sub
push
mov
or
cmp
mov
frstor
test
lea
xchg
mov
fucomip
push
xchg
dec
xor
lcall
sbb
pop
loopne
test
xchg
mov
movsb
scas
test
push
cmp
stos
adc
leave
mov
fwait
or
xchg
add
push
cmc
mov
mov
adc
mov
in
into
incl
sub
lock
xor
insb
push
stos
mov
push
js
inc
fwait
cmp
push
push
aas
test
loopne
enter
mov
pop
jl
mov
push
daa
clc
mov
jecxz
jne
inc
inc
popa
inc
in
sub
and
loop
into
ret
out
xor
jge
sub
popf
adc
sub
movsl
xchg
div
movsb
and
adcb
pop
adc
push
sbb
xor
shrb
hlt
movsb
add
fidivrl
xchg
cmp
dec
jecxz
orb
in
sbb
inc
push
lahf
mov
xchg
divl
daa
iret
and
adc
pop
inc
cmp
out
std
mov
mov
sbb
repnz
xlat
popf
pop
mov
dec
xchg
shll
jns
sub
jmp
push
push
adc
cltd
or
pop
lea
jge
in
pop
xor
pop
adc
js
jg
jge
stos
imul
xchg
pop
adcl
or
icebp
insl
sub
xchg
aad
jbe
stos
into
push
jg
xchg
lds
jb
leave
jae,pt
sub
sub
inc
loop
filds
mov
pop
nop
jg
jp
ret
imull
mov
icebp
dec
jg
adc
jo
inc
roll
nop
sbb
rolb
fildl
adc
jle
in
icebp
into
jne
mov
xchg
mov
pop
inc
mov
repnz
xor
into
xor
inc
sub
xor
add
xchg
xchg
or
fidivl
cmp
test
push
in
popf
push
ret
pushl
sar
gs
rol
mov
add
or
mov
data16
out
dec
scas
push
mov
lahf
sbb
enter
int3
jge
lea
add
xor
jl
loope
mov
or
xor
nop
inc
iret
cmp
push
dec
mov
stos
insl
pop
bound
xchg
mov
and
adc
mov
add
repz
insl
and
jb
sub
xchg
push
push
lret
push
inc
and
or
add
sbb
mov
fs
cmp
dec
mov
cmp
addl
nop
adc
xchg
jnp
mov
fmuls
iret
jg
cmp
sub
ss
jb
add
movl
jbe
pop
push
xchg
in
in
and
or
inc
pushf
and
push
aad
sbb
xor
lcall
xor
jns
jae
out
lods
sub
or
xchg
hlt
push
shrb
mov
test
inc
or
mov
mov
aas
in
cwtl
jecxz
sub
add
jg
stos
ja
add
xchg
xor
jg
popf
in
insl
lods
sbb
js
in
insb
jnp
jle
out
pop
mov
push
add
dec
aaa
push
add
xor
push
fnstsw
ljmp
mov
sti
xor
or
pop
ss
add
push
movsb
cwtl
mov
sbb
push
popf
daa
js
test
int3
mov
repz
ljmp
leave
mov
pop
ret
pop
imul
mov
es
inc
xor
stc
inc
pop
addr16
push
cmp
xchg
scas
les
clc
xacquire
lahf
stos
sbbb
adc
cmpl
pop
pushf
fisubs
outsl
push
movsl
lea
push
imul
jnp
dec
jmp
add
or
or
mov
dec
pop
mov
mov
sbb
xchg
jno
shrb
popf
ljmp
sub
dec
dec
dec
mov
push
xor
xchg
sub
inc
testl
pusha
or
pop
ljmp
dec
mov
or
xor
int
daa
cmp
pop
pop
push
sub
push
inc
addr16
inc
sbb
aaa
jo
push
or
xchg
dec
or
inc
decl
outsl
sub
call
sti
fsubrp
and
fsubrl
sub
ja
in
and
fistpll
sbb
sbb
insl
in
jnp
sbb
push
pop
mov
aas
adc
fnsave
int
std
sbb
mov
rolb
jne
jp
divl
xchg
mov
data16
insb
ja
loope
pop
cltd
xchg
jg
dec
jg
cmpsb
add
and
mov
mov
rorb
add
xchg
mov
cltd
out
cmc
push
mov
in
add
push
inc
inc
cmp
inc
shlb
stos
icebp
pop
out
pusha
je
fprem
mov
dec
inc
ss
pop
rcrl
js
cmpsl
mov
cltd
sti
push
fdivr
inc
and
stos
shrl
xchg
dec
jle
adcl
loopne
mov
ja
loopne
fcmovne
push
sti
and
jge
dec
adc
lock
dec
jge
test
sub
jl
into
cmc
lods
push
sub
pop
loopne
cwtl
fstpt
or
jbe
push
jmp
or
inc
push
mov
mov
dec
jmp
fisttps
push
push
negb
xchg
sbb
mov
lock
mov
repz
je
lret
iret
or
xlat
jno
testl
fiadds
push
popl
stos
insl
lods
pop
sbb
mov
scas
add
sub
or
cmpb
cmpsb
aas
cmp
jns
lods
rcrl
mov
pop
pushf
mov
lahf
push
xchg
scas
pop
mov
call
add
daa
add
adc
mov
jg
pusha
sbbb
mov
add
inc
cmp
insl
inc
adc
sub
sub
mov
push
and
pushf
pop
ret
in
negb
sbb
adc
cmp
mov
jbe
or
adc
cwtl
les
xchg
mov
and
sub
divb
jmp
lcall
scas
lret
adc
ror
xor
dec
inc
sub
dec
xor
dec
mov
jg
push
subb
popf
jmp
insb
lcall
mov
fbstp
mov
call
mov
push
or
xor
ret
bound
sbb
ffree
js
fdivrs
daa
inc
jae
fs
fisttpll
loopne
scas
inc
inc
mov
fdivr
addr16
sub
fwait
jbe
sub
add
sub
int3
test
movshdup
jl
mov
pushf
xchg
lret
fs
int
movsb
cmc
cmp
jecxz
or
js,pn
lods
cmp
dec
sub
sahf
or
aam
pop
add
ret
addr16
pop
dec
repnz
xchg
or
push
mov
cmp
mov
cli
das
les
icebp
xchg
clc
aas
sub
mov
mov
jge
adc
out
pusha
or
mov
in
push
xchg
clc
or
shrl
mov
push
xor
decl
adc
pop
push
xchg
fisubrl
imul
jns
pop
test
lods
mov
and
mov
es
add
orb
aas
into
movsl
push
loope
push
negb
pusha
pop
adc
jbe
in
adc
pop
loop
cs
aad
leave
rorb
andl
mov
xchg
push
push
or
dec
cli
mov
push
inc
movsl
test
cmp
jmp
outsb
or
out
inc
mov
movsl
xorl
dec
mov
test
fists
sbb
cmp
xchg
fistps
dec
mov
dec
neg
mov
pop
outsl
mov
cs
jge
or
fdivs
and
les
mov
mov
mov
adc
push
popf
lret
inc
xchg
call
mov
lret
or
sar
inc
xor
jge
sub
popa
xor
je
test
mov
fistps
push
arpl
xor
jg
rcrl
dec
out
cmp
ljmp
inc
loopne
inc
add
fwait
push
sbb
cmp
out
sub
ljmp
iret
xchg
outsb
fwait
ja
jne
dec
sub
outsl
xchg
or
rcrb
fisubs
stc
ss
xchg
cmp
fs
pop
insb
inc
ret
and
dec
xlat
push
and
xchg
inc
pop
cmc
adc
clc
int
dec
outsb
inc
lea
adc
bound
inc
or
jge
cmp
dec
pop
test
cwtl
fcoml
dec
movlps
loopne
ja
lods
rcrb
cld
xchg
xchg
dec
jae
testl
jmp
xchg
jno
popf
fisubl
in
repz
mov
jo
fisubl
lock
xchg
fst
sbb
xchg
cmc
adc
jp
mov
mov
lret
or
dec
nop
and
pusha
repnz
enter
into
xchg
sbb
mov
xorb
mov
loop
xchg
mov
cmp
shlb
pop
mov
cmpsl
jp
das
or
dec
lret
adc
xchg
in
pushf
into
sbb
sub
dec
out
jmp
mov
sub
cs
lods
arpl
push
mov
adc
jmp
and
pop
or
rcrb
loopne
mov
inc
or
mov
decb
sbbl
aam
mov
push
fwait
imul
xor
movsl
sbb
jge
jmp
mov
es
xor
in
pop
loope
mov
sub
cmp
cmp
sar
mov
ja
rcrl
aas
idivl
jno
popa
xchg
mov
mov
into
popa
push
fisttpl
mov
dec
jp
in
pop
mov
dec
push
fbstp
or
jo
dec
mov
dec
into
mov
dec
xor
inc
pop
imul
scas
dec
lret
push
jg
pop
mov
loopne
popa
in
mov
stos
loop
sbb
mov
insb
sti
push
jbe
icebp
lahf
fists
test
adc
sub
repnz
xchg
rep
pop
call
pop
fcompl
loope
sbb
sub
cli
adc
xchg
add
das
mov
int
mov
lea
ret
rorb
mov
mov
inc
adc
loopne
dec
fbstp
fcoml
dec
mov
add
jge
xchg
pusha
lea
xchg
jle
mov
std
jo
mov
mov
lahf
mov
mov
sub
add
pop
dec
pop
mov
sub
dec
leave
sub
adc
mov
adc
int3
xor
lods
icebp
jns
mov
sub
mov
sub
and
scas
mov
flds
sub
jmp
sar
adc
lds
test
in
bnd
cmp
sbb
dec
inc
repz
fisttpll
lods
add
mov
call
pop
adc
pushf
loope
mov
negb
pop
aad
jecxz
dec
fs
mov
push
mov
out
aaa
sub
lock
cmpsb
push
mov
jecxz
sub
cwtl
rcr
ljmp
mov
ja
cmp
scas
or
inc
push
outsb
xor
jne
lahf
dec
or
cmpsb
rcl
or
hlt
out
fdivs
dec
pop
shlb
shl
test
xor
mov
push
cmc
mov
loope
xor
inc
js
push
mov
in
dec
mov
fsubs
out
int
in
ss
aam
or
out
cs
ficoml
jno
pusha
gs
fs
pushf
daa
push
mov
fcomps
loop
ret
ljmp
mov
aam
lods
aam
icebp
enter
out
int3
push
addr16
inc
insb
and
in
movsl
push
pop
push
addr16
in
dec
shrb
mov
xor
lods
aad
ljmp
jge
sbb
aad
adc
das
mov
cld
and
jb
lods
xlat
call
cmp
mov
sub
dec
hlt
or
lahf
divl
or
in
int3
jle
dec
lahf
dec
fsubl
out
push
inc
movsb
in
sbb
adc
pop
out
ds
mov
int
and
add
mov
xchg
clc
divb
sbb
mov
rorl
jb
add
stos
pop
adcb
sbb
dec
test
inc
scas
jbe
or
sbb
push
or
lret
jle
lds
and
out
es
int3
sub
sarl
dec
int
je
and
shll
enter
nop
add
cmp
loop
add
gs
jb
enter
in
out
sub
mov
dec
and
adc
adc
lods
add
stos
add
add
cmp
pop
inc
int
sbb
dec
mov
adc
imul
pushf
arpl
ret
lods
lret
outsl
push
jb
sub
dec
jnp
add
lret
sbb
call
and
mov
lret
scas
mov
sbb
dec
xchg
jo
xor
xchg
insl
inc
push
and
ljmp
push
mov
cmp
sbb
dec
cs
adc
fsts
sub
cmp
xchg
in
idivl
ds
pmullw
sahf
enter
imul
sbb
adc
ja
int
xor
xchg
mov
mov
ss
xchg
addr16
xor
stos
testb
sti
gs
or
dec
sub
dec
shrb
jne
mov
pcmpgtd
daa
test
imul
mov
inc
aam
inc
mov
add
push
and
or
lock
scas
sub
lods
lods
or
push
fs
int
dec
inc
inc
mov
jecxz
cmp
add
mov
or
mov
sub
std
inc
jne
xor
mov
iret
lock
cmpsl
cld
push
cmpsl
rcll
xchg
add
aaa
mov
and
shll
push
pop
adc
pop
pop
subb
push
ljmp
shrb
or
mov
lods
cmp
dec
mov
jmp
xchg
fmul
jae
inc
or
fisubl
bound
jmp
test
sbb
jmp
sub
movsl
sarl
sbb
mov
dec
out
cmp
movsb
ficomps
pop
xlat
push
dec
test
int3
mov
mov
and
stos
xor
push
sbb
pop
pop
arpl
mov
repz
pop
jmp
negl
iret
xchg
or
and
dec
push
mov
loope
scas
push
mov
pop
dec
push
cwtl
pusha
pop
daa
sbb
in
inc
mov
xor
stc
lret
or
xchg
insl
inc
pop
leave
add
orb
mov
push
dec
imulb
mov
push
or
pop
test
movsl
in
push
clc
cmp
push
sub
adc
fldl
jle
jb
or
xchg
rcrl
sbb
push
inc
xor
clc
add
outsb
cmp
mov
loop
pop
push
and
xchg
nop
and
push
jne
int
mov
jnp
inc
je
mov
ucomiss
outsl
push
cmpsl
cmpsl
movsb
mov
leave
outsb
mov
dec
sbb
imul
xchg
mov
xor
or
orb
imul
loopne
jle
mov
sti
cmp
sub
or
test
mov
gs
leave
pop
flds
hlt
ret
jecxz
ror
daa
shlb
lea
cmp
int
cli
loope
fwait
loopne
addb
push
pop
hlt
lea
iret
adc
xchg
mov
dec
sbb
mov
xor
int
push
mov
xchg
cmp
inc
mul
enter
lret
mov
inc
mov
lahf
cmp
add
ret
test
js
push
lret
test
negb
maxps
in
dec
enter
fdivrs
pushfw
mov
sti
or
push
lods
notb
repnz
add
push
push
mov
mov
dec
pop
imul
into
cmpsb
lea
ljmp
jne
and
mov
repz
fsubrp
xchg
sub
xlat
fisubs
xchg
es
pop
push
mov
fmuls
ficoms
int
sub
clc
fistpll
fcompl
mov
out
aas
adc
mov
jge
inc
movl
lcall
mov
test
and
fwait
shlb
stos
in
and
adc
popf
jne
pusha
cmp
jge
cltd
sahf
jl
jl
jl
add
or
lahf
mov
or
sbb
cwtl
gs
out
dec
sub
jg
or
test
jmp
cmc
sti
cwtl
ljmp
fsubs
js
imul
jns
sbb
repnz
or
icebp
into
shl
shlb
mov
mov
jp
jp
daa
sub
xorl
mov
sar
sub
in
dec
rol
pop
fstpl
lock
scas
fwait
pop
sbb
loope
jge
call
ret
push
andl
fmuls
sbb
icebp
daa
int3
mov
and
shll
inc
jl
sti
mov
cmpsl
ret
hlt
pop
ja
jl
std
ror
jmp
pop
fiaddl
fiaddl
jae
mov
daa
add
sub
je
push
mov
pusha
sbb
mov
mov
icebp
pop
lea
sarl
sbb
mov
jge
adc
or
cmp
or
lea
inc
aaa
inc
lcall
les
add
fwait
push
xchg
cs
jno
mov
cs
and
popa
fcoml
imul
or
add
jb
jp
sub
xchg
jo
mov
push
jnp
mov
pop
das
fdivrs
sahf
jge
jl
sahf
sbb
jp
clc
test
push
mov
scas
lea
mov
adc
push
mov
mov
in
mov
aaa
xchg
incl
or
out
rcl
or
dec
xor
xchg
insl
fnstenv
cwtl
int
xchg
sti
sar
hlt
rcrl
pop
xchg
notb
test
jp
mov
cld
xor
rorb
mov
cwtl
add
loop
mov
dec
mov
jmp
icebp
loop
jl
mov
dec
fs
pop
ret
sub
test
loope
mov
movsb
movb
rorl
dec
lret
xor
push
pop
loop
sti
xchg
push
ds
rolb
lret
jmp
cmpsl
mov
inc
or
out
stc
adc
popa
push
adc
dec
mov
mov
push
pusha
mov
inc
inc
mov
mov
outsl
dec
aaa
fildl
add
loop
add
sti
sub
lock
jne
in
mov
aad
inc
xor
cmc
add
push
mov
stos
push
pop
push
jo
icebp
data16
mov
push
dec
movsb
push
rol
subl
ret
loop
mov
mov
or
jp
aad
popf
xchg
add
and
xor
pop
dec
push
xchg
test
sub
and
scas
add
sbb
jb
or
push
repz
mov
xchg
jl
cmp
ds
rolb
lock
roll
cmp
fsubrp
movsb
call
push
into
test
xchg
aas
dec
sarb
gs
loop
pop
fsubrp
or
and
pop
cmpb
and
mov
pop
xchg
push
xchg
inc
dec
or
daa
push
scas
push
xchg
out
stos
inc
push
xchg
ljmp
mov
push
cltd
xchg
add
push
sbb
fldt
movsl
lsl
pop
mov
cmp
sbb
rclb
pop
lods
sbb
mov
pushf
xchg
push
arpl
dec
xor
scas
push
outsb
repz
xchg
dec
test
jecxz
cmc
cmpsb
in
movb
mov
pop
andl
and
mov
dec
pop
leave
mov
dec
jle,pn
mov
jmp
mov
jp
add
subl
scas
mov
push
leave
push
sub
xchg
out
sub
push
and
lea
lea
ja
mov
int
and
jo
jg
jbe
xchg
xlat
in
sbb
ds
fcompl
fiaddl
sub
jg
jl
dec
and
imulb
movsl
or
lahf
xchg
dec
dec
out
addb
aaa
mov
push
mov
sub
imul
push
shrl
inc
idivl
iret
ret
divb
mov
push
adc
sbb
sbb
jl
dec
cmp
or
jbe
data16
mov
enter
in
into
mov
in
ret
test
inc
dec
push
xor
mov
int3
mov
push
and
sahf
inc
dec
xchg
imull
or
mov
jle
mov
stos
clc
icebp
enter
add
andl
fiaddl
pop
dec
lret
ljmp
jo
and
pop
dec
mov
cmpl
adc
repnz
inc
nop
push
subb
cmpsl
adc
xchg
stc
fdivrl
stc
in
fistpl
lods
sub
sbb
out
dec
call
jle
mov
adc
pusha
daa
jg
jns
mov
xor
push
mov
push
or
ret
mov
daa
bound
imul
lods
mov
nop
jb
or
cmp
sbb
ret
mov
xchg
mov
xchg
inc
icebp
pop
sti
mov
int3
cmp
fcomi
mov
xchg
sbb
bound
rolb
shll
out
bound
cmp
mov
or
jp
rcrl
mov
sarl
xchg
je
xor
jnp
mov
dec
dec
pop
jns
mov
xchg
mov
mov
lock
pop
loopne
or
pop
stos
fs
sbb
outsl
lcall
cmpsb
fisubl
shr
aas
jmp
out
sbb
lock
cmc
arpl
xor
inc
sub
sbb
mov
xchg
fcoml
push
pop
inc
adcl
int3
test
repnz
cltd
pop
addl
faddl
inc
mov
mov
insl
pop
out
in
lahf
shr
lods
push
add
or
jg
in
pop
dec
shlb
push
mov
fsubrs
rorl
imul
and
xor
int
sbb
pop
inc
fsubl
jecxz
bound
adc
xrstors
cmc
mov
cld
pop
adc
int
push
testl
repnz
ret
inc
gs
inc
push
out
rcll
mov
or
clc
xor
mov
adcb
and
div
xchg
mov
mov
fildl
outsb
sahf
jns
loope
lock
push
into
push
dec
add
mov
push
xchg
insb
in
cli
xor
addl
sbb
pop
mov
push
mov
fucomp
cmpsb
imul
cmp
icebp
test
hlt
dec
jno
pop
xchg
pop
push
sub
and
mov
cltd
push
test
sti
dec
insb
int
pop
testb
and
pop
dec
fcomi
loope
add
dec
inc
lret
push
mov
es
popa
insb
data16
or
imul
dec
into
in
test
dec
addr16
sub
mov
jo
std
iret
in
sbb
push
mov
sbb
dec
push
lea
div
xchg
pop
fsubrl
lock
insl
mov
push
push
icebp
sub
mov
mov
jmp
cmp
jae
nop
dec
sub
test
loop
sti
dec
cmpsl
int3
cmp
aas
in
out
adc
adc
dec
jmp
inc
dec
xchg
mov
shlb
out
adc
jmp
push
ret
inc
sbbl
bnd
dec
pop
in
jg
sbb
lahf
dec
rol
mov
dec
jmp
cmp
or
call
mov
sbbb
sbb
stc
insb
jp
ljmp
jo
divl
or
mov
cmpsl
insl
subl
sbb
mov
pop
push
mov
mov
xor
pop
lret
dec
fistps
cmpsb
arpl
pushf
in
je
xor
mov
mov
jbe
mov
or
mov
inc
adc
pop
stos
lahf
ss
cltd
jo
bound
dec
or
test
lock
out
jne
cmp
push
sub
or
mov
jne
andb
mov
nop
or
dec
xchg
test
pop
lock
lcall
cmpsl
pop
shll
sub
testb
pop
in
je
pop
call
mov
push
sbb
adc
popa
bound
call
cmp
xlat
jno
jle
push
xchg
nop
cmpb
push
xchg
inc
les
ss
les
out
push
loopne
fsubr
mov
ss
jmp
iret
clc
testl
cmp
lea
pusha
mov
fs
xchg
int
xchg
add
test
mov
sbb
pop
inc
fwait
sbb
dec
out
lret
jbe
inc
in
ret
cmp
decl
jmp
dec
mov
add
leave
adc
ret
or
fwait
out
jle
pop
cmpsl
or
int3
xchg
cmc
loopne
or
cmpsl
clc
stos
lods
mov
in
ret
xchg
fxch
jnp
cmp
es
push
ret
cs
pop
pop
in
dec
cltd
in
xlat
sub
or
xchg
jbe
lahf
mov
dec
sti
out
xchg
xchg
lcall
sbb
mov
mov
push
nop
andb
shll
aas
scas
push
cwtl
sbb
inc
lret
mov
scas
xchg
or
xor
mov
push
cmp
out
js
inc
iret
test
mov
pop
inc
lret
cwtl
pop
in
pop
jmp
or
or
ror
xchg
push
ret
std
in
nop
mov
int3
pop
mov
mov
data16
dec
jl
pop
cmp
xor
mov
leave
push
arpl
cmc
cltd
hlt
sbb
xor
adc
int
or
push
icebp
mov
rcll
psubusw
fiadds
roll
lea
mov
out
inc
fsubrs
lock
sub
jg
jae
rolb
out
dec
mov
mov
loopne
cwtl
outsl
sbb
add
jecxz
fisubrs
jmp
mov
pop
fs
inc
repz
and
sub
in
popf
lea
pop
xor
adc
pop
mov
xchg
negb
push
in
fisubl
sub
sub
sub
pushf
sbb
dec
lds
jne
out
pushf
insb
ficoms
psrld
inc
sarl
mov
cs
xchg
sbb
loop
aad
mov
test
push
cli
pop
pop
cmp
jnp
fstpl
clc
call
xor
mov
and
mov
xchg
jg
and
jnp
dec
sbb
test
cmp
lret
xchg
xlat
jb
lods
lret
jns
add
inc
ret
add
mov
fsubs
pop
mov
pop
idivb
lcall
js
push
pop
imul
ret
stos
int
jmp
and
out
lret
adc
int3
enter
sub
pop
cmp
icebp
mov
xchg
adc
dec
outsb
insb
xor
adc
ja
mov
lea
adc
sub
adc
in
sbb
imul
bound
push
pop
jbe
jecxz
or
add
jne
pop
xchg
js
push
and
xchg
sbb
add
inc
xchg
faddp
repz
and
adc
xchg
aad
lahf
int
add
addr16
cld
inc
xor
movsb
pop
leave
jo
push
jg
lods
xchg
gs
fnstsw
popf
aas
dec
loope
cld
sbb
push
repz
or
dec
or
cld
mov
fstpl
hlt
into
cwtl
push
jb
arpl
fisubl
push
xchg
lret
jmp
sbb
aas
test
ficomps
mov
inc
pop
adc
push
add
loope
jg
mov
jb
cmpsb
mov
jo
sub
sub
in
push
loopne
inc
stc
cmp
jge
or
repnz
and
loope
pop
pop
mov
jb
and
xchg
sub
sbbl
shll
enter
pusha
pop
or
sbb
push
bound
popa
cltd
call
test
stc
icebp
jecxz
xor
stc
cmp
fwait
insl
dec
lock
aam
iret
pop
fbld
into
mov
xchg
sub
in
int3
rcll
jmp
push
cltd
and
mov
les
ja
fwait
jnp
sub
call
push
mov
or
xor
push
lods
lcall
cmp
inc
es
xchg
mov
xor
pop
sbb
das
and
imulb
dec
mov
hlt
scas
std
aad
ss
cvtps2pd
movsb
addr16
insb
dec
lahf
xchg
xor
in
mov
int
test
add
or
ret
pop
dec
add
stc
js
imul
dec
in
outsb
repz
sahf
fnstcw
insb
call
mov
push
fimuls
ror
out
push
cmp
pop
xor
dec
jns
cmpb
cmc
lret
out
push
repnz
push
mov
push
cmp
mov
and
loope
push
lret
in
mov
xchg
xchg
jnp
xchg
dec
xchg
fs
arpl
out
in
xchg
cmp
stos
sub
jbe
jnp
jmp
enter
mov
jg
push
hlt
and
pop
je
mov
stc
jo
add
nop
sub
cltd
xchg
pop
jb
flds
jmp
test
mov
mull
out
and
push
pop
mov
xor
push
jmp
push
outsl
add
xchg
jae
ss
cs
xor
mov
pop
jp
shl
hlt
sub
xor
pop
mov
int
stos
in
mov
das
mov
js
mov
add
stc
lds
in
rcrb
inc
fcmovnu
mov
daa
lods
sbb
es
lock
lods
push
mov
pusha
jl
insb
or
jg
sbb
jb
out
push
jmp
lahf
pop
dec
lds
sbb
sbb
or
and
xchg
jns
xchg
inc
rcrb
sbb
cmp
jmp
movsl
or
and
mov
inc
add
push
xor
fstl
pop
fistl
cwtl
mov
jmp
xchg
and
lea
xchg
sbb
ja
adc
pop
mov
mov
in
clc
push
sar
xchg
data16
jbe
dec
adc
out
cld
rcrl
sbb
adc
ja
push
xor
add
inc
insl
add
in
out
dec
mov
cwtl
in
xor
dec
repz
lea
xchg
shl
inc
clc
inc
add
hlt
mov
fs
xchg
fwait
mov
inc
imul
xchg
imul
aad
mov
jge
roll
push
jecxz
dec
pop
cmp
dec
inc
dec
jmp
xor
in
shld
or
imul
aas
cmpsb
push
lods
cbtw
xchg
shlb
pop
inc
and
pop
push
mov
or
push
cli
mov
jbe
fcoml
mov
subl
ljmp
and
mov
jno
add
scas
sbb
das
pop
xchg
dec
sbb
insb
lret
push
xor
inc
lret
or
ja
add
inc
fnstsw
cmpsl
mov
sar
mov
sahf
mov
stc
gs
mov
inc
mov
jl
mov
inc
mov
sbb
popl
repz
xchg
fdivl
popa
mov
add
cmp
repz
out
adc
pop
cli
add
pop
mov
push
pop
cmp
int
xchg
stos
popl
push
cwtl
in
inc
hlt
aaa
inc
popa
popa
out
ss
ficomps
xchg
mov
ja
mov
cwtl
mov
push
out
arpl
push
jle
inc
cmp
push
ljmp
push
dec
fnstsw
aam
gs
add
xchg
lret
cmp
mov
inc
lds
push
jge
cmp
iret
mov
lds
push
add
fisubrl
xchg
mov
imul
lds
hlt
imul
int
aam
xchg
add
test
sbb
in
jne
and
jbe
jecxz
iret
jns
test
dec
add
xlat
and
arpl
fidivs
cmp
cmovp
ljmp
inc
jns
loopne
mov
adc
lcall
jnp
inc
inc
add
xchg
mov
clc
aas
dec
jnp
mov
jbe
mov
dec
pop
pop
lds
add
insb
push
inc
ret
inc
insl
xchg
sarl
int
mov
test
sbb
ret
jne
lea
ret
cmpsl
add
inc
hlt
pop
roll
sub
pop
fisttps
pushl
add
push
mov
in
repz
iret
ja
dec
and
or
cmp
adc
pop
pop
adc
loop
inc
into
loopne
mov
sbbb
add
ret
cmpsb
pop
mov
adc
outsb
dec
icebp
mov
cmpsl
std
scas
fmull
dec
mov
dec
and
sub
mov
test
in
mul
xchg
and
inc
mov
mulb
jbe
inc
in
ror
mov
dec
nop
jne
loop
and
outsb
data16
out
es
xor
add
jbe
ret
shll
ds
nop
mov
mov
xchg
and
in
dec
aam
adc
andb
in
ss
push
pushf
cmc
nop
fnsetpm(287
jbe
push
divb
mov
sub
cmpsb
clc
lods
mulb
add
vpcmpgtd
jo
gs
aam
int3
push
out
jmp
dec
aam
adc
bound
outsl
out
cmpsb
jbe
hlt
mov
xor
data16
mov
daa
inc
hlt
testb
leavew
mov
out
push
cmpsb
hlt
enter
dec
hlt
out
rcl
pop
fs
testb
in
movsl
rcl
test
out
add
aam
imul
cmpsb
xchg
inc
in
scas
mov
loopne
fcmovnbe
in
orps
mov
lret
inc
dec
in
pop
loop
cmpsb
jg
shlb
fucomi
out
dec
aam
loopne
in
es
stos
aad
imul
mov
cmp
sarl
cmpsb
std
aam
and
out
int3
aad
pop
inc
aam
imul
add
sub
sub
push
hlt
sub
repz
adc
mov
dec
or
pop
out
and
or
mov
xchg
pop
iret
dec
adc
data16
jbe
or
jle
cmp
movsl
in
cmp
xchg
movsl
sub
add
in
push
xchg
mov
and
dec
mov
fcompl
cwtl
sbb
or
sbb
cmp
pop
sti
leave
or
hlt
sarl
jg
ret
mov
or
stc
jne
ja
addr16
std
insl
fidivl
pop
cmp
pop
imul
mov
dec
shlb
int3
fadds
xchg
dec
test
pop
mov
cmp
xchg
jb
popa
dec
sub
lcall
fstl
sar
dec
mov
loopne
xor
repz
and
jno
ja
xchg
leave
ret
xlat
mov
or
ret
iret
jle
cmp
fsubrl
dec
pop
test
fs
jg
ficompl
jmp
jns
sbb
push
push
test
xchg
imul
lock
cmp
enter
adc
ja
or
mov
xchg
pop
insl
movsl
or
repz
cld
push
xor
cmp
cmp
mov
mov
push
ds
mov
jae
cmc
adc
pop
mov
sub
cmp
mov
sbb
scas
cmp
movsb
cmp
mov
mov
dec
pusha
cltd
inc
push
and
or
dec
cmp
adc
cmc
adc
imul
les
mov
mov
cmp
popa
and
rolb
lds
sub
or
jp
loopne
jbe
lock
jb
mov
in
sub
adc
jbe
dec
fisubrl
sbb
xor
cltd
in
push
lds
mov
leave
add
test
movsl
push
sub
pop
xor
jbe
mov
or
iret
shll
mov
fistl
rorb
add
lods
repz
sbb
mov
sbb
ds
dec
lahf
or
call
lret
ljmp
sub
or
decl
mov
subl
xor
popa
or
lods
jbe
ss
arpl
xchg
mov
icebp
mov
mov
jle
int3
sbb
mov
mov
decl
and
pushf
mov
xor
lds
out
mov
cli
lret
pop
jo
sbb
in
ds
imul
and
cwtl
mov
repz
lahf
in
pushf
push
sub
sbb
mov
jge
into
shll
dec
sahf
test
pop
addr16
inc
mov
add
loopne
lret
out
imul
and
outsl
inc
dec
cli
push
jnp
adc
jb
in
add
inc
xchg
pop
mov
lods
shrl
stc
in
scas
push
inc
shl
inc
adc
mov
xchg
push
mov
sbb
xchg
int3
and
mov
push
push
test
fnsave
sub
sub
popf
fimuls
in
cmp
inc
adc
or
ljmp
out
xor
shll
in
xchg
sarl
iret
or
cs
stc
push
test
hlt
popa
or
fstpt
lcall
mov
outsb
jp
jb
xchg
ret
dec
sub
sti
in
sub
dec
nop
push
xor
push
and
cltd
fnstenv
ror
xor
lea
rcll
or
repz
lock
jno
sbbl
xor
add
mov
leave
lcall
nop
mov
jnp
gs
xor
mov
cmp
xchg
jecxz
sbb
repz
fisubs
mov
mov
mov
lods
adc
pop
push
outsl
inc
rolb
adc
dec
jecxz
hlt
daa
sub
fcmovnb
test
add
fmull
std
mov
cmpl
andl
aad
xlat
roll
cmp
adc
push
mov
mov
cld
jnp
mov
push
push
movsb
loopew
xlat
fcmovb
neg
cmp
decl
cld
push
aaa
cmp
fsubs
call
push
mov
push
pop
mov
js
in
xorb
mov
test
mov
in
gs
cmp
dec
or
sub
repnz
xchg
in
pop
jge
xor
pushf
pop
shll
cmp
dec
lods
in
inc
xchg
sub
add
sbb
insl
mov
mov
movsl
mov
cld
push
mov
dec
xlat
jg
orb
xchg
out
push
pusha
mov
dec
jecxz
add
or
loope
mov
pop
dec
mov
stos
xlat
andb
mov
je
test
lods
inc
sub
ds
cmp
inc
js
popa
repz
fbld
cli
out
xlat
std
or
pop
stc
mov
xor
cli
cltd
adc
jne
aam
mov
fucomip
int3
pop
fistpll
xor
faddl
imul
xchg
xor
pop
push
insb
jno,pn
pcmpgtw
mov
or
scas
inc
cmp
jnp
das
xorl
jp
sbb
xor
imul
lcall
dec
sub
clc
out
mov
pop
adc
mov
push
push
fistpll
popf
push
and
jp
add
shlb
cltd
clc
js
outsb
mov
push
cmp
inc
mov
lea
aam
cld
pop
rdmsr
rcl
and
clc
add
pop
cmpsl
cwtl
push
insb
jge
inc
jne
push
mov
mov
inc
xor
xor
inc
fbld
leave
jle
decb
int
push
jae
iret
push
or
pushf
adcl
fists
adc
imul
jne
sbbl
stos
aaa
pushf
cmpl
jb
enter
adc
cmpsb
out
jae
ret
ret
add
mov
sti
stos
sub
addr16
inc
loopne
xchg
repnz
fidivrs
movsl
or
ficompl
ss
jl
push
cltd
fisttpll
lock
icebp
xchg
loope
pop
adc
adc
das
mov
test
fldt
loope
pop
roll
jle
sub
shll
shlb
std
jmp
inc
xchg
mov
add
mov
adc
test
rclb
dec
jnp
loopne
mov
aas
fsubrp
stc
mov
xchg
sub
out
add
js
in
mov
mov
jo
gs
xlat
leave
push
popf
xor
lret
sbb
mov
cmp
push
dec
test
fwait
dec
leave
sbb
ret
and
or
repz
cli
in
jge
mov
or
cmp
loopne
dec
mov
inc
nop
enter
push
stos
mov
adc
adc
dec
mov
pusha
adc
jle
or
xchg
xchg
adc
mov
xchg
xchg
cmp
dec
in
test
mov
cltd
lahf
outsb
dec
rcrl
fcmovnbe
mov
lock
mov
pop
sub
jmp
std
inc
xchg
jb
and
fistps
mov
and
dec
cltd
enter
mulb
inc
jecxz
cmp
xchg
push
pop
push
and
aas
add
adc
insb
mov
or
mov
xchg
shll
xor
stos
sbbb
cmp
xchg
outsl
and
shrl
jecxz
push
jbe
in
jae
sub
in
jo
push
sub
push
lds
fwait
jne
pop
xor
push
add
mov
jb
mov
xor
xor
mov
cli
sbb
aam
cmc
xlat
dec
mov
loope
das
out
xchg
sbb
and
jne
iret
sbb
cli
fbstp
pop
fadd
sbb
fucomp
pop
push
sub
out
or
mov
leave
jecxz
daa
adc
sahf
push
cmc
std
dec
repnz
sub
mov
fs
sti
iret
outsl
and
inc
xor
add
and
lock
mov
jbe
subb
pop
pop
mov
jge
cmp
shl
movsl
xchg
adc
mov
inc
repnz
lcall
fldpi
mov
add
ja
or
outsl
lods
mov
pop
fstpt
int3
es
xor
mov
dec
test
cli
aaa
xchg
pop
inc
jge
int
sbb
arpl
adc
test
xchg
mov
mov
add
or
str
adc
adcb
insb
adc
insl
adc
inc
jns
xchg
sub
mov
out
rcrl
mov
testl
sbb
sbb
and
mov
dec
xchg
out
jg
xor
aad
popa
adcb
inc
ljmp
stos
lods
mov
sub
in
filds
popf
loope
je
cmpsb
fistl
daa
aaa
aam
dec
test
xchg
les
iret
cmc
mov
jg
pop
rorl
sub
cmpsb
les
xor
adc
lcall
and
dec
cmp
inc
jbe
popf
and
inc
push
and
fwait
popa
fsubrl
and
jl
ja
mov
clc
pop
adc
jae
fdivr
sbb
aas
adc
negl
dec
push
or
xor
daa
lods
sbb
or
das
fistpll
ret
jg
mov
xor
cmpsb
mov
pushf
mov
lods
lret
pushf
mov
sub
push
mov
sub
je
pop
adc
stos
pop
lret
lock
stos
dec
leave
mov
mov
add
pop
popl
dec
shrb
add
mov
cmc
lock
fildll
sbb
stc
call
add
jnp
fiaddl
pop
xchg
add
lods
xor
mov
testl
es
mov
pop
sub
jne
cld
sbb
jo
fwait
cmpsb
or
adc
into
scas
adc
movsb
fstpt
pop
into
ja
out
jle
xor
mov
rcrl
cmp
repz
push
cmp
push
push
mov
pop
fcmovbe
mov
mov
mov
cmpsb
test
push
or
fldl
out
cmp
lods
aaa
add
out
push
sub
push
ja
push
adcl
leave
mov
dec
clc
gs
jecxz
pusha
and
push
push
ror
adc
dec
xchg
in
pop
gs
jne
repz
loop
ja
test
imul
and
ficoml
push
not
rcr
fdiv
push
push
cs
sub
iret
pop
daa
mov
fstl
dec
int
mov
stos
xor
scas
addr16
xchg
int
cmp
mov
mov
out
mov
xor
popa
inc
pop
jge
cmp
mov
jge
push
iret
in
popa
mov
jb
repz
xchg
scas
cmp
mov
test
insb
stos
aas
call
sbb
mov
pop
loopne
lods
loopne
icebp
mfence
rol
mov
lods
sub
fcoms
or
movsb
pop
and
popa
imul
jae
push
mov
mov
add
nop
and
mov
push
das
pop
jp
adc
pop
sbb
and
push
int
xchg
pop
sysexit
cmp
mov
jmp
rcrl
mov
mov
sub
jge
ja
xchg
adc
xchg
divb
ret
sbb
test
or
sti
mov
aam
jbe
test
add
pop
push
int3
lahf
sub
int3
and
fidivs
push
ret
shll
icebp
mov
or
outsb
ss
ss
pop
sub
inc
fs
rclb
pop
pop
sub
push
arpl
sub
arpl
jge
aad
int3
lods
push
and
in
jge
addb
xchg
fs
rolb
mov
stos
cli
sbb
lcall
lock
sahf
mov
xchg
fldl
pop
das
iret
nop
mov
insb
jge
xchg
lret
in
dec
aam
out
xchg
xchg
mov
dec
mov
add
lahf
jge
mov
clc
and
fsubl
movsl
imul
icebp
add
or
jne
sbb
jo
std
into
pop
xor
jl
xchg
mov
push
and
mov
sti
dec
out
push
sbb
or
add
aaa
movsb
mov
rcl
push
jle
in
or
jbe
aas
shl
jecxz
mov
push
aam
push
fldt
dec
outsb
jne
mov
xor
shrl
sbb
shll
cmp
fisubrs
aad
mov
int
cltd
pop
cmp
xor
pop
cmp
pusha
fadds
jns
sub
push
not
sbb
adc
pop
pop
ret
adc
push
push
mov
dec
movsb
cltd
rep
sbb
xchg
scas
dec
adc
xor
inc
lret
sbb
mov
out
fwait
cld
mov
clc
aad
js
inc
js
rcrl
xor
mov
inc
fwait
add
test
hlt
enter
imul
sti
lea
pop
lret
adc
jmp
fistpl
inc
mov
je
or
ljmp
sbb
mov
mov
loopne
test
loopne
into
shll
cmc
mov
pop
cmp
mov
pop
sbb
aad
ljmp
xor
or
jo
cltd
xchg
and
iret
mov
inc
nop
std
pusha
adc
out
sbb
dec
xlat
inc
aam
imul
mov
lcall
in
rcl
int3
sti
daa
int3
sbb
sahf
sub
adc
cmc
je
xor
sbb
fwait
mov
pop
loopne
jns
imul
ss
js
push
cmc
pop
jge
or
insl
add
sub
push
xchg
cmp
sub
test
cmp
jno
incl
dec
adc
mov
and
sub
xor
das
xor
out
push
sub
mov
loopne
les
stc
out
popf
and
xchg
mov
pop
fnstsw
jecxz
sbb
inc
loopne
push
stos
mov
push
loope
or
xlat
ljmp
aam
movsb
fsubs
rclb
insb
push
pushf
addb
add
aad
mov
jae
and
pop
cmc
rcrl
push
xor
test
mov
fs
ret
fmul
cmpsl
cmp
int
pop
enter
push
lret
push
fwait
pop
dec
lahf
pop
sbb
movsl
sub
pop
and
inc
push
insl
xor
ljmp
mov
aad
in
push
fildll
and
and
sbb
mull
rolb
cmp
pop
sub
pusha
mov
push
dec
inc
pop
adc
mov
adc
dec
xlat
divb
movsl
mov
sbb
add
cmpsl
mov
xor
sub
pop
sub
adc
mov
cs
xchg
pusha
enter
in
xor
push
jl
cmp
movsb
cmp
rcr
shll
ss
push
jle
pushf
cltd
cwtl
inc
cmp
mov
ret
sub
call
cli
cwtl
jns
pop
push
and
push
xchg
push
shr
subl
pop
xchg
add
cmp
cmc
mov
std
jge
xchg
mov
cmp
cmp
push
mov
jge
cli
pop
in
adc
and
sbb
fistps
dec
out
loope
push
sti
mov
sbb
lahf
jb
rorb
mov
cmp
int3
dec
addr16
lea
outsl
mov
arpl
pop
jge
pop
adc
or
cmpsl
mov
lea
cmpsl
scas
enter
jbe
loopne
mov
xchg
inc
mov
inc
outsb
pop
hlt
xor
cltd
int3
push
mov
inc
test
dec
sbb
sbb
lods
cmp
adc
xchg
lods
inc
in
sbb
ficompl
sub
pop
jno
jmp
mov
mov
xor
fs
dec
fld
cwtl
push
push
mov
pop
or
loopne
jne
rclb
mov
rcrb
push
sbb
inc
rcl
xor
xorb
inc
mov
jae
push
sbb
hlt
mov
add
and
mov
pop
in
push
addr16
cmp
out
inc
ss
dec
dec
hlt
call
scas
insl
push
xchg
mov
mov
xchg
or
icebp
pop
adc
xor
movsl
jne
sub
ljmp
insb
lret
mov
stos
cwtl
nop
loop
sub
lods
pop
or
sub
aas
xor
fwait
sti
dec
je
push
daa
cmp
addr16
xchg
push
ljmp
not
insl
test
pop
js
push
fisubrl
add
ljmp
je
ljmp
dec
in
sub
dec
sub
hlt
push
pop
xchg
xor
sub
cmp
sti
cmpsl
cmp
test
out
mov
mov
xchg
ds
stc
inc
mov
cmp
push
dec
lock
sub
sbb
sub
xor
daa
sbb
mov
xor
jmp
inc
test
stos
jp
leave
test
cmp
pusha
cmp
mov
pop
jp
popa
rcl
adcl
and
xor
xlat
decl
movsl
xchg
fbstp
mov
mov
nop
inc
jmp
addps
ljmp
shr
call
xchg
leave
mov
aas
out
fxch
jecxz
push
adc
ficoms
dec
hlt
pop
cmp
daa
shrb
test
push
stos
aad
loope
hlt
pop
out
adc
jae
in
popl
mov
mov
in
mov
pop
aam
and
out
cmp
lahf
pop
mov
ss
mov
fsubp
push
or
cmp
pop
dec
mov
shrb
lcall
cltd
frstor
add
aad
sbb
sahf
ds
sbb
aam
andb
imul
loopne
mov
inc
pop
sub
aam
pop
scas
mov
mov
leave
push
lahf
mov
roll
gs
jo
fnstcw
fistps
pop
data16
not
stos
xorl
ret
adc
popf
cmp
je
jge
or
inc
adc
mov
aas
aam
in
in
call
daa
ficoml
fbstp
sub
lods
push
mov
dec
out
sbb
repz
xor
sahf
dec
popa
cmp
jo
dec
push
mov
inc
lods
adc
call
int3
in
outsl
fwait
mov
rcll
and
sbb
inc
repnz
inc
loopne
repz
sub
imul
call
xchg
sub
xor
mov
jo
int
xor
pop
jo
mov
pop
push
push
pop
test
imul
cmc
lahf
mov
adc
cmc
jne
dec
mov
push
pop
mov
cmc
test
jns
in
xchg
sahf
mov
push
push
sbb
xor
clc
xchg
test
xchg
or
mov
xchg
xchg
or
jecxz
out
cmc
ja
cmc
lea
cltd
pop
sahf
ja
movsl
mulb
fwait
aad
mov
inc
sbb
mov
cmpsl
xlat
cs
lock
push
mov
mov
mov
push
ja
sub
mov
push
xchg
stos
movsb
sbb
pop
imul
mov
jg
nop
mov
xor
push
push
mov
dec
icebp
dec
frstor
xor
mov
out
xor
cmp
arpl
push
out
popa
scas
lret
push
shlb
in
lods
in
loope
insl
aas
out
scas
mov
mov
jnp
es
xlat
hlt
mov
jo
test
shlb
aam
mov
mov
out
call
sub
or
xlat
mov
ja
inc
cs
shll
mov
mov
xor
dec
cltd
dec
xchg
test
mov
into
xchg
or
das
sbb
fisubl
in
dec
test
orl
adc
bound
nop
push
out
mov
mov
and
xchg
jo
pop
xor
sarl
pop
cmp
adc
mov
dec
pop
daa
inc
movsb
add
mov
push
in
das
shlb
and
inc
and
xlat
in
mov
dec
dec
cwtl
fistpll
outsb
inc
test
outsl
das
bound
jne
int
cltd
cltd
lods
pop
mov
inc
js
xchg
jg
out
xor
sub
jl
mov
rol
push
nop
shrl
gs
add
arpl
into
fwait
sub
xor
mov
adc
adc
rorw
repnz
jo
aad
daa
pop
jb
inc
inc
jb
push
mov
test
out
push
arpl
cmp
shrb
loopne
gs
cmp
pop
and
jnp,pn
outsb
dec
xchg
je
shll
in
ds
fsubrl
cmpsl
sbb
out
test
dec
fisttps
lock
stos
xor
or
pop
cld
mov
jl
jle
lahf
test
xlat
dec
ja
aam
gs
repnz
jmp
cmpsb
fnstcw
push
out
jl
xor
push
mov
ss
lods
int
add
pusha
inc
daa
inc
xchg
ret
inc
hlt
jae
aam
out
cltd
call
cmp
mov
in
sub
mov
aaa
aas
or
stc
addr16
push
lret
mov
dec
lcall
mov
pop
scas
and
scas
adcb
nop
addr16
xchg
testl
aam
daa
sub
movsb
sbb
aam
inc
aaa
pop
out
sub
and
popf
loope
inc
jle
jmp
cmpsl
push
aaa
cld
sbb
pop
out
mov
inc
ds
lock
stos
lds
int
mov
inc
xor
add
add
pushf
dec
orb
pop
mov
sub
test
xor
dec
mov
push
and
cmp
dec
jle
pop
icebp
dec
dec
push
enter
aam
and
aam
inc
outsl
or
mov
mov
xchg
mov
xchg
and
mov
fisubrs
roll
inc
xchg
dec
adc
inc
adc
cmpl
in
jbe
adc
sbb
mov
aad
aam
jle
push
jl
inc
xlat
sub
test
cltd
pop
pushf
scas
xchg
repnz
es
fs
in
sarb
pusha
cmpb
cld
mov
lods
inc
pop
loope
mov
xchg
jl
cmp
jbe
cmpsl
jge
sahf
pop
mov
xor
mov
jbe
pushw
mov
sbb
pop
andl
stc
enter
test
or
or
lods
decl
sbb
and
push
in
jmp
mov
lods
aas
pop
orl
in
xchg
pop
pop
and
cltd
or
fs
mov
jle
mov
ffreep
cmp
inc
je
push
sbb
in
fstps
add
xchg
outsl
aas
cwtl
aad
dec
in
push
mov
data16
gs
cmp
subl
mov
and
shr
and
xor
ljmp
shrl
aad
xchg
jp
jnp
flds
dec
xor
fisttpll
in
dec
sti
mov
inc
push
jnp
or
int3
push
or
stos
arpl
or
in
mov
stos
mov
mov
daa
fwait
xor
xchg
xor
push
hlt
sbbb
movsb
jmp
jns
mov
jg
add
repnz
test
fstps
mov
xor
xor
lahf
cmp
movsl
mov
mov
dec
testb
fcmovb
aad
lods
add
jbe
xor
into
cmp
dec
aas
sbb
adc
popf
call
xchg
push
dec
xchg
add
xchg
int
pop
ja
push
lret
adc
pop
roll
pop
sub
fdivrs
fisubrs
inc
xor
cld
inc
adc
dec
sbb
lock
movb
sbb
in
mov
outsl
pop
aas
sub
push
and
out
add
or
inc
in
lods
ror
push
loope
fdivrl
scas
std
shrb
aad
pop
iret
cmp
pop
loop
out
jg
inc
les
pusha
std
rol
imul
lret
jno
fisttps
int3
outsb
outsb
pusha
xchg
xchg
xor
cs
ss
push
cmp
test
xchg
scas
mov
out
sub
popf
mov
mov
aad
jle
inc
cli
mov
ljmp
inc
push
inc
push
ss
sahf
cmpb
outsl
cmp
xchg
adc
xchg
test
mov
movsl
push
inc
and
and
jge
cmp
sub
in
outsl
mov
cmp
int
and
sahf
sub
aas
fwait
loope
rorb
je
mov
in
adc
add
int3
cmc
popf
scas
dec
in
sbb
insl
icebp
xor
insb
xor
popa
cltd
inc
dec
shlb
pop
nop
pop
xchg
jns
icebp
mov
fists
in
mov
stos
jnp
push
adc
pop
pop
cmp
stos
jae
xlat
or
add
arpl
imul
xor
popa
ja
add
pop
dec
cltd
cli
outsl
cmpsb
mov
aad
fsubs
push
mov
data16
push
and
fdivs
popf
into
xchg
mov
push
mov
scas
cmp
sbb
adcb
mov
cmc
icebp
cmp
mov
scas
lock
sub
cwtl
jo
or
inc
insb
mov
imulb
outsb
mov
rcl
into
hlt
lds
or
mov
imul
jecxz
pusha
or
and
call
int3
jle
aad
inc
push
mov
cmp
pop
subb
mov
aad
mov
sahf
mov
pop
jne
inc
mov
mov
and
outsb
push
pop
das
dec
not
adcb
test
jmp
insb
sbb
mov
outsl
xor
arpl
cmp
jns
mov
pop
inc
movsl
aad
cs
dec
out
xor
adc
fdiv
aaa
pop
sbb
scas
xchg
in
test
mov
in
and
jb
loope
push
cmp
out
mov
push
or
xchg
sbb
inc
jb
repz
or
mov
test
aaa
inc
shrl
xchg
sbb
inc
dec
lea
shr
adc
das
fsubrs
xor
iret
or
xor
xchg
test
jmp
and
movsl
pop
ret
jno
sub
fwait
mov
or
sub
loop
xor
cmp
or
cmp
push
aad
sbb
lods
push
xor
mov
imul
sub
dec
mov
popf
mov
fs
enter
aad
mull
cli
rorb
xor
ljmp
fsubr
idivb
call
ret
movsb
sub
lret
popf
add
xor
jb
bound
mov
fidivs
dec
xlat
mov
sbb
aam
inc
out
push
pop
pop
mov
test
mov
shlb
push
sub
std
ficoms
cmc
sbb
mov
fstpl
push
rcrb
or
cmp
lods
cld
movsb
and
movsl
mov
fs
inc
fmuls
push
cld
cmp
xor
lods
sub
aad
push
inc
in
jbe
dec
mov
mov
push
and
xlat
test
jnp
lock
jmp
mov
dec
and
lock
sub
push
imul
mov
jo
push
repz
sub
and
imul
hlt
jle
and
stos
int3
sbb
aas
cmp
jbe
jecxz
pop
lods
push
in
sub
stos
jne
dec
nop
xor
sbb
sahf
nop
lea
and
out
mov
movsb
jnp
cwtl
pusha
lods
cmc
cmp
push
aam
ljmp
cmpxchg
mov
xchg
mov
ja
imul
call
or
or
cmp
in
mov
or
ja
or
jne
jmp
sahf
dec
or
test
sbb
fbstp
cmp
sarb
fimull
mov
mov
mov
push
sub
jle
or
in
imulb
mov
je
pop
mov
xor
push
dec
push
hlt
sahf
outsb
lret
jnp
shl
mov
hlt
sahf
mov
pop
fstp
aad
add
jbe
mov
mulb
clc
fimuls
in
sbbl
mov
cmp
or
sahf
xor
inc
in
nop
lret
shll
inc
loopne
ret
pop
pop
fst
testb
in
sub
rcrb
lods
fsubrp
sahf
roll
pop
jmp
cmp
jbe
mov
in
ficoms
pop
jge
aam
mov
arpl
pop
aam
jmp
sahf
and
aad
es
mov
fcoml
xor
out
cmp
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
