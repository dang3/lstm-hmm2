mov
mov
lock
pop
in
movsl
cs
mov
cmp
jb
aam
in
out
stos
cmp
cmp
dec
aaa
enter
push
cs
xchg
scas
mov
mov
sub
jb
insb
in
cltd
into
inc
lds
adc
and
cmp
inc
or
fists
mov
inc
sub
sub
sbb
push
and
xchg
push
aad
repnz
jno
repnz
mov
psrad
push
stos
push
out
pop
sbb
inc
and
jnp
cmpl
sub
pop
jmp
test
js
outsb
icebp
in
cmc
dec
inc
insb
in
pop
aad
fiaddl
push
jge
cmp
sbb
pop
sbb
pop
iret
push
ret
jmp
das
iret
mov
or
aam
cs
adc
movsb
psrld
out
and
add
push
mulb
sub
mov
lds
or
push
push
lahf
sub
push
test
cmp
clc
jbe
outsb
push
adc
xchg
mov
test
test
cmp
sub
rorl
push
fs
aad
sub
std
data16
mov
imul
cltd
xchg
int3
xchg
aad
push
mov
sub
jno
mov
or
lds
icebp
inc
je
mulb
add
daa
arpl
sti
adc
push
inc
aaa
and
and
mov
pop
rol
sub
scas
xor
push
out
xchg
mov
push
cltd
mov
fwait
aam
cmpsb
icebp
xchg
push
popf
inc
loope
xor
loopne
js
nop
in
sbbb
or
pop
les
xchg
or
pusha
dec
jno
pop
mov
and
and
adc
inc
fsubl
fs
jle
sbbb
addr16
add
das
pop
mov
imul
mov
xor
pop
das
xlat
out
adc
sbb
dec
incb
test
icebp
inc
mov
add
ficomps
lcall
xchg
jne
sub
and
xor
pushf
xchg
mov
stc
dec
aas
pop
aad
sbb
subb
sbb
or
pop
fmuls
ret
outsb
loopne
jl
lea
mov
pushl
cmp
dec
leave
movsb
div
add
jg
lock
repnz
int3
out
or
movsb
jo,pn
cs
in
jno
jne
xor
testb
cmp
push
push
or
xor
addr16
jae
mov
lods
mov
adc
in
adc
stc
or
fs
icebp
mov
dec
sub
je
xchg
ficoms
add
jae
lds
cmpsb
outsb
mov
dec
cvttps2pi
loop
mov
mov
pop
pop
imul
js
repnz
in
mov
call
adcl
stos
pop
test
in
and
jno
or
lret
add
cmp
or
jnp
in
dec
imul
ds
loopne
add
jb
popf
or
xchg
stos
xchg
mov
cmp
cwtl
mov
xchg
xchg
adc
lea
jb
pushf
or
or
fiadds
popf
inc
dec
pushf
xor
dec
mov
xor
test
cwtl
or
mov
or
xchg
lea
gs
jmp
stos
mov
test
cltd
mulb
nop
dec
pop
fbld
rorb
aad
sbb
adc
bound
adc
test
push
add
ja
sub
or
adcl
ret
and
ss
das
mov
loopne
adc
sub
dec
sbb
aam
push
imul
xchg
imul
insb
imul
mov
cmpb
and
adc
out
les
cld
std
imul
cmp
xchg
push
gs
imul
movsb
sbb
mov
jge
jnp
das
inc
cmpsb
lcall
push
xor
popa
inc
mov
test
inc
or
cmpsl
push
loope
pop
pop
push
sub
cli
scas
cmp
outsb
lock
pop
pop
xchg
dec
mov
adc
test
mov
jp
jbe
outsb
nop
pop
imul
mov
add
repz
dec
mov
icebp
jbe
push
mov
leave
out
lret
xchg
jo
lock
adc
movsb
inc
xchg
out
mov
cld
xchg
insb
push
and
adc
sarb
cltd
idivb
out
xor
lahf
popl
clc
pushf
or
cmp
orb
push
jg
cmp
sbb
fldl
in
int
jle
call
add
adc
xchg
adc
dec
mov
jmp
lock
mov
xor
push
push
in
push
jmp
pop
test
xchg
arpl
and
scas
dec
adc
in
lahf
addr16
scas
dec
jecxz
movsl
or
push
push
adc
std
jo
es
or
inc
xchg
divl
in
leave
pop
mov
lods
cmp
xor
pop
xchg
or
sub
push
in
cltd
insb
lea
mov
rcrl
inc
jmp
mov
inc
aaa
in
mov
cmpsb
shrb
push
jp
outsl
pop
adc
xchg
subb
adcb
sbb
add
add
or
dec
mov
mov
sub
jns
dec
ret
enter
fstl
dec
pop
jbe
gs
fucomp
cli
fidivs
fisttps
movsb
push
inc
lcall
shll
pop
or
lods
ret
rcrl
mov
leave
jl
xchg
pop
mov
in
jle
sub
sbb
cmp
cmp
mov
or
aam
pusha
movsl
or
mov
dec
xor
push
pop
mov
sub
xchg
cs
jge
lahf
sti
push
xchg
jo
pusha
nop
lahf
sbb
inc
jl
jmp
xchg
and
testl
insl
ret
adc
add
xor
mov
test
sub
pop
add
shlb
jb
xchg
fdivp
lock
leave
arpl
std
stc
pop
stc
ret
stos
mov
ret
push
jp
lds
mov
int
xchg
xor
mov
popa
mulb
popa
rcl
cmp
cmc
fsubrs
test
push
push
ret
jmp
xchg
mov
xchg
int
jmp
push
movsb
jmp
jo
and
inc
insl
and
bound
gs
push
mov
and
filds
fldenv
add
pop
inc
add
cmpsb
or
fs
es
dec
sbb
dec
imul
fisubl
inc
mull
mov
fstpt
in
jb
hlt
sbb
rclb
outsl
movsb
rcr
testb
movsl
repnz
push
subb
flds
aas
cmp
fidivrl
lea
daa
xchg
daa
inc
addr16
xor
mov
lds
and
fists
push
lret
mov
add
mov
push
je
leave
and
insl
jg
aaa
pop
jp
dec
xor
ja
cmp
loopne
sub
inc
mov
mov
loop
mov
ss
mov
add
push
inc
and
push
jnp
add
clc
call
pop
adc
shr
leave
and
into
clc
lret
jmp
shll
into
inc
stos
xchg
ret
cmp
lds
and
inc
mov
mov
cmpl
fists
dec
mov
icebp
pop
jno
pop
or
push
addb
fnstcw
xchg
js
mov
and
movsl
mov
repz
jnp
icebp
and
setl
push
push
mov
jo
push
push
mov
jmp
repz
test
test
cli
icebp
mov
aad
dec
sub
and
push
dec
cmp
push
add
inc
mov
clc
sar
and
xchg
mov
mov
call
std
pushf
rclb
inc
daa
mov
push
sbb
imul
jg
mov
hlt
add
das
inc
les
mov
arpl
add
les
orb
hlt
imul
mov
call
xchg
dec
inc
scas
aaa
adc
loope
or
sbb
movsl
jbe
insb
mov
sub
pop
and
add
sub
add
and
gs
movsb
stos
cs
out
in
imul
pop
cmpl
pop
cli
dec
cmp
in
mov
repz
gs
cltd
icebp
cmp
pop
xchg
xor
lahf
shlb
cltd
fwait
je
xchg
aaa
push
in
icebp
sarb
sub
sbb
orb
sbb
lcall
fbstp
test
mov
sbb
cmp
xchg
aaa
push
pop
mov
neg
or
mov
outsl
and
adc
push
jno
mov
test
sub
std
in
das
jb
lods
dec
daa
xchg
mov
setnp
dec
sar
mov
xor
push
push
cmpsl
das
daa
xchg
pop
inc
outsb
jecxz
lock
push
inc
bound
aad
outsb
scas
push
icebp
fiadds
ret
cmp
sbb
sub
push
cmp
jne
mov
ret
dec
or
jecxz
stos
dec
mov
nop
dec
jno
push
dec
or
mov
aad
test
push
bound
clc
pop
jp
xchg
ret
push
cwtl
xor
and
xchg
gs
push
out
jns
outsl
mov
in
mov
testb
es
or
in
out
aam
rorl
outsl
jno
pop
sbb
das
pop
jnp
push
dec
jnp
aaa
push
ficomps
add
test
cmp
popa
jl
lock
rolb
fmul
fsubr
cmp
mov
cmpsl
mov
mov
movsb
cmp
sub
pop
in
add
mov
out
fidivrl
subb
xchg
mul
lods
and
jg
mov
xchg
pushf
sti
inc
fisttps
xchg
stc
xor
clc
test
mov
stos
xor
mov
lcall
bound
jle
sti
loope
dec
je
cltd
mov
and
inc
sub
gs
ds
arpl
dec
sbb
sub
inc
hlt
lods
leave
jl
and
sub
out
popa
notl
mov
or
push
repz
pop
jae
loop
and
and
sub
pop
xchg
jg
cld
outsl
jbe
mov
repz
cmp
lock
cmpsl
or
shlb
cmpsb
outsl
ret
mov
ja
sbb
sbb
iret
jle
lret
outsl
hlt
jl
adc
push
xchg
dec
mov
fwait
sub
loopne
sarb
mov
andl
adc
sub
mov
lret
xchg
jl
cmpsb
or
shr
push
sbb
xchg
pop
rorl
xor
cmp
xchg
idivl
mov
dec
icebp
add
adcb
push
mov
lods
pop
gs
inc
xchg
add
ret
lods
in
inc
orl
popa
xlat
fnstenv
xorl
popf
pop
inc
pop
add
jnp
nop
sbb
inc
movb
sub
ljmp
ret
cwtl
in
inc
mov
ret
mov
cmp
aad
lret
adc
inc
filds
sbb
popf
loope
push
push
mov
xchg
mov
fimull
hlt
add
mov
push
outsb
xchg
push
jle
push
mov
push
jbe
adc
out
lods
loope
mov
or
xchg
pop
lcall
gs
xorl
test
mov
sarb
fsubrl
lea
xchg
rclb
pop
es
loop
add
push
adc
push
fsubs
scas
push
fsubrp
sbb
xchg
and
dec
mov
mov
scas
sarb
add
ljmp
adc
mov
pop
lods
clc
xor
iret
cmp
or
cmp
xlat
push
jecxz
hlt
fidivrl
daa
lret
ret
lea
cwtl
jecxz,pn
xor
fnstcw
lahf
test
jno
inc
es
mov
testb
jecxz
ss
cmpsb
xor
mov
stos
add
sarb
aad
and
fcomps
scas
test
loopne
jg
jne
inc
incb
hlt
cmpsb
dec
es
imul
loopne
sub
jecxz
jne
out
loope
outsl
cmc
cltd
out
movsb
sub
jecxz
bound
mov
pop
fwait
xor
scas
sbb
jp
mov
pop
sbb
mov
shrb
dec
mov
sarb
lods
push
in
and
test
cmp
cs
subb
test
push
or
mov
rcrl
inc
jo
mov
mov
int
mov
popa
jno
mov
mov
mov
addr16
inc
out
pop
mov
insl
dec
mov
jb
dec
or
or
cmp
push
ljmp
sbb
jnp
stos
movsb
pop
lret
push
and
mov
adc
add
lds
orb
jl
xor
inc
rcrb
pop
adc
ja
pop
mov
sahf
and
jp
inc
inc
mov
jo
mov
sahf
push
scas
jb
outsl
out
sub
or
packssdw
jb
fildl
test
cmp
mov
and
or
in
stos
lret
jecxz
xlat
daa
and
shll
jl
mov
cli
lea
push
jae
dec
fistl
push
jge
mov
mov
mov
addr16
mov
pop
cmc
outsl
aad
inc
and
adc
call
ja
and
add
ja
xchg
insb
aaa
xchg
icebp
add
in
dec
push
in
sbb
cwtl
push
fs
jne
lods
xchg
rcll
and
adc
sub
cmc
ja
sub
or
addl
fs
dec
out
cmp
and
sbb
lret
pusha
sbb
fldl
sub
and
mov
shll
add
mov
mov
fdivrs
dec
mov
fndisi(8087
repnz
xor
lods
ret
pop
dec
addr16
cmc
dec
xchg
adc
inc
jp
mov
jo
into
mov
movsl
xchg
je
popa
ljmp
mov
xchg
fndisi(8087
xor
and
push
mov
xchg
pop
push
jns
fcomps
pop
test
cmpsb
in
lea
mov
ret
enter
mov
mov
insb
cmpb
dec
imul
shlb
and
mov
mov
mov
rcl
mov
dec
or
lret
jno
dec
cmp
cmp
ja
sahf
aam
mov
push
xchg
es
pop
out
push
idiv
in
mov
mov
jae
mov
movsb
inc
popf
int
push
mov
in
fcomps
jmp
adc
imul
int3
sbb
mov
sub
int3
lods
sub
and
repz
mov
push
xor
mov
aaa
dec
psubw
movsb
sub
rorb
es
arpl
sahf
out
stos
or
inc
sub
dec
ja
sub
sub
pop
and
jb
push
xor
fwait
cmp
xor
inc
mov
xor
fnsave
lock
fldcw
or
jp
arpl
push
push
cwtl
sub
repz
jmp
subb
bound
push
mov
mov
adc
pop
fsubrl
inc
lock
movsl
push
arpl
pop
clc
out
leave
pop
xchg
cwtl
pop
add
mov
cld
subl
inc
clc
mov
mov
sub
jb
inc
xlat
jmp
xchg
sbb
xchg
adcb
push
scas
lock
add
rorb
lds
ror
cld
hlt
push
sbb
inc
cli
pop
push
jge
aad
sbb
ret
pop
cltd
les
or
in
mov
or
add
and
jb
repz
cli
mov
dec
imul
lock
and
cld
pop
lahf
inc
incl
mov
inc
cmp
stos
xor
xor
cld
inc
cmpsb
test
lods
gs
add
xor
pop
add
dec
movsb
xlat
addb
dec
xlat
shr
add
jo
clc
stos
mov
clc
std
gs
mov
and
imul
mov
pop
mov
ret
xchg
mov
cld
cs
gs
jg
xlat
xchg
bound
mov
adc
push
push
movsb
xor
sarb
ret
push
mov
push
sbb
cmp
test
ret
xorl
pop
xchg
cltd
jb
sub
or
dec
fwait
dec
jmp
mov
dec
xchg
sbb
mov
or
mov
jp
xchg
ds
mov
cwtl
jbe
push
sub
cmp
data16
dec
mov
xchg
xchg
popa
jmp
and
jbe
sbb
cmpsl
sub
hlt
push
pusha
into
cmp
pop
shlb
sbb
fsubl
ja
mov
inc
cmc
sarl
mov
mov
jge
data16
xchg
pop
clc
std
mov
adc
cmp
jbe
and
sbb
stos
inc
fcompl
in
fnstsw
lods
inc
xchg
pop
xchg
lea
in
inc
pushf
sbb
jmp
cmc
int
icebp
or
jp
inc
hlt
aad
xchg
stc
mov
lods
sahf
cmp
push
daa
pusha
jb
rep
repnz
stos
jmp
and
nop
ds
sbb
call
cli
je
jmp
aad
sub
scas
incl
sbb
aam
mov
std
push
es
mov
sbb
repnz
scas
jle
mov
sbb
rcll
mov
inc
adc
scas
sti
xchg
sbb
stc
stc
cmp
ljmp
cmp
icebp
stos
imul
bound
fcmovbe
shr
bound
fsubs
xor
adc
jle
mov
pop
xchg
in
mov
js
pmaddwd
inc
cmp
repnz
xchg
sahf
out
das
sar
in
mov
mov
xor
sahf
test
xchg
aam
into
mov
inc
loope
add
orb
aaa
pop
add
xlat
inc
movsb
in
repz
inc
push
cmp
dec
sbb
mov
xchg
outsl
iret
mov
jge
ret
cmpsb
sub
inc
push
push
adc
int
stos
aam
push
cmc
cs
dec
lea
sahf
addr16
push
cmp
insb
in
mov
popf
cltd
jnp
pop
ret
shll
in
xchg
pop
xchg
sub
loopne
add
adc
fists
cwtl
fucomi
stos
paddd
movsl
int
loop
rcr
xlat
out
lods
rep
cmp
mov
cmp
aas
mov
test
rclb
mov
not
push
push
sub
sbb
adc
inc
cmc
jno
ds
aaa
xor
push
adc
jno
fcomps
cli
daa
div
jno
leave
ljmp
inc
adc
lret
rolb
es
dec
sbb
dec
push
sub
fisubs
push
push
int
sbbb
sub
int
and
xor
xor
or
sbb
int3
mov
lcall
sbb
cmp
push
je
xchg
dec
cmp
es
aaa
xlat
dec
aaa
int3
lock
dec
fimull
fldt
push
aas
pop
and
bound
jg
loop
mov
shlb
push
xchg
sbb
sub
push
adc
xchg
push
sub
in
jnp
mov
xor
sahf
int3
dec
mov
inc
push
mov
mov
pop
cmp
add
dec
pop
fs
mov
fists
and
mov
pop
push
sahf
mov
mov
jg
repz
fwait
int
int
lahf
unpcklps
ds
pop
mov
cmp
dec
js
pop
flds
or
inc
mov
pop
fwait
pop
popf
jge
cli
xchg
add
push
sub
lahf
shrb
jle
xor
cwtl
or
inc
add
lahf
test
mov
mov
shrb
jno
sub
rorl
cltd
jbe
adc
mov
lret
push
xor
or
lock
outsl
in
je
je
out
leave
aas
cli
int
cli
ret
dec
push
in
loope
in
xchg
in
push
lcall
dec
enter
stc
cmp
add
lahf
lods
add
test
into
sub
xchg
mov
addr16
mov
mov
lahf
jmp
inc
push
testb
sbb
outsl
insb
fsubs
pop
cli
adc
fwait
or
or
es
data16
mov
cmpsl
test
cmp
stc
imul
rep
mov
les
push
adc
dec
lahf
imul
in
ss
sbb
imull
pop
adc
mov
bound
rorb
xchg
subl
jmp
lcall
pop
pushf
cld
xchg
mov
outsb
xor
sbb
flds
daa
flds
loop
dec
and
mov
xchg
lcall
nop
and
fistps
ret
jns
mov
adc
xchg
or
jno
outsl
dec
xchg
sbb
xor
push
inc
sub
pop
adc
test
xor
loopne
ja
clc
add
jae
loop
test
jmp
lret
cmc
imul
mov
xchg
aam
xchg
fldcw
in
std
cmp
ja
lods
shll
jp
mov
jno
mov
test
bound
call
mov
les
aas
jg
push
shr
cmp
adc
mov
subl
ret
xchg
mov
xor
test
jb
out
pop
stos
inc
orb
push
mov
push
rcrb
and
sbb
movsl
xchg
in
mov
outsb
pop
inc
notb
lods
mov
sbb
mov
aad
mov
dec
add
add
lret
sub
push
test
mov
aaa
out
inc
rolb
xchg
pop
out
cmpsb
and
clc
mov
iret
addr16
scas
add
lock
adc
push
movl
in
jno
mov
pop
pop
and
lock
je
into
dec
sbb
or
push
jmp
sbbb
popa
movsl
stos
and
insl
roll
mov
dec
sub
bound
or
push
mov
cli
in
pop
or
mov
fs
dec
pusha
lock
or
out
pop
pop
cmc
xchg
mov
mov
xchg
sub
fdivr
sti
lods
jne
inc
ds
jns
mov
in
xor
shl
ss
mov
js
mov
imul
push
cmp
test
cmp
inc
lock
and
test
aas
inc
cwtl
icebp
mov
faddp
bound
jbe
xlat
dec
leave
xchg
or
jae
pop
or
jno
cli
mov
cmpb
jno
aam
push
mov
push
scas
ja
lcall
stos
inc
sub
nop
sub
xchg
or
rcll
test
fwait
inc
or
mov
sbb
cld
push
mov
das
cmp
mov
test
ret
xor
mov
popa
pop
test
sbbl
jg
in
clc
ret
adc
js
mov
adc
leave
movsb
mov
test
pusha
in
push
pushl
jb
pushf
in
push
add
leave
or
cmp
xor
insb
aaa
sbb
bnd
lods
nop
daa
loope
and
xchg
push
js
xchg
or
rol
and
xchg
sub
sub
outsl
test
inc
mov
inc
push
icebp
test
bound
mov
pop
sub
scas
and
xchg
js
bound
pop
cwtl
cmp
jle
adc
es
ret
out
inc
adc
lds
xchg
shrb
jecxz
mov
cwtl
cmp
lcall
pop
xchg
outsb
cmp
xchg
cmp
rcr
mov
mov
xchg
ret
movsb
xchg
fwait
loopne
shlb
mov
mov
sub
xor
rorb
roll
rdpmc
rorl
frstor
les
bound
leave
cmp
jbe
sahf
sbb
sbb
iret
xchg
xchg
inc
mov
jp
jg
inc
mov
xchg
push
jmp
out
pop
push
ret
rorb
inc
add
jo
mov
popa
adc
xor
dec
push
stc
and
nop
jae
jge
inc
sbb
aaa
mov
mov
push
int
mov
insb
scas
sahf
loop
inc
int3
fimuls
dec
and
cmp
xchg
or
mov
out
pop
outsl
sarl
mov
mov
adc
jbe
pushf
movsb
neg
push
mov
outsl
icebp
mov
lea
cmp
dec
add
cmp
and
pop
popf
je
mov
test
std
enter
ret
cwtl
repnz
adc
pop
mov
sub
dec
lahf
fdivr
cmc
shl
sub
pop
xchg
xchg
lahf
jno
shll
popf
addr16
jmp
int3
subb
cld
insl
mov
test
push
push
aaa
or
repnz
loopne
add
stos
dec
adc
jo
mov
imulb
inc
dec
add
out
push
pop
scas
imul
xlat
push
ret
lcall
iret
outsb
enter
sub
popa
jae
iret
xchg
sbb
divb
and
cmpsb
mov
aas
popf
cmp
add
mov
mov
push
test
fstps
cmp
pop
mov
dec
xor
xor
sub
and
xchg
xchg
jle
push
enter
cli
xchg
and
imul
jne
es
test
aaa
lds
clc
test
roll
popa
mov
sub
imul
cmpsb
jecxz
mov
push
movsl
or
ss
fldcw
arpl
cwtl
adc
cmc
ljmp
dec
mov
mov
decl
adc
shrl
psrld
sub
in
add
mov
mov
sbb
mov
rolb
test
and
fadd
cmpsl
jns
mov
add
add
cmp
jecxz
pop
sub
push
xor
ficoml
add
subb
push
add
enter
ret
push
ret
add
mov
jmp
lret
or
loop
jge,pn
cs
lods
adc
xchg
dec
cmc
adc
jbe
add
push
xorl
cltd
jns
xor
push
jp
cli
xor
movl
or
adc
inc
push
clc
mov
mov
int
mov
aad
fiaddl
fsts
sub
sbb
repz
int
pop
push
mov
adc
sti
lock
daa
sbb
ret
enter
cld
jno
mov
cli
sbb
mov
test
popa
stos
sbb
cmp
push
pusha
mov
test
sub
or
int
sub
cmp
mov
iret
mov
add
les
stos
push
out
mov
xchg
inc
jle
push
insl
rcrb
aas
test
scas
xlat
xor
cmp
je
popa
pop
lcall
call
sub
icebp
jbe
cmc
dec
lret
push
xchg
xor
mov
dec
psubd
ret
xchg
test
int
mov
in
cltd
stos
jg
xlat
aad
adc
fsubrl
testl
adc
scas
fcoml
xchg
push
sub
int
adcl
fsubl
mov
stos
or
mov
mov
lret
and
jp
sub
ss
jle
sbb
mov
popa
sbb
mov
lea
mov
sbb
sbb
mov
popa
sahf
mov
mov
cmpsl
mov
adc
sahf
cmp
pop
and
sti
or
pop
sub
or
pop
mov
lods
dec
cmp
test
push
aas
out
outsl
xchg
push
or
scas
inc
xchg
loope
pop
adc
mov
ffreep
repnz
mov
cmp
fdiv
icebp
fcoms
inc
cmpsb
lds
fisubl
leave
dec
loopne
lods
test
adc
inc
cmp
dec
jecxz
inc
lcall
add
adc
outsl
sti
or
push
sub
jge
dec
popf
je
imulb
push
jbe
inc
xchg
das
call
bound
call
icebp
mov
dec
xchg
adc
xchg
or
jmp
sub
test
loop
aas
push
mov
mov
in
push
neg
dec
sbb
rolb
mov
mov
or
jmp
push
scas
in
inc
jge
jmp
push
pop
in
push
jecxz
mov
or
fwait
jmp
ret
pop
out
test
addr16
dec
cmp
ja
inc
xchg
loop
imul
rclb
mov
xchg
inc
es
leave
lcall
aam
inc
lahf
sub
xchg
testl
mov
xor
push
xrelease
sbb
mov
test
outsl
std
jbe
out
mov
cmp
out
xchg
orb
and
or
aam
push
sub
xchg
leave
or
xchg
fldt
mov
pop
lret
sti
pop
rolb
lret
in
aam
jnp
jp
outsl
cltd
xor
pop
lret
dec
aaa
push
frndint
inc
movsl
jg
fsub
outsb
test
aad
orb
add
jo
rcll
cmc
cltd
xchg
pop
adc
js
in
movl
and
cmp
adc
jge
mov
mov
push
xchg
sub
pop
and
std
jle
push
mov
out
mov
pop
jnp
adc
dec
mov
mov
jp
mov
dec
sahf
insl
out
sub
cmp
jecxz
lods
add
bound
jmp
hlt
int3
jae
outsb
decb
cld
sub
faddl
pop
sub
xchg
sti
pop
rcll
cmp
daa
sbb
scas
jmp
scas
in
ret
push
and
or
cwtl
lock
mov
adc
fdivl
jns
push
mov
dec
jo
and
testl
cmp
push
mov
mov
jmp
je
clc
mov
dec
inc
xchg
fildl
add
lods
xchg
data16
mov
leave
sbb
testb
aad
std
mov
sub
push
or
add
and
andb
xchg
movsl
js
xor
sbb
outsb
mov
mov
push
ret
pop
loope
in
test
adc
jnp
shr
movsb
movsb
dec
fisttps
jp
loop
pusha
test
cld
xor
jle
add
movsl
jmp
xchg
adc
add
test
jmp
pushl
mov
cmpsl
fisubs
in
mov
add
jb
dec
jns
stc
popa
jo
xor
mov
push
subb
push
mov
int
popf
jb
stc
push
sbb
pop
addr16
cmp
mov
out
and
and
push
add
pop
ss
pop
or
adc
sbb
mov
xchg
gs
sahf
pop
push
mov
xchg
jecxz
sbb
repnz
dec
dec
dec
sbb
jae
lods
lcall
pushf
scas
xchg
inc
lods
push
inc
dec
lock
inc
aaa
dec
mov
es
fsubl
mov
mov
jno
cwtl
cmp
aaa
mov
imul
rcrl
jecxz
pop
cmp
jge
imul
sbb
pop
push
aam
xchg
add
pop
test
in
sub
xchg
fdivrl
and
loop
sbb
xchg
xor
jl
lds
and
test
adc
fldt
inc
imul
fisubl
repz
add
shrl
mov
in
iret
mov
ljmp
call
push
mov
les
push
idiv
and
enter
cld
xchg
in
inc
sub
cmpsb
mov
inc
fimull
icebp
out
hlt
scas
aad
je
fadds
jle
push
js
and
pop
adc
ljmp
jg
cli
setnp
inc
sub
js
stc
pop
adcl
xchg
mov
fimuls
fistpl
fmull
and
ret
out
mov
in
xchg
ljmp
out
add
fwait
ret
outsl
pop
mov
stc
movl
not
add
sub
leave
dec
cmp
dec
data16
mov
cmc
ja
je
cmpsb
xchg
int3
sub
xchg
lock
push
xor
sbb
or
fsubs
sub
cmp
inc
pop
outsb
ja
xor
into
push
daa
lods
pop
out
loopne
test
pop
pop
mov
or
fs
fistps
pop
es
dec
repnz
xchg
mov
ss
test
aam
sbb
dec
adc
or
addr16
push
sarb
fbstp
sbb
bound
sbb
gs
rorl
jbe
out
adc
and
cmp
adc
pop
mov
enter
fstpl
jb
xchg
mov
lods
shl
push
pop
cmp
hlt
in
mov
out
ljmp
push
loopne
mov
adc
sbb
push
lret
xor
sub
push
aaa
andb
pop
cwtl
movsb
push
mov
dec
inc
push
les
xchg
sbb
loopne
dec
ss
loope
lea
loopne
call
nop
stos
ds
mov
push
cmp
aaa
outsb
pcmpeqw
in
bound
cmp
fiaddl
pushf
daa
daa
imul
sub
xor
iret
shll
test
negb
test
pusha
sarl
lcall
mov
subl
cs
test
test
cmp
dec
xchg
or
pop
cmpsb
imul
decl
xchg
movsb
ret
push
add
lahf
pushf
adc
and
dec
test
cwtl
hlt
inc
cwtl
jno
in
adc
xor
cmp
mov
mov
pop
enter
lods
out
xchg
push
mov
lds
mov
movsl
lea
loopne
pop
addr16
imul
cmpsl
daa
lret
inc
cltd
jnp
add
jne
xchg
dec
fs
leave
pop
push
cmp
push
loop
sbb
pop
adc
jns
xor
add
jbe
ja
xchg
push
ror
repz
rcrl
lret
loop
mov
andl
in
je
inc
push
test
jae
dec
pop
jo
inc
aas
jecxz
or
sbb
xchg
push
pop
rorb
xchg
mov
mov
push
imul
js
popf
jg
adc
jne
das
adc
push
mov
ret
jo
pop
pushl
aam
xlat
and
push
xor
stc
clc
je
daa
add
jbe
jp
xchg
push
xchg
stc
jl
or
rcll
in
inc
out
mov
cmp
mov
and
or
sahf
mov
add
dec
lock
mov
mov
out
jns
pusha
mov
movsl
push
xchg
adc
popl
test
sbbb
mov
inc
fisubrs
push
sub
out
cmpsb
loopne
pop
xor
adc
fs
std
fisubs
test
xchg
mov
push
daa
js
je
push
and
mov
daa
and
sbb
adc
mov
ljmp
jb
mov
outsl
jo
dec
lahf
repnz
xchg
fidivl
rorb
mov
jmp
mov
out
cwtl
lds
mov
stos
inc
stos
mov
push
leave
ja
xadd
pushl
sahf
clc
push
das
jg
movsl
push
add
mov
lods
add
mov
lock
push
ret
dec
push
add
aaa
jp
out
sub
pop
lret
add
inc
mov
jb
fnstcw
pop
aam
popf
and
enter
mov
lock
call
sbb
push
xchg
dec
mov
lea
lods
mov
fnstcw
mov
imulb
nop
popa
loope
cmp
icebp
stos
jecxz
into
shrl
cltd
imul
mov
aas
push
fldl
fcomi
pop
and
sub
pushf
or
cmp
jbe
cmp
adc
cmp
add
insb
outsb
sbb
test
xor
in
popf
mov
mov
dec
adc
lahf
dec
jg
adc
mov
dec
add
or
test
pop
imul
adc
xor
pop
out
push
aaa
dec
insl
add
inc
pop
add
cmp
xchg
xor
adc
mov
rcll
jne
and
out
mov
popf
pop
sahf
inc
push
ret
pop
pushf
inc
pop
test
sbb
iret
xchg
xor
je
pop
dec
xlat
push
mov
inc
jg
icebp
insl
ret
lock
lea
fdivrl
pop
rolb
jbe
lret
pop
mov
jmp
adc
cld
sbb
js
mov
dec
or
and
xor
mov
repz
or
push
or
jmp
cmp
add
jl
and
and
xchg
test
pop
retw
push
jmp
mulb
ja
stc
mov
clc
aam
cmp
sub
mov
call
stc
mov
in
or
int
cmp
popa
fsubr
mov
xorb
lea
inc
repz
mov
jg
std
andl
xchg
jno
and
or
mov
and
and
aaa
js
sub
adcl
icebp
aas
or
int3
push
pop
in
scas
in
scas
inc
lock
and
pop
and
pop
jnp
pop
jb
ret
dec
test
test
push
dec
enter
inc
orl
aad
xor
ds
add
scas
orl
push
aad
mov
push
sub
mov
and
inc
sbb
outsb
loop
loopne
jnp
push
scas
jns
daa
arpl
xlat
lods
out
xchg
lret
mov
bound
mov
mov
aad
hlt
or
inc
jnp
daa
pop
ljmp
jge
and
popf
jl
cmc
fidivl
imul
sbb
insb
xchg
mov
mov
mov
mov
mov
in
add
inc
lcall
mov
imul
cld
xchg
movsl
mov
jmp
movsl
test
mov
jp
loope
shlb
cli
jno
ret
out
add
and
fsubrs
notl
inc
fdivr
push
jl
mov
jecxz
sbb
cmpl
test
test
or
cwtl
adc
jmp
inc
cli
adc
std
inc
xor
cmp
pop
cltd
and
push
pop
sub
sbb
cmp
sub
es
jnp
pop
mov
dec
push
aaa
loopne
cld
std
xor
bound
and
push
pop
pop
xchg
std
xchg
cmp
js
cmp
sbb
imul
rol
mov
decb
push
push
xor
ret
sbb
mov
cmp
inc
sbb
aaa
xor
mov
xor
and
mov
add
mov
sahf
roll
aas
stos
iret
lcall
xor
push
mov
xchg
idiv
and
call
fldcw
inc
dec
dec
lods
jbe
lret
call
stos
addr16
test
mov
gs
cmp
lcall
jp
into
adc
jl
pop
inc
xorl
ljmp
jmp
insl
imul
repz
sahf
loope
xor
les
jns
lret
pop
daa
add
test
xchg
lods
pop
pop
ljmp
icebp
mov
dec
fidivl
jle,pn
pop
movsl
or
gs
notl
ds
mull
hlt
jbe
iret
ds
leave
inc
cltd
in
enter
pushf
loope
cmp
push
cli
das
push
dec
adc
insb
sbb
pop
sub
popa
mov
inc
or
icebp
sbb
mov
lods
push
push
or
je
push
leave
cmp
mov
loope
divb
movsl
sub
out
inc
cmc
or
clc
lcall
add
popa
mov
push
hlt
rolb
int
cltd
test
mov
pop
inc
sub
xchg
or
sbb
pushf
orb
out
inc
xchg
enter
sub
sub
cltd
out
jg
mov
mov
stc
dec
inc
movsb
mov
mov
xor
xchg
fldenv
adc
rorl
cli
pop
cmp
pop
in
pop
xchg
xchg
mov
mov
ss
cwtl
insb
pop
imul
cmpsb
sub
xchg
pop
jae
jae
dec
dec
fisubrl
pop
mov
mov
push
cmpsl
int3
sub
test
mov
mov
pop
fsubrs
int3
cmp
dec
push
pusha
adc
fbstp
rclb
outsl
sub
jg
jmp
cmpl
jmp
or
sub
test
xor
add
or
movsl
in
lods
xchg
loop
in
mov
mov
test
cmc
cmp
loope
pop
pop
pop
out
adc
sub
jl
mov
adc
mov
leave
jns
sub
mov
lds
lods
outsl
mov
cmp
sub
xchg
adc
bound
and
shl
push
test
call
lret
adc
addr16
rorl
jmp
js
jbe
sti
aam
dec
cltd
xchg
stc
mov
cmp
iret
pop
inc
imul
rcrb
sub
mov
pop
xor
mov
push
cli
pop
cmp
mov
jge
sahf
insb
mov
adc
scas
and
cmp
push
jae
repz
dec
jecxz
icebp
das
push
inc
xchg
dec
in
mov
mov
xor
popa
loopne
mov
pop
adc
cld
xor
jno
dec
mov
cmp
and
imul
shlb
test
jns
adcl
shll
repz
movsb
push
lret
xchg
loopne
lea
pop
or
leave
dec
add
shlb
mov
cmp
dec
insl
out
sarb
mov
cmp
dec
fwait
push
out
push
hlt
xchg
sub
xchg
lcall
mov
cmc
mov
mov
popf
idivb
mov
xor
jge
or
stos
cmc
lea
push
adc
cs
jnp
das
sbb
or
xchg
enter
faddp
dec
dec
mov
or
inc
pop
xor
std
fs
and
addr16
xor
pusha
mov
shl
mov
add
lret
jno
leave
in
lods
arpl
mov
imul
aam
push
add
jmp
daa
or
add
arpl
clc
into
sarb
push
pop
into
cmp
xorl
or
push
sub
sub
push
mov
or
enter
xchg
repz
jb
cmp
mov
repnz
rclb
dec
cltd
lods
ret
aas
sahf
dec
adc
lock
lods
cwtl
loop
hlt
aad
repnz
notl
inc
scas
out
mov
pop
shrl
mov
test
mov
daa
in
stos
clc
jae
aam
in
pop
add
stos
fistpll
lahf
or
sahf
enter
enter
inc
push
cld
sbb
mov
divb
es
mov
mov
sub
cltd
js
xchg
add
xchg
int
xchg
jns
pushf
pop
faddp
clc
movsb
lea
popa
jl
sub
mov
insb
mov
jno
mov
imul
push
or
fimuls
adc
jae
push
incb
mov
jle
xchg
adc
mov
imul
adc
arpl
iret
fstps
inc
inc
fucomip
fwait
dec
out
or
dec
add
inc
cwtl
outsb
or
arpl
dec
std
adc
addl
lods
inc
push
icebp
incb
jns
movsw
aaa
lret
jecxz
sbb
push
add
xchg
fcompl
int3
adc
popf
add
pop
stos
pop
js
mov
lcall
inc
push
cltd
and
into
jns
fidivrl
enter
lea
adcl
mov
adc
mov
adcb
rclb
gs
or
out
sahf
jo
xchg
jmp
movsl
rcll
shrb
notb
icebp
sub
push
xchg
inc
cmp
xor
daa
cmc
ret
dec
xor
mov
push
xchg
aaa
mov
lods
dec
cmc
cwtl
cmpsl
mov
movsb
sub
adcl
je
or
lahf
sub
push
sub
cmp
pop
xor
in
out
dec
lods
popf
ss
inc
rorl
dec
fistpl
jecxz
ja
jno
out
mov
push
ljmp
pusha
shufps
and
sub
sbb
adc
test
mov
xor
xor
insb
loop
jge
and
sbb
xor
sub
adc
xchg
add
dec
decl
lsl
or
hlt
xor
enter
mov
sti
mov
pop
pop
insb
cmp
in
pop
mov
xor
push
add
out
xor
xor
mov
out
insb
pop
mov
cmp
lock
sahf
imul
and
sub
repnz
lock
mov
push
mov
xchg
idiv
mov
xor
add
int3
loop
popa
hlt
repz
enter
sbb
nop
jl
jno
mov
or
push
pop
iret
adc
cltd
cld
repz
aas
adc
inc
adc
into
mov
dec
inc
sarl
int3
cmp
nop
rolb
idivw
scas
xchg
mov
into
and
adcl
add
in
gs
mov
adc
cmp
stc
mov
popa
inc
jb
ret
leave
pop
cltd
in
and
scas
out
outsb
mov
sbb
adc
sub
sbb
xchg
xchg
fcmovnbe
dec
stc
incb
mov
fldcw
xor
inc
adc
data16
sbb
mov
mov
in
xlat
stos
aas
lcall
jo
std
lods
aaa
movsb
iret
inc
hlt
inc
mov
scas
xchg
sbb
jl
inc
mov
pushf
lcall
fwait
adc
dec
shl
pushl
int3
pop
pop
sar
pop
aam
adc
das
fdivr
mov
inc
push
cmp
and
leave
out
mov
outsb
dec
add
roll
jmp
out
mov
or
mov
pop
mov
cmp
mov
push
mov
pop
fsts
sbb
jecxz
addr16
scas
nop
mov
imul
aad
dec
jbe
push
repnz
aad
jl
loop
dec
out
adc
and
lret
jnp
in
inc
xor
push
push
sub
clc
aam
xchg
inc
jns
pop
or
rorb
add
xchg
pop
xorl
iret
div
ret
andl
popf
scas
es
enter
mov
mov
out
fldcw
inc
push
fmulp
test
add
aam
mov
fcoms
mov
xlat
sarl
pop
shlb
add
push
aam
jmp
stos
sbb
mov
add
push
mov
add
notb
call
mov
out
mov
lock
test
popa
fiadds
cwtl
aaa
jns
xchg
jb
into
push
loope
dec
or
scas
out
std
add
mov
cmp
xor
hlt
sbbl
mov
bound
scas
testb
pop
xor
into
ja
inc
outsl
pop
push
mov
subb
adc
mov
sub
mov
pop
push
cmp
inc
pop
cmpsb
sub
js
dec
inc
enter
dec
adc
in
ficomps
sbb
jp
pop
sub
inc
mov
les
data16
xchg
dec
insl
arpl
pop
and
loopne
xchg
xor
add
xchg
pop
cs
pushf
and
shlb
add
psubsb
jecxz
stos
adc
ja
inc
je
fsubs
ss
sub
outsl
fistpll
inc
pop
mov
popf
cld
mov
call
faddl
pop
aam
cmp
sbb
sub
cmpsl
lock
loope
adc
sahf
scas
pop
imul
inc
or
jle
cmp
jecxz
inc
imull
sahf
scas
out
data16
inc
and
inc
pop
pop
cltd
or
test
pop
mov
sbb
jo
xor
adc
xor
mov
and
dec
mov
push
testb
cmc
mov
xchg
imul
dec
loopne
pop
sub
mov
test
rcll
pop
sbb
js
or
mov
insl
inc
imul
aad
jns
xrelease
iret
test
ljmp
testb
loopne
adc
lock
jmp
fmuls
push
cmp
and
lcall
mov
xchg
sbbb
stos
les
dec
mov
mov
dec
ja
bound
ja
sub
clc
mov
jns
icebp
lret
jb
call
inc
fcmovne
add
outsl
add
add
popa
scas
cltd
sub
xor
loope
and
stos
stos
ficompl
cmp
jp
sub
outsl
mov
jecxz
sahf
xchg
sbb
ja
fiaddl
dec
mov
mov
outsl
mov
adc
xlat
js
mov
hlt
jmp
push
arpl
mov
inc
pushf
call
addl
pusha
push
jae
jmp
loope
and
cmpsb
sbb
push
cmc
add
lods
push
cld
jbe
test
add
loopne
and
push
mov
dec
movsl
adc
fsubs
cmp
cmp
mov
and
aad
and
cmpsb
push
lret
outsl
fs
and
popa
pop
push
ret
hlt
push
adc
dec
into
push
test
sub
jbe
mov
adc
add
int3
ret
inc
pop
rcll
pop
ljmp
dec
call
and
insl
xchg
pop
cmp
cmpsb
leave
popa
dec
xchg
adc
cmp
add
mov
mov
add
dec
call
out
inc
leave
in
das
cmp
pop
cmp
dec
aas
sbb
inc
xlat
leave
xchg
mov
repnz
icebp
pop
mov
shll
lock
cld
fadds
nop
inc
inc
or
or
lret
ficomps
adc
jbe
out
test
jle
stos
cs
mov
shl
and
xor
mov
pop
and
jecxz
mov
into
scas
sub
pop
frstor
xchg
and
xor
cmp
cmc
in
ror
out
pop
pop
adc
mov
call
mov
jecxz
into
bound
push
adc
mov
testl
cmp
fnstsw
push
xor
rorb
imul
shrl
push
jle
or
scas
aaa
out
sub
mov
push
lea
repz
cmp
mov
in
mov
jne
mov
jo
add
popf
sub
mov
push
decl
fwait
repz
jl
xor
push
or
jg
inc
adc
sbb
imul
es
add
sub
aas
mov
stc
or
je
insb
cmpsl
adc
ficomps
cld
add
xchg
imul
and
cltd
push
mov
inc
or
int3
cmpsb
jae
cwtl
or
adc
das
neg
sub
outsl
jp
mov
daa
pop
adc
jae
lret
cmpsb
lcall
mov
mov
jg
ficoms
subl
lock
xchg
adc
push
xchg
in
mov
addr16
popf
sub
or
jl
fdivrs
xor
mov
sbb
xor
mov
or
lcall
push
aaa
ret
in
push
inc
sahf
dec
je
lods
adc
push
jle
iret
push
lcall
cltd
add
mov
in
and
cmp
pop
test
fstpl
push
rcrl
out
sti
push
push
cmpl
or
push
push
and
sbb
and
push
out
hlt
jne
cmp
int
outsb
in
dec
sbb
cmp
dec
cld
out
mulb
sub
in
mov
xchg
dec
lahf
mov
dec
imul
out
sbb
mov
out
mov
test
ja
mov
xor
dec
ficoms
popa
out
in
sub
test
in
shrb
enter
dec
lcall
mov
neg
into
sub
add
jbe
and
roll
loopne
inc
cli
inc
push
mov
and
out
int3
xor
cld
jmp
dec
or
mov
push
mov
shlb
push
es
pop
sqrtps
jo
push
jecxz
pop
rcrb
cmp
push
imul
mov
xchg
cmc
pop
xor
mov
je
xchg
xchg
arpl
in
pop
punpckhbw
daa
dec
and
mov
cld
and
mov
jl
inc
adc
sub
mov
insb
nop
stos
mov
and
negl
aam
ljmp
out
mov
mov
ds
xor
int3
cmpsl
xchg
sub
mov
aam
push
test
jge
jp
inc
or
nopl
ljmp
mov
ljmp
xor
xor
popa
insl
mov
cmp
xor
push
mov
call
and
and
xor
shll
inc
inc
sub
mulb
xchg
hlt
cmp
enter
insb
lahf
rcrb
cmpsb
out
xchg
gs
push
subb
pop
sub
cmp
or
mov
fmull
inc
getsec
rolb
ret
pop
adc
in
add
dec
jne
loop
mov
daa
or
and
dec
jbe
push
xchg
cli
rcll
mov
jbe
mov
cli
test
aas
addr16
lock
mov
push
enter
add
mov
ret
fdivrs
jo
pop
stc
jmp
jne
aaa
mov
insl
negb
jmp
fwait
mov
pop
lea
lahf
int
xor
push
sbb
in
out
stos
rolb
and
into
inc
cmpsb
xchg
push
dec
pop
addr16
jmp
lock
adc
add
cltd
outsb
fcomps
fmul
mov
repz
sub
mov
fisttps
fisubs
out
sub
push
scas
jge
dec
out
pop
movsb
pop
pop
inc
sub
or
insb
xor
mov
push
ljmp
mov
sub
mov
outsb
scas
push
movl
mov
mov
scas
mov
in
testb
iret
xchg
std
push
mov
jbe
pop
mov
mov
pop
push
icebp
sbb
mov
xrelease
pop
cmpsb
ljmp
inc
pop
sub
es
lahf
and
jo
or
enter
data16
mov
xor
mov
xchg
lock
in
shrb
dec
ror
popa
mov
jae
push
xchg
or
popa
pop
mov
xchg
pop
mov
push
dec
jno
icebp
out
xchg
dec
scas
in
mov
dec
flds
ror
mov
pusha
mov
frstor
rclb
pop
jecxz
es
pop
imul
dec
pop
sarb
push
cs
js
and
or
lock
lods
mov
push
fs
into
mov
xchg
push
cmovle
mov
cmp
je
lods
adc
ja
jmp
adc
in
repz
loope
and
jnp
or
cmp
xlat
fistpll
repz
int
movsl
sbb
jne
mull
jle
sbb
inc
add
or
loope
mov
fisttpll
push
daa
cmp
mov
mov
pop
les
add
jnp
sbb
dec
xchg
inc
cmpsl
lods
xor
fsubrl
outsl
or
xchg
dec
and
sti
xor
fisttps
or
lods
jno
sbb
or
in
jmp
test
mov
push
push
test
dec
inc
cmp
pop
add
pop
lahf
xor
test
add
data16
and
jb
mov
lods
icebp
jle
ret
xchg
pushf
sbb
mov
jl
or
add
lahf
pop
or
xor
pop
or
call
popf
cmp
cmp
shlb
adc
xor
clc
hlt
out
aas
repnz
out
pop
lahf
jecxz
cmovp
jbe,pn
and
sbb
sahf
mov
sbb
sub
out
pop
adc
xchg
cs
ljmp
in
xchg
cwtl
testb
sahf
and
es
outsb
mov
sahf
push
rcll
mov
pop
sbb
cld
enter
pushf
jle
push
cmp
popf
outsb
jns
inc
fimuls
rcrl
rep
xchg
cmp
mov
xor
xor
ja
mov
mov
pusha
pop
js
stc
sti
jmp
data16
pop
pop
in
loope
outsb
fidivrs
out
xchg
inc
aas
nop
roll
out
adc
les
int3
jo
scas
and
lcall
clc
inc
stc
mov
push
xchg
mov
imul
jmp
scas
jbe
adc
mov
outsb
mov
mov
int
and
mov
in
sbb
out
and
fcmovbe
xchg
adc
jecxz
sub
adc
sbb
enter
mov
icebp
jg
sub
mov
jae
lahf
ret
dec
sbb
and
and
push
cmp
or
enter
cmp
cmp
inc
hlt
push
dec
fcomp
xchg
in
insb
sub
ret
dec
fdivrs
subb
mov
jle
dec
outsl
mov
leave
or
popf
dec
cmp
hlt
lret
ljmp
stos
ss
loope
aam
scas
and
lcall
or
pushf
xor
stos
ss
insl
add
fisttps
in
loope
mov
lcall
adc
mov
pushf
jle
ljmp
push
notb
push
and
push
fstpt
jecxz
popf
dec
clc
ja
inc
xchg
cs
xchg
push
pop
mov
movsb
sub
pop
xchg
pop
mov
push
imul
rcrw
add
ds
cltd
pop
cmpsb
xor
or
pop
insb
inc
jl
and
test
cmp
into
enter
mov
dec
fcmovu
shrl
inc
adc
mov
cmp
sub
jecxz
aad
cs
fsts
sbb
dec
mov
jne
adc
mov
test
sub
xor
and
adc
and
dec
jecxz
fwait
pop
sahf
mov
out
subl
out
lock
sub
lret
test
mov
outsl
ljmp
pushf
aam
inc
addr16
cltd
dec
mov
pop
mov
scas
mov
sarb
pop
mov
xor
xorb
sbb
cwtl
mov
pusha
or
movmskps
sub
ja
leave
inc
push
test
aaa
addl
xor
mov
adc
mov
sub
pop
lock
cmp
es
pop
mov
test
and
flds
xchg
insl
push
pushf
in
mov
push
cmp
mov
pop
sub
test
push
xchg
xlat
dec
or
pop
push
dec
cmpsb
push
imul
lea
iret
daa
cli
sti
outsl
mov
daa
test
lret
cmp
jge
xchg
movb
cmpsb
mov
mov
inc
mov
mov
or
ja
in
lock
or
mov
adc
cld
add
push
pop
lds
fnstcw
imul
imull
das
inc
sub
insb
testl
ljmp
sub
push
inc
pusha
push
jns
push
int3
test
push
je
cmp
adc
jmp
mov
ret
and
out
push
and
sbb
test
inc
lret
sahf
xor
test
je
pusha
xchg
mov
mov
or
fs
dec
loope
pop
mov
sub
cmp
jne
scas
lock
sti
mov
sahf
ret
sub
ss
inc
ret
mov
cli
xchg
sbb
aas
lcall
or
xor
or
outsb
jmp
jg
jne
lock
shlb
shrb
add
lret
cli
push
sbb
aaa
outsb
test
cmp
xchg
mov
das
int
sub
lock
jne
inc
sub
aam
push
ficomps
into
jl
test
js
xchg
sti
mov
insb
pop
jno
shl
in
or
push
push
iret
shll
data16
pop
mov
in
ja
xchg
popa
sub
pusha
loope
or
popf
or
jno
pushf
add
mov
xor
lds
adc
cld
xchg
inc
arpl
jg
and
adc
mov
add
pop
sti
loope
mov
jns
ror
fcompl
cs
movsl
cld
add
sarb
mov
std
icebp
shrb
gs
mov
lahf
mov
inc
xor
dec
sbb
xchg
pop
movsb
jb
mov
push
repnz
inc
push
add
inc
repnz
jb
mov
cmpsl
dec
cmpl
jbe
out
add
movb
movsl
ja
or
add
cmp
loopne
push
sbb
popl
mov
data16
add
aam
enter
or
jnp
sbbb
dec
int
xchg
aaa
rcpps
lds
mov
ret
mov
jp
cmpsb
inc
sub
inc
loopne
test
jnp
test
jle
addr16
jl
test
push
pop
xor
cltd
sarb
pusha
ljmp
inc
hlt
xchg
cmp
xorl
or
loop
out
out
jl
insb
add
enter
xor
and
arpl
lret
jb
test
mov
inc
mov
icebp
shlb
jo
push
arpl
xor
xchg
inc
ja
test
fsub
sub
pop
mov
mov
dec
popa
mov
fidivs
scas
xor
scas
and
stos
and
sbb
mov
inc
cmp
cmc
into
enter
mov
inc
data16
cmp
clc
lea
pop
cmp
mov
scas
pop
mov
mov
cmpsb
js
lcall
pop
fmuls
xor
addr16
lret
and
xchg
inc
insl
xorl
inc
dec
jge
sbb
and
fpatan
inc
loopne
je
int3
fwait
jle
cmp
lahf
repz
pop
mov
iret
inc
push
xor
shll
in
int3
loop
cmpsl
lahf
inc
loopne
fsubl
inc
sub
inc
sbb
out
dec
xchg
sti
outsl
dec
add
adc
mov
call
repnz
subb
ds
jp,pt
aam
sub
daa
leave
out
stc
xchg
sahf
sub
inc
add
test
jnp
rolb
xchg
mov
mov
push
ljmp
jle
lahf
dec
cmpsl
aas
sar
jns
xor
jge
push
push
pop
out
fildll
sbb
aad
jae
int3
stos
dec
xor
or
mov
imul
jg
push
fdiv
mov
cmp
scas
idivl
stos
mov
int3
lahf
andl
aas
or
pop
push
mov
cld
movsb
mov
stos
jp
xchg
ret
lret
imul
xchg
and
sbb
sbb
dec
shrb
inc
popl
adc
or
rcll
add
notl
sbb
mull
mov
mov
movsb
xchg
jno
jns
mov
sub
pop
or
dec
out
cs
mov
dec
jno
imul
xor
leave
rclb
sahf
cwtl
xor
jl
mov
pop
lds
pop
or
loopne
std
inc
and
je
test
sbb
sbb
jae
inc
into
call
je
test
aaa
dec
cli
fnstenv
pop
out
xchg
std
scas
adc
pop
out
xchg
test
xchg
inc
rcl
sar
lret
lods
jb
dec
dec
jne
enter
adc
push
xlat
xchg
mov
mov
ja
adc
sbb
add
arpl
or
push
mov
loope
cmpl
pop
and
jecxz
adc
je
in
lods
dec
insb
rclb
imul
mov
negb
adc
lock
aas
lods
cs
rcrb
lcall
or
or
lret
andb
ficomps
mov
cwtl
add
ret
dec
push
lods
lods
or
add
icebp
mov
mov
in
mov
jp
popl
add
das
sbb
and
cwtl
js
call
mov
mov
jl
and
rcr
dec
sub
sbb
imul
jecxz
int
stos
xchg
adc
or
mov
in
cmp
jae
xor
mov
xchg
add
ss
jne
cli
in
iret
movsb
sbb
scas
into
inc
adc
shrl
sbbb
das
gs
and
adc
cmc
das
rorl
jo
jg
fnstsw
test
cwtl
mov
mov
out
cltd
adcl
or
arpl
imul
movsb
repnz
xchg
outsb
push
data16
mov
les
and
adc
cli
gs
xchg
flds
xchg
loopne
cmpb
push
mov
js
or
aad
mov
jo
sarl
mov
mov
fidivrl
dec
call
fimull
inc
shr
into
icebp
adc
and
rcl
pop
mov
hlt
cli
fistpl
bound
push
jmp
lahf
faddl
add
jae
jle
jp
and
push
insb
fs
mov
xchg
adc
pop
dec
add
stos
test
lock
mov
push
icebp
cld
icebp
outsl
sub
mov
ds
sbb
jno
jo
hlt
imul
out
mov
ffree
xchg
mov
lods
sub
cmp
dec
jecxz
stc
inc
idiv
push
mov
xchg
mov
rolb
sbbb
jnp
sbb
mov
sbbb
mov
and
aam
sub
jo
push
dec
stos
inc
xor
out
call
stos
adc
outsl
push
shlb
adc
icebp
dec
inc
jmp
in
pop
add
and
rorl
repnz
jecxz
and
xchg
mov
cld
int3
mov
mov
ss
xor
mov
push
mov
pop
mov
inc
cmp
jp
outsb
mov
testb
mov
fnstenv
and
xchg
fnstenv
ja
outsl
adc
aad
into
mov
mov
push
pop
aaa
cmp
sub
jbe
das
push
lcall
js
pop
xchg
into
sub
leave
aas
mov
xchg
mov
clc
inc
lds
xor
dec
pusha
ss
cmpb
sbb
mov
cltd
repz
mov
xor
cmp
sbb
cmp
xor
popl
adc
mov
adc
stos
andb
and
dec
mov
adc
xchg
lcall
pushf
movsb
popa
test
jae
mov
orb
mov
and
aam
mov
cli
loop
cmp
or
jmp
leave
cmpsb
loop
jmp
push
clc
xor
push
push
sub
stc
and
dec
pop
iret
scas
out
push
inc
sbb
xor
fists
pop
mov
mov
and
cmp
jb
and
sub
push
std
cmp
jmp
xor
fucom
inc
pop
xor
or
mov
and
xor
jb
sub
xchg
push
ljmp
adc
in
cmp
roll
sub
mov
fwait
andb
data16
inc
std
xlat
adc
test
sbb
test
mov
push
sub
int3
cmp
repz
test
cs
out
ja
push
adc
outsb
fwait
mov
jmp
movsl
fldcw
sbb
add
lahf
dec
lods
loopne
add
jb
sbb
adc
ret
pop
add
adc
inc
and
jge
cmpsl
das
sub
mov
xorb
lds
inc
sti
dec
lcall
loop
xchg
xchg
add
push
ja
in
or
rolb
add
adc
enter
ja
mov
leave
xchg
pop
in
stos
mov
repnz
jmp
push
xor
pop
mov
js
adc
inc
sbbb
icebp
add
cmpb
sbb
ja
pop
pop
sti
ja
imul
pop
cld
jb
test
mov
push
mov
jg
dec
jbe
cmp
lret
iret
icebp
arpl
inc
mov
pop
lret
xor
jae
cld
das
or
rcrl
icebp
inc
fnstsw
and
xor
dec
roll
inc
ljmp
sub
and
jnp
cli
pop
mov
xor
loopne
in
dec
fstl
xchg
jae
mov
jne
sub
jle
cs
xor
test
add
cmp
loope,pn
das
or
adc
add
and
lods
and
leave
test
and
jg,pt
adc
sbb
pop
jge
jge
imul
jns
out
cmp
pop
mov
out
jge
rclb
stos
dec
out
dec
and
leave
lcall
xchg
jnp
xchg
aas
enter
sub
cli
push
sbb
shrb
lds
xlat
cli
push
fwait
pop
dec
adc
in
bound
out
ljmp
inc
dec
ret
lods
das
movsl
jmp
adc
sbb
jge
pop
js
cmp
or
stos
push
adc
sub
imul
push
in
mov
mov
in
xchg
push
xor
repz
adc
js
das
inc
sbb
aam
mov
adc
popa
pop
push
aam
xchg
mov
push
cmp
push
xor
dec
popl
push
mov
mov
dec
push
or
daa
jmp
mov
jno
push
mov
movsl
pop
mov
pop
ret
jae
jge
dec
cmp
adc
pop
mov
push
add
lods
add
fwait
jmp
test
jl
push
mov
sbb
mov
or
and
and
push
jns
mov
hlt
xchg
or
cmp
mov
cmp
cmpl
inc
mov
xor
add
jl
jecxz
push
insl
daa
jg
std
daa
adc
out
add
xchg
popf
std
clc
sub
mov
frstpm(287
inc
fsubr
lret
jo
push
xor
jbe
cmpsl
andl
shl
xchg
fstpl
ja
jecxz
xor
jg
cs
sbbl
inc
pusha
lcall
movsb
das
push
lods
loopne
inc
push
es
pop
sarl
aas
and
mov
nop
xchg
mov
add
push
sbb
adc
cmp
mov
push
movsb
iret
add
sub
in
adc
push
jne
lea
push
gs
mov
js
push
ret
push
leave
dec
fistpl
lahf
push
hlt
pop
addr16
mov
mov
divb
add
stos
ljmp
lcall
adc
in
mov
push
push
int3
insl
aad
jle
lret
inc
pop
pusha
mov
fadds
lret
sbb
xor
xchg
sbb
std
repz
or
adc
jl
nop
test
into
push
jnp
into
jl
or
mov
in
mov
popf
mov
lock
mov
das
popf
test
pop
cmp
mov
ja
jne
ficomps
adc
mov
rcll
xor
aam
mov
dec
sbb
pusha
and
mov
imul
sbbb
gs
or
mov
mov
mov
incl
imul
inc
mov
mov
xchg
cwtl
or
jne
lea
push
lds
test
inc
aaa
jbe
mov
xchg
xchg
fs
dec
movsl
dec
std
test
repnz
add
enter
test
inc
lods
jecxz
cmpsl
je
jo
adc
push
xor
fnsave
and
andb
stos
data16
pop
loope
test
in
fldenv
adc
adc
and
inc
mov
sub
in
and
push
lret
in
jne
int
mov
aaa
les
loope
push
xlat
xor
push
lock
dec
aaa
inc
dec
mov
fldt
repnz
inc
mov
pop
fstpl
jmp
pop
fldenv
cmc
mov
add
jo
ficoms
inc
add
mov
bound
imul
xchg
je
or
out
insb
xor
pushf
push
in
jnp
dec
rcll
enter
pop
pop
pop
push
out
jne
inc
add
inc
call
out
or
in
push
adc
out
mov
in
mov
jmp
sub
cmp
push
mov
xor
call
dec
call
popa
outsl
adc
push
outsl
xchg
or
jae
lahf
cmp
push
cmc
roll
shll
pop
inc
hlt
test
dec
pusha
mov
sub
mov
cmp
mov
stc
fs
fbld
pop
aam
mov
insb
pcmpgtw
jl
or
into
mov
nopl
mov
xchg
fisttpl
adc
lea
bound
sub
pop
in
jge
lods
xchg
sbb
pop
jg
or
mov
inc
es
faddl
xor
jnp
loop
sbb
push
mov
mov
and
mov
sub
mov
jmp
rclb
or
ja
push
mov
push
clc
fwait
ret
fisttps
and
mov
test
inc
and
xchg
fldcw
sub
adc
das
js
xchg
ljmp
andb
testb
arpl
inc
cmpsl
push
lods
cltd
sub
shlb
push
test
dec
rorl
pop
mov
rcrl
ret
mov
sub
ds
aam
lea
hlt
jp
sbb
popf
push
hlt
sub
shll
shll
arpl
jb
sub
or
iret
inc
inc
test
mov
aam
push
xor
addr16
xchg
and
test
aaa
leave
lods
mov
xor
aaa
xsave
cld
inc
ret
mov
and
testb
jge
and
in
test
sub
not
sbb
push
sbb
add
mov
in
dec
ret
testl
cs
aad
mov
out
aaa
es
je
or
xor
xor
sbb
adc
jne
lods
push
adc
lock
dec
xchg
enter
fs
mov
and
xor
push
stos
cmpsl
pop
sti
sbb
add
add
mov
xor
ja
pop
sti
inc
insb
add
fildl
push
mov
dec
jp
mov
mov
fsubp
pop
push
jbe
pushf
pop
mov
push
lret
mov
inc
pop
mov
aam
je
into
fadd
and
int3
out
jne
sub
and
jo
std
inc
incl
lcall
setno
das
fcoms
dec
mov
push
mov
mov
add
xor
cmpsb
jns
xchg
and
and
xchg
loop
in
cs
dec
adc
jb
mov
outsb
inc
sub
inc
imul
cmpsl
fwait
xor
mov
and
lea
nop
mov
dec
fimuls
add
push
jno
mov
mov
push
insl
les
dec
xor
out
pop
pop
daa
mov
inc
and
stos
enter
loop
jb
daa
push
inc
loope
xor
jae
jmp
cmpsl
xchg
inc
in
mov
roll
in
mov
jmp
xchg
push
cld
cltd
or
mov
int3
dec
or
mulb
add
mov
or
mov
cmp
pop
or
stos
iret
daa
mov
subl
xor
mov
adc
xchg
gs
aam
sub
and
or
in
std
mov
push
jmp
adc
scas
add
mov
cltd
push
fcomp
jmp
add
divl
out
push
stos
sahf
and
lds
jmp
mov
lock
insl
testl
addr16
xlat
or
sahf
pop
and
add
pop
xor
je
fistpll
inc
lcall
mov
pushf
xor
cwtl
xchg
mov
mov
add
mov
pop
sbb
fwait
push
push
sub
fs
jb
lret
pop
lret
and
clc
rcrb
out
das
mov
and
pusha
loope
jns
xor
imul
and
jo
adc
push
scas
imul
adc
mov
sbb
test
sbb
cltd
je
lods
jecxz
and
lret
push
out
sti
cmp
xchg
bound
jne
imul
pop
jb
popf
in
push
cli
add
aad
jnp
push
mov
in
dec
int
sbb
jb
add
push
bound
mov
in
sbb
stos
sub
cmpsl
cmp
ljmp
out
xor
sub
mov
jns
fnstcw
insl
or
cltd
lret
es
and
and
shll
loopne
mov
stc
imul
lret
add
sbb
lahf
and
xchg
stos
and
lcall
xchg
inc
addr16
cmp
leave
lds
cltd
xchg
popf
popf
or
adc
shll
push
ljmp
cmp
inc
jno
lods
jg
xchg
dec
jns
fs
mov
cmp
clc
cmpsb
push
or
daa
imul
mov
dec
sbb
cmc
push
mov
and
adc
pop
movsb
cmp
cmp
push
sbb
xchg
daa
mov
clc
add
jbe
dec
out
mov
iret
lcall
ud2
aas
jmp
scas
ret
inc
lds
mov
cmp
cmp
pop
aaa
ss
test
ret
jp
nop
imul
add
mov
stc
outsb
stos
cmp
test
jbe
and
push
ret
mov
xorb
push
test
push
popf
in
adc
fdivl
jns
add
das
jbe
mov
int
xor
cmp
mov
add
sub
sbb
and
dec
stos
bound
ret
loopne
push
jl
clc
inc
sub
sub
icebp
jmp
jecxz
aam
fbld
outsb
mov
xchg
mov
jmp
shlb
lret
jne
sub
inc
outsb
test
rcrb
js
int
mov
or
mov
dec
daa
imul
cs
sub
or
and
mov
and
xor
mov
cmp
xor
jge
lds
sub
push
lret
jg
cltd
popf
rorl
push
lods
cmp
andl
fldt
aaa
push
arpl
and
fldt
mov
call
jg
popa
loopne
pop
cli
mov
arpl
outsb
cwtl
popa
ljmp
inc
mov
inc
repz
rcrb
int
adc
xor
in
enter
mov
adc
jp
sahf
rcr
cmp
adc
add
xchg
fists
ja
and
mov
xlat
cmpsl
pusha
fcompl
ss
lods
cli
mov
sbb
pop
daa
es
mov
pop
xchg
jmp
cs
out
mov
and
xchg
ret
iret
test
std
fs
add
fs
lcall
cmc
mov
dec
pop
and
push
fs
inc
xor
mov
and
push
shll
xchg
nop
pop
into
fsubs
dec
pop
je
inc
xor
pmulhw
loope
mov
in
pusha
fstps
pop
je
push
rcrl
ds
ljmp
fcompl
scas
dec
mov
pop
jno
cmpsb
inc
out
fsubl
cwtl
mov
adc
lock
pusha
lea
mov
mov
xor
idivb
jle
je
popf
push
and
aaa
cmp
lods
fisttpl
inc
fisttps
mov
adc
arpl
arpl
in
pop
push
sub
sbb
les
andl
loopne
dec
leave
jp
repnz
xchg
mov
test
pop
shrb
push
sbb
nop
das
and
jle
and
push
jl
sbb
sti
mov
xchg
ss
rol
cmc
adc
pop
or
mov
adc
jmp
dec
and
cmp
mov
lods
movsb
andl
outsb
adc
or
stc
movsb
push
sbb
ds
cwtl
push
jae
in
sets
loopne
jle
jecxz
arpl
hlt
lar
or
push
xor
xchg
out
hlt
push
shll
xlat
or
fildl
insb
jmp
loope
pop
jnp
test
inc
lahf
shlb
ret
jnp
jp
mov
sbb
adc
lds
push
jb
roll
xor
loopne
lahf
push
mov
jle
int
loop
sbb
dec
push
cmpsl
lods
mov
test
popa
mov
js
scas
mov
js
ficomps
je
xlat
adc
jnp
jmp
jb
out
negb
rorl
jo
cmp
hlt
mov
loopne
test
sbb
add
jnp
jecxz
adc
jg
stc
push
mov
xorl
or
pop
sti
das
ja
mov
daa
imul
ror
sti
sbb
xchg
push
xlat
imul
jp
popa
js
and
in
lcall
mov
push
dec
pop
ss
inc
push
es
dec
cwtl
jl
adc
fdiv
inc
xor
xchg
aad
push
sub
fists
aas
mov
repnz
in
arpl
xor
dec
add
cmp
cmp
fdivp
push
loopne
daa
dec
mov
inc
pop
shrb
push
mov
clc
add
pop
add
and
nop
ret
pop
div
repnz
push
dec
hlt
sbb
push
xlat
inc
jge
daa
idiv
mov
add
int3
xor
in
cmc
inc
jo
cmp
pop
popf
cmp
mov
jl
loopne
rorb
xor
jg
push
mov
or
hlt
fs
pop
aaa
xchg
jb
add
dec
cmpsl
scas
sub
xchg
mov
push
out
ds
sbb
rcrl
jl
jnp
lahf
inc
and
loop
stos
movsl
lret
xchg
adc
hlt
int3
outsl
cmpsb
fstl
repz
pop
jb
add
adc
and
aaa
sbb
addl
push
sahf
cmp
repnz
stos
divl
ret
mov
mov
push
ret
into
sbb
mov
mov
mov
gs
sub
mov
xchg
push
loop
mov
mov
cmc
fnstcw
popf
dec
dec
addps
jo
es
cmp
mov
aam
push
pushf
test
inc
imul
inc
jmp
and
push
push
cmpsb
loopne
lcall
test
sbb
scas
or
sbb
shrb
cmp
imul
mov
mov
aaa
xor
sbb
dec
add
push
or
stc
push
mov
les
incl
clc
sub
into
sbb
inc
cmpsl
xchg
pop
jne
fldt
jns
aad
lret
xchg
out
and
mov
and
jl
jbe
insl
and
dec
push
orl
cmp
mov
push
repz
jne
cmc
das
push
adc
cmpsb
or
jae
outsb
pop
cmp
pop
xchg
xchg
sbb
push
add
or
pop
sub
out
xchg
fmuls
bound
daa
mov
enter
cmp
adc
push
icebp
das
out
jmp
xchg
scas
test
mov
add
jmp
sbb
repz
add
mov
lret
jle
lock
push
inc
push
lea
dec
fldt
push
add
lods
movsb
mov
popa
aaa
mov
ljmp
xor
cs
mov
ljmp
mov
das
mov
aam
and
idiv
movsl
mov
ds
push
adc
dec
popf
leave
push
ss
ds
mov
cmp
aad
stc
sbb
cmp
push
xchg
ret
xchg
in
aaa
cs
pop
push
adc
mov
test
fisubl
nop
fsubl
add
pop
inc
sbb
into
in
bound
cli
sbb
add
enter
mov
out
dec
and
xchg
push
mov
mov
into
enter
fwait
cli
cmp
push
inc
imul
in
data16
add
shll
aam
xchg
std
push
dec
lret
sub
cmp
sti
mov
inc
xor
repz
test
adc
mov
inc
cmpsb
dec
jmp
sub
cmp
jg
aas
xchg
loop
mov
jb
in
and
pop
cmp
pop
test
push
dec
mov
xchg
stos
sub
adc
ficomps
fsubs
sbb
pusha
pop
ds
adc
mov
test
lea
inc
xor
int3
int
pop
dec
sbb
ds
stc
repz
push
pop
or
lret
rol
xor
lahf
pop
rorl
loopne
fnstenv
inc
xchg
pop
popf
mov
insb
decb
and
push
scas
push
cmc
mov
mov
mov
fmull
xchg
adc
loope
cwtl
icebp
mov
int3
inc
push
mov
loopne
fsubrl
or
insl
push
hlt
out
repnz
or
pop
mov
jbe
pop
enter
xlat
inc
cltd
cmp
pop
dec
jnp
pushfw
cmp
xchg
lods
lea
cmp
jb
sbb
and
mov
decl
xchg
icebp
data16
push
ljmp
fsubrs
jmp
sti
hlt
jo
mov
push
adc
insb
and
std
mov
lods
in
add
mov
xor
cmp
sub
or
into
cmpsb
mov
ja
mov
cltd
mov
pop
imul
nop
add
mov
sub
lcall
or
mov
xchg
pop
das
pop
nop
push
fmuls
cltd
mov
add
out
sarb
ficompl
addb
dec
add
jbe
adc
cwtl
jp
mov
mov
lcall
cwtl
clc
push
jbe
mov
jl
pusha
imull
xchg
stos
mov
fwait
xchg
jp
scas
dec
lahf
mov
cmp
mov
ret
pop
xor
cmc
push
mov
adc
loopne
bound
dec
pop
fldcw
and
mov
movsb
les
sub
ret
in
jnp
sar
fstpt
fcomps
lods
mov
xor
pop
sbb
fistps
xchg
fisubl
sbb
mov
int3
xchg
test
jns
mov
repz
bound
outsl
das
icebp
dec
lods
xchg
add
pop
and
adcb
pop
jb
nop
fsubrs
mov
je
xchg
and
sti
mov
sahf
xor
adc
mov
jnp
enter
pop
shll
add
in
sarl
or
mov
ds
cmp
adc
clc
je
bound
or
iret
adc
xor
stos
in
cmp
inc
and
rcr
sbb
loopne
mov
test
testl
push
pop
mov
add
je
loop
outsb
movsl
xor
jne
and
test
jae
in
loope
sub
in
ror
adc
push
mov
xor
jb
scas
int3
ljmp
hlt
pop
push
adcl
dec
sti
jmp
mov
jge
int3
enter
in
aas
jg
stos
add
mov
cmp
lahf
aam
and
cwtl
cwtl
pushf
mov
fwait
mov
xchg
xchg
lret
mov
mov
mov
test
fnsave
sub
andl
mov
mov
pop
es
lahf
in
xorl
aas
lret
scas
add
xchg
repz
mov
sahf
icebp
adc
nop
jnp
cmp
adc
jne
dec
sub
inc
adc
and
fcomps
int
cmp
lock
add
test
sbbb
sub
cmpsl
movsb
dec
jbe
shrb
cmp
xor
imull
adc
jb
mov
add
inc
sbb
test
lahf
or
cltd
lea
push
in
in
or
cmp
in
out
sbb
test
js
lahf
in
cli
jmp
pop
add
inc
mov
mov
sub
sub
or
pop
enter
xor
mov
data16
std
jb
jle
cwtl
orl
popa
out
cwtl
dec
pop
orb
inc
mov
cmp
aas
lcall
subb
cmp
rorl
clc
xchg
mov
pushf
inc
jb
leave
dec
dec
inc
lret
test
jnp
jle
xor
add
sti
xchg
pop
push
cwtl
push
adc
movsl
cli
imul
and
ljmp
popa
jae
aaa
xchg
fcomps
adc
mov
and
push
push
mov
faddp
ja
jo
cwtl
adc
lea
xchg
mov
bound
mov
push
mull
pop
in
adc
adc
sbb
push
push
ja
popf
mov
in
lahf
sub
pushf
or
rcr
mov
aaa
popa
push
sbb
add
pop
sbb
inc
sub
pop
push
lea
shrl
jecxz
lahf
jbe
pop
jns
insb
mov
pop
xchg
pop
dec
mov
movsb
cmp
call
ret
pop
imul
fldcw
imulb
movsb
fsub
daa
loope
sbb
dec
inc
sbb
mov
inc
repz
mov
fnstenv
and
in
jns
int3
xlat
push
xchg
lods
dec
imul
jecxz
gs
ds
inc
sbb
inc
cmc
inc
xchg
mov
bound
movsl
lret
or
mov
jge
jae
notb
jno
dec
jnp
sub
mov
xor
dec
inc
jae
and
pop
cmc
ret
cmp
fs
push
das
in
xchg
nop
fstl
lock
xchg
sbb
xlat
xchg
test
jecxz
mov
jo
ret
sbb
jo
sbb
shlb
pop
out
in
subb
push
mov
xor
cmp
mov
stc
ja
jbe
mov
shll
pop
fs
push
loop
or
xchg
out
out
adcb
shl
and
in
dec
pop
gs
cmp
pop
out
ret
pop
std
xor
pop
out
xor
xor
jno
addl
sub
pop
cmp
xchg
or
fldenv
call
sbb
cmp
in
xor
pop
repz
pop
int
fstps
ja
sub
jle,pt
popf
mov
popf
push
xchg
out
clc
pop
xor
daa
insb
addl
call
movsb
test
and
mov
xchg
add
xchg
jno
das
shlb
cmp
mov
loope
loop
cli
xor
xor
push
mov
ljmp
dec
lahf
mov
neg
push
sbb
xor
push
sar
movsl
mov
mov
xor
lods
mov
data16
aaa
mov
js
iret
hlt
aad
mov
mov
cmp
pop
out
sbb
imul
add
jns
jmp
xchg
dec
mov
js
dec
jmp
push
dec
loope
sub
insb
mov
push
jne
pop
and
xor
or
xchg
rclb
in
inc
fcomps
dec
adc
push
inc
and
pushf
fldl
push
fisubrs
mov
adc
fsts
dec
jo
push
insl
cs
stc
ffreep
or
push
push
lds
insl
pop
lcall
cld
pop
in
leave
mov
notl
pop
loop
aaa
pop
and
sub
push
outsl
in
pop
push
outsb
or
adc
out
int3
sbb
add
sub
iret
push
aaa
xor
mov
pushf
inc
jp
shrb
sub
fwait
mov
xor
out
push
cmp
outsl
hlt
xchg
xor
xor
cs
in
inc
xchg
js
push
and
mov
mov
ss
cmc
xchg
pop
inc
jl
aad
push
push
pop
mov
inc
jmp
cwtl
dec
sub
enter
fs
lret
jge
jmp
mov
cmp
mov
xor
das
les
sub
fsubrs
pop
addr16
in
mov
shll
inc
mov
ljmp
aam
inc
ds
pop
outsb
popf
negl
aad
sub
mov
xorl
aad
push
lods
push
mov
add
sbb
mov
jb
jnp
xor
popa
int
adc
jbe
and
jb
subl
sbb
push
or
lea
ja
mov
cwtl
adc
or
test
das
jae
pop
inc
mov
sbb
sbb
seta
push
movsb
pop
into
fwait
jl
imul
push
scas
mov
filds
push
dec
leave
pop
loopne
aas
mov
push
mov
lock
cs
or
sub
mov
mov
xchg
ljmp
loope
mov
cmp
jne
rolb
test
dec
sub
inc
movsl
mov
das
cmp
repnz
out
lahf
scas
mov
out
jl
js
movl
lcall
push
push
leave
cmp
inc
les
sbb
ud0
dec
cld
add
push
pop
out
test
fdivrl
daa
out
dec
fnsave
les
fildl
jg
xchg
dec
lret
cld
lret
test
push
mov
outsl
jb
jno
ss
out
sti
fisttpll
lcall
cli
inc
push
imul
xchg
lea
call
mov
test
pushf
test
iret
adcb
les
pop
fistps
scas
mulps
cmc
sub
xchg
pop
sub
dec
jne
add
add
mov
mov
shr
call
inc
lcall
cwtl
sub
adc
push
mov
mov
movsl
addr16
xor
jge
stos
ljmp
enter
dec
adc
xor
fmull
jmp
pop
roll
movsb
std
cmp
jns
lock
push
test
xor
test
xor
cmp
sti
in
sbb
loop
fs
movsb
pop
fbld
cmp
xor
iret
sub
push
rol
out
notb
and
orb
mov
mov
in
cs
dec
add
inc
insl
jns
dec
js
jg
dec
jne
popf
fbstp
adc
jmp
or
jbe
pop
mov
or
lods
scas
ret
lods
in
or
scas
dec
xor
mov
xchg
push
push
xor
mov
sbb
gs
hlt
repz
xchg
xor
or
ret
push
pop
jnp
sbb
ljmp
xor
cld
mov
add
ffreep
sub
test
add
scas
xor
mov
filds
mov
shlb
and
pusha
xor
enter
shlb
into
pop
mov
lds
cs
stc
fbstp
sbb
adc
stc
jmp
adc
in
pop
scas
fnstcw
pop
test
cmp
popf
std
jp
lret
lods
jb
push
prefetchw
sub
xchg
mov
dec
pop
push
test
add
fisttps
sub
arpl
cwtl
dec
mov
inc
repnz
imul
pop
xchg
xchg
adc
mov
or
aas
xchg
jne
inc
fstl
jp
cmpsb
enter
fildl
jmp
jmp
mov
je
cmp
xor
loop
lock
mov
ss
cs
add
mov
pop
or
sahf
mov
or
pop
lea
insb
or
loopne
test
push
mov
and
pop
adc
mov
xchg
dec
shrl
xchg
jg
xchg
adc
fisubl
add
mov
in
xchg
test
aam
adc
xchg
mov
repz
pop
or
xchg
js
cld
cmp
jns
je
data16
add
inc
jbe
xor
es
add
ficoml
add
adc
cmpsb
sbb
mov
jbe
mov
mov
cld
rep
adc
nop
lds
pusha
nop
into
mov
pop
and
addb
sbb
fsubr
stc
and
pop
daa
pop
nop
push
inc
xchg
movsl
clc
pushf
sbbl
jmp
lret
push
xchg
push
pop
je
mov
out
mov
and
enter
sub
cmc
sub
lahf
jmp
sub
xchg
call
cmp
cs
cld
sbb
cmp
adc
insl
cmc
outsb
mov
lcall
mov
imul
push
sbb
shll
mov
dec
mov
add
aas
mov
sbb
fwait
pop
adc
mov
sahf
fnsave
les
inc
out
xor
outsl
and
adc
sbb
mov
loopne
je
dec
hlt
cmp
mov
pusha
jae
into
xchg
aas
das
jmp
mov
inc
pop
cltd
or
sbb
cmp
xchg
xchg
mov
adc
xchg
jae
pop
rorb
enter
add
dec
sub
cmp
mov
sub
mov
dec
fcom
lods
sti
bound
std
gs
repz
addr16
mov
pop
cmp
shll
xorl
xchg
or
test
add
and
mov
cmc
popf
jp
rclb
push
repnz
pop
mov
ja
ljmp
lea
ficomps
push
lea
and
add
lods
push
push
in
sbb
ret
sbb
testl
idivl
pop
xchg
sub
xor
mov
cmp
dec
rorl
je
push
clc
in
hlt
out
mov
sbb
or
pop
and
aam
lea
ret
adc
mov
sti
push
dec
sbb
push
push
pop
test
iret
pusha
xlat
xlat
push
mov
push
ja
xchg
fdivrp
stc
ret
outsl
add
jno
mov
negl
inc
icebp
dec
orl
fisttps
repz
jecxz
popf
and
clc
adc
cmp
cwtl
inc
ja
cmp
cmp
mov
mov
out
dec
bound
mov
leave
ret
je
cs
mov
adc
and
adc
call
jae
in
cmpsl
push
or
push
sbb
inc
cmp
and
mov
fcompl
mov
add
das
mov
xor
pop
loop
pop
push
xor
movsb
rorb
mov
outsb
jnp
dec
pop
subb
push
xchg
jbe
jbe
cmpsl
fadd
outsl
hlt
mov
cmc
mov
xor
and
push
fsubs
push
aad
jp
bnd
rcl
and
mov
aad
lock
inc
pop
std
outsb
jne
lea
test
add
xchg
aaa
cmp
shlb
fidivrs
jnp
nop
sub
cmc
add
pop
pop
pop
pusha
outsl
lret
xchg
scas
sbb
hlt
sbb
inc
out
lods
movsl
bound
fidivs
incb
fneni(8087
dec
adc
pop
xchg
in
into
xchg
or
xor
push
inc
mov
and
jnp
rcr
popa
test
push
cmp
das
enter
imul
jo
iret
sbb
ja
frstor
jo
inc
es
and
rolb
out
aad
mov
fildll
or
std
shrb
push
mov
push
movsb
dec
cmp
pop
cltd
incl
mov
mov
icebp
ss
pop
adc
pop
test
mov
sbb
jge
and
adcb
insb
xchg
fstl
rcrb
movsl
shlb
sub
and
jo
repz
mov
mov
mov
es
in
adc
mov
orl
and
fisttpll
adc
or
or
in
test
sub
xor
bound
pop
repz
cmp
mov
gs
adcl
lahf
fsubs
pop
in
push
test
loopne
xchg
adc
sbb
mov
mov
lods
sarb
or
xchg
mov
jnp
cld
cltd
and
jl
mov
es
xchg
ljmp
mov
outsb
aas
lds
insl
fsts
dec
rol
add
mov
or
jns
in
add
test
xchg
in
test
xchg
gs
adc
pop
or
clc
test
xor
inc
out
xchg
add
xorb
insl
xorb
mov
icebp
add
cmpsb
stos
jl
add
add
imul
sbb
insb
xchg
adc
test
sbb
pop
jp
cmp
push
aas
pop
cli
cmc
outsb
cmp
xor
inc
cmp
movsb
out
adc
xchg
jno
loop
negl
aas
pop
andl
scas
jecxz
insb
jp
sti
cmc
push
mov
mov
addr16
iret
imull
out
mov
adc
inc
mov
xchg
pop
imull
dec
sahf
mov
bound
movsl
cmp
xor
jno
cmp
cmp
xchg
outsl
sub
aaa
fs
lret
push
push
cmpsb
gs
pop
pop
push
mov
cmp
int3
test
sub
int3
leave
pop
cmp
test
pop
dec
xchg
lea
push
pause
cmp
cld
or
test
icebp
inc
ja
jg
inc
cmpsl
and
push
faddl
jno
adc
add
mov
pop
jo
mov
pusha
shll
pushf
fsubs
leave
loop
lods
xchg
loopne
adc
or
frstor
mov
iret
outsl
jmp
cmp
cs
divl
inc
aas
lahf
sub
cmp
cmpsb
cmp
into
js
or
aas
xor
nop
cld
sahf
ja
fidivs
cmc
sbb
ljmp
lret
inc
out
push
ja
mov
xor
sti
ljmp
repnz
jno
inc
xchg
jbe
mov
cmpsb
push
xchg
sar
and
jo
pop
lret
cltd
dec
jmp
cmpsb
fildl
and
cmp
cwtl
imul
out
loop
hlt
cmp
je
clc
jns
pop
hlt
sbb
cli
mov
les
cmp
mov
in
pop
popa
aas
and
addr16
ja
xchg
dec
sub
xchg
cld
or
lods
lock
inc
fildl
mov
adc
dec
mov
sahf
xchg
mov
xor
scas
sbb
stc
lods
dec
das
gs
decl
repz
ret
add
std
mov
shrb
xchg
xlat
popa
cli
roll
in
cs
mov
pushf
sahf
mov
repnz
mov
ss
xchg
fmull
adc
cmp
mov
int
xchg
dec
scas
xorb
das
add
pop
jl
sbb
fldcw
std
jecxz
adc
jo
test
or
jmp
or
jno
dec
cmpsl
cli
sbb
and
fwait
pop
test
ljmp
push
inc
xor
mov
add
pop
pop
push
leave
ror
dec
pop
addb
aad
xor
xchg
xor
xchg
shlb
dec
mov
mov
sahf
call
pop
aam
iret
stos
repnz
add
mov
gs
cmp
lds
mov
into
scas
daa
cmpsb
inc
out
daa
mov
loop
lret
cmp
mov
push
xchg
or
popa
cmp
push
inc
jbe
lea
and
dec
inc
sbb
push
jl
cmp
pop
fidivrs
lock
cwtl
arpl
dec
mov
je
mov
js,pn
push
push
xor
push
inc
lcall
mov
cmp
pop
rclb
pop
dec
aaa
popa
scas
mov
mov
pop
lahf
addb
notb
daa
jp
imul
adcb
jae
sbb
cmpsl
mov
and
jns
cli
xor
jecxz
mov
xor
ds
int
scas
rcll
xor
mov
ficompl
adc
sub
xor
pop
outsb
push
sahf
pop
jb
lods
mov
fucomi
shlb
outsl
inc
jp
xlat
rcrl
add
pop
cmc
movsl
pop
inc
nop
push
arpl
jle
pushf
push
fwait
stc
test
lea
mov
hlt
inc
adc
pusha
mov
cmp
clc
test
ss
pop
and
pop
lcall
inc
pop
hlt
fsubrl
andb
push
xchg
ret
or
test
in
fwait
push
int3
xchg
enter
mov
ss
sbb
and
jo
and
jge
lret
and
icebp
lret
mov
ret
cmp
cmpsb
inc
daa
mov
push
cmp
int3
cmp
filds
stos
push
int3
pusha
jp
ftst
mov
cmp
in
adc
push
scas
in
imul
cmp
xchg
sub
sti
call
xchg
insb
xchg
lods
or
nop
outsb
inc
mov
push
adc
inc
lahf
pop
in
test
mov
mov
jge
pop
add
xchg
xor
jne
andb
inc
fs
stc
sub
and
pop
cld
lret
pop
int
mov
rol
fisttps
fisubrs
sbb
pop
sub
orl
adc
loopne
stos
ljmp
sahf
addb
mov
pop
pop
adc
mov
mov
mov
jle
pushf
sub
and
mov
in
cmp
iret
in
in
test
lret
test
aaa
push
movsb
inc
fisttps
orb
xor
push
push
ret
add
push
fst
dec
enter
popf
scas
fdivrs
icebp
xor
sub
xchg
std
mov
es
fcmovnbe
mov
mov
xchg
adc
fdivrs
ljmp
cmpsl
shrb
movsl
mov
repnz
xchg
sub
movsl
mov
jmp
mov
pop
gs
or
push
mov
jo
lcall
adc
jle
ljmp
jbe
les
imul
lahf
mov
mov
inc
push
leave
dec
inc
faddl
iret
jg
test
inc
jge
int3
and
or
pop
sbb
out
cli
divl
xchg
pop
outsb
cmp
fists
push
jb
mov
inc
sub
jnp
js
cmp
push
adc
mov
cwtl
cmp
jmp
mov
aas
pushf
or
mov
mov
or
add
push
jmp
xlat
or
rcrb
cli
xchg
lret
fistpll
cmp
cmp
fnstsw
mov
cmc
xchg
xchg
inc
cmpsl
bound
xchg
mov
and
xchg
lds
outsl
insl
sbb
jp
out
inc
and
std
mov
cmpsb
int
push
bound
adc
ljmpw
mov
clc
mov
add
sbb
popf
adc
mov
sbb
loop
minps
mov
and
cmpsl
mov
add
in
cmp
pusha
adc
hlt
imul
outsl
sub
inc
xor
adc
es
or
pusha
mov
adc
int3
push
in
pop
in
shrb
out
add
sahf
adc
push
lods
cmp
mov
inc
mov
sub
or
push
or
cs
jno
jmp
cmpsb
inc
shlb
jns
pop
add
mov
fwait
cld
cmpl
sahf
mov
push
add
fwait
push
dec
sbb
inc
std
and
mov
mov
mov
mov
movsl
ret
or
cmpsb
adc
sbb
arpl
sbb
fbstp
frstor
sub
jp
or
stos
xchg
insb
push
in
je
push
rcl
lods
add
stos
add
sub
push
aaa
fiaddl
pop
out
icebp
cmp
dec
incb
lcall
out
push
dec
cmp
push
pop
mov
mov
and
bound
inc
mov
rclb
mov
mov
lret
mov
fmul
negl
lods
cmp
mov
xrelease
mov
ja
mov
jecxz
ljmp
pop
mov
jne
adc
scas
cld
pop
outsl
loope
dec
iret
imul
xor
ja
or
into
cwtl
jg
inc
scas
sbb
or
dec
mov
rorl
mov
mov
in
int3
jmp
mov
vmovdqu
js
ss
scas
cmp
cmp
sbb
sub
push
in
fwait
std
out
inc
dec
sub
xchg
lcall
or
jecxz
dec
shr
popa
mov
jmp
mov
inc
inc
test
sahf
mov
stos
in
outsl
mov
xchg
dec
movsb
fdiv
ljmp
in
mov
rorb
inc
test
cld
xchg
jnp
or
stos
js
push
xor
sub
lds
pop
fucom
push
cwtl
or
cli
orl
lahf
imul
lea
push
inc
pop
inc
lock
fstpt
inc
lcall
jge
xor
aas
add
and
lods
push
leave
stc
dec
add
hlt
or
xchg
push
cmc
fildl
js
je
push
shl
push
mov
lock
mov
dec
cmp
sahf
sub
gs
shll
mov
or
icebp
je
cltd
pushf
fs
fistl
fnsave
sbb
jge
mov
andb
icebp
cmpsb
or
fisubrl
ds
jo
cmp
mov
xchg
ret
dec
jecxz
sub
nop
mov
xorb
testl
sbb
push
and
icebp
shrl
lcall
dec
insl
inc
inc
imul
mov
stos
sbb
fdivl
fstl
pop
cmpl
add
ss
sub
or
pop
mov
inc
inc
or
xor
mov
test
inc
pop
jmp
cmpsb
repz
xchg
lret
fistl
jbe
sbb
shr
jl,pn
sbb
lret
sub
sub
push
orl
xor
inc
fs
mov
add
ret
loope
sbb
push
out
outsb
add
and
xor
frndint
mov
sbb
stos
fistpll
mov
fidivl
push
pushl
bound
or
push
popa
push
xchg
sbb
test
and
daa
ja
adc
in
xchg
shrb
cmpsb
push
jne
sub
rcll
loopne
insl
mov
jne
dec
cltd
out
push
test
int3
push
adc
push
aam
pop
sbb
jbe
mov
push
fucomp
dec
cmp
imul
cmp
jns
sub
mov
ss
pop
call
mov
mov
fldenv
mov
dec
ja
xchg
mov
mov
push
sub
aad
cmp
clc
cwtl
sub
xchg
pushf
add
dec
jae
es
js
leave
jo
pop
dec
jns
jo
sbb
jg
es
mov
or
sbb
pusha
call
scas
cmp
add
into
out
adc
add
xor
and
leave
fs
lock
fidivs
aaa
jle
sub
movsl
popa
mov
jns
das
mov
push
xor
int3
icebp
sbb
outsb
lcall
stos
lea
xchg
pop
andl
adc
shl
sysexit
inc
sub
bound
pop
mov
sub
mov
xchg
stc
lret
push
imul
cli
cld
arpl
jb
stos
mov
xor
lahf
enter
in
sbb
idivb
scas
ficoms
leave
jp
cltd
fs
fldt
sbb
in
xor
mov
adc
fisttpll
in
sbb
xchg
dec
insb
jo
xchg
out
aas
pop
mov
jno
lock
inc
sub
xor
aas
fldcw
mov
push
fbstp
and
and
imul
pushf
mov
call
pusha
or
push
xchg
addr16
pop
cmpsl
jbe
dec
push
aam
mov
or
push
and
xchg
jp
lar
out
jne
in
stc
stos
pop
lds
fisubrl
scas
lds
push
mov
stc
xchg
fcmovnu
push
push
mov
jb
sub
enter
mov
lds
dec
or
mov
andl
cmp
lret
mov
rcll
test
jecxz
dec
test
test
gs
jg
adcb
test
fnstcw
stc
ds
inc
cmp
aam
lret
fistpl
int
aad
xchg
cmp
shlb
push
js
mov
xor
sub
and
rclb
test
addb
pop
cltd
push
sub
fdivp
sahf
xchg
or
popf
dec
mov
adc
adc
stos
add
inc
stc
mov
test
dec
adc
daa
into
dec
test
das
inc
cs
jp
mov
std
loopne
or
shlb
mov
adc
mov
mov
adc
jg
xchg
xor
add
imul
sbb
in
mov
packsswb
add
dec
sbb
dec
mov
cmp
jle
out
push
mov
lahf
aas
es
dec
and
pop
mov
or
js
mov
cltd
scas
jl
adc
dec
jne,pt
mov
or
inc
mov
mov
mov
and
push
loopne
xchg
mov
aad
sbb
aad
xchg
pop
jecxz
mov
pop
shll
or
adc
dec
stos
push
and
pop
movsl
xor
neg
mov
clc
adc
or
jae
dec
call
mov
push
rcrl
adc
mov
push
jo
in
jmp
mov
dec
push
fwait
pushf
cmpsl
bound
push
mov
leave
pop
jl
scas
loope
mov
mov
out
add
stos
jp
in
mov
push
loopne
out
ret
das
out
jb
cmp
lock
pusha
test
jo
insl
movsb
test
lock
into
cmpsb
sbb
dec
mov
pop
push
jge
mov
imul
cs
dec
cwtl
loop
and
cmpb
ds
cmpsb
mov
pop
cmp
stc
xchg
test
repz
and
pusha
inc
gs
adc
daa
cmp
mov
jge
jl
insl
lock
adcl
scas
xchg
mov
dec
xchg
leave
insb
fwait
inc
mull
mov
fcomp
xchg
inc
cmp
inc
sbb
stos
or
cmp
cmpsb
xchg
ja
jp
push
neg
cmp
pop
addr16
dec
vprotq
aas
add
roll
mov
dec
push
pop
int
pop
jns
jmp
out
jae
call
lods
xorl
aad
inc
mov
cmp
aas
jne
pop
xor
or
in
jle
hlt
aas
inc
adcl
int3
fildll
mov
test
xchg
push
in
movl
push
sbb
xor
pop
mov
ljmp
adc
xlat
jbe
push
das
fs
jbe
fs
fs
ficomps
add
mov
in
imul
lcall
in
dec
in
subl
mov
push
mov
sbb
out
fucompp
mov
in
fsub
ret
sbb
out
shlb
imul
dec
adc
in
cmp
inc
call
inc
adc
mov
in
ljmp
add
insl
scas
sbb
push
mov
int3
add
pop
arpl
pushaw
por
add
mov
fwait
xchg
add
roll
cmp
xor
mov
ret
sbb
push
fsubr
sbbb
jns
sarl
out
cmp
jmp
insb
lods
mov
dec
mov
add
int
push
in
in
cmc
push
inc
push
push
lea
fildl
pop
xchg
test
sbb
imul
mov
push
dec
xchg
mov
cmp
mov
jge
mov
xlat
das
sub
and
pop
iret
shlb
pop
inc
gs
mov
pop
adc
add
pop
mov
sti
insl
adc
pop
daa
sbb
mov
imul
push
lret
pushf
inc
sbb
xor
sub
xchg
daa
cwtl
ss
cmpsb
jmp
cli
push
les
in
mov
in
cltd
mov
xchg
sub
or
imul
rol
xor
sbb
mov
xlat
repz
add
movsb
xor
enter
adc
mov
cmp
stc
leave
mov
pop
and
repz
loopne
xor
shrl
adc
ret
les
movsl
out
mov
add
bswap
sti
fiaddl
jmp
dec
subl
or
test
loop
out
popa
scas
cmp
dec
movsb
mov
les
mov
in
jae
outsl
mov
es
and
je
je
xor
lods
mov
les
sub
or
inc
pop
pop
test
xchg
js
xor
bound
xor
jg
mov
and
cwtl
inc
adc
pop
and
sbb
cmc
stos
push
dec
xlat
shl
cs
cld
push
jle
cltd
or
std
pop
mov
aaa
imul
fcomi
or
js
add
push
pop
and
and
lea
mov
nop
aaa
xchg
fs
sub
rcl
js
cmc
push
jle
pop
shr
shll
movq
add
sbb
sbb
jb
xor
jnp
test
test
adc
jl
add
adc
loopne
xchg
arpl
loop
inc
cltd
into
out
push
inc
iret
cmp
jle
out
sub
add
mov
mov
mov
sbb
outsb
mov
cmp
lea
mov
xlat
cmpsl
add
movsb
je
push
mov
and
or
mov
push
xlat
inc
sub
xchg
movsl
arpl
mov
cwtl
dec
cli
fiadds
jl
sti
and
imul
imul
jbe
dec
jae
mov
xchg
ja
lods
orl
adc
imul
pop
scas
dec
push
sarb
fldt
loope
mov
sbb
icebp
xchg
dec
pop
adc
push
rcr
xor
push
lods
pushf
add
rolb
or
jno
sbb
in
cmpsl
and
fisttpl
pop
cld
loope
rcr
aas
shll
dec
cmpsb
dec
xchg
add
int3
rorl
adc
imul
and
outsb
add
fstpt
add
sbb
jae
add
xor
pop
rol
pop
dec
push
insb
sti
inc
inc
shll
jo
mov
in
pop
mov
jp
decb
repnz
addb
out
cmpsl
pop
hlt
dec
cmp
xchg
fiaddl
mov
bound
lods
add
cmp
jge
outsb
imul
pop
pushf
add
movsl
adc
pop
add
loop
mov
lcall
sarb
jns
push
xor
jb
and
push
jp
jo
cmpsl
fwait
popf
ss
insb
xchg
add
icebp
ret
repnz
adc
pop
inc
xor
cs
mov
xor
andb
gs
mov
sub
sub
mov
adc
out
sub
lock
movsb
lds
pop
cmp
movsb
pushf
out
and
adc
jecxz
faddl
test
jae
fwait
popa
and
push
pop
popf
cli
mov
push
mov
pop
xchg
add
test
sbb
pcmpeqw
ss
les
stos
cltd
fnstcw
addr16
stc
subb
lock
loopne
mov
lret
inc
jl
lret
test
cld
mov
orl
cmp
shll
dec
das
mov
aas
sbb
mov
xchg
inc
mov
lea
ret
or
xor
lods
popf
mov
cs
aas
jg
cmp
dec
insb
mulb
sub
xlat
cmc
xchg
or
sbb
stos
cmpsl
pop
cld
js
cs
fs
cmp
pop
sarl
lock
or
pop
stos
lcall
ss
inc
xor
in
xor
mov
lds
push
push
add
movsb
vmaxps
mov
leave
std
fucomip
lcall
arpl
xchg
or
adc
stos
jb
sub
stos
jb
push
mov
inc
cmp
and
inc
not
push
xchg
mov
decl
cld
jecxz
pop
jns
and
mov
dec
imul
xchg
call
dec
rcll
shlb
je
std
das
movsb
iret
push
sub
mov
addr16
fs
add
stc
aaa
add
lret
sub
in
pop
push
fsubrl
push
dec
xor
lea
dec
jo
movsb
pop
test
sub
lahf
gs
dec
sahf
rep
daa
jns
push
push
js
add
test
add
loope
sbb
stos
fwait
test
inc
pushf
fwait
shl
sbb
jbe
sub
mov
imul
xchg
push
insb
movsb
loop
sub
scas
and
push
jbe
cmp
mov
iret
jecxz
push
sahf
push
fstpt
add
lods
out
popa
rcrl
out
push
ret
pop
adc
cmp
movsb
dec
xchg
pop
push
scas
adc
sub
pop
cmp
movb
cwtl
pop
rol
stos
divl
mov
add
sarl
mov
aad
xchg
popa
cmpl
repz
sub
xor
xor
xor
cmp
mov
sub
push
scas
movsb
sti
pop
cmpl
lret
repnz
inc
xor
pop
lds
int
and
adcl
rclb
and
fildl
xchg
into
mov
daa
sbb
shlb
sub
cs
mov
ds
mov
fs
mov
sbb
cli
inc
inc
pop
lcall
jmp
jle
cmc
scas
in
mov
fcmovnb
mov
cmp
adc
jns
or
clc
mov
push
mov
ret
in
pusha
aaa
sub
xor
fdivr
and
adc
in
inc
pop
cmp
cmpsb
hlt
icebp
mov
jg
ffreep
add
mov
inc
test
cmpsb
push
inc
pop
outsb
data16
or
push
or
test
fs
shr
push
push
lcall
out
jne
loope
outsb
ficompl
adc
pop
mov
div
into
popa
jo
repnz
push
mov
std
add
and
enter
sti
dec
rcll
je
stos
popf
sbb
mov
xchg
cli
or
xchg
push
mov
xor
movsl
iret
mov
push
xchg
je
or
mov
mov
inc
nop
arpl
ret
cmp
mov
data16
mov
icebp
outsl
sub
icebp
repnz
adc
jg
js
call
push
xchg
and
in
mov
xor
repz
test
mov
jmp
lock
mov
push
gs
enter
xchg
bnd
loopne
jo
pop
nop
movsb
lods
clc
bound
mov
ss
leave
sub
mov
pop
mov
inc
in
xchg
ljmp
loope
ret
xchg
ret
jo
aad
popf
dec
int3
popf
and
rcrb
cltd
inc
dec
jp
add
mov
cmp
lock
icebp
cmp
hlt
out
js
bnd
mull
jo
xor
mov
adc
jl
xchg
repnz
rcll
aas
push
pushf
out
dec
mov
into
ficompl
lret
jb
lcall
push
inc
push
inc
and
or
inc
mov
adc
dec
flds
aaa
lcall
sub
jle
loop
icebp
xchg
jo
ret
fwait
pop
mov
pop
jns
push
and
imul
insb
add
mov
push
cltd
xor
jle
std
push
das
in
pushl
popa
fdivp
dec
jp
scas
test
jmp
or
js
test
sub
repz
mov
push
or
into
xchg
pusha
sub
pop
fs
adc
jmp
cmc
mov
lock
pop
movsl
jp
push
cs
std
lcall
jmp
repnz
pushl
dec
jb
dec
xchg
mov
movsb
hlt
pop
lea
in
frstor
int
or
dec
push
xor
pop
mov
sub
push
int
push
rorl
mov
sbb
fwait
push
jl
adc
cmp
jno
mov
icebp
add
inc
enter
lods
rorb
fldt
pop
stos
in
mov
push
cmp
incl
test
xor
push
dec
pop
out
jg
arpl
inc
cli
xchg
mov
hlt
pop
mov
inc
lods
jno
add
push
mov
repnz
push
popa
ja
leave
out
sub
popf
xchg
adc
bound
inc
paddusb
mov
xchg
sub
scas
xchg
xchg
mov
lret
testl
bound
xchg
jmp
shlb
mov
adc
test
int
inc
sti
jbe
lret
aas
pop
jl
push
mov
sahf
lahf
add
add
cmp
mov
sbb
or
push
jae
sbb
out
out
and
popa
sbbb
outsb
push
lea
daa
adc
clts
int
sub
adc
jge
mov
push
shlb
icebp
sbb
pop
ljmp
cmpsl
gs
cmc
sbb
gs
or
inc
mov
pop
jne
dec
mov
push
adc
ret
mov
les
fdivrp
xchg
mov
out
inc
mov
out
in
pop
push
int3
add
xor
insl
stc
pusha
int3
dec
push
rcll
or
inc
mov
xchg
xchg
in
and
dec
je
xlat
cmp
push
xchg
fwait
es
lods
push
xchg
sbb
cs
lods
fstl
push
jle
jne
push
hlt
push
fistpll
push
xlat
repz
jae
pop
adc
imul
lret
or
pop
sbbl
mov
xchg
xor
inc
ss
insl
idiv
sarb
jnp
mov
cmc
xor
in
pop
adc
std
push
adc
mov
aad
jo
in
xor
push
call
data16
mov
nop
pop
dec
add
inc
aam
fs
fbstp
sti
mov
xchg
pusha
pop
jnp
mov
push
test
out
mov
mov
ret
xchg
and
and
ljmp
add
andl
ds
mov
or
in
inc
jb
hlt
aaa
xchg
dec
outsb
xor
les
fucom
inc
fwait
out
or
out
mov
xchg
or
inc
or
sbb
jp
mov
cmp
int3
mov
daa
ret
data16
jg
rcl
push
xor
out
push
cli
mov
out
iret
xor
xchg
and
xlat
sbb
mov
aas
ss
push
push
out
adc
or
jae
arpl
sub
dec
xor
adc
fs
out
push
pop
das
mov
pop
xor
push
cmc
dec
xchg
out
sub
push
jnp
jbe
mov
inc
pop
in
rorb
jmp
or
lahf
in
cmpb
push
pushf
mov
lcall
pusha
movsb
mov
stos
incl
packssdw
and
or
fisubrl
jmp
shlb
fisubs
jno
xor
mov
scas
lds
fwait
lcall
sub
cltd
mov
rol
mov
lds
hlt
xor
imul
jo
sub
or
loopne
loope
rorl
jne
clc
sbb
push
jae
call
adc
sub
pop
xchg
iret
mov
fstl
add
aam
lods
sbb
ja
lods
xor
shrl
jg
test
movsb
push
mov
sub
mov
imul
arpl
bound
cmp
mov
mov
aaa
movsb
sub
sahf
push
into
call
filds
lret
and
mov
push
lcall
xchg
mov
or
mov
mov
sbb
enter
popf
push
sub
mov
mov
insl
cli
jne
add
pop
lcall
jb
or
sub
mov
sbb
push
cmpb
mov
stc
cmpsl
xchg
nop
test
movsl
repnz
stc
fldl
push
jecxz
jecxz
dec
xchg
sahf
mov
stos
loopne
push
ret
outsl
push
xchg
mov
xchg
addr16
scas
cmp
aam
sbb
stc
je
stc
std
dec
sbb
cmpsb
cmp
lods
fs
insl
mov
std
hlt
jl
inc
movl
out
insl
add
faddl
mov
in
push
lcall
mov
pcmpeqb
outsl
lret
mov
cmc
mov
xlat
dec
sbb
xchg
push
lock
push
and
jns
push
aaa
bound
fiadds
and
push
mull
or
adc
jl
or
sub
addr16
aad
add
pop
outsb
jne
out
gs
push
outsb
mov
test
fwait
clc
pop
dec
ja
cmpsb
adc
mov
arpl
sub
lods
movsb
sbb
stc
cs
add
ret
test
sti
bound
notb
imul
loopne
push
stos
shll
mov
add
divb
jecxz
cmpl
out
mov
sbb
or
add
sbb
push
mov
outsb
pusha
frstor
mov
out
scas
stos
in
and
jp
ljmp
jecxz
pop
inc
lret
cmpsb
rorb
mov
les
cmp
std
dec
xor
dec
test
fcmove
sbb
inc
pop
dec
and
add
sub
sahf
xchg
pop
dec
add
inc
fwait
fwait
cmp
adc
out
jns
push
data16
mov
lods
xchg
and
imull
add
jg
jb
icebp
es
xchg
bound
mov
cmp
aas
mov
or
sub
cmc
ja
inc
push
cmpsl
or
sub
push
shll
in
push
sbb
xchg
scas
mov
inc
adc
jmp
cmp
or
lock
cld
mov
jg
or
jae
iret
inc
mov
in
out
push
shlb
dec
lcall
mov
jo
addl
bound
jg
stos
adc
fwait
mov
popf
mov
ja
ret
and
jle
scas
inc
and
int
add
gs
lret
pushf
dec
pop
mov
icebp
cli
mov
sbb
rcrl
test
jge
mov
xor
xchg
lods
sbb
sahf
popa
pop
scas
and
out
aad
dec
popa
lret
or
mov
jmp
or
je
inc
lock
js
out
out
jbe
mov
pop
inc
pop
lds
add
mov
inc
and
jg
bound
push
cmp
cmp
xchg
out
imul
fdivrp
jg
push
aaa
hlt
xchg
jns
out
and
movsb
ret
cmc
add
xchg
lock
pop
jmp
lock
cs
adc
bound
xor
call
dec
aas
out
xchg
loope
insb
mov
fldenv
and
pop
pop
aas
xchg
mov
dec
test
daa
sbb
push
cmpl
mov
or
cld
inc
insl
pop
or
scas
scas
xchg
sahf
cld
enter
sti
arpl
push
xchg
pop
cmp
xchg
jno
insl
cmp
xor
lret
jle
loopne
clc
fwait
inc
into
jg
test
insb
mov
jmp
cli
and
sbb
test
addb
call
mov
data16
mov
xchg
inc
sub
jno
adc
scas
addb
adc
icebp
sub
ja
pusha
push
inc
cmp
inc
jp
mov
iret
addr16
adc
lret
lds
aaa
shll
dec
cwtl
dec
rcr
fcom
lahf
aas
cmp
in
ret
mov
repnz
scas
pop
inc
sbb
iret
inc
jb
pop
stos
mov
cwtl
out
mov
sbbl
sbb
push
mov
cmp
add
mov
std
sahf
xchg
rolb
xchg
mov
rcrb
sarl
sub
loopne
push
pop
lods
popf
adc
hlt
jo
and
cmp
call
add
outsb
xchg
iret
mov
sbb
inc
mov
cmp
inc
jg
inc
outsl
add
and
xchg
cmpsl
ret
sbb
sbb
test
xor
jns
and
aaa
mov
sti
jae
mov
cmp
out
xor
lods
jb
and
pop
pushf
sub
jmp
mov
xchg
pop
aaa
in
aas
fidivs
mov
xchg
subb
clc
adc
sbb
jns
push
test
inc
push
and
adc
out
fldcw
cmp
out
daa
inc
incl
call
cmpsb
jecxz
push
cmp
add
add
pop
mov
fstl
pop
rorb
repz
push
arpl
pop
mov
iret
pop
repz
sub
sbb
notl
scas
ljmp
mov
sbb
movsl
pop
ja
or
add
pop
fists
sub
cmc
cmp
xor
jns
lock
out
sbb
packuswb
lea
test
aad
xchg
enter
test
inc
shlb
dec
aad
mov
mov
push
jo
adc
pop
fldt
mov
das
inc
adc
xor
rorb
imul
mov
imul
lea
repz
inc
add
push
or
dec
divl
stos
rorb
in
fsts
xchg
sbb
inc
sub
add
xchg
mov
rorb
jne
dec
sti
sbb
int
aam
ljmp
xchg
and
dec
sarb
pop
ds
je
or
sbb
pop
call
and
fstpt
shll
dec
push
shll
shrl
dec
or
gs
or
push
push
sbb
push
fs
add
mov
add
je
xor
loop
and
adcb
mov
and
cs
loope
test
mov
pop
xlat
cwtl
enter
add
xor
jb
xchg
incl
fnstenv
movsb
insb
sub
stos
daa
pop
lret
pop
cmp
enter
sub
xor
add
adc
dec
sbb
subb
lahf
jl
xchg
data16
ficoms
mov
mov
imul
sub
add
inc
fcomps
jecxz
xchg
add
inc
cmc
aaa
ds
in
js
ja
sbb
xchg
inc
and
cmpl
mov
mov
clc
mov
imul
stos
xchg
imul
cmp
pop
or
mov
sbb
neg
leave
rorb
dec
or
movsl
push
mov
lods
bound
add
mov
xchg
call
adc
test
shrl
in
cmp
xor
jb
mov
dec
push
inc
lret
movb
mov
roll
cli
xchg
fs
out
jge
mov
leave
cld
mov
lcall
jecxz
mov
jnp
in
and
out
pop
movsl
cld
mov
stc
push
outsb
ret
mov
dec
adc
xor
xlat
push
sbb
loopne
mov
negl
mov
data16
ja
sub
aad
jecxz
cwtl
jbe
jb
inc
sub
or
jp
aam
movsb
cmpb
iret
enter
ret
lods
mov
or
loop
daa
lock
sub
fimull
dec
decl
inc
cmpsl
mov
jae
add
daa
inc
mulb
jmp
sbb
in
jne
mov
lods
sarl
mov
icebp
mov
scas
sarl
xchg
in
movsl
popl
xchg
in
xchg
in
adc
add
sbb
pop
pop
mov
shll
push
dec
push
imul
sub
xchg
lock
sub
add
mov
sbb
cmpsb
push
mov
pop
mov
jmp
mov
test
pop
mov
and
add
divl
mov
rorb
out
scas
pop
inc
sar
push
fwait
cltd
sbb
mov
fwait
mov
sbb
xchg
test
or
fimuls
mov
dec
insb
mov
popa
inc
push
or
cmpsb
push
shll
jmp
jb
mov
ss
push
dec
testl
mov
add
jmp
test
cli
into
jnp
mov
lret
inc
or
loopne
pop
jg
cmp
inc
add
inc
aas
add
xlat
adc
xchg
adc
inc
dec
outsl
shrl
outsb
fs
jecxz
and
in
or
inc
xchg
inc
setnp
sbbb
mov
ficoms
ds
dec
sub
incb
xchg
cli
jb
mov
dec
push
jl
mov
xor
pop
pop
filds
iret
push
cs
fwait
std
addb
loope
jmp
mov
hlt
mov
pop
lret
movsb
adc
sti
xchg
cwtl
add
shll
test
outsl
mov
add
cmp
repz
cmp
cmc
cmp
fisubl
dec
mov
mov
jb
rcrb
out
jne
sub
cmp
sbb
imul
or
pushf
stc
cmpsb
or
lods
cltd
punpckhdq
mov
int
sbb
sahf
mov
push
addr16
mov
mov
mov
cs
cld
mov
icebp
nop
ss
fstps
push
lods
or
inc
add
mov
inc
mov
sub
enter
and
push
sub
rol
inc
mov
mov
mov
add
aam
test
cwtl
mov
or
mov
dec
mov
scas
dec
push
bound
mov
shrb
ja
push
pop
pop
pop
out
stos
jl
mov
rcrl
pop
cmp
push
inc
push
xchg
lea
xor
or
cmpsb
push
add
push
xchg
popf
scas
or
fmuls
mov
int3
cmp
cmc
jg
add
inc
mov
fimuls
nop
push
into
and
ds
xchg
push
dec
shll
xchg
shlb
scas
in
cmp
adc
jecxz
pop
stc
gs
decb
je
cmp
ret
cmpsl
jl
xor
cld
or
xor
mov
stc
leave
pop
cmp
xchg
pop
jl
bound
inc
subb
pop
mov
aam
movb
cmp
dec
jbe
leave
mov
pop
sub
fsub
cmc
andb
cmp
inc
sbb
test
lods
xchg
les
push
lahf
sbb
mov
push
cmp
mov
ss
es
mov
sub
into
sub
push
inc
xor
inc
aad
imul
jp
mov
sti
xchg
stc
sub
and
outsb
cli
scas
and
lock
popa
bound
aaa
pop
leave
lcall
or
movsl
bnd
mov
mov
das
rol
nop
mov
repz
fimuls
test
enter
inc
jmp
add
pop
and
push
fldcw
push
mov
or
cmpsb
daa
and
pusha
and
aad
sbb
mov
push
fsub
cwtl
sub
push
jae
push
movsb
fists
pop
mov
orb
imul
cmpsl
les
mov
mov
fs
nop
das
cmp
dec
lds
pop
xor
cmp
and
out
ror
insb
xchg
sbb
nop
inc
div
mov
adc
addr16
repnz
movsl
push
xchg
movsl
lea
gs
ror
pop
rcrl
xchg
lret
loop
xchg
or
xchg
ljmp
nop
addr16
jns
fsubs
push
ja
sbb
sbb
pop
jmp
lea
in
inc
push
rcrl
std
outsl
or
clc
loopne
jo
inc
cmpsl
xor
add
sbb
jecxz
movsb
cmp
and
fimull
add
or
lret
add
shrd
sbb
movsb
pop
mov
push
unpcklps
fiadds
sub
lcall
or
xchg
cmp
cmp
das
and
out
das
mov
es
xor
shll
fwait
mov
cmpsl
adc
xchg
mov
xchg
ljmp
add
xlat
daa
push
test
pop
adc
mov
movsl
xchg
jnp
push
xchg
jb
imul
out
push
pushf
push
je
bound
push
cmp
mov
xor
xchg
pop
lcall
or
into
std
loop
iret
cmp
pop
or
cltd
mov
or
xor
pop
rorb
arpl
out
jae
mov
mov
stos
or
pop
xchg
pop
in
icebp
ja
mov
in
xor
loopne
adc
jno
mov
dec
or
lods
pop
inc
hlt
sbb
es
adc
dec
mov
mov
adc
add
test
cmp
and
sub
dec
mov
in
rcll
adc
sub
jb
ret
movsl
jae
incl
flds
dec
fsub
scas
sbbl
mov
xor
in
sbb
and
daa
out
or
fldenv
mov
call
loopne
cmp
pop
mov
cli
mov
push
fimull
cli
sub
dec
jp
cmp
addr16
clc
jp
adc
lcall
jo
into
dec
lods
gs
dec
popa
and
cmpsl
mov
sub
or
cmp
or
shl
pusha
fnstcw
xchg
mov
inc
cmp
testl
jge
pop
jae
aaa
and
adcl
or
mov
and
aam
sti
repnz
std
cmp
inc
insb
mov
lcall
sti
decl
mov
aas
orl
shll
popf
jo
loop
sbb
imul
dec
jns
test
lods
dec
and
fdivrl
shlb
sahf
int3
sti
inc
mov
movsl
cmpsl
sub
int3
rorl
push
out
lret
ja
int3
jnp
xchg
cmp
rcrb
leave
in
inc
fwait
mov
pop
sbb
dec
inc
inc
pop
cmpsb
pop
in
mov
xlat
int3
orb
push
lock
fimuls
mov
jne
outsb
andl
jns
push
lea
ret
cld
rcrb
mov
sbb
push
sarl
sarl
sarl
jg
outsb
xor
int3
or
sahf
jp
mov
jp
pop
dec
xor
mov
iret
add
jb
leave
adc
insb
push
push
cmc
sti
cmc
xor
rorb
mov
fs
add
jp
adc
sahf
pop
xorl
dec
test
lds
mov
imul
into
mov
cmpsb
in
dec
lret
xor
xchg
gs
sbb
mov
out
arpl
add
xchg
jb
mov
test
adc
popf
inc
cmpsl
popa
addb
add
push
mov
sub
push
fstpl
mov
test
lods
jo
cmp
in
test
bnd
out
jmp
cmpsb
loope
pop
fistpl
loopne
test
xchg
cmpsl
pop
push
cs
inc
sbb
cmp
stos
push
push
mov
jno
int
and
je
out
outsb
nop
pop
cmp
out
movsb
mov
dec
adc
sub
dec
daa
inc
stos
xchg
mov
mov
push
fiadds
loop
cmp
popl
inc
repnz
mov
test
inc
jle
das
fcomip
in
std
sbb
cmp
aas
stos
test
je
sbb
cmp
test
in
jae
dec
fs
test
xlat
pop
mov
fwait
jp
iret
loopne
ljmp
not
xchg
dec
rclb
mov
cmp
cmpl
js
cmp
cmpsl
mov
inc
lods
xor
shl
bound
outsb
ret
in
das
out
adc
or
or
lds
cmp
mov
xlat
mov
dec
out
dec
cmp
popf
call
mov
adc
pusha
movsl
sarb
jnp
std
pop
pop
out
icebp
and
cld
jge
je
jb
mov
arpl
sti
call
xchg
cmp
pop
inc
cmp
shlb
fwait
loope
and
lret
jecxz
sbb
rolb
xchg
popa
push
mov
mov
push
push
sub
imul
insb
insb
xchg
add
xorb
dec
sbb
mov
jne
ss
fsubr
call
ss
out
adc
movsb
adc
or
adc
lahf
pop
push
movsb
jge
mull
adc
cmpsb
cwtl
inc
addr16
sub
sub
fistpll
sbb
dec
add
leave
imul
je
divb
stos
adc
pop
inc
mov
mov
add
cmc
mov
rcl
sbb
dec
call
in
xchg
adc
jns
add
jbe
mov
mov
fwait
xchg
adc
int3
xor
jo
dec
jb
movsb
frstor
imul
xor
jae
jns
mov
jb
ja
mov
lods
les
notl
cmc
in
lock
cs
xor
push
aaa
outsb
xchg
lods
mov
mov
cmpsb
lret
and
pop
test
aaa
xchg
inc
push
imul
jno
pusha
push
cmp
les
jp
lea
scas
test
js
lods
fmulp
xor
jle
push
imul
push
aam
lcall
ja
inc
xchg
sbb
lahf
cli
in
jl
in
out
call
enter
inc
movsb
and
pop
adc
movsb
aad
mul
jg
lret
lret
dec
fmul
fadds
cmp
push
dec
xor
out
ds
daa
sub
and
jns
insl
icebp
js
push
aaa
mov
mov
adc
mov
repnz
mov
repnz
shl
mov
repnz
out
dec
mov
lock
cmp
mov
inc
scas
les
ret
icebp
js
xor
or
ljmp
and
dec
out
add
sbbb
popa
movsb
and
and
xor
mov
cld
add
mov
aad
jno
sbb
inc
out
leave
dec
sbb
push
fidivl
add
push
stos
mov
and
mov
adc
pop
xlat
mov
jl
arpl
adc
iret
gs
add
cmp
jns
dec
mov
push
mov
ss
jno
add
xchg
iret
mov
mov
cmp
adc
push
arpl
push
pushf
xchg
pusha
sbb
ds
add
jecxz
roll
aad
sarl
sbb
mov
fiaddl
mov
cmp
mov
out
adc
adc
push
jnp
decb
mov
push
das
add
xchg
notb
xchg
push
mov
lcall
lret
mov
sub
jbe
sarl
mov
jge
pop
mov
jno
mov
mov
cmc
hlt
pop
fidivs
outsl
or
nop
and
stos
sub
cli
adc
sub
filds
add
mov
sti
ljmp
pop
dec
pop
popf
lcall
jns
mov
add
scas
sbbl
stc
stos
test
or
cmc
add
lds
sbb
test
sub
jnp
fildll
mov
mov
jnp
call
sbbb
fsub
mov
leave
not
filds
ret
jge
xchg
jb
stos
cwtl
jns
push
and
or
mov
sarl
sti
das
mov
dec
fdivrp
xchg
out
fnstcw
stc
xlat
xchg
xchg
mov
sbb
leave
mov
fidivl
sbb
ja
adc
stc
test
cmp
mov
dec
inc
out
ret
int3
push
adc
test
sub
inc
push
negb
lds
lock
pop
mov
pop
sahf
mov
and
jns
pop
fistpl
sbb
push
push
xchg
aam
sub
fxch
shrl
push
xchg
lock
cmp
cmp
dec
push
into
pushf
xor
jmp
xchg
mov
cmp
cmp
stos
mov
xor
sub
shlb
jmp
cmp
pop
add
loop
mov
popa
popf
idivb
add
test
je
xor
sub
xchg
sub
mov
adcl
xchg
or
pop
fdivs
das
add
xor
test
sub
pusha
sti
mov
lods
jnp
lret
cmp
xor
or
inc
in
push
mov
mov
gs
inc
mov
cltd
xchg
xchg
shlb
jg
xchg
xor
jae
enter
xor
sarl
loope
mov
push
lods
cmp
fidivrs
sub
xor
xlat
movsl
jp
popa
jmp
in
mov
mov
decb
add
shll
rcrl
pusha
mov
movlhps
or
mov
adc
clc
pop
mov
sub
je
mov
ret
mov
lret
and
lods
cmp
pop
int3
or
ljmp
popf
outsl
and
xorb
mov
aaa
pcmpeqd
add
into
ds
xor
jae
jno
loop
or
pop
test
mov
sbb
ja
mov
scas
cmp
aaa
fs
movsl
jle
test
add
cld
inc
and
push
outsl
inc
sbb
fdivrl
jmp
xchg
push
bound
add
aas
dec
sti
in
out
enter
rorb
jmp
mov
pop
data16
jl
sbb
mov
or
adc
enter
sbb
lret
mov
mov
and
repz
or
xor
nop
fwait
pop
sbb
lea
mov
addr16
xor
shlb
or
fisttpl
hlt
adc
les
push
mov
lret
xchg
dec
jg
shl
xor
adc
repnz
mov
mov
bnd
stos
cmp
and
push
mov
adc
fmuls
jmp
rcrl
adcb
subb
cmp
pop
je
mov
fcomip
out
push
push
lret
push
out
lahf
mov
ljmp
add
push
jp
aaa
dec
xchg
xor
cmp
je
movsl
push
sub
mov
test
ret
mov
cltd
jmp
es
cmpsb
jbe
mov
gs
mov
int
mov
lcall
and
ljmp
shlb
and
gs
movsl
push
cmpsb
outsb
test
jbe
int
mov
lods
daa
test
lods
pop
inc
sbb
mov
jg
andb
ret
cmp
invd
les
insb
aam
inc
mov
imul
cmp
adc
ret
into
movsb
xor
stos
lock
clc
cmp
mov
and
inc
and
das
adc
ret
pop
pop
aas
outsb
pusha
pop
fwait
dec
mov
jae
outsb
pop
dec
xor
lock
rorl
stos
jp
aas
xchg
pop
pusha
cld
ret
clc
in
pop
outsl
add
cmp
loopne
inc
pop
push
push
push
stos
dec
push
dec
add
jo
loope
loopne
fwait
pop
sti
mov
cmp
sbb
mov
lock
pop
std
lds
cmp
xorl
insb
fisttps
pop
lcall
stos
fdivs
sbb
pop
outsb
lea
ljmp
sub
paddsw
mov
repnz
scas
dec
inc
movsb
lods
popf
scas
and
idivb
insb
inc
push
shr
movsb
pusha
push
cs
xchg
pop
loop
loop
pop
add
push
xchg
push
loop
fs
push
aad
bound
push
push
or
pop
das
std
xchg
pop
mov
std
jae
jl
ret
dec
xchg
mov
cmp
test
std
or
pop
inc
jge
push
push
sub
cmc
sbb
pop
mov
pop
and
mov
out
jns
cltd
shlb
movsb
add
daa
cmp
leave
jl
mov
repnz
repz
movsl
jns
mov
mov
aam
jg
xchg
cltd
fcom
add
leave
repz
jbe
xchg
arpl
adc
xorb
mov
dec
pop
fbld
or
jb
ret
mov
loope
sub
and
mov
clc
pop
mov
xor
add
mov
xchg
mov
dec
inc
push
pop
loope
cwtl
out
mov
je
pushf
mov
pop
shr
insl
dec
xchg
mov
repnz
or
stos
jecxz
push
or
push
push
cli
fs
xor
sbb
add
push
sbb
pusha
jecxz
sbb
mov
mov
aaa
jmp
pop
lods
aaa
pop
sbbb
ss
daa
pop
and
push
inc
sbb
and
dec
aaa
mov
pop
sti
and
inc
or
push
into
mov
pushf
cwtl
out
or
daa
movsw
int3
xor
xor
cltd
fstpl
daa
rcll
ret
sbb
push
sub
gs
out
dec
xor
std
stc
vmwrite
sahf
cwtl
into
lock
std
lret
mov
jle
movsb
mov
repnz
xchg
cwtl
xor
or
fucomi
sbb
jge
mov
pushf
fwait
test
aas
sub
lret
cli
inc
not
enter
pop
adc
ret
sub
cmpsb
jno
aas
dec
jne
mov
adc
cmp
lret
test
push
push
pop
jg
rcl
out
mov
xchg
pop
call
xor
sub
jmp
fs
ret
imul
loope
jecxz
mov
ds
scas
std
test
jmp
sbb
les
or
out
in
ret
jo
loop
cmc
popf
loope
sub
dec
sbb
shll
je
es
out
mov
fwait
aam
dec
push
sbb
jo
stc
pusha
mov
push
inc
mov
push
adc
loop
in
xchg
inc
lahf
sub
lcall
clc
stc
outsb
data16
dec
sub
fdivl
mov
sti
int
lret
inc
lods
nop
sarl
fdivl
fimuls
inc
fidivl
pop
mov
adc
in
movsb
out
and
xor
bound
cmp
push
aaa
imulb
add
pop
mov
push
in
inc
xchg
ror
es
jl
pop
cmpsb
add
xchg
inc
mov
dec
lahf
js
pop
imul
aas
in
cmpsb
rclb
clc
loopne
jp
shrb
xchg
addb
push
aad
add
jmp
pop
mov
xor
fidivrl
sahf
sbb
stos
lcall
icebp
faddl
rorl
es
mov
push
xchg
jo
mov
mov
adc
push
mov
sbb
ljmp
mov
xchg
ja
xor
test
sbb
dec
pusha
out
sub
es
xor
dec
test
ja
data16
cmp
mov
push
push
loopne
or
inc
inc
xchg
dec
dec
stos
iret
fcmovb
jmp
cld
adcl
push
or
sub
adc
add
outsb
gs
mov
add
pop
jmp
sbb
out
adc
ds
mov
mov
ljmp
rcrb
jg
hlt
mov
xchg
int
fidivs
mov
nop
pop
mov
adc
fwait
dec
stc
push
xchg
ljmp
movl
in
mov
testb
mov
xchg
mov
mov
sbb
aaa
pop
movsb
dec
mov
xlat
aad
and
fsubr
mov
lahf
xor
inc
enter
pop
mov
fwait
and
add
adc
mov
ret
jp
test
loope
pop
jmp
out
xor
push
aas
mov
aas
jge
into
nopl
pop
jae,pn
dec
mov
xchg
lds
add
les
mov
mov
adc
fcoml
xchg
adc
repz
rcll
lret
repnz
test
cmpsb
aad
xchg
or
gs
rcrb
and
dec
lret
fnstsw
and
sbb
cs
mov
bound
sbb
sahf
jnp
xor
cmp
test
pop
mov
movsl
or
or
xor
mov
push
fidivrl
aam
mov
test
outsl
ja
inc
mov
inc
inc
std
jmp
sar
jnp
out
aas
pop
call
xlat
imul
sbb
dec
xchg
cmp
rcrl
jge
sub
sub
lcall
sub
xor
mov
cltd
mov
sbb
push
das
lar
ret
out
pop
jp
xchg
out
mov
push
push
ja
jge
cmp
mov
adc
jo
mov
js
jmp
jg
movsb
popf
mov
ds
adc
inc
mov
cmp
mov
jbe
mov
ret
adc
in
or
imul
cmpsl
mov
dec
mov
leave
jb
test
inc
mov
fldenv
xchg
mov
jle
push
lret
lods
pushf
mov
test
out
stc
ja
lea
inc
lock
mov
adcl
les
divb
xor
sub
mov
stos
mov
cmp
mov
out
sub
push
out
scas
repz
popa
cmc
push
or
mov
xchg
insb
add
pop
stc
in
sub
mov
dec
daa
dec
jno
pop
imul
sbb
cmp
inc
inc
rol
sub
enter
and
push
insb
jne
adc
jp
test
ret
jmp
add
add
or
mov
inc
mov
cmpsl
cmp
in
jbe
scas
int3
fsub
hlt
add
dec
sahf
push
pop
dec
test
scas
inc
push
cmpsl
out
lcall
lcall
xor
sub
mov
jb
xor
and
cmp
pop
xor
int3
repnz
pop
insb
shrb
mov
or
inc
out
inc
xor
gs
jmp
add
cmp
push
movsl
cld
cmp
lahf
test
dec
imul
or
inc
sbb
push
dec
leave
adc
and
lret
xchg
test
push
xchg
pop
xor
je
jne
inc
or
push
pop
cmc
cmp
cmp
fsub
cld
cmpsb
nop
mov
or
mov
cmp
and
cmp
fimull
push
sub
mov
stc
scas
inc
mov
add
push
sbb
fsts
loope
add
je
out
cli
cmp
popa
jnp
ret
ret
xchg
mov
xchg
and
scas
bound
jnp
shlb
xorb
xor
lret
inc
stos
in
cwtl
and
outsb
test
scas
sub
xchg
cwtl
fisttps
aaa
inc
rcrb
aam
xlat
repnz
outsb
adc
push
or
jg
jnp
mov
push
push
cltd
sub
call
push
out
cmp
std
sbb
pop
adcb
daa
mov
ljmp
sahf
outsb
mov
test
lods
mov
xchg
dec
mulps
nop
leave
nop
dec
sub
shlb
dec
rorb
xlat
mov
out
inc
sbb
mov
js
or
inc
cmp
push
add
mov
or
mov
add
dec
out
mov
notb
decl
sub
mov
sahf
mov
lcall
inc
add
mov
sbb
pop
into
mov
push
jnp
xchg
mov
inc
push
cmpsl
cmp
push
dec
push
lret
cld
cmp
mov
push
push
xchg
mov
loop
dec
mov
lahf
sbb
adc
xchg
sbb
mov
stc
mov
push
leave
and
cmp
and
jge
jnp
cmp
jg
pop
call
dec
scas
stos
lcall
dec
ret
or
mov
xchg
pop
fcmovu
vpor
push
shll
pop
cli
push
lock
mov
pop
js
stos
movsb
push
fcomi
pop
repnz
or
push
scas
xchg
push
in
outsb
je
inc
pop
in
mov
cmp
jecxz
mov
jns
inc
mov
cmpsb
inc
xchg
stos
fldcw
or
or
xchg
mov
out
push
xor
sub
pop
cmpsl
mov
mov
aad
sbb
pop
in
push
add
pop
pop
push
aam
test
xor
faddl
inc
sub
outsb
inc
loop
mov
rorb
mov
je
sar
aad
shl
pop
push
mov
or
pop
clc
pusha
push
test
jge
xor
cmp
push
cmp
push
stos
cmp
mov
lock
into
bound
imul
shlb
dec
jmp
push
in
jnp
sbb
repz
or
mov
addr16
loop
rcrb
inc
popf
or
fidivl
xor
aad
das
adc
out
mov
setle
icebp
call
insl
shll
lock
mov
jge
in
mov
jg
inc
pop
add
xchg
mov
nop
jno
xchg
ds
lea
fdiv
les
sbb
or
add
and
xlat
idivb
adc
cmpsb
lcall
cmpsl
add
scas
sarb
sbb
out
push
sti
pop
into
xchg
fucomp
jg
cmpsl
fldenv
daa
mov
hlt
sub
add
scas
hlt
adc
popa
add
popf
and
fildl
fwait
or
mov
mov
in
or
adc
xlat
sub
xchg
ljmp
lods
daa
rolb
cmpsl
in
adc
pop
insl
cli
mov
inc
sbb
push
mov
xor
test
stos
mov
dec
sbb
or
dec
jp
inc
or
pop
lock
mulb
dec
mov
cwtl
enter
xchg
sub
inc
xor
jns
xor
scas
int
enter
movsl
pop
ret
xor
in
and
fadds
or
lds
cmp
jae
jnp
mov
push
test
sbb
jno
sbb
inc
lea
jns
jo
ret
shrb
test
imul
shrb
mov
xchg
orl
inc
inc
scas
dec
jmp
jp
add
sub
xor
mov
nop
pop
mov
mov
sbb
js
cmp
popa
ljmp
mov
dec
in
sub
jno
add
outsb
jp
inc
add
fimuls
aas
mov
sbb
or
mov
mov
sbb
add
mov
cmpsl
xchg
push
jg
imul
in
jno
nop
xchg
add
arpl
and
xchg
xchg
test
push
push
stc
jecxz
in
mov
cmp
push
imul
add
iret
addr16
repnz
std
sub
mov
cltd
hlt
arpl
int
xchg
test
enter
mov
lds
pop
sbb
dec
outsl
es
dec
aam
cld
lret
lret
xchg
into
mov
aad
mov
inc
jmp
sub
mov
stc
jge
pop
pop
cmpb
jns
or
xor
xor
pop
mov
inc
loop
and
or
nop
mov
rorb
arpl
mov
jnp
pop
dec
mov
xchg
mov
xorl
and
and
sbb
pop
adc
mov
addr16
fmull
in
fucom
pop
lcall
fwait
ss
and
aas
dec
lahf
ja
jae
scas
inc
jmp
sub
pop
in
popf
sub
jno
xchg
pop
arpl
cmpb
shll
sbb
add
test
lret
xchg
mov
imul
inc
mov
enter
push
cmpsl
push
xchg
adc
or
mov
ror
pop
das
lea
ss
push
mov
cld
test
push
jnp
cltd
cmp
test
push
or
repnz
or
cli
or
xchg
push
dec
leave
xor
sbb
scas
inc
xchg
jne
cmp
sbb
mov
cmpsl
mov
subb
xchg
mov
rclb
push
movsb
pop
cmpsb
cmp
daa
outsb
inc
loop
mov
jbe
mov
ja
sbb
push
mov
sahf
out
out
fisubrl
lahf
fistps
mov
and
ret
js
fnstenv
pop
jl
inc
and
fildl
test
pop
cmp
cmp
lcall
repz
in
ljmp
je
fisubrl
aam
enter
or
call
mov
jo
insl
stos
out
subb
lret
pop
mov
fwait
das
lahf
sbb
in
sbb
or
sarb
xchg
push
fsubl
and
lock
xchg
push
subl
ret
jno
cld
iret
loop
sub
push
xor
xchg
hlt
or
lea
push
cmp
fs
mov
and
mov
sti
rcr
jae
mov
inc
push
mov
or
mov
negb
mov
inc
pop
adc
jge
dec
insl
stos
pop
and
les
mov
shll
push
imulb
les
aas
mov
adc
std
lds
popa
ret
jnp
fcomps
popf
inc
and
aaa
mov
decb
icebp
xchg
das
icebp
out
incb
out
mov
pop
out
sub
sbb
test
mov
in
sbb
gs
adc
mov
repz
sub
icebp
inc
ljmp
adc
cmpsl
cmp
cltd
mov
movsb
mov
in
mov
mov
xor
cmp
divb
aaa
sbb
iret
daa
dec
add
bound
ljmp
arpl
in
out
aam
ss
outsl
sub
mulb
jmp
jge
adc
mov
sti
lock
js
out
mov
jmp
cmpsb
mov
in
mov
shrb
add
inc
jbe
out
adc
movsl
pop
pop
push
test
pop
popf
xchg
bound
hlt
ds
aam
imul
cmp
jl
cmc
popa
test
lret
movsb
jbe
addb
adcl
addl
xchg
movsl
icebp
xchg
xchg
sbb
and
push
mov
je
or
pop
int3
sbbb
mov
mov
imul
add
cwtl
push
movb
ss
lods
pop
mov
jg
scas
pop
xor
das
loopne
sub
fstpt
sub
shll
or
rorb
xor
dec
adc
adc
loopne
subb
mov
adc
mov
jp
fstp
shl
mov
mov
ss
fisttps
pop
mov
adc
mov
mov
and
fcomip
push
xchg
lods
aam
add
xchg
jmp
jmp
cmp
sbb
or
mov
mov
xlat
cwtl
rcrl
mov
ret
inc
mov
rcll
loopne
mov
lahf
loopne
push
into
and
and
ret
inc
and
or
mov
add
sub
bound
or
shr
inc
popf
pop
icebp
dec
sub
mov
mov
ja
sbb
push
mov
pop
sti
jmp
cmc
icebp
loopne
pop
outsl
fdivrl
mov
sbb
xor
pop
std
mov
lahf
and
pop
xor
mov
fidivrs
add
fstl
lods
hlt
int
push
movsl
fs
bound
out
sub
sahf
fdivrs
push
xor
fistl
push
loop
icebp
push
pop
stc
pop
outsb
mov
hlt
rcll
in
adc
lcall
int
jge
enter
push
lcall
imul
rclb
faddl
or
cmp
ljmp
stos
lds
push
push
jne
xor
outsb
jne
pop
sub
cmp
mov
mov
sub
faddp
push
cmp
arpl
inc
js
sub
inc
lahf
mov
dec
xor
imul
popa
xchg
inc
pop
push
mov
insb
jns
bound
and
push
mov
in
insl
insl
adc
pusha
scas
xor
or
loopne
bound
sub
lock
jl
das
or
stc
or
mov
sbb
mov
push
hlt
mov
add
ljmp
or
lods
or
mov
jge
jp
mov
mov
repz
xlat
mov
fldenv
pop
cmpsb
xchg
ljmp
enter
inc
iret
cmp
push
shlb
in
mov
xor
lods
pop
cmpsl
je
or
pop
pop
not
imul
and
sub
inc
and
mov
stos
jne
xchg
mov
mov
into
adc
dec
insl
mov
inc
test
pusha
or
xor
stc
test
lods
lock
jae
jmp
test
add
fsubrl
sub
cs
pop
pop
push
lret
or
adc
fs
add
mov
ss
sti
mov
sub
xor
push
call
in
std
xor
push
xor
icebp
into
jno
fucomip
pop
leave
aas
cmp
sub
inc
mov
cmp
dec
jl
push
mov
aad
push
test
cmpsl
inc
mov
fmuls
xchg
push
inc
push
ja
xchg
repnz
stos
jmp
stc
loopne
adc
dec
add
dec
rcrl
and
out
and
lcall
cld
jbe
adc
stos
xchg
call
mov
jb
sub
imul
sub
repnz
push
push
leave
cmp
mov
mov
adc
imul
pop
sbb
jnp
notb
cwtl
fbstp
push
in
imul
mov
jecxz
outsl
and
sub
mov
xlat
hlt
out
lods
decb
mov
imul
fisubrs
mov
dec
add
sbb
and
sbb
ds
pusha
ret
data16
loop
push
xchg
lret
push
stc
push
inc
mov
xor
pop
in
mov
xchg
js
das
inc
dec
gs
pmaddwd
sarb
popa
mov
sahf
pop
mov
fistpll
jae
js
add
sbb
mov
inc
sub
das
inc
jp
jmp
popf
sbb
popf
jmp
and
or
jo
xchg
push
adc
lret
pusha
pop
jg
ljmp
jns
fisubs
ret
inc
leave
push
imul
insl
sbb
out
inc
int3
cld
ljmp
add
add
pop
mov
arpl
sub
jae
rcr
into
lret
inc
jmp
cmp
xor
cwtl
or
aaa
mov
and
mov
jo
loope
jnp
sub
xchg
scas
out
xor
fadds
mov
sbb
gs
fists
push
fnstcw
push
loope
push
movsb
pop
inc
repz
push
cs
ret
jmp
ret
mov
push
jno
or
out
sarl
sub
loope
dec
popf
push
outsl
repz
movsb
push
inc
les
adc
loop
mov
jae
xchg
add
test
fneni(8087
je
mov
adc
inc
mov
cmp
mov
or
add
xor
adc
shr
cmp
xor
jns
fnstsw
jae
outsb
or
insl
mov
test
add
xor
pushf
repnz
jno
repz
fwait
push
and
arpl
int
imul
pop
subl
test
pop
mov
jnp
cmp
jo
test
mov
cmp
mov
xor
pop
jp
mov
sbb
scas
add
cmp
icebp
mov
push
arpl
jb
mov
into
pop
mov
imul
adc
jg
add
jnp
fcoml
ljmp
testl
cmp
popf
xchg
or
cmp
ret
jne
fdivrs
je
loopne
data16
inc
dec
cmc
dec
xchg
mov
call
jecxz
push
rorb
jo
mov
std
sbb
dec
je
jb
push
imul
pusha
sbb
xorb
stc
jae
inc
shll
add
mov
test
incb
mov
inc
sarl
cwtl
daa
sub
je
mov
xchg
es
sub
fs
or
rcll
pop
adcl
or
stos
mov
dec
hlt
test
lret
sbb
int3
cmpsl
pushf
xor
jne
fwait
les
hlt
lds
pop
arpl
push
add
add
fisubl
dec
cmp
xchg
jle
outsb
inc
divb
cmp
jb
cli
enter
dec
jmp
mov
test
lods
dec
out
out
and
sub
stos
in
lods
sub
cmpsb
push
addr16
mov
add
push
test
out
pop
add
fdivr
jns
into
jb
pop
mov
xchg
pop
inc
shrb
test
fisttpll
out
rcr
sub
je
insl
cmp
movsl
pop
clc
xchg
sbb
lret
mov
mov
insb
mov
cld
sub
daa
popl
outsl
outsb
roll
sub
test
mov
mov
fistl
ljmp
adc
inc
mov
cmp
mov
ljmp
fs
cmp
pop
fcompl
fcom
test
mov
adc
lret
mov
jnp
jns
inc
pop
popf
imul
mov
pop
adc
inc
in
sub
xchg
xorb
aaa
notl
xchg
xorl
jmp
and
call
arpl
cli
pop
mov
idivl
pop
sub
daa
fucom
iret
or
add
insb
fcomps
call
mov
jecxz
dec
jo
imul
test
mov
loopne
mov
xchg
repnz
lret
push
adc
test
mov
stos
sarb
iret
enter
cmove
or
adcl
ror
imul
cld
cmp
xchg
stos
jae
push
add
inc
mov
outsl
push
imul
inc
outsb
cwtl
sbb
fdivl
sbb
cli
dec
je
push
sub
mov
and
cmc
pop
fnsave
js
or
insl
add
mov
inc
fnsave
inc
xchg
cmp
jbe
fimull
jno
jmp
jo
notl
cli
loopne
push
sub
out
repnz
ds
popa
mov
call
mov
xor
jmp
imul
jecxz
lret
jbe
flds
xchg
dec
xor
push
mov
outsb
pop
sbb
nop
lret
lret
mov
xchg
out
pop
sub
lods
dec
lret
ret
dec
jmp
inc
test
push
inc
stos
cmp
fs
mov
dec
jbe
stc
xchg
pop
loop
add
fyl2xp1
adc
outsl
int3
aad
and
jo
push
into
mov
popa
out
andb
enter
pop
xor
xchg
lea
push
aad
std
outsb
jmp
arpl
shll
fidivs
and
fbstp
pop
cli
imul
sbbl
or
adc
cmpsb
pusha
rorb
movb
dec
cltd
hlt
push
iret
inc
cmp
lahf
lods
bound
jbe
pop
cmp
mov
mov
sub
scas
mov
or
xchg
and
push
mov
adc
int3
xchg
adc
pop
add
outsb
fnsave
aad
je
cmp
ja
sbb
sub
xor
pop
xor
sbb
aad
sbb
xchg
test
jle
les
dec
call
cmp
icebp
xor
loope
dec
or
lcall
add
and
xor
mov
inc
sbb
add
aad
adc
cmp
mov
sub
inc
outsl
cmpsl
mov
add
lahf
push
pop
cmp
pushf
repz
add
lahf
pushf
imul
jne
dec
std
int
pop
sub
scas
icebp
aas
sub
jge
outsl
sub
addb
dec
sbb
fnstenv
push
jbe
push
cmp
xchg
adc
push
xor
dec
lahf
mov
sub
orb
xchg
sahf
jbe
rolb
addr16
insl
adc
insl
xchg
loop
xchg
push
loop
stos
flds
xor
hlt
mov
xor
pop
icebp
mov
call
mull
ja
outsb
cmpsb
out
xchg
in
fsubs
jecxz
outsb
mov
xchg
cmp
ss
mov
and
enter
cld
icebp
inc
cmpsb
mov
cmc
aaa
mov
mov
ficompl
pop
test
fists
inc
aaa
and
jmp
repnz
jl
xor
mov
mov
xchg
into
cmp
outsb
jb
inc
les
in
data16
jns
cmp
fmuls
in
jb
iret
aas
pop
js
icebp
repz
je
add
inc
into
or
push
js
dec
pop
pop
fs
xchg
xchg
xchg
push
cmp
ja
lret
pop
sub
mov
push
cld
scas
cmp
mov
ja
movsl
cwtl
add
jl
and
dec
sbb
add
lock
push
push
mov
pop
in
iret
cwtl
sahf
jbe
and
fldcw
jmp
fcmovnbe
std
fbld
mov
or
mov
jo
out
pop
test
mov
jmp
or
stc
sub
push
imul
fs
test
mov
pop
jle
xchg
fisttpl
aam
pop
cmc
mov
pop
out
ds
loopne
fildll
push
mov
aad
test
mov
sub
fldt
inc
jns
xor
lods
adc
ss
cmp
push
add
ljmp
leave
stc
mov
lods
lds
inc
pop
stos
mov
inc
xor
jp
and
test
add
fistl
mov
mov
sarb
ja
mov
push
cmp
adc
out
add
add
and
daa
stos
idivl
adc
push
psrad
movlps
xchg
xchg
push
lds
cli
mov
cmp
rorb
jne
sub
mov
ds
jg
inc
mov
and
loop
mov
rolb
sub
mov
mov
add
lods
push
ss
mov
sub
or
adc
scas
fstp
adc
adc
sbb
int3
icebp
adc
scas
lods
cmpsb
sub
and
push
mov
call
pop
enter
pop
inc
out
in
jle
inc
arpl
movsl
subb
sbb
fimull
jae
adcl
jg
or
xchg
sti
negb
leave
ror
outsb
lidtl
or
orl
add
dec
add
push
sarb
sbb
jae
jnp
shrl
les
mov
xchg
stc
int3
rcrb
cmp
repnz
movsl
push
repnz
cmp
fadd
adc
mov
stc
xchg
pop
sbb
int3
add
pop
push
arpl
cmp
pusha
int
arpl
mov
push
jge
push
repz
cs
addb
lret
push
sbb
sub
movsb
lea
cmpb
or
xchg
xchg
xchg
addb
packuswb
dec
arpl
mov
adc
ret
jmp
repnz
add
xchg
or
mov
mov
cs
cmp
adc
push
pop
add
inc
xchg
pop
adc
es
cs
inc
xor
xchg
pop
subb
jp
sub
dec
push
out
mov
mov
jns
adc
cwtl
sbb
lcall
xlat
pop
sbb
mov
xchg
push
cli
out
jns
gs
aas
xchg
or
fdivr
push
fwait
paddd
cmp
and
les
shl
outsb
mov
mov
dec
push
decl
inc
sub
out
stos
mov
xchg
dec
data16
in
cltd
or
sbb
mov
jmp
pushf
mov
add
fcmovnb
mov
jg
imul
scas
out
inc
mov
mov
filds
je
je
jle
cmpl
sti
cmp
mov
sahf
pushf
arpl
popf
cmp
inc
lds
or
inc
int
inc
dec
cmpb
pushf
scas
jne
stos
inc
jmp
sub
xchg
cmp
xor
arpl
cltd
cmp
jae
jae
out
in
inc
call
gs
pop
xchg
mov
sub
in
lods
sub
stos
push
notl
sbb
xlat
imul
fdivl
out
jmp
push
das
repz
loope
icebp
addl
or
mov
dec
cmpb
mov
sub
jmp
les
rcrl
adc
nop
add
ds
sbb
mov
mov
je
sbb
add
sub
lcall
hlt
insb
loop
jmp
push
es
ja
rcrb
mov
pushf
out
add
jns
orl
cwtl
mov
dec
add
fsts
rclb
mull
stos
mov
aas
mov
add
cmp
call
sub
test
divl
pop
pop
cmp
mov
shl
adcl
test
mov
and
add
mov
andl
xchg
sbb
data16
sbb
lds
mov
pusha
aam
sub
sbb
sahf
test
xchg
orb
push
sub
hlt
xchg
not
mov
shl
insb
rcr
loop
stc
mov
jae
es
mov
fisubs
mov
jmp
mov
jns
jecxz
jmp
sbb
insb
testl
or
loope
add
bound
pop
xchg
ljmp
hlt
jmp
adc
stos
cmp
jnp
jp
fidivs
mov
stos
fisubrl
inc
xchg
push
dec
scas
pop
popa
in
xorl
stos
add
push
xor
jns
mov
fsubl
jns
or
push
xchg
out
std
add
fcmovnu
jnp
outsb
push
cmc
inc
test
add
out
sbb
inc
fdivl
xor
xorl
repnz
xor
mov
sbb
cmpsb
jle
add
and
xchg
push
push
mov
in
test
mov
push
aam
jecxz
push
cmc
ja
add
push
dec
and
pop
leave
inc
inc
mov
stc
push
or
in
pop
sub
mov
inc
fs
sub
lods
mov
jne
stc
aas
lcall
inc
xor
lcall
xchg
rcrl
add
call
iret
push
cli
sbbb
fnstcw
sbb
nop
inc
jne,pn
mov
add
xor
mov
out
stos
mov
jnp
mov
mov
ljmp
xchg
dec
cmp
xchg
xchg
push
fistl
mov
xlat
iret
and
jle
fsubrs
outsl
testb
fistps
stos
je
dec
dec
push
xor
ljmp
cmc
stos
in
in
mov
add
out
outsl
mov
sahf
xchg
roll
and
jbe
jae
pushf
fcmove
lea
sarl
adc
mov
pop
mov
push
jne
ljmp
cmpxchg
inc
mov
sti
mov
imul
sbb
pop
and
push
icebp
xor
xor
mov
or
mov
in
push
sti
push
in
add
sbb
jl
cmp
out
fs
dec
inc
xchg
scas
cmp
adc
mov
in
xor
or
cmpsb
jnp
xchg
jecxz
das
dec
push
xchg
arpl
mov
cmp
xchg
mov
je
stos
mov
scas
jno
sub
roll
adc
mov
bound
inc
adc
roll
cmp
push
jg
push
jns
adc
sub
cld
flds
push
and
mov
lods
pop
les
sub
inc
iret
shlb
pop
std
imul
icebp
add
mov
mov
pop
stc
sbb
add
push
out
fcoml
and
add
in
mov
repz
mov
pop
push
call
jo
jae
push
scas
sarl
lods
xchg
leave
sub
add
sbb
and
outsb
jno
enter
xchg
popa
pop
test
fstps
fsubl
ds
inc
push
stos
mov
lods
sub
jo
inc
ret
sbb
inc
shlb
leave
mov
mov
out
lcall
fcom
dec
and
pop
and
popa
cmc
cltd
aaa
outsb
cli
lcall
mov
push
addr16
shrb
arpl
pop
sbb
xchg
popf
cmp
movl
lods
jle
mov
xchg
insl
xchg
inc
inc
pop
mov
popa
inc
adc
std
sahf
fsubrs
das
test
or
dec
jecxz
ss
fs
sub
stos
or
cmp
aam
mov
cmp
lahf
hlt
push
and
inc
mov
mov
nop
mov
shrl
scas
stos
stc
adcl
je
sbb
test
mov
sbb
pushf
iret
icebp
add
bound
imul
and
lea
add
testl
cmc
std
pop
jmp
outsb
pop
xchg
hlt
dec
jp
sbb
xchg
cmp
jecxz
shll
hlt
push
in
and
xchg
or
xchg
pop
and
sub
movsb
mov
repnz
call
push
mov
cmpsb
dec
cld
pop
xchg
in
shl
mov
dec
mov
sbb
jle
mov
mov
add
out
hlt
mov
sub
push
repz
pop
rcrb
pop
xor
cmp
rorl
sub
lea
push
jg
pop
aas
add
or
fmull
or
xchg
lret
xchg
stc
jle
faddl
sti
mov
popf
push
sahf
adc
repz
mov
aas
cltd
add
or
icebp
cmp
add
add
mov
inc
push
xchg
xchg
loopne
test
out
popf
loopne
daa
jge
fstl
sub
out
xchg
jl
lods
ret
or
shlb
xlat
xchg
fldenv
pop
inc
pop
outsl
push
loopne
das
jne,pn
lods
and
ss
ficompl
in
shl
int
xor
jne
sahf
les
jge
insb
jbe
call
in
call
test
sub
test
outsl
test
call
pop
les
dec
lahf
jno
pop
cmpl
inc
cmp
inc
in
outsl
cld
aad
imul
inc
mov
mov
cmp
test
xchg
fisttpl
xchg
adc
and
sbb
dec
inc
xor
loopne
cmp
divb
lea
xchg
push
mov
xor
aas
fbld
into
jne
push
leave
jl
dec
pop
dec
outsb
add
aad
shll
mov
mov
pop
arpl
es
push
insl
scas
add
icebp
mul
sbb
jecxz,pn
test
sbb
sub
or
mov
movhps
mov
xchg
inc
xchg
jb
or
dec
and
or
sbb
ret
fnstsw
adc
xchg
in
and
mov
and
xchg
cli
int3
mov
jmp
xorl
push
lods
ss
outsb
mov
std
cmpsb
cld
loop
mov
jle
testl
cs
push
xlat
lds
fcoml
and
xlat
xchg
or
pop
sbb
popf
add
add
es
cs
inc
lods
mov
cmp
add
into
adc
mov
jns
out
xchg
sub
lock
cmp
adc
shlb
inc
add
pushf
shr
dec
nop
cmp
std
inc
mov
sahf
test
movl
add
mov
and
pop
in
fdiv
pop
lahf
sbb
mov
push
add
jnp
arpl
dec
rclb
dec
xor
sbbb
and
mov
shrl
lcall
cmpsl
call
inc
int3
nop
add
push
and
mov
jmp
pop
add
mov
in
out
ror
add
out
add
dec
jmp
idivb
xor
pop
mov
xchg
movsl
and
insb
imul
xchg
add
pusha
cmp
out
or
xor
pop
outsl
sbb
mov
leave
in
test
in
loop
pushl
xchg
fwait
dec
sub
scas
js
repnz
loope
mov
cmp
out
mov
cmpsb
xlat
mov
push
push
cwtl
mov
scas
jb
pop
cmc
or
ja
lahf
push
sub
cmp
jnp
dec
bound
div
daa
rcr
lret
xchg
xchg
adc
xor
pop
jbe
or
in
lds
lret
mov
push
jno
lcall
fsubp
xchg
cmp
aad
jo
les
pushl
imul
in
mov
pop
in
aas
les
push
in
stc
cli
in
shll
fsubr
ss
iret
mov
jb
cltd
fs
int3
jp
mov
mov
pop
sbb
cmp
ret
in
push
cmp
rcl
fidivrl
and
mov
movsb
shlb
add
dec
dec
into
mov
jns
je
ljmp
xchg
insl
xor
push
pop
ret
mov
jmp
hlt
outsl
daa
sub
out
idivl
outsb
loop
and
popa
cmpsb
mov
xor
xor
call
xor
mov
xor
cwtl
cmpsl
in
mov
jo
pop
cmp
adc
mov
sbb
movsl
mov
filds
je
mov
add
push
clc
call
das
push
jo
ret
test
and
mov
cmc
mov
imul
dec
div
mov
xor
nop
repz
cmp
lods
mulb
jne
stos
and
jmp
fs
or
jnp
orl
pop
mov
movsb
adc
sbb
jno
aam
inc
sahf
pop
ret
cwtl
fcomps
dec
xchg
fmuls
or
inc
popf
mov
lcall
addr16
push
sub
gs
lcall
in
ret
pop
dec
push
dec
jbe
sbb
push
aad
fdivs
xchg
aad
std
mov
sahf
inc
arpl
ljmp
outsl
outsb
repz
jg
jae
ss
cmc
or
shlb
testb
push
and
leave
gs
jns
and
add
push
notb
xor
scas
shll
addr16
lock
bnd
push
addl
or
mov
fildl
ret
mov
push
aaa
out
sarl
in
leave
popf
add
dec
jmp
and
test
outsb
or
stos
dec
mov
mov
cld
in
loop
out
ds
xlat
lret
cmp
jecxz
imulb
lret
in
or
rcrl
mov
sbb
daa
leave
int
sub
lret
and
mov
or
test
cwtl
cltd
mov
scas
idivb
call
faddl
sub
iret
stos
scas
mov
data16
mov
repz
bound
push
mov
sbb
aas
fcoms
and
add
mov
pop
xchg
gs
cmp
jp
movsl
adcb
cmc
dec
mov
addr16
fucomi
cmp
insb
cmp
fsubl
outsl
push
mov
test
pop
or
ss
sub
adc
and
xor
add
pop
and
pop
fistl
jmp
mov
js
mov
daa
and
sbb
dec
jge
sti
arpl
test
pushf
leave
xor
push
cmp
rcr
cltd
lods
js
mov
sub
push
xor
imul
jns
dec
ljmp
or
jge
mov
cmp
enter
push
pop
mov
adc
adc
mov
cwtl
jb
insb
or
cmp
roll
cmp
add
pop
push
pushf
and
mov
shrb
cmp
mov
sbb
mov
dec
xchg
lock
xchg
lods
or
mov
add
into
xlat
into
add
cld
cmp
loopne
lock
rcrb
aam
lret
sub
xchg
mov
sti
xor
imul
int3
icebp
cmpsl
and
addr16
insb
popf
sub
jle
pop
mov
inc
aaa
mov
xchg
sbb
cmp
insb
mov
loopne
jmp
inc
ss
jo
mov
ret
lahf
xchg
or
pop
mov
mov
mov
pop
scas
dec
fsubr
or
pop
hlt
jmp
out
lret
pushf
ret
pop
daa
lods
dec
int3
ficomps
push
jb
je
outsl
jl
mov
enter
cmp
mov
sub
movsl
pop
push
stc
and
push
add
push
frstor
out
cwtl
jl
mov
pop
inc
loope
icebp
out
clc
loope
add
rclb
test
sbb
pop
repnz
test
and
xchg
jle
jle
inc
test
mov
adc
je
into
pusha
ficompl
dec
rorl
insl
pop
nop
icebp
leave
test
push
in
loopne
sahf
sahf
mov
notl
cli
ret
dec
sub
cmp
xchg
or
lods
xchg
les
jno
mov
subl
movsl
sbb
xchg
xor
and
test
jne
jl
insb
jne
xor
sahf
aad
inc
scas
enter
rcrb
lea
pop
dec
mov
jg
pop
loope
push
push
and
mov
in
ja
push
add
loopne
cmp
push
fsts
movlps
mov
jno
jb
loopne
vpsrld
push
push
cmp
push
shll
test
jmp
call
xchg
mov
movsb
in
and
sub
pop
xor
test
xchg
push
pop
je
repz
mov
adc
cmp
dec
das
imulb
jecxz
pusha
jmp
and
lock
mov
push
adc
and
jg
in
pop
mov
mov
cs
or
jo
add
pushf
gs
dec
icebp
cmp
cmp
ret
mov
dec
daa
psubd
out
imul
adc
sub
sbb
cmp
cltd
test
sub
mov
jno
jmp
and
jge
inc
les
bound
mov
or
dec
fnstsw
xchg
xchg
xlat
cmp
hlt
enter
xchg
lods
std
cmp
jge
ss
inc
mov
lods
cmp
and
jo
pop
xor
test
sti
int3
test
mov
std
mov
pop
xlat
jno
test
stc
into
ss
sbb
or
sbb
fistpll
push
push
inc
cltd
cmp
rorl
cmp
jg
jno
xchg
pushf
dec
add
sbb
jecxz
dec
and
or
pop
fisubrl
mov
fdivrs
repnz
pop
jbe
les
jecxz
mov
or
cltd
xlat
sbbl
test
repnz
inc
stc
sbb
jo
xchg
adc
lock
dec
ja
test
insl
or
mov
lock
mov
dec
icebp
dec
cmpsb
mov
sti
je
xchg
cli
dec
pop
imul
dec
dec
outsb
bnd
add
cmp
or
and
out
push
in
cmp
fdivrs
nop
sti
mov
popa
mov
pop
cmp
sub
mov
jno
stos
and
fnsave
fwait
xor
mov
jge
inc
sub
dec
es
xchg
call
push
add
jle
aas
inc
aas
sbb
xor
xor
fnsave
daa
jmp
scas
pop
cmp
sbb
inc
cwtl
sbb
inc
inc
fistpl
pop
push
mov
fwait
inc
int
xchg
dec
mov
test
cwtl
repz
inc
and
mov
push
push
sarb
mul
mov
es
ja
or
jg
xchg
cwtl
mov
inc
adc
hlt
mov
pop
out
jno
mov
mov
push
inc
mov
fsubrl
jb
adc
test
add
sarb
cmpsb
aas
mov
mov
jle
mov
stos
xor
ficomps
xchg
mov
out
jle
insb
ljmp
aaa
inc
lods
dec
xlat
mov
test
mov
xorl
sbb
mov
push
lahf
inc
call
mov
out
mov
and
dec
xchg
nop
test
dec
sbb
rorb
icebp
sahf
jae
lods
xchg
cmp
inc
mov
mov
add
sbb
loopne
movl
jge
les
sbb
cmp
clc
hlt
push
and
jns
data16
fs
inc
mov
cwtl
les
test
sbb
lds
pop
insl
pushf
fstpt
and
sbb
add
sub
cld
data16
lahf
faddl
xchg
dec
stos
mov
push
or
mov
int
inc
adc
outsl
sbb
ds
pop
lock
cld
popf
sahf
mov
and
test
xor
xchg
imulb
sahf
es
sti
outsl
mov
inc
shr
bound
les
xor
js
pusha
inc
pop
adc
inc
xchg
mov
inc
sub
cmpsb
repnz
sbb
xchg
icebp
les
cld
lret
jae
push
fisubrl
sub
xchg
cs
test
inc
out
mov
push
or
inc
push
sbb
loop
test
push
fistps
push
inc
ret
push
repz
sti
aaa
insl
mov
ret
lret
xchg
mov
test
cmc
mov
sti
mov
shll
pop
aad
jg
ljmp
jmp
xlat
aaa
mov
cmp
jg
inc
insb
jb
pushf
scas
xchg
test
xchg
inc
dec
jne
les
imul
fst
hlt
js
pop
pushf
sub
mov
pop
inc
jecxz
sbb
xchg
dec
pusha
xchg
xchg
adc
mov
and
and
adc
loopne
lods
loope
iret
cs
sbb
sub
cmp
cmp
jg
aaa
jnp
in
enter
sub
and
add
cmp
out
daa
lock
push
xor
add
fwait
and
cmp
sbb
ljmp
sub
fwait
add
inc
popf
sub
ret
scas
push
dec
sub
cmp
inc
push
sarl
out
lret
xor
xchg
loopne
and
mov
lea
inc
in
in
mov
movlps
shlb
dec
nop
and
mov
sti
cmovbe
scas
jno
cld
sbb
aaa
and
mov
dec
loopne
bnd
pop
mov
mov
adc
in
jb
mov
mov
sti
sbb
lret
pusha
xchg
dec
out
xor
inc
lods
movsl
pop
ja
call
dec
mov
xor
pop
or
jle
adc
stc
mov
adc
fisttpll
into
cmp
mov
mov
cmp
and
mov
xor
xchg
mov
pusha
sbb
mov
inc
dec
aad
add
mov
mov
dec
push
icebp
xlat
push
inc
in
sti
pop
push
loope
inc
loopne
push
ljmp
jbe
adc
xchg
cmp
fmull
popf
push
test
cs
loop
call
cmp
or
jo
and
divb
bound
xor
repz
lret
mov
mov
shrd
or
jb
jae
ficompl
cmc
faddl
daa
loopne
dec
outsb
mov
push
lahf
int
and
mov
outsb
jae
sub
jbe
xor
inc
rcr
add
gs
test
xlat
mov
loop
cmpsl
push
mov
lock
push
mov
jns
out
dec
xchg
das
insb
mov
nop
push
and
aam
sub
call
das
adc
mov
notb
push
add
jmp
cmp
pop
loope
popf
mov
push
test
pop
not
push
std
mov
adcl
xchg
movsl
test
mov
lods
inc
cmp
cli
and
sbb
pusha
push
push
outsb
mov
or
cmpl
mov
stc
xor
pop
sub
in
xchg
xlat
fcmovb
xchg
xor
cmp
pushf
or
or
cmp
jbe
and
push
lods
add
mov
rcll
dec
or
xchg
out
pop
ja
cmp
fimuls
call
daa
sti
call
into
outsl
fildll
test
inc
aas
stos
or
call
cmp
enter
jno
xchg
pop
int
cmpl
mov
cmp
inc
sbb
jge
cld
ds
mov
xchg
loope
push
outsb
popa
push
lock
sbb
jge
fs
test
dec
stc
mov
loopne
inc
jg
sub
xor
pop
xchg
pop
adc
iret
add
push
inc
mov
xor
cld
arpl
dec
or
jp
std
xchg
andb
push
push
pop
iret
push
outsl
sbb
cmpb
xchg
aam
xchg
cli
insl
rcrb
aaa
and
mov
das
sub
addl
mov
idiv
out
xor
jno
xorl
fimull
fnstsw
cwtl
jo
add
cmp
stos
cwtl
mov
pushf
fnclex
dec
ret
inc
jmp
xor
ret
jne
jne
js
stos
sahf
fwait
repz
je
sub
push
adc
aam
inc
pop
pushl
lods
dec
and
jg
mov
outsl
rolb
mov
in
subb
xchg
jl
iret
rcrl
hlt
push
loopne
cmpsl
and
mov
push
lea
fnsave
ja
leave
mov
cmp
jo
aas
adc
xchg
xchg
out
mov
push
out
stos
lahf
mov
std
mov
test
mov
dec
dec
loope
mov
jle
addr16
and
bound
in
mov
out
mov
mov
mov
jp
lahf
sub
add
jmp
filds
sbb
gs
cmpsl
mov
xchg
cmp
testb
jg
out
dec
mov
dec
in
cltd
test
popf
cmp
xchg
push
lret
cmpsl
push
and
sbb
rcrl
mov
pop
fldenv
hlt
push
icebp
lock
mov
push
add
clc
push
dec
cwtl
lret
sbb
mov
pop
je
dec
int
cmp
lock
lock
jae
jb
push
pop
cld
sub
add
xchg
stc
pop
mov
cmp
imul
in
data16
pop
cmp
inc
fnstenv
push
mov
dec
lahf
sbb
pop
mov
ds
enter
and
mov
mov
outsb
push
inc
in
inc
xchg
repz
mov
imul
aam
dec
jae
or
stos
ja
ds
daa
pusha
scas
nop
ds
ret
cmp
pop
or
add
dec
inc
out
inc
arpl
pop
test
lret
outsl
inc
out
addb
mov
pop
sbb
dec
icebp
mov
js
pop
push
pop
adcl
das
cmp
test
mov
push
fisubs
add
popa
stos
lock
in
jle
and
adc
mov
shr
sahf
out
outsb
inc
imull
dec
ret
outsb
add
jne
stos
imul
jnp
cmp
cld
mov
cmp
cli
push
add
rorw
fdivr
aam
das
jp
in
inc
insl
icebp
and
daa
mov
arpl
dec
sarl
mov
mov
jmp
sbb
add
jmp
or
or
inc
adc
pop
jle
jl
jo
hlt
shlb
in
es
pop
add
jecxz
jns
shlb
jns
push
inc
or
inc
dec
repnz
loope
or
lret
fistpll
pop
ljmp
pop
jg
cmp
in
mov
dec
adc
into
dec
cmpsb
xchg
subl
adc
adc
xchg
adc
sarb
and
add
push
mov
andb
adc
or
das
or
mov
mov
in
popf
pop
inc
xchg
loopne
std
push
mov
popa
xor
insb
add
in
xchg
shl
xchg
mov
fcmovnu
xor
inc
cmp
pop
mov
jmp
test
call
adc
pop
sub
mov
xchg
testl
or
hlt
ret
xlat
jmp
popf
xor
loopne
call
cmc
push
xor
lcall
pop
cli
in
mov
or
push
pop
lahf
sahf
fsubrp
rorb
sbbb
mov
push
in
cmc
enter
repz
clc
mov
mov
xchg
adc
iret
mov
push
mov
sahf
stos
and
test
and
cmp
test
das
stos
pop
fwait
or
xchg
int3
bnd
and
in
arpl
push
les
pop
xchg
fists
sbb
mov
int3
out
dec
sti
mov
and
jno
xor
enter
pushf
fsubrl
fldcw
cmpsb
and
sbb
clc
dec
in
fisttpll
cmpsb
sbb
lret
fidivs
lock
jnp
movsb
and
adc
sbb
ret
inc
adc
sti
mov
sarb
or
gs
js
clc
pop
and
pop
sti
mov
les
or
jns
sbb
cmpsb
es
ret
test
sub
push
adc
in
into
repnz
pusha
mov
cmp
mov
xor
icebp
aad
je
dec
das
sub
leave
fcompp
imul
insl
out
sub
xor
js
push
xchg
int
sub
mov
cmp
mov
sub
test
lds
xchg
and
mov
dec
fadds
dec
fadds
mov
rcl
push
xchg
push
sub
loop
xor
pop
mov
lcall
imul
rcll
mov
sbb
jb
sti
push
scas
lods
cmp
insl
mov
scas
rolb
iret
or
imulb
mov
fcoms
add
lods
ja
mov
cltd
dec
mov
sbb
mov
call
in
xorb
push
jb
mov
jp
xor
fsub
jmp
scas
fistps
scas
push
insb
fsubl
pop
push
in
push
cmc
dec
jp
pop
adcb
mov
mov
inc
sbb
add
jecxz
inc
clc
ss
push
fldt
into
sbb
int3
push
xchg
call
add
cltd
push
lahf
cmp
ja
sbb
in
dec
sub
std
aad
cmp
inc
andl
or
sbb
shrb
das
add
add
call
mov
fmuls
cwtl
call
xor
xchg
jl
xchg
push
xchg
push
outsl
add
ret
das
loope
popa
fisubrl
js
cmpsl
sbb
add
cmp
jmp
pextrw
xor
push
loopne
enter
xor
dec
xor
incl
cmp
js
and
sbb
jp
pop
test
inc
imul
xlat
scas
xchg
dec
mul
imull
and
out
fldt
inc
lods
sbb
add
xchg
into
das
gs
push
xchg
dec
cmp
nop
shrb
pop
lret
add
or
in
inc
fcomp
loop
imul
sbb
xor
adc
shlb
pusha
adc
xchg
aad
lret
test
xchg
push
sbb
cmp
adc
or
inc
mov
outsb
cmpsl
sbb
mov
movsb
test
pop
dec
jae
in
mov
xchg
nop
xor
mov
shrb
cli
mov
stos
repnz
je
push
lods
sti
repnz
adc
dec
push
add
mov
stos
subl
dec
mov
cmp
ja
ret
jbe
pop
in
cmpsb
jmp
loope
sub
fwait
mov
push
ret
ss
dec
or
adc
mov
pushf
push
mov
out
mov
dec
xchg
stos
xor
push
jmp
and
push
negb
xor
sbb
xchg
push
xchg
dec
mov
fcmove
ficoms
clc
scas
mov
push
pushf
fstcw
jmp
sub
jne
or
jge
mov
push
xchg
loopne
movsl
and
ds
pop
adc
push
or
sbbb
cmc
fisubrl
jg
jb
mov
cmpsb
or
xor
jge
xchg
pop
ds
orl
gs
iret
jp
pusha
rol
test
cmp
dec
and
mov
test
movsl
pop
inc
sbb
push
jge
sub
fdiv
in
mov
movsb
jge
and
fdivl
mov
in
icebp
pop
and
stc
jg
jne
jne
cmp
aad
les
sub
cwtl
je
mov
pop
repnz
cwtl
cmp
jnp
xor
dec
push
lods
fwait
sbb
xlat
cmp
idiv
push
cmpsb
or
xor
mov
out
in
mov
sahf
negb
xchg
jg
popa
leave
mov
dec
arpl
inc
push
push
mov
hlt
pop
and
std
cltd
movsl
sbb
push
int3
push
nop
out
scas
push
dec
sbb
sahf
out
add
jb
adc
xlat
daa
xorb
fwait
insl
mov
xchg
xor
pop
and
sbb
jle
pop
iret
or
lret
jge
xor
sub
test
int3
xor
cld
xlat
push
jns
xor
fildl
shld
in
xchg
push
inc
sbb
pop
sub
loopne
pop
add
jno
insb
push
pop
adc
sub
fistpl
adc
and
push
mov
and
out
aad
repz
cmp
push
pop
cld
cld
or
mov
and
shlb
xchg
fiadds
je
adc
cmpsl
pop
loope
add
jae
hlt
lahf
clc
fcomps
call
push
stos
clc
push
or
int
out
sbb
fwait
xor
sbb
mov
xchg
loop
xchg
adc
in
lahf
jbe
adc
repnz
loope
and
add
enter
aaa
rorl
adc
outsb
cmpsb
mov
leave
outsl
and
dec
xor
push
xchg
mov
test
cmp
mov
xchg
insb
ljmp
in
cmpsb
add
ljmp
mov
sbb
je
push
in
fidivs
imul
cld
xchg
or
push
enter
inc
movsb
shrb
mov
dec
shlb
cmc
lea
aad
ja
dec
or
inc
rcr
mov
adc
push
in
or
push
pushl
xchg
inc
pop
xchg
out
xor
jmp
call
dec
js
rorl
shl
sahf
push
add
dec
add
pavgb
repnz
inc
mov
mov
imul
inc
mov
jb
mov
pop
loopne
cmp
mov
mov
xchg
xchg
imul
fidivl
ret
das
xor
sbb
pop
xor
xor
sbbl
ss
sbb
test
and
nop
fnsave
sti
and
dec
imul
scas
popf
ljmp
jbe
jg
test
dec
add
setge
lret
inc
gs
mov
sbb
mov
push
xchg
lahf
push
sub
addr16
imul
or
jbe
push
cli
ja
add
icebp
test
jae
jle
dec
xchg
sbb
lcall
cld
outsl
adcl
cmp
adc
pop
sub
and
lret
shll
cmpsb
mov
hlt
das
in
xor
jp
xchg
push
mov
mov
nop
out
sbb
fxch
fnsave
xchg
jo
pop
sbb
inc
idiv
stc
or
xor
clc
xor
or
cmp
sub
out
jbe
aaa
sbb
sarl
jmp
add
loop
sahf
add
jns
cli
lods
jp
cwtl
dec
jae
add
cltd
lret
xor
mov
sbb
jbe
inc
rcl
aad
sub
jge
aad
or
cmpsb
or
inc
cmp
pop
idivb
in
fwait
lret
sbb
arpl
scas
dec
dec
addr16
out
sbb
aam
outsl
aam
or
mov
push
lods
jno
jecxz
add
repnz
cmp
mov
inc
call
mov
insl
add
les
or
fdivl
loope
lock
jb
ljmp
nop
cmpsl
xchg
pop
mov
pushf
lock
subb
inc
mov
xor
xor
jg
xor
dec
jbe
inc
std
dec
das
divl
icebp
push
cmp
sti
adc
stos
bound
mov
or
bound
cmpsl
inc
out
dec
sbb
push
cmc
xor
popf
xor
sub
xchg
js
fcomip
jle
pop
pop
mov
or
popa
into
rcll
stc
leave
in
lahf
mov
gs
dec
stos
ret
xchg
lds
push
jmp
xor
mov
cmp
fiadds
push
shll
jmp
sub
dec
and
leave
push
dec
pop
dec
or
dec
test
dec
cmp
and
add
and
adc
pop
es
jge
dec
xor
imull
mov
inc
das
xchg
jns
cwtl
cmp
jbe
fdivrs
pop
xchg
ds
imul
outsb
jmp
divl
mov
dec
into
daa
jb
lods
insl
out
fstl
mov
inc
push
addl
lods
stos
mov
movsb
clc
pop
adc
lods
and
xchg
icebp
inc
mov
fwait
sbb
mov
out
mov
shlb
sub
test
sarb
xlat
dec
test
hlt
mov
push
nop
or
scas
call
inc
pop
in
mov
and
pop
push
adc
pusha
call
push
scas
push
fnsave
pop
fwait
pop
aad
add
ret
lods
or
out
xchg
mov
fwait
lahf
out
sub
cmpsl
sub
insl
stc
popa
jg
or
arpl
or
mov
sbb
cmp
das
arpl
inc
jmp
aaa
std
aaa
inc
ret
mov
mov
sbb
jecxz
jbe
xor
mov
xlat
std
repnz
jle
cmpl
inc
xor
push
mov
int
aas
scas
mov
inc
or
sub
iret
mul
cld
mov
cmp
jge
add
adc
lods
out
rorb
out
inc
and
cmc
popf
xchg
imul
fisubs
inc
sub
lock
xchg
push
pop
mov
fwait
xlat
pop
daa
and
dec
xchg
arpl
shll
stos
mov
jno
dec
sbb
mov
dec
fsqrt
jne
repnz
loop
sbb
dec
repnz
aam
daa
cltd
mov
imul
jge
repnz
das
lods
int3
test
je
scas
loopne
push
mov
xchg
hlt
cmp
xchg
testl
inc
outsl
and
lret
fcomi
push
xor
inc
push
loope
or
test
jle
das
mov
std
das
or
xchg
loope
mov
xor
jle
or
inc
inc
cmp
fimull
out
add
cmpsl
mov
sub
imul
rcll
sub
cwtl
xchg
xor
xor
les
mov
dec
xlat
and
dec
mov
xchg
xchg
cmp
insb
add
sbb
data16
lahf
rcll
xlat
sub
mov
jge
jo
bound
lock
aas
cld
ja
ficompl
jmp
out
jp
addb
xor
jns
inc
xor
pushf
inc
enter
cwtl
cmp
hlt
mov
and
iret
and
subb
mov
dec
adc
mov
shrb
or
test
out
insb
lods
mov
loop
inc
dec
pop
rcrl
adc
pop
outsb
adc
mov
pop
mov
xchg
outsb
jp
mov
sbb
lods
popa
mov
fwait
lock
cmp
sarb
into
jne
jbe
xchg
in
xor
sahf
inc
dec
lea
loopne
and
outsl
lods
notb
scas
test
repz
cmp
orl
pop
in
add
jmp
pop
call
dec
jnp
add
jle
mov
adc
outsb
subb
mov
adc
daa
xlat
push
inc
xor
int3
cmp
adc
ss
mov
popl
das
mov
pop
enter
std
clc
add
mov
jl
pop
jle
dec
mov
js
hlt
xor
or
fidivs
outsl
std
push
xor
jnp
scas
push
into
push
aas
cmc
aad
sbb
test
pop
arpl
push
and
xchg
xor
jbe
jge
test
cmp
testb
push
lods
push
jns
repnz
pop
xchg
int
mov
mov
sub
cmpl
xor
jo
sub
ds
cld
cmp
nopl
xor
jp
stos
sub
jns
push
xchg
inc
lods
mov
jno
cmp
lret
subl
lods
call
mov
push
mov
mov
pop
adc
out
dec
cs
mov
dec
mov
lret
mov
mov
js
sub
and
insl
cmpsl
inc
sti
and
pop
or
js
arpl
mov
xchg
cmp
aam
rorl
mov
mov
daa
pop
int
dec
lcall
call
jae
pop
ljmp
cltd
ficoms
repnz
jbe
mov
cmc
jno
repnz
hlt
push
mov
push
popa
sub
push
scas
bound
cmpsl
jmp
add
in
xorl
mov
fs
hlt
js
sub
int
push
mov
daa
int
shl
pop
push
push
inc
jae
push
in
iret
insl
sbb
jp
es
sub
jo
dec
orb
xchg
xchg
std
je
cmp
mov
lahf
push
shll
lock
mov
sub
popf
xor
jg
jecxz
nop
cwtl
xor
iret
jns
decl
hlt
xor
movsl
scas
sbb
cmp
mov
mov
xchg
adcl
pusha
jl
and
xchg
jae
lods
mov
jmp
test
mov
push
inc
jne
push
test
loopne
pop
xchg
cmp
insl
pop
jl
loope
dec
push
lahf
sub
sbb
out
subb
inc
ja
sbb
aad
sbb
fisubl
pop
jno
adc
mov
push
add
fs
cmp
fnstsw
test
insl
jae
mov
pop
xchg
cmp
daa
sbb
lret
fcomp
in
mov
ret
dec
jmp
jno
or
cmp
lods
cmpsl
addb
mov
test
and
sbb
lods
std
mov
es
js
pop
sub
rclb
sahf
js
and
sub
rcr
ret
pop
jmp
cli
insb
fcomps
ja
movl
xor
aam
je
out
xchg
stos
dec
jno
push
frstor
lods
ret
es
fst
xchg
jae
mov
mov
pop
mov
mov
xor
inc
push
rclb
hlt
outsb
cmpsl
cld
movsb
lret
loope
repz
mov
icebp
mov
inc
push
jae
jmp
push
or
fucomip
lahf
aaa
fmul
adc
jae
shlb
ficoms
mov
dec
insl
mov
pop
xor
cmpsb
push
fnstsw
addr16
jmp
es
scas
sub
xchg
movsl
insl
stos
lcall
inc
orl
pop
mov
dec
dec
or
adc
sbb
sarb
fwait
arpl
imul
popl
ljmp
mov
sub
ja
addr16
push
fisttpll
jg
jb
divl
icebp
sub
ds
das
pop
and
dec
dec
jne
out
call
mov
dec
loop
scas
hlt
out
test
dec
mov
lcall
not
xchg
mov
xor
iret
add
shlb
and
mov
stc
sub
aaa
pop
lock
scas
mov
inc
in
fs
mov
and
adc
fisttpll
dec
mov
iret
scas
or
mov
cmp
mov
and
xor
xchg
lret
xor
add
stc
mov
xor
test
aas
pop
cli
pop
add
stos
rclb
pop
imul
jmp
rclb
rcrb
mov
icebp
jns
sbb
or
pop
xor
out
jmp
add
popf
push
dec
sbb
mov
xor
mov
push
movsl
jmp
push
jmp
xchg
mov
subb
fdivrl
adc
out
fs
xchg
jno
sub
push
in
jg
cmp
arpl
push
xchg
add
xlat
mov
add
sbb
lcall
pop
arpl
inc
out
mov
mov
xchg
ljmp
clc
loop
sbb
jne
js
mov
sbb
sbb
add
leave
je
cmc
sub
push
stos
in
popl
imulb
daa
xchg
fildll
mov
mov
mov
pop
daa
push
fyl2x
ds
inc
hlt
mov
data16
clc
cmp
xor
es
mov
cwtl
pop
sbb
xor
fld
mov
cltd
dec
loop
movsl
cmp
jnp
xorl
push
inc
push
sbb
sar
or
fucomip
in
in
jp
daa
test
adc
sti
in
les
dec
add
and
xor
fwait
js
mov
lret
addl
popf
dec
add
fildll
push
out
shll
out
pop
stos
mov
jb
orb
movsb
movsb
out
inc
jae
imul
sub
and
and
movsl
jg
outsb
fcoml
cmp
adc
cld
cmp
adc
outsl
das
arpl
mov
scas
into
jge
push
cmp
bound
xor
add
shrl
dec
daa
mov
jae
pop
in
add
call
ja
xchg
daa
add
mull
leave
mov
xchg
jbe
mov
xchg
lock
test
push
pop
imul
test
xor
pop
in
lds
sarl
aaa
fs
cmpsl
pop
push
inc
and
xorb
inc
sbb
and
out
pusha
sbb
lcall
cmpl
dec
adc
cmp
rcrb
out
cld
clc
jmp
push
mov
pop
push
addr16
mov
ud2
ljmp
stos
pop
pop
jnp,pn
mov
mov
xor
jnp
jne
incb
xchg
add
xchg
cmpsl
mov
dec
idivl
aad
out
or
testl
add
xor
push
jae
ficoml
sbb
call
es
pslld
sti
repz
dec
outsb
mov
inc
sarl
lods
clc
das
repz
sub
mov
push
xchg
andb
js
cmp
sbb
insl
aas
jnp
lock
mov
and
adc
push
mov
fwait
js
test
mov
mov
xchg
fimull
fdivr
mov
int3
pop
lret
fcmovne
add
jmp
sbb
lret
adc
aas
lret
pop
jne
cs
leave
pushl
lahf
sbb
sbb
fdivs
push
ds
mov
sti
test
cltd
mov
shlb
jmp
or
shll
jae
mov
loopne
ret
hlt
mov
pop
icebp
push
xor
popf
xor
mov
push
xchg
cmp
out
movsb
adc
fcoml
dec
fnsave
dec
lret
jle
cmp
fwait
popf
mov
test
psubusb
push
shl
add
xchg
push
pop
inc
je
mov
mov
loop
pop
xor
insb
aaa
das
fst
das
sub
sbb
cwtl
shlb
ret
jp
ret
push
ret
sbb
sbb
xchg
fsubrs
rorb
dec
std
xchg
dec
ljmp
push
xor
fdivp
pop
xor
pop
jo
push
nop
rcll
mov
mov
mov
and
adc
xor
jl
xchg
aam
leave
adc
xlat
mov
aad
add
test
jmp
les
dec
int3
mov
int
fs
imul
setne
mov
sub
ret
cld
add
sbb
or
add
dec
das
cmp
xor
add
outsl
outsl
mov
mov
pop
dec
pop
and
orl
repnz
jecxz
xchg
adc
cmp
repz
jge
fwait
jno
enter
fldcw
xchg
aad
fidivs
jl
cmp
xor
stc
mov
insb
pop
jl
pushf
jmp
pop
test
push
push
xor
leave
jl
popa
fs
add
adc
dec
fisubs
mov
cmpsl
lds
jo
mov
adc
jge
lret
pop
and
jle
pushf
fsubl
lods
icebp
pop
or
jb
out
sub
add
or
inc
ljmp
pusha
out
cmpsb
insl
les
pop
in
pop
inc
xlat
pop
push
jo
push
out
aad
sbb
mov
mov
inc
adc
std
out
jae
inc
lds
adc
scas
jg
cld
xlat
push
adc
mov
imull
and
add
mov
cmpsl
hlt
arpl
sub
lret
icebp
sti
lcall
mov
or
xchg
je
sahf
jnp
inc
push
gs
mov
bnd
cmp
xor
push
push
jecxz
rcr
pop
lds
jp
lock
decl
mov
repz
ret
int
ret
xchg
sub
ljmp
shlb
out
insl
xchg
xor
cmc
push
adc
sbb
push
mov
or
imul
ret
fs
sub
mov
repz
cli
xorl
sbb
rcll
scas
jge
push
ljmp
rcll
adc
sub
dec
js
mov
out
dec
int
fidivrl
or
pop
push
add
gs
push
push
push
add
jo
test
jns
clc
xor
push
lcall
pop
shl
aaa
sbb
xor
shr
xchg
int3
inc
sbb
jbe
dec
dec
or
jecxz
add
in
inc
outsl
pushf
jge
sbb
lahf
push
jp
xor
fstp
adc
sahf
shrb
js
in
stc
sbb
fcoml
sub
xchg
cli
cmp
push
daa
mov
mov
pushl
lcall
adc
cmp
mov
addb
je
inc
or
push
imul
xchg
mov
push
jnp
dec
cli
dec
xchg
jnp
lods
aas
rolb
rol
pop
sub
test
cmc
cld
and
aas
adc
lods
fdivl
scas
fdivrs
cwtl
push
jmp
pop
loopne
iret
push
sbb
sub
into
dec
mov
cli
mov
cmpsl
test
sub
push
ficoms
jo
fstpt
add
cmp
or
bound
inc
mov
out
repnz
ret
arpl
and
stos
jle
jns
scas
addr16
xor
push
jge
add
lcall
mov
push
or
mov
lret
cmp
sub
mov
into
lods
scas
add
loopne
mov
mov
shll
nop
mov
dec
in
stc
push
push
dec
sub
jno
push
sbbl
fistps
jl
clc
fucom
int
xchg
xchg
sarb
ret
cs
js
bound
add
repnz
and
adc
int
popf
testb
popa
mov
and
sub
mov
xor
jmp
lds
mov
jge
xlat
pop
or
adc
mov
adc
outsb
inc
pop
lock
sbb
rclb
xchg
xchg
mov
test
mov
xor
in
pop
inc
and
sub
mov
fst
sbb
mov
sbb
jo
das
popf
and
cmp
int3
ja
mov
xlat
adc
and
pop
fsts
cmpsl
lods
loope
out
int3
push
out
jnp
clc
test
xor
stos
mov
jno
or
lods
xor
int
sbb
jne
sbb
xor
out
loop
or
enter
dec
add
jb
or
ds
mov
dec
sbb
mov
popf
push
enter
mov
popa
aam
push
ret
xlat
gs
lea
push
popf
mov
xchg
lahf
divb
sub
cld
popf
stos
mov
mov
mov
xor
fidivrs
pop
jne
adc
push
pop
push
jnp
cld
mov
ret
xchg
xorl
in
mov
pop
jne
fwait
mov
push
dec
insl
shlb
dec
push
mov
push
stos
and
jo
fisubl
xorl
es
iret
out
mov
stos
adc
adc
xchg
aam
lods
cs
push
aas
inc
mov
movsb
mov
mov
dec
sub
cmp
xchg
xor
ljmp
mov
and
push
mov
sarl
outsl
mov
out
lea
lahf
pop
je
mov
shll
inc
out
std
imul
xor
ja
in
ja
jmp
es
cwtl
fsubs
out
mov
add
push
jae
and
inc
push
call
outsb
xchg
das
mov
shlb
xchg
movsl
mov
push
mov
cmpsl
sbb
lahf
nop
adc
loop
lahf
inc
bound
push
or
xor
scas
das
push
add
lret
andb
mov
lret
push
sub
push
out
pop
xchg
or
in
mov
inc
xor
mov
int3
aaa
fs
sub
sbb
lods
or
xchg
mov
mov
xor
cmc
ss
push
jecxz
sbb
pop
loop,pn
into
inc
ss
jg
mov
inc
push
push
pop
loope
stc
push
inc
sbb
cmp
in
out
imul
pop
scas
fistpll
sub
xchg
pop
fstps
data16
popa
sub
popa
inc
add
rorb
js
xor
add
xor
inc
cmpsb
js
mov
mov
lds
cmp
ljmp
scas
dec
adc
and
and
fucomp
adc
and
mov
loopne
das
xchg
sti
andl
fcomp
testl
ljmp
xlat
inc
outsb
out
or
jecxz
ja
js
push
add
scas
ljmp
fiaddl
sti
push
pop
xchg
fs
je
lods
push
jmp
cmp
ja
xor
ds
and
shl
xorl
sahf
pop
jg
and
xchg
push
mov
sbb
ja
cmpsb
sti
aas
arpl
xchg
xchg
xchg
out
pop
xchg
mov
ss
dec
jl
pop
sbb
ret
push
into
sub
inc
in
stos
cmp
test
test
dec
dec
adc
xchg
fs
lahf
scas
leave
movsb
outsb
es
arpl
fwait
out
add
inc
insl
ja
lds
adcb
xchg
or
sub
adc
mov
push
push
fst
into
icebp
or
mov
add
shl
jo
mov
test
push
push
xor
lds
jo
cmpsb
jne
gs
xchg
iret
insl
ret
es
adc
out
xchg
sbb
clc
out
inc
icebp
ret
cmp
jmp
lods
loope
stos
sbb
loopne
int
pop
push
clc
add
lret
scas
dec
xor
aam
adc
push
inc
jae
es
jbe
pop
cld
inc
jae
insb
sub
add
jge
lcall
xchg
push
movsl
push
sbb
sbb
cmp
cmp
pushf
test
sbb
adc
and
sub
mov
mov
stos
in
int
fwait
xchg
ret
sub
fiadds
nop
push
and
dec
into
lods
into
mov
negl
or
scas
imul
jnp
std
in
xor
in
into
cmpsl
cmp
jb
sbbb
icebp
ss
jmp
jle
js
inc
adc
inc
lcall
int3
in
rolb
inc
mov
push
dec
xor
jl
xchg
push
aam
fcmovb
insl
and
addr16
mov
mov
sbb
addr16
sti
mov
jmp
lea
push
ja
stos
punpckhbw
inc
push
and
outsb
adc
xchg
data16
add
jmp
jno
push
and
cmp
and
pmullw
xchg
xchg
add
mov
push
jno
add
add
jmp
outsb
repnz
cli
xchg
cmpsb
dec
mov
mov
lea
js
add
dec
mov
nop
push
lcall
repz
mov
arpl
sbb
jg
sub
fdivrl
or
and
jl
xor
fdiv
popl
lods
incl
add
push
repz
movsb
sub
lock
dec
pop
fs
out
sbb
bound
pop
and
push
mov
mov
mov
mov
mov
push
add
and
fldcw
fildl
mov
mov
nop
test
enter
sahf
lods
imul
adc
push
ljmp
int3
push
jno
mov
jns
xchg
loop
jbe
das
jp
outsl
adc
je
mov
xchg
sub
fiadds
inc
sbb
sbb
ds
into
test
ret
push
pop
popa
cli
decb
pop
aaa
inc
sub
mov
adcb
lea
ja
dec
stos
mov
out
inc
insb
nop
sub
imul
push
or
sbb
inc
mov
mov
inc
mov
mov
in
xor
and
mov
mov
mov
push
add
bound
mov
loope
xchg
xchg
mov
popf
pop
es
sbb
sub
sti
pop
stos
xor
push
cli
subl
mov
inc
aad
jg
mov
pop
inc
in
pusha
cmp
and
sub
xor
into
fs
test
mov
mov
and
daa
push
xchg
das
cs
inc
repnz
out
arpl
lods
push
xchg
add
shll
or
loop
fwait
scas
mov
or
jns
jg
adc
dec
sub
or
orb
xchg
xor
call
aad
scas
jp
or
cli
inc
jecxz
mov
inc
sub
scas
pop
xchg
mov
inc
insl
xor
shrb
inc
loope
por
ja
mov
ljmp
add
aas
fimuls
jae
aad
adc
insb
nop
adc
imul
ret
ss
imul
pusha
sahf
mov
mov
stos
inc
or
nop
pop
imul
or
idivl
mov
movsl
sub
lds
dec
mov
cmp
cmp
sbb
xor
aaa
nop
mov
push
shrl
fisttps
and
mov
dec
jb
clc
sub
or
call
inc
xchg
push
stc
mov
push
adc
add
addr16
push
rclb
in
mov
lods
inc
dec
dec
test
fstp
fisubs
test
sub
jns
imul
mov
pop
xchg
and
out
daa
in
js
cmp
nop
sub
test
loopne
dec
movsl
popa
out
adc
push
lret
scas
xor
xchg
addr16
inc
xor
fidivrl
in
scas
sub
ljmp
xchg
jg
xchg
out
cltd
movsb
cmpsl
sub
fstpl
fstl
mov
out
adcl
push
mov
push
adc
rorb
dec
es
adc
lret
cld
push
xchg
and
xor
out
cli
sti
xchg
mov
add
push
pop
xlat
rorb
xlat
mov
jmp
add
inc
jge
dec
loope
jle
aaa
fs
out
popl
lock
mov
or
xor
mov
push
repnz
repz
lods
imul
dec
jmp
in
and
inc
in
popf
sbb
lds
sbb
xchg
iret
in
test
sub
cmp
cmp
jno
fdivs
daa
fadd
inc
testl
pusha
push
icebp
sbb
inc
stc
mov
jns
cmp
in
in
std
jb
jp
pop
lds
xchg
mov
pop
mov
scas
cmp
mov
mov
mov
stos
mov
mov
imul
push
cld
lcall
push
rolb
cmc
mov
or
into
sbb
into
std
call
xchg
fistpll
insb
cld
int3
sahf
cmp
stos
pop
mov
sbb
test
push
add
add
out
fwait
lret
aad
imul
jg
ror
xor
std
mov
xor
jae
filds
andb
jp
inc
dec
and
outsl
dec
mov
inc
push
adc
mov
fwait
icebp
je
in
pushf
jmp
lahf
mov
fwait
dec
dec
mov
pop
loop
je
mov
jp
adc
sub
jns
js
call
xchg
add
call
sbb
mov
xor
out
pop
or
outsl
lea
test
outsb
mov
sub
jns
sbb
pop
ljmp
enter
add
lret
subl
sub
jge
aam
mov
adc
lahf
orb
ror
out
xor
adc
repnz
gs
cld
mov
lahf
pop
fs
lret
ficoml
fcoml
scas
dec
push
out
orl
inc
xor
test
les
inc
ret
pushaw
xor
rclb
out
dec
xlat
add
cli
dec
loope
lods
gs
jns
xchg
mov
push
xor
pop
sub
xchg
sti
and
adc
add
arpl
faddl
pop
dec
jmp
outsl
mov
xor
and
shrb
fildl
test
xchg
or
int3
je
js
inc
flds
pop
pop
imull
mov
mov
push
dec
mov
fsubrl
fidivrs
dec
scas
fmull
add
fsubrl
sbb
int
clc
out
xor
imul
dec
mov
enter
cmp
xor
dec
jg
stos
imul
imul
inc
insl
stos
subb
add
xchg
push
int
dec
sub
xchg
aam
int
cltd
sub
jnp
cmc
push
mov
adc
mov
lods
cmp
vmovmskps
stc
add
jnp
adc
jne
imul
pop
cwtl
cmp
mov
sbb
je
mov
movsl
call
add
push
push
dec
jne
push
cmp
addb
sbb
leave
das
insb
push
jo
add
dec
pop
rcl
pop
cmc
and
out
jecxz
fisubl
repnz
lods
add
mov
hlt
xchg
je
addl
shll
pop
cmc
mov
push
or
xor
xchg
data16
incl
xlat
les
mov
and
pop
cmpsl
cmp
test
scas
aad
mov
and
dec
xor
mov
xor
pop
lea
mov
pop
sub
dec
movsl
rclb
inc
mov
push
mov
push
les
push
adc
cmpl
pop
test
add
pop
lcall
push
aad
inc
push
into
xchg
pop
cwtl
adc
adc
and
mov
imul
lds
pop
sbb
jmp
adcl
jns
jbe
mov
mov
out
scas
xchg
jecxz
mov
jb
sub
push
jmp
jno
mov
mov
test
or
loop
pop
sbb
add
int3
lock
jnp
mov
and
mov
xchg
in
in
pop
inc
dec
add
sarl
push
push
test
pop
adc
cmpsb
mov
ucomiss
mov
frstor
aad
pop
and
cmp
jae
repnz
jnp
cld
std
xor
push
xlat
push
in
mov
jno
fsts
push
push
push
cmp
or
lcall
sar
daa
cs
cmp
mov
idivl
jg
fidivrs
add
jp
pusha
lahf
or
popf
aaa
and
jmp
leave
mov
pop
or
out
cltd
jns
cmp
fnsave
sub
cli
push
loope
pop
xchg
xchg
cltd
jcxz
shlb
nop
mov
jnp
cmc
mov
xor
jae
mov
push
mov
mov
pop
adcl
push
shl
or
dec
cmc
add
xor
ret
sub
or
pop
jecxz
mov
sti
iret
dec
xor
jge
jbe
in
inc
dec
mov
cltd
jo
pop
dec
dec
imul
jecxz
sub
sub
add
add
adc
xchg
in
and
push
mov
jnp
sub
dec
or
add
xor
sub
lods
jp
add
mov
xchg
enter
mov
outsb
lock
addr16
dec
ret
mov
pop
jge
push
daa
hlt
cmp
fwait
rcrb
jnp
and
scas
xchg
or
mov
push
xchg
cmp
and
push
leave
pop
icebp
cltd
fists
sbbl
outsb
mov
pop
lahf
push
dec
cs
in
or
mov
dec
lret
xor
ret
cmp
outsb
mov
movsl
mov
xor
mov
xor
cli
fxch
mov
pop
lock
cmpsl
pusha
iret
jg
in
cmp
dec
mov
cmpb
mov
in
cmp
inc
iret
push
cwtl
sbb
call
dec
mov
mov
cmp
pop
sbb
push
pop
fsqrt
cli
cltd
push
mov
dec
mov
stc
push
mov
rcrb
leave
shl
push
adc
fistpll
cli
sbb
les
jne
add
and
das
imul
ss
cwtl
mull
sub
cmp
dec
lods
mov
mov
sub
jae
call
sbb
push
sbb
xlat
push
out
movsl
repnz
jge
pop
xchg
and
test
pusha
out
dec
xchg
mov
lcall
push
push
add
cmc
push
mov
outsb
pcmpgtw
sarb
add
xchg
cmp
int
cmpb
dec
sub
sbb
cli
lcall
and
mov
cmp
sub
sarb
cltd
ds
popa
outsl
out
xchg
cli
dec
int3
sbb
dec
and
scas
mov
add
mov
test
xor
ss
sahf
mov
clc
setge
test
mov
insb
scas
sub
mov
in
push
aaa
inc
shrb
and
loope
xor
xchg
roll
cmpl
cmp
add
dec
cmp
mov
rclb
mov
fs
testb
out
sahf
cmp
ljmp
dec
cmp
ficompl
stos
add
or
out
daa
xchg
dec
cmp
std
insl
hlt
xchg
arpl
adc
sahf
mov
mov
sbb
sbb
and
pop
cmc
push
enter
mov
push
test
xor
fs
cs
add
adc
mov
xchg
mov
xchg
mov
xchg
inc
xlat
js
dec
fdivs
pop
and
out
bound
shrl
sbb
fsubrl
mov
into
into
push
push
xor
cltd
hlt
enter
push
xchg
mov
inc
movsl
test
fstps
push
or
fimuls
nop
inc
xchg
imul
lcall
sub
or
jecxz
inc
adc
adc
outsl
in
fwait
jb
push
or
mov
aad
pop
ret
fisttps
mov
lret
adc
stc
mov
cwtl
ljmp
jne
data16
fucom
ja
lahf
ja
in
push
xlat
test
clc
xchg
mov
mov
adc
cld
mov
sbb
scas
pop
cld
push
addr16
mov
and
and
shlb
and
jle
fistps
and
stos
jg
icebp
inc
sub
mov
rcl
add
repnz
add
xchg
out
jmp
lret
jo
sub
push
aaa
push
fs
iret
aas
rcll
or
insl
decb
dec
push
incb
mov
sti
add
push
es
jmp
and
js
out
mov
neg
mov
in
mov
lret
cs
or
push
in
push
and
cmc
filds
aam
fistpl
xabort
inc
mov
scas
pushf
arpl
ficomps
out
jo
imul
ja
sbb
dec
and
mov
les
imul
into
sti
xchg
loop
push
pop
dec
mov
out
jp
fcmovne
push
xchg
and
rorl
js
pop
mov
dec
sbb
jae
mov
push
mov
imulb
movsl
lret
xor
fwait
dec
mov
xlat
clc
inc
cmp
bound
ret
fwait
pop
cmp
dec
add
or
push
mov
cs
es
or
xor
sbb
mov
jg
out
inc
addl
leave
adc
pop
cmp
adc
and
pop
fsubl
neg
pushf
push
sbb
sub
idivb
test
xchg
xchg
les
jmp
add
mov
cmp
jns
xchg
cmp
sub
arpl
aam
sub
inc
js
sbb
mov
add
xlat
mov
mov
jne
shll
sub
std
cwtl
mov
iret
popa
mov
mov
mov
add
pop
arpl
cs
xor
pop
lret
popa
push
out
sbb
add
inc
pop
sub
cs
and
cmovl
cmp
xchg
test
loope
lock
data16
insl
fadd
lods
lods
test
push
xor
pop
xor
pop
aaa
and
adc
push
loopne
ljmp
scas
lret
inc
loope
sahf
idivl
test
add
jno
mov
pusha
pop
mov
scas
int
lahf
add
xchg
mov
pop
xchg
int
sub
adc
lcall
dec
pusha
sub
mov
in
fstps
pop
test
cmp
xor
fs
sbb
pop
xchg
sarl
lock
inc
jg
push
xchg
int3
inc
mov
mov
adc
les
push
popa
adc
xchg
pop
jecxz
out
je
and
inc
xor
out
push
aas
repz
add
insb
dec
movb
xor
mov
popa
add
mov
sahf
leave
inc
inc
test
lret
xchg
inc
pop
mulb
negl
sbb
cmc
in
out
test
leave
negb
dec
pop
lods
stos
fmul
dec
test
fwait
sbb
xchg
fnstcw
inc
xor
jmp
mov
movsl
test
lahf
jne
mov
and
pop
fs
or
fcoms
sahf
or
scas
push
cltd
negb
popa
out
mov
push
sub
cmp
aad
push
rcrb
int
in
ja
cmpsb
hlt
in
and
xlat
sbbl
sub
jge
ss
dec
push
mov
stos
out
mov
and
adc
mov
nop
aam
ljmp
jmp
icebp
inc
loope
jo
clc
dec
decb
aam
or
jecxz
ror
hlt
pusha
adc
xchg
inc
mov
mov
sahf
xchg
mov
cmc
dec
push
pop
leave
mov
jae
fs
sbb
fdivp
cmc
mov
shlb
ja
adc
mov
test
fidivs
mov
jne
push
or
repz
and
dec
ljmp
mov
add
xchg
xor
mov
insb
cmp
or
paddsw
lahf
stos
mov
inc
cmp
cmp
inc
push
pop
ret
push
sub
arpl
lods
and
mov
cmc
jle
inc
pop
stc
arpl
push
cld
jne
and
imul
nop
popa
in
gs
ss
in
repz
push
insb
adc
dec
sbb
orl
mov
sbb
pop
cmp
and
popf
das
fnstsw
pop
and
cmp
dec
jno
inc
jge
inc
add
mov
push
jns
scas
iret
mov
lods
shrb
and
push
std
repnz
aam
ljmp
sti
fwait
aaa
dec
sbb
loope
jmp
xor
adc
mov
ret
aam
cmp
fdivs
imul
fcoml
mov
aad
sub
cmp
lods
push
rclb
pop
in
mov
ret
pusha
js
pop
push
sub
xor
adc
sub
lar
pop
mov
jno
cs
ffreep
rol
cmp
mov
mov
pop
aam
cmc
hlt
sbb
fnsave
pop
adc
pop
lods
jae
ds
jge
stos
psadbw
jle
adc
cltd
jl
cmpsl
movl
cmp
mov
jne
scas
xorb
mov
adc
xor
fmul
dec
dec
adc
or
jge
fnsave
aad
inc
adc
fmull
push
jle
push
xchg
push
mov
out
in
lock
mov
dec
jbe
jecxz
divl
out
out
cmp
jp
push
pushf
push
push
ljmp
jne
in
mov
gs
xchg
xchg
fcompl
jp
mov
dec
pop
push
jmp
ror
pop
xor
pop
push
popf
adc
fstpl
pop
mov
pop
cwtl
jge
pop
imul
push
les
and
repnz
int
cltd
not
mov
cwtl
pop
repnz
xchg
ret
sarb
fstpt
jb
testb
jge
test
fildll
ljmp
fstpt
pop
xlat
mov
jnp
imul
cmp
xchg
dec
mov
repz
or
xchg
fisubs
xchg
fdivr
add
inc
inc
push
mov
mov
outsb
cli
mov
dec
scas
add
out
and
call
cmp
jmp
or
movsl
cmpsl
lods
je
adc
mov
mov
lods
popf
mov
xchg
mov
sub
ret
mov
mov
xor
stos
inc
popa
test
mov
imul
xchg
andl
inc
mov
dec
les
shl
scas
mov
lret
roll
cltd
mov
jl
arpl
leave
cld
scas
fsubl
fwait
lods
inc
lods
imull
aaa
mov
inc
out
xchg
cmp
clc
xor
imul
mov
std
adc
add
sbb
xacquire
shll
jle
outsl
dec
pop
sbb
mov
dec
jp
cld
inc
xor
out
xchg
dec
jle
outsl
repnz
repz
jp
mov
sub
stc
mov
xor
push
fwait
mov
xor
das
mov
pop
cmc
jp
pop
fstpl
sahf
and
subb
mov
stos
lcall
xor
adc
out
lods
mov
xchg
push
sahf
or
push
loope
adc
add
jne
mov
in
out
jne
mov
cmpsb
out
sub
aam
enter
lret
sbb
cmp
decb
clc
pop
imul
mov
dec
js
andl
loopne
mov
icebp
mov
in
ret
pushf
les
mov
dec
mov
les
sbb
mov
mov
adc
in
xchg
dec
or
fimuls
std
xchg
cmp
mov
push
cmp
sbbb
jne
pop
scas
push
jmp
sub
test
pop
std
xchg
or
sahf
lds
mov
call
xlat
pop
loope
lret
sub
and
add
push
dec
insb
out
xchg
sbb
mov
sub
xchg
data16
stc
cmpb
jg
mov
cmp
sub
jb
mov
int3
or
decb
cmc
int
icebp
inc
std
pop
add
imul
add
inc
adc
ret
lds
sbb
repz
inc
and
sbb
push
sbb
add
test
xlat
sbbl
push
xchg
mov
aam
xchg
inc
shrb
in
push
push
inc
incb
hlt
jp
dec
mov
fsubrp
lret
ret
sbb
clc
insb
inc
push
scas
add
add
lret
les
icebp
pushf
xor
sbb
sahf
shlb
lods
mov
call
in
adc
jne
nopl
vmovaps
popa
cmp
pop
jmp
add
push
add
cmpb
pop
and
mov
push
pop
pop
clc
rcr
sub
dec
pop
mov
push
adc
inc
and
mov
out
mov
leave
and
add
mov
adc
xchg
and
and
pop
xchg
dec
add
sahf
pop
jecxz
push
add
push
mov
and
xlat
xchg
popf
hlt
shlb
movl
aam
wbinvd
sbb
iret
cmp
movsb
mov
mov
jno
xchg
insl
jno
sub
sbb
or
dec
imul
rcrl
adc
jmp
mov
xor
ret
inc
sbb
cwtl
std
cmp
mov
mov
sub
sbbl
movsl
test
dec
loope
sub
idivl
shll
dec
and
or
rolb
std
xchg
cmp
hlt
jmp
test
sub
pushf
adc
dec
scas
int3
jecxz
xor
adc
popa
or
dec
mov
mov
jl
in
dec
jle
stos
add
pop
pop
mov
jmp
js,pt
pop
sarl
bound
xchg
loope
aaa
or
xor
xchg
repnz
arpl
ret
mov
mov
xchg
adc
adc
xchg
mov
or
xor
mov
sub
push
test
test
lods
jp
or
dec
adc
xor
xor
push
xchg
daa
xlat
mov
pop
stc
mov
test
fst
out
xor
out
sahf
cwtl
int
cltd
outsb
mov
mov
mov
aaa
fcoms
lods
jnp
push
pop
add
sahf
inc
sub
jecxz
cmp
or
icebp
lods
mov
push
xchg
cmp
mov
pop
lahf
cmp
push
cmp
stos
addr16
xchg
test
push
add
xor
pop
mov
sahf
sub
insb
test
repnz
jge
fcomp
lock
xchg
imul
shl
imul
fldenv
loopne,pt
sbb
and
lods
ret
ffreep
pop
mov
xchg
or
es
and
xchg
mov
mov
and
popa
lahf
and
jo
mov
inc
test
add
jno
sub
loop
out
add
or
jo
mov
push
and
sahf
adc
aaa
out
shr
gs
pop
sti
daa
xor
rol
rcrl
and
mov
cmp
push
pushf
ret
ss
fwait
sub
loopne
sbb
mov
hlt
xchg
int3
lret
enter
jmp
sbbl
add
adc
mov
out
sbb
rolb
dec
push
call
push
call
fldl
movsb
lds
loopne
xor
jae
dec
popl
xlat
cmp
jg
pop
pop
cs
pop
les
pushf
int
rolb
push
xor
mov
notl
adc
mov
jle
das
imul
or
push
add
adc
iret
push
fstpt
jge
pop
xchg
frstor
mov
mov
loop
lods
sub
cmpl
mov
add
adc
fldl
push
mov
inc
mov
xor
stos
sbb
loop
add
or
xor
clc
push
lods
inc
or
xchg
jb
rcll
cltd
outsb
in
loop
scas
je
mov
cmp
cmpsb
inc
and
mov
lret
dec
inc
cs
inc
cmpsl
xchg
lret
cmpsl
jae
xor
push
adc
jge,pt
cmpsl
mov
mov
dec
sti
cmp
push
rcrb
ret
mov
insb
lea
bound
fdivs
mov
xchg
and
xor
in
lds
lds
test
imull
xchg
mul
push
inc
lods
test
or
imulb
hlt
and
call
rorl
mov
fwait
scas
aam
xchg
mov
ficoms
push
cmp
outsl
aas
imul
mov
in
pop
add
mov
mov
das
adc
into
leave
dec
and
rorb
test
int
loope
out
and
jnp
xor
shrl
jae
adc
fcom
mov
mov
lahf
jo
add
add
xor
jmp
sbbl
sbb
jge
sub
arpl
xchg
adc
jle
ja
pop
out
xchg
cmc
rorl
jno
shlb
mov
xchg
loope
mov
pop
jne
lock
ds
dec
mov
pop
inc
push
imul
push
adc
add
adc
sub
nop
test
enter
xor
cmp
stos
jp
test
lahf
cli
aam
sub
in
je
imulb
push
jle
jnp
sub
jb
fs
popf
jp
out
movsb
std
adc
xchg
jle
fbstp
je
sub
les
mov
mov
or
sbb
imul
cmpsl
mov
int3
mov
notb
dec
jp
mov
push
idiv
pop
in
lret
sbb
push
mov
hlt
pop
fdecstp
das
rcll
stos
adc
push
push
fs
dec
mov
data16
icebp
xchg
das
or
pusha
and
ss
loopne
jp
outsb
xor
xchg
arpl
dec
jno
push
mov
in
mov
pop
dec
lcall
fst
lahf
xchg
mov
jg
das
adc
push
outsl
push
sbb
sti
dec
push
fists
aaa
sbbb
pop
and
sarl
fisubl
insb
adc
in
test
mulb
mov
xor
dec
inc
mov
in
ret
sbbb
add
add
aas
pop
addl
shr
aad
cmp
xchg
sub
adc
ror
sub
test
cmp
cs
mov
insl
movsb
es
or
sar
sbbb
or
cltd
stos
push
jmp
mov
jnp
or
mov
popf
jns
outsl
xlat
lcall
push
mov
mov
lods
cmc
add
cmp
mov
test
and
inc
jne
mov
adc
mul
lods
andb
dec
dec
sbb
lods
repz
jo
dec
scas
xchg
loop
jns
xchg
push
push
lea
xchg
fldenv
addb
xor
stos
lcall
sbb
xacquire
scas
cwtl
and
push
in
inc
aaa
jecxz
cltd
aad
sub
xorb
mov
dec
fcoms
mov
enter
lcall
sbb
fsubs
jno
sarb
push
jg
mov
rolb
mov
jg
jp
push
fidivrs
mov
inc
mov
lea
lret
lods
frstor
shr
imul
xchg
loopne
xchg
push
repz
inc
aam
lods
and
inc
cmpsl
popf
add
cmc
mov
and
popf
sub
das
xchg
test
push
cld
fnstcw
movsb
enter
cmp
inc
enter
mov
enter
mov
faddp
push
dec
pop
ljmp
adc
mov
cmp
xor
pushf
lahf
cmp
push
test
js
loope
pop
leave
pop
enter
imulb
into
sti
inc
mov
xchg
sarb
or
jne
push
aam
arpl
mov
and
aas
mov
and
mov
mov
subb
pusha
fsin
int3
mov
cs
lahf
mov
lahf
mov
icebp
inc
mov
fdivp
ja
or
xchg
jecxz
lea
lcall
add
xlat
add
mov
std
pop
sbb
cmp
cmp
movsb
mov
lahf
mov
cmp
or
stos
push
push
lock
pusha
sbb
ret
inc
ret
sti
cmc
roll
mov
pop
cli
or
mov
in
and
jbe
jge
out
jbe
jb
mov
ss
jne
decb
xchg
fcmovnb
jecxz
fdivr
out
sbb
pop
or
mov
pop
push
test
jmp
mov
in
add
adc
push
fnstenv
push
push
cli
fmulp
sub
xor
loop
xor
inc
enter
and
mov
xchg
inc
ds
dec
imul
sbb
test
or
and
lock
loope
movsb
inc
and
push
dec
mov
int3
lods
mov
push
enter
sub
sbb
in
mov
out
xchg
sbb
lret
cmp
into
dec
mov
out
push
lock
jp
js
stos
mov
imulb
jle
and
imul
sti
jg
aaa
aam
bound
test
mov
jne
xor
js
add
out
mov
cmpsb
mov
jo
loope
and
xor
jbe
mov
xchg
mov
scas
add
pop
faddl
or
call
ret
adc
mov
add
cli
mul
cwtl
test
popl
aaa
insb
stos
fildl
mov
rorl
rol
arpl
push
fstl
pop
mov
dec
jg
xchg
adc
in
pop
addr16
pop
jmp
add
xchg
adc
ret
int3
or
jl
repz
aad
jl
xor
shlb
out
popa
mov
jbe
int3
push
xchg
fdivrs
arpl
popf
ja
aaa
int3
lea
testl
mov
add
ds
cmp
adc
pop
push
ljmp
jecxz
push
lret
mov
lret
cwtl
jmp
pop
mov
jbe
fsubs
flds
xchg
rorb
push
shrl
ret
negl
popf
arpl
push
jl
fisubrl
lea
and
sbb
pop
insl
add
fisubrl
mov
pop
xchg
cmp
jmp
jae
jb
iret
rcrb
std
cwtl
fstl
loope
pop
cld
or
imul
sub
call
test
call
lock
adc
es
sbb
dec
jnp
jae
ss
fldl
sbb
loope
add
iret
pop
mov
jno
sbb
xor
scas
enter
aam
jg
fiaddl
add
push
sbb
call
push
popa
xchg
int
mov
push
jle,pn
mov
and
outsb
jno
int
jecxz
or
push
fnstsw
in
push
or
scas
out
dec
scas
jae
mov
and
jmp
cwtl
xor
dec
scas
aas
mov
or
and
inc
gs
int
sbb
cs
jecxz
in
push
lods
fs
inc
jae
cmp
jp
xchg
test
sub
stos
mov
cmp
xor
cmpsb
jnp
push
test
ret
int
dec
xor
pop
jge
xchg
es
mov
scas
jae
push
pop
out
adc
pop
mov
mov
roll
xchg
movsb
sbb
mov
popf
in
add
gs
sub
jno
add
ret
cmc
and
imul
pushf
sbb
dec
adc
loop
inc
mov
push
std
andb
sbb
add
inc
or
sbb
aad
xor
in
pop
outsb
leave
and
insl
cmp
loop
ss
test
rorl
sbb
or
sti
pop
addl
ret
mov
mov
test
pusha
push
dec
call
mov
push
mov
pop
fdivs
mov
mov
fdivr
dec
jno
dec
jns
pop
aaa
pushl
push
cmp
fwait
test
cld
lahf
dec
das
xchg
adc
jno
cmp
lea
pop
xchg
addr16
out
mov
cmpsb
aaa
cwtl
shlb
test
jmp
jge
cmp
icebp
push
xor
stos
push
stos
inc
jmp
add
subl
cld
subb
mov
xor
out
pop
sub
adc
mov
pop
int
test
insl
add
popa
jb
test
jae
movsl
in
mov
push
pop
adc
sbb
mov
loope
jnp
mov
push
push
xchg
xlat
data16
lea
push
or
inc
xchg
lret
mov
ds
mov
aam
xchg
cld
loop
mov
pusha
sub
les
test
pop
mov
out
mov
xchg
out
push
xchg
pop
push
cmpsb
shlb
test
stc
ret
mov
outsl
cwtl
out
mov
jo
jmp
adc
bnd
jp
dec
add
incb
jg
sub
cmc
stc
push
inc
mov
push
dec
testb
iret
fs
adcl
add
xor
into
cmp
imul
hlt
push
ds
xchg
mov
je
arpl
push
int3
fstpl
int
inc
shlb
pop
popa
push
mov
push
lcall
aam
mov
adc
orb
arpl
dec
rcrb
mov
dec
das
movsl
repz
xchg
push
mov
notl
sbb
xchg
mov
repnz
into
push
push
adc
repnz
hlt
jbe
sbbb
xchg
movd
stos
and
or
fisttps
test
lret
and
test
insl
jecxz
jae
out
jns
push
mov
ja
mov
sbb
cmp
adc
fucom
and
mov
dec
lcall
notb
mov
pop
inc
and
push
sbb
loope
sbb
sub
ljmp
int3
jns,pt
loopne
popa
iret
inc
rol
cmp
imul
int3
xchg
mov
rcrl
lock
push
cmp
std
loope
adc
push
xchg
jo
add
insl
push
xor
inc
dec
testl
ja
xchg
sahf
testb
scas
pop
xor
lcall
sbb
jecxz
lahf
dec
loope
mov
inc
inc
into
aas
add
fiadds
test
movsb
movsl
mov
fs
sahf
aam
insl
dec
jecxz
das
ficoms
scas
stos
ret
mov
xorl
jle
pop
les
adc
sub
adc
imul
mov
xor
fldt
jecxz
inc
fnstsw
loope
xor
decb
addr16
mov
testb
aad
mov
sbb
xchg
xchg
sub
mov
xchg
cwtl
cmp
popa
sub
pop
jb
in
jbe
mov
andb
pusha
dec
xchg
sub
add
dec
pop
scas
xchg
jnp
fcomps
dec
cs
and
sub
ret
aam
jb
ljmp
push
addr16
leave
cli
sbb
pop
fisubrs
mov
shrb
shl
hlt
sbbb
stos
dec
shll
push
sbb
shlb
xchg
xor
adc
xchg
mov
or
nop
pop
mov
mov
mov
test
ja
adc
mov
mov
imull
cmpl
push
scas
push
inc
in
test
cmc
into
jmp
and
fnstsw
imul
dec
pop
lods
stos
push
sub
or
xor
and
adc
xor
fwait
stos
lds
in
nop
and
loopne
lods
push
and
add
xor
jb
cmpsl
add
xor
xor
lds
fs
xchg
or
cmp
aas
rcpps
inc
xchg
jnp
pop
mov
cmpsl
mov
popf
aad
mov
repz
sbb
jmp
dec
imul
dec
frstor
inc
ret
fdivp
sbb
mov
push
mov
jecxz
and
cmp
js
cmp
push
test
lea
cmc
das
sbb
outsl
mov
in
jno
push
mov
xor
or
dec
pop
in
sub
mov
jbe
insl
pop
ljmp
inc
or
decl
lret
sbb
jg
dec
xor
sub
sub
dec
rcrb
lret
jge
or
adc
ret
inc
dec
bound
sbb
insl
jo
dec
fnstenv
sub
icebp
js
xor
pop
or
xchg
or
xchg
xor
sbb
cli
mov
repnz
fsubrl
mov
and
fsubs
xchg
mov
lcall
and
in
or
outsl
sbbl
ds
cltd
and
into
cmpsl
dec
jecxz
xrstors
out
sbb
outsb
or
paddusb
dec
pop
cmc
push
repz
xor
sbb
push
mov
mov
movsb
push
lods
icebp
push
jg
fdivp
xor
sahf
leave
js
cmc
jnp
sub
cmp
lock
sub
cld
in
dec
or
xor
mov
xchg
lock
jae
imul
inc
js
mov
out
pusha
jbe
imul
jg
mov
and
sbb
xchg
jns
mov
push
pop
xchg
mov
dec
fcomip
aam
jo
push
ret
pop
daa
push
push
rorb
xchg
push
pushf
sbb
push
jmp
aas
test
xchg
sbb
mov
sbb
sub
imul
enter
imul
int
das
pop
mov
fsubrl
pop
pusha
pop
xchg
add
inc
orps
sbb
push
ja
insb
mov
and
or
roll
insl
adc
cmp
jge
xor
clc
ljmp
into
std
sbb
push
icebp
pop
sbb
adcb
jmp
and
fisttpl
and
xor
repz
inc
push
and
xchg
scas
shll
clc
adc
cmpsl
pop
push
jo
push
adc
orb
and
adc
inc
sbb
add
jae
sub
sub
in
es
aas
out
mov
xchg
mov
loopne
dec
aaa
outsb
daa
fxch
pop
jmp
xchg
fs
inc
inc
jl
test
jae
insb
dec
sub
cmpl
dec
inc
push
pop
rolb
pop
movb
pop
jg
adc
sahf
mov
std
js
mov
mov
es
pusha
jmp
lret
das
lret
inc
sbb
fwait
jge
jo
jmp
xlat
cmc
jle
cmp
inc
fucomip
sub
outsb
sbb
pop
outsb
push
or
push
movsb
xchg
push
mov
adc
sub
lods
mov
lret
inc
jae
into
shlb
mov
pop
shl
xchg
sbb
and
xor
popa
pop
inc
in
mov
or
clc
jns
out
pop
dec
cld
sahf
cwtl
rcrl
inc
shll
inc
inc
adc
imul
pop
fimull
xchg
lds
scas
aam
shll
ja
aam
adc
adc
fcmovnu
addr16
jns
inc
xchg
mov
fildll
xchg
push
push
scas
jle
mov
sbb
mov
push
jl
sbb
push
cli
add
stos
cmp
add
les
sbb
mov
add
adc
lods
jne
mov
rolb
cltd
xor
or
rcll
adc
add
xchg
jo
push
popf
inc
xchg
push
cmp
xchg
inc
xor
stos
xchg
mov
cli
inc
ror
or
and
test
sahf
mov
into
dec
in
add
jo
subl
xorl
incb
dec
xchg
xchg
aas
imul
jmp
lea
hlt
cmp
faddl
push
je
mov
in
cmc
xchg
or
icebp
xchg
ss
andb
test
insl
in
mov
sbb
adc
push
mov
xchg
inc
test
bound
inc
faddl
pusha
cmp
sti
lea
jnp,pt
rcrb
shll
and
cmpsb
adc
mov
pop
cmp
sbbl
jo
orl
push
sahf
lods
loop
cmp
adc
ljmp
aaa
repz
ret
clc
push
sahf
cmpb
sbb
shrl
xchg
insb
es
xor
imul
pop
jecxz
mov
inc
mov
fisubrl
sahf
mov
cmp
add
jle
cmpb
getsec
fwait
pop
js
mov
mov
out
repz
out
sahf
cmp
mov
mov
repnz
sbb
mov
add
mov
mov
fisubrl
push
imul
cs
sub
aas
inc
loopne
out
mov
out
xor
out
mov
mov
sbb
mov
adc
mov
and
mov
and
pusha
sub
mov
add
lret
dec
nop
loopne
cmp
outsb
enter
movsl
dec
es
out
xor
mov
mov
cmp
dec
inc
imul
out
lahf
push
add
lret
mov
mov
mov
hlt
enter
dec
imul
enter
cmp
push
cmc
pop
test
dec
jne
dec
iret
sarl
adc
ljmp
pop
aas
dec
mov
test
jp
xchg
imul
xlat
or
mov
jl
xchg
and
add
aam
sbb
je
rorl
jl
ljmp
popf
jmp
mov
cmpsl
xchg
testl
sahf
xchg
pop
lods
jmp
push
or
jne
pop
jp
mov
das
dec
mov
aas
sbb
sti
pop
mov
mov
int3
add
sbb
add
clc
cmp
loop
inc
jbe
add
enter
cmpsb
out
in
mov
in
mov
test
scas
adc
jle
aas
shll
ss
movsb
arpl
loope
inc
sbb
roll
repz
mov
out
dec
pop
xchg
mov
aad
xchg
mov
shrb
rolb
dec
repz
mov
lods
inc
sub
mov
into
add
cltd
fwait
in
out
in
sbb
jge
stc
sbb
sub
xchg
and
adc
pop
adc
test
es
push
jg
stc
pop
pop
dec
ljmp
test
adc
ror
mov
jns
inc
lods
inc
mov
push
add
adcb
call
sti
adc
jecxz
cmp
mov
jno
add
dec
mulb
jmp
inc
xor
mov
aas
les
push
xchg
loope
push
mov
clc
pop
pop
adc
cltd
test
pop
test
outsb
mov
es
fldenv
jp
and
mov
sub
lcall
nop
jbe
add
inc
aad
or
mov
je
je
into
add
out
lcall
xchg
pop
lahf
cmp
jne
push
cmp
inc
lahf
inc
mov
xchg
sub
bound
loopne
jge
cmp
js
in
xor
std
mov
inc
push
mov
rorb
pop
in
pushf
pushf
ds
jmp
cli
cmp
cld
add
or
push
mov
imul
cmpsb
xchg
daa
shll
cmp
mov
sub
jge
add
mov
xor
jg
jp
push
in
pop
cli
sarb
rorb
mov
jb
cmp
sub
fidivl
movsb
xor
xchg
push
jno
jle
and
pop
je
jnp
mov
or
loopne
lods
pusha
iret
jge
lahf
jge
orb
xchg
outsl
sar
cs
mov
lea
pop
cld
inc
dec
and
mov
cmc
in
in
lret
into
seta
pop
push
xchg
lcall
aam
jno
and
repz
mov
jge
xchg
jno
test
or
inc
lods
xchg
outsb
jl
test
jo
pop
xchg
or
add
xorl
out
sbb
daa
scas
aas
jno
cmp
sbb
push
mov
sbb
jns
je
mov
or
mov
sub
lea
sbb
in
leave
xor
in
dec
pusha
smsw
jno
movsl
cmpsb
stos
xchg
test
push
inc
sar
lock
cli
adc
inc
loopne
loopne
cwtl
lahf
jmp
sbb
out
or
jle
xchg
dec
leave
and
mov
xchg
je
jle
dec
sub
push
mov
or
sbb
pop
out
sub
mov
or
xchg
outsl
ret
mov
jno
pop
test
push
sbb
sbb
cmp
cmpsb
shrb
repnz
mov
inc
test
mov
cmp
mov
jae
pop
push
sbb
stos
loope
gs
inc
cmp
xchg
adc
std
sbb
xlat
dec
and
xchg
add
push
xchg
mov
iret
add
nop
js
add
and
xchg
add
pop
and
outsb
hlt
pushf
clc
jge
xchg
or
add
jl
cmp
xchg
dec
xor
ret
std
sub
xchg
addl
fisttpll
orl
sahf
dec
enter
js
lret
sub
loop
int3
and
inc
dec
mov
mov
mov
jo
xchg
dec
lods
daa
imul
adc
mov
fwait
jne
dec
outsl
ss
rcrl
adc
pop
jo
jmp
lcall
cld
add
pusha
orb
mov
out
mov
mov
bound
add
mov
cmp
out
lahf
lret
xor
mov
mov
lret
mov
add
fldl
popa
orl
push
call
jmp
aad
mov
push
jae
cs
push
push
pop
and
xor
int3
ja
and
loope
or
pop
stos
pusha
jp
sub
je
adc
out
int3
aad
jb
add
and
mov
loop
push
fistpl
pop
jle
xchg
insl
div
int3
sbb
stos
pusha
gs
sub
lods
sub
sahf
fiaddl
jg
add
mov
mov
out
xor
and
movsl
mov
cwtl
mov
add
jp
popa
push
mov
dec
dec
int
out
push
or
mov
add
sub
aaa
mov
add
xchg
je
push
mov
pushf
call
insl
pop
pop
or
jns
lcall
cmp
sub
pushf
fistps
inc
sbb
daa
jg
addb
add
sub
pop
loopne
dec
fstps
adc
pop
inc
sbb
or
ds
mov
sub
bswap
dec
or
and
testl
mov
lock
xchg
sbb
aam
cltd
jle
test
sbb
xlat
lcall
xchg
sub
jns
sbb
adc
jno
jb
adc
leave
jne
je
in
stos
and
pop
push
cmp
add
push
sub
test
mov
pop
pop
lods
es
les
imul
mov
mov
sub
cmpb
adc
mov
sub
pop
adcb
test
test
push
sbb
call
loop
mov
bound
rorl
or
scas
stos
test
in
cld
fcoms
dec
daa
fdivr
or
and
bound
out
bound
jns
sub
jo
hlt
adc
std
and
push
lahf
setae
xor
fsubrs
adc
mov
mov
xor
inc
test
ja
cwtl
dec
cwtl
add
sbb
adc
dec
pop
repnz
push
outsb
cld
xchg
out
ret
or
adc
inc
or
mov
pushf
bound
leave
addr16
jp
daa
enter
addr16
stc
sub
xchg
fiadds
rcrb
adc
ret
xchg
je
push
jne
inc
mov
push
sbb
rclb
call
xchg
cld
cltd
pop
ret
adc
cltd
fisubl
xchg
mov
es
pusha
mov
mov
xchg
lods
jecxz
or
and
fimull
dec
and
loopne
ljmp
fdivs
or
ljmp
mov
es
mov
das
dec
push
xchg
xor
dec
xor
arpl
aam
or
insb
arpl
imul
jnp
shrl
ljmp
xchg
push
outsb
jns
call
ja
jb
test
sub
sbb
push
or
stos
and
jae
test
push
or
in
push
ret
rcrl
pop
arpl
ret
daa
in
out
clc
ja
fsts
aad
cmc
jae
mov
out
pusha
adc
pop
pop
or
or
pop
mov
test
outsb
lahf
daa
adc
xchg
xchg
cmpl
sbb
xor
pop
lret
leave
cli
rolb
sbb
arpl
inc
clc
jl
push
xor
into
pop
xor
icebp
ljmp
nop
inc
sub
rcl
aad
roll
dec
bnd
adc
push
lret
xchg
push
dec
jbe
and
xchg
pop
pop
daa
mov
int
shlb
aas
cmp
xor
inc
adc
push
cmpsb
xchg
dec
xor
je
inc
mov
cmpsb
test
out
mov
iret
cs
xchg
mov
imul
xchg
and
dec
mov
and
cmp
push
dec
mov
inc
pushf
sarb
mov
dec
mov
ret
cmc
stos
ss
leave
pop
xor
lahf
push
pop
loopne
arpl
push
jl
xchg
add
dec
leave
or
add
daa
mov
dec
push
xchg
arpl
or
xor
sarb
js
pop
jnp
xor
push
popa
mov
jae
sub
js
dec
dec
icebp
stc
pop
mov
lcall
out
push
ss
fiadds
pop
xchg
push
and
out
ret
lds
and
add
xor
in
sti
or
inc
push
pop
add
sbb
push
add
jo
jns
ss
pop
leave
call
or
xor
dec
dec
push
sbb
lods
mov
mov
or
xchg
movsb
nop
lahf
and
das
jne
pop
mov
sub
pop
inc
adc
fdiv
inc
orb
mov
or
or
shlb
call
out
jge
push
xor
cwtl
jp
xchg
cmpsl
xchg
jbe
stos
decb
or
cmp
incb
fisttpll
call
hlt
push
xchg
dec
adc
push
out
add
ja
gs
hlt
cld
xor
pop
cmpps
rorb
mov
push
mov
jne
iret
scas
xchg
add
dec
pusha
hlt
aas
pop
xchg
sti
ljmp
sub
inc
lods
adc
xchg
clc
mov
and
push
push
jmp
xlat
inc
es
sbb
xchg
and
and
mov
imul
push
push
outsb
dec
inc
inc
movsb
test
fnstsw
addl
sub
pop
roll
jge
xchg
fidivrl
and
adc
bound
stos
jbe
shll
mov
insb
loope
add
jmp
xchg
mov
cmp
push
or
fwait
aas
push
push
sbb
adc
push
std
icebp
jl
jns
aam
pop
sbb
pop
sbb
loopne
pop
cmc
aad
jmp
pop
mov
mov
jg
xorl
negb
mov
jle
clc
or
mov
movsl
sbb
fildl
xor
js
dec
movsl
aaa
pop
cmp
ljmp
jge
ror
add
in
js
loop
push
fstps
xchg
push
or
notl
mulb
jbe
or
test
sbb
dec
insb
mov
lcall
nop
subb
popf
push
mov
sub
jae
sbb
or
sub
pop
mov
nop
not
cmp
xchg
das
dec
js
ret
jae
loop
jmp
mov
xor
mov
push
inc
outsb
mov
subb
inc
lea
xchg
inc
out
mov
in
ljmp
out
pop
add
sbb
dec
sbb
mov
pop
fisubrl
adc
aas
jnp
popa
arpl
push
dec
fcomps
ljmp
cmc
data16
push
adc
inc
repz
cmp
xchg
repz
rcrl
iret
mov
jmp
and
and
add
les
mov
sub
mov
ret
mov
xchg
and
loope
xchg
dec
ficomps
adc
mov
pop
fucom
mov
jle
or
sbb
int3
rolb
loope
inc
inc
dec
repnz
cltd
lea
xchg
out
cmp
jp
push
and
lea
loope
or
add
pushf
or
in
xlat
lcall
mov
mov
cmp
lods
lcall
or
jno
sahf
add
or
xchg
push
mov
shll
loope
dec
cs
es
push
pop
jmp
gs
pop
and
test
into
scas
leave
lret
xor
sub
mov
shrb
dec
mov
mov
push
dec
add
std
cmpsb
pop
dec
adc
dec
mov
sbb
push
push
cld
iret
mov
dec
clc
incl
loopne
push
xor
mov
xor
jb
fstp
test
sub
dec
xchg
mov
xor
cmp
cmp
lods
dec
inc
hlt
mov
xchg
ret
jecxz
mov
push
shl
sbb
mov
jg
test
rcrb
out
in
lcall
push
or
lahf
dec
test
mov
frstor
rorb
loope
mov
sti
cs
dec
stos
inc
dec
dec
popf
shr
or
push
pop
nop
mov
mov
test
rolb
inc
jg
or
and
sahf
add
test
add
fistpll
mov
lret
pushf
out
scas
cmp
and
pop
mov
shrb
push
jge
inc
dec
sbb
mov
cmp
repnz
add
popf
and
mov
ret
lret
aam
add
or
sub
add
stos
fcomps
cmp
xchg
xor
imul
mov
xorl
xchg
inc
and
mov
lea
jecxz
mov
sbb
xor
stos
fmuls
int
in
push
xor
mov
icebp
bound
imul
pop
fistpll
cmp
dec
out
xchg
sbb
or
dec
inc
xor
sbb
pop
mull
mov
test
fcoml
inc
iret
push
adc
push
popa
push
stos
and
call
push
xor
ficoml
sbb
mov
xchg
jne
jl
out
sbb
and
adc
int
shrb
push
push
cmp
pop
pop
jae
xchg
mov
clc
outsb
movsb
jb
movsb
mov
in
mov
insl
pop
test
in
add
lock
cmp
xchg
int3
push
scas
mov
inc
adc
push
push
in
mov
call
push
sti
xchg
jo
std
in
xor
testb
and
push
mov
mov
mov
add
test
sahf
and
shlb
test
xor
inc
popf
test
bound
inc
hlt
cmp
mov
xchg
pop
and
cmp
repnz
pop
fsubrl
cmpsb
insb
in
aaa
pop
int
jne
loope
jae
enter
lea
mov
mov
jmp
push
xor
lret
int
jle
and
in
fnsave
loope
lds
insl
xchg
and
and
out
movsl
and
or
inc
es
add
pushf
mov
out
xor
and
js
add
dec
push
jl
stos
mov
lds
add
push
out
pushf
pop
enter
mov
icebp
jle
nop
lds
pop
sbb
jo
pop
mov
nop
mov
daa
orb
daa
xor
mov
leave
mov
pusha
std
insb
pop
pushf
sub
mov
push
std
std
cmp
mov
cld
or
cmpsl
or
adc
inc
inc
or
pushf
lds
or
push
mov
pop
jmp
rorb
mov
mov
xor
aas
popf
jecxz
ss
xchg
sbb
sub
inc
xchg
push
or
jae
fdivr
cs
mov
inc
lcall
and
movsl
dec
sub
adc
push
xor
jo
cmpsl
xchg
rcrl
mov
and
sarb
cmp
mov
es
xor
test
pusha
xor
lret
mov
movsb
mov
push
fs
pop
stc
test
inc
jl
lds
push
mov
xor
ud0
outsl
adc
shrl
daa
stos
fsts
sarl
xchg
aam
sbb
shll
xchg
mov
pop
out
mov
mov
mov
mov
inc
in
js
imul
movsl
ja
sbb
dec
cmpsl
adc
jmp
cli
pop
mov
jns
jecxz
jns
cmp
ficomps
mov
lds
lds
jne
iret
arpl
ror
shrb
xor
pop
and
xlat
fisttpll
shl
adc
movsl
movsb
dec
stos
loope
pop
imul
arpl
adc
jge
das
outsw
jb
inc
dec
movsl
fs
fsubr
mov
xlat
jmp
ja
mov
aaa
mov
mov
out
sub
inc
sub
sub
push
mov
bound
adc
pop
mov
iret
pushf
inc
mov
jge
lods
lret
stos
jge
inc
mov
std
enter
pop
sub
cli
inc
push
dec
cmpsb
aad
inc
addr16
adc
inc
add
add
das
cmp
dec
out
shlb
add
adc
jb
pop
adc
ljmp
adc
aas
xor
inc
lahf
das
dec
and
xchg
dec
sub
dec
clc
cli
movsl
rorb
outsl
ljmp
call
std
and
loope
adc
adc
dec
pop
es
sbb
pop
stos
insb
stc
dec
and
jns
push
jae
jbe
cmpsb
dec
ss
jecxz
imull
fs
xor
pop
pop
addl
mov
push
movsl
std
mov
std
ljmp
loope
sub
mov
jle
in
leave
test
movsb
mov
es
dec
adc
inc
inc
sub
lock
sbb
repz
mov
push
int
jmp
js
push
adc
out
pop
lret
cmp
aam
mov
mov
sub
push
fiadds
or
out
dec
in
ret
inc
bound
ficomps
or
ret
shrl
dec
lds
pop
xchg
arpl
pop
inc
lds
add
pop
mov
mov
add
lret
out
stc
mov
dec
ret
xor
mov
daa
loop
and
add
cli
xchg
push
add
push
inc
and
or
mov
sub
add
dec
cmpsl
push
jae
mov
xlat
push
add
xchg
mov
in
dec
mov
jnp
mov
pop
jo
mov
test
sbb
push
js
mov
mov
pusha
sub
into
ficoml
add
xchg
lods
fsubl
inc
cld
sbb
push
mov
pop
aam
pushf
sub
jg
xchg
jno
jae
call
add
inc
lds
or
jl
aam
xlat
lret
into
adc
insl
pop
jne
inc
mov
faddl
movl
inc
mov
mov
push
sbb
adc
cltd
cmp
rcr
jmp
push
fdiv
jae
in
fsubrs
push
or
pushf
lods
int
add
pop
testb
adc
jecxz
stc
xlat
bound
mov
sbb
sbb
dec
repnz
mov
loop
call
and
sti
sti
movsb
push
test
pop
dec
rcl
sub
adc
jecxz
sarl
ds
and
and
fsubl
mov
or
xor
in
jo
loopne
out
lcall
jmp
jle
sti
xchg
scas
sbb
jge
outsl
cwtl
fidivs
movsb
pop
push
add
jg
mov
lcall
pop
aam
stc
es
scas
out
out
mov
fsub
fistl
cli
xor
jae
push
fidivrl
xchg
out
push
jb
psrlw
and
out
cmp
xchg
dec
idivl
ljmp
xorb
ud1
imul
sbb
mov
lock
jae
add
dec
jl
and
out
mov
fldcw
sbb
repz
leavew
popl
dec
cmc
pop
xor
ja
push
call
stc
pusha
mov
xlat
add
dec
enter
imul
mov
aam
icebp
cmp
xchg
xchg
dec
pop
jno
data16
sub
dec
insl
dec
cli
dec
rcrb
xor
xchg
mov
or
sub
inc
pop
pop
push
das
and
sar
xchg
add
pop
mov
aam
push
pop
pop
rcrl
push
adc
push
repz
lods
jae
sarb
stos
dec
mov
cmpsb
loopne
push
mov
jp
insb
andl
push
pop
sbb
loope
stos
push
out
and
addl
sbb
icebp
cmp
push
or
pop
leave
add
in
pop
ss
or
clc
pop
push
stc
cmp
je
mov
xor
and
push
sub
adc
cltd
movsl
test
aad
push
mov
push
loopne
shrb
popf
push
fwait
sti
jns
cmp
sbb
jge
pop
addr16
cmp
fstl
inc
push
dec
into
test
mov
call
or
fs
gs
stos
das
ja
in
std
sub
js
jbe
decl
pop
lods
adc
dec
sbb
jno
mov
cmp
stos
test
das
lods
negl
test
fs
gs
jmp
mov
loop
mov
jbe
outsl
not
nop
lea
fisubrl
lret
int3
popf
mov
lock
pslld
jp
in
sti
imul
or
cwtl
leave
div
rorb
pmullw
das
test
pop
lods
aad
imul
sub
pop
loope
ljmp
mov
lahf
jp
ret
das
faddl
in
xor
lea
and
sub
add
aaa
and
es
fstps
xor
cld
lods
mov
sub
sub
bound
movsl
add
and
inc
lods
jl
in
sar
xchg
testb
adc
sub
or
inc
das
mov
lds
xor
in
inc
cmpsb
aaa
icebp
jne
jp
push
clc
xor
inc
xchg
pop
push
daa
jo
jmp
inc
popf
std
pop
fsubl
lahf
ret
loope
add
test
shrl
arpl
jl
rolb
pop
cmpsl
cs
xor
add
sub
enter
js
fcoml
es
mov
popa
repz
cld
xor
mov
cwtl
aad
adc
iret
xor
imul
adc
sbb
lahf
jbe
pop
cmpsl
xchg
push
dec
cwtl
leave
aaa
inc
aas
jns
imull
iret
out
test
add
test
mov
repz
dec
imul
dec
xor
dec
push
push
in
add
imull
xchg
and
cmpsb
push
out
mov
push
adc
loop
test
mov
fidivrl
jle
add
dec
imulb
out
imul
add
jns
int3
lea
inc
pop
or
push
addb
jmp
mov
xchg
xchg
dec
fdiv
test
outsb
fdivl
ljmp
ss
test
push
mov
out
repnz
mov
mov
jb
jno
mov
mov
js
shll
xor
xchg
sbb
mov
and
add
and
insb
std
mov
mov
lds
jp
cmp
dec
sahf
lods
mov
inc
aas
xor
dec
jmp
push
pop
in
adc
insb
sbbb
pop
jae
shr
inc
sub
fistps
adc
in
stc
and
or
sbb
cmp
or
inc
xchg
push
loope
pop
lret
xchg
mov
cmp
bound
mov
sbb
adc
testb
rclb
sbb
mov
sub
and
inc
adc
test
pushf
xorl
hlt
js
mov
mov
dec
hlt
out
cmp
cmp
mov
push
mov
push
xlat
stos
adc
sahf
lds
loope
test
cmpsl
inc
int3
fwait
call
addr16
in
cld
dec
sub
rclb
cmpsl
imul
push
lcall
push
jae
jp
mov
shrb
pushf
add
test
adc
inc
cmp
roll
add
jl
test
mov
arpl
push
fs
out
sahf
mov
nop
jecxz
pushf
test
sub
pushf
subb
fsubr
in
fildll
inc
call
leave
roll
cmp
sbb
cmp
repnz
push
xchg
into
xbegin
and
add
or
dec
jge
ljmp
mov
lods
and
mov
push
outsb
js
xchg
mov
stos
sub
mov
fsts
mov
sbbb
push
sarb
cmp
adc
or
push
aas
aaa
mov
shl
icebp
repz
rcll
out
leave
jb
mov
sub
or
inc
inc
xchg
xor
push
fcomi
sti
xchg
or
mov
sub
add
mov
pushl
and
push
test
or
sub
imul
or
jecxz
xor
adc
stc
int
xchg
pop
sahf
lcall
sbb
jae
les
mov
outsl
fwait
pusha
orl
sti
test
pop
cmc
push
js
outsl
push
fisttpl
adc
or
push
popf
pop
push
stc
add
in
sarb
jl
mov
arpl
push
sarl
loop
dec
mov
imul
std
jno
push
xchg
dec
mov
into
jecxz
or
gs
jge
mov
add
dec
repz
xchg
fistps
jbe
ds
pop
repz
inc
outsl
pop
pop
daa
jb
lds
call
gs
mov
fistps
fmull
popf
mov
xchg
adc
xchg
inc
fwait
jecxz
dec
xchg
loope
in
aas
pop
outsl
mov
fmull
xor
fildll
jb
icebp
adc
mov
cmp
mov
nop
cwtl
addb
pushf
mov
lret
sbb
and
adc
sbb
dec
cmp
and
push
xchg
insl
mov
cli
and
ja
cmp
cmp
mov
ds
mov
add
sbb
sti
mov
jae
push
into
cmp
bound
lea
pushf
pop
iret
sub
lret
pushf
ror
enter
or
cmp
add
xor
jmp
rorl
dec
out
hlt
in
mov
inc
inc
mov
in
mov
loope
xchg
lea
mov
inc
aas
das
test
and
fwait
xlat
push
xchg
pop
pop
test
sub
mov
data16
lock
mov
mov
push
cmp
pop
sub
mov
push
gs
idivl
sahf
cmp
cmp
push
int3
popf
or
outsb
pop
mov
sbb
jbe
pop
and
pop
and
sub
enter
adcb
imul
mov
out
lret
push
and
xor
jl
and
dec
lock
cs
clc
icebp
clc
test
or
add
lea
sub
out
xchg
push
sub
inc
and
sub
inc
add
je
push
push
in
pop
lods
jmp
mov
pop
and
iret
jmp
pop
lds
imul
mov
xchg
xlat
stos
scas
dec
mov
xor
mov
pop
aaa
adc
ret
or
dec
sbbl
mov
xchg
mov
into
test
fcmovnb
cmp
shl
push
jnp
jne
or
jnp
rorl
pop
in
movsl
or
mov
stc
ljmp
fnsave
ja
mov
add
shrb
rorl
or
dec
inc
pop
out
mov
pusha
test
push
sub
jp
lcall
outsb
and
leave
add
xor
ret
pushf
push
imul
mov
mov
jp
fdivrs
cld
inc
dec
cwtl
in
inc
sub
mov
fucomi
xchg
jg
adc
jp
cmp
mov
ljmp
mov
jp
pop
inc
dec
dec
cmp
mov
rcrb
dec
dec
mov
push
and
or
stc
and
insl
and
push
adc
leave
insb
sbb
in
inc
adc
and
hlt
std
lods
xchg
mov
or
dec
jg
dec
mov
lods
cmp
and
in
scas
cmpl
mov
mov
in
insl
shrb
stos
and
into
into
mov
icebp
mov
lods
sbb
call
and
cmp
jno
lock
arpl
mov
inc
cmp
jno
jle
movsb
jo
inc
cmp
dec
lds
icebp
jmp
inc
pusha
lods
in
enter
sti
pop
or
int
in
push
lods
lds
scas
popf
sbb
add
es
jmp
movsl
mov
fldlg2
xor
jno
and
in
push
cmp
xchg
ljmp
fdivrl
out
fxch
lea
adc
adc
cltd
cwtl
sub
mov
jg
fcoms
push
push
add
or
fadd
seto
leave
cld
lds
pop
movsb
mov
jo
pop
jbe
test
inc
sbb
push
inc
aad
fwait
and
in
push
mov
jns
mov
test
leave
popf
push
addr16
mov
sub
dec
lock
hlt
out
hlt
jp
mov
push
xchg
rclb
insb
xchg
js
add
mov
lea
sub
mov
addr16
shrb
mov
std
push
aas
push
mov
push
hlt
mov
lcall
insl
icebp
fcomip
lahf
xchg
jp
cmp
mov
insl
fwait
stos
fdiv
es
mov
jnp
mull
jmp
sahf
jg
inc
jnp
fs
and
or
xchg
push
push
add
shlb
movsb
pop
scas
inc
sbb
movsl
test
mov
syscall
test
mov
sbb
out
lds
test
cld
and
push
jecxz
inc
lods
sub
aad
fs
les
jbe
or
xchg
bound
mov
rclb
cmpsb
xor
fcompl
sbb
adc
in
mov
mov
xor
loope
xor
gs
outsb
xlat
clc
popf
out
test
sbb
repnz
jae
cmc
mov
cwtl
add
cmpsl
push
jno
xlat
cmp
and
dec
push
mov
pop
mov
pop
outsb
or
loopne
aas
cwtl
jecxz
test
and
out
aad
mov
js
movsb
push
push
add
xchg
insl
sti
ret
cli
enter
mov
das
dec
jns
leave
test
data16
sbb
cmpsl
addr16
or
ljmp
out
xor
jmp
sub
rcr
mov
ds
test
jnp
sub
lock
mov
std
lea
mul
pushf
and
data16
sti
jg
pop
xor
fdiv
push
sarb
and
imull
push
xchg
insl
or
mov
mov
jp
or
cmp
inc
mov
rclb
xor
inc
sub
out
pushl
fdivr
stos
idivl
dec
push
loopne
shrb
mov
test
push
popf
int
clc
lret
jae
mov
add
inc
aam
mov
imul
cmp
inc
mov
and
out
call
and
pop
pop
data16
fwait
andb
pmuludq
adc
adc
lock
jmp
imull
sub
mov
sbbb
push
push
push
dec
push
ljmp
adc
ja
sub
pslld
push
das
xor
scas
testl
pop
mov
xlat
xor
pusha
inc
jno
jmp
outsl
decl
sub
lods
and
jae
cmc
les
je
lret
fs
mov
cmp
lods
jne
lea
rcl
pop
nop
mov
pop
fcompl
push
add
popa
inc
loop
mov
data16
jne
fwait
push
inc
pop
mov
pop
aam
js
jo
cld
push
add
mov
jge
xor
and
dec
jmp
or
dec
cmp
test
jae
jle
sar
mov
xor
in
pop
sbb
out
jne
subl
adc
movsl
jg
mov
pop
pop
jae
das
add
mov
jb
xchg
adc
pop
sahf
push
jbe
xchg
sbb
les
enter
js
imul
or
jnp
sbb
pusha
ds
mov
or
dec
sbb
rolb
or
les
rolb
sbbb
pusha
cmc
push
outsb
ss
xchg
dec
orb
mov
xchg
int3
and
stc
das
js
movb
sahf
testb
imulb
jne
xorb
out
dec
fstl
xchg
sbb
or
stc
mov
lock
loopne
lcall
push
mov
sbb
outsb
pop
or
add
or
hlt
cmp
add
dec
add
sbb
adc
je
mov
mov
and
inc
jecxz
xchg
shrb
dec
pop
lea
mov
add
icebp
xchg
popw
in
mov
fiadds
daa
fwait
das
push
sub
daa
arpl
mov
inc
mov
cmp
pop
mov
adc
ljmp
mov
adc
repz
cwtl
fs
inc
mov
mov
leave
mov
sub
shll
sub
mov
stos
jne
jge
xchg
jl
jne
arpl
mov
xor
stc
mov
sub
xor
cmp
hlt
mov
out
shr
or
jg
arpl
mov
push
add
jb
push
sbb
push
aam
xchg
sub
push
mov
or
xor
rcll
sbb
das
dec
dec
sbb
rcrl
cmpsb
leave
outsl
call
addr16
les
imul
pop
and
dec
pop
push
pop
add
popa
popa
sub
add
loop
lds
leave
push
int3
adc
xchg
and
insb
dec
mov
sub
inc
pop
cwtl
push
pop
js
mov
daa
ss
movsb
repnz
inc
add
aaa
daa
and
xor
into
fs
roll
xchg
out
jb
lods
orb
push
and
sbb
jo
mov
pushf
stos
mov
jne
xchg
pop
xor
cmp
pop
and
mov
dec
leave
inc
call
sbb
shll
mov
lods
stos
xchg
cli
ljmp
lock
hlt
pop
lret
push
addps
je
push
mov
cli
pop
mov
inc
xchg
lock
pop
movsb
sarb
sbb
jmp
sub
fwait
mov
pop
scas
shrb
fucomi
pop
and
cmp
incb
mov
rorb
addb
and
aaa
idivb
movsl
xor
jae
and
popa
push
es
mov
cmp
ret
std
sar
cmpb
arpl
shl
pop
sub
push
inc
add
into
pop
pop
lahf
mov
mov
fstp
pop
xchg
sub
mov
push
dec
push
inc
lret
popf
scas
pop
nop
mov
cmp
xchg
or
jge
mov
rcrb
icebp
aaa
pop
jb
out
sub
mov
loopne
inc
shlb
or
cmpsl
xchg
mov
and
jl
and
adc
mov
jne
cmpl
cwtl
pop
call
push
mov
cmpsb
mov
pop
shll
cli
jge
lock
cmp
inc
mov
push
jns
xor
and
or
push
and
sahf
adc
call
push
jno
out
push
sub
cld
xchg
movb
cmpsl
mov
jb
out
jns
push
xchg
push
fdivrl
sti
jae
inc
inc
roll
fcoms
and
sub
hlt
push
add
test
insl
subb
aaa
je
and
adc
push
subl
pop
or
pusha
xchg
sub
add
pop
push
aam
aad
lds
inc
popa
mov
cmp
movsl
jae
out
loop
jl
xor
and
push
lods
cmc
movsl
lcall
xor
dec
stos
dec
lcall
aad
lock
cmp
sbbb
sbb
inc
rcr
fsubs
inc
xor
or
dec
ds
scas
lahf
pop
jmp
outsb
aam
cmp
push
cld
cmp
dec
leave
ret
xchg
repnz
inc
lahf
xchg
ljmp
xor
loop
xchg
pop
ljmp
jo
sti
sub
in
xor
mov
les
mov
push
negl
dec
mov
sbb
jno
insl
jno
divb
fidivrl
in
pop
mov
pop
imul
mov
sub
movsl
test
adc
test
inc
sbb
and
cmc
add
insl
mov
push
and
and
add
fidivrl
adc
mov
xchg
int
and
xor
data16
xchg
xor
inc
xor
lret
ljmp
xor
mov
lods
data16
sahf
cmc
cmp
xor
frstor
xchg
jecxz
out
cmpb
stc
sub
push
lds
cs
stos
xor
fbld
lods
roll
push
out
jg
inc
in
cmp
xor
mov
sar
out
mov
xchg
popf
jne
and
fwait
cwtl
fsubl
push
and
adc
pushf
mov
xchg
or
adc
stos
es
dec
xchg
nop
sub
adc
or
jl
les
sub
pop
and
je
clc
sbb
mov
jo
mov
xchg
xlat
lock
mov
test
jb
dec
push
xor
cmp
push
mov
push
ds
outsb
and
and
das
ja
adc
out
cli
xor
ficomps
lret
data16
or
xor
fdivs
push
gs
movsb
mov
sub
je
pop
xor
mov
mov
inc
sbb
or
ds
icebp
dec
dec
cmpsl
stc
mov
shr
mov
jge
xor
xchg
dec
jbe
and
mov
movsl
mov
dec
pop
xchg
and
lock
xchg
inc
mov
push
and
jp
je
or
leave
data16
inc
lahf
xchg
jbe
sbb
xchg
je
mov
aad
lret
insl
int3
pop
pop
pop
cmpsb
repz
shlb
jb
call
jb
outsl
loopne
dec
inc
mov
shlb
xchg
push
popa
jbe
adc
add
push
movsl
sti
jbe
rcll
inc
test
add
out
cmp
movsl
mov
pop
loopne
loopne
inc
and
cltd
mov
dec
in
mov
sbb
mov
cmp
push
test
shlb
sub
test
iret
mov
cmp
ja
cmp
xor
daa
cmpsb
es
adc
push
out
add
stos
cmp
ds
insl
jmp
pop
mov
adc
cmp
test
and
pushf
ljmp
shll
add
mov
sbb
cmp
mov
xchg
adc
add
mov
and
cwtl
arpl
mov
and
daa
or
cmp
inc
ficompl
out
pop
fdivrs
bswap
ja
mov
mov
push
sub
je
adc
xchg
out
pop
inc
and
je
push
outsb
mov
popf
jp
popa
nop
shll
arpl
adc
adc
cmp
sub
fldl
ja
aad
xor
ror
lds
nop
inc
adc
scas
in
sub
jae
dec
pop
addl
int
rclb
lcall
lods
ret
jne
push
jo
cmpb
xchg
loope
mov
clc
and
cmpsl
push
adc
cmp
lret
dec
fiaddl
pmaddwd
push
dec
in
icebp
mov
adc
xlat
or
lods
jmp
psrlw
scas
jmp
or
sbb
push
aas
decb
sub
outsb
adc
add
xor
or
ljmp
insb
jle
loopne
js
out
mov
addl
push
test
les
add
push
maskmovq
idivl
pop
out
push
sahf
xchg
nop
jp
add
add
out
sub
das
push
bound
or
xor
je
add
sbb
frstor
or
jbe
in
mov
mov
jb
fcmovb
jb
mov
and
fisubs
fs
decl
jle
mov
pop
fbstp
out
xchg
sbb
lret
mov
push
cmp
je
mov
mov
repnz
and
gs
adc
inc
loop
dec
loop
movsb
cmp
adc
sahf
aaa
push
push
fstl
mov
jge
or
cld
push
nop
add
dec
jge
repz
or
test
sub
out
push
push
xchg
test
flds
or
sub
pusha
add
xor
sbb
mov
lods
bound
inc
push
jnp
push
hlt
out
fildl
lods
pop
inc
sub
dec
repnz
lds
jle
adcb
pminub
mov
add
push
lea
pop
in
jb
sarb
push
sarl
test
and
stos
cmpsb
xor
lods
clc
call
movsb
or
mov
scas
inc
xor
inc
and
insl
sub
popa
push
push
xchg
stc
cmc
lahf
stos
in
insb
xor
jp
adc
mov
mov
mov
or
jb
rorl
pop
xlat
add
rcrb
scas
jle
mov
push
add
cmpsb
sub
sbb
pop
push
mov
jnp
std
in
inc
push
inc
out
push
gs
mov
mov
sbb
mov
pop
andb
rorl
jnp
adc
inc
mov
sub
andl
inc
mov
insb
in
sub
sbb
dec
dec
dec
push
cs
or
subl
jge
pop
pop
jno
xor
jl
sbb
aas
xchg
outsl
insb
xor
inc
xchg
fsub
or
or
jne
test
mov
xlat
push
pop
inc
enter
out
jo
popa
add
lahf
in
cltd
aam
fs
aad
cs
xor
add
pop
lds
dec
jne,pt
inc
pop
push
inc
xor
xchg
mulb
jp
mov
mov
hlt
add
pop
sub
fdivrp
adc
bnd
out
mov
mov
xchg
iret
xchg
sbb
pushf
jge
or
cmpsl
out
jne
shl
xchg
sarl
dec
les
jne
rol
pop
fldenv
push
xor
addb
sbb
rcll
cld
push
push
cmp
movsl
add
idivb
imul
mov
or
and
enter
push
inc
movsb
add
aam
sub
cmpl
roll
mov
js
or
pushf
pop
pop
mov
xchg
fsubrp
xchg
lock
outsb
imul
mov
xor
dec
jb
out
lods
cwtl
out
jmp
fcmovnu
and
and
leave
fdivp
mov
cmp
push
in
arpl
mov
mov
and
cmp
fld1
sub
add
mov
rcll
mov
push
add
mov
cmp
cmc
cli
lret
lea
rcll
push
or
into
inc
add
test
popf
xchg
xchg
insl
push
lods
jge
jno
lret
pop
ret
cltd
add
clc
lock
xchg
mov
lret
js
xchg
mov
cld
jmp
aaa
aaa
addr16
and
mov
push
cmp
inc
add
pop
sahf
dec
lahf
cs
and
mov
adc
das
add
pusha
pop
int
nop
xor
and
mov
mov
std
jp
stos
mov
cmp
or
bound
jbe
cmp
ljmp
jns
insl
mov
add
stos
lret
dec
mov
mov
pop
xlat
cwtl
jb
addb
mov
adc
jl
dec
inc
lods
je
test
lret
imul
mov
xchg
mov
inc
shlb
clc
aas
add
push
jg
lret
and
mov
xchg
mov
addr16
xor
mov
scas
adc
lods
cmp
adc
xchg
cmc
imull
xchg
sti
pop
dec
adc
jbe
jne
in
inc
lock
inc
mov
or
or
push
popf
shll
fisubrs
sbb
add
and
cmpb
ret
push
ficompl
rorl
xor
out
and
add
divl
pop
stos
xchg
pop
adc
push
jmp
lods
out
lcall
call
lods
cld
in
mov
jg
in
pusha
jb
cmp
les
cmp
cmp
mov
cld
fwait
xor
shrl
fisttpl
imul
divl
jmp
icebp
cmpsl
jecxz
push
adc
lcall
call
and
cwtl
gs
push
lretw
cmp
fucomp
shll
dec
inc
inc
push
test
mov
or
inc
ds
push
xor
adc
int3
mov
fildll
jmp
add
xchg
push
js
ljmp
ret
or
mov
jmp
popa
sbb
and
hlt
adc
jno
sarl
push
scas
cmp
add
xor
mov
mov
mov
mov
shl
int3
daa
inc
pop
lock
mov
cmpb
shlb
mov
mov
ljmp
inc
xchg
std
loope
push
xorl
xchg
cmpsl
jl
stc
push
icebp
jp
shrl
movsb
mov
fs
xor
ljmp
ds
fs
sub
inc
outsb
add
enter
aam
stc
stos
push
xor
cmp
xchg
and
and
adc
add
pop
popa
inc
cmp
cmc
cmp
lods
in
add
inc
outsl
out
push
je
inc
mov
lds
and
adc
stc
sbb
xchg
sahf
pop
cmpb
std
imull
inc
or
sbb
lret
push
push
or
mov
pop
jmp
pop
jo
fs
xchg
adc
sub
lds
movsb
in
roll
test
mov
jl
repnz
cwtl
dec
pusha
sti
push
in
inc
jbe
jmp
mov
in
push
je
push
js
inc
adc
out
jl
cmp
or
shll
push
cmp
jg
pop
test
jecxz
fwait
xchg
mov
jns
div
leave
hlt
cli
negb
sbb
jp
xchg
mov
or
mov
push
insb
pop
jecxz
imul
sbb
out
mov
fs
repnz
xor
push
inc
lahf
mov
aad
push
sbb
insl
gs
out
pushf
out
sub
fwait
movsb
pop
hlt
adc
cmp
add
inc
ret
xchg
pop
test
imul
sub
jecxz
mov
test
add
push
cmpsl
les
stos
pop
or
imul
fidivrs
add
mov
cmpsb
mov
adc
notb
negl
outsb
sub
push
mov
mov
mov
jnp
jno
dec
xlat
nop
sbb
lock
mov
nop
fisubl
jbe
push
lds
out
add
and
cmc
int
out
lcall
mov
movsb
ret
rcl
out
lock
fimuls
adc
mov
push
xor
shll
and
shrl
vsqrtss
xchg
aaa
mov
lds
andl
or
fldenv
cmpl
and
or
and
sub
cmp
pop
or
lcall
lcall
pop
das
cmpb
fcompl
shll
sbb
cmc
dec
ss
jnp
xchg
pushf
ret
test
xor
jp
out
xchg
test
fstl
scas
pop
data16
bound
xchg
cwtl
mov
cmpsb
std
rcrb
rorb
mov
inc
das
pop
adc
mov
lods
cs
arpl
jl
lods
shl
pop
lods
ljmp
mov
js
loop
ja
cmp
push
shr
xchg
shll
lret
stc
orl
pop
subl
das
lcall
dec
or
cmp
or
xchg
jge
dec
cmp
out
and
lods
push
lods
es
jl
dec
cltd
int
ss
rcrl
pop
or
out
jbe
cmp
or
xchg
scas
inc
cs
rcr
xor
scas
xchg
int3
push
xchg
adc
pop
adc
mov
xchg
and
mov
shrl
mov
xchg
in
dec
adc
add
sbb
dec
shr
cwtl
mov
mov
cmp
push
cltd
jl
push
jg
inc
mov
jo
pop
hlt
into
bound
inc
or
or
push
push
lock
cs
aaa
adc
push
push
pop
lods
pop
test
pop
mov
fsubp
sbb
mov
xchg
inc
pop
outsb
shll
mov
mov
cmp
inc
popa
and
and
cmpsl
mov
jg
inc
ds
sub
jno
cmc
jge
es
cld
sub
sbb
pop
in
mov
into
outsl
aaa
push
leave
jb
jmp
jecxz
addr16
jle
les
jle
add
push
mov
sub
cmc
fstps
cmp
mov
subl
out
xlat
dec
cld
fucomip
cmp
in
jo
push
mov
scas
data16
stos
adc
add
sahf
mov
mov
jmp
or
xorb
mov
add
push
add
sbb
cmp
test
mov
add
iret
clc
pop
leave
lret
dec
out
or
cmpsb
mov
ljmp
xor
sbb
nop
jno
add
and
jl
les
pop
cmp
cwtl
push
movsb
cmpl
imul
lods
or
inc
mov
cltd
shl
lret
test
xlat
jp
xlat
pop
enter
mov
push
and
rorl
add
push
xor
sub
cli
push
and
ret
aad
out
rorb
cmpsb
sbb
xchg
push
leave
pop
sbb
out
inc
mov
enter
jp
lcall
sahf
dec
sbbb
xor
adc
xchg
pop
iret
daa
jns
bound
sub
cmp
xor
add
shll
repz
pusha
pop
push
dec
mov
fs
das
loopne
dec
jl
inc
insl
push
in
xchg
pop
push
pushf
aam
xchg
outsl
shl
mov
iret
add
sbb
xor
sbb
cmpsl
mov
pusha
repz
sbb
mov
int3
shlb
pop
add
inc
add
test
adc
decb
xchg
mov
test
cmp
mov
push
xchg
xchg
je
dec
std
sub
iret
scas
decl
add
outsl
sub
fs
jmp
push
fiadds
xorb
xchg
sbb
sub
sub
retw
aas
pushf
fdivs
movsb
outsl
pop
cmp
pop
faddl
and
mov
xchg
jnp
cmp
loope
and
jp
filds
add
rorl
mov
push
mov
ret
jl
adc
cmp
inc
aaa
cmp
pushf
mov
insl
push
push
ja
inc
gs
push
in
mov
lock
out
add
xlat
jo
lea
mov
int3
loope
ljmp
pop
test
and
or
sbb
add
shlb
insl
cli
and
adc
add
mov
dec
movsb
mov
shrb
mov
sbb
push
scas
into
mov
mov
cwtl
mov
aad
adc
mov
jnp
mov
aas
cmp
push
and
arpl
or
fwait
loop
daa
and
sbb
jl
dec
inc
jne
das
xchg
sbb
mov
out
add
int
fdivrl
shl
dec
cmp
aam
mov
push
popf
mov
sarb
jo
mov
push
push
mov
push
imul
cmp
rcr
inc
pop
add
fisttps
dec
nop
ficoml
adc
sti
mov
push
adc
movsl
adc
mov
aam
inc
test
lds
scas
rcrb
repnz
mov
sahf
icebp
bound
sub
iret
sbb
push
and
sbb
arpl
lods
cmp
add
sti
frstor
out
das
mov
jg
sarb
and
xor
xchg
push
pop
jg
fwait
in
jno
addr16
es
imul
bound
or
jb
dec
adc
push
mov
or
xor
sbb
out
fstl
mov
adc
call
or
rcrl
dec
xchg
pop
pusha
add
dec
sbb
test
out
xor
mov
fdiv
xchg
push
pop
lahf
or
ss
or
sbb
data16
jo
or
xchg
mov
push
sti
and
fstps
mov
sbb
push
mov
jns
inc
mov
push
jg
sub
cltd
lock
adc
xchg
or
adcb
mov
jb
cmp
fsubrp
push
mov
pop
fisttpl
jp
scas
dec
int3
push
ss
fs
push
test
mov
or
test
adc
aaa
push
cmpsb
sub
cmp
out
and
dec
sub
fs
ds
jge
lret
push
xchg
lock
arpl
shll
pop
std
adc
cwtl
adc
daa
icebp
xchg
lds
icebp
leave
mov
pop
jl
mov
enter
mov
sti
xchg
mov
iret
jmp
test
push
and
xor
lods
popf
call
sub
loop
lret
jnp
mov
xchg
adc
movsb
cld
jbe
lods
in
push
fdivrs
push
test
pop
jg
idivb
pusha
fdivrl
dec
cmpsl
jmp
jb
test
sbb
sarl
push
daa
aad
sub
rcr
jb
popf
pop
sbb
testl
jp
pop
cwtl
mov
and
jmp
clc
pop
aam
jecxz
lcall
mov
jl
dec
out
imul
sub
in
jo
lret
mov
test
fwait
mov
jne
pop
sub
fidivrs
outsb
dec
dec
dec
mov
mov
xor
orb
mov
pop
mov
push
sti
sbb
mov
cwtl
dec
and
enter
push
jae
mov
or
repz
mov
mov
push
mov
fxch
je
inc
stos
insb
xor
sbb
cs
decl
repz
test
xchg
mov
int
jle
fiaddl
out
mov
push
push
add
bnd
and
adc
sub
xchg
test
or
out
jne
xor
ja
jmp
xchg
movsb
xchg
nop
cs
inc
xchg
pop
sbb
sbb
dec
jnp
sbbl
dec
frstor
xor
pop
jmp
push
int3
cwtl
insl
xor
hlt
jle
xlat
sbb
xlat
jp
push
sub
rclb
lds
fildl
mov
xor
and
insl
sub
sbb
cmp
imul
xor
xchg
icebp
inc
sub
inc
dec
inc
rcl
mov
inc
and
ds
push
xchg
sub
pushf
adc
lods
popf
or
rol
inc
nop
mov
loope
and
out
mov
lcall
pop
leave
cwtl
jle
frstor
mov
lahf
icebp
in
hlt
out
aas
push
adc
test
lea
hlt
repz
cmp
xchg
cld
stos
call
lea
fbstp
test
add
adc
pop
sbb
std
pusha
icebp
jae
adc
loope
or
bound
mov
mov
or
fstl
push
repnz
mov
xor
fs
pop
xor
pop
insb
sbb
cli
pusha
xchg
jae
and
lock
pop
fstpt
outsl
add
stos
xor
xor
in
cmp
lahf
daa
or
jp,pn
mov
jg
xchg
pop
sti
in
fstpt
xchg
movsb
sbb
inc
in
insb
repnz
lea
adc
rolb
push
lds
fwait
inc
lock
inc
adc
int
or
leave
adcb
xor
mov
inc
sbb
test
adc
les
push
cmp
fdiv
ljmp
cwtl
lods
gs
dec
dec
xchg
scas
enter
movsb
dec
push
ss
sub
enter
mov
mov
sub
jae
orl
mov
cmp
jae
or
pop
add
mov
aam
xchg
outsb
adc
push
sbb
cmp
dec
jae
xchg
aaa
jne
ljmp
xorb
mov
cld
push
xchg
jns
xchg
dec
push
xchg
es
pop
insb
in
xchg
xchg
rcrl
adc
das
push
insl
inc
lds
push
mov
je
sbb
or
mulb
or
add
fimuls
jmp
sub
cmp
movsb
push
xor
cmp
sbb
dec
adc
jecxz
sarl
aam
cmp
mov
dec
sbb
dec
mulb
fisubl
stc
and
fwait
test
pop
dec
addr16
test
xchg
mov
fnstenv
jecxz
rol
adc
lcall
outsb
mov
add
cwtl
call
aad
sbb
inc
sarl
add
xchg
jnp
or
inc
push
adc
jnp
xor
pop
cmpb
jbe
cld
add
call
push
dec
int3
lahf
or
iret
sbb
fs
cmc
test
lock
test
dec
enter
imul
lods
or
jmp
movsb
cmp
push
jl
mov
movb
jp
rolb
out
adc
enter
mov
xor
inc
inc
shlb
shrb
mov
add
out
lahf
mov
xor
push
xchg
dec
pop
aad
ja
pop
and
xchg
in
push
fnstenv
jp,pn
dec
js
dec
mov
std
js
ja
outsl
xor
lcall
pop
xchg
movsb
sub
gs
fmull
or
mov
mov
in
shl
outsl
adc
sbb
fisubl
fdiv
and
shll
jecxz
xor
push
xor
mov
insb
lahf
scas
sbb
pop
bound
lea
daa
jb
xchg
aam
mov
mov
cmp
push
sbb
pop
adc
push
add
dec
mov
stc
jmp
cmp
push
mov
dec
xchg
cmp
mov
pop
repz
out
jae
adc
pusha
pop
push
cmc
lea
loop
insb
inc
or
nop
jne
mov
adc
cmp
sub
loope
inc
loope
out
hlt
out
das
int
test
cmp
ret
out
data16
cmp
lods
hlt
sub
and
push
mov
mov
adc
mov
notl
psrld
sbb
insb
sbb
xchg
in
seto
jns
jb
push
divl
cmp
mov
aam
imul
jmp
shrl
dec
sub
xchg
rcll
int
pop
dec
lahf
cvtpi2ps
push
inc
aad
clc
sbb
add
push
mov
mov
popf
or
mov
je
pushf
out
and
loopne
push
and
ficomps
adc
bnd
sub
adc
clc
je
arpl
xor
in
mov
je
into
enter
jp
add
push
dec
mov
pop
push
cmpsl
enter
pop
mov
fwait
scas
movsb
sub
adc
ficompl
mov
mov
lods
mov
mov
bound
stos
popa
and
dec
fistl
popf
cmc
cld
sub
lahf
lretw
shrl
js
pop
and
fdivrs
mov
sub
test
mov
fucomp
sub
adcb
mov
jmp
sub
pop
mov
add
into
movsl
mov
mov
pop
imul
lods
dec
loopne
rclb
lods
mov
pop
jbe
rcrl
inc
lods
inc
dec
adc
shrl
mov
in
scas
and
xchg
jne
jae
cmc
and
push
jg
lret
mov
insb
xlat
icebp
shrl
xchg
std
inc
lds
dec
idivb
ja
push
add
mov
xlat
or
push
cmp
xchg
push
lods
xor
lock
dec
call
pop
adc
cmpsl
pop
sbb
test
addr16
in
jecxz
add
add
push
dec
adc
lods
movsb
adc
sub
cld
fisubs
scas
sbb
fidivrs
jge
cmp
loop
shrl
add
add
xor
lods
stos
test
mov
cli
push
inc
dec
add
lock
cmc
enter
sahf
cwtl
sahf
jg
sbb
push
mov
inc
mov
sbb
lods
loop
sarb
fstl
jle
cmpsb
lret
cmpsl
int3
icebp
pop
mov
adc
test
cmpsl
movb
ret
das
mov
add
or
pop
loopne
repz
dec
sti
fmull
lods
mov
mov
rol
test
add
sbb
add
std
int
add
jo
iret
insb
scas
mov
aad
mov
xchg
movsb
ss
cmp
mov
loopne
pop
adc
adc
fcmovnb
aaa
add
mov
cwtl
adc
push
and
push
jo
pop
lock
out
mov
or
cmpl
sub
movsl
mov
xorl
dec
pop
daa
xlat
xlat
pusha
mov
dec
test
mov
inc
fs
fwait
xlat
or
add
aad
mov
xchg
and
enter
push
pop
test
cli
inc
push
adc
mov
lret
or
mov
push
lds
inc
xchg
sbb
leave
sub
pop
push
aam
int3
fdivs
lret
add
mov
data16
jo
jle
sbb
js
dec
lods
and
ja
sarl
lahf
data16
data16
add
fldt
mov
mov
mov
or
xor
bound
cmpsl
adc
punpckhwd
stos
mov
movsl
inc
imul
push
movsl
pop
nop
sub
shrb
lret
mov
xchg
popf
bnd
xchg
imul
lahf
into
jae
ret
cli
lds
and
fildl
sarb
sub
enter
in
imul
lret
inc
arpl
lea
sbb
filds
lcall
fcompl
add
aad
pop
pop
cmp
sub
int3
and
xchg
push
adc
xlat
jl
sbb
xchg
mov
rcr
adc
xchg
mov
mov
and
cltd
or
arpl
pop
mov
hlt
sahf
sbb
and
mov
cmp
stos
pop
adc
mov
and
test
pop
mov
mov
cmp
imul
popw
and
lret
jbe
fisubl
push
pop
rcll
leave
mov
int
test
in
stc
mov
push
mov
fsub
hlt
loopne
push
std
cmp
mov
cmp
sar
es
clc
push
mov
loopne
xchg
pop
lds
push
sub
pop
or
cmpsl
sbb
out
notb
test
inc
push
sbb
out
fwait
jne
mov
js
fs
mov
cmp
sti
jle
xor
mov
sbb
cmp
sub
xorb
movzbl
imul
ret
aad
jno
push
loop
push
xor
mov
sbb
or
xchg
idivb
inc
mov
cmp
ficompl
xor
mov
pop
push
jp
push
mov
test
mov
sti
or
and
xchg
xor
test
xchg
lods
jno
push
shlb
inc
mov
push
loop
in
test
enter
in
ret
jecxz
shr
pop
fstp
cld
stos
stc
std
xor
pop
aas
addps
mov
pop
pop
push
cmp
jp
add
mov
xchg
outsl
ljmp
pop
sbb
cli
xorb
push
mov
cmp
jb
adc
mov
ljmp
sbb
add
push
xchg
mov
push
sbb
inc
mov
insb
cld
mov
xlat
int
fisttpl
es
xchg
repnz
in
mov
inc
lods
daa
jp
in
fmul
sbb
cmp
clc
sub
push
jp
ficoms
dec
cmpsb
nop
jp
fisubs
xor
lcall
mov
jnp
or
or
jbe
sbb
mov
mov
mov
das
stos
cmp
adc
cmpsb
clc
inc
xor
leave
inc
pusha
jae
out
mulb
out
mov
push
push
xor
aas
sbb
lds
lea
fisubrs
test
data16
sub
daa
inc
ss
cmp
pop
lret
je
add
xorl
push
mov
pop
or
test
pop
notb
test
xor
test
inc
fcoms
outsb
mov
or
xor
adc
and
loopne
mulb
mov
subl
mov
ret
popf
mov
sar
adc
xor
dec
call
mov
in
push
mov
mov
out
xchg
ret
ljmp
push
cmp
loopne
pusha
sub
jae
or
shlb
cs
arpl
jo
mov
subb
test
stos
out
inc
enter
push
aam
cmp
sub
dec
jge
daa
nop
pop
jle
mov
xchg
push
and
xchg
xor
aas
xchg
je
ljmp
xchg
cmpl
rcll
fstpt
jae
or
mov
adc
callw
push
or
ficoms
leave
fcmovu
dec
loope
movsl
mov
push
dec
push
xchg
xlat
add
mov
aam
pop
daa
cmc
dec
pop
xor
sub
out
scas
fwait
sub
push
test
mov
jne
out
jns
outsb
loope
xchg
or
inc
sbb
lods
and
inc
mov
jbe
inc
lahf
sbb
test
dec
inc
jnp
mov
rol
xchg
mov
adc
mov
cli
sub
repz
mov
xchg
xchg
mov
push
scas
sbb
pop
cmp
fstp
sbb
in
rcrb
push
jg
dec
mov
xor
fcmovbe
dec
pop
jbe
ficompl
scas
mov
addr16
xorl
or
pop
nop
ret
daa
lcall
mul
mov
lods
push
cmpsb
lret
mov
inc
cmp
aam
je
mov
jae
dec
js
xlat
xlat
sub
dec
lahf
lea
in
inc
mov
pop
cld
imul
pop
jecxz
jg
inc
enter
pop
std
scas
mov
pop
sti
test
fwait
lods
inc
adc
mov
jle
inc
fbstp
jns
mov
jno
mov
rcrb
pop
lahf
adc
xchg
hlt
popa
fdiv
clc
js
pop
js
dec
sahf
cwtl
jg
xor
insl
adc
lock
lea
testb
mov
loope
ficoml
lds
js
rol
iret
scas
ja
jecxz
xor
sbb
adc
inc
aas
sbb
clc
xchg
add
icebp
and
sahf
pop
add
fcomp
mov
ret
iret
cltd
js
stc
and
cltd
and
xchg
dec
push
fwait
or
pushf
add
xor
add
pop
sub
jae,pt
aas
clc
dec
popa
mov
sbb
lcall
mov
xor
divb
pop
out
insl
fsubrl
call
mov
xchg
xchg
adc
dec
shr
cltd
sbb
jle
les
imul
sbb
daa
fnstenv
push
out
push
mov
xlat
mov
push
lea
xchg
mov
lods
add
les
rcll
push
mov
dec
jno
pop
jp
int3
sub
in
sbb
cmpsb
mov
mov
xor
aad
jge
dec
data16
xor
ja
test
ret
xor
in
sub
lds
push
inc
enter
jecxz
in
sbb
pop
pop
int
imul
dec
stos
fildll
movsb
gs
fwait
es
shrl
xchg
je
bound
arpl
and
fldenv
sub
pop
mov
bound
xorl
or
fsubs
repnz
loopne
stos
lcall
and
lcall
pop
push
dec
leave
mov
pop
sub
orl
lea
pop
test
jg
push
xor
lret
push
jns
sbb
xlat
xor
out
xchg
int
push
mov
xchg
and
inc
add
aam
aaa
pop
sub
inc
add
std
sarl
ret
or
adc
rcrb
cwtl
leave
mov
pop
ret
cmp
adc
lcall
dec
iret
mov
std
push
ljmp
aaa
cmpsb
in
aaa
repz
sub
testb
xchg
out
repz
ds
movsl
mov
rclb
cmp
ljmp
or
imul
ds
stc
movsl
aas
lods
push
jb
jle
sbb
push
fnstcw
loopne
stc
jmp
shlb
push
sub
mov
in
jne
sub
inc
inc
inc
dec
or
clc
sbbl
cli
pop
push
mov
add
mov
movsb
stos
pop
cmpsb
mov
and
jl
sbb
push
cld
aaa
mov
sub
mov
cmp
push
clc
lock
mov
int3
test
and
das
cmp
dec
push
push
ja
jg
arpl
mov
xchg
push
movsl
mov
pusha
inc
sub
add
in
sub
gs
dec
nop
inc
inc
pop
aam
imulb
pusha
sbb
sarl
and
xchg
push
jne
int3
inc
jl
cmp
pop
fwait
jecxz
test
push
jno
insl
inc
mov
outsl
jae
cmpsl
mov
jg
mov
xor
or
das
stos
lret
ljmp
repnz
bound
dec
mov
lea
mov
ror
in
clc
inc
add
mov
movsl
mov
inc
adc
pushf
xlat
mov
cmp
mov
dec
es
and
int3
mov
ficompl
fidivl
or
sbb
add
xchg
push
imul
inc
ret
lds
sub
js
push
popa
push
rolb
mov
into
pop
fbstp
mov
imul
aad
mov
mov
push
outsl
jns
idivb
rcll
mov
cmp
cs
enter
test
loop
or
and
jne
mov
enter
add
inc
stc
or
enter
iret
jg
and
idivl
mov
repz
pop
dec
and
outsb
sub
mov
or
add
sub
fcmovnbe
ret
subb
les
movsl
lcall
jecxz
out
push
or
cltd
cmp
lds
out
cmpsb
outsb
adc
lea
xchg
lret
fsubrs
loopne
sbb
xor
xor
xor
add
lods
jbe
push
orl
push
shrl
jb
shll
flds
sbb
dec
cmpsb
repz
es
mov
rcrl
mov
fidivrs
push
xor
lret
stos
push
in
add
pop
push
add
lock
pop
dec
pop
sub
add
xor
loope
ds
xor
jecxz
jmp
jl
inc
mov
xchg
popa
add
mov
add
inc
adc
jbe
adc
leave
out
xor
pop
mov
jmp
inc
and
mov
dec
pop
inc
sub
jbe
mov
rcll
fs
or
xor
call
stos
xor
pushf
dec
and
mov
xor
int3
les
mov
data16
pop
pop
adc
xchg
sub
call
test
jmp
dec
mov
clc
adc
fld
mov
rcrl
lret
pop
dec
jo
sbb
leave
jno
es
cwtl
cmc
cmp
xor
pop
fldl
adc
movsb
imul
and
push
or
js
cmc
push
jmp
mov
mov
mulb
loopne
or
cmp
pop
sbb
push
inc
add
jb
fwait
adc
lock
mov
orb
mov
jge
push
out
or
pushf
xchg
sbb
loop
mov
add
sub
add
mov
ss
sbb
je
pop
sub
dec
dec
xor
add
xchg
ret
adc
cmp
pop
jge
jl
inc
pop
or
push
test
or
fildll
jecxz
imul
in
das
iret
pop
cmpsl
mov
pop
dec
cmp
inc
fistpll
jmp
xchg
sbb
dec
stc
scas
add
and
movsb
xchg
lcall
in
mov
mov
movsl
imul
lret
mov
or
mov
xor
sbb
pop
xor
ds
movb
sbb
clc
pop
ds
and
xchg
mov
test
xchg
in
cmc
mov
cmp
outsb
add
aaa
mov
repz
lret
pop
push
sbb
mov
add
inc
rcll
mov
dec
push
out
add
lock
pop
mov
adc
shl
pop
fs
xchg
lea
push
xor
sarb
push
sbb
fadds
jno
adc
ss
mov
pushf
jo
jno
sarl
dec
jge
pop
dec
inc
dec
sbb
jecxz
mov
jmp
ret
sub
cmpsl
inc
shrb
nop
inc
add
pop
in
pop
lods
lock
or
sti
lods
mov
inc
adc
cmpsl
pop
outsb
je
inc
and
sub
je
fildll
xchg
mov
and
sub
xor
mov
cwtl
cmpsl
js
push
daa
pushf
aaa
mov
rcll
pop
cmpsb
cmpsl
call
sahf
test
jl
pop
gs
ljmp
pop
xor
push
xchg
movb
push
fidivrs
je
shlb
jns
insl
fcomps
int3
jle
mov
mov
mov
shlb
mov
xor
adc
jo
stos
xor
leave
in
fprem
aas
lods
jb
push
in
lods
inc
cltd
fistpll
jmp
add
call
std
addr16
jle
cmpsl
xchg
pop
insb
insl
pushf
pop
repnz
repnz
sub
mov
lea
push
test
lds
lea
cmpb
or
sarb
test
xor
mov
push
je
xchg
push
cltd
out
btc
xchg
imul
lret
jae
push
dec
xchg
imul
cmp
mov
xchg
movsl
mov
cs
or
or
ljmp
scas
aad
les
lods
and
xor
into
mov
lods
jnp
mov
push
lcall
int3
pusha
push
or
iret
sbb
add
rorl
mov
cs
or
pop
xchg
aad
jnp
adc
inc
mov
xchg
dec
jno
xchg
jo
mov
aam
sti
out
out
pop
or
or
inc
lods
rclb
loopne
mov
cmp
inc
add
pop
repz
or
push
jb
mov
hlt
fbstp
andl
and
movsl
call
push
dec
lahf
and
dec
add
in
mov
ret
sarl
mov
call
pop
adc
xchg
jle
push
fmul
mov
shrl
xchg
loope
pop
mov
sahf
xor
fsubs
push
adc
mov
mov
test
loop
lods
mov
loopne
push
imul
push
test
add
out
sub
and
jmp
pop
stos
push
sbb
inc
mov
mov
test
stc
clc
scas
push
scas
sub
xor
mov
fwait
pop
push
in
add
leave
test
mov
or
adc
adc
sbb
cmpsl
repnz
pop
sub
in
dec
decl
dec
out
mov
repz
xchg
out
int3
testl
mov
in
lock
inc
mov
xchg
xchg
cmpl
adc
jbe
cmp
lcall
fdivl
mov
rol
mov
mov
and
sarl
arpl
cmp
jno
cmp
lods
stc
xor
jb
lret
pop
jl
test
lret
xchg
test
inc
push
test
cld
mov
pop
jno
cmp
std
and
jmp
data16
and
jmp
cli
aas
inc
gs
jl
ss
xor
push
pop
test
stos
sub
xor
jb
ss
dec
xchg
xchg
mov
adc
pop
fisubl
popf
aad
sub
inc
ficomps
mov
aad
jecxz
mov
out
movsb
pop
rolb
addr16
push
les
fisubrl
cwtl
cwtl
xchg
hlt
cld
fcoms
mov
xor
repz
xor
sar
xchg
hlt
sub
arpl
shrb
or
scas
hlt
loopne
pop
inc
fnsave
or
and
lahf
inc
push
xorl
pushf
lock
adc
pusha
cltd
fimull
ret
insl
shrb
push
mov
iret
xor
jmp
or
inc
rolb
imul
lea
mov
repz
ud0
mov
inc
sahf
mov
push
imul
jmp
jne
orb
pop
clc
fcompl
pop
insl
sahf
ja
adc
mov
test
mov
mov
cld
ljmp
mov
jnp
cmp
fwait
inc
push
mov
daa
cmp
int
cmp
adc
out
xchg
and
lea
adc
outsb
test
mov
inc
xchg
mov
xor
jmp
push
fildll
inc
mov
cltd
jbe
cmp
imul
push
push
mov
cltd
adc
mov
test
cld
adc
cld
inc
dec
cld
push
in
jno
sub
pop
sub
leave
cmp
lock
and
aaa
in
adc
jmp
and
movsl
push
jae
and
clc
mov
std
inc
xor
leave
iret
daa
aad
sarb
cltd
adc
xchg
lods
and
jg
xchg
xorb
sub
sahf
push
xchg
add
loope
pop
es
in
out
xchg
sub
push
bound
lds
lret
dec
inc
std
iret
movsb
pop
lahf
int
sub
cmpsl
or
rorb
jle
pinsrw
sbb
in
ja
mov
fmuls
and
and
daa
lods
insl
mov
rcrb
pop
mov
jnp
js
push
rorl
xlat
xchg
sahf
xchg
dec
pop
int3
dec
aam
stos
push
pop
mov
repnz
xorl
xor
int
std
dec
pop
and
inc
aad
lock
in
mov
push
sub
inc
scas
ds
jo
mov
xor
pop
clc
into
popa
out
loop
mov
into
xor
imulb
dec
clc
popf
push
mov
cli
or
lret
cmp
sbb
in
push
push
lea
mov
xor
iret
test
es
insl
mov
or
test
movsl
or
mov
cmc
rcrl
jbe
stc
jg
push
add
dec
or
bound
mov
jbe
incb
inc
jl
outsl
mov
or
mov
es
test
pop
mov
mov
sahf
mov
or
and
dec
idivl
mov
in
inc
cs
xor
mov
pop
and
test
push
cmc
jb
retw
idivl
icebp
xchg
adc
outsl
mov
imul
inc
push
fwait
fwait
pop
stc
lcall
insb
push
cli
push
mov
mov
xchg
clc
in
lret
repz
int
jne
lcall
dec
pop
sbb
xchg
xor
leave
xor
add
lcall
cld
aam
xchg
sub
imul
push
push
outsb
add
lea
jbe
rol
push
orb
jne
xchg
lock
fisttpl
out
lds
arpl
out
sub
xorl
xlat
mov
repnz
mov
cli
sar
mov
addr16
lret
jg
lea
jge
mov
or
xor
xorb
xchg
inc
cmpsl
stos
dec
fs
out
loopne
scas
loope
and
mov
aas
and
lods
mov
fsts
in
mov
mov
in
stc
cs
inc
dec
outsb
ds
iret
adc
test
cmp
push
cltd
enter
js
loopne
jbe
jle
test
sbb
sub
enter
out
or
lahf
inc
sbb
inc
lret
xor
mov
xlat
test
loope
push
xchg
adc
and
mov
in
lods
bnd
push
sub
rcrl
clc
rcr
cmp
in
cmp
stos
movsb
in
adc
pop
ja
pushf
in
mov
aam
lods
push
xor
sub
dec
xor
cli
repz
arpl
push
in
xchg
lods
push
in
lcall
xchg
nop
push
flds
push
jns
daa
jno
cmp
jae
cltd
xchg
into
scas
dec
and
sahf
mov
repnz
jmp
mov
mov
or
fdivrs
xlat
loope
xor
mov
test
dec
adc
ret
aam
jb
ficoms
xlat
int3
xor
leave
arpl
loop
enter
add
jnp
add
out
fsubrl
sub
and
repnz
mov
xchg
cmpsl
shlb
lea
jo
lcall
insb
ret
and
mov
fucomi
pushf
loopne
ja
rcrb
push
stc
xor
xor
bnd
inc
cmp
mov
inc
ror
pop
inc
icebp
lret
mov
es
mov
sysenter
in
pop
jae
xchg
cwtl
and
add
and
movl
cmp
mov
pop
std
inc
mov
and
mov
lock
pop
mov
add
data16
cwtl
aas
mov
mov
mov
cld
cmpsb
pop
cmp
xor
ljmp
xor
xchg
pop
push
sub
hlt
push
fmull
push
int
aas
mov
and
xchg
out
pop
ljmp
loopne
fwait
outsb
push
xor
cld
sbb
mov
push
jg
cs
repz
es
xchg
and
lahf
jmp
mov
repz
jge
sahf
pcmpgtw
outsl
aaa
xor
jg
mov
mov
stos
shll
dec
jbe
pop
inc
imul
divb
les
fildll
jle
movsl
jmp
icebp
jbe
sub
ficoml
rcrb
add
cmp
pop
dec
mov
testl
or
adc
cmc
xlat
mov
ja
js
cmpb
subl
sbb
cwtl
test
pop
jno
sub
test
sbb
dec
sbb
pop
push
outsl
test
pop
ds
mov
xchg
sbb
lcall
cltd
fistl
leave
addr16
pushf
in
insb
cli
fsubrl
mov
fwait
das
decb
pop
dec
lcall
icebp
incb
cmp
daa
xchg
push
loope
bound
call
test
lahf
clc
movsb
or
scas
dec
adc
mov
pusha
lock
cmpsb
in
jg
push
jb
dec
mov
popa
cmp
adc
xor
dec
mov
ljmp
movb
push
sbb
adc
out
jns
mov
sahf
xchg
jmp
cli
push
sub
mov
test
push
decl
lock
xchg
in
lods
pop
xor
add
mov
out
dec
cwtl
stc
mov
outsb
test
xchg
add
scas
jge
loop
das
clc
sbb
cmp
adc
jle
popf
jmp
sahf
jae
or
push
sbb
adc
in
sti
push
xchg
pop
mov
and
sub
xchg
insl
stos
scas
jne
sub
push
push
jne
adc
adc
push
pop
bound
sbb
nop
xchg
cs
and
stc
mov
and
cmc
mov
stos
dec
inc
xchg
ret
sub
mov
icebp
data16
mov
rcrl
ja
adc
mov
push
sbbl
pushf
jne
xchg
insl
mov
jecxz
insl
jns
push
mov
cmp
push
push
or
ficomps
adc
jp
lea
pinsrw
mov
imul
nop
out
popf
adc
loopne
dec
adc
adc
fucomp
push
sbb
jmp
into
test
dec
sub
cmp
scas
stos
xor
push
leave
push
push
xchg
pop
sub
push
xor
fldlg2
xor
inc
mov
daa
or
mov
daa
inc
xorb
mov
push
movsb
xchg
dec
testb
and
or
sbb
adc
dec
movsl
lock
mov
xchg
fimuls
fcoml
pop
clc
cmp
jmp
fbld
and
sub
jbe
cmpsb
in
mov
dec
xlat
cltd
imul
cmc
pop
shrl
or
cltd
aam
imul
sbb
xchg
clc
orb
xlat
sub
and
cmpsb
push
mov
xchg
cld
xor
insb
push
sbb
arpl
insl
mov
ds
push
arpl
cltd
icebp
fbstp
pop
inc
sbb
in
loopne
dec
xor
add
scas
int3
mov
out
add
adc
xchg
rorb
cmp
test
aas
adc
push
hlt
pop
dec
adc
data16
scas
pop
dec
dec
mov
arpl
sub
cmpsb
nop
into
push
jo
sbb
sbb
ds
dec
cmpb
pushf
dec
add
ret
pusha
out
fnsave
pop
rclb
and
jl
fldt
cmp
inc
shrb
out
gs
aad
xchg
mov
mov
hlt
mov
aad
adc
and
mov
sub
sub
sub
test
lods
jo
mov
inc
outsl
jecxz
dec
inc
push
mov
mov
xor
fisubs
inc
xchg
scas
xchg
xchg
fiaddl
mov
mov
add
and
adc
mov
pop
pop
adc
xchg
sub
cltd
sub
mov
xor
jg
mov
mov
mov
xchg
sub
inc
out
cmp
pop
mov
mov
cmpsl
sbb
insl
popa
insb
or
and
scas
cmp
sbb
shlb
test
loopne
std
fidivrl
lods
jo
cmp
cli
xchg
pop
out
cmp
sub
in
stc
cs
fstps
sub
lods
adc
push
lea
mov
sbb
inc
lea
rorb
rcrb
dec
pop
xchg
xor
mov
or
mov
lock
test
mov
mov
dec
cmp
cld
pop
mov
sahf
loope
outsb
fdiv
fdivrs
mov
jl
sbb
push
push
lods
daa
aaa
jecxz
out
lcall
rorb
push
push
mov
pop
clc
cmp
aam
negl
test
or
mov
lods
lcall
dec
insb
mov
popa
aad
cmpl
lahf
lahf
mov
andl
nop
and
scas
dec
pop
mov
cmp
pop
xorl
sbb
adc
orl
pop
daa
jg
xchg
ss
and
sahf
flds
jne
or
imul
imul
sbb
loopne
and
adc
mov
mov
jne
ljmp
sbb
inc
cmpsl
aad
repnz
jb
sbb
in
movsl
stos
and
clc
adc
and
xlat
xor
imul
in
dec
mov
xorb
and
mov
dec
je
test
jl
es
and
xlat
add
les
mov
emms
sti
dec
add
cmp
mov
fstl
cmp
push
mov
mov
push
push
loop
pushl
push
adc
mov
cmpsb
mov
fisubrl
fcmove
mov
data16
cmc
shll
int3
mov
call
sbb
push
inc
sub
es
repz
or
jne
scas
std
pop
xor
fdivrs
enter
fsts
mov
aad
lock
aad
xchg
xor
inc
or
add
pushl
push
insl
jp
insl
fcomi
adc
fsts
inc
cmpsb
in
sbb
icebp
movsb
icebp
jo
add
jno
mov
das
push
scas
xlat
dec
xchg
push
out
mov
cmpsl
aas
mov
shlb
pushf
pop
cltd
inc
adc
mov
repnz
int3
stos
xchg
ja
xchg
push
call
mov
mov
inc
filds
fistl
cwtl
icebp
out
cmpsb
mov
fsubs
scas
push
sub
dec
das
lea
cmp
ficoml
and
mov
into
daa
lock
cmpsl
cld
sub
dec
lds
xor
popf
movl
sub
lods
movsb
mov
insb
imul
and
stos
cmpsb
movb
scas
ds
push
fisubl
push
jg
in
xor
ss
add
movsl
dec
add
not
xor
mov
mov
cmp
pop
pop
jp
sbb
mov
in
sbb
lock
jne
lods
test
mov
inc
xor
sti
inc
rclb
xor
mov
test
add
cld
pop
pop
into
jg
lds
outsb
shlb
lret
xchg
sub
mov
lret
out
int3
stc
xchg
mov
sub
fnstcw
cmp
not
lock
mov
loopne
mov
idiv
mov
mov
lcall
cmc
mov
cmp
push
adc
xor
aas
test
adc
ret
xchg
or
push
pop
and
push
pop
jle
push
adc
xchg
in
insb
inc
or
fldl
xchg
imul
enter
dec
out
insb
mov
xchg
lret
adcl
sahf
lea
in
imul
sbb
xor
outsl
nop
outsb
sub
jcxz
cmp
xchg
mov
testl
leave
push
and
xor
call
loop
les
push
fildll
inc
or
fucomi
call
hlt
sarb
pop
popa
out
das
sbb
xlat
mov
add
stos
test
dec
enter
jg
shll
and
pop
movsl
orl
in
outsl
inc
pop
popa
arpl
adc
sbb
pusha
fistl
jg
mov
jmp
or
jae
or
repnz
inc
inc
adc
mov
pop
and
cld
hlt
lods
push
inc
sbb
dec
sub
mov
andb
inc
leave
fwait
mov
cs
aaa
cmpsb
sbb
lret
cwtl
std
push
sbb
mov
adc
inc
mov
pop
pop
mov
jg
test
sbb
popl
repnz
sub
xor
mov
pushf
mov
sub
push
mov
jae
cmp
and
jns
into
sub
scas
and
ss
push
shll
jl
sbb
mov
pop
shrl
sarb
pop
dec
repnz
testl
fwait
mov
fstpl
orb
aaa
sub
mov
scas
shl
clc
call
xchg
imul
jecxz
push
jns
xor
mov
jne
jle
iret
mov
pop
jnp
roll
or
pop
pop
inc
call
pop
mov
imulb
mov
xchg
sbb
cwtl
mov
stos
xchg
sbbb
daa
test
xorb
jge
dec
jl
mov
push
add
jecxz
cmp
jns
adc
rcll
dec
fisubs
stc
cmp
jae
dec
enter
push
scas
inc
dec
adc
inc
xchg
or
int
enter
notl
jno
repz
pop
pop
fisubl
inc
ffreep
mov
xor
pop
push
stc
dec
or
outsl
or
jbe
push
mov
cwtl
and
imul
cmpsb
jecxz
std
sub
pop
shll
sub
imul
fistl
push
mov
adc
loop
xor
aam
out
daa
test
stos
add
xchg
xchg
pop
mov
fadds
inc
sar
mov
rol
and
das
mov
xor
xchg
adc
pop
adc
pop
mov
lods
push
nop
add
roll
data16
dec
jo
insl
js
sbb
fdivrs
mov
dec
adc
les
add
mov
mov
addr16
mov
pusha
xchg
mov
push
pop
dec
imul
arpl
pushf
movsb
xchg
adc
mov
dec
sahf
xchg
movsl
mov
xor
xchg
test
adc
inc
sarb
mov
fs
aas
adc
fldenv
roll
jmp
xor
add
hlt
dec
sbbb
outsb
cmpsl
push
sub
aam
aas
in
rorl
push
gs
shlb
fnstenv
push
add
stos
cmp
test
fisubrl
mov
sbb
inc
fimuls
nop
fimull
sub
lods
stos
jl
fwait
and
mov
push
popl
mov
xchg
pop
icebp
fdiv
inc
pop
jmp
data16
inc
cs
inc
std
mov
xchg
push
push
ljmpw
inc
push
mov
aaa
in
lahf
xor
daa
lahf
pop
notb
mov
mov
mov
ffree
out
xchg
out
push
mov
out
fs
pop
or
movsb
imul
mov
out
movsl
add
or
sbb
or
inc
xor
das
cmp
pushf
addr16
and
mov
test
mov
lret
jae
popf
or
adc
dec
mov
cmp
fstps
cmp
cmp
lret
inc
out
mov
cmp
fistps
sahf
orl
dec
stc
add
jae
enter
ret
das
hlt
inc
movsl
testb
ret
mov
std
in
cmp
fwait
mov
dec
repz
cli
xor
repnz
mov
mov
push
out
sbb
divl
jle
imul
aam
mov
pop
xchg
es
xlat
jp
cmp
push
test
xchg
shlb
xchg
insl
sub
cmp
test
push
adc
dec
in
push
jae
mov
ret
lcall
mov
ljmp
sub
lea
mulb
rcl
add
outsb
mov
mov
mov
shrb
pop
in
push
sbb
or
mov
pop
mov
push
jno
and
mov
xor
out
push
sbb
addr16
leave
pop
cmp
movsl
arpl
lods
das
or
js
adc
icebp
pop
dec
sub
and
cwtl
fcoms
cmp
cltd
push
mov
push
pop
cwtl
dec
out
das
sarb
nop
adc
lods
std
js
cmc
jno
push
jns
adc
jbe
mov
mov
imul
xchg
stos
outsb
sbb
jb
cs
push
and
sbb
je
movsb
push
fwait
imul
push
shlb
push
inc
inc
lcall
lods
mov
jae
mov
inc
cmp
out
cmc
add
inc
pop
clc
xor
fwait
or
cs
cltd
inc
enter
jns
aam
sbb
jbe
stos
clc
test
daa
test
pop
xorl
clc
ss
pop
popa
and
xchg
mov
mov
dec
aas
aaa
xchg
sbb
add
mov
cmp
jb
jl
sub
mulb
hlt
insb
cwtl
pop
pcmpeqw
addl
mov
mov
data16
xchg
mov
imul
shrb
fistl
pop
mov
int3
mul
ret
add
loopne
mov
inc
and
jne
roll
pop
and
or
pop
or
fistl
divl
and
push
push
mov
clc
mov
sbb
repnz
inc
mov
cmp
pop
adc
or
outsb
lock
repnz
repz
cli
cmp
inc
push
push
push
pop
jl
sarb
sbb
mov
sbb
push
lds
jo
pusha
cmc
push
sbb
cmp
mov
push
xchg
push
mov
inc
shll
push
xchg
movsl
js
insl
imul
pop
ret
mov
sub
and
sub
movsb
dec
jmp
dec
in
and
mov
inc
lret
movsb
fwait
xlat
fnstsw
xor
shlb
dec
std
repnz
insl
fwait
xor
data16
aam
test
sub
push
repnz
push
cmp
out
rol
sub
pop
gs
les
xchg
push
jne
mov
mov
jmp
fisttpll
dec
jl
jno
jo
mov
fdivrp
cmpsl
add
fcmovnu
aaa
fcoml
dec
int3
and
pop
add
xchg
jmp
cld
adc
inc
mov
xchg
in
and
mov
mulb
test
sbb
sbb
sti
data16
ja
iret
adc
sbb
cmp
mov
loopne
scas
fisubrs
fcmovnbe
js
jno
push
scas
and
in
outsl
iret
mov
nop
stos
icebp
out
cmp
sub
sbbl
test
cmp
sbb
lods
xchg
cmp
pop
mov
scas
mov
mov
cli
pushf
and
mov
jl
lcall
repz
jle
loope
into
ss
jno
dec
test
pop
arpl
movsl
mov
cld
mov
inc
in
lods
cltd
dec
test
aam
or
inc
les
stos
gs
movsb
jg
test
dec
stc
les
pusha
fdivl
pusha
arpl
mov
cltd
lretw
enter
imul
insb
cli
ljmp
pop
dec
sub
in
pop
dec
lret
adc
pop
das
dec
or
cld
xor
clc
add
sbb
mov
ret
stos
cmpb
fimull
sub
and
dec
or
imul
icebp
add
test
inc
notb
shlb
stc
and
enter
popf
xor
ret
mov
mov
fwait
aas
mov
bound
sti
adcl
stc
adc
adc
mov
pusha
sbb
mov
fsubrl
add
or
jmp
add
inc
enter
cwtl
repnz
movsl
dec
and
xor
pop
dec
and
and
add
mov
jmp
sub
movl
lahf
inc
in
scas
push
fs
out
mulb
and
aam
xor
jge
aad
call
adc
sti
xchg
mov
imul
cmpsb
insl
mov
insl
push
cmp
fwait
inc
es
insb
pop
cmp
sbb
pop
push
sbb
jae
into
ss
dec
sahf
fldcw
sahf
jns
sbb
cld
push
add
inc
adc
mov
cmc
es
pop
mov
jmp
hlt
mov
mov
add
sub
loope
mov
push
jns
inc
mov
lcall
arpl
push
sub
mov
pop
outsl
adc
push
sub
imul
cwtl
cs
push
fistpll
mov
pop
or
add
test
dec
jno
lods
mov
and
dec
mov
ret
rorl
fldl
daa
inc
outsb
pop
inc
push
aam
std
dec
and
adc
cs
aam
movsl
mov
in
into
xor
pop
popa
loope
lock
cltd
in
cltd
push
sbb
incl
test
pop
dec
mov
inc
repnz
pusha
ficompl
subb
xor
adc
enter
add
test
xor
lret
xor
xchg
test
mov
jle
stos
ss
fs
fisubrl
ret
pop
xchg
stos
cmp
lods
jns
scas
std
xlat
or
inc
mov
imull
dec
mov
test
aam
sbb
sbb
popf
in
rolb
xchg
jo
adc
call
sbb
cmc
jno
or
sbb
repz
call
fbstp
mov
fdiv
jle
scas
iret
bnd
mov
sbb
xor
pop
test
push
push
mov
insl
mov
push
pop
xor
adc
mov
lret
xchg
jo
gs
lcall
dec
imul
xchg
cmp
dec
scas
lea
mov
and
call
or
sub
ljmp
stc
out
mov
add
dec
xor
or
dec
sahf
jp
aam
push
pop
dec
repz
mov
push
sub
pop
push
fstpt
loope
icebp
sti
or
mov
inc
jmp
lods
leave
mov
into
lahf
addps
lcall
push
push
sbb
scas
loope
push
outsb
cmp
mov
xor
popa
pop
push
insb
je
xchg
or
cmp
sub
adc
clc
jg
into
push
inc
call
call
xchg
pop
mov
repz
out
scas
jl
insb
pop
scas
loop
mov
inc
add
loope
setl
sbb
jbe
mov
pop
cld
adc
repz
nop
sarl
scas
rcrb
xchg
push
int3
push
add
int
scas
loop
es
mov
jg
in
or
stos
jb
mov
enter
adc
js
fcmovnu
or
xor
jmp
jl
sub
lock
popa
mov
test
sbb
mov
adc
filds
xor
xchg
push
in
roll
rcrl
pop
iret
push
flds
aas
shrl
cmp
sti
lea
lock
dec
cmpsl
js
adc
xchg
sbb
ss
inc
dec
ffreep
jp
loopne
lods
lcall
pop
imul
lods
jnp
cld
lods
dec
cmp
jbe
cmp
arpl
stc
movsl
sbb
push
lock
inc
fwait
movsl
scas
adc
jbe
add
and
add
out
lods
sysenter
cmp
push
cld
sub
pop
out
jmp
and
push
loope
sub
dec
insb
jne
out
int
sub
adc
sub
aaa
and
push
mov
pop
jle
mov
push
inc
inc
ret
stos
sbb
sbb
mov
lret
and
aam
outsl
rorb
stos
stc
inc
pop
jno
inc
pop
daa
rcrb
lea
dec
ds
les
rcl
xor
mov
andb
xchg
or
jmp
mov
dec
xor
jbe
push
scas
in
fstl
rcl
mov
push
ficoml
pop
repz
xchg
ret
ljmp
pusha
mov
arpl
aad
sbb
popa
fdivr
arpl
arpl
lods
cmp
nop
dec
ja
cltd
aam
and
fcmove
mov
hlt
ret
fisttpll
xlat
nop
pop
pushf
js
pop
sti
inc
cmp
mov
movsl
sub
into
mov
dec
insl
adc
scas
jo
xchg
scas
mov
inc
mov
std
jno
sbb
add
into
sub
mov
xor
pop
push
mov
push
jno
jbe
test
push
or
xor
dec
les
divl
or
sbb
mov
mov
xchg
sub
ret
outsl
nop
xchg
push
adc
jmp
or
js
push
fdivp
ret
rclb
test
jmp
lods
aas
sub
fcompl
sub
imul
sub
mov
push
xor
dec
cs
or
jp
jmp
mov
int3
mov
inc
inc
xchg
aad
and
xchg
insb
pusha
jb
inc
add
out
jle
ret
pop
lods
in
aad
adc
mov
aaa
in
testl
jns
add
stos
adcb
xlat
mov
cs
sbb
push
mov
test
dec
bound
out
loope
lret
mov
push
and
lods
add
std
scas
je
in
dec
fldl
cmpsb
cmp
lods
fsts
push
int3
dec
lret
call
jb
das
cli
adc
pop
and
cld
lcall
dec
mov
repnz
rcll
push
je
jl
jmp
pop
jnp
movsl
push
and
pop
mov
mov
lret
lods
test
lods
adc
cltd
mov
bound
xor
or
icebp
cmp
lcall
sub
iret
mov
dec
cmp
adc
in
insb
cmpsl
jae
mov
jae
in
loop
push
fbld
lahf
sub
inc
jb
out
inc
in
dec
xchg
cwtl
or
test
xchg
mov
mov
incb
mov
repz
das
inc
shlb
xchg
push
jp
or
js
mov
pop
nop
sub
xor
sahf
int
mov
hlt
push
push
cltd
lcall
xor
popa
insb
int
outsb
or
sub
push
lods
push
fwait
clc
or
addr16
jae
sbb
mov
int3
cwtl
aad
scas
imul
movsl
popf
popa
in
cli
lods
cmp
fcoms
stc
je
or
iret
mov
jns
jo
test
dec
into
das
lock
ja
ja
in
in
lds
mov
mov
out
sub
jns
out
xor
cmpsl
xor
std
aas
and
test
mov
repz
aaa
sub
int
subb
call
popf
divl
addr16
into
mov
add
sub
clc
lods
fdivrp
sub
cmpl
sbb
inc
mov
mov
inc
mulb
xchg
add
mov
cmp
insl
mov
pop
fisttpll
iret
sbb
out
adc
mov
outsl
lahf
pop
movsb
add
test
mov
shll
add
aaa
test
ret
ljmp
shrl
ret
mov
pop
and
lret
es
add
in
xor
inc
mov
mov
enter
fcomip
pop
xor
pop
hlt
out
dec
loop
mov
xor
inc
enter
mov
adc
les
ret
mov
pop
and
mov
in
cmp
jecxz
push
jne
mov
and
xchg
or
cld
ds
cmc
clc
decb
mov
adc
pop
pop
repnz
jp
dec
xorl
push
xchg
repz
cltd
dec
in
adcl
hlt
dec
cltd
leave
mov
divl
loop
xor
or
fnstcw
xchg
shlb
dec
fs
sar
outsl
js
daa
dec
ficoml
xchg
or
sbb
sub
xor
dec
xchg
push
lea
mov
push
loop
fidivrs
jbe
push
lock
in
or
ret
std
jp
cltd
lret
xchg
outsl
jbe
cli
xor
in
test
xchg
aaa
shrb
mov
lret
or
stc
cmpb
sti
cmc
stos
xchg
inc
lahf
sar
inc
mov
push
adc
or
pop
add
and
stos
pusha
adc
andb
dec
lcall
cmp
lea
fnstenv
outsl
mov
dec
leave
mov
repz
shl
xchg
js
lret
arpl
mov
repz
cli
cmp
jne
sbb
mov
aad
adc
pop
mov
add
std
sahf
ds
into
cmp
dec
jo
adc
int3
sbb
fsubl
or
call
push
loopne
mov
mov
jo
mov
lret
cmp
out
pop
loop
jb
dec
jne
sub
aaa
adc
inc
xchg
push
hlt
das
cmp
push
cmc
je
and
push
push
call
arpl
into
lock
adc
dec
jl
and
inc
and
stos
mov
pop
mov
sbb
loop
cmp
mov
ret
cs
notb
sub
xor
subl
lret
jmp
out
lcall
lret
jne
inc
ret
jp
stc
cltd
xchg
adc
dec
xchg
mov
and
test
pop
pop
fcmovu
mov
jg
test
insb
cmp
mov
scas
dec
icebp
aaa
pop
in
mov
cmp
fdivp
lret
and
repz
xor
movsl
shlb
mov
jnp
xchg
sbbl
push
xchg
mov
mov
arpl
cwtl
pop
dec
jecxz
inc
and
in
pop
mov
pop
dec
fimuls
rol
mov
and
xchg
cli
repz
cmp
ss
sub
xor
xchg
cmpsl
leave
addr16
pop
int
addr16
pop
inc
mov
pop
cmp
sub
rcll
shl
aaa
and
gs
pop
jmp
adc
les
push
pop
popa
adc
push
xlat
jne
fstpt
cltd
clc
xchg
push
in
loop
inc
popa
mov
data16
jnp
int3
xchg
jecxz
adc
xor
gs
xchg
lods
cmpsl
jae
and
bound
fidivrl
mov
mov
cli
add
aam
add
inc
jnp
mov
mov
add
mov
aaa
add
jmp
push
lret
sub
pop
cltd
add
inc
xchg
vminpd
outsl
pop
ja
adc
cmpl
fidivl
jae
int
jg
sub
sub
push
popf
stc
test
jg
inc
dec
movsb
pop
push
test
cmpsl
cli
inc
popa
or
gs
pop
repnz
mov
pop
inc
add
pushf
jmp
sarl
sbb
jmp
or
xchg
mov
inc
sub
enter
cmpsl
nop
clc
jge
mov
cmp
or
cmpsl
and
mov
loop
cli
cmp
sbb
dec
testl
call
fimuls
in
sub
push
and
or
pop
mov
xor
and
gs
mov
inc
arpl
lret
arpl
mov
ret
test
aas
mov
out
faddl
repnz
test
pusha
adc
lret
out
cwtl
call
adcl
fdivr
jge
icebp
faddl
aaa
jmp
and
adc
nop
aam
dec
jmp
push
jb
pushf
add
pop
cmp
adc
pop
scas
push
mov
fildll
addr16
inc
adc
inc
mov
jg
inc
shlb
xchg
inc
lahf
scas
jnp
dec
cmp
outsl
int3
into
lret
outsl
int
ljmp
imulb
sbb
dec
insl
jg
push
add
pop
sub
imul
cli
mov
inc
cmc
hlt
movsb
test
shll
mov
lods
wbinvd
movsl
and
xchg
imul
add
or
sub
add
mov
mov
mov
mov
cmp
xchg
fdivs
lret
sub
shl
shrl
ffree
pushf
push
mov
repnz
sub
cltd
outsl
dec
add
enter
and
lds
mov
lcall
fcmovu
repnz
stos
frstor
mov
cli
cmpsl
repz
pop
xor
and
movsl
aam
shlb
shrl
xchg
adc
xchg
out
sti
and
xor
adc
mov
mov
ljmp
and
cwtl
insl
jnp
mov
adc
add
jl
add
aad
aaa
jl
adc
push
pop
mov
imul
push
mov
and
cli
addr16
cmpsb
mov
jo
adc
pop
adc
and
mov
call
add
scas
cwtl
mov
push
ds
test
pop
xor
lret
fsub
xchg
lcall
mov
xchg
or
mov
mov
jmp
push
js
dec
lahf
xchg
sub
inc
mov
cmp
xor
or
mov
shll
pop
clc
cmpl
cwtl
cli
or
adc
in
xchg
lahf
lahf
loop
cmpl
inc
cmpsb
test
push
fdivs
push
mov
lret
loope
sbbl
mov
fmull
cs
mov
adc
stc
outsl
jo
lods
inc
cmp
cmp
test
pop
mov
popa
jg
scas
or
dec
std
int3
jo
call
lret
dec
lods
sub
fidivs
pusha
pop
adc
rcl
adc
ss
hlt
sarb
sbb
out
dec
pop
or
jge
sub
jle
lcall
es
sbb
pusha
sbb
adc
popa
sbbl
inc
mov
clc
xchg
adc
push
sti
mov
mov
xchg
pushf
pop
push
clc
cltd
dec
cmp
pusha
add
jno
scas
pop
or
push
xchg
ljmp
dec
lea
jae
and
mov
xchg
mov
push
and
mov
pop
ror
das
jae,pt
mov
pusha
ret
hlt
fdivrs
inc
cmpsl
xchg
fcmovnu
sti
xchg
sahf
test
loopne
test
icebp
xchg
insl
and
scas
fdivs
out
xchg
stos
dec
clc
cmpsb
jmp
loop
jmp
xor
and
cmp
cs
pop
ret
divb
insl
ss
in
cmp
stc
iret
push
call
inc
cld
xchg
out
push
loope
or
mov
pop
fsubrl
mov
xchg
pushw
and
in
in
adc
mov
test
test
mov
mov
test
and
fdivrs
cltd
fcoml
aad
sub
xchg
das
ffree
fwait
cmpsb
sarl
dec
ss
in
push
jg
cld
xorl
push
push
mov
push
gs
adc
pop
shl
bound
xor
call
adc
jns
les
lods
out
fisttpl
sbb
fidivl
shlb
mov
je
out
bound
push
fsubrl
dec
in
and
dec
xlat
sbb
xchg
std
mov
movsl
scas
xchg
xchg
add
xchg
js
xchg
adc
cmp
sbb
xchg
or
sub
mov
pop
adc
mov
mov
mov
mov
push
out
push
shl
dec
loope
cwtl
or
xchg
pushl
stc
lret
or
xor
pushw
mov
ret
inc
adc
rcl
mov
shl
xchg
inc
shrb
lret
ret
pop
jge
adc
pop
arpl
sub
xor
adc
xchg
enter
xchg
lds
in
pop
and
in
pop
jecxz
pop
aaa
xchg
cmpb
int
mov
pop
sbb
testb
pop
jae
fsubrl
push
pop
andb
xchg
in
aas
lcall
cmpsb
pushfw
push
movsl
push
xor
sub
ret
test
scas
pop
ficomps
insb
inc
stos
xchg
repz
mov
lret
data16
cltd
shl
mov
std
repnz
mov
pop
xor
rolb
jmp
xchg
xor
movsl
push
das
xchg
mov
xchg
push
mov
iret
add
pop
jb
mov
jb
add
bound
idivb
es
mov
mov
cwtl
shl
js
inc
cltd
lret
xchg
dec
int
fnstsw
icebp
dec
daa
movsl
adc
in
lods
aaa
xor
sub
data16
sarl
adc
lret
cmp
sub
in
or
daa
pop
fs
sub
mov
mov
lds
jbe
shll
and
nop
inc
fwait
loope
xchg
dec
jnp
mov
insl
jmp
cmpsb
or
cli
push
inc
mov
inc
and
cs
push
cmpsl
sub
mov
sti
mov
std
cli
outsb
aas
imul
in
dec
clc
cmc
inc
xlat
pop
mov
ror
pop
push
jae
addr16
pop
aas
lods
repz
jecxz
int
lret
push
scas
adc
pop
gs
and
cmp
adc
cmc
mov
xor
bound
movsb
std
aas
pushf
push
aam
cmpsb
cmp
test
test
mov
loopne
call
mov
repz
mov
jns
test
scas
add
int
lods
push
mull
jge
jae
or
jnp
insl
mov
cld
pop
cmpsl
xor
adc
dec
inc
dec
jno
outsl
ljmp
sbb
xchg
subb
lea
sbb
cltd
cli
lret
popa
mov
int3
mov
fprem
clc
jl
push
mov
rorb
jg
dec
mov
cmp
lds
xor
cwtl
mov
shrl
jle
popa
je
push
or
mov
lea
lods
int
inc
shll
jge
jae
test
into
xchg
inc
inc
mov
cmp
add
xchg
jbe
and
pushf
aas
or
dec
jge
inc
ds
adc
mov
xor
and
je
push
push
nop
mov
call
sub
dec
push
fwait
icebp
enter
lcall
jno
sti
mov
loope
into
cmp
mov
push
out
sub
jle
int
add
lock
leave
inc
aaa
cmp
push
aam
add
loop
xlat
lds
lock
xchg
repz
hlt
mov
pop
outsl
adc
nop
mov
stc
fcmovbe
mov
push
inc
or
ja
add
iret
xor
js
jno
es
jmp
aaa
movsl
xor
xor
outsb
lods
pop
add
dec
icebp
jge
ds
jo
inc
mov
lahf
xchg
cld
repnz
mov
loopne
loop
jle
jb
mov
int
lret
cmc
fstps
and
aam
jge
pop
mov
dec
inc
fstps
std
icebp
lahf
and
inc
lds
imul
add
or
xchg
mov
dec
mov
or
ds
jns
nop
or
mov
xor
dec
adc
cmp
dec
mov
jo
mov
jne
sbb
xchg
repnz
das
sbb
add
and
stos
scas
xchg
arpl
adc
movsb
push
adcb
mov
fwait
mov
out
and
xchg
mov
push
stc
pop
xchg
add
shr
imul
dec
popl
dec
orb
add
gs
push
adc
mov
mov
inc
add
rorb
cli
es
clc
sub
and
push
ja
mov
stos
jnp
test
int3
mov
fdivrl
inc
pusha
int
push
enter
leave
xchg
xchg
xchg
mov
in
xchg
mov
cltd
or
hlt
sbb
and
cmp
push
cwtl
lods
mov
stc
aad
fucomi
movsb
nop
sbbl
lret
xchg
aad
int3
inc
test
fisubrl
movsl
jmp
dec
mov
pop
mov
lods
bound
and
mov
in
lret
and
and
jns
scas
jg
xor
sahf
daa
jae
loopne
call
sti
or
jge
into
mov
sub
adc
scas
lock
call
loopnew
sbb
jae
jae
loope
rcll
mov
inc
jecxz
rcll
in
lods
sbb
jp
jb
adc
arpl
adc
mov
pop
inc
les
or
cmp
movsl
adc
lock
data16
or
movsb
push
sbb
xorl
mov
or
test
sbb
test
cmp
stos
cltd
jae
xchg
or
ret
or
pop
push
out
stos
xor
les
adc
outsl
mov
jecxz
xor
add
xorl
sub
jo
or
notl
mov
movsl
mov
sarb
aad
mov
xor
or
push
inc
je
hlt
cli
cmp
pop
pop
jns
xchg
adc
jb
jmp
or
cmp
mov
push
scas
xor
adcb
cmpl
out
jbe
mov
in
push
ss
bound
cld
arpl
cbtw
add
push
mov
iret
or
add
les
frstor
jmp
in
mov
xchg
mov
pop
cmpsb
std
in
mov
outsl
mov
scas
movsl
ss
das
push
pop
mov
icebp
sbb
insb
mov
mov
fstl
shl
mov
sbb
or
jo
cwtl
test
je
pop
movsl
dec
fmuls
pop
fimull
sbb
mov
outsb
mov
ss
adc
lods
movsb
pop
call
int
dec
in
push
pop
stos
int3
lods
int3
popa
push
hlt
ret
xchg
lock
out
insb
xchg
sub
ret
enter
xchg
fs
iret
push
pusha
into
adc
push
sbb
push
pop
adc
ret
add
push
xor
imul
or
push
addr16
aas
mov
sbb
mov
mov
mov
mov
jns
lret
outsl
outsb
pop
jbe
stos
daa
dec
clc
or
loope
test
mov
je
imul
aaa
roll
lahf
mov
add
repnz
fiaddl
lea
mov
pop
push
dec
cmp
mov
mov
gs
push
xchg
paddsb
jne
pop
in
jae
jae
fimuls
adc
mov
pusha
out
enter
jae
fs
mov
mov
pop
dec
loop
sahf
sub
mov
cltd
jae
cmpsl
fwait
xor
mov
mov
data16
pop
push
sbb
stos
fimull
inc
jne
testl
ss
jg
add
mov
xchg
sub
shrb
bound
pop
and
icebp
push
lcall
lods
pop
mov
inc
pop
outsb
and
xchg
jb
xor
iret
xor
les
mov
push
cmp
fcomps
lods
repnz
int3
add
fwait
xor
or
add
push
sbb
test
adcb
xchg
arpl
pop
jp
ss
ret
xor
je
cmp
pop
aas
je
rcrb
cs
jle
imul
mov
neg
xchg
not
repnz
out
aaa
mov
js
into
outsb
sbb
loope
stos
pop
mov
bound
xor
aaa
pop
inc
pop
adc
or
mov
sbb
pop
push
out
xchg
decl
xor
push
xchg
and
test
dec
int3
mov
sbb
add
repnz
mov
push
jne
jmp
jg
adc
fwait
xchg
shl
adc
cmp
sbb
das
jbe
aas
movsb
nop
fwait
mov
xor
adc
aad
in
cmc
push
sahf
sub
jno
mov
je
cmp
or
inc
add
in
int3
rcrl
pop
push
mov
iret
inc
xchg
stc
out
gs
inc
pop
mulb
mov
jbe
jge
inc
shlb
adc
mov
mov
sub
fmull
nop
fistpll
leave
push
test
mov
push
and
xchg
xchg
adc
jno
pop
fildl
push
xchg
sahf
and
jae
cld
xchg
or
sub
sbb
mov
or
into
push
mov
int
mov
mul
push
cld
mov
pop
push
mov
shll
ss
aaa
mov
lahf
sti
lahf
int3
jg
inc
stos
orl
and
pop
push
cmpsl
fsubrp
sbb
mov
adc
in
pop
jne
jg
les
add
repnz
jbe
aad
orb
cmp
cwtl
loop
popf
iret
lea
sbb
sbb
mov
add
and
scas
outsb
pop
fcomip
data16
dec
loop
xor
addr16
outsb
xchg
sub
adc
fs
xor
cli
pop
ss
mov
inc
add
push
xor
mov
inc
lret
cltd
adc
inc
ret
aas
insl
in
bound
hlt
das
sub
cli
xchg
push
and
leave
mov
sub
pop
jnp
dec
scas
mov
out
repz
push
pop
adc
imul
mov
aaa
mov
icebp
bound
dec
lcall
jl
dec
pop
gs
and
mov
pushf
imul
sub
mov
mov
xor
or
and
mov
cld
and
mov
xchg
jne
push
ret
roll
xchg
iret
clc
inc
jo
jno
stc
sti
dec
pop
stos
jle
fimuls
sub
out
cli
arpl
stos
dec
in
and
pop
or
jge
dec
jle
cmpsb
xor
mov
and
ret
push
subb
push
lods
repz
jmp
js
call
mov
test
pushf
push
fdivs
mov
or
loope
inc
pop
stos
jb
into
push
xchg
xchg
sarl
mov
mov
mov
or
xchg
sbb
gs
pop
out
leave
cld
into
rcrl
mov
add
dec
cmp
cmpsl
dec
lock
mov
into
cld
fsubrs
xchg
lret
dec
popf
into
call
rolb
popf
negl
pop
in
out
cmc
mov
psrld
cltd
data16
and
mov
mov
pop
call
sbb
cmp
in
or
cmp
jmp
mov
callw
sbb
outsb
stos
push
push
pop
arpl
hlt
fadds
dec
loop
inc
jmp
icebp
fisttps
jo
clc
enter
subb
jge
fnstcw
fcompl
sbb
and
mov
adc
cmp
test
addr16
fwait
pop
and
andl
lea
ret
dec
addr16
in
pop
and
and
pop
adc
xor
addl
out
sbbb
inc
fistps
or
rcl
js
idiv
add
sahf
mov
js
movl
sub
add
xor
xor
in
cmpsb
jecxz
lcall
ljmp
lock
pop
push
add
aam
cld
fmuls
mov
push
inc
lds
and
xchg
mov
or
sbb
loope
js
add
das
xorl
stos
test
fdivs
jnp
or
imul
sbb
and
and
fisubl
cld
sub
mov
repz
or
into
aas
bound
cmpb
push
mov
dec
sub
and
push
push
adc
jecxz
sbb
ret
push
shlb
sub
lcall
push
push
mov
push
shll
or
lods
xchg
loopne,pt
adc
mov
cmc
push
in
xchg
rcr
shlb
jge
into
dec
xor
cmp
pop
mov
push
jne
nop
repnz
add
sub
xchg
outsl
lds
pushf
popa
adc
lock
xchg
cli
movsb
int3
stos
xchg
add
push
adc
mov
push
push
fidivrs
mov
xchg
fwait
pop
mov
sbb
rorl
mov
jl
in
jns
out
dec
push
stos
adc
test
sub
jbe
sbb
mov
jg
pop
xchg
xchg
push
mov
test
jno
sarb
loopne
jb
sbb
repnz
inc
lods
pop
sbb
mov
and
popf
or
and
clc
rcl
mov
add
cmp
sti
sub
jno
add
mov
mov
movsb
push
add
sub
pusha
mov
or
test
and
out
into
paddsb
xor
dec
dec
jle
push
push
out
pusha
add
pop
inc
scas
fs
mov
sub
push
dec
xchg
std
enter
out
fwait
sub
loope
xchg
adc
xor
mov
adc
lret
xor
push
pop
orl
addr16
and
or
pop
in
es
adc
outsl
pushf
mov
sub
nop
icebp
in
pop
stos
xchg
std
mov
mov
out
mov
or
shrb
cld
int3
cwtl
fisubrl
in
xchg
test
sbb
sub
repnz
and
jno
popf
jne
cli
mov
bound
pop
repnz
insb
ds
pop
mov
imul
aaa
jg
sbb
cmp
push
mulb
pop
in
push
add
cmpsb
add
stos
out
mov
add
pushf
xchg
mov
inc
cwtl
mov
fistl
jmp
sbb
outsb
ret
iret
lock
cld
and
mov
outsl
scas
xchg
dec
lods
arpl
mov
and
out
or
jb
jmp
imul
jge
jmp
rcl
lods
mov
mov
sub
jb
sub
aam
xor
jmp
push
inc
jmp
faddp
fistl
inc
dec
insl
rcr
push
sub
cmp
stc
push
pop
sub
pushf
jmp
inc
jp
leave
mov
push
ss
jle
lret
adcl
xchg
jno
xchg
rolb
mov
fimuls
je
sti
cmc
inc
movsb
sbb
nop
movsl
mov
jae
adc
fists
imul
scas
test
loopne
stos
jl
pop
sub
jns
jmp
lret
cmp
mov
pop
in
ljmp
pop
movsb
pop
ss
or
mov
mov
pop
sub
lea
enter
jo
adc
sub
dec
push
push
pop
inc
xchg
lods
push
ja
sbb
adc
and
stos
push
js
fcmovne
loopne
fistl
and
ljmp
in
push
int
mov
xchg
pop
bound
test
and
in
jmp
jg
add
mov
sbb
push
jge
test
dec
fldenv
ss
shll
pusha
pop
mov
jl
das
ja
adc
xor
and
outsl
ret
push
shlb
pop
adc
andb
ss
pop
xor
inc
jecxz
push
mov
fsubrl
sbb
lods
popf
iret
mov
xor
pop
lret
dec
aam
loope
mov
shlb
lcall
sahf
sbb
mov
jle
cli
daa
or
lahf
and
or
cli
xchg
jp
repz
add
frstor
mov
and
cmp
sbb
mov
and
mov
sub
and
or
ret
fisubrl
das
push
ret
cmp
or
adc
hlt
sub
cmp
es
arpl
test
aaa
sub
push
push
add
sub
lret
out
pop
fisttpl
mov
sub
cld
jle
mov
mov
aam
js
int3
xchg
sti
out
cmp
jecxz
mov
push
jmp
mov
pop
gs
or
xchg
sbb
int3
mov
adc
mov
mov
sub
pushf
jle
xchg
repnz
nop
repnz
jne
sbb
or
xor
cmp
push
and
fdivs
loopne
push
jle
and
add
pop
mov
adc
movsl
pop
lret
ds
inc
call
cmp
xor
inc
sbb
push
ret
sub
cltd
pop
xchg
aam
aam
popa
mov
mov
fdivr
push
mov
mov
shlb
cwtl
xchg
rcr
mov
flds
fucom
cmc
pusha
into
add
adc
add
out
cmp
cmp
mov
push
or
mov
in
push
mov
imul
and
loope
push
pop
dec
dec
ljmp
pop
jnp
das
popf
dec
fistl
mov
out
adc
mov
fstpt
leave
mov
mov
and
sub
inc
push
inc
dec
stos
mov
pop
jmp
xchg
test
add
dec
int
push
arpl
mov
popa
in
ror
jno
outsb
cwtl
loop
push
push
in
outsb
out
sbb
fdivl
pop
stos
pop
or
mov
shrl
int3
push
cs
dec
clc
fldl
stos
fildll
into
into
jne
rcrl
rcll
push
sahf
adc
cmp
mov
loope
fldl
inc
call
mov
add
fisttpll
clc
js
mov
lock
mov
rorb
ja
xor
aaa
scas
xchg
inc
xor
mov
repz
mov
ud2
sbb
psrlq
shlb
mov
pop
test
jg
inc
fstpt
pop
popa
mov
addr16
fdivrs
cmp
xor
ret
inc
fsubl
pushf
stos
inc
cltd
dec
sbb
mov
pop
pop
movsl
sbb
xchg
daa
ljmp
fildll
popf
xchg
push
inc
mov
add
push
scas
sbb
lahf
pushf
ret
jnp
aaa
push
sarb
pop
fdivrs
dec
push
movsb
sub
or
fistps
xor
inc
ja
lods
stos
stos
inc
loope
jmp
in
sub
enter
cmpb
inc
sbbb
fisttpl
fdivs
xchg
jge
shlb
inc
jp
xchg
mov
or
adc
jnp
idivb
cs
or
or
mov
xor
cli
or
mov
sub
subb
add
fiadds
mov
sub
fs
lds
add
cmpsb
pop
in
repz
clc
xchg
mov
pop
lods
xor
ret
xor
xchg
mov
lods
cmp
xor
cmpsl
xor
push
or
xchg
cli
and
inc
adc
ds
test
mov
test
mov
xor
mov
jb
hlt
adc
cwtl
adc
lods
mov
sbb
and
cmp
pop
jno
xchg
or
pushf
xchg
dec
push
or
mov
popa
sub
push
outsb
jl
pop
outsl
aad
push
hlt
cmpsb
call
scas
daa
mov
fstps
movsl
aas
imul
inc
int
jae
mov
test
push
fiadds
daa
pop
pusha
js
je
in
xchg
int
jge
outsb
dec
pop
mov
filds
jb
fdivrs
add
push
mov
add
nop
jmp
push
aas
lods
mov
outsl
mov
mov
sub
pop
pop
scas
out
xlat
divb
dec
movsl
int
pop
push
push
xlat
and
adc
pop
repz
cld
xchg
hlt
insb
daa
and
loopne
inc
push
or
loop
cmp
lock
xchg
sub
pusha
mov
fcomp
js
push
push
xor
cmp
push
test
popa
mov
jmp
testb
popa
cmc
stos
or
xor
das
mov
scas
xchg
lea
lock
cmp
xor
repz
mov
pop
test
adc
xlat
ljmp
mov
cmpsl
divb
add
inc
mov
lods
addr16
pop
nop
aas
sub
jle
push
adc
pop
sub
lcall
lret
cmc
add
sahf
adc
into
xchg
jmp
pop
jnp
lcall
push
fs
movsb
pop
cltd
inc
and
cs
icebp
ds
jnp
push
je
jl
ljmp
cltd
xchg
in
es
in
adc
bnd
ds
xor
pusha
pop
repnz
lahf
stos
inc
test
or
les
mov
fdivrs
inc
mov
shrl
stos
mov
mov
inc
decb
cmp
push
inc
out
aam
mov
dec
jl
pop
adc
call
out
mov
or
adc
and
mov
dec
xor
pop
insb
xlat
xchg
mov
inc
ret
ret
in
add
and
mov
ret
pushf
push
rol
mov
xor
pusha
imul
ret
call
jo
pop
shll
into
push
pop
nop
cld
xchg
xchg
and
ljmp
mov
mov
loope
sub
adc
mov
sbb
and
movsl
fidivrl
xor
jne
outsl
and
cli
ds
jns
outsb
pop
mov
and
jmp
sub
mov
cltd
das
mov
mov
mov
mov
xor
mov
sahf
push
call
cmpb
outsb
xor
pop
sub
pop
daa
xchg
int3
or
stos
jae
sbb
mov
or
and
bound
test
out
add
jmp
test
iret
test
pop
jecxz
mov
or
outsb
add
imul
fstpt
push
call
inc
add
into
cmp
push
iret
xor
or
adc
out
fidivl
rcr
pop
xor
incb
adc
orl
loope
jne
ret
cmp
jp
mov
jge
mov
mov
inc
and
sbb
sbb
cwtl
jle
jnp
loopne
adc
push
mov
add
daa
sbbl
xor
add
cmp
ljmp
pop
mov
call
sarb
pop
addr16
aad
jae
test
push
xor
js
mov
push
insl
js
sbb
jae
bound
sti
adcl
movsl
icebp
mov
adc
mov
mov
nop
test
pop
sub
add
sbb
jecxz
xor
lds
dec
sbb
dec
adc
adc
or
bound
or
mov
mov
loope
iret
fwait
stc
jge
inc
inc
aas
addr16
in
ret
sti
outsb
mov
or
and
mov
repnz
dec
lahf
ljmp
leave
sub
mov
out
jne
xchg
cltd
outsl
push
adc
push
mov
lds
popf
rorl
fprem1
add
mov
scas
or
fstpl
push
pushf
dec
popl
fcmovb
ret
sbb
add
es
mov
mov
and
orb
cli
or
sub
sarb
pop
pushf
testb
sub
mov
or
ret
push
mov
xchg
add
pop
cld
xor
xchg
mov
in
stos
out
pop
mov
xor
pop
cld
sub
jno
notl
sub
into
push
mov
ss
scas
or
daa
pop
scas
int3
dec
bound
mov
sbb
fisttps
mov
fnstcw
sub
sti
cmp
pop
adc
push
add
rcr
xor
or
pop
dec
xchg
out
pop
xchg
inc
daa
mov
in
mov
lods
sbb
ret
xchg
daa
stc
or
sbbb
fwait
mov
rolb
xor
loopne
in
sub
loop
cmp
and
outsl
fisttpll
lock
and
cmp
lret
adcb
cmpsl
cmpsb
add
rorb
and
sbb
push
outsl
push
mov
pop
test
sbb
sub
sub
test
add
pop
stos
stos
jo
sbb
jb
outsb
mov
and
or
cmp
lods
dec
cli
idivl
jl
and
sbb
cmp
icebp
sbb
push
stos
bound
jl
mov
mov
popf
inc
inc
mov
stos
cmp
and
mov
push
mov
inc
mov
mov
cmp
sub
sbb
adc
into
aam
inc
cld
js
push
add
dec
xchg
pop
lds
push
sbb
xor
fisubrl
loopne
lcall
inc
movsl
or
add
mov
pushf
push
push
enter
pop
je
les
testb
mov
movsb
das
lahf
add
push
fldl
in
or
push
cmp
std
jmp
das
shlb
jo
inc
in
mov
cmp
and
sahf
xchg
sbb
pop
push
addr16
shll
inc
lock
mov
test
adc
fs
mov
fcomi
xchg
xchg
jns
pop
xor
push
gs
icebp
movsb
loop
jns
push
ds
ljmp
cmpsb
jo
mov
movsl
mov
xchg
jge
jns
pop
mov
pop
fbld
shll
imul
mov
orl
pop
add
into
sbb
mov
jg
hlt
xchg
dec
mov
xor
xchg
cmpsb
jge
push
pop
jg
into
cmp
lock
mov
test
xchg
orl
nop
sbb
mov
and
jno
pusha
data16
lea
sarl
sbb
dec
or
mov
xchg
xchg
fs
sahf
outsb
jb
out
jge
fadd
pop
popa
sbb
in
rcrb
cmpl
stos
xor
mov
sbb
movsb
out
and
inc
in
mov
stc
aad
inc
int
repnz
adc
cmp
popf
fstps
and
push
cld
jbe
repnz
rorb
in
mov
jmp
xor
fadds
adc
xchg
inc
mov
cmc
jmp
add
call
enter
push
jecxz
jae
movsl
dec
fwait
xchg
pop
fninit
mov
clc
mov
lods
inc
dec
jns
sbb
scas
sarb
gs
out
outsb
jae
gs
mov
mov
inc
xlat
mov
or
jns
jge
mov
insb
stc
dec
dec
pop
hlt
mov
adc
dec
mov
add
repz
mov
int
push
lea
int3
pop
jbe
pop
into
lds
pop
rcrl
test
jns
loope
push
int3
aad
dec
aad
pop
add
push
scas
xchg
rol
sbb
mov
pop
or
xchg
stos
cld
push
lahf
push
inc
mov
pop
mov
fxch
icebp
mov
xor
pop
es
dec
or
pop
adc
inc
ds
idivb
popa
xor
outsb
mov
add
inc
cmp
fdivl
pop
sub
sahf
push
mov
movsl
dec
mov
loop
aam
cli
movsl
sbb
fcomi
xor
xchg
mov
pop
gs
test
lods
mov
sbb
shlb
push
xlat
out
shll
hlt
cmc
pop
push
dec
mov
jp
ror
add
leave
cmpsb
cmpsl
fidivrl
shll
stc
jle
inc
dec
roll
mov
flds
rorl
sbb
fs
enter
sub
in
mov
rorl
loopne
imul
inc
inc
sahf
hlt
mov
scas
mov
mov
push
and
jno
mov
insl
adc
insl
mov
sbb
mov
lods
mov
sbb
clc
mov
fwait
jne
das
les
in
rorl
cltd
lcall
jb
xchg
push
xorl
loopne
ret
pop
xor
out
and
push
sub
movsb
add
inc
ret
push
xor
dec
cld
fsubs
ret
mov
test
call
push
mov
inc
stos
pop
stos
fidivs
inc
aam
das
pop
xchg
aad
jno
cmpsl
out
mov
pop
pop
jle
jo
insl
inc
mov
int
pop
outsb
sbb
add
sar
jmp
iret
adc
push
loop
int3
sbb
or
std
adc
in
mov
cli
sbb
pop
push
mov
enter
mov
stos
sbb
fnstsw
aaa
leave
push
adc
pop
dec
cmc
mov
dec
arpl
pop
pop
das
out
imul
xchg
jno
stos
sahf
lahf
test
mov
mov
rcll
sub
lock
xor
xchg
jae
fistps
inc
sti
cmp
dec
test
xchg
xchg
add
mov
push
sub
call
inc
dec
jp
int
lods
int3
cmpsl
push
popf
int
adc
mov
and
inc
or
inc
sbb
sub
loopne
rcrb
cmpsl
clc
inc
sbb
ds
jle
daa
in
xchg
in
mov
xlat
lret
inc
std
in
cmc
fdivs
aam
xchg
loopne
scas
pop
or
stc
and
dec
aaa
scas
ds
pop
jle
inc
cmp
testl
cmp
sub
jo
iret
ljmp
and
xor
push
xchg
pop
bound
out
subl
fists
xor
hlt
push
inc
popa
aas
and
ds
sub
jl
int3
movsb
dec
cmp
sar
imul
xchg
add
jne
je
rclb
or
sbb
sbb
jbe
mov
dec
hlt
push
sbb
add
popa
jnp
jno
ret
aam
pop
sbb
scas
sahf
mov
nop
das
xor
mov
stc
ret
mov
mov
sub
test
mov
aam
pop
dec
dec
subl
jae
iret
cs
and
bound
xchg
and
inc
inc
push
jmp
cmp
or
jp
cmpl
mov
sub
mov
sbb
adc
inc
ret
mov
sub
sbb
xor
test
out
mov
call
popa
xchg
arpl
pushf
xchg
mov
cmp
iret
gs
sbb
dec
jae
xor
xchg
insl
bound
lret
dec
sub
adc
lods
je
and
adc
and
icebp
in
sti
rcrl
xchg
jl
jp
outsl
push
dec
inc
adc
mov
pop
mov
les
lds
stc
xchg
or
mov
xchg
add
mov
mov
jbe
stos
sbb
pop
lcall
dec
sub
lock
pop
xchg
dec
dec
roll
push
inc
filds
fstpt
mov
adc
aad
xchg
ret
xchg
cli
inc
in
pop
dec
jns
push
dec
push
enter
add
imul
mov
insb
dec
sbb
icebp
mov
sahf
mov
loopne
and
cli
cltd
dec
repz
sub
dec
in
pop
out
in
lock
daa
xor
popl
call
dec
stos
jb
ljmp
into
adc
ljmp
arpl
fidivs
mov
dec
push
xor
adc
push
cmc
outsb
cmp
test
pop
push
sub
xchg
rorl
push
data16
mov
out
add
adc
mov
xchg
test
xchg
inc
sbb
mov
mov
cs
dec
mov
pop
aas
std
mov
imul
xchg
xor
or
ret
aam
and
mov
pop
xchg
popf
mov
ljmp
mov
int3
push
pop
push
test
cmp
imul
leave
jo
clc
push
fnstenv
shll
fwait
mov
and
pop
jl
add
dec
mov
push
dec
or
sub
mov
fs
ds
lret
test
and
imul
push
pop
and
loop
add
aaa
sahf
sub
decl
iret
cmp
and
push
rcrb
push
cli
daa
mov
and
cwtl
xor
bnd
xchg
pop
addr16
fmulp
xchg
xor
test
jne
pop
movsl
shrl
jae
push
shr
loope
repnz
sub
cwtl
hlt
imul
push
scas
push
in
hlt
adc
ret
jl
out
rdmsr
testb
push
sbb
in
loop
mov
cmpb
xor
lahf
in
and
adc
push
cmp
sub
push
adc
jbe
sbb
inc
mov
bound
in
test
jns
sbb
adc
in
sbb
mov
pop
ss
dec
mov
ja
jg
xor
rcrl
scas
or
and
dec
cwtl
into
pop
stc
xor
int
adcl
xorl
and
jmp
jecxz
fcoml
and
lret
xchg
lock
cmp
fisubrl
fs
sbb
dec
jg
out
stos
xlat
stc
mov
adc
inc
adc
fadd
mov
cmpl
fs
mov
mov
push
movsb
sbb
jne
movsl
inc
into
mov
and
leave
cmpsl
dec
or
adc
sub
in
pop
adc
addl
das
mov
xchg
dec
inc
inc
inc
cmp
push
pushf
inc
fnsave
in
imul
repz
mov
add
xor
loopne
adc
ret
test
loope
in
call
ja
sub
cltd
and
xchg
lahf
dec
or
imul
lahf
inc
movsl
push
or
in
jne
das
in
je
mov
mov
subl
ret
addr16
js
xor
push
in
dec
adc
mov
cmpsb
cmpb
sub
and
gs
outsl
lods
js
aad
ljmp
jo
dec
mov
sbb
pop
cmpsl
push
lret
out
aas
dec
pop
inc
sbb
lret
mov
cmp
adc
jle
dec
pusha
mov
stc
stos
pop
les
mov
jnp
cmpsb
pop
sarb
icebp
push
aad
cmpb
cmc
dec
icebp
xchg
pop
mov
aaa
jmp
fistl
cmp
scas
jl
insl
in
pop
idiv
ret
sbb
repnz
cmp
pushf
or
test
push
jns
sbb
mov
sti
adc
adc
jae
sar
sub
add
cmc
jae
cmp
in
xchg
cwtl
int3
mov
push
in
insl
cmp
mov
js
mov
pop
mov
mov
pop
rorb
out
ficompl
fs
pop
adc
sub
jecxz
mov
inc
sbb
test
jecxz
repz
outsb
dec
lods
sti
dec
or
mov
or
cwtl
cmc
push
add
inc
xchg
lahf
popl
inc
movsb
mov
add
js
iret
xor
insb
movsb
sbb
inc
adcb
out
adc
cli
lret
and
pop
cmp
out
adc
sbb
xchg
lock
aaa
outsb
xchg
xchg
adc
movsb
jne
jle
and
icebp
shrl
jnp
sub
scas
mov
sbb
sbb
push
xchg
dec
mov
push
aam
jle
mov
jae
lods
xchg
xor
sbb
lock
or
imul
pop
es
scas
jge
sub
ret
pop
push
push
adc
sub
xor
or
flds
popf
cmc
cs
lea
cs
out
mov
cmpsb
in
add
sub
sub
pop
ja
jae
lret
sub
rcrb
arpl
jp
movsl
test
mov
iret
dec
test
aas
sbb
xchg
scas
pop
lds
imul
popa
leave
mov
or
nop
das
jnp
dec
lret
sbb
and
cmpl
xor
xor
shll
pop
icebp
mov
pushf
idivb
push
imulb
hlt
inc
es
adc
aaa
bound
mov
sti
mov
and
les
push
clc
and
xchg
pop
int
fstl
in
push
pushf
arpl
scas
cwtl
les
repnz
fnstcw
mov
cld
js
imul
scas
inc
gs
sbb
add
and
lods
popa
pusha
add
lcall
dec
imul
mov
xchg
cmp
sbb
sub
push
cld
ds
rolb
repnz
jae
fdivs
lods
hlt
push
xor
imul
xchg
xchg
imul
pushf
sbb
xchg
dec
sahf
mov
and
data16
lods
adc
inc
mov
roll
cli
movsl
repnz
das
xchg
and
lock
popl
cmp
xor
shlb
inc
imul
sahf
adc
lcall
and
aas
push
std
stc
xchg
xchg
jge
mov
fs
xchg
jp
pop
jno
test
adc
push
xchg
push
les
mov
xchg
das
sub
repz
mov
cld
cmp
push
aad
rorb
int
out
jg
shl
and
push
mov
and
outsl
jle
jbe
xor
lret
add
adc
push
imul
mov
xchg
pop
cmp
mov
arpl
inc
mov
rol
xchg
jb
inc
mov
daa
push
ja
inc
jbe
rorb
cltd
jmp
dec
pop
or
jecxz
sub
pop
scas
icebp
xchg
or
push
push
cmc
in
or
pop
lret
pop
sub
xchg
stos
adc
in
mov
or
mov
xchg
lods
sub
int
pushf
dec
lods
add
filds
aad
push
or
int
or
nop
std
and
in
jl
call
aas
and
aad
mov
push
jns
or
add
pop
fisubs
shrb
call
idivl
push
or
adcb
pop
ljmp
or
xor
xor
sub
and
test
push
cld
adc
insb
cld
test
and
inc
aas
inc
xor
test
jbe
in
cli
cmpsb
rorl
lds
cmc
aad
fcmovbe
rcl
mov
pop
xor
push
sahf
or
ss
mov
add
jmp
cwtl
sbb
jle
push
dec
call
mov
lcall
xchg
ljmp
fidivs
sbb
adc
shl
xchg
xchg
cmp
mov
fcmovbe
push
test
into
bound
push
push
repz
xchg
aaa
fisubrl
add
pop
jno
int3
inc
in
mov
call
scas
rclb
popa
outsl
fs
mov
mov
jl
test
inc
lods
outsl
movl
adc
xchg
add
xchg
cmp
cmp
sub
rol
dec
add
inc
mov
pusha
movsl
sarl
xor
inc
push
add
add
dec
sbb
mov
stc
mov
or
xor
loope
jno
mov
fwait
subl
xor
call
hlt
xchg
pop
or
test
insl
and
xor
shll
sbb
lods
cltd
push
mov
gs
mov
sub
xchg
arpl
aas
sti
mov
adc
loop
cmc
shr
movsl
xchg
mov
mov
aaa
pushf
mov
add
cmpsb
ret
es
push
inc
sahf
pushf
scas
sti
inc
sub
imul
add
arpl
add
sub
mov
scas
mov
hlt
pop
insl
xchg
inc
ss
sahf
pop
mov
fsts
aaa
mov
sbb
xor
xor
mov
mov
imul
xor
jg
pusha
loope
subl
xor
pop
push
adc
out
fstp
lods
adc
arpl
arpl
push
jnp
mov
or
arpl
gs
jae
mov
push
je
std
mov
mov
mov
repnz
mov
xor
xchg
loope
mov
pusha
aad
mov
xorb
pop
pop
int3
negb
pop
and
and
sbb
add
loopne
add
rcl
enter
mov
shll
xor
mov
cmc
cmp
mov
push
dec
pop
and
les
mov
pop
aad
pusha
inc
ret
pop
imul
jecxz
xor
sbb
sbb
stc
push
scas
inc
lret
xchg
push
pop
popa
and
rolb
icebp
pop
add
mov
out
scas
sbb
pop
xor
push
lds
cmp
popa
lret
ljmp
pop
and
std
lods
adc
adcb
out
loope
gs
dec
lock
and
inc
imull
cmp
xchg
ret
dec
cld
cmpsb
cmp
sahf
pop
and
mov
out
push
popf
shrl
scas
jmp
add
insl
enter
lods
mov
mov
or
mov
cmp
fcmovu
pop
loopne
fadd
imul
push
dec
xor
cltd
push
fwait
mov
aas
mov
push
xchg
fiaddl
dec
dec
inc
int3
std
int
lahf
aas
fs
pop
jmp
and
pop
cs
inc
mov
mov
jbe
mov
mov
fs
int
loope
and
jp
in
mov
ss
lods
movsl
decb
imulb
lock
lds
push
or
pop
adc
je
lods
inc
jmp
jns
or
mov
mov
fistpll
dec
sub
lea
add
lret
adc
mov
push
fwait
xchg
stc
push
jbe
shl
mov
data16
mov
scas
sub
in
dec
in
xchg
cmp
push
xor
lea
jp
sbb
lahf
cmp
sbb
add
pushf
push
in
cmp
push
cmp
lds
lahf
rcr
adc
cmp
stos
push
push
jmp
jmp
add
jl
ror
or
outsb
sti
mov
out
test
rcl
scas
jle
adc
or
or
dec
test
sub
jle
push
dec
ds
movsl
js
push
xchg
pop
adc
xchg
inc
es
cmp
cli
pop
mov
insl
out
adc
adc
sti
or
mov
in
lea
cmpsb
js
xor
push
push
daa
sub
leave
sub
sbb
sahf
xchg
adc
rorb
test
inc
in
nop
dec
pop
dec
shlb
ret
add
xchg
lds
and
leave
jmp
sbb
out
add
int
or
mull
ret
or
lret
lods
iret
jge
shl
xor
sbb
cmp
lods
mov
repnz
in
push
loope
mov
cmpsb
negl
pop
in
pop
add
cld
inc
dec
or
mov
mov
orb
mov
jne
ds
stos
xor
shr
adc
sarb
loopne
inc
inc
adc
jae
aaa
jb
cmpsb
sbb
jmp
or
pop
xor
inc
or
andw
push
out
cmp
int3
mov
jp
aad
mov
push
hlt
adc
inc
and
xlat
mov
rolb
lods
pop
fsubs
add
rcrl
pop
push
inc
in
jg
mov
out
mov
mov
xchg
nop
sahf
int
inc
mov
loopne
inc
sub
adc
push
adc
clc
mov
adc
inc
xchg
arpl
aam
in
add
pop
mov
sbb
pop
ds
insb
out
sub
lods
pushf
add
movlps
pop
sub
ficoml
test
dec
jo
cmpsb
loopne
push
and
mov
xchg
out
mov
mov
mov
sub
xchg
inc
es
cld
lock
inc
pop
xchg
jp
divl
mov
and
movsb
test
xlat
enter
add
or
inc
lods
daa
dec
jg
jnp
js
xchg
in
mov
stos
lods
push
stc
inc
dec
call
lret
cmp
push
pop
cmp
sub
inc
push
std
mov
imul
fwait
cld
es
int
int3
or
inc
scas
jne
mov
xchg
and
lea
scas
int3
sub
mov
add
enter
pop
lea
push
mov
das
imull
dec
add
lret
outsl
add
sbb
inc
movsb
push
push
fld
fdivrs
test
pop
fcomps
pop
cmp
mov
xor
or
das
sub
fidivs
shr
pop
adc
mov
mov
fldenv
mov
lahf
lea
mov
xchg
push
pop
inc
or
cmp
mov
jge
or
das
inc
lods
sbbb
mov
mov
pop
sub
jae
mov
mov
pusha
cmp
lods
les
xchg
jle
xor
andl
sbb
fdivr
addr16
pop
xor
flds
mov
ja
insl
cmp
mov
or
cmp
xor
adc
jne
sub
xor
sub
cmp
dec
dec
jae
loope
data16
scas
dec
sahf
leave
es
imul
outsl
mov
fists
xchg
das
lret
jbe
shlb
pushf
push
mov
inc
orl
mov
roll
inc
sti
pop
jns
xchg
dec
bound
hlt
imul
xor
test
les
pop
mov
mov
xor
jbe
push
notl
mov
test
les
mov
out
mov
fcmovnbe
subl
cs
adc
stos
shll
inc
nop
add
add
mov
daa
stos
or
or
or
adc
div
idivb
scas
add
xor
ret
xchg
lods
inc
pop
push
fwait
inc
outsl
push
cltd
adcb
fnstenv
or
popf
and
mov
push
add
mov
mov
stos
inc
adc
fsts
ficompl
test
stos
pushf
testb
call
jp
mov
and
popa
mov
xchg
mov
adc
jae
or
int3
dec
ds
mov
es
dec
jae
xchg
or
sahf
aaa
ss
inc
cmc
push
in
int
daa
lds
scas
or
sti
outsb
inc
xchg
cltd
je
aad
jbe
fstpl
mov
int
xor
xor
popa
mov
mov
cmp
clc
shll
fimuls
and
jle
shll
daa
outsb
scas
stos
xchg
inc
imul
pop
mov
mov
jbe
out
sub
jge
xorb
stos
jmp
testl
decb
gs
rcr
pop
rcll
mov
pop
push
scas
fmuls
add
sub
in
inc
mov
or
mov
fidivs
aam
and
xchg
movsb
inc
shll
addr16
adc
dec
cmc
mov
xchg
cli
jb
and
jmp
xor
xchg
jo
in
add
and
scas
inc
or
jns
sub
adc
jno
jmp
cmpsb
fldt
rcl
pop
xchg
mov
mov
pop
data16
sub
or
out
out
loope
or
dec
add
popf
cltd
sbb
cmpsb
loopne
clc
int
loop
xor
aaa
pushf
jmp
xchg
cltd
sub
ret
or
or
push
dec
imul
jb
movsl
cs
lcall
rorl
xor
mov
mov
sbb
stos
ret
lds
pop
fisubrs
iret
rcll
jne
jne
inc
in
add
not
push
clc
movsl
or
scas
or
stc
pop
lcall
mov
mov
fidivrl
sbb
dec
fmull
mov
in
lret
mov
adc
push
and
addl
scas
cmovbe
popf
fidivrl
scas
pop
xchg
cmp
out
or
rcr
movsl
data16
out
xlat
push
mov
insl
mov
dec
cs
mov
adc
in
dec
testb
addr16
dec
arpl
dec
testl
cli
sbb
pop
movl
stos
cmp
fdiv
je
mov
test
adc
or
dec
imull
imul
aas
shlb
jg
pop
dec
mov
mov
or
add
shrb
pop
jne
mov
mov
fs
adc
cmp
jg
cs
and
jne
int
xchg
xor
ljmp
and
or
not
sbb
jne
xorl
sub
imul
sub
in
push
lret
outsb
popf
aaa
and
xor
xchg
les
iret
pop
jb
push
das
aam
pop
repnz
jns
psubw
mov
std
inc
jecxz
dec
dec
inc
and
mov
xor
js
faddl
lock
in
nop
jecxz
negb
jne
das
cli
imul
shrl
mov
mov
cmp
ret
sub
icebp
sbb
test
ja
cmp
cmpsb
jb
sub
sbb
cld
xor
pop
dec
repz
xor
insl
lret
sub
mov
loopne
pop
mov
mov
jle
nop
psllq
xor
fildl
out
stos
imul
xchg
insb
rcll
scas
cmpsl
sarb
mov
movsl
into
stc
scas
in
test
mov
ss
sbbb
xor
lret
fsubrl
jle
arpl
add
or
lock
mov
test
popa
pop
mov
std
lock
mov
outsl
stc
or
test
lock
ja
mov
sub
in
jbe
fs
pushf
out
aad
jno
add
lret
subl
and
test
int
imul
xor
cmp
pop
mov
pop
pushw
inc
cmp
orl
pop
mov
aaa
nop
cmp
jge
aam
xchg
popf
lret
mov
cmp
pop
mov
fisubrl
mov
fmuls
dec
push
arpl
or
fimull
or
ret
cwtl
xchg
mov
pop
shlb
dec
daa
xor
outsb
or
outsl
rorl
push
je
out
in
mov
lret
test
popa
testl
dec
push
push
jno
mov
xchg
cltd
repz
icebp
jle,pn
dec
outsl
jne
push
sub
cmp
mov
mov
cmp
xchg
push
mov
rcrb
nop
xchg
sbb
dec
jp
adcb
fidivs
xor
pop
mov
cltd
lcall
and
out
jb
cmp
cli
hlt
pop
out
fldpi
cmp
pop
int3
inc
jnp
jne
sbb
dec
mov
sbb
xor
les
sbb
into
mov
mov
and
push
je
pop
clc
xchg
mov
pop
pop
pop
mov
je
dec
cmp
fsubrs
pop
adc
call
mov
push
push
sub
lods
lcall
and
fldenv
jge
test
xor
out
out
mov
cmp
shl
or
clc
or
push
dec
addr16
add
fistps
xor
dec
shlb
call
dec
daa
cmpsb
inc
dec
mov
adc
inc
mov
cli
unpckhps
push
or
mull
add
out
xor
cmp
and
mov
dec
loop
stos
popa
jne
pushf
push
jno
xchg
aam
in
pop
pusha
iret
mov
mov
shl
sti
ds
aaa
sub
sub
stc
bound
jp
call
lret
mov
jg
enter
aam
xchg
push
push
add
adc
pop
jae
xchg
mov
dec
ss
push
enter
mov
inc
xor
ret
scas
bound
jle
and
push
je
mov
rclb
shl
xor
fisttpl
cwtl
flds
pop
sti
sarb
fisttpll
push
xor
decl
lcall
add
test
js
mov
sub
clc
or
arpl
lods
push
dec
mov
mov
pop
push
inc
xchg
add
sub
xor
cmp
cmpsb
cmp
cmp
je
cmp
rcrb
cs
sahf
mov
and
xor
pop
jmp
fldl
leave
xchg
or
sub
pop
xchg
mov
dec
xchg
mov
and
mov
arpl
ds
mov
subl
mov
jb
loop
inc
jmp
or
nop
popa
sub
scas
add
xchg
xchg
sub
jge
xorw
int
or
cmpl
mov
cmp
out
std
cmpsl
jnp
cmpsl
push
sbbb
push
pop
dec
stos
sbb
repnz
test
inc
add
push
xor
xchg
mov
mov
or
pop
adc
dec
mov
xchg
xchg
mov
pop
xchg
or
fcompl
ficompl
sub
xor
and
test
cmp
leave
or
ret
or
cmc
push
imul
xor
stos
imul
push
mov
lea
outsl
push
or
xchg
repz
dec
push
mov
sbb
or
push
mov
adc
in
fwait
repz
xor
ret
imul
dec
and
out
cmp
scas
push
mov
jb
roll
mov
inc
out
pop
push
test
mov
in
mov
jne
cmp
sbb
shlb
les
loop
jns
stc
jp
cmpsb
addr16
sbb
lret
into
scas
nop
loope
xchg
call
dec
lock
jl
add
push
sub
cmp
and
xchg
rcrl
ret
dec
lds
push
imul
adc
cmc
or
xchg
jnp
lock
fistpl
sub
xchg
jne
cmp
sbb
cmpl
sbb
fidivl
sbb
cltd
jbe
adc
xchg
ret
les
sbb
ret
sbb
stc
and
mov
sbb
adc
sbb
mov
jb
jg
and
push
jge,pn
xchg
push
mov
jp
icebp
pop
xchg
mov
cld
push
adc
cld
imul
cmp
daa
fnsave
pop
inc
rcr
insl
aad
arpl
push
rorb
and
jnp
test
jne
dec
mov
psubsb
pop
repz
sub
xchg
icebp
push
sub
insl
orb
fwait
push
push
jnp
push
add
push
cmp
adc
in
inc
lea
cmp
out
sarl
loope
rorb
jle
push
scas
ljmp
pop
loopnew
or
push
push
roll
xchg
nop
cmp
aam
jge
rclb
or
inc
sub
imul
into
cli
jb
push
or
cmpsl
into
stos
rcrb
xchg
pusha
mov
push
fsubrs
scas
pop
test
jg
jmp
clc
jbe
xchg
inc
outsb
add
jl
pop
push
loopne
mov
cwtl
rcl
scas
fwait
or
aad
jge
aad
cmp
cwtl
pop
clc
flds
dec
rorl
in
daa
xor
jmp
lret
jmp
ljmp
adc
xchg
cmp
add
cmc
rcll
popa
leave
dec
xchg
enter
xor
mov
icebp
repz
lods
lcall
xchg
insl
out
outsb
jmp
aam
mov
adc
push
or
cmp
jne
out
xchg
sti
das
inc
std
rorl
push
sub
mov
xchg
add
repz
imul
sub
add
lcall
dec
inc
and
cmp
cmp
mov
cmpsl
dec
inc
outsb
inc
aas
stos
bound
jnp
push
adc
mov
lods
or
shlb
and
xlat
dec
js
hlt
mov
mov
and
lret
lock
dec
mov
dec
ljmp
mov
sub
or
clc
dec
jle
rcl
inc
jmp
imul
jecxz
mov
push
mov
jg
xchg
dec
inc
sti
movsl
ret
inc
lret
add
jl
mov
push
xor
pop
pop
push
jg
mov
cmc
add
dec
mov
jae
jmp
sbb
jecxz
ficoml
loope
cld
jns
push
mov
fcmovne
mov
mov
pop
aaa
stos
loope
jl
mulb
or
insl
loope
mov
imul
inc
lock
jle
and
dec
xchg
xchg
das
pop
mov
add
insl
cmpsb
idivl
cmc
or
mov
push
mov
mov
out
push
ja
test
push
fildl
mov
dec
cmpb
push
inc
inc
rorl
push
xchg
in
mov
or
les
imul
lahf
xor
and
orb
pop
aas
pop
jecxz
jb
loop
imul
out
gs
lret
xchg
mov
jae
inc
ss
dec
mov
mov
hlt
je
dec
in
aaa
jne
pop
scas
sub
xchg
mov
hlt
inc
lcall
lcall
mov
fldt
and
gs
sbb
jmp
push
fists
mov
cs
dec
ja
mov
xchg
jecxz
lea
fdivrs
test
lea
ds
mov
aas
xor
jmp
int3
sub
cli
repnz
ja
or
xor
orl
push
sub
xchg
sbb
jl
lahf
fs
push
xchg
add
icebp
fsubl
mov
xor
or
xchg
jae
movsl
sub
loope
mov
xchg
test
xchg
mov
sbb
test
or
xor
and
inc
shrl
mov
inc
aad
push
fldcw
shlb
jne
mov
pop
popa
xchg
aam
mov
pushf
sahf
pushf
jbe
cli
sbb
pop
mov
or
fimuls
out
push
jae
std
sar
testb
dec
jle
pushf
je
js
decl
mov
or
cmpsb
nop
jne
dec
imul
in
jns
push
push
pop
pusha
outsb
daa
push
jae
cltd
fildll
sub
push
mov
in
icebp
jl
mov
loopne
and
mov
test
mov
fcoml
pusha
inc
testb
or
js
out
sbbb
sbb
dec
mov
push
xor
mov
mov
lods
push
and
cltd
or
dec
mov
enter
push
popf
ret
ret
lods
ljmp
mov
pop
or
js
mov
loopne
stos
sbb
cmc
dec
scas
xchg
mov
pop
mov
enter
sub
jns
mov
add
test
jg
xchg
cmp
jge
sbb
mov
push
pop
xlat
xchg
popa
call
ds
mov
iret
add
sbb
lahf
int
jb
inc
mov
mov
mov
ret
pop
sbb
jb
add
mov
mov
out
fdivr
adc
mov
shr
sub
icebp
pop
dec
mov
cmp
jne
push
dec
aas
pop
push
or
lret
sbb
mov
adc
js
push
in
scas
cmp
cs
jmp
mov
push
xchg
xorb
mov
cld
cmp
add
cwtl
pop
cmp
push
xlat
pop
mov
lahf
ja
pop
hlt
or
movsb
adc
cmp
adc
insl
cwtl
aad
cmc
aad
jmp
adc
and
xor
inc
call
sub
mov
xchg
shl
xchg
bound
dec
pop
stc
mov
rcll
lods
icebp
dec
jle
sub
xchg
jo
int
mov
ljmp
in
sbb
lds
mov
push
sarb
incl
or
pop
inc
arpl
fs
add
clc
mov
or
aad
ja
fs
int3
mov
jmp
das
inc
sub
adc
add
push
and
rclb
xor
nop
pusha
stos
movsl
popa
cmp
mov
dec
push
xchg
test
lea
pop
mov
xchg
loop
data16
int
mov
adc
bnd
lret
adc
dec
jb
jo
pushf
das
repz
jne
jl
loopne
aaa
jnp
icebp
in
into
dec
push
arpl
andb
insl
xlat
ss
movsb
or
loop
sahf
test
mov
adc
lods
mov
adc
add
push
gs
add
sahf
and
lods
jae
mov
pop
repz
xchg
lahf
xor
or
xchg
and
mov
js
icebp
mov
outsb
xchg
out
shl
jle
iret
stos
fdivrp
push
dec
out
leave
cli
ja
cli
sbb
div
lea
mov
push
adc
stos
add
mov
inc
sub
repnz
jmp
loopne
test
ja
shrl
mov
stc
icebp
enter
mov
insb
cmpsb
aad
sbb
jle
jge
mov
push
aaa
mov
ja
cli
jno
into
ja
lret
stc
rolb
pop
out
subl
xor
jle
pop
mov
xor
lret
lret
repz
adc
js
sub
pop
xor
cmp
and
add
mov
cs
fs
xchg
push
ja
mov
xchg
repnz
in
cli
out
sub
sets
rclb
mov
js
mov
cmpsb
sahf
mov
xchg
push
fldl
lds
pop
adc
cltd
inc
xchg
int3
push
rorb
in
inc
out
inc
jno
test
inc
xchg
add
xchg
xlat
movsl
imul
rolb
xor
in
jg
adcl
push
sbb
mov
int3
lods
or
jp
or
pop
orl
inc
fadds
decl
push
xor
cwtl
stos
cld
xor
jle
pop
pop
cmp
sbb
aad
sbb
pop
cmp
notb
sbb
andl
mov
popa
cmp
push
in
add
jle
mov
sub
inc
pop
scas
es
push
lret
test
or
jb
xchg
or
pop
in
ret
or
jnp
cwtl
inc
add
cmc
inc
inc
cmc
cmp
xorb
in
mov
rcl
mov
in
dec
imul
fs
fsts
push
clc
leave
lds
mov
mov
stos
sub
lret
mov
jle
js
stos
outsl
je
imul
cs
pushl
rcr
or
dec
imul
loopne
jp
lea
dec
lret
imul
loopne
mov
test
sahf
pop
jne
lods
fdiv
outsl
and
pop
ficoml
xchg
inc
cmp
in
addb
jno
inc
ss
loop
sub
lods
push
leave
jne
mov
push
jnp
lret
jbe
insb
mov
jecxz
mov
movsb
jae
add
mov
stos
aad
or
push
mov
les
movsl
stc
or
rcrl
sub
jg
stc
test
xor
je
pop
aam
movsl
daa
xchg
test
pusha
data16
sbbl
lds
sbb
jae
in
fistpl
pop
mov
sub
aaa
not
vmovupd
arpl
push
mov
push
das
xor
mov
mov
jp
ds
aam
adc
nop
sub
je
insl
testl
jge
sub
push
enter
out
mov
lods
out
xchg
push
pop
das
adc
dec
inc
xor
jae
jmp
pop
stos
pop
cmp
loopne
cmp
sbb
inc
dec
test
push
cmpsb
jae
rcrb
push
lcall
shlb
cmp
test
iret
sbb
fidivl
fwait
arpl
mov
stos
add
fsub
addb
shrb
into
orb
loop
les
sti
fnstenv
cld
xchg
and
insb
icebp
or
insb
mov
adc
xor
ds
fnop
ret
mov
mov
dec
in
repnz
dec
xchg
sbb
fcmovnu
arpl
add
repz
mov
aas
out
sub
ret
and
push
addr16
pop
push
cmp
sbb
xor
es
enter
jp
pop
mov
enter
test
push
ja
lahf
and
jo
gs
sti
insb
lcall
pop
fistl
mov
dec
xor
mov
cmpsb
rcrb
nop
cmp
sub
sbb
repz
lahf
fwait
dec
cmp
and
loopne
push
jo
mov
push
hlt
xor
mov
jnp
and
cli
cmp
divl
inc
jmp
dec
subl
rorb
cmp
and
inc
fcmovnb
inc
popa
xorb
movsl
ss
or
sbb
add
sbb
push
lock
fmuls
bound
adc
mov
xchg
test
sbbb
add
hlt
jne
xor
data16
xchg
push
in
pop
sarb
mov
jne
aam
sbb
mov
mov
xor
mov
adcl
pop
mov
xor
sbb
popf
add
sub
or
push
icebp
hlt
jbe
mov
daa
lds
notb
loope
jp
nop
lea
cmp
fstpt
sbb
jg
inc
cmp
sub
test
arpl
sbb
inc
fsubp
sub
or
add
xchg
and
xchg
pop
lret
dec
jnp
int
xchg
fstpl
adc
cmp
dec
mov
or
in
pop
fwait
cmp
in
es
jo
jmp
dec
xor
mov
add
mov
jnp
in
pop
inc
pop
test
int3
jmp
mov
sbb
pop
cmp
cltd
cmp
out
mov
push
or
mov
outsb
movsb
xor
inc
mov
arpl
insb
adc
lret
test
out
or
xchg
sub
add
push
jl
imul
or
ret
test
xchg
pop
jecxz
adc
mov
xor
out
mov
dec
pop
jb,pn
aaa
rcll
negb
es
xor
sahf
jp
aam
pop
mov
test
stos
push
push
push
jns
mov
pop
call
lods
inc
adc
ret
jae
jl
xlat
ljmp
push
jmp
aaa
in
pushf
inc
pop
sub
adc
jae
pop
das
dec
stos
dec
cwtl
inc
push
sub
fisttpl
gs
or
add
sbb
adc
stc
xchg
jnp
in
fsts
xchg
cmp
cltd
mov
mov
push
mov
les
xchg
scas
rorl
xchg
and
push
cmp
fcoms
pop
or
xchg
sti
push
pop
push
loopne
dec
test
push
jmp
jl
addr16
movsb
mov
adc
lea
rclb
aaa
mov
mov
sbb
inc
pushf
and
xor
and
cmp
lds
sub
jl
xchg
or
insb
pop
xor
cmp
aad
lods
outsb
add
lret
psubb
pop
fcoms
xlat
sub
jbe
mov
rorb
rcrl
add
mov
stc
nop
enter
outsl
push
xchg
jb
int
jno
sti
lret
in
sub
stos
stos
mov
and
clc
std
pop
push
fs
popf
jecxz
int
cmp
jmp
sti
mov
repnz
data16
sub
aad
lret
mov
scas
inc
sbb
mov
push
push
xchg
sbb
scas
ss
out
mov
mov
jl
or
call
icebp
jno
sub
pop
sti
addr16
xor
inc
dec
pushf
imul
les
mov
test
gs
inc
sub
loop
shll
mov
addr16
fbstp
insb
fmul
inc
xchg
flds
mov
push
pop
repnz
and
cmp
sub
jmp
or
scas
pop
hlt
cli
lahf
mov
inc
push
testl
shll
fs
scas
iret
inc
in
daa
and
or
jb
stos
mov
rcll
jnp
pcmpeqd
push
push
xchg
mov
fwait
popa
and
das
imul
shlb
mov
cli
push
loopne
dec
fs
dec
or
aas
cli
jbe
dec
cmp
or
jp
out
inc
sub
or
sbb
jno
jl
cmpl
mov
leave
dec
mov
add
cmp
out
and
ret
mov
push
hlt
insb
or
ds
xchg
mov
inc
fsubrs
push
pop
dec
fwait
mov
pop
add
mov
sub
cmpsl
push
mov
mov
sub
add
xchg
pop
pop
dec
shl
sub
sub
dec
jp
mov
sbb
cmp
push
mov
icebp
popf
cmpsl
out
out
xchg
mov
out
cmp
or
jecxz
pop
xor
mov
popl
repnz
mov
dec
push
pop
sar
inc
sub
imul
mov
nop
mov
mov
pushf
jmp
imul
cltd
outsl
adc
fisttps
or
aad
push
js
inc
mov
pushf
or
sub
dec
cmp
fsubrp
push
or
out
pop
xor
sub
mov
sub
cmp
imull
insb
testl
pop
aaa
nop
jecxz
xchg
and
mov
cmp
aas
outsb
test
aas
push
xchg
jle
sub
pop
add
test
jns
loope
jnp
pop
std
outsb
lods
jmp
ror
sarl
sbb
int3
adc
out
push
into
mov
mov
pop
push
sub
push
xlat
enter
mov
jne
pop
or
jle
shrb
mov
pop
sub
dec
lods
push
lahf
popf
js
or
pop
mov
aaa
mov
icebp
bound
and
add
insb
xor
dec
sbb
push
movsl
sub
mov
and
mov
jge
in
jle
cmp
mov
mov
stos
imul
add
xor
add
add
jecxz
jmp
repnz
testb
or
sbb
fisttpll
rcr
mov
push
in
cmp
pop
in
or
outsl
fistps
jae
ret
cmc
pusha
mov
pop
orl
push
xor
dec
xor
cmp
mov
push
inc
jo
gs
imul
dec
jecxz
int
in
inc
loopne
jo
adc
cs
pop
mov
fsubrl
out
pop
and
mov
test
inc
pusha
xor
mov
dec
loopne
mov
adc
dec
lret
loop
jmp
dec
in
int3
lock
fistps
mov
sub
dec
into
and
mov
pop
pop
je
jo
popf
movsl
inc
jge
inc
stc
or
into
mov
out
enter
mulb
insb
push
mov
xor
jns
out
pusha
data16
inc
and
inc
jbe
shrb
clc
rolb
mov
addr16
cmp
sbb
lret
mov
outsb
inc
and
fdivs
xchg
inc
dec
jno
sbb
jo
sub
push
cli
mov
sbb
jge
jo
arpl
fldz
pop
cmovns
inc
iret
adc
dec
lret
lahf
xchg
mov
adc
jecxz
mov
mov
mov
mov
xchg
std
addr16
pop
adcl
sub
loope
or
pop
jae,pn
xor
sti
fcomps
xchg
cmpsl
ret
sbb
stos
mov
xor
xchg
xor
inc
add
jmp
pop
lea
mov
mov
mov
xor
lea
movzbl
movzbl
lea
movzbl
movzbl
mov
mov
add
movzbl
movzbl
xor
inc
cmp
jg
jmp
call
data16
add
add
add
add
add
inc
fs
push
jge
or
mov
cltd
lahf
cmp
mov
jle
fwait
push
scas
adc
out
movsb
ret
sar
cmpl
inc
call
fstl
and
pop
cmp
adc
bound
pop
or
push
mov
rolb
loopne
dec
and
mov
js
mov
adc
xchg
pushf
cs
xlat
xor
mov
rcrb
fdivrp
jo
sbb
mov
inc
popa
dec
adcb
jecxz
xchg
sahf
das
mov
inc
or
xor
imul
jl
sub
icebp
mov
aas
lods
sarl
in
inc
xor
sbb
insb
inc
es
push
dec
push
jmp
enter
movsl
jg
nop
int
popl
push
ret
movl
push
push
cmp
clc
sbb
add
pusha
mov
mov
add
inc
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
lea
push
cmp
jne
sub
jmp
