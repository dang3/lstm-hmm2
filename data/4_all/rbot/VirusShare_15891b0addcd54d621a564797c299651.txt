mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
inc
inc
add
fucomi
xor
jo
add
pop
inc
pop
pop
mov
add
push
mov
fcoms
inc
ficoml
sarl
cld
xor
or
push
push
add
shlb
add
add
cmpl
jne
pop
pushl
push
orl
push
jo
fcomps
jne
popa
xor
push
or
ret
pop
add
add
mov
xor
pop
leave
ret
add
jo
push
gs
rcrb
mov
pushl
outsl
adc
lds
inc
add
adc
push
call
fstpt
scas
pop
mulb
sbb
mov
out
mov
call
sub
sarb
out
cmp
push
fadds
fildl
loopne
mov
outsl
mov
mov
mov
sub
mov
lret
jo
push
shll
popf
or
sbb
cmp
loop
popf
cwtl
add
add
inc
mov
jne
lea
push
push
loopne
add
pop
add
sbb
mov
ja
push
push
ret
adc
lahf
sbb
std
and
push
out
fwait
mov
in
mov
inc
inc
cld
push
push
cmpl
xor
adc
mov
into
adc
mov
xor
push
ljmp
lcall
jmp
push
mov
test
push
push
jae
test
push
jo
pop
fstps
add
vfnmadd132pd
mov
lods
mov
clc
mov
vpshlb
repnz
mov
inc
push
imul
cwtl
test
cmp
mov
mov
jnp
or
push
xchg
xchg
mov
xchg
loopne
aam
pop
into
sub
sahf
pop
pop
pop
xorl
or
in
gs
jae
lods
ljmp
pushf
mov
sbb
sbb
lds
sbb
mov
popa
ror
add
cwtl
js
pop
sub
push
or
cmp
clc
cld
xor
stos
and
or
xor
jmp
lock
int
cmp
hlt
dec
sbbl
inc
imul
int3
sbb
dec
mov
xor
cmpb
cld
cld
lock
jne
sbb
or
dec
hlt
mov
rcll
and
mov
mov
add
rcrb
add
lock
and
cmp
and
movw
dec
xchg
mov
data16
add
data16
push
xor
push
jae
push
aam
jp
out
push
adc
add
push
mov
sub
push
mov
sbb
rcll
push
mov
add
cmc
inc
les
sti
setg
pop
sbbl
push
nop
pop
loopne
pop
lea
push
mov
movl
adc
sbb
jne
mov
dec
inc
iret
adc
imul
into
and
cmpl
scas
cmpl
or
mov
cli
sub
cmp
pop
jmp
mov
adc
xor
nop
les
push
ja
je
nop
inc
sbb
xorb
xor
das
loop
fstpl
loope
add
adc
gs
loop
jo
loopne
push
mov
ja
out
insb
adc
cmpb
add
test
cmp
jne
rcrb
sbb
adc
movl
xchg
pop
sub
push
cmp
mov
add
mov
dec
cmp
or
mov
add
add
movsb
in
test
xchg
sbb
pushf
lcall
xchg
add
mov
xor
mov
mov
add
inc
mov
ds
insb
pushw
repz
pop
arpl
add
mov
icebp
and
push
insb
js
fs
aam
cwtl
cltd
cmpsl
pop
push
sar
cmc
pusha
cli
mov
loope
cmp
push
add
decl
loope
and
xchg
inc
fistps
and
dec
xor
add
inc
xor
push
negl
pop
and
imul
les
cmp
les
and
aam
adc
mov
dec
mov
scas
pop
neg
jbe
scas
add
xchg
adc
jb
push
xchg
fsubrl
xor
add
adc
mov
imul
inc
popl
and
mov
popa
addr16
cmp
mov
js
dec
fmuls
or
das
push
cld
push
call
jmp
repz
sbb
lods
ja
in
inc
inc
cmp
pop
jae
jbe
add
mov
sbb
xchg
and
mov
and
lahf
mov
pop
lret
sub
push
les
push
int3
sbb
shll
scas
cwtl
pop
jbe
or
or
or
stc
and
push
aas
adc
or
pop
lcall
outsl
or
andl
sbb
xor
and
dec
lods
inc
push
dec
stos
cs
jbe
pop
or
add
cmp
jl
jmp
sbb
mov
push
imul
ret
dec
mov
pop
jno
fsubp
fstps
ret
je
or
mov
jb
add
aad
sar
aad
fdivrl
sarb
out
push
sbb
test
cmpsb
insl
pushl
nop
sahf
jge
lea
xchg
sbb
sub
std
ja
sti
xchg
sbb
outsl
xchg
outsb
movb
jle
mov
mov
nop
push
sub
or
cmpb
cmpb
fiadds
xchg
mov
fistpll
fidivrs
xchg
loopne
mov
cli
rcl
adc
mov
shl
mov
aaa
insb
mov
loop
sub
inc
rorb
les
xchg
subb
in
nop
ss
inc
popf
adc
inc
loope
adc
leave
mov
add
fidivrl
dec
and
sbb
push
sbb
adc
sbb
pop
inc
push
cmp
inc
cmp
push
adc
test
ror
nop
xor
xorb
int3
call
fldl
pop
sbb
xchg
pop
or
loope
lock
mov
in
xor
pop
cmp
sbb
iret
cmp
aas
mov
insb
xchg
push
push
or
push
enter
inc
int
jbe
call
je
fwait
nop
jae
clc
push
xchg
pop
or
jne
or
fucom
sub
jge
cmp
inc
push
mov
daa
cld
adc
sbb
pop
dec
sbb
gs
ljmp
fcmovnu
and
in
inc
loop
scas
inc
xor
jne
push
icebp
cmp
fcmovne
fiaddl
movsl
xchg
call
adc
pop
add
repnz
adc
pusha
pop
in
mov
mov
mov
pop
or
aas
mov
add
ja
pushl
adcb
xor
and
sbb
pop
adc
lods
in
mov
dec
mov
adc
outsb
jmp
cwtl
sbb
enter
jle
faddl
xor
inc
arpl
xor
jmp
test
mov
stc
push
inc
in
push
sahf
add
outsb
mov
sbb
mov
test
push
loope
and
mov
sbb
add
in
ret
movsb
xchg
addl
dec
in
in
test
and
xlat
and
mov
ret
ds
out
mov
cmpsb
loope
cmpsl
fstps
push
and
mov
xchg
test
push
push
jl
addr16
xchg
mov
dec
push
inc
mov
mov
push
sarb
jae
mov
sti
push
movsl
xchg
cmp
repnz
cmp
lret
dec
imul
rorl
in
sahf
jge
movsb
inc
jle
sbb
sahf
push
out
xchg
xchg
int
push
mov
lds
mov
outsl
push
pop
shlb
mov
lods
add
mov
pop
pusha
inc
cld
popf
ret
xor
xor
hlt
cmp
push
sbb
cmp
push
xor
push
push
pop
mov
xchg
push
test
adc
cmpsl
sub
sbb
fnstcw
test
loope
dec
aam
push
push
out
xor
and
enter
aam
out
mov
dec
add
adc
or
arpl
sub
push
xor
popa
sub
test
mov
ret
call
adc
mov
sub
mov
pop
jecxz
test
ret
mov
jo
push
push
cmp
cmp
add
test
jo
and
int3
push
cs
inc
pop
hlt
push
mov
inc
cmp
add
je
xchg
inc
jnp
sti
push
or
add
sbb
mov
imul
data16
mov
out
add
loopne
sbbb
or
add
sbb
sub
dec
pop
jg
shrl
add
adc
rolb
shrb
add
sub
mov
push
push
ret
test
add
mov
mov
enter
push
pusha
lds
add
insb
test
push
push
xor
shll
push
popl
push
xchg
shl
sbb
push
insb
mov
lods
push
mov
enter
arpl
in
add
loopne
ja
loope
jmp
ljmp
mov
xor
adc
mov
push
push
push
sbb
mov
and
cmp
pop
dec
mov
and
dec
int3
adc
push
cmp
mov
mov
mov
ror
push
push
sti
loopne
xlat
mov
insb
je
push
cwtl
or
or
add
mov
sahf
inc
jle
pop
je
push
shlb
in
inc
fcompl
fcompl
adc
int
inc
inc
loope
clc
jo
or
dec
adc
lret
jg
adc
sbb
push
xchg
xchg
mov
xor
mov
mov
inc
push
adc
adc
sbbb
and
pop
inc
mov
mov
outsl
sbb
mov
sub
loope
popf
movsl
sub
int
sbb
outsl
xor
xchg
adc
in
insb
push
insb
jns
push
test
inc
pushf
or
xor
sbb
out
nop
dec
fistpll
hlt
inc
fnsave
adc
lock
in
inc
test
sub
sub
in
lock
out
mov
adc
and
jne
paddb
nop
fimull
fadds
sbb
pop
push
mov
pop
rcll
sub
pushf
pusha
push
mov
push
int3
adc
sbb
aam
pushf
push
ljmp
insl
adc
imul
addr16
ds
fcmovb
aam
div
or
xchg
ljmp
aas
cmp
dec
hlt
cmp
mov
mov
bound
sbb
pop
xor
jbe
ret
pushf
jne
lcall
clc
sbb
dec
cmp
test
add
and
pushf
cmp
or
sub
jo
push
loop
shrb
fnsave
rcrl
jecxz
filds
push
inc
insb
loop
sbb
addl
add
fwait
sbb
or
mov
gs
ljmp
adc
jnp
lods
mov
lods
dec
shll
mov
push
add
and
dec
ljmp
pop
jmp
cmp
hlt
sub
lahf
add
lea
xchg
ss
xchg
inc
push
push
add
push
and
rolb
iret
and
and
adc
add
shll
xor
shr
test
xor
inc
dec
jne
pop
pop
popa
nop
addl
ret
movsb
outsb
cwtl
or
mov
insl
loope
cmp
enter
testb
jne
inc
sub
push
sub
fidivrs
inc
push
pop
and
movsl
adc
add
lea
fdivs
push
mov
inc
inc
add
rorb
xor
sbb
ret
add
int
into
and
loope
cmp
dec
rorb
shrl
rorb
and
sbb
xchg
cmp
daa
sub
pop
fadds
fstps
fisubrl
jo
sbb
fisttpll
fimuls
loopne
loope
push
xchg
loope
push
jecxz
in
in
loope
cmp
cmp
adc
or
sbb
xchg
jmp
in
xor
adc
push
ret
loope
cmp
dec
lock
adc
inc
repz
cmp
xchg
aaa
cmc
sbb
clc
mov
stc
inc
cli
sub
pop
mov
push
push
insl
jne
mov
inc
enter
out
sar
xor
jbe
mov
frstor
inc
cmp
jb
adc
loopne
lds
jge
jne
test
add
push
adc
xchg
add
out
sbb
test
mov
rorb
xor
add
mov
xchg
cmp
mov
mov
xor
fiaddl
lret
and
inc
mov
dec
lahf
rolb
xor
xor
lea
les
pop
fadds
mov
add
jbe
inc
and
aam
dec
je
mov
sbb
mov
xor
sbb
dec
aaa
or
sbb
adc
add
and
lret
adc
xor
inc
cmp
out
jb
push
push
lahf
or
sarb
nop
push
mov
jle
add
cmp
push
push
ret
out
mov
dec
in
cs
cld
scas
cwtl
test
into
out
cld
mov
int3
cld
into
out
fadd
ja
out
lock
lock
adc
and
shrb
mov
cmp
jle
mov
dec
pushl
add
aas
enter
dec
jne
lahf
popf
dec
jne
rcr
loope
repnz
outsb
ja
mov
loop
loop
xor
mov
push
out
pop
and
xchg
cs
jb
push
jbe
lret
pop
push
mov
mov
gs
and
push
nop
mov
or
mov
je
adc
sbb
cmp
pushf
or
pusha
jb
push
pop
out
nop
lock
jb
imul
mov
lea
mov
in
push
mov
fsub
inc
pop
cmp
cmp
fsub
cmp
or
push
out
push
inc
push
popa
dec
jmp
lods
jmp
inc
call
in
push
push
jno
lock
daa
or
and
push
pop
inc
jge
jb
hlt
adc
pop
xor
jns
or
add
and
repnz
sahf
shll
movsb
cwtl
call
in
ljmp
add
jae
inc
and
aam
loopne
sbb
pop
pop
push
xchg
pop
cmp
and
fdivs
loopne
subl
push
pushf
inc
in
mov
cmp
decb
adc
or
nop
in
rcll
mov
out
js
sub
stc
add
inc
out
fsubs
sbb
into
call
push
divl
or
test
jg
mov
xchg
scas
lds
std
mov
jp
sub
cwtl
xchg
xor
popf
push
xor
jmp
push
inc
mov
push
sbb
mov
push
loop
faddl
mov
push
jecxz
pusha
or
mov
xor
inc
test
int
lret
add
loopne
nop
xchg
lea
mov
mov
lods
shll
popf
test
outsl
out
jae
insb
cmovle
xlat
in
pop
add
mov
mov
push
shrl
xor
inc
int
insb
xchg
push
mov
shl
jne
repz
jmp
push
call
mov
data16
cmpsl
mov
clc
cld
in
lret
insl
sar
imul
cmp
or
jbe
jge
jno
test
sub
push
xor
jle
inc
cmp
test
mov
pop
add
and
popf
push
je
push
add
and
add
push
jmp
push
pop
cmp
je
or
mov
nop
fcmovne
jp
add
pop
lcall
insb
mov
or
loope
int3
dec
cs
ds
mov
addr16
mov
sub
out
lock
mov
jne
movb
inc
or
add
incl
cmp
mov
insl
dec
rep
xchg
mov
jp
mov
push
push
and
fcomps
jns
sarl
out
xchg
push
pop
jge
sbb
les
imul
in
aam
jl
sub
insb
enter
sbb
or
pop
jl
dec
push
pop
test
push
mov
pop
push
jno
lods
jne
fs
mov
inc
repz
or
push
inc
push
xor
sub
jae
mov
cmp
orl
test
je
xchg
lcall
jne
push
fwait
subb
inc
fimuls
push
cld
push
mov
insb
mov
movl
adc
mov
loopne
sub
jne
push
mov
push
shll
rclb
xchg
pop
rcl
push
in
jno,pn
pop
pop
je
mov
in
rclb
dec
out
rcl
les
fs
push
xchg
popa
inc
or
andb
pop
pop
jmp
movsbl
mov
sahf
cmp
inc
inc
cmp
mov
int
sub
lcall
push
pop
jae
pop
rcrb
adcb
push
sub
sahf
fldenv
fiaddl
jmp
popf
loope
cld
mov
mov
and
xor
sub
aaa
ja
mov
cld
push
xchg
lret
cmp
xchg
enter
test
mov
sti
push
mov
dec
pop
in
jg
push
dec
push
mov
push
or
int
daa
in
in
cmp
mov
cmpsb
testb
jne
push
xchg
inc
dec
ss
test
add
adc
xchg
push
cmc
in
mov
repnz
neg
mov
lds
adc
mov
cld
mov
push
mov
sub
ljmp
lock
jno
push
adc
cmp
jl
adc
sub
test
mov
imul
js
leave
add
popa
movsl
rolb
mov
call
jne
jne
lods
cs
lods
jb
xchg
adc
addl
pop
shll
adc
mov
rolb
mov
adc
adc
roll
dec
xchg
push
hlt
leave
or
mov
inc
mov
mov
pop
xor
mov
movsb
pop
sub
fcomps
inc
lret
cmp
sbb
cmp
aad
mov
xor
pop
push
or
push
inc
or
cs
pop
pop
les
aam
inc
arpl
push
pop
xor
sti
pop
mov
mov
cmp
xor
push
or
shrb
ljmp
sti
sub
data16
and
sub
xchg
add
xchg
ret
inc
arpl
jmp
sub
rclb
or
sbb
push
cmc
cwtl
pusha
inc
test
lods
dec
lcall
in
repnz
pop
into
in
scas
or
call
jle
push
push
lods
pushf
mov
cmpsb
sub
sbb
and
xor
xchg
xor
pop
in
dec
ljmp
int
pop
je
ss
and
push
ret
xchg
scas
pop
and
xchg
push
sbb
xchg
or
movsl
inc
call
mov
mov
movsw
xor
mov
xchg
sub
rep
stos
mov
fcompl
lret
pop
dec
xchg
dec
or
subb
push
xchg
sbb
xor
mov
xor
mov
sub
adc
pusha
or
jmp
mov
push
xchg
dec
sbb
inc
sahf
inc
or
mov
ret
fstpt
jmp
sbb
jmp
fsubrl
in
lds
dec
test
lds
dec
test
sbb
jecxz
mov
loope
inc
repz
push
insb
sbb
jp
or
jmp
andb
movl
mov
insl
cld
inc
iret
jp
iret
or
xchg
into
inc
mov
cmp
pop
push
mov
dec
cmp
fbstp
xchg
clc
sub
push
xor
loopne
inc
jae
add
mov
mov
push
cltd
pop
idiv
cmp
je
push
xchg
jl
cmp
inc
aas
adc
into
test
pusha
je
xor
mov
mov
rclb
add
sub
or
and
or
cmp
push
mov
inc
pop
jb
cld
out
bound
or
jne
fidivs
pop
repz
in
dec
daa
pop
push
incl
repz
lock
push
adc
cmp
movsb
sbbb
outsb
filds
ret
add
inc
repz
inc
xor
mov
or
fstps
addr16
xorb
mov
loopne
addr16
int3
int3
mov
lea
mov
xor
lcall
mov
push
push
addr16
inc
sbb
dec
int
les
sub
xor
cmp
push
rclb
mov
pop
cmp
orl
rorl
dec
mov
outsb
push
lods
sbbl
mov
or
push
adc
xor
push
inc
loope
repnz
inc
jb
shlb
sub
fisubl
test
inc
popf
or
lcall
sbb
lock
ja
xchg
or
sbb
sbbb
mov
fidivrs
push
or
test
movsl
inc
push
andl
orb
inc
cmpb
jne
adc
loope
nop
fs
xor
adc
push
push
mov
sbb
js
sub
jp
dec
shrb
mov
fimuls
push
jmp
call
add
pop
test
repnz
jnp
nop
test
add
ror
push
dec
dec
inc
nop
enter
fcoml
je
imul
or
fcompl
adc
cld
pop
xchg
repz
mov
jmp
mov
push
sbb
and
inc
mov
cltd
sbb
out
adcb
dec
jae
xchg
in
mull
xchg
cmp
push
popf
or
jmp
pop
popf
adc
das
lcall
xor
int3
std
shl
xchg
xchg
stos
or
adc
adc
push
aam
push
jl
jmp
cltd
in
es
add
movl
fisubrl
sarb
sub
movb
or
xchg
lea
push
in
out
les
xor
and
test
insl
push
in
lods
aaa
cli
dec
inc
add
dec
push
sub
xchg
loopne
push
inc
adc
mov
inc
push
cmpsb
fnstsw
push
push
push
lcall
dec
icebp
mov
adc
xchg
push
or
outsl
and
push
or
enter
bound
cmovl
daa
pusha
movsl
js
mov
xor
in
cld
jbe
je
insb
out
jo
sbb
mov
mov
cmpl
arpl
in
out
jmp
mov
and
fiaddl
outsb
fldenv
jne
loop
and
shr
inc
jg
lahf
in
in
in
push
jae
fsubrp
inc
cld
nop
enter
shlb
mov
mov
mov
std
shlb
nop
add
cmp
cmp
std
ss
das
aaa
cmp
sbb
push
jmp
and
and
fcomps
mov
fisubrs
clc
aam
jo
ss
imul
add
push
cmp
mov
mov
lret
popf
dec
jl
inc
or
add
adc
push
cmp
pop
es
test
cmovae
push
call
add
xor
adc
mov
icebp
sub
mov
daa
xor
push
xchg
xchg
lret
stos
lods
pop
sub
mov
adc
mov
sub
rcl
cmpb
lret
ret
int3
add
test
adc
movzwl
cltd
mov
in
xorb
in
aaa
or
jo
movsb
cmp
pusha
lcall
add
je
cmc
push
push
push
pop
adc
cmp
and
mov
je
sub
hlt
add
ficompl
rolb
lret
mov
rorl
inc
inc
leave
pop
aaa
clc
push
cli
test
or
adc
hlt
xchg
in
pop
subb
mov
ret
subl
testl
adc
les
nop
enter
out
jmp
outsb
outsl
mov
pop
mov
test
out
or
in
or
mov
fisttpl
aaa
inc
push
pop
mov
push
mov
loop
mov
xchg
xlat
inc
pusha
addl
mov
lcall
test
insb
das
fs
test
stos
int3
push
xor
mov
sub
jns
popf
pop
adc
push
addr16
movsl
lds
cs
ljmp
pop
xchg
mov
jns
test
cmp
jg
jl
out
les
and
rcrb
cwtl
dec
cwtl
or
add
mov
arpl
jmp
or
sarl
mov
cmp
ja
and
and
sbb
imul
in
and
leave
xchg
pop
xchg
sub
push
xchg
xchg
sub
test
push
add
out
mov
push
sub
cltd
idiv
and
add
mov
add
pop
adc
xchg
pusha
mov
outsb
mov
xor
sarl
pop
into
outsl
call
cmp
mov
dec
or
enter
jae
cmp
leave
lock
call
sahf
rorb
bound
mov
std
xor
nop
mov
sahf
mov
scas
add
pop
push
xchg
lds
mov
and
nop
fs
mov
inc
sbb
inc
or
adc
inc
dec
cmp
dec
gs
outsb
in
inc
or
sbb
add
cmp
xchg
xor
lods
mov
movl
add
les
jge
ja
cmpl
mov
je
shr
push
shrl
push
mov
sub
xor
xor
popf
push
add
xchg
out
mov
inc
je
je
ljmp
mov
pop
rcl
insb
pop
xor
sub
adc
adc
push
aad
div
mov
xor
inc
cld
pop
sub
in
dec
out
test
cmc
js
enter
rcrl
xchg
enter
popa
mov
mov
fsubr
aaa
add
mov
add
insl
clc
push
push
inc
lret
fmull
fstpl
arpl
xchg
fsts
cmp
mov
sub
mov
rcr
gs
scas
mov
and
xor
jo
idiv
xchg
leave
rorb
loopne
adc
inc
pop
and
jno
pop
mov
push
xor
int3
cltd
sub
sub
les
cmp
or
mov
cmpsl
sub
mov
pop
pop
push
push
add
dec
popf
sub
std
pop
mov
adc
jge
ja
into
pop
and
cltd
sub
sub
pop
jmp
inc
cmpsl
lods
insl
fimull
cld
push
pop
mov
imul
and
add
leave
or
mov
xchg
xor
inc
cmp
or
shll
jg
xchg
rorl
cmp
lods
push
xor
or
lret
and
add
push
or
pop
test
test
or
mov
inc
cmp
sub
je
test
mov
push
out
add
test
sbb
sub
jmp
dec
lea
sbb
addb
mov
mov
inc
dec
jmp
andb
dec
gs
and
xor
je
dec
loopne
test
and
clts
mov
inc
jb
mov
jbe
and
adc
in
fdivs
or
pop
mov
push
hlt
xor
jo
cld
mov
test
push
clc
call
push
call
push
ss
push
push
call
cmp
push
lods
js
or
xlat
lds
call
call
adc
pop
push
or
hlt
iret
mov
mov
mov
gs
call
push
sarb
pop
mov
push
adc
test
test
and
inc
pop
int3
jne
push
hlt
pop
jmp
mov
xchg
out
vmulss
cmp
rcrb
inc
mov
push
mov
mov
xchg
loope
outsb
xrelease
iret
or
add
ds
sub
mov
cltd
cmp
cmp
adc
es
push
pop
shrb
jne
push
push
mov
fisubrs
inc
push
pop
add
inc
rclb
xor
and
push
das
nop
push
dec
aad
cmpsb
icebp
and
adc
popf
sbb
ja
lcall
imul
fisubs
xchg
and
pop
pushf
lea
into
push
cmp
and
xchg
or
imull
or
jge
lods
nop
ret
inc
sarl
int3
push
inc
mov
adc
or
push
shlb
xor
lods
push
or
into
mov
aad
xor
clc
xchg
xorb
lods
pop
push
push
mov
lods
sub
jo
jge
xchg
pop
sbb
jl
popa
adc
test
and
popa
dec
jne
pop
lods
push
pop
lret
push
lock
cmp
push
xor
sbb
mov
cmp
push
adc
movl
mov
or
arpl
mov
add
in
insl
cmpsl
adc
push
mov
outsb
inc
cmpb
pop
adc
insl
xlat
sbbb
call
jb
sbb
mov
push
arpl
cmpb
std
es
in
mov
mov
mov
daa
sbb
sub
push
les
je
sahf
ds
mov
cmp
test
add
sbb
sbb
and
sbb
cmp
push
adc
jbe
adc
mov
je
notb
je
and
push
cmpb
jmp
inc
je,pn
shll
into
sti
mov
pushf
adc
sbb
sahf
push
lret
and
sub
xrelease
mov
fbstp
data16
cmp
out
xchg
imul
sbb
or
mov
fs
mov
scas
sub
ret
sub
xor
mov
rclb
mov
cltd
dec
rcll
or
add
cmp
xor
lock
pop
sub
aam
pushf
sub
sub
je
push
lock
push
clc
in
pusha
jl,pn
pusha
cmp
in
mov
inc
lods
adc
push
mov
cmp
in
pop
xchg
popa
and
shlb
add
xor
cmp
call
or
int
xchg
cmpsb
or
adc
mov
xor
mov
inc
cmpl
push
pop
scas
sarb
frstor
xor
dec
fldt
nop
por
cmp
push
sahf
push
int3
cltd
fs
cmp
je
dec
insb
fsubs
scas
xor
xchg
scas
dec
lods
xor
test
sbb
mov
dec
fistpll
movsl
mov
test
mov
push
stos
inc
cmp
add
xchg
push
push
mov
or
dec
call
and
mov
lods
pop
add
adc
mov
fnstcw
lea
mov
push
push
mov
mov
jle
shr
hlt
adc
insb
jno
cmpb
rorl
jnp
add
xchg
imul
pushl
xor
test
xor
or
fsubs
sbb
jne
test
and
mov
enter
add
xchg
out
ds
inc
insb
xchg
adc
in
ret
sbb
xchg
mov
and
jbe
adc
xchg
jb
sbbl
jne
mov
mov
push
dec
jle
jb
sbb
or
mov
and
cmpb
loope
cmp
dec
testb
pop
mov
adc
xchg
push
das
pushf
or
jne
es
dec
jns
mov
jnp
mov
push
movb
fimull
xchg
push
mov
xchg
push
mov
insb
sbb
std
jg
dec
je
stos
imulb
mov
mov
nop
add
jo
lock
add
and
cmp
jne
xor
inc
aad
aam
and
dec
pop
rclb
hlt
push
bound
popa
xchg
loopne
rcr
enter
fisubs
or
add
add
nop
out
or
clc
jae
jmp
outsb
and
mov
lds
mov
mov
je
mov
mov
mov
loopne
mov
push
jg
or
outsb
add
sbb
pop
rolb
ret
jo
mov
xchg
push
dec
dec
sbb
rep
push
add
dec
xchg
stos
movsl
mov
jns
call
mov
adc
xchg
mov
loopne
sbb
fcoms
or
mov
push
call
in
dec
cld
and
cmp
jne
or
push
in
fs
insl
arpl
jp
rol
addl
jne
xchg
sub
inc
hlt
mov
dec
push
dec
xor
mov
cmp
or
cld
cmp
sarb
andb
dec
flds
ret
add
add
and
push
loop
cmp
or
inc
cmpb
lcall
push
sub
andl
push
mov
push
lea
test
pop
xor
mov
aaa
or
leave
push
pushl
jp
int3
mov
fstp
arpl
mov
mov
inc
jne
iret
mov
out
xchg
sahf
mov
jae
sbb
movsb
dec
xor
xchg
fmul
iret
call
pop
hlt
fwait
test
dec
in
mov
test
movsb
call
ljmp
jno
hlt
xorb
xor
inc
clc
add
sbbb
dec
je
mov
movsl
sbb
mov
adc
cmp
sub
outsl
enter
jle
push
lcall
xchg
inc
inc
cmp
sbb
push
stos
sbb
rol
or
sbb
xor
cmpl
xchg
fisttps
int
rorl
loope
std
pop
mov
cmpl
test
lret
adc
jne
adc
movb
or
idivl
add
mov
jmp
add
xor
mov
push
je
dec
imul
mov
lods
xchg
mov
rcrb
jmp
adc
or
je
push
xchg
lret
lock
inc
jmp
push
xor
nop
pop
xchg
pop
add
dec
mov
hlt
jne
and
movsl
mov
mov
lods
and
push
inc
xchg
pop
mov
xchg
mov
push
je
pop
mov
push
movsl
iret
js
dec
bound
cmp
inc
jmp
int
dec
jae
idivb
repz
inc
push
xor
sbbl
lock
mov
in
adc
orb
iret
cmpsl
sbb
mov
sti
cs
push
sbb
and
mov
cmp
xor
jnp
mov
or
test
mov
pop
bound
jnp
add
jb
jp
ds
inc
push
out
in
jbe
mov
test
popf
enter
sub
push
aas
inc
fidivl
stc
mov
sbb
sbb
dec
push
inc
sub
push
add
fiadds
call
mov
dec
insb
and
cmp
cmp
adc
adc
inc
int3
call
mov
add
arpl
test
jbe
lea
add
add
cmp
jb
jne
cmp
les
mov
int
cmp
xor
add
imul
lds
test
loopne,pt
mov
sbb
or
jg
icebp
add
idivb
push
pop
xor
pusha
dec
dec
pop
lea
jae
add
sbb
mov
shrb
jb
jnp
ss
sbb
mov
les
push
or
subl
mov
les
jne
shr
push
mov
cmp
dec
pop
loopne
clc
add
mov
pop
mov
inc
jg
int3
cmpl
sbb
mov
pop
icebp
xor
je
or
adc
add
inc
and
and
fildl
leave
decb
or
das
fdivrp
xor
xor
add
fucompp
or
repnz
mov
push
pop
add
cmp
clc
pop
cmp
pop
jae
xor
jl
xor
nop
mov
jecxz
mov
loopne
mov
adc
pop
or
xor
add
add
push
sbb
mov
push
xchg
addr16
adc
test
mov
and
outsb
mov
lcall
pop
adc
test
std
and
rcll
cmp
mov
inc
sub
jecxz
cld
mov
inc
xchg
stos
pop
sbb
lods
stc
sbb
dec
dec
mov
addb
int3
js
jbe
pop
mov
stc
inc
add
inc
cwtl
pop
mov
sub
add
clc
adc
push
nop
xlat
jle
inc
mov
cmp
cmc
loopne
fadd
jne
shll
stc
or
sahf
and
and
loop
aas
les
cmp
out
sub
mov
push
lcall
stc
adc
mov
call
xchg
mull
jmp
push
aas
roll
inc
mov
loope
movsl
dec
lcall
pop
pop
push
push
les
cwtl
xor
xchg
xor
hlt
cld
lock
ss
cmpb
je
push
pushf
xchg
dec
jns
sub
movb
push
mov
leave
mov
int3
mov
fcoms
mov
adc
orb
mov
cmc
ss
xor
divb
jne
inc
movb
inc
sub
and
push
jp
das
js
xor
pop
inc
decl
cmp
pop
jb
inc
stc
int3
insb
in
mov
inc
out
sahf
dec
jns
xor
dec
inc
xchg
xchg
and
sarb
popa
adc
into
adc
add
or
or
sbb
adc
sbb
out
std
pop
jne
and
mov
faddl
cmp
add
pop
call
pop
sub
jns
dec
xor
call
mov
jb
les
dec
fistps
rorb
dec
push
inc
jmp
loopne
mov
push
xchg
push
jne
or
dec
jb
adc
into
enter
sbb
mov
pop
inc
insl
bsr
dec
mov
or
pop
idivl
pop
pop
dec
pop
scas
movsl
push
out
aam
sub
mov
inc
pop
mov
test
jnp
push
imul
sbb
adc
jne
push
mov
pop
sub
cmp
fdivrs
stos
pop
cmp
xor
shlb
jnp
cmp
rcll
push
pop
pop
clc
inc
mov
jl
or
dec
mov
and
adc
and
pop
leave
cmp
jge
xchg
push
sti
adc
daa
dec
xor
add
pop
repz
jmp
cs
dec
jp
decb
jl
imul
cmp
push
ss
push
out
jl
das
sbb
iret
push
sbb
or
shr
ret
push
jl
push
inc
adc
ja
sub
push
pop
mov
add
pop
xorl
xor
add
jne
inc
push
popf
cli
cmpsl
pusha
dec
jo
sbb
jnp
sahf
pop
mov
sbb
mov
inc
push
push
push
sub
test
mov
out
jnp
cmpsl
pushf
cmp
push
sbb
adc
inc
rolb
insb
mov
xor
adc
das
mov
add
sbb
cltd
xorl
adc
dec
repnz
call
out
ljmp
or
add
notb
repnz
lret
clc
cmp
xchg
stos
les
push
xor
push
jl
mov
enter
test
mov
push
jb
mov
repnz
pop
sub
rclb
sbbb
jnp
scas
pushf
loopne
loop
push
pop
jbe
push
cwtl
dec
in
jne
les
xchg
movsl
pop
retw
loopne
or
ret
push
stos
je
push
je
sub
cld
aaa
lret
mov
cltd
outsl
mov
in
insb
out
jmp
pushf
insb
pop
icebp
into
cli
jbe
mov
mov
fdivs
mov
addr16
mov
ret
or
push
xchg
aaa
sbb
xor
imul
and
fcoml
adc
lds
out
mov
mov
loop
and
gs
fimull
ja
aam
push
imul
cld
push
cmpsb
add
mov
sub
mov
inc
pop
dec
dec
arpl
and
sub
push
popf
or
push
cld
sti
mov
or
jge
fbld
push
neg
divb
cs
xchg
sub
push
xchg
fidivl
in
sub
sbb
inc
stos
out
mov
jne
push
push
xrelease
mov
or
adc
push
add
leave
add
pop
jne
ds
push
inc
push
mov
inc
ljmp
mov
es
xlat
xchg
mov
aam
xlat
sbbb
aas
push
sbb
inc
inc
mov
movsl
inc
sub
push
fdivp
dec
and
and
shrl
and
sbb
lahf
xchg
mov
rclb
int
jnp
hlt
add
and
orps
stc
jmp
push
dec
out
dec
idivl
sbb
adc
xor
out
in
add
lods
enter
sub
fcomps
xchg
div
iret
adc
dec
movsl
pushf
jmp
aam
sysexit
movups
inc
cld
sub
dec
sbb
bound
cwtl
xchg
mov
leave
notb
dec
inc
push
mov
dec
sbb
enter
insb
lea
or
push
leave
add
jecxz
dec
sbb
pop
push
negb
movsb
pop
add
mov
pop
jmp
mov
mov
and
in
cwtl
fdivrl
fimull
es
pop
pushf
pop
dec
sub
mulb
xchg
icebp
cmp
and
rorb
xchg
movb
cltd
aam
mov
mov
aam
jecxz
cmp
xor
dec
or
je
gs
add
shl
add
in
xchg
fcoml
push
leave
fcompl
sbb
dec
xchg
mov
sbbl
pusha
ss
in
in
dec
in
test
fwait
in
push
sub
ljmp
jge
inc
mov
daa
push
cmp
aas
and
dec
mov
push
aas
xor
pusha
push
cmp
je
pop
lods
pop
xor
loop
add
sub
and
arpl
ficompl
les
pushf
test
xor
rol
jmp
in
cmp
xor
jge
mov
daa
cmp
push
push
jg
rcrb
xchg
inc
in
mov
sbb
mov
sub
push
lock
push
sbb
gs
es
scas
cwtl
push
cwtl
adc
shl
add
push
push
imul
in
test
shll
aam
adc
cs
les
sbb
std
push
jg
push
xchg
int
jb
in
pop
fs
rep
sub
sub
or
cmpsl
jb
adc
cmc
enter
mov
mov
push
add
sbb
shr
cmp
xchg
repnz
lahf
daa
pop
nop
fimull
sub
jae
repnz
daa
mov
dec
jmp
mov
insl
test
jge
jae
mov
outsb
fdivrl
and
pushw
sub
push
and
andl
nop
sbb
in
fs
lds
cli
add
lock
nop
mov
push
in
inc
jns
in
jns
sbb
dec
data16
orb
push
pop
mov
cld
sub
mov
push
testl
push
xor
cld
arpl
sub
sbb
or
sbbb
push
in
mov
lods
adc
xchg
cmp
sub
sub
sub
aaa
js
and
xchg
mov
nop
add
loop
mov
fmull
push
jo
inc
andl
add
and
sub
std
mov
int3
jo
pop
sub
rep
dec
xchg
stos
add
sbb
mov
push
mov
je
pop
cmp
aad
std
out
xchg
sbb
ret
cltd
arpl
popa
dec
test
pusha
pop
mov
sti
dec
push
push
cwtl
cmc
dec
cmp
movsb
push
inc
fdivrl
mov
enter
data16
movswl
sub
js
clc
pusha
int3
sub
je
push
data16
bound
pop
xor
mov
jle
cmp
jle
pop
jge
movl
shr
push
jge
dec
popf
xchg
mov
jmp
out
mov
subb
int
xlat
pusha
lea
add
and
and
mov
stos
insl
mov
dec
or
adc
test
push
ret
mov
mov
addr16
in
cmp
and
add
je
add
sbb
imul
fdiv
add
add
adc
jge
rcrb
ss
xchg
mov
decb
popa
sti
lods
mov
lds
and
and
mov
mov
mov
add
push
pop
dec
sbb
clc
jno
or
cmp
jns
cmp
orl
inc
xor
mov
pop
jl
mov
rolb
rorb
push
or
pop
stos
cmp
push
push
in
cwtl
in
in
mov
and
data16
mov
jmp
sbb
pushf
pop
iret
sbb
mov
push
ds
test
in
or
lret
mov
les
insb
add
mov
cmc
cmpsb
mov
inc
and
jno
mov
push
pop
mov
mov
sbb
push
in
xchg
pushw
int3
in
and
incb
inc
addr16
imul
inc
pop
subb
inc
add
xchg
jno
imul
sub
repz
enter
push
xchg
je
push
shrb
hlt
pusha
mov
jae
pushf
and
stos
xchg
mov
lock
jne
mov
icebp
cmp
fisubl
sar
inc
ss
mov
dec
sub
xchg
push
shrb
push
dec
inc
mov
mov
cmpsb
lcall
add
add
push
push
dec
push
fwait
movsb
imul
cld
lods
mov
sbb
dec
insl
lods
stos
mov
jbe
inc
cmpsb
or
sbb
nop
cmovne
mov
call
mov
cwtl
push
mov
sbb
cld
xor
into
mov
clc
sbb
sub
pushf
movsb
mov
mov
jo
jle
pop
sbb
sbb
inc
data16
dec
je
leave
lret
shll
xor
je
or
and
sub
rcrl
jecxz
lret
inc
pusha
bound
movl
or
adc
sbb
mov
or
jmp
mov
dec
dec
dec
lret
adc
int
or
xor
mov
and
mov
xchg
sbb
inc
xchg
fdiv
mov
sbb
mov
rolb
sub
je
std
call
out
cmpsb
gs
jp
sbb
fimuls
jbe
mov
mov
or
enter
stc
mov
and
mov
out
or
jmp
clc
hlt
jno
repz
jl
aad
jl
clc
shrb
mov
mov
cmp
sub
push
insl
jbe
cwtl
arpl
loopne
mov
mov
mov
popf
cld
or
lea
shl
mov
sbb
sarl
adc
cwtl
enter
addr16
and
cwtl
addr16
addr16
sbb
jl
addr16
je
pusha
xor
lds
inc
in
and
mov
xor
aas
negl
and
enter
fsubrl
xor
mov
jno
cmp
add
mov
or
hlt
mov
scas
fnstenv
in
in
cwtl
pop
je
xor
pop
sub
pushf
lea
jbe
lods
je
cmp
sbb
jno
cmp
mov
arpl
sub
adc
xchg
shlb
add
lock
nop
mov
packuswb
mov
lea
js
movsb
push
rcrb
cmp
sbb
cmp
fdivs
shrb
into
sti
xor
cwtl
mov
lret
mov
aam
mov
call
jns
mov
mov
fmull
sbb
pusha
int3
mov
jae
jl
nop
bound
int3
mov
lret
xchg
popf
fldcw
test
int3
sub
mov
jbe
push
mov
insb
jbe
jbe
or
shlb
jbe
fs
push
daa
push
jbe
mov
in
clc
and
mov
mov
adc
pop
in
insb
pop
rolb
stc
add
into
into
into
into
in
shl
mov
lret
into
aad
leave
add
mov
sbb
cmp
insb
cltd
sub
jbe
jbe
sub
je
sbb
adc
sbb
inc
movl
je
push
adc
push
cld
cld
sbb
rorb
jmp
jle
mov
mov
cmp
or
xor
hlt
add
clc
mov
sbb
mov
sbb
mov
inc
push
hlt
sbb
mov
clc
mov
sbb
in
xor
inc
mov
iret
jo
or
inc
cmp
stos
xchg
je
mov
js
xor
sub
lret
stc
stc
adc
cmp
inc
bound
ficoms
mov
push
inc
out
fcompl
sbb
mov
mov
and
sbb
mov
xchg
in
dec
aas
xchg
jo
aam
nopl
and
call
add
mov
mov
int3
mov
mov
inc
push
js
movsb
mov
mov
out
je
jl
adc
mov
xor
pusha
xchg
dec
sarl
cmp
mov
sub
and
test
aas
dec
adc
xlat
mov
pop
inc
popf
sbb
je
sbb
add
push
mov
jno
xor
ret
cmp
mov
mov
mov
repz
lret
cmp
pop
ja
enter
mov
aam
int3
jecxz
int3
jo
mull
out
insb
sbb
cmp
fnstenv
cmp
mov
mov
inc
mov
mov
mov
mov
jl
fwait
popf
daa
adc
fsubs
jbe
mov
lock
mov
aam
xor
push
mov
mov
cmp
mov
push
dec
xchg
lods
xchg
inc
test
pop
push
aad
push
xchg
pop
xchg
cmpsb
das
or
and
or
xor
xor
ret
je
pushl
les
decb
jnp
and
jne
cmp
clc
push
cld
add
test
sbb
jle
or
pusha
sbb
sbb
jle
sbb
sub
ja
push
and
adc
ja
push
sub
clc
nop
cmp
cld
cld
xor
fdivrl
out
cld
test
inc
les
out
cld
test
dec
test
cmpsb
cld
test
push
out
cld
cld
iret
nop
push
pop
into
lret
fistpl
je
pop
lret
jg
mov
jne
dec
or
mov
movsb
dec
cwtl
addr16
pop
and
mov
lcall
push
inc
in
pop
xchg
xor
xchg
xchg
xor
test
jecxz
push
sbb
inc
add
jmp
add
or
ficompl
rolb
out
inc
push
add
push
push
xor
mov
fsin
mov
mov
add
mov
inc
inc
cmp
jl
push
and
sarb
or
fdivr
inc
popa
sbb
pop
xorb
out
inc
out
icebp
pop
lea
mov
push
shl
mov
sti
cmp
mov
mov
cli
cli
sub
push
jno
xor
inc
lock
cmp
push
xchg
arpl
mov
add
je
add
dec
xlat
inc
mov
in
mov
pop
movsb
fsubr
adc
add
imulw
xor
hlt
hlt
test
das
testl
mov
subb
dec
mov
dec
pushf
mov
push
filds
fisubrs
sub
push
lea
out
lret
jl
xchg
scas
loopne
mov
or
dec
cmp
sbb
shlb
sbb
mov
xor
push
cltd
sbb
in
mov
test
push
add
xor
popf
mov
imul
clc
xor
push
movsb
mov
icebp
lahf
mov
inc
fcoms
mov
cltd
and
ja
cmc
push
fdivl
push
or
push
pop
js
xchg
adc
inc
push
mov
cmc
push
gs
xchg
scas
aad
inc
fidivs
or
data16
lds
adc
push
push
push
cmp
xor
inc
push
xor
jmp
int3
pop
inc
jl
je
pop
lock
push
xchg
insw
sbb
cmpsw
push
mov
and
test
je
lock
push
fisubl
sub
jno
fsubrl
rcrl
mov
fwait
pusha
push
fwait
inc
sbb
jae
jo
sahf
imul
sbb
or
xchg
js
cwtl
mov
daa
out
cmp
bound
cld
mov
mov
add
xchg
mov
pop
movsl
aad
cmp
rep
lods
ret
and
dec
enter
ror
call
pop
push
psrlw
sub
xchg
pushf
jae
fs
leave
call
lret
add
aas
stos
addr16
mov
dec
std
dec
and
pop
push
dec
push
aam
lds
outsb
in
mov
pop
sbb
faddp
insb
mov
mov
cmp
or
add
js
lock
cmp
je
add
adc
je
inc
mov
inc
std
jo
shll
pop
inc
cmp
jl
adc
out
inc
sub
shrb
and
push
dec
dec
les
testb
mov
outsl
pop
mov
push
test
orl
mov
xadd
or
add
xor
ss
mov
test
pop
jge
inc
push
xor
sbb
mov
add
adc
cmp
je
or
add
cmp
jl
xor
push
sub
nop
xchg
cmpb
dec
xorb
dec
xor
add
push
cmp
jge
mov
inc
add
inc
cmp
jl
stc
lahf
loopne
pop
je
lods
insb
es
mov
mov
push
inc
mov
das
test
mov
rep
lea
xor
add
fists
mov
loop
add
fstpl
mov
mov
inc
or
in
jl
or
add
xchg
jl
fs
dec
or
jg
rolb
sbb
or
imul
xchg
push
aaa
jb
hlt
out
pushf
sub
ret
repnz
gs
jp
ret
xor
add
pop
dec
dec
or
outsl
rorb
jmp
cltd
orb
cmpb
sub
jle
mov
add
cmp
or
jge
lea
int3
add
pop
mov
add
jne
dec
push
daa
call
jmp
add
xor
adc
das
dec
xchg
cmpsl
ljmp
mov
cmp
adc
imul
and
pop
jg
dec
rolb
or
inc
pop
ret
dec
lea
jb
je,pn
and
sub
mov
push
inc
sbb
add
cmp
jb
push
dec
cmpsb
dec
sub
nop
xor
je
push
movsb
xchg
cltd
mov
mov
ss
andb
test
mov
pop
adc
sub
and
xchg
sub
xor
sub
imul
mov
notb
rcrb
mov
push
loop
pushf
leave
push
or
xchg
pop
mov
in
add
fisubs
fistl
and
xor
repz
lret
sbb
inc
orl
arpl
sbb
xor
es
pcmpeqb
sub
clc
lock
test
int3
mov
call
cwtl
fs
lods
out
stc
test
mov
push
popa
fsub
call
fldenv
dec
sbb
push
xchg
add
inc
inc
lea
ud0
pop
fs
sub
push
je
dec
and
push
shrb
pushf
clc
xor
pusha
fsubl
cmp
fwait
arpl
out
cmp
cwtl
dec
movsb
jbe
push
dec
repz
push
sahf
xchg
pushf
ret
xchg
or
lods
xor
lea
dec
jb
jge
push
ds
gs
push
mov
xchg
mov
int
dec
out
push
pop
cwtl
adc
bound
int
outsb
pop
pop
aam
in
scas
lods
adc
xchg
shr
cmpsb
ret
adc
arpl
push
fcomps
or
outsb
sbb
push
mov
sub
mov
ret
aam
rclb
shlb
mov
les
mov
mov
in
hlt
pop
inc
lret
dec
lock
pop
push
aam
push
sahf
sub
mov
sub
fdivr
push
and
clc
pop
jne
xlat
push
add
pusha
jl
rorb
adc
mov
in
mov
mov
add
dec
call
xor
inc
pushf
jge
sub
jle
inc
shl
mov
jnp
sub
dec
xchg
mov
insl
int
movsl
jae
repnz
pop
je
cmp
and
fcom
xlat
incl
add
inc
jg
ljmp
aas
or
lock
pop
cs
mov
xchg
cmp
mov
adc
std
cmp
add
sbb
push
push
sbb
jbe
lret
xchg
rclb
data16
lret
aas
mov
jns
stos
ja
sbb
sbb
leave
add
pushl
shl
fildl
adc
rcrb
xchg
fsubp
rcl
xor
out
negb
mov
ss
jae
jo
sbb
pop
sbb
add
push
js
in
push
ret
push
pop
jno
movsb
or
das
sub
cmp
lret
sti
aam
movsl
cltd
fdivrs
pop
cmpsl
test
lock
lods
into
lock
repnz
cmpsb
mov
rcrb
push
bound
fs
movsb
cmpsb
or
mov
xchg
cmp
dec
testb
push
jne
out
xchg
ret
pop
not
cmp
out
cmp
je
pop
psrlq
adc
pushf
sub
mov
test
mov
xorb
popf
inc
or
pop
inc
mov
or
push
push
aad
aad
pop
inc
fimull
mov
adc
dec
lea
adc
mov
adc
and
ljmp
or
pushf
mov
fsubs
je
pop
push
outsb
jmp
dec
imul
mov
test
gs
inc
or
cs
push
sub
cwtl
jg
cmpsl
inc
and
jne
sbb
push
fsubr
jne
fs
sar
stos
cld
adc
mov
mov
adc
xor
call
xor
adc
jecxz
jmp
sbb
popf
test
mov
adcb
mov
push
pop
sbb
arpl
and
rorl
cmp
ret
inc
add
pop
js
add
ja
je
mov
sub
popa
add
cmp
and
je
and
mov
loopne
mov
icebp
push
xchg
cmp
fsubl
mov
xchg
jo
and
ret
sub
shll
jmp
push
in
jbe
xchg
outsl
push
push
push
je
lea
jnp
stc
adc
movzbl
inc
and
sbb
cmp
sahf
ss
pop
sbb
sub
and
popf
xor
repnz
je
inc
adc
or
push
cmp
cmp
popf
mov
inc
addr16
imul
dec
push
in
mov
ret
lahf
into
sahf
out
sahf
jecxz
mov
aad
and
fdivrl
add
add
or
bound
add
jg
or
jae
mov
arpl
xor
adc
test
inc
cld
fcoml
imul
divl
jecxz
adc
adc
xchg
add
pop
cld
jle
lea
dec
je
jno
xchg
das
adc
adc
mov
cmp
cld
mov
in
fsub
mov
lods
inc
mov
push
xor
xchg
adcb
loopne
pushl
pushl
cwtl
leave
js
test
pop
nop
sbb
je
das
les
inc
and
or
inc
jl
fs
adc
adc
cmp
xchg
es
xchg
shll
inc
lahf
flds
cmp
cmovs
push
push
fimull
inc
leave
sarb
cmp
push
roll
push
pop
mov
cmp
add
mov
fwait
aad
loopne
jmp
mov
mov
out
call
out
and
imul
imul
daa
mov
ret
inc
rcrl
fiaddl
sbb
cmpsb
add
cmp
sub
enter
add
add
mov
jne
orb
sbb
add
and
pushl
pop
add
pop
pop
adc
push
xchg
and
inc
loope
add
pop
mov
push
leave
pop
sub
and
gs
push
rcrb
lock
in
les
das
in
xor
test
les
inc
inc
jb
pop
shrl
insb
cmp
outsl
add
add
adc
mov
or
call
or
inc
aas
add
push
sub
imul
lock
push
test
dec
mov
mov
add
fld
enter
push
mov
push
push
sbb
cmp
and
in
aad
and
push
daa
fsts
cmp
sbbl
aaa
movsl
adc
les
std
adc
xor
and
insl
pop
or
fdivl
lea
rol
insb
jo
adc
mov
mov
pop
sarb
inc
adc
movsl
imul
insl
adc
xor
adc
cmpsl
lret
pop
call
leave
jns
fmulp
mov
sete
and
fnstenv
mov
xchg
scas
dec
xor
sub
je
mov
cmp
and
inc
mov
cmp
xchg
popa
xchg
pop
arpl
add
push
jge
cwtl
pop
xor
push
and
ret
in
jo
dec
cmp
dec
mov
mov
mov
inc
and
dec
jb
fsubs
sbb
stc
push
jns
inc
or
arpl
or
sub
push
push
fcompl
test
push
ss
adc
xchg
dec
aas
aam
mov
imul
push
pop
call
es
sub
insl
add
push
cmp
popf
add
xor
ljmp
xor
icebp
jbe
sub
dec
testb
pop
xchg
pushl
stos
mov
out
mov
clc
pop
or
movsb
add
subb
dec
and
repz
adc
call
mov
dec
push
sub
jno
adc
jp
lds
mov
cwtl
dec
pop
jle
and
sbb
aas
scas
into
pop
xor
cld
mov
stos
repz
adc
aas
scas
cmp
mov
cmp
push
xchg
pop
xchg
jp
aam
jle
push
inc
shr
jecxz
inc
lods
sbb
loopne
pop
pop
jmp
scas
repnz
xchg
cmp
xchg
movsb
fisubs
sbb
dec
mov
outsl
xor
sub
inc
adc
daa
rolb
cmpsb
leave
mov
es
xchg
mov
and
xorl
aaa
sbb
push
rclb
xchg
fwait
sub
push
pusha
xchg
rcrb
jnp
ds
jo
addl
sbb
ret
je
in
les
insb
ljmp
fcompl
adc
ret
jmp
sub
jl
xor
cmp
sbb
or
sahf
mov
into
xor
fcomps
fnstsw
pop
or
dec
sub
xor
ja
add
mov
addps
mov
push
cmp
ja
je
addl
jns
or
je
aam
xchg
xorl
push
movb
push
or
aad
jne
add
cmpsl
pop
inc
add
je
sub
in
sbb
aam
mov
adc
dec
mov
jle
push
xor
mov
jbe
xor
lods
je
mov
es
dec
adc
mov
cmpsb
jmp
addb
push
xchg
jno
adc
lret
cs
call
sbbb
aaa
sysenter
cmpsb
sbb
push
movsl
add
sub
push
add
mov
pop
cmpsb
jbe
fcoml
inc
rcll
adc
xlat
mov
mov
jb
adc
clc
cmc
and
mov
cmp
das
sub
fbstp
adc
mov
sbb
push
mov
shrl
inc
out
cmpb
lea
scas
cmp
xor
push
push
xchg
mov
xchg
and
adcl
sub
mov
inc
movsb
add
js
jge
mov
add
cwtl
push
aaa
fisubrs
xor
call
pusha
test
dec
fidivl
loopne
in
push
mov
in
and
xor
cmp
mov
jb
dec
mov
cmp
cmp
jo
add
ljmp
inc
dec
jne
ficompl
or
xchg
jne
pop
mov
and
lret
jne
mov
jne
sub
xor
mov
fiaddl
std
and
addb
dec
lea
mov
jb
cmp
enter
nop
inc
insl
repnz
cmp
rcrb
add
div
push
sub
mov
add
div
movsb
aad
rorb
add
add
mov
push
lret
and
jbe
out
cwtl
rol
mov
cld
cmp
add
fs
dec
sbb
or
jg
pushl
mov
cmpsb
mov
test
mov
inc
cmp
sbb
xor
mov
sub
push
and
je
or
mov
pop
adc
inc
imul
sahf
sub
pop
adc
movsb
rcll
arpl
call
lods
test
rep
jmp
imul
jns
je
rolb
popa
dec
mov
ret
add
cmp
int3
push
fisttps
divl
stos
fidivl
fs
and
inc
movsl
jle
js
ret
in
loopne
stc
daa
inc
in
sub
inc
call
das
cmc
xchg
jo
loope
int3
mov
bound
mov
into
loopne
add
mov
lods
lea
dec
sbb
xchg
adc
mov
mov
popf
rorl
pop
xor
mov
push
dec
hlt
mov
pop
hlt
jle
mov
xchg
daa
lock
cmp
mov
call
push
mov
call
ljmp
in
in
adc
xor
pop
push
and
and
adc
test
jb
and
and
cmp
mov
out
push
das
sbb
pop
adcl
imul
sbb
call
in
inc
or
inc
jle
rolb
mov
int
sub
mov
rclb
inc
dec
ljmp
shrl
loope
xchg
movsb
stc
inc
loop
and
mov
cld
jne
lahf
xor
lock
adc
inc
popf
test
sti
iret
insl
je
jae
mov
mov
cmp
or
and
fnstsw
cmpsb
dec
dec
aam
and
or
icebp
popa
and
jnp
push
cmc
jae
rcrb
jns
pop
adc
cmpb
cli
mov
or
mov
pop
sub
push
mov
cltd
inc
mov
pop
mov
hlt
mov
and
jmp
push
jnp
lahf
movsb
loop
ffree
adc
sbb
or
insb
lea
push
out
dec
and
mov
push
rcll
je
in
sbb
out
push
xor
jnp
pop
lock
pop
fdivl
sbb
fadds
in
cmpsb
mov
or
sub
jne
xor
aas
movsb
push
sub
cmp
fidivrl
lret
sub
sub
cmpsb
je
pop
nop
dec
sbb
adc
cmp
fwait
mov
xchg
movsb
insb
pusha
jmp
push
mov
pop
sbb
xchg
aam
add
push
bound
arpl
sub
push
push
add
ret
in
inc
hlt
mov
xor
cmp
roll
jmp
in
mov
in
mov
daa
adc
and
movl
mull
fdivrs
iret
lods
gs
jne
push
nop
jl
neg
mov
outsb
cmc
jae
into
fsubrl
fdivl
jno
xor
cld
cld
and
mov
mov
adc
xor
js
xchg
xor
cld
mov
jge
add
jmp
adc
pop
lea
mov
shrl
sbb
leave
aam
mov
pop
inc
dec
sub
pop
test
jns
xor
adc
pop
sbb
bound
adc
cmp
add
adc
lcall
rcl
xor
push
xchg
lcall
enter
mov
test
or
enter
and
pop
jmp
and
dec
je
outsb
das
jb
inc
js
add
inc
push
lahf
jmp
adc
gs
stos
sbb
mov
mov
add
xchg
nop
cmp
mov
pop
in
lods
repz
push
punpckldq
pop
pop
popf
lea
push
or
jbe,pt
push
dec
xchg
adc
xor
sbb
movsl
mov
or
push
pop
xor
cmp
add
das
dec
movzbl
push
mov
leave
repnz
icebp
cmpsb
ja
sbb
pop
imul
mov
jb
test
mov
push
add
mov
neg
lea
movzwl
add
inc
dec
inc
push
negb
add
test
pop
je
mov
nop
or
shll
jmp
rol
loope
or
push
pop
ja
hlt
cli
push
xor
bound
add
or
sbb
mov
jb
cwtl
inc
pusha
notb
lea
cmp
in
scas
sub
pop
inc
mov
mov
add
cmp
stos
mov
cmp
push
inc
mov
lods
jno
xchg
sub
jnp
xchg
fisubrs
mov
lahf
pop
adc
daa
jb
lds
movb
inc
jno
fdivr
aas
adc
mov
sbb
push
jne
icebp
cmp
popf
dec
cmp
neg
xlat
push
push
nop
out
add
push
push
mov
fimull
jle
or
test
addr16
sub
test
frstor
fisubrl
movsb
shlb
push
clc
push
add
add
out
aad
mov
hlt
or
das
es
mov
outsb
fwait
pop
es
mov
test
pop
lds
lret
inc
int3
movsl
mov
push
out
hlt
hlt
clc
adc
add
popa
or
jne
push
adc
sub
ret
add
pusha
test
std
add
push
mov
mov
lcall
loopne
or
pop
les
shrb
mov
push
sbb
push
dec
test
mov
rclb
loope
sbb
inc
dec
orl
add
popf
xchg
dec
xchg
orb
sub
mov
or
call
addr16
or
mov
cmpb
mov
out
xchg
inc
outsl
dec
fs
pop
fdivs
out
sub
mov
out
in
dec
mov
repnz
and
frndint
jmp
xchg
inc
mov
inc
lea
mov
push
test
inc
les
cmp
add
jge
jge
or
cmpl
int
arpl
cld
inc
cmp
mov
pop
adc
pusha
xchg
lcall
sub
adc
push
divb
dec
xor
adc
sub
pop
cli
insb
lret
push
dec
shl
stos
xchg
mov
in
or
addr16
ret
int3
pop
sbb
push
and
ds
addr16
ja
ror
int3
fisttpll
jns
add
push
testb
lods
mov
test
idiv
inc
push
dec
jb
xchg
cmp
push
sub
push
and
sbb
lods
sahf
sub
popa
fcom
jne
aaa
adc
aam
sbb
xor
loop
mov
xor
hlt
decl
jle
push
orl
cmp
sub
test
in
xchg
out
mov
imul
jne
sar
mov
sbb
push
jmp
movsl
repnz
clc
stos
clc
mov
cmp
push
or
scas
push
call
pushf
add
dec
clc
and
jae
outsb
call
sub
testb
aad
xor
add
mov
push
std
add
fcomps
test
add
movsl
insl
and
mov
cmp
aam
popf
dec
xchg
pushf
sbb
stos
mov
mov
lods
bound
call
jb
inc
mov
shlb
hlt
cld
adc
cmp
push
cmovl
xchg
push
ja
jge
adc
xchg
xor
daa
xchg
mov
mov
mov
js
mov
outsl
fcomps
add
je
dec
pushl
mov
xor
xor
lock
jge
fdivs
adc
mov
xchg
pop
xchg
jp
xlat
mov
aam
inc
ret
push
xchg
dec
xchg
test
mov
mov
push
in
add
mov
movsb
push
lock
sbb
ja
mov
and
pop
nop
sbb
lea
adc
lcall
test
add
or
cmp
cmp
pop
sbb
cli
push
shll
shll
mov
pusha
or
and
jno,pn
xor
clc
push
aaa
movsb
jnp
fcoms
xchg
push
pop
inc
xchg
inc
fdivl
fimuls
push
jne
sbb
pop
loope
dec
pop
cwtl
sbb
leave
adc
push
aam
xchg
mov
test
clc
cmc
enter
adc
pusha
out
mov
pop
test
xor
cmp
inc
sbb
push
pushf
cmp
jp
jp
stc
pop
jge
sub
in
test
pop
or
fcoms
std
push
xor
push
popa
inc
or
xor
xchg
push
sbb
stos
stos
push
mov
lods
lock
pop
and
mov
int3
rcll
inc
xor
add
jne
pusha
lahf
mov
cltd
push
sbb
sbb
mov
push
push
mov
adc
loope
std
call
popa
dec
aam
in
jecxz
push
dec
dec
cmp
xor
incl
icebp
into
in
fs
fidivrl
cwtl
push
xor
int
mov
xor
push
push
mov
mov
fcomps
fstpl
gs
push
mov
notl
mov
add
mov
mov
xchg
add
mov
xchg
mov
jecxz
adc
dec
movsb
popa
mov
shrl
jno
cmc
xchg
mov
push
xor
push
rcrl
mov
pop
aam
mov
push
test
add
xchg
mov
dec
ljmp
add
mov
cwtl
fcmovnb
push
xchg
inc
in
popf
rcrl
sti
insb
shrl
es
ss
imul
cmp
mov
push
sub
out
pop
push
lock
push
inc
sub
or
add
shrb
dec
and
and
fs
insl
xchg
sbb
jecxz
inc
xor
std
push
sahf
inc
inc
fsubrs
jne
popl
mov
dec
js
add
insb
lcall
test
add
jge
js
out
fninit
add
push
push
jno
pop
add
psadbw
mov
jns
add
push
daa
mov
movsl
inc
sub
mov
stc
pop
xchg
sub
push
roll
in
popf
jno
arpl
or
sahf
or
push
adc
inc
mov
mov
movsb
call
mov
add
jns
lds
pop
xchg
dec
xchg
inc
jg
sub
or
sub
push
sub
mov
cmp
lea
es
notb
xor
sbb
iret
dec
push
std
and
sarb
pop
mov
pop
fwait
add
jmp
cwtl
or
sahf
xchg
mov
push
xchg
add
adc
sub
xchg
pop
push
mov
inc
mov
and
mulb
popf
dec
mov
subb
inc
push
stos
xchg
and
sub
mov
out
decb
xor
push
stc
inc
and
sbb
loop
push
mov
call
subb
sub
inc
popf
xchg
add
cmp
loopne
leave
lods
push
cmpl
test
jle
mov
fs
sub
stc
lock
mov
neg
cmp
je
jne
mov
mov
push
hlt
and
popa
cmp
mov
mov
pop
mov
push
xor
enter
or
push
inc
loopne
push
testl
insb
cmp
add
in
mov
lds
inc
and
imul
xchg
pop
push
add
or
pop
dec
jns
sbb
mov
dec
inc
cld
cmpsb
ljmp
jp
imul
aaa
mov
gs
and
insb
jne
aad
js
iret
stos
add
push
push
adc
jg
or
dec
push
lds
mov
leave
or
mov
add
insb
push
jbe
sarb
sbb
dec
inc
repz
sub
test
sub
inc
inc
test
jne
dec
or
pop
lret
jmp
cmc
inc
adc
push
enter
xchg
add
pop
add
jp
or
add
dec
movsb
push
cmp
add
hlt
add
lcall
inc
je
in
movsb
in
jg
popf
pop
sub
sarb
sbb
push
ds
pop
xchg
cwtl
and
mov
mov
dec
dec
into
pushf
and
mov
repz
clc
nop
add
mov
mov
movl
add
je
pop
mov
cmpsl
iret
js
sbb
hlt
movsl
ds
aam
out
cmpsl
xchg
popf
rclb
inc
push
push
adc
inc
inc
adc
sbb
int3
jecxz
add
rclb
sbb
bnd
adc
jns
adc
lcall
sbb
adc
xchg
out
outsb
call
cmp
and
fmull
adc
sbb
pop
xor
pushl
push
sbb
inc
sub
mov
sub
jge
cmp
jno
push
mov
ss
add
rcrl
int3
push
sarl
add
xor
ret
sbb
ret
mov
std
mov
mov
out
rcll
mov
push
push
nop
cld
add
fs
adc
xchg
mov
loop
xor
cwtl
mov
cmp
xchg
sbb
push
lret
and
inc
lret
pop
mov
add
into
and
mov
pop
int
or
push
add
hlt
mov
mov
sbb
and
stos
or
lea
and
or
aaa
ret
add
sub
add
push
xchg
push
roll
xchg
add
je
pop
and
and
sub
mov
lods
jmp
jl
push
cmp
test
jmp
jns
lret
movsl
icebp
and
mov
and
nop
or
movl
lock
lret
lods
in
test
pop
sbb
idiv
mov
imul
mov
xor
push
lock
test
dec
push
cmp
and
push
les
pop
imul
test
outsl
mov
push
outsl
sarb
xor
mov
insb
push
push
pop
negb
icebp
adc
push
mov
mov
rcl
add
jns
cmp
les
lret
xchg
inc
dec
call
add
mov
cmpb
jne
cmp
call
mov
movb
mov
add
add
dec
sub
cmp
jge
cmp
je
clc
mov
push
mov
cld
cmpb
je
xor
xor
pop
cmc
and
sti
xor
aas
imulb
xchg
push
ljmp
lds
mov
nop
incl
push
sub
movsl
idivb
sbb
rolb
hlt
lds
xchg
lods
mov
mov
adc
or
daa
push
xor
rcll
movsl
and
dec
sbb
das
and
inc
in
jecxz
cmp
push
push
push
rcr
stos
jb
sbb
call
mov
stos
outsb
mov
xchg
sub
and
add
cmp
mov
testl
inc
lock
mov
inc
sub
xor
cmp
adc
xchg
mov
stos
mov
ja
je
stc
in
xchg
sub
push
mov
aam
add
jecxz
aad
loopne
fidivl
dec
sub
imul
push
jnp,pn
jp
cs
adc
in
xchg
cmc
lock
mov
ficoms
xchg
mov
fwait
xchg
mov
and
dec
cmp
fisubs
and
movb
jb
push
daa
adc
dec
inc
divl
or
fistl
cmp
xor
xchg
insl
sub
dec
mov
in
xor
bt
mov
sbb
xor
mov
adc
and
inc
add
add
out
cmp
shll
fs
shll
xchg
xor
pop
fadd
out
add
dec
cmp
push
pop
push
sbb
xor
cmp
ljmp
jl
or
shll
daa
jns
loope
fisubrs
into
inc
cmpsb
lret
or
in
push
into
mov
jbe
aam
test
pop
inc
and
push
cwtl
mov
repz
fs
imul
fwait
pop
pop
in
ret
scas
pop
xor
sbb
push
xchg
loopne
mov
adc
sub
daa
pusha
inc
nop
ret
jae
pop
and
test
dec
mov
cmp
add
mov
inc
ret
xchg
mov
mov
sub
add
mov
xchg
stc
mov
mov
imul
xor
clc
jo
xor
pop
cmp
je
je
int3
mov
push
shl
sbb
clc
clc
int
jmp
nop
jl
imul
lret
cli
or
or
loop
mov
cli
jo
aas
movsl
sbb
pushf
movsl
or
out
sbb
push
and
ja
dec
cmp
insb
dec
jp
xchg
pop
fcmovbe
movsl
mov
cmp
lret
lea
ss
jl
popf
mov
jno
mov
mov
std
les
and
cmp
mov
or
mov
mov
mov
jb
insb
notl
sahf
sbb
pop
sbb
xor
and
and
mov
mov
sbb
push
fisubrs
pop
stc
gs
cmpb
je
mov
mov
cmp
push
fists
cmp
mov
mov
dec
mov
jo
sub
scas
lahf
xor
neg
mov
lret
inc
jle
xchg
stos
and
xor
pop
lods
rcrl
fdivl
aaa
add
lret
ficompl
dec
sahf
jecxz
sub
sahf
push
mov
or
xchg
sar
cmp
jmp
mov
mov
push
stc
cmpsl
inc
lds
or
in
cvtps2pi
loopne
popf
lods
adc
cmp
push
sub
mov
enter
or
mov
push
inc
fcmovnbe
jo
mov
add
mov
clc
outsl
and
lds
jne
sub
dec
add
or
sti
push
inc
push
xchg
sbb
loope
lds
leave
sbb
popl
push
je
inc
mov
xor
gs
and
xchg
push
or
xchg
jo
add
adc
inc
jmp
js
insl
pop
dec
aas
stos
add
add
push
loope
xchg
std
push
ja
fsubl
test
inc
lahf
int3
jne
push
hlt
fildl
mov
jne
mov
pop
xchg
xor
in
and
push
push
push
push
ret
cmp
repnz
sbb
mov
xor
mov
popa
adc
sbb
outsb
hlt
sbb
xchg
dec
inc
push
xlat
ret
sub
and
cmp
jl
roll
lcall
es
testb
imul
sbbb
orb
inc
lock
inc
xor
test
psadbw
nop
mov
mov
test
aam
lds
es
push
enter
lea
add
xchg
and
or
dec
movlps
orb
test
add
pop
orb
sub
insl
adc
push
xchg
cld
jmp
out
adc
or
jecxz
cwtl
sbb
scas
adc
dec
hlt
lods
out
nop
insl
pop
xor
sbb
push
dec
addr16
dec
jnp
test
xchg
adcl
arpl
test
inc
mov
daa
insl
push
lret
add
push
mov
lcall
sub
push
jmp
sbb
adc
add
pop
lods
call
sbb
test
push
iret
iret
add
push
pusha
lret
shll
aaa
or
xchg
shlb
jle
pop
mov
push
add
mov
sub
xchg
dec
xchg
mov
push
mov
pop
aaa
pop
xor
push
xchg
xor
pop
sub
xor
aad
pop
cmp
rol
or
push
cltd
and
sbb
and
and
nop
inc
inc
rcll
adc
lret
rorb
jmp
lea
cmp
mov
into
adcb
or
and
test
dec
cmp
push
xlat
push
mov
push
orl
inc
cmpsb
lea
js
ss
cmpsb
push
inc
loope
gs
aas
cmp
dec
jg
cld
sarl
add
jecxz
push
jmp
and
sbb
jg
clc
lahf
dec
sbb
or
das
adc
adc
arpl
xchg
and
pop
ja
push
add
adc
icebp
push
inc
pop
in
arpl
in
jmp
aam
fld
shl
int3
cwtl
les
in
sbb
aam
xchg
pop
mov
mov
push
cmp
rol
mov
clc
mov
test
push
cmp
jno
call
inc
pop
fisttps
push
inc
pop
fisttps
in
adc
add
movsb
in
shr
xlat
xchg
xchg
push
inc
sbb
bound
push
aam
int3
jle
mov
pop
shl
scas
cmp
bound
bound
sbb
hlt
sub
jl
fnstcw
cmpsl
push
sbb
inc
mov
iret
push
push
pop
fsubs
push
push
inc
bound
inc
iret
mov
inc
bound
inc
bound
inc
xor
xchg
inc
sti
shlb
inc
sub
mov
sbb
or
js
clc
inc
sbb
xchg
or
inc
lods
or
popa
mov
ret
sbb
push
stos
inc
xchg
rorl
xor
inc
cmp
cltd
cmp
mov
into
cmpsb
push
mov
cmp
inc
les
inc
loope
mov
shlb
inc
jg
cld
shll
lahf
sbb
jbe
fyl2x
inc
cwtl
sub
nop
fiadds
leave
jg
clc
mov
mov
lahf
sbb
dec
inc
ds
jbe
inc
insb
mov
push
iret
pop
bound
aas
cmp
in
dec
pop
dec
shl
iret
mov
inc
mov
cld
je
adc
inc
dec
mov
fld1
mov
adc
xlat
mov
add
popf
mov
inc
add
push
repz
pusha
jno
push
xor
pusha
push
mov
push
push
and
pop
lds
pusha
cltd
mov
cmp
loope
add
cmp
pusha
mov
enter
jecxz
mov
sbb
mov
test
jg
cld
inc
sbb
clc
mov
js
insb
cmp
into
je,pt
movsb
es
pusha
pusha
cmp
call
mov
dec
std
xor
and
mov
ljmp
iret
aas
mov
xor
clc
repz
xor
sub
and
xor
cli
icebp
and
mov
xor
jl
repz
or
xor
clc
pop
pop
call
dec
call
dec
cltd
sbb
mov
in
clc
jo
ds
les
loopne
ds
arpl
xor
loope
pop
fcompl
xor
pop
movl
mov
xor
ret
jle,pt
lock
das
rcrb
cld
in
ret
mov
aas
mov
mov
jg,pn
cld
icebp
lods
inc
movsb
jecxz
lahf
pop
or
pop
jg
clc
sub
out
jecxz
lahf
mov
lahf
jge
mov
test
stc
stc
sub
pop
jg
js
sub
xchg
popa
lahf
insb
test
add
pop
pop
movsl
test
and
jle
dec
mov
push
and
xchg
mov
push
cld
sub
sbb
or
xor
add
mov
notb
push
mov
adcb
dec
push
lret
aas
pop
pop
xor
pop
dec
sbb
clc
cld
inc
pop
and
stos
lds
mov
fstl
and
call
sub
jno
test
mov
or
xor
lods
and
jge
cltd
insl
jl
xchg
adc
jne
push
jbe
sti
icebp
pusha
pop
inc
cmpsl
test
mov
lret
push
adc
and
and
popf
xchg
aas
popf
fcoml
dec
inc
mov
add
lods
mov
adc
insb
sub
mov
mov
sub
aad
hlt
inc
insb
sbb
fsubs
rcrb
pop
scas
pop
pop
fwait
mov
sahf
js
pop
jmp
dec
xchg
jl
push
mov
ret
or
in
mov
cmp
imul
int3
adc
out
test
cmc
insb
pop
sbb
mov
js
xor
in
inc
les
sbb
or
inc
gs
push
loope
push
aas
add
scas
sub
in
cmp
add
into
es
test
stc
mov
inc
and
ja
jo
or
jl
mov
xor
or
popa
xor
in
add
stos
pushf
popa
movsb
pop
loopne
cli
mov
xchg
mov
es
add
loope
mov
cs
and
aad
jmp
lahf
call
add
pusha
mov
xchg
mov
pop
pop
sub
and
cmp
cld
or
clc
push
dec
xor
sbb
jmp
push
xchg
test
into
cmp
adc
inc
hlt
jb
dec
mov
loop
mov
pop
jmp
mov
or
xor
cmpsb
sbb
pop
ds
enter
lock
jge
mov
push
sbb
cmp
jb
xchg
pop
aam
cmp
sbb
mov
fsubr
or
sbb
push
movsb
dec
sbb
pop
jnp
sub
sbb
xchg
jne
dec
push
repz
pop
pop
xchg
cmp
test
cmp
cmp
cld
pop
clc
jae
mov
xchg
push
jg
and
mov
cli
or
sbb
in
jge
fdivs
and
pop
sbb
jge
fadds
aam
clc
fadds
aas
sbb
sub
xchg
int3
pop
test
jle
mov
enter
iret
ds
sbb
ds
stc
mov
jo
nopl
into
sbb
icebp
mov
sbb
cld
mov
movl
cld
dec
mov
clc
jecxz
lahf
sbbb
inc
pop
pop
cld
je
sbb
lock
jbe
fistpl
popa
addr16
aas
sti
les
sbb
stc
icebp
out
add
jmp
lret
dec
aas
cld
clc
aam
imul
aas
inc
push
xor
adc
sub
popa
cld
sub
sub
fdivr
icebp
loope
and
adc
divb
cmp
outsl
sub
fnsetpm(287
lahf
and
lock
adc
jle,pt
pop
xor
or
pop
cld
in
sub
pop
psubb
mov
cld
pop
add
negb
lock
cld
clc
jecxz
repz
pop
pop
lods
or
xchg
jo
bound
xchg
and
rcrb
clc
fmuls
or
push
mov
lods
jl
repz
mov
pop
jg
xor
mov
test
inc
pop
aas
push
mov
or
adc
sti
and
sub
pop
insl
push
repnz
ljmp
cmpsl
sub
pop
xchg
lock
xor
push
cld
adcb
jae
stc
int3
ljmp
fiaddl
mov
clc
enter
mov
movw
add
push
jp
lret
fdivl
cmpsb
aad
sbb
pop
dec
sub
or
test
xchg
test
sub
inc
xor
inc
push
cmp
shlb
pop
mov
test
sbb
test
js
mov
xchg
mov
mov
push
ret
xor
dec
andb
push
push
inc
xchg
into
pop
mov
rcll
cltd
mov
dec
and
lods
repz
push
hlt
pop
lret
xchg
subb
int
fisubl
and
sbb
push
shlb
mov
cltd
xchg
scas
mov
jp
aam
in
pop
mov
jmp
pop
or
push
mov
mov
jne
lock
push
sbbb
mov
or
inc
push
fisttps
shlb
gs
pop
cmpsl
mov
inc
push
jno
mov
add
and
xchg
into
or
mov
push
mov
into
jmp
sub
xlat
xor
push
pop
mov
pusha
shlb
cmpb
mov
or
mov
andb
cmp
gs
push
hlt
add
mov
cmp
sub
mul
push
xor
cmp
xchg
mov
aad
aaa
sub
movsl
jo
into
popf
mov
test
enter
pop
adc
call
inc
shrl
push
sbb
mov
jmp
outsb
and
ret
popf
push
inc
mov
es
addb
pop
sub
in
jmp
cmp
mov
mov
cld
push
ret
jl
cmove
mov
push
jno
push
int3
negl
push
int
pop
in
test
xchg
dec
sub
cs
jmp
pop
jo
mov
or
sbb
push
call
push
inc
popf
or
mov
mov
mov
notl
adc
add
xor
sub
xchg
push
std
mov
aad
push
cmp
in
mov
sub
inc
hlt
mov
arpl
xlat
test
sub
sbb
sbb
sbb
jmp
mov
pushf
out
repnz
lcall
jmp
push
push
xchg
iret
call
les
mov
mov
fwait
push
insb
and
sbb
add
cmp
jle
std
cltd
stc
rcll
shll
and
in
int3
scas
test
pop
scas
test
or
or
jb
cmp
cmp
jbe
ret
aam
and
fdivrs
cmp
sahf
loope
orl
aaa
mov
sub
mov
inc
xor
fcoms
andl
inc
or
push
fucomip
sbb
imul
mov
push
push
pushf
jne
lahf
mov
dec
push
mov
jge
push
movsl
add
je
cmpb
je
adc
adc
std
insl
lret
inc
test
xchg
cltd
cmpsl
cmc
jp
push
insl
cmp
adc
mov
sbb
popa
or
pop
push
notb
and
dec
push
push
mulb
and
sub
pop
sub
pushf
mov
das
xlat
pusha
push
jae
imul
mov
push
pop
push
mov
jne
or
jle
movb
loopne
cmp
incb
mov
pusha
movsbl
cmp
jl
es
cld
into
int
push
jmp
out
int3
cld
sahf
lcall
int3
cli
inc
pop
push
test
loope
fldl
rcrb
sti
dec
sbb
adc
or
push
jmp
mov
ror
popf
cmp
xchg
mov
adc
push
xor
mov
xchg
adc
mov
cmp
rclb
sbb
pop
test
sti
push
sbb
arpl
bound
hlt
faddl
inc
and
mov
pop
mov
pop
cmp
sub
and
xchg
jne
push
mov
lcall
sub
inc
xor
leave
mov
xor
sti
push
push
int
into
rcr
scas
or
mov
pop
ja
push
jecxz
in
cld
rol
ss
mov
dec
pop
aaa
arpl
jecxz
cmpb
sub
or
dec
nop
inc
mov
jp
and
xor
rcrl
sti
nop
xor
adc
push
add
push
push
in
sbb
icebp
leave
sub
pop
push
shl
push
inc
pop
repz
lock
in
movsb
lcall
push
mov
fs
rcll
lods
push
int
inc
mov
push
testb
fwait
cmp
sbb
pop
push
and
xchg
sti
in
or
stos
sbb
pusha
cmp
inc
in
add
out
outsl
adc
sbb
rorl
and
mov
and
jb
movsl
call
shr
inc
ret
mov
cli
jle
mov
xchg
xor
mov
je
lret
ljmp
out
pop
mov
lock
inc
lock
js
ds
push
pop
mov
lods
jne
clc
les
pop
lds
dec
inc
rolb
cli
sbb
pinsrw
sbb
or
cltd
adc
pop
mov
pusha
imul
repz
mov
sbb
sahf
jae
movzbl
xor
test
arpl
dec
dec
insl
imul
pop
ror
push
fdivrl
xchg
stc
adc
adc
jne
fwait
xchg
ja
popf
dec
inc
addb
cmp
loopne
aam
sub
pushl
scas
sbb
scas
adc
gs
xchg
or
lahf
loop
insl
mov
cmc
sub
mov
mov
mov
push
cmpsl
or
mov
scas
or
fstps
xchg
out
and
sbb
aas
clc
cwtl
clc
sbb
lock
ljmp
cmp
aad
mov
cmp
test
adc
adc
inc
outsb
jl
fstpl
in
rcrl
and
push
or
push
push
lds
leavew
imul
sti
mov
imul
clc
sahf
xchg
jp
lcall
adc
enter
push
lret
pop
mov
add
mov
shll
ja
add
frstor
or
ss
jo
mov
xchg
scas
mov
push
movsl
testb
movl
loopne
jnp
mov
or
test
inc
xor
test
ja
push
sbb
jle
dec
inc
stos
or
mov
shl
stc
pop
into
push
imul
push
rcrl
dec
aad
out
sbb
mov
scas
cmpsb
hlt
rol
sbb
shll
imul
nop
xor
clc
xchg
lods
cld
jne
adc
xor
stc
jno
mov
mov
or
inc
lods
clc
or
in
push
mov
iret
cld
xor
inc
out
jbe
or
mov
adc
pushf
push
xchg
push
push
daa
pop
sub
or
or
mov
mov
cmp
push
xchg
std
and
xor
push
mov
mov
es
movl
push
lods
arpl
add
test
dec
sarl
pop
out
adc
inc
fwait
outsl
cwtl
mov
push
hlt
insb
jbe
adc
popa
inc
ret
xorl
push
cs
mulb
sti
bound
aas
aas
push
clc
adc
push
in
push
or
fldenv
pop
sub
lret
push
xlat
test
inc
xchg
gs
lret
shl
push
or
hlt
push
mov
ret
add
dec
sbb
push
xor
adc
xor
inc
inc
aam
hlt
popf
push
pop
xor
inc
sbb
pop
cmp
je
lock
outsl
inc
and
inc
mov
sub
daa
adc
js
daa
dec
jbe
test
rorb
or
jg
outsl
fiadds
pop
popa
das
xor
seta
sbb
mov
loop
andb
push
hlt
sbb
push
push
movsl
adc
xchg
popf
aad
sbb
cmp
mov
add
test
dec
sti
rcrb
lea
pop
stos
cli
mov
xchg
jo
cltd
sbb
push
lods
rcrl
xlat
and
xor
leave
mov
and
ds
sub
sbb
push
lods
enter
push
and
jl
and
xor
test
lcall
xchg
add
aas
xchg
push
imulb
call
imul
cmp
mov
addr16
mov
sbb
insb
test
and
loope
int3
aam
jmp
in
repnz
pop
xlat
sbb
xchg
int
adc
or
ljmp
mov
mov
loope
dec
push
add
stos
ret
add
mov
movsb
nop
or
fisubrs
jmp
aad
push
js
test
adc
ficoml
dec
mov
movsb
shrl
loop
xor
ljmp
jl
xor
mov
xor
pop
mov
repnz
pushf
ds
push
je
or
jbe
cmp
push
mov
and
adc
xor
pushf
dec
repnz
cmpsb
xchg
test
push
inc
loope
incl
mov
std
cmp
arpl
push
cmp
pop
cmc
bnd
or
repz
imul
xchg
inc
cmc
call
jl
mov
mov
push
push
fsubrl
jge
adc
jne
lock
dec
lock
mov
arpl
dec
mov
je
js
and
je
je
movsl
pop
xor
fsubs
ror
mov
mov
push
les
and
stos
push
test
bound
push
pop
pop
pop
dec
push
push
int3
add
subl
push
mov
je
mov
push
push
push
and
iret
sahf
mov
mov
dec
in
rorl
fcompl
cwtl
adc
adcl
dec
push
ret
jns
stc
lcall
dec
pop
sbb
dec
movsl
cmp
mov
dec
xchg
test
jg
or
add
lcall
stc
adc
jnp
inc
mov
vmovups
test
xchg
pushf
jb
jo
pop
dec
pop
or
jl
xor
adc
ret
jo
int3
imul
sqrtps
push
in
xchg
xchg
push
xor
push
bound
sbb
and
push
nop
pop
cmp
or
and
xchg
cli
xlat
dec
mov
and
push
data16
or
adc
call
mov
xor
cld
rcrb
push
xchg
cmpsb
das
add
and
mov
repz
pop
es
push
add
add
addb
popa
pop
bound
aaa
rcrl
sbb
test
pop
mov
sub
push
jne
jl
mov
inc
add
mov
inc
leave
loopne
je
push
add
in
in
adc
xor
pop
push
and
arpl
adc
hlt
xor
adc
mov
dec
out
inc
pop
aas
push
dec
out
daa
jle
or
xchg
aam
int3
sbb
stos
cmp
sub
inc
push
pop
mov
sub
mov
pop
shlb
mov
mov
movsbl
jl
scas
sbb
push
in
adc
inc
std
cmp
cmovg
scas
cltd
cwtl
add
outsl
mov
jecxz
or
pop
mov
mov
pop
repz
push
jnp
in
cld
in
int3
add
cmp
mov
pop
mov
push
mov
imul
sahf
rclb
addb
lea
cmp
jae
mov
mov
jge
xor
adc
and
insl
sub
add
add
lcall
xor
cmovle
mov
scas
paddb
fsts
std
xchg
movsl
aam
int3
mov
push
out
mov
xchg
xor
ficoml
insb
pop
decl
aad
je
inc
stc
sub
inc
loopne
in
cmp
mov
inc
dec
sbb
mov
sbb
test
push
dec
faddl
int
adc
mov
dec
mov
add
dec
push
lret
mov
and
dec
mov
xor
and
sbb
cmp
aad
clc
pop
mov
cmpsb
adc
jne
imul
imul
push
dec
shlb
mov
jns
inc
repnz
jo
push
lea
aam
imul
fs
and
sub
or
pop
cmp
out
jb
lea
or
out
shlb
je
and
lret
je
pop
lods
imul
mov
movsl
jae
fwait
sub
cmp
sbb
sti
cmpsb
or
jmp
rorb
fisttpll
sub
sbb
outsl
cmpsl
jle
iret
jne
push
data16
cmpb
stos
lahf
in
pop
jo
mov
idiv
cmp
out
sub
rorl
pop
adc
push
mov
dec
out
out
lret
lock
scas
rorb
sbb
cwtl
push
shrl
jnp
sub
ret
dec
stc
push
mov
or
adcl
mov
je
pop
enter
adc
inc
cmp
pushf
push
dec
jnp
mov
adc
xor
and
mov
mov
out
add
cs
bound
pop
adc
push
adc
stos
lret
dec
enter
cwtl
pop
or
lods
pop
push
pop
dec
mov
out
and
add
shll
mov
loopne
jne
in
dec
sbb
les
xchg
mov
adc
xor
push
das
jbe
dec
aam
fisubl
pop
lock
inc
dec
in
fldl
dec
push
xor
int3
push
inc
mov
jle
and
in
jle
inc
add
inc
test
aad
pop
or
fidivrs
adc
stc
sbb
adc
in
clc
faddl
or
rcrb
sti
or
repnz
sbb
in
inc
jno
push
add
jae
subl
sbb
mov
lods
stos
dec
lods
xor
xlat
ss
push
adc
aaa
inc
pop
popa
jg
push
mov
xor
lods
test
inc
test
sub
mov
add
mov
push
sar
pop
aaa
sub
mov
sub
mov
push
in
out
sti
push
xchg
hlt
jo
les
mov
inc
fwait
inc
cmp
ret
add
mov
pop
and
mov
dec
ds
xchg
dec
push
mov
and
sub
push
sbb
inc
cmpsl
mov
js
jo
xor
sub
push
je
sbb
lcall
adc
xor
or
cmp
inc
hlt
cld
aas
xchg
cmp
cld
push
popa
or
inc
push
sbb
sub
hlt
mov
push
adc
dec
add
push
lods
outsb
push
in
cltd
rorb
loop
inc
xchg
adc
pop
push
push
xor
push
data16
outsl
pop
push
cld
pop
cmp
call
and
outsb
jne
mov
inc
repnz
jmp
xchg
popl
in
adc
inc
and
cmpsb
fs
dec
mov
mov
xor
and
fadds
scas
or
jmp
push
inc
in
fcoml
imul
sbb
inc
xor
cmp
nop
cmc
mov
cmp
shrb
jae
js
decb
push
imul
push
sub
inc
ljmp
ljmp
push
sbb
cli
adc
jnp
subb
add
jae
in
sub
arpl
daa
cld
cwtl
xchg
or
clc
test
loopne
mov
pop
int
cmp
test
adc
xchg
mov
xchg
jp
dec
push
lock
rorb
popf
xor
inc
test
rorl
pop
imul
in
and
push
and
or
xor
jnp
xchg
mov
sbb
lcall
jo
inc
popa
mov
jecxz
movsb
mov
cltd
mov
or
or
jl
cmp
jge
add
enter
cmp
lea
je
sub
jmp
mov
push
jmp
jno
sbb
inc
jmp
pusha
cmp
imul
lods
das
sub
fcomp
and
stos
xchg
dec
mov
push
cmpsb
shlb
pop
rcll
repz
xchg
shlb
jge
jmp
cmp
push
pusha
sub
mov
pop
in
jbe
sbb
inc
mov
adc
pop
adc
mov
mov
pop
sbb
add
inc
dec
mov
subl
pop
and
inc
and
notb
dec
sub
xlat
daa
test
jne
jecxz
sub
mov
mov
int3
dec
adc
pop
fcoms
hlt
or
dec
in
and
cmp
push
repnz
iret
xor
sahf
push
push
adc
xchg
hlt
jmp
cwtl
test
fcompl
mov
add
dec
or
mov
fcmovb
mov
jg
sub
adc
mov
or
mov
dec
loope
pushf
fimuls
les
push
xchg
test
add
or
push
push
jecxz
push
fdivl
jne
rorb
ljmp
add
or
xor
fcmovbe
add
rolb
and
inc
fisttpl
mov
pop
nop
stos
add
jbe
scas
and
sti
ds
into
jb
adc
decl
retw
sub
insb
call
mov
add
sbbl
ljmp
jnp
jne
mov
cmp
mov
push
ss
clc
adc
fwait
push
xor
cmp
xor
in
sbb
insb
inc
out
test
ljmp
call
cld
test
test
pushf
and
mov
cmpsl
inc
pop
aam
mov
enter
adc
insl
jp
push
xor
inc
dec
shlb
push
rclb
lret
popa
mov
mov
test
mov
cmpsl
testl
jmp
or
sbb
adc
test
push
in
bound
stos
nop
cld
jge
pop
add
adc
out
xor
ds
jb
or
and
dec
stc
mov
and
cli
adcl
inc
shll
mov
fsubl
in
int3
into
les
pop
aam
fisttpll
inc
int3
in
mov
frstor
movsb
push
push
add
fbstp
mov
cltd
aam
cmp
adcb
mov
dec
cld
push
andb
lret
stos
add
and
imul
mov
pop
or
or
sub
je
adc
inc
pop
cmp
test
insl
jns
push
sbb
outsb
xchg
jg
push
cmpsb
test
add
or
pop
cmpsb
adcb
cmp
insl
adc
inc
xchg
stos
test
fmuls
test
outsb
cmp
cld
jne
or
in
in
or
or
cmpsl
dec
sbb
xor
inc
popf
jbe
xor
aam
aas
sbb
add
je
inc
cmp
xchg
jbe
mov
lret
scas
cmp
je
push
test
adc
sbb
fs
jl
lahf
jmp
push
in
inc
mov
in
push
je
push
mov
cmp
add
add
testb
push
sbb
lds
jb
pop
mov
sbb
mov
mov
lcall
jne
call
cwtl
movsb
jno
xor
lods
xchg
mov
incb
sub
push
push
daa
imul
xlat
xchg
xchg
and
adc
or
aam
jmp
mov
lock
inc
enter
mov
inc
mov
and
mov
xchg
mov
adc
loopne
or
cmp
add
xchg
ret
xchg
or
sub
xlat
mov
mov
clc
mov
cmp
mov
or
mov
je
jmp
push
push
test
ret
push
sbb
nop
decl
jae
jecxz
mov
lods
mov
orb
jmp
sbb
daa
or
cmp
mov
enter
xchg
addb
sahf
push
jb
sub
mov
hlt
push
add
mov
fmull
sub
cmc
lea
mov
jne
adc
scas
adc
xchg
je
push
leave
fisubs
shlb
into
ss
pop
fisttpl
aad
out
adc
jae
mov
mov
cmc
sub
push
test
loope
test
in
and
xchg
and
push
std
test
or
jmp
leave
mov
mov
imull
or
xor
sti
add
push
mov
out
cmp
arpl
cmp
repnz
out
and
xor
addr16
sub
push
dec
sub
js
ds
xchg
mov
mov
or
push
sub
cltd
jp
push
jp
mov
jne
pop
hlt
add
lds
je
test
push
loopne
call
push
or
push
push
shrl
lret
sub
jnp
xor
aam
xchg
les
movsb
add
stos
movsb
mov
pop
cli
pop
insl
jge
mov
scas
cmp
push
cmp
insb
mov
add
cmpsl
mov
inc
sbb
test
jne
adc
xchg
xchg
hlt
inc
adc
loopne
sbb
cmp
cmpsb
inc
push
loop
out
xchg
stos
cmp
jle
push
ljmp
insl
pop
ja
ljmp
add
imul
aam
lock
sub
mov
pop
adc
arpl
cltd
lret
pop
add
push
push
add
push
aaa
xor
je
inc
xor
inc
into
mov
mov
inc
ljmp
cwtl
imul
scas
xor
addr16
push
ds
or
cmpsl
mov
stos
sbb
fsubrl
adc
or
or
dec
enter
fsubs
into
ret
sub
pop
test
adc
mov
sub
mov
mov
adc
jp
or
pop
inc
sbb
ja
mov
sbb
xor
or
jb
sbb
xor
or
inc
dec
mov
sbb
adc
insb
xchg
dec
cltd
out
sbb
pop
inc
cmp
fiadds
pop
add
and
sub
pusha
cld
adc
pop
add
jle
add
adc
inc
cmp
jl
andb
mov
inc
xchg
xchg
xor
add
hlt
mov
pop
xchg
mov
fs
mov
and
pop
cmp
add
pushf
adc
inc
cmp
jl
push
pop
mov
fdivl
movsb
push
or
pop
xchg
out
outsl
mov
mov
loop
push
cld
and
lods
cs
xor
call
movsb
or
jl
add
fstpl
mov
mov
and
inc
jp
je
pusha
mov
mov
pop
insl
add
mov
loop
pop
or
mov
call
mov
andb
sbb
pop
lock
cld
insb
adc
mov
mov
hlt
insb
push
leave
or
push
in
sbb
or
inc
cmp
pop
es
pusha
sbbb
mov
xchg
xor
outsl
repnz
jg
jbe
push
push
imul
insl
dec
pop
jmp
fimuls
and
cmp
dec
int
ret
das
adc
pop
jbe
es
popa
outsl
pop
inc
mov
push
dec
test
ficompl
or
leave
je
lea
shll
rolb
or
call
sub
push
add
inc
cmp
jb
mov
mov
daa
xor
cmpl
or
jns
pop
ret
pop
mov
add
mov
pushf
jbe
adcl
loopne
dec
inc
or
jb
int3
or
call
xor
adc
sbb
jmp
mov
in
dec
jp
nop
adc
and
inc
xor
cs
and
xor
std
mov
cmpsb
jle
repnz
push
dec
mov
dec
dec
pusha
in
rcl
inc
adc
insl
jo
test
inc
dec
iret
repnz
jb
mov
cmpsb
push
setns
mov
nop
or
aam
xor
or
aam
sub
inc
xchg
or
adc
ret
jo
push
ljmp
inc
lea
jnp
dec
dec
pop
push
js
jl
jmp
and
and
adc
and
test
sbb
sti
jg
and
enter
add
aam
add
je
sbb
adc
adc
mov
enter
mov
pusha
inc
aad
xchg
out
mov
or
push
fnsave
jno
pusha
mov
xchg
xor
in
sbb
and
sub
insl
dec
mov
les
cli
jae
mov
lret
sub
jnp
and
gs
int3
push
cwtl
enter
adc
pop
cmpb
push
xchg
sub
loopne
and
inc
xchg
dec
test
pop
sub
imul
dec
out
shl
idivb
lods
sub
and
andl
aam
mov
inc
sarb
dec
push
xchg
and
jb
dec
pop
fs
and
outsb
xchg
mov
cmp
or
xor
hlt
push
leave
and
push
scas
or
lods
mov
push
pushl
in
je
cld
adc
add
dec
xlat
cmp
jne
lods
mov
aaa
xor
adcl
orl
push
je
cmp
mov
push
jmp
jns
push
cmc
pop
out
mov
adc
xor
in
cmp
adc
test
cld
mov
sbbb
pop
test
loop
test
push
pushf
push
adc
pop
jno
pop
xchg
aaa
cli
cmpsl
lcall
dec
mov
jae
shrb
add
push
pop
pop
leave
adc
cmpsb
push
xorl
jo
fwait
sub
dec
mov
enter
jne
test
scas
sbb
inc
aam
fldpi
pusha
inc
fcoms
outsb
lds
shlb
mov
in
sti
fsubrs
sbb
into
pushf
push
movl
add
or
loop
jge
fwait
and
test
in
jno
add
push
push
fiaddl
mov
je
mov
mov
add
dec
in
inc
lret
mov
push
cmpsb
and
add
add
pop
cmp
insl
jo
cmp
mov
pop
cmp
inc
mov
xor
mov
cmpw
pop
jne
inc
aam
fs
dec
push
dec
rep
leave
in
ja
cs
je
sbb
roll
mov
inc
cmp
jb
jbe
mov
jb
cmpl
xlat
dec
icebp
jo
outsl
pop
rcll
pop
and
movsb
jbe
adc
push
sbb
fisubs
xor
xchg
cmp
push
mov
xchg
adc
scas
test
push
aam
mov
jle
addr16
pop
loopne
stc
out
loopne
inc
xchg
mov
dec
xor
out
lock
pushf
xor
outsl
nop
outsl
not
in
repnz
mov
fisubl
push
ss
cmp
bound
add
jno
jno
mov
out
lcall
lds
insl
mov
loope
xor
insl
add
add
or
or
repz
push
repnz
int
pop
div
shll
and
inc
clc
add
mov
into
push
inc
cmp
mov
adc
shrl
mov
arpl
mov
pop
mov
inc
sub
mov
or
pop
movsb
and
xchg
pushl
loopne
stos
or
loop
in
sbb
nop
cmp
inc
add
jbe
orb
add
or
cmp
or
push
push
sbb
hlt
push
xlat
or
insl
mov
lret
fdivl
dec
push
das
loopne
jmp
pop
cmp
mov
xchg
leave
lret
sub
dec
xchg
adc
adc
test
mov
or
lock
mov
or
in
adc
pop
loopne
sub
ret
je
dec
push
rolb
xchg
jl
cwtl
das
mov
pop
xlat
or
sbb
add
jbe
aam
sub
pop
shr
pushf
mov
jl
and
add
aaa
add
add
stos
adc
adcb
sti
inc
prefetcht2
les
imul
mov
sub
shlb
ds
mov
push
movl
xchg
mov
jb
lds
push
or
pop
aaa
les
lea
rcr
mov
pop
or
ret
jmp
xor
imul
sbbb
cmpl
push
mov
je
enter
outsb
sbb
xchg
add
jbe
add
mov
jecxz
clc
or
je
cs
test
test
mov
lret
sub
pop
or
aam
mov
test
push
pop
xor
lods
mov
rorb
adc
xor
enter
fcmovb
inc
aam
push
mov
xchg
sbb
mov
push
jp
and
hlt
clc
xchg
or
jne
mov
mov
mov
mov
aam
fwait
enter
sub
inc
mov
sbb
bound
ja
dec
inc
leave
adc
je
lds
xorb
add
xor
lds
adc
movb
or
inc
mov
cmp
mov
sub
and
mov
stc
xor
push
mov
mov
sub
insl
je
daa
rep
push
clc
lret
mov
adc
scas
xor
mov
mov
or
add
sbb
jbe
lock
mov
adc
cmp
xchg
mov
push
mov
cmp
je
cmp
je
cmp
addr16
xchg
or
and
fwait
add
insb
cmp
jne
push
xchg
and
pop
cli
mov
js
cld
or
sbb
mov
pop
and
lods
gs
add
add
repz
dec
lock
iret
jae
and
pop
sbb
adc
ss
inc
dec
pop
cmp
aas
lds
add
daa
rcrl
push
sbbl
sbb
xlat
fcomps
xchg
lock
imul
lds
mov
cli
cmp
dec
pop
add
cmp
pop
jl
jge
scas
movsl
cmpsb
nop
fistpl
jg
add
sbb
pop
in
lea
mov
mov
in
sub
ret
pop
mov
sub
push
pop
sahf
and
je
lea
ret
push
inc
xchg
and
enter
addr16
pusha
xchg
push
lods
add
pop
cmp
les
pop
and
push
lcall
push
fs
sbb
push
pop
adc
out
test
sub
push
push
lea
adc
mov
ja
cmp
jmp
push
in
or
lret
dec
mov
push
inc
gs
pop
leave
mov
push
or
pop
pop
pop
test
and
dec
and
test
jne
inc
add
mov
add
add
add
pop
sub
orb
adc
bound
pop
je
cmp
jne
sub
rolb
mov
sbb
cmp
out
mov
xchg
out
push
push
xorl
jp
bound
pop
sub
and
add
sbb
add
fwait
adc
add
xor
adcb
jbe
lock
add
ret
inc
cmp
jb
cmp
mov
adc
adc
pop
mov
dec
sub
push
pop
mov
pop
push
gs
ds
pop
pop
cmp
fcoms
jbe
or
add
mov
xor
mov
adc
subb
repnz
mov
and
sub
adc
cmp
pop
mov
int
pop
push
mov
movsb
lock
aam
rorb
xor
and
push
adc
push
lods
mov
pusha
sub
pop
sub
mov
leave
int3
inc
dec
add
pop
add
sub
ficompl
sub
xchg
mov
std
jmp
push
fiadds
fdiv
les
inc
cmp
adc
cli
jno
mov
aas
cmp
fdivrs
push
pop
and
inc
and
mov
ljmp
fcmovne
or
popf
add
cmpsl
and
or
mov
pop
pop
lea
xchg
sarb
mov
inc
lret
test
clc
mov
cli
push
imul
ja
mov
mov
inc
inc
adc
psubb
lods
cmpb
in
fld
jecxz
xor
loopne
pop
mov
push
add
popa
or
or
mov
outsb
mov
movb
jno
subl
rolb
mov
test
xor
dec
push
jp
xchg
and
sbb
mov
mov
fidivrl
nop
mov
jl
cmp
cld
lods
xchg
cmc
pop
or
pop
xchg
out
dec
adc
ja
mov
movsb
aam
popa
add
js
mov
pushl
xor
adc
push
xchg
cmp
je
pop
ret
xor
sub
mov
add
cli
inc
dec
mov
je
pop
invd
inc
pop
dec
sahf
pop
sbb
sub
fcmovnu
test
je
jle
test
je
stc
mov
sbb
lods
vbroadcastf32x2
cmpsl
push
mov
jo
cmp
xor
push
mov
in
or
mov
icebp
push
out
clc
push
mov
in
dec
mov
dec
adc
add
test
sbb
jle
shrb
inc
or
dec
arpl
or
mov
mov
orb
jmp
cmp
adc
inc
out
lahf
jmp
gs
shrl
cld
in
xchg
lahf
in
sbb
lods
test
jnp
int3
test
mov
in
cmp
insl
xor
add
lea
scas
arpl
mov
addl
cld
and
push
sbb
nop
mov
icebp
cld
mov
dec
sbb
dec
cs
inc
iret
ror
test
test
rorb
fnstenv
js
cld
je
push
mov
clc
dec
cmp
testl
push
mov
out
dec
inc
mov
adc
pop
js
or
add
rorb
lret
push
addr16
push
and
pop
inc
sbb
sbb
orl
dec
sbb
bound
test
adc
sbb
jo
addb
cmp
repnz
inc
out
lods
xor
pushl
ja
and
and
jecxz
fcomip
inc
enter
lods
enter
orb
mov
dec
mov
jecxz
fidivl
cmp
repz
out
jmp
ljmp
outsl
cmp
sbb
mov
fabs
mov
push
sbb
sub
les
or
cltd
shlb
sbb
add
lahf
aaa
cmp
rclb
mov
imulb
lock
add
iret
pop
mov
push
lahf
push
jno
fsub
sbb
sub
shl
jmp
mov
mov
sbb
clc
orl
aad
rolb
out
mov
or
xchg
shrl
rcrb
add
and
sbb
mov
mov
add
out
push
mov
sub
testb
jae
div
pop
mov
xchg
fs
idivl
add
loopne
addr16
ja
ss
jne
movsl
xchg
test
out
stos
push
sbb
insb
mov
cmp
mov
sbb
push
rcrl
hlt
jb
jno
icebp
xor
jmp
xor
stos
and
stos
jo
loopne
mov
rolb
jmp
add
jg
sbb
pop
sbb
sub
sbb
xor
or
ret
mov
xor
call
sbb
push
add
bound
jb
cmp
ja
add
and
mov
add
lret
leave
pop
ja
jb
mov
mov
push
pop
inc
iret
add
sbb
xor
icebp
jns
sub
and
push
push
inc
out
or
jae
shlb
sbb
add
adc
nop
mov
movsl
dec
roll
and
cmpsb
push
xchg
or
scas
mov
cmpl
int
push
cmp
cmp
inc
pop
cwtl
into
incb
inc
mov
or
jo
xor
pop
or
push
je
or
add
into
lods
dec
inc
xor
mov
mov
bound
pop
cld
icebp
pop
add
test
lods
inc
hlt
insb
jne
cmp
lods
mov
adc
sbb
enter
or
push
dec
mov
dec
ds
inc
mov
in
adc
inc
sub
and
and
addr16
push
lea
les
arpl
pop
clc
icebp
jns
and
pushl
hlt
ja
xor
in
sti
lret
dec
fldcw
rolb
push
push
mov
in
pop
sub
jbe
xchg
mov
push
mov
pop
push
out
xor
push
sub
inc
cs
pop
xor
jae
clc
xchg
popf
loop
pushf
mov
call
imul
sub
fidivl
sbb
in
stos
int
and
push
dec
xlat
loop
fs
rorb
cld
dec
cwtl
push
ret
aam
call
hlt
push
out
xchg
xlat
add
inc
mov
adcb
bound
ja
xor
pushf
sti
or
int
lods
mov
lods
mov
pop
jo
inc
add
cmpsl
xor
inc
in
mov
adc
scas
add
or
push
xchg
cmp
js
repnz
sbb
or
aam
mov
and
enter
sbb
sub
cmc
add
std
xor
pop
pop
fists
cltd
push
mov
movsl
mov
stos
mov
xlat
out
aad
popf
inc
push
mov
arpl
sti
pop
jns
or
loop
pop
and
add
dec
pop
xchg
dec
mov
call
cmc
jle
adc
inc
dec
int3
cli
mov
jae
int3
and
std
sahf
cmp
sbbb
jmp
or
cmc
cs
addr16
out
sarb
push
mov
rorb
rcl
mov
subl
and
cmp
xchg
sub
inc
popf
mov
jo
sub
fcmovu
fst
mov
sub
lock
add
lcall
outsb
fld
loopne
xchg
jge
enter
in
dec
cltd
xor
add
gs
ljmp
add
call
call
mov
test
cmc
icebp
outsl
loope
pop
push
pop
in
jecxz
fstl
jmp
mov
inc
daa
and
mov
mov
inc
push
mul
dec
jnp
inc
pushf
in
adc
pop
loopne
push
clc
mov
cs
shll
flds
cmp
adc
mov
sub
daa
pop
jo
clc
aam
mov
xchg
mov
mov
lahf
pusha
faddp
inc
fldcw
mov
cmp
in
cld
add
sub
dec
push
rolb
test
push
jl
sbb
inc
fidivrl
mov
xorb
loop
je
sbb
stos
jp
and
sbb
push
mov
aas
sbb
movsw
pop
mov
push
repnz
or
add
adc
inc
fisttps
adc
xchg
stos
push
jno
addr16
mov
enter
fsubrl
and
pop
pushf
adc
loope
xor
push
xchg
or
xchg
xchg
clc
mov
cwtl
insb
nop
mov
inc
mov
mov
add
decl
orb
add
cmp
xchg
mov
fs
outsb
es
stos
enter
hlt
jmp
mov
sub
cwtl
adc
push
adc
test
mov
rcll
mov
ret
adc
int3
rolb
test
arpl
test
aam
mov
loopne
int3
dec
add
push
mov
or
push
fmuls
jge
cmp
xchg
es
aam
jle
adc
add
mov
icebp
inc
test
popf
xchg
or
add
push
fwait
add
xor
jg
lea
sub
mov
sub
pusha
aam
mov
and
into
sbb
enter
push
push
sub
mov
mov
fimuls
in
xchg
mov
movb
subb
cltd
addl
push
adc
cmp
push
rorb
std
in
addr16
jae
jno
cmc
stos
jecxz
stc
pop
movsl
insb
fstps
dec
mov
jl
fucomi
jns
mov
das
sbb
sub
and
popf
sbb
jecxz
add
mov
mov
stc
jne
inc
xor
in
and
enter
jae
lea
adc
orb
ror
mov
push
pop
and
imul
cmp
out
test
pushl
push
push
pusha
gs
jne
inc
pushf
daa
xchg
pop
enter
xorb
add
add
loope
pop
sbb
loop
xlat
movsb
adc
sahf
jne
ja
imul
add
xchg
call
stc
inc
movsl
call
jp
mov
mov
cmp
jl
jmp
push
mov
dec
repnz
lea
shlb
in
andl
adc
jecxz
sbb
rorb
ret
sbb
sub
arpl
pop
sub
xchg
int
mov
xchg
mov
repz
cmpl
sub
push
pop
mov
into
mov
lret
cmp
lret
mov
in
cmp
sub
mov
pop
sahf
cmp
lds
jno
lea
cmp
je
mov
sbb
push
iret
mov
dec
and
sub
repz
les
xor
push
or
aaa
dec
js
push
test
pop
mov
fsubs
test
mov
ret
inc
jmp
inc
dec
pop
sar
loopne
js
push
or
movl
or
jle
es
sarl
add
pop
push
mov
mov
sub
pop
mov
mov
cmp
jne
inc
add
cmc
push
xchg
jmp
shlb
cmp
je
inc
and
mov
pop
mov
fidivrs
inc
and
sub
call
call
jle
add
push
cmp
arpl
in
pushf
mov
add
inc
mov
je
xchg
push
or
mov
add
sub
popf
mov
mov
sbb
je
addl
pop
mov
and
iret
insl
test
orb
push
filds
push
or
mov
dec
loope
loop
out
sbb
jecxz
in
in
out
add
ljmp
dec
test
push
imul
leave
add
xchg
sbbl
push
jne
in
loopne
addr16
fs
nop
fsubrl
je
ret
rorl
add
mov
jnp
inc
pusha
outsl
jp
lea
fidivs
push
add
into
cwtl
leave
fs
arpl
inc
iret
pop
push
je
adc
sahf
push
aam
add
jmp
out
push
or
mov
add
and
mov
inc
or
in
pop
push
test
movsb
imul
inc
push
nop
or
inc
mov
aam
jnp
mov
fwait
sub
jae
cwtl
inc
adc
push
mov
stc
push
mov
pop
push
loope
xchg
leave
pop
dec
jns
jne
test
jmp
push
loopne
push
loope
push
add
aam
std
cmp
dec
mov
bswap
jbe
pushl
stc
lcall
ss
mov
into
out
fchs
je
mov
fsubr
or
in
outsb
call
gs
push
or
fsubl
or
pop
mov
sahf
push
pop
or
out
test
hlt
dec
fs
or
dec
pop
pusha
jno
adc
popa
test
jmp
inc
loop
and
popa
pop
ds
cmpsb
mov
inc
push
push
add
mov
sub
inc
sbb
bound
cmpsl
out
and
movsb
inc
lock
push
cld
sti
lds
mov
sub
xor
adc
push
mov
mov
adc
ljmp
dec
sub
xor
push
and
dec
cli
jg
imul
mov
add
push
daa
push
sbb
hlt
mov
cmp
lock
scas
push
add
loopne
insl
xchg
mov
and
mov
rolb
ds
xor
test
cmp
ficompl
mov
nop
add
or
sbb
sub
lea
inc
mov
shr
mov
loopne
cmp
mov
int3
add
aas
inc
addl
test
dec
mov
lods
mov
gs
or
in
sub
subb
cmp
jae
aaa
nop
inc
jmp
fistl
xor
push
jle
add
push
push
mov
add
sbb
sbb
sub
or
into
push
jae
push
insl
shrl
mov
xchg
in
jnp
leave
adc
outsb
out
movsb
js
jle
mov
pop
xor
aad
mov
test
insl
xor
add
sub
pop
scas
sub
lods
xchg
lret
out
fcomp
stos
push
sbb
rcll
leave
je
add
mov
test
je
xorb
or
sub
je
pop
popa
inc
xchg
lret
daa
sbb
cmp
inc
dec
testb
sub
ljmp
dec
outsb
mov
add
mov
jmp
cmpb
sahf
inc
fsubp
sbb
lock
loop
loope
or
dec
fs
push
insb
sub
or
mov
and
pop
cmpb
and
push
addl
ljmp
cmp
fwait
add
cmp
int
cmp
inc
mov
add
jge
cmp
je
mov
mov
mov
xor
sbb
fnstcw
fdivrs
mov
pop
jmp
fisubs
or
sbb
adc
add
clc
dec
shlb
mov
xchg
cwtl
out
dec
ficoml
dec
cmc
xor
dec
xchg
decl
mov
iret
mov
sbb
or
inc
mov
push
sub
mov
into
ret
add
or
push
jmp
mov
cmp
jne
mov
cmp
je
ss
or
cwtl
cwtl
sarl
pusha
add
mov
stos
imul
mov
xchg
or
lahf
je
lds
in
je
jmp
out
repnz
mov
cli
cmp
inc
jae
inc
shlb
or
pop
in
test
int3
push
push
ret
sub
mov
jl
or
movl
pop
inc
clc
pop
mov
add
jle
rolb
add
test
je
jae
fadds
pop
test
je
adc
dec
mov
mov
jno
push
mov
or
or
jmp
xor
mov
movb
add
or
jne
jmp
inc
mov
mov
inc
dec
je
adc
xor
je
add
mov
xrelease
pop
pop
xor
ret
xchg
shrl
adc
pop
rcrb
fwait
cmp
jle
test
je
test
adc
xor
mov
and
xor
mov
movsb
movsb
mov
xlat
xchg
jmp
push
and
mov
mov
jns
jg
popa
mov
cmpl
andb
mov
sub
mov
pop
dec
inc
mov
movsb
rolb
neg
dec
mov
inc
cmp
fcoms
scas
pop
jl
xor
or
jp
push
fistps
add
and
and
add
and
sub
jecxz
or
rorl
out
push
xchg
dec
aas
xchg
out
mov
insb
hlt
dec
stc
sub
stc
jns
out
sub
or
pop
or
loop
jbe
leave
push
add
mov
mov
sub
fcmovnu
or
jne
mov
xor
or
test
dec
adc
inc
xor
rorl
adc
jbe
jb
add
test
sbb
sub
push
or
inc
or
jno
mov
or
loopne
add
add
sbb
test
lea
mov
push
mov
cmp
and
sub
mov
mov
inc
scas
xor
mov
out
lds
int3
lea
jno
xchg
add
add
nop
inc
decl
cmp
out
sahf
out
and
adc
cmp
inc
incl
mov
call
call
iret
repz
hlt
hlt
clc
clc
cld
int3
inc
jnp
cld
lea
clc
mov
adc
jns
jl
mov
nop
into
aaa
mov
je
gs
add
je
jl
cld
inc
mov
std
shl
sahf
sbb
lock
jb
pop
mov
sbb
sub
pop
adc
nop
or
push
mov
es
out
add
pop
cmp
fistps
inc
pop
out
out
mov
mov
push
repnz
and
cltd
inc
xor
loop
movsb
lods
cmp
repz
mov
iret
fpatan
out
sbb
sahf
out
sbb
adc
out
sahf
out
adc
or
jns
or
adc
jg
add
or
sub
pop
iret
mov
ret
push
in
jnp
orb
jmp
sub
imul
stos
add
add
clc
adc
je
stos
pop
dec
adc
ret
stos
call
mov
pop
fcmove
inc
sbb
cmp
mov
jg
add
rcll
add
adc
inc
jbe
pop
dec
xchg
mov
lahf
inc
addr16
roll
sarb
sbb
inc
call
rol
cmpsb
lahf
jne
std
cld
mov
xchg
shll
inc
aad
adc
mov
cmp
dec
mov
and
push
loope
mov
xlat
cmp
dec
adc
das
test
insl
je
rep
push
iret
jno
push
dec
fwait
cli
rcl
inc
or
push
cmp
lea
inc
or
push
xchg
or
popaw
mov
mov
mov
insb
mov
add
inc
mov
add
mov
cmp
add
add
or
cmp
loopne
add
adc
inc
cmp
pop
int
push
adc
pop
add
loopne
arpl
sbb
shrl
jge
loopne
ret
ret
and
loope
inc
jmp
xchg
loopne
test
push
xchg
leave
mov
addb
leave
test
cmp
pop
out
test
adc
lods
ret
mov
dec
loopne
roll
push
out
sarl
mov
jle
movzbl
push
inc
pop
sub
scas
inc
mov
orl
pusha
ljmp
shlb
incb
mov
sub
aam
mov
inc
mov
push
jno
das
adc
mov
sub
fwait
lea
sbb
dec
and
iret
cmp
jne
neg
or
or
mov
imul
loopne
ret
js
in
push
lret
xchg
ss
and
sbb
outsl
and
nop
or
mov
fwait
sbb
or
or
jge
mov
cs
add
mov
shl
addb
dec
add
les
xor
sbb
pop
das
mov
sahf
jne,pn
inc
mov
dec
add
mov
loopne
pop
test
movsl
mov
jp
icebp
inc
sti
jb
popa
cmpsb
decb
mov
sbb
add
sbb
xchg
stos
stc
ljmp
lahf
outsl
push
push
dec
cmp
jb
loop
lahf
out
adc
jge
aad
out
inc
sub
mov
jae
cld
push
pusha
mov
js
mov
adc
sub
mov
mov
push
xchg
je
les
push
sbb
in
dec
sub
dec
push
test
and
inc
mov
and
xor
inc
cld
mov
adc
pusha
and
mov
cmpsb
outsb
xor
cltd
subb
sahf
into
sub
pop
xchg
jp
sbb
add
ja
xor
loop
jp
aam
aam
push
cmp
icebp
jmp
fwait
ss
or
mov
cmp
leave
je
pop
ret
sub
or
sub
pop
xor
inc
pop
push
sub
mov
inc
outsl
inc
push
jmp
push
mov
ret
sbb
mov
and
mov
test
ljmp
and
in
cmp
sbb
clc
cmpsb
int3
jge
jmp
mov
sub
cmpsl
and
data16
xchg
fs
in
js
and
enter
push
push
lea
cli
adc
push
pop
mov
mov
sub
mov
and
add
jecxz
inc
add
sbb
xor
ljmp
adc
js,pn
push
mov
pop
shl
in
or
dec
lret
add
fnstenv
inc
lret
enter
sbb
and
loopne
jne
test
test
sbb
subb
pop
mov
movsl
mov
and
adc
cmp
lea
lea
lea
cwtl
fdivs
xchg
cmp
and
sahf
inc
mov
inc
cmp
jo
xor
subb
push
shl
push
mov
jnp
mov
divl
lret
add
xchg
jmp
arpl
sbb
xor
and
jne
and
mov
and
xorb
mov
cld
cmp
xor
fsubr
out
cmp
je
negl
leave
jnp
test
jns
adc
xchg
das
sbb
fiaddl
cmp
lea
cld
pusha
call
cltd
mov
adc
jno
sbb
adc
lcall
test
mov
or
cmc
pop
mov
jne
lea
sub
add
or
les
inc
sbb
inc
add
mov
iret
mov
jmp
xor
jnp
lea
pop
add
data16
rol
push
test
mov
jg
call
subl
mov
add
add
mov
jmp
das
and
xchg
orb
push
sub
pop
add
popa
and
sub
icebp
jmp
into
pop
sub
ret
push
test
pop
lea
sub
jb
cwtl
pop
lds
adc
scas
in
adc
sub
aad
fs
mov
subb
testl
je
lds
adc
adc
and
repz
cmp
pop
vpsubb
and
pop
out
add
sbb
sub
add
or
sbb
cmp
jb
mov
or
jp
jb
push
xchg
push
shlb
mov
lds
add
jmp
fsubs
scas
mov
add
push
xor
inc
or
inc
push
lods
or
sbb
jbe
xorl
sbb
les
lds
mov
add
adc
in
jp
push
mov
lcall
inc
aam
dec
int
mov
mov
movsb
loopne
xchg
add
testl
dec
sbb
mov
jne
pop
sub
mov
loop
sbb
sub
xchg
leavew
cmp
push
pop
push
inc
xchg
jne
xchg
addr16
je
mov
pop
ds
push
add
mov
pop
mov
pop
cmp
jne
shlb
aam
adc
push
cs
mov
xor
bound
stos
push
lcall
or
adc
jnp
sbb
fisubl
mov
pushf
test
fdivs
or
mov
out
add
inc
test
pusha
rolb
je
mov
sbb
mov
push
imul
xchg
out
mov
je
jmp
adc
int
in
loopne
cmp
sub
out
xchg
ret
js
add
ds
push
xor
and
notb
or
jmp
or
and
and
xlat
rclb
in
push
push
xor
fildl
icebp
jns
and
push
add
outsl
jns
jmp
inc
pushf
pusha
mov
decb
or
sub
rclb
pop
xchg
out
jmp
ja
pop
sbb
adc
fbld
xor
dec
daa
int
and
push
or
movb
out
mov
push
adc
push
and
or
xor
jmp
sbbl
sbbl
cmp
push
push
jno
je
pop
cmpsb
sbb
and
fmuls
lds
gs
lea
mov
inc
inc
jo
movsl
inc
lea
jne
call
sub
jno
adc
sub
sti
jbe
fwait
xor
xchg
cmp
and
add
fdivrs
jb
sub
push
arpl
and
incl
xchg
sbb
cmp
out
stos
push
loope
enter
jp
sub
fisubrl
loop
mov
cmpw
cmp
or
cmp
push
mov
push
mov
xchg
inc
pop
fdivs
inc
inc
data16
push
dec
icebp
pop
inc
popa
dec
lds
or
push
dec
or
jne
push
sub
sbb
loope
push
test
loopne
jno
add
add
mov
push
pop
pop
xorl
push
jl
push
xchg
sbb
loop
ret
mov
jmp
pushf
mov
mov
cmp
pop
aad
cwtl
test
xchg
fdivl
inc
aad
xor
movsb
push
xchg
fidivrl
sub
lods
lods
adc
adc
inc
enter
ret
test
and
or
mov
xchg
pop
imul
gs
xchg
loop
and
or
cmp
and
cltd
sub
mov
add
fcmovnbe
ljmp
div
mov
insb
inc
lock
pop
add
out
shll
cmp
jb
cmp
add
lods
ja
cwtl
lods
mov
mov
adc
jmp
jae
int3
popf
adc
and
js
adc
adc
sub
jbe
push
xchg
push
or
negl
add
loope
push
push
push
xor
cwtl
inc
cmp
jb
and
out
test
xor
das
lret
sbb
lahf
gs
adc
sub
xchg
fcoms
jnp
shr
rcr
fcomi
pop
addr16
sbb
inc
stc
stc
adc
and
inc
cmc
push
mov
jg
fstpl
testb
push
rcrl
sarb
arpl
xchg
popa
jl
jg
cltd
adc
jne
push
rclb
addr16
imull
mov
insl
leave
adc
addb
xor
repnz
sub
and
push
add
mov
or
and
pop
ret
xchg
insb
dec
inc
mov
shl
add
push
test
or
push
inc
inc
dec
add
mov
pop
cmp
jne
mov
pusha
leave
dec
push
mov
cmp
pusha
sub
call
loope
mov
loopne
or
inc
sub
cmpsl
push
test
daa
popa
mov
cmp
int
adcl
xor
pushf
add
sbb
jno
incl
fsubrs
hlt
les
lret
ret
cmp
cmp
jne
adc
push
bound
and
insl
clc
mov
lret
test
pop
dec
cld
dec
or
inc
inc
jecxz
dec
int3
adc
js
pop
mov
xchg
int
or
fsts
inc
shll
jl
mov
shlb
dec
cmp
aad
cmp
fistps
and
inc
xor
popa
push
or
and
pushf
movsb
add
mov
sar
ljmp
lods
adc
mov
into
add
or
add
push
bound
test
push
push
cmpb
lret
jae
arpl
std
mov
sub
push
xor
in
inc
or
add
adc
inc
stos
inc
xor
rcl
dec
and
fwait
ja
idivb
push
je
push
pop
mov
fidivrl
xor
sub
mov
and
enter
adc
xor
xor
cmp
jns
sbb
push
xor
or
push
mov
int3
mov
out
jp
lock
sub
sbb
decl
mov
mov
mov
ret
je
add
cs
jl
test
push
or
andl
pop
aaa
roll
jne
jmp
sbb
pop
fstps
push
push
sbb
or
or
dec
fidivl
pop
pop
jb
test
into
sub
add
shrb
inc
mov
or
enter
ss
je
add
inc
cmpsl
ret
out
popf
adc
jge
pop
cmp
xor
xorl
in
mov
sarb
mov
push
mov
insl
add
or
cld
cmp
jb
mov
add
jl
out
add
xor
and
mov
sbb
sub
push
test
pop
jne
data16
hlt
or
lcall
insb
mov
jmp
push
sub
mov
jbe
cmpsb
push
add
lods
mov
jb
push
or
dec
xchg
insb
fwait
cmpsb
dec
pop
ret
mov
sub
cwtl
addb
add
dec
adc
jmp
scas
mov
pop
stos
je
sub
xchg
andl
sub
jp
cs
aad
xor
pop
mov
add
js
cmpsl
call
pop
je
pop
push
aaa
into
mov
jne
sub
inc
roll
jle
sub
sub
inc
aaa
ljmp
jne
dec
xor
mov
pop
push
pushf
ljmp
or
retw
int3
dec
pop
mov
aaa
cmp
mov
push
pop
adc
sbbl
stc
cmp
jbe
cmp
xor
imul
fiadds
inc
mov
jo
add
outsb
int
sub
add
test
fiadds
add
js
xor
jne
mov
insb
dec
ds
bound
sbb
ja
sub
xchg
out
daa
testb
xchg
les
js
flds
neg
sub
out
loop
leave
add
jb
jmp
lea
or
fiaddl
mov
arpl
fstpt
cld
sub
std
cwtl
movsb
out
pop
nop
mov
mov
cmp
mov
mov
lock
scas
ja
nop
fcmove
mov
test
popf
add
cmpsb
mov
cmp
sbb
dec
dec
dec
notl
mov
rorl
and
je
pop
fisubrl
or
add
cmp
or
add
pop
mov
adc
pop
xor
in
test
jo
mov
adc
adc
or
cmpsb
sbb
add
sbb
in
call
int
lahf
js
or
ret
or
mov
arpl
adc
push
and
add
loopne
frstor
arpl
xchg
rorb
dec
xchg
sti
test
adc
lret
shl
add
nop
jg
movl
addr16
pop
add
sbb
lcall
and
or
ret
fwait
shr
mov
shll
js
mov
mov
cmp
xor
mov
push
sbb
push
test
and
mov
mov
mov
mov
daa
and
or
js
mov
sti
adc
test
leave
fsubrs
loope
aam
imul
enter
test
and
xor
pop
orb
test
in
push
cli
push
push
or
add
repz
and
mov
pusha
ret
cmpb
sbb
test
lds
and
pushf
popa
or
jne
pop
and
gs
cmp
daa
pop
inc
cwtl
shrb
push
je
cltd
add
fs
shlb
sbb
pop
xchg
orl
das
xchg
xor
lret
add
inc
push
mov
sar
mov
mov
lea
mov
jmp
inc
add
push
fsts
adc
add
jecxz
orl
or
lods
xor
cmp
pop
lcall
cli
dec
jbe
dec
sub
stos
lea
pop
ret
sbb
pop
sbb
sbb
pushf
xchg
imul
sbb
pop
mov
mov
les
push
push
inc
sub
inc
sub
push
and
jg
or
andb
or
loop
ret
scas
and
pop
les
xchg
push
imul
push
cmpsl
inc
cmp
cmpsb
mov
lret
insb
fsubl
mov
aam
cmp
or
sub
add
je
pop
dec
dec
je
jae
push
fwait
cmpsb
push
jb
pop
repnz
or
fsts
add
addb
sti
sub
sbb
shll
rdtsc
shrl
lea
cmp
add
or
pop
jbe
sub
lea
jmp
jmp
and
idivb
add
clc
pop
jp
into
cmc
clc
pushf
jge
sti
dec
and
mov
out
inc
cmp
or
and
cld
mov
test
and
add
or
ss
add
data16
addb
les
test
out
aam
into
mov
divb
sbb
das
xorl
mov
je
mov
mov
clc
cmp
arpl
xchg
xorb
pop
in
call
dec
enter
mov
xchg
bnd
imul
push
or
add
adc
inc
test
fwait
or
mov
je
inc
or
aam
xor
cmp
adc
hlt
sbb
mov
int3
addl
out
orb
sub
movsb
mov
scas
cmp
pop
lock
out
inc
jmp
sarb
int
add
inc
inc
shll
mov
push
xchg
int
mov
insb
insb
xchg
lahf
and
repz
fisttpl
clc
mov
xor
hlt
dec
enter
adc
push
pop
je
or
mov
mov
add
xchg
daa
add
hlt
lds
lahf
mov
xor
jo
hlt
push
cmp
mov
sbb
adc
sub
jno
imul
loopne
mov
aad
xchg
mov
sub
movsl
push
xchg
add
lea
lods
mov
mov
insb
jmp
cmp
jle
mov
jle
insb
dec
inc
insb
add
test
sahf
sbb
fs
enter
or
rorl
mov
xor
les
push
or
and
les
jbe
jecxz
cwtl
nop
cwtl
and
sub
add
or
inc
adc
je
adc
call
dec
ret
pop
test
out
adc
pushf
mov
in
in
loop
int3
daa
mov
int3
enter
imul
xor
int3
pop
divb
sub
pop
cwtl
je
mov
add
xor
loope
cmpb
jmp
inc
xor
or
dec
in
push
mov
jns
data16
mov
add
mov
icebp
adc
xchg
and
dec
pop
loopne
je
mov
jmp
je
je
enter
mov
xor
and
mov
jmp
or
pop
or
loopne
rorb
sbb
les
jae
rclb
mov
fisubrl
sbbb
jmp
dec
mov
adc
xchg
add
add
fstl
cld
idivl
cmp
call
inc
in
mov
enter
js
rorb
adc
lock
mov
mov
or
sbb
push
mov
sti
mov
rcrb
hlt
hlt
mov
ret
es
sub
push
lods
add
pop
int3
mov
pop
sbb
jne
or
iret
movb
lea
ror
hlt
pusha
inc
mov
ret
es
xor
test
mov
xchg
sub
sub
or
je
and
in
cmp
adc
sub
lock
scas
ret
mov
jl
push
push
cmpsb
adc
mov
sbb
jns
in
loop
or
xchg
dec
ljmp
jle
add
hlt
lea
lock
jo
add
push
inc
cmpsb
stos
dec
mov
or
xor
cmpsl
xor
insl
add
dec
movsb
ljmp
pop
hlt
stos
fsubl
add
xchg
push
imul
rolb
push
xchg
shlb
cmpsl
lds
adc
cmpsl
in
mov
pop
mov
jns
sti
add
cmp
or
loope
dec
or
dec
add
push
mov
mov
inc
inc
add
sub
fstl
rcrb
mov
adc
insl
sbbl
add
jle
xor
push
and
dec
sbb
bound
push
cs
xor
icebp
rcll
or
ret
dec
fs
adc
inc
pop
push
push
inc
sbb
into
rcrl
aas
push
adc
js
addb
or
xor
xchg
cmp
data16
les
subb
cmp
gs
push
mov
or
popf
test
int3
xchg
mov
pop
add
bswap
out
push
rcrb
push
ss
sub
lret
movl
hlt
push
test
lret
push
leave
adc
push
out
and
lret
imul
adc
sbb
add
xchg
sub
cli
inc
repz
jmp
cmpsb
sbb
aam
add
xchg
aas
int3
adc
mov
cmp
jg
je
sub
inc
je
dec
sbb
or
jmp
andb
ss
add
add
sbb
add
pop
jmp
bnd
sbb
adc
push
insb
ja
or
add
dec
es
add
dec
sti
cmpb
imul
pop
popa
mov
and
fs
lock
test
adc
xchg
rorb
sub
pusha
pop
cmp
add
mov
and
or
outsb
sbb
add
je
arpl
cmp
jnp
mov
jmp
cld
xchg
call
mov
and
lahf
sbb
outsl
jg
add
add
arpl
shl
fs
add
mov
add
imul
push
xor
mov
aad
sub
inc
pop
sbb
mov
cmpsl
pop
mov
inc
push
cmp
add
jp
lods
xchg
test
pop
mov
daa
cmp
xchg
push
dec
pop
mov
rcrl
mov
sbb
inc
in
loopne
inc
fcoml
jle
rclb
jecxz
pop
and
loop
ret
xor
push
fnstsw
lret
inc
pop
jne
pop
rolb
push
fldt
adc
and
mov
lods
test
jmp
movb
stc
gs
fldt
es
mov
push
insb
into
push
in
je
movntps
jecxz
in
into
adc
jae
fildll
mov
mov
fistpl
testb
add
scas
insb
and
out
push
es
cmpsb
aam
hlt
add
sbb
ret
push
jp
shrl
jle
add
outsl
popf
cmpsb
mov
adc
add
call
xchg
pusha
add
sbb
sbb
inc
cmp
call
vshufpd
lret
jne
int3
test
mulb
and
or
aas
pop
cmp
test
lret
mov
imul
jmp
inc
repnz
xor
flds
inc
out
pushf
sub
push
and
pop
push
jmp
ja
fwait
loopne
outsl
pop
lahf
xor
jge
rclb
in
sub
sub
shrb
test
cmp
push
and
or
pushf
or
sbb
jnp
pop
jne
mov
inc
add
and
lret
mov
xchg
test
cmp
jo
test
std
inc
ss
cmp
ret
add
jae
mov
jmp
mov
cmp
ja
add
sub
inc
mov
mov
and
mov
cld
pop
imul
fiadds
ret
xor
jmp
enter
shrl
sub
add
add
lahf
sub
cmpsb
insb
xchg
and
sbb
push
push
add
fnstcw
enter
jmp
in
pop
call
add
dec
or
rorl
pusha
jne
xor
jnp
ljmp
enter
mov
pop
pop
leave
fsubrl
movsb
mov
jle
and
sbb
mov
loop
push
movl
mov
xor
add
loop
in
addr16
nop
dec
mov
andl
pop
mov
addr16
loop
cmpsl
jmp
stos
add
cmp
jns
icebp
jecxz
mov
stc
adc
jne
aaa
dec
or
and
fmuls
cmp
pop
fsubrl
xchg
pop
imul
xor
pop
jne
out
add
cmp
add
mov
pop
xor
adc
cwtl
rorb
sbb
adc
je
adc
and
jmp
dec
fcompl
fdiv
pop
mov
inc
inc
sub
aas
jo
cmp
call
insb
shl
jmp
lea
test
or
out
cmp
in
loope
ljmp
jl
shl
cmp
frstor
fldl
insb
filds
shlb
ror
add
adc
jne
fldt
dec
adc
cwtl
cltd
jle
and
dec
add
adc
mov
mov
pushaw
add
aas
adc
adc
inc
lods
stc
xlat
xor
fiaddl
sbb
icebp
xor
sbb
jmp
fisttpl
insb
jne
and
pop
xchg
lcall
mov
mov
test
mov
push
divb
mov
into
sbb
into
xchg
ret
cmp
dec
fwait
xchg
mov
adc
sub
cmpsb
mov
mov
push
call
push
jle
xchg
add
lds
mov
cmp
pop
add
dec
add
or
test
ret
push
cmovne
pop
aad
sbb
bts
cltd
jo
lret
xor
xor
addr16
clc
mov
inc
or
jp
ficompl
pushf
xchg
push
sbb
inc
jecxz
cmp
ja
ret
push
das
add
clc
inc
jb
xor
inc
push
adc
incb
mov
pop
std
push
xchg
insb
xor
std
pop
leave
loopne
lea
xor
push
xchg
fnstsw
fsubl
cmp
mov
or
mov
mov
mov
les
test
fdivrs
jno
push
sarb
insb
jg
xor
shlb
cmp
and
dec
ret
cmp
mov
xor
mov
mov
add
rep
stos
mov
adc
xchg
out
add
cmp
sbb
adc
mov
scas
inc
lcall
xchg
or
cmp
ja
mov
inc
jmp
push
add
push
orb
and
imul
mov
and
cli
cmp
ja
push
movsb
add
mov
bound
nop
inc
xor
inc
add
inc
inc
sbb
lods
push
pusha
sbb
add
rol
sahf
adc
add
push
mov
call
aaa
clc
sub
lock
movsl
pop
mov
movsl
jmp
jns
data16
mov
pop
jmp
inc
cmp
mov
pop
movsl
inc
xchg
lds
push
sbb
stos
subb
sbb
popa
gs
sub
jbe
icebp
xchg
repnz
or
fsubs
push
cmpsl
xchg
test
jl
rorl
xchg
sub
frstor
movsb
je
sub
movl
je
ret
mov
adc
sub
add
adc
pushf
xchg
popa
je
jae
stos
push
xor
outsb
push
add
jmp
mov
sbb
fstps
in
mov
movb
test
push
dec
inc
add
mov
pop
cwtl
mov
sbb
inc
mov
push
add
inc
mov
pop
push
rep
inc
inc
mov
or
adc
pop
test
inc
sbb
push
cmp
xchg
mov
push
push
es
cltd
icebp
push
unpckhps
pushf
and
mov
jb
pop
nop
cmp
sbb
loope
adc
enter
mov
cmp
sbb
pop
cmp
mov
sub
pop
jo
jecxz
mov
cmp
inc
mov
bound
jb
pop
dec
sbbb
add
mov
pop
popa
jb
out
xchg
xor
jp
push
mov
xor
aaa
and
mov
xor
call
pusha
pop
dec
sbb
and
int
hlt
cmp
mov
cwtl
or
rcll
jmp
adc
inc
or
mov
dec
testb
pop
je
inc
inc
sbb
int3
mov
xor
jbe
push
pusha
sub
jmp
andb
sub
out
pop
fidivl
and
insb
and
shrl
mov
lret
or
pop
pop
dec
sbb
andl
data16
orl
cmp
add
or
sbb
mov
pop
popa
insb
sbb
mov
jl
xchg
sbb
stos
xchg
roll
addl
repz
add
popf
test
aam
in
push
hlt
subb
inc
push
test
shlb
xchg
mov
mov
jl
cmp
jg
sub
stos
inc
sbb
or
adc
push
repnz
jp
addr16
imul
dec
fsts
sub
rclb
leave
in
add
adc
mov
push
or
xor
sbb
lock
cmp
sbb
insb
pop
jmp
push
push
sub
adcl
push
dec
inc
sub
sbb
xor
cld
or
adc
xorl
adc
loop
xor
push
sete
pop
test
ss
and
mov
mov
aam
adc
pushf
mov
pop
movsb
push
push
jno
mov
paddq
test
mov
cmp
mov
mov
mov
fdivs
pushl
sbb
lahf
mov
aam
in
and
mov
mov
cmp
cwtl
adc
lea
mov
mov
pop
and
cmp
imul
cmp
or
xor
push
adc
add
add
sub
shr
mov
imul
lea
lea
and
add
mov
out
adc
lea
mov
mov
and
inc
mov
mov
mov
sar
xchg
add
cmp
jbe
push
pop
mov
cmp
jge
shll
arpl
adc
lea
not
and
push
inc
push
sbb
jne
and
fadds
loopne
sub
out
pushf
mov
ret
push
pop
add
jb
rolb
push
sub
or
xchg
aam
imul
jmp
xchg
inc
push
adc
pop
outsl
pop
xchg
jl
sub
jne
xchg
sar
into
xor
xor
cmp
jbe
mov
loope
cwtl
test
cwtl
push
inc
or
cmp
je
pop
inc
mov
inc
cmp
aaa
rorb
mov
and
mov
xor
outsl
add
fistps
jmp
dec
add
dec
dec
inc
lds
or
cltd
das
xchg
pusha
or
jbe
adc
roll
mov
mov
mov
jno
jne
mov
inc
mov
mov
jecxz
movsb
mov
or
pop
femms
mov
pop
fisttps
sbb
jno
inc
or
jmp
into
pop
sbb
jns
aaa
in
jl
ljmp
or
std
add
mov
xchg
cmp
sbb
mull
xchg
ret
enter
nop
es
shl
add
addb
push
call
mov
lahf
mov
or
xlat
ret
inc
adc
lahf
push
decb
and
inc
mov
mov
cmpl
stc
stos
imul
or
test
mov
cmp
aad
test
enter
aas
dec
adc
push
lea
scas
push
inc
jae
mov
hlt
cs
or
xor
jbe
or
fwait
xor
ljmp
lret
aad
inc
or
lea
rol
xchg
cmp
loope
popa
mov
and
mov
stc
add
cmp
jge
xor
pop
inc
nop
jne
jmp
sub
or
shr
or
jne
loopne
ret
into
fdivrs
fisttps
jae
pop
pop
mov
mov
and
adc
or
ret
adc
cmp
sub
enter
jne
mov
cmp
adc
add
loope
dec
jb
jnp
jp
sti
dec
push
inc
mull
in
es
out
inc
xchg
loopne
mov
lret
sub
nop
mov
push
repnz
push
aaa
pusha
adc
dec
or
mov
mov
adc
mov
mov
adc
jo
or
int
xor
or
and
test
ja
inc
add
daa
and
or
je
mov
pop
hlt
shll
int3
imul
into
in
int
push
or
mov
pop
jl
shl
inc
jmp
mov
clc
push
adcb
es
fdivp
imul
cmp
jle
repz
add
rcll
dec
popa
cmp
push
xchg
iret
shlb
test
xorb
mov
dec
push
jo
pcmpeqw
dec
in
sbb
adc
or
dec
push
jp
mov
ficoms
sbb
cmp
movsl
xor
add
outsb
cmp
or
sub
or
popf
xchg
jl
les
call
subb
mov
out
mov
imul
jge
or
lock
pop
pusha
into
shr
or
je
or
jp
pop
cmp
lea
jbe
js
jnp
mov
adc
aad
or
clc
or
or
in
lock
and
cmp
dec
mov
lea
jne
cmp
jne
cmp
arpl
mov
lea
or
push
inc
mov
shll
push
dec
mov
cmc
setl
add
cmpl
enter
popa
and
inc
shl
xchg
iret
or
lret
xor
add
mov
stos
mov
adc
jmp
lahf
mov
clc
popa
int3
test
daa
pushf
and
add
and
inc
and
pop
push
xchg
enter
adc
loope
repnz
loopne
ret
imul
pop
mov
insb
sub
mov
mov
sti
shll
inc
out
adc
mov
call
push
xchg
add
cli
ja
lea
add
dec
orl
lea
jo
xor
out
pop
inc
mov
sub
adc
add
lock
repnz
js
rclb
xchg
add
add
inc
or
or
cmp
fs
inc
cmpsb
add
mov
mov
or
gs
test
mov
ss
mov
ljmp
push
pop
jle
or
xor
adc
push
lea
sub
dec
add
ljmp
cld
dec
cmp
mov
jb
cmp
or
test
orb
pop
jo
inc
jae
add
fnstenv
inc
mov
push
mov
test
pop
mov
mov
sbb
xor
pop
or
add
call
and
js
rcll
pop
lea
pop
dec
mov
adc
movsb
cld
es
sub
add
dec
fildl
hlt
push
pop
or
sar
dec
xor
inc
cli
push
pop
hlt
lea
in
pop
sub
pop
cld
cmpsl
cmp
into
jb
rorl
repnz
cmp
push
push
xor
call
jne
inc
lret
pop
and
dec
lret
iret
pop
jo
or
and
adc
sub
xchg
decl
jl
cld
inc
or
xor
push
inc
inc
cld
addb
lods
sbb
fimuls
lea
push
inc
rcrl
sub
in
in
dec
pop
xor
int3
push
jb
daa
je
in
fcmovb
rcrl
lret
inc
xor
sbb
push
and
jne
push
jmp
into
je
jne
push
mov
lods
dec
push
in
neg
leave
jno
sbb
jno
jno
nop
daa
pushf
add
addr16
jnp
ret
dec
or
bound
scas
test
fadds
daa
scas
jp
ud2
push
cld
mov
mov
pshufw
jns
push
out
lods
dec
sub
mov
add
cld
or
cmp
lcall
lods
mov
sub
push
pop
xorb
mov
sub
pop
aam
pop
inc
aad
xchg
sub
sub
mov
mov
or
scas
cmp
mov
mov
loop
dec
dec
inc
jae
xchg
mov
popa
sbb
cld
jmp
mov
mov
xor
mov
into
mov
test
fstl
dec
or
or
push
inc
in
mov
add
rolb
ret
rorl
mov
movsl
mov
push
inc
enter
xchg
incb
in
adc
movsb
ret
aam
fimuls
sbb
add
pop
movl
sbb
jmp
and
daa
jns
cld
in
and
cmp
jle
aaa
push
fsub
imulb
pop
xchg
cmp
add
mov
and
cmp
test
push
cmp
addl
lret
pop
xor
mov
call
adc
test
aas
aas
test
or
jne
js
bound
add
iret
push
sub
or
arpl
mov
negb
movb
xchg
or
xor
fiadds
jmp
out
or
and
into
inc
adc
mov
je
cmpl
add
xor
mov
or
cli
add
loopne
xchg
mov
pop
cmp
fcmovu
mov
push
mov
inc
mov
cmp
push
sbbl
add
inc
je
jmp
test
jne
xchg
sub
and
lea
bnd
data16
xchg
adc
loop
pop
lock
xchg
and
or
dec
mov
scas
push
hlt
pop
sub
pop
mov
stc
or
sbb
cli
sub
add
andb
inc
rorb
inc
jne
push
shlb
loope
mov
push
mov
int
lea
and
inc
aad
fs
movsb
dec
nop
xor
mov
cmp
and
test
ret
push
cmp
sbb
lret
jl
cmp
push
mov
inc
out
jecxz
mov
jne
mov
adc
aaa
jb
dec
inc
pop
push
inc
dec
mov
mov
jle
clc
mov
xor
sbb
les
stos
cld
pop
cs
out
andl
clc
jb
cmp
xchg
rcrl
or
xor
pop
or
sub
mov
add
push
or
imul
stos
inc
mov
test
mov
icebp
lea
out
daa
sbbb
out
cmp
or
lock
jge
movsb
mov
movsl
adc
out
fdivs
testb
fildll
imul
shlb
mov
insb
xchg
and
mov
mov
out
orb
push
push
cld
mov
adc
inc
mov
xor
shlb
and
adc
xorb
cmp
cmp
jae
lds
and
add
jmp
sbb
and
sub
or
sub
sub
cmc
push
xchg
pushf
mov
jmp
je
add
pop
push
sbb
pop
jbe
push
lcallw
mov
inc
cmp
sub
lea
dec
loope
std
and
xor
and
adc
cltd
sbb
mov
or
add
mov
jae
mov
fcoml
sub
or
lea
or
mov
mov
movsl
lock
or
call
repz
mov
test
jne
subb
pop
add
add
inc
jmp
push
adc
jae
cmp
xchg
push
jmp
cmp
jbe
add
xchg
add
jne
lock
mov
jle
cwtl
pop
cli
push
or
xor
pop
mov
inc
inc
pop
lcall
mov
or
ret
xor
pusha
jmp
jae
sub
arpl
popf
jb
fmull
or
jmp
rolb
jmp
sbb
jns
push
ret
push
loope
mov
lea
mov
dec
int3
stos
loopne
and
xor
adc
inc
clc
or
mov
orb
or
adc
enter
repnz
mov
push
or
pusha
jae
and
add
and
push
inc
adc
sbb
add
inc
mov
add
add
shlb
jbe
lock
aam
jae
mov
jb
xor
push
inc
cmpb
ret
sbb
inc
aam
into
and
add
fsubs
lock
xor
add
pop
loop
pop
subb
cmp
cmp
addl
lahf
shl
dec
stc
add
add
xor
testb
je
inc
icebp
inc
imul
gs
sub
push
push
xor
rclb
lds
pop
mov
sbb
cmp
loop
call
andb
push
sbb
sbbb
adc
and
add
test
sub
xor
mov
shlb
or
xchg
sub
push
pop
sub
cmp
mov
sahf
test
xor
or
dec
stos
popa
les
int
push
mov
scas
test
stc
inc
push
xorl
sub
mov
es
push
sbb
inc
add
je
and
test
inc
in
or
stos
dec
push
loope
movsl
adc
int3
shrl
sub
mov
jle
mov
add
dec
repnz
fwait
arpl
add
jne
loope
jp
test
mov
aad
mov
dec
test
mov
adc
jne
or
inc
cmp
add
or
mov
or
pushf
inc
dec
mov
mov
daa
mov
test
jb
or
cmp
xchg
insb
je
sbb
jne
push
add
mov
sar
cmp
cmpsl
pop
add
dec
add
and
cld
fcoms
mov
or
ret
cmpl
dec
and
adc
pusha
push
dec
push
stos
lds
int3
and
bound
or
enter
repz
cmp
mov
dec
add
lods
popa
je
cmp
cmp
or
and
push
std
inc
mov
sub
jmp
mov
xchg
pop
or
add
ret
shll
add
push
jg
ja
cld
pusha
sub
adc
les
je
push
cli
sub
in
loope
nop
test
or
jmp
xorl
jge
insb
xchg
fs
mov
ja
jae
or
or
jmp
mov
test
jne
or
roll
and
push
loop
and
mov
imul
std
cmp
adc
jno
mov
aam
pop
into
push
std
pop
pop
push
dec
shrb
push
cmpsl
cwtl
loop
cld
jecxz
les
inc
cmp
pop
and
or
jo
bound
adc
or
dec
cmpsb
outsl
mov
adc
xor
push
jle
mov
sti
mov
cmp
test
fstl
testb
andl
jge
add
jl
jmp
mov
jmp
mov
shl
fstps
mov
and
cmp
cmp
je
push
fists
in
cmp
dec
aam
or
mov
mov
mov
adc
or
xor
ffreep
add
jae
js
push
jbe
pop
ret
icebp
mov
or
sahf
mov
clc
imul
jmp
cmp
inc
sub
ds
mov
sub
cmpl
or
loop
or
mov
add
out
add
xor
jne
or
mov
mov
cltd
in
push
or
ret
xchg
and
fidivl
mov
add
mov
mov
out
mov
push
mov
orb
aas
or
add
pusha
add
sti
mov
inc
jecxz
dec
clc
sbb
in
add
movsl
adc
lretw
insb
dec
loope
cmp
inc
xor
mov
loopne
or
gs
jae
dec
daa
dec
ret
pop
inc
or
push
inc
and
rcrb
pop
or
jmp
movsb
js
pushf
popl
arpl
inc
mov
mov
xchg
fisttps
add
sub
mov
inc
mov
jmp
cmp
cmpb
mov
jecxz
or
push
xchg
les
push
sub
dec
jb
inc
adc
jae
fnstenv
inc
jb
add
sub
out
insb
xchg
in
shll
adc
nop
in
aad
xor
int3
test
rorl
push
fsubl
push
pop
lock
inc
xchg
sub
out
les
cmpsl
fmuls
cmp
mov
cmp
leave
lret
or
test
jge
jbe
dec
dec
cld
dec
sub
xchg
pop
gs
sub
into
sub
leave
and
pop
lock
inc
sbb
adc
pop
xchg
sub
cmp
clc
iret
test
jns
loop
pushf
push
mov
xchg
daa
inc
sub
fcoml
daa
test
cmp
mov
cmpsb
mov
mov
add
test
cmp
and
icebp
ds
les
mov
sti
inc
inc
mov
xchg
imul
xor
out
mov
pushf
mov
mov
test
or
sub
dec
icebp
mov
sbb
and
mov
cmp
lock
and
pop
add
enter
ror
fldl
jbe
jo
in
inc
jo
fstp
jne
mov
push
clc
fmull
pop
call
call
loopne
jbe
pop
lds
mov
pushf
mov
fisubl
cmpb
adc
jle
je
add
rol
sub
sysexit
outsb
inc
dec
subl
jbe
sbb
test
lret
push
or
stos
mov
inc
mov
aam
push
mov
roll
call
outsb
xor
push
inc
lret
outsb
add
mov
inc
hlt
lret
jecxz
sub
gs
test
adc
cwtl
dec
xor
adc
dec
pop
pop
inc
adc
adc
sbb
fldl
pop
and
inc
test
add
scas
sahf
je
lea
popf
cwtl
jmp
cwtl
push
sahf
cs
jg
push
push
lcall
mov
lea
call
stos
int3
inc
mov
lcall
and
mov
roll
xchg
xor
or
or
shll
sbb
in
pop
push
test
push
dec
mov
bound
and
rol
or
add
add
in
mov
add
fst
inc
mov
scas
sub
or
xor
xor
and
cmp
loope
imull
cmp
enter
inc
test
ficoms
int
rolb
inc
cmp
pop
add
jns
neg
or
sub
xchg
push
fs
pop
idiv
add
xorb
imul
lret
add
jge
adc
or
dec
mov
movsb
push
test
imul
pop
int
add
cld
xor
adc
xchg
cltd
adc
push
pop
data16
add
ret
inc
pop
xor
lds
and
lea
arpl
push
and
sbb
add
push
aad
fwait
inc
mov
mov
inc
pop
test
jge
sbb
sub
neg
jmp
cmp
dec
and
jl
jb
shlb
push
adc
mov
adc
pop
mov
dec
mov
cmp
shlb
push
push
movsb
jnp
mov
cwtl
xor
int3
inc
jmp
pop
rorb
rorl
mov
xchg
popa
or
sbb
inc
mov
add
and
push
sub
xor
adc
sbb
lods
pop
enter
adc
add
lds
and
popf
sub
jae
dec
pop
jl
xchg
or
pop
insb
jmp
lds
push
sub
inc
and
add
imul
jne
in
dec
or
jae
adc
test
mov
test
jp
and
movsb
sub
inc
push
push
add
fimuls
pop
pop
xor
inc
mov
jo
or
loopne
inc
cmp
push
test
stc
adc
and
sbb
and
cs
mov
inc
xchg
idivl
push
jb
lret
sub
or
ret
cmc
subb
fs
mov
push
js
aaa
push
push
push
mov
adcl
sub
dec
push
in
mov
push
jae
add
or
daa
adc
adc
pop
mov
mov
sbb
shll
xchg
mov
add
dec
rorl
cwtl
fnsave
dec
and
sub
jnp
and
adcl
inc
xor
cmp
lcall
xor
add
sbb
sub
pop
inc
xor
sub
inc
clc
inc
adc
mov
cs
fdivl
sbb
sbb
fstpt
dec
dec
mov
xor
ret
adc
add
inc
sbb
sbb
mov
jg
push
repnz
sbb
sub
mov
adc
enter
inc
sar
leave
je
cmp
pop
ss
sbb
fsub
outsl
lods
mov
xor
xchg
pushf
pusha
mov
in
sbb
push
fs
dec
rorb
add
int3
push
rcr
daa
adc
dec
mov
sub
test
push
lea
xchg
popf
adcb
dec
cmc
push
fs
repz
jne
sub
mov
mov
dec
cmp
lret
inc
dec
or
mov
lock
cmp
jne
cmpl
add
xchg
mov
lods
pop
lds
add
push
pop
or
sub
sbb
mov
add
sub
ds
orl
mov
pop
pop
sub
orb
add
sub
push
add
inc
mov
andb
andl
negl
nop
int
inc
sbbl
or
pop
push
cmpsb
inc
bound
adc
cmpsb
pop
inc
or
data16
cmp
add
dec
mov
add
je
imul
testb
insb
inc
loopne
fildl
repnz
xchg
fsubrs
pop
pop
xor
cmp
cmp
and
cmp
cmp
fs
and
rdtsc
out
pop
xchg
xchg
dec
xchg
dec
inc
and
or
dec
and
or
and
daa
std
fimull
lret
push
mov
fisttpl
inc
pop
jns
lods
adc
aaa
push
jb
xor
test
pop
mov
inc
inc
nop
cmpsl
ret
push
inc
iret
xor
pop
add
sub
test
clc
add
fidivl
jecxz
mov
fiaddl
mov
cmp
jae
cmpb
das
shrb
inc
jmp
xchg
jne
sbb
negl
lea
sbb
in
and
ljmp
daa
inc
sub
ret
cmpl
push
push
imul
jl
out
jae
es
mov
and
xor
add
ja,pt
test
inc
or
add
int
ret
sbb
cltd
jnp
cmp
rcll
lock
dec
inc
insb
inc
cmpsb
and
sub
insb
sub
add
lock
pop
dec
rorb
sbb
popf
testb
mov
add
pop
test
sbb
mov
add
push
cmp
jge
lea
sub
mov
mov
jno
or
jne
mov
xor
out
jo
popf
daa
sub
cmp
jns
dec
cmp
jns
aaa
cmp
pop
inc
pop
popf
xchg
cmp
lcall
bound
shr
and
jmp
push
pop
lea
push
mov
pop
sub
push
fs
xchg
jo
pop
sbb
dec
and
das
lds
adc
inc
push
je
dec
sarl
add
lea
pop
lea
popf
popa
and
inc
sub
cmpsl
and
push
jecxz
sub
jne
mov
aad
cwtl
add
sbb
inc
mov
ds
or
inc
jl
adc
and
je
adc
pop
add
lods
in
fdivs
adc
cli
int3
sbb
out
cmp
je
cmp
je
inc
xchg
lret
ret
js
jmp
mov
inc
and
flds
mov
pushfw
push
or
sub
push
push
ret
rorb
and
pop
mov
push
dec
in
mov
and
and
push
out
add
jne
pop
jmp
inc
push
sbb
xchg
mov
pop
or
push
mov
dec
mov
add
mov
mov
ss
push
mov
sbb
sub
mov
fstl
or
xchg
jp
das
movsb
add
push
push
xorw
mov
mov
pop
enter
adc
and
pop
xor
adc
mov
cmp
aaa
cmpsb
dec
xchg
jp
add
inc
mov
inc
cmp
xor
mov
add
add
mov
mov
inc
inc
aad
into
and
xchg
xor
jmp
mov
jmp
cmpl
sbb
or
inc
xchg
in
or
andb
ljmpw
cmpxchg
mul
xchg
je
pop
add
enter
jmp
lea
lods
pop
test
mov
mov
dec
lcall
jl
jns
js
and
sahf
ret
in
inc
fmull
ror
add
sbb
xchg
push
and
jmp
rorl
inc
enter
movb
inc
or
nop
and
jns
orb
mov
icebp
dec
cltd
aas
je
inc
mov
sbb
adc
cmp
add
lock
shll
xor
add
or
add
les
mov
cltd
mov
dec
ret
orb
enter
xchg
add
fcmovbe
imul
or
aam
rclb
mov
ljmp
xchg
and
int3
xor
dec
popa
or
pop
jecxz
cmp
or
sbb
dec
adc
sub
xor
or
fwait
and
cmp
nop
stos
cmp
je
gs
pushf
xchg
push
jo
and
outsl
mov
lods
adc
out
sbb
test
rcll
xor
sub
in
loopne
pop
je
mov
bound
inc
popf
inc
imulb
movl
movsl
decl
orl
push
shll
lahf
lcall
lds
int
in
inc
mov
and
movsb
xchg
imul
or
push
enter
and
xchg
icebp
xchg
inc
sbb
add
fcom
movb
mov
or
jmp
lea
fisubl
push
and
inc
add
dec
inc
xor
sub
mov
sbb
mov
jae,pn
add
dec
and
mov
mov
cmp
hlt
daa
js
sbb
test
inc
mov
aad
jecxz
shl
add
jmp
mov
cvtpi2ps
bound
inc
xor
add
lcall
lods
sub
mov
out
cmpb
mov
mov
add
mov
add
cmp
jl
sbb
mov
fdivr
jge
nop
inc
fdivs
jp
adcb
add
pop
jmp
dec
cmp
cmc
mov
bound
pop
push
addr16
fs
or
add
mov
dec
push
popa
pop
or
bound
jmp
aaa
inc
das
lds
ljmp
inc
hlt
sub
xor
and
out
and
adc
mov
daa
push
mov
inc
add
mov
je
mov
mov
mov
das
ret
addb
fsubrs
push
adc
add
and
and
cmp
sbb
jbe
or
mov
fisubrs
jl
sub
xor
testb
add
mov
popl
inc
call
or
add
sub
add
out
adc
cmp
push
mov
xor
int3
mov
je
mov
fs
imul
test
jo
ret
push
inc
xor
pop
inc
xor
and
inc
into
or
lret
test
jb
testl
adc
push
or
sub
loope
or
mov
clc
jbe
je
push
ret
or
pop
pop
add
pusha
or
js
and
pop
jbe
jns
push
push
jnp
mov
or
es
push
dec
xor
or
ret
or
inc
mov
jmp
mov
sbb
adc
push
pop
or
ret
add
pop
sub
insl
xchg
or
push
xchg
movsb
or
rcrl
sub
ret
das
and
mov
push
xor
insb
push
pop
push
pop
in
pushl
fs
inc
movsb
or
add
push
mov
cmp
sub
pop
inc
cmp
push
inc
rclb
pusha
out
cmp
sbb
lock
or
cmp
lea
push
fwait
dec
xor
lods
sub
movsb
mov
pop
mov
movl
lods
inc
out
shrl
add
push
add
jo
mov
aam
ja
mov
mov
or
mov
or
push
lahf
mov
pusha
in
shll
mov
pop
jmp
mov
lret
lea
sub
fwait
add
push
or
out
mov
jmp
shlb
lods
inc
inc
sbb
dec
or
movl
adc
dec
pop
pop
adc
and
rorb
mov
mov
js
je
pop
mov
enter
push
stc
mov
shrb
add
ret
mov
push
push
pop
jne
or
cmpb
jge
sub
mov
aad
dec
pop
mov
pushf
inc
nop
xchg
and
xchg
fmul
cmp
enter
add
cmp
shlb
roll
mov
loopne
push
sub
xor
fdivp
or
sahf
jne
add
pusha
or
jns
sub
andl
inc
cmpb
add
dec
sti
fs
inc
mov
xor
das
mov
sbbb
push
imul
sub
lods
add
adc
mov
adc
fcoml
fs
push
or
pop
fisubrl
xchg
lcall
adc
in
inc
push
sbb
push
sbb
mov
rcrl
cltd
cmpsl
push
cmp
je
lcallw
loope
movsb
call
ja
mov
jle
cmp
das
or
inc
mov
push
sahf
imul
sub
add
push
aaa
xchg
jmp
or
repnz
std
shrb
sbb
xchg
lret
pop
mov
add
cmp
cmpsl
dec
das
sbb
dec
mov
add
and
shld
shl
rolb
shl
push
or
xchg
xchg
cmp
or
inc
add
fwait
je
dec
or
and
xor
cmp
inc
lret
rclb
sub
inc
ret
inc
mov
divb
and
lods
inc
je
decl
inc
cmpsl
sbb
ret
or
call
cmpsl
pusha
subb
enter
ja
sbb
xor
ds
mov
push
call
int
jmp
ret
adc
das
adc
xchg
sbb
test
into
push
pop
mov
push
es
sbb
mov
jns
ficoms
ror
push
mov
xchg
inc
push
xchg
mov
and
popf
popl
loopne
mov
in
add
cmp
or
mov
or
or
stos
fistpll
sub
pop
sub
outsl
inc
xor
push
mov
mov
push
inc
mov
dec
je
mov
lea
std
mov
scas
call
test
in
lock
call
cmp
out
add
sub
push
out
inc
mov
mov
adc
sub
in
mov
out
movsb
pushf
xchg
mov
enter
dec
cmp
inc
lock
adc
mov
and
fimuls
js
popa
mov
test
and
shlb
push
rclb
hlt
jle
lods
jg
or
rcrb
and
sahf
out
sahf
xor
inc
dec
push
ljmp
sbb
xor
xchg
cwtl
lods
rcl
aas
add
jp
jp
add
xor
mov
add
lea
ret
inc
scas
inc
or
pop
dec
dec
xor
clc
cwtl
adc
push
add
and
mov
add
jmp
sbb
stos
pop
xor
add
pop
orb
adc
sbb
shl
mov
push
mov
push
or
jae
and
mov
cmp
sbb
and
jne
adc
inc
dec
test
dec
push
push
jmp
cld
mov
and
jmp
testb
sbb
mov
mov
pop
pop
test
sub
push
mov
mov
lods
jecxz
pop
mov
notl
mov
je
inc
dec
dec
push
push
or
ja
orl
mov
mov
cmpsb
jo
cmp
testb
cld
test
add
lret
jmp
lcall
shll
and
and
mov
xchg
gs
push
add
push
test
push
les
sar
call
in
incl
int
adc
andb
in
sahf
mov
adc
lds
daa
subl
jl
sbb
sub
push
in
sbb
pop
and
sub
mov
sbb
out
cmp
pushf
js
adcl
sbbb
stos
clc
adc
in
andb
sbb
je
inc
subb
jmp
xor
imul
pop
lock
mov
test
or
xor
lret
je
cmp
je
jns
pop
mov
sub
xchg
outsb
into
mov
jnp
clc
jne,pn
cs
jmp
add
sbb
sbb
int
push
in
jecxz
ja
xchg
leave
or
and
je
cmp
not
and
and
jmp
add
xorl
test
cli
xchg
add
testl
or
push
lcall
cmp
cmp
jbe
jmp
adc
pop
pop
xchg
orl
push
inc
je
push
cmp
adc
sbb
test
fsts
xchg
mov
xor
push
or
pop
xor
push
pop
mov
add
repz
or
xchg
mov
mov
dec
add
jl
outsb
push
jo
add
je
push
and
ljmp
push
addl
rcrb
in
adc
pop
and
cmp
in
sbb
jne
push
frstor
int3
mov
xor
push
adc
addr16
test
lret
pop
scas
inc
xchg
sbb
aad
pop
enter
or
xor
arpl
and
test
cld
out
mov
mov
or
shlb
mov
and
lock
shl
jo
pop
fldcw
popf
and
rcrb
push
aad
int3
out
or
imul
rcll
stc
adc
ret
add
add
into
jecxz
cs
add
add
mov
cmp
rorl
mov
mov
pop
add
push
mov
or
jne
or
loope
add
sbb
mov
pop
mov
cwtl
test
mov
pusha
lahf
pop
pop
test
pop
test
mov
push
mov
lahf
pop
cld
lcall
repz
imull
pushf
les
mov
or
lret
or
in
add
jge
shlb
cmp
jne
and
mov
mov
fisubs
je
mov
xorb
ret
test
shll
mov
test
push
lock
push
pop
sub
into
adc
enter
lret
loop
rolb
inc
cmp
jge
push
orl
xor
push
rolb
jne
jb
pop
es
cmc
and
sbb
dec
cmp
add
pop
orl
or
add
imul
add
dec
adc
inc
adc
negb
push
push
jo
mov
daa
inc
sub
outsl
test
xor
ss
or
dec
mov
or
repnz
xchg
shrb
inc
mov
and
sub
push
push
call
sub
outsl
mov
pop
and
inc
pop
cmp
shrl
enter
and
rep
sbb
adc
popf
hlt
insb
adc
add
mov
mov
dec
cmp
push
dec
inc
pop
inc
push
and
and
or
fld
adc
mov
fnstcw
pop
add
mov
int3
add
push
mov
adc
cmpl
enter
inc
push
sbb
or
mov
loopne
pop
lcall
dec
jge
lret
les
hlt
xor
imull
pop
add
xadd
mov
or
mov
dec
jns
push
xchg
push
lods
sbb
or
dec
xchg
mov
sub
test
daa
mov
or
push
faddl
shl
repnz
sbb
imul
dec
sub
nop
rol
mov
pop
pop
dec
mov
and
pusha
push
inc
mov
or
cwtl
mov
inc
mov
sub
rclb
into
jmp
cmp
jg
dec
cld
pop
cmpsb
pop
and
pop
cltd
sub
fwait
lods
jno
or
data16
and
and
pop
shlb
sub
testl
mov
adc
pop
jno
call
test
jg
repz
and
in
je
pusha
xchg
xor
jg
mov
rolb
js
ljmp
icebp
or
mov
fwait
mov
andnps
mov
or
adc
mov
push
stos
dec
dec
mov
cmpsb
cmp
add
and
inc
or
aaa
iret
inc
repnz
test
pop
and
dec
inc
ljmp
xor
jle
movb
test
rolb
loopne
or
fildl
push
insb
stos
mov
mov
inc
jnp
lea
jns
dec
push
and
sarb
xor
icebp
inc
cmp
cwtl
add
cmc
xor
stos
cmp
add
adc
add
mov
dec
pop
adc
xor
cmpsl
sub
lea
pusha
iret
pop
push
lcall
cld
movsl
movsl
movsw
testl
rcrl
add
leave
mov
add
mov
mov
mov
pop
sbb
xor
and
mov
into
and
movaps
sbb
rclb
cmp
movsb
bsf
or
je
sbb
add
test
xor
ret
sbb
ja
ljmp
and
mov
pop
xchg
push
ret
or
adc
enter
adc
pusha
sub
cli
pop
add
adc
leave
mov
shr
or
lea
mov
movl
iret
xor
or
sbb
leave
add
call
movzbl
test
dec
shrl
inc
or
ret
orl
or
pop
push
rorl
kmovw
mov
and
lods
dec
xchg
inc
pop
push
lea
push
or
movsl
dec
imul
je
push
mov
mov
arpl
push
call
sbb
xlat
mov
sub
call
xchg
lcall
jmp
add
inc
bound
scas
loopne
mov
test
lret
sbb
ja
mov
and
or
cs
les
inc
lods
jne
add
mov
adc
cmpl
and
mov
out
adc
je
jmp
bound
mov
sbb
adcl
cmc
add
pop
mov
mov
inc
das
testb
fidivl
je
jp
sarl
jl
xor
mov
pushl
sbb
cwtl
adc
mov
mov
mov
jbe
and
sbb
adc
testb
pop
dec
rorl
mov
adc
xor
add
divb
push
sahf
inc
stos
inc
cli
subb
add
test
lock
push
movsl
xchg
nop
jl
sahf
adc
xor
cmp
jge
jmp
sub
cmp
test
test
jne
fxch
xchg
cmp
popa
pop
push
inc
jge
cmp
xor
pushf
jecxz
cmp
inc
shll
sbb
sbb
inc
dec
mov
cmc
mov
mov
xor
pusha
xchg
inc
inc
xor
cmp
jb
sbb
or
mov
pop
mov
jl
inc
mov
cli
stos
adc
inc
jp
adc
xor
roll
incl
into
repz
or
and
add
cli
inc
rorb
orb
add
xor
xorl
ds
mov
add
dec
mov
mov
shr
shl
or
pop
xchg
aad
imul
repnz
loopne
lock
or
mov
mov
out
ljmp
push
pop
jbe
or
lcall
push
sub
pusha
or
inc
mov
mov
dec
dec
sub
or
push
mov
lea
push
icebp
rorb
cmp
mov
gs
out
cld
addr16
xor
pop
sahf
sbb
dec
mov
nop
jne
pop
cmp
push
test
sub
fcoms
mov
imul
shl
mov
adc
and
dec
add
jmp
mov
jae
hlt
in
into
in
dec
inc
add
jmp
lea
or
adc
xor
in
movsb
pop
or
pop
rcrb
xchg
sub
out
andl
jo
in
in
mov
and
mov
je
je
and
mov
dec
out
add
pop
mov
inc
or
xchg
fld
addr16
loopne
inc
sti
xor
sbbb
jg
arpl
push
movsb
add
sarb
mov
aaa
add
addb
je
or
es
xor
mov
pop
adc
insl
push
jmp
jmp
cltd
inc
into
jae
roll
aam
jl
add
xchg
mov
sub
or
addl
inc
xor
push
inc
scas
xor
inc
mov
sub
adc
std
inc
shll
jb
push
in
arpl
push
inc
mov
pop
aam
movsb
pop
xor
jne
add
les
ret
cmpsb
jo
mov
adc
cwtl
popf
cltd
movsb
pop
scas
test
pop
jmp
insl
xlat
adc
sbb
or
adc
mov
push
addr16
xchg
sbb
mov
outsl
fiaddl
add
or
fdivl
lret
sub
loopne
into
repz
adc
xor
fimull
sbb
add
in
sbb
or
xor
jmp
jno
lret
adc
xchg
adc
repz
or
test
and
sbb
divb
jl
ss
in
sub
push
jg
push
pop
dec
and
xor
and
xor
sub
imul
mov
adc
mull
fs
push
pop
pop
sahf
mov
and
daa
jae
loop
mov
jb
mov
pop
add
inc
mov
je
es
pop
push
adc
orb
push
mov
xchg
dec
in
xor
rorb
shll
cmp
push
mov
sar
jbe
rolb
and
add
mov
hlt
dec
xor
cmp
inc
xor
push
jbe
loopne
pop
inc
dec
in
repnz
push
jne
mov
in
add
push
adc
aam
jge
sbb
icebp
add
push
loopne
push
xor
fsubrl
inc
sbb
jle
dec
aas
pop
xchg
repz
xor
mov
sbb
insb
pusha
xor
mov
push
stos
adc
adc
pop
cmp
xor
dec
cld
dec
or
cld
xor
enter
ret
jmp
lret
mov
jmp
stos
call
iret
pop
hlt
cs
sbb
dec
or
push
xorb
jno
mov
push
and
mov
or
mov
sub
adc
mov
sbb
jns
aam
out
or
lret
stos
das
add
sbb
daa
cmp
les
jnp
fisubl
leave
push
popa
and
int3
in
iret
repz
out
jmp
iret
repz
in
out
sti
out
aas
movsl
xchg
jmp
rclb
add
and
mov
push
sbb
pop
enter
and
ret
or
add
mov
xor
xchg
or
data16
xor
movsl
pop
jne
push
dec
maskmovq
inc
loop
hlt
subl
sbb
inc
je
sbb
xchg
sub
adc
adc
push
and
push
xor
xor
or
outsb
push
sub
loope
mov
pushf
mov
jmp
pop
adc
adc
or
orb
push
leave
dec
testb
rcrl
xchg
dec
add
movswl
sbb
dec
inc
add
or
cli
aas
jb
mov
dec
in
or
inc
and
pop
into
or
xor
or
jg
xor
call
adc
add
cli
sub
mov
int3
adc
es
push
and
icebp
pop
neg
jno
or
or
inc
dec
repz
inc
adc
mov
outsl
xor
mov
movsl
mov
or
inc
pop
mov
mov
xor
es
mov
addl
mov
sbb
fisubrl
cmp
jb
and
sahf
push
dec
jmp
xor
incw
sub
sub
mov
inc
xor
sbb
cmp
mov
lea
hlt
cmpl
nop
jmp
push
cmp
xor
push
lea
scas
test
stos
ds
mov
add
subb
jne
jg
or
mov
inc
add
addb
orb
lods
sbb
sbb
and
cmpb
push
add
in
sub
aaa
or
stc
mov
jle
and
and
and
dec
test
pop
pop
jb
pusha
xchg
std
mov
xchg
sbb
xor
pop
inc
sbb
push
cmp
push
dec
cmpb
xor
cld
push
sbb
and
enter
jbe
push
cmp
adc
add
or
mov
cld
das
and
jge
or
mov
dec
inc
and
xor
or
sbb
inc
call
hlt
in
inc
test
add
pop
sar
sar
push
pushl
pop
jae
fwait
push
add
stos
inc
add
sub
call
mov
popa
adc
pushf
sbbl
and
and
out
sub
lret
pop
lods
jg
cmp
les
lods
cmp
bound
dec
dec
adc
add
jle
inc
dec
ljmp
xor
faddl
mov
ret
cmp
jne
fnstenv
xchg
sub
and
loop
mov
jge
js
cwtl
adc
int
data16
pop
cld
mov
jmp
add
inc
loop
mov
jae
cwtl
add
adc
or
call
pushf
lds
dec
add
push
inc
pop
pusha
inc
jmp
fistps
or
mov
sub
add
push
out
dec
addb
movsl
inc
push
int
pop
jmp
cmp
inc
imul
in
mov
popa
data16
pop
or
orl
and
push
add
rolb
pop
je
lea
loopne
out
cmp
lea
nop
jbe
imul
cmpsl
lods
pop
xor
addr16
jne
shl
test
and
out
mov
mov
and
ja
or
les
jb
and
inc
inc
add
dec
xor
cmp
add
adc
je
jmp
sbbb
call
popf
inc
std
insb
pop
jbe
cmp
inc
push
inc
pop
sahf
je
pop
xchg
insb
hlt
fmull
add
sub
testl
dec
adc
jg
imulb
or
push
dec
push
mov
addr16
push
adc
lret
or
leave
int
lea
adc
mov
adc
add
jae
test
lret
push
sub
in
lret
push
in
and
loop
out
lcall
pop
sbb
fs
decb
call
push
clc
xlat
and
xchg
or
push
push
mov
push
mov
test
mov
mov
xchg
js
mov
dec
outsb
pop
aam
dec
sbb
iret
insb
fadds
cmp
xor
mov
inc
gs
mov
lcall
or
dec
aas
test
xor
push
pop
in
jno
lods
loopne
cs
ss
mov
xchg
test
test
push
aad
cmp
xchg
daa
outsl
cs
ffreep
out
lahf
fdiv
ficomps
push
push
and
adc
ficompl
adc
xor
aas
shll
inc
or
add
inc
in
pop
mov
lods
sub
jmp
and
loop
inc
cvtps2pd
imul
pop
xor
sub
bound
in
xchg
loop
lods
je
cmp
addr16
adc
loopne
xor
and
adc
push
push
cmpsl
sub
pusha
out
or
inc
mov
addr16
dec
pop
loop
enter
mov
and
and
dec
add
cwtl
sbb
add
sbb
int
enter
sbb
mov
jno
pushf
mov
xor
push
dec
sub
aam
cs
inc
scas
inc
xor
aam
dec
and
xchg
ret
lea
push
mov
push
inc
push
enter
sub
fimuls
mov
cli
and
dec
cmp
hlt
jbe
sbb
negl
jle
sbb
pop
lds
pop
and
push
test
addr16
add
mov
ja
popa
push
out
mov
les
popl
add
add
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
jl
jle
sub
mov
sbb
dec
jno
repz
test
add
ficompl
jmp
mov
hlt
movl
imul
add
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
add
add
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
fiadds
add
add
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
add
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
add
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
stc
add
xchg
sbb
push
add
add
sub
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
add
add
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
bound
add
dec
sub
rorl
popa
mov
into
cmp
add
je
mov
aam
movsl
fisttps
xchg
fadd
shll
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
or
add
cmp
add
daa
adc
or
and
test
or
mov
add
add
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
add
and
in
mov
mov
add
add
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
add
add
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
add
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
add
xchg
pop
jp
adc
dec
frstor
fistpll
mov
add
add
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
add
add
push
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
add
mov
push
fbld
out
mov
jns
imul
andl
add
add
shrb
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
add
pop
mov
add
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
add
add
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
add
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
dec
add
add
ficompl
int
mov
mul
ja
outsl
ja
mov
out
add
add
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
adc
or
push
addl
mov
add
add
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
add
add
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
add
outsl
sub
mov
or
sbb
add
sub
push
aas
lcall
ret
test
push
add
inc
jo
adc
add
add
add
add
jnp
and
cmp
pop
or
aaa
xor
inc
xor
and
or
pusha
addl
sbb
or
sbbb
outsb
add
or
jne
insb
sub
add
sub
outsb
jne
insb
pop
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
ds
xlat
add
push
inc
inc
dec
push
push
inc
push
push
sub
aaa
xchg
lock
mov
mov
jle
push
inc
subb
adc
dec
jae
jb
arpl
jae
jb
gs
je
jb
orb
rep
je
push
orb
inc
push
dec
xor
add
gs
mov
decl
jb
test
dec
ret
sar
add
jb
jbe
fwait
add
and
jb
outsb
push
fimull
push
fcoml
or
inc
mov
inc
dec
dec
dec
cwtl
subb
xor
cmp
loopne
bound
outsb
mov
imul
jo
sarl
aaa
outsb
outsl
add
cmpsl
pop
je
addr16
arpl
insb
lret
ret
pop
shrl
pop
ja
sbb
ss
out
pop
jae
fs
jne
jbe
jb
xchg
stc
test
and
cmp
xor
ljmp
shll
das
and
mov
mov
cmp
jo
daa
ds
pop
fs
mov
and
inc
gs
mov
add
adc
xchg
arpl
sbb
lahf
fs
jno
pop
ja
int3
adc
jb
jo
mov
popa
insl
sbb
pop
aas
adc
xor
ljmp
adc
pop
pop
lods
cmp
addr16
cli
push
test
sarl
data16
frstor
mov
ret
orb
dec
subb
push
imul
sub
and
sbb
jb
lret
mov
xor
push
cli
imul
mov
sub
add
adc
imul
fs
cmp
or
inc
rclb
adc
inc
cld
adc
cmp
jne
add
mulb
xchg
out
inc
outsl
js
and
inc
inc
pop
sub
ds
addb
aam
jbe
push
shlb
add
in
gs
lock
minps
popa
adc
mov
bound
xor
add
sub
out
sahf
out
push
push
nop
mov
jns
test
loopne
or
push
and
cmp
pop
repz
repz
pushf
mov
icebp
cmp
loopne
decb
and
dec
pop
push
jns
out
adcb
mov
cld
or
sbb
inc
iret
repz
pop
push
mov
stos
ror
clc
push
jns
out
xor
xor
push
push
jl
xchg
lods
ret
jns
shl
lock
xor
cmp
repz
ss
pusha
jo
repz
repz
mov
jns
movl
xor
pop
push
out
xchg
cmpsb
ret
push
xor
cmp
jecxz
cmp
fs
cmp
jbe
cwtl
lods
shlb
and
loopne
add
pop
or
gs
inc
adc
mov
push
pop
pop
mov
jne
call
fs
imul
mov
inc
sub
push
aam
add
lock
jmp
pop
pop
mov
outsb
lods
scas
dec
dec
aad
mov
lcall
sub
lahf
mov
loopne
inc
push
jo
and
jp
popf
adc
gs
gs
enter
fiadds
das
fcoml
mov
popa
filds
add
adc
dec
int3
mov
mov
cmp
sbb
addr16
push
fs
jge
pop
mov
push
sub
mov
cwtl
lret
mov
hlt
sub
sarb
adc
dec
inc
jns
push
add
push
jb
xor
clc
pop
enter
imul
add
jns
data16
xchg
add
mov
inc
inc
nop
and
cwtl
scas
leave
imulb
fdivr
outsb
test
lds
inc
dec
mov
add
dec
ja
daa
fnstenv
fcompl
cltd
dec
cmp
mov
push
push
inc
cmovbe
mov
mov
popf
jae
ret
inc
fs
or
push
lcall
rcr
mov
push
inc
insb
lahf
lret
add
mov
aas
add
mov
into
dec
pop
mov
add
push
cmp
in
sbb
scas
cmc
cltd
pusha
jb
jae
lret
jl
pop
stos
sub
xchg
cmp
dec
pop
shrl
je
shll
fidivrs
inc
arpl
push
and
inc
jge
je
bound
mov
fdivrl
int3
hlt
loop
ljmp
fcoml
out
xor
add
push
outsb
mov
dec
negl
add
or
ja
iretw
cmp
lods
fs
ret
lcall
push
jo
icebp
loopne
push
je
and
out
insb
lret
push
push
call
push
mov
mov
and
xor
repnz
ss
cmpsb
cmp
jns
and
push
cmp
pop
add
insl
sub
and
xchg
mov
movl
jae
lahf
xchg
cwtl
pop
imul
mov
pop
test
xlat
dec
ss
inc
cmpl
sub
fs
cld
dec
js
in
leave
push
fwait
nop
lods
pushf
outsl
jbe
pop
jmp
loope
fs
sbb
movsb
fnstcw
inc
insb
je
sbb
pop
in
addr16
ja
jecxz
inc
popa
fs
inc
xlat
sub
push
insb
gs
jp
fisubl
mov
test
scas
xchg
std
repnz
jno
jo
leave
in
push
hlt
jp
cld
loop
js
inc
jbe
sti
aas
inc
cli
enter
lret
inc
sbb
jne
outsl
ret
in
imul
cmp
jae
or
xor
data16
outsb
fdivrp
push
jnp
add
cmc
xchg
xor
mov
push
ds
lods
fisttps
xor
pushf
je
outsl
jns
cli
pop
js
rcll
xchg
push
jne
imul
and
sub
xchg
cmp
mov
push
fs
test
nop
jo
jns
iret
in
sbb
push
scas
mov
fldenv
add
cwtl
jl
loop
dec
xchg
push
xor
in
fs
pushf
loop
fiaddl
sbb
jns
int3
je
or
cmp
shll
outsl
shll
adc
inc
lret
mov
sub
jbe
jl
xor
mov
and
inc
jne
data16
mov
inc
mov
inc
shll
and
cs
add
sub
mov
iret
cmp
enter
popa
mov
loopne
dec
movsl
je
lods
pop
or
or
shrb
sub
xor
mov
fsubr
or
xor
xlat
mov
add
bound
into
inc
mov
push
inc
test
jp
inc
jecxz,pt
bound
into
or
jl
mov
pop
sbb
inc
or
addr16
dec
push
push
mov
fsubrp
push
mov
pop
dec
or
xor
jo
popa
mov
aas
push
notl
mov
jnp
fists
icebp
daa
mov
fistpll
inc
fwait
icebp
xchg
inc
insl
ficoms
fadd
jno
dec
push
push
push
dec
mov
ret
mov
add
lods
xchg
test
ret
flds
jne
je
jo
out
idivl
addr16
outsl
cmp
inc
cmp
push
cld
aaa
xchg
pushf
outsl
pop
imulb
js
push
sbb
xor
fists
xchg
outsb
jo
push
dec
push
imul
jns
inc
jbe
and
xchg
gs
inc
cmp
jns
mov
test
nop
js
rolb
cld
cmp
adc
sbb
lret
dec
clc
jnp
mov
jae
sub
push
jne
aaa
push
adc
ja
push
pop
inc
push
ljmp
lcall
fs
adc
jae
pushf
or
add
inc
dec
pop
dec
xor
es
pop
or
imul
push
arpl
and
inc
popa
shl
test
lods
fwait
shr
dec
push
cmp
push
out
dec
push
inc
inc
dec
xchg
out
popa
fs
sub
jae
lahf
ja
jb
js
ja
out
jmp
cs
mov
push
push
and
cmp
push
dec
xor
bound
fwait
cmp
out
shrl
pop
out
pop
mov
fwait
imul
data16
mov
and
mov
xchg
push
jae
loopne
lods
mov
mov
xchg
sbb
pop
jae
fisttpl
dec
cwtl
cmp
movsb
imull
xor
cs
xchg
gs
inc
cs
fs
xchg
rorb
xchg
cmp
sub
cmp
imul
inc
lods
es
lret
loopne
jno
mov
nop
fcoml
mov
jns
cmp
add
jecxz
push
dec
pop
sub
and
xor
sub
into
cmp
js
xchg
pop
dec
dec
inc
push
movsl
pop
cli
xchg
repz
sbb
sbb
and
mov
cmpsb
or
ret
sarb
cvttps2pi
sub
loope
cmp
jbe,pt
loop
pusha
add
stc
stc
mov
add
sub
adc
inc
mov
pop
add
pop
sub
sub
cmpsb
sub
das
xor
pusha
adc
or
adc
aam
adc
das
das
jae
jno
push
add
xorb
dec
inc
pop
add
pop
xchg
cmp
push
iret
ret
clc
pop
in
inc
pop
negl
mov
mov
jg
out
dec
xor
aas
sbb
js
hlt
pop
mov
pop
lret
jecxz
pushf
pop
add
out
lahf
push
sbb
in
push
ret
clc
aam
cwtl
lcall
adc
push
cmp
push
rclb
cld
clc
adcb
aas
add
push
mov
cld
inc
add
push
cld
cld
jecxz
mov
xchg
pop
inc
jecxz
pop
cld
push
fcoml
jg
cld
repz
or
push
imul
push
pushf
push
xchg
je
mov
clc
ret
xlat
loop
push
movsb
push
jo
aas
cld
xor
clc
ret
lock
in
mov
iret
aas
aas
ljmp
sbb
iret
add
dec
cmp
aas
mov
cld
cld
imul
ret
pop
aas
adc
dec
aam
sar
icebp
cld
mov
dec
pushf
push
fs
adc
out
cmp
dec
int3
mov
xchg
dec
mov
fs
iret
iret
aas
pop
xor
clc
dec
mov
arpl
lock
loop
xor
cmp
xchg
push
ja
dec
imul
cmpsl
inc
sbb
sub
sub
xchg
jle
outsb
es
int3
popa
daa
pusha
xchg
xor
push
push
fnstsw
dec
sub
popf
int
sub
outsb
ja
arpl
popl
mov
add
fnsave
js
repnz
je
mov
jp
mov
push
dec
push
dec
pop
mov
je
ja
add
inc
insl
insl
data16
jo
out
enter
mov
lods
pop
stos
cmp
xor
imul
and
adc
outsl
jne
gs
out
sbb
dec
outsb
sti
mov
inc
cmc
mov
jb
pop
test
or
es
loope
and
lea
es
push
popf
cld
dec
jne
insb
shll
mov
pop
inc
push
nop
pop
enter
insl
jg
call
das
push
push
ret
mov
loop
pop
push
stc
xchg
loop
outsl
test
dec
aad
xchg
and
inc
mov
dec
mov
rclb
and
pop
lods
xor
mov
jg
sbb
fistl
nop
jp
rclb
mov
xchg
cltd
bound
cmp
sub
je
pop
jne
pop
push
movsb
das
mov
mov
and
into
mov
jo
inc
push
inc
dec
push
dec
dec
inc
dec
inc
mov
ss
jb
jle
test
xor
call
inc
jl
xor
lds
mov
jo
lret
mov
adc
arpl
ficoml
divl
dec
dec
sahf
scas
arpl
pusha
sbb
inc
dec
inc
inc
aad
or
add
jb
sti
pop
add
ljmp
outsl
cmp
cltd
and
or
dec
orl
inc
inc
dec
inc
push
pop
cmp
cwtl
stos
bound
es
ljmp
es
lcall
out
aad
sbb
int
out
int3
aas
int
xor
shrb
jne
mov
daa
imul
das
stos
outsb
movsb
mov
mov
bound
call
jl
jmp
imul
data16
push
sti
inc
jb
mov
or
add
jne
hlt
stos
out
pop
subb
and
iret
enter
stos
mov
jp
push
or
sti
mov
popf
and
inc
cmp
pop
or
aaa
cmp
push
push
clc
repz
in
scas
xchg
mov
mov
sub
cwtl
xchg
repnz
cmp
and
sbb
test
push
push
xchg
and
movl
data16
sub
gs
mov
je
mov
xor
daa
xchg
gs
je
insb
push
mov
push
push
jmp
inc
dec
pop
mov
popf
cmc
mov
es
push
arpl
mov
and
mov
lahf
adc
xor
into
and
add
pop
test
inc
imul
lods
lea
dec
inc
dec
cmp
push
loopne
insl
jecxz
gs
push
dec
mov
sbb
sbb
cmp
fs
outsb
je
neg
inc
xor
jecxz
dec
inc
pusha
bound
pop
mov
mov
push
pop
jge
lret
xor
pop
push
adc
es
xor
insl
hlt
lea
push
in
outsb
jmp
out
repz
pop
test
cs
nop
lcall
push
cmp
popa
ss
jne
jp
fisttpl
xor
dec
lea
leave
cmp
add
jb
adc
out
dec
outsl
push
outsl
outsl
inc
fs
mov
iret
dec
fsub
sbb
sub
push
popa
sub
sti
bound
inc
pushf
xchg
aad
and
xor
dec
mov
fsubrp
adc
sub
popa
cmp
cwtl
jp
int
repnz
jecxz
sub
mov
sub
jl
dec
pushf
das
sub
sub
insb
pop
mov
sub
jg
setnp
mov
movsb
add
rorb
jb
and
jb
movaps
pop
xor
ret
cmc
sub
or
mov
adc
xor
mov
dec
adc
or
call
add
add
xchg
imul
xor
fsts
movsl
lcall
add
out
lcall
iret
into
enter
sub
subb
shrb
xchg
rol
pop
popf
fdivrl
adc
adc
mov
lcall
test
fwait
add
inc
into
adc
outsb
sbb
adc
lcall
in
cltd
xchg
lret
iret
data16
gs
cmp
add
leave
inc
mov
mov
cwtl
repz
imul
stos
pop
adc
popf
repz
lret
mov
insl
popa
or
les
jne
adc
inc
inc
pop
add
test
jnp
adc
mov
sbb
fbstp
leave
iret
lret
stc
add
pop
fisubs
mov
leave
mov
stos
mov
sbb
in
pusha
enter
push
dec
ret
shlb
ja
jno
addr16
mov
add
cld
in
leave
jmp
cli
fdivr
std
jmp
ljmp
add
cmpsl
push
lock
mov
loopne
cltd
aad
clc
std
aad
sti
jmp
jmp
sub
ljmp
lret
xor
repnz
shrb
cwtl
daa
lock
lock
clc
cli
jmp
sub
dec
dec
dec
dec
push
dec
add
mov
dec
orb
jne
lds
cmpsb
adc
pop
jae
enter
mov
jno
pop
out
mov
push
inc
adc
pop
adc
sti
jnp
jno
aad
loope
push
popa
fs
mov
aas
addr16
movsb
xlat
mov
dec
push
mov
gs
pop
sahf
pop
jbe
jle
ja
es
sub
inc
outsb
gs
jle
bnd
mov
aam
pop
or
sub
and
push
ret
je
addr16
scas
mov
sub
in
push
pop
fs
in
or
dec
mov
xor
xor
cs
sbb
push
jp
lds
and
shrl
xor
cmp
mov
mov
mov
ja
rcl
loop
arpl
daa
into
or
jge
inc
inc
jmp
xchg
fs
shlb
jae
subl
pop
das
lret
and
pop
outsl
jae
jo
gs
adcl
push
cmp
int
les
inc
out
xchg
xchg
test
dec
int
pop
cs
daa
popf
bound
hlt
mov
jne
fisttpll
leave
fcmove
imul
jmp
xchg
sub
dec
push
inc
dec
inc
and
sub
outsb
sub
xchg
and
daa
xor
cmp
js
bound
icebp
pushf
mov
arpl
js
cs
shll
pop
ljmp
jb
mov
cld
ja
or
ljmp
jb
lret
andb
xchg
mov
mov
sahf
pop
gs
imul
js
dec
dec
jg
push
xchg
scas
dec
dec
add
mov
or
rolb
arpl
add
mov
lahf
call
push
add
adc
or
jbe
add
mov
jl
enter
add
add
dec
xor
std
int3
inc
fs
mov
je
xchg
shlb
or
out
jl
and
adcb
dec
into
adc
outsb
jb
inc
jns
dec
inc
push
inc
into
add
test
lock
mov
add
inc
mov
add
fbstp
cmpsl
mov
scas
xor
and
lock
or
es
add
gs
sbb
iret
lods
add
add
pop
icebp
lahf
daa
mov
cld
cmpsb
movsb
jns
repz
lods
stos
jns
ret
mov
sbb
js
add
scas
dec
push
dec
mov
and
lods
ja
rolb
xchg
cmc
dec
data16
xchg
add
sbb
cmp
js
or
mov
int
fcomps
xchg
cwtl
dec
rclb
test
xor
mov
xor
ljmp
inc
adc
repz
mov
jg
mov
orb
test
add
dec
cltd
cltd
icebp
mov
jp
add
jle
cwtl
ret
int3
lds
outsb
fcomp
or
and
or
xchg
adc
pop
xchg
sahf
sar
pushf
sbb
dec
popa
push
cmc
push
push
push
ljmp
xchg
cmp
jp
jno
pusha
pop
int3
xor
into
mov
pop
or
add
xor
jg
lahf
mov
lcall
icebp
insb
add
mov
push
stos
in
sub
inc
cmp
xchg
or
push
int
or
popf
adc
add
push
pop
fisttpl
fsubr
push
xor
jbe
push
fmuls
pop
jo
gs
adc
add
add
pop
xor
inc
cmpl
in
jne
cmpl
jne
add
test
loopne
fcompl
dec
in
sarl
leave
xchg
stos
addb
or
or
jmp
cmp
dec
adc
jl
mov
ja
mov
jno
test
cld
ja
loop
inc
adc
mov
add
clts
fadds
dec
inc
das
sbb
repz
pop
dec
iret
mov
jae
inc
lcall
add
jae
adc
outsl
ror
dec
add
or
inc
nop
inc
push
push
dec
sub
inc
popa
pop
mov
cs
imul
push
jo
dec
call
jmp
push
gs
cmp
in
jae
out
or
ja
or
call
addr16
andb
fldl
jle,pn
pop
leave
mov
xchg
hlt
push
outsl
stos
cmp
fimuls
aaa
and
xor
stc
inc
push
inc
or
lcall
cmp
dec
scas
and
push
arpl
and
mull
jb
cmp
aaa
jbe
and
mov
mov
jne
fs
popf
imul
outsl
jbe
imul
in
cmp
inc
dec
dec
jb
inc
dec
add
or
xor
cmp
sub
and
mov
sub
and
add
data16
fdivrs
popa
jbe
ljmp
lea
or
ret
mov
test
cmp
test
inc
dec
inc
pop
xchg
jb
xor
mov
divb
push
push
sahf
xchg
and
xchg
mov
cs
cld
fimuls
xorb
push
call
repz
xor
inc
bound
dec
xor
mov
jg
or
push
pop
and
adc
leave
and
dec
ljmp
inc
or
mov
loopne
lea
stos
in
push
in
fildl
test
icebp
aas
sub
popf
stos
imul
test
pop
cwtl
jecxz
in
add
mov
jae
push
push
xchg
sub
sub
sub
sub
and
or
push
addb
pushf
mov
jne
inc
mov
dec
dec
mov
ret
mov
xor
repz
loop
gs
inc
insl
icebp
dec
ljmp
xor
into
lds
inc
aam
pop
je,pn
stos
push
imul
inc
dec
dec
cmp
sbb
iret
bound
repnz
add
dec
dec
loopne
jne
jo
sub
int3
ds
jbe
push
das
dec
rorb
dec
push
inc
inc
jns
push
int
daa
and
rcr
mov
out
xor
dec
das
inc
and
pop
adc
sti
cmpb
adc
jo
mov
out
inc
lea
or
inc
sbb
pop
rclb
test
add
sbb
add
mov
sbb
stos
jns
imul
movsl
popf
in
xor
inc
sub
js
mov
popa
ret
push
adc
inc
and
das
xor
xor
cmp
or
ret
cs
jns
cltd
jns
pushf
inc
repnz
subb
sub
push
sub
xchg
mov
js
test
sbb
and
fistpl
and
dec
sbb
outsl
movsl
ret
inc
arpl
push
mov
movsl
adc
push
or
or
sub
imul
mov
jae
test
or
mov
cs
scas
jg
or
insl
insl
cmp
repz
and
jns
mov
inc
popa
jo
jecxz
fisubrs
outsl
jecxz
rolb
jae
xchg
insl
js
das
push
je
sub
mov
mov
cwtl
stos
xchg
mov
popa
sub
push
ret
imul
push
cltd
imul
imul
and
dec
dec
push
dec
cmp
cmp
jbe
test
das
sbb
jo
das
xchg
pushf
jp
inc
inc
clc
cmpsb
and
inc
dec
inc
pop
dec
pop
add
push
push
dec
push
jge
imul
pop
xor
jge
and
sub
addr16
mov
mov
outsb
movsb
or
adc
inc
cmpsl
cmp
repnz
dec
inc
gs
mov
mov
les
xor
jae
scas
fwait
notl
cmp
repz
insl
jae
pop
mov
pop
fnsave
scas
sbb
das
mov
cmp
inc
fwait
rcrl
sbbl
adc
and
in
das
xor
lds
in
cmp
inc
dec
xchg
movsl
ret
cs
scas
cmc
mov
cld
and
push
popa
dec
jmp
adc
jns
push
cmpsl
jmp
add
rcr
mov
xchg
inc
mov
and
pop
pusha
test
fsubl
ds
into
xor
mov
daa
jle
inc
mov
and
xor
rclb
fs
inc
xor
cmp
or
std
inc
inc
mov
push
lea
jmp
dec
push
shl
leave
xor
push
gs
or
xchg
cmp
cli
push
or
inc
dec
push
inc
xor
push
inc
cs
adc
mov
pusha
gs
sub
inc
sub
push
jecxz
push
sub
push
call
pop
jg
lea
jge
push
inc
fdivp
insl
daa
pop
cmpsl
and
pop
in
je
fimull
out
xchg
add
je
test
dec
push
fs
inc
or
test
push
mov
dec
pop
and
and
pop
inc
les
roll
pop
popa
or
and
repnz
call
in
add
sub
inc
gs
ja
arpl
xchg
mov
pop
inc
push
inc
pop
mov
xor
pop
or
jno
or
into
pop
pop
mov
mov
out
xor
jo
pop
pop
je
mov
cwtl
xor
or
pop
cwtl
test
jbe
out
lds
pop
into
pop
mov
cmp
insl
lahf
push
adc
sbb
cmp
lret
pop
cwtl
fnsave
pop
cmpsl
inc
jo
xor
jnp
xor
push
int3
shl
imul
insl
cmp
adc
into
repnz
imul
test
repz
xor
xor
xor
repz
pop
aaa
aaa
es
repz
cmp
cmp
sub
sub
jne
push
xor
aas
inc
adc
lcall
dec
xchg
jmp
xchg
push
add
add
jae
cmp
add
inc
mov
push
rcll
push
push
mov
add
xchg
ret
jns
dec
pop
push
xor
sub
add
in
shll
dec
outsl
scas
mov
add
fisttpl
pop
xchg
inc
dec
fstl
inc
popa
xchg
mov
push
jae
pop
inc
fs
sub
mov
xchg
add
cmp
pop
int3
inc
dec
push
add
push
sub
mov
jl
dec
insb
repz
xor
jecxz
test
cmp
daa
and
repnz
jp
out
sub
pop
sbb
popf
sub
inc
arpl
push
shll
bnd
inc
mov
dec
inc
sub
outsb
add
int3
sub
insl
dec
ljmp
cmp
clc
cmp
cs
clc
cs
faddl
add
jl
movb
pop
inc
dec
pop
test
sbb
sbb
nop
int
cmpsb
and
aad
push
imul
mov
or
pop
dec
add
dec
dec
pop
cmp
pop
fdivs
dec
dec
mov
xor
dec
inc
pop
add
push
xlat
dec
sbb
jmp
sbb
lret
aam
mov
mov
push
add
push
sub
mov
pop
push
movb
dec
inc
inc
push
pop
add
arpl
js
mov
pop
push
movb
shll
sub
arpl
mov
mov
dec
dec
lahf
stc
sbb
jmp
lods
loop
insl
xor
mov
sub
insl
xchg
pusha
xor
mov
loop
ljmp
fmuls
loop
xor
push
xor
jae
mov
sbb
sarl
divl
push
cmp
dec
cmp
outsb
inc
mov
dec
inc
pop
pop
push
xor
pop
and
fdivrl
sahf
xchg
or
inc
or
mov
sub
mov
push
cmc
test
aas
push
call
pop
push
fs
out
std
and
mov
js
popa
jo
adc
pop
sub
sub
adc
jns
ficompl
gs
inc
push
imul
push
popa
jbe
sub
inc
push
xor
and
jae
inc
jae
es
sarl
and
dec
cmpsl
mov
shll
sar
sbb
mov
aaa
mov
bound
ja
push
push
dec
dec
outsl
inc
jge
aam
jns
inc
stos
cmp
lahf
enter
mov
cmpsl
xor
inc
pop
frstor
and
shll
cmpsb
fucomi
insl
filds
insl
jo
loop
int
dec
jo
aam
mov
mov
sbb
push
loopne
dec
mov
insb
jo
inc
mov
jae
scas
mov
ret
std
sub
mov
mov
mov
xlat
sti
inc
mov
leave
jae
inc
xchg
lret
inc
mov
jne
cld
pop
jns
mov
cmp
insl
push
dec
jb
ds
inc
inc
push
enter
fwait
outsb
push
mov
outsl
bound
jno
js
pop
pop
out
mov
dec
outsl
outsb
mov
mov
dec
cmp
jnp
add
fdivrl
shlb
das
xor
sub
sub
repnz
xor
leave
cmp
mov
das
jo
jb
inc
frstor
mov
and
fidivl
xor
cmp
lretw
pop
aam
test
sbbb
push
cld
js
or
loop
stos
stc
pop
insl
gs
shlb
sbb
insl
jge
mov
lret
push
jg
loop
iret
lods
cmp
andb
pushf
test
pop
or
out
insl
fnstenv
insb
mov
imul
pop
pusha
xorb
jne
out
inc
xlat
jae
cmp
insb
jae
sti
mov
mov
sbb
adc
insb
mov
mov
push
test
insb
lret
and
lahf
rcr
dec
mov
mov
test
dec
jae
adc
mov
arpl
stc
fmull
cltd
inc
movsb
sub
jne
dec
out
fwait
mov
test
inc
cmp
push
inc
imul
or
push
out
xor
jb
inc
shlb
jbe
les
popf
push
aas
dec
pop
shrl
add
fs
push
push
pop
daa
and
dec
push
jae
inc
out
push
jne
and
mov
mov
imul
jae
pop
and
inc
push
ljmp
push
dec
jecxz
mov
je
call
dec
iret
xchg
imul
imul
ret
outsb
push
fidivl
mov
outsl
dec
out
xchg
jp
icebp
imul
inc
rcrl
push
pop
les
aaa
test
icebp
mov
daa
pusha
hlt
testl
hlt
jmp
subb
mov
cmpsb
sub
adcl
add
rcrl
push
lods
arpl
cmp
mov
mov
ss
jno
outsl
jae
pop
shlb
push
inc
popa
lret
aam
hlt
pusha
xor
xchg
shll
imul
out
pop
add
jne
push
aam
in
scas
jb
sub
cmc
mov
imul
cmpsb
sub
mov
add
aam
cmpb
inc
xchg
out
cmpsb
cs
push
jae
and
popf
lcall
ljmp
cld
adc
std
xchg
sbb
cmp
loopne
jbe
dec
dec
push
lcall
lcall
cmpsb
daa
inc
sbb
imul
popa
pusha
je
loope
push
bnd
jae
mov
hlt
mov
dec
stos
stc
fidivs
xchg
fwait
mov
insl
push
enter
inc
fs
mov
jp
cli
outsl
pop
fldenv
jl
into
aas
aas
jge
std
cmp
cltd
adc
xchg
inc
push
sub
aas
scas
push
pushf
in
fnstcw
iret
jne
dec
imul
mov
iret
pop
push
sub
iret
iret
fcos
cwtl
xchg
scas
pusha
cmpsl
ds
outsb
pop
rorl
jno
enter
gs
int
adc
jge
xlat
fnstenv
icebp
pop
lret
sub
cli
cmc
imul
cltd
xchg
sub
test
push
dec
inc
test
cmp
mov
incb
jge
add
push
inc
and
push
push
dec
push
dec
and
dec
inc
jmp
adc
and
inc
dec
dec
adc
mov
pop
jo
test
xor
xor
pop
data16
lret
xor
and
push
push
mov
xor
out
movsb
jae
or
pop
adc
or
out
and
add
or
subb
sub
push
push
push
add
xchg
orb
add
xor
pusha
push
cmpsb
jle
and
jge
or
xchg
pop
mov
xor
push
xor
adc
xchg
jle
call
jns
ficoml
pop
sub
nop
add
jle
pop
inc
inc
inc
or
shlb
adc
cmp
jo
sbb
jp
in
sbb
scas
xor
pop
loope
inc
jp
mov
in
jecxz
lea
xor
or
adc
mov
add
cs
and
aas
lea
imul
mov
lea
pop
mov
lahf
add
movsl
or
mov
gs
add
cltd
pop
jo
jo
arpl
and
mov
push
int
add
push
lret
jno
fwait
es
mov
inc
mov
xchg
roll
loop
dec
mov
xor
sbb
or
mov
add
adc
fldcw
cmc
add
icebp
sbb
pusha
mov
jmp
out
test
or
dec
je
ret
je
add
jne
rcll
mov
add
jo
cli
jecxz
mov
rcrl
cmpb
add
clc
pop
ficompl
sbb
push
sub
pop
insl
jmp
or
or
jno
popa
fdivrs
dec
jmp
lea
lods
or
loope
push
fcomps
add
je
inc
test
cltd
outsb
push
call
add
push
out
or
or
test
inc
push
pop
push
das
jmp
aaa
movsb
mov
sahf
and
pop
jne
jae
or
int
and
bound
insb
jg
dec
xor
les
inc
ret
test
add
js
imul
js
mov
add
sbb
test
aad
es
sub
xor
arpl
inc
stc
sub
jmp
sub
lock
insl
dec
push
pusha
clc
cmpsl
addr16
clc
mov
es
cmpsb
orb
mov
movsl
push
or
dec
sbbb
das
arpl
lea
adcb
push
or
or
popa
nop
sbb
mov
and
and
aas
mov
push
ss
nop
daa
outsl
fildl
xchg
imul
mov
rcll
lret
inc
dec
inc
add
dec
stos
int
pop
pop
push
pop
add
popa
cs
mov
insl
and
stc
push
mov
out
inc
push
mov
test
mov
push
out
sarl
daa
adc
add
or
cmp
lcall
push
pop
popa
sbb
popa
fs
add
lods
int3
mov
mov
sahf
stos
test
mov
repz
insb
fs
repz
add
cmp
lods
inc
xor
outsl
inc
in
xchg
and
jne
push
push
popa
fs
lahf
sti
mov
pop
shlb
jo
aam
and
sbb
jge
out
cltd
rorb
jno
fs
xor
and
mov
cmpsb
adc
xchg
jae
cmpb
fildl
fwait
lret
lcall
mov
inc
inc
std
inc
outsb
syscall
popf
sbb
sbb
in
outsl
arpl
gs
push
insb
mov
push
adc
data16
je
loope
rep
pop
fildll
dec
push
pop
das
test
outsb
cmpl
mov
imul
mov
imul
je
rclb
arpl
and
lahf
push
fistl
in
imul
sub
popf
lcall
dec
jb
or
and
and
fwait
jae
xor
out
sub
mov
aad
add
cmpsl
xor
and
or
jo
ret
popa
rclb
fldenv
fdivl
xor
data16
popa
or
jg
repnz
bound
and
ljmp
add
movsl
popa
dec
movsb
data16
or
jle
es
outsl
in
imul
cmp
inc
mov
dec
jno
arpl
jo
repz
adc
shll
adc
dec
cltd
imul
movsb
cmp
jns
jle
arpl
loope
in
adc
pusha
xchg
stos
popf
mov
mov
rep
stc
or
pusha
xchg
and
xchg
mov
cmpsb
lea
int3
aam
dec
hlt
and
imul
popf
or
pop
sbb
gs
sub
iret
mov
inc
fs
mov
insb
stos
aad
sbb
ljmpw
push
je
and
sub
cmpsb
pushf
fiaddl
out
xor
scas
sbb
mov
iret
mov
mov
mov
and
hlt
jg
mulb
push
dec
in
int3
outsb
divl
jle
push
cmp
and
push
int3
mov
fwait
pop
fnsave
push
ljmp
xor
adc
pop
adc
xor
pop
gs
cmpsb
push
lea
cmpl
data16
push
mov
sbb
rcrb
cltd
ret
add
mov
cmp
fcmove
cmpsb
std
out
fidivs
ret
add
fs
mov
xlat
repnz
push
fucom
push
push
faddl
mov
mov
orl
mov
subl
pop
mov
jne
pop
xchg
dec
into
lds
mov
xchg
mov
adc
mov
xor
dec
jae
outsb
inc
dec
movsb
pushf
xchg
cmp
imul
gs
or
lcall
jb
sbb
add
xor
shrl
inc
jne
rorb
fldcw
mull
cmpsb
jp
stos
add
xor
imul
pushf
mov
lds
lret
and
nop
repz
jne
jge
subl
movsl
xor
jmp
aaa
lea
rcrb
movsb
lcall
lds
je
jae
hlt
cmp
hlt
mov
cmp
cmpb
cmc
imul
das
jnp
adc
leave
mov
sti
aam
cmp
mull
movsl
sub
popf
push
inc
push
in
push
xchg
loop
xor
pop
fdivl
sub
sub
xchg
arpl
data16
dec
mov
xor
sub
mov
ret
mov
ss
dec
outsl
cli
bound
push
ljmp
insb
jns
add
gs
fs
xchg
fs
arpl
lock
imul
nop
ljmp
push
xor
pushf
orb
dec
xchg
aam
push
mov
popf
clc
and
add
imulb
bnd
push
sti
xor
mov
rclb
dec
ret
lret
sbb
inc
scas
xchg
sub
shrb
xor
test
sbb
shl
xchg
mov
aam
stc
push
push
xchg
fnstcw
repz
xor
dec
jmp
mov
xchg
negb
jno
xor
sub
outsl
out
add
je
add
sarb
int3
add
dec
arpl
mov
fcompl
bound
cmc
ds
cmp
pop
pop
and
sbb
lret
pop
sub
cltd
add
xlat
cmp
inc
jmp
dec
adc
pop
dec
adc
sub
jl
imul
cmp
cs
ljmp
mov
sub
and
cmp
sbb
jae
daa
pop
xor
push
add
and
dec
push
push
dec
jnp
orb
add
ja
iret
ljmp
inc
lock
lds
sbb
inc
push
push
and
pop
pop
cs
xchg
mov
ljmp
add
movl
push
xor
lods
mov
inc
icebp
inc
aas
ret
fstpt
scas
mov
or
push
inc
push
ds
lock
inc
pop
jge
cmc
icebp
mov
fnstenv
xor
fs
adc
lods
jbe
in
adc
hlt
fistpll
push
mov
sbb
mov
stos
xchg
jne
fs
in
pop
and
push
mov
adc
cmp
inc
xor
inc
repnz
into
add
push
jae
cmp
pop
adc
push
inc
push
jge
ljmp
test
sti
sbb
jecxz
push
addr16
aad
iret
repz
aam
mov
repz
xorb
dec
cld
cmp
repz
and
add
out
icebp
cld
aam
loopne
jns
out
shlb
sahf
out
je
pop
dec
sahf
out
sahf
inc
xor
adc
cmp
repz
shl
in
enter
iret
repz
xchg
test
aas
iret
rep
pusha
push
inc
sub
iret
iret
repz
lock
out
les
sahf
out
jl
pusha
push
sahf
out
sahf
inc
xor
and
iret
jecxz
or
shl
call
iret
repz
iret
repz
dec
iret
repz
cmp
adc
sahf
out
sbb
shr
aam
mov
lods
mov
sbb
sub
rol
loope
cmp
shlb
sbb
or
cmp
xchg
iret
lock
in
fmul
int3
xchg
loope
iret
ror
iret
movsb
iret
xchg
iret
jo
sbb
test
js
insb
iret
pop
iret
push
iret
out
push
idivl
and
jecxz
sahf
adc
lock
loopne
cmp
repz
lods
pushf
nop
test
iret
repz
icebp
cmp
sub
cld
int
sahf
out
sahf
mov
out
pushf
nop
test
push
out
sahf
out
cmp
adc
repz
in
cmp
repz
mov
pushf
mov
iret
repz
pop
dec
inc
iret
repz
xor
sbb
out
jns
lock
loopne
les
pushf
mov
sahf
out
fs
dec
cmp
and
js
out
or
hlt
lret
repz
les
cmp
test
pop
inc
jns
iret
repz
leave
in
out
sahf
out
mov
out
sahf
xorb
inc
sahf
out
jns
sub
add
repz
enter
mov
repz
repz
repz
push
inc
xor
icebp
cmp
sbb
hlt
call
shlb
cwtl
mov
jns
out
inc
xor
sbb
repz
loopne
cmp
repz
mov
repz
repz
out
cmp
or
hlt
sahf
out
sahf
rol
mov
out
mov
pop
dec
jecxz
sahf
out
and
or
iret
repz
lock
mov
cmp
repz
je
push
dec
cmp
cmp
repz
or
hlt
ret
stc
jns
call
out
sahf
out
cwtl
mov
out
sahf
pusha
push
inc
xor
iret
jecxz
jle
or
ret
cmp
repz
shlb
iret
repz
push
inc
xor
icebp
cmp
and
add
shr
out
sahf
fmul
shlb
mov
push
out
sahf
out
xor
adc
iret
repz
clc
shr
rol
cmp
repz
mov
repz
repz
inc
xor
sbb
jno
iret
or
hlt
mov
jns
int3
shlb
nop
xorb
out
sahf
out
xor
adc
repz
hlt
mov
cmp
repz
movsb
pushf
nop
test
cmp
rep
pusha
push
dec
inc
repz
xor
sbb
clc
mov
les
mov
push
pop
push
dec
cmp
jecxz
sahf
and
or
mov
cmp
fmul
shlb
mov
iret
repz
push
dec
cmp
or
mov
jns
out
mov
test
jns
out
je
pop
push
sahf
out
sahf
inc
cmp
adc
iret
jecxz
add
mov
repz
repz
cwtl
mov
iret
iret
jo
pop
dec
cmp
repz
xor
or
mov
lock
enter
out
pushf
mov
jns
out
cmp
and
iret
repz
loopne
cmp
repz
mov
cwtl
mov
iret
rep
pusha
push
inc
xor
icebp
cmp
and
add
mov
sahf
out
sahf
shlb
mov
dec
jecxz
sahf
out
sub
or
mov
repz
lock
rol
cmp
repz
test
test
cmp
repz
dec
cmp
sbb
jno
iret
adc
mov
fdiv
and
dec
inc
push
add
aaa
add
dec
push
inc
or
dec
dec
dec
inc
inc
dec
push
push
sub
inc
push
push
dec
lret
ret
inc
inc
xor
dec
popf
or
pop
dec
dec
inc
inc
dec
inc
push
outsl
add
jge
xor
xor
jb
daa
lock
push
push
push
dec
mov
rcll
xor
test
sub
inc
push
mov
xor
push
pop
mov
or
inc
dec
push
inc
push
dec
inc
outsl
or
imul
push
inc
inc
pop
and
out
push
pop
into
repnz
adc
push
dec
sti
dec
out
popf
jecxz
lods
dec
push
inc
jb
and
jecxz
pop
sub
aam
push
cmp
push
push
cmc
pushf
xor
aad
cli
cmp
or
push
or
out
inc
dec
sahf
bound
push
mov
mov
fstpl
xchg
jnp
inc
inc
fists
dec
sub
cmpsl
out
push
pop
es
decl
fdivl
xchg
dec
pop
fistpll
mov
jae
dec
push
shl
xor
into
out
mov
out
js
dec
push
pop
nop
loopnew
dec
push
push
inc
dec
or
xor
inc
dec
push
inc
inc
inc
cmp
push
enter
inc
inc
jb
xchg
jge
fs
lahf
jns
sbb
push
mov
daa
inc
xorb
dec
cmp
push
push
fbld
lret
mov
pushf
jb
cmp
pushf
fadd
pop
jns
lds
dec
lret
sub
out
lcall
jmp
push
inc
dec
adc
pop
mov
outsb
adcb
xor
mov
inc
cli
inc
outsb
xchg
xor
jne
outsl
pop
sub
push
pushf
loop
jle
xor
pop
mov
or
iret
bound
ret
rcpps
inc
dec
inc
outsb
scas
adc
add
fsubrl
faddl
jb
cltd
and
push
ljmp
gs
in
push
iret
dec
iret
lods
mov
pop
out
lcall
faddl
xor
outsl
push
call
sub
xor
or
lock
push
mov
lret
or
push
push
push
dec
pop
outsb
sub
dec
pop
and
insl
dec
dec
stc
mov
fwait
xor
mov
mov
dec
out
pop
test
and
push
test
adc
pop
fsubrp
iret
sub
mov
daa
inc
inc
sub
inc
dec
xor
inc
inc
dec
dec
divl
sbb
xor
cmp
sub
fsub
imul
lret
sub
and
mov
push
pop
push
jnp
orb
cmp
lahf
pop
pop
xlat
adc
jge
loopne
xchg
pop
cltd
fld1
xchg
pop
push
add
enterw
int3
int
ss
mov
xor
out
in
dec
ror
jg
push
xchg
iret
jnp
inc
mov
out
int
lea
testl
clc
aad
cmp
cmpb
out
pop
xor
icebp
fcompl
daa
xor
bound
test
xor
mov
cmp
mov
inc
sub
rolb
push
push
pop
pop
pop
adc
mov
sbb
inc
aam
lods
or
push
int
lds
sub
mov
pop
jmp
mov
adc
push
pushf
loop
call
adc
dec
fwait
hlt
imul
xor
orl
lcall
sbb
pop
es
insl
mov
pop
inc
push
outsl
and
pop
push
lea
xor
push
inc
out
cli
inc
mov
push
popf
iret
mov
mov
and
mov
into
ror
jo
inc
push
lcall
aam
lret
sbb
or
dec
lret
xchg
stc
jno
push
jge
lea
xchg
cmp
inc
dec
inc
inc
inc
xor
sub
outsl
leave
dec
push
pmulhuw
fisttps
sahf
dec
xor
pop
mov
outsb
xor
inc
jo
lahf
jnp
jg
in
xchg
inc
insl
push
in
jle
push
inc
push
int3
sub
mov
inc
aaa
aas
outsl
iret
inc
xor
push
inc
mov
sub
sbb
push
inc
pop
jl
mov
push
inc
fcoml
test
cmp
jmp
pop
aam
aaa
cmp
adc
push
int3
or
lea
arpl
fwait
push
mov
pusha
inc
sub
push
fwait
in
sbb
push
push
pop
dec
adc
jnp
pop
xor
insl
ror
xor
push
in
inc
push
inc
push
dec
mov
test
xor
xlat
mov
inc
fdivrl
dec
mov
ja
push
dec
pop
sti
xor
pushf
inc
pop
xchg
jae
cmp
xchg
insb
fs
jae
popf
mov
cwtl
loop
ja
shll
sbb
outsl
shl
lds
xchg
shrl
sbb
mov
xor
filds
ret
push
out
cmp
cmp
push
dec
or
lds
shrb
repz
sarl
mov
dec
mov
or
pop
mov
inc
pop
into
aad
push
inc
dec
mov
xor
aaa
pop
xchg
pop
sahf
mov
daa
add
iret
jae
sbb
cmp
cmp
pop
out
adc
lock
pop
aaa
ss
xor
xor
add
lea
pushf
les
xor
mov
aaa
repz
cmpsl
std
sbb
cmpsl
fmuls
sub
rorb
push
push
fistps
in
sub
or
pop
ret
jne
cmp
push
jmp
or
or
jl
pop
mov
popa
pop
or
push
dec
ret
pusha
pop
inc
inc
dec
push
ja
and
pop
or
jge
add
in
int
push
xor
xchg
pop
lock
inc
outsb
stos
scas
jno
jnp
loop
mov
xchg
mov
int3
cltd
mov
addr16
xchg
jae
stc
xchg
test
pop
sbb
lret
call
mov
sbb
mov
xchg
clc
imul
faddl
cltd
cltd
out
dec
shll
inc
dec
iret
mov
sub
xor
push
pop
mov
pop
rcrb
jns
fildll
pop
pop
stc
dec
cmp
js
rcrl
pop
xor
movb
aaa
notl
mov
out
lret
xor
mov
in
jl
mov
dec
hlt
mov
and
push
pop
dec
push
sub
enter
adc
jns
into
inc
int3
je
arpl
xchg
pop
test
inc
lret
jae
xor
leave
idivb
lret
jmp
inc
aad
dec
mov
lods
jne
filds
cmp
pushf
test
push
sub
insl
mov
cmp
adc
fdivl
out
addb
rcrb
pop
lea
pop
pop
inc
cmp
shrl
cmp
pop
shl
mov
xor
inc
rcrl
push
dec
push
xor
arpl
xchg
stos
int3
and
dec
xchg
push
mov
inc
xor
mov
in
ds
loopne
mov
inc
dec
pop
pop
into
lret
testl
inc
dec
movsl
or
jecxz
push
je
mov
dec
pop
dec
mov
nop
dec
lahf
jl
aam
xchg
sti
mov
sub
lret
sub
sbb
popa
movsb
inc
fcomi
mov
jmp
and
mov
sub
xor
pop
xor
ja
mov
dec
lahf
sbb
arpl
rcrb
repz
push
repz
inc
xor
push
aaa
imul
xlat
push
and
out
xor
mov
cli
inc
jmp
sub
fldt
dec
dec
inc
dec
push
jb
enter
or
push
cmp
or
jnp
retw
enter
jg
pop
inc
sbb
repz
shrl
sahf
sub
jecxz
dec
xchg
sbbb
mov
lret
cltd
pop
into
and
sub
xor
cmp
rcll
enter
and
mov
into
xchg
outsb
rorb
iret
sub
jmp
cmp
sbb
fisttpl
pop
mov
sbb
popl
dec
loop
jne
pushf
jne
inc
push
push
push
sub
mov
data16
dec
sub
xor
out
jae
daa
movsl
ret
rolb
inc
lods
mov
push
push
and
cmp
lods
outsl
or
movb
inc
xorl
stos
fstl
lods
jae
ljmp
icebp
xor
rclb
push
cmp
xchg
push
sbb
pop
push
scas
cmpsl
xchg
push
jb
push
push
sbb
pop
lods
dec
sbb
out
dec
scas
jb
inc
sbb
jle
pop
iret
push
fnsave
inc
dec
inc
push
sbb
lcall
lcall
int3
cwtl
dec
pushf
pop
dec
cli
inc
mov
pushf
mov
fstps
bound
xor
cmc
sub
dec
pop
dec
push
xlat
and
movsb
pop
dec
push
push
xor
in
ret
xchg
sti
dec
shll
cld
push
inc
push
push
xor
sub
addr16
lahf
movsb
std
pop
xchg
mov
test
inc
aaa
int
xchg
ror
je
inc
dec
subl
dec
xchg
jecxz
pop
xchg
mov
in
push
add
jae
adc
pop
inc
dec
int
fdivl
outsb
xor
push
push
inc
pop
jmp
lret
mov
sub
mov
cwtl
in
xor
add
xchg
jb
dec
push
dec
std
testl
push
aaa
mov
pop
push
inc
jnp
in
shlb
pushf
adc
out
sub
out
mov
jae
out
jb
mov
push
test
in
mov
add
lods
sbb
mov
aad
push
mov
xor
mov
push
js
jno
out
iret
dec
and
ja
inc
inc
pop
daa
push
fadd
mov
mov
mov
inc
das
mov
in
xor
xor
mov
int
cmp
fsubrs
push
push
ret
push
xchg
lcall
push
xchg
sti
cmp
dec
stos
inc
mov
call
ds
out
mov
lods
jno
mov
pop
imul
push
jle
stos
test
jns
fidivl
iret
test
or
sub
push
mov
inc
insb
daa
inc
loope
popa
ja
jnp
bound
push
in
rcrl
inc
mov
lods
mov
ss
in
jecxz
cmp
rcrl
dec
cmpsl
les
testb
pop
into
shrl
inc
push
bound
mov
cmp
adc
mov
in
das
rclb
pop
shll
fdiv
inc
pop
repz
cmp
inc
inc
into
flds
jg
out
or
add
insl
sbb
inc
pop
int3
xlat
dec
lods
inc
or
bound
mov
loop
cwtl
push
dec
push
mov
sbb
dec
push
adc
shll
sub
imul
aaa
mov
pop
cltd
out
mov
push
fstpt
fcoml
bound
adc
mov
nop
inc
cmp
push
mov
pop
xlat
or
and
push
inc
insl
mov
test
mov
lods
jns
inc
inc
dec
xor
and
mov
dec
stos
mov
inc
filds
cs
addr16
scas
mov
in
divb
mov
cmpsb
arpl
fs
or
stc
cmp
jl
mov
jb
sub
in
out
mov
push
push
mov
in
sub
or
dec
fistps
inc
cli
fidivrl
pop
xchg
inc
lahf
dec
out
pop
lock
cmp
iret
jmp
pop
dec
push
lahf
outsl
jmp
aaa
addr16
mov
je
test
jb
push
out
fistpll
mov
push
scas
inc
or
iret
mov
cs
lahf
lcall
mov
aad
add
xor
push
je
fwait
dec
push
pop
inc
push
push
sahf
jae
xchg
scas
and
push
icebp
push
dec
imul
rcrl
push
mov
lahf
push
sub
addr16
in
jae
or
aas
hlt
lcall
out
xor
fs
dec
out
out
stos
inc
cwtl
adc
ss
pop
xchg
stos
lret
loop
adc
push
test
test
adc
popf
fists
out
ret
and
imul
pop
stos
xor
or
or
fildll
add
test
pop
inc
imul
cld
scas
and
into
out
cld
and
pop
out
cld
into
out
es
out
cld
into
sub
out
cld
pop
cmp
out
daa
pusha
into
jle
cs
lret
and
mov
cld
into
and
cld
into
out
cld
and
into
out
sub
sub
pop
cld
into
out
cld
cmp
into
out
pusha
jle
test
into
and
xchg
add
xlat
cmp
out
jle
inc
and
jle
ja
pop
es
out
sub
out
pop
cmp
aas
daa
ja
out
pusha
jle
adc
or
cs
out
jle
and
or
push
sub
std
scas
repz
into
pushf
pushf
out
cld
scas
sti
and
ja
into
and
out
jle
and
popf
fbstp
and
sbb
stc
and
clc
and
or
test
and
inc
dec
dec
xlat
test
adc
jle
cwtl
shrl
dec
mov
loop
xor
mov
push
push
call
push
ret
pop
push
jo
jns
in
sub
jmp
or
pop
dec
jl
cld
sahf
addl
cs
stc
mull
inc
mov
cmp
rcrb
cmpsl
push
push
aaa
sbb
sub
mov
push
xchg
add
fadds
push
jo
mov
aam
addb
mov
out
push
jne
jo
arpl
in
or
lret
cmp
and
inc
xorb
ds
std
push
dec
insb
adc
pop
add
cmp
or
jmp
or
mov
arpl
adc
shlb
dec
jbe
pop
addb
mull
cmp
push
sub
leave
mov
leave
adc
mov
or
clc
dec
pop
cltd
or
xchg
mov
les
adc
pop
pop
pop
xchg
push
inc
sahf
inc
or
movsl
ds
lea
nop
cmpsl
add
imul
push
xchg
scas
lock
xchg
xchg
mov
add
out
arpl
lods
lahf
lods
addr16
shrl
inc
push
xchg
lret
mov
or
and
arpl
fiadds
out
pop
pusha
in
adc
cmpsl
and
gs
mov
add
push
insb
rorb
push
subl
int3
fiaddl
or
xor
inc
add
add
test
pop
xchg
loope
lods
aas
pop
loope
gs
lods
fcmovne
dec
fistpll
mov
out
lods
lods
cmp
xchg
ret
ja
push
jo
shl
nop
mov
inc
pushf
push
or
movsl
xor
inc
pop
leave
pop
add
add
imul
fstps
call
mov
arpl
cwtl
stos
loop
sub
pushf
inc
fiadds
add
fwait
pmuludq
add
fwait
jne
jo
scas
mov
call
jo
testl
fwait
je
rorl
lahf
mov
lock
xchg
mov
cmp
sub
cmp
sbb
jecxz
adcb
inc
int3
out
sub
lock
jns
int3
les
jns
mov
cwtl
nop
out
sahf
ret
mov
jns
insb
push
sahf
out
dec
inc
cmp
sub
jle
lahf
out
and
or
jecxz
or
inc
clc
lock
loopne
rol
mov
mov
mov
repz
je
fs
push
repz
repz
inc
cmp
repz
repz
and
adc
rcrb
cld
aas
mov
push
fxtract
in
out
sahf
out
fmul
rcl
jnp
mov
dec
repz
mov
push
and
out
sub
push
dec
inc
sahf
out
sahf
cmp
and
adc
jecxz
or
hlt
ds
in
repz
repz
mov
cmp
test
cwtl
nop
mov
repz
js
push
iret
repz
dec
inc
cmp
repz
and
or
sahf
out
sbb
cmp
jns
out
enter
movsb
pushf
out
sahf
out
mov
sahf
jo
pusha
push
dec
jns
out
inc
cmp
and
repz
out
clc
cmp
call
iret
fcom
enter
iret
repz
lods
test
cwtl
mov
cmp
repz
pop
iret
repz
push
dec
inc
cmp
cmp
repz
and
adc
add
icebp
clc
cmp
call
sahf
out
enter
sahf
out
sahf
movsb
cwtl
nop
mov
js
push
jns
out
cmp
sub
jecxz
sahf
adc
add
cmp
cmp
repz
in
rol
mov
mov
movsb
pushf
xchg
iret
repz
mov
iret
repz
push
dec
inc
cmp
repz
repz
and
adc
jno
iret
or
clc
cmp
in
out
sahf
int3
sarb
jns
mov
mov
sahf
out
jl
insb
fs
out
sahf
pop
push
dec
inc
cmp
sahf
out
xor
and
or
repz
jecxz
cmp
in
loopne
iret
repz
int3
les
cmp
pushf
nop
mov
cmp
repz
iret
repz
inc
cmp
and
push
repz
or
cld
aaa
lock
out
in
aam
sarb
test
nop
mov
js
push
jns
dec
inc
cmp
jecxz
sahf
out
adc
add
ss
repz
lock
iret
repz
mov
repz
repz
repz
pop
push
dec
inc
cmp
iret
repz
and
adc
add
icebp
hlt
xor
out
sahf
out
mov
out
sahf
cwtl
nop
mov
jns
fs
push
dec
cmp
inc
cmp
xor
sub
leave
loope
xor
lret
arpl
sub
add
repz
cld
xor
call
cmp
int3
les
rep
cwtl
mov
jo
pop
push
dec
cmp
repz
cmp
and
adc
repz
xor
call
out
int3
enter
out
sahf
lods
mov
sahf
out
jl
insb
fs
push
out
sahf
out
inc
cmp
ret
mov
add
repz
xchg
xor
in
in
repz
enter
iret
repz
test
cwtl
mov
xor
loope
xor
xor
repz
dec
inc
cmp
sub
cmp
repz
adc
cld
xor
jns
lock
out
sahf
enter
test
sahf
out
mov
je
jns
out
pusha
pop
push
inc
sahf
out
sahf
cmp
sbb
iret
jecxz
add
xor
lock
repz
mov
cmp
mov
cmp
repz
push
repz
repz
cmp
sub
repz
sbb
or
clc
das
sahf
out
push
lock
sahf
out
enter
test
out
sahf
out
mov
jns
push
jns
out
cmp
sbb
repz
jecxz
cs
int3
iret
repz
les
repz
nop
mov
repz
repz
dec
inc
cmp
repz
xor
and
adc
icebp
cmp
add
sub
out
fcom
les
out
cwtl
mov
sahf
insb
fs
push
dec
jns
out
inc
cmp
sub
sbb
js
out
or
cld
sub
iret
repz
call
cmp
repz
mov
movsb
pushf
xchg
repz
repz
cmp
fs
dec
inc
cmp
repz
and
adc
add
icebp
hlt
sub
loopne
shl
jns
out
sarb
sahf
mov
jns
out
je
fs
push
dec
out
sahf
out
cmp
sub
mov
jns
sbb
or
clc
sub
repz
call
repz
repz
iret
repz
mov
repz
pop
push
dec
inc
inc
repz
repz
and
adc
jno
iret
or
clc
sub
call
int3
les
lods
movsb
pushf
xchg
mov
sahf
out
js
ret
test
dec
push
loope
sub
repz
repz
sbb
or
jno
iret
add
hlt
sub
in
out
sahf
int3
shlb
xchg
mov
je
fs
pop
sahf
out
sahf
push
dec
cmp
sub
sahf
out
and
adc
daa
lock
repz
iret
repz
sarb
repz
test
pusha
repz
repz
push
dec
inc
cmp
repz
sub
sbb
sahf
out
sbb
es
in
loopne
jns
out
ror
sarb
out
pushf
xchg
mov
jns
je
fs
push
jns
out
dec
cmp
sub
repz
out
cld
and
repz
int3
les
movsb
pushf
xchg
mov
je
pusha
pop
push
iret
repz
inc
cmp
sub
sbb
repz
adc
add
and
sahf
out
hlt
in
in
aam
out
sahf
out
shlb
cwtl
nop
mov
jns
push
out
sahf
out
cmp
sub
sahf
out
sahf
and
adc
add
repz
and
call
cmp
repz
test
repz
mov
cmp
repz
push
repz
repz
cmp
sub
mov
aam
iret
jae
push
adc
add
and
call
out
rol
mov
jns
out
mov
sahf
push
jns
out
inc
cmp
sbb
repz
and
call
ror
sarb
cmp
mov
mov
iret
xrelease
repz
pusha
push
dec
inc
cmp
iret
repz
sub
sbb
or
repz
and
call
out
int3
sarb
test
cwtl
nop
mov
out
xorb
pop
out
sahf
out
dec
cmp
sub
out
sahf
and
or
cld
pop
cmp
repz
lock
cmp
repz
cmp
pushf
xchg
mov
je
fs
pop
push
repz
repz
cmp
sub
repz
sbb
or
clc
push
sahf
out
push
lock
sahf
out
enter
movsb
cwtl
out
sahf
out
mov
jns
fs
push
dec
inc
jns
out
cmp
xor
and
repz
sbb
cmp
loopne
ror
sarb
cmp
mov
mov
iret
repz
fs
repz
pop
push
dec
cmp
sbb
repz
and
cld
sbb
sahf
out
hlt
in
in
aam
out
sahf
out
sarb
sahf
mov
jns
out
js
push
jns
out
cmp
and
jecxz
sahf
adc
add
sbb
cmp
repz
in
in
aam
repz
repz
cmp
cwtl
mov
cmp
fs
push
push
inc
repz
repz
sub
icebp
cmp
adc
add
sbb
sahf
out
sahf
in
aam
sarb
jns
lods
movsb
cwtl
nop
mov
jns
out
js
push
sahf
pop
push
dec
inc
cmp
out
xor
adc
add
cmp
jecxz
sbb
in
loopne
iret
repz
int3
les
repz
nop
mov
iret
repz
loop
adc
cmp
sbb
xor
loop
rclb
sbb
repz
lock
int3
les
mov
xchg
loope
movsb
sbb
jo
sbb
test
jl
js
insb
sbb
sahf
ret
loop
push
dec
inc
out
sahf
out
xor
and
iret
jecxz
sahf
adc
pop
lock
iret
repz
int3
sarb
repz
iret
repz
jl
insb
pusha
pop
cmp
repz
dec
inc
xor
sbb
cmp
repz
add
push
lock
sahf
out
enter
jns
mov
movsb
pushf
xchg
jns
out
mov
jns
out
push
dec
inc
cmp
out
sahf
xor
and
adc
jecxz
or
cld
adc
cmp
repz
shlb
cwtl
nop
mov
js
push
cmp
repz
cmp
sub
icebp
cmp
adc
add
adc
sahf
out
sahf
call
jns
out
mov
mov
jns
out
jl
insb
fs
out
sahf
pop
push
dec
inc
cmp
sahf
out
xor
sub
and
jecxz
sahf
out
or
clc
adc
iret
repz
in
enter
iret
repz
test
xchg
mov
je
fs
iret
repz
push
dec
inc
cmp
cmp
repz
and
adc
cld
jns
out
adc
in
in
aam
jns
out
shlb
pushf
xchg
mov
jns
fs
push
push
dec
out
sahf
out
cmp
and
iret
jecxz
sahf
adc
adc
call
int3
les
mov
push
xchg
jno
adc
adc
jo
sbb
adc
push
adc
xchg
dec
adc
cmp
cmp
repz
and
adc
cmp
or
aam
adc
xchg
lock
adc
adc
adc
loope
cmp
adc
adc
adc
push
xchg
xchg
adc
test
js
jo
push
push
pusha
adc
inc
sahf
out
sahf
cmp
sub
sbb
jecxz
adc
clc
in
repz
repz
sarb
movsb
pushf
xchg
mov
js
push
iret
repz
dec
cmp
sub
repz
and
adc
add
push
lock
out
ror
shlb
cwtl
nop
mov
out
sahf
push
jns
out
inc
cmp
sub
sbb
js
out
or
clc
or
iret
call
cmp
repz
mov
repz
xrelease
fs
repz
pop
push
dec
inc
cmp
repz
and
adc
add
icebp
clc
or
in
aam
jns
out
sarb
mov
xchg
ret
push
jnp
insb
sahf
out
cmp
or
push
inc
jns
out
cmp
sub
sbb
jns
mov
add
or
or
fsub
jns
out
int3
les
sahf
mov
loope
lea
insb
or
cmp
xchg
or
or
cmp
popa
jno
sub
sbb
iret
repz
cld
or
in
jns
out
int3
shlb
xchg
mov
je
fs
push
dec
out
sahf
out
cmp
sub
mov
jns
sbb
or
clc
or
repz
call
repz
repz
iret
nop
mov
jae
inc
rorl
pop
iret
repz
push
dec
inc
cmp
iret
repz
sbb
or
hlt
jns
out
or
loopne
int3
shl
sahf
out
mov
mov
sahf
nop
mov
out
fs
push
dec
inc
cmp
jns
out
sub
sbb
iret
repz
call
cmp
enter
test
cmp
repz
iret
repz
jo
pusha
pop
dec
cmp
repz
cmp
xor
and
cmp
repz
or
clc
push
out
sahf
lock
out
sahf
les
les
xchg
sahf
out
cmp
test
out
je
fs
cmp
fiaddl
dec
jns
out
cmp
and
repz
add
cmp
in
aam
sarb
cmp
mov
pushf
xchg
mov
cmp
repz
pop
iret
repz
push
dec
inc
cmp
cmp
repz
and
adc
cld
jns
out
add
in
call
sahf
out
les
sahf
mov
jns
out
je
fs
push
dec
out
sahf
out
xor
and
iret
jecxz
sahf
adc
add
in
iret
repz
fcom
enter
cmp
rep
mov
repz
je
pusha
push
dec
cmp
repz
xor
and
adc
iret
repz
clc
add
loopne
jns
out
ror
shlb
pushf
xchg
mov
out
xorb
push
adc
sahf
out
inc
cmp
sbb
pushl
xor
sub
and
sbb
adc
or
cld
add
hlt
in
jns
out
in
aam
mov
out
test
cwtl
nop
sahf
out
sahf
test
fs
jns
out
dec
inc
inc
cmp
jecxz
sahf
out
or
cld
add
test
sub
lock
adc
xchg
arpl
jne
insl
bound
push
aam
enter
lods
ret
lret
push
pop
add
jno
addr16
fdivs
jae
loopne
add
jb
popa
jo
jns
outsl
jne
xor
and
outsl
outsb
jne
mov
out
mov
jae
call
inc
and
sti
mov
stc
jns
push
mov
in
fstpl
repnz
mov
gs
imul
pop
shl
arpl
jns
jp
jno
add
fcompl
add
jecxz
repz
add
xchg
jno
jo
jno
inc
outsb
into
push
cmp
bound
fidivl
lcall
shrb
mov
loope
xor
outsl
sti
mov
xchg
add
iret
iret
imul
gs
jae
jno
pop
xor
outsb
push
addr16
jb
test
outsl
mov
add
icebp
mov
mov
dec
leave
xchg
or
sub
je
sbb
xor
push
movsb
jecxz
mov
adc
add
jl
jg
mov
enter
repnz
aas
push
mov
ds
out
out
rorb
cmp
xor
xor
mov
icebp
xorps
push
xchg
in
mov
mov
pop
outsb
pop
xchg
jae
sub
cmp
jae
push
out
insl
push
sbb
loope
insb
xchg
push
sbb
loopne
inc
popa
insl
jae
jne
lret
stc
mov
jnp
push
xor
ja
outsl
push
daa
js
fistl
ljmp
mov
mov
insb
push
jae
jns
mov
mov
gs
jno
xor
inc
jp
dec
jb
out
fisttpll
gs
imul
imul
fwait
dec
fs
jb
push
jae
inc
repnz
xor
pop
push
jb
adc
arpl
sub
and
dec
adc
addr16
insl
gs
xchg
mov
icebp
mov
xchg
fbstp
out
mov
jg
jbe
imul
or
pop
jns
inc
outsl
in
pop
jo
jne
ds
xchg
imul
sarl
in
daa
movsb
push
outsl
pop
into
arpl
ret
outsl
or
adc
insl
add
pop
bound
shl
popa
dec
push
daa
insl
cmp
xlat
pop
cmp
es
inc
jl
arpl
sbb
insb
jns
ja
outsb
arpl
lahf
movsl
sahf
sti
mov
jb
push
out
or
test
xchg
dec
incl
je
push
mov
mov
push
rolb
mov
push
mov
js
sbb
imul
cltd
data16
ljmp
jae
gs
arpl
cmp
sbbb
and
bnd
push
imul
sahf
cmpsb
cltd
arpl
xor
push
jb
jmp
xchg
into
jmp
mov
cmp
cmp
js
mov
icebp
mov
imul
fdivp
cmpsl
in
sub
int3
mov
lods
idivl
mov
inc
jae
jns
inc
sbb
arpl
mov
and
inc
cmp
shrb
nop
repz
cld
push
pop
inc
sbb
std
sbb
push
fldt
stos
sbb
mov
add
repz
dec
jmp
jecxz
sbb
dec
push
push
ret
out
xchg
lahf
test
sub
jae
insl
pop
add
cmp
xor
and
rorl
iret
add
mov
or
insb
jl
push
fwait
outsb
sub
xorl
test
pop
xchg
movdqu
dec
push
push
mov
lea
add
or
test
add
cld
fdivrl
add
int3
das
das
xchg
mov
add
mov
ret
mov
sub
imul
lahf
cli
mov
push
outsl
mov
lcall
add
jns
pushf
scas
adc
cmp
jb
cmp
mov
into
rcll
adc
mov
outsl
cmp
push
lods
ret
imul
in
lcall
sub
outsl
enter
mov
movsb
les
jb
mov
int
icebp
xchg
cmp
jae
pusha
mov
mov
xchg
xlat
inc
dec
sti
je
fdivl
jmp
pop
xor
xchg
in
push
inc
sub
adc
cmp
push
outsb
outsb
sbb
lahf
leave
mov
js
jecxz
sahf
aas
adc
into
jb
cmp
bound
and
jge
mov
bound
iret
pop
dec
add
in
push
xor
popl
jno
gs
in
bound
into
sub
lods
div
in
jb
jns
mov
shlb
clc
cmp
fs
lret
sub
das
pop
aam
imul
popa
icebp
dec
cmp
imul
mov
je
pop
out
jns
out
xlat
imul
cli
xchg
movsb
sub
call
out
repz
jno
push
jl
sbb
gs
mov
sbb
fisttpl
jecxz
lea
fildl
mov
lcall
xor
cmpsl
repnz
je
out
arpl
arpl
hlt
mov
or
out
xchg
push
pop
outsl
xor
out
inc
aaa
mov
outsl
int
mov
push
jns
psllw
jno
ficoms
xor
jbe
sub
int
test
sbb
gs
cmp
xchg
sbb
fwait
and
jns
jecxz
jns
jno
inc
imul
mov
data16
ret
jae
jne
loop
loope
je
inc
imul
out
popf
pop
out
add
dec
sti
mov
repz
sbb
lea
imul
pushf
fbstp
xchg
lds
int3
pop
out
jo
cs
jecxz
dec
loop
mov
or
arpl
jbe
lret
or
fistl
int3
int3
jno
mov
test
xor
aas
inc
jecxz
push
mov
enter
mov
or
jnp
sub
data16
mov
mov
dec
push
aaa
je
push
or
into
xchg
add
cmpsb
jecxz
icebp
mov
decl
sub
stos
jl
arpl
push
shlb
cltd
mov
cmp
loope
add
aas
aaa
je
or
mov
xchg
std
pop
je
cmpsb
jecxz
add
in
pop
outsl
addr16
xor
sub
daa
jae
ljmp
imul
imulb
test
or
add
jg
repnz
jb
jo
inc
into
sbb
insb
jmp
fidivl
gs
mov
nop
insl
sub
test
aas
push
loope
pop
pop
into
out
repz
mov
imul
rcl
push
add
and
lret
int
call
insl
insb
mov
push
or
jl
push
mull
sub
jae
mov
cmp
jns
pushf
cmpsl
pop
icebp
icebp
bound
fs
popf
bound
es
inc
push
push
inc
add
insl
sbb
outsl
in
jno
pop
jae
mov
lret
in
add
repz
jno
pop
mov
pop
int3
fdivrp
outsl
mov
rorl
sbb
jne
jno
gs
mov
sahf
sbb
jecxz
push
data16
bound
lods
mov
ljmp
leave
jno
aaa
mov
push
cwtl
icebp
jno
sti
imul
pop
insl
jb
cs
shll
dec
cmpsb
mov
ds
in
insl
sbb
add
into
lret
int
inc
xchg
popa
cmp
ret
mov
insl
cmpsb
push
mov
xchg
jecxz
lea
test
sbb
mov
leave
outsb
shll
pop
mov
mov
dec
cmp
jecxz
adcl
mov
adc
loop
outsb
dec
dec
repnz
pop
cltd
pop
cmp
add
mov
lahf
mov
js
add
les
shll
aaa
addr16
push
nop
inc
inc
popa
jp
cmp
mov
cltd
andl
enter
outsl
sbb
mov
jmp
and
push
lods
and
popa
push
sbb
pushf
pop
outsb
dec
inc
in
shlb
sub
jne
mov
jno
jl
jl
add
dec
lock
jne
sarb
arpl
dec
jmp
fdivl
hlt
mov
enter
jbe
repz
mov
ss
outsl
imul
xor
jo
jno
sbb
sbb
xchg
sbb
je
pop
into
arpl
or
jecxz
mov
mov
insb
cmp
and
gs
in
inc
pop
in
jg
cmp
dec
out
test
pop
out
roll
dec
mov
fcompl
mov
leave
xor
fisubl
push
pushf
xchg
jge
jecxz
mov
or
in
mov
stc
push
jo
sbb
gs
arpl
in
mov
out
imul
fldl
sub
mov
sbb
outsl
sub
push
mov
loopne
dec
out
jp
jl
fidivl
outsb
xchg
jmp
pop
lret
jnp
jo
mov
mov
dec
dec
jmp
ret
mov
and
gs
rcll
call
push
cmp
imulb
popa
push
and
aam
jnp
jbe
ja
in
lods
push
data16
push
cwtl
in
test
inc
add
arpl
dec
imul
loopne
int3
jo
pop
shlb
dec
mov
sub
xchg
repz
xchg
in
and
push
fistl
adc
jo
lods
call
sti
mov
fld
nop
fbld
dec
adc
and
idivb
dec
shld
mov
jg
jecxz
popa
sbb
dec
xlat
xor
iret
and
mov
add
lods
jno
rorb
mov
cltd
gs
out
mov
xor
aas
mov
in
fs
jo
in
cld
pop
jae
and
enter
out
jno
dec
sub
imul
pop
les
xor
in
cmp
inc
pusha
inc
mov
js
js
test
sbb
repnz
outsl
fs
jle
sbb
adc
cmpsl
cwtl
jo
push
xchg
sbb
outsl
imul
iret
mov
outsl
mov
sbb
shrl
js
std
adc
fnstcw
outsb
lret
pushf
sbb
outsb
aam
xchg
push
in
ret
push
insb
and
push
sbb
movsb
jecxz
push
ss
mov
sbb
mov
loop
insl
inc
xchg
test
jno
dec
andb
pushf
cmpsb
mov
jb
cmp
bound
pop
adc
xor
pop
mov
pushf
sahf
outsl
mov
popa
cmp
jecxz
mov
sub
mov
jecxz
arpl
jne
js
ss
int
xchg
aas
lret
jecxz
popa
cmp
pushf
out
jb
dec
roll
dec
cmp
add
pop
xchg
jecxz
pop
mov
fsubs
dec
gs
mov
das
xchg
test
push
xlat
add
outsb
push
es
pop
int
mov
pushf
cwtl
jne
dec
cltd
lahf
fs
mov
shl
push
adc
jae
repnz
jae
fsub
and
xor
mov
mov
cmp
int3
data16
pop
adc
sub
lret
jecxz
dec
xchg
ret
pop
jae
lea
jne
mov
jno
fsubrp
dec
inc
lret
pop
popa
jbe
outsl
sbb
insl
jo
jl
cli
dec
rcll
cltd
cmp
push
jbe
ret
jns
cmpsl
imul
mov
cmpsl
imul
dec
push
xchg
mov
pop
pop
cs
daa
jb
push
sbb
in
cld
cmp
data16
push
aaa
xchg
in
psrlw
lods
lret
or
add
into
out
mov
outsb
out
mov
jno
push
cmp
outsl
push
out
fcomps
mov
push
das
cld
sbbl
add
icebp
inc
add
out
push
inc
imul
cmp
ss
or
mov
mov
hlt
mov
imul
insl
imul
push
xchg
scas
adc
arpl
imul
jle
gs
add
out
lcall
add
pop
into
mull
pushf
pop
dec
jl
repz
jbe
dec
push
rorl
rcrl
aam
mov
jno
cs
jecxz
lahf
popa
shl
outsl
or
jbe
mull
jno
outsb
and
lret
jns
bound
sub
xchg
insl
in
or
daa
dec
in
pop
sub
ja
out
fbld
push
xchg
sti
jno
es
push
xor
jmp
jbe
xchg
es
rcr
iret
shrl
out
mov
jl
jb
lret
jb
jae
out
mov
imul
popa
clc
pop
cld
sub
cltd
jl
arpl
out
out
fadd
and
or
out
adc
jno
imul
fdiv
mov
bnd
arpl
inc
out
lahf
add
and
xor
lret
sbb
mov
insb
sub
iret
fildll
jl
lock
and
mov
bound
out
inc
repnz
enter
or
fsubl
jl
add
out
fcomip
cmp
rorl
mov
gs
sub
mov
or
cmp
mov
mov
mov
je
jmp
push
fimull
lret
shll
leave
rol
out
jo
imul
cs
imulb
push
xchg
jecxz
ret
mov
jne
or
xchg
xchg
test
mov
in
test
jnp
dec
shl
lahf
cltd
inc
cmp
mov
out
ja
sbb
std
push
mov
jae
hlt
cmp
mov
addr16
jns
outsb
fstl
loope
int
data16
idivl
jo
clc
cmp
leave
lods
jmp
aaa
pop
daa
jne
cmp
lret
sbb
popa
cmp
shl
cmp
jne
jecxz
or
popa
les
inc
insb
jo
pop
test
jno
sub
push
and
push
jns
mov
daa
bound
arpl
sbb
mov
mov
xor
sbb
push
xor
mov
out
jge
add
sbb
xor
add
mov
into
imul
das
mov
sarl
imul
jge
jno
addr16
push
sarl
popa
and
cmpsl
pop
xchg
lret
pushf
xor
or
dec
pop
addr16
bound
pushl
jmp
or
hlt
out
in
fisubrl
jbe
nop
imul
jg
jno
out
pop
sbb
jge
pushf
ficoml
push
mov
cs
bnd
jb
jb
cmp
imul
xorl
out
ds
xor
outsb
hlt
xor
popa
imul
jns
dec
inc
loop
imul
arpl
stos
xchg
jp
insb
pop
cmp
jg
jo
mov
insb
push
jl
or
insl
outsl
jae
dec
ljmp
imul
gs
enter
sub
jno
xchg
bound
das
push
mov
test
imul
mov
shlb
lahf
xchg
gs
jl
cmpsb
jp
loop
dec
jae
cmp
jo
arpl
push
mov
cmp
repz
mov
inc
pop
adc
pop
rol
push
gs
add
mov
pushf
ljmp
pushf
in
mov
pop
sahf
ja
dec
imul
pop
sub
xchg
mul
xor
xchg
fidivl
pusha
push
fs
and
xchg
jmp
repz
ds
aas
popa
add
and
popa
sub
cmp
sbb
sub
xchg
bound
es
add
dec
cmp
es
mov
push
push
popl
lret
inc
dec
int3
arpl
sbb
test
jbe
xchg
fs
stc
pop
cmp
mov
cltd
loop
outsb
mov
dec
push
lret
mov
jno
shll
xor
mov
fs
xchg
sbb
jno
sbb
jl
outsl
jb
jg
lret
dec
jns
push
mov
cmp
cmp
imul
movsb
in
pop
mov
out
jb
jmp
jno
mov
call
stc
mov
mov
inc
pop
in
shll
mov
cwtl
mov
sub
gs
int3
lret
ret
cwtl
inc
fs
ja
outsl
jnp
je
pop
idivl
int
xlat
in
jb
lret
lahf
insb
into
jnp
add
xor
ljmp
mov
pushf
mov
ds
xchg
jbe
fisttpll
xor
mov
aaa
arpl
popa
js
jno
xor
sbb
push
jb
test
dec
mov
and
push
xchg
mov
jb
inc
jb,pn
jbe
mov
arpl
out
sbb
cmp
cmp
cmp
out
insb
dec
icebp
cmp
imul
out
jl
pushf
fs
lea
fnstenv
daa
xor
scas
icebp
addr16
popa
inc
adc
inc
xchg
or
sbb
in
arpl
inc
sub
dec
mov
cltd
mov
je
movsb
jae
jecxz
pop
in
mov
pop
mov
push
adc
sbb
stc
jne
outsl
cmp
insb
pushf
movl
jno
out
and
jbe
fdivrl
out
fs
adc
in
mov
lcall
sub
mov
inc
cld
outsb
in
dec
jb
rcl
bound
call
jb
inc
insl
cmp
sahf
icebp
popa
jne
jns
scas
push
xchg
mov
push
daa
xchg
outsl
jb
fnop
jb
outsb
std
xor
or
inc
fcoml
movsl
mov
fmull
inc
push
test
dec
fs
repz
sbb
cmpsl
pop
cmp
cmp
insl
mov
int3
sahf
and
ficoms
sub
cmp
and
jae
mov
je
fs
cmp
xor
addr16
inc
pop
into
stc
mov
push
fs
jecxz
dec
popa
push
ljmp
outsw
js
cmp
mov
xor
xchg
repz
push
sarl
push
int3
pushf
iret
cltd
fidivrs
repnz
mov
stc
test
in
pop
and
inc
bound
mov
sti
fnstenv
leave
mov
iret
fs
push
xor
lret
and
dec
sbb
and
mov
mov
ja
pop
inc
sbb
outsb
xor
sub
sbb
mov
aam
stos
xor
jno
xor
jge
imul
loope
cwtl
test
push
pop
xchg
inc
gs
std
lcall
jb
neg
mov
jns
in
gs
insb
repnz
test
xor
loop
movsb
outsl
sbb
pop
jae
or
nop
out
cmpl
jbe
fsubl
adc
iret
icebp
cmpsl
test
push
cmp
and
xor
imul
repnz
jns
sbb
mov
mov
jp
dec
sub
mov
ds
imul
jno
push
rorb
or
jp
rorl
mov
pop
addr16
jmp
jno
inc
test
xor
test
ss
into
fmulp
gs
mov
shll
rcrb
pop
jp
fwait
and
sub
sub
jge
cmp
ja
lods
xchg
push
repnz
lods
pop
sarb
imul
mov
mov
or
and
ja
adc
inc
sub
sub
outsb
stc
mov
push
add
test
shlb
inc
fldt
fs
ficoml
aaa
lret
xchg
lods
and
popa
insb
xchg
int3
roll
hlt
mov
cmp
mov
fcmove
insb
into
jno
cmpsb
or
cli
je
jl
arpl
jbe
pop
in
loope
xor
mov
sbb
iret
jb
mov
int3
rcll
inc
fs
mov
inc
jb
aam
jo
inc
out
mov
mov
das
cmpsl
insl
pop
push
scas
sti
mov
xor
cltd
or
adc
mov
mov
dec
lds
bound
mov
pop
jns
cmp
shrb
add
arpl
outsl
pop
jns
rcl
jp
xchg
inc
mov
imul
dec
insl
jecxz
imul
dec
testb
push
or
mov
imul
lea
gs
xchg
fs
cmovnp
out
fsts
sub
jno
push
aam
pushf
loop
repz
dec
fsts
lock
jb
imul
repnz
cmp
jecxz
mov
mov
test
addr16
inc
dec
dec
insb
hlt
cmp
mov
mov
xlat
jmp
push
adc
sub
inc
push
cwtl
rep
jnp
pop
xor
xchg
sub
fwait
js
bound
pop
jmp
iret
nop
test
cmp
jecxz
xchg
jns
mov
push
ja
sub
aam
jp
test
loope
jb
in
mov
jae
testb
das
imull
cli
mov
lret
mov
cwtl
jns
in
sahf
shlb
xor
pushf
jg
sbb
sub
jp
lret
insl
cmp
mov
fldenv
jns
mov
xchg
fwait
icebp
lods
test
scas
mov
idivl
jb
sbb
gs
in
mov
in
jno
xchg
mov
into
xlat
nop
in
pop
cld
sub
sbbb
lret
push
bound
out
cltd
push
popf
test
jmp
shrl
ss
cmpsl
and
xor
or
mov
jo
jae
mov
cmp
dec
xor
mov
cmp
bound
out
cmp
add
push
and
fidivl
sub
setae
mov
mov
insl
imul
or
jno
fwait
outsb
rcrl
mov
jno
in
mov
std
test
out
cmc
push
jae
test
fldcw
inc
in
arpl
jne
test
std
pop
imul
cmp
data16
in
mov
cld
pop
push
out
arpl
jno
rcll
sbb
inc
jp
aam
cmp
push
and
js
mov
dec
shl
les
in
jecxz
das
mov
sub
in
jno
outsb
notl
dec
push
push
sbb
fmuls
jle
xor
out
jno
sub
popa
lahf
mov
jo
lea
out
data16
jns
adc
cmpsl
insl
or
jecxz
iret
inc
cmp
pusha
imul
push
cmp
push
daa
jns
arpl
sbb
dec
les
jns
and
inc
je
outsl
cmpsb
in
or
out
repz
adc
jae
sarl
push
or
and
popa
insl
sbb
jno
into
movsb
mov
pop
popa
add
dec
fcompl
outsl
dec
sbb
les
orl
sub
pop
movsl
mov
cmp
cmp
push
inc
jo
jl
add
ss
stos
add
insl
xchg
inc
sahf
std
cmp
stc
mov
cwtl
addr16
stc
pop
out
lret
sbb
insb
and
mov
inc
jae
in
dec
inc
gs
pop
mov
in
call
sub
mov
cwtl
je
mov
mov
hlt
mov
sbb
gs
inc
or
imul
mov
stc
test
fs
mov
inc
mov
sti
mov
cmc
das
bound
mov
ss
lret
iret
sahf
in
insl
fimuls
lods
out
test
movsl
outsl
add
cmp
rep
jns
fnclex
js
pop
lret
imul
aaa
cmp
mov
arpl
lcall
lahf
in
cmp
sub
test
outsl
push
sahf
idivb
call
xor
mov
mov
jne
leave
mov
addr16
sbb
jbe
bound
andl
gs
push
je
mov
or
test
stos
jmp
add
mov
xchg
jp
adc
iret
icebp
xor
push
inc
sbb
call
das
aaa
mov
insb
fdivl
pop
adc
sub
fistl
fldt
jo
out
hlt
mov
addb
adc
sbb
sbb
pop
std
jb
lahf
shll
pop
dec
cmpb
xchg
lret
data16
push
push
sbb
lea
shlb
xchg
jno
push
jmp
mov
jae
mov
inc
lods
imul
sub
int3
fwait
mov
push
dec
push
push
mov
adc
jbe
jno
iret
adc
adc
jp
lds
cmp
in
sub
imul
imulb
and
in
sub
cmp
xlat
lods
push
in
loopne
mov
cltd
mov
jl
pop
pop
insl
hlt
pop
adc
adc
dec
movsb
push
ficoml
cmc
xchg
loop
dec
xchg
xchg
mov
fnstenv
mov
push
sbb
fwait
push
stos
xor
outsb
std
lahf
es
std
dec
adc
jbe
add
and
mov
gs
dec
cmp
jb
arpl
cmp
fwait
bound
sub
jb
out
pop
movsb
lods
pushf
decl
xchg
mov
arpl
jae
mov
xor
mov
rclb
jno
mov
stc
ds
mov
sbb
pop
mov
js
xchg
sbb
xchg
shll
mov
test
ljmp
sahf
jo
mov
cwtl
xor
adc
fs
cmp
idivl
pop
or
out
mov
inc
insb
arpl
cmp
sbb
test
mov
xor
jae
xorl
test
inc
mov
fsubrs
jnp
pushf
incl
jno
xchg
scas
mov
outsb
enter
xchg
data16
cld
sub
and
mov
pop
xor
rorb
in
lock
sbb
mov
int
test
lret
and
nop
in
lods
sub
adc
push
xor
loope
hlt
jb
jno
call
inc
jp
popa
loop
add
je
outsl
xchg
mov
mov
lods
push
jb
xor
push
xchg
dec
and
push
int3
jne
mov
repz
bound
push
mov
cli
je
mov
popa
add
and
xor
xor
pop
outsb
pushf
arpl
xor
xor
in
or
dec
jecxz
adc
push
sbb
sub
or
fdivrl
ss
cmp
xor
in
jecxz
add
xor
add
pop
lahf
pop
add
add
jno
ss
push
jo
pop
out
jno
xor
xchg
fstpt
adc
inc
jg
and
xor
push
out
xor
ja
jno
adc
sub
xchg
in
mov
fildl
inc
and
clc
cld
cmp
adc
xor
test
push
and
shll
inc
movsl
mov
call
xchg
int
ja
aam
and
dec
out
pop
aas
xchg
and
lret
or
repnz
data16
dec
dec
aas
in
jle
jp
imull
addb
dec
negl
sti
push
push
xor
inc
cmp
adc
push
inc
push
stos
mov
adc
cs
jne
nop
sub
nop
jnp
sub
fistl
xchg
cmpsb
out
repz
out
leave
lahf
inc
rclb
repnz
push
das
pop
xchg
xchg
sbb
and
ds
js
test
lret
je
dec
sbb
adc
sbb
out
fs
cmpsl
imul
inc
and
pusha
pop
lahf
xor
testl
pushf
jns
pop
mov
add
pop
mov
dec
push
enter
and
add
stos
cmpsb
mov
pop
adc
out
fs
cmp
add
sahf
test
push
mov
pop
mov
and
outsb
mov
aad
push
cltd
ficomps
jmp
or
out
jae
inc
pop
or
movsb
in
lret
and
push
aam
push
add
cmp
fisttpl
inc
fbld
jno
sub
cmp
sbb
out
push
outsl
ret
or
inc
imul
in
xlat
or
xchg
out
jg
cwtl
jle
xor
insl
imul
inc
jmp
pop
push
dec
movsb
insb
mov
xorb
out
dec
sbb
in
mov
or
stos
dec
lods
dec
ja
stos
std
into
arpl
dec
pop
int
dec
fisubrl
inc
fwait
cmp
cmp
out
cmc
sub
hlt
xchg
xchg
xor
sar
lds
sti
not
in
inc
bsr
xchg
cmp
inc
or
add
push
shl
sub
imul
out
dec
inc
pop
shll
mov
andb
jb
mov
iret
popa
fnstcw
inc
mov
mov
pop
and
sub
adc
add
cbtw
mov
cmpb
and
push
ja
and
push
cli
test
ja
mov
fnstsw
push
push
orl
sti
or
or
scas
in
rorl
and
pop
nop
mov
xchg
lcall
pop
push
imul
mov
ficompl
adc
sbb
cmp
imul
jno
ret
pop
fildll
bound
xor
je
sub
xchg
fdivrs
outsl
call
fs
fisubl
mov
jnp
push
popa
push
push
enter
inc
add
sti
xor
jnp
dec
fs
inc
jae
push
js
popf
arpl
mov
jne
pop
mov
out
inc
repz
xlat
jae
popf
pop
rorb
fisubrs
jb
and
daa
and
and
loopne
dec
mov
lds
lods
mov
jns
fisubl
lret
clc
inc
stc
jnp
lods
cmpsl
bnd
es
repz
cs
mov
mov
movl
pop
adc
mov
push
dec
push
xchg
mov
cmpb
sub
and
insb
pusha
or
jmp
in
xor
jl
std
sbb
cmp
shll
movsb
shll
adc
mov
dec
insb
iret
mov
fmuls
jne
add
cmp
push
out
adc
lret
ljmp
or
sti
std
les
cmp
ja
jge
mov
push
das
jl
pushf
insl
cs
cs
mov
mov
xchg
mov
dec
arpl
imul
jnp
dec
sub
imul
xchg
xlat
and
jne
mov
lea
fwait
incb
cltd
jae
repz
sti
addr16
push
stc
mov
fs
push
dec
and
cli
jne
add
cmc
push
gs
dec
xchg
out
popa
bound
cs
in
mov
pop
sbb
cs
xor
pop
mov
or
inc
jne
mov
aam
jns
insb
sbb
repnz
sub
call
icebp
cld
inc
dec
dec
dec
inc
daa
xchg
xor
fists
inc
popa
aaa
hlt
fdivl
iret
neg
mov
inc
enter
scas
scas
and
jo
popa
nop
and
cltd
enter
movsl
sahf
outsb
jle
mov
je
jmp
and
cli
push
mov
or
or
and
mov
jb
bound
add
popfw
hlt
pop
movsb
popa
testb
mov
jne
test
aas
dec
mov
jbe
xchg
cmp
inc
mov
mov
pop
dec
inc
fstpt
lcall
aad
push
jo
adc
xor
arpl
adc
push
stos
iret
inc
pop
mov
pop
jbe
movsl
mov
test
cmpsb
out
inc
add
pop
fadds
shld
xor
fisttps
aam
mov
cmp
clc
imul
and
sbb
in
dec
xor
ds
dec
imul
shlb
jae
aas
test
inc
hlt
cmp
jns
lods
push
pop
dec
sub
stc
jmp
adc
jb
cli
pop
push
pop
stos
jae
shr
divb
inc
mov
pop
inc
flds
arpl
inc
cld
push
xchg
jp
hlt
testl
push
rorb
pop
scas
cltd
cmp
and
cmp
sbb
sub
fs
dec
ret
insl
adc
mov
pop
jae
inc
iret
test
sbb
mov
sbb
mov
xlat
leave
jg
mov
push
fistpl
push
xchg
fldenv
ret
sbb
enter
into
xchg
mov
push
and
add
pop
add
sbb
sub
and
push
and
jg
jp
shrb
lret
pop
push
inc
cmp
push
push
out
sub
ljmp
jp
andl
loopne
iret
dec
inc
mov
push
repz
test
xor
jge
outsb
gs
add
push
xor
iret
xor
pop
ss
inc
scas
ds
repz
stos
popf
mull
inc
and
dec
or
lea
loop
dec
lret
aaa
aas
dec
sbbb
imul
test
sti
scas
data16
pop
aaa
rcll
sub
dec
xcrypt-ofb
cmpsl
imul
inc
inc
nop
addb
xor
pop
jecxz
fs
arpl
xchg
jb
push
stos
cmp
jecxz
stc
xchg
mov
aad
or
and
mov
jbe
arpl
stos
inc
mov
jo
aam
adc
xchg
sub
jne
gs
or
hlt
movsb
or
or
icebp
xchg
pop
je
insl
lcall
ret
jns
push
or
arpl
adc
fs
arpl
test
popa
popl
lret
lods
sbb
outsb
in
sarb
add
cmpsl
mov
dec
ret
test
add
jnp
xor
cmpsb
popa
inc
insl
jbe
and
test
dec
test
lahf
push
fnstenv
mov
data16
and
inc
fisubrl
outsb
jecxz
mov
sbb
push
lret
mov
pushf
rcrb
mov
outsl
sbb
imul
ja
xor
icebp
cmpsb
jp
les
push
popa
fs
aad
sub
push
rorl
sarb
out
test
sub
lcall
lods
nop
push
jmp
test
sti
or
lock
popa
rcr
and
pop
xchg
inc
enter
mov
scas
decl
push
mov
pop
mov
add
mov
movb
jp
int
mov
mov
popa
mov
push
in
push
pop
mov
jb
mov
add
lods
add
pop
imull
shll
xor
lods
movsl
mov
cltd
arpl
dec
lcall
mov
jbe
outsl
in
sbb
inc
fimuls
mov
xchg
sub
push
mov
push
xlat
mov
jp
pop
out
mov
pop
mov
xchg
and
and
sahf
insl
fs
enter
mov
addr16
jo
movsb
push
out
aam
hlt
mov
xlat
inc
fildll
push
jge
push
xchg
cmpl
outsl
mov
xchg
imul
incl
adc
mov
out
sbbl
pop
jo
xchg
jb
xor
xor
dec
lret
inc
ds
stos
jo
jns
repnz
movl
fwait
jb
addr16
mov
jl
adc
popf
in
cltd
mov
push
push
lret
sub
mov
xor
nop
inc
jo
dec
fwait
test
mov
nop
pushf
mov
test
je
ds
mov
push
xchg
push
fstpt
cmp
outsl
jb
xchg
adc
pop
xchg
cmpsl
sbb
sbb
mov
imul
jp
push
fs
out
push
bound
sub
jmp
daa
mov
pop
cmp
insl
addr16
testl
push
dec
and
adc
xchg
xlat
je
fidivrs
test
lods
jne
fnsave
push
cmpl
jae
sbb
push
in
arpl
push
int3
fists
and
lds
out
aam
xchg
xchg
mov
aam
sub
loope
pop
jae
ja
pop
inc
insl
sub
xchg
flds
jb
ja
cmpsl
xlat
scas
movsl
mov
ficompl
mov
addr16
scas
movsb
arpl
shlb
push
push
sub
sbb
mov
xchg
sbb
insb
insl
or
xor
xchg
jno
fistpl
movsl
mov
add
int
lcall
adc
fisubl
cmp
iret
dec
push
hlt
cmpsb
in
cmp
mov
mov
mov
pause
push
test
jae
stc
pop
xor
fimuls
aam
in
add
cmp
xchg
clc
push
int
push
sub
cs
mov
xor
push
and
arpl
pop
popf
cwtl
xor
add
lock
and
inc
dec
xchg
sbb
mov
outsb
pop
cltd
mov
mov
adc
mov
sbb
lea
dec
ret
das
or
push
iret
jnp
and
xchg
out
das
cmp
pop
cmp
dec
test
cmp
or
mov
dec
test
xlat
cli
es
sub
call
cmp
scas
jge
jle
xchg
xor
fbld
mov
ljmp
push
xchg
rcrl
inc
mov
mov
jle
imull
mov
inc
xchg
fcomps
pop
dec
inc
push
adc
les
mov
cmp
xchg
xlat
in
lahf
add
mov
add
mov
cmp
adc
dec
adc
dec
add
pand
jnp
lods
mov
out
inc
test
lcall
xor
xor
xchg
movb
mov
xor
inc
lret
dec
cmp
rorb
std
imull
or
scas
dec
out
incl
movsb
or
dec
mov
xor
xchg
ret
add
xor
fwait
adc
jo
inc
dec
xchg
cs
or
ror
mov
rcr
xor
repz
mov
dec
mov
repnz
sub
das
push
hlt
mov
add
mov
pop
aam
push
sahf
fistl
lret
dec
mov
fildll
call
dec
push
cmp
push
dec
cwtl
out
rolb
fistl
scas
mov
mov
mov
cmp
andb
sub
sub
out
lahf
mov
rol
dec
sarl
or
scas
adc
push
rclb
xchg
sbb
outsb
rclb
stos
ja
sbb
jle
data16
imul
rorl
xorl
out
push
sbb
push
ret
push
cltd
movsl
push
cltd
ja
addr16
and
sbb
sub
and
cmp
movsl
xor
xor
fdivs
ss
cmp
jb
inc
jp
sub
inc
cmpsb
lds
and
jne
stc
sub
lcall
dec
sarb
xor
je
inc
mov
inc
insl
add
addr16
fs
sbb
dec
inc
dec
out
xor
push
cltd
and
dec
push
xor
pop
add
mov
pop
add
jnp
add
xorb
inc
loop
ret
xorb
call
add
fdivrp
sahf
fidivs
lods
in
orl
inc
mov
aad
mov
mov
stos
lahf
inc
mov
and
dec
mov
fmulp
push
mov
mov
mov
mov
addb
mov
fnstenv
mov
mov
mov
mov
bsr
in
push
xchg
mov
add
fadds
daa
mov
popa
cmp
fisubl
cmp
les
xor
popf
lods
mov
push
addb
lcall
add
add
sbb
dec
jne
out
add
push
push
sahf
rol
push
fisubs
scas
cmp
outsb
in
sub
and
mov
pop
ret
cmp
rol
add
adc
add
and
loope
xor
xor
insl
dec
jo
cmpsb
xor
mov
push
xor
sub
jae
and
dec
movsl
jmp
cmp
mov
dec
xlat
or
js
aas
and
sbb
int
push
push
mov
cmp
test
test
mov
outsl
inc
sbb
pop
lret
popa
and
inc
xor
lock
cmp
and
fs
dec
and
and
jns
bound
jmp
inc
rcrl
test
inc
dec
fs
daa
or
mov
push
push
fwait
mov
jnp
cmp
mov
jae
fs
xchg
jge
and
test
push
pop
add
xchg
lret
mov
xchg
cli
es
and
enter
mov
fisttps
xchg
cli
sti
pushf
jl
test
jae
jmp
mov
lahf
arpl
mov
inc
adc
lods
nop
inc
shlb
mov
sub
orl
and
enter
out
sbb
mov
sbb
push
outsb
jb
push
mov
sub
in
mov
add
dec
xor
jns
pop
add
loope
and
out
push
push
jg
je
and
jbe
lods
xchg
push
in
mov
dec
mov
xchg
mov
aad
mov
outsl
sub
subl
add
call
push
rcll
and
hlt
xor
insb
adc
add
add
add
add
or
leave
mov
push
incl
stc
outsb
addr16
mov
add
add
shlb
js
sbb
xlat
jo
lods
or
or
sub
and
rolb
sub
add
add
mov
mov
add
adc
or
cmpl
inc
jne
mov
add
outsb
mov
add
mov
divb
pushl
repnz
push
mov
pop
sub
adc
dec
insl
push
and
pop
dec
call
call
pop
je
fadd
pop
pop
pop
push
sub
add
cld
lea
mov
rep
mov
stos
push
push
push
push
mov
sbb
and
cld
call
add
test
ret
add
dec
repz
inc
mov
lods
in
frstor
inc
push
xchg
sub
jmp
je
push
mull
push
push
jp
stc
test
cmpsl
std
ret
add
push
push
push
imul
cmp
push
inc
push
xor
push
dec
inc
add
push
add
lock
push
push
inc
xor
xor
xor
or
loopne
xor
xor
cmp
jge
cmp
lods
mov
adc
xchg
push
addr16
loop
cmpsb
jae
or
insl
scas
aaa
sbb
add
or
push
push
and
dec
dec
jp
lds
dec
jae
adc
adc
movsb
inc
fldt
in
push
out
and
test
or
inc
lds
inc
jne
sti
ret
push
dec
imul
jmp
stos
or
adc
movsl
out
dec
mov
fiaddl
cs
imul
out
add
les
leave
aaa
jnp
push
dec
mov
cmp
jns
pop
bound
cmpsb
dec
xchg
out
xlat
dec
popf
lea
add
inc
add
inc
xor
sub
dec
outsl
lret
inc
xor
dec
push
scas
enter
and
mov
pop
dec
sbb
add
lcall
add
inc
add
js
imull
imul
loope
pop
cmp
mov
cltd
cli
push
ror
pop
push
dec
jb
mov
fisubs
add
test
push
sub
scas
jecxz
das
sub
mov
and
sbb
test
jl
inc
icebp
xor
dec
cs
in
cmc
nop
enter
sahf
es
push
mov
mov
or
hlt
and
mov
pusha
add
add
das
sub
mov
xor
inc
repnz
jmp
cmp
js
insb
add
push
mov
and
std
adcb
cmp
mov
inc
popf
pop
and
mov
add
inc
inc
push
cmp
jno
push
mov
adc
fisubrl
cwtl
in
pop
jne
mov
mov
dec
jb
add
push
xchg
pop
popl
xchg
xchg
aam
fs
inc
sbb
and
add
cwtl
cmpsb
cmp
cwtl
movsb
xchg
push
xchg
es
xor
inc
test
ret
cltd
or
push
jl
push
roll
and
pop
popf
jne
and
adc
xlat
flds
jns
adc
add
push
add
adc
dec
pop
ljmp
add
mov
jns
and
ds
mov
mov
lahf
loopne
inc
jle
test
cmp
fisubl
icebp
loope
mov
add
iret
inc
mov
mov
in
call
xor
loopne
loopne
push
ficompl
pop
fisubrl
xor
fcomp
mov
pop
cmp
stc
xor
jl
pop
mov
andb
sbb
push
icebp
add
push
rclb
aaa
sub
push
jnp
inc
or
outsb
add
pop
xor
testb
push
test
add
dec
push
lret
add
mov
in
or
popf
outsl
lret
iret
or
or
iret
mul
push
push
vmwrite
sub
pop
pop
mull
aas
aas
jg
xor
ds
push
push
push
stc
aaa
stc
mov
pop
repnz
insb
insl
sub
inc
adc
and
xchg
or
sbbb
lahf
addl
mov
rcrl
movsb
jg
lahf
mov
call
hlt
sub
mov
and
sbb
popf
xchg
lea
mov
jns
nop
xchg
or
xchg
add
mov
mov
sbb
rcl
push
repz
sub
out
cmp
loopne
or
nop
adc
cmp
repz
daa
sbb
sbb
inc
jns
mov
cmp
out
clc
es
cld
inc
dec
adc
pushl
mov
mov
add
enter
inc
leave
or
cmp
mov
pop
add
pusha
push
mov
popa
xor
cmp
add
sbb
fdiv
mov
mov
test
add
cli
or
or
sbb
mov
adc
pop
clc
inc
and
sbb
into
add
add
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
add
add
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
add
cld
inc
outsl
loopne
jmp
xchg
test
mov
cmp
add
loopne
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
add
add
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
gs
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
add
add
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
notb
add
mov
subb
fwait
xchg
and
and
test
int3
int3
sti
aas
jno
or
mov
jo
aas
pop
fs
dec
lea
aas
ret
shrl
add
add
loop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
add
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
xchg
xchg
out
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
movb
add
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
add
sarb
daa
ljmp
mov
inc
rolb
add
add
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
inc
xchg
mov
fmull
call
cmp
test
pop
mov
jne
fldt
cmp
add
add
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
add
add
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
push
cmp
push
andl
dec
dec
gs
std
orl
fiadds
add
lahf
into
ror
add
cmpsb
fmuls
popa
nop
in
dec
pop
cmp
movb
sarb
add
dec
cmpsl
add
mov
add
cmp
add
mul
add
insb
mov
or
nop
mov
or
add
add
and
add
lcall
add
mov
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
sbb
add
cmp
add
add
add
in
sub
push
push
lea
push
test
mov
add
add
insb
add
push
push
enter
push
mov
jl
cld
push
add
sbb
add
rclb
call
sbb
lods
add
es
inc
fdivl
push
imul
dec
cmp
add
in
inc
xchg
lsl
and
lock
popa
lret
mov
fs
aam
roll
sbb
mov
pop
dec
mov
mov
pop
sahf
xchg
add
mov
call
rolb
cmovns
imull
push
pop
je
mov
test
push
loopne
aas
jne
jb
xor
fs
inc
popf
cmp
adc
or
dec
gs
addr16
outsl
js
lret
push
add
test
je
push
sbb
or
pop
and
outsl
call
mov
jae
insl
and
imul
pop
fnstsw
je
arpl
mov
push
push
shlb
rorb
pop
ret
push
inc
adc
or
push
mov
sub
xor
test
add
mov
int3
mov
lret
mov
shlb
push
aaa
and
lea
adc
cmp
jae
mov
add
in
mov
lea
int3
std
iret
sub
sub
out
add
pop
pop
pop
sub
cs
dec
dec
sub
jb
adc
add
imull
cmc
rep
pop
mov
imul
mov
call
rolb
cmp
test
push
lock
dec
mov
jmp
sub
push
addr16
inc
push
pop
push
loope
xchg
or
inc
add
popf
add
mov
inc
or
sub
mov
pop
pop
sub
mov
scas
and
cmp
and
mov
xchg
ss
push
jl
enter
test
jnp
or
adc
fistps
push
adc
jo
jle
mov
bound
xor
js
fadds
add
ret
pop
adc
jno
mov
call
lods
or
or
add
call
xor
adc
fcoml
lea
cld
cmp
lock
js
push
or
sbb
ret
test
sbb
enter
or
adc
xor
nop
xor
faddl
cmovs
je
jae
test
push
mov
fbstp
aad
jnp
cli
jns
and
cwtl
lea
outsl
add
and
push
push
call
mov
aad
leave
pop
mov
sub
dec
and
mov
repnz
mov
or
scas
adc
call
sub
aad
jecxz
push
fists
pop
or
dec
xor
leave
push
mov
or
inc
add
xchg
mov
addb
or
loope
sub
je
push
and
incl
jg
lea
xchg
sbb
xchg
mull
test
sub
inc
push
aas
jns
movsl
or
lea
arpl
mov
lods
data16
pusha
and
push
inc
or
inc
icebp
add
movb
add
ljmp
mov
gs
rol
cmpb
rolb
pop
pop
pop
pop
ret
in
add
inc
cmp
leave
call
adc
les
xchg
mov
mov
inc
sar
loope
jne
fadds
je
push
ret
pop
or
mov
stos
pop
add
jmp
fstcw
xor
push
jne
or
pop
scas
loopne
ror
nop
add
mov
lret
rorl
dec
es
lods
adc
xor
mov
jmp
cltd
movsb
cld
clc
rclb
dec
cmp
jo
mov
dec
push
jmp
mov
bound
cmp
inc
adc
dec
mov
fs
inc
enter
jmp
jle
enter
mov
adc
add
cmp
jge
roll
add
mov
add
sub
je
dec
jne
xlat
jmp
ret
test
rorb
sbb
rclb
les
add
or
cli
inc
jmp
pop
pop
dec
inc
adc
inc
and
outsb
cmp
inc
mov
aaa
adc
les
and
xchg
jmp
push
adc
sub
scas
out
clc
ljmp
adc
call
andl
xor
test
jae
jl
ficoms
cmovae
je
in
test
pop
or
jge
dec
or
movsl
mov
and
jnp
push
cli
and
adc
pop
xor
sbb
or
cmp
cmp
sub
ret
jne
movsb
call
inc
push
test
xor
adc
and
cmp
mov
fwait
sbb
js
push
push
push
jl
sbb
push
cmp
jge
adc
mov
in
adc
enter
aam
test
jns
add
sub
or
call
push
push
and
leave
daa
or
lea
aaa
push
push
push
in
popf
enter
cmp
loop
adc
mov
iret
and
xchg
dec
nop
cli
cmp
push
loope
jns
stc
jmp
cmc
pop
movl
loopne
pop
ljmp
and
out
pop
inc
and
addr16
fisubrl
pusha
in
dec
stos
ret
pop
fidivrl
inc
dec
cmp
nop
loop
jmp
jp
dec
pop
dec
scas
sub
test
and
mov
push
push
call
sub
adc
ret
lahf
add
sub
fcmovnbe
sbb
mov
test
inc
lcall
adc
rorb
cld
fdivs
inc
xchg
out
dec
jae
jmp
push
adc
rol
in
cli
hlt
add
testb
push
cmp
mov
xchg
dec
dec
test
cs
pop
push
push
cli
inc
or
sbb
movsb
insl
push
inc
cmp
sbb
js
outsl
adc
and
lods
lcall
add
hlt
dec
xor
icebp
mov
adc
sbb
dec
or
daa
inc
cli
or
ss
cmp
subl
mov
pop
sbb
and
clc
sbb
push
or
inc
out
adc
add
ss
imul
jo
cs
hlt
jne
inc
outsb
jns
adcl
inc
inc
popl
push
push
fsubrp
arpl
repnz
adc
jae
insb
arpl
std
ja
cmc
xor
push
push
inc
dec
inc
cs
fimuls
sub
insb
and
jmp
popa
outsb
jns
add
imul
push
data16
sub
aas
inc
js
je
test
pop
pop
aaa
dec
inc
dec
neg
inc
push
mov
dec
stos
or
out
insl
push
pop
dec
jae
bound
jl
inc
inc
rclb
jo
and
sub
inc
and
bnd
sub
add
cmpsb
mov
and
mov
cld
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
mov
add
push
add
add
or
sub
or
add
inc
add
mov
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
