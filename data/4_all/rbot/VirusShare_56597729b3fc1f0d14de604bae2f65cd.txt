jmp
ror
call
jmp
xchg
cmpsb
sbb
push
and
jmp
test
add
and
add
shr
les
jmp
sbb
pop
hlt
pushl
jmp
inc
mov
jmp
jmp
jmp
sbb
add
shr
lods
mov
jmp
cmpsb
ret
jmp
push
jmp
jmp
jno
call
jmp
lahf
and
jmp
sarb
pop
jmp
inc
gs
cld
sub
popl
jmp
mov
add
add
call
sbb
jae
dec
pop
mov
cmp
pop
popa
push
adc
aas
add
syscall
push
jl
ja
pop
insb
rorb
mov
mov
xor
push
movsb
sbb
jmp
into
rclb
jle
out
sub
xlat
sub
les
xor
and
inc
xchg
jae
xor
shll
shl
mov
lock
dec
lahf
xchg
je
rorl
adc
inc
pop
adc
adc
inc
cmp
dec
add
scas
sub
xorl
es
aam
mov
inc
mov
std
movsl
push
and
insl
sub
jge
push
sti
cltd
stos
sbb
imul
sahf
fucomi
or
xchg
mov
sbbl
adc
pop
inc
imul
push
pop
out
add
stos
sbb
mov
outsl
push
arpl
hlt
mov
jne
outsl
jle
mov
jecxz
or
inc
in
js
mov
pop
clc
adc
aad
xchg
adc
xchg
test
stos
sbb
dec
xchg
jmp
xchg
cmpsl
jg
xor
cltd
stc
xor
gs
sub
xor
and
and
dec
xchg
aad
or
lods
mov
paddusb
into
das
cld
call
mov
add
mov
push
test
loope
cmpsl
xor
dec
orl
test
sub
pop
mov
stc
call
jb
pop
and
inc
flds
stos
stc
xor
stos
loopne
xchg
call
or
testl
mov
repnz
cmpsb
push
sbb
andb
ret
cwtl
and
inc
lods
nop
test
sub
push
add
popf
pop
push
imul
movsl
pop
repz
mov
push
sbb
cmp
pop
daa
cmp
scas
mov
cmp
or
sub
sub
lods
pop
sbb
mov
pop
ret
and
fcoml
mov
hlt
ljmp
push
mov
lods
xchg
dec
es
sub
mov
add
or
sti
xor
arpl
adc
jg
leave
fstp
ds
rorb
ja
push
mov
popf
inc
sub
rcrl
movsb
lods
in
xchg
xor
pushf
ss
jae
cltd
jae
xchg
in
imul
and
pop
push
test
pushw
cmp
scas
std
in
nop
pop
repz
mov
insl
push
jo
xor
sub
push
inc
data16
dec
cwtl
scas
cmc
pop
jle
test
jg
stos
add
add
or
pop
pusha
lods
cmp
cld
mov
mov
movsl
adc
nop
or
push
test
in
sbb
outsb
jne
dec
push
mov
int
pop
cmp
pop
in
test
inc
xor
mov
sbb
loop
stos
push
jmp
cmpsb
outsb
je
stos
and
aam
or
dec
nop
push
sub
inc
popa
mov
xor
jno
fistps
mov
or
sbb
in
cmp
js
push
icebp
cld
mov
movsb
jmp
rorl
imul
mov
and
loope
push
pop
shlb
push
cmc
jmp
pop
jnp
inc
fnsave
cmp
and
lret
insl
or
popa
std
aas
sbb
addr16
mov
leave
xorl
bound
cwtl
jmp
mov
daa
fisttps
lods
jo
sti
lods
out
cli
sarb
xor
push
test
ret
or
imul
xchg
xchg
imul
pop
in
ds
pusha
sub
cmp
sarl
stc
es
incb
sub
or
sbb
mov
xchg
xor
sub
lds
out
cli
add
std
push
out
push
add
xor
in
inc
jge
test
mov
fldcw
into
push
outsb
dec
mov
mov
and
cmp
cli
pop
mov
xchg
ret
cmp
mov
sbb
xor
ja
mov
inc
ss
dec
lea
stos
inc
xchg
in
scas
in
dec
cwtl
jge
adc
mov
push
xor
adc
dec
pusha
push
pop
cwtl
pushw
mov
lret
in
insl
xchg
mov
js
xor
pop
imul
sub
js
adc
push
lock
adc
mov
add
jb
push
xchg
jg
aam
addl
daa
ja
mov
jb
jp
pop
in
cmp
out
sbb
mov
rcl
fcoms
outsb
push
mov
inc
cs
cs
xchg
jae
jne
jmp
flds
pop
cltd
xor
int
inc
and
outsl
mov
or
and
mov
xor
ret
jecxz
jno
aas
pslld
arpl
rcr
lret
nop
mov
loope
xor
jmp
loopne
push
cs
and
dec
ljmp
sub
dec
fcmovnb
pusha
clc
divb
xchg
imul
enter
dec
mov
mov
and
inc
lods
mov
cs
sub
jnp
popf
dec
push
mov
fildl
or
add
lahf
pushf
or
dec
test
in
in
sbb
call
ja
divb
adc
scas
aaa
gs
add
popa
in
jp
jp
sbb
add
push
iret
call
int3
push
mov
sub
sbb
sub
mov
test
pop
xchg
mov
and
and
imul
fisubrs
rcll
sbb
sub
pop
clc
jmp
and
and
jnp
inc
xchg
mov
cmc
adcb
out
fistpl
stos
jo
cmp
mov
adc
ret
add
xchg
and
dec
sbbb
out
in
or
xor
icebp
and
pop
rorl
mov
xchg
jmp
sub
test
lds
mov
dec
mov
cli
rclb
mov
lea
adc
xor
jmp
push
mov
call
ret
inc
hlt
fdivl
inc
mov
adc
in
mov
test
addr16
pop
push
xlat
mov
iret
imul
je
in
sbb
or
pop
out
inc
xchg
call
fs
ja
xor
and
push
ficoml
insb
gs
pusha
push
sbb
lcall
std
push
xchg
clc
xor
das
xor
push
adc
pop
push
and
arpl
adc
stos
jmp
dec
clc
add
ret
inc
pop
int
loopne
mov
or
push
fwait
push
outsl
inc
mov
dec
pop
popa
and
mov
jae
je
mov
std
push
call
int
adcl
sub
mov
cmpsl
dec
add
jl
mov
nop
xchg
push
addr16
out
cmp
shlb
cltd
outsb
ja
and
fs
and
inc
aaa
push
adc
mov
pop
xchg
xor
cmp
in
adc
jecxz
lahf
xchg
call
and
fmuls
mov
ret
jnp
scas
jno
sub
jne
sti
jns,pn
test
in
and
jno
lcall
mov
pusha
pop
lods
divl
xchg
lods
push
dec
mov
mov
pop
jne
adc
in
xchg
bound
mov
push
lret
jmp
fnstcw
add
or
in
jl
mov
lret
adc
aad
test
pushf
mov
cmpsl
pop
fbstp
data16
add
cmpsl
out
data16
mov
das
ret
lcall
jo
lret
push
repnz
mov
repz
sub
cmp
in
mov
cwtl
ja
xchg
mov
movsb
scas
jge
inc
bound
push
arpl
movsl
dec
ja
xchg
or
and
or
and
xor
jae
and
stos
aaa
jb
divl
test
push
jno
sahf
lods
xor
lock
insb
das
bound
test
mov
push
hlt
pushf
mov
sub
fstps
jbe
imul
mov
push
pop
sub
mov
jb,pn
push
jge
repz
inc
sub
icebp
or
repnz
in
testb
clc
push
mov
scas
loope
shl
xchg
ja
inc
in
je
ja
stos
test
pop
idivb
adc
loop
loope
outsl
mov
icebp
inc
sbb
jae
cld
jl
ss
xchg
cmc
or
sub
ja
mov
xor
aam
out
popa
out
std
jb
xorb
arpl
jbe
inc
push
lods
mov
push
das
out
je
jae
and
aam
loope
sub
lret
sbb
lahf
div
stos
push
jge,pn
insb
jno
lea
test
sarl
repz
icebp
sub
jne
push
mov
idivb
lea
mov
dec
outsl
lret
sub
rolb
je
aad
stos
xor
mov
sub
add
xchg
scas
cld
out
icebp
shll
sub
ja
ss
cs
ret
test
cld
sub
mov
ja
sbb
loope
popa
call
jb
loopne
test
sub
xor
mov
dec
jbe
mov
or
pop
mov
call
test
mov
repz
imul
xchg
xorb
cmp
or
or
jno
jmp
scas
insl
cmp
repnz
int
sub
adc
stos
xor
xchg
or
push
jo
jno
scas
sti
mov
fisubrl
pop
mov
test
ret
cmc
cltd
adc
lea
testb
inc
pop
icebp
pusha
fcoms
sub
sub
mov
test
daa
fwait
lods
sub
jnp
pop
lret
xchg
lock
pop
dec
das
jnp
pusha
jb
aas
pop
test
mov
in
inc
outsl
cld
jne
add
idivl
or
cwtl
jno
les
insb
adc
inc
cmpsb
sbb
shl
xor
xchg
stos
xor
add
or
sub
insl
dec
xchg
pop
xchg
cmc
push
mov
inc
jmp
outsb
shrb
fprem1
stos
lods
fidivrl
adc
push
int3
daa
decb
shl
out
iret
xchg
sub
mov
ss
inc
cmp
push
sbb
and
je
cmpsb
nop
in
enter
sub
mov
test
clc
std
push
cld
aas
scas
and
jg
mov
inc
xor
mov
fiaddl
sbb
jp
cmp
stos
outsl
loopne
push
mov
mov
cmpsl
stos
les
movsb
and
xchg
decl
sti
test
push
xchg
inc
rol
frstor
js
adc
inc
out
cmpsl
ds
bnd
dec
stos
cmp
push
mov
shr
push
dec
std
mov
mov
cmpsl
data16
cmc
fsubrs
and
cmc
loope
or
shrb
cmp
sbb
jp
pop
jns
cmp
ret
mov
dec
sbb
je
add
sub
gs
mov
or
repz
dec
rorb
outsl
inc
in
pop
dec
cmp
jno
aaa
adc
cmp
addr16
scas
cmp
jb
mov
dec
sub
add
or
pusha
scas
ljmp
dec
sub
aam
jg
xlat
dec
imul
daa
push
adc
ret
lahf
jb
test
adc
lret
fwait
sahf
cmpsb
movsb
ret
adc
dec
fs
sub
pop
scas
shll
mov
mov
and
mov
divl
xor
inc
bound
loop
inc
clc
ss
add
inc
jg
jl
imul
sarb
ret
or
int3
sarb
ss
xchg
pop
sbb
sarl
xor
xchg
sbb
aad
lret
or
inc
les
rorb
inc
pop
mov
add
mov
sub
jns
in
shrb
pop
xchg
jnp
outsl
fisubl
test
pop
add
or
lods
fbld
ja
addr16
call
mov
ret
pop
lret
mov
shlb
jae
jmp
daa
xchg
in
addb
ljmp
dec
repnz
lcall
les
push
cmpb
sbb
rolb
cltd
int
repnz
mov
adc
xor
jnp
push
in
movsb
loope
loopne
ljmp
aas
cmp
jns
pop
std
fisubrs
or
out
mov
mov
test
lds
lods
sbb
mov
pop
push
leave
push
push
mov
stc
push
xor
imul
repnz
xor
xchg
fdivrl
shll
imul
cmp
das
xchg
lahf
aas
scas
insl
negl
sbb
lods
movsl
dec
mov
cmpsb
leave
sbbb
jl
aad
pop
mov
pop
push
push
jb
inc
mov
lods
enter
pop
cmp
aas
and
ljmp
push
cmp
inc
add
jmp
in
and
dec
mov
xorb
mov
adc
std
fcmovb
pop
adc
cmp
dec
pop
iret
aad
int
adc
addb
and
push
pop
in
push
mov
xor
mov
sub
outsb
fs
sub
stos
lea
cmp
inc
sub
outsl
negb
cmpsb
mov
cmp
shlb
mov
mov
add
push
adc
xchg
adc
xchg
cmc
in
aas
mov
push
sub
lcall
icebp
cli
pusha
inc
out
jb
enter
insl
xchg
sbb
and
je
jle
ja
insb
mov
pop
and
xchg
fidivrl
add
call
adc
std
push
sbb
push
les
xchg
dec
xchg
pop
int3
mov
gs
xor
fs
test
mov
cmpsb
cmp
test
xor
sbb
xchg
lret
popa
jnp
jno
lahf
insb
popl
cmpsl
lret
movsb
rolb
lea
stos
outsl
xor
fimuls
shl
lret
movl
lcall
jnp
mov
lds
in
dec
dec
into
push
es
sbb
push
mov
int3
lods
push
scas
sti
mov
sbb
imul
incl
or
in
ja
cmp
jge
xchg
cs
jns
jge
pop
lahf
fldl
test
jns,pn
xor
movsl
or
jecxz
test
roll
sti
ret
adc
call
aas
dec
rcr
or
push
xorb
cmpsl
mov
mov
sub
cmp
xacquire
pop
lret
jecxz
je
pop
jle
xor
cmpsb
lahf
lea
mov
mov
jae
cmp
mov
jae
jns
cmp
dec
out
push
pop
pop
inc
jnp
xor
lcall
push
jbe
xchg
cmp
ret
xchg
js
sub
outsl
xchg
mov
rorl
fisubrl
bound
mov
jns
enter
mov
push
mov
lea
fnstsw
pop
fadds
push
shl
arpl
js
popa
cmp
js
and
js
mov
icebp
mov
jge
push
sahf
dec
lds
jae
in
mov
add
mov
das
inc
xchg
jae
cmpsl
jg
repnz
movsl
lret
imul
jns
ljmp
arpl
imul
test
jb
imul
rcl
out
adc
inc
nop
jb
push
sbb
sbb
or
mov
mov
scas
dec
xchg
xchg
clc
xchg
jmp
insl
movsb
xor
inc
pushl
aam
and
lock
sbbl
daa
mov
cli
repnz
mov
jmp
push
pop
xor
pop
mov
movsl
in
sti
mov
ret
stos
mov
sahf
outsl
add
mov
lret
mov
fistpll
sbb
xchg
adc
xchg
xchg
enter
mov
sbb
inc
push
xor
push
cmp
rol
mov
stos
and
out
ss
add
cwtl
ja
movsl
push
repnz
aaa
lahf
inc
pop
xor
aad
aad
mov
mov
adc
dec
outsb
adc
nop
add
push
cmc
mov
sbb
shrl
push
call
sub
repz
outsl
dec
and
ljmp
mov
shlb
lcall
dec
jae
repnz
sbb
and
ds
lret
mov
fcompl
add
xlat
ja
jmp
mov
jbe
push
xor
dec
sub
push
mov
lret
cmp
pop
mov
nop
xchg
lret
jecxz
ljmp
dec
arpl
lea
in
mov
pop
popa
pop
mov
xor
pop
mov
push
in
fimuls
jno
int
pop
cmp
xlat
js
dec
gs
lods
or
pop
lret
out
xor
sub
adc
mov
xchg
mov
std
in
xorb
adcb
xchg
inc
aam
sub
ss
sbb
xor
or
xchg
ljmp
push
push
subb
repnz
addr16
lods
insb
xchg
shll
pop
dec
cmp
and
leave
mov
pop
adc
js
repnz
iret
cmpsb
sbb
in
lahf
jns
xlat
stc
pop
lods
push
sbb
stos
orb
fucom
in
cmp
into
sbb
add
push
cwtl
movsb
fwait
xorb
sub
lahf
push
xor
adc
jl
stos
insl
inc
push
subl
out
fidivl
imul
lret
call
or
push
xchg
xchg
out
or
or
sub
adc
pop
stos
cmp
adc
add
mov
mov
xchg
jb
pop
xor
orb
mov
int
stos
lret
cmp
inc
iret
push
cli
inc
and
repnz
daa
pop
out
dec
dec
jmp
jle
push
sub
inc
mov
mov
loop
adc
xchg
cmp
jae
sbb
and
mov
aam
dec
cmp
push
movsb
xor
dec
cli
insl
gs
aad
mov
and
push
fsubrs
inc
addl
ret
mov
jne
in
xor
xchg
lock
imul
std
lcall
adc
les
mov
add
jle
divb
xchg
inc
sub
add
lret
mov
and
dec
jnp
mov
pop
sub
inc
mov
dec
push
lds
mov
iret
inc
add
mov
jne
stos
pop
and
adc
mov
aas
mov
clc
jmp
xor
shrl
rcl
hlt
outsb
push
sbb
dec
push
or
mov
jb
and
pop
imul
push
stc
cmp
xchg
out
jmp
or
icebp
push
iret
test
pop
leave
push
xor
sub
sub
dec
call
test
incl
mov
inc
cli
or
test
pop
int3
call
test
movsb
xchg
ficomps
cli
in
sub
mov
inc
notb
inc
inc
je
cmc
rorb
inc
cltd
mov
lcall
enter
push
loope
jecxz
lret
jge
das
cmpsb
imul
leave
push
cwtl
dec
in
jb
jb
cmp
shlb
imull
fmull
or
clc
pop
mov
ss
xor
push
mov
ja
inc
lret
fldt
test
jl
push
xchg
leave
in
insb
add
arpl
aam
and
mov
and
outsl
sbb
ja
lock
pushf
push
inc
loopne
jns
imul
push
pushf
sub
out
stos
jp
push
or
cmpsl
or
inc
jnp
daa
inc
sbb
lret
js
cli
cmp
or
mov
divb
jnp
xor
mov
enter
mov
insb
cmp
ja
mov
cmp
fincstp
xor
and
movsb
subb
les
bound
add
notl
mov
cmpsl
lret
push
lret
insl
aad
dec
imull
mov
popa
lds
das
js
push
xchg
je
test
cmpsb
dec
leave
cmp
scas
jnp
ja
imul
test
or
cltd
mov
sbb
and
out
repnz
jno
dec
ret
push
aam
mov
fs
popf
and
call
sbb
lret
enter
mov
and
bound
mov
adc
push
cmp
xor
out
inc
jne
aaa
ja
iret
fsubl
lahf
add
inc
ds
jns
xor
fidivrs
popf
mov
sbb
inc
std
push
rol
pushf
jns
and
ret
push
mov
movsb
pusha
in
subl
mov
cli
xchg
mov
pop
xor
fbstp
mov
popf
xchg
and
mov
jmp
push
lods
repz
aad
fwait
mov
cli
decl
cld
js
scas
ds
or
xchg
sarl
sub
dec
inc
xchg
pop
dec
fstl
fisttps
xlat
cmp
sub
cmpsl
jle
add
or
add
imul
and
aaa
sbb
mov
outsb
fdivr
ss
pop
xor
outsb
stos
cmc
stos
mov
sahf
lds
out
xchg
les
dec
gs
outsl
mull
pop
cmp
idivb
imul
sub
js
negb
jg
enter
pop
sbb
mov
cmp
cmpsb
test
sbb
movsb
cwtl
or
inc
scas
addr16
inc
dec
test
mov
and
gs
jns
adc
push
adc
sub
scas
fstp
pop
pop
xor
cmp
into
out
mov
mov
iret
jmp
push
test
inc
lahf
repz
xor
out
or
insl
dec
push
lds
fldcw
xor
out
mov
popa
sahf
mov
mull
test
fsubl
in
mov
or
and
shr
addr16
fwait
adc
mov
in
aaa
lahf
mov
addr16
leave
cmc
or
lds
dec
cli
out
xor
sbb
inc
cmpsl
xor
xor
lods
push
adc
push
cmp
int
outsb
add
add
adc
push
jb
testb
cwtl
mov
das
jg
outsl
cmp
push
jb
sbb
loop
or
sahf
knotw
sar
rclb
mov
mov
outsl
mov
cli
repz
inc
sbb
in
cmpb
leave
sbb
aad
pop
adc
pop
xchg
sub
push
popf
test
cmp
out
cmpsl
ljmp
ret
and
and
pop
mov
mov
dec
jnp
jno
cmpsb
mov
icebp
add
mov
mov
pop
mov
push
leave
xchg
aad
mov
cmp
movsb
cmp
pop
iret
popf
ljmp
adc
or
shlb
inc
mov
pop
mov
test
scas
mov
cmpsl
aaa
ss
xchg
xor
insb
into
xchg
or
pop
cmp
mov
add
push
adc
sbb
jle
mov
test
lods
push
mov
pop
and
scas
jl
jle
adc
pop
fwait
popf
pop
jbe
nop
insb
push
mov
jne
je
jmp
fildll
sbbl
xchg
ret
aam
inc
stc
inc
aaa
ror
ret
rcrb
xor
scas
jns
jp
dec
shlb
cmc
das
mov
xchg
cmpsl
xor
aad
cmpsl
jbe
jp
je
data16
jmp
jbe
ja
insb
push
fsubrl
or
add
movsl
iret
inc
adc
fadd
sti
add
imul
cmp
sbb
jns
cmp
cmp
bound
loop
cmp
dec
shlb
mov
pop
shlb
mov
cmp
outsb
dec
pop
pusha
sbb
push
sahf
jne
sarl
adc
aaa
ljmp
cmp
sti
mov
int3
int3
and
pop
pop
xchg
es
inc
sbb
inc
lds
push
push
hlt
cwtl
jmp
jno
movsl
shrl
sub
js
test
and
je
rcrl
adc
cmp
add
add
cmp
das
jge
ret
or
and
mov
or
mov
cli
gs
jns
inc
xor
gs
cmp
and
xlat
jle
inc
fs
push
adc
sti
mov
pop
orb
pop
setl
mov
in
sbb
jg
cmp
cmp
inc
lcall
jbe
push
jno
call
xchg
mov
ret
dec
push
xor
pop
in
mul
pop
int3
mov
icebp
pop
xchg
mov
sub
xor
or
divl
xor
lods
icebp
clc
ljmp
sarl
les
sti
xchg
add
imul
jg
push
hlt
popf
xor
mov
inc
adc
jo
shlb
test
mov
push
adc
adc
out
icebp
jo
inc
sub
hlt
movsl
rorl
jo
into
mov
dec
jl
fcom
dec
push
in
aam
insb
movsb
je,pn
out
push
int
mov
push
arpl
lcall
dec
push
mov
das
aad
hlt
loope
in
push
jmp
nop
ljmp
sbb
and
fbstp
addr16
dec
imul
sub
int3
pop
xor
in
lahf
cs
lcall
outsb
jnp
sti
lahf
and
bound
adc
cmp
aam
mov
and
dec
xchg
add
cmovns
mov
push
inc
pop
xor
pushaw
loop
adc
hlt
cmp
test
imul
xor
or
xor
out
add
sbb
enter
xor
movb
xchg
or
sbb
dec
icebp
sbb
fsts
push
or
push
and
sub
push
jmp
push
xlat
rcrl
fmull
dec
pop
cmpl
nop
arpl
std
xor
cmp
cmp
fidivs
pop
xor
loop
xchg
outsb
jnp
add
imul
xor
loope
jo
mov
out
adc
call
nop
in
sti
popa
test
sbb
and
ret
mov
roll
inc
hlt
sbbl
mov
rorb
push
sbb
mov
pop
out
push
xchg
jo
jp
add
adc
cli
pop
pop
sub
pop
and
insl
cmp
dec
adc
pop
sbb
lcall
jnp
mov
xchg
xchg
xchg
fcomps
lods
mov
test
adc
pop
out
xchg
dec
imul
test
popa
loop
mov
sub
mov
in
xchg
aam
lahf
push
cld
imul
clc
mov
loop
pop
adc
mov
popf
das
pusha
addr16
imul
pop
cmp
sbb
and
sbb
les
sti
cmp
add
aad
decl
mov
sub
in
insl
xchg
fnsave
sub
out
ljmp
jnp
mov
repnz
inc
test
pushf
jmp
out
in
pop
sub
in
cmpsb
scas
xor
xchg
push
daa
daa
pop
or
add
pop
cmovle
ret
cmp
imul
cltd
dec
aad
push
push
mov
fisubs
xor
xchg
mov
sub
xor
fisttpl
pop
or
int
fidivs
mov
jecxz
add
pushf
mov
daa
dec
pop
push
fs
in
loop
out
mov
ljmp
cmpsl
je
cmp
arpl
mov
push
data16
lret
iret
push
fcmovu
dec
or
mov
adc
bound
daa
test
and
ja
push
pop
or
hlt
or
movsb
popf
or
loope
iret
sbb
jecxz
add
xchg
and
xchg
daa
mov
mov
fnstsw
hlt
sbb
pop
adc
push
fldenv
mov
xchg
adc
int
stos
jne
add
jns
add
dec
rcrb
icebp
ret
mov
jae
and
jb
cmpb
lds
pop
mov
out
test
loop
or
or
inc
and
lret
sub
outsb
imul
push
mov
jns
notb
pop
pop
or
and
incb
jo
mov
sbbb
xchg
int3
xchg
or
pushf
repz
mov
fs
sbb
adc
jae
xchg
imul
lods
arpl
jl
dec
xchg
cmpsl
sbb
ret
femms
repz
adc
pushf
push
xor
add
rcll
out
push
pop
mov
cmp
cmp
mov
xchg
leave
cmp
ret
mov
or
into
push
fisttpll
xchg
idiv
into
stc
pop
call
clc
shlb
push
xchg
movsb
add
xchg
pushf
data16
pop
pop
leave
push
push
mov
daa
inc
lock
sahf
or
out
jl
fildll
add
xor
xchg
mov
jmp
or
push
les
mov
iret
xor
inc
mov
push
cmpsb
cli
gs
cmp
test
add
dec
xlat
mov
movsb
and
xor
sbb
dec
les
ja
pop
mov
lahf
inc
push
in
aad
xchg
repz
mov
jo
lret
gs
mov
mov
test
push
into
or
movsl
mov
gs
adc
sbb
fistpl
data16
mov
cmp
rcrb
fcmovnbe
push
pop
mov
adc
gs
push
ret
or
push
repz
mov
lcall
lahf
dec
aam
add
test
std
fdivs
jns
xor
sub
inc
aad
pop
movsb
in
dec
xchg
push
cmp
push
pusha
sarl
mov
dec
cld
into
mov
ret
mov
rol
push
in
lret
rcrb
std
fldt
cs
mov
add
xor
mov
mov
lods
xor
pushl
inc
xor
aas
lcall
cmp
imul
leave
jb
mov
jbe
jmp
scas
xchg
mov
inc
bswap
lods
mov
aam
lods
or
xor
mov
sbb
xchg
add
iret
fistl
mov
mov
push
out
out
lods
sub
dec
mov
addr16
flds
xchg
fildl
lea
mov
paddusw
faddp
add
xchg
xchg
xchg
jo
push
or
sbb
rcll
add
mov
push
push
pop
and
sbb
fwait
xchg
mov
xor
cltd
imulb
mov
mov
pop
out
cld
les
and
test
rclb
lds
pop
icebp
inc
cmp
mov
push
or
ja
cs
and
cmp
idivl
push
mov
inc
jnp
jle
inc
mov
cmp
lcall
rorb
ds
mov
or
popa
mov
cmc
mov
and
jecxz
js
popf
adc
test
stos
loope
int3
push
push
in
lea
xor
sub
fs
jno
sub
mov
or
setae
push
adc
lret
xlat
fmull
xchg
mov
lret
and
fisttpl
dec
clc
rcrl
push
mov
mov
mov
fsubs
or
scas
mov
sub
fidivrs
addr16
movsb
outsl
loope
hlt
lea
mov
insl
andl
pop
lods
aad
outsb
loopne
xlat
insl
inc
std
dec
imul
mov
mov
lcall
pusha
popf
mov
pop
aas
inc
ljmp
mov
and
mov
icebp
xchg
out
cmp
mov
je
and
loope
pop
stos
ljmp
adc
hlt
cmp
jg
dec
icebp
notl
adc
inc
aaa
lock
sub
es
add
mov
in
fxch
or
inc
cli
jle
cmpsb
sbb
les
jecxz
in
mov
ja
xlat
push
das
cmp
ret
adc
std
or
in
dec
adc
sub
mov
fistpl
imul
dec
mov
ds
jmp
and
sti
shlb
lcall
insb
mov
rorl
sub
icebp
and
daa
mov
mov
popf
or
sbb
out
mov
add
test
movb
aad
push
sub
cmpl
pop
sbb
mov
cmc
sahf
sahf
pop
ret
mov
mov
pop
and
ret
cmp
jo
jge
in
push
or
daa
call
fldenv
leave
sub
and
leave
mov
push
shll
mov
mov
hlt
rcrl
test
xchg
mov
jg
adc
cltd
xor
in
push
scas
fildll
out
filds
cld
test
into
loop
cmp
push
divb
jl
and
or
inc
sub
inc
mov
loopne
mov
leave
cltd
ret
pop
test
jbe
and
rcll
mov
adc
stc
in
loope
sbb
lea
inc
mov
aas
jnp
fisubrl
pop
pop
cs
sub
sub
jne
sub
bound
adc
and
shrb
mulb
in
fs
xchg
aaa
push
pop
icebp
ds
std
push
rclb
data16
jnp
test
jecxz
xor
ss
idivb
in
add
mov
mov
cmpsl
xchg
fidivrs
sub
adc
cmp
fwait
xchg
dec
in
out
dec
out
addr16
sti
scas
cmp
sub
lods
ja
cld
stos
cmp
nop
push
jae
popf
mov
mov
mov
jnp
xchg
je
mov
std
push
dec
inc
nop
mov
pop
add
pusha
jns
mov
jae
add
je
cltd
xlat
mov
jecxz
push
into
roll
adc
xchg
shll
insb
and
add
movb
movl
mov
stc
jb
cmp
cmpl
add
or
insl
roll
clc
jae
cmc
sbb
test
add
shlb
pop
paddsb
jae
pop
add
clc
jae
xchg
mov
fildll
addw
xorb
stc
jb
mov
test
jae
dec
cmp
add
jae
dec
scas
out
in
add
clc
jae
clc
daa
sub
test
clc
jae
cmp
ret
cmp
daa
aaa
mov
sarl
mov
sahf
or
lea
add
mov
or
jno
jl
lds
mov
insb
gs
or
aad
je
jae
jp
dec
xchg
jnp
inc
mov
cltd
jne
push
add
jecxz
adc
pusha
pop
and
gs
test
int3
xorb
sub
xor
mov
jmp
jns
xor
lcall
add
dec
inc
test
xor
stos
sub
int
add
in
mov
pop
mov
and
jno
fnsave
imul
mov
lahf
shlb
sahf
test
cmp
mov
cltd
and
out
insl
fldl
ja
and
lret
lds
mov
and
in
or
out
xlat
mov
inc
sub
jmp
fwait
cmp
in
dec
xchg
pop
fs
fs
aas
inc
inc
inc
ret
mov
sbb
out
mov
and
dec
cmp
jl
in
inc
xorl
lds
jnp
mov
pop
mov
scas
ret
and
cmpsb
pusha
lret
mov
stos
inc
dec
pop
xchg
fwait
mov
lock
bound
cmp
mov
frstor
test
dec
data16
cli
mov
adc
xchg
repnz
loopne
hlt
push
je
mov
das
push
rcrb
push
push
xchg
mov
lret
lods
xchg
inc
sub
mov
jae
cmc
inc
cmc
mov
sbb
sub
int3
ljmp
dec
ljmp
loopne
fcoms
jnp
dec
aad
jnp
inc
jb
daa
xchg
dec
or
and
sbb
push
pop
fistl
sahf
mov
stc
pop
shr
and
aam
dec
in
aas
xlat
mov
sub
add
xorb
rorb
jmp
inc
or
mov
push
pushf
push
inc
test
outsl
mov
dec
sub
ljmp
push
ret
xchg
cmp
and
and
aaa
sbbl
iret
add
rcr
js
or
add
mov
xlat
jmp
mov
add
cmp
xchg
aam
mov
scas
aas
je
dec
mov
xor
and
and
xchg
push
popf
xchg
lds
mov
cmp
adc
std
les
xor
rclb
push
mov
insl
fistps
add
add
add
xchg
test
test
add
sti
xchg
dec
mov
insb
xchg
inc
bound
in
jmp
ror
in
fiadds
dec
dec
sub
popf
xchg
scas
outsl
mov
test
fwait
dec
mov
stc
jno
jp
cmp
xor
cmp
pop
loopne
sub
cmp
imul
cmc
fisubs
fdivs
sar
fiaddl
mov
rdmsr
mov
pop
mov
xchg
lcall
jmp
cmp
or
and
mov
les
mov
inc
sub
add
push
add
sahf
add
add
add
add
rcll
jne
jno
outsl
bound
xor
xor
ret
fs
inc
sbb
mov
push
jne
add
pop
das
stos
stc
xor
les
leave
mov
inc
push
add
push
fisttpll
dec
pusha
xchg
rcrl
mov
dec
add
push
sub
lret
data16
push
push
iret
scas
and
inc
cmp
jle
inc
jns
pop
bound
fiadds
dec
jecxz
push
mov
mov
iret
ffree
rol
push
insb
inc
clc
jno
outsb
mov
enter
popl
int
and
add
not
xchg
lock
push
cmpsb
and
dec
pushf
mov
rcrb
add
lret
fwait
mov
sbb
daa
mov
es
mov
mov
jl
push
and
and
xlat
or
ds
nop
scas
rorl
jp
lcall
push
ljmp
jl
mov
pop
mov
ljmp
bnd
and
mov
fdivrl
fwait
adc
ja
in
fs
jne
inc
xorb
imul
xlat
fstpt
push
clc
scas
push
leave
jle
sarl
sbb
fucomi
mov
inc
sarb
cmc
int
xchg
add
add
xlat
sub
xorl
test
add
add
sub
ret
xchg
movsl
rcrb
add
mov
int3
daa
sub
pop
inc
cmpsl
adc
dec
jbe
sbb
loope
pop
jae
xor
pop
sbb
movsb
jle
lea
dec
subl
outsl
cmpsl
int
mov
in
push
ja
mov
pushl
push
xchg
loop
jmp
jmp
into
leave
shlb
add
jp
pop
out
jne
mov
cmpsl
lahf
shlb
mov
es
addr16
jge
lahf
xorl
mov
data16
mov
mov
or
pop
dec
and
fldl
shrb
jno
push
or
das
popl
jne
repz
bswap
test
pop
cld
pop
xor
movsl
xchg
xchg
movsl
je
cmc
outsl
xor
sbb
mov
mov
xor
mov
ffreep
cmpsl
push
mov
insb
dec
mov
mov
cwtl
in
xchg
ret
sahf
call
mov
stos
sahf
mov
push
test
mov
xor
int
add
push
outsb
shl
mov
es
or
lcall
call
jp
loope
cmc
jg
sbb
clc
mov
cld
xchg
ds
in
jo
pop
scas
jo
dec
xchg
xchg
xchg
push
fldenv
aaa
add
sbb
subb
or
sub
cmpsb
or
aam
push
jmp
or
lds
mov
xor
in
clc
inc
inc
adc
push
out
cld
aam
in
nop
cld
jo
or
or
stos
aas
sub
add
aaa
xchg
je
lds
data16
sbb
jnp
mov
sti
pop
stos
xor
cmp
scas
rcll
cli
push
xor
xchg
pop
sbb
outsb
or
and
or
jle
jle
mov
and
inc
fwait
imul
daa
sbb
jne
jl
xor
xchg
les
dec
inc
jne
nop
mov
mov
pushf
push
out
xlat
test
xor
cmc
push
mov
jbe
in
nop
pop
inc
ret
or
pop
adc
pop
out
dec
cmc
mov
out
jle
add
cld
fsub
sub
jbe
in
adc
data16
stos
pop
xor
push
dec
bound
pop
aam
or
ss
sub
pop
mov
movsb
xor
xchg
xlat
inc
mov
xchg
xchg
in
push
mov
mov
pop
pop
push
notl
mov
pop
xorl
jle
inc
dec
stos
outsl
inc
xor
jnp
cmpsl
sub
pop
fistpl
sub
mov
leave
cmp
jge
fisttps
push
insb
out
lahf
pop
jns
mov
andl
inc
in
dec
pop
jg
insb
xor
pop
sbb
add
jbe
cmpsb
mov
fs
xchg
iret
add
sbb
inc
cwtl
repnz
xchg
and
and
movsl
mov
mov
sub
lret
testl
jno
inc
xor
sbb
js
mov
cmc
xor
ret
aas
sbb
mov
dec
cmp
aaa
xchg
sbbb
pushf
adcb
add
sub
insl
fistps
incl
add
add
lds
cmp
ja
movsb
jnp
dec
and
es
push
and
mov
sub
or
rcrl
dec
sbb
inc
idivb
rolb
stos
out
mov
mov
mov
and
std
shrb
mov
xchg
push
dec
fstps
jmp
jp
sbb
pop
enter
nop
sti
dec
imul
mov
push
jmp
add
jg
shl
clc
adc
pop
cwtl
and
xor
add
cmpsb
lcall
stc
xor
shll
mov
idivl
inc
popa
test
cld
outsb
sti
lret
negb
mov
mov
stos
popa
jecxz
scas
lret
cmp
xor
test
mov
pop
jne
int
push
sub
rorl
xchg
dec
adc
hlt
shr
push
testb
add
lea
mov
add
and
shr
add
sub
call
mov
pusha
in
mov
rcrb
into
icebp
pop
loope,pt
jge
imul
push
sub
rol
pop
fldt
add
mov
xchg
pop
and
xor
inc
incl
xor
dec
and
push
mov
push
pop
mov
or
sub
fs
ja
scas
out
clc
xchg
cmp
sub
sbb
pop
push
pop
daa
sarl
movsl
clc
in
fstps
cmp
pushf
adcl
xlat
mov
addr16
xchg
xor
xor
ret
or
sbb
sub
aam
test
in
xchg
test
icebp
push
mov
push
fdivrl
or
mov
aaa
fisubrs
ljmp
jecxz
dec
jbe
out
xchg
add
and
stos
popa
jno
es
jmp
jle
dec
pop
addb
call
xchg
out
push
mov
ret
rol
les
cmpsl
lds
mov
into
push
inc
lods
fwait
jg
outsb
stos
roll
es
popf
push
stc
sbb
jl
hlt
dec
movsb
sub
cmp
and
sub
push
mov
and
ljmp
sbb
mov
aam
lret
lret
sbb
and
test
adc
mov
iret
push
inc
mov
out
add
enter
inc
daa
push
jecxz
mov
mov
adc
cmp
and
jge
pop
sub
sbb
jl
xchg
into
push
jge
lock
inc
loop,pn
sub
or
and
es
pop
call
es
push
add
sub
mov
sti
pusha
imul
mov
add
icebp
ret
add
aad
fistps
aaa
xchg
mov
and
addl
cltd
sub
adc
out
cmc
mov
fldenv
cwtl
int3
adc
incb
push
ret
sub
cmp
lahf
frstor
xor
addr16
pop
push
jmp
dec
mov
mov
fdivs
imul
movsb
push
sub
fisttps
pop
loope
mov
mov
mov
jno
xchg
shll
and
or
pushf
pop
in
cmp
in
pop
mov
sub
call
cmp
cmp
sbb
jle
push
leave
loopne
mov
cmp
ds
dec
cmp
popl
mov
je
rcr
mov
outsb
jbe
inc
push
clc
fdivl
add
xchg
out
int3
and
mov
jmp
cld
out
aaa
xchg
pop
fnstenv
add
mov
dec
lret
jle
xchg
aaa
mov
sub
cmpsb
mov
xor
in
xor
loope
lcall
mov
imul
jnp
sbb
xchg
sbb
ss
aam
mov
xchg
movsl
ja
int
cmp
fs
or
adc
jns
xor
sar
insl
bound
inc
xchg
add
std
sbb
sahf
push
dec
pop
sub
or
xor
xchg
sahf
inc
or
xchg
adc
lock
push
dec
mov
xchg
aaa
mov
sub
cmpsb
mov
xchg
xchg
mov
dec
and
loop
out
and
test
adc
leave
add
push
rolb
pop
mov
stos
cmp
push
mov
out
xchg
jge
aas
call
dec
cmpsb
xor
dec
jne
push
lcall
out
es
push
cltd
sti
xchg
mov
pop
push
lods
sub
jge
out
insl
cld
dec
mov
cmpsb
sub
popa
pop
sub
mov
cmp
data16
test
scas
adc
xor
push
or
decl
mov
stos
popa
jno
dec
out
in
xchg
cmpsb
mov
leave
xor
insl
add
push
pop
or
lahf
dec
mov
int
int3
adc
sar
jno
jo
outsb
lock
jp
mov
or
clc
xor
nop
mov
inc
es
xchg
adc
cmpsb
cli
movlps
xor
mov
ret
mov
push
nop
pop
pop
adc
xchg
ds
adc
sbb
dec
sbb
int
test
les
jge
push
stos
loope
inc
andb
jle
aam
aas
or
push
int
in
add
jae
jae
aaa
ds
push
hlt
push
out
lret
filds
repnz
mov
mov
sbb
xchg
mov
orb
mov
sbb
lahf
arpl
adc
aam
push
pop
inc
dec
filds
lds
jecxz
cmp
mov
cmpsl
sahf
xor
push
fistl
cmp
and
xchg
sub
xchg
dec
cltd
xor
add
out
jo
mov
cmp
fistl
addr16
mov
xlat
testb
jb
sbb
popf
stos
push
lahf
jo
push
mov
dec
xor
aam
push
pop
inc
dec
filds
lds
jecxz
cmp
mov
cmpsl
sahf
xor
push
fistl
cmp
and
xchg
sub
xchg
dec
cltd
xor
add
out
jo
mov
cmp
fistl
addr16
mov
xlat
testb
jb
sbb
popf
stos
push
lahf
jo
push
dec
cli
mov
call
sbb
sti
push
pop
inc
dec
filds
lds
jecxz
cmp
mov
cmpsl
sahf
xor
push
fistl
cmp
and
xchg
sub
xchg
dec
cltd
xor
add
out
jo
mov
cmp
fistl
addr16
mov
xlat
testb
jb
sbb
popf
stos
push
lahf
jo
push
jle
mov
outsb
jb
dec
rorb
push
push
les
std
sub
inc
mov
popl
mov
mov
or
iret
xchg
cmp
jo
iret
jp
and
icebp
mov
bound
lods
adc
das
jae
dec
sbbb
aad
iret
test
pop
inc
push
adc
sub
jo
lock
and
cwtl
test
sarb
fistpll
imull
addr16
inc
dec
filds
lds
jecxz
cmp
mov
cmpsl
sahf
xor
push
out
pop
out
iret
out
idiv
je
movsb
adc
mov
shrb
inc
jnp
aaa
repz
pop
sbb
jo
cmpsb
dec
repnz
push
ldmxcsr
imul
sbb
or
mov
pusha
cs
inc
jmp
cmpsl
hlt
int3
inc
adc
repnz
cs
outsl
insl
mov
stos
pop
mov
mov
sub
addl
pop
fdivrs
das
in
xchg
ret
lods
pusha
test
xchg
insl
sub
nop
rcll
fsubrl
pop
push
or
in
cmp
or
xor
fcoms
call
xor
mov
test
inc
mov
stc
mov
js
les
mov
xor
cmp
aam
test
movsb
lods
jb
push
add
mov
enter
push
pop
jmp
push
push
sti
push
push
cmp
or
out
cmc
sub
add
out
xor
les
inc
ret
movsl
push
sahf
cmp
xor
js
in
stc
nop
pop
pop
adc
xchg
ds
adc
sbb
dec
sbb
int
sub
scas
mov
sti
inc
pop
in
shll
jg
test
push
jmp
pop
mov
test
jl
or
fsubl
dec
int3
loope
rcll
lret
inc
js
jae,pt
stc
mov
pusha
cs
inc
jmp
cmpsl
hlt
int3
inc
adc
repnz
cs
outsl
insl
mov
stos
pop
mov
mov
sub
jl
cmp
mov
pop
js
mulb
gs
pop
insl
movsl
into
mov
leave
push
gs
rcll
fsubrl
pop
push
or
in
cmp
or
xor
fcoms
call
xor
mov
test
inc
mov
adc
jl
mov
fmuls
dec
lahf
jo
push
je
mov
arpl
test
movsb
lods
jb
push
add
mov
enter
push
pop
jmp
push
push
sti
push
push
cmp
or
popa
adc
ds
in
bound
cmpsb
bound
cmp
xor
js
in
stc
nop
pop
pop
adc
xchg
ds
adc
sbb
dec
sbb
int
dec
jns
leave
jl
xor
mov
mov
jecxz
adc
imul
test
mov
jnp
mov
insb
inc
push
insl
fbstp
fdivs
adcb
pop
clc
push
test
iret
das
cmc
loop
popf
cmpsb
lods
or
add
pop
out
jo
mov
cmp
fistl
jmp
add
popa
xchg
and
pushf
ret
nop
jb
pop
push
add
cmp
rcrl
in
xor
fwait
mov
jns
out
shrl
push
mov
jg
sub
xchg
insb
cmpsb
dec
inc
cmpsb
inc
pop
sbb
leave
sbb
lahf
mov
xchg
push
testl
fisubl
add
mov
enter
push
pop
cmpsl
add
mov
xor
adc
sbb
idivb
mov
js
push
out
xlat
pop
rcll
mov
cmp
or
orl
dec
fldenv
inc
mov
sub
movsb
je
pop
sbb
pop
test
or
add
pop
out
jo
mov
cmp
fistl
jmp
add
popa
xchg
and
pushf
ret
nop
jb
pop
push
add
cmp
rcrl
in
xor
fwait
mov
jns
out
shrl
push
mov
jg
sub
xchg
insb
cmpsb
dec
sbb
or
sub
in
mov
adc
pop
aaa
and
cmp
cli
cltd
fwait
push
les
jno
pop
jp
push
xor
xchg
scas
notl
pop
push
js
adc
dec
cs
inc
icebp
out
mov
cli
sbb
mov
lds
pusha
cmp
push
gs
push
adc
mov
outsl
xchg
aaa
outsl
xchg
sub
xlat
mov
mov
mov
leave
push
gs
rcll
fsubrl
pop
push
or
in
cmp
or
and
inc
cmpsl
pop
adc
jnp
outsb
xor
lock
and
call
loopne
push
cld
outsl
push
shlb
add
shll
mov
bound
out
dec
xor
cmp
aam
test
movsb
lods
jb
push
add
mov
enter
push
pop
test
pop
dec
lret
scas
ret
shlb
push
mov
fcmovnbe
or
push
into
out
xorl
push
arpl
out
mov
dec
movsl
xchg
xchg
les
xchg
xchg
jae
aaa
ds
stos
inc
ljmp
aaa
iret
add
mov
icebp
sbb
out
in
cmp
xchg
jmp
and
or
sub
das
cli
fwait
nop
pop
pop
adc
xchg
ds
adc
sbb
dec
sbb
int
add
popf
add
sbb
or
adc
gs
call
cltd
outsb
inc
in
popa
loop
adc
push
xor
test
mov
fs
dec
and
leave
scas
push
push
cld
sub
mov
data16
lods
or
add
pop
out
jo
mov
cmp
fistl
stos
sub
icebp
aam
lods
xchg
sub
mov
mov
sub
test
cmp
fldl
sbbl
xchg
hlt
pop
xchg
jmp
push
je
mov
arpl
test
movsb
lods
jb
push
add
mov
enter
push
pop
test
pop
dec
lret
scas
ret
shlb
push
mov
fcmovnbe
or
add
das
loop
xor
mov
jnp
ljmp
sbb
mov
mov
xchg
jae
aaa
ds
stos
inc
ljmp
aaa
iret
add
mov
icebp
sbb
out
in
cmp
xchg
inc
in
sbb
insl
or
push
iret
jb
cmp
cmp
pop
adc
xchg
ds
adc
sbb
dec
sbb
int
add
popf
add
sbb
or
adc
gs
call
cltd
outsb
inc
in
popa
loop
adc
push
xor
cltd
jg
add
or
aam
mov
sub
mov
data16
lods
or
add
pop
out
jo
mov
cmp
fistl
jmp
pushf
flds
and
outsl
jmp
sub
dec
call
push
into
xchg
rcrl
in
xor
fwait
mov
jns
out
shrl
push
mov
xor
push
rcll
pop
ret
leave
lods
mov
sahf
sbb
mov
int3
loope
rcll
lret
inc
js
jae,pt
stc
mov
sbb
sub
inc
push
and
js,pt
scas
insb
xor
jae
mov
or
jmp
or
rcrl
push
dec
test
xor
aam
in
nop
add
jnp
scas
decl
daa
std
fiaddl
mov
xchg
mov
sahf
imul
pop
adc
xchg
ds
adc
sbb
dec
sbb
int
test
les
jge
push
stos
loope
inc
andb
jle
aam
and
adc
arpl
mov
jnp
mov
insb
inc
push
insl
fbstp
fdivs
out
leave
lds
imul
sub
movsb
fsubr
push
scas
xchg
insl
dec
int3
loope
rcll
lret
inc
js
jae,pt
stc
mov
sbb
sub
inc
push
and
js,pt
scas
insb
xor
jae
mov
or
jmp
or
rcrl
push
dec
test
xor
aam
in
nop
add
jnp
jp
fnstcw
dec
ds
cld
rcrb
lods
test
mov
ret
cmp
jle
mov
pmaxub
add
lods
test
cmp
stc
icebp
cmp
dec
sub
lahf
enter
cltd
and
push
sbb
sbb
cmc
pop
pop
and
js
cmp
lret
fmull
popa
into
add
jns
mov
dec
xchg
mov
pop
das
insl
sbb
pop
je
lcall
fists
rcl
jb
jmp
adc
adc
nop
or
pop
adc
or
lock
hlt
sar
dec
adc
xchg
and
stos
cmc
ja
xchg
lret
cli
insl
ds
test
aam
notb
push
clc
sbb
mov
mov
lahf
jle
ja
mov
jb
fsin
lahf
clc
xchg
push
fistpll
outsb
jecxz
negb
add
inc
ja
popa
aas
push
in
fimull
cmc
test
outsb
mov
or
aam
push
loop
or
popa
inc
jae
dec
xor
push
mov
mov
sub
call
lds
add
loopne
sarb
or
rolb
pop
jl
sbb
lods
imul
push
xchg
fsubs
xchg
mov
andb
push
mov
repnz
fs
jl
in
ret
xchg
ss
ret
inc
sarl
pop
lret
jns
cmpsl
lods
jmp
add
xorb
mov
cmp
push
arpl
mul
fistpll
in
negl
std
xchg
je
xchg
arpl
pop
mov
cmp
mov
xlat
nop
or
jns
xchg
test
daa
push
jbe,pn
fsincos
out
inc
pop
mov
mov
push
stos
fst
aad
aam
into
add
lock
mov
ds
scas
pand
lods
lcall
andl
int3
and
add
fdivrp
push
sub
add
int
add
popf
lods
pop
mov
les
in
sub
subb
fs
jb
lret
adc
lret
add
js
jle
mov
push
insb
imul
mov
insb
jnp
lea
sbb
mov
dec
lahf
inc
xor
mov
xchg
ja
lock
adc
or
hlt
push
notl
or
push
das
fisttpl
push
push
sbb
add
outsb
rolb
add
scas
jo
mov
aam
inc
pusha
pop
pop
adc
mov
aas
pop
push
cmp
push
mov
sbb
ja
lea
pusha
mov
inc
adc
pop
cmp
xlat
mov
xchg
insl
ret
xchg
int3
in
jae
mov
dec
pop
shrl
pop
pop
in
shl
pop
in
adc
mov
or
ds
mov
inc
sbb
lea
icebp
push
jg
lret
dec
or
les
shll
inc
ds
ret
xor
lret
push
fsubl
xor
pop
adc
mov
push
ss
cmp
into
pop
stc
mov
push
xchg
sbb
pop
cmp
xchg
inc
jl
lahf
les
js
add
rcrb
fsubs
sub
std
insb
repz
xchg
lods
in
popf
add
decb
out
ret
jae
jb
out
lds
adc
inc
mov
push
scas
add
dec
lret
jnp
aad
push
fucom
and
mov
sti
shr
mov
inc
loopne
mov
pop
subl
test
add
mov
icebp
xchg
mov
mov
inc
in
aam
mov
test
lock
mov
std
mov
scas
inc
outsb
pop
fstps
scas
sub
clc
add
jecxz
add
sub
scas
ja
inc
xor
in
jne
cmp
mov
inc
cmpl
pop
xchg
in
push
xchg
pop
mov
fists
add
dec
and
ja
xchg
inc
and
dec
sub
shrl
stos
daa
fbstp
push
icebp
pushl
jecxz
into
mov
stos
adc
cmc
inc
mov
test
lods
lret
daa
pop
outsb
push
cmpsl
xchg
dec
inc
sub
push
popf
xor
cwtl
sub
daa
sahf
pop
in
xchg
into
xchg
sbb
stc
in
pop
mov
stc
xor
and
xchg
clc
aam
jg
add
andb
push
mov
out
iret
cmpl
inc
mov
daa
sub
cmp
adc
jb
mov
cltd
mov
mov
insl
je
ja
sub
pop
adc
lret
push
ret
jge
push
daa
lods
mov
pop
mov
jno
jno
mov
dec
lret
inc
lods
push
out
mov
subl
sub
mov
jae
ljmp
push
orb
add
xor
jae
bound
test
out
cmp
xor
es
xchg
add
xor
push
jae
mov
stos
ljmp
mov
push
loope
sub
push
mov
jnp
fucom
mov
mov
xchg
mul
test
adc
out
pop
call
inc
add
xor
inc
mov
nop
sub
js
adc
adc
push
sub
inc
in
out
cmc
aam
pop
push
or
rcl
add
push
xor
pusha
sub
pop
mov
or
lods
lret
movsw
push
dec
pop
pop
dec
cld
xchg
aas
push
xor
cmpsl
lea
dec
xchg
cmp
sbb
sbb
scas
cmpsl
sarb
jecxz
and
and
ret
jbe
and
nop
scas
pop
inc
aam
xor
sub
ffree
fldl
push
xor
daa
push
pop
adc
mov
push
cmp
mov
call
mov
fwait
call
daa
adc
daa
jmp
out
cli
imul
fiaddl
add
xchg
pop
jnp
movsl
and
push
and
addl
jns
xchg
insl
sbb
mov
mov
movsb
or
jecxz
out
rclb
xor
daa
dec
cwtl
pop
xchg
push
push
call
imul
rol
mov
add
mov
js
aad
jmp
lock
push
cmp
sub
cmp
divps
divb
shr
push
push
cli
mov
stos
fisttpl
iret
xorb
shll
adc
mov
outsb
cli
lret
test
rcl
dec
ret
bound
inc
outsb
fwait
ret
xchg
jo
lret
dec
fdivl
repz
shll
inc
sbb
hlt
test
pop
push
shll
sbb
xlat
adc
mov
outsl
insb
or
jecxz
aas
flds
shrl
outsl
add
loope
lcall
push
and
jge
jecxz
jnp
sub
and
in
jns
cs
out
rcrl
repz
sbb
adc
sarl
ret
sbb
leave
mov
adc
dec
or
cmc
adc
sbb
loopne
pop
jg,pt
imul
stc
or
or
push
hlt
not
mov
pop
insl
int3
es
jo
inc
notb
or
xor
cs
sbb
sbb
xchg
inc
pop
mov
es
insl
nop
inc
adc
xor
and
shl
into
sbb
push
jbe
lock
call
mov
ret
and
repz
add
add
lret
sbb
push
cmp
jl,pn
add
in
shrl
outsb
je
adc
mov
push
js
xchg
push
iret
mov
mov
fstpt
outsl
push
push
sub
add
in
cmp
popa
icebp
fbstp
cmp
jp
pop
adc
or
cmp
jl
dec
popf
arpl
cwtl
mov
fdivr
mov
jno
push
jp
fcomip
insb
adc
mov
incl
pop
mov
mov
arpl
mov
mov
cmp
add
pop
loopne
sub
add
dec
push
js
sub
test
jmp
loope
imul
mov
push
orl
cmc
jle
jae
mov
leave
dec
and
stos
ds
ds
ja
mov
mov
hlt
dec
repz
pop
mov
out
xor
leave
leave
push
shr
cmp
dec
lea
jno
jne
add
das
mov
push
fdivl
inc
addr16
ret
ljmp
xor
fiadds
cli
test
movsl
adc
popf
cmp
test
rcrl
push
insl
jo
mov
dec
cmp
push
pop
add
xchg
inc
sbb
loope
rolb
xchg
push
imul
jecxz
adc
inc
pop
mov
cmp
stc
inc
ds
jno
xchg
lcall
mov
sbb
inc
mov
mov
test
test
fisubrl
push
rolb
dec
daa
jp
subb
push
pop
dec
mov
mov
adc
aad
push
fstl
enter
pop
xchg
xor
fcmovu
std
pop
mov
jo
fistpll
sub
test
mov
sti
int3
enter
xchg
xchg
int3
push
pushf
in
xchg
push
xchg
add
clc
loop
sbbl
xchg
jp
pop
push
ss
out
jno
or
pop
mov
dec
push
jb
sbb
mov
add
cli
insb
sub
lds
xorl
dec
or
inc
sti
int3
jle
ja
or
fstl
adc
push
pop
dec
and
inc
out
dec
ljmp
ljmp
cmpsl
add
ds
dec
cmpsl
imul
imull
mov
xor
jae
mov
cmp
rcrb
loopne
cmpsl
pop
das
jo
into
xchg
outsb
out
addl
inc
cwtl
pop
movsb
cltd
gs
pop
negl
stos
jg
cmpsl
push
stc
lea
pop
sbb
data16
add
push
sub
loop
cmp
xchg
rolb
test
stc
test
xor
pop
fildll
mov
mov
xor
inc
mov
inc
daa
bound
pop
sbb
lods
sbb
mov
jge
cmpsl
pop
xchg
andb
mov
add
push
xchg
in
hlt
aam
or
imul
stos
xor
call
fcomps
sbb
test
aas
call
and
addb
pushf
rcl
ljmp
cltd
adc
rcr
pop
call
dec
cli
mov
arpl
pop
jg
insb
sar
mov
repnz
mov
rolb
fst
sti
aaa
push
jne
pushf
in
cs
cmc
push
dec
add
dec
sti
iret
push
or
cld
pop
jmp
iret
xor
int3
pushf
adc
mov
popa
lea
mov
test
fwait
aam
fs
loope
dec
pop
add
es
setg
cmovs
mov
dec
movsl
js
pop
cmp
stos
inc
inc
add
mov
jmp
jb
or
xchg
jg
vphsubsw
les
mov
in
pop
push
sub
lret
pop
sub
cmp
aaa
sbb
into
sbb
lret
in
mov
cmp
movsl
fucomi
inc
push
mov
ss
dec
push
clc
ja
sbb
and
dec
sbb
and
gs
dec
nop
scas
mov
sub
jl
mov
and
jg
cmp
add
les
mov
pop
inc
sti
mov
push
popf
lahf
jle
sahf
or
cmpsb
sarl
sbb
les
notl
pop
jle
lea
adc
punpcklwd
push
inc
cli
outsl
jbe
sub
outsb
dec
cli
rcrl
jmp
and
adc
add
cmp
lea
mov
or
or
iret
xor
outsl
ja
mov
rcrl
dec
stc
cmc
mov
jmp
or
in
add
test
push
mulb
mov
mov
cli
adc
cmp
rorl
cmp
mov
faddl
vpminsw
imul
fists
into
adc
inc
or
ja
lea
or
out
std
push
addr16
ljmp
push
cwtl
movsl
jl
test
inc
ss
popf
adc
mov
pop
mov
jo
test
dec
clc
sbb
and
inc
subl
add
mov
std
cld
leave
fistpl
out
push
sub
or
xchg
cli
nop
push
sub
cmp
ss
cmpsb
mov
adc
push
fisttpl
mov
leave
push
packsswb
dec
fucomi
pop
std
popf
and
rolb
jg
dec
xchg
je
ret
mov
add
dec
jmp
call
xor
out
xor
sbb
push
dec
xlat
mov
sbb
aas
pusha
shl
scas
sub
inc
repz
ficomps
insl
cmp
mov
int
fiadds
ret
adc
add
sub
mov
dec
ret
and
sahf
cmp
jp
xor
out
jno
popa
xor
push
std
test
sahf
jp
push
sub
or
xor
cmpl
mov
push
sub
je
xorl
cmp
roll
pushl
scas
leave
cmpl
scas
arpl
xchg
stos
orl
push
adc
cmp
jo
jecxz
jbe
hlt
int
scas
xchg
mov
adc
addr16
and
dec
pop
lds
sbb
xor
xchg
fdivs
push
test
pop
jo
scas
cli
cmpsb
stos
pushf
mov
test
push
test
jb
and
mov
cmp
mov
lahf
js
inc
stc
icebp
ljmp
or
js
xchg
mov
cmc
xchg
push
cmpsl
pop
pop
loop
mov
lock
jecxz
ss
add
int
out
mov
stos
out
jle
xor
xor
xlat
or
mov
sahf
loopne
mov
stc
cmpsb
sti
sarl
pop
inc
adc
pop
dec
in
insl
dec
sub
mov
popa
cmp
push
push
pop
scas
push
dec
sbb
cmpsl
add
bound
bound
repz
jo
jl
out
pop
fs
data16
cmp
jg
jg
lods
mov
jge
pop
in
shrl
aam
and
in
sub
jg
pop
cwtl
outsb
cmp
ljmp
cwtl
movb
fs
out
mov
mov
adc
push
daa
xlat
adc
jno
cmp
mov
je
or
push
jecxz
cs
andnps
dec
sub
loopne
daa
adc
mov
std
inc
fsubl
cli
dec
je
jb
test
adc
push
in
or
clc
xchg
cmp
inc
repz
mov
sbb
jge
insl
loopne
or
xchg
mov
std
and
or
outsl
mov
mov
mov
inc
inc
lahf
and
pushf
mov
sbb
and
xor
and
testl
repnz
pop
loope
cltd
icebp
lock
jne
jmp
fstps
xchg
mov
jns
add
lods
pushf
adc
enter
bound
mov
lret
adc
dec
sar
paddusw
shl
push
stc
mov
push
inc
sarb
stos
fimull
mov
lock
xor
inc
rcrl
mov
mov
not
mov
ror
pop
pop
cmp
inc
cltd
push
mov
or
mov
enter
outsl
sub
mov
insb
popa
out
mov
xchg
sbb
sti
imulb
lcall
pop
sub
sti
and
xor
pop
stos
add
sub
sahf
mov
stos
pop
mov
push
push
jg
test
add
mov
mov
pop
cmp
jl
sub
cmp
cmc
and
add
imul
ss
stos
pop
jbe
setb
rcll
fdivrs
mov
les
add
and
mov
mov
stos
lock
sub
rcll
pop
cmpsl
int
sbb
jmp
mov
ljmp
fsts
cmp
mov
or
sub
lret
mov
sub
out
pop
mov
dec
scas
pop
xchg
push
push
rcrb
pop
sbb
jo
push
dec
xor
xor
ljmp
inc
and
jecxz
push
cmp
ror
pop
int
iret
fnsave
mov
out
or
add
addr16
dec
push
ljmp
dec
push
retw
cmp
neg
mov
adc
lods
mov
int
mov
jbe
loop,pn
iret
xor
xchg
lock
adc
call
fs
sbb
mov
mov
shll
and
fwait
push
cmp
dec
mov
cltd
call
ss
push
cmc
push
sub
jns
fsubrl
sub
lock
pop
mov
cmp
mov
lea
mov
faddl
xchg
insb
push
pop
or
pop
push
sahf
inc
scas
inc
incb
aas
out
cmp
jno
js
push
adc
mov
add
mov
add
xor
mov
mov
pushf
into
loope
ret
imul
dec
fdivrl
mov
insb
mov
cmp
popf
sbb
or
ljmp
imul
adc
or
fistpll
shll
jno
rorb
aam
dec
in
xor
les
sbb
sahf
inc
imul
mov
sub
jge
mov
dec
fs
enter
mov
std
inc
cmp
gs
or
inc
lea
jno
or
ds
sub
scas
jno
cmp
push
or
pop
jp
push
in
dec
jae
or
pop
or
push
aam
jns
jle
std
cwtl
add
sub
fistl
pop
loop
clc
mov
in
inc
cmp
movsl
jbe
jle
stos
pop
inc
in
icebp
repnz
daa
sarb
push
out
sbb
cli
add
sub
ror
adc
cmpsl
xchg
pop
pop
sub
lcall
fistpll
testb
jmp
jae
std
mov
insb
add
addl
sbb
push
push
sti
sti
cltd
inc
xchg
mov
jbe
jecxz
mov
loopne
test
jmp
cmpsb
lcall
and
lcall
aam
sbb
insb
mov
add
lahf
sbb
pop
stos
jg
mov
adc
lret
inc
cli
adc
and
xchg
mov
pop
pusha
push
mov
imul
mov
lds
dec
inc
lea
mov
dec
push
pusha
sbb
pop
aas
hlt
loop
fwait
jns
les
xchg
into
mov
fistps
lock
dec
and
test
sarl
aam
pusha
stos
dec
in
xchg
nop
xchg
adc
xor
pushf
jo
dec
jp
daa
jb
sbb
jae
mov
mov
xchg
sub
or
leave
or
sbb
add
mov
lcall
or
outsb
ss
cmpl
add
stc
paddusw
ret
adc
mov
das
add
das
adc
mov
jmp
cmp
stos
jo
pop
push
cld
pusha
into
or
arpl
pushf
sbb
xchg
ret
icebp
pop
das
scas
inc
mov
bound
imul
sbb
test
dec
shl
sub
call
call
push
and
and
pop
lcall
pop
mov
push
shrb
fdivrs
gs
sub
subb
xor
sbb
adc
pop
roll
out
dec
xchg
inc
cmpsl
dec
jmp
and
popf
adc
mov
sbb
cld
mov
adc
lds
movb
inc
xchg
mov
mov
mov
cmc
or
xor
outsb
push
pop
pop
orl
mov
adc
mov
and
sahf
or
ja
loopne
xor
popf
pop
ja
aaa
fisttps
xor
cld
jg
ja
sbb
jg
fucomp
xchg
enter
mov
mov
lcall
xor
xor
lods
inc
out
mov
movsb
dec
cltd
mov
loop
sbb
dec
pop
push
cmpl
pop
jbe
pushf
jns
xor
sub
loope
adc
gs
or
ds
and
inc
or
call
int
ss
popa
and
cwtl
cmp
inc
push
out
adcb
fisubrs
pop
test
cld
pop
pop
inc
xor
in
sub
mov
fisubl
test
adc
cmp
daa
outsl
mov
subb
mov
aam
pop
and
mov
test
xlat
gs
lahf
jmp
ficomps
scas
xchg
push
aaa
cmpsb
cmc
flds
mov
gs
pop
and
popa
scas
scas
mov
or
mov
pop
sbb
xor
mov
mov
mov
xchg
ret
push
or
push
push
inc
dec
add
dec
pop
xor
push
aaa
cmp
mov
push
cltd
in
je
cmp
xlat
xchg
mov
ja
dec
xchg
mov
xor
mov
daa
cmp
push
and
push
and
pop
js
les
out
dec
xchg
js
and
add
jle
jge
mov
jmp
or
movsb
mov
lds
push
orb
jp
fdivl
jno
and
mov
lahf
sbb
jecxz
mov
jle
jb
inc
daa
dec
int
test
shrb
pop
not
pop
lret
arpl
inc
and
or
mov
xchg
sbb
jae
adc
mov
in
xor
addl
hlt
mov
bound
adc
adc
cmpsb
out
sahf
lahf
popf
ljmp
mov
dec
ret
xor
imul
jg
negl
popf
push
xor
push
jne
xchg
iret
leave
std
lret
es
imul
data16
sub
scas
push
mov
stos
ds
inc
xlat
mov
push
add
sahf
push
inc
fidivl
push
dec
mov
jl
mov
dec
jle
nop
data16
les
pop
push
push
and
cmc
pop
dec
jg
andl
add
mov
test
cmpb
adc
int3
xchg
orl
pop
or
test
imul
sti
iret
in
xor
mov
sbb
sbb
jno
scas
pop
sti
clc
add
jge
in
lea
sahf
iret
inc
or
lahf
std
fwait
and
mov
dec
fnsave
add
inc
dec
push
mov
sti
add
insl
mov
and
lret
add
aam
ds
inc
or
sbb
adc
imul
dec
push
push
push
sbb
int
xor
fdivr
inc
bound
xor
cmpsl
addl
ret
fwait
das
add
in
icebp
jns
cmp
push
rcll
ljmp
scas
cmp
mov
mov
dec
push
jp
mov
fisubs
xor
into
nop
inc
fldenv
fwait
sub
shlb
loope
int3
jne,pn
fcompl
jl
test
push
cmpsb
ds
mov
jo
add
xchg
icebp
scas
push
jno
push
or
push
lret
sub
mov
adc
loope
movsb
add
ret
cmc
jnp
xchg
mov
or
into
ss
jmp
cbtw
insl
cmpsb
test
sub
mov
mov
dec
call
add
xchg
outsb
andl
pop
push
and
mov
mov
clc
mov
cmpsl
pushf
arpl
mov
or
movb
cmp
cmp
mov
add
in
rcr
xchg
fwait
jnp
cwtl
xchg
js
xchg
in
test
ret
out
push
jle
testl
shlb
imul
jge
xchg
shr
mov
pushf
or
add
xor
mov
push
xchg
fwait
mov
das
push
pop
mov
or
testl
xchg
in
stos
aaa
or
mov
ss
mov
bound
call
pop
sub
cmp
sub
push
adc
adc
sbb
sti
adc
cmc
push
pop
cli
in
bound
adc
stos
int
sub
add
add
icebp
icebp
inc
cmc
sub
jmp
ret
cwtl
mov
stc
data16
jne
xchg
inc
mov
jmp
cs
addl
jmp
add
cmpl
int3
mov
and
inc
or
movsl
dec
popl
daa
mov
fs
js
scas
enter
jge
sbb
mov
and
fwait
in
mov
in
inc
scas
push
in
popf
sub
out
fisttps
lret
add
inc
hlt
cmp
orl
xchg
into
pop
lcall
jp
jl
out
jne
rcrb
mov
mov
pop
roll
xor
mov
call
cmp
mov
lea
mov
adc
add
rolb
mov
loopne
sub
lock
es
lock
lock
mov
jb
lahf
sbb
jl
rol
idiv
rorl
pop
sub
lods
mov
mov
ja
jne
mov
fcmovbe
xchg
movsb
negb
shrl
js
mov
test
js
inc
incl
sub
out
mov
xchg
clc
movsl
das
mov
push
das
in
ret
xchg
cmpsb
inc
xor
mov
repz
mov
shlb
mov
pop
fwait
stos
dec
lds
xlat
xor
lock
add
adc
mov
xor
clc
xchg
enter
add
stc
in
sbb
ljmp
sub
mov
lods
test
xor
adc
and
inc
xchg
das
loope
jo
dec
es
sbb
or
lods
orb
cmp
pop
shll
call
dec
sbb
lret
data16
popf
js
pop
fisubrs
xchg
ljmp
test
push
sbb
dec
insb
mov
or
adc
mov
filds
pop
pop
sahf
push
xor
loope
mov
jns
nop
jge
push
jno
scas
pop
mov
xlat
xchg
insl
mov
mov
popf
lods
sbb
add
inc
sbb
cs
adc
xor
sbb
and
mov
iret
adc
sbb
xor
aas
mov
jle
mov
push
push
mov
fs
jae
insb
or
hlt
and
mov
and
or
rcrb
mov
jno
test
fisubrs
dec
stos
xor
sub
jp
mov
popf
xor
cmp
adcb
arpl
jecxz
fwait
push
add
loop
andb
ja
mov
lock
inc
xor
data16
jns
leave
adc
pop
gs
pop
pop
pop
and
test
ret
push
aaa
cs
test
mov
les
popa
sub
mov
ss
in
loop
sahf
xchg
cmpsl
lret
stc
inc
arpl
mov
negb
aas
cltd
fwait
xchg
gs
roll
rorb
dec
in
xor
das
lahf
stc
mov
popf
inc
pop
cmp
sub
xor
out
imul
rcr
cs
out
test
test
jmp
dec
jb
xor
sbb
push
fdivl
jl
push
dec
fwait
jnp
jle
push
or
jg
dec
xorl
jge
ffree
push
pop
xchg
shrl
xchg
rol
push
xor
jl
xor
fsubl
bound
push
ljmp
jno
sbb
push
xlat
jmp
daa
or
insb
xchg
inc
inc
add
mov
mov
stos
or
lods
adc
test
imul
cs
fisttps
mov
inc
js
pop
adc
mov
fucomi
xlat
mov
fwait
ds
adc
xchg
lock
jecxz
test
test
cltd
sbb
push
call
mov
rolb
leave
mov
add
mov
jmp
and
inc
push
stos
imul
inc
push
loopne
sbbb
and
jb
ret
rclb
cld
dec
inc
inc
mov
push
js
mov
jno
inc
sbb
mov
cmp
je
pop
xchg
inc
mov
pop
xor
mov
pop
in
stos
iret
or
into
jmp
cmp
std
or
mov
ss
pop
inc
lahf
in
cmp
mov
lret
xor
mov
mov
pop
push
xchg
fiaddl
std
sub
cli
xor
mov
jae
fs
cwtl
and
maxps
jno
mov
fdivl
jb
das
pop
test
jo
addl
cwtl
pusha
and
jp
mov
lods
xor
sarb
rolb
xchg
out
test
gs
or
in
loop
fidivrs
adc
xchg
mov
ret
scas
mov
rep
sti
movsb
repz
sub
notl
std
adc
mov
in
out
aad
push
push
nop
repz
in
lods
cmp
ds
stos
loopne
or
push
fimull
bound
fsts
out
popa
pusha
shll
in
pop
imul
add
enter
fwait
movsb
je
ss
lret
js
jg
stc
jns
fs
dec
push
bound
fsubr
cmc
les
xchg
push
jae
repz
sbb
rorl
xor
mov
gs
pop
scas
inc
inc
lahf
fdivrl
cmp
xchg
test
enter
fwait
jge
mov
xor
jl
xchg
push
lahf
fneni(8087
or
jno
fstp
dec
ljmp
popa
popf
sub
mov
in
fnsave
dec
call
jnp
aas
rorb
repnz
int3
movsl
ret
cwtl
jl
fisttps
lret
xchg
ds
cltd
js
pop
xlat
sbb
xchg
pop
scas
dec
iret
cmpsl
mov
xorl
or
aam
dec
or
dec
mov
jge
icebp
pop
les
cmpsl
iret
int
ret
jecxz
xor
jns
push
mov
ja
dec
cmc
cmp
and
call
mov
xchg
adc
inc
xor
fs
push
mov
pop
jp
push
adc
cmp
push
jecxz
xor
and
push
rcll
icebp
in
jb
jbe
mov
sbb
mov
data16
mov
or
dec
ret
push
push
fbld
and
xor
outsb
xchg
add
in
mov
jl
mov
or
pop
idivl
or
ret
push
push
out
pop
stc
loope
pushf
test
out
xor
xchg
mov
push
push
jbe
in
or
push
out
push
fldcw
ss
fisttps
xor
mov
push
out
shrl
outsl
clc
xchg
xor
leave
inc
fsubrp
jno
iret
popf
ljmp
jecxz
push
nopl
jnp
pop
popf
ret
shl
mov
aaa
data16
pop
ss
loopne
enter
lea
add
cmpsb
mov
adc
out
push
out
inc
lods
xchg
adc
lahf
in
jmp
test
mov
xor
pop
call
push
and
dec
js
xchg
and
cmp
test
lods
mov
jecxz
and
xor
mov
mov
push
test
xor
sbb
add
jmp
mov
cmp
sub
cmp
shrb
push
cld
gs
dec
subb
fdiv
sbb
jns
test
cmp
jg
out
mov
in
xchg
sub
mov
sub
jo
cmc
out
jne
xor
xor
dec
fbld
jmp
xchg
pop
lahf
inc
js,pt
nop
push
push
std
sub
repnz
xor
push
movsb
loop
and
push
into
insl
sbb
mov
hlt
and
dec
cmp
wbinvd
aas
shll
jns
cld
jle
or
dec
mov
aad
and
adc
push
xor
xchg
inc
mov
add
imul
jecxz
popa
out
mov
pop
cs
leave
inc
enter
mov
jo
mov
mov
pushf
xchg
xor
imul
pop
idivb
lret
insl
scas
imul
stos
adc
inc
mov
clc
imul
xchg
es
mov
sbb
add
add
incb
lock
bound
jno
pusha
dec
pop
ret
jb
xor
pop
int3
adc
xchg
pop
mov
shrl
sub
xchg
movsl
leave
push
mov
in
nop
sbb
mov
icebp
pop
mov
movsb
pop
add
jns
aam
jbe
sbb
lock
fcomps
push
gs
mov
jno
mov
push
cmp
int3
shrl
les
pop
and
mov
fwait
into
add
filds
into
or
filds
enter
jnp
lahf
jno
dec
mov
aad
add
in
nop
out
sub
cmp
mov
sbb
aad
pop
xchg
xchg
movsb
rol
stos
out
and
adcl
aaa
pop
mov
inc
adc
xor
data16
dec
bound
xchg
or
ds
sti
cmp
jge
mov
mov
mov
lret
stc
jp
mov
adc
andb
daa
cmpsl
hlt
add
pushf
insb
les
dec
fldcw
inc
xor
nop
lods
leave
loop
inc
xor
shlb
xchg
mov
or
hlt
and
aas
dec
cmp
adc
mul
add
add
and
movl
mov
nop
pop
ret
push
cs
sbb
popf
push
sarl
dec
popf
pushf
push
jnp
data16
sub
sbb
push
lock
jmp
jge
hlt
mov
jl
inc
cmp
testl
pop
mov
popf
pop
and
stos
ss
mov
loopw
or
pusha
mov
sbb
xor
faddl
dec
jbe
jg
inc
decb
dec
push
mov
xor
fcmovbe
out
addr16
int3
cld
push
mov
inc
jae
shrb
inc
or
loop
dec
cmp
or
mov
in
xchg
daa
lcall
jge
dec
mull
mov
jnp
fdivs
xchg
out
push
mov
cwtl
out
lea
adc
shl
inc
fcomps
xorl
std
sbb
xchg
push
jns
xchg
push
cli
iret
fsubrl
cmp
pop
pusha
push
sub
gs
stc
xorb
add
adc
dec
xchg
add
push
push
pop
add
and
pop
xor
aaa
cli
daa
inc
cli
and
fmuls
pop
push
nop
xchg
mov
lds
int
int3
dec
in
or
add
push
mov
adcl
fimull
enter
pop
lfs
push
out
mov
inc
push
jle
push
test
and
mulb
je
adc
cwtl
or
cmp
dec
sarl
pop
adc
icebp
adc
push
add
sbb
xchg
cmp
outsl
dec
cmp
cmp
or
sbb
mov
push
cmp
pop
xor
inc
mov
sbb
pop
jbe
or
jo
adc
adcb
jns
pusha
bndstx
or
or
testl
out
mov
sti
and
nop
jb
in
call
jg
aaa
lcall
jbe
les
adc
gs
jg
mov
push
fbstp
idivb
sbb
nop
arpl
test
jecxz
adc
dec
jge
jge
add
add
insl
fistps
add
add
add
jne
lret
mov
cli
xchg
pop
shr
add
mov
jae
mov
inc
scas
std
cmc
jge
psubsb
mov
add
jecxz
jmp
jns
push
pusha
fcmovnbe
int3
xchg
inc
mov
mov
fidivrl
cmc
cmp
push
in
add
jp
outsb
fwait
mov
xchg
and
repnz
and
push
jge
sbb
sub
or
les
test
cld
mov
xchg
out
into
nop
ljmp
sub
popf
mov
out
mov
xor
ljmp
lcall
cld
sbb
test
fiadds
dec
jne
dec
sbb
aas
scas
and
dec
js
push
xor
nop
push
xchg
test
jae
mov
call
daa
gs
mov
xor
mov
ret
movsl
mov
iret
xor
cwtl
push
sub
or
sbb
push
push
je
adc
mov
jle
and
stc
mov
push
mov
mov
fbld
dec
add
les
rclb
push
mov
mov
leave
sbb
mov
sub
jno
dec
adc
shlb
ret
call
sarb
push
ljmp
call
aad
xor
iret
sbb
dec
in
lods
les
movsl
mov
cltd
stos
es
and
adc
fcompl
mov
add
stc
sub
aaa
movsl
mov
int3
jg,pn
jp
sub
dec
lea
pop
push
cld
aad
or
jno
dec
scas
cmp
sahf
fimuls
cmpsl
add
pop
xchg
cltd
lods
mov
pop
add
push
pop
jns
shrb
mov
add
call
inc
mov
add
xor
cmc
push
fsub
mov
xor
lods
mov
jg
rol
scas
lods
push
dec
mov
repnz
fadds
jno
fs
lahf
pushf
mov
inc
inc
add
iret
mov
out
mov
sbb
into
xor
sahf
push
xchg
pop
js
sbb
push
in
movsb
fcmove
sub
test
jp
mov
xchg
dec
out
leave
fbstp
jo
cmp
xchg
movsb
sbb
into
sub
and
scas
jne
iret
sub
arpl
mov
xor
inc
cld
imul
inc
in
adc
int3
jno
daa
sbb
mov
repnz
sbb
test
mulb
je
add
and
pop
or
mov
xchg
and
mov
cmpsb
xor
push
dec
inc
std
adc
pop
cwtl
addb
bound
ja
stc
jbe
mov
xlat
mov
stc
jmp
jmp
sbb
mov
pop
repz
jmp
test
cmp
adc
xor
mov
push
sbb
xchg
mov
ja
mov
rol
mov
xor
sbb
lret
mov
rclb
out
inc
gs
xchg
mov
insb
stc
test
in
xor
ja
ss
dec
or
xor
jae
sbb
loopne
imul
pop
outsl
dec
push
popa
repz
addr16
pop
push
mov
fdivr
jns
jns
inc
repz
fcmovb
dec
jne
jl
mov
adc
mov
mov
pop
jle
xor
iret
repz
mov
sti
mov
mov
add
and
ss
hlt
shll
pop
jle
clc
pop
popf
daa
lods
fadds
mov
mov
inc
les
shll
sub
mov
adc
in
or
arpl
ret
push
pop
int
imul
call
lcall
pusha
mov
or
or
outsb
icebp
jnp
add
movsl
mov
xor
jns
and
mov
shlb
enter
insl
fwait
int3
cmp
push
mov
adc
je
xchg
jno
sbb
scas
mov
outsb
scas
mov
xchg
cmp
mov
shr
movsb
lret
hlt
jp
xchg
lea
mov
mov
stc
add
in
dec
xchg
test
insl
negb
dec
push
inc
xor
cmpsl
sub
outsl
and
jo
mov
in
add
pusha
and
or
xchg
push
leave
cmp
cltd
fucomi
mov
xor
jge
bound
mov
mov
js
aam
lcall
jnp
push
std
pop
test
jge
pop
push
mov
icebp
pop
bound
and
fldcw
mov
pop
dec
imul
lds
push
xor
or
add
sahf
add
add
add
add
inc
pop
std
popa
inc
cmp
cmp
mov
dec
sub
shl
and
out
push
xor
jns
add
jno
inc
sbb
imul
inc
popf
sbb
lea
pop
mov
mov
or
mov
sar
sahf
fimuls
scas
test
subl
mov
push
adc
jne
dec
repz
enter
imul
and
lock
es
jp
pop
ret
hlt
mov
out
lcall
pop
add
xor
xchg
sub
imul
out
pop
cli
push
ljmp
outsb
pop
outsl
push
test
and
and
inc
rclb
lcall
jo
pusha
repz
mov
bound
dec
rolb
adc
cmp
push
insl
xor
xor
push
cmp
adc
pop
aam
dec
icebp
dec
sbb
cmp
nop
pop
xchg
inc
lods
cmpsl
inc
int3
out
xchg
scas
leave
mov
xorl
xchg
fwait
dec
out
sbb
pushf
jg
push
scas
jmp
adc
ret
mov
mov
gs
inc
or
loop
jmp
or
mov
imul
push
outsb
loop
insl
cmp
stos
icebp
es
pop
enter
sahf
test
into
aaa
stos
repz
enter
stos
pop
mov
mov
pop
mov
xchg
dec
adc
xor
outsb
mov
dec
pop
and
xchg
dec
aad
jmp
mov
aas
imul
shlb
dec
sbb
daa
loopne
jg
fildll
push
jg
push
pop
js
lcall
arpl
stos
out
pop
outsb
pop
outsl
push
test
and
and
inc
rclb
lcall
or
or
cmc
xchg
popa
mov
repnz
dec
rolb
adc
cmp
push
insl
xor
xor
xchg
ja
cmp
and
rolb
jle
xchg
dec
icebp
dec
sbb
cmp
nop
pop
xchg
inc
lods
cmpsl
inc
int3
out
xchg
or
or
push
fistpll
ds
adc
dec
out
sbb
pushf
jg
push
scas
jmp
adc
ret
mov
repnz
xor
je
mov
adc
stos
bound
cmc
imul
push
outsb
loop
insl
cmp
stos
icebp
call
xchg
aad
enter
sahf
test
into
aaa
stos
repz
enter
stos
pop
mov
mov
pop
mov
jmp
lock
add
outsb
mov
dec
pop
and
xchg
dec
aad
jmp
mov
aas
imul
into
lds
orl
lcall
jne
sbb
frstor
mov
push
ss
mov
daa
aas
lea
test
imul
outsl
xor
les
xchg
pop
xor
jo
daa
xchg
xchg
cmpsb
out
mov
addr16
jmp
adc
jnp
pushf
pushf
repnz
or
push
mov
sti
shrl
pop
stc
cmp
aam
dec
icebp
dec
sbb
mov
fstpl
dec
pop
sub
jge
xor
ss
je
cmc
or
orb
push
les
iret
mov
sub
outsb
loop
insl
cmp
stos
icebp
sub
lahf
jle
ret
lods
enter
xor
push
push
fstpl
mov
mov
call
mov
rorl
mov
clc
pop
ficomps
call
repz
test
mov
jne
es
add
xor
xchg
sub
insb
testb
imul
outsb
fcom
mov
call
outsb
ret
pop
loop
and
adc
js
sbb
ja
cmp
push
sbb
shlb
jne
mov
pop
lcall
or
or
pop
adcl
mov
inc
mov
lock
movq
test
or
mov
insl
xor
xor
jg
in
add
mov
flds
or
add
and
xchg
inc
lods
cmpsl
inc
int3
out
xchg
mov
icebp
sub
sub
jmp
sub
call
adc
adc
fildll
jmp
adc
ret
mov
jecxz
pop
mov
cld
inc
sbb
mov
push
les
iret
mov
sub
outsb
loop
insl
cmp
stos
icebp
pop
aas
sub
jne
call
into
xor
push
push
fstpl
mov
mov
call
mov
xor
icebp
loopne
dec
ficomps
call
repz
test
mov
jne
es
add
xor
xchg
sub
insb
testb
imul
pop
cmpsb
sarb
call
outsb
ret
pop
loop
and
adc
jno
sub
xorb
mov
sub
repnz
sbb
mov
push
and
sbb
mov
popf
hlt
xor
pop
pop
jo
mov
sub
dec
cwtl
mov
scas
dec
pop
mov
lods
insb
mov
subb
inc
insb
in
stos
mov
xor
adc
or
sub
arpl
repnz
shl
dec
xchg
push
and
xchg
push
fisttpll
lea
pop
cmp
pop
mulb
shl
push
push
les
push
outsb
fwait
mov
lods
loop
fadds
pop
and
sarl
sub
sub
cmp
sub
sbb
cs
inc
push
add
mov
or
add
fsubs
or
xchg
mull
mov
jno
adc
lock
subb
and
adc
add
pop
aad
jae
stos
rolb
lods
inc
mov
and
sbb
mov
push
and
dec
adc
repnz
mov
popf
hlt
xor
pop
pop
jo
mov
sub
dec
cwtl
cmc
sbb
xchg
xchg
in
xchg
adc
jae
lods
pushl
jle
sub
movsl
sbb
jp
sti
insb
inc
sbb
inc
in
test
and
xchg
loope
add
call
ja
push
shl
mov
xchg
dec
outsl
push
xchg
push
call
int3
and
mov
orb
sbb
xchg
push
and
cmp
adc
cmp
in
cli
jb
sahf
out
sub
or
xchg
es
rdtsc
lea
std
inc
ror
lahf
sbb
nop
repz
gs
and
dec
sbb
mov
jge
jbe
xchg
out
jl
out
jno
ficoms
mov
gs
lea
xor
jno
rorl
in
adc
sub
cmp
lahf
insb
fidivl
sbb
imul
adc
jo
mov
jge
cmp
jne
inc
repz
ss
inc
sub
int
adc
jge
jne
sbb
xorl
sub
mov
nop
rolb
sbb
jle
cmp
pop
daa
sbb
mov
jecxz
ds
ja
cmp
insb
popa
add
daa
insl
lret
dec
mov
in
jle
and
sbb
push
test
and
jne
sbb
or
lret
cmp
insl
out
and
loope
push
stos
loopne
inc
sub
pop
int
movsb
out
and
scas
in
inc
das
scas
arpl
xchg
in
and
ficompl
sub
and
mov
sbb
arpl
repnz
mov
dec
pop
or
mov
xor
ljmp
test
and
sub
shlb
insb
shll
pop
xor
mov
ja
dec
sub
mov
sbb
imul
adc
jo
mov
jge
cmp
pop
pusha
aad
imul
nop
ret
cld
hlt
repnz
and
adc
jge
jne
sbb
xorl
jb
mov
jmp
addl
sbb
jle
cmp
pop
daa
sbb
mov
aas
jno
addr16
andb
pop
cmp
insb
popa
add
daa
insl
lret
dec
mov
in
jl
mov
test
shll
sbb
sub
sub
or
lret
cmp
jno
mov
push
or
pop
dec
popf
jb
pop
int
movsb
out
and
scas
in
inc
das
scas
arpl
xchg
in
and
push
sbb
or
sbb
arpl
repnz
mov
dec
pop
or
mov
and
and
and
jle
cmc
test
and
sub
rclb
imul
out
sub
ds
enter
sbb
mov
sub
into
outsl
mov
jno
push
mov
sar
lea
jo
xor
addl
stos
and
xchg
inc
std
sub
lahf
cmp
lods
xor
movsb
mov
xchg
hlt
in
inc
test
sbb
push
adc
insb
fwait
in
mov
inc
pusha
xchg
fsub
add
add
pop
add
add
sahf
add
add
add
add
xchg
fcomi
xchg
fcompl
cmp
inc
and
cmp
xor
push
xchg
stos
int3
mov
out
fistps
add
and
int
fmulp
jp
xchg
mov
sub
scas
pop
xor
and
lds
pop
jae
dec
out
jae
push
fnsave
cltd
pop
test
sub
outsl
roll
jo
cli
shl
pusha
aaa
test
push
repnz
jl
pop
or
pop
xchg
lea
fadds
push
stos
jne
scas
push
sbb
or
sub
mov
push
call
fstl
bnd
add
addr16
mov
ret
js
sub
lahf
pusha
lds
stos
fcomp
push
int3
and
or
mov
xor
stos
and
pop
loop
cmp
mov
call
lret
mov
out
fcmovbe
sbb
je
into
push
jo
cmpsb
adc
pusha
loopne
jns
cmp
sub
dec
mov
pop
into
push
das
inc
cwtl
pop
push
cmp
or
filds
sub
aas
int3
jecxz
sbb
mov
dec
push
fucomip
sbb
rcr
mov
arpl
ds
push
sbb
int3
test
inc
xlat
test
cmpsb
cwtl
pop
mov
or
cwtl
push
adc
sub
dec
flds
mov
ja
aam
sarl
mul
fcompl
sar
repnz
repz
enter
mov
mov
les
or
divl
sub
or
pusha
outsl
sbb
xchg
cmc
mov
shlb
pushf
lods
sub
iret
mov
inc
cmp
lods
repz
cmp
arpl
cld
mov
xchg
mov
fiaddl
ja
xor
in
stos
das
pop
pop
xchg
fwait
mov
clc
sub
fcompl
mov
outsb
inc
lret
jmp
inc
scas
push
mov
adc
pop
xor
add
jmp
push
push
stos
jne
pop
inc
jmp
repz
xor
mov
push
add
sbb
fs
ja
lahf
dec
push
popa
stc
loopne
pop
sub
mov
imul
push
push
jne
push
mov
loope
dec
out
imul
sub
mov
lods
cmpsb
push
lods
loop
rolb
popf
scas
dec
or
push
daa
mov
mov
xchg
popf
js
xchg
sbb
and
data16
adc
xlat
mov
in
mov
les
fsubp
cli
out
inc
sbb
adc
cwtl
dec
out
out
scas
ret
scas
hlt
test
adc
hlt
inc
adc
sbb
push
addb
into
inc
xlat
lds
cs
test
jle
xchg
sti
pop
and
lahf
cmpsl
adc
insl
sbb
test
cmp
shrl
mov
or
dec
mov
out
aam
js
insb
pop
inc
nop
xor
add
jae
cmpsb
test
hlt
faddl
test
adcl
xchg
lcall
lods
xchg
push
imul
pusha
insb
cmp
popa
jnp
cmp
outsb
rorl
hlt
add
mov
cwtl
add
hlt
add
mov
cwtl
add
hlt
add
mov
cwtl
add
hlt
add
mov
cwtl
add
hlt
add
mov
cwtl
add
rcll
jp
sub
fstl
imulb
aad
sbb
push
in
repnz
imulb
cltd
and
sahf
dec
ret
cmp
fs
pop
mov
or
popa
in
movsb
or
into
test
shrl
dec
cwtd
mov
out
hlt
adc
push
xchg
jp
sub
les
add
sbb
xor
loope
and
dec
sarb
and
jmp
or
shlb
cltd
and
test
aaa
pop
lahf
xchg
mov
adcb
mov
mov
mov
mov
mov
and
push
add
add
sahf
add
add
add
add
lds
mov
xchg
jo
int3
cmp
jbe
push
cmpsb
pop
shll
ret
ds
sub
adc
nop
das
push
fistpll
out
xchg
sti
bswap
pop
lret
mov
pop
imulb
in
jnp
ja
pop
sbb
and
and
pop
add
push
sub
push
jge
sub
and
push
mov
cmpsb
loopne
fistpll
push
xor
mov
nop
add
les
xchg
cltd
or
jg
aam
add
notb
mov
imul
xor
dec
iret
cmp
mov
fistpl
sub
dec
sbb
push
push
rcrl
stos
mov
jp
outsl
hlt
push
subl
pop
jb
pop
or
dec
jae
sub
lock
orl
fwait
push
xor
lret
scas
sbb
loop
mov
push
imul
inc
aas
mov
jle
incl
or
test
mov
inc
cmpsl
popa
pop
dec
negb
int
scas
sub
scas
mov
or
cmp
mov
inc
cmp
popf
mov
push
jbe
pop
lcall
movsb
movsb
adc
repz
push
jnp
js
in
inc
mov
std
dec
cmp
rcll
rolb
dec
jecxz
aas
fldenv
fisubs
cltd
push
inc
out
mov
jb
movsl
pop
iret
shll
in
push
and
mov
mov
sbb
add
adc
sti
inc
rol
inc
jbe
fwait
push
shrb
sti
adc
rcr
aaa
jmp
pop
dec
mov
cmpsb
mov
test
add
dec
dec
lret
jle
inc
pop
jle
loop
mov
push
push
cmp
mov
xchg
in
cmp
push
lret
push
int
and
out
mov
icebp
mov
mov
mov
xchg
cmp
cld
xchg
into
adc
cmp
xchg
jne
inc
jns
insb
test
sbb
xchg
mov
pop
add
insl
fistps
add
add
add
fidivl
stos
xor
add
or
movsl
icebp
arpl
lcall
cltd
popa
jbe
jns
and
xchg
push
insb
loope
xor
sub
les
stc
dec
fwait
mov
fmul
loopne
rcl
shrb
sub
pushf
fisubrs
push
test
pop
pop
inc
xchg
outsl
mov
xchg
mov
mov
fisttps
out
aaa
lods
je
mov
push
out
push
fists
fnstenv
jne
and
gs
push
sti
cmp
xlat
inc
adc
pop
outsb
add
dec
jo
bound
aas
sub
and
adc
jmp
inc
insl
cmp
repz
test
mov
js
and
cmp
xor
inc
ljmp
mov
sbb
jo
cmp
jmp
sbb
push
scas
sbb
daa
sbb
jl
xchg
jg
cmp
fcompl
inc
and
mov
inc
inc
sbb
pop
sbb
sbb
mov
clc
ficomps
test
cmp
rolb
loope
jl
ja
inc
xor
cmp
xchg
xchg
lea
pop
mov
adc
enter
xchg
mov
mov
jbe
push
fadds
cmp
sbb
imull
pop
and
icebp
pop
xor
icebp
mov
fwait
pop
bound
fnsave
jno
scas
inc
idivb
mov
mov
stos
or
pop
pop
jo
dec
rolb
aad
mov
jo
aad
sbb
mov
inc
pop
mov
ja
jle
cmp
jbe
lds
stc
adc
adc
add
cwtl
sbbb
add
cli
jg
jo
nop
mov
xchg
insl
scas
cmp
xchg
es
and
fnstcw
lea
and
hlt
stc
js
pop
lret
mov
add
fistpll
and
dec
mov
shll
addr16
mov
nop
repnz
lods
shlb
jg
mov
cmp
mov
jl
loop
mov
andb
scas
pop
adc
negl
sbb
cmp
adc
out
dec
lods
sbb
shrl
pop
cmp
fldcw
xor
sbb
movsb
xor
orl
or
das
cmp
incb
ljmp
xor
stc
cs
ljmp
jmp
dec
push
xchg
lret
mov
xor
ja
dec
out
pop
std
xchg
xlat
jp
or
adc
stos
and
or
sbb
js
cmpsl
repnz
adc
mov
push
pop
test
mov
pop
xchg
jle
fdiv
loope
jno
cmp
das
popa
pop
lret
mov
and
lret
jl
xchg
cmp
push
lahf
insl
mov
sub
fidivl
lret
xor
inc
es
or
insb
mov
pushl
test
pop
sbb
fstpt
cmp
jle
sub
pop
mov
mov
dec
in
pop
test
pushf
movsb
mov
mov
mov
xor
in
dec
jl
adc
in
and
lods
cld
insb
jns
mov
lahf
rcl
inc
and
add
or
xor
inc
dec
jp
push
jle
fmull
mov
cmc
inc
mov
lcall
mov
popa
aas
hlt
fs
outsl
mov
femms
mov
xchg
jp
es
fs
jp
mov
aam
je
sub
dec
dec
mov
pop
cmp
pusha
enter
sub
aas
cmp
mov
popa
int3
outsl
in
jno
inc
xor
sbb
test
jbe
ljmp
inc
sbb
jnp
mov
enter
lds
xor
mov
or
jo
lock
loopne
add
in
adc
jmp
mov
cltd
sub
sub
mov
enter
pop
clc
mov
insb
addl
xlat
and
idivb
in
xchg
movsb
xchg
pop
mov
inc
das
into
and
pushf
pop
mov
pop
cmc
dec
stos
xor
sub
adc
fbstp
daa
dec
push
scas
cld
test
test
shr
or
aad
pop
push
push
sub
xor
add
pop
test
inc
iret
xchg
movsl
ljmp
lods
adc
das
in
imul
mov
sub
mov
imul
imul
xchg
inc
enter
icebp
andl
jp
out
sahf
fidivrs
sub
adc
cmovg
mov
daa
es
push
xchg
pop
sbb
sub
leave
in
testl
inc
sub
xchg
mov
and
outsl
mov
sub
push
call
addb
jmp
push
gs
inc
lea
sbb
mov
jbe
andl
adc
pop
movsl
in
sub
xchg
sbb
xchg
push
lahf
cmp
and
xchg
add
adc
push
movsb
pop
pop
add
push
sbb
nop
test
push
mov
daa
mov
pop
push
ret
in
jae
je
mov
repz
addr16
fsts
pop
mov
vrangesd
test
push
or
out
dec
popa
mov
xchg
enter
fnop
sbb
or
je
xchg
repnz
push
in
push
xor
mov
test
jp
xor
add
push
fildll
repnz
pop
inc
or
push
adc
in
out
push
pop
insl
mov
sbb
bound
xlat
loope
mov
shll
movsl
fimuls
pop
fldcw
out
call
push
aas
add
dec
je
push
aaa
call
ffree
xchg
loope
jb
inc
jg
pop
in
out
out
inc
add
cmp
test
adc
push
push
inc
add
inc
pop
and
loop
sbbl
in
or
cmpsb
mov
jle
aam
div
fstpl
inc
std
out
add
enter
test
aam
inc
lods
repz
or
pop
ss
sub
xchg
sub
mov
jno
sub
dec
sbb
dec
sbb
mov
xchg
idivb
dec
mov
lahf
push
nop
scas
cmp
add
mov
rcrl
jge
xchg
push
fcomip
push
in
push
sub
sbb
in
sbb
sahf
jle
lret
push
sub
jbe
pop
lods
add
fwait
adc
ret
cmp
mov
rorl
insb
loopne
rorl
xchg
xlat
lcall
adc
stos
inc
pushf
test
rorb
popl
xor
and
scas
push
mov
int3
les
stos
adc
add
adc
mov
ljmp
in
push
mov
lahf
shll
sub
subb
inc
sbbb
sbb
xchg
add
mov
scas
jbe
ret
pop
mov
ss
dec
add
and
ss
ljmp
pop
loopne
dec
jo
dec
push
dec
sub
jg
rolb
imul
cwtl
fbld
jecxz
pop
subl
mov
mov
lea
mov
repnz
fwait
cmp
cld
cmpb
lret
mov
aas
adc
pop
fdivr
push
insl
mov
repnz
notl
jae
dec
add
in
icebp
pop
fistpll
je
push
mov
add
sahf
es
nop
gs
sbb
and
xor
stos
call
sub
xor
jp
sbb
pop
lret
jmp
sti
mov
jb
loop
xchg
mov
mov
lods
adc
pop
cltd
int
cmp
arpl
sbb
cmp
in
insl
in
mov
fsubrs
jb
sub
mov
scas
add
fwait
pop
mov
fcmovnu
mov
and
sbb
in
sbb
and
add
repz
or
outsb
test
in
push
push
pop
das
in
mov
fcomi
enter
and
in
add
mov
mov
mov
xchg
test
test
or
dec
mov
xchg
dec
call
arpl
cmp
cmp
data16
ljmp
mov
dec
mov
jmp
cltd
jmp
inc
sarb
push
test
lret
xchg
rcrl
addr16
cmp
cltd
leave
jg
inc
sbb
cmpl
jb
dec
pop
push
jge
icebp
fsubrl
mov
lcall
shr
daa
adc
movsb
pop
cmc
pop
imul
sub
in
lcall
push
cwtl
cmp
jmp
jg
cltd
jns
ret
sbb
jl
cs
fs
daa
sbb
xchg
mov
push
lcall
std
loope
and
lock
rolb
adcb
add
mov
sahf
cwtl
sub
mov
sbb
fwait
mov
ret
inc
sbb
add
push
stc
dec
filds
add
pop
lods
mov
icebp
pop
and
nop
mov
push
movsl
dec
repnz
lods
outsb
sbb
fistps
psubd
jb
aas
mov
cs
rclb
push
ja
loope
adc
rcll
push
sub
push
fadd
jb
add
pop
mov
ret
adc
sti
push
mov
test
fnstenv
add
sbb
lcall
cmp
aam
lds
jne
xor
push
fimuls
es
and
pop
cmpsb
inc
mov
dec
inc
mov
add
pop
pushf
in
ss
les
ds
add
sahf
mov
lds
pop
xorb
and
xor
ss
ret
jns
cmp
push
cmp
xchg
aaa
dec
inc
scas
jg
mov
pop
popf
lods
cmp
pop
inc
push
xor
push
xor
imul
sub
xor
push
pop
push
push
fsubs
mov
or
addr16
fdivr
scas
or
adc
into
or
jb
add
jecxz
cld
cltd
jl
inc
pusha
popa
movsl
sub
hlt
into
mov
adc
fdivl
aam
lret
decl
adc
dec
mov
lret
jmp
cld
aaa
mov
mov
addl
scas
sbb
jae
mov
lock
cmp
shll
lds
sub
pop
adc
sarb
push
adc
jecxz
mov
jp
sub
mov
xchg
jmp
lods
mov
icebp
dec
ret
inc
nop
stos
sub
sub
inc
lea
xor
outsl
xor
sub
lret
arpl
lock
inc
adc
lds
aas
stos
cmp
aas
test
mov
pop
mov
or
sub
jge
cmpsb
or
rorl
les
mov
lds
shr
mov
or
cwtl
pop
push
fs
movsl
pushf
call
sahf
push
das
negl
dec
add
inc
iret
xlat
dec
hlt
decl
cmpsl
lods
jo
gs
mov
mov
pop
fstpt
or
int
dec
cs
and
sbbb
mov
out
sub
push
popf
cmc
scas
inc
dec
push
test
pop
test
mov
jge
je
stos
inc
in
sbb
test
pop
dec
dec
call
push
sub
push
pop
jne
loopne
cmp
cld
mov
nop
fwait
xlat
ja
sahf
arpl
hlt
aam
add
add
test
lods
hlt
loopne
subb
sbb
mov
jo
jb
int
adc
daa
adc
jmp
out
loop
int3
mov
test
testl
stc
or
outsb
push
outsb
cmc
pusha
jle
mov
sbb
cld
into
sbb
mov
mov
mov
push
movsb
mov
xchg
call
cmp
and
push
sub
cld
mov
xor
popf
mov
stos
push
cmc
pushf
push
aaa
rolb
inc
je
rdtsc
inc
icebp
push
xchg
shlb
mov
js
pop
testl
mov
sbb
call
inc
lret
ret
push
int3
test
and
shrb
test
add
xchg
incl
fidivrs
jno
cltd
rcll
xchg
mov
jnp
imul
xchg
jmp
add
je
ficompl
inc
in
ret
push
pusha
bound
arpl
mov
mov
cli
push
or
addr16
std
mov
xchg
out
cmp
jne
jbe
mov
rclb
inc
fsub
dec
fisubs
sub
jmp
adc
cld
mov
popf
cltd
mov
xor
sub
pop
xchg
add
inc
xchg
fisttpl
stc
movsb
inc
mov
adc
or
nop
out
ja
pop
rclb
loope
incb
add
push
stos
push
push
fisttpl
sbb
daa
pop
push
adc
xor
push
pop
shl
addr16
push
jmp
pop
mov
sahf
ret
call
cs
and
lahf
stc
add
ror
test
imul
pop
loopne
gs
stos
sub
scas
cld
std
push
inc
lahf
fcmovbe
dec
cs
js
inc
dec
dec
sar
inc
cwtl
cli
xchg
adc
mov
pop
mov
mov
fwait
lods
xchg
add
in
dec
mov
icebp
aad
testb
mov
leave
pop
lret
xchg
mov
xchg
mov
push
std
stc
lods
mov
jne
pop
imul
mov
rorb
push
inc
mov
xchg
mov
imul
aaa
int3
scas
fidivrs
jle
inc
jecxz
cmpsb
sahf
dec
mov
imul
adc
and
dec
sub
pop
inc
lods
mov
sub
mov
rol
adc
lret
jmp
cmpb
notb
jge
xor
add
or
sub
jne
in
push
sub
sub
sub
adc
mov
loope
shl
pusha
lods
pop
and
cmp
cmpsl
mov
inc
aad
jl
mov
dec
sub
sbb
and
lock
push
shll
dec
and
lods
mov
xor
xchg
fcoml
loopne
mov
cltd
clc
jne
dec
mov
es
pop
sbb
sarl
cmp
stc
lret
pop
sub
cmp
shr
loope
loopne
sub
add
xlat
mov
adc
sub
lods
ret
lahf
popa
out
dec
mov
dec
mov
arpl
xor
sbb
cmp
repz
jo
jl
add
test
mov
mov
lcall
pop
ret
adc
xchg
or
adc
in
lret
aaa
sbb
rorl
iret
push
pop
inc
or
pop
lcall
mov
cmp
inc
xchg
ja
inc
mov
into
add
xchg
shr
scas
repnz
ds
dec
xor
stc
inc
mov
mov
sbb
loopne
xchg
in
sbb
xlat
or
xchg
dec
cmp
sbbl
sar
sti
cmpsl
and
hlt
std
js
pop
xchg
cli
mov
add
or
popa
adc
mov
cmpsb
scas
fstpt
sti
push
sbb
sti
popa
or
jb
int
fidivrs
inc
xchg
shll
fldenv
test
xchg
aas
cmpsb
cmpsb
insb
sarl
inc
jo
or
sbb
xlat
inc
lods
push
ret
mov
stos
scas
jle
add
pop
cmc
loope
ja
push
popa
movsl
rcl
ret
mov
lods
pop
addb
jb
lea
inc
jge
sahf
jg
lret
sub
fptan
mov
adc
insb
sti
mov
leave
pop
enter
imulb
ja
push
test
sbb
cmpsb
inc
in
test
sbb
pop
shrl
jno
or
xchg
cmpsb
sub
lret
aaa
push
clc
add
add
movsb
mov
cmp
mov
cmp
out
cmc
sub
leave
movsb
imul
sti
add
ret
jne
je
mov
pop
incb
and
mov
dec
into
in
inc
divb
call
stos
mov
mov
in
and
pop
or
adc
sub
inc
sub
add
std
repz
lret
mov
repnz
mov
jmp
jge
fs
push
test
ficoml
iret
ljmp
inc
push
add
out
in
xor
cmpsl
push
filds
dec
gs
mov
lcall
jmp
stos
pop
mov
xchg
es
lds
decl
jl
xor
xchg
cmp
xchg
jae
pop
fcoml
popa
data16
mov
sahf
xchg
push
mov
pop
mov
pop
mov
inc
out
js
roll
xrelease
lcall
int3
dec
xchg
mov
test
xor
out
xchg
pushf
and
mov
outsb
lods
mov
add
shll
cmp
jg
push
pop
jmp
addb
stos
mov
sub
xchg
pop
subl
ja
icebp
shlb
mov
sub
cmpsb
ret
test
mov
cmp
mov
test
sti
loopne
in
add
sub
sbb
out
test
sbb
mov
push
mov
lods
into
fisubl
pop
stos
push
lock
add
mov
pusha
inc
shrl
xor
inc
es
addb
mov
aas
ret
mov
movsb
bound
cmp
hlt
cli
adc
pop
push
and
pop
sub
sahf
push
cmp
sub
sub
jb
jmp
ret
fcomps
cwtl
enter
inc
inc
inc
lcall
cmpsl
fildll
stos
mov
push
cwtl
xor
pop
arpl
mov
aad
sbb
lret
fisubrs
test
mov
pop
cmp
xchg
in
stc
insl
movsb
mov
jge
xchg
xor
mov
cmp
mov
push
cmp
in
push
jnp
xchg
fildl
pop
ret
jp
fisttpl
and
push
pusha
xchg
mov
jmp
lret
aaa
outsb
daa
adc
push
dec
sub
inc
gs
lds
test
lret
fwait
push
fstpl
xor
inc
cwtl
push
sahf
lret
sarl
push
sbb
mov
std
in
pop
jb
and
mov
clc
jb
mov
notb
xchg
imul
dec
mov
inc
ror
popf
or
and
mov
inc
aam
addr16
lea
sub
adc
lods
dec
adc
fimull
pushl
repz
ja
cmpsl
inc
dec
subb
cmpsb
xor
xchg
sbb
push
lods
leave
jae
or
adc
sub
xchg
aad
jge
or
mov
hlt
inc
mov
xchg
xor
mov
push
pop
bound
aad
js
xlat
mov
iret
in
repnz
jns
icebp
inc
pop
gs
in
loop
gs
out
repnz
add
xor
popa
mov
adc
sbb
add
bound
outsl
and
roll
dec
and
rolb
or
lret
mov
das
je
push
jecxz
andb
inc
mov
push
test
push
push
out
hlt
mov
cmpsb
mov
fildll
and
inc
push
and
dec
or
push
adc
es
lods
sub
imul
push
lahf
cli
imul
lret
frstor
sbb
sahf
mov
rcrb
pop
hlt
movsb
sbb
ud1
inc
push
fmulp
cmp
aam
xchg
lds
or
jecxz
mov
popf
and
dec
pop
lret
push
ljmp
test
or
add
mov
lods
repz
popf
cmpsb
hlt
cmp
cli
rol
cmp
cld
ret
or
cmp
outsb
popl
lret
lods
pop
mov
call
xor
decl
mov
xor
push
ret
cmp
sbb
and
int3
hlt
and
mov
cmpl
stos
rcrb
and
push
cmp
xchg
xor
rorb
mov
and
gs
adc
bound
aaa
movsb
inc
dec
mov
fcom
movb
cmpsl
ret
push
push
or
mov
xchg
dec
stos
aaa
imulb
mov
ds
cli
stos
or
or
outsb
inc
ljmp
xchg
xchg
btc
jge
mov
pop
add
arpl
je
push
sti
sbb
test
aaa
insb
insb
dec
test
or
addl
push
int
push
out
addl
mov
stc
sub
test
addb
xchg
insb
testl
dec
sbb
inc
push
mov
lret
imul
sahf
and
test
inc
mov
js
dec
mov
outsb
repnz
xor
adc
or
add
sahf
add
add
shll
mov
lock
pop
or
fld
or
out
adc
sbb
mov
pusha
sbb
pop
in
or
insl
jne
mov
sbb
ja
enter
add
popl
in
mov
inc
sbb
mov
shlb
std
inc
pushf
add
in
int
xchg
inc
sarl
testl
std
ss
inc
fsts
lcall
ja
or
cmpsl
das
outsl
jp
jl
orb
cmc
inc
jl
dec
sub
dec
jmp
sbb
xchg
popf
push
mov
sbb
cmpsb
xor
lret
lcall
cli
add
sub
add
push
mov
xchg
cmp
mov
dec
roll
cltd
fists
aad
xchg
add
inc
movsb
jge
daa
add
je
push
aas
fdivr
in
cmp
daa
fsubl
iret
xchg
loope
rcrl
mov
sti
cltd
xchg
stos
jmp
mov
mov
push
inc
pushf
xor
dec
fsubrp
fs
adc
or
mov
int3
xchg
cmp
or
sbb
jmp
cmc
jg
imul
jmp
pop
jnp
push
imul
jge
sub
mov
mov
push
xchg
push
iret
adc
sbb
xlat
mov
pop
pop
dec
jg
mov
xlat
loop
insb
filds
push
add
sub
jg
xor
movsl
cmpsl
sbb
add
add
cltd
lds
inc
mov
sub
push
xchg
sbb
inc
out
jb
jne
lods
push
insl
inc
push
sbb
int
nop
loop
pop
loop
stc
pop
shrl
and
scas
add
cmp
adc
mov
int
push
jmp
lcall
fistps
sub
sbb
mov
aaa
jns
fildl
cli
in
push
add
outsb
mov
cld
lods
test
and
dec
leave
into
lock
jns
jmp
xor
cld
sub
arpl
sub
imul
leave
mov
ljmp
mov
mov
rorb
ret
pop
jbe
jecxz
nop
cmp
mov
stos
inc
test
sub
mov
pushf
pusha
loop
pop
jns
test
aaa
shlw
clc
jo
jl
inc
movsb
or
iret
nop
push
or
pop
add
mov
int
fnstcw
in
mov
mov
fucomp
or
sbb
mov
adc
or
call
xchg
icebp
mov
mov
jmp
pop
mov
dec
mov
arpl
jle
enter
and
push
jne
sub
adcb
out
enter
scas
mov
dec
in
or
mull
arpl
xchg
cwtl
mov
int
cmp
xchg
and
pusha
out
sarb
sub
les
jmp
jno
ljmp
dec
push
sbbb
pop
leave
clc
cmp
xor
sub
pop
sub
jle
inc
pop
mov
jl
pop
aas
dec
mov
mov
enter
outsb
inc
sub
cmpsb
bnd
sbb
notb
mov
cmc
push
xchg
mov
push
and
lods
mov
sbb
adc
jne
inc
insb
xor
add
das
pop
dec
pop
adc
xchg
in
and
jge
mov
and
xchg
aad
outsl
out
mov
sbb
cmp
in
lock
sarl
pop
lods
cmp
sub
dec
xor
xchg
ror
into
push
je
jae
aad
dec
hlt
lahf
jmp
jl
lret
ss
sub
sarl
sbb
jle
pop
lcall
adc
into
addb
jne
add
daa
mov
loopne
rol
push
ds
enter
sub
jnp
dec
inc
xorb
rcrl
add
aam
fucom
clc
dec
insl
add
cld
jnp
jno
jge
sbb
mov
adc
aas
fcmovu
out
jne
rcl
aaa
out
mov
test
jp
lock
adc
test
enter
fistpll
gs
xchg
test
or
daa
call
iret
mov
cmp
hlt
or
sub
lahf
outsb
js
addr16
aam
mov
jo
cmp
repz
add
outsl
shlb
xor
push
lods
pop
mov
sub
int3
out
mov
lret
in
pop
mov
xchg
sbb
and
mov
arpl
aam
jnp
enter
push
push
int
mov
scas
lods
cmpsl
mov
mov
mov
cmp
cli
mov
stc
adc
cmpsl
outsl
jno
pop
mov
jae
lret
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
fwait
cwtl
adc
test
add
add
jno
add
insl
fistps
add
add
add
loopne
and
and
sub
cwtl
mov
jae
mov
mov
ror
push
jns
subb
ja
dec
loopne
sub
mov
push
shlb
test
test
nop
shll
xor
shr
inc
cmpsb
movsb
lods
int3
mov
mov
bound
std
mov
push
scas
pop
mov
xor
mov
mov
xchg
sbb
add
vmptrld
cld
cmp
sbb
mov
inc
je
pop
lds
test
enter
jne
jae
call
sbb
insl
pop
inc
adc
mov
mov
add
sbb
cli
in
cmp
mov
jae
push
mov
data16
fdivp
jae
jmp
pushf
dec
mov
jl
xor
mov
mov
stos
or
cmove
imul
ds
sbb
insb
lock
jecxz
inc
sbb
fisubrs
cmp
jb
hlt
movsb
xchg
xlat
sbb
cmp
xchg
fldenv
add
pop
add
push
addr16
mov
shrb
rorl
xor
ficoms
hlt
pop
push
in
push
loope
mov
jmp
les
push
ss
out
das
lahf
scas
pusha
dec
sub
inc
xchg
fs
lea
aad
cmp
inc
imul
in
stos
sub
scas
mov
fiaddl
or
ljmp
jae
xchg
js
stos
or
jecxz
dec
pop
sbb
or
xchg
or
xor
imul
sbbb
xor
outsb
add
sub
or
lret
mov
push
movl
sub
sub
mov
mov
cli
add
movsl
rol
std
jmp
sar
imul
cltd
push
fs
xchg
mov
int3
jo
or
fistpl
xlat
adc
inc
loopne
push
or
fsubr
popa
ret
aas
into
xor
or
in
mov
insb
xor
fimuls
push
inc
jle
add
lock
and
mov
aad
cmp
adc
rcrl
mov
push
jl
mov
mov
jg
adc
ficompl
xchg
push
or
xor
mov
inc
lret
or
addl
std
test
and
xchg
leave
mov
dec
push
popf
popa
inc
shlb
mov
and
dec
loopne
mov
jns
and
jb
mov
lcall
sbb
dec
dec
hlt
sub
dec
int3
push
inc
aas
mov
xchg
rcl
jle
test
shrb
fdivr
out
push
cmp
sbb
jno
pop
lock
out
out
sub
sbb
or
ds
popa
rcrl
test
mov
insl
push
push
outsl
shrb
push
jge
stc
and
clc
jne
mov
stc
push
fidivrs
aam
dec
mov
movsl
aam
int
mov
scas
jo
xor
jb
and
das
out
in
jle
outsb
aas
es
in
sbb
inc
out
into
shl
push
cli
mov
pop
negl
jbe
or
ds
clc
jp
stos
pop
fisttpl
push
xor
lods
inc
call
lods
or
mov
out
mov
pusha
mov
inc
or
jge
xor
out
fisubs
dec
jmp
out
icebp
dec
cmpsb
add
fisubrl
pop
loop
pusha
cli
and
pusha
mov
imul
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
int3
in
inc
pop
fdiv
mov
pop
insb
out
call
dec
mov
mov
sub
adc
bound
push
data16
xor
jne
roll
roll
add
insl
fistps
incl
add
add
push
jne
test
mov
mov
cwtl
test
fidivrs
aaa
stos
ja
mov
imull
jnp
pop
hlt
jg
aad
add
loopne
xchg
mov
sub
cmp
sub
mov
pop
mov
push
xor
ficoms
sbb
jle
jp
dec
mov
ficoms
inc
xor
iret
int
sbb
bound
sbb
mov
adc
sahf
les
cli
jmp
stc
cld
adc
xchg
ret
mov
testl
and
sub
push
les
pop
dec
push
orl
adc
rol
cmpsl
lds
xor
jecxz
and
enterw
mov
mov
insl
fistps
incl
add
add
ret
cmpsl
pop
or
fdivs
scas
addr16
aas
enter
and
stc
pop
in
xor
sub
jg
imul
fwait
push
mov
out
sbb
dec
pop
jle
push
cmp
ror
sbb
sahf
mov
mov
push
cmp
lahf
loop
adc
jbe
sbb
cmp
pusha
outsb
std
jne
xchg
test
pop
stos
ss
jp
adc
mov
divl
sbb
adc
test
jg
cmc
dec
jb
sbb
cmc
inc
push
push
loop
push
sti
push
add
mov
ljmp
xor
sbb
jge
das
sahf
sbb
inc
inc
cltd
add
out
ss
inc
adc
add
add
sahf
add
incl
add
add
mov
inc
mov
xchg
mov
pop
movb
lret
xor
lods
lock
pop
dec
mov
jne
mov
push
hlt
mov
push
dec
dec
push
scas
outsb
out
add
dec
int
jno
xchg
shlb
shll
xchg
inc
and
adc
pop
mov
mov
xchg
mov
test
push
add
fistps
cmp
jb
ds
je
dec
shrl
mov
xor
jns
addl
inc
ja
push
sbb
add
add
sahf
add
add
add
add
stos
pop
ljmp
and
sub
out
movsl
or
mov
xchg
cmpsl
jbe
mov
imul
cld
cli
sbb
xchg
xchg
stc
xor
jne
ret
or
jge
mov
jmp
es
shlb
jb
mov
cld
mov
cs
mov
fistps
sub
cmp
cmpb
mov
imul
pushf
hlt
mov
jns
clc
or
stc
divb
push
or
inc
inc
aad
je
fildll
loope
dec
jge
xchg
loop
push
or
subb
push
aam
xchg
add
adc
cmp
aas
inc
repz
pop
iret
cmc
aaa
outsb
loopne
adc
xorl
das
lods
dec
inc
cs
add
adc
add
stos
leave
leave
nop
lock
mov
xor
dec
arpl
shrl
xor
push
inc
dec
std
inc
push
jle
or
loopne
xchg
push
jmp
shll
daa
lahf
mov
add
jo
pusha
xchg
fldl
mov
or
xor
dec
push
jo
xchg
push
xlat
enter
mov
xor
decl
pushl
or
jg
repz
adc
imul
enter
ljmp
push
xor
std
adc
mov
pop
fs
dec
std
xor
rcrb
xor
jbe
xchg
push
fs
cmp
hlt
imul
xor
mov
cmp
rcrl
mov
filds
mov
or
jnp
push
adc
xchg
ret
sbb
aam
dec
pop
int3
movsl
nop
sti
mov
in
xchg
orb
sub
push
and
vmovapd
repz
pop
sti
cld
add
or
fdivp
imul
mov
mov
pusha
cwtl
xor
add
cs
icebp
mov
sarl
inc
cmpsl
mov
popa
inc
or
push
aas
pushf
repz
xchg
cmp
inc
cmp
cwtl
mov
pop
stos
leave
ror
shlb
mov
xchg
and
mov
mov
or
mov
add
mov
sbb
in
rcll
mov
mov
push
dec
imul
lds
xor
arpl
cli
sbb
dec
rcr
jg
sbb
adc
insb
inc
ljmp
idivl
jbe
sbb
divl
pop
das
aam
jnp
insb
in
dec
sbb
movsb
pop
jae
pop
and
xlat
mov
and
call
inc
jmp
pop
das
adc
jo
and
inc
cli
pop
cmp
in
dec
loopne
test
sub
mov
stos
push
out
pushf
arpl
lea
sbb
pop
push
sub
lds
mov
mov
or
add
mov
dec
in
push
test
test
push
shrb
pusha
mov
push
and
jo
rep
push
adc
pop
and
jne
push
inc
push
xlat
lret
mov
mov
or
cmp
xor
adc
scas
rorl
fwait
pusha
mov
call
lea
shrb
pop
fwait
sub
fisttpl
mov
int3
fcomps
nop
jnp
xor
mov
pop
mov
jecxz
divl
cmp
insb
or
in
xchg
stc
orb
and
xor
and
xchg
mov
mov
shr
sbb
inc
loop
xchg
add
jecxz
aad
mov
subl
sahf
add
add
add
add
js
dec
cwtl
xchg
add
adc
mov
icebp
icebp
inc
pop
inc
mov
mov
dec
das
mov
insb
mov
scas
into
pop
dec
push
scas
dec
icebp
scas
in
in
notb
addr16
imull
mov
jg
push
push
push
loopne
ficompl
mov
push
pop
cld
hlt
loope
adcb
ss
in
or
leave
mov
jo
xchg
aam
jp
das
repnz
ds
mov
mov
dec
pop
push
xor
jecxz
shlb
cmp
xchg
das
or
cmpsb
mov
or
sti
add
movl
or
in
movsl
xchg
xchg
mov
das
cmp
ret
cmp
jbe
jl
add
shll
mov
adcl
ret
js
inc
inc
lret
into
sub
push
xor
mov
push
add
jg
pop
lds
mov
mov
push
lea
mov
out
jno
jno
mov
rcll
mov
dec
dec
orl
mov
loope
pop
lahf
jne
ror
mov
push
jne
fucom
dec
test
fwait
mov
pusha
cwtl
pop
add
test
mov
stos
daa
mov
std
je
push
push
pushf
aas
or
jge
push
popa
and
and
mov
add
cwtl
and
test
fs
push
bound
leave
xor
in
push
pop
sbb
pusha
je
daa
push
std
ljmp
clc
loopne
aam
sbb
mov
add
insl
fistps
add
add
add
pop
fldt
rcll
repz
out
pslld
ss
add
and
inc
gs
je
xchg
subl
inc
cld
sahf
xorb
jno
lods
inc
mov
add
and
fwait
xor
inc
hlt
adc
outsl
push
dec
and
lret
int3
out
adc
aaa
popf
dec
mov
and
mov
fldpi
jge
xlat
stos
popa
lret
mov
cmp
or
jns
mov
add
mov
das
sub
je
fldenv
lock
sahf
ja
dec
xlat
push
scas
dec
ffreep
pop
and
cmp
shll
sbb
dec
ret
jmp
sbb
xor
mov
push
lret
daa
fsubrl
loopne
adc
mov
loop
sbb
sub
mov
aaa
aas
inc
sbb
dec
and
xlat
push
jecxz
xchg
negb
fcoml
and
rcll
sahf
cmp
aad
outsl
aam
fmull
add
out
mov
or
out
cmp
out
push
loope
mov
adc
std
pop
icebp
and
cmp
std
sbb
add
dec
add
lret
test
es
roll
and
repnz
jae
inc
mov
daa
sbb
lret
call
or
or
sbb
shrl
call
or
xor
repz
mov
pop
mov
jo
repz
sub
xor
mov
pop
fists
fildl
call
stos
insl
pop
stos
inc
aaa
or
rcr
cmc
xor
lret
and
imul
addr16
lea
inc
pop
dec
in
inc
scas
rcrb
inc
mov
and
fisubl
xor
add
iret
inc
or
fistl
adc
inc
lods
sub
push
sbb
dec
xor
out
mov
insl
xor
outsl
fisubrs
int
mov
ds
cmc
push
pusha
xchg
or
mov
fstpl
loopne
orl
pop
stos
push
loop
cmpsl
sbb
das
sub
mov
test
movsb
xchg
or
xor
pop
jb
sub
loope
dec
and
mov
sub
cmpsb
mov
and
lea
lahf
add
mov
jbe
adc
jp
or
cmp
push
adc
cmp
call
fidivs
jle
stos
or
mov
xor
mov
sarl
pop
loop
add
dec
outsb
leave
mov
sub
fcomps
dec
inc
adc
lret
mov
pusha
push
shlb
lods
pushf
lret
insl
clc
sub
dec
cltd
pop
xchg
test
das
pop
push
andl
stos
or
cmc
hlt
lods
adcl
push
sbb
fidivrs
int3
or
repnz
aad
xor
add
scas
jne
iret
jbe
das
sahf
cwtl
or
je
xor
lods
js
add
insl
fistps
add
add
add
rorl
loopne
mov
cli
push
or
pop
inc
mov
xorl
mov
jg
inc
out
pop
xor
stos
push
cmp
dec
out
pop
fcoml
dec
adc
daa
lds
mov
pushf
hlt
and
xchg
mov
xor
dec
mov
or
mov
in
nop
gs
inc
ds
cmp
jbe
sub
pop
pusha
cmp
and
fcomps
inc
faddp
mov
xor
psrlw
les
fcompl
dec
inc
negb
and
or
in
cs
cmp
and
cltd
pop
and
dec
jmp
std
dec
popf
inc
and
mov
movsl
jne
fmuls
out
inc
cmp
pop
adc
lcall
xor
dec
push
mov
mov
mov
jns
out
dec
push
cmp
jg
dec
inc
pop
jnp
dec
or
add
adc
adc
loopne
inc
imul
cmp
add
pop
das
xor
mov
enter
jecxz
mov
popa
rcrb
data16
dec
inc
jns
dec
push
outsb
lods
mulb
mov
out
mov
les
out
ret
mov
or
jmp
mov
rcll
xor
inc
les
jl
sub
fistpll
loop
mov
mov
jmp
or
dec
hlt
cmpsb
test
sbb
mov
push
mov
lret
cmpsb
push
xchg
loop
dec
xchg
neg
push
dec
mov
gs
iret
hlt
lea
rolb
cltd
jb
fmul
mov
test
lock
add
push
pop
mov
or
and
adc
or
add
mov
fdivp
xor
or
nop
mov
filds
and
divl
cmp
push
dec
lahf
adc
push
and
mov
mov
jb
cmp
bound
insb
cmp
sahf
leave
sub
iret
lods
pop
xor
mov
mov
mov
movb
and
inc
xchg
in
out
dec
cmc
and
les
xchg
sti
in
xchg
loopne
in
js
es
shrl
rcrl
jbe
push
cmp
cmp
jge
popa
stc
jg
call
arpl
and
in
mov
sti
push
fists
fwait
fwait
dec
mov
pop
fistpl
cmp
out
mov
and
sub
jno
imul
add
and
test
rcl
invd
xchg
ds
mov
in
mov
stos
cmp
shlb
out
movsl
push
and
jns
enter
orb
dec
xchg
pop
lahf
movsl
lock
lds
stos
xor
mov
push
push
add
xor
jl
jmp
mov
inc
and
ljmp
ljmp
cmpl
cld
shlb
adc
lret
icebp
inc
das
movl
pushl
stc
dec
lea
jne
and
ljmp
xor
test
out
sbb
fs
cmp
mov
mov
jo
loopne
and
call
test
cmpsl
ljmp
xchg
push
bound
mov
jb
ja
aaa
sub
xlat
mov
fiaddl
xlat
outsl
imul
adc
insl
add
stos
adc
add
in
xorb
cmp
call
xchg
jns
push
std
lods
add
adc
in
lret
jge
fimull
stc
xor
sti
out
sbb
shlb
jns
ficoml
add
fs
test
or
leave
xchg
jo
mov
out
aam
cmp
cmp
pop
out
dec
dec
push
testl
dec
push
jmp
stos
sarb
scas
imul
and
sub
fs
mov
adc
out
sbbb
cmp
mov
popa
into
jne
fistl
and
sbb
pop
fsubp
dec
notl
das
aad
jne
push
xlat
xchg
mov
jns
or
push
or
sbb
popf
push
cld
add
fwait
scas
jge
xchg
and
inc
stos
iret
insl
mov
clc
inc
inc
popa
jle
imul
sbb
add
leave
lret
imul
inc
mov
sbb
and
lea
dec
dec
mov
mov
xor
jno
pop
xor
aad
inc
gs
loop
inc
sbb
xor
jb
rorb
xlat
das
mov
out
sahf
xsha1
cmpsb
mov
test
out
mov
imul
and
pop
xchg
pop
mov
jle
in
add
std
ficoml
fdivs
addr16
and
lcall
les
mov
mov
jno
or
xorl
push
inc
out
dec
shld
and
aaa
adcl
nop
xlat
jle
push
xchg
mov
inc
add
out
push
ljmp
sbbb
xor
push
cmpsb
sub
out
daa
sahf
mov
sub
sbb
imul
push
lret
mov
es
fbstp
fistpl
and
cmp
int
in
shl
pop
lret
cmp
xor
movsl
stos
mov
mov
ja
cmp
cmp
xor
sub
stos
inc
adc
pop
into
hlt
inc
push
popf
icebp
ja
fwait
mov
xchg
cmp
shlb
popf
sub
stos
int3
mov
cmpsb
dec
movsl
dec
pop
decb
mov
lods
add
pop
cwtl
int3
cli
push
pop
shrb
mov
pop
out
sbb
imul
mov
in
pop
popf
push
xchg
pop
scas
sub
jno
sti
add
scas
out
data16
or
leave
lds
push
xchg
mov
fucomip
clc
push
in
fstp
cs
dec
leave
mov
out
aas
jl
into
iret
or
out
mov
cmpsl
jl
loopne
cltd
cmpsl
sub
stos
xchg
add
add
add
sbb
int
rol
fildl
cs
push
icebp
cltd
mov
jnp
push
cmp
popa
enter
fldl
and
movsl
sbb
fdivr
or
dec
cmp
xchg
rclb
cmp
int3
jge
mov
pop
outsb
icebp
rcr
sbb
loop
inc
add
adc
push
and
pop
jle
xor
addr16
mov
jbe
mov
in
rcl
mov
repz
sar
adc
mov
pop
idivl
mov
and
das
leave
imul
jp
into
daa
sahf
mov
cmp
stc
in
push
or
mov
xor
or
sahf
cmp
fbld
test
outsb
xorb
push
outsb
mov
nop
pop
mov
out
cmp
popa
jo
lods
out
ja
sti
imul
loopne
or
sub
dec
roll
or
lock
mov
outsb
mov
pop
or
inc
jne
lret
jo
add
test
popa
or
outsl
call
push
adc
fwait
test
mov
mov
add
data16
loopne
inc
fcompl
and
je,pt
dec
pop
sbb
cmp
ja
scas
insb
mov
enter
inc
test
js
outsb
pop
adcb
imul
or
jmp
push
jbe
fbld
cmpsb
inc
fidivrs
lds
int
movsb
sti
pop
shlb
jmp
psrld
inc
push
jp
subl
out
cs
out
pop
mov
repz
insl
fistps
incl
add
add
push
mov
lcall
pop
pusha
mov
or
push
dec
jmp
sbb
or
rorl
jns
inc
jp
sahf
cmp
dec
fildl
sahf
sbb
mov
lcall
and
test
inc
push
std
sub
pop
fmuls
out
ret
popa
sub
sub
cmp
push
stc
outsl
fdivs
enter
pop
cltd
pop
ret
pop
add
add
sahf
add
add
add
fadds
call
inc
xlat
int
xchg
and
fsts
movsl
stos
pop
scas
cli
mov
xchg
mov
and
inc
outsl
out
test
idivl
mov
mov
into
cmp
vunpcklps
cmp
leave
cmc
add
inc
mov
pop
sub
repnz
imul
or
add
add
sahf
add
incl
add
add
lods
and
aaa
jbe
jle
divl
cld
mov
jecxz
cwtl
pop
shr
aam
int3
jmp
pop
sahf
or
inc
jle
and
push
mov
lods
ljmp
add
mov
mov
dec
jmp
add
sahf
add
decl
sbb
xchg
lock
mov
xchg
xor
jo
clc
sub
xchg
or
fmuls
bound
shll
cltd
repnz
or
int
xor
xor
int
cmp
dec
adcb
and
daa
leave
mov
jp
loopne
mov
popl
repnz
test
pop
shll
ret
cmp
ss
enter
jo
sbbb
int
mov
adc
flds
xor
fdivs
daa
xchg
push
int
add
insb
push
aaa
fldl
lcall
mov
movsb
daa
dec
int3
xchg
andw
data16
jecxz
aaa
jnp
mov
push
out
dec
mov
cmc
or
imul
daa
mov
pop
mov
daa
inc
inc
xor
in
int
jp
test
pop
ljmp
sbb
mov
ljmp
hlt
cwtl
aas
int
iret
movsl
in
lods
repnz
jge
aad
add
mov
mov
aaa
and
add
jns
mov
enter
mov
leave
outsb
or
outsl
lds
cltd
mov
jb
shll
jno
inc
pop
test
jb
data16
cmp
add
sbb
inc
test
ja
jns
outsb
sbb
mov
fcomps
pop
sbb
add
insl
fistps
incl
out
mov
outsb
lods
sub
xchg
fcmove
inc
or
enter
cmc
adc
in
fcoml
bound
leave
addb
xchg
jg
or
mov
inc
mov
stos
lret
lds
cmpb
mov
faddl
mov
idivl
xchg
cmpb
mov
das
sahf
insb
rorl
lret
push
in
fmull
mov
jle
push
mov
fdivrs
in
inc
adc
add
adc
call
cmpsb
mov
sub
cwtl
inc
rcrl
jp
sbb
xlat
jl
orl
aaa
add
sub
xlat
scas
bnd
ficoms
sub
mov
inc
int3
addb
push
mov
daa
pop
mov
and
and
cmc
subb
push
mov
mov
and
mov
pop
jle
dec
cli
push
jle
call
add
fdivrl
push
lods
inc
mov
add
sbb
mov
add
push
leave
mov
push
fisubl
cld
push
lret
shl
push
sahf
adc
add
jg
xchg
aad
lods
mov
pop
dec
ja
int
mov
cmp
mov
jmp
mov
cs
add
test
fists
loope
ljmp
push
xchg
lea
mov
loop
sub
xchg
test
mov
mov
mov
push
inc
mov
addl
fildll
and
int
mov
mov
pop
sub
mov
pushf
mov
sub
ds
ja
jecxz
je
data16
int3
cmp
sbb
or
dec
push
mov
jns
in
int
test
sbb
aad
sub
loope
jne
sub
xlat
jnp
pop
hlt
scas
adc
cmp
test
aaa
mov
js
cmpsb
adc
fmuls
out
sarb
mov
std
adc
add
jmp
xor
mov
mov
out
lock
lcall
jns
mov
xchg
dec
ret
sbb
xchg
rcll
pusha
xchg
cmp
je
mov
fstpt
rorl
pop
rcrb
or
jns
imul
adc
mov
fsubrl
mov
mov
arpl
or
scas
adc
cmpb
push
addl
test
adc
out
adc
iret
imul
pop
pusha
mov
gs
xchg
mov
into
push
mov
push
js
out
adc
insl
xor
divl
or
sar
dec
add
xchg
mov
add
sahf
add
sbb
xchg
sbbb
fsubrs
cmpsl
pusha
in
jle
mov
mov
add
pop
test
das
xchg
rcrl
dec
xchg
jne
add
add
sahf
add
incl
call
sbb
imul
jle
clc
xorb
pop
jae
addr16
xor
pop
scas
jge,pt
sahf
loopne
push
sahf
ret
adcl
inc
popa
jmp
inc
fcmovbe
sbb
in
sub
clc
pop
sahf
cmp
push
mov
test
enter
dec
cld
lret
roll
fimull
out
mov
lds
insb
xor
mov
stc
cmpl
int
or
dec
or
es
je
mov
int
sub
jg
dec
mov
in
push
pop
add
pop
fisubl
repz
lods
popa
rolb
mov
call
xchg
cmc
sarl
jbe
inc
adc
repz
jb
mov
jecxz
data16
adc
push
or
mov
insb
andl
popf
cmc
dec
popa
mov
sbb
int3
bound
push
xchg
adc
and
and
mov
inc
cmpsl
xor
pop
filds
int
xor
jb
cwtl
insl
repz
pop
aas
jno
stos
mov
inc
push
pusha
pusha
stc
push
out
mov
xchg
dec
pop
int3
inc
cmp
inc
push
adc
mov
push
bound
or
sub
mov
fwait
dec
lods
xchg
jnp
pop
es
aas
pop
mov
mov
push
int
in
mov
addr16
mov
and
add
add
add
sahf
add
incl
add
add
pop
lret
push
fbld
mov
xor
imul
ret
sbb
dec
cmp
dec
lock
negb
mov
arpl
rorb
std
repnz
add
lods
xor
test
sub
jmp
in
mov
cmp
xchg
inc
push
les
dec
test
repz
repnz
jg
and
xchg
mov
in
popa
popa
insl
mov
cmp
xchg
pop
push
addr16
adc
xchg
subb
mov
fisubrl
les
sub
mov
fisubrl
les
sub
mov
fisubrl
les
sub
mov
fisubrl
les
movb
add
