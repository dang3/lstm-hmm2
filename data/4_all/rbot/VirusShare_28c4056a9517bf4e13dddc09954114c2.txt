ja
dec
pushf
leave
push
iret
dec
mov
cmp
sub
repnz
scas
pop
cwtl
out
loop
sub
cmp
inc
les
xchg
mov
or
repnz
lahf
push
sysret
jge
mov
aad
mov
xchg
pop
out
in
sub
xsaves
push
mov
fwait
adc
sbb
jns
shll
test
stos
jmp
jb
popa
mov
mov
cltd
repnz
dec
mov
inc
mov
dec
dec
inc
sub
pop
lock
and
sbb
xchg
outsl
pop
pushf
loope
adc
xchg
push
int
or
loop
pop
test
mov
xchg
gs
mov
inc
mov
sbb
es
mov
addr16
inc
fmul
xchg
jmp
xchg
xchg
inc
push
mov
mov
inc
pop
pop
adc
inc
pop
int
dec
mov
jecxz
jae
fs
leave
inc
jo
ja
add
push
int3
imul
mov
jns
scas
mov
push
pusha
pusha
sbb
cs
mov
ja
pop
jbe
popa
gs
mov
jnp
adc
sub
gs
lret
pop
gs
push
and
pusha
adc
cmp
add
in
xor
cltd
xor
jg
dec
jnp
mov
lods
loope
ds
xchg
mov
xchg
lret
stos
movsl
sub
gs
cmpsl
cli
mov
pop
xchg
sub
enter
jns
sub
cmp
cmc
add
fistpl
aaa
dec
daa
dec
out
outsl
jne
inc
movsb
jb
sarb
addr16
ret
bound
stc
hlt
in
inc
push
mov
hlt
cmp
xchg
and
popf
cltd
lea
repz
pop
out
jg
fsubs
ljmp
add
into
add
jg
mov
icebp
xor
mov
sbb
xchg
jne
ljmp
lods
cmp
push
js
movsb
push
sti
loop
mov
pushf
adc
loop
xor
xor
mov
addr16
mov
ret
into
fwait
jp
cld
mov
inc
fcomps
and
subb
js
xchg
fisubrl
and
in
imul
into
fs
cmpsl
dec
xchg
pop
sbb
lahf
adc
gs
xchg
jnp
dec
mov
addr16
popf
lods
push
dec
lcall
mov
pushf
push
adc
loop
mov
ret
fs
popa
adc
push
push
clc
push
ret
mov
lcall
lods
push
xchg
dec
jo
ds
aas
push
shl
jae
cmp
add
mov
inc
add
inc
and
mov
xor
aaa
xchg
sbb
sbb
adc
xor
mov
xchg
jno
mov
push
stc
push
xor
push
mov
inc
loope
dec
gs
inc
add
push
fsts
cmp
adc
out
addr16
icebp
inc
imul
insb
jns
lods
sbb
and
loopne
fcomp
lcall
add
push
and
pushf
repz
inc
sub
inc
out
dec
loop
mov
test
int3
iret
in
rcrb
lret
sarl
push
jne
xor
push
leave
push
cmpsl
and
jle
pusha
dec
into
pop
push
les
jmp
push
jno
lcall
loopne
std
test
mov
xchg
and
pop
xchg
cmp
or
push
stos
sub
into
dec
pop
dec
sub
fmulp
mov
mov
mov
xchg
fidivrs
adc
lret
inc
mov
push
adc
xor
aas
mulb
sub
aam
add
push
pop
out
sub
das
aam
cmp
shrb
pop
inc
xor
dec
xchg
fwait
lret
xor
pop
mov
pop
push
mov
inc
xchg
movsl
insb
enter
in
push
jns
push
add
xchg
mov
jl
loope
push
and
or
fcmove
movsb
imul
fnsave
test
scas
cmp
cmpsb
sub
mov
sub
xor
fucomi
mov
out
adc
xchg
iret
loope
repnz
jbe
rep
push
sub
mov
or
incl
pop
imul
das
popa
sub
gs
in
pop
orl
xor
mov
or
jge
pop
pop
iret
and
test
or
inc
dec
test
stc
sbb
test
pop
cmpsl
or
mov
imul
inc
fmuls
es
cmpsl
pop
stos
sub
mov
sahf
push
mov
aam
sub
in
jns
lock
cmp
lcall
mov
leave
add
mov
pushf
dec
mov
sbb
divb
add
pop
test
dec
movsb
in
or
out
jecxz
in
in
xchg
mov
cmp
mov
cld
leave
aam
mov
adc
push
push
sbb
fldlg2
lret
inc
push
aam
mov
or
jne
jp
pop
rcr
scas
int
lods
out
ret
int3
adc
add
dec
dec
mov
cmp
imul
xor
xchg
imul
push
mov
cmp
stc
xchg
xchg
pop
xchg
fstps
fs
test
test
arpl
and
mov
cmpsl
push
or
int3
push
imul
xor
xchg
pop
xor
xor
xor
cmpsl
or
dec
jl
pop
inc
xchg
insl
insl
add
mov
adc
cmp
loope
test
cmpsl
adc
call
jge
loop
movsl
push
inc
in
pop
mov
cltd
mov
rcll
sub
nop
xor
inc
jbe
jo
xchg
pop
cltd
xor
cwtl
xchg
dec
cmp
stc
ficompl
ret
loop
adc
pop
lea
mov
mov
gs
lret
addr16
ss
mov
rcr
sbb
inc
ljmp
push
xchg
xchg
lds
test
les
xchg
out
adc
xchg
xchg
dec
add
das
adc
add
add
inc
je
push
ret
cld
push
push
add
sarb
cmp
dec
pushf
xor
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
shrl
jge
movsb
mov
xchg
shrl
cwtl
movsl
shrl
jg
mov
fucom
leave
cmp
or
pop
sub
add
pop
mov
push
push
pop
cmp
je
cmp
jne
int3
push
jg
js
and
pop
cmp
cld
push
push
push
lea
pop
pop
pop
push
and
pop
clc
loop
pop
clc
rol
lea
jmp
test
scas
repnz
mov
outsl
shlb
inc
mov
andb
sub
outsb
fbld
emms
or
rcll
daa
sbb
add
cmp
mov
cmp
lahf
mov
xor
xlat
xor
add
add
xor
mov
cld
cmpsl
xchg
cmp
push
inc
mov
ret
out
xorb
mov
sub
sub
cwtl
jo
inc
jecxz
dec
push
in
lret
jge
adc
xor
xchg
mov
rcll
test
ret
cmpsl
sub
pop
dec
jno
mov
ljmp
call
push
push
push
push
pop
pop
pop
pop
push
push
pop
cmp
je
cmp
jne
int3
test
push
push
mov
pop
pop
loop
pop
push
and
pop
shl
jns
jo
sar
jp
push
cmp
pop
test
add
mov
jno
cld
push
push
pop
cmp
je
cmp
jne
int3
fnop
cmp
clc
nop
push
push
pop
pop
loop
pop
push
mov
pop
jo
push
jne
push
dec
pop
pop
push
add
push
pop
pop
cld
push
dec
pop
push
push
sar
pop
pop
cld
rol
shr
rol
rol
mov
test
sub
add
add
loop
jecxz
push
push
inc
jle
jl
dec
inc
jno
or
add
push
jp
je
rol
pop
lea
and
rol
xor
add
js
push
push
push
push
pop
pop
pop
pop
and
inc
dec
and
push
jo
xor
pop
cmp
push
add
pop
inc
dec
test
jne
jmp
loop
jecxz
test
mov
push
movzbl
push
mov
pop
test
and
push
cmp
pop
ja
jb
jno
jl
nop
cmc
not
not
loop
pop
cld
push
xchg
pop
stc
mov
stc
push
add
pop
push
call
pop
xorb
lahf
data16
pop
into
ret
jg
mov
mov
inc
and
jecxz
rol
push
dec
sbb
ffreep
sbb
jg
cmp
mov
push
xor
mov
pop
cwtl
fistpl
add
pop
push
mov
push
xor
pop
pop
jg
cmp
push
push
push
and
pop
pop
pop
jl
rol
clc
push
push
push
push
pop
pop
stos
push
push
pop
pop
pop
pop
jg
jbe
jno
or
jnp
ja
push
test
pop
cld
and
push
push
cmp
pop
pop
loop
jecxz
or
divl
out
mov
mov
loop
pop
push
call
les
lea
je
movsb
iret
adc
push
out
xor
lea
add
jmp
jmp
ljmp
inc
clc
sbb
pop
pushf
pop
bound
out
and
lret
ret
push
in
pop
cwtl
push
and
pop
pop
inc
stc
jb
push
push
mov
pop
pop
jmp
mov
pop
xchg
mov
je
dec
mov
stos
xchg
or
and
sub
enter
outsl
in
sbb
in
pop
or
movsl
test
jns
call
sbb
ret
pusha
iret
aam
sub
scas
movsl
push
inc
inc
jge
sarl
mov
nop
cltd
sbb
pop
lcall
ret
movsl
sbb
add
test
cs
sbb
sbb
add
and
jnp
adc
mov
repz
sub
mov
jl
hlt
shlb
xor
jp
or
dec
inc
repnz
jo
jmp
sahf
dec
mov
dec
jne
loop
jecxz
negb
pop
loopne
cmc
fdivr
dec
pop
adc
sbb
iret
add
inc
jecxz
imul
push
call
stos
mov
dec
lea
jo
xchg
inc
adc
cmc
leave
insl
pop
jae
daa
adc
je
push
and
cmp
mov
data16
push
sbb
in
push
push
jno
sahf
dec
add
xchg
sbb
stc
nop
lret
shlb
sbb
mov
loopne
jnp
cmpsb
xchg
mov
xchg
adc
jo
fs
iret
test
sbb
mov
lret
mov
pop
sub
pop
loop
jecxz
fbstp
inc
push
loop
faddl
or
push
mov
xorb
and
out
mov
mov
pusha
fisttpl
dec
xchg
add
dec
daa
adc
das
xchg
fwait
lods
insb
scas
xor
push
jle
test
pop
jo
jb
cmp
shl
cld
xor
je
push
jle
sub
pop
or
push
dec
pop
xor
sbb
cwtl
and
iret
lcall
rorl
in
mov
aaa
xlat
mov
dec
push
sub
hlt
jmp
aad
es
mov
pop
dec
jmp
mov
pop
cld
dec
loop
lret
push
in
jl
sbb
xchg
dec
out
jbe
sbb
leave
add
cmp
rcl
insb
pop
out
jle
pop
or
scas
sub
lea
inc
lock
push
inc
aad
cmp
ret
cmpb
mov
fldcw
sub
bnd
fwait
in
cmp
hlt
and
xchg
in
mov
in
in
lcall
fs
in
mov
popf
in
sbb
in
cltd
in
lret
xchg
in
pop
test
adc
je
xchg
ret
mov
mov
imull
into
fwait
lret
loopne
add
lods
xchg
or
pop
or
mov
out
or
inc
sub
popf
in
xchg
in
es
sarb
flds
fists
roll
and
push
jno
jle
add
cmpsb
rolb
jecxz
xchg
shl
mov
pop
xor
iret
add
int
add
or
jae
xchg
aad
arpl
shl
jb
shr
into
dec
xchg
in
aam
shr
and
xchg
or
xchg
cmpsl
adc
iret
out
out
sahf
sar
fstpl
rcrb
cwtl
shrb
nop
js
add
dec
cmpsl
shlb
test
jno
lods
inc
jge
jle
icebp
add
out
and
xor
stos
scas
xchg
hlt
lods
fucom
xor
rolb
test
push
sbb
shlb
or
shlb
test
jne
addr16
mov
stos
shlb
dec
scas
fldl
ret
lods
fucom
and
rorb
lods
rclb
cmpsl
shlb
mov
sbb
cmpsb
shrb
test
jns
cmpsl
ror
jns
rcr
mov
shrb
ss
scas
cmp
push
rcrb
loop
sar
push
lods
rorb
lods
rcrb
cmpsl
shrb
or
mov
shrb
cmpsl
sarb
cmpsb
int3
int
cmpsb
int3
fnsave
int3
sub
in
lods
int3
lea
test
int3
in
mov
lods
int3
dec
icebp
and
rcll
cmpsl
ljmp
push
ficoml
adc
fsubs
ja
jno
jbe
sar
int3
sarl
jns
and
call
jl
xchg
hlt
jnp
loope
icebp
xchg
sbb
inc
fdivrl
push
sbb
mov
ja
or
jnp
imul
jbe
lds
js
and
outsl
jge
test
jnp
jmp
xchg
fmull
ja
push
movsl
out
push
fnstenv
mov
sbb
jne
imul
jbe
int
push
iret
out
push
fisubl
into
js
cmp
jge
mov
int3
cltd
cmpsb
jnp
jmp
push
jl
dec
pop
jnp
pop
xchg
jbe
lods
sarb
mov
dec
jb
sbb
shll
cld
jne
int
jne
fnsave
fsubrs
in
jl
lea
js
popf
gs
in
mov
jnp
dec
sbb
pop
push
jbe
lods
xchg
jnp
mov
or
fcoms
dec
test
popa
test
fadd
sti
test
sarl
mov
and
xor
xchg
xchg
sub
fdiv
mov
mov
push
sbb
fdivs
lret
sbb
gs
xchg
jne
test
lds
xchg
and
outsl
mov
test
mov
in
mov
cmc
pop
mov
inc
fwait
mov
push
xlat
test
movsl
adc
fmuls
mov
fsubrs
xchg
jns
test
leave
jns
fcomp
mov
fsubrs
repnz
cmp
mov
mov
fcomps
loop
fdivr
push
mov
dec
pop
mov
pop
xchg
test
test
or
sbb
insl
roll
int
test
fnsave
aam
mov
aam
in
mov
lea
xchg
popf
gs
in
mov
mov
dec
sbb
aam
xchg
mov
mov
or
aam
dec
push
aam
popf
sbb
dec
push
jns
sub
cmpsb
xor
xor
gs
stos
test
push
dec
sbb
dec
lret
xor
sub
add
jecxz
jae
push
xchg
sub
mov
and
or
scas
mov
in
arpl
stc
add
sti
sbb
nop
jecxz
ss
dec
scas
sbb
lods
pop
out
mov
add
or
ficompl
cmp
pusha
cmc
outsb
xchg
xchg
das
sub
bound
adc
xchg
fldl
shr
movsl
push
rcrl
mov
in
mov
inc
out
jl
pop
jge
push
mov
fnsave
lea
adc
je
pusha
data16
pusha
fcom
add
int
mov
fucom
lds
pop
fwait
jb
cmp
lods
push
mov
leave
xor
orl
mov
sub
call
pop
pop
and
cmp
testl
mov
jmp
push
pop
lahf
sub
loopne
xchg
rorb
mov
insl
inc
aaa
lahf
test
data16
push
and
lret
mov
mov
ds
sub
and
xchg
inc
jmp
pop
dec
push
pop
fwait
das
lcall
mov
enter
ret
add
mov
js
jno
repnz
cmpsl
call
dec
xor
mov
push
adc
je
inc
jp
inc
pushf
pop
jmp
and
inc
xor
push
mov
test
fs
daa
out
xlat
pop
js
cmp
dec
call
faddp
cmc
sub
fmulp
int3
cmpsl
shrb
xchg
xor
mov
cmpsl
sub
sub
stos
mov
call
aaa
mov
std
push
mov
pop
push
gs
rcrl
out
inc
push
test
mov
js
push
lret
aad
stc
negb
jne
roll
push
add
mov
and
add
imul
and
test
scas
cmp
es
stos
jo
xor
mov
filds
shrl
fwait
cmp
or
jb
jbe
mov
push
mov
adc
push
jmp
clc
leave
ds
push
sub
inc
pop
cmpsb
jae
push
mov
shlb
mov
xchg
test
xor
test
loop
mov
mov
mov
and
aad
and
and
and
lret
mov
cwtl
shl
out
call
stos
ss
and
nop
lods
xchg
repz
xchg
pop
cmp
mov
aas
sbb
cmp
xor
cmpsb
lcall
mov
call
or
xor
push
sub
jno
or
mov
push
dec
cmc
xlat
mov
jl
sbb
pushf
xor
fwait
stos
jae
sub
xchg
push
pop
lods
shlb
pop
adc
inc
cmpsl
jmp
push
mov
je
loope
lea
out
jno
inc
sti
lock
mov
sbb
push
mov
mov
imul
fnstenv
sbb
popf
test
or
lret
or
push
out
cmp
outsb
sub
cltd
leave
outsb
adc
stos
push
cltd
dec
cltd
jb
adc
push
mov
push
dec
popa
add
ljmp
push
cmpsl
movsl
aad
jecxz
adc
stos
sbb
aam
testb
mov
movsb
les
adc
xor
pop
fdivrs
push
cltd
into
bound
inc
rorl
adc
inc
push
mov
mov
jmp
in
jbe
sti
xchg
push
jle
inc
sbb
mov
into
mov
mov
inc
adc
pop
sbb
pop
das
xchg
xchg
out
cmp
lock
outsb
pop
dec
hlt
inc
enter
in
mov
jno
or
in
sub
scas
cmp
dec
jae
sbb
push
sub
loop
cmp
hlt
inc
jbe
sahf
push
adc
pop
inc
or
in
ja
pop
dec
es
and
push
pop
mov
xchg
inc
stos
movsl
cltd
int
xlat
xor
shll
pushf
xchg
insl
lods
pop
push
dec
fisttpll
jns
or
repnz
mov
repz
stos
inc
jns
enter
cld
fildll
fisubl
in
repz
mov
push
xlat
into
add
aad
out
xor
push
in
pop
aad
fwait
jmp
push
loop
sub
mov
xor
lahf
mov
repz
xchg
push
mov
push
mov
add
cli
outsl
ret
or
adcb
jle
es
sarb
notb
ficoms
mov
push
fwait
iret
mov
push
jne
ret
loopne
lret
adc
push
iret
lret
jge
or
daa
repz
or
sbb
sahf
jp
sbb
inc
js
aam
scas
lret
iret
mov
adc
push
sub
rclb
push
in
mov
inc
nop
jmp
jle
lods
fmull
fdivs
das
mov
into
mov
test
repz
imul
mov
rcrb
rorb
or
mov
jg
pop
fldt
jle
cmp
nop
int
popa
and
int3
add
cmp
cmp
xchg
cmpsb
jmp
jge
flds
lds
ret
sbb
mov
aad
aas
dec
pop
leave
pushf
insb
fstpl
xor
hlt
mov
stc
jbe
xorl
aas
dec
cmpsl
pop
stc
aas
xchg
mov
xchg
addl
adc
inc
loopne
xchg
mov
dec
int3
imul
inc
mov
push
js
pop
clc
or
fwait
fwait
imul
pusha
jl
imul
scas
and
and
inc
xchg
sarb
sbb
add
lahf
xchg
jg
sti
jb
inc
lds
mov
addr16
outsb
lcall
push
jl
push
dec
out
lock
mov
jge
les
jg
mov
je
gs
cmp
xchg
rcll
popf
xchg
aaa
out
sbb
mov
sbb
or
cmpsb
aaa
jmp
ret
pop
ds
int3
push
mov
jbe
ss
lea
adc
loopne
in
mov
xor
and
out
mov
int
nop
xchg
dec
pop
cmp
xor
xchg
jge
mov
push
pop
std
dec
cmpsl
aam
sub
mov
push
outsl
xchg
mov
aaa
mov
jae
add
je
inc
or
push
add
adc
cmp
and
in
repz
ret
mov
push
das
ljmp
loope
hlt
dec
jno
jmp
jle
xchg
sub
stos
inc
in
sub
fadds
mov
ret
push
and
ror
nop
rcrb
bound
dec
out
and
daa
in
faddl
xor
jp
enter
mov
dec
ja
lock
and
push
jns
jg
or
pushf
lahf
enter
test
aas
add
outsb
inc
out
mov
ja
xor
out
pop
test
loope
or
sti
mov
xchg
or
adc
pop
into
test
inc
xchg
stos
xchg
pop
cmc
mov
mov
xchg
sahf
cwtl
sub
aaa
or
mov
mov
jne
faddl
mov
imul
dec
sbb
pop
popf
cs
mov
xor
sbb
sti
cmp
and
inc
xchg
mov
popa
add
fsubrs
loopne
jmp
stos
out
cwtl
fidivl
in
lock
jno
je
or
nop
int3
mov
ljmp
imul
push
lret
xor
jb
cmc
adcb
pop
pop
add
js
inc
clc
jmp
push
clc
push
xchg
mov
es
jae
aad
daa
stos
push
jb
xchg
orb
inc
inc
pop
inc
ficompl
and
imul
mov
jne
adc
pop
outsl
jne
mov
push
dec
jl
in
xor
mov
push
dec
sti
adc
inc
sbb
ret
inc
dec
repnz
push
sbb
insb
icebp
inc
test
lock
jle
dec
fdivl
cmp
mov
ja
add
mov
or
mov
jl
push
mov
lcall
xchg
cmpsb
push
fwait
cmpsb
adc
adc
adc
les
into
jbe
add
push
mov
test
popa
int
cmp
or
imul
bound
ret
cli
es
push
sbb
mov
rorb
sbb
scas
shrl
call
sub
pop
mov
xor
jb
mov
mov
sbb
fsts
sub
cmp
push
xchg
movsl
jle
mov
rorl
add
adc
std
sub
test
data16
cmp
inc
ljmp
pop
add
pusha
ret
jmp
push
xchg
sbb
pop
adc
sub
jae
push
lea
pop
jb
or
iret
pop
mov
test
sahf
imul
sub
stos
sahf
movsl
push
adc
out
xchg
push
mov
into
cld
cmp
aam
xchg
mov
sbb
nop
rcrb
popa
cmp
and
adc
inc
je
cmc
negb
and
pop
fcmove
repz
pop
xchg
fsubrs
dec
mov
cmpsl
lds
popa
adcl
jl
cmp
lods
fwait
pop
add
lock
push
mov
cmp
aaa
in
mov
push
cs
jne
std
push
scas
popf
or
mov
ja
dec
shlb
aaa
dec
xchg
push
xor
or
cmp
rcrl
rclb
add
mov
push
loopne
dec
imul
int
push
data16
xor
lret
xlat
push
lret
adc
sub
lret
pop
jg
test
arpl
mov
add
pop
dec
sti
xchg
inc
cmp
pcmpgtw
sbb
das
lods
add
ret
adc
std
hlt
sbb
cmpsb
mov
push
stos
ds
or
push
jno
cmc
sub
dec
cmp
call
push
lods
lds
lods
sub
jns
jnp
jge
imul
mov
xor
jl
mov
cli
jp
mov
mov
or
fistpl
mov
cs
dec
cmp
daa
aam
xchg
jle
pop
or
lock
pusha
scas
mov
xor
test
ja
rorl
xchg
adc
imul
cmp
pop
sub
lahf
jns
mov
cmp
fisubrs
dec
gs
dec
lock
add
lcall
test
lods
push
xchg
sbb
movsl
inc
mov
or
popa
xchg
inc
mov
xchg
test
add
es
pop
incl
cmpsb
adc
movsl
hlt
xchg
jmp
add
sbb
int3
sub
mov
push
insl
ret
test
mov
inc
push
lret
add
add
cmp
mov
iret
shrl
sub
clc
pop
sbb
fstpl
aad
cmc
add
sahf
cmp
ret
inc
adc
xchg
cs
das
fnsave
je
repnz
sub
popa
ja
sub
test
test
out
mov
mov
or
jb
int3
pop
jecxz
sub
dec
movsl
test
rorl
xchg
jg
fstpt
mov
data16
mov
and
mov
push
pop
inc
div
and
cmp
adc
fstpt
cmpsb
mov
sbb
cli
xchg
mov
jae
xchg
pop
cli
jmp
lea
jne
inc
andb
pusha
stos
fistl
shlb
and
or
adc
jmp
mov
fisubs
cwtl
pop
pop
sar
pop
call
mov
or
dec
add
cs
inc
mov
xchg
gs
fs
lcall
and
lcall
lock
cmp
push
lea
cmp
lret
dec
imull
pop
aad
pop
out
hlt
mov
xchg
in
fimuls
pop
pop
fcmovnbe
push
loopne
rep
dec
aaa
inc
cmp
shlb
popa
mov
aaa
jl
shrb
cmpl
adc
cwtl
into
xor
inc
int
cli
daa
or
pushf
cwtl
sub
inc
hlt
mov
sbb
inc
aas
js
stc
inc
cmp
cli
inc
shl
dec
ficomps
daa
in
or
movl
xchg
mov
stos
add
inc
mov
rcl
mov
scas
xchg
add
mov
les
into
pop
das
sbb
mov
cs
les
push
ret
fsubs
inc
jecxz
adc
jmp
jl
out
mov
mov
aas
sbbl
adc
mov
test
mov
dec
cmpsb
cmp
cs
repnz
movsl
cltd
add
jge
mov
xor
or
cmp
cwtl
mov
cmpsl
mov
outsl
or
pop
data16
adc
inc
mov
sub
push
jne
jg
adc
inc
sub
mov
adc
lock
repz
cmp
inc
mov
sbb
lock
aam
in
mov
inc
fbld
push
nop
idiv
outsl
or
xor
adc
jbe
and
roll
enter
js
test
mov
mov
stc
lock
cmp
pcmpgtw
gs
cwtl
adc
dec
push
test
jno
scas
push
rolb
xchg
inc
dec
add
imul
cld
or
mov
hlt
mov
sub
fwait
or
sbb
ret
nop
ljmp
das
adc
sub
cmp
xchg
ret
jle
rclb
push
shlb
jl
adc
mov
push
and
and
mov
cld
mov
mov
mov
mov
xor
imulb
cmpsb
pop
push
repz
les
push
shlb
or
push
repnz
add
fsts
xchg
mov
adc
mov
lock
xor
scas
xor
clc
popf
daa
add
movsl
sahf
xchg
data16
loopne
lods
mov
push
add
push
push
call
xor
push
out
push
xor
mov
bound
scas
inc
popf
jmp
fisubs
outsl
stc
dec
cwtl
out
sbb
and
sub
outsl
add
mov
test
jle
mov
push
lcall
out
pop
pop
fsubl
insb
adc
jns
ror
mov
pop
sbb
sub
pop
mov
inc
mov
flds
test
scas
or
mov
mov
nop
mov
mov
jmp
movsb
or
adc
pushf
das
test
mov
rorb
cltd
repz
hlt
addr16
mov
xchg
bound
shll
fdivrs
aam
mov
jmp
adc
cmp
pop
iret
in
mov
neg
in
sub
adcl
push
jge
lods
mov
mov
lock
repnz
out
pop
test
fsubs
pop
dec
cmpsl
mov
adc
int
std
jbe
scas
popf
popa
mov
and
test
or
dec
fcmovnu
mov
sbb
jge
std
adc
dec
out
lock
sahf
and
repnz
ja
jnp
and
aaa
loop
movsb
icebp
mov
and
mov
scas
test
cltd
jge
sub
stc
jp
push
rorb
cs
and
sub
mov
cwtl
and
adcl
addr16
inc
and
jge
mov
test
in
push
stc
test
lahf
dec
stos
into
mov
loopne
addb
mov
sbb
pop
dec
pushf
les
rorb
push
mov
lods
jnp
inc
adc
nop
leave
fdivrp
enter
lods
xchg
lods
les
mov
pop
lea
pcmpgtw
mov
inc
mov
cwtl
cltd
lret
enter
adc
out
pop
cmpsb
push
ret
clc
lods
pop
xchg
lock
ficoms
xchg
ficoms
inc
out
jno
push
mov
insb
js
sub
in
jp
sbb
testl
adc
mov
dec
dec
loop
add
and
inc
push
xchg
mov
mov
lods
rcrb
fldenv
mov
mov
sbb
xor
jno
xchg
cmp
lock
addr16
or
jno
adc
jge
stos
negb
xchg
push
rorb
mov
fdivrs
push
mov
das
test
hlt
xor
xor
fadd
mov
jge
mov
jne
push
mov
jecxz
out
push
enter
sbb
out
xchg
jl
mov
mov
leave
cmpsl
fiadds
es
insb
push
faddl
icebp
les
add
les
push
sub
jle
add
mov
add
xor
gs
sti
mov
mov
mov
pop
test
inc
and
mov
daa
push
jbe
add
cmp
and
int3
int3
inc
cmp
dec
cmp
and
add
psubusw
iret
mov
dec
popf
jp
cs
adc
lcall
push
cmpsl
movsb
sti
and
adc
sarl
mov
mov
fcoms
adc
sarl
in
cmp
and
loop
inc
loop
push
scas
and
mov
sti
sbb
push
jbe
test
mov
add
push
dec
in
fmul
cmpsb
cmp
pop
shrl
arpl
leave
mov
outsl
mov
lcall
jmp
cmpsb
mov
icebp
cmc
das
push
fwait
pusha
add
or
dec
dec
or
aad
es
mov
repz
mov
outsl
pop
sub
inc
dec
fisttps
xchg
js,pt
jle
aaa
adc
lea
fbstp
shrb
dec
mov
or
addl
xor
fldcw
xor
mov
inc
pop
and
call
sub
mov
aad
ds
std
xchg
pop
jecxz
stc
jp
aaa
aad
dec
movsl
sar
fsts
fsubrs
mov
outsb
xchg
mull
imul
gs
sub
repnz
xchg
mov
and
insb
dec
loope
out
cmpsl
cmpsl
adc
rcr
int3
daa
pop
xor
fdivrs
addr16
pop
push
andb
xchg
xchg
jae
aas
pop
aaa
mov
xchg
js
scas
and
cmc
xchg
push
xlat
sub
pop
fwait
call
jecxz
imul
xchg
xor
push
xchg
aad
adc
mov
xor
imul
fst
push
mov
xchg
les
and
add
cld
jno
pop
cmpsb
fisttps
movsb
push
ljmp
sbb
movsb
ds
xchg
dec
cmp
jecxz
cmovge
hlt
fmull
cli
cmp
dec
sbb
mov
fnstsw
jge
adc
mov
cmp
push
fidivs
pop
fs
movsb
pop
movl
shll
jb
mov
jb
sub
and
call
xchg
dec
ljmp
pop
je
divl
int
xchg
cmp
dec
mov
in
dec
cmp
mov
ss
mov
dec
addl
pop
cmp
mov
jbe
ja
pop
les
adc
jnp
mov
loope
js
sub
stos
pop
divb
fists
xorl
add
out
loope
adc
adcl
adc
add
xchg
push
and
jb
btc
lock
sbb
inc
xor
int3
int
pop
jecxz
loop
sbbb
inc
cltd
ja
mov
daa
in
scas
aam
in
insb
xchg
pop
aam
pop
pop
xchg
int3
and
add
shrl
fwait
inc
push
push
mov
rcrl
add
and
pop
subl
lea
mov
aad
lea
push
lods
dec
popf
jo
lds
push
pop
sub
mov
daa
sbb
mov
lods
les
adc
enter
fisttpll
sbb
fst
mov
leave
and
add
push
rorb
mov
mov
negb
cmp
cmp
cmp
mov
imul
jo
out
lods
in
xchg
testb
in
aad
xlat
lret
stc
lods
xchg
negl
jno
sub
je
je
mov
pop
lods
dec
sub
sbb
dec
push
dec
les
pop
int3
adc
mov
rclb
cmp
sub
sbb
or
jno
mov
iret
cwtl
sbb
into
dec
fistps
ljmp
pusha
mov
mov
jmp
shlb
push
arpl
push
lea
mov
jg
pop
add
dec
jae
fdiv
inc
jmp
pop
inc
jp
cmp
lret
pop
sub
mov
cld
sti
pop
cmp
pushf
pop
jnp
sub
cs
and
xchg
pop
mov
gs
mov
cwtl
mov
jnp
in
loopne
icebp
pop
lea
push
or
lcall
and
pop
insb
cmp
push
cld
scas
cltd
dec
fistpll
lret
push
add
cli
mov
das
jbe
loopne
adc
and
shrb
in
dec
jne
daa
mov
ret
cltd
lret
mov
cs
sarb
imul
lods
addb
int
fnstsw
inc
mov
adc
shll
mov
adc
cltd
clc
jmp
sub
mov
push
daa
xor
xor
aaa
mov
jge
in
test
popf
xor
xchg
in
push
push
iret
stc
loope
jae
xor
sub
addr16
mov
inc
ds
js
and
jne
ret
xorl
lret
outsb
loop
testl
mov
or
or
mov
lea
cmp
ss
mov
ja
mov
ljmp
lock
mov
stos
out
mov
xorb
pop
insb
fcompl
dec
jbe
cmpsl
pop
js
adc
and
jmp
mov
sub
xchg
fwait
pop
inc
pop
mov
std
push
mov
adc
sub
or
jecxz
test
sbb
or
addr16
insb
loope
ds
bound
xor
and
aaa
inc
fldt
mov
xlat
sub
inc
jb
mov
xchg
adc
or
mov
or
xor
add
or
dec
add
shrb
xor
sahf
mov
push
xchg
scas
pop
jbe
stc
pop
push
jecxz
int3
inc
and
lret
pop
mov
sub
and
jb
lret
cmp
adc
inc
mov
hlt
pusha
andl
mov
fisubl
sbb
or
inc
sahf
cmp
aaa
imul
enter
stc
push
xlat
lret
jl
ret
or
out
mov
daa
mov
outsl
sub
repz
mov
inc
xor
jo
inc
pop
loope
pop
push
mov
lods
aad
movb
add
icebp
hlt
iret
xor
mov
mov
or
dec
scas
addb
inc
enter
sbb
loop
mov
mov
mov
shl
mov
dec
mov
pushf
mov
mov
or
outsl
push
in
lret
pop
jnp
sub
fldcw
stos
mov
inc
cmp
cmpsb
pop
into
inc
loopne
fdiv
shlb
sub
cwtl
fcoms
lods
and
mov
xchg
shll
mov
call
aam
imul
or
xchg
mov
or
ss
push
mov
mov
ljmp
xchg
mov
pusha
push
push
imul
inc
std
sar
push
mov
pop
loop
xor
mov
mov
and
faddl
inc
enter
popa
pop
mov
leave
push
das
in
or
in
jns
js
push
jb
lcall
fdivp
pop
subb
pop
into
adc
push
sbb
jno
or
adc
lock
sbb
sub
push
mov
push
push
sub
out
repz
cld
and
inc
inc
xor
push
bound
sub
push
jp
rolb
jg
jne
imul
shll
cmpsl
and
faddl
iret
out
push
jo
stos
add
lods
out
pop
outsb
dec
mov
pusha
shl
mov
mov
addr16
adcb
push
mov
jb
ret
mov
jbe
or
jae
push
repz
jae
xchg
ret
and
inc
mov
lods
pop
add
test
je
mov
and
inc
inc
inc
aam
enter
or
push
mov
inc
mov
mov
xor
stos
fcmovb
jae
shlb
arpl
std
cmpsl
out
mov
mov
xor
call
roll
dec
call
adc
int
or
add
mov
lods
test
sub
sub
testb
sbbl
adc
notl
push
test
adc
outsl
iret
dec
xlat
les
cmpsb
mov
sahf
fdivl
or
call
dec
mov
int3
add
sbb
jns
and
popf
or
lods
inc
or
cmp
loop
scas
movsl
pop
dec
and
dec
pusha
nop
mov
stos
inc
sub
jno
sti
lahf
xorb
fstl
subb
mov
dec
pop
popf
lret
push
adc
xchg
sti
cli
mov
and
mov
into
iret
scas
sti
in
adc
jne
cmp
popl
sbb
popa
outsb
out
arpl
stc
lahf
frstor
cmp
mov
pop
pop
inc
and
adc
mov
cltd
inc
jp
iret
enter
out
inc
mov
jg
add
mov
outsl
or
jno
es
inc
mov
aaa
sahf
mov
notb
jmp
or
ss
xor
or
mov
push
jecxz
sub
mov
cmp
push
pop
dec
mov
fistpll
cli
lret
mov
mov
cmp
adcb
push
xor
xor
sbb
jbe
cmpl
push
mov
lods
inc
sti
sbb
dec
push
jg
and
lcall
cmp
inc
scas
fwait
sbb
shlb
repz
notb
insl
add
out
pop
cmp
out
mov
push
pusha
in
sub
sbb
pop
cmp
out
cmp
push
fst
int
xchg
or
xlat
xor
enter
adc
or
clc
or
sub
pop
sub
data16
or
pop
into
stos
fsts
sub
sbb
mov
adc
jne
lds
in
push
cli
imulb
jge
fisubrs
or
daa
movsb
repz
jno
in
rol
scas
popf
xchg
out
sbb
sbb
or
pop
outsb
jae
fimuls
popf
std
xor
xor
mov
imul
insl
xor
xor
pusha
into
mov
mov
das
mov
lret
pop
dec
ss
cmp
movsb
int
xchg
xchg
cmp
pop
mov
sbb
xor
ds
cmpsb
aad
adc
jmp
inc
jbe
adc
std
push
dec
sti
or
movl
xchg
in
or
ss
mov
xchg
shrb
adc
or
xchg
lret
pop
dec
jmp
out
js
mov
imul
or
enter
mov
ja
mov
mov
lods
mov
scas
pushf
jno
push
outsl
or
lcall
lock
sahf
cmp
aaa
xchg
cmc
cmp
xchg
sub
test
lods
push
mov
fldl
mov
int3
jmp
stos
jae
addr16
sub
out
shll
test
addb
pop
dec
and
cmp
push
cltd
cmp
lods
inc
xor
mov
hlt
fwait
mov
mull
mov
sbb
mov
mov
mov
cmp
std
pushf
cmpsl
lahf
fldt
repnz
hlt
imul
inc
jb
mov
dec
in
mov
fwait
sbb
in
addr16
scas
fisubrs
jg
sbb
out
cmpsb
lea
jp
loope
fcomps
xor
pushl
cld
sbb
xchg
leave
lcall
cmpsb
fisubl
vpaddw
mov
in
push
jmp
std
mov
popa
push
int3
cmpsb
popf
pop
in
or
jmp
loop
sub
mov
insb
adc
mov
mov
pop
xor
xchg
fistpl
pop
cmpsb
cmc
icebp
xlat
jo
hlt
inc
sbb
adc
jge,pt
xor
sub
popa
pop
das
jl
push
rol
mov
mov
mov
into
xor
mov
insl
iret
push
in
out
sub
cmpsb
test
sbb
cltd
leave
push
xchg
cli
jns
mov
pop
int3
push
loop
or
add
jmp
inc
ss
nop
push
pop
sbb
mov
jp
pop
mov
mov
in
push
daa
addl
adc
ret
mov
clc
scas
lret
shll
or
clc
add
frstor
mov
aas
add
cmp
in
adc
jnp
cmpsb
lea
shlb
sub
ret
xlat
in
pop
movzwl
subl
inc
add
xorb
xchg
push
xchg
sbb
cmp
fidivs
inc
xor
stos
enter
inc
repnz
int3
pop
xchg
rorl
insb
mov
out
jle
in
mov
and
sub
inc
xchg
fcompl
leave
sbb
mov
std
xchg
pop
xchg
out
jae
ret
pop
fstp
aaa
inc
scas
movsl
fwait
mov
xor
int
push
popf
pop
data16
inc
inc
push
imul
jns
xor
xchg
fcomip
mov
xchg
out
mov
cmp
out
inc
jmp
push
and
add
and
fstpt
fisttpl
sarl
sysret
inc
jne
mov
adc
push
imul
leave
inc
xchg
inc
dec
call
jae
aas
call
orb
push
daa
test
in
dec
ret
rcrl
dec
or
add
in
cmpsb
pop
out
add
cmp
xor
rclb
mov
sub
push
hlt
shrl
xorl
push
xor
push
repnz
ja
fnsave
cmp
mov
cltd
jl
iret
loop
mov
xor
lea
in
or
xor
mov
push
mov
dec
mov
outsl
push
mov
jecxz
xchg
lea
cltd
adc
arpl
out
in
mov
pop
shrl
and
mov
xor
mov
les
loope
mov
mov
adc
jae
cmpsb
xor
add
cmpsl
imul
cmp
fs
repnz
mov
jp
cmp
inc
int3
xor
adc
imul
adc
sbb
mov
xor
dec
divb
xlat
jbe
imul
outsb
push
inc
mov
cmp
mov
sbb
xor
or
dec
cmp
pop
inc
pop
jb
iret
mov
adc
xor
fldt
cmp
mov
sbb
pop
pop
lahf
jne
inc
mov
int3
movsl
mov
xor
sub
jnp
xchg
imul
or
aas
fimull
int3
dec
cltd
sahf
ljmp
test
jmp
flds
ret
pop
in
sbbl
pop
fiadds
loope
or
fldenv
jnp
jae
int3
xor
cmp
movsb
jecxz
pop
test
insb
push
push
lret
in
mov
and
int3
jp
sbb
inc
xor
andb
leave
stos
lods
push
je
xchg
sahf
out
daa
outsl
adc
lds
inc
and
shlb
ds
out
jne
xchg
and
jmp
bswap
mov
lods
push
xchg
push
lcall
mov
pavgb
push
mov
ljmp
mov
dec
add
lods
mov
pushl
jge
adc
je
push
pop
and
push
scas
push
and
pop
dec
insb
arpl
jcxz
cmpsb
jne
rcll
and
stos
sbb
out
mov
fmuls
inc
adc
cmp
inc
jmp
subb
in
adc
push
ret
push
insl
lds
adc
xor
mov
sbb
xchg
xchg
dec
test
iret
scas
cltd
mov
inc
lahf
jb
push
cli
pop
js
xchg
test
arpl
gs
adcb
bound
in
shlb
mov
cmp
lar
mov
data16
fcoms
test
jo
jl
stc
pop
pop
jns
sbb
jb
iret
bound
sbb
push
enter
cvtpi2ps
cli
mov
clc
sub
jne
sub
aad
pop
jbe
data16
insb
pop
cwtl
xchg
xor
cmp
stos
dec
adc
imul
jns
cmp
xor
mov
scas
negl
loopne
out
jbe
sub
stc
or
dec
push
push
hlt
and
mov
popa
and
jge
ret
clc
sbb
stos
push
jl
mov
les
out
popa
pop
and
mov
xchg
nop
push
lret
mov
cld
outsb
jl
es
cs
popf
stos
loope
and
lret
daa
and
cld
ficoms
jmp
jo
cmp
lahf
pop
inc
mov
fs
cmp
aas
xchg
imul
sbb
inc
add
push
cwtl
jecxz
inc
jbe
adc
dec
popf
mov
mov
pushf
test
or
jbe
mov
insb
sbb
sahf
mov
mov
jb
mov
test
mov
mov
inc
or
pop
cli
out
lods
and
aam
ret
lock
pop
pop
cmpsl
stos
mov
mov
lds
mov
sbb
mov
mov
int3
dec
push
jns
out
xor
push
xor
insl
ja
icebp
ss
dec
adc
dec
xchg
push
push
int3
push
push
fiaddl
iret
mov
add
cmc
xor
repnz
xor
sbb
int3
add
lahf
les
add
dec
aad
in
jmp
jl
repz
jb
sub
adc
out
cltd
shlb
xor
int
aaa
xchg
add
lcall
test
mov
cmp
in
iret
fstp
pop
mov
ret
aad
adc
jns
loop
mov
lods
lock
cli
add
dec
push
inc
push
mov
daa
adc
loop
sbb
divl
sbb
adc
xor
mov
sub
xchg
test
and
rcll
arpl
pusha
cmc
jmp
clc
arpl
xor
int
pop
sbb
mov
lds
push
jo
stos
jns
bound
lea
lret
lahf
jp
xor
pop
pop
push
cwtl
nop
test
sar
mov
je
loop
testb
incl
xchg
xor
push
sbb
sbb
xor
fisubs
fwait
data16
push
pop
cmp
dec
jnp
aad
ret
fisttps
icebp
sbb
jbe
xchg
xchg
mov
icebp
xor
out
ljmp
fld
orl
popa
in
repz
insb
fdivs
cmc
dec
scas
fildll
push
pushf
rclb
xchg
mov
xor
pop
call
xor
ss
inc
mov
adc
mov
lds
mov
mov
lods
jle
and
lret
movsl
mov
jne
out
push
out
leave
dec
fistps
sbb
push
int
out
pop
dec
cld
stos
or
shl
and
push
mov
insb
je
sbb
fidivl
and
fstpt
dec
lcall
push
xchg
cmp
push
not
push
cmc
stc
dec
jmp
mov
pushf
ljmp
int3
pop
out
les
sbb
pop
fimuls
add
repz
fincstp
js
cmc
fbstp
sbb
and
ja
push
mov
movsl
push
jb
sti
fldlg2
adc
or
sarb
call
jne
pop
mov
cltd
adc
jns
imul
ds
test
cmp
scas
outsl
or
mov
xchg
and
xor
test
cmp
adc
cmp
push
pop
addr16
mov
cwtl
push
or
mov
cmpb
cwtl
mov
dec
clc
inc
shll
cmp
sub
mov
jge
push
mov
ds
imul
push
sbb
jne
clc
adc
orb
in
sub
push
cmp
pop
or
xchg
push
push
aaa
iret
pop
xchg
xchg
aaa
adc
aas
jmp
xor
aad
xlat
pushf
inc
jge
pop
push
sbb
fwait
jg
into
stc
out
xchg
add
jae
hlt
int
xchg
outsb
jae
out
xor
rorl
mov
cmp
and
loop
xchg
xor
push
cwtl
lds
in
test
xchg
sbb
stos
xchg
mov
or
push
sbb
in
dec
pop
shlb
fldl
jmp
mov
jg
xchg
or
push
inc
jo
bound
test
dec
pop
unpcklps
loopne
loop
jecxz
sub
outsl
fsubs
ret
loope
mov
cmp
xor
or
repnz
push
jecxz
sbb
call
pop
mov
aam
and
add
dec
rcrl
mov
jecxz
data16
jp
or
inc
or
pusha
aas
nop
daa
push
sub
lds
inc
pop
xorb
aas
jnp
idivl
lea
jp
cmp
movsl
inc
jmp
ret
add
sbb
mov
cmp
fsts
cmp
gs
insb
popf
es
in
imul
jecxz
dec
mov
lret
xchg
mov
inc
scas
dec
shl
out
adc
adc
sub
dec
mov
lret
int3
scas
adc
jmp
jb
sbb
lods
repz
pushf
enter
adc
ljmp
xchg
fldcw
call
std
push
adc
mov
adc
or
pushf
add
dec
ja
sahf
shl
sbb
outsl
rorl
push
push
push
pop
and
out
push
fidivs
or
cmc
mov
or
mov
sti
add
mov
push
fwait
push
call
fisttpl
mov
popf
cmpsl
adc
mov
mov
cmpsl
xchg
lods
push
icebp
orb
cltd
dec
cs
aas
jb
pusha
cli
out
fisttps
inc
in
push
daa
inc
push
clc
fsubrl
push
xor
xor
rorb
out
lea
xchg
adc
and
pop
shlb
cltd
aaa
sub
sub
sahf
call
in
adc
sub
sbb
push
cmp
fistpll
mov
xor
inc
mov
inc
sbb
aas
xor
pop
jno
out
cld
fwait
idivb
lods
test
mov
lods
aaa
pop
push
je
movsl
aas
mov
cld
pop
fcomip
push
xor
in
in
ficompl
cmpsb
sub
lcall
aam
lods
out
pop
js
lock
push
push
dec
cmpsl
out
dec
in
push
and
push
in
pushf
inc
shlb
add
dec
lret
ficompl
lods
xor
ss
xchg
mov
dec
daa
cmc
in
xchg
mov
test
inc
subl
push
mov
movsb
dec
sub
aad
add
push
out
xor
stos
clc
sub
orb
xor
pop
lret
int
push
lea
cmpsl
icebp
mov
dec
add
sub
adc
in
mov
fcmovbe
andb
cmp
in
lds
cmc
rcll
and
sti
xchg
icebp
jp
pop
loopne
dec
idivb
ljmp
jbe
mov
mov
popf
lret
sub
mov
jb
adc
or
in
xor
xchg
push
and
adc
les
mov
shlb
aad
nop
jb
inc
jae
fwait
inc
inc
vmaxss
js
cmc
or
shrl
imul
mov
push
in
adc
imul
mov
jns
fimull
xchg
dec
mov
adc
pushf
xchg
add
jmp
out
pop
je
jo
cwtl
jnp
jno
mov
dec
lret
sti
mov
mov
int
or
jle
push
mov
push
sub
lret
ss
or
cmp
outsl
cmpsb
test
fists
lock
insb
insb
hlt
cmc
lds
push
or
add
test
ret
ds
xor
loopne
shlb
mov
das
inc
sbb
push
addr16
lods
sbb
imul
fwait
or
sub
mov
mov
sub
add
jo,pt
push
jmp
mov
or
mov
pop
loopne
dec
les
fimuls
movsb
adc
cli
lea
aad
dec
stc
pop
adc
mov
push
in
out
dec
movl
sbb
xchg
out
dec
test
clc
jp
add
adcl
mov
mov
cmp
adc
nop
fiadds
lcall
adc
jns
dec
bnd
mov
cmpsb
test
sti
ds
les
jne
add
roll
negl
in
stos
xchg
cltd
add
cwtl
in
roll
jecxz
sbb
mov
pop
sub
push
enter
outsl
mov
pop
popl
sti
sub
jne
xlat
roll
js
mov
jg
call
inc
clc
lahf
dec
insb
cltd
stos
sti
xor
sub
mov
popw
jbe
inc
sbb
sub
adc
mov
outsb
adc
icebp
and
popa
mov
lret
push
dec
mov
bound
mov
add
dec
in
or
cld
andb
imul
jl
add
subb
pop
xchg
sub
icebp
and
mov
cmp
movsl
mov
pushf
push
push
enter
in
xorb
adc
adc
scas
cmp
icebp
adc
andl
outsl
sub
and
dec
push
push
sahf
test
fsubl
aaa
popa
or
ljmp
push
push
loopne
cld
sub
mov
mov
sbb
repz
mov
loope
adc
jnp
in
adc
jnp
loop
pop
sti
lods
rclb
jns
or
sub
sahf
sub
out
inc
cmpsb
and
ja
cmpsb
mov
ss
repz
pop
xor
mov
inc
xor
sarl
out
out
dec
xchg
scas
sbb
dec
cld
sub
jns
inc
add
and
xchg
mov
dec
loop
cmpsb
insl
sbb
inc
add
fdivrp
cld
jne
lret
add
sub
ljmp
push
icebp
dec
outsb
repz
test
gs
xor
xchg
enter
cmp
jmp
mov
lock
imul
mov
orl
out
stc
stos
pop
push
adc
xor
xchg
jg
jns
xchg
imul
xchg
bound
xorb
popa
lea
mov
aas
sbb
or
xor
mov
es
pop
xchg
lret
xlat
cs
mov
xor
add
inc
and
add
incl
xchg
daa
in
cmp
xchg
fldcw
and
and
sbb
clc
cld
pop
ret
arpl
cmp
aad
imul
jmp
daa
ret
subb
lahf
push
xor
xchg
cs
lret
adc
cs
add
cwtl
push
mov
mov
mov
mov
dec
mov
addl
andl
cmp
testl
pop
lahf
xchg
sbb
mov
xor
shlb
loopne
adc
out
cld
mov
stos
out
push
add
inc
sbb
push
gs
addr16
push
cmp
xchg
push
mov
iret
lret
xchg
adc
jbe
std
mov
jmp
out
repnz
pop
scas
es
sub
add
incl
mov
pop
pop
or
inc
lods
mov
lods
xorl
xlat
movq
lods
fbld
ss
xor
and
or
push
or
data16
mov
jle
cltd
out
add
aas
cmpsb
aas
scas
iret
popf
mov
dec
mov
cmp
loopne
popf
ficomps
sbb
repnz
loope
cs
leave
dec
pop
out
in
rcr
imul
in
mov
cmpsb
cmp
jge
xchg
out
add
or
dec
jmp
jnp
jns
mov
outsb
lret
clc
in
fcmovbe
push
mov
add
hlt
mov
jno
push
xlat
adc
pop
negb
std
lods
jecxz
aas
pop
and
mov
mov
adcl
jo
cmp
push
nop
scas
dec
and
mov
sub
pop
mov
pop
rol
jle
rclb
mov
xchg
push
mov
movsb
pop
test
in
nop
mov
push
pop
bound
add
mov
lret
jo
and
cmp
cltd
outsb
sub
adc
loop
mov
jnp
ficompl
xor
fucomip
sti
push
xchg
and
jle
fs
pop
ljmp
sub
into
xlat
add
pop
andb
rorb
mull
pop
push
cmpsb
sub
or
ret
es
mov
pushf
or
jb
cmp
jae
daa
nop
sub
jp
jns
xchg
add
push
aaa
rcrb
and
adc
cmp
mov
fstpt
mov
or
jbe
out
xchg
and
iret
pop
add
sub
outsb
jnp
repnz
xor
fidivl
scas
daa
mov
cli
mov
jnp
inc
mov
out
lock
or
sbb
xor
push
pop
out
lds
jb
add
and
outsb
xchg
add
lock
subb
add
sahf
pop
insb
lret
pop
mov
and
out
push
cwtl
and
stc
cli
adc
das
xor
and
jbe
lahf
imul
outsb
cli
dec
adc
cmp
imul
fcmovbe
aad
pop
jmp
sub
je
in
call
dec
pop
xchg
jo
jg
mov
xor
leave
out
mov
mov
mov
test
mov
mov
adc
aad
add
inc
sub
fstl
in
and
mov
or
pop
fsubl
out
mov
das
imul
aad
cmpsl
lret
xor
test
dec
mov
xor
cmpsb
out
leave
push
in
push
aam
gs
jmp
outsl
adc
in
push
fs
clc
mov
mov
pcmpeqw
and
ljmp
movsl
in
leave
mov
mov
orl
daa
and
mov
cmpb
inc
mov
cmpsb
test
pop
lret
mov
xchg
outsb
aaa
sub
pop
sub
xor
or
imul
mov
and
movsb
push
es
jp
lret
out
stos
test
or
fwait
rcll
daa
mov
fst
aam
mov
push
inc
test
xor
pop
add
popa
inc
mov
mov
mov
and
lea
sub
pusha
cmp
in
in
sub
mov
mov
jb
test
xchg
pop
cmp
xchg
fwait
push
in
out
loopne
popa
aaa
test
addb
jle
je
adc
outsb
mov
je
push
dec
cmp
or
bound
aad
jnp
adc
sbb
dec
stos
push
loop
or
cmp
addr16
add
lods
ljmp
out
inc
aaa
jl
out
fsts
adc
cld
fistpll
jle
inc
add
push
fwait
rcl
add
into
data16
stc
pop
cltd
ljmp
jnp
sti
sub
std
bound
fucomi
into
push
insl
mov
and
sub
mov
data16
cli
aas
int
in
aas
sub
sub
stc
rorl
inc
mov
enter
xchg
pop
sbb
cmp
mov
mov
jecxz
and
pop
cmp
mov
and
sti
jg
adc
lcall
xchg
xchg
and
loopne
aam
or
sbb
mov
jae
jns
mov
xchg
shlb
flds
lcall
or
mov
jecxz
pop
push
movsb
mov
loopne
sti
sbb
fs
and
mov
test
aad
test
push
mov
xchg
iret
loopne
push
mov
scas
push
loop
add
neg
xor
jl
cmp
jae
dec
outsl
ss
mov
or
lcall
ud2
push
int3
and
scas
ja
dec
hlt
pop
outsl
dec
lret
nop
insb
enter
cmp
daa
pusha
push
add
and
mov
jecxz
mov
adc
xor
xchg
stos
std
dec
divl
aas
imul
adc
int
inc
loop
or
jbe
push
ret
xchg
js
push
out
sbb
push
gs
adc
push
xchg
mov
mov
icebp
xchg
rol
jb
push
cs
add
lods
inc
jmp
inc
mov
mov
mov
mov
dec
movsb
lahf
out
pop
out
in
xchg
pop
add
or
mov
out
pop
sub
lods
mov
lahf
jnp
mov
pop
jno
push
dec
in
mov
int3
and
icebp
or
cmc
jmp
sub
jp
fdivs
popa
sahf
mov
pop
fstl
test
push
test
push
scas
xchg
ss
lds
xor
rcrl
pop
inc
scas
xor
lds
out
lahf
xchg
in
mov
aaa
sub
sahf
dec
mov
out
mov
stos
mov
shr
mov
scas
xor
cmp
pop
ss
add
lds
xor
cwtl
pop
adc
divl
imul
loop
mov
cmp
arpl
add
add
sti
lds
push
xor
test
shl
and
push
ds
cmp
jne
pop
inc
adc
mov
ds
mov
mov
rcr
repnz
cmp
fdiv
cmp
std
mov
dec
xchg
fildl
and
loope
lahf
push
adc
dec
ss
jno
adc
or
inc
sar
mov
jb
pop
std
mov
imul
in
push
xor
hlt
xchg
pop
dec
icebp
inc
xor
xchg
je
and
mov
repnz
cwtl
pop
fldt
push
sbb
jae
adc
cmp
out
push
leave
pop
pand
pop
das
mov
inc
repnz
mov
or
cmp
aas
and
pop
stos
mov
inc
pop
popf
pop
out
xchg
mov
lret
add
push
mov
stc
sbb
lods
mov
push
jle
inc
jo
in
mov
clc
mov
movsl
jle
mov
cli
dec
push
mov
dec
bound
insb
jbe
icebp
das
sbb
dec
sbb
repz
mov
adc
dec
xchg
lds
push
inc
sbb
stc
mov
xchg
mov
mov
jno
cmpsl
push
add
adc
call
movsb
adc
mov
out
mov
and
popf
xor
mov
mov
pop
pop
xor
push
mov
sub
into
outsb
pop
sbb
and
idivl
sbb
je
inc
sar
popa
mov
mov
push
xorb
mov
pop
cltd
ret
popfw
sbb
mov
test
dec
loop
cmp
add
bound
in
lahf
xor
scas
cmp
pop
mov
xor
cmp
call
adc
aam
popf
mov
jns
xor
add
inc
mov
cmp
loopne
mov
popa
dec
mov
sub
sbbl
les
scas
push
mov
sub
xchg
dec
jne
or
mov
shll
cmp
pushl
jg
in
neg
test
outsl
sub
dec
mov
cli
jbe
jge
cmpsl
dec
jbe
cld
ja
or
lods
cmc
pop
movsl
push
scas
lret
or
cld
inc
add
xor
jb
jne
out
cmpl
push
xor
jle
xchg
insb
popw
mov
cmpb
loope
jnp
in
lcall
cmp
dec
pop
mov
dec
sti
add
out
and
es
or
cmp
xchg
jno
fwait
mov
mov
outsb
lea
jno
xlat
dec
out
jl
push
lods
xorb
adc
dec
push
push
sub
aaa
push
nop
fwait
sub
idivl
mov
mov
shlb
fwait
test
lea
rcrl
fdivs
std
ret
mov
insl
rcrb
repnz
jmp
hlt
ret
ds
lods
mov
xor
inc
cmp
icebp
sti
mov
push
movsl
ja
add
xchg
mov
inc
cmp
mov
in
rorb
sti
rolb
hlt
cli
ret
fisttpll
push
insb
outsb
cmp
out
mov
dec
cmpsb
inc
mov
dec
push
fadds
sbb
xchg
push
out
pop
sbb
scas
jg
cmp
jns
stos
sbb
dec
xchg
lods
push
push
cmpsb
fistpll
mov
into
sub
or
jns
stc
add
icebp
imul
test
dec
cmc
jmp
or
push
jbe
inc
jno
sbb
cmc
mov
mov
xor
mov
or
in
ror
lret
pop
jmp
mov
sbbb
jo
add
mov
lahf
out
push
inc
xor
cmp
lret
xor
dec
ja
adc
mov
sti
movsl
inc
or
test
mov
pop
out
insl
sarl
jo
xchg
mov
fbld
xchg
jmp
inc
jp
pushf
out
cmpsb
pop
clc
subb
or
cmp
cmc
dec
out
test
rcrl
or
shl
lods
mov
test
out
nop
dec
stos
fidivrs
cmp
ja
fwait
lret
pop
jmp
mov
mov
int3
in
jnp
in
jl
lcall
aas
ret
sub
mov
out
insl
jno
mov
sbb
cmp
mov
pop
jge
mov
sub
repz
sub
ds
xlat
sub
cmp
or
lock
and
jge
jmp
nop
ret
add
push
test
pop
cmp
imul
mov
jecxz
adc
pushl
inc
hlt
jb
fcmove
sub
or
andb
out
pop
ds
xchg
movsl
sub
into
ret
jecxz
mov
outsl
sbb
mov
lcall
fdivl
dec
jle
testb
std
jae
mov
jne
fs
mov
xchg
mov
movsl
stc
inc
enter
int
les
int
adc
and
inc
ss
fdivrs
cmp
mov
movsw
lods
dec
pop
and
sub
sub
mov
lcall
jne
jle
push
pop
or
js
mov
pop
fildl
aam
pop
movsb
mulb
out
repz
cmp
inc
pop
pop
into
fisttps
push
in
pop
mov
jg
out
adc
sahf
mov
cmc
add
inc
dec
pop
rorb
lcall
add
lea
xchg
jnp
jp
mov
adc
imul
jnp
jp
and
pop
ror
js
cli
ret
mov
pop
dec
popf
hlt
jmp
and
sub
int
xchg
cmp
push
mov
dec
mov
jmp
pop
inc
int
in
insb
pop
inc
pop
xor
cmpsb
cmp
cmpsb
ret
mov
xlat
xchg
ffreep
aaa
pop
idivb
enter
add
test
pop
into
fwait
mov
add
sub
xchg
fs
lret
scas
nop
add
popa
movsl
dec
std
dec
mov
add
daa
pop
cmp
leave
gs
lret
sub
mov
add
sbb
fwait
sbb
lret
and
fprem1
cmpsl
ret
int3
loope
es
je
lods
pop
into
inc
lcall
jne
xor
or
xchg
stos
cmp
fld
push
xor
jbe
inc
dec
fcomp
jmp
and
repnz
mov
xchg
fs
pop
lret
outsb
mov
jno
xor
call
addr16
cmp
gs
in
or
shll
je
int3
jg
loopne
out
pop
adc
xchg
in
int
or
test
ja
jle
int3
idivl
mov
push
push
in
js
out
dec
push
mov
test
fwait
mov
pop
aam
insb
pushf
addr16
lret
jo
jecxz
mov
jecxz
daa
aad
leave
and
mov
incb
mov
sbb
and
inc
jg
ja
and
mov
cmp
mov
rcr
cmp
lcall
shlb
xchg
mov
or
lds
push
outsb
mov
mov
ret
in
mov
dec
js
fdivl
js
push
cmp
repnz
mov
cltd
xor
cmc
jo
dec
into
push
adc
mov
xchg
jbe
mov
cmp
push
aad
cmpsl
xchg
idivb
aaa
inc
pusha
and
in
out
push
cli
mov
scas
pop
mov
sbbb
add
loopne
and
ret
call
stc
in
cmp
xchg
sbb
pop
cld
or
xlat
sbb
ds
aas
stos
inc
xchg
dec
into
int
add
mov
scas
cs
jg
push
pop
and
inc
mov
ret
cmp
sti
inc
test
sbb
or
xor
lret
mov
pop
xlat
push
and
jmp
jne
std
inc
inc
add
adc
sarl
dec
jne
cltd
mov
or
xor
pop
pop
scas
loopne
std
lea
or
or
lcall
mov
lock
fistpl
popa
jnp
ret
stos
daa
xchg
mov
and
sub
or
rcl
out
cmpb
stc
lret
jb
adc
sbb
dec
inc
cltd
jle
daa
push
or
or
pop
sbb
xor
cmp
pop
cltd
adc
jle
mov
pop
dec
mov
js
xor
xchg
pop
cmpsl
sarl
cmp
mov
out
cmp
cmpsl
mov
xchg
imul
dec
add
jbe
ret
jae
rcrb
cmpsb
fwait
test
lahf
aam
pop
cs
mov
pusha
lret
pop
push
push
rcrb
add
push
inc
cmc
fiadds
std
scas
push
mov
out
aaa
push
loop
jge
push
mov
rorl
push
dec
mov
fimuls
les
test
js
fs
and
je
mov
push
jmp
and
scas
es
es
rorb
jmp
sbb
or
in
push
xor
mov
imul
jae
rorb
gs
mov
push
inc
jmp
xor
movsl
or
lds
mov
pop
inc
pop
shl
outsl
inc
ret
sub
mov
sbb
mov
adc
gs
jbe
and
movsb
lds
sbbl
cmp
daa
fisubrs
dec
push
cwtl
test
cmpsl
and
shll
or
in
mov
mov
lcall
mov
call
inc
inc
lcall
adc
dec
pop
hlt
insl
jns
add
cmp
sub
xor
dec
mov
addr16
inc
mov
mov
pop
mov
lods
add
inc
pop
cmpsl
nop
in
icebp
test
xchg
cmc
sbb
dec
iret
outsb
or
adc
jno
xor
jg
push
mov
roll
xchg
mov
aas
fldpi
fdivp
imul
mov
outsb
stc
aaa
and
adc
mov
xor
mov
cmp
sub
jns
jns
hlt
testb
insb
push
iret
and
sub
dec
rcll
decl
movsb
popf
lock
ja
daa
scas
xor
loope
mov
mov
inc
inc
mov
push
or
imul
out
loopne
adc
in
andb
mov
mov
push
mov
lds
ds
jmp
sbb
popa
fcmove
cmp
daa
sub
jns
sbb
push
mul
mov
mov
out
into
dec
mov
cld
fstps
call
mov
arpl
inc
test
out
jmp
ljmp
cmp
notl
and
mov
fisttpl
xor
inc
jle
pop
gs
cwtl
cmp
mov
les
out
addr16
lcall
pusha
push
ljmp
outsl
dec
adc
mov
pop
insl
cmpsl
fadds
jmp
int3
jmp
sub
lock
ljmp
dec
sti
aam
in
xor
js
push
das
sbb
or
enter
stc
mov
pavgb
sub
mov
xor
insl
sub
inc
loope
movsl
add
cmp
fs
ret
cmp
adc
rclb
push
out
out
xchg
ss
mov
imul
sub
aam
push
test
add
es
icebp
sub
andb
test
lahf
ljmp
scas
jne
pop
les
inc
or
movsb
and
inc
enter
cli
push
mov
mov
fs
lock
ljmp
fisttps
jne
mov
rcrb
mov
jbe
xchg
mov
cmp
mov
cmpsl
push
insl
or
sbb
xchg
cmp
pushf
jns
dec
into
imul
dec
mov
pop
mull
cld
push
clc
xchg
lock
enter
movsb
rcll
adc
cld
mov
adc
pop
filds
push
or
dec
push
xchg
and
imull
fisttpl
cli
xor
cmpsl
gs
ds
xor
jae
pusha
int
mov
mov
and
test
adc
jnp
je
fdiv
mov
jnp
push
jecxz
repnz
dec
stos
xor
jno
cltd
xchg
mov
pop
cmove
out
mov
xor
iret
imul
addr16
pop
popa
stos
add
and
add
mov
in
jl
mov
or
paddsw
mov
out
std
push
lock
out
ljmp
pop
adc
jnp
test
cmpl
popf
imul
sbb
lock
sbb
rcrl
sbb
lcall
adc
inc
outsb
sbb
popf
adc
mov
pop
neg
sbb
sub
xchg
lods
mov
daa
lcall
xchg
add
mov
adc
and
add
int3
out
add
fsqrt
in
xchg
sbb
sub
inc
lods
pop
out
adc
xlat
lds
xchg
mov
mov
shr
push
jp
cmp
xor
mov
movsb
jo
sub
dec
std
push
jg
in
mov
popa
adc
push
mov
sti
xor
add
mov
pop
inc
fisubrs
cmp
sbb
or
add
sbb
push
enter
jbe
rclb
push
dec
push
fdivr
sub
fisttpll
jns
dec
in
sub
loopne
xchg
in
xor
dec
call
adc
fwait
loopne
dec
sub
xor
sti
pop
outsb
sbb
out
mov
pop
in
ljmp
fnstcw
or
mov
or
mov
dec
cwtl
icebp
test
gs
test
aad
xchg
jmp
xchg
and
add
sbb
cmp
ret
out
pop
out
js
test
out
or
pop
pop
cs
hlt
inc
repz
push
xchg
dec
jg
push
outsl
push
or
add
inc
dec
enter
jae
cmp
cmp
mov
push
dec
mov
cmp
lahf
fldenv
pop
pop
dec
jne
les
repz
int3
std
xchg
call
stc
lea
sbbl
mov
ja
out
sub
pop
mov
arpl
cld
addr16
xor
or
pop
rcrl
sub
ja
divl
xchg
xchg
xchg
lds
int3
jo
nop
outsb
or
lods
jp
bound
inc
fldenv
push
cmpsl
xchg
rcrl
mov
pop
inc
sbb
push
in
leave
test
daa
sub
aas
repz
pop
rorl
pop
pop
gs
and
lret
push
mov
jecxz
dec
sti
adc
dec
mov
mov
mov
sbb
bound
movsl
dec
sbb
cs
cmpsb
loopne
xchg
sub
test
arpl
stos
xor
mov
imul
cmp
ret
mov
mov
mov
addr16
dec
clc
push
test
jp
pop
pop
sti
mov
test
mov
imul
sahf
pusha
adc
mov
rorb
out
call
fidivrs
inc
jno
lcall
mov
fistpl
lods
jbe
popf
and
out
xor
cmp
mov
mov
icebp
dec
sahf
dec
push
rol
push
scas
add
cltd
into
ss
je
cmp
lods
jle
fnsave
fldt
lock
mov
xchg
ljmp
jne
imul
pop
stos
cs
das
jp,pn
mov
repz
in
xor
and
xchg
or
es
aas
inc
xchg
std
les
lock
dec
stos
sbb
outsb
test
in
jle
xchg
jmp
pop
scas
xor
push
roll
and
fimull
pop
mov
mov
sbbl
pusha
cmc
int
in
push
inc
jns
stc
loopne
jno
add
xchg
aad
xchg
xchg
mov
cmc
mov
sbb
and
fildl
aad
add
sub
pushf
out
ret
fimull
mov
xor
insb
mov
dec
mov
sub
hlt
add
mov
pop
or
mov
dec
outsb
sbb
daa
imulb
addr16
mov
aaa
pop
pop
push
int
push
inc
and
ss
icebp
gs
sbb
sub
mov
inc
push
xchg
enter
mov
ljmp
push
cmp
pushf
xor
icebp
mov
sbb
pop
push
fmul
hlt
push
test
aam
and
mov
mov
xor
jns
test
decb
outsb
mov
mov
cs
lea
cmp
adc
hlt
jl
mov
in
test
arpl
dec
les
and
add
add
and
inc
sti
outsb
inc
xor
pop
in
cmp
je
sub
xchg
and
cli
add
push
shlb
push
loop
movsb
pop
inc
fmull
adc
cmp
add
xchg
mov
ljmp
aaa
incl
and
mov
pop
mov
sbb
out
clc
push
imulb
and
pusha
cwtl
jo
xchg
scas
adcb
sub
pusha
mov
mov
mov
int3
sub
xchg
pop
cmp
pop
mov
jge
xor
jnp
or
jp
or
adc
lods
out
inc
pop
ja
jae
inc
stos
pop
or
adc
adc
mov
fiaddl
insl
push
aad
or
sub
xor
dec
push
iret
out
pop
fs
ret
mov
shlb
sbb
sub
pop
jg
addb
int3
xchg
jecxz
push
sub
inc
adc
in
add
sbb
icebp
mov
xchg
int3
and
std
dec
enter
mul
popa
add
sahf
xchg
mov
push
sbb
lret
sbb
fwait
outsb
sbb
int
or
aad
push
ja
cmp
cli
inc
ljmp
dec
add
and
xchg
mov
testl
xchg
loop
push
dec
adc
adc
mov
mov
hlt
sub
test
mov
sti
popa
mov
xor
push
sahf
mov
fbld
inc
in
mov
and
enter
jecxz
jno
cld
cmpsl
cltd
jle
pop
adc
mov
sbb
cwtl
mov
xchg
shrb
ljmp
pop
xlat
test
jle
add
popaw
sub
hlt
xchg
mov
std
nop
jle
jnp
outsb
jns
push
adc
js
cli
mov
jp
jecxz
insb
push
notl
cmp
push
fxch
sub
dec
out
and
jg
sbb
mov
mov
pextrw
and
pop
jecxz
xchg
ret
lock
outsb
outsl
jl
std
enter
outsb
mov
jbe
adc
push
add
andl
rclb
and
imul
adc
jecxz
call
lods
add
gs
cmpsl
pusha
out
mov
adc
mov
gs
fbstp
adc
out
testb
loopne
cmp
pop
inc
push
cmpl
pop
fnstsw
mov
cs
jno
scas
cmp
and
pop
andl
mov
or
fdivrp
pop
xchg
sub
jp
cmp
test
cmp
or
sbb
fbld
xchg
clc
mov
cmp
xchg
test
xchg
rorb
mov
stc
outsb
sarb
movsl
pop
inc
rclb
sub
fdivs
sub
lds
jmp
pop
mov
aaa
sub
xor
pop
and
mov
iret
mov
push
ja
test
add
ljmp
dec
dec
push
lea
or
add
fistpll
ret
out
scas
pushf
mov
mov
aad
in
jl
or
mov
sbb
stos
test
jae
out
cmp
xchg
adc
out
adc
shlb
adc
subb
jo
imul
sub
test
or
cwtl
int
sbb
mov
cmpsl
into
aas
subl
xchg
sbb
pop
mov
mov
xor
push
push
pop
lea
scas
dec
pop
lock
cmp
lds
cmpsl
or
aad
dec
push
out
out
les
lea
pop
cli
shrb
test
cmpsl
add
sub
push
mov
daa
jnp
ret
cmp
mov
mov
mov
mov
xchg
dec
xchg
mov
clc
cmpsb
aaa
hlt
call
popa
es
dec
mov
je
out
xchg
jmp
xchg
add
cmp
insb
dec
mov
sahf
pop
jae
jp
out
mov
jbe
lcall
stc
mov
mov
scas
mov
call
in
into
out
mov
mov
jmp
xor
outsl
xchg
mov
pop
call
rclb
mov
pop
shrl
out
sbb
imull
push
xchg
cmpsb
scas
xor
xor
inc
xor
lcall
cmp
out
ljmp
xor
push
xchg
outsl
push
or
push
shlb
inc
xor
mov
addl
or
in
fdivl
std
inc
pop
fndisi(8087
je
sub
adc
inc
std
and
xchg
add
xlat
sbb
pop
and
push
imul
das
clc
repz
xor
mov
cmp
inc
daa
test
mov
ss
insb
movsl
cmp
cmp
inc
mov
mov
or
xorl
mov
mov
and
sub
xlat
jno
pop
cmp
xor
lds
and
rcll
mov
test
decl
fstpt
pop
dec
scas
add
adc
ret
std
adc
xorl
pop
inc
push
lods
outsb
jmp
test
int3
sbb
add
daa
xchg
add
std
shll
test
enter
stc
jp
push
repnz
fldl
loop
aam
dec
ljmp
pop
xor
bound
rorb
ja
fistpl
int3
call
and
in
loop
imul
ret
cmp
sarb
ja
sub
dec
lret
fistps
jb
lods
icebp
or
or
jo
repnz
cmp
mov
into
in
push
lcall
sti
fildll
shlb
je
lods
mov
and
mov
shl
mov
stos
push
mov
pop
jmp
pop
icebp
cmpsl
xchg
hlt
popf
es
pop
fsubs
push
push
sbb
mov
dec
rclb
dec
imul
mov
shlb
mov
iret
test
call
mov
out
arpl
jne
mov
es
mov
jbe
mov
pop
adc
mov
cmp
inc
or
mov
cmp
xorb
jnp
and
outsl
stos
aam
bound
cs
call
iret
sbbl
mov
es
cld
nop
xor
jmp
push
or
shlb
lret
loop
mov
imul
push
scas
xchg
shlb
jbe
arpl
int
or
jo
fisubl
shlb
jmp
mov
stos
repnz
sarb
ficomps
addl
popa
adc
daa
pop
mov
fmuls
hlt
icebp
or
pop
push
in
sbb
jp
xorb
cltd
sar
aaa
call
int
mov
jne
jo
lods
gs
jmp
aaa
push
adc
push
aaa
add
fcmovnb
inc
jle
lcall
jno
mov
dec
or
ficomps
lods
into
lret
bnd
pop
mov
push
addl
test
jp
adc
jb
mov
gs
enter
jecxz
mov
imull
jns
dec
adc
mov
and
dec
ret
negl
cmc
in
cmp
mulps
sbb
je
out
nop
fnsave
add
fwait
ds
inc
mov
insl
fisubrl
mov
push
sbb
xor
pop
imul
inc
test
xchg
xchg
pop
jno
xor
dec
inc
aas
push
xlat
rorb
pop
xor
cmp
jg
cltd
mov
mov
insb
insb
sub
fwait
nop
push
xchg
outsb
adcb
dec
call
fidivrs
or
std
mov
mov
fmuls
addr16
sbb
push
outsb
pop
test
adc
jne
push
adc
mov
loop
inc
mov
adc
mov
stos
outsb
cs
xchg
mov
in
test
jg
enter
or
jbe
out
jg
fistps
test
ret
push
inc
push
insb
out
mov
push
push
pop
pop
adc
lods
sub
gs
push
xlat
jo
jo
outsl
push
psubusb
mov
ret
push
imul
mov
leave
dec
inc
test
stos
and
jne
fisttpl
popf
movsl
jge
repnz
in
out
fwait
std
mov
out
dec
movsl
inc
mov
cmp
loop
imul
mov
pop
mov
cmp
pop
sub
into
data16
bnd
dec
stos
cld
in
pusha
outsl
cmp
pop
mov
add
cmp
inc
or
subb
lret
and
das
call
and
sub
movups
push
subl
test
shrl
bound
mov
inc
or
jbe
mov
cli
pop
cmpsl
sbb
pop
xor
cmp
push
or
jg
adc
cltd
sub
imul
mov
sahf
inc
mov
sahf
adc
insb
cmp
mov
pop
insl
xor
cmp
dec
or
movsb
cld
inc
nop
in
imul
fsubl
sub
jle
imul
jno
jg
bound
mov
pop
lods
popa
mov
jo
scas
xchg
out
inc
faddl
dec
or
call
js
andb
fisttpll
pop
add
mov
mov
test
frstor
stos
xchg
xchg
xor
inc
mov
lcall
add
fsubl
sbb
xor
iret
xchg
rorb
or
data16
andb
sub
pushf
ljmp
lods
dec
lahf
push
idiv
cmp
leave
mov
nop
mov
or
cli
hlt
in
inc
mov
sub
xor
in
popa
push
xor
pop
ljmp
inc
inc
repz
out
ret
mov
das
add
xchg
shll
sub
cmp
out
mov
aas
pop
add
pop
dec
or
int
pop
dec
push
mov
xchg
mov
lret
leave
negl
push
or
shrl
xor
das
or
mov
adc
cmp
fwait
cwtl
lods
insb
ret
and
xchg
adc
xor
aam
cmp
sbb
cmp
jecxz
int3
shrb
xchg
mov
lock
in
or
stc
jb
mov
stc
repz
es
out
mov
bound
jmp
movsb
icebp
push
pop
or
lcall
dec
mov
je
xor
mov
adc
sbb
lock
pop
mov
ds
xor
daa
clc
loopne
outsl
and
xchg
jge
ret
fidivl
sub
dec
mov
add
xor
sbb
js
out
insl
aaa
add
sub
loop
adc
icebp
je
lds
sbb
ret
mov
dec
adc
cmp
lret
cmp
rorl
gs
mov
in
mov
mov
es
shlb
pop
iret
in
clc
jge
int
sbb
insb
shlb
dec
inc
jno
insl
shll
mov
add
into
dec
lods
xlat
sbb
insb
adc
add
das
jp
lahf
inc
mov
add
ja
dec
mov
into
or
dec
push
jbe
mov
push
jb
fwait
cs
cmpsl
sbb
rcrl
aam
ds
push
and
pop
out
bound
andb
clc
popa
sbb
in
cld
dec
popa
push
lods
insl
ljmp
addl
loop
rcll
fldl
mov
inc
jl
jl
add
mov
xchg
jecxz
subl
mov
ret
nop
jbe
loopne
pop
mov
lods
pop
roll
fists
pop
stos
sbb
jno
mov
movsb
es
in
arpl
mov
adcb
das
xchg
fildll
out
shl
cld
test
shll
and
pop
mov
mov
jb
rcll
sub
repz
addr16
sub
mov
sub
test
mov
adcb
sub
jmp
leave
arpl
mov
ficoml
add
push
adc
fiaddl
pop
xchg
sbb
jge
adc
dec
mov
ds
mov
out
std
imul
stos
pushf
or
jge
cwtl
dec
repnz
orl
dec
fwait
repz
mov
out
lods
push
out
enter
cmp
push
loope
adcb
xchg
and
in
adc
les
cmpb
cmpsb
das
ja
jo
pop
outsb
mov
cmpsb
add
and
leave
mov
fdivp
popf
cs
jp
scas
inc
cs
fmuls
sub
jnp
mov
mov
jae
xchg
leave
divl
stc
add
dec
cmpsl
rsm
loopne
adc
sbb
repnz
mov
into
ret
jnp
aad
into
dec
cmp
sub
inc
pushf
rolb
iret
dec
lcall
sub
insb
dec
sbb
inc
shrl
in
cltd
cmp
jmp
pop
xchg
std
push
jo
in
jp
sub
pop
into
sahf
andb
cmpsl
mov
arpl
pop
ds
das
dec
sub
and
push
mov
lods
cmpl
xchg
jne
mov
pop
aad
sub
push
fwait
cmpl
pushf
jno
mov
scas
sahf
mov
outsl
jge
inc
lret
pushf
cmp
jmp
jb
mov
arpl
jne
push
outsb
in
lea
add
loopne
jecxz
sub
adc
movsl
fcompl
insb
pop
jbe
outsl
sub
frstor
mov
movsl
cmp
or
add
push
inc
fnstsw
inc
push
std
mov
sbb
pop
dec
jbe
mov
in
add
fwait
push
jl
scas
dec
enter
fadd
mov
inc
hlt
xchg
aad
movsl
inc
push
test
dec
out
outsl
jl
leave
outsb
fisttps
scas
fucomip
pop
push
das
ljmp
pop
loopne
dec
sbbl
pop
addb
sahf
out
sbb
in
xor
int3
cli
push
mov
cmc
sub
mov
push
inc
lcall
push
lods
cld
sbb
lret
push
cmp
sbb
test
in
sbb
dec
jecxz
mov
push
xchg
popf
adc
xchg
sarl
pop
inc
pop
pop
cmpsb
outsb
mov
mov
int3
je
cld
adc
ljmp
jbe
lea
movsl
test
sub
and
xor
std
jp
stos
popa
mov
push
in
dec
call
in
cwtl
push
fnstsw
sti
jno
add
negl
dec
aas
movsb
sti
mov
mov
lret
stos
mov
jp
sbbl
fwait
leave
imul
xlat
push
in
cltd
pushf
and
inc
xchg
or
pop
cmpl
call
ljmp
push
fmulp
mov
pop
in
testb
aaa
mov
cmp
mov
add
popf
dec
jecxz
addr16
sub
inc
mov
and
and
adc
movsl
pushf
sbb
xor
fldln2
addr16
loop
cltd
bound
mov
mov
push
std
inc
ror
jl
xor
fnsetpm(287
xchg
xchg
push
arpl
adc
mov
or
mov
repnz
pop
pop
imul
jno
das
cmpl
fnstenv
stc
jecxz
and
pop
out
push
repz
push
js
cmp
outsl
call
xor
inc
adc
push
or
imul
inc
lods
mov
repz
xor
in
sti
inc
test
mov
sbb
push
fs
jnp
adc
xchg
repz
les
mov
dec
ficompl
xchg
sbb
cmp
jle
inc
sbb
mov
and
push
adc
lds
shlb
loop
in
lds
and
fwait
je
ret
or
xor
xchg
div
mov
jp
fistps
addr16
imul
xor
out
xor
xchg
in
mov
fists
cmp
or
nop
fmuls
sub
push
fs
and
movsl
ret
mov
bswap
gs
loope
push
jnp
das
xchg
ret
mov
out
or
push
cmp
or
js
cmp
aad
ret
test
mov
fstpt
jle
int3
push
out
std
mov
mov
jmp
mov
sub
stos
xor
shr
subl
mov
popf
clc
add
fildl
or
jae
repz
inc
cmp
lods
sbb
popa
leave
xor
xorl
fists
xrelease
pushl
test
jne
leave
dec
mov
sub
popa
stc
push
movsb
dec
lahf
inc
xor
mov
inc
xchg
mov
jp
xor
mov
dec
into
and
loop
xlat
sbb
push
adc
scas
xor
popa
inc
or
pop
and
das
sub
xchg
rclb
scas
xlat
mov
jp
add
push
add
inc
rorl
xchg
out
and
jbe
inc
loop
add
inc
gs
enter
lock
jle
ljmp
and
xlat
fisttpll
popf
pop
mov
dec
roll
sub
imul
pop
les
push
cmp
mov
fwait
aaa
leave
dec
sub
cmp
push
scas
cmpsl
cmc
enter
add
inc
int3
push
pop
lret
mov
adc
or
mov
test
xchg
pop
fs
or
dec
je
jmp
push
inc
adc
daa
xorl
mov
cltd
mov
or
jnp
push
cmp
dec
cmp
sti
or
jmp
adc
int3
jmp
test
or
dec
mov
xchg
jbe
sar
aam
xor
inc
sub
mov
sub
dec
loopne
call
fiaddl
aad
arpl
fdivl
fadds
and
sbb
arpl
in
ud1
imul
outsb
sub
xor
das
jbe
xchg
test
add
aaa
push
repz
lock
scas
inc
inc
xlat
pop
pop
adc
push
aas
mov
mov
mov
nop
scas
xor
dec
subl
xor
mov
loopne
addr16
outsb
pop
shrl
test
shr
push
push
and
fld
scas
cmp
jnp
ret
or
mov
pop
insl
hlt
xchg
pop
ljmp
es
pop
hlt
aaa
add
in
adc
repz
lea
or
stos
push
icebp
mov
adc
mov
dec
sahf
cmp
into
mov
jae
js
test
jns
movsl
cmp
ret
mulb
jecxz
hlt
adc
mov
cmc
xor
sub
jb
or
mov
dec
push
stc
mov
push
cmp
aad
adc
cltd
ss
bound
jno
lret
les
xor
out
xor
and
mov
ds
cmp
fiaddl
jno
cmp
out
or
nopl
adc
pusha
jecxz
icebp
or
mov
sbb
roll
addr16
aam
cmp
out
xchg
mov
ret
repz
pop
jmp
pop
push
test
push
frstor
xchg
ja
pusha
dec
xor
out
dec
inc
pop
pop
cmp
stos
dec
inc
pusha
imul
xor
or
xor
cmp
out
mov
nop
xchg
outsl
fadd
imul
inc
aas
mov
mov
jbe
imul
mov
xlat
and
dec
hlt
mov
lret
arpl
dec
gs
bound
scas
xchg
and
sub
shlb
aaa
add
jne
add
pop
sbb
ljmp
mov
adcl
out
outsb
repnz
mov
cmovo
mov
mov
inc
add
sarl
and
xchg
data16
dec
loope
stos
xorl
popf
ljmp
xor
insb
stc
inc
mov
sbbl
push
scas
add
mov
and
jno
cmc
gs
movb
sub
sbb
xchg
dec
pop
sub
add
mov
xchg
mov
mov
gs
fs
test
insl
xchg
or
push
pop
fwait
rcrl
push
sbb
push
pop
pop
xlat
das
enter
shlb
or
jo
and
loope
repz
dec
sub
pop
push
rol
sbb
and
into
jno
mov
mov
jo
or
jmp
dec
or
jbe
clc
and
jno
jno
pop
jg
and
cmp
jne
jg
into
leave
iret
out
aas
dec
icebp
add
jecxz
outsl
mov
lea
push
nop
test
mov
addr16
bound
sub
sahf
ljmp
ljmp
test
fsubrl
mov
push
xlat
xchg
adc
ss
add
sub
outsl
dec
xchg
xchg
pop
sub
push
mov
jne
ret
adc
idiv
je
fdivl
dec
addr16
push
les
sbb
stos
pop
mov
or
cli
out
dec
add
mov
push
xchg
ja
push
adc
cmc
sbb
cli
ret
or
push
nop
cld
les
or
out
cmpsl
dec
cmpsb
mov
stos
xor
test
shl
mov
mov
mov
data16
cli
pop
jbe
add
roll
repz
and
adc
sub
in
push
sbb
mov
pop
jb
movsb
out
sahf
fs
push
inc
xor
push
push
aam
xor
cmpsb
mov
fsubr
rcll
loope
and
sbb
push
in
inc
dec
jns,pn
outsb
adc
adc
xchg
bound
xor
mov
jns
cmc
xor
aas
ljmp
scas
cwtl
ss
push
jb
out
sbb
inc
pop
adcb
movsl
cmp
fnstcw
push
pop
lods
rolb
mov
sub
fadds
xlat
push
cwtl
or
xor
dec
stos
ret
jecxz
adc
push
aaa
xor
inc
sbb
mov
xchg
ficompl
and
das
jo
lahf
dec
xchg
mov
loope
add
mov
idivb
dec
xchg
push
test
adc
fildl
inc
add
dec
push
fbld
test
mov
and
lods
mov
pushf
enter
mull
mov
lods
les
jne
sbb
mov
ljmp
out
cltd
and
stos
fwait
in
dec
push
idivb
push
pop
mov
sub
shlb
cs
cmp
lods
and
inc
outsb
sahf
add
pop
mov
nop
test
sub
cwtl
bound
xor
push
add
pusha
popf
push
rcrl
sbb
inc
sbb
and
lods
sub
fs
push
push
mov
fsts
fmuls
hlt
insl
jle
outsb
in
jb
mov
dec
adc
rcrb
push
pop
adc
repnz
cmp
out
jecxz
ret
push
mov
jle
out
add
enter
or
ljmp
pop
fmuls
fnstenv
pop
jns
adc
cmp
insl
pop
sti
inc
xchg
sar
mov
shlb
lret
shll
adc
mov
fcoml
mov
xor
mov
ret
jne
xchg
jmp
lretw
pop
cli
jno
jno
pop
jo
mov
jle
adc
add
add
inc
xor
sub
xor
and
ret
xchg
mov
adc
addr16
pop
adc
fsts
loope
imul
mov
repz
sbb
into
andl
sarb
repz
mov
fadds
imul
push
clc
xlat
repz
lret
mov
in
dec
ja
jecxz
andb
fstl
and
mov
fbld
lret
mov
inc
mov
mov
dec
push
push
cwtl
mov
aad
testb
test
aaa
cmpsl
mov
mov
or
popf
mov
sbb
enter
adc
subl
pop
movsb
out
stos
les
mov
jge
notb
add
mov
divb
lea
out
mov
sbb
xor
movsl
aas
jle
sub
frstor
adc
out
and
pop
lret
push
pop
enter
cmp
xor
lea
mov
out
or
add
pop
mov
jp
sub
lcall
inc
add
mov
push
dec
xchg
mov
adc
mov
add
jo
call
mov
mov
jecxz
pop
mov
dec
or
and
inc
and
cwtl
pop
das
xor
sbb
jbe
dec
shll
arpl
lods
xor
xchg
cmpsb
outsl
mov
shrb
xchg
pushw
dec
dec
xor
cltd
lds
loop
mov
mov
xchg
insb
out
aad
outsl
test
ds
stos
add
lret
jmp
out
mov
loopne
repz
push
xor
ficompl
test
cli
pop
movsb
mov
arpl
int
mov
sub
and
pop
jno
fbstp
dec
mov
dec
cld
es
and
sub
repz
imul
cld
cmp
es
pushf
xor
cmp
xchg
hlt
xor
daa
mov
mov
gs
call
test
in
cmpsb
aad
lods
jns
outsb
popf
or
lods
inc
scas
dec
test
sub
lds
mov
inc
aas
push
xlat
push
loopne
cmc
lahf
xchg
mov
ljmp
mov
fldcw
test
mov
lea
arpl
pop
scas
adc
or
sub
pop
shll
push
inc
loopne
add
adc
test
lock
popa
sub
sbb
fcmove
mov
out
push
mov
out
cmp
jp
dec
dec
mov
and
sbb
aaa
outsb
xorb
faddl
sub
lcall
mov
and
jmp
bound
imul
mov
mov
leave
insb
and
mov
sbb
bndstx
mov
shl
or
stos
or
mov
dec
mov
xor
filds
test
xor
in
push
shrl
cmp
imul
negl
mov
ss
mov
lods
cs
jae
popf
ds
and
rcrb
xorb
int
fwait
or
xchg
or
sbb
mov
xor
push
pop
es
adc
xor
pop
mov
push
hlt
mov
cmp
loope
cld
in
ljmp
mov
fadd
jmp
inc
adc
push
ret
sti
cld
mov
iret
pop
xor
cltd
imul
and
jbe
pop
cld
scas
fildll
mov
and
ss
lahf
or
jnp
pop
xchg
adc
mov
mov
mov
stos
in
push
adc
jne
jge
add
enter
cmp
int3
cmp
or
das
loopne
rcll
push
or
fnstenv
aad
cli
push
lcall
les
rolb
lahf
jp
mov
pop
scas
cld
mov
jp
mov
xor
jns
mov
sbb
pop
or
in
xchg
xchg
iret
push
pop
push
dec
jge
and
cmp
ljmp
mov
pushf
cli
test
push
pop
in
mov
fldt
lds
outsl
pop
xchg
ret
or
fs
mov
lahf
add
add
out
mov
fiaddl
and
jl
add
cmp
stc
add
test
test
xor
adc
popf
dec
in
add
xchg
pop
out
aam
pop
xor
shlb
jecxz
cmpsb
inc
ljmp
out
gs
test
out
cltd
xor
rorl
mov
lock
pop
test
add
cmpsb
in
xor
testb
jno
push
pop
cmp
push
mov
inc
leave
scas
inc
xchg
xor
stos
pop
mov
xor
xchg
dec
test
es
std
sbb
and
std
mov
xchg
mull
pop
jo
mov
ds
inc
cli
cmc
mov
repnz
es
push
inc
and
in
jl
add
movsl
sub
xor
les
stc
xchg
cltd
sahf
jae
int3
stos
cmp
ja
pop
sahf
jno
std
lds
lds
dec
addb
lcall
pop
mov
test
cmpsl
mov
inc
cwtl
sbb
negl
loope
nop
add
test
out
fistps
adc
mov
lds
inc
jmp
mov
adc
in
xchg
inc
bnd
lods
pop
inc
sub
push
sbb
out
mov
fnsave
pop
mov
adc
xchg
adc
cltd
xor
fstpl
fistl
jge
enter
or
jle
nop
dec
mov
jno
mov
enter
inc
sbb
add
cmp
lea
lret
lea
cmp
lea
or
es
outsl
aaa
push
pusha
jp
rorb
mul
andl
sub
cmpsl
lods
push
movsb
pop
mov
jmp
mov
mov
in
xor
pop
inc
popa
out
not
push
daa
add
pop
into
cwtl
dec
add
pop
loop
sbb
push
xchg
adc
pop
cmp
cwtl
fs
mov
jno
adc
sub
sub
jecxz
in
pop
test
shrb
lds
jle
repz
adc
push
mov
je
cli
or
or
xchg
adc
in
pop
iret
adc
mov
imul
cmp
repz
movsb
lock
dec
dec
mov
ds
mov
inc
add
sub
lea
and
jo
jp
inc
inc
sar
clc
fs
cmp
xchg
nop
adc
lret
into
jo
fisubrl
loopne
mov
mov
mov
fs
hlt
arpl
pusha
xchg
pop
mov
xchg
popa
jle
xchg
cli
push
xchg
out
fdivp
cwtl
jecxz
out
bnd
xor
mov
fisttpll
stc
xchg
inc
mov
icebp
dec
mov
mov
jg
cmpsb
ljmp
jae
aas
add
xchg
mov
rorb
aaa
arpl
lret
shrl
fs
int3
into
fiaddl
in
je
and
push
mov
xor
pop
push
pop
dec
jg
mov
cld
pop
cmc
insb
ret
test
pop
mov
mov
sbbb
add
mov
pop
out
dec
sub
cwtl
jnp
add
fistpll
push
gs
repnz
jp
es
pop
nop
cmp
pop
push
test
inc
and
daa
push
rcr
mulb
mov
lahf
cltd
test
imul
and
repnz
jnp
mov
aas
xlat
andl
mov
rol
fdivrs
insl
adc
push
andl
dec
and
inc
xchg
or
xchg
cmp
test
sbb
test
popa
in
mov
mov
lods
pminub
jae
xlat
mov
imulb
out
pop
fwait
stos
lahf
fiaddl
gs
idiv
lods
jge
icebp
sub
mov
and
or
and
and
dec
inc
pop
jb
js
into
movsb
dec
ret
movsb
dec
add
xor
pop
pop
hlt
cltd
fstpl
sbb
xor
pop
mov
pushf
xchg
push
jmp
or
dec
clc
lcall
pop
xchg
pop
incl
mov
or
push
cmpsl
mov
sahf
movsl
adc
mov
adc
stc
mov
test
aad
movsb
sub
les
out
inc
jmp
stos
cmp
ja
or
icebp
or
jmp
pop
movsl
loopne
xor
fsubrs
data16
xor
gs
xchg
pop
aaa
std
mov
mov
je
xor
mov
mov
or
or
iret
subl
mov
xlat
jns
out
call
xchg
jmp
call
xchg
test
jle
mov
adc
xchg
jl
cld
clc
mov
cmp
xchg
or
out
add
or
fistps
dec
cmp
mov
adc
pop
adc
test
neg
scas
sbbl
pop
js
ret
adc
push
adc
adc
lret
mov
frndint
ret
pop
inc
mov
fisubrs
inc
popa
ss
mov
sub
pop
and
jl
rcrb
rcl
test
and
pop
cmp
fsubl
aas
mov
mov
mull
stos
stos
pop
fwait
lods
mov
je
and
mov
dec
or
lods
dec
cmc
push
push
fwait
pop
xchg
adc
sub
outsl
push
int3
push
jp
mov
gs
cmp
cltd
mov
popa
lock
xchg
ss
mov
shll
movsl
or
push
pop
imul
dec
lods
mov
mov
and
sbb
jae
out
test
fdivl
jne
mov
scas
xor
mov
movsb
out
roll
clc
sub
xor
aam
mov
xlat
sub
lretw
in
mov
adc
cmp
adc
xchg
stos
das
jno
neg
jns
jl
xor
xchg
inc
std
pop
je
mov
ljmp
xor
int3
lds
jnp
push
hlt
or
jo
mov
out
dec
xor
or
mov
out
sbb
adc
adc
mov
rcrl
and
jns
push
cltd
aad
fisubrs
out
pop
push
jl
sbb
sbb
adc
data16
xor
pusha
push
mov
icebp
fists
adc
jle
pop
pop
pop
pop
inc
repz
mov
stos
pushf
xchg
les
insb
sub
dec
adc
pop
xchg
push
les
mov
xor
nop
cmpl
pusha
test
dec
pop
in
or
xlat
divl
sub
mov
push
addr16
sub
stos
sar
cltd
aaa
or
fdivs
scas
cmpsb
push
test
imul
inc
mov
lahf
jbe
fstl
popa
addl
lahf
frstor
adc
aam
xorb
icebp
das
xchg
js
outsb
xchg
inc
mov
mov
xchg
mov
lcall
pop
pop
sub
jnp
push
cmp
mov
mov
mov
sub
dec
sub
in
dec
mov
sub
das
repnz
scas
out
mov
pop
mov
jnp
pushf
clc
mov
pop
pop
pop
test
and
push
mov
js
std
lds
jb
xchg
push
and
add
fstps
sarl
jae
jae
call
or
pop
fcoml
push
sub
pop
les
bound
cmp
ficomps
lods
rorb
in
lock
pop
pop
inc
je
test
or
int
mov
aad
xor
repz
jbe
ja
jge
mov
fidivs
fidivrs
mov
imul
ud1
pop
loop
sbb
cmc
xchg
lret
lret
push
and
xchg
sahf
cmp
mov
jg
push
mov
xchg
cs
cli
cli
stos
fdivl
andl
aad
sub
sbbl
inc
repnz
in
and
cmpsb
or
faddp
mov
loopne
mov
data16
repnz
inc
cmc
jb
rorb
ret
test
or
icebp
mov
bound
imul
testb
add
adc
in
mov
dec
int3
shr
add
dec
or
movsl
aam
push
dec
jns
lock
dec
sbb
push
imul
pop
mov
xchg
cmp
scas
cld
mov
mov
jne
adc
stc
sbb
or
sub
mov
xchg
fwait
jg
inc
leave
xor
adc
lret
loopne
hlt
cld
daa
push
lret
rcll
call
xor
dec
pop
jecxz
push
xchg
stos
cli
aad
pushf
inc
lods
aas
int
xchg
testl
leave
fmuls
inc
lret
aaa
dec
dec
add
mov
push
scas
mov
loope
push
adcb
leave
mov
test
jnp
clc
in
out
mov
cmpsl
inc
lcall
pop
jno
jno
test
inc
leave
repnz
daa
add
push
pop
dec
and
xor
scas
in
sbb
shl
xor
xor
int3
outsb
pop
jnp
sbb
mov
xor
pop
xchg
rep
repz
fstl
jg
and
push
adc
xchg
mov
mulb
cmpsb
dec
jmp
dec
sbb
in
sarb
and
adc
inc
adc
mov
add
sub
xchg
mov
pusha
and
iret
pop
vxorps
addr16
out
int3
add
stos
cltd
xchg
lret
out
lret
adcl
mulb
mov
push
xor
fiaddl
cs
mov
mov
xlat
test
add
xor
lcall
hlt
repz
mov
repz
aaa
jp
or
mov
insb
jmp
cmp
loope
rolb
jl
enter
negb
sbb
ds
mov
xchg
dec
pusha
mov
pop
les
mov
scas
in
lahf
mov
and
lods
or
into
push
cmp
ss
stos
pop
and
sub
sub
mov
out
idivl
pop
cli
out
sbb
mov
sub
shl
je
push
mov
add
xor
fbld
stos
popa
imul
jmp
push
dec
aam
sub
xchg
pop
or
xchg
filds
xor
mov
sarb
mov
dec
sub
add
mov
push
mov
aaa
lods
fildll
test
cmp
subb
sub
push
stos
add
int
xor
aaa
push
xor
mov
nop
insl
xlat
scas
mov
xchg
mov
lock
inc
pushf
loop
lea
sti
fmul
add
pop
and
in
fldl
notl
sbb
adc
adc
int
fmull
sub
mov
sbb
pop
mov
ret
iret
lods
adc
icebp
mov
xor
dec
hlt
test
adc
fxch
fxch
mov
sahf
mov
sbb
mov
outsb
stos
jb
sub
push
sbb
arpl
adc
leave
ja
cmpsl
and
and
inc
test
or
repz
mov
lret
fnstsw
sub
int
loopne
jmp
call
psrad
addr16
andb
shr
add
insb
mov
mov
or
mov
mov
pop
cs
jae
or
fnstcw
adc
pop
xchg
data16
popa
mov
mov
mov
xor
jae
mov
jne
xchg
scas
js
ficoml
pop
dec
sti
aas
lcall
mov
sti
cmp
sub
fstpt
mov
movsb
xor
jae
ss
out
mov
mov
xor
sbb
cmc
add
mov
xchg
mov
insl
insb
fcmove
jo
cmp
aas
pushf
inc
ret
cmp
jge
mov
daa
fisubrl
and
lock
shll
rcll
mov
cs
xlat
cwtl
sbb
and
sbb
push
clc
cld
sub
push
arpl
outsb
xor
jne
fwait
aam
push
rorb
cmp
jo
aaa
popa
add
mov
nop
pop
and
out
pop
int
loop
push
adc
xchg
lret
cmpsl
push
fwait
or
push
xchg
loop
clc
jg
pop
gs
fst
sbb
jns
jnp
sbb
jmp
pushf
jp
add
imul
pop
fwait
sub
mov
push
mov
mov
jmp
out
cmp
clc
adc
cmpb
add
dec
clc
fldlg2
mov
test
mov
inc
and
mov
inc
shll
mov
lcall
in
sbb
lea
inc
pop
outsl
in
jnp
cwtl
in
and
insb
inc
xlat
push
add
mov
pop
xchg
jg
jmp
mov
add
push
test
fiadds
repz
icebp
push
dec
icebp
inc
pop
inc
fsubs
lods
push
jl
push
pusha
in
pop
cmp
push
xchg
int
add
popa
cld
xchg
bound
sub
xor
lods
pop
out
ffreep
cmpsb
imul
cwtl
xchg
mov
cwtl
iret
pop
sub
dec
iret
xchg
fstl
inc
add
aas
mov
out
or
jl
iret
mov
mov
adc
mov
sbb
mov
arpl
in
add
pop
pop
bound
cmc
inc
and
int3
sarb
cltd
push
mov
jne
dec
xchg
int
int
pop
daa
std
aaa
popa
out
sbb
push
je
or
enter
fistps
dec
mov
stos
int3
daa
inc
dec
ja
outsl
int
aam
mov
xchg
xchg
inc
loop
sbb
test
jne
pop
adc
fnstcw
push
pop
mov
int
js
add
add
inc
shrl
or
out
jns
jns
pop
mov
dec
mov
push
ret
mov
pop
cmpsb
movsl
sub
mov
jno
fst
jmp
mov
inc
cmpsl
lock
and
cmp
iret
xor
aas
inc
pop
mov
movq
int
cmpsl
xchg
add
out
mov
pop
and
jnp
je
jecxz
inc
test
cmpsb
mov
in
fistps
or
and
aas
pop
daa
jns
in
and
subl
daa
fimull
loopne
mov
jle
sub
test
mov
je
push
rcrb
and
lea
mov
scas
sub
popf
xlat
adc
xchg
mov
push
loopne
xchg
movsb
pop
add
jne
mov
ret
xchg
ret
loope
dec
sahf
and
arpl
mov
xor
push
dec
push
movsb
mov
clc
jno
jmp
lds
out
cs
ja
mov
xchg
stc
push
ja
scas
data16
pop
or
jmp
adcl
jge
jmp
into
das
cmp
cli
sub
rorb
lock
dec
call
cltd
mov
ds
mov
pop
scas
daa
push
mov
xchg
add
push
pusha
push
pop
xchg
hlt
iret
jb
xchg
call
sub
nop
es
inc
pop
mov
leave
ja
adc
and
push
lea
js
testb
pushf
stos
ljmp
rorb
test
aad
xor
push
pusha
xor
out
mov
clc
dec
loopne
mov
dec
xchg
scas
mov
fcompl
jmp
lret
sub
xchg
cmp
sub
lea
mov
cmp
ret
cmp
mov
enter
mov
test
jl
pop
pop
cmpsb
push
gs
insl
xor
nop
in
in
jp
xlat
xor
fldl
fisttps
lods
inc
stos
cmp
orb
fxch
mov
or
pop
popf
in
xor
mov
pop
insb
in
mov
fiadds
call
sbb
lods
imul
push
cmp
movsl
pushl
lds
sub
into
int3
pop
lahf
or
popf
cli
push
lods
pop
and
in
push
out
sbb
push
xchg
pop
int3
or
push
popa
aad
xchg
divb
pop
mov
jne
pop
je
clc
aam
in
jg
adc
aad
cld
dec
mov
mov
sub
ja
mov
xchg
repnz
mov
add
pushf
and
push
fldl
push
jns
les
ljmp
pop
jns
and
rcrb
int3
mov
or
push
fnop
xor
loope
rorl
adc
fisttpl
gs
cmpsl
inc
fdiv
sub
jbe
xchg
lds
out
in
pop
push
fnstcw
cmp
push
xchg
inc
mov
mov
ja
or
in
lahf
sub
aas
push
mov
icebp
or
js
popa
in
pushf
cmp
push
mov
fistps
jb
xchg
in
or
loop
dec
and
and
das
add
cmpsl
sbb
or
ja
scas
or
out
les
fsts
iret
stos
pop
dec
jg
or
stos
mov
xchg
sti
xchg
aam
cmp
mov
rclb
jmp
int3
push
inc
jbe
pop
pop
pop
adc
mov
mov
add
fidivl
scas
cltd
repnz
cmp
mov
mov
jmp
jmp
stos
add
push
imul
xor
shlb
pop
icebp
xchg
mov
sbb
repz
adc
pushf
sbb
ret
cmp
mov
arpl
testl
lea
dec
lods
dec
mov
out
or
in
fistl
rorb
sub
arpl
xlat
loope
jmp
sbb
hlt
pop
sbb
jmp
xchg
jmp
xchg
mov
inc
fcoms
lea
lahf
in
repz
jmp
test
sub
inc
pop
and
es
adc
push
sahf
mov
pusha
xchg
push
dec
pop
scas
sbb
pop
mov
mov
dec
cltd
call
jo
jp
orl
mov
gs
dec
xchg
xor
hlt
add
dec
sub
adc
ss
stos
pop
mov
adc
movsb
sahf
nop
daa
mov
pop
or
xchg
test
mov
repz
sti
fwait
pop
fdiv
fsubr
mov
adc
stos
mov
in
sbb
sbb
ss
xlat
xor
sub
std
call
stos
mov
les
push
xchg
mov
shrl
out
leave
aaa
xlat
jo
add
repnz
sub
shl
mov
test
sub
shl
js
mov
clc
push
ret
jmp
lods
jge
xchg
mov
jno
pop
into
sub
jecxz
ficompl
lret
pop
mov
repz
mov
and
stc
loopne
dec
or
mov
push
pop
add
or
cs
shll
sub
adc
cmp
imul
mov
aaa
icebp
lods
mov
push
add
jne
sub
mov
sbb
dec
outsb
push
push
push
pop
mov
lock
add
push
push
mov
adc
xchg
mov
in
mulb
xor
mov
in
sbb
out
push
pop
fs
add
js
add
pop
inc
pop
popf
sbb
dec
fdiv
or
mov
mov
cwtl
iret
inc
add
xor
adc
ret
sbb
sub
out
hlt
mov
mov
cmp
leave
mov
mov
outsl
loop
dec
cmc
jmp
cld
loopne
jg
and
mov
into
movl
jo
stos
lcall
sti
insb
push
popf
popa
stos
test
cltd
pop
mov
push
mov
movsl
stc
jmp
fistl
arpl
or
and
test
test
push
push
mov
ret
and
leave
xchg
loopne
sbb
pop
dec
lret
fidivs
daa
aad
mov
stos
pop
mov
shrb
push
dec
jge
push
aam
shrb
cmp
cmpsl
popa
in
les
jp
stos
notb
notb
adc
push
lock
adc
xchg
out
cld
call
push
mov
or
mov
or
out
ret
outsb
xchg
pop
mov
imul
sti
ljmp
jle
xchg
add
push
leave
ret
xchg
in
sbb
in
jo
pop
fistpl
jae
pop
adc
pop
iret
nop
fsubrl
jne
jbe
jmp
sbbb
lock
cmp
call
cmp
inc
imul
loope
and
adc
pop
dec
lods
or
scas
mov
ret
in
inc
jmp
std
sub
repz
inc
fwait
loope
jmp
jo
mov
movsl
rol
mov
cwtl
gs
pop
push
nop
pop
inc
mov
mov
iret
mov
or
mov
mov
testb
adc
or
daa
popf
mov
out
test
push
xchg
xchg
out
xchg
fisubl
jl
cmp
xchg
or
jnp
push
fists
call
or
mov
insl
xchg
mov
subb
sbb
mov
pop
popf
test
aaa
cld
cld
jbe
and
test
loope
mov
inc
rdmsr
adc
inc
insb
push
pushf
mov
dec
insb
std
adc
inc
out
xchg
popa
push
arpl
cmc
repz
dec
sbb
es
outsl
cwtl
mov
mov
inc
lea
popa
out
and
xchg
cmpsb
pop
mov
ja
mov
or
lea
cmpsb
ret
jge
pop
pop
fsubrs
imul
pusha
pusha
cltd
fisubs
push
sbb
addr16
jb
jb
cmp
lret
addb
or
pushf
xor
cmp
pop
out
int
and
mov
cmp
jae
push
pop
aam
jp
nop
iret
inc
mov
mov
push
sub
mov
imul
cmp
cld
jg
jb
ja
aad
sub
mov
aas
push
stos
sbb
pop
dec
xorb
cs
loopne
subl
lock
inc
call
loope,pt
inc
loope,pn
enter
mov
and
adc
cmpsl
andl
cld
push
xor
jo
cs
sub
push
inc
adc
scas
rclb
mov
xchg
sub
clc
popa
add
adc
mov
cmp
xchg
xchg
out
lds
pop
inc
aam
imul
mov
inc
das
fistpl
mov
notb
or
mov
rcl
adcb
test
mov
and
in
push
cmc
or
cmp
into
bound
pop
testl
xchg
inc
arpl
xor
cld
sub
ficoml
adc
inc
into
fistps
ficomps
cmc
fcoms
adc
mov
into
adc
jmp
pop
or
les
mov
mov
rclb
faddl
imul
xchg
mov
pop
or
cmp
xchg
push
mov
pop
inc
jno
jo
xor
icebp
in
mov
xchg
fimull
popf
dec
ljmp
in
out
xchg
pop
or
sbb
enter
addr16
repnz
popf
test
lds
jno
and
movsl
pop
test
notl
jb
outsl
cmp
pop
faddl
push
push
or
movb
inc
mov
jae
repnz
mov
and
jno
cmp
clc
loope,pt
les
fsubl
sbb
in
push
fildl
or
push
inc
jmp
inc
mov
pop
mov
mov
or
cmpsb
cmp
adc
imul
int3
ss
adc
jae
push
add
xchg
aas
es
inc
pop
stos
stos
jae
or
pushf
aaa
lods
push
jmp
out
insb
fprem1
dec
jg
movsl
and
lcall
jmp
mov
repz
push
lock
cmpsl
call
inc
popa
decl
ja
mov
push
cld
jno
iret
add
mov
arpl
push
imulb
test
xchg
cmpsl
mov
mov
imul
jmp
mov
push
pop
gs
out
mov
mov
fbstp
or
out
scas
adc
pushl
push
push
xor
mov
xlat
cmpsb
outsl
sahf
ret
mov
pushf
lret
rcll
scas
xchg
inc
inc
pop
or
lock
das
and
xchg
fidivs
mov
push
or
push
pop
lock
lods
add
jl
ret
cmpsl
xor
clc
mov
ficompl
mov
xchg
lods
movsb
sbb
aas
les
dec
ja
inc
push
and
xchg
push
je
ljmp
fldcw
add
jb
push
xchg
daa
orl
lahf
mov
push
mov
xchg
gs
push
dec
repz
fldenv
ja
xchg
lds
sbb
push
xchg
xor
push
xchg
and
sbb
fiaddl
rcrl
ror
push
pop
xchg
cwtl
mov
aas
xlat
dec
mov
dec
hlt
js
or
icebp
or
sbb
xchg
lock
std
cmp
adc
shll
sbb
pop
les
dec
repnz
push
imul
dec
adc
pop
dec
jmp
mov
insl
xchg
jns
cmp
xchg
push
pop
rorl
push
dec
pop
dec
cltd
and
fwait
cltd
xchg
ret
or
cld
je
mov
pop
mov
dec
adc
push
xlat
dec
out
inc
loop
ud0
xchg
mov
pop
ret
add
jb
lret
or
sub
push
fidivrs
dec
push
test
imul
pusha
push
push
lcall
out
out
fsubr
pop
test
cli
imul
test
jno
in
push
push
scas
lds
movsl
scas
mov
jmp
xor
icebp
xchg
incb
push
iret
jge
cmp
nop
ja
pop
dec
into
pop
jne
dec
sub
pop
add
inc
add
nop
arpl
aad
mov
mov
sub
xor
cmp
fwait
push
inc
xor
mov
mov
paddusb
pop
ljmp
stos
loope
sbbl
dec
xchg
xchg
loope
popf
fstp
cltd
bound
outsb
ret
add
stc
je
pop
pop
dec
jns
iret
mov
insl
decb
or
aaa
ja
xchg
mov
cltd
ret
test
dec
das
and
das
jl
nop
in
xor
shl
add
icebp
inc
cmpsb
add
imulb
movsl
aam
jecxz
lock
fistpl
loopne
into
cmc
ret
mov
xlat
fwait
xor
sahf
sub
jge
mov
pop
fnstsw
rol
add
test
ja
cmp
push
stc
and
pop
push
out
and
movsl
or
imul
or
fstl
pusha
orb
inc
xor
push
sbb
sbbl
hlt
popa
mov
push
mov
jmp
and
sahf
sub
and
or
cmp
aad
insb
pop
insb
into
jae
cmp
cmp
insl
or
sbb
hlt
js
and
sbbl
inc
incb
orb
shrl
loop
jb
cmp
fistps
xor
ficoml
mov
lock
sub
cmp
push
scas
popf
test
lds
pushf
mov
jae
js
sti
cltd
cltd
cwtl
cs
imul
cs
das
ja
or
sub
imul
cmp
aad
push
xlat
filds
inc
hlt
in
je
pop
andl
push
mov
mov
push
sub
ss
mov
mov
mov
xlat
lret
leave
sub
sub
dec
les
and
stos
push
push
addl
je
dec
leave
fiaddl
js
orb
pop
rcl
lods
fcoml
lods
xor
xchg
test
dec
adc
sbb
push
in
rcrl
dec
lret
test
jecxz
leave
lods
adc
lahf
pop
mov
pop
shl
dec
sub
ljmp
mulb
cwtl
int3
xor
push
sahf
and
push
out
pop
mov
hlt
mov
push
xor
cltd
aad
hlt
xchg
inc
and
adc
subl
sub
add
aas
test
dec
and
mov
mov
out
jg
insl
out
gs
or
sub
dec
mov
push
push
addr16
sti
add
jo
sub
pop
test
add
into
mov
and
pop
cmpsb
mov
scas
sub
addb
into
xchg
loopne
mov
and
cmp
sbb
xor
lret
pop
int
push
or
cmp
data16
shl
pop
mov
xor
push
jae
xchg
daa
ss
xchg
loope
loopne
sbbl
jle
cli
push
mov
mov
sti
imul
dec
dec
pusha
lds
mov
enter
fbld
cmp
push
in
jo
std
add
add
es
frstor
xor
push
out
lods
stc
jl
mov
push
or
mov
cs
inc
cwtl
test
jb
daa
pop
add
lahf
popa
aas
repnz
add
iret
shrl
add
sub
dec
out
test
sbb
fcomi
inc
mov
mov
cltd
xchg
cs
loope
xchg
cwtl
adc
repz
cmp
bound
or
rcrb
push
in
dec
mov
jecxz
test
aam
ds
xchg
add
push
dec
push
fs
outsl
and
sti
mov
fstpt
and
scas
add
cmpsb
xchg
leave
sub
ret
jle
mov
shl
mov
jbe
mov
xchg
aam
loop
cmp
cmp
push
or
dec
jno
insl
mov
cld
inc
cmp
call
pop
sahf
xor
jae
out
dec
push
fdivrl
inc
sarl
ss
idivl
das
ljmp
outsb
inc
dec
pusha
inc
std
rcl
andl
xor
insl
popa
push
sbbb
fucomip
add
dec
insb
fldcw
mov
fnstcw
adc
xchg
mov
add
pop
test
es
sti
lret
scas
clc
sbb
inc
push
jecxz
cmp
jle
stc
outsb
push
bound
dec
xchg
sub
sbb
int3
add
lahf
iret
inc
cmp
mov
test
and
jae
lods
xchg
insl
mov
inc
mov
xchg
dec
enter
enter
mov
aaa
fbld
cmp
ret
push
pusha
push
push
into
fcmovnb
sbb
rolb
mov
pop
leave
xchg
xor
jl
dec
xchg
das
ja
insl
dec
lds
insb
add
inc
ss
js
mov
xchg
into
push
divb
mov
sub
bound
jb
sub
mov
push
xor
loop
movsb
or
daa
shll
adc
xlat
inc
popa
movsl
lret
jb
jle
mov
jmp
sbb
cli
add
mov
clc
sub
dec
divl
add
push
mov
clc
xor
xchg
adc
test
mov
das
dec
jle
lcall
mov
lock
repz
add
dec
aaa
insl
sbb
fidivl
add
mov
sti
cmc
inc
iret
cmpsl
stos
sub
and
dec
and
pop
test
nop
push
pop
enter
sbb
fisubrl
pop
into
test
dec
xor
aad
out
xor
fdivrl
mov
jno
subb
sbb
sbb
push
jno
repnz
push
sbb
lds
cwtl
push
push
sub
jae
int3
imul
pushf
fiadds
and
mov
shll
add
xor
push
sub
icebp
inc
sub
mov
imul
push
and
jns
add
rcl
cmc
stc
sub
jbe
clc
or
and
jg
xor
push
ret
xor
mov
shll
dec
loopne
insb
imul
mov
mov
jmp
and
cmp
arpl
lock
lret
popa
ret
lret
ficompl
ja
cltd
xor
ds
mov
outsl
sub
daa
and
loope
frndint
or
aad
clc
mov
and
loopne
push
xor
popa
adc
aaa
push
cld
sub
js
roll
cmpsl
int
xchg
jp
lahf
xchg
jle
dec
addr16
enter
roll
inc
and
xchg
pop
nop
and
xchg
cmpsb
in
fs
les
jbe
fbld
iret
nop
add
xchg
hlt
pop
mov
sti
inc
mov
aad
jns
sbb
in
dec
ret
add
test
or
rorl
mov
daa
push
pop
mov
test
std
adc
scas
push
ds
mov
iret
setge
pop
adc
jb
adc
cmpsb
les
test
loopne
hlt
add
movsb
add
int3
mov
in
sub
cmc
loop
mov
lret
mov
xchg
loope
out
out
js
mov
pop
jno
andl
sbb
xor
icebp
test
negb
cmp
adc
push
inc
imul
cmp
sbb
dec
test
fsubrp
lret
cmp
xchg
movsb
push
fwait
push
fisubrs
outsl
in
xor
xchg
sub
out
xor
outsb
ret
int3
push
out
push
push
mov
pop
push
je
inc
mov
dec
subb
jle
je
call
pop
test
mov
in
outsl
addr16
and
icebp
subb
xchg
cmp
jns
xchg
popf
and
jmp
xchg
in
iret
inc
fwait
sbb
xchg
fldl
xchg
out
mov
cmp
sbb
ret
fsubl
pop
xor
mov
inc
adc
stc
sbb
pusha
jmp
lods
add
jbe
mov
push
push
mov
imul
mov
test
mov
sarl
mov
push
ds
aaa
cmpsl
inc
inc
out
rorb
push
aas
mov
pop
push
xchg
adc
mov
adc
imul
sbb
dec
mov
push
ja
int
lds
ret
push
xor
cs
outsb
xor
sbb
loope
push
popa
push
test
cli
and
add
sub
insl
add
in
mov
or
out
fsub
leave
mov
or
or
xor
add
push
iret
cld
ret
and
cmp
cwtl
popf
outsl
shrb
mov
mov
sub
aad
nop
lret
cmp
in
vcvttpd2dq
xor
icebp
cltd
cmc
cmp
mov
push
hlt
lock
rolb
fs
in
and
loopne
xor
jecxz
mov
in
das
adc
stos
mov
scas
jge
icebp
in
adc
xlat
and
xchg
js
inc
sbb
into
dec
pop
sub
testb
dec
pop
push
add
aam
imull
mov
pop
push
pop
mov
lock
rcr
jb
jg
scas
rolb
xchg
or
imul
jb
xor
pop
test
insl
mov
jns
xorb
fwait
adc
inc
lock
stos
into
adc
sub
inc
repz
test
pop
rol
xchg
jge
or
movb
mov
icebp
leave
sbb
and
mov
fidivrs
xor
int
cltd
inc
es
sbb
in
cli
mov
xor
imul
in
adcb
xchg
jecxz
cmpsb
addl
inc
imul
fsubl
das
xchg
xchg
sbb
adc
pop
or
outsb
push
and
orl
fsub
cmp
jmp
inc
fcoml
pushf
in
packuswb
iret
and
sub
or
cwtl
imul
lods
ret
out
adc
adc
icebp
cmp
in
xor
ret
sub
stos
repz
aaa
push
orl
push
pop
sub
mov
out
jmp
sub
stos
dec
and
inc
sahf
in
mov
push
push
inc
repnz
push
imul
popf
repz
cs
jno
pop
insb
roll
insb
insb
mov
scas
jo
push
aaa
pop
stos
jae
push
insl
testl
jmp
es
add
xchg
jns
nop
push
rol
imul
pop
mov
imul
std
ret
movsb
xchg
in
ja
sub
adc
arpl
out
xchg
mov
mov
lods
add
jbe
xchg
inc
jl
int3
mov
test
mov
ds
js
sub
dec
shll
jo
add
push
cmpsl
int
pop
test
je
aam
roll
mov
sbb
andb
mov
mov
loopne
push
sbb
jge
les
jne
pop
cmp
jno
pop
cmp
and
pop
mov
inc
mov
dec
jp
insl
into
pop
repnz
stos
xchg
jmp
dec
daa
jae
lods
pop
pusha
loope
cmp
ret
cmovle
daa
or
sahf
orb
sub
inc
iret
lds
push
jmp
stos
insb
int3
sahf
xor
pushf
in
sahf
rorb
ljmp
mov
pop
call
pop
sahf
rorb
pop
rclb
push
push
adc
sbb
loop
mov
mov
daa
clc
adc
dec
and
into
sbb
mov
cmpsb
xchg
subl
aaa
add
jg
xor
pusha
adc
and
inc
out
fmul
pop
mov
movsl
fchs
dec
sbb
xor
nop
lods
add
das
pop
sbb
imul
mov
les
add
shrl
stos
in
and
push
add
mov
xchg
mov
inc
out
xor
lret
xor
stos
cmp
pop
fadd
pop
push
push
sub
mov
mov
mov
cmc
lods
add
lcall
movsl
adc
nop
outsl
test
adc
cmpsl
je
das
fcompl
adc
dec
pop
insb
cmp
fiaddl
mov
mov
ja
outsb
out
xchg
imul
in
jp
add
imul
inc
add
xor
inc
test
mov
adc
jbe
jno
lahf
fwait
int
cmp
mov
add
shlb
sbb
es
sbb
andb
jle
push
mov
mov
add
sub
out
jge
fisttps
test
sbb
movsl
pusha
dec
xchg
jnp
inc
js
les
int
push
filds
nop
loopw
mov
sbb
mov
xor
mov
pop
xchg
int
call
and
out
enter
sbb
movsl
lods
jb
inc
inc
or
stc
xor
mov
jno
fs
jge
sbb
idivb
xchg
add
ret
lea
adc
mov
mov
mov
std
cmp
test
fldl
notb
cmpsl
arpl
mov
aaa
popa
sub
jecxz
xchg
inc
mov
pop
les
adc
sti
mov
add
outsb
ljmp
fistps
cmp
xchg
es
mov
mov
sub
xchg
jb
stos
dec
sub
cmp
xchg
or
test
jmp
fistl
test
cmp
enter
mov
push
xor
fidivl
clc
mov
jmp
test
and
and
subb
xchg
testl
pusha
pop
pop
add
test
push
push
and
aam
clc
sbb
sahf
or
xor
in
dec
jg
inc
xchg
and
add
add
pop
shlb
or
and
jmp
mov
sub
pusha
fsubs
ret
push
insl
add
mov
sbb
lods
pop
ret
data16
sbb
cmp
leave
push
mov
mov
xchg
sbb
sub
adc
cmpxchg
mov
or
mov
lret
mov
sar
dec
jno
mov
roll
adc
push
movsb
xchg
or
mov
in
fstpt
loopne
mov
lret
mov
push
dec
mov
mov
push
mov
pop
xor
jno
dec
xchg
call
daa
xchg
add
test
shrb
jns
movsb
push
outsl
repz
push
mov
mov
dec
hlt
movsl
scas
jnp
rorl
sahf
pop
add
push
mov
je
xchg
fiadds
stos
sub
jge
xchg
add
and
xor
mov
pop
jg
dec
data16
inc
xchg
and
out
in
adc
fcomp
sbb
outsl
adc
cmp
cmpb
sub
jne
stos
pusha
and
sub
adc
cld
fbld
outsb
pusha
push
sub
addr16
pmuludq
dec
popf
sbb
cmovbe
ljmp
call
jp
lret
and
pusha
and
add
ret
add
addb
push
push
std
jns
cli
dec
push
jp
adc
stc
cmp
lahf
or
jl
jmp
inc
dec
jmp
pop
subb
inc
inc
es
cmpsb
inc
mov
lock
adc
push
gs
add
pop
loopne
scas
int3
icebp
jo
pop
xchg
fs
jg
imul
or
aam
movsb
pop
int
mov
pop
xchg
inc
js
jne
dec
push
adc
cwtl
sub
jbe
push
fistl
push
pop
or
cltd
insl
inc
into
bound
cld
add
jnp
popf
mov
das
mov
push
das
jno
push
xor
sub
mov
fcmovu
mov
ds
js
sarl
jle
fisubrs
xor
push
dec
mov
cmp
sti
inc
adc
icebp
lret
cmp
cmp
dec
ret
shrl
aaa
or
cmp
sub
insl
mov
outsl
ret
pop
mov
inc
pop
mov
jmp
cmp
adc
fbstp
inc
push
int
dec
add
mov
repnz
ret
push
cwtl
xchg
cltd
mov
cmp
jb
push
sub
mov
loop
pop
add
dec
pop
lds
in
jecxz
sahf
mov
data16
mov
mov
sahf
pop
pop
xchg
in
sub
repz
repnz
and
cs
aaa
hlt
cmp
and
adc
out
or
repnz
mov
xchg
xlat
mov
add
or
add
clc
adc
repnz
and
pop
fdivs
pop
rorl
pop
ret
jo
dec
ja
dec
sub
shl
outsb
jecxz
xchg
cmp
jmp
test
lods
mov
add
out
cltd
sbb
and
mov
int3
das
fdivl
aaa
pop
movsb
add
push
or
in
mov
dec
sbb
mov
idivl
xor
jle
lahf
inc
xor
push
outsb
jle
or
pop
ret
out
jo
lret
aad
out
mov
fadds
jecxz
daa
push
int3
sahf
clc
pop
mov
push
sub
jecxz
cmc
push
and
or
xchg
xchg
pop
xor
decl
enter
dec
jge
rcrl
fiaddl
aas
fnstcw
sbb
mov
inc
pop
add
cmp
xchg
icebp
call
push
imull
stc
jle
mov
sti
inc
cmp
imul
test
into
sti
sti
pop
cs
imul
push
push
arpl
in
xlat
lret
mov
adc
xchg
rcll
sub
jl
cli
iret
in
ret
cpuid
xchg
rep
jae
mov
scas
mov
mov
adc
fdivrs
sbb
pop
aad
push
inc
loope
push
mov
stos
ficomps
std
into
mov
push
popf
jo
jmp
add
jb
xchg
lret
mov
shrd
pop
popa
mov
jl
xchg
mov
ja
and
sub
cmpsl
sub
push
cmp
in
and
jle
jne
or
stc
or
aas
dec
pop
dec
pop
aam
in
clc
mov
inc
nop
fbstp
clc
cwtl
adc
sbb
push
jge
mov
xor
dec
cmp
adc
aam
sub
mov
jns
xorl
lea
jo
mov
push
fcompp
and
pop
adc
push
popa
icebp
xchg
mov
test
pushf
test
pop
xor
cs
mov
or
inc
inc
test
sarl
rcll
xchg
js
sbb
je
scas
xchg
pop
gs
xchg
xor
leave
cmp
sbb
adc
mov
mov
xchg
mov
into
cltd
dec
xchg
das
imul
xor
adc
sbb
sbb
pop
inc
pop
inc
jge
or
pop
mov
and
push
cs
adc
in
stos
repz
jne
adc
sbb
jbe
stos
jg
js
mov
sbb
pushf
aas
pop
fwait
inc
jb
push
ljmp
addb
leave
pop
mov
sub
xlat
out
jp
ficoms
sbb
test
push
or
push
xor
test
dec
addr16
adc
stc
sbb
push
mov
insl
and
cmpsb
cltd
daa
cmpsl
xlat
lock
sar
fldcw
cld
std
push
dec
ljmp
int3
ret
adc
into
xor
adc
clc
in
test
cmpsl
sbb
dec
pop
cmpsl
mov
add
es
mov
inc
cmc
mulb
aaa
xchg
pop
push
push
daa
lds
subb
lcall
jns
adc
je
arpl
fistl
dec
push
pop
out
or
fbstp
sbb
daa
shrl
cmpsl
push
shr
adc
je
lods
mov
mov
mov
jno
or
lret
mov
jmp
or
mov
cmc
inc
and
push
push
dec
push
ror
hlt
lods
adc
fsubrp
mov
jecxz
sbb
jmp
in
inc
int3
scas
aaa
repz
std
mov
cmp
call
push
xchg
into
imul
adc
dec
lahf
ret
int3
fwait
jge
push
and
les
inc
in
and
add
shlb
sbb
xchg
sub
addl
or
or
test
cmp
sbb
testb
movsb
rolb
out
adc
mov
test
stos
loopne
es
je
inc
add
popf
adc
into
mov
fisttpl
pop
mov
cmpl
inc
xchg
and
lock
dec
jb
lahf
sbb
pop
add
movsb
mov
adc
clc
inc
sub
sub
std
pop
insl
int3
ficoml
pop
cmp
push
push
pop
jnp
mov
fs
cmp
sub
mov
dec
pop
in
pop
push
adcl
arpl
rcl
outsb
mov
rcl
dec
push
hlt
lea
fadd
lcall
fs
sbb
out
mov
or
rcrb
cmp
loope,pt
int
cwtl
call
rolb
mov
or
mov
pusha
iret
in
je
ljmp
loopne
pushf
stos
fstpt
les
and
mov
add
call
movsb
jne
movsb
insl
mov
icebp
or
inc
dec
mull
cmpsb
inc
dec
and
inc
pop
mov
fs
popf
loop
aaa
clc
or
xor
dec
xchg
jbe
jg
in
mov
push
ljmp
mov
jo
popf
lret
pusha
and
je
jecxz
sub
push
xlat
jnp
fcomp
xorb
shll
or
lock
mov
cmp
hlt
mov
int3
pop
fs
mov
data16
sub
icebp
dec
stos
into
sahf
pop
pushf
xlat
add
ret
jb
mov
ss
sbb
inc
test
fnstenv
sbb
lock
fdivs
sbb
inc
shrb
stos
sub
in
mov
out
and
push
lds
rcr
mov
adc
adc
test
xor
out
bound
xor
aas
sbb
icebp
not
les
or
dec
inc
cmpsl
in
pop
je
jns
in
int3
adc
adc
add
pusha
loope
xor
mov
mov
dec
jb
mov
dec
shrb
dec
and
dec
xor
dec
xchg
sbb
dec
loop
dec
repnz
lds
rol
dec
push
or
dec
mov
xchg
rorb
mov
dec
inc
rorb
mov
dec
sti
rorl
mov
dec
xchg
les
daa
dec
mulb
dec
inc
lahf
les
fstpt
dec
mov
rorb
mov
dec
push
rorb
mov
dec
fidivrl
mov
dec
mov
dec
lcall
dec
cli
and
dec
dec
pop
les
lcall
mov
dec
mov
dec
outsb
lds
dec
into
cmp
dec
fidivrs
dec
cs
dec
ds
lds
sub
les
movsl
lds
loope
dec
dec
sbb
mov
dec
mov
add
bound
mov
subb
aad
cmovnp
adc
pop
xchg
dec
sbb
je
sbb
jae
insb
in
dec
sub
mov
adc
rcr
push
dec
xchg
xor
adc
jb
cli
inc
mov
in
mov
arpl
jb
leave
fisubrs
inc
push
into
mov
mov
fistps
ficoml
and
xor
fs
lods
outsb
push
sub
sbb
or
aaa
movsb
sbb
push
xor
iret
imul
repz
sub
aaa
mov
repz
pop
das
jg
push
call
xchg
cmpsb
inc
sti
stc
dec
cmp
bound
mov
or
sub
out
outsb
repnz
les
ds
add
shl
iret
mov
outsb
in
iret
xchg
movsb
push
in
add
shll
pop
dec
sbb
gs
jecxz
xchg
out
scas
ret
jg
xchg
jns
mov
push
icebp
sub
cs
mov
adc
mov
pop
xchg
sub
faddl
push
scas
mov
iret
inc
jno
dec
jge
out
cmpsl
mov
scas
ljmp
mov
movl
sub
or
xchg
ss
lods
out
pop
sub
mov
movsl
dec
or
push
aas
in
sub
or
lret
sub
cltd
push
test
and
cmp
pop
into
mov
inc
cmp
jg
xchg
dec
leave
xor
mov
shl
xchg
xchg
loop
xor
aad
jb
add
ficoml
adc
add
xor
mov
mov
scas
xchg
add
push
inc
jo,pt
and
xor
out
or
das
in
xor
mov
adc
fdivrs
fcomp
push
adc
cld
xor
mov
jmp
mov
iret
test
repz
lret
cltd
pop
gs
mov
xchg
xchg
sbb
mov
fldcw
push
jmp
jp
mov
push
in
into
sbb
ss
mov
fldcw
lock
xchg
adc
lods
inc
dec
mov
stos
push
push
add
dec
push
mov
and
xor
or
jae
aad
xchg
out
fidivrs
sub
lock
mov
pop
loopne
leave
jecxz
cmpsl
repz
and
dec
fsubs
test
and
lret
or
fldl
push
ds
add
imul
sub
jo
pop
or
dec
iret
xlat
out
mov
sar
jmp
and
stos
push
mov
xor
add
je
into
fstpl
pusha
mov
psubd
xor
mov
ret
jle,pn
fisubl
or
addb
repz
mov
fcomip
xor
dec
mov
in
and
pop
sbb
ss
fildl
in
cmovge
ds
ljmp
fimuls
sub
push
inc
or
adc
pop
jae
pop
shl
sarb
jmp
ja
push
pusha
push
mov
jl
into
mov
jp
pop
xchg
cwtl
ljmp
xchg
out
lret
int
dec
pop
dec
jns
inc
mov
jno
dec
cltd
pop
sbb
shl
adc
xchg
xor
and
pushf
addr16
or
pop
loopne
lret
mov
jno
mov
stos
cmp
and
fcmovnb
adc
loopne
mov
aad
pop
mov
mov
adc
fstps
mov
leave
pushf
jns
xchg
mov
in
mov
jecxz
sub
les
xor
aam
jne
jne
mov
or
dec
scas
xchg
mov
pushf
ficoms
lahf
jmp
push
shrl
inc
push
pop
xor
push
jae
ret
outsb
ficoml
cli
cli
mov
xor
test
pop
xor
pop
fnsave
pusha
sbb
push
push
frstor
sbb
sbb
inc
mov
aas
fimuls
add
fldt
jge
sbb
cwtl
hlt
adc
dec
inc
jb
enter
idivb
or
push
cmp
sbb
sbb
push
dec
lods
in
pop
js
dec
out
mov
push
sbb
dec
fdivr
into
mov
xor
enter
push
pop
inc
pop
inc
adc
notl
int
mov
int
dec
in
cltd
subb
popa
aam
add
adc
mov
sbb
add
lahf
cs
xchg
dec
pushf
mov
movsb
pop
pop
pusha
pop
adcb
jnp
daa
sub
call
insl
pop
addr16
push
ret
aam
and
aaa
call
cwtl
cmpsl
outsl
in
fst
mov
xlat
imul
inc
jle
xchg
cmp
jae
fistl
ret
lds
scas
sahf
sub
jns
xchg
push
sahf
mov
ret
clc
mov
push
icebp
sbb
xchg
enter
mov
int3
push
and
mov
mov
jns
inc
addr16
std
lcall
addr16
repz
inc
cld
inc
push
aaa
aad
out
and
inc
or
cli
mov
daa
add
add
mov
das
pusha
aas
pop
dec
jo
sti
xor
mov
fdivs
cmpsb
add
add
dec
clc
daa
inc
cmp
loopne
not
adc
mov
mov
and
out
jnp,pn
sub
inc
movsb
inc
scas
ljmp
cmp
call
xchg
int
icebp
out
mov
ret
push
adc
les
push
mov
cmp
in
into
push
or
mov
add
hlt
mov
orb
dec
cld
or
cltd
enter
or
xchg
sar
movsb
xlat
in
ret
mov
mov
xchg
xchg
fists
int
fs
inc
xor
ljmp
test
out
and
inc
ja
mov
divl
mov
inc
jge
cmc
and
fsubs
out
add
fisttps
sub
sti
pop
mov
std
add
aas
daa
mov
push
loop
and
cmp
fdivl
pop
movsl
cwtl
jg
jae
jp
test
dec
std
das
les
test
insb
and
jns
imul
outsl
pusha
jge
mov
mov
add
outsl
scas
je
mov
sub
adc
movsl
ja
outsb
stos
dec
add
iret
call
outsb
push
outsb
pop
andb
sub
jns
pop
xor
adc
in
sahf
into
outsb
fildl
jae
xchg
cmp
mov
cmpsb
movsl
mov
pusha
adc
push
loop
push
lcall
popa
insb
mov
test
scas
mov
pusha
in
or
rol
dec
pop
or
mov
sbb
push
cmp
stos
sub
jns
inc
ffreep
aad
or
addr16
imul
daa
dec
daa
loop
sbb
push
jmp
pusha
push
lods
clc
sbb
xchg
repnz
push
out
shrl
push
xchg
sti
in
aad
cmp
push
stos
cmp
cmc
cmp
add
pop
xchg
shll
pop
faddl
add
jb
outsl
adc
add
lcall
jmp
mov
or
sbb
push
andl
xor
pop
push
xor
xchg
lret
inc
and
xor
cmp
cld
stos
enter
daa
addb
js
sbb
test
pop
or
aaa
cmp
add
inc
rorb
add
int
sub
mov
push
lcall
shl
andl
push
pop
jge
push
xchg
sbb
jbe
int
fwait
int3
inc
mov
ja
pop
add
das
add
clc
rol
lret
cmpsl
jb
scas
or
out
es
dec
mov
xchg
decl
mov
inc
in
js
cld
insl
aas
out
sbbl
popa
adc
rcrl
jb
mov
fimuls
enter
jnp
mov
add
jmp
sbb
push
xchg
shr
cmp
add
xor
pop
rcrl
xchg
fsts
xchg
add
sbbl
gs
add
arpl
jbe
andb
das
ret
lea
test
rcrb
ljmp
jnp
jae
push
xchg
adc
test
jge
jp
sbb
rcrl
push
jae
mov
loope
icebp
insl
add
sbb
loope
pop
mov
mov
pop
and
cmc
jp
stos
ljmp
pop
sar
inc
dec
xchg
in
das
fcmovb
jae
aam
dec
and
lock
dec
dec
sub
mov
sbb
xor
ljmp
push
push
movsb
loope
in
mov
ljmp
adc
pop
push
mov
aam
or
lahf
int3
sub
ret
stos
es
cmp
mov
add
clc
shrl
fstp
nop
mov
imul
sub
rolb
fdivs
stos
or
fucom
lds
into
pop
adc
pop
test
daa
inc
jo
lret
aaa
jno
mov
fs
push
das
mov
ret
loop
jmp
jbe
mov
pushf
bound
push
loop
int
imul
sahf
mov
ret
daa
lcall
ret
mov
pop
subb
addr16
addr16
dec
and
je
jl
xchg
imul
push
pop
pop
mov
or
sbb
lret
xor
dec
pop
repz
cmp
nop
or
out
lds
and
in
stc
out
dec
lods
mov
stos
shlb
cmpsl
push
adc
or
xor
int3
and
sub
mov
test
aad
mov
gs
sub
push
in
or
inc
jb
sbb
sub
mov
add
fidivl
mov
sub
repnz
int3
adc
push
ds
fists
cs
movsl
and
int
out
xchg
fnstsw
inc
sub
cli
dec
test
cld
shrb
inc
mov
sti
mov
mov
adc
mov
je
mov
or
ret
mov
xor
jmp
test
sbb
arpl
xor
adc
addr16
std
jb
out
mov
pop
lock
imul
pop
cli
push
pop
jg
dec
inc
mov
push
push
ljmp
pop
fldcw
xchg
mov
sbb
imul
adc
mov
push
or
xor
sbb
outsl
pop
push
push
xchg
dec
jbe
lods
loop
fld
lods
je
mov
push
ret
sbb
mov
fldenv
in
mov
or
pop
adc
lock
cmp
mov
inc
xchg
push
rcrb
rorl
mov
lods
jg
add
or
fucom
add
loop
mov
popl
pop
shr
mov
push
cwtl
mov
imul
repnz
sub
adc
mov
ljmp
mov
adc
icebp
ficompl
insb
push
mov
jg
add
sti
cwtl
outsb
stc
inc
in
mov
ljmp
hlt
mov
lds
jne
shl
xchg
or
movsb
cs
xor
sbb
mov
aad
ret
enter
sbb
sbb
mov
leave
and
not
stos
dec
bswap
outsl
js
mov
orl
pop
mov
aad
xchg
inc
mov
jecxz
sti
jecxz
jl
pop
pop
jae
mov
or
loop
stc
ficomps
jmp
mov
xor
into
out
pop
sub
dec
sbb
xlat
dec
xor
mov
stc
add
sub
outsl
in
push
sbb
push
mov
icebp
xlat
sub
mov
xchg
push
mov
jmp
sub
mov
jo
mov
and
xchg
out
push
xchg
inc
dec
mov
sub
lock
pushf
jne
jo
mov
adc
imul
loope
jnp
or
xchg
and
hlt
mov
cmpsl
xor
mov
mov
insl
iret
mov
mov
outsb
out
jne
and
icebp
dec
inc
js
stos
cmp
out
dec
dec
inc
or
shlb
stos
inc
les
xchg
into
fisttpll
and
jg
inc
cmpsl
cmp
and
mov
jo
mov
jnp
sub
mov
testb
mov
rorl
mov
pop
pusha
cmp
stos
fimuls
sbb
dec
cmp
cmp
pop
adc
cli
int
lret
dec
jmp
das
rcr
xchg
fldenv
popa
fidivrl
shr
push
mov
ss
lret
subl
std
jnp
pop
fisubl
fmull
add
in
and
xchg
call
jle
pop
inc
ror
mov
lret
xor
sti
pop
jns
stos
inc
pop
mov
or
addr16
sub
add
xchg
pop
shl
push
add
lcall
into
ja
mov
gs
add
hlt
dec
xchg
sti
sub
mov
rcr
dec
lcall
stos
push
xchg
jns
sti
cwtl
sahf
add
pop
rol
outsb
jp
fcompl
xor
scas
test
sti
js
jl
mov
lahf
inc
jp
movsl
inc
or
dec
inc
sub
in
push
clc
icebp
stos
mov
movsb
mov
mov
ljmp
ret
lods
xor
dec
aaa
jno
push
ffree
rcrb
inc
rol
push
in
lret
test
stos
out
push
inc
movsl
js
add
std
repnz
dec
sub
and
test
movsb
aad
mov
xchg
arpl
sarl
mov
sbb
stos
cmpsl
dec
idivl
sahf
cltd
jp
test
dec
mov
inc
addr16
push
mov
das
mov
dec
lret
into
outsb
add
push
shrl
clc
pop
je
mov
adc
or
test
xchg
shll
sub
jae
jge
faddl
add
adc
and
out
ret
inc
dec
xchg
dec
js
jp
pop
das
push
inc
adcl
push
mov
scas
add
lock
push
jae
sbb
push
ror
scas
enter
push
pop
loope
stc
ficompl
leave
cs
or
sbb
mov
into
lahf
push
fcoml
adc
cmp
and
mov
cmp
notb
dec
lret
cmp
mov
jae
scas
and
jb
rcrl
xchg
xlat
mov
dec
inc
jl
stos
movsb
stc
repz
call
iret
enter
sbb
daa
cmp
mov
adc
out
push
repnz
aas
mov
push
das
rolb
cmp
mov
inc
mov
mov
mov
inc
jne
js
pop
pop
pusha
repnz
mov
and
mov
lock
addb
xorl
push
jl
incl
popf
sbb
adc
xor
inc
outsl
inc
dec
mov
out
outsl
push
cmp
lds
sbbb
dec
clc
scas
lcall
jnp
leave
mov
mov
mov
lea
idiv
adc
sub
add
imul
out
push
xchg
sbb
cmp
push
lds
pop
orl
jl
inc
popa
dec
xor
mov
xor
inc
popa
push
xlat
xor
leave
adc
cmpsb
imul
bound
aaa
mov
add
xor
pop
jmp
adc
mull
fwait
jo
les
push
xchg
stos
sbbl
mov
std
cmp
jae
push
dec
in
dec
loop
sub
dec
or
cmp
inc
or
and
xchg
aam
fidivrl
and
subb
cmp
sbb
mov
dec
pop
fstp
mov
add
mov
icebp
std
cmp
cwtl
into
add
xor
inc
in
xor
push
bnd
jae
fwait
xchg
push
lret
dec
addb
repz
hlt
adc
stos
pop
inc
imul
in
add
pop
push
mov
mov
mov
sub
or
sbb
mov
nop
push
xor
pop
call
inc
sbb
push
int
xchg
andb
mov
fiaddl
sub
int
xchg
sub
xor
pause
dec
jmp
scas
arpl
sub
cltd
lahf
mov
add
loopne
andl
mov
jns
icebp
pushf
ja
data16
iret
sbb
adc
pop
add
cmpb
pop
cld
mov
dec
rcrb
dec
dec
jno
fistpl
fcmovbe
push
insl
out
sbb
out
inc
push
mov
xchg
pop
out
dec
jp
and
shrl
xchg
out
rcll
sub
push
inc
sti
not
into
fadd
dec
pop
lea
cs
ss
mov
jbe
cmp
and
adc
pop
mov
cmp
mov
jge
daa
cmp
std
sbb
push
push
mov
int
daa
ret
push
and
nop
mov
addr16
cmpsl
lds
scas
dec
xor
cs
xchg
add
jo
mov
dec
push
stc
jo
push
nop
sub
addb
xchg
cmp
push
in
in
cwtl
cld
out
dec
cmpsl
or
ljmp
ja
adc
iret
pushf
sbb
or
dec
or
adc
lock
dec
cli
sub
es
pop
mov
jecxz
mov
mov
pop
push
aam
jno
jno
dec
jns
mov
inc
test
insl
movl
mov
loop
mov
sub
cmpsl
les
inc
add
fs
ret
mov
adc
ret
je
inc
mov
out
or
and
fmuls
jl
fidivrs
jbe
movsb
out
lods
movsl
jbe,pn
jb
mov
xchg
sbb
mov
dec
outsl
jg
stc
jmp
add
sarb
ret
push
add
dec
and
fiaddl
pop
push
pushf
addr16
and
cld
es
pop
aaa
ja
xor
iret
mov
mov
add
mov
data16
das
es
gs
dec
ja
mov
jmp
out
and
push
jecxz
mov
stc
shrl
push
sub
arpl
fildll
cmp
fs
sub
mov
push
sub
mov
fnstcw
sub
orl
aam
cli
das
mov
in
nop
icebp
mov
movsb
mov
dec
jne
mov
fwait
mov
iret
jbe
das
scas
xor
xchg
push
popa
outsb
fisubl
pop
and
outsb
dec
rcll
inc
jns
push
pop
mov
inc
xchg
push
cmp
jns
icebp
cmp
xlat
push
pop
xlat
in
insb
and
test
int
sti
xchg
cmp
js
repnz
inc
xchg
fiadds
inc
das
sub
adc
mov
pop
mov
loope
ret
xor
popf
cmpsl
lods
in
jae
xchg
or
cld
jb
xchg
jmp
mov
shrl
xchg
or
jnp
mov
sub
jns
loope
cmp
fmul
dec
flds
out
popf
outsb
repz
lcall
hlt
inc
pushf
cwtl
icebp
push
fistl
pop
les
popa
inc
xchg
jnp
sbb
in
ljmp
frstor
movsb
mov
add
mov
jns
or
sarb
out
movsb
and
loope
cs
mov
and
add
push
ficompl
insb
pop
stc
inc
sbb
xchg
dec
adc
stos
rcll
negb
rcll
aas
jp
cmc
fiadds
aas
aad
test
testl
lahf
aam
loop
aaa
cmp
mov
pop
cmpsl
adc
mov
push
or
mov
pop
insb
scas
adc
into
cltd
xorb
mov
push
xor
push
cli
enter
in
int3
dec
xchg
inc
add
push
xchg
adc
insb
mov
cwtl
push
sarl
mov
push
movl
mov
sarb
shlb
push
fnstenv
xchg
mov
decb
dec
scas
dec
fdiv
jecxz
xchg
add
ljmp
mov
xlat
aad
aas
lods
cld
mov
mov
push
pushf
jg
mov
daa
mov
cmp
cmp
or
rclb
mov
sbb
xchg
dec
sub
fists
int
loope
or
jns
mov
push
adc
mov
or
cmp
cltd
or
dec
int3
leave
dec
inc
repnz
pop
jg
xor
dec
cwtl
rcrb
mov
jl
fidivs
pop
les
test
mov
andb
loope
sub
or
into
sub
pop
cli
jecxz
std
adc
std
xchg
adc
sub
push
push
and
and
iret
dec
sub
addb
mov
xchg
outsl
ficomps
arpl
sahf
pop
mov
flds
jp
fdivr
test
xorl
subb
loop
adc
sahf
mov
jae
shll
pop
sahf
add
test
gs
fsubr
mov
fnsave
push
ljmp
xor
adc
pop
mov
add
repnz
jg
or
cmpb
fmulp
dec
mov
push
jg
mov
jge
pushl
cmp
jecxz
adc
add
xor
inc
xor
repnz
adc
mov
push
cmpsl
jp
dec
xor
arpl
arpl
mov
imul
imul
lcall
and
dec
ds
lock
hlt
popa
in
or
rolb
jno
cmp
decl
ret
test
push
stos
fcmovne
addb
fcmovb
ret
xchg
cmp
fistps
divb
sub
lds
out
or
out
cld
jmp
and
jmp
pop
sti
jmp
lcall
mov
dec
bnd
mov
jmp
jle
div
into
cmp
neg
jns
imull
mov
idivl
icebp
cld
testl
movsl
cld
idiv
loope
testl
div
scas
xchg
sti
idivl
add
clc
adc
clc
jb
add
clc
shrb
clc
and
clc
xor
clc
xchg
sbb
clc
loop
or
repnz
or
inc
rorb
clc
push
or
clc
mov
xchg
push
clc
push
iret
add
push
or
clc
jbe
add
clc
sti
pop
clc
es
add
clc
xchg
or
out
or
mulb
clc
inc
lahf
or
push
fildl
clc
mov
push
clc
or
add
push
push
clc
jp
add
clc
fidivrl
add
cmp
or
mov
clc
lcall
clc
cli
and
clc
dec
pop
or
pop
lcall
mov
dec
add
push
mov
outsb
lds
hlt
into
cmp
hlt
fidivrs
hlt
cs
hlt
ds
or
mov
or
out
movsl
or
loope
hlt
dec
sbb
add
hlt
mov
add
repz
repz
push
ret
dec
xor
adc
lret
xchg
push
cmp
push
addb
xchg
icebp
mov
push
jmp
mov
cmp
out
dec
xor
jge
sbb
insb
jp
in
aas
xchg
add
rol
gs
mov
cmp
mov
sti
cmp
mov
das
into
and
add
sub
jbe
incb
xchg
sub
sbb
lods
xor
mov
push
pusha
mov
repnz
add
out
arpl
clc
mov
dec
icebp
icebp
fildll
add
push
mov
push
or
iret
xor
fs
aas
ds
push
fs
sub
je
ret
addr16
sarl
movsl
and
mov
imul
push
test
or
push
or
fadds
sarl
cli
in
loope
cmp
xchg
test
adc
adc
aaa
into
out
in
icebp
and
out
rcr
aaa
mov
rolb
loopne
and
ja
xor
roll
push
arpl
lea
lcall
or
cmp
jns
jb
pop
ss
insb
outsb
sbb
pop
test
inc
out
outsb
jne
neg
mov
jo
lret
push
jg
sar
pop
mov
pop
lods
mov
roll
out
lahf
sbbb
mov
cld
push
data16
jg
mov
xor
fcmove
or
push
fiaddl
out
loop
pop
jge
jno
mov
cwtl
adc
push
les
int3
pop
jmp
pop
sarb
pop
pop
fisttpl
test
mov
test
ret
jmp
ret
push
lahf
push
inc
jo
jecxz
leave
cmc
aaa
pop
rorl
pop
stos
sub
adc
xchg
pop
aas
std
dec
mov
in
imul
or
scas
and
push
dec
add
pop
jae
insb
mov
loope
fimull
sbb
stc
hlt
jge
dec
mov
sbb
push
mov
clc
sub
out
pop
inc
jp
mov
fmuls
movsl
out
mov
mov
sub
ror
inc
cwtl
inc
sbb
cmpsb
inc
and
push
mov
xchg
adc
adc
negb
mov
loop
or
aam
inc
cmp
sbb
out
jae
dec
out
cmp
cmp
fs
movsl
and
inc
mov
insb
jo
js
idivb
loop
jb
sbb
add
dec
cmpb
fidivrs
pop
sarl
cmpsb
pop
pop
int
sub
es
cmp
add
xor
or
dec
add
popf
fs
js
dec
xor
inc
popf
cmp
sahf
push
mov
dec
sub
inc
in
push
xchg
cmp
push
fwait
pop
cmpxchg
mov
sub
mov
xchg
in
jmp
mov
jge
adc
cltd
movsb
sub
and
das
cwtl
ja
pop
push
pop
mov
cmp
sti
xor
push
test
xor
stc
iret
popa
jo
xchg
fisubs
lcall
xlat
pusha
add
shl
rcrl
xchg
fildl
pushf
fldl
dec
nop
jb
std
add
repz
fwait
negl
jmp
test
negb
in
mov
lock
loop
popa
jb
or
enter
mov
inc
addr16
dec
in
mov
out
scas
adc
cltd
fs
int
roll
xor
lret
imul
mov
mov
fildll
sti
adc
mov
push
nop
rcrb
orl
or
lahf
stc
into
mov
mov
loopne
jne
es
stc
in
sbb
push
call
cmpsl
into
jmp
add
les
add
fsts
add
or
jle
lret
loop
cld
fcos
arpl
pop
push
fmull
in
adc
insb
test
aad
mov
and
or
add
add
addl
scas
mov
pop
aam
test
int3
mov
sahf
cmp
pop
dec
mov
push
mov
movzwl
dec
lret
pusha
mov
sub
xor
dec
lock
jb
mov
clc
lcall
mov
pusha
or
dec
insb
inc
shrb
inc
or
adc
inc
xchg
pop
test
dec
fsub
data16
mov
cmp
iret
mov
repz
push
in
xchg
test
sti
clc
popf
push
or
jns
insb
jl
fdivrs
data16
jne
xchg
mov
or
cmp
push
push
mov
pusha
mov
adc
add
sub
cmp
icebp
push
mov
repnz
jo
lcall
aas
cmpsb
push
call
cmc
std
pop
cwtl
cmp
iret
out
pop
shll
jnp
sub
je
lods
cmpsb
ss
pop
stos
push
pusha
mov
mov
xchg
ljmp
dec
aas
dec
test
test
rclb
inc
push
pop
jecxz
xchg
mov
andl
push
jl
js
mov
bound
insl
push
cltd
or
cmp
cmc
mov
inc
lret
push
inc
bound
ljmp
fstpl
xchg
shl
nop
shl
jmp
push
fdivp
std
int3
fisubrs
hlt
xchg
mov
inc
cld
stc
loop
roll
pop
sbb
cltd
mull
jae
mov
mov
push
in
mov
and
mov
push
test
insb
mov
dec
ret
adc
in
lahf
imul
outsb
sub
mov
js
sbb
stos
rcr
jae
or
dec
sbb
loopne
scas
cwtl
lods
push
mov
les
dec
test
sub
pop
jmp
push
out
push
jae
jle
lret
jae
xlat
pop
or
mov
push
pop
push
int3
mov
xlat
mov
imul
loopne
xchg
imul
push
daa
add
imul
push
cmp
lcall
ret
aad
cmpsl
and
in
jb
pop
cmpsb
ss
and
push
xlat
pop
pop
jl
jbe
sahf
pop
adc
aam
sbb
xchg
pop
sti
cmc
jl
adc
add
jne
imul
int
loopne
sbb
pop
out
insl
pop
std
pushf
lcall
ljmp
arpl
and
pop
out
add
aas
mov
xor
mov
sbb
popf
fimuls
mov
mov
cmp
or
xor
xchg
shrb
jl
lcall
cmc
pop
dec
enter
mov
test
push
jmp
mov
out
inc
imul
ja
rclb
es
lcall
iret
test
jb
add
dec
sahf
gs
jecxz
push
fists
dec
dec
push
in
lret
imul
mov
pop
lahf
mov
lcall
lds
addr16
push
pushf
xor
sub
scas
leave
dec
inc
push
mov
mov
dec
add
adc
test
inc
mov
mov
and
cs
or
push
cmpsl
adc
dec
repnz
jne,pn
mov
les
sbb
pop
mov
jge
or
push
nop
sbb
shlb
xor
mov
nop
and
movsl
out
sahf
xchg
or
in
out
data16
pop
imul
add
and
push
mov
jecxz
dec
cmp
xchg
lea
sbb
and
ljmp
rorb
sbb
xor
and
mov
jno
lds
int
cld
xlat
into
stos
jle
xor
push
enter
add
scas
outsb
lods
std
mov
inc
mov
nop
hlt
scas
test
iret
lock
xchg
push
jb
mov
call
fidivl
rorl
mov
push
insl
adc
stc
pop
add
leave
mov
inc
andl
hlt
fdivs
movl
xlat
mov
loop
ffreep
pop
lods
out
jl
in
leave
loop
add
scas
lods
and
mov
xlat
cli
sub
jno
fmull
mov
mov
out
jg
adc
mov
inc
mov
arpl
lock
pop
hlt
inc
and
fcoml
in
dec
xchg
icebp
mov
ret
subl
sub
aas
dec
out
push
mov
dec
outsl
cld
xor
xchg
sub
lahf
xchg
pop
incb
call
cmp
dec
and
ret
bnd
subl
mov
xchg
mov
xor
xor
and
xchg
mov
in
mov
pop
jecxz
jnp
int
sbb
scas
sahf
jmp
and
sub
movsb
mov
test
fwait
js
lahf
shr
std
mov
sbb
sbbl
cmp
mov
and
xchg
insl
jg
cmpsb
push
adc
ds
mov
mov
sub
jno
sbb
int
fcomps
fiadds
aad
sbb
lret
xchg
jae
mov
mov
xorl
ret
ljmp
jle
inc
sarb
mov
xchg
inc
xlat
je
add
mov
push
xchg
das
pop
pop
arpl
push
cmp
pusha
xor
cli
inc
cld
mov
pop
sbb
fcom
mov
jmp
data16
fldcw
in
xlat
jo
mov
mov
xchg
cmp
or
out
stos
decb
push
mov
jno
outsb
in
mov
jp
lahf
mov
clc
mov
ljmp
mov
fistps
cmpsl
mov
jp
imul
ror
lods
nop
adc
xchg
cmpb
or
push
xchg
add
out
sbb
xchg
mul
idivl
stos
fcomps
jle
cmc
jns
fsubs
or
sahf
sbbl
dec
sub
adc
jno
int
test
hlt
add
ss
test
adc
cwtl
pop
popf
or
mov
and
xor
sbb
movsl
mov
cmp
jns
ja
and
data16
mov
repnz
lahf
mov
pop
es
lcall
fisubrs
mov
jne
outsl
push
sbb
push
iret
sbb
hlt
arpl
mov
stos
call
sti
jge
fsubp
cltd
inc
test
int3
mov
pop
add
xorb
ja
jg
add
dec
mov
jae
push
ss
cltd
ja
cmc
pop
pop
or
dec
out
insl
dec
or
in
iret
pop
push
push
loope
pop
hlt
outsb
pop
dec
repz
or
adc
test
mov
or
or
push
pop
mov
icebp
xchg
into
xchg
or
mov
xor
add
cld
leave
insl
fidivrs
push
insb
ja
add
inc
adc
add
mov
sti
cli
je
jnp
mov
sbb
jl
pushf
negl
sub
hlt
test
mov
mov
sub
push
pop
bound
dec
divb
push
push
fldl
out
push
pop
mov
inc
push
jecxz
push
ljmp
sbb
fildll
mov
clc
push
mov
loop
ljmp
cmc
ds
aaa
dec
shlb
pop
or
sub
stos
fcompl
xchg
mov
pop
xchg
lods
push
add
add
in
sub
cmp
jb
push
push
ljmp
notl
in
cmp
inc
cmc
sbb
adc
fs
loop
ja
je
xchg
or
loope
sbb
loopne
into
jae
sub
imul
xchg
xlat
dec
xor
fs
scas
mov
pushf
js
pop
call
sbb
cwtl
or
pop
jno
icebp
in
push
push
jne
and
lds
lahf
jne
cli
dec
and
push
jbe
in
movsl
cmpsl
stos
mov
nop
add
xor
fnstcw
scas
leave
dec
repz
popf
pop
mov
mov
xchg
inc
adc
mov
cmpsb
xor
ret
mov
jp
mov
push
ss
xor
push
insl
mov
adc
mov
lods
inc
aas
xchg
dec
mov
lcall
scas
xor
aad
iret
inc
dec
out
cmp
outsb
popf
sbb
or
adc
insl
rcll
jge
push
sub
cmp
sub
jne
sub
in
sbb
sub
mov
sbb
dec
sbb
pop
push
pop
sub
shl
sub
or
sub
dec
out
popa
push
aad
or
out
icebp
mov
mov
inc
bound
cwtl
mov
pop
ds
shrb
repz
in
sub
xchg
xchg
data16
xor
rorb
push
cmpsb
fisubs
adc
jg
sub
push
jmp
inc
mov
idivb
aam
mov
mov
loopne
dec
pop
push
es
aad
mov
fldz
fdivrl
cmpsb
mov
sub
mov
mov
js
push
xchg
icebp
dec
pop
cmp
cmp
inc
sub
jmp
mov
daa
inc
inc
insl
roll
nop
pop
out
in
popf
lcall
dec
shrb
lock
sub
xchg
dec
xchg
in
inc
sbb
mov
ss
push
out
icebp
enter
incw
sbb
loope
popa
andb
test
stc
hlt
sub
adc
cld
xor
add
xor
aaa
negb
push
adc
loope
and
loop
jnp
js
arpl
es
iret
je
dec
mov
js
or
clc
repz
mov
stos
mov
or
in
sbb
and
fisttpll
pandn
xor
fwait
cli
xor
iret
adc
pop
mov
sub
movsl
aad
lret
or
jle
cli
push
fdiv
adc
sub
sar
fldenv
cld
xor
sahf
xchg
movsb
push
jmp
inc
dec
jmp
inc
inc
inc
ds
xchg
stc
push
lods
lcall
in
cmp
xlat
push
shl
mov
fwait
xchg
add
roll
adc
sub
sbbb
mov
jge
cmc
xor
test
and
inc
mov
pop
into
xchg
adc
mov
sub
mov
sbb
jp
add
jecxz
inc
movsl
jo
xor
mov
xor
rclb
loop
inc
dec
pop
lds
add
cwtl
stc
mov
fmul
dec
lret
xor
in
fmuls
or
inc
imul
movsb
insb
pop
push
xchg
push
lret
fwait
lcall
pop
sub
dec
mov
and
jg
rcrb
or
xor
push
or
adc
xor
push
xchg
je
das
loop
cmp
sub
popf
imul
cmp
push
xor
imul
dec
push
std
cmpsb
rcrb
test
outsb
ss
push
add
push
jle
add
mov
leave
xor
dec
cltd
loopne
orl
xor
cmp
sbb
or
mov
sbb
sbb
xor
mov
loopne
fimuls
push
push
ljmp
sbb
rorb
xchg
mov
sbb
clc
addr16
test
call
mov
test
orb
into
mov
fs
jge
jno
pop
push
pop
cmc
cwtl
int3
fcomip
push
pop
enter
mov
lcall
loop
fstpl
xchg
jo
xchg
xchg
jbe
inc
lcall
test
xor
mov
lret
inc
add
and
pop
in
cmp
test
adc
push
lods
sbb
and
test
xor
adc
xor
xchg
xor
mov
sbb
je
xor
and
sbb
push
jl
ja
mov
sbb
movsb
rolb
mov
fcoml
lret
test
mov
add
fldenv
stc
push
sti
add
xor
leave
ljmp
cmp
cmp
lods
and
mov
add
sbb
stc
pop
in
sbb
nop
jb
mov
lret
sahf
sbb
adc
add
fcmovb
repz
mov
in
scas
fwait
arpl
ficomps
fdivrl
jecxz
fisubrs
mov
lds
mov
or
mov
fnsave
lods
negb
cmp
leave
iret
xchg
sub
ds
rcrl
out
in
jl
xchg
subl
push
and
js
mov
ja
inc
add
pop
add
lock
icebp
mov
stos
inc
lahf
dec
mov
adc
out
and
mov
pop
lods
xchg
aas
xlat
pop
mov
fadds
insb
lods
lock
mov
and
aad
mov
test
call
sarl
pop
push
repz
pop
and
adc
sahf
add
or
add
mov
mov
dec
cli
adc
in
fidivs
xchg
ja
out
sarl
inc
mov
mov
xlat
fiaddl
out
fstpl
cmp
and
jle
and
mov
mov
and
outsl
mov
and
out
and
and
and
fwait
mov
push
xlat
mov
movsl
adc
and
mov
and
jns
mov
leave
push
xor
fldcw
nop
cmp
mov
and
cmpsb
mov
jmp
push
mov
dec
pop
mov
pop
xchg
mov
test
or
lods
and
test
and
cld
mov
int
mov
fnsave
and
in
mov
lea
mov
popf
gs
in
mov
mov
dec
sbb
and
rolb
and
dec
andb
test
and
sti
jg
sarl
andl
je
and
mov
and
sub
and
mov
test
push
sbb
and
lret
jl
adc
inc
andl
lds
andb
xor
and
out
and
and
and
test
push
adcb
pop
lret
dec
jmp
or
inc
inc
and
rcr
xor
sbbl
mov
xchg
lret
icebp
hlt
scas
lahf
loope
bound
pushf
cli
pop
lock
enter
and
xchg
call
cmp
push
dec
or
and
lret
xchg
bndldx
cmp
sbb
fucomp
test
lds
or
ret
call
jp
movsl
xchg
xchg
push
mov
or
sbb
cmp
add
int3
add
faddl
push
sbb
iret
jne
shrl
push
fadd
mov
sahf
bound
mov
push
cmc
scas
jge
push
nop
sbb
mov
pop
sbb
push
bound
push
sahf
jne
mov
fisttps
push
movsl
jbe
aad
in
xchg
scas
aam
push
jg
cwtl
mov
inc
inc
mov
xchg
push
bound
sbb
adc
cmp
inc
test
test
in
bound
aaa
out
inc
repz
push
outsl
mov
jge
scas
adc
mov
jle
out
push
cmp
imul
jbe
icebp
pop
es
dec
sbb
rorb
push
push
gs
mov
xor
xchg
sbb
sbb
cwtl
inc
fdivrp
mov
or
sub
adc
mov
push
xchg
shlb
or
out
mov
dec
ljmp
shlb
jmp
push
and
adc
lods
aas
lods
mov
pushf
xor
lds
xchg
jge
icebp
shlb
lods
not
mov
inc
or
or
es
xchg
cmc
fsub
add
mov
or
insb
and
sbb
sbb
loope
xlat
fsubrs
inc
sbbl
push
stos
mov
imul
lock
fsubs
fidivl
mov
and
mov
sbbl
mov
aad
or
xchg
movsl
jecxz,pn
inc
je
sub
ss
ss
lock
loope
inc
cmp
dec
sub
or
ds
inc
cmp
jle
sbb
test
and
popa
es
jecxz
pop
xchg
lods
arpl
cmp
cmpb
pop
lods
faddl
mov
add
insl
adc
shll
dec
sbb
and
int
repnz
loopne
jo
movsb
lcall
or
fdivs
pushf
js
loop
push
mov
xor
dec
dec
mov
inc
mov
xor
mov
in
insb
daa
lcall
aam
jbe
repnz
pop
pop
push
jle
inc
sbb
into
dec
mov
out
inc
dec
sahf
mov
jb
adc
add
movsl
dec
or
popf
shr
or
test
data16
and
xchg
movsl
mov
cmp
je
aaa
mov
jmp
shll
leave
test
mov
pop
test
fidivs
sarl
pusha
mov
xor
mov
outsb
cwtl
mov
les
push
mov
pop
lods
adcb
fnstenv
cmc
int
loopne
shlb
popf
jo
xchg
pop
shlb
loope
shll
sbb
inc
mov
loope
rorb
aas
les
adc
bound
push
sbb
xor
add
push
mov
clc
fisttps
repnz
jle
cmp
pop
lret
mov
sub
test
inc
stos
jge
aas
jo
stos
cmp
aad
jle
imul
addb
out
sub
lcall
jl
js
pop
mov
stos
mov
add
outsb
cmp
adc
test
jl
sbb
and
pop
dec
mov
mov
jmp
loop
les
cltd
es
mov
call
cs
mov
sbb
xor
lds
cmpsb
movsb
into
mov
jle
add
mov
sub
or
pushf
mov
or
int
push
dec
cwtl
lds
mov
add
fstpl
js
loopne
adc
roll
push
push
mov
lds
or
dec
adc
pop
loop
push
cmp
cs
rorb
inc
je
jno
faddp
in
xchg
bswap
insl
fwait
insl
mov
mov
or
jge
outsl
xchg
jl
loopne
fsubrl
pop
adc
pusha
cmp
jns
pop
imul
and
jecxz
or
sbb
pop
repnz
adc
push
and
arpl
xchg
push
std
or
icebp
xchg
mov
and
pop
aad
rcl
push
sahf
mov
icebp
scas
cmpsl
out
xchg
pop
fwait
xor
and
jmp
xchg
xor
jle
jnp
out
test
pop
pop
cmc
mov
lds
push
in
sarb
or
sub
mov
test
inc
jmp
pop
mov
add
pop
pop
cmp
add
dec
enter
imul
fidivs
pop
sub
lock
test
push
mov
loope
leave
mov
xor
push
lret
sbb
aaa
pop
leave
mov
scas
mov
add
xchg
push
mov
les
mov
push
sub
jb
add
jmp
jns
ret
sti
and
jecxz
or
testl
pop
jl
and
stc
outsl
sbb
pop
pop
or
inc
int3
xchg
test
xchg
push
js
mov
rcl
jno
xor
imul
je
loopne
lea
imul
cltd
fcmovb
out
loop
cli
mov
lods
jmp
adc
jle
xor
pop
lds
outsb
jne
out
lret
popf
cmp
sub
mov
dec
adc
mov
adc
orb
flds
shrb
aam
fsubrs
jl
mov
cmp
sub
inc
adc
ja
iret
bound
jl
mov
push
mov
scas
notl
push
ret
mov
sbb
mov
xor
cmpsb
sub
movsl
cmp
push
mov
push
arpl
nop
rorb
pop
pop
mov
clc
xchg
adc
insl
insb
xor
xor
test
jae
add
push
test
mov
subb
and
mov
push
xchg
sub
push
fldcw
pop
adc
push
sub
inc
mov
dec
lret
subl
aad
gs
out
aas
outsb
xchg
mov
push
or
test
jmp
ror
pushf
mov
shl
addb
nop
adc
dec
adcb
shlb
cmc
scas
xchg
fisttps
push
pop
mov
icebp
loop
mov
adc
add
and
xchg
js
ljmp
js
xchg
out
xchg
mov
add
mov
sub
xchg
icebp
jb
xor
aad
stc
addl
jb
adc
out
cmp
insb
icebp
lods
scas
hlt
outsb
icebp
xchg
fsubr
mov
data16
divb
xchg
icebp
xchg
mov
adc
push
fimull
dec
out
mov
jae
std
push
sarl
jmp
popf
decb
stc
mov
push
xchg
cs
jmp
mov
stos
js
int
cld
adc
ljmp
or
xor
ds
jns
loop
or
xor
or
movsl
stos
cli
popa
dec
scas
adc
pop
mov
pop
xchg
cli
jns
in
int
xor
dec
std
jns
mov
rorb
test
or
mov
ljmp
rcll
test
outsl
mov
pop
cmp
subl
and
dec
cmp
mov
lods
inc
clc
hlt
test
jbe
sub
fsubs
cmpsb
cmp
xor
pminsw
push
pop
pop
outsb
gs
or
jle
outsb
lds
or
xor
outsb
xor
sub
outsb
xchg
pop
dec
out
test
inc
fwait
or
push
andl
push
int3
mov
push
out
rcll
push
in
mov
loopne
mov
insl
shll
mov
jecxz
jns
and
mov
or
test
pushf
mov
or
xchg
pop
outsb
test
or
or
int
roll
jge
push
push
cmp
push
jns
enter
enter
push
sub
push
gs
in
gs
divb
fmul
dec
sbb
pop
push
pop
push
xchg
or
mov
rcl
enter
imul
imul
jl
enter
imul
in
fsubrs
lods
fmul
ljmp
imul
xlat
imul
lret
shrb
pop
imul
xlat
enter
enter
imul
stos
fsubrs
out
imul
inc
ficoml
sbb
pop
ror
inc
add
and
icebp
mov
lods
mov
pop
add
daa
jnp
jecxz
and
cmp
out
ljmp
sarl
jnp
insb
jl
add
mov
xorl
jl
mov
xlat
jne
dec
jnp
adc
sarl
int
jae
fnstenv
jno
mov
fdivl
sbb
cltd
data16
xchg
jne
stc
fstp
jne
adc
mov
lods
pop
mov
ljmp
outsl
mov
push
sahf
lcall
inc
stos
das
push
and
loope
aad
or
pop
cltd
insl
cld
loope
sub
leave
in
dec
xor
pop
cwtl
pop
cmp
sbb
adc
mov
lods
push
xchg
add
sbb
lret
mov
lret
dec
lret
mov
jns
jmp
cmpsb
pop
sub
jg
jnp
popf
out
jne
and
jne
pop
jmp
inc
fwait
ljmp
adc
jne
dec
out
or
in
imul
in
leave
jns
jne
mov
jne
repnz
cmp
in
jne
push
jne
cmpsb
ljmp
push
jmp
dec
pop
ljmp
shr
jne
or
loope
sbb
shl
jge
in
int
in
fnsave
jno
mov
jno
in
jmp
lea
out
popf
gs
fucomp
jno
sbb
jno
push
in
lods
xchg
ljmp
or
jno
dec
mov
popa
mov
inc
or
dec
outsl
fistl
imul
insl
and
sbbb
in
sub
imul
ret
lods
pmullw
aaa
lds
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
