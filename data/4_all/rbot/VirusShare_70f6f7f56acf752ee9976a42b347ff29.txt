or
add
add
add
add
add
xchg
rorl
add
add
add
add
orb
add
add
adc
add
push
adc
add
add
add
add
adc
or
and
or
xor
or
inc
rorl
push
rorl
or
add
add
je
add
cld
rorb
pushf
rorb
or
or
mov
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
add
add
add
cld
add
add
add
add
add
dec
adc
add
rorl
bound
dec
xchg
fcompl
add
in
pop
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
dec
push
add
add
mov
sub
and
sbb
lret
xchg
nop
xor
aas
or
scas
push
sahf
jmp
mov
int
cmpsb
in
les
leave
cmp
push
jnp
in
sbb
std
sbb
xlat
adc
inc
lods
insl
xchg
dec
cs
and
mov
sub
hlt
mov
inc
mov
and
cwtl
dec
sub
sub
out
aad
or
mov
mov
mov
fiadds
push
pushf
pushf
fcomps
jns
cmp
das
pop
sbb
cs
jp
jmp
cmpsl
jbe
adc
sub
lods
mov
pop
dec
jbe
shl
push
icebp
xchg
cs
dec
fcoml
dec
je
ret
psubusb
cltd
lods
push
add
mov
pop
in
pop
or
xchg
fisttps
mov
in
fs
movsl
cmp
cmpsl
push
movsl
lea
pop
pop
enter
sbb
mov
dec
jae
and
aad
test
pop
mov
inc
mov
fucomi
or
rorl
xor
push
shll
sub
lds
into
xor
out
aaa
jns
js
loop
enter
mov
jae
out
cmp
mov
cmp
jecxz
rcl
aam
rclb
fildl
loopne
arpl
sub
mov
cli
mov
and
push
arpl
lods
push
inc
in
and
mov
and
shrb
into
mov
incb
jle
cltd
sbb
test
lods
add
in
int
stos
out
push
popa
test
xchg
pop
fwait
mov
xor
lods
inc
xlat
jle
inc
push
rcl
jp
lcall
outsl
faddl
icebp
cmpl
add
add
cmp
enter
ret
movsl
test
and
add
and
lods
enter
mov
xchg
test
movsb
sbb
jg
rclb
xchg
jns
jnp
popa
ret
test
cs
sbb
inc
out
jecxz
mov
or
sahf
adc
push
cmp
test
bound
insl
xor
mov
xlat
outsl
xchg
sbb
and
pop
and
push
and
fsubrs
push
adc
jp
jb
repnz
jecxz
add
lock
sbb
mov
das
or
jbe
xchg
pop
lea
test
pop
and
stc
fistpl
push
enter
xchg
fsts
decb
inc
push
dec
rcrb
xlat
xchg
sbb
jecxz
sub
lcall
pusha
mov
mov
xchg
push
int3
xchg
iret
add
mov
mov
lods
sbb
mov
sub
ds
popa
cmpl
les
xchg
sbb
sub
test
pusha
pop
add
add
test
push
mov
stos
mov
pop
insb
lea
pop
mov
jge
lods
adc
enter
dec
mov
add
dec
cli
jmp
push
lds
push
aam
cld
mov
cmp
js
or
test
mov
cld
and
in
dec
ss
push
test
add
sarb
cli
fstps
xorl
mov
or
mov
or
cmp
mov
push
mov
push
cli
popa
cltd
insb
xor
push
outsb
ja
mov
mov
leave
movsl
stos
in
iret
pop
dec
or
adc
cli
jne
mov
subb
jno
mov
jge
repz
adc
repnz
cmp
jmp
and
push
test
mov
mov
pop
les
xchg
mov
pop
mov
stos
fs
lock
dec
jae
psrld
mov
scas
orb
call
pop
hlt
sub
pusha
fimuls
cs
shrb
movsl
in
out
cwtl
jb
and
mov
test
arpl
and
icebp
shll
pop
mov
add
fcoml
push
pop
adc
xor
enter
pop
loop
daa
jg
mov
icebp
push
sti
dec
xchg
pop
in
bound
mov
push
sbb
aad
mov
sarl
push
sub
cmp
scas
mov
push
inc
fs
jbe
es
pop
push
pop
repz
fadds
sub
cmp
pop
sbb
aaa
inc
loope
nop
rcr
mov
lock
cmpl
inc
cmpsl
jp
cmp
cmp
push
mov
icebp
jg
xchg
decb
ficoml
aam
xchg
push
cs
in
subl
jns
int3
mov
adcl
xchg
add
push
movlps
adc
out
xor
daa
jecxz
pop
xlat
adc
test
inc
xlat
loopne
test
add
pop
dec
pop
imul
loop
pop
fcomps
add
xchg
rorb
enter
add
pop
sbb
int
mov
scas
in
shlb
in
jp
mov
dec
push
or
daa
outsl
arpl
stc
mov
aas
loopne
pop
push
mov
cmc
xor
ljmp
mov
xlat
add
add
sarl
hlt
in
sub
mov
cltd
cld
jge
pop
incl
mov
xor
sbb
sarb
enter
mov
pop
inc
mov
bound
add
insb
jno
repz
lret
sub
inc
inc
movsb
scas
push
std
shlb
sbb
loop
inc
mov
sub
mov
or
stos
lock
out
or
jl
pop
inc
push
mov
xchg
cmp
push
fwait
in
xor
mov
adc
or
sub
sub
dec
or
adc
out
stos
negb
mov
adc
icebp
lret
sub
dec
jmp
pop
or
dec
or
xchg
out
dec
shll
jp
mov
jo
inc
cmc
call
inc
and
sahf
jecxz
adc
mov
cld
es
jge
pop
ss
cmp
dec
mov
and
dec
dec
cmp
into
in
aam
fmull
clc
xor
in
jmp
push
xor
push
sbb
icebp
hlt
pushf
adc
jp
pop
cmp
sbb
adc
push
lds
xchg
add
daa
inc
mov
int
enter
test
cli
add
mov
inc
shlb
dec
adc
mov
fstl
or
and
addr16
dec
out
lahf
xchg
lahf
mov
lock
and
lret
mov
xchg
mov
push
pusha
sub
mov
test
push
gs
loop,pn
cwtl
adc
cmp
cltd
jo
fimuls
test
insb
sub
fs
push
xor
pushf
int3
ljmp
ds
mov
inc
icebp
dec
xchg
jecxz
inc
push
dec
je
aaa
jo
or
enter
scas
adc
test
add
dec
dec
add
mov
outsl
xchg
add
push
dec
lcall
rclb
cmp
push
loop
les
test
ljmp
aaa
mov
pop
ljmp
inc
in
mov
push
movsl
addb
rorb
push
pop
or
lods
scas
les
popf
scas
mov
dec
xor
xor
push
cld
addr16
mov
sti
inc
or
mov
int
in
stos
imul
jae
push
mov
cmp
addr16
sbb
xchg
jp
or
inc
stc
pop
xor
es
stos
and
fildl
shrl
inc
xchg
pop
cmc
rclb
mov
jns
clc
nop
int
jmp
cmp
cmp
xchg
mov
cmp
fidivrs
push
jno
pushf
push
or
mov
and
int
in
push
push
addr16
iret
popa
push
orps
jmp
mov
repz
test
jnp
clc
gs
xchg
xchg
xor
cmp
dec
pop
lret
loope
pop
inc
jo
aam
rclb
push
xchg
arpl
pop
xchg
test
bound
rolb
call
and
push
lahf
and
mov
xchg
inc
pop
fidivs
sub
test
data16
insl
stc
mov
sbb
add
cmp
pop
fnsave
in
mov
sub
daa
lods
mov
sub
inc
pop
dec
fstp
mov
adc
jge
lods
popa
sub
push
test
ds
pushf
add
call
push
cli
or
xchg
xchg
sub
xor
xchg
cmc
enter
das
cmp
pop
subl
lret
sbb
pop
sti
jmp
lods
mov
push
pcmpeqb
repz
loope
lret
jns
ret
adc
out
jge
xlat
adc
adc
repz
xchg
push
cmpb
clc
pushf
mov
dec
lods
aad
outsl
out
cli
scas
adc
lock
inc
outsb
fstpt
mov
add
jnp
stos
jecxz
sub
mov
addr16
jmp
sahf
mov
mov
jl
int
inc
cld
sub
jo
scas
dec
dec
imul
int3
dec
push
call
adc
sbb
clc
scas
arpl
xchg
sbb
jne
mov
cmpsb
sub
cmp
mov
bound
mov
cmp
repz
cmc
das
sub
sub
scas
nop
xor
mov
add
lock
inc
movsb
scas
jmp
pop
nop
lahf
fildl
mov
dec
dec
xor
js
push
loop
and
mov
mov
add
enter
clc
and
xchg
push
das
push
data16
clc
mov
fcomps
out
lea
mov
stos
cmp
in
mov
test
mov
je
inc
mov
jo
hlt
sub
mov
fisubrl
leave
push
dec
das
jae
sub
popa
dec
mov
dec
shl
mov
mov
mov
iret
adc
or
cmp
scas
lods
into
sbb
rorb
push
in
rorl
mov
xor
cmc
push
add
lret
in
mov
repz
mov
add
jecxz
pop
aam
fcmovbe
out
fnsave
les
loop
dec
jb
cmp
push
outsl
mov
divb
leave
out
shrb
push
jne
add
rorb
push
sub
cmpb
jp
fsts
sbb
xchg
lods
lds
xor
pop
lock
insl
dec
lret
or
adc
clc
outsb
ret
xor
fmull
sub
jns
insl
shl
push
sub
cmpl
jne
loop
movl
push
int3
mov
adc
movsl
loop
fiadds
pop
pushf
xchg
pop
jl
jmp
mov
jns
fiaddl
sub
adc
dec
mov
repnz
mov
cmpsl
lds
lods
daa
jno
lret
add
popa
fsub
dec
lret
sbb
push
xchg
aam
add
sbb
pop
mull
popa
outsb
insl
jg
cltd
jmp
xchg
mov
test
fwait
xlat
or
mov
or
add
es
jmp
leave
lcall
insb
lcall
nop
test
movsb
outsl
sti
pushf
in
inc
adc
ret
mov
add
les
pop
arpl
and
fcompl
aad
add
les
sub
addr16
pop
sahf
push
das
mov
ret
outsb
sub
out
fimull
xchg
rcll
mov
out
insl
xchg
mov
shlb
xor
dec
mov
xchg
dec
add
dec
fstpl
push
and
jg
ja
fcoml
push
fsubrl
mov
pop
cmpsl
ret
jae
scas
sub
cmp
push
mov
gs
aaa
or
dec
hlt
pop
insl
pop
push
insb
xchg
loop
sbb
lods
rcl
ss
addr16
pop
cli
fldl
lsl
fistpl
aad
and
bound
sahf
subl
mov
mov
mov
mov
or
or
mov
cs
cmp
adc
fistpll
adc
rclb
and
cs
aam
dec
jne
xlat
xchg
in
mov
sbb
dec
int
xlat
fldt
leave
adc
jb
pusha
sbb
jmp
add
pop
mov
pop
and
xchg
sub
mov
mov
dec
mov
lock
xor
mov
int
jp
outsl
mov
cltd
and
shr
movsb
scas
lret
shlb
push
scas
push
test
xor
rcrl
in
lahf
jl
lock
ja
sub
repnz
push
sbb
pop
add
push
movb
pop
stos
and
fld1
gs
mov
dec
popl
andb
sbb
push
sub
insb
stc
jecxz
mov
push
xchg
imul
mov
dec
das
pop
jle
mov
shrb
ret
addb
pand
jo
clc
outsb
aam
mov
bound
mov
jp
lret
mov
jb
mov
xor
mov
mov
in
lret
lea
out
jge
or
cmp
popa
repz
mov
pop
push
cmc
or
fisubrl
add
icebp
mov
cmp
pop
mov
push
fists
fdivrp
nop
cwtl
fstps
push
pop
cmp
mov
imul
insb
pop
xor
sbb
sub
es
xchg
inc
pusha
mov
nop
in
jo
insb
and
mov
xchg
pop
xor
test
mov
add
inc
add
or
dec
leave
test
test
lret
mov
push
incb
test
ljmp
scas
add
movsb
mov
mov
or
push
cmc
pushl
shl
mov
rorl
push
sbb
out
xchg
call
dec
and
mov
cmp
cltd
inc
or
cwtl
pop
sbb
add
mov
inc
subl
cli
scas
dec
mov
lahf
mov
pop
mov
addr16
pop
int3
xlat
inc
sarl
push
into
push
add
bound
in
out
ficoml
test
ret
pop
outsl
movsl
dec
fsubr
push
sub
jp
pop
jno
popf
mov
mov
je
sahf
jmp
insl
pop
test
sti
rolb
push
cmp
call
jbe
fcomip
stos
pop
dec
jl
push
rclb
loope
push
xor
call
rcll
inc
in
pop
jmp
mov
sti
sbb
loop
mov
xchg
repz
pop
bound
and
xor
mov
mov
loope
inc
or
in
and
mov
mov
rcrb
xor
ret
inc
sbb
in
popf
popa
mov
out
jns
arpl
stos
xor
test
ljmp
sarl
jbe
adc
xchg
in
fmuls
xor
lds
mov
mov
xlat
cs
jne
xlat
lock
add
fs
test
and
or
dec
or
cmpsb
std
mov
xchg
push
cmp
aad
mov
pop
aam
jl
add
loopne
adc
repnz
push
fucom
lock
inc
mov
stos
pusha
mov
mov
cmp
add
push
cmpsl
xor
andb
adc
lahf
aaa
inc
ret
inc
clc
fsts
add
int
sub
push
sbb
lods
das
jne
loope
xchg
test
shll
stc
sub
lods
gs
inc
mov
in
push
and
xchg
sub
notl
add
leave
repnz
xchg
cli
out
push
aas
repz
stos
pusha
scas
addr16
jb
repnz
jg
xlat
loop
and
icebp
imul
lods
hlt
shrb
aaa
cmp
sarl
dec
mov
cltd
mov
test
adcb
inc
cmpsb
lahf
lea
pushf
ja
jae
dec
cmp
and
lock
inc
mov
jmp
mov
xchg
fwait
iret
fstpl
inc
in
adc
xor
xchg
std
jle
jnp
jae
sti
test
in
xchg
jp
stos
jae
adc
test
fidivl
or
inc
xchg
dec
xchg
call
adcl
clc
shll
pushf
repnz
ljmp
repz
jo
jmp
inc
mov
dec
cmp
std
loopne
scas
insb
popa
or
mov
lock
aas
lods
push
fbld
jno
xor
shrb
sbb
fwait
loop
or
scas
jp
fsubs
jbe
test
add
jmp
mov
sti
pop
lcall
dec
xchg
mov
enter
loop
std
cmpsl
mov
push
and
pushf
cwtl
int
mov
sub
lods
shll
xor
popf
movsb
xchg
push
xor
mov
dec
rcrb
xor
cmc
mov
push
sub
fadds
push
mov
sahf
push
jmp
test
repz
jne
repnz
pop
into
jbe
mov
lahf
dec
enter
sbb
cld
push
int
sbb
push
loope
push
movsb
dec
jae
fidivl
sahf
repz
lods
iret
pop
shlb
addl
js
add
push
push
adc
pusha
mov
mov
sub
pop
pop
in
sub
int3
dec
inc
xchg
orb
push
push
shlb
pop
popf
movsl
repnz
push
fadds
xchg
les
sub
cmc
and
jg
out
jp
jp
stos
sub
repz
les
or
outsb
mov
sarb
lods
pop
mov
cmp
sub
mov
jbe
lea
adc
dec
xchg
pop
icebp
in
notb
lock
inc
in
lock
push
inc
xor
and
push
sub
and
stos
push
pushf
jnp
je
jge
shlb
xchg
and
mov
jne
stos
adcb
leave
int
inc
aam
pushl
cltd
popl
xchg
in
mov
fisttpl
imul
pusha
jno
es
jmp
jg
mov
jbe
es
popa
pop
shr
push
xchg
add
sbb
jne
fmuls
pop
xor
jge
roll
xchg
lods
sbb
outsl
cmc
xlat
sahf
add
aad
xor
sub
mov
fmull
jne
in
aad
sub
shrl
and
or
cwtl
enter
xor
dec
sub
rolb
call
adcl
xchg
xlat
mov
shrl
lea
loope
cmp
pop
dec
cld
jmp
sub
out
cmpps
inc
mov
xor
test
je
ljmp
in
aaa
psubsw
addl
sub
loopne
push
push
cmp
lods
jno
lahf
or
fdiv
pop
cld
idivb
or
sbb
loop
into
add
pop
js
std
and
sub
push
jmp
out
jle
adc
xor
push
out
lods
push
mov
popa
and
fidivrs
imul
jb
nop
fs
cmpsb
pop
fidivl
movsb
push
mov
or
cmp
comiss
jbe
popa
mov
inc
mov
push
mov
cmp
pop
or
sti
fwait
cmp
inc
pop
adc
cwtl
cmp
mov
ret
xchg
scas
xlat
or
mov
rorb
stc
ds
icebp
ja
xchg
push
adc
in
jbe
out
push
xor
aam
xchg
lods
pop
pop
inc
cs
dec
push
mov
jb
mov
in
push
fwait
repz
xor
sub
jmp
stos
mov
stos
lcall
mov
or
fistpll
test
out
pusha
bound
gs
add
adcl
test
sbb
out
or
orb
out
bound
addr16
in
xchg
fsubrl
fdivrs
xchg
dec
in
lahf
cmpsb
push
int
leave
sbb
mov
es
and
arpl
cwtl
lds
out
popf
mov
arpl
xchg
sub
pop
jp
pop
stc
cmovs
add
movsb
or
cmp
fnstsw
pop
stc
stos
test
enter
js
inc
sub
repnz
jnp
jb
ret
cmp
mov
fsubrp
in
pop
adc
movd
scas
fmul
in
mov
outsl
daa
test
push
pop
sarb
scas
sbb
xchg
hlt
pop
out
inc
out
inc
xchg
xchg
stos
jmp
jno
mov
fs
scas
aaa
rcll
add
and
mov
stc
mov
mov
mov
push
jmp
xchg
test
lret
or
push
jne
push
cmp
stc
push
mov
jle
mov
cmpsl
inc
adc
mov
ror
and
add
xchg
and
jb
leave
adc
mov
insb
pop
dec
cmp
mov
jle
jp
fs
aaa
lret
cmp
mov
arpl
pop
cwtl
xchg
out
in
imulb
clc
inc
aad
mov
jnp
add
sbb
jg
mov
jge
dec
movsl
or
pop
in
xchg
ss
push
hlt
loop
adc
shlb
jo
outsl
sbb
pop
lock
aam
or
orl
mov
fwait
or
xchg
pop
xchg
je
out
or
sbb
mov
jne
data16
lods
inc
icebp
ljmp
clc
int3
out
scas
push
or
cvtdq2ps
adc
rol
xchg
insl
stos
push
adc
push
xchg
lods
jb
loop
dec
shrb
lcall
paddusw
lcall
cmpsb
and
cld
dec
inc
iret
xor
popa
push
subl
cltd
std
ds
call
cld
dec
es
mov
cltd
jae
outsl
inc
stc
dec
mov
inc
mov
mov
shll
xchg
push
push
and
inc
enter
repz
cmp
adc
lcall
stos
mov
movsb
in
mov
cmp
adc
mov
jnp
xchg
jg
mov
stos
call
out
cmp
lcall
mov
or
imul
ja
and
pushf
je
shlb
xor
pop
fs
notl
nop
mov
pop
dec
movsl
add
push
xchg
jns
mov
jmp
sahf
fisttpl
add
cltd
mov
pop
or
adc
outsb
call
mov
stc
rcll
or
xor
jne
adc
stos
xchg
sti
pop
test
jmp
cmpl
insl
xchg
mov
mov
repnz
js
stc
xchg
cmp
inc
cmp
dec
adc
sub
scas
sub
shlb
adc
adc
call
cli
push
clc
xor
inc
add
push
lods
dec
sub
stc
jns
movsb
clc
mov
push
or
sub
xlat
cmp
or
into
xlat
dec
mov
int3
xchg
or
inc
pop
mov
adcb
sbb
xchg
jno
sub
sbb
out
js
dec
ret
rcrl
sub
adc
lahf
test
negb
movsb
inc
or
jg
shrb
sahf
mov
les
pop
cwtl
adc
dec
sub
fdivrs
fnstsw
lock
mov
jg
or
xor
cmpsb
into
xor
pop
cmp
inc
fs
sub
cmp
outsb
cmp
lea
out
jecxz
lret
jg
xlat
inc
hlt
repnz
sub
xorb
ja
in
sbb
sub
aad
dec
es
les
pop
imull
rclb
dec
pop
inc
fwait
pop
cli
pop
push
es
lret
pop
jb
sbb
sahf
adc
jae
test
xor
add
mov
fdivrs
jp
mov
sbb
adcb
xchg
ret
pop
outsb
sub
adc
and
and
mov
aas
insb
pop
ds
mov
jno
and
pop
push
push
push
xor
cmp
mov
iret
sbb
bound
hlt
or
vmwrite
mov
ja
movsb
ret
inc
shl
int
test
mov
pop
mov
xor
test
int3
setne
mov
ljmp
and
out
pop
pop
addr16
pop
cld
out
inc
in
or
ds
inc
mov
roll
repz
cmpsb
fsubp
je
cmc
les
or
xchg
cltd
xor
lods
push
jp,pt
ss
add
in
sub
outsb
jge
pop
mov
jo
loop
adc
test
fwait
pusha
test
movsl
pop
shr
pop
pop
jl
mov
sarl
insl
mov
outsl
pop
and
mov
cld
mov
mov
icebp
lcall
outsb
je
fidivrs
repz
mov
add
dec
adc
or
loopne
dec
xor
test
and
xchg
inc
inc
ds
mov
lock
mov
rcrb
imul
mov
cmp
loopne
outsb
in
jle
or
xor
inc
ja
into
add
aas
xchg
pop
shrl
ret
xor
mov
cmpsl
inc
cs
add
jb
pop
mov
xchg
mov
add
cmc
cmpl
cmp
xchg
lods
fildl
lds
mov
fmuls
jecxz
out
fldlg2
mov
dec
fbld
stos
lods
stc
pop
ja
loope
lret
pop
xor
jge
in
mov
and
fidivl
imul
incb
xor
movl
leave
fisubrs
jns
xor
adc
pop
cmp
dec
mov
sbb
sbb
pop
sbb
jne
jle
mov
pop
test
addr16
ss
cli
push
jg
js
or
push
out
int
les
push
xor
insl
adc
loop
cmp
pop
pop
dec
fs
push
aas
add
insl
push
pop
mov
adc
mov
pop
inc
jo
mov
rorb
nop
xchg
jecxz
inc
mov
mov
imul
push
subb
shr
mov
leave
dec
jge
nop
movsb
mov
jp
push
das
ret
mov
arpl
adc
fstpt
popa
leave
mov
xor
popf
dec
stos
cltd
pusha
sub
push
rolb
adc
mov
mov
iret
les
sbb
test
sahf
ret
adc
push
lahf
push
lods
loop
mov
insl
inc
sti
cmp
and
pop
sub
shll
sbb
jbe
inc
shll
scas
out
fs
call
fdivl
rcl
arpl
roll
test
xor
cld
cwtl
insl
rorl
daa
mov
sbb
lock
push
pop
pop
xor
ret
dec
dec
out
or
int3
and
jne
push
test
jo
xor
xchg
xchg
outsb
inc
inc
cli
out
xchg
push
jnp
fwait
mov
daa
mov
jno
lds
add
shll
bound
lock
inc
mov
and
ds
xor
push
mov
push
fildl
xor
cmp
sbb
or
lahf
sub
sbb
jge
bound
mov
das
pmaxub
jae
mov
jae
sahf
sbb
inc
mov
cmpsl
leave
inc
movsb
mov
xor
or
loope
lods
push
daa
movsb
mov
mov
fwait
adc
in
sub
insb
lock
fimuls
leave
or
leave
cltd
xchg
mov
cmp
int3
add
adc
bsf
adc
and
mov
addr16
push
cmpsb
xchg
mov
and
adc
sbb
cmp
movsb
cli
mov
stos
xchg
mov
pop
or
mov
or
addr16
sub
lods
xchg
fadds
je
xchg
mov
inc
pop
dec
pop
in
inc
test
cmp
jl
into
int3
mov
push
idivl
sbb
xlat
pop
out
mull
mov
and
pop
xor
inc
movsl
push
es
stos
and
dec
ss
adc
cmc
in
std
out
xor
filds
pushf
and
rorb
int3
scas
outsb
add
jae
loope
loope
cmp
cmc
jle
pop
call
push
xor
adc
xor
bound
jge
cmc
cwtl
mov
les
out
xor
popa
and
jb
movsb
adc
cmpsl
push
dec
stos
ret
fs
xchg
push
push
mov
in
inc
add
out
frstpm(287
or
mov
into
stc
jle
int
mov
cmp
icebp
cmp
jb
dec
outsb
sub
adc
ret
mov
sarl
xchg
rcrl
sbb
push
into
jecxz
fistps
iret
xchg
sbb
int
mov
sub
sbb
inc
lret
mov
int
cmp
jo
inc
clc
xchg
mov
lods
mov
xchg
mov
enter
cltd
aam
decb
add
jb
lock
pop
jecxz
sub
mov
add
cmp
cmp
jge
lcall
pop
shll
shll
mov
pop
ficomps
xor
push
rcr
arpl
mov
xchg
adc
lds
je
jl
jmp
lods
scas
sbb
pop
pop
insb
adc
das
arpl
arpl
jmp
subb
sbb
in
pop
hlt
mov
sti
inc
jnp
sub
negb
mov
xchg
push
mov
sub
or
lock
es
cmp
adc
xor
inc
fstps
add
jnp
ret
pusha
movsl
movsl
sbb
adc
inc
add
sub
jnp
rclb
in
mov
arpl
push
pop
subb
imul
enter
sbb
xor
sbb
sbb
outsl
lods
mov
push
inc
push
repnz
sbb
lea
in
jnp
ffreep
in
sbbb
push
jle
jle
pop
jb
jno
mov
jnp
jl
and
or
mov
lea
imul
repnz
sarb
outsl
outsb
ljmp
int3
inc
push
stos
popf
bound
push
out
sti
xchg
cmp
ljmp
div
sub
arpl
jge
in
sbb
shrb
dec
adc
pop
add
mov
inc
int
pop
fstpl
std
mov
and
cltd
pop
xchg
dec
into
mov
cmp
inc
mov
mov
int3
inc
outsb
jnp
sbb
mov
and
mov
bound
dec
fidivl
lock
sti
pusha
jnp
pop
add
jb
pop
mov
add
jae
xchg
xchg
pop
enter
repnz
push
sub
test
xor
and
cmp
xchg
and
xchg
out
sub
add
push
inc
mov
cld
movsb
or
push
jge
sub
faddl
sub
cmp
lods
bound
cmc
mov
mov
bound
push
negl
mov
scas
imul
and
es
fildl
and
repnz
mov
jb
mov
xchg
jmp
movsl
fstl
out
sub
ss
fdivrs
stos
adc
rolb
or
aam
cmp
adc
sahf
inc
in
mov
sub
inc
rcrb
aaa
jmp
mov
stos
push
out
and
lock
mov
xchg
push
adc
cwtl
rcrb
dec
sub
cltd
rol
push
movb
sbb
in
xorb
mov
out
or
xchg
dec
pop
cmpsb
cwtl
aam
xchg
imul
cmp
mov
fcomi
jae
mov
cmp
adc
cld
lock
test
es
xorl
push
cli
dec
adc
adc
jnp
jbe
xor
push
lock
call
pop
stos
loop
pop
aaa
add
lret
popf
rcl
sbb
jle
sbb
push
js
sbb
lock
mov
and
dec
mov
sub
lahf
add
test
ds
je
dec
jne
xor
test
xchg
jbe
mov
lods
sub
insl
lds
sbb
jnp
pop
adc
mov
fstpt
shlb
cltd
cmp
mov
cmpsl
xchg
mov
out
adc
fisubl
out
outsb
xchg
lods
aam
sbb
cli
xchg
inc
xor
in
add
xchg
outsb
fwait
or
and
inc
mov
pop
mov
and
idivl
push
not
or
mov
push
jmp
imull
getsec
adc
cltd
into
adc
cltd
jb
arpl
divl
in
adc
test
inc
xor
scas
dec
pusha
mov
xor
xor
lods
mov
cs
imul
imul
or
push
popf
xchg
icebp
mov
iret
adc
sub
push
repnz
inc
or
stos
loopne
jbe
sub
dec
insl
cli
shll
mov
sub
mov
aas
inc
inc
sub
cmp
lds
xor
mov
jns
aaa
xlat
mov
and
pop
push
add
decl
add
add
jne
inc
mov
cmp
adc
push
lods
add
and
fdivr
adcb
popf
int3
lods
jecxz
xchg
sbb
sbb
push
xlat
mov
lods
cltd
add
test
cmpsl
push
mov
jb
push
icebp
or
scas
in
adc
xor
mov
mov
aaa
sbb
lret
jb
pusha
fdivrs
loop
test
push
sub
pop
dec
xchg
dec
out
push
dec
jmp
pusha
fistl
test
xchg
insl
addr16
jnp
xchg
in
pop
sbb
push
mov
fwait
xchg
mov
and
jg
outsb
test
in
adc
xchg
mov
or
inc
inc
jmp
idiv
stos
call
push
pop
nop
sbb
xor
or
scas
add
lcall
setge
xor
push
scas
mov
stos
sub
push
inc
fldt
loopne
loope
pusha
or
dec
sarl
aad
pop
hlt
dec
fs
cmp
xchg
mov
or
xor
popa
call
clc
loopne
add
out
mov
dec
test
pop
mov
sbb
lret
lret
inc
add
mov
cmc
xor
jbe
call
out
mov
int3
data16
subl
sub
mov
dec
fisubl
adc
xor
jns
out
adc
insb
xor
inc
and
sub
xor
loopne
cli
sbb
pop
clc
xor
das
cmp
hlt
mov
lock
dec
fadds
insl
daa
enter
push
and
inc
mov
loop
adc
inc
outsl
filds
pop
jmp
jecxz
inc
outsb
insb
sub
sbb
movsb
push
insb
mov
movsl
mov
ficoms
and
xchg
test
gs
repz
aam
or
push
imul
push
fisttpll
jne
scas
in
shll
jp
in
repnz
jmp
push
in
xchg
pop
pop
mov
int
aas
idivl
jmp
in
es
in
adc
inc
sarl
inc
lret
sub
adc
cmc
or
fstps
cmc
les
mov
stos
mov
xchg
icebp
mov
xchg
pop
fidivs
and
ret
cld
dec
mov
mov
adc
sub
push
push
mov
sahf
arpl
shlb
mov
adc
les
test
pop
outsl
jnp
pop
in
jnp
pop
xor
pop
jbe
scas
inc
das
lock
push
mov
sub
mov
iret
dec
shll
mov
repnz
adc
add
and
das
xchg
xor
iret
xchg
pusha
outsb
out
jge
cld
xchg
xor
data16
faddp
std
add
jl
push
iret
push
jle
sub
mov
add
pop
pop
dec
bound
sub
ret
jmp
or
xor
jmp
sub
xchg
push
nop
jbe
lea
sbb
sbb
and
lahf
shlb
sub
adc
cwtl
bound
adc
add
test
and
xchg
loope
sbb
adc
addr16
mov
jmp
test
in
data16
loope
add
repz
adc
incb
lods
add
jbe
jbe
cmp
add
inc
hlt
mov
cmpsb
sub
sub
xlat
addr16
loope
xor
push
adc
movsb
mov
sub
xchg
mov
dec
mov
or
gs
rorl
adc
loope
push
push
jmp
movsb
add
inc
ljmp
add
mov
arpl
movsl
shrb
popf
add
push
mov
push
add
fildl
inc
cld
iret
fisubs
fsubrs
insl
loop
push
sahf
daa
pushf
cmp
xor
loope
ljmp
pop
sbb
scas
adc
mov
push
pop
scas
into
mov
je
outsl
test
pushf
lods
lds
and
xor
daa
ret
out
insb
popf
in
aad
imul
icebp
sub
jmp
lds
lds
xchg
mov
movsl
sbb
xchg
imul
cmp
jbe
int3
popf
test
decl
add
stos
xorb
xchg
mov
or
jne
punpckhwd
pop
dec
inc
nop
lds
sti
push
mov
adc
pop
xor
scas
dec
cmpb
mov
jl
pop
or
sahf
sbb
lahf
pop
jb
jbe
push
adc
and
jmp
sbb
pop
incb
cltd
dec
cmpsb
orb
xorl
lcall
push
sub
shlb
pop
push
andl
inc
addr16
inc
push
sub
mov
scas
ret
mov
fsubrs
cwtl
sub
rcll
test
dec
jnp
mov
push
clc
outsl
inc
test
mov
xor
lcall
sbb
imul
push
pop
orb
sub
mov
nop
in
dec
mov
jnp
adc
out
insb
pop
shll
aad
sub
jno
int
mov
daa
mov
mov
stc
sub
pop
gs
add
or
adc
scas
data16
out
cmp
push
addr16
inc
mov
push
jne
add
mov
fbstp
repz
mov
xchg
dec
xchg
icebp
jb
imull
rclb
or
insb
scas
out
scas
jnp
xchg
lds
iret
outsb
dec
lods
scas
and
arpl
into
cmp
mov
cmp
cli
cmp
mov
mov
fistl
cmp
adc
xor
lcall
js
dec
lock
or
fwait
cs
fidivrl
lods
pop
nop
inc
xor
cmp
xchg
mov
lret
jnp
popa
lret
pop
jae
pop
cmp
jge
lds
push
cmp
jnp
repz
aam
fmull
mov
cmp
mov
hlt
mov
xchg
push
jbe
loopne
mov
mov
repnz
std
fildll
roll
in
lock
sbb
sub
test
mov
push
or
loopne
cwtl
stc
pusha
into
xchg
in
cmp
add
subl
xchg
push
push
nop
xchg
xchg
push
and
cmp
inc
xchg
outsl
pop
mov
imul
add
fwait
cwtl
je
xchg
adc
mov
mov
pop
sbbb
pop
fs
xor
xchg
insl
lret
push
outsl
inc
push
jge
lods
jb
jne
mov
jo
loop
adc
inc
ud1
jb
enter
inc
xchg
int3
mov
hlt
insl
mov
les
in
mov
js
out
cmpl
call
daa
push
outsl
aad
jno
es
rcl
shrb
shrl
sub
cmp
jns
ficoms
enter
and
scas
dec
call
inc
outsb
pop
pop
mov
jb
sub
and
pop
xor
xor
repnz
jmp
push
cwtl
jp
or
das
sub
iret
cmp
jnp
jmp
lret
std
js
mov
aam
cmp
enter
int3
adc
hlt
loopne
aad
fimuls
sbb
dec
xchg
mov
inc
andl
pop
adc
adc
std
pop
subl
dec
je
inc
leave
sub
fsubl
cli
and
dec
gs
mov
mov
int3
mov
mov
mov
je
inc
xor
movb
aas
add
jmp
xor
mov
xor
push
push
lret
loop
add
aas
xchg
outsb
xor
or
sbb
icebp
mov
mov
dec
int3
movsb
fnstsw
push
shr
adc
jl
pop
daa
push
adc
or
lcall
dec
repnz
call
repnz
nop
arpl
push
ja
stc
std
or
nop
add
push
lret
je
mov
xor
mov
mov
adc
pop
cmp
push
arpl
sub
ljmp
orl
into
sub
adc
gs
dec
out
aaa
push
rclb
lock
add
adc
mov
ss
aad
xchg
add
and
ss
inc
mov
pop
iret
icebp
data16
mov
jno
aaa
mov
sbb
pushf
pop
mov
jmp
je
fwait
and
ja
fcmovbe
fstl
daa
inc
or
sbb
xchg
push
ret
ja
lret
stc
cwtl
add
aad
insl
imul
test
xlat
inc
call
movsb
fcomps
push
pop
fisubrl
sub
loop
cmpsb
jle
adc
les
and
test
shrl
out
cwtl
std
jns
pop
pop
pusha
adc
outsl
push
sti
dec
js
push
das
xchg
jecxz
xor
add
andb
cwtl
and
adc
imul
lds
repz
xchg
testl
cmpsl
jg
pop
test
mov
sbb
adc
hlt
data16
out
outsl
les
scas
mov
inc
xchg
clts
mov
into
mov
popf
cmp
cmpsb
mov
xor
pop
cmc
jge
mov
mov
shrb
add
in
daa
cmp
cmp
int
xor
inc
jmp
mov
testl
jmp
push
push
mov
add
mov
mov
sub
in
loop
push
cmpl
add
push
pop
jle
push
loope
dec
or
dec
sub
xchg
subl
jb
adc
icebp
cmp
mov
cld
cmp
ja
mov
popl
std
pop
out
push
out
jl
pop
inc
and
lcall
lds
shlb
or
shlb
pop
test
sbb
mov
js
movsl
vmwrite
inc
jno
jae
xchg
pop
or
gs
adc
push
shlb
fidivs
lret
mov
daa
sbb
lahf
repnz
pop
outsl
jo
ss
push
shlb
xlat
mov
cli
and
xor
ss
es
sub
and
pop
xlat
stc
and
xor
out
push
movsb
icebp
cmpsb
sbb
lods
sbbl
arpl
arpl
ja
xor
push
rclb
or
in
out
pop
mov
out
and
push
mov
clc
adc
js
cmp
or
xchg
dec
cltd
fistpll
outsl
std
jne
xorl
in
push
jb
movsb
movsb
shrb
mov
rolb
xor
mov
in
ficompl
inc
fimull
sub
adc
clc
add
mov
push
repnz
add
repz
out
repz
ss
cmp
jnp
inc
cmp
sub
inc
shrl
stc
push
inc
hlt
lods
lret
lea
sub
dec
mov
insb
adc
ljmp
cwtl
xchg
push
sbb
leave
pop
out
add
cmp
push
dec
mov
or
pop
dec
jmp
push
push
jne
divb
pop
imul
test
movsb
js
popa
cmp
jno
xor
js
rolb
js
repz
fnsave
adc
fxtract
sbb
xchg
pop
add
sbb
rol
adc
and
nop
jmp
mov
adc
js
jae
push
mov
or
in
xchg
xor
les
jb
and
dec
fisubrl
dec
lcall
or
xor
add
or
or
add
aaa
daa
loopne
or
dec
sub
or
mov
cmpsb
mov
mov
ja
fisttpl
insb
ja
iret
test
ret
scas
lcall
pop
jb
stos
jle
xor
mov
std
mov
daa
testb
pop
sub
inc
or
or
shl
push
in
xor
and
movsbl
stos
popa
add
insl
lret
mov
jnp
outsb
aas
jecxz
sbb
cmp
mov
mov
lods
cmp
ljmp
xchg
push
add
cmpsb
fwait
test
inc
lods
fmul
dec
mov
mov
fistps
fyl2x
pop
mov
lea
or
dec
mov
test
or
cmpsl
mov
dec
rcrb
lret
rcrb
fnsave
ficompl
outsb
adc
xchg
or
enter
dec
cld
cmpb
pop
mov
cmp
xchg
pop
and
mov
pop
std
ds
sti
adc
and
jge
daa
cmpsl
push
jmp
clc
jmpw
sbb
js
sarl
mov
cli
push
cld
mov
mov
jbe
cmp
mov
decl
cmp
inc
push
mov
push
fsubs
mov
lahf
mov
jmp
mov
pop
arpl
push
mov
sarl
ss
rorl
movl
aas
scas
lock
lods
into
out
or
bound
dec
sbb
cwtl
in
fistl
aam
mov
sahf
push
fwait
mov
arpl
mov
jp
add
sub
imul
rorl
push
mov
cmpsb
ja
jmp
imul
loopne
jbe
add
inc
shr
adc
aas
test
stos
fisubrs
adc
pop
fyl2x
and
lea
dec
cltd
mov
xchg
sahf
lea
imul
out
lahf
push
in
test
je
cwtl
mov
std
shlb
inc
jbe
dec
cmp
addl
mov
dec
push
sub
shl
lcall
jnp
fistps
sbb
jg
jno
xorb
and
stc
push
lea
adc
inc
cmc
sahf
mov
repnz
adc
or
mov
lock
sbb
in
fidivl
fistpl
xchg
push
in
fcmovnbe
mov
xor
jle
sub
adc
mov
addr16
xchg
ret
pop
movsl
out
mov
push
push
faddl
sub
aas
jnp
xchg
lret
scas
movsb
pop
int3
mov
test
sahf
dec
jns
hlt
popa
lret
push
and
ss
ds
lods
mov
roll
outsb
sub
adc
xor
inc
mov
and
mov
sub
pop
dec
aas
ljmp
pop
sbb
adc
or
add
ficompl
jb
daa
lahf
jae
pop
cs
and
sub
lock
cmp
pop
shll
mov
loop
sarl
stc
push
mov
out
dec
xchg
test
inc
je
repnz
fwait
mov
jne
jbe
dec
cs
int
bound
inc
inc
mov
test
sti
and
out
loop
insb
ret
pushf
xor
out
or
aas
mov
mov
jnp
mov
out
fisttpll
mov
stc
pop
fsubs
xor
shlb
lock
add
ja
into
pop
ja
sbb
pop
aad
jmp
mov
aaa
mov
xchg
inc
mov
rol
stc
mov
int3
pop
arpl
xchg
data16
fnsave
push
inc
imul
cmp
xorl
and
lock
test
jmp
sub
cmpsb
loope
repz
push
or
out
mov
xor
mov
ret
jmp
and
xchg
int
test
in
push
lret
pop
lock
rorb
push
mov
add
pop
in
call
and
jns
dec
sub
lcall
sbb
add
cmp
cmpl
mov
mov
inc
ljmp
aaa
ds
pop
das
sbb
mov
out
push
sbb
dec
push
inc
lock
pop
mov
mov
mov
test
sbb
jns
loope
add
xor
add
lret
in
xor
cmp
dec
xchg
add
jbe
mov
xchg
sub
leave
insl
std
imul
in
mov
inc
ret
lcall
scas
push
mov
repnz
cmpsl
mov
fistl
inc
push
fwait
mov
cwtl
jmp
sbb
arpl
orl
loop
mov
hlt
sbb
roll
mov
in
mov
pop
cmp
mov
cwtl
xorl
or
mov
outsl
sbb
data16
imul
mov
pop
lret
and
movsb
inc
gs
cmpsl
adc
add
jg
pusha
cmpsb
inc
rcr
push
sbbb
sub
icebp
repz
mov
fcoms
loope
outsb
xor
inc
repnz
push
xor
das
pop
fs
push
dec
jg
mov
cmp
jbe
pop
adc
sub
stc
lock
push
setns
pushf
sbb
jmp
sub
pop
push
out
pusha
xchg
mov
int3
adc
add
fidivl
fdivl
mov
mov
int3
divl
inc
loop
enter
adc
jb
loop
insl
pop
mov
push
cmp
out
adc
aam
push
push
outsl
cmp
ret
inc
out
and
leave
lea
push
leave
sti
dec
lret
cmp
lret
imul
mov
xchg
mov
and
or
lods
imul
mov
shl
shr
xchg
daa
ret
sub
test
mov
aam
lahf
or
sti
dec
in
shrl
clc
and
rol
add
mov
pop
insb
cwtl
mov
cmc
jge
and
xchg
xor
incl
ss
mov
repz
jno
inc
rolb
mov
jns
lds
pusha
cmp
and
xlat
imul
pop
jo
mov
or
hlt
lret
dec
jg
cmpsb
outsw
mov
xor
mov
sub
cs
das
jbe
mov
and
mov
push
icebp
arpl
into
lret
adc
pop
pop
pop
add
fldpi
leave
mov
cwtl
ds
adc
jns
mov
mov
test
and
pop
data16
out
repnz
sbb
shll
xchg
ljmp
fistps
fwait
cld
pushf
out
mov
lcall
xchg
pop
iret
js
test
cltd
pop
push
in
jmp
aaa
jb
mov
push
sbb
fisttpll
cmp
add
repz
lcall
xchg
out
outsb
imul
dec
sbb
insb
cmpsl
jl
repz
fstpt
xor
pop
sarb
fists
insb
lahf
rcrb
fiadds
mov
out
mov
pop
loop
scas
es
dec
adc
fsubr
je
cmp
push
cmp
pop
mov
adcl
dec
aad
inc
jae
sti
pop
stc
mov
xor
fnsave
add
lds
jbe
rcrb
fisubl
rclb
in
roll
xor
flds
mov
out
js
push
stos
fwait
es
push
loop
cmc
pop
push
mov
fcomps
sub
test
xchg
cli
sti
add
sub
rorb
push
movsl
fistpll
adc
daa
clc
add
sbb
scas
and
stos
jno
pop
cmpsb
cmp
je
adc
adc
push
ret
loop
push
dec
mov
daa
jle
into
stos
xlat
sub
push
clc
sbb
data16
add
xchg
clc
mov
in
ja
das
das
adc
inc
mov
repz
ret
pop
inc
xchg
imul
jg
adc
jae
push
pop
sti
or
jbe
in
fs
das
jle
or
ljmp
aam
ljmp
repnz
and
test
xor
arpl
in
mov
dec
push
test
add
bound
mov
cmp
ds
stc
push
int
sbb
out
ljmp
mov
or
lret
hlt
test
xor
je
lret
stc
das
popa
cld
push
pushf
adc
lcall
inc
dec
hlt
aas
cmp
sbb
xchg
or
outsl
mov
push
or
pop
pop
arpl
pop
add
pushf
repz
cmp
push
dec
adcb
mov
ds
popa
mov
mov
loopne
sbb
sub
xchg
out
push
push
lods
inc
fistps
daa
js
in
shll
or
js
mov
loope
mov
test
xchg
push
pop
mov
dec
inc
dec
mov
das
fs
pop
mov
or
mov
sti
mov
dec
cmc
hlt
aam
xchg
shrb
int
mov
sub
mov
cld
lods
push
jp
and
jp
aam
cmp
inc
repz
adc
aam
idivl
aaa
jbe
cmp
imul
call
lods
push
push
in
mov
rclb
icebp
iret
clc
das
int
xor
sbb
sub
adc
pushf
mov
fcom
push
sbb
sub
fistpl
xor
sub
addl
pop
xor
mov
rcll
push
test
xchg
pop
int
jmp
sub
and
das
and
xor
mov
sahf
addr16
outsl
xor
mov
inc
loope
out
int3
mov
fs
cmp
or
push
push
lods
test
xor
movsl
out
aam
js
mov
out
xchg
push
sbb
lods
or
call
das
jmp
mov
outsl
movsl
mov
xchg
and
xor
js
ja
mov
add
fildll
xor
fistps
jnp
in
jno
into
inc
mov
xlat
sub
out
test
nop
dec
popf
cmp
aas
pop
call
mov
test
in
mov
pop
outsl
outsl
jnp
inc
lods
add
lret
jmp
in
punpckhdq
mov
dec
enter
adc
adc
les
in
out
sbb
and
dec
std
je
stc
js
test
jle
cmp
mov
cmpsl
sbb
aad
hlt
icebp
mov
lea
or
outsb
xor
mov
out
repz
jl
addr16
mov
push
mov
testl
pop
sub
inc
les
pushw
negl
mov
jl
out
xor
xchg
outsb
outsb
push
or
aam
mov
out
cmp
sbb
test
mov
or
test
xchg
lock
scas
push
ljmp
add
test
roll
rcll
jae
pop
iret
inc
push
dec
imul
jl
xlat
loopne
int3
or
fstpl
sbb
mov
fwait
mov
mov
xor
out
repnz
jp
enter
ds
and
ds
into
jae
mov
sub
jecxz
add
aas
jbe
xor
push
fidivrl
mov
inc
push
or
test
mov
pop
es
mov
or
sbb
jg
jge
mov
add
fmuls
loopne
inc
std
xor
mov
rolb
fs
xchg
adc
repnz
add
insb
sub
loopne
sbb
sub
daa
arpl
jmp
dec
ret
adc
jmp
mov
add
das
mov
in
adc
jg
xor
scas
mov
xchg
lock
ja
adc
ret
sub
in
pop
jo
mov
add
shl
and
and
loop
insb
out
dec
es
outsb
lods
dec
xchg
ljmp
cs
or
frstor
test
push
xor
push
lret
cmp
mov
insb
xchg
or
lds
add
out
inc
movsl
es
push
xchg
mov
pushf
mov
push
or
jle
rcr
push
xchg
sub
sbb
rcrl
fucomi
fldl
sbb
mov
add
push
insb
cltd
outsb
fists
cmp
cmp
ret
aad
sbb
subb
push
int3
orl
pop
in
imul
nop
jns
das
filds
mov
mov
adc
sub
and
jecxz
sub
fcom
mov
sub
push
xor
call
mov
lea
jo
ljmp
sti
push
sbb
aad
mov
cmp
out
int3
sub
sbb
das
int
mov
xchg
xlat
and
arpl
mov
les
test
clc
mov
push
inc
cld
leave
fsub
lcall
fisubrs
test
iret
jnp
je
movsl
jge
movsb
cltd
sbb
lahf
loopne
leave
insb
arpl
js
cmp
fwait
add
add
and
pop
jae
adc
movsb
mov
repnz
aas
pop
mov
adc
smsw
mov
aaa
cmp
mov
mov
mov
in
into
lahf
scas
pop
dec
mov
sti
das
pop
mov
repz
fwait
mov
stc
push
fcmove
jmp
dec
cmp
lret
loopne
orb
sub
je
lock
cld
cwtl
fldenv
or
inc
sub
lahf
clc
test
push
out
jbe
push
subb
mov
cmp
and
xor
dec
jb
add
xor
pop
repnz
fdivrl
cmp
and
mov
shlb
pop
les
cmp
aam
in
xchg
and
push
xor
outsb
rcll
mov
inc
pop
inc
es
pusha
fcoms
mov
andl
sbb
jp
rorb
enter
lds
sbb
add
in
sub
sbb
sub
mov
fidivrs
or
xor
pop
push
shr
and
lcall
jb
jle
xor
in
pop
pusha
pop
loope
jl
dec
pop
lock
dec
pushf
xor
and
push
idiv
idivl
push
movsb
shl
dec
cltd
cmp
xchg
pop
push
js
mov
loopne
dec
insb
pop
or
mov
jmp
push
outsl
mov
addl
sbb
movsb
jne
mov
js
lods
fistl
pop
orb
subb
loopne
cs
xchg
inc
jnp
dec
xor
dec
shll
pop
inc
sbb
push
and
fucom
scas
faddl
push
pop
inc
out
scas
sub
dec
lods
push
mov
lea
repz
pop
stos
inc
lahf
test
in
add
adc
in
push
stos
jb
lea
arpl
jbe
in
inc
push
jnp
or
sbb
mov
lods
adc
push
inc
aad
and
adc
mov
adc
inc
aam
ja
pop
test
repz
aaa
jg
or
loope
push
imulb
aaa
inc
movl
rorl
and
jbe
or
stos
frstor
repz
js
jne
rolb
inc
mov
mulb
and
adc
pusha
cmp
shlb
mov
xorb
dec
stos
adcl
aaa
movsl
dec
adcb
imul
jns
push
out
mov
mov
insb
pop
jmp
fs
xchg
jnp
lea
fcompl
xor
mov
sub
xchg
or
push
mov
mov
movsl
pop
popl
es
mov
lods
sahf
mov
cld
call
push
jae
scas
xor
and
leave
inc
test
fs
jecxz
mov
jp
sarl
jecxz
pop
jne
test
fs
push
fcmove
jecxz
jge
dec
pop
imul
sub
pop
mov
pcmpeqd
jbe
test
add
xchg
inc
dec
leave
mov
xor
jne
jbe
iret
xchg
ficompl
push
fiadds
add
out
xchg
std
sub
shl
or
xchg
dec
insb
nop
mov
nop
jne
mov
movsb
das
movsb
sarb
jb
int3
xchg
retw
cwtl
jl
cmpsb
fwait
cltd
sahf
insl
mov
add
shlb
and
popa
or
nop
inc
push
mov
shlb
pop
jecxz
js
js
dec
mov
arpl
mov
sub
stos
pop
cmc
sbb
jnp
jmp
mov
mov
test
sub
pop
testb
cmp
repnz
mov
ret
sub
pop
pop
xchg
jo
notb
es
fisubrs
add
addr16
repz
inc
int
ret
addr16
out
sub
sub
aas
in
aas
out
and
jp
scas
movsl
ss
and
aaa
imul
scas
xlat
lods
adc
mov
fwait
xchg
fcmovu
es
mov
lret
call
push
jmp
repnz
clc
push
in
popa
mov
rcll
pop
pushf
and
xchg
clc
ja
mov
add
mov
adc
cli
lcall
fcmovnbe
adc
in
and
aaa
mov
fsubp
jne
xchg
mov
jno
xchg
out
or
aad
pusha
cmc
mov
adc
in
pop
mov
cltd
mov
mov
cs
aas
lret
pop
mov
mov
in
fbld
iret
cltd
sbb
and
notl
push
pop
imul
cmpsl
fcomps
test
xchg
jnp
loope
shll
pop
mov
push
js
add
jns
pop
push
out
std
in
jg
jnp
jne
lahf
xchg
cmc
loope
pop
in
or
loope
jp
dec
test
in
adc
into
dec
mov
push
lds
sahf
and
and
jae
and
adc
outsb
in
push
std
ficoms
outsl
mov
pmaxub
mov
daa
pop
mov
ja,pn
mov
sbb
fs
std
xor
shll
adc
push
adc
outsb
cld
mov
ficompl
and
mov
jmp
push
inc
fwait
mov
leave
pop
test
xchg
shl
cmpsb
in
popf
push
ret
ror
mov
fiadds
inc
xor
rorl
dec
stos
add
andl
pop
mov
cmp
inc
dec
aaa
shlb
in
or
loopne
jno
or
test
subl
or
bound
repnz
into
es
and
int3
fmul
lea
push
lss
jp
push
fcoml
or
imul
imul
outsl
sub
or
imul
sti
mov
mov
xchg
ret
mov
std
out
cs
inc
loopne
inc
in
outsl
loopne
mov
nop
pop
je
call
dec
adc
and
ja
or
and
sub
xchg
push
clc
imul
sbb
or
pop
and
mov
cltd
rcr
push
add
enter
fnstsw
inc
adc
add
pop
les
xlat
rcr
imul
fs
and
dec
xchg
arpl
les
shll
push
xchg
mov
jmp
addb
jecxz
es
mov
cmp
mov
out
sbb
repnz
and
mov
pop
in
jle
mov
ss
lret
out
es
adc
js
pop
arpl
jle
aas
cli
push
outsb
repz
push
mov
pop
jge
arpl
test
jb
inc
iret
inc
xchg
test
xor
std
mov
mov
bound
inc
out
jg
jmp
sub
mov
inc
popf
lods
fiaddl
inc
in
nop
mov
cmp
sarl
out
stc
push
push
xchg
jge
xor
out
in
mov
into
pop
loope
rcr
xchg
aad
lret
cmp
mov
rorb
cmp
les
ds
push
out
dec
popa
test
xchg
inc
adc
push
jno
repnz
jl
push
inc
sbb
flds
push
aad
stc
pop
ds
and
jnp
in
push
pop
inc
jmp
push
and
or
ficoms
sbb
hlt
andb
enter
out
push
in
in
add
pushw
jo
stos
movsb
idivb
mov
hlt
push
cmpsb
pop
adc
adcb
mov
insl
fldcw
sbb
pop
cmpsl
or
mov
jne
ljmp
push
adc
pop
jmp
push
inc
in
pushf
push
add
xchg
sbb
adc
nop
lret
xchg
stc
enter
inc
incb
push
movsb
pushf
mov
out
inc
ljmp
insl
loope
pop
icebp
adc
sub
incl
mov
test
ret
jnp
sbb
pop
mov
sub
ljmp
fdivrs
jge
cmpsl
dec
cmpsb
ds
xor
push
mov
test
bnd
mov
fcoms
inc
pop
test
jle
lock
mov
cmpsb
adc
jnp
call
cmp
lret
inc
sbb
ljmp
sti
fistps
nop
ret
stc
sub
shrl
cmp
ja
xor
jne
pop
xor
cmp
icebp
cmp
sahf
jecxz
dec
inc
jecxz
into
add
adc
dec
ret
dec
ret
add
pop
insb
pop
imul
cwtl
add
pushl
mov
jmp
jbe
dec
sbb
cltd
clc
xchg
sbb
push
or
mov
popa
in
bound
pop
inc
add
jnp
iret
out
shlb
enter
mov
inc
ss
stc
loopne
scas
hlt
js
test
js
test
xor
test
iret
sbb
movsb
cmp
lret
pusha
cwtl
fldcw
js
mov
gs
aas
sbb
movsb
mov
mov
lock
lret
xchg
ds
mov
pop
inc
jb
ret
imul
dec
lea
jge
mov
and
adc
call
fadd
popa
push
test
inc
scas
push
cmp
sub
xlat
cmpsl
or
lcall
loopne
dec
xor
adc
jecxz
mov
mov
sbb
imul
outsb
lcall
jne
stc
outsb
outsl
pop
aaa
ja
iret
mov
addr16
xchg
mov
cs
jp
cmpsb
mov
or
stc
jg
pop
out
idiv
fldl
scas
repz
push
lret
cmp
loop
les
mov
cmp
rorl
sbb
out
ret
cmp
inc
xor
xchg
hlt
fimuls
nop
dec
adc
adc
popf
movsl
dec
add
sub
dec
xor
jnp
dec
outsl
cld
repnz
push
jle
mov
fsubrs
int
pop
xchg
cltd
push
ret
ret
das
mov
repnz
je
test
loopne
sti
lahf
xlat
fldenv
sub
pop
sbb
loopne
inc
out
fstpl
cmp
sub
jb
outsb
dec
in
jmp
icebp
insl
cmp
popf
or
cltd
pop
and
test
or
jb
dec
mov
xchg
adc
push
unpckhps
sti
repz
outsb
mov
sub
out
push
mov
dec
jge
int
jecxz
sbbb
mov
andl
sub
push
cmpsb
xchg
leave
pop
inc
pop
scas
insb
jnp
int3
call
in
or
in
mov
fdivr
jbe
push
push
jae
xchg
cwtl
mov
pop
roll
outsb
inc
insb
int
mov
or
mov
mov
jecxz
dec
inc
sub
push
mov
mov
orb
sub
inc
mov
js
sbb
fs
add
or
sbb
xchg
andl
mov
test
shlb
out
pop
pop
sbb
cmp
loop
sbb
inc
je
movsl
xor
xor
cs
jno
xor
sbb
pushf
fs
enter
sahf
and
outsl
sbb
std
lods
dec
bound
xor
dec
or
aaa
repz
shlb
dec
mov
or
jne
cltd
leave
bound
jne
add
insb
mov
pop
adc
fcmovbe
push
dec
inc
mov
iret
into
test
sub
pop
jle
or
mov
or
mov
bound
and
mov
je
scas
out
sub
xchg
int
sbbb
scas
popf
cmc
cli
in
outsb
xor
stos
cld
sar
in
pop
pop
xlat
daa
adc
pop
mov
add
cmp
pop
roll
rcll
mov
push
loop
ret
mov
popf
or
adc
repz
sub
mov
dec
das
cmpl
pop
popa
inc
mov
test
dec
sub
into
sahf
ds
cli
sbb
xlat
push
xchg
pusha
add
sti
out
jo
and
xlat
sub
mov
jo
lock
xchg
out
or
fsubs
push
cmpsl
int3
pop
jmp
mov
jmp
cmpsb
icebp
inc
lods
clc
fcmovnu
test
mov
lods
les
cmp
movsl
stos
pop
and
insl
push
lods
icebp
push
insb
inc
ljmp
mov
adc
adc
mov
popf
push
cli
pushf
clc
stos
xchg
aaa
add
arpl
push
cltd
and
loop
xchg
jno
pushaw
cmp
gs
push
clc
insl
shll
or
mov
push
xchg
faddl
adc
pop
xlat
jecxz
sub
or
jecxz
mov
adc
int3
adc
fs
or
dec
lods
loope
in
in
fsubrl
jmp
pushf
dec
lods
mov
xor
addr16
bound
xchg
jo
ret
mov
stos
push
pop
stos
cwtl
outsb
cmp
mov
xchg
in
lahf
sub
or
in
dec
cmp
lods
jl
jbe
add
jnp
or
pop
and
add
push
cwtl
and
popf
aam
cmpsb
jecxz
push
repnz
jp
js
or
or
popf
mov
mov
fimuls
insl
repnz
imul
lret
xchg
push
inc
outsl
pop
sbb
ja
push
pop
push
hlt
pusha
xor
test
fcoml
xchg
dec
insb
imul
pop
pop
pop
sahf
in
movsb
cwtl
cmpsb
or
sbb
cld
nop
mov
test
or
stos
lds
inc
enter
in
cmp
xor
dec
sub
icebp
fs
hlt
repz
ficompl
xchg
std
addr16
add
in
leave
ja
mov
cli
vminss
cmp
mov
dec
dec
inc
lods
cld
pop
fwait
jbe
scas
pop
mov
lcall
into
sub
mov
inc
cmp
sbb
mov
mov
imul
jo
mov
stc
adc
xchg
pop
push
jecxz
pop
stos
and
fsubrl
fs
and
popa
pop
or
jo
push
sbb
sbb
into
mov
and
or
dec
daa
xor
stc
mov
xchg
incl
mov
out
push
cmpl
xchg
push
int
pop
inc
popf
inc
push
jnp
adc
js
inc
hlt
or
std
adc
jle
test
out
or
fdivr
outsb
mov
jp
fdivr
dec
dec
out
roll
sti
xchg
push
repz
xor
loopne
adc
or
out
scas
pop
jmp
mov
jae
stc
push
cmp
adc
lock
fisubl
in
dec
data16
das
rcll
mov
sti
js
shlb
or
sub
mov
fiaddl
clc
loope
dec
or
or
jl
ljmp
sar
nop
aad
insl
imul
dec
push
adc
mov
sub
out
xchg
jno
xchg
aad
imul
ja
je
cmp
gs
push
sub
in
shll
ljmp
pop
xor
sti
out
hlt
and
movsl
into
mov
scas
testl
in
ret
jmp
add
inc
in
rolb
sbb
mov
icebp
push
adc
push
fildl
leave
mov
int
hlt
push
push
cmp
jg
out
or
arpl
adc
mov
xchg
sbb
cmp
push
ljmp
sub
mov
scas
rcrl
mov
movsl
push
insl
sbb
xchg
push
pop
inc
cld
hlt
loopne
js
into
inc
xchg
dec
or
lock
fcomp
or
cmp
int
cmpsb
movl
cli
sbb
xor
std
aas
and
repz
stos
dec
mov
int
adc
cld
adc
iret
dec
les
xchg
sbb
mov
mov
std
aas
ret
pusha
fs
dec
jl
lds
sub
pop
lock
lods
lret
int
sahf
inc
icebp
add
ret
in
jp
push
out
mov
mov
jo
push
loope
loope
cltd
pusha
inc
mov
test
hlt
andl
aad
push
sbb
mov
push
mov
sub
pushf
push
mov
mov
add
push
mov
negb
xorb
es
dec
xor
cwtl
pusha
movd
mov
hlt
pop
mov
dec
ljmp
mov
mov
aas
mov
cmp
mov
mov
sub
push
clc
mov
bound
stos
mov
mov
mov
int3
jmp
push
jecxz
scas
sbb
out
mov
xchg
mov
jns
iret
dec
aas
adc
add
aam
xchg
aad
push
push
dec
loopne
inc
push
adc
dec
add
in
xor
push
or
out
xchg
lcall
xchg
jge
pop
sub
inc
dec
jge
in
cs
add
aad
jne
mov
test
int
inc
jg
or
popa
call
je
inc
pushf
sub
aas
loopne
dec
scas
mov
nop
inc
pop
xchg
xchg
iret
lock
xchg
lds
loop
aas
pusha
sbb
lahf
or
int3
andl
hlt
test
or
add
lahf
mov
pop
inc
push
iret
adc
icebp
fimull
sbb
lahf
test
push
insb
cs
inc
mov
imul
jge
sub
lea
lret
push
dec
xchg
xchg
movsb
sti
inc
xchg
cmp
fdivl
add
mov
in
sub
ficoml
jecxz
jg
cmp
xchg
mov
mov
sbb
pop
aas
pop
lock
sarb
shll
pop
add
fistpl
add
stos
pop
lock
xchg
pop
push
js
mov
mov
pop
out
insb
cld
add
out
sub
pusha
push
sbb
cli
jg
sbbl
sub
addr16
fsubs
jmp
int3
imul
cmpsb
or
xchg
jecxz
ffree
pop
js
mov
stos
jb
jbe
in
in
das
out
shrb
xchg
ja
adc
and
push
sahf
cmp
sub
or
lea
shll
sti
std
jnp
jne
mov
sbb
sbb
imul
je
add
xor
jbe
mov
movsb
mov
jle
cmp
aaa
sar
fsubrp
mul
sbb
pop
cli
mov
dec
xor
fsts
xchg
insb
jmp
adcl
subb
cltd
lods
mov
mov
sbb
mov
in
push
repz
xchg
stos
lahf
push
xchg
loop
or
repnz
lret
sub
add
bound
out
jle
loope
jns
mov
adc
lds
mov
std
imull
out
test
andl
lds
inc
mov
orl
sub
or
jle
lahf
mulb
int
call
out
adc
inc
adc
aaa
jne
out
adc
lcall
xor
gs
into
cmp
insb
xchg
fmull
repnz
mov
dec
repz
loop
das
sarl
and
jnp
lods
inc
xchg
scas
fadds
push
sub
ja
xor
shlb
or
adc
icebp
stos
test
sbb
lds
sbb
shl
cmp
les
in
imul
int3
add
test
loopne
cmp
adc
push
fnstenv
mov
cmpsb
pop
ss
inc
test
icebp
mov
sub
or
sub
mov
sub
pushf
dec
mov
and
adc
mov
add
and
adc
fidivs
pop
pop
popa
nop
sbb
adc
imul
inc
sub
decl
or
pop
sbb
pop
adc
fmuls
psubb
jbe
jo
out
icebp
push
hlt
sbb
add
or
fidivs
or
jmp
mov
add
in
or
push
sbb
aad
pushf
push
and
ss
push
pop
xchg
ret
movsl
data16
push
pop
scas
nopl
mov
dec
stos
mov
outsb
jp
arpl
hlt
test
jmp
es
outsb
cltd
or
and
jp
iret
push
in
aad
pop
in
xor
jge
sbb
int3
test
fisubrs
xchg
pushf
sbb
mov
xorb
loope
movsl
push
aam
in
mov
sbb
or
mov
subl
clc
fcomip
xchg
or
adc
push
lods
into
rcrb
mov
mov
pop
jmp
push
mov
add
cmp
dec
xor
nop
out
js
aam
xchg
cmp
mov
fmuls
or
out
ret
outsl
mov
popa
cs
push
iret
jmp
push
loopne
adc
or
jge
dec
xor
mov
add
je
aad
add
or
and
in
les
rorl
sub
hlt
mov
xchg
xchg
iret
sbb
sub
push
sbb
jo
mov
jle
mov
stos
sbb
fisubs
dec
sub
inc
fmuls
stc
aas
jl
push
mov
je
lds
inc
and
aas
cmp
add
jb
fs
or
out
or
inc
jle
cmc
dec
fmuls
jecxz
adc
and
cs
test
js
cmp
pusha
leave
inc
enter
out
jle
lock
fisubrl
pop
divb
lds
scas
xchg
scas
fidivl
and
jnp
fadds
add
and
dec
mov
in
in
clc
mov
out
mov
adc
add
jb
in
mov
into
push
cmp
mov
mov
mov
mov
fbld
in
mov
fbld
insb
xchg
and
push
mov
add
cmp
or
sub
jmp
push
popa
jns
inc
mov
and
pop
sbb
insl
inc
lea
es
cmpsb
pop
lcall
jle
mov
iret
and
jnp
fistpll
mov
nop
out
enter
sbb
xchg
sub
gs
andnps
jmp
xchg
add
ret
rclb
lods
jo
pop
repz
cltd
rcll
xchg
mov
out
gs
ret
pop
pop
or
cmp
mov
mov
icebp
push
jle
pop
push
fsts
adc
outsb
jne
cmp
mov
stc
out
fcomi
fmuls
pop
jb
loopne
push
or
dec
xchg
inc
push
jo
or
push
pop
push
add
icebp
lock
dec
out
dec
jnp
popa
dec
jge
fwait
jne
fs
arpl
scas
fstpt
and
or
mov
push
outsl
pusha
cmpsl
pop
test
xlat
lods
cmp
push
jnp
inc
test
inc
loopne
stc
pop
dec
lods
jp
mov
mov
popf
pushf
cwtl
les
data16
das
or
mov
xor
jge
cmp
out
pop
mov
mov
pop
out
xchg
lahf
clts
mov
push
dec
xorb
push
dec
pop
subb
out
push
add
sub
pop
cs
cli
jmp
or
repnz
outsb
stos
adc
push
pop
sbb
sub
jp
jns
int3
js
sbb
mov
and
jmp
mov
jne
inc
push
movsb
loopne
faddl
nop
das
out
out
cli
lcall
or
outsl
stc
jecxz
pop
mov
lods
jmp
rcr
cld
jne
je
xor
sbb
sbb
shrb
mov
mov
divb
ja
aam
add
cmpsb
sub
xor
inc
cmpsb
int3
dec
push
lods
xor
imul
dec
sub
fisubl
call
and
fwait
addr16
sbb
mul
mov
push
and
mov
adc
dec
lds
aas
add
and
mov
rcrl
sahf
cmp
cmp
mov
adcb
stos
xor
and
mov
mov
gs
sub
adc
push
stos
aas
push
lcall
xchg
aad
shlb
ret
push
repz
ljmp
dec
subl
mov
dec
loope
jne
insb
mov
cmc
ds
and
fildl
inc
scas
rolb
xor
mov
mov
xor
mov
iret
ds
sti
add
sub
mov
loopne
mov
jecxz,pt
pop
xchg
repz
sub
lea
mov
mov
add
adc
sub
adc
sti
repz
aas
mov
push
insb
fistl
std
push
cmp
ret
out
mov
jne
xchg
cli
xchg
sahf
add
mov
push
pop
add
ss
push
push
idiv
lcall
cwtl
mov
movsl
pop
sahf
pop
inc
cs
mov
je
mov
pop
mov
mov
stos
ja
in
mov
cmp
and
cwtl
inc
mov
push
push
stc
fisubrs
fucomi
mov
in
loope
xchg
out
xchg
iret
cmc
sbb
mov
insl
pop
mov
xorl
test
mov
jb
popa
lods
inc
add
mov
inc
out
mov
adc
mov
lock
sbb
fsubs
jae
pop
adc
and
jmp
mov
sbb
fisttpll
sbb
hlt
push
rcl
imul
dec
mov
mov
jmp
mov
pop
push
shlb
and
cmp
scas
lahf
lds
test
mov
dec
push
loopne
jl
xchg
leave
cmc
jb
imul
pop
ret
outsb
mov
in
ret
notb
cmp
jl
mov
inc
pushf
cmp
pop
repz
dec
push
repnz
int
sub
or
insl
push
xchg
jne
xchg
adc
xor
jmp
push
xchg
jp
mov
cwtl
pop
cli
stc
hlt
dec
insb
inc
pushf
insl
sub
stc
mov
rcll
insb
dec
mov
fstl
sub
mov
mov
bsf
add
sub
xorb
pop
mov
mov
mov
xor
bound
jp
or
mov
adc
or
push
and
loop
mov
movsl
xchg
pop
cmc
push
fs
xor
sub
lods
mov
ss
fstpt
mov
jp
jne
lcall
dec
out
das
adc
rcrb
jle
je
pushf
pop
mov
divl
mov
sub
add
jg
mov
imul
pop
fstl
inc
or
sahf
dec
or
xor
imul
xor
sbb
dec
push
xor
push
sti
scas
mov
lods
jbe
repz
pop
mov
fsub
stos
mov
ret
mov
cli
fistpl
movsb
bound
mov
dec
cmpsb
adc
xchg
ret
popf
lret
adc
jns
fstpt
jnp
add
mov
int3
test
mov
sbb
lods
push
sbb
jecxz
and
mov
cmp
scas
xor
dec
movsb
jp
or
test
push
mov
xchg
shl
imul
movsl
or
js
jp
in
lds
lcall
push
mov
test
jg
xchg
neg
push
mov
push
cmp
jecxz
imul
inc
aaa
jp
out
ds
and
icebp
adc
cmp
mov
ljmp
les
lahf
fwait
xchg
lds
out
das
xor
loopne
sub
push
lock
or
shll
sub
jb
xchg
outsb
mov
fwait
sbb
pop
jne
xor
fisubrs
add
fpatan
pop
movsl
ss
out
in
dec
mov
sbb
lods
adc
popf
loope
adc
jge
into
mov
in
jno
jl
jmp
and
das
in
push
pop
jmp
subl
pop
loopne
dec
add
jnp
xchg
xor
loop
adc
inc
and
jecxz
jp
fldl
xchg
cmp
movsb
nop
and
gs
dec
xchg
cmpsl
pop
inc
sub
pushf
nop
and
js
adc
mov
out
js
stos
mov
and
fistpl
movsl
enter
jne
push
outsl
shl
mov
out
lds
out
loope
pop
xchg
sub
pushf
out
fsub
cmp
dec
daa
adc
or
jne
xchg
jno
ss
sub
jns
sbb
jno
lods
push
outsb
adc
movsb
test
test
std
sbb
lret
in
in
inc
ljmpw
sub
fidivl
sbb
in
jns
aad
pop
popa
repnz
movsw
xor
jecxz
aaa
out
imul
cli
jecxz
ret
aam
mov
lcall
mov
jb
push
pop
mov
cld
jns
insl
clc
lods
jbe
mov
push
add
xchg
les
fcomp
mov
addr16
pushf
mov
outsl
fisubrs
notl
jmp
aam
push
mov
mov
cltd
push
int3
push
add
shll
or
jle
popf
test
in
scas
inc
xor
loopne
xchg
adc
push
call
ss
xchg
xchg
push
mov
xchg
dec
sub
mov
inc
adc
aaa
mov
jge
inc
and
add
shrb
enter
push
das
pop
bnd
leave
jg
out
sub
adc
test
mov
aam
and
adc
sub
dec
inc
jecxz
addr16
and
inc
pusha
imul
push
mov
imul
int
push
xor
lahf
enter
fisubl
sub
mov
sub
sub
mov
loop
lds
and
cli
lods
insl
push
dec
fists
mov
jecxz
aad
cmp
clc
xor
out
xchg
nop
loop
dec
or
push
outsb
push
mov
test
pushf
stos
fst
bound
push
idiv
sub
test
stc
mov
mov
sbb
out
testl
xor
mov
inc
pop
ja
mull
fldl
enter
push
add
adcb
popf
pop
cmp
mov
mov
hlt
cli
rol
test
icebp
and
inc
xchg
mov
jecxz
stc
out
repnz
mov
insb
cmp
das
sti
pop
and
jb
call
and
divb
and
and
fwait
cmp
xlat
bound
mov
lods
cmpsl
push
sub
nop
sub
pop
sbb
cltd
fildll
popf
xorl
movsb
xor
clc
test
or
pushf
adc
cmp
xor
je
xor
stos
jl
and
adc
xchg
sahf
js
and
rorl
in
js
pop
sbb
ficomps
inc
cmp
je
xor
pop
push
call
pop
pop
sbb
mov
sbb
ret
mov
xor
add
dec
pop
mov
test
pop
insb
popa
cli
rolb
ret
push
loopne
push
sarb
pop
ds
push
jle
push
mov
push
jns
sbb
xor
and
mov
sbb
psubd
inc
or
test
or
aad
cli
xchg
daa
adc
or
les
inc
xchg
sub
mov
dec
fcmovbe
push
push
cwtl
sub
jmp
adc
sub
jnp
xchg
jg
cld
clc
test
or
icebp
ret
mov
bound
sub
sub
dec
cld
add
gs
aas
pop
mov
cmp
ret
or
mov
sub
or
xchg
inc
push
sbb
divl
jnp
inc
push
adc
adc
sub
lcall
pusha
or
and
and
adc
ljmp
and
jbe
lods
addr16
cli
loop
das
and
sbb
out
adc
test
adc
lods
ljmp
cli
fstp
inc
xor
jmp
jae
sub
int3
fdivl
xchg
xor
xchg
repnz
in
out
lret
inc
or
loope
sbbb
or
call
outsl
aaa
cli
imul
rcrb
es
sbb
int3
out
inc
dec
xor
rorb
pop
mov
jbe
dec
cmp
loopne
insb
subb
shll
xor
jmp
dec
outsb
and
mov
lret
cli
aaa
pop
mov
movsl
pop
lods
mov
dec
sbb
sbb
aas
lods
adc
insb
sti
popf
sbbl
call
xchg
adc
in
fisttps
push
jl
inc
bound
subb
or
mov
jne
in
loope
jp
cmpsb
aad
cltd
lea
lock
rorb
jle
inc
shll
push
pushf
testl
add
mov
lcall
mov
jmp
test
mov
outsb
mov
cmp
daa
jo
sub
xchg
xor
adc
and
ret
mov
jmp
les
push
xchg
mov
sub
pop
icebp
pop
or
xchg
pop
mov
out
xor
push
jae
test
nop
sbbb
test
and
fnstcw
xchg
sub
fildll
push
jae
jge
cmpsl
sub
push
or
fbstp
push
add
add
in
dec
jno
std
sub
aam
mov
mov
xchg
or
mov
lds
jl
les
ror
pop
imul
test
les
rclb
jo
imul
lea
jae
mov
lea
sub
sbb
xchg
inc
xchg
fmuls
mov
repnz
push
jmp
aad
sbb
lret
adc
lret
shrl
or
mov
je
xor
pop
fsub
adc
idivl
add
push
ret
adc
and
loope
rolb
push
dec
fs
inc
pop
cmpsl
shlb
mov
out
cmp
pop
cmp
ret
sub
lea
adc
lahf
jno
or
bound
inc
mov
adc
scas
ret
xchg
xchg
ret
stos
pop
rcrl
and
or
imul
data16
out
sti
cmpsb
dec
out
xlat
xchg
mov
xchg
js
mov
dec
mov
fstps
out
or
xor
enter
cltd
xor
lods
jl
jo
loopne
repnz
push
or
fisttpll
jne
mov
fwait
stc
scas
and
insb
iret
mov
sbb
pop
adc
cmp
shr
cmp
adc
aaa
jge
inc
xlat
adc
in
pop
bound
sbb
jge
dec
mov
hlt
push
mov
cmp
sub
lcall
and
jecxz
inc
lcall
mov
clc
loope
loopne
in
push
jge
jp
dec
push
cmp
jo
pop
mov
add
test
ja
nop
or
ljmp
les
xor
imul
mov
out
xchg
loop
test
scas
ja
pushf
shlb
pop
cmp
xor
stos
push
frstor
jg
sub
fs
jl
repz
mov
sub
inc
imul
loop
outsb
xor
lea
xchg
btc
dec
cmp
pusha
pop
sub
lahf
ja
mov
test
adc
xor
dec
xchg
push
movsb
or
inc
push
leave
in
popa
dec
sbb
icebp
jae
test
insl
pop
je
in
sbb
mov
cs
dec
xor
sbb
sbbb
bound
or
cwtl
movsl
adc
inc
insb
in
outsb
mov
cmp
xchg
or
mov
jb
push
shll
sub
sbb
dec
sti
inc
fisubs
and
inc
frstor
mov
dec
xadd
pop
sub
push
push
ret
adc
mov
mov
sbb
or
mov
adc
adc
std
sub
mov
rorl
pop
mov
std
jle
add
add
stos
es
test
aaa
movsb
int3
je
imul
inc
push
mov
adc
cmp
outsb
push
adc
xlat
xchg
icebp
push
push
mov
daa
add
aaa
idiv
jbe
pop
dec
mov
mov
lods
stos
popa
sarb
outsb
jno
cmpsb
or
aaa
cwtl
jno
lods
xor
ret
jns
jge
lret
cli
mov
xor
cli
add
push
ret
hlt
paddsw
dec
insb
ficoml
mov
aam
push
or
sub
sbb
lcall
mov
jmp
pop
jae
mov
jb
push
rorb
mov
nop
mov
push
xlat
aas
or
ss
movsl
lods
jp
sub
cwtl
adc
ds
mov
jbe
or
fcomps
adc
sahf
outsb
mov
popf
dec
shrb
cwtl
and
cs
pop
mov
stos
push
pop
push
pop
sub
daa
or
pop
adc
pop
and
arpl
cmp
mov
mov
push
push
daa
mov
or
aaa
push
pop
fs
loop
repz
ss
rcrb
in
arpl
jns
mov
stos
and
jp
jg
dec
lock
inc
ficomps
push
cs
cmp
leave
bound
loopne
xor
test
xor
push
xchg
ret
inc
xor
pop
test
xchg
out
mov
inc
sahf
mov
sbb
cld
push
pop
push
cmpsb
xchg
loope
dec
popf
aas
push
jns
jmp
and
daa
mov
fcoml
fidivs
mov
scas
aam
push
imul
outsb
jno
dec
sub
inc
icebp
ficompl
cltd
mov
mov
xchg
out
push
addb
mov
push
xor
shrl
pop
sub
mov
mov
in
mov
pop
data16
sub
in
mov
bound
lret
icebp
pop
mov
in
inc
sti
int3
xor
push
repnz
divb
mov
pop
pop
loope
rcl
dec
jl
mov
outsb
stc
sahf
inc
aad
or
fucomi
ja
ds
out
jle
xlat
push
push
leave
lret
mov
call
jp
js
xchg
and
sbbl
test
lea
aaa
and
pusha
xchg
dec
mov
fsub
orl
daa
jp
out
loopne
fcmovnu
cmpsb
mov
popa
in
mov
xchg
sbb
and
fbld
lahf
jmp
fldt
inc
lock
dec
stos
incl
push
push
arpl
movl
sub
and
insb
loop
ret
out
sbb
adc
jnp
push
iret
cmp
call
out
xchg
out
add
dec
int3
xchg
mov
sti
inc
dec
idivb
inc
xor
xchg
mov
ds
fwait
mov
das
mov
xor
sbb
mov
dec
call
hlt
mov
mov
add
mov
xchg
sbb
sbb
bound
adcl
cwtl
sub
pushf
lods
imulb
mov
sqrtps
dec
fsubrp
jne
or
ret
jne
aam
movl
adc
inc
lret
cli
mov
or
or
mov
xchg
cwtl
sbb
sub
rcrl
fstl
mov
rcrl
subl
loope
or
dec
dec
mov
cmpsb
out
imul
sbb
sub
inc
iret
cld
mov
pop
nop
push
jecxz,pt
int3
dec
inc
insb
xchg
jo
and
bndstx
ja
int3
mov
icebp
dec
mov
cmp
sti
pop
jg
fcmovu
das
mov
imul
sub
test
inc
stos
nop
pushf
mov
push
insl
popa
xchg
movsl
stc
cmc
movsl
sbb
popf
cli
sub
test
dec
push
dec
cmp
mov
jno
and
inc
arpl
pop
push
aaa
sub
test
ljmp
xlat
inc
popa
lock
mov
cmc
inc
js
jnp
sbb
dec
stos
pop
xorl
sub
adc
sub
lds
push
push
data16
out
in
sbbl
pop
pop
and
cmpsb
aad
mov
push
dec
fbld
jle
inc
enter
insb
or
mov
mov
cmc
enter
jo
adc
inc
loop
or
add
add
pop
rcll
add
test
clc
xchg
jg
inc
test
mov
jno
add
add
fisttps
retw
outsb
sbb
popf
jge
or
imulb
test
xor
push
push
sub
push
or
testl
sbb
mov
and
imul
jo
arpl
hlt
jle
mov
orb
negb
xchg
sub
mov
fadds
add
cmpsb
xchg
pushf
sarb
movsl
sbb
push
enter
pop
filds
inc
or
data16
hlt
fmuls
cmc
jmp
popf
cmpsb
sbb
lods
xchg
rcll
nop
incb
inc
mov
pop
push
pop
fsub
inc
dec
popa
cmp
push
sti
cs
push
xchg
and
movsl
push
dec
push
aad
ljmp
push
movsb
pop
shll
fisubl
rcrb
arpl
push
aam
pop
sbb
scas
mov
sub
ja
dec
aas
pop
cmc
outsl
push
xchg
mov
popf
bound
outsb
mov
jge
outsl
sbb
mov
add
push
xor
pop
loopne
cmpsl
adc
inc
in
xor
mov
jae
loope
movsl
or
add
adc
repnz
popa
stos
mov
fnsave
ljmp
xchg
mov
mov
insl
pop
and
mov
lcall
xchg
mov
and
mov
mov
test
and
negb
jbe
add
jecxz
mov
clc
adc
sbb
stos
sti
mov
push
ficoms
daa
pop
sbbb
ror
mov
int
fldcw
mov
jno
mov
pop
xor
push
add
add
fistl
jmp
jmp
xlat
pop
xor
mov
daa
addr16
sbbb
inc
mov
shrd
repz
mov
or
loop
jmp
data16
movb
loopne
outsl
fmul
or
lcall
lcall
sbb
mov
sub
mov
mov
je
daa
xchg
pop
sub
push
sar
sbb
fneni(8087
ds
stc
std
xor
jns
jecxz
sbb
jg
fldl
fdivl
imul
push
dec
out
sti
sbb
dec
daa
xor
xchg
daa
negl
jne
add
in
mov
inc
inc
mov
pusha
pop
ljmp
mov
inc
in
add
push
inc
or
cmpsl
insb
fwait
mov
sti
add
adc
das
lods
out
cwtl
stc
jmp
addl
test
pop
repnz
fistpl
xchg
push
mov
push
iret
pop
mov
sbb
xor
jle
outsb
inc
cs
fildll
xchg
adc
sub
inc
pop
mov
pushw
rolb
adc
test
push
mov
std
xchg
int
push
aam
lods
fcmovu
cltd
mov
mov
cld
inc
hlt
pop
aaa
int
call
dec
les
ficomps
add
push
and
push
fpatan
subl
pop
xor
jmp
addr16
lea
movsb
pop
xor
sbb
ret
mov
xchg
lock
jge
xchg
push
aad
je
ret
mov
cmp
sti
xchg
outsb
adc
test
mov
loope
jbe
dec
push
or
xchg
popa
dec
or
and
jle
add
out
sbb
pop
in
dec
rcr
std
inc
add
in
pop
mov
icebp
pop
je
cli
movsl
xchg
ds
loope
test
push
push
sub
out
clc
add
out
jg
gs
mov
jnp
pop
add
out
fcomp
jae
inc
jne
mov
cltd
ds
or
push
pushf
jl
iret
push
lods
decb
js
jb,pn
mov
fwait
je
mov
ljmp
cmpsl
jle
and
xchg
lret
out
insb
pusha
gs
test
rorb
loopne
cmp
mov
test
push
and
in
test
mov
stc
dec
cltd
popf
or
icebp
xor
xchg
data16
inc
aam
imul
push
or
addr16
in
ja
or
sub
aas
insl
orl
inc
sti
cmp
push
fadd
nop
mov
dec
orl
fistpl
dec
icebp
in
mov
stc
jmp
mov
popa
in
ljmp
int
adc
jle
cmp
mov
pop
jb
inc
frstor
sbb
jl
or
xchg
push
aas
popf
and
mov
add
cs
not
fisubrl
mov
xchg
sbb
mov
mov
mov
push
dec
xchg
mov
fisubl
or
jbe
or
jle
int3
aas
push
icebp
dec
adcb
mov
sbb
mov
icebp
mov
sbb
aam
cmc
mov
mov
sbb
or
ss
mov
cmpsb
push
lahf
xlat
clc
call
or
movsl
pop
sti
cs
xlat
orb
and
insb
pop
sub
outsl
adcb
daa
inc
dec
aam
adc
imul
shll
jnp
mov
jmp
pop
sahf
aas
popl
dec
fisubrs
and
fidivrl
mov
pop
or
rcrb
adc
ja
adc
xchg
mov
in
rclb
mov
sti
imul
movsb
lods
push
cs
jle
mov
push
mov
xchg
sbb
hlt
mov
mov
xchg
adc
repnz
jl
pushf
inc
insb
es
mov
mov
jl
sub
icebp
rcll
loope
jg
inc
call
adc
mov
jle
mov
imul
movsb
mov
mov
es
mov
xchg
cltd
out
add
jnp
xchg
cmp
fistl
test
xchg
dec
lret
add
gs
repz
cmp
bnd
push
mov
jmp
mov
idivb
jne
ljmp
cmpsb
es
mov
push
jmp
cmp
shll
mov
add
xchg
data16
addl
leave
gs
mov
xorl
lods
es
in
xlat
sti
mov
cltd
arpl
sarl
mov
fldl
or
cmc
mov
mov
repz
rcl
outsb
sub
movsb
fwait
je
mov
sahf
icebp
mov
pop
ret
fnstenv
pop
jle
mov
pop
sub
mov
push
insb
popf
in
fldenv
test
test
pushf
mov
xchg
sbb
fs
clc
push
xchg
dec
or
rolb
xchg
stc
mov
gs
lea
inc
inc
popa
cmp
fwait
imul
es
out
pop
mov
dec
and
dec
mov
sub
jecxz
cltd
call
cld
push
and
dec
jno
inc
int
sub
mov
icebp
out
xchg
call
adc
fldenv
cli
enter
push
sbb
roll
pop
add
pop
lcall
nop
jnp
lock
stc
cs
std
cmp
jnp
mov
mov
roll
mov
or
xchg
dec
subb
dec
mov
stos
mov
stc
push
sbb
xor
mov
lcall
lods
out
aas
sub
imul
cmp
cmp
sub
pop
jo
clc
pop
leave
cmp
and
fildl
fwait
or
stos
scas
mov
xor
ljmp
call
sub
imul
icebp
add
push
pop
and
shrb
int3
add
adcb
jbe
add
add
aaa
lret
xor
add
mov
shr
sub
add
inc
push
xchg
movsb
xchg
shl
out
inc
shlb
inc
xchg
push
pop
sub
leave
fldt
in
mov
lods
and
mov
push
fwait
mov
sarl
lods
shll
jecxz
push
or
and
imul
out
mov
imul
sub
push
mov
cltd
js
xlat
das
sub
mov
daa
or
jae
ljmp
sbb
mov
iret
fcompl
icebp
mov
dec
cld
xchg
in
push
jbe
xchg
xchg
call
rorl
andb
mov
push
lret
cmpsl
jmp
ds
movsb
test
andb
fldenv
add
inc
cmc
cmp
pop
mov
dec
cmp
inc
sar
mov
mov
sub
adc
pop
aam
movsb
test
mov
pop
fs
xchg
cwtl
test
push
mov
or
mov
rcll
daa
lock
sub
loop
sub
frstor
jne
in
adc
movsl
out
push
into
outsb
xchg
ljmp
sub
jb
xor
dec
inc
iret
dec
testl
jno
iret
push
scas
sbb
in
aad
data16
xchg
mov
cmp
mov
arpl
and
mov
pop
stc
stos
sbb
out
sbbl
mov
add
ds
test
ret
ljmp
in
iret
in
rclb
movsl
mov
loope
mov
jecxz
inc
inc
adc
fwait
shll
jle
push
daa
or
repz
adc
or
sub
mov
push
sti
imul
jae
iret
ffree
pop
ja
and
cmp
mov
leave
rclb
imul
lea
add
fbstp
js
pop
dec
xchg
jbe
mov
xchg
mov
jp
pop
mov
rcll
pop
xor
mov
arpl
xor
sub
jns
or
adc
shrb
push
sti
bound
gs
outsb
cmp
pop
jmp
stos
lcall
data16
jp
mov
xchg
bnd
adc
fisubrs
mov
push
hlt
scas
stc
xchg
and
push
and
inc
cmp
pop
cmc
es
xlat
lret
ret
cmp
xchg
sbb
pop
jle
push
jne
adc
adc
sbb
popf
popf
stos
stos
gs
int
xchg
cmpsl
loop
add
lcall
ret
fiaddl
fcmovnb
pushf
daa
ss
push
add
test
or
or
pop
sbb
loop
dec
fistl
mov
dec
pushf
lret
pop
mov
cmp
xchg
pop
mov
int
ret
jge
rorl
in
adc
mov
icebp
js
call
mov
xor
mov
cltd
mov
inc
ja
aaa
push
pop
lds
int3
stos
jno,pn
aas
leave
std
or
mov
mov
sub
jbe
sub
fiaddl
jmp
mov
xchg
fwait
mov
adc
das
mov
ljmp
mov
push
xor
push
inc
lret
inc
push
xor
xchg
mov
inc
mov
into
scas
stos
mov
pop
mov
pop
int
and
add
addps
sti
xchg
fcmovu
aad
mov
push
sbb
lss
jo
lods
gs
fimull
es
mov
mov
in
push
mov
notb
hlt
fiadds
ja
mov
cmpsl
adc
inc
adc
nop
aaa
rcl
pushl
loope
test
insl
xor
enter
mov
jae
fimuls
xchg
je
jb
cwtl
jne
jo
andb
jne
xor
mov
xchg
mov
loop
movsl
jne
mov
lods
adc
insl
add
enter
xor
stos
inc
lret
iret
sub
stos
xor
ss
add
add
adc
mov
jl
rorb
push
mov
sub
arpl
call
jmp
add
and
add
ret
mov
jmp
js
ret
and
or
outsl
sub
std
sbb
es
add
sti
fcoml
mov
xchg
shrl
push
sub
cld
cmp
iret
push
push
bound
das
sbb
notb
mov
mov
or
cmp
sub
mov
test
rorl
ret
ljmp
jo
xor
in
scas
mov
sbbl
jge
push
jnp
dec
pop
sub
std
adc
cwtl
pop
pop
or
jge
mov
in
sub
lds
sub
push
inc
ret
fcmovbe
jnp
cmp
dec
adc
adc
imul
jbe
lods
lcall
addl
shrl
sbb
js
inc
mov
jge
dec
enter
xor
or
mov
push
ljmp
and
mov
xor
jge
jns
jmp
icebp
push
mov
les
pushf
mov
push
int
jae
mov
pushf
int
rorl
rorl
mov
cs
out
jno
or
lods
pop
mov
sub
ss
cltd
or
mov
sti
call
inc
mov
dec
sub
je
stos
sar
jno
jle
outsl
xchg
pop
pop
cmp
movd
dec
push
cmpsb
aam
mov
or
iret
fcmovu
sbb
dec
ficoms
jmp
dec
lahf
out
leave
cmpsl
mov
or
xor
jno
in
aad
lock
sbb
fnstenv
mov
lods
cwtl
inc
in
aaa
in
mov
pop
les
shrb
adc
stc
sarl
movsb
jl
xchg
and
add
shll
lock
xlat
jmp
imul
scas
fnclex
xor
ret
negl
adc
lods
ja
push
sbb
lds
scas
cli
int3
fidivl
push
test
or
sbb
pop
fimuls
jae
mov
mov
jbe
dec
push
push
push
call
mov
pusha
add
and
jae
dec
and
cmp
push
push
out
xor
cli
inc
lret
cmpsl
add
mov
ja
jnp
iret
loop
jge
sahf
jg
cmp
sbb
xchg
js
outsl
lock
sbb
in
cmp
stos
mov
cmp
out
movsl
mov
push
jecxz
cmc
repz
dec
pop
orb
add
into
js
mov
cmpsl
test
aaa
mov
cmp
int
imul
or
sbb
push
rcrl
push
icebp
mov
repz
cmp
and
mov
imul
scas
push
popa
test
daa
mov
add
int3
or
mov
mov
cmp
cmp
out
test
push
test
hlt
cmpsb
xorl
inc
lock
pop
stos
lods
lahf
push
mov
loop
popa
mov
jns
sub
adc
inc
scas
int3
in
scas
data16
push
int3
mov
pop
push
imul
inc
dec
sti
int3
jle
adc
add
mov
std
ljmp
cmc
inc
insb
sub
cltd
subl
test
mov
xor
in
test
xor
lret
lds
repnz
orl
stc
mov
add
gs
mov
std
rcll
repnz
rclb
jno
cmc
adc
int3
adc
xchg
lods
adc
xchg
push
ret
nop
mov
add
daa
push
and
xor
cli
imull
jl
lret
add
mov
pop
sahf
or
or
and
andb
mov
sub
lret
out
pushl
shrl
mov
mov
lcall
movsl
test
sub
addl
leave
ja
outsb
popa
mov
adc
cmpsl
pop
sub
out
das
je
hlt
in
sub
pop
inc
jg
mov
stos
fwait
add
scas
push
sbb
out
loop
xchg
xor
ret
dec
xlat
mov
jmp
adcl
inc
faddl
jo
ljmp
int
mov
movsl
mov
in
or
int3
les
mov
jecxz
push
imul
mov
in
inc
pop
jle
out
or
dec
push
les
push
or
testl
rorb
and
cmp
push
sbbl
cltd
nop
pop
inc
frstor
mov
mov
mov
mov
pop
aas
sbb
decl
fs
mov
popf
pop
cmc
inc
decb
jae
stc
pop
bnd
and
out
mov
fsts
cmp
hlt
adc
scas
or
xchg
and
rorl
hlt
lcall
into
sub
jno
out
in
fcompl
mov
mov
loope
xchg
push
rcrb
test
das
push
lret
push
mov
pop
daa
mov
mov
ds
and
and
inc
mov
xchg
mulb
xchg
pop
in
fcomi
insl
cmp
jg
jge
aam
das
std
sbb
mov
adc
arpl
aaa
insb
cmp
inc
jns
mov
mov
adc
mov
and
call
roll
sub
aam
and
fwait
xlat
repz
mov
cmp
add
popf
sbb
or
adc
jle
push
insb
push
outsl
leave
ror
xor
std
inc
sti
les
pmaxub
xor
jo
xor
xor
push
nop
or
fbstp
mov
les
mov
repz
push
into
dec
cs
or
inc
das
cli
add
mov
mov
push
fstl
imul
notb
loope
popf
sub
aas
dec
sbb
dec
xchg
cmpl
push
jnp
mov
fnstcw
loopne
pop
dec
mov
adc
and
mov
xchg
xor
repnz
pop
mov
jl
xlat
mov
mov
pop
data16
and
mov
stos
sub
xor
jg
xor
mov
inc
sub
lea
fldenv
pusha
push
cmpsb
push
fwait
ds
lods
sub
pop
mov
sub
andb
loope
ss
mulb
mov
lret
test
add
gs
mov
dec
cltd
push
mov
les
xor
inc
js
rorl
pop
aas
mov
aas
jbe
loop
insl
mov
cmp
cli
es
shld
fwait
cmpsl
test
std
cltd
popf
inc
popa
sub
mov
lret
cmc
jbe
out
popf
adc
jae
push
jecxz
js
loop
cld
std
aad
add
adcb
sub
rep
jg
inc
lds
dec
push
mov
sub
xchg
std
inc
sub
jbe
int
mov
shll
leavew
push
cmp
in
cmp
repnz
out
movsb
sarb
roll
pop
lahf
mov
xorb
sub
jbe
rorl
ret
adc
lods
cli
les
fbstp
mov
test
push
cld
xchg
inc
pop
shll
in
movb
lret
cmpsl
xchg
addb
cmp
mov
add
pop
jp
dec
mov
jbe
xchg
pop
mov
adc
xchg
je
sbb
std
es
adc
adc
add
push
add
fs
push
stc
sbb
rorl
pusha
icebp
adc
mov
js
lret
push
add
add
dec
js
loope
pushl
popf
outsb
std
sub
in
out
cmpsl
cmc
cli
jg
mov
mov
out
push
xchg
lret
popl
inc
pop
and
aas
dec
ja
popf
and
adc
fsubrl
enter
xchg
psubd
sbb
sbb
insl
negb
std
xchg
ja
adc
mov
pop
adc
cmp
ja
into
inc
jp
aad
adc
jnp
rcl
cmp
daa
sbb
fidivrl
fimuls
in
jo
jle
dec
xchg
add
mov
imul
pop
mov
inc
subl
pushf
popf
pop
cli
aad
sub
fwait
ss
sbb
pop
cld
cmp
out
sbb
adc
xchg
popa
pushf
int3
sahf
loopne
test
fdivr
call
push
je
or
mov
les
add
jbe
push
xchg
push
mov
icebp
pop
inc
rcrl
popl
shlb
ljmp
xor
add
add
add
push
orb
iret
ficompl
mov
out
and
inc
push
xchg
sub
jecxz
ljmp
cmpl
push
out
ss
repz
mov
or
int
add
mov
sar
push
test
sbb
lahf
mov
mov
lods
sbb
mov
sub
imul
sbb
jg
mov
dec
pusha
stc
dec
mov
mov
ror
loopne
je
pop
pop
or
push
mov
cmp
dec
aad
call
mov
mov
pop
arpl
pop
lock
je
push
test
push
je
adc
out
cmp
popf
sbb
push
aas
nop
mov
fwait
xor
shll
or
pusha
sahf
pop
xor
inc
shll
cli
push
add
push
fidivs
mov
xchg
enter
inc
cmp
sbb
pop
call
dec
aas
fdivs
outsl
in
xor
aas
test
cmp
inc
ret
lds
push
xchg
push
dec
fsubp
push
cltd
adc
loope
in
jge
push
pop
addl
out
push
into
dec
pop
or
fcom
push
gs
ss
mov
mov
pop
cmovs
and
xchg
jo
mov
dec
pop
std
sub
and
cmpsb
mov
xor
enter
shrb
push
pavgb
add
clc
dec
push
sbb
lods
icebp
lcall
fisubrs
and
mov
out
xor
jb
sub
in
dec
xor
push
rolb
sub
int
push
pop
lea
call
imul
outsl
push
inc
sub
xchg
dec
jle
jecxz
push
out
jae
mov
push
repz
imul
mov
pushf
dec
cmp
es
adc
mov
int3
mov
lds
adc
and
int3
xor
imul
xchg
push
sub
or
stos
gs
out
push
sti
pop
fstpt
jns
icebp
mov
mov
xor
je
add
shl
fnsave
sbb
mov
in
test
adc
insb
mov
stos
or
imul
inc
das
ret
aam
and
and
add
stc
xor
out
and
adc
xchg
mov
xor
js
sub
ret
outsl
jmp
test
mov
les
push
jb
xchg
pop
cmp
aam
in
mov
aas
testb
test
and
repz
gs
mov
imulb
movsb
sub
xchg
mov
add
in
int3
xchg
push
iret
test
fsubrs
stc
loopne
jnp
jae
jg
gs
aaa
js
adc
xchg
cli
lcall
mov
pop
cmovnp
xlat
iret
pop
rcl
xor
subl
sbb
pop
loop
lods
iret
leave
sub
jns
mov
push
pusha
imul
ljmp
test
loop
adc
mov
iret
cmpsl
roll
pop
adc
loopne
sub
fstps
push
push
inc
clc
iret
jp
outsb
jne
fsub
jp
fdivl
jle
movsl
pushf
fsubrs
mov
cmp
pop
mov
push
jne
aad
dec
fs
xchg
mov
test
sti
mov
pop
ss
push
lds
stos
mov
movsb
mov
cmp
sti
xchg
xor
in
mov
jns
sub
pop
out
cld
xchg
mov
clc
ds
mov
lret
jg
rcrl
add
pusha
in
pop
sub
loopne
lea
sbb
mov
outsl
mov
cltd
lods
sub
cmp
dec
add
ret
movsb
push
mov
cmp
cmp
pop
ljmp
fcoms
jmp
je
or
xor
add
sbb
test
rolb
lods
loope
stos
gs
push
and
or
inc
sub
push
inc
sti
push
inc
dec
cmp
fs
and
jb
jl
aam
jg
test
aam
xchg
and
push
mov
xor
out
enter
test
sahf
sbb
fidivl
add
push
sbb
test
jns
fdivl
loop
stos
fisubrl
popa
pop
lcall
testl
fwait
leave
pop
xchg
sub
gs
icebp
dec
mov
and
sbb
xchg
or
fisttps
lds
sbb
testl
mov
cmp
inc
add
fs
sti
jle
jo
dec
lds
jl
test
mov
std
stos
jne
mov
jo
push
push
fmull
and
lea
shll
data16
mov
pop
or
sarl
and
fcompl
xchg
and
push
xor
xor
leave
xchg
adc
sub
push
outsb
jmp
mov
or
lods
idivl
sbb
add
out
mov
fcomps
push
pop
fisttpl
std
pop
or
jbe
fcmovnu
xchg
imul
out
cmc
icebp
add
pop
mov
daa
pop
mov
rcrb
es
push
adc
je
push
leave
push
pop
xor
mov
lahf
pop
and
push
out
xor
inc
jmp
dec
leave
in
inc
test
outsl
out
inc
mov
push
andb
jge
movsb
cmpl
cmpsb
mov
cld
add
mov
andb
xchg
sub
leave
mulb
fwait
mov
or
test
lret
dec
in
lret
pop
inc
cmp
hlt
mov
fwait
push
mov
movsb
sub
or
pop
call
cmc
pop
dec
xor
pop
std
adc
bound
dec
sbb
add
pop
adc
faddl
imul
fcom
mov
dec
out
clc
iret
push
gs
push
mov
mov
test
test
repz
loop
jns
addr16
insb
xorl
cmp
aas
pop
test
mov
mov
cmp
pop
cli
or
cmc
add
jno
mov
imul
sti
call
lcall
jne
test
dec
mov
aam
xorb
int3
lret
popf
push
push
adc
push
out
adcl
mov
inc
adcl
sub
mov
mov
dec
loop
jmp
pop
in
mov
stos
xchg
aaa
cmp
shrl
mov
sbb
movsb
movsl
inc
fcomp
subl
jbe
xor
jne
repz
data16
cmp
xchg
jns
inc
je
scas
or
cmp
inc
fistl
mov
stos
mov
cwtl
xor
pop
xchg
xor
and
dec
stc
cwtl
mov
or
out
mov
adc
push
imul
out
sbb
xchg
push
pop
inc
xor
fstl
loop
insl
and
push
mov
mov
push
cltd
enter
cmpb
push
cmp
out
push
lock
xor
fnstsw
xor
loope
je
cli
inc
mov
out
iret
sub
mov
insl
cmpsl
ljmp
out
mov
mov
sub
js
pushf
sahf
mov
dec
push
les
jnp
fsubl
pop
pop
adc
inc
and
imul
pushf
lret
push
imul
mov
xor
sub
cmc
mov
popa
push
mov
adc
addl
les
sub
push
jp
mov
fists
dec
scas
inc
xor
stos
inc
dec
stc
aad
push
adc
repz
enter
push
jecxz
cmp
mov
xor
filds
popa
adc
mov
push
scas
movsl
cmp
out
stos
lret
hlt
addr16
lods
inc
mov
imul
push
sub
ret
xor
inc
mov
fldenv
xchg
push
es
decl
ss
push
out
ret
out
pop
cmp
addr16
adc
mov
repz
lods
js
aas
or
mov
jecxz
movsb
lods
leave
lods
sbb
pushf
mov
jle
mov
adc
imul
jmp
push
js
in
mov
inc
pop
and
and
out
je
loopne
or
or
dec
out
sub
jns
sti
jmp
dec
es
xchg
xchg
loop
pop
je
or
shlb
and
out
xchg
push
pop
sbb
fcom
test
add
int3
jnp
adc
call
sbb
fnstenv
out
lock
push
or
jecxz
jae
mov
add
into
insb
fwait
jb
jle
jp
dec
cmp
stos
dec
pop
jb
pop
lret
arpl
push
lods
sahf
jne
ret
dec
dec
xchg
imul
mov
dec
jns
ja
hlt
aad
pop
mov
sbb
push
push
andl
into
call
push
mov
add
sub
movsl
sbb
push
and
jno
add
out
ret
push
pop
loop
xchg
jbe
ret
notb
jmp
cmovae
imul
repz
lods
pop
xor
mov
or
adc
mull
stc
push
dec
mov
add
dec
sub
pop
aaa
decb
lea
stos
cltd
ds
jns
jp
cmpsb
mov
lods
cwtl
insl
mov
addr16
fmull
popa
into
push
xchg
push
std
add
or
and
push
negb
mov
mov
dec
stos
icebp
in
pop
pop
loop
mov
mov
xor
push
cmp
lods
jbe
lcall
mov
jecxz
loop
mov
movsl
ss
je
jnp
data16
call
cwtl
sub
movsl
dec
lcall
mov
xchg
mov
mov
rclb
fists
mov
test
insl
stos
sarl
xchg
push
test
xchg
xchg
hlt
mov
push
lret
cmp
push
inc
lock
ljmp
add
scas
in
jbe
and
xchg
dec
fistpl
pop
or
mov
push
add
xchg
and
jg
repz
lea
popf
mov
and
mov
imul
rcrl
lret
inc
xlat
stos
push
lods
mov
shll
in
xchg
call
into
fldcw
mov
shlb
xchg
sbb
or
orb
cmp
loopne
jbe
nop
out
adc
mov
fadd
xchg
in
jno
sub
stos
popa
sbb
in
pop
aam
testb
sub
xor
jno
aas
xlat
jne
dec
call
push
test
mov
repnz
push
pop
xchg
cmp
ret
mov
bnd
sub
mov
ret
in
pop
ljmp
ja
pop
xchg
cmp
popa
lretw
dec
push
int3
mov
shlb
call
popa
repz
or
mov
fs
in
mov
inc
ret
ret
cmc
cltd
sbbb
hlt
lret
lock
mov
mov
sbb
test
scas
js
lods
jae
lahf
mov
in
fcomip
negb
mov
jecxz
cwtl
xchg
js
pushf
sbb
fsub
insb
mov
stos
aad
xor
popa
xchg
add
outsl
ds
aam
cmp
mov
adc
xor
and
xor
mov
sbbb
fisubs
push
out
jo
imulb
inc
lar
shrl
ds
loop
maxps
rcrl
es
lock
addb
and
bound
inc
test
mov
xor
daa
add
dec
in
rcrb
fadds
das
push
gs
sub
aas
loopne
cmp
rclb
dec
jp
cmp
scas
mov
stos
adc
jo
insb
xlat
subl
sbb
sbb
xor
push
sbb
jnp
add
pop
add
xlat
or
sub
in
xor
shlb
fdivs
pop
jae
cmp
das
sbb
repz
mov
fnsave
inc
test
and
push
mov
xchg
mov
and
inc
mov
xorl
inc
mov
mov
testb
push
or
fisubrl
les
sti
dec
mov
and
jb
dec
xchg
mov
xlat
pop
into
dec
sub
pop
jb
sbb
mov
fs
rclb
push
mov
out
sbb
jno
fisttpl
movsb
das
jnp
fsubl
stos
jns
push
fwait
addr16
mov
sub
adc
sub
aas
sub
jbe
add
loopne
outsl
hlt
in
sub
mov
fs
outsb
sbb
cmp
cmpsb
jle
ret
adc
lock
fdivrl
dec
mov
pusha
dec
and
push
mov
in
lock
arpl
or
clc
fcomps
mov
push
or
mov
shrl
rol
js
xchg
je
sbb
sbb
add
lahf
fwait
push
xor
not
and
and
dec
pop
mov
mov
adc
sti
repz
mov
cmp
cmpsb
insb
and
out
mov
cwtl
inc
sti
dec
fcoms
inc
cmpsl
je
dec
jmp
cmpsl
loop
test
scas
mov
fistps
add
mov
push
inc
add
xchg
inc
jecxz
sub
or
mov
aad
ret
flds
arpl
cs
push
out
push
inc
mov
nop
dec
and
jecxz
mov
add
jns
adcb
pusha
ret
inc
sarl
cmpsb
add
leave
mov
jp
stc
pop
add
ss
sbb
lret
in
sub
mov
xor
jnp
cltd
shll
push
ret
sub
lret
mov
in
icebp
mov
cmp
mov
int
xchg
loope
dec
loopne
and
pushl
mov
out
lret
int3
adc
js
fmul
insl
es
pop
dec
mov
inc
mov
mov
mov
jae
adc
xchg
fsts
scas
cmp
pop
test
outsl
pslld
add
adcl
sahf
add
shlb
inc
sarb
cmp
gs
dec
xor
leave
jbe
fwait
sbb
popa
mov
je
or
outsb
jp
pop
mov
cmp
push
jnp
lods
sbb
pop
mov
addr16
push
lcall
mov
mov
cmc
xchg
push
jmp
sub
sbb
jg
jp
add
and
sbb
sbb
cltd
mov
ljmp
fcompl
lret
or
stos
inc
mov
pop
inc
pop
cli
xlat
push
dec
bound
xchg
cmc
push
pop
mov
shll
aad
in
in
mov
orb
xor
or
xchg
sbb
stos
xor
sti
push
call
in
pushf
stc
in
add
jne
sbb
xor
repnz
xor
pop
and
scas
ret
inc
xchg
test
add
mov
jl
mov
adc
clc
adc
sub
repz
cmpsl
xchg
jno
inc
icebp
cmpxchg8b
fdivrl
shrl
jbe
xchg
flds
push
mov
into
lock
ret
mov
cmpb
mov
insl
dec
ljmp
xchg
push
test
sub
imulb
test
and
sub
lret
push
out
lahf
ds
pop
hlt
jmp
pop
into
movsb
sahf
es
pop
jge
mov
addr16
mov
inc
ffree
leave
fcoml
fadd
and
adc
mov
int3
jmp
cld
lods
cwtl
out
fimull
sub
cmpsl
int3
ss
js
aas
xchg
out
adc
adc
psubd
mov
stos
lods
stos
jp
sahf
push
aas
fwait
cmpsl
roll
loope
add
ja
icebp
inc
sbb
ret
mov
out
push
insb
jge
add
fstpl
push
xchg
pop
test
pop
mov
xchg
mov
fiaddl
sub
ja
xor
cmp
sarl
lock
or
pop
jne
dec
repnz
test
insl
lret
xchg
cmp
loope
sbb
mov
add
dec
cmp
mov
or
stos
in
jmp
ds
divl
push
sub
sbb
mov
mov
add
sbb
aad
mov
xchg
pop
mov
jnp
jle
mov
mov
mov
pop
stos
leave
ret
inc
push
mov
xchg
inc
xchg
lret
bound
sbb
inc
in
shr
push
arpl
in
sub
out
cmp
scas
sti
add
lea
adc
dec
scas
jp
jbe
fbstp
ljmp
pmulhw
mov
leave
pop
scas
sbb
lea
mov
les
cmp
inc
xchg
inc
cs
popf
jecxz
jb
inc
mov
xchg
mov
in
cmp
adc
cmp
push
jbe
inc
mov
test
push
xchg
fidivl
shll
cmp
xchg
clc
aaa
mov
dec
xchg
sub
dec
das
sub
push
xchg
out
cs
das
lock
inc
mov
xchg
mov
ss
cs
xchg
ret
sbb
pop
fcmovnb
shlb
xchg
in
test
flds
pop
hlt
test
in
pop
cmp
mov
xchg
jg
lods
inc
cld
cmp
les
mov
jns
mov
out
sub
dec
imul
mov
or
jne
mov
cld
dec
test
sti
in
sub
fistpl
rcr
mov
jno
mov
push
std
das
jp
jmp
xchg
mov
mov
mov
rorl
push
jmp
clc
and
mov
les
pushf
mov
dec
jb
fistl
sub
xlat
imul
mov
push
mov
push
sbbb
mov
leave
clc
mov
je
fmulp
jnp
call
fwait
and
xchg
and
aaa
and
fimuls
insl
pop
dec
cmc
xchg
mov
test
divb
and
clc
dec
push
outsl
adc
sub
sub
fwait
lcall
jne
jbe
inc
jecxz
jecxz
push
push
and
adc
in
xchg
mov
pop
xor
mov
cmp
add
xor
xor
xor
pop
test
mov
adc
push
cmp
cmp
pop
xor
cwtl
sbb
pop
rorb
ja
xchg
cmp
dec
lea
ficompl
stos
je
fs
in
int
mov
xchg
xor
iret
outsb
xor
out
lds
and
cmc
rclb
fistps
out
cli
loopne
and
cmc
out
dec
mov
inc
jecxz
cmp
push
pop
and
xchg
sub
scas
pop
shrb
push
inc
xchg
popa
adc
xlat
arpl
mov
mov
out
clc
loope
push
mov
lret
jp
vpaddusb
fstps
leave
fidivl
jl
mov
popa
stos
cmp
lret
sub
sbb
push
cmp
fidivrl
dec
ror
in
xor
pop
xchg
sbb
sub
dec
sub
xor
xchg
cmp
push
daa
dec
pop
cltd
pop
je
pop
push
ljmp
jl
inc
add
mov
mov
inc
in
mov
lret
pop
test
mov
andb
outsl
movsl
push
add
dec
sbb
fs
pop
sub
cmp
and
pop
mov
pop
dec
push
inc
loopne
ljmp
test
popw
in
lds
faddl
jg
pop
scas
sbb
incb
arpl
mov
xor
cmp
test
jb
jbe
bound
sub
sub
rcrb
add
ja
orb
ja
lahf
ljmp
and
adc
jecxz
mov
outsl
jmp
bound
push
orl
clc
pop
xor
inc
fstpl
sbb
dec
and
mov
xor
inc
pop
jnp
pop
outsb
inc
jge
or
bound
out
loop
movsb
cmp
inc
push
lahf
adc
mov
add
sbb
push
xor
mov
fnstcw
adc
mov
imul
cmpsl
rorb
and
neg
insb
mov
jae
aaa
push
pop
xchg
nop
std
jno
movsb
sub
or
jecxz
adc
int
sbb
fnstenv
in
mov
repz
pop
mov
sub
aam
jge
pop
sub
dec
nop
aaa
mov
add
cmp
fwait
sub
mov
mov
mov
mov
incb
cmc
sub
cmp
iret
in
cwtl
mov
js
jmp
outsb
lds
jecxz
inc
mov
xor
add
rcll
jnp
or
add
call
sbbb
popf
roll
sub
cltd
inc
pusha
push
test
ja
dec
and
aaa
sahf
stc
mov
xchg
mov
addr16
dec
jae
jne
popa
inc
fistps
in
cmpsl
push
mov
sbb
hlt
outsb
addr16
int3
push
movsl
inc
addb
or
mov
adc
add
dec
jg
jo
shl
mov
mov
pop
pop
addl
shrb
sbb
push
pop
lods
sub
pushf
pop
mov
xor
pop
mov
pushf
lods
inc
push
jecxz
or
push
sbb
mov
mov
cld
cmp
adc
inc
loopne
pop
adc
inc
dec
fcoml
mov
xchg
addr16
inc
pop
test
sbb
mov
jle
mov
test
sarb
xor
sbb
jge
or
add
ds
inc
xor
insl
xchg
cmp
mov
inc
or
ja
sahf
push
fadds
xchg
adc
pusha
jne
mov
cmp
jmp
dec
lods
sarb
cmp
sbb
ds
movsb
shlb
pop
cmp
adc
call
cmpsb
push
lcall
icebp
shrl
lock
cmpsb
outsb
push
ja
add
add
dec
sub
and
jnp
xor
xor
add
rep
sbb
out
xchg
and
popa
outsl
pop
out
mov
pop
daa
xchg
int
lods
flds
arpl
inc
bound
mov
out
pop
hlt
popf
stos
data16
mov
fdivrs
cld
test
ja
dec
jno
adc
stc
fwait
cs
mov
movsl
nop
in
inc
lea
int3
jge
xlat
fs
rorl
in
jge
and
pop
mov
loop
pushf
xchg
jns
xchg
aaa
push
rorb
push
xchg
add
cmp
jbe
xor
stos
cwtl
and
jle
fstps
mov
sti
mov
out
cmpb
inc
cmp
or
inc
pushf
jl
add
in
js
sub
push
mov
loopne
cmp
pop
test
and
cld
jb
mov
mov
lods
push
mov
and
dec
mov
rolb
mov
lea
insl
movsb
sbb
fimuls
test
mov
add
pop
pusha
mov
push
mov
lret
jp
mulb
inc
dec
std
inc
pop
and
cmp
les
lret
enter
sbb
lock
push
pmullw
jl
jnp
adc
fistl
xchg
rorl
push
maxps
outsb
rorb
mov
xchg
pushf
rcrl
iret
lds
sahf
push
sbb
sub
mov
sahf
int
jbe
xor
jmp
mov
mov
test
push
movsb
mov
pop
sti
sub
mov
mov
mov
mov
add
sti
out
in
js
or
sahf
and
push
xor
loope
fisubl
xchg
push
adc
jecxz
fs
adc
xor
sahf
xorb
ret
incl
xor
inc
cld
pop
or
ja
jmp
jns
sbb
ja
pop
xchg
and
or
int3
fwait
mov
push
imul
clc
mov
and
cmp
jnp
push
dec
aas
push
add
adc
pop
push
cmpsb
dec
xor
repnz
sarl
int
pop
jmp
test
fisttpll
xchg
pushf
sahf
in
pop
rcll
lret
out
add
lret
movsb
push
andl
pop
push
loopne
test
mov
popa
dec
pushf
cmp
mov
jg
test
stos
addr16
sbb
imul
and
push
and
pop
loop
mov
pop
mov
mov
dec
in
mov
xchg
adc
adc
jo
pop
test
lds
movsl
aaa
push
and
bound
add
pop
in
xchg
xlat
xchg
xor
cmc
mov
or
pop
out
push
push
lods
orl
sarl
lock
mov
mov
test
cld
dec
jge
daa
push
adc
pop
or
arpl
call
push
push
mov
jno
sub
add
and
in
in
sub
out
popa
inc
pusha
ret
sti
loop
int3
mov
jno
mov
ss
adc
or
insl
subb
leave
fistps
xchg
stos
scas
movsl
mov
inc
cmpsb
and
push
xchg
jo
cld
fwait
jl
cltd
aas
gs
into
jbe
das
rcrb
test
sbb
or
mov
or
push
jp
ret
addl
cli
add
or
out
mov
mull
add
xchg
add
and
jecxz
mov
fbstp
pop
dec
xchg
inc
pushf
pop
mov
out
outsb
testl
adc
adc
loope
das
iret
cltd
jo
xor
mov
in
cmpb
mov
addb
fimuls
or
fisubrs
add
movsl
loop
jg
stc
lret
in
xor
std
sub
jg
loope
orl
cmpsl
inc
pop
mov
xchg
adcb
sub
cmp
jge
je
push
xor
dec
daa
inc
iret
dec
insb
adc
push
xor
dec
int
xor
loop
lock
in
sub
push
inc
stos
and
iret
test
sbb
repnz
sub
add
sub
iret
xchg
and
mov
mov
pop
mov
shll
std
mov
cmpsl
sbb
mov
fcomi
push
ret
mov
iret
sbb
inc
sub
scas
xor
insb
nop
xchg
mov
adc
fidivrl
adc
mov
adc
mov
sub
or
mov
sbb
or
stc
in
or
jmp
inc
rolb
dec
ja
sbb
mov
xchg
mov
push
std
gs
cs
mov
ret
outsb
out
pop
jp
test
pop
sub
loopne
mov
icebp
lea
push
shrl
shlb
int3
repnz
inc
adc
mov
dec
fs
xor
rol
sbb
jae
sbb
lcall
inc
hlt
fsubp
and
pop
mov
aaa
sahf
ds
xlat
fldcw
fimull
xor
in
fs
cmp
cmp
es
pop
movsl
xchg
gs
js
sbb
and
pop
sahf
in
inc
xchg
outsb
shrl
aad
sbbl
adc
in
jae
dec
inc
es
jle
out
sahf
loope
hlt
arpl
mov
pop
or
iret
cld
pusha
add
and
jl
pop
xchg
add
fstl
mov
mov
mov
cmp
lods
push
andl
imul
es
or
or
dec
cmp
lods
sbb
ret
xor
scas
ret
out
test
fsubr
int3
inc
jmp
js
xchg
aaa
xor
in
xacquire
scas
repz
xchg
jae
pushf
jecxz
jp
mov
mov
sub
aas
xchg
cmp
hlt
scas
ret
and
mov
pop
mov
iret
sub
insl
mov
mov
jno
xchg
cltd
lret
or
fistpll
adc
subl
mov
add
out
aad
fisttps
out
pop
pushf
pop
adc
cmp
push
aam
push
pusha
in
sub
cmp
ret
addb
addr16
call
dec
loop
inc
jb
dec
inc
mov
in
lret
addr16
orl
out
iret
pop
adc
js
fisubrl
jle
rcl
sub
jg
incb
cmpsl
dec
xchg
sub
push
push
and
cmp
mov
xorb
jg
out
repz
xchg
pop
jg
bound
pop
adc
mov
or
repnz
xor
mov
adc
data16
push
jno
push
outsb
mov
fnclex
loopne
inc
scas
dec
sbb
imulb
push
or
int
xchg
lret
std
pop
imul
outsb
rorl
sub
ss
ja
jb
dec
xor
xchg
addb
ds
fsubl
inc
pop
mov
push
aad
jnp
scas
test
lods
aam
notl
xchg
push
in
jae
mov
into
xchg
mov
push
ja
outsl
fcomp
mov
movsl
jmp
pop
cwtl
mov
cld
mulb
xchg
jae
jne
sub
cmc
xchg
sub
subb
cmpl
push
test
add
fdivs
out
xor
out
jne
dec
sub
mov
fnsave
loopne
mov
push
js
push
lea
shrb
xor
or
fcoml
add
xor
cmpsl
fsubs
loop
or
xor
and
outsl
push
push
xor
aaa
add
es
mov
les
int3
movsb
or
push
mov
pop
jmp
adc
data16
in
mov
cmp
mov
aam
sub
push
push
xchg
mov
imul
xchg
testl
stos
in
lock
and
and
dec
cmp
mov
mov
sub
orl
dec
ja
dec
cmpb
hlt
es
sbb
xchg
mov
mov
ds
shlb
sbb
push
mov
repnz
xchg
call
repnz
out
ljmp
movl
cwtl
rclb
ljmp
fld
loop
push
pop
xor
adc
data16
xor
sti
add
push
push
test
les
rcl
xor
ret
outsb
lock
or
xor
inc
mov
data16
adc
xchg
fwait
out
rcll
xorl
mul
pusha
jb
in
enter
inc
lds
push
pushf
sub
nop
and
adc
cmp
fwait
xchg
data16
pop
xchg
and
pop
bound
xchg
aas
in
out
std
jmp
jbe
add
and
lock
jne
xchg
sbb
and
mov
dec
js
jle
bound
test
repz
mov
lret
and
sbb
push
stc
aaa
lods
loope
inc
xlat
sub
rolb
les
in
and
mov
cli
lods
sbb
mov
mov
icebp
add
cld
clc
pop
add
fbstp
jo,pn
cmp
fmuls
imul
loop
leave
jno
fs
std
pop
mov
repz
into
ret
push
call
and
or
jl
adc
jg
subl
std
aam
dec
stos
xor
pop
sub
mov
mov
add
insl
mov
lods
jmp
lods
fdivl
push
fistl
lret
jecxz
push
pop
clts
pushl
mov
sbb
cld
xor
stc
mov
cmp
or
scas
mov
test
out
xchg
mov
mov
aam
pop
mov
push
mov
jne
fmul
adc
mov
cwtl
sub
pop
sbb
xorb
int
test
pop
push
loopne
in
add
fs
cmpsb
mov
scas
imull
jne
jb
aad
push
ret
push
mov
icebp
and
out
aas
inc
bound
mov
shll
dec
dec
js
adc
ret
lahf
stc
je
lock
mov
lods
add
lods
ret
stc
cld
mov
int
sbb
xor
jmp
jns
imul
sub
pop
jns
fldenv
stos
lods
je
sbb
mov
jle
scas
cltd
icebp
fs
sahf
dec
sub
pop
test
xor
dec
fwait
iret
cmp
cmp
lock
push
mov
jg
cmp
sbb
loopne
in
xor
push
fldt
xchg
arpl
test
mov
cli
ljmp
out
or
dec
pop
push
sub
fldcw
jmp
comiss
inc
test
inc
fldl
rep
pop
bound
xchg
sbb
sbb
xor
dec
dec
adc
scas
cmpsb
pop
cwtl
leave
sbb
pop
and
lea
in
outsl
inc
aas
ds
inc
xchg
fdivl
lock
inc
stos
pop
cmp
cs
xchg
jp
sbb
or
mov
push
xlat
dec
stc
sub
xor
or
push
dec
ljmp
clc
mov
cmp
in
push
push
pushf
stos
mov
and
stos
sub
mov
mov
repz
lahf
mov
dec
adc
mov
addr16
fnstsw
mov
addr16
mov
mov
sahf
rolb
sub
loopne
insl
xor
jae
cli
shll
cwtl
inc
leave
jbe
pop
movsl
lods
or
mov
mov
adc
cld
pop
cmp
adc
add
cmp
psllq
mov
pop
cmpsl
push
lods
dec
mov
lds
std
jmp
negl
aaa
pop
mov
out
enter
add
in
data16
jo
jmp
cmpsb
xor
cmp
and
into
das
mov
cmp
mulb
cmpsb
jl
jg
mov
xchg
jge
ja
mov
push
and
into
mov
rcll
addr16
mov
sub
repnz
jnp
adcb
cmpsl
sub
mov
fwait
rolb
mov
icebp
gs
sbb
shrb
mov
out
dec
or
shlb
ds
loopne
shlb
push
sub
pop
out
inc
adc
fiadds
in
mov
add
mov
icebp
inc
fwait
shr
mov
cmp
jns
mov
push
mov
stc
mov
sti
sbb
jge
mov
lods
test
mov
jae
leave
in
arpl
cmc
call
les
je
ja
movsl
gs
xchg
jle
xchg
pop
mov
and
shll
adc
push
test
adc
test
inc
jle
cmp
inc
pop
shrl
mov
loope
and
sti
cld
pop
mov
sar
out
adc
lret
cmpb
aam
push
sarl
or
pop
fidivl
das
pop
jg
cmp
cli
sti
int3
push
mov
mov
ljmp
leave
jg
jmp
movsl
jne
cmc
jmp
mov
mov
insb
ret
jp,pt
jo
outsb
sub
data16
cmp
icebp
jbe
addl
cmc
movsb
aaa
bound
pop
pusha
cmp
es
mov
cmp
cmp
lahf
adc
mov
jae
imul
cmp
pusha
xorl
xor
inc
stos
in
xor
xor
cmc
or
or
orb
mov
sub
ret
outsl
sub
pop
xchg
sarb
mov
cmpsb
pop
gs
mov
mov
adc
cmp
nop
push
push
adc
pushf
xor
nop
sbb
push
int
add
scas
rcl
mov
insl
clc
mov
dec
out
rep
sub
pop
pop
xchg
xor
mov
sbb
pop
shll
add
mov
mov
rolb
mov
dec
test
jg
das
push
push
out
clc
outsl
adc
mov
cmp
sub
in
sub
and
cmp
enter
adc
repz
xchg
test
mov
fwait
adc
mov
fstl
jne
push
pop
daa
and
daa
xchg
lret
jecxz
push
xchg
mov
mov
jl
mov
xor
inc
orb
insl
jp
out
rclb
mov
sti
stos
push
xchg
dec
test
fsts
repnz
inc
jmp
aaa
pop
cmp
mov
xor
popa
stos
mov
xor
lock
loop
test
and
add
inc
adc
fnsave
push
popa
mov
test
jg
push
dec
jmp
sti
std
loopne
shrl
iret
stc
cmp
hlt
sbb
lods
hlt
outsl
enter
stos
dec
pop
leave
xchg
cmp
sbb
jmp
test
out
push
in
adc
push
xchg
mov
xchg
mov
aam
xchg
mov
jl
mov
ret
call
mov
pop
js
test
sarb
pop
iret
daa
xchg
xchg
fs
pop
in
fwait
mov
leave
push
clc
daa
in
pop
pop
fisttpl
stos
lcall
push
adc
jmp
mov
fisttpll
js
shrb
sahf
call
xchg
js
in
and
lcall
add
cmp
and
mov
add
xchg
and
bound
push
lods
cmpsl
clc
pop
fistl
jno
cltd
jo
mull
lret
js
push
pusha
xor
inc
int3
cmp
lcall
test
xchg
and
out
mov
adc
pop
pop
mov
dec
popa
jg
dec
jno
pop
rol
cltd
in
mov
dec
add
dec
xchg
push
aas
sar
or
xor
and
add
adc
lcall
movsl
mov
in
ja
jp
ret
mov
mov
dec
add
fimuls
jmp
enter
popa
aas
sub
mov
into
fisttpl
add
imul
push
mov
cli
mov
jg
pop
das
jge
mov
mov
rcll
sub
incl
jge,pn
subb
fisubrl
repz
mov
mov
sbb
shl
rolb
dec
test
mov
mov
cmpsb
lret
sti
or
es
mov
fnstcw
out
xor
add
sbb
jne
xchg
pop
in
xorb
adc
mov
jle
add
cld
shr
add
xchg
ret
mov
pop
sub
adc
xchg
jge
inc
movsb
adc
mov
ljmp
mov
pop
dec
xchg
xchg
or
fsts
sbb
leave
mov
jns
pop
lds
rcrb
js
or
xchg
jnp
mov
les
push
sbb
fidivrl
std
mov
sbb
pop
outsb
add
xchg
dec
mov
nop
sub
mov
adc
inc
aad
out
mov
push
xchg
push
ror
ljmp
imul
inc
das
mov
mov
flds
pusha
pop
mov
sub
iret
int
hlt
adc
pop
pop
mov
mov
pop
cmp
push
scas
dec
dec
pop
xor
adc
aam
repz
adc
lock
and
aam
or
pop
xor
add
cmpsb
xor
sbb
ss
push
inc
cmp
pop
dec
lret
sub
add
popa
mov
inc
or
aaa
pop
out
in
cmc
ja
push
fcmovbe
sbb
push
gs
insb
fstpl
outsb
xor
sub
fcom
mov
cmp
inc
lret
mov
in
and
sub
mov
and
int3
addr16
imul
sbb
cmp
sub
cld
and
inc
popf
mov
mov
jg
int3
jp
dec
sub
mov
cmp
dec
jecxz
lret
or
jp
aad
or
ja
or
sbb
dec
push
jmp
and
pusha
sbb
mov
cmp
pop
shlb
sub
mov
xchg
std
insl
sbb
stos
jo
jmp
xor
xor
xorb
dec
mov
cmp
cmc
push
push
gs
ficompl
inc
dec
cwtl
ljmp
sub
add
cli
or
mov
mov
or
dec
das
or
fsubl
or
ffree
jns
insb
sub
mov
dec
loopne
inc
mov
add
divl
lret
mov
int3
adc
jnp
dec
sub
ds
stos
aas
les
cmp
inc
cmpsl
stc
jp
cmp
mov
sub
push
sbb
cli
aas
sbb
pop
rclb
jne
and
dec
cmp
xor
js
sbbb
mov
rclb
gs
iret
sub
or
mov
dec
je
mov
imul
icebp
xor
mov
test
xchg
add
xor
scas
jo
rorl
or
mov
sbb
sbb
jb
inc
fnstcw
div
xchg
mov
pusha
jbe
jae
jno
int
adc
cmp
out
xchg
test
icebp
fildl
jge
add
or
sbbb
aad
dec
repnz
shlb
mov
outsb
adc
mov
les
clc
addl
mov
sub
and
inc
dec
ficoml
sbb
and
cmp
fldcw
int
loope
iret
je
adc
push
sub
fmull
fs
pop
and
add
jne
dec
jp
ja
enter
mov
add
std
pushf
mov
push
jno
jbe
addb
clc
sbb
aam
jbe
loope
sbb
pop
les
scas
movsl
sarl
popf
pop
push
jle
dec
stos
js
add
push
fdivrl
jge
inc
push
ss
test
stos
cwtl
push
call
xchg
adc
jl
leave
jle
push
std
cmp
ljmp
push
cld
pop
xchg
in
subl
jne
cmp
scas
aaa
jecxz
int
jl
adc
popa
push
popf
lret
scas
sahf
push
xor
sub
jl
xchg
clc
lock
dec
jecxz
rclb
adc
mov
sub
les
push
in
in
test
fldcw
jge
and
je
mov
ret
jno
xchg
add
repnz
sbb
lret
mov
daa
push
jle
jp
mov
mov
mov
jecxz
fsubl
sbb
in
mov
lret
add
mov
out
jl
psubsw
movsl
mov
gs
shll
ja
sti
addb
cmpsl
sti
test
cmpsl
in
pop
lea
push
daa
mov
and
insb
jnp
aaa
push
dec
in
inc
add
in
cltd
cmp
cmpsl
push
std
icebp
mov
jecxz
test
shr
mov
dec
stos
jmp
test
lret
and
test
or
jnp
aad
in
inc
cs
push
adc
mov
xchg
jmp
jmp
fimuls
lahf
inc
lods
shlb
xchg
test
xor
leave
add
or
roll
mov
mov
ret
insl
loopne
dec
int
into
shll
xor
sub
test
shll
aam
aad
mov
or
dec
adc
push
enter
cmpsl
outsb
in
xchg
push
dec
pop
into
pusha
push
shlb
flds
aas
xchg
ja
xor
cwtl
mov
stos
subb
dec
pusha
adc
outsl
enter
fcompl
sbb
ja
jae
or
fisubrl
mov
xor
out
das
jne
and
loop
add
xor
inc
mov
cmp
mov
or
inc
orb
xor
cli
in
fistpll
test
sbb
pop
xchg
add
pop
ja
loope
in
loopne
sbb
and
sbb
fldcw
inc
fstpl
jg
inc
out
in
push
dec
jns
xor
sub
push
rclb
lds
test
pop
fstl
test
mov
adc
adc
jmp
scas
fsubrl
mov
add
xlat
inc
push
pop
jecxz
js
jg
xchg
insl
add
clc
mov
dec
out
dec
mov
or
mov
fisttpl
int
add
popf
dec
or
pop
jnp
push
add
jo
inc
pop
sbb
cs
pop
xchg
mov
sub
and
aam
out
xchg
add
hlt
rol
mov
adc
imul
push
and
adc
jle
jmp
movsb
dec
lcall
je
push
mov
push
and
add
xlat
and
jbe
xchg
mov
mov
rclb
mov
mov
testl
out
ret
insl
and
mov
or
or
je
inc
addr16
cli
sub
xchg
pop
lods
lds
insb
fld
call
insb
dec
pop
aad
lahf
fimuls
xor
sbb
push
dec
cmpsl
xor
fcompl
push
and
outsl
push
out
loopne
jmp
outsb
fcmovnu
cmp
xor
aas
fadd
aad
jno
sbb
enter
mov
sbb
xor
insb
js
jnp
stc
loopne
inc
xchg
xor
cmp
mov
pop
lock
fcmovne
scas
or
dec
pop
mov
js
pcmpeqd
fidivrl
dec
jmp
mov
dec
jmp
jns
jnp
loopne
xor
ficompl
call
fcomps
add
js
cs
insl
jg
lret
cmpsl
cltd
mov
shlw
inc
ds
fs
std
idivb
mov
into
ljmp
lret
je
sbb
adc
mov
or
inc
adc
xchg
jmp
or
aam
xor
push
mov
xor
outsl
cmp
imul
dec
jno
inc
cld
lods
mov
aad
cmp
sti
lret
mov
cmp
cltd
adc
insb
sub
lds
in
mov
cmc
cmc
imul
mov
or
jl
xorl
pushf
movsl
sbb
push
sub
adc
popf
iret
imul
push
xor
lahf
mov
stos
push
cli
mov
out
cmp
icebp
and
popa
xchg
lds
mov
adc
mov
repnz
leave
popa
stos
push
mov
and
adc
addb
adc
je
inc
jnp
rorl
pop
dec
dec
cltd
xlat
mulb
xchg
mov
loopne,pt
and
xlat
enter
mov
push
lret
cld
sub
in
inc
xlat
mov
xchg
or
loop
sti
cmp
sti
cwtl
push
ret
mov
dec
ficompl
sarl
lret
ficomps
loope
lret
dec
xchg
shll
dec
repz
push
out
or
fcmovnb
xchg
test
orb
and
mull
mov
pop
sub
add
movsb
pusha
call
adc
add
subl
dec
inc
xchg
sbb
add
pop
fxam
pop
adc
pop
test
nop
dec
or
sub
int
vpaddsw
push
lock
shl
jb
nop
mov
push
jno
lods
adc
in
flds
cld
movsb
popa
sub
xchg
fisttpl
imul
sub
test
add
push
ja
in
sbb
sub
dec
push
test
inc
fcompl
inc
push
lea
filds
testl
mov
cs
mov
pop
or
rolb
fwait
test
popa
adc
outsb
pop
nop
mov
sbb
or
add
imul
sub
and
cs
lods
cmp
push
lea
xor
add
jno
cmp
dec
lods
or
lcall
adc
jae
sti
hlt
xchg
mov
mov
jae
mov
cmp
call
gs
hlt
sub
shl
faddl
xorl
mov
jns
mov
out
pop
mov
push
and
outsb
andb
nop
out
lds
repnz
out
ja
sbb
xchg
cmp
mov
jmp
xchg
fiadds
xor
outsb
movups
mov
xchg
jb
sahf
pop
shll
sub
push
mov
mov
sub
jle
rol
insl
call
mov
cmpsb
mov
inc
or
jmp
jno
add
sbb
stc
pop
mov
jecxz
mov
push
je
push
das
icebp
les
imul
mov
xchg
cmp
push
repnz
cmp
pop
mov
jae
test
adc
pop
lds
cmpb
xor
andl
stos
leave
or
dec
jle
inc
fcompl
add
fs
fs
cmp
xchg
es
popa
sbbl
pop
pop
pop
xchg
or
adc
sbb
xchg
inc
cmp
rorb
cmp
pop
mov
xlat
xor
adc
and
lcall
jg
cld
sub
mov
out
aad
hlt
dec
inc
jle
pushf
and
dec
outsl
push
mov
pop
sub
stos
jg
mov
dec
xchg
mov
dec
pop
inc
outsl
inc
aad
or
cmp
jnp
in
lock
push
or
imul
mulb
mov
pop
add
mov
shll
xchg
push
nop
movsl
lods
mov
xchg
pushl
clc
dec
pop
jmp
pop
jg
iret
mov
push
or
mov
sub
popf
xor
mov
cs
xchg
or
aaa
xchg
cmpsl
xchg
clc
loope,pt
mov
and
aam
les
jne
clc
xlat
lods
inc
mov
cmp
nop
inc
pop
data16
add
sbb
es
jne
pushf
js
rcrb
sbb
pop
hlt
pusha
lret
pop
push
push
pop
iret
lea
popa
sbb
daa
pop
mov
cmp
add
rorb
sbb
scas
push
repz
pop
ja
cmp
xor
xor
test
mov
lret
pop
int3
pop
mov
mov
outsb
inc
jnp
sub
dec
fidivrs
sub
aam
shrb
xchg
push
and
loopne
pop
sub
shlb
xchg
int
jns
push
cmpsl
test
xor
jmp
movsb
mov
leave
or
mov
shll
insb
mov
and
cld
mov
mov
cld
pop
hlt
lock
rclb
test
je
dec
lock
cmc
xchg
pop
xlat
push
xchg
cltd
es
pop
jge
test
pop
jno
xchg
mov
pop
push
pop
pop
cld
mov
mov
jge
jne
jge
sbb
inc
ljmp
flds
push
daa
sub
aad
pcmpgtw
roll
enter
cmc
and
rcrl
sub
aad
loopne
lods
loop
icebp
add
adc
sub
adc
jne
js
push
mov
push
mov
test
lock
and
dec
inc
nop
mov
pusha
jo
cmpsl
aad
inc
aas
mov
cmp
or
jb
cltd
call
pop
xchg
shll
int3
mov
shl
push
subb
fldenv
stc
mov
add
push
adc
or
mov
push
inc
add
mov
sub
repnz
lds
arpl
jo
pusha
inc
notb
xchg
push
hlt
aam
push
pop
inc
loopne
and
sbb
cld
fsubrs
jno
mov
cmp
test
inc
pop
fisubs
inc
sbb
hlt
shlb
roll
dec
mov
jmp
movsb
shr
dec
lcall
outsb
jecxz
pop
xchg
sti
or
bound
out
sub
or
cmpsl
outsb
adcl
jge
mov
jbe
dec
jb
add
sbbb
adc
add
xlat
xchg
hlt
and
mov
lret
push
mov
add
lret
iret
scas
mov
push
js
inc
xchg
in
dec
inc
orl
inc
sub
inc
push
jl
push
mov
pop
mov
xlat
aad
mov
leave
int3
add
xor
filds
push
lret
cmp
scas
repz
mov
inc
inc
fwait
std
ret
test
jae
test
xchg
xchg
mov
mov
pusha
fdivl
frstor
aad
shl
xchg
sahf
mov
ds
daa
test
mov
inc
fldl
cwtl
repz
insb
sbb
mov
or
sbb
lcall
jecxz
movsb
ret
cmp
lods
subl
je
xchg
sub
add
int
ds
fwait
cmpsb
in
test
out
ja
cmp
fiaddl
push
rcll
shl
push
mov
sbb
jecxz
cmp
mov
movsb
jle
push
addr16
sti
mov
dec
mov
and
sbb
inc
sti
xor
frstor
imul
jg
add
mov
ds
xchg
in
add
pop
and
sbb
adc
insl
push
adc
lea
or
pop
dec
or
jmp
pop
bound
movsb
imul
jae
push
rcrl
cwtl
push
rcr
dec
jne
mov
cmp
xchg
inc
sub
xor
jae
sbb
incb
inc
pop
lods
dec
jecxz
fists
enter
add
imul
fwait
adc
or
jmp
sbb
mov
cmpsb
les
aas
jle
push
movsl
fdivs
imul
sti
enter
imul
sub
rol
hlt
sbb
insb
xlat
sbb
jmp
lods
adc
jbe
xor
inc
sbb
lret
dec
cli
cmp
test
bound
mov
mov
inc
ja
popa
pusha
mov
cmp
sub
lret
testb
clc
cmpsb
imul
push
test
pop
int
xor
in
mov
lahf
inc
je
in
sub
adc
enter
in
fcmovnb
mov
add
jmp
test
xchg
mov
aaa
push
sub
out
add
movsl
and
loop
jns
sbb
push
lock
xchg
test
sub
adc
mov
pop
loope
adc
mov
pop
rcll
push
daa
es
loopne
in
mov
fisttpl
inc
ds
int
repz
ds
jb
hlt
ret
push
or
std
adc
inc
and
mov
insb
add
mov
inc
outsb
lods
add
js
fsubrl
cmp
loope
ficoml
int
inc
cmp
andb
mov
es
nop
lahf
sti
loope
imul
mov
call
mov
sub
mov
movsl
loope
or
out
inc
mov
mov
daa
pop
xchg
ja
int
adc
pop
jbe
pop
fdivrl
mov
dec
adc
jnp
jb
push
add
mov
mov
bound
mov
jg
push
imul
jmp
mov
mov
addr16
ds
add
insl
sbb
mov
xor
out
or
inc
fdivr
inc
ret
subb
dec
sub
xor
outsl
sar
in
jb
in
fsubrs
enter
lods
jge
loope
xor
sub
outsl
xchg
push
mov
out
dec
cmp
loopne
int
xchg
jmp
lock
pushl
shll
adc
push
lret
test
push
jge
loop
xor
sar
inc
mov
pop
pop
sbb
xchg
fnstcw
in
nop
cmc
lock
jae
sub
stos
inc
lret
sbb
lcall
jae
inc
lcall
aas
out
mov
inc
xchg
outsb
adc
rclb
pop
push
xchg
into
js
pop
adc
divb
adc
or
xchg
cmp
dec
ficomps
sbb
add
lahf
repz
push
call
or
and
in
jp
mov
push
out
lret
add
js
lret
mov
dec
lds
pushf
jo
les
clc
aaa
mov
es
push
xor
or
xor
xchg
movsl
into
mov
push
push
sub
cli
inc
pop
ja
adc
lods
add
popa
jb
cmp
cmp
test
jge
xor
jne
loope
xchg
pop
jo
ret
xchg
test
jns
dec
fcmovu
xchg
jl
stos
mov
ljmp
adc
das
ficomps
xchg
xchg
inc
jnp
pop
rol
cmp
mov
inc
jmp
fcoml
in
lcall
ffree
xor
pop
test
sub
xchg
out
sub
addr16
mov
mov
mov
ret
xor
loop
mul
push
xor
push
mov
pop
jo
testl
xchg
jne
ljmp
push
push
cmp
popl
dec
loop
or
mov
pop
cmpsl
movb
mov
movb
into
sbb
ljmp
dec
xor
or
dec
push
push
fcmovb
mov
sub
jnp
imul
mov
and
loop
push
call
test
xchg
cwtl
add
cmp
idivl
addr16
cmp
xlat
dec
ret
negb
mov
adc
and
xchg
je
lock
pop
jb
dec
mov
jo
adc
outsb
je
inc
jl
addr16
cmp
decb
cmpsl
mov
fwait
loop
pop
das
sub
cvtps2pd
cmp
iret
sub
jne
fbstp
mov
xor
inc
jl
jne
and
enter
push
stos
cmp
adc
dec
test
jno
xchg
loopne
fs
add
outsl
pop
enter
pushf
in
data16
or
or
sti
pushf
popl
cmp
pop
addr16
pop
sub
es
insl
xchg
inc
arpl
jo
js
adc
xor
xchg
sbb
fsts
mov
push
mov
inc
lahf
movsb
mov
loope
cmp
daa
imul
push
cltd
daa
mov
daa
shlb
aam
push
test
xchg
mov
hlt
pop
sbb
pop
ss
xor
inc
sbb
and
xchg
ljmp
mov
or
mov
ja
repz
insl
sub
gs
cli
pushf
mov
adc
lret
iret
das
frstpm(287
cltd
mov
add
or
incl
insb
daa
sub
push
rorl
daa
jecxz
xchg
hlt
dec
fstps
dec
add
negl
mov
popf
or
out
or
inc
push
add
lret
cmp
bound
xchg
pop
aas
cmpsl
mov
aaa
das
push
imul
jl
bound
repnz
xchg
aad
push
mov
mov
in
jae
cmp
jmpw
pop
push
mov
adc
jno
out
cld
pop
test
pop
dec
mov
ficoms
les
stos
sbb
cmp
mov
push
movsl
notb
cmovge
push
andb
cmp
imul
push
xlat
mov
dec
sbb
jle
push
jp
xchg
out
insb
icebp
fst
mov
inc
lret
sub
pop
mov
push
or
adc
lea
enter
push
xlat
repz
loopne
and
adc
xor
xor
in
ljmp
mov
outsl
icebp
int
mov
cmp
push
popf
xor
mov
push
mov
dec
fildl
or
push
mov
inc
roll
cs
sub
outsb
lods
out
mov
mov
xor
das
mov
jp
in
ss
shlb
mov
stos
rcl
and
dec
mov
inc
xor
cltd
xchg
mov
pop
and
ret
cmp
imul
cld
and
pushf
mov
scas
mov
loopne
pop
pop
cmp
fistpl
loop
es
push
lods
ja
iret
mov
outsb
leave
pop
or
jmp
shl
sbb
inc
push
popf
subl
dec
sub
test
or
in
aas
push
ficoms
outsl
sbb
inc
adc
and
icebp
pop
ret
je
xchg
ljmp
mov
sbb
out
andl
jbe
and
inc
xor
xchg
movsb
cmpsl
test
mov
popa
adc
inc
pusha
mov
or
imul
sarl
xchg
push
and
dec
dec
adc
shl
xlat
and
mov
or
xor
divb
in
cmpsb
mov
out
sub
mov
pop
sbb
mov
in
xor
sahf
sbb
into
jmp
mull
xor
adc
push
sub
out
rol
jne
mov
jmp
jecxz
push
ret
loope
arpl
sbb
xor
mov
sbb
and
loopne
mov
cli
jmp
push
sub
pop
mov
xchg
push
sahf
test
jo
stos
out
aam
scas
inc
hlt
mov
iret
inc
jl
xor
int3
clc
xchg
xorb
pusha
inc
std
cmp
jns
push
aam
fldl
mov
inc
jns
popf
sbb
jne
mov
popl
iret
pop
rorb
add
out
fcompl
inc
cmp
les
cmp
jae
lret
movb
mov
inc
je
lods
rsm
or
sar
mov
jno
mov
jae
mov
inc
cmp
lret
or
xor
movsl
xchg
xchg
mov
and
out
inc
lahf
outsb
cld
jp
mov
fdivl
fsubs
jecxz
out
outsl
das
flds
stc
pop
pop
push
aaa
add
test
inc
mov
rolb
jle
mov
int
aaa
mov
fidivl
call
fsubl
dec
rcll
xor
in
jecxz
mov
xlat
push
xchg
lcall
push
xchg
adc
in
scas
pop
jnp
jp
and
fists
out
ds
pop
pop
jecxz
or
sbb
fstl
sbb
lock
das
mov
mov
outsl
movsb
cmp
ss
cmovne
jae
iret
xchg
cli
lcall
jb
pop
popf
cld
call
lret
test
sub
es
mov
and
push
aaa
xlat
add
out
in
orl
iret
daa
lret
outsb
push
mov
imul
jl
lret
pop
cmp
and
in
and
fwait
fs
mov
in
mov
mov
jg
cltd
or
sbb
jno
int
cmp
enter
hlt
in
lret
or
dec
add
jmp
jp
fisttpll
mov
lret
inc
scas
sbb
std
fnstsw
cli
pop
jns
fidivrs
push
sbb
imul
xor
jae
sbb
out
leave
mov
xchg
push
push
add
mov
movb
jle
jmp
in
fcomp
and
dec
xor
pop
push
testb
mov
int3
xlat
xor
pop
in
and
lret
sub
jl
pop
jbe
push
shll
adc
inc
arpl
adc
in
xchg
out
mov
sbb
or
sbb
push
dec
cmp
xchg
and
lahf
ret
xor
mov
std
jns
ja
mov
cmp
or
adc
mov
dec
sbb
sub
mov
mov
rcl
lds
sti
xchg
or
lock
mov
push
add
popf
push
es
sbb
jns
testb
lock
mov
mov
movsb
or
cltd
or
pop
inc
in
mov
rcl
call
add
xchg
push
pushf
movl
mov
shl
xchg
sub
mov
stc
icebp
mov
scas
push
shr
adc
icebp
mov
cwtl
and
sub
xor
jmp
iret
repz
cld
xor
aam
mov
sbb
sub
jae
push
xchg
xor
addr16
cmp
dec
leave
cmpsb
mov
sbb
cmpb
es
outsb
jg
fs
stos
out
movsl
hlt
push
and
roll
cmp
sub
in
push
enter
addl
hlt
inc
xlat
int3
adc
out
inc
ss
popf
sbb
sub
push
xor
sub
mov
dec
ficoml
andl
cmpsb
mov
push
popa
adc
mov
daa
in
cmp
jns
rorl
test
rolb
fwait
ja
ss
data16
jbe
add
or
mov
loope
pop
dec
fisubrl
iret
icebp
fwait
inc
bound
cmp
ss
imul
lock
sbb
adc
call
ret
in
lds
adcl
push
leave
xor
xchg
cld
cmp
mov
je
iret
mov
pop
sti
out
imul
mov
mov
rclb
cmpsl
mov
lock
orb
lahf
repnz
test
pop
and
adc
sub
pop
outsb
push
shrb
cmp
stos
mov
pop
roll
jecxz
add
mov
jb
inc
out
scas
sbb
shrl
pop
jmp
push
cwtl
push
cwtl
addr16
dec
dec
adcl
push
cmp
insb
in
in
mov
out
cmp
cmp
stos
jecxz
add
sub
fcomps
nop
xor
xchg
pusha
push
xchg
sbb
cmp
fisttpll
bound
adc
sub
push
mov
xor
pushf
fistl
inc
mov
inc
xchg
dec
cmp
ljmp
lock
aad
xchg
lods
adc
popf
aad
lret
subl
xchg
out
aam
adc
push
sbb
cmp
adc
and
push
sub
sbb
sbb
jp
lahf
add
test
fistpll
inc
inc
xlat
add
sub
out
sti
jbe
lods
and
into
addb
stos
les
mov
jle
pop
sbb
cmp
insl
movsb
cmpsb
ret
addb
gs
cmp
adc
inc
cltd
stos
cwtl
enter
pop
mov
mov
loop
xor
dec
mov
cmp
addb
aaa
push
mov
jbe
enter
mov
xchg
stos
dec
orb
aas
call
fists
add
adc
add
mov
lret
xlat
lahf
cmpsb
lret
clc
dec
pop
mov
jmp
sahf
xchg
mov
loop
sbb
push
inc
lret
cs
cld
mov
xor
ffree
mov
call
pop
pop
dec
dec
mov
and
filds
lret
or
sarl
push
test
movsl
add
cmp
mov
mov
mov
bound
xor
sbb
int3
push
jo
outsl
gs
in
popf
xor
mov
jmp
test
mov
and
inc
jge
and
push
loop
or
rorb
lcall
cmp
dec
jns
std
adc
cltd
sub
mov
mov
outsb
mov
jno
push
dec
stos
jge
xchg
std
xchg
sbbl
mov
add
mov
xchg
push
rorl
add
shll
fst
in
add
xchg
push
inc
pop
sahf
btr
push
mov
orb
rcl
hlt
fwait
jne
add
lret
and
fwait
mov
pop
notb
sarl
insl
xchg
push
cmpl
cmpsl
shl
sbb
mov
and
stos
pop
enter
ret
inc
test
insl
fdivr
das
push
cmpb
inc
sbb
cmp
mov
dec
dec
sub
ljmp
es
mov
lock
jecxz
inc
add
push
arpl
jge,pt
imul
dec
out
test
jae
add
mov
das
cmp
jns
dec
es
pusha
scas
jecxz
mov
and
repz
lret
lretw
mov
cmp
inc
into
lret
shrl
call
cs
mov
dec
mov
int3
fiaddl
inc
xor
sbb
ds
cmp
insl
sti
lret
out
cmp
add
stos
jg
adc
sub
icebp
mov
fcomps
add
movsb
cmp
xor
mov
stc
adc
popf
fsubrp
cmp
sahf
pop
inc
sub
mov
fists
mov
adc
push
pop
mov
cli
mov
es
add
sbb
sbb
inc
iret
pusha
sub
sti
enter
cmpsb
arpl
sub
inc
out
push
lea
test
test
mov
lock
insl
xchg
lcall
imul
add
pop
jb
movsb
insl
or
adc
pop
out
mov
jp
push
stos
pop
dec
pushf
push
jecxz
loopne
xchg
fcmovb
loopne
inc
sbb
popa
sbb
pop
and
jle
jmp
rep
mov
cmp
aas
repz
lods
nop
push
daa
std
xchg
test
or
js
or
sbb
ret
mov
push
pop
outsb
mov
fmuls
pop
out
mov
mov
or
shrb
loopne
int3
mov
add
out
dec
pop
daa
into
xchg
xchg
lea
add
out
je
xor
adc
in
jecxz
add
daa
jae
sbb
fdivrl
cwtl
add
jcxz
xchg
popa
and
fdivl
cs
fcomps
sahf
leave
push
sub
clc
push
xchg
dec
shll
call
cltd
insb
xchg
repnz
lods
je
push
or
arpl
cwtl
lret
scas
mov
jno
loop
lret
mov
pushf
outsl
and
dec
filds
mov
in
sub
push
mov
mov
adc
daa
popa
mov
and
repnz
enter
repnz
mov
and
popf
mov
fwait
push
scas
lods
jno
pop
or
inc
mov
add
mov
mov
mov
jge
out
pop
es
push
inc
sbb
cs
add
cmpsl
or
mov
mov
or
int3
pop
cltd
mov
insl
mov
push
xor
cmpl
jbe
pusha
dec
cmp
xchg
das
add
scas
mov
aam
xchg
dec
lahf
and
movsl
in
cmc
addr16
sbb
imul
ss
in
imul
inc
roll
fwait
cmp
mov
inc
mov
push
mov
cmpsb
das
adc
xchg
sub
ficomps
mulb
insb
jmp
cmc
pop
shrb
and
lods
movsl
push
mov
mov
push
mov
add
je
pop
lret
push
and
addb
mov
data16
mov
sub
add
testl
int
mov
add
cltd
mov
and
or
cmpsb
mov
mov
mov
jmp
inc
mov
dec
mov
mov
test
jl
ljmp
jmp
ds
xchg
dec
lcall
and
mov
add
sub
inc
push
mov
pop
push
or
nop
pop
lds
dec
jmp
add
mov
rcll
cwtl
out
test
rcrl
pop
bound
push
std
xor
pop
inc
dec
cmp
pushf
xchg
or
insb
add
call
int
pop
cli
xchg
mov
hlt
jg
xchg
pushf
ja
inc
arpl
pop
test
enter
mov
sub
out
push
fidivs
das
scas
subb
das
jl
icebp
mov
stos
hlt
mov
fldcw
pop
loope
push
ljmp
faddp
push
add
or
push
xchg
lock
leavew
add
mov
mov
or
jnp
sbb
or
aad
mov
xchg
sub
mov
cmpsl
inc
xor
movsl
adc
mov
push
insl
mov
mov
add
cmp
fists
mov
scas
cmpsl
clc
loop
sbb
adc
mov
dec
mov
or
mov
and
sbb
jb
xchg
adc
fsqrt
shlb
dec
mov
lock
jl
lds
repz
aad
sub
cmp
sbb
mov
scas
jbe
daa
fcomps
outsl
dec
int3
aaa
out
out
jge
test
addr16
sub
push
jecxz
lret
xor
cmp
std
mov
xor
push
fildll
inc
push
inc
mov
ret
mov
dec
push
jbe
cmpsb
orl
out
mov
leave
pop
adc
adc
cld
fisubs
std
lock
pop
sub
mov
dec
mov
test
mov
pushf
stc
jg
test
jg
ret
aas
enter
jle
loop
push
push
push
insb
arpl
push
out
mov
shrl
filds
mov
mov
arpl
push
sub
and
mov
out
dec
jl
cmpsl
mov
push
or
repnz
pop
movsb
repz
emms
cmp
decl
lods
stos
daa
stos
test
shrb
and
lret
popf
sbb
sbb
and
fsubrs
mov
jbe
repnz
popf
add
pop
sub
cmp
in
jmp
imul
jl
out
in
enter
stc
mov
mov
pop
addr16
push
jle
mov
iret
cmp
outsl
in
xor
cmp
jb
mov
aam
cmp
pop
inc
stc
push
ret
or
jecxz
mov
xchg
cmp
nop
jcxz
add
sbb
mov
sub
insb
jae
jns
aam
dec
or
les
or
mov
pop
data16
cli
shll
xchg
cmpsb
mov
sub
xchg
popf
dec
push
dec
mov
add
mulb
dec
fadds
jo
sbb
inc
clc
pop
push
out
and
xchg
mov
or
sbb
loopne
bound
sub
fs
lret
mov
mov
xchg
inc
jge
dec
in
pop
jmp
outsb
pop
out
adc
xor
imul
mov
sub
out
or
outsb
pop
daa
pop
inc
popa
pusha
into
int
daa
push
cmc
das
lods
orb
faddl
pop
mov
mov
or
and
shrl
sub
jmp
cmp
jb
jnp
pop
push
stos
fsubr
jp
cmp
mov
rorl
into
mov
gs
and
outsl
out
cs
out
xor
int
push
jno
loopne
jnp
push
pop
fsts
add
xlat
repz
xlat
pop
in
add
aad
xor
jmp
mov
push
xchg
in
lret
cmp
mov
add
jp
lcall
cmp
pop
idiv
out
adc
ret
sub
add
ljmp
push
into
inc
fs
add
jl
cmp
stos
add
fcomi
push
pop
aad
push
movsl
stc
stc
int
mov
or
mov
icebp
shl
scas
push
hlt
adc
jmp
es
xor
ja
mov
sbb
xor
pop
test
nop
stos
leave
aad
push
insl
testl
add
lret
xchg
xchg
test
addr16
cmp
popa
jbe
insl
test
lds
rolb
sbb
popa
outsb
adc
mov
test
xchg
jbe
dec
out
cs
adc
add
xchg
loopne
inc
fisubrs
imul
dec
lahf
pop
push
cmpsl
sbb
out
xor
xor
int
shlb
mov
loopne
sub
popa
loop
xor
sbb
push
push
cmp
aad
cmpsb
jne
cli
push
or
mov
popa
rcrl
cwtl
gs
and
sbb
jmp
and
imul
push
imul
std
xchg
sbb
xchg
icebp
popf
and
fs
mov
mov
pop
mov
jge
sub
test
test
jne
insl
jb
dec
mov
adc
jle
test
into
addl
in
shl
test
movsl
lahf
dec
cmpsl
call
jmp
insl
mov
imul
mov
pop
gs
inc
and
in
mov
decb
pop
mov
mov
ss
aam
sti
inc
insb
int3
outsl
jp
jno
mov
sahf
out
add
stc
test
mov
lods
lods
sub
ret
outsl
mov
mull
and
mov
lods
cmpsl
std
std
mov
cwtl
in
jbe
fdivl
pop
pop
int3
in
xor
pushl
sbb
adc
das
es
and
pop
cmpsb
xchg
adc
adc
adc
rorl
pop
push
pusha
imul
cmp
sbb
jo
xchg
cmp
jmp
out
jmp
das
dec
xorl
call
cli
js
sbb
daa
mov
mov
stos
dec
xchg
adc
pop
mov
inc
cmpb
or
repnz
adc
or
fidivrs
stc
mov
inc
nop
pushf
fwait
loop
sub
push
xchg
lret
sti
xchg
out
outsb
and
push
adc
data16
movsb
add
push
xchg
push
xchg
std
pop
and
enter
inc
test
jle
or
out
leave
sbb
mov
sbb
int3
dec
xchg
push
sahf
sahf
adc
and
push
xchg
sbbb
jno
add
incb
enter
or
mov
rclb
cld
pop
sbb
cmp
movsb
std
mov
les
fucomip
lret
or
shll
dec
fs
hlt
aad
mov
lds
dec
mov
mov
lods
les
add
popf
ret
pop
pop
mov
push
decb
ja
push
sbb
jb
xor
adc
sbb
dec
mov
or
cmp
mov
sbb
and
sub
mov
test
pushl
adcb
xchg
push
daa
les
jne
ret
xor
or
sub
imul
pop
ljmp
jne
repnz
fwait
inc
xchg
daa
pop
jo,pn
call
jae
rclb
pop
mov
sub
sti
or
rcll
jle
cmp
cltd
mov
pop
mov
adc
jae
mov
jl
out
add
incb
mov
outsb
xchg
mov
lods
xchg
out
mov
adc
mov
cmp
jge
mov
pop
pop
mov
out
mov
sahf
mov
pop
lock
mov
out
pop
push
jmp
sbb
pusha
sub
fiadds
cmpsl
out
fstpl
inc
xchg
daa
pop
jb
fsubr
push
and
shlb
and
push
and
popl
nop
inc
mov
jae
fdivrs
pushf
xor
test
adc
xor
ret
lahf
push
pop
scas
leave
push
and
bound
add
dec
jmp
nop
fldenv
rcrl
sub
lret
xchg
ret
cmp
jecxz
hlt
cmpsb
dec
fcomps
cmp
mov
hlt
sub
mov
je
push
push
subb
loopne
mov
cmp
sbb
push
jp
dec
push
nop
pop
jg
call
inc
out
dec
xlat
aam
dec
dec
movsb
pop
nop
inc
cmc
jae
pop
sub
es
inc
jae
xchg
push
jb
sub
or
in
push
psubsb
and
inc
gs
out
mov
sub
mov
jb
or
outsb
or
inc
test
lret
adcl
or
adc
mov
das
scas
iret
push
in
cwtl
or
aam
fs
shrl
mov
loop
push
xor
or
jne
rorb
mov
pop
cmc
sbb
fucompp
sbbb
sbb
inc
push
stos
add
push
scas
dec
int3
andb
outsl
jnp
rcrb
outsb
inc
inc
add
pop
inc
cmp
and
jecxz
clc
sub
and
adc
xor
add
push
stos
pusha
jo
inc
mov
xchg
pop
pusha
xor
xlat
jns
xor
es
pop
dec
fs
test
shlb
mov
lock
int
rol
pop
cmp
jns
ja
andl
fidivrl
popf
das
add
pop
xchg
inc
test
in
xor
loopne
ds
mov
dec
frstor
leave
lds
push
shlb
dec
pop
mov
pop
push
mov
std
jle
push
scas
mov
iret
imul
das
push
ss
test
push
xor
cmpsb
or
aad
bound
pop
ret
xor
mov
adc
popf
adcb
out
sti
pop
imul
ret
xlat
int3
jno
sub
sbb
repz
scas
inc
jb
call
fiadds
inc
test
xor
ds
das
cmpsb
popf
mov
xlat
popa
xor
sbbl
cmp
xchg
ret
rcl
daa
dec
xchg
outsl
xchg
sbb
fst
dec
cmpb
push
xor
add
sub
push
jne
sbb
add
push
cmp
cmp
cwtl
or
adc
push
inc
int3
cmpsl
andb
divb
inc
movsl
dec
call
pop
loope
pop
adc
cmp
addr16
aam
out
sbb
shll
mov
xchg
push
ljmp
dec
pusha
lods
divl
dec
adc
jge
cmp
daa
xchg
mov
mov
or
push
cld
mov
push
cld
sti
je
xchg
cmp
sahf
pop
out
std
test
and
sub
mov
jl
mov
jb
aam
bound
insl
mov
cmp
jmp
sbbb
lea
call
sbbl
call
mov
mov
xor
jecxz
je
aad
aad
test
movsl
push
jnp
out
xchg
lcall
aam
leave
dec
loope
add
xchg
xchg
dec
pop
or
inc
pop
shrl
push
inc
daa
adc
das
xchg
add
mov
insb
push
or
fsubrl
fwait
aaa
repz
or
cwtl
out
hlt
cli
ret
sub
shl
lock
jle
mov
test
das
nop
lret
lahf
dec
fisubs
aam
push
jne
imul
ds
into
arpl
aad
icebp
or
sahf
mov
adc
andb
push
pop
cli
leave
mov
subl
or
daa
push
add
clc
in
into
daa
adc
jp
out
es
jge
ss
and
and
shlb
xor
and
in
notb
jbe
repnz
aaa
jno
cmp
call
mov
test
and
orb
stc
jnp
pop
dec
inc
cmp
mov
icebp
cmp
xchg
adc
pop
push
pop
fdivs
aad
pop
repz
nop
fildl
stos
dec
daa
cmc
nop
stos
jecxz
mov
and
add
cmc
inc
mov
xchg
aam
or
xchg
push
xchg
sbb
adc
push
sub
mov
in
xchg
dec
push
divl
inc
gs
testl
lods
xor
and
cmp
sbb
push
in
das
pop
mov
push
xchg
lods
push
cmpsb
adc
inc
mov
mov
inc
push
pop
sbb
ds
mov
mov
xor
mov
rcl
test
pop
pushf
add
pushf
inc
adc
mov
cs
cmpsl
adc
stos
dec
gs
ja
in
jmp
jnp
test
mulb
movsb
xor
dec
add
aas
sarb
sbb
dec
jns
cmp
call
outsl
fwait
ret
inc
push
adc
insl
loop
dec
movsb
mov
sbb
fistl
imul
shll
stos
mov
addr16
stos
pop
push
xchg
jl
mov
in
sbb
cmp
jge
xor
scas
or
cld
inc
nop
cmp
icebp
out
xor
pop
ret
hlt
mov
fldenv
mov
jb
mov
jbe
xchg
rcrl
jns
out
add
imul
sub
jle
sbb
mov
push
dec
cmpsb
pop
les
addr16
xor
pop
xchg
adc
mov
mov
inc
mov
mov
pop
dec
sahf
dec
mov
sahf
pop
push
mov
xchg
adc
movsb
add
fadds
pop
mov
add
jmp
mov
or
adc
sub
ss
out
add
insl
sub
mov
lret
fmull
or
inc
cltd
add
dec
mov
or
aad
mov
cmc
sbb
scas
jne
jne
outsl
push
jo
jecxz
lea
jnp
fildll
aad
fsubs
and
adc
xchg
jp
pop
leave
les
jg
mov
scas
push
jne
pop
repnz
cmp
test
inc
xchg
sbb
pop
or
sub
fwait
push
cwtl
dec
sbbl
push
out
aam
andb
inc
sti
shrl
inc
and
iret
add
fcompl
movsl
cmpsl
shll
mov
add
push
and
icebp
sbbb
pop
addr16
pop
mov
sbb
xor
imul
xlat
push
push
and
jbe
push
jno
dec
out
add
or
movsb
pop
jg
fwait
cld
inc
mov
mov
insl
ds
dec
aad
fwait
js
movl
test
fldl
xchg
lods
lods
add
in
call
cmp
aam
and
in
add
lcall
subb
mov
popf
outsl
inc
shr
mov
sub
push
sbb
fidivrl
es
pop
js
mov
les
sbb
sub
push
loop
mov
add
jecxz
or
or
xchg
adc
pop
sbb
sub
pusha
int3
or
sti
xor
jnp
mov
mov
pop
jb
inc
enter
push
rcr
lods
xchg
es
ret
ret
mov
fwait
sbb
ror
cli
loope
mov
lea
aas
pop
and
push
mov
jge
repnz
xor
dec
add
int3
mov
in
push
jb
mov
jae
sbb
add
mov
push
push
sub
pop
dec
dec
sti
and
ljmp
lcall
in
ds
jle
pop
push
ljmp
sbb
cmp
sbb
loopne
push
mulb
cs
int
jne
fdivl
jno
jo
data16
dec
arpl
and
test
and
leave
pop
imul
loop
je
xor
pop
leave
shlb
je
mov
sub
pop
pop
sbb
fdivrs
insb
adc
cld
hlt
mov
mov
pop
in
cltd
mov
rclb
push
jbe
or
mov
sbb
sub
jns
jb
or
scas
fs
inc
loopne
orb
sbb
cli
xor
ret
out
jbe
mov
aam
andl
lods
cs
lahf
inc
pop
pop
inc
dec
ret
push
mov
dec
jmp
or
dec
mov
xchg
in
and
rcrb
test
push
pop
les
psrld
push
xchg
mov
mov
pop
push
jg
pop
mov
or
dec
insl
jg
lret
inc
mov
adcb
sahf
jno
les
bound
xlat
xchg
jne
pop
mov
xor
movsl
and
cmp
mov
insl
push
mov
icebp
cs
push
sbb
andb
add
jl
mov
push
sarb
out
fs
cmpsl
lea
jbe
pushf
xor
movsl
icebp
loopne
jnp
outsb
xor
mov
mov
push
icebp
pop
xchg
push
in
push
mov
mov
push
shrb
addr16
loope
xchg
imul
adc
idivl
mov
adc
in
test
out
jmp
clc
popa
push
add
pop
out
mov
lahf
or
jns
mov
ret
out
fimuls
sbb
lea
imul
enter
dec
insl
xlat
mov
mov
jl
ljmp
sub
mov
sbb
leave
xchg
push
jbe
addr16
cs
test
dec
repz
jg
fs
mov
adc
popf
pop
jno
adc
scas
add
ss
pusha
lock
mov
cmp
rorb
clc
cltd
sub
xchg
inc
insb
mov
popa
dec
mov
inc
mov
inc
cli
ds
out
push
inc
addr16
or
and
test
mov
or
cmp
ret
push
dec
push
adc
sub
lea
loopne
mov
and
sub
cmp
fsubrs
cmpsl
jge
push
imul
int3
mov
lahf
movsb
sahf
dec
sbb
push
imul
xchg
xchg
add
xchg
add
mov
xor
or
ret
out
cmp
and
and
lods
aas
cmp
or
inc
ret
js
push
cltd
dec
lea
sbb
adc
and
dec
jne
ss
popa
xchg
xor
les
push
out
std
cmp
add
fdivrp
and
xor
xchg
nop
xchg
fiaddl
jbe
and
ss
imull
aaa
rcrb
inc
dec
int3
cmpsb
mov
dec
ret
fsts
mov
push
jb
mov
mov
jno
loop
js
pop
fstps
shlb
or
aam
mov
sbb
ss
insl
push
enter
inc
rorb
xchg
pop
test
insb
ret
popl
out
repnz
mov
fcomp
push
in
sub
mov
aad
sub
push
add
add
mov
sbb
jnp
adc
or
cmp
mov
je
sub
jl
push
cmp
lds
sbb
sbb
lret
or
addr16
xchg
jbe
das
inc
iret
mov
mov
jb
xchg
xchg
sbb
adc
push
addr16
pop
and
cmp
movsl
sbb
aam
adc
in
ds
fs
adc
add
xor
mov
dec
pop
addl
cwtl
mov
std
inc
jbe
test
stc
leave
dec
cltd
add
call
stc
daa
daa
mov
add
sub
mov
inc
dec
push
xor
add
addr16
sahf
xchg
hlt
cmpsl
or
out
ja
out
jecxz
mov
push
mov
addr16
scas
ds
inc
mov
push
cmpsb
inc
pop
pop
imul
or
sbb
sbb
push
xchg
test
fcoms
popa
inc
or
pop
loop
xchg
xor
aad
inc
movb
call
sbb
dec
adcb
and
pop
push
pop
lret
add
aad
jmp
or
test
mov
psubusw
mov
mov
adc
mov
orl
fisttpl
jns
imul
pusha
and
call
jle
iret
sub
xchg
sbb
jno
int
push
pusha
cmc
mov
sbb
stos
cmp
loopne
fwait
jno
sahf
pop
test
xchg
mov
dec
mov
add
rorl
mov
add
loopne
je
xchg
stos
jl
loop
and
push
aad
test
push
mov
jecxz
repz
shlb
xor
sti
outsb
mov
hlt
and
mov
xor
push
frstor
pop
adcl
test
pop
sahf
push
pop
and
xchg
pop
jb
shrb
fwait
jg
fiaddl
testl
lret
cli
fs
dec
xor
mov
pop
pop
mov
sarl
fildl
jecxz
sub
cmpsb
shll
inc
repz
mov
and
sbb
outsb
in
cwtl
and
mov
cmp
and
and
add
out
push
dec
sbb
and
or
pop
imul
jl
dec
mov
xor
mov
mov
rorb
or
push
and
lret
test
shrb
ljmp
xchg
push
data16
mov
dec
in
adc
arpl
lret
pop
cmp
inc
insb
cs
or
mov
mov
jnp
scas
das
push
insl
dec
xchg
jmp
test
fcom
xchg
mov
or
adc
jecxz
or
mov
inc
jns
les
jge
call
cmp
imul
and
jmp
test
pop
stos
or
jnp
mov
inc
push
movsb
sub
int3
sbb
mov
daa
cmpsb
cmp
mov
dec
xchg
mov
int
shl
mov
movsl
dec
or
cwtl
lock
je
pushf
call
jg
fwait
sbb
jae
stc
test
pop
inc
clc
xchg
sbb
in
jle
sbb
cmp
loopne
cltd
and
aaa
inc
aaa
cmp
push
adc
jmp
mov
jae
or
lret
push
cltd
jle
xchg
and
aad
jg
in
and
cs
in
xor
add
fisubs
inc
rorb
xchg
adc
push
sarb
fiaddl
mov
push
cmp
mov
cltd
mov
xchg
cmpsl
ds
inc
push
aad
test
mov
test
or
pushf
cmp
xorl
dec
iret
jns
mov
ds
inc
adc
mov
xchg
mov
scas
jge
mov
or
lods
xor
push
pop
inc
jmp
push
call
dec
aad
ret
and
in
scas
push
sbb
sub
mov
cmpsb
pusha
das
into
mov
pop
add
insb
addr16
push
xor
shlb
adc
js
inc
or
lret
xor
pushf
pop
or
inc
lea
dec
daa
imul
inc
rol
rorl
lock
dec
ds
popa
je
jmp
fstpt
push
mov
mov
pop
stos
pop
ja
inc
int3
cmp
pop
mov
roll
test
dec
add
xchg
mov
das
sub
popa
frstor
mov
lods
scas
out
adc
pop
add
pop
or
add
xchg
and
mov
sbb
pop
mov
stc
jg
pop
mov
cli
or
push
push
mov
push
sahf
in
xor
inc
sbb
fisttpll
jge
decl
lods
push
adc
pop
ret
out
xor
jl
pop
cmp
push
push
fisubrs
sbb
jae
movsl
ja
pushf
push
mov
aad
mov
xchg
jnp
ja
inc
ret
test
cmpsb
pop
frstor
mov
or
sub
aad
sub
sahf
sbb
lret
sub
mov
rcrl
mov
sbb
xchg
insb
dec
aaa
push
mov
xchg
jp
popf
jnp
aad
mov
push
jge
jne
mov
mov
and
lock
js
lock
add
icebp
leave
inc
ror
outsb
inc
or
adc
xchg
out
dec
dec
mov
orl
or
inc
repnz
ljmp
inc
int3
sub
push
movsl
push
xchg
pusha
lret
fidivl
sbb
jbe
adc
mov
loopne
lods
in
push
mov
inc
rclb
or
data16
shrb
bsr
iret
out
pop
in
xlat
stc
xchg
add
lcall
ret
mov
jo
xorl
and
pop
adc
stc
push
inc
stos
or
ror
movsb
fldenv
cmp
or
ljmp
repnz
popf
dec
lods
pop
pop
fwait
jo
ret
mov
jge
out
mov
icebp
movb
and
adc
call
cmp
cwtl
add
push
sarb
into
js
add
jp
inc
leave
cmpsl
mov
test
adc
popf
and
or
int3
out
idivl
ret
xchg
dec
test
rcrl
mov
push
fwait
jmp
lds
xchg
lcall
in
or
scas
and
fisttps
push
mov
pop
or
gs
mov
or
rol
dec
jmp
or
push
aaa
ret
outsl
lea
mov
sub
inc
mov
push
hlt
ret
int3
inc
xchg
addr16
sub
xorl
jb
sahf
sub
pop
ret
xor
xchg
jg
lds
in
jge
stc
jge
sub
xor
popf
insb
mov
push
pop
xchg
loope
and
rcrl
mov
mov
aas
dec
cwtl
mov
outsb
shll
scas
test
sti
jmp
xorl
lcall
adc
xchg
and
jl
outsl
pop
dec
add
clc
or
cmp
stos
mulb
jle
in
in
adc
xchg
inc
mov
xor
addr16
loopne
xchg
lock
cmp
add
jnp
fs
movsl
sti
xchg
adc
mov
lock
in
xchg
insl
adc
sbb
hlt
in
je
fnstcw
andl
shrl
loop
repnz
cmp
pop
add
push
xor
mov
arpl
fcmovb
pop
test
mov
bnd
jge
and
notb
sub
add
shlb
mov
dec
or
ljmp
mov
pop
xchg
pushf
fcomps
mov
sahf
insl
lret
test
mov
pop
mov
adc
pop
cmp
push
hlt
xchg
xchg
and
mov
and
cmp
sbb
xor
pop
xor
jns
ffreep
imul
outsl
or
pop
ret
js
xchg
ret
add
pop
mov
push
inc
push
pop
sti
in
push
inc
adc
mov
arpl
lock
lds
imul
xchg
adc
inc
mov
out
jmp
push
push
mov
adc
cmpsl
inc
pop
aaa
xchg
cmovae
test
mov
imul
movsb
mov
push
adc
pop
xorl
into
gs
adc
cwtl
push
pop
inc
and
shlb
enter
xchg
addr16
inc
in
aas
rol
xor
sbb
and
sbb
inc
sub
shlb
outsl
jl
lds
into
xchg
push
lret
mov
les
int
out
jae
pop
lahf
mov
fwait
and
push
js
cmp
fs
stos
add
call
xchg
mov
shll
js
dec
popa
addr16
rolb
fcom
adc
jle,pt
in
mov
fists
adc
push
jo
aaa
adc
and
imul
ja
jl
mov
mov
jl
jno
sbb
and
or
mov
stc
sahf
xor
push
adc
lret
cltd
mov
inc
fidivl
or
jns
movsl
rol
nop
testl
and
dec
cmp
into
cmp
jb
mov
jo
adc
or
aas
lret
out
mov
into
cmp
pop
add
int
add
mov
lds
out
sub
jb
sub
xlat
dec
add
aaa
xchg
dec
mov
dec
mov
xchg
addr16
jmp
mov
ret
cmp
mov
xchg
add
insb
rcll
xchg
fcomi
loope
imul
mov
xor
add
ss
mov
arpl
sbb
dec
ja
sub
xor
das
push
cmp
andb
push
loop
pop
aad
cwtl
inc
fisttpl
loop
dec
std
pop
mov
pushf
mov
sbb
fwait
push
jmp
fsub
inc
aas
adc
xchg
xchg
out
movsb
negl
and
and
loopne
pusha
push
clc
push
mov
mov
cmp
add
das
cmpsb
fcmove
jnp
imul
push
and
mov
aaa
movsl
test
sub
cmp
loope
mov
dec
jp
xor
pop
stos
sub
bound
repnz
mov
cmp
repnz
fcom
stos
jne
orb
outsl
pop
test
nop
pushf
aam
mov
dec
stos
push
xor
push
hlt
pop
push
and
in
repnz
xchg
or
add
data16
lods
xchg
out
mov
repz
push
dec
pop
clc
sub
in
jmp
pop
imul
adc
mov
pop
fidivl
into
rcrl
sbb
jo
cwtl
mov
orb
into
addr16
adc
aam
scas
popa
mov
mov
and
sbb
rorb
sbb
sahf
pop
pop
popf
and
popa
rclb
jmp
mov
xchg
out
and
sbb
push
push
ss
mov
sti
cltd
fisttpll
das
xchg
xchg
inc
push
outsl
inc
mov
fisttps
clc
xor
or
pop
nop
rcrb
or
cmp
pop
mov
pusha
cmpsb
cmp
mov
jne
dec
push
ds
jl
xor
iret
adc
shlb
jmp
cs
mov
and
cmp
xchg
mov
xchg
mov
and
xlat
out
dec
lret
mov
push
xor
sub
xor
mov
outsl
inc
sbb
jmp
stc
std
jnp
loopne
pop
push
cli
arpl
dec
fs
mov
imul
mov
xchg
jmp
inc
adc
jge
ficomps
idivb
xchg
jns
cmp
outsb
xor
iret
cmpsl
inc
ror
fsubl
mov
pop
mov
xor
dec
push
mov
and
pop
imul
pop
test
dec
sub
mov
cmp
dec
lret
sub
outsb
sub
rcrb
add
test
adc
add
mov
mov
pop
mov
xchg
adc
fiaddl
frstor
adc
das
imul
adc
mov
jg
pop
mov
mov
lods
sub
into
push
mov
add
cmpsb
inc
cmp
iret
fbstp
pop
mov
pusha
sub
pop
sbb
add
outsl
fisttps
pop
mov
in
xchg
lods
mov
stos
fidivrl
je
fisttps
imul
in
or
addr16
jp
xchg
std
or
and
outsl
es
jmp
jecxz
inc
cltd
outsb
sub
and
ds
loopne
and
mov
and
dec
sbbb
out
jns
xorl
call
rclb
pop
addl
std
lds
pop
outsb
repz
sahf
psrld
repz
add
adc
dec
mov
adc
xor
add
adc
daa
inc
and
mov
lcall
dec
and
xchg
cmp
xchg
inc
out
mov
fidivrs
sbb
pop
push
imul
mov
and
cmp
sub
jp
cmpsl
dec
jle
shrb
sub
in
sahf
push
sti
sub
adc
call
push
bound
sub
das
mov
dec
xor
mov
int
mov
xchg
cld
insl
jge
dec
aam
sarl
xchg
xor
jle
xlat
int
adc
sub
sbb
push
jge
movsb
mov
pusha
mov
cltd
pop
xchg
xorl
repnz
inc
data16
loopne
xchg
cmc
jge
mov
test
inc
xchg
mov
mov
aam
out
loop
mov
cli
or
dec
fisubrl
rorl
ljmp
ret
sbb
faddl
mov
adc
outsb
sbb
into
mov
push
pop
jno
hlt
and
xlat
sahf
pop
mov
cmpsb
cli
mov
inc
push
andb
movsb
adc
dec
mov
lcall
mov
lock
out
shr
ror
cli
jmp
pop
arpl
andb
rorb
mov
or
cld
fwait
jne
les
inc
push
pop
loope
loope
push
push
mov
test
mov
and
cmp
or
adcl
pop
lods
cli
xchg
aam
mov
imul
add
in
sbb
lea
dec
push
flds
jbe
rcrl
sub
hlt
je
cmp
sub
in
mov
add
addl
xchg
rcrl
enter
dec
rorb
aad
xchg
or
pop
cmp
cwtl
mov
sub
insb
subl
xor
mov
jl
test
ror
pop
movsb
les
enter
insb
fidivrs
jmp
test
push
pusha
jnp
xchg
js
loopne
dec
and
je
or
outsb
flds
fnsave
sub
cwtl
mov
dec
push
xor
mov
movsl
and
test
fimuls
pop
popf
and
cmpsb
stos
test
push
notb
mov
dec
mov
xchg
sahf
incl
jae
dec
or
subl
xorb
jecxz
sbb
insl
lods
sub
fisubl
pop
icebp
sbb
nopl
add
pop
xor
mov
loopne
repz
add
push
adc
push
mov
dec
out
out
mov
imulb
test
les
lods
mov
icebp
xchg
push
push
jle
sarl
push
mov
cwtl
scas
iret
ds
lret
pop
fchs
daa
lock
mov
push
add
jnp
xlat
imul
sti
rcll
lahf
repz
es
aam
sbb
out
mov
out
adc
inc
ds
push
fiadds
es
ja
mov
push
pop
add
mov
add
fs
mov
add
xorb
inc
ret
pop
mov
ret
add
sub
inc
nop
sbb
adc
test
and
lcall
add
test
pop
test
add
pusha
popl
cmp
adc
xor
inc
pop
sbb
iret
aam
rcl
cmp
mov
int
add
lds
repz
pop
test
scas
cmp
lret
mov
jmp
xchg
inc
inc
push
sbb
sub
pushf
xor
sub
aad
xchg
cmp
mov
push
xor
mul
adc
dec
fnsave
aaa
pop
loop
lods
dec
cmp
movsb
cmp
mov
lock
fcompl
sbb
push
sub
push
cmc
jne
sbb
cmp
inc
js
arpl
icebp
popa
push
sbb
add
incb
and
sub
sbb
in
add
mov
push
sub
sub
ret
fists
xor
sbb
pushf
pop
int3
inc
and
mov
nop
movsl
jle
mov
test
mov
jg
mov
mov
mov
pop
sub
ja
jmp
xlat
push
ficoml
lds
sbb
xchg
jns
or
lea
jmp
or
fisttpll
xchg
mov
inc
aas
mov
dec
inc
add
mov
insl
pop
pop
push
add
jns
in
and
cmp
xchg
lds
sbb
push
jns
xor
cmp
ret
xor
pop
iret
rclb
frndint
jmp
shll
addl
mov
push
cld
repz
adc
js
scas
xlat
jp
popl
scas
lret
hlt
stc
mov
mov
jno
lcall
imul
push
imul
push
lahf
xchg
aas
sub
or
pop
popf
sar
push
leave
stos
hlt
add
lcall
inc
rep
xchg
pop
imulb
adc
mov
mov
jae
jnp
xorl
sub
das
loop
insl
xchg
stos
ss
jae
sahf
or
pop
dec
test
jb
arpl
es
pushf
movsl
xor
inc
cmp
rclb
out
inc
xsha1
cmpsb
mov
sub
sub
fnstcw
mov
mov
dec
xor
cld
ja
or
idiv
mov
jg
out
arpl
sub
ret
or
push
aaa
xchg
xchg
mov
push
xchg
xor
inc
add
sbb
push
mov
test
stos
pusha
ss
mov
mov
int3
ret
mov
movsl
xchg
push
xchg
jno
fst
fnsave
cli
ja
push
mov
mov
cltd
mulb
inc
cmp
xor
mov
jp
flds
cmp
jns
mov
lret
paddb
mov
stos
loop
push
pop
sbb
popa
out
sahf
sbb
push
push
aam
adc
rcrb
into
in
bound
sbb
pop
in
cmp
push
jns
mov
enter
jns
stc
inc
pop
inc
mov
sbb
shll
xchg
outsl
jnp
push
adc
daa
adc
bound
inc
lret
cmp
mov
aam
mov
cmp
xchg
outsl
sbb
gs
dec
push
mov
pop
sbb
gs
add
add
outsl
cmp
push
and
jae
lret
mov
mov
jle
repnz
push
cmc
add
je
inc
rorl
jmp
add
loope
or
sub
lods
xchg
aad
push
cs
jmp
es
sbb
mov
out
fistpl
mov
mov
les
mov
jno
adc
ljmp
in
xchg
fwait
xchg
fidivl
push
imul
jne
mov
xor
and
sbb
negb
mov
inc
and
push
int
adc
jmp
cltd
jmp
xor
ret
pushf
adc
jno
loop
int3
cwtl
cmp
popf
mov
adc
je
test
jp
and
add
sbb
cmp
cld
out
inc
dec
rcll
xchg
cmp
sub
sub
dec
jg
insb
push
inc
clc
ja
pop
mov
insb
arpl
lds
and
sarl
mov
cld
push
push
test
shll
sbb
jle
bound
insl
cmpsb
jb
inc
ja
dec
aad
push
std
leave
push
das
je
mov
xor
mov
add
xor
jae
outsl
jmp
sub
mov
dec
shll
ds
mov
imul
sub
sub
lock
imul
pop
sbb
push
mov
sbb
movsl
pop
mov
mov
or
shll
test
dec
pop
fwait
in
inc
xor
push
cmp
push
mov
ret
pushl
mov
or
sbbl
mov
roll
lcall
adc
iret
adcb
jns
pop
pop
sub
mov
xchg
and
jo
cwtl
into
sbb
pusha
fucomi
mov
mov
sbb
xchg
test
ror
out
daa
inc
in
or
icebp
cwtl
push
inc
orb
dec
test
sarl
xchg
xchg
in
push
leave
mov
cld
in
jae
movsl
insl
cmp
and
scas
adc
lret
inc
xlat
and
xor
jbe
xor
xchg
cmp
gs
push
lcall
dec
xor
test
out
mov
sub
pushf
push
push
xor
loopne
data16
sbb
or
insl
call
popf
mov
xchg
adc
pop
inc
decl
dec
push
push
or
testb
xor
lea
cmpsb
loope
push
enter
mov
sub
inc
pop
outsl
push
popa
stos
out
out
add
sub
out
jge
ret
adc
jl
jnp
popf
negb
jo
nop
xchg
xchg
xchg
rcr
xchg
dec
mov
in
lds
mov
jo
jno
xchg
loop
mov
pusha
insb
xor
aam
into
sub
xor
jecxz
or
bswap
enter
mov
push
gs
fwait
std
adcl
int
int
cmpsl
mov
adc
or
and
test
cld
hlt
mov
mov
mov
dec
ja
jbe
pop
xor
mov
ss
fimuls
hlt
into
pop
rol
mov
fwait
xor
jno
not
shrb
cli
repz
adc
lock
xchg
dec
and
stos
lods
mov
xor
aad
xor
xchg
inc
cmp
jnp
xchg
mov
push
sub
inc
mov
xchg
mov
adc
out
jns
arpl
fcomps
sbb
fidivrs
dec
fs
adc
sbb
icebp
loopne
rcl
call
repnz
jb
movsl
adc
and
lods
mov
sahf
out
cmp
jp
leave
imul
les
xchg
mov
mov
jp
lock
insb
xor
mov
and
scas
mov
mov
test
mov
inc
popf
sbb
stos
loope
adc
mov
jl
test
pop
or
inc
mov
mov
pushf
fimull
shll
ss
cld
push
mov
push
test
jecxz
out
push
mov
mov
shl
and
and
insb
cmp
and
add
add
popf
push
jecxz
xchg
mov
loop
int3
ret
movsb
xchg
aas
and
xor
dec
or
cwtl
popf
jp
pop
out
cmp
xchg
cmp
xchg
push
mov
lret
jl
enter
test
inc
sub
imul
mov
int
and
dec
inc
inc
ret
or
xchg
shl
jae
cli
mov
shlb
aam
mov
adc
fisubrs
shlb
mov
dec
cltd
aad
cmc
filds
je
icebp
ficoml
jge
mov
addb
inc
sbb
cmp
mov
inc
dec
fs
push
pop
inc
loope
aad
sbbb
mov
mov
push
lret
pop
pop
or
mov
lcall
or
movsb
mov
and
jge
cmp
jl
cmc
stos
mov
cmp
adc
adc
mov
aam
cmp
and
add
les
add
jp
add
jnp
inc
cltd
cmp
cli
scas
add
inc
int3
daa
dec
cld
cwtl
xor
adc
js
and
stos
scas
mov
xor
xchg
clc
adc
or
int3
negl
decb
pop
outsb
out
xor
inc
loope
sti
movsb
lds
sbb
jno
cltd
add
sbb
cmp
ret
idiv
mov
or
pop
lahf
cmp
cmp
loop
std
jl
fadds
mov
cmc
lds
fs
jnp
scas
jge
xchg
test
sub
push
stos
loope
jp
adc
mov
popa
out
adc
pop
sbb
sbb
mov
adc
mov
in
mov
xchg
xchg
ret
xchg
or
dec
fwait
sub
clc
and
scas
jae
push
aad
pop
lock
aam
push
mov
ret
mov
pop
les
movsl
leave
test
dec
sarb
and
push
inc
add
push
pop
jmp
popl
cmp
stc
xchg
xlat
cmc
push
iret
in
test
aas
stos
cmp
or
dec
jb
pop
add
les
cmp
cld
sti
aad
push
std
out
data16
add
test
or
inc
fistps
pop
out
or
sbb
lds
fbld
xchg
gs
lea
cmc
jle
lods
pop
jns
xorl
arpl
imul
int
jb
stos
out
cs
dec
push
gs
xor
push
es
out
jb
mov
ja
pusha
adc
adc
dec
lods
cmp
in
push
mov
sbb
fs
xchg
repz
xchg
pushf
sub
test
outsl
push
cmp
sahf
fisttpll
jg
sbb
mov
iret
fwait
mov
scas
add
into
xor
push
adc
data16
js
jp
jp
in
cmp
popa
ss
lds
shll
mov
rcll
jbe
and
call
adcb
inc
imul
aam
ljmp
es
or
inc
lea
jno
sbb
popa
dec
sub
loopne
notb
lds
jg
xchg
call
addl
mov
xchg
jp
mov
movsl
das
jbe
and
lea
and
jp
in
sbb
std
test
lds
out
pop
sbb
out
xchg
lea
sbb
fwait
mov
pushf
push
push
bound
mov
mov
xor
dec
shlb
dec
adc
mov
cltd
add
ret
or
pop
mov
enter
jmp
mov
iret
jg
push
in
dec
xor
scas
mov
adc
dec
xor
adc
jb
fcomip
je
mov
insl
add
pusha
sub
pop
cltd
in
hlt
mov
imul
in
and
les
mov
jbe
push
and
cmp
cltd
repnz
pop
syscall
mov
or
xlat
xchg
sbb
inc
mov
mov
pop
mov
shl
or
daa
fnstcw
push
adc
lea
lret
cs
and
mov
sar
icebp
ficoml
push
sti
mov
inc
pop
mov
xchg
test
jl
cltd
test
inc
scas
jo
jns
enter
imul
inc
sub
sub
inc
or
dec
jns
lret
lods
dec
rcrl
sub
mov
or
jl
stc
scas
push
jp
shr
sarb
mov
xchg
cmp
pop
jmp
ja
dec
push
jbe
add
cmp
out
shlb
and
cli
testb
test
pop
clc
or
push
in
mov
ja
lods
lods
clc
xchg
sbb
stc
push
push
sub
fdivrl
test
or
xchg
std
mov
aas
pop
mov
fbstp
adc
inc
insb
add
sar
pop
in
bound
fsubrs
push
cmp
push
cld
or
push
fwait
pop
and
inc
cmp
mov
mov
scas
inc
mov
xor
pusha
rclb
pop
lods
fwait
mov
fstps
cmp
sub
sbb
push
pop
hlt
leave
or
lcall
inc
or
addb
mov
arpl
cmpsl
loopne
jle
imul
cmp
xchg
loopne
push
ds
mov
jno
mov
stos
pop
push
mov
add
pop
popa
cmp
in
jmp
mov
outsb
stc
mov
xlat
push
dec
cmp
and
or
loop
out
push
fwait
xchg
pop
xor
mov
sti
add
mov
pop
push
loop
cmovno
xchg
jns
push
inc
adc
push
pop
fldenv
xchg
adc
ffreep
test
lcall
sub
pop
pusha
sbb
imulb
adc
push
stc
in
xlat
mov
adc
mov
scas
movsb
adc
xor
int
xor
sub
outsl
jg
inc
push
add
aad
xor
xchg
adc
loop
jge
mov
add
pop
ret
fsubrs
pop
cmp
xchg
fidivs
bound
loopne
ja
lahf
sub
cwtl
push
mov
xor
loopne
call
push
fiadds
push
dec
dec
cmpb
test
mull
lahf
loopne
leave
xor
jb,pn
shlb
pop
jmp
loopne
clc
add
bnd
les
jmp
movsl
adcl
sub
adc
cwtl
mov
and
cmpl
jno
ret
loope
mov
lret
aaa
addr16
xor
xchg
push
ljmp
mov
pop
xchg
mov
push
xchg
sarl
lret
insl
xchg
xchg
mov
sub
dec
mov
mov
pop
xchg
rolb
scas
mov
in
mov
cmc
mov
loopne
in
repz
addb
or
inc
negl
pop
sarb
cmp
push
shlb
scas
xor
push
push
test
mov
pusha
test
mov
sbb
inc
or
xchg
or
lahf
dec
inc
cmpsl
jo
setp
inc
push
stos
mov
jne
cltd
cmc
mov
sub
pmaxub
inc
jno
movsl
mov
clc
xchg
lahf
or
jns
mov
mov
adc
cwtl
cmp
or
xchg
dec
cmp
adc
push
movsl
sub
inc
addb
idivl
jle
xor
push
ficompl
xchg
sahf
xlat
imul
or
repnz
mov
and
inc
aam
inc
adc
fs
sbb
pop
in
inc
pop
push
cmpb
lods
mov
dec
push
enter
add
notl
sub
test
gs
imul
push
outsb
enter
rorl
dec
mov
inc
stos
int
push
repz
fdivp
scas
lcall
sbb
loope
les
js
and
shll
cmp
into
test
jl
sub
mov
lea
inc
in
arpl
lea
rorl
or
and
sahf
mov
loope
sbb
inc
push
test
and
mov
fwait
jmp
dec
inc
scas
inc
or
cmpsl
xor
pop
insb
xor
and
jp
loopne
xor
outsb
pushf
dec
repz
int
bts
nop
test
cmp
push
mov
or
movb
mov
push
push
in
ja
insl
fwait
mov
mov
add
out
cld
icebp
stc
xchg
fucomi
fistl
aas
cmc
xor
push
stc
add
sub
xchg
sub
outsb
or
jae
cmp
jmp
out
xchg
or
add
sub
icebp
frstor
imul
in
andl
vunpckhps
xor
mov
mov
add
push
scas
lcall
rcrb
add
xchg
inc
or
test
add
pop
xchg
add
fisttpll
ss
fisubs
pop
push
out
clts
imul
repz
cwtl
adc
adc
sbb
sbb
aad
test
sbb
push
pop
xlat
or
mov
or
movb
bound
cli
and
xor
pop
mov
xchg
jmp
gs
ss
pcmpeqd
lods
mov
cmpsl
pop
sahf
add
call
sub
cltd
sbb
mov
mov
fisttps
cmp
ja
test
cld
fiaddl
cmp
adc
mov
mov
mov
add
xor
adc
inc
cli
daa
and
mov
out
push
xchg
xchg
mov
inc
xchg
ffreep
and
leave
jmp
fcomps
mov
testb
xchg
decb
lods
or
push
out
push
enter
xchg
cmpsb
sarb
inc
xor
ja
incl
jmp
xchg
jmp
mov
dec
pusha
xor
mov
mov
cmpsb
negl
cmp
or
add
daa
scas
jmp
cmp
mov
pop
fldcw
jnp
ja
mov
into
adc
push
inc
mov
stc
shrl
fmuls
negl
mov
pop
push
push
or
out
xor
add
cmp
mov
and
and
lock
faddl
inc
fsub
subl
sahf
sbb
imul
lea
cmpb
loopne
jns
aad
cmp
jge
lods
mov
andl
mov
insl
cmpsl
mov
xchg
mov
add
pop
xorl
aas
add
andl
push
ds
mov
les
aas
xchg
xchg
sbbl
mov
jno
jmp
fcmovbe
lret
fiadds
dec
xchg
push
inc
push
xchg
jge
popa
pop
loopne
jne
push
lods
xor
mov
xor
sbb
arpl
mov
and
cld
lea
push
xchg
test
xchg
sar
rclb
fimull
and
mov
sbb
rcll
push
lret
jge
call
or
fdiv
call
push
out
mov
lret
arpl
in
lret
sbb
mov
adc
fwait
or
xor
es
dec
push
xor
push
mov
out
mov
js
hlt
cmpsb
int
insb
xchg
push
xchg
lods
adc
xchg
mov
lcall
fimuls
dec
cli
dec
movsl
lods
xchg
test
ret
fildl
mov
leave
pop
sti
xor
or
pusha
mov
mov
out
mov
add
mov
cmpsl
insl
or
outsl
mov
loop
aad
sub
out
lret
cmpsb
sub
xchg
imul
lods
sub
xchg
int
xchg
mov
lock
jo
insl
mov
icebp
xchg
ljmp
std
cmp
adc
mov
or
mov
data16
mov
fdivl
ret
cmpl
popa
cmc
sarl
cli
insb
pop
push
adc
and
into
inc
push
add
cmpsl
das
mov
lea
inc
sub
xor
jmp
insb
movsb
mov
jecxz
push
cmp
dec
xchg
in
sub
and
mov
mov
xchg
rol
jb
sahf
jns
jo
push
sbb
mov
int3
jecxz
test
fistpll
jo
xor
ja
jle
pop
pop
mov
aad
ret
les
stos
leave
pop
xchg
idiv
adc
idiv
mov
js
xor
loope
repnz
push
xchg
xor
mov
pop
popa
cmpsb
hlt
and
out
in
aad
sahf
ret
out
lea
outsb
lahf
adcl
and
andb
lahf
rcll
popf
rcll
ds
mov
mov
lock
add
sbb
inc
je
fisttpl
stos
shlb
xchg
idivl
sahf
dec
dec
jne
mov
in
lret
lcall
and
xchg
cmc
add
sbbl
stos
bound
push
jecxz
cli
sahf
add
shrb
xor
dec
cmpl
xchg
sbb
lods
pop
shr
and
clc
sahf
jmp
cltd
and
jge
ret
or
xlat
or
daa
sahf
iret
and
test
movq
gs
mov
jg
or
popf
mov
push
aas
mov
rcll
loop
scas
dec
or
fcoml
inc
xchg
add
das
movsb
mov
ljmp
xor
lret
dec
mov
cmc
in
add
sbb
ds
push
push
jbe
sub
and
fimull
mov
fwait
adc
dec
std
xchg
cmp
mov
jecxz
and
icebp
out
jae
aam
cmc
cwtl
xor
lret
mov
xor
out
inc
scas
push
inc
mov
shrb
in
sbb
push
stc
fisubl
popl
and
pop
push
test
jne
xor
dec
mov
divl
bound
imulb
cmp
inc
inc
dec
push
shrb
xor
or
cmp
cwtl
iret
les
inc
in
cmp
and
push
out
in
popa
push
in
scas
rcr
adc
orl
sub
xor
push
imul
jmp
in
cmc
loop
sbb
xchg
ftst
mov
int
mov
dec
imul
testb
cmpsl
push
test
cmpsl
adc
push
cld
in
cmc
arpl
add
xor
imul
movsl
addl
push
out
outsl
and
inc
or
push
jbe
pop
xor
es
pop
rcrl
pop
fimull
mov
adc
xlat
pop
and
adc
pushf
pop
mov
imul
aad
push
arpl
in
inc
xchg
or
and
push
shl
and
sub
fildl
insl
outsb
test
nop
cmc
imul
cld
mov
dec
repz
and
jb
adc
not
dec
adc
movl
out
sahf
in
movl
int
xchg
jp
pop
add
ljmp
repnz
sbb
lahf
inc
repz
int3
dec
mov
into
cmc
mov
mov
rcl
repz
mov
les
jne
dec
pop
push
and
es
fimull
push
cmpsl
fcmove
and
fwait
or
addr16
mov
push
sbb
imul
fidivrl
dec
pusha
pop
mov
jl
cmp
xor
loopne
mov
adc
rcrl
jns
or
push
xorl
push
push
fnstcw
add
mov
mov
arpl
iret
xor
or
sub
sbb
pop
lcall
les
mov
mov
jmp
out
insb
sub
sub
in
pop
lock
push
lret
dec
mov
or
daa
cwtl
mov
fcmovb
aas
repnz
movsb
lods
mov
out
imull
sub
xchg
lahf
jnp
sbb
lds
stos
mov
jne
mov
hlt
movsb
sbb
sbb
pop
jg
cmp
lcall
mov
inc
push
iret
add
call
or
adc
fstps
mov
pop
movsl
test
ret
pop
out
add
or
sub
and
pusha
imul
mov
or
pop
jmp
sub
int
call
les
popa
inc
mov
outsl
xchg
mov
sub
sbb
mov
lcall
in
mov
imul
dec
mov
mov
ret
mov
adc
ss
sets
in
mov
cmpb
lea
hlt
pop
scas
inc
imulb
xchg
lea
mov
ljmp
ret
jg
outsb
add
dec
add
fbstp
ret
sub
fmul
cltd
and
cmp
test
pop
sbb
sbb
push
mov
jmp
jmp
insb
outsb
xor
jp
nop
imull
jae
or
jbe
outsb
adc
fwait
adc
dec
in
stc
mov
repnz
subb
mov
ja
and
ja
add
call
cli
mov
lds
inc
mov
pop
sbb
decb
mov
xchg
jle
fstpl
lret
icebp
scas
lea
js
adc
push
sbb
mov
daa
sub
sub
arpl
popa
and
push
outsb
add
dec
les
mov
pop
dec
inc
insb
sar
movsb
xlat
xor
cmp
out
dec
add
filds
test
adc
movsl
mov
sti
pusha
push
and
jnp
aad
mov
std
stc
in
push
inc
jecxz
inc
stc
das
js
lods
jo
cmpsl
xchg
les
xchg
xor
jbe
movsl
out
push
fstpl
icebp
or
inc
cmpl
push
dec
outsl
lock
into
std
enter
xchg
fwait
jae
adc
loope
push
das
mov
fucomp
adc
movsb
jmp
push
push
xchg
cmp
clc
frstor
shr
push
adc
sbb
outsl
loopne
aad
insw
scas
mov
rcrb
mov
cmp
aad
dec
ljmp
or
mov
mov
les
pop
cmp
sub
dec
data16
popf
ds
jb
sbb
test
push
or
test
cmp
fsubrl
out
push
inc
mov
cmp
mov
xchg
fildll
popa
sub
cs
adc
pop
xorl
stos
ret
inc
or
xchg
enter
and
pop
add
ss
jg
sub
jle
lret
push
or
dec
hlt
inc
es
add
stos
and
jae
mov
rcrb
in
mov
rolb
pop
rclb
iret
cmp
xchg
xlat
out
xor
test
inc
sub
mov
lods
xor
cltd
loop
jne
mov
or
mov
cmpsl
dec
cmc
push
push
ret
cwtl
sbb
fidivrs
mov
cld
test
pushf
scas
aaa
icebp
pop
test
adc
push
bound
mov
jmp
add
lock
pop
jecxz
shr
push
adc
xchg
arpl
sub
sub
mov
xor
adc
loope
mov
std
pop
stos
pop
push
mov
xchg
mov
leave
lea
cmp
mov
fcmovnb
cmp
xchg
sub
cmp
sbb
lds
push
fsubrs
dec
lds
das
rcrb
loopne
dec
out
stos
addl
ret
fnstsw
icebp
mov
clc
jecxz
leave
mov
into
push
push
cmp
inc
loopne
cmp
jne
lahf
jnp
adc
rclb
and
xchg
test
movsw
sbb
add
subb
sbb
mov
mov
cmp
jbe
div
insl
and
push
mov
call
popf
or
jg
shlb
lcall
ret
push
push
cmp
out
cli
lods
sbb
cmpsb
and
sub
adc
jmp
mov
enter
and
stos
sub
jno
les
in
std
xor
push
or
stos
in
rcll
adc
inc
xor
xchg
dec
enter
add
sbb
cwtl
scas
xchg
dec
push
cld
pop
jp
mov
pop
xchg
aam
or
cwtl
incb
data16
in
xchg
dec
pop
sbb
pminub
cmp
les
pusha
mov
loope
mov
lods
sarl
push
sub
inc
cmp
mov
test
inc
lahf
mov
mov
imul
sbb
mov
xchg
das
cs
sub
in
xor
and
std
mov
test
xchg
jle
jo
bound
test
sub
pushf
ja
push
cmp
popf
loope
rsm
fsubrl
gs
frstpm(287
fwait
jp
jne
insb
pop
sbb
pop
cltd
add
fcmovb
push
inc
or
mov
shrb
push
lds
jecxz
scas
sti
push
lret
scas
scas
mul
jp
in
aas
outsl
cmp
ret
out
dec
es
mov
mov
mov
and
ret
xchg
adc
cmp
in
and
pop
lret
cs
sub
mov
jl
pop
sub
insl
ds
push
and
or
cmp
movsl
pop
jne
das
dec
int
ljmp
lret
add
andb
movsb
stos
push
cmp
cmp
je
lock
jne
and
sub
outsb
sbb
gs
inc
dec
cs
in
and
push
aam
stos
jbe
aam
adc
push
hlt
push
mov
push
inc
xchg
ficomps
mov
mov
lea
push
cmpsl
push
clc
mov
int3
bound
mov
std
fldcw
jl
sarl
jno
push
and
sbb
and
lret
out
xchg
mov
in
lods
lret
fidivs
add
or
and
gs
push
mov
add
push
cmp
xchg
fildll
or
adc
fs
dec
xchg
pop
ficoms
arpl
adc
shlb
lds
std
mov
dec
jo
mov
insl
call
xor
and
arpl
xchg
repz
or
inc
std
addb
fldl
sub
cwtl
pusha
jnp
push
roll
nop
and
jo
mov
in
sub
testb
aad
divb
push
fsts
jo
imul
push
lds
xchg
dec
jae
push
arpl
xchg
daa
mov
into
and
dec
mov
and
ret
xor
push
out
dec
imul
stos
mov
jle
jne
adc
mov
push
jl
pop
mov
jbe
out
cmp
pop
scas
cmp
xor
push
out
jmp
push
loopne
je
and
fistpl
push
jo
mov
jo
enter
in
stos
out
push
jo
int
xchg
add
push
pushf
jns
adc
cmp
or
mov
pop
dec
jl
pop
inc
mov
pop
pop
fimull
aad
push
xchg
pop
ret
repnz
push
push
call
pop
cltd
push
fcmovb
mov
fnsave
loopne
sub
and
cwtl
aas
shlb
lds
xchg
inc
rclb
arpl
mov
xchg
lret
cmc
test
inc
data16
mov
push
test
iret
dec
out
movsb
aad
or
inc
shlb
xchg
cld
or
jecxz
cs
outsl
cmpsl
mov
hlt
add
xchg
das
mov
loope
xor
outsb
sub
cli
ljmp
ret
mov
pop
mov
xchg
push
lea
adc
loope
fs
add
push
cmp
cwtl
test
inc
jmp
bound
cmp
push
jp
or
xorb
out
jb
jbe
repz
pop
sahf
popa
inc
lret
and
repnz
outsl
mov
sub
mov
lret
ljmp
shl
adc
push
xor
sbb
hlt
mov
repnz
or
ja
jmp
xchg
and
mov
jb
pop
mov
add
cmp
dec
jl
mov
inc
push
sbb
pop
movb
mov
mov
sbb
jae
pop
mov
cmp
and
loopne
stos
stc
and
jle
mov
cmp
rcrb
bound
pop
adc
pop
lret
lldt
adc
dec
or
mov
in
sbb
xchg
push
mov
js
repz
pop
jno
mov
jg
out
push
xor
xor
jge
pop
xor
js
jg
xchg
rorl
cmp
hlt
pop
adc
enter
in
pop
xor
sahf
inc
pushf
in
fstpl
imul
xchg
inc
outsb
dec
xor
rep
fstl
inc
gs
push
inc
mov
std
push
dec
bound
pop
pop
test
jae
inc
dec
fs
jo
test
inc
mov
mov
adc
inc
loope
mov
adc
cltd
cmpb
and
sub
enter
movsl
int
pop
mov
xchg
rcrl
es
xchg
pxor
jmp
jo
loope
dec
and
add
jp
pmulhuw
jp
cmpsb
fiadds
and
lds
orl
imul
mov
xchg
movsl
add
jae
das
je
jge
sbb
fwait
cmp
inc
sbb
push
sti
paddw
stc
fistpl
js
mov
sbb
push
sbb
mov
xchg
pusha
adc
rclb
iret
popa
stos
jg
cmc
daa
test
dec
inc
push
test
push
cmp
lods
mov
sub
xchg
outsl
dec
fldt
call
mov
add
aas
and
inc
mov
adc
call
cmp
stos
cmpl
xor
shlb
sarl
xlat
shlb
in
test
in
push
arpl
mov
std
sti
das
int3
cmp
dec
testb
xor
add
xchg
popa
stos
inc
fwait
mov
out
xchg
in
jg
sub
adc
lock
pop
pop
push
ficompl
fnstenv
testl
arpl
aad
fimuls
pop
mov
jae
jmp
mov
movsl
inc
xor
mov
lds
fdivrs
fcoms
mov
mov
mov
xchg
sub
jbe
add
pushf
and
xchg
test
cwtl
push
mov
push
adc
and
insl
inc
lcall
ljmp
mov
hlt
cmpsb
sbb
shrb
loopne
cli
ret
jg
gs
push
mov
popa
ret
xor
mov
arpl
orb
dec
pop
push
sub
and
pop
fs
inc
fwait
inc
sub
scas
push
jbe
aaa
inc
xchg
sbb
notl
mov
inc
mov
cmp
sub
mov
movb
leave
jbe
out
fadds
jmp
mov
mov
ds
adc
mov
jge
pop
and
mov
pop
adc
ret
cmp
xchg
jle
mov
loope
push
sub
sub
sahf
jnp
dec
mov
inc
sub
scas
adc
mov
add
xchg
loop
lea
cmp
dec
scas
mov
andb
ja
scas
movsb
scas
pop
push
pop
movsb
das
jge
sarb
xchg
cmp
test
dec
xchg
test
sub
sbb
addb
or
push
shll
push
pop
inc
pop
add
fistpl
rorb
aam
std
jns
dec
outsl
adc
dec
adc
or
jne
inc
xchg
jbe
mov
out
out
rcrb
inc
outsb
push
sbb
dec
pusha
xchg
out
subl
cmpsb
ljmp
fucomp
popa
cmpsb
jle
inc
or
sbb
sub
mov
pop
push
dec
fisttpl
and
mov
adc
ret
xchg
jne
adc
add
test
adc
fcoml
adc
push
movsl
push
xor
sbb
ds
out
mov
jbe
jl
jne
cmc
pop
roll
xorb
test
ja
mull
imul
xor
out
nop
mov
cmp
pop
test
lods
jg
mov
pop
and
and
and
inc
imull
pushf
xchg
lea
adc
xchg
pop
lret
sub
stos
pusha
xor
fistpl
push
xchg
in
das
stos
clc
xor
in
mov
enter
insl
mov
lds
sub
dec
xchg
mov
insl
mov
cmp
scas
jl
mov
out
ret
push
js
in
adc
xor
dec
jne
push
inc
out
cmp
movsl
scas
add
adc
lock
adc
mov
cli
sub
out
stos
je
pop
push
mov
add
mov
push
cmp
push
aaa
popf
les
fiaddl
je
sbb
mov
int3
cmpsb
inc
xchg
in
icebp
sub
jg
pop
cmp
sub
cmpsb
shll
cmpsl
push
xchg
shlb
lcall
fisubs
negl
dec
je
pop
addb
bnd
bound
xor
mov
int
sub
xor
push
sbb
repz
mov
push
inc
sub
add
inc
mov
jno
jns
lret
or
movsb
jne
pop
cs
imul
sbbl
vminps
push
fisttpll
mov
mov
xor
bound
loope
pop
jb
and
mov
cli
fwait
add
movsl
sbb
mov
jnp
sar
dec
out
es
insb
pop
dec
sarb
dec
sub
out
mov
leave
rorl
pop
or
pop
xchg
jge
daa
iret
push
fldcw
push
mov
fwait
inc
add
xor
aam
cmc
sti
fwait
or
call
mov
fistpl
ja
push
rcll
pop
or
mov
pop
sbb
jl
sbbb
adc
jno
jle
mov
push
subb
mov
lods
inc
mov
sub
jo
ret
adc
xchg
aad
pop
loop
into
dec
ret
lea
lret
or
out
sbb
ret
lds
sbb
rorb
inc
in
nop
gs
add
push
sub
push
pop
dec
js
sahf
cltd
scas
mov
mov
pop
daa
clc
fs
dec
xor
arpl
scas
mov
icebp
mov
js
jae
mov
inc
gs
jecxz
js
sbb
and
sub
enter
stc
cmpsb
inc
mov
dec
sbb
jg
add
gs
sub
stos
out
jnp
in
scas
mov
js
sub
gs
jecxz
aas
adc
leave
add
in
idivl
mov
gs
jg
or
push
mov
fwait
adc
cmp
xchg
test
pop
ret
mov
push
xchg
leave
inc
mov
xchg
out
lea
jge
sbb
fs
sbb
lods
inc
cmp
dec
inc
xchg
stc
movsb
inc
cwtl
or
mov
sbb
inc
sbb
sub
cld
arpl
adc
mov
rolb
mov
das
fdivs
pop
cmpsl
ja
add
add
clc
enter
cmp
push
loop
inc
sarl
mov
aam
push
push
or
push
icebp
cltd
jge
pop
add
aaa
sub
dec
xor
sub
push
mov
repnz
sub
pop
jg
cmpsl
in
and
scas
jae
mov
movb
fistps
mov
xchg
jns
jns
mov
cmp
sbb
add
popa
movsb
out
xchg
and
and
cmp
in
sub
jno
inc
scas
stos
pop
scas
inc
out
mov
imulb
insl
movsl
in
cmc
mov
std
dec
ds
je
and
in
cmc
cli
push
cmpsl
cmpsl
xchg
push
mov
movsl
mov
mov
dec
mov
lret
mov
jge
cmpb
mov
cmpsl
and
imul
push
repnz
pop
sub
fsubs
adc
jae
xchg
xchg
sti
dec
jp
testb
and
enter
dec
and
scas
ret
cmp
nop
and
adc
xchg
inc
cltd
outsl
cmpsb
jnp
lret
fcomps
pop
imul
push
lahf
xor
rep
add
loop
stos
mov
push
rolb
sbb
mov
mov
sbb
out
imul
icebp
push
iret
insb
pop
call
push
fwait
mov
mov
jge
lea
add
fwait
and
decb
mov
and
xor
pmaddwd
popf
pop
dec
jns
jne
ret
mov
aad
push
test
ffree
lcall
movsb
push
mov
xlat
std
in
sbb
mov
aad
inc
aaa
ret
xchg
dec
ret
xor
and
sub
and
mov
jbe
add
pusha
ret
or
and
iret
push
xchg
lods
int3
mov
cmc
ds
lock
stc
fdivl
mov
call
mov
and
ret
scas
test
cmp
push
test
sbb
mov
lret
ret
sbb
ss
int
in
push
xchg
js
nop
sbb
push
fiaddl
pusha
mov
inc
cmp
movsb
mov
or
in
push
sbb
push
mov
and
add
ds
push
cmpsb
or
lahf
insl
daa
push
jb
arpl
cwtl
jne
addr16
lret
push
movsb
lret
mov
or
lea
mov
lret
ljmp
mov
addb
lods
test
or
fdivrl
mov
sub
jbe
push
aam
mov
xchg
int3
cmp
push
les
out
in
gs
mov
lods
bound
or
repz
lret
into
ja
sub
aas
testl
cmp
cli
sahf
test
adc
pop
push
sti
gs
jmp
dec
inc
mov
clc
cmp
lret
movsb
sbb
pop
mov
and
and
aaa
push
sub
cmpsb
xlat
sbb
jmp
add
xor
cmpsl
stos
lods
xchg
cmp
mov
int3
icebp
mov
jnp
mov
cmp
test
xchg
in
fs
cld
sahf
inc
jb
jns
mov
push
or
out
cmpsl
aas
sub
jns
roll
mov
inc
jmp
sub
sbb
scas
mov
das
insl
clc
scas
xor
out
aaa
arpl
add
mov
outsb
xchg
call
dec
add
rol
decb
xor
add
in
popa
shlb
push
lcall
xor
loopne
jne
movl
jns
push
and
sbb
push
in
xor
out
push
je
mov
lods
inc
sub
xor
dec
fisubs
xor
mov
ja,pt
pusha
push
and
shl
fmulp
ret
cmp
out
std
sbb
je
mov
jg
xor
add
inc
movsb
rorl
dec
or
cmp
sbb
pop
xor
jno
push
and
or
fcoml
into
les
gs
hlt
shll
xor
cmc
mov
mov
adc
mov
movsl
xor
inc
jnp
sub
xlat
pop
mov
adc
add
jge
fisubrl
mov
jo
mov
xor
imul
das
adc
or
xor
sbb
shr
mov
xchg
gs
loop
and
sbb
iret
addl
ret
mov
adc
les
or
adc
ror
jbe
and
and
mov
adc
mov
stos
rcl
mov
mov
pop
cld
sbb
loopne
pushf
push
movsb
push
sti
push
shl
xchg
mov
aaa
addr16
xchg
sbb
dec
js
jne
ss
cld
jno
bound
test
sub
mov
sarb
mov
stc
pop
dec
int3
stos
imul
out
sub
jl
ljmp
inc
or
fidivrl
shlb
sub
sub
add
xchg
jg
js
jmp
push
cli
or
sahf
sahf
mov
or
in
cwtl
inc
mulb
cmpsl
fstpt
push
loopne
jno
pop
nop
fbstp
cmpsb
add
into
mov
and
sub
jae
clc
ss
xor
fs
and
leave
push
out
ja
in
scas
fsubrl
movsb
cmp
sub
scas
xchg
mov
aaa
mov
fsubr
cmp
movsl
push
and
data16
nop
add
add
pop
mov
push
or
sub
cmpsb
out
subb
xor
stos
inc
xchg
jecxz
lock
add
dec
ljmp
mov
xchg
xchg
mov
sysret
repnz
inc
loopne
mov
cmp
mov
and
popa
shll
ljmp
mov
out
dec
cltd
pop
pop
int3
inc
xchg
dec
sbb
sbb
icebp
inc
xchg
or
adc
cs
add
xor
repz
xchg
scas
or
mov
jae
xor
lret
sbb
gs
or
dec
int
dec
or
mov
sbb
xlat
dec
jb
jno
mov
xor
adc
test
add
daa
loopne
in
cmp
or
out
jo
mov
std
adc
jecxz
lds
sbb
xchg
fcmovb
fidivl
inc
push
es
mov
jo
cmp
ja
cmc
inc
push
mov
mov
and
es
insl
mov
out
enter
ret
fs
adc
or
cmp
xlat
and
push
adc
lods
push
ja
pop
outsb
sbb
movsb
ficoms
clc
daa
cld
lcall
test
insb
lock
or
cmp
lahf
stos
inc
jmp
leave
pop
filds
movsl
jmp
icebp
pop
es
mov
sub
sbb
pop
mov
or
inc
imul
dec
sub
sub
in
cmp
ja
rorb
es
mov
mov
cmp
aam
dec
fiaddl
jge
mov
cmc
jnp
adc
inc
or
aas
mov
jle
pop
jp
shl
mov
sub
pop
xor
cmp
jg
cmp
mov
and
xor
add
aas
xchg
jnp
shll
sub
cmc
test
and
cltd
into
punpcklbw
cli
dec
test
clc
hlt
aas
push
pop
mov
xchg
dec
add
or
out
sbb
insl
pop
pop
sahf
roll
cld
mov
jne
addr16
mov
xchg
rcrb
sbb
pop
pop
ja
orl
pop
and
aam
scas
inc
cmpsl
ljmp
ljmp
lock
or
or
or
jbe
repnz
sbb
xchg
sbb
test
sub
subl
das
xlat
inc
xor
add
push
add
push
fdiv
sub
push
es
jecxz
and
jecxz
dec
sahf
sti
call
inc
mov
stc
stos
addr16
pop
sbb
sbb
push
add
inc
jb
into
add
in
inc
test
dec
outsb
daa
mov
fsub
iret
mov
add
lods
xlat
mov
xor
out
mov
nop
mov
shl
dec
mov
dec
test
adc
lea
cwtl
test
inc
adc
jbe
lea
arpl
pop
in
xchg
fistl
push
adcl
ds
lret
sbb
dec
test
push
push
inc
loope
cmc
cmp
mov
imul
xchg
xchg
test
jmp
stos
mov
insl
aas
cmpsl
fwait
dec
xchg
out
mov
adc
mov
rol
mov
inc
mov
imul
xor
mov
mov
push
mov
add
cwtl
mov
mov
scas
in
loope
sub
mov
fcoms
loope
jns
jle
fcmove
jo
fildl
andl
sub
outsl
pop
fdivrs
xor
out
cld
daa
test
int3
mov
inc
loop
repz
pop
inc
mov
in
push
stos
mov
add
pushf
cmpsb
jae
jne
filds
sahf
mov
mov
dec
movb
daa
cmc
lret
jmp
sbb
cmpsl
inc
ds
xor
or
int
rcll
xchg
xchg
jg
mov
dec
std
xor
test
hlt
sub
mov
movsb
into
add
mov
fisubl
data16
sarl
add
pushf
add
cmc
mov
popf
add
imul
loopne
scas
cltd
or
xchg
ror
aam
xlat
xchg
cmc
adc
jl
jg
fisttpll
int3
mov
insb
mov
and
cltd
in
adc
sub
push
mov
mov
fcmove
inc
js
xchg
jo
cmpsb
mov
sysret
dec
xchg
xlat
xchg
dec
rorl
mov
lret
inc
je
pop
ss
arpl
fwait
aam
inc
scas
mov
les
jnp
les
lretw
jge
inc
leave
jg
dec
bound
xchg
add
xlat
or
push
xor
or
push
jg
dec
lret
mov
out
mov
sahf
sub
scas
jns
xor
jmp
sbb
lods
ss
in
lret
xchg
or
xor
adc
adc
pop
insl
ds
push
fdivrs
leave
hlt
js
push
imul
icebp
lods
and
inc
add
test
and
mov
imul
fmulp
insb
nop
add
and
mov
mov
pop
loope
dec
sub
out
lods
gs
jno
push
or
arpl
sarl
adc
je
xchg
into
roll
lret
lea
xorl
dec
and
sahf
xchg
add
sub
es
xlat
popf
js
test
add
add
cmpsl
imul
lret
lods
jno
movsb
pushf
push
add
xor
mov
push
dec
mov
xchg
mov
out
jge
mov
jo
pop
add
pop
mov
inc
cld
js
mov
or
ds
iret
call
mov
lahf
jne
mov
iret
lock
sbb
push
mov
push
mov
xchg
mov
and
jb
mov
mov
mov
dec
or
in
dec
jmp
push
push
imul
test
jle
icebp
xchg
fadd
int3
int
leave
jo
and
ljmp
das
cltd
xor
push
and
push
in
add
jle
inc
daa
arpl
jo
or
sbb
dec
mov
nop
dec
lea
or
rolb
inc
shlb
inc
push
pop
cwtl
orl
xchg
call
pop
stos
push
and
addl
add
mov
mov
mov
jl
call
stos
pushf
sub
add
cmp
push
ret
daa
scas
lcall
mov
call
jmp
or
and
fcoml
xor
pop
sbb
sub
push
loop
shlb
jle
cmp
out
xlat
xchg
adc
pop
pop
sbb
xor
iret
mov
mov
xchg
add
push
pop
int
sbb
dec
scas
lahf
dec
rclb
mov
les
ja
xor
pop
sub
sbb
in
mov
sub
inc
pop
xchg
pusha
stc
lods
mov
subb
xor
stc
daa
into
andb
sbb
es
sub
jno
aaa
dec
mulb
pop
rorb
sub
sub
sbb
or
repnz
rcrb
mov
mov
nop
loope
jg
or
push
jno
out
mov
lea
push
mov
pop
mov
cmc
cltd
mov
xchg
gs
sbb
xor
dec
sub
mov
push
pop
dec
jmp
lock
cltd
pop
flds
xlat
inc
inc
fsubs
lahf
add
addr16
lret
push
lds
adc
fsts
cmc
lcall
outsl
or
inc
addr16
pop
pushf
iret
ja
jle
aas
dec
arpl
clc
ss
dec
addl
aam
test
and
pop
sbb
mov
daa
inc
or
jecxz
xchg
scas
pop
cltd
cmp
cmp
fldenv
nop
sbb
or
xchg
jo
pop
dec
inc
mov
arpl
cltd
scas
sub
xchg
dec
sub
int
mov
arpl
jl
lret
mov
add
jp
popf
repnz
jbe
xchg
pop
sbb
outsl
inc
cmp
mov
sbb
fbstp
jo
xor
outsl
in
pop
inc
outsb
push
stos
stos
mov
inc
das
xchg
pop
pop
xor
sub
xchg
in
outsb
xor
ror
aad
test
rcrl
and
test
mov
xchg
or
xor
rcrl
out
fcom
add
mov
inc
pop
std
aad
insb
mov
daa
push
cmpsl
sbb
test
jmp
fsubs
int3
mov
lahf
jg
sbb
js
fists
movsl
shrd
mov
jg,pn
lods
mov
mov
orb
dec
mov
and
adc
popa
sub
add
or
in
imul
xor
mov
in
jle
sub
jecxz
push
scas
test
dec
sub
in
pop
ss
cmovae
outsb
inc
cltd
or
lock
imul
aas
jmp
push
mov
fsub
mov
mov
iret
cmc
dec
dec
cli
and
adc
mov
aaa
ret
or
mov
cmp
push
aam
dec
int3
pop
imul
jp
inc
push
adc
mov
push
and
pop
mov
push
or
outsb
sub
sub
fisttps
lds
out
test
sub
inc
xchg
push
shlb
psrld
mov
pop
adc
loop
and
roll
mov
out
adc
xchg
push
call
cmp
fsubrl
cmpsb
frstor
daa
fmul
cmpsb
scas
mov
inc
mov
pop
outsl
xor
jmp
push
add
gs
loop
xchg
ljmp
fs
aaa
xchg
and
rcl
arpl
xchg
loop
mov
xchg
push
sub
lahf
sub
lods
fcoms
cld
sub
inc
sbb
xor
das
and
xor
mov
lret
loopne
push
dec
leave
pop
xchg
leave
fldt
cld
into
push
mov
js
jno
xchg
ret
xchg
scas
cmp
xchg
and
xor
mov
jge
lds
nop
push
adc
xor
pop
jo
insb
imul
push
jl
mov
aas
or
xor
fs
or
lret
inc
mov
jbe
fiaddl
push
inc
insl
push
cmp
xor
adc
outsl
mov
fistpll
xchg
mov
scas
sti
xchg
sbb
mov
lea
inc
dec
int3
fadd
mov
mov
je
out
cmpsb
loop
out
sbb
out
ret
daa
pop
dec
mov
dec
inc
pop
lret
lret
cmpsb
shrb
lahf
push
adc
xchg
push
shl
sub
push
mov
mov
pop
vcomisd
int
ds
xchg
adc
xor
sar
iret
scas
or
push
lds
add
inc
aam
dec
xchg
pop
stos
push
dec
testl
add
cmp
or
mov
adc
push
dec
jae
add
fimull
adc
fmulp
push
clc
sbb
repz
daa
cs
cmpsl
jg
fstps
xorl
rcrl
mov
lea
lcall
cmp
insb
xchg
pop
sbb
mov
in
icebp
loopne
enter
add
inc
dec
in
out
lcall
fcmovb
das
adc
lods
test
movsb
jne
and
xor
mov
sub
mov
push
dec
mov
dec
ss
movsb
subb
das
je
or
pushf
xchg
int
jp
std
or
xor
adc
and
popf
out
mov
sub
pop
jge
mov
lock
lret
fdivs
orb
test
nop
xor
sub
movsb
aam
scas
mov
cmpb
stos
sub
add
outsb
dec
sahf
pop
imull
or
lret
push
jns
jg
and
lret
or
jbe
sub
cmp
jecxz
ret
cmp
dec
sub
cltd
mov
adc
xchg
popa
push
movsl
xchg
lds
inc
cmp
into
add
jb
or
orb
in
add
roll
sbb
inc
jle
push
jbe
inc
pop
dec
mov
xchg
dec
sub
push
sub
mov
ret
sti
cmpsb
jno
xchg
out
lret
lea
nop
jecxz
xor
jne
leave
push
int
movsb
mov
es
pop
out
jle
out
dec
test
cmp
inc
insl
mov
out
mov
add
frstor
adc
dec
roll
pop
ret
out
xor
adc
movsb
adc
and
fsubrl
pop
sbb
jns
rcll
mov
stc
mull
stc
cmp
lods
jae
mov
fldl
stos
in
dec
shr
push
inc
adc
pop
jae
pop
and
mov
cltd
sarl
xor
jne
jmp
sub
or
subl
cs
xchg
dec
test
lret
inc
or
inc
mov
loop
sub
nop
xor
xor
push
fsubl
mov
fdivl
adc
outsl
mov
fisubrs
cmp
xor
dec
iret
adc
mov
arpl
sub
out
mov
nop
and
lret
push
mov
cli
adc
mov
sahf
dec
jno
jns
leave
push
js
inc
jmp
pushf
mov
and
dec
sti
jge
mov
repz
into
filds
das
aam
sbb
iret
jle
sub
adc
jp
nop
push
xor
mov
and
pusha
test
mov
testb
push
dec
jge
popa
push
sbb
sbb
leave
and
push
push
add
call
mov
gs
stos
fwait
push
sbb
bound
mov
jmp
sub
icebp
fldt
and
xchg
lods
adc
xchg
inc
xor
mov
sub
out
ja
scas
ljmp
add
push
addb
sub
cmp
xor
mov
in
es
mov
rclb
mov
lock
es
push
push
adc
mov
jmp
fcoms
mov
or
sub
loope
or
inc
scas
in
out
cmp
repz
sarb
cmp
ffreep
pusha
jg
js
lret
daa
add
pop
sub
mov
mov
xchg
jae
or
out
pop
fildl
and
insl
pop
push
repnz
lods
and
pop
enter
in
aaa
shrb
add
jae
xchg
fwait
lds
xchg
clc
lods
std
flds
insb
xchg
mov
xchg
mov
jl
inc
and
clc
cld
dec
xchg
mov
or
push
out
pop
cmp
stos
adc
into
lds
xchg
and
mov
push
loop
lret
inc
fmull
or
lds
or
push
sub
lods
xor
and
nop
pop
dec
dec
mov
mov
inc
lds
adc
imul
dec
fs
push
cmp
sub
or
and
popa
outsl
mov
idiv
fcoml
mov
xlat
lea
adc
cmp
lret
sub
int3
sbb
inc
call
xchg
push
sub
mulb
push
sbb
push
int3
or
js
adc
gs
hlt
mov
cmc
and
mov
into
mov
cmp
adc
js
hlt
lahf
std
ret
dec
inc
adc
adc
out
loop
xor
repz
clc
sub
out
inc
lea
sbb
loope
or
or
xor
out
jno
mov
xchg
jmp
divb
loopne
test
mov
call
jns
ror
xor
pop
in
into
repnz
stos
fldt
push
and
pop
xor
fisubl
movsl
mov
ret
cli
or
jp
dec
xchg
mov
je
cmp
dec
int3
cmp
pushf
sbb
sbb
fbld
mov
mov
pushf
mov
adc
addr16
xchg
push
cmp
scas
lret
jge
and
rorl
pop
xlat
sub
jnp
pusha
shll
push
sti
or
stos
fldt
jns
sub
test
mov
mov
xchg
and
hlt
cmp
data16
in
icebp
in
xor
popf
in
into
add
pop
push
imul
pop
mov
push
stos
xor
mov
sbb
fstl
test
xlat
out
cmp
loop
in
ret
test
pop
mov
stos
jb
clc
cmp
cmp
int
mov
adcl
xor
sbb
and
je
push
add
out
movsl
push
dec
loop
test
or
div
shlb
outsb
iret
mov
or
xchg
jl
lods
inc
stc
jne
jg
in
insl
ja
test
fs
add
pushf
jmp
cwtl
or
cmpb
clc
mov
dec
vpshab
ljmp
push
les
imulb
jno
push
mov
rcl
jmp
sub
adc
adc
popf
push
mov
movsb
xchg
adc
in
fucomi
shrd
cld
out
inc
das
rcll
jae
cmpl
mov
pop
mov
fidivl
mov
mov
add
mov
dec
int3
icebp
dec
sub
push
dec
je
mov
cmp
psadbw
jnp
pusha
imul
mov
xchg
outsw
ror
pop
inc
nop
jo
clc
lods
dec
inc
scas
xlat
mov
iret
inc
ds
inc
push
mov
xor
mov
push
cmpsl
rcrb
jp
test
outsb
xchg
dec
sub
adc
leave
cmc
and
imul
das
test
aad
ret
mov
test
push
sbb
sbb
mov
lock
vmread
incb
subb
js
imul
xorb
mov
cmovle
xlat
sahf
inc
adcb
xor
iret
fnstsw
dec
mov
sti
dec
xor
mov
lods
xor
stc
lods
fisubrl
jmp
pop
and
icebp
sub
mov
movsl
mov
rorb
sbb
loope
stos
lods
jecxz
lock
arpl
xchg
stos
push
mov
repz
dec
push
adc
cltd
pop
rcl
jmp
adc
hlt
test
sbb
inc
stc
adc
and
or
subl
sub
jl
int
cmp
mov
aad
inc
push
mov
fisttps
mov
lret
xor
in
dec
loope
popa
push
cmpl
cmpsb
xor
and
aam
addr16
mov
fsubr
or
push
mov
xchg
push
add
mov
dec
jle
inc
mov
and
push
inc
push
sahf
neg
pop
ret
mov
daa
not
push
daa
inc
mov
sbb
out
fwait
add
fmuls
and
andw
inc
xchg
call
lea
sub
popf
and
test
test
leave
pushl
add
lahf
inc
mov
aas
jmp
pop
into
fcomi
ja
xor
fdivrs
xor
test
dec
lcall
add
and
daa
xor
shlb
mov
add
addr16
out
xchg
fwait
in
xchg
xchg
mov
shll
add
sbb
mov
push
push
ret
cmp
into
ljmp
movsl
mov
adc
add
and
andb
xor
out
cmpsl
inc
jmp
sbb
mov
and
inc
pushf
push
pop
popf
pop
pop
shll
aaa
jg
adc
xchg
mov
ja
stos
dec
fbstp
cli
insb
aam
loop
mov
inc
and
jmp
std
cmp
out
dec
out
cmpl
dec
in
mov
or
lods
add
mov
jge
sub
imul
xor
cmpsb
pop
inc
rorb
add
fldcw
or
shrb
jp
inc
sub
mov
je
incb
pop
imul
cmpsb
inc
pop
xor
sbb
or
in
mov
lods
xor
xor
jle
push
cmc
orl
jle
sub
lods
enter
cmp
scas
jno
xor
fnstcw
scas
lods
sub
push
popf
aad
movsl
push
orb
mov
gs
outsb
fmuls
aas
mov
pop
mov
subb
sbb
lock
sahf
jmp
fsubrp
scas
or
shr
pop
lods
xchg
dec
ds
ja
mov
jecxz
stc
cwtl
repnz
outsb
mov
out
aad
enter
sahf
sbb
into
fbstp
or
mov
jmp
mulb
rclb
mov
mov
pop
ret
icebp
sub
mov
mov
aam
ret
data16
loope
or
jp
cmp
in
pop
dec
mov
or
inc
cmp
push
jbe
test
jae
xchg
arpl
or
mov
rorb
adc
xchg
call
mov
out
iret
test
and
mov
xor
pop
insl
and
jns
jle
scas
sub
or
int3
sarb
stc
out
sar
out
shll
insl
xchg
repnz
jp
sbb
les
in
sbb
test
cmpsl
pop
mov
pop
sub
filds
cmp
xchg
gs
push
xorb
dec
shll
jl
mov
cld
leave
iret
push
pop
sub
adc
shlb
mov
fldcw
jp
xor
mov
out
mov
lock
int
jp
mov
jecxz
data16
cmp
inc
pop
xor
inc
pop
loope
sub
movsl
push
xchg
adc
flds
mov
cmp
lods
test
xchg
je
add
xchg
ljmp
sub
jae
pop
add
imul
jp
xchg
cmpsb
pusha
movsb
mov
xor
aam
sub
ss
lods
adc
add
jo
out
nop
sbb
cmc
lret
cld
movsl
outsl
xchg
push
les
ror
stc
stos
jbe
or
xor
dec
ret
and
iret
cmp
lock
mov
fnstsw
in
adc
sub
fiaddl
jmp
and
inc
stc
ss
and
push
pop
aas
test
xchg
or
std
pop
push
repz
mov
push
jmp
sub
pop
inc
in
test
cmpl
sbb
mov
dec
pusha
clc
jecxz
ds
and
pop
jo
repz
dec
mov
mov
mov
aam
daa
in
pop
mov
jle
aam
inc
fsubrl
and
mov
mov
inc
jl
cmp
inc
int
pop
test
mov
sub
jae
mov
pop
inc
fs
js
pop
add
add
mov
inc
mov
cli
xlat
jns
sahf
popa
sub
movsl
aaa
jge
movsb
xor
xor
aaa
pusha
mov
mov
pop
sub
movsl
cmp
jns
subb
push
mov
cli
dec
jb
lret
push
in
sub
gs
jg
out
leave
and
ja
imul
jmp
cmc
and
cmpsb
ds
jmp
pop
pop
sub
mov
aas
jge
inc
push
int
jle
push
pushf
lods
sbb
jl
int3
fisubs
xchg
sbb
inc
test
outsl
fldcw
daa
jmp
sbb
lods
call
sbb
movsb
cmp
cmp
in
cmc
in
aad
pop
repnz
fisubrl
push
jae
decb
out
call
call
add
lret
aas
dec
jmp
push
dec
push
or
xchg
pop
sub
movsb
fwait
lock
jo
or
xchg
ret
mov
pop
pop
es
or
lret
pushf
fldt
rcrb
pop
dec
cmp
xchg
push
js
dec
jge
and
or
sub
ret
aas
or
xchg
push
or
cwtl
pushfw
and
fisttpl
in
mov
fcmovnb
ficoml
pusha
jne
movsb
dec
ss
rclb
xor
push
ficoms
test
ror
sub
push
in
push
jl
mov
fldcw
in
jb
mov
sarb
mov
daa
inc
ret
incb
xor
xchg
pop
adc
mov
jne
lods
fnstcw
sub
out
pop
or
nop
popf
in
pop
je
cmp
rorb
std
lahf
cmp
movsl
jno
and
ret
les
jne
bound
rclb
outsl
pop
jl
cmpsl
adc
and
mov
jg
sbbb
arpl
add
movsb
inc
sbb
insl
xor
daa
clc
mov
adc
rclb
sahf
cmp
inc
add
mov
sbb
push
push
mov
push
pop
jge
lock
mov
lock
cmpsl
js
lock
xor
shrl
xor
cmp
push
inc
sub
insl
cmp
sbb
mov
mov
and
mov
add
test
addl
xchg
and
mov
call
rolb
std
jbe
push
inc
pop
dec
mov
mov
subl
mov
push
inc
imul
movsb
mov
jmp
mov
cltd
aad
aaa
xchg
into
add
lock
stos
inc
test
es
mov
sbb
mov
jp
add
add
xor
int3
aad
inc
sbb
add
adc
pop
cli
sbb
push
dec
pop
sbb
cltd
aas
fisubrl
lea
dec
lea
jo
xorl
scas
int
jl
cld
add
lods
lods
inc
jle
in
jnp
cmpsl
push
out
shlb
dec
andl
aad
adc
xor
mov
mov
inc
pop
hlt
mov
and
aas
rcrl
test
ret
add
stos
push
sbb
cmpsb
ja,pn
lock
push
sub
lahf
clc
repz
popf
and
popf
mov
cmp
and
lods
xor
testl
jbe
jno
xchg
inc
inc
stc
mov
clc
cmpsl
push
adc
loopne
enter
cmp
int
out
imul
or
rcll
or
pop
dec
repnz
and
mov
aam
dec
inc
inc
sub
pop
and
nop
inc
imul
cmp
push
loope
movb
mov
cli
mov
lahf
cltd
mov
and
mov
cld
ljmp
xchg
xor
mov
cld
push
ret
push
repz
add
jecxz
sbb
fisttpll
or
cmpsb
mov
mov
mov
je
xor
jno
insl
cli
fs
rcr
ja
shl
enter
in
lret
js
mov
pop
adc
test
mov
cmp
repnz
fnstcw
out
inc
les
shr
hlt
ja
or
shll
jl
pop
inc
ficomps
sbb
inc
and
cmpsb
xor
ja
aaa
into
ljmp
insb
lea
jle
mov
stc
pusha
fldcw
mov
lods
nop
cwtl
enter
sbbl
lcall
or
mov
into
mov
adc
adcl
jmp
or
mov
or
int
sub
mov
jbe
fisubs
arpl
push
cmc
mov
rdmsr
mov
je
add
sub
insb
add
and
mov
addr16
popa
and
mov
or
cltd
dec
cmpl
xchg
out
lret
pop
loopne
adc
lret
sub
int
in
fimull
adcb
adc
out
push
out
imul
xor
or
je
rorb
jge
dec
jb
sbb
and
dec
mov
cmc
test
and
push
push
xchg
sub
movsb
jge
loop
daa
lahf
sub
shl
pop
xor
cmp
aaa
dec
jle
aas
mov
jp
and
shrl
lds
iret
push
mov
or
repnz
jecxz
jnp
or
pushf
sub
or
aad
enter
push
std
test
xchg
add
dec
stos
push
scas
cwtl
mov
mov
jne
icebp
insl
hlt
pop
inc
lret
pop
xchg
mov
xor
test
mov
ret
xchg
jbe
outsb
je
mov
loopne
sub
inc
jmp
push
push
dec
mov
test
mov
adc
dec
scas
and
lahf
pop
pop
mov
jo
lods
pusha
push
adc
stos
sarb
sbb
mov
out
lahf
fisubs
pop
add
sub
cmp
push
sub
call
pop
sub
xor
ja
push
addl
adc
xchg
notb
gs
xor
xorl
sbb
mov
jg
out
mov
in
inc
mov
loop
sarl
and
jno
mov
je
incl
jbe
xchg
mov
jg
loop
test
cli
push
out
push
dec
incb
imul
in
adc
lods
test
cmc
jno
mov
fidivrl
jns
xchg
xor
int3
jbe
and
cmc
and
jae
psubusw
lret
mov
jmp
mov
movsl
add
scas
popf
movl
lret
lret
sbb
xchg
out
std
mov
push
ret
and
je
dec
adc
push
dec
mov
push
out
jno
add
rcr
jbe
je
jae
idivb
orb
jbe
bound
imul
mov
inc
xor
dec
fwait
lret
jp
icebp
aad
pop
fcompl
popf
cli
outsb
pop
sub
push
push
loope
sub
mov
hlt
and
cmpl
inc
sbbb
xlat
sahf
lods
popa
and
outsb
loope
jmp
push
lds
xchg
dec
movsl
push
xchg
add
imul
xchg
loope
aas
add
lcall
aaa
inc
cmp
fucomip
sti
adc
pop
call
shrb
test
push
mov
jmp
push
imul
add
jne
cmp
cmp
pop
sbb
add
push
pusha
jmp
adc
loop
xor
mov
loope
and
cs
movsb
pop
imul
mov
xor
push
add
dec
cmc
add
sbb
leave
movsb
iret
ja
cmc
mov
es
aas
mov
add
sbb
jb
outsl
jmp
frstor
dec
adc
mov
or
aaa
mov
out
sti
mov
jb
pop
cmp
jecxz
push
cmc
adc
das
int
or
xchg
sbb
hlt
jp
daa
jecxz
cmp
lcall
dec
cmp
ds
js
fldl
mov
pop
ret
lods
scas
cltd
mov
push
out
sbb
lea
test
sub
jb
ss
lock
lea
dec
lahf
out
and
mov
sub
in
mov
sub
ljmp
in
ret
jg
pop
fs
cltd
xor
subl
pop
mov
jl
mov
dec
rorl
bound
pop
pop
sub
mov
jo
jae
adc
dec
dec
adc
mov
or
daa
sub
push
out
fadds
mov
in
adc
pop
pop
pop
insl
lea
addr16
insl
jne
in
