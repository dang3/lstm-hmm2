mov
lods
inc
sarb
xor
push
bound
sub
and
das
xchg
rolb
scas
xchg
ret
inc
adc
cmp
popf
or
lahf
mov
jge
xor
inc
bnd
add
and
loop
movsb
cwtl
pop
mov
insb
out
arpl
xchg
lret
out
inc
xchg
test
fcoml
out
lcall
inc
sub
clc
sar
dec
adc
loop
add
sbb
testb
and
mov
push
pop
push
clc
jbe
mov
mov
inc
jae
mov
faddp
dec
fisubrs
adc
inc
repnz
cmp
xchg
mov
mov
add
jo
out
xchg
mov
ljmp
push
imul
dec
imul
iret
insb
ret
jnp
std
inc
lods
add
shlb
mov
adc
adc
pop
xor
jl
xor
loope
adc
out
lods
xchg
shll
fs
mov
mov
cmp
data16
test
mov
out
stc
dec
lcall
pop
out
sbb
jecxz
into
add
scas
add
jb
jnp
ss
ficompl
jg
mull
movsl
pop
sarb
adc
pop
and
loope
sub
or
pop
ret
mov
mov
rol
pop
js
and
cwtl
mov
fdivrp
push
mov
bound
mov
vpsubb
jne
out
pop
cmp
sub
pop
repz
xchg
inc
std
dec
xor
popf
xchg
xlat
inc
popf
stos
mov
insb
fwait
in
jne
es
jne
pop
int
dec
ja
sub
mov
sub
int
sbb
xchg
in
xor
movsl
in
addr16
sbb
xchg
add
dec
gs
cmp
into
adc
fidivrl
mov
sbb
cld
lret
mov
or
mov
in
insb
sub
inc
sbb
dec
jle
inc
lds
sbb
or
push
or
std
add
push
sbb
sbb
inc
add
xchg
outsb
ja
or
adc
push
inc
fcomps
add
lea
adc
cwtl
jl
in
xchg
sbb
addr16
xchg
or
test
aam
cmp
dec
cwtl
shrl
andl
out
mov
add
xchg
fldl
xchg
add
pusha
xchg
pop
out
fwait
aas
mov
pop
stos
std
cs
pop
xchg
xchg
mov
or
orl
jle
xor
fidivl
in
push
sub
or
aaa
push
xchg
xor
or
sub
mov
movsl
jg
divb
shrb
sub
sbbl
jbe
fadds
or
or
inc
nop
mov
leave
out
xchg
sbbl
shlb
lods
mov
lcall
aaa
mov
fstpl
jns
pop
sbb
dec
mov
dec
pop
pop
pop
subb
loopne
mov
iret
mov
popa
cmc
inc
and
ja
movsl
cmpsb
inc
xorb
cmp
push
pop
inc
add
sbb
addr16
mov
lods
jb
fsubrl
insl
dec
sub
cmp
cmp
push
mov
mov
cmc
push
cmc
cmp
mov
mov
cmc
aam
xchg
add
cmc
test
std
or
sub
ja
mov
imul
mov
loopne
add
int
stc
cmpsl
vpsubsw
xchg
push
fwait
sub
jb
bound
push
mov
hlt
jecxz
wrmsr
jns
scas
adc
not
adc
cmc
sbb
lea
rep
js
aad
push
sahf
scas
out
in
jne
push
rorl
add
lcall
cltd
jns
jae
add
dec
pop
dec
aad
orl
sub
ret
in
psllq
pop
shr
xor
push
fsubrl
xor
outsb
xchg
jmp
cmp
icebp
orb
rcrl
repz
mov
hlt
sbb
and
pop
icebp
test
decl
in
mov
fucomp
js
pusha
cmp
outsl
mov
aad
iret
mov
mov
add
xchg
cmpsl
mov
dec
stc
pop
inc
cmpsb
jmp
test
divb
jns
dec
out
mov
ja
or
or
cmpsl
push
push
lock
pop
notb
mov
cmp
or
sub
dec
inc
out
cmp
jecxz
mov
scas
and
mov
lods
int
dec
jle
jmp
repz
inc
dec
or
pop
cmp
cmp
inc
stc
sub
aas
mov
cmpsl
mov
mov
push
sbb
mov
fsubrs
in
stc
out
inc
xchg
jge
loopne
xchg
or
push
notl
outsb
test
adc
mov
mov
adc
das
push
push
mov
dec
or
push
dec
nop
jb
jb
xchg
jno
fimuls
jmp
ret
pop
int3
xor
jp
in
sub
inc
cmp
cmpsl
cmp
clc
push
repz
iret
xchg
adcb
ret
or
cli
and
or
mov
cmp
push
loop
sbb
push
orl
inc
fstpl
push
ret
push
dec
adc
in
mov
mov
inc
xchg
pop
cmc
sbb
ficoms
fistps
iret
test
push
lods
jp
in
xor
mov
test
push
popa
pop
mov
test
pushf
jmp
pop
ljmp
add
lea
stc
xor
mov
fdivrp
pop
mov
dec
clc
int
data16
mov
push
mov
lret
cwtl
jne
cmp
inc
jne
adcl
xchg
sub
jmp
xor
push
fldenv
mov
push
inc
and
xor
jmp
das
gs
std
jle
std
push
fst
lds
ja
test
add
cmp
clc
fstpl
mov
inc
push
sahf
cmp
leave
add
div
jbe
xor
stc
int
inc
jno
lcall
inc
sbb
aad
push
sub
push
cmp
test
mov
insl
mov
in
adc
mov
xchg
inc
aaa
dec
and
lahf
mov
out
adc
test
jmp
sub
inc
inc
xor
pop
push
xor
mov
jbe
push
test
inc
popf
leave
pop
sbb
cmp
pushf
push
dec
or
pop
xor
xchg
int
pop
mov
mov
xchg
mov
xor
pop
cmpsl
xchg
mov
movsl
shll
dec
jmp
push
and
adc
jne
imul
orl
int3
sub
mov
jmp
adc
test
jge
xor
ja
cwtl
hlt
mov
fsubr
add
and
sbb
es
pusha
jl
test
add
arpl
or
scas
cmc
mov
out
imul
test
and
add
xchg
scas
lock
insb
data16
into
add
cmp
xor
mov
es
and
inc
lods
popf
xor
push
mov
inc
dec
and
enter
mov
repz
push
push
mov
in
hlt
mov
test
cmc
stos
fldl
int
lret
pusha
testb
imul
pop
pop
loop
test
out
inc
sahf
mov
aas
fcmovnb
and
notb
xchg
adc
cmp
popa
xchg
das
into
pop
pop
and
xchg
leave
mul
mov
inc
lcall
insl
lret
push
pop
mov
mov
fwait
mov
push
fisubs
pop
mov
inc
rorb
dec
nop
fwait
mov
jge
add
bound
gs
les
out
test
jbe
xor
dec
mov
push
gs
or
testl
and
leave
les
orl
dec
lcall
in
inc
hlt
sub
shll
inc
xlat
js
and
out
insl
stos
rcrl
testl
sbb
mov
add
jnp
mov
xchg
in
sbb
pusha
or
xchg
mov
adc
lea
es
add
mov
out
push
test
mov
lds
adc
add
push
bnd
les
popa
adc
mov
fcompl
add
lret
call
jns
jno
sub
mov
andb
jmp
mov
and
movq
push
aad
roll
or
mov
fwait
xor
jb
jne
push
or
mov
pop
sub
setns
add
int
test
xchg
shlb
sbb
push
sbb
shrl
xor
lods
out
add
test
enter
sti
lock
je
push
mov
cmpl
arpl
movsb
xor
in
aam
fldt
dec
insb
arpl
ja
js
hlt
fs
dec
push
cmp
enter
pop
jne
pop
gs
imul
icebp
xor
ud0
or
mov
sub
or
lret
jle
cltd
cli
xor
cmc
push
xchg
insb
inc
scas
or
aam
inc
xor
pop
scas
add
inc
cwtl
cld
sub
cld
cmc
scas
xchg
push
xchg
jp
xchg
mov
mov
cmc
mov
movsb
outsl
dec
js
lock
xor
and
mull
fwait
in
imul
repz
mov
cmp
mov
or
add
and
ljmp
push
enter
mov
sbb
faddp
and
pop
sub
push
lock
test
cmp
xchg
imul
into
loope
fsts
cmp
cmp
push
insb
fidivs
nop
mov
inc
daa
sbb
stc
mov
xor
mov
daa
cld
adc
pop
icebp
push
enter
xor
repz
xchg
push
pop
dec
into
push
xchg
xchg
incl
test
xchg
xchg
test
inc
movsb
jnp
and
lsl
pop
mov
fwait
shrb
pop
icebp
fdivrs
mov
pop
mov
jno
jo
dec
rcrb
mov
add
jecxz
or
push
dec
ljmp
mov
push
popa
mov
pop
rol
movl
xchg
lcall
inc
push
jbe
dec
clc
inc
addr16
inc
pushf
jmp
and
jne
push
jmp
or
repnz
push
sti
loop
mov
scas
sub
push
jb
fidivs
cmpsl
xchg
or
adc
inc
mov
mov
pusha
cwtl
cld
cmpsb
outsl
dec
shll
mov
fiaddl
sti
test
mov
cmp
add
sbb
inc
lods
mov
idivb
ret
sbb
jo
sbb
cs
cld
xchg
pop
jge
in
lret
pop
and
add
mov
scas
fidivrl
jne
and
lods
loope
or
push
out
pushf
sbb
into
imul
dec
sbb
out
cli
rcll
mov
aas
les
test
mov
lds
gs
out
xchg
clc
in
xchg
or
pop
mov
inc
in
or
subb
idivl
mov
xlat
jmp
bnd
mov
insb
cmpsl
cmp
push
adcb
and
cmp
lret
cli
sub
adc
inc
mov
subb
stos
and
mov
jmp
mov
dec
or
add
mov
int
mov
fdivs
pop
or
lds
test
cmpsb
insb
lret
fidivs
cld
mov
sbb
jg
imul
inc
mov
mov
inc
ficoml
push
test
adc
or
pop
stos
or
mov
and
jb
out
cmp
and
test
cld
fstps
fisubl
es
mov
out
or
sbb
stos
push
fucomip
jne
xor
dec
pop
mov
sbb
push
popa
mov
in
addr16
mov
xor
mov
pop
jp
addb
jle
and
jbe
imul
fdivrl
movl
cmpsb
xor
dec
dec
hlt
xor
movsb
fsubr
lock
mov
mov
cmp
pop
sub
les
inc
pop
push
sbb
or
aad
cmp
test
xchg
xlat
jp
mov
je
jecxz
and
popa
jb
les
cs
and
shlb
stc
push
xor
and
xlat
lcall
jl
lahf
cmp
jne
lods
or
jge
ds
movsb
sub
push
sbb
inc
add
add
pusha
std
ljmp
jecxz
mov
adc
xchg
je
sarb
ret
cmp
repz
andb
sbb
xchg
or
sbb
mov
push
pop
test
mov
jae
pop
dec
xchg
xor
jmp
xor
ja
inc
and
push
mov
pushf
jecxz
adc
mov
fwait
adc
ss
xchg
outsl
jg
jg
movsl
mov
aaa
or
adc
gs
adc
mov
mov
sahf
in
loopne
cmpsl
out
mov
pop
shlb
jns
pop
ds
jle
popa
iret
or
sarb
sub
lods
sahf
popa
pop
xor
or
cmc
dec
rcll
aas
cmc
lods
pusha
fisttpll
and
pop
sbb
mov
scas
fs
icebp
and
add
ret
scas
es
adc
shl
repz
dec
imul
pop
xlat
and
adc
bound
mov
push
lret
cmpsl
mov
or
repz
inc
mov
mov
mov
scas
fisubrs
jno
and
insl
daa
mov
pcmpeqd
fists
incl
test
pop
popf
aad
and
mov
inc
iret
mov
std
mov
iret
xchg
repz
ja
cmp
jecxz
or
jb
pop
stos
jbe
mov
je
notb
adc
jl
test
fsubl
stos
fdivs
pop
sbb
jnp
inc
adc
or
or
pop
add
dec
daa
sbb
cwtl
jns
jnp
pop
pushf
mov
aas
lret
sbb
cmpsb
xorb
insb
xor
lret
mov
cltd
pop
fnstenv
mov
mov
sub
sbb
jne
and
ss
or
out
shlb
and
pop
push
dec
cmp
out
je
push
rcll
sbb
and
roll
rcll
jae
cmpsb
sbb
push
ret
mov
dec
mov
push
pop
push
jae
add
stc
mov
xchg
adc
sbb
stos
cli
and
icebp
add
shlb
sub
mov
subl
sub
in
push
xor
mov
gs
outsb
mov
pop
xor
push
fnstsw
xchg
popf
sub
stc
outsl
push
dec
xchg
testb
fisubrs
add
add
jl
xlat
jb
std
lahf
fadds
mov
addb
sbb
aam
stc
dec
or
insb
testb
mov
cmpsb
sbb
outsl
or
jb
popf
shlb
je
fwait
sub
jge
ja
lods
inc
push
test
ss
sbb
in
mov
js
push
adc
xchg
add
pop
mov
inc
test
xor
inc
dec
sbb
sbb
jbe
movd
mov
mov
icebp
or
mov
push
stos
gs
mov
cmpsb
mov
inc
int
popa
repz
repz
inc
hlt
aas
icebp
jo
jns
cmp
mov
cmp
pop
fwait
mov
xchg
xchg
int3
cltd
mov
jae
shrb
cmp
adc
jb
lret
adc
add
mov
xor
xchg
js
push
popf
jne
mov
cwtl
sub
xor
cltd
outsl
imulb
es
jnp
inc
pop
fwait
xchg
pop
dec
push
mov
test
push
jecxz
pop
jns
pop
or
mov
outsb
or
or
pop
pop
mov
mov
xchg
inc
jg
jg
enter
dec
movsb
aad
mov
dec
bound
nop
aam
pop
push
mov
adc
add
adc
xorl
dec
jno
into
mov
test
hlt
daa
loope
hlt
pop
imul
push
loopne
addb
sub
lret
xchg
test
ljmp
mov
inc
pusha
xchg
inc
rcl
add
test
aas
jbe
cwtl
pop
xor
sub
push
pop
xor
mov
stc
push
in
imul
hlt
pushf
pop
int
or
sahf
shrl
pop
stc
ret
cmpsl
cs
push
mov
jmp
cmp
in
xchg
inc
cmpsl
insl
jge
xor
frstor
pop
push
aaa
inc
sub
inc
add
cmc
mov
ret
aas
decb
or
add
insb
xchg
ret
inc
sub
sahf
sbb
fsubl
mov
sub
sti
pop
cmpsb
xchg
fldcw
loop
sbb
jge
int3
aad
pop
xor
ret
add
pop
outsb
dec
push
jl
es
add
aas
pop
loop
xchg
pop
jno
or
stos
add
movsb
into
or
xor
or
inc
or
movsl
icebp
pop
push
xor
ficoml
mov
pusha
iret
lcall
add
xor
push
and
adc
test
pop
cs
mull
lea
mov
sarb
fdivrs
sub
and
jle
int3
std
ljmp
adc
std
inc
xchg
pushf
lret
mov
arpl
xchg
dec
test
and
nop
mov
sti
cmp
jge
popf
je
ja
sar
inc
in
stos
test
gs
jne
fwait
nop
and
pop
fcmovne
sub
into
push
nop
jb
insb
push
mov
jecxz
pop
jmp
jl
sub
jno
xchg
sub
lahf
sbb
or
mov
aas
jle
dec
or
or
and
pop
xor
mov
and
and
and
jbe
sub
xchg
outsb
add
or
push
jl
mulb
stos
pop
mov
inc
xchg
ja
mov
mov
scas
jb
ret
xor
cltd
lods
lret
hlt
pop
sarl
andb
cmp
sub
lret
adc
mov
push
fidivs
jmp
int3
cmp
inc
movsl
stos
adc
xchg
into
outsb
cmpsl
xor
xchg
lock
cld
pop
in
jo
and
or
mov
lret
mul
pop
xor
int3
enter
dec
test
push
test
repnz
aam
dec
ds
nop
mov
arpl
fldenv
lods
ja
dec
xor
dec
xchg
mov
or
ss
shlb
pop
pushf
dec
xor
lret
sbb
cs
fisttpll
and
cmp
mov
mov
adcl
cmpl
inc
sub
lahf
jge
imul
xor
push
aas
cs
or
pop
movsl
mov
jg
je
mov
hlt
adc
adcb
push
mov
xchg
add
test
xchg
sbb
sub
xor
psraw
lret
fiadds
shrl
rcl
adc
into
decb
push
test
sbb
mov
xchg
dec
sbb
mov
js
lret
mov
xor
and
jae
dec
pushf
xchg
sbb
or
ja
das
popf
stos
inc
inc
std
dec
pushf
xchg
jmp
pop
mov
lds
cltd
lods
cmp
xchg
ret
gs
mov
mov
and
stos
mov
adcb
add
shll
bound
pop
sahf
pop
adc
cmp
and
jp
mov
mov
testl
data16
mov
add
mov
mov
inc
cmc
cmp
cmpsb
jmp
dec
sarl
push
cmc
scas
sahf
xorl
inc
adc
jns
cli
rorl
iret
popa
xor
cmove
lcall
push
add
or
mov
cmpsl
fldt
pop
outsl
into
dec
shlb
sub
xchg
or
shl
pop
cmp
sbbl
fwait
inc
mov
int
sti
rcrb
dec
cs
adc
fcompl
icebp
add
jmp
daa
jg,pt
bound
vsqrtpd
imul
dec
ret
mov
loop
lods
xor
iret
leave
aaa
sub
jo
sub
mov
movsb
jno
sub
sub
imul
lds
mov
outsl
push
push
jnp
adc
lods
or
pop
cmp
mov
test
xchg
sbb
mov
into
and
les
mov
mov
xchg
insl
aad
inc
cmpsl
fistl
xor
push
inc
loope
pop
sub
inc
mov
and
les
cmpsb
adc
pop
icebp
mov
push
dec
pop
jae
mov
call
xor
arpl
mov
fiadds
add
dec
popf
jle
pop
cli
cld
mul
mov
push
leave
inc
push
imul
inc
pop
sub
dec
push
lsl
repz
pushf
imul
adc
mov
xchg
lea
xchg
dec
jg
xchg
repnz
and
or
and
push
fcmovbe
mov
jno
scas
fcmovnb
dec
lods
out
mov
stos
imul
insl
mov
sarb
insl
cmc
cmp
repz
push
and
jmp
in
mov
and
sti
pop
sti
push
mov
punpckhbw
push
adc
sub
pop
movsb
cmp
sbb
test
in
xchg
out
cwtl
sbbl
cmc
into
ljmp
and
mov
andl
and
dec
mov
mov
lret
scas
push
mov
xchg
sbbb
cmp
imull
rcrb
dec
sub
add
and
rep
imul
scas
pop
andl
mov
ljmp
pop
push
in
leave
push
mov
push
push
sub
pop
repz
std
lret
pushf
test
dec
inc
inc
ret
cmpl
sub
popf
imul
xor
pop
leave
pop
jo,pt
popf
hlt
das
outsb
adc
test
xor
and
mov
jo
imull
pop
xchg
aad
adc
pop
sub
add
cld
rcll
cltd
push
movb
mov
scas
repz
mov
sbb
cmp
fcomps
add
mov
xchg
sbb
nop
clc
ret
pop
das
out
mov
cltd
dec
sbb
subb
movsb
repnz
mov
adc
mov
pop
shlb
cmp
lds
stos
ljmp
or
imul
jbe
mov
mov
mov
xorl
cli
jge
dec
aaa
aaa
mov
outsl
add
jno
rcrb
scas
dec
in
sbb
xchg
iret
jp
loop
mov
rorl
xchg
stc
mov
mov
mov
cmpsl
adc
incl
mov
fildl
in
bound
outsl
jl
push
pop
pop
pop
push
add
lahf
test
sbb
add
loop
jle
leave
or
bound
mov
push
pop
jmp
stos
jg
sbb
sub
mov
and
scas
add
bound
movl
push
jecxz
out
ds
fs
cld
dec
enter
and
inc
out
jnp
ficoml
rcrl
pusha
outsb
adc
add
mov
pop
or
mov
aad
cmpsl
imulb
imul
icebp
xor
inc
or
sub
push
fwait
aam
outsl
push
push
pop
into
ss
rsqrtps
out
mov
js
sub
gs
mov
fdivrs
pop
imull
jne
movsb
pushf
lahf
add
dec
push
popf
cmp
sbb
enter
jle
dec
daa
xchg
loop
mov
std
inc
or
and
sbb
xor
jns
add
sbb
mov
and
or
orb
and
xor
xchg
bnd
fistl
pop
dec
push
sub
mov
cmpsl
in
mov
call
and
jl
xlat
or
pop
jns
push
rolb
inc
sub
pop
xor
sub
or
cmc
cmp
add
test
mov
mov
and
roll
sub
repz
push
gs
shll
jae
add
sbb
call
mov
into
mov
push
inc
and
inc
clc
cmpsl
jle
out
testb
rolb
fistpll
push
sub
scas
dec
xchg
loope
sub
cmpsl
cmpsb
mov
add
les
fcoml
jp
imul
adc
pop
int3
idivb
push
sti
mov
add
ja
dec
mov
pop
test
mov
nop
ret
push
adc
or
dec
add
push
sbb
add
cld
loop
out
cli
stc
leave
lcall
xor
sbb
ljmp
test
test
mov
add
in
andl
shrl
cli
fwait
inc
adc
pop
imul
inc
ljmp
cmp
popa
int
aam
xor
sbb
and
bound
scas
lods
ret
clc
inc
out
out
or
add
repz
pop
arpl
cmpsb
push
fidivrl
out
dec
dec
mov
notl
mov
test
xchg
lds
mov
jne
rcrl
jne
push
sarl
pop
cmp
add
or
xor
das
xor
ds
and
ret
fstpl
cmc
dec
sbbl
sbb
cmp
jmp
fucom
je
adc
in
pop
in
push
lods
cwtl
xor
mov
pusha
mov
mov
gs
or
sbb
and
inc
pop
push
mov
fiadds
mov
sahf
shlb
mov
sbb
pop
testb
xchg
mulb
movsl
data16
fisttpl
cld
jl
mov
push
push
push
jge
bound
dec
jmp
lds
mov
mull
xor
sbb
cmp
jecxz
inc
push
fcompl
mov
pop
mov
iret
psraw
out
jne
ljmp
mov
inc
mov
imul
mov
insb
cmpb
ljmp
add
dec
mov
int
fstpl
dec
push
adc
mov
jl
cmpl
les
stos
sbb
lods
xchg
lahf
fwait
xacquire
cld
push
dec
clc
or
cmpsb
ds
data16
mov
mov
mov
cmpsb
and
jp
jnp
rcll
cmpsb
sahf
sbb
add
outsb
bound
daa
sbb
in
push
mov
xor
sbb
in
mov
js
fnstcw
pop
adc
inc
stc
add
dec
or
lods
sbb
mov
and
cmp
mull
and
ret
mov
pop
ja
mov
lret
cltd
insb
and
pop
mov
cmc
fstpl
cmp
sbb
imul
pop
xchg
fistps
add
sub
mov
jl
rcrl
jae
mov
add
xor
clc
ja
inc
std
adc
ret
mov
lahf
xchg
gs
cmp
add
push
pushf
sub
sub
mov
push
dec
jp
lcall
pusha
test
not
sti
idiv
test
fists
mov
cs
sbb
inc
jle
cmp
in
hlt
je
adc
xor
adc
lea
mov
jge
sbb
push
cwtl
jae
les
add
push
pop
es
popa
xor
xchg
push
stos
sub
das
fwait
inc
inc
lock
adc
and
mov
or
outsl
push
dec
stos
leave
xlat
fwait
les
pop
shr
and
imul
cmp
loopne
cmp
nop
sarl
mov
out
pop
mov
pusha
movsb
jmp
lods
lret
xlat
jmp
fdiv
jmp
jne
in
ss
dec
cmp
xorl
fs
add
push
shrb
sbb
mov
pop
lods
test
int3
mov
sbb
das
out
mov
xchg
lret
mov
repnz
cmp
pop
pushf
lods
or
in
and
mov
in
cli
hlt
sbb
adc
pop
mov
lock
pop
cs
xlat
rclb
out
xchg
lahf
cmp
cmp
shl
mov
push
iret
cmp
push
stc
jle
popf
fwait
jmp
push
cltd
int
cmc
push
test
stos
jae
stos
dec
mov
test
adc
jg
and
arpl
sbb
in
mov
mov
into
push
in
dec
imul
inc
repz
mov
aas
imull
cli
mov
fisubrs
or
fwait
test
cmp
out
and
xchg
cmp
cmp
pop
cmp
sbb
faddl
in
outsb
push
push
xorb
sbb
mov
cmpsl
ljmp
and
push
sub
repnz
sti
dec
sub
xchg
cmp
cmpsl
push
faddp
dec
pushf
loope
std
loopne
clc
mov
add
fwait
out
mov
add
dec
incl
push
outsb
pop
ror
jae
cmp
fdivs
movsb
jle
dec
nop
jmp
xchg
and
adc
fadd
mov
mov
jmp
icebp
pop
dec
adc
roll
inc
mov
inc
loop
dec
frstor
jne
inc
fcmovbe
int3
outsl
xor
xor
pop
dec
cmp
lods
or
sbb
inc
movsl
lods
sub
aam
pop
sbb
bound
fnstenv
mov
daa
fs
nop
or
mov
xchg
mov
iret
int
cmpl
mov
bnd
push
sub
stc
fwait
jge
insb
push
push
sbb
cltd
stos
ret
lods
mov
dec
int
jbe
jno
mov
int3
sbb
lods
subl
lcall
push
aad
fstpl
lcall
ret
bswap
jl
clc
int
adc
sbb
or
jmp
add
mov
adc
adc
cmpsb
jg
jae
repz
sub
jo
push
lahf
pop
inc
iret
aam
mov
in
jg
mov
pop
popf
daa
data16
ss
xor
jo
xchg
or
inc
in
cmp
pop
jmp
xor
insb
cmp
xor
mov
and
add
or
jp
out
xor
aas
mov
icebp
fadd
add
outsl
test
jbe
pop
inc
add
cltd
fstpt
addr16
cmp
aaa
mov
test
not
or
rclb
in
cli
scas
mov
sub
sub
fstps
add
nop
or
js
cs
and
or
imul
hlt
sarl
pushf
bound
jle
and
mov
stc
movsb
into
mov
fisubl
add
inc
into
xchg
mov
popf
adc
add
das
jg
das
jne
notb
cmp
mov
xorb
xchg
stc
jne
aam
std
outsb
ret
out
push
bound
add
cmp
setns
je
sbb
mov
jle
push
push
nop
and
push
adc
mov
ja
lret
dec
jae
xchg
sbbb
cwtl
cmp
fs
push
mov
mov
push
cmp
mov
popf
xchg
xchg
jno
fcomps
cld
cwtl
lods
jp
jbe
es
push
jmp
mov
int3
mov
addl
push
mov
call
notb
fisubrl
and
pop
and
mov
jg
xchg
pusha
mul
and
shll
ds
shlb
mov
mov
insb
imul
pushf
jmp
hlt
gs
out
dec
sub
out
sbb
ljmp
out
or
adc
out
popf
bound
ds
cwtl
sti
cmp
and
push
mov
jo
xchg
push
fmuls
xor
je
xorb
imul
out
sbb
arpl
aaa
and
icebp
cwtl
push
imul
pushf
scas
jbe
mov
push
stc
scas
dec
jns
sbb
pop
mov
sub
inc
sub
ret
xchg
pop
mov
ret
jecxz
sbb
adc
xor
std
ja
cmc
testl
dec
sub
push
pusha
xor
mov
and
jbe
mov
add
add
add
in
fsubr
dec
andl
sbb
mov
and
in
fs
adcb
jp
cld
mov
lcall
xlat
dec
mov
aad
pop
ja
xchg
pop
pusha
dec
pushf
movsl
lds
mov
push
push
lret
rcrl
cmpsl
enter
lret
push
ljmp
cmp
call
dec
cmp
lea
pop
shrb
cmp
aam
je
pop
outsl
or
dec
jmp
push
jl
icebp
test
dec
frstor
sbb
movsl
out
xchg
inc
cmpb
cld
mov
mov
dec
roll
jp
lcall
cmp
pop
jnp
jb
loop
pop
rcrb
mov
sahf
dec
and
xchg
and
mov
mov
and
icebp
mov
cs
or
popa
mov
sbb
sub
push
repnz
xor
sbb
jp
pop
stos
dec
dec
sahf
call
lcall
xchg
stos
xor
sub
hlt
xchg
xlat
pop
inc
fisttps
push
cmpsl
addr16
mov
loop
into
sub
pushf
addb
push
test
and
inc
es
push
movsl
faddl
mov
rolb
stos
pop
mov
push
popf
addl
mov
push
pop
and
jae
xchg
dec
arpl
movsb
clc
popa
fisubrs
mov
test
bound
pop
out
popf
stos
insl
in
sub
fwait
int3
cmpsl
sub
push
jge
lds
pop
cwtl
testl
inc
push
ds
jge
bswap
pop
jb
in
mov
leave
sbb
inc
and
dec
mov
imull
cli
pop
cli
cli
lock
push
mov
dec
ret
out
in
push
jne
cmp
jl
ret
dec
jae
sbb
xlat
push
pop
or
aas
ljmp
sbb
or
push
push
jle
hlt
movsb
out
fcmovnbe
cmp
jg
fcomi
mov
jns
pop
xor
sbb
inc
xchg
int
or
mov
dec
push
push
mov
fstps
sub
and
movsl
adc
or
add
aaa
outsl
fldt
pop
cmp
adc
lret
sub
pop
xor
and
lret
cld
jnp
shlb
jne
inc
scas
pop
stc
roll
jb
mov
xor
mov
dec
test
mov
push
inc
add
sub
mov
pushf
stos
addr16
xor
inc
adc
loop
lret
cld
fimuls
pop
andb
shrb
fmull
es
push
out
test
ret
and
mov
mov
cmp
or
into
repz
out
outsb
std
in
iret
xor
ret
mov
dec
cmpsl
inc
sub
data16
shll
cmpsb
mov
xchg
or
cmp
sbb
sbb
stos
insl
into
sbb
jp
xchg
jg
int
sub
fldl
jae
sbb
call
call
pop
movsl
ret
mov
mul
fcompl
jb
xchg
jmp
aad
sub
mov
add
bound
inc
imul
imul
mov
sbb
xchg
outsl
sub
mov
mov
mov
mov
daa
icebp
test
hlt
dec
push
mov
daa
mov
jnp
or
int3
jmp
jno
xchg
mov
fstp
fnsetpm(287
jnp
movsb
xor
loope
scas
adc
push
clc
mov
mov
push
nop
mov
rcr
fisubl
ds
pop
cwtl
movups
pusha
sub
xor
mov
les
orl
inc
pusha
rorb
addr16
pop
lods
pop
aas
xorl
mov
adc
add
mov
fistps
rcll
in
ja
pop
cmp
xchg
pop
sub
jge
add
movsl
out
mov
sbb
dec
pop
lcall
push
jg
sbbb
push
aaa
fwait
xchg
adc
cmp
scas
xor
jb
push
dec
push
dec
or
fwait
mov
dec
sahf
mov
mov
or
or
adc
jecxz
popf
push
push
xor
lods
xchg
stc
imul
add
pop
testb
cmpsl
das
push
fmuls
mov
fs
and
lret
dec
and
popa
xchg
jp
push
xchg
and
inc
lds
and
inc
popf
add
nop
enter
fcomps
cmp
pop
jo
je
test
scas
aam
insb
mov
xchg
inc
push
popa
in
imul
pop
mov
insl
inc
xchg
xchg
lea
jecxz
sbbl
push
mov
pop
or
and
insl
xchg
fwait
icebp
aad
mov
dec
push
and
je
and
jae
mov
jnp
in
inc
inc
push
dec
xor
imul
jl
aas
or
xchg
mov
push
fwait
sarl
and
jp
mov
mov
sub
aaa
mov
mov
sarl
out
pop
stos
stc
out
aad
sahf
push
push
lea
inc
shlb
jmp
xchg
out
jg
sbb
fisttpll
adc
arpl
outsl
popa
push
or
lods
pop
push
xchg
inc
sti
imull
cli
es
push
addr16
movsl
pop
in
mov
dec
outsb
in
adc
dec
dec
mov
or
pop
sbb
sbb
insl
stos
sub
and
aas
adc
sbb
arpl
dec
int
fisubrl
mov
jnp
xchg
cmpsb
push
xor
dec
loope
std
push
and
loope
push
jo
mov
mov
or
in
inc
xor
mov
pop
imul
adc
pop
iret
test
cmc
or
pop
pop
and
stos
mov
ljmp
cmpsb
jmp
ljmp
pop
mov
pop
jnp
adc
js
lock
cmp
xchg
scas
aam
add
cmp
mov
cmpsb
mov
fistl
les
pop
jne
add
clc
dec
cmp
and
jb
mov
or
test
adc
and
push
lea
or
arpl
call
ss
insb
out
cltd
or
iret
repnz
push
push
mov
sbb
sbb
or
sub
cmpsb
dec
sub
add
stos
inc
sbb
and
pop
mov
fidivrs
sub
cmp
je
dec
rolb
jno
mov
dec
cltd
cmpsl
pop
fnstsw
and
mov
push
scas
dec
add
nop
fisttps
dec
mov
dec
shll
ds
leave
addr16
in
xchg
lahf
clc
xchg
lret
inc
stos
pop
shll
aaa
push
push
or
sbb
icebp
dec
sub
cltd
in
lds
mov
inc
and
out
mov
scas
add
rcr
mov
push
repz
add
and
ds
xor
stos
clc
aam
fldl
sti
jno
shlb
add
xchg
imul
lock
xchg
add
adc
dec
imul
js
outsb
cmp
push
fnsave
mov
mov
jp
mov
or
mov
sub
in
xor
adc
addl
repz
outsl
in
fnsave
stc
lret
lods
push
test
xchg
add
shrl
outsb
cmp
mov
out
pushf
lahf
cmp
icebp
lret
sub
dec
jecxz
xor
mov
pop
inc
test
fadd
test
dec
xchg
aaa
sbb
leave
sbb
sbb
cmp
cvtps2pi
in
add
inc
push
and
mov
hlt
xor
push
push
imul
push
fwait
out
mov
rclb
mov
push
cmp
es
mov
jo
pop
mov
xchg
or
sbb
jl
pusha
inc
loop
cmp
lahf
fnstsw
incl
adc
mov
cmp
sbb
clc
add
shll
mov
xor
cltd
loopne
cwtl
sahf
push
cmpsb
daa
test
pop
add
sub
sbb
fcmove
adc
sbb
bound
enter
push
pop
and
sahf
or
xchg
cmp
pop
sahf
dec
mull
jg
inc
mov
test
sub
inc
rclb
scas
repz
or
jge
in
jb
mov
sub
adc
sub
stos
push
inc
sbb
cmpsb
adc
aam
jns
jb
imul
in
inc
stos
or
jno
jecxz
cmp
enter
dec
xchg
ja
mov
xlat
outsb
cmp
jge
cmovae
lods
iret
in
jb
mov
das
pop
int
imul
les
bound
imul
lock
jle
leave
adc
mov
dec
lret
cs
xlat
out
jne
mov
movsb
push
cmp
sub
or
mov
cmp
fisubrl
stos
and
sarb
and
cmp
or
jle
rorl
pop
pop
jnp
out
or
int3
push
push
fcoml
jmp
std
xchg
loop
add
adc
xor
mov
lret
lcall
mov
das
xor
roll
iret
mov
aas
xor
pop
pop
hlt
cwtl
pop
sbb
cs
andb
ror
xchg
mov
fprem1
jge
addl
cli
or
addr16
arpl
rorl
pop
fcoml
pushf
dec
sub
adcb
cmp
cld
and
movsl
inc
push
push
cmp
xchg
jle
enter
loopne
pop
sbb
push
push
in
rolb
sahf
stos
lock
mov
add
js
adc
jle
iret
sub
movsl
and
add
pop
loopne
xchg
inc
dec
nop
push
outsl
push
jle
add
mov
and
inc
jnp
mov
pop
xchg
addr16
arpl
out
stc
iret
gs
jl
mov
jl
xor
mov
inc
mov
loope
xchg
or
adc
or
cmc
loope
xor
test
jae
adc
or
into
mov
outsb
xchg
outsl
mov
mov
mov
mov
cmp
test
loopne
adc
or
ret
fildl
jge
pop
ret
inc
insl
lahf
les
mov
fldenv
popa
pop
repz
push
mov
andl
xchg
jns
mov
stos
inc
shrb
lahf
shll
int
mov
jns
leave
popf
pop
and
mov
dec
mov
rcr
leave
xchg
in
xchg
test
repz
inc
mov
out
loope
push
add
pop
mov
mov
mov
sbb
and
dec
cld
arpl
mov
inc
xchg
mov
imulb
bound
pop
push
pop
imul
clc
cmovo
push
loope
iret
mov
push
call
int
shlb
xchg
pusha
adc
addr16
inc
mov
jb
mov
aam
cmp
jns
mov
icebp
mov
xor
or
mov
dec
jmp
gs
and
sub
ret
and
lcall
dec
insb
pop
int3
andl
xor
iret
push
mov
bound
sub
loope
jnp
imul
mov
out
mov
add
jnp
iret
jae
enter
dec
lret
add
cmp
sub
mov
jle
cmc
mov
clc
xor
rclb
daa
and
lcall
ljmp
fcoml
inc
push
xchg
jp
cmp
lret
sti
imul
and
xor
repz
sub
cmp
add
mov
jle
sbbl
xlat
cltd
jg
in
mov
inc
mov
int3
inc
sub
jo
in
sub
iret
push
pop
xor
inc
push
cmpsb
sub
push
jno
loop
test
lds
negl
cmp
cld
fstps
mov
xor
lds
sbb
pop
add
and
aam
xorl
or
popa
push
insb
ds
adc
xchg
mov
fdivs
jne
xchg
add
xchg
mov
mov
xchg
mov
sbb
out
gs
fldt
hlt
adc
jb
shll
in
pop
popa
stos
push
push
pop
and
ret
push
sub
push
popa
fists
xor
xor
jp
push
leave
xorb
mov
add
call
std
push
sbb
jmp
and
shll
mov
adc
stc
mov
push
test
mov
or
rclb
stc
xchg
out
fimuls
clc
stc
stc
aaa
movsb
cli
xlat
lds
push
daa
xchg
or
mov
sti
dec
mov
test
and
xchg
sub
adc
mov
sbb
pop
sbb
je
int3
aas
fs
pop
jge
int
xchg
icebp
hlt
mov
xor
pop
cmc
jnp
cmp
dec
xor
mov
hlt
dec
mov
dec
mov
fsubp
addl
outsb
dec
pop
push
mov
lods
mov
leave
adc
lock
mov
add
test
ret
push
pminub
daa
xor
fisubl
and
movsl
lods
adc
mov
fisttps
sbb
or
loop
mov
decb
push
insb
fidivl
pop
popa
call
push
mov
xchg
nop
shlb
sbb
test
or
inc
mov
ljmp
lds
mov
or
imul
push
mov
shr
int
or
lods
jo
jnp
decb
xchg
cmp
sub
out
leave
adc
sbb
sahf
push
inc
push
pop
pop
xlat
xchg
inc
jae
cmpsb
cmc
add
push
lret
cmp
nop
int
jae
push
mov
sub
das
iret
sahf
mov
pop
pop
jnp
cmp
pop
add
mov
jle
pushf
enter
cmp
xchg
mov
loop
pop
cmp
jg
push
add
insb
stos
je
sub
and
outsb
dec
int
leave
les
jmp
inc
in
or
pop
test
sahf
movsb
sbb
push
mov
std
mulb
enter
adcl
sbb
push
shl
fisttpl
decl
inc
popa
ds
adc
push
xchg
addl
loope
cmc
in
lock
in
test
mov
out
or
je
mov
aam
jl
jg
pop
xlat
mov
into
xchg
xchg
cltd
cli
rolb
dec
js
jg
fimull
shrb
inc
inc
push
enter
mov
xorb
and
mov
mov
jo
movsl
popa
out
jb
mov
or
test
lods
arpl
push
jbe
cmp
push
push
es
xor
sub
ja
jge
jecxz
mov
out
push
mov
dec
dec
aam
repnz
xchg
repz
ret
ja
fsubrl
inc
adc
nop
mov
mov
cld
add
jmp
push
sbb
sbb
jge
in
pop
mov
adc
xchg
cmp
sti
outsl
iret
xchg
or
imul
leave
arpl
adc
mov
add
ficompl
push
xchg
in
ret
sub
jmp
outsb
xor
roll
cmc
hlt
mov
add
cmp
cmp
and
jg
mov
enter
insl
movsl
insl
fidivrs
cli
pop
xchg
ljmp
mov
mov
xor
pop
fs
lods
adc
jmp
sbb
pop
pop
xchg
xor
notl
or
mov
xor
jb
mov
xchg
xor
data16
push
pushf
cmp
and
js
fs
pop
mov
rorb
pop
mov
daa
cmpsl
jno
jb
ret
xlat
cmp
mov
dec
cmp
aad
dec
outsb
pop
pop
enter
dec
xchg
adc
lds
shll
jge
cltd
cmp
push
insl
dec
cld
inc
mov
movsl
jns
adc
cmpsl
cmp
mov
mov
push
imulb
adc
fildll
xchg
insl
rcrl
mov
ljmp
std
call
out
cli
ss
rcrb
push
aaa
dec
jle
outsb
stos
leave
xor
imul
enter
ret
aam
or
xchg
das
mov
xchg
xorb
arpl
push
int3
mov
jecxz
mov
mov
adc
fndisi(8087
push
insb
lods
sbb
pop
pop
pop
ja
push
add
and
cmp
in
cmc
pushf
mov
hlt
jle
sub
es
cmp
orb
shlb
mov
mov
and
push
xchg
cmp
mov
mov
sub
call
jmp
out
jo
pushf
test
dec
fcompl
dec
jns
jmp
fdivs
mov
pop
jge
jg
cmp
cwtl
inc
dec
in
xor
js
shll
mov
in
subb
push
cmp
or
mov
jnp
push
or
in
mov
loop
stos
and
jae
int
push
add
pop
push
mov
mov
rorb
scas
imul
bound
add
stos
and
scas
sbb
and
cmp
out
push
mov
daa
inc
test
arpl
ret
iret
or
adc
jnp
xchg
xor
subl
add
dec
pop
sbb
es
mov
and
out
sbb
sbb
popa
out
xor
adc
lods
incl
fnsave
loope
xchg
push
orb
es
push
xor
sbb
test
mov
inc
and
sbb
sbb
sbb
sub
sbb
xor
dec
sub
test
arpl
pop
ljmp
int
insb
js
cmpsl
mov
jecxz
fldcw
lock
cmp
lcall
xchg
pop
pop
jge
or
push
inc
fnstsw
cmp
xchg
sahf
js
out
addl
ljmp
sbb
push
sti
les
xor
testb
jge
stos
lods
enter
dec
addb
shl
xor
cmpl
sahf
sub
sbb
sub
jnp
adc
sbb
imul
shrl
fdivr
cmc
cmp
mov
leave
test
jl
ljmp
xchg
cld
mov
cmp
jb
sbb
cld
ss
sbb
shrb
jp
mov
dec
incl
push
dec
push
popa
cmp
je
jp
dec
inc
xorb
xchg
fistps
outsb
inc
xchg
xchg
dec
push
daa
stos
movsb
aas
out
incl
hlt
mov
dec
dec
and
and
gs
or
das
lods
ss
sub
cltd
out
mov
sub
ret
shlb
sbb
aas
push
mov
adc
cld
push
pop
inc
cld
pop
invd
hlt
mov
inc
arpl
mov
bound
adc
ret
subb
push
jecxz
lret
sub
daa
adcb
inc
xchg
xor
mov
push
cld
ljmp
imul
xor
loopne
js
or
xor
loop
adc
mov
adc
leave
sbb
jno
pop
xchg
mov
test
lods
mov
inc
lea
sub
xor
dec
jb
adc
adc
dec
jmp
pop
cwtl
decl
mov
imul
pop
dec
loope
lea
cli
jg
fcmovnu
xchg
andl
mov
shlb
cmp
mov
fcmove
out
cmp
cmpsl
dec
into
movsb
pop
ret
lret
xchg
xor
leave
fldenv
push
insl
ljmp
adc
ss
bound
int3
mov
pop
add
decb
xlat
xchg
push
jbe
cmp
xor
mov
mov
mov
cmp
dec
inc
pop
mov
pop
mov
cld
dec
jo
jbe
in
xchg
out
jae
fists
pop
cmp
std
sti
loope
insb
lahf
mov
jae
push
xchg
js
leave
nop
sub
mull
into
loopne
sahf
mov
add
ret
and
sti
rclb
mov
aaa
ja
and
push
pop
in
sub
in
mov
outsb
dec
cli
roll
fcmove
fcmovne
push
iret
dec
cmp
cmc
movsb
push
jns
inc
pop
loope
es
fs
aam
jmp
out
clc
dec
or
pop
addl
ljmp
push
daa
or
xchg
sbb
inc
mov
jg
xchg
sti
aaa
sub
xchg
cs
push
adc
hlt
popf
or
add
das
out
add
cld
in
cmp
lea
fwait
pop
sub
out
mov
mov
dec
call
or
xor
pushl
add
sti
push
mov
or
cmp
dec
jb
pcmpeqd
push
adc
enter
es
arpl
repz
sub
test
xor
sti
push
inc
mov
jge
pop
es
or
inc
lea
adc
lret
xor
imul
pop
cmp
push
push
mov
xchg
xor
mov
js
pop
jae
fidivs
test
pop
or
adc
shlb
push
sbb
mov
jnp
shll
xchg
dec
movsl
xchg
arpl
push
in
or
add
mov
daa
aaa
push
in
inc
cmp
mov
ljmp
jg
sub
and
pop
dec
dec
sbb
fidivl
fwait
dec
inc
je
inc
push
or
sbb
push
mov
cmp
ret
mov
xchg
mov
mov
in
jns
rorl
psrad
out
jo
mov
push
shlb
cmc
jge
mov
add
xchg
rcl
or
mov
aaa
fldt
in
cmpsl
push
pop
cmc
or
mov
movsl
arpl
xchg
sti
test
ja
mov
add
add
stc
fmuls
add
lods
enter
or
sub
sub
mov
pop
mov
cs
jnp
pop
pusha
mov
mov
arpl
mov
pop
idivb
mov
lcall
mov
lods
subb
push
pop
inc
sti
push
orb
stc
pop
lahf
fstps
repz
inc
jne
sub
out
sahf
pop
loope
imul
out
lods
jmp
fwait
and
mov
ret
cmpsl
cmp
xchg
pop
adc
ds
jle
dec
or
adc
ja
ja
pop
dec
dec
xor
add
mov
subl
add
cmc
aas
sub
out
mov
mov
dec
mov
xlat
pop
or
out
insb
insb
and
add
ret
rcl
and
aad
pop
test
cs
stc
jnp
ljmp
sub
test
lods
mov
add
sub
loop
cmpb
in
ret
jp
gs
ss
or
jp
test
sbbb
inc
popa
mov
dec
enter
jecxz
jne
je
add
daa
add
scas
call
adc
cmp
fs
nop
sbb
xchg
out
in
cld
adc
sub
sbb
xlat
inc
mov
jecxz
push
xchg
lahf
jo
mov
pop
cld
mull
lea
mov
notl
lds
sti
dec
jne
aad
xchg
pop
adc
pop
push
fucomip
xor
int3
repnz
rcrl
jmp
mov
outsl
xor
jmp
orl
jl
jecxz
dec
push
jno
bound
jbe
out
jl
mov
sub
cli
cwtl
and
insb
mov
out
adc
jp
add
in
push
jecxz
mov
in
movsl
adc
lahf
mov
cmp
fistpl
aad
js
lret
cmovae
xchg
out
gs
add
push
add
lds
or
pop
jp
xor
cs
mov
rolb
jge
lods
cld
into
cmpsl
movsb
cmc
mov
xchg
or
js
jo
in
imul
dec
hlt
dec
lods
mov
pop
push
lods
fidivs
cwtl
loop
push
test
xor
xchg
imul
inc
mov
xor
ret
lea
cmpsl
push
std
adc
xor
lods
cmp
dec
shrb
push
cmpsb
adc
pop
int
mov
sub
adc
sbb
fbstp
imulb
xchg
pop
pop
inc
loop
aas
pusha
sub
adc
mov
rorb
pop
push
xchg
jle
mov
je
adc
or
sarl
bnd
xchg
iret
xchg
cmp
sbb
jecxz
nop
ss
scas
clc
fadd
pop
ret
aas
jle
lret
lock
inc
movsb
mov
test
push
aad
into
int3
xchg
loop
orl
das
mov
out
inc
cmpsl
xchg
jg
repz
sarb
sub
pusha
iret
movsl
sub
xor
fisubs
push
call
stos
ret
nop
cmp
in
push
adc
roll
mov
lock
scas
jmp
push
mov
in
pop
jl
aas
sbb
mov
repz
pop
mov
rcrl
push
ss
adc
popa
mov
out
mov
aad
mov
pushf
jnp
and
cmp
mov
mov
pop
mov
jmp
in
lods
arpl
inc
jns
mov
jg
push
jmp
sbb
fs
lea
cmp
dec
pushf
fprem
inc
mov
sub
pop
jge
out
mov
mov
inc
or
mov
jo
push
imul
loope
rcll
in
or
movsl
adc
mov
xor
mov
add
and
jmp
jb
jbe
and
inc
mov
jnp
popa
push
lcall
movaps
mov
sub
in
bound
jb
xchg
js
addb
aaa
push
fildll
leave
dec
add
outsb
adc
xchg
cmc
pop
or
push
adc
lcall
xchg
push
push
xor
test
adc
ja
iret
mov
push
cwtl
xchg
mov
fmull
insb
nop
imul
push
daa
divl
or
and
lret
ret
jecxz
imull
bnd
xchg
cmpsl
outsb
movsl
repnz
loopne
stc
and
jbe
cmpsb
sarb
std
fisttpll
cli
mov
mov
dec
xchg
push
pop
cmpsb
sbb
fs
shrl
adc
jge
mov
and
in
inc
mov
out
push
or
in
pop
sbb
popf
dec
or
lods
sbb
xchg
lcall
dec
ss
pop
mov
imul
lcall
mov
push
pop
add
rorb
or
test
xchg
js
add
jecxz
icebp
pop
popf
add
test
sahf
sub
inc
and
out
pop
lods
push
lds
mov
fidivrs
ds
push
pop
je
sub
jns
add
movl
ja
mov
sbb
std
scas
sbb
xchg
and
out
pop
add
insb
icebp
xor
push
cmp
inc
enter
push
sbb
inc
xor
sarb
cmc
cmp
shrl
or
ss
or
js
cmc
aad
pop
cld
aad
lcall
movsl
int
and
cmp
xchg
jle
negb
xor
mov
das
add
loopne
and
or
jmp
imul
mov
sub
push
and
push
mov
or
lock
call
sub
mov
jg
test
insl
out
push
sbb
inc
adc
mov
adc
jecxz
cmp
lcall
in
icebp
es
enter
jge
inc
inc
popa
pop
or
in
lds
jle
popf
call
loopne
lahf
lods
les
mov
mov
clc
out
mov
cmp
mov
insb
in
test
les
adc
loop
fldl
pusha
popa
pop
rcl
xchg
jge
mov
in
movsl
and
les
ficompl
mov
fiadds
or
dec
sti
mov
out
dec
xor
insb
fisubl
idiv
aad
dec
mov
xor
pop
jns
leave
daa
xor
out
fnsave
xchg
adc
aaa
sbb
les
in
bound
and
notb
add
jns
fnstenv
and
mov
fistl
add
cmp
lahf
cs
add
inc
clc
iret
test
adc
cmp
fwait
push
das
rcr
mov
jle
mov
and
mov
addr16
dec
pop
js
xor
aad
pop
ds
icebp
push
in
mov
lock
sbb
dec
mov
add
pop
leave
bound
add
xchg
sti
cmp
imul
xchg
mov
sti
jns
mov
mov
mov
enter
mov
inc
je
je
and
lahf
or
sbb
test
mov
lds
in
ss
cmpb
nop
adc
mov
stos
dec
and
rclb
cld
push
ss
jl
cmc
imul
jo
push
lret
lods
adc
cli
cmp
sub
stos
aaa
mov
mov
push
hlt
xor
out
mov
push
mov
in
insl
lahf
clc
push
push
scas
leave
push
mov
mov
inc
incb
insb
inc
ret
test
enter
pusha
inc
mov
push
push
fstpt
imul
jl
lds
push
clc
enter
je
pop
ror
cmp
lods
dec
cs
pop
repz
jbe
cmp
cltd
add
lret
add
stos
sbb
call
pop
int3
sbb
jle
sub
push
icebp
and
push
sub
mov
cmpsb
popf
push
inc
test
stc
push
aad
dec
or
adc
pop
rorl
jne
xor
mov
mov
pop
xor
call
fs
xchg
popf
cmpsw
jo
xor
and
in
mov
or
aas
subb
aaa
lea
and
dec
fstpl
fcomip
mov
xlat
js
xor
sarl
xor
xor
stos
stc
mov
lds
loop
adc
fnstenv
dec
sub
push
cs
jge
mov
loope
jge
fidivrl
sub
inc
in
leave
or
scas
lret
sti
dec
dec
aam
inc
fcomps
mov
mov
mov
sbb
push
push
xor
lds
fcoms
mov
cmpsb
xchg
pop
and
lret
add
push
cld
movsl
out
adc
lods
insl
lods
mov
cltd
sbb
test
push
cmp
mov
mov
dec
or
stc
ljmp
jne
inc
jnp
mov
pop
cmp
push
sbb
mov
mov
mov
fidivrl
pop
fwait
test
sbb
dec
or
inc
sti
add
nop
aaa
aam
pop
bnd
sbb
mov
sub
mov
mov
jge
fyl2x
jns
and
out
push
cmp
add
adc
mov
sub
mov
test
movsl
or
inc
inc
andb
enter
mov
cwtl
shlb
cmpsb
inc
xchg
ss
mov
push
rclb
inc
aam
jo
sub
arpl
add
movsb
lock
mov
xchg
nop
ja
cmc
bnd
jnp
rolb
jecxz
push
mov
mov
mov
in
cmp
push
fimull
pop
out
fadds
jp
stos
aas
loopne
adc
push
int3
add
mull
jns
adc
xchg
andb
jbe
cmp
and
stos
hlt
lock
mov
jae
and
pop
inc
cmpsl
insl
int3
adc
cmp
clc
cmc
out
xchg
lods
jge
dec
ds
insb
jo
and
adcl
out
dec
dec
out
fisttps
inc
hlt
pop
push
push
jle
inc
pop
sub
add
jne
adc
cmp
sarl
stos
orl
movsb
sti
fdivrl
lea
movsl
mov
mov
push
shlb
mov
in
jecxz
mov
cld
gs
test
jae
flds
push
int
outsl
testl
loope
testl
dec
mov
rorl
popa
aam
arpl
fidivl
mov
or
mov
xor
ss
mov
xor
sbb
cs
je
stc
jl
ficoml
repz
pop
fwait
mov
fimuls
xlat
mov
xchg
out
repnz
lret
into
repz
mov
cld
sub
shll
adc
dec
fnstenv
test
mov
cmpl
mov
or
outsb
lret
cmpsl
inc
iret
jecxz
daa
jnp
bound
xor
or
or
fs
add
adc
sahf
and
pop
loope
and
js
aam
cltd
outsw
and
mov
sbb
js
dec
mov
insb
xchg
mov
push
mov
fsubl
repz
mov
ret
mov
and
mov
pop
outsl
mov
cmp
shrb
ss
dec
mov
ret
lret
divl
add
test
dec
inc
inc
dec
sbb
xor
jle
dec
arpl
sti
inc
out
into
xor
loope
sbbb
or
jecxz
adc
jecxz
mov
loopne
jno
in
loope
int
xchg
clc
lret
int
aad
pushf
imul
in
je
enter
addr16
sub
sbb
adc
dec
jle
aam
jnp
pop
ficoml
jnp
add
cs
jnp
or
sbb
sub
dec
shll
test
shll
aam
lcall
test
outsb
enter
xor
out
sbb
push
testb
mov
sbb
lea
push
mov
incb
cmpsb
lock
xchg
push
mov
mov
xchg
xor
jae
push
and
decl
and
mov
push
inc
xchg
enter
push
cmp
aaa
out
adc
jp
adcb
cmc
xchg
in
ja
jb
add
cmp
cmc
dec
adc
sbb
sbb
loope
push
lea
sahf
repnz
push
dec
sbb
cmpb
test
call
xchg
sbb
orb
in
outsb
dec
stos
and
mov
xchg
lahf
fisubs
lahf
loope
lcall
pop
lea
dec
int
int3
inc
xchg
xlat
xchg
inc
pop
cltd
xchg
mov
dec
mov
lret
pop
xor
inc
into
mov
sbb
xlat
jl
shlb
push
pop
movsb
stc
add
rorb
in
and
or
sub
test
jns
stos
inc
ljmp
jge
dec
xor
xorb
loope
jp
xchg
jns
pop
dec
or
scas
or
cmp
je
aaa
rcrb
pop
push
mov
dec
xchg
pushf
js
insb
inc
or
xchg
test
pop
pusha
lcall
repz
dec
push
rorl
or
push
cmc
jg
addb
pop
mov
lock
in
push
inc
pop
rcr
test
mov
leave
dec
and
push
sub
xchg
pop
rolb
mov
adc
test
test
popl
cmp
add
pop
fwait
push
or
mov
pop
xchg
inc
and
or
add
out
shlb
out
sahf
orl
push
xchg
pop
aaa
out
movsb
jle
jb
incb
mov
sub
xor
pushl
mov
cli
xchg
push
out
dec
je
fwait
inc
adc
in
adc
adc
insl
fldl
shrl
test
adc
jecxz
add
and
push
rclb
rcrl
ljmp
xchg
pop
stos
jnp
mov
lcall
imul
js
mov
cld
lret
fsubrs
jp
subb
orb
cli
and
add
jns
jb
addl
mov
push
loopne
aas
pop
mov
leave
stos
xchg
repnz
enter
loopne
mull
rcll
adc
fistpl
lds
jno
icebp
inc
xchg
adc
jbe
rclb
xor
gs
pop
movsb
popf
popf
mov
sub
jno
and
cs
sbb
push
cmp
pcmpgtd
cmc
adc
iret
mov
xor
test
sbb
adc
mov
xchg
sub
out
movsb
cmpsl
mov
bound
cmp
mov
popf
dec
test
jle
dec
add
iret
sub
movsl
mov
ljmp
push
pop
jg
dec
addr16
cwtl
pushw
mov
sbb
sub
jo
cld
xor
push
jns
pushf
cmpsl
fwait
cmp
sub
enter
mov
mov
push
lcall
outsb
js
int
mov
std
rcrb
cmp
aad
push
out
mov
iret
aas
movsl
jmp
xchg
and
inc
mov
pop
jbe
and
mov
rcll
cmp
mov
mov
cli
jp
test
test
inc
loopne
adc
pop
and
ret
jb
jne
xor
fwait
clc
sub
mov
mov
movsl
mov
fs
lahf
addr16
clc
vmread
es
xor
ficompl
sub
push
std
cmp
enter
insb
sbb
sub
push
fildll
test
and
pop
sbb
scas
xor
sbb
aad
sub
lret
xchg
pop
or
inc
outsb
and
xor
xlat
lock
aas
add
push
mov
fisubrs
xor
aad
cmp
cmp
out
or
adc
aad
loope
fwait
addb
popf
in
jo
jmp
aad
icebp
fstpl
cli
push
std
jnp
sub
out
psubw
aam
iret
jbe
cmp
aad
jo
mov
sub
outsl
inc
mov
inc
addr16
mov
in
faddl
mov
repnz
inc
iret
es
fwait
movsb
cltd
adc
leave
cmp
mov
or
xor
and
cltd
loop
adc
or
inc
loop
inc
js
fsubrs
or
push
jbe
out
mov
and
ds
mulb
push
push
cmp
enter
mov
and
cld
add
iret
scas
dec
cmpsb
xchg
inc
pusha
sbb
jne
mov
outsl
jns
dec
stc
push
ss
jo
mov
sbb
sbb
push
scas
loope
movsl
cld
icebp
and
push
jmp
push
add
jbe
scas
mov
sbbb
jo
xchg
cmc
mov
test
into
mov
sub
out
jg
sbb
scas
loope
outsb
pop
dec
test
dec
sub
jmp
jbe
rcll
cmp
mov
ds
cmp
lods
dec
je
jno
cmp
lds
add
cmp
bound
movsl
cmp
pop
xorb
mov
ds
dec
sarb
popf
cmpsl
in
jb
fldenv
sub
scas
mov
sti
fisttpl
adc
sub
or
mov
add
pop
mov
sub
ret
ret
jg
aas
mov
xchg
fisttpll
addr16
mov
push
out
jb
enter
jg
mov
fwait
mov
les
mov
cld
and
and
aad
call
cmovns
cli
ret
popa
push
pop
cltd
scas
xor
loop,pn
adcb
cmp
or
movsb
cmp
sbb
xchg
mov
xor
add
sbb
xchg
loopne
and
shrl
insl
movsb
ja
ficompl
gs
push
add
xchg
mov
scas
or
mov
sub
movsb
xchg
or
cmpsl
jno
push
xlat
clc
xor
int
lock
pusha
mov
orb
aas
jg
aam
push
or
xor
sti
push
lds
fcmovbe
inc
sub
int3
cmp
ffree
mov
sbb
push
mov
int3
pop
test
dec
dec
mov
in
es
lcall
ja
pop
and
mov
inc
pop
out
cmc
and
adc
in
add
test
in
xor
pop
sub
pushf
add
cmc
lret
push
dec
ret
jns
sbbl
cli
cmp
std
xchg
lock
pop
push
or
sbb
cmpsb
cmp
add
cmc
cmc
cmp
push
fbld
sub
xor
and
dec
jno
or
sub
and
inc
and
adc
test
inc
je
dec
pushf
cmp
inc
jg
pop
ljmp
lret
adc
sahf
insl
outsl
push
inc
inc
push
iret
movsb
insl
out
pusha
adc
inc
push
mov
xchg
push
push
in
arpl
add
mov
clc
enter
sub
ret
repnz
dec
jp
es
fwait
in
fisttpll
mov
mov
movsb
sti
push
lret
and
inc
jp
stos
arpl
es
pop
xchg
outsl
xchg
int
push
mov
push
ret
movsl
push
ret
fsubl
mov
add
repz
pop
mov
or
xchg
stos
mov
mov
mov
in
xchg
push
fwait
hlt
loop
jbe
sbb
mov
scas
call
insb
sub
jecxz
fsubrp
lea
pop
ret
das
adcl
jno
jmp
jp
inc
mov
pop
orl
insl
daa
inc
mov
mov
arpl
and
sbb
dec
sahf
out
xchg
outsb
xor
test
mov
in
jae
addr16
gs
pop
sbb
fsub
repnz
aam
add
andl
adc
mov
lds
mov
push
in
mov
rorl
popf
and
adc
in
addb
sub
push
and
mov
cmp
scas
dec
sbb
add
pop
negb
in
push
xchg
ja
mov
ljmp
sahf
adc
into
inc
out
add
cmp
mov
push
out
shl
std
mov
or
insl
lods
and
adc
mov
cmp
loope
outsl
cmp
and
fidivrs
push
mov
into
xor
mov
imul
aaa
cli
dec
fsubp
pop
rolb
outsl
push
stos
fwait
movb
or
jge
jg
add
aaa
and
lret
fdivrs
pusha
xchg
ss
sbb
mov
mov
or
fisubrl
mov
mov
pmaxub
adc
fistl
test
aam
dec
cmp
xor
repz
push
sub
test
ss
or
cmp
pushf
pop
scas
mov
mov
rol
sbb
pop
js
xchg
mov
xor
mull
ffreep
inc
jmp
add
sub
mov
add
jo
lcall
movsb
cmpsl
push
pop
stos
or
cli
gs
iret
cld
add
lock
rcl
pusha
adc
mov
push
xor
or
in
mov
pop
push
dec
shr
mov
aam
pop
je
out
cwtl
mov
sbb
push
mov
dec
cmp
and
xchg
fcmovnbe
lds
shrl
lahf
add
and
fnstcw
push
jne
das
out
inc
stc
lahf
mov
je
sti
arpl
movsb
or
pop
add
stc
dec
lea
jmp
loope
lahf
xor
outsb
sub
xor
or
mov
ja
jo
test
mov
out
mov
outsb
cwtl
add
jl
mov
mov
insb
rolb
lret
xor
inc
sahf
dec
stos
fisubrs
inc
dec
jns
cmp
cmpsb
aad
jno
stos
mov
push
test
cwtl
push
and
mov
jns
pop
ficoms
fs
insb
add
jl
sub
aad
sbb
cmp
cwtd
lret
pop
lds
xchg
stos
jno
jmp
jnp
push
cmp
ja
fbld
adc
nop
xlat
ficompl
xchg
mov
aaa
fcmovb
jmp
mov
pushf
jmp
pusha
or
xchg
and
add
lret
xchg
imul
pop
dec
imul
adc
aas
jne
mov
pop
scas
notl
lds
in
mov
or
cmp
xchg
mov
xor
sbb
cmove
and
stos
dec
mov
in
pushf
xchg
push
inc
pop
sbb
mov
enter
jae
xor
push
and
jg
mov
adc
insb
mov
mov
pop
int3
and
cs
call
adc
pop
push
addr16
icebp
into
add
inc
fstpt
xor
std
mov
mov
aad
mov
test
imul
jmp
scas
mov
loopne
ror
mov
dec
lods
push
ret
sub
imull
out
jecxz
xchg
jo
push
pop
xor
fstpt
fbstp
jno
jne
pop
lds
push
test
inc
arpl
shll
add
mov
popf
fisttpl
xor
cmp
stos
hlt
stos
cmpb
mov
xlat
js
cs
rcl
insl
mov
mov
lds
cmp
adc
mov
push
lahf
dec
xor
cmp
inc
or
ds
xchg
popf
xor
ficompl
test
enter
fsubrl
mov
fnstsw
or
mov
pop
xor
rcl
mov
in
outsl
pop
mov
loope
xor
jp
cmp
ja
jo
movsl
hlt
sbb
inc
dec
xchg
std
addr16
mov
addb
mov
mov
loopne
lea
ljmp
add
sbb
arpl
cli
cmpsb
mov
enter
js
adc
cwtl
and
dec
jne
push
mov
popa
jge
cltd
cmc
mov
jle
xchg
sbb
lret
inc
hlt
fiadds
outsl
out
push
cmp
pop
sub
mov
roll
icebp
fucomp
mov
adc
iret
ja
ja
pop
xchg
push
jg
or
or
daa
xor
inc
out
ljmp
ret
out
mov
rol
lock
dec
jg
je
xchg
mov
xchg
lock
mov
push
push
loop
sti
xor
sti
push
flds
mov
add
cmp
inc
pop
pop
dec
push
pusha
mov
cmp
int3
dec
jecxz
jbe
dec
int3
fstpl
insb
imul
cmp
and
cmpsb
arpl
sbb
lods
shll
lods
and
rclb
repz
and
dec
add
xor
lock
hlt
jno
sbb
push
mov
mov
iret
adc
pop
jecxz
ljmp
leave
lods
fistpll
xchg
sub
xor
adc
fsts
mov
pop
adc
push
inc
mov
cmpsb
fistpll
sbb
push
jbe
add
call
scas
test
mov
jns
rcr
rcr
and
ds
pushaw
out
loopne
into
shr
mov
push
mov
js
dec
add
cmp
insb
sub
xchg
add
cmp
dec
xor
pop
and
sub
hlt
lret
xchg
cltd
xchg
add
sarb
dec
dec
je
mov
sub
mov
mov
and
add
mov
es
imul
mov
and
test
adc
mov
sbb
jno
stos
cmp
mov
hlt
int3
mov
sbb
pop
daa
push
les
add
shrl
int3
movntps
dec
mov
jecxz
cmpsl
loope
scas
cmp
movsl
call
leave
jno
mov
jns
push
xchg
cmp
or
aaa
push
push
sub
and
jp
repnz
mov
mov
fiadds
out
jg
iret
inc
cld
jecxz
mov
sub
fs
leave
cmp
ficoms
cmp
push
inc
mov
or
xlat
das
shrb
fxch
adc
lods
cmpl
dec
cs
loop
add
std
loop
sbb
cltd
mov
fcoml
fmul
jns
mov
lock
adc
lods
mov
inc
aam
imul
sbb
testb
or
pandn
fisubrs
pop
push
jno
mov
sbb
repz
push
jnp
sub
jb
xchg
inc
push
aaa
loopne
adc
xor
nop
imulb
ja
push
pop
cltd
test
stos
aas
repz
addr16
xchg
push
addb
add
xchg
adc
and
jge
xor
fildl
push
push
call
inc
mov
movsl
je
idivb
loopne
add
leave
push
ja
and
push
adc
ljmp
aam
test
aas
ficompl
push
push
pop
xchg
pop
das
cmp
aad
xor
stc
and
aaa
in
dec
call
xchg
pop
jle
xchg
mov
adc
pop
xor
xchg
dec
gs
or
loop
mov
pop
outsb
loopne
jno
out
addr16
arpl
pop
jae
push
repz
push
jle
mov
sub
test
pop
sub
pop
nopl
ret
and
add
push
push
mov
pop
fs
cmp
nop
cmp
stc
data16
pop
xorb
xchg
icebp
sbb
call
mov
aaa
pop
dec
in
jmp
insb
mov
js
mov
in
loope
mov
sbb
mov
mov
cmp
mov
push
add
and
push
aas
push
nop
lea
xor
sub
or
loopne
pop
sbb
enter
cltd
and
dec
imul
inc
inc
add
rcrl
lret
aas
aad
in
loopne
adc
gs
sbb
sbbb
jp
stos
into
jo
iret
cmp
jmp
sbb
imul
rorb
jp
add
adc
outsl
pop
add
in
mov
nop
ds
sbb
xor
pushf
sub
inc
or
inc
xor
repnz
fidivs
mov
gs
inc
mov
and
dec
loope
gs
push
jae
sbb
xor
fdivp
fisubrs
xchg
call
int
aad
push
andl
jns
lods
sbb
dec
scas
pop
cmpsl
dec
dec
dec
push
rcrb
into
push
jae
aam
mov
popf
insl
fistps
push
pop
xchg
mov
jg
jno
lock
aad
or
add
push
movsl
or
sarb
or
pop
lds
pop
pushf
sub
enter
roll
hlt
ja
cli
fstl
inc
cmp
jp
or
jge
sarl
push
sub
xor
inc
xor
and
cli
jns
push
scas
jbe
sub
add
inc
cmp
xchg
scas
xchg
loop
mov
mov
or
imul
jecxz
cmp
les
fwait
gs
imul
xlat
add
out
mov
fucomp
loopne
pop
andw
insb
and
test
jle
adc
mov
mov
push
push
shlb
mov
mov
push
insb
ss
mov
rcrl
cmp
fcmovbe
pushf
mov
xor
cwtl
mov
sub
jno
cld
sti
les
xchg
leave
aas
nop
mov
fldcw
xor
fisttps
test
gs
stc
movsl
sbb
fcomps
test
pop
mov
sahf
push
dec
lock
cmpsl
sub
sbb
and
push
xor
ret
aaa
adc
pop
insb
pop
inc
pop
mov
push
sub
pop
addr16
jnp
sarl
adc
popa
jbe
or
or
xor
stos
jae
push
mov
cld
dec
ljmp
mov
pop
dec
xlat
int
xor
aas
ret
dec
mov
insb
loopne
sbb
cmpsl
xchg
imul
push
ja
out
dec
cmpsl
jbe
mov
lahf
loopne
incb
cmpsl
dec
jmp
jp
hlt
gs
cmpsb
adc
lret
cwtl
or
into
sbb
xlat
inc
mov
mov
mov
fisttpll
mov
cld
pcmpeqd
mov
movb
push
js
fdivr
fs
test
jp
inc
push
jae
or
ds
inc
and
and
sub
pop
and
jae
add
mov
in
and
mov
cld
mov
fs
sbb
mov
pop
pushf
int3
inc
nop
adc
pusha
cli
ret
cmpsb
ljmp
addl
pop
lea
mov
pop
adc
clc
pop
add
fwait
in
cs
es
push
aad
cmpl
cmp
sbb
ret
test
ret
cwtl
or
mov
fwait
gs
mov
rcrb
jns
clc
xchg
jno
and
aaa
int3
in
pop
shll
aam
andl
ret
loop
aad
rorb
cmp
daa
ret
ljmp
pop
and
mov
aaa
icebp
dec
jo
scas
pusha
cmc
mov
xor
loope
jno
fisubrl
sbbl
sub
cmp
jo
cmp
push
xchg
iret
cmp
orb
in
adc
enter
ficomps
iret
std
push
loopne
and
and
mov
call
xchg
shrl
jnp
dec
xor
mov
aas
sub
das
lds
ds
dec
pop
add
mov
loop
dec
add
dec
test
add
sti
dec
inc
dec
inc
push
adc
push
imul
ret
mov
cmpsl
in
mov
add
cmp
and
sub
xor
dec
sub
mov
add
dec
ds
push
out
mov
lods
out
scas
lret
adc
pusha
or
leave
xor
cmpsl
adc
icebp
aaa
loopne
insl
xor
or
sub
sahf
adc
xor
ds
inc
inc
insl
jo
inc
jle
sbb
inc
lahf
cmpsb
ret
iret
test
repz
lar
rcrl
nop
pop
pop
lods
popa
and
test
sub
je
test
cmp
fs
enter
inc
daa
sub
fs
or
add
decb
aad
ret
shlb
push
jns
mov
out
sarl
mov
dec
repnz
dec
add
cmp
sbb
stos
in
int3
lds
das
or
cmp
mov
or
jmp
add
pop
aam
inc
fildll
add
xchg
rcrl
cmp
jno
adc
out
adc
mov
mov
jb
xchg
push
or
int
fdivr
cmp
cmp
popa
loope
add
shrb
sarb
cmp
hlt
fdivr
or
out
negb
fisttpl
jno
mov
insl
ss
jno
testl
jnp
aad
push
dec
test
shrb
xor
loope
fs
rclb
pop
cmp
mov
test
inc
cld
cs
push
loope
xchg
and
push
pop
repz
mov
stos
fs
adc
inc
cli
cmpl
jecxz
jecxz
inc
push
filds
and
pop
jg
lock
mov
dec
lret
dec
sub
mov
movsl
gs
rorb
and
testl
lret
div
je
inc
xchg
les
rol
cmpsl
rcl
popf
xchg
enter
insl
test
cmpsl
in
andl
loop
mov
movsb
fxch
icebp
cmp
or
dec
std
mov
hlt
xor
mov
or
lods
lahf
loope
sub
fdivrl
faddp
jb
xor
out
add
adc
push
xchg
je
sbb
cmp
cmpl
cmpsl
adc
xchg
sbb
sbb
popf
dec
jne
dec
jnp
mov
lcall
hlt
ds
or
sbb
pop
push
cmp
ljmp
hlt
cmpsb
push
sti
xor
lcall
mov
ds
shl
fsubrp
cmp
insb
jg
aam
add
cmp
xchg
mov
xor
mov
mov
leave
push
pop
in
or
jmp
in
outsb
push
adc
stc
call
xor
popa
cli
dec
mov
xchg
arpl
cmp
shl
xor
sbb
push
lea
pop
mov
cmp
cmp
xchg
jno
inc
int3
dec
jmp
nop
aam
pop
cli
clc
sbb
xor
jle
out
dec
mov
cmp
outsb
pop
fstps
xor
aam
mov
mov
pop
decl
sbb
flds
mov
into
mov
push
icebp
pop
cmp
rolb
mov
push
clc
hlt
test
sub
pop
std
mov
scas
jmp
mov
mov
sti
push
mov
jnp
in
mov
inc
scas
xorb
dec
repnz
and
dec
mov
inc
add
inc
mov
into
insl
dec
shlb
xchg
pop
imul
pushf
sbb
mov
aaa
dec
mov
shrl
das
xchg
aad
test
xor
sbb
adc
mov
shll
addr16
mov
bound
pop
xlat
insl
and
jle
arpl
ret
pop
test
in
js,pt
sar
fisubrs
std
out
inc
add
stos
pop
scas
adc
mov
out
xchg
mov
pop
mul
je
or
xchg
pop
add
mov
rcl
roll
adc
fdivrl
lahf
lock
ss
orb
dec
bound
mov
ret
push
lods
pop
jae
lds
arpl
cli
mov
push
push
aam
mov
adcb
pop
lea
dec
mov
mov
inc
movsl
jge
jge
push
cld
outsb
mov
sub
dec
ret
js
nop
mov
aad
mov
cmp
xor
jle
fiadds
lods
test
jg
xchg
fisttpll
push
mov
push
and
std
xor
pushf
test
rorl
cmpsb
shll
mov
ret
dec
lods
push
in
pop
and
and
push
insb
sbb
inc
les
loope
jg
insl
mov
sub
in
push
dec
cltd
out
xor
inc
lea
push
cmc
inc
inc
mov
lret
pop
cmp
cld
jb
out
testb
mov
div
jb
inc
adc
push
ror
adc
xchg
rol
in
cmp
sti
cmpsl
push
je
pop
call
scas
xor
cli
arpl
xchg
rcrb
pop
movl
mov
push
popa
es
and
testl
dec
out
mov
sbb
lods
inc
movsb
out
movsl
mov
lea
cmpsb
ret
lcall
test
push
jle
sub
pop
in
rol
rcrb
test
gs
lods
pop
fcoml
out
or
lcall
in
fisttps
mov
jne
insb
cmp
mov
movsb
push
sbb
cmpsb
mov
iret
popw
lret
pop
aaa
mov
inc
mov
push
data16
sub
lret
cmp
insb
jmp
jns
add
cli
aas
inc
inc
push
bound
jo
xor
cmc
add
pusha
sub
jb
xor
in
xor
or
sahf
adc
jns
lock
test
out
push
pop
sub
ss
out
sbb
lret
orb
out
sub
out
seta
fcomip
xchg
add
mov
xlat
adc
add
xor
fimuls
jg
dec
test
dec
mov
stos
push
shl
das
sbb
jnp
aam
icebp
xlat
pop
push
test
pop
js
mov
adc
push
scas
adcb
and
data16
ss
jmp
dec
and
movsl
insl
add
lret
popf
cltd
jl
leave
add
inc
pop
fbld
pop
ficomps
nop
dec
shlb
pop
data16
dec
xchg
or
loope
jo
pop
adc
in
push
adc
jns
push
mov
shlb
dec
xor
sbb
dec
jge
mov
and
mov
shlb
lock
cmp
jp
bswap
pop
sbb
sbb
sbb
pop
popf
push
lds
orl
cwtl
dec
sub
sbb
sub
xchg
inc
ss
cmp
hlt
ficoms
and
xlat
adc
jmp
ret
mov
xor
aad
mov
in
and
mov
in
std
call
pop
xor
shll
and
fdivr
hlt
pop
sub
dec
aam
cmpsl
push
faddl
mov
xor
icebp
das
mov
mov
xor
lahf
push
sbbb
call
shlb
ficompl
lods
sti
push
adc
fwait
inc
out
cmpsl
rorb
shr
lret
ljmp
rcll
loope
cmc
sub
inc
xor
pop
jno
ja
lock
and
jmp
out
mov
arpl
mov
push
call
ja
dec
jecxz
arpl
mov
mov
test
xor
fldcw
add
pusha
loopne
les
movsb
lret
pop
hlt
test
add
fdivrl
or
dec
xchg
inc
pop
out
les
in
out
ret
cmp
insb
pop
lahf
pop
xchg
iret
mov
out
xor
fwait
jne
adc
xchg
push
pop
push
shrl
xor
rorb
mov
cli
loopne
inc
out
and
xlat
lret
arpl
cmpsl
sbb
insl
pop
dec
cmp
pop
mov
adc
fiaddl
lret
or
inc
lds
add
fsubp
mov
mov
fcomps
pop
mov
frstor
jb
ds
out
inc
cmp
and
idiv
cmpsl
aas
ficompl
sbb
int3
cmpsl
mov
or
mov
sbb
push
or
lea
xchg
pop
inc
and
ret
xor
jae
insb
add
dec
jnp
daa
out
sub
pop
ja
xadd
xor
xchg
inc
add
push
push
or
jge
dec
fdecstp
push
in
imul
cmp
add
lods
pop
xor
jo
cmp
xchg
pushf
jecxz
xor
lods
lret
aad
shl
aam
mov
add
je
adc
fistl
cwtl
pop
ds
inc
dec
sbb
mov
out
nop
and
mov
test
sub
aas
sbb
sbb
add
jo
in
sub
cmpsl
repz
bound
push
fldenv
adc
mov
out
or
and
jns
fdivrp
push
sub
data16
cmp
jg
pop
loop
into
dec
in
test
add
push
aam
push
xor
mov
lods
in
cmp
insl
adc
inc
xor
inc
xor
mov
jo
out
xor
cs
popl
cwtl
pop
aad
mov
jp
adc
inc
in
andb
mov
pop
andl
mov
push
test
push
pusha
xor
xchg
or
in
xor
sbb
repnz
aas
rcl
arpl
cmpsl
xor
insb
aas
shlb
lea
aam
test
clc
mov
sar
push
add
mov
out
les
test
mov
push
push
fwait
dec
and
or
leave
push
fldl
xchg
lds
dec
mov
data16
pop
jle
sub
dec
scas
mov
and
cmp
push
mov
int3
jecxz
pop
lock
and
mov
lods
dec
add
fisttps
rcl
or
cli
jle
out
adc
hlt
mov
mov
mov
arpl
xchg
xor
aad
imul
jno
xchg
and
inc
dec
icebp
adc
xor
push
test
push
pop
push
push
clc
jae
mov
js
inc
mov
add
xchg
mov
test
roll
ljmp
leave
xlat
clc
movsl
mov
leave
pusha
fistps
lret
mov
inc
push
xor
cmp
and
dec
outsl
je
cmp
cmpl
iret
in
sub
rcrl
das
fisttps
xchg
es
jg
mov
or
lock
lock
xor
mov
inc
iret
dec
jo
fwait
lock
lahf
int
je
sub
push
add
sbb
jmp
rcrl
jp
xchg
jns
sarb
loop
cmp
push
dec
cmp
pop
in
mov
movsl
daa
out
add
fiadds
push
adc
fnstcw
mov
in
cmovne
pop
in
les
imul
inc
sbb
dec
lods
clc
mov
fcompl
jo
jo
je
sbb
sarl
push
mov
mov
lret
rolb
inc
and
cmp
inc
push
out
mov
pop
and
popf
jecxz
dec
lret
push
ret
add
insl
shrl
adc
les
lea
dec
mov
jp
cld
bound
rolb
pusha
in
push
cmp
pop
jle
lahf
cltd
or
daa
orl
xchg
rorb
lock
push
cltd
or
loope
inc
outsb
ja
cmp
stc
es
cltd
mov
pop
leave
sahf
mov
or
pushf
adc
mov
les
jp
or
ss
sarl
xchg
roll
sbb
adc
repnz
xor
inc
fmulp
cmp
dec
daa
fisubl
sbb
in
sub
push
inc
movsl
hlt
rclb
testb
aad
jb
jb
sbb
aad
aam
push
cmpsb
repz
mov
rcrl
and
pop
pop
lcall
hlt
aas
cmc
out
add
dec
pop
adc
xchg
dec
inc
sbb
sub
lret
adc
and
jecxz
mov
jb
stc
add
dec
add
cmp
das
leave
ss
stc
and
icebp
sarl
notb
rcll
shll
int
push
mov
jnp
fdivr
les
cmp
push
mov
mov
add
push
push
inc
pusha
push
mov
in
pop
cmc
or
add
das
gs
sbb
outsl
fidivs
popa
sbb
fs
mov
or
dec
bound
mov
sub
mov
aad
jno
fnstsw
lret
cld
dec
ret
jns
mov
addb
loope
movsb
xor
frstor
insl
dec
mov
popf
das
cmpsb
ret
mov
enter
inc
jns
nop
rorb
movsb
and
adc
xor
lahf
sbb
and
stc
pop
dec
popa
fiaddl
test
rorb
fs
push
dec
lret
or
mov
sub
sbb
leave
cmp
pop
mov
mov
ret
cmc
mulb
hlt
jp
xchg
bound
fwait
mov
lock
scas
xor
outsb
dec
pop
adc
inc
xchg
push
cmp
add
shlb
add
and
xchg
xchg
sbb
cli
imul
sub
imull
dec
popa
stos
inc
decl
inc
cs
lds
lcall
popf
popa
add
cmpxchg
mov
test
out
xor
cmp
add
xchg
push
jle
rcll
loope
mov
xchg
inc
psubusb
jno
xchg
iret
push
sar
sahf
rcrl
push
aad
jle
adc
inc
inc
sbb
mov
gs
push
mov
and
xchg
mov
add
mov
jne
repnz
xchg
and
jb
fsubrp
or
daa
test
pop
neg
pop
lods
jp
test
inc
std
out
xchg
shrb
add
in
cli
daa
jp
mov
inc
and
sub
fsubl
pusha
pusha
jle
dec
cmpsl
fisubl
inc
nop
mov
xchg
movsb
xor
add
insb
cs
mov
mov
ljmp
mov
add
and
mov
std
xor
xchg
out
lret
mov
pusha
test
lret
stos
mov
arpl
fidivs
push
stos
mov
cmp
and
fidivrs
popa
das
cmp
inc
xor
push
dec
jmp
sti
aas
aaa
stos
add
ja
pop
scas
in
inc
testb
xchg
pusha
adc
inc
out
imul
into
jmp
and
out
mov
and
jmp
dec
fcom
mov
jg
cmpb
mov
gs
xchg
cmp
xchg
mov
mov
jmp
rcll
in
outsb
adc
jge
dec
stos
sub
test
push
sbb
inc
push
pop
jns
sbbl
dec
enter
push
rorl
dec
insl
fwait
jg
nop
xchg
sub
scas
in
push
adc
adc
push
xor
sub
sub
popa
inc
es
push
hlt
jnp
stc
rcll
mov
popf
enter
pop
inc
and
push
dec
sti
push
dec
mov
jb
xchg
jge
js
mov
mov
lahf
pop
test
ja
sbb
lock
loopne
and
stos
movsb
pop
cltd
shl
cmp
mov
cmp
jbe
lods
jge
sub
and
fldenv
mov
cmp
cmp
mov
pop
aad
pop
shll
cli
int3
out
stc
xchg
and
mov
adc
jecxz
ds
pop
mov
dec
fidivrl
inc
adc
insb
mov
popf
mov
les
push
cmp
xor
fistpll
jecxz
addr16
pop
push
pusha
cmpsl
call
into
clc
pop
sti
xchg
insl
adc
mov
jle
loope
dec
pop
adc
xor
xchg
insl
xor
xchg
add
xor
push
xor
insl
fwait
jmp
mov
addr16
inc
push
sbb
xchg
xor
in
sub
shl
out
outsb
popf
pop
mov
pop
cvtdq2ps
les
jb
or
sar
test
or
dec
dec
lods
push
xor
mov
mov
sti
test
lret
sti
push
xchg
and
and
mov
loop
incl
xchg
pop
push
gs
fsubl
std
pushw
cmp
popf
lock
jecxz
sub
adc
jp
std
push
dec
ss
addr16
insb
lret
lea
test
add
pop
rorl
in
sbb
adc
adc
jae
jle
inc
sub
jg
or
rol
add
call
nop
sub
or
xchg
xchg
frstor
mov
ljmp
mov
mov
pop
orl
andl
ss
fcmovbe
jno
mov
cmc
dec
iret
or
mov
cwtl
cmp
push
push
outsl
cmp
repnz
pop
dec
cmp
sub
inc
negl
negb
negl
sub
shll
or
loope
aad
jns
sarb
daa
jl
xor
jle
mov
sbb
inc
cmpsb
mov
cltd
lods
mov
cmp
lods
jg
xor
inc
push
or
dec
jnp
je
adc
fwait
push
inc
xchg
fistps
mov
adc
cmp
out
fstpt
lds
pop
push
flds
mov
or
dec
xor
push
shlb
mov
push
in
nop
xor
push
shrl
call
std
xchg
bound
sub
loop
add
data16
sub
clc
mov
pop
mov
xor
cmp
rorl
push
fcoms
movb
or
pop
inc
xchg
lock
mov
cmpsb
movsb
movsl
in
shrl
adc
gs
out
loope
aaa
ja
in
popa
dec
sub
sub
movsl
call
xchg
mov
xlat
stc
dec
mov
outsb
jecxz
dec
xchg
and
pop
xor
repz
sbb
and
push
js
out
ds
ljmp
mov
mov
popa
loope
loope
hlt
repz
push
shll
loop
add
aad
mov
pop
cmc
test
test
andl
call
mov
pusha
in
mov
and
inc
jl
flds
mov
sub
pop
adc
pop
inc
sbb
jl
testb
inc
in
sbb
push
push
lods
jle
enter
xor
addb
cmpsl
lock
and
xchg
lods
sub
daa
xchg
cmpsb
sub
jecxz
dec
lock
push
mov
jo
sbb
dec
and
dec
fwait
jo
pop
jp
or
and
add
mov
dec
cmc
xor
js
mov
xor
lret
push
lahf
pop
dec
sub
cltd
xchg
addr16
push
push
jb
pop
push
icebp
and
mov
cs
xchg
mov
adc
inc
in
imul
jmp
jb
mov
fdivr
aad
cmp
xor
inc
cld
sub
imul
or
dec
push
xchg
loopne
fmuls
mov
pop
pusha
pop
inc
adc
add
add
pop
aas
fwait
ret
pop
int3
shll
ja
outsl
jmp
addb
jae
xlat
mov
mov
insb
mov
lods
into
inc
sub
add
leave
jg
loop
jl
pop
sub
xchg
mov
cmp
dec
jno
fwait
mov
xchg
mov
cmc
test
fdivp
xchg
mov
and
lret
push
out
aas
xchg
loop
hlt
jmp
dec
jl
das
inc
test
arpl
pop
push
jg
pop
fnstcw
xor
ds
jo
dec
cmp
cmp
ffreep
mov
int3
dec
ds
out
std
mov
push
fs
cmpsl
cmpsl
jnp
es
xor
pop
pop
xchg
push
out
clc
fists
xor
mov
xchg
jg
cmp
sbb
mov
adc
xchg
push
or
lds
mov
pop
cmp
sbb
fimull
mov
mov
in
cmp
inc
jae
movsl
add
xchg
mov
push
xchg
sub
popf
test
jbe
pushf
xlat
mov
pop
or
data16
and
sbb
rorb
jmp
sub
sub
pop
loopne
test
or
add
lds
sbb
sbbb
loop
mov
rolb
mov
test
xchg
xchg
nop
je
loope
int
cltd
sub
lcall
gs
sbb
fsubrl
add
scas
jecxz
hlt
and
aad
sbbl
pushf
inc
xchg
nop
inc
test
add
pop
mov
and
jge
cli
cs
lods
shrb
mov
lds
xor
cmp
aam
scas
pop
mov
hlt
cli
mov
cs
dec
inc
clc
mov
ss
sub
in
adc
adc
push
push
and
sbb
inc
pop
bnd
insb
pushf
and
inc
xchg
jnp
sub
hlt
arpl
into
push
notb
mov
es
inc
clc
mov
xchg
stos
ds
jbe
cli
cld
lods
fwait
pusha
loop
mov
add
mov
xor
lods
xor
ja,pt
jmp
jno
enter
movb
in
xchg
testl
in
popa
push
xlat
repz
and
sub
xor
enter
addr16
dec
jae
mov
cmp
loopne
dec
sub
push
addr16
outsb
add
fiaddl
jbe
mov
xlat
mov
mov
mov
shlb
iret
inc
push
pop
orl
and
mov
add
and
pop
ds
test
adc
cmp
lods
in
loop
loopne
sbb
and
xchg
mov
movsl
lcall
repnz
in
xor
mov
adc
cmp
and
sbb
lret
imul
and
aas
xchg
mov
rdmsr
nop
push
or
les
rcrl
mov
fidivl
jae
push
mov
ss
leave
ds
fnstcw
dec
pop
cmp
out
arpl
fldl
cld
mov
inc
pop
adcl
xchg
jb
add
adc
int3
ja
and
adc
pushf
ljmp
idiv
scas
add
iret
test
fucomip
mov
dec
add
jp
xchg
mov
sub
fsubs
push
shlb
stos
mov
mov
bnd
ficomps
pop
mov
pop
jns
outsb
lods
sub
rcr
xor
popf
outsl
lods
imul
jns
les
repnz
jb
xchg
stc
movsb
push
ret
dec
sbb
xlat
adc
jp
push
scas
testl
pop
jo
ja
lods
test
xor
sub
sub
lods
neg
notl
mov
lret
or
mov
shr
sti
loopne
fmuls
shll
ds
jp
lock
pop
mov
mov
or
loope
jne
es
js
xchg
les
fsub
into
xchg
rclb
or
loop
subb
imul
fbstp
cmp
es
pusha
cld
jb
xchg
cmp
add
and
loope
loope
bound
mov
insb
jnp
lahf
mov
pop
push
cmp
mov
pop
inc
sbb
ret
mov
imul
into
je
enter
dec
mov
nop
push
adc
xchg
jp
xor
enter
inc
arpl
xchg
jmp
loop
stc
bound
mov
cmpl
mov
test
sub
sub
adc
pusha
test
pop
or
arpl
dec
and
jae
pusha
xor
push
aaa
sub
jp
shlb
and
cmc
or
jae
sahf
sti
xor
xor
mov
pop
mov
insl
pushf
pop
mov
lahf
cmp
aam
mov
icebp
push
adc
cltd
cmp
out
cmp
les
pop
inc
mov
add
jbe
clc
jb
pop
mov
js
cmp
in
ljmp
ljmp
dec
sub
ja
aam
inc
add
xor
jne
test
mov
fbld
xchg
jp
mov
xchg
movsb
inc
and
ljmp
lcall
add
sbb
adc
jbe
std
xchg
push
das
sbb
adc
lcall
test
and
mov
stos
insb
and
jae
out
add
loope
lret
rcl
ret
shll
insb
rol
mov
push
jmp
outsl
jge
or
push
xlat
int3
fistpl
hlt
ds
gs
pop
xor
dec
sbb
es
rolb
into
xor
pop
ds
ss
rcll
jmp
das
sub
mov
mov
mov
add
jo
in
inc
sub
aaa
out
in
daa
in
ja
mov
or
xchg
add
inc
jb
les
inc
mov
jns
add
fucomi
push
hlt
or
mov
adc
mov
sub
pop
cmpsb
sub
xor
lret
jecxz
int
and
jmp
outsb
sahf
xchg
push
add
push
xlat
loopne
pop
mov
adc
ja
ja
push
mov
jmp
ljmp
sbb
clc
outsl
jnp
pop
lret
pop
mull
in
jle
cltd
mov
aam
ds
cmpsl
cmp
add
rorb
mov
cmp
pop
imul
lea
andb
and
icebp
push
and
inc
movsb
dec
push
into
or
mov
mov
in
push
sbb
dec
push
imul
ds
pop
imul
les
xlat
jae,pn
insl
inc
dec
outsb
push
pop
xchg
sarl
dec
inc
adc
and
hlt
popf
adc
xor
pop
cmp
pop
add
aas
jmp
imul
es
in
sub
test
add
xor
xchg
sbb
out
clc
loope
mov
jb
aad
popa
jb
mov
ds
lcall
dec
jle
lock
push
ss
jge
popf
std
jl
adc
out
sbb
cmpsl
insb
outsb
mov
mov
lret
mov
cmpl
inc
das
mov
push
xchg
ret
jp
fiaddl
cltd
sahf
call
in
in
nop
insl
in
adc
inc
and
ja
adc
aas
adc
mov
js
int
icebp
lret
subl
aas
rcrl
test
xchg
or
sbb
adc
ljmp
pop
fmulp
sub
out
jne
sub
fimull
rorb
sub
pusha
add
out
cli
jnp
outsl
add
adc
idiv
das
es
pop
or
pop
mov
imul
rorb
dec
xor
cmp
scas
jae
stos
jo
xchg
sbb
bnd
jecxz
test
rorl
add
push
adc
cmp
je
jge
scas
cli
mov
and
and
mov
orl
sub
or
xor
mov
push
inc
add
and
sub
cltd
and
xor
pop
mov
or
mov
xor
pop
mov
das
sar
lods
pop
rclb
and
sbb
ficomps
sbb
push
in
inc
jne
push
add
out
sub
mov
or
cmpsb
xor
out
iret
shl
sub
dec
push
aam
mov
mov
sbb
bound
mov
out
or
mov
inc
dec
pop
andb
fsubs
lds
fisttps
sub
jp
cmpsl
pop
mov
cwtl
cmpsb
rcl
fmuls
pop
mov
icebp
adc
push
pop
pop
sub
pop
add
jb
stos
add
sbb
pop
push
ret
xchg
into
je
in
add
push
aaa
repnz
and
mov
decl
adc
jnp
test
movl
mov
nop
imul
xchg
stc
add
push
lahf
mov
jge
mov
mov
call
inc
adc
movsl
push
push
inc
sbb
cltd
imul
adc
out
push
or
jle
stc
fadds
mov
jns
cmpsl
lea
or
xchg
psubusw
negb
add
jno
stc
inc
in
mov
adc
push
cmpsb
nop
movsb
fsubrs
push
fwait
stos
stos
gs
cmp
add
push
mov
pop
imul
mov
cmp
xor
jbe
into
into
xor
add
pusha
icebp
scas
jae
mov
clc
pop
lcall
pop
stc
mov
push
aam
adcl
jecxz
hlt
ja
push
mov
mov
jg
xchg
mov
sub
push
lahf
and
loope
jmp
jae
pusha
adc
mov
in
repnz
cmpsb
lods
jns
xchg
in
or
fidivrl
lcall
shl
ret
mov
mov
je
ret
adc
aam
lock
or
cmp
pop
mov
xchg
repnz
jmp
in
and
test
jae
iret
sub
loop
lret
aaa
lods
jl
push
sub
test
push
push
sbb
loopne
xchg
sub
popa
sti
pop
push
sbb
and
scas
sbb
lods
test
pop
and
sahf
or
fsubs
xchg
xchg
pop
arpl
orb
sahf
lea
lahf
xor
and
leave
pushf
in
jnp
addl
push
mov
and
inc
cwtl
pusha
mov
adc
adcb
adc
mov
xor
pop
pop
mov
xchg
es
mov
inc
pop
loope
fadds
imul
std
push
mov
mov
sti
imul
sbb
fmuls
mov
jmp
and
aam
fidivrs
and
mov
jbe
or
push
or
out
sub
lea
xor
pop
in
or
push
add
test
inc
mov
xchg
fstl
ljmp
fdivl
in
mov
adc
xor
inc
inc
imul
jns
xor
xor
lods
icebp
pop
add
das
addr16
loope
xchg
rclb
mov
xchg
push
loopne
add
fcmovnu
jno,pt
lcall
mov
and
xor
fimull
cmpsl
sbb
icebp
inc
mov
decb
sbb
xor
push
repnz
fstpt
pavgw
adc
cmp
and
in
dec
xor
lods
and
mov
push
rorb
xchg
mov
inc
mov
mov
rcr
repnz
inc
mov
out
xor
sbb
dec
je
dec
stc
mov
jle
jmp
push
xor
aad
sbb
negb
mov
mov
aas
jo
xor
push
rorl
push
fiadds
inc
fs
mov
add
test
cmp
decb
xchg
scas
stc
push
jb
inc
mov
mov
mov
imul
or
cs
stos
sub
gs
ret
inc
jecxz
ss
in
enter
xor
in
call
or
cmpsl
sub
xchg
jno
push
imul
inc
cmpsb
mov
scas
test
pop
xchg
lods
add
mov
xor
mov
fnstsw
bound
cmp
and
pop
imulb
inc
dec
pop
push
adc
test
mov
pop
xchg
jns
icebp
cmp
mov
mov
cmpsb
hlt
mov
jp
fsts
clc
popa
xchg
jg
jl
xchg
out
mov
jo
mov
push
mov
push
mov
dec
fidivs
rclb
cs
mov
xchg
jnp
test
cmp
push
sbb
jmp
test
cmp
ja
repz
mov
test
xor
sub
jl
sub
jge
dec
orl
loop
fistps
mov
fdiv
pushf
or
mov
sub
xchg
std
in
mov
enter
pop
cmp
inc
adc
pop
add
jge
sarl
data16
pop
cmp
int
inc
push
mov
decl
stos
pop
popf
loop
and
and
call
fnstcw
inc
xchg
ja
aad
jns
addl
xor
das
pop
add
pop
xor
leave
in
jnp
ljmp
ret
xchg
lods
push
nop
scas
outsl
cltd
jge
lahf
test
mov
cmp
aas
jmp
fistpl
out
mov
mov
aaa
pop
sti
or
inc
imul
test
jbe
daa
add
xchg
dec
aam
jecxz
xor
and
das
scas
jge
lods
and
inc
xchg
loop
das
mov
add
cltd
imul
or
idivb
xor
sub
lds
inc
hlt
or
test
popl
jbe
add
jbe
fs
je
xchg
out
pop
jmp
push
sbb
and
scas
sbb
enter
cld
popf
add
aas
mov
mov
xchg
push
sub
shr
jmp
jae
xchg
mov
bswap
mov
inc
cld
lcall
popa
push
in
insb
repnz
nop
mov
mov
adc
mov
outsl
jecxz
mov
and
push
fcoml
ds
mov
xorb
push
lea
sahf
add
repnz
jge
cld
int3
cmp
pushf
bnd
int3
sbb
stos
mov
hlt
and
addl
cmp
cwtl
jbe
into
iret
arpl
jg
adc
pop
sbb
jne
in
clc
nop
int3
hlt
jae
lcall
loop
dec
aaa
xchg
mov
jb
lret
hlt
jnp
arpl
bound
jne
out
imul
cmpsl
xchg
jo
mov
xchg
inc
inc
insl
inc
sahf
adc
clc
or
dec
flds
les
repnz
negb
iret
xchg
js
cmp
xor
mov
enter
xorb
mov
inc
mov
stos
xchg
xchg
stos
test
sbb
jo
cs
mov
clc
pop
or
sub
or
aad
fstps
jecxz
xchg
or
dec
bound
adc
sarl
movsb
lahf
cmp
xor
mov
add
cmpsl
fisttpl
lds
lds
sbb
xchg
dec
leave
in
jmp
test
icebp
mov
sub
sbb
jl
push
je
cmp
dec
cvtpi2pd
inc
pop
popf
insb
repz
mov
fstpt
cmp
push
mov
shlb
scas
sti
mov
xorb
xchg
popl
add
or
std
in
mov
inc
mov
xchg
sbb
incl
xor
and
push
lahf
std
mov
and
lret
stos
stc
ja
pop
lahf
iret
pop
daa
sahf
mov
or
mov
add
hlt
jp
push
insb
es
pop
inc
pop
pop
cld
mov
and
test
fcoms
cli
mov
cwtl
jp
inc
loopne
test
lods
dec
stc
in
aaa
adc
mov
cs
jmp
push
mov
adc
xchg
imul
outsl
repnz
and
aas
fisttps
movsl
inc
imul
mov
push
or
push
and
mov
mov
pop
adc
stc
fidivrl
int3
adc
test
xor
mov
addb
test
mov
mov
in
sub
lds
inc
adc
jb
xchg
mov
shrb
sub
adc
aad
clc
mov
decl
stos
xor
jg
or
lahf
add
out
adc
test
mov
aam
fsts
andb
push
mull
ds
xor
test
sahf
or
ljmp
push
sbb
xchg
add
pop
fmull
mov
pop
or
lcall
in
test
scas
daa
pop
in
lock
xor
sbb
and
and
enter
mov
cmp
or
mov
inc
inc
aam
mov
test
loop
popa
pop
cmp
push
lods
fiadds
dec
inc
jnp
dec
pop
and
pushfw
jb
xchg
imul
mov
pusha
les
fmul
ss
imul
cmp
push
gs
sub
lret
aam
jns
les
jnp
xor
stos
iret
mov
fidivrl
mov
loopne
lcall
mov
lret
push
shrb
je
divb
mov
loope
jno
push
adc
test
mov
xlat
lret
les
adc
fs
inc
dec
out
xchg
loopne
mov
mov
icebp
movsl
test
xchg
jp
lods
lods
mov
imul
mov
out
xchg
xchg
push
push
dec
jno
sub
xchg
mov
ret
js
mov
dec
test
mov
cmc
inc
mov
mov
mov
cwtl
cmp
fldt
jle
scas
sub
loope
test
dec
cmpsl
movsb
insb
scas
imulb
ja
out
into
sti
leave
out
aam
push
pop
insb
adc
pushf
out
sarl
out
xchg
push
cmpsl
add
jns
xchg
jo
adc
out
xchg
mov
movsb
mov
mov
jle
call
cmp
addr16
inc
imul
nop
dec
lahf
movsl
scas
inc
xor
xor
into
stos
popf
lret
adc
push
pop
xchg
mulb
rcrl
dec
dec
push
sbb
push
xchg
das
lret
cwtl
mov
cs
fucomip
in
sbb
dec
cs
jg
aad
inc
jmp
dec
mov
push
inc
dec
mov
pusha
jnp
sbb
jmp
pop
mov
dec
inc
cmp
xchg
sub
leave
iret
push
pop
jae
repz
and
or
int3
xor
xor
add
adc
stos
sub
std
stos
dec
stos
push
mov
or
mov
decb
rolb
std
pusha
jg
testb
lret
push
jns
jmp
push
sahf
daa
sub
imul
mov
shll
mov
dec
jbe
fistl
cmp
sbb
push
sbb
and
push
adc
addr16
outsb
popa
dec
xorb
xchg
sub
pop
xor
shl
jecxz
dec
adc
mov
sbb
push
or
rcll
std
xor
dec
jbe
loope
cmp
pop
xchg
adc
nop
aas
jne
and
push
lock
jbe
mov
stc
xchg
cmp
inc
arpl
inc
xor
jo
and
es
xor
lret
or
inc
mov
adc
js
aas
sub
cmp
aaa
vmwrite
xchg
shlb
or
aaa
mov
out
jg
adc
es
vpshufhw
jl
les
lret
popf
test
sub
pop
sub
adc
std
test
push
cmpsb
jmp
insl
or
sti
je
add
push
lea
mov
rolb
xchg
dec
mov
lea
inc
mov
push
pop
add
mov
call
mull
pop
das
mov
jmp
xchg
jns
mov
in
inc
cltd
shr
mov
xchg
shrb
dec
jecxz
les
cmp
call
fdivrs
adc
xchg
xchg
sbb
sti
insb
jnp
fiaddl
cmp
leave
mov
negb
lods
icebp
pop
rcll
cmp
data16
cld
push
sub
add
je
xchg
dec
adc
sbb
rorb
pusha
xor
adc
xchg
push
xchg
jbe
popf
xor
stc
xchg
insl
lods
xchg
or
adc
sbb
jnp
xchg
lret
rcr
fadds
pop
sbbl
dec
sub
push
pop
lds
fldl
lea
mov
xor
push
jle
lahf
ret
daa
sbb
mov
pushf
mov
stos
xchg
sub
and
jne
push
ret
cmc
or
stc
xchg
mov
mov
ljmp
jb
jb
mov
pop
inc
xor
aas
jno
pop
test
pop
mov
pop
mov
sarb
sub
daa
push
push
lock
push
sub
jb
loopne
cmp
inc
jmp
inc
jp
prefetcht2
mov
mov
mov
inc
shrb
mov
cmp
jae
movsl
lock
sub
insb
and
lret
fstps
dec
adc
dec
lods
lcall
adc
and
xchg
mov
gs
into
out
arpl
sahf
mov
xchg
decb
cmp
mov
incl
pop
mov
scas
add
mov
adc
jb
mov
mov
stc
and
sbb
iret
sti
and
ror
call
enter
push
add
xchg
sarb
pop
xchg
inc
mov
insb
dec
imul
mov
xchg
call
and
ficompl
aad
hlt
movb
orb
mov
call
mov
aad
xchg
push
scas
cmp
and
sbb
jmp
shll
repz
push
lods
mov
xchg
cmp
sub
sub
andl
in
jge
cmp
xor
nop
xlat
mov
out
int3
jge
fimuls
inc
lcall
pop
push
imul
mov
les
nop
sbb
jle
jge
mov
loope
dec
and
cs
sbb
cmpsl
icebp
mov
lods
mov
fisubrl
inc
dec
loop
shr
and
das
mov
sti
ret
lods
dec
inc
popf
call
or
rcrb
adc
mov
push
xor
imul
leave
push
data16
test
stos
cld
ds
lea
cmp
add
js
xchg
sbb
dec
and
test
hlt
or
pop
mov
lds
and
xor
and
jbe
xchg
cmp
repnz
test
sbb
aas
push
mov
clc
cmpl
je
mov
jbe
jge
data16
xchg
push
and
out
cltd
mov
aas
pushf
loop
sbb
xchg
int3
icebp
and
call
xchg
xorl
xor
sbb
adc
gs
or
sub
cmpsl
xchg
cmp
add
mov
into
and
inc
roll
insl
fcoms
lcall
fs
xor
adc
mov
sub
mov
push
shrb
pop
mov
je
mov
mov
out
sub
ret
loop
inc
mov
lods
mov
call
jns
aad
push
dec
and
xchg
xor
or
inc
push
sub
push
xchg
test
add
xchg
dec
mov
dec
ljmp
popf
lods
pop
mov
addl
movsl
call
stos
pop
inc
push
test
outsb
sub
aas
jge
mov
mov
cmpsb
and
xchg
push
inc
outsb
cld
push
jno
or
stos
xor
mov
add
scas
ljmp
adc
shl
gs
pop
cmpsl
test
sbb
add
push
jl
je
inc
adc
loopne
sbb
push
jns
jno
ljmp
scas
pop
pop
mov
or
and
xchg
aas
pop
pusha
in
cmp
cli
int3
inc
mov
stos
sbb
fsubrl
xchg
sti
aad
pop
es
popa
jnp
cmp
out
insl
or
test
shlb
push
out
sub
int3
cmp
addb
roll
daa
movsl
fwait
xor
dec
xchg
sbbl
leave
push
bound
fnstsw
jnp
jno
push
leave
sub
sub
inc
jb
dec
imul
push
fwait
daa
add
es
lea
jp
test
je
out
aam
add
test
ljmp
jo
add
jno
fsubs
movd
and
push
xchg
popf
jge
sar
arpl
cmp
out
sub
lods
shrb
adc
aas
push
mov
mov
jns
add
stos
pusha
or
punpckldq
adc
cs
addr16
jae
in
fsubrs
ss
and
xor
and
bound
mov
push
jnp
lahf
push
pop
stos
mov
push
and
aaa
gs
adc
sti
movsb
jg
movsb
add
jl
loop
dec
stos
fs
sti
cmc
out
jmp
sbb
fnstenv
mov
jg
inc
clc
push
popa
jge
or
insl
ja
and
jnp
ljmp
and
adc
jmp
jb
jnp
or
ret
cmp
add
cs
jns
mov
movsl
dec
sub
pushf
sub
les
out
leave
pusha
dec
mov
adc
nop
int
out
arpl
add
and
push
aas
mov
lods
test
push
nop
cmp
inc
xchg
jle
mov
sarb
mov
lea
loop
test
mov
xchg
xchg
push
mov
adcl
jle
push
out
xchg
mov
es
jno
dec
sbb
notl
or
inc
mov
call
xor
push
xchg
test
add
inc
stos
sub
aas
pusha
cld
sbb
inc
cmp
movsl
lcall
add
and
pop
mov
aad
repz
sub
dec
mov
fdivrl
sbb
adc
cmp
or
lret
repz
roll
and
arpl
div
test
xlat
testl
sbb
ds
mov
repnz
pop
ljmp
xchg
mov
lods
pop
mov
dec
xchg
xchg
jp
inc
xlat
cwtl
in
inc
mov
int3
ret
jno
daa
call
pop
push
inc
dec
push
and
sbb
pop
or
and
lret
mov
mov
out
pop
cmc
mov
inc
xchg
iret
roll
loopne
push
push
fisubrl
gs
push
fldt
jo
jl
lea
adc
cmp
int
int
mov
inc
into
push
lock
dec
imul
lds
in
fxch
sbb
sbb
dec
xchg
dec
mov
xchg
mov
lahf
loopne
mov
loope
ljmp
ss
mov
loope
dec
push
mov
push
cld
sub
jle
popf
push
aaa
mov
sub
popf
shlb
jl
push
es
subl
lret
into
nop
ffreep
jp
push
jno
daa
lea
xchg
sahf
jmp
push
adc
mov
xchg
mov
pcmpgtb
mov
xchg
xor
cltd
out
ret
repz
cmc
outsl
jb
mov
mov
inc
movsl
sub
or
mov
jns
movb
bound
pop
jmp
fwait
pop
xor
dec
sbbl
jecxz
or
xor
xchg
sub
test
pusha
cmp
cmpsb
gs
add
or
push
cmpsb
icebp
xchg
pop
add
inc
and
xchg
pop
push
or
cmpsl
sbb
leave
idivb
or
loope
or
ss
add
arpl
aaa
adc
mov
xor
out
std
cli
ja
data16
lahf
add
sub
mov
inc
sub
mov
adc
testb
jns
negb
sub
push
xor
cmc
inc
loopne
inc
mov
test
ja
sahf
adc
cmp
loopne
xor
sub
cmp
adc
jg
lret
jecxz
mov
into
lret
cmp
lahf
jne
fiadds
sti
dec
sub
mov
mov
insb
mov
fstl
cs
push
add
cmpl
sub
adc
mov
jmp
sub
push
pop
out
mov
add
dec
mov
mov
fnstcw
mov
in
repz
into
jne
push
add
mov
and
mov
loop
lret
jmp
mov
daa
ljmp
arpl
ret
lods
pop
and
std
push
filds
scas
rcrb
std
xor
int3
jb
adc
jg
sub
mov
pop
jle
mov
sub
daa
dec
mov
rclb
pop
dec
fistpl
shll
lahf
mov
sub
or
ficomps
fidivl
fnstsw
jnp
jecxz
pop
lcall
or
sbb
adc
cs
mulss
mov
inc
cmp
sbb
mov
xchg
push
mov
mov
add
popa
popf
sbb
mov
cmpsl
enter
xor
test
adc
and
repnz
cmpsl
popf
aad
dec
mov
jno
es
dec
fcmovu
mov
test
mov
addl
inc
add
negl
and
adc
xlat
mov
test
lods
test
push
pop
xor
sub
aas
mov
rcr
por
adc
test
sbb
cmp
outsb
add
push
cmpsl
pop
clc
fsubs
adc
inc
ret
mov
mov
lret
loope
and
push
lret
or
xchg
test
popa
pop
repnz
testw
lds
dec
push
daa
adc
rcrb
loope
out
lret
mov
mull
mov
pop
xor
sub
les
dec
cli
je
test
adc
push
cltd
inc
cmp
adc
fldcw
loop
dec
or
mov
scas
jecxz
fistps
jp
add
xchg
cltd
xchg
or
xchg
jns
outsb
int
imul
cmpsl
fimull
imul
popa
test
dec
xor
daa
xchg
stos
aaa
test
jns
repz
addb
into
ljmp
xor
or
mov
mov
cltd
test
push
pop
cmp
mov
xchg
and
push
push
cmc
push
fwait
cmp
sahf
in
scas
cld
sbb
dec
pop
mov
push
out
mov
mov
rorb
iret
popf
fwait
ss
adc
add
icebp
push
mov
push
and
add
outsl
shlb
mov
es
into
repnz
jmp
cmp
shll
cmpb
jo
cmp
dec
lds
mov
cmp
jo
jno
cwtl
outsb
mov
nop
xlat
mov
push
mull
mov
mov
out
mov
adc
sbb
jecxz
fcoml
jle
mov
and
push
popa
lcall
sub
add
mov
sub
icebp
mov
jne
sti
test
jno
fldenv
pop
cmpsb
sbb
je
cmpsb
dec
xchg
or
dec
pop
mov
mov
cs
loopne
ljmp
push
addr16
andl
sbb
jp
pop
push
in
dec
adc
int
out
fsubrl
stos
pop
sbb
pop
and
pop
adc
and
idivl
jg
movsb
xlat
daa
sub
mov
stc
adc
xlat
jp
cld
jae
jnp
addr16
lret
add
test
xor
out
mov
dec
xlat
cld
arpl
mov
orl
mov
fdivs
adc
lcall
fldl
adc
les
test
out
ficompl
lock
ret
push
push
mov
jg
push
cld
mov
xorl
jns
pop
or
les
lret
and
adc
inc
int3
add
sub
mov
add
push
pop
pop
in
out
scas
jb
sbb
xor
bound
leave
mov
lret
mov
je
pop
sahf
mov
lahf
or
mov
std
pusha
and
stos
or
in
orl
pushf
mov
out
mov
pop
imul
mov
pop
jl
jmp
outsb
mov
scas
cmp
repz
arpl
jns
out
pop
push
arpl
imul
xchg
cmp
insl
pop
mov
fisttpll
adc
icebp
test
jp
daa
cmpsl
inc
flds
cli
outsb
scas
jo
add
pop
jo
push
inc
movsb
add
adc
andb
sbb
jns
ret
daa
je
pop
jb
je
iret
push
cld
shrl
sbb
adc
ljmp
stc
cli
clc
mov
xchg
add
mov
icebp
adc
aad
test
lcall
imul
mov
dec
cmp
repz
repz
pop
bound
mov
add
stos
or
stos
bound
cwtl
and
pop
in
and
pop
cmp
mov
mov
cli
xor
rcll
sbb
pusha
movsb
mov
cltd
and
cltd
jne
xor
scas
pop
movsb
xchg
dec
cmc
dec
adc
or
dec
aam
leave
loop
enter
sbb
xlat
sub
or
sub
inc
jmp
movsb
dec
nop
orb
mov
adc
cmp
sub
int
dec
sarb
test
sub
mov
inc
lds
mov
test
mov
push
sbbl
test
ret
and
inc
jg
sub
or
inc
sub
dec
mov
pop
pusha
dec
jecxz
or
inc
mov
push
pop
xor
xor
cli
mov
lods
mov
pop
rcr
push
pop
dec
cmp
addl
lret
xchg
pop
test
sub
and
jl
fst
pushf
pop
mov
shll
mov
xor
lret
pop
xorl
cltd
mov
rol
scas
or
jle
loopne
notb
inc
ss
iret
sbb
jo
gs
ja
inc
gs
adc
lret
adc
push
stos
jmp
lcall
mov
sub
aas
outsb
add
pop
pushf
mov
call
ljmp
adc
jge
push
and
imul
ds
pop
testl
lret
sub
fcmovnu
adc
mov
add
daa
push
test
xchg
fadd
cli
ret
sbb
jecxz
mov
fisttps
mov
stos
xor
jmp
bound
mov
push
push
pop
or
sub
mov
stos
loope
sub
iret
sub
stos
push
add
mov
imul
xlat
sti
pop
dec
xchg
lcall
adc
cmc
adc
loopnew
mov
pminub
insl
or
sub
inc
out
mov
or
cmpsb
and
js
cmpsb
aam
inc
fstl
xor
push
lock
movsl
jns
and
lods
and
inc
test
pop
pop
popa
cwtl
loop
push
xchg
imul
push
adc
dec
xchg
cs
mov
add
push
mov
cmc
cmpsb
sub
jl
cmc
mov
mov
add
ja
aas
push
sub
daa
add
adc
mov
inc
arpl
jecxz
aaa
mov
jecxz
pop
outsb
jae
nop
sbb
add
push
nop
push
sbb
xchg
mov
int
pop
popf
sub
fstps
lods
leave
mov
dec
and
sub
cmp
mov
rcrb
sahf
dec
push
ja
or
icebp
pop
ja
jle
mov
pop
pop
and
pusha
inc
fists
mov
aaa
adcb
sbb
dec
or
and
push
leave
jmp
xchg
ja
psllw
pop
test
aad
sub
jmp
and
pop
js
xchg
lret
popa
es
vcomisd
mov
sub
movl
cltd
lods
adc
fistpll
imul
cld
loope
jne
js
sahf
and
sbb
addr16
mov
sbb
inc
or
shr
fs
mov
je
push
add
mov
es
ljmp
mov
testl
adc
js
shll
in
jge
arpl
aaa
xor
add
push
in
xor
sbb
dec
pop
rorb
lret
cmpsb
lds
mov
lcall
lock
fbld
jno
push
jo
fmull
test
ret
push
push
or
outsb
lock
loopne
loopne
out
shl
sbb
or
and
fstp
mov
push
sahf
xor
stos
rorl
rolb
pop
bound
out
add
test
mov
or
loopne
push
adc
or
pop
sub
add
hlt
aas
inc
nop
add
dec
pop
ds
pop
adc
jp
jecxz
inc
mov
adc
adc
int
scas
lcall
popf
cld
dec
addr16
mov
std
jbe
xchg
aas
stc
xchg
scas
or
ret
xchg
call
mov
xor
popf
inc
push
les
das
in
fidivs
dec
loopne
mov
pop
jge
cmp
xor
add
inc
sbb
js
mov
in
ja
mov
adc
iret
ret
imul
sti
sub
push
sbb
insl
pop
inc
cmp
leave
inc
push
sub
out
cltd
aas
dec
imul
loopne
in
mov
icebp
add
dec
in
pop
shrb
mov
mov
dec
sub
jle
outsl
cmp
lret
jns
je
dec
scas
inc
shlb
xchg
loopne
notb
call
test
mov
lret
jp
cli
jle
call
rcrb
and
and
and
out
test
dec
add
lea
pusha
mov
pop
cmpsb
and
addr16
adc
repz
stos
or
les
cmp
mov
ret
xchg
pop
stc
inc
mov
pop
mov
cmc
cwtl
cld
sub
jge
and
out
out
aad
popf
out
dec
fisubs
fstpl
repz
stos
imul
ds
outsb
sub
cmp
pop
push
cmp
jae
insl
adc
sub
xchg
into
mov
adc
add
aas
pop
shr
push
aam
jne
mov
push
xchg
push
add
movntps
lods
adc
out
push
enter
dec
mov
sub
or
icebp
or
psrlq
in
sub
inc
inc
insl
in
popf
push
call
nop
mov
testb
add
push
sub
xchg
jge
in
jmp
add
rcl
lahf
lods
mov
add
sub
sub
cmp
and
mov
repz
out
dec
xor
lcall
sub
scas
or
clc
xor
dec
pop
mov
daa
popf
jne
lahf
clc
ja
andb
and
add
pop
adc
adc
mov
or
cld
xchg
inc
lret
or
icebp
ja
mov
xchg
pop
bound
outsb
cmp
dec
jl
shrb
add
or
mov
cmp
jg
mov
shlb
popa
dec
mov
cmpsl
inc
sbb
cmpsb
adc
xor
jno
sbb
jno
aas
lods
jns
lea
nop
dec
mov
jp
add
mov
sarl
inc
mov
mov
cmpsb
arpl
pop
scas
das
sbbb
out
movsl
imul
mov
sahf
mov
and
push
sbb
xor
lock
scas
cmp
pop
int
inc
cmpsb
shll
cmc
sahf
mov
cs
mov
jge
and
call
out
enter
pop
mov
cld
stos
sbb
add
or
into
stos
loopne
sub
cltd
cwtl
or
in
outsb
and
inc
fstps
pusha
imul
dec
insl
mov
pop
sub
sub
xchg
pop
sahf
cmp
dec
sub
fwait
das
add
dec
and
fsub
in
jge
push
pop
mov
in
movsl
add
push
push
inc
jbe
adc
sub
sub
inc
mov
clc
sub
mov
dec
imul
mov
mov
jnp
mov
bound
aad
push
daa
jns
push
lds
ja
xor
mov
in
mov
out
arpl
ret
inc
ja
mov
jbe
ret
pop
jnp
lret
repnz
push
sti
rcr
jno
push
int3
xor
cmp
sub
rcll
dec
cmp
cmpsb
test
cmp
je
inc
push
repz
or
jbe
sbb
sub
imul
mov
dec
mov
cs
pusha
jg
inc
fidivrs
stos
mov
cmpb
jno
lahf
and
push
xlat
clc
ds
or
test
loope
pop
mov
ficoml
addb
ja
shl
lahf
das
lret
jle
aas
stos
mov
sti
dec
das
movsb
mov
pop
aad
jne
ja
hlt
sbb
sub
incb
xor
xor
cwtl
mov
mov
andl
jmp
xchg
push
push
dec
divb
fbld
aaa
lahf
sub
popa
iret
lds
emms
jecxz
gs
outsb
cmp
cmp
inc
pushf
insb
lods
mov
push
mov
stos
clc
aam
in
mov
lahf
gs
mov
mov
sbb
mov
popa
pushl
loopne
mov
lods
fs
add
jg
mov
nop
fidivl
stos
mov
mov
dec
xor
pop
mov
ds
push
cmp
sbb
shlb
mov
pop
fmuls
adc
add
mov
mov
and
dec
out
mov
clc
xor
lock
xor
scas
dec
out
sahf
nop
sbb
mov
pop
push
test
mov
inc
gs
push
xor
cmp
fidivs
pop
mov
or
inc
xchg
call
mov
xchg
leave
jno
push
sbb
roll
ficoml
sub
xor
in
jo
jmp
movsl
xchg
cmpb
dec
add
inc
daa
dec
scas
push
stc
mov
push
flds
fdivrs
mov
lret
in
fmull
cmp
mov
mov
shll
imul
ja
cwtl
push
ficoms
xor
divb
out
and
addl
mov
pusha
data16
cmp
add
adc
jecxz
sbb
adc
pop
int3
mov
sarb
pop
fldenv
xor
cmp
push
mov
mov
scas
adc
fs
out
xchg
or
sbb
mov
cltd
mov
and
pop
out
aas
js
push
clc
loop
rolb
pop
out
jmp
dec
scas
imul
cmp
mov
jmp
xchg
pop
dec
lock
mov
mov
pushf
les
and
test
scas
cltd
xorb
scas
sub
shl
add
pop
sub
inc
fistpll
cs
clc
mov
daa
push
lods
mov
lret
mov
add
testb
push
pop
jnp
loopne
cwtl
cltd
jge
jge
loopne
sbb
jge
or
cmp
add
outsb
int
ds
lock
pop
shll
push
fmul
push
addr16
dec
mov
outsl
pushf
cmp
imul
into
sbb
je
inc
rorb
sub
aam
data16
push
jg
xchg
push
daa
adc
and
pop
flds
xor
imul
xor
push
loope
or
sbb
je
outsb
sub
pusha
pop
sbb
call
jne
enter
xchg
test
bound
add
adc
fs
popa
ficoml
insl
adc
add
dec
fadd
lahf
imul
sbb
or
dec
xor
inc
testl
mov
inc
out
rcrb
fdivl
adc
cltd
ret
dec
ret
aad
and
sub
in
dec
sbb
imul
test
cwtl
and
les
aad
sub
push
cmp
ret
popa
cli
call
in
lea
iret
mov
lods
inc
rcrb
cmp
inc
testb
loop
xor
cmp
loope
call
cmp
xchg
jae
jecxz
pop
cmc
push
and
sub
repnz
mov
xlat
lds
test
adc
jmp
mov
sti
mov
out
jns
leave
push
inc
sbb
dec
jg
lahf
sti
mov
jbe
out
xchg
stos
in
test
and
mov
sub
rorl
sbb
iret
adc
mov
jne
jl
mov
sub
daa
push
jnp
and
push
xor
mov
repz
sbb
inc
aam
or
sub
pop
add
cmpsb
push
jbe
ja
int3
std
inc
out
lds
loope,pt
mov
ret
xorb
inc
shl
push
or
test
js
scas
pop
jg
je
sub
test
data16
xor
sti
cmp
dec
std
mov
mov
xlat
pop
shlb
or
shl
xchg
push
push
frstor
dec
cmp
shrb
cs
repnz
and
and
xor
movb
jnp
cmp
jl
push
pop
jns
ja
mov
sbb
jb
xor
out
out
lcall
push
cmp
push
stos
dec
mov
fdivr
insb
pop
and
mov
jne
sbb
mov
mov
and
mov
stos
popf
adc
sub
lods
jae
sbb
nop
and
cmc
jg
pop
jns
fwait
push
mov
lds
ljmp
sub
inc
pop
inc
ret
cld
xor
cmp
ja
mov
pop
ret
test
negl
das
imul
mov
int3
mov
and
idivl
shrl
dec
fstpl
mov
push
dec
push
lock
pop
jmp
mov
scas
jno
dec
inc
jo
fbld
movl
xor
stc
add
mov
mov
inc
fs
adcl
imul
insb
loop
andb
mov
mov
add
push
or
mov
xor
leave
aam
orb
jbe
jge
pusha
xor
mov
adc
push
sub
mov
jmp
cmp
lret
div
divl
mov
je
and
imul
fucomip
shlb
daa
clc
repnz
xchg
pusha
mov
mov
mov
mov
insl
les
mov
rcll
test
int
lret
jne
enter
out
push
shrb
xchg
test
das
shrl
mov
mov
shl
addb
loop
and
gs
shrl
lret
jle
cmp
es
pop
mov
into
lcall
andb
lods
mov
push
sub
movsb
cwtl
jb
mov
movsl
adc
cmpsb
sub
shll
or
scas
lods
push
pop
push
sbb
inc
xor
xchg
test
stos
dec
fisttpl
push
popa
push
and
and
xor
test
xchg
mov
lea
ss
jns
xor
xor
mov
jmp
es
bound
pop
dec
and
pop
insb
hlt
sub
test
sub
out
and
or
es
pop
gs
pusha
stos
shrl
subl
cmp
add
mov
mov
inc
lods
cltd
in
loopne
inc
jge
test
ret
les
xor
jp
les
mov
push
int
xchg
inc
mov
xchg
dec
test
repnz
sti
lods
add
sub
add
pop
mov
sub
dec
popf
inc
jne
push
dec
lock
pop
xchg
inc
outsb
stos
xchg
je
mov
pop
xorb
lret
xchg
lret
mov
sbb
gs
jmp
sti
es
rorl
mov
test
jle
fsubrs
in
mov
pusha
mov
mov
sbb
testl
add
sbb
jno
inc
or
inc
sarl
mov
jl
or
icebp
push
cmp
mov
loop
push
pop
repz
pop
mov
into
xor
xchg
mov
icebp
test
outsb
and
cmp
stos
add
filds
cs
mov
mov
outsb
mov
sbb
dec
jno
fstps
sbb
xchg
gs
or
jecxz
mov
xchg
fisttps
movsl
mov
pop
mov
mov
and
cs
adc
mov
push
xor
in
adc
jg
stos
ret
ror
mov
inc
xchg
arpl
pop
jno
std
ljmp
es
dec
lods
mov
iret
popf
cmp
dec
pop
int
pop
test
out
mull
ret
xchg
jp
rcll
and
cwtl
dec
mov
hlt
xchg
dec
cmc
into
xchg
ljmp
fidivrl
cwtl
cmpsl
imul
sar
pop
aad
sub
xchg
ljmp
fbstp
in
mov
js
inc
test
loope
pop
or
add
push
ret
adc
jp
mov
data16
adc
dec
push
push
shr
outsl
fwait
pop
or
test
out
lea
les
sbb
imul
sbb
dec
push
or
inc
addb
cwtl
scas
scas
adc
add
sbb
adc
clc
inc
loopne
outsb
cld
pop
mov
push
pusha
clc
adc
pop
mov
ja
jecxz
or
adc
std
fucom
mov
inc
pusha
leave
xchg
xchg
icebp
jle
xchg
mov
dec
jmp
add
div
ret
push
add
add
inc
mov
aaa
inc
aam
cwtl
jmp
stc
sub
inc
insb
mov
out
test
adc
and
push
mov
jbe
fcomp
and
cmpsl
fsts
and
pop
add
dec
popf
aad
in
mov
subl
lock
mov
sbb
pop
xor
or
dec
dec
pushf
mov
cmpsl
dec
adc
add
mov
cmpsb
sub
in
test
xchg
loope
sbb
jp
dec
ret
ret
addr16
fcompl
mov
and
stos
jmp
mov
repz
push
popf
popf
call
jmp
call
test
fwait
sahf
outsb
jno
call
test
jns
in
dec
jmp
mov
das
out
push
pop
jmp
pop
and
cmp
lds
mov
mov
mov
mov
dec
shrl
jns
addr16
cmp
rcrb
sub
lahf
cli
mov
adc
or
jne
movsl
pop
mov
mov
push
nop
push
fsubl
and
jecxz
jbe
sar
in
dec
mov
mov
pop
lahf
adc
test
inc
pop
in
jl
xchg
cmpsl
lock
loope
ret
dec
push
cwtl
jns
pop
and
test
mov
add
in
dec
frndint
loop
imul
pop
adc
or
jl
pusha
hlt
scas
dec
insb
in
rorl
ljmp
sarb
pop
xor
xchg
mov
insb
sqrtps
out
jbe
cwtl
jecxz
imul
cmp
xchg
cmp
pushf
mov
scas
int3
repz
mov
psubq
leave
pop
add
fistpll
mov
push
in
xchg
jg
popf
pop
inc
inc
add
sbb
dec
sub
in
mov
jmp
test
js
dec
dec
repnz
mov
call
mov
outsl
loop
rorl
inc
bound
lret
repz
or
mov
push
je
pop
pop
xchg
pop
lahf
ret
ficomps
dec
iret
bound
push
cs
cmp
xor
out
adc
xor
jne
icebp
fbld
fcoms
ja
cmove
repz
adc
jno
int
lds
int3
inc
addl
aas
cs
and
dec
mov
mov
sbb
and
sti
xlat
xor
pop
cmp
mov
aam
fs
lock
test
mov
sub
xchg
out
xor
loop
int3
mov
mov
push
or
push
lds
loopne
or
pop
rcrb
jmp
jb
push
mov
movsl
scas
mov
pop
mov
mov
xlat
test
and
jbe
push
inc
jg
or
les
xchg
cmp
jg
inc
nop
and
jmp
decb
push
cwtl
loopne
and
pop
lods
test
jnp
xchg
fs
ret
out
cmp
mov
test
xchg
imul
imul
adc
andl
sub
cmp
jmp
addr16
jbe
cmpsb
pushf
data16
and
mov
pop
cld
adc
fwait
andb
sub
push
loop
adc
inc
rcr
into
or
sub
pop
mov
in
cmpl
xchg
jge
xor
mov
cmp
in
clc
aam
mov
fs
xchg
icebp
xchg
fnstcw
cs
rclb
jae
mov
pop
sarb
or
cmp
mov
cmp
xor
and
mov
add
js
inc
xchg
notb
addr16
lods
mov
jg
loope
pusha
mov
test
test
clc
sub
call
mov
in
insl
je
push
ss
cs
xlat
or
test
mov
xchg
outsb
and
in
cwtl
lret
iret
push
adc
jbe
int
movsl
shl
cld
test
mov
dec
cmp
xchg
dec
adc
push
imul
mov
sub
jl
xlat
nop
xchg
in
mov
mov
cltd
hlt
mov
ret
push
in
mov
push
fld
sbb
xor
in
add
negl
or
sahf
out
xor
jle
outsl
xor
mov
aad
mov
sbb
imul
push
and
test
and
mov
xor
add
xor
sub
pop
int
rclb
xchg
ljmp
dec
je
inc
lcall
sub
pushf
or
add
adc
mov
lds
orl
push
pop
or
xchg
ja
test
gs
or
and
mull
dec
add
pusha
mov
and
and
fs
cmp
dec
pop
aas
cmp
adc
cmp
add
push
out
rcl
dec
movsl
sbb
bound
repnz
adc
lds
imul
or
pushf
test
lock
and
arpl
mov
pop
sti
lret
mov
scas
sub
pusha
repz
lods
or
add
jl
xor
or
movsb
add
popa
or
or
sbbb
and
ret
clc
sbb
cld
std
shll
out
and
in
clc
mov
cmp
ffreep
movsl
out
cmp
lea
inc
fidivs
je
and
mov
arpl
into
movsl
popf
mov
pop
outsl
loop
cltd
xchg
pxor
aad
sti
jne
fs
loop
add
cwtl
mov
xor
fnsetpm(287
or
mov
mov
mov
lret
mov
jno
and
xor
cmpsl
into
xlat
pusha
das
fiadds
scas
shlb
xorb
addr16
mov
rcl
sub
or
jns
loope
pop
or
sbb
in
outsl
push
lods
adc
sub
stos
sub
sub
push
sub
or
sbb
mov
cmp
add
std
sbb
cmp
jns
imul
into
repnz
lods
arpl
cmpsb
shlb
sbb
mov
push
push
jge
repnz
int3
fsubrs
into
loope
mov
imul
xor
inc
clc
push
add
adc
push
add
push
sbb
aaa
fisttpl
addr16
xor
mov
repz
cmp
lods
inc
or
fwait
jb
mov
cmp
ljmp
mov
push
pop
imul
shlb
pop
insl
loope
pop
pop
jo
cwtl
dec
dec
aaa
xor
adc
jbe
ds
sbb
mov
cmpsl
imul
in
out
jno
mov
cmc
je
jns
fildl
call
out
mov
xchg
inc
adc
lods
sti
and
dec
mov
sbb
enter
xor
insl
mov
adc
pop
xchg
scas
mov
dec
daa
dec
lea
mov
fwait
xchg
fwait
sbb
out
mov
mov
adc
add
shll
cmpsb
imul
imull
shl
sbb
stos
mov
inc
test
push
out
inc
xor
aaa
fimull
jecxz
xchg
neg
lret
test
mov
or
push
and
cmc
mov
sbb
scas
sarb
pop
nop
inc
dec
and
mov
fdivr
lret
repnz
jecxz
inc
xor
stos
xchg
inc
int3
mov
fdivrs
xchg
mov
jge
in
sarl
and
sbb
mov
hlt
jmp
adc
test
jmp
mov
pop
fwait
inc
mov
mov
rol
or
pop
dec
test
mov
leave
fidivs
ja
lock
aam
mov
sbb
sbb
mov
inc
mov
adcl
clc
add
in
mov
add
lea
test
outsl
hlt
mov
cmp
clc
js
ficoms
out
hlt
adc
rcrl
scas
das
sarb
mov
shlb
mov
loop
out
mov
cmpsl
push
xchg
out
cli
and
pop
xchg
mov
lea
or
sub
or
mov
adc
add
jle
and
pop
and
mov
dec
cwtl
cmpsl
lcall
xchg
or
test
lock
cmpsb
xor
mov
push
out
mov
mov
lcall
adc
pop
mov
mov
or
push
xor
add
pop
cli
push
idivl
repnz
gs
out
mov
stc
add
sub
arpl
sub
sbb
dec
mov
in
mov
push
mov
ds
and
add
subl
jns
add
or
and
lcall
popf
gs
push
sbb
or
inc
fdivp
cmp
jb
std
aam
inc
dec
mov
lahf
in
pop
mov
cmc
out
scas
pop
fwait
sbb
aad
cmp
repnz
pop
hlt
aaa
lods
mov
aaa
ljmp
jle
cld
xor
adc
mov
ja
ss
lcall
out
cmpsl
icebp
cmp
adc
out
cmp
pop
loop
bound
dec
jge
and
fsubr
hlt
push
sub
sub
cmpb
jne
cmp
js
dec
xchg
pop
pop
mov
jo
cmp
lret
push
cmpsb
cs
je
or
sar
outsl
rcl
push
fs
fldt
fnstsw
push
jnp
adc
idivb
ret
and
lds
insl
mov
aas
mov
push
xchg
jbe
dec
fdivrs
xor
jecxz
push
sub
es
fcoms
lahf
cmpsb
loopne
pop
xlat
push
jge
xor
xor
loope
xor
mov
andb
xchg
pop
mov
in
mov
fwait
repz
test
adc
mov
and
sbb
push
cmp
stc
std
bsf
and
popa
sub
cmpl
loop
shlb
or
scas
outsl
adc
xchg
in
sti
loop
ss
nop
or
cmp
scas
adc
pusha
jle
pop
mov
jb
jno
push
popf
test
pop
pop
cmp
mov
push
into
mov
rcrb
jnp
rcr
cmp
add
mov
scas
xor
sub
xor
mov
push
ja
cs
sti
push
push
lahf
sar
mov
inc
imul
sbb
addr16
int3
jp
lcall
xor
push
or
jp
and
lods
jge
sbbb
popa
push
comiss
das
loope
push
sub
dec
gs
jge
mov
scas
sub
pop
mov
push
xchg
fwait
cld
cmp
movsb
repz
out
sbb
inc
es
sub
pop
xchg
xchg
cmp
fiaddl
dec
cs
and
daa
stc
iret
pushl
in
xor
out
xchg
leave
cs
mov
imul
cwtl
lret
xchg
in
mov
pxor
inc
jg
push
sub
mov
lcall
push
cmpsl
pop
inc
mov
loop
icebp
fs
xchg
int3
or
fnsave
bnd
std
cld
ja
sub
hlt
subb
sub
xor
mov
fmuls
fwait
cs
clc
adc
imul
xor
cmc
imul
mov
cld
stos
push
jns
stos
mov
add
loop
sbb
out
add
fcmovne
shll
ror
divl
pusha
cmc
and
xchg
gs
nop
cmp
jae
test
loopne
imul
in
mov
push
or
push
out
and
cmp
mov
sarb
add
arpl
bound
fsubl
mov
aas
sbb
in
idivb
mov
test
dec
jmp
sbb
in
ja
pop
fnstcw
cwtl
adc
sbb
lret
leave
or
dec
inc
jno
push
leave
jmp
sub
push
add
sets
sbb
adc
sbb
mov
repz
mov
lret
inc
fs
and
mov
lahf
or
sub
loope
loopne
mov
or
mov
mov
aaa
insl
aam
adc
lret
in
arpl
sub
imul
push
leave
push
shll
add
mov
cmp
scas
push
sbb
call
stc
jmp
jg
cmp
jo
jecxz
mov
adcl
sbb
push
sbb
outsb
or
sub
cmp
sub
imul
pop
jne
sti
fisttpll
int
repnz
lods
daa
mov
inc
ret
lock
cmp
clc
or
shlb
rcll
lds
je
clc
into
mov
imul
outsb
cmp
xorb
ljmp
mov
ja
mov
mov
xor
pushf
inc
push
jno
addr16
ds
fnstsw
and
add
shrd
mov
xchg
cltd
inc
pop
scas
adc
or
fchs
popf
jb
mov
sbb
out
add
xchg
loop
ja
imul
and
mov
inc
mov
lods
cli
mov
cmc
mov
and
xor
mov
adc
sbbb
push
pop
outsb
dec
adc
testb
dec
fcoms
int
mov
cld
push
gs
ficompl
inc
call
dec
push
fdivs
push
insl
jmp
cmp
inc
dec
jp
lods
sbb
outsb
and
xor
add
mov
cwtl
dec
add
jle
adc
xchg
mov
jmp
xor
xchg
dec
in
jns
js
jbe
jge
les
orl
xchg
xor
popf
and
les
fwait
sbb
rorl
cmp
mov
popf
loopne
push
mov
dec
jle
outsb
arpl
inc
cmpsb
or
pop
xchg
repz
ljmp
imul
push
pop
jne
cmp
mov
pop
sbb
decb
or
in
and
ds
inc
pop
push
ds
pushf
fcmovnu
xchg
adc
inc
enter
stos
mov
xchg
or
lea
mov
mov
mov
repnz
out
push
mov
aaa
sub
push
mov
xchg
mov
or
andb
lods
push
adc
jle
enter
dec
pop
shrl
dec
rcr
std
cmp
pop
add
jecxz
and
popf
jg
icebp
xchg
dec
out
push
shlb
mov
and
fs
xor
decb
shlb
mov
dec
mov
sti
aaa
jo
insl
in
out
add
mov
bound
cmp
stos
push
mov
adc
push
pop
andb
les
loopne
xor
hlt
enter
inc
mov
loopne
lret
aam
xchg
loope
dec
outsl
sbb
jmp
mov
sbb
mov
mov
addl
pop
les
test
bound
or
push
push
cltd
add
and
in
in
dec
stos
ret
mov
mov
mov
xor
filds
xchg
xor
shlb
in
fs
cltd
inc
jle
out
mov
rcll
jo
jmp
shrl
jns
out
test
movsl
stos
or
cmpsl
sub
fidivl
into
and
pusha
cmpsb
add
xor
fisttpl
or
lcall
stos
adc
aas
loop
loop
xlat
mov
es
jnp
pop
imul
idiv
or
mov
push
das
and
lock
enter
enter
ljmp
xor
rolb
aad
xor
data16
out
fldl2t
cmpsb
sbb
lds
and
push
mul
cld
mov
aam
fisubrl
pop
mov
cli
insb
fs
ds
testl
das
push
mov
push
push
dec
adc
cmp
jns
js
xor
add
mov
incl
lcall
xlat
xor
sub
sub
mov
and
andb
cwtl
fldcw
mov
loope
cli
loopne
jecxz
in
popa
mov
sahf
loope
xlat
push
mov
out
sbb
jp
mov
mov
mov
ret
arpl
addr16
lret
mov
lock
je
sbb
inc
and
loope
dec
repnz
lea
xchg
jmp
sub
shl
xor
addr16
in
cmpsb
add
and
xor
push
daa
pop
clc
cmpsb
cs
sarl
mov
or
into
sti
jg
mov
lret
insb
dec
mov
cmp
cmp
xor
mov
test
jns
lret
mov
ja
mov
das
push
adc
mov
loope
inc
pop
dec
sbb
cli
dec
sbb
and
cmp
fstps
jle
pop
imul
adc
testb
xor
int3
sahf
loopne
push
xchg
mov
mov
mov
popa
shr
or
popf
pop
fsub
imul
test
aam
dec
or
ret
stc
out
lea
mov
ljmp
xchg
push
test
pop
popa
sbb
pop
adc
fsubrl
cmovns
arpl
test
lcall
jno
arpl
jno
enter
mov
lahf
sti
lcall
mov
push
stc
adc
jae
rcrl
push
in
or
add
pop
xchg
add
cld
cs
or
dec
sarl
inc
adc
jge
xor
addr16
movsl
sahf
movsl
dec
testb
sub
faddp
mov
out
subl
inc
subb
xchg
dec
pushf
pop
mov
cmp
push
out
stos
xchg
xchg
or
add
dec
jbe
in
xchg
or
in
shrd
out
mov
cmpsl
rcr
loopne
or
arpl
sti
sbb
in
jg
ret
ret
adc
cld
dec
je
mov
pushf
push
aad
push
xor
pop
and
ret
push
dec
xchg
lock
cwtl
xor
xchg
pop
inc
inc
mov
leave
sbb
add
jge
cld
sbb
inc
cmp
fldenv
imul
scas
iret
jns
xchg
jne
xchg
mov
repnz
xchg
notb
sub
and
aaa
cmc
gs
or
loopne
dec
sti
jns
lahf
cmc
icebp
xchg
pop
mov
out
sbb
repz
outsb
das
add
shlb
imul
lret
jb
movsb
or
int
into
adc
or
xorl
mov
jae
mov
fstl
inc
ljmp
pop
sbb
sbb
shlb
xor
rcll
push
pop
add
inc
xchg
push
push
push
enter
xor
sub
push
jae
mov
cmc
dec
fdiv
lock
jne
sbbb
movl
push
push
in
or
ret
and
inc
pop
add
push
cmp
jo
inc
xchg
inc
adc
dec
add
mov
ja
cmpsl
jmp
dec
xor
bound
push
jo
and
imul
jecxz
int3
pushl
mov
stos
jmp
out
mov
lret
dec
nop
push
in
in
lret
fdivr
jmp
rolb
outsb
sub
add
packsswb
icebp
movsl
imul
aaa
aaa
cmpsb
mov
jge
mov
and
adc
dec
sbb
jns
sub
inc
xchg
xor
mov
stc
push
cmp
sub
imul
add
push
daa
adc
out
jmp
or
adcl
dec
inc
mov
aas
xchg
adc
add
inc
bswap
mov
pop
js
insb
pop
jns
inc
lods
fidivl
inc
imul
in
fmull
loope
mov
aad
data16
add
mov
std
lea
rcrl
fsts
orb
cli
or
xchg
rclb
movsb
clc
aas
scas
cmpsb
push
adc
inc
xchg
push
adcb
stos
push
lock
mov
mov
into
fidivl
sbb
xchg
dec
pop
cwtl
ljmp
jge
sub
jmp
in
or
in
and
das
pop
test
cmpsl
mov
ja
sub
in
mov
loope
icebp
sbb
aad
xchg
dec
and
xabort
sub
sbb
jl
inc
aas
sbb
mov
cmp
cmp
lcall
ds
jecxz
rcll
icebp
push
mov
or
jg
fdivl
loope
push
ds
dec
dec
in
mov
jnp
inc
adc
adc
jmp
or
pop
xlat
shlb
xchg
and
mov
pushl
xchg
inc
jne
mov
xchg
rcr
mov
stc
lcall
mov
std
add
dec
sub
addr16
dec
lahf
mov
iret
mov
mov
dec
popa
xchg
movsl
jo
or
testb
jne
pushf
test
lods
daa
inc
jae
outsl
imul
nop
cmp
scas
aam
test
je
scas
jg
cmp
or
mov
cmp
push
push
insl
sbb
stos
adc
jo
dec
pop
in
add
dec
jmp
popf
je
inc
fwait
jmp
push
push
leave
inc
iret
outsb
push
ljmp
ret
pop
and
push
cld
mov
jbe
adc
xor
bound
fsubrs
mov
je
cmpsb
lock
cmpsl
sub
or
lods
pop
pop
xor
cmp
pop
sub
cld
loopne
inc
imull
bound
pop
jns
popa
lahf
lds
push
xor
sti
fsubrs
sub
and
fs
mov
jecxz
xchg
fldl
shl
idivb
mov
mov
mov
roll
xorb
pop
loop
arpl
ljmp
cmp
mov
mov
jp
stos
mov
xor
scas
out
mov
stos
nop
or
xchg
cwtl
push
pop
cli
mov
mov
out
test
sbb
pop
fisubrl
aaa
sub
cmp
imul
xchg
jnp
jg
daa
repz
movsbl
cld
push
cld
push
cmpsb
dec
xchg
lods
jo
cmp
sbb
nop
lods
loope
in
cmp
sti
sub
int3
lret
aas
and
and
repnz
inc
xor
scas
scas
aad
mov
xor
xchg
pop
push
lods
loope
xor
loope
jmp
call
pop
xor
mov
push
lods
mov
int3
jle
leave
cmpsl
outsl
and
clc
aaa
ror
jnp,pt
mov
adcl
in
and
iret
out
mov
pop
jnp
xchg
adc
pop
jbe
cmpl
movsb
cmp
jge
add
in
lret
inc
ds
es
fadd
je
adc
out
dec
out
inc
adc
lret
aas
data16
in
ficomps
push
stos
outsb
xor
das
adc
out
fs
xchg
sbb
and
inc
xor
faddl
xchg
cld
mov
in
pop
add
sti
xlat
test
testb
dec
pop
xor
xchg
mov
aad
or
je
xchg
out
xchg
and
cmc
fimull
pop
fdiv
add
mov
movsb
icebp
mov
xor
jecxz
ret
shlb
add
add
call
xchg
sbb
loopne
dec
fistpl
sbb
test
mov
inc
sbbb
hlt
xchg
push
leave
rsm
jl
and
enter
rcll
inc
dec
mov
pop
call
lods
or
imul
adc
xorl
test
xchg
pop
push
aaa
iret
xor
cmpsb
or
cmpsl
mov
outsl
test
mov
clc
and
xchg
dec
shrb
inc
adc
pop
outsb
mov
pushf
mov
dec
jno
pop
cmpl
sbb
stc
xchg
sub
cmpsb
cmp
sub
ja
inc
aad
outsl
popl
mov
js
pop
fistpl
adc
adc
aad
enter
xchg
mov
mov
repnz
pop
aas
jmp
hlt
popf
adc
mov
inc
and
xor
inc
rorb
repz
jbe
jge
js
ja
adc
mov
or
pop
cmpb
sub
into
cs
and
sub
sbb
jl
cmpb
hlt
rep
mov
dec
push
push
inc
jge
adc
mov
add
mov
mov
int
mov
adcb
lret
sti
dec
sbbb
hlt
std
popa
inc
xor
jl
cmc
movsl
push
into
push
imul
movups
ret
xchg
add
xchg
sub
cld
adc
sub
inc
inc
inc
ret
aad
and
mov
jne
nop
and
sti
sbb
mov
push
scas
insb
stos
outsl
jns
stos
xchg
out
mov
leave
loop
pop
xor
lret
loop
gs
nop
mov
sub
xchg
and
bound
test
mov
ljmp
xchg
arpl
icebp
add
adc
inc
mov
outsb
arpl
out
push
add
dec
adc
push
lahf
pop
mov
sti
lcall
dec
xchg
addr16
adc
scas
ljmp
out
int3
movsb
mov
xor
arpl
loop
cld
dec
cli
mov
add
dec
mov
xchg
stos
lds
or
lock
je
ljmp
inc
pushf
lcall
and
pushf
pop
cmp
test
shlb
cli
push
ds
dec
out
pop
add
loopne
mov
jns
adc
sbb
stos
sub
cld
mov
faddl
dec
sbb
push
mov
sbb
insb
out
mov
ret
jle
shld
fsubl
pop
nop
sub
xchg
rcrb
fldcw
push
gs
ds
pop
xor
adc
or
imul
andl
cmpsb
mov
xor
icebp
dec
outsb
pushf
outsl
cmp
or
int3
repz
subl
out
mov
stos
mov
mov
mov
push
lods
fsubr
mov
inc
fildl
dec
cmp
out
daa
push
and
inc
dec
stc
rol
outsb
pushl
fstps
cltd
hlt
jae
sahf
mov
mov
aas
aam
aam
xchg
and
movsl
mov
test
mov
mov
sbb
mov
mov
inc
iret
mov
loop
or
and
daa
jp
lahf
hlt
and
ljmp
ret
lret
test
mov
popa
xchg
addr16
das
js
pop
mov
mov
shll
inc
mov
lcall
mov
and
sbb
into
xchg
mov
loope
fistps
adc
int3
data16
lret
pop
test
lock
push
push
jo
rorb
xlat
cmp
movsb
add
pop
jno
add
push
cmc
aaa
mov
std
fnstcw
sub
or
mov
mov
stos
mov
sub
fsubr
cmp
out
or
in
stc
arpl
es
mov
icebp
jecxz
cmp
fmul
addr16
test
mov
sbb
sub
insl
pop
jge
ljmp
jo
pop
addr16
cld
mov
aad
leave
out
sbb
dec
arpl
imull
sub
jo
stos
ret
and
dec
pop
stos
mov
ss
xchg
jecxz
push
xchg
xlat
xchg
pop
test
fistl
mov
mov
cmp
les
add
in
scas
push
lods
or
or
fsubr
pop
inc
mov
notb
and
shl
inc
push
xchg
lock
loop
xchg
sub
cmp
je
mov
jo
pop
xchg
push
psraw
fninit
xor
adc
iret
mov
mov
mull
fidivrs
and
gs
fwait
push
push
dec
cltd
loope
mov
fcoms
push
adc
loope
inc
inc
xchg
xchg
or
sti
mov
mov
mov
pop
decb
out
and
adc
pop
movsb
mov
jecxz
xor
mov
dec
push
xor
xchg
fcmovnbe
mov
fsts
movsl
cmp
xor
lods
or
dec
mov
inc
popf
add
push
mov
gs
and
ret
push
fwait
jp
mov
pop
into
mov
mov
mov
sbb
aad
jmp
sub
pop
and
adc
mov
sahf
stos
mov
mov
sub
adc
or
or
lea
stc
pop
fbld
iret
xlat
aaa
pop
jb
mov
sahf
ss
xchg
cmc
mov
xor
shrl
push
adc
loope
mov
aam
hlt
jg
xchg
push
adc
scas
dec
rorb
cmp
int3
les
lock
cld
push
cs
std
and
xchg
scas
js
push
lock
add
xchg
mov
add
sbb
outsl
adc
pop
add
dec
pop
cltd
fistps
push
mov
fucomip
decb
mov
in
push
ret
iret
loop
ror
cmpsb
sub
mov
mov
mov
aam
add
mov
loopne
loope
leave
fdivrl
imul
mov
sbb
push
dec
scas
dec
ja
enter
rorl
xchg
daa
push
inc
cmp
mov
inc
jmp
scas
filds
inc
jns
and
cmpsb
lock
loop
ljmp
pop
int3
lods
lods
or
lea
dec
pop
xlat
cmp
out
jecxz
xchg
es
test
mov
test
nop
ret
inc
int
mov
add
stos
lods
cmp
insl
std
inc
jae
jno
xchg
int
imul
inc
je
lcall
mov
sbb
jmp
ljmp
xchg
adc
xchg
mov
inc
sbbb
pushf
lret
xchg
sub
lret
out
adc
push
dec
cmpsl
and
repz
pusha
insb
sbb
gs
sahf
pop
packuswb
xchg
or
dec
fidivrs
test
push
adc
push
add
push
fs
lret
push
dec
aas
mov
adc
repnz
inc
sbb
test
or
fnstenv
xchg
push
std
in
aad
push
out
push
push
mov
mov
les
jle
xchg
mov
cmp
mov
ret
inc
rorl
cmc
or
pushf
sub
cli
fists
sbb
mov
adc
mov
mov
xlat
data16
mov
test
mov
add
sub
or
adc
dec
loop
fmull
loop
mov
sub
int3
loope
sbb
cmp
sbb
or
or
out
cmpsl
push
jo
lds
inc
mov
sbb
mov
pop
mov
sbb
sub
jne
jmp
pop
cmpsb
adc
xchg
pop
mov
and
scas
mov
add
mov
les
lods
pop
or
mov
into
int
insb
loopne
cmovl
mov
dec
cltd
adc
test
xchg
and
add
scas
and
mov
mov
inc
pushl
push
cmp
out
ljmp
jmp
lret
jnp
loopne
lahf
mov
xor
or
sbb
mov
enter
mov
sbb
mov
jle
js
push
adc
loop
nop
pop
icebp
lahf
scas
cmp
jl
repnz
arpl
jg
jb
lea
dec
push
and
mov
fmuls
inc
mov
add
shll
or
fisubrs
popf
mov
fisttpl
imul
sti
or
test
or
push
inc
mov
dec
xorb
es
mov
pop
mov
rcrl
push
push
fcomps
sbb
mov
loope
gs
out
xor
fcom
xchg
call
and
jecxz
jl
or
cmpsb
cmpsb
mov
pop
rcrb
fiadds
js
mov
scas
push
lods
movsl
mov
mov
dec
inc
stos
movsl
adc
or
mov
dec
std
mov
and
lret
in
loope
pop
cmpsl
nop
sub
mov
daa
cmpsl
mov
sahf
sahf
pop
xor
pusha
fs
aam
jl
or
push
mov
sbb
inc
sub
jg
dec
pop
mov
loop
cmp
testl
fs
mov
loopne
imul
scas
jnp
sti
xchg
adc
jne
stos
repnz
int3
mov
jge
cmp
push
cmp
aaa
pop
mov
xchg
andl
ljmp
jecxz
add
stos
add
ret
movsl
out
les
leave
jbe
int3
sub
pop
pop
adc
mov
adc
mov
mov
mov
es
cli
xchg
sbb
in
sub
and
hlt
icebp
jg
mov
sbb
int3
push
lds
rcrb
negb
cmpsl
pop
jp
lret
and
orl
imul
cmp
add
rorl
mov
daa
lock
pushf
pop
jno
stc
das
into
dec
mov
xchg
dec
mov
mov
jge
jnp
subl
lods
sbb
out
mov
stos
mov
test
jle
fbld
nop
sub
jmp
pop
xorb
mov
pushl
into
rorl
and
pusha
pop
popf
sub
jae
or
and
inc
mov
je
mov
icebp
pop
fisubs
ja
jbe
cmpsb
fwait
inc
xlat
xchg
inc
stos
pop
push
loopne,pt
or
pop
push
push
pop
insl
sub
aad
adc
cmp
sub
pop
lds
sub
add
cmp
pusha
fists
ljmp
js
or
test
xor
xchg
pusha
addr16
jle
mov
pop
xor
mov
vunpckhps
cmpsb
loopne
aas
sbb
sahf
stos
fistl
xorb
lock
stos
push
dec
in
adc
shll
dec
mov
and
xchg
lcall
mov
jle
cmp
jae
data16
mov
xor
lods
adc
aaa
das
sar
cwtl
or
mov
mov
lret
mov
xchg
push
imul
push
ss
lret
mov
mov
loop
mov
idiv
cmp
lahf
and
dec
jne
add
sbb
out
dec
dec
inc
xchg
ds
add
dec
mov
out
cli
call
lock
lcall
inc
pop
jb
mov
cmpsl
insl
ret
insb
or
dec
cs
test
lcall
out
xchg
mov
arpl
xchg
jle
mov
dec
cmp
pushf
xchg
aas
in
push
ljmp
and
jle
rorl
xor
lods
inc
xor
sub
cmp
ljmp
mov
fadd
mov
fmulp
and
adc
sub
in
sbb
jns
movsl
lock
or
jl,pn
lcall
xor
pop
leave
mov
popf
push
xlat
xor
mov
xor
call
inc
jle
xchg
sub
pop
loope
icebp
adc
mov
and
dec
xchg
fsin
jns
ficoml
add
push
pop
insb
pushf
sub
aaa
jbe
sbb
insb
lret
aad
cmp
and
pop
lret
repz
repnz
out
add
test
jne
mov
sub
std
mov
mov
pop
jg
xor
popf
fs
xor
das
inc
inc
sbb
jae
out
in
es
jge
lods
rolb
fisubs
push
outsl
out
cmp
xor
stos
mov
sbb
out
test
mov
js
jge
scas
sub
and
insb
inc
xchg
shll
cmpsl
mov
adc
or
cltd
add
push
mov
inc
xlat
js
adc
movsb
or
testl
leave
xchg
mov
xchg
in
dec
enter
cli
stc
push
enter
inc
sub
stos
or
dec
add
xor
int
sub
sarb
pop
test
sar
bound
sbb
lahf
lea
push
sub
push
mov
pop
dec
sub
lock
in
data16
dec
xchg
push
mov
outsl
movl
imul
mov
pop
adc
xchg
cmp
outsl
or
cmp
gs
push
sbb
mov
test
scas
js
je
jp
inc
xor
mov
pop
dec
jecxz
mov
or
outsb
iret
sahf
data16
fstl
js
aaa
dec
cmp
xchg
mov
repnz
dec
xor
out
ret
sbbb
and
fdiv
sbb
mov
test
mov
pop
rorb
out
adc
lret
lahf
mov
or
push
xor
cmp
mov
mov
inc
cmp
daa
sbb
insl
inc
popa
roll
jae
into
pop
jo
cmpsl
mov
push
jb
sar
adc
push
push
mov
fimuls
jns
xor
pop
jge
aas
push
inc
sbb
xor
inc
pop
sti
and
pop
push
mov
add
pop
stos
imul
mov
lahf
divl
push
sahf
cltd
inc
and
push
js
into
fidivrs
addr16
jae
lcall
lods
add
lds
inc
std
xchg
mov
clc
fs
xchg
lods
in
pop
pop
pop
inc
xchg
test
fisttps
xchg
lret
repnz
dec
repnz
pop
push
add
cmp
dec
cmp
sbbb
xchg
cwtl
inc
addr16
pushf
push
jp
pop
and
aad
and
pop
jno
ljmp
push
xor
lahf
or
mov
test
jns
test
cmpsb
out
into
cli
pop
pusha
ret
out
leave
cld
sarb
jl
jg
out
shrl
push
mov
das
jle
into
add
daa
inc
pop
inc
je
inc
mov
imul
mov
scas
xor
mov
xor
xchg
mull
inc
dec
cs
adc
inc
xor
aad
mov
faddl
dec
nop
insl
leave
push
or
push
push
imul
es
repnz
inc
pop
scas
das
xchg
stos
stc
lds
loope
rorl
mov
shrl
cs
insb
mov
push
je
pop
cmp
push
or
mov
push
ds
test
mov
inc
mov
aam
addr16
outsb
in
shrb
fdivs
imul
es
cmp
jnp
adc
inc
jo
into
out
xchg
icebp
pop
mov
fistl
adc
or
jl
xor
ljmp
aad
mov
mov
out
adcl
out
sbb
scas
insl
mov
pop
in
add
xchg
mov
or
cltd
xor
lods
mov
dec
insl
ror
fldl
push
cmp
aam
xlat
mov
dec
pop
pop
data16
mulb
fprem1
das
test
out
fstpt
push
push
jle
sub
loop
dec
cli
loopne
shl
xor
or
outsl
lahf
icebp
stos
adc
fmuls
or
movsb
mov
cwtl
loope
rcll
jmp
xchg
jmp
or
xchg
enter
xchg
mov
cli
lret
stos
mov
dec
add
lods
mov
dec
dec
sub
divl
fcmovnb
mov
int
xlat
and
aas
shrl
push
push
das
dec
stos
xor
push
pop
ja
adc
fidivrs
fcoml
aad
jmp
imul
push
adc
loop
jg
mov
loop
inc
in
pop
jge
mov
adc
shl
cmp
test
jno
cmp
test
and
fnclex
jnp
icebp
sub
loope
daa
push
fbstp
arpl
pop
sub
rorl
pop
scas
and
lock
dec
cmp
or
jne
lds
and
aad
mov
xchg
xor
jle
arpl
adc
sub
int3
rcl
or
adc
adc
cli
fistpl
jmp
imul
xor
loopne
addr16
xchg
sub
push
lret
aad
cmpsl
push
lods
pop
xor
ds
lock
mov
insb
je
fsubrl
jno
push
fwait
adc
aaa
out
sbb
fwait
mov
cli
jae
ljmp
push
mov
push
sbb
jp
xchg
out
dec
sbb
divb
cmp
ret
int
push
or
or
sbb
cmp
dec
sti
je
popf
pop
fsubrs
mov
mov
in
sbb
mov
inc
pop
out
mov
cs
inc
fs
jl
cmpsb
stos
pop
mov
xor
jbe
shlb
mov
cmpsb
scas
and
mov
add
adc
sbb
popa
pusha
jne
test
movsb
imulb
sub
inc
mov
int3
jl
in
or
cltd
pushf
mov
cwtl
fwait
inc
push
adc
es
lods
cmp
rcll
dec
mov
jb
push
daa
sub
unpcklps
add
js
or
add
test
ss
leave
mov
das
sbb
xchg
jmp
jo
fsubrl
iret
mov
maskmovq
idivl
or
lcall
sub
push
cmp
sub
pop
and
mov
dec
push
and
cmp
loop
cltd
sti
jecxz
scas
pop
imul
ret
inc
mov
arpl
sub
lock
shrl
xlat
mov
add
inc
pop
cmc
push
test
ret
test
and
stos
or
sbb
xor
ret
mov
fstp
mov
or
hlt
and
inc
rorb
mov
out
and
mov
lret
mov
shrb
mov
out
mov
and
mov
movsb
xchg
repz
das
mov
mov
nop
mov
leave
xchg
inc
xor
xchg
xor
sbb
mov
xchg
cmpsl
call
fistpl
push
push
pushf
es
sahf
mov
adc
dec
push
imul
test
shrl
or
rdpmc
rolb
mov
fisubs
push
cmp
aaa
xor
mov
sbb
jno
adc
add
xchg
ret
in
mov
repz
pop
scas
jg
lods
xor
xor
mov
mov
adc
mov
inc
sarl
push
or
jns
or
mov
or
nop
cmpl
call
rcrl
sub
jne
shl
pop
mov
fdivl
outsl
push
mov
ret
xchg
lret
mov
lret
ljmp
test
aaa
lcall
pop
mov
fisubrs
int
arpl
test
or
inc
int
or
jbe
pop
inc
fstps
xor
fdivl
clc
cld
sti
mov
adc
cmpsl
xchg
in
inc
xchg
add
mov
aas
cmpsb
addb
ret
psubb
cwtl
lcall
adc
int
mov
inc
push
pop
mov
stos
add
push
fsubr
call
sbb
add
or
xchg
xchg
popw
jnp
lods
imul
bound
xlat
js
shrb
rcll
jl
xor
pop
leave
or
xchg
push
test
js
data16
test
mov
leave
jae
inc
test
aad
mov
rol
dec
stos
daa
rcrl
and
xchg
jle
into
jno
cli
arpl
pop
jb
push
fisttpll
adc
push
sbb
xchg
cmp
je
sti
mov
popf
jle
mull
shr
daa
sbb
insb
das
mov
lock
jo
repnz
test
cmpsl
sbb
hlt
jo
dec
mov
mov
cmpsb
gs
pop
mov
jno
popa
mov
pop
movsb
imul
mov
dec
xor
xor
mov
loop
popf
out
xor
shr
or
imul
shll
shl
push
jle
mov
lret
insb
dec
lahf
pop
mov
inc
push
imull
mov
das
out
lods
loopne
inc
sarb
sbb
insl
fcomp
xor
outsb
xor
xor
rcrb
cmp
shlb
fistps
cwtl
out
popf
subl
ror
sbb
inc
in
dec
je
shrl
dec
lret
adc
mov
mov
jmp
xor
mov
jnp
sub
pusha
arpl
cli
adc
adc
ret
jne
pushf
adc
pop
mov
dec
sbb
dec
stos
addb
cmpsb
ret
and
in
pushf
leave
pop
fnstenv
dec
aam
cmp
mov
outsl
sbbb
add
in
mov
xchg
jge
cmp
add
loop
sub
push
xor
ret
cld
add
push
testb
pop
repnz
inc
fcompl
adc
cmpsl
faddl
lret
push
xor
xchg
dec
jg
loop
fwait
xchg
divl
mov
dec
fadds
xor
pop
push
rcr
dec
mov
jno
adc
mov
shlb
jae
dec
lods
loope
adc
ljmp
jp
outsb
xorb
inc
add
std
pop
pop
xchg
stos
loop
lods
push
pop
add
roll
mov
mov
mov
cs
jmp
psubsb
in
inc
pusha
sub
cmc
add
cltd
inc
and
sarb
lea
imulb
mov
push
out
hlt
scas
aam
stc
cmpsb
outsl
pop
mov
mov
mov
dec
flds
xchg
repz
fs
je
les
inc
rolb
adc
xchg
mov
repz
adc
scas
pop
xchg
mov
sbb
cmp
xchg
cmpsl
or
insb
mov
mov
ljmp
lods
bound
dec
pusha
sub
xchg
repnz
jp
stos
cmp
adc
leave
pop
popa
mov
leave
in
jg
sub
mov
xor
sti
xchg
inc
mov
jb
pop
jb
add
push
pop
xchg
arpl
ret
xchg
jb
sahf
jp
aad
dec
pop
in
jl
aam
inc
daa
jg
mov
lret
jge
les
cwtl
mov
xor
cmpl
sarb
ja
addl
or
dec
dec
mov
xor
xor
cltd
pop
movsl
dec
cld
out
pop
pop
mov
inc
fcmovu
and
and
jl
sbb
stc
jnp
std
pop
stos
mov
sarl
or
pop
cltd
push
cmp
icebp
sbb
push
xchg
xchg
enter
lret
daa
mov
pop
push
dec
aam
adc
mov
hlt
insl
sub
mov
xor
sti
cmc
jno
and
sub
sub
xor
clc
push
out
fldenv
fldl2e
mov
js
out
and
aas
add
jmp
pop
jno
mov
les
sbb
mov
sub
insb
adc
mov
stos
jne
mov
fidivrl
cmp
loopne
jmp
mov
enter
pavgw
pop
xchg
js
mov
aad
ds
lods
inc
sub
fcom
rcrl
int
fimull
mov
push
add
adc
out
cwtl
fiadds
ss
loop
xchg
int
sbb
push
divb
fiaddl
push
pop
das
pop
insl
xchg
mov
stc
cmp
insl
dec
cmc
and
sbb
mov
imul
and
dec
pushf
das
or
lcall
sub
mov
je
mov
test
push
xlat
int3
in
lret
xor
xchg
lcall
out
mov
mov
hlt
mov
inc
outsb
jg
sub
cmpsb
lods
daa
and
fimull
pop
lcall
pop
and
xchg
sub
std
xchg
or
sub
inc
ja
clc
push
jge
cwtl
sub
bound
pop
inc
jns
pop
mov
cmp
inc
insl
or
lods
and
add
sub
data16
orl
mov
int
fdivl
and
lock
pop
mov
lds
push
xchg
and
cmp
int3
aam
imul
ss
ficoms
dec
scas
dec
adc
sub
je
dec
and
js
ret
ret
test
adc
mov
lea
mov
fldenv
mov
clc
pop
pusha
fdiv
aad
loope
arpl
push
xchg
jae
add
loop
scas
or
push
and
ljmp
or
std
sar
ret
sbb
inc
jno
xchg
dec
stc
hlt
push
add
inc
pop
fisttpl
in
push
sarl
les
jb
test
dec
xchg
es
loope
sbb
pop
xlat
mov
fprem
inc
cmp
xchg
shrl
mov
push
enter
adc
adc
mov
mov
js
jle
fs
push
movsl
and
fsubrs
iret
test
test
push
pop
jmp
iret
dec
and
nop
mov
cmp
fldcw
add
mov
sub
mov
outsb
dec
jb
pop
or
std
fbld
lods
push
xchg
and
add
cmp
test
out
je
aas
push
sub
sti
das
loopne
imull
push
fdivs
imul
mul
dec
movsl
pop
orl
mov
shll
push
push
push
shrb
roll
aad
inc
sub
adc
test
in
pop
sub
rcll
cmpsl
jbe
mov
ret
testl
add
inc
xor
lods
mov
repnz
mov
int
pop
adc
xor
into
mov
jl
fwait
cld
popl
push
test
aam
outsl
scas
cmc
das
into
mov
scas
jle
or
adc
nop
sbb
jo
jmp
andb
pop
and
dec
or
cmp
scas
mov
or
outsl
pop
mov
pop
pop
adc
imul
inc
add
faddl
call
in
dec
orl
outsl
xor
stos
stos
incb
in
pop
add
negb
cmpsb
add
shlb
push
out
xchg
push
dec
fdivrs
adc
fwait
movntps
push
mov
fsubrs
adc
adc
iret
int3
add
mov
imul
jge
in
inc
pop
dec
inc
aas
insb
adc
push
ljmp
leave
push
adc
jp
out
sti
sbbl
loope
and
mov
pusha
push
adc
sti
imul
iret
lcall
and
iret
xchg
repnz
aaa
dec
jo
lock
or
and
push
test
add
imul
lock
test
mov
and
in
mov
popf
fs
sub
rcrl
dec
dec
and
fxch
push
int
test
cltd
insl
push
mov
adc
fmull
cmp
xchg
mov
mov
sub
add
or
nop
pop
inc
push
mov
scas
loopne
sbb
mov
out
push
ret
mov
fsubs
out
dec
pop
test
in
add
mov
xchg
inc
jo
mov
icebp
movsb
jecxz
jbe
bound
fidivrs
pushf
inc
xchg
std
and
in
xor
xchg
loopne
out
pop
loopne
mov
gs
std
outsb
cwtl
int3
cmc
imul
xor
jl
and
movsb
sbbb
inc
sbb
add
inc
add
adc
decl
aad
cmp
mov
inc
pop
dec
and
add
mov
in
movsb
inc
gs
mov
loopne
out
pop
jnp
or
mov
fisttpl
jbe
cmp
jbe
dec
cmpsb
ret
aad
fmul
pop
pop
lock
xor
mov
or
aas
or
gs
add
rol
fnstcw
mov
jmp
mov
insb
ret
iret
jg
je
je
add
mov
rcr
sub
int3
shlb
adc
scas
and
inc
adc
mov
inc
test
dec
dec
jp
sub
enter
outsl
imul
ljmp
and
aaa
out
ljmp
mov
mov
aad
je
int3
and
data16
test
in
cmpsl
inc
movsl
mov
test
out
and
pop
jle
dec
cltd
in
lret
cmp
aaa
dec
rorb
mov
shrb
push
jle
sub
in
fiaddl
cmc
mov
enter
mov
sub
repnz
cmp
sbb
movsb
mov
cmp
loopne
js
aaa
pop
movsl
mov
or
les
inc
pop
mov
push
pop
das
ds
mov
frstor
mov
cltd
add
jne
cmp
movb
sbb
call
shlb
dec
mov
mov
nop
jae
mov
inc
push
sub
lock
aas
call
and
mov
mov
repnz
mov
movsl
mov
mov
repnz
fdiv
mov
ljmp
loope
mov
mov
inc
add
fcoml
fwait
inc
or
jg
push
aad
mov
filds
inc
rcll
cmp
xchg
mov
inc
push
fists
mov
fimull
jecxz
sbb
insl
out
mov
lods
cmp
aaa
jg
dec
pop
pop
lock
and
or
int3
pusha
cs
jmp
mov
pop
xchg
sub
xor
cld
clc
call
stc
mov
pop
mov
test
fadd
sbb
inc
inc
push
jmp
mov
fiadds
sub
pop
loope
es
cmp
mov
and
les
nop
lods
mov
mov
pop
shl
mov
push
sub
dec
mov
jmp
imul
cmpsb
cmc
sub
fwait
bound
je
dec
call
fisubrl
rcrb
add
in
cli
xor
inc
inc
push
mov
jmp
add
dec
adc
add
bound
das
mov
dec
shl
pusha
xlat
clc
stos
insl
jge
dec
rclb
mov
cltd
popl
movl
daa
and
ret
ret
or
js
inc
sbb
jns
out
pop
popl
stos
mov
cwtl
pop
mov
cmpl
cld
ljmp
fwait
aam
daa
dec
js
add
fimull
mov
pop
nop
jb
push
and
xor
les
in
dec
das
decl
sahf
test
pop
in
or
sbb
scas
dec
or
in
add
jle
inc
aas
arpl
mov
lcall
mov
pusha
mov
loope
push
pop
sarb
popa
aam
loope
mov
jmp
lret
into
mov
mov
jbe
daa
sub
dec
xchg
xor
imul
mov
adcb
mov
adc
shrl
out
insb
xor
lock
dec
in
mov
std
shll
dec
jge
jmp
cmp
call
push
dec
mov
adc
ds
xchg
in
sahf
cmp
and
push
imul
in
or
xchg
jns
lods
adc
scas
data16
insl
push
rclb
mov
insb
stos
cmp
cmp
jp
pop
aad
mov
or
pop
xor
mov
icebp
xchg
cmp
jns
adc
mov
cmp
enter
rolb
cli
push
cltd
xsha256
cmpsb
xchg
inc
mov
and
enter
cmpsb
addb
add
pop
mov
jmp
cmp
push
imull
pop
imul
jecxz
jle
cmpsb
iret
mov
push
xchg
adc
sub
leave
jle
jcxz
jmp
or
iret
sbb
and
push
rclb
mov
ja
inc
cmc
pop
push
add
out
sahf
jne
jae
mov
sbb
and
stos
arpl
scas
ret
vpavgb
lods
pop
mov
dec
subb
push
pop
pop
xor
jp
std
pushf
inc
scas
dec
xor
push
js
arpl
jl
out
inc
iret
stc
pop
out
dec
repnz
xor
movsb
push
cmovle
lods
dec
rcrb
or
sti
mov
loopne
add
cmp
add
sub
pop
mov
dec
mov
popf
dec
mov
cmp
jmp
xor
or
fwait
loop
mov
js
decb
push
popl
dec
cli
mov
pop
lcall
je
jo
cmp
xchg
push
push
clc
cmp
pop
out
mov
mov
add
push
lret
fsubl
adc
mov
movsl
mov
loope
repz
jae
aas
jl
mov
add
and
cs
out
push
xor
cmp
dec
add
popa
add
fidivrl
fsubl
sub
mov
or
in
cwtl
xchg
xor
pushf
test
adc
pop
dec
aam
push
jecxz
xor
mov
adc
lds
lcall
bound
pop
mov
push
xlat
jg
imul
and
mov
enter
movsl
adc
mov
jns
adc
subl
add
lret
pop
xor
outsl
test
movsb
js
push
sbb
dec
adcl
dec
mov
xlat
cmpsl
clc
mov
ret
push
xchg
cli
sbbl
adc
jno
dec
mov
bound
sub
cmpsl
sbb
outsb
stos
fst
ljmp
adc
aam
cmp
lds
ljmp
leave
lods
sub
cmpsb
aaa
adc
pop
dec
xor
xorb
xchg
jp
fisubl
pop
push
nop
cmp
and
outsb
ret
jle
mov
mov
into
imul
or
mov
jge
insb
ret
cmp
mov
call
add
loope
lea
lret
in
add
orb
mov
dec
jp
rorl
repnz
xchg
mov
testb
jge
iret
jge
sbb
out
adc
in
aad
xor
shrl
sub
xor
rcll
and
stc
leave
movsb
ss
xchg
es
scas
pop
mov
ja
or
shlb
repnz
fwait
sub
xchg
sbb
mov
mov
push
mov
mov
mov
jge
jle
sbb
mov
mov
pop
jo
xor
loopne
mov
leave
faddl
adc
mov
jl
popf
or
testb
dec
fwait
mov
orl
fists
push
and
cs
mov
lea
cmpsl
add
mov
dec
bound
es
out
and
push
fisttpl
pusha
jecxz
lret
rcrb
and
mov
sbb
pop
lret
in
lret
sbb
push
mov
ljmp
mulb
or
pop
out
pop
mov
popa
xchg
mov
inc
jle
lea
loope
sbbl
inc
test
pop
inc
and
cmp
cmpsl
arpl
dec
arpl
xchg
mov
pop
pop
andl
nop
adc
pop
sub
fidivs
xchg
ds
add
mov
in
insl
xchg
xchg
popa
dec
cld
inc
stc
rclb
daa
inc
mov
xchg
or
cld
push
std
lock
mov
outsl
fistl
outsb
sub
inc
outsb
mov
cmp
inc
movsb
sub
or
mov
push
sub
lret
and
out
out
ljmp
pop
inc
repnz
les
pop
call
push
xor
cs
call
mov
pop
mov
sub
lock
and
sbb
push
sub
jl
jae
inc
cwtl
inc
nop
imul
or
push
fisubrs
mov
mov
test
inc
pop
cmc
mov
mov
arpl
mov
icebp
sarl
iret
mov
sub
push
pushf
fwait
inc
scas
mov
cmc
mov
imul
xchg
ss
dec
aas
out
mov
test
push
mov
aad
cmpsb
jmp
xchg
pusha
mov
jnp
mov
pop
adc
dec
dec
and
mov
jbe
sbb
sbb
mov
gs
fiadds
clc
dec
sub
test
fwait
ret
or
and
mov
cmp
add
mov
jae
fdivl
ja
cmpsl
push
int3
test
sub
daa
test
jbe
sub
sub
out
dec
dec
pushf
ds
cmpsl
pop
xor
ds
and
cmpsl
in
cltd
xor
xor
xor
add
xor
inc
aad
flds
out
or
pop
sti
ret
sub
sub
comiss
loope
in
xor
jb
and
mov
inc
xor
pop
dec
push
sbb
mov
fdiv
pop
divl
fstps
mov
jo
fwait
sub
inc
jmp
jecxz
leave
xchg
loope
pop
repz
nop
aas
jge
pop
or
jo
or
into
pusha
xchg
pcmpeqw
pop
movsb
sbb
fdiv
movsb
mov
pop
in
cmp
in
xchg
lock
lret
in
daa
testl
into
xchg
jbe
mov
and
push
aad
jge
ror
xchg
orw
test
je
lock
sbb
and
cmpsl
mov
and
sub
mov
xor
push
or
std
push
inc
fmul
mov
inc
cmc
ret
pop
inc
stos
xchg
adc
idivb
xchg
fldenv
mov
addr16
in
mov
fistpl
ja
aad
xor
mov
inc
cwtl
jb
iret
pop
cmp
mov
std
xchg
dec
sub
popa
ficoms
sbb
daa
or
push
fndisi(8087
xchg
jle
pop
adc
mov
add
jl
cmp
mov
test
mov
dec
mov
imul
cwtl
jns
lds
nop
loope
mov
jns
mov
dec
or
jb
divl
adc
jecxz
mov
test
xchg
ljmp
lea
testb
cld
test
lock
pop
ret
inc
or
and
ss
imul
push
fildl
call
je
dec
imul
arpl
mov
and
jl
sbb
mov
iret
mov
cld
cltd
iret
repz
sub
outsb
mov
sub
pop
and
jmp
inc
adc
stc
scas
bound
clc
fucomi
iret
fwait
jle
cmp
into
sub
test
jmp
rcrl
or
test
sahf
cmp
fwait
les
xorb
daa
inc
adc
push
int
xor
inc
test
fcomps
sbb
cltd
ja
fdivs
jp
scas
sub
fwait
add
inc
add
test
xlat
shll
push
psadbw
inc
xor
sbb
in
pop
inc
out
adc
adc
push
or
pop
icebp
ret
inc
jae
xlat
es
das
je
inc
insb
jmp
das
jp
jns
sahf
stos
sub
xor
nop
or
xor
mov
mov
fistps
dec
div
aad
ljmp
pop
xchg
push
mov
add
mov
pop
imul
lahf
add
sub
jecxz
sub
in
ret
pushf
pop
xor
dec
rolb
fdiv
cmp
aas
xchg
xchg
arpl
gs
cs
imul
adc
push
ds
sbb
sbb
push
lcall
or
jnp
xchg
xor
idiv
mov
or
xchg
sub
add
lods
arpl
popf
das
ret
sbb
cmp
jmp
call
pop
mov
mov
aad
cmpl
scas
clc
dec
hlt
or
fwait
xchg
jae
mov
mov
fstpl
xchg
loope
add
push
pop
adc
movsb
into
inc
insl
push
mov
xor
insb
pop
cmp
jno
xchg
aad
inc
push
je
inc
lcall
mov
aam
out
cmpsl
xchg
push
in
inc
xor
pushf
incl
xor
arpl
not
cwtl
push
dec
stc
loope
xor
inc
jge
sti
and
dec
and
negl
lock
dec
jns
ret
add
imul
sub
fildl
mov
sbb
mov
bound
cltd
and
repnz
les
cmp
jmp
dec
mov
inc
or
push
xchg
fsubr
jbe
dec
repnz
adc
shlb
inc
test
int
mov
push
sbb
pop
aam
rcll
lret
adcl
jp
cmpb
daa
push
mov
fstps
rclb
cmp
test
mov
mov
push
popf
ficomps
push
popf
pusha
add
arpl
or
icebp
jge
repz
in
pop
add
call
js
mov
mov
cmp
fsubl
imul
add
outsl
sub
mov
and
push
cld
stc
mov
mov
rdmsr
lret
pop
into
aam
pop
sbb
sub
jnp
dec
mov
test
pop
stc
inc
les
scas
div
es
mov
xor
xor
jnp
xchg
or
add
add
pop
jnp
add
out
adc
xor
imul
dec
movsl
mov
add
pop
and
andb
jns
push
fmull
clc
sbb
push
lahf
jae
cs
dec
rcrb
lods
rcr
cmpsl
pop
mov
aam
lret
add
jmp
shlb
ret
idivl
push
shrb
loope
cs
xlat
inc
mov
addr16
jae
xor
fiadds
es
mov
mov
rcl
push
arpl
pop
mov
lds
lods
sahf
pop
push
fisubrl
cmc
inc
inc
mov
push
andb
adc
cwtl
es
cmp
cwtl
data16
dec
pop
or
addl
mov
or
and
pop
and
insb
mov
cwtl
hlt
xor
pop
xor
fs
cmp
test
mov
lods
call
fidivs
dec
xchg
pop
lret
pop
push
test
xchg
push
mov
xchg
push
ds
cmpb
xchg
icebp
in
pop
jle
decb
or
outsb
jno
iret
fs
movsl
lahf
pop
sahf
add
outsl
mov
mov
pop
out
sub
inc
lret
pop
inc
mov
mov
or
sub
push
jnp
push
pop
pop
into
lods
sub
add
lds
adc
sub
mov
jo
xor
test
sbb
fdiv
rol
das
std
mov
dec
jo
bound
inc
jmp
cmc
add
flds
mov
jecxz
ss
test
js
test
cli
pop
mov
out
jns
add
mov
inc
adc
dec
push
dec
jp
mov
cmp
rcll
arpl
pand
loop
push
xchg
adc
or
fidivl
or
cmpsb
dec
xor
lock
cmc
dec
xchg
ret
xlat
hlt
mov
pop
pop
nop
xchg
repnz
ror
dec
insl
mov
cltd
loope
cld
inc
mov
fistps
xor
lea
scas
mov
sub
je
jecxz
inc
iret
sub
movsb
sub
xchg
and
xchg
or
imul
mov
test
rorb
ror
dec
addr16
dec
btl
xor
sbb
push
sub
sbb
xchg
inc
lods
aaa
out
jb
mov
adc
mov
lock
lock
add
pop
jmp
icebp
in
call
cmp
xor
pop
dec
je
mov
dec
pop
test
fwait
mov
popa
add
mov
xlat
xlat
xor
push
mov
jmp
push
inc
divl
rolb
pop
aam
push
xor
loop
mov
jge
inc
aad
mov
xchg
mov
stos
gs
adc
icebp
mov
mov
push
aam
xor
mov
push
adc
sub
jo
sub
cltd
add
out
in
dec
sub
arpl
cwtl
inc
ljmp
cld
sbb
add
pop
adc
insb
xchg
pop
jge
adc
dec
dec
fxch
cmpsb
pop
repz
pop
test
es
daa
cmp
dec
in
sub
mov
pop
or
in
cld
cmc
lret
pusha
jg
daa
dec
push
mov
test
jo
inc
popa
sbb
into
test
repz
cmp
mov
mov
sub
adc
sahf
test
or
test
into
jecxz
xchg
pushf
jb
push
pop
mov
movsl
adc
jae
shll
jo
push
out
push
js
div
cmpsl
sarb
in
push
inc
ss
sti
cmc
int3
testb
push
in
cmpsb
outsl
push
mov
cmpsl
adc
call
dec
lahf
cmp
mov
mov
imul
pop
enter
fsubl
push
jnp
fldl
adcb
jno
in
mov
std
adc
outsb
sahf
dec
nop
movsl
cmc
lods
pop
das
inc
cld
lret
xchg
dec
mov
cmp
mov
adc
mov
ss
std
sbb
jne
lods
jnp
je
leave
ret
add
lea
into
imul
xor
pop
call
jmp
and
outsb
jg
aad
mov
fiadds
mov
scas
or
mov
stc
rorb
sub
cmp
js
test
push
sahf
xor
test
jmp
xchg
sar
jo
xor
repnz
sbb
insl
mov
cmpsb
jne
pop
fmuls
out
fsubrp
rol
or
outsl
and
mov
hlt
or
mov
fimull
ljmp
sahf
popf
mov
adc
mov
fnsave
ret
es
mov
lret
out
or
shrl
jns
xchg
mov
call
int
outsb
jle
mov
sbb
dec
aad
sub
and
and
xor
push
add
jl
pop
jne
mov
test
xlat
mov
xchg
ds
pop
cmp
scas
fdivrp
aad
or
pop
cmp
mov
fstpl
filds
mov
mov
pop
sub
outsb
fstl
mov
jle
mov
and
lea
aas
jns
jmp
mov
test
sbb
pop
jmp
mov
push
sti
loop
fidivs
push
sbb
aad
sahf
pop
push
jmp
push
ljmp
mov
cmp
inc
fldt
inc
lock
xchg
movsl
sub
push
leave
xchg
outsl
mov
ss
in
les
mov
sbb
mov
mov
sahf
pop
inc
repnz
addr16
es
add
pop
and
and
sub
pushf
fistps
inc
arpl
mov
fistps
aaa
out
push
push
lahf
mov
lock
imul
leave
pushf
jne
mov
loop
mov
push
popf
cmp
push
adc
data16
out
cld
pushf
shl
mov
ljmp
ret
aas
mov
sub
pusha
pop
insb
dec
add
add
rcrl
and
add
jo
bound
enter
mov
insb
cmp
push
push
add
sbb
pop
aad
and
es
mov
push
out
cmpsb
pushf
mov
and
cmp
mov
mov
in
loope
in
adc
mov
dec
popf
sbb
push
mov
cltd
xor
add
mov
out
adc
cmp
in
ljmp
mov
add
or
sar
jle
pop
pop
dec
adc
xorl
lret
xor
adc
hlt
js
push
cmp
les
adc
imul
dec
sbb
cmpsl
ret
out
push
jnp
call
push
daa
inc
dec
xchg
jb
dec
jmp
jae
mov
pop
ds
js
sar
sub
sub
andl
iret
sbb
cmc
cmp
xor
loopne
xor
adcl
hlt
mov
push
test
mov
add
sub
add
adc
sbbl
xchg
mov
inc
enter
pop
ljmp
ret
scas
sbb
push
inc
adc
xchg
sti
popa
mov
cmp
xchg
stos
mov
mov
fiaddl
dec
sub
cltd
imul
andl
addr16
cwtl
mov
in
mov
inc
lret
sbb
add
xchg
scas
dec
sti
jbe
push
lock
and
cld
icebp
push
add
test
push
jle
add
aad
pop
test
test
int3
dec
and
ss
or
shrl
cmpsb
mov
lds
inc
xor
je
mov
stos
adc
sbb
push
sub
push
test
sub
loope
lock
inc
xor
adc
insl
ficoml
mov
in
es
push
loopne
xor
in
iret
lods
lea
sbb
push
sti
movb
cli
add
iret
jbe
js
and
shlb
je
outsl
or
add
xor
xor
cmpsl
adc
movsl
ja
inc
aam
xchg
sbb
cmp
xchg
jns
outsl
adc
push
inc
cmp
pop
scas
jbe
xchg
aaa
fidivs
sbb
jp
or
cltd
or
loopne
shlb
and
adc
jno
cmp
aam
daa
icebp
movsb
adc
out
scas
jmp
sbb
ret
xchg
addl
lock
clc
ss
repz
cli
mov
adc
dec
jmp
aaa
jle
cli
inc
stos
cmp
lahf
rclb
shll
mov
fldcw
jle
aad
inc
jmp
add
es
jg
xchg
fisttpl
or
jae
ret
ficoml
mov
push
leave
stos
or
cmp
fstl
aad
push
xchg
mov
xor
test
jno
pop
dec
xchg
mov
cmc
sub
test
xor
ljmp
popa
dec
ret
adc
in
scas
clc
lret
pop
cmpsb
pop
add
in
pop
jp
leave
sub
fcomi
pop
adc
ds
bound
dec
sbb
mov
hlt
jl
aam
inc
scas
roll
in
mov
mov
out
idivb
aas
adc
js
mov
je
mov
fistpll
cmpsl
inc
xor
cmp
scas
ret
jge
mov
xchg
dec
notb
dec
or
cmpsb
adc
jle
das
ds
aad
xor
inc
dec
dec
push
loope
imul
sti
daa
add
xor
rcr
cmp
fbstp
mov
in
mov
inc
in
in
insb
jmp
sbb
inc
xor
in
filds
stos
shrl
test
pop
sbb
jecxz
push
mov
cmpsb
mov
push
add
inc
add
outsb
or
fidivrs
rcll
mov
ret
jns
cmp
add
push
xor
ljmp
xchg
enter
lret
inc
mov
fnop
cs
inc
sti
ja
mov
sub
pop
les
xor
mov
insb
sar
cmpb
xchg
call
lods
adc
push
mov
add
lret
sbb
enter
fcmove
push
mull
dec
cmpsb
imul
mov
xchg
daa
in
jg
pop
mov
xor
and
enter
js
cld
out
jo
mov
jnp
push
push
sub
repz
jae
xchg
pop
lahf
cmpl
test
cmp
fcomi
cmp
xor
icebp
inc
fadds
out
dec
xor
adc
xor
dec
call
adc
testb
notl
out
mov
mov
mov
or
and
sti
mov
inc
mov
jle
dec
stos
jle
inc
mov
push
clc
or
shrb
push
jmp
cmp
loopne
or
bound
adc
dec
mov
in
lret
fwait
inc
mov
mov
add
xchg
es
decl
mov
pusha
repz
cmpsb
mov
xchg
cli
daa
test
into
nop
enter
shrb
and
pop
in
mov
sub
sub
lea
outsl
dec
inc
sub
pop
mov
dec
mov
test
mov
test
out
mov
mov
xchg
fnstcw
dec
insb
add
inc
push
clc
push
jl
scas
and
lcall
xchg
xor
shll
push
add
imul
inc
mov
cmc
add
scas
pushf
jg
sbb
push
xor
dec
rolb
rorb
pop
jns
or
sub
jno
cmp
mov
and
popf
push
jg
jmp
test
sbb
cs
mov
jle
mov
fisttpl
jle
mov
scas
sbb
sub
xchg
repz
outsl
jp
pushf
sti
xlat
adc
ja
sarb
push
xchg
pop
shl
push
fnstenv
aam
js
cmpsb
pop
dec
adc
xchg
push
xchg
test
pop
pop
jno
add
push
mov
into
jno
or
cmp
and
mov
add
or
std
xchg
inc
cmp
sbbb
sbb
inc
mov
adc
dec
mov
mov
adc
lds
ret
cmp
mov
push
dec
sub
enter
xchg
ret
fs
psubsw
mov
mov
sahf
mov
push
femms
inc
push
ret
lds
dec
or
idivl
imul
dec
mov
push
sub
arpl
adc
pop
pop
iret
mov
ret
clc
enter
add
fisttpl
xchg
pop
xorb
stos
notb
popf
insl
xor
addr16
arpl
mov
ljmp
cs
pop
adc
or
push
cmp
adc
mov
pop
loopne
imul
jmp
mov
mov
or
cmc
mov
cltd
mov
rorb
frstor
adc
movsbl
loopne
jle
ljmp
or
adc
sbb
enter
fimuls
xorl
sbb
mov
aaa
pop
jl
push
icebp
loop
jns
push
aas
dec
add
and
dec
xchg
aad
addr16
loope
stc
loopne
repz
jp
push
ja
pop
mov
mov
push
lock
cmc
jp
mov
rol
scas
jmp
add
sbb
or
fbld
test
in
mov
mov
mov
pop
inc
xchg
push
mov
rclb
cmp
add
mov
hlt
aad
fcompl
sub
fists
sbb
adc
das
aaa
mov
cmp
scas
bound
movsb
ja
push
data16
pop
or
cmp
jns
flds
lret
mov
out
mov
push
push
mov
sti
rol
fdivl
jmp
sub
hlt
sub
adc
cld
xchg
jae
mov
and
test
jae
ljmp
in
mov
mov
sti
adc
push
lds
xchg
adc
fisubl
add
or
lds
scas
sbb
jmp
pop
pop
cmp
cwtl
mov
lahf
adc
xor
mov
jno
divl
loopne
arpl
int
mov
fimull
mov
cmpsl
push
and
filds
dec
fwait
outsb
aam
mov
xchg
lods
pop
imul
repnz
mov
add
rorl
push
and
push
mov
xchg
cmpsb
lods
sub
cmp
mov
int3
xor
seto
cli
push
out
cmp
fsubrs
out
popf
add
fstps
lock
dec
push
mov
push
loope
sti
test
mov
pop
les
push
mov
jg
dec
xchg
es
and
and
sub
sahf
out
mov
rorl
insb
or
movsb
inc
hlt
jle
out
ror
mov
and
das
aad
mov
xchg
push
clc
mov
mov
pop
add
dec
push
jb
xchg
les
jae
pusha
out
mov
push
hlt
sbb
add
jl
cmc
ret
push
in
cmp
loop
aam
std
mov
pop
repz
imul
sbb
mov
aad
pushf
clc
and
ret
mov
push
cmc
addr16
push
push
and
jb
adc
mov
ss
add
mov
scas
es
add
inc
das
ss
sub
mov
cwtl
dec
pop
lret
negl
inc
mov
test
cs
pop
mov
jmp
divl
mov
xchg
rol
ss
sbb
loop
out
push
push
mov
xchg
mov
call
xchg
sbb
lds
mov
enter
out
inc
out
test
cmc
cmpsl
shrl
mov
movsl
sub
test
inc
push
xchg
xor
sbb
lret
adc
xlat
mov
pop
add
xchg
mov
fxch
mov
mov
or
xchg
lock
lret
sbb
daa
jnp
stc
adc
push
pop
in
ja
dec
popf
imul
push
shrl
mov
test
xchg
cmc
imull
mov
jbe
outsl
stos
mov
dec
add
sbb
test
mov
addr16
cld
cmp
add
inc
adc
insl
emms
ror
add
call
and
js
push
dec
adc
imul
add
roll
inc
fistpl
sub
xor
pop
inc
mov
mov
mov
adc
jno
jge
push
dec
push
adc
and
cmp
mov
fbld
pop
or
push
lret
cld
xchg
adc
mov
pop
sbb
hlt
sub
push
hlt
cs
ljmp
jbe
imul
inc
pushf
dec
je
lahf
fwait
mov
je
push
lcall
sub
cli
andb
adc
fldt
and
or
cmp
iret
bound
inc
jns
add
jae
int3
xor
insl
shll
pop
xor
out
mov
and
fwait
insb
adc
push
adc
outsl
movsb
mov
scas
xor
inc
add
adc
popa
push
lea
out
push
idivl
sbb
lret
std
or
mov
scas
repz
sub
ficompl
test
pop
and
jno
pop
fbstp
cmp
cwtl
or
dec
push
pop
cmp
test
test
xchg
sbb
mov
and
mov
ds
cs
and
pop
std
push
or
add
pop
adc
sub
out
pop
jno
inc
sub
ja
sub
sbb
mov
dec
add
cld
icebp
out
and
jp
and
jns
mov
cmp
orb
int3
add
shl
adc
movsl
or
cmpsb
cmp
mov
or
scas
xchg
std
and
cmpsb
jo
loop
out
mov
xchg
lret
xchg
sub
jb
xchg
push
mov
bound
pop
jecxz
mov
stos
adc
mov
and
scas
sub
xchg
stos
cmp
cmc
sbb
mov
idivl
sarl
and
adc
sbb
sti
sub
xchg
cli
je
push
and
add
es
push
push
inc
sarb
pop
adc
ja
mov
insb
push
repnz
int3
pop
and
shll
cmp
push
ret
sub
fidivs
or
icebp
and
lock
scas
and
es
mov
jmp
mov
add
push
xchg
xchg
mov
jns
add
not
in
fwait
sbb
aaa
push
ror
xchg
loopne
pop
fwait
je
add
loope
leave
sub
xchg
push
into
cmp
adc
sbb
cmc
push
cmpsb
in
call
push
sub
push
pop
iret
push
push
push
jne
mov
push
sub
push
jecxz
ret
fisttps
jmp
test
jmp
sub
or
int3
mov
pop
aaa
cmp
repz
loopne
cltd
jae
mov
push
cmp
int3
mov
add
xchg
or
cmp
push
js
push
push
fcoms
sahf
cmpsb
test
lock
fs
bound
repnz
jne
push
pop
adc
negb
push
int
jo
ss
insl
xchg
inc
xor
out
aam
xor
pop
or
or
and
clc
lods
sub
mov
sub
mov
mov
out
minps
xor
jns
mov
ss
sbb
test
hlt
xor
mov
push
xor
adc
fs
or
xchg
mov
ficoml
sbb
movsl
out
daa
dec
test
sbb
lods
or
inc
mov
pushf
and
dec
lods
mov
shll
sbb
push
jge
adc
cwtl
mov
pop
daa
cmpsb
push
and
cli
xor
xor
and
or
outsb
lcall
mov
ror
inc
or
xchg
je
out
push
and
cmp
jp
mov
out
or
outsl
jo
inc
loope
cmp
xchg
mov
rorl
cwtl
inc
out
push
xchg
cmp
repz
lods
fcompl
jmp
xor
and
mov
mov
out
aas
mov
and
mov
lock
scas
mov
js
lret
sub
scas
in
sub
stos
inc
push
mov
adc
sbb
into
pusha
mov
bound
mov
jmp
and
mov
jbe
xor
ds
mov
incl
xchg
jbe
stos
adc
fsubs
pop
std
jno
lock
inc
jo
movsl
lea
cwtl
mov
dec
pop
popa
rcrl
and
push
mov
jle
and
repnz
scas
cltd
mov
pop
sub
in
xchg
sbb
cld
lret
int
adc
fmuls
inc
lods
sahf
aas
adc
arpl
test
jmp
and
jnp
in
in
or
cmc
mov
add
fs
mov
idivl
xchg
pop
into
mov
mov
addb
loopne
shll
lret
js
sbb
fidivl
adc
imul
out
xchg
push
mov
dec
sub
imul
mov
push
add
mov
inc
jne
cmc
lods
loopne
jns
adc
std
lods
in
or
sub
xchg
pop
fldcw
jns
cmp
daa
shll
int
out
ja
scas
xor
aad
pop
xor
std
cs
ret
sbb
lods
clc
flds
jns
sbb
mov
out
push
push
xchg
dec
push
test
cltd
push
cmpsl
mov
in
xor
xor
std
xchg
adc
or
sbb
adc
inc
mov
pop
movb
aaa
push
icebp
sbb
mov
int
pop
roll
repz
pop
bound
icebp
fists
bnd
or
ss
popa
dec
cmp
aad
jl
and
mov
mov
adc
aaa
cs
sub
cmc
lcall
adc
into
outsl
dec
push
dec
mov
dec
ss
xchg
and
add
sarb
nop
cs
xchg
in
cld
inc
push
lahf
mov
mov
add
lea
sub
xchg
imul
sub
sbb
ret
mov
inc
mov
iret
mov
cwtl
mov
mov
or
fwait
jge
out
jmp
in
jo
ror
xor
or
or
push
mov
aad
aad
mov
sarb
notl
jno
pop
sarl
and
push
add
lock
push
pop
negl
dec
aas
xchg
inc
sub
adc
in
shlb
shrl
stos
sar
add
add
stos
sar
imul
lods
mov
cs
mov
int3
sub
mov
call
push
sahf
shll
xchg
push
in
sbb
lds
ret
cmp
mov
lock
mov
mov
adc
xchg
jle
insb
mov
pop
fidivs
cltd
rolb
add
out
mov
push
loopne
sar
clc
sbb
enter
mov
cld
push
dec
mov
into
jnp
cli
jb
mov
mov
outsl
sub
imul
xchg
dec
scas
shl
pop
fcomip
sub
xor
jnp
testl
jl
ror
lcall
iret
push
cmp
push
xor
fistl
inc
imul
sbb
movsl
sbb
push
cltd
lret
fsubs
sub
jo
pop
es
sbb
push
popa
xor
iret
inc
hlt
cmp
jp
fldpi
ds
inc
mov
lods
cmp
gs
fists
jnp
movsl
xor
mov
adc
out
jnp
shll
stc
jmp
pop
and
dec
stos
pop
sbb
adc
or
inc
popf
add
imul
bound
mov
and
popa
icebp
inc
add
aaa
and
orl
in
fstl
mov
and
fsubr
lret
dec
cmp
ret
sub
cli
or
mov
mov
lea
daa
adc
clc
fwait
adc
sbb
inc
orb
xchg
lahf
shrl
bound
shl
inc
inc
imul
repnz
jle
mov
out
mov
mov
xchg
cmp
stos
int3
push
jne
push
mov
pop
ss
arpl
lds
into
cmp
cmc
mov
cmp
dec
jns
or
and
aam
test
pushf
fs
js
push
xor
push
mov
and
push
push
jge
fidivl
in
jne
xchg
xor
jle
ss
jge
cmp
and
das
cmp
fwait
lahf
pop
ret
mov
cmp
push
pop
aad
pop
mov
mov
js
cmp
pop
lret
jb
push
lahf
pop
in
stc
sti
icebp
ljmp
inc
cmp
daa
jns
xor
xchg
and
push
sub
mov
push
mov
add
jecxz
add
mov
jb
push
cmovb
dec
lods
dec
leave
or
jge
mov
sub
cmp
and
cmpsl
dec
lahf
scas
popf
inc
pop
add
rcr
sub
or
cli
dec
popf
rep
or
or
jnp
push
xchg
lods
xchg
or
inc
outsb
add
mov
cli
mov
cmovbe
cmp
lcall
inc
pop
cmpsl
fprem1
pop
sub
push
scas
mov
jg
das
xchg
push
dec
enter
sub
pusha
mov
sub
jno
dec
or
adc
and
mov
sbb
jb
mov
data16
lahf
cs
push
cmpsb
push
xchg
push
mov
mov
mov
mov
test
divl
xchg
call
xchg
mov
call
aaa
sub
mov
adc
inc
sub
xor
xchg
loopne
lock
mov
fdivp
dec
adc
sub
jg
pop
sahf
popa
push
sbb
xchg
xchg
scas
fdivrs
into
or
mov
int3
loopne
mov
inc
ds
lds
lret
fisttpl
ja
les
dec
rorl
dec
shlb
cs
sub
out
adc
push
push
bnd
notb
inc
ret
pop
lahf
jae
test
jo
fs
ss
cmp
push
dec
xlat
sub
fdivp
insl
test
call
idivb
fdivp
loopne
mov
lods
scas
cmp
in
sub
xchg
shlb
loope
in
jns
pop
scas
push
lods
dec
push
insl
loope,pn
xor
cmp
xchg
xchg
adc
sub
cmp
pusha
or
inc
mov
outsb
inc
dec
and
in
dec
xor
popf
negb
xchg
push
call
and
jg
sub
loopne
and
cmp
mov
jg
and
in
imul
add
shll
fs
pop
adc
iret
or
xchg
lcall
adc
fcomi
js
aas
aaa
call
insb
rorb
adc
sub
sbb
cmp
bound
enter
mov
and
lock
ljmp
jo
stc
xchg
iret
sbb
adc
push
sub
pop
cmc
mov
ret
sti
daa
add
mov
sbb
aas
cld
in
cmp
jmp
mov
sub
lcall
mov
ljmp
fs
push
daa
repnz
pop
std
iret
fs
mov
sub
pop
in
loope
jle
mov
push
lods
pop
push
repnz
hlt
loope
jecxz
shlb
mov
cs
and
adc
ficoms
xor
stos
lods
lods
dec
outsb
js
and
or
in
je
jno
fs
cmp
pop
fstl
pop
xor
mov
jns
add
in
adc
fisubs
push
push
adc
xor
imul
dec
fnstcw
cmp
xchg
sub
pop
jl
mov
xchg
adc
mov
or
in
add
push
stc
jle
scas
aam
mov
cmp
fs
mov
out
jl
in
leave
lods
pop
icebp
jg
and
sbb
mov
lcall
sub
cmc
aas
push
fldt
roll
test
movsl
xorl
cmp
mov
popa
mov
xor
dec
dec
mov
addl
fildll
cmpl
loope
inc
sub
cltd
mov
sbb
loop
out
addr16
xlat
mov
xchg
jnp
mov
gs
sbb
push
rcll
test
fisubs
mul
enter
inc
jns
out
int3
sbb
xor
lret
inc
loop
inc
aad
sub
jmp
xchg
push
or
ror
aam
pop
stos
mov
arpl
repz
mov
pop
pusha
and
in
mov
loop
int3
and
mov
in
test
dec
gs
mov
add
pop
jmp
fidivl
sub
outsl
xchg
sahf
lds
aam
cwtl
shlb
sarl
sub
add
loope
leave
pop
mov
shlb
out
lods
std
jno
popf
jmp
mov
pop
ret
aaa
xor
sarb
aad
inc
notl
hlt
cmpsl
sbb
add
iret
xchg
xchg
movsl
or
cmpsb
icebp
stc
push
inc
stc
or
test
fistl
and
pushf
shrb
pop
in
push
pushf
jl
test
arpl
cmpsb
lods
mov
rorb
loope
pop
xor
notb
test
enter
and
sti
outsb
in
dec
aas
cmp
repnz
dec
cmp
mov
dec
mov
sbb
cmp
sbb
test
scas
fsubrs
int3
adc
and
sbb
out
rcll
nop
sub
ds
xor
sub
negb
mov
xchg
mov
data16
push
xchg
adc
scas
sbb
test
cwtl
push
dec
repnz
push
and
add
mov
cli
sbb
insb
jo
test
dec
cmpsl
out
fidivs
cmp
pop
loope
insb
xchg
or
xchg
lds
xchg
fwait
call
and
aam
shlb
dec
pop
in
les
ss
pop
idivl
test
adc
inc
icebp
jno
sbb
jbe
jnp
js
cmp
mov
test
repz
jg
sub
int
iret
dec
cmp
out
jae
pop
pop
xchg
nop
and
mov
pop
test
cmp
out
fistl
pop
icebp
scas
mov
inc
cmp
icebp
fldl
inc
imull
sbb
clc
testb
xor
insl
dec
push
imulb
out
mov
arpl
add
and
sub
lahf
inc
and
jns
jne
aaa
aas
fcmovnbe
add
dec
xor
cmp
push
sbb
adc
sub
sub
mov
adc
push
xor
add
cltd
into
adc
sub
nop
mov
ss
mov
rcrl
aas
mov
jnp
fsubs
dec
movsb
push
dec
sbb
jmp
rol
div
outsb
mov
xor
aad
and
lock
pushf
add
sub
or
adc
roll
arpl
adc
repz
inc
ss
pop
mov
add
mov
pop
dec
scas
fcomip
dec
pop
dec
sub
push
lcall
aam
inc
shr
arpl
lret
pop
add
popw
mov
xchg
jmp
pop
xor
popf
sub
or
sub
fistl
out
out
fildll
jp
and
cli
sub
out
adc
shlb
test
iret
dec
sbb
add
push
std
jns
into
shrl
fcomps
add
jno
jne
xchg
xchg
mov
out
cmc
lods
stc
scas
xchg
and
pusha
std
cmp
bound
jno
lea
jecxz
stc
sub
lret
jo,pn
hlt
stos
mov
or
imul
call
pop
js
mov
mov
cs
jle
lret
xor
ss
mov
test
movsl
dec
sub
nop
and
loopne
adc
push
test
dec
adc
fwait
jo
popa
adc
test
sub
jns
outsb
iret
insb
mov
arpl
inc
bound
test
cwtl
stos
jno
inc
hlt
loope
xchg
aas
sub
cwtl
sub
cmp
inc
sub
lret
int
cmp
cmp
test
xchg
and
or
mov
mov
adc
xchg
inc
in
mov
jp
or
lret
pop
shrl
mov
push
xchg
das
aas
sbb
loopne
loop
xor
add
aad
sbb
pop
loop
aaa
fimull
jb
inc
nop
ret
loopne
fsubrs
lahf
and
data16
sub
inc
pop
enter
rolb
cld
push
popf
fimuls
std
sahf
add
lea
cmc
mov
xorl
mov
push
outsb
out
data16
push
test
adc
mov
stc
push
test
dec
repz
inc
adc
mov
sub
adc
loop
into
dec
xor
movsb
enter
adc
scas
cli
inc
lcall
mov
mov
clc
fisttpll
test
mov
repnz
bound
xor
outsb
bound
int
icebp
arpl
mov
jl
into
repnz
fwait
negb
fsubl
fldcw
leave
xchg
add
aaa
push
dec
fadd
mov
je
ret
xchg
testl
nop
push
subb
xchg
jge
push
clc
or
sahf
inc
xor
rcrl
out
and
cmp
adc
mov
call
outsb
push
imul
ret
dec
dec
mov
test
iret
dec
into
inc
pop
push
mov
xchg
out
lods
add
sahf
xor
js
mov
pop
xlat
leave
or
lret
xlat
lods
cwtl
xor
imul
inc
adc
xor
inc
push
pop
mov
ljmp
addr16
dec
or
xchg
mov
into
loop
push
jmp
dec
add
dec
push
icebp
mov
push
pop
jge
lcall
test
es
mov
cli
std
popf
cmp
rcll
pusha
stos
je
xchg
sbb
cmp
rcr
hlt
cmp
negl
js
lahf
into
fcmovnb
les
loop
add
data16
jb
fisubl
sub
popa
in
inc
roll
xchg
jbe
sub
je
xchg
mov
rcll
pop
fisttps
sub
cmp
jle
insb
xchg
in
adc
cltd
sbb
fadd
cmp
arpl
xchg
xchg
fs
cmp
iret
inc
pop
negb
xor
pop
cmp
aaa
pop
jmp
mov
xor
cli
sub
test
sub
inc
pusha
mov
sbb
pusha
fldt
std
aam
das
sti
inc
movsl
popa
cmp
dec
jns
push
lcall
hlt
mov
fwait
lahf
cmp
dec
mov
inc
or
sub
test
add
cmc
ljmp
sbb
mov
out
sbb
out
das
or
mov
sbb
pusha
or
shrb
adc
add
iret
cmp
pushl
fwait
xor
sbb
outsl
adc
lret
adc
sbbl
adc
xor
loope
cld
push
outsb
push
cmp
mov
sub
mov
lcall
jae
and
fisubrl
cmp
xchg
js
js
jl
dec
das
xchg
xchg
jecxz
mov
les
notl
jnp
test
push
cwtl
shll
je
xlat
popf
aaa
xor
pop
scas
out
mov
inc
notb
movsl
jmp
rorb
es
cmpl
inc
jle
xlat
jne
xchg
mov
and
movsb
rorl
dec
lahf
pop
sbb
pop
jg
test
push
and
xchg
sbb
cwtl
mov
push
push
pop
xor
fsub
insb
enter
lret
lea
cmp
push
shlb
dec
inc
jge
jnp,pn
cmp
xchg
aas
mov
aas
cmpsl
adc
pop
negb
dec
sbbb
and
jns
mov
xchg
cld
imul
pop
dec
bound
stos
lods
cmp
outsl
or
enter
inc
pop
andb
addr16
or
loope
mov
xor
mov
cmp
imul
pop
adc
dec
mulb
or
icebp
sub
adc
jg
and
mov
or
mov
iret
fiadds
movsb
in
stc
add
jg
xor
sti
sbb
lret
inc
adcl
cmpsb
sub
gs
jle
or
sbb
push
and
pop
int
mov
dec
sbb
loop
or
sbb
imul
jecxz
pop
cmp
addr16
je
ret
popa
sbb
jne
stos
std
adc
push
or
mov
push
fdiv
xchg
aas
inc
and
push
mulb
pop
xchg
xchg
sahf
push
pop
cld
cmp
sub
push
sbb
cmp
mov
pop
enter
dec
jae
and
rolb
loop
push
xor
outsl
add
cwtl
repz
mov
cwtl
lods
xor
out
jno
push
push
popa
add
outsb
shl
mov
gs
inc
pop
scas
out
adc
adc
call
sbb
jo
jnp
stos
adc
cltd
insl
cmp
sbb
std
gs
inc
pop
jo
mov
into
subl
in
jbe
push
iret
test
and
dec
int3
enter
mov
rol
jge
sbb
ja
sbb
inc
push
ja
mov
jno
lcall
adc
nop
lret
les
nop
inc
es
sti
dec
mov
adc
mov
dec
bound
dec
mov
outsb
xor
enter
cmp
clc
mov
inc
mov
ljmp
push
fcompl
jle
mov
cltd
insb
sbbl
mov
sahf
mov
add
iret
inc
sub
sbb
adc
insb
out
clc
mov
ds
mov
sahf
xor
mov
lods
jle
rcrl
mov
mov
aaa
adc
aaa
sti
jmp
add
or
push
clc
in
cmpsl
push
sti
ds
sbb
pusha
loopne
or
adc
push
and
sbb
push
xor
xchg
xlat
mov
jbe
or
je
aam
das
pop
mov
lods
cmp
pushf
dec
cmp
bound
ret
ret
pusha
mov
sub
negl
inc
jecxz
insb
enter
xor
or
sub
sub
int3
sahf
mov
inc
shll
jb
sub
sbb
push
dec
rclb
and
or
mov
call
push
shlb
imul
push
fnsave
inc
or
ficompl
fidivrl
and
sub
loope
jecxz
fmull
fsubs
push
mov
insb
mull
dec
mov
mov
lret
rcr
mov
mov
pop
les
xchg
xchg
test
fisubs
aaa
or
cltd
cmpsb
scas
inc
jg
push
cmp
xchg
fcom
std
push
and
mov
adc
ljmp
imul
mov
and
pusha
lods
inc
sbb
sti
pop
push
xor
push
push
xchg
push
push
cwtl
inc
icebp
adc
inc
iret
mov
loopne
jle
ret
xchg
jne
push
cmp
out
push
sahf
or
and
testb
shlb
sbb
push
and
aad
sti
mov
lock
int
ja
dec
mov
sub
out
push
cmp
call
js
xor
pop
cli
jle
addr16
dec
scas
jno
sbb
add
in
sub
aad
aad
push
into
fnstenv
cs
test
xchg
int3
ret
lret
pop
sbb
dec
pop
push
sbb
or
aam
jge
pop
mov
mov
loope
adc
or
push
movsl
cltd
mov
cmpsl
insb
out
lods
mov
in
pushl
cmc
aas
shlb
jmp
adc
lcall
mov
add
ds
sbb
stos
aad
pop
adc
push
fisttpl
jne
bound
xor
loopne
or
push
enter
inc
stos
pop
fs
xchg
clc
aas
and
insl
jo
rcll
fs
mov
lods
pop
inc
pop
and
or
in
loope
adc
push
je
sub
js
nop
xchg
jecxz
xor
mov
ficoml
cli
std
inc
ficoml
xchg
pop
cld
dec
sbb
sbb
into
rep
mov
jl
pop
xor
icebp
jae
pop
and
xorb
and
xor
mov
je
imul
rorl
cmpsb
scas
test
or
mov
lods
arpl
xchg
shrl
outsl
dec
popf
sti
xor
notb
cmp
mov
les
ds
sahf
cmp
jbe
dec
jnp
inc
es
sub
sbb
jecxz
xchg
pop
mov
pop
mov
mov
sub
push
inc
sbb
aaa
cmp
stc
scas
xchg
cmp
xor
leave
sub
jo
xor
sbb
jp
or
dec
lods
pop
popa
sub
fisttpll
push
inc
movsb
sub
ljmp
sbb
push
xchg
add
adc
xchg
fsub
mov
pop
mov
jns
outsl
pop
pop
cmc
jg
mov
mov
or
in
xchg
inc
jne
xchg
sbb
imul
mul
mov
add
sub
sub
jae
rorl
es
adc
push
rclb
xchg
out
add
push
lock
xlat
and
addr16
pop
rclb
sarb
and
sbb
dec
mov
push
sbb
pop
dec
cwtl
test
lea
push
add
mov
das
popa
pusha
pop
or
rcrb
push
and
push
iret
xchg
int
push
nop
or
inc
inc
adc
push
mov
mov
or
dec
and
lcall
leave
cli
dec
negb
or
fs
push
insl
xor
mov
flds
out
stos
push
sub
das
jns
out
mov
add
not
push
fisubl
shrl
push
adc
fisttps
mov
mov
call
loopne
push
mov
xor
loop
mov
adc
adc
seto
xor
mov
bswap
xor
sbb
adc
je
inc
push
sti
aaa
xchg
lock
out
in
addr16
or
adc
mov
aam
and
test
inc
insl
in
rolb
sarb
mov
addr16
pop
popf
mov
sub
je
jb
das
jecxz
rcrb
adc
or
push
fiaddl
aam
das
ljmp
sbb
dec
movsl
push
jmp
jae
push
mov
cld
addr16
push
out
dec
rcrb
or
jmp
loopne
test
mov
jae
in
ds
sti
jo
fs
call
inc
mov
repnz
gs
inc
or
sbb
nop
push
mov
inc
int3
in
mov
inc
mov
jnp
inc
and
push
dec
sahf
add
cld
mov
loope
xchg
adc
loope
add
mov
sbb
inc
std
cs
cli
push
cmp
push
cmp
mov
not
mov
mov
mov
pop
daa
js
cld
repnz
repz
cmp
cwtl
stos
and
pop
clc
dec
fldlg2
test
and
ds
mov
or
sub
cmp
inc
mov
addl
fcomp
xchg
or
repnz
jns
test
mov
dec
int
xchg
rcr
iret
cltd
push
insl
repnz
nop
and
test
fs
sub
lcall
mov
add
adc
push
xchg
adc
sarl
xchg
movsl
xchg
jnp
js
jge
div
in
les
lea
fisubl
xchg
jne
mov
jo
xor
push
jecxz
icebp
and
stc
lahf
xchg
inc
push
shl
call
xchg
sub
sahf
fisttpll
pop
cltd
add
pop
fisubl
or
cld
pop
xchg
pop
mov
pop
xor
test
xchg
shlb
movsl
inc
dec
hlt
cs
and
cmpl
xor
ja
pusha
inc
loope
dec
pop
sbb
outsl
push
jns
scas
data16
jb
and
fsubrs
lret
adc
faddl
jl
xor
nop
mov
or
movb
in
lahf
xchg
cld
fisttpll
or
add
ljmp
cli
add
cmp
sub
dec
repnz
adc
jnp
dec
mov
addr16
jge
std
inc
cs
add
xor
pop
pop
rcrb
pop
sbb
pushf
fistps
out
inc
mov
lcall
and
or
aad
test
jmp
sub
lcall
call
test
cltd
cmp
inc
pop
orb
out
shlb
cmc
pop
movsb
push
push
mov
mov
push
sub
mov
fdivrs
call
mov
add
cmp
inc
push
sub
jb
pusha
pop
ror
ret
jo
mov
mov
aaa
mov
repz
xor
cmpsb
filds
daa
das
iret
mov
es
arpl
cmp
fdivrs
cltd
test
les
cmp
jae
addb
sub
inc
mov
xchg
xor
sbb
into
xor
mov
pop
inc
inc
fistl
out
ficoml
lret
int
adc
dec
ret
pushf
adc
cmp
cmpsb
in
rclb
pop
xchg
sbb
cmp
shrb
fdivp
cmp
bound
sub
cmpsb
out
pop
imul
cmpsl
iret
lcall
pop
repnz
sbb
outsl
mov
stc
jecxz
in
mov
mov
daa
insb
or
lods
push
jo
lcall
cs
jo
cmp
jmp
fsubl
divb
jno
repz
push
cmp
add
dec
and
jge
push
or
jp
and
mov
cli
into
insb
fnsave
jns
add
stos
mov
cmpl
aad
fwait
ret
fistl
out
cmp
sbb
sub
jecxz
jle
adc
js
fisttpll
les
cmp
inc
lds
sub
cmp
out
xchg
jae
mov
push
push
mull
in
push
rolb
movsl
fldcw
jge
pop
int
aaa
aam
xor
pop
or
inc
and
cmpsb
sbb
add
fisubrl
mov
cs
sbb
xchg
imul
mov
std
cmp
push
sub
sub
in
ss
push
add
mov
aam
jno
ds
pop
push
notb
or
push
fistl
adc
aaa
lret
leave
ror
xchg
adc
ds
cli
out
pusha
and
push
inc
mov
pop
mov
fs
loop
insb
lods
mov
xchg
scas
dec
ficoml
scas
mov
test
jo
xor
and
scas
mov
jge,pt
cmc
add
push
xchg
cli
lods
or
sbbb
mov
ret
pop
cwtl
xchg
xorl
pop
stos
push
repnz
mov
js
push
fstps
xor
inc
jns
or
add
pop
cmp
xor
in
out
js
inc
mov
in
je
xchg
cltd
in
cmp
mov
lods
xchg
cmpsb
mov
lock
inc
stc
xor
jg
and
jnp
sub
mov
push
push
hlt
sbb
dec
cli
cmpsb
mov
scas
jae
push
mov
test
shlb
imul
ret
movsb
fidivs
bound
aam
push
jno
in
fs
fistps
cwtl
imul
xchg
clc
outsl
pop
or
out
shl
or
mov
dec
jge
sub
aad
shrb
insb
imul
sub
xchg
adc
mov
and
insl
xchg
mov
xchg
test
gs
repnz
jp
sub
cltd
cmc
fwait
jo
mov
mov
cmp
mov
pop
in
sub
sub
mov
xor
mov
sub
scas
popa
out
outsl
add
lods
add
cmp
lahf
fwait
lret
fs
rcll
adc
iret
data16
push
jno
icebp
insb
pop
outsl
mov
or
ret
pop
add
add
out
push
and
push
shl
xchg
in
mov
and
jp
and
or
or
pop
mov
and
push
sub
in
lret
loop
mov
int3
notb
mov
jmp
sub
jg
jmp
rcrl
or
add
les
insl
jmp
sti
std
cld
adc
dec
adc
dec
pop
jb
push
jg
mov
add
lods
fcoms
insl
push
movsb
mov
ret
gs
sbb
decl
mov
mov
mov
pop
sub
dec
je
inc
out
pop
mov
mov
clc
scas
xlat
cmpsb
xchg
int3
jp
sbb
or
pop
cmp
aam
cmpb
cwtl
adc
xchg
hlt
test
and
pop
dec
cmpl
lds
fwait
xor
mov
mov
outsb
mov
gs
mov
inc
mov
pop
bound
stc
daa
mov
dec
jo
dec
mov
and
mov
mov
jmp
mov
lret
loope
adc
or
stos
pop
sub
lret
jl
sarb
out
aas
hlt
lcall
shl
pop
add
pop
and
sub
push
insl
push
pop
sbb
add
jge
pop
sarb
mov
cld
mov
out
xor
pop
fnstcw
aam
jl
push
jmp
fldl
jmp
clc
imul
nop
xchg
push
sub
int3
sbb
data16
fdivs
scas
cmc
xchg
clc
mov
dec
mov
or
and
repnz
call
cld
xchg
sbb
in
and
adc
pop
cmpsl
bound
mov
or
rcr
cmp
or
hlt
fiadds
imul
sbbl
or
aaa
stos
adc
dec
inc
nop
test
lods
mov
in
pushf
sub
cli
sbb
push
sub
xchg
sbb
mov
mov
jns
xchg
movsl
mov
movsl
int3
imul
repnz
pop
xchg
xchg
jmp
mov
push
adc
xor
xchg
jno
jmp
aad
fnsave
jecxz
lahf
mov
or
cli
mov
or
shrb
ja
sub
xchg
add
mov
mov
out
in
nop
popa
push
inc
mov
mov
or
cmc
xchg
addr16
cwtl
fs
or
push
pushl
mov
cld
mov
xor
iret
repz
sbb
loop
rorb
sub
int3
cli
add
sub
xchg
adc
cwtl
dec
jmp
jae
cwtl
pop
psubusw
sbb
jle
bound
outsl
sti
gs
mov
sbb
lds
rorb
push
jle
rcr
iret
lea
sahf
mov
sub
push
imul
mov
jmp
push
mov
arpl
or
jp
xor
enter
loop
inc
jp
jg
aaa
jne
mov
adc
lock
dec
sahf
aaa
xchg
repz
sub
xor
into
test
jo
push
push
in
lods
adc
in
inc
pop
idivb
loop
cmpsl
jnp
cmp
add
cltd
xchg
xchg
fcompl
jle
push
inc
fisttpll
mov
dec
lcall
xchg
icebp
mov
or
data16
mov
jmp
or
stos
arpl
cmp
cmc
orl
add
movsb
aaa
pop
jnp
cmp
adc
mov
adc
fyl2x
lods
xchg
cwtl
jo
xor
test
js
fnstsw
int3
mov
pop
in
or
js
das
stc
test
mov
xor
data16
fimull
inc
add
jle
leave
xorb
shl
xchg
aas
sub
jl
stos
subb
sar
aam
jns
or
mov
lret
pusha
fisttps
mov
pop
aad
in
adc
and
lea
mov
and
add
sarb
mov
test
fdivrp
movsl
jo
out
mov
das
mov
push
cmp
jg
inc
lret
test
mov
push
cmc
sahf
mov
push
outsl
cmp
outsl
mov
add
sbb
leave
or
stos
pop
xlat
and
hlt
and
or
cmc
mov
xchg
inc
and
call
jne
imul
imul
xor
out
repnz
dec
cmpsb
xchg
mov
xchg
aad
nop
fcmovbe
lock
pushf
pop
clc
xchg
mov
mov
inc
xchg
cmpsl
xor
jecxz
js
sar
mov
in
xor
xchg
sbb
inc
scas
jmp
call
arpl
rol
int3
daa
fidivl
out
out
sahf
sub
mov
cld
xchg
int
push
jbe
insb
fnstsw
inc
fsts
and
jp
jmp
addps
daa
mov
pop
rcl
outsb
add
clc
stc
mov
loope
cmp
pop
insl
rclb
jmp
mov
sarb
loope
jne
push
push
popf
lds
jae
ljmp
adc
xchg
sub
pop
mov
adc
push
sbb
adcb
pop
aas
dec
mov
aaa
xchg
mov
adc
in
mov
mov
sbb
ljmp
sbb
xlat
adc
lock
pop
bound
mov
mov
notl
in
out
dec
sti
stc
cltd
jae
adc
xchg
adc
pop
inc
packsswb
insl
shlb
movsl
cmp
mov
js
cli
inc
outsb
scas
inc
sbb
mov
decl
pop
adcb
push
inc
cltd
dec
xchg
sub
jne
xchg
arpl
lock
shrb
jle
mov
scas
mov
daa
or
gs
ja
je
or
lods
add
adc
mov
mov
pop
sub
fisttpl
inc
mov
test
loop
inc
or
jp
out
push
inc
out
push
bound
jg
je
leave
ds
mov
cmp
xchg
xchg
movsl
cmp
int3
ljmp
sub
mov
shl
testl
xor
xorb
call
mov
fsubrl
sub
imul
dec
xchg
mov
subb
mov
pop
xchg
and
cmp
aad
xor
es
movl
jmp
pop
sahf
push
dec
add
push
insl
int
imul
subl
sub
push
push
arpl
jl
movsl
push
in
arpl
cli
fs
mov
mov
push
outsb
pop
pop
lds
repnz
and
cmp
test
lahf
stos
xchg
in
sub
mov
fwait
pop
addb
rcrl
adc
xchg
pop
mov
jmp
adc
shlb
andb
or
mov
insb
lods
in
xorl
rcrl
out
inc
rorl
dec
cmp
popl
mov
sbb
mov
imul
imul
or
mov
xorb
and
fisubrs
push
test
imul
les
jnp
loop
stos
sbb
jae
mov
add
js
cmp
jecxz
rolb
jne
bound
adc
inc
xor
adc
mov
in
xchg
aad
cmp
ss
in
fsts
add
xchg
loopne
push
jg
or
jle
dec
lret
cmc
call
dec
loopne
add
lods
hlt
lock
cmp
mov
aas
lods
dec
aad
sbb
dec
cmp
fldcw
jbe
jp
lret
call
je
aaa
sub
xor
and
xchg
mov
test
roll
adc
arpl
push
in
mov
out
mov
scas
sub
or
sahf
es
sti
add
movsb
scas
mov
rep
push
add
mov
pop
movsb
xchg
jb
fcmovnbe
insb
call
clc
and
aad
xchg
or
test
aad
jle
mov
mov
pop
aam
add
cltd
add
mov
mov
in
pop
jns
ja
mov
clc
mov
divb
pop
cli
stos
inc
cwtl
dec
loop
scas
call
loop
js
fsubrl
pop
icebp
xchg
inc
dec
in
lods
insb
fucomi
mov
loopne
jb
cwtl
jns
xchg
push
andb
xchg
mov
es
std
fdivrl
jecxz
nop
call
in
addr16
in
into
adc
push
adc
adcb
mov
jae
mov
sbb
pop
mov
iret
sbb
bound
ss
in
arpl
imul
pop
fcmovb
xor
or
mov
sbb
xor
push
xor
jno
xchg
andl
scas
adc
adc
mov
xorl
jo
sub
aas
pop
sub
dec
fisubl
das
cld
stos
xchg
imul
es
sub
bts
pop
mov
addb
sub
mov
push
cmp
out
adc
divl
daa
mov
fcomps
data16
mov
mov
imul
sti
movb
pop
jne
pop
cltd
stos
nop
sub
into
movsb
adc
mov
xor
sub
mov
mov
and
and
scas
cmp
pop
cmc
sbb
fidivrl
push
leave
mov
arpl
and
out
mov
xchg
subl
mov
fdivrl
xlat
xchg
sbb
in
xchg
mov
or
sub
cli
mov
push
test
enter
repnz
push
sarb
lock
pop
or
xchg
nop
das
loopne
sahf
shrb
ret
lret
cmc
into
daa
lods
sbb
jge
imul
test
ret
dec
sbb
stc
pop
into
cmc
roll
fdivs
pushf
loope
pop
and
inc
rorl
or
sbb
adc
dec
xchg
sti
sbb
adc
sti
inc
sbb
jmp
call
andl
enter
gs
sbbb
sahf
lock
imul
lds
mov
mov
xchg
pop
cwtl
movsb
fimull
adc
pushl
js
jmp
mov
test
rclb
test
and
movsl
outsl
xorl
cmc
jo
ret
clc
stos
hlt
xchg
sub
cltd
jae
hlt
fmuls
pop
or
popa
xor
and
das
sbb
xor
xorl
fidivl
mov
out
adc
adc
out
push
sub
mov
gs
push
popf
in
outsl
aam
test
push
jg
test
jo
jns
nop
sbb
outsl
push
mov
mov
iret
fbld
cmp
sbb
adcb
and
scas
xor
subl
and
ljmp
mov
mov
jmp
cmc
lock
leave
rcl
cmp
int3
and
out
lods
arpl
out
inc
cld
and
popa
xorl
mov
or
iret
jo
cmpsl
sub
xchg
popa
jg
lods
mov
jno
xchg
adc
out
adc
pop
and
cmpsl
pop
xlat
sbb
add
imul
sub
rcrl
scas
jge
and
add
loope
popa
fbstp
clc
jno
fistpl
pop
sbb
aad
sub
and
inc
nop
mov
add
pusha
punpckldq
pusha
or
scas
into
cltd
mov
dec
loope
call
pusha
in
push
sbbl
in
mov
test
mov
cmc
es
arpl
dec
repz
lret
aam
jns
insb
jo
mov
jecxz
lods
hlt
inc
mov
adc
mov
stos
insl
mov
or
fs
imul
pop
push
jmp
fisubrl
cltd
lret
push
lods
jb
lea
je
movsb
fninit
divb
dec
lock
mov
bound
jne
mov
xchg
mov
in
dec
cmp
cs
push
lds
shlb
xor
push
xchg
ret
lret
push
push
out
lock
mov
xor
rcll
jmp
insb
inc
addr16
cmc
sub
and
call
fiaddl
sbb
mov
cmp
add
stos
cmp
imul
outsl
and
in
inc
cs
fdivs
adc
iret
adc
das
outsl
add
xchg
mov
repnz
cmp
jge
sub
xchg
push
movsl
mov
xchg
fmuls
sbb
sbb
out
outsb
ret
testb
jns
jp
mov
ja
xchg
imul
movsl
gs
cmc
scas
add
inc
cmp
push
out
push
and
lahf
subb
push
xchg
pusha
and
loope
imul
addl
pop
nop
aas
lcall
mov
ss
jnp
jbe
add
stc
pop
xchg
jbe
ret
mov
stc
movsl
das
adc
pop
xor
test
add
mov
xor
mov
sub
xchg
or
xor
push
cmpsb
test
fidivl
sbb
loop
mov
sbb
adc
push
cmp
sub
sub
add
leave
and
nop
ljmp
out
cltd
fildl
movsl
insw
adc
sbb
hlt
sub
fdivrs
repz
inc
loope
add
jp
test
ljmp
ljmp
jae
out
sub
jo
sub
fdivp
cmp
out
jg
sbbl
mov
jle
lock
pop
sbb
lds
subb
mov
notl
add
xchg
fildll
ja
cmp
cwtl
imul
leave
std
jmp
icebp
xor
stc
cs
jl
mov
daa
mov
cmp
ret
mov
and
inc
iret
dec
sbb
dec
into
mov
test
adc
dec
pop
rcrb
loope
out
or
int
or
popa
adc
jns
pop
lds
scas
cli
sahf
push
lcall
sahf
insb
lods
xor
and
mov
jb
loope
xchg
in
loopne
int3
xor
sub
out
cmp
xor
adc
and
cmpsl
pop
into
jmp
es
lods
shrb
stc
mov
test
xor
push
sub
jne
jne
mov
cmp
roll
pop
insb
mov
mov
push
adc
xchg
lds
rcrl
adc
mov
fldenv
hlt
ja
add
icebp
jo
repnz
fwait
cmp
xor
push
pop
mov
loope
pop
insb
pop
push
xor
mov
lods
fs
mov
sub
add
shrl
xor
sbb
push
jmp
insl
mov
gs
mov
std
outsl
pop
mov
loope
iret
mov
lods
test
fiaddl
call
mov
and
aaa
adc
cltd
test
jl
xor
cld
push
repz
clc
and
sbbb
or
mov
repnz
push
flds
push
xchg
push
repz
fistpl
mov
push
out
jge
idivl
in
jo
fwait
shl
cmpsb
inc
sub
sti
pop
or
jb,pn
mov
sub
mov
shll
and
lahf
sbb
xchg
daa
cmp
jo
dec
movsl
push
mulb
shrl
mov
adc
fmul
jo
test
movsb
ds
inc
nop
sbbl
imul
and
fld
fiadds
aas
xchg
inc
and
sub
lret
xchg
cs
xchg
cmpsb
jg
mov
mov
jmp
rorl
and
fucom
shrb
mov
repz
mov
dec
hlt
sarb
xlat
movsb
test
ficoms
xchg
lret
adc
ja
incl
inc
inc
add
call
fiaddl
shlb
xchg
sahf
rcrl
sbb
imul
bound
mov
and
add
ret
ret
or
cmpsl
out
jecxz
mov
mov
sbb
lret
mov
mov
imul
xchg
or
mov
sbb
xchg
sub
aaa
fs
fcoms
fldenv
fsubrl
push
fistpll
int
jae
push
adcl
xchg
int
cmp
scas
push
jno
and
cmp
jns
pop
iret
xor
mov
in
clc
out
push
mov
xchg
rol
in
bound
and
jae
cmpsl
movl
fldenv
loopne
adc
xor
adcb
pop
mov
cli
sbb
ret
jle
movsl
pop
ljmp
lods
adc
lods
clc
gs
scas
in
test
fcomip
lods
outsl
jl
dec
out
in
xor
fs
enter
inc
mov
ret
and
cmp
sbb
lods
stos
popf
scas
mov
sahf
push
nop
ret
or
dec
inc
leave
rcll
and
repz
pushf
jnp
add
fwait
pop
sbb
shl
mov
cmp
lcall
cli
xor
mov
cwtl
mov
ret
sub
sbbb
sarl
insb
hlt
ss
lret
dec
data16
das
mov
loop
call
push
loopne
out
jp
or
cwtl
mov
jno
in
gs
push
mov
jecxz
add
push
call
call
ljmp
mov
bswap
mov
mov
xchg
xchg
mov
adc
popa
xor
les
fsubs
push
shrb
inc
push
lods
call
into
or
xchg
xchg
push
test
addl
pop
cli
mov
inc
mov
xchg
ret
fisttpll
mov
jg
test
lea
sbb
fwait
je
mov
mov
mov
jno
adc
xor
pop
xor
jecxz
xchg
xor
out
imul
pop
add
mov
push
push
sahf
mov
popa
and
sahf
not
fadd
mov
and
rcll
nop
pop
stos
in
fwait
scas
les
sub
bound
aad
rorb
dec
test
repnz
pop
pushf
mov
fidivs
push
into
and
sub
push
ret
or
mov
fcmovb
gs
cmp
mov
adc
mov
aaa
sbb
cmpl
mov
imul
and
sbb
cli
ficompl
jmp
mov
mov
jbe
rclb
or
and
leave
and
jmp
mov
sbb
in
sarl
pushf
cmp
or
cmp
movsl
pushf
xor
in
mov
push
jno
mov
sub
iret
mov
leave
std
and
sub
and
mov
pop
xor
dec
js
lahf
test
pop
xorb
inc
andl
popf
and
xchg
inc
loop
in
inc
fwait
push
cld
mov
and
ja
mov
iret
jmp
dec
jne
outsb
cmp
test
rcll
repz
sbb
popa
loopne
stc
mov
repz
cmp
xchg
xor
shlb
pop
cmc
xor
sbb
jbe
mov
mov
loope
into
in
rorb
repnz
add
shl
fldcw
xor
adc
call
pop
shrl
roll
in
sub
sub
pop
jne
test
sarb
stos
cmp
scas
mov
or
xchg
push
mov
dec
add
jp
sbb
test
xor
pop
leave
cwtl
jno
cmpsl
bound
add
mov
jo
pop
das
mov
mov
in
bound
lods
out
and
icebp
cwtl
pop
sar
shlb
test
popf
leave
xor
adc
in
push
mov
int3
daa
or
call
xchg
pushf
aad
icebp
and
imull
test
repz
pop
cmc
lods
pop
sbb
mov
sbb
add
dec
jecxz
in
bnd
jle
mov
imul
mov
popf
pop
push
xor
rcll
ret
lods
adc
fcomp
inc
mov
fiaddl
lods
cmp
dec
lret
inc
push
in
inc
cmp
push
fcomps
repz
jg
mov
lret
stos
push
popa
ret
mov
stos
cmp
sbb
mov
mov
adc
cmc
inc
imul
adc
xchg
mov
xchg
sbb
push
jnp
xchg
int3
lds
push
pop
mov
adc
mov
popa
xchg
movsl
inc
mov
jecxz
mov
fsubrs
cli
jmp
jmp
movsl
adc
mov
pop
mov
push
out
xchg
push
and
push
jbe
jl
push
sti
jge
nop
adc
and
loop
fisttps
xor
push
add
xchg
fwait
mov
addl
dec
pop
and
je
mov
rorb
mov
mov
jl
mov
imul
repnz
nop
xchg
sbb
loope
mov
mov
push
cmp
xchg
call
add
push
jmp
jl
jb
sub
xchg
push
je
cltd
clc
rclb
loope
imul
xor
int3
mov
orb
mov
insb
outsl
mov
mov
data16
fsubp
add
outsl
xor
shll
mov
jg
orb
stos
mov
movsb
mov
xchg
out
mov
add
imul
xchg
sub
and
mov
cmp
mov
pop
stos
outsl
shlb
xor
inc
and
xor
les
call
inc
movsb
add
pusha
stos
loopne
xlat
mov
aaa
mov
jns
fisubrl
push
mov
cmp
lea
int
dec
add
mov
pop
mov
lea
lret
shl
and
mov
pusha
lock
adc
ret
sarl
mov
cmp
test
adc
mov
jl
pop
stos
sub
mov
adc
and
push
imul
rclb
fisttpl
sbb
imul
or
cltd
imul
xchg
mov
push
popa
pop
jne
jne
mov
fmul
mov
jno
fidivrs
pop
and
or
add
jns
push
pop
jne
adc
cmp
lock
xchg
mov
insl
fnstenv
push
nop
sahf
sbb
adc
scas
je
call
subl
or
pop
jbe
popa
repz
cld
rcrb
dec
push
repnz
or
fcmove
hlt
xchg
js
imull
sti
vpshuflw
pusha
out
stos
jg
mov
das
rcl
out
push
outsl
imul
push
icebp
add
pop
push
lock
lahf
test
push
mov
add
or
xor
xchg
aas
addb
inc
xor
xchg
into
mov
cs
stos
fmuls
rcl
xlat
ficomps
push
pop
cltd
lds
xor
pushf
gs
ss
inc
sbb
mov
cmp
dec
cmp
dec
pop
fldenv
rcl
jns
pop
jae
icebp
and
sti
lock
in
es
mul
dec
jo
or
pop
xor
jb
cmp
mov
cld
push
mov
jg
cmc
insb
mov
sbb
repnz
mov
adc
or
cmpsb
mov
pop
add
inc
fiadds
sbb
movb
movsb
or
and
mov
xchg
pop
aaa
cltd
mov
sub
pushf
adc
and
pusha
inc
roll
imul
pop
mov
xor
jo
outsb
xor
rol
stos
hlt
cmp
and
test
fistl
sbb
jecxz
cmpsl
xchg
imul
and
daa
int3
jecxz
cmp
enter
mov
popl
cwtl
and
lahf
xchg
insb
in
jne
icebp
cmp
ss
sbb
mov
std
loopne
inc
sarb
jge
pop
enter
xor
add
ret
and
mov
addr16
jmp
jmp
cli
mulb
cwtl
or
xor
arpl
pop
mov
ss
jnp
aad
xchg
inc
subb
mov
push
dec
mov
test
mov
das
sbb
cmc
cmp
xchg
nop
dec
mov
add
push
data16
fimuls
int
jp
inc
pop
sub
pop
aaa
xor
insb
aaa
shll
std
add
mov
cmc
sub
xorl
cmp
dec
jp
lea
mov
dec
mov
pushf
xor
add
jno
mov
aaa
das
aam
out
test
int
or
aam
int3
xlat
sbb
lret
aaa
cmp
jnp
stc
rcr
out
and
test
nop
adc
lea
stc
add
out
dec
xchg
mov
push
sub
dec
sbb
das
je
lock
lret
gs
sub
adc
push
mov
pop
dec
mov
dec
dec
add
push
cmc
nop
fidivrl
jecxz
daa
add
dec
movsl
je
leave
cltd
xadd
pop
xor
add
mov
sarb
aas
in
das
or
jb
or
dec
icebp
and
inc
aaa
cmp
xchg
sbb
pop
add
stc
or
loope
adc
jne
or
and
out
jb
lods
pop
jno
fstps
jns
mov
dec
sub
add
lret
lea
fildl
orb
lods
lea
mov
jl
push
push
mov
push
xchg
das
std
sbb
pop
sub
mov
mov
repz
outsl
mov
rol
mov
cmp
fidivs
dec
jle
sub
outsb
mov
outsb
repnz
xchg
or
xchg
dec
jo
xor
notl
mov
mov
xor
stos
and
push
stos
cmp
enter
lds
adc
add
frstor
clc
mov
pop
sbb
jne
dec
ffree
xor
xor
pop
mov
push
cmp
or
testb
adc
repz
add
jl
not
fnstenv
or
xchg
xchg
push
lahf
int
scas
loopne
sbb
imul
nop
fdivrl
jmp
xchg
in
popf
filds
leave
je
cli
cmp
adc
fst
inc
jae
roll
icebp
and
mov
pop
cmpl
pop
push
inc
jne
xchg
jbe
pop
pop
add
or
sub
lods
mov
sbb
adc
pushf
adc
xor
popf
jl
loopne
popf
sti
jg
xor
push
xor
sti
cmp
lahf
push
and
rcrb
and
mov
inc
out
push
mov
ss
push
in
jne,pt
mov
pusha
cmp
push
xchg
lock
xchg
cmc
es
xchg
loop
movsb
fimull
cltd
cwtl
cmp
idivb
ret
insb
fs
adc
xor
fimull
movd
inc
cld
insb
xchg
adc
sub
lret
add
dec
in
lea
push
arpl
repnz
inc
mov
mov
and
mov
or
mov
hlt
jns
out
aaa
jno
inc
adc
mov
fisttps
jo
sahf
dec
outsb
std
jns
lds
jnp
sub
push
dec
mov
xchg
in
call
sub
or
push
xchg
jns
lds
mov
jo
push
pop
mov
ja
idivl
cmp
outsl
mov
pop
and
rclb
push
xchg
pusha
mov
xor
in
in
fisttpll
aas
xor
int3
mov
jae
lea
lock
pop
cmpb
lcall
and
fbld
mov
loope
push
xor
and
mov
js
fsubp
add
mov
pop
push
pop
jns
imul
push
insl
push
jae
in
sbb
out
mov
ds
cli
xor
pop
push
mov
sahf
adc
iret
jo
adc
jnp
or
daa
pop
adc
pop
mov
rcrb
mov
cmp
sbb
mov
push
mov
fs
mov
mov
inc
punpckhwd
pop
mov
dec
mov
nop
shl
mov
insb
cmpsl
add
add
clc
lock
cmp
mov
cmpsl
andl
inc
mov
call
adc
test
xchg
loop
xlat
mov
jge
add
dec
loop
add
mov
push
and
push
mov
ret
cmp
jle
imulb
shll
scas
lahf
add
inc
cs
pop
jb
sub
dec
or
lahf
and
sbb
sub
iret
rol
in
fucomi
movsb
dec
add
insl
pushf
mov
pop
inc
cmp
jle
cmp
cmc
push
out
lcall
rcrl
mov
push
push
cwtl
xchg
xchg
shlb
add
nop
data16
cmpsl
repnz
mov
pusha
inc
adcl
std
shlb
add
xchg
jo
xchg
icebp
cs
js
sub
je
stos
in
pushf
mov
or
shll
sbb
xchg
cwtl
push
mov
jge
xor
movsl
push
xor
cld
push
dec
cmp
popa
adc
xor
push
lahf
jecxz
les
sarl
xchg
out
push
adc
cmpsl
fwait
cmp
outsb
int3
jno
loop
xor
cmp
push
xor
stos
jns
daa
push
movsl
subb
mov
loop
and
cltd
fdivrp
pop
inc
imul
pop
sbb
or
adc
js
push
loopne
testb
lret
jl
enter
aad
cltd
mov
lea
push
push
aad
mov
mov
fmull
mov
jmp
test
or
enter
imul
lcall
cmc
in
out
adc
pop
mov
addr16
fcompl
ror
cwtl
xor
jae
dec
test
aas
popa
scas
sbb
inc
xor
sbb
mov
das
scas
xchg
call
xchg
adc
test
arpl
xor
push
insb
xor
fisubl
pusha
dec
xor
adc
mov
dec
cli
in
mov
jnp
jb
loopne
lret
fidivrl
push
rorl
mov
adc
pop
cmp
cmp
nop
inc
add
int3
test
jbe
dec
jb
rcr
xchg
inc
aaa
xchg
movsb
iret
or
repnz
jb
pushf
lds
jecxz
push
cmpsb
popf
push
js
mov
je
cmpl
lds
lock
ret
sbb
fsts
mov
mov
jecxz
mov
repnz
push
pop
add
mov
or
jmp
out
cld
ret
das
push
mov
jns
dec
ficoml
sbb
mov
sub
adc
xor
jmp
lahf
leave
xchg
aam
inc
mov
push
fdivrl
arpl
xor
push
test
and
pop
ja
sbb
call
lcall
sbb
in
inc
xor
mov
loopne
scas
bound
mov
mov
or
add
insl
push
jbe
sub
mov
xchg
addr16
jl
or
es
cmp
clc
and
pop
mov
scas
nop
sub
popf
dec
ljmp
dec
clc
aas
aas
test
and
andl
and
dec
outsb
push
vfrczps
mov
add
stos
or
sbb
mov
pop
lcall
sub
pop
ret
lods
sub
xor
sub
les
cmc
cmp
push
push
pop
mov
sub
pushl
mov
call
arpl
cmpsb
push
fnsave
adc
cli
mov
sahf
inc
xor
insl
imul
ljmp
and
xchg
lock
leave
inc
clc
cltd
cwtl
and
xor
and
xchg
mov
xchg
test
pop
in
lret
xchg
sti
push
mov
ja
inc
icebp
xchg
les
add
test
jo
stc
cmp
cld
xchg
mov
ljmp
xchg
stc
fisttpll
inc
shll
leave
inc
icebp
popf
repnz
shrl
sar
xchg
xor
ja
mov
sbb
xor
jno
out
push
roll
int3
pop
lods
cmc
add
dec
xor
xchg
imul
xchg
xchg
imul
lods
push
das
or
adc
xor
add
mov
pop
sub
mov
sub
ss
sub
cmp
ficoms
pop
orb
add
sar
enter
fimuls
inc
lods
gs
ret
mov
jecxz
push
xor
jmp
jp
aaa
mov
leave
pop
mov
xchg
jns
inc
hlt
nop
das
or
rcll
jmp
jbe
lahf
inc
rclb
test
add
in
into
jg
sub
dec
repz
mov
and
andl
cs
icebp
push
dec
xchg
into
scas
lahf
nop
pop
sub
stc
inc
aas
dec
xchg
push
and
je
adc
cmp
repnz
and
cmpsb
sbb
inc
test
dec
das
inc
jae
or
in
add
push
test
push
sbb
mov
push
jle
sbb
shrb
pop
xor
fnstsw
adc
ljmp
mov
mov
add
or
sub
xchg
xor
faddl
hlt
push
inc
pop
xchg
repnz
mov
outsb
shll
fs
daa
clc
jl
or
add
cmp
pop
pop
pop
push
adc
repnz
sbbb
pushf
data16
js
fdivr
or
ds
or
jmp
mov
test
cmc
notb
mov
dec
enter
call
out
cltd
dec
push
mov
js
rorl
push
rclb
mov
data16
xchg
cwtl
out
sub
cmc
xchg
jne
mov
push
movsl
mov
loopne
inc
lods
xchg
jp
pushf
push
loope
call
xchg
cmp
les
out
jns
lahf
inc
add
xor
int
outsl
mov
cmp
lds
pop
adcb
adc
xor
scas
ljmp
mov
adc
repz
nop
pop
lods
test
movsl
rolb
mov
shrb
outsl
cwtl
adc
or
inc
addr16
popl
loop
adc
xchg
cmp
dec
lea
in
movsl
push
cltd
lea
repnz
aaa
pop
cmp
invd
lods
or
mov
dec
stos
mov
xlat
add
sahf
jle
pop
mov
lret
jmp
jmp
or
adc
dec
xlat
fcompl
pop
stos
jmp
fcmovb
andl
les
cmp
push
mov
shlb
test
aam
ja
lds
enter
and
insb
out
ds
rclb
or
add
add
sbb
cmpsl
adc
clc
sbb
icebp
xor
xchg
insb
loop
mov
imull
push
pop
or
and
cltd
inc
cmpsl
push
push
inc
push
cmpsl
add
add
repnz
std
mov
sahf
mov
cmp
repz
pop
xchg
test
or
repz
sahf
xchg
gs
sub
les
int
mov
shll
sahf
sbb
fildll
cmpl
push
cld
and
sub
jae
lcall
or
or
and
les
xchg
repz
jmp
mov
add
xchg
loop
dec
and
xor
mov
mov
pushf
pusha
and
int
cmp
ja
daa
add
fdivl
sub
xchg
mov
fldenv
jne
inc
ljmp
lds
shlb
dec
push
and
lcall
ret
jb
outsb
fs
lcall
in
rcll
mov
lock
shll
push
dec
jns
sbb
scas
adc
xor
insb
sahf
or
cld
or
shlb
fdivr
cmc
pop
movsb
ljmp
push
int3
adc
rorl
jbe
add
adc
lret
jne
and
pushf
xchg
mov
xor
push
cltd
mov
pop
stos
out
and
sub
lods
aas
ljmp
cmc
in
rolb
out
xor
or
andb
cltd
xchg
fstpl
push
sbb
cmp
imul
pusha
mov
fistpll
jno
adc
adc
mov
in
xlat
daa
data16
inc
arpl
sub
adc
shrb
mov
dec
xchg
adc
jne
fstl
jb
scas
data16
push
and
mov
inc
ljmp
cmpsb
bound
cs
inc
cltd
cmc
aam
xchg
or
mov
sub
xchg
cmpb
stc
sub
adc
jecxz
xchg
cmp
movl
xchg
inc
pop
pop
push
mov
jmp
mov
inc
and
xchg
mov
jno
fsubl
jne
mov
rcl
jle
pop
in
pop
sti
mov
pusha
inc
les
xchg
movsb
adc
cli
mov
fsts
subb
push
or
sar
add
out
ja
jmp
jae
sub
out
add
mov
cmpsb
dec
lods
dec
sub
mov
fwait
outsl
paddsw
push
or
cmpsb
inc
icebp
inc
lea
lret
roll
pop
adc
cld
push
add
pop
int3
pop
arpl
adc
in
mov
adc
and
ljmp
add
adc
pop
adc
shlb
pop
dec
addb
hlt
xor
ja
push
fs
popa
flds
cmp
mov
loop
pushl
and
lods
cmp
push
pop
or
sbb
mov
xchg
repz
add
sub
jl
inc
mov
and
loopne
in
rcrl
cmp
andb
cmc
lahf
dec
jo
out
enter
jecxz
pop
push
mov
bound
xor
sbb
popf
dec
scas
sbb
fadd
cld
push
push
mov
or
sbb
push
jge
pop
rcrl
xor
cli
bound
shlb
cmp
out
inc
es
in
cmc
mov
adc
ja
aad
out
push
fidivl
repnz
adc
in
movsl
repz
lcall
test
push
push
adc
stc
or
test
push
sti
int
dec
insb
pusha
pop
int
insl
mov
pop
sub
lret
lods
jp
adc
sub
dec
fwait
mov
jnp
ljmp
lods
daa
pop
xchg
insl
jecxz
adc
sub
xchg
mov
xchg
pushf
xchg
in
mov
jne
dec
lea
dec
imul
daa
mov
and
imul
cmp
scas
mov
cmpsb
in
jae
insl
test
pop
arpl
xor
in
popa
push
sub
jnp
or
inc
xchg
int3
mov
sbb
and
inc
jg
call
test
negl
pop
pop
jae
mov
imul
rcrl
lods
je
lret
push
notl
cmp
test
xchg
popf
pop
sbb
and
sub
adc
cmp
mov
ficompl
and
mov
clc
xor
mov
ds
or
dec
add
out
jne
or
inc
out
rol
sub
mov
pop
inc
hlt
addl
notl
movsb
out
cmpsb
fsqrt
jmp
mov
lret
sub
cmp
jle
mov
adc
outsb
jle
dec
pop
clc
mov
dec
mov
mov
mov
outsb
jecxz
out
push
cmp
subb
and
sub
pop
es
pop
mov
adcb
inc
push
aas
xor
int3
push
inc
addr16
mov
push
inc
pushf
ja
stc
enter
sub
scas
jno
xchg
or
enter
test
push
mov
shlb
push
jle
daa
rcl
inc
mov
mov
or
mov
shr
orb
in
hlt
scas
push
je
xchg
or
xchg
mov
xor
enter
cmp
adc
mov
gs
xlat
into
cld
mov
xchg
js
add
std
sub
ret
adc
les
pop
cmp
jp
inc
cmpsb
shl
sbb
add
or
mov
enter
add
std
dec
fucom
push
mov
xchg
int
jnp
xchg
enter
inc
inc
xor
fsubl
int
jle
push
jg
pop
sbb
and
cmpsl
dec
jl
push
mov
movsb
daa
pop
cwtl
lods
sbb
jo
mov
mov
aam
sub
fisubrs
std
call
cmpsl
pop
lahf
int
sahf
sbb
insl
stc
and
stc
jp
repnz
scas
clc
cld
ret
push
cmp
sar
nopl
cmpsb
dec
outsb
movsb
xchg
arpl
in
inc
dec
lods
gs
and
sub
das
sarb
rcrb
push
stos
nop
jnp
loopne
mov
add
add
or
outsl
pop
aaa
pushf
mov
insb
mov
dec
fs
jle
push
mov
jmp
cmpsl
addl
mov
fucomi
sbb
jo
xchg
icebp
mov
fisttps
cmp
lea
divl
sbb
inc
mov
sub
jb
mov
mov
out
fidivrl
push
mov
mov
mov
sti
mov
lret
dec
adc
and
imul
xchg
shr
xlat
push
sub
popa
sti
cltd
mov
daa
cmpsl
jno
fdivrl
add
in
mov
mov
out
pop
and
leave
fildll
pushf
es
pop
mov
push
push
mov
jns
aas
test
xor
lea
cli
jns
mov
movsl
push
faddp
adc
shlb
pop
adc
stc
cmpsb
and
xchg
stos
insl
cs
pop
mov
sbb
fisubrl
ja
adc
lods
scas
das
jl
dec
lahf
lret
cltd
lret
and
jns
dec
fcomip
out
adc
inc
ret
lods
xchg
mov
sbb
inc
jp
push
sub
add
pusha
mov
xor
inc
push
mov
cmp
loopne
test
sahf
xor
out
ja
xchg
in
adc
scas
mov
movb
push
mov
rol
adc
jns
aas
loope
jge
push
and
bound
scas
out
adc
push
rcl
popa
add
pop
imul
out
adc
cmpsb
xor
mov
leave
mov
inc
jp
sub
stc
testb
mov
xor
ljmp
outsl
cmp
inc
stos
cmp
stos
ret
lcall
out
jns
add
jb
xchg
sub
mov
cmpsb
push
aad
cmpl
lahf
syscall
push
aaa
imul
mov
xchg
mov
pop
cmpsb
pandn
inc
fidivl
scas
jno
inc
test
das
adc
pop
mov
jae
sbb
popl
push
sbb
arpl
cwtl
ret
inc
loope
mov
and
adc
lcall
push
inc
mov
pop
shl
test
inc
push
mov
xor
jp
cmp
and
adc
dec
es
mov
pop
dec
testb
xor
dec
push
cmp
ljmp
ja
xchg
dec
andb
test
faddl
scas
fistpl
push
loopne
add
push
jmp
mov
ja
lea
lods
aad
jo
sbb
or
inc
and
rcl
mul
cmpsl
push
pop
sahf
cld
xor
dec
cmp
cmpsb
push
inc
stos
add
pop
dec
xchg
aam
sbb
push
bound
testb
xchg
aas
push
mov
push
mov
ja
lock
lret
sti
flds
mov
lds
aas
mov
dec
mov
setle
pop
mov
add
mov
cld
mov
jge
icebp
jb
ret
int
pop
or
jle
xchg
jns
ret
mov
clc
negb
movl
lods
lret
test
fucom
pushf
add
lock
cld
mov
jg
or
dec
arpl
ss
mov
push
xchg
ret
jl
xor
mov
jmp
sbb
in
stos
xchg
jbe
sarb
mov
jecxz
push
jg
adc
stc
fs
fldcw
inc
inc
push
stos
push
movb
mov
in
notb
push
jecxz
xor
test
rclb
fs
xchg
lcall
sti
dec
shll
inc
dec
pop
std
adc
mov
adc
push
ret
jae
pop
or
pop
out
loope
jne
inc
cmp
lock
sub
popa
jns
test
or
mov
mov
dec
xor
cmp
adc
loop
out
sbb
aas
in
pop
sbb
and
and
int3
js
imul
stc
pop
out
data16
jge
push
roll
sbb
adc
cmp
int3
pushf
pop
sahf
enter
cmpsb
cli
pop
nop
dec
sahf
fwait
mov
hlt
fxtract
rep
ja
hlt
add
pop
sti
push
iret
jle
jmp
adc
lds
pop
dec
pop
xchg
sahf
call
or
in
daa
test
sub
js
mov
iret
lods
in
pop
ja
lock
cmp
sub
int3
repnz
pusha
stc
adc
inc
jnp
loopne
pop
fnsave
mov
mov
out
push
add
xchg
fisttps
mov
and
mov
mov
xchg
fbld
in
fildll
mov
or
flds
or
push
stc
jne
into
add
jnp
mov
mov
lea
repz
sub
dec
iret
int
rcrl
filds
inc
mov
es
pop
insb
pop
dec
loop
pop
andl
mov
fs
jnp
aaa
notb
aad
loop
adc
adc
and
inc
imul
repz
jl
sub
cmp
leave
sahf
in
ja,pn
iret
insb
inc
add
add
or
sub
js
inc
daa
add
mov
push
mov
dec
insl
or
push
or
sti
push
lds
loopne
fadd
fldt
inc
call
aas
test
xlat
int3
test
rcrl
imul
out
call
lret
push
inc
jb
and
jp
gs
add
lock
mov
xchg
pop
cld
aam
rorl
enter
and
in
add
nop
mov
dec
xor
adc
flds
pop
aas
popf
inc
add
out
xor
sbb
stc
repnz
or
xchg
pop
das
insb
imul
add
cwtl
mov
cmp
dec
mulb
test
mov
sbbl
scas
push
shlb
clc
pop
test
lods
mov
dec
call
cld
out
add
cltd
mov
cmp
push
mov
adc
dec
fisubrs
pop
pop
pushl
mov
sbb
repnz
hlt
shrb
push
out
cwtl
outsb
js
std
mov
dec
push
insb
call
notb
orl
mov
and
pop
mov
sbb
imul
jo
push
mov
jp
orb
jg
push
sti
inc
dec
movsb
je
mov
push
loope
sub
dec
les
mov
mov
push
or
aad
adc
ss
cld
jb
xchg
ljmp
sbb
pusha
jno
push
push
push
xchg
jp
add
dec
mov
ds
shl
inc
xor
mov
imul
fldcw
xor
pop
hlt
sbb
push
adc
add
out
mov
rorb
cmpsl
sbb
mov
in
pop
lahf
inc
test
dec
push
add
sub
mov
mov
jge
add
push
xor
stos
jge
dec
cwtl
shlb
pop
mov
in
sub
mov
inc
mov
stos
out
ss
imul
ja
imul
xor
mov
sub
fcmovnu
add
and
mov
push
pop
sbb
mov
andl
fisttpl
sbb
pop
adc
dec
test
inc
or
lock
or
sub
or
outsb
jnp
jge
inc
push
rcrl
adc
mov
dec
mov
mov
push
pop
xor
insb
adc
mov
outsl
rorb
stc
xchg
movsb
bound
jb
push
lods
dec
cmpsl
jmp
scas
sarb
dec
and
pop
ljmp
push
in
in
sbb
sbb
mov
out
cmp
xchg
push
sbb
dec
sub
mov
sti
int3
sbb
mov
jg
xor
mov
filds
xchg
pminsw
mov
push
stos
movsb
jmp
lods
mov
push
pop
or
mov
out
and
xchg
dec
in
dec
lcall
icebp
pop
cmpsl
rorb
out
sahf
push
sti
mov
dec
out
andl
loope
shl
outsl
daa
pop
lds
frstor
repnz
pop
and
cmpsb
jnp
sbb
xchg
mov
mov
adc
push
inc
lock
cltd
and
fnsave
adc
jge
in
add
insl
scas
sbb
mov
mov
inc
aad
rep
fcmove
hlt
adc
cli
lds
add
dec
call
repz
je
push
add
enter
je
dec
jmp
and
ja
push
and
fwait
ds
mov
out
fdiv
dec
out
std
jmp
enter
jns
in
ss
shrl
jl
xor
loop
push
sbb
xor
sub
push
stos
jmp
inc
sahf
jbe
adc
inc
xor
xchg
in
out
or
cld
test
inc
or
inc
test
xor
mov
ja
sub
scas
ja
or
adc
ficoml
cmp
fstps
fyl2x
dec
cmc
mov
inc
xchg
mov
mov
cmc
mov
stos
dec
pop
pop
sbb
hlt
dec
in
jnp
mov
int
pushf
std
test
pop
test
daa
pop
inc
mov
inc
pop
in
push
test
jl
xlat
push
xlat
xchg
mov
adc
testb
dec
das
sbb
push
inc
inc
cli
cmp
dec
mov
negl
aam
daa
stos
in
sub
arpl
push
repz
enter
add
mov
jle
add
ss
movsl
xchg
pop
aas
ja
fidivs
xor
mov
data16
je
pop
negl
pushf
pop
aad
mov
testl
mov
fidivrs
clc
mov
pop
sbb
or
loop
and
movsb
aam
xchg
push
mov
ret
or
rcrl
mov
mov
ficompl
icebp
mov
out
fs
mov
mov
dec
cmp
push
sbb
mov
xchg
loope
iret
pop
dec
xor
je
xor
push
push
sbb
jnp
movsl
add
enter
ret
ret
push
jge
jo
sub
sbb
cmp
repnz
stos
shl
test
es
pop
pushf
jb
stos
aas
test
sub
add
imul
ds
sbb
jmp
adc
mov
xchg
int3
lret
xor
xchg
jb
sub
mov
subl
jl
lcall
rol
ret
imul
push
adc
or
cltd
jo
or
mov
rdmsr
std
inc
sahf
push
hlt
inc
std
popa
inc
sbb
lret
push
imull
or
xor
cs
dec
call
repnz
add
test
iret
setne
test
mov
adc
out
cmp
cmpb
inc
fdivs
jns
fs
sub
fwait
rorl
fisubrs
mov
addr16
ljmp
negl
pop
sbb
jno
scas
inc
sbb
sarb
push
sarl
lahf
rorl
scas
mov
or
or
int
jae
or
xchg
leave
fadd
nop
hlt
and
xchg
imul
inc
jg
test
in
mov
imul
in
in
inc
lret
or
clc
mov
incb
adc
push
push
sub
pop
adc
inc
arpl
leave
or
test
push
sbb
push
lea
xchg
je
dec
push
aas
mov
cli
test
les
mov
es
add
mov
add
inc
dec
mulb
push
in
mov
inc
mov
cmc
cmp
test
stos
iret
icebp
jo
pop
xchg
xchg
aas
push
jbe
dec
lods
aas
das
pop
cmpsl
jle
and
xor
jnp
xchg
pop
fiaddl
xor
lret
push
loopne
test
jne
sahf
or
nop
test
jmp
mov
push
jb
mov
xchg
std
pop
cmp
pop
sub
or
cs
arpl
sbb
and
or
call
sar
adc
ljmp
mov
pop
andb
leave
or
adc
xchg
popf
mov
mov
fsts
stos
mov
jmp
sub
pop
add
sub
mov
jmp
lahf
enter
add
mov
out
rolb
jge
scas
cli
rcrb
adc
sub
in
xchg
lret
fs
pushf
or
xchg
inc
push
in
inc
lcall
jae
or
aaa
push
inc
insb
fisubrs
lea
push
in
lds
cmp
xor
movsb
iret
add
xchg
mov
pop
cltd
cmpsl
push
jg
xlat
cmpl
jge
loopne
imul
testb
cld
or
bnd
adc
iret
jbe
js
int
filds
mov
mov
enter
inc
and
sbb
add
lret
mov
pop
inc
fsubrl
int
sahf
push
stos
fisttps
push
int
cwtl
lcall
mov
out
and
popa
sbb
in
sbb
push
sub
and
ret
inc
inc
es
jmp
movsb
sbb
or
sti
movsb
test
push
cmp
xchg
scas
sub
mov
and
adc
ficoms
cmp
test
aam
mov
pop
push
lea
add
lods
hlt
push
or
xor
push
lods
imul
test
cltd
pushf
rclb
jp
or
mov
arpl
xor
int3
insb
add
xchg
ret
jae
fnsave
push
imul
insb
dec
push
repnz
add
pop
test
mov
jne
jns
xchg
fdecstp
and
scas
jg
fcoms
lock
sahf
mov
jecxz
add
sub
iret
popl
pop
mov
push
ret
pushf
xorl
mov
shlb
and
sub
xchg
ljmp
in
fxch
xor
rcll
imulb
and
sbb
sbb
cld
and
aam
jle
jno
leave
fisubl
or
loope
xor
fs
in
xlat
popf
mov
cmp
dec
push
xor
hlt
dec
mov
push
mov
inc
push
movsl
cs
cmc
cs
adc
add
shl
or
dec
adc
mov
xchg
fistps
mov
testl
sahf
hlt
es
int3
jle
jno
fsubrp
pop
mov
stos
push
outsl
mov
mov
cltd
mov
mov
imul
fisubl
lea
cld
adc
in
cwtl
in
addr16
movsl
cli
test
or
jle
lahf
pop
callw
mov
xchg
sti
fs
pop
xchg
leave
cld
add
mov
dec
addr16
mov
cltd
js
cmc
shll
int3
out
dec
and
rcl
and
lods
arpl
mov
lock
repnz
and
inc
and
adc
push
jle
lcall
push
outsb
add
jb
mov
rclb
xchg
and
push
lods
sub
jg
jne
loopne
sarl
lahf
out
and
call
inc
cmp
fcom
mov
pop
stos
out
inc
out
movl
dec
adc
sub
cmp
xchg
xor
in
and
int3
xor
mov
jp
or
addl
lock
ret
enter
stc
imull
movsb
ja,pn
incb
addb
mov
ja
movsl
pop
std
jmp
dec
call
lahf
fcmovbe
js
inc
popa
or
inc
orb
dec
and
fisubrl
adc
std
cmp
ljmp
std
js
push
push
add
jg
xchg
cmp
mov
push
mov
xchg
push
cmp
les
or
test
shl
rolb
imul
bound
ret
adc
mov
call
jb
xor
push
mov
sbb
nop
dec
bound
jb
xor
popf
lret
int3
mov
inc
nop
sbb
fnsave
add
inc
das
inc
push
test
mov
sbb
enter
mov
dec
shlb
xor
and
pop
out
orb
pop
jae
loope
and
sub
jne
cmpsl
test
or
test
lret
mov
inc
div
adc
aaa
cmpb
shlb
xchg
jns
sub
xchg
mov
push
out
aaa
adc
fsubs
push
fimull
mov
inc
jmp
or
insb
mov
cmpw
test
lods
cmpsl
jmp
in
xchg
and
add
mov
aaa
in
cmc
ficoms
repnz
dec
js
add
cwtl
pop
test
push
inc
je
sbb
in
push
popl
out
sub
mov
pop
ljmp
mov
pop
cmpsl
jne
pop
lods
xor
xlat
rcrb
decb
pop
add
fsts
outsl
mov
lcall
add
aam
in
inc
int3
sbb
lahf
daa
mov
or
stos
push
xor
outsl
std
push
xchg
inc
fs
sbb
fsubr
movsb
adc
xor
es
sub
sti
dec
xor
ret
insl
xchg
pop
stos
mov
xchg
add
adc
mov
mov
out
flds
push
insl
cmpsl
ret
or
lahf
jmp
outsl
or
icebp
repz
in
hlt
add
xchg
cwtl
xchg
adc
test
cmp
ffreep
psllq
scas
sub
out
adc
ja
das
mov
int
xor
fcmovu
adc
xchg
xor
mov
jne
mov
jge
aaa
jns
and
rolb
adc
dec
xor
sahf
inc
add
cmp
cli
mov
neg
sbbb
xor
cwtl
clc
int3
cmpsl
push
fnsave
hlt
test
outsl
adc
mov
std
fdivrs
jnp
addr16
push
jmp
int
xchg
xor
loopne
and
inc
repz
notb
ficoml
sub
and
add
fbstp
dec
pop
jecxz
and
into
xor
js
jmp
push
and
adc
leave
mov
es
add
pop
adc
mov
mov
cmc
xchg
lahf
iret
sub
sti
push
cli
adc
roll
mov
sbb
xchg
in
lret
ss
rolb
loop
mov
test
sub
sbb
cmp
pushl
adc
xor
xor
or
aas
mov
sahf
mov
iret
adc
push
sbb
stos
fs
aad
das
jl
hlt
or
sbb
push
test
leave
repz
in
and
jecxz
pop
xor
ljmp
pop
fcmovnb
mov
lods
aad
xlat
push
test
in
fwait
adc
mov
push
sub
push
or
out
ss
pusha
adc
leave
clc
scas
cmp
stc
es
push
js
cmp
mov
jecxz
aad
xchg
jne
cmpsb
inc
jnp
popa
shll
inc
cmpsl
sti
sbb
sbb
jl
jae
imul
addr16
mov
sub
fs
push
adc
push
test
fwait
or
pop
dec
loope
data16
xchg
mov
add
mov
in
jae
jmp
imul
ret
inc
jg
dec
icebp
adc
in
add
stos
inc
jnp
cmp
pop
test
outsl
dec
bound
lock
mov
mov
sbb
aaa
or
adc
fstpl
lahf
add
push
jno
je
int
jno
xor
icebp
mov
xlat
decb
and
add
jmp
pop
ljmp
cltd
cmp
cwtl
lods
ss
sbb
lock
idiv
inc
ljmp
mov
mov
mov
dec
fidivrl
inc
ret
insl
int3
jno
iret
outsb
mov
in
jbe
and
cmp
mov
pop
dec
imul
xchg
add
stos
sbb
insb
rolb
jne
push
cmc
pop
jmp
imul
jecxz
shll
dec
or
sub
jle
xchg
aaa
mov
stos
imul
lds
stc
pop
jmp
das
xchg
cmpsl
pop
inc
dec
cmp
and
push
aas
and
xor
xlat
popl
jne
adc
es
test
push
jle
stc
jae
push
orb
addb
repz
pop
adc
xchg
xchg
out
mov
jg
pop
add
jbe
movl
stos
xor
loopne
pop
xor
jne
push
mov
pop
in
jg
cwtl
out
xor
scas
cmp
data16
inc
rcrl
pop
stos
bnd
dec
push
lds
jmp
mov
jb
and
jae
cmpps
test
and
pop
jb
jno
imul
pop
lea
fnstsw
daa
push
std
outsl
xor
cmp
inc
xchg
jge
rcrb
push
adc
ja
inc
xor
inc
faddp
fsubs
mulb
lds
dec
jne
fs
aad
icebp
lret
stc
addl
xchg
inc
lods
push
iret
aaa
pop
sahf
mov
sub
cmp
adc
mov
lds
pop
inc
ds
stos
icebp
mov
hlt
jo
or
dec
push
xor
outsl
jo
mov
xor
mov
mov
jle,pt
iret
mov
sbb
inc
sbb
push
jg
test
ja
jae
xor
cmp
and
lods
cmpsl
mov
aad
sub
das
cmp
dec
mov
mov
fwait
xchg
mov
mov
ds
dec
idivl
lods
lcall
mov
xor
mov
mov
mov
cmpb
sub
xor
lret
cmpl
or
sbb
push
push
mov
stos
jbe
or
pushf
pop
pop
cmp
push
mov
lea
cmp
fdiv
loopne
dec
jo
out
mov
pusha
sbb
imul
adc
shll
ret
pop
xorl
je
sbb
movsl
rep
lock
cltd
pushf
pushf
cmpsb
lea
clc
mov
adc
shlb
enter
in
cmp
and
fwait
scas
test
mov
inc
xor
and
mov
out
mov
out
push
jb
lret
jmp
mov
sbb
inc
movsl
xor
sahf
add
pop
sub
xorb
xlat
add
cmp
dec
mov
lea
xchg
push
mov
mov
pushf
jge
sahf
imul
mov
mov
sub
xchg
inc
shrl
divb
pop
lcall
ret
xchg
cmp
inc
icebp
dec
rorb
add
shlb
jmp
cwtl
mov
mov
inc
xchg
in
cmpsl
pushf
push
pop
sbb
ljmp
movsl
mov
adc
mov
in
loopne
cmp
test
sub
xchg
add
inc
gs
int3
iret
repnz
data16
sbb
daa
imul
xchg
aam
jne
cmpsb
mov
sahf
andl
jbe
bound
and
movsb
lods
insl
fldcw
ds
push
fstp
and
das
test
push
cmp
arpl
sbb
push
sub
mov
jp
cmc
mov
push
jp
in
jmp
ja
jnp
cmpsl
rep
sub
sub
fldenv
push
dec
lret
popa
scas
pop
fsubrs
int3
pop
push
dec
adc
lret
and
in
xchg
sahf
into
lods
push
repnz
inc
push
pop
mov
and
arpl
dec
pop
lods
std
fsubs
jmp
insl
push
jp
ret
addr16
gs
mul
test
push
pop
das
dec
into
cld
leave
enter
fs
xchg
enter
bound
aaa
lods
repz
je
fincstp
shrb
or
adc
dec
in
pop
fwait
pop
rclb
adc
pop
fcmovnbe
enter
std
sub
dec
cmp
mov
push
test
adc
jns
and
sub
jg
scas
inc
jge
aad
in
sahf
dec
ret
rol
pop
add
loopne
lods
filds
into
pop
les
ret
andl
dec
adc
inc
mov
xlat
mov
inc
inc
push
cmpsb
test
jle
cmpsl
jmp
shlb
mov
sti
or
add
xchg
repz
hlt
das
jae
cltd
dec
xchg
popa
imul
mov
push
addb
dec
or
in
push
pop
mov
cmp
mov
hlt
dec
mov
btr
push
cmp
hlt
out
int
mov
push
dec
dec
inc
dec
fidivs
sbb
negb
fsubr
mov
mov
stc
shl
mov
xor
xor
cmp
test
into
jb
inc
addr16
jnp
std
adc
movsl
in
cmp
out
dec
ret
dec
test
inc
inc
test
xchg
cmp
xor
lret
loopne
imul
daa
push
scas
mov
daa
decl
dec
cmp
xor
push
or
inc
jae
and
xor
push
daa
loope
or
and
shlb
or
lods
cmp
or
push
unpckhps
ja
add
mov
push
je
pop
inc
sbb
cmpsl
lods
cli
lea
xchg
scas
dec
inc
mov
dec
xchg
pop
inc
xchg
mov
dec
sbb
inc
jne
xor
lods
sub
cli
mov
movsl
leave
jns
and
aad
or
cmpsl
add
mov
sbb
inc
push
scas
loope
clc
sub
fcomps
lret
dec
cmp
mov
cmc
add
inc
adc
jb
imul
sbbb
mov
test
pop
push
daa
arpl
je
xlat
lds
mov
jne
pop
inc
and
inc
jg
roll
outsb
push
fnsave
out
stos
inc
sbb
fstpl
call
xchg
push
bound
fiaddl
fiadds
out
rcll
adc
lret
inc
push
xchg
lods
rolb
out
test
pop
test
xchg
mov
addb
adc
jge
iret
in
cmc
loopne
xor
inc
or
clc
mov
imul
mov
mov
in
lods
sbb
xor
lret
popa
dec
mov
ret
xorl
fwait
dec
jno
pop
mov
and
jno
xchg
mov
cld
outsl
inc
clc
or
mov
shll
mov
repnz
xor
or
jg
dec
aad
ja
je
imul
clc
jbe
mov
in
testb
rorb
mov
dec
and
push
jne
into
mov
xchg
push
xchg
or
adc
fisttps
jb
std
shrb
push
fsub
or
mov
fxch
rcr
push
loope
jae
sub
xchg
xor
ljmp
inc
cmp
dec
push
or
stos
cmp
cmp
and
fidivrs
jl
fsubl
sub
jnp
rcrl
and
pop
adc
and
test
adc
cmpsl
cli
sub
aam
mov
pop
push
adc
or
jno
test
xor
out
sub
lea
pusha
push
popa
out
out
insl
mov
pusha
dec
in
in
fs
inc
cmp
movsb
cmp
jl
adc
das
shrl
or
insb
and
fisubl
mov
mov
xorl
shr
jo
into
jmp
inc
mov
mov
jnp
cmp
push
sbb
dec
fucom
mov
mov
mov
mov
mov
je
sub
mov
mov
jge
aas
cmp
mov
imull
pop
xchg
pop
shlb
add
std
mov
jns
add
mov
dec
mov
pop
mov
mov
mov
push
xchg
sub
sub
push
xorb
cmc
sub
nop
sbb
aas
jp
adc
dec
sub
in
xor
or
sub
rcl
into
sub
cltd
hlt
shr
lret
lcall
and
pop
movsl
addr16
inc
cmp
imul
pop
pusha
lret
ja
push
rclb
jl
pop
jno
lods
movsb
lds
mov
loope
stos
popf
outsb
add
dec
fisubrl
dec
ljmp
call
mov
insl
inc
push
pop
ret
aad
das
jl
lahf
mov
jge
setae
inc
mov
xchg
mov
stc
ficomps
cmpsb
cmp
stc
iret
pop
in
pop
repnz
mov
fisubrs
aas
popa
repnz
idivb
xchg
push
xchg
and
ret
fwait
shlb
out
cmp
ljmp
imul
ret
xor
xor
cld
cmp
xor
je
sub
mov
push
mov
scas
sub
mov
outsb
jl
out
test
mov
xchg
push
or
mov
jecxz
lds
lods
cmc
mov
xchg
fsub
ljmp
les
movsl
mov
push
shll
test
push
adc
test
fwait
fwait
sub
push
rorl
lods
xor
cli
movsl
movsb
sub
andl
or
dec
xor
adc
inc
cmpsb
xor
push
cli
inc
inc
inc
das
daa
fldenv
testl
inc
fwait
xchg
cmp
loop
sub
mov
nop
jae
inc
mov
bound
cmpsb
inc
mov
inc
loopne
cltd
xor
add
mov
ret
cltd
mov
push
leave
rorb
xchg
loopne
mov
add
xchg
jo
mov
lods
divl
cld
std
xor
xchg
unpckhps
adc
lea
stc
fisubrs
mov
inc
ret
adc
and
jmp
cld
push
cltd
cmp
push
cltd
sbb
mov
or
aam
push
jno
or
je
sarb
icebp
pop
test
sti
lods
imul
xchg
ljmp
adc
jmp
stc
and
in
adc
pop
ret
lret
pop
mov
loope
adc
and
scas
in
jb
push
sbb
xorl
lds
sub
mov
pop
mov
repnz
dec
pop
wrmsr
push
enter
xchg
sbb
orb
or
cltd
ljmp
pop
sub
repnz
cld
inc
cmp
fmul
xchg
fucomip
daa
out
movsb
ret
sub
pop
shld
sahf
ds
aas
lret
sub
mov
jecxz
lods
jle
push
xchg
push
mov
addr16
out
xchg
in
ret
cs
scas
mov
xor
ficomps
fdivrl
sub
sbb
inc
jmp
jns
push
cmp
aaa
mov
scas
jae
and
adc
fbstp
push
dec
pop
pusha
stos
adc
add
jo
ds
nop
mov
inc
mov
addr16
movsb
rolb
push
flds
je
sub
filds
insb
xor
test
outsl
push
add
jns
push
pop
ljmp
out
fsubr
ljmp
pop
sbb
lret
ret
pop
jecxz
iret
dec
fstps
xchg
add
jmp
sahf
sti
push
push
ljmp
ss
into
pusha
cmp
mov
out
bound
xorb
and
inc
data16
push
adc
pop
cmc
inc
mov
iret
jl
ja
nop
call
mov
mov
jnp
inc
add
shlb
pop
or
test
sbb
push
pop
xlat
jecxz
daa
sub
in
test
repnz
pushf
test
bound
push
or
sub
add
push
sub
and
jne
loop
mov
ljmp
lock
shr
adc
sub
js
xchg
cmp
aad
xor
mov
push
out
sbb
mov
sahf
add
mov
daa
loopne
loopne
sti
and
addr16
loopne
mov
jg
cwtl
inc
mov
jge
jnp
sbb
cmpsl
jecxz
int3
xor
sbb
cwtl
push
psubw
scas
pop
and
fiaddl
jmp
stos
scas
ljmp
xchg
xchg
ljmp
inc
or
sti
cld
into
sub
jae
dec
mov
add
mov
and
dec
adc
sub
adc
movsl
xchg
add
and
std
sarl
xchg
add
icebp
mov
int
ret
fcomps
iret
ret
add
ds
jle
jb
mov
inc
loope
mov
jg
add
negl
add
hlt
push
call
xor
xchg
mov
cli
cltd
cmp
rcl
das
inc
fsubrl
cltd
inc
add
loope
and
inc
dec
jbe
xchg
fwait
pushfw
sbb
data16
out
lods
cmp
iret
andl
orl
out
insl
xchg
cmpsb
inc
icebp
mov
dec
xor
push
xchg
sbb
xchg
adc
mov
aaa
frstor
rcll
sbb
adc
jo
fwait
sub
adc
aaa
inc
sub
fisttpll
inc
ja
jo
lcall
adc
jnp
test
notb
jbe
jne
insb
movsb
out
push
jb
andps
shlb
mov
xchg
addr16
sbb
pushf
xor
test
lock
inc
fimull
pop
xor
jle
dec
repnz
andb
jg
xor
or
shlb
adc
jl
out
push
push
add
out
aam
jnp
mov
mov
push
cltd
xor
int3
jnp
in
das
lock
in
dec
call
shrb
js
aas
lods
xchg
mov
pusha
aaa
rcrl
add
push
std
adc
test
and
xor
fidivs
fbld
mov
adc
push
decb
je
mov
push
ss
stc
popf
jne
xlat
cmp
loopne
pop
std
pop
icebp
sub
add
pop
xchg
sbb
add
inc
cmp
rol
in
addl
mov
ficomps
jbe
lahf
mov
aas
popf
xlat
adc
xchg
xchg
cmpl
sbb
or
dec
fdiv
mov
popf
sahf
ret
int3
pop
cmp
ficomps
fsts
call
lahf
jb
repnz
and
scas
jae
daa
ret
movsb
jne
stos
mov
pop
mov
jmp
repz
daa
xchg
and
mov
add
xchg
dec
lds
jno
ds
mov
fistps
jno
dec
ljmp
stc
jbe
jl
fmull
es
add
sub
or
xchg
icebp
jg
cmp
mul
test
cwtl
dec
pop
and
sub
and
and
icebp
mov
pop
fdiv
and
mov
pop
adc
jmp
out
ss
lahf
inc
or
pop
push
jbe
rorl
pop
test
pop
mov
dec
jnp
test
mov
pop
push
mov
xlat
pushf
sbb
out
loop
and
std
pop
cmpb
scas
push
out
hlt
loope
mov
mov
inc
nop
fcoml
pop
adc
dec
popf
pop
cmp
sbb
sbb
jnp
cmp
into
rorb
inc
sbb
inc
xor
jnp
mov
rep
or
jbe
cmpb
jns
cmp
in
jne
iret
cmp
mov
out
imul
mov
pop
and
xchg
sub
adc
push
pop
pushfw
pop
ja
ret
aaa
fisubrs
cmp
shl
sbb
bnd
or
icebp
loopne
adc
dec
bnd
mov
fdivl
add
loope
cmp
pop
test
popf
jns
dec
sahf
nop
nop
xchg
jmp
pop
pop
sub
mov
and
mov
je
or
insb
divb
clc
xor
dec
aam
jno
nop
iret
dec
iret
icebp
lea
pop
orb
add
pop
bound
sub
std
lock
or
sub
mov
rorl
in
lods
fwait
sti
inc
cmp
repnz
mov
scas
out
and
and
dec
push
ror
dec
xor
sub
insl
mov
mov
inc
std
or
jne
jae
adc
add
dec
je
int
mov
js
xlat
push
mov
push
aam
test
stos
jl
cltd
jle
fdivrl
fisttpll
dec
cmp
and
cs
test
rorl
pop
mov
cmp
push
mov
pop
pop
decb
shr
xor
jbe
xor
mov
jb
int3
rolb
icebp
push
mov
or
mov
sbb
loop
and
out
out
insb
xchg
repnz
pop
test
in
push
or
dec
lods
stos
mov
ret
jb
mov
push
in
mov
push
mov
xchg
cmp
das
aaa
pop
imull
roll
sbb
or
adc
roll
and
imul
jmp
sbb
rcrl
dec
sub
insl
mov
pusha
add
and
rcll
fs
cmp
out
push
pop
outsl
std
jecxz
mov
add
in
das
mov
imul
sbb
xor
movlps
and
sub
lea
cmp
int
pop
pop
sbb
je
cmp
fisttpll
fbstp
lods
mov
and
sbb
xor
cli
jle
cltd
xchg
jo
mov
test
outsl
adc
gs
or
test
test
mov
mov
inc
lds
pop
mov
mov
cmp
push
jp
shll
jp
das
ror
mov
mov
sub
stc
es
pop
lods
into
mov
loopne
xchg
leave
or
xchg
xchg
into
fidivrs
enter
mov
xor
addb
cli
cli
push
test
cli
sub
pop
xchg
lea
jecxz
cmp
push
cwtl
stos
fcmovnb
xchg
mov
push
xchg
cld
dec
imul
sbb
inc
sub
jo
or
rorl
call
xor
in
push
addl
repnz
decl
nop
push
ljmp
adc
jecxz
aad
cltd
faddl
mov
dec
cmc
or
mov
adc
enter
adc
mov
scas
dec
jl
dec
inc
cmp
and
cmp
lcall
jo
ret
dec
mov
cpuid
adc
sti
push
adc
jecxz
mov
dec
or
push
dec
call
mov
test
call
in
sub
dec
cwtl
push
in
push
and
out
cli
mov
sbb
jo
stc
in
mov
jmp
adc
pop
fildl
mov
dec
mov
push
mov
ret
cld
push
pop
sub
lret
jo,pn
dec
xchg
shlb
inc
jle
enter
xchg
and
dec
test
imul
jecxz
mov
xor
mov
test
punpckhdq
sbb
rcrb
cmp
lcall
push
add
push
ss
adc
fnstsw
dec
mov
mov
aad
shll
xchg
jmp
out
mov
not
pop
adc
mov
or
aas
cltd
push
fisubs
mov
test
pop
lret
mov
pop
sti
mov
jo
stos
mov
xor
xchg
mov
inc
shl
xor
inc
aad
xchg
addl
cmp
push
add
les
push
dec
xor
jp
jb
adc
cmp
fisttps
dec
jnp
mov
sub
shlb
test
scas
test
sbb
push
push
mov
sub
adc
push
inc
in
rolb
mov
lods
in
sbb
cmp
movsb
inc
xchg
push
jbe
adcl
mov
les
push
test
insb
lods
adc
ljmp
ds
test
xchg
mov
sahf
mov
rcll
add
cmpsl
cmp
int3
mov
inc
fimuls
hlt
pushf
sbb
rcll
cmp
out
pop
cli
stos
stc
jle
sbbl
xlat
lods
push
stc
inc
jns
lea
fwait
mov
leave
andb
dec
or
jo
mov
loop
pushf
push
outsb
sub
or
cmpsl
adc
adc
aas
xor
mov
mov
in
adc
lcall
sub
aaa
mov
xor
outsl
outsl
push
loopne
shlb
outsb
mov
dec
movsb
pop
mov
aas
loope
push
or
fidivrs
fdivs
rolb
and
cmp
pop
sahf
or
loope
jnp
dec
mov
xchg
daa
and
fnstsw
inc
ds
mov
add
push
in
xchg
inc
sbb
fldenv
aas
xchg
out
popa
dec
mov
push
icebp
jb
in
jnp
xor
jecxz
fmull
mov
and
popf
addr16
pop
pop
sti
cmp
cwtl
or
mov
pop
and
dec
ja
or
xor
mov
outsl
insl
jp
outsb
arpl
mov
mov
nop
xor
vzeroall
push
sbbb
add
out
add
mov
xchg
inc
mov
int3
popf
xchg
or
stos
sbb
movsb
popa
rcl
pop
lcall
or
push
enter
add
pop
sbb
lods
popa
add
mov
data16
or
pusha
icebp
xor
xor
jo
outsl
sub
jno
test
push
mov
fiaddl
ftst
mov
xchg
lods
xchg
mov
xorl
or
lahf
cmpb
mov
pop
test
mov
sub
out
sahf
pop
or
cltd
lret
stc
lods
lods
lahf
prefetch
cmp
add
orl
sahf
lea
sub
sti
jle
fdivl
pop
jbe
add
fcmove
mov
pop
fiaddl
ljmp
fdivr
andb
mov
ret
cltd
or
and
in
imul
sub
iret
repnz
push
mov
lock
xchg
pop
sub
push
ret
or
fdivr
popf
arpl
in
fmull
sbb
cltd
movsb
fisubs
cmpb
pop
fs
lods
dec
or
out
cld
dec
test
call
enter
loopne
cmp
jge
int3
jae
jbe
mov
popf
add
xchg
pushf
fnstcw
sbb
mov
dec
loope
cmp
mov
add
rcr
test
pop
jnp
push
fidivl
ds
add
pop
or
pushf
arpl
pop
into
aas
outsl
out
sbb
xchg
clc
dec
push
xchg
pop
push
test
xchg
adc
sub
divl
add
sbb
sti
stos
adc
mov
ror
or
xchg
sbb
mov
jmp
subl
popf
pop
cmp
test
enter
mov
push
out
pop
sbb
imul
int
sbb
pop
dec
xchg
mov
lds
es
or
push
inc
or
clc
outsl
je
gs
mov
imul
lds
xor
pushl
pop
cmp
decl
inc
pop
ljmp
pop
or
imul
dec
nop
mov
je
aas
cmc
lahf
and
sub
mov
mov
mov
enter
into
sub
rcrl
xlat
scas
sbb
fisubl
je
cmp
addl
cmp
mov
add
fistpl
push
mov
cli
mov
and
rorl
cmp
add
sub
loopne
sahf
test
xlat
dec
lds
push
stos
leave
mov
mov
mov
test
pop
push
cld
adc
out
xchg
dec
mov
sub
inc
and
lods
and
mov
sub
out
and
popa
mov
stos
mov
addr16
addr16
dec
jno
fdivrl
and
cmp
divb
sub
pop
js
fbld
xor
xchg
daa
jl
unpckhps
xchg
push
mov
mov
out
sbb
adc
lcall
push
or
sbbb
xchg
mov
and
push
pop
jns
popa
in
push
loopne
les
movb
pop
dec
repnz
dec
lea
mov
mov
pushf
jno
and
mov
dec
dec
mov
jbe
jmp
inc
clc
mov
adc
dec
adc
sbb
test
inc
cmp
fbstp
les
ja
cld
scas
je
pop
add
pop
lahf
ljmp
jle
pushf
or
sub
out
push
pop
xchg
loop
jmp
xchg
in
and
into
xchg
pop
lds
add
dec
insl
or
xor
sarb
rep
and
mov
div
push
push
mov
mov
pushf
add
in
loopne
and
ljmp
aam
push
cmp
sti
dec
outsl
jge
adc
out
adc
add
and
test
jo
fwait
cmp
or
push
push
adc
lea
xor
adc
pop
cmp
sti
xorb
fidivl
ljmp
sbb
mov
jle
cmpsb
lcall
push
xorb
push
xchg
or
mov
mov
push
shrl
enter
mov
loopne
pushf
outsb
leave
mov
fdivl
test
xor
or
mov
mov
je
mov
nop
decb
dec
adc
dec
imul
popa
sti
cmp
dec
add
jno
call
shlb
sub
ja
dec
filds
jne
lds
scas
inc
pop
and
mov
dec
sbb
pop
mov
jo
rcrb
ficompl
sbb
int
sub
lds
xor
adc
das
pop
mov
fsubrs
or
imul
cmp
or
dec
xor
or
add
fsubs
xchg
ficomps
dec
push
jg
fisubrs
in
rcrl
lahf
push
push
push
and
dec
pop
and
add
out
or
daa
jge
pushf
jne
push
cs
pushl
jecxz
stos
add
push
xor
xchg
mov
icebp
xchg
cmp
sbb
sbb
insb
push
cltd
addb
sarl
into
mov
ss
mov
mov
push
xor
and
andl
clc
mov
inc
notb
js
sbb
leave
lahf
movsb
pusha
lock
std
clc
jge
test
call
jl
shlb
shrb
add
pop
mov
std
dec
sbb
cmpsb
addl
movsb
out
mov
repnz
aam
hlt
mov
sbb
lods
sub
sub
jae
bound
jmp
rol
add
inc
rorl
pop
lods
fstpt
jae
rorb
mov
push
mov
mov
push
mov
rcrb
cmp
test
lahf
fisubrs
enter
iret
fcoml
lea
notl
subl
cli
fsubrl
mov
cmp
pop
dec
inc
and
popf
pusha
cmp
movsl
in
aad
popa
push
pusha
and
hlt
ss
sub
pusha
nop
mov
sti
cmpsb
stos
or
pop
aas
adc
mov
ja
dec
cmp
and
xor
push
push
rclb
es
ror
fmull
push
mov
xchg
add
ds
bound
test
push
dec
pop
lods
add
aam
stc
out
imul
nop
fs
and
and
std
movsl
in
mov
cltd
cmp
push
jbe
out
cmc
lret
out
lret
jecxz
mov
loop
mov
push
push
xor
dec
dec
mov
test
or
movsb
add
xor
loop
jge
mov
stos
add
sar
movsb
jnp
xlat
insl
call
hlt
dec
test
addr16
icebp
xlat
mov
lods
add
nop
lods
fldl
xchg
pxor
mov
xor
rclb
cltd
xchg
push
sub
xchg
jle
das
roll
mov
lods
sub
jbe,pt
mov
and
call
sub
cwtl
pushf
bound
inc
pushf
ds
insb
mov
inc
rorl
data16
call
push
cmp
sbb
jae
cmc
negb
fnsave
inc
jp
xchg
jne
insl
push
stos
pop
shrw
icebp
jnp
outsb
punpcklbw
repnz
xchg
out
fadds
dec
add
out
pop
scas
mov
mov
xor
jnp
jae
mov
push
pop
imul
mov
sbb
xchg
gs
xor
xchg
jne
sub
dec
jbe
pusha
test
lods
jbe
shrb
in
jle
in
dec
movsb
insl
jecxz
pop
push
adcl
sbb
push
push
insb
add
scas
pop
je
mov
push
cmp
push
pusha
xlat
adc
pushf
mov
mov
mov
enter
and
xchg
jge
cmpsb
test
sub
mov
push
push
cld
push
mov
adc
mov
fldpi
movsl
sbb
pop
and
mov
sub
lret
test
adc
imul
test
push
mov
fcmovbe
cmc
gs
out
mov
fadds
jp
jae
jmp
scas
orb
cmc
or
push
rcl
insl
xchg
je
out
mov
or
pop
push
xchg
pop
jmp
or
es
jnp
out
ja
lods
jecxz
jmp
stos
mov
in
dec
les
movsb
lcall
sti
pop
sahf
mov
mov
dec
sbb
and
fs
shll
add
ret
std
sbb
cmp
scas
lock
sbb
imul
push
loope
xchg
dec
iret
sub
insl
xorl
inc
js
aam
insl
insb
loopne
fldt
iret
sbb
loope
in
std
sub
xchg
decb
shl
push
nop
cmpsl
lods
cmp
insl
sub
out
or
xchg
cmp
push
icebp
in
sbb
ret
in
lock
sarl
out
sti
testb
int
add
jne
movsl
fistpll
mov
lods
pop
lret
jbe
and
mov
fcmovbe
int3
in
stos
and
jns
test
mov
jns
pop
mov
jmp
inc
jl
out
cmp
in
xchg
paddw
out
mov
lahf
inc
mov
cs
xchg
mov
push
pusha
out
imul
ret
std
aad
pop
mov
sbb
int3
sahf
fildl
sarb
repz
jecxz
bound
xor
add
xor
int
cmp
pop
xlat
sbb
mov
fnsave
xchg
data16
lods
in
loop
jbe
jmp
xor
and
stc
movsl
xchg
sub
xchg
sbb
pop
lcall
xor
dec
jg
inc
lea
add
mov
xchg
dec
lret
mov
popaw
mov
rorl
xchg
frstor
mov
js
dec
mov
push
in
xchg
cmp
dec
ret
popa
cli
lea
mov
ficomps
lret
xchg
inc
mov
rcl
mov
lds
stc
pop
mov
arpl
das
jle
cld
push
xor
jo
iret
mov
rol
addr16
mov
add
xchg
sub
xorb
mov
adc
or
imul
aad
and
call
data16
call
dec
ds
push
or
pop
cmp
stos
jne
cmp
xor
outsb
mov
pop
inc
fsubl
pop
repnz
in
or
sbb
std
jo
cmp
iret
jne
cmp
cmp
push
adc
inc
ljmp
adc
movsl
jno
xor
fnstsw
jmp
loopne
inc
xchg
mov
xchg
sbb
xor
push
push
push
stos
pop
add
push
cmp
dec
add
push
imul
dec
insb
cmp
or
or
pushfw
cmc
jecxz
jae
xor
aam
pop
sub
xor
adc
fimull
mov
cmc
test
dec
sbb
xlat
cmpsl
mull
or
sbb
fbstp
rolb
xchg
jmp
pusha
adc
add
pop
int3
insb
stos
es
push
cmp
jnp
sub
and
pop
shlb
js
mov
ljmp
iret
imul
or
insl
lds
dec
mov
xor
notl
push
insb
or
dec
push
mov
out
loop
xor
insb
add
sbb
ljmp
add
stc
incb
aaa
mov
cltd
cmp
test
pop
idiv
arpl
sahf
xchg
les
ja
gs
dec
jge
push
pop
xlat
div
adcb
imull
rcrb
mov
mov
lds
pop
inc
test
xor
int
xchg
std
push
cmp
jge
negl
cmpsl
movsl
pop
xor
cmc
mov
adc
aaa
xor
cltd
cwtl
mov
sub
xchg
and
test
dec
and
sub
lds
stc
je
cmpsb
xchg
sbb
cmp
jne
jecxz
add
popa
insl
inc
xchg
cmc
pushf
mov
mov
insl
pop
jns
push
gs
imul
and
mov
mov
xor
xor
mov
or
or
mov
inc
cmp
mov
sti
leave
rcrb
xlat
push
sbb
sarb
jno
loope
push
fldl2e
dec
out
aas
push
cmp
sbb
jo
sub
sub
nop
out
fcmovb
ja
cmc
xor
xor
push
rcll
cwtl
enter
add
pop
xchg
test
xchg
filds
call
stc
sbb
or
sbb
and
mov
push
or
subl
in
out
out
dec
add
adc
sbb
aad
mov
pushf
ret
dec
pushf
stc
mov
and
fstps
in
cli
jl
mov
mov
lods
sbb
jo
cmp
pop
dec
add
in
adc
hlt
xchg
sti
inc
aam
int
add
loop
jnp
mov
inc
mov
push
jae
lahf
cmp
xor
leave
sbb
jne
mov
push
adc
lods
cwtl
dec
jo
dec
mov
sti
out
int
iret
jnp
push
mov
sbb
pushf
push
pop
inc
jg
out
jae
or
xor
cltd
test
push
mov
push
adc
scas
sbb
js
in
cmpsb
lahf
xchg
stos
test
cmp
and
cmovg
jbe
fwait
sub
xchg
push
int3
rcr
dec
dec
scas
out
pop
mov
jge
pop
push
aas
decl
mov
xchg
pop
aad
mov
mov
mov
mov
sahf
pusha
and
pop
rcll
icebp
and
sbb
repz
aam
mov
stos
push
shrl
xlat
lret
arpl
xor
aam
popa
push
cmp
xchg
adc
xchg
xor
js
ficompl
movntq
and
adc
jg
nop
addr16
rep
xchg
mov
sbb
mov
aaa
cmp
push
cmp
or
loop
inc
pop
adc
shl
pop
mov
xor
int3
lods
lea
xchg
loop
jno
and
adc
out
daa
cmpb
xor
mov
call
ds
sub
call
and
test
cli
lods
movsb
or
in
mov
xor
mov
dec
mov
ss
shlb
scas
das
sti
jmp
shrb
mov
pop
into
sti
pop
mov
mov
adc
imul
dec
cmp
sbb
cmp
int3
popf
leave
cmp
dec
cld
add
mov
or
insl
jmp
cmp
mov
stos
mov
mov
mov
pop
mov
and
mov
outsb
cmpsb
cmp
scas
adc
xor
inc
and
repnz
rcl
pop
xor
pushf
mov
cmpsl
cmp
mov
mov
add
sarl
add
cmc
adc
clc
loopne
mul
rorb
ds
xchg
stos
push
dec
cmpsl
pop
mov
ret
insl
adc
int3
iret
or
insb
mov
mov
mov
lock
mov
arpl
icebp
pushf
pusha
add
fldl
lret
adc
daa
mov
insl
loope
dec
in
mov
jg
jae
out
xchg
xchg
int
add
aaa
cmp
std
add
cwtl
cmpsb
mov
mov
mov
jae
xchg
dec
aas
lahf
cs
mov
mov
lret
xchg
fnstcw
push
mov
test
roll
pop
dec
and
inc
dec
in
xchg
sub
jbe
sahf
test
out
fwait
sbb
push
inc
add
lret
cli
or
xlat
aas
les
nop
mov
cltd
adc
xchg
js
add
push
popf
adc
push
scas
sti
xlat
test
push
pop
aam
xchg
fwait
outsl
push
testl
pusha
out
mov
push
jnp
and
and
add
out
pop
push
push
mov
and
push
add
ret
fldl
sbb
pop
arpl
leave
pop
inc
sub
sbb
xor
xchg
cmp
mov
loopne
adc
and
sti
lock
lret
jmp
mov
sbb
cmc
sti
or
mov
in
or
push
or
addr16
sbb
das
cmp
cmp
xor
in
cmp
addl
mov
clc
push
adc
sbb
outsl
push
xor
sbb
daa
int
pop
sti
ret
insb
fwait
sbb
mov
sub
lahf
test
sbb
mov
imul
dec
dec
push
push
sbb
push
sbb
mov
sti
data16
popa
std
mov
dec
sub
sbbl
mov
ret
adc
mov
pop
es
push
add
cmp
inc
pop
xchg
pop
add
sub
jo
inc
cmp
jmp
mov
pop
xor
aaa
adc
and
sub
mov
aaa
adc
cmp
call
sbb
sub
adc
lea
nop
add
std
add
dec
lock
push
jp
gs
std
push
mov
aaa
mov
push
stos
daa
mov
hlt
lret
or
fdivs
cmp
mov
xchg
mov
mov
mov
push
pop
cmp
icebp
gs
xor
inc
add
push
stc
push
into
rcl
mov
pop
mov
test
out
and
aad
dec
stos
push
sar
imul
sub
cli
lods
call
rorl
mov
sbb
push
cwtl
push
mov
dec
jnp
jnp
je
inc
xchg
int
outsb
movsb
push
jae
rcrb
add
pop
in
mov
pop
andb
add
or
pop
or
int3
std
in
add
mov
enter
lcall
jge
ret
xchg
jnp
fdivrl
orl
dec
add
mov
cmpl
adc
mov
adc
mov
cmp
xchg
mov
jae
addb
adc
mov
adc
sbb
inc
dec
cli
cwtl
int3
jno
in
mov
inc
cmpsb
cwtl
ss
loopne
cmp
jae
out
xor
es
and
xor
xor
int
pop
jge
inc
adc
push
dec
in
data16
mov
lods
fs
movsl
mov
add
dec
fxch
xor
test
outsb
jmp
incb
adc
repz
push
imul
shrl
fimull
or
sbb
or
into
into
rol
mov
cmp
popf
mov
pop
shlb
iret
jl
mov
ljmp
stos
inc
mov
sub
mov
leave
mov
adc
je
inc
pusha
adc
imul
mov
rcrl
jb
out
decl
pusha
add
adc
xchg
jmp
add
loopne
xchg
sbb
lret
sub
push
imul
sbb
les
cwtl
jne
rcll
addb
adc
scas
iret
popa
fs
push
iret
xor
stc
xchg
aas
push
das
int
dec
xor
popf
jb
or
inc
push
divb
fcoml
mov
inc
jb
and
andl
sub
xchg
test
call
ss
rorb
mov
cs
sub
jecxz
aaa
popa
sbb
inc
movsb
inc
aad
ds
cld
lahf
insb
adc
mov
lea
sbb
inc
orb
mov
int3
jae
adc
aad
jb
or
test
pushf
cmp
xchg
push
into
cltd
pushf
repnz
pop
lds
arpl
test
mov
or
xchg
mov
out
enter
loopne
popa
mov
lds
call
jnp
repz
ljmp
mov
arpl
mov
cs
cmp
push
sub
das
stos
cmpsl
adc
int
dec
movups
mov
jecxz
push
xchg
in
mov
add
or
push
xor
je
jb
test
pushf
push
xchg
push
nop
jmp
cmp
mov
cmp
mov
out
push
and
dec
scas
jl
or
sbbb
pop
pop
in
cmp
sti
mov
push
out
outsb
and
sarl
dec
insb
push
pop
stc
cmp
das
mov
out
push
shll
fwait
dec
out
sub
xchg
jne
mov
cmp
in
sub
sub
and
shlb
xchg
loope
xor
mov
imul
and
adc
xchg
into
fwait
sti
ds
int
lock
arpl
fistps
stos
es
nop
add
movsl
icebp
inc
sbb
push
icebp
dec
xchg
push
jb
adc
fldenv
rcrl
stc
sarl
xor
std
jp
in
arpl
adcl
mov
test
fsubrs
pop
aad
sbb
adc
add
iret
jno
emms
mov
enter
les
jmp
push
inc
das
cwtl
push
sub
lret
or
jns
jb
xor
inc
lret
sub
test
movsl
test
inc
mov
lea
fwait
dec
mov
pushf
push
rorb
test
fcoms
imul
dec
sarb
inc
inc
int
push
push
shlb
jae
and
sbb
ljmp
mov
and
scas
inc
xchg
cmp
jg
cmpsl
insl
popa
xor
adc
or
dec
andl
into
sbb
push
xchg
mov
mov
aas
jbe
sbb
push
push
les
notb
fldenv
fnop
pop
jl
or
lret
xor
enter
addr16
dec
add
add
imul
in
test
push
xor
push
fnstenv
sbb
pop
call
addb
sub
adcl
pop
mov
sub
pop
sub
sub
mov
mov
in
or
mov
add
ljmp
and
repz
lock
aam
outsl
lods
jb
adc
divb
test
js
jl
fsubl
mov
jnp
mov
or
fwait
xchg
push
mov
mov
pop
outsb
loope
mov
push
pop
dec
push
adc
sbb
popf
inc
enter
mov
out
mov
cli
adc
push
dec
in
sarb
adc
or
add
mov
loope
bswap
lea
addl
into
in
movl
test
dec
jno
out
and
sbb
dec
fwait
pop
loopne
xor
je
mov
mov
push
lock
sti
loop
cmp
fdivrs
mov
sub
mov
out
rorb
adc
push
pop
add
dec
fstl
shll
push
xchg
popa
adc
push
frstor
adc
insl
std
arpl
or
push
dec
shrl
scas
das
adc
mov
cmpsl
mov
jge
test
pop
fldenv
dec
cmp
arpl
inc
movsl
cmpsl
jle
or
add
inc
xchg
dec
xchg
fisttpll
sub
inc
push
xor
shlb
xchg
lret
sub
ret
jo
out
xor
jns
mov
stc
push
or
and
bound
inc
or
jecxz
lcall
push
add
xor
cmpsl
mov
cmp
cs
dec
xor
pop
nop
sbb
loope
inc
popf
push
dec
rcrb
push
dec
out
icebp
push
arpl
xor
hlt
and
sbb
ja
fisubrl
mov
fsubl
add
stos
xor
adc
call
pop
shll
ja
xor
xchg
incl
pop
std
mov
cmp
or
jb
ds
out
push
orb
xlat
xchg
pop
repnz
lock
data16
pop
rorb
out
jo
aad
popa
mov
insb
pop
mov
mov
add
lods
inc
jne
mov
je
les
fmul
out
movsl
add
enter
call
imul
in
js
add
lret
adc
dec
push
outsl
mov
daa
mov
sub
jns
push
sbbl
leave
jbe
cwtl
xor
mov
aad
or
xchg
flds
popa
inc
cmp
icebp
testb
faddl
xchg
mov
lret
leave
xorps
fcmovnbe
jno
dec
push
xor
mov
arpl
cli
mov
call
scas
dec
add
test
mov
repnz
dec
sub
or
icebp
clc
sbb
and
and
mov
and
push
roll
scas
add
ja
mov
nop
sub
xor
push
fdiv
push
rcr
mov
pop
and
xor
loopne
call
iret
and
pop
idivb
inc
shrb
mov
push
push
cli
add
nop
test
mov
or
aam
and
cmp
pop
stos
mov
cmp
data16
push
lret
adc
loop
mov
bound
pusha
loope
and
and
adc
cmp
lahf
jp
push
cmp
aas
insb
outsb
mov
test
dec
fldenv
inc
adc
jb
push
sub
cmp
clc
or
shr
sub
mov
jl
jg
xor
sub
dec
test
aas
decb
icebp
inc
cmp
scas
xor
aaa
les
sub
or
dec
xchg
rsm
sbb
or
adc
add
xor
dec
mov
and
inc
test
and
je
or
sbb
cmp
cmc
ds
std
dec
sbb
sbb
in
cwtl
test
cli
fsubrl
ja
pop
pop
ret
out
xor
push
and
outsl
and
mov
push
sahf
push
movsb
push
ret
adc
in
popf
cltd
push
insl
dec
rcrl
or
loop
cs
xor
dec
sbb
imul
and
test
or
les
xchg
jne
std
cmp
cs
inc
cmp
stos
xchg
mov
enter
mov
cmp
stos
push
add
lahf
jno
adc
bound
push
xor
daa
addb
popa
pop
mov
xor
int
adc
stos
dec
clc
fwait
out
les
jge
test
fmull
insl
aaa
dec
xchg
mov
sbb
std
shrl
or
test
jmp
cmp
push
fildl
xchg
adc
add
mov
pop
cmpsl
adc
pop
jb
sub
inc
negb
adc
out
pop
or
aam
subb
and
lock
cmp
mov
pushf
clc
movl
or
inc
pop
sti
ljmp
jns
mov
fnstsw
adc
ljmp
mov
out
jb
jmp
sbb
xchg
cmc
or
stos
push
xchg
xchg
xor
mov
mov
aad
xor
fnstenv
sti
imul
lods
mov
outsb
insb
adc
icebp
xchg
cmpsb
gs
xor
pusha
jmp
xor
dec
add
pop
dec
inc
rol
ror
nop
push
mov
xchg
pop
jmp
mov
add
jmp
jmp
lock
dec
inc
jmp
adc
push
jmp
mov
add
jmp
jmp
lock
ror
mov
add
sub
movl
pop
nop
xchg
jmp
mov
jmp
testb
and
add
add
rorb
sub
xor
not
add
rol
sub
sub
xor
add
xor
add
xor
sub
ror
not
ror
sub
mov
jmp
rolb
jmp
mov
jmp
lret
add
test
add
inc
add
notl
dec
add
call
jmp
adc
push
call
pop
add
jmp
loopne
jmp
xor
add
add
pop
add
jmp
loopne
jmp
push
mov
add
jmp
shr
enter
outsb
popa
bound
je
and
js
imul
popa
bound
add
insb
jns
outsb
inc
add
jae
popa
addr16
outsl
js
add
inc
push
xor
cs
insb
add
mov
push
jmp
icebp
jmp
adc
push
push
jmp
mov
add
jmp
xchg
pop
jmp
xor
add
add
pop
add
jmp
loopne
mov
jmp
xchg
jmp
push
mov
add
mov
rol
add
ror
add
sub
rol
xor
ror
sub
sub
not
rol
xor
not
ror
dec
not
mov
rol
ror
jmp
inc
nop
dec
cmp
jne
inc
inc
mov
inc
inc
mov
jmp
testb
notl
dec
add
mov
add
push
push
xor
mov
xor
add
add
mov
mov
inc
shr
mov
cmp
jge
dec
je
shl
jae
push
mov
mov
shr
mov
mov
shr
test
je
and
shr
add
jmp
and
shr
add
and
test
je
dec
je
dec
je
and
add
jmp
and
add
jmp
and
add
jmp
and
add
add
mov
add
sub
rep
pop
cmp
jl
inc
sub
jmp
mov
mov
shr
inc
mov
inc
jmp
mov
pop
sub
pop
ret
call
jmp
adc
xchg
jmp
imul
xchg
pop
push
pop
push
jmp
icebp
push
call
pop
add
jmp
loopne
jmp
adc
push
jmp
lock
inc
inc
mov
inc
inc
push
mov
xchg
pop
push
xchg
jmp
cvtdq2ps
movl
pop
jmp
mov
add
jmp
jmp
testb
rdmsr
enter
dec
sub
add
xor
ror
xor
sub
sub
add
sub
ror
xor
xor
sub
mov
jmp
xor
jmp
ret
push
jmp
mov
pop
jmp
test
xor
mov
decl
mov
add
jmp
xor
inc
inc
add
push
mov
add
rol
call
dec
inc
jmp
adc
jmp
xor
xor
pop
jmp
test
add
add
mov
xchg
pop
dec
inc
cmp
jne
xchg
push
mov
neg
sub
pop
dec
cmp
je
xchg
jmp
sbb
add
inc
add
add
add
pop
add
jmp
loopne
mov
add
xchg
push
jmp
adc
push
pop
mov
add
jmp
testb
add
and
movl
pop
push
push
cmp
pop
pop
je
xchg
jmp
test
orb
sbb
add
xchg
rol
add
inc
xchg
jmp
imul
add
add
add
add
pop
add
jmp
loopne
rol
and
push
xchg
jmp
cvtdq2ps
add
add
pop
add
jmp
loopne
push
push
xchg
jmp
cvtdq2ps
jmp
test
adc
add
add
xchg
pop
push
call
pop
add
jmp
loopne
cmp
je
mov
push
mov
neg
sub
pop
jmp
xchg
push
mov
add
pop
push
xchg
jmp
cvtdq2ps
push
popa
push
pop
xchg
jmp
mov
jmp
mov
add
jmp
push
call
pop
add
jmp
loopne
jmp
lock
testb
jmp
decl
or
push
adc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
or
jge
or
mov
or
stos
adc
add
push
bound
inc
insb
insb
outsl
arpl
outsl
add
outsl
bound
inc
jb
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
inc
js
je
jb
arpl
jae
mov
push
mov
add
push
jmp
xor
and
add
add
bnd
testb
repz
push
xchg
jmp
mov
sub
movl
pop
push
jmp
adc
dec
inc
push
mov
xchg
pop
jmp
icebp
xchg
push
jmp
adc
call
jmp
adc
xchg
jmp
mov
