inc
jle
dec
call
lock
pop
and
cld
fisttpl
inc
mov
mov
jg
sbb
pop
xor
ds
sbb
dec
adc
adc
xchg
sbb
aas
mov
xor
mov
jg
mov
imul
gs
das
xlat
sub
mov
mov
stos
jmp
insl
and
pop
sbb
sbb
dec
daa
mov
in
sbb
jge
or
xchg
jno
cwtl
stos
add
xchg
ficompl
popa
pop
or
sbb
inc
orl
xchg
sub
lcall
or
fsubs
hlt
je
add
add
movsb
mov
test
jmp
pop
cmpsb
mov
sub
pop
xchg
stos
mov
sub
decl
scas
xchg
jnp
sub
lret
fidivrl
add
jle
fisttps
in
popf
push
jle
shr
sbb
ret
mov
lods
in
or
cmpsl
fistps
dec
add
jmp
out
mov
mov
loopne
cmpsl
push
push
jo
sub
in
nop
cmpsb
clc
aad
lfs
int3
rorl
ljmp
jo
mov
std
pusha
cmpl
insb
je
push
cmp
jp
xlat
std
stos
loop
cmpsb
jnp
lret
sbb
push
push
repnz
jns
jne
cmpsb
daa
icebp
and
outsb
adc
adc
pop
dec
mov
fdivrl
dec
pushf
cld
ljmp
xorl
insl
aam
mov
xorb
out
adc
inc
lret
inc
mov
fiadds
mov
jno
jne
mov
mov
stos
orl
sub
ds
rorl
jg
stc
popa
stos
adc
push
ret
dec
dec
jmp
cmc
pushf
add
pop
imul
dec
push
loope
fwait
add
pop
cmpb
push
add
or
cld
xchg
das
insl
or
or
push
je
push
inc
shrb
stos
push
add
int3
cmp
push
push
xor
pop
or
sub
and
int3
popf
jmp
mov
mull
outsb
int
out
movsb
enter
mov
xor
mov
loopne
xchg
popa
rcr
fucom
sub
loop
jae
cmp
popa
inc
aas
pusha
or
add
pop
or
add
imul
xchg
imul
xchg
shll
inc
enter
mov
xor
data16
lahf
jo
aad
stos
mov
mov
sti
lret
push
sub
xor
and
dec
loope
leave
cmp
cltd
out
in
rcrb
adc
cmp
ja
fsts
data16
lret
push
xor
test
adc
or
in
dec
or
push
and
xor
adc
sbb
ficompl
call
in
stos
xchg
in
jl
jnp
lea
cmp
cmp
xchg
mov
out
sub
ret
sub
shlb
test
mov
andl
movsb
add
pop
pop
adc
inc
outsb
jg
sub
flds
lret
jbe
stos
mov
lds
xor
push
sahf
ret
pop
push
leave
fisubl
pop
inc
lcall
fists
sar
sbb
or
lods
call
sbbl
jne
es
lret
cmp
sbbb
mov
mov
cmp
inc
sar
adc
jecxz
push
sub
jecxz
call
cmpsb
adc
test
sub
repz
out
push
call
mov
pop
jle
jae
js
mov
pop
push
hlt
xchg
sti
stc
enter
popf
call
pushf
sbb
inc
mov
xchg
cmc
into
jno
push
push
adc
pop
mov
arpl
sub
inc
gs
dec
sub
mov
or
add
aas
adc
xchg
out
sub
out
lahf
es
mov
xchg
push
xchg
cmp
push
xchg
sbb
jl
es
jo
sbb
jle
push
sbb
outsb
fwait
add
bound
imull
xchg
int
je
test
fimull
mov
dec
cmp
das
inc
loop
xor
mov
jns
inc
out
insb
sub
pop
mov
sbb
rcll
iret
lret
jo
out
aaa
insl
mov
loopne
mov
shlb
repz
leave
notb
sbb
in
cli
fcomip
xor
push
push
sarl
xchg
mov
orb
int3
adc
cmpsl
inc
sti
jno
js
shrl
hlt
call
xor
inc
fnstenv
mov
lea
cmp
xor
jns
call
pop
in
mov
imul
int
cmp
jp
adc
push
imul
sub
stc
lods
negl
mov
sbb
pop
xlat
fxch
cs
lahf
or
cmp
dec
ret
imul
add
stos
add
outsl
daa
cli
xchg
es
jnp
enter
add
test
jp
rolb
and
push
int
mov
push
push
aad
movsb
outsl
cmp
ret
mov
add
nop
or
lock
mov
gs
inc
xchg
xor
mov
or
pop
add
or
negb
xchg
adc
imul
outsl
push
or
and
fisttps
push
out
lods
rorl
fisttps
in
push
iret
imul
inc
mov
aam
pop
rol
fstpt
xorl
aam
push
fimull
xchg
add
add
xor
sbb
je
cmp
scas
test
mov
rol
into
xor
add
sbb
mov
clc
push
loopne
push
repz
xlat
xor
add
jb
sub
mov
fmulp
push
imul
sbb
mov
leave
jnp
rorl
adc
jmp
push
mov
pushf
ficoms
cmp
mov
test
scas
dec
adc
xor
sbb
fisttpl
call
cmp
push
or
cmc
dec
js
and
mov
sub
push
call
gs
xchg
loop
add
ret
shll
mov
ljmp
sti
andl
inc
mov
lcall
movsl
lahf
int3
movsl
mov
pcmpeqd
or
adc
cld
test
jb
cwtl
add
jae
lea
cs
mov
push
cmp
push
dec
jbe
pop
rcl
insl
gs
or
pop
movsl
cmp
fidivrl
mov
enter
sarl
pmulhw
cmp
into
push
xchg
mov
or
movsl
mov
lods
addr16
daa
pop
repz
repz
lock
xor
int
sarb
and
cli
mov
scas
mov
inc
testb
inc
clc
inc
jno
les
int
lahf
cmp
xchg
pop
cmpsb
in
ljmp
cmp
jnp
or
ret
movsb
movsl
hlt
dec
sahf
add
mov
mov
mov
sbb
ret
hlt
sub
loopne
daa
cld
fadds
pop
adc
push
sub
bnd
btc
adc
dec
ret
xchg
pop
nop
inc
sbb
loope
lcall
nop
sub
lret
push
jns
inc
mov
or
in
push
rclb
jne
cmpsb
imull
sub
addr16
insb
and
inc
cwtl
inc
xlat
inc
xchg
push
jp
jbe
stos
fdivrl
shlb
and
pop
loope
aaa
or
dec
cld
mov
aam
cmp
add
cmpsb
jae
mov
cli
dec
cmpsb
push
jmp
fsubs
shll
scas
movb
and
pop
xor
cmp
insb
xlat
ficoml
stc
je
imul
mov
ljmp
dec
mov
jmp
cwtl
xor
cmpsb
pop
aas
out
lret
xor
mov
jle
xchg
cmc
or
xchg
jecxz
sub
fcompl
jp
mov
imul
mov
fistl
lock
cmp
jg
repnz
pop
nop
insl
test
xlat
sub
mov
test
lock
and
mov
jge
mov
xor
sub
dec
scas
mov
call
dec
adc
test
js
dec
mov
lret
mov
cmpsl
jecxz
sbb
mov
in
add
cmp
sub
inc
inc
cmpsl
jbe
inc
ds
out
mov
mov
push
jg
dec
jns
jmp
es
call
iret
inc
int3
xor
out
cmc
cltd
add
cmp
cltd
sbb
mov
sbb
add
mov
dec
lea
sub
imulb
xor
addr16
fldl
mov
cmpl
sub
lock
int
fldenv
adc
lret
inc
cmp
cltd
mov
es
int3
out
popa
jmp
fs
push
xchg
push
sub
or
dec
sub
pop
pop
clc
mov
inc
ret
mov
leave
dec
xor
lahf
cmpsb
cmpl
mov
gs
orb
adc
pusha
push
and
popa
faddl
adc
mov
push
cmpsb
mov
xchg
jl
testl
jb
dec
div
mov
lcall
insl
orl
mov
jb
xor
sbb
adc
lods
aam
orl
and
cmpsl
out
insb
pop
mov
fs
shlb
cmp
daa
ret
fiaddl
outsl
aaa
add
lcall
out
arpl
pop
and
and
repz
and
adc
xchg
cmpsb
pop
int
addr16
sub
mov
cmpsl
pusha
adc
mov
push
mov
testb
ljmp
jb
jle
bound
mov
mov
loopne
push
test
sbb
insb
inc
repz
xchg
xor
stc
push
cwtl
popa
xor
es
push
das
lahf
dec
out
call
xor
or
xchg
pop
out
ja
jae
jmp
add
adc
and
fildll
aas
push
push
push
mov
pushf
mov
mov
or
cmp
fildl
hlt
xchg
mov
stos
xchg
orb
jno
adc
pop
push
and
roll
ja
jmp
or
dec
repz
cld
fcom
sarb
inc
and
je
jp
pop
adc
push
popf
mov
shrl
addr16
lret
mov
and
pop
add
or
cmp
xor
xchg
ret
ret
xor
mov
add
lahf
leave
ja
shl
and
out
sub
mov
sbb
fistl
cmp
stos
int
cwtl
or
adcb
pop
ljmp
adc
int3
jo
testl
outsl
icebp
xchg
out
add
sahf
cli
aas
inc
or
cmp
cmp
mov
je
xchg
push
cld
mov
inc
or
push
xchg
subb
bound
inc
mov
cld
mov
mov
shll
push
add
cmp
mov
popa
push
xchg
adc
xchg
int3
mov
and
test
sbb
dec
or
jle
lret
cmp
test
xchg
and
insb
sbb
enter
xor
lcall
ds
clc
xor
sarb
sti
mov
or
movb
je
or
inc
mov
sub
or
add
mov
mov
je
cmc
aam
dec
sub
mov
out
push
movsb
in
sbb
hlt
addr16
sbb
inc
jg
fs
sub
pop
ljmp
inc
cwtl
cmpsb
mov
inc
and
push
dec
test
fdivr
inc
ret
sbb
outsl
test
push
xchg
in
cmpsb
pop
xchg
je
xchg
inc
sbb
push
gs
aad
jecxz
push
push
stc
sbb
in
sbb
fcmovnb
push
pop
jle
mov
mov
je
fcoml
cmpsb
push
test
aam
add
push
push
ror
mov
jbe
int
and
and
inc
adc
das
mov
loope
stc
call
shr
movsb
ljmp
jecxz
stos
and
jbe
cmp
pop
enter
aam
push
loope
dec
insb
cli
shrb
ss
pop
jbe
lret
icebp
imul
xchg
mov
cmpsb
gs
mov
outsb
pop
jne
das
cmp
xor
pushf
push
fsubrs
aas
repnz
push
pop
lret
jbe
rolb
cli
jb
mov
fidivrs
aas
push
xchg
mov
adc
adc
imul
push
inc
jbe
jecxz
push
mov
xor
mov
push
sub
mov
insl
jecxz
sbb
jp
mov
xor
nop
popf
pop
xor
pop
xor
icebp
in
sbb
adc
xchg
pop
mov
pop
ficoml
enter
mov
outsb
dec
cmc
cld
mov
cld
ljmp
xor
xchg
cli
int
cmp
add
and
inc
insb
mov
mov
mov
psubd
lahf
test
mov
aad
mov
movsb
pop
lcall
lds
lock
xabort
not
jl
mov
clc
jbe
aaa
xchg
dec
rcll
adc
adc
cmp
mov
sbb
mov
popf
pop
je
ja
dec
inc
test
or
push
mov
mov
hlt
xlat
adc
adc
jle
mov
mov
out
xchg
lods
jnp
jno
out
xchg
movl
outsl
pop
pushf
jle
gs
xchg
xchg
jno
loop
movsl
dec
xor
xchg
int3
popf
lock
test
sub
mov
add
mov
mov
or
cmp
cmc
ja
dec
or
sti
int3
lret
push
data16
push
pusha
mov
ficompl
dec
hlt
mov
icebp
les
mov
jp
out
sub
sub
shll
adc
sub
push
imul
mov
jbe,pn
sbb
scas
rcrb
push
test
pop
sarb
mov
cmp
pop
and
adc
mov
in
dec
stc
enter
jmp
or
add
xchg
fnstsw
push
out
mov
test
stos
js
or
pop
daa
sub
out
inc
mov
push
pop
and
sbb
jnp
sub
js
outsb
mov
sahf
ja
mov
in
dec
out
in
mov
sbb
and
jge
jge
outsl
jge
push
dec
repz
push
adc
inc
cmp
mov
mov
adc
mov
leave
movsb
frstor
lea
imul
std
mov
stos
popf
push
dec
dec
nop
movsl
sbb
push
jmp
scas
add
imul
out
xor
jae
sub
lods
iret
xchg
cmp
roll
pusha
imul
cmc
mov
pop
or
cmp
add
daa
scas
je
dec
xor
adc
loop,pt
mov
testl
leave
or
push
out
stos
dec
xchg
push
cmp
xorb
gs
std
mov
lea
cmp
clc
push
dec
inc
adc
fldt
push
xchg
stc
in
movsb
pushf
push
xchg
push
sbb
mov
int3
fwait
sti
push
in
fcmovne
or
mov
lea
jle
in
inc
jbe
fcoml
sub
push
cwtl
xor
pop
fbstp
jne
stos
mov
or
jge
push
jmp
movsl
mov
mov
add
hlt
scas
jbe
fnstsw
movsb
sti
xorb
mov
test
fisttps
leave
fsubr
xchg
jns
adc
es
pushf
fwait
gs
hlt
and
mov
push
jno
std
int3
daa
mov
clc
ljmp
push
imul
repz
lock
insb
fwait
xchg
push
mov
sbb
in
je
shll
fdivl
xor
mov
mov
jmp
es
or
push
xchg
div
fidivl
dec
fdivrs
ficoml
scas
push
fidivrs
xchg
repz
inc
xor
test
std
cmp
movsl
sti
int
fldl
arpl
jnp
test
mov
int
or
xchg
mov
outsb
xor
xchg
pop
js
cmpsl
shr
jae
mov
mov
testb
pop
mov
lock
add
pop
mov
adc
mov
jl
jne
push
scas
in
je
inc
shlb
pop
push
iret
add
loope
cli
jb
and
mov
mov
or
js
fisttps
scas
pop
xor
aas
nop
add
or
inc
lods
xlat
sarl
addr16
js
loope
int
call
mov
lret
icebp
lock
fsin
jecxz
dec
and
rcrb
and
imulb
mov
sbb
inc
inc
stc
cmp
pushf
mov
sti
fsts
pop
popa
push
cltd
pop
pop
push
mov
cmp
nop
iret
dec
test
xchg
std
lods
mov
shlb
jbe
add
shll
dec
pop
add
mov
pusha
dec
sbb
jnp
scas
mov
ljmp
jo
fnstsw
scas
jb
out
pop
les
or
sar
mov
xchg
adc
fadds
cwtl
rorb
mov
mov
dec
pop
lahf
aad
lret
cmc
pop
cwtl
dec
mov
loop
into
dec
or
jg
inc
mov
push
mov
ljmp
fcoml
mov
repnz
jecxz
in
inc
arpl
sbb
cmp
push
sahf
faddl
and
adc
pop
adc
popa
mov
dec
addr16
sbb
mov
cmpsb
clc
push
jl
inc
iret
cwtl
imul
lods
out
mov
cwtl
xchg
mov
xor
and
xchg
push
mov
mov
xor
and
cmp
daa
loopne
pop
leave
les
pop
dec
jmpw
jne
mov
mov
or
int
add
outsb
jle
cmp
aas
jl
jmp
adc
int
clc
sbb
adc
sti
lar
shlb
sbb
pop
fbld
mov
sbb
js
sar
divps
adc
fnstenv
arpl
inc
and
mov
lods
sub
pop
loopne
notb
mov
pop
call
jl
adc
bound
push
or
pusha
int3
inc
iret
cmp
xchg
sub
aaa
adc
inc
dec
pop
sbb
ds
add
mov
jge
idivb
jbe
sbb
xor
lods
xchg
cwtl
mov
add
daa
mov
lock
push
push
pop
or
inc
or
cmp
fildll
dec
mov
inc
ret
insb
mov
loop
add
fwait
mov
sarl
and
bnd
stc
jg
stos
pop
and
movsl
push
adc
imul
imulb
movsb
enter
and
cmc
push
lods
or
aas
outsb
hlt
jmp
fsubrs
mov
lods
lds
adc
jae
lret
sbb
xchg
movsl
adc
addr16
nop
iret
inc
popa
cmpsb
fnstsw
orb
push
ret
jl
lcall
xor
dec
cmp
fistpl
cli
jbe
sbb
adcl
fimuls
lock
cmpsl
outsl
adc
flds
sub
add
jnp
inc
shll
jp
fstps
scas
jnp
jno
pop
push
cmp
mov
inc
add
xor
pusha
mov
movsb
leave
pop
and
pop
add
imul
dec
xor
lcall
sahf
insl
fwait
mov
inc
jg
rep
arpl
mov
mov
adc
push
inc
loope
pop
enter
push
cmp
pop
stos
es
and
push
sbb
outsl
and
mov
daa
sub
insb
aad
rcll
les
mov
push
xchg
pop
jg
popa
sub
mov
mov
sbb
cli
ret
bound
sub
cli
or
adcl
jo
mov
mov
imul
cmc
add
jae
mov
mov
dec
xchg
pop
pop
push
out
mov
enter
push
xchg
cmp
push
dec
mov
dec
jb
or
xor
loop
movsl
cmc
cmp
fdivr
nop
adc
fldl
pushf
jl
ror
fstps
neg
mov
popf
scas
and
jae
in
loop
nop
ds
fistpl
sub
clc
mov
lcall
movsl
insl
add
xchg
xchg
stos
fisttpll
rcrb
mov
fs
mov
clc
cltd
data16
gs
sbbb
and
shrl
inc
fwait
xchg
std
sub
mov
push
add
aad
les
aas
jle
mov
adc
test
sbb
cmc
push
mov
mov
test
pop
movsl
mov
mov
mov
cmp
daa
repz
ds
popa
xorb
dec
nop
pop
mov
je
sbb
out
test
mov
dec
dec
cli
adc
inc
pop
mov
aam
mov
lock
inc
incl
sbb
scas
cmp
or
xor
mov
dec
loope
xchg
fiadds
or
or
in
and
sbb
sbb
dec
addb
adc
jne
sbb
lahf
decl
rolb
xchg
das
fldcw
leave
pushf
mov
mov
adc
enter
sub
add
add
clc
adcb
xchg
repnz
jl
dec
lea
mov
enter
push
fwait
pop
cmpl
in
pop
fisubs
jle
stos
lahf
add
inc
xor
add
or
jle
xchg
mulb
mov
xchg
mov
or
fldcw
rclb
mov
jecxz
dec
sti
jno
aas
fldenv
and
sub
lods
lcall
aam
cwtl
ja
int
push
sti
in
les
bound
xlat
xchg
push
dec
inc
xchg
add
cld
lock
mov
xor
popf
inc
fdivs
push
xor
test
add
dec
stos
mov
sbb
bound
cmp
inc
jae
shlb
cli
jge
sub
jg
mov
test
pop
add
cmc
pop
dec
jle
aad
dec
xchg
push
cs
imul
loopne
dec
movsl
test
sub
adc
lret
daa
scas
popa
scas
arpl
sbb
cmp
push
push
mov
mov
and
cmpsl
sti
ss
jno
push
adc
ljmp
sub
or
cmp
loopne
aam
cmc
jecxz
gs
hlt
rcr
push
mov
dec
jle
jae
scas
or
lock
xor
out
sbb
adc
mov
out
js
cs
cmc
sub
dec
add
cmp
insb
cs
cmc
mov
adc
jbe
nop
mov
push
cwtl
sbb
out
jmp
jne
in
jo
push
xchg
or
stc
enter
pusha
sti
mov
and
mov
lcall
test
rcrb
cmp
hlt
jmp
iret
inc
loopne
sub
rcrb
push
int3
xchg
sub
aam
notl
in
jne
stos
imul
hlt
xlat
loopne
lret
ret
shrb
push
and
mov
cmp
pop
push
mov
cmp
mov
jge
mov
movl
int
bound
ss
xchg
mov
inc
mov
mov
mov
sbb
inc
lahf
in
push
mov
sub
mov
xor
clc
mov
addr16
inc
adc
inc
sub
push
ss
xchg
lods
testl
scas
lds
cs
out
in
and
ret
lcall
cmpsl
add
jmp
xchg
mov
push
mov
xchg
xchg
pop
mov
test
rcll
dec
arpl
mov
mov
cwtl
sub
sub
and
cmc
jmp
dec
xor
aaa
fs
adc
sbb
xchg
or
pop
pop
out
cmp
mov
fldenv
cmpsl
lret
stc
mov
jmp
sbb
xchg
add
out
jl
cmp
pop
xchg
outsl
ss
sbb
dec
and
enter
lret
add
dec
movaps
and
xor
cmp
icebp
test
xor
rorl
mov
sub
xchg
cld
pop
dec
mov
xchg
stc
bound
push
cmp
add
xlat
mov
stos
jmp
and
ja
sbb
lret
sbb
addr16
sahf
inc
add
sub
inc
or
in
shl
sahf
jmp
jmp
adc
jmp
loope
out
push
or
andb
insb
jmp
stos
mov
push
add
cmpsb
in
and
xchg
mov
adc
lock
pop
rcll
adc
js
lds
jb
jge
repnz
bound
out
andl
fists
test
mov
ret
mov
pop
outsb
cltd
mov
cmp
pop
mov
nop
dec
add
mov
push
clc
jo
inc
xchg
add
cmpsb
int
inc
arpl
mov
fdivl
pop
call
jle
mov
or
arpl
sub
aam
and
xor
scas
scas
mov
mov
mov
sub
push
pop
arpl
out
dec
movsl
test
push
cmp
dec
add
mov
pop
mov
push
pop
aad
add
pop
xor
movsl
rclb
lcall
insb
xor
jne
stos
sbb
and
or
sub
insl
ljmp
mov
pop
sti
sub
js
je
jg
fsubr
jns
fsub
into
push
jb
push
mov
and
mov
loopne
aad
rcl
lcall
clc
push
xchg
push
addl
mov
xor
jl
test
pusha
popf
lcall
push
cs
lock
add
repz
mov
cmp
int
mov
jmp
pop
test
jno
xor
inc
idivl
dec
lds
push
dec
outsb
test
bnd
ja
jle
dec
ret
sbb
push
lea
push
sub
ret
cmpsl
dec
dec
divl
jae
jbe
daa
jnp
inc
cmpsl
jno
push
outsb
cmp
and
add
jae
mov
mov
and
or
lods
loope
out
test
sbb
into
sbbb
jo
mov
pop
add
mov
insb
gs
stos
test
mov
cmp
insb
aas
sbb
cli
rcll
jno
imul
or
jbe
pushl
dec
adc
es
dec
cmpsl
mov
push
inc
test
mov
in
arpl
dec
push
cmp
jg
pop
add
cmp
out
pop
jno
inc
inc
add
dec
push
loop
orb
roll
mov
loope
mov
adc
mov
mov
jb
adc
popw
out
negb
scas
xchg
cmp
dec
decl
pop
je
push
mov
loop
ret
mov
test
pusha
test
sub
pop
push
jle
push
add
jmp
shll
add
cmpsl
add
mov
or
inc
fldt
insb
sbb
das
push
push
pop
mov
ficompl
push
data16
aaa
cmpl
popf
mov
arpl
rolb
inc
mov
pop
jp
mov
jmp
lret
lods
or
nop
push
daa
fmul
subb
pop
out
and
test
push
inc
aad
scas
pop
push
imul
scas
jbe
xchg
xchg
push
jne
cli
cmpsb
mov
sub
ss
mov
push
into
rorb
imul
push
lods
js
mov
mov
out
into
repnz
lret
push
jno
xor
je
and
jl
in
stos
sbb
ret
roll
and
fcoms
adc
not
ret
xchg
push
out
pop
pop
sub
push
cmp
mov
iret
add
pop
xor
xchg
int
jae
or
subb
mov
leave
inc
add
ret
iret
sbb
xchg
imul
mov
cmp
add
outsb
fsubl
rorb
in
outsb
jp
inc
pop
sbb
popa
clc
mov
inc
fdivrl
mov
push
mov
mov
mov
js
fnstsw
pop
lret
cli
and
xor
or
stos
adc
inc
sbb
les
mov
sub
cmpsb
sub
aaa
out
cmp
das
mull
sbb
pop
push
sub
cmp
pop
int3
shll
or
sti
cmp
cmp
jns
nop
jb
arpl
mov
push
xchg
pop
pop
lcall
fwait
aas
dec
mov
dec
pop
repz
xchg
int
dec
mov
lods
and
inc
cltd
add
inc
jle
movsbl
mov
push
js
xchg
cmp
push
aas
data16
clc
repz
mul
mov
mov
aam
push
cmp
aaa
enter
and
mov
cli
pop
scas
jbe
imull
or
out
lahf
sbbb
cmp
lods
mov
filds
xchg
add
fildl
push
popf
add
out
sbb
add
or
push
mov
cmp
jnp
int3
xchg
rorb
xor
jp
loopne
test
jne
mov
add
jle
ret
stos
and
xor
xor
jle
and
inc
hlt
call
fiaddl
je
xor
ljmp
push
mov
gs
jno
mov
iret
add
popf
sbb
mov
sti
cwtl
aas
mov
shrl
jge
lods
lds
sti
jecxz
push
ljmp
dec
inc
push
mov
mov
xlat
jp
shrb
pusha
scas
std
shl
outsl
rcrb
mov
xchg
jecxz
js
imul
scas
pusha
xchg
sbb
stc
push
hlt
cmpsb
jmp
in
lcall
xchg
xlat
stc
and
or
loopne
push
jp
clc
pop
rcrb
mov
xchg
mov
cwtl
inc
lar
add
movb
iret
fiadds
ss
int3
out
sar
and
pop
gs
rdtsc
insb
xchg
and
push
fwait
test
ja
bswap
mov
clc
pop
test
xchg
lock
jae
mov
fmuls
sbb
mov
push
cmp
mov
inc
lahf
popf
push
pop
or
pop
jp
pop
lea
call
mov
xchg
adc
mov
pusha
lret
jge
mov
mov
add
leave
popf
jecxz
fsts
push
cmp
dec
push
fidivrl
or
das
loope
lds
mov
cmp
sgdtl
test
loopne
leave
adc
jp
sarl
gs
stc
out
jbe
imul
lret
xor
stc
out
mov
xor
dec
mov
rorb
iret
inc
sahf
sbb
xchg
ss
dec
enter
sbb
out
aas
inc
ljmp
sub
xorb
test
mov
pusha
popa
out
sbb
in
int3
add
out
add
aas
movb
jns
aas
mov
fistpl
cmp
andb
out
jg
mov
push
xchg
aad
and
xor
loope
ret
mov
testl
dec
popa
inc
out
xor
mov
xchg
mov
addr16
std
xchg
jp
and
lea
gs
inc
push
pop
arpl
or
cmc
inc
mov
jp
fwait
loop
repz
push
mov
jns
mov
call
jae
inc
repz
arpl
in
push
or
aam
test
sub
clc
and
push
test
cmp
movsb
hlt
or
jb
aad
jns
insl
test
or
cmp
mov
push
mov
pusha
nop
jbe
mov
inc
fists
fcompl
cmpsb
cmova
lock
loope
call
dec
je
and
rolb
xchg
xchg
outsb
sub
lahf
mov
ljmp
push
sub
cwtl
sti
add
mov
push
mov
add
jb
insb
xor
hlt
cwtl
sbb
cmp
push
ret
into
movsl
adc
xlat
xor
sbbl
mov
icebp
mov
mov
push
jne
adc
clc
xor
lods
jae
dec
cmpsl
idivb
fistpll
inc
sbb
bound
add
psadbw
mov
test
add
and
out
or
sbb
adc
addr16
into
cmp
sub
mov
pop
push
scas
xor
push
sbb
xor
mov
stos
jge
es
rcl
pop
dec
mov
xchg
std
popf
xchg
jge
movsbl
std
or
inc
adcl
jmp
and
sarl
jnp
scas
cld
into
push
jnp
xchg
fcoms
mov
or
jmp
cmp
rol
mov
mov
or
pop
cld
das
fstps
sbb
hlt
lret
mov
pop
imul
fsubrl
fwait
or
scas
icebp
testl
sbb
or
das
mov
jmp
pop
sahf
or
fimull
test
dec
xchg
pop
jne
add
fiaddl
movsb
jo
xor
inc
or
repz
or
ja
inc
or
fs
jae
xchg
cmpsb
mov
mov
sbb
adcb
dec
xor
lea
cmpsl
lahf
das
mov
inc
ja
scas
lea
mov
inc
lds
cmp
sub
inc
sahf
xor
dec
fists
xchg
dec
repnz
jle
fadd
leave
sub
call
stos
inc
loopne
xchg
dec
or
xchg
incb
lahf
xlat
dec
out
mov
std
cmc
and
out
mov
insb
xor
and
mov
mov
loopne
and
cmp
cmovno
addr16
mov
cltd
icebp
mov
call
es
aas
mov
push
jge
push
xchg
call
pop
push
aaa
cmpsb
cmp
adcl
xchg
push
data16
xchg
pop
dec
pop
pop
test
aam
outsl
and
lods
or
and
iret
cwtl
add
and
roll
dec
inc
ljmp
daa
or
insb
or
xchg
into
mov
cmc
imul
pop
fildll
arpl
aas
cld
adc
xchg
adc
lret
shll
cmp
out
mov
aas
xchg
aaa
mov
jns
jne
bound
cmpsb
cli
fsubrs
add
test
mov
cmc
imul
arpl
mov
adc
jle
stos
lcall
stos
and
xchg
adc
rcll
xor
fnsave
jle
sub
add
and
test
jns
daa
sbb
mov
test
mov
and
int
shrb
out
fsubrl
lods
lcall
cwtl
inc
int
add
jb
dec
sbb
test
xchg
loope
pop
test
ret
loop
push
cli
mov
cmp
mov
nop
test
in
insb
test
out
inc
lods
decl
std
pop
rcl
insl
les
shr
call
push
xchg
mov
std
add
rcl
call
xor
sti
push
and
xor
xlat
fnstsw
cmp
clc
sbb
pop
fstpl
ja
inc
sub
out
add
xor
mul
test
repnz
stc
or
push
fcmovnbe
mov
pop
sbb
mov
je
lret
cmp
push
in
lret
jg
pop
sub
test
sub
leave
cwtl
cmpsl
jmp
ficomps
mov
lahf
popf
jge
hlt
mov
dec
mov
sbbb
sbb
adcb
shrb
push
fcoms
jg
fnstsw
sub
or
jge,pt
push
push
add
mov
xchg
inc
rorl
pop
add
cmp
fs
lret
inc
or
cmpb
jae
xchg
sub
pop
or
jne
stos
sbb
imul
xor
std
sbb
aad
xchg
test
pop
or
sub
rcrb
addr16
xchg
bound
mov
mov
mov
mov
iret
outsb
adc
add
clc
lock
xor
pop
insb
out
int
lcall
sarl
call
adc
das
dec
shll
mov
add
loope
repz
int3
adc
mov
cmp
pop
jmp
push
jge
sbb
xor
xchg
cmp
sub
adc
lds
fs
sarl
data16
lret
mov
scas
stos
lods
cmp
push
cli
push
mov
mov
or
add
dec
sbb
pop
adc
push
je
sbb
rcl
jne
test
popf
mov
sbb
out
mov
rcrl
adc
sub
or
lahf
jnp
mov
in
and
pop
and
mov
mov
or
jmp
fildl
inc
ror
movsl
and
push
das
xor
lahf
pop
lcall
repnz
nop
xchg
out
lcall
iret
cmp
jmp
lea
cwtl
test
adc
in
xchg
cmp
add
sbb
mov
movsl
gs
mov
test
add
push
push
arpl
jno
jmp
aaa
mov
movups
out
and
sub
jae
out
xlat
adc
dec
adc
jecxz
jmp
movsl
push
fisttpl
jnp
or
jmp
xlat
daa
sbb
daa
sub
in
cli
pop
add
sbb
aam
adc
lods
test
mov
ss
scas
sbb
dec
in
pop
jmp
mov
push
mov
push
jmp
incb
lds
adc
cmp
dec
sub
dec
adc
mov
das
sub
imul
outsb
enter
scas
and
dec
cmc
rcr
cmp
cmp
and
out
jle
mov
adc
je
or
lods
scas
out
imul
shrl
nop
mov
add
dec
push
xor
push
mov
aas
outsl
js
and
xlat
cmc
call
push
adc
jb
xchg
adc
add
xchg
sbb
in
push
xor
xchg
add
mov
imul
mov
jp
mov
inc
out
push
les
fs
add
push
inc
jo
imul
ficoml
mov
cmp
div
daa
nop
ljmp
aaa
outsl
fisttpl
add
imul
es
mov
or
jne
dec
mov
rorl
in
cmp
fucomip
mov
pushf
dec
sbb
push
cmp
pop
mov
adc
stos
lret
ret
aaa
fisubs
sarb
ret
inc
push
cltd
repnz
inc
aas
or
les
std
cmp
stos
pop
push
jne
fdivr
lret
push
cltd
push
inc
in
ss
xchg
int
mov
rclb
lods
mov
and
das
jge
lcall
xor
int3
bound
or
popa
mov
pushf
lret
mov
scas
mov
scas
js
ja
out
pop
jecxz
maskmovq
mull
aam
outsl
stc
test
sub
scas
sub
jbe
xchg
push
jnp
imul
call
mov
xchg
dec
in
or
mov
test
jmp
cmp
or
mov
pop
pop
inc
int3
pop
or
xchg
adc
jae
and
inc
xor
push
inc
aad
mov
popa
loope
push
cmp
test
pop
dec
add
mov
clc
mov
xchg
cmp
adc
jecxz
push
aam
js
and
daa
int
popf
testb
outsb
movsb
sbb
xchg
sub
cltd
dec
dec
adc
imul
sti
push
fwait
and
roll
gs
out
in
pusha
jae
rdpmc
iret
jo
xchg
jno
inc
mov
push
fmuls
xlat
stos
mov
movsl
sub
movsl
push
icebp
in
and
xchg
mov
sub
mov
data16
int3
mov
and
cmp
push
pop
xor
iret
out
out
sub
pop
aam
sub
and
push
and
and
pop
cmp
push
adc
loopne
mov
sbb
dec
push
mov
pop
lods
shlb
pop
jbe
scas
lds
sarb
push
push
jbe
push
mov
dec
push
xor
outsl
ret
sahf
sub
mov
stos
inc
jmp
fisttpll
data16
push
leave
adc
test
xor
clc
push
loop
or
push
movntq
jmp
inc
cmp
push
pop
jl
add
scas
or
outsl
movb
pushf
enter
or
cmpsb
loopne
cmp
test
fdivl
sarb
cltd
adc
dec
push
test
cmpsl
aas
mov
xor
inc
gs
ss
gs
stos
jg
leave
bnd
jb
loop
cmp
push
adc
xchg
cmc
jecxz
movntps
xor
call
mov
imul
pusha
ret
push
pop
rcrb
pop
int3
add
popf
aad
lahf
dec
or
mov
and
in
adc
loopne
jg
sbb
ffreep
idiv
xchg
sub
mov
add
add
loopne
loope
test
dec
dec
rcll
adc
inc
bound
and
push
pop
xor
dec
out
add
xlat
int
rolb
in
ret
mov
icebp
sarl
imul
push
mov
push
pop
cmc
aad
jno
jb
xchg
sbb
lcall
notl
pop
mov
js
adc
jl
sbb
mov
mov
mov
adcl
cmp
das
jb
testb
or
std
fsubrs
jmp
addr16
aas
fdivl
sahf
mov
push
out
std
cmc
lock
mov
mull
inc
ficompl
xchg
jg
icebp
and
push
lcall
pop
rcr
mov
rclb
out
or
int3
sbb
mov
leave
adc
mov
pop
pop
insl
movl
addr16
insb
pop
sub
dec
add
jl
sbb
mov
call
mov
aam
and
cli
movsl
insb
pop
sbb
fs
in
add
mov
ds
ror
shr
jl
jns
jnp
sahf
mov
dec
repz
fbld
or
mov
imul
mov
addr16
out
jmp
pop
data16
sub
dec
xchg
mov
inc
mov
xchg
jbe
fbstp
sbb
sbb
loop
pop
fdivs
xchg
lcall
mov
stos
sbb
and
stc
jle
mov
js
int3
je
pop
lcall
xor
sbb
loope
fwait
cld
and
fcomps
jmp
dec
mov
inc
out
es
cld
mov
and
stos
hlt
and
aaa
dec
lcall
mov
movsl
lea
inc
mov
leave
mov
les
stos
outsl
les
lcall
ljmp
jnp
xor
mov
fisubs
sti
and
mov
daa
jae
jmp
dec
push
shrl
jp
and
adc
pusha
cmp
cmpsl
xlat
xor
or
pop
dec
cwtl
arpl
popa
out
lds
jno
mov
incl
adc
or
loop
mov
std
jp
cmp
jns
sahf
and
int3
aas
add
inc
push
or
ss
push
ja
test
mov
adc
mov
mov
add
fs
jno
sbb
jmp
clc
sub
xor
adc
add
lods
loope
cld
in
or
bound
in
cmp
or
xor
lahf
cli
mov
jge
icebp
aas
mov
lret
mov
testl
mov
test
data16
mov
pop
lods
mov
stc
stos
mov
and
lods
adc
inc
sbbl
dec
std
into
jl
push
adc
stos
je
flds
sbb
popf
out
aas
popa
lds
cs
jge
pop
adc
and
repz
not
pminub
stc
std
add
jae
stos
mov
aas
ds
or
int
fiaddl
fcoms
jns
jne
push
and
dec
xor
or
mov
and
in
fdivs
adc
repz
sub
movsl
add
and
mov
jbe
pop
adc
rcrl
xchg
mov
pop
clc
lods
lret
call
jbe
aam
int
das
mov
pop
cmp
ljmp
adc
mov
push
ja
sub
add
cmp
cmp
or
inc
xchg
adc
push
mov
xchg
scas
stos
out
adc
lret
rep
and
push
jne
aas
dec
aas
call
orl
mov
cwtl
test
mov
or
mov
mov
xchg
testb
adc
lds
xchg
lock
clc
mov
mov
cmp
inc
or
imul
pop
cli
dec
sbb
inc
xor
mov
push
pop
xorb
out
cmp
call
imul
jae
and
or
dec
lods
divb
push
sbb
ljmp
popf
nop
push
mov
and
and
and
ljmp
fiaddl
fisttpl
ret
in
jae
rorl
or
fs
xchg
dec
jp
jbe
inc
pop
inc
pop
push
clc
cli
adc
add
and
sbbl
push
mov
in
into
insl
loope
and
add
jnp
popa
or
xchg
gs
pop
xchg
cltd
xchg
into
dec
inc
xor
add
sbb
cmpl
jo
jb
sti
enter
inc
add
nop
fmull
jne
in
push
ds
push
fstp
or
nop
add
inc
frstor
add
mov
sbb
xchg
push
jmp
das
lret
popf
fisubrs
popa
int
mov
pop
int
jo
inc
cmc
push
pusha
fs
sbb
and
clc
fsubl
cmp
sub
icebp
jle
sti
inc
nop
pop
into
sbbb
loopne
sbb
lahf
sbb
lea
jg
fcoms
adc
lcall
mov
dec
stos
pop
pop
push
inc
aaa
pop
cs
fcomp
xlat
stos
scas
adcl
mov
jo
xchg
add
sahf
cmp
xchg
dec
rolb
rolb
ljmp
mov
gs
in
push
imul
repz
jle
add
ret
popa
inc
ss
sub
ja
and
sbb
push
add
lcall
push
lods
or
movsl
dec
in
dec
xchg
ss
mov
dec
jno
div
repz
dec
clc
dec
jno
dec
adc
rorb
sub
xchg
cmp
sbb
xchg
push
arpl
xor
sbb
jge
leave
push
mov
and
lock
sarl
loop
push
pop
mov
pop
cs
popf
mov
xor
xchg
in
scas
out
cltd
lret
adcb
jno
xchg
ret
mov
mov
lods
vfmaddpd
jo
xchg
mov
sub
imul
inc
or
cmp
cmp
mov
imul
cmpb
aaa
in
gs
adc
stc
hlt
ja
ja
inc
xor
xchg
mov
sub
gs
sub
jecxz
xchg
or
and
test
in
pop
push
dec
xor
pop
rcl
into
fs
clc
jno
stc
mov
mov
jge
popl
ret
fdecstp
flds
fidivs
das
js
mov
add
out
sub
xor
pusha
dec
adc
xchg
dec
insb
notb
push
test
out
xchg
dec
jae
add
jbe
push
push
cmp
mov
mov
jl,pn
cmp
outsl
subl
aaa
out
cmpsb
mov
cltd
cmp
sbb
adc
scas
in
pop
and
jl
push
sub
sbb
fsub
loop
or
cwtl
mov
inc
cwtl
xchg
and
add
cld
lret
dec
lahf
and
imul
pop
xchg
mov
mov
in
stc
push
mov
jge
xchg
jp,pt
sar
xchg
arpl
xor
pop
inc
xchg
push
xchg
inc
add
ds
int
xchg
cmp
push
jno
movsl
aam
xchg
sbbb
in
out
fstpl
mov
cmp
pushf
dec
add
sbb
push
fcmovnb
jno
pop
mov
push
in
inc
mov
int
mov
push
jl
xchg
mov
dec
and
mov
xchg
push
into
pop
sub
cmp
add
push
loope
xchg
in
repnz
ja
pop
mov
fwait
hlt
mov
cs
daa
xchg
das
divb
in
adc
negl
pop
popa
pushl
bound
outsb
cwtl
popf
lret
leave
sti
test
dec
jo
and
mov
mov
daa
cmpsl
xor
lcall
fwait
adc
cltd
add
mov
inc
das
ret
pop
mov
outsl
inc
out
aam
jns,pt
xchg
pusha
imul
or
pop
jp
and
mov
fcmovu
shll
sbb
jge
jns
sti
es
push
icebp
dec
clc
test
cmp
mov
jns
fdivrs
jl
sub
mov
jmp
jmp
mov
hlt
add
out
mov
dec
pop
sub
outsl
stos
xor
sti
sahf
jno
xor
in
mov
lcall
add
push
add
mov
cmc
test
pop
call
jecxz
in
mov
lret
hlt
sbb
jbe
add
pop
xor
dec
add
je
lret
or
pop
in
test
or
stos
or
push
jecxz
cltd
xlat
repz
jg
int
xorl
sub
pop
cmc
xchg
and
or
lods
pusha
inc
jp
sbb
sub
cmp
mov
imul
xlat
inc
mov
out
or
cmp
cltd
sbb
or
mov
mov
xchg
push
and
popl
loope
push
add
push
pop
out
jp
roll
jge
push
ss
and
mov
and
xor
hlt
shll
cmp
dec
popa
mov
jp
gs
dec
fsubrs
push
fcoms
dec
rorl
adc
cwtl
nop
icebp
add
inc
and
jmp
in
and
in
sub
test
push
pop
lds
and
cwtl
add
or
pop
add
arpl
rcrb
push
jle
das
js
mov
icebp
jne
mov
xchg
data16
or
call
lcall
xor
push
sub
stos
adcb
push
mov
stos
daa
adc
mov
andb
xor
aaa
adc
mov
lcall
or
adcl
test
mov
out
iret
adc
repnz
mov
pop
xchg
jae
pop
xor
ret
les
adc
xor
lds
test
dec
jno
sahf
and
popa
mov
inc
cmpb
and
repz
ficoms
insb
pop
adc
sbb
movsb
jbe
lock
aaa
ja
or
jb
or
dec
or
stos
insl
sub
jnp
negb
cmp
mov
pop
aaa
xchg
pusha
mov
insl
xchg
ret
lods
bound
sbb
inc
mov
xor
dec
pop
sub
andb
dec
cmp
imul
sub
dec
out
in
push
jg
aas
add
insb
fidivrl
mov
add
nop
dec
int3
sti
push
sarl
xor
outsl
adc
fld
test
sbb
lahf
gs
scas
xchg
leave
stos
jge
jns
push
push
add
lock
or
pop
inc
dec
jbe
cmc
adcl
jno
dec
mov
or
pusha
subb
sbb
dec
fs
sub
hlt
mov
imul
push
push
jae
sub
xchg
sbbb
leave
aad
rcll
test
or
pop
sbb
mov
lcall
in
adc
mov
mov
sub
lock
and
dec
xchg
inc
inc
sbb
test
dec
push
sub
push
movsl
roll
xor
cmp
inc
push
lods
pop
xor
xchg
ljmp
mov
insl
add
fsubrs
or
bound
insl
enter
adc
mov
jg
push
fistl
push
inc
iret
cmp
and
cmp
rcrl
sahf
fcoms
add
ds
sub
fs
mov
jb
imul
xorl
mov
push
jle
and
loopne
stos
xchg
int3
xor
std
pop
pop
icebp
jb
inc
mov
movsb
xchg
fsubrs
stos
repz
mov
jge
cmp
lahf
cmp
pop
icebp
push
sbb
and
inc
and
adc
test
jne
inc
cmp
xlat
loopne
lea
outsl
xor
sub
mov
lods
sbb
push
xchg
dec
in
pop
pop
jp
xor
xchg
imul
dec
adc
fcomps
mov
xchg
cld
xor
sahf
sbb
mov
mov
or
dec
sbb
aam
lret
xor
lock
ss
jl
in
addl
jo
notb
add
cltd
add
stos
dec
xor
add
mov
ds
adc
adc
test
push
loope
rclb
call
or
pop
push
pushf
or
aas
add
mov
pop
fcmovbe
push
push
pop
dec
mov
push
ja
aam
fimuls
push
xor
pusha
jae
mov
out
mov
jge
inc
pop
sbb
and
cmp
xor
repnz
push
mov
fistpll
pop
pusha
nop
or
pop
ja
sti
ljmp
ljmp
add
add
test
xchg
loopne
xchg
es
iret
xchg
stc
icebp
dec
push
adc
mov
in
jae,pt
incl
notl
pop
xchg
xchg
out
adc
and
out
lcall
fcoms
fnstcw
cmp
mov
mov
cwtl
fsubs
lret
cmp
lcall
pop
adc
sbb
pushf
divl
adc
in
xor
mov
xchg
outsb
cld
fcmovnb
pusha
xor
negl
push
pop
add
mov
mov
arpl
sub
into
sub
jmp
orb
test
push
test
cmp
or
stc
aaa
mov
outsb
jne
and
jb
in
ret
or
ret
adc
dec
xchg
sahf
or
ret
insb
cmp
test
rcrb
push
inc
mov
mov
icebp
push
adc
xchg
push
loopne
mov
add
es
xlat
pop
lahf
fisubrs
fwait
mov
sub
mov
fwait
mov
push
in
jecxz
mov
fisttpl
jle
or
out
aam
pop
jmp
and
dec
ret
adc
movsl
pop
or
sahf
or
aaa
adc
cmp
pop
jne
out
cmp
and
inc
stos
pop
pop
ja
filds
call
jns
cmp
ucomiss
jns
insb
sahf
out
dec
inc
xor
out
pop
jae
mov
xor
mov
sbb
cld
xchg
imul
dec
mov
push
insl
movsb
cmc
push
aaa
je
incl
dec
sub
mov
or
stc
sahf
call
xchg
xchg
jne
cmpsl
pop
cmp
lea
jns
int3
xchg
or
sub
push
lahf
mov
popf
sbb
cwtl
ja
outsb
cli
adc
fnstcw
shll
adc
jno
jnp
bound
lret
xchg
sbb
lock
arpl
fwait
lea
fists
adc
push
xchg
stos
sub
mov
mov
dec
sbb
jne
mov
in
pop
cmc
xchg
shrl
or
cwtl
dec
fwait
adc
std
iret
cmpsb
arpl
jo
cli
pusha
mov
mov
sub
jge
fstpt
add
inc
cmpsl
mov
aad
insl
fimull
mov
inc
aaa
leave
rolb
sahf
ret
stc
jle
movsl
jne
cmp
pop
pop
test
adc
jmp
xor
push
arpl
mov
test
xchg
inc
inc
movsl
xchg
mov
xchg
mov
mov
push
mov
aas
out
cmp
add
sub
inc
ljmp
sub
cmp
mov
stos
dec
cmp
jno
fs
cmpsl
cmpsl
cmpsl
ja
es
test
call
dec
lcall
mov
pushf
ret
call
xchg
pushf
xor
shrl
mov
enter
adc
push
jl
sbb
pop
push
xchg
add
inc
inc
mov
rorb
fisubl
add
pop
push
jns
add
aaa
and
outsl
loope
lds
jmp
cmp
cmova
ret
jnp
pushf
iret
mov
cwtl
pop
jno
aaa
enter
fld
mov
or
divl
or
pop
add
fidivrs
ret
in
jle
movsb
cmp
fxch
sbb
dec
sub
mov
or
pop
or
jbe
lock
jno
in
nop
xchg
cmp
cmp
imull
cs
push
ja
xor
or
or
add
sub
mov
repnz
imul
xchg
mov
aaa
jae
mov
cmp
xchg
dec
ret
lret
loop
mov
std
sub
sub
stos
clc
push
or
lods
std
psrlw
insl
mov
sbb
cli
mov
dec
lcall
push
xor
mov
jle
int3
lock
mov
lock
mov
cmpsl
inc
push
cmpsb
scas
cmpsb
push
scas
ljmp
das
adc
cli
push
xchg
cmp
test
ljmp
sti
push
cmp
scas
cltd
mov
sbb
mov
enter
aas
jnp
ss
aam
mov
je
lahf
cmpsb
adc
or
mov
nop
jne
xor
faddl
and
scas
test
fiadds
dec
fucom
mov
movsb
lea
cmp
jge
push
pushf
jge
movsl
cmc
and
loope
pop
mov
dec
insb
jbe
iret
movsl
sahf
jnp
sub
movsb
jl
inc
pop
lret
pop
sbb
sahf
mov
sub
xor
fcomps
imul
mov
fisttpl
xchg
int
or
dec
in
fimuls
cmp
cmpsb
shrb
incb
insl
ljmp
xlat
test
push
push
adc
jl
fs
scas
add
rcr
push
in
xchg
rorb
movsb
test
cmp
aas
aad
iret
rorb
shll
ljmp
nop
mov
fs
pop
push
push
adc
xor
testb
jno
fs
inc
repz
fdivl
out
push
cmpsl
out
hlt
dec
sbb
repz
ds
cmp
cmpsl
js
push
pushf
mov
insb
cmp
mov
adcb
pop
mov
fidivs
sub
xor
rsm
add
sub
dec
mov
jb
cli
sahf
gs
lret
shll
lret
int3
and
fdivrl
inc
mov
mov
push
sahf
push
enter
mov
sub
jo
push
out
dec
fadd
rorl
loopne
xchg
movsl
iret
aam
sarl
pop
test
int
inc
imul
jl
and
mov
loopne
into
xchg
jp
ss
js
in
xor
std
sub
shrb
mov
fsubs
out
pop
je
xchg
dec
cmp
clc
fsubl
fs
jg
mov
mov
hlt
mov
jns
pop
or
push
fdivrl
dec
outsl
pop
decb
xor
cs
rol
out
xchg
cmp
repz
fstpl
inc
rcrb
enter
jb
loope
and
xchg
testl
sbbb
ret
or
bound
mov
int
aas
dec
mov
or
adc
in
imul
push
das
adc
and
and
insb
lret
bound
add
out
push
sbb
cmpsl
push
dec
ret
mov
sar
popa
imul
and
jne
cltd
push
mov
xchg
scas
fwait
lret
insl
xchg
inc
jg
cmpsl
jge
dec
sub
imull
cmc
cmp
mov
mov
loope
jo
cmp
push
add
shlb
mov
push
xor
jg
jmp
jbe
sbb
jecxz
not
movsl
mov
dec
xor
jae
clc
mov
pop
cmp
or
sbb
push
pushf
sub
popf
inc
scas
ret
jge
ss
ss
xchg
rorb
add
pop
sbb
shll
xchg
jmp
mov
dec
xchg
dec
xchg
jae
adc
jo
cmpsl
cld
xchg
fmul
mov
adc
lods
mov
dec
aaa
les
ds
repz
cs
out
mov
xchg
jo
dec
dec
xor
mov
arpl
mov
aaa
pop
sahf
scas
inc
mov
inc
mov
jl
in
cli
mov
pop
cmp
ja
fisubrl
dec
lds
xchg
push
bound
jo
dec
out
ljmp
xor
xor
not
cli
lock
jnp
shrb
pop
loopne
add
clc
cmp
lds
icebp
xchg
pop
dec
xchg
mov
fsubs
push
jmp
insl
into
mov
cmp
mov
jae
add
insb
push
push
movsb
movsl
xor
push
or
and
in
jg
mov
mov
pop
repnz
nop
daa
xchg
xchg
fstps
lret
mov
adc
sbb
test
adc
mov
lahf
shlb
cltd
mov
jp
lsl
xchg
cmc
aas
xchg
repnz
cmp
push
inc
sub
jg
pop
sub
push
and
push
testb
jecxz
add
or
adc
push
jns
jmp
imul
mov
ret
dec
out
push
sub
popf
cmc
movsb
mov
or
mov
mov
mov
pop
daa
fsubrs
and
cmpsb
mov
stc
xor
cmp
dec
mov
sub
mov
les
jns
fcoms
sbb
aad
popa
aas
test
into
push
imul
jge
mov
aaa
sbb
xchg
loope
arpl
jg
jns
shrb
jbe
cs
fcomip
push
in
aad
mov
fisubrl
stc
push
das
pop
call
ss
popa
pop
icebp
add
es
push
fs
mov
fwait
adc
aam
lahf
movsb
pop
mov
mov
pop
scas
aad
dec
sbb
jbe
sbb
aaa
loopne
mov
mov
lret
pushf
mov
cmpsl
add
add
in
out
inc
lret
inc
scas
insb
aaa
lcall
sbb
dec
out
jmp
sahf
lea
dec
testl
lods
adc
xor
cli
xchg
mov
cmc
xchg
xchg
std
into
cmp
mov
lods
xchg
mov
mov
mov
pop
out
xchg
pop
lcall
lods
scas
lds
das
mov
inc
mov
mov
int3
pop
loop
rorl
sti
sub
add
or
or
rcrb
add
sub
push
out
hlt
imul
push
jp
fdivs
popa
sbb
ss
add
xchg
lods
call
cmp
fldcw
mov
iret
loop
inc
add
mov
fwait
mov
pop
sub
push
test
cmpsl
jg
or
andl
cmp
cmpsl
pop
mov
movsb
popa
arpl
pop
xchg
lods
ret
xchg
push
mov
pop
jge
stc
sbb
ds
pop
add
cs
pop
xor
sbb
xor
pop
inc
sub
cmp
arpl
mov
shr
scas
sbb
push
pop
mov
mov
adc
sti
pop
or
mov
lea
cltd
fidivrl
xchg
mov
pop
jmp
ret
pushf
stc
pop
adc
inc
mov
andb
xchg
add
iret
sahf
adc
cmp
mov
jecxz
sbb
push
jno
in
dec
inc
sbb
out
sub
pop
xlat
jo
dec
iret
or
pop
mov
lret
aaa
dec
cmp
filds
nop
sub
mov
sbb
mov
fsubrs
sarl
cmp
adc
jbe
cmc
sarb
or
xchg
cmp
mov
jo
sbb
lcall
adc
xchg
nop
mov
mov
testl
bound
cmpsb
cltd
or
and
cmp
iret
pushf
adcl
sbb
or
mov
stos
xor
das
inc
jnp
sub
and
stos
shlb
insl
std
je
aam
inc
fmull
sahf
fists
scas
pop
jo
rorb
mov
test
andl
xchg
imul
loope
fbstp
outsb
mov
imul
jns
push
pop
outsb
gs
mov
jns
adc
aad
ss
xchg
jl
addl
sbb
test
pop
es
and
mov
mov
cmp
push
ret
ljmp
adc
in
fimull
push
push
jns
add
or
or
dec
stos
jle
adc
gs
stos
inc
sub
into
lret
fs
in
mov
inc
dec
arpl
scas
inc
push
add
mov
add
push
jo
ret
xchg
movsl
mov
mov
hlt
mov
test
testl
popa
push
push
stc
push
add
pop
ds
pop
test
push
addr16
inc
add
sar
cli
add
dec
mov
mov
icebp
aaa
bound
xlat
push
mov
mov
mull
add
icebp
loopne
jp
pop
mov
insb
iret
stos
out
pusha
or
scas
pop
popf
inc
push
xchg
xor
jmp
cli
pop
cmp
and
add
pop
push
fisttps
push
jge
int
lods
repz
loope
andb
pop
inc
pop
loopne
pop
fs
sbb
in
lea
pop
rolb
loopne
paddq
push
aam
movsb
scas
shrb
test
lahf
out
mov
addb
mov
or
cs
cmpsb
mov
mov
push
cs
shrb
xor
arpl
pop
loopne
dec
or
push
or
rcll
enter
js
sbb
dec
mov
aam
sti
sub
mov
xchg
ss
sarb
insb
cmp
rclb
jecxz
push
xorl
into
sub
or
je
leave
fstl
or
or
adcl
mov
in
jo
je
jg
sbb
mov
fcoml
push
aad
add
bsr
pop
adc
jmp
sbb
jbe
mov
add
and
sub
jae
sub
add
cwtl
daa
imulb
out
cmc
fxtract
xlat
jmp
xchg
inc
or
shl
dec
movsb
mov
sbb
pop
or
push
cltd
push
adc
push
icebp
sti
loopne
lods
add
sbb
add
pop
jno
mov
je
lahf
jg
xchg
jmp
add
addr16
mov
cmp
pop
mov
mov
sbb
repz
and
dec
ss
cmp
out
nop
xor
mov
stc
fistps
pop
xchg
mov
inc
add
fbld
xchg
iret
mov
lret
fwait
imul
and
and
pop
adc
ret
add
sub
movsl
pop
lret
mov
xor
stos
xor
pop
es
adc
ret
xchg
sub
mov
in
sub
sbb
and
mov
xchg
nop
mov
out
jecxz
jnp
xchg
shll
loopne
pushf
xchg
int3
push
mov
repnz
lret
push
mov
lds
fbstp
stos
jp
rclb
frstor
mov
add
fs
xchg
mov
adc
push
test
xchg
push
test
shrl
je
xchg
inc
ret
mov
stc
push
jo
pusha
fsubrp
or
mov
fsub
inc
push
lods
fstps
mov
inc
gs
scas
cmpsb
mov
out
inc
lea
popf
repnz
js
pop
adc
sub
adc
andl
and
sub
sbb
inc
lods
mov
mov
jns
sbb
das
sub
add
inc
sub
imul
in
sti
outsb
push
xor
idivb
dec
test
jno
test
xchg
sti
in
jle
mov
outsb
jb
pop
xor
js
xchg
orl
ficoml
iret
sub
stc
lods
fbstp
lods
fdivr
mov
xchg
push
test
jnp
mov
push
pop
fs
mov
scas
mov
xchg
js
sub
inc
add
cmc
inc
jmp
mov
dec
insb
push
xchg
mov
cmpsl
inc
sub
xlat
fisubs
stos
outsl
sub
fnsave
fistpl
aaa
cmp
scas
aam
mov
ja
cmc
jb
add
jne
sbb
sbb
imul
lock
cmp
shlb
inc
pusha
shl
incl
ljmp
ret
lcall
movsb
imul
repz
enter
repz
xor
add
add
inc
jnp
fwait
xorb
shrl
popa
sub
movsl
and
fimuls
xchg
dec
cmp
cltd
das
xchg
shll
jo
insl
mov
cmc
sub
jecxz
bound
movsl
xchg
mov
sbb
mov
xor
lods
jnp
inc
cli
lret
dec
mov
sbbl
ss
std
add
lret
lahf
arpl
pop
in
lods
ja
lock
push
int3
xor
mov
popa
inc
in
pusha
faddl
test
push
cld
shrl
adc
in
rcr
jecxz
rorb
cmp
dec
dec
repnz
sub
dec
les
push
jg
pop
add
mov
repz
fdivrs
lea
into
and
sbb
mov
push
inc
xchg
mov
shrb
ret
mov
int
fwait
sarb
sbb
inc
push
cmp
mov
push
je
pop
mov
outsl
jnp
repnz
lods
bound
lds
and
insl
mov
dec
mov
stos
stc
dec
roll
adc
adc
inc
jae
mov
aam
push
cmpsl
mov
scas
js
sub
shr
jle
negb
cltd
jl
xchg
push
xorb
or
dec
loopne
loop
add
cmp
jmp
in
sub
push
jb
pop
subl
mov
lds
adcl
adc
xchg
cmp
std
mov
xchg
pop
js
cmc
sub
push
jl
fnstenv
add
mov
pop
ret
or
inc
shll
cld
repz
xchg
mov
shlb
pop
movsl
cmp
pop
int3
shll
faddp
popf
inc
stos
frstor
cld
xlat
sub
xlat
shll
inc
mov
adc
fnsave
and
xchg
addr16
iret
inc
pop
xor
jle
mov
cld
and
dec
arpl
stos
pop
xchg
mov
cltd
imul
add
and
insb
inc
lea
dec
xchg
push
adc
test
inc
fmull
nop
adc
mov
inc
ret
or
inc
std
add
pusha
xchg
mov
and
mov
outsl
rol
aaa
fimuls
mov
dec
stos
xchg
jg
lret
inc
and
andb
or
jo
or
shrl
mov
call
push
les
mov
mov
xchg
adc
jmp
push
test
sahf
rcll
mov
xor
inc
mov
mov
cmpsb
mov
sarl
sub
jp
inc
out
mov
jnp
mov
call
xchg
out
adc
push
outsb
inc
daa
inc
or
in
not
lods
ficompl
fldl
sub
or
lret
jnp
test
insb
push
je
js
and
lds
addr16
jg
ret
loope
es
xchg
stos
sub
popf
or
loopne
xor
mov
call
mov
lahf
xor
xor
fdivrs
or
lods
mov
pop
lret
in
add
and
mov
jne
sbb
jae
notl
sbb
cmp
jge
sub
xor
sahf
sub
xchg
xchg
push
imul
stc
or
mov
mov
push
xor
mov
or
in
subl
add
xchg
dec
xchg
cs
dec
mov
xchg
movsb
sub
test
mov
dec
dec
xchg
push
push
rol
mov
jecxz
mov
push
cmp
inc
insb
aas
fsubs
hlt
cmp
cli
test
test
imul
jns
and
imul
lods
add
ds
daa
pop
push
push
in
inc
push
lret
and
xchg
mov
fidivrs
add
movsl
xchg
inc
mov
pop
inc
sarb
jae
setae
aam
jno
or
fisttpll
mov
imul
push
mov
cmp
or
hlt
or
pop
pop
enter
nop
hlt
dec
call
jnp
jnp,pt
pop
cmp
push
or
sahf
jae
ljmp
cmp
xchg
add
repnz
jns
sub
lret
aad
lock
movsb
jb
xchg
pop
jne
push
push
mov
push
sbb
shll
lret
mov
test
cld
mov
imul
mov
dec
dec
cli
fmull
or
inc
popf
bound
addb
lds
movsl
dec
fwait
ljmp
push
std
ds
lret
inc
mov
xor
push
inc
and
pop
sub
inc
xchg
iret
and
push
pmullw
xchg
shr
int3
lea
or
mov
popa
add
sarb
divb
rcr
bound
mov
loopne
pusha
into
mov
cmovle
lahf
dec
repnz
mov
je
popa
jno
mov
hlt
test
aam
outsl
mov
lock
push
cmpb
push
mov
ja
lcall
aam
test
jns
xchg
jmp
fisubl
ss
out
fsubl
mov
inc
test
idiv
jns
call
mov
bound
imull
sub
cli
cmpsl
cmpsb
sbb
dec
rcrl
push
and
xor
insl
ficoms
mov
xchg
and
jmp
outsb
scas
stos
scas
sbb
adc
not
push
cmp
jg
cmpsb
push
and
inc
fwait
movsl
iret
pop
and
pop
cltd
addl
mov
mov
or
adc
arpl
insl
bnd
dec
daa
outsb
and
pop
pop
inc
push
or
scas
ds
adc
cli
js
jmp
push
inc
or
mov
sub
mov
push
mov
and
popa
xorl
into
or
call
aam
les
loop
xor
mov
pop
inc
icebp
pop
inc
ljmp
adc
push
data16
test
add
jns
add
jg
jbe
mov
jne
mov
aaa
jp
push
lahf
push
inc
fwait
pop
bound
inc
mov
cmc
fists
je
scas
mov
test
int
std
bound
aaa
push
hlt
adc
mov
xchg
rcrb
mov
inc
imul
mov
scas
les
push
mov
hlt
leave
jo
or
inc
and
fdivs
shld
add
arpl
out
mov
lret
mov
xor
add
into
dec
pop
addr16
mov
smsw
mov
ja
cmp
das
push
lea
test
sbb
add
lea
mov
sahf
jae
jno
loope
pop
imul
sbb
push
adc
mov
add
aas
and
sti
push
sbb
rclb
js
sub
fiaddl
sub
mov
cmp
jl
fwait
jae
popf
dec
outsl
adc
adc
cmp
das
ret
scas
sbb
cmp
add
fisubl
cli
ret
lret
imul
jno
xchg
fdivrp
jp
push
cmp
pop
dec
stos
jae
dec
xchg
mov
iret
push
mov
xor
add
jae
cltd
push
cli
lods
out
shrl
mov
mov
jno
push
ret
dec
leave
sbb
push
mov
cli
dec
out
out
xchg
add
and
data16
fwait
rolb
jge
out
mov
arpl
add
xor
dec
movsb
nop
int3
pop
mov
jae
nop
cmp
pop
xchg
in
pop
sarb
aam
sub
push
aaa
mov
incb
ret
jno
cld
pop
push
pusha
ficoms
jns
fwait
fs
js,pn
cld
adcl
jnp
shr
out
das
cld
xchg
pusha
ss
mov
test
add
insb
rcrl
push
mov
lock
cmp
mov
fsubrl
sahf
and
xor
jmp
stos
xlat
xchg
or
call
mov
xor
decl
inc
hlt
ss
cwtl
push
test
stos
inc
mov
xorl
xor
xchg
sbb
xor
in
pop
sti
in
in
dec
call
xlat
xchg
fwait
subb
xor
lods
jg
in
mov
xor
mov
movsb
rorl
fwait
test
in
pusha
bnd
cli
sbb
lcall
mov
test
add
out
inc
insl
fstl
pop
dec
pop
mov
ret
in
xor
adc
loop
aam
dec
xor
cmpl
pop
jl
repz
repnz
mov
out
pop
shll
lahf
out
mov
pop
cmp
adc
stos
pop
in
push
xor
or
cmpsl
ficomps
data16
jg
sub
push
imull
jo
adc
cwtl
mov
pop
mov
dec
pop
jle,pt
inc
cli
jbe
cmp
sub
movl
pop
movsb
adc
pop
mov
daa
fildll
ficoml
adc
testb
fwait
fs
or
stc
fimuls
sbb
cmc
shlb
push
cli
clc
cwtl
and
inc
mov
imul
lea
data16
fdiv
mov
mov
stc
loope
inc
mov
push
push
dec
xlat
mov
mov
mov
adc
lahf
in
mov
and
out
mov
aas
cltd
mov
jo
xor
mov
adc
jmp
cld
push
add
mov
cltd
jp
pop
adc
mov
popa
push
pop
popa
pop
pop
push
test
shll
pop
lock
mov
mov
sub
loopne
push
and
lcall
pop
mov
xchg
pop
in
inc
xchg
fsubl
mov
outsl
jb
mov
hlt
mov
out
mov
enter
xchg
out
addr16
es
push
adc
lret
pop
adc
xor
pop
sti
ret
jmp
dec
loop
sub
dec
lods
or
mov
pop
js
fcmovu
inc
in
fcom
loope
mov
push
adc
cs
popf
cmpsl
movsl
mov
push
cmp
ret
lock
xorl
out
and
std
int
push
mov
xor
mov
mov
dec
pop
clc
and
sbb
lds
adc
aas
add
out
jg
stos
jno
mov
ja
jle
or
lahf
test
and
pop
movsl
std
shlb
push
nop
jb
push
inc
lods
lcall
push
xchg
aam
add
sahf
mov
jecxz
fs
dec
ret
pop
addr16
xchg
add
sti
mov
je
xor
mov
push
dec
outsl
push
shlb
stos
loope
adc
jnp
lods
repnz
adcl
push
loopne
out
into
xchg
popa
or
aad
push
and
popf
push
sbb
adc
nop
adc
inc
sub
or
arpl
mov
adc
mov
and
push
xor
inc
lds
int
xor
fidivrs
xchg
mov
jg
sahf
enter
lahf
aaa
mov
mov
mov
cld
cmp
mov
jl
and
sbb
test
sahf
movsl
in
pop
xchg
and
mov
jle
aas
movsb
je
int
std
mov
pop
jae
sub
popf
fwait
sti
xchg
notb
sqrtps
push
pop
push
nop
fldl
jae
sbbl
in
dec
sub
movsb
mov
or
pop
test
arpl
imul
popf
in
cwtl
and
mov
pusha
lahf
add
sbb
add
out
lret
jbe
xlat
shll
push
int
jecxz
fs
cmpsl
push
mov
out
notl
notl
pop
mov
sbbl
jno
into
add
inc
or
adc
dec
testl
push
aam
fmulp
jb
stc
mov
push
push
fs
dec
jl
loopne
push
pop
jbe
jno
xor
iret
call
out
sub
jb
dec
lods
mov
adc
lret
dec
jno
xlat
pushf
cmp
push
lret
sub
les
pop
pop
adc
cmp
lcall
in
xor
jecxz
xchg
or
mov
jecxz
mov
ja
in
xlat
ficoml
push
cmc
jmp
lcall
imul
add
xchg
and
jge
into
cmp
mov
mov
in
dec
outsb
cmp
ljmp
jae
push
push
jno
icebp
xor
mov
or
loop
inc
popf
jle
sub
mov
lret
inc
dec
adc
cmp
jecxz
clc
dec
out
xchg
or
fistl
cltd
cmp
inc
inc
sbb
dec
cmpsb
xchg
xchg
push
fsts
inc
jb
mov
mov
adc
sbb
pop
cmp
in
mov
adc
mov
jmp
mov
les
sarb
movsl
xchg
cltd
in
sub
loope
int
mov
imul
jno
int3
pop
gs
idivb
add
push
hlt
jae
popa
mov
push
fcomps
pop
pop
std
dec
leave
fisubrl
or
sub
xlat
bound
in
mov
es
test
sub
sub
inc
in
mov
adc
pop
jb
adc
movsb
pop
ret
andl
aad
popa
cmp
jp
adc
xor
pop
enter
and
sarb
scas
fsts
mov
in
das
xchg
cld
stc
scas
ja
pop
pop
push
in
cmc
loop
aaa
push
inc
jmp
push
js
add
test
lods
adc
push
roll
sbb
mov
or
loopne
push
aas
fimull
mov
scas
dec
dec
inc
into
mov
test
lock
inc
adc
aad
sub
mov
out
movsl
push
popa
movsb
dec
mov
add
add
nop
fwait
cmpsb
addr16
jle
cmp
dec
imul
mov
sbb
cld
fs
dec
ss
adc
rolb
addr16
stc
fistps
xchg
cmp
lret
pop
cmp
scas
fcomi
ds
addl
test
loope
in
clc
aaa
notl
lock
jo
adc
fstpt
jecxz
mov
sbb
enter
mov
out
dec
xor
fimuls
dec
dec
fdivr
add
jmp
pop
lods
movsl
loop
jl
push
xlat
mov
lahf
cmp
test
out
and
lds
call
dec
repz
shrb
fbld
dec
pushl
jle
jo
stos
setl
sbb
pop
shl
mov
daa
shlb
popa
xor
mov
xor
push
sub
dec
inc
gs
scas
add
mov
pop
lret
xchg
xchg
add
inc
sbb
rorl
int3
aam
into
adc
addb
shlb
cmp
cmpsl
cld
aam
in
hlt
decl
mov
push
lock
stc
stos
xor
repz
stos
stos
fildll
movsb
cltd
icebp
pop
push
stos
adc
fdivrp
in
pushf
shrl
cld
cmpsl
test
cmpsl
dec
mov
test
out
pushl
xor
loopne
push
and
pop
dec
xchg
lods
sahf
into
xor
adc
add
cld
push
test
inc
mov
pop
inc
aad
xor
lahf
icebp
mov
sahf
xchg
aas
jp
insb
mov
pop
dec
jns
ror
popa
stos
jp
lock
jge
ljmp
lret
xchg
shlb
mov
mov
jae
xchg
in
int3
mov
iret
subl
repnz
jnp
pop
pop
jl
xchg
pop
je
cmp
jnp
jnp
cmp
clc
hlt
pusha
icebp
pop
add
ja
push
sbb
ret
push
cmpsb
push
xchg
je
xchg
xor
jecxz
push
jb
pop
push
jle
jne
es
xchg
jbe,pn
adc
scas
pop
outsl
or
roll
shll
lret
aas
mov
xchg
jl
addl
in
jp
gs
in
dec
push
push
ljmp
add
jns
mov
es
dec
cmc
int3
adc
inc
push
mov
add
incl
loop
fstps
cmp
scas
pushf
jo
cltd
ficoms
or
repnz
test
bound
xor
jp
jl
clc
sbb
xchg
cmp
jecxz
sub
decb
ret
xor
outsl
inc
push
int
sbb
inc
mov
mov
push
adc
mov
or
sub
sub
dec
mov
xchg
mov
adc
cld
les
fcos
jg
adc
push
jp
push
sbb
test
cmp
add
mov
ss
mov
or
popa
jmp
nop
lds
popf
sub
out
jnp
pop
adc
enter
or
cmpsl
push
idivb
std
mov
js
xor
or
add
movsb
push
in
dec
cmp
dec
sti
mov
add
rcl
dec
fidivrl
pusha
ret
leave
push
pop
das
mov
addb
fdivs
lods
mov
push
pop
cmp
out
insl
xchg
les
scas
repz
insl
lock
fidivl
lret
out
aad
fcmovne
push
xchg
dec
icebp
xchg
fidivrl
addr16
cwtl
mov
mov
hlt
xor
popf
cmp
dec
dec
stos
sti
jns
out
xor
pushl
test
mov
leave
mov
xlat
daa
call
jl
out
jl
jg
push
lea
xchg
cmp
int
sub
sbb
jmp
add
cmp
sbb
pusha
pop
cwtl
mov
inc
mov
mov
sbb
sbb
sysexit
dec
jne
mov
add
pop
lods
mov
push
jmp
cld
rorl
shlb
lahf
nop
stos
mov
iret
xchg
test
scas
pop
in
mov
popa
pop
popf
daa
cwtl
sbb
add
je
push
hlt
jns
inc
in
in
movsl
add
in
fwait
test
push
sahf
addb
pop
dec
sub
lock
fmuls
jnp
lret
inc
xlat
fucomip
sub
icebp
dec
xlat
dec
frstor
dec
cld
add
mov
aas
xor
mov
push
or
insb
fs
pop
frstpm(287
stos
sbb
nop
xor
out
mov
mov
xchg
adc
lretw
pushw
jmp
iret
adc
xor
xchg
mov
pop
aas
add
ja
xor
data16
mov
cmpsl
mov
sbb
xchg
and
sub
push
mov
sub
jo
hlt
mov
dec
xchg
jmp
mov
and
adc
or
out
fwait
jl
les
sbb
and
test
test
push
pop
sub
sbb
dec
mov
leave
xchg
sub
outsl
scas
rcrl
adc
dec
movsb
js
iret
push
lods
inc
call
out
add
jp
lock
mov
test
es
fwait
mov
xchg
cmp
pop
std
aas
mov
ret
push
add
test
mov
push
outsb
pusha
or
test
cmp
add
test
stos
push
sub
mov
rcll
mov
and
mov
idiv
fldt
pop
sub
jae
inc
push
cmpsl
ja
mov
cli
push
fisubrs
lock
shr
psubd
or
xchg
dec
xchg
scas
mov
sub
xor
and
jnp
and
es
xchg
and
or
xorl
pop
cmpb
cltd
push
ss
xchg
fwait
enter
js
mov
punpcklbw
icebp
arpl
leave
push
loopne
test
pop
shlb
push
fs
cs
movsl
orb
pop
ds
call
out
popa
add
sub
out
pop
call
inc
repz
mov
scas
aad
out
call
in
push
jl
ljmp
sub
aaa
jnp
outsb
enter
or
mov
jo
mov
arpl
mov
test
add
inc
xchg
mov
pop
jp
pop
mov
pop
sub
mov
mov
outsb
inc
jmp
push
push
loope
add
mov
sahf
mov
in
and
cs
xchg
icebp
jnp
jbe
mov
jge
sbb
addr16
pop
push
cmp
filds
sub
pop
mov
jp
sub
fstps
popa
pop
mov
filds
mov
xor
ficoms
lret
test
scas
maskmovq
pop
fidivrs
sbb
cmpsb
sub
and
in
in
testl
cmpb
std
dec
call
sub
or
cmpsb
mov
leave
test
push
lret
rcr
fmuls
inc
mov
ret
mov
xor
pop
fdivp
stos
push
xchg
stos
cld
std
jnp
cwtl
sub
push
cmp
jae
pop
lret
aam
loope
inc
ss
jg
cmpsb
sub
pop
aas
cmp
push
sbb
xlat
inc
cmp
xor
adc
cmc
inc
xchg
aad
gs
push
dec
vrsqrtss
sbb
fadds
out
xor
jp
in
jmp
sbb
xor
ret
dec
lea
into
pusha
add
mov
mov
pusha
enter
hlt
dec
inc
ret
pop
xor
xor
xchg
rolb
fisubrl
sub
out
dec
gs
sbb
fwait
inc
mov
or
push
mov
and
cli
push
in
cmp
and
movsl
hlt
jle
int
fisttps
daa
jno
mull
test
movsl
dec
inc
add
push
push
popf
push
test
movsw
xorl
dec
adc
xchg
ret
popf
adc
add
call
scas
fsubl
cwtl
xor
movsl
mov
shl
mov
push
jmp
or
jbe
dec
mov
loope
ret
scas
xor
or
and
fisubrl
std
inc
inc
sub
aad
popf
lret
adc
jns
mov
mov
mov
push
ja
jl
jge
icebp
dec
jmp
pop
mov
hlt
or
and
stos
addb
and
lahf
pusha
decb
cmp
jae
inc
add
dec
lds
xor
fstpt
sub
cmp
or
jle
cmpb
xchg
in
and
dec
xchg
pop
scas
jl
fstps
xor
add
push
dec
ljmp
adc
sbb
sub
mov
aad
mov
xchg
rclb
mov
out
sti
fstl
lret
and
or
fdivrl
popa
jnp
dec
inc
flds
insl
add
aas
xchg
pop
add
cmp
jl
and
fs
xor
outsl
daa
inc
push
add
dec
mov
lock
mov
and
mov
jno
stos
orl
pop
inc
inc
jp
outsb
std
out
sbb
or
dec
cmp
movsl
ja
pop
cmp
or
jno
fwait
dec
pusha
adc
test
enter
into
and
jno
jo
push
xchg
out
ds
mov
in
adc
ror
add
adc
inc
lcall
push
sub
mov
jnp
sbb
pop
add
adc
movsb
mov
outsl
dec
das
mov
xor
add
jae
test
mov
out
jecxz
push
or
mov
cmpsb
cmp
ljmp
ret
push
loopne
add
xor
lcall
stos
das
mov
xor
mov
pop
inc
ret
dec
xchg
mov
jb
adc
mov
pop
adc
movsl
and
pushf
aam
add
sub
xchg
dec
mov
push
js
xor
mov
divb
push
sbbl
cmc
cmp
adcb
mov
enter
mov
les
fldcw
loope
mov
add
loopne
fstpt
mov
cli
mov
mov
sub
outsl
fwait
pusha
mov
addr16
imul
xchg
mov
mov
pop
push
daa
outsb
jle
addb
push
jo
leave
mov
pusha
mov
sbb
inc
xchg
cmpsb
jnp
mov
fmul
repz
pop
jnp
out
clc
pop
cmp
xchg
dec
stos
leave
inc
xchg
out
stc
sarl
jecxz
insl
jecxz
shlb
xor
aad
mov
mov
cmpsb
loopne
add
loope
inc
mov
sub
andl
sarb
add
mov
aas
fistpl
rolb
mov
inc
fstps
mov
pop
aam
push
and
mov
sbb
or
dec
lahf
mov
pop
shll
sub
mov
xchg
dec
pop
push
mov
xchg
adc
mov
dec
out
imul
shl
push
inc
inc
add
xor
mov
push
mov
lcall
add
inc
xchg
mov
cmc
jl
push
cmp
jno
inc
add
cld
xor
inc
xchg
and
and
sub
xor
fsubrs
testl
push
call
enter
adc
xchg
test
out
cmp
xchg
into
dec
pop
push
and
mov
cmp
xor
pusha
sub
in
and
mov
nop
or
jge
ljmp
fistps
in
insb
xchg
in
stos
mov
lret
dec
xchg
cli
repz
dec
inc
inc
int
ret
stc
ror
pop
stos
dec
sbb
ljmp
jp
stos
inc
xchg
lahf
js
or
mov
push
jle
flds
nop
maskmovq
cmp
or
push
pop
pop
popf
dec
aad
pop
dec
and
inc
adc
pop
adc
adc
pop
push
dec
fstl
push
ret
adc
jge
pop
in
dec
outsl
xor
xchg
fdivs
cli
rcrl
xorl
xchg
xchg
add
add
cld
rolb
nop
jno
es
sbb
insb
inc
mov
inc
xor
das
push
push
push
call
std
sub
stos
scas
push
lds
cmpsl
xchg
dec
ds
dec
int3
daa
inc
dec
pop
mov
pop
test
shlb
dec
xor
sbb
sub
push
jno
sbb
mov
cmc
cwtl
scas
pop
stc
in
aas
mov
xor
xor
sbb
pop
push
loope
mov
xor
lock
or
ljmp
test
cltd
pop
adc
sbb
insb
jnp
ret
mov
arpl
lods
add
mov
inc
loop
xor
int
sets
ss
mov
fimull
sub
xor
ret
push
mov
stc
dec
mov
inc
cmp
mov
adc
inc
cs
rclb
mov
repnz
popf
pop
pop
and
sbb
iret
and
dec
sbb
adc
mov
lret
stos
jbe
insl
push
dec
cli
das
loop
xchg
and
mov
xor
int3
mov
dec
add
inc
aas
inc
outsl
inc
xor
jne
or
pop
mov
push
js
mov
add
int3
pop
sub
mov
outsb
mov
ficoms
ret
dec
xor
xchg
mov
xorb
cld
pushf
inc
or
xor
lret
out
outsl
and
xor
imul
pop
loopne
pop
rcrb
pushf
add
pop
inc
cmc
sbb
add
test
jnp
cmp
popa
sub
and
arpl
inc
test
out
js
int3
adc
repnz
dec
jle
lret
loop
pop
add
loope
or
mov
push
cmpsb
dec
int3
test
icebp
pop
imulb
fidivrl
push
xchg
adc
cwtl
dec
shll
aaa
roll
test
ret
mov
mov
inc
pop
int3
dec
pusha
loopne
cmc
xor
pop
sbb
sarb
movsb
sbb
mov
clc
inc
sbb
int
inc
mov
sbb
divl
lcall
jmp
push
pop
mov
cmp
push
clc
fucomip
in
adc
repnz
sbb
mov
xchg
daa
jge
push
sahf
add
je
ljmp
pop
jbe
imulb
push
sahf
adc
push
dec
lods
pop
hlt
mov
xlat
mov
shll
lods
imull
pop
cmp
jnp
add
inc
dec
das
es
adc
hlt
icebp
scas
mov
mov
dec
test
pop
sub
lcall
push
bound
jnp
mov
add
push
cmp
sbb
jle
mov
push
mov
insb
and
ljmp
cmc
ror
movsl
pop
xor
test
jecxz
mov
rcrb
lret
dec
mov
ret
jno
mov
sub
adc
repz
sub
into
insl
inc
dec
loop
sbb
roll
outsl
pop
xor
xor
mov
ret
cmp
add
and
and
or
sbb
lcall
or
cmp
xor
cmp
xorl
mov
add
mov
dec
sbb
cld
inc
nop
in
arpl
ret
aaa
rcrb
shlb
dec
pop
es
push
into
dec
add
outsb
inc
jae
shl
out
inc
pop
and
pop
sbb
jl
fists
mov
xor
orl
and
mov
sbb
fisttpl
add
sbb
cs
or
adc
jnp
sub
push
cmp
outsl
dec
ret
adc
sub
out
mov
fcom
add
loope
jnp
enter
enter
push
loop
pusha
in
vmread
rcrb
mov
sub
dec
pop
xor
xchg
enter
stos
lea
into
lret
sub
test
xchg
aad
xchg
or
jb
cmp
mov
cmpsl
cld
fs
jns
divb
cmp
aad
xchg
repnz
pop
and
daa
nop
xchg
insb
les
xchg
int3
xor
pushf
add
lea
add
pop
mov
jns
push
push
push
scas
dec
and
jo
mov
push
pop
cmpsl
je
dec
test
fwait
sub
pop
fidivrs
lcall
pop
sahf
cltd
ficoms
lods
and
inc
sbb
mov
or
cltd
fs
clc
cmp
orb
xor
cmpl
cmp
rol
cmp
in
xlat
fs
gs
xchg
cmp
mov
fdivrp
and
arpl
inc
mov
add
into
pop
out
ljmp
sbb
cld
sub
fidivrl
ds
lods
adc
cmpsl
gs
roll
test
push
out
xchg
in
aas
rcrl
fstl
adc
sub
adc
and
push
mov
jg
in
js
push
xchg
push
cmc
repnz
xor
loop
jl
mov
jecxz
mov
cli
lock
lahf
and
pop
sbb
out
in
pusha
and
aad
inc
or
mov
data16
loope
jnp
or
cwtl
arpl
aam
dec
or
in
xchg
jmp
dec
push
or
daa
xor
sbb
ficoms
lds
addr16
xchg
leave
dec
cmpsb
test
xlat
enter
dec
and
xor
dec
inc
jp
aaa
jg
clc
lret
iret
xlat
cmp
mov
loopne
mov
or
push
and
inc
fadds
ror
push
imul
popa
mov
adc
cmp
dec
pop
xor
jne
and
sub
test
popf
xlat
cmp
mov
inc
cmpsl
dec
mov
fmulp
add
adcb
fmuls
sarb
inc
lret
dec
pop
sub
add
jl
mov
clc
mov
inc
lret
iret
pushf
lods
aad
xchg
test
nop
imul
add
pop
dec
daa
lret
adcl
in
popl
mov
pop
lret
sub
addr16
mov
cmp
cmp
leave
sarb
inc
mov
psubsb
sub
xchg
fidivrs
imul
inc
out
lds
lds
adc
add
sub
sbb
add
mov
pop
and
es
outsl
sbb
xchg
jle
into
or
iret
fistpll
imulb
sti
jg
mov
or
imul
inc
mov
pushf
das
out
mov
inc
shll
lahf
adc
sub
lods
mov
cwtl
cmc
fwait
out
repz
push
das
lret
dec
mov
iret
jnp
and
cwtl
lahf
aaa
xchg
ss
stos
pop
fdivrl
outsl
or
ljmp
adc
dec
ljmp
jle
and
and
push
faddl
mov
dec
data16
scas
fucom
sbb
out
mov
pop
rcr
xor
or
gs
mov
outsl
pop
das
pop
mov
mov
sub
jns
enter
ret
cmpsb
mov
xor
jge
movsb
push
pop
dec
ret
mov
and
push
jge
dec
arpl
imul
and
and
repz
filds
push
dec
imul
call
loopne
jge
mov
mov
inc
sub
and
jnp
or
dec
arpl
and
fcmovu
xchg
jg
je
out
scas
je
jo
push
fsubp
adc
xor
sbb
mov
scas
mov
popf
pop
sbb
test
roll
pop
mov
mov
adc
outsl
adc
sti
push
mov
movsl
test
insl
add
lea
scas
jmp
fimull
cmpsl
lock
add
fwait
cwtl
or
xchg
push
mov
mov
sub
pop
xchg
pop
adc
adc
mov
lods
mov
cmp
push
movsl
data16
jnp
or
adc
xchg
aam
sub
add
scas
pop
jb
cmp
push
incl
pop
es
dec
lea
push
adc
push
movsl
fcom
xorps
aaa
mov
cmc
or
jl
jns
testb
test
in
jbe
or
sbb
aad
pop
adc
movsl
ja
dec
dec
cld
or
xchg
cwtl
add
adc
cmc
jb
inc
adc
repnz
mov
jns
pop
jnp
movsl
cld
pop
lret
fucom
jl
pop
popa
ficomps
mov
sub
fsubs
cmc
int
mov
mov
loopne
cmp
add
pop
ja
aam
jbe
push
dec
out
sbb
repnz
ss
and
xor
dec
mov
outsb
das
jecxz
mov
push
inc
add
int
and
dec
repnz
push
ret
lcall
in
push
push
push
xchg
sub
outsb
icebp
nop
sti
ds
stc
repnz
jne
cmpl
pop
pop
bound
pop
mov
mov
push
mov
mov
add
add
inc
xchg
jb
push
lahf
outsb
jns
mov
add
pop
pop
pop
les
pop
rol
or
mov
lods
xchg
lods
push
addr16
test
mov
push
hlt
sbb
ret
pushf
xor
sti
ss
repz
cs
out
add
andb
daa
out
cmp
fiadds
inc
movsb
inc
lret
sub
jbe
repz
pop
push
faddl
mov
or
push
icebp
popa
imulb
pop
cli
inc
mov
mov
dec
mov
sub
mov
gs
lcall
fs
scas
sub
xor
in
int
xchg
movsl
push
jge
push
loop
dec
pushf
cs
xchg
pop
es
jmp
in
mov
mov
jbe
aas
lods
xlat
pop
int
imul
fsubs
push
jns
hlt
ret
push
cmp
pushf
test
mov
loop
inc
jb
rolb
pop
cld
cmc
mov
insl
and
add
fld
mov
sbb
scas
insl
rcll
fucomp
jns
mov
xlat
gs
leave
inc
dec
and
lret
push
cld
addr16
mov
cmp
call
je
jb
push
pop
lahf
pop
xor
jl
loope
test
stos
jge
out
pop
and
add
sub
rolb
aam
inc
mov
pop
dec
imul
and
decb
clc
pop
add
sub
inc
xorl
outsb
aad
mov
outsb
pushf
lods
push
popl
push
mov
xchg
dec
cmp
ret
cli
dec
inc
jg
cltd
movsb
mov
out
and
xlat
xchg
jnp
inc
jbe
xchg
int3
in
aas
xchg
lea
repnz
insl
add
inc
or
xor
aam
mov
movsb
xchg
cli
rclb
nop
inc
jl
clc
mov
mov
push
cmpsb
movsl
xchg
fsubrl
addl
and
sbb
pop
jl
jge
push
adc
push
lahf
mov
cmp
loope
mov
call
les
mov
push
stos
in
sbb
add
xor
outsb
push
push
mov
or
call
aam
pop
dec
out
mov
sub
pop
push
inc
mov
mov
popf
sub
dec
and
inc
repnz
sub
aad
xor
mulb
push
sti
xor
mul
jl
cmp
push
pop
gs
xchg
add
aam
cli
loopne
mov
mov
lret
neg
mov
mov
lock
adc
lcall
subb
cmp
ja
ror
mov
jb
jle
xchg
fisubl
aam
sub
orl
push
aam
mov
repz
aas
jle
sub
fsubl
std
mov
in
sbb
aam
mov
cwtl
push
popa
or
pop
adc
les
fmul
jno
jp
or
push
mov
enter
les
sub
sbb
ss
imul
jnp
jp
insl
mov
ret
xchg
add
mov
js
xlat
push
sub
in
into
aam
into
cltd
xor
stos
popa
xchg
outsb
int3
fldenv
dec
ret
mov
adc
xor
sub
pop
jle
xor
lahf
clc
aaa
lahf
xor
and
sti
dec
div
cmpsb
rolb
xlat
and
or
lods
xchg
sub
sub
stc
jne
clc
inc
test
jl
pop
push
setnp
fwait
scas
sub
mov
dec
cld
pop
xchg
std
insl
sub
add
shlb
push
outsl
push
or
push
lods
pop
iret
mov
cwtl
stc
shll
popf
movsb
stc
and
xor
in
sub
ja
fistpll
aas
pop
ret
cmc
pop
mov
adc
mov
int3
loop
das
in
pop
pushf
mov
dec
outsb
popf
in
xor
sub
mov
outsb
das
adc
lahf
pop
xchg
mov
mov
mov
insb
jp
mov
dec
gs
ljmp
cmpsb
icebp
and
gs
dec
xchg
repnz
popf
inc
hlt
or
rcr
sub
add
ficompl
dec
and
mov
mov
pop
xchg
and
in
lcall
es
dec
sub
rcrl
and
into
sbb
in
fistps
sbb
inc
aas
insb
dec
pusha
leave
jno
sub
jp
test
arpl
mov
sbb
cmp
movsl
outsb
hlt
rolb
fs
push
mov
ja
cs
or
stos
mov
jns
pop
push
leave
adc
call
or
cltd
and
mov
scas
push
fwait
or
add
push
xchg
pusha
stos
ret
and
vmread
dec
fsts
test
movsl
loope
add
mov
fldl
les
inc
jns
and
fwait
sarl
cmp
jns
push
test
into
cmp
lea
and
adcl
push
mov
adc
push
pop
and
push
xor
add
movsl
mov
repnz
dec
movsb
loopne
in
iret
fcmovbe
inc
lods
stos
movsl
jmp
and
xor
icebp
dec
scas
std
and
test
pop
mov
xor
in
out
mov
push
push
push
adc
and
fimull
adc
test
mov
test
in
testl
sbb
cs
dec
push
iret
jbe
or
jae
cld
jp
inc
cmp
idivl
popf
sub
mov
and
cmp
push
mov
dec
xchg
scas
rol
les
and
movsl
mov
pop
jmp
sahf
js
pop
test
jge
sub
dec
sbb
xchg
in
fcmovu
ljmp
shll
adc
cmpsl
xor
fwait
and
jl
shrb
fs
dec
push
adc
adc
or
out
mov
js
mov
dec
pop
sub
mov
jp
negb
popa
jo
xchg
cs
aaa
push
mov
fsub
loop
outsb
fisubs
cmpsb
add
xchg
or
movsb
xchg
mov
dec
mov
push
nop
nop
test
sub
in
push
push
cmp
int3
or
or
rcrb
fpatan
leave
daa
or
hlt
lret
scas
push
add
lret
aaa
cltd
outsl
testl
lods
movsb
call
dec
xor
lret
fisubrl
orb
cmp
pop
rorl
xchg
rcr
std
adc
jnp
cmpsb
imul
enter
jno
or
cmp
rclb
cmc
push
pop
test
popa
rorl
lret
mov
cmp
xchg
and
jl
mov
push
cmp
jb
lods
pop
jbe
cmp
movsl
loope
push
pop
sbb
add
bswap
sub
stos
mov
icebp
push
or
push
cltd
mov
mov
inc
mov
jg
mov
fldcw
mov
xchg
insb
in
pop
cld
mov
out
cwtl
push
insl
xchg
loop
pop
lret
imul
jecxz
cmp
ret
bound
test
push
repz
add
push
scas
mov
push
mull
mov
cmp
pop
js
mov
cltd
push
das
sbb
xchg
out
push
and
ret
mov
in
fistpll
sbb
cmp
test
lods
mov
jns
jle
sahf
mov
mov
mov
int3
movsb
dec
cmpps
loope
lea
or
adc
dec
cmp
mov
out
movsb
xchg
fistpll
out
jb
sbb
nop
test
inc
sub
cmpsl
stos
loop
pop
adc
call
test
cmp
aad
repnz
loopne
ffree
sub
shlb
int3
pusha
lods
jp
dec
ret
fstl
js
sbb
ja
leave
jbe
ret
push
sbb
sub
push
mov
dec
jle
cmpsb
xchg
aam
and
mov
mov
jb
cmp
into
sbb
pop
sub
lret
mov
sbb
ss
imul
and
aas
inc
enter
pop
and
dec
mov
xchg
adc
sbb
cwtl
lods
mov
ja
je
cli
cmovge
or
adc
cld
jnp
addb
sub
jle
sub
leave
icebp
jb
iret
mov
loope
dec
loop
xchg
and
and
push
loope
mov
dec
mov
in
fisubrs
push
sub
fidivl
and
jmp
adc
and
mov
cmpsb
dec
dec
test
jnp
xchg
push
push
cld
pusha
out
int3
ret
out
jae
lods
adc
ret
icebp
ds
icebp
mov
sub
adc
fldcw
pop
add
mov
xchg
cmp
js
and
lahf
in
mov
or
sbb
sub
xor
not
dec
inc
and
sbb
mov
push
int3
pop
mov
loopne
xchg
insb
jne
pop
adc
jl
cmp
cs
dec
sbbl
or
inc
cmp
or
or
stos
push
fwait
sarb
mov
aad
pusha
xchg
ds
test
jns
rcrl
clc
adc
hlt
fistl
xlat
sub
dec
das
pop
rclb
jae
enter
jecxz
lock
lcall
repz
jno
dec
ja
add
push
sub
pop
xor
jg
push
xchg
xchg
shll
and
stc
push
pop
pusha
or
or
cmpsl
adc
cs
mov
mov
fdiv
iret
ljmp
cmp
idiv
push
pop
loop
push
outsl
shrl
test
mov
cltd
adc
fdivr
sbb
dec
add
in
and
fildll
pusha
loopne
in
pop
lahf
dec
sbb
xchg
adc
loopne
push
mov
pop
sub
dec
jb
and
test
adc
mov
call
fsubrl
push
jge
mov
popf
mov
sbb
cwtl
mov
xchg
enter
pcmpeqd
shll
jns
enter
xchg
ja
testl
stc
mov
pop
in
adc
adc
jg
pop
lcall
xchg
in
fwait
shrl
xor
push
dec
jo
pop
dec
and
pop
ja
add
adc
xor
lcall
xor
adc
jae
popf
cmp
mov
fstps
mov
ss
push
ds
pop
or
jl
pusha
push
push
sub
popf
sahf
cld
dec
fwait
xchg
popa
out
icebp
adc
out
loope
enter
das
jp
mov
pop
or
stc
aaa
mov
flds
xchg
adcb
insl
inc
clc
push
sbb
imulb
push
imul
and
or
mov
dec
int
xorl
stc
jle
fcompl
dec
subb
sub
loopne
pop
insl
mov
push
xchg
into
sub
mov
in
or
hlt
jne
cmpsb
dec
xchg
ja
cmp
es
cmp
imul
je
idivb
add
ja
test
fwait
mov
popf
jno
fstpl
mov
pop
inc
aaa
xchg
bound
cld
push
dec
pushf
insb
shlb
fidivrl
pusha
push
int
adc
test
out
test
push
sub
xor
loopne
andl
arpl
mov
addr16
stos
fcomip
nop
pop
ja
xchg
push
xchg
out
adc
pop
outsl
fs
dec
xchg
and
int
stos
fcomps
ss
push
fstpt
popa
into
aas
mov
cmp
xchg
pop
push
pop
pop
cmp
sbb
xchg
mov
xor
cmpsl
negl
mov
arpl
mov
pop
sub
out
mov
je
cltd
popf
int
xchg
lea
mov
dec
jmp
cmp
push
jecxz
sbb
push
std
jae
push
in
mov
cmp
gs
insl
test
push
adc
bound
pop
xchg
jnp
leave
cli
add
arpl
push
rorb
inc
popa
int
add
inc
jnp
xchg
mov
loope
pop
outsl
mov
mov
sti
xor
adc
outsl
mov
jmp
cmp
loop
xor
icebp
lret
add
xor
orl
pop
js
add
and
jg
jecxz
stos
mov
test
sub
adc
lret
adc
jno
fcompl
adc
in
mov
in
scas
adc
sti
pusha
adc
cmc
inc
sbb
push
and
push
je
adc
add
fisubrl
sub
mov
cmp
dec
rcrl
dec
out
sub
sbb
and
jo
push
sbb
arpl
and
dec
out
mov
daa
daa
jb
adc
push
or
in
or
dec
ljmp
nop
iret
fdivl
xchg
push
aas
in
pop
jmp
inc
push
xchg
add
jns
out
mov
rorb
xor
xor
sub
xor
iret
je
dec
sbb
loope
mov
lahf
scas
data16
rcll
add
pop
and
fwait
aam
fnstcw
adcb
push
adc
mov
packssdw
add
outsb
adc
pop
mov
cs
cmc
fistps
gs
repnz
push
repz
lods
dec
clc
aam
add
mov
and
adc
push
sub
push
and
lea
push
icebp
and
cmp
js
sub
push
insb
xor
aaa
jecxz
and
inc
sbb
push
inc
aas
popf
dec
pop
sub
repnz
scas
cmc
dec
mov
adc
and
ja
out
test
sub
test
xchg
leave
fnstenv
push
push
insl
lods
aaa
loop
scas
adc
pop
loopne
mov
cmp
inc
fdivl
hlt
xor
fsubrp
test
js
mov
push
xor
pop
push
call
inc
xchg
adc
ss
popa
and
pop
cs
mov
out
out
cmp
pop
lea
push
xchg
adc
jnp
push
push
dec
mov
repz
cli
mull
jae
cmp
xchg
sub
or
xor
cmc
ljmp
pop
aad
add
movsb
inc
xchg
in
cmp
adc
dec
adcl
cld
adc
rcrl
out
adc
adc
gs
push
pop
fadds
sbb
dec
dec
push
subb
mov
xlat
addb
scas
inc
rcll
mov
adc
mov
pop
test
js
lods
push
and
mov
shr
mov
adc
pusha
mov
inc
pop
and
mov
sub
cmp
pop
and
cli
lock
pop
push
cs
push
xchg
and
aad
jae
lock
ficompl
mov
daa
push
lods
and
ds
inc
out
outsb
cmp
xchg
bound
scas
stos
inc
testb
test
aam
mov
hlt
cli
adc
cmp
mov
lods
xchg
aas
pop
push
aam
repnz
test
xor
or
jl
mov
adc
orl
or
xor
pop
inc
add
in
cld
add
test
pop
mov
fistl
jge
stos
icebp
push
or
push
pop
and
cmp
andl
lock
or
dec
loop
pop
aam
mov
fsubl
emms
fisubs
add
mov
cmp
in
ss
call
sbb
inc
stos
dec
negb
add
cmp
cwtl
jae
scas
ret
into
cmc
fiaddl
aas
sub
pop
mov
mov
hlt
xor
inc
xchg
pop
lret
clc
xchg
es
dec
aas
push
add
data16
or
jge
out
inc
sub
sub
push
cli
dec
push
cltd
movb
stos
stos
jns
mov
sbb
cmp
lods
jno
in
pop
lahf
jp
xchg
or
pop
jg
sub
dec
into
push
xchg
sbb
loop
frndint
cmp
add
fs
mov
in
js
inc
lcall
imul
sbb
xor
push
jge
loope
sbb
and
in
sub
adc
push
scas
add
in
sbb
xor
movsb
add
add
dec
aam
faddl
pushf
xchg
add
in
cli
cs
adc
lahf
jno
test
pushf
rorl
mov
mov
jbe
sub
dec
fisubs
in
cmc
loop
push
kmovw
out
push
mov
pop
scas
add
nop
cld
mov
pop
int
cmp
push
xor
mov
push
scas
push
or
outsl
test
add
std
sbb
imul
inc
hlt
fwait
mov
pop
shrl
sub
and
les
or
xchg
inc
mov
jae
add
sbb
fldenv
iret
pop
push
hlt
pop
xor
xchg
mov
xlat
push
pop
nop
mov
mov
mov
into
or
push
or
push
adc
push
mov
push
mov
and
in
add
pop
stos
jge
jle
pop
push
lret
add
hlt
mov
and
addr16
mov
jge
iret
out
adc
divb
push
arpl
mov
sbb
jecxz
inc
dec
out
insb
test
jb
arpl
sbb
mov
daa
push
sub
addr16
xor
or
jmp
xor
cld
or
in
push
shl
and
lds
adc
into
sbb
jb
lods
add
and
orl
pop
scas
sub
lahf
call
or
jmp
sbb
ja
lods
stos
fmulp
sahf
ljmp
mov
cmp
cltd
cmpsb
out
dec
pop
lods
push
add
sbb
or
xchg
cmp
lahf
outsb
pop
jge
sbb
sub
std
pop
out
dec
test
stos
lea
dec
addr16
cmpsl
test
cmc
mov
stos
mov
loope
clc
mov
fcoms
cmc
shl
popf
pop
js
jno
in
out
movsb
icebp
movsl
adc
or
push
int
xchg
lds
daa
cs
addr16
cmp
in
inc
rolb
mov
lcall
sub
fstpl
mov
cmp
pop
fsts
mov
push
out
rorb
into
data16
push
cmc
roll
push
insl
into
int3
cmpsb
popf
mov
movsl
xorps
call
push
repz
sub
xchg
sarb
dec
mov
push
movsb
xor
sti
rcrl
mov
subl
xor
cmc
and
cmp
push
xchg
std
inc
dec
stos
gs
sahf
cs
mov
fcomps
ja
mov
dec
mov
in
cmp
scas
xor
sbb
jmp
lret
test
push
jb
hlt
add
pop
scas
pusha
inc
jb
nop
xor
xor
or
call
jae
push
loop
mov
push
shll
scas
stos
fdivp
adc
sub
mov
xchg
sti
push
mov
fidivs
mov
pop
lret
test
ds
add
mov
sbb
js
pop
push
push
orb
cmp
inc
fs
jae
xor
aad
lret
lahf
in
cmpsb
pop
ffreep
mov
push
jp
imul
ss
adc
test
mov
aad
lods
rcr
sbb
das
faddl
add
xor
stc
inc
fs
out
data16
dec
nop
dec
jbe
mov
inc
mov
testl
fcomps
shlb
xchg
add
leave
xchg
lods
daa
movsl
andl
shlb
and
divl
repnz
repz
jmp
push
and
hlt
cmp
jno
gs
xor
sbbb
out
pop
gs
mov
in
stc
xor
xchg
dec
lods
push
ja
jbe
cld
push
out
cmp
dec
sarl
mov
xor
or
lea
mov
jmp
es
pop
daa
scas
les
in
mov
cwtl
or
push
adc
stos
dec
dec
dec
adc
sti
or
mov
inc
mov
jp
cltd
jb
flds
mulb
sbb
mov
outsl
pop
xchg
loopne
mov
pusha
push
fimuls
sbb
mov
xor
dec
xchg
rol
aam
iret
aam
subb
xor
insl
lods
mov
je
inc
fstl
xor
jns
mov
cltd
stos
bound
mov
jmp
inc
repz
sbb
or
push
fsubrl
inc
js
lods
bound
xchg
lods
dec
icebp
sbb
jp
out
fdivr
into
jecxz
push
xchg
in
xor
inc
or
and
stos
js
mov
mov
imul
aas
sub
sbb
mov
pop
nop
shrl
je
mov
mov
insl
xchg
shrl
in
mov
pop
scas
imul
mov
sub
or
jp
ds
int
or
scas
test
push
movsb
and
dec
std
loop
cmpl
gs
cld
pop
sub
jp
cmp
add
jmp
pop
insb
jns
inc
xchg
xchg
dec
or
test
mov
xor
pop
dec
cmpsl
std
or
mov
or
andb
push
sbb
mov
mov
jp
mov
dec
mov
mov
fldt
xchg
mov
divb
mov
push
rcl
jb
mov
lods
pop
outsb
mov
cs
fwait
mov
mov
pop
daa
mov
cld
lahf
cmp
jnp
or
cmpsl
jge
inc
pop
push
jnp
dec
jecxz
fidivl
xlat
jmp
aam
dec
je
mov
mov
fnstsw
sub
ret
jg
mov
mov
jge
pop
pop
push
bound
or
imul
pushf
dec
inc
and
push
push
in
and
clc
dec
jns
int
xchg
in
aad
add
cmpb
fcmovnb
cwtl
outsb
xchg
adc
rcrb
and
lret
mov
jo
cmp
sbb
cmpl
adc
inc
aam
lret
icebp
jo
jle
stos
lahf
js
jo
add
outsl
add
fs
dec
jge
xchg
ss
out
or
push
int3
cmp
sbb
fmul
out
mov
add
jnp
adc
adc
cmp
cmp
mov
mov
xchg
fstps
sbb
vmovsd
mov
lret
fisubrs
test
or
lcall
mov
pop
repnz
adc
shrl
pop
push
push
xchg
add
or
into
or
push
xchg
loope
inc
sarb
mov
mov
loopne
mov
mov
cmp
sub
out
lods
add
xor
mov
aas
adc
mov
test
fsubrs
inc
and
jno
lods
jp
sbb
das
mov
jae
lea
sbb
fs
or
pop
xor
sahf
and
push
out
mov
add
dec
add
roll
lods
sub
xlat
dec
iret
idiv
mov
mov
and
xor
or
out
mov
test
jmp
mov
insl
out
jmp
mov
leave
shl
fwait
dec
cmp
xchg
jge
fsubrl
lods
shrl
dec
xchg
cmpsb
push
cmp
jmp
cmp
mov
or
in
gs
xor
les
xchg
fdivl
icebp
out
je
cmc
dec
cld
add
out
fisttpll
xchg
insb
rolb
sub
push
das
out
cmp
cs
cmp
inc
loopne
inc
xor
sub
ja
jmp
cmpb
imull
aam
inc
or
ret
and
push
ja
mov
imul
pop
pop
ficoml
add
arpl
mov
movsb
ljmp
jp
cmpsl
jnp
and
outsl
out
aas
popf
push
sub
add
mov
sub
out
icebp
add
push
outsb
hlt
sbb
jecxz
push
cmc
mov
outsl
fpatan
mull
into
rcrl
xchg
or
jmp
and
jns
xor
enter
negl
aad
xor
out
inc
outsb
mov
shlb
stos
push
cwtl
mov
or
fsubrl
fimull
add
into
fdivs
sarb
ds
ds
push
in
add
mov
mov
push
iret
in
xor
popf
xchg
mov
mov
lds
cmp
bound
scas
xchg
repz
add
mov
stos
xor
mov
mov
rorl
pop
jne
and
mov
es
and
cmpsb
cmp
push
std
dec
flds
xchg
jecxz
pop
sbb
mov
adc
lods
sar
cmc
dec
add
imul
xchg
jbe
inc
adc
aad
scas
gs
push
scas
dec
mov
iret
push
movsb
movsb
repz
sub
mov
pop
jle
rcrl
push
jg
and
push
or
or
sbb
subl
cmp
imul
mov
push
loope
pop
or
dec
push
cmp
ret
into
test
and
out
sub
xor
out
dec
and
enter
cmp
sbbb
pop
mov
jge
mov
xchg
inc
cmpl
add
adc
xor
bound
aam
and
inc
jmp
mov
icebp
loop
xchg
or
fisttps
out
and
mov
loopne,pn
jae
int3
adc
sbb
imul
push
and
jae
rorl
in
fcmovnu
fs
sbb
movsb
mov
cld
jecxz
add
loopne
sbb
movsb
xchg
and
imul
fsubl
push
fistl
lret
sbb
xchg
mov
mov
aas
out
cmp
subb
xor
lea
aaa
and
popa
lea
mov
dec
adc
mov
int3
mov
into
xchg
inc
loope
inc
scas
lds
cmpsl
cmp
pop
and
sahf
mov
inc
push
push
xor
and
and
mov
test
jg
dec
dec
and
test
jecxz
fdivs
icebp
sub
sbb
add
dec
gs
or
sbb
rol
adc
dec
or
mov
pop
lea
jg
sub
iret
in
push
les
adc
repnz
sub
jp
sub
adc
pop
push
jg
shll
rsqrtps
int
ror
xor
pop
sub
sub
push
jp
movsl
scas
push
or
lock
mull
aam
mov
movsl
daa
testl
or
push
jl
test
xchg
jle
push
xchg
enter
fdivl
nop
cmp
pop
push
mov
add
in
scas
xchg
mov
vpand
mov
in
inc
popf
cmc
sbb
iret
dec
rcl
outsl
adc
das
pusha
mov
or
mul
pushl
inc
push
push
mov
in
out
ds
test
mov
clc
and
je
std
test
test
dec
jecxz
in
shll
fprem1
dec
iret
or
push
mov
dec
xchg
arpl
scas
daa
hlt
sbb
cwtl
imul
mov
aaa
xor
jge
les
dec
imul
mov
mov
int
shlb
xchg
push
int
mov
fnstsw
xlat
sub
jo
comiss
mov
clc
nop
add
sbb
popa
xlat
test
or
jae
aas
xchg
pop
push
loopne
push
adc
and
in
mov
movsl
clc
dec
ficomps
in
mov
jp
adc
scas
loopne
pop
lcall
fstpt
adc
or
fbld
gs
nop
add
sbb
inc
cmpsl
mov
outsb
add
decl
xchg
xchg
lods
xor
shl
cmp
jmp
mov
xchg
cmp
mov
xchg
in
arpl
sbb
jecxz
inc
pop
mov
mov
insl
push
cltd
repnz
mov
repnz
scas
xor
jnp
mov
jb
ljmp
repz
arpl
rorb
adc
in
in
adc
sub
shrl
fs
xchg
dec
out
add
movsl
mov
out
sub
mov
xchg
bound
loope
out
pop
cmpsb
sbb
int
mov
repnz
mov
shl
in
in
dec
cld
mov
fstpt
mov
addl
fistpl
jecxz
dec
inc
nop
lock
and
or
in
fwait
arpl
pop
lret
mov
mov
sbb
cmp
js
mov
hlt
inc
hlt
add
xchg
out
dec
and
mov
lods
mov
inc
dec
loopne
int3
fcompl
mov
imul
inc
or
jno
jle
out
sarb
nop
fdivp
add
sbb
push
pop
in
push
inc
in
repz
pop
movsl
push
adc
mov
add
test
icebp
sbb
lea
das
mov
mov
lock
inc
test
std
sbb
dec
out
lret
cli
push
pusha
xor
xchg
mov
cmpsb
lret
or
std
lcall
pop
stos
bound
or
adc
lods
addr16
call
test
pop
push
or
sbb
mov
mov
aaa
push
pop
cmc
data16
pop
adc
jge
lods
mov
cmp
in
scas
ret
mov
fdivl
out
int3
scas
test
test
and
push
jne
icebp
add
cs
addr16
and
roll
mov
out
insl
dec
jge
stos
adcb
cmp
jne
push
pusha
fld
add
jg
adc
mov
sub
adc
roll
lds
dec
add
or
dec
insl
or
adc
cs
adc
sub
mov
shl
sub
frstor
pushf
jnp
mov
je
testl
jmp
gs
pop
enter
andl
xchg
adc
aam
fyl2xp1
push
jmp
aaa
inc
or
shl
pop
jbe,pn
inc
pop
adc
shrb
ds
cwtl
divb
push
cmp
jbe
fidivrl
in
xlat
push
add
mov
xor
push
cli
xor
daa
imul
arpl
mov
push
nop
adc
lea
testb
in
mov
push
loope
mov
aas
push
xor
push
aas
xchg
dec
hlt
lcall
push
cltd
out
iret
cmp
xchg
clc
cmp
into
adc
push
xchg
clc
test
xor
xor
les
iret
jae
sbbb
xor
xor
mov
mov
adc
add
cld
mov
mov
int3
out
push
addr16
pop
mov
xchg
movsl
repz
adc
pop
jae
mov
sti
xor
repnz
cmp
xchg
scas
mov
pop
sbb
sub
push
icebp
loope
imulb
pop
and
and
es
pop
sbb
mov
pop
mull
idiv
inc
gs
dec
or
in
repz
jmp
push
into
test
leave
and
and
jb
ss
cmc
jp
shll
movsl
repnz
pop
popa
fmuls
les
mov
outsb
mov
repnz
push
sbb
xor
movsb
adc
loope
mov
xchg
insb
lahf
xchg
push
cltd
data16
jno
xor
jb
inc
xchg
data16
mov
shrl
jbe
cmc
scas
mov
sbb
lods
js
flds
call
out
jp
xor
sub
pop
inc
loope
leave
data16
xchg
sbb
aaa
ds
ret
bound
mov
mov
jmp
and
fnstenv
sahf
cmpsl
lret
je
into
enter
cld
fmull
sbb
xchg
int
xchg
push
mov
das
fisubl
jmp
mov
das
int
mov
or
lods
inc
cmp
clc
add
lds
and
or
addr16
cld
insb
mov
mov
iret
dec
or
enter
ljmp
icebp
or
mov
movsl
sbb
outsb
test
lds
icebp
jg
mov
std
fsts
loop
fs
inc
mov
imul
enter
inc
dec
jecxz
inc
or
jnp
call
loop
fiaddl
xor
lret
inc
add
std
movsb
in
cld
fistpll
mov
hlt
jp
xchg
fnstsw
mov
shll
jmp
sub
jl
bound
gs
push
push
scas
pop
movl
ja
fbld
pushf
and
and
pop
xchg
cmc
subl
cmp
add
rcl
out
adc
stos
sbb
lods
popa
iret
aad
imul
ret
lret
icebp
aas
testl
dec
pushf
mov
movsb
sbb
lock
jle
imul
bswap
mov
outsl
sti
mov
insb
cmp
push
out
stos
or
dec
call
jbe
jnp
cmpsl
daa
pop
mov
mov
adc
mov
leave
jl
xchg
fcomps
xor
sahf
pop
xchg
mov
adc
xor
and
sub
inc
lret
cli
cld
pop
or
xor
std
mov
xchg
adc
mov
sub
fs
cmp
push
mov
lahf
or
fistl
push
xor
mov
jns
xorl
xor
cmp
fcompl
mov
es
mov
pushf
in
mov
mov
mov
xchg
int3
scas
test
shl
scas
pop
mov
and
mov
push
les
in
push
cmp
push
enter
xchg
inc
mov
push
into
xchg
lock
sbb
push
add
adc
dec
mov
int
cmp
push
ljmp
dec
xchg
dec
inc
aam
mov
cmpsb
loope,pn
stos
test
lret
push
add
fsubr
aas
jecxz
cmp
ret
test
jo
mov
mov
in
xchg
sbb
mov
lahf
add
sbb
and
or
and
jns
shrb
adc
call
in
sbb
jo
fld
fstps
xor
popl
int
cmp
mov
inc
jl
jmp
pusha
mov
cmp
push
gs
stos
hlt
push
xchg
and
rolb
mov
imul
sbbl
in
ds
pop
inc
movsl
mov
mov
insb
sbb
jne
xchg
fists
movsb
lcall
incl
fs
icebp
mov
mov
ss
mov
mov
pop
xor
pop
cmp
imul
push
sub
cmp
sbb
pop
push
aad
ret
test
in
nop
inc
outsl
inc
push
and
cmp
add
out
pushl
cmpsl
lret
in
add
and
rolb
mov
sbb
adc
in
jmp
arpl
mov
lea
pop
mov
cmp
cmpsl
push
cwtl
les
cld
mov
or
dec
jno
dec
pushf
xor
cwtl
cmp
daa
cmp
fistpll
test
adcl
dec
or
test
adc
mov
cwtl
test
pop
cmc
xor
or
cmp
pop
sbb
movups
gs
jg
push
mov
icebp
ds
scas
sub
popa
or
jmp
dec
xor
pop
adc
sahf
and
mov
xchg
cwtl
or
inc
inc
adc
fs
test
fs
pop
into
imul
jo
insb
int3
lret
push
cmp
ficompl
jne
and
mov
jo
push
outsl
lahf
inc
es
test
roll
add
notl
cli
and
cmp
mov
shll
out
mov
lods
inc
rorl
and
mov
inc
cmpsl
rolb
or
and
int3
dec
mov
insb
push
mov
std
add
mov
mov
movsl
or
shlb
mov
mov
adc
test
inc
add
mov
fldln2
mov
add
inc
ret
or
sbb
pop
xchg
push
cltd
aad
leave
cmp
inc
movsb
mov
hlt
lds
mov
popa
insl
and
xor
clc
sarl
jne
js
xchg
cmp
pusha
pop
imul
mov
dec
adc
aad
fsub
xor
pop
mov
mov
in
inc
pop
and
xor
adc
adc
cmp
ss
jge
mov
test
pop
jge
lret
loopne
push
loop
xorb
mov
dec
je
push
leave
mov
cwtl
mov
and
dec
test
mov
or
lahf
ret
mov
xor
fildll
stc
or
cltd
jns
rol
cltd
outsb
ds
leave
rolb
cmp
xlat
sbb
adc
mov
arpl
xchg
incl
and
into
cs
push
fwait
xchg
and
cmpsl
mov
push
arpl
jns
fcmovb
test
mov
cli
cld
mov
pop
jae
test
das
fwait
dec
push
into
jg
aam
aaa
fadds
lock
cmpsb
pop
or
sub
inc
mov
fdivs
aam
gs
or
nop
int3
jg
mov
mov
movsl
xor
ss
ss
and
pop
xor
lret
fldt
jo
ds
subl
mov
pop
loope
cwtl
cld
movsb
je
aam
repz
inc
out
mov
dec
xchg
pop
sub
jmp
mov
hlt
dec
push
jne
xor
push
sbb
add
cmp
dec
or
andb
fisubl
sub
addr16
dec
sbbb
pushf
sub
cmc
fwait
push
push
je
sbb
dec
in
mov
xor
push
jo
mov
jns
mov
xchg
push
test
mov
lret
adc
jmp
lea
xchg
inc
mov
mov
xor
jge
mov
rorl
movsl
lret
mov
ret
mov
cltd
loope
add
faddl
in
addr16
mov
lods
cmp
incb
jbe
mov
pop
xor
das
add
ret
sbb
add
ret
rolb
mov
xor
sbb
lods
jge
mov
scas
xchg
xchg
pop
data16
dec
inc
dec
mov
in
bound
aad
daa
cmp
out
inc
push
xchg
push
push
enter
and
jge
movsb
xor
movsb
mov
mov
sarl
cmp
pushf
ds
mov
mov
mov
pop
jmp
adc
nop
mov
adc
xlat
loopne
das
in
xor
or
lcall
push
sub
andb
sub
jp
mov
mov
sub
push
sub
test
mov
mov
orb
roll
fdivl
call
das
sub
inc
mov
sbb
repz
rclb
int
int
push
and
clc
cmp
or
cmc
or
xor
in
mov
lret
cmc
gs
lret
ret
mov
mov
in
sbb
pop
xorl
dec
test
sub
jecxz
inc
cmpsb
loopne
xlat
push
rcrb
repnz
xchg
enter
push
bound
aaa
pop
test
push
ret
cwtl
aaa
pop
add
xor
jnp
xor
sarb
fstps
outsl
insl
dec
aad
add
jle
loopne
sub
shrl
sahf
daa
mov
cli
add
jmp
test
shl
adc
clc
std
inc
call
loope
pop
xchg
loope
push
lret
gs
xor
mov
jb
bound
or
iret
push
sbb
sub
neg
inc
jge
cmp
mull
popa
notl
push
pop
push
aas
lea
xor
daa
pop
dec
fsubrp
sub
sbb
jg
mov
cmp
pop
jmp
sti
fidivrl
pop
imul
or
xorb
add
xchg
je
jo
inc
xchg
mov
mov
out
das
jo
rep
lods
sbb
hlt
mov
xor
jge
mov
pop
aas
inc
test
mov
or
test
or
lea
ljmp
cmp
mov
sbb
out
or
pop
hlt
mov
xorb
adc
stc
add
sbb
neg
or
out
sub
imul
aas
out
sbb
mov
lods
mov
push
insb
das
testb
insl
xlat
xor
sbb
bound
mov
cmpps
adc
and
call
mov
cs
in
fcoml
call
sub
mov
mov
movsb
mov
sub
adc
push
insl
xor
gs
pop
xchg
test
arpl
lods
out
inc
pop
push
pop
xchg
sbb
xor
aam
push
out
arpl
mov
cmp
movsl
shld
addr16
xlat
ja
cmp
xchg
dec
jmp
repz
inc
repnz
cld
outsb
call
cs
mov
pop
jl
jns
push
cmp
bound
fs
or
mov
xor
ret
imul
iret
scas
sub
jge
jg
sbb
les
sete
jl
or
mov
int
mov
outsb
jecxz
mov
aam
mov
outsl
pop
jg
lret
pop
aaa
hlt
add
rorl
sub
xchg
inc
mov
adc
sub
loope
lds
and
dec
xor
scas
mov
adc
xlat
movsl
xor
ljmp
pop
adc
stc
sahf
mov
jae
movsl
jge
sub
xchg
mov
mov
notl
out
popa
push
jl
inc
shlb
jecxz
ds
test
fnstenv
add
push
mov
sti
testb
xor
jne
test
inc
push
leave
or
lods
data16
cli
or
push
lcall
adc
push
popl
mov
xchg
aas
loop
dec
fsts
sub
jb
nop
add
leave
in
not
push
xor
add
jae
subb
rcrb
aas
jle
push
inc
push
imul
movl
inc
loope
ljmp
fldt
or
adc
fcoml
pop
jmp
call
mov
lcall
cwtl
fisubs
shl
push
jecxz
daa
or
aad
mov
dec
pusha
stos
movb
lcall
or
xchg
lods
add
sbb
imul
jp
insb
adc
push
mov
imull
sub
inc
outsb
sbb
pop
imul
mov
mov
add
or
adc
inc
and
and
mov
lock
pop
inc
xchg
mov
popf
jae
xor
pop
xor
popa
pop
icebp
jge
and
sub
sbb
shll
adc
inc
push
mov
sub
xor
inc
aam
cwtl
into
fnstcw
imul
nop
mov
das
jns
dec
xor
xchg
pop
adc
add
mov
adc
sbb
testl
das
imul
in
sub
xor
jmp
es
sbb
fcomps
rcl
mov
push
lds
jl
clc
cld
cmp
inc
cwtl
jle
test
xor
xchg
dec
mov
sub
cmp
fsubl
pop
mov
mov
fmuls
dec
out
and
sar
inc
out
cmpsb
pop
push
jae
adc
cld
lods
mov
std
adc
pop
sub
sahf
je
iret
lea
das
mov
mov
cld
add
adc
in
repz
mov
jle
adc
push
and
or
stos
hlt
cmp
cli
cmp
repz
ss
sub
mov
dec
jp
fdivs
insl
daa
aad
cltd
movsb
out
mov
inc
xor
mov
arpl
cld
or
mov
bound
sbb
adc
ljmp
cmp
scas
jl
hlt
push
sub
adc
cmp
aam
dec
mov
inc
scas
nop
test
sub
pop
notl
push
popf
stc
sbb
sbb
and
mov
rcrb
jl
mov
mov
push
jae
cs
cmpsl
pop
lods
out
inc
lcall
ffreep
inc
iret
idivb
mov
mov
js
repnz
cmp
dec
add
sub
aas
cmp
imulb
stos
mov
adc
shll
jg
addr16
push
cmpsb
fs
fcomps
gs
nop
sbb
movsl
das
mov
in
pop
push
clc
pop
jo
arpl
add
mov
push
btr
leave
out
das
les
push
es
movhps
or
in
pop
mov
cltd
fs
imul
sbb
in
inc
icebp
pop
cmpb
outsl
into
pop
and
pusha
loopne
iret
sbb
inc
lods
add
sbb
jns
xorb
xchg
cmp
cmp
add
mov
fsubrp
dec
mov
addr16
sahf
adc
sub
adc
fs
movsb
xchg
xchg
out
mov
les
or
add
mov
pop
jl
dec
aam
sbbb
sarb
scas
scas
adc
repnz
lds
sbb
inc
jmp
adc
clc
or
mov
arpl
aad
xchg
daa
push
test
pop
movsl
xchg
pop
js
pop
fsts
jecxz
jp
and
shll
loopne
adc
mov
addr16
in
insl
std
push
add
jge
mov
push
stc
mov
push
dec
xchg
cltd
test
lods
jno
popa
sub
xchg
sar
cmpsl
rcrb
pop
push
repnz
jne
mov
cmpsl
mov
int3
pusha
and
in
inc
jle
nop
test
int3
dec
shrl
imul
add
inc
dec
int3
daa
daa
int3
ss
push
es
movsb
mov
out
jle
push
ss
out
aam
cld
fdivrs
pop
mov
jg
stos
adc
push
adcb
lret
jno
add
sub
loopne
imul
out
ficoms
in
jo
mov
dec
inc
adc
lock
stos
jge
and
jbe
aaa
push
jl
inc
in
in
and
cmpsb
cmp
insl
push
push
lahf
cmpsl
add
fmuls
test
xchg
jo
dec
ds
dec
push
sub
xchg
call
lds
enter
test
out
xchg
mov
mov
or
insl
outsl
scas
or
repz
or
xchg
mov
jge
jbe
das
dec
cmpsb
pop
inc
fdivs
and
popa
adc
mov
cmp
fisttps
out
mull
lret
mov
gs
iret
cld
in
jmp
cmpsb
lret
cmc
mov
sub
dec
rorb
or
je
ss
and
fidivrl
mov
test
mov
or
inc
inc
sbb
inc
dec
pushf
inc
inc
cld
add
or
add
fldcw
push
pop
xchg
bound
sahf
repnz
orb
pop
and
pop
enter
ss
inc
lret
ret
push
out
mov
jecxz
push
mov
pop
inc
pop
dec
in
mov
and
in
xor
std
out
xchg
mov
mov
fisttps
add
jnp
inc
pop
out
inc
add
addr16
pop
or
dec
and
adc
xchg
or
cs
lcall
fnstsw
mov
nop
cld
dec
push
pusha
fwait
mov
fwait
nop
gs
aad
sbb
pop
lcall
jle
inc
test
rcrb
pop
daa
dec
stc
pop
in
sub
pop
dec
movsb
test
mov
push
xchg
in
into
call
jmp
mov
sbb
mov
xchg
orb
lods
inc
jo
ret
addb
addr16
cmp
sarb
fwait
mov
mov
xor
clc
or
push
into
pusha
mull
push
pop
pushf
fildll
lahf
imul
jno
jl
push
and
push
xchg
pop
or
xor
in
cmp
mov
ret
ljmp
lea
and
mov
cli
xor
popf
aad
aam
pop
into
test
add
push
out
shl
mov
and
scas
mov
into
push
rclb
jge
ret
xor
lcall
outsb
or
pop
cmpb
lea
lahf
jp
aam
jne
adcb
stos
popf
out
pop
push
mov
je
xchg
xor
add
xchg
xor
xor
jb
test
inc
shl
rcrb
cld
push
sub
mulb
aaa
std
pop
push
dec
add
lahf
pop
pop
leave
sti
jg
insb
or
push
mov
adc
adc
dec
fstpt
movsl
inc
lret
loope
jecxz
cmc
sbb
push
stos
xor
jle
mov
inc
dec
mov
arpl
adc
mov
jnp
and
addb
and
push
pop
fwait
cli
jnp
adc
nop
int
inc
mov
mov
rcrl
fxch
and
gs
repnz
or
cmp
push
scas
aas
inc
ficompl
mov
stos
lret
hlt
subb
aad
pop
xor
xor
cmp
adc
fistl
mov
fmull
add
push
enter
xorl
xchg
sub
push
xor
and
xchg
or
xchg
clc
xchg
jl
not
xchg
xchg
xchg
das
pop
cli
dec
adc
mov
int
lds
cmp
push
int3
arpl
mov
jnp
mov
adc
push
movsl
push
push
jmp
movsb
adc
in
lcall
insl
rclb
and
shrb
subl
fwait
or
xor
cmpsb
mov
sar
xorb
test
dec
in
decl
cmpsb
int
cmp
mov
or
cmp
int
call
mov
outsl
insb
or
xor
pop
jno
cmpsl
lods
inc
cmp
mov
test
icebp
inc
out
dec
pop
icebp
add
or
push
outsl
lcall
dec
dec
test
sbb
lret
int3
movsl
add
xchg
ljmp
pushf
popf
mov
sarb
cmp
mov
adc
popa
xor
in
pop
test
inc
and
adc
pushf
cltd
sti
aaa
nop
xchg
in
cmp
jnp
les
insb
mov
es
lods
and
ljmp
sbb
fdivrp
pop
and
sahf
test
push
push
jb
mov
into
sbb
movsl
sarb
add
mov
sub
je
cmpsb
je
xchg
xchg
cmp
popa
dec
dec
mov
or
push
int
mov
lods
jp
cmpsl
inc
loope
lahf
hlt
pop
or
clc
dec
cwtl
jle
xor
nop
es
inc
jb,pt
es
pop
fnsave
pusha
cmp
mov
cs
aad
sbb
sbb
dec
jp
cmpsl
pop
ss
shlb
mov
push
ret
cmp
fwait
mov
jne
lea
aad
sbb
xor
cmp
lret
pop
xchg
mov
aad
mov
cmp
xchg
stos
push
cs
mov
and
jmp
dec
or
push
push
mov
jo
mov
movsb
mov
or
dec
push
xor
jmp
jns
test
mov
mov
bnd
mov
lds
movb
or
dec
ljmp
inc
jle
mov
test
pop
push
mov
stc
popf
scas
out
or
shlb
xor
adc
push
into
mov
ret
mov
dec
clc
int
je
cmp
ret
loop
leave
test
push
cwtl
mov
cltd
ds
enter
fnsave
ret
pop
xchg
jg
neg
shrb
xchg
sub
and
mov
mov
cmpl
jmp
jl
jbe
imul
in
jnp
hlt
arpl
out
lahf
mov
or
test
push
dec
xor
in
enter
mov
imul
sbb
lret
lahf
pop
lods
cmp
or
out
and
mov
mov
dec
inc
dec
or
pushf
cmp
inc
inc
mov
sarl
or
jae
lret
lods
leave
int3
cmp
icebp
cmpsl
ds
or
call
sbbb
dec
push
jae
mov
pop
daa
adc
inc
mov
orb
pusha
pop
adc
adc
cmp
lret
jo
out
aad
xorb
cmp
lds
push
xchg
xorl
adc
jae
xchg
mov
cmp
int
dec
stos
leave
sub
inc
mov
pusha
or
outsl
sub
push
sub
int
fsts
and
lods
and
jl
ss
pop
lret
cwtl
test
cmp
inc
xor
sub
into
push
stc
jae
inc
push
jge
adc
mov
setno
shl
imul
arpl
loope
sbb
filds
pop
cli
mov
into
xor
fcompl
mov
test
in
or
dec
pop
inc
insb
stos
mov
into
out
inc
and
sbb
mov
adc
inc
add
add
popf
sub
scas
js
jno
mov
sbb
lods
mov
sbb
clc
stos
jmp
inc
into
ret
cmpb
mov
les
dec
and
cmpsl
clc
loope
push
ss
fimull
xchg
xor
data16
clc
out
inc
pushf
imul
in
mov
jecxz
add
inc
jae
or
xor
sbb
cmp
jne
xchg
addl
stc
push
pushf
mov
jne
sub
push
fidivrs
vcvttps2dq
xchg
pop
inc
inc
ds
scas
rclb
rclb
sbb
lretw
jg
cmp
stc
or
xchg
ds
sub
mov
or
inc
mov
shr
pusha
cli
mov
and
popa
mov
fwait
xchg
pop
sbb
adc
push
jo
push
cmpsl
pusha
shl
push
popa
fbld
jg
xor
push
pop
xchg
fldcw
out
sahf
ret
out
out
loope
xor
mov
xchg
cmpsl
xchg
and
and
test
fcompl
fs
xor
mov
roll
mov
jo
cmp
insb
mov
jb
and
xchg
imul
pop
or
jp
cli
frstor
and
pop
stos
outsl
jae
dec
test
pop
sarl
adc
test
insl
test
mov
scas
jne
pop
test
outsb
iret
data16
test
divl
adc
inc
adc
leave
fst
push
out
fnstcw
mov
cmpl
leave
sub
lea
and
adc
popa
stos
imul
out
cwtl
nop
dec
je
xchg
jl
push
mov
mov
movsb
packssdw
lret
ficomps
xor
cmp
cmp
lahf
dec
test
ret
js
xchg
ss
outsl
push
rcrb
imul
cmovno
aad
inc
and
dec
mov
fmul
or
ds
cs
les
pusha
xor
add
cmp
stos
mov
jb
or
rep
cmp
adc
lcall
jb
push
int
push
aam
pop
lcall
sbb
mov
add
arpl
jns
sbb
shlb
stos
lods
and
aaa
roll
roll
test
fcomps
pop
adc
ljmp
fisttpl
adc
es
add
xchg
fsubl
add
lea
pop
jne
push
testb
and
int
sbb
insl
mov
sbb
loopne
jbe
filds
arpl
rcrl
lret
sbb
jmp
mov
sub
add
outsb
in
cmp
and
mov
mov
cmc
mov
push
cmp
mov
push
xor
int
repz
xchg
ret
push
xor
sbb
imul
mov
mov
dec
xchg
aam
inc
or
push
mov
add
pop
push
xchg
jecxz
adc
gs
or
sahf
push
in
cltd
imul
mov
lods
xor
dec
mov
icebp
ret
mov
int3
mov
icebp
jmp
push
fiaddl
push
or
push
pop
inc
dec
mov
mov
inc
sub
insl
divl
jno
out
ret
stos
sbb
or
out
fs
lahf
int
stos
push
in
mov
cmp
gs
or
cld
divl
jbe
imul
daa
fstl
test
jae
jnp
mov
cltd
push
adc
daa
dec
xchg
cmc
push
shlb
dec
mov
cmp
sbb
imul
sbb
and
mov
ret
rcrl
rolb
jmp
mov
out
adc
mov
daa
push
imul
adc
aam
cmp
sub
int
sbb
fsubr
pushf
imul
mov
adc
and
aaa
xor
or
or
dec
push
inc
mov
rolb
push
out
mov
rolb
scas
icebp
push
addr16
jae
add
pop
lret
subl
rolb
cltd
push
stc
dec
iret
jp
aas
add
jo
jns
cmp
and
rcrb
pop
in
mov
ret
mov
dec
testl
test
fadds
lock
push
cmpsb
push
dec
dec
adc
add
das
and
xlat
sub
push
mov
cmc
stos
or
add
pop
mov
push
cmp
addl
rcr
sub
mov
cmp
lcall
cli
inc
sub
xor
pop
push
sbb
lret
arpl
xchg
xlat
adc
loopne
mov
and
faddl
ret
mov
dec
lods
test
insl
push
daa
mov
cwtl
sarb
add
xor
jae
jge
pop
pop
in
or
idivb
fucomip
pop
aas
or
mov
es
fidivl
push
and
push
ljmp
arpl
fdivp
js
and
cmpsb
repz
jg
call
cmp
lods
cmp
imul
aad
jb
pop
sbb
mov
test
mov
cmpsb
insb
leave
pop
test
xor
or
pop
push
jl
xor
loope
rolb
movsb
and
sahf
cmp
xor
jne
adc
cltd
jne,pn
push
fnstenv
pop
movb
and
imul
repz
cmc
jnp
bound
push
add
shlb
inc
push
ds
jge
scas
and
inc
dec
pop
aaa
jg
ljmp
test
imul
in
ja
iret
jecxz
xchg
jp
sbbl
ds
decb
es
loope
pop
cmp
imul
imul
xchg
jge
jl
adc
dec
add
nop
in
add
daa
xlat
and
push
mov
or
jns
loopne
sbb
mov
mov
push
xor
into
xchg
test
dec
cmovb
adcl
test
shrl
shll
js
mov
cmpsb
mov
jbe
scas
cld
xor
mov
aas
lret
and
mov
test
or
pop
aas
push
lcall
inc
cmp
cmpl
adc
jmp
inc
call
sub
xor
test
hlt
cmp
pop
cwtl
xchg
pusha
in
gs
out
scas
jo
stos
push
mov
in
aas
jo
xor
and
mov
and
adc
xlat
add
bnd
mov
inc
jmp
mov
cmpl
fwait
dec
sbb
mov
test
bound
ror
pushf
pop
sbb
jo
out
mov
and
mov
push
bound
jbe
lock
arpl
test
mov
shrb
sub
inc
into
jge
add
shlb
cmp
loopne
int
ja
jg
test
jo
xor
shl
movsb
xchg
outsb
pop
js
adc
adc
inc
dec
fs
push
nop
and
mov
inc
mov
sub
add
arpl
decl
sahf
sbb
and
add
push
push
pop
jle
fcmovne
fistl
lock
fistpll
or
cmp
push
push
cmc
cmp
fnstcw
cmp
inc
je
stos
cmpsl
cmpsb
test
mov
sub
aas
cmc
inc
dec
mov
jbe
lcall
mov
into
daa
sub
test
jp
and
leave
mov
loope
adc
push
fdiv
es
out
scas
add
sub
in
mov
inc
aas
adc
jl
or
and
mov
imul
aad
cmp
and
push
mov
xorb
fdivrl
lock
xchg
xor
xchg
mov
or
insb
ljmp
ret
xlat
sub
repz
stos
jae
popf
cli
fidivl
xchg
retw
ja
ss
mov
or
cli
lcall
xor
pop
jo
adc
lcall
jns
push
lcall
mov
mov
pop
pop
aam
adc
xchg
ljmp
inc
mov
mov
hlt
nop
and
je
push
in
jle
mov
aaa
jae
xchg
and
ret
daa
cmp
std
sub
test
cltd
clc
test
mov
rcrl
fstps
push
cmpsl
fwait
push
sbb
mov
movsb
mov
test
clc
mov
ja
jns
push
push
scas
push
repnz
or
sbb
add
sbb
lcall
sbb
and
lods
sub
dec
stc
js
aam
jge
add
jmp
mov
sub
jle
adc
shlb
xchg
xor
sbb
sbb
jmp
aad
push
sub
push
out
jns
mov
bound
leave
cmp
push
or
inc
xchg
fs
repz
and
stc
cmp
jno
daa
fsubs
push
into
xchg
shll
in
std
mov
imul
and
fdivr
pusha
cmovo
xchg
into
pop
int3
jge
addr16
add
adc
adcb
stc
adc
test
fwait
cmp
push
cmpsb
pop
addr16
or
roll
mov
push
add
decl
mov
test
push
mov
pop
adc
ja
mov
mov
ret
adc
adc
xchg
daa
std
sub
pop
insl
inc
shl
mov
xchg
jae
out
pop
push
rorb
adc
pop
dec
push
divl
mov
ja
icebp
je
test
push
ljmp
je
xchg
sbb
cmpsb
gs
in
inc
cmc
xor
jg
sub
in
sbb
movsb
call
xlat
mov
add
xchg
mov
call
fisubrs
loop
bound
subb
sbb
aaa
lcall
test
imulw
test
add
mov
or
sbb
jne
pop
ds
negl
inc
out
imul
notl
xchg
loop
mov
arpl
jno
roll
out
mov
mov
test
int3
sub
in
mov
test
mov
adc
push
es
pop
or
inc
pop
sti
sti
shl
mov
push
lea
fisttpll
mov
repnz
dec
not
aad
cmp
mov
xor
dec
icebp
push
pop
insl
test
pop
rclb
push
cmp
pop
and
loopne
inc
std
dec
or
and
es
cmp
fisubrl
aaa
fistpl
cs
dec
mov
and
ret
into
insb
xor
stos
lock
and
sub
jo
stc
jl
adc
inc
sbb
fistpll
push
popf
adcl
adc
dec
sbb
mov
data16
xchg
rorb
jno
push
jle
mov
pop
loope
sbb
or
mov
sub
jge
adc
fs
mov
dec
enter
leave
jmp
sub
xor
pop
rcl
int
sbb
jp
outsb
popa
jo
pop
lock
xor
inc
hlt
test
or
movsb
lret
or
xor
arpl
and
es
and
mov
outsl
jnp
mov
adc
push
add
jg
dec
adc
gs
adc
cmp
mov
sbb
add
and
stc
out
dec
int3
stos
fidivrl
aam
and
movsl
mov
xchg
mov
pop
xchg
mov
mov
xchg
mov
sahf
and
mov
push
xor
inc
jns
adc
xor
sbb
xor
sub
mov
pop
sbb
pop
int3
push
mov
mov
mov
or
je
arpl
fisubl
cld
xchg
xchg
rorl
shl
xchg
stos
inc
mov
sub
aaa
repz
imul
inc
aas
jae
shll
push
xchg
shll
jo
mov
mov
fsubl
xchg
dec
sub
repz
fisubs
xor
aad
inc
pop
jno
jecxz
dec
pop
mull
ficompl
int3
leave
cmp
mov
nop
and
aas
cmp
adcb
mov
loope
ljmp
pop
sbb
iret
popf
mov
insl
insb
dec
xor
sar
pop
ret
test
xor
cmp
pusha
sub
pop
pop
mov
cltd
and
mov
fstps
in
sbb
test
mov
dec
jae
xlat
jns
pop
add
stos
ljmp
ret
hlt
mov
xorps
push
cmpsl
pusha
bound
pop
mov
mov
mov
enter
dec
sub
and
enter
fsubr
cmpsl
push
jnp
in
pop
and
or
add
sbb
jecxz
stc
mov
pop
popa
sub
test
jne
fistl
into
test
incb
push
inc
sub
clc
int
lods
pop
daa
jnp
cmp
or
pop
test
cmp
test
and
lcall
lods
jg
sub
scas
into
ss
fsubl
jne
testb
mov
popf
jmp
sub
aam
jne
dec
sahf
stos
pop
mov
shl
or
sub
inc
push
mov
popa
lods
dec
or
insl
pop
and
aas
cli
test
enter
pop
out
shll
mov
dec
test
lds
sarl
aas
loope
inc
les
and
dec
ret
mov
adc
jle
stos
xchg
fisubl
fisubs
ja
mov
cltd
clc
push
jb
outsb
fnstsw
cltd
shrb
pop
xor
cmpl
mov
xor
lret
out
sub
push
scas
repnz
aas
push
in
mov
test
sbb
cmp
movsl
push
clc
mov
add
shlb
movsb
out
loopne
push
in
dec
in
fs
hlt
sub
mov
mov
stos
popa
pop
xor
cld
push
sbb
pop
lock
dec
mov
mov
loopne
aam
cmpb
adc
pop
inc
ja
test
int3
cld
bnd
dec
cmpsl
jnp
push
xchg
sbb
cmpsb
pop
arpl
xor
cmpsl
ret
sbb
mov
inc
imul
push
inc
stos
cmp
jle
fsts
hlt
fwait
push
movl
sarl
mov
arpl
imul
das
fcompl
sub
sub
nop
mov
xor
pop
add
sub
pop
adc
push
push
inc
sarb
fadd
mov
mov
movsl
and
mov
cld
dec
jmp
clc
daa
sarl
les
jae
fsts
pop
mov
shll
cmp
daa
mov
ljmp
not
imul
loope
push
jecxz
pop
sbb
dec
mov
repnz
mov
loopne
cmp
arpl
mov
dec
pop
sub
mov
les
bsr
and
sarb
hlt
xor
pop
adc
push
cmp
lret
push
lock
add
adc
push
rorl
fstpt
sbb
push
pop
loopne
mov
mov
mov
adc
mov
sub
mov
scas
or
lcall
mov
mov
mov
cmp
dec
pop
sbb
or
clc
sbb
rorb
lds
push
lods
sbb
shrb
divps
pop
mov
inc
ret
xlat
aaa
xchg
roll
sti
mov
shlb
mov
lea
inc
dec
leave
out
rcrb
js
ret
popa
jnp
mov
std
insl
jne
mov
movsl
es
sbb
mov
add
outsl
mov
push
and
mov
pop
sbbl
adc
lahf
cmpsl
fmull
je
fisttpl
xorl
cmp
push
inc
dec
mov
das
cmp
loopne
stc
xchg
stc
hlt
pop
sub
xrelease
pop
push
jbe
out
shll
test
ret
fcom
inc
std
test
test
xchg
dec
lock
bound
push
lds
into
subb
and
dec
fidivl
outsl
jno
xchg
out
movsl
cwtl
mov
sub
cld
imul
mov
or
stc
mov
mov
jl
xchg
movsb
fstp
inc
push
push
in
xchg
pushf
mov
lea
inc
jl
dec
mov
mov
sahf
shlb
dec
xor
or
inc
xchg
add
lds
sti
jnp
sub
jle
ja
pop
dec
call
mov
sarl
ret
xor
out
add
les
lret
jae
add
adcb
pop
xor
cmp
popa
mov
aaa
pop
test
or
aas
aad
nop
xor
jnp
in
push
movsb
fnstenv
cmpl
and
rcll
pop
in
jbe
jae
fwait
enter
movsl
cli
daa
sub
sub
lods
xchg
and
xor
or
lahf
hlt
sahf
jle
fstl
repnz
sbb
push
sbb
and
pop
repnz
mov
cmpsl
jae
in
adc
cmp
fcompl
pop
push
shll
dec
cltd
movntq
shrb
rclb
stos
flds
push
adc
mov
movsb
ds
jle
movsl
add
adc
loope
add
mov
push
loope
in
jae
xor
adc
adc
out
dec
bound
push
or
inc
xchg
push
mov
repz
push
in
int
and
sbb
adcl
sbb
in
add
out
test
xchg
adc
jge
loop
mov
xlat
dec
insb
lcall
sub
lea
popa
in
jmp
cmc
add
mov
out
ja
stos
testb
push
lret
or
add
mov
sarb
mov
lods
pusha
dec
push
mov
push
test
push
add
push
test
mov
in
addr16
and
sub
dec
into
lahf
divl
and
jae
push
cmp
jbe
push
shlb
aam
lods
push
or
inc
adc
jno
lods
hlt
lods
dec
movsb
dec
cmc
fisubrs
cmp
jns
dec
popa
cld
sub
pop
xor
inc
push
xchg
aam
imul
dec
mov
add
sti
inc
push
fwait
lods
pop
mov
pop
aaa
into
adcb
hlt
not
xchg
or
xchg
push
ljmp
jbe
lds
cld
lret
ficomps
push
mov
dec
lods
mov
sbb
mov
lea
in
pop
and
lock
mov
mov
jmp
notb
cwtl
adc
xchg
inc
or
enter
or
sarl
jbe
bound
aad
or
scas
adc
cmp
xchg
xchg
ret
jb
ljmp
inc
or
xchg
fwait
xchg
xchg
push
enter
sbb
add
inc
add
mov
test
xchg
in
push
lock
lods
fldt
sub
and
ja
push
pop
push
shlb
adc
iret
ret
data16
bound
or
imul
scas
mov
mov
in
inc
loopne
insl
das
pop
in
mov
lret
test
add
je
fs
pop
jb,pt
out
sbb
movsl
mov
mov
fildl
mov
mov
jge
lret
mov
sub
cmc
outsl
mov
pop
mov
leave
jo
pusha
and
add
sbb
ljmp
cli
mov
hlt
xor
int3
push
mov
in
int
or
enter
xchg
sub
lret
mov
inc
lds
xchg
mov
loopw
nop
fnsave
pusha
cld
cmp
push
sub
sbb
outsl
push
sbb
les
push
lret
cs
xlat
sbb
mov
inc
mov
mov
fmul
mov
xor
mov
fimull
mov
adc
cmpsb
jmp
push
push
nop
xchg
jo
xchg
push
mov
dec
xor
add
adc
push
das
or
xchg
ja
fprem1
jns
cwtl
jae
popf
lods
inc
lock
pop
and
cmp
iret
aad
sub
add
inc
mov
xchg
pop
sbb
ffreep
pop
xchg
ja
popf
lea
mov
fiadds
push
cmc
or
ljmpw
idivb
movsb
dec
jp
pop
lea
jbe
imul
jae
mov
cltd
scas
cmc
btc
dec
pop
imul
jge
and
or
pop
lcall
das
jns
inc
xchg
ljmp
pop
jo
push
lgs
adc
sub
dec
shll
xor
das
dec
push
pop
dec
and
pop
call
jo
repz
les
sbb
xchg
or
cmp
or
xchg
mov
xchg
insl
sub
je
mov
cltd
or
add
sub
adc
xor
xchg
lcall
sar
adc
adc
scas
fcomip
mov
mov
lock
push
ret
jno
pop
ja
mov
pop
repnz
aad
xchg
rolb
or
cmpsl
jno
push
push
push
mov
es
push
xchg
mov
dec
mov
addl
jp
and
test
pop
out
jl
push
or
dec
icebp
pop
fidivrl
inc
xchg
cmp
and
lea
sub
test
or
outsl
dec
or
adcl
jp
jnp
lds
cmpl
jb
data16
loopne
xchg
rcrl
dec
pusha
mov
dec
dec
mov
pop
sahf
negb
pop
cltd
cld
loopne
add
add
xchg
mov
xchg
es
xchg
cmp
xchg
sub
cld
adc
popf
sbb
xlat
test
jle
in
movsl
lcall
add
add
adc
aam
sahf
es
cmpsl
xchg
out
movsb
test
fisttpll
cmp
pushf
out
pusha
stc
and
ljmp
inc
xchg
xchg
nop
add
in
mov
int
insb
mov
inc
in
cmp
xor
mov
fwait
bsf
aam
inc
add
mov
scas
das
in
push
loop
inc
fisttps
fnstsw
push
movsl
pusha
into
or
add
push
xor
push
mov
into
movsb
movb
push
cmpsl
or
aas
xor
lock
inc
sub
out
gs
leave
movsb
mov
or
sbb
gs
sbb
cwtl
in
xor
sub
sub
outsl
outsl
into
je
push
fldt
mov
and
roll
xchg
ja
leave
inc
jle
mov
flds
repnz
repnz
int3
cli
cmp
test
inc
aam
in
incb
ja
mov
pop
cmp
movl
mov
adc
rol
roll
jae
jmp
mov
xchg
mov
ret
inc
sub
outsl
sub
je
dec
test
mov
pop
jg
ja
mov
pop
fidivs
jae
mov
ret
popf
nop
aas
repnz
lcall
outsl
mov
mov
pop
xchg
jns
cmp
movl
repz
or
and
mov
cwtl
lret
mov
arpl
ja
jmp
mov
sti
je
inc
or
sub
jge
adc
pusha
cmc
xor
out
push
fcomi
out
or
scas
jecxz
outsb
sbb
sbb
xchg
mov
ficompl
dec
iret
dec
jnp
test
dec
das
mov
out
fisubrl
pop
push
adcb
mov
adc
xchg
inc
add
mov
adc
jl
pop
xor
call
sahf
aad
adc
adc
div
ror
add
fisttpl
in
fdivr
add
cmp
ret
imul
fimuls
test
je
mov
lret
in
push
lods
imul
xchg
cmc
pop
and
lods
pusha
inc
pushf
sub
das
jnp
jmp
sbb
mov
and
inc
lods
push
sub
repz
mov
cmp
dec
jbe
cmpsb
pop
mov
mov
mov
pop
mov
movsb
lea
leave
xor
test
mov
lcall
add
cmp
orb
push
mov
jno
leave
dec
cmpsl
jge
popa
adc
aas
sub
mov
ljmp
push
cmpb
rcll
dec
test
arpl
notl
iret
xchg
into
push
xor
pusha
mov
pop
sbbb
sahf
xor
cmp
cmp
mov
mov
pop
add
sub
xor
xor
or
push
pop
imul
mov
icebp
push
out
bndldx
mov
sbb
sbb
outsl
lods
xchg
cmp
inc
inc
inc
in
nop
adc
lds
aaa
cmp
loope
xor
jae
jl
js
xor
sbb
jmp
and
jecxz
mov
stc
icebp
addr16
fists
mov
enter
jo
sti
sbb
subl
hlt
mov
xchg
mov
insl
mov
movsl
nop
lock
aaa
lods
inc
insl
jl
stos
pmulhuw
push
sbb
mov
or
lods
xchg
pop
and
jo
scas
jb
ret
push
ficoml
mov
add
mov
fimull
in
mov
pop
add
cli
sahf
fildll
sbb
lret
in
cmp
xchg
sbb
jbe
and
and
and
xchg
ds
je
mov
and
adc
mov
jb
mov
adc
jo,pt
or
mov
scas
mov
shlb
or
repz
in
add
mov
rclb
lods
cmp
rol
in
inc
jl
sub
xor
inc
pop
lret
xchg
jmp
mov
ret
cmp
mov
stos
cld
in
cmp
adc
insl
fdivrp
shl
sub
pop
cmc
popa
das
lods
xchg
jle
mov
jp
or
test
sub
mov
iret
xchg
xchg
xor
or
and
psadbw
popf
nop
rcrb
enter
andl
pop
push
push
and
pop
ljmp
add
jmp
sahf
fs
xchg
or
test
mov
jne
sbb
mov
inc
fists
xchg
cld
push
fwait
loopne
or
movsb
fidivs
lret
mulb
dec
in
pop
imul
fidivrs
and
and
dec
das
dec
arpl
loope
imul
jnp
cmpsb
or
pop
sub
icebp
xorb
cwtl
rcll
stos
pushf
stos
sub
cmpsl
gs
mov
push
mov
cmp
cs
aaa
movsl
std
push
jo
shl
jg
std
xor
adc
fwait
and
inc
jmp
mov
daa
inc
rcrl
int3
inc
push
xchg
bound
imul
mov
mov
mov
lcall
dec
fiadds
dec
enter
dec
cmp
cmpb
idiv
and
inc
sbb
insl
jecxz
push
pop
enter
in
xor
and
inc
push
jecxz
lds
xor
mov
dec
das
fs
mov
shl
inc
pop
cmp
dec
jbe
lret
inc
xor
add
popa
int3
push
test
std
subb
pop
lret
iret
mov
hlt
fwait
inc
sbb
data16
ss
fbstp
out
je
push
add
cmp
cmp
push
sti
and
lcall
xchg
jo
ljmp
cmp
cwtl
pop
xchg
adc
loop
xchg
lcall
sbb
push
pop
bound
push
insl
rolb
and
push
mov
mov
cwtl
xor
sbb
xchg
mov
push
stc
push
jo
cmc
dec
scas
ret
repnz
rolb
inc
mov
lcall
or
lret
in
stos
mov
mov
outsb
adc
xchg
in
sub
jp
roll
mov
fwait
mov
jp
xor
ret
push
lret
insb
mov
rcrl
loope
inc
outsl
cmpsl
aad
or
mov
xlat
xor
xchg
sub
xor
jmp
jmp
dec
rorl
push
push
ja
push
lds
sbb
pop
mov
enter
faddp
jmp
mov
sub
imul
jae
xchg
out
mov
pop
mov
xlat
dec
push
and
jecxz
mov
mov
test
and
notb
push
push
pop
mov
loopne
push
mov
leave
push
scas
or
and
xor
gs
add
pop
xchg
iret
add
jbe
test
loop
leave
subl
out
mov
xchg
rcll
repz
int
xchg
mov
addr16
jecxz
mov
xor
ffreep
xor
cmpsb
mov
pop
lcall
sub
stos
or
in
aaa
movsb
mov
fldcw
push
repz
repnz
hlt
inc
and
mov
outsb
mov
ds
insb
ja
mov
inc
inc
jb
xchg
mov
bound
mov
popa
mov
mov
add
xchg
aam
push
push
or
lahf
stos
cmc
mov
adc
add
and
cmpsl
pop
sarb
push
aad
lcall
lcall
lods
imul
cmp
push
xor
lret
xchg
add
out
jo
idiv
mov
scas
imul
sarl
pusha
imul
mov
decl
cltd
popf
hlt
and
inc
add
pushf
push
fistps
dec
mov
ret
or
jae
ret
cmpsb
clc
mov
sbb
mov
insl
repnz
cmp
into
adc
aas
cmp
cwtl
mov
out
mov
in
lock
sarl
push
xor
rolb
lds
pop
je
push
mov
push
gs
and
pop
sbb
mov
rcrl
cwtl
lock
cmp
int3
movsl
add
jmp
and
fstps
lcall
das
xor
sub
push
pop
ret
test
mov
jnp
inc
fsubrl
int3
jns
jnp
ret
cs
push
xchg
ljmp
bound
mov
fildll
adc
mov
dec
aaa
cmp
adc
dec
adc
cmp
cmp
pop
test
jg
xchg
insb
jle
jb
fisubrl
fcoml
push
dec
sub
js
outsl
into
cmp
xchg
aam
mov
sbb
inc
in
fcompl
in
int3
pop
push
xlat
outsb
std
push
pop
lock
mull
jmp
push
jecxz
div
nop
push
loope
sbb
sub
jl
xchg
leave
loop
mov
xor
mov
jmp
jge
sbb
mov
leave
mov
and
mov
xor
sbb
mov
sub
push
cmp
in
push
dec
mov
push
in
xlat
push
iret
leave
sub
aaa
and
mov
or
add
jnp
loope
int
sarl
pop
push
pusha
test
xchg
fisttps
push
and
fmuls
inc
sbb
inc
cmp
js
stos
push
mov
imul
mov
xchg
xchg
inc
inc
int3
mov
mov
or
negb
insb
or
and
or
sub
adcl
sub
test
xor
and
cli
sbb
adc
sti
mov
inc
pop
imul
mov
repz
ja
insb
imul
xchg
mov
ljmp
leave
adc
rorb
es
and
mov
shlb
ja
mov
mov
mov
push
in
mov
xor
sub
in
pop
inc
dec
into
fmull
maxps
or
adc
sar
xor
pop
xchg
and
mov
and
fistpll
shlb
lcall
shr
addr16
mov
dec
lods
push
loope
jno
dec
dec
lds
dec
jo
jns
inc
fildll
or
scas
xor
out
dec
push
addb
inc
das
loope
test
inc
xchg
mov
mov
fs
in
aad
aas
sbb
ret
add
pop
call
int3
and
popa
pusha
push
inc
pop
fs
sub
push
hlt
add
cltd
fldenv
pop
jno
pop
adcb
pop
pop
addr16
sbb
icebp
stos
mov
test
sbb
out
repnz
les
in
loop
mov
adc
jnp
stos
or
dec
sub
sbb
jp
mov
repnz
in
adc
repz
xchg
filds
sbb
jle
push
add
lock
add
scas
test
js
and
jns
add
mov
push
sahf
jmp
or
mov
push
imul
test
add
addr16
add
sbb
leave
sub
cmp
sub
cmp
inc
jae
aad
iret
jge
loop
ficomps
movl
daa
sub
and
and
into
or
mov
or
or
aam
imul
cmp
mov
call
xchg
xchg
mov
nop
mov
aad
lea
lock
xchg
cmc
dec
cmp
in
sub
dec
sub
ljmp
xchg
iret
inc
xor
add
xor
icebp
cli
cs
shrb
or
add
jno
cs
mov
out
inc
sahf
xchg
icebp
sub
lods
sub
jmp
xlat
dec
rcrb
in
inc
lahf
dec
sti
andl
sub
aas
mov
sub
out
xchg
and
mov
test
fucom
or
sbb
call
mov
add
adc
xchg
sub
adc
les
xor
sbb
mov
aam
xchg
mov
jl
xor
daa
or
out
sbb
and
scas
test
cmp
nop
and
or
xchg
ds
mov
cwtl
in
test
or
lds
xchg
add
arpl
push
data16
ss
adc
xchg
push
aas
inc
imul
rol
lods
bound
mov
pop
cmc
cs
and
sbb
mov
jno
fnsave
push
sbbl
lcall
add
dec
push
mov
xchg
cmc
push
pop
xchg
mov
movsb
xchg
mov
mov
sbb
imul
cmp
call
inc
aas
xchg
lret
dec
inc
lcall
mov
icebp
out
mov
sarl
mov
jge
or
ds
inc
mov
test
pushf
sbb
sbb
push
dec
fisttpl
push
aad
insl
cmc
mov
popf
xchg
not
sarl
in
jmp
sub
push
inc
in
sub
jmp
sub
pop
pop
cmpsb
fisubs
jmp
and
jl
push
xorb
or
popf
mov
clc
loopne
dec
lods
jmp
movsl
xchg
push
js
jbe
in
shlb
xor
add
iret
ds
int
lods
push
mov
pop
mov
jmp
inc
outsb
frstpm(287
outsb
dec
pop
add
popf
arpl
mov
rcl
add
mov
jnp
xchg
xchg
mov
xor
mov
scas
addr16
movsl
shlb
hlt
das
dec
loop
iret
das
fdivs
repnz
imul
jg
jl
aam
addb
or
ds
cmpsl
loope
cmpsb
out
iret
in
aad
push
push
sahf
or
pop
adc
pop
xchg
pop
sub
jno
leave
and
in
mov
int3
hlt
jno,pt
xchg
nop
mov
clc
xchg
rolb
xchg
cmp
or
subb
xor
or
loop
bound
imul
or
cli
bound
shll
pop
cmp
test
rcl
mov
in
fdivs
repnz
add
adc
jecxz
pop
fstpl
mov
pop
inc
negb
add
ds
add
dec
adc
ss
inc
xor
out
mov
enter
aas
jle
lea
xor
or
dec
je
gs
lods
push
bnd
pop
cmpsl
mov
mov
sub
mov
pop
bound
lcall
int
jle
lods
jge
ret
xor
int3
int
lret
xchg
cs
lret
test
loope
decl
pushf
xchg
mov
ljmp
jl
jecxz
hlt
pop
aad
inc
inc
adc
pop
lods
mov
and
sbb
lods
js
push
push
rorb
mov
pop
mov
pop
and
sub
mov
inc
imul
notl
mov
xchg
jp
js
jp
or
and
or
dec
sub
fwait
cmp
scas
push
outsl
iret
js
dec
int
lds
ficomps
pop
cmpsl
jle
in
je
mov
fs
cmpsl
out
leave
shlb
scas
out
movsl
lods
fdiv
jge
gs
adc
popa
imull
mov
pusha
push
outsb
das
nop
xchg
ret
and
add
push
aad
je
inc
and
pop
add
xor
cmpsb
add
cli
adc
cmpsb
sub
mov
addl
cs
jbe
fdivrs
dec
inc
push
scas
add
in
jge
mov
ds
das
dec
push
pop
imul
xchg
out
add
sbb
xchg
jb
jbe
mov
lret
test
das
lret
dec
movsb
and
fildll
fs
scas
insb
inc
jo
sbb
movb
xor
xchg
rcrb
mov
inc
pop
fstps
xor
ja
jnp
cmpsl
loop
addr16
aaa
sub
dec
or
mulb
repz
inc
rolb
jle
pop
cli
fwait
aaa
ds
add
cmc
or
xlat
mov
mov
push
movsl
inc
pusha
cmp
std
pop
sbb
pop
outsb
inc
cli
dec
inc
test
mov
pusha
jecxz
mov
rcrl
in
idivl
sarb
rorb
xor
cmp
adc
cmp
test
push
mov
sub
psubusb
popa
inc
shlb
cmp
ficompl
subl
and
sub
loop
rorb
sub
lret
xchg
imul
lret
shrb
int3
and
cmp
pop
add
out
jg
push
sbb
cltd
push
insl
icebp
xchg
orb
inc
jnp
inc
cmp
dec
mov
fstpt
enter
std
arpl
popl
xor
cmp
cwtl
addr16
pop
push
pop
xor
add
mov
xchg
cmp
in
out
shr
pop
mov
rcrl
dec
add
xor
inc
sti
in
cmp
inc
push
add
cwtl
mov
and
aad
lock
mov
cmc
inc
lock
jne
call
nop
hlt
scas
cmpl
ja
aaa
inc
jmp
xchg
adcl
jnp
mov
aas
js
push
push
dec
int
ret
pop
repnz
pop
adc
push
and
lahf
pop
xchg
sub
mov
fidivrl
cmp
test
inc
sbb
xor
xchg
mov
pop
cmp
and
mov
sbb
lcall
pushf
aas
call
pop
loope
push
adc
push
lret
add
in
add
inc
xchg
mov
mov
mov
push
pusha
cmp
dec
adc
pop
fisttpl
xchg
dec
mov
push
sbb
dec
and
push
scas
xor
cmp
fistps
out
push
pop
aam
les
pop
push
xchg
xor
mov
sarl
adc
mov
xchg
sub
inc
pop
enter
movsl
rcrb
mov
aam
adc
inc
fmull
inc
inc
push
mov
pusha
add
or
sub
adc
in
or
add
pop
int3
pop
dec
rorb
movsb
xor
lds
xchg
sbb
arpl
cmc
js
add
jle
pop
lcall
fcom
cld
mov
xchg
cmpb
test
mov
xchg
fildl
ljmp
jmp
sbbb
enter
aaa
ror
xorw
dec
aam
cmpsl
pop
test
enter
call
test
xchg
ret
mov
and
or
imul
xor
fnsave
sub
test
jne
insl
outsb
movsl
pop
inc
push
cmp
in
sbb
pop
dec
mov
fidivrl
in
fs
or
jne
test
arpl
imul
sbb
jae
xchg
jle
pusha
nop
xchg
xchg
cmpsl
push
rol
or
ret
shr
mov
into
out
out
fldcw
mov
mov
nop
stos
lret
inc
fucomi
pop
pop
fcomps
cltd
sbb
adc
inc
push
sti
add
jo
pop
mov
adc
mov
mov
mov
data16
xchg
jmp
xor
jae
stos
scas
adc
stos
mov
mov
hlt
jb
lds
movsl
shl
lea
sbb
push
pop
js
pop
std
test
add
test
and
or
fcmovu
dec
mov
in
cltd
jecxz
push
fidivrs
cwtl
enter
sti
push
orb
cld
loopne
sti
test
push
push
insl
sahf
imul
mov
xchg
xor
cmp
add
roll
pop
mov
cli
push
das
adc
xor
inc
sub
jg
add
adc
insl
or
pop
adc
push
data16
jbe
jl
dec
or
test
xor
mulb
pop
ja
lret
and
dec
cmc
and
in
jmp
insl
js
inc
aas
sub
push
pop
sbb
rclb
cvtdq2ps
imul
push
or
sub
cs
ret
push
xor
jb
in
sbb
push
jno
fmul
jge
setp
or
pop
xor
push
xchg
push
fldcw
ss
jbe
pop
icebp
out
fisubs
ffreep
addb
clc
adc
sub
icebp
add
add
push
or
outsb
pop
in
mov
xchg
jno
and
imul
ds
in
loopne
add
mov
cmp
xchg
lds
pop
sbb
mov
rorl
jne
jle
mov
pop
mov
sub
dec
repz
lds
pop
xlat
mov
add
mov
mov
frstors
lret
clc
ja
jbe
jmp
test
xchg
mov
jge
rcll
in
fwait
adc
fcmovnbe
gs
dec
mov
jg
loope
mov
pop
arpl
adc
popa
loop
leave
jns
add
retw
in
dec
xor
imul
pop
popa
outsl
imul
mov
cmp
adc
into
lahf
fisttpl
js
mov
cmp
mov
arpl
shll
push
mov
dec
or
jg
shl
pop
cmc
xorb
xchg
popf
add
clc
out
rclb
mov
push
xchg
dec
mov
out
aam
add
in
stos
and
xchg
stos
ja
sbb
pushf
mov
sub
int3
into
test
pop
inc
dec
add
jns
stos
xor
jo
or
push
jmp
ljmp
mov
or
sbb
sbb
and
add
fsub
sbb
imul
sub
cmpsl
pop
std
push
and
sbb
inc
adc
mov
insl
cmpsl
cmpsl
dec
rcl
adc
jle
setns
cld
sahf
mov
push
push
pop
daa
popf
xor
push
lods
jb
mov
aas
xchg
xor
inc
sub
addr16
popf
lea
push
addr16
cwtl
ds
or
pop
sub
jecxz
je
popa
daa
pop
sti
cmp
fcmovb
xchg
inc
dec
inc
ret
lcall
out
stos
test
neg
fsubrl
popf
sbb
cs
movsl
cmp
daa
push
inc
movsl
bound
hlt
sbb
lret
notl
sbb
xchg
and
cmp
aad
hlt
out
push
mov
jecxz
into
test
add
loope
adc
ja
xor
insl
fwait
or
movsl
out
add
and
pop
test
jne
jp
orb
pop
pop
in
repz
mov
sbb
mov
cmc
pushf
mov
negb
mov
movsl
mulb
adc
popa
cli
pop
inc
rcl
sbb
dec
push
inc
sti
sbb
dec
mov
and
push
jp
jecxz
imul
push
sarl
cmpsb
mov
jge
hlt
mov
push
jbe
and
cs
imul
popf
jmp
sub
gs
fdiv
sti
cmpsl
and
push
push
adc
mov
scas
sahf
adc
sbb
ds
jmp
jo
lret
inc
stos
insb
gs
int3
adc
stos
test
inc
fadd
mov
cmp
stos
fs
loop
push
fsubrl
outsb
mov
cmpsb
int
call
push
addb
mov
shl
repz
das
jl
adc
add
rolb
add
jnp
xor
fwait
or
jp
insb
xor
jo
sub
mov
dec
or
dec
and
test
ds
call
in
inc
add
cli
dec
jge
popa
mov
in
gs
cmpsl
aas
mov
jge
aam
xorl
inc
cli
push
repz
add
cwtl
fs
subb
leave
and
pushl
xchg
mov
addr16
dec
sahf
xlat
ret
sub
pop
cs
insl
sti
xlat
xchg
sti
fisttps
push
dec
or
rcrl
and
and
testb
mov
push
clc
int3
ss
in
cmpsl
or
jnp
outsb
scas
jmp
push
xlat
mov
jo
mov
das
cmp
mov
in
icebp
mov
inc
hlt
roll
scas
xchg
xchg
sbb
das
das
sub
push
fisubs
pop
imul
push
xchg
insl
xchg
jmp
into
jae
mov
xor
and
imul
lret
loope
cmpsb
adc
pop
stc
es
jle
pop
mov
and
into
shll
in
mov
add
lods
lods
shr
adc
xlat
jbe
fucomi
push
test
mov
push
fmull
jge
fisttpl
sbb
dec
or
jmp
dec
xchg
dec
addr16
push
mov
sbb
gs
sbb
jge
sbb
add
into
fidivl
insl
clc
xchg
xor
push
fisubl
test
push
shrb
dec
ret
lock
jb
or
xor
pusha
jne
mov
mov
shr
push
adc
stc
popf
xchg
cmpsl
ljmp
imul
scas
pop
fists
repnz
mov
mov
sahf
andb
out
aad
and
movaps
dec
fisttpll
std
frstor
lret
add
mov
popf
cld
xchg
xor
pop
mov
sbb
sti
push
xor
leave
test
adc
push
icebp
jns
icebp
lcall
push
rcll
clc
sbb
dec
jo
insl
out
iret
test
cmp
ret
shr
adc
push
or
stc
adc
cmp
call
pop
cmpsl
jne
fldt
lods
jg
addr16
xchg
out
int
add
in
push
xchg
rolb
mov
insb
xchg
mov
popf
dec
push
mov
cs
je
repz
or
rol
shlb
mov
jle
or
faddl
adc
insb
lcall
fcmovbe
shrl
cld
dec
pop
ficoml
out
cmpsl
pop
cmp
mov
mov
shl
fstpl
mov
bound
xchg
aas
shl
lods
sub
daa
and
adc
inc
sub
out
jg
fdiv
xchg
pop
in
mov
xchg
jge
pop
jle
mov
ret
notl
sahf
jp
xor
cmc
stc
insl
divb
fyl2x
mov
out
orb
xorl
jg
push
inc
scas
or
nop
ret
cli
push
or
xor
test
and
lock
push
jne
in
icebp
adc
add
gs
outsl
xchg
gs
xchg
test
inc
xchg
sub
notb
dec
adc
inc
stos
stos
fcmovbe
add
imul
pop
dec
out
inc
dec
or
das
es
jo
pop
mov
sbb
xchg
outsb
nop
hlt
sbb
mov
daa
add
fs
mov
inc
mov
leave
fiadds
or
xchg
ret
adc
pop
mov
sub
cwtl
mov
jne
push
jl
push
popf
jmp
repnz
adc
mov
lods
mov
and
fsubl
push
loop
add
pop
icebp
ret
mov
mov
lods
mov
andl
mov
inc
clc
cmpsl
add
inc
and
dec
movl
cmp
xchg
int3
lret
nop
andb
inc
mov
mov
in
js
stos
and
loope
jecxz
and
and
mov
push
or
and
arpl
adc
dec
pop
mov
mov
aas
jp
mov
sub
imul
inc
sbb
pop
mov
inc
fadds
out
jnp
rorb
xor
jmp
add
xchg
test
faddl
pushf
lock
cmovb
xor
test
lea
mov
push
fcomps
shl
fcomip
mov
adc
movsl
pop
push
rolb
add
cmpsl
jns
rcrl
inc
sbb
dec
fisubrs
mov
jns
enter
push
mov
fsubrl
lods
or
pop
add
xchg
clc
fidivl
lods
sti
cld
mov
outsl
call
sarl
andb
push
push
lcall
sub
dec
sbb
incl
inc
and
fs
pusha
iret
stos
popl
movsl
mulb
call
imul
in
and
xor
jnp
sbb
xchg
dec
jnp
or
jnp
std
mov
data16
ret
mov
ja
sub
xchg
xor
icebp
dec
imul
mov
mov
popa
dec
mov
es
and
add
mov
adc
ja
dec
jg
fldt
shr
cmp
aas
add
add
mov
out
and
stos
cltd
fs
repz
jne
shll
mov
into
loop
mov
std
add
mov
test
adcl
xor
enter
jne
sub
into
and
movsl
nop
jmp
pushf
out
and
loop
push
add
adc
enter
jmp
dec
inc
stos
in
pop
clc
jae
sub
mov
imul
fcoml
push
lea
pop
in
or
xorl
mov
cli
outsb
imul
and
insl
int3
sarb
push
cmpsb
icebp
pop
pop
outsb
insl
add
jl
jo
lret
cmp
out
sbb
pop
jle
and
push
out
jecxz
mov
lahf
pop
mov
lock
fiadds
clc
test
push
test
lds
or
cmp
mov
lods
cmpsb
or
movsl
jae
orb
push
dec
fildl
jb
mov
aad
lcall
jecxz
lahf
sbb
xchg
pop
bound
sbb
xchg
aad
xchg
sub
movb
nop
push
xchg
nop
cmp
in
jae
cltd
test
cld
pop
ja
lds
lds
mov
cs
mov
mov
fwait
push
mov
xchg
cmc
cltd
cs
in
cmpsl
pop
xlat
enter
arpl
cmpsb
and
add
lcall
xchg
add
or
es
push
and
test
scas
std
or
push
imul
in
dec
mov
cli
out
jbe
cmc
mov
push
repz
adc
scas
jg
mov
enter
aaa
fsubr
jecxz
mov
xlat
jecxz
mov
mov
push
es
insl
shll
out
cmpl
int3
adc
xor
dec
push
cmpsb
inc
scas
cmpl
mov
push
xchg
out
cld
pop
scas
mov
not
scas
pop
jecxz
popa
mov
add
roll
or
jae
aaa
xor
outsb
jmp
sub
or
xchg
clc
mov
sub
lea
cmp
or
push
fnstenv
std
lock
xchg
scas
and
lea
inc
jmp
popf
fists
sbb
xchg
repz
leave
insb
lock
pop
nop
pop
fdivl
into
cmp
cmp
jbe
fbld
xor
dec
test
scas
pop
add
icebp
mov
rorl
imul
push
xchg
push
repnz
mov
mov
aad
and
xor
jmp
jns
inc
jo
scas
in
inc
add
sbb
iret
fstpl
imul
insl
mov
int3
lods
add
and
hlt
sub
adc
mov
xchg
pop
fs
push
rcll
aaa
in
pop
push
mov
inc
pop
cld
cwtl
lock
insb
scas
aad
call
fmuls
push
mov
sub
push
ss
mov
int
sub
xchg
cltd
sbb
xor
arpl
mov
ret
jmp
gs
test
pop
pop
shll
stos
sahf
insl
xchg
sbb
mov
insb
shlb
sub
dec
stos
pop
std
test
in
sub
stos
and
mov
adc
out
shr
lds
fimull
ffree
clc
xlat
jnp
dec
jge
add
push
std
movsb
js
sub
pop
adc
jno
cmove
popa
mov
rol
das
sbb
aas
popl
dec
mov
ljmp
movsb
jns
bts
xchg
in
add
mov
mov
push
leave
sti
lcall
lock
arpl
ss
int3
imul
andl
sbb
cs
cmp
add
aam
sbb
inc
bound
test
or
int
inc
mov
shr
sbb
and
dec
sub
gs
stos
mov
scas
aas
nop
test
bound
xor
mov
cmp
lods
and
ss
push
jp
jnp
jg
popf
mov
out
mov
rolb
push
stos
pop
pop
js
mov
test
lcall
sbb
cmp
repnz
fidivl
scas
sbb
inc
maskmovq
negl
movsb
jmp
inc
out
jle
pop
shlb
cmpsl
nop
fsubr
iret
repz
bound
and
lret
out
sbb
sub
test
sub
mov
das
mov
jo
shlb
add
adc
iret
jns
addr16
ficompl
imul
loopne
sahf
enter
clc
cmc
lret
dec
daa
push
in
in
mov
fwait
mov
adc
shrb
sbb
fsubl
call
fwait
xor
push
dec
clc
imul
and
test
adc
jns
adc
and
stos
pop
or
pop
xchg
data16
enter
outsb
cmp
mov
sti
test
fwait
arpl
or
dec
sub
adc
fcoms
dec
movsb
mov
stc
jge
and
cld
enter
sahf
inc
push
movsb
aam
fildl
adcb
xor
jmp
es
sub
pop
in
mov
jp
out
pop
jb
sti
sti
dec
stc
push
cld
mov
sub
sbb
jnp
pop
in
imul
jmp
xchg
xchg
cmp
xchg
inc
movsl
jno
push
push
test
lret
add
scas
mov
inc
push
pop
fstpt
mov
or
aas
incb
mov
les
gs
mov
push
dec
dec
xchg
jg
pop
sub
cmp
mov
pop
xor
jl
jl
ljmp
ficoms
ja
sub
push
xor
mov
pushl
loopne
dec
inc
mov
add
leave
xchg
add
daa
mov
cmpl
add
mov
mov
ss
pop
cwtl
push
jnp
popa
cmp
gs
rol
inc
int
aas
jne
fisubrs
mov
pushf
lret
in
mov
sbb
cmp
out
add
jmp
xchg
setne
jne
xchg
sub
and
std
push
cli
pop
sub
mov
addl
push
cmp
and
add
inc
cmp
fidivrl
repnz
ss
mov
fwait
insb
cmp
adc
pop
mov
inc
fwait
mov
xchg
push
out
push
cmp
xor
push
pop
push
lcall
fmulp
inc
decb
add
loop
and
mov
insb
add
sti
cld
dec
sti
inc
push
fldt
popf
loopne
stc
inc
andl
or
sbb
pushw
pop
dec
sbb
icebp
pushf
inc
xchg
mov
out
mov
push
add
pushf
enter
jge
mov
repz
cmpsb
dec
aad
sub
arpl
or
pop
fisttpl
adc
cmp
xor
std
fmull
outsb
insl
and
push
adc
sbb
and
sbb
or
setno
daa
sub
jb
pop
dec
xchg
shl
mov
or
psrad
repnz
ret
sbb
sbb
arpl
imul
into
jae
outsb
inc
pop
insb
dec
adc
js
scas
pop
movsb
mov
sbb
jmp
xor
inc
cmpsb
dec
fsubrl
das
mov
push
cmp
mov
ja
fdivs
and
pop
jbe
lods
js
test
dec
daa
rcl
dec
arpl
jecxz
cmpsb
inc
lock
xchg
xchg
jl
in
repz
pushf
mov
lcall
dec
fdivrp
adc
ds
and
mov
lcall
pop
jl
jmp
rcll
andb
fistps
cli
rorb
jle
jnp
add
fdivs
fmuls
cli
aas
push
sub
ret
scas
outsb
sbb
je
mov
jg
mov
mov
adc
adc
add
mov
lret
iret
clc
rclb
lcall
sub
dec
sbb
and
ficoms
out
adc
or
add
or
jbe
ret
mov
subb
pop
call
sbb
or
iret
pusha
add
scas
pop
loope
jno
in
imul
sub
cmc
sarb
sub
int3
ljmp
fs
mov
mov
enter
lcall
js
xchg
jae
ret
pop
inc
jp
add
pop
les
hlt
loop
loop
sub
leave
add
mov
fsubs
adc
test
std
call
or
dec
inc
shlw
insl
adc
dec
cs
repz
cmp
inc
idivb
push
rorb
pusha
scas
jge
jno
iret
in
sub
clc
sub
sbb
push
dec
push
int
xor
leave
hlt
push
in
and
in
mov
inc
jne
pop
addb
ds
sbb
arpl
loope
push
mov
das
out
mov
loopne
push
scas
loop
push
push
pop
test
inc
add
pop
arpl
scas
movsl
pop
aaa
sub
aam
jnp
inc
mov
jns
mov
push
pop
push
or
leave
sbb
cmp
loope
mov
xor
xchg
jg
mov
es
dec
mov
out
and
mov
aaa
rcll
adc
icebp
out
das
push
lock
int3
es
mov
test
pop
fstpt
or
je
faddl
scas
mov
add
cmpsb
in
push
mov
xchg
imul
cmc
xchg
faddl
mov
cltd
pushl
jl
fldcw
scas
xor
mov
iret
xor
pop
andl
outsl
fdivrs
aad
dec
stc
lahf
dec
adc
or
mov
add
jns
jnp
and
dec
jns
fldcw
call
ffreep
or
shlb
mov
mov
enter
test
hlt
add
dec
jns
iret
push
or
mov
lret
xor
fdivrp
dec
je
out
adc
popa
dec
cwtl
or
clc
jmp
out
mov
lahf
inc
push
icebp
add
add
cmp
addr16
dec
sbb
stos
mov
roll
cld
sbb
aaa
jno
gs
xlat
inc
cmp
pop
and
insb
jg
rorl
ret
stc
dec
sub
daa
mov
push
movsl
mov
int
jmp
pop
jle
movsb
movsb
mov
scas
pusha
icebp
insb
inc
in
fimull
scas
xchg
inc
andb
fldt
inc
dec
into
lahf
and
aas
xlat
jmp
sub
aaa
sbb
mov
and
fldenv
in
loope
das
sub
mov
mov
popa
push
sti
stos
push
ss
jmp
adc
mov
sbb
enter
and
push
ljmp
lea
sub
das
cmpsl
movl
repz
lods
fmul
orl
test
or
jno
and
incb
dec
loope
add
adc
pop
rcrb
sbb
xchg
ljmp
dec
out
mov
push
push
gs
lret
and
cmp
mov
xor
inc
dec
inc
rorl
sub
je
cmp
fdivl
jno
jbe
add
jne
fwait
xor
aad
sar
std
sbb
test
sbb
xlat
sub
jb
insl
out
outsb
mov
cmpsl
jecxz
and
mov
and
stos
in
ret
test
xchg
cmpsb
repz
in
daa
scas
sbb
xor
mov
xchg
test
aad
lock
dec
ljmp
mov
or
mov
lahf
push
call
adc
xchg
fimuls
and
test
test
pop
idivl
negb
stos
xor
std
inc
add
scas
mov
add
ds
call
add
cmp
insb
dec
sbb
insb
insb
mov
out
cmpl
sbb
mov
mov
lret
adc
lods
ret
xor
add
nop
mov
jo
cltd
dec
mov
fldt
jmp
lret
std
mov
leave
sti
aam
jae
jle
jbe
ficoms
mov
push
lock
mov
roll
mov
push
jecxz
jg
dec
out
leave
ja
mov
push
test
lds
dec
push
repnz
lods
out
sbb
push
mov
fcmovnbe
jb
mov
or
push
data16
mov
repnz
push
push
bound
addl
adc
fidivs
jnp
adcb
es
addr16
adc
mov
lods
adc
jno
cld
lock
dec
fisubrl
jae
cmp
stos
test
outsl
int3
cmp
sbb
movsb
sub
scas
push
mov
push
push
and
idiv
pop
mov
adc
loopne
push
stc
add
or
adc
les
dec
and
mov
pop
and
jl
add
stos
lahf
xchg
jge
cmp
mov
xchg
add
in
lods
es
and
inc
cmp
enter
pop
add
fisubs
sbb
addb
cmp
xor
loope
sub
push
mov
std
fstpt
xor
mov
inc
lock
cs
outsl
mov
cwtl
loope
in
das
stos
fucomip
xchg
pop
push
push
and
adc
xchg
mov
cwtl
inc
gs
adc
mov
and
jmp
inc
or
push
xchg
test
addr16
test
mov
mov
lahf
lret
mov
mov
mov
mov
or
cmpsb
dec
ja
xchg
mov
incl
int3
xchg
std
imul
mov
sub
mov
fadd
mov
jbe
mov
je
ljmp
cld
mov
lock
xorb
jmp
jae
in
or
scas
sub
sub
popa
cmp
mov
sbb
xchg
jbe
mov
pop
dec
mov
xchg
in
adc
das
push
jmp
loop
cmp
dec
add
inc
lock
es
into
mov
ss
or
aaa
mov
dec
js
inc
fisubrs
gs
shrb
sti
jmp
jge
mov
mov
fs
push
xchg
repnz
shll
xchg
icebp
out
cmp
rorl
and
mov
inc
cmp
lock
insb
sbb
pop
mov
mov
inc
add
repz
xor
jae
aam
xchg
sbbb
orl
push
mov
cmpsl
outsl
icebp
into
mov
jl
stc
or
lahf
outsb
fwait
cltd
scas
es
pusha
mov
xchg
fcomps
rorl
xor
mov
popa
aaa
pop
out
test
xchg
stos
out
test
sti
mov
cmpsb
in
jbe
sub
in
repz
jle,pn
scas
push
cmc
push
add
xorl
mov
repz
fxch
loope
mov
push
filds
jg
mov
push
xchg
xchg
lods
sbb
cwtl
out
jle
dec
pop
cmovl
push
aas
out
xor
shrb
adc
test
and
adc
inc
pop
xchg
pop
pop
inc
cmp
aaa
pop
add
out
push
mulb
aaa
jb
dec
and
cwtl
mov
push
mov
mov
inc
clc
mov
adc
cmc
xor
in
test
test
add
stos
stos
mov
add
test
cmpsb
sbb
lcall
outsl
sbb
test
sbb
cmp
mov
int3
push
shlb
add
sbb
jmp
xor
int
mov
lea
push
jo
popl
inc
jb
out
test
add
add
ds
add
jge
xor
iret
clc
ds
aas
and
push
add
dec
test
add
fsubs
mov
daa
pop
jo
xor
mov
aad
or
leave
fwait
jae
cmp
cmc
lock
xchg
inc
insl
adc
add
sbb
and
and
or
mov
sub
mov
mov
insl
adc
mov
push
test
mov
rorb
mul
mov
push
arpl
sub
add
jo
fistpll
dec
mov
cmp
scas
roll
shl
push
pop
pop
dec
sub
sti
in
pop
rol
jge
xchg
lea
xlat
pushf
outsl
enter
data16
scas
xchg
add
dec
es
xchg
lods
test
addl
xchg
jecxz
call
das
out
sbb
arpl
jne
add
out
cmp
lds
mov
mov
je
mov
push
pop
jmp
lods
ljmp
or
inc
outsb
push
xor
outsl
ljmp
xchg
mov
sub
mov
cli
push
push
shll
fnstsw
cmc
fcmovne
bound
or
cli
dec
testb
into
js
cmp
rclb
inc
mov
movsl
jbe
arpl
dec
xor
sbb
sbbb
inc
mov
push
cmp
call
movsb
lock
aas
jmp
fdivrs
bnd
or
xor
or
adc
addr16
sbb
xchg
lret
cmp
fwait
cmp
aam
cli
dec
repz
outsl
xchg
mov
out
inc
dec
cmp
mov
mov
imul
add
movsb
pop
rcll
arpl
stc
fimull
add
push
sbb
xor
call
push
bound
pop
jo
iret
pusha
add
out
sbb
jbe
cmp
lcall
out
je
sub
mov
scas
lret
jle
insb
xchg
arpl
pop
pop
lods
repz
fildl
xchg
repnz
push
or
xchg
adc
fdivs
cli
push
aaa
jnp
mov
cmpsb
mov
and
or
mov
push
outsb
or
cld
sub
cltd
mov
jno
test
jle
push
inc
jmp
pop
lret
inc
mov
or
adc
mov
jge
jae
push
out
and
pushf
dec
jecxz
icebp
movsl
es
sbb
lods
push
xchg
cli
inc
roll
adc
js
les
and
enter
dec
gs
pop
xor
adc
mov
int3
add
movsl
outsl
push
cld
sar
mov
pop
nop
in
je
mov
lock
loope
pushf
jge
in
or
jb
fbld
mov
sbb
cmpsl
push
pop
push
fld1
xchg
je
test
call
adc
mov
daa
insl
icebp
test
insb
fstpl
into
jo
push
or
mov
sbb
add
test
popf
cmp
mov
add
test
adc
popa
fsubrs
sti
mov
xchg
adc
data16
inc
ret
mov
sahf
dec
xor
add
dec
mov
push
repnz
int3
das
mov
mov
clc
shrb
mov
mov
dec
lods
pusha
movsl
mull
addr16
aam
sahf
jae
fistpll
adc
cmc
jnp
xchg
mov
inc
mov
call
loopne
mov
ss
mov
test
test
aaa
xchg
and
fs
icebp
das
rolb
xchg
andl
mov
mov
aam
hlt
xchg
lds
pop
add
add
or
adc
test
int
rcrb
push
sti
sub
fstps
mov
les
mov
cmpsb
mov
inc
subb
sahf
push
dec
fcomp
pop
cmc
cmpb
int3
testl
adcb
xchg
jp
pop
xor
imul
cmp
jg
cmp
outsb
jp
mov
stos
xor
dec
call
popa
je
pusha
mov
test
mov
push
jne
sti
inc
adc
stos
inc
call
andb
enter
jo
mov
push
fwait
daa
hlt
inc
adc
jmp
bound
in
mov
inc
jle
lods
mov
sub
add
leave
cmp
rorl
enter
sub
add
in
sub
jp
fstpt
mov
add
or
imul
mov
lock
adc
jne
mov
mov
push
sti
cmp
push
jno
adc
icebp
jmp
je
or
jl
jp
adc
ljmp
cmp
shlb
test
adc
xor
xor
jle
leave
push
xor
in
ret
sbb
dec
insl
mov
and
fldcw
scas
dec
rcr
leave
cs
repnz
in
and
les
add
cli
dec
loope
push
jae
cmpsb
int3
das
jbe
push
fsubrp
setne
adc
in
cld
mov
mov
pushf
or
and
addr16
xor
aas
xchg
xchg
push
push
loop
adc
lahf
mov
and
cld
ljmp
cmc
pop
add
popa
jb
out
add
xor
mov
out
pop
and
mulw
inc
pop
in
push
inc
or
lret
jns
inc
fwait
sub
or
call
in
cmp
sbb
fisubrs
fidivs
lds
and
scas
movsb
cs
xchg
test
mov
sbb
xor
popf
jnp
push
mov
bound
sbb
xor
clc
aad
add
push
mov
mulb
fadd
mov
in
ds
adc
js
push
cmp
and
mov
test
imulb
xchg
cmc
dec
shlb
mov
add
jmp
xor
mov
iret
cmp
repnz
mov
out
sarl
sbb
gs
dec
add
ljmp
imul
cmp
pop
cmp
addb
adc
xchg
adc
push
or
mov
addr16
mov
iret
daa
aaa
push
loop
fsts
incb
or
pop
dec
sub
roll
icebp
daa
sub
bound
push
or
popa
je
loope
repz
lods
loop
mov
roll
inc
push
push
ja
rorl
xor
leave
incb
mov
sahf
mov
sub
push
and
jl
or
outsb
ret
pop
lods
inc
rcrb
test
aas
pop
aad
push
mov
sub
test
pop
add
lds
enter
sbb
fmull
pop
dec
movsb
call
pusha
setb
or
cmp
push
out
shll
subb
dec
and
adc
or
hlt
mov
mov
loop
adc
and
mov
inc
cli
inc
ja
frstor
cmpsb
mov
lods
fst
jae
mov
idivb
jne
fiadds
mov
stc
flds
ret
inc
ds
sub
jno
data16
add
mov
xchg
andb
mov
and
filds
dec
sub
lcall
xchg
pop
push
lcall
leave
mov
cwtl
sub
mov
rcrl
push
aas
cmpsl
inc
xor
fdivr
js
in
stos
sbb
pop
insl
mov
or
bswap
cmpsl
dec
mov
xchg
shr
sbb
sbb
and
in
or
aas
inc
jle
push
fcmovbe
mov
mov
mov
cmpsb
mov
mov
inc
fisubrs
int3
mov
data16
inc
cli
mov
adc
or
inc
dec
lds
pushf
test
push
shll
and
jbe
addr16
roll
lea
into
out
jo
push
mov
xor
xchg
std
test
xchg
xor
push
aam
incl
push
jge
orl
in
mov
xchg
lahf
or
nop
idivb
cmp
enter
cmp
fldcw
xchg
cmp
pop
xchg
dec
pop
aad
fstpl
cli
xor
jno
xorl
outsb
outsl
add
loopne
adc
mov
roll
fsubs
cmpsl
inc
add
leave
mov
cli
push
sbb
xor
push
or
or
stos
mov
test
int
mov
push
lret
xchg
add
cld
adc
xchg
jmp
jl
jmp
adc
sub
adc
and
fldl
push
pop
scas
sub
loopne
shll
shlb
sbb
push
stos
jle
push
jno
es
pop
lods
inc
prefetchw
sbb
xor
inc
mov
dec
or
mov
add
and
jge
mov
mov
mov
pop
jp
jecxz
pop
add
cmp
inc
mov
mov
push
iret
inc
pop
dec
push
fbld
xchg
mov
ja
fidivs
popf
popa
movl
pop
fbld
pop
dec
mov
mul
inc
cmp
cmc
pop
ds
ljmp
jne
std
ds
mov
test
push
sbb
in
adc
sbb
cld
xchg
xchg
pop
cmp
pop
inc
pop
pop
fs
out
idivl
push
sub
mov
cmp
mov
sbb
and
icebp
lock
aas
xor
fistpl
pop
inc
jge
inc
and
mov
inc
mov
hlt
sahf
xlat
sub
sbb
js
xor
lea
pop
jb
mov
daa
insb
xchg
or
nop
pop
shrl
arpl
adc
movsb
push
int
nop
jp
xchg
shr
pop
sub
pop
outsb
sti
sub
icebp
sbb
popa
xor
cmp
pusha
movsl
and
std
xor
dec
and
sbb
ud1
dec
pop
iret
scas
cmp
push
sub
popa
popa
mov
dec
shll
or
or
ja
xchg
xor
dec
mov
or
pop
je
roll
and
ret
or
loope
dec
xor
das
and
in
cltd
sub
or
inc
jns
ss
int
mov
mov
cmp
fisttpll
push
add
jle
xor
pop
lock
push
int3
in
sbb
cli
ret
shll
in
iret
sub
ja
out
fs
imul
shlb
jnp
movsl
lret
mov
pop
ljmp
sub
inc
xchg
add
sarb
xor
les
sahf
mov
inc
mov
movsl
test
xchg
xlat
inc
shll
pop
sub
out
rcll
lret
fimuls
repnz
and
mov
push
cmc
or
jno
jne
sub
or
fdiv
out
lds
mov
js
cmp
addb
aad
jle
fs
sbb
les
mov
and
pushf
cld
in
mov
xchg
ss
ror
std
addl
xchg
lods
aaa
jge
pusha
notl
scas
xor
popa
aam
jnp
ret
lret
dec
xchg
mov
sub
jg
std
pop
cmp
lret
sub
pop
sbb
aam
scas
movb
clc
dec
out
jns
mov
pop
bound
sbb
sar
xchg
lds
xor
inc
mov
and
rcrb
cmp
rcr
jo
xchg
neg
ret
sub
in
ljmp
sub
sahf
and
adc
lock
mov
movl
push
sub
out
test
push
add
fcomi
rcll
jmp
push
adc
lcall
test
daa
inc
cld
ja
stos
push
xchg
pusha
pop
mov
loop
inc
cltd
mov
mov
mov
cld
ret
sbb
mov
adc
cmp
mov
enter
xchg
les
sbb
pop
xchg
mov
pop
xchg
xor
adc
or
or
sbb
dec
xlat
mov
and
xor
mov
xor
mov
or
imul
xchg
call
iret
add
adc
mov
fsubrl
or
inc
sub
int3
jge
aaa
pusha
ss
aad
pop
out
gs
rcrl
out
sub
lods
pop
push
movsb
dec
dec
sub
imul
sahf
jb
pop
and
lret
jge
sub
daa
pushf
icebp
xorb
or
adc
push
das
popa
loopne
hlt
orl
ljmp
mov
xor
mov
xchg
mov
and
lds
mov
shll
call
mov
stc
sbb
fwait
idivb
lds
ret
mov
fnstenv
and
mov
sub
xor
sbb
xchg
imul
sbb
mov
lahf
pop
cltd
xor
test
pop
jle
xchg
push
repnz
aaa
shlb
sbb
popa
outsb
das
dec
scas
pushf
mov
adc
xor
call
inc
adc
fmull
ljmp
mov
jo
push
mov
inc
fcomp
add
xchg
into
add
mov
shlb
int
push
dec
ds
jmp
push
ds
or
dec
push
jb
cmp
and
call
lahf
xor
in
popa
scas
lcall
ret
icebp
out
addr16
and
std
jns
adc
shr
loope
xchg
insl
mov
and
mov
lods
mov
sbb
dec
je
xor
mov
aad
sbb
fcompl
sbb
and
sbb
cmp
mov
loop
fnstcw
sbb
mov
pop
adc
imul
jl
or
outsb
fdivl
loop
pop
dec
jmp
icebp
adc
xchg
add
lock
leave
insb
test
or
pop
lahf
je
popf
loop
das
jns
aaa
stos
mov
xchg
cmp
rcrb
sub
add
inc
xchg
loopne
and
ficomps
dec
in
loop
or
outsl
gs
fs
xchg
enter
push
xor
imul
lods
mov
cmc
or
stos
mov
ret
mov
pop
jecxz
mov
xchg
sbb
add
sbb
jnp
lods
js
inc
inc
loope
jmp
and
dec
insl
aam
and
sbb
dec
fldl
pop
xchg
popf
or
lret
movsb
test
dec
dec
addr16
lahf
roll
pop
test
xor
sbb
adc
adc
mov
mov
jae
test
nop
mov
stc
mov
mov
or
dec
aam
cmp
hlt
cmp
inc
mov
mov
inc
cwtl
jb
es
fcomps
loopne
rorl
push
dec
or
divl
int
insb
cmpsb
jae
jnp
mov
jno
inc
addl
sbb
nop
xchg
or
aam
dec
mov
and
icebp
mov
cmp
add
lock
pop
movq
pop
push
fsubl
loop
stos
pop
push
xchg
xor
or
scas
xchg
scas
push
jmp
test
enter
jp
mov
ja
inc
jge
call
ret
add
int3
mov
add
mov
sbb
loope
push
add
int3
subb
jb
or
aad
mov
mov
icebp
aad
addl
ror
lahf
call
loop
xor
xchg
inc
insl
cmp
icebp
jmp
xchg
dec
mov
mov
fnsave
jge
xor
out
push
cltd
xchg
add
add
fimuls
nop
push
adc
cmp
pop
jecxz
and
mov
js
ret
out
mov
mov
dec
pushf
mov
dec
or
pop
add
mov
inc
lock
mov
daa
les
cmpsl
out
fs
stos
out
jae
jl
xchg
mov
out
dec
xchg
out
rclb
repnz
cwtl
mov
xor
add
xor
and
sub
push
mov
add
lods
je
jmp
test
mov
sarl
pop
add
ljmp
pushf
js
xor
or
fmuls
loopne,pn
mov
xor
push
pop
jg
roll
sti
mov
mov
push
pop
jmp
fildl
dec
cmp
aaa
dec
xchg
xchg
in
xchg
in
xchg
push
shlb
push
xorb
xchg
lahf
add
cmp
insl
and
scas
fdivrs
push
stc
jle
jno
pop
push
clc
cmp
rcrl
rclb
lock
les
and
nopl
jle
dec
add
test
xchg
out
xor
mov
dec
sbb
incb
push
sub
pop
cmp
data16
jle
cli
add
or
cs
mov
inc
sahf
ds
dec
lcall
mov
nop
cs
adc
add
lret
mov
in
negb
out
ss
into
rorb
adc
add
and
sbb
popa
mov
push
mov
imulb
je
arpl
test
into
sbb
sbb
dec
nop
mov
roll
je
jnp
and
xchg
rcl
mov
imulb
outsb
push
fldl
mov
adc
outsb
movntq
mov
jne
stc
aad
psubw
adc
push
daa
out
mov
lret
ror
in
cmp
icebp
out
inc
inc
cmp
cltd
cmpsb
pop
mov
lcall
bnd
mov
fnstsw
jns
jnp
packsswb
xor
mov
inc
fimull
add
dec
xchg
in
stos
cli
enter
stc
dec
dec
sbb
shrb
clc
push
fwait
xchg
mov
lahf
jl
push
xor
mov
das
fs
jns
repz
aam
dec
mov
or
movl
and
pop
das
xor
xchg
test
jge
and
out
ljmp
pop
sub
xchg
repnz
lock
cmpl
shrl
jae
fdivl
orb
push
mov
mov
in
shll
inc
jp
fldenv
imul
inc
popa
push
push
js
fisttps
fnsave
and
sub
scas
adc
movsl
cmp
hlt
mov
repz
mov
cvtdq2ps
sti
mov
frstor
sub
xorl
cmpsb
jp
cmpsl
sahf
decb
sbb
out
sub
test
xchg
and
xchg
mov
imul
mov
add
cmpsb
jb
adc
outsl
loope
pusha
mov
outsl
aad
ror
clc
xchg
and
enter
cmp
mov
lahf
mov
cmc
jmp
sub
movsb
or
pop
aam
fimuls
mov
mov
sbb
jmp
fsubl
nop
mov
divb
inc
ds
jmp
adc
xchg
xchg
test
repz
fnstenv
mov
xchg
or
bound
into
pushf
cmp
fstps
cwtl
add
repnz
scas
mov
loope
xchg
mov
mov
jecxz
sbb
cmp
xchg
jno
or
call
rorb
jae
dec
xchg
mov
mov
fcoms
sub
in
sub
ss
test
mul
mov
out
mov
pop
and
xchg
test
inc
or
rorb
cmp
fists
lea
cmp
fdivr
mov
dec
lret
bound
pop
or
dec
je
and
arpl
popf
clc
cmpsl
fwait
add
dec
add
jl
mov
sub
mov
insb
mov
xchg
jns,pn
fmull
xchg
ja
cmpsb
lret
in
rorb
lods
xor
jae
xchg
rorl
mov
sti
xchg
aaa
and
cmpsb
jo
in
cwtl
test
xchg
mov
mov
jmp
cmc
mov
xlat
sahf
shl
shll
sbb
pop
inc
adc
jae
jmp
cmp
mov
xor
mov
xchg
xchg
cld
pop
or
cltd
scas
mov
jne
enter
push
rolb
push
fmuls
push
hlt
mov
int
lds
sbb
mov
ja
jno
or
jbe
cmp
leave
cmp
xor
push
push
jmp
push
dec
mov
pop
adc
lock
mov
int3
es
ljmp
imulb
les
rcl
daa
cs
mov
jbe
push
jnp
mov
stos
push
mov
xchg
ja
cli
les
addr16
popf
adc
aam
xchg
insb
mov
fcomps
xor
dec
push
lea
push
xor
ljmp
out
or
mov
cli
das
push
bound
add
inc
xchg
push
ret
jbe
das
mov
dec
out
shr
cmp
addb
add
or
stos
push
mov
sbb
inc
shll
jl
add
push
add
leave
nop
scas
popf
pop
popf
bound
cmp
ss
addr16
push
xchg
lret
pop
push
push
or
insl
xchg
pop
sbb
mov
shl
leave
rcrb
push
adc
jp
mov
jo
testl
inc
mov
out
mov
jmp
jb
cmp
dec
pop
fldl
daa
out
ret
and
pop
fnstenv
mov
cld
aas
cmp
cwtl
jae
out
mov
imul
or
stos
adc
sub
push
stos
test
pop
movsl
je
sarb
nop
push
sub
and
mov
jb
mov
faddl
add
es
and
jnp
movsl
sbb
xlat
sti
scas
mov
shrb
mov
mul
inc
sbb
add
push
stos
leave
fistpl
sbb
ds
stos
fnsave
int3
cmp
data16
enter
pusha
sub
xchg
out
sub
or
jnp
pop
jp
jnp,pn
icebp
jl
xchg
sbbl
cvttps2pi
popf
int3
and
pop
jb
jmp
repz
arpl
fmul
insb
popa
lds
mov
in
imul
sub
xchg
repz
mov
xor
shl
add
ficoml
int
imul
xor
insl
pop
ljmp
fwait
stc
adc
jno
pop
jns
dec
lret
pop
fiadds
xlat
mov
movsb
or
lea
popf
cmp
add
xchg
std
or
push
or
dec
and
add
arpl
lret
aas
sahf
out
mov
pop
outsl
ss
movsl
cs
xchg
cmpsl
or
jns
push
aad
and
out
stc
and
cmc
xchg
outsl
push
inc
test
test
push
call
in
sbb
sub
jbe
or
mov
popa
jecxz
jle
scas
fwait
orl
pop
js
cmp
push
jle
push
cwtl
sub
and
and
sti
cmpsb
inc
lock
les
subb
js
cld
mov
mov
and
insb
shll
jmp
pop
pop
push
xchg
ret
movsb
sub
scas
dec
insl
scas
daa
loop
mov
mov
lahf
jecxz
pop
lahf
mov
inc
ret
mov
lods
mov
neg
pop
les
add
adc
jg
and
dec
das
hlt
adc
pop
stos
jle
push
add
fs
cmp
data16
lock
mov
inc
lret
mov
cmp
fs
push
imulb
inc
xor
out
sbb
dec
or
add
std
xchg
mov
sub
jo
xchg
mov
out
stos
cmc
push
or
mov
testl
pop
insl
mov
and
subb
inc
or
push
ljmp
fsub
bound
pop
cmp
xchg
popf
xor
popl
inc
movsb
lds
mov
mov
sahf
xor
iret
mov
out
enter
xchg
cmp
lea
jle
dec
add
mov
dec
mov
scas
test
mov
movsb
loopne
push
daa
in
es
cwtl
xchg
ja
stos
cmp
aas
int
and
push
or
out
pusha
sub
cmp
push
cmpsb
outsb
out
xor
cmp
and
sbb
shl
stos
jb
jo
dec
push
pop
in
and
fsubr
push
xchg
pop
mov
rcll
mov
mov
or
int3
fwait
inc
cmpsl
push
jmp
fildl
pop
aam
int
inc
pop
test
jb
lea
lods
nop
jmp
xor
xchg
push
mov
lods
mov
sbb
xchg
int3
testb
les
add
inc
stc
movsb
aaa
stc
scas
inc
xchg
stos
cmp
into
test
sbb
sbb
fildll
and
imul
cmc
in
mov
and
and
sbb
mov
mov
or
outsb
mov
dec
inc
rcr
sbb
rolb
xchg
insb
loope
inc
icebp
and
shlb
mov
pop
ficompl
mov
cltd
cmpsl
aad
sub
dec
xchg
inc
xchg
xlat
push
popf
xor
in
mov
imul
or
xchg
sahf
push
or
mov
add
jge
add
call
jae
outsb
inc
xor
outsl
notl
xchg
xor
and
push
imulb
mov
or
mov
es
fwait
cmp
cmc
incb
push
adc
stos
cmp
xchg
pop
fwait
test
xor
push
inc
jb
push
in
dec
push
sbb
and
sti
aad
mov
mov
popf
push
inc
xor
dec
lcall
shll
sub
cmp
inc
mov
pop
es
rclb
cmp
aam
mov
outsb
sub
loop
jmp
mov
nop
pop
jo
pusha
and
xchg
cld
mov
fisttpl
nop
stc
repnz
aas
sub
sub
xor
neg
rcrb
add
repnz
mov
mov
clc
dec
daa
adc
push
xor
lret
in
jae
mov
mov
cmp
dec
int3
dec
mov
cmc
popf
and
jge
push
out
test
das
mov
pushf
xchg
insl
jge
cltd
jecxz
gs
push
lcall
test
sub
in
dec
add
jo
adc
xchg
insb
mov
mov
iret
inc
pushl
test
jne
rcrb
sbb
add
jg
jne
xchg
cmp
decl
rorl
pop
int
mov
mov
jo
fcomps
or
shlb
inc
shll
sti
inc
rorl
lods
test
lcall
and
cli
orl
or
or
jae
nop
jo
mov
cmp
fidivrl
fistl
push
fbstp
rcr
dec
in
movsl
orl
flds
jg
and
sbb
jno
dec
in
lods
xor
inc
cmp
incl
inc
mov
mov
or
inc
push
in
jl
rcl
cld
inc
fcmovnu
jge
adc
addr16
dec
mov
cs
add
in
cmp
xchg
ret
jmp
lcall
xor
jns
leave
popf
scas
mov
cmp
xor
dec
dec
gs
jmp
scas
adc
cs
or
push
jl
jge
out
imul
and
aad
lcall
mov
call
push
fdivl
add
or
xlat
mov
lock
dec
jo
ds
sbb
pop
aam
xor
pusha
inc
mov
sbbb
adc
movsl
jne
mov
mov
daa
xor
rorl
xor
mov
and
xchg
push
add
pop
leave
jge
lds
movsl
test
jmp
shll
fldt
xlat
sub
insl
stc
push
xchg
inc
iret
lret
mov
imul
arpl
jo
cmp
sub
pop
ret
mov
mov
xchg
jae
mov
mov
push
addr16
jg
shrb
fbstp
mov
xor
and
roll
cmpsl
push
arpl
pusha
repz
xor
lret
mov
jp,pt
mov
or
test
sbb
clc
mov
cmp
jmp
mov
in
test
clc
xchg
insb
cmpsb
cmp
data16
jg
loopne
mov
aam
xchg
sbb
mov
add
mov
es
pop
xchg
mov
or
ja
int
bound
inc
aam
stos
and
in
adc
popa
and
pusha
fwait
fmull
repnz
nop
xchg
and
jg
imul
sbb
incb
push
xor
stos
ljmp
mov
loop
fcomip
dec
push
mov
cwtl
movsl
lock
jae
cld
adcb
adc
dec
pop
sub
jb
shll
imul
mov
xchg
pop
add
pop
mov
mov
lret
adc
or
sub
and
push
xor
jnp
cld
dec
ds
loop
movl
or
rorl
mov
mov
stos
xchg
clc
nop
mov
mov
and
in
popf
inc
jmp
mov
dec
mov
adc
sti
mov
jl
sbb
push
jnp
lds
sbbl
add
push
or
sti
cmpsb
stos
push
dec
pop
movsb
mov
sti
inc
mov
cmc
std
in
xchg
scas
mov
cli
fldt
ficoml
mov
in
push
repnz
mov
fisubrs
xchg
lea
in
push
cmp
jno
add
add
push
pop
xchg
out
xchg
sahf
lret
inc
add
or
add
daa
lods
pusha
cwtl
icebp
xlat
test
and
xchg
inc
add
pop
rcr
js
test
pop
out
repnz
mov
and
in
ja
mov
xchg
data16
imul
jmp
adc
mov
movsb
shlb
xlat
in
cltd
imul
lret
cmp
rcll
mov
enter
sbb
addb
mov
imul
add
push
xor
fcompl
das
jns
bswap
daa
jge
pusha
cmpsl
pop
fcoms
mov
cmpsb
xchg
aas
push
lea
xchg
mov
out
rcll
enter
jp
push
clc
dec
shll
mov
adcb
adc
xchg
sti
jno
push
mov
lahf
adc
ljmp
sar
mov
loopne
dec
pop
movsl
cmp
or
sub
int3
cmc
sub
inc
sti
push
int3
and
std
cmp
mov
int3
mov
cs
lea
xor
aaa
loopne
cmp
xor
or
add
jb
pop
les
filds
push
std
sti
ss
jmp
lcall
sbb
out
dec
mov
cmp
xchg
push
jl
mov
and
jl
sbb
inc
cltd
jge
sti
push
iret
lret
push
scas
arpl
lret
or
mov
ficoms
jg
mov
loop
cmpl
loopne
and
movsl
jno
frstor
push
fld
jne
mov
and
ja
jecxz
dec
inc
scas
enter
jo
popa
sahf
fldcw
jb
jne
aad
adc
sub
iret
fsubrp
leave
adc
js
int3
cmp
xchg
jno
pop
cmp
push
jge
sti
or
pop
or
dec
jecxz
xchg
popa
jb
mov
pop
mov
or
push
mov
out
jecxz
iret
push
sti
loop
and
adc
hlt
and
cltd
xor
add
das
pop
fisttps
aas
imul
adcb
fs
xchg
push
push
fisttpll
shr
xchg
xlat
icebp
adc
jbe
xchg
std
lock
adc
ljmp
rorb
incb
shl
int
and
mov
xor
lds
enter
out
imul
xor
icebp
sub
ss
xorl
cmc
bound
add
div
aad
divb
push
dec
hlt
int3
or
in
cld
pop
jb
sub
fs
sub
jmp
ffreep
popf
xor
test
aas
add
dec
sti
test
jecxz
dec
insb
xor
add
in
insl
scas
sbb
add
push
mov
push
jns
ret
dec
pop
inc
inc
dec
mov
cwtl
xchg
pop
pop
iret
push
inc
fs
gs
mov
xor
and
jne
bound
dec
in
imul
pop
jns
hlt
fistpl
mov
lea
add
jbe
sbb
std
xchg
stos
ja
sbb
inc
jno
xchg
stos
adc
push
push
inc
ss
pop
sbb
mov
repz
add
neg
sub
orl
sti
aad
loopne
stc
mov
push
mov
test
movsb
push
dec
inc
fcoml
imul
inc
lods
dec
or
push
fisubs
and
jno
xlat
mov
jl
add
cmp
xchg
andb
test
std
fimull
scas
dec
mov
add
pop
ljmp
mov
ja
and
or
inc
int3
stos
dec
jno
adc
cmp
pop
sti
sub
cwtl
push
pop
mov
int3
mov
xor
das
or
push
pushf
shlb
mov
test
and
mov
jnp
insl
aad
pop
out
lds
loope
dec
outsl
pushf
sbbb
lcall
das
dec
cmp
pusha
shr
in
xor
pop
les
das
gs
jb
cltd
jno
and
test
lock
aam
cmp
dec
cltd
shll
cltd
cld
lahf
push
pusha
subl
sub
in
inc
jnp
jae
scas
repnz
mov
das
cmp
jmp
push
cltd
jmp
mov
repz
sbb
xor
push
nop
push
lret
add
je
inc
or
jbe
jp
stos
pop
lods
xchg
test
push
dec
data16
aaa
mov
adc
sahf
loopne
scas
mov
push
lahf
data16
fmull
jnp
mov
leave
pop
addl
cmpsb
cmpsb
dec
push
pop
and
inc
adc
jg
fstl
fistps
sub
mov
out
push
push
outsb
xlat
xor
inc
xchg
cwtl
ljmp
rdmsr
jb
mov
add
mov
cmovbe
push
iret
test
js
mov
jns
xor
scas
and
mov
int
insl
bnd
or
push
sbb
cmp
cmp
jnp
inc
test
iret
xchg
lret
rcrl
inc
jo
movsl
stos
cld
push
pop
sub
pop
cltd
mov
dec
loop
test
int
xor
adc
fsub
gs
out
loopnew
dec
lea
fnstcw
xchg
jbe
mov
xchg
dec
mov
inc
gs
sub
ficoml
dec
mov
movsl
xchg
sub
repnz
add
nop
xor
jo
jns
mov
sbb
push
cmc
jo
ret
rcrb
jmp
loopne
pop
jg
jb
sti
or
add
jp
inc
test
cmp
test
jnp
inc
fisubrl
mov
adcb
daa
dec
jle
adc
push
jns
and
push
mov
jp
dec
adc
pushf
sti
xchg
iret
push
pop
cmp
ljmp
pop
shrl
pop
jmp
xor
mov
ds
adc
ficompl
mov
dec
out
insb
sub
sub
mov
mov
fbstp
cmp
fistpll
enter
clc
bound
pushf
loope
rorl
imul
das
loopne
nop
icebp
sbb
mov
hlt
inc
adc
fsubrl
stos
xor
dec
and
cmp
movsb
stc
fwait
and
push
push
fsubr
sub
inc
xchg
pop
in
add
mov
mov
dec
into
add
fwait
xlat
cs
scas
cltd
popa
jl
xor
sub
sbb
cltd
push
sbb
insl
imul
dec
xor
pushf
and
adc
jge
dec
sub
pushf
sbb
push
cmp
subb
rcrl
inc
xor
inc
fwait
pop
xchg
cwtl
shll
cmpsl
cmc
out
adc
fisttpll
or
push
or
fcompl
outsb
clc
inc
shll
in
and
inc
out
push
add
add
sub
mov
cmp
iret
ss
jns
sahf
sub
stos
js
lret
or
call
sbb
cmp
mov
inc
hlt
insb
and
lcall
push
idiv
or
pop
or
lds
mov
adc
fs
das
inc
inc
add
mov
dec
lret
inc
mov
daa
jle
std
fildl
cmp
pop
jbe
adc
fwait
dec
sbb
leave
cmp
testl
jo
dec
lahf
movsb
or
inc
fsubrs
jb
jno
sbb
test
hlt
jp
push
pop
out
pop
jecxz
adcb
cmp
lahf
iret
ficomps
cld
push
lcall
and
pop
adc
xor
mov
xchg
movsb
mov
insb
fs
leave
in
leave
imul
test
dec
in
popa
std
repnz
push
testl
add
aas
fnsave
push
and
mov
fistpll
pop
incl
jbe
out
movsl
pop
or
loopne
sub
and
movsb
orl
stos
in
orb
test
cltd
ficoml
mov
sbb
insl
in
ret
dec
popa
xor
faddl
das
mov
loopne
sbb
cmp
lahf
sbb
dec
adc
mov
orb
ds
mov
dec
adc
loop
jge
sbb
es
mov
and
adc
mov
push
jmp
sub
lea
stc
fs
lahf
xchg
push
push
cmc
out
xchg
and
ret
dec
adc
mov
xchg
adc
jg
loope
or
mov
sub
pop
inc
push
mov
inc
xchg
xchg
add
out
mov
mov
sub
dec
movsb
fists
sub
insl
fistps
das
mov
repnz
dec
jmp
xchg
xchg
mov
out
imul
adc
cmp
sub
out
out
lods
pusha
mov
or
loope
sub
in
test
or
popf
iret
xchg
hlt
sub
lods
push
jecxz
sub
cmp
pop
push
pop
cs
adc
adc
imul
inc
rcrb
mov
jb
or
sub
mov
fnsave
lret
outsb
and
mov
mov
dec
notb
fstps
out
xchg
bound
mov
and
mov
add
push
mov
adc
mov
add
outsb
push
pop
nop
mov
sub
ds
adc
jne
inc
js
inc
mov
ljmp
lret
in
and
mov
adc
aas
fisubrs
mov
push
sbb
mov
xor
lea
jnp
dec
movaps
xor
sbbb
repz
es
mov
icebp
and
jge
and
stc
fwait
popf
xlat
mov
push
lcall
aaa
sub
sbb
adc
out
sub
pop
rclb
mov
sub
lods
test
imul
mov
xlat
push
push
pop
ss
adcl
mov
jp
pop
in
cmp
add
xchg
xor
adc
call
lea
pop
push
or
xchg
out
pop
jl
xor
mov
mov
sub
dec
test
xor
xor
inc
mov
push
mov
aam
stc
sub
jne
jmp
mov
lods
icebp
out
or
sbb
dec
sub
add
mov
in
cld
xor
or
dec
mov
add
fstps
xor
das
mov
lds
sbb
pop
mov
lret
jnp
nop
mov
lret
xchg
outsb
dec
jge
jae
fwait
or
inc
repz
sahf
mov
pop
xor
hlt
sahf
ja
sbb
mov
lcall
testl
mov
jge
insl
imul
neg
inc
cmpl
mov
push
and
out
pop
jo
stos
or
dec
xchg
sbb
cli
jne
int
out
xchg
jb
in
sarb
jle
popa
repnz
xchg
gs
push
adcb
frstor
sarb
push
pop
pop
push
loope
mov
stos
fs
ret
popa
jo
adc
xchg
test
dec
or
mov
cli
adc
add
push
adc
je
pop
lret
mov
js
movsl
sahf
mov
sub
mov
pop
or
pop
inc
inc
jns
ret
nop
into
xchg
xor
dec
cs
or
jae
fsubr
aam
cmpsl
jb
mov
clc
stos
repnz
cmp
mov
mov
dec
xchg
jp
ror
xchg
jae
pop
shll
sbb
outsl
push
ret
jne
jb
and
inc
push
lahf
cld
xor
xor
sub
scas
cmp
aas
sub
pop
cmpsb
dec
jle
sub
cmpsl
sbb
xor
adc
adc
scas
jge
jnp
push
les
jnp
ss
loop
pushl
lea
mov
cli
mov
inc
into
sbb
pop
ret
mov
pop
out
jp
mov
stc
out
rcr
shll
repz
daa
insl
in
int3
adc
push
rol
out
out
aam
dec
mov
stos
cmpsl
cmp
push
sbb
fimuls
jo
xor
pushf
push
imul
mov
out
mov
loop
inc
jno
mov
sbb
xchg
push
gs
stos
mov
or
xor
mov
xlat
mov
xchg
fistl
dec
jnp
mov
dec
hlt
lahf
mov
subb
loopne
mov
jns
jb
ds
jg
repz
mov
fcomps
and
outsb
push
xchg
mov
mov
test
mov
enter
sub
and
push
mov
push
in
in
pop
leave
mov
pop
sbb
test
push
or
icebp
xor
test
jbe
mov
sub
mov
cmp
pop
sub
icebp
int
xchg
out
mov
out
push
jno
lcall
or
popf
lret
enter
pop
sub
fwait
mov
add
lds
stos
data16
push
jmp
mov
jmp
ss
push
inc
outsl
in
push
fdivr
loopne
mov
ret
cmpsb
dec
mov
mov
inc
mov
cli
outsb
fisttps
in
loope
popa
mov
mov
pop
mov
ret
pop
aam
mov
inc
sbb
push
adc
sub
or
dec
rcll
jmp
and
mov
fstl
push
mul
pop
mov
mov
in
mov
movsb
lret
cmp
icebp
lods
inc
jl
sub
int3
sbb
ret
jnp
push
jmp
les
dec
fistl
rolb
outsb
outsw
pop
fs
cmp
lret
sbb
xlat
xor
jle
adc
outsl
int3
call
mov
adc
aas
fdivp
ds
or
xchg
push
jnp
cwtl
dec
pop
pop
test
lods
lods
or
and
jbe
arpl
aam
test
push
fimuls
movsl
mov
stc
dec
jmp
jle
add
addr16
outsb
scas
stos
xor
cld
inc
xlat
push
mulb
lds
test
and
std
pop
cli
xor
in
adc
aad
bound
loopne
js
dec
popf
ja
or
dec
sub
loope
rcrl
sbb
push
in
push
pop
dec
fldt
mov
lcall
push
aas
or
mov
mov
push
add
ss
inc
or
int
push
or
add
pop
cmp
test
jo
outsb
ja
mov
sbb
popa
out
test
aas
lea
cmp
std
orb
insl
xor
cmc
sti
cld
out
adc
mov
xchg
cmc
pop
mov
push
sahf
jp
mov
movsb
int
dec
popa
mov
sub
ja
inc
push
mov
cmp
xlat
sbb
jns
inc
fsin
mov
fwait
sbb
push
cltd
inc
int3
push
xchg
bound
inc
lret
insb
ds
fisttpl
mulb
push
shr
in
mov
popa
dec
jecxz
add
sub
jmp
cmpsl
xchg
aas
and
dec
jno
jecxz
xchg
sub
add
lret
adc
es
adc
insl
xchg
sbb
pushf
add
movsl
and
push
add
mov
outsl
int3
popa
cwtl
push
out
es
inc
and
jbe
or
push
iret
sbb
mov
cmpl
test
orl
ss
pop
mov
aas
rorl
xor
icebp
adc
sbb
fdivrs
adc
jp
stc
aas
dec
stos
jne
bound
insb
daa
testb
outsl
lods
notl
inc
push
testb
sub
or
out
icebp
add
ja
imul
sbb
sub
out
dec
mov
lock
aad
rorl
lcall
aam
stos
mov
fimuls
cmp
add
stc
sbb
call
sbb
dec
mov
push
push
mov
mov
sub
js
pop
movsb
fs
iret
in
push
sbb
push
push
scas
out
xchg
jmp
dec
ja
jle
sub
and
xchg
lahf
or
testl
lret
js
notl
and
mov
aad
lret
push
sub
enter
scas
cmc
and
test
cmpsb
inc
or
jp
jmp
lret
pop
pop
mov
hlt
divl
dec
adc
sub
sahf
lahf
xchg
pushf
cltd
mov
xchg
imul
and
push
jno
clc
test
pop
sti
xor
jb
aad
jp
shlb
mov
push
in
mov
cmc
xor
jno
xor
repnz
call
dec
addr16
xchg
imul
ljmp
mov
aaa
repnz
push
mov
mov
push
add
rol
lods
inc
cwtl
cmp
and
cmp
lahf
adc
cli
movsb
aaa
push
shll
mov
xchg
and
andl
iret
inc
mov
mov
int
mov
jge
jp
inc
jmp
mov
inc
cli
lock
aaa
aas
test
adc
into
sbb
imul
dec
sti
fldl
mov
fs
out
and
push
je
inc
shrl
sbb
jecxz
push
mov
pop
mov
mov
xchg
int3
xchg
xchg
push
inc
push
push
fldl
in
insl
shl
ret
lcall
pop
aam
imulb
fcmovu
stos
lods
xchg
sub
xchg
jecxz
mov
inc
jmp
push
nop
clc
mov
ds
mov
sub
int
pop
and
lds
inc
in
cmp
pop
push
movsl
mov
sbb
and
mov
mov
ds
mov
cmp
mov
aas
iret
mov
inc
stos
nop
arpl
xor
fisttps
leave
clc
mov
loopne
xchg
testl
and
int
aad
cwtl
mov
mov
jb
mov
cmp
mov
push
mov
pop
and
cmpsb
inc
or
mov
pop
adc
inc
lcall
cli
add
outsb
push
sub
sbb
xchg
repz
cs
pop
and
mov
push
cmp
lcall
mov
fs
xchg
arpl
mov
adc
sub
bound
cmp
mov
mov
fnstcw
mov
dec
lock
scas
cld
mov
aas
loopne
imul
sub
jae
mov
fldl
mov
fs
adc
mov
sbbl
inc
imul
sub
test
int
dec
cmp
out
mov
pop
negl
fwait
stc
mov
rol
jge
mov
cmp
stos
mov
fidivs
push
mov
lret
pop
test
test
cld
hlt
jge
jmp
test
lret
pop
jnp
sub
in
hlt
adc
cmp
aad
int3
pop
pop
add
jbe
cli
pop
pop
lret
insb
iret
faddp
or
testb
or
mov
fistps
adc
mov
lock
xor
int
aad
inc
pushf
pusha
ja
mov
sbb
call
pcmpgtw
push
or
jg
inc
popa
or
sbb
fistpl
pop
inc
sahf
mov
mov
xchg
pop
dec
loop
aad
inc
cmpsl
xor
loope,pn
and
mov
cmpsl
jb
mov
mov
xlat
push
push
inc
add
jbe
xor
cmp
cmpb
xor
aaa
jle
fnsave
and
sub
gs
bound
hlt
icebp
and
or
jle
mul
push
push
push
lcall
repnz
cmp
fsubl
adc
iret
cmp
dec
adc
push
mov
jp
mov
sahf
adcb
fisttps
xlat
jae
cld
cmpsl
bt
mov
mov
cmpsl
adcl
sbb
cltd
loope
gs
dec
xchg
pop
stos
mov
pop
mov
jno
shll
dec
xlat
xchg
and
adc
lcall
xchg
pop
imul
js
aam
xchg
mov
lret
roll
mov
ja
jae
and
lahf
addr16
push
inc
aam
inc
xor
pop
cltd
add
insl
fimuls
fidivrl
aad
shrb
andl
sarl
add
push
cmc
mov
jge
js
je
cltd
inc
jbe
cmp
lods
add
movsl
hlt
dec
call
shll
xor
xor
ficoms
into
cmpl
adc
lcall
test
jbe
js
test
sbb
repz
xchg
pop
pop
cmp
xchg
lock
add
xchg
mov
scas
or
jl
push
shr
pop
jmp
dec
sbb
cli
js
jo
out
and
mov
imul
pop
jnp
mov
cmp
aad
lods
cmp
subb
ljmp
xchg
sbbl
dec
push
jmp
pop
push
add
js
int3
pop
in
test
fists
fstl
dec
int
xchg
aad
out
push
cmpsb
test
sub
je
or
test
mov
cld
or
shlb
lahf
popf
mov
test
aas
std
push
out
adc
jle
mov
cmp
mov
pop
ds
jbe
std
adc
out
adc
pop
jmp
test
lahf
fs
jle
sbb
mov
nop
push
fistl
mov
adc
mov
jg
inc
mov
aad
and
call
and
or
pop
mov
out
pop
mov
or
fldenv
pop
xchg
in
outsl
sarb
pcmpeqb
aad
jecxz
pop
fsubl
clc
aaa
mov
cmpsb
xor
add
out
xchg
idivl
jl
jmp
cmpsl
adc
dec
jmp
cmp
fcompl
lahf
push
rorl
mov
lods
xchg
and
in
in
out
xchg
subb
out
fwait
clc
sub
sbb
pop
ss
or
push
jae
xchg
mov
stos
jmp
push
mov
movsl
xchg
mov
jl
divl
pop
jecxz
mov
int3
lock
out
push
mov
mov
dec
xor
pop
cltd
and
imul
mov
adc
mov
jb
push
data16
stos
jne
int
mov
sub
mov
and
into
test
mov
enter
not
pop
push
cmp
fcompl
ret
mov
push
sbb
jbe
push
js
aam
arpl
cmpsb
mov
lahf
sub
les
lahf
sarb
les
in
sub
inc
sti
jmp
push
push
push
shr
test
popa
sub
lods
push
and
out
dec
test
stc
out
push
clc
ret
xchg
inc
sbb
testl
addr16
lcall
or
pop
push
ffree
and
cmp
adc
mov
mov
in
cltd
xor
adc
push
cmp
scas
push
in
mov
cmpl
pop
mov
mov
rcrl
pusha
lcall
pop
aad
popf
mov
scas
pop
mov
test
lcall
or
pop
aas
or
and
pop
std
jbe
mov
jb
jp
push
push
push
push
dec
jb
mov
cmpl
cmpl
mov
cmp
movsb
cmp
ds
mov
sbb
mov
push
sbb
movsl
sbb
sub
test
das
scas
or
dec
add
dec
dec
fwait
arpl
in
and
repz
daa
push
jnp
stos
out
jno
mov
add
shlb
out
mov
mov
pop
dec
scas
mov
ret
and
in
cmpsl
jbe
adc
ds
out
into
clc
adc
fidivl
inc
dec
sbb
xor
lcall
loop
xor
mov
sub
sbb
loop
outsl
sub
leave
rclb
scas
orb
add
shll
loope
cmpb
cmp
dec
pop
push
cmp
xlat
ja
or
test
adc
adc
test
push
xor
inc
inc
cmpsb
mov
imul
xor
cmp
jmp
lds
xlat
repnz
aad
pop
std
lods
adc
js
loop
sbb
or
psraw
int
scas
cmp
cmp
repz
out
leave
adc
das
call
stc
dec
adc
cmp
test
test
add
cwtl
je
arpl
push
jle
xor
push
clc
add
sahf
adc
enter
rorl
dec
lahf
lods
pop
jg
xor
pop
jl
mov
cwtl
xchg
push
inc
sbb
push
xor
loopne
push
addb
jp
push
inc
es
scas
jae
sbb
xchg
cmp
lcall
pop
push
mov
shlb
hlt
push
mov
std
popf
out
mov
or
add
rcl
imull
mov
sbb
sub
out
xchg
fcoms
fldenv
pop
adcl
loop
dec
mov
fwait
mov
outsl
filds
mov
mov
cli
ret
imul
mov
mov
add
pop
setge
test
cmp
jp
inc
data16
shlb
cwtl
out
dec
mov
dec
sub
jb,pn
mov
jne
inc
lods
inc
add
cmpsb
rcrl
in
imul
fs
or
cmp
pop
out
sbb
jecxz
imul
adc
ljmp
sub
jecxz
cmpsl
lret
ret
cmp
test
adc
movsb
add
and
sysenter
jne
push
jnp
movsl
iret
fiadds
daa
imul
sbb
push
adc
xor
cmp
jge
insl
std
loopne
lret
inc
mov
mov
mov
jg
jl
xchg
jg
inc
sub
loope
scas
jbe
cmp
jp
test
movsl
and
pop
cmp
mov
jmp
adc
cwtl
out
loope
lds
mov
vminps
mov
push
sub
popa
mov
mov
sbb
cld
mov
cs
cld
sub
jo
leave
sub
jp
xor
inc
pop
cli
lods
mov
pop
fstp
dec
sbb
call
aaa
and
jno
jp
out
mov
pop
fwait
arpl
add
xchg
pop
jl
or
push
sbb
cmovg
jg
call
out
loope
cs
popa
or
inc
sar
cmp
push
jecxz
add
mov
or
mov
outsl
pop
repz
add
loop
in
rdtsc
lahf
lods
and
outsl
mov
cmp
or
mov
xlat
jbe
js
rcll
js
lcall
mov
inc
call
int3
nop
loop
or
filds
sbb
adc
cmc
dec
mov
pop
ret
cmp
lods
add
dec
xor
fwait
imul
dec
or
mov
aas
je
addr16
popf
jl
xor
lcall
mov
in
cmp
test
pusha
inc
lea
adcb
xchg
movsb
push
mov
lods
or
dec
inc
enter
adc
mov
dec
test
out
cmpsb
cs
push
xchg
pop
mov
sub
sbbb
cld
or
fs
pop
shrb
push
cmpsb
cmc
mov
adcl
xchg
jge
daa
mov
mov
jne
mov
mov
inc
xchg
mov
mov
add
and
fs
dec
push
pop
mov
jp
cmpsb
jg
ficoms
lahf
imul
xor
pop
inc
fdivl
insb
out
loop
jbe
jbe
push
mov
repnz
sbb
cld
call
push
jmp
ja
mov
adc
stc
or
in
loope
sbb
add
cmp
bsr
movsl
sti
sub
gs
imul
add
and
adc
lahf
cmp
pushf
jge
stos
and
push
ja
nop
cwtl
iret
inc
pop
xlat
inc
loope
bt
xchg
inc
shll
roll
cmp
pop
add
mov
mov
rcr
mov
in
sub
mov
cmovne
or
dec
adc
ds
outsb
inc
jbe
push
scas
aas
aad
pop
inc
xor
stc
roll
mov
xchg
mov
setbe
mov
xor
loopne
dec
out
mov
icebp
ljmp
pusha
mov
push
insb
out
dec
dec
fwait
mov
das
sbb
mov
xchg
cmp
xor
lcall
push
and
je
cmc
push
pop
inc
sub
pop
sbb
sbb
pop
dec
xor
push
outsb
fstpt
outsb
adc
les
lahf
mov
pop
cmpsl
lods
imul
dec
push
cmp
out
fiaddl
faddp
fs
fldt
insb
test
std
pop
jno
or
nop
add
sbb
inc
sahf
pop
cltd
mov
xchg
ret
jecxz
xchg
dec
fdivrs
hlt
sub
fsubrp
popf
lock
mov
fidivrs
cmpsb
rcrb
push
daa
mov
mov
dec
cmp
mov
mov
or
jg
ret
cmc
and
inc
imul
jb
mov
adc
inc
sub
lock
clc
ja
out
lret
lock
dec
int3
dec
dec
sub
das
jnp
mov
dec
inc
xchg
pusha
or
sub
bound
jo
inc
jg
ja
mov
xchg
mov
push
jmp
mov
addl
pop
push
popl
cltd
cmp
adc
sub
mov
jecxz
mov
test
xchg
mov
lret
pop
mov
sub
mov
int3
fisubrl
jb
cltd
push
fcmovnb
shl
push
cwtl
adc
mov
sub
test
mov
push
inc
mov
mov
adc
or
xor
xor
push
insl
mov
xchg
push
test
icebp
ret
dec
clc
inc
fcomps
xchg
fistpll
sbb
rclb
subl
push
xchg
pop
fdivrp
pop
sbb
decl
shrl
jecxz
loopne
mov
pushf
dec
arpl
cmpps
lock
imul
mov
xchg
outsb
mov
nop
jp
leave
dec
and
aam
mov
call
das
ljmp
test
mov
int3
lock
lock
aaa
mov
js
jae
mov
mov
mov
adc
push
rcll
or
mov
dec
mov
adc
rcl
lahf
push
scas
xchg
mov
mov
rcrb
jge
in
sub
mov
or
mov
inc
iret
lcall
je
add
ds
jnp
mov
nop
sub
shll
popa
sbb
xchg
leave
or
sub
shlb
push
repnz
or
les
dec
sbb
jb
pop
mov
ss
test
adc
dec
mov
xor
and
and
lcall
add
imul
mov
repnz
adc
es
mov
jge
xchg
add
pushf
add
sti
mov
jle
das
mov
out
in
dec
popf
rclb
dec
lods
pusha
or
push
sahf
push
add
mov
mov
loop
je
push
daa
or
ljmp
jl
mov
jb
add
sub
inc
mov
mov
mov
sub
pop
push
dec
out
push
out
pushf
mov
or
test
mov
sub
mov
xchg
clc
stos
mov
dec
xorb
mov
outsl
inc
dec
sub
jo
orl
and
inc
orb
xchg
sub
push
adc
test
imul
xchg
xorb
daa
in
pop
test
cmp
das
clc
and
adc
inc
mov
cmp
push
inc
push
sahf
adc
pushf
mov
sahf
adc
into
mov
lret
and
lret
sub
inc
push
in
pusha
out
ficoms
test
ret
xchg
fwait
cmp
sahf
fs
pop
mov
xchg
cmp
outsl
movsb
repnz
mov
inc
lea
mov
mov
ljmp
psadbw
cmpsl
jne
jnp
and
stos
in
push
and
or
fstpl
and
mov
cmp
adc
outsb
lods
faddl
mov
push
int
sbb
push
mov
sub
and
and
push
ds
and
repz
push
jl
adc
pushf
jo
std
push
and
add
sbb
sub
lods
add
xor
ljmp
push
inc
jns
in
das
push
jmp
dec
sti
xchg
and
mulb
stos
pop
jle
jp
mov
in
jae
in
and
jmp
pop
lods
dec
cmp
out
mov
test
stos
fstpt
pushf
pushf
push
insl
inc
test
or
arpl
and
cld
jns
gs
out
inc
push
mov
in
push
repz
fsubs
dec
nop
int
dec
imulb
sbb
mov
int
push
jle
fwait
sbb
jmp
test
xlat
icebp
mov
xor
cmp
aad
ffree
pop
xlat
test
push
movsb
js
push
js
push
push
lods
int3
popa
aas
sbb
aam
lds
xlat
aas
cltd
mov
pop
inc
jns
jbe
mov
jmp
and
hlt
jmp
pop
aas
jp
sbb
leave
jg
ljmp
add
xor
dec
sub
leave
jmp
dec
out
or
mov
add
mov
mov
loopne
inc
sub
pop
dec
xlat
rorl
les
ror
mov
ja
lcall
jbe
dec
mulb
mov
add
repz
cmp
pop
jbe
xchg
repnz
cmp
pop
jmp
cltd
lahf
test
cmp
and
rcrb
clc
stos
push
cmp
xor
mov
nop
mov
cmp
dec
aas
xchg
mul
pop
sbb
lds
xchg
sub
mov
movsl
pop
xor
addr16
jmp
xchg
cs
jmp
jnp
in
fistpll
inc
add
mov
xchg
out
loopne
or
pop
pop
outsb
pop
xchg
push
or
in
add
mov
jbe
fldcw
sub
adc
xor
push
jmp
xor
jno
sub
sbb
jnp
cmp
fwait
adc
mov
gs
pop
gs
daa
inc
cltd
pop
sahf
lds
and
leave
cmc
sub
pop
test
xchg
jo
daa
inc
stos
push
mov
mov
aad
and
into
adc
pop
xchg
ds
add
repnz
cmp
push
pop
lret
loopne
or
adc
sahf
nop
jnp
jge
fwait
adc
pop
sub
imul
scas
push
into
push
mov
push
xchg
out
addr16
jno
inc
pop
ja
imul
and
add
lret
adc
mov
jg
int
dec
mov
jle
mov
hlt
and
cs
cmp
nop
xchg
dec
or
add
ja
insl
gs
mov
pop
adc
push
push
ret
stos
pushw
subl
cli
pop
aad
jl
pop
mov
xchg
dec
add
and
xchg
sub
daa
xchg
push
mov
inc
xchg
pop
fbld
xor
xchg
int
dec
scas
mov
stos
movsb
sbb
push
rcrl
inc
sub
mov
rclb
bound
mov
xchg
sbb
xor
je
or
subb
xchg
dec
add
adc
xchg
mov
cltd
lahf
mov
xchg
lret
pop
mov
cmpsl
cmp
mov
sub
push
sbb
inc
push
scas
jp
dec
pop
and
mov
xchg
imul
lahf
mov
sbb
popf
rcrb
scas
mov
xchg
cmp
add
mov
out
pop
pop
clc
test
add
pop
pop
inc
inc
ja
lds
cmpsl
mov
or
sub
in
aas
jne
jmp
loope
sub
leave
jbe
cmp
fnstenv
push
clc
mov
xor
xchg
cmc
push
icebp
mov
loop
in
pop
inc
xchg
jae
pop
rorb
daa
movsl
pop
or
adc
inc
movsl
test
push
or
rcr
mov
xlat
push
in
mov
push
add
lods
and
xor
gs
insb
inc
insl
rorb
mov
int
sub
or
mov
jge
push
or
pusha
mov
pop
cmpsl
pop
dec
into
daa
push
ds
into
push
ffree
int
loopne
ja
mov
pop
pop
push
sahf
xlat
cmp
arpl
dec
or
lahf
jl
lret
jl
jae
and
dec
jno
mov
mov
cltd
jp
std
insl
push
sti
pushf
mov
push
sbb
mov
fmul
data16
popa
mov
mov
adc
fwait
dec
data16
pusha
cmp
sbb
inc
sub
sub
scas
lods
push
dec
movsb
mov
add
jle
lods
pop
pop
fnsave
jo
sub
out
inc
mov
dec
shll
ror
jmp
cmp
mov
sti
sbb
mov
iret
push
jae
adc
mov
xchg
add
mov
sbb
les
clc
repnz
xor
xor
dec
imull
int
lcall
pop
adc
popf
clc
shlb
int3
jg
outsb
int
dec
inc
cld
movsb
pop
lods
daa
das
ret
aam
inc
into
rcr
movd
cmc
pop
frstor
sbb
rcll
cmp
loope
xor
sbb
stos
cmp
mov
add
sub
fstp
cmp
mov
jbe
push
mov
lret
push
lret
jns
addr16
test
mov
daa
xchg
cld
cmp
fldcw
test
mov
dec
xor
enter
pop
addl
jmp
xchg
cld
inc
cmpsl
sbb
or
mov
xchg
lret
sub
pop
fsubrl
mov
sub
hlt
repnz
adc
xor
int
mov
jae
popf
xchg
js
test
xor
pop
sbb
or
push
hlt
inc
add
mov
stc
movsb
and
aad
mov
into
gs
icebp
loope
sub
insl
lcall
shlb
add
fsub
push
cmp
dec
sbb
imul
push
dec
pop
out
cmp
jno
push
xchg
mov
xor
xchg
inc
in
insl
jmp
bound
xchg
fisubs
inc
fs
add
stc
jne
es
push
cld
les
in
sbbb
inc
lret
xchg
jecxz
bound
lret
xor
insb
sub
and
inc
mov
mov
movsb
mov
jmp
lret
xchg
inc
je
repz
loop
test
adc
mov
ja
fcmovnu
leave
stos
mov
cmp
xor
imul
ret
data16
xor
daa
in
sbb
imul
jl
and
fdivrl
adc
dec
add
pusha
cmpsb
inc
popf
ljmp
jb
pop
scas
xlat
in
jns
pop
sarb
jo
imul
push
xor
pop
jmp
mov
xchg
sarw
mov
inc
in
jnp
cmp
cli
or
cmc
cmc
popa
inc
fs
adc
push
push
xlat
xchg
sbb
or
inc
int3
jns
add
dec
je
add
fsubrs
push
aas
and
mov
xchg
and
dec
loopne
outsb
mov
stos
pop
bound
xchg
movsl
pop
fstps
fwait
nop
xchg
ret
loopne
inc
dec
stos
stc
xor
and
xchg
loopne
testl
aam
in
xchg
mov
dec
cmp
pop
sub
cmp
and
scas
bound
adc
mov
pop
pusha
mov
pop
adc
jb
adc
xor
test
and
add
mov
pop
cmp
mov
sub
aad
popf
sub
push
jle
repnz
xor
pusha
cltd
int3
jp
cld
ljmp
hlt
sub
gs
leave
pushw
pushf
fdivs
ss
pop
lahf
push
or
enter
fwait
jnp
in
jo
pushl
cmp
test
jo
btr
pop
sbb
stos
test
lea
or
xor
pusha
lods
cmpsb
xchg
mov
mov
out
mov
repnz
mov
aaa
pop
cmp
sub
addb
je
or
mov
in
popf
cmp
out
scas
push
mov
mov
int
inc
scas
mov
push
icebp
test
add
cmp
jle
or
push
mov
xchg
sbb
jne
mov
or
lea
pushf
push
xor
sub
sbb
and
adc
mov
ss
add
es
mov
cwtl
mov
jne
pop
in
push
cmpsb
movsl
sbb
ret
cld
push
out
mov
fs
insb
add
imul
push
daa
or
mov
sbb
push
sbb
pushf
and
les
pushf
lahf
pop
jnp
cmp
sbb
movsl
mov
inc
ror
mov
adc
jge
enter
inc
jno
pop
sti
out
out
mov
xchg
fisubl
data16
sbb
and
or
jo
test
mov
sub
leave
jb
sti
mov
sub
jg
outsb
pop
pop
mov
jecxz
add
ljmp
inc
push
inc
jae
outsl
imul
cmp
roll
xlat
xchg
data16
sbb
fisubs
call
ficoms
inc
mov
adc
dec
test
stos
scas
or
aas
adc
das
rorb
add
jg
sar
ret
xlat
mov
dec
jge
xchg
cli
dec
sub
int
outsb
pop
ret
mov
cmp
xor
pop
xor
sti
jp
adc
aad
jge
and
ds
lods
das
js
push
mov
mov
jo
dec
dec
xor
xchg
pop
imul
pop
dec
das
sub
out
mov
xchg
mov
movsb
imul
cli
mov
pop
cmp
mov
jbe
hlt
in
mov
ret
or
jecxz
std
xchg
mov
mov
ljmp
push
or
xchg
sbb
sahf
nop
in
int3
into
daa
cmp
or
movsl
jmp
in
adc
ss
push
adc
xchg
jne
inc
or
cmc
sbb
sub
fisubs
mov
test
scas
les
sbb
push
ja
push
cmpsb
jmp
sbb
pop
arpl
and
cltd
push
adc
in
aam
rclb
mov
pop
out
push
ljmp
and
repnz
mov
mov
jae
dec
stc
xor
cltd
icebp
dec
and
pop
mov
call
sbb
sbb
sub
stos
push
int3
sbb
jge
inc
lods
movsl
mov
scas
divl
mov
ds
jns
adc
mov
mov
in
pop
fildl
lahf
loopne
mov
and
test
cmp
jno
and
pop
pushl
sbb
test
mov
mov
mov
scas
mov
das
in
into
mov
pop
cmc
jb
les
jp
leave
pop
mov
lret
mov
dec
and
ja
orb
sbb
data16
mov
aad
xor
push
pop
shlb
lahf
imulb
out
fiaddl
hlt
aaa
or
lahf
repnz
xor
ljmp
xor
adc
popf
cmp
or
mov
mov
call
add
insb
lods
into
adc
adc
adc
mov
and
subl
jg
push
aas
or
addr16
jbe
mov
pop
das
jl
add
jl
cmp
pop
nop
push
cltd
outsl
lahf
xchg
mov
push
into
into
xor
add
call
jbe
push
jg
into
dec
call
or
lcall
xorl
xchg
repnz
rcr
inc
mov
cmp
in
mov
mov
cmp
jl
push
sub
hlt
sub
in
aad
lret
iret
ljmp
mov
stc
add
stos
jge
push
mov
sub
dec
cmc
mov
stos
addr16
fistpll
clc
ss
and
test
and
ds
shlb
pop
xchg
in
aaa
and
and
scas
sbb
enter
shll
cmp
sbb
dec
ror
lds
inc
mov
testb
lret
push
test
sti
jle
outsb
int3
mov
nop
in
stos
mov
mov
dec
cltd
sahf
mov
jle
mov
lcall
sbb
cmp
mov
mov
out
push
iret
addl
aam
mov
fistpll
repz
mov
adc
inc
xorb
jge
arpl
iret
cmp
loop
xor
xchg
xor
dec
cmp
mov
dec
cmp
sbb
sbb
xchg
cmp
jmp
jae
in
push
pop
push
daa
pop
rolb
xchg
inc
push
adc
push
adc
je
aad
sub
or
fdiv
push
rorb
rol
mov
out
out
dec
pop
fimull
fs
dec
jae
inc
pusha
push
dec
inc
mov
fstl
loop
movsb
or
adc
js
scas
cltd
add
jl
adc
pop
paddsb
sub
or
mov
gs
fadd
mov
cltd
jno
fcmovnu
adc
test
addl
and
push
lods
adc
leave
out
mov
nop
lret
fwait
jne
xor
js
in
sub
and
cmp
mov
mov
fldcw
aaa
stos
xchg
mov
jo
dec
mov
repnz
bnd
or
mov
call
out
mov
sbb
loopne
inc
lods
mov
cmpsb
jnp
enter
fcompl
sub
push
pushf
sub
pop
or
in
inc
mov
fsubs
lahf
adc
cmp
fistpl
fldt
cld
shll
movsb
testl
jge
iret
xor
mov
adc
sbb
call
mov
sbb
fistps
adc
dec
das
push
idivb
lret
cmpsl
outsl
hlt
scas
test
addl
pusha
xchg
aas
or
dec
xor
dec
push
pop
lds
rol
dec
pop
xor
sbb
pusha
and
out
ss
mov
mov
pop
push
push
jmp
mov
fxch
pop
cld
loop
sar
js
fwait
jnp
jmp
dec
fcmovb
inc
push
or
xor
add
push
lea
popf
mov
in
pushf
or
mov
addb
push
xchg
xchg
insb
xchg
mov
mov
lea
mov
mov
sub
ret
or
add
pop
aaa
mov
xor
iret
addr16
push
cmpsb
or
mov
xor
push
pushf
push
ja
lret
cmp
aaa
jae
lods
xchg
ds
cmpsl
xor
add
adc
hlt
fiaddl
scas
inc
jo
and
mov
mov
call
int
pop
xor
bound
gs
sub
cmpb
arpl
pop
jb
clc
or
fsubrs
imul
pop
notb
xor
in
out
dec
jno
xchg
test
sub
fld
xchg
xchg
adc
mov
shrb
fs
orl
nop
outsb
inc
mov
lds
hlt
shrb
call
pop
add
ljmp
jp
push
jle
das
push
leave
push
pop
jmp
xor
pop
dec
xchg
push
fdivl
cld
push
fwait
cmp
addb
mov
sbb
aas
push
sbb
into
clc
bound
and
push
mov
xchg
roll
cmpb
jns
xchg
dec
leave
stc
addr16
cmp
test
pop
cltd
sub
mov
mov
pop
stc
cwtl
inc
shll
pushf
xor
jge
loope
into
xchg
flds
hlt
mov
fwait
sarl
nopl
insl
scas
cmp
push
or
pop
je
testb
xchg
jmp
jo
sub
mov
sbb
bound
pop
mov
add
sahf
xlat
into
jge
and
jbe
sub
and
dec
and
mov
mov
dec
sahf
hlt
movsl
loope
stos
push
enter
or
mov
test
arpl
bound
mov
sbb
dec
iret
mov
dec
iret
xor
ss
cmp
sbbl
jmp
loop
cmp
lods
jnp
sub
cmc
or
and
test
out
fistpll
shlb
clc
inc
jmp
repnz
ror
js
inc
push
sti
cmc
mov
rorb
out
imul
loope
sbb
dec
sub
rorl
lods
imull
sbb
in
adc
in
cmpsb
mov
outsb
xchg
insb
in
xorb
jb
mov
ja
cltd
mov
mov
rorb
cmp
cmpsb
and
sub
sbb
mov
notb
sbb
mov
mov
cld
ds
mov
xor
adc
jge
xor
je
jge
mov
shlb
sbb
ds
test
pop
xor
mov
mov
and
loope
loop
rolb
sub
jg
mov
and
sbb
dec
fs
cwtl
in
mov
cmp
orl
mov
shll
enter
dec
cmp
or
lods
push
cs
add
data16
jno
inc
jecxz
pusha
pop
dec
sub
in
inc
dec
pushl
adc
int3
dec
push
cli
ljmp
cli
xchg
xchg
mov
test
sbb
mov
mov
aas
pop
jne
pop
jmp
mov
je
scas
out
xchg
cmpsl
cld
setp
stos
fwait
mov
addb
mov
jecxz
clc
xorl
fmull
das
ljmp
mov
iret
mov
mov
dec
mov
cmc
sbb
xorb
jnp
test
sbb
cmp
push
cmp
aad
clc
xchg
and
addb
cli
adc
jge
jno
bound
push
iret
ror
sar
pop
mov
nop
inc
icebp
xchg
dec
aaa
sbb
data16
lret
lret
jb
dec
or
push
or
push
sbb
xchg
and
sahf
data16
xchg
out
mov
add
testl
mov
push
mov
das
daa
cmp
add
or
and
jno
sbb
loop
jne
fs
push
outsl
xchg
jnp
and
adc
mov
jne
out
mov
mov
ror
lret
pop
add
push
dec
fxch
out
cmpsl
ljmp
adc
fucomp
jl
lods
xchg
lahf
jbe
outsb
and
clc
arpl
movsb
fs
ja
xchg
adc
xchg
sarb
test
push
sbb
rcrb
push
xchg
cld
dec
cmp
stos
xchg
and
add
or
bound
pop
add
xor
scas
sub
jbe
add
cmp
rcll
imul
arpl
jle,pn
sahf
mulb
hlt
leave
in
fidivs
inc
lods
outsl
in
ret
inc
pop
leave
push
sbb
mov
add
les
fucomi
lods
jle
dec
and
or
mov
or
jl
mov
dec
xor
je
sbb
leave
loop
dec
into
in
out
int3
addr16
xor
ja
xor
shlb
push
sahf
les
test
jecxz
sub
icebp
push
iret
xor
or
sbb
test
inc
in
lods
add
in
sbb
cmpb
ficomps
push
ljmp
loope
add
decb
push
jmp
push
lcall
bound
cld
outsl
sarl
mov
aaa
out
pop
push
dec
jmp
aaa
bound
jb
add
fldenv
in
xlat
sbb
pop
add
sub
adc
mov
adc
push
adc
dec
test
pop
xchg
out
addr16
fsubrl
je
cmp
imul
clc
push
movsb
sub
xchg
mov
add
mov
addr16
notb
fldenv
dec
sbb
fsubl
adc
and
fsts
mov
lock
inc
and
mov
inc
dec
jns
les
wrmsr
sub
xchg
pop
lds
int
jns
ret
xchg
push
adc
outsb
popa
mov
cmp
pushl
cmpsl
sti
cmp
and
pusha
pop
ljmp
inc
jp
clc
test
jnp
icebp
ja
xchg
scas
movsl
mov
int3
mov
sub
cmc
nop
aas
mov
inc
jge
inc
mov
xor
mov
lret
inc
add
insb
pusha
sbb
or
mov
mov
mov
ja
movsl
sub
lahf
rcr
xchg
push
push
cld
leave
pushf
pop
pop
jmp
les
test
int3
lret
daa
mov
lock
stos
push
in
push
adc
xchg
icebp
pop
inc
lock
xor
test
mov
bound
push
cld
outsb
in
clc
push
push
adc
mov
fisubl
lahf
popa
faddl
push
mov
xchg
mov
jno
sub
movsl
mov
leave
mov
xor
push
jns
aad
fbstp
push
imul
push
mov
shll
xlat
mov
js
and
push
mov
fnstsw
lcall
pop
xor
test
or
pop
dec
lods
jl
xor
ljmp
dec
repnz
jecxz
popa
and
dec
aas
insb
jbe
cmp
aam
inc
ja
out
or
and
push
jle
insb
aas
push
subb
mov
mov
aad
dec
les
dec
jp
sahf
out
mov
dec
fcompl
fwait
xor
aaa
mov
lods
inc
cltd
dec
inc
repz
and
das
and
xchg
cmc
aad
jecxz
scas
pop
jl
outsb
mov
cmc
not
repnz
xor
sub
cmp
shlb
inc
das
pop
pop
shrl
rcrb
mov
cmp
xor
mov
pushl
pop
scas
and
in
enter
aam
call
imul
lret
or
imul
or
pop
je
out
sbb
sbb
int
aaa
ljmp
aaa
lret
lret
dec
inc
ret
ret
xchg
cmpsb
cwtl
arpl
cmp
xor
cmc
fst
repnz
pushl
ss
cmc
dec
and
fidivrl
ss
xchg
gs
dec
lock
fwait
push
push
xor
xchg
xchg
mov
jl
sbb
adc
dec
add
fsubrs
into
mov
fwait
imul
xlat
cli
adcb
xor
pusha
jl
xor
or
stos
lcall
sub
shrl
out
stos
xor
loopne
jecxz,pn
and
add
jbe
mov
rolb
inc
loopne
stos
andl
out
ficompl
cwtl
mov
mov
sbb
icebp
in
mov
fisttps
sub
mov
fwait
stos
xor
movsb
inc
and
inc
dec
jno,pt
dec
push
pop
jp
cmp
fbld
and
in
dec
pop
ret
fnstsw
lea
int
pop
inc
mov
dec
fiadds
std
and
dec
jle
mov
mov
bound
pop
pop
js
xchg
daa
sti
xor
aad
out
loop
ja
mov
lds
push
out
dec
mulb
loope
jg
loop
ss
fiadds
add
mov
int
repz
cmp
cmpsl
loope
lods
mov
cld
adc
dec
or
sbbb
shl
in
shrl
cmp
loope
popf
iret
inc
int
fs
dec
adc
lea
pop
mov
popf
push
sbb
leave
mov
loope
mov
sbb
std
fists
mov
xor
pop
sbb
mov
dec
ds
adc
or
push
clc
lahf
jnp
hlt
icebp
rorb
or
enter
mov
adc
cmpsl
mov
jp
xor
adc
push
fcmovne
pop
sub
jp
mov
movsb
arpl
inc
add
shll
cmp
getsec
adc
mov
push
fcoml
mov
jecxz
push
pop
data16
jnp
or
sub
insb
pop
mov
shl
addb
lret
mov
fldcw
das
shrl
jns
or
imul
imul
repnz
jle
lahf
rclb
jne
fs
shrl
pushf
jp
fistps
popf
xchg
and
lahf
lock
movsb
test
in
mov
xor
call
sahf
jp
imul
cltd
das
mov
xchg
xor
push
pop
test
xchg
int
sbb
lods
pop
fldt
lret
sub
xchg
dec
xchg
daa
lea
jo
xor
xchg
enter
inc
xor
add
jg
cmpsl
jg
mov
outsb
movsl
xchg
mov
in
adc
cs
aad
ss
subl
push
mov
sbb
cs
loope
out
rsm
fsubs
push
sub
nop
movsb
repnz
test
jnp
jns
scas
inc
mov
cmpsb
ret
and
imul
pop
lock
sbb
and
mov
adc
lods
pop
mov
inc
out
pop
adc
clc
ss
xor
push
out
mov
jle
jnp
pop
ljmp
loop
push
sarl
lea
push
or
es
jne
dec
cwtl
cmpsl
mov
jb
pop
cmc
data16
in
cmp
sbb
dec
or
out
popf
and
bound
idivl
push
push
ds
imul
aaa
and
add
sbbb
jo
or
add
xor
repnz
mov
and
inc
cs
xor
dec
imull
dec
sarb
shll
xchg
xor
inc
nop
jp
ret
fsubr
mov
lret
push
adc
int3
jmp
adc
ds
in
out
sti
cmpsl
inc
pop
cmp
and
mov
jae
or
lea
cmpsl
cmpsb
mov
out
stc
pop
sbb
or
mov
js
outsb
mov
les
imul
in
jb
in
call
xchg
cmp
fbstp
test
or
mov
dec
mov
mov
and
clc
xchg
repnz
mov
sub
mov
es
jl
and
fwait
dec
cli
or
or
mov
mov
imul
cli
pop
ss
mov
sbb
mov
insl
out
push
in
lahf
pop
pop
xchg
mov
clc
les
cmc
jnp
sbb
pop
push
push
jno
enter
dec
cmp
imul
fcomps
cwtl
lahf
jo
in
pop
lds
call
shrb
pop
icebp
add
jecxz
jp
fnstenv
inc
or
or
filds
hlt
xchg
nop
mov
or
test
xlat
cmp
mov
jb
ret
push
or
andb
repnz
psrlw
out
cmpb
incb
lea
lds
dec
dec
adc
cmp
lds
int
loope
push
jnp
jbe
mov
aaa
scas
popf
mov
mov
sar
repz
sub
pop
xchg
fwait
cmp
inc
dec
je
jo
inc
adc
mov
dec
insl
ds
sub
push
push
pop
push
push
popa
aaa
xor
hlt
mov
mov
or
adc
divb
enter
out
orb
sub
xor
les
or
addr16
and
and
adc
mov
insb
push
add
sub
adc
out
jnp
jo
jl
or
enter
leave
and
ss
and
push
or
jo
pop
dec
iret
sahf
out
gs
add
mov
push
adc
mov
push
push
jo
addl
and
in
scas
cmp
xchg
mov
xor
mov
jnp
rorb
pop
out
lods
push
sub
adc
lret
shrb
jae
cmpsb
inc
push
jmp
dec
mov
rorb
ret
lret
jbe
out
lret
or
dec
hlt
mov
mov
and
popa
cmp
xor
push
mov
stos
add
sbbl
loop
ficompl
sbb
xchg
shl
mov
pop
xor
mov
jecxz
add
bound
push
push
pop
sbb
arpl
and
ds
mov
push
xor
iret
lahf
sbb
xchg
or
je
push
cmp
loopne
cld
sbb
mov
js
inc
or
outsb
lock
ret
xchg
fstpl
xchg
cs
push
push
jno
inc
stos
add
mov
in
mov
adc
cld
pop
push
jl
xchg
cmp
aam
add
pop
mov
or
sbb
aam
adc
mov
cmpsl
cmpsb
or
mov
jl
nop
rorb
loop
pop
push
add
xor
pop
mov
pop
inc
out
mov
xchg
adc
sub
pop
add
mov
jne
pop
cmp
cmp
pop
add
or
je
syscall
mov
sub
shll
jg
iret
out
mov
out
nop
sti
stos
aad
cmp
add
cld
jmp
repnz
dec
jmp
rcrl
scas
xchg
imul
pop
jns
sub
mov
push
iret
push
in
sbb
clc
add
insb
mov
xchg
jl
outsb
adc
fadds
push
xor
sahf
xor
ljmp
push
lahf
stc
sar
xchg
shll
dec
sbb
mov
mov
test
stos
xor
lock
std
sbb
adc
mov
adc
jg
jl
repz
push
jmp
stos
je
jg
test
sub
lods
imul
pop
xchg
sub
or
into
cmp
mov
lret
cmpsl
popa
stos
dec
add
jae
cmpsb
inc
ljmp
loopne
xchg
push
mov
cli
dec
adc
pop
call
lods
out
jo
adc
pop
lea
sahf
fs
mov
sbb
loope
stos
xchg
lods
lcall
xchg
cmp
int
inc
jo
out
add
sahf
jle
push
fisubs
cwtl
adc
dec
jno
test
out
pop
loop
adc
add
sbb
popa
mov
decb
mov
sbb
stos
dec
fisttps
add
daa
stos
inc
adc
std
lods
mov
adc
sub
shrb
repnz
push
jl
jge
mov
jecxz
mov
in
push
pop
mov
or
xchg
call
out
sahf
xor
sbb
ds
add
mov
xlat
mov
outsl
sub
enter
cmp
jb
adcb
dec
adc
addb
jns
adc
lahf
adc
pop
iret
lcall
fwait
pop
sub
out
outsl
xchg
push
push
pop
adc
cmp
loop
hlt
sbb
jo
xor
nop
sbb
ret
jno
xchg
mov
or
mov
sbb
add
push
xchg
lock
sbb
xor
testb
add
aad
test
lock
rorb
or
mov
scas
stos
mov
rolb
add
sub
pusha
mov
pusha
rolb
sbb
movsb
mov
cmp
icebp
aaa
mov
add
mov
adc
lahf
lret
xor
xchg
cmp
lahf
andb
std
xchg
lcall
icebp
adc
stos
sub
in
mov
push
cli
shrb
add
or
xor
movaps
dec
adc
jmp
das
push
gs
push
jl
or
out
cmc
pusha
push
fadds
test
add
mov
push
cmp
notl
mov
adc
cmpsl
mov
fnstcw
mov
pop
mov
sbb
mov
push
adcl
xchg
jl
gs
adc
faddl
arpl
mov
lret
stos
enter
jbe
ja
dec
mov
jmp
je
fs
scas
notl
ds
shr
mov
inc
sbb
sbb
sti
mov
scas
loopne
pop
xchg
xchg
sti
adcb
je
push
xor
and
gs
arpl
dec
outsl
pop
cld
shr
enter
or
adc
scas
xchg
xchg
das
cld
outsb
lcall
stc
xchg
rorl
lods
adc
fldl
sbb
jp
rcll
push
lret
push
scas
out
xchg
sbb
xor
pop
jb
addr16
inc
mov
mov
mov
sub
inc
aas
push
dec
jmp
imul
insb
mov
sub
xor
aaa
fstps
movsl
mov
cmp
add
sbb
out
ss
push
add
jnp
mov
cmp
dec
jno
pop
pop
mov
mov
jmp
jae
aas
jge
cmp
ret
in
dec
movsb
scas
je
xchg
out
lret
fsts
cld
push
js
push
mov
xorb
icebp
stc
fsubs
xchg
lret
jecxz
push
in
dec
lods
inc
in
jnp
lods
fwait
test
mov
mov
xchg
bound
push
fwait
aaa
mov
in
andl
sub
rcrl
pop
int
mov
xor
xlat
pop
inc
xor
push
and
mov
orb
pop
test
push
and
jb
mov
fisubrl
or
fsubs
mov
mov
pop
mov
daa
lea
ja
pop
mov
and
mov
lea
hlt
pushf
fnsave
arpl
jl
mov
scas
pop
sbb
mov
mov
stos
add
add
mulb
xchg
adc
imul
jp
aas
clc
mov
ret
test
cld
xor
add
cwtl
jg
jbe
mov
fdivrs
ja
or
pop
dec
jle
ret
pop
ret
push
stos
incb
cld
pop
les
scas
loope
mov
pushf
popl
call
add
add
or
or
nop
lock
lods
ss
int
xor
loop
push
setno
mov
test
leave
stc
aad
xchg
cmp
add
lods
jle
fidivl
cmpsl
pop
addr16
mov
mov
push
jle
inc
mov
fists
push
out
shl
mulb
shll
lar
test
xor
out
push
inc
scas
push
lea
icebp
fidivl
scas
pop
insl
inc
clc
in
pop
test
mov
push
sub
fisttpl
rolb
xchg
mov
out
bound
adc
cltd
test
mov
push
xor
sbb
jb
inc
xor
cmpsl
adc
jge
nop
add
lret
incl
xor
mov
push
adc
push
aam
repz
scas
cli
inc
sub
adc
call
adc
imulb
dec
jbe
push
jns
into
mov
and
xchg
pop
fwait
hlt
fldt
lea
add
fwait
add
sbb
mov
hlt
shr
cmp
cli
mov
dec
xchg
xchg
sub
push
inc
insl
sti
decl
sub
stos
xor
sbb
ss
mov
fs
sbb
sub
cmp
cmpsl
push
lret
mov
sbb
pop
sbb
xchg
dec
and
jge
pushf
in
flds
out
sbb
lret
sub
fdivs
and
mov
outsb
or
and
in
and
fisttpl
jnp
rorl
or
lods
cmp
and
mov
add
mov
in
push
dec
xchg
es
xlat
jmp
or
jno
out
cmp
add
in
lret
xor
inc
in
loope
ss
cltd
lods
cwtl
cmp
push
jp
daa
mov
mov
push
jo
div
xor
loope
pop
mov
xchg
movsb
push
or
jge
xor
repnz
xor
pushf
dec
int3
ss
push
mov
pusha
dec
shr
enter
or
mov
push
adc
xchg
mov
push
mov
pop
in
mov
inc
xor
ds
int
test
jp
adc
out
fmul
xor
mov
inc
xchg
ljmp
out
lret
xor
filds
lea
push
out
jae
push
inc
mov
lcall
mov
xor
add
jbe
jmp
adc
lret
pop
dec
xchg
int
mov
cmp
gs
pop
push
ficomps
loopne
sbb
stos
cmp
inc
mov
sbbl
das
enter
fimull
je
iret
repz
ss
pop
test
lods
add
mov
test
insl
and
movsb
js
and
enter
mov
ret
and
cltd
add
mov
stos
cmp
outsl
nop
loop
xlat
je
imull
xlat
cmp
push
jl
stos
aaa
fisubs
sub
cwtl
add
dec
push
aas
push
sub
cltd
pop
push
dec
mov
lret
mov
or
jno
jae
fistpl
shrb
jg
js
lods
and
fabs
divb
rcrb
pop
aas
mov
iret
pmaxub
das
aad
adc
and
jnp
loop
sub
mov
jmp
or
fsubl
out
inc
shr
enter
mov
jnp
dec
pop
xor
popf
jmp
inc
mov
mov
sbb
inc
sub
in
xor
js
sbb
adc
mov
cld
out
xor
pushf
or
mulb
iret
sub
mov
cmc
jg
iret
jno
jb
loopne
fdivr
cmp
adc
out
aaa
test
cmpl
xchg
or
xor
mov
push
mov
fwait
push
push
loopne
test
pop
push
in
mov
icebp
add
mov
xchg
jno
xor
shlb
aam
fsubrs
jp
enter
ss
mov
iret
push
sub
push
dec
popa
sahf
fcoms
stos
and
loopne
hlt
jmp
pop
lods
and
sbb
cltd
lret
mov
mov
js
dec
jae
pop
and
aad
add
cmp
lret
call
insl
std
and
idiv
stos
aaa
add
push
enter
and
jle
xchg
pop
xor
outsb
mov
cwtl
sbb
subl
and
pop
hlt
insl
xchg
adc
cmp
cmc
mov
test
cld
es
repnz
jecxz
lds
add
adc
movsl
leave
fs
cmpb
push
fistpll
mov
xor
inc
js
ljmp
loopne
test
push
std
ds
iret
cltd
das
mov
add
cwtl
in
frstor
sub
add
mov
inc
enter
and
xchg
sub
inc
in
dec
in
lcall
repz
clc
pop
out
or
mov
loope
mov
pop
lea
xchg
stos
push
mov
pop
sbb
pushf
mov
sub
iret
inc
pop
pop
mov
and
movsb
push
sbb
outsb
push
sahf
cmp
sahf
mov
popa
pop
add
pop
push
pop
sub
push
cmpsl
dec
fwait
jg
data16
mov
xchg
inc
fisubrl
les
pop
imul
cmpsl
loope,pt
test
xor
cld
out
je
mov
pop
add
sbb
nop
push
fstps
shrl
inc
push
inc
lods
lock
adc
jmp
cmp
jnp
and
mov
mov
test
or
inc
push
and
shrb
std
push
cmp
mov
and
hlt
pop
xchg
mov
adc
lea
jle
in
shll
cmpsb
mov
scas
ret
mov
fidivs
push
sub
test
pusha
fisubs
jecxz
push
mov
sbb
mov
data16
push
fnsave
mov
xor
add
add
imul
decl
pop
dec
rorl
dec
push
repnz
xor
cld
mov
cmp
ret
mov
test
into
mov
pushf
xchg
cmc
sarl
sbb
les
mov
pop
lea
enter
or
pop
adc
lods
xchg
dec
fcmovnb
xor
adc
and
fisttpl
ret
and
add
icebp
adc
pop
xor
or
testb
cmp
xorl
mov
icebp
test
sub
call
xchg
cmc
sti
or
mov
gs
adc
fwait
cli
xchg
popf
addl
test
js
sub
mov
jmp
fsubs
lods
hlt
cmp
adc
pop
push
sub
fwait
ds
mov
jg
lock
push
and
aad
pusha
push
cmpl
jns
lcall
loop
sub
jo
js
clc
pushf
gs
imul
pushf
fyl2xp1
scas
addb
in
cli
inc
aas
int
jne
jo
xchg
rclb
fisubs
cmpsb
into
lret
dec
mov
lea
cmpsl
dec
sbb
push
push
out
int
push
mov
push
adc
int
push
xchg
mov
or
or
and
and
gs
pop
bound
sbb
add
mov
rcrb
inc
xor
push
or
xchg
jns
pop
in
pop
arpl
push
stos
cltd
push
lahf
dec
xchg
or
add
lcall
jae
mov
mov
divl
xchg
pop
sub
jno
std
jno
mov
lea
inc
mov
cmp
pop
sbb
flds
xchg
divl
push
pop
js
aam
sub
repz
cld
jns
fs
mov
xor
cwtl
xor
jp
cltd
mov
add
dec
xor
inc
jne
cmpl
ja
jmp
jns
mov
jl
ljmp
inc
test
scas
lret
ret
push
lods
add
ljmp
outsl
fmulp
push
icebp
pop
es
dec
and
adc
lcall
and
pop
xor
xor
mov
xor
push
pusha
std
cmc
call
outsb
insl
sbb
cltd
insb
mov
das
fwait
rolb
ret
psllq
out
xor
cs
movsl
xor
test
or
pushf
push
or
dec
cs
inc
arpl
jne
xchg
in
ret
pop
scas
and
cmp
push
scas
cli
xchg
bnd
hlt
lret
movsl
shll
test
mov
scas
pusha
es
mov
sbb
xchg
lods
sbb
jmp
push
ficoms
push
sub
mov
sub
mov
adc
sbb
pusha
into
pop
push
cmp
mov
jbe
daa
out
sbb
push
or
lret
pop
addr16
aad
pop
sbb
add
push
dec
xlat
dec
aaa
std
imul
es
and
rorb
mov
jns
fisubrl
sbb
lahf
push
dec
add
scas
ret
push
addr16
mov
mov
pop
cmpxchg
out
or
jbe
repz
sub
into
push
test
mulb
pop
xchg
rol
iret
adc
insl
call
mov
loopne
mov
inc
pop
rolb
pop
cmp
inc
mov
xor
imul
out
mov
xor
test
add
cmp
pop
pop
mov
cmp
xor
dec
fisttps
testl
fsubl
jg
cmp
jg
test
xor
inc
lods
mov
jl
fstpl
dec
imul
push
jecxz
push
mov
cld
and
lods
lods
sub
adc
fwait
inc
or
adc
mov
jae
popa
js
mov
jno
shrl
add
daa
xchg
test
clc
leave
xchg
ret
jnp
mov
andl
jecxz
push
jb
pop
mov
aad
shrb
mov
imul
cmp
adc
sahf
dec
and
jns
insl
cmpsb
pop
int
adc
int
and
addl
sbb
fwait
cli
bound
in
pop
pusha
cli
jg
bound
xor
push
mov
idivb
enter
leave
sbb
mov
pusha
test
xchg
sbb
xchg
cmc
mov
inc
inc
movb
push
xor
inc
insb
sahf
xchg
xor
dec
movsl
shll
cli
mov
dec
push
xchg
add
xchg
jmp
insl
mov
pop
or
adc
in
js
mov
enter
in
lods
scas
cmp
and
jle
jae
xchg
push
lcall
dec
mov
fs
cmpsl
insl
fsin
bound
xchg
sbb
or
push
inc
adc
mov
ficomps
shl
dec
or
dec
xchg
and
test
cmp
out
or
fs
inc
dec
mov
lods
pop
xchg
fsubl
inc
xchg
aad
into
pusha
xorb
fildll
adc
cmp
or
mov
and
clc
or
sti
xchg
lds
mov
cmp
inc
mov
inc
jg
or
ds
fldcw
enter
lock
rorb
aaa
shlb
lret
cmpsb
clc
mov
lock
cmp
sbb
and
mov
fsubrp
test
aad
stos
xor
or
pop
pop
stos
adc
mov
push
xor
mov
inc
imul
or
sahf
xchg
aad
inc
test
jmp
sub
mov
adc
cmpl
div
fucomi
push
enter
aas
mov
leave
lea
andb
out
adc
sub
out
icebp
dec
xchg
sbb
pushf
add
stc
and
ds
fadd
jno
fcmovbe
push
nop
pop
jecxz
xchg
ja
jne
gs
insb
or
jne
jge
or
inc
sbb
scas
into
lods
fisubrl
out
in
mov
inc
aad
cmp
inc
inc
inc
dec
or
push
sbb
add
aas
ds
fwait
pop
fistl
add
test
inc
test
cld
lea
out
add
fs
iret
shl
cmpsb
add
push
push
in
int3
cmp
or
add
xor
sub
mov
inc
mov
sbb
xor
insb
mov
inc
sbb
rorl
or
out
sbb
sti
mov
jo
xchg
stc
fdivl
jne
fstpl
xchg
iret
cltd
push
jecxz
lahf
lods
lods
pop
sti
stos
mov
iret
xor
icebp
outsb
icebp
adc
and
shrl
lea
loop
sub
push
aad
fildl
cmp
mov
cmp
cmp
sar
fwait
sub
ret
leave
fwait
inc
ds
push
push
xchg
pop
xlat
call
sbb
dec
and
divb
cmp
sub
mov
adc
dec
lahf
int3
roll
pop
in
pop
fsts
xor
call
push
ja
add
shll
or
inc
call
xor
mov
daa
sbb
clc
enter
jns
cmp
and
ret
adc
ret
pop
lret
xchg
mov
or
das
push
or
adc
jbe
pop
int3
sahf
ficoms
lahf
int3
aam
das
mov
std
jne
lds
mov
cmp
or
outsl
loopne
sub
dec
enter
ret
adc
adc
add
mov
adc
mov
push
mov
imul
popa
sbb
xchg
mov
je
inc
rcr
dec
test
inc
mov
xor
loope
or
ja
ret
inc
and
mov
jns
xchg
les
cmp
pop
sub
pop
fadds
ret
and
into
seto
clc
mov
fildll
dec
add
dec
mov
jns
jns
push
test
sbb
popl
adc
xchg
xor
jno
std
ljmp
mov
fcoml
jb
or
mov
and
jnp
jns
mov
popf
mov
inc
jp
dec
cmp
aam
sti
loope
test
push
std
rol
push
pop
or
lds
imul
sub
sub
stos
jmp
test
fisubrl
cwtl
jp
and
or
pop
push
xor
mov
mov
xchg
lock
xchg
sahf
jecxz
sub
lret
mov
mov
mov
push
js
sbb
push
jmp
mov
pop
jnp
mov
adc
repz
cmpsl
xchg
sub
scas
lods
mov
push
in
inc
and
or
ljmp
push
fsubrs
or
test
cmpsl
popa
or
jbe
popa
xchg
lods
inc
outsb
dec
test
add
fwait
jns
pusha
mov
ds
cli
inc
sub
test
adc
fdiv
pop
xchg
mov
loope
movsl
cmp
cmp
pop
hlt
pop
arpl
out
dec
mov
pop
sbb
lods
xor
lea
mov
adc
cmp
out
or
bound
xchg
call
iret
shlb
jns
adc
mov
lahf
jbe
jge
push
inc
repnz
and
push
push
push
and
jmp
and
into
fwait
stc
jnp
test
movsl
test
xlat
cmp
ficompl
ret
insl
sbb
int
int
xor
cmp
or
mov
out
orb
jge
xchg
jge
sbb
sub
mov
cmp
pop
pop
fs
xor
or
bnd
psubd
add
fwait
jb
jge
sbb
xchg
xor
pop
xor
adc
das
out
sub
push
push
repz
scas
jecxz
inc
dec
rcrl
sbb
aad
pop
and
daa
movsb
aaa
sub
cmp
cmp
lret
mov
push
xchg
ljmp
mov
ds
adc
xchg
loopne
xchg
insl
in
gs
movsl
or
adc
scas
push
ret
fdivrs
imulb
call
sbb
aas
mov
fidivl
and
push
adc
test
add
nop
cmp
or
mov
loop
inc
lsl
mov
pop
cwtl
jle
sub
pusha
or
mov
cli
and
mov
loope
ds
push
jno
clc
es
mov
push
js
dec
and
movsb
xchg
fdivl
cs
push
test
mov
fwait
imul
jge
jge
test
fsts
jb
loopne
scas
inc
cli
add
mov
ds
mov
sbb
mov
fdivp
dec
sub
ds
out
and
pop
mov
rolb
sbb
call
les
and
xchg
icebp
pop
data16
lret
lock
and
pop
xlat
out
stos
mov
lods
fmuls
sbb
imul
mov
not
sar
push
ss
int3
xor
push
push
lahf
lahf
cmp
add
push
nop
fdivrl
outsb
shl
int3
ja
jns
xchg
jo
loope
pop
rcrb
or
jae
int3
cs
scas
lock
xlat
mov
mov
mov
idiv
jle
fsubrs
mov
cmp
or
pop
out
mov
gs
mov
cmp
push
mov
rolb
cli
out
push
mov
orl
dec
push
fcomps
sti
arpl
lods
out
mov
shrl
jns
out
test
and
std
lock
push
dec
push
sub
repz
pop
mov
mov
pop
push
xlat
cwtl
mov
sub
sar
mov
aas
cli
int
pop
out
insb
out
leave
and
out
xchg
lods
mov
repnz
movsb
or
inc
in
std
lret
mull
inc
push
adc
lds
dec
and
inc
mov
pop
sub
add
lahf
pop
push
sub
xor
xchg
jns
fsubrs
std
mov
cld
cmpb
adc
adc
mov
dec
and
sub
mov
mov
lods
pushl
pushf
xchg
cmp
xchg
popf
in
adc
leave
outsb
insb
les
cmp
dec
inc
mov
in
movsl
scas
add
loope
cld
add
sub
push
inc
call
repz
jmp
and
ds
mov
cmc
inc
mov
rcrl
andb
xchg
sub
outsl
aaa
push
rorb
push
dec
or
mov
xor
push
lea
mov
lcall
cmpsb
push
inc
jno
cmpsl
loopne
mov
cmp
and
push
rorb
cmp
mov
or
xchg
cmp
int
loope
xchg
scas
test
out
push
or
sbb
cmp
xorl
mov
sub
pop
push
push
adc
mov
out
nop
jae
mov
sub
fmuls
inc
imul
mov
outsl
xchg
idiv
fisubrl
and
lock
adc
loop
out
test
jo
addl
mov
sub
xor
push
and
add
addb
and
mov
ret
inc
push
in
cmpsb
stos
ja
lahf
jae
mov
clc
cmp
pop
xor
cs
pop
arpl
xchg
hlt
adc
pop
and
jge
xchg
pop
inc
scas
imul
out
or
jecxz
lret
jl
clc
adc
cld
fidivrl
lcall
mov
repnz
mov
dec
es
mov
nop
daa
cmc
es
sbb
std
fdivrl
rcr
repz
sbb
pop
ss
arpl
dec
push
pop
data16
pop
sbb
into
dec
xchg
in
or
push
bound
rcl
pop
add
jmp
add
pop
loop
pop
pop
out
ja
out
mov
push
shrl
push
shl
xchg
xor
cmp
stos
mov
ljmp
scas
xchg
push
daa
arpl
sbb
jbe
cmp
and
adc
stc
inc
sub
pushf
dec
in
or
shrb
xor
xor
fs
ds
bound
sub
mov
cmp
in
test
cmpl
sbb
orb
rorl
pop
push
xchg
push
in
out
repz
cmp
jns
and
mov
out
ljmp
cmpsl
or
add
fdivs
arpl
stos
shrl
iret
push
test
insl
aaa
inc
arpl
jmp
and
cmp
aam
enter
aam
mov
and
cmpb
xor
fcomps
mov
sub
loope
and
or
xor
cmp
jge
sub
hlt
mov
and
test
loopne
dec
dec
iret
inc
in
notb
or
or
adc
mov
sbb
cmp
ss
xchg
sbb
bnd
xorb
push
andb
fnsave
ja
iret
subl
mov
push
mov
stos
sub
loopne
xchg
jg
das
cmpsl
jl
cwtl
jne
pop
outsb
push
jae
outsb
hlt
sbb
cmpsb
pop
out
sahf
mov
mov
mov
ret
arpl
je
xor
xor
aaa
fwait
inc
gs
sub
fdiv
into
add
adc
or
xchg
cld
sar
pop
ljmp
lret
mov
xchg
shll
lock
or
xchg
mov
insl
cmp
hlt
scas
adc
cmpsl
inc
out
sub
cld
push
xchg
call
test
lahf
xchg
pop
pop
jnp
out
cmp
sahf
mov
out
xchg
inc
pusha
gs
pop
sahf
xchg
xchg
aam
mov
insb
xchg
mov
divb
daa
sub
andb
fwait
add
insl
mov
aam
add
pop
gs
pop
jmp
out
rcl
mov
push
in
cmp
das
movsb
mov
js
sahf
popa
sbb
or
inc
push
pop
bound
pop
dec
xchg
xor
test
outsl
adc
in
adc
xor
dec
imul
cmp
mov
dec
mov
in
xchg
adc
jge
jmp
fstpl
cmp
pushf
xchg
cmp
fbld
ds
shl
jp
test
int
add
stos
adc
outsb
cmpsl
pop
ret
test
dec
pop
push
push
pop
stos
es
repnz
inc
mov
cmp
fcmovbe
push
loope
inc
in
jns
aaa
jge
int3
fidivrl
rcrl
bound
and
mov
sbb
das
daa
stos
test
ljmp
ja
dec
repnz
cmp
cmp
dec
mov
xchg
dec
outsb
stos
xor
cmc
test
pop
add
imul
scas
mov
cmp
xchg
push
add
xchg
ret
sbb
xchg
and
scas
sbb
pop
inc
out
repz
or
xchg
jnp
mov
loop
out
add
dec
push
mov
sbb
fimuls
repnz
and
std
aas
sub
pop
mov
fmul
js,pn
sub
es
sub
inc
add
mov
mov
out
insb
pop
leave
xor
xchg
mov
xor
cmpsb
and
fsubrl
xchg
mov
pushf
test
add
jbe
mov
js
imul
xchg
dec
inc
mov
mov
sub
dec
scas
aad
out
jg
pop
mov
movsl
loopne
jno
cli
cltd
xchg
aad
cmp
rcrb
pop
mov
sbb
adc
xor
xchg
sub
pop
inc
popf
push
je
mov
inc
sub
movsb
fisttpll
sbb
movsb
push
popa
xor
mov
cmpb
sub
inc
repz
mov
sti
mov
jb
ret
sub
jnp
sarl
into
ret
lea
sarb
xor
fcmovnbe
hlt
mov
xchg
add
push
xchg
in
fisubrs
xchg
cmpsl
pop
push
imul
inc
mov
mov
in
out
mov
push
cmp
repnz
mov
mov
loop
imul
fildll
fldl
adc
mov
or
cmpsl
pop
mov
add
shrb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
mov
pop
fdivrs
pop
adc
cmp
sbb
int3
ss
into
sub
je
xchg
leave
mul
pop
enter
roll
dec
add
test
imul
or
decl
out
fstps
cmc
push
push
xchg
movsb
add
mov
cmp
cmpsb
and
fstp
pop
aaa
mov
sbb
imulb
cmp
fcomi
dec
jmp
sbb
cmp
test
jmp
push
xor
push
jns
push
add
jmp
imulb
fwait
mov
cwtl
adc
shlb
inc
cmc
aam
test
cmp
mov
icebp
int3
stos
inc
pop
inc
jmp
es
insl
push
cmp
jmp
jge
or
push
lds
or
dec
dec
je
movsb
jo
js
ds
sbb
mov
jnp
dec
pop
cmp
add
inc
push
xchg
cmp
xor
imul
or
xchg
mov
aam
bound
mov
mov
lcall
pushf
lods
ss
pop
cs
fdivrs
jno
adc
iret
cltd
pushf
outsb
rolb
xlat
popf
sbb
cmp
jae
mov
and
mov
push
mov
dec
ds
adc
cmp
mov
xor
and
lods
dec
loope
adc
imul
dec
adc
out
mov
int
es
addr16
test
mov
lret
sar
lret
inc
ret
xchg
pushf
out
cwtl
inc
sti
lods
pop
mov
jno,pt
adc
aaa
or
cli
mov
sub
cmp
sub
inc
lret
pop
cs
mov
pop
rclb
xor
ret
jb
sahf
popf
into
mov
sub
push
and
cltd
ja
lods
clc
sub
fisubl
mov
lds
test
xchg
push
mov
fdivrl
sahf
ja
lods
insb
mov
adc
mov
xor
fs
mov
stos
dec
dec
pop
mov
out
add
inc
mov
mov
int3
sub
mov
or
daa
out
cmp
dec
shl
cmp
push
push
gs
pop
sbb
mov
push
xor
popa
xor
xor
fidivl
jb
and
gs
bt
int
ret
mov
jne
dec
add
movsb
in
cmp
out
mov
insl
inc
sbb
push
mov
addb
and
insb
dec
pusha
add
repnz
das
xchg
add
ljmp
clc
xchg
add
ret
xor
mov
lock
inc
sub
ja
andb
xchg
lahf
sub
stos
std
or
daa
cmpsb
lock
rcll
fwait
sub
adc
and
push
mulb
pop
add
xchg
adc
fsubl
cmpsb
outsb
mov
movsl
fwait
mov
repz
int3
mov
dec
cmp
sbb
aas
jle
fwait
daa
mov
xchg
mov
sbb
hlt
pop
mov
test
ja
out
arpl
xchg
push
call
inc
paddusw
adc
cmp
mov
loop
in
pop
push
mov
jecxz
sahf
adc
xchg
cwtl
testb
sub
clc
sti
insb
rep
xchg
mov
push
or
adc
xor
push
sbb
clc
out
adc
and
pop
xchg
push
shrb
loopne
cwtl
dec
lds
mov
xchg
push
xor
xor
das
and
inc
mov
sub
pop
std
movsb
push
stos
mov
mov
js
mov
push
gs
pop
rolb
scas
sbb
cli
insb
xchg
pop
aam
xchg
pop
adc
cmp
sbb
stos
lea
and
push
icebp
insl
ja
sub
sahf
jnp
std
or
clc
mov
cltd
push
test
adc
out
jmp
sub
sbb
cld
mov
xchg
pop
cmc
out
add
sbb
scas
lock
push
mov
adc
add
stc
dec
sub
int
cwtl
mov
imul
pop
jns
jg
lods
std
ds
div
fwait
mov
lods
jl
xor
outsl
lcall
cmp
rorl
pop
adc
cmp
es
pusha
rclb
mov
sahf
scas
dec
xchg
or
mov
in
scas
pop
imulb
jnp
pop
jle
or
in
cmc
jle
ss
mov
dec
hlt
inc
add
popf
jno
push
push
or
add
orl
sbb
xchg
dec
negl
push
xor
pop
hlt
rolb
mov
sbb
cwtl
and
jge
sbb
test
in
cmp
jecxz
imul
xlat
jg
call
jo
fimull
mov
sub
sub
jbe
push
test
insl
ja
sarb
sbb
xor
imul
fsts
out
pop
pop
jg
not
xchg
aas
loopne
xchg
push
lcall
inc
sar
or
jmp
sbb
mov
notb
clc
cwtl
sbb
ljmp
nop
cmp
push
or
ss
sbb
or
push
sub
and
stc
mov
jno
lock
mov
xor
out
cltd
es
and
aaa
pop
cwtl
mov
mov
xor
into
fbstp
push
insl
std
xor
ret
dec
or
mov
cmpsb
mov
dec
push
fadds
shr
sbb
in
clc
xor
cmp
add
loop
and
mov
out
cmp
or
jns
add
ret
pop
cs
xchg
rolb
test
leave
imul
imul
inc
cwtl
inc
ret
and
jns
cmp
mov
call
dec
out
data16
in
jmp
sahf
cmp
push
mov
push
mov
jp
and
add
loopne
cmp
add
push
ret
mov
lahf
ret
outsb
test
movsl
jnp
add
cld
stc
loop
inc
adc
ret
mov
mov
call
and
sarb
mov
inc
or
mov
ret
pusha
lahf
mov
push
xchg
inc
jecxz
pop
shrl
xchg
xor
jae
outsb
imul
jne
cmp
mov
loope
std
pusha
aas
dec
pop
int3
cmp
mov
adc
and
sub
test
lock
xor
jno
dec
aam
push
or
stos
in
lea
aam
cli
popa
xlat
rcr
int
inc
sarl
xchg
int3
jne
in
movsl
int3
cmc
mov
in
jae
jmp
loopne
aas
stos
sub
ljmp
push
xor
adc
lods
sub
js
lea
mov
inc
cmc
push
testb
push
dec
push
pop
loopne
imul
adc
movsb
sub
jl
add
pop
inc
sbb
mov
lods
ljmp
ja
dec
xchg
or
lar
sub
pop
sub
insb
jg
aaa
cmp
imul
xchg
push
insl
leave
insb
push
je
rol
test
ljmp
ret
adc
pop
pusha
add
clc
sbb
sub
mov
xorl
scas
lods
insb
out
push
outsl
addr16
add
xchg
sbb
mov
pop
clc
loope
lret
js
and
mov
bound
mov
cmp
popa
imul
xchg
outsb
addr16
xlat
hlt
shll
sar
mov
adc
jb
scas
aam
cmc
or
repnz
test
imul
xor
jp
shr
inc
mov
retw
lcall
mov
xchg
das
jmp
push
cmp
fwait
jne
lock
inc
sarl
add
push
cmp
fisttps
clc
xchg
mov
and
arpl
jmp
les
jb
jge
movsl
jns
add
pop
ja
aad
js
jb
add
and
aam
cli
push
jmp
dec
mov
ret
pusha
insl
add
xchg
and
xor
frstor
pop
inc
stc
fsubl
outsl
inc
punpckldq
xchg
jl
adc
jnp
jp
icebp
shll
dec
int3
sti
adc
cmc
lret
out
push
fs
imul
jbe
daa
mov
xor
lahf
push
inc
inc
call
push
jle
repz
adc
insb
sbb
int3
xlat
inc
jecxz
ret
cmpsb
dec
push
ljmp
das
mov
sbb
pop
ja
jae
shll
xchg
cmp
cmp
iret
push
cmp
icebp
rcll
pop
lret
push
pop
arpl
rcrb
xor
sahf
nop
and
ret
inc
mov
and
mov
jb
out
in
mov
jns
aad
jecxz
cmpsl
push
je
mov
call
clc
clc
push
push
pop
sub
push
add
sbb
push
cmp
push
adc
mov
aas
mov
inc
outsb
aas
mov
mov
sbb
jae
ds
stos
dec
icebp
shlb
mov
mov
mov
cltd
xor
rcrb
hlt
push
push
repz
add
dec
stos
push
xchg
add
pop
sbb
xor
ds
jle
mov
jno
pushf
cmp
mov
lock
jg
repz
jmp
out
fwait
clc
push
out
dec
data16
out
outsb
xor
pop
sub
not
add
cmc
pop
push
inc
sub
nop
cli
jno
aas
addr16
loope
mov
rolb
stos
leave
mov
inc
adc
es
andl
xor
std
imul
adc
xor
pusha
inc
jge
repnz
xchg
xor
jmp
adc
push
add
xlat
mov
jbe
mov
mov
std
mov
and
mov
adc
push
cmpsb
sahf
hlt
push
test
push
or
cwtl
sbb
jle
fists
rclb
mov
xchg
fst
push
in
movsl
push
pusha
add
mov
mov
ss
lods
or
dec
xor
fidivl
rolb
add
pop
dec
xor
insb
cmc
xchg
cmp
dec
ds
std
and
pop
inc
fisubs
jb
into
xor
jp
ret
pop
ret
aad
mov
mov
xor
idiv
jecxz
mov
sub
enter
jne
xor
hlt
stc
sub
pop
aam
rol
pop
cltd
scas
inc
test
and
movsb
xchg
rorl
or
lret
mov
mov
ret
mov
push
xor
and
jne
jp
scas
je
mov
cmp
mov
dec
arpl
repz
push
inc
int
sbb
mov
jecxz
bound
ja
mov
mov
daa
mov
mov
xlat
lcall
iret
push
sub
lea
jecxz
add
stc
jne
mov
cmp
push
mov
fnstenv
sub
or
and
mov
sub
sbbb
in
xchg
adc
jle
ds
jb
sti
cmpsb
jb
ds
mov
sub
sbb
test
pop
lret
adc
and
addb
dec
dec
jg
sbb
shlb
push
decb
push
outsl
mov
jp
dec
rcrl
ja
mov
adc
add
inc
fnstcw
sti
das
into
cmp
sub
mov
int
hlt
mov
dec
pushf
sbb
jns
sub
pop
dec
inc
subb
fsts
mov
mov
cli
aad
es
dec
inc
adc
fucomp
jb
pop
ljmp
lea
jo
pop
mov
lret
cmpsb
ja
rep
shlb
sub
stos
cmpsb
scas
jnp
fidivrl
mov
lcall
repz
sbb
out
mov
xor
or
in
add
gs
lock
and
jb
dec
addr16
mov
sbb
cmp
adc
jns
sbb
mov
lret
sbb
js
and
pop
je
xchg
and
fs
pop
int
test
xchg
insb
sbb
inc
xor
jecxz
les
clc
cmp
rcrb
push
mov
lcall
pop
das
xor
out
xor
aaa
call
pop
sub
xchg
lret
cmp
jge
xchg
int
loope
dec
pop
add
jbe
clc
fisubrs
insb
jbe
inc
or
xchg
sarb
call
scas
test
icebp
cltd
push
outsb
aad
rdmsr
int3
cmp
cmpl
adc
cmp
int
lret
sub
mov
insl
aad
es
sub
xchg
inc
xlat
pop
and
mov
movsb
pop
pop
dec
mov
add
sbbl
aad
and
cmc
dec
les
mov
adc
jge
scas
jmp
xor
aad
iret
cmp
hlt
imull
cmpl
jnp
xor
test
std
inc
test
push
mov
xlat
fisttps
cmp
push
adc
imul
xorb
push
movlps
lcall
mov
sahf
xlat
jge
inc
lcall
fdiv
addr16
adc
mov
mov
push
in
out
int3
mov
icebp
cmovs
adc
mov
mov
and
inc
adc
adc
cmpsl
jmp
dec
mov
and
mov
out
aas
jo
and
cli
xchg
fnstenv
xchg
adc
or
cltd
pusha
mov
mov
mov
ss
xchg
xchg
pop
stos
in
int3
mov
xor
jg
pop
xchg
fwait
or
mov
mov
push
insb
sbb
push
add
xor
xchg
adc
xor
fbstp
xchg
jae
xchg
lds
pop
ds
pop
test
or
pushf
push
dec
popf
or
sbb
jp
out
and
ss
inc
cmp
mov
sub
cmpl
pusha
pusha
popf
mov
in
mov
push
outsl
lret
aam
mov
jmp
popf
cmpsb
mov
mov
inc
add
shlb
stos
call
nop
pop
dec
sub
inc
rorl
inc
fldcw
mov
sub
sub
movsb
addb
and
neg
and
dec
cli
mov
rol
mul
xchg
push
stos
cmp
xor
xor
xor
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
jne
in
pop
sarl
aad
test
pop
fistl
je
pusha
ss
dec
jb
stos
ds
mov
lahf
cmp
fmull
cmp
dec
test
ds
rcl
lret
fucom
loopne
push
inc
ffreep
mov
cmp
js
out
insl
aad
fnsave
push
or
jp
mov
lret
scas
lock
stc
sbb
lea
xor
dec
push
es
adc
in
push
xlat
push
popf
cs
call
std
cmpsb
nop
mov
xchg
arpl
push
addl
out
mov
out
sub
int3
ror
cltd
mov
push
movsl
insl
out
fimuls
enter
addr16
push
je
inc
xchg
pop
push
test
imul
mov
cmp
xchg
lods
cltd
pushf
sti
shlb
sbb
jl
jno
call
stos
shll
divb
int
mov
enter
loope
cmp
sub
int
push
mov
test
adc
insb
out
imul
outsb
flds
jno
rcrb
shl
or
mov
push
outsb
or
imul
mov
add
dec
inc
sahf
imul
push
fcomps
cltd
mov
imul
push
data16
jmp
rorl
inc
fcomip
rcr
cli
fidivl
repz
outsb
pop
jb
outsl
sub
movsl
mov
add
push
jae
sub
cld
mov
sub
mov
outsl
pop
and
jle
mov
sbb
fldt
js
mov
lcall
fistpl
mov
mov
jno
test
dec
sub
xchg
or
push
mov
sbb
out
decb
cmp
add
imul
jmp
push
int3
fstpl
repz
push
inc
jecxz
cmpsl
cs
repz
jp
outsl
in
or
pop
popf
cltd
pop
lods
insb
add
call
daa
push
pop
or
push
cmc
dec
test
bswap
in
iret
adc
dec
cli
push
pop
fldt
pop
jecxz
lret
in
or
in
arpl
push
ss
fcomps
lods
xor
push
dec
cmp
add
sub
jb
add
inc
mov
adcb
sub
jp
xlat
adc
pop
cmpsl
test
loopne
mov
nop
stc
xchg
dec
lods
pop
cmp
rorl
sbb
pop
jl
addb
out
inc
mov
mov
add
std
fimull
imul
lds
push
mov
imul
mov
mov
cmp
leave
in
fsubrs
inc
mov
push
mov
pop
mov
xor
cmp
pop
rol
cmp
mov
mov
test
lcall
cmpsb
popa
dec
sti
movsl
cmpsl
sub
add
inc
add
gs
jmp
loop
dec
mov
push
add
jp
xchg
in
mov
gs
in
mov
ja
mov
lea
movsl
pushf
xor
fistpll
sub
pop
loop
adc
pushf
sbb
out
jmp
adc
ss
out
stos
clc
sbb
mov
icebp
fs
pop
sbb
and
imul
out
mov
incb
sub
imul
leave
add
xchg
aas
in
sbb
jbe
movsl
jle
imul
cmpsb
dec
mov
bound
test
adc
pop
cltd
jo
rcrl
or
sbb
ds
mov
jno
nop
xor
push
xlat
jns
or
add
mov
pop
xor
mov
jo
or
mov
and
inc
cld
push
jnp
sahf
xor
add
push
pop
in
mov
jl
in
jb
mov
mov
jns
stos
sbb
cld
jno
cld
mov
cmp
mov
lock
das
sub
jmp
sub
inc
jne
xchg
or
iret
push
inc
adc
pop
lock
movsl
push
mov
fmuls
pop
dec
lcall
mov
push
inc
cmp
dec
adc
sbb
push
push
dec
mov
lret
cmc
sub
cmp
fs
push
dec
jbe
jbe
mov
movsl
xor
lret
mov
adc
daa
fcomps
pusha
pop
movsl
ds
pop
pushf
mov
icebp
add
or
out
mov
notl
mov
lret
xlat
add
mov
jl
mov
xor
sbb
shl
lea
out
icebp
push
mov
push
inc
pop
pop
fbld
jne
neg
pop
scas
and
sub
bound
xchg
ret
out
xorl
loopne
adc
sub
ret
xchg
mul
lods
arpl
and
cmpl
xchg
mov
cli
dec
std
mov
bound
cmp
sbb
jo
bound
inc
daa
and
push
fcoms
das
ret
mov
fucomip
addl
or
out
inc
jns
jl
imul
or
or
repnz
xchg
inc
sbb
in
mov
into
xchg
cltd
xor
inc
push
adc
repz
mov
mov
int
bound
outsl
jns
cmp
lods
adc
mov
sub
loop
jp
push
mov
sbb
int
inc
outsl
daa
stc
mov
fiaddl
adc
dec
ffreep
pushf
imul
xchg
insb
stos
insl
out
mov
mov
xlat
cmp
inc
mov
jmp
push
lds
dec
out
mov
cld
dec
jecxz
fs
push
cmpsb
jns
and
int3
cmpl
aam
leave
sahf
xor
in
sahf
and
cld
xor
int
jo
scas
mov
daa
jns
lods
adc
fs
out
xchg
and
dec
cmpsl
push
xor
sahf
jo
mov
repnz
inc
imul
dec
outsl
push
xor
inc
and
mov
icebp
adc
lret
add
test
inc
mov
jge
jle
add
inc
xor
add
xchg
scas
push
jecxz
or
jns
adc
sar
jp
sub
int3
cld
jmp
jl
scas
testb
cmc
div
scas
push
pop
mov
xor
push
mov
cld
add
aas
imul
pop
jg
fwait
cmp
pop
xor
jecxz
pop
cmp
fwait
or
mov
mov
sahf
cs
xchg
add
aaa
stos
ret
ficompl
xlat
pop
dec
call
sub
leave
fmull
xor
cmc
cmp
lret
stos
add
sub
jne
push
lret
xchg
mov
pop
xor
cwtl
lret
xchg
add
push
gs
lods
mov
xchg
jne
push
sub
ret
mov
pop
outsl
and
fstpl
xchg
decl
or
xchg
mov
jbe
push
add
dec
cld
mov
aaa
sub
lods
stc
movsb
in
jno
jnp
push
xchg
xor
sub
push
rorb
mov
jo
popf
loopne
jnp
adc
jge
pop
push
decl
add
ds
imul
bound
test
inc
lret
lahf
pusha
and
imul
sub
jge
jp
in
jae
add
sarl
xchg
aaa
rol
aad
jmp
adc
aad
into
add
pusha
dec
outsb
xchg
mov
sub
jbe
push
and
and
pop
and
imul
mov
daa
outsb
xor
frstor
insl
and
stos
movl
loop
and
mov
fistl
outsb
cmp
shrl
jmp
mov
fisttpll
lods
inc
lods
xchg
jecxz
fstpl
mov
and
rcrl
sub
data16
or
scas
and
cld
enter
cmc
xor
push
jp
dec
mov
ja
sub
and
cmpsl
mov
pop
lods
mov
mov
outsl
stc
test
inc
add
popf
jne
dec
ret
add
leave
xor
ljmp
aaa
icebp
sub
imul
hlt
nop
xor
push
aam
pop
and
cmp
mov
insb
add
shrb
adc
test
mov
mov
and
movq
imul
push
js
mov
xchg
inc
int3
mov
pushf
jmp
icebp
fwait
icebp
loope
out
daa
scas
es
or
pop
aam
aam
loopne
pop
lret
xorl
fimull
jbe
pop
adc
cmp
mov
xor
xchg
dec
jne
cli
sub
xor
and
fnstenv
call
push
out
xor
xlat
push
inc
jmp
lret
and
mov
js
xor
jl
leave
and
imul
xchg
jo
mov
sbb
add
fisttpll
adc
fadds
lret
jecxz
gs
cmp
les
test
cmp
inc
pop
jbe
loopne
insl
push
inc
idiv
leave
test
lock
lret
push
ror
add
stc
push
mov
sub
fwait
sahf
les
mov
lds
cld
xor
mov
xlat
sub
icebp
cli
movsl
aaa
inc
mov
daa
nop
adc
dec
mov
dec
adc
sbb
arpl
dec
adcl
repz
sub
es
cmpsb
negl
push
jb
sbb
test
pop
in
sbb
dec
stc
sbb
xor
jo
sti
shll
push
mov
scas
repnz
and
pusha
mov
pusha
ret
sub
icebp
mov
popf
insb
sbb
call
test
inc
notl
cltd
xchg
mov
fcmovnbe
hlt
insb
sub
js
mov
push
mov
rcr
xchg
jb
shll
addr16
movsl
mov
scas
rcl
roll
mov
ja
pop
fwait
jne
mov
jno
cmp
mov
pop
nop
lea
rol
or
mov
or
in
stc
inc
mov
jbe
push
popf
and
sbb
lods
add
arpl
mov
imul
cmpsb
cltd
mov
shlb
mov
mov
xorl
mov
lea
fldt
xchg
fstpl
pop
lock
sbb
jnp
push
mov
inc
sbb
xchg
imul
mov
addr16
adc
pusha
jle
xchg
adc
adc
loope
mov
push
pop
push
ret
mov
outsl
aaa
cmp
loopne
hlt
mov
pop
movsl
dec
mov
loope
xor
jg
movsl
fs
in
xor
mov
sub
cmpsb
subb
mov
xchg
lock
mov
negl
movhps
in
in
enter
aam
mov
sti
inc
outsl
pop
shll
mov
ret
shlb
imul
clc
push
pop
enter
out
push
cli
xor
lcall
pop
jae
cmpsb
pop
movswl
cmp
sub
imul
mov
push
inc
sbb
into
subl
cmc
jl
daa
and
inc
jge
fwait
test
xor
mov
and
nop
test
shrb
jge
aas
test
push
pop
dec
adc
jne
inc
jecxz
jae
test
mov
faddl
push
adc
jae
sbb
jmp
shlb
mov
mov
popf
xchg
add
lods
push
dec
mov
scas
rcr
sarl
inc
or
or
out
sub
test
inc
mov
scas
lock
outsl
fdivrl
inc
mov
test
adc
int
jne
pop
push
adc
call
andl
adc
ja
and
xchg
int
jmp
xchg
ja
dec
loopne
ljmp
rclb
out
shl
dec
stos
inc
add
fdivl
or
sbb
je
std
fwait
push
and
aas
ret
into
stos
cmp
fistl
cmp
aas
fisubrl
cli
cmp
jecxz
adc
loope
andb
iret
add
jno
sbb
movsl
hlt
sar
imul
pop
sbb
jb
xor
sub
or
shll
scas
dec
enter
adc
pop
das
imul
lds
insl
jg
mov
hlt
rcr
adc
loopne
xchg
xchg
mov
mov
cli
mov
aaa
xchg
cmpsb
cltd
test
lret
pcmpeqw
hlt
jge
inc
sahf
xchg
cmp
xchg
mov
jecxz
pop
ja
icebp
data16
push
mov
pop
lea
inc
hlt
sub
inc
or
dec
push
mov
scas
in
mov
mov
les
ds
mov
xchg
es
les
mov
xor
cmp
mov
loop
popa
push
add
mov
and
loopne
rcr
addr16
adc
flds
adc
clc
repz
stos
aad
cmp
out
rorl
push
jo
lret
faddp
adc
inc
and
shl
add
add
adc
loop
je
and
mov
adc
popf
jae
inc
clc
xchg
mov
icebp
and
shl
add
lods
cld
mov
push
dec
push
popf
add
adc
sti
pop
es
shlb
mov
imul
addb
xor
push
jmp
cli
mov
sahf
or
xor
sub
cmpsb
ljmp
inc
pop
loop
dec
call
psubb
adc
jne
lods
pop
xor
mov
xchg
lock
push
or
rcl
jl
call
aam
into
aas
cmpsb
stos
mov
add
jge
xchg
push
adc
jne
into
sar
lret
pushl
daa
mov
cmp
in
scas
dec
xor
cmpsb
jg
icebp
fisubrl
push
mov
das
push
gs
lret
out
imul
pop
daa
pushf
sbb
sahf
cmp
push
lret
in
mov
imul
popf
sbb
mov
push
stos
jge
bound
pop
fiadds
jns
lock
lods
cmp
jmp
arpl
andb
cmpsl
shrb
mov
pop
fsts
fs
or
lock
push
lock
popf
loopne
mov
test
aam
shl
jne
mov
pushf
ficoms
and
sbb
lock
mov
cmp
insb
xchg
clc
lcall
jp
add
hlt
sub
mov
lret
adcl
jle
jbe
push
cmp
jns
inc
push
dec
mov
adc
or
fisubl
cwtl
add
xchg
inc
mov
lea
js
sbb
shrl
adcb
popf
in
dec
xlat
sbb
subl
scas
sbb
ret
rol
mov
aaa
clc
mov
pop
pushl
mov
iret
push
movsl
test
std
lods
cltd
mov
mov
xor
sbb
and
jo
push
inc
pushf
pop
aas
int3
jns
dec
xor
jo
jmp
xor
jb
pushf
pop
mov
test
outsb
test
cmp
test
add
push
mov
lret
fwait
insb
push
fsubr
aad
aad
in
repz
scas
mov
push
mov
mov
inc
aas
iret
push
or
stos
int
jne
fs
pop
clc
icebp
lods
loop
sub
xor
mov
mov
sbb
decl
and
movsb
ss
mov
and
dec
sbbl
in
repz
fnsave
dec
mov
sbb
andl
cmp
inc
push
ret
push
gs
push
mov
imul
dec
pop
idivb
lods
xchg
dec
or
dec
or
xchg
add
mov
in
mov
jl
cltd
das
mov
push
test
lods
dec
or
lret
loop
lret
sub
or
mov
pop
fwait
cli
clc
adc
jno
popf
decb
push
mull
popf
sbb
push
pop
pop
push
jb
daa
add
daa
xlat
jno
mov
add
or
and
and
add
aad
adc
xchg
aas
dec
adc
adc
and
mov
pop
rolb
inc
inc
push
cmp
je
mov
adc
stc
sbb
sbb
addb
cmp
repz
repnz
xor
lods
jne
inc
sub
mov
cmp
sub
pop
nop
mov
or
add
lret
dec
sub
and
jnp
js
int
push
mov
movsl
jp
fstpl
leave
jno,pn
pop
pop
mov
mov
cmpsb
rcrb
fwait
inc
mov
jo
add
jae
cld
pop
enter
cwtl
dec
repnz
or
fidivl
jo
insl
movsl
imul
popa
in
in
jl
mov
sbb
mov
roll
ss
scas
inc
int
test
sub
stc
mov
mov
icebp
mov
jns
push
insl
repnz
cmp
je
pop
xor
pop
lret
jl
clc
js
jns
jne
lret
insb
xchg
mov
xchg
or
int3
push
leave
add
mov
in
xor
xorl
lods
test
or
lret
mov
mov
mov
push
in
mov
xor
fstp
add
sub
push
xor
aaa
mov
fimuls
mov
leave
ret
push
mov
inc
cmpsb
addr16
xlat
xchg
jns
loop
lcall
test
mov
stc
pop
outsl
cmp
test
and
xchg
pop
in
mov
fcoms
in
add
scas
js
repz
in
in
fwait
push
sub
adc
movsb
adcl
outsb
dec
ja
sbb
cld
js
js
fs
mov
push
push
mov
mov
imul
adc
orl
loop
out
gs
xor
adc
es
or
xor
out
ljmp
insl
jp
push
sti
into
xchg
mov
icebp
adc
lods
mov
push
jae
push
cmp
inc
xchg
fldl
mov
cmc
mov
inc
frstor
jecxz
call
mov
movsb
xor
loope
in
push
and
das
clc
outsb
movsb
ret
sub
mov
lahf
mov
inc
leave
test
popl
repnz
hlt
pusha
outsb
call
stos
cmp
movsb
leave
lods
roll
outsb
cmp
ja
xchg
add
scas
pop
sahf
mov
mov
adc
fidivrs
into
rcr
adc
lock
rclb
jne
xchg
aam
adc
adc
mov
dec
leave
in
pusha
sbb
push
repz
test
pop
or
repnz
addb
cmp
rcll
pop
inc
xor
enter
mov
push
mov
mov
adc
and
push
mov
xor
pop
lahf
pop
ss
dec
test
add
or
ja
inc
cmp
fildll
lcall
int
outsb
addr16
mov
mov
mov
add
fwait
subb
mov
decb
pop
push
scas
mov
stc
jp
popa
xlat
mov
incl
cmc
pop
int3
in
inc
push
sub
xor
ret
psubq
fildll
outsl
jle
mov
sahf
jae
push
sbb
adc
xorb
lcall
pop
jb
in
sub
pop
pop
scas
cmp
movsl
sti
cmp
mov
push
adc
dec
inc
fistpll
add
add
dec
sub
cmp
jnp
push
jle
jp
test
push
sahf
gs
loope
mov
pop
mov
inc
test
mov
int3
out
xor
mov
loopne
dec
xchg
xor
testb
rcr
add
inc
cmp
adc
sbb
xchg
popa
cmp
fwait
sti
push
enter
stos
mov
roll
or
aas
dec
clc
pop
pop
jno
lahf
add
daa
sti
add
in
push
sti
enter
inc
icebp
cmp
lods
sarb
mov
aas
gs
mov
neg
sub
ror
mov
sbb
mov
scas
cmc
cmpl
pop
cmp
and
call
and
sub
bound
loopne
lcall
push
psllq
dec
arpl
mov
inc
lahf
cmpsl
cmc
sbbb
and
pop
lods
aas
cli
or
aad
shll
lds
xor
std
xlat
addr16
aaa
xor
loop
add
and
lods
inc
dec
test
xor
dec
loop
in
jb
popf
push
loop
pop
daa
adc
jecxz
xchg
outsb
inc
lret
inc
mov
push
jnp
and
icebp
or
cli
mov
cmp
sbb
test
pop
cwtl
jns
sub
divb
xor
push
dec
mov
ret
inc
xchg
jo
aas
pushw
je
enter
or
adc
jg
mov
jmp
jbe
pop
sbb
xor
cltd
adc
das
sub
popf
insl
hlt
mov
push
fsubrl
xchg
rcr
mov
or
ss
sbb
sbb
lods
icebp
mov
lahf
pusha
repz
fisttpl
add
xchg
orb
fidivs
or
call
repz
cmp
lcall
jge
mov
push
jecxz
add
cmpl
mov
mov
pop
cmp
jo
cmp
lahf
fs
or
mov
jle
out
mov
add
shrl
xor
ss
cmp
or
cmp
ret
out
std
mov
dec
mov
dec
shrb
mov
cwtl
jne
mov
adc
jbe
cmp
jns
adc
push
ljmp
lret
pop
jg
dec
xor
push
jae
sbb
mov
test
rorb
add
das
stc
cmp
inc
lret
mov
data16
hlt
sub
cwtl
cmp
sbb
xchg
cwtl
pop
cmpb
lds
out
mov
ds
pop
adc
in
pop
sar
push
mov
lret
icebp
ret
push
test
fsubr
add
mov
mov
sub
nop
push
cmc
push
divl
push
mov
int3
mov
movsb
imul
xor
ds
sbb
dec
call
lods
in
mov
fistps
cmc
push
es
xchg
inc
sbb
jge
inc
sub
dec
jle
cmp
andl
jmp
lds
ret
mov
andl
popf
and
leave
out
add
mov
pop
lcall
lahf
out
ja
and
out
mov
shll
and
rcrl
pop
fsubrp
dec
jb
mov
adc
mov
add
and
sub
dec
push
fwait
fs
add
jmp
cmc
insl
pusha
enter
mov
mov
cmp
hlt
out
mov
push
cld
aam
insl
sbb
sahf
ret
mov
out
inc
pop
xchg
adc
icebp
into
pusha
push
ljmpw
dec
cmc
inc
lret
and
movhps
inc
jg
sub
mov
mov
xor
add
push
mov
dec
adc
pushf
jo
fstps
mov
or
cmp
or
clc
mov
in
imul
addr16
decb
jge
xor
add
icebp
cmp
jns
pop
lods
jp
lea
repz
inc
mov
ds
adc
jge
or
sub
insl
subb
std
das
daa
xchg
jae
cmp
js
sub
fs
and
xor
and
pop
psubd
ret
cltd
repz
loope
pop
jle
das
call
mov
cltd
in
movhps
push
dec
test
cli
push
jnp
xor
inc
filds
jo
xchg
mov
pop
mov
out
fs
cmp
loop
aam
and
aam
int
dec
in
std
int
or
add
ret
popa
sbb
ljmp
movntq
mov
stos
xchg
dec
psllw
ja
inc
not
jbe
lcall
and
fdivl
ret
hlt
lods
xchg
jecxz
lods
mov
pop
push
mov
in
int3
outsl
sbb
jae
idiv
and
mov
pop
mov
fsubl
xor
cmp
xor
into
dec
pop
push
mov
dec
in
ret
jl
xchg
push
or
popa
icebp
pop
das
sbb
test
mov
and
sahf
into
adc
leave
out
sbb
dec
repnz
jno
cmp
je
sbb
in
add
mov
push
mov
jg
sub
aam
daa
and
xchg
xlat
gs
mov
xlat
dec
or
adc
ret
push
ss
sub
sub
ds
jmp
jmp
sarl
dec
fmul
aad
icebp
icebp
push
mov
enter
adc
sbb
cmp
pop
push
mov
or
jecxz
mov
scas
sub
sub
jne
xchg
out
icebp
mov
mov
cmp
inc
mov
and
std
sbb
fldl
pop
add
jle
in
test
jmp
sub
mov
popf
mov
insb
stc
pop
out
pop
out
jecxz
dec
inc
insl
mov
push
or
scas
aas
pop
cmpsb
dec
aas
loope
mov
cmc
inc
lock
jno
aas
lret
call
int3
mov
cmpsl
int3
dec
ret
jge
mov
cmp
sub
fcomps
xchg
iret
adc
lcall
loope
aaa
scas
sub
cmp
push
test
out
fs
and
std
insb
adc
cmpsb
bound
nop
mov
shrb
xchg
jmp
pop
stos
xor
and
push
add
cmp
lods
sbb
stos
decl
sbb
sbb
sbb
in
aas
add
jmp
xor
sbb
andl
push
jg
xchg
cmp
sarb
mov
cmpb
andb
push
mov
pop
enter
push
pop
push
pop
loopne
pop
sub
pusha
leave
pop
fs
mov
xor
add
xor
cs
mov
cld
shl
fsubp
ret
and
imul
mov
out
mov
and
addr16
iret
adc
in
xchg
scas
leave
mov
fwait
adc
roll
lds
bound
add
add
lahf
out
cltd
add
mov
cmp
mov
and
clc
leave
sub
inc
outsl
shll
fwait
mov
frstpm(287
movsl
enter
mov
pop
outsb
pop
iret
or
addb
dec
mov
es
ljmp
jbe
push
cwtl
repnz
lret
cs
mov
daa
jnp
mov
jmp
cmp
mov
jnp
and
test
arpl
sub
in
iret
jge
loope
push
or
scas
mov
mov
mov
mov
pop
mov
std
adc
jmp
je
cwtl
sahf
mov
mov
sub
mov
lahf
lods
jo
into
jle
out
mov
adc
les
ja
or
inc
jl
adc
iret
movsb
in
aam
adc
mov
xor
sbb
addb
adc
jge
test
sbb
jmp
or
or
cmpsl
mov
out
push
cmp
mov
mov
push
imul
fwait
mov
into
xchg
jbe
inc
mov
cmp
push
lods
fsts
fistpl
test
lds
mov
scas
push
xor
inc
stc
jl
hlt
xchg
decb
mov
xor
icebp
imul
or
inc
and
arpl
sarb
pop
cmp
xlat
repz
fdivl
mov
enter
sarb
cmp
les
fsubrs
dec
xchg
pop
outsb
arpl
xor
lret
aaa
fwait
push
inc
pop
sub
xor
pop
pop
imul
mov
mov
pop
nop
aas
jmp
push
xchg
inc
mov
xor
mov
mov
mov
test
mov
repz
imul
xorl
faddl
testb
rorb
add
and
mov
outsb
sub
aas
lahf
jmp
test
sbb
pop
mov
data16
fisubs
push
inc
cmpsl
mov
aam
mov
scas
jo
rorb
add
jmp
pushf
mov
push
mov
repz
div
mov
xlat
popf
xor
sub
cmp
dec
pop
jg
out
and
push
ret
inc
enter
enter
push
jl
mov
cvtdq2ps
daa
frstor
mov
sti
icebp
mov
dec
adc
jmp
cmp
push
xor
dec
inc
nop
mov
call
sbb
dec
loop
jg
jo
xor
dec
add
push
cmp
push
fndisi(8087
sub
jns
inc
sbb
pop
shlb
cs
xchg
in
or
adc
cmpsb
adc
fsubl
xchg
mov
or
out
insb
mov
add
pop
enter
add
lahf
adc
jge
mov
dec
add
push
mov
push
jb
push
loopne
push
push
cmc
xor
fcomp
jns
and
pop
or
pusha
xchg
xchg
ss
cmpsl
push
test
cmp
sub
dec
xchg
movsb
mov
jns
adc
fisttpl
push
jmp
std
mov
mov
addr16
leave
das
push
in
mov
mov
xchg
mov
mov
sbb
xchg
data16
adc
cltd
xor
popf
mov
nop
jo
xlat
cmp
enter
add
sbb
shll
mov
xor
ret
push
or
inc
fwait
push
cmp
lods
dec
sahf
add
inc
lods
shlb
nop
pushf
sti
stc
lods
add
in
cwtl
pop
jb
xor
jge
mov
cltd
lahf
pop
pushf
in
and
and
mov
push
das
in
data16
lret
push
roll
lock
add
ret
addr16
mov
ja
mov
cwtl
enter
fstpt
cli
cmp
add
mov
push
mull
mov
push
shll
fisubrs
cmp
fwait
push
scas
push
push
or
in
dec
mov
in
add
xchg
or
fbld
outsl
adc
out
lahf
stc
sub
xor
cmpb
push
inc
sbb
outsl
sbb
mov
inc
lahf
add
aas
jge
lods
and
adc
inc
andnps
pop
shlb
push
fmull
gs
push
inc
inc
xor
jl
sub
xor
roll
lahf
aad
cmp
mov
mov
xchg
adc
lahf
outsb
dec
pushf
add
lcall
dec
mov
shll
movsl
mov
out
andb
insl
mov
je
push
cmc
cmp
mov
out
hlt
popf
in
test
push
pop
int
psllq
xlat
sub
jo,pt
push
inc
out
adc
push
xor
std
leave
lea
call
jle
mov
rorb
pop
negb
and
push
flds
fs
jle,pt
jmp
dec
stos
cmp
and
inc
inc
movl
in
push
scas
lds
outsb
xchg
dec
lods
sbb
xor
sahf
jo
iret
loop
push
sti
scas
mov
xchg
dec
jne
cmp
jnp
jmp
push
mov
addr16
ret
add
sti
fs
cmp
sub
test
inc
sbb
fmul
iret
aaa
ret
mov
adc
push
outsb
mov
notb
push
sub
pop
test
enter
imul
cmp
cwtl
pop
mov
cli
jae
cltd
mov
hlt
jo
enter
sbb
pop
loopne
sub
out
jne
mov
mov
push
int3
mov
push
push
push
fimuls
xchg
sahf
dec
stos
sbb
pop
push
push
divl
jle
ficoml
aad
int
mov
lods
scas
dec
xchg
popa
jae
or
xor
fdivrp
enter
push
mov
pop
stos
lahf
jecxz
fidivrs
ja
inc
mov
std
loopne
orps
xchg
xchg
mov
aad
or
arpl
pop
jl
mov
cli
push
inc
or
pop
inc
mov
jnp
inc
push
jg
and
push
leave
insl
in
cmc
jne
jmp
adc
mov
dec
add
mov
outsl
or
icebp
enter
mov
mov
jle
jae
adc
shrb
sarl
xchg
add
cmp
sub
add
lds
xchg
in
movsb
mov
push
jle
aaa
sbb
fcom
xor
jno
add
and
cld
mov
mov
inc
push
cld
xchg
inc
ret
imulb
mov
and
cmp
pop
in
dec
jno
push
out
push
cwtl
mov
std
sbb
adc
push
mov
mov
test
fidivrl
ljmp
and
test
dec
adc
cmpsl
pop
lret
inc
imul
mov
push
mov
stos
out
and
jo
fsubrs
aam
dec
mov
clc
es
xchg
adc
sbb
mov
filds
dec
notl
mov
mov
jno
sysexit
fwait
insl
fidivs
enter
add
dec
adc
jmp
mov
mov
out
je
dec
cmpsl
cmp
rol
fnstsw
add
cld
pop
jp
xchg
mov
xlat
xchg
add
out
cmp
add
sub
and
std
mov
pop
iret
inc
add
popa
cld
ja
insb
es
xchg
out
mov
hlt
stc
xchg
mov
jae
pop
les
push
dec
jmp
push
adc
test
cmp
movsb
rorb
mov
scas
push
pop
shr
or
push
pop
mov
sete
push
mov
scas
mov
dec
cwtl
gs
dec
pop
dec
push
add
jnp
sbb
fcomip
aaa
scas
popa
xor
inc
cmpsb
in
dec
pop
lret
cli
mov
orl
sti
sbb
aas
faddl
xor
fsubl
repz
ret
mov
cmp
or
shlb
movsb
mov
aam
and
movsl
and
mov
cmc
lods
push
fcoml
into
xor
cmp
mov
mov
jns
mov
jge
imul
in
jbe
ja
xorb
adc
xchg
mov
jecxz
sbb
daa
xchg
fstl
outsb
mov
fdivrs
dec
repz
mov
fwait
popa
inc
lret
sahf
sbb
clc
scas
adc
sti
mov
fidivrs
pop
ja
rcr
test
jle
cwtl
jl
xor
mov
mov
dec
out
sti
pop
bound
sar
bound
sbb
inc
nop
out
mov
das
jecxz
cltd
and
xorl
cltd
push
lds
xchg
fisubrl
adc
mov
cli
and
push
pop
stc
mov
lea
aaa
inc
pop
popa
cli
push
enter
in
shll
in
jae
mov
aam
inc
subb
lahf
cmp
adc
ret
xchg
repz
ja
fcmovne
movsb
sbb
rclb
inc
ret
or
data16
dec
jae
movsb
inc
xchg
adc
adc
je
add
cmp
xor
int
mov
xor
adc
mov
dec
sbbl
pop
push
dec
gs
jmp
cmpl
aaa
cltd
loopne
jmp
mov
xchg
iret
add
lds
movsb
fmull
hlt
push
cmp
cli
jnp
es
xchg
jle,pn
push
stos
in
daa
add
cmp
lods
imul
adc
std
jns
inc
cmp
pusha
xor
punpcklwd
fistps
cmp
push
mov
cs
inc
jecxz
mov
scas
pop
inc
iret
cltd
jns
mov
fs
popf
roll
lret
aad
fld
imul
imul
push
dec
leave
sub
ja
adc
cmpl
dec
mov
adc
lds
pop
add
mov
mov
xchg
fwait
mov
pop
sub
jmp
into
aad
test
xchg
pop
outsb
cmp
daa
es
into
lcall
aam
mov
mov
out
jns
shlb
cli
cmpsl
arpl
stos
mov
dec
mov
iret
mov
pop
cltd
inc
out
inc
subl
sub
popa
rcrb
lods
lods
in
add
sbb
xchg
cmp
cmp
mov
enter
jl
fistl
enter
shr
adcl
xor
pop
jo
push
jno
jbe
imull
sbb
jge
out
cwtl
xor
out
das
dec
movsl
mov
shll
sub
pop
lds
and
incl
arpl
out
imul
push
fstl
mov
addr16
adc
mov
mov
lahf
jecxz
xor
outsl
aas
and
push
pop
fildl
test
mov
sbb
movsl
xchg
pushf
mov
arpl
je
mov
push
pop
or
mov
xchg
lcall
inc
push
jmp
mov
pop
pop
inc
cs
add
sub
adc
lea
jae
sbb
out
lock
add
hlt
fsub
add
gs
div
stc
lret
push
fucomip
mov
fstpt
out
repz
insl
xor
mov
je
mov
add
fidivrs
xor
jmp
test
pop
push
stos
ljmp
lods
mov
xchg
or
scas
es
jge
test
add
sub
cmpsb
push
jno
mov
mov
je
movsb
mov
lret
mov
and
pop
lods
cmp
push
subb
cmpl
fwait
xor
xor
cs
mov
orb
aas
lahf
jns
scas
loop
sbb
lret
in
sbb
cltd
inc
jg
int3
and
lods
ja
or
adc
and
pop
lods
and
mov
popa
int3
xchg
xor
mov
insb
les
or
mov
icebp
fucom
imul
jp
pop
sub
fldl
lods
jne
dec
push
cld
mov
cmp
jmp
push
dec
icebp
mov
push
and
cmpsb
sub
inc
jb
pop
cli
dec
sub
pusha
mov
mov
jo
sbb
or
pusha
sub
mov
mov
loopne
pop
push
lret
mov
enter
js
sbb
leave
aad
ljmp
dec
dec
iret
lret
sarb
outsl
push
adc
sbb
lret
fdivp
in
lds
mov
mov
jae
andl
cmc
mov
insl
js
iret
xchg
jne
adc
sub
shll
add
xchg
mov
fmuls
shlb
mov
cmp
or
mov
bound
add
cmp
test
adcl
or
inc
ret
loop
add
fisttpll
push
xorb
shll
lods
movsl
mov
push
mov
cs
cmpsl
xor
xchg
and
hlt
test
pop
ret
notb
pushf
pop
dec
push
nop
cmp
fisubs
inc
pop
xor
and
sub
inc
cmp
add
fs
fcmove
xlat
push
or
call
sub
cmp
push
jbe
mov
xchg
jmp
loopne
or
inc
mov
repnz
pop
sub
fnsave
and
cmp
sbb
push
test
mov
dec
int
iret
jmp
enter
xchg
xorl
mov
icebp
inc
sti
cmp
mov
scas
je
pop
mov
iret
clc
xlat
es
stos
movswl
inc
sbb
movsl
cmp
lret
cmp
mov
repnz
xchg
lret
je
mov
cmp
add
test
mov
fdivr
sub
mov
jmp
popf
mov
int
rcll
mov
adc
lea
cmp
and
xor
mov
cmp
popa
cmc
bound
xor
scas
and
icebp
mov
or
cmp
inc
xor
call
into
out
mov
inc
dec
rcll
mov
jo
lock
xchg
loope
sub
cmp
jle
mov
pop
sbb
in
scas
xlat
sub
repz
lahf
push
jnp
out
into
cmp
sahf
es
fs
fiadds
mov
popf
dec
add
dec
jp
fwait
ds
cli
mov
cmp
push
mov
loope
dec
cmpsl
shrb
pop
jge
clc
sub
jmp
and
dec
stos
rorb
sbb
scas
sbb
arpl
pop
mov
test
or
mov
cmp
inc
jmp
pop
adc
jno
push
outsl
das
mov
inc
fstl
cli
cld
movsb
popa
cmpb
sbb
data16
sahf
and
add
test
xor
pushf
shl
sar
sbb
andb
ja
cmpsb
add
call
aad
push
jo
stc
pop
cmpsl
stc
lret
jae
mov
push
mov
lods
sbb
push
jb
loop
push
cld
subb
std
push
push
mov
aas
stc
movsl
mov
icebp
out
push
mov
cmp
adc
and
add
retw
and
dec
sbb
sub
in
adc
mov
cltd
lahf
add
and
pop
lock
pop
jo
aas
cmp
data16
cwtl
ret
cmpsl
sub
test
in
add
mov
pop
sbb
cmp
xchg
ret
mov
push
or
add
or
push
cmc
mov
add
sbb
xchg
pop
out
das
pop
imulb
insb
sahf
mov
mul
ss
inc
outsl
dec
rcl
lcall
loope
dec
mov
mov
sub
jecxz
push
daa
xchg
lahf
cmc
gs
mov
cs
lcall
xchg
scas
fiadds
jns
pop
mov
imul
jg
xlat
shlb
inc
dec
or
pop
jne
out
dec
push
imul
add
jb
add
fmul
xor
adc
xor
xchg
dec
fmulp
sbb
sbb
push
cmp
xchg
imul
adc
inc
mov
enter
mov
aaa
cmpsb
inc
xchg
inc
ret
pop
popa
dec
scas
add
test
popf
lods
cs
mov
adc
aam
outsb
sub
mov
dec
or
and
loop
mov
dec
xor
xor
mov
mov
repnz
mov
sub
ja
dec
jmp
mov
adc
xchg
mov
xor
push
fs
daa
jl
shll
ja
jo
sub
stos
outsl
adcb
in
xchg
and
mov
push
fidivrl
mov
jno
loop
jnp
nop
loope
add
loop
out
xchg
jae
lods
xor
jle
push
xchg
xor
sahf
insl
fisubrs
rcrb
cmp
xorl
push
ljmp
rcrl
aad
test
push
loope
lea
mov
lret
mov
xchg
fisttpl
iret
xchg
daa
sub
ret
scas
sbb
jle
out
jne
mov
mov
and
mov
mov
or
incl
subl
dec
out
sbb
mov
lcall
inc
stos
xor
xorl
outsb
pop
mov
out
pop
mov
aad
popa
pop
sbb
roll
mov
fcmovu
lahf
mov
je
in
jne
push
fstpl
cmp
pusha
icebp
cmpsl
icebp
xor
xchg
or
xor
shlb
je
adc
dec
cmpsb
mov
sub
xchg
sub
jnp
ljmp
sub
imul
and
mov
in
scas
in
cmpsb
fcompp
mov
mov
push
sub
or
insb
leave
xor
cli
and
jns
xchg
out
addr16
and
imul
enter
ljmp
jno
sub
xlat
scas
fs
mov
fistl
jmp
loope
pop
lock
push
jbe
sahf
jo
cmc
sub
xor
ljmp
popa
das
aad
or
jmp
sbb
xchg
dec
ret
enter
aam
ljmp
pop
pusha
jo
jnp
cmc
mov
push
mov
xchg
mov
aad
pop
cmp
pop
movb
pop
addr16
insb
or
add
stc
mov
adc
sub
push
loopne
faddl
add
cmpsb
inc
cmp
loope
mov
outsl
out
push
sbb
repnz
jg
push
dec
shlb
add
int
pop
pop
cmpsl
add
push
or
inc
fistps
mov
sbb
adc
jmp
or
rcrb
test
cmp
mov
repz
lret
push
adc
inc
movsb
xchg
or
and
push
jbe
bound
mov
mov
rdtsc
fwait
nop
inc
aas
and
pushf
sub
sbb
cltd
sbb
inc
mov
or
xchg
pop
ja
stc
push
sbb
rcrb
mov
push
dec
dec
out
fildl
jb
iret
es
jle
add
bound
imul
mov
xor
pslld
ret
xchg
adc
or
and
xchg
mov
clc
add
dec
repz
aam
stc
or
pop
mov
decb
ljmp
push
aad
and
imul
lcall
les
xchg
sbb
jb
xchg
pop
or
filds
dec
mov
loopne
xor
insl
add
jg
fsubrl
inc
in
xchg
sub
or
fdivl
mov
daa
cmp
rclb
mov
testl
jle
push
sbbb
dec
clc
test
and
and
clc
addb
lret
movsl
fcoms
sahf
jns
sub
insb
fisubl
or
pop
sub
das
jo
or
sbb
jns
pop
adc
out
inc
inc
jb
mov
dec
mov
mov
mov
jne
or
repnz
push
mov
mov
fnstcw
mulb
mov
scas
add
insl
lods
and
fstl
fists
mov
pushf
lcall
out
sbb
mov
aam
mov
in
jb
jmp
inc
outsl
xchg
pop
enter
xor
and
pop
adc
sbb
sbb
lahf
xchg
push
icebp
push
test
xchg
movsb
ljmp
aad
push
les
mov
bound
pop
dec
bound
or
xchg
test
rorl
pop
pushf
xchg
or
inc
les
mov
pop
icebp
in
negl
cmp
mov
ljmp
xchg
lea
loope
push
int
xor
or
add
stos
inc
xor
jge
xor
push
dec
ja
stos
mov
ljmp
and
out
fldt
sbb
out
sbb
cmpsl
fldenv
leave
jb
xor
adc
dec
sub
rcrb
adc
push
xchg
std
sub
adc
movsl
aam
cwtl
mov
out
setb
xchg
call
int
aas
mov
mov
mov
or
pop
or
cmpsl
inc
dec
or
call
loop
push
push
sub
repnz
loope
cmpsl
dec
mov
in
dec
sub
or
xchg
stos
jle
inc
adc
ja
daa
fisttpl
rol
call
out
cs
ret
js
sub
push
fwait
adc
es
fistpl
lret
jmp
in
cmpsl
jbe
push
test
adc
ret
mov
loope
aaa
ret
repnz
and
aaa
push
push
xor
dec
movsl
je
mov
or
cmpb
xchg
lock
clc
inc
inc
insb
add
es
test
cmpl
jnp
adc
inc
push
mov
pop
jg
mov
lods
lcall
dec
cmc
adc
loope
mov
ret
mov
repz
dec
lret
sbb
push
pop
mov
ds
sbb
lret
int3
insb
ss
pop
out
cs
or
in
inc
loop
mov
addr16
add
mov
aad
fisubs
push
mov
das
mov
movsl
mov
sahf
movsl
sar
dec
cmp
and
xor
addr16
fsts
stos
fldt
mov
jnp
loope
jo
or
xor
imul
ljmp
add
bound
jno
fistps
int
or
mov
fwait
dec
dec
scas
jne
jp
adc
pop
fcoml
lock
and
imul
mov
nop
jge
repnz
shlb
popa
jbe
js
out
fnsave
xor
movzbl
dec
out
mov
pop
push
into
dec
push
fcomps
mov
sub
or
jmp
rolb
test
clc
repz
cli
nop
out
push
call
ds
mov
adc
and
cmp
inc
iret
popa
test
loop
cmp
inc
push
jp
test
rorl
jno
arpl
loope
inc
stc
xlat
enter
push
add
ret
iret
jl
out
add
lea
imul
shrl
dec
mov
xor
andl
xor
pop
mov
mov
and
xchg
std
cmp
xor
out
test
cwtl
mov
mov
ljmp
lds
cs
pusha
jno
push
rolb
jp
inc
cmp
popa
sub
or
mov
adc
sbb
inc
xchg
imul
in
out
rolb
shlb
xchg
lahf
cmp
jge
cmpsb
gs
inc
xor
mov
jns
push
add
mov
jb
lods
aaa
stos
rcll
adc
xor
mov
pop
xchg
sti
xor
xor
jnp
loop
sbb
into
fimull
lret
fstpt
pop
pop
push
aam
xor
jne
test
inc
pop
stc
stos
mov
sbb
jo
xorl
repnz
stc
mov
fwait
cmp
cltd
mov
sbb
scas
pop
stc
out
mov
cmp
cld
pop
lret
rolb
xor
in
gs
mov
mov
and
inc
adc
rolb
daa
xor
ja
pushf
ljmp
ret
call
ds
int3
movsb
pop
test
sbb
aad
sub
mov
aaa
add
push
jo
insb
int3
int3
fstpl
cmp
notl
mov
add
sub
jae
je
sbb
sbb
ja
int
xchg
jl
ret
pushf
les
stc
int3
xchg
jo
js
mov
xor
or
shlb
outsb
mov
fs
test
dec
add
loopne
mov
cmp
adc
pop
imul
flds
in
fwait
lcall
pop
mov
enter
fisttpl
scas
scas
insl
pop
xchg
fadds
add
fisttpl
or
fsubrl
xchg
add
inc
lret
imull
cld
lcall
rolb
cmp
xor
das
pop
pop
cmp
aad
test
test
inc
xor
cltd
es
mov
jns
fcomps
repnz
adc
jbe
add
sbb
pop
push
mov
push
jnp
in
addb
adc
leave
sbb
mov
leave
mov
in
andl
hlt
aad
jne
jmp
icebp
inc
call
mov
fwait
sbb
add
cmp
cwtl
jge
mov
sarb
pop
aas
or
cmp
loope
lods
dec
dec
pop
add
jo
ljmp
cmp
cmp
lret
out
idivl
cmp
jge
mov
push
shr
sahf
mov
icebp
ss
jo
push
jge
roll
into
icebp
clc
dec
out
vmovd
pusha
sbb
scas
fstpl
pop
sub
or
pop
pusha
and
jmp
aaa
push
adc
xchg
jno
push
jmp
out
fisttpll
jp
mov
std
mov
jmp
cmp
fadds
das
push
xor
dec
jl
push
mov
shll
push
or
test
fidivs
sub
xchg
popf
xchg
jo
xchg
into
fistl
jg
push
xchg
fstpt
mov
addr16
loope
popa
mov
sbb
xchg
test
ss
fcomi
or
test
push
mov
push
mov
mov
xchg
repnz
mov
outsl
loope
outsl
sbb
loope
fsubr
mov
and
rorl
mov
jns
imul
xchg
mov
popf
cld
and
shlb
and
adc
call
imul
fsubr
mov
rol
sbb
xchg
das
in
movsb
leave
sub
and
mov
cmp
cmpsl
jae
jns
mov
cmp
xor
test
xor
mov
popf
ja
adc
jle
stos
popl
data16
enter
cltd
ret
adc
add
sahf
mov
jg
hlt
in
in
test
sbb
inc
notb
or
aad
cli
lret
mov
jb
jg
mov
sbb
js
xor
out
push
mov
pushf
sahf
sbb
aaa
mov
stc
mov
inc
mov
clc
sbb
cmp
movsl
mov
lods
sub
dec
push
jg
ret
jmp
adc
sub
nop
inc
enter
jns
jo
sub
add
xlat
scas
sbb
fcmovnbe
fiadds
fiaddl
push
push
pop
psllq
mov
sbb
repnz
imul
aas
inc
jl
mov
jns
mov
in
pop
daa
mov
and
lret
sbb
aaa
stos
jbe
push
sub
sahf
push
outsl
rcrl
shrb
cmp
cmp
rcll
loopne
inc
add
hlt
xor
leave
mov
cs
rep
inc
push
xor
pop
ret
jno
adc
push
ss
mov
pop
push
push
xchg
add
stc
dec
xor
add
insl
fld
les
es
mov
mov
cmc
movsl
or
bound
push
in
clc
enter
xor
in
cltd
imul
jns
xor
pop
cltd
inc
and
std
rcl
adc
sub
in
repnz
sbb
imul
mov
xor
scas
and
mov
repz
cltd
out
sub
aas
push
jmp
mov
nop
shlb
lods
imul
and
std
pop
or
movsl
aam
dec
scas
dec
jne
das
dec
dec
lahf
enter
test
ret
adc
xor
loopne
mov
sti
jl
push
push
and
lock
mov
mov
and
std
outsb
cltd
rorl
dec
jo
pop
xchg
cmpsl
add
or
int3
pop
fsubl
push
jl
push
xchg
pop
into
cmpsb
arpl
push
pop
or
adc
push
mov
add
clc
gs
cwtl
sbbb
mov
sbb
sub
in
inc
lcall
pop
lods
sbb
mov
dec
mov
repz
adc
lods
out
adc
arpl
cmc
ret
mov
out
inc
stos
cld
xchg
add
out
outsl
and
loope
cmp
mov
mov
andb
dec
mov
cld
fs
fs
jecxz
adc
shl
pop
loop
inc
pop
jg
dec
pop
xchg
pop
nop
test
cld
ret
xchg
sbb
dec
sbb
iret
pop
push
sbb
mov
sarl
mov
cmp
roll
mov
mov
repnz
mov
js
push
dec
mov
mov
lods
shll
mov
cs
shrl
in
jno
in
mov
add
dec
add
sbb
cmp
lret
xor
loope
repz
push
testb
xor
les
mov
aam
lods
pop
rolb
lods
aam
push
jmp
or
and
popa
fisttpl
and
sbb
dec
jb
or
jnp
and
fsubrp
jbe
jge
jmp
xor
xor
movsb
cmp
je
inc
push
cmp
xor
xchg
fisttpll
pop
xor
or
mov
shr
or
ds
adc
popf
mov
das
icebp
xchg
mov
adc
lret
fwait
leave
lds
xor
int
push
pusha
inc
filds
lret
mov
out
scas
leave
test
mov
ret
int
ja
mov
xlat
jnp
xchg
movsb
iret
jle
or
push
mov
sti
push
mov
es
inc
pop
stos
in
dec
mov
mov
ret
and
push
mov
mov
cmp
push
cmp
les
jbe
pop
jne
sub
push
es
push
jns
sti
std
ret
pop
test
bound
push
mov
add
nop
jecxz
add
pop
pop
pop
add
lahf
sbb
lds
sub
mov
and
mov
mov
jo
xor
insb
imul
ljmp
shlb
xchg
fwait
in
mov
push
clc
mov
insb
dec
fcompl
lret
jne
rol
cld
pop
and
adc
into
mov
add
xchg
adc
ja
inc
pop
in
cwtl
lea
daa
xchg
pop
mov
and
pop
das
xorl
cld
int3
adc
or
test
es
test
aas
out
push
scas
and
inc
jmp
adc
cwtl
pop
movzbl
sarb
fisttps
add
xchg
clc
loope
mov
sub
mov
add
lret
fisubl
aad
popf
mov
mov
inc
mov
pop
push
add
add
arpl
and
adc
inc
gs
lret
out
dec
jp
dec
popa
mov
adc
mov
jno
and
jno
xor
sti
cltd
jg
jae
faddl
ja
sub
mov
dec
inc
xchg
ret
mov
aas
mov
sbb
je
mov
stos
mov
outsl
jp
scas
sbb
push
pop
push
jo
pop
daa
int
cs
pop
dec
add
mov
sub
jo
push
rol
inc
jl
inc
hlt
in
gs
mov
mov
rorl
jmp
sahf
lds
cwtl
pop
lods
mov
dec
iret
sbb
dec
stos
insb
shll
inc
orl
insl
inc
addl
xchg
lahf
test
rcr
cmpb
sahf
sub
stos
lea
nop
xchg
mov
leave
xor
xchg
sub
jnp
adc
sbb
add
bound
mov
jg
or
adc
scas
sbb
movsl
add
sbb
ja
adc
and
repz
mov
cld
mov
int3
mov
fidivrs
or
pop
outsb
xchg
sbb
cmp
ds
jne
inc
xchg
sti
xor
or
outsl
push
fistpl
mov
fcomps
movsl
inc
sub
and
xchg
mov
cli
xchg
mov
jl
dec
call
mov
or
xlat
out
sbb
shl
push
test
pusha
clc
fmuls
movsl
iret
add
mov
push
stos
xchg
cmp
cmp
sub
retw
sub
pop
or
cmp
je
sub
out
movsb
clc
into
lret
adc
mov
addr16
jl
loopew
xchg
ja
out
xchg
test
ret
inc
stos
sbb
cltd
imul
sbb
add
mov
fsubrs
ret
push
lea
repnz
xor
and
lcall
inc
mov
mov
mov
and
push
adc
shlb
stos
inc
mov
pop
bnd
daa
mov
popa
movl
adc
shlb
ljmp
loope
cltd
xor
cmp
cmp
dec
add
testb
mov
cmp
in
outsl
cmp
insl
imul
call
fldcw
xchg
test
out
ja
xchg
scas
mov
or
xchg
push
jl
mov
mov
sub
dec
mov
arpl
aaa
fs
jno
sub
and
xchg
test
movsb
aaa
or
mov
movsl
push
inc
rcl
cmp
cwtl
pusha
into
mov
stc
pop
lcall
movsl
cltd
mov
test
hlt
ficoml
pop
push
fsubrs
adc
lcall
and
or
int
inc
mov
ljmp
xchg
cs
and
mov
cmp
aam
mov
push
mov
mov
xor
loope
cltd
cmp
or
xor
xchg
mov
and
mov
mov
xor
cmp
into
mov
test
out
out
test
xchg
or
mov
sub
and
les
xchg
mov
imul
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
std
mov
xchg
or
cltd
in
adc
adc
hlt
arpl
loope
aas
int
add
or
fbld
cmp
xlat
sahf
mov
pop
btr
cld
ds
outsb
aad
inc
test
leave
in
inc
jno
sbb
inc
into
movsl
ljmp
cld
inc
mov
xchg
adc
in
mov
fsubrl
out
jecxz
mov
inc
xchg
pop
loope
insb
fidivs
xlat
mov
stos
test
or
sbb
mov
popa
enter
mov
inc
shlb
inc
mov
fs
sbb
and
icebp
fcmovnu
call
pusha
adc
shr
lods
iret
data16
xchg
rorl
lret
jo
and
push
and
push
mov
bound
jle
icebp
aam
push
dec
std
jecxz
data16
iret
mov
cmpsb
gs
andb
jb
test
pop
xchg
xchg
adc
mov
dec
ljmp
jmp
inc
rcl
rorb
aad
lods
pop
push
xlat
outsb
mov
and
inc
ret
fistps
roll
mov
adc
and
stc
adc
les
cmc
adc
test
push
rclb
call
mov
pusha
adc
xchg
in
xor
lea
ret
xchg
sbb
stos
or
pop
push
add
and
add
fnstsw
add
js
inc
test
and
push
and
mov
xor
jnp
fdivrp
test
push
lret
out
adc
mov
xchg
mov
sahf
jle
pop
cld
shl
lahf
xlat
push
xor
sub
pop
jp
insb
fcoms
xor
repz
cwtl
add
add
jne
pop
addr16
je
jnp
clc
adc
loopne
pop
pusha
pop
outsl
push
jle
pop
dec
jle
xchg
sti
ret
js
adc
cltd
repz
cmc
inc
popf
adc
add
and
jbe
testb
pusha
stos
mov
xchg
gs
mov
sub
jnp
test
adc
adc
xchg
dec
sub
mov
xchg
xchg
in
sbb
or
aas
icebp
jecxz
mov
xlat
je
sbb
jnp
jae
jle
ljmp
and
adc
push
pushf
cmpsl
rcll
mov
movsl
daa
inc
pop
rorl
xchg
and
daa
pusha
test
xor
mov
mov
and
jno
fmull
stos
les
in
loop
stos
out
sub
cli
push
mov
adc
sbb
nop
inc
out
inc
mov
pop
das
jae
cld
arpl
mov
sahf
movsl
gs
fists
mov
daa
mov
sub
adc
inc
jmp
inc
xor
inc
or
stos
add
mov
sbb
mov
mov
rorl
in
xor
cmpsl
jno
xlat
imulb
xchg
sti
xor
imul
popf
cmp
rcrb
repnz
mov
stc
adcb
test
jae
out
jno
in
sbb
sti
imul
fsubr
shlb
jmp
fs
std
and
and
loopne
mov
in
daa
xor
mov
pop
mov
fisttps
not
add
jmp
shl
jg
xor
cld
adc
dec
pop
xchg
sub
mov
sarl
pop
mov
hlt
cmp
pop
pop
aam
pop
cmp
pop
mov
sbb
lds
xlat
loop
int
xlat
outsl
cltd
das
sub
cli
inc
add
sti
mov
jb
aam
ds
pop
jmp
cld
mov
jns
pop
sbb
or
push
add
mov
inc
ffree
and
movsb
jle
cltd
mov
dec
or
loopne
jbe
sub
enter
xchg
push
xor
das
jno
pop
and
cmpsl
add
cmp
mov
and
insb
aam
jl
mov
pop
cmpsb
loope
adc
cmpsl
fwait
inc
or
push
setge
sub
sbb
xlat
sbb
mov
inc
fbstp
orb
and
or
test
add
aas
sbb
loop
sub
ja
pop
ror
pop
rclb
lret
cmp
adc
out
test
push
sbb
cwtl
sub
cmp
imull
dec
je
fwait
mov
aas
mov
sbb
mov
out
aas
add
pop
into
loopne
sbb
ds
call
sub
jge
out
adcl
movsb
sub
ds
in
cmp
fists
fs
leave
push
pushf
sub
shrb
mov
mov
out
mov
mov
xchg
xor
ret
jbe
aam
jle
imul
fdivs
das
cmpsl
mov
sbb
loop
sbb
aam
outsb
xchg
xchg
sbb
addr16
fldl
mov
inc
mov
xor
jmp
and
adc
xchg
cmc
inc
xor
xor
pop
lret
push
cmpsl
int
pop
lds
adc
scas
mov
adcl
test
mov
mov
cmp
mov
add
adc
adc
sbb
test
loop
adc
insb
push
imul
pop
mov
lret
sub
or
cs
mov
jo
xor
data16
cmc
idivb
mov
test
mov
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
lea
push
call
andl
pushl
pushl
mov
call
orl
call
mov
mov
pop
pop
pop
leave
ret
mov
add
push
call
ret
push
mov
mov
push
test
je
mov
test
jne
xor
jmp
cmpb
jne
xor
cmp
sete
jmp
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
inc
inc
inc
inc
test
jne
xor
jmp
sbb
sbb
pop
pop
test
jne
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
push
mov
sub
push
cmpl
jne
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
lea
push
pushl
call
pushl
call
mov
pushl
pushl
call
mov
push
push
push
pushl
pushl
pushl
push
push
pushl
call
pushl
pushl
call
pushl
call
lea
push
pushl
call
xor
jmp
pushl
pushl
pushl
pushl
call
pop
leave
ret
push
mov
push
andl
lea
push
pushl
call
call
cmp
jne
mov
cmp
je
pushl
call
andl
pushl
call
pushl
call
xor
jmp
push
pop
leave
ret
push
mov
sub
push
mov
mov
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
movl
movl
movl
push
call
mov
push
call
push
call
mov
push
call
mov
mov
sub
cltd
sub
sar
mov
mov
sub
cltd
sub
sar
mov
mov
add
mov
mov
add
mov
movl
push
push
pushl
lea
push
call
push
push
push
push
mov
sub
push
mov
sub
push
pushl
pushl
pushl
push
push
push
call
mov
mov
mov
push
push
pushl
lea
push
call
test
je
mov
cmp
jne
cmpl
jne
jmp
lea
push
call
lea
push
call
jmp
push
call
andl
jmp
mov
inc
mov
cmpl
jge
push
push
call
cmpl
jne
jmp
push
call
jmp
pushl
call
xor
pop
leave
ret
push
mov
push
push
push
lea
push
push
push
push
call
test
je
pushl
call
pop
mov
cmpl
je
push
push
pushl
push
push
push
call
push
call
push
pushl
call
leave
ret
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
sub
mov
mov
sub
mov
movl
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
call
mov
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
call
pop
call
pop
mov
popa
pop
pop
call
call
int3
int3
int3
int3
int3
int3
daa
dec
inc
push
inc
dec
push
inc
dec
dec
push
inc
dec
inc
inc
daa
or
add
je,pn
js
add
add
add
add
add
add
add
and
add
jb
popa
je
add
test
add
add
add
add
add
inc
add
inc
cs
je
add
add
add
add
add
add
add
pushf
add
inc
add
shrb
fs
je
add
test
pop
add
or
add
loop
add
add
jb,pn
insb
outsl
arpl
add
cmp
add
jo
add
add
je
js
add
add
add
add
add
add
add
inc
add
loopne
jb
popa
je
add
cmp
or
add
add
add
add
add
cs
je
add
add
jo
add
loopne
add
sbb
add
stos
add
inc
add
loopne
add
xor
xor
call
pusha
call
aaa
sub
xor
push
je
jno
mov
cs
mov
dec
andl
push
dec
cmc
enter
loopne,pt
cmpsb
pop
add
bound
int3
and
bound
jno
and
cmp
add
dec
imul
add
call
jle
add
add
xchg
rclb
loope
jbe
movsb
in
push
inc
mov
xchg
icebp
adc
mov
js
gs
out
dec
and
mov
scas
mull
lret
cmpsb
or
inc
and
int
nop
movsl
ret
xor
icebp
je
jns
pop
lret
sbb
test
ds
ret
aad
mov
test
outsb
int
add
cmp
das
fwait
stc
xchg
mov
xchg
jns
lret
data16
cmp
fcompl
leave
dec
or
adc
mov
jg
push
arpl
inc
cmp
mov
sbb
dec
shll
ljmp
imul
fsubl
sbb
cld
xchg
xchg
je
xorb
test
push
jns
dec
or
or
aas
aam
xlat
dec
sbb
pusha
lea
push
hlt
mov
xchg
pop
shrb
sub
cmp
je
repnz
push
jno
insl
adc
ljmp
fs
cmp
scas
orl
outsb
int
pop
arpl
push
sbb
sbb
push
fiadds
mov
mov
sbb
push
sub
add
push
inc
mov
or
mov
mov
fcmovnu
in
sub
sbb
pusha
push
ret
cltd
mov
jmp
jle
out
or
loopne
push
xor
ljmp
hlt
add
movsb
enter
sbb
loopne,pt
inc
and
shlb
jl
mov
shll
mov
pop
setae
pushl
mov
push
add
fimull
push
dec
pop
loopne
mov
hlt
fs
mov
jecxz
adc
sbb
push
std
dec
sub
jecxz
es
faddl
cmpb
lcall
jmp
shll
pop
daa
xor
shll
xchg
push
outsl
outsl
mov
mov
ret
dec
jg
test
pop
push
mov
xchg
mov
or
mov
subb
jb
mov
cmpsb
popf
add
xor
xor
lahf
lahf
or
and
gs
adc
add
iret
mov
jns
mov
push
sub
out
jns
push
push
mov
add
ds
outsb
mov
lret
out
inc
bound
xchg
out
cmp
adc
cmpb
pop
data16
xchg
and
mov
sub
in
or
jle
mov
sub
pusha
pop
dec
dec
cmp
cmp
or
out
outsl
cmpsl
gs
rolb
fwait
iret
sahf
sbb
inc
push
push
sbb
je
int3
out
jmp
cmc
mov
push
cwtl
mov
ret
or
fcmovnb
out
subl
movsl
aam
cltd
mov
sub
xor
loopne
mov
add
adc
mov
notb
dec
jbe
push
icebp
xchg
add
inc
pop
shrb
sbb
mov
add
pop
pop
jbe
stos
fs
aad
mov
xor
sub
mov
sbb
adc
add
inc
mov
ljmp
push
insb
orb
jecxz
imul
in
jno
jecxz
stos
loope
adc
xchg
out
xor
jmp
ret
scas
mov
inc
cmpsb
pop
arpl
hlt
mov
arpl
cmp
pushf
popf
or
push
add
das
inc
out
mov
iret
fnop
adc
hlt
mov
insl
add
inc
out
push
sti
lcall
pop
or
push
adc
dec
add
jo
or
and
mov
xorl
or
xchg
pushf
xchg
cmp
sbb
fisubrl
push
jecxz
lods
fwait
inc
add
xor
jns
lock
ja
jmp
test
inc
push
or
leave
sbb
imul
fidivl
or
pop
rcrb
and
pop
cs
stc
ret
orl
add
pop
shlb
in
push
aad
cld
fidivrl
push
repnz
ret
mov
sbb
push
outsb
andl
sbb
jbe
push
gs
popa
cmpsb
lahf
icebp
popf
arpl
fidivl
repnz
xchg
push
imul
xor
mov
in
je
sbb
cmp
hlt
pop
movsl
clc
jecxz
inc
sub
push
sub
mov
lcall
scas
mov
fsubrs
xor
sbb
iret
sbb
adc
pushf
mov
iret
outsb
inc
orl
clc
paddsw
add
push
fwait
lock
xor
pop
iret
push
movsl
or
dec
movb
xlat
adc
xor
jl
mov
sbb
or
push
xchg
inc
xor
sub
or
mov
stc
iret
in
sti
xchg
out
mov
pop
mov
enter
es
pop
xlat
fldt
jecxz
cmc
in
xor
jne
in
bnd
or
pop
orl
scas
clc
xchg
loope
inc
jae
popf
add
pushf
aaa
sti
imul
xchg
sbb
mov
xor
cmpsl
adc
xchg
out
filds
fs
fnsave
pop
dec
xchg
xor
mov
mov
adc
or
pop
rcll
pop
dec
mov
scas
add
jl
adc
push
add
jnp
mov
cmpsb
pop
push
sub
mov
inc
and
cmp
fsubl
icebp
jmp
xor
adc
add
or
lock
sbb
test
cmpsb
imul
insb
sti
inc
rcll
addr16
mov
inc
jno
std
or
sbb
dec
mov
inc
shrb
cmpsb
aas
test
cmp
mov
or
iret
inc
cwtl
pop
cmc
lods
int3
xchg
pushf
push
jecxz
das
cwtl
xor
xchg
xlat
subl
in
jp
out
ret
push
shl
xchg
inc
dec
idiv
adc
xchg
dec
mov
aad
cmc
call
mov
jle
dec
xlat
mul
xchg
les
notb
and
pop
shlb
arpl
mov
push
call
sbb
jb
sbb
aam
or
lcall
xor
sbb
out
arpl
xlat
data16
gs
js
out
test
aam
test
mov
jns
aas
ljmp
cs
cld
pusha
sahf
adc
out
aas
mov
mov
push
ljmp
xchg
std
or
sti
popf
or
ljmp
jnp
addr16
lret
jmp
adc
out
pushf
imul
sbb
xor
out
stos
icebp
loope
dec
divl
in
xchg
mov
mov
std
test
xor
ret
rclb
lret
dec
cmp
fsubr
and
mov
sti
xchg
clc
jle
pop
pop
and
fistpl
jp
andb
fcmove
sub
mov
stos
xchg
hlt
arpl
push
imul
and
test
cli
adc
hlt
push
add
ror
fadds
inc
mov
cmpl
sbb
test
inc
pushf
std
pop
cmpsl
cmp
iret
stc
in
cmpsb
jp
lock
or
aam
mov
jno
mov
negb
cmp
xlat
inc
aaa
aam
pop
or
mov
leave
shll
rolb
or
xor
push
ja
ja
call
add
mov
loop
sub
and
les
hlt
testb
sub
test
jg
popf
pop
and
mov
mov
cmpsb
add
pop
test
jl
sub
inc
into
jne
push
shll
mov
cwtl
insb
scas
push
dec
add
add
pop
inc
mov
sub
faddp
lcall
js
mov
shlb
loopne
and
adc
jg
sahf
adc
and
dec
lcall
ficoms
imul
or
cmp
ret
aaa
mov
xchg
inc
movsb
push
cmpxchg
dec
jns
xchg
insl
adc
cs
sub
jecxz
fwait
jne
test
clc
adc
movsl
adc
mov
sbb
dec
mov
loop
ljmp
and
insl
add
jge
sbb
sbb
sahf
lock
ror
adc
out
pop
out
xchg
imul
sub
cli
lahf
jl
adc
pop
push
lret
sub
rorb
pop
ds
jmp
push
subps
adc
shl
jne
sub
inc
mov
popf
into
add
daa
adc
repnz
jmp
fcomps
cs
add
adc
push
xor
je
jb
subb
or
cltd
push
fisubrs
push
dec
inc
cwtl
inc
mov
xchg
dec
xchg
xchg
adc
pop
or
inc
sub
push
and
or
adc
fmull
and
lods
fnstenv
sbb
pop
leave
popf
sub
subb
in
ss
xchg
loope
jae
pop
ljmp
fnsave
fnstenv
imul
add
jno
loop
push
cli
mov
hlt
dec
movsb
outsl
sub
leave
adc
inc
adc
add
mov
rsqrtps
cmp
fwait
dec
cmp
repz
mov
jne
add
add
dec
scas
cmp
inc
clc
pop
sub
rclb
pushf
or
mov
sahf
outsb
or
lds
jecxz
xor
pop
jne
sti
lahf
ljmp
add
inc
adc
jno
das
sub
cmpsl
leave
outsb
mov
pop
lds
mov
jl
push
push
data16
inc
xor
jbe
dec
addr16
jne
test
push
pop
pop
fdivl
lea
ret
jge
xor
xchg
jo
push
push
sar
out
jno
mov
mov
lahf
and
pop
notl
dec
ficoml
push
pop
pop
std
repz
xlat
shll
sti
addr16
xor
data16
fstl
mov
cmp
xchg
cmp
push
inc
fwait
xorb
shl
test
ss
adc
repz
xchg
jns
ficomps
push
cld
insb
jns
scas
sub
mov
fcomip
testb
mov
repz
es
jge
dec
sahf
aas
pop
in
xchg
pop
pop
mov
fsubrs
mov
mov
leave
mov
xchg
mov
mov
mov
repz
mov
sbb
mov
pop
jge
lahf
fs
popa
push
xor
jno
cld
scas
loope
cltd
setnp
fsubrp
mov
lds
jns
push
gs
push
mov
in
lret
inc
jbe
jg
je
out
push
pop
mov
sbb
and
shrb
divl
ret
test
jge
gs
inc
imul
mov
enter
es
jp
test
loopne
xor
rorl
push
pop
push
ljmp
mov
jb
and
ret
jmp
lods
inc
adc
push
mov
rorl
mov
sbb
lods
mov
pushf
scas
in
cwtl
cmp
dec
add
inc
das
push
aaa
cld
out
and
insb
mov
and
mov
lret
add
aas
inc
lods
pusha
mov
push
push
mov
movsb
mov
mov
push
mov
cmp
mov
ja
add
adc
sbbl
or
fisubs
jns
mov
cmp
out
jge
adc
stc
in
in
lret
push
jmp
fisttpll
scas
dec
and
fnstenv
sbb
cwtl
lea
jae
loope
mov
or
pop
push
jne
data16
sbbl
mov
insb
lahf
xchg
subb
data16
adc
shl
mov
lods
jne
adc
aaa
fdivrs
sbb
mov
stos
outsl
add
sbb
into
adc
cmc
les
push
sbbl
mov
stos
arpl
out
sub
mov
pop
inc
bound
movsb
and
jnp
push
out
pop
popa
movsb
adc
repnz
jle
lods
mov
and
test
xchg
mov
or
mov
dec
dec
out
sbb
push
fwait
mul
dec
mov
mov
jmp
mov
pop
fldcw
imul
jnp
sub
rcrl
in
shrl
ror
mov
out
inc
xor
divl
movsl
jmp
xor
call
iret
fists
xor
mov
mov
std
and
lret
jp
cmp
xchg
lcall
in
lret
sti
pop
lcall
gs
adc
push
add
out
daa
xor
inc
sti
xor
mull
adc
push
stos
test
sbb
add
jecxz
cmpsl
mov
mov
inc
jne
dec
cmc
push
sahf
fimuls
out
sbb
cli
jl
pop
loope
sbb
dec
repz
inc
adc
jg
popf
push
int
xchg
mov
jge
dec
int3
loope
xchg
dec
xor
cmc
jno
mov
loope
mov
test
dec
imul
rcll
inc
cmpsl
iret
punpckhbw
aaa
xchg
add
adc
enter
in
or
stc
mov
bound
cs
mov
xlat
in
mov
mov
rorl
mov
xchg
mov
jge
dec
mov
push
mov
push
lds
push
xchg
leave
mov
push
cmpsl
push
clc
push
mov
fwait
jns
xor
cmp
mov
xor
cwtl
incb
stos
fwait
push
pop
cltd
mov
les
add
mov
loop
cli
inc
sub
repnz
push
lods
paddq
lds
mov
outsb
mov
mov
push
push
ss
sub
jmp
es
dec
mov
ret
inc
and
sbb
jae
pop
mov
lahf
addr16
xor
push
lods
cli
and
jg
mov
mov
std
lds
fists
push
dec
add
jns
sub
icebp
add
mov
jae
cmp
xor
lret
lds
mov
cmp
bound
je
xchg
cwtl
mov
pop
xchg
call
cmp
push
lahf
nop
into
add
shll
xor
and
cmp
or
adc
xchg
xor
jmp
cmpl
lods
ljmp
shll
sub
lcall
out
push
adc
add
cmp
xchg
push
fisubrl
mov
data16
aaa
into
mov
pushf
cmp
jo
stc
adc
mov
sub
pop
subl
jge
rorl
addr16
mov
mov
les
je
fildl
int3
sbb
dec
mov
sahf
inc
xor
lahf
js
in
cmc
mov
or
mov
mov
adc
xor
lcall
rcr
cmp
test
ret
mov
loope
daa
inc
mov
mov
cmp
fwait
push
loope
test
sub
pop
repz
rol
movsb
aaa
test
clc
popa
jnp
and
gs
mov
mov
push
push
flds
rcrl
dec
xchg
adc
in
add
ret
sarb
or
enter
sahf
push
cmpsl
and
test
lea
xchg
cmpl
adc
pop
out
push
add
push
mov
test
push
popa
pop
push
mov
outsb
mov
xorl
test
shl
inc
xor
inc
int
jo,pt
xchg
inc
lods
xchg
test
add
lret
icebp
cltd
movl
xchg
leave
xchg
mov
adc
sahf
add
outsb
loop
jbe
xor
cmpsb
repz
push
out
movsl
hlt
int3
pushf
ljmp
nop
jmp
mov
lock
dec
mov
aaa
enter
mov
push
jp
inc
mov
call
xlat
push
add
add
in
xchg
jae
shr
mov
lret
jae
fsubr
jmp
pop
sub
push
inc
or
ja
sbb
jg
rcrl
mov
popf
sub
or
mov
or
icebp
fs
jmp
mov
cmp
jge
les
rcrl
test
jae
or
jp
push
push
jne
add
sbb
testb
in
sub
push
subl
lcall
adc
jae
call
imul
jl
jl
add
inc
das
out
andl
mov
pop
push
or
fs
push
jp
andl
add
push
scas
sbb
jnp
dec
and
sbb
and
cld
push
ja
push
out
sarb
in
xchg
add
xchg
mov
lods
adc
cmp
shl
push
loopne
fiaddl
enter
mov
cmpsl
ss
push
pop
test
mov
addr16
lret
sub
in
mov
xchg
jmp
mov
nop
gs
mov
imul
and
mov
add
mov
jmp
and
xchg
push
decl
daa
mov
xor
xchg
jp
pop
mov
inc
arpl
inc
push
jns
jl
repnz
mov
imul
ss
mov
fildl
pop
xor
dec
adc
pop
lods
push
and
sbb
adc
jge
dec
and
inc
fldt
inc
push
push
mov
cmp
call
xchg
fwait
out
popa
into
scas
xchg
je
shll
pop
sbb
xchg
das
mov
fmul
cmpsb
adc
cld
sub
adc
and
insb
cmp
push
dec
or
mov
ffreep
dec
jecxz
je
adc
pop
out
xor
es
ja
xchg
ficomps
pop
fistps
sub
js
inc
dec
fwait
imul
lods
outsl
into
loope
fs
adc
ja
movsb
xlat
or
dec
xchg
fstl
and
mov
repnz
outsb
movsb
scas
ss
jbe
jbe
js
xchg
cltd
loope
pusha
sbb
stos
jb
push
dec
scas
in
and
push
es
and
imul
add
push
arpl
add
pushf
cs
push
sub
fnstcw
jae
loopne
jmp
jne
adc
fimull
orb
lea
out
pop
cs
sbb
pop
addr16
inc
andb
cmp
pop
sarl
lret
insl
or
cs
pop
xchg
mov
cmp
fisubl
sub
dec
inc
dec
lcall
or
xchg
bound
sub
fcoml
lret
or
mov
xor
addr16
imul
pop
bound
mov
or
sub
cmpsl
je
nop
int
xchg
sub
and
enter
xchg
jecxz
mov
pop
inc
popa
push
fstpl
ret
pop
bound
aas
ljmp
cltd
test
stc
dec
fisttps
sar
push
mov
lock
jge
sub
cmp
nop
mov
cmp
xchg
cmp
fstl
cli
sub
mov
lock
ljmp
pusha
or
dec
pop
sbb
mov
dec
mov
pop
out
push
cmpsl
cmpsl
cmp
out
jae
and
jbe
add
mov
inc
cmp
pop
sbb
cmp
push
dec
pushf
dec
sahf
nop
notl
inc
movsl
sub
pop
dec
pop
testb
iret
pop
inc
xchg
mov
popa
inc
inc
ss
jae
loope
cwtl
mov
sbb
jo
push
loopne
sub
das
inc
jno
add
jb
aas
cmp
inc
int
mov
ds
fcompl
cwtl
loope,pn
and
pop
mov
repnz
loopne
faddl
mov
aaa
arpl
leave
bound
in
stc
stos
or
jne
icebp
jmp
xlat
mulb
scas
inc
mov
mov
in
das
mov
inc
and
or
fiadds
sbb
mov
pop
mov
jae
loope
and
xchg
aaa
xchg
jb
out
mov
mov
leave
mov
mov
xchg
call
and
sub
and
add
inc
rolb
ret
sahf
and
out
clc
mov
pop
xchg
andb
xchg
mov
push
mov
scas
mov
stos
ja
jp
push
cmovnp
push
or
dec
push
push
mov
das
cmp
rcr
push
js
sbb
jne
imul
dec
dec
inc
nop
stc
xor
hlt
std
dec
xchg
xor
sti
mov
in
fidivl
aam
je
xchg
mov
fidivs
xchg
cwtl
dec
fcomps
clc
mov
sbb
add
ficoms
mov
call
daa
push
ficomps
cmp
aaa
push
dec
sti
cmp
jbe
ret
scas
in
out
pop
mov
and
lret
lods
push
adc
shrb
mov
call
xchg
or
scas
mov
sarl
arpl
nop
pop
adc
jp
clc
inc
mov
push
sub
push
mov
inc
out
js
lcall
repz
adc
fdivrs
test
mov
push
aaa
dec
lds
xor
dec
push
mov
xor
add
loop
lods
dec
aad
jge
fsubrl
jbe
mov
or
jmp
rcll
inc
pushf
out
pop
nop
adc
repz
negb
scas
push
sub
ljmp
add
cmp
pop
imul
add
sbb
mov
lcall
xor
pop
sbb
in
lret
add
rorb
and
pop
dec
jb
sbb
and
or
out
dec
mov
cmp
xchg
aaa
adc
call
enter
mov
pop
movsb
out
jmp
mov
cmp
xchg
movb
hlt
popf
lret
das
lock
and
pushf
sbb
or
mov
mov
xchg
in
test
xor
pusha
loopne
jmp
push
out
ljmp
push
test
inc
xchg
mov
pop
pop
js
movb
cmp
xchg
orb
movsb
push
mov
int3
jbe
mov
cmp
mov
addb
repnz
cmpsl
in
adc
xchg
std
pop
add
cmp
cli
repnz
gs
mov
dec
and
push
xchg
push
cmp
mov
pusha
pop
push
mov
mov
in
leave
sahf
stos
pop
cmp
in
hlt
cltd
xchg
or
and
testl
xchg
dec
bound
jno
inc
cmp
xchg
add
in
fisubs
add
inc
outsl
jb
ret
aad
mov
stos
test
fwait
cltd
mov
or
mov
lods
and
jle
sbb
and
and
testl
sbb
cmpl
outsb
dec
mov
xchg
add
inc
pop
call
adc
imulb
mov
xor
or
rcrl
mov
pop
flds
jns,pt
fnstsw
xchg
mov
push
and
std
mov
push
mov
adc
iret
shr
cmp
cmp
fstps
ss
adc
add
test
int
mov
cmc
pop
lcall
lock
lds
xor
xor
xor
or
cwtl
aam
push
sbb
jae
push
add
cs
sbb
repz
pop
cwtl
cmp
inc
notb
lock
push
aaa
int3
inc
jle
xlat
pop
fiaddl
cltd
xchg
mov
or
test
jmp
sbb
jne
aad
dec
mov
icebp
scas
push
jle
push
mov
pop
dec
add
push
iret
clc
sub
outsb
add
movb
in
in
fistl
dec
sbb
cmp
inc
ret
mov
lahf
push
sub
adc
jo
xorl
cmp
roll
xor
dec
insb
add
outsl
pop
test
xchg
or
mov
mov
sub
imul
or
adc
mov
cmc
xchg
push
mov
xor
xor
inc
sub
push
cmpsl
pop
shufps
aam
add
push
mov
dec
sub
aaa
inc
cmp
push
add
sbb
jecxz
js
cld
inc
mov
ds
das
xchg
shl
inc
stos
mov
pop
dec
call
mov
push
cmp
mov
add
adc
repnz
stc
fldt
movsb
in
int
cmpsb
cmpsl
into
fiadds
rcl
in
jbe
or
mov
cs
inc
jmp
mov
imul
adc
lea
pushf
int
mov
lock
stos
xchg
cld
push
cltd
and
les
mov
scas
movsl
leave
mov
sarl
adc
test
lcall
rcl
andb
outsb
in
cmp
fsubp
adc
push
ja
shrb
fwait
insl
mov
jecxz
or
xlat
mov
leave
or
jbe
ficomps
xlat
dec
insb
push
jae
sbb
xchg
fdivs
sbb
xlat
sarl
cmpsl
sbb
jge
mov
inc
fdivrl
addb
mov
outsb
add
cltd
je
int3
test
gs
add
js
aaa
mov
sbb
cmp
in
fcoml
mov
out
out
repnz
and
or
xchg
add
mov
fdivp
fldenv
push
rorl
inc
mov
jl
mov
mov
scas
cmpsl
push
fcoms
jmp
orl
filds
jecxz
xchg
and
lcall
inc
imul
iret
out
mov
adc
test
cmp
and
xchg
fnstenv
bound
or
push
xchg
xchg
outsb
mov
mov
insb
cmp
fidivrl
lds
rcll
pop
cmp
push
and
loope
pop
mov
xor
bound
imul
ljmp
ljmp
sub
xor
lock
loop
pop
cmp
sti
push
ret
push
pop
in
mov
sbbl
sbb
inc
mov
mov
pop
push
mov
and
push
xor
in
add
cmpsl
icebp
adc
daa
xchg
andb
gs
push
xlat
pop
aas
push
popa
rcrl
mov
sbb
mov
jl
push
fwait
out
popa
insb
mov
add
lds
int
mov
adc
lcall
sarl
in
sbb
fbld
test
out
jnp
sub
cltd
movsl
movsb
xchg
nop
daa
or
sbb
lock
fstps
rcrb
test
sub
imul
bound
nop
lods
loopne
sbb
leave
das
call
mulb
out
fdivrl
adc
mov
add
xchg
mov
test
testb
loop
fidivl
adc
lahf
sbb
pop
in
and
bound
jne
clc
lock
dec
xchg
push
hlt
imul
sti
call
icebp
pop
addl
inc
flds
xlat
movsl
jno
rorl
mov
sbb
xchg
sub
jb
xor
dec
je
loope
lods
mov
cmp
stos
shlb
adc
dec
jmp
jle
out
aaa
fstpl
mov
scas
test
fildll
xor
sub
faddl
dec
notb
xchg
outsb
cmc
pop
xchg
add
mov
out
scas
fsts
sbb
jmp
jbe
sub
and
leave
sub
mov
pushf
stos
mov
jge
cmp
enter
pop
pop
xchg
and
cmp
daa
out
js
xor
scas
pop
stos
add
clc
and
adc
mov
and
lahf
mov
loope
lods
cmc
cmc
jnp
iret
add
mov
adc
and
dec
cmp
cli
cmpsb
ss
mov
negb
shrl
cli
push
out
push
fsts
int3
int3
xchg
add
jbe
push
aaa
iret
scas
mov
loop
xchg
and
pop
and
and
jo
lea
mov
jo
sub
xchg
repz
xlat
jl
loop
jmp
xchg
cmp
sub
mov
and
mov
repnz
leave
add
xchg
mov
hlt
mov
negb
lods
fiadds
cmpsl
imul
lods
dec
sbb
adc
shrl
and
inc
cwtl
inc
cmc
or
js
mov
insl
push
lret
add
push
clc
cld
pop
iret
cmc
in
test
fwait
stc
sub
cmpsb
dec
in
lcall
cli
lret
sbb
dec
inc
ljmp
sti
sbb
inc
inc
fstpl
fdivrs
adc
lret
or
ja
mov
pop
xorl
testl
adc
ljmp
roll
add
mov
inc
mov
jbe
jbe
loop
push
mov
or
popa
fwait
dec
call
or
lret
push
and
aas
out
xor
push
cmp
ja
mov
jge
jge
or
addr16
cwtl
sub
mov
fadds
dec
fdivs
clc
insb
pop
call
ud0
cmp
xchg
das
or
sbbl
jp
add
mov
shll
cmc
mov
dec
je
pop
pop
mov
add
mov
adc
dec
xor
mov
movb
test
pop
cs
jle,pn
dec
imul
shll
andl
ds
leave
jmp
jae
lock
jle
push
mov
leave
out
loope
lret
repz
mov
push
mov
nop
and
jbe
mov
arpl
stos
sub
lods
arpl
nop
in
mov
pop
leave
ja
or
lock
xor
aam
out
in
stc
dec
jecxz
push
or
jmp
imul
cwtl
ljmp
xlat
bound
insl
and
xor
ret
mov
lods
push
jle
es
or
xor
incl
jecxz
sub
xchg
mov
jno
into
mov
dec
lods
clc
adc
sub
dec
je
and
sbb
fnstenv
dec
inc
push
sub
into
mov
iret
cltd
fldl
out
mov
stos
or
outsl
xchg
scas
pop
inc
inc
xchg
lcall
push
mov
push
test
mov
and
dec
in
sub
repnz
cs
pop
arpl
fsubr
xchg
shr
out
dec
pop
jmp
stos
mov
lea
pop
je
cmc
fcomi
add
mov
arpl
sbb
adc
mov
push
andl
cmp
sbb
cltd
ljmp
mov
mov
pop
cli
dec
scas
inc
and
inc
das
cwtl
jne
ss
cmp
xor
popa
sbb
leave
or
test
dec
lahf
dec
cmp
scas
sub
mov
sahf
push
mov
dec
imul
xorl
jge
push
mov
add
mov
sbb
test
xchg
outsl
cmova
mov
xor
ja
dec
jbe
pop
leave
lea
loope
mov
shl
add
and
jmp
mov
jle
in
dec
loopne
arpl
mov
cli
or
sbb
rorl
scas
mov
notl
js
pop
mov
sub
mov
jl
jne
popf
pop
mov
jecxz
iret
movsb
sbb
push
icebp
shr
cld
sbb
or
dec
adc
pop
mov
aam
sub
or
inc
mov
repz
outsl
dec
cmp
ret
lcall
movsb
cmp
out
cld
xchg
sub
test
or
mov
ret
and
jg
mov
and
jmp
dec
lds
inc
cmp
idivb
dec
lods
mov
and
push
inc
je
mov
dec
lahf
adcl
push
pop
lock
mov
and
outsl
fwait
cmp
xchg
ja
in
loop
cmp
cli
mov
into
sbb
bound
mov
adc
mov
add
aad
mov
mov
rcrb
in
shll
pop
repz
les
ljmp
aaa
out
mov
js
pop
push
push
xchg
and
das
pop
pop
push
pusha
and
es
push
xor
cmpsl
fldt
ja
cmp
or
mov
aad
mov
cmp
push
mov
xchg
and
scas
dec
cmpsl
and
imul
jp,pt
stos
aad
mov
mov
inc
fcom
call
push
cli
mov
cmp
loope
jge
or
jl
add
dec
and
jb
addr16
out
lea
push
lahf
sbb
mov
xor
in
adc
loope
adc
xchg
or
push
jnp
inc
loope
mov
inc
mov
sahf
pop
cmp
rolb
lcall
in
dec
imul
in
roll
mov
jle
cmpsl
xchg
sbb
sub
scas
ficomps
je
lock
xor
push
les
pusha
rolb
fcmovbe
inc
mov
cmpsb
pop
bound
insb
outsl
test
push
iret
adc
push
neg
push
int3
das
jge
inc
mov
xor
cmp
sub
mov
test
adc
xor
arpl
cmc
das
cmp
popl
cmp
jl
rorl
mov
pop
jmp
in
inc
pop
inc
dec
imul
std
mov
mov
aaa
inc
dec
jg
orb
inc
arpl
cltd
push
mov
inc
xchg
xorb
sub
add
mov
mov
mov
repnz
cmp
mov
add
mov
push
mov
push
ret
mov
lret
or
mov
fsubrl
les
push
fnstenv
add
shrb
lods
dec
xchg
dec
pop
push
cld
push
sub
stc
stos
aad
popa
or
mov
out
sbb
add
mov
fdivr
pop
out
arpl
push
mov
and
leave
pusha
pop
imul
addb
addl
adc
xchg
loop
repz
imul
cmpsb
add
cmpl
lcall
add
js
fcmovnu
outsb
xor
ss
hlt
sub
out
stc
dec
iret
xchg
movsb
insb
pop
mov
vmovss
pop
inc
mov
test
cmp
lret
and
aas
nop
lahf
cmp
cmp
dec
bound
adc
xor
xchg
es
fdivr
and
mov
imul
cmp
and
mov
adc
cli
divb
mov
add
dec
dec
adc
push
pop
cmp
add
adc
cmc
inc
xor
mov
stos
shl
inc
repz
mov
ficomps
xchg
hlt
lds
test
stc
mov
cld
mov
imul
push
xchg
cmp
dec
push
inc
fists
dec
shlb
imul
in
or
loopne
aam
mov
xchg
pushf
scas
cmp
popa
xchg
lds
pop
mov
bound
sbb
xchg
xchg
xorb
or
xchg
jl
xor
aad
orl
pop
int3
lahf
mov
or
jge
jno
sub
clc
adc
cmpsb
or
mov
xlat
sahf
pushf
xchg
fcoms
out
inc
mov
out
jle
cmp
mov
xor
or
sbb
sbb
pop
scas
outsl
lret
orl
cmp
imul
int
popa
scas
inc
pushf
mov
lea
je
shrl
mov
jg
fstl
insb
push
sub
aaa
icebp
sbb
adc
add
sbb
xchg
mov
mov
out
lods
add
mov
add
adc
scas
idivb
mov
mov
ds
dec
mov
imul
mov
inc
out
mov
pop
xchg
lret
gs
pop
test
imul
mov
mov
sub
jmp
leave
dec
jne
dec
outsb
xchg
lea
in
or
push
xchg
adc
cltd
stos
out
test
shll
into
xchg
mov
xor
test
and
mov
in
push
call
add
mov
ss
lret
bound
in
sub
cs
sti
test
aaa
xchg
dec
dec
jo
stos
push
dec
pop
sub
push
xor
add
dec
jle
cmp
fimuls
std
mov
dec
or
pop
and
scas
lock
insb
and
jp
enter
les
xor
dec
shlb
les
or
pop
cmpsb
ds
bnd
mov
fdivrp
adcl
in
sub
imul
mov
jbe
test
ret
and
mov
in
test
addl
pop
jno
outsb
sbbl
jp
mov
and
sub
mov
or
out
jns
ret
clc
out
xchg
fwait
scas
in
dec
mov
pop
data16
or
outsb
mov
jno
or
lock
outsb
fimull
push
ret
insb
fdiv
ss
dec
push
xor
xchg
orl
sbb
pop
push
and
loope
jge
iret
movl
rclb
mov
mov
mov
cmp
test
xchg
mov
jge
nop
iret
mov
cmp
ror
pushf
das
push
dec
mov
pop
push
pop
movsb
scas
cmc
push
cmc
movsb
mov
repnz
push
jl
idivb
stc
fnstcw
sub
mov
inc
repnz
gs
repnz
mov
push
jl
or
pusha
out
push
in
sbb
or
scas
dec
sbb
add
inc
add
sub
cmp
icebp
jno
in
jle
push
pop
out
inc
out
outsb
dec
in
in
gs
inc
lds
xor
movsb
or
add
mov
sub
movb
xchg
call
hlt
lods
hlt
jb
and
sbb
push
ret
sahf
xchg
sti
mov
add
inc
add
out
jns
scas
push
stos
mov
pop
inc
rcrb
pop
adc
mov
inc
popa
add
loop
inc
cld
cmc
ret
outsl
popf
int3
mov
push
enter
push
sahf
pusha
pop
addr16
scas
fidivs
and
cmp
repnz
mov
aad
cwtl
xchg
or
lret
and
jno
movsl
push
and
and
add
nop
addb
gs
pop
inc
xchg
inc
shrl
aaa
push
out
scas
bound
jae
cmp
roll
adc
ja
mov
in
cmp
mov
or
shlb
lret
aad
lock
neg
lods
and
jns
in
int3
rcpps
mov
jno
inc
xchg
xchg
jo
mov
fistpl
xor
scas
cmpsb
inc
rcll
add
add
sub
inc
and
mov
pop
in
aam
push
cmp
negb
mov
aam
mov
rol
xchg
or
test
outsb
push
dec
pusha
pop
fisubrl
push
xchg
sub
mov
shlb
shrl
sub
mov
out
jo
mov
in
repnz
pop
clc
adc
push
je
adc
leave
jl
cmp
das
dec
mov
mov
jbe
insl
adc
enter
adcb
dec
aaa
in
mov
jp
sbb
fistpll
mov
dec
pop
mov
or
stos
aam
out
clc
xchg
cli
jno
ds
jnp
loope
xchg
dec
or
pop
mov
dec
jns
or
xor
pop
inc
xor
out
cmp
pop
cwtl
sub
push
mov
in
mov
xor
inc
adc
push
xchg
movsb
and
jecxz
imul
or
fwait
cmp
jne
inc
fadd
ror
std
call
and
je
outsl
cli
inc
scas
add
mov
jg
xchg
cld
xchg
out
pop
add
mov
lock
popf
loope
inc
mov
ret
add
push
push
or
int3
repz
out
jb
sub
scas
rcrl
mov
add
clc
icebp
aaa
nop
mov
gs
out
in
sub
and
cmpsb
mov
icebp
loopne
sub
out
in
insl
stos
adc
ljmp
push
or
add
mov
in
and
sub
ret
and
aas
sarl
adc
insl
int
cmp
jbe
nop
repz
jno
jmp
popa
ja
lahf
cs
sbb
outsb
data16
rclb
cmp
mov
or
bnd
adc
vprotd
js
cmpsb
lods
sub
add
rol
stos
xor
out
or
insb
icebp
lds
fs
in
shl
sbb
mov
movsl
adc
adc
push
dec
lcall
addr16
adc
sub
into
movsl
push
inc
enter
mov
test
adc
jb
or
pop
push
jmp
and
push
xor
pop
mov
push
xor
jbe
push
sbb
push
jg
out
push
je
lret
dec
rclb
jmp
mov
mov
push
mov
cmc
add
push
int
enter
mov
jae
dec
jmp
add
cmp
in
test
cmp
jmp
fstpl
sti
inc
and
push
mov
xchg
sbb
into
mov
pop
mov
sahf
hlt
sub
mov
push
neg
shll
rolb
pop
das
les
pop
jmp
shlb
xor
mov
scas
and
sarb
pop
scas
std
ja
leave
les
jecxz
jne
push
lcall
sub
pop
in
xor
jae
cmpsl
stos
or
test
stos
and
test
lods
pop
xor
fs
out
mov
or
pop
cmpsb
jne
mov
out
sub
mov
or
cmpsl
dec
and
jle
popa
test
sub
or
jbe
fdivs
jle
dec
into
pusha
mov
out
ret
subb
pushf
dec
in
push
jg
jnp
cmp
xor
test
rcrb
sbb
sub
xchg
adc
out
outsl
or
lahf
push
push
jecxz
leave
call
repnz
push
cmpsl
addr16
leave
jle
mov
fisttpl
icebp
cmp
in
test
pop
sub
ss
mov
push
jl
imul
ds
int3
scas
popa
cmpl
and
push
popf
push
ret
in
add
xchg
mov
scas
out
mov
cmpsl
into
jg
je
mov
outsl
arpl
ss
pop
mov
pusha
cwtl
mov
ret
pop
mov
sub
jl
cmpsl
jne
orl
sbb
xchg
inc
pop
aad
pop
mov
sbb
test
ss
fnstcw
les
mov
pop
and
xor
repz
push
in
push
in
push
add
leave
or
jle
xchg
rclb
ret
xchg
stos
cmp
jmp
xor
fnstcw
cltd
adc
hlt
insb
sbbl
test
xor
add
in
lock
mov
pusha
mov
dec
add
in
cmc
dec
jl
icebp
shl
hlt
int3
sbb
ja
sbbb
jnp
push
push
mov
mov
pusha
ret
xor
sub
ja
icebp
ljmp
into
adc
test
mov
int3
xor
mov
pop
and
rorb
and
sub
int3
int3
in
lods
inc
jbe
push
xchg
mov
stos
jns
popf
jnp
aaa
xchg
loopne
repnz
int3
jmp
pushf
mov
cmp
add
cmp
lods
in
fistps
inc
sbb
aam
xor
jecxz
testb
add
push
sub
inc
pop
add
mov
inc
fs
in
out
dec
jno
arpl
popf
ficomps
sub
xchg
sbb
push
jge
hlt
scas
out
repnz
xchg
fwait
je
jecxz
xor
test
xchg
insb
cmp
aaa
inc
xor
mov
jmp
out
adc
push
cltd
arpl
fisubrl
adc
cmp
push
mov
mov
icebp
adc
sahf
shlb
dec
out
jno
loopne
fadds
cmc
fsts
lret
push
loop
jb
push
fnstsw
jg
ss
aaa
inc
push
leave
add
mov
mov
mov
faddp
inc
bound
sbbb
les
jne
xorb
shll
std
clc
mov
scas
or
dec
xchg
or
mov
test
jge
dec
call
jne
data16
dec
cmp
mov
test
ret
jmp
sub
sbb
shlb
xor
mov
push
test
push
mov
and
sahf
ret
popf
in
ljmp
fsubp
mov
push
sbbl
mov
mov
das
sub
adc
in
fwait
mov
int
sbb
xchg
sbb
jp
pusha
push
mov
adc
adc
addr16
jmp
gs
fsubrs
orl
test
sbb
jno
daa
ret
adc
push
lods
push
push
sbb
pop
jne
pop
add
int
push
and
cmp
into
cmpsl
sahf
aas
inc
dec
mov
fmul
in
jnp
into
dec
xor
lret
or
sub
sbbl
xchg
stos
inc
xlat
leave
jle
cmp
dec
adc
bound
fdivrs
mov
call
mov
add
jae
jp
sbb
fs
movsb
ror
fistpll
dec
adc
mov
mov
sbbl
adc
ds
mov
jge
dec
mov
mov
jae
jmp
in
outsl
cli
lcall
ss
test
mov
xchg
push
out
test
stos
jge
add
or
or
mov
sub
adc
dec
dec
js
ret
pop
out
jae
cmp
out
jb
mov
xor
movsl
aam
pop
aaa
fcmovnb
inc
pop
leave
mov
dec
fdivrl
ljmp
clc
arpl
outsb
stos
dec
cs
inc
sbbl
in
xchg
daa
pushf
cli
sub
sub
cmpl
dec
xorb
adc
mov
movsb
lahf
in
push
pusha
in
incl
pop
push
insb
lcall
sbb
dec
sbb
mov
out
aam
cmp
mov
imul
cmp
sub
add
dec
xor
lock
mov
jmp
xchg
lea
push
stos
and
cmp
mov
outsl
dec
sub
xor
add
pusha
or
push
dec
push
dec
jno
jo
xchg
push
mov
idiv
mov
cmpsb
inc
sti
fwait
inc
notl
cwtl
call
jnp
call
jne
xchg
push
push
mov
inc
cli
outsb
xor
jecxz
adc
mov
repnz
pop
xor
or
idiv
aaa
enter
sar
add
cmp
mov
subb
and
and
fs
mov
dec
insb
or
notb
mov
pop
test
dec
jmp
inc
and
xor
sbb
icebp
mov
mov
scas
push
mov
sbbl
mov
xchg
and
test
sbb
cs
pop
in
add
fwait
loop
and
adc
xor
cmp
push
mov
shll
mov
fsubrs
popf
loopne
movsl
stos
xor
mov
cmc
add
mov
xchg
bound
mov
pop
add
adc
jg
adc
inc
mov
stos
cmp
push
je
xchg
pop
mov
mov
fldln2
jne
push
ja
dec
pop
stos
lea
lods
jmp
jmp
imul
dec
arpl
adc
ss
adc
jge
into
push
pop
cmp
and
into
and
cmp
sbb
faddl
in
or
push
jp
mov
xchg
sub
jne
xlat
mov
decb
cmp
add
push
jo
jle
stos
cwtl
xor
sub
or
sbb
je
sti
clc
xchg
cld
add
jge
in
pop
jl
sbb
mov
aam
addr16
and
cmp
mov
repz
dec
ds
jbe
lods
sub
cwtl
outsb
mov
dec
mov
mov
test
mov
sti
int3
sub
add
and
pop
lods
cli
lahf
mov
xchg
test
in
test
clc
and
sbb
fdivl
jle
in
pop
in
cmpsb
jns
ds
mov
pop
iret
daa
jl
test
sbb
pop
xchg
in
neg
xchg
fwait
sahf
and
iret
lea
lock
rolb
imul
es
pop
outsb
imul
les
repz
test
jae
push
ja
mov
dec
loope
subb
imul
je
jo
insl
test
rcll
in
pop
push
and
call
sub
and
xor
lcall
mov
jne
push
popa
popf
xor
ret
mov
sub
sbb
or
outsl
cwtl
popa
out
mov
mov
inc
call
jp
cmpsb
fwait
outsl
outsb
and
add
mov
fisttpll
mov
dec
push
test
call
or
push
push
jno
leave
js
push
inc
leave
orl
in
por
ljmp
adc
or
popa
out
mov
mov
enter
jmp
mov
addr16
ret
mov
xchg
ja
pop
nop
jge
aaa
not
aaa
shlb
mov
jle
les
mov
ja
xor
xlat
adc
outsl
pop
pop
push
push
arpl
subl
mov
repnz
mov
sarb
adc
mov
shrb
stos
fsubs
test
fwait
bound
push
js
jle
lcall
add
movd
out
or
repnz
daa
lods
pop
push
scas
scas
adcb
push
stc
mov
inc
mov
aad
cmc
mov
jae
sbbb
mov
test
rol
ret
adc
dec
cmp
push
lods
mov
out
xor
xchg
xor
jg
movsl
add
and
push
jle
push
lret
mov
jns
inc
inc
add
push
movsl
pop
adc
sbb
push
cli
sbb
je
shrb
fcmovnu
les
nop
scas
into
inc
mov
in
sarb
repnz
mov
outsb
pop
sarb
call
inc
aam
lahf
and
sbb
xor
push
jbe
push
sub
ja
and
inc
fs
or
mov
sti
adc
ss
xor
xchg
mov
scas
xor
sbbb
ffreep
jb
int
add
divl
or
mov
je
mov
mov
insb
mov
push
out
mov
jne
xchg
xchg
data16
pushf
in
mov
out
pop
cld
add
daa
or
adc
cmpsl
cmpb
xor
dec
outsl
aad
mov
ret
mov
jecxz
mov
ss
scas
rorb
movsl
push
in
lret
sbbl
jg
push
loop
popw
pop
push
cld
repz
mov
push
push
js
lods
pop
fcoms
insl
pop
push
test
jecxz
daa
push
aas
jns
out
push
cmp
ss
imul
data16
mov
daa
xor
jle
nop
mov
mov
scas
stc
push
stos
jecxz
dec
xchg
pusha
inc
cmc
and
xor
mov
jne
xchg
adc
dec
movsl
dec
inc
hlt
in
sbb
dec
pop
in
bnd
lret
loopne
sbb
in
stos
jne
cmp
dec
nop
and
outsl
in
cld
pushf
ljmp
scas
xor
orl
jle
into
push
xor
cwtl
inc
push
lret
inc
mov
scas
mov
ja
mov
fildl
xor
jne
adc
ret
cmp
adc
outsl
mov
insl
mov
xchg
nop
rclb
jl
cmc
push
and
dec
test
add
pop
cmp
ja
cmp
sbb
sti
nop
subl
xor
xor
in
xchg
cmpsl
pop
pop
pop
add
push
out
sbb
cmp
call
scas
or
cmp
sbb
pop
pop
inc
sahf
or
in
sub
loop
and
xor
ret
pusha
lea
lods
andl
add
pop
dec
mov
push
jecxz
inc
sub
sub
jns
pop
mov
mov
adc
ret
addb
js
lret
scas
dec
mov
fildll
push
les
jl
es
cmpsl
sub
xchg
inc
adcl
sbb
jo
add
sbb
outsl
outsl
xchg
cmpsb
and
ret
inc
leave
cmp
cmpsb
lahf
cmp
mov
mov
lods
push
addr16
mov
rclb
les
dec
pop
adc
jbe
cli
imull
hlt
xchg
mov
push
sbb
mov
es
cltd
inc
xor
cmp
dec
ficompl
pop
cli
xchg
dec
outsb
push
mov
clc
rcll
add
clc
push
fwait
repz
sahf
dec
pop
popf
popa
dec
sub
xchg
out
fiaddl
xchg
adc
mov
push
sarl
inc
and
xor
jmp
push
or
loopne
rcl
sub
ficompl
rorb
push
pop
sbb
lret
jp
add
xor
xor
mov
jmp
mov
lcall
test
or
adc
lcall
hlt
or
lcall
adc
fwait
lods
mov
or
pop
movsb
mov
jae
push
adc
int
push
hlt
nop
adcb
lahf
das
xor
pop
stos
push
out
je
std
pop
syscall
cmp
sbb
mov
ud1
test
rcr
mov
ss
pmulhw
push
outsl
lret
adc
mov
mov
push
push
fcompl
jmp
aad
sarb
inc
push
repnz
sbb
imul
scas
mov
lds
and
dec
mov
aas
nop
in
aad
and
jo
or
or
mov
pop
fldcw
call
adcl
sbb
call
xor
mov
push
in
push
jae
jns
push
jne
movsb
mov
push
adc
test
jo
cmp
mov
inc
mov
and
mov
pusha
add
xor
jbe
jle
adc
pop
sbb
enter
ljmp
mov
das
aam
mov
inc
push
fldl
mov
pop
adc
mov
js
loopne
push
int3
adc
push
cmp
mov
mov
xchg
enter
data16
jns
cmc
fcmove
lods
inc
jle
in
jbe
add
mov
xchg
mov
jle
dec
mov
cmc
xchg
sub
daa
loope
inc
lcall
sbb
xor
jle
sahf
push
sbb
adcl
pop
popf
sti
adcl
out
shr
dec
or
mov
jno
int3
and
test
mov
faddl
pop
jmp
cmpsl
xchg
and
and
rep
test
sahf
cmc
divb
in
int
mov
push
mov
mov
aas
jbe
push
jnp
jge
lret
cwtl
flds
or
ss
jne
jb
xchg
add
sub
sbb
out
cmp
hlt
fdivrl
stos
and
rclb
nop
xor
test
pop
push
mov
js
and
jl
jae
fs
or
insl
andl
sub
imul
outsl
js
jo
pop
cs
test
arpl
popf
aaa
in
ficoms
pop
iret
out
cld
add
xchg
add
es
leave
call
pop
push
shr
repz
or
fistpl
enter
pop
test
popa
adc
mov
mov
gs
jl
mov
inc
fimuls
push
addb
pusha
push
pop
out
dec
jle
lahf
pop
push
pop
sub
push
push
lret
shlb
push
jp
imul
mov
pop
pushl
sti
add
lea
mov
and
cli
fistpll
icebp
ret
jl
fwait
jb
fisubrs
cli
cltd
push
mov
idivl
gs
xor
loopne
add
jno
scas
push
int
pop
rorb
push
sub
leave
aas
cld
sti
rep
and
xorb
pop
push
cs
ret
mov
cmp
das
cmp
jne
mov
fwait
dec
xor
mov
lods
pushf
outsl
imulb
test
into
adc
inc
inc
and
sahf
xchg
mov
or
lret
repz
lods
push
xchg
sub
sub
pop
rcrb
xchg
jae
mov
lods
mov
lock
adc
loopne
xor
cmpsb
dec
adcb
cmp
cwtl
mov
stos
add
pop
insb
leave
adc
or
mov
add
mov
cmpsl
cmpsl
add
cmp
cld
es
sbbl
call
cmp
fdivs
mov
mov
fstl
xor
cs
adc
int
imul
dec
cmp
and
rolb
rcl
daa
test
xor
xchg
into
insl
insb
in
sbb
jbe
or
mov
mov
jne
test
xchg
jbe
shll
cs
push
xchg
lcall
add
push
jne
leave
mov
push
and
in
jl
roll
dec
clc
pop
sbb
test
adc
dec
cli
aam
das
push
addr16
or
xorb
and
sub
outsb
inc
mov
dec
ljmp
mov
popf
test
pushf
pusha
or
stos
cmp
faddl
movsb
xor
xchg
mov
mov
or
cmp
jge
cmpsl
data16
daa
pop
mov
aad
test
and
inc
fcomps
iret
add
adc
mov
inc
xchg
dec
and
dec
add
xor
and
push
jg
bound
sti
in
je
cmp
ror
subl
push
mov
mov
stc
push
fisubrl
add
decl
mov
xchg
repnz
outsl
add
mov
adc
push
clc
fists
loopne
gs
jo
movsl
pop
cmp
pop
inc
sub
mov
movsb
sub
push
aam
and
dec
dec
add
sti
pop
push
movswl
aaa
xchg
mov
daa
dec
mov
mov
or
mov
sahf
mov
xrelease
sbb
push
cmp
jbe
test
jecxz
or
jecxz
imul
sub
jae
gs
popa
cli
shlb
pop
in
sbb
jp
xchg
adc
outsl
insb
mov
fimull
call
inc
test
cld
loope
push
out
fiaddl
mov
inc
push
jae
push
jo
out
sub
xchg
cmp
add
in
mov
xlat
pop
dec
pop
sbb
pop
jmp
out
add
lea
mov
sbb
pop
add
or
insb
add
pushf
enter
lahf
push
and
pop
push
xor
xchg
sbb
inc
sbb
out
int
xor
js
in
lods
mov
inc
aam
scas
mov
lods
pop
roll
cmpsb
lahf
push
jo
test
xor
sub
xchg
mov
mov
xchg
xor
int3
mov
sub
cmp
sbb
outsb
les
or
idivb
loop
xor
mov
push
push
add
out
dec
scas
or
sbb
popa
rcrl
cmp
or
mov
scas
je
outsb
adc
clc
push
lods
je
movsl
cmpb
or
fistl
push
or
pop
push
scas
ret
cmp
rol
dec
movsl
mov
lods
dec
daa
rolb
jns
cmpsb
or
push
roll
lods
into
mov
xor
jne
jle
sub
fisubl
adc
xor
mov
popf
das
shlb
xor
pop
test
fsubrl
fcomps
dec
out
jne
push
mov
out
jge
dec
inc
mov
cmp
aas
int
arpl
sub
mov
shl
call
pop
lods
or
dec
xchg
rcrl
xor
lret
adc
xor
lock
pop
inc
aam
stos
cmp
sbb
cmp
pop
cwtl
jne
ss
dec
inc
sbb
cmp
rcrb
inc
push
hlt
insb
xchg
or
push
add
sbb
cmpsl
dec
cwtl
jne
fwait
or
xor
mov
jg
aad
insb
sbbb
sbb
scas
roll
mov
cwtl
dec
ja
xor
and
push
push
outsl
inc
sub
into
mov
and
cmpb
lcall
push
test
lcall
loope
shl
mov
pop
fldenv
cltd
xchg
addr16
int3
xchg
movsl
das
je
adc
push
fistpll
jmp
dec
shll
sbbl
dec
mov
adc
cmc
fwait
jge
mov
xchg
aaa
or
jg
lds
dec
and
lock
test
pop
xchg
sbb
icebp
in
jno
popa
cltd
ds
cmpsl
sarl
mov
ftst
sbb
cmpl
out
pop
jge
mov
out
push
mov
dec
loop
dec
cmp
push
icebp
or
jns
push
ljmp
aam
mov
xor
dec
jnp
bnd
scas
test
mov
jbe
jmp
imul
ss
mov
sarb
and
push
push
div
int
xchg
or
leave
dec
cmpsl
mov
or
cmpsb
push
jle
int3
jmp
aas
stc
daa
and
pop
jle
jno
push
stos
js
enter
nop
test
pop
add
in
pop
sub
imul
sbb
and
mov
push
mov
lea
fbstp
jno
xchg
sub
xchg
mov
orb
xor
cmp
jb
sub
mov
adc
mov
push
push
jno
add
and
in
fwait
loope
shl
jo
mov
or
mov
cld
je
sysret
jg
fisttpl
xor
fwait
lcall
aad
push
cmp
aas
stos
rcrb
add
dec
shlb
jb
and
in
cs
dec
sub
mov
mov
shrb
sub
fisubrl
mov
call
push
js
imul
and
std
inc
dec
cmpsb
ret
xchg
xchg
sub
pop
dec
in
loopne
in
mov
inc
xor
imul
data16
mov
andl
lahf
lret
xor
push
cld
adc
popf
and
pop
fbld
pop
enter
push
roll
cs
out
scas
aad
mov
popa
ljmp
jp
mov
test
aam
nop
jo
popf
mov
mov
lea
inc
or
xor
mov
in
adc
in
pop
popf
xchg
mov
sbb
sbb
std
mov
or
arpl
insl
xor
es
lock
or
dec
cmp
in
mov
or
popa
push
mov
lcall
adc
pop
add
lcall
xchg
psubb
popf
mov
mov
das
in
fbstp
lahf
push
int3
mov
mov
mov
mov
subl
mov
ja
fidivrl
shll
jmp
test
inc
bound
hlt
mov
fiadds
push
lahf
or
cli
sbb
sub
lds
lret
and
hlt
imul
fmul
negb
arpl
cmp
test
or
dec
sbb
scas
push
pop
scas
or
call
xchg
mov
aas
dec
cmp
loope
mov
push
push
arpl
push
das
add
nop
mov
dec
jo
mov
inc
std
fwait
pop
add
aam
and
ret
fnstsw
rolb
cmp
stc
fcompl
adc
jmp
enter
jno
push
cli
into
jne
inc
add
repz
loopne,pn
aas
ds
cmp
xchg
xorb
lods
xor
jne
push
cmp
scas
adc
in
stc
lods
cld
shrb
stos
lcall
or
int3
dec
clc
lea
jge
fldcw
cmc
lds
fstpt
pusha
add
popa
mov
pop
call
icebp
repz
dec
lret
sarl
je
mov
fnstcw
mov
sbb
xrelease
inc
or
popf
mov
and
mov
xor
xor
pop
mov
loope
lcall
dec
xchg
rorb
pop
add
xor
lds
adc
sahf
and
dec
xchg
dec
xor
pop
xor
pop
push
jne
mov
cmpsb
push
fiadds
mov
je
xor
xchg
repz
and
mov
aaa
lds
aam
cmp
add
pop
mov
out
movsb
push
push
in
cmp
cmpsl
push
and
xchg
cmp
inc
jns
sbb
mov
mov
insb
gs
jecxz
ja
scas
and
cli
add
loopne
jmp
sub
daa
scas
sbb
scas
add
aas
leave
mov
xchg
pop
pop
js
popa
insb
push
cld
out
loopne
daa
push
test
cld
push
and
scas
pop
addr16
stc
mov
andl
lcall
sub
lods
sub
dec
mov
push
shlb
and
sbb
sub
mov
enter
test
inc
aad
fwait
ja
out
lret
mov
cwtl
jne
stos
pop
add
mov
pop
lahf
fcoml
mov
push
jmp
repnz
xchg
add
lahf
pop
add
out
adc
jle
dec
addr16
andl
cmpsb
add
xlat
jo
test
out
inc
cmp
or
dec
add
or
mov
jno
divl
xor
jae
jg
xchg
dec
iret
sbb
test
dec
xor
pop
adc
loopne
sub
mov
mov
add
mov
xor
jo
jle
add
adc
dec
dec
sbb
and
pop
aad
jecxz
push
repz
je
xchg
int
mov
fcompl
mov
iret
sbb
add
cli
mov
dec
test
test
hlt
call
pop
loop
leave
xchg
dec
xor
fldt
adc
push
lahf
mov
stos
rorl
popa
lret
stos
std
cmpsb
fs
ret
das
aas
pop
push
sarl
test
out
or
jnp
arpl
out
xor
test
fmuls
jb
adc
outsl
inc
mov
iret
imul
pushfw
stos
xchg
sub
mov
sbb
pop
outsb
enter
loope
rclb
or
xchg
repnz
inc
aas
sbb
lcall
jl
and
popa
mov
pop
insb
push
repnz
mov
sahf
bound
call
das
xchg
inc
adc
inc
lcall
int3
int3
mov
mov
or
sarb
inc
sbb
mov
gs
and
dec
mov
xor
aad
aas
pop
mov
jno
and
stos
cmp
lret
clc
sbb
pop
xchg
test
mov
push
es
imul
lahf
push
loopne
and
cmc
movsl
cwtl
js
xchg
in
aas
xor
sub
push
ret
dec
outsl
xchg
popf
or
das
les
sbbb
pop
loope,pn
pop
or
icebp
aas
or
lret
scas
in
sbb
pushf
adc
inc
mov
lods
fidivs
js
scas
xor
pop
adc
ss
jmp
jecxz
addr16
cmpsl
cmp
add
mov
pop
or
mov
xchg
xor
mov
or
xchg
or
outsb
aam
fs
jmp
mov
xor
imul
imul
out
jl
repnz
pusha
mov
pusha
pop
sub
in
aam
inc
sbb
ret
popa
mov
cwtl
dec
imul
jl
clc
jbe
fxch
dec
xor
jae
rcrb
les
test
pop
jbe
jp
stos
pop
stos
and
mov
lods
in
mov
sbbb
repnz
out
nop
push
xor
dec
in
aas
mov
in
pop
pop
lods
insb
scas
mov
jbe
popa
stos
sbb
inc
mov
xor
ret
xchg
xchg
ss
leave
xchg
or
push
jge
pop
orb
xchg
or
mov
jb
xor
ret
mov
push
lds
mov
pop
lcall
out
pop
ljmp
xchg
push
xor
or
idivb
insl
jl
cmp
ss
in
lret
push
mov
mov
xor
push
mov
ja
dec
push
jecxz
in
mov
orb
imul
pop
sub
mov
idivl
jle
xor
jnp
scas
stc
jl
xchg
or
rorb
imul
xchg
pop
push
pop
ficoml
push
shll
pushf
xchg
inc
sub
rolb
push
nop
dec
mov
xchg
mov
mov
push
in
dec
cld
lret
cld
pushf
repnz
call
pop
lret
ss
mov
dec
or
and
jnp
int3
adc
jnp
outsl
mov
je
xchg
mov
mov
xchg
and
sti
pusha
and
pop
fadd
mov
add
pop
jp
bswap
daa
xchg
and
test
and
jns
fildll
push
push
sbb
and
das
jbe
mov
ljmp
sub
add
push
loopne
jl
out
in
mov
mov
sub
adc
mov
jnp
cmp
fsubrs
push
inc
sarl
je
or
jl
mov
out
std
cmp
pop
mov
pop
and
add
mov
pop
stos
and
xchg
cs
cwtl
ljmp
add
enter
arpl
mov
mov
mov
adc
or
das
jno
jbe
scas
mov
fnstenv
out
pushf
pop
xor
cmc
test
mov
push
mov
xchg
lret
add
lds
mov
xchg
repz
ss
add
sbb
cmp
mov
sbb
mov
pop
sbb
imul
enter
fs
repz
sub
and
out
scas
add
in
cmc
dec
rcrb
or
aam
sbb
add
push
mov
or
ljmp
aam
orb
cmp
sbbb
mov
inc
xor
xchg
mov
mov
je
iret
sub
mov
adcb
and
push
adc
pop
jg
xchg
ret
xchg
mov
and
ja
mov
rcr
push
in
lea
ret
sub
adc
mov
jl
int
ret
jo
xor
cli
mov
testb
nop
xlat
or
push
mov
lret
lods
cli
sbb
out
or
clc
jp
jl
add
in
adc
cltd
js
imul
add
mov
push
out
mov
push
cmc
sbb
inc
int3
mov
mov
adc
adc
rclb
jnp
dec
lahf
fimull
mov
dec
or
imul
outsl
repnz
les
scas
mov
mov
icebp
cmp
and
dec
mov
inc
adc
ss
rolb
xlat
inc
lods
add
pop
jbe
mov
mov
es
cmp
cmpl
int3
loopne
and
stc
inc
mov
push
outsb
loopne
or
in
insb
in
push
movsl
pop
and
cmp
mov
mov
in
ret
loopne
sbb
lcall
adc
push
cmp
mov
sub
data16
adc
es
sub
fs
js
lret
xorl
push
cmpsl
xor
inc
jl
xchg
andb
mov
int
lds
test
cmc
fists
stos
shrl
dec
jne
fistpll
mov
iret
mov
pop
mov
ret
std
ljmp
or
stos
das
stc
daa
xchg
iret
enter
sub
adc
js
or
push
fistpl
sbb
inc
les
es
ret
add
andl
rol
jno
mov
sti
sahf
pop
loope
pop
test
or
ds
mul
pop
add
sbb
add
mov
dec
outsl
xor
jnp
or
xor
add
and
sub
mov
mov
and
xchg
xor
lret
mov
sbb
push
rcrl
sbb
xorl
sbb
xchg
adc
gs
fdivrs
mov
push
and
xchg
mov
sub
adc
and
scas
popa
loop
fsub
jg
mov
dec
pop
and
push
insl
or
in
mov
mov
insl
das
cli
cmc
add
xor
repz
fwait
jmp
xor
repnz
sub
sti
loopne
or
sub
fildl
mov
ds
cwtl
fildll
xchg
inc
pop
pop
repnz
in
pop
in
insl
ret
pushf
movsl
push
fdiv
loope
jne
cld
push
aas
icebp
stos
call
cmp
je
jbe
mov
pop
pusha
andb
jmp
jle
movsl
sbb
mov
and
stos
ss
fldcw
add
pop
xchg
test
nop
pop
or
xor
cmc
push
out
xor
push
dec
xchg
jo
push
cwtl
jno
dec
sti
xchg
gs
xchg
sbb
pop
sub
push
pop
dec
rorl
jae
xor
mov
push
adc
pop
push
aad
loope
outsb
cmp
adc
test
push
aad
je
lret
cs
ffreep
dec
jg
push
mov
jecxz
jnp
inc
mov
popf
ss
mov
push
jge
mov
xchg
cltd
aaa
push
js
mov
sbb
add
int
aas
cld
cmp
sbb
xor
pop
repz
lahf
sub
daa
dec
pop
and
pop
xchg
push
xchg
cmc
dec
lods
jae
xor
addr16
pop
in
or
pop
jmp
push
fstpl
insl
ret
adc
jmp
je
jno
push
arpl
nop
aam
ret
mov
enter
addl
mov
movsl
push
mov
lds
add
xor
js
and
andb
adc
pusha
fmull
loop
cmp
pushf
cmc
cmp
push
push
push
xor
out
add
push
push
jnp
mul
shll
loopne
or
lods
jg
cltd
dec
fcomps
and
mov
pop
inc
std
inc
pop
push
jmp
add
xor
dec
xor
outsl
jmp
das
add
test
adc
call
shll
dec
ficompl
test
add
rorl
hlt
or
push
mov
popf
cwtl
pusha
mov
aam
dec
adcl
add
cmovae
fnsave
int
pop
test
cli
inc
jl
mov
test
imul
xchg
jns
int
inc
iret
mov
mov
sbb
pop
int
pop
and
mov
fmull
mov
int3
push
xor
jo
jae
mov
lods
pop
pop
or
mov
and
sbb
lret
jmp
out
cld
pushf
dec
js
mov
nop
xor
push
mov
xchg
loope
cwtl
mov
mov
fdivl
movl
push
cmp
add
test
mov
out
arpl
in
mov
or
out
addr16
xor
cwtl
lcall
repnz
icebp
fsubr
inc
xor
and
shlb
mov
adc
in
add
and
rcr
push
stos
cmpsb
push
outsb
jmp
xchg
adc
cli
xchg
or
jp
inc
aad
jg
iret
add
push
fnstcw
mov
loop
imul
out
add
lret
std
sub
inc
scas
into
push
mov
aad
and
push
mov
out
pinsrw
pop
push
mov
xchg
adc
out
inc
xchg
or
mov
adc
jns
sbb
outsl
lret
push
mov
arpl
jecxz
mov
push
out
and
aaa
xor
insl
inc
gs
mov
sub
in
cmc
push
call
pop
fsubr
mov
mov
jge
pop
and
leave
stos
xor
imul
dec
xchg
mov
imul
inc
and
out
push
cs
in
arpl
or
imul
jge
imul
popf
sbb
incb
jb
sbb
cs
push
bound
out
mov
inc
push
cmpsl
jno
int
mov
movl
xor
and
xchg
mov
test
movsl
call
mov
test
mov
cmp
inc
icebp
sbb
jmp
jns
pop
inc
cmp
sbb
shr
xor
add
inc
xchg
sub
repz
or
mov
jmp
and
mov
inc
sahf
leave
aam
mov
inc
fs
dec
sub
and
hlt
inc
mov
in
cli
push
out
aaa
dec
sbb
cmc
mov
insl
mov
fsubr
into
push
out
and
sub
js
xchg
js
ja
inc
outsb
xchg
and
cmp
daa
pusha
dec
in
popf
push
rcr
mov
inc
jmp
negl
scas
push
mov
push
pop
inc
jb
mov
ja
sbb
fidivrs
sbb
xchg
les
daa
mov
mov
mov
in
jno
jg
sub
es
pop
mov
out
aas
cmp
inc
fsubr
mov
test
repz
out
loope
arpl
sarb
inc
jnp
ds
jno
call
and
dec
xor
xor
arpl
add
pop
data16
cs
cmpsl
jl
test
mul
outsb
mov
mov
outsb
mov
lods
cld
leave
lods
js
pop
pop
jnp
sarb
sub
lret
sti
stos
test
aad
ss
and
sbb
pop
inc
out
loope
fistpll
jnp
push
loopne
pop
ljmp
sbb
insb
fisttpl
imulb
fucomp
or
pop
stos
loop
loopne
pusha
in
scas
dec
loopne
add
mov
shrb
into
mov
jbe
test
pop
add
dec
and
fisubrs
fistpl
push
scas
fimuls
pop
xchg
push
pop
rcr
leave
test
jmp
pop
push
jmp
loop
push
fstp
mov
out
xchg
pop
pop
xchg
sahf
sub
mov
dec
push
mov
jnp
add
incb
scas
shlb
push
or
rclb
iret
dec
pusha
iret
add
leave
aas
adc
loop
lret
gs
clc
int
lahf
pop
arpl
cwtl
mov
push
mov
in
sub
add
jp
sub
in
leave
pop
add
add
xlat
adcb
dec
or
test
xchg
cmp
and
pop
cmpsb
xor
stos
adc
xchg
mov
sahf
push
mov
ficoms
dec
lret
mov
jle
push
aas
loop
sub
push
push
popf
arpl
and
lahf
xor
xchg
or
inc
mov
sub
insb
sbb
ja
mov
pop
sbb
test
sub
fcom
dec
dec
dec
inc
test
sbb
push
cmp
inc
add
aad
popf
out
loop
push
xchg
scas
loope
push
xchg
imul
stc
lds
or
mov
xlat
sub
in
mov
test
cmpsb
inc
cmpb
cmp
push
pop
inc
popa
xor
xor
fimuls
xor
add
call
push
mov
ds
mov
jns
xchg
add
enter
movsl
stos
and
cmp
sub
cmc
nop
dec
xchg
mov
push
fimull
inc
data16
ds
sarl
cmp
mov
xchg
fisubs
cmc
lods
mov
jne
shrb
lods
push
es
fwait
pop
jg
out
adc
stos
push
cmpsb
xor
insb
adc
xlat
insb
insl
insl
jmp
lods
jg,pt
dec
adc
test
popf
xchg
popa
lret
push
and
ss
stc
pop
inc
outsb
mov
mov
dec
push
lods
es
add
cltd
xor
nop
fsubrp
inc
xchg
sub
dec
or
cli
or
int3
dec
or
lahf
adc
rcrb
outsb
xor
popf
clc
ror
pushf
mov
xor
push
jle
pop
inc
mov
mov
ljmp
and
je
mov
leave
or
loope
cwtl
ss
or
lods
mov
clc
loopne
pop
fdivrp
mov
out
pushf
lahf
sub
rorb
inc
loop
imul
push
xchg
ljmp
int
je
loop
jns
push
stc
and
in
ds
add
mov
sub
arpl
cltd
in
cmp
dec
sub
mov
sub
adc
popa
das
xchg
mov
pop
sbb
dec
mov
sbb
push
das
scas
leave
jecxz
fstl
das
enter
mov
aad
pusha
sub
dec
xchg
popf
sti
dec
rorb
sub
ja
sbb
imul
mov
xchg
push
add
ljmp
fmull
sub
iret
xor
xchg
mov
push
je
push
and
pop
std
dec
adc
stos
jo
rcll
push
jle
lret
adc
adc
push
lods
rcrb
xchg
imul
mov
in
jb
pusha
mov
pop
and
imulb
std
xchg
dec
nop
hlt
out
dec
fcomps
or
xchg
jp
jns
insb
iret
imul
xor
mov
bound
mov
arpl
or
cwtl
ss
push
scas
cmp
stos
dec
or
or
lock
jle
faddl
mov
xlat
mov
xlat
movsl
jg
rorl
cli
jmp
xchg
jp
cmpb
dec
inc
push
lea
and
nop
mov
fdivrs
add
sbb
loopne
pop
and
pusha
add
dec
inc
movsl
sub
adc
jge
adc
xor
mov
into
jb
adc
popf
mov
mov
push
in
lcall
xor
push
pop
mov
inc
mov
cmp
and
mov
xchg
ret
mov
pop
pop
int
and
pop
fstps
subl
addr16
imul
sub
adc
mov
dec
call
fildll
lods
pop
aam
mov
or
outsb
jae
dec
sbb
push
pop
jbe
sahf
out
inc
sbb
inc
sbb
xlat
mov
sbb
rolb
arpl
lcall
jae
xor
adc
repz
mov
nop
fwait
adc
sar
andw
lea
movsl
push
cmp
pop
in
adc
push
in
jbe
sub
mov
pop
mov
add
arpl
mov
bound
mov
pop
arpl
cltd
imul
mov
cli
pop
int3
pop
ljmp
cmpsb
sbb
inc
xor
dec
es
jo
jno
ret
xchg
adc
sbbl
pop
movsb
push
dec
loop
mov
inc
int
xor
pop
mov
andl
jbe
inc
repnz
mov
loop
and
clc
xor
sub
out
in
fwait
lahf
rsqrtps
jp
les
addr16
xlat
mov
repz
imul
and
aam
mov
xchg
insl
outsl
mov
lea
adc
cmc
rclb
xchg
mov
mov
es
mov
rcrl
xchg
js
pop
inc
ret
and
and
or
insb
mov
sbb
call
imul
cmp
out
ret
and
lods
outsb
rolb
sub
pop
push
jg
cmp
sarb
mov
jne
push
std
mov
mov
faddl
loop
adc
pushf
xchg
and
add
aad
lret
sti
sahf
test
aas
or
push
cmp
pop
xchg
cmp
sub
pop
cltd
and
fwait
in
pop
mov
aas
arpl
adc
and
xchg
hlt
cmpl
movsl
es
incb
cld
clc
clc
jecxz
pop
fdecstp
scas
call
pop
jg
dec
jp
push
popa
dec
fwait
mov
mov
mov
daa
xchg
dec
scas
loop
adc
dec
cmp
insb
out
sub
ficompl
dec
mov
sbb
sbb
mov
lret
jmp
ret
lods
xchg
pop
test
loope
shrl
je
lret
push
rcrb
cmc
cltd
xor
divl
cmpsl
mov
xor
jp
cwtl
movsb
cmp
jb
aad
lods
ljmp
mov
fidivs
je
pop
adc
int3
lahf
shrb
repz
sti
dec
sbb
dec
push
lret
mov
push
test
std
lods
imul
sbb
data16
or
push
les
clc
ljmp
fcomps
std
adc
aam
out
mov
in
mov
mov
push
xor
pop
shrl
jbe
mov
ror
cmp
gs
stos
ljmp
arpl
xor
lret
outsb
stc
adcb
in
inc
out
push
jb
mov
xchg
in
cmp
jns
pushf
cmp
cld
xchg
cld
out
cmp
push
movsb
call
jmp
mov
and
dec
jae
dec
insb
xor
ror
or
dec
jmp
or
test
pop
xor
sbb
xchg
sbb
gs
sub
movsl
out
add
call
mov
mov
popf
jp
jle
ljmp
jns
pop
inc
cmpsb
sbb
cmp
lods
lds
in
dec
cmp
leave
into
dec
mov
xchg
adc
jne
cmp
imul
sub
adc
cmp
jp
mov
out
faddl
test
enter
das
and
pop
xchg
mov
add
sbb
cmp
out
cs
sub
and
andb
xchg
sbb
subb
test
sub
loopne
mov
rcrl
jnp
mov
sub
pushf
adc
sub
insb
mov
pusha
pop
imul
mov
sbb
inc
lret
mov
inc
imul
jbe
addl
jle
or
add
sbb
push
repnz
in
xchg
push
jg
stos
mov
sub
push
xchg
fisubrl
fisubs
xchg
lahf
push
loop
ret
ljmp
ffree
icebp
nop
or
pop
adc
pop
ret
fistps
lock
inc
adc
xchg
aaa
mov
and
pushf
or
mov
aas
sbb
lahf
jl
cwtl
aam
xchg
cli
mov
fistpl
subb
inc
call
jmp
jecxz
cli
clc
or
das
push
inc
into
daa
rorl
das
mov
ffree
add
xor
addb
adc
cmp
loop
add
pop
ljmp
cmp
sub
dec
pop
mov
es
mov
inc
lock
cld
sbb
dec
lahf
popa
les
push
jo
xchg
cmp
cld
dec
testb
sarl
sahf
xchg
rorb
jge
sbb
fcmove
inc
cmpsl
jle
shrl
push
or
or
dec
in
dec
test
mov
lea
addr16
int
inc
dec
repz
mov
cwtl
fadd
testb
jo
inc
cld
dec
fidivrs
dec
jns
test
stc
jnp
or
sbb
xor
mov
xor
icebp
aad
adc
mov
xchg
cmp
and
enter
or
jg
fldenv
cli
jge
cmp
iret
xor
pushf
popf
xor
fdivrs
lock
xchg
jp
push
mov
add
cwtl
inc
call
inc
adc
or
imul
add
aad
notl
dec
push
daa
pushf
pushf
loope
ficoml
sbb
stos
ds
out
dec
cmpb
scas
out
fidivl
sub
ficompl
int
js
ss
leave
rcll
mov
mov
fcmovnbe
flds
sahf
or
push
test
stc
mov
mov
pop
dec
jns
mov
mov
dec
mov
push
loope
sarb
lock
daa
adc
mov
dec
jo
sar
aam
sbb
or
fistpl
inc
dec
or
sub
aaa
mov
lcall
les
fs
pause
fsub
jae
hlt
lds
pop
faddl
xor
mov
sub
mov
lahf
in
ret
imul
sbb
stos
sbb
adc
push
pop
and
mov
stos
dec
addr16
dec
hlt
pop
mov
push
jb
lods
fidivs
fldcw
dec
fdivrs
or
jb
lds
pop
inc
leave
xor
xchg
xchg
lea
mov
sbb
inc
pop
popf
mov
push
aad
xor
shrl
into
dec
orl
inc
lret
sahf
adc
aas
imul
imul
out
jecxz
out
outsl
mov
cltd
mov
mov
mov
xor
mov
imul
sbb
iret
adc
pop
test
mov
pushf
ret
cmp
scas
iret
fimull
and
cmp
enter
jge
lret
sbbl
push
pop
addr16
mov
arpl
enter
jnp
sahf
scas
cs
ret
lea
jmp
pop
movsb
fisubrs
adc
fnstcw
add
xor
or
bound
lea
pop
hlt
dec
pop
push
add
and
out
mov
repz
insl
mov
out
inc
mov
push
shlb
mov
outsb
out
in
hlt
jmp
xchg
sbb
orb
out
nop
aas
push
shll
fst
dec
cmp
gs
inc
jmp
push
and
dec
xchg
test
push
jne
cld
dec
scas
pushf
pop
or
ss
mov
or
fcompl
stos
out
sbb
mov
clc
fabs
std
cmp
mov
dec
int3
je
cmp
sub
dec
scas
icebp
adc
lock
push
xchg
enter
xchg
mov
jle
lcall
into
fcomps
outsb
add
xor
lcall
lods
sbb
notb
out
dec
mov
fmull
push
mov
sub
sbbl
jbe
popa
ficomps
mulb
and
cmp
lcall
pop
mov
rcll
mov
jae
jno
sbb
xor
mov
data16
sub
lods
cmp
mov
mov
mov
lea
jmp
cmp
mov
outsl
mov
out
daa
inc
divl
iret
mov
sarl
add
insl
jns
adc
or
cmp
hlt
dec
mov
mov
in
or
faddp
add
movsl
loop
jae
ljmp
orl
mov
pop
insl
inc
fwait
and
inc
cmp
xchg
xchg
fstps
pop
jecxz
data16
xorb
insb
inc
ret
push
ds
dec
mov
lcall
sub
in
jle
pop
adc
not
je
sub
lock
movups
loope
nop
insl
jmp
mov
jge
jmp
mov
jge
call
rorl
insl
cmp
decl
xorb
xor
in
popa
mov
fstps
mov
jecxz
out
xchg
call
out
mov
add
push
nop
xorl
jecxz
push
xchg
sbb
push
sub
mov
loop
mov
sub
xchg
push
jnp
insl
mov
add
sub
ret
xchg
in
loope
fcmovnu
sub
lret
mov
push
push
jge
pushf
cmpsb
js
sbb
inc
push
and
sbb
push
pushl
stos
in
jbe
sar
loopne
into
pushf
and
pop
push
inc
cmp
inc
xchg
mov
out
lret
sahf
into
dec
movsl
push
sub
mov
pop
sbb
xor
adc
mov
fwait
jnp
lock
pushf
subl
sub
jns
xor
and
jns
sarb
mov
push
ret
and
lods
mov
or
mov
xor
scas
adc
in
pop
pop
ficompl
xor
shrl
ficoml
aad
push
fiadds
sbb
lds
test
or
loop
sub
jl
fcmovbe
push
ret
pushf
mov
xlat
test
lods
cmp
popf
sub
stos
mov
xor
pop
push
mov
lahf
push
xchg
xchg
es
mov
mov
fldt
push
insb
jle
std
popa
fwait
push
lcall
add
cwtl
iret
xor
in
out
inc
pop
sahf
movsl
daa
pop
loope
add
je
cmpsl
cmc
outsl
mov
lahf
cmp
addr16
mov
scas
push
add
addb
inc
xor
test
fistpl
aam
js
stos
mov
sti
add
push
daa
jl
xor
push
sti
int
xor
sbb
mov
in
pop
fnsave
mov
rorb
aaa
pop
mov
xor
jns
mov
pushf
sub
xchg
add
lret
inc
inc
mov
iret
or
mov
ret
dec
test
test
shll
push
ja
inc
mov
movsw
popf
jo
stc
cs
fwait
fwait
in
xchg
data16
nop
lret
cmp
sahf
addr16
jo
mov
ret
jae
int
sub
jns
out
pop
loopne
sahf
mov
loop
enter
out
lret
movsb
clc
xchg
and
push
mov
sbb
int
mov
stc
adc
clc
ss
mov
int
pop
inc
xlat
xchg
ljmp
iret
sub
pushl
ds
push
test
jl
add
pushf
pop
rol
loopne
stos
dec
repnz
sti
stos
std
imul
stc
jge
jle
lods
push
mov
mov
xchg
repz
mov
sbb
mov
daa
aas
cmpsb
ds
pop
iret
cmp
mov
ret
pop
es
push
or
pop
mov
test
mov
pop
adc
into
outsl
pop
ret
xchg
push
add
or
add
jg
jp
mov
jp
jb
mov
insb
jmp
mov
pop
leave
sub
add
mov
sbb
sub
leave
inc
mov
clc
and
jp
stos
push
push
pop
shl
push
mov
xchg
and
rorb
push
xchg
dec
xchg
push
aas
repz
inc
shll
data16
icebp
xor
loop
and
in
cmp
fdivrp
jbe
mov
and
in
jg
lret
sbb
xlat
sub
movsl
jle
jp
sub
fiadds
cltd
mov
cmp
adc
push
insb
push
imul
movsl
sahf
and
faddp
arpl
inc
push
sbb
xor
or
aas
outsb
movsl
gs
rcr
xor
xor
push
iret
shl
jo
push
clc
mov
and
pop
cwtl
cwtl
cmpsl
lahf
jnp
adc
out
or
out
inc
cmp
adc
mov
jns
test
xchg
mov
xchg
inc
sub
add
xlat
out
inc
xlat
dec
xor
call
mov
inc
lock
cmpsl
jmp
call
xchg
aam
out
dec
movsb
imul
add
movsl
ljmp
pop
cmp
sub
es
mov
dec
xorb
in
idiv
iret
dec
push
push
cmp
sbb
out
xchg
inc
push
mov
jp
jg
add
jmp
sub
sub
sbb
dec
ret
mov
push
dec
xlat
mov
scas
jge
mov
jg
and
lret
cmp
lods
rcrb
jg
sbb
jbe
push
mov
jae
xchg
lods
xchg
sti
sar
push
mov
je
lcall
pop
and
movsl
lret
add
cmp
loopne
scas
push
movsb
scas
es
sub
das
outsl
loopne
lcall
inc
xor
insb
mov
cwtl
adc
addr16
mov
dec
and
jecxz
xorb
and
lea
push
nop
mul
decb
jge
test
test
adcb
add
lods
mov
sbb
adc
fildll
mov
push
cmp
repz
mov
xchg
out
stos
mov
dec
outsb
sub
mov
je
cltd
cmp
lds
xchg
fsubr
popa
xor
cmp
rcrb
or
jns
push
movl
dec
dec
cmp
mov
cmp
and
mov
dec
mov
xchg
rclb
cltd
cmp
xchg
sub
jbe
int3
push
hlt
mov
jl
push
mov
les
adc
mov
iret
push
xchg
pop
dec
push
fimull
lods
and
insb
mov
test
jl
sbb
push
jecxz
cmpsl
test
flds
hlt
push
dec
ret
xchg
lret
sbb
mov
jb
lahf
sub
int3
clc
mov
adc
in
je
sub
push
cmp
cwtl
pop
mov
das
insb
push
and
into
mov
lea
repnz
mov
jge
sbbl
ret
scas
mov
inc
insb
mov
xadd
adc
xchg
jae
lods
jle
adcl
add
pop
fidivl
movsb
out
push
stc
mov
repz
sub
loopne
dec
push
push
xor
xchg
adc
test
int
adc
mov
int
lods
repz
xchg
push
cltd
daa
pop
jno
fdivr
adc
roll
jae
iret
xor
jp
insl
pop
sub
rorl
ror
clc
push
xor
movsb
fcoml
sub
mov
out
cmp
dec
loope
cmp
nop
xor
gs
comiss
sbb
adc
scas
ret
sbb
inc
jle
add
test
aad
cmp
ss
and
call
xchg
sbb
ret
dec
sti
sarb
or
cmp
jl
gs
add
pop
dec
loop
xchg
cmp
jmp
pop
fiaddl
sub
or
xor
mov
cmp
dec
rclb
cltd
sbb
push
test
sti
pusha
dec
push
pusha
push
dec
push
in
int3
insb
cld
mov
fwait
sbb
pushf
arpl
jle
mov
mov
paddw
pusha
pop
shlb
jmp
push
push
push
mov
leave
push
out
jns
cmpsb
pop
xor
cmp
fs
lcall
mov
sub
insb
mov
mov
mov
mov
and
jmp
lods
jno
mov
push
xor
jp
aaa
cmp
sbb
test
test
or
add
and
jo
dec
inc
jmp
dec
pop
mov
enter
or
stc
add
xchg
les
cld
dec
dec
sub
call
rorb
push
insb
push
or
iret
jg
jb
sti
xchg
xchg
or
xlat
sbb
mov
adc
daa
inc
rolb
stc
fs
xor
push
shrd
loop
sbb
popf
jno
adc
inc
lods
mov
outsl
xchg
ficoml
inc
and
ds
dec
out
scas
mov
jmp
xchg
add
xchg
mov
adc
pop
clc
outsl
stc
in
xor
scas
cmpsl
aad
dec
scas
lret
mov
fneni(8087
loope
mov
xchg
lock
shl
sbb
cwtl
shll
cmp
rcr
rcl
cmp
inc
inc
loop
mov
push
arpl
int3
dec
cmpsb
lods
in
fidivrl
enter
int3
or
leave
getsec
sbb
out
mov
int
data16
cld
inc
jmp
fnsave
pop
and
sbb
push
mov
outsb
pop
js
jecxz
sti
dec
mov
xchg
mul
movsl
push
add
shl
jmp
int
lods
call
fdivl
xchg
push
pop
and
lods
hlt
mov
pop
jmp
leave
push
sbb
decl
stos
jp
fisubrs
adc
push
cmp
ds
inc
lods
adc
out
outsl
lods
jns
jno
dec
ljmp
pop
outsb
push
clc
fnstcw
scas
xor
push
mov
jns
insl
test
pop
or
adc
pusha
xchg
icebp
fwait
sub
pop
pop
outsl
aad
nop
cmc
pop
gs
out
add
fisttpl
sub
xchg
cmpsl
cmp
scas
inc
pop
xor
mov
pushfw
cmp
call
jp
mov
cs
jnp
push
shlb
inc
xor
mov
mov
xchg
jno
stos
mov
jecxz
in
into
out
ja
js
dec
pop
mov
add
outsl
inc
outsb
xor
mov
icebp
sbb
push
mov
push
scas
push
addl
sub
inc
dec
jb
add
and
int3
nop
sar
rorb
xor
xor
outsl
hlt
aam
std
mov
sbb
and
xchg
cmpsb
out
xor
fucomp
sbb
arpl
or
sbb
movsl
and
mov
jge
imul
lret
sbb
push
rcl
push
pusha
cli
inc
test
pop
jp
xlat
testl
sbb
mov
inc
xchg
sahf
out
adc
jns
mov
push
pop
inc
out
aam
mov
stos
into
mov
mov
loop
pop
ja
fsubrl
int3
dec
adc
dec
mov
mov
punpckhdq
stos
loop
mov
ret
xchg
flds
in
aas
insb
jo
vmwrite
mov
ja
sub
mov
jne
add
dec
fwait
adc
or
das
lods
rcrb
sti
add
rol
pop
mov
stc
mov
mov
sub
push
xor
mov
sub
into
data16
jmp
xchg
cmp
out
call
scas
shrl
mov
mov
aam
mov
into
sub
mov
mov
push
xchg
fs
int3
in
adc
sub
call
xchg
pop
into
mov
sub
aaa
or
aam
jmp
push
or
jb
or
jae,pn
inc
into
add
stos
out
push
sub
add
mov
out
mov
sub
jmp
push
fwait
int
add
mov
inc
outsl
iret
inc
ret
mov
cli
subb
out
xor
adc
ret
xchg
mov
fisubl
sbb
subb
dec
cmpsl
cmp
mov
pop
repnz
jns
mov
xlat
orl
pop
aas
outsl
and
std
or
jo
xor
adc
pop
call
scas
movsl
loopne
out
sub
popa
ficoml
xor
into
dec
jb
xchg
xchg
pop
lahf
lock
cmp
mov
jb
mov
or
sti
inc
jle
mov
arpl
jp
mov
push
je
pop
or
and
push
fwait
jae
lcall
imull
fistl
test
sub
cmp
cltd
packssdw
sti
lret
and
shrl
outsl
mov
xor
xor
inc
mov
jmp
mov
pop
in
add
iret
xchg
les
xor
pop
mov
repz
jb
int3
cmp
int3
inc
ds
jbe
fs
js
cltd
add
mov
dec
daa
push
push
lret
jno
pop
mov
xchg
and
dec
add
xlat
jb
cld
xchg
mov
adc
ljmp
aas
rcll
lcall
or
in
es
push
or
jl
sub
adc
pop
dec
pushl
iret
js
push
add
loope
dec
add
mov
ret
xchg
arpl
rorl
rcl
mov
sub
pop
sub
pusha
arpl
pop
imul
add
lods
fmuls
add
xchg
fidivrl
es
mov
mov
cmp
dec
xor
or
sub
jecxz
aas
lcall
xchg
cs
aas
enter
xchg
dec
fiadds
push
lods
dec
fnstcw
ss
mov
popf
int
popf
mov
cmp
inc
pop
xchg
sub
mov
in
sarl
dec
imul
lods
lret
mov
stos
or
push
add
je
mov
and
xor
nop
rorl
sub
out
xchg
les
cwtl
cmp
cmpsb
movsb
push
cmpsl
aas
mov
rcrb
cmpsb
or
lods
dec
jno
negl
fisubrl
cltd
pop
sub
lea
fs
bound
ret
adc
xchg
xchg
in
sbb
inc
stos
add
pop
aaa
mov
fstpt
sbb
lods
mov
xor
test
mov
sbb
test
pop
sub
fadd
xchg
test
cmp
xchg
aad
push
out
dec
mov
xchg
cmp
das
pop
jmp
aad
or
jmp
cmp
add
pop
cld
fwait
lahf
jle
into
xor
test
repz
jo
jg
xchg
pusha
orb
xlat
mov
test
out
xchg
je
shlb
cmp
test
fstl
cmc
scas
dec
lods
add
sub
cmpsb
mov
dec
push
xchg
mov
and
inc
loopne
repz
loop
mov
out
in
push
icebp
popf
sar
nop
loope
movsl
sbb
leave
test
test
push
repnz
pop
fsubs
add
mov
mov
push
inc
test
lods
add
adc
pop
mov
shll
lock
sbb
and
imul
sub
jne
lock
mov
inc
inc
mov
fnstsw
cmp
inc
pushl
cli
aad
jg
pop
ds
shl
dec
incb
xchg
xlat
fsubrs
cmp
add
or
pushf
into
out
push
xor
inc
fcmove
lock
aam
sti
iret
leave
adc
xchg
dec
add
xlat
repz
pushf
shll
cmp
nop
dec
stos
fadds
jns
arpl
and
fs
lret
sub
jl
lcall
cmpsb
add
fcompl
add
dec
dec
mov
push
xor
xor
cs
daa
loop
daa
add
xchg
arpl
mov
lds
imul
sbb
mov
cli
stc
std
xchg
leave
data16
inc
aad
mov
mov
mov
rcrl
or
jnp
test
repnz
leave
sbb
sub
mov
enter
bound
xor
divb
xchg
pop
inc
mov
xor
push
push
dec
leave
sahf
xor
je
push
xchg
mov
arpl
mov
sub
dec
dec
fimull
sbb
sub
cmp
aaa
jo
mov
sbb
shll
ds
int
push
adc
adc
iret
inc
push
sub
gs
cmp
push
push
mov
pop
shl
push
imul
adc
mov
sahf
insb
ficomps
xor
inc
push
cmp
popa
inc
mov
test
add
fwait
hlt
jo
add
lock
imul
inc
in
cmp
bound
test
arpl
mov
into
adc
in
das
into
push
pushf
movsb
jl
jnp
int3
pop
insl
mov
or
pop
stc
inc
aam
push
movb
loopne
jo
lds
gs
cmp
ss
push
call
aam
mov
cltd
jecxz
call
imul
imulb
pop
stc
gs
add
ret
inc
jle
adc
js
into
or
enter
shlb
lods
test
int3
inc
dec
sub
lods
add
push
mov
pop
push
push
cwtl
sub
test
test
push
mov
push
xchg
mov
or
pop
push
inc
mov
out
mov
std
movsl
push
mov
popf
xchg
push
mov
or
mov
adc
xchg
xor
jl
cmp
push
xor
jns
std
mov
negl
pop
push
cwtl
mov
sub
mov
inc
adc
out
jb
pop
jo
sub
idivl
stos
rolb
add
ja
lock
adc
mov
mov
ja
dec
mov
sub
in
jle
icebp
notb
outsl
or
inc
dec
xor
pop
imul
dec
pop
loop
sbb
int
or
dec
fdivrs
or
leave
shll
ret
push
xorb
lahf
popfw
pop
mov
push
sbb
dec
insb
dec
addr16
mov
xchg
dec
imul
pusha
jbe
inc
nop
test
cli
int
fdivr
adc
jnp
or
mov
push
or
sbbb
in
mov
inc
insl
sbb
and
stos
cmp
inc
mov
push
daa
aam
lret
pop
roll
int
mov
fwait
pop
add
sub
lods
jns
adc
das
sub
add
mov
frstor
scas
icebp
lods
mov
pop
jns
sbb
ret
jecxz
and
sub
inc
push
push
xor
or
rcl
inc
addr16
or
xorb
imul
dec
das
dec
jecxz
imul
mov
or
and
cmp
dec
lds
push
dec
shlb
jne
dec
or
mov
mov
test
aad
push
ss
lock
jo
or
jae
xlat
fidivl
dec
add
and
cmp
mov
je
xor
aam
data16
inc
add
mov
xchg
pop
daa
rorb
popa
sub
in
cmp
stos
and
mov
repz
sub
cmpsl
cmp
scas
arpl
into
jae
ja
or
dec
imul
cmp
push
lods
shrl
gs
add
xchg
mov
cmp
fs
add
hlt
stos
push
sar
mov
xchg
stos
mov
mov
stc
mov
lods
hlt
pop
xor
shl
lods
dec
aas
adc
lea
fs
mov
icebp
int
je
mov
aaa
xor
aam
sahf
xor
popa
pop
xor
leave
lods
jno
rcll
push
jno
fimuls
jl
sub
popa
jg
insb
outsl
xchg
jp
out
adc
mov
push
pop
mov
pop
in
mov
mov
enter
xor
sub
jns
or
jge
lods
rorb
rol
cmp
cmp
jne
cmp
jb
or
adc
adc
rcrl
inc
push
pop
in
jle
ret
fs
push
pop
stc
pop
or
out
mov
sti
jns
and
jno
xchg
push
out
adc
mov
imul
ret
lahf
add
call
mov
mov
sbb
and
enter
daa
aam
inc
pop
sub
in
mov
idivl
sbb
inc
clc
jle
cli
pusha
inc
imul
mov
repnz
stos
hlt
in
xor
xchg
inc
xor
enter
dec
inc
add
call
xlat
mov
dec
arpl
cltd
lds
push
clc
sub
dec
xor
iret
inc
sbb
cmp
add
sub
movsl
test
int
mov
shll
dec
mov
dec
insb
push
push
dec
lret
outsb
dec
xchg
jecxz
push
lods
lds
loop
adc
push
xchg
dec
stos
mov
jne
ss
inc
ljmp
cmpsb
mov
mov
popf
imul
lea
jnp
lcall
dec
and
mov
ja
in
and
jp
sbb
daa
das
mov
jmp
ljmp
sub
add
fwait
cmp
dec
out
mov
cwtl
shlb
and
dec
inc
pop
mov
cmp
and
loop
aad
sbb
adc
xor
in
or
fwait
jne
movsb
rcl
cmp
incl
lret
adc
and
mov
pop
mov
hlt
xchg
mov
xchg
or
cmpsb
lods
mov
xchg
xor
cld
rolb
pop
cmp
jns
sbb
jo
pop
fstl
pop
faddl
sahf
sbbb
push
mov
lods
xchg
xor
sub
addl
aas
jo
sbb
sbb
shlb
sub
call
mov
iret
in
sbb
leave
cmpb
mov
je
mov
fstpt
jmp
and
pushf
or
movsl
mov
lret
call
mov
dec
mov
aam
lods
mov
dec
pop
test
sbb
mov
rcll
xor
shrl
outsl
jno
push
daa
jns
cmp
mov
ret
inc
or
inc
iret
fmull
out
lret
dec
sub
sub
lds
ret
int
and
mov
sbb
les
xor
cmp
aaa
sub
sub
shlb
ficoms
inc
ror
xchg
mov
out
pop
popa
daa
lea
pop
ja
out
push
imul
cmc
pop
xor
daa
inc
enter
fsubs
cmpsl
jbe
enter
xor
dec
add
mov
pop
jmp
mov
jp
leave
dec
jbe
or
bnd
adc
adc
push
stos
gs
push
add
add
jb
fsts
mov
das
cli
out
sbb
ja
sub
shll
jo
mov
pop
pop
lods
xchg
xor
popa
mov
nop
push
and
test
mov
cmovs
dec
ds
dec
dec
cmc
xor
or
adc
ds
xchg
dec
pop
lods
jne
js
mov
add
icebp
pop
gs
xor
in
xlat
cmp
jg
icebp
in
dec
or
pop
jp
cmp
and
mov
outsb
outsw
push
add
inc
sub
rolb
jecxz
js
icebp
pop
xchg
dec
xchg
lods
push
inc
jo
lret
popa
jno
das
inc
fidivrs
push
xor
enter
sub
ret
adc
jmp
negb
vpmuludq
lea
mov
pop
icebp
leave
dec
test
mov
mov
sub
inc
scas
add
push
pop
rorb
test
cmpsl
pushf
loopne
cmpsb
sbb
mov
data16
mov
iret
icebp
sbb
adc
sahf
push
adc
jne
cs
fcmovnb
repnz
lret
ficoms
in
mov
push
sarb
jle
pop
rclb
out
mov
scas
jno,pn
in
mov
cltd
stc
push
leave
inc
pusha
pop
sub
pushf
das
mov
jne
arpl
cmpsb
pop
popa
dec
fsubrp
rcrl
lea
sub
int
jl
out
pushf
cli
xlat
dec
cmp
enter
pop
movsb
sbb
jnp
inc
dec
pop
ror
mov
pop
popa
js
dec
pop
out
ss
daa
sahf
adc
cmpsb
insb
mov
or
push
push
push
aaa
inc
adc
cld
ds
in
mov
popa
ljmp
and
fwait
std
and
mov
pop
xor
sarl
das
jle
push
fnstsw
mov
mov
ret
inc
fdivrs
inc
and
cmp
cmpsl
mov
add
int3
imul
add
inc
fwait
jg
jb
cli
pop
mov
mov
push
pop
fdiv
jecxz
and
call
dec
xchg
pop
push
test
icebp
pop
pop
aaa
rcrl
outsb
daa
mov
in
jo
aad
fimull
pop
inc
and
test
mov
pop
loope
or
iret
shl
fwait
xor
sub
inc
outsl
int3
divl
sbb
jbe
pop
pop
adc
cltd
das
cld
in
dec
imul
cmpsb
lds
pop
jg
mov
push
inc
xor
icebp
repnz
xor
movsb
and
push
or
mov
nop
jmp
outsl
out
cmp
dec
sub
jmp
cltd
adc
cmp
mov
push
push
into
in
fnstenv
test
js
int3
loopne
bound
and
sbb
jecxz
jl
sbb
xchg
pusha
push
pop
pop
or
sbb
cmp
mov
int
sbbb
out
test
pushf
dec
cli
aad
xchg
out
push
imul
jle
cs
sub
xchg
sbb
push
add
pop
cmp
inc
mov
cwtl
scas
push
sub
push
int3
aaa
addr16
fdivrs
dec
sub
add
cltd
mov
pushf
or
mov
inc
push
mov
aad
mov
fiaddl
cmp
mov
sbb
mov
pop
push
add
mov
aam
sbb
fistpl
loop
adc
adc
popa
cmpsb
xor
mov
call
lahf
rcr
and
movsl
sub
subb
push
in
jg
xchg
std
stos
rcrb
out
or
cmpsl
aad
pop
out
push
rep
mov
push
adc
mov
pusha
mov
jle
pop
dec
jnp
mov
dec
not
shr
sbb
daa
and
das
sbb
xchg
in
repz
pop
movsl
add
fidivl
dec
adc
mov
jae,pt
in
jo
in
out
fsub
mov
sub
ss
mov
add
sbb
mov
movswl
add
push
loop
scas
dec
or
or
or
hlt
mov
test
data16
and
and
or
sub
addl
mov
xlat
push
into
push
int
sbb
xchg
mov
into
adc
jl
jl
icebp
mov
stc
mov
cmc
or
shlb
and
jg
fs
pusha
insb
sub
push
or
push
bnd
out
out
fwait
mov
sbb
out
cmc
xchg
adc
mov
pop
xchg
push
dec
cltd
adc
add
andl
out
pop
out
ss
xor
lods
mov
xlat
sbb
and
loopne
dec
cmp
aam
xor
adc
push
cltd
in
pusha
fmul
in
and
add
stos
cmpsl
hlt
movsb
mov
and
sbb
add
jb
xchg
ret
xor
bound
imull
cmpsl
xchg
lods
cwtl
sbb
pop
adc
sbb
sbb
clc
and
ja
pop
jle
dec
push
fsubs
aam
or
add
sub
push
mov
jno
js
mov
int
daa
cmpsl
test
xchg
iret
cmp
dec
addr16
pop
push
jge
hlt
add
nop
sub
xor
inc
stos
js
or
dec
in
int
push
loopne
roll
sti
dec
sarb
dec
popa
fst
hlt
bound
sub
cmp
or
int3
ja
pop
lret
ljmp
and
xchg
inc
lods
add
xor
xor
mov
push
enter
scas
stos
aaa
pop
jg
pop
stos
jle
orb
popa
add
jo
das
xchg
sbbl
mov
xor
sbb
ja
adc
mov
push
mov
xchg
test
aad
int3
frstor
aam
add
xchg
daa
sbb
pop
mov
sbb
movsb
jl
xchg
andl
mov
jmp
mov
inc
pusha
push
cwtl
xchg
decl
jmp
in
shll
test
sbb
lahf
dec
lods
mov
xchg
push
imul
in
out
pop
imul
cltd
cmpsl
sub
scas
mov
inc
pusha
cld
ljmp
js
popl
sar
test
gs
pop
and
add
mov
rorb
les
jb
lods
mov
and
fisttpll
cmpb
outsl
mov
fmulp
jp
jmp
push
cld
mov
sub
and
stc
fisttpll
sbb
icebp
jge
and
clc
jnp
in
insl
andb
cmp
outsb
fsubl
xor
mov
xor
mov
push
aaa
cmp
jl
fstp
pop
push
in
pop
sub
popl
jns
xor
in
iret
je
arpl
add
xchg
mov
sbb
cmp
daa
mov
fwait
cmpsl
mov
lret
aas
pop
lahf
mov
repnz
or
movsl
adc
sbb
mov
cmp
js
insl
mov
dec
pop
loope
jg
leave
jo
sub
fsubl
jns
daa
mov
push
mov
push
inc
mov
and
test
iret
push
fbld
cmpsl
lods
int
int
stc
cmpsw
jl
sub
cli
jmp
int3
in
xchg
mov
dec
je
cmp
push
mov
or
xor
dec
out
inc
or
test
sbb
xor
nop
divl
xor
xchg
push
insl
aas
lds
push
adc
push
inc
idivb
push
inc
adc
jno
push
sub
push
bound
push
inc
mov
push
xchg
push
hlt
mov
jecxz
mov
cmc
mov
xlat
dec
aas
dec
lret
adc
mov
jb
fcomps
testl
mov
incl
lcall
fnsave
mov
mov
cmp
mov
insb
cmp
stc
ja
clc
sbb
mov
pop
sbb
outsl
pop
mov
popf
inc
ss
ja
or
cmp
dec
inc
arpl
nop
je
push
addb
pop
adc
stc
nop
cmpsb
sub
and
jg
cmp
cmp
mov
push
xor
andl
xchg
cmp
mov
mov
in
xchg
mov
adc
sub
popf
rcrb
call
push
lods
cwtl
sbb
mov
inc
jnp
cmp
mov
idiv
mov
mov
jno
and
out
test
movsl
bound
movsl
pop
outsl
adc
mov
inc
jb
mov
fistps
dec
jg
mov
inc
aam
xor
mov
add
sub
or
std
xchg
cmc
cmp
dec
and
mov
int3
fwait
push
pop
xchg
or
mov
out
lock
sbb
fstpt
mov
outsl
push
fisttpll
ficompl
out
pop
mov
ljmp
je
jecxz
ss
out
shlb
pop
xlat
sub
lock
jl
push
inc
cs
xchg
jge
fstpl
das
mov
push
dec
mov
xlat
push
stc
pop
stos
into
push
lds
shlb
inc
cmpsl
jno
pop
mov
cmc
andl
xorl
cmpsl
mov
jae
sbb
aas
add
jno
cli
mov
fildll
bnd
pop
pop
cs
lods
in
pop
mov
mov
pop
mov
mov
movsl
inc
xchg
push
mov
pop
push
mov
icebp
aam
inc
lahf
add
add
pop
jmp
aam
pop
notl
mov
jecxz
sub
adc
shrl
dec
inc
nop
xchg
arpl
out
inc
jns
push
mov
addr16
mov
pop
ljmp
and
xor
xchg
jl
push
enter
inc
in
push
mov
shll
shr
int3
xor
pop
sub
sub
jl
mov
mov
out
sbb
mov
call
pusha
or
ja
jp
cmp
pushf
fcoms
pushf
xchg
push
stos
imul
sbb
xor
outsl
push
sub
sbb
jo
std
jbe
imul
int
adc
nop
add
mov
ja
sbb
int
adc
and
cmp
push
lret
jne
pop
cli
daa
outsb
mov
js
dec
jle
out
cltd
cmp
ljmp
in
pop
stos
arpl
push
test
test
sub
js
push
mov
sti
sbb
xchg
add
jae
sbb
test
adcl
fisubrl
xor
jl
loop
out
jne
cmp
sbb
insb
adc
adc
pop
lcall
jne
jo
dec
mov
popa
call
testl
add
ret
cs
or
das
lahf
lods
jp
mov
into
or
jl
push
dec
in
xchg
push
out
imul
gs
mov
add
inc
int3
jecxz
xchg
xor
jno
lret
movsl
xlat
dec
dec
into
pop
repz
push
and
dec
xlat
inc
sbbl
jne
pop
xchg
ds
les
pop
mov
popf
aam
sbbb
cmp
dec
sub
std
nop
sarl
sub
repz
icebp
pop
lods
outsb
ficomps
lret
mov
and
jne
push
add
cmpsl
incb
sbb
hlt
ficoms
fimuls
arpl
test
inc
pusha
push
repnz
sub
push
out
imul
bound
int
pop
push
loop
imul
push
int
imul
mov
jge
push
lahf
sbb
enter
and
mov
icebp
mov
loope
cmpsb
push
inc
cmp
movsb
cmp
pop
push
icebp
ja
arpl
inc
addr16
int3
rcrl
mov
lcall
sbb
sbb
adc
add
ds
mov
push
dec
out
pop
lret
setns
inc
fucomip
cmp
dec
scas
ss
sbb
sbb
dec
mov
adc
stos
and
rorb
dec
or
outsb
es
mov
mov
mov
inc
stc
clc
repz
lret
mov
mov
pop
dec
popf
jmp
cmp
sub
shrl
shr
in
cli
or
jge
jle
mov
nop
test
aas
lods
mov
and
sub
arpl
std
pop
fmuls
cmpl
push
in
sahf
cmp
mov
push
fimull
xchg
aaa
mov
rolb
or
fisubl
test
mov
adcb
imul
into
mov
cwtl
test
or
lea
lods
cmc
sbb
sbb
into
stos
mov
inc
xchg
test
pushf
jl
cmpb
sbb
push
cli
sbb
fsts
popa
cltd
pop
scas
test
add
pop
and
push
out
into
pop
jmp
dec
sbb
stc
loope
jmp
popf
out
fcmove
shr
xchg
jns,pt
fs
mov
cmp
pop
lcall
ja
lahf
test
lds
inc
mov
or
loope
fisttpll
popf
cmp
shrd
sub
ss
imul
pop
js
stc
push
data16
loope
int3
sbbb
enter
out
movsl
push
fldt
push
sbb
push
loope
pushf
pop
mov
pop
jno
jp
dec
scas
push
jbe
mov
mov
inc
test
cmp
cmp
js
pop
fcomps
cmp
sbb
mov
test
mov
ja
inc
dec
xchg
push
sub
or
and
mov
jbe
push
pop
cmp
pop
mov
pop
insb
lock
data16
cltd
movsl
movzbl
inc
xorb
pop
or
jmp
popf
aas
out
in
fs
xor
sar
mov
lahf
cltd
rcrb
dec
int
ret
out
cmp
add
fisubrs
mov
mov
sahf
xor
aam
sub
in
mov
push
aas
les
mov
rcrl
adc
and
fiaddl
adc
mov
push
push
shrl
nop
stc
lock
mov
mov
mov
mov
or
fisttpl
mov
jmp
ret
insb
stos
loop
fmuls
data16
stos
xor
mov
adc
popa
cmp
jnp
mov
fldt
or
fisttps
lds
dec
int
int
jmp
mov
mov
cmp
test
xchg
and
lods
ss
ret
pop
les
aad
scas
int
scas
add
cld
mov
gs
bound
bound
cmc
mov
cmp
arpl
test
or
or
mov
cmp
loope
dec
ret
scas
rcr
push
jp
movsl
sub
dec
inc
lods
xchg
in
loope
fs
lods
femms
push
stos
cmp
iret
mov
cmp
or
fs
mov
or
je
pop
sbb
test
addr16
sti
js
pop
les
hlt
mov
and
push
in
idivl
mov
in
or
fdivrl
hlt
push
push
cli
dec
inc
inc
sbb
inc
les
jo
lahf
int
in
mov
stc
jbe
pusha
stos
sti
add
or
mov
dec
mov
and
mov
insb
mov
nop
lahf
jecxz
out
aam
dec
and
pop
mov
push
or
lahf
sbb
iret
dec
push
mov
cmp
testb
arpl
pop
xchg
cwtl
push
sbb
daa
mov
fimuls
xlat
push
xchg
imul
cltd
mov
jb
or
inc
dec
fwait
outsb
rorb
pushf
mov
out
sbb
lahf
push
mov
into
les
sub
push
xor
es
mov
push
sbb
inc
pop
aaa
daa
test
mov
out
fistps
sar
lods
jg
ja
mov
call
dec
fisubs
imul
imul
inc
stos
dec
leave
dec
sti
insl
add
xor
jge
add
mov
pop
setnp
pop
dec
rorb
pop
or
bound
hlt
stos
xor
pop
fadds
mov
mov
inc
xchg
lret
mov
or
daa
mov
dec
mov
mov
in
in
xor
rcr
mov
pop
into
testb
mov
push
mov
cwtl
cmp
sahf
push
lods
jae
cmpsb
cli
faddp
out
clc
ja
or
xor
aaa
lcall
dec
add
mov
inc
mov
xor
sar
sub
lock
jnp
push
fldcw
in
mov
push
push
pop
fwait
je
fistpl
jnp
dec
jo
push
add
xchg
scas
loopne
push
inc
leave
js
test
repz
js
and
inc
ret
cwtl
mov
in
std
cmp
xchg
fisubrl
xchg
push
cmp
xor
or
call
adc
adc
mov
test
lret
repnz
cmp
aaa
insl
addr16
popa
arpl
repnz
push
bound
out
popl
data16
test
ret
push
pop
adc
out
lock
je
mov
arpl
sub
dec
into
pushf
add
pop
nop
in
outsb
mov
lods
es
ja
pop
ja
pop
out
sbb
fistps
fcomps
cltd
mov
add
mov
les
dec
mov
iret
shrl
lock
adc
push
pop
xchg
dec
fisttps
push
xchg
or
or
inc
mov
add
stos
lret
bound
lods
out
orl
xchg
push
outsl
test
sahf
dec
pop
xchg
jns
mov
cmp
shll
fldcw
jle
cli
push
out
fadds
pop
roll
insl
jne
sti
scas
xchg
push
adc
sbb
add
mov
mov
stos
push
and
inc
fwait
sbb
mov
lods
mov
std
xchg
hlt
mov
adc
add
repz
popa
inc
and
arpl
sub
lcall
push
test
mov
sbb
xchg
mov
push
sbb
push
leave
shl
add
xchg
inc
mov
rolb
std
push
in
stos
mov
mov
divb
pushf
push
fcompl
sub
shl
cmpsl
stc
movsb
stos
in
imul
push
mov
push
or
sarl
ss
jnp
xor
push
test
adc
popf
xor
pop
loop
sub
push
outsl
dec
sbb
cmp
in
aam
stos
cmp
nop
cmpl
aaa
sub
inc
pop
cmc
mov
or
test
or
mov
fisttpl
add
fisttpl
add
fisttpl
add
fisttpl
add
fmull
add
fmull
add
fmull
add
or
pop
fmull
add
or
hlt
fmull
add
or
or
fisttpll
add
add
add
fmull
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
fldl
add
add
movsb
fldl
stos
fldl
incl
add
add
filds
add
add
incl
add
add
loope
add
add
add
incl
add
add
out
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
out
add
add
add
incl
add
add
add
add
incl
add
add
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
icebp
inc
add
add
add
incl
add
add
repz
add
add
add
incl
add
add
testb
add
add
incl
add
add
testl
incl
add
add
clc
inc
add
add
add
incl
add
add
stc
inc
add
add
add
incl
add
add
stc
inc
add
add
add
incl
add
add
add
add
incl
add
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
adc
add
add
incl
add
add
dec
add
add
add
and
inc
and
incl
add
add
dec
add
add
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
add
add
ljmp
dec
add
dec
add
add
add
ds
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
dec
dec
add
dec
add
add
add
incl
add
add
pop
dec
add
add
add
push
dec
add
push
dec
add
add
add
add
add
add
add
decl
pop
dec
add
add
dec
add
add
std
dec
add
lcall
outsb
dec
add
add
add
incl
add
add
jno
add
add
add
incl
add
add
jno
add
add
add
incl
add
add
add
add
jmp
jbe
add
jbe
add
add
add
incl
jp
add
jp
add
add
add
call
dec
add
dec
add
dec
jl
add
jl
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
orb
add
add
incl
add
add
orl
gs
gs
xor
cs
insb
add
add
imul
insb
add
add
gs
xor
fs
insb
add
outsl
insb
xor
cs
insb
add
add
jbe
jo
xor
cs
insb
add
add
outsl
insb
gs
jne
xor
cs
insb
add
add
push
gs
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
imul
bound
gs
js
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
inc
gs
outsl
fs
gs
imul
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
je
imul
outsb
fs
insb
outsl
jae
add
add
outsb
fs
gs
inc
imul
imul
inc
imul
imul
je
imul
add
pop
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
outsl
arpl
imul
add
je
arpl
fs
outsb
outsw
inc
jb
insl
inc
jne
fs
add
je
arpl
fs
outsb
outsw
inc
jb
insl
push
jns
gs
outsb
outsw
add
add
fs
gs
jns
gs
imul
fs
jns
gs
imul
cmp
dec
add
dec
add
call
dec
add
add
pushl
dec
add
dec
add
incl
mov
ljmp
mov
mov
mov
incl
add
add
lea
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
xchg
dec
add
add
add
incl
add
add
xchg
dec
add
add
add
incl
add
add
cwtl
dec
add
add
add
decl
cltd
dec
add
incl
add
add
lcall
jle
dec
add
add
add
incl
add
add
dec
add
call
mov
incl
add
inc
add
mov
mov
or
jp
or
add
or
sbb
add
rorb
add
or
mov
fisttpl
add
fisttpl
add
fisttpl
add
fisttpl
add
fmull
add
fmull
add
fmull
add
or
pop
fmull
add
or
hlt
fmull
add
or
or
fisttpll
add
add
add
fmull
add
add
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
push
jb
arpl
fs
jae
add
push
add
popa
insb
inc
jb
add
jae
inc
js
gs
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
popl
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
into
add
popa
jb
push
inc
add
add
jae
insl
gs
push
add
popf
add
imul
jae
dec
gs
outsl
jb
add
nop
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
dec
inc
dec
xor
cs
insb
add
mov
inc
gs
imul
outsl
arpl
add
add
push
jae
push
imul
arpl
add
push
push
inc
push
xor
cs
insb
add
lret
je
push
outsb
ja
outsb
add
gs
push
dec
jne
je
inc
jns
add
dec
jne
je
inc
jns
gs
outsl
push
imul
cmp
dec
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
mov
inc
gs
je
imul
push
jne
bound
inc
aam
stos
sub
xchg
inc
mov
cli
adc
mov
mov
push
in
mov
fisttpl
mov
pop
out
cmp
loopne
lret
sbb
ret
in
mov
mov
aam
push
cmp
sub
daa
xchg
iret
push
jae
push
mov
int
sbb
sbb
andb
or
mov
jae
adcl
and
aaa
int3
pop
mov
dec
sub
sahf
outsb
add
sbb
stos
push
mov
dec
xchg
push
out
jns
lds
stos
clc
fistpll
xor
mov
mov
repnz
mov
push
xor
add
fisubs
jp
data16
repnz
sti
fcompl
push
pop
mov
sbb
imul
or
nop
ds
jnp
sub
icebp
mov
sahf
sbb
int
daa
movsl
inc
clc
movb
mov
in
jp
out
dec
or
loope
movsb
sbb
popf
cmpsl
jecxz
imul
icebp
nop
mov
jae
mov
cmp
inc
jp
push
xor
mov
mov
test
xchg
outsl
sbb
xor
mov
pop
out
aam
aaa
stc
xor
shlb
repnz
lcall
out
mov
sub
aaa
stos
icebp
std
pop
mov
lret
int
jecxz
loope
xchg
call
ret
rcr
andl
sbb
and
xor
push
out
or
push
rcrb
out
xchg
ds
aas
or
push
cmp
imull
pop
scas
or
sahf
jnp
test
mov
imul
sahf
clc
xlat
cmp
xchg
push
out
mov
lods
mov
repnz
dec
lock
cmp
enter
fnstcw
push
push
sub
in
test
dec
out
adc
loopne
std
xchg
or
cmc
ds
shrb
in
test
int3
cmc
pushf
testb
cmp
mov
in
scas
into
enter
jge
push
jecxz
mov
mov
pushl
xchg
jo
add
dec
test
inc
ret
test
xchg
sub
pop
lock
insb
mov
mov
aam
jmp
pushf
mov
imul
or
in
pop
inc
nop
ss
push
cmp
aaa
fdivp
sub
cli
sub
mov
pop
scas
sub
loope
ss
add
cmpsl
clc
xor
arpl
pop
icebp
into
out
add
mov
aas
call
and
pop
inc
cmpsl
push
std
js
out
cwtl
icebp
aad
cmp
or
jg
test
add
rolb
sti
push
aas
sbb
repz
mov
call
sub
inc
mov
inc
bound
xchg
xchg
mov
ficompl
ja
jg
inc
xor
hlt
movsb
dec
movsb
out
mov
push
or
pop
outsl
fs
inc
push
xchg
ljmp
ljmp
pop
pop
cmp
fwait
push
call
mov
cmpsb
cltd
pop
pop
fdivr
cmp
rcrb
imul
push
push
mov
xchg
mov
call
loopne
movsb
sub
pop
jmp
nop
jecxz
rep
inc
cltd
pop
test
mov
fstpl
jle
test
sub
pop
mov
in
mov
cmpsb
push
test
cmp
imul
decl
sbbb
data16
or
sbbb
das
jmp
scas
mov
adc
or
mov
push
xor
bnd
add
popa
mov
adc
es
push
les
xchg
popf
loope
js
push
add
cltd
xchg
out
out
xchg
icebp
pop
inc
adc
pop
mov
add
in
inc
hlt
xor
push
mov
ja
sbb
fcoms
inc
xor
sahf
rorl
mov
imul
push
hlt
adc
popa
adc
add
and
pop
movsb
mov
fisttps
shrb
mov
shll
push
mov
in
mov
shll
cmp
sbb
push
fmuls
scas
sbb
sti
or
add
ja
call
push
cltd
mov
dec
hlt
cld
mov
int3
sub
or
adc
in
popa
fsubs
insb
aam
jg
bound
ret
inc
mov
jae
lahf
jno
dec
push
xchg
cmc
fsubr
aaa
pop
or
inc
cmp
movsb
xchg
xchg
or
out
dec
sti
mov
fdivs
or
pop
stos
jg
ret
mov
out
in
mov
pop
pop
xor
aaa
add
and
fs
jb
adc
scas
scas
cld
push
repnz
mov
mov
pushf
pop
jecxz
inc
pop
dec
push
loopne
arpl
lret
jbe
mov
out
sahf
icebp
out
in
push
dec
mov
mov
mov
lods
jne
adcb
stc
mov
or
mov
ss
xor
dec
mov
jl
xchg
jl
sub
fmuls
leave
into
sub
bound
cmp
popa
xchg
outsl
add
add
sub
subl
cwtl
sarb
sahf
add
mov
pop
xchg
add
jmp
push
and
dec
or
cli
jae
negb
or
sub
cwtl
leave
cmp
or
and
daa
inc
stc
hlt
push
pop
lcall
lcall
jle
pop
out
inc
push
and
in
ret
into
or
idivb
fisubl
je
push
icebp
test
sub
loope
les
push
repnz
jnp
jae
add
movsl
xchg
and
in
add
mov
push
push
lcall
popa
lds
xor
loop
sbb
cmpb
shlb
jl
mov
sub
imul
nop
dec
sub
dec
inc
jmp
out
pop
xchg
jle
xchg
jmp
inc
jge
dec
inc
xor
jb
outsb
test
test
xchg
mov
stc
xchg
add
xchg
std
fistpll
cwtl
cmp
pop
lea
aas
mov
dec
cld
cli
std
pop
dec
and
call
sub
add
sbb
sahf
out
call
test
dec
mov
daa
int3
or
push
js,pn
jo
mov
js
cld
adc
decl
mov
dec
aas
xlat
in
dec
ror
or
lret
or
fcmovnb
xchg
lret
push
cmp
xor
sti
shll
push
test
pop
push
nop
fucomi
loopne
jp
sbb
cmp
push
adc
pop
add
add
into
fisttpll
mov
or
jmp
jmp
sub
pop
int3
ds
stos
or
in
in
sub
fcoml
pop
out
ror
lahf
fidivrs
or
int3
and
sub
mov
or
lock
into
lahf
loop
cli
adc
int3
cmp
cmp
push
and
imul
in
or
jl
orb
xor
ss
out
stos
dec
push
daa
inc
sub
sub
ret
lods
les
ficoml
dec
dec
fwait
and
jle
inc
outsb
mov
pop
stos
js
push
inc
pop
add
out
jb
xchg
pop
and
test
push
push
fcomps
fisubl
cltd
in
xchg
push
push
sbb
xor
push
test
pop
jbe
adc
lods
loopne
mov
dec
dec
stos
jmp
cmp
pop
sbb
inc
sub
cmp
xchg
in
sahf
out
insb
pop
lcall
push
insb
mov
adcb
push
cmp
js
in
dec
mov
jo
and
dec
add
mov
aas
and
mov
and
filds
insb
jae
aad
jne
cwtl
sub
xchg
pop
xor
pop
inc
mov
mov
hlt
pop
inc
imul
add
ret
fstps
sbb
out
and
pop
ret
test
jmp
icebp
bound
imul
adc
pusha
pop
out
inc
cld
sbb
push
ja
xchg
sub
divb
fsubrp
sbb
jns
aaa
les
add
ret
lahf
lods
aad
mov
sti
or
inc
pop
shlb
xchg
icebp
mov
push
repnz
add
xor
repz
mov
cld
hlt
div
jmp
pop
cmpsb
test
js
or
mov
jo
test
mov
inc
roll
lahf
sahf
pop
sub
sbb
adc
xor
icebp
adc
mov
mov
lea
adc
lea
or
sbb
mov
pop
xchg
mull
mov
mov
cld
mov
aas
fwait
or
inc
pop
jne
aad
xchg
mov
jl
mov
sub
lods
dec
dec
cmp
mov
pusha
sbbb
out
sub
mov
jmp
push
jg
mov
sub
mov
lods
xchg
add
cmp
ror
in
rorl
adc
loop
andl
lret
mov
adc
pushf
out
stos
push
repnz
mov
das
aam
fldcw
ret
push
pop
xchg
test
popf
ss
sub
add
inc
cmpl
pop
fidivs
and
pop
repz
jg
sbb
dec
movaps
adc
and
insl
out
mov
lds
pop
enter
mov
and
test
cmp
push
xlat
test
inc
enter
jnp
in
xchg
aad
jbe
lds
inc
scas
xlat
xor
repz
iret
pop
lret
dec
fdivs
xchg
dec
push
or
xlat
cmpsl
ja
cmp
mov
add
enter
cmpsb
sbb
testl
jle
scas
shlb
rcrl
adc
sbb
sbb
lret
push
cmp
push
call
sbb
inc
dec
outsl
hlt
or
adc
in
iret
adc
fisubl
stos
sahf
mov
imul
bound
popa
fabs
and
mov
xor
push
inc
jnp
cld
loop
dec
mov
pop
push
inc
dec
test
inc
cmp
push
mov
mov
out
in
scas
push
push
jmp
jecxz
mov
xlat
vphaddubq
add
cmpsb
fdivs
fcmovb
out
jae
mov
add
inc
mov
outsb
test
outsl
aad
aaa
shlb
mov
roll
in
mov
in
repnz
in
test
add
outsl
mov
cmp
jae
imul
push
sub
gs
push
dec
mov
mov
lock
pusha
addr16
add
shl
ljmp
loope,pt
cmp
adc
in
jl
imul
adc
imul
dec
in
xchg
sub
jge
jecxz
test
push
pushl
orb
mov
mov
cltd
sti
iret
imul
push
scas
prefetch
or
xchg
cmpsl
dec
jns
je
pop
xlat
xchg
add
inc
xor
orl
push
stos
popaw
push
lahf
mov
test
or
jnp
out
and
adc
repz
lock
adc
xor
add
popa
cwtl
and
scas
lods
jg
mov
xchg
sub
xchg
pop
push
pop
or
loopne
sbb
insb
adc
mov
push
pop
dec
lcall
push
cltd
cmp
loope
repnz
cmp
pusha
sub
fcomps
aam
cmp
push
and
jne
cmpsl
xor
mov
xchg
cmp
push
dec
or
mov
inc
sbb
push
push
xchg
cmc
mov
jmp
fs
insb
mov
jb
pop
add
mov
data16
stos
roll
push
mov
ret
iret
jae
test
pop
add
mov
xlat
mov
push
decl
inc
cs
mov
gs
jecxz
cmp
sbb
sbb
insl
mov
adc
loop
jg
clc
fistps
dec
pop
stos
push
pop
negb
loop
mov
xor
and
filds
sahf
xchg
lcall
push
mov
lods
lds
sbb
xchg
nop
test
push
out
inc
xor
mov
sbb
sbb
dec
sbb
mov
and
fdivp
xchg
js
out
jg
mov
adc
lods
or
pop
jae
lret
xchg
ljmp
dec
sub
jns
insl
inc
inc
push
mov
push
addl
call
pop
inc
jmp
popa
lock
inc
or
in
push
in
in
mov
xchg
xor
leave
dec
cmp
sbb
jp
mov
test
cmp
sbb
rcrb
mov
pop
jecxz
in
fucom
std
sti
fimull
insl
das
pushf
lea
stos
das
in
add
add
sub
je
dec
es
test
fistl
mov
xlat
fidivrl
stos
jge
repnz
cmp
rol
xlat
dec
stc
dec
fsubs
ljmp
aam
mov
adc
iret
mov
sahf
lods
push
sbb
pop
pop
jg
dec
enter
fisubrl
aas
cli
sbbb
addb
dec
sbb
and
sbb
lret
mov
gs
mov
push
cmpsb
test
jl
daa
dec
imul
inc
out
inc
dec
cmp
push
cmp
fisttpl
sub
pop
adc
into
jl
xor
lods
gs
dec
test
inc
and
in
inc
loop
fs
push
xor
mov
dec
dec
mov
mov
aas
pop
roll
hlt
pop
push
jg
or
jne
mov
scas
or
jnp
add
adc
and
shlb
ja
push
xchg
pop
cmp
add
lods
dec
inc
and
ret
cmc
insl
cmp
add
xchg
addr16
cli
push
movl
jne
or
das
adc
fldenv
pusha
xor
fsubl
ds
cld
push
fmuls
out
sub
fisubrs
aaa
mov
orb
gs
add
or
xor
addr16
xchg
loope
mov
sub
inc
ret
popf
das
dec
xchg
xchg
push
popf
push
xchg
pusha
sbb
stos
mov
add
mov
mov
dec
jle
rorl
xchg
repz
test
imul
mov
sbb
nop
fbstp
jmp
lahf
ret
add
mov
stos
aad
push
scas
xlat
call
daa
daa
movsl
push
sti
push
pop
mov
adc
fidivs
xor
std
daa
dec
jnp
nop
jne
cmp
sub
xor
jp
or
add
adc
out
arpl
lahf
lea
fwait
push
pop
mov
rcl
pop
dec
int
pop
insb
mov
mov
pop
lret
sbb
enter
rep
mov
and
arpl
test
ds
sbb
xchg
and
push
jnp
ljmp
mov
test
mov
xor
sarl
imulb
and
push
xchg
out
int
inc
arpl
stc
in
cmpsl
loopne
and
stc
sahf
inc
jo
stos
xor
jbe
in
push
or
jnp
in
daa
cld
test
add
push
out
cld
or
ds
ret
push
out
fimuls
sub
rcrb
add
cmpsb
enter
xchg
push
rolb
jl
fstpt
fnsave
mov
aad
repnz
mov
out
add
mov
lcall
std
scas
mov
shlb
sbb
testb
dec
repnz
andb
and
jle
sbbb
xor
call
xchg
xchg
ficoml
cmp
adc
jbe
popf
mov
outsb
rclb
cmc
loopne
pusha
xchg
negl
mov
lret
adc
mov
jmp
sub
in
je
addr16
lret
mov
jle
aaa
cmp
iret
mov
and
pop
mov
lret
mov
stos
aad
push
push
je
add
push
adc
call
cmc
shll
jp
mov
fstpl
std
leave
push
dec
sahf
nop
idivb
les
out
cmp
outsb
push
pusha
adc
dec
inc
push
ficoms
xchg
ret
scas
fs
loop
sub
jge
call
xlat
jnp
xchg
outsl
push
and
jae
pushf
fsqrt
sub
pushf
cwtl
mov
jecxz
scas
in
jb
mov
or
cmp
enter
xchg
mov
xchg
je
out
xor
test
jne
mov
mov
inc
cmp
dec
add
das
popf
std
mov
fistps
adc
shll
mov
push
add
adcl
jge
gs
xor
cs
rcll
fld
ss
lcall
cmp
mov
cltd
stc
add
fdivrs
push
in
push
pop
rcrb
loop
insb
pop
cmc
stos
hlt
xor
icebp
push
xchg
or
or
xlat
mov
and
xor
sbb
mov
es
je
push
lods
pusha
adc
push
stos
push
pop
inc
pop
mov
in
and
sbb
outsb
sub
ret
mov
pop
daa
or
mov
pop
js
gs
movsb
cmp
inc
or
dec
ds
dec
std
or
mov
lods
push
outsb
pop
push
xor
push
imul
jns
gs
cmpl
mov
or
ret
jb
mov
ret
fstpl
stos
dec
adc
sahf
mov
or
lea
jns
out
inc
lods
push
push
repnz
sbb
ss
jbe
cmp
push
pop
sub
insb
xchg
fildll
mov
mov
push
mov
out
movsl
jne
jmp
insl
lds
loopne
fistpll
jmp
sub
pushf
out
xor
mov
cmpsl
outsl
adc
out
add
popf
popl
push
inc
mov
cwtl
mov
push
call
xor
xor
sub
outsl
repnz
mov
inc
inc
push
ret
call
shrb
aas
in
push
call
xchg
incl
cwtl
lret
mov
outsl
subb
adc
int
mov
adc
inc
outsl
sti
sbb
pop
aaa
pop
lock
xchg
loope
xchg
or
jmp
jge
add
dec
pushf
test
outsl
in
or
dec
and
xor
xor
in
fildll
xor
sbb
dec
mov
mov
shll
lahf
push
out
xor
je
jle
insl
mulb
orl
jge
std
lret
iret
aam
pop
mov
lcall
repz
adc
in
test
xchg
fildl
adc
or
fisubl
xchg
or
add
jo
dec
push
dec
push
gs
jge
in
inc
pop
fisttpll
cltd
pop
mov
sbb
int
arpl
or
adc
inc
out
dec
cwtl
xlat
pop
sbb
push
mov
test
cmp
pop
clc
xor
push
test
mov
xor
loopne
aas
insb
cmc
in
repz
lds
sbb
popf
aas
mov
mov
pop
pop
addr16
pop
sbb
jno
jnp
call
mov
imul
xchg
lret
movb
cmc
push
data16
cmp
les
data16
push
sub
int
imul
cmp
out
add
pop
or
push
jnp
addl
push
push
cwtl
sbb
push
insl
shrb
cmpsl
les
int3
mov
aaa
push
les
dec
and
jo
enter
mov
cmp
jne
push
dec
mov
rcr
or
shll
jp
test
orl
xchg
dec
stos
add
or
push
ficoml
sbb
mov
jp
in
bound
mov
lods
xchg
fisubs
add
cli
aas
cmp
push
pop
pop
sub
mov
scas
cmp
adc
dec
test
jmp
jmp
and
in
pop
mov
cmp
in
push
inc
shrb
sub
cs
jmp
ss
test
jg
jb
mov
push
outsl
inc
lahf
daa
jne
dec
jmp
popa
dec
in
mov
rcrl
movlps
adc
leave
pusha
aam
fstl
mov
rorl
and
push
xlat
sub
test
js
and
out
mov
xor
mov
int
pushf
sub
push
adc
das
fisubrs
push
insb
and
aas
xor
mov
jmp
xor
hlt
fcmovu
lahf
cmp
jb
daa
icebp
pop
jmp
push
fwait
test
mov
mov
mov
and
repz
add
sub
insl
adc
ror
filds
fbld
mov
cmp
push
sahf
addr16
xchg
xchg
mov
xchg
push
fs
cmp
pop
popa
push
ret
and
pop
mov
push
sbb
je
mov
xor
mov
test
ss
daa
lret
dec
push
ljmp
xor
xor
xchg
pop
andl
xor
inc
jg
sub
enter
and
loop
adc
cltd
jp
jmp
sub
ljmp
movsl
or
jae
in
push
rcll
es
addr16
push
xchg
ficompl
es
add
movsb
into
in
push
cld
test
mov
cmp
fsubrl
movsb
addb
xor
xchg
xchg
push
cmp
std
mov
imul
xlat
sub
xchg
test
es
adc
xor
mov
lahf
pop
lods
loope
adc
popl
mov
pop
pop
push
jmp
dec
inc
movsb
loope
aad
mov
push
std
pop
ljmp
adc
mov
cmp
mov
enter
cld
loop
addb
xor
mov
ficomps
es
xchg
jno
fcomps
mov
fiaddl
icebp
cmp
enter
push
inc
sub
and
cmp
hlt
out
and
xor
inc
sbb
popl
insl
xchg
sbb
jl
mov
fidivrl
imul
adc
in
push
pop
loope
idiv
push
std
push
xchg
xor
inc
push
push
orl
leave
xchg
xchg
add
in
jno
fistpll
cmp
ja
dec
in
pop
mov
pop
bound
fsubrl
jle
jecxz
aas
in
or
dec
sbb
fistpl
mov
sahf
in
push
inc
jno
inc
xchg
push
fsubrl
sbb
xchg
jno
xor
pop
or
mov
test
ds
or
in
dec
cmp
xor
pop
sbb
mov
pop
test
xlat
sti
lret
and
lret
in
inc
mov
push
pop
xchg
xchg
outsl
push
outsl
pushf
push
and
cmp
sbb
inc
and
and
ds
in
cs
and
into
outsb
sbb
scas
and
jl
mov
in
sub
into
sbb
dec
js
scas
rcr
mov
jbe
add
inc
rolb
sahf
jecxz
cmp
sahf
mov
inc
jbe
jge
test
pop
fld
subb
loopne
enter
sbb
jnp
int
cs
daa
mov
mov
jmp
pop
loop
ja
aad
xchg
loop
xor
ja
fdivs
stc
out
fsubs
or
clc
stos
imul
lods
pop
add
daa
push
lds
pusha
imul
push
icebp
je
push
movsb
das
adc
xchg
mov
ljmp
popa
xor
xchg
iret
sbb
stos
xchg
ss
clc
mov
pusha
cli
repnz
and
cltd
mov
xlat
sbb
push
gs
sbb
in
mov
test
mov
test
jle
divb
inc
fsts
or
fs
lods
mov
cmp
inc
xchg
insl
or
dec
adc
mov
jnp
add
sub
addb
and
pop
ret
dec
nop
enter
sbb
mov
cli
fwait
cmpsl
xchg
cmp
data16
adc
mov
jae
aaa
mov
mov
ljmp
dec
or
mov
or
mov
outsl
dec
stc
xor
jne
dec
inc
adc
or
loopne
outsl
or
sbb
cmp
outsl
out
mov
mov
ljmp
out
dec
iret
scas
subl
add
xor
aaa
lahf
ja
test
inc
pop
xor
cmp
dec
mov
adcb
sub
mov
add
in
push
mov
neg
hlt
xor
std
dec
pop
sbb
push
mov
cmp
nop
mov
lea
adc
adc
pop
mov
notl
mov
pop
popa
jl
xchg
rorl
inc
movsb
cmp
js
out
addl
or
addr16
jae
jbe
pusha
arpl
leave
.byte
