sbb
push
dec
and
lcall
cmp
dec
shlb
addl
cmp
test
xchg
lods
sub
pop
bnd
sub
scas
scas
data16
stos
mov
push
and
inc
mov
fdivr
into
fbstp
dec
decl
pop
out
jge
dec
mov
cs
cwtl
loop
lods
ja
cmp
xchg
in
adc
and
in
cli
mov
scas
in
cmp
add
or
jmp
outsb
test
mov
lahf
xor
lock
icebp
jmp
inc
fsts
aaa
loopne
pop
xchg
mov
mov
into
scas
icebp
in
push
dec
cmc
xlat
sbbl
sub
sub
leave
sub
ljmp
mov
push
sub
ja
inc
push
sbb
ds
push
lcall
xchg
loopne
add
mov
mov
pop
stc
clc
cmp
mov
cmpsl
mov
xchg
lahf
push
jno
subl
aas
and
jg
cli
cmp
jb
cmp
sarl
sbb
aas
inc
adc
dec
mov
adc
and
lds
fisubs
add
shrl
push
jne
in
loope
aam
pop
insb
dec
mov
mov
sub
dec
xchg
aas
mov
cmc
adc
cmp
or
leave
into
gs
leave
xor
and
pop
bound
lret
lahf
jns
cmpsb
loop
push
mov
loope
in
repz
jno
dec
shl
dec
fucom
cs
xor
testb
cltd
cmpsl
test
or
enter
fnstcw
bound
call
movsl
test
pop
in
fmul
adc
arpl
cmc
lods
inc
call
add
scas
push
inc
popf
xchg
test
ret
imul
sbbl
popf
sub
stos
js
popf
cmpsl
lock
xchg
dec
cld
jno
cmp
imul
mov
lods
fucomip
pop
jmp
inc
jge
sbb
iret
rcll
leave
in
or
sub
lods
cli
mov
and
mov
aaa
andb
insl
mov
lahf
sub
rolb
dec
ret
out
test
fldcw
pusha
xor
pop
fimull
movsb
test
inc
loope
in
cmp
mov
ja
mov
inc
sub
push
aad
in
test
push
lahf
out
jle
movsb
mov
cmpsb
mov
in
cmp
push
cmp
lods
push
sbb
fadd
pop
mov
pop
icebp
sub
cltd
xchg
scas
imul
movl
mov
iret
cwtl
adc
fucomi
jecxz
stc
pop
jns
out
aas
xchg
mov
cltd
shrb
xchg
and
movsl
loope
call
xlat
pop
jge
mov
add
mov
jb
and
stc
shrb
sub
mov
adc
insb
adc
rcrl
xchg
scas
stos
dec
inc
mov
lods
fisttps
xor
imul
push
mov
jo
sub
xchg
popa
in
jge
out
mov
push
fs
push
lods
test
jne
out
nop
shrb
push
clc
or
pop
mov
inc
xor
aas
shll
hlt
out
push
sub
in
dec
add
aad
adcb
ljmp
cmc
inc
subb
cli
dec
lea
mov
call
push
mov
fs
fwait
xchg
mov
sbb
pop
test
mov
or
and
push
jecxz
or
fstl
push
in
icebp
mov
pop
gs
cmp
int3
mov
xor
cmp
dec
push
cs
lret
sbb
jb
push
fs
and
jae
mov
mov
jnp
push
xor
dec
dec
sub
mov
jmp
testb
in
outsl
pop
aaa
xchg
dec
es
scas
jle
adc
add
mov
nop
pushf
add
sub
pushf
jp
into
into
dec
mov
out
int3
pop
jne
push
adc
les
sub
mov
push
inc
sub
lods
jno
in
sub
lods
testb
and
xlat
movsl
and
dec
mov
fucom
test
mov
sbb
push
add
fcoms
mov
mov
test
mov
iret
dec
lret
cld
bound
push
and
add
mov
mov
xor
sbb
inc
ficoms
daa
lods
adc
arpl
in
mov
repz
out
push
add
xor
movsb
mov
movsb
lret
out
lret
push
divl
hlt
jno
mov
inc
cs
mov
mul
mov
jl
pop
lret
mov
clc
sub
iret
and
jne
pop
pusha
test
stos
jne
repnz
ljmp
call
mov
stos
adc
cmpsl
sarl
cld
enter
xchg
test
outsl
fcomp
push
jge
std
and
scas
mov
mov
mov
or
fnstsw
cmp
cmp
dec
inc
push
xchg
imul
adc
mov
cltd
in
add
int3
pushf
adc
dec
jno
dec
int
incb
dec
stc
xchg
push
popf
fstps
ret
push
pop
jmp
outsb
hlt
sub
and
lret
jne
push
sub
out
lret
jb
incb
cmp
rclb
xchg
dec
push
cmp
mov
ret
add
imul
inc
mov
call
xchg
out
adc
adc
dec
and
addr16
icebp
daa
mov
enter
pop
jecxz
les
cmc
push
push
mov
adc
cmc
mov
or
int
push
xchg
movsb
xchg
aad
test
dec
adc
test
pop
popa
mov
xlat
xchg
pop
in
loop
and
mov
in
sti
imul
push
int3
cmpsl
adc
cs
test
xchg
fimuls
push
stos
push
or
mov
cmc
insb
movsb
stc
and
lds
sti
xchg
cmp
shll
mov
mov
fidivrs
loope
arpl
imul
call
subl
inc
iret
shrb
jns
sti
sti
int
xorl
aad
repz
negb
jno
jle
daa
call
adc
addr16
rcrb
adc
hlt
mov
and
jae
mov
clc
lcall
adcb
into
sub
ljmp
cmpsb
xchg
lds
test
xchg
or
mov
jg
bound
and
jle
or
jo
in
stos
or
aam
lret
sub
stc
push
jo
aad
jecxz
mov
test
imul
xor
inc
nop
outsl
cmc
inc
mov
jnp
cli
lea
sub
adcl
loop
fwait
xchg
adc
pop
aad
lret
jge
repz
hlt
lock
and
imull
pop
ljmp
sahf
arpl
xor
inc
jbe
cli
lods
push
jbe
int3
mov
gs
fstpt
popf
repz
popf
iret
dec
ud1
jo
stos
jbe
xor
imul
and
jno
jae
dec
dec
xchg
xchg
jle
jbe
jb
cmp
jne
loopne
test
pushf
ss
data16
lock
mov
stos
pop
xchg
fwait
sbb
or
jecxz
das
lret
fstpl
test
scas
fdivl
cmc
or
test
mov
cmp
popf
insb
inc
pop
sbb
ss
sbb
cs
pop
fstpl
mov
lods
sub
aad
xor
pushf
sahf
dec
imul
addl
out
fmuls
addb
daa
hlt
sbbl
pop
dec
sti
addb
fistpl
test
cmp
mov
xchg
and
push
add
imul
push
pop
add
lock
push
outsb
scas
mov
add
jg
ds
xchg
adc
jnp
mov
testl
jg,pt
scas
push
pop
inc
mov
pop
je
imul
es
inc
jecxz
sti
lret
cmp
adc
pop
mov
ret
nop
jns
faddl
jle
or
les
repnz
inc
sub
inc
cmc
lock
adc
scas
xor
or
pop
mov
mov
cmpsl
sbb
stos
sub
mov
mov
xchg
daa
push
mov
lods
ss
loop
iret
jnp
notb
or
pop
fildll
addr16
sub
fisttpll
movsl
popa
push
jmp
add
jge
dec
xchg
aas
push
scas
sub
imul
adc
cmpsl
mov
int3
cmc
aas
inc
sub
ljmp
inc
aas
aaa
and
inc
pop
aad
popf
pop
push
pop
testl
inc
sub
std
fistpll
into
ds
and
push
movsl
mov
fucomip
mov
fdivrl
sbb
xlat
pop
out
adc
lods
scas
push
sbb
addr16
icebp
push
push
mov
fwait
mov
fdivrl
sbb
xchg
push
ss
or
and
stos
roll
xor
test
sbb
sub
pop
ret
ficomps
shrb
pop
fistpl
loope
xchg
pop
dec
jecxz
dec
dec
push
and
mov
mov
imul
fldl
in
rcrl
sahf
lods
mov
jbe
xchg
pop
lods
jg
stc
orb
lods
lods
sub
rorl
push
mov
pop
jecxz
leave
stos
shrb
xor
mov
mov
call
jne
xchg
out
dec
xor
fldcw
dec
test
aad
into
ss
leave
fwait
xchg
pop
data16
sti
push
jb
and
bt
into
pushf
and
daa
mov
les
add
in
test
mov
test
jmp
mov
fwait
mov
inc
jo
orb
xor
jnp
out
sbb
out
sbb
mov
subb
xchg
stos
mov
push
inc
mov
push
shrb
hlt
subl
pop
stos
inc
stc
in
dec
dec
jle
filds
xor
mov
sbb
out
mov
push
out
push
cmove
xor
data16
xchg
jne
cs
lret
push
pop
push
enter
repz
subl
jmp
push
or
add
push
jnp
xchg
iret
je
jae
and
fisubl
mov
push
dec
add
das
inc
sub
xchg
lods
pop
sub
pop
lea
imul
jl
js
add
lock
ret
mov
or
cmpsl
mov
cmp
dec
jmp
popa
in
xchg
fistps
scas
pushf
fbld
pop
mov
xor
mov
and
sti
imulb
xchg
push
dec
cmc
add
lea
cmp
pop
and
mov
sub
lods
into
jo
push
clc
or
fstp
dec
add
fisubrs
mul
addr16
in
and
xchg
cmpsl
pop
dec
scas
or
xchg
and
call
cwtl
fstp
test
fstpt
xchg
lea
test
mov
cmp
fwait
mov
pop
jecxz
repnz
cmpsb
test
test
test
clc
das
adc
push
test
or
mov
push
test
enter
pop
mov
in
xchg
and
ret
xor
in
pop
dec
sub
pusha
into
lea
mov
pop
cmp
mov
mov
pop
xchg
pop
fisttpl
fisubrl
pop
xchg
lcall
sub
bound
xor
lods
inc
test
lods
leavew
daa
inc
sti
cmp
cmp
xchg
daa
xchg
adc
sub
pop
mov
pushf
rorb
xchg
movsb
out
or
dec
pushf
bound
test
xchg
insb
jb
cwtl
mov
mov
loope
mov
mov
outsl
fistps
fcom
test
int3
push
scas
dec
mov
fnstcw
rorl
and
dec
xchg
pusha
in
mov
cwtl
pop
in
push
xlat
pop
insl
inc
mov
fwait
push
lret
shll
movsl
cmp
aad
rorb
jnp
lock
pop
mov
cwtl
mov
hlt
xchg
loope
stos
fwait
ljmp
mov
push
sub
sti
mov
mov
mov
out
lahf
cld
stc
lret
cmp
pop
jb
add
out
mov
std
mov
shll
cmp
or
push
in
or
divb
pop
pop
loopne
xor
sbb
addr16
iret
addr16
ret
les
sbb
syscall
ret
push
loopne
xchg
pop
push
mov
pop
add
sbb
inc
push
or
ds
cmp
cmp
into
sbb
fidivl
cmc
jo
pop
pop
rorl
ss
in
insl
xlat
dec
cmpsl
push
and
and
jmp
aam
sub
sub
cwtl
leave
lret
test
push
lcall
mov
or
pop
popa
ss
dec
adc
loopne
mov
out
and
pop
scas
rorl
mov
fmull
mov
out
nop
cmp
scas
insb
jecxz
sub
push
mov
xor
stos
ss
insl
pop
es
stos
xchg
pushf
leave
ljmp
fstl
imul
lea
xchg
dec
cld
imul
or
mov
mov
pop
stc
int
aad
call
dec
mov
add
sub
or
or
ficomps
aaa
and
jae
leave
gs
and
repnz
mov
sbb
add
pop
fistpll
outsb
and
movsb
push
enter
xor
movsl
inc
jno
into
and
das
inc
andb
mov
in
cmpsl
sub
xchg
dec
repz
fwait
jg
jbe
mov
sbbb
push
sahf
gs
push
outsb
mov
fidivrl
stos
outsl
jns
lods
ljmp
rorl
out
into
mov
add
mov
cmp
stos
mov
call
imul
fucomi
mov
push
outsl
xchg
cmp
int3
jl
mov
orb
add
rcrl
pop
out
bound
cmc
cltd
mov
jb
arpl
push
push
sub
xchg
xchg
cmpsl
das
mov
jp
mov
daa
pop
adc
sbb
stos
mov
sahf
cld
add
add
cld
lahf
pop
mov
outsb
pop
jns
call
inc
push
xor
jp
pusha
push
sti
test
inc
add
pop
leave
adc
xor
add
testb
enter
or
add
inc
ljmp
cmp
jmp
jbe
add
cmc
inc
ljmp
pop
imul
das
sahf
or
xorl
dec
fisttpl
mov
dec
aad
push
insl
xchg
sbb
rcrl
inc
into
push
dec
adc
in
out
es
fucom
mov
iret
adc
or
sahf
dec
in
xlat
ja
lods
data16
neg
cmpsl
dec
jg
cmpsl
out
ret
dec
fdecstp
repnz
std
push
sti
arpl
mov
outsl
in
aaa
jecxz
mov
ds
pop
xchg
and
pop
lret
or
add
push
aaa
test
push
mov
es
loopne
push
xchg
pop
dec
insb
cmpsb
out
push
shrl
test
jge
mov
xor
push
push
aaa
xor
sbb
sub
jmp
xor
mov
xor
loopne
std
pop
imul
sahf
jp
pop
ret
das
push
test
sbb
push
in
out
cmp
aam
pusha
sub
cmp
lahf
mov
enter
sahf
mov
cwtl
lock
lea
jp
ss
pop
jb
popf
test
popa
movsl
je
jle
lds
out
pop
imul
fstpl
pop
sbb
xor
movsb
dec
insb
xor
loopne
hlt
sbb
iret
test
lret
and
pop
mov
or
push
pop
mov
dec
stc
lods
into
push
xchg
jne
mov
pop
push
inc
sub
mov
mov
bound
hlt
fimuls
mov
addr16
aas
sbb
in
fldl
or
les
inc
ret
pop
mov
out
mov
stos
mov
or
pop
pop
fists
aas
sub
pop
dec
dec
mov
inc
rep
movsl
sbb
jbe
iret
pop
jno
popf
xor
int3
cltd
enter
test
imul
inc
pop
mov
or
xchg
cmpsl
xchg
push
xchg
dec
mov
int
jp
pop
inc
jb
lds
dec
jmp
xchg
jns
ror
or
rcll
out
movsb
notb
aaa
sbb
pop
lret
jg
rcl
mov
cmp
pop
and
ss
and
pop
pop
lea
insb
daa
fisubl
sub
jns
mov
pop
xchg
test
lret
inc
pop
adc
clc
push
xchg
out
pop
xor
add
jle
fcoms
xchg
sub
sbb
add
repz
fldt
fisttpll
out
mov
in
and
lods
and
xchg
inc
sbb
xchg
lods
pop
mov
cltd
addl
xchg
jo
out
push
es
enter
loope
jecxz
lret
push
inc
mov
cmc
push
loop
movsb
add
outsb
icebp
test
cltd
lret
mov
pop
call
dec
push
ds
fiadds
inc
xor
loope
in
mov
dec
dec
int
sub
xchg
lcall
push
hlt
xor
andl
inc
out
cltd
cs
jg
addr16
mov
test
aaa
push
stc
mov
xchg
addr16
sbb
mov
or
imulb
jl
jge
ret
xor
ja
int3
or
jbe
sahf
imul
xchg
mov
pop
mov
xlat
ljmp
mov
in
inc
movsl
jecxz
dec
into
pop
xor
loope
add
pop
mov
in
stos
fstp
jmp
push
clc
das
push
and
test
xor
mov
outsl
fldcw
lret
sub
lahf
leave
jae
scas
sbb
jecxz
add
stc
fstpt
push
hlt
lods
jmp
xchg
andl
push
pusha
loope
test
mov
sbb
nop
xchg
cli
inc
or
xchg
insl
xor
pusha
dec
inc
push
mov
imul
or
lahf
es
pop
xchg
pop
aaa
and
cwtl
push
push
adc
or
adc
aam
add
inc
push
adc
push
cld
ret
dec
stos
push
movsl
orl
loopne
jecxz
pusha
lds
das
in
mov
mov
inc
push
pusha
dec
in
stos
sub
mov
lods
mov
arpl
mov
lods
pusha
xor
jnp
das
pop
pop
aad
std
scas
lods
xor
lods
fmull
add
dec
jbe
fsubrl
lret
mov
shrb
xor
cs
add
xchg
inc
cmp
cmp
jmp
jp
adc
or
or
ljmp
mov
lods
clc
xchg
loopne
ds
jg
js
sub
insb
insb
cli
cli
jp
inc
push
addr16
adc
daa
sub
sahf
imul
loopne
jne
pop
sti
movsl
mov
or
cs
cmp
xor
and
pop
lret
mov
mov
fmuls
imul
insl
xchg
jge
lods
sub
cs
pop
loop
and
pop
lods
lret
test
pop
jne
imul
push
pop
outsl
jg
fcmovnu
mov
mov
pop
pop
insb
dec
jae
jns
in
stc
sub
imul
add
mov
aaa
test
push
cmp
mov
outsl
jo
stos
add
xlat
dec
in
ret
sub
out
pop
jmp
adc
pushf
test
mov
iret
lock
notl
jbe
push
lret
xchg
mov
and
inc
in
clflush
bswap
loope
inc
lods
ss
iret
les
sub
dec
xchg
pusha
test
xorl
mov
mov
les
ljmp
xor
pop
xor
imul
and
out
xor
jnp
sub
in
rolb
dec
lret
add
mov
and
popl
andl
pop
imulb
lret
cmovne
xchg
sub
or
xchg
lcall
dec
mov
and
push
sub
cwtl
call
test
pop
outsb
mov
clc
dec
inc
lahf
push
pop
mov
test
outsl
insl
rcll
rcr
dec
mov
and
pop
and
lcall
jmp
cmp
or
add
lods
pop
xchg
mov
cmp
xrstors
inc
aad
sti
ljmp
cmpsl
sbb
lea
and
sub
pop
data16
movsb
test
cwtl
cld
cmp
xchg
push
pop
fstpl
add
jg
xchg
test
or
inc
fisubrl
xchg
xlat
cmp
add
mov
xchg
xchg
sarl
or
pop
mov
pop
push
or
or
push
mov
xlat
into
andl
xchg
lahf
nop
adc
pop
jae
lds
push
fstl
ret
std
sahf
es
jecxz
mov
and
mov
je
scas
lods
jecxz
scas
ja
add
lock
xchg
bound
sub
add
int3
popf
jnp
mov
xor
clc
dec
cwtl
mov
dec
adc
out
loope
inc
addr16
fld
cmc
fwait
jnp
or
jmp
cmp
push
das
lret
aad
es
mov
jno
and
filds
adc
and
loopne
imul
xor
cmpsl
push
cmc
cltd
lds
adc
xchg
sahf
stc
scas
pushf
test
outsl
push
mov
outsl
adc
adc
cmp
push
dec
mov
dec
jmp
aas
and
inc
test
mov
not
xor
je
push
mov
mov
aam
pop
xor
fwait
inc
mov
enter
lods
xor
sub
push
aam
pop
or
ljmp
xlat
sbb
xor
ljmp
mov
xlat
dec
lret
out
inc
xchg
sbb
or
andb
push
mov
mov
insl
ss
xchg
sahf
and
test
std
addr16
filds
js
insb
out
lahf
lahf
lock
add
fmuls
pop
push
or
out
jae
push
adc
aas
aaa
sub
inc
lods
lcall
mov
subl
jmp
add
and
fisttpll
inc
jmp
cmp
aaa
push
adc
in
pop
mov
aad
mov
xchg
mov
ja
fimull
popa
repz
pop
cmp
sub
das
lods
sub
or
cs
jp
sub
adc
mov
fnstcw
cmp
and
jge
push
enter
adc
ss
jmp
push
into
mov
stos
sub
call
iret
imul
sti
stos
sbb
cld
mov
xchg
sahf
test
jecxz
dec
xchg
mull
lretw
xchg
movsb
in
sahf
push
sub
aaa
mov
loop
dec
or
fucomip
push
sbb
mov
clc
movsb
mov
pop
sbb
add
int3
dec
fistps
popa
push
pop
mov
adc
add
push
sub
aas
dec
pop
in
mov
cld
push
daa
jnp
rorb
xchg
hlt
lock
pop
movsl
call
loope
out
les
cmp
incb
mov
jmp
lods
lahf
cmc
cwtl
xchg
pop
dec
ret
adc
imul
in
or
add
in
ud1
cwtl
mov
cld
ss
pop
int3
push
fildll
arpl
out
call
inc
xor
inc
arpl
mov
cmp
inc
mov
stc
lea
js
fsubrl
jg
ud0
jmp
stos
loop
or
iret
ret
cltd
push
mov
aas
pop
nop
popa
dec
sbb
sbb
pop
fbld
mov
xor
xor
lods
adc
inc
pop
push
dec
push
mov
movsb
xchg
cmp
xchg
push
sarb
dec
mov
incl
fiadds
in
inc
pop
sbb
je
or
push
movsb
push
pop
xchg
imul
xchg
in
xchg
stc
into
test
out
outsl
mov
repnz
stc
push
sub
sbb
in
and
push
mov
xor
ret
sbb
mov
jno
movsb
mov
dec
stos
pop
xchg
sub
fs
vpmaxub
cltd
sbbb
cmp
test
mov
push
jle
sub
fisttpl
mov
sub
rep
pop
xlat
xor
mov
in
into
lret
pop
sti
fdiv
fildll
cmp
cli
out
cwtl
pop
dec
or
cwtl
push
sbbl
outsb
out
xchg
outsb
jg
xchg
outsb
fistpl
xchg
sbb
mov
push
mov
jbe
mov
xchg
mov
in
std
inc
push
push
pop
cmp
fsubl
int
mov
nop
call
mov
sbb
popa
ror
leave
xor
and
xor
aam
stc
addr16
ret
test
mov
sbb
test
subl
cmc
and
mov
cs
ds
mov
fadds
daa
xchg
daa
push
lret
xor
ds
xchg
sbb
aad
cs
sbb
std
xchg
xchg
clc
jne
out
mov
jns
pop
outsb
addr16
cmp
inc
dec
int
aaa
inc
sub
lds
add
mov
sub
inc
jecxz
xor
lds
xchg
pop
dec
lds
insl
cmp
and
aas
fwait
scas
push
xor
jo
call
lret
xor
cs
xor
ljmp
cmp
in
stos
shrb
mov
mov
dec
ret
sbb
nop
mov
pop
in
stos
into
mov
mov
mov
sti
pop
xchg
or
mov
iret
xor
fldcw
leave
movb
xchg
and
test
test
jp
out
aam
pop
clc
je
push
pop
repnz
addr16
dec
pop
dec
jo
mov
inc
jbe
push
mov
les
mov
jp
mov
fsubrs
xchg
std
scas
and
xor
sub
ret
movsb
xor
rclb
lods
jmp
add
jno
mov
fldenv
cmp
ficoms
xchg
stos
icebp
xchg
rorb
cmp
jns
in
out
out
movsl
mov
loope
out
lret
stc
push
in
cmpsb
icebp
push
std
dec
fwait
mov
sbb
xchg
pusha
or
aaa
sarl
cmp
cltd
shr
add
jg
sub
and
pop
add
scas
push
lds
clc
xor
add
mov
ret
or
fnstcw
cli
and
fwait
stc
sub
mov
movsl
fcoml
nop
data16
push
push
mov
dec
rorl
pop
std
sub
and
xchg
sbb
sub
inc
bswap
stos
gs
inc
into
loopne
jns
das
xor
jecxz
mov
mov
arpl
mov
ja
in
and
insb
fstsw
pop
aam
mov
leave
mov
iret
mov
fimuls
and
aas
fucomp
mov
test
ret
lret
aaa
sub
push
cmovns
add
test
sbb
out
rol
je
repz
xor
xchg
mov
faddl
cmpsl
clc
jle
shrb
jp
inc
pop
in
cmp
mov
pop
fbstp
subb
xor
test
insl
nop
and
and
mov
js
or
pop
cmpsb
and
cmpsl
sub
fbld
pop
clc
rcr
adc
stos
lods
mov
outsb
lret
cmp
mov
cmc
mov
rcrl
popf
xor
gs
jb
add
fcoml
and
lods
adc
pop
mov
popf
push
jno
mov
inc
dec
inc
xlat
aad
jae
outsb
aas
test
mov
lods
jmp
lret
sub
iret
sub
jno
ljmp
in
or
cmc
or
gs
cs
adc
push
sar
aad
xchg
xchg
adc
add
push
push
bnd
je
je
clc
mov
sar
test
mov
adcb
mov
in
xor
mov
dec
jns
mov
jno
movsb
shrl
push
sub
mov
mov
inc
jns
sbb
push
int3
fisubl
dec
mov
add
jo
imulb
cmp
fs
cwtl
repz
popf
dec
jecxz
lret
xor
push
cmp
cmp
sub
cs
lds
mov
aam
arpl
pop
and
shll
sbb
xor
leave
sbb
out
imul
or
movsl
jns
sbb
enter
mov
insb
dec
arpl
mov
lea
ret
cmc
insb
sbb
adc
testl
sbb
loop
xchg
std
cmc
sbb
cmp
test
or
outsb
add
fs
addr16
mov
xchg
jmp
jno
push
and
mov
arpl
and
dec
fldl
cs
mov
mov
call
cld
les
scas
in
lcall
cltd
cmp
fsubrl
push
aad
movl
stc
mov
sahf
imul
loope
pop
stos
adc
dec
push
inc
fnstsw
ret
sahf
sub
out
inc
push
sub
mov
cmp
addb
daa
in
sub
and
or
idivl
pmovmskb
fadds
shrl
dec
jge
lret
adc
mulb
lds
push
pop
xor
and
sub
filds
push
xchg
or
inc
push
scas
sub
jecxz
or
and
lret
mov
mov
cmpsl
jecxz
cmp
jge
cmpsb
inc
pop
movsl
mov
pop
mov
xchg
inc
fsubrl
sbbb
push
mov
mov
mov
dec
mov
xor
jno
fnstenv
iret
clc
inc
jle
shrb
test
jmp
jae
dec
jno
scas
sub
sub
mov
addr16
cs
dec
outsb
xchg
mov
sbb
shrd
outsl
or
xchg
out
mov
push
stos
inc
mov
sub
insl
int
cmpsl
setbe
push
push
sti
mov
xchg
jecxz
jbe
movsl
iret
cmp
out
call
das
test
subl
sahf
ss
cmp
dec
xor
push
xor
xchg
push
cmp
and
subl
shll
outsb
xor
xlat
gs
mov
hlt
cmp
call
clc
or
dec
aad
pop
dec
lods
inc
and
lret
repz
push
notb
xor
xchg
fsubrl
daa
inc
repz
and
sub
test
pop
sbb
xchg
stos
xchg
scas
cmp
xchg
pop
jae
xchg
roll
loop
lods
push
fistpl
mov
xchg
xor
sub
in
cmpb
push
lods
dec
mov
fmul
inc
int3
jb
mov
push
jb
dec
in
or
leave
out
scas
cwtl
cmp
lret
into
jmp
or
std
jne
mov
outsb
push
inc
xlat
filds
pop
fsubl
dec
cmc
in
sub
dec
xor
lret
pop
sub
or
lock
cltd
test
push
lea
in
mov
call
or
pop
push
sub
outsl
daa
dec
xchg
cmp
iret
cmc
push
ja
int
and
leave
loope
outsl
jnp
xlat
lahf
push
negl
xor
xchg
lcall
or
lods
bound
iret
mov
xchg
sbb
int
add
xor
mov
cmp
outsb
pushf
loopne
lcall
leave
sarl
leave
dec
xchg
gs
dec
cmp
lods
call
adc
std
and
subb
andb
jl
xlat
and
jb
inc
dec
sti
push
adc
xchg
das
push
xchg
cmp
cmp
mov
pop
movsb
jecxz
push
jne
add
rclb
sbb
popa
inc
call
mov
xor
mov
lcall
cmp
cmpsl
jle
stos
or
mov
ljmp
lea
lahf
push
insb
pop
es
fcmovnbe
xor
push
cmpsl
sub
insl
jbe
rolb
popf
pusha
cmp
clc
dec
dec
inc
out
sub
cmp
lods
jmp
jge
pop
and
push
das
loope
nop
dec
pop
clc
mov
push
iret
mov
adc
jne
or
ja
inc
imul
lret
sub
enter
fsubrs
addr16
int3
rcll
addb
sub
fsubp
pop
cmovl
out
clc
aam
aam
lret
scas
dec
jg
ljmp
and
sbb
xor
and
xor
sub
dec
mov
cmc
lods
and
in
push
loopne
push
jmp
sti
cmc
setl
xchg
ret
inc
fldl
cmp
dec
gs
psubq
mov
in
push
fidivl
mov
mov
cs
jbe
fldl
jmp
push
mov
loope
imul
nop
sbb
mov
popa
cmp
dec
dec
in
dec
out
push
add
stos
cmc
xchg
rorl
testb
rcll
stos
inc
push
push
cmp
inc
sbb
aam
mov
movsb
xchg
jnp
int
adc
adc
int3
ror
mov
ficoms
jp
shl
lret
bound
push
nop
fisttpll
mov
sbb
and
int
jno
xlat
lcall
fists
cmp
jmp
loopne
enter
jl
cmc
fs
and
mov
iret
adc
adcb
fs
repnz
stos
or
dec
aas
push
insl
xlat
and
dec
push
pop
xor
push
mov
imul
int3
jno
out
cmp
or
push
je
xor
dec
adc
xlat
jecxz
lock
pop
and
mov
cmpsb
mov
leave
clc
or
xor
out
sub
cmp
flds
push
pop
pop
jge
stos
int3
sbb
jmp
or
insl
and
hlt
rcrb
and
call
sahf
jae
pop
sbb
mov
mov
add
scas
xor
sub
xchg
jno
imull
adc
xchg
fs
fildll
mov
sbb
add
data16
fnsave
jb
pusha
sbb
addr16
lock
jmp
sahf
push
fs
imull
pop
mov
je
jecxz
hlt
inc
sar
nop
dec
out
es
mov
pop
or
jo
leave
jns
enter
aad
push
lods
sbb
cmpl
stc
xchg
negb
out
fwait
pop
fucomip
dec
rolb
xchg
dec
dec
mov
adc
inc
aas
dec
cmp
fwait
sahf
testl
adc
and
xor
adc
ss
cmp
pop
dec
ja
jmp
push
add
push
mov
adc
add
daa
les
test
mov
rolb
xor
ds
lret
pop
lret
addr16
sub
sub
add
mov
in
adc
jp
loopne
mov
pop
push
adc
add
add
jg
push
imul
and
push
sahf
icebp
jge
loopne
out
in
mov
xor
sub
fnstenv
inc
popf
iret
pop
push
inc
jmp
dec
mov
mov
in
outsb
lods
scas
fsubrs
outsl
leave
test
pop
and
mov
stc
adc
pop
dec
and
adc
and
and
inc
push
call
lret
js
lods
scas
or
paddusw
aam
addr16
cmc
andl
dec
and
xchg
push
jmp
mov
inc
in
dec
push
out
jecxz
fstpt
jle
adc
mov
dec
sub
in
mov
imul
and
sub
dec
rol
sub
adc
jmp
jnp
dec
or
push
lret
cs
cs
adc
dec
iret
jno
test
aad
xor
ficoms
outsl
push
pop
js
mov
repz
mov
movsb
lods
adc
xlat
iret
adc
lods
sbb
xor
addb
jle
addr16
ss
push
addr16
dec
ss
fmull
dec
fwait
andps
or
ja
dec
arpl
mov
scas
pop
cmc
and
push
pop
imul
sti
loopne
xor
mov
enter
das
out
mov
jno
sub
push
in
add
stc
or
dec
dec
pop
xorl
popa
sbb
adc
dec
cmp
std
jl
pop
cmpsl
and
lock
dec
in
in
pop
std
xchg
dec
call
push
inc
addr16
mov
mov
sbb
inc
aas
inc
andl
push
sub
adc
mov
imul
fcmovbe
xchg
out
lret
pop
das
sahf
xlat
idivl
sbb
ds
jmp
aas
dec
cmpsl
pop
mov
push
pushf
pop
insl
push
int
xchg
bound
xchg
dec
push
sarb
dec
inc
das
aaa
mov
or
lahf
pop
xchg
cmp
xor
dec
xlat
les
pop
jne
jle
and
fld
fildll
ds
inc
movsl
xchg
rclb
ja
les
fdivrl
inc
push
ss
inc
clc
sahf
push
shlb
into
adc
push
inc
out
outsb
ss
das
mov
movsb
scas
loop
pop
dec
cld
iret
lods
adc
xchg
shrl
pop
out
ret
sub
jb
inc
or
leave
jge
mov
jg
out
lods
stos
movsb
inc
ja
das
mov
dec
push
inc
or
scas
jecxz
lahf
ss
adc
xchg
push
pop
gs
imul
cmpsb
push
out
daa
inc
cmp
inc
cmpb
ljmp
mov
popf
adc
ja
test
sbbl
daa
cmp
outsb
pop
nop
bound
ja
pop
iret
xchg
mov
xchg
fdivrl
mov
inc
pop
test
push
inc
cli
mov
out
pop
leave
imul
dec
mov
dec
cmc
sub
lret
enter
in
or
test
jns
loope
pushw
ret
pop
addr16
test
imul
lea
into
or
fcoms
push
cltd
ret
fdivr
cmc
or
loopne
inc
add
in
xlat
rorl
mov
cmp
ja
andl
xchg
adc
test
mov
cmpsl
loopne
leave
lea
movsb
shrl
adc
aas
ret
adc
mov
dec
loop
cmpl
pop
adc
ret
stos
sbb
es
adc
orb
cld
pop
nop
inc
jge
push
lret
add
loope
xchg
pop
xchg
gs
imulb
add
lods
xor
insl
ret
stos
cltd
push
xchg
cmp
loope
xchg
lock
gs
jb
add
push
xlat
mov
lret
lret
xchg
shrl
stos
lock
mov
dec
addr16
jbe
adc
pop
frstor
scas
add
shlb
and
pop
psubusb
mov
sahf
xchg
mov
popa
insb
aad
mov
push
imul
popa
jae
and
mov
mov
vmovups
insb
fistps
cmp
and
inc
sbb
sub
popf
xchg
mov
mov
in
push
adc
xchg
mov
cs
ret
aas
jp
dec
aaa
jle
arpl
xor
sti
jle
sbb
or
and
mov
adc
mov
xor
xchg
mov
jno
je
add
jne
jmp
adc
push
pop
mov
push
lret
call
mov
adc
pushf
lds
inc
push
data16
lds
in
out
adc
loop
sub
rcrb
mov
sbb
mov
movb
fs
pop
sbb
mov
push
add
ret
jns
imul
pop
push
sar
jp
push
sub
xchg
sahf
xchg
out
daa
dec
jle
sub
jge
sbb
dec
lock
data16
shlb
es
cld
xchg
fldenv
push
rcrb
mov
cwtl
mov
mov
jo
push
movsl
test
jne
xchg
pop
jae
mov
loopne
andb
sbb
sub
cmp
push
rol
and
mov
mov
adc
ljmp
xor
mov
rcll
mov
sar
push
lea
add
adc
popf
rcl
dec
fs
arpl
leave
mov
or
ret
jg
sub
mov
ja
in
xchg
sub
fcoml
or
lret
sub
sbb
pop
add
pop
imull
xchg
pop
imul
push
sub
fisubrl
popf
setbe
fsubs
dec
pop
pop
daa
imul
xchg
divl
frstor
dec
gs
cmpsb
sbb
adc
das
fpatan
out
sbb
aas
or
dec
repz
shl
repz
arpl
sbb
cmpsl
in
scas
dec
daa
mov
and
xchg
int
ss
dec
xchg
sub
cwtl
negb
push
or
lcall
sub
xchg
shll
jo
xchg
or
jl
jbe
ljmp
xlat
sub
jno
jmp
iret
xchg
fidivrs
jno
je
fiaddl
cmp
fildll
out
bound
xchg
xor
incb
inc
js
stos
jns
and
jo
int3
dec
daa
call
dec
dec
push
notb
xchg
test
mov
inc
sub
push
out
shr
lea
push
ret
mov
aad
xor
mov
sti
enter
jl
imul
rorl
add
flds
cld
mov
pop
push
sahf
shll
xchg
gs
sti
dec
xchg
sahf
cmpsb
rcll
movsb
rcrb
cwtl
pop
pop
sbb
sbb
incb
out
push
shll
jmp
pop
in
sbb
add
rol
cmp
stc
out
dec
jp
fnsave
sbb
cmp
mov
push
adc
xor
mov
movsb
sub
sub
pop
or
add
ffreep
sahf
and
pop
dec
bound
pop
lret
clc
or
mov
jo
push
inc
popf
add
sbb
and
aas
jecxz
leave
xorb
test
test
and
cmp
mov
es
ret
fcompl
xchg
cmp
pop
iret
pop
pop
pushl
lret
repnz
out
jl
loope
movsl
std
jl
inc
push
fsubs
iret
aad
aas
pop
fdivrs
movsb
and
or
addr16
sub
iret
int3
push
pop
test
shrb
inc
pop
and
cmpsl
add
cmp
scas
jp
int3
movsb
adc
filds
mov
fmul
js
pop
mov
pop
aas
sub
cmp
jne
movsl
push
inc
enter
sbb
xor
imul
test
adc
jae
push
mov
mov
jmp
xchg
test
ss
pop
push
inc
adc
push
mov
leave
adc
sbb
xor
add
int3
sub
test
pop
inc
xchg
push
imul
mov
out
mov
rcl
fisttpl
jae
fs
add
xchg
iret
movsl
es
or
sbbl
mov
cmp
int3
mov
icebp
add
inc
and
jb
mov
pop
push
and
xchg
dec
adc
in
cld
push
dec
fldcw
mov
sub
cld
mulps
push
adc
jo
sbb
sbb
cmp
lods
cmpsl
data16
mov
fstp
fnsave
scas
ljmp
cmc
xchg
or
sbb
push
mov
xlat
dec
andl
push
pop
inc
nop
ljmp
push
inc
pop
push
fildl
pop
mov
and
lods
setg
pop
inc
inc
xor
in
data16
imul
sub
enter
loope
dec
push
push
stc
dec
cmp
cltd
nop
push
scas
mov
test
addl
outsl
or
mov
mov
xchg
push
pop
bound
lcall
xor
clc
dec
mov
jge
lret
xchg
adc
or
cwtl
loopne
leave
adc
pop
je
add
xchg
sbb
int3
jae
ss
adc
sti
sub
int3
mov
push
call
jecxz
loop
jns
inc
pop
cmp
lock
mov
or
jbe
inc
imul
dec
mov
inc
ret
stos
int3
mov
dec
push
fwait
shll
dec
fdivrs
sub
insb
pushf
mov
aaa
imul
add
inc
movsb
and
mov
mov
push
ret
pop
rcll
lds
xchg
aad
mov
push
leave
add
iret
mov
xchg
push
or
sbbb
sbb
xchg
xor
ss
lcall
test
aad
ds
mov
pop
xchg
add
add
mov
fmulp
jl
imul
add
inc
es
lock
and
nop
and
fxch
inc
ds
daa
fptan
and
jbe
push
lea
xchg
jae
out
cli
pop
or
fldt
xchg
mov
daa
dec
or
fs
xchg
pushf
sub
fidivrl
pop
lcall
es
mov
mov
cmp
mov
ljmp
or
icebp
sbb
ret
pushf
ss
mov
dec
xchg
pushf
iret
call
ret
addl
rclb
xchg
and
sti
add
js
testl
jae
mov
pop
dec
xlat
mov
adc
ljmp
xchg
enter
xchg
mov
fisttpll
xchg
adc
sub
fisubl
mov
cld
jnp
xor
cmpl
xchg
lahf
hlt
xchg
pop
xchg
leave
add
add
mov
jns
in
clc
or
fcompl
nop
push
jg
inc
addb
std
pop
xorb
or
adc
or
pop
sbb
jmp
dec
xor
push
and
push
inc
imul
dec
pop
pop
loop
rolb
out
out
lea
jb
outsl
pop
jo
jmp
in
cmp
out
out
and
push
push
sbb
jl
cmp
scas
push
int
push
cmpsl
out
stos
pop
mov
mov
pop
add
enter
inc
decl
add
and
in
xchg
cwtl
jae
jne
sahf
mov
lods
xchg
iret
sbb
rcll
mov
push
nop
loope
pmulhuw
pop
mov
int3
leave
lods
js
pop
jae
rcr
sti
jb
mov
xor
dec
jne
jo
pop
xchg
cli
dec
shll
andl
xor
jnp
mov
jne
inc
mov
mov
or
int
adc
xlat
sti
icebp
xor
aam
js
rorb
inc
sti
mov
sbb
imul
xlat
icebp
adc
sub
es
loope
xor
xor
push
cmc
les
notl
mov
xor
push
cld
xchg
jno
clc
ja
test
fst
outsl
pop
xchg
or
fiadds
mov
popa
mov
pop
ficoml
out
add
push
outsl
jne
and
or
push
fst
lock
dec
fisttps
pusha
lock
cmpsl
push
mov
scas
lods
add
jp
scas
addr16
movsb
sahf
hlt
icebp
outsb
cmp
mov
or
cmp
fisttps
mov
add
pop
pop
pop
and
jo
inc
mov
out
cmp
icebp
mov
data16
jae
jb
setae
bound
jbe
out
or
mov
hlt
jmp
sbb
test
test
sub
jne
push
jmp
jns
cmc
test
sti
xlat
imulb
or
xchg
mov
push
or
test
xchg
popa
push
mov
or
fs
jmp
roll
and
xlat
cmpsl
scas
call
bswap
rolb
lock
int3
sub
lds
fsubs
mov
lods
js
xchg
xchg
out
iret
pop
cmp
push
push
shrl
into
pop
data16
mov
or
lods
mov
lret
rorb
or
jmp
js
or
data16
and
aad
in
out
aas
icebp
ret
int
xor
adc
in
sbb
dec
cmp
lahf
and
sbb
int
xlat
dec
dec
xlat
mov
sbb
fwait
xchg
fstpt
mov
aam
xor
pop
imul
fisubs
std
xchg
inc
dec
cmp
pop
mov
mov
jle
into
scas
subb
mov
popa
stc
mov
gs
jb
test
outsl
jbe
iret
adc
out
dec
push
mov
insl
nop
int
mov
inc
dec
dec
sarl
push
jecxz
scas
push
push
daa
xor
push
pop
imul
subb
inc
dec
mov
jecxz
mov
es
ljmp
out
lcall
jg
pop
out
lahf
shll
sahf
loopne
sub
jge
rcrl
leave
ret
adc
ja
dec
mov
scas
pop
in
lsl
inc
inc
inc
adc
pushf
imul
stos
test
jg
mov
cmpsl
add
xor
xchg
sbb
and
pop
movsl
data16
mov
idivb
loope
adc
aad
cmp
lods
or
roll
jg
inc
xchg
pop
popf
dec
fldt
xchg
imul
clc
mov
inc
mov
cmpsb
imull
mov
pop
dec
sub
std
mov
test
push
cmpsl
dec
scas
test
and
cli
rclb
pop
xchg
sub
outsb
outsb
inc
push
popf
sbb
orb
stos
outsb
pop
dec
adc
in
adc
popf
sub
push
outsl
mov
xchg
sub
pop
sti
or
push
or
mov
mov
push
inc
fwait
mov
jg
dec
inc
jne
movl
outsb
test
orb
pop
aad
sub
xchg
pop
adc
push
cmp
ret
mov
lret
sbb
out
mov
into
or
sub
lret
arpl
aad
shrl
nop
test
mov
test
pop
cs
pop
scas
jle
lds
popa
test
push
popf
jmp
adc
scas
loope
imul
addr16
mov
popf
xchg
ljmp
pop
repz
frstor
decl
xchg
data16
imul
xor
push
lea
loopne
test
loope
js
cli
ficoms
ror
push
stos
scas
adc
sbb
mov
iret
dec
pmullw
xchg
push
mov
mov
ret
shrb
mov
in
fcoml
add
cld
loop
stos
dec
adc
stos
cmp
in
add
or
repz
mov
loope
add
into
xor
inc
icebp
stos
xor
mov
les
repz
in
xchg
js
stos
inc
leave
pop
sbb
push
pop
pop
mov
rorl
jmp
movb
outsb
jmp
iret
mov
or
jl
rorb
lret
mov
xchg
dec
mov
inc
mov
pop
outsl
repz
fcomps
repz
inc
aam
std
mov
xchg
mov
mov
sbb
and
inc
sub
push
xchg
push
mov
jecxz
inc
adc
fistps
jbe
lcall
scas
adc
mov
ljmp
out
jns,pt
pop
loopne
add
movsl
jmp
inc
es
imul
roll
gs
push
push
and
pop
xchg
inc
gs
aam
jno
daa
ud0
mov
xor
icebp
out
andl
rorb
lea
sub
cmp
and
jge
aam
push
push
out
lock
clc
add
pushf
xor
inc
and
inc
in
push
rcll
jnp
mov
dec
sbb
lret
inc
test
and
sub
and
fdivs
jge
shl
jmp
xchg
mov
sbb
adc
leave
loope
sub
lods
int
fimull
iret
cmp
in
dec
test
adc
pop
les
add
mov
fiaddl
dec
int3
testl
push
lret
insb
stc
xchg
xchg
sub
fistpl
xchg
fs
and
mov
in
pop
inc
loop
push
je
pop
push
arpl
pop
mov
popf
aam
daa
das
and
shll
int3
rorb
out
hlt
lcall
das
dec
shrl
in
xor
jne
fadd
test
xchg
push
push
stc
add
xchg
ja
and
or
lret
out
jle
fisubl
mov
stos
xchg
lahf
es
sbb
outsl
arpl
cwtl
and
sbb
push
xchg
mov
scas
loope
pushf
into
xchg
fbstp
add
jg
xor
bnd
cmc
fisubs
jne
lea
cmpsl
pop
orb
xorb
add
ja
mov
xlat
movsl
les
mov
jb
jecxz
sub
cmpsb
lock
test
cmp
adcb
movsl
xor
add
sub
jl
cmc
push
arpl
shlb
sub
and
sub
out
loop
mov
mov
ret
fistps
ljmp
push
pop
xchg
and
mov
pop
push
add
xchg
faddp
pusha
mov
add
push
scas
jl
xor
je
mov
sbb
repz
or
inc
aam
ja
cmpsb
leave
test
or
pop
jae
decb
repz
mov
lea
in
out
xor
stos
add
daa
mov
cli
out
xchg
shll
and
push
jne
jmp
dec
xor
out
sbb
mov
mov
jecxz
push
mov
pop
push
and
and
arpl
lret
into
pusha
ror
stos
scas
mov
xchg
pop
mov
mov
fndisi(8087
repnz
mov
mov
hlt
adc
cmp
outsb
inc
repz
fidivs
inc
outsb
or
test
xor
push
mov
stc
daa
and
iret
mov
or
cwtl
xor
insl
out
data16
lods
inc
push
cwtl
jmp
lret
insl
scas
mov
add
and
pusha
cmpsb
pop
aam
push
hlt
mov
add
lret
push
in
sbb
outsl
int
fs
jne
fadds
daa
pop
jmp
or
aam
or
push
test
test
in
mov
scas
mov
in
int
jae
cmpsb
sti
or
sbb
in
adc
xchg
scas
pop
add
fs
aam
arpl
lods
mov
sti
nop
sub
test
mov
dec
imul
jp
fwait
jb
push
xor
sbb
sbb
hlt
test
xlat
fstps
mov
ret
push
or
das
lcall
mov
negb
push
jmp
or
repz
mov
movsl
sbb
inc
mov
sbb
mov
fldt
jo
pop
sub
push
pop
push
jg
stos
inc
xchg
fistpl
stos
and
adc
mov
mov
pushf
push
sahf
imul
es
and
jnp
jge
les
lret
pop
and
jnp
xchg
mov
dec
rclb
push
out
cs
mov
aas
pop
or
xchg
cmp
push
mov
aad
xchg
mov
repz
lods
dec
imul
push
call
mov
es
cmp
int3
jecxz
out
jbe
and
ja
adc
loope
lahf
mov
aad
inc
repz
rorw
ficomps
adc
cwtl
mov
jle
out
jl
out
stos
mov
inc
std
mov
aad
xor
dec
push
jns
fs
and
test
mov
xchg
dec
loopne
sahf
mov
push
pushf
leave
and
pop
cmp
sahf
mov
adc
shll
leave
push
pop
into
dec
aas
sub
adc
adc
adc
outsb
jg
sub
dec
push
fstps
fisttps
lahf
fnstcw
push
inc
dec
daa
ds
call
inc
lods
adc
cmp
xor
ret
dec
lret
inc
and
push
divl
mov
push
jmp
sub
fdivrs
pshufw
loopne
adc
dec
sbb
dec
jae
fcoml
jno
jo
fstpt
sbb
add
cmp
pop
cmp
jb
cmp
and
xor
fistl
push
pop
daa
xchg
lods
in
or
clc
add
inc
stos
mov
lcall
scas
jo
lods
js
popf
pop
xchg
fdivrl
outsl
shlb
xor
pop
add
cmpsb
ds
lea
inc
and
jo
jne
mov
pop
lods
jl
pop
sbb
lods
sub
fs
popa
fimuls
xor
lods
jmp
sub
inc
jmp
fnsave
cltd
popf
rcr
mov
push
stos
pop
sub
pop
mov
neg
nop
in
mov
fcom
loop
or
or
out
mov
dec
out
addr16
jmp
sub
je
hlt
inc
sbb
inc
into
cmp
jne
out
xchg
dec
fisubrl
loope
push
dec
mov
icebp
cld
adc
inc
dec
pop
in
mov
insl
inc
mov
add
in
inc
jbe
lcall
out
lea
jns
mov
enter
daa
insb
add
adc
call
cwtd
sub
call
dec
push
sub
je
xor
loop
imul
adc
or
jne
aam
inc
or
cwtl
or
ficoms
jae
mov
sub
outsl
lcall
cmpsl
jo
stos
shrd
popf
and
and
into
fs
ljmp
jge
movb
adc
test
repz
mov
sub
sahf
jbe
pop
inc
sti
lock
cltd
adc
lahf
es
cmp
imulb
cs
imul
mov
clc
nop
jno
iret
jle
adc
imul
stos
lock
pop
dec
pushf
xchg
in
cmp
in
stos
jns
xor
aas
sarb
inc
add
pop
negb
outsl
fnstenv
jbe
inc
dec
js
adc
aas
jns
test
xchg
ficomps
int3
adc
or
add
or
cmc
xchg
pop
jp
cmpsb
fistpl
lods
jae
cmp
fldcw
fdivs
loopne
iret
scas
xor
insb
aaa
jmp
repnz
iret
bound
sti
repz
pop
xchg
lea
lret
add
movsl
dec
loop
cmpl
shlb
out
mov
mov
aad
push
popa
pop
ds
mov
dec
pop
mov
jo
push
mov
sti
adc
ret
bound
jl
cli
sub
lock
cs
jne
pop
push
push
out
iret
addb
mov
ret
cltd
lods
jecxz
lcall
xlat
adcl
mov
loope
pop
je
into
jp
leave
pop
in
mov
or
pop
insl
mov
xor
push
push
xchg
jne
nop
dec
sbb
addb
lret
loopne
data16
pop
fiaddl
mov
dec
add
pop
int3
mov
push
or
fcoml
adc
aad
stos
pop
xchg
lcall
ret
mov
fwait
popf
sahf
sbb
sbb
out
iret
mov
push
inc
mov
jbe
int
rorb
xchg
dec
xchg
sbb
sbb
in
push
lret
repnz
fwait
sbb
mov
add
pop
pop
push
pop
cwtl
ret
std
jmp
out
call
and
stc
inc
pop
cltd
out
add
mov
fwait
outsl
xchg
mov
sub
cmp
and
xorl
pop
cld
and
movl
xor
jmp
fcmovu
scas
xor
push
inc
push
in
pusha
outsb
mov
mov
xchg
gs
pop
ret
xchg
push
cmc
ds
aaa
xchg
sub
sub
xor
daa
cmc
xor
pop
test
push
addr16
popa
scas
and
sub
pop
test
mov
mov
push
dec
jmp
push
fcomps
adc
iret
int3
push
dec
gs
sub
cmp
sbb
xchg
in
lahf
inc
cmc
and
iret
mov
scas
pop
fmuls
jno
and
dec
into
dec
ljmp
xchg
cmp
pop
fists
push
xchg
int3
mov
pop
and
cmp
daa
dec
ror
cmpl
insb
mov
adc
mov
pop
seta
adc
sbb
scas
sbb
jmp
imul
or
les
lcall
push
or
out
pop
bound
ja
dec
mov
pop
mov
test
add
push
lahf
imul
call
mov
je
pop
jg
into
lods
add
mov
cmc
and
mov
mov
imul
jge
sbb
xchg
popf
mov
dec
insl
mov
sub
imul
arpl
fldenv
mov
adc
out
mov
jl
aaa
ss
iret
dec
cmp
jae
jp
scas
popa
out
icebp
call
jmp
daa
mov
fsubr
mov
or
push
cltd
fcompl
inc
mov
popf
ficoml
xor
jne
arpl
sub
xlat
add
mov
sbb
and
mov
sbb
outsl
push
mov
lock
xchg
cmc
lahf
mov
cld
cmpsb
movl
out
add
push
sub
into
gs
pop
jg
sbb
or
or
xchg
pop
les
inc
push
fdivs
popf
dec
pop
jmp
leave
arpl
dec
push
xor
xchg
movq
xor
inc
pop
xchg
lock
pop
repz
mov
push
dec
fsubrl
outsb
jmp
nop
xchg
je
and
in
pop
and
push
sub
arpl
cmp
lods
inc
xlat
jae
movsb
jnp
mov
cmp
in
test
dec
int
pop
dec
imul
cmpsl
jecxz
pop
stos
sub
sti
jmp
jmp
cwtl
and
push
dec
mov
sub
out
push
and
mov
into
ss
ret
or
sbb
inc
and
fimuls
lods
xor
stos
xor
scas
js
sbb
jae
sbb
out
sbb
mov
fsubs
mov
and
pushf
subl
pusha
fbld
jbe
lret
jbe
gs
aad
and
dec
psllq
fsts
jae
sti
inc
pop
cmp
enter
aad
xorl
or
icebp
push
or
or
inc
jne
fwait
loop
lods
pushf
jae
aam
int3
push
loopne
add
cwtl
sti
imul
gs
lahf
adc
pusha
inc
xchg
std
es
mov
sbb
lret
std
xchg
call
xor
jl
out
sbbl
not
adc
movsb
push
leave
jecxz
rolb
out
xchg
pop
out
xchg
rcll
dec
pop
in
fs
sahf
and
loop
and
lods
sahf
int3
orl
ret
or
js
or
mov
mov
add
adc
ret
jecxz
test
pop
lea
jg
mov
xor
jecxz
decl
push
and
xchg
pop
nop
out
out
aaa
cmp
shll
enter
xorps
add
jo
ljmp
xor
mov
pop
and
dec
les
aaa
sub
mov
out
gs
fmull
jne
leave
add
dec
divb
xlat
leave
test
and
dec
mov
and
dec
xor
xor
mov
mov
add
out
fdivrl
dec
sti
sbb
popl
cli
sub
dec
sahf
loopne
sub
lods
dec
adc
jmp
pop
sti
out
pop
pop
push
pop
out
mov
inc
push
mov
jl
lock
fldcw
adc
loope
test
cmpb
jl,pt
push
add
divl
jo
sub
loop
js
and
imul
iret
lods
imull
jle
sub
repnz
xor
imul
ror
push
pop
add
popf
in
jp
aaa
je
das
push
jle
add
xchg
in
xchg
pop
lods
lock
push
mov
jne
popl
jmp
out
mov
fldcw
call
and
push
cs
pusha
xchg
inc
xor
gs
ja
lcall
repz
pop
mov
out
aam
jae
pop
out
push
or
dec
faddp
fs
imull
outsl
pop
push
xor
jmp
shlb
xchg
mov
fwait
sahf
sbb
jo
inc
stos
push
and
imul
enter
mov
test
pop
push
stos
ds
add
pop
cli
jecxz
pop
mov
lods
pop
dec
or
and
xchg
stc
sarb
lahf
int3
mov
mull
cmc
push
push
or
inc
sub
mov
xor
fwait
xlat
xor
cltd
xchg
push
dec
cld
dec
xchg
fdivrp
xor
movsb
dec
test
jmp
or
mov
cmp
and
inc
popa
cli
aad
mov
out
jmp
lods
scas
fmuls
cmp
push
lock
jg
shll
movsl
jl
aas
mov
loop,pt
repz
cs
pop
cmpsb
jae
xor
fsubr
mov
dec
jnp
mov
cwtl
jmp
adc
fsubl
test
and
xchg
icebp
in
imul
loop
lods
mov
cmp
imul
cs
roll
jp
cmp
and
add
mov
cltd
push
cmp
pop
jg
pushf
rorb
mov
xor
fcomps
and
shrb
adc
cmpsb
or
scas
mov
pop
push
add
dec
mov
xchg
push
test
fsubs
xchg
rcr
aad
mov
fsubr
xchg
jne
lds
pop
xor
orb
scas
jae
sbb
mov
and
mov
ljmp
enter
sar
fistps
lock
jg
push
jmp
cmp
xlat
mov
std
mov
dec
cmpsl
add
les
pushf
fistps
jecxz
push
stos
test
mov
inc
jg
or
popa
imul
xor
pop
push
fimuls
les
cmpsb
fdivs
std
addr16
rcrb
adc
mov
cltd
push
xchg
push
pop
mov
es
dec
shl
push
into
push
mov
out
cli
push
movsl
adc
loope
push
jg
scas
push
in
inc
sbb
mov
in
xor
adcb
fildll
mov
repz
lea
fwait
int3
mov
leave
mov
clc
xchg
push
fcoms
cmp
enter
or
jmp
cwtl
sub
das
stos
mov
push
push
roll
loop
out
adc
rcl
push
xchg
int3
push
push
push
xchg
jns
lock
fsts
xchg
jecxz
mov
rolb
rcl
stos
push
fsubrs
fnsave
add
out
or
lods
adc
pop
gs
int
iret
aad
bound
inc
popa
mov
imul
mov
leave
in
loopne
iret
push
mov
add
pop
std
outsb
in
mov
sbb
lods
cmp
xchg
inc
push
jge
push
mov
test
mov
jg
xchg
or
mov
lods
scas
rol
push
pop
mov
jecxz
daa
out
push
sarb
jecxz
inc
lret
mov
jo
lds
mov
cltd
xor
scas
and
loop
lcall
std
aaa
push
mov
mov
sbb
cmp
inc
jecxz
enter
xchg
push
jecxz
xchg
adcl
jo
rorl
mov
inc
push
or
xor
addr16
cwtl
jb
mov
mov
jmp
add
lock
scas
xchg
push
mov
out
and
lock
push
je
jecxz
sbbb
jmp
rcr
sahf
movsb
int3
gs
lahf
enter
mov
or
loop
movsl
cs
mov
das
das
cmc
xchg
push
pop
sbb
loop
movsl
cs
mov
cmc
xchg
push
in
xchg
popfw
dec
lods
fisttpll
dec
push
pop
jecxz
loop
and
mov
addr16
mov
mov
scas
cli
add
cwtl
mov
mov
aad
dec
std
popa
push
xchg
aas
leave
ret
push
or
loop
pushf
loop
aad
popf
push
dec
push
push
call
imul
push
and
lret
test
addr16
push
mov
loop
inc
int
decl
or
mov
cmp
loopne
xchg
ret
lea
aam
or
xchg
mov
insl
xchg
lahf
pushf
mov
cli
and
stos
xchg
fsubrl
push
sub
pusha
enter
pop
out
movsl
push
dec
jg
outsl
push
mov
bnd
sub
lret
pushf
test
or
imul
stos
sbb
cmp
push
inc
cmpsb
and
or
mov
pop
jg
fidivrs
xchg
pusha
push
adc
insb
jle
sbb
add
je
lea
loopne
jo
add
fs
jne
jcxz
mov
inc
sub
or
mov
enter
dec
test
dec
aam
shll
mov
or
shll
push
xchg
stos
aam
arpl
lahf
movsb
mov
sbb
add
pop
addr16
push
ficomps
sub
push
or
call
inc
outsl
push
sbb
fmull
lods
outsb
sub
mov
sub
movsl
pop
cmc
xchg
inc
in
leave
scas
lea
push
pop
nop
je
push
cmpb
shlb
aad
push
or
adc
or
jo
rorb
or
xchg
loop
dec
dec
iret
out
push
mov
mov
mov
in
mov
int3
pop
push
les
cmpsl
fsubp
inc
inc
add
out
fcomp
mov
and
pop
sub
ss
orb
mov
int3
cmp
push
mov
fiadds
xchg
jnp
aad
inc
mov
jo
pop
lret
cmp
imul
cli
loopne
push
arpl
fmuls
sbb
leave
je
arpl
loope
divb
sbb
lock
mov
dec
xchg
bound
adc
lret
leave
push
aaa
pop
addl
pop
jecxz
pushf
push
loopne
cmp
pusha
lret
stc
adc
mov
pop
in
js
sbb
inc
add
mov
push
pushf
push
pop
lds
clc
es
hlt
push
mov
pop
jno
jmp
add
aas
outsl
inc
mov
movsl
pop
jnp
adc
cmp
jmp
cltd
movsb
bswap
gs
sbb
imul
sbb
dec
xlat
push
push
fwait
call
fsub
xchg
mov
sahf
out
and
fisubrs
test
data16
cmp
cli
jb
push
xchg
aad
sub
test
mov
into
mov
mov
lret
pop
lods
movsb
loopew
inc
mov
mov
shlb
sub
aam
or
push
fucom
leave
je
add
addr16
imul
por
das
das
int
mov
pop
cmpsl
hlt
or
repz
add
and
loop
cmp
mov
fildl
push
subb
sub
jo
mov
or
and
mov
rcl
dec
mov
fbld
inc
or
xor
sub
sbb
push
int
subl
fnstsw
ret
cmp
fistl
stc
pop
push
out
push
and
mov
add
out
mov
int3
dec
test
dec
mov
lret
push
ret
jo
mov
dec
or
dec
inc
push
cs
ss
push
xchg
mov
mov
outsl
dec
filds
inc
mov
inc
imul
fsubs
xchg
or
sarl
roll
push
out
test
lea
out
jmp
pop
scas
cli
fildl
mov
out
pop
cmp
pop
aad
lds
inc
and
cwtl
or
fwait
mov
sbb
mulb
nop
in
out
dec
and
jae
aaa
mov
hlt
popf
movsb
fcmovnb
cmp
adc
clc
pop
mov
lods
stos
sub
sub
jo
mov
inc
das
jg
movl
mov
push
xor
pop
or
push
insl
inc
inc
stos
adc
sub
cmp
hlt
stos
cld
je
inc
out
mov
sub
push
adcb
sbb
pop
and
sahf
scas
xor
stos
in
loopne
dec
cmp
lods
in
add
lods
bound
mov
cmpsb
inc
fnstcw
out
mov
mov
mov
sub
dec
and
bound
ja
dec
dec
jne
dec
cmp
mov
lcall
lds
sbb
mov
pop
xchg
out
lret
jge
js
xlat
add
push
dec
xchg
inc
xchg
jmp
stos
mov
jl
sub
loope
sub
loop
roll
out
mov
aam
insl
shll
sub
imul
test
cmp
and
in
outsl
lret
andb
in
lret
lock
and
sbb
mov
push
ret
sahf
loop
jmp
xor
insl
loop
out
mov
inc
mov
ja
inc
sub
movsb
add
and
mov
inc
fstps
mov
int3
in
or
addl
popf
inc
jb
out
int
neg
jmp
and
lock
mov
push
insb
lahf
pop
xor
data16
pop
xor
jb
xlat
and
sub
pop
fdecstp
jno
or
imul
inc
mov
imul
and
fcom
leave
ss
cmp
pop
negb
xor
cmp
sti
pop
out
xchg
mov
pop
sbb
jp
int
xchg
lea
pslld
out
daa
inc
mov
pop
jbe
xchg
lcall
enter
mov
dec
cld
jmp
xchg
sbbb
popf
shlb
pop
sbb
or
jmp
cmpsl
inc
dec
je
xchg
lea
push
roll
xor
sbb
inc
inc
bound
fistpll
scas
rolb
insb
repz
mov
jns
jle
xchg
neg
jae
adcb
pushf
aam
cmp
inc
xchg
cwtl
mov
cmp
and
push
sub
xchg
push
mov
dec
xlat
scas
or
fadds
push
jns
cwtl
mov
call
xor
or
int3
pop
shr
dec
aaa
xchg
mov
push
sub
add
mov
sbb
mov
and
movsl
out
xor
dec
test
lret
ret
dec
lret
out
lds
loopne
aaa
insl
bound
sbb
cmc
and
push
mov
mov
sbb
mov
and
in
add
fnstenv
and
pop
fstps
dec
jmp
mov
add
xor
dec
stos
test
lret
scas
mov
iret
pop
sub
dec
sub
pop
lahf
add
fwait
mov
out
stos
into
push
in
push
out
cmp
mov
cmpsb
leave
inc
pop
aam
es
int3
ss
shll
pop
mov
jle
lcall
mov
jecxz
cmp
stc
pushf
stc
mov
cwtl
sbb
xor
xlat
sub
imul
fsubl
imul
cli
mov
arpl
inc
ss
push
pop
or
movsl
cld
jmp
icebp
in
sbb
push
dec
xlat
add
inc
mov
lret
jb
lret
adc
cwtl
add
dec
add
mov
shlb
mov
aad
push
adc
add
xor
cltd
pop
sahf
mov
ljmp
adc
mov
mov
outsl
and
loopne
scas
inc
imul
pop
cmc
mov
imul
add
inc
cmp
test
sub
je
dec
je
movsl
push
pop
scas
imulb
lret
add
push
loopne
inc
fwait
inc
push
xchg
pop
mov
insl
int3
out
add
cs
cltd
jecxz
dec
push
lcall
push
cld
sub
leave
in
jmp
das
fsubrs
adc
mull
loop
push
fucomi
lods
and
mov
and
fdivr
repz
testb
and
movsb
push
movsl
ljmp
jns
sbb
rcrb
add
adc
lea
fcmovnbe
stc
out
push
dec
xor
push
mov
int3
push
jle
cwtl
int3
in
sbb
addr16
sbb
pop
ret
inc
pop
xlat
repz
int3
add
rcll
andl
stc
mov
ret
adc
int3
cmc
sbb
mov
sub
pop
cmc
fimull
faddl
negl
cmc
lcall
cmc
cmpsb
shlb
xchg
push
xchg
movsl
cmc
movsb
mov
ljmp
popl
inc
outsb
stos
clc
jno
dec
push
push
jmp
mov
das
and
pop
out
jle
gs
mov
xchg
sub
sub
dec
xorl
mov
jecxz
mov
aam
inc
imul
pop
ficoms
cmc
xor
sub
cmp
push
jmp
mov
jne
and
dec
jno
int
ljmp
aam
roll
shll
or
cmp
mov
fists
jb
mov
sbb
loopne
inc
push
inc
and
aad
sbb
aas
dec
mov
lock
inc
push
pop
ljmp
jle
xchg
xlat
pushf
jbe
cmp
daa
enter
imul
fcoms
leave
faddl
dec
xor
rorb
xchg
stos
jb
lea
mov
adc
xor
push
sbb
repnz
sarb
fs
addb
pop
and
xchg
js
lods
lret
mov
or
pop
lods
nop
add
bound
add
pushf
dec
mov
jmp
pushf
add
out
or
and
ss
scas
daa
mov
daa
sbb
adc
jle
sub
int
ds
jnp
xchg
insl
sti
fs
repnz
shr
mov
inc
xor
ret
mov
lahf
push
add
das
daa
sub
or
loop
push
ss
leave
int3
add
xlat
mov
stc
call
shrl
sub
into
cli
sbb
mov
pop
and
icebp
mov
mov
pop
icebp
mov
jnp
in
fldt
pop
lret
fdivrs
mov
push
push
inc
shll
out
jge
shll
int3
lret
int3
jno
and
lds
dec
mov
testl
js
test
cmovp
mov
popa
lods
clc
cli
cmp
adc
addl
and
test
inc
mov
mov
nop
add
imul
nop
shlb
jne
int3
dec
dec
mov
in
call
add
daa
in
mov
add
idiv
pop
mov
icebp
mov
loop
xor
std
repz
push
ljmp
and
adc
jecxz
xchg
add
out
and
lods
sub
call
clc
pop
sti
xor
mov
jecxz
push
insl
scas
xor
loope
sbb
leave
pop
shl
jb
cmp
mov
push
sti
sub
add
mov
out
push
aaa
fs
dec
mov
outsl
jb
lret
sub
mov
rcll
cmc
jmp
push
pop
mov
fcmovnb
xchg
dec
ss
mov
mov
out
rep
fwait
pop
test
out
mov
sbb
filds
outsl
adc
push
lret
test
push
mov
fbld
mov
cmp
imul
mov
dec
xchg
xchg
inc
jbe
mov
es
and
and
sti
pop
pop
cmp
in
ret
ret
inc
push
dec
mov
pop
inc
mov
fwait
jle
adc
dec
inc
aaa
jo
and
popl
pop
in
dec
or
stos
pushf
stos
dec
xor
das
and
cmpsl
jns
jnp
loop
popa
lret
cwtl
and
and
dec
movb
lds
int3
and
and
xchg
fildll
xor
push
lods
imul
dec
fisttpll
pop
cmc
push
cli
mov
xchg
sbb
dec
ret
pop
bound
lock
in
frstor
mov
pop
loopne
pushf
aas
dec
pop
ficomps
mov
repz
ret
sub
cmp
xlat
jnp
xchg
and
lcall
test
rcll
incl
stos
cmp
push
cltd
in
test
adc
jno
rcll
push
jmp
push
mov
les
push
inc
jmp
aas
iret
xor
jno
lods
js
sbb
fnstenv
out
dec
mov
mov
popf
pop
jecxz
jno
fdivr
ds
inc
test
pop
sti
cs
js
cmp
or
xor
xor
fists
fsts
cmp
test
xchg
imul
mov
mov
push
sub
cmp
inc
xchg
dec
push
and
dec
rorl
aas
rorl
lahf
pop
xchg
cltd
mov
and
std
adc
mov
and
inc
mov
and
imul
test
lret
inc
ds
js
xchg
enter
inc
aas
fucomp
stos
addr16
jecxz
mov
xchg
je
mov
mov
mov
insl
int3
jge
aam
lods
and
mov
test
dec
lahf
ret
push
mov
insl
in
cmp
jle
add
mov
cmpsb
leave
pop
and
test
dec
mov
fcoml
sbb
das
jo
push
stc
push
stos
lods
andl
lods
pop
dec
ljmp
sahf
fisubs
ret
xchg
push
pop
mov
fistps
lcall
sub
push
xor
test
fwait
jmp
jle
fidivs
call
cmc
xchg
in
and
out
lods
sub
push
pop
xor
sbb
lahf
jnp
cwtl
gs
cmp
lret
push
jmp
and
iret
push
xchg
sub
xorb
jno
add
or
xor
cld
sub
push
sub
cmpsb
mov
mov
lahf
ret
xor
ljmp
mov
mov
pop
test
mov
pop
push
sub
pop
lret
pushf
in
loope
pop
sti
xchg
jle
test
jmpw
sbb
movsl
int3
push
pop
xchg
jo
loop
lcall
sahf
ret
cwtl
stc
sbb
add
int3
movsl
add
and
jne
mov
sbb
mov
pop
arpl
rcl
loop
das
push
lahf
pop
outsl
jbe
dec
pop
jmp
jae
fisttps
ljmp
adc
cmp
gs
dec
xor
cmp
arpl
xchg
lds
dec
lret
test
mov
sub
mov
jmp
add
jl
and
je
fs
movsb
decb
mov
push
push
out
out
mov
mov
stc
pop
sbb
cmpsl
lods
sbb
xor
lods
adc
jns
pop
dec
jno
dec
sub
dec
sbbl
lock
or
fcoml
in
and
xchg
push
imul
pcmpeqb
aam
test
lahf
pop
inc
ja
mov
jle
jnp
popf
jbe
insb
mov
lahf
pop
leave
int
cmp
popa
jecxz
jo
ja
inc
xchg
addr16
imul
cwtl
add
lret
mov
insb
stos
out
cs
push
cld
add
pop
cltd
stc
jecxz
les
iret
pop
cmc
pop
outsb
fimull
incl
lods
test
pop
jle
out
mov
lea
fildl
or
mov
sub
jmp
sub
jnp
cld
cmp
push
cmpsb
inc
pop
xor
xor
sahf
popa
movb
jmp
xor
stos
into
cmp
test
insb
lcall
or
pop
jae
xor
orb
cmp
xor
pop
dec
add
cmp
jmp
mov
pop
jmp
es
xchg
scas
ret
adc
daa
in
xor
test
add
cli
stos
movsl
push
xchg
xchg
push
inc
xor
sbbb
js
testl
ss
into
xchg
fcmovbe
dec
mov
aas
or
fisubs
pop
data16
mov
sub
xor
inc
leave
lcall
shr
sub
mov
mov
sub
cld
mov
fcmovbe
push
dec
fstpt
cld
data16
mov
dec
add
or
mov
test
add
xchg
sbb
cmp
lahf
int3
xchg
mov
call
fistps
push
je
push
lods
xor
cmpsl
push
gs
cmp
or
or
cmpsl
sub
xor
mov
hlt
mov
dec
sbb
pop
mov
cmpsb
dec
subb
jle
enter
mov
mov
jmp
sbb
jo
punpckhwd
lcall
addb
jle
jmp
int3
jmp
xor
or
lret
jo
rol
fldcw
fadd
cmp
dec
cmc
xchg
and
push
leave
testb
mull
inc
sahf
mov
loope
daa
call
pop
loop
inc
ja
mov
outsl
push
mov
ja
je
cltd
xchg
rclb
cmp
or
ss
dec
xchg
xchg
test
mov
addr16
mov
popf
jp
ret
xchg
mov
pop
das
pushf
inc
lret
lods
lret
cmp
dec
sub
dec
adc
daa
lret
mov
imul
ror
xor
xchg
pop
test
jne
shll
jmp
jnp
movsl
xchg
or
cmp
xor
mov
call
fisubl
cmp
sub
and
jo
adc
ror
test
clc
mov
adc
sbb
adc
xor
adc
dec
cwtl
xor
mov
inc
sub
and
xchg
adc
adcb
ret
sbb
rcrb
sub
movb
sub
mov
jg
ret
pop
jecxz
pop
daa
xchg
cmp
in
and
leave
xor
sub
filds
hlt
xorl
call
and
mov
push
fnstcw
cmc
mov
pop
cmp
or
fldcw
xchg
orl
daa
lret
jnp
inc
jecxz
add
fucom
movsb
inc
in
mov
aad
xchg
orl
inc
mov
in
fistps
xor
pop
jp,pn
xchg
repnz
and
sbb
mov
lea
pop
mov
add
fnstsw
ja
add
mov
in
fs
out
mov
sbb
mov
and
sarl
xchg
nop
jmp
jae
lea
jnp
xor
mov
in
cmp
fbstp
jne
mov
mov
cld
mov
lds
cwtl
fsubl
xchg
pop
push
push
in
mov
pop
or
sbb
dec
mov
push
fdivrl
xchg
push
mov
jbe
pop
or
fnsetpm(287
inc
and
mov
test
mov
pushf
jno
add
push
jo
pop
pop
in
dec
xchg
sub
xor
out
dec
repnz
aas
mov
push
adc
insl
addr16
mov
out
pop
leave
xor
sbb
stos
push
in
in
dec
in
mov
pop
lods
mov
push
or
mov
mov
dec
loop
add
into
sub
scas
cmpl
mov
in
jmp
mov
addb
push
sahf
adc
inc
mov
imul
lahf
sub
gs
xor
or
inc
insl
lahf
js
fildll
xchg
jl
xor
insl
mov
push
mov
imul
pop
lods
add
jnp
dec
push
sahf
scas
lret
add
pop
or
dec
sub
cwtl
mov
aam
sub
xor
lcall
or
fisubrl
pop
cmp
mov
xchg
jnp
lds
jge
pushf
movsb
mov
fstpt
in
and
pop
jecxz
addb
sbb
pop
lcall
int
gs
ret
push
xor
sbb
out
pop
inc
inc
xchg
aam
addb
sarl
xchg
outsl
or
lock
loope
divb
xchg
shlb
mov
lret
xchg
rcrl
std
xchg
movsb
call
cmpsb
test
mov
das
sbb
sbb
jle
push
xor
movb
cmp
pop
pop
outsl
cmp
push
out
jb
lods
xor
lea
leave
insl
clc
vaddss
or
mov
imull
movsl
cmpsl
fcmovnb
shrl
fs
mul
jg
rclb
mov
lret
cmc
push
imul
xchg
cmp
push
sub
out
ljmp
call
dec
lock
xor
insb
inc
jecxz
push
mov
leave
stos
push
lret
inc
sbb
pop
pop
mov
lret
xor
rcrl
clc
popa
test
mov
leave
stos
mov
lcall
divl
stos
cmpsb
mov
faddl
mov
dec
sbb
pusha
movsl
xchg
inc
insl
mov
mov
fwait
push
mov
dec
pop
push
cmpb
je
test
scas
xor
push
sti
xchg
repnz
lods
xchg
mov
sbb
hlt
or
jbe
andb
imul
in
cltd
sbb
sarl
fcmovne
pop
leave
sbb
pop
leave
aaa
fcomps
nop
sub
or
lret
cltd
lret
or
cmp
cmc
test
jbe
aad
xor
pop
movsb
dec
sub
mov
stos
jecxz
xchg
and
pop
inc
out
and
les
sbb
pop
xchg
push
pop
sbb
fldenv
sahf
sti
sub
mov
xor
stos
pop
lods
pop
xchg
jne
popa
jp
or
cmpsl
arpl
mov
into
daa
lods
ja
lret
pop
out
sub
xchg
test
mov
push
lret
push
push
ss
fistpl
in
xchg
fcoml
cmp
ja
jge
scas
push
mov
bound
xor
shr
mov
test
aad
ljmp
add
ficoms
mov
stos
gs
mov
adc
test
lea
xchg
mov
mov
cmc
cld
xchg
adc
mulb
cmp
mov
ss
repz
cmovnp
shll
mov
pushf
add
aad
aam
jb
inc
inc
jge
mov
loopne
jp
cmc
xor
std
movb
adc
jp
xchg
outsl
daa
dec
pusha
cmpsl
or
dec
enter
mov
or
inc
sbb
incb
or
mov
adc
sub
xor
cmc
enter
xchg
dec
cltd
aam
fs
test
daa
push
mov
sti
add
xchg
out
aas
add
mov
push
loop
or
xlat
daa
jge
leave
pop
jne
cmp
sub
mov
inc
cmp
xchg
pop
cmc
add
add
sbb
shl
movsl
iret
insl
stos
pop
jge
sub
shlb
das
push
test
sub
adc
sub
repnz
jbe
test
ja
scas
sbb
add
dec
ss
mov
jb
sahf
xchg
les
adc
xor
cwtl
lret
xchg
lret
dec
mov
inc
lds
pop
mov
out
in
scas
and
cli
push
sbbb
pushf
jbe
enter
dec
outsl
dec
jnp
fsubrs
jnp
test
cmc
pop
push
xchg
or
clc
xchg
jle
insl
dec
dec
pop
mov
sti
mov
push
jmp
jg
pop
jne
in
imul
stos
pop
and
pop
sbb
sub
stc
and
mov
movsb
adc
xor
aam
out
push
push
jbe
jmp
push
test
and
sub
je
imul
fucomi
inc
jne
idiv
imul
sub
or
mov
dec
mov
mov
lret
fidivrl
or
jmp
push
cmpsl
fwait
lret
or
test
cmpl
cmp
xchg
pop
movl
push
mov
push
scas
xor
push
in
lahf
out
cs
mov
int
mov
pop
cli
add
push
mov
mov
jecxz
ret
dec
inc
enter
add
sahf
shl
xchg
pop
daa
cmp
and
test
in
pop
cltd
fdivrs
divl
jg
jge
jle
lods
les
out
push
imul
mov
xor
out
scas
mov
shll
or
pop
insb
into
in
ret
push
idiv
cmova
dec
test
cli
push
push
xor
addr16
imul
mov
lret
insb
or
out
mov
int
xor
mov
cltd
test
push
iret
xchg
in
inc
ljmp
push
mov
inc
or
cs
outsl
in
or
ds
fisttps
jp
iret
dec
cmpsl
hlt
pop
repnz
jle
movsl
or
lea
sbb
lret
xlat
insl
daa
sbb
xor
in
jae
sub
mov
push
jge
fnsave
dec
scas
and
sub
pop
cli
jmp
cmp
push
dec
dec
loope
enter
cld
cmc
inc
cs
aaa
aaa
fs
dec
push
mov
fs
roll
xor
ret
inc
sbb
ret
push
loope
clc
shll
lret
dec
jno
add
nop
xor
pop
push
iret
sbb
mov
mov
xlat
outsl
fwait
pop
or
cld
test
pop
aad
mov
imul
out
lret
jae
cmovg
sub
loope
pop
fst
xor
pusha
into
test
movl
je
mov
imul
sbb
mov
loop
mov
insb
es
pop
rorb
and
or
inc
push
pusha
cli
stc
mov
xchg
sub
test
adcb
js
lea
mov
outsl
cmp
or
aaa
orb
sub
cmp
adc
in
and
jbe
xor
pop
pop
icebp
inc
hlt
out
jle
scas
in
movsb
xchg
cmpl
scas
fmuls
scas
mov
in
pop
out
loop
inc
leave
ja
out
out
mov
icebp
mov
push
lods
pop
js
inc
enter
jae
inc
in
dec
mov
dec
push
loope
cmpsb
pop
cmp
or
movsl
xor
xor
fdivl
clc
in
cmp
loop
xchg
cltd
inc
push
mov
fistps
in
push
fs
mov
mov
insl
aas
mov
xlat
adc
fidivrs
cmpsb
outsl
lret
cli
jne
imul
push
pop
push
inc
test
pop
xchg
mov
xor
shrb
lods
pushf
fdivs
push
loop
add
test
add
sub
inc
pop
push
fnstsw
insb
inc
fisttpl
ds
mov
mulb
dec
in
sub
fwait
enter
subl
frstor
add
popa
jbe
cltd
mov
clc
xchg
dec
jo
in
push
pop
adcl
ljmp
mov
into
shl
cli
mov
popf
popf
stos
push
inc
push
adc
ret
mov
mov
imul
and
or
jl
imul
xorl
sbb
jnp
mov
enter
cmpsl
xor
in
mov
call
and
incb
xchg
ss
lret
adc
stos
xor
inc
add
jl
jb
aaa
add
xor
rcrl
repnz
inc
scas
fdivs
les
stos
idivb
mov
fnsave
imul
mov
sub
lcall
mov
and
xor
lcall
outsl
xchg
or
sub
test
mov
inc
push
jmp
cs
aas
inc
fwait
add
add
inc
push
movsl
cs
cmpsb
and
stc
stc
xor
fnstenv
sbb
and
cltd
push
inc
ljmp
clc
cmpsb
imul
jns
adc
daa
push
jns
sub
dec
dec
scas
fsubl
or
mov
and
rcr
inc
aas
orl
fistpll
addb
inc
lahf
arpl
cmp
pop
mov
pop
movsb
fs
loope
pop
xor
into
insl
pop
adcb
lods
mov
mov
push
repz
ljmpw
pop
testb
jns
into
mov
ss
xor
mov
mov
dec
or
arpl
push
cmp
pusha
nop
dec
lds
xchg
popa
mov
ficompl
sub
mov
movsb
and
arpl
or
mov
cmp
mov
clc
or
aam
and
cmp
cmc
push
fdivrl
pop
lds
in
mov
mov
nop
iret
inc
clc
mov
push
fmuls
inc
mov
movsb
jae
lea
mov
loope
pop
sbb
movsb
daa
and
dec
out
jmp
pop
push
jmp
jg
add
mov
cwtl
mov
adc
insl
popf
xor
xor
and
mov
jb
ljmp
shrl
dec
stos
movsb
pop
or
hlt
bound
sahf
jecxz
int3
int
mov
xchg
push
das
mov
iret
jns
scas
insb
push
dec
sub
dec
mov
xchg
bound
sbb
mov
or
scas
fs
lahf
jb
push
pop
shlb
aas
pop
or
adc
fnstcw
mov
popf
mov
es
or
addb
repz
mov
out
cmp
xchg
lahf
cltd
fadds
dec
pop
imul
pop
scas
jmp
mul
inc
mov
mov
pop
mov
pop
push
jo
je
xlat
fiadds
loop
jo
ret
mov
out
and
popa
inc
xor
mov
pop
and
xor
push
das
jmp
mov
xor
out
xchg
js
cmpsb
pop
sbb
and
shlb
jg
iret
call
xchg
inc
adc
jge
jo
dec
in
fst
pop
outsb
fiaddl
loop
popf
lret
dec
cmp
and
out
sub
cmpsb
gs
jmp
jmp
push
cld
pop
insb
sbb
push
inc
sbb
mull
js
das
xchg
pushf
insl
addb
jle
mov
pop
js
sub
add
movsb
inc
pop
xor
push
mul
cmpsb
pop
aaa
aad
cld
sti
inc
movsl
xchg
imul
jne
mov
scas
lea
loope
scas
mov
pop
sub
or
aaa
test
cmc
mov
lahf
mov
and
cmp
mov
notl
shrl
test
lret
push
dec
fs
lret
mov
into
mov
lods
sub
movsl
sub
push
cli
xchg
out
aam
jecxz
imul
sub
pop
lahf
mov
movl
dec
rorb
mov
movsb
mov
push
scas
bound
sarl
sti
dec
add
out
jbe
push
dec
scas
imul
dec
or
and
pop
loope
cmc
nop
lret
sub
mov
cld
rcr
or
mov
dec
or
jl
cmp
pop
xchg
jp
nop
sbb
mov
and
dec
out
test
shrb
jge
cmpsb
stos
das
mov
add
test
xor
xorl
cmpsl
fidivs
jo
in
pop
xchg
jnp
je
sarb
push
out
popf
sbb
ss
mov
fstpt
shll
lret
sub
ficomps
dec
lcall
inc
cwtl
iret
popf
into
add
mov
dec
test
lock
andl
ja
or
mov
iret
pop
sub
out
jmp
dec
bound
iretw
out
shll
icebp
jle
dec
mov
fldenv
ret
mov
movsl
push
push
int
sub
adc
add
js
mov
add
xor
in
push
sahf
lret
sbb
and
jno
scas
dec
sti
add
out
sub
test
pop
mov
ds
xchg
mov
sbb
sbb
push
imul
cwtl
dec
movntq
mov
in
pop
scas
xor
data16
fdivrs
lods
push
dec
fcoml
pop
push
fcmove
lret
and
in
cs
jb
mov
daa
jae
ss
fxsave
xchg
movsl
push
insl
push
push
adc
cmpsl
imul
cs
aam
fmuls
xchg
xchg
adc
pop
pushf
pop
rcll
out
add
data16
and
out
jp
cwtl
in
shrl
int
mov
jbe
pop
mov
notl
push
outsl
xchg
inc
daa
sbb
xchg
mov
sub
dec
sub
clc
xchg
pop
mov
mov
aas
mov
pop
leave
xor
pop
clc
mov
push
cli
xchg
xchg
fdivs
dec
pop
pop
push
mov
jmp
push
dec
jno
sub
test
cmpsl
dec
rcll
dec
xchg
sbb
jge
adc
jecxz
xorb
call
repz
mov
in
add
shrd
sbb
add
pushl
mov
cmpl
ja
mov
lcall
aam
aas
lsl
test
addb
cmpsl
cmp
roll
sbbl
adc
out
xor
bswap
int
jecxz
and
insl
push
and
ret
idivl
jmp
leave
out
leave
adc
pop
mov
ds
and
loopne
jne
push
adc
dec
add
or
cmp
pop
mov
mov
in
loope
jg
xchg
inc
add
dec
xchg
filds
mov
ret
testb
fisubrs
fistpll
xchg
mov
xor
test
stos
gs
loope
test
decb
mov
out
xor
orl
outsb
cmp
icebp
or
pusha
fistl
xchg
inc
mov
fldt
xlat
dec
lret
push
xchg
inc
dec
enter
js
inc
lock
cltd
adc
and
mov
sbb
cmp
lret
ret
mov
adc
loopne
lret
dec
mov
pop
dec
push
data16
dec
sahf
push
in
pop
mov
repnz
incb
lds
popf
add
popf
sbb
inc
cmp
imul
scas
es
push
adc
jbe
jle
xchg
and
scas
out
das
orl
loop
or
xlat
cmpsl
add
mov
pop
into
jbe
stc
scas
mov
lcall
lret
loope
fnstcw
mov
lods
or
xor
and
push
lret
pop
mov
jnp
mov
sti
push
ds
sub
push
adc
mov
mov
or
jne
push
dec
popf
cmpsl
and
insl
or
jo
sub
in
pushf
jmp
or
pop
dec
addr16
xor
pop
ret
add
adc
iret
imul
hlt
je
aad
adc
xchg
mov
js
sbb
imul
ret
inc
imul
xchg
aam
mov
xor
ss
cmp
lahf
cmp
movsl
test
repnz
imul
sub
or
push
loopne
mov
add
fs
push
call
xchg
push
xchg
dec
and
adc
and
inc
pushf
xchg
push
push
in
sbb
fcomip
inc
cwtl
mov
sbb
fcmovnb
inc
fs
cs
xor
adc
pusha
jecxz
and
in
or
inc
insb
out
cs
or
sub
pop
iret
sub
lret
and
int3
sub
jmp
dec
rcrb
in
mov
int3
inc
jns
cmp
in
cmp
inc
xchg
aas
and
xor
pop
mov
fbld
sub
mov
fstl
ljmp
pop
dec
jne
pop
jg
inc
test
add
movl
popa
out
dec
aad
sub
sbb
sbb
jns
out
inc
mov
hlt
xlat
xor
pop
clc
movsl
and
dec
mov
sti
xchg
jecxz
gs
lods
lods
lret
jmp
xor
lods
hlt
int3
xchg
jl
push
push
pop
arpl
push
push
cmpsb
cmc
pop
cmpsb
mov
mov
adc
sbb
sub
cwtl
lods
mov
xchg
insb
cs
aam
inc
pop
push
outsb
jmp
enter
rcll
pop
xchg
xchg
adc
mov
sbb
mov
dec
and
movsb
mov
mov
call
dec
lods
and
xchg
scas
arpl
dec
addr16
and
cltd
pop
call
inc
cmpsb
fwait
mov
shr
sbb
out
fildl
xor
dec
rcrb
adc
jb
int3
dec
lret
jae
push
dec
xor
sti
push
mov
pop
jmp
xchg
fs
adc
rorb
popa
xor
and
mov
adc
jmp
push
xor
dec
iret
imul
out
push
push
jg
push
lods
push
push
dec
movl
sub
imul
push
add
mov
fisubrs
or
mov
cld
sbb
pop
in
dec
insl
jne
shll
movsb
test
jle
dec
adc
das
ljmp
inc
push
pop
pusha
jg
pop
mov
xchg
nop
into
xchg
mov
jl
jno
and
push
fwait
sbb
push
testl
loop
adc
push
mov
movsl
cmc
cmc
xor
cmpsl
cmp
sahf
mov
jmp
loope
jns
rcrl
or
inc
pop
call
add
mov
xchg
mov
mov
mov
scas
aam
imul
add
mov
and
add
pop
in
cmpsb
and
sarl
mov
mov
jno
lret
dec
insb
mov
aaa
dec
add
jns
outsb
add
and
jp
cwtl
mov
jb
and
inc
mov
test
cmp
or
movsb
aad
je
inc
jmp
add
push
add
mov
jge,pt
or
jge
cwtl
push
cmp
push
jmp
cs
or
xlat
jae
cmp
sub
push
jge
inc
mov
clc
stos
jb
stc
or
push
dec
dec
xchg
jp
pop
push
insl
int
mov
into
xchg
pop
inc
arpl
iret
lret
mov
or
sub
loope
xchg
int
aam
daa
pop
in
cmp
sub
mov
jmp
and
sahf
mov
enter
cmc
lods
pop
jne
jnp
add
pop
push
subl
fs
iret
jne
ds
scas
sub
and
xchg
mov
add
dec
mov
sbb
pop
xchg
loopne
xor
stos
fnstenv
pop
mov
cmp
andb
cmpsl
and
or
std
ret
in
cmpsl
lods
jmp
push
shll
push
subb
inc
ds
xor
jns
mov
and
xchg
push
ja
lods
iret
rcrl
push
sub
jb
fidivl
cltd
push
sbb
xlat
rcl
jae
pop
clc
cltd
add
rol
adc
imul
jb
cs
movsl
ss
jg
sbb
pop
mov
adc
sbb
pop
orb
mov
lock
mov
lods
dec
clc
ljmp
push
mov
mov
xchg
dec
in
push
dec
adc
out
insl
xor
loope
pop
and
jb
mov
push
gs
pop
sub
inc
push
sbb
xchg
sbb
push
add
sbb
dec
xchg
sbb
imul
outsb
bound
movsb
lea
fsubs
sub
fstl
ss
pop
cmpsl
mov
imul
mov
and
jecxz
ret
push
push
sub
mov
movsl
cmp
adc
loop
xorl
int3
fstpl
jae
jp
or
std
mov
sbb
sbb
divb
pop
pop
test
fnsetpm(287
jne
popf
pop
add
jmp
adc
int3
frstor
pop
xchg
sbb
mov
das
test
lea
xchg
popf
sub
test
cs
and
mov
sbb
js
ljmp
jbe
addb
movsl
enter
xchg
loopne
imul
iret
into
xor
icebp
into
jnp
mov
nop
ljmp
mov
sahf
int
addb
mov
mov
inc
jae
mov
loop
icebp
sub
lock
scas
gs
mov
dec
cmp
pop
sub
lods
push
sub
xchg
pop
sbb
test
push
fidivrs
pop
and
enter
adc
xor
xchg
and
loopne
fwait
inc
outsl
push
insb
mov
xor
cmc
mov
out
jecxz
xor
sti
push
xchg
adc
dec
icebp
cld
unpckhps
bound
lret
hlt
rorl
mov
jmp
inc
test
test
loop
js
aas
das
insb
jbe
pop
leave
sbb
ja
inc
pop
sbb
jecxz
test
out
les
add
pushf
sbbb
xchg
or
popa
mov
xor
mov
lds
xchg
enter
cmp
out
push
orb
vdivss
sbb
lds
inc
and
jl
pusha
aam
inc
pop
and
ffree
rolb
push
adc
mov
sbb
inc
pop
push
rorb
nop
pop
cs
pop
push
sub
popf
cmp
dec
mov
xorb
mov
dec
fstps
mov
push
push
fsub
inc
fs
adc
stos
lds
xchg
js
sbb
cmp
fs
cmp
pop
lret
imul
add
cmp
or
arpl
lods
scas
add
mov
stos
mov
lea
fs
mov
std
xchg
pop
inc
cmp
push
sbb
in
neg
jns
js
jecxz
dec
cmp
and
and
les
pop
adc
lods
imul
cmp
insb
and
xor
rclb
sarl
out
push
cmc
xlat
inc
and
cltd
or
jns
inc
mov
and
mov
in
imul
jno
fst
mov
sbb
inc
sbb
mov
andl
fwait
or
mov
xor
add
jb
repnz
or
movsb
int3
lahf
out
mov
mov
mov
sbb
mov
sbb
xor
add
inc
popa
mov
jle,pt
addr16
xorb
rorb
lret
xor
shl
loop
enter
divl
cmovbe
xchg
xchg
mov
cwtl
fistl
and
push
push
fistpl
lds
mov
add
stc
repnz
sub
mov
icebp
and
es
adc
mov
xchg
mov
mov
mov
sub
hlt
add
fcmovnb
ja
push
mov
lock
leave
push
xor
fidivrl
addr16
clc
lahf
cmp
add
scas
mov
mov
dec
fldcw
adc
xchg
push
xchg
mov
mov
xchg
pop
in
push
pop
cmp
scas
sti
mov
stos
dec
push
cwtl
add
mov
ss
add
les
out
clc
mov
xor
jmp
jbe
cmp
xchg
lds
into
ds
lock
loope
push
pop
jne
daa
scas
gs
sub
add
rcrb
jge
adc
subl
subb
sbb
jp
dec
ss
ror
jg
pop
mov
testl
stos
jecxz
mov
jle,pt
mov
or
sub
mov
lods
add
or
sbb
ds
or
stc
data16
pop
jp
xor
fmul
or
popf
cmpsb
outsl
pop
addr16
pop
lahf
xor
xchg
push
dec
imul
dec
int
insl
dec
das
enter
lret
in
repz
xor
cmp
pop
ljmp
dec
sub
out
daa
iret
lahf
imul
dec
dec
testl
xchg
push
pop
daa
ss
cmp
dec
inc
out
jbe
cltd
mov
sahf
cmp
mov
test
push
jbe
cmp
in
test
addb
fldl
xchg
cmp
jge
cld
add
mov
push
ds
or
dec
xchg
cwtl
ljmp
adc
into
data16
xchg
sbb
roll
pop
mov
mov
inc
push
lods
mov
test
push
fwait
xchg
dec
push
je
xor
repnz
aaa
jno
adc
je
gs
and
dec
scas
sbb
push
inc
push
dec
cltd
sahf
push
icebp
idivb
sub
fiadds
aad
or
add
cmpsb
pop
mov
pop
ret
xchg
jp
out
mov
jle
in
fldl
jmp
dec
fmul
addr16
ffreep
inc
pusha
ljmp
push
repnz
pop
jae
lret
cmc
sbb
add
add
lret
xchg
neg
sub
cmpsl
cmpsl
pop
sub
notl
aad
mov
fwait
mov
or
cmp
lods
inc
std
mov
push
mov
test
sbb
xlat
popf
mov
addl
lret
sub
or
enter
sub
ss
pop
add
lods
clc
or
lahf
int3
push
push
jne
and
mov
inc
pop
dec
fucomip
inc
and
push
push
xor
add
jmp
xchg
mov
cmp
mov
mov
dec
cltd
xchg
psadbw
push
dec
ret
push
cli
in
stc
cs
insb
scas
loopne,pt
js
repz
and
mov
jno
loopne
cmpsl
jle
das
das
iret
lahf
mov
and
sbb
cmpsl
xchg
test
xchg
out
pop
cmp
iret
sub
lcall
addr16
push
out
cmp
notb
xchg
cmp
js
les
or
dec
xchg
mov
jge
jne
repz
fmul
insl
shll
cmpsl
loope
inc
and
test
sbb
loop
pop
je
fsts
into
popf
icebp
xor
fnstcw
sub
mov
aas
rcrl
and
dec
movsb
xor
call
pop
jae
outsb
jno
lock
and
inc
or
in
fcos
addl
icebp
movsb
imul
je
dec
jp
jg
call
push
mov
les
mov
push
std
and
ret
rorb
jo
adc
cs
push
in
mov
call
cmp
not
lahf
sbb
jecxz
fidivrs
push
js
out
fs
ds
into
es
jp
cmp
orl
lcall
pushf
movsb
xchg
loope
in
push
xorb
pushf
push
jecxz
dec
lods
cwtl
xchg
adc
sub
jne
sub
xchg
or
mov
mov
and
dec
fdiv
nop
pusha
es
stos
dec
xchg
icebp
jmp
fistl
rcrl
sub
lea
dec
idivl
lahf
xchg
jno
sub
mov
push
cwtl
push
imul
std
jecxz
xchg
push
ljmp
outsl
out
shlb
pop
xlat
in
adc
mov
dec
js
sbb
xchg
adc
mov
and
fdiv
add
scas
fdiv
push
cmpb
xor
loop
sbb
push
insb
jge
ja
xchg
sbb
xchg
push
sub
pop
mov
bound
pop
pop
pop
adc
push
mov
sub
sub
mov
xchg
push
xor
and
adc
in
sub
cmp
stos
and
cmp
xor
jl,pt
mov
arpl
dec
cwtl
sbb
fiadds
push
sub
jns
inc
cld
lret
sbb
pop
mov
fstps
push
xor
xchg
lahf
lods
sahf
scas
scas
dec
fcompl
icebp
sbbb
pop
ss
sbb
aaa
or
dec
pop
insb
cmp
iret
dec
outsl
lds
sbb
hlt
and
mov
xor
out
loop
dec
movb
sti
xor
shl
inc
jbe
test
adc
sbb
or
xor
icebp
mov
mov
pop
mov
pop
ror
xchg
mov
mov
ja
je
out
jbe
push
xorb
mov
push
mov
pop
adc
xlat
xchg
lea
jle
inc
jne
dec
gs
push
pop
test
cmp
imul
jmp
push
dec
cmc
into
rolb
and
out
test
push
test
push
sub
add
jo
sub
fstpl
stc
ds
pop
fs
sbb
ss
mov
mov
scas
mov
fcom
clc
dec
ret
jl
jnp
test
mov
jmp
inc
insb
js
ljmp
pop
fbstp
stos
inc
fists
jo
bound
fwait
lret
dec
iret
test
pop
or
cmp
add
fisubl
or
addr16
xor
and
pushf
pop
and
xchg
sti
push
test
outsb
loop
sahf
aam
push
inc
repz
fnstsw
jns
xchg
ficomps
sti
loope
fneni(8087
loopne
enter
and
cs
das
mov
push
jmp
mov
call
cwtl
sbb
int
push
dec
divl
repnz
scas
aam
jecxz
ret
sub
mov
out
cwtl
int3
pop
cmp
dec
popf
pop
push
sub
push
scas
adc
xchg
ss
adc
sbb
out
addr16
pop
pusha
pop
js
dec
xchg
pop
into
in
in
inc
sub
push
dec
jmp
or
add
sbb
mov
sub
cmp
out
and
rclb
push
cmpsl
jmp
and
fldenv
push
sbb
sbb
or
cld
fstps
lock
mov
jb
imul
mov
lods
adc
or
sub
outsb
addl
loop
sbb
stos
stos
xlat
lods
push
mov
xchg
shr
jns
xchg
pop
aaa
and
loop
int3
cltd
push
out
sub
into
jo
scas
stc
cmpsb
push
loop
push
cs
sarb
das
lods
pop
cmovp
or
test
lretw
pop
fcmovnb
and
lods
jns
or
popf
mov
int
es
fists
out
cmp
pop
mov
fldenv
mov
addr16
test
or
push
jmp
dec
dec
xchg
sbbb
fildll
cmc
xchg
daa
push
jecxz
dec
mov
mov
stc
pop
add
bound
ret
cmovle
repnz
pop
add
dec
dec
jmp
and
aad
xor
sub
or
jge
push
dec
in
aam
rorl
cli
jbe
inc
mov
stc
sahf
shrl
repnz
and
test
cmp
jno
push
mov
shl
stos
fstps
xor
adc
out
subl
adc
push
pop
movsl
adcb
ljmp
in
or
test
dec
repz
scas
jl
dec
sbb
mov
ficompl
rcrl
lcall
faddl
cli
mov
inc
nop
pop
mov
ljmp
xchg
cmc
xor
lret
cmp
ljmp
leave
mov
rcrl
pop
pop
dec
or
inc
dec
repz
jnp
mov
nop
mov
mov
xor
xor
push
sbb
int3
push
push
in
jle
add
loope
pop
jle
push
fldl
mov
js
xchg
mov
mov
fwait
mov
mov
cmp
call
mov
mov
cmpsb
int
xchg
xor
and
inc
scas
jp
popf
popf
andl
scas
loope
pop
mov
leave
dec
stos
mov
cmp
and
or
out
addb
pop
rcll
mov
xchg
shrb
mov
popa
cld
and
test
pushf
cli
push
push
adc
xor
and
cltd
dec
push
out
inc
adc
sbb
mov
iret
jmp
mov
test
inc
cmpsl
sbb
add
cmpsl
lret
dec
icebp
mov
dec
jne
push
nop
pusha
push
lret
subb
sbb
popa
sbb
push
xor
cli
les
push
shrl
sub
add
mov
push
jne
lock
jns
out
scas
cs
add
lcall
idivb
sbb
pop
scas
xor
sbb
cmp
sub
mov
and
mull
cmp
jne
jne
fisubs
mov
and
loope
push
test
inc
mov
mov
out
adc
jecxz
push
xchg
out
jle
fucomi
xchg
add
dec
subb
pop
out
aam
cli
jns
stos
inc
rol
aaa
jno
nop
loopne
dec
xor
mov
fldenv
pop
jb
push
fsubl
sbb
push
adc
stos
mov
and
push
test
mov
pop
xchg
enter
push
fisubl
adc
cmp
adc
cmpsl
fcmovnu
push
fsubl
pop
dec
lods
aam
cmp
or
lds
jp
xor
dec
add
sbb
jae
gs
jmp
int
lock
ljmp
in
and
sub
inc
mov
push
xor
cs
push
sbb
push
dec
ret
repnz
pop
leave
ljmp
jne
loope
addr16
lods
add
sub
fs
xchg
inc
sbb
je
scas
inc
mov
ret
sbb
pop
sbb
in
add
mov
sub
lods
add
jae
ret
js
jno
cld
in
inc
mov
lea
push
hlt
popf
xor
cltd
out
and
push
addr16
push
rorl
and
pop
mov
xchg
and
fmull
jae
cmp
jg
cmp
pop
inc
xor
ja
xchg
mov
dec
push
fcomps
stos
or
ljmp
mov
loope
mov
inc
push
ret
inc
lcall
lcall
sub
adc
push
xchg
fs
in
in
or
mov
jnp
push
andb
daa
lods
jns
leave
movsb
in
xor
xchg
pusha
mov
inc
and
inc
test
jmp
inc
dec
rcr
mov
fsubs
loop
imul
pop
jnp
xchg
jo
jb
shrb
mov
in
cmp
xor
cmpsl
rolb
movswl
scas
push
sub
lahf
jle
and
aam
leave
std
rdpmc
daa
imul
xchg
push
adc
xchg
mov
das
xor
lods
xchg
into
jmp
sub
push
sub
cltd
clc
mov
pop
add
add
cmc
neg
imul
mov
add
cmpsl
test
mov
aam
ret
add
movsb
enter
andb
jmp
xchg
xchg
cmp
scas
mov
fcmovbe
cs
in
mov
cmp
inc
xor
sub
or
rcrl
stc
neg
add
popa
mov
cwtl
stc
js
pop
and
jge
jno
sbb
mov
popf
xor
lret
xor
or
cmp
insl
and
adc
add
xor
cli
pop
bt
sbb
inc
pop
cmp
shlb
sub
cld
mov
cmc
pop
ja
aaa
xor
sbb
cmp
and
ss
gs
lret
xchg
nop
jmp
mov
cmc
jnp
lds
out
cmp
mov
push
test
mov
sbb
loope
jmp
into
pop
dec
aaa
daa
bound
cltd
push
daa
and
push
xor
into
add
mov
push
lods
outsb
ja
push
and
cmp
push
idiv
adc
mov
loopne
xchg
mov
cmpsb
push
pushf
test
dec
or
pop
cli
lods
dec
pop
pop
xchg
das
in
add
pop
pop
mov
sti
add
mov
das
adc
and
or
leave
rorl
xlat
mov
scas
repz
aaa
fwait
cs
or
mov
or
mov
mov
repz
out
mov
in
sub
pop
ret
aad
mov
pop
and
enter
daa
mov
loope
cltd
inc
or
push
sbb
lahf
sub
lret
fdivs
lcall
mov
faddl
pop
shrl
sub
enter
and
or
lahf
mov
pop
add
std
ficoms
dec
in
cmp
daa
insb
enter
mov
jmp
test
adc
loop
into
push
sahf
add
sbb
pop
sub
mov
pop
dec
loope
ss
lods
jge
pop
xor
pop
xor
mov
jnp
push
inc
jg
call
inc
cmp
or
stos
flds
pop
dec
mov
into
inc
ret
fldt
stos
pop
pushf
mov
push
jge
fldt
mov
aad
dec
sbb
jno
push
imull
outsl
jecxz
pop
or
xor
mov
fs
cmpsl
call
xchg
cmp
scas
test
in
shlb
mov
lods
test
stos
jo
mov
sub
xchg
adc
call
push
div
xchg
mov
and
dec
pop
cmpsb
imul
pop
xchg
iret
outsl
inc
dec
out
add
int
testl
or
push
imul
cmpsb
jae
dec
push
cltd
icebp
test
mov
loope
pop
orb
out
jno
xor
test
push
adc
sbb
add
add
push
mov
lret
imul
mov
popf
mov
out
jmp
int3
stos
jle
cmc
sarl
inc
xor
mov
dec
xor
xor
add
cmp
xchg
int3
push
add
xor
mov
popa
pop
mov
das
insb
je
xlat
xor
sbb
dec
stos
in
pop
js
fists
xchg
bound
test
adc
add
outsb
sub
fcomip
xchg
adc
dec
insb
imul
sbb
xchg
fldenv
rorl
loopne
out
out
cs
or
jno
cli
sahf
call
cmc
mov
fnsave
push
dec
mov
loopne
mov
dec
jle
push
adc
jle
ror
dec
out
dec
outsl
fldt
and
ret
mov
pop
iret
jmp
in
xor
add
pop
int3
sbb
loope
hlt
mov
mov
or
filds
fnstcw
ljmp
out
cmc
stos
dec
jbe
sahf
jne
push
fadds
pop
xchg
jmp
imul
pop
xor
cld
ja
sub
mov
out
mov
pushf
push
stos
push
mov
aad
arpl
jno
out
popf
pop
sahf
roll
mov
xor
cmp
xor
mov
jmp
test
dec
pop
loopne
test
lea
xor
cld
insl
in
mov
stos
pop
loopne
call
insb
aaa
in
pop
pop
pop
shrl
out
cltd
stos
xchg
mov
xchg
das
mov
dec
push
pop
fiadds
push
xor
mov
inc
aaa
jecxz
inc
mov
stos
dec
pop
mov
xchg
inc
roll
fldl
adc
sbb
fwait
std
out
andl
inc
gs
nop
fsub
scas
push
mov
sti
add
cmc
fs
xchg
inc
sbb
int
in
test
fisubs
mov
mov
fs
adc
ss
mov
lahf
lods
fwait
mov
xlat
cmp
mov
xor
lods
lods
roll
xor
adc
add
leave
out
imul
scas
push
int
add
push
xchg
push
adc
adc
and
sbb
fildll
adc
les
vorps
rclb
sub
lods
mov
xchg
cs
rcrb
add
out
iret
xchg
inc
mov
repz
insl
fistpl
pop
div
xchg
divl
fstpt
sub
sub
mov
mov
lret
jno
lock
and
pushf
clc
push
fcoml
jmp
pushf
or
shrl
idivl
or
test
push
inc
dec
lret
leave
jnp
orl
inc
pop
xor
adc
pop
inc
je
push
xchg
xchg
cmc
lock
outsb
not
subb
pop
inc
jmp
imul
xchg
fimull
inc
pop
loope
out
xchg
stos
test
cmpsb
mov
adc
addr16
mov
rorb
out
lret
testl
push
mov
outsb
loopne
movsb
test
outsl
decl
sahf
and
ret
add
icebp
xor
test
jns
pushf
pop
cmpsl
imul
push
xchg
add
aam
lods
push
lods
call
jb
gs
aaa
pop
adc
daa
or
xchg
aad
frstor
push
jmp
mov
sub
mov
lea
or
movsl
out
loope
inc
imul
mov
xor
push
cmpsl
jns
imulb
push
lcall
fwait
shll
int3
lret
rol
inc
dec
cmp
in
aaa
xor
int
and
pop
pushf
ficompl
dec
stos
fstps
pop
fistps
or
push
arpl
icebp
and
out
pop
pop
jno
adc
das
xor
es
aam
clc
lods
or
int3
stos
imul
out
rep
jmp
mov
add
rolb
pop
aas
pop
jbe
popf
loopne
inc
ja
mov
inc
or
pusha
aad
and
xchg
xor
std
jmp
cmp
cld
out
inc
aam
cmp
sub
and
imul
jmp
movsb
xor
sub
pop
xchg
sub
stos
xor
pop
add
scas
std
fwait
ljmp
sub
jmp
in
jb
iret
jo
loop
imul
ja
lret
or
jmp
es
jle
fsts
outsb
repz
jecxz
faddp
insb
in
das
xor
popa
lahf
test
inc
daa
aaa
pop
arpl
inc
sbb
cmp
aas
orl
or
cmpsl
in
jp
sbbb
sarl
das
push
call
inc
jle
shll
test
xchg
subl
into
loope
pushl
push
adc
adc
cmp
lods
xchg
add
setg
or
xor
aaa
fisubl
insb
inc
aad
mov
lea
mov
sub
dec
mov
adc
add
mov
into
leave
shrb
nop
push
sub
in
sbb
dec
pop
xchg
dec
ret
inc
push
dec
loope
jmp
inc
xchg
mov
inc
les
and
push
daa
insb
jae
scas
sbb
je
movsl
ficomps
leave
loope
das
in
mov
dec
sbb
pop
out
cmovbe
int3
dec
pop
mov
lds
cmc
pop
loop
or
push
sti
cs
jmp
popa
adc
adc
jno
mov
mov
je
mov
mov
call
into
pop
sarb
sub
or
pinsrw
rcll
outsb
mov
pop
push
out
lret
clc
push
jne
push
in
sbbl
aaa
pop
mov
xchg
mov
test
and
xor
aad
repz
scas
nop
and
nop
or
pop
rcl
dec
pop
decl
cmc
jb
pop
and
lds
mov
push
scas
test
lret
or
mov
xchg
adc
pop
cwtl
ret
bound
mov
or
test
dec
das
mov
cs
pop
repz
xchg
pop
aas
lret
mov
xadd
data16
loope
sbb
push
and
pop
int3
adc
enter
out
aas
stos
rcrl
mov
mov
out
mov
scas
jo
aas
ret
out
data16
add
les
pushf
aad
out
push
fldt
sahf
inc
or
or
mov
push
je
push
arpl
fmull
aaa
bswap
jae
adc
mov
aad
or
inc
mov
das
aam
scas
outsb
int3
and
mov
xlat
pop
cs
iret
sbb
aaa
out
daa
insb
push
test
inc
xor
xor
mov
pop
jg
push
dec
sbb
push
ja
dec
imul
js
xchg
jge
mov
clc
loop
aam
cli
jne
xchg
dec
xor
sub
add
imul
cmpsb
jmp
mov
or
rol
inc
pop
bound
ja
adc
pop
mov
pop
pop
mov
fimull
fwait
into
rorb
push
rcrb
add
jl
cmp
push
mov
adc
dec
mov
in
push
pop
cmp
aad
subb
push
arpl
out
out
pop
jne
xchg
sbb
jae
call
push
mov
sti
movsl
sbb
mov
xchg
push
xor
fsubrs
inc
sbb
and
aam
pop
mov
cmpsl
xchg
sbb
sahf
or
aad
jbe
lcall
xlat
stos
ss
cltd
mov
loop
bswap
cmc
lret
sub
jo
xor
testl
aad
mov
pop
and
mov
push
popa
lret
and
inc
or
das
sbb
nop
jo
pushf
mov
shl
into
gs
out
jnp
ljmp
mov
and
aas
mov
imul
pop
fcmovu
sahf
pop
mov
cmpsl
loop
pop
mov
fnstenv
test
insb
je
fdivl
loop
pop
fs
add
push
loope
pop
into
lock
mov
movsl
loop
aam
outsl
xchg
fnop
mov
pop
push
sbb
push
xchg
sub
loop
push
lahf
sub
pop
xor
mov
sbb
xor
rcrl
cmp
sbb
mov
stc
and
nop
cmp
mov
clc
inc
jmp
fildl
scas
lea
ljmp
fildl
mov
aaa
imul
pop
adc
movsl
mov
xchg
push
sti
es
lods
into
push
or
adc
jno
adc
fbstp
movsb
mov
cmpsl
arpl
sahf
dec
js
inc
bound
aam
adc
pop
pop
lahf
nop
daa
push
inc
jle
jg
pop
fstpl
int
mov
mov
cmc
push
jmp
add
int
scas
mov
lahf
in
cld
outsb
xchg
js
sahf
xor
sub
dec
cmc
in
inc
aam
ret
fs
pop
mov
adcb
repnz
sbb
pop
dec
xchg
push
fldenv
mov
mov
divb
loop
mov
xchg
mov
jl
rorl
adc
out
insl
stos
sub
adc
mov
cld
sar
scas
add
mov
rol
sbbl
pop
and
dec
in
mov
push
popa
mov
jnp
dec
cmp
pop
and
mov
outsl
ja
icebp
ljmp
push
popf
adc
pop
stc
gs
fsubs
sub
aad
jmp
stos
enter
xchg
cmc
shlb
fdivp
cs
dec
sbb
in
and
push
xor
push
addr16
add
mov
adc
leave
mov
cmp
imul
out
mov
push
xor
push
push
inc
lcall
lret
pusha
into
xchg
inc
jmp
test
inc
into
sub
and
or
ljmp
dec
jnp
add
mov
out
adc
pushf
push
adc
and
flds
bound
lods
lock
jns
mov
pop
jl
lcall
imul
add
jp
test
jp
mov
jno
aas
push
stc
add
pop
mov
in
xor
jb
outsb
sub
inc
pop
sub
adc
stc
lret
mov
add
push
adc
sbbl
daa
pop
xor
jo
leave
lea
lds
cmp
mov
outsb
enter
xchg
cmp
add
sbb
sub
pop
mov
sbb
cmp
cltd
orl
dec
cmp
xchg
sub
popa
mov
jo
add
rcl
jecxz
or
or
or
in
add
add
and
fistpl
cwtl
pop
add
lods
ds
lret
xor
lock
stc
enter
bound
adc
jecxz
iret
sub
das
fimuls
out
in
ret
adc
call
adc
sbb
lret
sub
push
loop
or
fisubrl
bswap
adc
xorl
add
test
mov
sbb
push
repz
jns
call
adc
arpl
or
pop
dec
sub
pop
cmp
jmp
fisttps
xor
stc
mov
lret
rclb
dec
push
subl
shr
jecxz
negl
orb
je
cmp
sub
dec
adc
imul
or
cs
pop
inc
xchg
cmpsl
test
orl
shlb
lods
fnsave
jmp
cmpsb
mov
mov
or
push
push
aaa
xchg
xchg
dec
mov
jge
or
cmc
ljmp
dec
lods
xchg
shll
mov
adc
mov
jge,pn
cltd
cld
push
gs
jle
mov
jae
inc
stc
fs
or
insb
inc
sbb
in
ljmp
pop
lds
xor
mov
jmp
movw
cmp
add
pop
or
movl
cmp
sbb
adc
dec
cli
in
cmp
cmp
push
orb
scas
imul
sbb
out
loope
push
push
lods
fsubl
fidivs
fmuls
push
sub
or
lret
or
mov
out
gs
adc
into
aas
movsb
adc
mov
ret
es
icebp
enter
cmp
jb
hlt
sub
sub
sub
or
and
shr
xor
fimuls
xchg
mov
ds
jecxz
loop
sbb
pop
movsl
mov
stos
js
lcall
push
mov
mov
scas
dec
xchg
push
lods
inc
mov
popf
dec
scas
jmp
fwait
es
cmc
mov
jb
sub
icebp
mov
lods
mov
mov
pop
fwait
cs
gs
stc
mov
ds
ljmp
add
mov
aad
pop
inc
sbb
xchg
scas
pop
or
repz
scas
xchg
xchg
mov
xlat
scas
add
cmp
test
sbb
pop
dec
mov
int3
mov
ja
imul
mov
shll
dec
or
test
or
test
mov
mov
out
mov
dec
sbb
mov
pushf
jl
int3
xor
jecxz
cmp
jbe
push
push
out
test
dec
stos
les
movsl
aam
sti
inc
add
push
rol
loop
fst
push
dec
jbe
xor
push
xor
cmp
push
aad
aaa
mov
cmp
call
aam
in
xor
jmp
aam
add
cmc
das
xlat
mov
pop
mov
push
lahf
rorb
fistpll
xchg
adc
out
out
or
lods
out
push
es
xor
mov
leave
sub
lcallw
add
enter
and
mov
mov
push
cmp
test
dec
aaa
scas
pop
mov
push
dec
xlat
popl
repz
add
sub
cmp
test
sbb
jae
into
outsl
in
ss
mov
push
xor
cwtl
lret
arpl
add
mov
lds
enter
enter
loop
pop
cmpsl
arpl
fidivrl
mov
jg
jb
mov
xor
adc
icebp
data16
mov
jl
repz
scas
sub
fiaddl
add
rcpps
xchg
fcoml
xor
xchg
pushf
xor
pop
xchg
adc
fldenv
mov
inc
sub
stos
jg
push
lods
je
push
stos
xlat
mov
test
aad
insl
ficoms
mov
mov
test
pop
sbb
pushf
xor
rcl
inc
ds
push
lea
dec
popa
nop
add
insl
arpl
arpl
add
or
cmp
inc
dec
add
mov
or
in
or
les
mov
dec
fcmovbe
push
push
test
xchg
cli
lcall
fcomps
outsl
test
stos
vsubps
cmpsl
push
pop
pop
jae
jno
add
mov
sbb
fistpll
jno
push
inc
xchg
es
call
inc
push
xchg
push
cmp
xchg
test
lds
cmp
out
mov
ja
mov
rol
outsl
xchg
scas
stos
les
mov
jle
arpl
xor
xor
xlat
sbb
cmp
dec
std
pop
loop
rcrl
jmp
cwtl
push
cmp
pop
mov
out
aam
and
mov
in
sbb
mov
push
adc
fmuls
lahf
sub
mov
xchg
in
les
xchg
dec
pop
pop
fs
or
xchg
cmp
cmp
fwait
in
push
add
mov
sbbl
mov
mov
lea
jae
dec
mov
cld
stos
xchg
aam
inc
cld
fwait
xchg
pop
lret
mov
arpl
fadd
aaa
xchg
fildll
jecxz
add
dec
bound
pop
push
xchg
std
pop
dec
xor
test
int3
mov
adc
fcomps
test
xchg
mov
in
test
fdivl
imul
idivl
inc
inc
jbe
lods
lods
cmpsb
lahf
add
iret
shll
mov
fcoml
mov
or
repnz
add
mov
stos
lods
fs
popf
ss
pop
lret
loop
mov
test
dec
mov
sti
push
lret
imull
mov
testb
cmpsb
aas
push
push
push
scas
mov
mov
dec
int3
xchg
mov
popf
ss
rorl
movsb
js
inc
push
into
add
jp
jo
mov
lock
hlt
outsl
popf
lods
add
mov
sub
add
sbb
pop
jbe
mov
out
xchg
btrl
mov
mov
dec
jmp
add
shrl
pop
imul
test
push
jmp
in
lea
bnd
ljmp
test
ret
push
or
hlt
movb
sub
sbb
cli
loopne
add
jle
pop
loop
push
pop
dec
aaa
push
dec
mov
aad
push
das
fists
dec
loopne
pop
adc
cmpsb
in
fidivl
iret
pushf
push
push
cmp
xor
pushf
std
cli
call
xchg
leave
scas
daa
xor
dec
xchg
enter
xor
add
xor
lret
and
int3
push
sti
lret
mov
nop
addb
lret
or
das
int3
push
pop
jmp
lahf
jne
je
int3
pop
pop
push
leave
add
mov
insl
popf
mov
xor
sti
fmul
sbb
lea
out
pushf
mov
jecxz
mov
push
stos
ds
add
cmovnp
insb
pop
xor
rorb
mov
inc
lock
or
mov
xchg
aaa
add
mov
imul
mov
out
add
fs
inc
sbb
int
fs
inc
push
push
divl
sarl
dec
pop
andnps
pop
data16
fiaddl
jecxz
ficoms
jecxz
testb
fists
into
mov
adc
xchg
jl
pop
fimuls
jmp
push
mov
jl
ljmp
jmp
jl
cwtl
pop
lea
leave
xchg
cmpsl
dec
ret
lods
mov
popf
sbb
mov
sub
sahf
push
mov
sbb
inc
push
push
pop
sub
jnp
popf
ss
mov
jle
xlat
sbb
loop
sub
into
aad
adc
movsb
jns
lea
cs
jl
clc
icebp
push
mov
test
sub
cmpb
pop
fwait
sub
lock
lret
cmp
lret
fwait
stos
fmul
mov
inc
mov
add
lods
mov
pop
mov
movsl
notl
xor
jge
test
mov
je
jge
lock
pop
mov
in
mov
cmp
fwait
and
jb
pop
cmp
xchg
jecxz
outsb
add
bound
notb
push
iret
movsb
dec
jecxz
ret
popf
add
lret
pop
fsub
xchg
aas
add
movsl
aas
and
pop
aad
call
divb
decb
rorl
into
cli
lret
out
mov
or
mov
cwtl
clc
push
stos
cltd
jl
mov
mov
cmpsb
pop
inc
sbb
das
lods
and
test
cmp
loope
dec
lahf
adc
fbld
mov
push
xor
inc
pop
iret
and
test
push
out
cmpsb
push
mov
ljmp
push
mov
mov
test
push
mov
aas
and
dec
aaa
gs
cmp
pop
fst
xchg
aas
je
pop
aas
std
mov
cmp
sbb
into
push
mov
or
jno
cmp
and
outsl
mov
dec
and
add
icebp
outsl
cli
push
sub
dec
sub
pop
add
mov
mov
aaa
jbe
jo
scas
cmp
rol
decl
mov
faddl
inc
lods
in
xchg
outsb
cmpsl
xor
jne
sub
xadd
xchg
in
and
lret
lods
clc
mov
outsb
sar
xchg
rorl
shl
xchg
sbb
enter
cmp
ja
in
add
cwtl
sbb
loope
mov
mov
sahf
push
aad
jle
jo
fldcw
mov
int3
jb
and
jb
std
fdivs
sbb
test
in
cmc
pop
xchg
dec
sub
pop
fistpl
ja
rcl
out
lahf
mov
aad
push
jp
pop
js
lret
lock
push
ljmp
pop
jecxz
addr16
cli
xlat
xchg
les
clc
cmpsl
in
and
loop
fwait
scas
lods
pop
mov
cwtl
cmp
addl
adc
xchg
pusha
pop
testb
xchg
inc
icebp
xchg
lret
cmp
mov
xor
out
cmp
je
push
push
inc
ret
sub
inc
or
lcall
pop
insb
dec
mov
fmull
dec
adc
or
mov
cmpsl
cmc
cmp
call
lods
jae
arpl
test
adc
xor
rcrl
jo
ja
jno
mov
push
cmp
sub
adcb
push
push
xchg
pop
sub
dec
cwtl
pusha
outsl
mov
lahf
lcall
outsb
or
bound
sbb
dec
leave
pop
cmpsb
xchg
stos
adc
pop
rcll
sar
sub
pushf
aaa
fs
xor
mov
pop
fbstp
aaa
sbb
and
leave
xchg
out
mov
lahf
push
mov
popf
hlt
ds
inc
pop
xor
cmp
dec
div
lods
inc
stos
xchg
xchg
fcoms
and
push
adc
mov
ja
adc
lea
jmp
daa
sbb
pop
pop
cld
mull
and
insl
mov
fcompl
lea
xor
sub
movsl
clc
out
xchg
scas
lcall
add
pop
stos
mov
inc
iret
call
in
mov
lods
xor
mov
stos
jo
pop
icebp
cltd
jle
daa
mov
xlat
push
rclb
sbb
or
sbb
jmp
cmc
push
xchg
pop
addl
jns
sbbl
cs
and
sbb
sub
pop
je
in
outsl
lcall
pop
mov
jecxz
jb
ret
and
loope
shlb
cmp
aas
cwtl
xchg
rorw
imul
push
or
iret
clc
pop
mov
fistpll
bound
xchg
js
sub
xorl
fidivrl
jne
lods
bound
mov
jp
sub
dec
cltd
push
es
mov
inc
xchg
outsb
adc
loop
xor
test
es
jns
push
stc
mov
push
lcall
mov
leave
int3
dec
ficoms
scas
push
push
decl
push
add
push
test
pop
jnp
sarb
out
xchg
mov
and
stos
lea
inc
repz
xchg
lods
arpl
xlat
and
dec
pop
xchg
lods
out
iret
jbe
sub
stc
loop
imul
arpl
or
or
jle
dec
lods
and
test
ss
mov
lods
shll
dec
pop
in
xchg
aad
dec
xchg
movsl
out
lret
outsl
inc
dec
pop
sub
push
pop
sub
add
adc
xor
outsl
cltd
mov
sbbl
cmp
loopne
shll
pop
adc
fisttpl
scas
ret
lret
ret
hlt
ds
adc
jl
call
in
lds
out
hlt
loop
xchg
ror
add
aas
adc
pop
fwait
sbb
sti
das
leave
andl
jno
pop
scas
test
orl
mov
lea
movsb
idivl
xlat
and
in
popf
insb
dec
stos
cli
and
shlb
pop
aad
add
push
sbb
popf
xor
aam
xchg
mov
lea
int3
pop
push
push
mov
jle
stc
mov
imul
add
ficoms
cmpsl
scas
ljmp
sub
push
fimull
mov
push
int
fldcw
or
and
add
out
seta
mov
cltd
mov
imul
jle
push
jmp
mov
dec
pop
imulb
sub
imul
ljmp
add
xor
mov
xchg
in
mov
and
lcall
test
or
cmpsl
jmp
dec
outsl
pop
aad
push
pusha
or
add
shrb
enter
lret
inc
push
push
push
stos
pop
fiaddl
into
out
int3
movsb
mov
jmp
fs
daa
cltd
int3
inc
jo
xor
sub
je
jecxz
sub
and
lds
add
mov
jmp
lahf
std
leave
pop
mov
setg
jg
shll
in
and
mov
outsb
dec
jmp
imul
pop
add
leave
lea
cmc
lds
dec
pop
cmp
sub
iret
daa
dec
cmp
jmp
mov
shrl
lock
mov
clc
movsl
out
fstl
dec
lds
dec
pop
lret
or
stos
cltd
pop
xor
pop
pop
jmp
or
or
mov
xchg
outsb
pop
and
cmp
or
repz
or
cld
repz
call
mov
xor
ret
push
pop
bound
lahf
insl
pop
arpl
outsb
xchg
xchg
mov
mov
mov
enter
pop
push
mov
movb
ret
mov
addr16
jg
xlat
pop
int
fcomps
fdivl
cs
dec
pop
xorl
push
pop
insb
jb
incb
nop
outsl
insl
fdivs
jl
cltd
gs
dec
ja
pop
pop
xchg
mov
fs
insl
insl
lahf
add
test
mov
xlat
in
scas
sub
sarb
lods
fptan
cld
xchg
lcall
sub
test
mov
jecxz
iret
and
pop
jb
lods
cmpl
lcall
insb
loopne
pop
lods
and
mov
dec
push
lahf
fistpll
or
pop
mov
cmp
iret
ss
jmp
cmp
cltd
mov
and
sub
lret
rol
adc
mov
inc
dec
stos
jge
sarb
imul
mov
out
mov
jp
adc
ret
popfw
xchg
call
xor
ret
dec
push
sub
das
scas
sub
int3
sbb
fldl
pop
call
and
jno
dec
and
lods
fisttpl
mov
add
adc
add
xchg
fisubl
or
or
nop
pop
xchg
xchg
xor
sub
test
outsb
pop
xchg
test
push
mov
inc
dec
dec
and
dec
maskmovq
notl
jns
dec
fstl
fildll
popa
dec
mov
fnstsw
bound
jecxz
push
sahf
test
ljmp
test
imul
pop
jecxz
or
mov
sbb
push
cmp
mov
sbbb
pop
adc
fs
ret
sbb
mov
mov
sbb
rclb
out
ss
pop
in
cwtl
jp
add
or
lods
cmp
add
xorb
stc
pop
mov
pop
lret
cmova
sbb
mov
std
xchg
es
leave
xchg
lea
xor
jnp
mov
pop
std
mov
pop
movsb
out
push
adcb
pop
imul
mov
ja
arpl
scas
mov
push
lea
out
mov
mull
mov
inc
adc
add
icebp
iret
clc
ja
dec
loope
lret
jecxz
push
movsb
std
ret
pop
not
mulb
pop
lds
cmpsb
pop
jge
mov
loope
adc
ljmp
add
das
cmpsl
jle
mov
lret
pushf
xor
leave
jmp
cs
shl
mov
sti
outsl
mov
sub
enter
sub
shrl
fildll
push
pop
orl
mov
ret
sbb
or
pop
push
fstpl
push
push
roll
hlt
es
lret
add
aas
fs
mov
mov
loopne
add
iret
lret
loopne
dec
sbb
je
mov
aaa
push
push
sub
sahf
add
ss
outsl
sbb
outsl
dec
jmp
adc
inc
shrb
les
scas
fmull
push
or
lret
sub
pop
ss
popl
mov
call
pop
scas
jno
loope
fstl
stos
sub
int
push
sbb
jmp
dec
ret
loopne
sarb
divb
jl
rcll
fucomip
sar
and
and
mov
dec
dec
mov
dec
pop
jne
iret
es
push
in
add
ss
rcrb
cmpsl
push
imul
xchg
xor
cs
or
push
insl
dec
ljmp
xchg
cmpsl
sub
jle
add
les
repz
push
test
shll
xchg
jnp
fsubl
in
xchg
jmp
arpl
mov
cmp
sbb
xchg
or
sub
add
lret
aad
cmp
jg
cmp
pop
push
mov
mulb
xchg
xor
sbb
dec
stos
mov
xor
dec
addr16
ret
mov
push
bound
mov
jmp
das
jno
push
fdivrp
xor
push
pop
xor
pop
les
movsl
adc
out
stos
xchg
stos
insb
cmc
push
mov
sbbl
test
dec
decb
push
xchg
into
jg
or
pop
mov
ror
or
cmpsb
imul
gs
insl
loopne
fs
inc
pop
pop
imull
mov
pop
jbe
and
in
cltd
sub
and
out
iret
fwait
or
outsl
gs
icebp
dec
in
pop
push
popf
in
jmp
enter
xchg
xor
xor
pop
leave
jne
and
cmpsl
jecxz
and
jp
cmpsb
outsb
popf
and
imul
repz
and
out
push
int3
rcl
iret
sub
pop
lods
sub
lahf
les
scas
in
iret
mov
mov
sbb
ficoml
push
gs
lea
aas
fcomip
adc
fwait
in
dec
movsb
in
gs
addr16
repnz
insb
insb
xchg
ror
leave
js
in
dec
ljmp
xchg
lock
mov
adc
decl
int3
daa
mov
push
push
pop
pop
or
mov
wbinvd
movsl
insb
xchg
or
mov
or
scas
push
dec
sub
mov
sub
push
or
shrb
es
push
push
faddl
push
movsb
inc
inc
or
xor
adc
and
jecxz
insl
shll
cltd
fadds
or
in
pop
iret
in
push
sbb
test
shlb
sbb
jp
data16
xchg
lahf
das
sbb
cltd
jb
mov
bswap
sub
pusha
std
lcall
popa
lock
fwait
call
jb
jecxz
cltd
stos
dec
lret
jnp
jecxz
testb
pop
pusha
sub
insb
repz
sub
sub
mov
in
scas
push
aam
in
push
pop
mov
mov
mov
dec
ficomps
test
xor
pop
stos
jne
cmpsb
cmp
pop
pop
fs
push
sbb
cmpsb
pop
rcr
std
cmc
scas
adcl
dec
mov
cltd
faddl
fldt
mov
xchg
int3
inc
xchg
popf
bswap
fistps
jmp
movsl
sub
jmp
add
inc
ljmp
jmp
lods
rcll
mov
movsb
push
mov
scas
and
xorl
push
imul
fildll
xchg
push
dec
arpl
jbe
in
pop
mov
test
insl
or
xchg
add
or
fistpll
push
dec
shrl
jnp
and
and
push
push
cltd
or
lret
and
sbb
jae
xor
scas
push
jecxz
ret
pop
mov
pop
enter
pop
shll
in
inc
fdivl
xchg
or
or
lods
pop
scas
jle
leave
sbb
push
stc
sub
mov
mov
xchg
js
imul
mov
add
jg
mov
fidivrl
insb
inc
repz
cs
sub
cmp
mov
sbb
lods
mov
adc
les
pop
pop
aad
and
adc
lods
call
sarb
not
scas
stos
xchg
push
dec
jbe
ret
mov
test
push
xchg
in
xor
fstps
mov
popa
jne
mov
scas
insb
sub
test
movsb
jl
shrl
sbb
jno
das
iret
ljmp
adc
dec
push
into
dec
insl
jo
sub
jne
enter
mov
jns
dec
push
xchg
leave
je
lahf
icebp
xchg
out
and
push
inc
lods
or
mov
sub
jp
or
mov
mov
mov
popf
xchg
insb
or
outsl
mov
xor
and
test
mov
fstps
push
pop
jbe
pusha
sub
sets
addb
jecxz
mov
aas
or
and
imull
ret
sbb
negb
notl
push
cld
or
pop
out
sbb
out
hlt
lcall
ret
daa
cmp
addr16
lret
jmp
sarl
sahf
mov
test
mov
dec
ret
jg
cmpsb
inc
adc
lds
movsl
or
push
jno
mov
lods
leave
mov
inc
pop
test
pop
in
lds
aaa
mov
push
ror
mov
out
add
rcl
or
push
stos
das
mov
inc
lcall
callw
sahf
or
push
or
mov
das
sbb
aam
outsl
rol
leave
sub
arpl
ss
or
data16
mov
pop
popf
das
stos
push
dec
push
ret
scas
call
mov
test
inc
cmp
mov
jbe
inc
inc
rcr
lret
mov
mov
stos
daa
in
imull
jns
pop
pop
push
jg
pop
sub
cmpsb
das
jae
lds
les
out
pop
leave
daa
addr16
jmp
enter
pop
dec
add
pop
mov
lret
das
ficompl
push
movsl
inc
cltd
mov
adc
into
or
mov
mov
cmp
mov
call
loop
or
cmp
push
mov
das
mov
out
test
jnp
xchg
shrl
scas
icebp
cmp
jg
jns
mov
pop
fcomi
cltd
jle
pop
lods
dec
psrlq
mov
mov
pop
repz
push
lret
adc
js
out
xchg
fistpll
jmp
xchg
mov
cmp
pop
adc
cmp
jge
sub
shrl
scas
das
testl
sbb
adc
and
bound
sti
movsb
jg
stos
lock
inc
pop
in
mov
pusha
cmp
dec
pop
cltd
rol
or
cmp
adc
lahf
test
shrb
mov
into
pop
stc
cmp
sub
mov
flds
fs
cmpb
repz
add
lret
mov
outsl
mov
adc
mov
sub
mov
mov
mov
jp
xchg
out
daa
inc
mov
nop
sub
fs
pop
in
fidivrl
add
lahf
mov
cld
gs
stos
dec
and
cld
adc
jb
add
mov
push
jae
lret
jne
mov
push
sub
mov
push
bswap
ficomps
outsl
repz
adc
push
xor
aad
aad
testb
cltd
xchg
mov
imul
int3
mov
fbstp
loop
mov
and
push
xor
outsb
les
inc
xor
sarl
dec
dec
movsl
mov
cmpsl
jg
mov
aad
repz
dec
dec
mov
sbb
sahf
add
push
fnstenv
frstor
mov
lret
jnp
movsl
xchg
int3
and
pop
push
inc
lcall
mov
mov
inc
sub
popf
stc
cmp
or
js
adc
sarl
call
pop
mov
mov
ficoml
imul
iret
lock
pop
lret
add
sbb
jge
jbe
leave
subl
jnp
mov
cmp
call
or
ja
loopne
roll
cld
rcrb
add
xchg
dec
mov
xor
sub
inc
es
dec
inc
or
lcall
sti
and
scas
addb
xor
jne
jmp
enter
mov
cli
mov
mov
mov
mov
or
mov
lods
dec
cmc
bound
outsl
ret
andl
jge
pop
cmp
push
mov
sbb
jbe
lahf
adc
psubsb
repz
lods
popa
ljmp
ds
xor
sarb
mov
and
cmpsl
lods
hlt
mov
pop
xor
sbb
xchg
fisttpll
test
and
sahf
sbb
sub
inc
lock
mov
lea
mov
mov
or
rclb
mov
mov
dec
xlat
inc
into
push
aas
inc
sahf
and
rcrl
in
or
notb
repz
jge
lea
repz
jp
ds
jp
push
int
pop
dec
movl
jbe
push
push
inc
inc
mov
js
mov
push
xchg
addr16
mov
std
mov
in
push
or
or
xlat
dec
or
imul
pop
hlt
lods
push
push
inc
mov
jmp
pop
lods
dec
or
ficoms
adcl
out
iret
cmc
pop
aad
sbbl
cmp
push
js
stos
int3
loope
cwtl
pop
jl
pop
idiv
roll
daa
push
pop
push
mov
push
jmp
fs
imul
mov
sbbb
xchg
call
pop
cmp
sbbl
aad
jmp
xor
cwtl
rolb
stos
push
fbld
push
inc
xlat
xchg
shr
cmp
aad
sbb
lods
fcmovnu
into
xor
xchg
mov
pushf
mov
sub
aam
or
mov
repz
arpl
lock
lods
mov
mov
scas
int
ss
xchg
fnstsw
and
and
jge
nop
and
hlt
cs
lcall
out
lods
addl
pop
test
out
es
cmpsb
push
jl
imul
ret
ja
push
inc
insl
sub
test
pop
out
jecxz
dec
xor
ret
mov
xchg
stos
in
push
stc
cmc
das
or
das
cs
imul
fimull
jmp
rorb
push
scas
and
push
push
clc
or
inc
or
test
pop
sti
int3
aas
and
bound
imul
mov
lods
cs
outsb
xchg
ljmp
add
mov
dec
mov
dec
ss
or
test
call
lea
subps
or
test
aam
leave
pop
or
pop
imul
cmc
out
add
stos
pop
push
mov
fwait
mov
movsb
rcrb
enter
stos
js
mov
leave
push
loop
jo
mov
popf
pop
mov
mov
push
addr16
hlt
mov
or
jns
and
std
mov
xchg
roll
xchg
push
jge
mov
stos
xchg
pop
add
fdivrl
ret
pop
or
or
dec
loope
xchg
lock
jbe
repnz
adc
loope
add
xchg
imul
cmpsl
adcb
pop
stc
xchg
cld
popf
xchg
cmp
into
in
cwtl
out
cmp
gs
jecxz
mul
sub
pop
add
xchg
xlat
loop
sbb
das
das
mov
mov
subl
inc
aaa
in
jecxz
fists
push
movsl
jno
cmp
out
sbb
cmp
sub
mov
mov
outsl
jge
add
je
push
xchg
mov
sahf
mov
imul
mov
mov
jmp
jp
cmpsb
sub
pop
adc
xchg
fs
mov
fwait
int3
rcll
sub
into
pop
sub
mov
mov
xchg
fs
xlat
xchg
lahf
dec
or
sub
mov
stos
xor
xor
into
in
shlb
fsubrl
sahf
xchg
fxch
out
cli
addr16
ffree
sarl
les
stc
test
fmul
addr16
jp
in
cmpsb
addb
and
cwtl
cld
xchg
sbb
and
pop
mov
iret
sbb
iret
sbb
loop
sbb
mov
sub
outsl
mov
mov
test
adc
mov
or
stos
arpl
dec
xor
xor
sarl
sbb
aad
aaa
inc
mov
or
jg
mov
pop
lahf
clc
lods
pop
mov
dec
bound
in
int
jne
mov
pusha
or
popw
lahf
dec
cmp
lret
and
inc
test
scas
jge
cli
fisubrl
pop
dec
jae
loop
push
outsl
push
sub
outsl
mov
subb
mov
sbb
es
and
aas
mov
jle
jno
jg
add
test
test
fstl
push
push
sbb
or
out
mov
push
cmpsb
xchg
mov
ret
sub
sub
pushf
lds
mov
and
jae
andl
mov
ds
arpl
mov
mov
mov
pop
insb
loop
mov
clc
loopne
mov
sub
mov
lea
leave
push
fwait
daa
test
push
mov
mov
and
xchg
data16
xlat
xchg
cmp
pop
roll
pushf
add
xchg
or
mov
and
xchg
idivl
dec
gs
out
daa
or
xorl
lret
pop
xchg
push
sbb
mov
mov
daa
lds
dec
ja
jno
inc
gs
in
mov
ljmp
xchg
jb
xlat
xor
adcl
imul
add
gs
pusha
ficomps
jp
addr16
pop
jmp
xor
mull
or
sub
std
stos
fadd
inc
daa
sub
pop
mull
test
adc
int3
mov
loopne
rcrb
xorb
mov
lea
mov
and
sbb
int
sub
dec
int3
aad
ret
xchg
outsb
into
mov
std
pop
cltd
and
jge
iret
adc
jp
popl
adc
and
mov
push
lods
pop
loopne
ja
iret
sub
and
push
imul
pop
cmpsl
lcall
xchg
dec
push
popf
dec
pushf
push
shll
insl
adc
call
xor
scas
mov
push
sub
fbld
dec
push
xchg
test
sbb
xchg
jecxz
aam
xchg
sbb
test
data16
inc
into
mul
xchg
or
jl
xor
mov
cmp
leave
aam
jbe
mov
lods
inc
dec
arpl
mov
mov
dec
test
mov
or
ljmp
push
and
data16
adc
add
pop
lods
add
int3
femms
cmp
mov
jg
rorl
rclb
mov
aad
rcrl
sbb
imul
pop
stos
pop
into
movb
scas
lcall
pop
rorl
leave
or
jns
xchg
pop
jne
lcall
lahf
push
push
pop
push
subl
add
cmp
pusha
test
xchg
dec
ds
stos
cmp
jns
mov
imul
xor
mov
xchg
fcmovne
or
pop
xor
in
mov
push
sbb
test
lcall
lret
dec
and
inc
shlb
cmp
in
pop
call
test
add
and
cmp
aaa
adcl
jp
mov
loop
mov
push
bound
out
sub
xor
test
outsb
mov
mov
dec
xor
sti
push
icebp
test
aas
lods
mov
addr16
sub
sbb
pusha
or
sbb
cmp
rorb
sahf
xorb
jnp
enter
pop
inc
mov
jb
mov
loope
mov
jbe
mov
lret
sbb
inc
pop
mov
cs
pop
aam
pop
inc
push
fstpl
fwait
test
fldlg2
jge
push
outsl
cmpsl
out
lret
push
movsl
es
cmp
mov
popf
imul
sub
add
data16
stos
scas
sbb
lds
sub
inc
jg
stos
mov
loopne
icebp
sbb
mov
std
mov
pop
fneni(8087
repz
dec
dec
movb
cli
xchg
xchg
xor
int3
mov
dec
daa
mov
push
pushf
push
shll
pop
leave
cltd
rorb
pop
imul
sbb
xchg
mov
push
dec
jmp
push
into
jmp
das
xor
mov
mov
das
popf
psllq
in
movups
mov
push
pushf
cmp
ja
or
adc
or
shlb
xchg
cmp
pop
adc
push
xlat
push
rclb
fsubrl
outsb
and
fidivrs
dec
cmp
mov
push
sahf
adc
popa
ljmp
lahf
test
xchg
std
xor
cmp
cli
ja
shrl
fiadds
mov
and
and
jl
fsubr
jmp
mov
pcmpgtw
cli
stos
pop
popa
int3
scas
cld
int3
xor
sbb
sbb
xchg
sub
push
add
dec
sub
lea
mov
xchg
or
dec
xlat
mov
stc
and
cmp
pop
in
outsb
sub
inc
cmc
push
lods
dec
rorl
add
out
add
scas
cmp
adc
in
pop
mov
adc
nop
aas
insb
repnz
es
les
lds
movsb
xor
imul
mov
std
fs
lret
inc
fadds
stos
push
out
daa
jne
sbb
dec
mov
rorb
push
pop
jmp
add
add
fnstenv
cmp
xor
mov
xlat
inc
xor
scas
inc
loope
fldcw
mov
mov
jns
enter
rcll
call
xchg
jo
in
inc
ret
imul
fsubl
mov
shrb
pop
rol
data16
jl
loopne
xchg
lret
enter
popa
xchg
int3
jne
add
std
lret
nop
xchg
jnp
mov
aaa
jp
mov
aam
adc
ss
dec
out
inc
movsl
mov
inc
xor
bswap
je
mov
pop
lds
adc
mov
shll
mov
dec
jbe
aas
stos
cmp
mov
outsl
cmc
push
in
aam
call
sub
int
or
mov
sub
jl
pop
mov
and
in
adcb
mov
in
and
xchg
fistpll
roll
mov
add
dec
cs
push
jae
daa
mov
mov
sub
xchg
jmp
maxps
pop
pop
jp
push
jmp
mov
fisubrs
cs
adc
and
sti
xchg
jb
popa
ja,pt
inc
sbb
lea
sub
mov
pop
jle
sbb
daa
jp
mov
leave
in
and
cmp
cltd
xchg
or
fwait
xchg
insb
jg
into
push
lret
and
mov
cvttps2pi
mov
push
adc
into
call
fisttpl
inc
dec
and
lods
int3
push
scas
movsl
or
mov
insb
cmp
into
add
fsts
sub
imul
cmp
mov
into
hlt
pop
inc
mov
pop
dec
test
in
outsl
add
xchg
outsb
mov
push
xchg
popl
inc
sub
out
push
cmp
inc
push
push
cwtl
xor
lea
xchg
sub
inc
adc
mov
shl
out
insl
xchg
mov
adc
adc
lods
mov
jl
sahf
fdivrl
ret
inc
outsb
sub
or
jmp
adc
das
pop
pop
sub
call
xchg
push
mov
aad
jg
pop
pop
out
or
scas
pop
iret
cs
mov
jl
movsb
fmull
fst
mov
jge
movd
stos
icebp
sub
test
mov
pop
cltd
cmp
fadds
sub
filds
pmaxsw
jp
adc
sahf
aas
into
loopne
sbb
or
int3
jmp
shll
mov
mov
xorb
das
pop
push
icebp
out
add
or
push
jle
int
faddp
add
push
lea
into
imul
jo
or
jg
loopne
stos
xchg
jb
pop
or
xor
call
mov
push
iret
push
aaa
jmp
nop
jae
loopne
mov
ja
xor
leave
ljmp
mov
mov
bound
sbb
mov
or
xchg
mull
jnp
xchg
jb
cmp
jae
add
xorl
jno
in
cmp
scas
icebp
pop
push
loope
xchg
push
jmp
mov
es
or
lahf
add
sahf
fisubrs
ljmp
cmp
inc
mov
das
movswl
xchg
iret
mov
dec
jmp
clc
xor
sub
fcomi
ret
cmp
dec
pop
mov
cmc
pop
js
hlt
pop
imulb
push
dec
mov
repnz
push
mov
inc
loop
stos
aam
lret
in
lds
loop
inc
rcrb
sub
dec
push
in
popf
ss
mov
sbb
pushf
xor
frstor
aad
sub
shrb
mov
psraw
xchg
pop
or
add
mov
or
aaa
xor
movsb
push
movsb
inc
xlat
jp
cltd
lcall
and
sbb
arpl
xchg
iret
gs
mov
dec
jmp
pop
call
jecxz
and
push
dec
adc
mov
or
mov
lret
pushf
sub
jmp
mov
int3
xchg
leave
andl
cwtl
jbe
mov
mov
pop
pop
xchg
add
fs
or
cmpsl
jg
mov
dec
dec
jmp
dec
ss
push
pop
lcall
sbbl
inc
push
out
inc
sub
rcrb
lret
lods
adc
in
aad
pop
lods
xor
jno
xor
adc
sub
mov
ss
sbb
xor
int3
xchg
pop
lock
xchg
and
cmp
sti
fisubrs
pop
mov
cmc
ja
cmp
jne
lea
jo
jle
mov
inc
lods
add
push
outsb
aad
adcl
popf
fiadds
push
adc
mov
xor
test
stc
sub
inc
jb
mov
fwait
sbb
aam
push
fcoms
ja
mov
inc
shll
shlb
enter
pop
push
in
sarl
inc
pop
add
mov
push
das
hlt
xchg
cli
xor
popa
lds
mov
sbb
pcmpgtd
mov
in
sbb
adc
cltd
ret
imul
insl
int
dec
popf
fsub
incl
jns
nop
scas
or
lods
int3
repnz
imul
enter
imul
xlat
push
popf
mov
lock
inc
loop
dec
push
in
push
popf
popa
cmpl
or
frstor
ret
inc
dec
and
test
ss
negl
xchg
adc
fucomip
mov
mov
add
xorps
add
push
or
cld
mov
mov
jle
cs
and
push
mov
pop
insl
dec
xor
dec
sbb
push
enter
xchg
scas
dec
data16
dec
es
pop
lret
inc
mov
xchg
sub
inc
push
pop
fisttpl
mov
mov
pop
or
push
xor
aad
aad
xchg
cli
in
lahf
sbb
push
mov
dec
pusha
xchg
mov
mov
cmpsb
cmc
push
stos
lea
outsb
add
rolb
in
call
bound
jmp
data16
fucomp
in
je
jae
mov
bound
cs
dec
cmp
or
cmp
scas
inc
cmpsl
push
movsl
jb
hlt
lret
out
ds
pop
out
mov
outsl
popf
pop
pop
pop
flds
add
jnp
xchg
ljmp
jno
lret
adcb
ss
jle
pop
add
or
mov
push
leave
inc
mov
xor
adc
dec
xor
imull
dec
in
jne
sbb
pop
aam
cmp
scas
add
pop
cwtl
pop
mov
frstor
ret
jno
dec
add
jb
cmc
sbb
imul
add
into
mov
movsl
aam
mov
testl
lds
inc
and
sub
xor
add
lret
mov
push
xor
loopne
leave
insl
shll
inc
andl
aam
lds
sbb
push
xor
popf
xchg
push
dec
test
ss
push
sbb
out
sub
icebp
xor
push
and
xor
xor
fwait
inc
and
call
in
cltd
push
stc
jle
ljmp
lods
or
aas
xchg
dec
push
sub
fidivrs
daa
dec
leave
jl
les
repnz
mov
or
or
push
test
pop
std
imul
ja
pop
dec
call
mov
pop
mov
pushf
ds
imul
mov
push
fstpl
jno
subl
push
test
fadd
cwtl
jae
mov
cmpsl
lea
fisttpll
mov
push
dec
jne
pushf
push
pop
pop
xchg
rcrl
pushf
jecxz
pop
scas
adc
jg
jnp
mov
sahf
cmp
pop
inc
pop
lret
scas
jae
push
jmp
pop
mov
jo
push
movsb
or
mov
shlb
divb
test
enter
pushf
inc
lock
mov
shlb
call
fdivrl
pusha
mov
inc
and
lods
fidivl
sub
data16
pop
sahf
aas
adc
and
lahf
movsl
cmp
push
jmp
outsb
nop
hlt
fmuls
lahf
test
insb
mov
pop
ret
push
jp
push
orb
adc
add
scas
jno
lret
inc
or
push
xlat
divb
dec
mov
hlt
mov
pop
xchg
lret
xchg
cmp
xchg
rcll
jb
push
xchg
sub
fucomip
mov
div
ljmp
stos
mov
adc
jb
sbb
incl
in
and
xchg
in
lods
cwtl
push
jbe
and
mov
dec
adc
fs
int3
cmp
dec
dec
in
push
call
sub
xchg
push
popa
mov
iret
rclb
sub
cmp
mov
nop
push
cmp
xor
pushf
call
jno
mov
add
cmp
ds
jbe
or
and
fstps
ljmp
or
dec
popf
jno
sub
test
add
rclb
add
or
add
sbbb
jno
or
mov
lods
pop
jno
sbbl
clc
incl
pop
mov
push
fistpl
in
fwait
inc
dec
xor
mov
test
sub
into
insl
sub
jg
pop
fisubl
mov
xchg
cltd
cmp
scas
scas
imul
lods
mov
es
outsl
js
mov
cmpsl
adc
ljmp
out
push
fsubl
sti
push
scas
dec
outsl
xor
ret
cmp
add
dec
in
cmpsb
ret
xor
cwtl
test
call
push
pushf
int3
xor
ret
shr
leave
ret
mull
xlat
loop
popa
mov
jmp
jnp
loop
lahf
cld
scas
add
and
xor
test
fdivrp
xor
cmp
andl
sti
shll
ffree
ret
jmp
fcmovnbe
cli
dec
pop
pop
lea
pop
aad
shrb
and
test
pusha
lods
lds
and
fs
aaa
loopne
out
mov
or
popf
call
xlat
std
lods
fsubl
bound
scas
cmp
and
jnp
sarb
lcall
das
les
mov
lods
lods
imul
popf
repz
pop
iret
aad
imul
mov
aam
cmp
aam
mov
dec
pop
ret
ror
cmp
jl
xor
insl
shlb
testb
or
cs
shlb
aas
xor
cmpb
pop
sbb
push
inc
push
scas
sbb
push
dec
cmpsl
pop
xchg
xor
mov
movsb
enter
imul
sti
jne
mov
push
cmp
lods
xchg
or
aaa
popf
fisttpll
push
pop
xchg
scas
xor
mov
add
orl
dec
inc
dec
addr16
jmp
fwait
xlat
int3
cltd
inc
cmp
es
ja
adc
iret
pcmpeqw
push
xchg
mov
call
push
jp
std
and
sub
lods
lret
pop
add
scas
call
xor
iret
popa
push
and
sti
jmp
xchg
pop
xlat
add
js
xor
and
pusha
mov
stc
addr16
dec
adc
clc
stc
scas
fdivrs
xchg
data16
ficompl
scas
loopne
filds
cmp
push
pop
xchg
xor
dec
sub
or
jp
lds
xor
sbb
cwtl
int3
andl
and
pop
fisubl
imul
jae
fxch
dec
push
mov
pushf
jns
pop
mov
lahf
ljmp
pop
pop
aad
enter
int
gs
out
mov
xor
ja
push
mov
or
adc
mov
popa
ret
sbb
ret
jb
add
icebp
enter
mov
lock
aad
lock
xchg
push
filds
ds
cs
cmp
pop
repz
or
mov
jle
aaa
pop
push
sub
pop
pop
jp
push
lret
int3
imul
test
xor
or
jp
cltd
and
stc
add
sbb
add
lock
loop
int
mov
inc
sub
jmp
aas
mov
mov
movsb
je
addr16
mov
push
xorb
adc
and
cmp
cmp
sub
iret
call
inc
iret
jecxz
cmp
pop
mov
movsl
dec
push
das
xor
mov
subb
cmpsl
xchg
xchg
cwtl
push
sub
leavew
mov
test
cwtl
iret
es
dec
or
cltd
shl
xchg
clc
cmp
into
in
adc
adc
jne
add
sub
pop
mov
cmp
push
iret
xchg
sub
xchg
cmp
sar
shrl
pusha
pop
push
cmp
inc
mull
mov
pop
jne
sub
sbb
hlt
rol
mov
pushf
dec
jns
push
jns
pop
mov
imul
ss
inc
bound
gs
not
sub
mov
push
and
scas
add
mov
int3
pop
xor
add
mov
aas
jnp
lret
lret
or
fcmovbe
out
sub
cli
dec
xchg
mov
push
push
and
out
xor
fisubrl
push
stc
push
inc
and
pop
sub
aad
cmpsl
or
cmp
xchg
mov
or
jne
push
xor
fists
pop
sub
add
sbb
and
icebp
imul
xor
movsb
xchg
dec
popl
repz
dec
shrb
lcall
fildl
mov
sub
enter
int
sub
je
leave
loope
cwtl
jge
orl
xor
sub
lret
and
enter
rclb
jae
adc
pusha
pop
dec
push
pushf
ss
leave
sub
pop
daa
pop
out
adc
pop
xchg
loop
lea
roll
shll
das
cmpb
leave
subb
aam
inc
or
mov
and
fdivl
pop
push
dec
daa
cmp
lret
xchg
insl
xor
test
and
or
aad
or
je
mov
pop
dec
dec
mov
xchg
push
popa
negl
jecxz
push
add
xlat
pop
cs
jg
fldenv
sti
dec
cmpsl
scas
loop
aas
cmp
xchg
outsl
push
jae
xor
fsts
fs
hlt
xor
in
lea
pop
adc
mov
leave
mov
mov
push
push
out
out
sti
jp
popa
mov
lret
popa
jecxz
jmp
xchg
adc
or
mov
lret
mov
push
xchg
and
or
pop
sbb
xchg
mov
dec
jmp
out
repnz
adc
add
cmpsl
xor
das
adc
and
sahf
gs
xchg
leave
outsb
fcoml
punpcklwd
test
rcl
mov
adc
out
xor
xchg
cmpsb
dec
mov
fs
xchg
xchg
cmp
sub
pop
je
decl
and
idivl
sti
out
in
mov
push
sub
and
in
inc
imul
mov
push
push
mov
aam
movaps
outsb
mov
out
adc
lret
pop
fistl
pop
in
int3
in
push
setns
xchg
into
push
stc
add
rdpmc
daa
xchg
fmul
data16
mov
out
std
pop
cmpsb
inc
pop
daa
pop
cmp
mov
cmc
push
ret
mov
rol
jne
xor
xor
lahf
jnp
in
insb
not
dec
adc
mov
jmp
or
fs
test
pop
or
cmp
fsubl
cmp
test
jmp
add
or
adc
jp
test
inc
outsl
push
test
js
mov
btsl
jmp
xchg
fwait
lods
stos
sub
test
pop
mov
outsb
in
adc
sahf
xchg
mov
test
pop
jge
es
xchg
xor
push
in
mov
dec
lret
out
in
mov
fnsave
mov
inc
mov
loope
lret
movsb
repz
xor
xchg
pop
push
jno
inc
subl
adc
push
sub
test
loope
test
dec
pop
fucomp
add
test
test
cmp
inc
fldl
sub
aas
int
xchg
shlb
fiadds
pop
cmpsl
pop
pushf
repz
push
dec
test
fidivl
cmp
xor
add
add
xlat
adc
lahf
adc
cmp
jmp
dec
push
xor
cmp
sbb
dec
filds
push
mov
fists
call
inc
fwait
inc
push
push
dec
jnp
sub
daa
xor
aaa
fcmovnb
push
cmp
push
stc
in
cmpl
movsb
xchg
push
sbb
je
push
dec
mov
cld
ljmp
pop
mov
adc
nop
or
pushf
je
cmp
ljmp
jle
test
in
push
adc
jo
pop
dec
outsl
push
pusha
es
add
loopne
sbb
cmp
dec
mov
jne
or
clc
lock
add
std
xchg
mov
jp
push
cmp
push
inc
jae
mov
xchg
je
pop
dec
adc
mov
adc
jns
or
adc
test
jno
add
icebp
or
cmpsl
call
mov
xlat
loope
or
sbb
jae
xchg
xor
cltd
or
negb
mov
adc
lods
and
pop
mov
lret
inc
jl
es
or
push
loope
loopne
mov
repz
push
out
push
pushf
bound
push
jns
rorl
mov
int3
pushf
mov
jmp
sbb
inc
pop
sahf
testl
push
and
lods
xor
mov
inc
mov
inc
mov
inc
aad
sbb
fstps
xchg
or
and
les
sub
lea
popa
inc
cmp
ss
ja
imul
test
iret
dec
out
and
call
outsl
pushf
push
mov
ja
fbstp
mov
lcall
pushf
ror
test
or
xorb
push
jo
mov
sti
push
jae
mov
inc
mov
push
push
in
mov
imul
enter
xor
cmc
add
adcb
or
andb
loope
lea
xor
cmpsb
xchg
inc
shrl
data16
lret
mov
mov
cmpsb
lahf
xchg
jmp
inc
cltd
and
fsub
clc
push
shrd
pop
mov
imul
mov
mov
push
pop
sahf
or
pop
outsb
aaa
fstpt
mov
test
pop
pop
cs
sbb
jg
cwtl
out
xchg
xchg
flds
inc
jb
mov
push
stos
loopne
mov
xor
ftst
aam
adc
clc
mov
test
in
test
sti
fwait
pop
or
or
and
cld
mov
scas
fdivl
adc
arpl
pop
cmpsb
xor
xchg
jle
mov
cmp
push
insb
outsl
pop
sub
filds
imul
inc
add
adc
sti
mov
outsl
xchg
fchs
sbb
fs
test
jle
insl
inc
cmc
xchg
push
and
outsl
xor
test
repnz
aaa
std
sub
in
fcomps
out
sub
test
jecxz
push
outsl
loop
int3
xchg
loopne
jg
scas
repz
jne
pop
sbb
or
pop
xchg
std
sbb
or
lcall
dec
dec
inc
scas
ret
inc
rcrb
outsl
aaa
cwtl
jmp
dec
pop
dec
fneni(8087
cwtl
pop
cs
stc
xor
lock
divl
fdivrs
or
in
sbb
pop
rcr
outsb
sbb
xchg
pop
sub
jne
dec
push
push
push
stos
popa
lea
fildll
in
push
out
fs
fcomps
in
pop
cmp
or
into
xchg
sub
daa
sbb
inc
shl
js
mov
or
jmp
dec
sar
movzbl
mov
out
mov
filds
mov
lods
mov
cltd
xchg
das
cmp
add
scas
fcoml
push
cmp
mov
bound
stc
xchg
movsb
dec
pop
dec
push
scas
nop
leave
push
gs
dec
repnz
shlb
mov
cmpsb
out
or
xchg
outsb
push
negl
scas
dec
lret
cli
adc
stc
push
imul
iret
push
mov
test
imul
les
push
bound
aad
std
repz
pop
daa
int3
dec
in
cmpl
ss
jp
push
rorb
lods
sub
in
or
jns
cmp
push
stc
sarb
fisubl
cld
mov
or
lods
push
shr
cmp
aad
jp
xlat
xor
sbb
mov
sti
mov
sub
jp
gs
dec
out
fcomps
adc
iret
sbb
jecxz
push
push
lret
pop
movb
rorb
test
add
xor
xor
fimuls
add
sub
add
xchg
addr16
rclb
mov
test
cmpsb
pop
sbb
xor
and
int3
xchg
fsubl
movsl
mov
cmpsl
loopne
mov
ret
push
cwtl
in
insb
cmp
sbbl
aaa
push
pop
comiss
dec
add
push
or
repnz
mov
pushf
ficompl
cld
inc
gs
in
mov
les
mov
shll
in
xor
rcrl
nop
mov
or
loopne
pop
cltd
adc
out
test
pop
hlt
mov
inc
inc
pop
cmpsl
mov
fcoml
cmp
sti
cltd
dec
mov
pushf
lret
sub
js
xchg
inc
push
push
push
pop
fs
mov
mov
jmp
mov
mov
jb
inc
push
jnp
aaa
outsb
push
sbb
xor
dec
shll
mov
je
int
clc
jo
pushf
mov
ret
jle
and
mov
ljmp
cltd
lret
or
lret
xchg
rorb
pop
repnz
fsubl
sub
or
push
pushf
mov
shll
lret
ret
mov
lods
mov
imul
or
in
int
push
push
jle
out
pop
xchg
push
dec
scas
andl
mov
sarl
adc
mov
xchg
lds
xor
stc
mov
loopne
jno
inc
cwtl
imul
rcr
add
nop
test
jns
loope
xlat
cs
mov
je
mov
sbb
rcr
clc
sbb
jge
sbb
mov
pop
cs
push
fbld
jno
xchg
jno
pop
jle
inc
cmpsb
imulb
mov
lea
jecxz
push
es
movl
push
js
jge
push
out
mov
sub
add
inc
adc
sbb
orps
mov
pop
aaa
fwait
orl
jecxz
fbstp
mov
clc
pop
xchg
mov
mov
adc
icebp
pop
rcrb
popf
mov
outsb
add
sub
pop
call
divb
xor
pop
mov
mov
xchg
cmc
jmp
out
mov
sti
pushf
jecxz
rorl
in
add
mov
loope
test
sub
sbb
sbb
and
push
sbb
pop
out
xchg
int
sahf
jnp
outsl
loope
popa
pop
leave
mov
clc
lcall
push
lret
jg
cmp
push
lock
inc
negb
push
or
inc
mov
mov
adc
cltd
push
mov
xlat
popa
test
cmpsl
in
inc
movsl
mov
inc
ds
test
sbb
xchg
push
cmp
jmp
stos
add
stos
jne
or
cmp
filds
ret
xor
adc
iret
push
les
and
in
cmp
mov
int
idivb
sub
xchg
clc
jmp
xchg
sbb
dec
in
flds
in
test
push
lods
cwtl
outsl
aas
pop
mov
in
sahf
pushf
cwtl
sub
call
sbb
inc
daa
popf
jge
test
dec
loope
jae
aad
es
jg
jo
push
dec
or
outsb
ret
sub
dec
jecxz
push
into
int3
outsl
push
je
mov
mov
ret
rcrl
xchg
lcall
sub
dec
push
sub
inc
sti
push
sub
insl
mov
dec
clc
fs
dec
leave
mov
adc
mov
cld
dec
inc
sub
out
sbb
mov
insb
into
lds
and
sub
lret
in
pop
and
dec
xchg
test
popf
lods
and
inc
push
push
mov
and
inc
cwtl
stos
sbb
pop
xchg
ds
mov
adc
popa
out
xor
and
cmp
imul
or
rcl
adc
into
dec
sub
fimuls
negl
sub
pusha
pop
ficomps
mov
mov
xlat
jns
cmpsb
cmp
stos
pop
inc
stc
mov
dec
std
sub
dec
jge
xor
push
jnp
ss
jae
jae
push
inc
adc
arpl
push
sub
maxps
lock
inc
and
xor
mov
rolb
or
inc
and
into
xor
jl
xchg
push
jmp
aas
out
add
lret
notb
pop
pop
mov
dec
popa
out
jmp
xchg
mov
ja
fsubrl
call
mov
outsl
cltd
cmpsl
inc
sub
inc
xor
add
mov
das
ljmp
pop
das
lret
sbb
je
ficomps
fistpl
fistpll
fsubr
mov
andb
mov
pop
sub
addr16
test
cwtl
int3
pushf
loop
enter
mov
es
inc
sub
pop
dec
push
jmp
or
repz
mov
inc
xor
xlat
cmpsl
pop
mov
sub
outsl
test
int
dec
lcall
mov
dec
nop
sub
sarl
push
out
filds
test
jp
adc
lahf
cmpsb
inc
pcmpgtb
lods
or
movq
inc
mov
cmp
inc
loope
lret
push
das
sub
pop
fnsetpm(287
cs
es
sbb
iret
into
aam
in
int
out
dec
sub
sub
push
out
pop
scas
nop
cmp
push
push
out
sbb
call
test
rorl
leave
jmp
loop
jmp
jae
les
push
loope
das
or
lret
inc
sub
cmp
test
xor
dec
in
jno
out
fmull
aam
add
inc
sub
push
in
orb
shlb
out
jle
fs
mov
outsl
xor
das
mov
mov
inc
jle
jb
lds
lahf
xor
out
mov
mov
ljmp
popl
mov
dec
pop
cwtl
lcall
test
stc
inc
in
dec
js
mov
scas
je
xchg
add
outsl
dec
push
mov
repz
movsl
stos
adc
ret
jge
add
ret
repz
shlb
or
mov
xlat
por
ret
lret
or
icebp
cmp
outsb
cs
adc
cmp
fs
and
mov
inc
int
push
mov
movsl
in
mul
arpl
xor
ret
lods
add
stos
fstp
mov
adc
shr
cmpsl
jbe
mov
mov
push
jl
jmp
jmp
in
push
mov
mov
jae
das
sbb
pop
cmpsb
dec
sub
dec
xchg
inc
mov
imul
fwait
xchg
imull
aaa
call
dec
out
cwtl
inc
dec
aaa
lret
shrl
das
stc
scas
or
lret
push
sarl
mov
jo
out
mov
clc
outsb
stos
inc
out
mov
push
mov
push
clc
std
lods
shll
xor
jmp
into
ret
popl
out
cmp
push
rorb
pushf
imul
adc
push
loopne
push
dec
cmp
lock
mov
sbb
in
out
dec
xor
push
mov
lahf
add
dec
fcmovne
pop
test
pop
jae
sub
jns
fs
inc
push
icebp
adc
or
mov
adc
mov
sub
dec
sub
pop
aad
daa
push
insl
xchg
lods
pop
in
out
lret
pop
out
clc
inc
into
leave
jbe
iret
pop
mov
outsl
or
aad
inc
sub
xor
dec
sahf
addl
mov
lds
xchg
xor
stos
cwtl
dec
fwait
mov
pusha
mov
fstps
dec
pop
sub
loop
in
xor
dec
in
or
adc
lods
repnz
enter
jecxz
mov
push
rolb
inc
pop
jecxz
loopne
xchg
and
adc
cmp
inc
in
adc
cs
movntq
rorl
cli
mov
out
in
aad
sub
lea
xchg
adc
gs
fiadds
fnstcw
scas
in
push
jg
jecxz
sub
jg
cmp
jno
xchg
or
dec
rorb
jb
test
fdivs
add
dec
fldenv
pop
cli
sub
xchg
imul
fisubl
bnd
push
jecxz
movd
rcr
test
inc
push
jecxz
jbe
jmp
cmp
insb
push
aas
adc
xchg
dec
ds
push
inc
push
fsts
jno
sub
ficompl
pop
mov
mov
push
mov
jae
and
call
cli
lds
gs
sub
and
cmp
xchg
xchg
div
cwtl
adc
xor
outsl
lea
push
sahf
add
mov
inc
hlt
outsb
mov
lret
popa
pushf
je
sub
iret
lea
xchg
mov
pusha
test
ret
fwait
lahf
xor
stc
jnp
push
mov
daa
push
sbb
add
jne
add
jecxz
push
pop
cs
mov
gs
int3
outsl
aad
mov
dec
sub
mov
sbb
dec
inc
sub
into
and
mov
inc
in
push
pop
xor
test
dec
test
jb
mov
inc
out
dec
into
mov
shll
sub
sub
mov
fisubs
push
neg
mulb
inc
lea
int
sbb
call
add
mov
and
and
ss
and
pop
mov
sub
repnz
mov
add
stc
push
jp
faddl
jns
jb
stos
incl
push
sbb
int
rol
jmp
push
push
sbb
popa
adc
sub
popf
pop
stos
imul
jbe
lods
cmp
push
mov
cmp
sbb
and
ret
mov
push
loopne
cmc
and
aas
into
call
call
imul
mov
fwait
push
jnp
daa
mov
mov
mov
loopne
push
scas
fadds
mov
leave
insb
cmp
dec
int3
iret
popa
gs
jae
test
imul
or
mov
jnp
fildl
mov
data16
jg
aas
in
mov
fdivrl
xchg
rorl
jp
nop
or
cli
jo
xor
inc
in
bound
dec
sti
xor
jne
addr16
mov
test
jmp
lds
ds
arpl
adc
dec
ds
mov
sahf
movsb
jg
sub
lret
out
or
cmpsl
addr16
mov
or
and
xor
test
es
fldenv
shl
push
jg
loop
fdiv
inc
xchg
stc
movsl
sub
shrb
push
sub
inc
mov
jno
xchg
cmp
sbb
dec
and
push
stos
or
mov
mov
cmp
mov
imul
xchg
mov
cmp
cmp
xor
pushf
xor
movzwl
mov
outsb
fcompl
imul
in
cmp
sbb
sub
ss
sbb
mov
dec
mov
xor
or
nop
pop
out
fdivs
adc
adc
pop
ss
fistps
das
mov
movsl
xor
mov
jbe
push
ficompl
mov
sub
insb
aad
cltd
int
fnstcw
rcl
jo
mov
js
es
mov
push
movsl
sub
test
andl
cltd
lahf
jmp
pop
sahf
shlb
cmpb
dec
loop
aad
xchg
mov
int3
sbb
push
outsb
popa
jmp
int
xlat
mov
mov
push
cs
push
pop
in
bound
xchg
jge
sbb
sub
sub
aad
dec
insb
in
cmp
jbe
mov
bound
pop
sbb
in
jge
imul
test
leave
or
test
pop
cwtl
push
fs
pop
jp
push
shrl
loope
out
into
adc
sbb
stc
mov
adc
and
sbb
or
daa
addr16
mov
xchg
clc
call
mov
mov
pop
push
loope
into
pop
cmp
ljmp
mov
pop
lss
orb
ficoml
mov
or
xlat
push
imul
rcrb
mov
leave
aaa
pop
mov
dec
sbb
mov
enter
xor
pop
jo
and
ss
bound
inc
sarb
lret
xor
fsubp
sub
ljmp
out
repz
das
out
xor
jb
int
xor
mul
popa
div
clc
lret
int
mov
js
pushf
sbb
into
testb
out
pop
les
cmpsb
setns
mov
das
cwtl
add
popf
or
arpl
jns
adc
mov
cltd
lds
cld
inc
rorl
lock
pop
test
mov
adc
push
fucom
sbb
jns
and
stos
mov
push
pop
mov
dec
test
jg
sub
jmp
scas
int
shrl
pushf
clc
sub
dec
push
lds
inc
mov
xchg
jbe
push
jns
scas
pushf
mov
cmp
mov
loop
dec
pusha
cmp
push
cltd
insl
aad
pop
push
imul
sar
aam
push
pop
scas
sbb
lods
push
aad
cwtl
inc
pop
test
data16
dec
inc
xchg
stos
out
scas
dec
mov
and
mov
insb
xchg
mov
pop
in
jecxz
xchg
adc
mov
test
lock
pop
fwait
std
mov
mov
jl
nop
pop
popf
lahf
cli
xchg
add
fisubrs
mov
fistps
stos
xor
daa
push
inc
sbb
push
or
xchg
movsb
push
xchg
imul
sub
pop
sbb
xor
enter
in
or
out
inc
add
adc
mov
mov
xlat
popa
mov
pop
cltd
push
mov
or
lods
xor
dec
ss
or
hlt
lods
call
outsl
pop
jmp
xchg
dec
jnp
xor
cmp
iret
jbe
scas
cmp
mov
pop
push
xor
popf
clc
aad
insl
movsl
dec
test
cmpsb
push
fwait
or
aam
movsb
jge
aam
mov
pop
adcb
inc
clc
pop
push
data16
ljmp
mov
mov
inc
push
rorb
loop
lods
push
dec
in
add
and
cmc
pop
in
push
call
dec
cli
loope
cmpsl
xor
push
adc
lods
jmp
push
sub
mov
jp
sbbb
pop
or
adc
push
dec
sbb
mov
jmp
fcompl
and
mul
jbe
push
notb
dec
out
pusha
push
adc
push
xchg
test
mov
push
sub
arpl
mov
std
stc
cmp
mov
mov
xor
movsb
dec
sub
rorl
lods
scas
mov
movsl
cmp
jp
xchg
outsl
cltd
xchg
lcall
push
lea
add
std
lods
test
bound
inc
or
mov
adc
clc
dec
push
add
aad
test
mov
imul
lods
xchg
pop
flds
je
pop
dec
gs
push
adc
or
unpcklps
jno
leave
push
inc
test
test
lcall
rcll
aaa
push
fcoml
fs
es
aaa
loope
stc
fistl
push
mov
mov
push
xchg
and
popa
cmp
jbe
lcall
and
add
xor
pop
pop
push
adc
push
lock
dec
xchg
gs
mov
xchg
jmp
or
pushf
pushf
lock
sbb
or
cltd
repz
cwtl
mov
jg
fnstcw
sbb
aad
loope
in
mov
test
insl
dec
xchg
mov
pusha
sbb
loop
sahf
xor
or
fmul
mov
sbb
inc
cmpb
add
push
cmc
aad
jo
stc
andl
mov
out
adc
insb
rcr
mov
notb
dec
xchg
jns
loopne
lcall
lcall
mov
cmp
nop
into
fisttpl
mov
lods
out
out
cmp
sbb
notb
pop
pop
test
mov
push
cli
out
dec
aaa
sti
ljmp
out
in
xchg
fbstp
popf
into
addl
in
xchg
test
jns
fsubl
pmaxsw
dec
pop
sub
shrl
dec
push
cld
xchg
push
xchg
div
cli
lods
mov
sub
push
pop
out
xchg
inc
mov
and
sarl
jns
pop
push
cmp
clc
dec
int
je
jbe
dec
insl
or
sub
out
mov
pop
sub
das
mov
dec
push
cmpsb
add
gs
out
scas
mov
xor
jns
cld
rcrl
or
add
in
xor
hlt
add
lcall
push
out
mov
div
lahf
loope
mov
loopne
add
icebp
es
push
mov
xchg
xchg
orl
xchg
push
jb
dec
mov
mov
pushw
fisttpl
inc
and
sub
lret
add
aam
fidivl
rorb
push
push
push
mov
sub
xchg
or
push
cmc
pop
rcrb
mov
jnp
pusha
in
or
rcrb
sub
sub
pop
faddl
or
pop
mov
pop
jl
adc
push
rcll
movsb
xchg
ljmp
sbb
add
adc
aam
popf
mov
mov
mull
jns
sub
pop
fwait
jbe
jne
cwtl
jge
lahf
icebp
or
or
pop
leave
or
ss
dec
je
arpl
jmp
xchg
inc
fidivrl
push
jnp
inc
scas
xchg
test
ret
adc
inc
jmp
sub
adc
fldt
stc
jmp
dec
jae
push
insl
adc
jne
dec
pop
in
dec
mov
xor
jbe
mov
jnp
js
popf
lds
jns
popa
xor
cld
js
and
sbb
xor
sbb
and
aas
xchg
in
fildll
pop
sub
outsb
testb
movsl
cmp
out
or
stos
insl
bound
inc
mov
hlt
aaa
ror
incb
pop
xchg
add
or
call
xchg
adc
push
jae
ljmp
mov
fistps
ret
sub
call
mov
js
call
stc
jmp
imul
sbb
in
cmpl
popf
jne
xchg
call
scas
cmpsl
test
data16
push
cltd
mov
cmp
sahf
dec
aaa
mov
mov
and
out
mov
loop
jmp
lahf
pop
cwtl
mov
push
movsl
jmp
stos
and
xor
mov
mov
mov
cli
cwtl
pop
cltd
rclb
je
adc
imul
cmp
mov
and
in
pop
mov
cli
ljmp
insb
adc
fimuls
and
test
out
push
scas
int
popa
hlt
and
jecxz
sbb
ficomps
out
xchg
sahf
dec
in
insl
or
adc
add
dec
or
mov
mov
cmpsl
add
add
ds
cmpsl
in
xchg
mov
mov
rcll
popa
popl
fisubrs
cmp
test
and
mov
dec
pop
gs
push
in
add
dec
out
stc
dec
pushf
into
dec
pop
push
cmp
fiaddl
movl
xchg
jle
push
jg
push
cmpl
inc
in
mov
ja
xchg
mov
mov
imul
inc
fcmovb
loope
sub
movsb
cmpsb
ret
in
dec
jno
movsb
adc
into
lret
xchg
inc
into
push
push
inc
into
mov
sahf
add
cmp
ret
and
fldenv
push
pop
pop
lret
shlb
lret
mov
mov
jl
lret
mov
pop
xchg
push
inc
je
cmpsb
aas
xor
fdivr
jno
dec
push
outsb
stos
sub
out
dec
test
jmp
add
cmp
cld
cwtl
cmp
pop
mov
push
sahf
stos
sub
mov
push
mov
and
mov
cmp
xor
mov
out
or
es
cltd
shrl
push
lret
data16
loopne
sub
movsb
push
les
inc
push
pop
cmp
adc
adcb
lret
repnz
add
mov
xor
mov
push
jb
jns
xchg
into
cmp
xchg
mov
inc
hlt
incl
xlat
cmp
mov
adcb
arpl
outsb
subl
lock
or
jns
and
inc
mov
stc
cli
inc
fcmovne
cmc
cltd
pushf
int
xorb
aad
adc
fbstp
pop
add
push
mov
push
cltd
out
das
out
notb
lret
inc
push
imul
movsb
inc
sub
pop
pop
jns
pop
add
imul
nop
dec
int
lcall
mov
mov
insb
dec
add
stos
adc
cltd
mov
mov
mov
dec
sti
outsb
stos
aaa
jmp
mov
cwtl
lea
in
push
lahf
xor
imul
adc
push
nop
mov
lret
mov
sbb
fsubl
sub
rcr
leave
fstp
test
mov
push
cmp
mov
xor
and
sbb
cltd
dec
or
inc
cltd
jmp
int3
loop
adc
std
mov
mov
mov
leave
mov
push
pop
mov
lods
rcll
jns
out
or
dec
mov
sub
out
iret
or
dec
or
push
mov
and
xchg
rcll
imul
mov
mov
dec
out
fsub
shrb
test
das
ljmp
cmpsb
repnz
sbb
pushf
clc
jecxz
loopne
push
cmpsb
mov
mulb
adc
push
fstl
ds
fsubs
inc
outsl
test
insl
jecxz
xor
stc
add
add
aaa
add
fsubp
scas
scas
pushf
jae
inc
pusha
stos
push
cs
testl
loopne
push
aaa
mov
int3
call
xchg
js
lahf
fidivl
push
loopne
stos
out
push
push
and
jns
or
bound
outsb
ficomps
or
jle
leave
add
rcl
imul
adc
sar
je
fsubrp
push
mov
lahf
add
std
inc
loop
xchg
fsubp
popf
or
ret
arpl
int3
inc
clc
cwtl
jns
das
out
pop
std
xor
adc
jae
in
jmp
movsb
ds
or
xchg
mov
sub
stc
imul
rcrl
shl
ljmp
mov
shrl
mov
ljmp
pop
push
mov
xlat
pop
sub
cltd
adc
cwtl
pop
dec
gs
and
in
pop
jle
out
fcomps
shrl
loopne
inc
push
jle
mov
stos
jmp
pop
add
mov
fiaddl
push
lret
mov
outsb
sub
add
call
lds
adc
push
pushf
mov
stc
mov
xor
sahf
emms
lahf
push
dec
inc
inc
add
sub
hlt
push
clc
lret
addr16
jae
cmp
insb
jo
add
inc
bound
pop
icebp
sahf
test
pop
scas
xor
fistl
and
pop
xor
aas
bound
xchg
adc
dec
pop
repnz
dec
and
loopw
repz
cmpsb
icebp
push
ds
mov
loope
rcrb
imul
movsb
arpl
push
rcrl
jge
inc
push
ret
mov
fmul
sarb
jo
xchg
sbb
dec
aaa
push
or
add
sbb
sbb
aaa
xchg
test
roll
add
mov
out
dec
mov
lds
sub
pop
andl
add
and
ds
pop
jno
popf
xchg
mov
mov
test
mov
and
daa
push
ja
and
into
aaa
sahf
test
scas
sub
stc
push
int
outsl
daa
push
in
cvtps2dq
sub
or
or
adc
scas
notl
push
js
test
daa
loope
dec
mov
adc
dec
adc
cli
setae
pop
pop
rorb
pinsrw
notb
imul
scas
jecxz
outsb
sahf
cltd
shrl
xchg
mov
push
pop
xchg
jp
popaw
mov
inc
out
nop
pushf
mov
popf
jns
xchg
daa
iret
adc
lahf
xchg
jne
jge
inc
xchg
movsl
mov
inc
xchg
sbb
adc
test
cmp
jo
cmpsb
pop
lods
push
je
mov
test
mov
data16
subl
ljmp
jecxz
cmp
shr
mov
les
dec
add
leave
jmp
pusha
push
pop
adcl
or
icebp
cmpsb
push
fldcw
cmpsb
gs
dec
dec
bound
into
movl
daa
push
gs
mov
std
pop
leave
in
fs
test
lods
dec
dec
xchg
xchg
mov
add
mulb
insl
sub
pop
pop
lahf
fprem1
fwait
sub
sarb
in
xchg
xchg
enter
push
dec
and
adc
jbe
ja
jne
inc
cmp
push
adcl
cmp
xor
xor
add
clc
out
jbe
movsb
sub
std
mov
fdivl
cli
fdivrs
and
sbb
sbb
daa
aaa
cmp
int
cmpsb
or
fstl
sub
jo
iret
push
jg
movsb
xchg
jge
movsl
fstl
dec
test
popa
xor
les
mov
in
lds
and
xlat
leave
mov
jle
ret
xor
sub
gs
sub
leave
nop
jmp
dec
inc
jecxz
ficoms
dec
sub
and
leave
fildll
and
sub
adc
lock
fldlg2
je
sub
pop
and
xchg
dec
pushf
xchg
in
jle
pushf
arpl
mulb
outsl
je
daa
bound
in
dec
mov
aam
jg
jp
pushf
mov
ja
enter
int3
test
loopne
cltd
pop
mov
cmp
fnstenv
daa
and
popf
movl
xor
in
lret
lods
jp
jge
sbb
xor
das
xchg
lahf
pop
scas
aam
xorb
stos
stc
mov
sub
in
xchg
movsb
ficompl
test
enter
stos
fs
cli
mov
dec
mov
lahf
and
jp
mov
mov
jecxz
and
or
lcall
in
rol
adc
xor
scas
mov
xor
lret
pop
aaa
lods
gs
mov
mov
stos
mov
sbb
sti
and
lds
dec
sbb
inc
clc
mov
inc
lahf
inc
imul
dec
or
decl
pop
push
leave
lock
inc
push
insl
mov
mov
outsb
call
inc
dec
jae
jo
pop
jno
sub
inc
fwait
bound
push
xor
lret
scas
xchg
fiaddl
out
lods
or
xor
cld
inc
xor
daa
test
insl
jecxz
and
int3
add
and
shrb
mov
lret
sub
pop
cmpsb
xor
icebp
test
loopne
lods
dec
mov
lahf
add
incb
movsl
jmp
mov
xchg
mov
daa
cmc
insb
mov
cmpsl
fwait
push
add
ret
mov
inc
lds
and
imul
daa
sub
test
xlat
jo
shll
pushf
fldl
pop
pop
cmp
call
pop
repnz
scas
pushf
int
mov
es
mov
scas
dec
pop
dec
cmp
call
cltd
pusha
hlt
sub
fnstenv
sti
cmp
xchg
xchg
sahf
push
enter
dec
sbb
fcomps
xorl
sbb
mov
and
sub
jmp
dec
pop
outsb
xor
nop
sbb
inc
jno
or
xor
xchg
push
scas
add
fimull
dec
and
cmpsb
fimuls
leave
dec
pop
adc
loopne
xchg
sub
inc
hlt
cmc
pop
outsb
mov
sub
mov
insl
mov
lret
inc
popl
gs
in
mov
popf
outsb
je
hlt
add
dec
mov
mov
sub
xchg
into
mov
subb
pop
imul
stos
into
aam
gs
in
add
sbb
cwtl
dec
mov
aam
push
es
add
aad
push
test
push
push
or
push
mov
enter
or
repnz
push
sub
xlat
add
push
xor
int
in
push
cmp
jg
cmovg
cwtl
jg
sub
leave
push
mov
rol
imul
mov
enter
faddl
inc
sub
mov
clc
out
test
jnp
push
sub
cmp
out
push
mov
sub
jo
movsl
in
mov
ret
pop
jb
int3
cmp
cmc
add
in
insb
jne
lcall
das
call
ljmp
leave
ds
mov
sub
iret
push
dec
mov
xchg
sub
in
xchg
lcall
je
add
stos
push
movsb
in
addr16
sub
je
out
push
pop
xchg
fildl
das
sbb
movsl
jae
sahf
int3
enter
test
push
aam
enter
out
insl
xchg
jns
dec
mov
enter
sub
cmp
push
xchg
ljmp
pop
mov
in
outsl
push
out
scas
cwtl
loopne
pop
inc
sub
out
push
fistps
jecxz
mov
lds
lret
call
das
xor
mov
mov
add
and
cltd
xchg
mov
sti
mov
sbb
out
out
mov
jp
jbe
adc
fisttps
pushf
aaa
js
mov
jae
dec
rorl
dec
or
rclb
dec
jnp
rcrl
and
in
push
test
adc
icebp
mov
sub
lods
in
shl
ja
es
ljmp
sub
jne
sbb
popa
dec
pop
lahf
add
jno
adc
add
cmp
mov
cmp
mov
dec
inc
push
pop
fistl
add
jns
test
mov
jne
mov
add
imul
xchg
dec
sahf
inc
fsts
inc
mov
pop
cli
push
xchg
cli
out
sbb
cmp
dec
or
cltd
int
pop
cmp
loopne
ds
pop
mov
lods
mov
in
dec
xchg
jecxz
dec
dec
inc
inc
sub
mov
jae
sub
sbb
hlt
sbb
outsl
jno
cmpsb
mov
fwait
cmp
leave
and
pop
divb
out
loop
leave
lret
cmpsl
gs
sub
jae
orb
leave
inc
ja
sub
cmp
lock
aad
inc
lret
add
mov
lahf
push
cs
xchg
pop
repz
xchg
pop
push
das
pop
in
xchg
jne
dec
pop
jo
dec
mov
xor
inc
sti
mov
pop
pop
adc
jle
push
pop
insb
lret
sub
jno
dec
push
nop
mov
xchg
xchg
push
lds
mov
dec
dec
scas
aam
clc
xor
sti
push
cmpsb
dec
fsubrl
add
lods
jns
dec
fsubrl
imul
sub
sub
in
push
sbbl
icebp
rorl
xchg
insb
or
andl
mov
leave
dec
shrb
les
jl
add
adc
push
pop
lahf
lret
add
insl
jns
mov
lea
push
cmpsb
insb
lret
inc
fiaddl
dec
hlt
hlt
mov
jmp
out
push
movsb
lahf
das
sbbl
daa
rcrb
inc
mov
mov
adc
fwait
in
loopne
dec
mov
push
out
loope,pt
ja
lods
inc
inc
clc
jecxz
test
and
mov
inc
repnz
push
cltd
lock
pop
test
js
call
stos
mov
pop
fsubrl
out
jmp
push
ljmp
insb
sub
xor
les
pushf
lock
mov
inc
lret
leave
dec
xchg
imul
out
ficoms
aas
push
in
popa
in
pop
in
sahf
mov
and
in
jecxz,pt
fcmovnb
sub
dec
cmp
loop
xor
pop
pop
mov
enter
push
jb
int
aaa
xor
jne
adc
ljmp
or
dec
orb
sahf
clc
in
out
cli
and
cld
dec
inc
fs
add
pop
aam
fcoml
pop
jb
imul
fdivl
inc
xchg
cmp
mov
sbb
call
loopne
dec
jmp
sub
imul
ljmp
lret
or
and
mov
in
xchg
fdiv
sbb
xor
fwait
mov
jecxz
jmp
rcl
ret
sub
jl
jo
mov
scas
adc
mov
fwait
test
lret
push
pushl
test
cmp
lock
and
cmpsl
xor
cwtl
add
mov
push
jb
xor
cwtl
iret
pop
or
and
push
js
jb
fnsave
pop
xchg
test
jne
stos
lods
test
cltd
ret
nop
mov
adc
push
popa
and
cmp
sub
and
xchg
xor
pop
sbb
insb
jl
das
sbb
jno
shll
sbb
inc
xchg
fldl
nop
jle
cmp
xor
push
mov
sub
ret
jno
out
inc
cmp
inc
imul
add
push
mov
jo
ljmp
gs
repz
dec
mov
mov
js
cmp
pop
lock
mov
xor
icebp
sar
push
xchg
mov
out
push
cmp
faddl
sbb
cld
xorb
cmp
cld
push
fcoml
fcmovnb
test
adc
fsub
add
daa
enter
cs
cld
mov
ffree
pop
push
jge
sub
pop
cli
add
or
cmovae
imul
roll
out
outsb
test
out
lods
in
mov
xor
xor
xor
push
in
push
js
lret
and
sbb
ja
int
ss
popaw
out
and
cmp
icebp
sbb
mov
out
dec
shlb
mov
dec
out
das
push
dec
adc
popf
push
les
dec
cmp
and
out
jg
leave
cmpsb
fldenv
push
jle
insl
xchg
in
int
das
xor
jp
into
inc
roll
inc
push
jle
add
test
insb
outsb
daa
cmp
jo
mov
mov
test
sbb
aaa
pop
cmpsb
push
inc
fwait
cmp
pop
cmp
push
push
lock
dec
push
push
out
movsl
mov
sbb
fwait
inc
or
mov
adc
or
mov
aaa
cmp
leave
mov
icebp
jb
js
jle
xor
inc
push
xor
cs
sbb
fidivrs
nop
movl
mov
xor
push
jle
xor
sub
xchg
add
out
leave
mov
fs
cmp
add
push
mov
gs
dec
mov
xor
imul
push
icebp
outsb
mov
jl
jno
aad
xor
iret
and
test
test
mov
pop
xchg
pushf
and
xchg
lret
out
sahf
fs
lret
test
jl
stos
fwait
mov
cmpsl
pop
dec
push
fadds
ljmp
add
call
push
add
fisubs
int
push
dec
stos
and
jmp
cwtl
cltd
dec
mov
iret
mov
add
lret
push
mov
insb
xchg
dec
iret
pushf
aam
fsubrl
out
push
in
cmp
inc
mov
pop
mov
mov
icebp
pop
cmp
inc
fnsave
call
stos
cmp
dec
jae
daa
addr16
xor
mov
ficomps
fsubrs
xor
daa
fwait
sub
and
mov
push
cs
cli
pop
popf
in
push
push
xchg
cmpsl
lock
pusha
aaa
push
repz
xchg
pop
dec
sbb
fcompl
mov
cli
ret
adc
out
cmp
cmp
repz
dec
xchg
push
cwtl
mov
arpl
sbb
out
or
or
mov
movb
in
lock
rcrb
sub
aam
pop
sub
fcomi
dec
mov
sub
push
jl
ss
pop
mov
cmp
testl
push
xor
jmp
push
lret
mov
jno
xorl
lahf
mov
fdivl
xchg
dec
in
popa
test
jne
jle
pusha
inc
push
push
rcr
mov
int3
jnp
mov
arpl
clc
pop
addr16
and
sbb
sbb
sbb
jae
push
out
sub
xor
push
lcall
push
lock
mov
xchg
push
js
notl
andw
xchg
jbe
pop
insb
stos
add
addr16
dec
ss
scas
aaa
pushf
jbe
inc
jns
test
aas
push
push
lock
xor
lret
lea
xor
xchg
jecxz
mov
nop
int3
or
es
push
cmpsb
mov
xor
shlb
fwait
push
outsl
xor
lret
out
dec
into
mov
pop
mov
push
lret
loop
push
adc
repnz
pop
xchg
inc
mov
ds
out
in
or
inc
pop
in
outsl
mov
das
or
rcl
and
push
or
ret
or
add
and
mov
mov
mov
xorl
in
jge
cmpsl
or
aam
and
dec
pop
xor
jmp
dec
push
lea
jbe
sbb
push
scas
stc
rol
xchg
repnz
mov
fistpll
cmc
push
movsb
aaa
shr
psubsb
dec
rolb
jg
push
pop
adc
push
mov
movsb
push
push
jno
and
mov
mov
mov
lahf
outsb
push
add
and
add
mov
loope
int3
mov
mov
out
push
pop
xchg
pop
fbstp
jmp
mov
shlb
ret
sub
mov
push
pushf
inc
jge
push
adc
lret
xchg
insl
scas
jmp
scas
movsb
insb
aam
push
idiv
fmulp
jns
rorl
mov
out
sub
mov
cmc
loop
int3
int
xchg
es
ss
das
sbb
rcr
cmpb
dec
in
adc
fdivrl
divl
and
gs
ret
ficoms
and
jb
push
sbb
mov
cli
out
enter
jne
das
dec
mov
pop
out
push
iret
in
pop
stos
mov
dec
or
xchg
andb
loopne
mov
aad
das
mov
xor
filds
jae
mov
xor
mov
dec
fsubs
push
pop
mov
pop
imul
xor
stos
push
into
sub
mov
aaa
sub
test
fst
loop
shll
stos
xchg
pop
in
rcrb
push
cld
pop
aam
std
pushl
fsub
aaa
add
popf
lahf
aam
mov
insl
adc
pop
les
xchg
mov
sbb
and
pushf
push
xlat
shlb
data16
aam
decb
mov
cmp
push
aaa
mov
or
adc
mov
jo
fs
cmp
jns
sarl
pusha
mov
push
jae
mov
mov
mov
pop
xchg
iret
leave
popa
xchg
sub
xchg
stos
xchg
mov
imul
pop
fsubs
push
jecxz
mov
call
add
nop
lods
into
enter
mov
test
fstl
mov
inc
test
push
push
nop
repz
clc
imulb
lret
into
rclb
jecxz
fucomi
jge
pop
loopne
inc
dec
or
ret
xor
jno
or
mov
in
jle
rolb
jmp
dec
and
xor
cld
mov
pop
dec
enter
stc
pop
xor
xchg
mov
and
andl
mov
mov
leave
mov
shr
lea
push
fs
stos
and
pop
xchg
jns
es
out
loopne
sbbb
adc
es
dec
add
mov
repz
jbe
daa
fdivl
insb
cmpsb
daa
je
leave
daa
sbbl
jge
push
push
sub
mov
pop
xor
mov
dec
pop
or
adc
test
out
push
les
lock
daa
aam
and
sub
lret
fdivr
lret
jb
push
inc
sub
or
jns
ljmp
push
and
push
and
inc
sub
leave
xchg
pop
insb
es
mov
lods
sbb
daa
repz
add
mov
shll
in
mov
dec
sub
ret
cmp
out
js
sbb
pop
loop
bound
sub
xchg
lods
stc
fwait
pop
push
icebp
mov
shll
jbe
mov
dec
ret
and
iret
push
or
push
movsl
popf
fstl
xchg
and
xlat
adc
mov
out
mov
push
filds
outsl
ror
mov
push
adc
lods
mov
jo
jnp,pn
bnd
and
fs
pop
dec
xchg
add
cmp
cmpsb
push
inc
mov
push
dec
clc
and
shl
inc
xor
jle
dec
push
jmp
popa
jae
xor
paddusb
in
test
shr
pushf
rolb
scas
cmp
cs
shl
scas
hlt
jle
sub
xchg
inc
pop
pop
jae
push
cmpsl
stos
aad
lret
testl
cmp
lods
or
das
dec
mov
mov
aam
mov
test
jnp
xlat
sbb
out
jns
sbb
add
aam
inc
std
mov
xchg
fisubs
pop
es
sbb
out
sbb
and
gs
pop
popa
dec
inc
pop
pop
add
sub
nop
ljmp
xchg
mov
jns
pushl
xchg
imul
test
ds
and
adc
fdivrs
xor
mov
in
jb
int
jg
sahf
push
call
faddp
cmpsb
clc
jns
enter
insb
and
ret
sysexit
xchg
dec
repz
stos
ret
loop
pop
shr
shrb
dec
or
stc
in
push
mov
lods
test
and
adc
stos
js
sub
jb
sub
das
mov
out
xor
cltd
enter
push
mov
mov
stc
sbb
add
sbb
xchg
je
rol
stos
test
dec
arpl
mov
mov
fiadds
mov
mov
push
and
xor
fs
or
mov
xchg
mov
test
scas
rorl
adc
fwait
data16
and
push
outsl
scas
jl
add
dec
fs
pop
inc
cmpb
adc
mov
out
aaa
pusha
cmp
imul
jl
in
mov
push
mov
jb
out
sbb
imulb
mov
in
lahf
shrl
scas
gs
scas
sbb
mov
aad
notl
call
clc
out
mov
jo
xchg
int3
or
push
icebp
dec
mov
xchg
cld
inc
xlat
mov
mov
cmp
in
lret
sub
mov
mov
mov
pushf
sbb
sub
stc
push
dec
ret
and
jg
mov
daa
dec
cmpb
pop
pop
jecxz
lods
loop
mov
dec
xor
and
scas
cmpsb
leave
fisttps
lret
adc
mov
sbb
xchg
sub
add
push
lods
push
scas
mov
outsl
rorl
mov
xchg
jle
rcll
push
outsl
jae
lret
outsl
xchg
outsl
ds
jae
nop
push
pop
clc
adc
pushf
pop
mov
pop
sbb
fldcw
xchg
mov
push
inc
dec
ficoml
jne
clc
cmp
xlat
movsb
notb
out
jno
mov
jne
add
xchg
cmpsb
pop
sub
aad
sbb
cmc
or
jmp
imul
xor
mov
stos
xchg
ljmp
fdivrl
call
lahf
test
push
aas
loop
sub
sub
dec
imul
adc
dec
bound
pop
and
imul
push
adc
stos
repnz
clc
pushf
push
xchg
int3
add
lods
bound
out
gs
sub
xlat
mov
in
fs
in
aad
rcrb
bound
and
jo
pop
fsubrl
in
jge
mov
jl
pop
lahf
test
out
push
pop
pushf
testl
push
fildl
push
jp
movsb
jmp
and
daa
loop
pop
push
mov
das
repz
pop
adc
repz
jg
stos
add
cltd
test
xchg
loop
insl
add
addl
pop
or
fsubrl
out
test
add
imul
sub
sub
mov
sub
add
mov
inc
adc
leave
jg
cmp
enter
xor
fldt
sub
pop
pop
and
loope
cmpsl
mov
xor
test
cltd
notl
adc
mov
sahf
stos
outsb
lahf
cltd
fs
and
add
out
ret
cmp
add
sub
out
movsl
inc
lods
stc
cs
repz
clts
dec
push
xorb
mov
push
sbb
lock
into
and
cmp
sub
mov
or
rorl
outsl
enter
loope
cld
or
dec
addr16
scas
test
sub
xchg
aam
test
ficoms
pop
cmp
or
mov
sub
mov
xor
cs
pop
addr16
jnp
nop
sub
sarb
enter
jmp
push
and
popl
loope
dec
jne
push
rorb
push
cmpsl
ja
cmp
push
mov
sub
mov
push
adc
jne
xchg
pop
inc
scas
mov
mov
xor
cs
das
lods
aad
push
xor
cmc
sub
lret
in
and
jbe
jno
jns
push
dec
in
into
fwait
movsl
dec
or
dec
and
fs
inc
xchg
out
call
mov
dec
or
or
mov
xor
andl
in
xchg
setg
cmp
dec
xchg
sbb
in
add
push
push
and
mov
sub
or
push
push
repnz
rclb
jne
mov
add
ret
addr16
pushf
sbbb
push
xchg
mov
sti
xchg
aam
xadd
movsb
dec
adc
int3
popa
fldt
ret
cmpsl
addr16
je
pop
rcrl
mov
mov
test
test
or
jmp
jb
mov
loopne
dec
jnp
shll
xchg
mov
imul
sub
lret
mov
pop
push
lret
je
mul
push
sub
mov
lret
inc
js
dec
outsl
in
fsubrl
mov
mov
jecxz
dec
sub
mov
lcall
insb
xchg
pop
pop
clc
leave
inc
mov
adc
xchg
lods
lock
xor
cmpsb
xchg
dec
loope
les
aas
loope
cmp
sarb
add
xchg
test
dec
stos
pop
in
mov
clc
jne
lahf
xchg
push
in
adc
loopne
cmpsl
jge
push
or
fsub
icebp
jnp
mov
fldcw
and
lahf
movsl
mov
xchg
in
sub
cmp
inc
dec
xchg
arpl
inc
cld
mov
pushaw
ja
mov
ljmp
cltd
ficoml
mov
adc
cmp
lea
jmp
dec
xor
jb
xlat
stos
js
lret
repz
arpl
scas
dec
mov
fwait
pop
or
pop
test
sbb
jns
das
or
add
adc
shll
mov
push
mov
stc
std
push
mov
cs
mov
shlb
xchg
push
fimull
leave
xchg
sbb
frstor
daa
bound
mov
inc
mov
mov
mov
sti
push
xchg
pop
in
pop
xchg
das
mov
andl
push
jbe
lds
out
pop
icebp
shlb
and
push
fxch
xchg
fxch
sbb
pop
lea
push
or
dec
cmp
add
insb
out
outsb
jb
inc
shrb
jne
xlat
jno
or
das
adc
les
jg
out
mov
jecxz
jge
mov
pop
pop
push
mov
fldcw
cs
and
mov
rcr
stos
mov
mov
pushf
icebp
dec
lods
int3
jg
and
ja
pushf
dec
repz
xchg
scas
jecxz
ja
pop
sub
xlat
jns
mov
jbe
xlat
in
mov
mov
pop
ljmp
pop
call
mov
loope
mov
in
pop
inc
xchg
and
cmp
in
arpl
aaa
stos
pop
lret
jg
add
clc
test
inc
dec
aaa
nop
cltd
cmc
not
pxor
out
sbb
mov
and
jmp
das
pop
lea
ret
or
mov
pop
ret
inc
xor
sub
sbb
xchg
add
sub
fldenv
add
jge
icebp
mov
and
sti
filds
sub
inc
mov
lods
lret
aad
lret
mov
ja
pop
jno
insb
pop
andb
repz
mov
popa
mov
ljmp
bound
pop
leave
test
fs
fadd
loop
push
cmp
pop
cmp
push
test
or
pop
test
js
sbb
arpl
push
xlat
cmpsb
add
mov
mov
push
out
pusha
xchg
xchg
cmp
jo
and
mov
pop
lods
mov
mov
test
push
clc
cmp
adc
mov
js
pop
iret
adc
mov
ds
fistl
push
fwait
aam
aas
xlat
add
and
lods
bound
xor
mov
insl
pop
sub
mov
mov
and
data16
int3
loope
mov
jb
sarl
leave
cmp
ret
popa
jecxz
jno
out
test
xchg
mov
xchg
add
add
mov
dec
sub
xchg
inc
pop
nop
mov
and
sti
inc
add
in
jnp
imul
push
js
pop
mov
int
scas
dec
add
aaa
outsb
imul
xchg
insl
push
stos
pop
jmp
lcall
xchg
jae
lods
or
push
jg
xor
fwait
loopne
sub
rcl
jne
xlat
cvtps2pi
pop
mov
pop
out
lret
insl
adc
out
mov
outsl
insb
inc
and
pop
fiadds
nop
pop
rolb
jl
lcall
jb
push
fs
cmp
lfs
into
test
popa
add
xor
and
xor
lret
fdivrs
push
xchg
inc
mov
in
mov
imul
adc
pop
and
mov
jno
add
push
xor
sbb
or
and
loop
sbb
int
vpavgw
mov
lods
shlb
cli
ja
insl
jo
mov
cmp
jno
sbb
mov
sub
jp
adc
popf
lds
cmp
cmc
aam
mov
std
xchg
xchg
loop
mov
mov
add
aad
jb
scas
push
xor
sbb
push
pop
cli
lods
fistpl
cmpsl
paddsw
jo
ds
jne
fiaddl
scas
mov
jle
mov
fcmovnu
and
out
int3
pop
dec
and
in
jbe
sbb
dec
ret
stos
pop
pop
into
insl
or
lock
cmpsb
jne
pop
or
lock
and
push
imul
insl
data16
sarb
push
sbb
into
mov
sub
push
cmp
les
sbb
add
inc
loopne
pop
sahf
pushf
mov
xchg
ljmp
sahf
add
mov
xchg
cmp
xchg
mov
jp
into
shlb
mov
out
adc
xor
sub
push
rorl
lods
or
xchg
mov
pop
cs
fsubp
daa
or
clc
mov
lods
push
aaa
jo
pop
fwait
inc
push
shll
les
mov
mov
les
dec
add
lds
mov
nop
loop
in
push
shrl
fimull
movsl
jno
test
and
or
arpl
cld
sbb
mov
rolb
adc
cmp
cmp
jbe
adc
mov
into
push
out
insb
pop
stos
jle
dec
mov
out
clc
jl
lods
or
pop
jl
stos
in
int3
filds
fwait
xor
int
dec
inc
mov
push
insl
pop
jno
les
mov
addl
cmpsl
movsb
aas
xor
sarb
adc
outsb
push
xor
dec
inc
inc
sti
in
xchg
and
cld
insb
out
cmp
call
popf
jne
xchg
cld
mov
fs
iret
fdivl
shlb
pop
cwtl
les
pop
push
adc
adc
rol
addr16
add
mov
sub
jp
test
aad
cltd
cmp
sahf
inc
negb
pop
xor
pop
lahf
add
lods
pop
mov
jp
pop
aam
xor
cmovo
jle
push
ret
insl
in
out
in
leave
ret
addr16
fcmovnbe
fisubrl
jg
cs
pop
push
fistpll
fisttpl
hlt
jbe
dec
inc
mov
mov
ret
lahf
add
fmul
xchg
aad
int
cmp
fucomi
cmpsl
sbb
sub
cltd
push
sahf
jmp
addb
shl
pslld
sub
insl
scas
jnp
xchg
std
mov
push
lret
ss
cmp
out
inc
pop
or
popa
or
ror
sbb
dec
and
pop
scas
es
rclb
out
inc
jae
int
std
mov
jmp
cmpsb
rcr
xchg
pop
xchg
outsb
repnz
ret
cmpl
clc
cmp
les
sub
shrl
pop
shl
sub
cmp
lods
ds
mov
lods
cmp
xor
divl
lahf
sahf
mov
cmc
jbe
mov
or
roll
test
stc
cmpsb
stos
aam
sub
pop
xor
pop
rorl
iret
jecxz,pn
xchg
add
cmp
je
enter
int
sbb
ss
inc
dec
popf
popa
das
movsb
sub
imul
lock
addr16
push
out
arpl
rcrl
into
enter
shl
dec
dec
sub
addr16
dec
dec
imul
push
clc
xchg
orb
sub
cmp
xchg
faddl
cmc
xchg
andb
shlb
imul
jecxz
in
adc
or
mov
or
out
push
lods
out
loop
scas
icebp
ret
pop
scas
mov
int3
adc
cmpsl
push
pop
cmp
pop
add
lds
sub
jmp
loopne
jle
aam
into
mov
lret
push
xor
and
jne
lcall
mov
adc
push
test
test
fcoms
xchg
mov
push
mov
push
mov
dec
int3
lcall
inc
movsb
ljmp
lret
ret
imull
sbb
loop
xor
sub
les
out
pop
ret
gs
push
mov
clc
mov
out
jno
push
mov
mov
stos
lock
test
lcall
mov
inc
xorl
or
out
pop
xchg
int3
mov
mov
add
movsl
sti
fsubl
sbbb
jmp
push
scas
out
data16
xorb
rclb
call
push
push
fldt
or
dec
jecxz
cld
and
push
xorb
pop
or
lock
icebp
push
into
aam
orl
dec
pop
jge
cmpsb
sub
or
lds
addr16
push
mov
sbb
es
mov
mov
cmp
in
cld
mov
xor
xchg
lods
decl
test
dec
lods
or
adc
sub
int3
mov
adcl
into
or
push
std
fistl
andb
push
movsb
pop
push
and
mov
jae
ret
jno
add
movmskps
pop
mov
test
int
fimull
push
jb
xchg
and
in
repz
or
xor
mov
jmp
xchg
dec
fs
ds
xchg
ffree
cmc
into
adc
lock
lods
adc
xchg
faddl
bound
xor
pop
push
push
or
or
sub
xor
and
shl
inc
mov
js
jle
lret
insw
cs
int3
push
js
pop
stc
xchg
xor
pushf
imul
inc
lods
outsb
mov
push
mov
sub
mov
xor
xor
and
shlb
test
insb
xor
pop
sahf
inc
test
sbb
scas
loop
push
mov
add
or
clc
pop
pusha
xchg
fmull
add
dec
rol
cmp
xlat
mov
mov
icebp
pop
and
lock
stc
aad
movsl
mov
pushf
repz
adcl
in
loop
xchg
sbb
adc
sbb
mov
cmp
ja
xchg
pop
jae
dec
sub
add
test
std
mov
sbb
insl
mov
movsl
inc
xlat
outsb
push
xchg
outsb
mov
lea
hlt
and
enter
data16
and
inc
or
xor
out
aaa
lcall
push
push
ljmp
stos
cmp
cmp
jle
xchg
popf
in
cmp
pop
popf
and
out
add
pop
mov
adc
outsl
mov
arpl
xchg
jae
and
lahf
addr16
movsl
mov
or
cmp
in
adc
or
sub
lcall
daa
popa
sub
push
mov
mov
jae
push
jge
lock
push
inc
pop
jbe
scas
dec
lods
enter
repnz
orl
pop
lods
les
sbb
xorb
and
mov
mov
inc
dec
es
mov
popf
inc
inc
xchg
repz
imul
out
fistl
addr16
xchg
insb
int
test
mulb
pop
lods
sub
xchg
mov
xchg
jmp
ret
inc
fcomip
mov
pop
andb
adc
insl
and
addr16
sti
popa
jnp
je
xchg
cwtl
sbb
inc
and
lea
out
add
mov
cmp
jns
lea
repnz
mov
rcrb
loopne
xor
test
jae
inc
addr16
fsubrp
cli
dec
mov
rcll
rolb
mov
rol
in
popf
std
or
faddl
mov
dec
dec
sti
out
or
fidivrl
in
add
mov
jbe
cmc
mov
sub
mov
mov
cmp
push
test
mov
rcrb
rcr
fdivl
adc
sub
ds
jne
or
adc
test
test
in
sub
push
orl
dec
adc
out
fcmovnb
sub
enter
push
mov
sahf
icebp
aas
sub
out
rorl
xchg
test
lds
fstpl
data16
or
dec
sub
xor
mov
sti
sbb
lods
pop
jne
xor
notl
shl
hlt
mov
and
jns
das
inc
mov
ja
pop
pop
or
add
inc
ljmp
fcmovnu
shrl
push
fstpl
stc
test
cwtl
into
scas
mov
cltd
mov
imul
xchg
xchg
cmpl
test
subl
sahf
lcall
jle
jg
loopne
leave
lea
jmp
imul
data16
sbb
imul
test
es
ror
iret
mov
cmp
les
test
lret
ret
jns
cmp
fstpt
xchg
push
jno,pn
mov
cmp
inc
shr
orl
int
xor
pop
mov
sarb
int
dec
add
dec
and
cmp
inc
cli
pusha
xchg
push
gs
xlat
sbb
decb
mov
mov
mov
add
jno
ficompl
popf
rcll
dec
ljmp
fwait
shrb
inc
lret
into
fistpll
inc
into
jmp
push
cltd
jmp
sbb
outsl
push
xchg
mov
scas
out
test
jg
cmp
subb
ret
outsl
sbb
and
or
and
fwait
pop
inc
and
rorb
pop
ss
ss
scas
aas
dec
dec
sub
hlt
mov
flds
inc
ficompl
xor
pop
xchg
xchg
inc
leave
leave
lret
xchg
in
mov
je
sarb
ds
push
popf
cmc
or
fildll
adc
and
mov
jp
and
or
ljmp
pop
mov
xchg
cwtl
fcmovb
mov
mov
xor
jl
rorl
std
jns
iret
loopne
enter
popf
rcrb
cmpsb
mov
mov
mov
addl
int3
lret
mov
add
mov
mov
inc
in
inc
and
aad
ja
xchg
shlb
mov
push
sbb
int3
cmp
lds
sub
stc
or
mov
jo
ljmp
pushf
mov
into
fstps
stos
jns
scas
int3
jbe
outsb
jge
jg
ja
ljmp
aam
daa
push
mov
enter
jecxz
lods
lret
xchg
lret
pop
enter
pushf
pop
sub
xchg
cmpsl
lcall
les
xchg
cmp
insl
movsl
ret
ja
inc
xor
xor
add
add
std
cs
popf
push
adc
adc
fsubl
shr
into
dec
movsl
ret
stc
movsl
test
stc
lahf
in
cmpsb
mov
ficomps
fdivl
sbb
int
cmp
cwtl
mov
push
pop
outsb
outsl
movsl
push
dec
mov
push
fidivrs
fisttps
sahf
test
mov
mov
push
dec
and
jae
fstl
lock
bnd
sub
pop
xor
mov
out
mov
scas
iret
frndint
lret
call
lret
xchg
loopne
out
sbb
in
xor
mov
adc
shrb
push
sub
or
sbb
or
cmp
sahf
inc
lds
xor
std
fbld
jecxz
xor
push
push
call
or
sub
scas
mov
push
pop
fcomps
mov
push
test
push
into
cltd
andb
js
out
in
cld
loop
push
xchg
rorl
cltd
imulb
jnp
or
insb
dec
in
sbb
adc
insb
out
dec
outsl
jmp
nop
lahf
sahf
ljmp
loop
in
movsb
push
gs
inc
sub
mov
jl
dec
int
push
insb
out
and
add
rcll
subb
adc
ret
cmc
fidivrs
aad
jb
xchg
pushf
adc
xor
fcmovu
dec
push
roll
add
or
jg
das
dec
insb
out
pop
or
stc
push
lock
pop
scas
out
adc
call
cmp
cltd
jmp
in
mov
test
scas
mov
add
cmp
pop
push
xor
adc
adc
in
adc
nop
popa
into
ret
xor
imull
inc
adc
or
daa
enter
out
push
push
cmpsb
loope
cmp
push
adc
pop
call
int3
lret
mov
fistps
es
pop
les
cmp
mov
outsb
in
int
sbb
aad
dec
pop
roll
pop
mov
push
xor
sbb
in
out
dec
dec
insb
hlt
push
lahf
adc
inc
stos
sub
jb
xchg
xchg
daa
shrb
cwtl
cmpsl
int
popf
iret
insl
lret
jle
dec
push
in
mov
pop
test
xor
pmulhw
push
dec
xchg
icebp
jae
scas
dec
loop
dec
rorl
aaa
dec
and
mov
sbb
xor
rcrl
popf
aaa
out
fsubrs
mov
push
stos
icebp
push
xor
ret
cmp
jae
es
jnp
mov
das
cld
push
rcll
lds
inc
mov
push
add
repz
jecxz
lds
leave
push
mov
imul
mov
pop
outsl
push
sub
in
xchg
data16
aad
pop
scas
sbb
cli
in
pop
xor
cmp
adc
mov
ljmp
xor
xchg
int
jle
xchg
std
into
pop
jno
mov
pop
sbb
push
outsl
sbb
sbb
xchg
out
cmp
icebp
mov
test
or
dec
les
fwait
adc
lea
sbb
dec
es
mov
mov
push
jle
test
inc
divb
xchg
adc
sub
arpl
roll
push
push
test
ljmp
and
xor
lcall
and
or
pop
jbe
cmpsb
jecxz
xchg
lods
data16
jmp
fbld
cltd
outsb
mov
ljmp
sub
out
xor
arpl
dec
push
push
push
test
test
mov
pop
imul
movsl
jno
stos
pusha
cmc
mov
xor
leave
jg
stc
push
push
xor
mov
inc
adc
jmp
scas
cli
xchg
or
mov
sub
jne
repz
jp
pop
xor
mov
ret
cmp
cmp
sahf
and
jns
cmp
fsubs
push
mov
xchg
imul
out
inc
jge
out
int
and
mov
mov
out
add
sbb
inc
insb
loopne
cmp
loopne
dec
and
dec
shrb
mov
dec
outsb
daa
pop
inc
mov
mov
dec
arpl
cmpsb
push
subb
je
test
jnp
mov
inc
test
pop
ret
lods
cld
mov
xchg
dec
enter
das
popf
sub
fistpl
aaa
les
xor
hlt
jno
aam
inc
inc
lret
pop
jp
pop
adc
push
in
scas
xor
pop
xchg
jb
add
lcall
test
or
mov
jle
leave
push
dec
into
push
pop
cmpsb
rcrl
inc
xchg
mov
and
lea
push
stos
push
popf
enter
fcmove
push
cltd
das
pop
push
lahf
loop
push
mov
push
sarb
fcoml
sub
gs
ja
clc
xchg
shll
sub
mov
push
outsl
out
mov
xor
add
sub
sti
cwtl
and
test
stos
jno
jg
xchg
push
pop
xchg
adc
push
or
repz
cmpsb
scas
sub
sahf
hlt
jmp
loop
ss
add
es
mov
dec
sbb
fmuls
pop
pop
push
pop
fistps
bound
mov
pop
and
pop
jmp
cld
imul
jl
pop
fldcw
insb
jbe
push
mov
bound
jle
test
ficoml
inc
jecxz
lahf
sbb
das
pop
lea
jno
cmp
mov
inc
sub
jl
ss
call
xlat
cs
in
lds
rcrl
dec
shlb
aas
jge
push
xchg
mov
mov
mov
xchg
aam
stc
dec
pop
mov
fwait
xor
cmpsl
adc
inc
jmp
mov
push
or
mov
popa
sbb
out
inc
sub
jne
xadd
or
pop
in
mulb
dec
pushf
pop
lock
shl
ds
sub
jmp
cmp
out
aam
add
sub
jmp
pop
jae
jb
push
loopne
pop
cmp
loop
orl
addr16
repz
scas
dec
sub
fists
sbb
loope
aam
orl
add
lea
jae
cli
pushf
or
jp
fldenv
jo
imul
je
stc
push
cmp
add
mov
jno
cmpsl
testl
push
daa
push
aam
and
pop
cltd
mov
dec
dec
lret
push
cmp
jnp
xchg
adc
imul
xor
mov
gs
in
mov
mov
test
mov
fs
call
xor
adc
cmp
in
and
xchg
push
sbb
adc
jp
test
mov
daa
push
repz
cmpsl
in
pop
aad
jb
ret
add
leave
in
rcrb
fiadds
call
lret
stc
sbb
mov
gs
out
ret
adc
mov
mov
imul
mov
xchg
jmp
adc
mov
add
dec
subl
std
jns
mov
icebp
fsts
hlt
and
aam
push
imul
xor
ret
jle
jb
ss
lods
push
pop
cwtl
add
dec
or
addr16
lock
fidivrs
stc
cbtw
popf
les
pop
int3
aad
xchg
sbb
sbb
loop
addr16
in
push
xchg
add
inc
icebp
test
mov
iret
push
push
jae
mov
loopne
sub
mov
or
in
inc
jns
add
aam
inc
shl
jl
push
and
xlat
mov
test
mov
hlt
mov
ror
mov
pop
or
add
shl
pop
xchg
mov
mov
in
in
aam
enter
pop
jl
inc
adc
xchg
daa
adc
daa
pop
dec
adc
dec
lock
cltd
aam
mov
dec
mov
jbe
xor
jmp
sub
pop
inc
in
cmp
lret
test
mov
fisubrs
movsl
xor
xchg
inc
loopne
and
mov
shrl
repz
ljmp
push
pop
imul
fnstsw
mov
aam
push
loope
mov
das
or
mov
jb
into
push
fs
loopne
icebp
jmp
sar
push
lcall
and
xorb
push
les
negb
bound
fs
sub
mov
dec
ljmp
lret
ljmp
fdivrl
jo
push
mov
jns
sbb
int3
push
stc
xor
push
or
call
imul
xlat
push
ja
shlb
mov
aam
dec
pop
adc
push
or
dec
mulb
jle
xor
jle
dec
iret
cld
rorb
sbbb
mov
mov
xchg
nop
js
fisttpl
mov
fisttpll
hlt
push
dec
enter
push
adc
test
push
push
push
scas
rcr
in
in
das
add
stos
lods
stos
push
mov
push
inc
aam
push
jnp
or
cmp
and
lock
xor
cmp
mov
mov
subb
shl
dec
je
sbb
xchg
mov
mov
pushf
inc
xchg
fcmovb
dec
mov
or
xor
mov
dec
je
mov
cli
mov
fimuls
sti
call
rcll
in
das
or
fsubrp
lcall
fwait
pop
loopne
pusha
lret
push
js
mov
xchg
push
lret
push
loop
jae
or
push
mov
inc
inc
dec
pop
scas
pop
push
cmpsl
or
hlt
lock
jp
xchg
xchg
icebp
cmpl
add
test
std
arpl
inc
stos
pop
jmp
into
and
test
enter
out
pusha
sbb
icebp
jbe
sub
dec
pop
lahf
les
jmp
or
inc
lcall
mov
dec
outsl
xchg
mov
pop
sbb
mov
arpl
outsl
jnp
icebp
lcall
fs
movsl
neg
aaa
sbb
and
icebp
fimull
xchg
jb
out
test
mov
push
jns
mov
ja
pusha
leave
popa
stos
bnd
mov
xor
fcomps
rorb
ja
push
dec
pop
pop
sub
sub
sub
and
arpl
cmpsl
mov
fists
pusha
subl
imul
and
addr16
push
cmp
or
push
xchg
cmp
sbb
cwtl
mov
lods
test
jecxz
jo
lahf
insb
mov
push
lret
dec
pop
loop
xorb
push
mov
fnstcw
jns
cmp
fisubrs
inc
hlt
nop
mov
int3
mov
fwait
xchg
mov
stc
push
push
xchg
adc
scas
fwait
sub
pop
or
add
xchg
std
cmpb
mov
cmpsl
nop
fwait
cmpsl
inc
aam
in
rorb
jge
out
cld
rorl
and
int
pop
out
lret
or
daa
test
addb
mov
call
test
push
sbbb
in
std
out
orl
pusha
jne
pushf
pop
dec
jmp
pop
jne
out
mov
fmull
fs
rclb
cs
addr16
push
lahf
xor
pop
cmp
adc
sbb
std
push
jge
stos
cmp
inc
gs
inc
mov
xlat
aas
push
lcall
and
jg
sub
sub
icebp
cwtl
js
hlt
push
inc
xchg
in
xchg
ss
mov
dec
js
scas
jno
xchg
dec
mov
dec
aad
aam
mov
push
sti
mov
push
bound
test
loopne
cmp
lcall
in
add
call
jmp
aaa
loop
push
push
dec
pop
mov
add
xchg
pop
mov
inc
in
mov
outsb
and
push
adc
outsw
lds
sbb
xlat
cmp
fst
cmp
bound
cs
cmc
test
mov
rolb
jno
je
dec
cmp
and
xchg
lea
push
mov
jle
out
test
lods
lahf
repnz
add
xchg
push
mov
lcall
sub
stos
xchg
xlat
push
xor
cmp
and
sbb
or
fstpl
mov
pop
sub
loopne
inc
pop
cli
push
jbe
inc
add
test
bound
shlb
sarl
fiadds
jp
ds
fmuls
jbe
xor
mov
mov
pop
sbb
sub
pop
lahf
or
popf
lods
dec
fwait
movl
and
shl
jne
mov
xchg
mov
ret
out
mov
and
nop
rolb
ljmp
jbe
and
sbb
daa
cmp
mov
dec
aam
cld
dec
dec
push
jl
loopne
lds
test
imul
xor
add
fdivrs
rorb
sbb
mov
and
shrb
lods
pushf
mov
into
out
dec
out
xor
pop
jbe
cmp
in
add
sbb
imul
dec
imul
pop
into
int3
int3
test
push
lcall
mov
pop
push
pop
pusha
sbb
jo
arpl
cmp
jmp
mov
mov
inc
repz
fnsave
lea
cmp
testb
push
jnp
mov
inc
rcrb
in
outsl
movsl
cs
je
sbbl
fdivrs
and
push
aad
stos
imul
test
cli
cmp
jle
push
xchg
cwtl
pop
push
and
aas
das
jo
es
add
lret
xor
daa
jno
dec
bound
mov
movsb
daa
stos
or
mov
dec
jno
and
out
cmp
push
or
into
mov
xchg
mov
mov
cmc
aam
out
mov
outsb
aas
test
popf
daa
mov
push
and
icebp
push
dec
loope
test
subl
dec
test
jp
out
dec
loop
or
pop
fisttps
mov
lret
jl
std
sbbb
jnp
int3
pop
loope
mov
mov
push
jp
sub
jecxz
xchg
dec
out
das
hlt
sbb
push
dec
sbb
pusha
shrl
icebp
cld
xlat
int3
jbe
mov
cmp
mov
add
cmp
push
sarb
pop
push
repnz
pop
pop
aas
lahf
out
mov
pop
mov
and
pop
jmp
and
out
sahf
xlat
test
ret
push
dec
js
iret
or
mov
adc
jle
mov
inc
js
jle
inc
pushf
mov
sbb
fdivr
loopne
outsl
xor
sbb
pop
mov
cs
cld
xchg
mov
stos
dec
daa
loop
mov
clc
xor
sahf
xchg
int
pop
adc
mov
and
push
inc
jp
cmp
fdivrl
xor
jp
sbb
jl
and
pop
repnz
lock
mov
cmp
lret
or
pop
pusha
out
jmp
xchg
and
jl
jns
insb
add
cli
es
ljmp
mov
btr
xor
pop
pop
pop
orl
push
push
lcall
fnstenv
lret
or
in
pop
sbb
divps
pushf
add
jo
push
test
inc
jae
xchg
dec
lcall
scas
aas
or
xchg
pushf
dec
push
push
imul
fdivp
daa
and
push
pushf
cmpsl
fisttpll
add
mov
sub
cs
dec
mov
push
push
xor
leave
icebp
test
rorb
icebp
mov
sub
fildl
in
outsl
push
inc
loopne
ja
xor
adc
int3
and
xchg
xor
add
outsl
insb
xor
xor
lea
push
jne
cmpsb
addr16
jmp
sbb
aam
add
addl
cmp
lea
cld
pop
lret
imul
mov
pop
dec
out
ljmp
fiadds
adc
pop
dec
sbbl
xor
push
jmp
ret
lret
out
scas
xchg
dec
lea
sahf
cs
dec
ds
mov
fwait
mov
mov
orl
and
filds
or
out
in
pop
jecxz
sarl
stos
and
es
repz
test
leave
pop
mov
dec
out
jae
stos
add
inc
mov
mov
push
mov
push
out
mov
or
pop
pop
add
sub
test
divb
mov
push
pusha
es
test
jecxz
pop
int3
xchg
es
cmp
fsts
arpl
cmp
ja
cmpl
mov
or
loopne
mov
mov
orl
fsts
adc
call
xchg
inc
push
push
pop
dec
je
lahf
lret
daa
outsl
xchg
mov
dec
test
repz
sbb
sub
aad
jmp
adc
mov
or
xor
fmuls
ja
in
scas
add
aad
stos
insl
pushf
iret
jmp
jnp
rol
push
fxch
fdivrs
cmpsl
nop
test
push
cs
push
lcall
cmpsl
xchg
jl
mov
sti
lcall
xchg
test
and
stos
or
int
daa
sub
rcl
pop
xlat
popf
pop
pop
or
pop
push
fistpl
pop
cmc
pop
adc
and
loope
inc
in
jmp
mov
leave
cmpsb
pushf
imul
daa
rorl
fcmovne
aam
jmp
lret
scas
adc
pop
sub
in
xor
nop
imul
add
cmp
xchg
ljmp
sbb
out
pop
push
or
movsb
in
fiaddl
fnstsw
cmc
out
out
xchg
and
push
push
insb
inc
jns
jae
sarb
daa
popa
xchg
jo
daa
rclb
jnp
lret
lds
cld
fs
scas
pop
rorb
sub
jmp
idivl
icebp
into
jecxz
jo
pop
pop
loopne
adc
push
shll
dec
cltd
fcompl
vmread
or
dec
outsl
sub
dec
jae
dec
jne
in
push
inc
orb
sahf
sti
jnp,pn
faddl
pushf
mov
ja
inc
and
jb
stos
jle
mov
mov
cmp
xlat
mov
pop
rol
sbb
test
andb
push
push
sub
mov
clc
mov
and
mov
jecxz
add
lds
xchg
fwait
iret
inc
mov
stos
jns
jmp
pop
ret
xchg
or
xchg
or
loope
clc
add
and
notb
cmp
les
dec
xor
mov
loope
addb
add
pop
jo
jmp
pushf
out
mov
test
lret
mov
pop
out
lret
pop
in
ret
sarl
sahf
pop
inc
cs
mov
in
pop
pop
mov
jecxz
lea
cmpsb
or
inc
and
or
ficoms
adc
push
xchg
pusha
mov
mov
sub
ret
mov
xor
sti
inc
das
ja
push
xchg
ret
lcall
imulb
lock
push
clc
pop
push
pop
in
push
add
cld
shll
icebp
mov
cltd
xchg
and
lds
xchg
outsl
xchg
repz
mov
xor
out
xchg
mov
cmp
sub
jmp
push
mov
sub
jmp
dec
insl
adc
xchg
int
dec
jmp
mov
add
outsl
mov
leave
sub
xchg
ficoml
ds
fwait
adc
ljmp
sub
xchg
repz
jecxz
adcb
lock
adc
andb
pop
xchg
mov
push
or
gs
shll
dec
mov
cmp
scas
addr16
add
sbb
cld
cmc
rcr
push
pop
divps
clc
loope
aas
push
xchg
xor
push
xor
out
push
mov
mov
cs
movsl
sbb
mov
push
cmp
push
dec
sub
mov
int
cmp
enterw
sub
stos
dec
pop
add
dec
rcrb
jl
loopne
mov
jg
jae
cmp
aam
daa
inc
push
inc
stc
insb
pushf
jne
mov
std
gs
push
lcall
mov
adc
adc
xchg
add
jnp
or
jo
jle
insl
sub
mov
jnp
jge
add
fistpl
loop
outsb
adc
push
push
fidivrs
xchg
fsubs
out
aam
test
mov
adc
lods
jle
pop
lahf
adc
mov
and
sbb
enter
js
in
out
xchg
mov
mov
out
sub
push
push
cld
inc
outsl
inc
adc
push
mov
andl
clc
stc
jecxz
scas
inc
adc
pop
add
push
test
mov
xchg
test
lcall
jo
pushf
xchg
add
dec
mov
imul
imul
pop
add
in
ret
aad
sbb
insb
and
imulb
lret
and
add
jmp
mov
add
imul
xchg
xor
daa
mov
in
aam
bound
popf
repz
sub
push
into
fadds
ljmp
adc
popf
and
xor
or
lods
dec
adc
jl
push
cmpsb
push
inc
call
je,pn
aas
fildll
iret
sbb
push
and
adc
xchg
std
sub
xor
push
sub
and
cld
sar
mov
cmp
push
pop
out
das
mov
dec
cmc
push
scas
mov
adc
dec
cli
jne
lods
mov
xchg
mov
out
out
aad
add
mov
les
test
cwtl
jp
std
data16
sbb
xor
push
xchg
sbb
push
pop
ljmp
in
push
nop
insb
pop
pop
xchg
ja
push
add
jecxz
mov
jnp
push
push
in
cmc
fs
lds
imul
xor
dec
lea
cmp
xor
or
pop
push
into
adc
jl
loop
fmul
lcall
flds
mov
push
lock
push
jo
enter
lahf
adc
mov
mov
and
test
pop
lahf
test
ret
pushf
rcrb
xor
test
sahf
mov
cmc
sbb
pop
daa
repnz
xchg
push
mov
dec
imul
push
or
fwait
and
push
jbe
mov
sub
or
xchg
cmpsl
nop
loopne
mov
testl
xchg
xchg
int3
sub
in
cmpsb
dec
jmp
das
repnz
add
push
push
mov
shlb
pusha
push
les
inc
in
mov
int
lock
lret
test
nop
push
xlat
shll
sarb
xchg
scas
push
mov
and
in
hlt
jle
dec
aaa
fs
mov
das
add
orb
inc
jmp
fwait
dec
int3
dec
cmc
or
inc
lret
int3
movsl
lcall
popa
test
test
xchg
lahf
cld
and
addr16
jmp
jmp
dec
rcll
fadds
dec
ret
fisttpl
cld
adc
dec
insl
inc
int
xchg
insb
jb
ret
out
pop
push
xchg
xor
mov
add
jg
notb
fcompl
pop
cmp
fnstenv
into
xchg
dec
push
cmpsb
fs
mov
sub
sbb
outsl
dec
sub
cltd
call
and
dec
xchg
jb
push
jbe
and
popa
and
jmp
cmp
mov
and
and
cmpsl
stos
xchg
dec
scas
std
sub
adc
in
sbb
pop
dec
clc
and
cmp
lcall
fidivrs
in
ljmp
push
enter
jne
sar
in
sbb
xor
insl
rorl
ljmp
lods
jns
out
cmc
sub
inc
aaa
jg
lods
imul
rcrb
fstl
adc
sbb
mov
cmp
pop
sbb
dec
pop
fstps
call
cmc
inc
jbe
subl
mov
outsl
mov
cli
push
and
loopne
add
pop
js
outsb
push
xchg
inc
addr16
loope
sub
testb
out
cs
xchg
mov
and
add
xor
xor
stos
sbb
stc
xchg
mov
daa
out
jb
addr16
cld
cmp
mov
in
sub
lods
push
inc
jl
je
repnz
aam
mov
pop
xor
bound
int
outsl
lret
xor
mov
out
cmpsl
sub
mov
movsl
or
sar
mov
add
aaa
cltd
mov
xor
jo
jmp
ja
scas
mov
dec
ss
xor
cmp
jb
out
mov
std
enter
add
aas
lahf
push
sbb
inc
jno
call
jl
jmp
push
pop
movsl
aam
lcall
dec
fisubrl
mov
daa
push
push
sbb
out
ret
sti
scas
into
push
sbb
add
shl
inc
jge
shll
es
daa
mov
pop
scas
loope
sub
dec
add
sub
sbbl
add
mov
xor
repz
pop
sbb
daa
xchg
sub
mov
lret
movsl
push
mov
cmp
or
jns
jbe
hlt
js
mov
sbbb
push
sub
inc
add
cwtl
iret
aaa
call
sub
add
jo
pop
outsl
mov
rorb
lret
das
or
sub
add
fsubrl
jmp
dec
bnd
adc
fnstcw
sub
mov
fisubrs
scas
f2xm1
das
xchg
ret
mov
inc
outsl
unpckhps
es
xor
inc
xchg
jo
data16
push
mov
jno
or
fisttps
add
arpl
scas
push
xchg
sub
imul
imul
rcl
mov
jg
movsb
dec
stc
movsb
lea
fsts
sahf
jmp
cltd
sbb
dec
dec
sub
jge
ret
xchg
push
xor
pop
fwait
sbb
jecxz
mov
xor
jnp
pop
push
push
dec
pop
repz
jns
pmullw
out
jae
inc
aad
lret
in
dec
mov
xchg
cli
pop
insl
es
pop
add
pop
adc
jecxz,pt
iret
pop
in
test
jbe
pusha
xor
hlt
pop
jmp
adc
dec
sub
cmpsb
mov
je
cmp
sub
rcrb
dec
fs
addr16
lret
test
std
mov
sbb
in
cmp
cmc
xor
test
sub
mov
fadds
sbb
ret
mov
push
das
push
and
sub
xchg
pop
jbe
inc
sbb
adc
push
lcall
fsubrs
out
sub
jns
popf
jb
dec
cmp
jno
xor
repz
lcall
pop
dec
jecxz
mov
cwtl
push
repz
or
xchg
push
xorl
mov
add
stos
insb
inc
faddl
js
repz
push
or
inc
xor
lahf
stc
pop
dec
int3
sub
lock
inc
push
insl
into
cli
stc
test
sbb
jb
fld
push
dec
xchg
jb
in
dec
loope
addr16
and
jmp
lods
mov
sub
xchg
cwtl
jne
add
sbb
xlat
daa
and
adc
iret
aaa
jno
popf
mov
stc
out
sbb
in
mov
and
pop
inc
sub
ret
out
int
in
jae
clc
bound
dec
int
inc
push
cltd
es
test
das
and
push
gs
mul
pop
ja
mov
xor
fstp
loopne
xor
cmp
fistpl
insb
xchg
xor
fsubp
mov
dec
sub
ret
add
push
outsl
addb
mov
cmp
ret
sbb
in
cld
push
pop
repz
inc
and
dec
mov
mov
test
nopl
mov
add
or
imul
push
dec
fnstcw
in
sub
and
mov
sbb
ret
lret
adc
fsubl
dec
dec
std
mov
and
push
cld
in
lods
xlat
mov
xchg
xor
sub
imul
add
ljmp
and
mov
mov
inc
pop
mov
mov
and
rorb
aad
sub
test
fldt
jmp
push
jmp
fimuls
jb
loop
and
inc
in
out
jne
xor
pushfw
inc
aam
into
jmp
xchg
cmp
lret
into
cs
lea
stos
xchg
cmp
adc
out
leave
leave
jnp
test
cld
shl
into
inc
pop
cs
ja
or
es
fstpl
das
sub
xor
mov
adc
cmp
sti
addr16
sub
data16
fcomi
stc
fiadds
mov
imul
das
aam
lret
dec
int3
lea
xchg
imul
push
push
pop
shlb
imul
in
es
push
ds
mov
inc
push
ficompl
pusha
jne
in
out
inc
sbb
das
mov
mov
ds
pop
jg
and
cli
das
insb
ret
mov
fstps
sub
sti
cltd
lods
ret
xchg
sub
dec
icebp
mov
loope
jmp
xor
fsts
jecxz
jmp
pop
rol
sub
mov
std
jg
jecxz
es
test
inc
xor
push
iret
pop
rol
out
xor
cltd
mov
jp
adc
adc
dec
fistps
int
push
xchg
repz
incl
cwtl
and
ljmp
stos
push
push
clc
and
xchg
push
jbe
repnz
pop
xchg
sbb
mov
jno
test
mov
out
popaw
inc
jp
popa
push
sarb
fcmovnu
inc
clc
push
xchg
pop
dec
pop
sahf
jge
inc
jecxz
pop
lret
imul
push
in
sub
gs
cld
cmpsl
mov
push
jmp
loope
lock
cmp
daa
rcrb
leave
push
jb
movsb
mov
enter
pop
leave
dec
das
push
cmp
add
dec
sub
xchg
push
adc
and
pusha
dec
or
add
imul
jbe
add
jb
in
out
out
outsb
pop
mov
daa
xchg
dec
push
pop
jo
push
sbb
mov
daa
pop
fsubrl
sahf
gs
ja
in
das
inc
dec
addl
inc
inc
test
and
jb
or
sbbb
ss
push
clc
xor
cmp
je
mov
jmp
test
fdivr
cltd
scas
mov
or
adc
cmc
mov
test
sub
lods
pop
mov
mov
pop
dec
mov
push
je
mov
or
and
mov
mov
pop
hlt
xor
push
adc
inc
stos
jge
pop
pop
shl
loop
jecxz
xor
sar
clc
dec
sbb
fadds
inc
or
dec
jg
insl
or
leave
cwtl
add
dec
imul
mov
pushf
sub
or
and
int
repnz
jne
jg
push
rcrb
lds
mov
out
add
mov
ss
addr16
mov
and
adc
lret
inc
ja
xchg
and
aaa
stc
ret
cs
jp
scas
sub
out
fcmovnb
push
xchg
into
mov
mov
cs
addr16
ficomps
mov
push
cmc
fucomi
clc
ret
pop
push
shrl
ljmp
pop
or
dec
in
inc
cwtl
jp
stc
inc
pop
gs
and
aaa
dec
cmp
dec
push
movsb
inc
clc
cmp
test
aas
cmp
dec
shr
orl
xor
in
stos
inc
loopne
dec
aaa
sub
not
lods
cwtl
add
xor
insl
repz
cmpsb
push
pushf
cld
add
sub
dec
subl
sbb
push
jl
mov
dec
gs
push
decl
jle
mov
movb
test
jmp
and
roll
ret
insb
push
test
rorl
mov
jae
lods
icebp
fstpt
addb
xchg
xchg
mov
cmp
cmpsb
cmp
cmp
push
jne
pop
xchg
sub
call
or
xorb
fisubl
aaa
or
mov
xor
dec
inc
xchg
test
jne
icebp
xor
in
fnop
cli
popf
sub
mov
xchg
ucomiss
cwtl
das
push
xor
iret
fsubrs
cmc
jmp
or
xor
mov
shlb
cmp
adc
stos
shlb
lds
test
fsubrl
test
cmpsl
adc
xchg
xor
outsb
popa
push
shrb
repnz
push
loopne
cld
pop
jge
aas
fs
repz
cmc
repnz
sbbb
mov
mov
add
enter
ja
pop
sbb
jo
mov
and
mov
xchg
adc
push
in
fidivrl
mov
push
mov
push
je
pop
mov
lret
sub
dec
mov
scas
sub
mov
in
fstpl
pop
xchg
adc
ds
ret
adc
mov
repz
stos
pushf
mov
mov
xlat
inc
into
arpl
jne
cmp
mov
add
sbb
movsl
mov
movsl
scas
out
jns
loopne
neg
stos
mov
jae
iret
sbb
add
test
push
xor
rclb
or
jns
xchg
sbb
ret
dec
xor
push
leave
shl
fmul
push
add
shll
mov
xor
cli
cmpsl
das
mov
pop
push
mov
xor
cmc
stc
mov
aas
cmp
mov
rolb
cli
adc
xor
or
pop
xchg
icebp
mov
pop
add
ja
leave
repnz
fst
xchg
loop
ret
push
lea
mov
popa
jo
xor
push
sub
jbe
or
cmpl
call
add
cmp
or
inc
rol
xchg
lcall
test
insb
lds
inc
fcomps
xor
jo
mov
xchg
rcrb
mov
xchg
push
subb
xchg
pop
into
leave
mov
push
lahf
out
sub
pop
sbb
mov
mov
lea
loopne
jns
out
test
mov
aad
sahf
daa
sub
icebp
ds
sub
dec
pop
jmp
call
jns
jecxz
or
mov
cld
mov
loopne
jecxz
test
xchg
test
push
push
push
outsl
jbe
adc
out
addr16
adc
mov
lds
pop
fstl
jg
adc
iret
rcrl
pusha
sahf
test
lretw
pop
sub
xchg
std
fsts
in
mov
inc
and
jmp
push
fldl
sub
sbb
pop
fidivl
jp
insb
rolb
mov
push
pushf
xor
or
add
inc
push
jbe
dec
decl
adcb
jnp
xor
pop
lret
leave
dec
out
add
sti
add
mov
dec
popl
jl
jbe
in
aam
fldlg2
lds
data16
push
shll
xchg
push
and
out
mov
cmpsb
sti
jns
pop
in
push
sbb
aad
data16
push
sbb
loopne
outsb
mov
loope
jmp
xor
into
inc
mov
jle
push
mov
fimuls
pop
loop
icebp
je
mov
cmp
and
test
inc
jle
or
mov
sti
pop
xor
popa
or
hlt
xchg
shll
sahf
cmc
add
mov
sub
movsb
cs
add
lret
or
pop
lahf
add
in
or
out
push
bound
cmpsl
loope
in
jmp
clc
pop
cmpsl
je
lcall
jne
xor
popa
aas
pop
test
andb
or
mov
mov
mov
testb
cmpsb
jl
mov
adcb
mov
xor
add
hlt
adc
adc
lret
jnp
mov
into
mov
mov
mov
jns
loopne
std
shlb
lahf
lahf
pop
in
dec
jge
jb
std
mov
out
jae
fidivs
test
pop
loope
cli
sti
jne,pn
std
mov
pop
xchg
stos
adc
sub
inc
or
add
cmpsl
mov
test
dec
push
or
mov
in
sub
movsb
adc
or
pop
cmp
pop
loop
enter
fs
xor
sbb
fistpl
mov
lcall
add
push
rcrb
fwait
outsb
push
aas
cmpb
push
mov
pop
push
and
pop
fcmovnb
xorl
sbb
pop
inc
jnp
mov
inc
xor
jl
imul
test
loop
jle
dec
fstpt
push
pop
xor
test
mov
adc
mov
xchg
pop
leave
je
push
push
inc
push
pop
fnstcw
jbe
stos
test
push
or
mov
pop
jmp
daa
and
stc
iret
pop
xchg
adc
adc
sub
ret
push
mov
pop
inc
lods
lods
push
add
mov
sub
push
lcall
nop
mov
xor
xchg
sub
outsb
xchg
loopne
mov
movsl
loopne
stos
jns
pop
adc
push
daa
out
or
lods
jnp
push
mov
leave
pop
lret
stos
mov
mov
cmp
ret
sbb
mov
das
gs
mov
cmp
cli
repz
fcoms
mov
aad
sbb
xchg
xchg
sahf
xchg
mov
fsts
push
lahf
xchg
cld
adcl
or
xchg
into
mov
rcll
mov
dec
push
cmpsl
sahf
adc
push
jae
lods
dec
dec
and
mov
pop
daa
inc
cld
fs
rorl
adc
nop
lods
mov
jge
rol
fidivl
jo
sub
loope
lock
mov
test
rolb
dec
sbb
ja
adc
inc
imul
jno
movsb
mov
xor
push
xchg
bound
int3
adc
sub
mov
add
repnz
lods
sbb
lds
je
in
es
cld
push
lahf
mov
pop
jl
sbb
push
out
mov
js
sub
ror
cmp
pop
jne
gs
loopne
or
leave
daa
sub
adc
leave
outsb
mov
insb
jnp
pop
leave
sbb
inc
imulb
sub
rcrl
int
mov
and
test
sub
rcrl
adc
imull
adc
dec
scas
pop
jg
fbld
sub
nop
cmp
cmp
cmpsb
push
cmc
mov
add
xor
dec
xor
mov
sbb
inc
cmp
push
sbb
out
lods
pop
icebp
sti
xchg
sub
mov
loop
lcall
outsb
xchg
cltd
jae
push
rclb
or
sbb
xchg
ja
test
or
fnsave
mov
fs
jb
addr16
mov
dec
fldcw
push
jle
aaa
mov
pop
lock
pop
jbe
in
das
lods
cltd
stc
and
xchg
adc
dec
sub
lods
rcrb
sbb
loop
or
jg
lahf
jno
pop
pop
out
mov
pop
add
mov
aam
sub
pop
ja
pop
cld
xchg
ja
xchg
pop
inc
and
pop
jne
les
je
sub
cs
pop
add
mov
cmp
inc
xchg
stos
cltd
jle
sti
iret
mov
lock
ljmp
or
xchg
cmp
out
add
out
sbb
ljmp
mov
aas
andb
or
fcoms
dec
mov
ljmp
in
mov
sbb
and
and
jmp
mov
xor
into
es
test
outsl
rorb
lret
rolb
adcb
push
jne
insb
jl
and
ja
test
sub
ja
rorl
adc
pop
or
adc
daa
jle
jbe
pusha
or
jae
inc
mov
or
pusha
test
outsl
mov
pop
or
aam
aas
sbb
jns
addr16
pushf
int3
in
push
inc
dec
lds
mov
setg
pushl
xchg
lret
ror
je
icebp
jno
mov
test
xlat
dec
call
fs
inc
fildl
fldl
sahf
dec
movsb
xchg
push
cmp
inc
cli
jmp
lds
fmuls
jns
xlat
fucomp
push
cmp
mov
mov
repz
push
ss
ret
jmp
jae
lret
pop
bound
cmp
ss
xor
jb
rcr
inc
daa
les
and
pop
jp
jns
das
lret
sahf
outsl
xchg
fdiv
lahf
insb
inc
mov
mov
dec
sub
pop
fs
orb
repz
inc
stc
and
addr16
push
hlt
repnz
or
sbb
pushf
jb
orb
sub
lahf
inc
jp
test
mov
fdivrl
out
adc
jne
stc
mov
xchg
loope
and
repnz
mov
lcall
sub
lods
inc
lcall
inc
jns
into
imul
push
jb
mov
jmp
dec
loop
push
push
dec
sub
das
push
add
adc
icebp
and
pop
add
adc
call
iret
push
dec
sbb
push
cwtl
ret
cmpsb
lret
mov
cmp
js
fbstp
scas
and
ss
xor
dec
fistpl
jno
divl
xor
sub
icebp
dec
pop
inc
loope
add
xchg
out
dec
dec
arpl
mov
std
mov
pop
dec
or
xor
inc
push
insl
xchg
or
gs
dec
add
cs
jb
shrl
bound
ret
push
pop
cld
cmp
shl
mov
mov
xchg
idivb
cmp
push
or
lcall
jmp
adc
scas
push
notl
mov
mov
pop
in
repnz
mov
and
sub
loop
es
xchg
jbe
dec
pusha
mov
dec
sbb
jecxz
push
dec
xor
sti
cmc
jecxz
stc
enter
cltd
dec
jbe
dec
iret
mov
push
cli
or
push
xor
dec
pop
mov
sub
cmpl
icebp
inc
loope
je
icebp
xor
movsb
pushf
cmp
dec
mov
int
dec
mov
jle
dec
mov
mov
mov
out
test
push
dec
dec
or
push
dec
pop
test
loopne
push
mov
jl
insl
and
sub
mov
push
add
shlb
ret
sbb
push
push
rolb
call
mov
cld
mov
outsl
mov
js
sbb
or
sahf
gs
mov
pop
test
jb
jb
push
sub
push
jg
jne
mov
push
lods
imul
bound
push
pushf
orl
in
xchg
cmp
and
xchg
es
and
loope
int
mov
or
cmp
bound
ljmp
add
test
sarb
dec
jae
lods
fdivrl
dec
push
mov
xchg
out
in
xchg
ja
dec
std
push
pop
and
push
xor
jns
out
js
dec
inc
js
stos
repz
sbb
mov
xchg
repnz
aas
jmp
dec
add
scas
inc
mov
inc
mov
daa
xor
mov
test
lahf
xchg
and
repz
mov
int3
das
repnz
inc
cmpsb
pusha
sbb
push
xor
sub
cmp
rorl
push
sahf
push
aaa
clc
pusha
dec
das
mov
aam
adc
scas
inc
out
ja
insb
jnp
mov
stos
daa
std
and
inc
adcl
dec
xchg
push
dec
loop
in
dec
pop
scas
mov
aaa
sbb
mov
mov
sbbb
and
jae
das
push
lcall
inc
dec
mov
xor
dec
push
pop
xchg
or
and
repnz
push
das
sbb
and
gs
push
xchg
das
lds
cmp
pusha
and
jb
xlat
sub
adc
or
sub
cli
adc
fisubl
popf
arpl
lods
fs
sub
dec
js
pop
push
imul
test
dec
mov
pop
push
mov
or
dec
push
mov
dec
loopne
xlat
push
insl
ljmp
ret
pop
fsubp
sub
adc
test
ret
pop
js
jbe
scas
cs
pop
mov
fbld
cmp
add
adcl
xor
dec
push
dec
pop
inc
push
sub
mov
mov
rclb
out
dec
push
xor
pop
repz
sub
mov
inc
inc
notl
adc
jmp
icebp
scas
or
and
out
shr
in
pop
inc
dec
loopne
fisubrs
fcomps
mov
mov
xor
lret
notb
repz
test
pop
cs
les
and
jo
xchg
or
fiadds
cli
mov
add
in
in
mov
mov
sahf
inc
adc
xchg
adc
jns
mov
cld
hlt
dec
loop
mov
mov
jp
outsl
lea
test
mov
mov
out
jg
enter
test
dec
dec
xchg
pop
sbb
repnz
push
inc
je
in
jg
and
fistps
jl
enter
jo
jmp
push
mov
cmpsl
js
popa
daa
jne
jmp
rcll
jp
cmp
and
orb
mov
fcmovne
scas
lock
sbbb
dec
push
pop
jecxz
cld
pop
dec
pop
into
jecxz
pop
adc
in
std
loope
xchg
adc
sahf
jp
mov
int3
fmull
sbb
jle
mov
push
jge
xchg
mov
cmc
lret
push
mov
mov
andb
mov
clc
dec
xchg
pop
mov
aas
dec
sbb
rcll
jmp
cmp
jb
push
mov
lret
mov
mov
cltd
xor
push
sbb
mov
iret
out
outsl
mov
mov
lret
dec
sub
lret
fdivrl
test
repz
enter
orb
in
cmc
xor
test
and
mov
mov
jge
inc
movsb
inc
test
mov
adcl
mov
popa
popf
lock
cmpl
in
push
mov
bound
leave
add
jnp
inc
lret
pop
scas
push
push
mov
jo
decb
jno
mov
inc
test
xor
das
ljmp
fisubrs
sub
out
lock
imul
xchg
nop
push
sbbb
je
leave
scas
sbb
ljmp
sbb
popf
lret
mov
lods
iret
test
scas
push
push
imul
xchg
mov
push
jp
xchg
xchg
call
cltd
stos
std
mov
mov
or
out
nop
sbb
dec
or
nop
push
ja
xchg
insb
sub
xlat
pop
add
cmpsl
adcb
lods
push
mov
ja
jns
int
leave
pusha
sbb
out
in
push
sbb
mov
mov
xchg
test
push
mov
xchg
loopne
pushf
and
sbb
jmp
push
push
insb
mov
rcr
pop
fldenv
fucom
idivl
push
outsb
imul
sti
mov
lahf
fildll
push
mov
mov
push
idivl
pushf
aas
sub
repnz
jp
and
dec
pop
out
sbb
ret
inc
sbb
push
push
xor
cmp
scas
xchg
out
or
repnz
mov
in
stos
sub
ret
jb
add
xchg
pop
or
outsb
sti
adc
mov
mov
pop
xlat
aad
inc
shrb
mov
or
dec
fsubr
leave
cmp
nop
push
and
fs
stos
lcall
lahf
inc
rcrl
aam
int3
xchg
call
cs
lock
jmp
dec
in
lret
gs
dec
push
and
scas
cmp
cmpsl
fmull
mov
xchg
sahf
gs
adc
jns
adc
lods
add
and
addr16
int3
mov
test
mov
xchg
outsl
mov
xor
inc
pop
popa
dec
add
mov
fs
cs
gs
loop
adc
fdivs
ds
cmpsl
lods
inc
addr16
pop
sarl
cs
mov
push
inc
enter
loopne
sbb
adc
sub
mov
ror
cmc
pusha
dec
push
push
testb
xor
cmp
fisttpl
mov
pop
mov
or
push
leave
cmp
sub
stos
mov
sbb
inc
xor
into
xchg
mov
lods
and
sbb
and
pushf
out
jmp
add
adcb
orl
jg
sar
addl
jne
xor
ds
add
jnp
xchg
test
cmp
repnz
jne
dec
mov
or
sar
xor
test
out
inc
ret
mov
mov
cld
lock
adc
dec
jmp
shlb
icebp
in
add
mov
mov
test
arpl
jle
jo
dec
repz
icebp
adc
mov
or
jmp
cmc
dec
in
mov
out
adc
mov
xchg
xor
xchg
clc
jb
cmp
mov
ss
and
mov
pop
cmp
mov
dec
scas
xchg
pop
pusha
pop
cmpsl
test
pop
mov
push
jp
stos
incb
gs
inc
sbb
push
jp
shlb
mov
aad
cltd
inc
push
sbbb
mov
and
cld
xchg
push
or
mov
mov
imul
dec
lret
cmpsl
fwait
sub
pop
pop
loopne
xor
dec
mov
mov
dec
mov
xchg
mov
lods
xchg
add
cs
mov
ja
call
and
test
cmpb
and
adc
movsb
and
push
cmp
and
dec
pop
mov
dec
call
mov
cwtl
mov
dec
dec
sub
or
lcall
mov
mov
sub
loop
rorb
out
cmp
mov
and
out
iret
daa
and
in
push
xchg
mov
packsswb
or
adc
fisttps
cmp
orb
sarl
out
bound
popf
data16
inc
sub
xchg
hlt
ljmp
testb
les
and
negl
fnstenv
push
and
test
ss
daa
test
pop
out
xchg
add
dec
mov
enter
pop
push
push
popf
das
mov
pop
repnz
sahf
fs
test
pop
mov
inc
in
jo
push
das
fwait
pusha
xchg
and
repnz
push
dec
and
movsb
and
lods
out
inc
pop
aam
mov
lock
insl
dec
daa
lahf
shrb
repz
dec
pop
jno
daa
in
inc
addr16
cltd
test
bound
mov
push
push
fxam
test
cmpsb
das
mov
push
das
repnz
pop
repnz
push
inc
and
movsb
and
push
in
jle
sahf
adc
dec
leave
pop
in
fists
and
jo
cmpsb
add
cmc
in
inc
push
dec
push
pop
repnz
lods
mov
imul
in
xchg
push
inc
pop
push
aam
jo
push
xchg
into
add
push
jne
and
mov
pop
in
xchg
mov
pop
jecxz
mov
pop
out
inc
push
and
dec
xchg
sub
or
xor
mov
and
or
dec
sub
jae
sub
xchg
xorb
stos
int
adc
pusha
jl
inc
in
xlat
xor
jmp
mov
and
xchg
inc
sarl
inc
stc
mov
lods
cmp
fwait
jmp
jae
jle
outsb
dec
mov
ret
daa
pop
in
sbb
sub
xchg
sbb
mov
pop
add
push
lahf
stos
jbe
xor
push
add
lock
mov
sahf
xchg
cwtl
mov
sbb
test
jp
cmpsb
push
js
push
out
lret
mov
jmp
dec
add
sbb
fnstsw
lds
push
cli
imul
mov
or
or
mov
xchg
fs
mov
mov
push
dec
aas
mov
dec
mov
rcrl
cmp
std
movsb
adc
cmp
stos
roll
cmc
xchg
stos
rorb
jle
pop
call
pop
jne
ds
das
aam
lea
test
push
push
mov
pop
pop
pop
in
imul
mov
imul
push
push
aas
sub
iret
mov
dec
std
pop
inc
dec
dec
les
cmp
xor
mov
xor
imul
push
sub
cmpsl
scas
jle
int3
pop
jmp
stos
mov
xchg
pop
notl
iret
jp
jmp
scas
mov
das
mov
sbb
cmp
vandnps
call
push
dec
mov
mov
ljmp
repnz
push
xchg
repz
fs
jne
jmp
mov
push
jmp
cmpsb
cwtl
jl
dec
sbb
mov
out
stos
and
push
inc
mov
mov
into
adc
mov
pop
mov
stc
outsb
cmp
jmp
fwait
push
jnp
xchg
and
inc
dec
movsl
or
mov
in
loopne
push
add
xorb
dec
repz
imul
mov
fnstcw
cmpsl
and
xor
ror
xor
mov
stos
cmp
iret
test
fcoml
popa
movsl
lcall
scas
cltd
mov
stos
mov
dec
lods
and
dec
or
daa
js
mov
mov
stos
es
or
negl
push
lods
les
fstl
sar
sub
loop
dec
test
cmp
add
pop
mov
ret
lea
lcall
ret
dec
cmp
addl
or
mov
pop
iret
ja
sahf
mov
movsl
sub
cmpsl
mov
fidivrs
lock
lods
cmp
outsl
xor
cmp
fstpt
add
inc
cltd
push
into
test
mov
sub
faddp
es
dec
pop
cmpb
jmp
dec
pop
mov
repz
xchg
popf
in
fildll
jno
stos
mov
sti
inc
push
es
lret
add
lahf
cmp
out
decl
leave
incl
xchg
inc
xchg
test
mov
dec
fcmovnu
mov
or
loop
test
jae
fidivrl
xchg
xchg
popf
dec
mov
xchg
repz
push
xor
xlat
xchg
sbb
inc
add
inc
cmp
sub
xchg
test
inc
mov
ljmp
mov
push
dec
jecxz
insb
mov
stos
aam
or
push
call
imull
mov
outsb
stc
test
mov
ljmp
inc
ret
mov
pop
dec
movsl
sbb
ljmp
popf
sbb
mov
iret
inc
and
push
jmp
cs
loopne
push
jmp
fists
lds
rclb
ficoml
or
mov
add
cmp
xchg
mov
lret
dec
fwait
lds
push
sti
or
add
inc
mov
loope
outsl
std
sub
sbb
or
into
call
in
inc
lds
gs
cld
sub
dec
push
inc
or
int
std
jnp
bound
xor
inc
and
jae
xchg
out
and
push
push
pop
mov
adc
inc
dec
mov
push
mov
sub
push
dec
xchg
in
xor
xor
repnz
or
and
jmp
sahf
or
ret
js
or
mov
and
cld
xchg
pushf
stos
stos
pushf
mov
pop
jp
imul
mov
mov
pop
jge
arpl
pop
xor
int
mov
push
add
mov
inc
sub
sti
xchg
xchg
pop
add
jne
loope
rorb
add
ret
xor
xchg
sub
inc
cmp
push
sub
sub
mov
dec
mov
imul
lret
pop
fdivrs
ds
jns
and
inc
xor
mov
pop
add
add
xor
xchg
sub
push
push
pop
es
push
dec
sbb
xchg
and
pop
dec
jb
rcrl
aas
sub
cmpsb
mov
cmp
xchg
and
jno
xchg
xchg
xor
icebp
push
push
inc
add
fucomi
cmp
dec
lea
into
cmpsb
dec
fmull
loop
jae
in
iret
xchg
sahf
bound
es
jle
push
dec
jmp
inc
inc
xchg
adc
mov
xchg
adc
arpl
dec
pop
nop
cmp
cmp
sti
xor
sbb
cmp
xchg
cld
nop
inc
aam
pushf
xor
pop
cltd
fadds
sub
decl
int
jo
mov
or
fistpl
push
scas
xchg
aas
sub
cld
test
dec
dec
cwtl
adc
outsb
shr
clc
test
cmc
cltd
fs
mov
insl
push
push
test
pop
loop
push
push
xchg
cwtl
fildl
pop
xchg
lds
jo
lods
scas
sbb
fldt
shll
movl
lea
mov
adc
and
inc
fisttps
bound
xchg
jle
jnp
pushf
mov
dec
cmp
and
jl
insb
pop
sub
daa
push
push
clc
adc
or
rcll
adc
and
jecxz
mov
jmp
movnti
cmpsb
mov
dec
imul
roll
and
mov
and
pusha
jo
test
fwait
mov
push
and
dec
push
sub
inc
push
or
int3
and
and
sub
movsl
imul
fs
je
adc
ret
mov
push
in
sub
imul
mov
xor
xor
out
aam
cmp
and
push
and
xor
insb
jo
fistpll
fcmovnb
repnz
clc
adc
mov
rolb
ja
dec
pop
mov
add
lods
sbb
movsl
or
hlt
aas
cmp
stos
cmp
ja
pop
int
hlt
mov
je
adc
lock
movsb
enter
adc
sahf
or
in
faddl
daa
mov
jmp
cwtl
sbb
push
loop
and
xchg
dec
add
add
and
sbb
add
inc
cmp
cmp
mov
mov
clc
inc
mov
xchg
mov
cltd
sbbl
mov
mov
out
dec
loop
cltd
scas
test
dec
add
sbb
fisubrl
scas
decb
lret
movsb
out
cs
mov
decb
cs
data16
push
lret
xor
sbbl
mov
daa
fs
repz
enter
dec
jl
pusha
or
and
sbbl
out
sahf
cmpsb
int3
insl
inc
out
adc
and
das
mov
xor
jg
lods
push
orb
loope
btl
fwait
dec
push
rcll
fsubrs
push
push
cmp
fcoms
jmp
stos
push
dec
dec
mov
or
sar
scas
cwtl
push
pop
mov
out
idivl
cmpb
rcrb
adc
lods
pushf
mov
dec
loope
xor
aas
es
hlt
mov
xor
clc
std
sub
xchg
stos
or
lahf
jns
test
cs
test
mov
inc
push
inc
pop
add
jg
and
push
out
dec
xor
andb
push
xor
test
inc
movsl
insb
out
lea
movsb
sahf
xchg
sub
sti
add
daa
pop
fcomps
mov
pop
repnz
mov
fadds
push
ljmp
fdivs
das
sub
das
loope
push
dec
jmp
pop
into
mov
movsl
xor
adc
jecxz
push
sub
loope
dec
xchg
in
fisttpll
or
outsl
fdivrl
fdivs
out
enter
es
subl
mov
mov
pop
lcall
xchg
sub
cli
cmpsb
shlb
shl
out
xchg
mov
jg
arpl
divb
vpsubw
add
arpl
xchg
push
rolb
push
scas
mov
sbbb
inc
loope
out
jmp
dec
sbb
sbb
outsb
repz
and
mov
into
jno
xchg
sbb
out
dec
cmp
mov
mov
pop
sub
jge
mov
cs
stos
cli
mov
mov
push
scas
push
adc
xchg
jg
popa
jmp
sub
sbb
aas
insl
frstor
jmp
add
xchg
mov
dec
in
jbe
sub
push
adc
sub
mov
std
ja
cmpsb
or
and
cmp
jmp
jno
icebp
mov
mov
sbb
loop
add
lods
das
lahf
stos
xor
call
pop
test
mov
push
and
push
xchg
jb
jnp
movsl
out
iret
mov
cmc
push
or
gs
inc
lds
cmp
insl
rcrl
lea
mov
push
push
loope
adc
inc
stos
sub
imul
in
sbb
adc
inc
sbbl
adc
sub
or
dec
mov
lods
arpl
movsb
ljmp
adc
xchg
xor
inc
push
sub
dec
outsl
mov
inc
xor
inc
or
sbb
ds
push
lcall
iret
jge
scas
loope
clc
push
inc
loope
lock
insl
cs
inc
xchg
adc
jb
mov
push
jecxz
loope
bound
xchg
cs
sub
push
lret
and
and
dec
push
insl
hlt
inc
rorb
dec
jne
xchg
lds
sub
mov
call
or
out
xchg
push
aas
cmp
mov
enter
popf
mov
xor
mov
jnp
enter
mov
sbb
rorb
cmpsl
jmp
or
sub
es
mov
xchg
out
es
dec
out
sub
fisttpl
pop
inc
cld
pop
jbe
fldt
push
dec
dec
cmp
hlt
xor
pop
xchg
jbe
out
in
jo
into
push
push
roll
adc
incb
mov
jbe
inc
sub
subl
int3
fsubr
push
pushf
pop
mov
mov
test
fwait
mov
in
in
lahf
jb
mov
sbb
mov
cmp
fucom
pop
adc
mov
in
push
pop
rorl
repz
aas
movsb
mov
push
lds
repz
sahf
dec
inc
in
dec
pop
pusha
ja
sbb
es
mov
fists
xor
imulb
scas
mov
dec
jbe
push
push
xchg
mov
xor
js
pop
xchg
int3
pop
out
inc
cmp
fisubrs
adcl
jg
cmp
insl
fnstsw
mov
add
hlt
adc
test
jmp
adcb
mov
lds
rcrb
pop
pop
filds
int
bound
data16
out
mov
lods
test
sti
out
inc
fdivl
lret
push
dec
push
scas
icebp
sbb
mov
clc
mov
aaa
sbb
xchg
in
cli
jge
mov
pop
pop
mov
sahf
lahf
fdivl
add
push
push
daa
dec
mov
lods
sahf
les
popa
test
imul
lret
cmp
adc
mov
int3
sub
bound
jo
xor
push
inc
mov
xor
out
repnz
daa
pop
xor
ja
jbe
mov
subl
dec
or
inc
cli
pop
cmpl
or
jno
pop
dec
push
into
in
dec
ret
psubq
lret
inc
iret
paddb
lea
dec
cmp
das
or
xlat
and
xchg
cld
push
cli
in
push
dec
ret
mov
push
ljmp
lds
or
and
mov
repnz
pop
cmpsb
lods
fs
xchg
cmpsl
jge
mov
jno
fldcw
mull
js
daa
js
sub
jbe
mov
push
or
mov
arpl
daa
bndstx
pop
pop
xor
xchg
sbb
mov
mov
mov
adc
sub
lea
mov
out
cmovbe
push
cmp
xchg
scas
sub
cmpsb
sarb
jg
mov
pop
sti
xchg
xchg
js
gs
jnp
movsl
add
inc
ljmp
push
push
xor
mov
mov
pop
hlt
xor
dec
mov
mov
icebp
inc
mov
adc
mov
mov
cs
mov
cwtl
fwait
rep
rorl
mov
mov
cmp
pusha
jl
xchg
mov
sahf
sbb
mov
mov
int
call
pop
clc
mov
daa
cwtl
shrb
lock
cmp
mov
stos
in
mov
lret
cmpsb
sbb
mov
and
jp
xchg
ljmp
jmp
adc
scas
out
cmpsl
cmp
imul
push
jmp
sti
aas
mov
out
dec
lcall
dec
pop
loope
call
dec
jno
int
cli
mov
js
mov
add
stos
in
jecxz
adcb
inc
mov
mov
stos
loop
dec
push
subl
push
dec
out
repnz
xchg
jns
ficomps
sbb
mov
mov
xlat
mov
push
lods
ss
addr16
lods
rorb
jge
adc
xor
test
loop
push
gs
fsubrl
ret
pop
mov
pop
fldt
push
sbb
scas
adc
sub
mov
popl
insl
pop
stos
or
xor
aaa
sub
cld
stos
xor
jp
test
xchg
jp
push
or
dec
les
pop
mov
dec
jg
iret
jl
mov
out
dec
adc
in
fmull
mov
cmpsb
scas
mov
xor
push
adc
lock
adc
sbb
fistl
icebp
in
adc
jmp
inc
pop
movsb
pop
insb
and
inc
movsb
ret
jb
mov
test
cmp
mov
in
add
push
xlat
fwait
mov
mov
je
cld
loope
frstor
fsub
xchg
movsb
cmp
add
ret
add
push
test
fxam
ljmp
jmp
aas
add
loopne
es
mov
hlt
jmp
pop
jg
test
mov
push
push
or
mov
dec
sbb
inc
je
inc
lock
in
leave
adc
xchg
lock
punpckhdq
jno
mov
loope
xlat
pop
xchg
ret
sub
scas
rclb
dec
les
cld
sbb
push
inc
hlt
mov
idiv
pop
out
sub
or
push
add
sub
adc
inc
xchg
xchg
enter
in
movsb
ret
fidivl
mov
popf
sahf
bound
mov
and
and
lods
std
fistps
ljmp
jg
xchg
mov
int
pop
adc
cmp
inc
xchg
mov
lods
fstpl
loope
cmp
ds
push
mov
adc
inc
je
into
mov
cmc
into
outsb
mov
repz
mov
and
in
popa
sbb
jo
aas
or
jl
xlat
aas
xchg
out
fists
js
push
ficomps
cld
lcall
out
fimull
xchg
or
fistps
stc
xchg
fwait
and
cmp
push
xchg
fidivl
inc
sub
mov
imul
out
loope
push
iret
push
movsb
in
cld
and
repz
pop
jbe
stos
jge
das
xchg
fcomi
pop
test
js
addr16
add
out
adc
fst
adc
pop
inc
or
repnz
rcl
test
xchg
mov
imul
jmp
cmp
gs
les
and
test
shr
fiadds
stos
lcall
fmull
outsl
clc
push
movsl
fsubr
xchg
push
jns
cmp
sub
add
jp
xchg
pop
cld
repz
lahf
xchg
xlat
add
stos
ljmp
cmp
mov
xchg
mov
lcall
add
jecxz
subl
jnp
and
fsubrs
outsl
pop
sbb
mov
dec
nop
mov
leave
rcrl
mov
aad
lcall
adc
fcomi
inc
jno
out
out
cwtl
jmp
pop
pop
jg
mov
jb
shrb
xchg
imul
fisttps
dec
movsl
lret
pop
pop
ja
xor
adc
or
int
pop
mov
push
xchg
push
cli
in
fs
cwtl
mov
imul
ds
rcrl
dec
aas
dec
pop
xchg
in
in
or
mov
rcll
dec
inc
imulb
jnp
mov
mov
push
jmp
test
pop
test
addr16
inc
inc
aad
push
jp,pt
mov
mov
push
mov
fnstsw
xor
das
sbb
out
cmp
mov
mov
bound
clc
jle
std
cmpsl
or
adc
shlb
insb
mov
xchg
shl
sbb
movsb
xchg
sbb
pop
cmpsb
aas
xchg
pop
push
mov
aam
xchg
mov
lods
push
mov
lock
adc
insb
cli
mov
mov
out
in
xchg
jg
imulb
rcll
mov
lea
stos
inc
out
insl
cld
lahf
scas
and
jbe
mov
fisubl
outsb
xor
in
jg
mov
push
xor
ja
arpl
stos
int3
sub
fs
xlat
xchg
jle
push
lea
or
jge
pop
adcl
or
inc
test
mov
insb
mov
jl
dec
dec
test
call
imul
cld
and
cmp
fs
adcb
mov
mov
iret
xchg
add
orl
mov
sub
sbb
and
stos
ljmp
mov
dec
nop
mov
movsb
out
xor
xchg
xorb
cltd
push
sub
sbb
dec
lds
ljmp
movb
jbe
mov
incl
cld
cmp
xor
in
xchg
aad
cmc
orl
add
cmp
xchg
push
fsubs
pop
loop
and
sub
scas
push
sbbb
rorb
test
call
mov
xor
push
stos
inc
cmp
xchg
pushf
mov
lds
push
dec
enter
dec
pop
dec
shll
cmp
sub
aas
outsl
repnz
sub
pusha
inc
ljmp
and
scas
std
je
aas
pusha
push
xchg
xchg
test
stc
test
data16
sub
es
pop
dec
mov
sub
cwtl
out
mov
sahf
mov
rorl
insb
or
and
stos
xor
hlt
imul
ds
inc
jbe
lahf
push
push
out
mov
aas
pop
test
cwtl
push
fwait
ljmp
sahf
aad
mov
jbe
inc
in
sub
inc
subl
mov
imul
mov
insb
mov
mov
ja
int
cmp
xor
pop
lods
xchg
sbb
cwtl
jge
lea
int3
ljmp
mov
xlat
in
cmpsl
gs
xchg
aam
fsubl
lea
mov
out
les
fldenv
scas
sbb
push
lea
sub
repz
or
imul
mov
mov
mov
loop
outsb
push
cmpsl
mov
inc
stos
push
mov
scas
ret
bound
cmp
scas
sbb
andb
adc
mov
inc
scas
sub
enter
xchg
stos
push
cwtl
rorl
arpl
mov
mov
into
aad
fists
or
bswap
fsubl
sahf
les
into
sub
mov
pop
lods
jb
push
xchg
lcall
sbb
and
jmp
cmp
push
les
call
sbb
arpl
push
aad
pop
clc
jg
rcl
jecxz
pop
movsb
pop
pop
pop
scas
cld
mov
mov
nop
xlat
push
push
sbb
aam
les
movsb
and
faddl
aam
fsubl
loop
test
aas
imul
jg
mov
inc
notl
xchg
call
scas
sub
or
adc
stos
enter
into
out
aaa
das
arpl
aam
fcoml
into
cmp
in
les
into
pushf
push
xor
aad
pushl
push
lea
push
mov
mov
pop
adc
and
insl
jno
das
xchg
iret
cmpl
testl
outsb
stos
mov
leave
ds
xchg
stos
mov
daa
sti
nop
repz
or
xchg
outsb
stos
sbb
int
pop
jecxz
int3
ja
gs
in
push
jnp
insb
or
mov
jp
lds
mov
leave
ds
popf
and
xchg
dec
pop
sub
loopne
insb
xchg
into
cmp
cwtl
sub
xchg
jae
cs
lcall
jl
outsl
sub
xchg
icebp
popf
fildl
mov
enter
shufps
lahf
mov
vrsqrtps
pop
gs
adc
cwtl
les
loop
sbb
xor
lret
sbb
mov
aaa
sti
lret
imul
xchg
xchg
lret
je
jl
sub
or
les
jmp
aam
aaa
test
mov
xor
jecxz
stc
in
movsb
aas
jne
out
mov
or
sarb
std
fcomps
jb
xlat
pop
aas
loopne
js
scas
clc
cmp
movsl
sub
scas
jns
mov
sub
inc
enter
rorl
shl
jge
mov
stc
mov
xchg
fs
test
cmp
stos
add
lcall
ret
fmull
jno
jnp
mov
test
cmp
cmp
xchg
sbb
rorl
cmp
cmp
mov
ja
ror
rcrl
clc
sarb
aam
testb
call
dec
lods
mov
cld
mov
dec
jae
ror
mov
sub
stos
cmp
add
popa
or
call
scas
mov
xchg
xchg
iret
aas
movsb
push
mov
mov
lods
in
pop
fidivrl
lods
hlt
sti
je
mov
cmp
jecxz
pop
cmp
lret
inc
pop
pop
incl
jnp
mov
js
test
inc
jmp
out
mov
aaa
arpl
mov
fs
daa
push
mov
in
sbb
mov
hlt
mov
loop
outsb
push
and
sub
adc
mov
mov
dec
xor
cltd
gs
lcall
popf
xchg
lea
mov
call
lahf
sbb
int
add
cwtl
inc
xor
dec
jae
sub
xor
loope
sub
adc
outsl
pop
scas
aam
ds
push
mov
outsl
push
lret
cmp
or
push
cli
jge
std
fcmovu
insb
cmpsl
inc
sarb
pop
mov
add
mov
mov
add
cmp
fsubrs
push
lods
mov
mov
mov
mov
or
arpl
call
incb
stos
pusha
and
mov
imul
add
xor
dec
mov
jp
mov
orb
in
popa
or
inc
out
lock
jl
pop
testl
adc
out
xchg
in
adc
xchg
dec
and
dec
mov
and
shrl
adc
inc
pop
mov
mov
inc
mov
nop
idivb
call
mov
dec
ret
test
scas
aaa
jno
sub
add
insl
stc
test
rol
pop
arpl
pop
out
cmp
insb
repnz
cmpsb
les
xor
dec
cmp
pop
lds
and
lods
or
push
push
mov
xchg
xlat
pop
aaa
pop
ffreep
or
xor
scas
mov
xchg
adc
mov
test
cld
ret
pop
jb
jb
insb
in
inc
mov
dec
cmpsb
mov
imul
mov
push
pop
cmp
sub
loope
push
adc
cltd
dec
sbb
sub
ret
push
xor
out
or
popaw
mov
movsl
test
add
pushf
ret
pop
and
out
ret
pop
pop
std
inc
imul
stos
das
pop
jge
shl
lds
or
leave
fs
in
negb
mov
dec
push
xchg
jns
xor
add
lea
xor
test
decb
dec
popa
stc
addr16
mov
mov
inc
aas
sub
jl
push
inc
shl
cld
or
rorb
pusha
jno
stos
push
lds
fisttpll
jmp
jns
mov
sbb
ds
aam
and
xchg
push
test
adc
mov
lcall
mov
orb
add
fsts
call
nop
jp
inc
or
outsl
ds
mov
pushf
cmc
jg
mov
adc
xchg
pop
mov
xchg
aad
out
xchg
xchg
mov
pop
push
cld
fwait
xor
cmp
stos
bnd
adc
aas
hlt
call
leave
add
mov
sub
leave
std
sub
dec
bound
or
test
or
ja
jae
xchg
loopne
or
push
nop
dec
or
jp
jns
stos
sahf
mov
in
loop
int
mov
push
pop
mov
in
mov
pushf
or
sbb
xchg
jmp
mov
xor
dec
cld
jns
mov
and
push
inc
mov
jmp
sbb
cmp
add
sar
push
or
sub
out
xchg
sbb
mov
and
add
lds
mov
loop
imul
xchg
dec
roll
ret
stos
add
inc
addl
xchg
loopne
outsl
adc
cld
or
clc
je
jp
push
fcmovbe
jp
pop
jmp
ja
inc
and
and
enter
movb
mov
jae
je
push
in
loope
pop
lret
ret
adc
push
sub
mov
pop
fnstenv
std
jb
xor
or
ss
popf
outsb
pop
fidivrs
sub
xchg
adc
movsb
xor
ljmp
in
idiv
dec
scas
inc
in
xchg
sub
pop
xchg
mov
ja
je
mov
xchg
mov
xchg
mov
not
dec
pop
repnz
sbb
mov
negb
fs
rcll
cmp
jb
mov
xor
cmp
ret
or
movsb
pop
xchg
lea
stos
add
scas
fsubl
sub
mov
inc
fiaddl
aad
adc
mov
cwtl
outsb
dec
jmp
out
loop
fisttpll
outsb
fbstp
push
nop
lock
and
imul
mov
mov
and
fwait
movsl
dec
cmp
orl
mov
sub
jno
mov
add
cmp
sahf
lcall
pop
sti
enter
add
gs
in
fst
cmp
mov
push
dec
outsb
cs
aaa
mov
mov
pop
and
jns
pop
ja
cwtl
mov
movd
pop
jl
mov
aad
xchg
and
push
push
dec
mov
xchg
jnp
stos
aas
jp
push
dec
gs
sbbl
mov
and
stos
inc
mov
out
jg
out
adc
dec
inc
push
scas
ret
add
cli
pusha
cs
and
pop
in
mov
sub
jns
mov
xchg
aam
sti
imul
push
or
cltd
add
ljmp
jnp
fadd
xor
adc
add
shrl
test
fucomp
je
out
in
and
in
inc
pop
push
pop
cmp
and
fcomi
dec
add
pop
lahf
aaa
es
jb
rcrb
leave
int3
mov
and
cmpsl
lret
movsb
mov
sub
mov
mov
pop
inc
loop
fistpl
dec
fnstenv
sbb
fbstp
jno
inc
aam
mov
arpl
xor
orl
out
jecxz
cmp
cmc
cwtl
adc
imul
dec
dec
push
subl
out
mov
inc
dec
push
sbb
pop
fwait
xchg
push
fcmovb
jle
ror
je
pop
lret
adc
xor
ret
adc
add
xchg
arpl
or
in
pop
and
add
jge
or
fstpt
rolb
into
adcb
in
sub
in
or
test
xchg
pop
xchg
popf
pushf
clc
mov
push
popa
add
dec
xchg
cwtl
arpl
leave
pop
xchg
mov
cmp
xchg
dec
pop
and
inc
mov
sti
dec
jne
mov
int3
test
pop
xchg
into
xor
xchg
pop
xchg
lahf
mov
push
sub
rolb
jae
outsl
enter
jo
jns
loopne
xor
xchg
frstor
mov
sbb
pop
pop
pop
dec
cmp
dec
jge
in
into
std
or
sub
sahf
jg
jecxz
stos
mov
xchg
mov
mov
mov
pop
add
pop
daa
adc
sti
cwtl
hlt
pop
mov
inc
daa
add
fists
cmp
in
stos
aas
or
push
cli
in
test
dec
mov
hlt
pop
cmc
jmp
or
loope
imul
js
mov
ss
xchg
mov
jo
pop
jmp
sbb
jne
push
push
insb
fdivrs
in
pop
pop
stc
pop
xlat
xchg
stos
clc
adc
scas
xchg
push
into
mov
cmp
mov
test
outsl
push
cmpsl
jae
ret
jmp
and
cmpsl
std
xchg
es
es
xchg
jb
hlt
fsubrs
sub
pop
and
pop
stos
out
pop
dec
lds
repz
packssdw
xchg
xchg
into
xor
out
mov
sub
pop
dec
loope
jne
fcompl
enter
out
fsubl
cmp
das
out
dec
pop
stos
aas
outsl
movsb
lea
mov
aam
aam
fnstenv
xor
push
mov
sbb
lock
adc
mov
out
fadd
leave
inc
lret
cwtl
mov
mov
or
fimull
fwait
loopne
push
xchg
jnp
push
sub
sub
push
jno
jle
cltd
and
and
sbb
lds
clc
pop
aad
mov
cmp
jg
or
xlat
repnz
out
in
incl
push
stos
out
jp
dec
lret
inc
gs
pop
out
cmpsb
loopne
cltd
jbe
and
dec
adc
mov
pop
inc
mov
sbb
mov
pop
xchg
xor
clc
js
loope
mov
ja
insl
es
aam
cld
jns
xchg
int3
xchg
adc
dec
mov
scas
pop
repnz
lods
in
lods
pop
pop
pop
adc
rcrb
push
fwait
xor
inc
or
push
push
aaa
shrb
pxor
stos
jmp
adc
hlt
pop
adc
mov
stos
mov
push
scas
push
mov
roll
into
push
xchg
pop
xchg
lcall
pop
or
pusha
js
bound
xchg
cmc
jae
inc
pop
fwait
into
xchg
in
xchg
and
adcb
xchg
sti
inc
xchg
cmp
add
std
clc
popa
cltd
aas
sbb
push
inc
aad
xorb
std
sahf
mov
cld
jmp
dec
adc
je
inc
lods
movsb
mov
fsubs
and
test
andl
dec
push
imul
divl
pop
xchg
repnz
cmpsb
les
das
out
mov
jns
outsl
stc
cld
stc
pop
sbb
sub
and
mov
jecxz,pt
mov
in
mov
dec
test
ljmp
addr16
stos
lahf
dec
inc
lods
adc
mov
jl
or
hlt
sbb
mov
test
jae
inc
jp
pop
push
xchg
fimull
call
xchg
xchg
xchg
mov
aad
xchg
std
cwtl
sti
mov
clc
in
stc
sti
std
or
mov
jge
push
push
push
dec
push
out
xchg
xorl
and
pop
inc
jge
out
sub
mov
adc
mov
lea
adc
dec
popf
mov
mov
pop
movsb
or
mov
inc
add
push
pop
mov
enter
leave
test
inc
mov
or
cwtl
std
dec
mov
pop
add
jmp
ljmp
cwtl
sbb
fwait
lcall
pop
jmp
and
jne
dec
sbb
push
pop
fnstsw
nop
clc
jae
pop
imul
sbb
and
sbb
fstps
inc
push
inc
or
jp
xor
jbe
mov
jmp
stos
mov
mov
pop
and
dec
stos
jmp
xchg
and
adc
mov
xchg
or
pop
mov
fimull
pop
pop
fcompl
and
push
out
out
and
sub
push
outsb
test
outsl
xchg
sub
out
mov
pop
adc
pushf
push
test
leave
jns
mov
pop
popf
cmpsb
pop
push
rclb
xchg
inc
movsb
push
inc
push
out
sub
cmp
push
clc
inc
ret
cld
leave
sub
push
stc
mov
arpl
jl
daa
push
lods
jecxz
mov
mov
lahf
test
xor
pop
aas
iret
test
jns
test
mov
mov
lock
lods
xor
and
loope
ret
dec
jne
or
sub
jecxz
into
pop
jnp
ret
and
lahf
insb
shrl
lods
jmp
scas
adc
pcmpgtd
sub
lret
lret
fstpl
dec
sbbl
daa
movb
add
mov
push
mov
imul
mov
mov
add
xchg
lcall
aas
push
push
ljmp
mov
pushf
pop
push
mull
lret
js
inc
sbb
and
adc
mov
test
out
fidivrl
ret
cmp
add
cli
xor
and
mov
dec
lds
or
leave
in
ja
cltd
ljmp
push
cmp
dec
sti
addr16
dec
stc
cmc
xchg
sub
jbe
je
int3
adc
mov
and
cmp
rorl
push
rorb
push
pop
mov
sub
mov
jb
rcrb
lret
xchg
or
imul
test
cmpsb
push
test
jle
push
daa
mov
rcrl
scas
stos
xchg
sahf
dec
xchg
mov
adc
sahf
push
test
imulb
es
pop
push
int
xlat
rorb
roll
imul
mov
test
mov
daa
stos
xlat
nop
outsb
popf
into
pop
cltd
in
sub
pusha
mov
lret
push
sbb
fs
inc
test
push
fldenv
mov
insb
subb
cmp
fstpt
mov
pop
pop
aad
pushf
cltd
or
loopne
cmpsl
dec
lock
or
and
scas
movsl
aaa
lods
repnz
rcrl
jbe
nop
cltd
cmpsb
data16
sbb
xchg
push
scas
test
pushf
popa
aas
sbb
pop
pop
arpl
pop
jp
jnp
outsb
out
bound
inc
adc
add
fs
pop
sbb
int
je
aas
pop
xchg
or
pop
sub
pop
mov
push
jge
xor
cwtl
leave
out
xor
mov
adc
loope
pop
loop
cmc
mov
sahf
nop
add
pop
inc
mov
mov
out
cmp
jge
xchg
mov
jl
sbb
xchg
ror
xchg
mov
andl
pop
loope
and
dec
popa
repnz
cmpsb
je
sub
mov
pop
jg
divb
push
xchg
cmp
mov
cmpl
mov
je
mov
dec
pushf
sbb
pop
sbb
jnp
test
mov
sbb
cmpsl
lods
daa
and
jns
daa
adc
sub
inc
sub
rcrb
fsin
mov
icebp
ljmp
push
scas
loopne
fidivrl
sbb
cmpsl
pop
cld
stos
sahf
add
inc
inc
adc
call
pop
std
rcrl
rcrb
lea
inc
int3
hlt
pop
add
out
pop
xor
or
movsb
in
cld
sub
sub
push
in
push
inc
cmc
cli
pop
mov
aas
icebp
int3
das
test
or
jns
jecxz
lods
repnz
in
sub
shrl
adcb
cld
sub
xor
jnp
inc
or
mov
pop
or
lods
and
dec
push
out
mov
dec
pop
mov
ljmp
das
loope
test
rol
test
int
in
push
adc
imul
sbb
icebp
enter
add
ss
in
mov
dec
lods
pop
imul
in
repz
dec
out
mov
pop
push
shr
add
les
or
cmp
push
lahf
cli
jns
cmpsl
loop
sbb
or
inc
test
add
nop
mov
sub
popa
lods
or
pop
pop
popf
xchg
cltd
and
ret
xchg
cmp
inc
mov
sahf
mov
loope
icebp
or
mov
inc
adc
das
xor
insl
or
add
xchg
les
ljmp
pop
jae
jbe
aaa
mov
mov
adc
mov
or
popa
inc
xor
cld
lods
fs
mov
pop
push
into
movsl
pop
es
cltd
sbb
xchg
mov
into
out
adc
jns
mov
shld
nop
mov
mov
iret
out
aas
in
cmp
xchg
mov
dec
or
ret
pushf
je
fs
mov
in
mov
fimull
shrl
push
hlt
xchg
fidivrl
test
lods
jecxz
pop
testl
jp
jg
push
rorb
icebp
pop
mov
push
nop
push
or
xorb
or
fcoms
and
test
push
mov
in
and
lcall
arpl
cmp
fwait
adc
test
xor
cwtl
push
mov
cld
xchg
std
sbb
aam
sti
loopne
jl
jmp
je
mov
fistpll
notl
jmp
dec
cmp
adcl
stc
out
fstps
das
mov
fsts
ljmp
jp
or
push
mov
pusha
dec
push
adc
cmpl
loop
out
lods
cli
sub
mov
ficoml
and
pusha
or
sbb
inc
sbb
stos
mov
inc
fildll
dec
ret
xchg
lahf
lods
stc
xor
test
or
out
mov
test
clc
lods
test
fsubrs
xchg
or
ss
xor
jae
addl
lods
cmc
das
in
loop
clc
inc
lods
pop
xor
cmp
and
cltd
mov
aam
pop
push
repz
xchg
call
sub
mov
jg
inc
jbe
jb
repz
frstpm(287
inc
mov
sbb
cmpsl
pop
mov
outsb
pop
call
push
jne
xchg
in
hlt
ljmp
jg
in
inc
fstl
ficoml
popa
add
push
pop
add
rcll
xor
hlt
mov
in
imul
jp
add
sbb
and
cmp
in
adc
sbb
fcomip
cmp
pushf
decb
ret
xor
lods
push
cmp
aam
fnstsw
add
aas
cmpb
int3
cmp
in
hlt
add
xor
inc
xor
adc
je
mov
mov
mov
jns
xchg
mov
stos
fisttpll
push
mov
push
iret
push
sbb
push
lock
sahf
loopne
addl
cmc
enter
out
call
lea
adc
insb
je
pop
out
fisttps
or
jmp
cmpsb
dec
mov
xchg
scas
lock
push
stc
lods
mov
jp
mov
adc
push
bound
leave
jo
add
test
and
lds
out
pop
imul
or
enter
stos
mov
subl
and
cwtl
fabs
lds
fnstenv
jmp
js
pop
sub
pop
lret
fstl
sbb
push
sarl
ret
mov
clc
sti
push
dec
stc
test
mov
dec
mov
shrb
add
js
mov
sub
jp
inc
ret
sbb
xchg
cmpsl
addr16
icebp
push
int3
movsl
rcrb
adc
mov
std
dec
arpl
rcr
mov
or
lret
push
ljmp
outsb
jmp
push
xchg
enter
pop
mov
jl
nop
push
and
lret
imul
mov
pop
movsl
insb
stos
sbbb
lea
repnz
jmp
frstor
push
inc
push
adc
mov
sti
mov
mov
movsb
sub
push
adc
fidivrs
les
mov
loop
jmp
push
mov
loopne
repnz
sti
xchg
push
adcb
ljmp
mov
cmpsl
fisubs
cmp
mov
cmpsl
mov
mov
and
dec
cmp
or
out
mov
pop
cmp
pop
movsb
test
pop
add
mov
pop
mov
xchg
push
mov
adc
mov
rcrl
in
add
and
mov
mov
aad
push
inc
movsl
fdivs
adc
mov
ret
stos
adc
mov
aaa
mov
pop
loop
mov
push
scas
rcll
jl
and
dec
push
sub
aam
loope
cmpl
adc
gs
sbb
icebp
sbb
adc
sub
add
push
stos
popa
sbb
lret
adc
xchg
cmp
dec
inc
addr16
xchg
and
push
inc
cwtl
xor
mov
cmpb
push
adc
xchg
dec
mov
jl
jl
hlt
outsl
or
aam
xchg
xlat
add
mov
cltd
mov
inc
sbb
rcl
test
push
imul
stos
mov
adc
sbb
outsb
out
repnz
scas
xchg
cmp
mov
cli
rcll
outsb
and
push
cmp
int
subl
leave
imul
mov
cmp
jg
mov
nop
add
popa
and
dec
daa
test
loop
test
jmp
rol
scas
rol
mov
sahf
sub
les
adcb
pop
mov
out
jge
sub
cwtl
std
sub
ds
cmp
movsl
popf
std
or
data16
push
pop
es
ljmp
mov
cltd
xor
dec
cwtl
xor
cld
cmpsb
fisttpl
mov
mov
mov
aas
inc
in
ljmp
dec
jb
xor
pop
push
mov
jge
and
cmpsl
test
push
inc
and
xchg
sbb
test
dec
cmpsb
jmp
aas
movsb
sub
sub
test
lcall
test
into
movsb
lods
hlt
imul
imul
repz
mov
test
pop
mov
shl
js
mov
into
inc
leave
mov
push
cmpsl
out
icebp
pusha
mov
cs
mov
fcomip
lcall
int
and
clc
movsl
repz
push
in
xlat
push
adc
mov
in
mov
cmp
xchg
icebp
xor
jl
out
dec
sub
mov
popf
ja
stc
push
popf
mov
lea
adc
out
dec
es
mov
mov
dec
jb
lods
fbld
outsb
pop
icebp
jl
fildll
mov
inc
mov
sbb
or
dec
jmp
dec
push
cmpl
jb
cmpsl
insb
cmp
dec
jns
fistpl
loopne
or
std
adc
sbb
lods
pop
xor
aam
xlat
mov
sbb
in
pop
scas
arpl
es
jae
int
stos
add
cmpsb
nop
adc
jae
dec
ret
dec
pop
sti
inc
xchg
dec
pop
push
or
hlt
jb
lods
add
cmp
movsl
mov
pop
repz
mov
push
fldcw
shlb
inc
aam
in
int3
push
and
faddl
jmp
fs
jmp
xor
xchg
cmp
mov
aas
imul
xor
cmp
xchg
rcrb
xor
mov
sbb
sarl
enter
pop
movsb
sub
adc
cltd
cwtl
sbb
pushf
in
das
cmpsl
out
dec
mov
hlt
inc
xorb
mov
lret
mov
lds
shl
mov
shll
andb
add
jge
jecxz
push
fwait
dec
mov
mov
dec
pop
dec
jns
lods
mulb
rorb
int3
cwtl
pop
push
sub
pop
imul
pusha
cmp
fs
inc
adc
push
test
jle
lea
xor
inc
sbb
mov
je
jb
daa
in
lret
cld
add
or
in
xchg
ror
lock
int3
ffree
mov
leave
adc
lea
fcoms
lock
paddq
cmp
cmp
cmp
stc
out
jmp
push
jmp
push
push
shll
sub
jo
cmp
sub
jle
lcall
stos
hlt
inc
mov
pop
ror
cmp
loop
xchg
dec
sub
inc
dec
lahf
and
mov
xchg
mov
int3
movsl
pop
mov
ljmp
mov
mov
daa
fwait
dec
rol
xor
sub
stos
jne
in
add
outsl
pop
inc
mov
btc
outsl
adc
xor
mov
push
adc
out
push
and
aam
sbb
cmpsb
jmp
push
shlb
inc
cs
and
sbb
pop
dec
inc
lret
push
rol
pop
push
cmpsl
jb
xor
leave
lds
xchg
mov
sbb
mov
push
mov
jbe
das
xchg
test
cmp
fcoml
push
sub
sub
dec
shl
lods
add
cmp
xchg
xor
cmp
filds
fisttpll
lock
jae
cs
or
xor
cs
scas
aad
movsb
out
daa
out
add
pop
shlb
in
in
jno
into
lret
mov
add
cld
shll
movsb
sbb
std
dec
or
dec
popf
sbb
decl
rorl
jbe
je
xchg
scas
bound
cmpl
outsb
and
pop
jmp
jecxz
xchg
call
pop
add
and
dec
bound
dec
cli
jne
stc
test
loopne
lds
cmc
mov
xor
push
popa
mov
call
outsl
pop
in
mov
lahf
fwait
xor
jmp
push
dec
pop
jne
add
xor
sbb
adc
cmpsl
shrl
cld
std
movsl
call
cli
mov
clc
int3
js
inc
inc
icebp
jmp
fnsave
ljmp
loop
adc
xchg
subl
cs
jno
ja
add
mov
push
adc
sbb
frstor
rcrl
sti
jl
loope
dec
mov
xchg
cltd
mov
and
mov
mov
iret
mov
mov
fnsave
fwait
mov
xchg
inc
pushf
sub
int3
call
mov
jge
jb
orb
push
cmp
push
jecxz
ret
cmpsl
lods
sub
jbe
rorl
xchg
mov
andb
bound
out
xor
pop
movsl
ret
inc
xor
leave
inc
enter
mov
pop
test
sbbl
dec
lods
mov
daa
push
pop
bound
test
jnp
aaa
jmp
fs
and
push
mov
repz
and
mov
adc
hlt
push
adc
hlt
pop
ret
xchg
cs
dec
ljmp
mov
adc
in
mov
mov
pop
xor
in
jb
outsl
aam
jbe
cmc
cld
xlat
mov
dec
pop
push
dec
xchg
push
pop
push
mov
scas
in
loope
les
lret
xchg
cmc
pop
dec
cs
les
jno
mov
xchg
mov
aam
pusha
cwtl
xchg
push
mov
mov
pushf
in
clc
xor
xchg
adc
mov
mov
psubusb
popf
repz
clc
mov
sub
leave
push
xor
test
rorl
mov
add
mov
inc
addr16
xor
inc
pop
cltd
xchg
sub
out
adc
scas
jmp
jae
mov
shl
mov
push
test
inc
loop
insb
aaa
mov
addr16
jne
mov
jge
mov
repz
cmp
jmp
mov
sti
js
lock
mov
test
xor
iret
rcll
mov
inc
popa
cltd
ljmp
push
sub
popf
sub
insl
sub
jge
das
mov
sbb
pop
lahf
inc
dec
xor
xchg
sub
out
and
jecxz
cltd
jns
popf
enter
sti
xchg
daa
jmp
cmp
fldt
push
pop
inc
inc
push
sbb
mov
fwait
cli
adcb
les
jb
inc
jbe
scas
or
cmp
in
ret
jb
dec
adc
mov
int3
jle
std
popf
xor
jae
or
jecxz
adc
jl
loop
adcb
mov
pop
push
pop
or
in
sub
add
mov
popf
gs
test
xchg
andl
cld
je
fisttpl
dec
dec
loope
js
stc
sbb
imul
or
ret
cli
lods
shll
cmp
cli
sbb
out
sub
adc
pop
adcb
push
pop
clc
les
jns
inc
mov
popf
bound
shl
icebp
pop
cli
in
push
mov
leave
in
xchg
add
mov
fdivrp
shrb
xchg
adc
sbb
mov
push
es
jmp
add
std
mov
in
std
les
lret
xchg
hlt
repz
xor
std
sbb
dec
xorb
dec
outsb
pop
cli
out
cmpb
lret
lcall
mov
mov
xchg
adc
stos
mov
jo
jns
fdiv
cmp
mov
inc
inc
data16
repz
out
mov
imul
cmpsl
repz
mov
add
adc
pop
lea
stos
sbb
test
sahf
sbb
call
jb
push
imul
test
adc
int3
jo
arpl
pop
int
lods
xorl
fs
sti
imul
popa
lock
dec
fucomi
push
out
xchg
pop
add
fmul
pop
ljmp
stc
ss
xor
inc
std
nop
push
cmc
cmp
sbb
cmp
in
xlat
pop
movsl
add
out
adc
mov
push
inc
mov
jmp
out
or
push
stos
sahf
add
lcall
shl
sub
xchg
cld
add
mov
popa
add
mov
popf
mov
jle
mov
hlt
inc
adc
test
xor
insb
sub
test
roll
sub
cld
mov
inc
pop
pop
mov
ja
pop
adc
fdivrs
sbb
jae
push
xchg
sti
inc
sahf
push
push
or
add
jge
mov
in
fstpl
testl
inc
scas
jbe
insl
test
mov
jecxz
or
jecxz
inc
and
push
fs
call
das
sub
xor
sub
jp
jne
fisubrl
gs
mov
hlt
call
adcb
test
mov
cmc
dec
mov
adc
push
xor
idivb
xchg
repz
mov
stos
fsubrl
es
subl
jmp
inc
dec
cmp
out
push
loopne
pop
jmp
insl
notb
cmp
and
jmp
xor
adc
aas
pop
pop
sbb
pop
xchg
sbb
pop
sbbb
jp
aam
pop
in
jno
jnp
jmp
cmpsl
jae
aaa
dec
xchg
in
xchg
adc
pop
cmp
movsb
push
adc
insb
push
or
fbstp
out
dec
cmp
mov
pop
mov
mov
mov
jae
dec
add
lods
pop
xchg
lret
cmc
cltd
xor
loopne
outsl
or
or
inc
outsb
notb
sahf
cmp
inc
pop
inc
xor
dec
fldenv
inc
loop
popf
adc
inc
shrl
pop
clc
xor
and
pushf
lock
incl
mov
adc
roll
addl
mov
imul
pop
adc
shl
int3
mov
dec
xchg
mov
daa
hlt
fsts
and
mov
aam
inc
arpl
enter
push
iret
adc
and
in
push
xchg
cmc
mov
cs
sbb
xchg
push
lret
dec
cld
int3
cmc
and
xchg
xchg
aad
pop
mov
sbb
in
sub
jbe
xor
add
movsb
in
inc
sbb
jecxz
push
std
xchg
cltd
pop
xchg
mov
rol
test
inc
aaa
cmp
xchg
cmp
aam
push
pop
icebp
adc
jmp
push
scas
in
and
out
fcoms
jmp
fnstcw
ret
ret
orb
dec
push
dec
xchg
jno
pushf
jnp
xor
es
test
rcrl
mov
stos
sub
ss
rolb
xchg
repz
pushf
loopne
mov
add
sarb
jmp
sub
or
pop
popf
mov
ja
mov
test
ret
and
sub
arpl
dec
cmp
pop
pop
test
out
mov
mov
cmp
int3
jle
das
and
imul
mov
jle
int
outsb
aam
mov
pop
testb
pop
sub
mov
pop
stos
xchg
in
adc
movsb
dec
xchg
cmp
jae
xlat
jnp
test
ret
arpl
mov
ss
and
bnd
test
jle
shlb
dec
out
popf
addb
or
jl
mov
popa
pop
jnp
pavgw
leave
adc
xlat
pop
into
jge
xor
push
lret
aam
fisubs
in
fdivrl
cwtl
iret
in
mov
fs
sbb
jmp
outsl
pop
fldt
pop
jmp
mov
jg
test
sbb
scas
or
aam
flds
out
sub
stos
fcom
and
cmpsl
jl
mov
mov
push
jmp
std
gs
leave
mov
sbb
dec
repz
flds
sub
out
leave
sub
aas
into
inc
popf
and
dec
jecxz
pop
adc
mov
loopne
in
mov
scas
mov
fsubrs
sbb
in
or
hlt
or
jae
mov
imul
mov
xchg
cmp
je
mov
into
xchg
or
iret
jmp
stos
mov
mov
data16
fcomps
lret
call
das
cmp
add
gs
pop
popa
mov
jno
aaa
imul
lea
in
xlat
xor
cmc
lret
nop
adc
dec
jmp
stc
gs
leave
mov
imul
xlat
out
fmul
leave
xor
sti
outsb
dec
dec
out
pop
adc
mov
je
push
pop
jne
jecxz
in
mov
sub
rcr
sbb
in
pop
jnp
lea
imul
pop
xchg
xor
xor
hlt
iret
or
stos
nop
xlat
jmp
jb
int3
pop
arpl
loopne
divps
das
aas
jmp
xchg
gs
pop
mov
jno
cmp
xchg
sub
out
iret
and
hlt
xlat
or
push
cmpsb
lods
pop
jg
rclb
jmp
test
mov
mov
or
aam
flds
out
es
push
mov
je
mov
into
xchg
or
iret
cmc
pushf
mov
xlat
aad
pop
mov
cmp
add
sub
das
fucomi
and
cmp
std
mov
pop
xchg
xor
xor
shrl
ljmp
pop
imul
adc
or
hlt
andl
popa
sbb
cmp
out
and
jl
aas
pop
push
scas
enter
fiadds
pop
leave
movsb
or
iret
lds
mov
cmpsb
add
lret
adc
lret
jmp
inc
push
push
int3
loop
pop
sub
into
test
stos
pushf
iret
in
mov
stos
mov
leave
mov
call
adc
and
sbb
gs
pop
jge
xor
pop
imul
clc
mov
scas
nop
test
inc
fnstcw
fsubl
fmull
adc
mov
stos
pusha
cltd
mov
jne
cmpsb
cmp
out
fisttpll
scas
les
fiadds
push
leave
lods
or
iret
leave
pushf
mov
mov
js
lea
cmpsb
sbb
lret
sub
div
dec
pop
shl
add
std
cld
xlat
jmp
scas
pushf
pushf
aam
fldcw
outsb
leave
aam
sbb
mov
js
subl
cmpsb
cmp
leave
dec
pop
loopne
imul
cmpsl
in
fcoml
lods
or
iret
aad
pop
imul
js
lea
cmpsb
sbb
lret
sub
div
dec
pop
notb
jo
mov
jecxz
in
mov
scas
test
aam
fchs
sub
out
fdivrl
leave
add
sub
into
gs
or
jno
cmp
inc
loop
pop
das
out
pop
and
push
xor
jmp
aam
fldenv
jbe
enter
into
mov
jl
subl
cmpsb
xor
lret
inc
or
fsubs
je
movsb
add
bound
jl
mov
mov
mov
int
movsb
aam
sbb
in
or
hlt
fdivrl
leave
add
sub
into
gs
or
jno
cmp
inc
xchg
and
jl
lea
fwait
fs
das
pop
jmp
cmc
gs
mov
sbb
inc
call
xor
or
and
into
leave
xor
sti
outsb
pop
mov
fwait
in
fmull
imul
xchg
xlat
in
mov
pop
addr16
fcoml
aas
jmp
mov
pop
cltd
mov
imul
and
pop
popf
shrb
stos
cld
xlat
add
mov
lret
mov
jg
ret
das
outsl
jmp
fldenv
pop
mov
js
sbbl
fnstcw
xor
fwait
movsb
add
std
cld
xlat
shlb
or
pop
fldenv
jbe
enter
into
mov
stos
je
mov
sub
ret
lret
inc
or
xlat
dec
push
scas
les
aad
fsubl
mov
icebp
pushf
mov
xlat
rorl
hlt
pop
aaa
lret
or
xlat
jmp
jno
cmp
mov
pop
dec
jecxz
pop
fcoml
lock
loopne
sbb
cmpsb
mov
adc
por
andl
popa
sbb
cmp
es
and
pop
stos
aam
sub
cmpsl
mov
enter
pop
scas
das
inc
jmp
leave
gs
pop
mov
sbb
fs
aam
fldcw
sub
out
aad
rclb
fdivrs
adc
stos
call
push
cmc
mov
flds
sub
out
leave
sub
ret
aaa
ror
xchg
sub
pop
pop
das
xchg
call
pop
jne
jecxz
sbb
fnstcw
leave
fmull
adc
mov
stos
fs
popf
mov
insl
lret
pop
test
rorb
ljmp
sbb
sbb
mov
aam
sub
out
fmull
leave
hlt
or
outsl
into
xchg
pushf
sbb
gs
or
jne
cmp
inc
out
andb
mov
imul
mov
pop
ret
into
mov
fwait
fs
jmp
sbb
fs
fldcw
ret
out
mov
lahf
fisubs
in
fdivrl
pushf
push
cmc
mov
pop
pop
lret
loopne
divps
das
aas
jmp
mov
pop
cltd
mov
jne
aas
imul
fmul
and
clc
xlat
or
pop
cmpsb
movsb
pop
dec
lret
mov
ja
lret
das
arpl
fsubrl
mov
sbb
adc
aam
fnstcw
xor
into
push
push
fmuls
pop
mov
jmp
in
push
cmc
mov
aad
pop
adc
in
sub
out
fdivl
leave
adc
fists
into
imul
push
das
lahf
call
push
cmp
loopne
aam
fnstenv
fsubrl
aam
sbb
mov
jl
test
sbb
gs
cmpsb
xor
sti
ret
ret
mov
cmpsl
fs
mov
je
mov
call
push
std
mov
fldcw
flds
sub
out
leave
sub
ret
aaa
ror
mov
inc
fwait
fs
jmp
sbb
mov
shrb
sbb
in
push
leave
clc
or
imul
pushf
sbb
stos
or
jno
cmp
push
push
push
sub
ret
ficomps
jle
rorb
mov
imul
mov
lret
lret
xor
sti
ja
sub
fisubrs
xchg
js
mov
iret
adc
test
std
mov
pop
adc
in
adc
das
jmp
cltd
adc
mov
xchg
pushf
inc
push
lds
dec
sub
mov
out
cmpsl
cwtl
iret
loope
mov
stos
mov
int
mov
call
adc
fucomip
and
add
mov
lea
pop
cs
imul
xchg
test
cmpsb
ficomps
faddl
mov
fstps
mov
cmpsb
sbb
lret
sub
test
pop
aam
fisubrs
xchg
js
mov
iret
sbb
stos
test
stc
mov
pop
adc
in
adc
xor
or
adc
mov
jns
iret
jno
jmp
iret
and
stos
clc
xlat
or
pop
cmpsb
movsb
pop
inc
lret
mov
das
arpl
fsubrl
mov
mov
adc
aam
fnstcw
xor
fwait
movsb
add
bound
je
mov
lahf
push
in
mov
scas
lods
int3
aam
sub
out
faddl
leave
add
sub
into
gs
or
jne
cmp
inc
loop
jae
jecxz
pop
sub
lock
scas
scas
pushf
pushf
aam
fldcw
jb
int3
or
into
test
stos
push
mov
cmpsb
xor
sti
std
dec
xor
and
pop
scas
aam
aam
fidivrs
mov
out
cmpsl
cwtl
iret
loope
mov
stos
mov
mov
push
cmpsb
in
or
hlt
adc
sub
sbb
or
mov
popl
daa
jne
sbb
call
push
adc
sbb
mov
aam
sbb
in
or
hlt
or
outsl
into
xchg
pushf
sbb
stos
or
jno
cmp
push
push
push
and
sti
add
fldenv
jb
int3
or
into
lods
pushf
inc
imul
mov
lret
lret
xor
sti
ja
cmp
and
aam
fisubs
in
fdivrl
cwtl
iret
loope
test
stos
mov
leave
mov
call
adc
fucomip
and
aas
pop
inc
andb
je
es
das
xchg
call
push
add
cwtl
movsb
aam
fnstcw
fsubl
fmull
adc
mov
stos
sbb
mov
jne
mov
mov
shll
scas
cld
adc
out
fcompl
movsb
or
iret
lds
mov
js
subl
lret
and
lret
pop
aaa
das
sti
test
push
aam
fisubs
lea
or
xchg
push
std
mov
pop
pop
lret
call
das
xor
or
gs
pop
insl
mov
jge
aaa
push
dec
mov
int3
iret
xor
stos
in
sbb
inc
cmpsb
mov
adc
adc
in
mov
mov
cltd
sbb
cmp
out
cli
pop
insb
in
push
and
repz
ficomps
faddl
mov
fstpl
mov
sub
and
pop
aas
es
cmc
das
test
pop
jae
mov
fwait
push
loope
mov
scas
test
aam
fchs
sub
out
fdivrl
leave
add
sub
into
popa
pushf
or
stos
xor
dec
test
push
lahf
pop
arpl
push
push
adc
sbb
mov
aam
sbb
in
or
hlt
or
imul
pushf
sbb
stos
add
jge
xor
add
push
imul
jl
mov
mov
mov
leave
scas
mov
in
sub
out
fdivl
leave
or
fists
into
jne
cmp
inc
push
fistpll
out
pop
and
push
xor
jmp
aam
fldenv
fdivrl
les
imul
pushf
dec
imul
pusha
mov
ret
lret
cmp
loop
push
scas
fsubl
fidivs
mov
pushf
iret
loope
test
stos
mov
int
movsb
mov
bound
clc
adc
fucomi
sub
xor
mov
push
push
lahf
enter
pop
outsl
das
subl
in
xchg
in
scas
xorb
out
fcompl
leave
call
lea
mov
mov
cmpsl
dec
add
ds
sub
stos
lock
or
push
lret
lods
adc
addr16
test
mov
sbb
adc
aam
fldcw
sub
out
fdivr
leave
inc
sub
jecxz
pop
pop
fwait
enter
pop
jg
mov
mov
push
push
icebp
mov
movsl
scas
push
out
aam
frndint
sub
out
leave
sub
aaa
iret
dec
mov
push
das
sub
faddl
in
sbb
mov
adc
adc
cmpsb
popa
test
push
sbb
push
pop
and
dec
inc
mov
hlt
sub
dec
push
sub
jns
pop
push
dec
mov
ss
mov
cld
addb
jp
add
jecxz
aad
adc
xchg
stc
sahf
adc
dec
or
xchg
pop
jno
push
out
pop
das
ljmp
pop
orl
ds
lods
clc
mov
dec
mov
and
pop
aad
mov
xchg
out
call
cwtl
sbb
adc
fstpl
outsb
dec
mov
mov
in
loopne
rcr
cltd
adc
cltd
mov
push
outsb
mov
pop
jo
daa
jne
lret
cltd
adc
pop
jle
sbb
ljmp
adc
mov
mov
or
adcl
mov
pop
cltd
rcrb
stc
idivl
cld
lret
mov
lahf
add
and
sbb
lds
mov
stos
mov
lods
pop
xchg
inc
add
dec
dec
out
inc
cmp
imul
out
mov
push
push
sub
jne
shrl
and
js
jecxz
push
cmp
dec
jg
mov
pop
add
mov
jg
push
hlt
cld
or
test
dec
pop
mov
sbb
dec
sub
and
pop
mov
out
xchg
mov
shlb
movsb
fsubs
fwait
mov
dec
cmp
das
cmp
pop
mulb
pop
mov
and
cwtl
xchg
push
lcall
or
cmp
sti
mov
mov
loop
pop
sub
loope
test
in
pop
stos
lds
push
icebp
adc
jo
je
cltd
lcall
jae
loope
ficomps
test
jmp
nop
push
mov
sub
pop
test
out
pop
jae
enter
test
fwait
in
dec
xorl
mov
push
inc
inc
jecxz
loope
shrb
arpl
les
jmp
fimull
stos
jno
or
sub
pop
lock
mov
push
es
adc
xor
ror
dec
sub
cli
jl
jno
xchg
pop
dec
xchg
or
aaa
lahf
mov
inc
pushf
dec
daa
int3
hlt
inc
or
scas
mov
addr16
js
stos
aaa
scas
rcl
ds
push
aaa
mov
sub
ds
xchg
dec
cmp
insb
lret
inc
iret
or
call
cmc
inc
dec
mov
jmp
shr
push
stos
xor
pop
mov
sub
pop
mov
jmp
pushf
push
jns
dec
das
fwait
arpl
xchg
fidivrs
ds
xor
and
and
cmp
sti
xor
mov
es
scas
aaa
jmp
shrb
daa
cmp
fcmovnb
cmpsl
lods
add
xor
sti
nop
ja
test
sbb
mov
scas
ljmp
icebp
jle
xchg
xor
pop
aad
jl
daa
jmp
and
repz
push
pop
incb
mov
push
popf
outsb
push
and
call
rcr
out
out
sbb
mov
testb
sti
push
jecxz
sbb
push
ja
pavgw
sbbb
out
ret
or
mov
adc
ss
and
dec
ljmp
ljmp
and
jbe
jp
push
push
push
jmp
cli
push
lret
push
mov
scas
or
stos
xchg
lcall
sub
ljmp
in
adc
inc
daa
or
mov
or
sbb
je
fsubrl
xor
pop
xchg
int
ja
pop
dec
rclb
outsb
cmp
ja
out
mov
cmpsl
mov
mov
lret
fbstp
sbb
mov
xchg
pusha
mov
push
pop
bound
sbb
jge
add
xor
dec
sub
ss
hlt
ljmp
aas
movsl
mov
sbb
fdivs
inc
and
mov
shll
adc
daa
dec
testb
decl
nop
push
xor
mov
jb
pop
pop
cmc
aaa
dec
mov
push
mov
mov
and
dec
stc
inc
dec
call
xor
sub
push
push
cs
dec
jmp
test
iret
mov
stc
ljmp
call
icebp
push
insb
aad
and
stc
xchg
or
les
test
js
mov
adc
lahf
pop
stc
test
popa
pop
inc
xor
test
inc
mov
pop
scas
jns
xchg
push
mov
lahf
sbb
xor
outsb
fs
pop
cmpsb
sbb
call
adc
and
xchg
xchg
stos
daa
js
dec
test
push
aas
fistpll
pop
jmp
inc
pop
testl
es
fdivrl
loop,pn
mov
enter
xchg
leave
push
jb
daa
div
jmp
stos
lcall
test
push
xchg
pop
push
jl
push
stos
lea
ljmp
inc
and
jmp
and
int3
std
push
daa
inc
push
jns
mov
lods
test
mov
pop
fcmovbe
add
stc
popf
jno
lcall
popf
xchg
mov
insl
sbb
iret
jmp
pop
ret
mov
lods
frstor
test
sub
pop
cmp
mov
push
cli
xor
daa
and
mov
jmp
pop
icebp
adcl
inc
mov
sub
push
shlb
fcmovnu
push
inc
lods
sub
lahf
and
mov
add
cmp
scas
inc
dec
pop
jmp
xor
jo
lods
push
pop
enter
leave
stos
mov
test
ret
jp
int3
ja
cwtl
hlt
adc
mov
mov
mov
cli
fs
push
sarl
cwtl
mov
ljmp
pop
push
pop
sbb
dec
add
fs
mov
push
pop
adc
jne
stos
add
es
cs
mov
add
pop
scas
push
daa
mov
jp
and
jo
fisubrs
incb
daa
fisubl
fsub
stc
sbb
aam
outsl
xchg
aas
sub
loopne
std
inc
daa
call
jecxz
test
xchg
lret
push
cs
mov
ljmp
push
clc
push
dec
fcoms
mov
bound
add
push
lcall
call
out
mov
jo
jae
adc
mov
aaa
popa
sahf
mov
pop
in
mov
jmp
aam
jmp
dec
pop
leave
imul
jecxz
mov
jmp
jmp
adc
dec
dec
aad
sbbb
cmp
mov
dec
jecxz
loop
ret
nop
lcall
push
outsl
repz
loop
lret
sbb
fdivl
push
xchg
mov
mov
daa
pop
dec
sub
clc
mov
push
mov
inc
or
pushf
stc
fistl
cli
pop
test
test
or
jmp
jmp
sbb
mov
push
or
push
lret
inc
pop
daa
cmp
jne
pop
stos
adcb
mov
aas
jnp
push
and
lcall
jo
fucomip
rcrl
negl
ret
stos
push
in
mov
enter
mov
test
inc
dec
das
dec
mov
loop
adc
ljmp
sub
pushf
xorb
xor
mov
add
sub
vmwrite
inc
push
mov
mov
dec
icebp
xor
pushf
jne
dec
daa
cmpsl
push
lahf
aam
into
hlt
mov
and
sub
sbb
fwait
nop
sbb
outsb
in
movsl
and
lds
mov
mov
out
pop
push
hlt
jo
push
out
icebp
loop
addr16
icebp
inc
mov
scas
cld
icebp
pop
movsb
push
push
cmp
out
inc
dec
xchg
dec
adc
mov
jae
xchg
hlt
jmp
push
xchg
loop
hlt
or
push
repz
sub
mov
pushf
daa
pusha
jle
mov
push
loope
pop
push
fimull
cmp
stc
push
rolb
inc
xchg
dec
xor
adc
or
daa
out
jge
cmpsb
ret
loop
inc
daa
leave
and
and
mov
cmp
movsl
dec
dec
push
push
mov
mov
inc
jge
sub
hlt
test
push
loop
ss
pop
and
js
jnp
je
cmpl
int3
lcall
cmp
cltd
and
outsb
punpckhwd
iret
cmc
fimuls
rcrl
gs
mov
les
mov
icebp
xchg
aaa
jo
mov
fisubl
push
inc
lret
and
mov
pop
pop
push
jecxz
test
pop
dec
rcll
lods
outsb
mov
pop
hlt
popa
push
bound
in
mov
mov
mov
push
jg
out
pop
xchg
rcll
mov
movsb
fstl
andb
mov
stc
mov
insl
idivb
sahf
and
out
ds
pop
mov
mov
lds
sbb
daa
xchg
dec
mov
filds
xorl
mov
mov
dec
push
cmpsl
cs
or
out
add
aas
push
fwait
lock
mov
icebp
test
in
and
inc
xchg
pushf
xor
test
push
cmp
dec
fisubrs
inc
in
push
xor
or
fnstsw
dec
xchg
adc
push
xchg
adc
call
hlt
and
ljmp
or
fdiv
sub
lret
lods
cmp
jl
xor
jg
cwtl
pusha
inc
fildll
inc
xor
sub
out
icebp
push
pop
sti
and
pop
les
ljmp
jge
pop
pop
js
lock
lcall
roll
roll
fs
mov
adc
sti
sbb
mov
insb
mov
and
jle
stos
in
push
or
stos
je
lret
movsl
xchg
and
cmp
mov
pop
sbb
ja
lret
mov
push
mov
inc
jno
lods
int3
ljmp
jmp
cmp
jmp
mov
pop
popf
cmpsb
push
jl
out
cmp
in
adc
shlb
mov
push
loop
mov
adc
and
cmpsb
cmpsl
and
mov
pop
sub
cmpsb
xchg
shll
stc
pop
inc
mov
mov
sbb
xlat
mov
in
push
or
in
xchg
mulb
lock
sahf
mov
adc
jecxz
cld
cmp
clc
push
add
jecxz
xor
lods
rclb
mov
pop
fisttps
in
nop
lret
bnd
push
inc
inc
movsl
cltd
jmp
mov
cmp
jo
aam
out
dec
add
vminpd
sub
add
xor
and
lods
adc
imul
xchg
jnp
mov
adc
cmp
rcrb
ficompl
add
arpl
outsb
pop
daa
out
in
daa
lock
pop
ret
adc
pop
push
mov
or
and
xchg
pop
dec
cmp
daa
clc
pop
add
and
push
sub
ljmp
push
add
ljmp
jo
xor
dec
xchg
jnp
stc
push
sub
mov
out
cld
iret
mov
bswap
jb
or
icebp
and
xchg
test
fistpll
pop
pop
aas
and
out
and
movsl
test
fists
jecxz
jmp
sahf
fdivp
pop
pop
cli
out
repz
andl
out
xchg
sbb
push
mov
push
imul
in
stos
mov
push
inc
mov
xor
inc
inc
push
adc
and
xlat
pop
dec
xor
enter
mov
call
push
and
xor
aad
and
push
ljmp
negb
push
mov
gs
pop
mov
shll
out
stos
test
stos
pop
jl
js
clc
ljmp
or
or
dec
xchg
dec
dec
scas
cmp
jne
jp
adc
test
mov
int
outsl
pop
pop
lcall
sbb
adc
mov
ja
xchg
pop
and
aam
cli
push
lret
pop
xchg
push
fbld
movups
mov
mov
lretw
jle
push
repnz
mov
es
and
cltd
xchg
dec
pop
fistps
xor
jae
and
adc
mov
js
lahf
jns
add
test
fsubrp
push
lahf
in
jmp
fdivr
jmp
mov
mov
std
std
jae
mov
sbb
jne
xchg
push
dec
pop
mov
and
jmp
fcoml
mov
jp
sub
jmp
or
xlat
js
xchg
inc
sub
cld
sbb
mov
int
test
loop
xlat
add
fildll
jbe
int
pop
dec
pop
stos
ljmp
cmp
daa
xchg
mov
mov
sbb
out
xchg
push
lret
loope
sub
dec
dec
mov
xchg
inc
out
mulb
push
clc
push
mov
scas
mov
in
call
sub
push
cmc
mov
and
add
dec
xchg
sbb
rolb
mov
push
lods
stc
dec
shll
ret
mov
sti
jmp
push
jmp
outsb
mov
pop
cmp
mov
fbld
fists
out
shlb
ljmp
jns
jl
movsb
push
inc
mov
stos
out
mov
adc
or
enter
stos
orl
pop
dec
cwtl
in
ljmp
cs
pop
mov
mov
shr
push
cltd
push
mov
inc
push
dec
das
mov
push
push
xchg
xor
cwtl
pusha
jmp
fbld
jle
daa
pop
jge
adc
dec
insl
dec
mov
jg
decb
pop
clc
rcll
jns
adc
stos
fs
outsl
iret
xor
xchg
pop
je
std
mov
jmp
mov
xor
loop
ficomps
in
cmc
inc
mov
push
add
push
jmp
jg
lds
xor
data16
cmpl
js
outsb
fimuls
xchg
loop
pop
push
lock
fisttpl
out
xchg
sbb
out
adc
or
push
sahf
sbb
sbb
loop
mov
std
dec
mov
push
js
ja
xchg
cmp
pop
dec
sub
jns
pop
stc
mov
lods
mov
popf
mov
fistps
inc
mov
push
mov
scas
mov
xchg
test
mov
jge
push
fmuls
inc
push
mov
loop
mov
jmp
jl
mov
adc
je
dec
addr16
pop
int
orb
pop
mov
or
push
and
lret
daa
mov
push
jbe
pop
movsb
bound
dec
fwait
and
das
adc
cmp
add
pop
add
inc
ret
and
xchg
push
cmp
jns
push
ret
cltd
repz
shlb
int
xchg
jmp
hlt
xlat
xchg
pshufw
cmpsb
adc
clc
cmpsl
xchg
ja
lret
pop
mov
popf
out
test
lods
test
or
jg
mov
inc
mov
pop
add
dec
dec
jge
fnstcw
aam
inc
sbb
rcrb
adc
adcl
mov
and
out
pop
stc
adc
push
daa
test
push
adc
dec
lods
pop
mov
dec
sbb
and
cltd
mov
and
lea
cs
mov
pop
mov
es
dec
pop
imulb
mov
or
jo
jmp
mov
push
div
out
add
orb
mov
daa
int3
movsl
dec
out
mov
loopne
xchg
popf
mov
inc
cmp
lcall
test
sub
lods
fldl2e
adc
xlat
inc
mov
insb
mov
popf
fcomps
sub
dec
fcompl
mov
pop
dec
iret
pop
decb
pop
push
ret
mov
xor
popf
push
jns
inc
rcrb
jne
inc
test
push
lret
pusha
cmpsl
mov
mov
lret
adcl
aad
sti
pop
xor
loop
dec
aam
out
jecxz
xlat
sub
fbstp
lds
sti
aad
and
les
mov
movsb
dec
push
mov
jmp
sub
sub
pop
mov
aas
inc
fidivs
outsl
or
fstps
inc
fistpll
and
jge
mov
mov
in
and
sbb
fcoml
insl
pop
xchg
loopne
divb
or
daa
pushf
notb
sbb
stc
push
xor
cmc
out
call
mov
and
xchg
mov
sti
in
int
pop
lds
adc
stc
je
pop
negb
je
ljmp
imul
sub
in
mov
xlat
cmp
push
fildl
ljmp
pop
js
and
mov
scas
movsb
add
pop
cld
fsub
push
sbb
cli
ljmp
xor
inc
fmuls
xor
dec
jge
mov
push
push
fists
mov
js
mov
rclb
fsubrp
sbb
push
mov
and
decb
push
push
imul
mov
popa
movsb
and
push
xchg
mov
out
pop
jle
popf
pop
jp
xlat
lret
mov
hlt
inc
daa
scas
jge
or
or
mov
pop
stos
push
insb
or
dec
addl
lods
and
aaa
cltd
sbb
popa
mov
les
fdivrl
jae
xchg
out
push
or
fwait
popf
jo
jmp
and
rorl
leave
sub
mov
xchg
mov
inc
dec
repnz
mov
or
mov
pop
es
repz
sub
push
jl
lret
inc
push
jmp
subb
iret
cmp
outsl
jno
out
adc
or
fwait
popf
movsl
add
xchg
lds
shll
fwait
xchg
pop
stos
stos
sbb
jg
loop
jl
push
aam
loop
mov
dec
push
leave
rcl
lds
or
aam
or
inc
xchg
jmp
adc
push
je
xor
or
loopne
cmpsb
out
fildll
vpmacssdql
stos
pop
jns
push
jb
xchg
push
pop
jl
mov
hlt
mov
push
jl
loopne
int
loopne
or
pop
add
jmp
outsl
lcall
mov
mov
imulb
clc
inc
aam
daa
lret
fldenv
fwait
push
pop
popa
sbb
loop
xchg
or
shl
xor
jae
test
loope
sahf
cmc
std
mov
xor
ljmp
imul
stc
adc
lods
and
xchg
or
push
jge
daa
jmp
or
pop
add
aam
jecxz
mov
sbb
cmpsl
push
mov
popf
daa
lcall
fbstp
fbstp
outsb
fisttpl
add
adc
add
dec
loopne
xchg
xor
in
add
pop
les
shll
mov
popf
addl
out
jns
stos
mov
xchg
stos
mov
mov
inc
shrl
xor
or
leave
dec
idivb
and
push
mov
mov
lcall
ja
sub
xor
loop
loopne
popf
dec
mov
fcmovb
aas
adc
rorl
jle
lcall
pop
lret
pop
push
daa
sub
add
ds
jmp
and
repz
inc
xchg
dec
imul
mov
pop
daa
mov
das
mov
js
mov
lds
jnp
fidivs
test
pop
testl
stos
push
mov
dec
xor
mov
mov
fists
cmpsb
in
call
push
test
ret
daa
movsl
mov
adc
out
mov
movsl
mov
mov
dec
fisubrs
inc
jmp
add
xchg
out
stc
xor
sbb
xor
jl
jg
dec
sub
pop
mov
cmp
loope
mov
iret
mov
add
mov
out
adc
icebp
adc
sub
ret
clc
pop
fucomi
scas
mov
adc
sub
pop
clc
ljmp
enter
gs
dec
push
aaa
outsb
hlt
dec
dec
jne
dec
sti
mov
mov
mov
out
insl
lret
std
inc
mov
fnsave
inc
testw
jl
sub
leave
cli
inc
or
jle
pop
pop
lock
pop
xchg
subl
jbe
loop
or
push
pusha
inc
pop
ja
inc
sarl
js
jmp
xlat
outsb
mov
push
jae
sbb
or
push
je
push
push
clc
jle
inc
mov
daa
mov
dec
daa
ret
leave
jge
addr16
dec
inc
sub
fistpll
btc
test
in
scas
push
lods
mov
sbb
daa
xacquire
dec
das
mov
add
or
in
test
test
imul
aam
out
adc
jo
fwait
pusha
push
pop
dec
or
out
dec
mov
icebp
ret
sbbb
test
push
or
out
insb
and
or
dec
jmp
sbb
in
xor
pop
sub
sarl
imul
stc
jmp
sbb
cmc
loopne
out
cmp
mov
hlt
ljmp
ljmp
mov
ljmp
push
inc
lcall
inc
push
dec
icebp
xchg
or
dec
stos
imul
mov
inc
cltd
dec
jmp
push
push
dec
push
dec
jno
mov
dec
xchg
dec
or
xchg
dec
mov
pop
in
and
pop
mov
jnp
jge
jnp
dec
xor
mov
push
sub
dec
xchg
scas
push
jg
dec
lock
sarb
cltd
test
pop
pop
mov
sbb
mov
jns
inc
imul
cs
dec
cmp
mov
fucomip
loopne
daa
push
call
loop
mov
add
dec
stc
pop
fildll
sub
cmpsb
sub
lods
and
lea
lea
fldl2e
sbb
xchg
or
pop
inc
hlt
dec
testl
pop
dec
loop
lods
ret
lods
jne
repnz
inc
daa
xchg
pop
pop
daa
cmp
int
call
outsb
xlat
xchg
cld
jb
stos
push
mov
in
fiadds
in
fists
scas
ljmp
pop
add
lret
adc
xlat
or
push
add
sti
pop
bound
outsl
dec
push
fs
push
repz
push
adc
xor
out
incl
jle
add
into
cld
jno
lods
pop
lret
push
cmp
mov
xchg
xchg
push
icebp
jno
push
je
pop
sub
insl
cs
pushf
xor
pop
sahf
and
or
mov
mov
xchg
mov
dec
movsb
lea
mov
jp
ss
pushf
mov
js
push
push
inc
inc
mov
clc
cmp
test
mov
dec
faddl
sbb
pop
xchg
out
movsl
mov
insb
addr16
insl
push
ret
shrb
inc
clc
and
sbb
cmp
mov
test
inc
inc
pop
mov
out
adc
das
adc
pop
xchg
hlt
popf
mov
fs
orl
adc
xor
lds
clc
jb
inc
sbb
std
pop
push
jnp
cld
mov
das
mov
lret
push
out
test
jmp
add
ljmp
std
insb
fistpll
out
stos
mov
jne
ret
push
repz
dec
sub
jl
inc
mov
jecxz
and
repz
sbb
aad
daa
or
pop
push
dec
test
lcall
fbld
dec
repnz
and
xchg
out
subps
sbb
sub
mov
jne
pop
push
decl
push
pop
ljmp
std
ljmp
pop
inc
rclb
cmpsb
xor
ljmp
jnp
add
cmc
jnp
fsubrs
into
lret
xor
xlat
jmp
and
pushf
ds
fistpl
daa
fcmovne
dec
fildll
out
sub
loop
sarb
jl
and
mov
call
push
jmp
sti
popl
ret
adc
dec
push
pop
pop
mov
fcoms
push
in
pop
cmpsl
jl
push
dec
loope
out
ficomps
out
nop
pop
mov
dec
mov
mov
testl
dec
jb
adc
lock
popf
mov
repz
aas
push
jns
jge
dec
sbb
ljmp
jo
xlat
fadd
xor
fcmovnbe
jp
stc
leave
sub
dec
outsl
push
jg
pop
dec
icebp
ret
and
xchg
daa
adcb
pop
imull
aas
ret
pop
jnp
fwait
add
mov
mov
mov
mov
mov
testb
fnstenv
mov
pop
pop
rcr
mov
dec
cwtl
je
push
inc
fstps
outsl
cltd
mov
cmp
push
mov
fidivrl
inc
fistl
push
in
and
xchg
jecxz,pt
mov
out
lahf
insb
decl
sub
adcl
mov
push
jecxz
dec
aad
iret
neg
sbb
xchg
sub
es
sub
or
in
test
sbb
mov
mov
lds
push
sub
addl
add
add
enter
sub
mov
push
in
jp
dec
or
dec
dec
pushf
mov
mov
xchg
jge
or
mov
movsb
sbb
xor
xor
imul
dec
mov
mov
sub
lock
arpl
sbb
iret
test
je
dec
or
scas
cli
in
mov
mov
mov
mov
addr16
sahf
or
jle
push
call
sahf
imul
mov
push
sub
lahf
adcl
jl
stos
fildll
xor
jbe
adc
cmp
mov
jle
xchg
adcb
test
jle
mov
loop
cltd
push
mov
mov
adc
xor
lods
xor
mov
sbb
push
mov
inc
pop
jne
dec
mov
pop
into
mov
rcl
pop
xor
scas
pop
jo
xor
mov
jae
xchg
push
dec
adc
xchg
mov
cltd
inc
ss
adc
pop
sub
xchg
daa
xchg
add
stos
lds
sbb
or
insl
clc
dec
mov
cmp
mov
jno
push
loope
pop
or
shl
sbb
popa
mov
cmp
ljmp
aas
pop
adc
jnp
mov
sub
adc
mov
pop
aad
xchg
or
jno
mov
aaa
cmp
xchg
mov
lcall
add
sbb
push
xchg
imul
push
cld
jl
mov
cmovo
inc
dec
sbbl
pop
mov
jo
dec
mov
cld
mov
loopne,pn
sub
xor
jp
mov
cmp
lods
cmp
mulb
sub
mov
pop
adc
push
cwtl
repz
xchg
sbb
fstp
fnsave
inc
pop
or
shrb
mov
adc
mov
sahf
xorb
xor
outsl
mov
add
lods
mov
ret
lods
mov
sar
xchg
test
mov
mov
rcll
sbb
in
push
mov
mov
dec
ss
sbb
push
imul
pushf
popl
mov
xor
pushf
inc
inc
push
jg
xor
std
je
dec
dec
push
cmc
stos
enter
movsl
push
mov
jge
adc
sub
push
or
jmp
mov
pop
xchg
loop
ds
mov
cwtl
out
adc
xor
lods
jmp
sub
xor
jp
xor
push
icebp
xor
ret
cmpsb
aad
or
es
lret
outsl
ficompl
enter
cmp
repz
and
pop
add
xlat
cmp
loop
ljmp
mov
cltd
inc
dec
and
les
pop
adcb
add
push
sub
inc
or
movsl
add
pop
xchg
imul
xor
in
out
xorl
stos
push
frstor
cltd
stc
jno
ret
push
ss
mov
adc
fdivrs
adc
popl
ficoms
shll
shrl
mov
and
mov
sbb
cmc
jle
or
notl
add
and
jge
daa
push
mov
imul
and
jne
ljmp
dec
sbb
repnz
sub
les
and
and
dec
sub
mov
and
orl
imul
push
lret
jmp
sahf
cmp
jae
push
mov
mov
jl
xchg
rol
mulps
sub
sub
jl
xchg
repz
lret
loop
in
test
sti
hlt
fs
pop
jmp
das
aas
adc
mov
mov
add
xor
nop
in
inc
sbb
stc
addr16
xor
data16
sbb
push
in
and
call
push
pop
xchg
sub
ret
cmc
ret
cmp
rclb
jp
cmp
fistps
adc
jmp
fwait
pop
jmp
bound
or
sub
inc
mov
in
push
bound
xchg
add
jo
push
add
mov
sub
push
sarl
adc
repz
xor
fimull
sbb
fidivrs
jmp
ss
xadd
and
push
lahf
cmp
or
pop
xor
nop
lcall
xchg
cmc
mov
scas
out
sub
jl
add
rol
adc
dec
push
cwtl
or
mov
cltd
inc
xchg
cwtl
bound
mov
nop
jne
dec
inc
jmp
push
imul
mov
leave
xor
inc
insb
dec
mov
jnp
pop
jmp
jmp
mov
mov
roll
stos
or
xchg
xchg
out
xchg
xor
into
out
test
pop
in
inc
xchg
in
nop
lods
repz
addr16
pop
or
fdivl
xor
mov
in
shlb
hlt
loopne
pushl
test
icebp
cwtl
enter
cmp
subl
mov
clc
ja
pop
lahf
mov
outsl
push
adc
push
mov
push
pop
cli
sub
sub
cmp
mov
mov
mov
dec
adc
sbb
inc
loope
lds
pop
mov
pop
push
cmpsl
jns
pusha
cwtl
push
sbb
cmp
cmp
mov
or
jnp
pop
jecxz
test
inc
pop
insb
cmpsl
int3
xchg
lds
dec
or
das
jmp
jns
or
sub
mov
popa
or
jge
call
mov
lret
fwait
rclb
out
jo
cmp
cs
jmp
loopne
dec
pop
or
mov
shll
popa
xchg
jmp
cmp
movsb
xchg
lods
aas
jbe
sbb
xchg
int3
xor
cld
mov
xchg
fmull
lods
push
cwtl
adcb
xchg
lods
sub
sbbb
jno
lods
sbb
pop
cld
cmpsb
pusha
mov
adc
cmp
sub
mov
pushf
pop
and
pop
mov
jo
mov
addl
jns
sahf
push
xor
fsts
dec
lret
xchg
idivb
push
enter
imul
or
ja
in
jb
lret
sahf
and
or
ljmp
mov
pop
pushf
fidivrs
jp
push
sbb
repz
jae
fiadds
lret
xchg
ljmp
and
cli
loopne
testb
pop
adc
xchg
mov
fcmovu
mov
inc
push
test
xchg
xor
or
cli
stos
adc
stc
loop
jnp
mov
nop
pushf
stos
pop
std
sub
push
xor
out
jg
xor
loope
clc
and
and
scas
lahf
imul
cmpsb
mov
sub
fstps
test
add
mov
divl
mov
inc
test
out
mov
sti
jae
dec
mov
jns
js
jecxz
test
mov
add
mov
cmpsb
push
xor
inc
sbb
adcb
in
ss
daa
push
sbb
cmp
jnp
sub
test
sti
in
mov
add
push
jb
sbb
jbe
lret
in
jle
mov
cmp
fwait
adc
pop
mov
jo
cs
add
adc
push
fdivrs
mov
out
sub
push
mov
inc
mov
lret
adc
xchg
lods
daa
mov
mov
scas
xchg
lahf
lock
sbb
xor
popa
mov
test
pop
out
xor
xchg
mov
pop
pusha
jl
xor
daa
add
out
sub
xor
or
mov
cmp
in
ret
loop
dec
xchg
jae
mov
test
inc
imul
scas
lods
ret
or
lock
pop
sub
xor
scas
jecxz
loopne
arpl
xor
scas
aam
cmpsl
jge
lea
lret
xchg
fs
notb
rorb
xchg
jmp
iret
je
mov
adc
pop
test
fwait
scas
stos
mov
mov
push
loop
ficomps
cmc
ljmp
out
or
cltd
scas
movsl
addl
push
notb
jmp
xchg
imul
mov
das
sbb
push
pop
sahf
test
or
test
pushf
inc
stos
das
scas
gs
or
pop
inc
hlt
jge
xor
aaa
test
xor
sub
sbb
cwtl
xor
pop
nop
xchg
stc
movsl
rorl
pop
cli
rclb
hlt
loop
xor
pop
in
lea
mov
addb
jne
cwtl
mov
das
mov
fbstp
cmp
mov
lods
mov
adc
inc
mov
adc
stos
lods
fcomps
lret
dec
std
cmc
js
es
jne
repnz
repz
and
mov
test
out
fldl
mov
inc
mov
lahf
nop
adc
push
jb
mov
pop
pop
mov
imul
jne
cmp
fcomi
adc
pop
jp
sbb
imul
stos
pop
xor
push
loope
movsb
inc
mov
pop
xor
repz
mov
lods
add
or
cwtl
or
pop
mov
or
fadds
inc
popa
push
dec
jne
adc
adc
push
mov
adc
aad
iret
inc
lcall
movsb
out
outsb
pop
mov
pop
add
xchg
xchg
iret
pushf
xchg
fildll
inc
mov
fmul
lcall
mov
fstps
mov
mov
jnp
mov
sbb
or
jp
ljmp
mov
mov
xlat
mov
out
and
adc
mov
push
mov
add
mov
xor
sub
or
js
sbb
mov
loope
cmp
jge
and
aas
jmp
pop
enter
out
lcall
leave
pop
ret
pop
pushl
ljmp
fbstp
call
push
push
pop
rcll
mov
bnd
outsb
stos
pop
subb
addl
xchg
or
lods
xchg
cmp
cmp
or
add
mov
add
cltd
aam
js
scas
idiv
cmp
in
or
or
fldcw
mov
mov
mov
mov
pusha
jnp
les
pop
cmc
mov
add
mov
loop
ret
inc
pop
adc
inc
cmp
xchg
test
mov
cwtl
xchg
scas
fldl2t
inc
fsubs
sbb
mov
mov
clc
sarl
push
ret
pushf
jg
xchg
out
dec
or
je
nop
jbe
push
mov
mov
stc
test
por
mov
pop
push
leave
pop
cltd
nop
mov
sbb
into
jo
movsl
shll
out
jmp
mov
inc
adc
lods
mov
das
test
add
test
inc
pop
cmc
popa
repnz
in
jnp
mov
loopne
sbb
xchg
cmpsl
xstore-rng
cmpsl
pop
fidivrs
out
xchg
or
mov
mov
mov
push
mov
fistpll
xor
ds
out
adc
adc
ret
fst
pop
push
xchg
push
mov
and
or
loope
mov
les
push
mov
mov
xchg
pushf
adc
loope
cmp
mov
xchg
adc
pop
jnp
aad
cwtl
imulb
sub
cld
repnz
mov
negb
cmp
outsl
lea
and
push
out
rclb
enter
sti
mov
mov
cwtl
push
mov
lods
sub
push
and
and
push
shl
xchg
mov
add
jl
jbe
lea
cmp
add
dec
or
lret
lahf
sbbl
sbb
add
mul
or
clc
pop
inc
pop
inc
xor
daa
mov
push
rclb
jnp
cmp
adc
push
push
ja
push
cmc
cmp
shr
xchg
scas
cli
rcl
mov
jnp
xchg
sbb
sti
adc
and
leave
dec
fucomip
adc
jns
or
cld
jo
call
pop
xchg
or
mov
setg
jmp
pop
push
loop
fisubrl
ret
ret
and
fdivs
lock
cmpsb
mov
into
xchg
dec
mov
xchg
movsb
xchg
mov
mov
jns
mov
cli
nopl
sbb
out
mov
testl
pop
xor
jne
sbb
adc
xor
clc
lds
mov
mov
and
cmp
popa
repz
adcl
and
lock
mov
cmc
jl
xor
and
cmpsb
out
push
test
jne
std
call
into
add
rorl
test
shlb
push
pop
sub
lcall
cld
mov
inc
dec
scas
sub
push
js
js
pop
cs
stos
ret
push
daa
sti
call
pop
xchg
fiaddl
stos
cmpsl
cli
fs
xor
outsl
call
cmc
adc
aad
push
popf
aad
jo
in
cmpsb
adc
out
call
push
setge
cmp
cld
imul
pop
mov
inc
imul
in
push
push
pop
outsl
adc
push
mov
aad
enter
mov
push
adc
pop
nop
jl
xchg
dec
cmp
and
xchg
pop
fists
push
fmulp
movsl
out
dec
push
ds
out
push
cmpsl
movsb
int
fsubrl
clc
xor
add
push
daa
jae
out
jb
jp
mov
pop
lahf
mov
push
in
addr16
adc
mov
lock
shll
fwait
out
mov
sbb
jo
int
jnp
pop
fisttpll
mov
xor
int3
in
cmp
push
cs
mov
mov
and
jo
push
xchg
and
sbb
imul
push
stc
sub
gs
mov
xor
vpor
mov
inc
dec
sbb
jae
aad
xlat
js
aaa
adc
iret
call
cs
das
add
add
or
pop
add
out
stc
in
xchg
sbb
stos
cmp
or
pop
test
sbb
stos
pop
sub
scas
scas
fsubrp
add
pushl
cmp
in
pop
cld
aad
adc
ja
repz
mov
ss
test
cmp
mov
fistpll
ss
mov
imul
out
scas
jbe
inc
shrb
aaa
andb
and
adc
repnz
ljmp
adc
xlat
lea
or
int3
scas
stos
es
sbb
push
mov
cmp
sub
mov
call
inc
adc
xchg
mov
adc
pop
adc
or
cwtl
xor
mov
push
adc
dec
cmp
push
cld
icebp
fwait
and
push
mov
mov
outsl
lock
xlat
pop
aad
cwtl
xor
outsb
inc
sbb
jbe
jge
nop
pop
cwtl
fwait
mov
lahf
sub
out
adc
scas
insl
loop,pt
aaa
cwtl
and
fcomi
xchg
test
outsl
xchg
mov
iret
inc
test
mov
movsl
insb
xchg
test
adc
es
leave
xor
divl
lcall
fisubs
push
daa
jmp
pusha
out
scas
pushf
sbb
pop
rorb
ja
stos
push
xchg
mov
mov
cmc
mov
pop
inc
fldenv
popf
pop
push
jmp
call
pop
push
dec
mov
leave
sub
push
imull
cmp
and
jle
jbe
cltd
jmp
icebp
stos
addr16
in
mov
mov
and
mov
inc
hlt
or
jecxz
add
inc
mov
or
sbb
sub
dec
lods
adc
or
jl
dec
aam
loopne
xchg
pop
xor
mov
clc
xor
pusha
push
add
dec
adcl
fdivs
dec
test
decl
jne
add
inc
psubq
fwait
mov
lcall
fs
nop
adc
add
fwait
mov
xchg
cmp
and
shlb
dec
mov
movsb
jbe
sbb
insb
push
mov
mov
pop
mov
lret
rep
xor
and
inc
rolb
xchg
repz
fstl
out
pop
imul
push
popa
je
sub
sub
or
inc
push
or
inc
fmul
or
mov
xor
fsub
mov
ret
xchg
pop
int
pop
in
mov
in
in
repz
popf
pop
scas
or
out
shll
sbb
sub
popf
lock
icebp
sub
dec
mov
or
dec
xor
rcr
ror
ljmp
jmp
push
ret
cld
xchg
dec
sub
or
dec
js
add
dec
pop
jns
les
dec
fidivrl
push
pop
and
adc
stos
xchg
frstor
bound
bswap
lds
mov
dec
pop
js
jmp
xor
std
and
sub
pop
popf
jl
inc
ret
jp
cmpsl
jns
jae
rol
lods
add
cmp
jp
cs
mov
repz
adc
fwait
cmc
xor
sub
mov
xchg
dec
sbb
pop
dec
popa
repnz
pop
shlb
mov
push
mov
cwtl
mov
cmc
pop
mov
dec
mov
test
das
ljmp
jecxz
out
mov
mov
pusha
imul
lcall
dec
sub
add
xchg
cltd
insl
and
sbb
arpl
xchg
xchg
jp
dec
icebp
pop
sbb
rcrl
dec
stc
inc
add
fldt
dec
ss
outsb
arpl
and
insb
lods
int3
ljmp
mov
xchg
mov
clc
divps
dec
xchg
sbb
mov
add
inc
es
pop
push
call
mov
cli
xor
jle
rcll
lcall
and
jge
cs
outsl
aaa
xchg
dec
pop
xlat
repz
push
aad
pop
jmp
xchg
stos
loope
jnp
icebp
sub
movsl
sti
add
scas
nop
int
add
mov
clc
inc
addr16
ja
jbe
push
fsts
mov
sub
frstor
pop
mov
jo
xchg
sbb
cmp
pop
sub
stos
in
sbb
cmpsb
aam
pop
lret
call
das
daa
jmp
jno
xor
push
sub
xchg
jl
scas
pushf
iret
loope
test
stos
test
fisttpll
or
fcmovne
sub
out
pop
imul
aad
fcompl
test
inc
mov
aad
push
imul
or
jno
cmpsl
dec
fcmovbe
pop
dec
xor
stos
loopne
loope
test
pop
bswap
hlt
adc
xlat
jmp
jge
xor
sbb
push
sub
mov
adc
mov
aad
pop
mov
daa
lret
and
mov
push
aam
fisubrs
in
fcompl
lods
or
iret
aad
push
imul
sbb
insl
ret
cmpsl
dec
pop
dec
and
in
mov
jg
les
pop
jmp
xchg
sbb
mov
jns
sub
pop
lahf
into
push
sbb
movsb
mov
adc
adc
ret
jmp
push
mov
pop
aam
fiadds
fmull
mov
fstps
cltd
mov
jno
cmpsl
dec
mov
pop
mov
scas
nop
mov
jbe
int3
sub
out
fdivrl
leave
add
daa
pop
into
imul
imul
xor
mov
scas
push
out
aam
sub
out
fadd
leave
cmp
out
dec
mov
cmpsl
insb
pop
mov
pop
lahf
das
dec
jmp
shll
mov
sbb
cmp
icebp
adc
push
in
mov
movsl
scas
inc
sti
aam
fstps
sub
out
test
aam
aam
fiadds
dec
leave
mov
lods
pushf
jl
lea
or
scas
insl
iret
push
xor
pushf
mov
sub
aam
adc
lock
imul
pushf
adc
stos
cmp
cmp
dec
or
in
sbb
lods
mov
sbb
or
div
push
test
lret
pop
xchg
das
push
jmp
stc
gs
push
rorl
js
aam
fldenv
out
aad
dec
push
sub
stos
cmpsl
cwtl
pop
push
lret
mov
jnp
jecxz
pop
jmp
popa
add
mov
dec
fwait
in
fdivrl
nop
push
int
pop
mov
sub
sbb
mov
push
aam
fidivs
mov
mov
rcrl
mov
jo
xchg
fisubl
push
mov
cmpsb
shrl
ljmp
pop
jnp
enter
out
pop
jmp
lea
pop
insl
mov
inc
push
out
pop
fwait
into
push
in
test
stos
lods
xlat
fisttpll
adc
lret
cmp
out
inc
dec
pop
iret
xor
out
faddl
mov
lods
pushf
inc
imul
adc
mov
dec
imul
mov
adc
por
andl
jne
cmp
outsl
xchg
jo
mov
into
movsb
or
into
movsl
pushf
inc
imul
adc
pop
out
inc
dec
pop
rorb
scas
in
aam
fnstenv
push
leave
call
xchg
pushf
sbb
stos
cmp
inc
loop
repnz
fwait
call
push
jmp
sbb
dec
not
and
lret
or
sub
mov
js
mov
xchg
das
pop
jmp
stc
gs
push
fisttpll
jae
xchg
scas
sbb
aam
flds
jmp
dec
pop
stos
int3
xlat
cmp
pop
cmpsb
test
inc
lret
rclb
sub
xchg
mov
jno
aaa
push
dec
add
push
or
in
sbb
lods
mov
sbb
or
fistpl
das
ret
jmp
push
mov
pop
aam
fidivrs
stos
in
fmull
mov
mov
stos
push
mov
cmpsl
push
mov
lock
bound
int3
aam
fchs
sub
out
fdivl
leave
adc
xlat
cmp
dec
aas
scas
push
pop
mov
xchg
das
push
jmp
stc
gs
push
insb
adc
fcmovu
sub
call
mov
mov
xchg
pop
pop
out
mov
mov
hlt
aaa
xchg
scas
jne
push
fstl
and
jge
shrb
sbb
push
xor
fldl
add
fisubl
and
adc
mov
rcl
leave
movsl
ret
test
sub
push
pop
cwtl
ljmp
lahf
clc
fstpl
nop
inc
scas
add
pop
les
pop
call
pop
or
mov
and
jp
or
mov
add
push
pop
xor
xchg
fstl
outsb
fldcw
lahf
rclb
or
xchg
sub
out
sbb
sub
lret
pop
dec
pushf
sahf
pop
jecxz
lcall
push
popf
jmp
test
scas
push
adc
push
mov
xchg
enter
push
add
loopne
sub
xlat
popf
pop
fwait
and
stos
and
sahf
aaa
out
addr16
cwtl
ja
dec
xchg
mov
sbb
push
sbb
xor
jl
mov
push
sub
pop
pop
adc
mov
and
fistl
dec
lret
mov
lcall
lcall
push
mov
cltd
insl
sti
jl
decb
notb
aaa
lahf
ljmp
inc
pop
push
scas
lods
push
push
pop
test
andb
push
insl
test
cwtl
pusha
add
popf
sbb
gs
ret
jo
push
add
leave
inc
push
hlt
test
mov
inc
bound
out
test
push
std
fidivl
adc
lret
and
ja
rcrl
pop
or
loop
xchg
fldenv
stc
mov
sub
sub
mov
mov
fwait
xchg
or
jns
mov
int3
fcmovnu
popf
lcall
sub
ja
mov
test
nop
mov
xchg
and
xlat
dec
or
jecxz
fnsave
fwait
or
fwait
shll
rolb
inc
outsl
scas
out
push
sbb
popf
outsb
or
addr16
mov
dec
push
fnstcw
aam
outsl
sub
js
mov
add
sub
dec
xor
pop
out
xchg
mov
cmp
adc
jo
adc
ljmp
iret
addr16
sub
and
dec
lods
jl
mov
pop
sbb
pop
test
mov
out
or
aaa
mov
stos
mov
jo
ss
or
inc
out
pop
xchg
ja
cmc
xchg
dec
lar
fs
jnp
lret
sub
adc
mov
mov
mov
sbb
mov
dec
and
mov
lea
dec
iret
into
insb
pop
push
mov
in
xchg
jle
insb
div
or
push
pushf
lea
or
adc
dec
and
cwtl
mov
ss
jae
stos
fmulp
adc
stos
cwtl
pop
sbb
push
push
jne
inc
aaa
xchg
pop
jecxz
fildll
jecxz
movsl
int3
movsl
cmpsl
movsl
mov
loop
mov
and
xor
pop
adc
ret
xchg
pop
into
rclb
mov
push
push
xchg
in
lret
loopne
dec
pop
pop
adc
pop
mov
scas
sub
inc
stos
dec
into
push
xchg
ljmp
ja
cmp
add
mov
fldenv
int
mov
lods
insl
xor
push
cld
push
into
pop
cwtl
lods
out
push
cmp
pusha
jns
arpl
inc
iret
mulb
and
jnp
subb
pop
fwait
imul
into
and
cmpsb
loop
call
in
pop
or
scas
jl
mov
popf
nop
sarl
out
sub
iret
xchg
xchg
sbb
or
and
xchg
push
pop
inc
dec
aad
popf
in
pop
xchg
mov
mov
sub
pushf
mov
in
pop
pusha
mov
mov
xor
pop
jns
leave
imul
cwtl
adc
mov
stos
and
cld
xor
adc
in
ret
or
dec
mov
stc
fmull
push
pop
cwtl
pusha
in
adc
sbb
xchg
push
lcall
and
cmc
xchg
js
adc
sarb
test
mov
cs
mov
jecxz
or
jl
lcall
repnz
lret
push
dec
xlat
or
adc
ljmp
adc
fildl
arpl
arpl
cltd
aas
outsl
adc
add
mov
dec
sar
push
shr
xchg
ds
xchg
cmc
jmp
xchg
cmc
sub
cld
lcall
pop
jns
lods
and
jno
jl
mov
popf
pop
mov
xchg
repz
scas
and
xchg
clc
js
lcall
inc
shl
fnstcw
sub
shlb
loope
cmp
jecxz
jl
jmp
adc
fsts
and
into
mov
push
fistl
inc
mov
lods
mov
jnp
jle
fdivr
dec
xchg
add
movsb
loope
inc
decb
pop
mov
enter
cmc
mov
data16
mov
xchg
sub
mov
pop
adc
pop
loope
jo
fmull
loop
into
push
sbb
lcall
lock
movb
push
in
bound
fnstenv
nop
fsubrl
out
fistl
test
pushl
stc
mov
sub
mov
test
or
mov
movsl
int
mov
jbe
movsl
pop
stos
xchg
clc
mov
xor
jb
mov
rcrb
out
push
dec
mov
aas
loope
cld
pop
xchg
sub
call
cmp
dec
push
and
lcall
adc
cmp
and
dec
sub
push
mov
adc
dec
xchg
scas
pop
push
cmc
add
test
movsl
adc
jecxz
imul
movsb
jp
fwait
mov
sbb
mov
imul
push
and
adc
insb
pop
movups
aaa
popf
ficompl
dec
jne
test
je
add
int
aaa
jmp
push
pop
pop
pop
clc
mov
and
cwtl
or
jmp
into
popf
pop
shr
cli
loopne
sahf
les
xchg
pop
jmp
dec
push
dec
lret
and
and
sub
pop
push
lods
mov
sub
dec
mov
mov
mov
lea
scas
loope
shl
cltd
das
in
mov
jae
or
nop
hlt
cwtl
inc
adc
push
cmpsb
aas
xchg
sarb
popa
int3
jecxz
and
stc
jg
mov
add
lds
pop
add
and
mov
daa
mov
in
mov
pop
cmc
ds
push
jle
aam
mov
cmpsb
jmp
aas
movsb
sar
sub
mov
and
test
cltd
xchg
out
and
ficomps
pusha
jmp
stos
outsl
xchg
inc
fcoml
pop
pop
jle
lock
mov
add
sbb
or
int3
fnstenv
push
mov
xor
inc
pop
out
push
or
cmp
sbb
and
rclb
add
jl
sahf
rcll
pop
movsb
imull
sbb
out
popf
jl
dec
lahf
lods
sahf
ror
fwait
je
sbb
pop
ja
mov
push
ds
aam
push
xorl
push
xchg
pop
mov
push
sbb
imul
jg
adc
lea
mov
adcl
jecxz
add
hlt
mov
mov
pop
js
mov
dec
sub
into
arpl
shrb
adc
xor
pop
mov
scas
xchg
dec
sbb
fstps
push
not
es
loopne
cmpsl
dec
out
in
cwtd
pop
cmc
lea
int
mov
aas
sbb
add
mov
cmc
das
inc
mov
fldcw
movsl
out
sbb
push
sbb
sub
and
repnz
add
and
pop
mov
mov
mov
dec
cmp
scas
je
lret
faddp
rcl
pop
cmp
or
xor
add
xor
les
mov
push
cwtl
fsubrs
in
repnz
movsb
sbb
into
sbb
les
add
cwtl
movsl
mov
mov
mov
and
hlt
ja
dec
pop
sub
dec
mov
loop
lahf
cmp
fidivrs
out
pop
push
or
and
out
jmp
aad
data16
out
pusha
repz
jecxz
adc
dec
dec
cs
aad
out
cmp
shr
fsubrl
lea
js
push
mov
ror
inc
iret
push
push
jae
sub
push
out
pop
adc
lcall
leave
insb
cmp
je
inc
mov
add
outsb
xchg
adc
subb
xlat
jb
fistps
and
jbe
jne
fists
jmp
popa
cmp
pop
sub
cltd
add
cmovae
bnd
push
fnsave
mov
pop
lods
xchg
cmc
hlt
or
daa
loop
loop
xchg
out
cli
push
pop
or
icebp
clc
call
std
shlb
pushf
call
insb
push
jbe
inc
or
scas
std
add
mov
in
imul
xor
push
push
push
sti
ja
jle
push
sbb
or
sbb
in
dec
jecxz
popa
ds
push
sbb
std
cltd
push
insl
jno
stos
leave
loop
push
rclb
es
and
fdivs
dec
pop
mov
in
imul
aad
scas
xchg
data16
push
lcall
aam
pop
aas
and
jo
xchg
or
mov
and
movsb
out
jae
in
stos
pop
mov
insb
xlat
jge
inc
or
xor
jbe
mov
jl
dec
xlat
inc
loopne
adc
inc
sbb
push
xchg
xchg
scas
push
cmp
lea
adc
jae
pop
push
repnz
pushf
pusha
xchg
and
jecxz
int
pop
iret
data16
mov
iret
mov
pop
push
clc
mov
add
stos
js
or
cli
mov
mov
jl
mov
jmp
out
cmp
loope
jl
cmp
lcall
xchg
addr16
shlb
mov
pop
sbb
and
mov
fucomip
mov
add
rcl
sub
mov
cmpl
out
pop
push
jne
in
or
lcall
mov
sub
shlb
je
mov
sahf
ds
mov
inc
pop
cmp
ret
fsts
ret
xchg
stos
xchg
mov
pop
sbb
and
pop
xlat
mov
test
cwtl
mov
add
rorb
xchg
xchg
rol
test
fstps
test
pop
cmp
fistl
inc
push
setl
test
std
pop
scas
pop
push
or
jp
add
xor
lea
aaa
stc
cs
ffree
push
mov
xchg
scas
sub
jo
sbb
jle
jns
fisttpl
push
jnp
les
hlt
push
mov
xchg
cwtl
es
mov
movsb
sbb
add
sub
repnz
mov
dec
pop
pop
xchg
mov
mov
sbb
xchg
or
adc
mov
mov
mov
fs
lea
ja
adc
ds
jmp
iret
push
dec
outsl
adc
cmpb
xchg
xchg
push
sti
jl
push
iret
jnp
or
sarb
bound
mov
movsl
fmuls
orb
lret
sub
jl
cmp
mov
imul
lahf
inc
fwait
pushf
mov
push
sbb
jmp
js
push
sbb
out
test
push
sbb
mov
loope
ret
shll
ljmp
xchg
idivl
push
xor
push
or
leave
sarb
cmp
js
sbb
scas
push
mov
or
sub
scas
call
aam
xor
inc
mov
pop
icebp
js
push
inc
jg
xor
push
mov
outsb
loope
pop
mov
insb
cmpsl
das
dec
or
mov
add
add
cs
push
mov
insb
push
inc
mov
iret
xor
in
mov
jns
pop
xor
jmp
insl
imul
mov
cs
mov
movsb
addr16
fadd
dec
sub
lock
scas
scas
loopne
aam
fldcw
fdivl
int3
or
dec
into
mov
js
subl
cmpsb
xor
test
dec
pop
stos
rcl
sub
lret
nop
adc
inc
jmp
int
cmpsl
push
fisttpll
inc
imul
shl
sub
dec
inc
cmp
popa
es
scas
aam
aam
fidivrs
in
fcompl
movsb
or
iret
int
mov
mov
je
mov
cmpsb
sbb
lret
sub
div
dec
xchg
fucom
notb
jo
mov
das
pop
jmp
jmp
mov
imul
iret
out
fadd
leave
cmp
and
push
das
sub
faddl
imul
xchg
xlat
jmp
jbe
enter
fcoml
aas
jmp
xchg
sbb
mov
jge
aaa
mov
and
iret
pop
popf
aam
sub
lock
push
lret
lods
adc
outsl
jmp
fldenv
pop
test
sbb
sbb
aam
fldcw
ret
out
test
ljmp
popf
lock
mov
mov
push
cmpsb
test
inc
lret
rclb
jmp
mov
mov
insl
sbb
xor
or
popf
int3
push
add
pop
lret
test
inc
pop
mov
shll
pop
test
sbb
sbb
aam
fnstcw
out
pop
dec
pop
stos
fcom
sub
mov
mov
enter
pop
scas
das
inc
jmp
int
cmpsl
push
fisttpll
inc
imul
shl
sub
ret
sub
fwait
cmpsl
fs
mov
je
mov
jecxz
sbb
mov
int3
aam
sub
out
fdivrl
leave
add
das
arpl
gs
or
stos
xor
dec
faddl
sbb
ljmp
adc
mov
rcrb
aam
sbb
das
pop
jmp
lea
pop
mov
jne
aas
imul
lea
fwait
fs
push
or
loop
jmp
sbb
push
cmc
mov
aad
pop
adc
lock
out
fsubl
leave
sbb
roll
into
jge
xor
push
fiadds
sbb
ljmp
add
lea
pop
jnp
les
sbb
call
orl
cmp
insb
adc
xlat
sub
mov
cmp
push
jmp
std
gs
leave
mov
mov
scas
insb
paddq
fldenv
sub
out
fdivr
rorb
dec
pop
scas
shrb
fiadds
push
leave
test
inc
mov
push
lods
mov
cmp
sbb
jmp
dec
inc
pop
es
fwait
cmpsl
fs
mov
je
mov
das
pop
jmp
icebp
gs
mov
sbb
dec
out
aam
flds
sub
out
subb
into
jge
xor
fimull
fmull
in
sbb
mov
mov
sbb
hlt
adc
and
sbb
gs
pop
inc
andb
jmp
push
or
hlt
push
sbb
inc
cmpsb
mov
adc
pop
jmp
mov
jnp
orl
or
aam
fimuls
xor
mov
daa
je
mov
mov
mov
leave
mov
jg
iret
aad
pop
imul
jl
test
cmpsb
adc
lret
and
iret
pop
xor
jmp
push
inc
adc
fmull
insb
adc
gs
sbb
mov
aam
sbb
call
fdivl
leave
or
fildll
jge
xor
pusha
rorl
imul
mov
enter
pop
cmpsl
das
dec
jmp
int
mov
mov
ja
lea
fldcw
sub
out
test
fsubs
mov
je
mov
into
xchg
or
iret
cmc
pushf
mov
xlat
aad
pop
mov
add
add
fucomi
and
gs
pop
inc
andb
jl
cld
push
shll
das
cli
aam
subl
mov
inc
pop
mov
frstor
pop
lods
mov
test
sbb
aam
fnstenv
sub
jmp
insl
ljmp
xor
mov
mov
push
jmp
stc
gs
int
mov
imul
ret
or
outsb
es
jmp
pop
adc
xchg
js
push
push
sbb
mov
fcom
adc
in
sub
out
fsubrl
leave
adc
xlat
or
jno
cmp
inc
scas
sub
push
out
pop
das
xchg
call
push
adc
xchg
scas
mov
aam
sub
out
fdivrl
leave
add
sub
into
popa
pushf
or
stos
cmp
sub
push
push
sub
repz
movsb
aam
fnstenv
leavew
fmull
adc
test
popa
mov
jge
cmpsl
dec
imul
mov
lock
mov
out
fdivrl
rorb
mov
imul
js
lea
cmpsb
sbb
sti
pop
xor
jmp
dec
mov
dec
aam
ficomps
in
fdivrl
pushf
iret
in
mov
stos
mov
mov
sbb
cld
adc
fucomip
and
cmp
daa
push
fcompl
hlt
sarl
pushf
xlat
in
mov
pop
imul
adc
add
cld
lea
pop
popf
mov
insl
sbb
xor
enter
popf
enter
clc
xlat
add
nop
pop
pop
lret
pushf
adc
jnp
aad
pop
pop
movsl
mov
sbb
insb
paddq
fldenv
sub
out
mov
jecxz
pop
das
xchg
call
pop
jne
jecxz
sbb
fld
sub
fcomp
push
leave
call
sbbl
xor
sti
leave
dec
je
and
scas
les
fiadds
fcoml
movsb
or
iret
rcrl
test
cmpsb
or
lret
sbb
jmp
push
mov
push
aam
fisubrs
and
subb
push
leave
mov
in
pop
add
cld
adc
and
sbb
pop
pop
jge
xor
les
imul
push
add
bound
mov
sub
fcomp
push
leave
call
mov
jne
cmp
inc
call
and
mov
enter
pop
stos
das
inc
jmp
int
cmpsl
push
fisttpll
inc
imul
ret
or
sub
mov
je
mov
push
icebp
mov
movsl
scas
dec
repz
flds
sub
out
leave
and
cmp
inc
fwait
sub
push
out
pop
das
xchg
call
push
or
bound
mov
sub
push
leave
lock
imul
pushf
adc
insl
stos
add
jge
xor
jb
push
imul
jl
mov
das
mov
adcl
mov
aad
pop
imul
sub
adc
fcmove
and
lret
aas
into
inc
lahf
sub
je
aam
subl
mov
push
lret
mov
jg
das
imul
mov
mov
popf
sbb
add
aad
aas
pop
popf
shrb
stos
cld
xlat
add
pop
cmpsb
mov
adc
outsl
jmp
movsl
gs
pop
mov
js
sbbl
fnstenv
mul
dec
jg
addr16
and
scas
cld
adc
fimuls
dec
leave
mov
jnp
iret
aad
pop
imul
jl
test
cmpsb
or
lret
sbb
ret
ljmp
int
xlat
in
in
cmpsb
jmp
dec
mov
out
jno
test
xor
jp
cmp
pop
daa
adc
dec
cmpl
dec
inc
dec
mov
dec
subl
adc
in
js
jmp
ds
rcll
and
mov
jl
and
out
test
repz
test
out
lods
jne
out
mov
imul
outsb
icebp
ljmp
jg
ds
mov
mov
test
dec
add
mov
out
xor
or
jl
stos
les
mov
jb
inc
mov
push
mov
fisubrs
sub
js
xor
push
mov
mov
cwtl
sbbl
clc
dec
add
adc
out
out
cmp
jnp
pop
enter
cli
sar
sub
mov
mov
inc
negb
mov
lods
iret
and
xchg
orl
out
mov
mov
popf
adc
test
mov
mov
jno
dec
push
push
add
imul
xchg
in
mov
pop
adc
lret
icebp
or
ror
stc
daa
jbe
dec
or
test
in
lahf
ret
in
cltd
scas
push
mov
pop
roll
inc
xchg
push
cmc
andb
inc
cmpl
sahf
push
mov
xchg
mov
cli
out
push
cmp
xor
sarl
fnstcw
aas
sub
add
and
das
imul
adc
sub
mov
test
gs
mov
jecxz
fsubrs
in
mov
fildll
inc
test
cmpsb
popf
popf
inc
nop
inc
dec
sub
inc
fnsave
sti
add
out
inc
ret
lea
mov
ss
rcr
je
out
xor
mov
imul
call
addr16
vsubss
jae
mov
jge
jecxz
lret
imul
out
mov
scas
mov
ret
mov
les
jne
cmpb
ljmp
push
jl
stos
lock
popa
push
cmc
inc
repz
movsb
mov
sbb
into
push
test
shlb
push
dec
cmpsl
and
sub
pop
mov
add
pop
js
notl
mov
scas
sbb
imul
sbb
pushf
pop
pop
jp
insb
or
loop
cmpsl
popf
xchg
xor
fisubs
fsubl
mov
pushf
js
pop
hlt
dec
insl
lret
xlat
fdivrs
push
jbe
mov
movsl
inc
or
xchg
ror
xor
addr16
pop
mov
and
in
sub
scas
and
int
mov
and
dec
cmc
jl
dec
sub
insl
popf
xchg
mov
xchg
mov
and
cmpsl
sbbl
fnstsw
cltd
mov
test
mov
test
jmp
scas
adc
mov
jmp
pop
daa
lods
pop
jmp
cmp
xchg
sbb
shlb
lods
out
mov
repnz
sbb
shlb
test
mov
js
fcomps
scas
jecxz,pt
rcl
cs
add
xor
test
pop
cmp
adc
std
mov
js
out
xchg
pop
add
ficompl
pushf
enter
xor
dec
fbstp
test
jo
push
repz
mov
daa
push
cmp
sub
and
out
arpl
sahf
mov
sub
jecxz
adc
push
cli
fiaddl
push
lock
adc
cmp
dec
push
sbbl
mov
cmpsb
hlt
push
and
js
int3
std
xor
jmp
loopne
and
jl
test
mov
ffree
and
fisubrs
mov
pop
std
add
jge
loop
fdivrp
dec
dec
dec
ljmp
mov
sti
adc
fcomip
lcall
out
loopne
dec
or
sbb
push
cwtl
push
daa
push
xor
out
movsb
adc
testl
or
push
repnz
call
out
dec
dec
lret
inc
les
jl
and
xorb
aam
dec
add
fldenv
cmp
dec
jmp
test
das
fwait
insl
popf
jge
ficomps
cmpl
dec
cmp
iret
mov
pop
mov
adc
dec
inc
dec
outsb
lock
fisttpll
pop
sbb
cmpsb
sbb
cmp
dec
imul
fbstp
dec
cmp
pop
or
ret
fisubs
shll
inc
dec
fwait
pop
popf
aaa
rcrl
push
mov
cld
repz
jmp
dec
negl
cmpsl
loop
jns
aam
jp
fidivs
or
xor
mov
and
jae
dec
mov
mov
jl
arpl
movsl
jl
jmp
mov
mov
inc
pop
fidivrl
sbb
cld
rol
fisubs
inc
push
cli
xchg
loop
dec
in
outsl
pop
mov
lcall
lds
xchg
lcall
adc
push
cmpsb
loop
inc
loopne
pop
pop
push
sar
or
mov
cmp
adc
mov
and
movsl
push
leave
mov
fcom
cmc
aam
mov
cmp
lcall
jecxz
pushf
push
shlb
inc
push
pop
jmp
push
push
lds
pop
out
dec
aaa
pop
jmp
scas
loop
jbe
jnp
jecxz
fcomi
dec
insl
repnz
mov
stc
pop
mov
mov
jg
out
push
hlt
xchg
sar
jb
sbb
adc
push
fdivrl
ss
push
pop
imul
dec
daa
dec
incb
mov
rorl
pop
sub
addr16
jmp
xchg
adc
fistpll
pop
js
jbe
scas
xchg
mov
aas
test
sub
dec
repz
or
cs
jl
and
mov
in
lcall
mov
lods
mov
jle
sub
xlat
add
pop
jecxz
pop
dec
add
jmp
mov
or
adc
push
or
push
mov
mov
sti
lds
xchg
pop
ret
jb
fadds
xchg
ret
inc
push
enter
pop
jmp
aaa
jge
inc
into
fiaddl
cmpsl
lods
ds
test
and
inc
dec
leave
push
sbb
and
stc
iret
jle
ljmp
push
icebp
or
hlt
xchg
test
mov
pop
and
lahf
and
clc
mov
xchg
mov
pop
inc
mov
xor
or
mov
mov
add
sbb
shll
mov
fbld
idivb
push
sbb
into
jno
ds
je
pop
mov
push
loopne
xor
out
push
xlat
xor
jg
sbb
icebp
mov
pop
dec
addr16
scas
dec
outsl
push
orps
and
jnp
sbb
out
xrelease
and
stos
mov
jle
scas
shrl
ja
out
mov
loop
jbe
test
sahf
in
or
and
xchg
subb
mov
cmpsl
loop
push
jmp
jle
pop
fcoms
cld
movsb
push
dec
xchg
jne
xlat
shrl
push
scas
jbe
in
or
hlt
cltd
insb
daa
mov
fbstp
sub
out
jmp
sub
cld
mov
push
push
lods
mov
daa
mov
pop
jecxz
add
mov
mov
xchg
aas
xlat
sub
sti
pop
int
adc
mov
hlt
mov
test
push
inc
imul
mov
fsubrs
push
pop
jecxz
pusha
aam
cmpsb
roll
mov
adc
xor
imull
push
mov
jmp
iret
fcompl
cmpl
and
ljmp
hlt
mov
pop
inc
sti
lahf
sub
mov
ud1
mov
ret
rcrl
jp
cmp
adc
movsb
push
jns
mov
jl,pt
and
rcr
fistps
cwtl
and
pop
scas
mov
fisubs
mov
scas
mov
rcrl
sarb
lds
subl
cmpsl
test
nop
fmuls
scas
scas
lds
mov
enter
pop
dec
pop
inc
stos
lods
pusha
loop
pop
out
pop
mov
cmp
xchg
xor
out
mov
mov
fistpll
dec
sbb
cmc
adc
inc
call
test
ret
xchg
or
dec
fs
cmp
leave
ljmp
jmp
leave
insl
decb
push
jne
sbb
loop
cmpsl
les
mov
cmpsb
sbb
loop
push
mov
filds
dec
mov
mov
push
ret
and
fisttps
sub
mov
sbb
mov
inc
mov
push
lcall
aam
pushf
pop
xlat
out
mov
les
jae
stos
mov
push
enter
repnz
pop
js
sub
or
test
pop
daa
mov
sub
and
push
jns
mov
out
mov
dec
in
xchg
cmp
stos
dec
repnz
and
icebp
jmp
mov
lahf
and
repnz
dec
xlat
and
scas
andl
sub
push
iret
aas
lock
test
ljmp
mov
cmp
sbb
mov
mov
or
mov
add
xchg
ljmp
fistpll
pop
loopw
xchg
cmp
inc
mov
icebp
mov
dec
push
rcl
cwtl
sub
dec
das
pop
ret
dec
mov
idivb
popf
pop
flds
leave
in
int
xor
out
sbbb
xchg
inc
xor
push
addl
mov
imul
lcall
push
jg
je
js
cmc
repnz
out
dec
pop
mov
fidivrl
jecxz
jmp
or
dec
lods
adc
dec
mov
jg
push
loopne
mov
pop
jmp
cmc
pop
mov
lods
push
dec
mov
mov
push
adc
cmp
loope
ficomps
cltd
in
adcl
pop
jmp
stos
jne
adc
push
mov
or
xlat
xchg
test
pusha
mov
inc
test
pop
jo
cmpsl
dec
push
inc
mov
mov
xchg
xchg
mov
bnd
mov
dec
push
push
push
mov
mov
out
jg
loopne
dec
es
sbb
in
pop
sahf
xchg
out
ficoms
aad
fdivl
sbb
mov
dec
cmp
or
scas
push
xchg
pop
jecxz
add
xor
lds
jecxz
mov
popf
mov
fistpll
cmpsl
fcompl
dec
mov
stos
pop
inc
mov
mov
and
mov
jp
dec
jmp
in
jp,pt
mov
outsl
dec
push
mov
ffree
mov
sbb
mov
xchg
jae
push
mov
es
sarl
dec
pusha
mov
mov
loop
mov
and
repnz
and
in
pop
jmp
out
ds
push
fbstp
cld
or
jb
and
sahf
pop
mov
fsubrp
aam
and
outsl
mov
xor
sub
stos
pop
jecxz
les
sub
popf
jne
mov
rep
sti
scas
lcall
and
cmp
out
sub
daa
push
aad
daa
cmpsb
rclb
inc
pop
aaa
jmp
iret
and
fistps
dec
movsb
sub
pop
jg
xor
cmp
es
jge
popa
test
xchg
jmp
out
packuswb
push
adc
mov
jo
aam
jb
mov
hlt
mov
out
jmp
test
or
sbb
fildll
andl
call
pop
arpl
pop
jle
xchg
leave
daa
data16
popf
dec
out
mov
iret
mov
push
ret
adc
rcl
cmp
ds
out
mov
stc
or
aas
sub
pop
ss
push
pop
outsl
int3
adc
xchg
pop
pop
inc
incb
ljmp
stos
mov
mov
mov
sarb
jg
scas
mov
ja
push
cld
test
mov
aad
inc
dec
popf
mov
test
pop
lock
jno
xchg
insl
test
mov
sub
or
sub
pop
daa
xchg
cmc
pop
stc
and
incl
mov
cmp
or
ja
ret
sub
push
stc
mov
jae
xor
mov
sti
jnp
mov
loope
popa
daa
xchg
insl
inc
mov
adc
icebp
dec
mov
daa
jno
mov
loop
ja
mov
mov
pop
jg
fstpt
push
fildll
cmc
push
roll
jg
pop
repz
fcmovnbe
aam
mov
adc
xchg
or
xchg
add
enter
rcl
inc
lret
pushf
and
stos
cmpsl
popf
popa
clc
add
fdivrp
pop
dec
inc
movsl
add
dec
dec
mov
push
aas
xchg
notl
ljmp
push
dec
std
push
xor
scas
push
jmp
sbb
sahf
inc
iret
push
inc
jnp
dec
and
stos
out
cltd
mov
arpl
test
mov
sub
lret
clc
dec
jp
lods
popf
sbb
pop
or
push
xchg
popf
xchg
mov
cmpsb
aam
imul
adc
pop
sahf
aaa
cmp
pop
push
and
scas
pop
rcrl
scas
mov
mov
movb
or
inc
ljmp
js
movsl
adc
cmpsl
or
dec
mov
pop
push
int
mov
adc
fwait
leave
push
add
and
or
adc
and
adc
pushf
cld
jmp
fstl
jecxz
sub
ja
mov
dec
fisttps
popa
rcr
sub
je
icebp
adc
sbb
mov
test
mov
xchg
cwtl
push
xchg
lahf
push
adc
iret
jno
rorl
xchg
sub
push
lds
mov
lock
add
pop
and
ret
mov
out
and
inc
lcall
mov
mov
sub
mov
mov
push
loop
push
enter
cmc
repz
fwait
jge
ljmp
loop
mov
xlat
lock
and
mov
jmp
pop
mov
pop
xchg
push
sbb
mov
pop
js
inc
push
mov
in
outsb
fs
ds
push
fs
cmc
sbb
push
lret
pop
jmp
dec
outsb
loopne
popf
sub
daa
push
ljmp
xor
inc
pop
push
or
pop
clc
dec
pop
fbstp
pop
dec
sbb
push
repz
cmp
dec
add
or
mov
push
sbb
shrl
push
adc
or
pop
or
fucomi
jmp
fistpl
rolb
pushf
xor
cltd
aam
mov
and
and
cmc
cmp
scas
push
add
push
add
pop
mov
jp,pn
push
lods
push
adc
mov
or
xor
dec
mov
aam
dec
dec
mov
push
ss
pop
mov
jp
lds
pop
lret
sbb
adc
push
ds
cltd
add
xchg
adcb
filds
sbb
pop
fs
or
ret
pop
and
insb
push
xchg
mov
jg
roll
and
lock
into
lret
push
call
repnz
fists
fs
cmp
std
jne
jns
jl
pop
inc
aaa
mov
mov
outsl
pop
push
fdivs
addr16
and
cwtl
out
cmp
xchg
xor
dec
xchg
jo
lcall
and
sar
mov
loop
push
jp
xchg
mov
call
jmp
lcall
icebp
adc
movsl
mov
jmp
dec
and
and
inc
inc
fldenv
mov
and
mov
sbb
push
sbb
dec
dec
cmpsb
add
adc
xlat
lahf
sbb
and
out
ror
lock
pop
shrl
jp,pt
mov
shrb
cmp
leave
mov
adc
pop
idivl
mov
cmpsl
xchg
mov
sub
mov
ret
pop
sahf
and
mov
add
xchg
addr16
test
daa
call
cli
jbe
imul
mov
fmull
ja
push
dec
cmp
sbb
adc
sbbb
out
lret
sub
cmc
mov
lahf
mov
mov
pop
add
or
dec
ret
stos
repz
and
pop
sub
jle
mov
ljmp
push
dec
fisttpl
adc
lahf
cs
sbb
call
push
inc
loope
lahf
sbb
in
sbb
sbb
dec
adc
repz
adc
adc
insl
popa
cmpsb
lcall
rcrb
test
popa
fsubrl
pop
shlb
out
push
adc
xchg
jp
aam
or
pop
mov
or
xchg
adc
and
xor
leave
xchg
sti
pop
lahf
daa
fnsave
push
out
lods
sbb
enter
push
lcall
cltd
push
jns
mov
jmp
pop
dec
mov
rcrl
fistpll
out
out
inc
cs
mov
mov
lret
pop
mov
and
scas
sub
xlat
les
in
mov
dec
xchg
push
xor
xacquire
cmpb
xchg
mov
adc
push
pop
inc
and
add
mov
outsl
mov
xchg
and
int
xor
iret
jbe
cmc
lret
fbld
cmp
filds
xchg
and
jnp
mov
xor
addr16
mov
mov
orl
inc
fldenv
ss
jno
out
lcall
push
std
mov
dec
mov
and
jg
mov
out
xchg
add
out
cwtl
sbb
rclb
mov
mov
repz
or
jae
adcb
cmpl
cltd
and
icebp
jg
push
cli
mov
cmc
arpl
sub
and
sbb
fildll
sti
dec
push
cmpsb
jl
xchg
add
popf
data16
dec
ljmp
into
fbstp
jne
lods
and
xor
jecxz
pop
sub
mov
cmp
in
dec
outsl
lock
dec
xchg
jne
lcallw
cli
inc
pop
iret
add
loop
out
imul
repz
xchg
cmp
mov
paddsb
xchg
hlt
gs
push
dec
in
aam
icebp
sbb
and
inc
fcomi
in
pop
jecxz
pop
xchg
addr16
mov
dec
pop
inc
mov
cmc
inc
push
push
les
lods
flds
movsl
mov
scas
sbb
imul
pop
jmp
pop
sbb
je
jnp
jl
insb
mov
mov
add
imul
mov
adc
and
jmp
dec
lahf
and
xor
pushf
lock
dec
lcall
and
mov
cmp
sbb
lods
jge
inc
movsb
pop
jmp
add
rol
add
push
xchg
sub
hlt
mov
test
mov
fistl
cmpl
sub
stos
mov
rcrb
fisttpll
addr16
add
mov
test
gs
cmp
loop,pt
mov
xchg
pop
stos
push
dec
sbbl
pop
cwtl
mov
mov
and
push
lret
hlt
adc
shll
mov
loop
shl
aas
scas
mov
lods
mov
jbe
fildll
ljmp
aas
jp
cmp
outsb
dec
dec
or
aaa
vsqrtpd
popl
push
icebp
fidivrs
into
in
pop
fcmovu
lods
lods
and
xor
int
sbbb
lret
sub
cld
mov
xor
jno
popf
push
lcall
mov
mov
repz
cld
xor
sub
mov
cmc
pop
pusha
daa
or
mov
out
ljmp
lahf
fwait
pop
insl
xchg
push
mov
andl
jle
push
cmpb
push
out
add
pop
pop
fistpll
popf
aas
mov
sbb
ret
mov
popa
inc
dec
dec
jle
es
pop
xor
pop
push
mov
xorb
ficompl
add
inc
std
mov
jns
jecxz
call
fcoms
test
and
test
or
mov
stos
sbb
aaa
sbb
xchg
movsb
shl
sub
ds
push
les
pushf
stc
push
sub
outsb
pop
repz
iret
js
scas
test
lods
loop
xchg
mov
aaa
faddp
sbb
movsb
jns
xor
adc
mov
adc
lods
adc
cltd
in
and
movsl
jmp
lods
mov
pop
mov
daa
hlt
or
mov
insl
jne
test
or
pop
pop
loope
les
xorl
popa
scas
ds
fwait
pusha
xchg
arpl
xchg
in
sub
cmp
mov
sbb
data16
ret
lds
js
sbb
sbb
xchg
lcall
scas
in
inc
mov
pushf
xchg
jle
addr16
hlt
nop
stos
jnp
pop
test
mov
fdivr
pushf
and
mov
mov
sar
les
xor
mov
and
pop
js
mov
mov
pop
jl
data16
ficoms
sub
sahf
jle
out
cld
pop
fwait
pushf
in
ss
pop
push
hlt
push
pop
dec
sub
mov
rcll
leave
lcall
pop
in
inc
xchg
mov
ret
dec
push
sarl
mov
ds
test
adc
inc
jmp
pop
cltd
push
inc
pop
mov
inc
fstps
clc
pop
pushl
mov
jmp
and
loopne
sbb
xor
jbe
mov
ficomps
mov
add
loop
mov
fwait
xchg
jno
mov
and
mov
cmp
cmp
dec
std
inc
xchg
icebp
mov
sub
mov
ffree
loopne
mov
ret
push
sub
dec
sub
xorl
addb
push
mov
and
xchg
out
lds
movsb
lahf
and
insb
dec
out
mov
jle
cmp
sahf
fimull
sbb
dec
imul
lret
mov
sbb
sbb
fldenv
xchg
jno
into
cmp
jg
inc
xlat
sub
mov
jnp
adc
fwait
xor
push
lahf
leave
jno
out
in
mulb
sbb
mov
notl
movsl
in
and
into
cs
lret
lea
outsl
lods
dec
jecxz
fs
fiadds
hlt
push
xor
mov
sbb
add
mov
add
inc
pop
dec
inc
out
dec
int
lret
sbb
sub
inc
inc
cld
stos
dec
jmp
cs
paddsb
dec
cmc
push
cs
sbb
lock
dec
sbb
inc
shll
inc
cs
out
bound
js
pop
xchg
lods
int
jmp
stc
fldenv
push
int
hlt
jp
add
sub
cltd
dec
in
scas
hlt
bound
int
cmc
push
das
insl
push
sbb
lret
insl
gs
lcall
sub
orl
sti
inc
push
sbb
icebp
daa
cmp
dec
loope
inc
out
enter
iret
call
int3
cwtl
xor
stc
jle
or
lret
fistpl
cmp
jle
mov
sbb
push
fbstp
into
lret
xchg
cmpsl
int
inc
cmp
jecxz
jno
pop
dec
add
add
add
gs
jle
pop
icebp
addb
adcl
rep
loopne
adc
test
adc
mov
pop
repz
sahf
inc
sbb
ret
aam
and
sbb
aad
aad
mov
rcl
add
and
out
mov
jge
fnsave
mov
jno
es
out
cmp
pop
or
dec
xor
js
subl
xor
push
iret
pop
imul
pop
mov
data16
pop
out
shlb
dec
imul
into
out
and
dec
mov
roll
test
cmp
lods
adc
or
loopne
movsl
xchg
aaa
test
jns
fsubs
sbb
sti
call
adc
gs
push
les
cmp
push
adc
xchg
xor
mov
jo
xor
dec
sbb
push
fucomi
mov
pop
inc
jmp
inc
and
aad
movsl
fcompl
ja
inc
pop
ret
aad
insl
shrb
xchg
sub
stos
and
jnp
test
cmc
mov
add
dec
pop
sub
dec
repz
in
inc
out
das
dec
jb
fists
sub
and
adc
repz
jno
sub
inc
out
icebp
inc
cld
xchg
ss
dec
mov
dec
sbb
into
in
insb
mov
sub
mov
pop
shlb
push
lods
or
dec
or
or
fcomp
mov
out
dec
xor
mov
and
dec
sub
lret
mov
pop
out
in
dec
and
push
movsl
mov
sub
pop
dec
fcoml
and
ret
stos
negb
in
pop
into
pop
shlb
outsl
jmp
int
rclb
mov
mov
sbb
iret
movsb
aam
ficomps
jecxz
mov
jecxz
iret
dec
popf
hlt
push
pop
cld
mov
xchg
pop
pop
das
lahf
aaa
pop
push
xlat
mov
ficoms
mov
jns
fisubrl
push
or
pop
mov
and
repnz
lea
pop
xor
daa
push
pop
lret
movsb
jno
lahf
fdivs
subl
pop
dec
push
sub
xlat
and
jmp
enter
or
in
arpl
pop
add
daa
cltd
push
pop
push
pop
fisubrs
out
dec
pop
or
out
or
into
lahf
jbe
pop
push
pop
push
cmpsl
and
stos
push
cwtl
lahf
roll
or
iret
call
dec
stos
adcb
fldcw
into
leave
stos
jbe
lret
outsl
pop
adc
stos
lods
jl
jmp
inc
inc
arpl
xchg
leave
sbb
push
out
das
add
mov
jg
jecxz
rorl
jmp
shrb
repz
bound
fists
neg
push
popf
mov
mov
punpckldq
pop
out
fistps
adc
adc
das
pop
pop
jns
pop
shrb
fsubrs
test
lods
adc
sti
pop
sub
mov
mov
scas
sub
cwtl
pop
or
dec
dec
int3
mov
xchg
loop
jnp
aaa
flds
mov
mov
das
ds
jb
jp
loopne
ss
mov
sbb
xchg
mov
sub
push
sbb
dec
push
rcll
rclb
mov
fcoml
sbb
cld
loope
cwtl
adc
subl
ljmp
js
sahf
mov
lahf
jne
cmpsb
lret
mov
jge
dec
inc
mulb
cmp
pop
xchg
dec
scas
out
pop
fwait
mov
mov
test
addr16
std
hlt
daa
lret
andl
push
enter
pop
mov
sub
repnz
push
adc
xor
mov
jp
std
xchg
adc
inc
sub
rcl
adc
mov
push
dec
data16
outsl
mov
das
aas
adcb
xor
mov
aad
insb
jbe
int
sbb
xchg
repz
bnd
repnz
shll
xor
das
lret
negb
jg
sti
mov
inc
pusha
pusha
or
xor
add
mov
cmp
outsl
scas
push
scas
les
aaa
cmc
cltd
iret
push
mov
sub
stos
fidivrs
cmp
int
mov
call
repz
cmc
lods
xchg
or
or
ss
push
out
lret
push
mov
adc
iret
inc
fadds
sti
cld
and
or
adc
inc
incb
jge
iret
add
push
mov
inc
push
iret
sbb
push
cmpsb
inc
inc
xlat
test
fdivr
cmp
dec
prefetchwt1
or
sub
ficoml
imul
fwait
js
sub
in
mov
mov
sbb
inc
jb
test
rcrb
into
stc
invd
sahf
xchg
and
xchg
pop
mov
jmp
imul
sub
mov
ljmp
hlt
or
das
jns
aaa
jmp
fadds
icebp
fists
in
outsb
ficoms
es
sub
and
insb
mov
pop
sub
push
mov
or
fcmovnbe
cmpsl
add
jle
scas
inc
gs
mov
xor
mov
lahf
mov
cwtl
push
ja
add
jb
xor
sbbl
inc
scas
mov
and
push
jle
mov
les
repnz
sub
shrl
fwait
add
xchg
cwtl
dec
cli
outsl
sub
int3
mov
inc
pop
lcall
lea
repz
sub
push
jg
stos
push
ljmp
das
sbb
push
xchg
jg
jne
movsl
ljmp
sub
mov
xor
ds
rcll
jae,pn
xor
das
sahf
add
movsb
add
insb
das
out
mov
sub
pop
adc
lahf
mov
stos
or
mov
sbb
dec
test
jno
das
mov
xchg
popf
fdivl
into
pop
adc
hlt
push
jmp
or
cmovns
inc
pop
adc
inc
or
lods
cld
jb
mov
lcall
rolb
movsl
nop
movsl
stc
shr
xchg
ret
clc
addr16
sbb
jg
mov
enter
or
mov
mov
cs
shl
int3
dec
fmuls
xchg
in
mov
inc
mulb
dec
jbe
inc
inc
imul
jno
inc
lret
and
sub
ret
shl
lret
mov
