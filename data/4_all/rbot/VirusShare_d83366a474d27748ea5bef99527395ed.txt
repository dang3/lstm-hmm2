push
call
mov
add
jmp
xchg
push
rolb
and
icebp
jl
pop
insl
jae
ret
mov
pop
jo
jb
push
inc
or
pop
fildll
cmp
inc
jl,pn
mov
and
je
enter
out
inc
jo
test
clc
xchg
adc
daa
jno
dec
jg
out
pop
daa
sub
cmp
cmp
mov
mov
lods
test
sub
lods
fwait
mov
imul
xor
or
jmp
scas
and
mov
fcmovnb
addr16
or
inc
sbbb
or
js
jle
outsl
pop
rcll
add
sbb
jecxz
cld
stos
mov
lcall
imul
jg
test
das
out
inc
push
out
pop
popf
xor
lock
pop
popa
push
mov
inc
shlb
out
roll
in
dec
cmp
jns
das
loope
push
shrb
dec
jbe
mov
test
sub
dec
test
mov
test
sub
test
mov
jp
sub
sub
in
cmpsb
pushf
ds
arpl
jp
fwait
nop
lahf
stos
mov
daa
xchg
xchg
push
adc
shlb
mov
in
ja
scas
sahf
clc
fdivl
mov
in
jae
scas
lcall
add
jg
ss
xchg
xorl
and
mov
data16
pop
sub
and
inc
xchg
inc
aad
xor
lods
les
sub
je
in
cld
sub
cmp
xchg
dec
pop
jb
iret
push
push
repz
jl
sub
cmp
push
in
sub
hlt
pop
mov
mov
pusha
or
adc
xchg
adc
hlt
nop
xlat
xor
insb
add
or
movsb
mov
out
les
inc
sub
xchg
bound
stc
pop
or
insl
popa
xchg
cmc
mov
jecxz
or
ljmp
out
push
push
pusha
sub
xor
shr
cld
test
mov
daa
in
or
in
shrl
or
icebp
or
jnp
mov
dec
imul
jb
mov
adc
xchg
fidivl
jns
mov
sub
jmp
test
and
push
shl
repz
dec
pusha
arpl
sbb
mov
mov
inc
int3
sub
data16
std
push
inc
cmp
out
mov
mov
add
mov
testl
ficoml
fstl
cmp
les
in
gs
lret
and
xchg
daa
pop
or
addr16
cli
dec
sbb
movsb
pop
stos
pop
in
mov
cmp
lahf
rcr
stos
lahf
aas
pushf
pop
dec
iret
lahf
fisubs
cmp
fs
aas
inc
popf
xlat
cmp
mov
cmp
xchg
pop
loope
and
xchg
mov
xlat
test
add
push
std
ljmp
sbb
xchg
cs
jbe
and
mov
cmc
int
testb
das
sbb
inc
push
ds
lock
inc
shlb
pop
addr16
test
dec
and
mov
sbb
push
arpl
out
inc
loopne
xchg
out
movsb
xor
test
ja
and
sbb
mov
fs
fstpt
popa
arpl
popa
pop
push
and
pop
data16
push
dec
xchg
popa
mov
push
sbb
jne
xor
pop
das
jne
and
cmp
ljmp
push
cltd
ss
ret
pushf
mov
dec
cmp
sbb
jl
pop
or
inc
sbb
imul
push
mov
scas
repz
stos
adcl
or
mov
ja
dec
inc
and
aas
jl
push
xchg
cmp
and
lret
das
mov
insl
push
loopne
loopne
rcrb
fcomps
leave
jl
mov
popa
ret
xor
pop
iret
pusha
hlt
insb
cwtl
movsl
loopne
push
mov
fisttpl
fs
fwait
inc
cwtl
xor
fimuls
adc
dec
mov
mov
int
les
stos
js
dec
stos
inc
iret
sbb
add
and
test
imul
push
sbb
popa
int3
pop
xor
jl
gs
jge
int
xchg
or
scas
icebp
jp
mov
add
sahf
aam
cmp
jne
das
test
lock
sbb
pop
pop
sub
call
sub
or
dec
scas
sub
cmpsb
stc
jecxz
sahf
cli
mov
sub
daa
jl
cmp
les
lods
test
ss
mov
mov
or
mov
jge
insb
pusha
mov
mov
test
sub
push
sbb
aad
das
jne
xor
and
popa
or
ljmp
cmpsl
cld
loop
dec
enter
ljmp
ds
push
mov
cmpsl
test
inc
pop
shl
push
aaa
push
inc
dec
test
mov
pop
ror
pushf
cmp
clc
or
roll
jne
jl
ss
in
sbb
push
mov
jecxz
jmp
and
cmp
jbe
aas
xor
sbb
insl
adc
push
push
outsb
fs
filds
outsb
pop
shrl
adc
fsubrl
mov
loopne
sbb
xor
stos
repz
mov
or
cwtl
scas
clc
mov
loopne
xor
scas
sbb
and
fidivrs
and
jmp
sbb
xor
push
inc
lods
sbb
sbb
push
ret
enter
jbe
jmp
mov
sbb
jo
out
outsb
stos
pusha
jge
sub
les
pop
aaa
ds
push
dec
mov
and
push
out
in
pop
jne
je
pushf
ret
scas
and
in
or
pushf
lods
inc
out
jne
cld
push
sbb
mov
into
ss
ljmp
arpl
rclb
cmp
pop
out
xchg
pusha
jp
sub
sahf
jmp
add
out
insl
sbbb
mov
dec
ds
xor
ret
push
lahf
cltd
and
das
inc
out
mov
rorl
je
ljmp
mov
loope
fmull
add
sbb
jle
or
out
jo
inc
push
sbb
in
xchg
and
mov
push
pushf
lcall
or
arpl
inc
mov
or
cs
loopne
lock
jb
ds
push
pushf
add
mov
pminsw
or
jl
mov
test
dec
outsl
pop
ljmp
inc
and
clc
dec
int3
adc
popa
add
mov
and
push
aas
jo
rclb
inc
in
ret
enter
jo
call
aaa
outsl
out
ror
xchg
push
ret
ficoms
jno
mov
pop
in
addr16
dec
repnz
mov
jmp
js
int3
in
pop
mov
dec
lods
nop
insl
cmp
xchg
mov
out
fwait
mov
jge
push
or
popa
repnz
pop
ljmp
movsl
out
jne
push
mov
pop
pop
push
push
and
add
scas
dec
push
jmp
daa
dec
fdivl
in
ss
xor
inc
push
movsb
cmpsl
xor
mov
pop
add
mov
jge
mov
sbb
pop
pop
or
jle
in
cmp
or
fsubl
int3
add
fwait
aam
rolb
pop
jmp
insb
jo
lret
jae
sub
cs
cmpb
mov
pop
dec
or
jns
xor
sub
inc
jge
sti
fisubs
out
jg
sub
and
into
pop
mov
cmp
cwtl
cltd
sbb
or
rorb
fdivrl
push
push
popf
xchg
cmp
out
cmp
and
pushf
add
orl
dec
add
or
in
jmp
dec
pushf
push
pop
repz
sahf
adc
adc
hlt
insl
test
mov
movsb
mov
outsb
mov
loope
inc
in
push
loopne
movsb
sub
es
ss
andb
xor
mov
loopne
mov
sbb
test
das
call
xchg
or
adc
pushf
leave
sarb
add
cmp
enter
dec
adc
or
xlat
add
adc
push
mov
sub
or
cld
or
mov
dec
push
call
imul
fdivl
cs
aam
cmp
imul
rorb
mov
test
call
imul
or
insb
jbe
aam
add
xor
or
cmc
pop
push
adc
mov
sbb
dec
mov
inc
mov
sbb
data16
sbb
mov
jne
pop
aam
call
shll
enter
bound
sar
mov
ficoms
inc
adc
mov
lods
out
js
xor
mov
dec
or
push
setg
adc
pop
insl
lods
mov
subl
pop
inc
es
idiv
fdivrl
push
fmull
xchg
jl
mov
cmp
movsb
test
sti
lea
and
dec
or
xchg
push
mov
sbb
icebp
jns
mov
je
popl
pop
push
add
fcmovne
sub
mov
push
loopne
xchg
in
out
outsl
orl
or
es
pop
adc
cmp
mov
stos
adcb
nop
push
mov
add
hlt
xlat
fsts
das
popa
cmp
aas
popa
mov
in
sti
cmp
stc
adc
repnz
fsts
jg
add
or
jmp
push
or
inc
dec
shl
nop
adc
inc
das
mov
or
push
sar
insl
sahf
inc
adc
ja
std
dec
xor
cmp
push
dec
mov
cmp
mov
and
xchg
mov
fisubrl
rcl
lods
mov
out
ja
fbld
mov
xor
cmpsl
into
pop
or
pop
subb
xor
dec
das
incb
pop
cmc
sbb
sub
xor
stos
lock
jo
sbbb
je
pop
sbb
call
in
jmp
xchg
pop
jbe
in
icebp
outsb
push
aad
jno
or
arpl
jno
add
ljmp
mov
in
sub
insl
cmp
dec
pop
push
mov
outsb
push
ret
sbb
dec
sub
jo
leave
cmp
pop
es
jle
mov
es
jge
sub
aaa
mov
pop
cmp
mov
jno
movsb
adc
in
push
nop
lods
inc
mov
fs
cwtl
adc
out
aam
mov
adc
xchg
aam
inc
mov
pop
sahf
daa
rolb
cli
mov
jns
push
bound
pop
cltd
xor
push
jl
and
mov
xor
adc
xor
sahf
jo
pop
outsb
loopne
cmp
fwait
bound
push
mov
xor
mov
pop
fisubrs
or
es
xlat
into
mov
stos
repnz
cmp
jmp
sahf
jae
dec
push
cmp
jp
out
inc
sub
sub
jb
cmp
out
aas
dec
std
dec
stos
xchg
fistpll
or
mov
jmp
jl
pop
test
lret
subb
push
mov
stos
push
xor
mov
in
loope
aas
shl
push
and
xor
jge
xchg
shlb
sbb
mov
aaa
test
and
clc
mov
xchg
sbb
jl
xor
xchg
ja
jb
add
insl
mov
jbe
xchg
in
xor
and
dec
mov
imul
aas
jge
clc
jne
mov
inc
jle
orl
call
cmpsl
push
jg,pt
jp
pop
pop
gs
mov
ss
dec
out
inc
and
adc
fs
insb
out
sbb
pop
sub
aad
and
pop
pop
out
xor
mov
sarb
xchg
pop
and
push
sub
mov
pushf
xchg
xchg
mov
dec
out
and
pop
loop
insl
nop
in
sub
cltd
sbb
fwait
sub
push
xor
push
pop
out
sub
push
inc
out
leave
stos
sub
xchg
mov
enter
pusha
pop
jns
cmc
imul
popf
mov
add
mov
fs
out
mov
out
inc
jle
sub
xchg
xchg
fbld
pop
add
lcall
inc
rcrl
data16
xchg
dec
ja
adc
add
inc
sub
rorb
pop
ds
mov
mov
aaa
xchg
imul
in
jo
dec
sub
minps
adc
outsb
popa
xor
stos
in
pop
cmc
cmp
fistpll
and
repz
mov
test
pop
mov
pop
mov
popf
fidivrl
shll
adc
cli
popl
push
iret
add
imul
je
outsb
pushf
push
into
adc
das
mov
push
cmp
mov
lret
les
dec
and
enter
jo
xor
mov
cli
pop
inc
xchg
sahf
add
xchg
sbb
cmp
js
sti
adc
movl
rorb
in
pop
shr
out
jns
lods
sarb
push
add
add
dec
push
mov
jb
push
sub
push
sbb
insb
mov
repnz
dec
push
lods
ret
mov
or
loopne
or
std
sahf
sub
mov
inc
mov
mov
push
xchg
jecxz
push
dec
add
and
andb
fwait
push
push
jae
inc
adc
andl
addl
mov
dec
jmp
shlb
jl
cmp
lcall
jbe
roll
outsl
lret
xor
adc
xor
test
xor
cltd
pop
mov
inc
ja
lcall
cmp
enter
in
push
ret
ljmp
xchg
into
out
scas
adc
jmp
lds
adc
lods
push
add
outsb
mov
insb
int
imul
fcmovnu
or
push
jle
mov
mov
cmp
jp
xor
or
lcall
inc
or
inc
inc
jl
jne
sbb
das
xchg
movsl
rorb
out
push
cmp
lret
lcall
mov
jnp
fildl
rcll
stos
rolb
iret
inc
mov
sbb
xchg
popa
rol
push
fstps
aam
outsb
paddd
mov
sub
cmpsb
mov
std
scas
xor
dec
lds
data16
or
add
outsb
add
cmp
pop
cld
push
cmp
data16
inc
fmul
xor
jl
cmp
inc
imul
cmp
pop
movsl
sbb
pop
xchg
and
and
rcrl
mov
int3
cmpsl
int3
xor
cld
xchg
push
mov
jnp
and
ss
adc
lcall
ljmp
pop
jb
repnz
enter
adc
xchg
xor
pop
mov
mov
fimull
lret
loopne
ja
mov
popa
jecxz
jo
adc
cmp
jge
sub
iret
xor
dec
and
fnsave
jmp
pushf
jle
bound
negb
lahf
and
push
pop
and
push
rol
or
sub
mov
fmulp
pop
and
jecxz
sbb
jae
loop
jbe
mov
inc
pshufw
mov
mov
pop
jb
sahf
pusha
adc
mov
sub
aad
out
mov
sub
push
jle
cmp
mov
mov
aas
xchg
roll
xchg
icebp
lahf
push
or
mov
test
mov
jo
dec
and
shrl
test
out
mov
es
js
ja
std
mov
or
negb
cmpsb
lcall
dec
xchg
push
pop
lret
and
pop
jmp
negb
push
push
jl
int3
cmp
mov
dec
mov
push
sub
cmp
enter
out
jl
aam
in
outsb
outsb
rcl
insl
rolb
mov
pop
lret
stos
dec
movsl
fcomip
aaa
imul
call
xchg
je
adc
sbb
inc
lods
push
adc
outsl
add
andb
inc
jecxz
xchg
lret
pop
fdivl
jl
mov
test
cltd
lcall
inc
scas
mov
jl
dec
aas
pushf
arpl
add
mov
ds
cmp
lods
xchg
stc
les
dec
ljmp
fisubrs
mov
test
popa
adc
dec
pusha
sub
pop
jne
cld
and
aam
rcrl
cld
subb
shll
test
pop
cmc
cs
xor
mov
mov
lods
xchg
jnp
or
lods
xor
std
pusha
jl
push
stos
sub
jnp
cwtl
sub
pop
xchg
cwtl
dec
imul
jbe
pusha
imul
xchg
mov
jae
test
stc
jo
mov
icebp
fisubs
cmpsl
or
fistpl
dec
pop
je
loopne
pop
mov
pop
jle
add
mov
add
sub
add
pop
mov
mov
std
icebp
xor
add
pop
insb
push
int
sbb
icebp
stos
dec
xchg
cmc
lcall
adc
lds
das
in
and
xchg
xchg
movsb
fldenv
mov
mov
in
inc
movsb
pusha
out
sbb
out
sub
leave
fisttpl
mov
jne
push
repz
insb
and
push
adc
outsb
xchg
and
idivb
data16
mov
jge
lret
pop
fidivrs
mov
dec
inc
mov
out
xor
int
or
jbe
push
xor
xorl
test
cmp
gs
jo
xchg
or
mov
xor
mov
and
inc
cmp
test
pusha
and
aaa
jle
std
nop
aas
sub
xor
xor
mov
ds
incb
push
pop
jb
loop
enter
add
sarb
cmp
mov
and
inc
sbb
scas
movsb
cs
mov
push
sbb
dec
add
mov
mov
das
fs
inc
xchg
adc
cmp
addb
xchg
mov
shll
or
mov
imul
or
loope
insb
pop
mov
ficoml
and
cmp
jle
addr16
out
ljmp
loop
add
cli
cltd
jae
imul
jle
lock
push
cmp
push
dec
and
out
pushf
adc
adc
int
xchg
xor
jle
loope
ss
in
stos
js
movsb
mov
dec
jb
aas
shrb
jl
inc
push
adc
outsl
add
lock
fisttps
push
ja
stos
push
adc
imul
xchg
jp
sti
mov
and
mov
sub
filds
dec
rorl
mov
and
adc
push
inc
mov
inc
add
arpl
stos
sbb
addr16
pusha
cld
push
jle
jle
aas
push
cmp
and
push
sahf
rcrb
pop
enter
jmp
gs
fxch
lret
inc
or
xchg
pop
fs
movq
adc
push
das
mov
sub
nop
adc
mov
jns
add
xor
or
movsl
dec
in
fdivl
fstps
pop
pop
xor
repz
jae
xchg
sti
mov
xchg
mov
pop
cmp
cmp
out
jg
mov
enter
sub
insl
scas
mov
inc
or
popa
cmp
mov
jo
jle
mov
cltd
xor
mov
loop
mov
lods
sub
jae
or
imul
fldl
and
movsl
cld
dec
pop
mov
lcall
cmpsl
mov
clc
inc
mov
sbb
test
rclb
insb
hlt
or
sbb
push
lret
movsb
cli
sarb
add
xchg
inc
xchg
xchg
push
sti
call
cmp
movsb
test
test
jnp
xchg
xor
addb
sub
mov
mov
in
bound
and
lret
pop
cli
sbb
dec
xchg
cmp
mov
out
out
sub
xchg
sbb
clc
mov
adc
push
pop
stos
mov
sub
dec
jle
aas
mov
addl
mov
movsb
cmp
cs
hlt
imul
cld
mov
sti
roll
pop
adc
jns
out
movsb
loope
addr16
movsl
cmp
in
mov
pop
lret
push
inc
pop
sbb
xchg
sub
xor
pop
jne
int3
aam
adc
push
jl
lea
mov
cmp
int3
in
push
imul
int3
jmp
lahf
enter
pop
add
pop
push
out
mov
divl
or
dec
insl
jle
scas
inc
cwtl
xlat
pop
cli
push
xchg
test
adc
jo
clc
adc
mov
cmp
fcomip
ror
and
mov
pop
out
pop
inc
mov
mov
push
imul
xor
mov
pop
arpl
lock
movsl
mov
inc
add
scas
push
cmp
mov
dec
mov
pop
dec
inc
sar
fsubr
xor
js
xor
fidivrs
mov
mov
or
mov
xchg
xchg
ret
and
movsb
popf
sub
insl
jb
and
sub
mov
lcall
xor
and
add
push
cmpb
mov
adc
insl
div
cmp
hlt
imul
sub
out
icebp
push
jb
push
pop
cld
shrb
out
scas
dec
dec
sbb
sbb
popa
cmp
cmp
mov
stc
add
mov
xchg
addr16
insb
jo
test
stc
mov
sub
cmpsl
out
xor
cmp
push
movsl
lret
repz
mov
sub
mov
push
outsb
mov
outsl
or
inc
je
cmp
imulb
jle
lret
cmp
fcoml
nop
sbb
jbe
mov
inc
pushf
outsb
js
add
in
adc
aas
push
mov
jmp
sbb
sbb
pop
jns
rcll
fcmove
push
xor
stos
cli
mov
cs
add
or
sub
push
in
mov
je
xor
addr16
in
xor
movsb
int3
mov
jl
push
xchg
sarl
repz
ret
icebp
sbb
flds
sub
inc
std
adc
lret
rclb
or
scas
push
pop
in
sarl
or
fisttps
inc
out
test
call
shll
cmpb
inc
pop
mov
aas
xor
and
add
cmp
je
jb
push
subb
cmp
cmp
cmp
insb
pop
inc
cli
jno
insl
mov
inc
pop
sbb
imul
aas
inc
push
insl
mov
mov
loopne
sbb
cmp
cmpsb
movl
xchg
push
inc
pusha
xor
stos
cmpsl
outsl
outsl
jle
jle
inc
jns
mov
inc
jp
pop
test
dec
rcl
adc
mov
adc
das
mov
negl
roll
loopne
dec
sahf
addr16
testl
ljmp
loopne
in
or
dec
adc
cmpsb
push
pop
sti
xchg
lods
test
or
ret
mov
sub
jecxz,pn
addr16
mov
aas
push
in
sbb
adc
cmp
dec
push
mov
xor
enter
mov
bound
out
ret
mov
inc
popa
aas
jb
xlat
xor
sahf
mov
scas
movsl
push
jmp
mov
adc
fs
cmp
inc
ret
jmp
dec
in
jle
pop
mov
fbld
or
scas
xor
inc
add
pop
xor
push
sub
dec
cmp
fdivs
inc
inc
in
stos
push
pop
ds
clc
lret
adc
add
cmpsl
pusha
push
inc
jae
dec
jp
lods
mov
arpl
add
push
sub
scas
les
scas
dec
test
mov
aas
cmp
pushf
inc
or
cmp
push
add
popa
out
hlt
cmpsl
hlt
neg
and
mov
inc
xchg
ror
cltd
push
js
push
push
mov
adc
bound
inc
cmpsl
je
or
mov
aad
cmp
test
ss
mov
mov
cmp
fildll
sbb
lods
cs
loop
pop
jmp
cmp
adc
lock
clc
ret
cmp
cmp
cmp
mov
aas
pop
inc
fbld
pushf
stos
das
jb
cmp
cmpb
insl
bound
jl
nop
jl
cmpsl
jo
and
insl
or
shll
sbb
add
stc
lods
mov
clc
mov
mov
fcoml
test
sub
bound
cli
inc
nop
add
daa
and
jecxz
test
leave
scas
imul
jp
aas
addr16
sbb
adc
push
int3
mov
push
push
xchg
mov
inc
push
pop
push
jge
push
divl
nop
cltd
adc
call
and
xor
js
insl
aas
xlat
dec
fs
mov
std
mov
popf
je
jecxz
inc
out
ja
and
or
js
sbb
stos
add
pop
in
sbb
adc
push
cmp
test
jg
insb
add
push
and
cmp
or
adc
push
arpl
movsl
pusha
xchg
sbb
push
fbstp
icebp
inc
bound
inc
cmp
pop
lcall
mulb
jge
cs
push
test
inc
lret
hlt
movsl
dec
jmp
mov
adc
push
les
lcall
inc
add
popf
add
dec
adc
push
adc
cmp
pop
mov
mov
jne
data16
mov
cmp
xchg
clc
out
ja
and
ret
add
and
lock
dec
scas
mov
insb
pop
movsl
inc
in
mov
imul
and
repnz
fldt
push
repnz
out
mov
bound
mov
fistps
mov
sub
cmp
pop
push
out
in
bound
pop
cs
testb
mov
in
clc
stos
imul
push
fmuls
sbb
push
jge
push
cmp
test
jo
adc
push
lcall
cli
dec
repz
push
js
in
cmp
mov
in
pop
imul
push
leave
imul
mov
inc
insb
mov
jo
sub
mov
fwait
jns
gs
dec
push
es
add
ljmp
push
push
add
cmp
push
sbb
dec
idivb
xor
rorb
data16
xchg
xor
pushf
xor
stos
sub
lock
mov
xor
sub
push
mov
or
sar
cwtl
imul
pop
add
stos
test
sub
push
adc
mov
aad
pop
jne
aaa
ljmp
adcl
sbb
insl
popf
imul
in
adc
sbbl
filds
xor
in
inc
cmp
add
xchg
lret
daa
pop
ja
sbb
jl
outsb
loop
ret
pop
jle
xchg
mov
jmp
stos
push
ja
xlat
and
fsub
adc
in
fs
inc
in
mov
xor
sub
lcall
jle
push
lahf
or
mov
cvtps2pi
push
lea
scas
or
cwtl
mov
jno
daa
outsl
inc
inc
ja
imul
pop
es
and
or
push
addb
adcb
mov
xchg
sarb
mov
cmp
push
cmp
push
lcall
jb
mov
sub
sbb
mov
mov
mov
jae
addr16
mov
sbb
fwait
jae
imul
mov
ljmp
bswap
cld
ret
fiadds
jbe
jns
jo
pushf
or
fdiv
dec
add
cmp
mov
mov
add
fdivs
sbbb
pop
in
dec
adc
shrb
mov
call
push
inc
fsub
fistl
adc
push
enter
jae
mov
inc
pop
andl
lret
mov
or
mov
push
push
lahf
enter
cmpsb
fbstp
ss
data16
in
mov
repz
mov
cmp
jp
inc
fisttpll
popf
imul
push
lock
mov
cs
bnd
sbb
pushf
sarl
lcall
pusha
xchg
inc
mov
test
push
loop
jge
ret
inc
push
mov
fmuls
xchg
mov
lret
in
or
sarl
or
xchg
mov
adc
cs
inc
xchg
and
into
ja
mov
rol
aam
adc
imul
adc
int3
xlat
outsb
cmpsb
out
push
jne
xor
aaa
cmp
les
test
stos
cmp
mov
mov
sbb
cmp
rorl
outsl
fcom
stos
sbb
or
stc
aam
movsl
and
mov
daa
ja
fists
pushf
mov
push
fs
mov
insl
mov
out
sub
out
repz
xchg
pop
cmpl
lods
test
lret
loopne
ljmp
xlat
pop
mov
mov
or
lea
push
xchg
jbe
push
movsb
pop
sub
adc
jae
pop
arpl
imul
push
pop
xchg
clc
shlb
je
outsl
add
or
and
ss
stos
xor
inc
shr
cmp
pop
popf
and
sbb
outsl
nop
testb
push
aas
daa
aam
jle
xor
test
and
jle
or
dec
in
insb
xor
dec
imul
psrld
nop
push
repnz
cmp
jle
les
dec
mov
out
cs
bound
test
add
scas
ficomps
bound
rcll
js
cli
sub
mov
repz
in
push
mov
out
inc
cld
punpckldq
pop
repz
ret
leave
add
ljmp
jle
dec
jne
pusha
cs
popa
jno
xor
sbb
adcl
ret
add
out
arpl
sahf
and
rclb
loope
insl
cwtl
popa
push
cmp
lcall
insl
xchg
daa
and
push
jmp
or
ret
and
sbb
jnp
and
jb
int
push
mov
divb
mov
cmpsb
pushf
pusha
push
insl
je
fs
pop
sbb
arpl
in
outsb
std
clc
repz
clc
mov
jnp
repz
aaa
xchg
sub
cwtl
inc
fs
outsl
or
into
ss
ljmp
test
mov
mov
push
repz
push
scas
lcall
xchg
adc
dec
mov
loop
add
cmp
pop
cs
sub
sub
jl
mov
mov
xor
stos
or
xchg
enter
mov
lcall
xchg
pusha
lods
outsl
jnp
dec
movsl
pop
stos
cli
scas
dec
outsb
rcrl
or
xor
cmp
and
cwtl
cltd
push
and
and
sbb
cmp
and
arpl
loop
mov
stc
sub
jns
dec
and
sub
mov
push
sub
jmp
sbb
jge
mov
pop
jg
mulb
outsl
int
cmp
xchg
aad
dec
fs
jb
sti
jno
add
jns
xchg
outsl
fs
mov
shlb
ret
ret
and
jle
test
add
ss
sub
sbb
loopne
rcr
xchg
in
xchg
adc
jo
push
push
cmp
cmp
iret
xor
aas
js
test
jge
xor
fucomp
and
cld
jbe
mov
mov
dec
fstpt
repnz
push
ficompl
popf
push
and
cmp
clc
inc
sbb
inc
aas
xchg
insb
std
or
lret
inc
pop
mov
push
in
pop
and
lcall
cmp
pop
js
mov
outsb
inc
out
cmpsb
pop
dec
nop
cs
xchg
add
pop
dec
lea
jle
pop
xchg
mov
aad
push
push
shlb
ds
add
cwtl
sub
pop
xchg
cwtl
push
mov
call
in
and
outsl
lds
lods
adc
in
daa
aam
insl
jns
inc
mov
cmpsb
inc
jae
mov
lods
or
mov
dec
dec
movsb
pop
xlat
es
shrb
push
xchg
jp
xchg
outsl
inc
cmc
adc
rolb
fldcw
push
call
out
or
dec
cmpsl
hlt
int
cwtl
popf
frstor
or
or
jp
rcll
add
nop
lret
ss
imul
out
sub
xchg
notb
fwait
push
andb
out
inc
jl
xor
lods
dec
adc
sbb
in
xchg
loopne
mov
dec
lods
adc
push
mov
push
es
xchg
cmp
lcall
lods
lret
sbb
xchg
popa
lea
or
js
movsb
in
dec
lcall
jl
insl
call
add
cmpsl
sub
mov
inc
insl
int3
bound
bound
in
aaa
jno
mov
jb
or
jb
lcall
cmc
ja
ja
shl
call
cwtl
inc
adc
popf
les
lret
das
cli
mov
adc
sub
jp
lcall
mov
dec
push
mov
dec
push
test
dec
out
push
pop
addl
xchg
mov
push
fcompl
jecxz
jno
pop
roll
adc
inc
inc
xor
pop
mov
push
xor
in
into
ja
cwtl
enter
cvtps2pd
sub
rorb
inc
dec
push
xorb
cltd
add
push
sub
sbb
dec
inc
mov
mov
cmpl
push
mov
mov
adc
cmp
repnz
loopne
adc
insb
dec
mov
loope,pt
dec
add
cltd
sub
jne
mov
in
sbb
rol
sahf
cmc
nop
mov
mov
mov
jp
sub
mov
test
add
loopne
lds
std
xchg
cld
push
cs
cld
add
mov
pop
jo
pop
jne
push
adc
lds
dec
sub
addl
pop
mov
sahf
cmpsb
cli
fcoms
fistpll
push
dec
pop
stos
pop
mov
xchg
arpl
std
xor
xchg
imul
jl
mov
add
sub
neg
ss
cmp
pop
sbb
cmp
outsb
fistpl
orb
add
sub
or
jmp
sarl
out
lret
ljmp
push
pop
pusha
xor
ret
stc
dec
lcall
pusha
mov
hlt
les
add
and
sarb
clc
int3
and
or
mov
mov
adc
cmpl
mov
cmp
je
xchg
mov
jo
das
mov
mov
xchg
movsl
lods
dec
call
idivl
dec
inc
push
jns
dec
ds
mov
dec
lahf
fdiv
jae
cmp
pop
mov
push
mov
or
shl
fnstenv
mov
pop
push
gs
hlt
shrl
btr
shlb
dec
lea
rcrl
and
pop
mov
fimuls
daa
out
les
movb
out
adc
movsl
imul
clc
pop
fcom
out
mov
adc
mov
pop
test
fadds
inc
push
jmp
jb
xlat
fs
daa
js
or
movsb
shr
mov
loope
aas
push
push
pop
aaa
cmp
fs
xchg
lret
dec
imul
cmp
ficomps
into
mov
adc
xchg
pop
adc
sarb
mov
sbb
ret
js
sbb
fs
mov
repnz
jns
aad
cmp
lods
jno
out
call
aad
cmp
ljmp
rclb
or
andb
adc
xor
aam
dec
aaa
jnp
push
incl
out
inc
mov
push
mov
xlat
cmp
xchg
sub
pop
out
and
mov
push
push
xor
and
nop
repz
or
idiv
stos
in
add
push
fsub
cmp
movsb
pop
jge
push
xor
test
mov
into
xor
mov
orl
or
push
cli
and
inc
insb
sub
aas
imul
icebp
jb
pop
sub
and
mov
outsl
xchg
popa
push
imul
push
inc
push
push
lea
int
and
movsb
mov
cmpb
push
outsl
xor
add
ds
lret
je
dec
xchg
cmpsl
adc
repnz
fmul
stos
push
in
inc
dec
and
and
dec
mov
mov
out
dec
push
or
aam
out
fbld
je
add
jbe
inc
fs
outsl
outsl
in
mov
nop
lods
cmp
mov
mov
mov
lock
cmpsl
jae
pop
rclb
sub
pusha
sbb
inc
cmp
mov
nop
xchg
pop
jp
sbb
stc
add
xchg
gs
mov
mov
push
jae
mov
imul
scas
push
and
jge
push
pop
add
jb
imul
imul
mov
movsl
xchg
jmp
hlt
mov
sub
add
xor
push
pop
cwtl
pop
je
inc
lock
mov
inc
push
int3
cwtl
pop
in
into
and
fs
or
sbb
pop
inc
std
push
lcall
pop
enter
ss
fs
push
cmpsl
lock
pop
in
xor
imul
or
arpl
fs
xchg
adc
imulb
push
lock
fisttpl
jp
pop
in
xchg
mov
int3
mov
rcrb
fsubp
lcall
dec
cmp
outsb
pop
in
adc
lods
pop
scas
sbb
les
lcall
push
inc
jo
in
dec
mov
mov
adc
int3
sub
test
sbb
add
daa
mov
pusha
ret
shll
ja
xor
jnp
outsl
pop
jo
cmp
and
mov
mov
fistpl
jg
mov
or
cltd
out
popf
mov
pop
inc
test
cmc
sub
pushw
lods
ja
jecxz
add
or
fldt
fnstenv
in
sbb
into
roll
pop
into
jns
ss
int3
push
orl
test
add
jae
and
in
mov
sbb
or
xchg
jecxz
push
push
mov
mov
aaa
pushf
repnz
out
xlat
pop
and
mov
dec
dec
sub
insl
pushf
lcall
jmp
ljmp
or
lods
rclb
jge
fcomps
in
xor
push
ds
sti
or
test
and
insl
xor
shll
sbb
pop
pop
adc
mov
push
pop
cltd
mov
push
ret
dec
push
fistpll
pusha
repnz
js
sbb
sahf
scas
fcompl
ljmp
mov
mov
jl
lcall
fxch
dec
mov
add
mov
insb
test
jno
add
xchg
inc
dec
fsubl
cmpsl
inc
ds
cs
lahf
daa
mov
pushw
pop
push
les
xor
daa
lock
push
push
rcr
jmp
dec
fstpt
test
jbe
push
cmp
loopne
sub
lods
mov
sbb
cmp
jecxz
jns
xchg
ds
hlt
fs
jae
sbb
data16
test
or
or
mov
sub
outsb
jle
insl
add
mov
js
repz
fstpt
int
sub
rorb
push
dec
dec
ds
cmpsb
xchg
sbb
push
sbb
xlat
loope
insl
cmpsl
imul
daa
push
sub
mov
fs
ljmp
cmp
mov
inc
xchg
jo
in
outsb
lcall
jmp
aaa
jne
pop
xor
sahf
dec
dec
jmp
repnz
fstp
cmpsl
inc
cmpsb
les
jns
mul
jno
or
sub
daa
iret
ret
pop
int
fnop
lret
dec
xchg
or
ret
or
jp
call
inc
insb
xchg
mov
dec
repz
outsl
sub
and
lods
mov
jl
sbb
xchg
fstpl
pop
das
ja
jle
imul
sbb
jnp
xchg
aas
xor
and
sahf
dec
lods
pusha
and
jno
out
and
mov
inc
jge
sarb
push
xlat
lret
sub
mov
and
cltd
cli
inc
sahf
add
popf
mov
pop
out
jbe
or
shll
mov
fs
jecxz
pop
out
jbe
or
shll
bound
sahf
rcrb
inc
mov
jns
xor
mov
imul
push
or
popa
movsb
mov
daa
and
imulb
add
push
sbb
hlt
ds
test
pop
dec
je
aas
and
inc
hlt
push
sub
aas
xchg
call
mov
adc
mov
mov
mov
rcrl
pop
sarl
inc
xchg
xor
or
lea
xchg
addr16
cmpsb
mov
iret
dec
xchg
inc
inc
fnstsw
popa
aaa
sub
outsl
ds
dec
int3
sahf
hlt
jb
add
sub
cmc
adc
movsl
push
lock
sub
or
ljmp
add
sub
fs
rcrl
aas
ficompl
or
and
lock
xorb
scas
scas
jg
dec
call
push
mov
scas
loope
push
call
add
mov
jmp
out
xchg
stos
inc
stc
cmp
out
outsl
inc
loop
jl
and
mov
push
lahf
push
mov
and
push
cmpsl
movsb
in
jp
adc
sbb
xchg
test
sbb
cmc
inc
sbb
leave
jae
and
sub
cmp
addr16
aas
and
mov
xor
push
in
xor
pusha
pop
cmp
jo
cmpsl
repnz
inc
cmpsl
jmp
out
push
outsl
push
test
stos
adc
lods
insb
outsl
cmp
jnp
in
mov
jle
aas
scas
call
mov
or
xchg
sbb
push
rcr
cld
inc
iret
pop
test
add
sbb
push
scas
lret
push
pop
daa
add
mov
gs
jecxz
inc
jnp
testb
sbb
fs
push
jnp
pop
lret
sbb
ret
jbe
or
pop
mov
loopne
add
pop
movsl
pop
sub
lcall
xchg
jl
add
subl
or
mov
pop
pop
add
mov
inc
mov
pop
and
movsl
cmpsb
and
daa
scas
dec
int3
cmpsl
cwtl
dec
push
sarb
scas
xor
js
jbe
stc
dec
aad
or
push
inc
inc
xchg
sub
aam
stc
push
add
in
and
test
repz
push
jne
inc
lahf
out
dec
stos
add
rol
insb
and
lock
imul
jle
leave
insl
bswap
mov
outsb
mov
sbb
pop
shrl
in
jl
shrl
add
jo
xchg
ret
stos
inc
loopne
lods
scas
mov
filds
js
pop
mov
stos
xorl
in
adc
icebp
pop
jnp
inc
mov
call
mov
les
cmp
int
xchg
pop
test
popl
sub
pushf
or
push
pop
pop
imul
rolb
dec
arpl
repnz
dec
jnp
dec
ja
les
test
in
sub
xor
ficoml
rclb
enter
iret
dec
mov
push
lods
cld
mov
add
push
push
movsb
adc
std
lcall
in
dec
mov
jnp
jns
rcrb
enter
push
ja
dec
cmpsb
mov
je
imull
repnz
ret
pusha
test
inc
pop
cwtl
cmp
test
ss
into
mov
or
xchg
aam
jne
and
pop
and
popa
pusha
pop
xchg
out
push
pop
orl
stos
cwtl
push
dec
and
cmp
fldt
sahf
cwtl
push
xor
or
shll
push
xlat
jns
push
push
cwtl
jge
push
sbb
sub
imul
xchg
mov
lods
lock
xorl
jae
clc
and
sub
add
stos
push
stc
add
rcl
jno
pop
out
jb
inc
test
loop
cmp
imul
cmp
cmp
sbb
sti
push
mov
mov
push
sbb
jno
test
push
or
sbb
aaa
arpl
jle
in
aam
cmc
xchg
sub
ficoms
push
mov
cmp
cmp
push
mov
adc
inc
lock
lret
mov
mov
mov
in
jbe
fidivs
inc
loopne
mov
nop
in
xor
or
test
mov
fnstenv
ficompl
imull
pop
or
push
fdivs
mov
push
add
adc
cmp
loope
inc
lds
push
insb
sbb
ds
mov
jae
test
push
push
nop
and
inc
inc
lds
sti
test
imul
rcr
jl
pop
pop
xor
sub
es
jne
pop
les
pop
frstor
cld
mov
inc
cli
aad
add
xlat
fstpl
pop
mov
mov
mov
add
aad
or
outsb
aam
or
push
jp
movsb
incb
negl
xchg
insl
or
xchg
outsl
push
xor
movsb
xchg
xchg
xlat
inc
inc
jecxz
xchg
cmp
nop
mov
aad
xchg
fs
lds
push
stos
cmp
xchg
sub
sahf
add
mov
fbld
mov
sub
mov
test
in
lods
lret
cmp
test
mulb
shll
jmp
dec
addl
subl
push
adc
and
rolb
icebp
push
stos
test
push
mov
inc
mov
je
push
pop
sarw
mov
das
pop
ret
in
jmp
jge
cmp
push
mov
sar
mov
scas
sub
pop
shrb
lret
test
inc
jmp
push
test
push
sub
stc
enter
sub
clc
mov
repnz
xor
mov
das
push
nop
jge
pushf
mov
das
mov
inc
pop
add
pop
push
mulb
test
xlat
ss
arpl
loop
sub
fidivrs
in
xchg
pop
daa
or
mov
jp
dec
sbb
adc
ja
adc
mov
cmp
in
mov
jno
pop
cli
popf
jnp
pop
add
jmp
mov
repz
into
mov
nop
mov
mov
lcall
xchg
mov
or
mov
push
mov
test
fmuls
mov
outsl
push
inc
or
test
mov
inc
incb
dec
inc
add
cmp
iret
cmp
pop
repnz
inc
mov
xor
ss
sbb
mov
mov
add
pop
push
mov
sarl
subl
inc
cmp
jl
jae
rol
arpl
and
sqrtps
mov
dec
push
adc
sub
xor
mov
aad
xor
cmc
sub
xor
mov
fisubrl
mov
push
psubsb
pop
data16
mov
in
std
mov
loopne
dec
push
xchg
outsb
dec
insl
xchg
xchg
push
jmp
daa
mov
fwait
push
cmp
cmp
mov
sbb
out
jmp
js
leave
mov
jnp
outsl
fs
sub
cmp
mov
or
addr16
loop
and
sbb
lahf
mov
shll
xor
and
add
push
sbb
fmull
insl
cli
nop
dec
test
sahf
clc
xchg
dec
mov
in
rorb
imul
test
loop
mov
int3
outsl
inc
gs
xchg
xorb
add
je
insl
enter
jb
cltd
jbe
xchg
insl
jns
jl
jno
fsubl
lahf
or
xchg
scas
xchg
pushf
inc
pop
and
notb
mov
sub
call
das
jle
gs
out
pop
shll
add
cmp
push
xchg
mov
mov
bound
and
jmp
add
stos
test
js
into
xchg
cmpsl
push
jle
mov
push
mov
jg
std
xor
pop
movsb
dec
lret
push
stos
in
pusha
and
dec
iret
jne
xor
shl
fs
cld
imull
je
lods
imull
push
xlat
or
repnz
stos
add
jmp
dec
or
and
push
scas
mov
mov
dec
addr16
add
mov
mov
inc
cli
lret
sbb
jl
xchg
xchg
pushf
adc
inc
rcll
es
adc
xor
bound
aaa
in
mov
clc
push
xorb
dec
jp
enter
int3
push
imul
dec
insb
cmp
cs
jno
push
sub
pop
push
sub
push
jo
sbb
cmpsl
mov
cmp
and
mull
pop
cmpsl
and
repnz
cld
pop
mov
inc
or
push
incb
inc
cmpsl
fidivrl
cmp
add
mov
std
in
fstps
mov
push
mov
outsb
cld
out
mov
pusha
call
aas
call
sbb
mov
jmp
jbe
in
test
or
fidivrs
mov
fwait
jo
mov
cmpsl
mov
mov
mov
or
inc
mov
ljmp
insb
call
inc
jae
jmp
inc
jb
js
imul
dec
mov
imul
mov
push
inc
jo
jp
fs
ljmp
fstpl
dec
mov
into
xchg
cmp
or
jge
or
sub
outsb
sub
fsub
daa
test
fcmovne
sahf
add
xchg
jnp
cltd
addb
mull
pop
xor
and
add
or
lret
test
movsb
adcb
inc
lcall
mov
fs
stc
and
int3
xlat
and
fsubrs
xchg
push
mov
lock
int3
leave
adc
jle
xchg
int
xchg
push
inc
leave
mov
lcall
and
jb
cmpsb
mov
push
cltd
cmp
jbe
sbb
ret
addr16
in
lods
test
clc
jns
jg
cmp
cs
pop
xchg
lock
add
out
sti
cmc
cmp
push
cwtl
repnz
arpl
fwait
mov
inc
mov
add
inc
mov
popa
out
push
hlt
mov
and
adc
jg
adc
test
lret
add
dec
jne
stos
push
inc
jo
loop
add
cld
nop
aas
xchg
mov
adc
and
add
dec
push
mov
fsubrs
pop
xor
mov
cld
mov
dec
imul
fsubrl
push
inc
or
xor
test
in
jl
mov
test
loop
std
fists
push
sub
inc
push
ret
sub
add
push
jle
push
movl
or
cld
inc
fisttpl
arpl
arpl
adc
mov
xchg
popa
mov
cmpsb
cmp
fdivrl
pop
mov
dec
repz
jge
and
mov
cmp
jne
mov
adc
repnz
pop
cmp
call
sub
leave
cmp
inc
addr16
mov
add
mov
jg
pop
aas
test
ficomps
stos
cmp
fimull
popa
test
mov
sub
sar
inc
pop
mov
gs
xorl
pop
sub
jp
ss
sahf
mov
and
jo
adc
js
fstpl
pop
sar
insb
aam
cmp
sub
ret
adc
test
sub
lcall
xor
outsl
add
lock
xor
enter
adc
repnz
xor
out
inc
mov
jl
jge
loop
push
xchg
lret
inc
cmp
mov
fnsave
jecxz
addl
and
enter
aam
icebp
adc
idivb
lock
inc
pop
and
leave
popl
xchg
mov
mov
add
ja
adc
adc
jmp
stos
scas
daa
test
mov
cmpsl
into
mov
std
xor
inc
sbb
jns
sub
dec
xchg
fisubs
xor
adc
mov
fcmovne
mov
shr
loop
xchg
imul
cmp
cmpsl
and
mov
xor
push
xor
push
popf
popa
mov
in
lret
jl
scas
and
mov
insb
pop
pop
out
pusha
inc
aam
aad
test
or
fcomps
push
js
pop
xorl
loopne
pop
insl
out
mov
mov
inc
sbb
push
popf
je
pop
out
add
dec
adc
add
push
dec
lret
jp
jne
repz
lahf
clc
inc
add
xlat
clc
fs
inc
mov
idivl
lock
mov
cs
push
xchg
in
and
in
and
add
out
fwait
mov
dec
pop
movsb
cwtl
out
jns
inc
adc
xor
cmc
les
es
js
je
dec
lcall
sub
lcall
mov
iret
cmpsb
adc
pop
dec
mov
rorb
aam
movups
daa
stos
xor
push
adc
callw
sub
mov
test
pop
xor
xacquire
es
inc
pop
mov
jmp
daa
lock
fdivp
push
js
push
loopne
mov
call
and
dec
cmp
cs
adc
pop
pop
jle
scas
shl
cmp
add
push
dec
in
push
mov
add
call
jo
cmpsl
dec
jmp
push
pushf
adc
or
fdiv
pop
jns
cmp
fsub
movsw
cmp
sub
or
sbb
sbb
outsb
or
scas
mul
gs
xchg
xor
mov
add
dec
xor
sti
or
aam
inc
mov
pop
dec
xor
sbb
xchg
pop
out
sbb
sbb
pop
ret
insb
mov
adc
mov
out
xor
clc
jl
fs
and
sahf
push
aaa
je
mov
pop
ds
ja
into
adc
mov
pop
push
push
mov
sti
push
leave
lods
add
fcoms
push
sbb
mov
pop
cmpl
push
or
imul
call
add
test
inc
add
push
pop
arpl
dec
jg
loopne
daa
call
shrb
dec
fstpl
sbb
pop
pop
mov
sbb
jne
roll
jno
adc
ror
jae
rcr
mov
pop
and
cwtl
dec
xor
mov
roll
mov
mov
or
ret
jae
fwait
int
sub
xlat
mov
add
sbbl
adc
test
inc
push
lods
popa
fldenv
cmpsb
imul
pop
sbb
push
inc
cwtl
fsubrs
jmp
fldl
and
inc
dec
les
dec
mov
mov
jbe
mov
leave
adc
movsb
or
test
cmp
out
daa
lea
push
in
pop
adc
jle
cmp
push
jne
sti
push
mov
fdivrp
sub
cli
and
adc
icebp
xor
jb
adc
cmp
add
and
les
jno
outsb
and
jge
jl
sbb
mov
adc
in
lcall
dec
lock
xor
pop
jmp
test
or
adc
jb
lret
incl
pop
jg
int
pop
push
ds
rcrb
fs
xor
dec
mov
movsb
jb
xor
push
lds
and
es
ret
jl
repnz
cltd
dec
dec
xchg
xlat
dec
xor
jns
push
inc
das
sbb
mov
cmpsb
adc
mov
jae
and
repz
sub
push
mov
push
in
into
fisubrl
xor
jb
fcmove
cld
jle
shll
jo
push
je
imul
es
ja
mov
pop
pop
pop
xchg
adc
sub
or
aaa
gs
and
jb
jecxz
div
les
loop
ljmp
in
dec
cmpsb
and
je
pop
jg
subl
loopne
or
mov
addr16
lea
inc
stc
mov
push
fcoml
sub
jnp
pop
test
cmpsb
mov
and
add
push
das
daa
lcall
mov
cmp
and
jge
cwtl
xchg
cld
shrl
fs
mov
scas
push
loope
push
loopne
sbb
lds
and
inc
cmpsb
fstps
add
sti
pop
inc
cmp
addb
loope
subl
mov
call
add
movsb
imul
arpl
push
xor
out
xchg
xor
sbb
shl
push
jl
in
add
pop
loope
xchg
push
int
cs
mov
add
imul
sbb
outsl
xchg
mov
jne
fs
lahf
or
pop
mov
pop
daa
inc
pop
xor
shlb
popa
mov
das
inc
xchg
js
cs
fdivs
or
imul
jo
nop
pop
daa
inc
mov
test
imul
into
and
ss
push
mov
lods
les
mov
test
insb
popa
cmp
int3
mov
std
push
mov
or
stos
jp
xchg
ficompl
add
cmp
or
mov
push
and
outsb
and
mov
imul
push
add
mov
push
addb
mov
xchg
push
fwait
in
push
xchg
call
xchg
pushf
packuswb
xor
mov
clc
outsl
cli
nop
pop
movb
fdivs
bound
in
sti
hlt
jnp
cli
das
int
add
xchg
cmp
fcomip
test
testb
gs
hlt
lods
push
call
cltd
or
loopne
popa
and
dec
loopne
popf
roll
sahf
in
stc
into
ljmp
push
ret
clc
aas
lock
mov
mov
and
inc
pop
cmp
push
and
in
or
sub
aas
cmp
pusha
dec
and
inc
jle
lret
add
lods
fmul
cmp
dec
ret
mov
push
ss
lahf
mov
subb
scas
les
js
fs
in
orl
fldt
push
pop
inc
push
fs
mov
pop
inc
xchg
mov
aaa
iret
mov
stos
jns
out
scas
cmp
cmp
and
mov
cmp
jl
jg
jge
cmp
adc
js
pop
fsubrl
rcrl
ret
pop
jne
adc
and
sub
xchg
movsb
pop
aaa
cmp
dec
mov
inc
es
push
mov
pop
or
hlt
js
jmp
fstpl
mov
inc
insl
cmp
sub
inc
xchg
sub
mov
sbb
and
and
and
inc
cmpb
push
mov
fldenv
xor
arpl
cmp
sbb
stos
out
rcll
push
mov
pop
cmpsb
push
cld
sub
push
sbb
jle
in
repz
sbb
push
jns
mov
push
test
sub
mov
aam
jnp
mov
xor
rolb
jns
xchg
and
xchg
test
imul
out
insb
jl
fwait
inc
mov
lods
dec
std
lahf
xchg
movsl
lock
push
sbb
ficompl
js
out
push
les
push
bound
pop
arpl
mov
stc
pop
imul
pop
ss
inc
cmp
mov
jne
adc
cld
cmp
mov
jp
pop
js
out
inc
sbb
push
shll
js
mov
lds
das
sbb
adc
test
jge
roll
fadds
cmp
sub
data16
cmp
test
push
pop
xor
cwtl
xor
cmp
outsb
cmpsl
pop
mov
or
push
loopne
xor
call
mov
int3
xchg
dec
test
mov
add
dec
adc
cmp
jb
mov
lret
pop
test
orb
cmpsb
jbe
call
je
xor
xchg
loope
dec
cmpsb
pop
xchg
push
xlat
and
jo
shl
inc
xor
inc
sub
dec
push
push
test
mov
incb
xchg
mov
cmpsb
push
scas
stos
or
movsl
gs
jle
mov
shl
mov
imul
push
dec
adc
xchg
add
mov
ficoml
or
addr16
outsl
inc
mov
cmpsl
out
out
ds
out
and
inc
dec
xchg
hlt
pmulhuw
inc
sub
daa
cmp
push
aas
mov
sbb
dec
or
jo
inc
outsl
jno
fstpl
js
xchg
fsubl
mov
ret
pop
cs
inc
iret
sti
fsubr
jge
cld
movzwl
push
mov
cmpsl
mov
mov
push
dec
mov
cmpsl
cmp
xor
es
test
jl
iret
mov
and
xchg
dec
add
xor
nop
xchg
inc
ja
cmc
and
stc
out
dec
mov
jle
daa
pop
mov
cmp
and
mov
movsb
mov
or
inc
test
out
in
push
adc
add
lea
testl
push
mov
add
cltd
inc
insb
les
mov
pushf
adc
dec
arpl
stc
dec
mov
or
push
mov
pusha
push
insb
call
movsb
call
aaa
es
xor
xor
repnz
lea
mov
test
push
addl
les
xchg
dec
fstps
add
cmc
and
sub
cmp
popa
sub
xchg
cmp
mov
cmp
aas
pop
xchg
jmp
inc
jae
jno
push
jnp
stos
stos
xchg
pop
mov
into
aaa
mov
ja
cmc
cli
jl
popl
adc
scas
push
xor
lock
fisubs
jne
dec
aam
ljmp
pop
mov
repnz
fcompl
js
push
dec
add
adc
mov
mov
repz
orps
cmp
icebp
sbb
xchg
mov
int3
mov
jp
lods
loopne
fcmovbe
hlt
lods
mov
dec
pop
jg
filds
shr
push
arpl
add
sar
or
in
jae
loopne
jnp
mov
int3
fcom
cmc
gs
popa
insl
push
cmpsb
imul
xchg
lea
out
inc
in
lahf
jns
push
pushf
or
daa
mov
xor
ss
icebp
dec
push
dec
inc
subb
adc
adc
mov
sub
mov
pop
sti
fsubrs
sbb
repnz
jle
and
or
jbe
push
ret
repz
aad
dec
add
add
cmp
mov
pop
sub
filds
and
push
outsl
pop
jg
sub
mov
pop
mov
mov
rcr
or
iret
div
pusha
push
addr16
data16
sub
fnstsw
pop
inc
lahf
jb
inc
sub
mov
mov
aad
mov
sbb
call
cs
pop
daa
push
das
sub
cmp
adc
push
lods
inc
ret
xchg
dec
jno
xor
mov
aam
ds
jge
add
test
jl
dec
push
in
cmpsb
or
lods
push
pop
out
lea
jp
inc
cmp
jne
and
jle
outsb
mov
das
mov
adc
repnz
adc
sub
dec
loop
movsl
test
lds
xor
push
es
inc
es
inc
loope
mov
cmp
mov
and
xchg
sub
push
fsubl
add
int3
or
or
or
sti
or
xchg
inc
fistps
arpl
pushf
scas
in
dec
mov
dec
xorl
sbb
mov
cmp
repz
lds
xchg
test
js
lods
ret
je
icebp
jns
or
cld
fldcw
dec
bound
pop
sbb
xor
xchg
xchg
cmp
dec
inc
pop
sub
xchg
in
pusha
lcall
mov
int3
sbb
cmp
pop
inc
or
ret
scas
mov
or
sub
insb
push
push
jb
fsubrl
jecxz
add
lret
jmp
sysret
jg
pop
aad
hlt
push
pusha
cmp
adc
scas
and
rcrb
cmp
sbb
add
outsb
out
fbld
jmp
pop
scas
imul
xchg
dec
ss
add
cmp
aam
das
out
mov
mov
sarl
sub
js
outsl
cmp
test
fsubp
sbb
adc
out
aaa
in
jo
divb
rorl
push
mov
dec
jb
jbe
sti
je
es
daa
into
movsl
mov
adc
push
stc
push
sbb
leave
adc
sbb
jge
jo
lret
cmp
fcompl
xchg
mov
add
clc
fcompl
or
arpl
iret
cmpb
add
and
jmp
jne
jno
cli
jnp
fwait
loopne
and
pop
addr16
pop
data16
test
and
xchg
pop
and
repnz
inc
pop
fdivs
pop
or
cs
xor
es
jle
jbe
sbb
mov
inc
sbb
ds
mov
dec
push
jmp
les
int3
mov
mov
out
aam
bound
cmp
push
movsl
enter
push
jne
int3
jl
push
pop
test
pop
xchg
cmp
imul
rorl
mov
mov
mov
mov
sbb
dec
jne
nop
fstps
rclb
push
shr
inc
pushf
sub
dec
fwait
cmp
push
loop
pop
je
and
jg
xor
push
mov
push
jbe
fsubrp
push
xchg
sbb
das
test
fisttps
lods
sbb
or
lahf
aaa
in
and
add
adc
out
cmpsl
je
or
inc
popa
cmp
iret
out
mov
sbb
fstl
cmp
into
es
pushf
sub
mov
pop
in
pushf
ret
cmp
cmp
dec
or
sbb
and
cmp
scas
cmp
inc
cmpsb
push
addr16
xchg
fwait
jbe,pt
cwtl
sbb
dec
sbbb
sbb
dec
push
loope
cmpsl
fs
in
push
pusha
out
loopne
lods
xchg
cmp
fisubrl
sub
push
test
add
push
dec
xchg
lea
repnz
icebp
leave
cwtl
dec
jle
jl
mov
daa
fbstp
mov
jp
imul
dec
test
jl
pop
sahf
inc
cmc
sbb
xchg
push
jbe
pop
jg
jp
jge
sub
mov
lret
sub
gs
sub
lcall
dec
test
insl
sbb
or
mov
movnti
xor
add
xchg
scas
dec
nop
int
fldcw
cs
pusha
lret
clc
fldcw
in
rcrb
fsubrp
pop
lret
cmp
cwtl
add
icebp
jb
rcl
or
sub
inc
movsl
icebp
lcall
jmp
push
fsubl
and
pop
or
aam
jns
inc
jnp
in
ror
pop
icebp
loop
add
loopne
test
sti
push
icebp
lret
mov
lods
and
dec
jb
xchg
inc
mov
rcrb
in
outsb
xchg
insb
jns
pushw
andb
cli
adc
flds
loope
xchg
cmpsb
rorb
lret
sub
cmpsl
push
ss
in
dec
mull
fistpl
les
sarl
jle
aas
dec
dec
xlat
movsl
test
pop
orb
sub
pop
dec
cmc
xlat
mov
mov
mov
jl
in
sarb
test
stc
sub
add
push
pop
js
push
std
icebp
leave
sub
cmp
ljmp
or
add
inc
jp
xchg
pop
jne
lods
or
or
pop
cmc
loop
movsb
rolb
add
jae
mov
pop
loop
lret
les
mov
mov
xchg
frstor
adc
jl
jae
mov
repz
das
cmpsl
enter
lods
call
pop
mov
and
out
mov
xchg
push
imul
ret
and
rclb
sbb
inc
call
mov
or
mov
ja
sub
imul
jp
sbb
outsl
out
mov
pop
xchg
or
push
cmp
fdivs
insb
inc
lock
sbb
push
adc
fwait
and
xor
cmp
xchg
adcb
add
sarl
fs
inc
push
incl
cmp
mov
les
fwait
movsl
data16
imul
cmpsl
xchg
inc
mov
inc
bound
imul
jp
decb
mov
dec
jmp
test
mov
out
sbb
mov
in
ljmp
dec
inc
adc
mov
faddp
or
jno
xor
xor
cmpsl
cmp
call
cmpsb
hlt
fcoml
xor
rcl
lods
dec
and
pmulhuw
dec
rorl
xchg
lahf
fidivrl
in
xor
xchg
sub
fwait
inc
aam
and
in
xchg
or
shrb
xor
xchg
mov
gs
test
cmpsb
push
cmp
dec
jl
lock
lods
sbb
lcall
pop
cli
xorb
sbb
cmpsb
adc
jae
and
addr16
jno
and
jge
cwtl
sub
iret
jns
push
das
test
jmp
xchg
fs
stos
jp
pop
push
cwtl
xchg
cwtl
rorb
daa
and
mov
push
ljmp
mov
or
jmp
cmp
cmp
inc
cwtl
adc
jmp
lret
fxch
and
int3
pop
gs
ds
and
xchg
fs
xchg
and
pop
jmp
leave
jg
adc
push
mov
sbb
pop
ja
int
stos
hlt
or
jno
mov
daa
xchg
test
orl
cmp
in
clc
add
bswap
xchg
jp
stc
das
dec
out
insl
std
in
jle
sbb
mov
jmp
or
pop
stos
xchg
lret
call
adc
sahf
adc
in
inc
les
lock
mov
mov
jo
xchg
ret
cwtl
nop
mov
in
mov
cld
scas
push
dec
in
icebp
jno
dec
xor
mov
push
loope
push
mov
lret
add
outsb
call
adc
fbld
mov
sub
cmpsb
xorb
sub
stos
sbb
stos
inc
add
repnz
icebp
lahf
or
inc
pusha
stos
xchg
sbb
or
mov
and
dec
sbb
pushl
rol
mov
push
in
pop
ja
inc
cld
iret
push
addb
pop
ret
dec
push
cmp
push
and
push
dec
jnp
lret
bound
insl
ja
jmp
cwtl
xlat
nop
or
push
or
adc
inc
test
dec
and
dec
nop
stos
or
mov
aas
lcall
leave
pop
dec
mov
sub
outsl
cmpsb
jb
pop
es
mov
xchg
mov
aam
jl
sub
mov
jecxz
shll
les
push
je
pop
xor
int
sti
cmp
xchg
push
pop
loope
das
and
cmp
les
cwtl
sbb
inc
cmp
jl
push
ljmp
jns
clc
jl
push
add
mov
sbb
outsb
imul
push
jns
gs
sbb
pop
inc
mov
popf
mov
lods
push
loop
clc
arpl
repz
popa
pusha
cmp
mov
mov
repz
shrb
outsl
pop
iret
inc
jmp
lea
mov
int
out
push
test
out
or
inc
pop
mov
push
push
xchg
inc
je
cmp
push
out
and
xor
jns
dec
xor
jge
mov
inc
pop
lret
mov
push
add
inc
loope
adc
stc
lods
xchg
mov
into
loopne
or
jle
icebp
sub
sub
xchg
push
pop
gs
jb
sub
into
or
inc
mov
fdivrs
cmpsb
or
mulb
pop
dec
dec
or
jmp
pop
je
aaa
push
jne
pop
push
mov
leave
js
fsubrl
outsl
jb
inc
push
outsl
cmc
loopne
dec
pop
gs
push
in
mov
mov
or
cmp
inc
sub
sbb
jl
xchg
ss
lea
test
cld
xor
xchg
ds
lds
jae
ljmp
jns,pn
jbe
ficoml
cs
call
out
test
mov
lods
cmpsb
pop
mov
mov
scas
mov
xchg
aad
inc
in
jmp
imul
dec
jae
or
sbbl
push
arpl
aas
icebp
push
push
out
insl
pop
cmp
daa
jmp
dec
adcl
ja
in
mov
jl
das
jne
js
lds
add
loope
lea
add
inc
adc
dec
jo
scas
xchg
repnz
adc
mov
orl
rcl
pop
jmp
ss
push
into
adc
lds
clc
or
test
ss
xchg
popf
push
scas
mov
test
rcrb
mov
and
jne
inc
sub
jb
jl
pop
rolb
fisubl
ljmp
sti
xor
int
jns
xchg
fstpl
xor
out
js
stos
xchg
inc
jno
mov
add
ds
mov
pop
sub
imul
inc
push
lcall
mov
fbld
into
ds
aas
fmul
sub
add
inc
in
ret
jp
aas
adc
mov
sub
insl
and
das
mov
push
cwtl
pop
test
jne
xor
aas
movsb
push
mov
add
xor
scas
rolb
iret
imul
repz
lcall
xchg
cmc
out
fucomip
lods
cmove
sbb
add
jnp
clc
fwait
pop
or
sub
xchg
mov
int3
cmpsb
jo
mov
dec
jbe
xchg
jg
push
js
loope
inc
lods
adc
out
add
mov
out
dec
fisubrs
push
xor
cmc
sahf
cmp
sub
push
push
jg
adc
notl
add
les
test
cwtl
fmul
dec
popf
adc
mov
pop
lcall
cld
jecxz
pop
pop
add
pop
into
decl
cmp
movsb
ficoms
pop
xorb
movl
mov
pop
xchg
fs
decb
cltd
bound
cmpb
jnp
push
icebp
pop
xchg
ss
cmpsb
cmp
sub
orb
add
call
sub
mov
add
outsb
jl
xchg
pop
push
rorb
jns
dec
push
jno
jg
gs
jmp
pop
jecxz
xchg
fnstcw
xchg
mov
xchg
repnz
push
fs
jp
int
sbb
iret
cmp
mov
mov
fwait
cli
xchg
xchg
ds
push
mov
cmpsl
icebp
mov
cld
js
cmp
test
pop
scas
pop
aaa
dec
insl
das
cmp
xchg
dec
ret
pushf
aad
cli
shlb
fiadds
push
jl
int3
ret
or
sbb
xor
in
adc
cmp
das
ja
push
pop
stos
arpl
stc
popf
out
push
js
mov
out
push
pop
push
imul
rol
and
sub
in
or
mov
inc
mov
daa
or
fsubr
cmp
iret
sub
andl
xchg
ja
adc
rcll
jge
pop
fdiv
xor
jle
or
out
mov
out
fdivs
clc
adc
sbb
jmp
pop
ljmp
push
xchg
out
adc
push
bnd
mov
mov
xchg
or
push
hlt
aam
push
sub
pop
data16
push
pop
jns
cld
cmpsl
call
jmp
negl
leave
cmp
and
mov
adc
and
xor
cld
jge
adc
cmp
test
int3
popa
or
mov
lods
in
jns
lock
mov
push
sti
aam
push
out
and
icebp
mov
aad
pop
pop
stos
icebp
push
out
jle
ds
rcll
into
xchg
int
loopne
outsl
cmp
cmp
dec
aad
ja
xchg
cmp
loope
ds
pop
cld
push
hlt
dec
dec
stos
pushf
cmpsl
sti
and
lods
test
aas
mov
aas
adc
pop
jg
inc
cltd
cmp
and
dec
hlt
or
sub
dec
testl
push
orb
push
lock
pop
aam
loopne
mov
out
movsb
jle
push
adc
std
dec
sbb
push
or
jmp
mov
and
cmpsb
orl
out
mov
popf
test
or
nop
add
das
movsb
ficomps
adc
dec
cmp
add
iret
out
xor
loope
adc
shrl
and
add
call
into
push
pop
movsb
xlat
add
arpl
icebp
mov
cmp
cmpsl
mov
mov
xor
ds
mov
sbb
mov
mov
scas
jae
mov
pop
addr16
loop
add
inc
cmpsl
sub
and
imulb
fs
pop
ja
notl
test
rcrl
scas
sub
insl
test
push
cmpsl
add
sbbb
lods
insl
jp
insl
adc
cli
mov
adc
not
dec
std
jg
dec
std
jg
dec
div
out
popa
lods
or
sub
scas
icebp
popa
mov
cmp
mov
mov
pcmpeqd
sub
xchg
imul
mov
es
or
jae
jo
and
dec
push
adc
mov
or
push
or
pop
pusha
idiv
imulb
mov
sub
or
cs
add
das
icebp
mov
xchg
test
jmp
xchg
std
mov
pop
jo
outsb
xor
lds
scas
xchg
enter
mov
push
pop
iret
xor
ficomps
adc
pop
and
inc
xor
out
outsl
cwtl
adc
hlt
push
xorl
out
repz
jg
sbb
sub
xor
das
mov
popf
in
sub
cli
pop
out
std
aam
nop
test
outsl
or
xor
addl
test
push
inc
sbb
in
jnp
mov
cmp
aam
movsl
sbb
addb
repz
fadds
inc
stos
lret
cmp
jg
dec
jmp
cli
cmp
sub
cmpsb
push
add
daa
lea
daa
push
pop
iret
cmc
and
sbb
and
lods
jns
adc
lcall
sbb
inc
inc
sar
popl
and
sub
inc
inc
inc
inc
adc
pusha
out
loope
stc
jg
mov
adc
in
mov
mov
repz
cmp
adc
jnp
xchg
push
std
insb
fs
pop
xor
int3
cmp
or
rcrb
ret
inc
fidivrs
aas
dec
jo
mov
sbb
nop
adc
jl
push
pop
push
outsl
scas
jl
arpl
jo
outsl
dec
cmpsb
mov
sahf
jo
jmp
cmpsl
cmp
mov
out
sti
mov
std
and
dec
xor
es
ret
pushf
jg
sbb
inc
or
push
sbb
aaa
xchg
dec
imul
sarl
sbb
dec
inc
jl
push
jl
inc
push
test
scas
sbbl
mov
cmp
notb
das
add
inc
add
mov
jle,pn
mov
jg
adcl
test
aaa
xor
sub
add
sbbb
outsl
int3
shlb
mov
inc
push
out
adc
int3
and
xor
icebp
xor
in
lahf
out
cmp
stc
icebp
aam
cmp
test
das
inc
push
out
cmp
push
lret
out
mov
or
jae
out
sub
xchg
shrb
add
and
mulb
lahf
mov
add
movsb
testb
bound
inc
lret
push
add
add
ror
jbe
jb
dec
sub
push
mov
cli
cmpsl
dec
stc
jp
or
bound
mov
dec
pop
lock
pop
rorb
gs
test
xchg
imul
cmp
pushf
jnp
cli
inc
mov
adc
xchg
xor
cmp
inc
setbe
add
addb
stos
dec
dec
xchg
or
bound
push
daa
inc
lret
xchg
cmpsl
xchg
mov
cwtl
aad
xor
rcrl
cmc
and
stc
sub
addr16
sub
xchg
ret
pop
add
xchg
in
outsl
test
jl
and
mov
jb
cmp
scas
out
jno
fsubrs
push
pop
xor
jecxz
add
in
cwtl
xorb
inc
or
pop
jg
clts
je
push
sbb
add
sub
outsb
cmpb
cmpsb
sub
or
std
mov
push
push
neg
adc
dec
cmp
push
mov
cmp
sbb
add
ret
cmpsl
dec
add
mov
fs
fsts
je
aam
or
scas
dec
mov
pop
cwtl
jne
pop
push
add
mov
jno
out
mov
push
or
dec
sbb
mov
jle
jg
mov
push
iret
outsl
add
movsb
and
mov
lea
and
sbb
call
xchg
arpl
loop
lds
lret
pop
jne
subb
insl
xor
cmpsb
or
outsb
mov
in
push
jp
jmp
push
xor
adc
lcall
add
xchg
into
fadds
and
or
mov
jne
enter
lock
movsb
daa
xor
out
or
push
cmpsl
sar
cmp
push
mov
lret
sbb
mov
mov
inc
xchg
push
mov
xchg
into
outsl
jne
jo
out
loop
dec
mov
xchg
push
or
or
mov
pusha
dec
lcall
test
sub
inc
mov
cmpsb
mov
jp
pop
push
sbb
xor
cs
nop
lret
dec
ret
sub
adc
lods
nop
pop
mov
mov
lret
jmp
and
rclb
cmp
mov
je
imul
xchg
mov
push
enter
data16
jmp
jnp
aaa
std
icebp
xchg
scas
dec
sub
ljmp
ss
jo
icebp
and
ljmp
xchg
adc
jle
dec
xchg
leave
inc
pop
and
fstpt
pop
dec
aas
in
mov
sahf
adc
dec
dec
mov
mov
push
sbb
mov
fcompl
mov
adc
jne
add
sbb
test
or
lods
lret
dec
sti
xor
call
lods
add
sub
push
sbb
xchg
ret
dec
mov
mov
adc
dec
out
mov
adc
leave
and
jg
xchg
jno
ja
imul
mov
out
call
dec
cmp
iret
sub
sbb
imul
xchg
out
sub
mov
loopne
pop
lret
sbbb
push
xor
ljmp
mov
fldcw
lea
fmull
xor
add
ror
in
stos
data16
inc
ret
pop
movsl
push
cmpsb
sub
fbstp
or
sbb
xchg
repz
stos
filds
dec
icebp
movsb
xchg
movsb
dec
pop
jecxz
dec
addb
pop
insl
dec
xchg
cmc
mov
movsl
gs
scas
mov
mov
repz
jbe
mov
mov
outsb
xbegin
jb
mov
mov
push
je
mov
fcompl
xchg
in
out
outsb
mov
cli
sub
movb
xchg
mov
mov
cmpsl
push
addr16
out
lock
in
push
jg
xchg
add
pusha
lahf
pop
sub
jns
scas
mov
push
insb
pop
mov
std
daa
sahf
pop
sbb
and
and
out
jp
sahf
push
in
aam
adc
lea
and
scas
mov
add
sub
and
adcl
test
aam
lret
push
ljmp
cmc
xor
mov
cmp
rorb
rclb
inc
cmpsl
cmp
xchg
mov
cli
jg
cld
xchg
lods
cld
sbbb
or
out
mov
push
data16
cltd
test
jge
loop
jge
dec
je
cs
sub
xchg
in
movsl
out
cwtl
mov
jecxz
push
or
push
mov
or
ret
dec
mov
idiv
mov
cmpb
inc
push
sub
cmc
jnp
pop
jno
add
out
xchg
rcrl
jge
or
and
lods
push
dec
or
cmp
mov
xchg
cmc
cmp
cmp
mov
outsb
lods
adc
mov
jmp
and
mov
pop
push
lds
mov
xor
mov
jnp
not
aas
sub
xchg
or
jo
pop
xchg
mov
or
xor
xor
loope
test
movsb
aam
jle
sub
jbe
dec
dec
test
arpl
sbb
xchg
in
cs
movl
test
pop
lret
ds
mov
lcall
push
ss
xor
push
pop
cmp
in
inc
mov
pop
outsb
mov
outsb
inc
and
outsl
add
inc
push
in
jl
mov
mov
pop
or
jl
imul
cmc
icebp
dec
js
xchg
call
adc
or
int
out
push
in
jno
jbe
cmc
mov
outsl
or
or
xchg
fcomip
push
daa
push
mov
jp
mov
fdivrp
and
dec
sbb
cmc
std
sub
and
xchg
movsl
fadds
cmc
lock
ja
lds
mov
jp
mov
hlt
adc
addb
lahf
xor
add
aad
lahf
out
adc
xchg
pop
sbb
pop
jg
aam
lahf
popf
xchg
dec
inc
adc
push
mov
xchg
cmp
mov
ljmp
pop
mov
call
aas
jp
aas
or
lods
dec
cmc
aam
fnstsw
pop
cmpsl
pop
push
cmp
popa
sub
cmpsl
push
sub
lods
shrb
xlat
mov
or
movb
rcrb
aas
mull
jmp
js
clc
adc
testb
cwtl
sbb
addr16
jge
jl
rclb
repnz
data16
movsb
adc
mov
fcoml
cld
xchg
popf
cmc
rcl
xchg
xlat
pusha
add
mov
xchg
movsl
and
push
out
faddp
in
loope
fldcw
inc
cmp
test
imul
mov
fwait
jmp
es
mov
aad
leave
mov
lods
pop
jmp
jb
jns
in
fstpl
les
fidivrs
or
pop
mov
sub
jne
xchg
rcll
jns
jg
xchg
mov
test
roll
jne
mov
mov
adc
and
sbb
ret
jns
test
test
sbb
mov
int
fisttpll
pop
ror
push
sbb
xor
mov
xchg
xor
lock
xchg
lds
popf
incb
or
xchg
loope
inc
popa
jae
fmull
add
mov
inc
dec
xor
xor
out
sub
push
add
xor
out
inc
test
cmpsb
push
xchg
push
mov
adc
mov
mov
or
in
inc
jge
xchg
lock
sub
or
cli
into
sub
push
lods
mov
adc
lcall
mov
dec
jp
cs
inc
xchg
sub
mov
test
pop
fists
inc
jle
inc
jecxz
push
sub
push
or
pop
lret
push
xchg
and
movb
mov
lret
adc
test
push
lods
out
loopne
addb
nop
and
movsb
int
mov
sbb
ja
pushf
popf
sahf
pop
imul
shll
mov
aad
push
fistl
fdivrl
lods
pop
mov
in
insb
cmp
inc
outsb
push
mov
add
xchg
xchg
int
repnz
loopne
mov
stos
out
dec
pop
mov
in
xor
mov
addb
dec
repnz
cli
repnz
jne
mov
sti
push
rorl
cmp
mov
cld
sub
mov
pop
fildl
das
sahf
imul
insb
adc
adc
mov
adc
enter
dec
dec
pop
mov
cmpsl
lea
jp
or
inc
sti
inc
subb
mov
test
jl
adc
es
xor
dec
cmp
in
sbb
sbb
sbb
push
test
add
cmp
mov
sbb
mov
sub
mov
rolb
mov
xchg
push
daa
add
not
out
mov
arpl
mov
idivl
notb
xor
cld
dec
lds
stos
mov
mull
daa
sbb
mov
mov
imul
or
movsl
adc
cmpsb
xchg
sub
adc
rcr
jmp
jnp
test
sbb
shl
out
cmp
lahf
insl
mov
add
xchg
or
inc
cmp
cmpsb
jmp
out
rolb
sub
iret
and
clc
aaa
test
or
in
rolb
arpl
adcb
movsl
cmp
in
jns
push
test
mov
sti
out
inc
imul
cmpl
cwtl
rorl
sbb
or
jns
outsb
aad
adc
cmp
ret
mov
mov
enter
mov
cmp
jg
adc
xchg
movsb
mov
mov
jmp
push
repnz
xor
jae
movsl
fimuls
sub
add
cmp
jbe
movsb
pop
insl
pop
dec
mov
xor
push
std
or
jns
jl
fdivrl
push
outsb
dec
sahf
rorl
addr16
popf
pop
loope
lea
push
inc
ss
mov
push
mov
aas
xchg
xchg
jb
ss
outsb
aam
rcrl
leave
ds
enter
push
xchg
pop
add
outsl
pop
cmp
outsl
adc
out
movsl
sub
sub
adc
lcall
cwtl
pop
cmp
or
ffree
icebp
aaa
xchg
jae
and
inc
imulb
mov
clc
pop
fcomi
insl
adcb
shll
clc
push
xor
jle
repz
sbb
faddl
lods
push
cmpsb
inc
imul
jae
ss
test
mov
push
icebp
fmul
mov
sbb
add
pop
ja
or
add
adc
xchg
iret
sbb
xchg
cli
jno
mov
fbstp
icebp
jg
sbb
push
jle
test
push
pushf
ret
sub
sbbl
mov
lret
or
aas
dec
ret
fsubrl
out
out
cs
sub
bound
lahf
jnp
jns
dec
mov
test
dec
jp
jecxz
bound
mov
outsl
loop
fimuls
cli
push
fs
mov
and
jno
sbb
xor
lret
push
push
adc
push
mov
or
cmpsb
rolb
xchg
xchg
fxch
insb
cmp
push
imul
mov
push
stos
add
test
subl
call
lea
push
and
into
rcll
ret
adc
dec
popf
lahf
int3
xor
out
lds
add
mov
jnp
sub
mov
or
aam
jg
jl
aaa
mov
mov
push
jnp
mov
mov
jb
cmp
in
and
test
or
pop
mov
shrb
jno
mov
scas
cld
out
jl
mov
xor
nop
es
test
arpl
int
jae
adc
sbb
inc
lods
mov
bound
scas
dec
sarl
pop
mov
fidivrs
aas
jmp
or
fildl
dec
and
and
shrl
adc
jnp
xchg
xor
lods
xchg
pop
out
add
jnp
aad
cmpsl
lods
mov
sub
xchg
insl
inc
adc
iret
rcr
inc
add
stos
call
sbb
xchg
frstor
lret
xchg
add
idiv
xchg
xor
dec
jbe
jg
movsb
mov
push
popa
rorl
mov
adc
popf
mov
cmp
jo
pop
je
cmpsb
shlb
imul
ror
sub
inc
sub
fisttpll
pop
mov
or
mov
push
cmpsb
sbb
jge
push
xchg
inc
inc
cltd
lods
cmp
mulb
shll
add
lret
mov
xchg
aam
ds
inc
jne
ja
jmp
add
cli
fucomp
mov
push
ja
jb
cs
dec
sub
shlb
cltd
nop
xchg
jp
test
xchg
in
push
xor
test
aaa
cmp
ret
lods
negl
leave
loopne
mov
leave
scas
pop
sahf
push
js
adc
daa
mov
and
jno
mov
lcall
rcrl
pop
cmpsb
inc
cmp
cmp
pop
mov
rcll
pushf
xchg
hlt
jmp
cmp
jbe
inc
and
fnclex
dec
fs
mov
das
repz
ds
pop
push
fsubs
add
out
lock
popf
cli
out
pop
pop
adc
adc
int3
jl
repz
dec
push
pop
push
jmp
and
mov
jle
aas
mov
test
push
call
sub
loopne
sbb
xchg
dec
cwtl
pop
jb
ja
ds
das
sub
mov
or
pop
loopne
mov
xchg
xor
mov
sub
es
and
push
daa
mov
push
push
popf
xorl
popf
sbb
leave
jae
loope
subb
xlat
sub
mov
push
les
jb
bound
fdivl
push
fcomps
je
movsb
jge
mov
adc
movsb
xchg
xchg
leave
int
aam
repnz
test
leave
cmp
pusha
mov
dec
das
lcall
fists
push
mov
scas
push
push
movsl
lea
gs
push
cmpsl
pop
or
mov
ljmp
push
les
xchg
adc
dec
push
shlb
stos
inc
sub
pop
stos
lock
fstps
inc
daa
ret
rcrb
inc
das
or
inc
out
pop
out
cld
imul
enter
jle
pushf
fnstsw
inc
mov
mov
aad
out
js
sub
add
or
ljmp
xchg
push
sub
imul
pop
jae
rcll
push
inc
adc
xchg
xchg
jp
and
jae
les
xchg
pop
jg
scas
and
lods
in
cs
sbb
push
ds
pop
mov
jge
insb
outsl
popa
add
inc
fwait
test
rcrl
jne
cmpsl
mov
pop
xchg
dec
dec
mov
shlb
jmp
dec
lret
aas
insl
icebp
sarl
dec
inc
dec
int3
add
addb
out
movsl
jmp
rclb
mov
xor
setns
popf
jno
jo
inc
fnstenv
les
int
repnz
daa
rorl
ds
cmp
mov
sbb
mov
mov
jge
or
imul
hlt
inc
aas
adc
sysexit
sti
adc
add
ljmp
and
push
push
in
js
movsl
dec
shr
fidivrl
out
xor
ljmp
hlt
push
js
movsb
addr16
jo
test
enter
xlat
iret
sarl
dec
push
sbb
xor
push
mov
aam
and
sub
cmpsl
sti
push
sbb
pop
sbb
out
pop
jnp
jl
int
scas
sbb
xchg
dec
adc
out
divl
sbb
or
mov
fs
xchg
and
loopne
out
lock
outsb
xor
lcall
std
stos
insl
aas
rcr
sbb
xlat
js
neg
sub
hlt
test
push
pop
int
push
or
repz
xor
clc
fimuls
insl
sub
jl,pn
ret
adc
jne
insl
mov
sub
xchg
out
add
mov
mov
and
aam
in
sub
loop
aad
pop
push
loope
push
mov
sti
dec
aam
pushf
data16
sub
sbb
leave
jle
push
loop
out
xchg
ret
imul
jno
push
and
ret
mov
outsb
loope
shl
mov
stos
rep
lea
cmp
das
fildll
xor
adc
mov
hlt
jo
test
ficomps
rolb
fnsave
arpl
data16
ds
xor
test
iret
in
mov
cmp
cld
mov
aas
xor
and
hlt
subb
mov
retw
jle
pop
outsl
mov
lods
scas
addb
nop
or
dec
mov
cs
jne
call
add
push
cmp
outsl
in
iret
out
adc
and
sarb
rcl
fwait
into
sub
das
lcall
pop
fs
stc
pop
lock
outsl
cs
pop
data16
dec
out
and
popf
cmc
xor
jge
push
mov
call
out
fisttpl
out
pop
rcr
mov
ror
repnz
inc
xchg
stos
adc
sbb
jmp
sub
inc
repz
push
jo
pop
outsl
out
cmpsl
push
mov
nop
daa
and
jb
movsb
out
xor
xor
mov
insl
sbb
inc
adc
jmp
les
xlat
adc
xchg
adc
sbb
mov
sbb
iret
mov
js
cmpb
ja
cld
leave
rorl
pop
xchg
mov
repnz
mov
enter
inc
push
inc
imul
inc
shl
loopne
adc
ja
ret
lret
loope
ja
aam
jb
inc
jnp
ret
cmp
add
shlb
lcall
sub
fdivrs
cmpsb
jle
inc
bound
xchg
xor
push
repz
jl
movsl
stos
pop
ficompl
das
insl
or
roll
sbb
outsb
xchg
aam
fs
mov
adc
repz
lods
xchg
sbb
lea
iret
jp
xor
pushf
loopne
js
and
xchg
movsl
jnp
in
cmp
insl
aaa
js
pop
fsub
dec
fcomps
fs
movsb
jp
or
shlb
xchg
xchg
mov
pop
or
pop
and
pop
add
cwtl
jecxz
jae
rcr
and
andl
ljmp
xor
jge
dec
loope
or
inc
out
cld
xchg
mov
push
loop
sub
outsl
paddq
sub
add
cmp
inc
daa
fs
sub
fcomi
fldl
insl
fistpl
outsl
and
insb
popf
add
pop
rclb
jp
gs
nop
imul
add
add
xchg
push
frstor
gs
jno
jp
fistps
aam
les
sub
dec
in
shlb
push
js
scas
bound
push
sub
adc
das
xchg
lret
adc
hlt
inc
pop
les
jg
and
adc
dec
daa
cwtl
xor
aas
sub
push
mov
sub
xchg
push
and
insb
aad
pop
sbb
lods
loop
subl
dec
dec
fimuls
nop
and
mov
cmpsl
cwtl
inc
push
push
lods
into
xchg
test
add
rorb
sbbl
xor
stc
dec
and
aas
repnz
js
dec
movsb
lods
loop
mov
mov
or
movl
pop
jp
mov
dec
lds
roll
dec
aaa
bound
test
scas
adc
adc
push
dec
add
mov
jmp
idivl
ss
insl
shlb
scas
push
lods
std
lret
pop
dec
les
xchg
cmc
mov
mov
pop
jne
subl
insb
and
iret
dec
cmp
arpl
sub
test
flds
push
in
pop
dec
pop
xchg
sahf
les
mov
sbb
in
cmpsl
hlt
test
icebp
jge
lods
push
mov
and
in
insb
scas
push
or
mov
mov
cmpsl
hlt
mov
push
insb
xor
xor
or
in
into
dec
adc
movsl
or
loopne
repnz
imul
popf
sbb
or
ljmp
insb
jmp
sub
int3
xor
inc
clc
mov
hlt
mov
test
repnz
jb
mov
dec
sbb
imul
mov
insb
decl
cs
ds
pop
mov
lea
sbb
sub
pop
addr16
mov
push
insl
jnp
adc
and
stc
flds
int3
aam
stos
out
push
out
add
loopne
hlt
pop
inc
sbb
inc
lods
or
jo
sbb
and
cmp
cli
and
pushf
cmp
adc
sub
ds
mov
sub
test
in
outsb
cld
aas
fwait
ret
add
sbb
and
add
xor
cmp
cmp
test
paddusw
repnz
fwait
dec
pop
mov
enter
aaa
divb
xorb
add
xor
xchg
inc
aad
jp
testl
aas
or
roll
mov
rorl
sarb
fmul
test
xchg
dec
inc
jb
jo
jo
hlt
xor
cmp
or
fwait
loopne
or
gs
push
xchg
sub
adc
into
gs
mov
cmpsl
cmpl
lds
gs
shll
call
jns
mov
das
arpl
test
jo
insl
das
xor
cmpsb
sub
sbb
out
lret
ss
leave
int
jo
or
in
pushf
or
mov
int3
xchg
pop
inc
repnz
dec
data16
fs
jnp
jno
mov
mov
and
pop
jg
popa
jne
stos
push
or
popa
dec
xchg
mov
inc
push
les
in
xchg
pop
pop
dec
pop
insl
ficoml
pop
xor
jl
ds
dec
adc
lods
inc
insl
bound
repz
outsl
xor
lock
inc
enter
inc
mov
cmp
inc
fisttpll
xchg
shlb
cmp
mov
xchg
out
nop
loopne
adc
jmp
lods
mov
xchg
sub
negl
xchg
sub
popf
add
icebp
mov
nop
insb
xchg
pop
cmp
sbb
pop
fnsave
out
xchg
dec
sarl
lahf
jge
aam
jl
data16
cmc
jge
xor
ret
cs
les
clc
adc
test
xor
xor
pop
ja
adc
xorl
pop
mov
fcomp
pop
pop
test
add
rclb
xlat
iret
sti
fs
mov
pop
sbb
es
getsec
popf
ss
adc
dec
pop
push
leave
mov
fcmovnb
outsb
outsb
sti
pop
xor
or
push
xchg
dec
ljmp
inc
inc
imul
xchg
movsl
aam
inc
fdivrs
into
push
jno
popa
rolb
mov
icebp
lret
mov
and
jg
mov
fs
sbb
stc
shl
icebp
push
fistpll
push
repnz
pop
ror
or
jle
loope
stos
fsubrl
dec
lea
js
mov
mov
mov
mov
frndint
jecxz
push
insb
jae
jns
mov
push
adc
jl
sub
aaa
rolb
ret
push
sbb
sahf
xchg
and
stos
addb
pusha
xor
cmp
xor
cld
and
ja
cmp
mov
sub
gs
fdivs
loopne
and
pop
subb
mov
xor
cwtl
xor
sbb
lock
lods
test
ss
into
cmovb
test
add
mov
xchg
hlt
cmp
out
repz
mov
pop
mov
neg
insl
add
fidivrs
push
cld
test
sahf
in
push
mov
hlt
xchg
popa
mov
inc
mov
loop
repz
aas
push
push
sbb
icebp
jge
pop
lea
sub
mov
xor
dec
xor
fwait
or
aam
xchg
and
push
out
dec
mov
pop
lods
aas
repz
add
stc
les
mov
jl
subl
pushl
adc
shlb
inc
mov
test
icebp
loop
mov
das
push
fsub
insb
inc
sub
das
mov
push
ficoml
mov
push
push
jecxz
imul
rcll
adc
shl
loope
xchg
and
add
fbstp
lret
jecxz
dec
dec
or
mov
sub
pop
xor
push
lods
and
xchg
jns
jno
scas
lret
mov
sub
aam
jmp
rorb
out
or
nop
cld
xor
testb
in
pushw
or
cmpsl
pop
xor
mov
cld
adcb
lock
push
adc
cmpsb
fucom
adc
sub
ds
jno
pop
loop
cmc
aam
sbb
fistps
jo
inc
dec
add
dec
rolb
pop
sub
lret
mov
mov
jp
insb
mov
push
add
dec
cli
pop
push
shrl
mov
and
or
pop
ss
add
jns
mov
mov
xchg
jle
test
push
sti
in
das
or
mov
fwait
int3
mov
mov
jp
shll
das
daa
js
in
jns
adc
arpl
dec
inc
ljmp
pop
clc
mov
incb
stos
mov
mov
nop
clc
add
test
jo
ret
and
sarl
push
adcb
int3
subb
out
roll
push
xchg
xlat
je
js
inc
stos
pop
mov
imul
ds
xchg
cli
jge
leave
adc
sbb
sbb
jo
es
mov
scas
or
inc
jno,pt
pop
std
out
pop
scas
push
adc
jbe
insb
arpl
adc
sarb
ss
mov
sub
ret
scas
mov
popf
test
inc
and
dec
mov
mov
add
ss
dec
sub
daa
mov
stos
mov
xlat
std
sbbl
sub
push
loope
push
or
cmp
pushf
jg
aad
fistpll
jp
dec
sbb
cmp
inc
mov
scas
mov
mov
imul
out
iret
in
sub
lds
repnz
cs
jp
cmp
sub
test
jg
xchg
rcrl
fistpll
lds
adc
mov
inc
add
in
imul
inc
push
jbe
and
xor
push
es
mov
cmp
sub
aas
pop
out
in
rorl
jns
stos
push
pop
adc
push
test
mov
leave
fistl
mov
pusha
sub
or
push
rcr
test
sub
stc
nop
cmp
jg
cmp
movsb
ja
jmp
in
jb
inc
ret
cmp
lods
mov
icebp
pop
pop
pop
sub
test
or
std
jecxz
in
pop
lods
sysret
dec
sub
cld
inc
movsb
add
add
js
adc
mov
fucomi
adc
adc
outsb
cmpsb
inc
mov
lahf
icebp
jns
int3
pop
outsb
decb
cld
add
mov
push
cmp
in
stc
lock
pop
orl
inc
cmp
adc
adc
sub
out
jp
cmp
shr
jo
addr16
mov
or
das
xor
enter
dec
cld
hlt
cmp
mov
xchg
adc
repnz
mov
lea
xchg
nop
lret
aaa
xchg
sbbb
jns
push
xchg
push
xchg
add
mov
jl
cmpsb
and
cmp
imul
cmp
stos
std
mov
movsb
jecxz
inc
scas
mov
sar
cmp
jb
int
mov
ljmp
or
loope
hlt
lock
mov
or
push
sub
aas
mov
add
push
xchg
addr16
jl
ss
sbb
mov
loopne
xchg
stc
out
add
repnz
fnstsw
aas
aad
mov
stos
xchg
dec
xchg
into
arpl
pop
jo
fmull
push
shlb
pop
popf
out
outsb
leave
daa
jp
dec
and
fwait
pop
sub
xor
cld
mov
push
sub
mov
and
in
mov
ret
xlat
aas
xor
adc
stc
dec
mov
mov
test
cmp
add
jns
scas
and
cmp
movsl
mov
sahf
in
add
pop
in
and
movsl
sbb
fnstsw
and
and
out
insb
mov
leave
mov
mov
rcll
incb
mov
addr16
nop
jmp
out
mov
xchg
cmp
adc
adc
cmc
xchg
insl
adc
sahf
pop
sarl
inc
adcb
dec
and
add
push
xchg
xor
mov
out
outsb
push
jae
push
nop
and
aas
xchg
xchg
pop
mov
pop
xchg
mov
and
lcall
adc
mov
repz
adc
out
cmp
add
push
mov
sub
inc
inc
roll
sub
sarb
push
adc
cmp
mov
fsqrt
jno
xor
cmc
sbb
xor
adc
addr16
mov
ss
scas
lea
std
xchg
fwait
pop
inc
out
out
push
cmpsl
push
cmp
repnz
fstpt
repnz
insl
adc
and
test
pushf
inc
mov
add
les
mov
lahf
or
shll
imul
es
out
daa
cmp
andl
xor
fs
mov
test
jbe
pop
scas
push
adc
aam
fldenv
icebp
gs
iret
and
mov
ss
mov
into
fsubp
mov
out
mov
jb
sub
test
jl
jg
sub
lods
clc
mov
cltd
pop
push
popf
sub
mov
adc
stos
mov
lahf
sbb
add
lahf
inc
inc
test
mov
mov
adc
gs
jge
pusha
shrb
js
les
es
mov
mov
pop
mov
pop
repz
push
inc
sub
mov
aam
in
mov
repz
pushf
fstl
sub
shll
shrl
aam
mov
stos
nop
jge
add
lret
mov
arpl
add
mov
xor
sti
xor
nop
or
adc
lret
outsl
sbb
test
enter
jl
sub
sbbl
and
adcl
es
push
sbb
push
inc
cld
adc
popf
and
enter
insb
inc
arpl
ds
cmpsl
xchg
repnz
inc
les
xor
lock
pop
jbe
cli
addb
in
in
outsb
pusha
sbb
xchg
je
pop
lcall
add
add
repnz
pop
and
push
sub
or
pop
inc
cmp
lret
and
xchg
jle
mov
inc
insl
nop
jo
cmc
xor
sbb
stos
push
jg
mov
ss
es
in
ret
test
mov
shll
je
pop
pop
xchg
out
dec
mov
inc
mov
data16
adc
ljmp
cs
ljmp
jbe
cmp
cmpsb
outsl
pop
sub
cmpsl
cmp
fiadds
jle
xchg
cltd
pop
mov
lds
push
dec
and
mov
mov
jp
add
repnz
xor
test
cmpsl
pusha
xlat
scas
pop
ret
js
insb
outsl
insb
cmp
xorb
push
xor
push
shll
xchg
adc
fwait
pop
xchg
cmp
adc
mov
jne
push
and
dec
push
int3
icebp
das
fcmovnb
adc
pop
or
aam
jge
enter
pop
out
sub
shlb
jecxz
mov
mov
mov
ret
lock
jns
mov
cmp
shl
mov
xor
js
xchg
adc
test
sbb
cmpsb
xchg
loopne
mov
std
mov
jns
push
idivb
nop
dec
mov
ss
imul
les
mov
inc
lret
mov
push
int
pop
aaa
fs
in
jmp
sub
insb
js
sbb
scas
xchg
mov
in
cmp
jne
gs
mov
add
mov
adc
xchg
or
and
push
loop
mov
loopne
hlt
or
scas
iret
sub
iret
es
sub
leave
lret
xor
repz
test
jnp
in
mov
repz
or
arpl
xchg
jle
adc
pop
bound
mov
mov
out
jg
add
jg
mov
sbb
or
sbb
outsb
sub
mov
les
incb
scas
cmpsb
jo
xchg
fidivrs
in
jnp
es
adcb
mov
leave
push
mov
or
jecxz
add
imul
push
or
pshufw
cmpsb
xchg
xlat
dec
es
out
mov
mov
inc
adc
outsb
aas
dec
cmp
jl
sbb
or
cmp
shrl
je
jb
scas
jb
and
movsl
push
sti
cwtl
cmp
aas
outsb
fnstsw
jno
movb
cmpsb
jne
or
or
negb
adc
aas
mov
orl
pop
lea
jp
cmp
add
cmp
jno
xor
mov
mov
or
pop
pop
push
ret
mov
adc
push
in
push
inc
repz
daa
icebp
leave
push
adc
jmp
cmp
pop
out
xchg
mov
lea
lock
and
jae
pop
pop
sub
popa
je
test
pop
aas
cmp
sub
and
popa
or
jnp
aad
jmp
add
xorl
call
sub
jo
cs
mov
mov
or
jge
in
push
sar
sti
xor
sbb
or
dec
popa
push
jl
sub
gs
scas
test
outsl
sbb
in
cmp
push
mov
push
out
jo
in
mov
aas
cmpsb
xor
push
in
dec
jp
adc
ficoms
repnz
mov
mov
cltd
mov
popf
xor
cmp
testb
mov
push
xchg
mov
mov
inc
inc
adc
mov
dec
adc
test
push
and
adc
mov
movsl
and
dec
stos
dec
jle
and
xchg
add
jbe
and
mov
sbb
test
data16
cli
mov
inc
push
xor
dec
fildll
xor
xchg
sti
mov
jge
enter
enter
push
mov
push
xchg
or
xlat
fidivrl
fbld
lea
dec
test
jns
out
cwtl
pushf
mov
lds
ljmp
or
js
nop
ljmp
mov
mov
lcall
ret
ja
sbb
add
outsb
push
je
mov
mov
pop
xor
sub
mov
jns
push
movb
mov
sahf
jl,pn
andb
mov
shll
lock
lret
mov
std
xchg
les
jnp
sub
filds
jl
lret
imul
lods
bnd
cmp
sub
std
xchg
imul
insl
xor
mov
fsubl
ss
clc
js
mov
inc
jl
paddb
inc
push
sub
mov
xchg
cld
in
frstor
imul
mov
inc
mov
ficompl
adc
mov
add
mov
push
push
icebp
lcall
stos
dec
leave
dec
pop
je
mov
cmp
loopne
popa
sub
fsubrs
pop
mov
cmp
add
imul
loope
or
call
test
xchg
call
ss
push
sbb
push
gs
cld
jp
and
ret
xchg
dec
adc
mov
es
insb
pop
xchg
ja
xchg
push
adc
les
stos
inc
test
add
xchg
sti
dec
lea
bound
jb
mov
scas
movl
fs
adc
xchg
xchg
inc
pop
shl
test
xchg
ja
and
sbb
mov
cmp
xchg
xchg
and
or
fiaddl
jo
adc
lods
mov
out
icebp
mov
dec
add
mov
sub
std
adc
mov
xchg
sub
ficoml
xor
cmp
gs
sbb
stos
lds
xchg
mov
mov
or
fildll
enter
xor
cmp
jb
inc
and
and
inc
pushl
int
mov
push
push
push
aam
lahf
or
aas
push
test
rcl
jg
std
add
incb
nop
bts
sub
imul
pushf
xchg
mov
sbb
xorl
cli
push
mov
push
mov
pop
xor
cmp
push
add
gs
decb
sbb
nop
xor
pop
inc
es
or
or
out
pop
dec
cmp
popa
movsb
xor
ret
mov
outsb
or
or
movsb
xchg
bound
add
jle
inc
add
sub
ret
mov
movsl
sbb
repnz
lods
dec
mov
jl
js
mov
cmp
cld
out
or
xor
fwait
icebp
mov
outsb
imul
aad
test
fstpl
aas
push
adc
mov
dec
inc
jl
add
insb
mov
and
push
nop
ficoms
jmp
or
inc
js
cmp
fsubrl
mov
rcrl
and
xchg
mov
out
test
dec
lods
lock
xor
scas
mov
jp
cmp
push
insb
fsubrs
ja
jbe
scas
roll
movq
mov
or
andl
push
xchg
pusha
adc
fbld
pop
and
fidivrl
sub
push
jb
ss
movsb
stc
aas
fstpl
and
dec
jae
sbb
stc
jne
insb
and
outsb
sub
cs
jg,pn
les
lcall
leave
lods
inc
xchg
stc
dec
and
jg,pt
hlt
or
mov
pop
shl
cmp
aam
jp
or
pop
sets
xchg
xor
cmp
push
cld
cmp
jle
rcr
sub
pop
or
push
out
lock
mov
push
push
nop
xor
mov
data16
insb
and
xor
xchg
nop
mov
mov
nop
test
xor
repz
mov
pop
ljmp
popa
inc
mov
dec
ds
icebp
mov
shrl
popf
mov
ret
aas
mov
push
jmp
xchg
add
pop
cmpl
pop
test
stos
or
inc
aas
xlat
fistpl
int3
inc
sbb
mov
js
in
movsb
sbb
sbb
push
movsl
push
dec
daa
cmp
pop
mov
ja
enter
movsb
es
aam
lods
add
or
jl
mov
imul
mov
sub
clc
enter
scas
rcrb
std
dec
arpl
cmp
jle
adc
add
mov
sbb
xor
cmc
mov
je
fisubrs
popa
aad
outsb
mov
xchg
in
or
or
cs
test
cmp
xchg
inc
cmpb
xlat
jge
mov
push
ss
push
pusha
inc
mov
push
sbb
push
inc
inc
xchg
cmp
test
movsl
adc
mov
mov
arpl
and
xor
out
jno
xchg
sub
mov
pop
cs
fisubrl
xchg
and
neg
fsubrs
push
aam
stos
jecxz
cmpsl
mov
mov
adc
cwtl
lods
or
je
and
inc
push
stos
dec
inc
push
ds
inc
mov
jecxz
and
adc
or
sub
xchg
or
mov
icebp
into
daa
rol
lcall
sarb
lcall
mov
mov
rcll
andb
lock
adc
dec
ss
or
xor
jno
jg
xchg
and
pop
jnp
fmuls
cs
mov
test
adc
jecxz
call
mov
adc
movsl
cmp
add
in
cmp
sbb
push
jl
daa
imul
lds
stc
jle
mov
or
xor
xor
mov
out
or
pop
sbb
and
xor
and
cmp
nop
jle
aam
dec
pop
and
ret
faddl
lret
xchg
iret
dec
insl
sbb
cwtl
xor
pushf
dec
repnz
jle
pop
xchg
pop
lret
clc
xor
int3
data16
pop
rolb
cld
daa
jnp
insl
cmpsb
clc
pop
mov
mov
rclb
mov
gs
fistpll
or
or
sar
test
mov
xor
pop
jle
lret
icebp
push
mov
insl
mov
mov
xor
in
les
mov
push
in
das
daa
dec
inc
in
add
call
jp
mov
add
jmp
rcll
pop
inc
push
mov
inc
imul
add
push
dec
loopne
xor
push
and
jne
or
jle
aad
lods
aas
scas
ljmp
sbb
mov
xchg
and
jl
inc
adc
inc
je
add
mov
inc
orb
cmpsb
jl
pop
ljmp
jg
mov
aad
dec
dec
pop
rorl
fimuls
cld
sub
bound
xor
arpl
lock
jnp
ret
adc
pop
cmp
jae
xor
mov
jl
data16
or
fwait
jle
call
push
mov
aas
insb
xchg
mov
rol
cmp
test
jbe
stos
dec
mov
cmp
jo
mov
mov
scas
fs
sub
pop
jg
inc
inc
cmp
sub
std
psraw
jns
arpl
sbb
cmp
adc
rorl
pop
rorl
fnstcw
jg
les
adc
push
adc
insl
inc
inc
push
repnz
adcb
cmpsb
cmp
and
test
sub
pushf
stos
scas
mov
addb
fstpt
shlb
pop
sub
inc
xchg
andb
jnp
dec
pusha
in
sarb
mov
in
rolb
jbe
ds
and
sub
in
insb
jno
rorl
movsb
jmp
nop
cmpsb
mov
test
stc
xchg
sub
push
scas
out
mov
and
shr
xor
mov
pop
mov
pusha
cmpxchg
jbe
in
and
sub
adc
dec
mov
lock
adc
sbb
sbb
jno
adc
pop
sbb
movsb
shlb
xchg
xor
push
sub
call
mov
std
roll
ret
in
js
repz
adc
cmp
jl
or
movsl
addb
arpl
mov
cwtl
xchg
pushf
pop
push
test
popf
xchg
xor
pusha
push
adc
es
push
js
movsb
mov
xor
in
sbb
fsubr
shlb
jo
fldl
xor
subps
xchg
cmovs
and
xor
sub
stos
cmc
stos
pop
bound
sub
jge
call
cmp
pop
and
push
dec
add
xchg
sbb
into
js
cmp
push
out
mov
jl
xchg
fucom
inc
push
jle
in
in
rcrl
int
fldz
repz
icebp
add
aad
out
std
sbb
mov
scas
xchg
leave
arpl
mov
lret
nop
stos
or
lcall
cmpb
popa
add
push
repz
loop
add
icebp
xchg
mov
test
add
and
fcomps
ror
bound
jae
das
cmp
idiv
cs
inc
sbb
scas
xchg
gs
add
lret
data16
push
out
outsb
popf
push
pop
es
xchg
loopne
cltd
inc
jge
jl
insb
repnz
and
gs
addl
imul
insb
xor
mov
mov
out
mov
fs
xor
xchg
aaa
sbb
lcall
arpl
pop
dec
dec
push
xchg
mov
sbb
pop
lods
in
pop
adc
xchg
cmp
loop
push
or
dec
xchg
mov
cmp
sub
imul
inc
popl
fdivrs
sahf
push
in
mov
test
outsb
push
les
lea
cmpsl
shr
push
mov
pusha
add
xchg
and
popf
popa
cwtl
out
adcl
jle
add
sbb
xor
orb
cmpsb
jnp
and
fisubrl
aam
inc
out
rcrl
in
add
pop
xor
les
pusha
pop
cmp
push
in
mov
sarb
adc
xor
inc
mov
xchg
xchg
mov
mov
sbb
adc
in
add
lret
jbe
xchg
pop
xchg
add
mov
jl
dec
fldcw
int
inc
or
jnp
cmp
inc
ficoml
out
rcrl
aad
mov
mov
cmp
mov
mov
cmpsb
xchg
inc
shlb
and
bound
mov
sub
pop
xor
repnz
dec
xor
into
mov
mov
pop
add
mov
cmpsb
lret
inc
cs
mov
mov
mov
je
xchg
and
sub
icebp
and
shlb
jge
mov
bound
xor
xchg
shlb
mov
cmpsl
repz
xchg
popf
in
ja
sbb
lcall
cmp
lods
cmpsl
clc
mov
sarb
xor
cmp
lea
rcll
das
shl
mov
mov
jne
aad
mov
push
enter
ret
les
scas
jmp
mov
xor
pop
inc
sub
int
ja
imul
xchg
push
jl
pop
in
scas
or
dec
rcrb
in
into
jns
cmpsb
subl
or
push
je
xchg
add
inc
icebp
imul
fists
nop
jnp
add
icebp
xor
mov
sub
fwait
xchg
iret
and
icebp
push
iret
xor
loopne
popf
inc
mov
lcall
popw
cmc
das
je
sbb
xor
subl
xchg
mov
jns
or
sbb
stos
xor
sbb
dec
aad
jg
cmpsb
aas
sbb
jae
pusha
aad
ljmp
cmpb
cmpsb
cli
fistpll
aad
add
shr
shrl
add
stos
out
shr
stos
out
fstl
mov
and
lea
and
xchg
sbb
outsl
punpckhdq
xor
scas
mov
pushf
cmpsb
mov
aas
jo
mov
pushf
dec
pushf
loopne
lret
mov
mov
mov
outsb
in
and
sti
outsb
mov
insl
xchg
dec
mov
dec
xchg
or
xor
mov
cs
incl
in
aaa
cmp
mov
dec
mov
xchg
cwtl
js
aas
add
xchg
lods
xchg
imul
mov
jmp
xchg
test
or
push
dec
test
pop
mov
push
iret
cmp
push
out
aas
arpl
jecxz
inc
and
ss
xor
and
sarl
add
popa
jp
ja
or
fidivrs
and
xchg
sahf
jp
push
add
and
bound
xchg
call
fdiv
push
shl
inc
adc
vandnps
loopne
in
hlt
daa
out
jbe
pusha
inc
in
ds
push
outsb
and
lds
int3
mov
sbbb
idiv
pop
mov
sub
mov
dec
pop
lods
or
dec
lret
mov
fisttpll
enter
xchg
inc
dec
call
test
jmp
or
add
jnp
mov
cli
xchg
dec
dec
mov
inc
or
sbb
and
inc
xchg
idivb
or
imul
pusha
cmpsl
hlt
push
cltd
pop
jge
cmp
and
push
in
inc
mov
leave
jns
mov
xchg
push
jbe
bound
sbb
je
mov
dec
sti
jbe
push
ret
icebp
mov
jns
mov
enter
push
push
bound
in
cmpsl
into
push
dec
push
jnp
and
fsubr
es
cmp
leave
ja
lret
jle
lcall
xlat
add
pop
push
inc
enter
fsts
pop
dec
jl
ja
ds
lock
push
inc
test
stos
negl
outsl
xor
icebp
lahf
adc
iret
push
stos
out
int
loope
ljmp
push
pop
fneni(8087
std
cmpsl
lods
jge
push
movsb
cli
cmp
xor
push
jmp
out
shlb
cmp
pop
sub
xor
sbb
js
push
aam
and
push
mov
and
pushf
stos
dec
inc
testb
aad
jge
cmp
push
mov
cs
pop
stc
jb
in
or
sub
into
adc
jp
push
scas
mov
idivl
push
mov
mov
xchg
int
pop
fdivl
leave
das
mov
data16
pop
jmp
les
mov
loopne
mov
mov
jp
outsb
lret
sbb
std
les
popa
lahf
mov
push
shlb
leave
push
add
mov
sub
in
mov
in
outsb
insl
and
dec
mov
jl
inc
push
pusha
cwtl
and
out
cltd
icebp
jge
jbe
lcall
fimuls
popl
dec
enter
jp
fisubs
add
loope
and
push
or
mov
xchg
sbb
repnz
mov
cmp
sbb
adc
add
jmp
mov
mov
repz
sbb
or
xlat
fbld
xchg
cmpsl
sbb
test
push
fcmovne
ret
add
pop
jb
in
ret
fildl
jge
cmpsb
dec
mov
mov
sub
nop
inc
or
sbb
add
xor
xchg
call
jp
xor
jecxz
loopne
sbb
outsb
decb
pusha
pop
clc
fadd
lahf
movsl
jle
cld
jmp
push
imul
sub
sub
cmc
scas
cmp
sub
pop
xchg
jecxz
cmpsl
fwait
jp
add
fwait
ret
out
leave
shll
or
lar
andb
mov
xchg
or
mov
adcl
fs
lock
and
mov
movzbl
jo
jno
jge
into
adc
lock
lcall
and
mov
sahf
mov
fsubs
movsb
mov
sub
xor
cld
inc
xor
daa
xor
inc
sarb
aas
test
mov
ljmp
jo
sub
je
mov
ds
les
or
pop
sar
gs
out
xor
test
movl
mov
aam
push
cmpsb
shlb
xchg
enter
in
pop
jae
inc
mov
xchg
sub
es
xchg
scas
jnp
and
cmc
aaa
xor
sub
sbb
or
xor
std
sub
inc
push
gs
in
mov
test
mov
pop
movsl
insb
push
jp
jbe
xchg
lock
adc
fdivrs
add
or
test
leave
and
xchg
loopne
dec
inc
cli
loope
sbb
or
sbb
jge
gs
mov
loope
inc
cmp
pause
test
add
dec
mov
sbb
bound
pop
dec
and
test
xor
push
leave
adc
and
add
pop
insl
arpl
fsubl
mov
femms
fwait
enter
adc
and
xor
jb
xchg
adc
inc
pusha
or
cmp
add
mov
add
aas
fwait
rorb
icebp
pop
push
ficoms
and
add
and
xor
jb
pop
mov
stc
fwait
setae
je
inc
adc
sti
ret
jbe
jecxz
insb
imul
mov
sub
mov
dec
andl
lea
loopne
dec
iret
mov
xor
out
mov
pop
push
outsl
push
lea
inc
or
mov
jge
push
adc
repz
adc
xchg
ja
data16
outsb
insb
sub
inc
ret
mov
out
push
inc
and
aam
sub
xor
sub
lret
push
lods
aam
mov
cmp
mov
cs
cmp
push
mov
dec
pop
and
out
jmp
pop
int
push
push
popf
mov
adc
and
divl
add
mov
cmp
dec
inc
cmp
pop
or
stc
shlb
add
inc
andl
and
sub
lcall
jns
imul
dec
push
pusha
movsb
xchg
xchg
jp
add
shlb
and
cld
mov
mov
pop
jg
xchg
insb
out
movsl
sarl
mov
lods
cmp
sub
sar
mov
addl
je
lds
out
xor
cwtl
notrack
enter
sbb
in
hlt
or
jl
inc
xchg
dec
into
cmp
adc
jecxz,pn
gs
pop
mov
inc
adc
inc
sbb
dec
idivb
clc
mov
jbe
fidivrs
flds
jl
push
lahf
push
sbb
cmp
stos
adc
jg
pop
cmp
insl
stos
sub
outsb
stos
jns
clc
cmp
lock
xlat
je
das
fisubrs
add
pop
pop
es
les
mov
mov
insl
mov
xchg
or
jl
dec
inc
loope
call
dec
shrb
dec
xchg
and
xchg
test
popa
add
cmpsl
jg
mov
repz
cmp
cld
movsb
mov
test
dec
test
test
mov
cmp
mov
jle
orl
std
loopne
cwtl
dec
mov
cmp
cmpsl
mov
or
jno
xor
add
outsb
cld
fnsetpm(287
jne
pop
inc
jl
imul
and
clc
lods
cmp
mov
and
mov
cmc
repnz
dec
xchg
lahf
sub
and
sti
into
xlat
xor
daa
jae
xor
icebp
dec
movsb
inc
popa
add
xchg
mov
in
lret
and
adc
xor
movsb
movsb
repz
dec
mov
out
push
sub
xor
mov
sbb
push
lods
pop
inc
jge
jl
cs
xchg
dec
bound
xorb
mov
popa
inc
clc
aaa
inc
adc
push
or
in
in
scas
jne
pusha
xor
jp
or
and
rcll
sbb
jg
mov
leave
js
inc
add
inc
lahf
sbb
lock
sub
mov
dec
repnz
repz
movsb
xchg
cwtl
mov
aas
outsl
push
das
mov
sahf
fistl
es
and
jo
dec
mov
and
loopne
fists
add
mov
lock
cs
flds
aas
inc
repnz
mov
call
jb
and
dec
pop
inc
imul
and
es
mov
or
sti
les
es
push
mov
std
sbbl
push
stos
push
jle
jg
aad
jns
inc
push
inc
imul
mov
out
popf
cmp
ja
cmp
mov
test
pop
jp
mov
inc
and
xchg
xchg
or
repz
ja
dec
mov
add
dec
mov
out
dec
sarl
jo
sub
or
data16
ljmp
cmp
jge
push
sub
cmp
dec
lea
fmulp
mov
sub
push
nop
aam
xchg
pop
push
mov
inc
fbstp
jmp
js
adc
cmpsl
or
out
mov
inc
mov
xor
repz
sbb
or
pushf
adcb
push
pushf
cmc
test
icebp
lock
jmp
add
andb
sub
sub
xchg
pop
sbb
cmp
out
pop
sahf
dec
and
shlb
out
fwait
mov
repz
or
mov
push
cltd
adc
or
fs
or
xchg
mov
add
push
adc
ds
scas
pusha
lods
cmpsl
adc
test
jnp,pn
and
out
clc
out
sub
inc
in
pop
add
xchg
mov
clc
jge
stos
sub
aas
mov
push
test
cmp
mov
or
pop
ss
sbb
imul
jge
mov
push
test
lret
sub
fs
sbb
loop
fidivl
js
pusha
movsl
cmp
stos
icebp
push
push
inc
lea
les
jae
inc
mov
pop
inc
lock
imul
mov
pop
fsubrl
sbb
andl
xor
add
mov
mov
in
adc
aas
daa
lret
add
jle
add
push
inc
push
xchg
sti
sahf
and
push
lcall
jp
enter
jno
push
rorl
leave
aam
push
jge
xchg
nop
mov
loop
insb
sub
pusha
xchg
and
xchg
mov
shrb
sbb
call
loop
adc
or
sbb
repz
or
push
push
rcll
je
ljmp
shlb
shll
xor
push
insb
jns
adc
sbb
fs
mov
or
sub
mov
cmp
test
je
mov
and
xlat
dec
mov
ja
addr16
push
lahf
sahf
mov
and
mov
jle
scas
pushf
icebp
insb
aas
push
sahf
push
in
out
cmp
outsb
mov
hlt
dec
jb
adc
icebp
sbb
dec
and
cld
repz
ds
cmpsb
call
and
mov
push
jne
or
push
cmovp
sub
clc
loopne
ret
dec
int3
sub
fdivrs
adc
loop
pop
jns
lcall
out
mov
mov
fldl
call
mov
cmpb
call
adc
dec
jns
xlat
rcrl
jmp
fstpt
sub
jo
sti
out
mov
ds
cmp
jecxz
mov
lds
enter
mov
add
or
xchg
push
test
fwait
lahf
test
aam
mov
lods
dec
jle
fwait
sub
out
push
sbb
dec
int3
imul
cmp
pop
sub
sub
fmull
sub
cmp
mov
test
es
jmp
jno
jle
movsb
sahf
test
mov
test
dec
inc
aam
fnstcw
mov
jmp
xor
sti
mov
xchg
mov
sbb
ja
add
mov
jl
movsl
jl
mov
xlat
inc
mov
stos
enter
ret
push
out
stc
loopne
jb
sub
jl
js
pop
pop
divb
sub
gs
aam
add
test
iret
sbb
or
sbb
pop
gs
repnz
in
inc
fcmovnbe
out
or
or
iret
xchg
and
cmp
pop
xor
push
gs
mov
xchg
jno
in
lret
vmovd
test
call
sahf
sbb
sub
cli
and
xchg
jle
push
movsb
adc
xor
sub
push
and
mov
jns
push
neg
call
inc
jge
fwait
mov
jne
mov
sub
adc
lods
aaa
sub
mov
ret
test
jo
push
test
jl,pn
sbb
jp
stos
sbb
fnstcw
mov
jb
aas
or
jns
adc
out
mov
arpl
sbb
inc
xchg
std
xor
cmpsl
imul
xor
clc
jg
lock
xchg
mov
out
insb
sub
fidivrl
mov
mov
xchg
dec
sbb
jns
lods
inc
lret
and
jl
sbb
and
adc
andl
ds
jbe
adc
adc
push
stos
pop
mov
stos
es
xlat
aam
insb
xchg
push
push
jae
bound
popa
and
dec
lret
sbb
cld
xchg
add
rcrl
sbb
cs
pop
push
repz
aam
cwtl
ss
aam
repz
dec
cwtl
insb
mov
jne
mov
cmpsl
inc
cltd
lods
sub
jp
adc
or
mov
mov
dec
shlb
clc
push
mov
xor
sbb
dec
adc
jp
xorb
push
js
push
arpl
push
cmpb
add
clc
fwait
sbb
push
xchg
sub
leave
xchg
xchg
cmp
cmpsl
aad
aaa
sti
insl
cmp
push
xor
in
pusha
push
stos
sahf
inc
and
jb
imul
inc
cli
pushf
xor
addb
xor
repnz
fimull
addr16
push
mov
outsb
push
push
push
movsl
mov
add
and
cmpsl
cmp
and
stc
fistps
xor
rorb
xchg
cmpsb
sub
enter
push
lahf
jecxz
cmpsb
insl
cmp
xchg
add
divl
ss
and
xchg
fmuls
bound
lods
jle
adc
push
ja
arpl
in
add
mov
adcl
push
adc
out
icebp
fs
or
aas
pop
rcr
test
mov
add
sti
lahf
popa
scas
ret
pop
sti
sarw
mov
cmc
mov
lret
add
sbb
ficoms
inc
fimull
xchg
jno
push
mov
and
push
dec
adc
ss
mov
outsb
jb
push
out
movsb
mov
xchg
stc
cmc
aaa
pusha
mov
mov
lods
jnp
fs
lods
sbb
lret
push
sbb
popa
mov
pop
das
or
cmpsb
cmp
sub
and
fnsave
setb
xlat
ss
daa
icebp
xor
cmp
sub
js
stos
sbb
sbb
dec
scas
adc
gs
sub
adc
push
out
into
and
faddp
dec
shll
jl
imul
jno
fiaddl
xlat
mulb
or
sbb
arpl
mov
in
dec
and
inc
jp
out
lock
stos
jp
add
fistpll
aam
jnp
mov
sbb
out
sarb
pop
jns
adc
or
out
clc
jl
lret
fs
cmp
sub
clc
mov
jge
jb
sahf
adc
jmp
jg
addr16
sub
cmp
and
push
rcll
dec
adc
ret
or
xor
pop
pop
push
xor
fwait
pop
loopne
shll
iret
inc
jae
leave
mov
push
insb
movsl
push
roll
sarl
pop
jns
pushf
cwtl
insb
js
inc
imul
inc
ja
shlb
lea
inc
pop
xchg
dec
mov
stos
add
nop
mov
sub
dec
push
lock
ss
test
js
pop
fs
inc
shl
lret
es
cltd
fisttpll
push
sbb
jp
aas
xchg
scas
out
lods
int3
xor
jge
ret
testl
mov
xor
inc
push
jnp
je
arpl
xchg
mov
push
aaa
mov
inc
push
popl
fisttpll
jp
iret
mov
sub
daa
les
pop
dec
aas
lds
test
cmp
cld
mov
add
repnz
icebp
test
jo
jmp
movb
call
in
push
mov
xchg
push
push
sub
push
insl
pop
pop
idivb
xorl
sub
xor
gs
xchg
adc
fisubrl
int
loopne
in
out
pop
pop
loope
xlat
or
outsl
inc
sub
fs
test
push
or
mov
lret
clc
add
movl
std
add
push
addr16
mulb
and
cmpsb
fildll
push
out
cld
mov
ds
fidivs
push
aad
or
and
push
xchg
jo
jmp
js
mov
fimull
lret
movsl
loope
pusha
dec
je
dec
les
test
sbbb
sub
xchg
xor
push
inc
ds
pop
fcmovnu
shll
std
aad
negl
pop
and
aas
push
jnp
sbb
mov
adc
stc
ljmp
pop
popa
shlb
push
imul
outsb
insb
daa
in
xchg
lea
shl
mov
out
push
pop
jge
int
add
es
jno
jl
inc
cmp
pop
movsb
repz
cmp
hlt
sbb
add
mov
lcall
rcrl
jge
sbb
les
out
nop
cmp
and
sub
cmp
je
or
and
jp
adcl
cmpsb
xchg
and
jge
pop
inc
vcvtss2sd
sbb
or
or
xor
ljmp
hlt
xor
je
push
test
xchg
jo
inc
test
sub
push
lret
inc
cld
lods
movsb
inc
adc
out
jb
dec
or
outsb
jg
pop
dec
out
repnz
xchg
out
movsb
mov
movsl
daa
mov
cmp
imul
adc
repz
push
mov
repnz
lcall
ds
sbb
ss
dec
and
mov
les
jge
xchg
pop
insl
xor
loop
cltd
enter
sub
cli
sbb
pusha
push
mov
aaa
ret
movsl
cmp
cmpsb
rcll
cmp
cmp
jae
push
cmpsb
fldenv
data16
push
stos
dec
pop
jmp
mov
jle
lret
shlb
mov
insl
je
mov
cld
std
jo
pusha
pop
dec
and
mov
lahf
add
cld
pop
dec
scas
cld
insl
mov
aas
out
pop
xlat
testl
mov
out
xor
or
lods
or
inc
insl
cmp
cmp
pop
cmp
or
aad
repnz
and
fnstenv
movsb
rol
push
ds
sbb
orb
in
or
fidivrs
das
addr16
icebp
jp
repnz
xchg
imul
and
mov
lea
les
sub
popf
hlt
jo
lock
sub
xchg
or
cmpsb
lods
sbb
sub
xchg
adc
pop
sub
cs
movsb
or
xchg
test
add
out
sbb
dec
inc
aaa
rorl
call
jbe
fucomi
jle
ror
push
in
mov
imul
xor
xchg
push
andb
outsb
fistpl
fcomp
movsl
mov
loopne
stc
arpl
call
cmp
ret
sbb
mov
add
xrelease
adc
dec
push
xor
cmc
jmp
repnz
in
cltd
mov
or
out
jo
pop
aad
or
arpl
inc
test
mov
in
push
outsb
mov
inc
js
push
push
push
inc
add
cmp
daa
xchg
ja
and
aam
dec
sbb
lret
jne
cmp
scas
popf
jge
dec
and
mov
pusha
mov
xchg
in
sbb
or
addl
xchg
sti
pop
add
subl
das
jnp
sti
adc
push
or
add
lods
pop
out
push
rcrl
or
movsb
add
cltd
adc
jecxz
scas
mov
mov
mov
test
cmpsb
adc
dec
and
xor
cmp
out
icebp
jmp
push
and
inc
insl
sbb
mov
test
lret
mov
cltd
into
insb
pop
adc
adc
jecxz
in
cbtw
jl
push
mov
negl
ss
mov
jl
outsl
scas
stos
lock
shl
je
jp
xchg
cmp
push
rorl
xchg
or
push
mov
punpcklbw
jbe
xlat
cmp
push
sbb
adc
jne
add
js
pop
inc
xchg
pop
sbb
xchg
subb
jbe
inc
push
notb
dec
addb
jno
cmp
jno
push
sbbb
out
mov
xor
xchg
sub
imul
rol
movsb
enter
and
mov
stos
sbbb
cmp
clc
test
insl
pop
pop
jo
adc
scas
rorl
add
xchg
jmp
pop
sub
cmp
es
lret
or
xchg
jo
out
dec
pop
xlat
push
call
lcall
sbb
sbb
jno
mov
dec
jecxz
sub
jmp
test
jge
and
dec
jl
xor
aam
push
push
inc
shr
jns
xor
repz
jae
mov
cmp
mov
xchg
mov
cld
insl
rclb
ja
cmpsb
test
sbb
in
insb
xlat
call
scas
outsb
lock
dec
or
adc
jo
in
pusha
nop
cmp
out
dec
addr16
addb
enter
stos
fidivrl
subl
ja
xchg
out
push
sbb
repz
mov
and
cmpsl
lret
lret
cmpsb
pop
bound
aad
xchg
in
or
outsl
cmp
push
nop
cli
adc
cltd
lahf
sti
mov
jns
hlt
xchg
sub
js
jg
xor
xchg
shrb
xchg
stos
mov
mov
es
xchg
sbb
daa
adcl
adc
imul
adc
inc
sub
pusha
xchg
test
cli
ret
imul
sub
outsb
out
in
fldt
shrb
pop
cwtl
push
stos
rorb
xlat
jns
int3
and
outsw
mov
mov
rolb
pushf
dec
mov
rolb
or
sbb
ja
in
push
lret
cltd
sbb
mov
dec
ja
stos
or
fistl
cmp
xchg
mull
in
pop
sbb
mov
movsb
lret
lret
in
insl
daa
cmp
lret
dec
cmpl
push
pop
jp
jbe
mov
or
test
push
orl
in
push
or
push
add
movsb
sub
sbb
xchg
cmc
test
int
xor
ja
inc
push
dec
dec
les
or
cmp
cmp
dec
in
nop
mov
test
pop
adc
aaa
int3
aam
xchg
cmp
lds
insb
pop
iret
sbb
and
scas
dec
fs
in
dec
in
adc
pop
ja
jg
das
aam
xchg
jge
or
mov
aad
mov
cmp
jno
add
jecxz
sbb
imul
outsb
nop
xchg
movsl
lods
jl
adc
inc
gs
movsl
inc
movsl
push
mov
adc
dec
jbe
inc
seta
adcb
test
ss
sub
and
push
push
je
xchg
test
mov
ret
ret
cmpsl
pop
je
cmp
imul
andl
dec
mov
mov
xchg
jp
sbb
sub
ds
insb
xor
int
cwtl
shll
in
shrb
fisubl
pop
in
outsb
xchg
mov
jnp
push
add
test
test
repnz
fldt
jno
push
push
jle
roll
call
jne
fwait
xor
repz
mov
int
pop
aas
out
add
cli
je
imul
mov
xchg
fiadds
cmp
repz
sti
mov
pop
add
cmp
roll
dec
movsl
push
pop
mov
push
stos
inc
cltd
dec
int3
or
mulb
std
stos
frstor
push
and
lods
data16
in
call
les
sbb
fwait
sbb
repz
inc
pop
out
push
pop
xchg
dec
mov
mov
daa
sub
js
adc
sub
lret
icebp
bound
xchg
or
cs
loop
data16
mov
aas
sbb
sbb
jns
ret
inc
rclb
cmp
fisubrl
inc
inc
pop
xor
jmp
add
and
fs
pop
inc
enter
sub
or
push
call
inc
add
sub
icebp
xor
pop
mov
inc
in
popl
xchg
outsb
sbb
xchg
adc
std
icebp
addl
jle
daa
in
push
mov
das
sbb
mov
stos
push
cmp
mov
mov
or
data16
addr16
scas
movsl
xlat
xchg
sub
xchg
in
rolb
mov
scas
lahf
or
cmp
jl
jle
leave
add
outsl
xchg
xchg
popa
xchg
in
xor
dec
pusha
mov
push
stos
mov
pop
xchg
sub
ljmp
xlat
in
ret
xlat
les
nop
jmp
movb
mov
popa
cld
jb
jmp
mov
pushf
out
fadd
pop
pusha
lea
nop
push
pop
andl
stos
mov
add
and
pop
cmp
adc
pop
lds
push
jns
or
pop
mov
loopne
je
rorb
sti
jge
xchg
pusha
aaa
ljmp
fsubs
mov
daa
fs
and
mov
daa
xor
add
jno
jmp
dec
mov
pop
jp
push
shll
pusha
loope
orl
popf
inc
push
mov
dec
hlt
and
stc
jmp
xchg
cmp
movsb
sti
mov
int3
mov
push
jae
stc
xchg
lret
push
orl
fwait
jl
mov
out
cmp
inc
or
ja
outsl
fisubs
shlb
stc
pop
dec
pop
bound
sub
jg
test
pop
push
mov
pop
lods
fsub
xchg
and
in
cwtl
aam
inc
loop
xor
jle
mov
xor
cld
mov
xchg
fstpt
jb
pop
imul
jl
jmp
out
mov
ljmp
and
into
add
in
lret
jecxz
jle
mov
inc
mov
mov
dec
jle
mov
cmp
test
scas
and
dec
add
mov
mov
add
xchg
out
xchg
js
cltd
sub
mov
hlt
xchg
ds
pop
push
movsl
mov
cli
jne
out
adc
imul
pusha
and
mov
and
and
js
fsubrl
int3
or
fs
pop
push
frstor
icebp
pop
shl
pop
jge
xchg
sub
sbb
adc
push
adc
rcrb
out
or
lods
gs
ret
mov
shl
fwait
sub
dec
cmpsb
push
pusha
pop
popa
sbbl
roll
dec
xchg
lods
outsb
jns
pop
es
mov
in
fisubrs
gs
mov
call
dec
imul
out
ss
push
imul
xchg
add
push
pusha
cmp
es
fisttpll
push
add
sbb
push
jne
push
imul
shl
push
ss
jge
or
adc
and
mov
loope
aad
lea
xor
adc
scas
push
popa
repz
nop
xchg
inc
sub
ficoms
aas
push
or
andb
js
repz
bound
ja
out
loope
xchg
sar
imul
test
pop
gs
jmp
add
and
int
std
out
mov
mov
push
in
inc
sbb
cli
pop
push
es
imul
push
jl
xchg
daa
test
dec
popa
and
out
sub
or
cmp
sti
loopne
jecxz
jl
test
test
movsl
movsl
sbb
adc
out
ret
test
cmp
cmp
scas
pusha
sub
fs
cwtl
push
mov
stos
pop
outsl
jo
testl
inc
lds
jl
jg
mov
lock
add
jg
nop
les
pop
dec
mov
cmp
insl
sbb
enter
push
out
cmp
dec
inc
shlb
hlt
push
jmp
test
sub
push
add
je
jne
iret
lahf
mov
test
scas
jge
xchg
cmp
add
lahf
mov
mov
sbb
push
mov
cmp
pop
insb
cwtl
push
pop
xor
add
jbe
es
insb
in
mov
mov
dec
ds
loopne
push
xchg
pop
push
gs
add
adc
jns
fimuls
cld
cmpl
dec
flds
insb
and
jns
xor
iret
leave
daa
jo
cmp
daa
and
fcoms
gs
ja
test
xlat
gs
jg
rclb
cmp
clc
mov
arpl
cmpsb
ret
sub
or
stc
inc
xchg
jb
mov
cwtl
es
sub
shl
test
or
gs
pushf
inc
popf
mov
push
mov
jmp
jns,pt
mov
adc
stc
xchg
pop
xlat
dec
rclb
sub
iret
dec
push
inc
into
dec
scas
mov
cmp
cmpsl
in
cmp
fstpl
or
inc
add
repnz
push
ret
stc
mov
or
cld
mov
pop
rorl
test
xlat
pop
adc
roll
test
icebp
inc
cmp
jnp
mov
in
scas
fstl
push
lret
mov
pop
xor
inc
rcrl
sbb
ljmp
adc
dec
push
dec
jbe
mov
inc
inc
or
pop
dec
leave
or
mov
sub
jl
or
in
jg
jl
jmp
xchg
js
in
out
pushf
rcrl
push
fldenv
add
mov
imul
pop
ss
cld
fdivs
jns
push
or
xor
lret
cmc
std
push
xchg
push
xchg
sub
repnz
xorb
bnd
popa
repz
std
jno
outsb
push
dec
jle
xchg
push
mov
mov
pop
jne
add
mov
arpl
jbe
xor
rep
sti
jae
arpl
sti
call
mov
mov
sbb
pop
mov
repz
mov
adc
outsl
and
jge
or
xor
pop
add
aas
or
repnz
rcl
test
imul
push
jae
mov
sbb
adc
push
es
dec
xor
stc
adc
inc
xchg
adc
cmp
and
cmp
in
lcall
jb
jmp
pop
push
shl
outsb
mov
popa
out
stc
mov
cld
pop
jecxz
sbb
mov
and
mov
push
xchg
cs
dec
cltd
inc
xor
jb
stos
and
cmc
cmpsb
lods
mov
pop
clc
jp
lods
test
dec
inc
adc
pop
xchg
int
sbb
andb
xor
lahf
and
xchg
addr16
call
insl
lea
clc
negb
dec
adc
add
adc
dec
add
addr16
clc
jae
jge
data16
or
insb
and
cmc
aaa
jne
or
int3
fwait
push
pop
sub
pop
push
adc
or
leave
sub
cs
lcall
enter
pop
icebp
push
js
scas
loopne
or
xor
xorb
push
cmp
xlat
test
ds
mov
and
hlt
sbb
mov
adc
dec
sub
mov
push
jb
push
rorb
fisubs
aaa
js
lods
fimull
push
dec
aad
inc
mov
repnz
movsb
jae
jp
subl
cmp
xchg
mov
fldl
xlat
jno
xchg
fmull
outsl
jnp
cmpsb
adc
pop
loop
sbb
jnp
or
in
cli
pop
outsl
ficompl
fmul
adc
fisubs
stc
pop
mov
arpl
aam
sti
dec
roll
sub
sbb
inc
mov
into
jb
outsb
sub
xchg
add
loope
jp
adc
adc
jne
dec
push
push
fcmovnbe
andl
shlb
punpcklbw
stos
sbb
jbe
insl
int3
pop
push
sub
dec
xchg
or
adc
cmp
sub
mov
add
push
cmp
add
jge
push
outsb
out
rep
add
sub
cmpsl
mov
and
mov
adc
imul
push
pushf
loope
lcall
xor
jp
push
xor
popf
cmp
ret
jle
test
mov
or
je
lods
ja
ljmp
imul
adc
lahf
add
jbe
loope
dec
and
push
pop
xchg
sti
xor
xchg
jns
rcrl
in
jbe
mov
loop
arpl
ret
faddl
aam
mov
mov
sub
or
ret
push
jmp
push
xchg
sub
sbb
roll
arpl
insb
or
sub
mov
adc
add
movsb
fwait
enter
xor
aas
cmp
mov
out
mov
push
dec
test
push
xchg
ss
inc
push
inc
pop
fistps
dec
pop
out
bound
mov
push
stc
jbe
in
dec
insl
inc
nop
pop
and
mov
inc
insl
aam
ja
fdivs
xor
push
mov
sbb
vpmacssdd
shrl
dec
ficoms
fldl
sbb
mov
pushl
push
aaa
jns
jmp
lea
pop
fsubrl
push
mov
cmpsb
shlb
mov
jl
cltd
mov
ret
dec
or
ret
pop
repz
cmp
popa
int
push
adc
inc
jne
xor
data16
jno
fsubs
xchg
adc
push
jae
fcompl
xor
pushf
mov
out
dec
and
push
sub
sub
pop
stos
insl
cmp
adc
ja
je
aad
ret
testl
and
les
xlat
cs
les
adc
enter
mov
xor
pop
lahf
imul
out
in
rorl
and
ds
xor
call
out
pusha
jp
mov
ret
lock
xchg
jecxz
mov
fsubl
lods
inc
sub
mov
jl
push
mov
mov
lahf
cmp
cmc
sub
pusha
jns
sahf
add
mov
popa
mov
aad
ret
je
inc
or
xchg
popa
lock
mov
mov
out
mov
xchg
lahf
mov
test
clc
dec
mov
add
xcrypt-ecb
cmpsl
lret
nop
sub
xchg
inc
mov
jnp
dec
in
bound
imul
jecxz
cmp
inc
call
in
push
imul
mov
sbb
dec
andl
push
and
call
add
and
sti
leave
sti
jecxz
movsb
movaps
repnz
movsb
xor
jmp
dec
sahf
int3
int3
jns
jb
rolb
fs
sub
popf
jb
mov
xchg
inc
mov
cmp
subl
int3
push
out
dec
fnstenv
jl
pop
xorl
insb
cli
aas
cmpsl
fmull
roll
adc
and
sbb
pop
sbb
jp
xchg
aas
xor
jmp
ja
push
cmpsb
shlb
jnp
fimull
fadds
loope
and
mov
les
les
sarl
sbb
add
add
sbb
pop
push
imul
pusha
pop
cwtl
insb
imul
popf
call
les
dec
mov
fsubs
scas
movsb
mov
inc
popl
sub
mov
xor
cs
test
mov
xor
push
jg
push
pusha
jmp
test
push
push
dec
lret
xor
into
push
dec
sahf
pop
sbb
jo
in
adc
mov
out
jle
xlat
or
and
rorl
scas
push
adc
dec
cwtl
jl
push
orb
in
jnp
int
insl
cmc
repz
cmovae
pop
xor
xchg
js
add
stos
ret
mov
and
mov
xchg
xchg
call
test
ret
les
mov
nop
daa
or
fdivrs
fidivrl
cmc
bswap
inc
rcr
dec
pop
and
push
adc
ss
je
dec
mov
mov
mov
lea
jbe
fcmovnbe
icebp
inc
pushf
js
out
outsb
jge
iret
cmp
cmp
and
jno
push
mov
xchg
test
jo
lds
cmpsl
and
lea
xchg
push
sahf
mov
lret
les
es
inc
dec
int
xchg
pushf
in
jo
dec
jbe
sub
jnp
add
xor
fstpt
cltd
sbb
sub
adc
sub
dec
xchg
adc
fs
mov
mov
jb
iret
scas
push
call
add
hlt
sub
pop
xor
aaa
add
pop
push
int
repz
data16
in
sub
loope
xchg
xor
push
or
test
pop
mov
push
sub
cmp
and
shrb
dec
imul
test
in
mov
mov
stos
test
push
push
inc
cmp
sub
jnp
call
add
test
cmp
sub
fnstenv
sub
adc
fyl2x
mov
push
sbb
cmpsl
fsubrs
out
jns
pop
addr16
test
xchg
pop
jg
sub
push
aaa
divb
sbb
xchg
push
sub
mov
test
mov
orb
lcall
add
mov
jmp
inc
gs
cmpsl
push
xor
add
mov
inc
in
xor
js
or
cmp
pop
int3
or
aas
movsb
xor
mov
shlb
or
pop
xchg
arpl
cli
adcb
fstpl
xor
shrb
mov
pop
pslld
aas
mov
xchg
jo
loop
addb
mov
push
xchg
mov
dec
add
mov
imul
lahf
pop
movsl
movsb
test
ja
shr
in
and
push
mov
mov
xchg
aad
xchg
test
cltd
ljmp
push
push
adc
mov
mov
dec
test
or
xor
shll
out
xchg
cwtl
add
cmp
xor
and
fs
test
cmp
mov
dec
pop
out
insl
scas
pop
sub
inc
xchg
mov
push
sbb
jl
mov
mov
lods
push
pop
or
adc
addr16
mov
ds
gs
bound
lods
mov
mov
lahf
or
or
fldenv
adc
sbb
scas
or
pop
push
sub
inc
scas
sub
mov
xchg
xchg
cmp
push
push
aas
jne
or
cmpsb
jne
push
sub
outsb
icebp
imul
je
shll
dec
test
cmpsb
xor
adc
dec
or
pop
test
dec
or
lret
aas
cs
mov
push
mov
xor
test
int
mov
pushf
ja
push
inc
lret
add
pop
pop
cld
push
or
pop
in
rorb
ret
ja
sub
push
add
jmp
pop
add
push
fiaddl
test
xor
xor
pop
mov
insb
js
jae
ja
xchg
pop
mov
mov
add
xlat
cli
mov
dec
push
sbb
ljmp
mov
sub
sahf
out
pop
arpl
jne
dec
inc
and
xor
adc
imul
dec
std
push
js
cmc
ss
pop
mov
push
icebp
imul
pop
pusha
inc
gs
adc
insb
pop
scas
insl
sbb
test
ja
ror
jo
add
rcrl
daa
sub
xchg
or
or
test
nop
mov
or
cmpsb
dec
out
call
fstps
xor
pusha
mov
in
cs
std
pcmpeqb
leave
in
imul
dec
sub
sub
sub
imul
mov
jmp
mov
dec
cltd
movb
imul
cwtl
andl
cwtl
jecxz
cwtl
jno
inc
dec
jg
hlt
pushf
mov
push
or
sub
call
push
pop
rcrl
lods
sub
or
pop
repnz
add
cmp
cld
cmp
xorb
mov
inc
movsb
mov
arpl
sahf
std
sub
loope
imul
fnstenv
pushw
data16
es
sub
shrb
pusha
mov
and
sbb
cmc
sub
jge
mov
xchg
add
sub
ficoml
add
cmp
enter
das
pop
rolb
mov
stos
xchg
cmp
cmpsb
lds
enter
push
mov
ss
and
xchg
lcall
mov
inc
push
outsb
cmpsb
movsb
aam
dec
cmp
sbb
mov
adc
cmc
mov
mov
jl
pusha
daa
push
data16
or
out
mov
push
scas
sbb
scas
hlt
jo
test
movsl
iret
movsb
fs
aam
insb
inc
mov
test
lods
cmp
xchg
test
les
sbb
stc
or
fcmovnb
in
push
insl
dec
lock
dec
push
iret
scas
dec
cld
sahf
inc
xor
aam
in
sti
fadd
aas
lock
fbld
mov
cwtl
mov
nop
popf
je
pusha
xchg
inc
add
arpl
sub
int
sarb
mov
xor
stos
adcb
cmp
dec
add
mov
sbb
into
je
out
adc
clc
xchg
cs
push
scas
or
xchg
popf
test
xchg
mov
pop
xchg
inc
or
lods
out
jl
lret
insl
push
movsl
mov
cld
adc
xor
out
aad
clc
repnz
jecxz
ret
cmp
clc
mov
stc
pop
loopne
cmp
out
jle
rcl
lds
push
jo
sub
dec
lock
or
jne
filds
cmp
jbe
test
call
aam
insl
pop
adc
adc
ds
pop
jns
movsb
add
je
add
sbb
jg
push
jle
pop
inc
mov
dec
mov
mov
or
mov
scas
jl
inc
fs
sbb
mov
lcall
xchg
fs
push
push
aaa
or
cmp
sub
aad
cmp
xorb
stos
cmpb
fwait
dec
pop
jbe
aaa
cmp
roll
add
js
imul
mov
mov
sbb
push
stc
in
and
cli
cltd
js
dec
add
and
xchg
adc
mov
fcmovnb
shrb
shrb
gs
idivl
aaa
push
or
rcll
mov
sbb
jnp
inc
fwait
mov
xor
stc
sahf
adc
mov
push
sti
jge
sbb
push
lods
orl
mov
ret
sbb
sbb
push
sub
es
xlat
cs
cmc
inc
test
js
aaa
cli
mov
lcall
das
xor
push
divb
mov
enter
cmp
adc
jne
mov
leave
dec
adc
push
imul
add
cmp
mov
in
add
mov
mov
push
jp
xor
mov
dec
movsb
icebp
or
imull
push
jo
jl
out
fwait
xor
sbb
jne
gs
cs
das
sub
or
fdivrs
repnz
jnp
mov
mov
fxch
inc
test
je
push
xchg
or
add
push
test
xchg
or
xchg
cmp
or
xchg
add
stc
movsl
and
xchg
insl
inc
sub
shlb
movsl
xchg
aaa
cmp
jnp
shlb
addr16
stos
in
dec
lock
jmp
push
dec
int
es
jo
in
push
fs
fsub
fs
test
push
dec
pusha
cmp
push
push
inc
fadd
or
cmp
sub
pop
cli
scas
leave
xor
lret
sub
mov
hlt
stc
movsb
inc
pusha
mov
xor
lock
sbb
mov
aaa
xchg
das
out
xchg
push
jp
stos
sbb
ret
dec
jo
pushf
sbb
xchg
cmp
xlat
pusha
movl
pop
lret
jle
sti
ret
xor
pop
idivb
sub
gs
lcall
cmc
je
ror
mov
and
push
mov
pop
jae
adc
shrl
pop
jne
int
addl
in
sbb
mov
lock
mov
or
push
sbb
pop
iret
inc
xor
ss
pusha
lcall
jge
in
push
outsl
into
test
das
int
sub
call
and
ss
shrb
mov
cmp
dec
adc
hlt
cmpsb
or
outsl
addr16
movsb
icebp
or
in
ja
int
ret
mov
fcoml
adc
mov
cmc
stos
xorb
xchg
dec
push
fidivrs
call
data16
fmul
sbb
bound
push
adcl
imul
mov
aam
sub
jmp
or
xchg
mov
insb
and
adc
push
ffreep
and
pop
icebp
in
lret
and
push
sub
loop
movb
dec
out
ja
mov
mov
mov
jo
movb
lea
aas
lock
cmp
pop
push
fcomi
and
enter
jbe
mov
cli
loope
sahf
xor
add
aaa
out
mov
in
or
cmpsb
scas
or
pop
jbe
loop
xchg
push
jne
pop
jo
inc
inc
je
repnz
mov
mov
mov
cmp
xchg
rcrl
add
mov
outsl
lcall
push
roll
icebp
jnp
sbb
aaa
ror
push
popa
cwtl
insb
ss
xlat
jo
scas
test
mov
or
or
rorb
xchg
popa
lahf
cwtl
icebp
jg
adc
mov
cwtl
fisttpll
cmp
and
jl
inc
cmp
pop
push
les
cmpsb
push
xchg
dec
xchg
mov
dec
cmc
repnz
xchg
add
dec
in
aas
add
pop
insb
arpl
xchg
shlb
neg
testl
leave
lock
sub
cmpsb
mov
adc
fucomip
ja
subl
out
rorb
add
mov
and
ljmp
xor
das
loopne
xchg
test
mov
cmp
mov
inc
into
sahf
subb
incb
lret
mov
fucom
push
jnp
sbb
xchg
xchg
fidivl
pop
sub
inc
and
mov
sbb
gs
clc
stos
xor
testl
mov
loopne
mov
inc
mov
and
out
cmc
sbbl
iret
cmc
lret
adc
cmp
shlb
int3
fmul
mov
adc
xchg
clc
cltd
push
adc
fwait
js
sub
scas
jle
ds
sahf
sbb
insb
sbb
mov
sbb
pop
data16
or
jl
std
mov
mov
xor
inc
out
nop
mov
sub
mov
stos
mov
jo
sbb
cmp
outsl
pop
or
mov
mov
adc
repnz
sub
icebp
data16
adc
jne
xor
inc
ret
pushf
mov
mov
lods
out
lds
mov
xor
mov
mov
or
or
or
or
mov
mov
mull
mov
xor
and
xchg
icebp
clc
mov
inc
xor
pop
shrl
jbe
and
dec
jecxz
mov
cmpsl
test
loopne
mov
je
das
ds
sti
pop
sbb
add
enter
jl
insb
jmp
scas
dec
lahf
push
mov
insb
and
shlb
adc
lods
cli
je
das
or
dec
ds
ds
sub
xchg
nop
lods
pop
out
mov
jg
mov
pushf
fsubrl
mov
js
loope
dec
incb
and
outsl
mov
dec
or
inc
ret
sbb
inc
sub
movsl
das
push
arpl
repnz
lock
sub
loopne
jmp
dec
pop
mov
lds
in
mov
push
sub
inc
lret
and
cmp
cmpsl
dec
std
fwait
inc
sub
cmp
adc
jge
inc
in
clc
sbb
add
jl
fstps
sbb
test
shr
in
scas
cmp
jne
aas
adc
sub
mov
addb
lcall
jb
jne
rorb
or
cmc
adc
xor
mov
xchg
jmp
sahf
pushl
fiaddl
out
xor
cmp
jnp
add
mov
int
jg
shrb
xchg
pop
cmp
movl
inc
inc
imul
orl
push
les
jge
insl
jae
outsb
inc
out
xor
mov
mov
pusha
pushw
inc
adc
push
mov
mov
add
push
aaa
sub
jge,pn
sub
popf
xchg
push
jbe
ret
test
push
addb
dec
or
dec
loop
push
mov
repz
nop
or
or
out
stos
xchg
mov
fs
jge
or
in
pusha
adc
ret
loopne
push
or
ja
data16
xchg
jae
data16
shll
mov
popf
test
fsubrs
cmp
adc
hlt
pop
or
jns
je
push
mov
dec
ds
pop
imul
jg
or
lret
or
in
aaa
nop
out
push
les
push
adc
jno
dec
ljmp
dec
divb
enter
aas
mov
jg
repnz
imul
pop
cmp
pop
push
jle
cld
push
call
mov
pop
jp
popf
ret
fsubs
sahf
push
xlat
push
push
inc
mov
cmp
mov
rorl
daa
call
push
pop
add
add
push
push
mov
daa
lock
clc
lods
sub
xor
or
ja
sbbb
pop
sbb
enter
clc
les
jo
xchg
jne
ja
adc
cmp
jg
ds
xchg
sub
jl
push
adc
push
jmp
adc
mov
dec
sbb
push
loope
pop
mov
aaa
data16
mov
outsl
aaa
jo
or
dec
ss
pop
iret
or
lods
test
xchg
add
ljmp
push
mov
mov
ret
and
scas
or
test
or
pop
mov
pop
push
std
mov
lods
sub
enter
inc
pop
push
mov
add
mov
out
mov
jb
fstp
dec
dec
xor
mov
clc
sub
pop
xchg
cmpb
testb
push
mulb
enter
out
gs
push
or
cmp
nop
inc
inc
int3
dec
push
in
pop
cmp
push
mov
lahf
dec
or
scas
cld
cmc
movsl
or
push
mov
cmp
mov
mov
fcomip
xchg
or
daa
mov
bound
dec
sahf
mov
and
aaa
enter
mov
pop
pop
sbb
rol
hlt
mov
and
pusha
lods
sbb
addl
adcb
xorl
ds
jo
mov
add
sub
jne
jle
insb
outsb
in
lock
push
xor
ja
adc
scas
xor
cmp
xchg
mov
mov
iret
pop
sbb
fdivl
cwtl
lret
pushf
int
cmc
xchg
movsb
fs
inc
mov
mov
dec
bound
aas
and
push
test
jle
arpl
adc
call
or
xchg
adc
or
xchg
mov
and
push
mov
repz
cmp
inc
push
outsl
mov
call
and
arpl
cwtl
les
add
repz
sub
and
add
mov
push
rcl
std
shlb
jl
pop
push
and
jmp
mov
add
xchg
xchg
int
pop
shlb
inc
js
jns
rorb
jecxz
je
add
xchg
repnz
cwtl
es
ja
sbb
and
daa
jns
xchg
js
push
arpl
dec
in
cmp
jl
scas
sbb
and
mov
les
adc
jbe
mov
mov
scas
xchg
xchg
push
dec
cmp
ret
push
cmpsb
cmp
or
sahf
sti
push
fs
inc
xchg
ljmp
pushf
jnp
test
xchg
jae
sub
cmp
inc
cmpl
stos
pop
adc
push
xlat
test
cmp
cltd
jl
cmp
jns
pusha
push
mov
pop
push
xchg
popf
jb
aad
clc
movsb
mov
mov
mov
nop
jns
loopne
pusha
inc
dec
pop
jae
mov
cmp
les
shr
sbb
mov
sbb
add
adc
mov
addr16
xchg
inc
test
jae
or
je
sub
popf
mov
dec
imul
sub
dec
loopne
cltd
fdivl
jg
fsincos
movsl
jge
and
mov
dec
mov
cltd
pop
jb
push
pusha
aam
cmc
and
cmp
outsb
cmp
mov
sbb
int
cmp
add
add
mov
xchg
dec
xor
ret
sub
or
cmp
movlps
push
addl
pusha
divb
fstpt
iret
faddp
or
pop
out
popa
mov
xchg
and
shll
into
mov
movsb
jns
add
push
adcl
lock
sub
mov
repnz
cmp
out
sub
pusha
jo
jnp
cmpsb
xor
cmpsb
sbb
les
cmpsb
test
inc
std
lcall
xchg
sarl
mov
and
xor
add
and
sub
fbstp
pop
xor
add
lock
aam
jo
xchg
jo
pop
pop
xchg
jle
or
out
mov
adc
lahf
stos
inc
push
outsl
lret
adc
das
sub
mov
cld
push
mov
xor
arpl
fsubl
std
out
imull
sti
stc
xchg
sbb
dec
and
addr16
loopne
lret
push
push
les
sbb
and
cmp
rcll
sti
cmpsb
inc
xlat
push
push
jl
cli
mov
cld
jno
push
lods
sub
int
mov
and
ljmp
push
loop
imul
ss
mov
dec
popa
xor
int
jo
xchg
push
mov
gs
adc
jmp
push
sub
adc
jg
test
scas
jg
mov
ret
mov
js
andb
cmp
cltd
and
xchg
sbb
bound
and
movsl
or
mov
loope
push
or
cmpsb
cmp
imull
xor
mov
xchg
dec
lods
addr16
in
sti
popf
xchg
in
adc
dec
insb
xor
je
insb
xchg
xchg
dec
sarb
pop
scas
jle
testb
mov
gs
jne
push
bound
mov
push
out
stos
test
add
insl
lahf
pop
aam
cmc
fs
push
ret
jnp
xchg
popa
sbb
in
sbb
jge
aaa
mov
xor
out
rorb
rorb
jb
add
imul
and
pop
push
pop
cmp
cmp
mov
ret
imul
imul
inc
cli
or
pop
add
addr16
sub
addr16
add
fxch
imul
jmp
clc
sub
jnp
mov
inc
inc
inc
dec
call
pop
test
and
stos
inc
movsb
push
xor
in
int
xchg
subb
or
sub
call
adc
push
mov
test
push
adc
jne
pop
hlt
imul
dec
sbb
adc
inc
xor
insb
stos
mov
xchg
popa
or
mov
xchg
sahf
in
out
push
pop
test
inc
out
movsb
dec
clc
ljmp
sbb
mov
sbb
mov
mov
inc
xchg
xor
insl
pop
mov
cli
loope
aaa
mov
stc
cmpsl
inc
inc
enter
ljmp
daa
lahf
outsl
inc
les
popf
cmc
lcall
jo
add
cmp
and
inc
mov
leave
lods
fstpt
pusha
shrl
loope
push
adc
cli
push
or
fldl
mov
mov
rol
dec
fidivl
sub
and
push
daa
mov
add
and
adc
ret
sbb
mov
dec
jmp
loop
div
test
and
loope
aas
dec
inc
pop
dec
xchg
sbb
ljmp
xor
sub
xchg
dec
xchg
sub
sub
sub
fimull
unpckhps
jge
xchg
sub
test
aas
xchg
insb
aaa
scas
add
sub
in
mov
inc
add
es
jge
pusha
cmpsb
jge
mov
add
mov
push
push
scas
aad
dec
les
sbb
insl
movsl
jecxz
in
ret
aaa
mov
push
gs
dec
push
pop
jb
mov
addr16
mov
outsl
push
cli
insl
xor
jg
sarb
out
or
into
fadd
jnp
xor
jae
cmp
movsl
xchg
mov
fnsave
popf
add
or
push
addr16
or
or
je
loop
dec
sbb
push
lret
xchg
fcmovu
push
push
ljmp
xor
lret
dec
push
je
in
sti
into
insb
dec
cwtl
sbb
pushf
in
jno
add
mov
xchg
pop
adc
and
pop
aam
push
bswap
loopne
imul
sub
ljmp
push
cwtl
lods
adc
mov
imul
nop
aam
jnp
imull
pop
stc
loope
cmp
jp
popa
cmp
movsb
int3
dec
nop
mov
pushf
call
mov
and
cmp
ret
mov
sub
outsb
push
push
sub
ficomps
push
mov
testb
push
mov
lret
jnp
fidivrs
in
xchg
adc
sahf
dec
stos
sbb
ret
xchg
pop
sbb
xchg
dec
push
or
cmc
mov
push
movb
xor
pop
out
push
inc
call
fnstenv
push
xchg
cmc
sub
dec
adcb
push
mov
lret
dec
arpl
add
mov
jl
stos
mov
in
daa
nop
push
jo
add
jl
jb
mov
rorb
cmp
test
push
jmp
inc
lock
fucomip
inc
inc
fldl
pusha
inc
and
adc
cmp
sbb
out
mov
daa
fnstenv
aad
call
sbb
jne
adc
cmp
test
pop
push
data16
pop
xlat
pop
and
movsl
daa
in
call
xchg
lcall
pop
data16
test
pop
filds
in
inc
aas
or
outsb
cmp
test
shrb
or
shr
sub
add
shr
nop
push
ret
sub
add
test
aas
shrl
mov
mov
add
sub
pop
sub
push
sbb
mov
rcrb
ret
jmp
sbb
mov
out
aaa
xchg
mov
movsl
movsl
mov
adc
mov
sub
shlb
sub
cltd
subb
clc
xlat
rolb
jmp
testl
adc
vcvtsi2sd
and
bound
scas
xor
out
rclb
lock
inc
mov
cmpsb
push
subb
testl
mov
aas
xlat
repnz
and
inc
push
mov
out
or
xchg
jo
rorl
sbb
mov
pop
pop
lret
sarb
adc
mov
sub
xchg
in
lcall
ss
xchg
xor
aaa
inc
imulb
xchg
pop
mov
fldt
mov
imul
jnp
dec
or
sbb
xchg
jb
push
mov
or
adc
jno
or
icebp
cmp
mov
sub
inc
mov
rolb
dec
filds
mov
fcomps
fstl
or
cmp
xor
repnz
mov
or
mov
cmp
fimull
repnz
in
or
pop
lds
ds
dec
and
mov
sub
cmpsb
outsb
pop
mov
add
cmpl
scas
stc
addr16
pop
sub
les
shrl
int
popa
xchg
dec
mov
into
jecxz
inc
add
loop
mov
sahf
loope
imul
jno
sbb
cmp
out
sub
sbb
pusha
mov
sbb
clc
push
je
push
jl
lea
mov
icebp
and
mov
mov
dec
pusha
xchg
inc
xchg
xor
je
out
mov
inc
int
push
cld
jne
out
ljmp
inc
adc
cmp
push
gs
push
inc
movsb
fucomip
test
pop
imul
imul
mov
hlt
fwait
stc
sub
stos
stos
arpl
in
adc
ret
sub
rep
imul
and
dec
pop
mov
push
orb
std
enter
in
jnp
aam
cmp
push
mov
xor
leave
jg
mov
and
fwait
shlb
xchg
mov
dec
cmp
es
popf
xor
jnp
jmp
mov
out
popa
repz
inc
and
sti
xchg
cmp
xchg
lods
pop
bound
bound
and
je
cld
mov
ds
push
mov
sub
adc
popa
adc
mov
xor
out
jecxz
mov
sbb
and
or
ret
mov
call
push
add
dec
cmc
js
mov
dec
dec
int3
dec
add
cmpsl
jecxz
in
and
cmc
add
pop
or
mov
pop
pop
push
out
add
mov
inc
cmp
pop
push
test
nop
enter
jecxz
inc
je
dec
mov
mov
inc
sub
loope
sbbl
shrb
sbb
pop
cmp
xor
sti
pop
jae
xchg
cltd
pop
inc
sarl
cmp
lock
pop
mov
mov
push
add
cmp
aas
in
push
cs
lods
out
or
dec
pushf
lret
mov
push
push
xchg
and
outsl
cmpsl
mov
test
dec
scas
aaa
push
sbb
xchg
into
xchg
sub
mov
jns
dec
int3
movsl
into
incb
inc
mov
rclb
cmp
loopne
push
in
inc
insl
and
movsl
xor
adc
lret
cmpsb
jg
mov
cltd
mov
cmpsb
cmp
xor
int3
mov
inc
inc
loopne
push
jl
add
xor
sbb
xchg
xchg
add
mov
loop
test
out
out
pop
cmpsl
sub
call
pop
imul
or
mov
adc
jbe
inc
mov
push
inc
fs
shlb
stc
loopne
dec
push
xlat
sub
sbb
shrb
fidivrs
enter
call
jb
cmp
add
mov
mov
out
outsl
or
cmp
mov
mov
lds
ficompl
jp
clc
lea
push
xchg
push
cmp
xor
scas
lock
fcomps
ja
adc
mov
adc
cmpsl
ficoml
fisttps
mov
pop
xchg
add
cmpsb
pushf
sub
in
adc
cmp
mov
push
or
hlt
repz
insl
aad
inc
xlat
push
xchg
cmp
popf
mov
loop
pop
push
push
pushf
fmull
int
xor
xlat
gs
shl
mov
fcoms
loop
sub
in
lret
leave
pushf
add
gs
outsb
and
adc
loopne
mov
push
insl
sub
repz
aas
stc
adc
jns
push
loop
ja
mov
pop
stos
xchg
add
lahf
enter
push
pop
fs
sub
movsb
shll
cwtl
and
push
sub
pop
mov
add
push
insb
adc
lret
orb
push
ja
inc
pop
fs
dec
mov
mov
xchg
jbe
sub
sub
inc
sbb
hlt
ss
pushf
push
imul
xchg
jge
sbb
mov
mov
int3
sub
pop
pop
sbb
test
stos
sub
mov
xor
outsl
icebp
jg
pop
mov
add
jmp
xchg
cmc
les
lock
lods
loop
push
dec
enter
int
jne
inc
loope
popa
enter
jle
xchg
mov
lock
or
pusha
dec
pop
push
cmp
ss
test
or
add
pop
adc
sbb
cmp
imul
outsl
std
sahf
pop
sbb
xor
dec
xor
shll
pusha
ss
lods
xchg
cmp
push
fcoml
mov
scas
or
ret
das
pop
in
shr
or
xchg
inc
xor
int3
jp
inc
lret
fs
in
out
mov
jnp
lret
mov
or
loop
in
jl
cmp
arpl
sti
pop
outsl
repnz
or
xchg
dec
out
imul
mov
jo
icebp
jle
and
inc
pop
and
sbb
sub
test
and
mov
jnp
sahf
and
xor
ffreep
int3
mov
pop
push
pop
mov
andl
xchg
out
movsb
in
and
in
add
shll
mov
pop
pop
test
dec
pop
and
cmp
xchg
ds
cltd
sub
adc
cmp
dec
xchg
mov
mov
and
sarl
rclb
outsb
or
mov
movsl
xchg
bound
cmp
adc
mov
pop
sub
repnz
movsb
xchg
pop
mov
fstp
jae
mov
sub
call
ljmp
bound
fidivrl
aad
test
jg
adc
lods
sub
mov
js
js
sarb
mov
mov
add
push
xor
xchg
xlat
and
insb
outsb
scas
out
sbb
jbe
cli
sbb
sahf
inc
imul
cmp
cmp
xor
or
cmp
and
loop
cmp
das
cmpsb
addr16
adc
adc
push
adc
fdivr
fisubrs
fcmovb
bound
xlat
jnp
mov
daa
mov
int3
std
inc
les
enter
inc
repz
cmp
std
arpl
clc
add
xchg
xor
sub
xor
sbb
pop
push
xor
pop
pop
cmp
es
test
lds
xor
cwtl
xlat
or
jbe
test
jge
jg
in
xchg
inc
filds
xchg
xchg
mov
arpl
stos
test
pop
xchg
sub
cltd
arpl
cmp
inc
dec
roll
mov
mov
and
test
nop
das
mov
dec
enter
jnp
push
insb
out
xchg
test
addr16
sbb
into
sub
stc
inc
push
xlat
outsl
cmpb
jnp
imul
int
push
push
sub
lea
rclb
pop
cmpsl
mov
cmp
cld
int
inc
shlb
jo
adc
mov
mov
iret
idivl
mov
dec
xchg
ret
mov
xor
daa
xor
lea
int3
adc
and
adc
push
divb
js
cmp
jl
mov
xchg
les
pop
sub
lods
jl
imul
jge
cmpsb
arpl
fidivrl
loopne
lods
jg
and
int
fdivrl
mov
in
fwait
inc
push
and
adc
cmp
push
iret
push
inc
fbstp
dec
sbb
xchg
push
fidivs
adc
cld
movsb
push
pop
cs
nop
or
xchg
out
icebp
call
jo
xor
mov
daa
sete
aaa
iret
jns
cmp
roll
cmp
addb
out
push
inc
aaa
xchg
stos
leave
and
insb
subb
sbb
addr16
mov
insl
inc
push
and
or
je
sub
outsb
jl
das
test
out
xchg
xchg
pop
ret
stos
movsb
insl
and
test
mov
cmp
je
jns
mov
or
or
scas
sbb
loopne
xchg
cmp
cmpsb
add
lods
push
out
and
or
aas
cmc
push
fimuls
into
insb
pop
mov
xor
jmp
gs
mov
or
int3
pushf
add
fmuls
in
leave
cmpsb
fbld
and
pop
test
out
lret
push
call
neg
out
rcll
inc
insb
push
adc
and
xchg
pop
daa
test
jg
addb
stos
adc
lcall
pop
push
outsl
std
sub
adc
sbb
popa
pop
aas
adc
jge
jb
jmp
inc
xchg
faddl
lret
xor
push
lret
lods
or
or
lock
lret
push
mov
sub
int3
shrb
stos
mov
pushf
pusha
and
out
add
sub
adc
insl
divl
inc
xchg
jns
leave
cwtl
xchg
cpuid
xlat
xchg
add
out
cmp
ss
ret
mov
imul
js
jge
jbe
pop
cmp
popa
arpl
dec
adc
xchg
stos
repz
imul
sti
aas
lret
mov
or
pop
test
sub
push
or
mov
aas
push
jo
or
dec
in
xchg
push
pop
push
sbb
xchg
std
aad
cld
mov
mov
lret
arpl
xchg
cmp
inc
pop
add
pop
dec
mov
aas
in
dec
push
xchg
push
cmp
movsl
out
mov
xchg
jle
cwtl
mov
xchg
aas
shl
ds
test
pop
insl
leave
and
jno
dec
mov
imul
jae
push
push
jno
fsts
out
mov
push
rcrb
mov
or
mov
mov
dec
je
push
shlb
pop
xchg
sahf
or
adc
lds
shrb
jle
iret
int
inc
loope
aam
fcmovnbe
push
sub
or
cmp
jle
pop
adcb
lahf
adc
sub
movsl
loope
cs
insb
xlat
inc
and
or
xor
jae
test
hlt
xor
cmp
pop
cmp
or
imul
outsb
je
pop
int
mov
xchg
sbb
inc
sub
call
xor
lods
cwtl
insl
imul
hlt
rolb
imul
insl
sti
lods
jle
jmp
or
push
leave
mov
push
aam
mov
ret
int
adc
mov
add
pop
push
cmp
fs
mov
inc
jno
clc
testl
pop
in
jmp
sarl
push
push
movsl
dec
fisubrl
add
and
adc
jae
int3
or
and
pop
dec
daa
cmp
cmova
nop
mov
cmp
jne
inc
pop
aaa
cli
std
fwait
sub
test
les
shr
pushw
test
dec
cwtl
popa
fstpl
fwait
dec
js
mov
cmpsl
sbb
xor
movaps
push
and
bound
outsl
lds
jmp
adcb
addr16
out
xchg
jl
cmp
xchg
lock
jecxz
mov
fdivrl
movsl
sahf
aad
xlat
jnp
ss
mov
jge
xorb
dec
aad
lock
mov
dec
ficoml
test
jl
cmp
out
mov
add
cmp
int
mov
js
shr
jae
arpl
out
inc
jo
jle
cmp
cmp
mov
push
fcmovnb
testb
insl
scas
cld
ljmp
sbb
movsl
mov
sub
push
dec
mov
pop
mov
aam
movsl
lahf
and
mov
cmpsb
arpl
sbbb
stc
cmp
test
jns
pop
jp
fdivrp
into
sub
cli
cmpsl
jg
mov
or
xor
movsl
mov
repz
mov
add
xchg
stos
or
xchg
std
pop
mov
insl
xchg
and
fwait
dec
fldenv
sar
inc
sbb
push
aas
pop
sbb
shll
adc
mov
xor
cmp
xor
lcall
decl
xor
add
sarb
dec
cmpsl
mov
imul
aaa
push
pop
ja
stos
mov
outsb
cmpsl
adc
out
add
les
sti
mov
or
jmp
outsl
gs
and
ljmp
mov
or
fstpl
arpl
mov
xchg
mov
mov
jmp
sub
hlt
add
push
xchg
sub
mov
inc
out
jbe
pop
jns
int
sbb
fs
in
mov
scas
sub
sub
mov
xchg
or
test
orl
cli
jae
mov
mov
push
fs
dec
sbbb
pop
aam
cs
fmul
mov
gs
add
cmp
test
and
nop
pop
mov
test
insb
push
dec
push
loop
dec
cmp
ret
pop
push
cmp
std
lcall
jno
imul
ss
out
cmp
sbb
dec
in
sahf
loop
inc
adc
push
lret
pushf
in
xor
mov
jns
jae
popa
sbb
hlt
adcl
fcmove
sbb
mov
inc
pop
lret
push
mov
test
inc
push
sahf
push
cmc
lret
fs
lahf
out
out
push
pop
std
imul
push
neg
xchg
in
movsb
sbb
mov
pop
pop
pushf
inc
mov
xor
mov
or
repnz
push
jl
repz
aas
mov
sahf
push
mov
int3
sbb
gs
push
sub
outsl
xchg
out
ds
bound
push
sbb
or
cmp
in
les
or
cmc
cmp
xchg
das
ret
ja
push
scas
push
loopne
inc
data16
dec
movsl
pop
xor
adc
js
or
xchg
sub
jp
in
pusha
out
ss
mov
pop
shl
push
inc
in
roll
adc
js
imul
xchg
daa
or
in
loop
stos
hlt
adcl
sbb
cmc
insl
xchg
fstl
andb
mov
xor
sub
in
or
out
cmp
pop
idiv
call
sbb
clc
add
shrb
cmp
lea
jbe
js
mov
or
push
in
addr16
pop
xchg
pop
pushf
cmpsb
push
jg
xchg
cld
jo
mov
clc
stos
test
push
je
insb
mov
negl
iret
dec
pop
push
imul
mov
ret
pop
pop
sbb
or
sub
push
xchg
mov
push
js
sub
lock
les
mov
push
js
clc
sub
ja
adc
jns
cwtl
subb
fcmovu
out
xchg
mov
xchg
cmp
jno
fmuls
shrb
or
stos
mov
inc
push
loope
cmpb
addr16
es
notb
vmovaps
ret
data16
add
and
inc
aad
arpl
imul
div
mov
inc
cmp
and
push
sbb
mov
es
into
push
mov
js
repnz
mov
repnz
jge
fsubrs
push
pop
ret
dec
outsl
imul
xchg
icebp
fstpt
jmp
cmp
or
jns
xchg
xchg
pop
jb
js
hlt
pop
gs
icebp
mov
dec
push
aam
lret
mov
mov
and
mov
call
mov
jp
jmp
bound
gs
dec
int3
cmp
inc
js
jo
push
add
cmp
mov
pop
gs
push
rep
push
inc
repnz
ss
js
jmp
lcall
dec
movsb
jg
pop
sub
lods
call
mov
push
dec
imul
rcr
or
jno
and
jmp
sti
mov
inc
jo
xor
je
fsubl
cmp
aas
out
xor
ret
enter
and
cmpsl
xchg
mov
mov
jle
push
cmp
and
xchg
cwtl
lock
push
js
dec
xchg
fidivrs
cmp
iret
inc
pop
add
mov
and
xor
testl
je
mov
clc
into
int3
leave
sbb
in
or
mov
and
popa
jge
sbb
cmc
xchg
shlb
pop
jg
mov
call
es
dec
cmp
aad
int3
push
ret
daa
ret
into
jg
sarb
ret
jbe
mov
stc
subl
xor
mov
mov
xchg
cmpsb
jnp
ja
sub
ret
movsl
and
movsb
sub
cmc
jp
outsb
xorl
leave
mov
and
or
xor
sub
in
stos
les
int
aas
mov
scas
shlb
mov
xor
lock
outsl
sbb
outsb
push
fdivrl
outsl
mov
mov
dec
mov
cmpsb
popa
insb
jg
fs
cmpsb
pop
fs
add
lret
xchg
in
lret
fnstenv
push
push
add
ds
sbb
iret
pop
lcall
jno
imul
mov
inc
dec
push
ds
call
call
ret
or
in
push
pop
push
sbb
jle
test
mov
inc
mov
loopne
xchg
dec
je
ror
roll
add
mov
inc
push
lods
hlt
adc
sub
movsl
into
or
roll
xchg
sub
inc
fxch
pop
sbb
gs
test
fidivrl
xor
cmp
movsl
mov
jmp
pop
sbb
xchg
cmpb
push
dec
int
lds
xchg
jp
pop
jne
inc
inc
and
jo
nop
sarl
in
fwait
sti
into
xchg
mov
pop
sbb
icebp
cmc
fimuls
mov
xchg
mov
and
pop
movsb
and
std
addr16
lcall
cs
sub
je
adc
arpl
aaa
cmp
sub
bound
xor
and
insb
dec
inc
jne
mov
dec
in
aaa
popf
movsb
sbb
cmp
inc
shll
and
mov
int
popf
adc
mov
addr16
je
arpl
lret
aad
mov
xor
sahf
jnp
cmp
enter
inc
sub
lds
jbe
imul
lock
cmpsb
or
inc
xchg
adc
sub
rorb
add
jl
lods
mov
mov
inc
sahf
inc
mov
mov
stos
cli
jbe
mov
dec
out
push
sub
loop
xor
cli
and
out
push
call
push
dec
inc
adc
xchg
mov
pop
dec
cmpsb
inc
push
test
bound
dec
mov
out
and
jl
gs
dec
es
adc
xchg
push
test
test
push
lcall
cmpsb
push
push
fistpl
in
mov
mov
xor
xchg
into
ljmp
jge
sub
cmpsl
jae
sarl
add
imul
enter
pop
sahf
ds
in
jns
push
je
push
int3
mov
mov
cmpsb
push
jns
and
adc
jno
out
in
or
ret
jge
cmp
push
push
stos
sbb
xor
and
in
mov
adc
pop
stos
jbe
mov
and
outsl
ret
test
adc
mov
repz
xor
jnp
pop
cli
and
imul
inc
insl
pushf
push
adc
jp
and
insl
mov
sbb
mov
shrb
mov
pop
adc
adc
leave
ds
inc
mov
lock
push
lret
js
jb
mov
cmpb
scas
in
je
aaa
inc
loopne
adc
jecxz
push
push
jecxz
ret
inc
mov
fnstcw
mov
mov
clc
sahf
or
je
sub
mov
lock
mov
lods
cli
add
xchg
ficompl
jae
mov
jo
cmp
mov
mov
je
push
jbe
mov
jae
pop
fimuls
jno
sub
add
xchg
mov
mov
outsb
sub
jg
cmp
jg
cmp
loope
cwtl
wrmsr
cmpsl
pop
mov
pop
test
shl
sbb
loope
arpl
jmp
imul
icebp
jmp
push
push
lret
jmp
push
jmp
pop
scas
jo
mov
ret
pop
in
lea
inc
clc
mov
jp
inc
testl
inc
xor
pop
test
out
arpl
xchg
dec
das
adc
shll
aaa
inc
enter
pop
add
mov
push
ds
dec
cld
cltd
push
inc
jns
sbb
push
dec
or
in
adc
ds
in
push
aam
add
push
cltd
ret
enter
inc
add
xlat
jb
xchg
test
js
movsb
lds
xchg
pop
jle
sub
xchg
fisubrl
mov
and
test
sub
or
and
dec
or
pop
test
sub
icebp
iret
lret
movsb
add
data16
pusha
movl
in
or
cmpsb
push
adc
pusha
sub
daa
rolb
movsl
xchg
mov
push
mov
adc
xchg
leave
cmp
outsb
mov
mov
stos
xlat
sahf
lods
sub
cmpsl
shrb
leave
in
in
pop
pop
fsts
cmp
call
fisttps
pop
sub
push
dec
cmp
outsb
add
xor
mov
dec
or
xor
add
movsl
fs
push
sbbb
mov
adcb
rcrl
cmpsl
aad
icebp
arpl
cmp
aas
out
pop
ss
in
imul
addr16
lahf
repnz
pop
xchg
and
jp
cltd
xor
and
icebp
mov
rolb
movl
cmpsb
xor
jg
call
mov
fs
push
in
cmpsb
push
rdmsr
mov
dec
cmc
pop
pushf
repnz
cwtl
daa
sbb
push
add
cmp
stos
pusha
repnz
mov
add
sub
cmc
mov
dec
mov
or
lea
es
test
scas
add
jl
jle
mov
sbb
test
inc
stos
je
mov
xchg
in
imul
inc
jp
push
je
scas
insb
rorl
clc
fs
sbb
xchg
aam
inc
sub
scas
clc
lds
into
pop
fistpl
xor
mov
daa
insl
lahf
pop
mov
cmpsl
push
sbbb
mov
shl
cmpsb
and
and
or
push
cmp
push
pop
or
xchg
pushf
jno
popa
ja
xchg
mov
stos
cwtl
dec
xchg
adc
mov
or
xor
sub
aas
divl
and
cmp
les
fbld
xchg
mov
stos
and
ds
in
mov
ss
inc
push
call
fisubs
push
xchg
outsb
adc
sub
js
xchg
lods
jno
stos
vdivsd
sbb
fsub
lret
mov
push
xchg
jnp
outsl
push
or
push
cwtl
sub
cwtl
jg
xor
sbb
cmp
out
lods
jl
lods
loop
xlat
pop
mov
sahf
xchg
jg
jmp
jo
popf
push
mov
js
jae
lret
and
lods
les
jge
cmp
mov
inc
and
push
test
fdivr
mov
sub
mov
sub
aaa
test
sub
dec
push
pop
cmp
not
ds
sub
sub
sub
dec
dec
fs
je
insb
mov
out
lret
insl
xor
rcrl
js
pop
dec
jg
fs
xor
je
mov
dec
mov
add
jnp
pusha
push
adc
je
out
jl
lods
mov
cld
push
test
out
addr16
push
cmp
mov
pop
dec
je
pop
jb
insb
inc
jge
imul
cltd
pop
inc
and
push
rorl
dec
xchg
pop
cmc
and
mov
push
outsl
inc
dec
jbe
call
div
or
jecxz
lret
arpl
mov
lret
outsb
out
clc
in
or
inc
cmpsl
jl
mov
lret
lea
adc
mov
mov
in
cmp
or
leave
fadd
xor
sbb
mov
inc
enter
adc
lret
nop
stc
mov
fdivrl
mov
and
lock
fs
adc
lahf
fcoms
pop
mov
sbb
mov
mov
adc
fildl
pop
sbb
adc
jg
in
xchg
jno
movsl
insl
cmp
insl
outsb
jp,pt
sub
cmp
in
inc
insl
enter
mov
sub
mov
add
sub
orl
rorl
cmp
outsl
stos
mov
cmpsb
std
pop
dec
mov
cld
fsubrs
sbb
adc
inc
jmp
push
aad
loopne
pusha
mov
or
lods
iret
outsb
aaa
and
lret
out
inc
mov
push
jo
lds
jae
cmp
insb
pop
pop
das
push
pusha
int3
outsl
jbe
push
mov
ret
outsb
and
test
cs
mov
dec
mov
adc
out
sarl
mov
fbld
iret
enter
lret
push
and
cltd
ret
xor
add
jg
popf
sti
notl
or
mov
mov
aaa
subb
bound
sbb
mov
jle
cli
in
mov
lds
sbb
ret
inc
fadds
mov
jns
sub
scas
pop
es
fwait
icebp
orl
xchg
inc
xor
dec
mov
fsubrs
xor
es
sbb
int
xor
ds
pop
pop
out
arpl
fidivrs
movl
jae
popa
leave
push
andl
cmp
imul
rcll
in
lea
stos
faddl
les
xor
mov
xchg
xchg
or
ficomps
sub
xor
jne
mov
pop
or
subl
adc
mov
out
xchg
cmp
repz
lods
pop
jo
test
rorl
outsl
jnp
xchg
lods
imul
jp
out
lahf
push
add
xchg
mov
inc
mov
mov
lds
xchg
push
daa
jno
ret
add
rclb
lcall
mov
mov
adc
rolb
xchg
in
or
ss
ss
xor
outsb
scas
push
push
push
int3
adc
popf
ret
cli
xchg
jp
rcrl
sahf
dec
xchg
icebp
sub
daa
or
scas
fdivs
popa
inc
fistpll
jge
out
js
nop
dec
cld
sbb
inc
and
add
jle
leave
inc
popa
mov
fcomps
and
jne
pop
fwait
cld
out
and
xor
mov
or
int
int3
adc
jb
sti
xchg
test
les
test
shrl
in
mov
mov
cmp
xchg
lods
andb
jle
jl
loop
xor
loop
sahf
adc
push
out
cmp
sbb
pop
inc
insb
jb
push
sbb
jecxz
or
adc
mov
mov
hlt
fnstsw
cmpl
lods
and
inc
xchg
xchg
sbb
pop
jns
ja
mov
icebp
push
adc
cmp
jo
fisubl
sbb
jae
push
roll
data16
idivl
jl
push
leave
pop
gs
dec
cmc
insl
call
add
mov
mov
mov
jmp
stos
mov
xlat
es
cmp
or
push
add
leave
mov
inc
xor
dec
inc
adc
adc
mov
and
sub
mov
jne
int3
fdivs
cs
inc
loopne
jns
add
add
jae
mov
push
add
or
jne
cli
in
dec
inc
mov
jge
incb
es
jbe
or
jmp
gs
rcll
and
in
fisubrs
shll
xchg
insl
imul
xchg
add
pop
add
jge
cmp
cmp
outsl
or
cmpsl
into
iret
out
popa
pop
adc
xchg
sbb
xor
pop
cmp
jbe
nop
inc
pop
and
mov
sbb
aaa
inc
cwtl
sub
mov
jl
xchg
push
les
int
in
stos
push
dec
mov
nop
popf
adc
xchg
lcall
pusha
cmpl
outsl
insl
fisttps
sub
mov
sbb
call
mov
cld
and
or
data16
rclb
jle
test
fisubs
insb
addps
dec
cmc
sub
test
je
push
ja
sub
sbb
in
testl
cwtl
int3
adc
xchg
bound
sub
mov
std
jecxz
adc
add
lret
cltd
xlat
cmp
rorb
cmp
push
pop
adc
stos
and
js
pinsrw
sti
leave
lds
imul
and
jp
jg
sub
pop
jnp
insl
sbb
pop
jge
fisttpl
mov
jmp
push
add
scas
gs
sbb
sbb
and
cmp
aam
dec
mov
stos
repz
mov
sahf
sub
jp
push
dec
sub
imul
mov
bound
xchg
popa
push
push
jg
push
mov
into
es
mov
lods
xlat
es
or
fs
push
cs
push
loope
or
pop
repnz
push
add
dec
movsb
loope
jbe
xor
add
out
push
xchg
mov
nop
jmp
jp
int3
sub
pop
inc
cltd
mov
cmpsb
lock
push
cmp
test
sub
mov
dec
movsb
pop
dec
pcmpgtd
xchg
and
sarl
jl
ljmp
pop
mov
push
inc
cmp
sbb
mov
sub
fs
jb
dec
adc
jmp
mov
inc
mov
imul
push
pop
mov
mov
add
push
dec
cmp
inc
test
cmp
mov
xchg
xor
clc
repnz
loope
cmp
mov
xchg
arpl
jecxz
xchg
xchg
jle
mov
dec
scas
mov
sub
sub
or
push
mov
xchg
andb
cs
ror
pop
mov
test
pushf
mov
inc
out
sub
aaa
adc
repnz
sub
mov
shll
jne
pop
popa
mov
mov
jl
add
aaa
jno
jb
mov
ficoms
xchg
sub
inc
jne
mov
sbb
pop
push
rclb
cmp
and
and
mov
inc
sub
mov
mov
cld
jge,pn
fsubrl
jmp
or
add
roll
andl
dec
aas
dec
js
cmc
out
and
xchg
jg
lock
out
pop
jno
jge
mov
outsl
call
stc
loopne
mov
loop
in
jge
orb
hlt
fsubs
jno
and
push
sbb
aam
sbb
xor
pop
jl
into
pop
stc
and
mov
clc
mov
fiadds
pop
and
push
rclb
and
jnp
lods
test
ret
adc
sbb
xor
cmp
data16
cmp
iret
dec
dec
movntq
and
add
out
sbb
and
sbb
lods
xor
jmp
andl
mov
cmpsl
mov
movsb
pop
aam
dec
and
aas
adcb
test
repnz
test
xchg
pop
xchg
cmp
std
xor
lods
push
mov
dec
xor
xor
add
cmpsl
fwait
push
xor
xchg
into
add
pop
xchg
jl
dec
inc
lods
ljmp
sub
cmp
and
imul
fidivrl
inc
mov
jle
sub
pop
xchg
data16
xchg
shrl
jge
cmp
push
pop
dec
sbb
fisubl
push
int3
scas
movsl
lret
nop
fistpll
es
add
add
push
and
pop
jge
inc
xchg
jno
pop
mov
in
or
add
jle
aad
pop
inc
inc
xor
flds
fmuls
mov
sub
outsb
aaa
jne
jne
imul
mov
loope
jno,pn
jmp
call
add
sub
push
popf
jno
ss
movsl
repz
clc
dec
icebp
je
stc
int
js
inc
mov
xchg
or
sub
dec
aad
inc
nop
aam
mov
jg
mov
repz
outsb
pop
popa
fbld
out
or
xlat
jmp
or
mov
ret
rcll
xchg
ficoms
in
cmp
mov
mov
popf
dec
in
adcb
push
cltd
fwait
push
mov
sti
addr16
jb
or
xchg
dec
mov
inc
jle
lods
xor
xor
insb
aam
aas
seto
jle
sub
push
iret
adc
add
xchg
mov
shlb
add
movsl
cmpsb
push
jnp
aam
movsb
pop
push
push
pop
shll
lret
outsl
clc
push
pushf
shll
push
xorl
lret
push
pop
push
lea
cld
mov
cmp
aad
jno
gs
dec
movsl
mov
je
jl
jge
cmp
jne
js
stc
int3
stc
push
pop
or
cltd
or
cs
in
std
shrl
dec
in
out
mov
ror
lcall
sbb
adc
daa
fists
pusha
outsl
push
jl
lahf
push
into
in
lods
mov
cmpb
mov
daa
cmp
sbb
cld
adc
rol
jne
pushf
movsl
clc
jp
jno
pop
sahf
cmp
add
pop
xor
mov
sbb
shl
mov
repnz
sub
pop
out
in
mov
lahf
inc
or
inc
mov
mov
sbb
aam
movl
fldt
pop
xor
sub
lods
xchg
fldenv
sub
pop
and
or
test
pop
sbb
fcmovu
mov
push
mov
ds
ror
cmp
mov
push
imul
adc
lods
sbb
xor
lds
dec
mov
sub
aad
mov
xor
ffree
mov
cmc
mov
inc
pop
clc
xchg
jg
mov
cwtl
or
jle
in
mov
mov
cmp
inc
cmpsb
cmp
lret
jae
xor
dec
or
cli
stos
dec
dec
xchg
push
lcall
nop
xchg
adc
xchg
sbb
and
push
mov
and
int
xorl
sahf
fsubrs
push
add
repz
pop
adc
push
xor
pop
lret
sub
rorl
mov
and
cmp
and
lds
fldenv
cmp
js
js
xor
pop
xchg
adc
lahf
push
xor
mov
xchg
int
pop
jns
enter
popa
and
add
into
mov
loop
xchg
pop
inc
push
and
adc
leave
out
cltd
or
fnstsw
ds
mov
mov
outsb
scas
gs
int
mov
xlat
fmuls
sub
sarl
push
push
lret
cs
add
adcb
xchg
sbb
push
enter
sub
stc
ffree
or
adc
xchg
scas
cld
rorl
popf
jne
adc
in
xor
sub
scas
insl
inc
xlat
ret
sbb
jecxz
push
aam
js
adc
js
enter
out
adc
cmc
cmovl
pop
fildll
xor
decl
and
dec
fsubp
sti
clc
das
sbb
push
xlat
mull
jmp
fisttpl
and
popa
stc
jo
loopne
cmpsb
sub
cmpsb
pop
in
popa
mov
aam
add
fstpl
push
inc
test
push
mov
ret
xor
jg
lea
ja
mov
pushf
sbbb
mov
lock
pop
and
push
ret
inc
pop
jae
test
imul
popa
mov
jae
call
mov
dec
sub
ja
mov
repz
data16
iret
movsb
daa
fcomps
pop
movsl
pusha
insb
cmp
push
cmc
cs
dec
dec
mov
in
psubusw
ficoms
fs
sbb
cwtl
ficoms
inc
gs
and
cmp
popa
adc
call
mov
and
out
js
mov
icebp
insb
pop
jl
int
mov
inc
inc
insb
imul
stos
nop
aas
lret
inc
rorb
pop
sub
test
add
dec
and
xchg
lret
jmp
enter
cmpsl
js
sar
out
popf
incl
inc
inc
push
pusha
lods
xor
in
cmp
cmp
cld
pop
stos
jecxz
jb
sub
pop
bound
pop
leave
nop
ret
sbb
cmp
lahf
lods
mov
xor
fisubs
xor
jmp
cmpsb
cmpl
add
mov
out
stos
sub
dec
jmp
or
mov
push
xchg
repz
xchg
pushf
inc
push
lock
out
sub
lcall
enter
aam
mov
addl
addr16
subb
cli
bswap
out
pop
inc
pop
cmp
je
sti
dec
or
push
sub
mov
mov
cmpsb
or
imul
mov
out
pop
pusha
movsb
shlb
mov
sub
arpl
push
aam
dec
dec
fsubs
add
sahf
push
push
push
sbb
push
in
push
out
push
subl
and
cld
scas
test
sbb
adc
cs
fimull
push
cmpsb
sarl
push
push
xor
and
inc
inc
std
dec
pop
in
imul
or
mov
xchg
mov
cmpsb
adc
sbb
test
out
pop
or
cwtl
iret
mov
punpckldq
cwtl
cmpsb
sbb
orl
popa
lcall
insb
pop
rcl
jge
lcall
and
jecxz
hlt
mov
lods
mov
adc
stc
lret
cmpsb
mov
mov
pusha
mov
push
inc
push
aaa
sub
xchg
push
and
push
lods
xchg
dec
dec
imul
dec
arpl
bound
pop
mov
aaa
push
cmpsb
fwait
cmpsl
push
jg
cmp
xchg
std
pop
jecxz
and
dec
push
add
mov
aas
les
push
sahf
pop
neg
pop
sbb
sbb
fld1
push
dec
mov
aad
pop
andb
dec
fs
pop
bound
mov
sbb
loope
jle
mov
daa
loop
or
ds
outsl
mov
ficomps
ret
lods
push
add
in
mov
jp
cmpsl
iret
std
test
and
outsb
out
test
not
fisttps
pop
gs
and
push
sahf
int
jb
ja
cmp
push
outsb
xchg
jmp
leave
iret
mov
xor
inc
lods
inc
out
test
cli
dec
add
xchg
ficoml
out
adc
daa
es
and
repz
sub
pop
lds
or
mov
xor
ds
dec
xchg
push
or
cmp
pop
jg
push
stos
std
and
mov
inc
lds
bound
jb
and
jge
cmp
xchg
jl
cmp
jbe
aam
jne
mov
test
pushf
push
sti
clc
shrl
pop
das
inc
or
sbb
fidivs
dec
subl
ss
sub
ja
les
sub
xor
sbbb
arpl
jo
fsubl
testb
jbe,pn
fildll
mov
xchg
add
mov
mov
cli
xchg
in
mov
repz
mov
xor
inc
cs
ja
in
addb
ficoms
or
movsl
lods
shr
ljmp
dec
fimuls
adc
insl
cwtl
pop
test
divb
inc
mov
xor
mov
sbb
ret
in
lret
push
aam
movsl
ljmp
jle
inc
std
out
popa
add
dec
imul
fwait
popf
xor
in
add
mov
mov
cmc
outsb
push
mov
pop
mov
aas
mov
cmp
shll
add
cld
and
ljmp
daa
iret
jp
gs
mov
adc
stos
mov
dec
rolb
lods
adc
in
pop
daa
loop
sti
push
aas
jns
lods
je
sub
je
sti
pop
or
jp
shll
leave
xchg
xor
or
pop
push
jne
mov
xchg
mov
sbb
in
xor
in
sbbl
lods
sbb
cmpsl
push
in
dec
loopne
xchg
aam
lds
out
test
mov
pop
int
rcrb
inc
cmp
adc
mov
pop
ljmp
or
xor
loop
out
arpl
jl
lock
jg
inc
sub
and
mov
clc
jg
mov
jb
lock
inc
fnstcw
mov
mov
lret
adc
pop
jl
jnp
dec
cmp
fsub
add
mov
mov
das
xlat
insl
push
mov
repz
imul
das
ret
les
out
xchg
pop
mov
imul
sub
inc
sti
jp
rcrl
mov
pop
mov
fs
es
hlt
and
fiadds
pop
lock
xchg
pop
mov
pop
jno
loop
fcoml
mov
xor
jle
clc
xor
add
adc
iret
je
push
cmp
dec
push
jne
cld
test
jl
cs
fldenv
ja
stc
insb
jl
addr16
arpl
jle
or
mov
mov
xchg
jne
popf
pop
outsb
arpl
mov
mov
jo
sub
ja
cmp
addr16
xor
loopne
fdivp
sahf
psubsw
jnp
icebp
sbb
add
pop
dec
rol
pop
aas
lret
sbb
add
jp
push
ds
mov
cmp
cs
mov
mov
ss
push
sbb
pop
jbe
sub
std
fcmovu
mov
inc
adc
ja
pop
es
pop
dec
insb
jle
cs
ds
xor
jne
fistl
xchg
test
or
out
nop
out
mov
daa
test
mov
xlat
pop
rcrb
sbb
xor
adc
mov
mov
je
sub
iret
ret
cmp
mov
repz
adc
ja
adc
mov
xchg
sarl
push
outsb
jns
push
insl
dec
aas
fwait
cmpsb
pop
sti
pop
repnz
fcmovb
pop
pop
or
les
loope
inc
out
add
in
mov
test
popa
stos
push
push
push
sub
and
pop
xor
and
cmp
mov
mov
mov
xor
jl
push
adc
shlb
and
lret
sbb
mov
or
pop
int
fisttpll
xchg
jmp
lods
pop
mov
mov
insb
cmp
inc
adc
popa
test
jle
jnp
sbb
mov
adc
lods
loop
push
add
pop
mov
xlat
andb
xor
insl
inc
and
xchg
push
fstpl
lret
jb
pop
xchg
sub
divb
add
stos
jecxz
or
loop
push
add
icebp
pushf
mov
xchg
in
cmp
cmp
mov
popa
and
loop
cmp
dec
jns
nop
ljmp
lds
mov
pop
cmp
idivl
repz
les
in
inc
jmp
into
push
outsb
popf
lods
cmp
std
icebp
push
pop
push
div
add
daa
test
add
dec
xchg
lret
shl
repnz
pop
divl
mov
inc
pop
push
adc
js
inc
ffree
xchg
xchg
cli
mov
mov
aam
jmp
mov
dec
adc
pop
das
push
and
movb
test
push
sbb
and
fistpll
pushf
pushf
aas
scas
pushf
popa
std
inc
daa
inc
rclb
data16
inc
data16
mov
mov
outsl
daa
sarb
push
lret
loopne
mov
mov
mov
orb
lahf
mov
sub
mov
cmp
add
mov
cmp
sarl
mov
pushf
push
scas
and
icebp
jmp
std
add
ja
or
lea
outsl
popa
mov
pop
mov
leave
dec
xor
mov
jp
push
add
dec
push
out
adc
andb
movb
mov
pop
cmc
mov
stos
pop
pushf
lods
mov
test
mov
scas
jae
imul
pop
aaa
add
mov
iret
es
jne
repnz
jo
mov
aam
cmpsl
adc
xor
mov
pop
std
inc
xchg
int3
addb
nop
mov
gs
rcrb
sbb
popa
cltd
decl
jp
mov
sahf
test
fsubrs
jno
cmp
push
fstpt
cmp
mov
lods
ret
insb
inc
mov
or
xchg
dec
ds
pop
jne
sbb
loopne
sbb
je
ds
sbb
mov
aad
sbb
das
mov
fimuls
std
mov
pop
xor
jp
iret
sub
cmpsl
cmp
insl
jp
repz
fisubrs
adc
aam
fadds
or
lods
mov
cmp
and
repnz
jns
jne
jle
adc
inc
pop
push
cs
jg
test
or
out
xchg
cld
jbe
dec
jp
and
addr16
data16
pusha
insb
xchg
jle
lcall
rorl
imul
aaa
mov
in
dec
pop
mov
xor
dec
add
movsl
insl
nop
push
push
scas
lods
xor
test
out
xor
xchg
stos
push
sbbb
icebp
shrl
lret
xor
lods
imul
call
js
repnz
push
cmp
or
mov
loope
jp
in
or
hlt
or
sub
pop
xlat
idiv
jp
cmp
inc
sub
das
inc
loop
sub
jle
adc
ljmp
mov
pop
pushl
fldcw
scas
jbe
jo
dec
push
jmp
mov
out
and
subl
mov
jne
loop
popa
ret
pop
inc
dec
ret
cmp
pop
pop
ljmp
push
test
adc
cmpb
or
xchg
cmp
pop
ljmp
iret
add
in
push
sub
mov
bt
popf
push
cs
push
repz
je
adc
sbb
outsl
and
sbb
jo
jp
movsb
dec
adc
lahf
push
out
jbe
insb
cld
mov
sub
xchg
sub
push
push
lods
loopne
inc
push
scas
in
sti
dec
xchg
iret
test
pop
cmpsb
daa
adc
fsubl
jbe
sub
push
sub
sub
ret
mov
test
mov
setne
sub
jmp
adc
stos
jns
popa
test
popa
stos
and
mov
or
in
or
aas
push
lahf
insb
pop
icebp
cmpsl
mov
sub
push
add
cmpsl
lock
cmc
inc
je
fbld
sub
std
repz
mov
add
pop
jae
rcr
cmp
test
xchg
xor
dec
inc
test
or
dec
pop
dec
push
loope
xchg
outsl
rorl
mov
mov
mov
jo
adcb
lahf
lea
sti
dec
cmp
test
jns
mov
push
jno
les
xor
jmp
in
sub
in
xchg
daa
gs
dec
pop
test
pop
cmp
push
mov
cs
xchg
sub
sub
push
aam
outsb
mov
pop
sti
icebp
add
mov
outsb
push
loope
stos
mov
cli
cmovp
adc
dec
repz
fs
enter
xor
push
mov
scas
pop
mov
and
inc
sbb
andb
dec
fdivrs
test
sub
and
xchg
xchg
pop
mov
leave
imul
lods
movsb
xchg
push
es
outsl
jg
clc
dec
lcall
mov
sbb
pop
fisttpl
xchg
adc
and
or
test
mov
in
push
cwtl
roll
push
jo
fwait
pop
pop
outsl
leave
out
mov
cltd
cmpsl
addb
sub
dec
cmp
nop
fs
test
repz
in
and
mov
sbb
es
test
dec
dec
mov
and
mov
mov
jp
lcall
pop
outsb
cs
scas
cmpsl
push
sbb
test
inc
shlb
jnp
mov
push
ficoml
add
cmp
lods
dec
sbb
aaa
xchg
loope
xor
sub
test
mov
mov
sub
xchg
dec
sub
test
outsb
mov
shl
mov
jp
in
nop
test
pop
pop
test
stc
jle
ret
sub
xchg
jno
mov
xchg
scas
adc
pop
add
mov
in
xor
mov
jb
lods
cmp
jmp
inc
xchg
mov
les
mov
in
and
adc
call
push
test
sbb
dec
mov
push
scas
fcmovnu
or
test
inc
sbb
mov
test
lock
in
je
xchg
mov
sub
push
scas
sbb
stc
mov
cs
xor
pushl
cmp
sub
jp
bnd
or
aas
imul
gs
mov
mov
fs
adc
repz
xchg
push
sbb
insl
adc
cltd
mov
rcrl
xchg
pusha
sti
dec
arpl
xchg
fwait
pop
push
leave
cs
mov
sub
or
jge
aam
mov
iret
fisttpl
and
jo
pop
or
inc
sub
adc
mov
mov
loopne
or
cmp
lret
js
xchg
xlat
out
cmp
jge
jp
mov
sub
adc
cwtl
leave
adc
inc
pop
adcl
out
xchg
sbb
bound
sbb
or
movsl
add
clc
in
test
lea
lock
mov
mov
fcompl
push
ret
or
xor
mov
jnp
orl
jle
leave
mov
fstpl
inc
or
shll
into
jns
out
push
mov
dec
mov
jo
adc
nop
pop
pop
sub
test
xor
lahf
outsl
test
test
mov
ret
cmp
pushf
push
movsl
jno
mov
cmp
pusha
xchg
mov
mov
notb
xor
pushf
insb
orl
sub
push
push
sbb
xchg
xor
test
xchg
add
push
insb
cs
insl
push
stos
lods
jns
sbb
sti
or
push
sbb
mov
les
lret
inc
nop
mov
insb
add
xor
pop
sub
sub
dec
dec
es
or
fisubs
xchg
mov
repnz
dec
bound
dec
and
int3
loopne
sbb
mov
int3
frstor
sub
mov
or
popa
hlt
xchg
daa
in
mov
dec
pop
push
or
ret
jmp
pop
mov
jne
jno
jle
jl
jno
shrl
mov
push
dec
sti
inc
loope
movsl
ficompl
push
subb
mov
in
lods
or
jo
fcoms
out
inc
cli
cmc
dec
and
lcall
sbb
cmpb
add
mov
sub
dec
inc
cli
ret
pusha
test
or
int
cmp
test
jge
xchg
add
mov
mov
push
loope
fildll
or
or
fcmovne
sub
mov
adcl
jl
mov
push
push
push
pop
jge
cmp
xchg
push
fisubs
cmpsb
orl
jg
dec
cmp
xchg
sbb
in
repnz
sub
pop
test
ljmp
sub
bound
xchg
cmp
xor
cmp
adc
add
lock
adcb
jecxz
leave
bswap
xchg
and
bound
decb
mov
insl
sahf
sub
cli
and
push
addr16
push
popa
mov
pop
mov
xchg
jecxz
xchg
popa
out
xor
jns
insl
dec
dec
xor
jl
das
cmpl
adc
mov
mov
xor
pop
cmp
out
jmp
aad
adc
push
ss
frstor
push
mov
ss
dec
xor
test
addr16
enter
negl
mov
frstor
cmpsb
push
mov
int
outsl
sub
hlt
mov
cmc
pop
aad
scas
es
data16
in
mov
cmp
xchg
popa
adc
jno
fs
jns
sub
mov
push
sti
jo
push
xchg
iret
cs
xor
insl
hlt
xchg
lods
pop
mov
sub
lods
ret
sbb
lcall
sbb
dec
sub
jl
fs
add
fnstenv
inc
insl
outsl
ds
pop
in
insb
outsl
inc
cmp
mov
mov
xchg
sbb
xchg
in
mov
jg
outsl
pop
jl
sub
hlt
test
in
xchg
pop
mov
mov
call
push
jle
cs
mov
fdivrs
and
jbe
add
xchg
loop
xor
mov
mov
je
xchg
dec
cmp
pop
std
adc
fstl
rcl
fcomp
xchg
ret
jns
xor
jmp
fsubr
jnp
movsb
cmp
or
adc
out
aad
xchg
inc
push
xor
xor
out
cwtl
out
imul
mov
push
repz
jl
lcall
or
movsl
xor
or
jo
xchg
cmp
out
fsubs
push
push
gs
adc
push
lods
lds
xchg
or
arpl
jg
push
jae
push
pop
cmp
xchg
cmp
push
jecxz
pop
cmpsb
loope
test
lcall
aad
mov
add
ss
sbb
mov
sub
andb
daa
ljmp
pop
ljmp
sub
movsl
icebp
dec
in
fdivp
mov
inc
mov
or
lret
es
dec
adc
mov
mov
insb
mov
sbb
loope
cmp
shr
out
and
test
or
cmpsb
inc
and
or
mov
les
add
js
sub
xchg
push
mov
insl
push
lods
insl
sub
add
imul
pop
pop
lds
outsb
xchg
packuswb
das
lds
push
je
mov
sti
mov
pop
mov
xor
mov
fildll
xchg
pop
aas
sbb
addl
repz
mov
sbb
xor
inc
add
cmp
push
shll
xchg
scas
dec
pop
push
jb
fs
outsb
push
pop
ss
xor
xor
dec
pop
pop
test
push
mov
mov
dec
iret
mov
cmp
and
pop
movsb
sbb
mov
xor
hlt
in
jle
inc
icebp
adc
lahf
mov
gs
xchg
repz
cmc
pop
test
xchg
pop
mov
mov
xchg
insl
add
xor
cmpxchg
or
add
jb
jg
jb
jns
pop
mov
cli
pop
fldcw
push
jb
cmp
es
cmp
pop
inc
jo
push
pop
mov
div
jl
adc
scas
out
or
inc
lods
sub
jg
nop
stos
or
mov
popa
dec
icebp
jl
sbb
iret
das
sub
xlat
test
sbb
add
or
ljmp
loope
jle
mov
inc
add
inc
imul
or
es
add
pop
imul
insl
sti
sub
jno
notb
std
add
call
cs
sbb
ret
mov
test
mov
cltd
sbb
stc
ljmp
pop
sbb
sub
cmp
in
inc
xor
js
rcrb
push
xor
push
pop
cmp
push
mov
mov
pop
jl
pop
pop
add
aam
ret
idivl
dec
xchg
outsb
mov
lret
out
outsl
xchg
fnstcw
mov
push
sub
arpl
xchg
call
inc
push
sbb
insl
and
mov
push
push
add
sti
ds
cmpsb
cs
in
mov
sbb
mov
inc
push
repnz
mov
xchg
xor
cmc
mov
enter
mov
xchg
sub
addr16
xchg
and
sysenter
daa
pop
arpl
fs
in
dec
push
and
xor
sbb
or
mov
pusha
sub
insl
mov
or
mov
push
daa
jbe
les
push
mov
out
es
cmp
dec
es
repz
add
mov
mov
dec
ja
inc
popf
lods
push
stos
and
imulb
test
bnd
sar
ss
adc
add
stc
adc
xchg
hlt
inc
insl
add
ljmp
adc
shll
xchg
mov
mov
aam
sub
xchg
or
in
lret
mov
pop
and
outsb
add
call
jno
adc
enter
in
mov
cmpsl
xchg
cld
popa
mov
or
xchg
xchg
jp
lcall
out
shrl
pop
jp
cmpsl
and
pop
mov
in
push
int3
mov
xor
or
xor
pop
and
outsb
out
mov
les
stos
stc
int
pop
push
fidivl
xor
lods
pop
push
mov
mov
sub
call
push
pop
cli
jno
cs
jb
inc
or
or
or
idiv
mov
out
xchg
xchg
sub
adc
insb
in
jae
popa
xor
addr16
movsl
cmp
mov
int3
or
dec
mov
mov
pop
adc
test
mov
outsb
js
dec
inc
or
int3
cwtl
into
mov
cmc
aam
jle
xchg
lcall
cmpsb
sbbb
adc
xor
rorb
jbe
xor
sbb
push
inc
fcompl
outsl
dec
inc
bound
loopne
stc
ret
jno
jae
lods
sub
xchg
dec
outsb
adc
ret
inc
pop
xchg
enter
inc
leave
pop
cmpsl
or
in
negb
aaa
push
pop
lods
dec
pop
inc
jns
iret
xchg
movsb
sbb
mov
jmp
jo
stos
mov
and
insl
mov
mov
xchg
xchg
sbb
ficomps
outsb
outsb
mov
inc
push
or
enter
mov
jl
addr16
jo
ljmp
popf
sub
mov
push
push
sarl
dec
test
nop
scas
out
ss
inc
aam
cmp
jmp
sbb
fwait
cld
out
cmp
adc
sbb
addl
scas
pop
pop
lds
jb
jmp
jmp
inc
cltd
in
loop
jno
stos
std
pop
sub
jns
jp
dec
and
pop
adc
es
fistpl
inc
push
mov
aas
pop
cmp
or
adc
cmpsl
xlat
lahf
pop
testb
cs
push
fs
sub
push
aas
insl
cli
dec
mov
and
sti
and
xchg
jns
insl
sarl
mov
fsub
xchg
mov
jl
jecxz
jne
shl
add
cwtl
insl
pop
jns
outsb
int3
ja
outsl
mov
sbb
clc
scas
cmpsl
push
pop
jle
pop
pop
scas
mov
dec
stos
gs
push
xchg
cmpsl
push
mov
jne
cmp
cmpsl
lahf
lods
mov
xchg
sub
push
cmpl
mov
movsl
mov
mov
clc
lret
cwtl
mov
mov
adc
xchg
mov
cmpsb
test
icebp
cmp
and
mov
ffreep
dec
and
xchg
mov
jg
jno
sbb
das
cmp
xchg
outsb
addr16
shlb
js
adc
jo
mov
insb
or
insl
loop
push
add
lods
push
cmp
xchg
dec
fcmovb
pop
aad
inc
fstpt
xchg
xchg
out
mov
push
hlt
push
outsb
nop
cmpsb
sub
outsb
fsubrs
leave
xor
mov
outsb
enter
sub
xchg
jns
mov
push
addb
push
out
xchg
les
in
sbb
add
lcallw
xchg
fsubp
cmp
mov
lods
in
or
or
and
xchg
jl
pop
cs
in
lea
pop
std
or
iret
jl
pop
sar
lods
sbb
imul
sub
inc
divb
xor
push
cmp
jno
or
je,pn
dec
outsb
jns
stos
les
inc
sbb
sub
push
or
ds
sahf
pop
movsl
cmpl
xchg
pop
movsl
xchg
adc
push
fildll
cmp
js
xchg
fsts
imul
mov
call
adc
fistl
fwait
pushf
sbb
inc
mov
out
test
inc
rcll
mov
inc
cmp
xorb
xchg
outsb
sub
addr16
pop
pop
pop
jo
or
push
add
mov
pop
out
ja
test
inc
in
popa
jp
jl
adc
cld
sub
mov
fcoms
mov
pop
frstor
jnp
sti
test
shll
mov
xorl
or
inc
push
inc
dec
cs
loop
outsb
mov
push
add
push
aam
lahf
mov
or
mov
outsl
pop
sahf
aaa
adc
orb
mov
mov
cmpb
sub
aad
pusha
insl
push
xchg
and
aaa
insl
mov
bound
inc
mov
mov
dec
stos
adc
sub
into
push
inc
movsb
rdmsr
mov
hlt
mov
std
lretw
or
push
ja
push
dec
jno
test
add
pop
jmp
adc
repz
lret
push
dec
iret
ret
dec
pop
sbb
cmp
pop
sti
and
inc
movsl
cmpps
test
sub
xchg
in
punpcklbw
cmp
es
out
fsubp
rcrl
sbb
jle
mov
and
cmp
or
imul
test
mov
cmc
outsl
mov
or
sub
inc
insb
into
pop
outsb
push
imul
inc
int3
fcmove
adc
imul
mov
rorb
or
lea
jo
add
sub
xchg
jo
insb
pop
inc
dec
mov
insb
stos
adc
lds
repz
inc
outsl
jg
inc
pop
je
mov
mov
adc
inc
out
xchg
ss
jl
jns
and
jecxz
mov
jbe
test
add
push
push
rorb
ljmp
mov
invlpg
and
stos
cld
xchg
test
mov
imul
or
push
gs
ror
icebp
loope
xor
gs
fdivr
jl
mov
dec
jns
outsb
test
cmp
fcoms
pop
loopne
mov
add
or
jecxz
xorl
rcrl
int
in
fs
sub
fidivrs
jg
outsl
dec
mov
aaa
jg
adc
ret
popf
test
pop
xchg
repz
or
sub
hlt
sub
push
dec
les
bound
adc
arpl
adc
rcrl
and
jl
mov
les
test
nop
jnp
jge
sbb
cmpsb
dec
push
or
mov
in
mov
lods
mov
fcmove
ficompl
cmpsb
pop
sub
jbe
fwait
inc
test
or
sub
mov
lods
cwtl
sbb
arpl
push
mov
mov
cmc
jl
jbe
xor
mov
nop
pop
and
sub
cld
pop
int
adc
repz
and
mov
out
pop
and
cmpsl
cmp
xor
ljmp
out
cmc
push
sbb
lock
fnsave
hlt
movsb
sbb
sti
jl
push
pop
push
jge
sbb
mov
cmpsb
jne
insl
xor
or
sbb
sti
jns
je
adc
mov
adc
xor
jg
std
jbe
jns
je
pavgb
test
xchg
in
imul
sub
pop
sbb
repz
xchg
push
inc
jp
pusha
inc
mov
mov
fcom
xor
dec
fwait
sub
test
je
mov
xor
push
inc
xchg
sub
xor
popf
xchg
inc
jp,pn
push
jns
mov
sub
stos
movsl
mov
shrl
pop
push
push
loopne
ret
in
adc
jns
loop
out
xchg
sarl
out
cmpsl
inc
fsts
imul
jle
or
fistps
lahf
aaa
daa
imul
add
pop
arpl
dec
xor
scas
fcmovnb
dec
and
insl
xlat
or
hlt
mov
fisubrl
pop
pop
dec
rclb
sub
and
mov
int
movsl
filds
scas
fstpt
push
xchg
call
push
mov
bound
xor
sub
mov
je
push
std
jmp
test
sub
cltd
ret
fdivrs
mov
mov
sub
add
xchg
cld
ret
mov
adc
dec
jne
lock
dec
push
add
ret
xlat
sbb
imul
jne
in
es
ja
or
inc
mov
je
sahf
push
mov
sahf
adc
shll
psubsb
xchg
or
xchg
sti
fcoml
lods
inc
cld
movq
mov
addb
arpl
pxor
imul
sbb
pop
inc
mov
inc
pop
jmp
mov
test
dec
shll
xchg
mov
dec
test
arpl
mov
repz
mov
or
lock
dec
cmp
aam
outsb
mov
cmpsl
test
idivb
jp
in
stos
in
cwtl
insl
xor
mov
iret
scas
xchg
push
loope
test
add
leave
in
push
mov
jmp
or
in
pop
pop
out
dec
sub
pop
stc
shll
xchg
jle
inc
ret
sub
push
mov
adc
sbb
gs
sub
xor
dec
adc
insl
mov
insl
cltd
xchg
lock
std
test
out
call
xchg
in
dec
aaa
cld
out
je,pt
sub
push
jbe
xor
stos
mov
mov
test
lds
inc
add
insl
inc
std
or
ljmp
and
in
loope
sub
std
mov
xor
add
daa
sub
aas
jmp
and
fcmovnbe
imul
lock
stc
sahf
lea
daa
mul
mov
imul
xchg
xchg
xor
jmp
cmpsb
imul
lret
ja
xor
into
pushf
pop
movl
rcr
js
push
cs
sbb
sbb
mov
and
dec
cmpsb
pop
mov
jle
push
sub
enter
fcoml
jp
xchg
jp
xor
negb
jbe
fs
or
scas
sub
movsb
push
ret
mov
mov
dec
je
xchg
int3
daa
outsl
outsb
shll
push
mov
fisttpll
lea
mov
inc
mov
out
call
ret
xchg
mov
adc
insb
sbb
test
add
xchg
mov
fildll
jne
sbbb
das
inc
or
mov
negb
scas
repz
sbb
repz
adc
cltd
cmpsl
mov
hlt
xchg
popa
mov
mov
inc
imul
xchg
dec
mov
into
pusha
movsb
jge
jne
dec
lods
test
pop
mov
push
push
fisubl
mov
xchg
sub
jo
lock
cmp
fwait
cmp
gs
pop
pop
sub
lock
pop
and
cmp
xchg
mov
sbb
jp
add
inc
imul
xlat
cmc
inc
inc
ss
fnstenv
jge
int
or
test
mov
fldt
mov
cmpsb
shll
cld
pop
push
sub
and
out
gs
mov
pushf
mov
call
std
cmp
cmpl
icebp
ss
sbb
fsubl
sahf
pop
sub
pop
jecxz
rolb
xchg
dec
mov
mov
in
pop
xchg
or
jecxz
ret
stos
cs
inc
add
popa
out
mov
icebp
sub
ljmp
les
mov
js
jo
das
mov
inc
in
mov
mov
xchg
je
repnz
subl
jo
mov
and
insl
loop
cwtl
adcl
jb
dec
sub
mov
imul
push
sbb
in
mov
xchg
sub
js
icebp
xlat
test
outsl
pop
cmp
fsubl
shrb
int3
lock
cmpsl
or
enter
leave
out
jb
std
mov
mov
dec
push
adc
popa
and
lret
pop
repnz
movsl
cmp
cli
adc
popf
pushf
push
push
or
in
icebp
push
cld
gs
dec
add
in
push
xchg
inc
cmpl
into
and
sub
mov
lret
test
inc
and
adc
push
jnp
jmp
mov
jns
lods
ljmp
jb
or
sbb
sarb
dec
iret
idivb
lods
inc
and
mov
mov
push
xchg
adc
dec
sbb
call
push
mov
mov
cwtl
ret
sbb
xor
loopne
xor
jge
xchg
pop
add
add
lret
cmpsl
rclb
push
imul
stc
inc
jno
cld
and
sub
mov
pop
adc
les
daa
aad
cmp
jp
jge
test
lcall
sbb
ret
inc
xchg
xor
pop
cmp
jne
mov
arpl
dec
pop
dec
fcoms
push
test
xor
movsb
jae
push
pop
pop
gs
jo
cld
cmp
push
pusha
int3
scas
incl
sbb
jl
test
pop
cmpsl
mov
test
cmpsb
loope
push
in
and
pop
inc
aas
jl
pop
hlt
sub
sub
sarl
in
stos
xlat
sbb
cld
lock
mov
outsl
sbb
cmp
jl
shlb
jbe
mov
jb
ret
sar
add
xor
push
or
je
jnp
loop
xchg
call
push
cmp
jp
imul
sub
mull
mov
sbb
mov
jl
mov
test
in
in
insb
pop
jle
shlb
ja
mov
jge
xchg
mov
je
jmp
ljmp
shr
je
loopne
and
pop
stos
mov
inc
outsb
mov
test
jb
xorb
fs
sbb
cmp
iret
mov
stc
mull
orl
sub
insl
dec
cmpsb
pop
out
lods
add
and
gs
in
clc
ret
adc
mov
stos
inc
push
pop
in
fs
in
adc
inc
adc
xor
pop
xor
cwtl
sbb
jbe
bound
sub
repz
test
fnstsw
fdivr
cmp
test
das
push
sbb
data16
pop
adc
jge
sbb
xorl
push
mov
rdpmc
in
inc
ficomps
mov
andb
lods
push
jmp
sbb
push
mov
xlat
pop
adc
out
fucomi
popf
cmp
pop
rol
jle
int
push
jbe
sbb
xchg
cmpb
jmp
or
sub
xchg
jno
dec
fildl
mov
roll
call
cs
fsubs
pop
xorl
cli
sbb
addr16
shll
fnstsw
pushf
arpl
andb
mov
sbb
and
jmp
mov
mov
movsl
jns
jno
jge
cmp
mov
dec
pushf
inc
mov
cmpsb
jae
mov
orb
movsl
je
sbb
into
or
jne
gs
call
jl
mov
add
fisubrs
jmp
dec
out
or
std
out
in
and
add
sti
mov
js
xchg
xchg
xor
dec
ljmp
xor
ja,pt
mov
aaa
mov
iret
das
add
pop
cmpsl
xor
or
xchg
or
in
ss
sbbb
lcall
add
ret
push
add
aad
xorl
nop
sarl
mov
les
int3
shr
mov
add
scas
test
dec
movsl
and
scas
cmp
jno
es
sbb
clc
jmp
xchg
push
adcl
inc
jecxz
adc
mov
push
lret
fimuls
sti
push
inc
inc
fidivrs
lock
xchg
pop
lcall
in
scas
xchg
or
insb
pusha
lock
inc
mov
add
stc
aaa
xchg
sbb
sbbb
xchg
dec
mov
movsb
xchg
call
sub
inc
push
movsl
sbb
mov
or
mov
sub
insl
jnp
test
les
gs
xor
mov
jle
outsb
test
xorl
sub
fdivrs
fs
aas
mov
or
jge
pop
fisubs
in
comiss
outsl
and
sub
xorl
into
dec
sub
ret
lods
sarb
dec
sbb
pusha
inc
cld
int
inc
icebp
sub
pushf
pop
cli
xorl
clc
hlt
lret
xchg
add
and
out
call
addr16
xchg
test
mov
pop
dec
jnp
mov
ja
add
shll
rcl
sbb
jle
int
add
sbb
and
jle
inc
je
and
mov
xchg
bnd
mov
or
stos
dec
push
mov
or
inc
fwait
lods
stc
mov
inc
insl
arpl
add
mov
in
push
outsb
sbb
push
xor
ret
dec
imul
sbb
lcall
pop
mov
and
add
push
jle
fs
dec
js
sti
lcallw
pusha
int
mov
cmpsb
je
icebp
in
pop
sbb
jecxz
lods
adc
scas
and
adc
out
push
lods
push
mov
pop
jle
xchg
pusha
xchg
push
inc
sub
inc
addps
insl
adc
clc
lea
mov
je
pop
out
jo
dec
incl
push
dec
and
push
cmp
jo
loopne
nop
aad
cli
xchg
movsb
mov
dec
pop
fs
xor
cli
xlat
and
or
aas
lahf
inc
push
cmp
pop
inc
pop
notb
in
jmp
jmp
push
aas
dec
or
adc
inc
mov
mov
xlat
cmp
push
loop
test
hlt
call
cmc
arpl
cwtl
xchg
mov
inc
loopne
sub
xor
imul
loope
dec
mov
inc
xor
fwait
lea
lret
xor
mov
divb
cmp
into
stos
test
jg
inc
push
bound
mov
or
bswap
in
sarl
nop
aam
push
push
jecxz
mov
imul
mov
xlat
fisttps
pop
and
adc
cmp
xchg
pop
push
or
sub
ja
insl
int3
mov
jge
cmp
pop
jbe
jno
dec
lods
sti
ret
and
test
fs
je
scas
cmp
jle
push
mov
test
jp
pop
cld
mov
jne
cmp
iret
sahf
jge
test
mov
and
xor
es
jl
gs
dec
fbstp
cwtl
push
pop
aas
mov
daa
js
adc
pusha
cmpsb
xchg
call
test
mov
and
sbb
lea
std
add
mov
aam
push
cmp
pop
rclb
ja
push
push
and
insb
imul
test
repnz
and
cmp
out
lods
insb
jl
sahf
push
icebp
and
mov
ljmp
lahf
sbb
inc
stos
lret
pop
loope
add
jnp
test
pop
pop
fisttps
out
icebp
test
jp
imul
sub
inc
fadd
sbb
xor
fsubrs
icebp
mov
and
fs
addr16
push
fdivs
cmpb
scas
testl
mov
fwait
jne
subb
leave
out
lret
mov
pop
sbb
jp
popa
aam
leave
aam
sahf
outsb
pop
mov
add
fildll
repnz
jmp
xchg
sub
sub
lret
pushf
mov
push
ficompl
ficoms
aam
inc
or
outsl
xor
mov
push
push
ret
insl
push
ja
ss
jo
jo
pop
inc
mov
aas
or
pop
iret
mov
or
out
lock
arpl
cmp
xchg
and
cs
je
movsb
mov
cmp
pop
jns
jno
test
inc
inc
movl
int
repz
mov
jge
mov
jg
mov
sti
jb
xlat
sbb
clc
cwtl
push
insb
mov
fs
call
cmp
xchg
push
sub
inc
and
sti
lea
xchg
adc
imul
lods
mov
or
js
inc
push
cli
sub
lods
adc
push
divl
jle
in
out
cmp
push
pop
das
movsl
jl
push
cli
outsl
arpl
andb
fistpll
cmp
sbb
xor
fisttpl
sub
addb
mov
sahf
movsl
push
pop
jne
cs
js
outsl
inc
mov
insl
in
xor
pop
dec
sub
mov
jo
or
stos
leave
jge
mov
cmp
pushf
or
mov
rorl
repz
in
jmp
lret
mov
arpl
fistpl
dec
jae
aas
mov
fcomi
mov
and
mov
into
mov
mov
cmp
jg
repnz
ret
xorb
mov
ljmp
int
dec
imul
adcb
les
and
ror
mov
iret
xchg
push
das
or
shl
aaa
cmp
mov
dec
arpl
dec
mov
push
jne
xchg
aas
int
rcrl
shll
xchg
jns
das
pop
imul
fldcw
adc
jle
dec
mull
and
push
dec
lea
jle
leave
adc
mov
xor
insb
loop
fs
test
stc
jl
cmp
lods
sbb
imul
mov
jge
aas
stos
rolb
mov
outsl
leave
test
inc
das
inc
jo,pn
cld
insb
jbe
jp
push
js
pop
daa
outsb
cwtl
mov
in
inc
push
shrl
dec
ljmp
clc
jle
dec
adc
mov
jmp
fdivrs
cwtl
xor
movsl
cmp
popl
xchg
cld
jmp
aad
sub
nop
sbb
sbb
outsb
outsl
cmc
stos
jge
test
mov
lock
xchg
cmpsl
push
stos
shl
lret
mov
push
cld
mov
sbb
inc
jp
sahf
lea
jmp
int
dec
sahf
sti
sub
jle
and
xor
xchg
shlb
outsl
cmovs
or
call
dec
cmova
popa
inc
mov
cs
or
inc
add
cmp
repnz
cli
test
pop
bound
xor
dec
dec
cltd
push
sub
jb
jbe
fcomps
inc
mov
lcall
pop
push
jns
cs
in
test
stc
jl
xor
jne
cmp
fwait
cmp
cmp
adc
cmp
xchg
dec
fwait
sub
mov
mov
fs
sbb
push
cwtl
insl
dec
std
inc
lods
mov
mov
cwtl
subb
clc
xchg
popa
push
and
scas
shll
pushf
sbb
jg
hlt
push
movl
test
or
mov
movsl
cltd
inc
and
mov
pop
pop
ss
jne
pop
sub
pusha
or
push
out
mov
ret
jecxz
ficompl
push
or
cmp
aas
or
and
jnp
cmp
jmp
mov
mov
pop
xor
push
jle
cmp
out
inc
outsb
inc
xchg
xchg
shrb
adc
or
mov
xor
test
xchg
les
pop
test
adc
pushf
pop
enter
push
dec
lret
js
jne
bound
dec
inc
add
in
repz
cltd
adc
and
rep
xor
dec
inc
shll
mov
add
jg
cmp
dec
push
pop
sbb
outsb
xchg
sub
jecxz
imul
ds
mov
mov
jbe
xor
pop
xchg
shll
adc
and
mov
xor
xor
push
sbb
push
pop
cmp
enter
nop
xlat
adc
xchg
enter
push
push
dec
xor
and
sub
stc
adc
bnd
fsts
imul
cmp
cmp
aad
push
add
xchg
pop
mov
arpl
mov
or
enter
jns
sbb
sbb
loopne
dec
mov
loopne
sbb
enter
adc
pop
mov
repnz
in
mov
dec
outsl
sub
fcoms
out
inc
mov
xchg
nop
add
aaa
mov
outsb
mov
pop
imul
add
push
icebp
popf
stos
push
lods
pop
jle
pop
jge
cmpsb
fstpt
jp
mov
cmpsb
add
pop
stos
push
stos
lea
es
out
sub
das
sbb
cmp
pop
and
pop
lds
push
and
mov
cmp
data16
sub
shlb
push
cmp
xchg
repnz
pop
mov
dec
xchg
out
mov
cmpl
in
ja
pushf
mov
and
stos
sbb
xchg
sti
outsl
ljmp
jno
ds
inc
mov
inc
add
stos
cmp
cmp
pusha
out
ret
fwait
sbb
imul
jbe
sub
mov
pop
dec
add
rcrb
mov
adc
fsubl
gs
inc
orb
pop
mov
inc
ljmp
jp
mov
xor
dec
ss
dec
icebp
dec
jne
add
std
mov
xchg
lret
pop
shrl
xchg
cmp
out
ljmp
dec
outsl
push
sub
ret
sbb
inc
popf
outsb
and
inc
aas
dec
lret
mov
enter
mov
test
inc
rcr
daa
cmp
push
xchg
add
mov
xchg
sbb
outsb
das
mov
addl
xchg
or
shll
cmpb
pusha
push
lcall
or
mov
ret
xchg
push
fldcw
test
cmpsb
sbb
mov
lods
xchg
lret
sub
mov
out
adc
inc
jne
mov
mov
pusha
je
out
les
push
inc
push
lea
sbb
cmp
mov
inc
sub
sub
cmp
mov
mov
dec
fwait
movsb
mov
lret
jmp
fstpl
lock
jmp
jp
icebp
adc
jecxz
sbb
cmp
inc
addr16
inc
mov
cmp
cmpsl
sub
cmpsl
mov
mov
mov
push
mov
push
mov
in
add
ja
jne
lcall
pop
jbe
sbb
mov
mov
les
push
push
sbb
imul
sahf
add
cmp
or
loope
xchg
adc
clc
addr16
ljmp
jge
dec
sub
stos
lods
daa
jg
and
lahf
iret
and
subl
sbb
inc
in
xchg
test
mov
push
jbe
fadds
jl
stc
js
in
mov
or
push
js
adc
xor
pop
push
or
mov
inc
add
jo
inc
cmp
dec
sub
xchg
inc
lcall
sub
nop
fldenv
ljmp
jbe
jmp
dec
fmuls
cmp
inc
ljmp
shll
push
into
and
leave
jp
mov
pop
push
sbb
dec
and
jl
and
add
pop
call
fs
add
aas
out
adc
push
aam
ss
aas
or
cmp
test
dec
lods
test
dec
scas
lods
sub
sub
imulb
mov
pop
lea
and
fidivrs
iret
pop
mov
scas
push
sub
jle
lret
xchg
adc
mov
ud0
jo
add
aam
int
stos
insb
flds
adc
cwtl
mov
outsb
test
je
pop
mov
in
fildll
sub
setbe
data16
call
cmp
fs
lahf
cld
adc
and
inc
mov
and
sbb
lahf
dec
cmp
add
ret
xor
popl
js
rcl
into
test
ret
pop
iret
stos
ret
aas
xchg
adc
adc
into
test
cmp
out
sub
idivl
xchg
pop
fistpl
je
lea
jo
add
shl
jns
insb
lods
xchg
xchg
adc
or
pop
mov
enter
arpl
xor
dec
cli
aam
pop
cltd
cmpsb
mov
out
push
push
out
icebp
pop
sbb
pop
inc
inc
icebp
in
mov
and
xchg
mov
jo
push
dec
or
sub
loope
mov
jge
into
scas
sbb
out
sbb
outsb
rcll
inc
mov
mov
cmp
inc
and
bound
outsl
lds
repnz
icebp
adc
arpl
push
jae
jae
xchg
cmp
xchg
lea
loopne
in
jns
push
xchg
dec
cmpsl
pop
fidivrs
jmp
cwtl
adc
mov
fistps
es
ret
mov
push
enter
lcall
sbb
in
fistpll
mov
lret
shlb
or
push
pop
mov
push
and
xchg
jl
xchg
mov
imul
xchg
out
and
jno
aas
imul
in
hlt
in
jmp
lods
or
lods
addr16
in
cmpsb
sahf
cmp
out
sahf
and
mov
push
dec
ror
loope
cs
and
jmp
out
push
and
dec
xchg
mov
xchg
test
jno
jo
add
fdivrl
jle
dec
push
push
pop
jb
push
push
xor
inc
xchg
mov
jmp
pop
shll
lods
ds
dec
addr16
xlat
adc
jnp
sbb
jbe
xchg
pop
repz
sbb
fstpt
std
push
pushf
and
mov
jmp
or
adcl
stos
ret
cmp
insl
testl
arpl
xor
sahf
mov
and
cmp
mov
outsb
cmp
pop
jo
xor
pop
adc
outsb
je
mov
cmp
jne
push
jne
mov
jbe
sti
sub
aas
outsb
popf
loopne
sar
dec
push
cmp
call
add
or
lea
jae
dec
mov
inc
lds
aas
mov
in
icebp
mov
enter
xchg
xor
mov
push
pop
jae
xchg
addr16
and
sub
mov
push
cmp
insl
pop
pop
inc
outsb
inc
nop
add
jecxz
rcll
ret
cwtl
add
xor
cmp
lods
mov
adc
cmp
jle
in
loop
and
mov
daa
and
mov
popf
lds
dec
daa
pop
loope
jo
and
mov
std
jb
lahf
outsl
xchg
sahf
pop
fisubs
popf
mov
sbb
and
sarb
or
or
scas
ficoms
rcrl
in
icebp
fsubrl
js
xchg
pop
or
sub
dec
je
xor
insl
outsl
and
pop
xchg
push
push
jecxz
dec
sbb
test
lret
and
mov
pop
add
cmp
xlat
inc
xorb
mov
adc
and
insb
push
sub
xor
push
in
das
stos
fs
sub
jns
into
sub
aaa
sub
cmp
mov
bound
scas
sahf
stos
jmp
fs
aam
jl
lret
jb
mov
rorb
arpl
int
add
sbb
sub
out
fisubrl
dec
or
sbb
inc
mov
add
lock
std
xchg
sbb
xchg
or
scas
sbb
dec
loop
mov
mov
das
arpl
jl
inc
xchg
xchg
sbb
cmpsl
pusha
xlat
orb
es
sahf
icebp
rcr
inc
mov
push
fsubrl
leave
sbb
fs
cwtl
cld
adc
int
pop
fisttpll
iret
push
push
adc
rcrl
gs
cmp
sub
xchg
pop
add
cmp
xchg
arpl
jl
js
jle
inc
sub
cmpl
pop
aam
insb
int
jns
cmpsl
adc
push
in
jg
push
in
rol
sub
dec
je
dec
mov
pop
jae
in
jnp
repz
dec
out
cmp
jle
sub
test
pop
test
jg
inc
icebp
sub
dec
adc
jecxz
xchg
pop
loop
daa
neg
movsb
popf
test
loopnew
xchg
mov
jecxz
push
pop
xchg
ret
lea
daa
pop
mov
sbbl
add
nop
int
xchg
push
xlat
adc
mov
xchg
xchg
push
test
xchg
jle
cmp
jp
mov
out
sbb
popa
push
sub
inc
and
popa
lods
push
xchg
in
or
xor
push
mov
xor
and
cmp
or
jo
iret
rorl
mov
xlat
fdivrs
inc
fsubrs
inc
push
jne
cs
lret
mov
ds
pop
push
pop
shl
nop
cmp
data16
mov
loop
pop
movsl
loop
in
sbb
sbb
sub
sti
add
cli
adc
cmc
outsb
repnz
push
pop
add
lods
and
rorl
pop
in
lds
adcb
or
xor
fucomi
and
dec
pop
xchg
inc
movsl
pop
cmpsl
pop
push
xor
inc
inc
fsubrl
movsl
sub
fsubr
xchg
pop
int
sarl
jnp
in
lods
mov
or
push
test
in
jb
xor
int
stos
push
shrb
add
je
jnp
enter
scas
xchg
out
dec
mov
out
mov
icebp
sbbb
xchg
cmp
mov
or
sub
orb
ret
xchg
ror
sub
xchg
je
jp
imul
cmpsb
mov
orl
pop
and
inc
es
fsubs
inc
mov
jbe
test
jbe
cmp
cld
pop
xchg
push
ljmp
push
lahf
repz
repz
or
je
test
or
cmp
jno
loop
sbb
arpl
std
ret
cmp
dec
mov
outsb
lods
mov
xchg
ret
adc
scas
xchg
inc
aas
pop
rclb
mov
in
lret
sub
push
cmc
aas
aaa
cmp
in
jmp
cmp
call
jg
mov
out
fadds
in
cmp
loop
fs
fldenv
lods
push
lods
shrb
stos
aaa
outsl
outsl
mov
xchg
out
fdivp
xor
mov
scas
nop
ficoms
xor
jecxz
int
int3
out
mov
xlat
sbb
add
jno
sbb
sub
and
jle
inc
dec
fsubs
movsl
mov
lods
xchg
es
add
jle
mov
jge
jnp
mov
xchg
addb
xor
fadds
xor
orb
lret
xor
aas
sbb
sbb
int3
xchg
out
cmc
fmull
movsb
push
fs
aaa
add
push
add
mov
or
shll
sub
push
dec
aaa
xchg
lock
mov
push
fsub
sti
cmp
add
sub
xchg
movsl
adc
nop
notb
push
pop
dec
mov
in
js
ret
in
add
jp
or
iret
and
xor
push
mov
sbb
jmp
inc
or
mov
stc
adc
psubsw
xchg
imul
or
mov
ss
aam
aad
repz
inc
leave
inc
sbb
push
xchg
insl
jmp
cs
pop
popf
out
sub
pop
and
or
xor
fbld
adc
add
sti
aaa
fs
jle
add
ds
int3
add
cmp
push
mov
jae
rorl
or
inc
jo
inc
jle
mov
fmuls
pop
mov
aaa
in
lock
mov
sbb
pop
xchg
pop
xchg
test
mov
lds
push
out
inc
mov
insl
in
adc
imul
lret
ud2
or
mov
mov
push
addb
outsb
movsl
cmp
fst
lds
sub
push
in
mov
insl
pop
sub
add
jg
jb
or
mov
push
test
jnp
push
iret
mov
and
sub
imul
add
cs
and
in
pop
iret
pop
out
ftst
and
scas
fdivp
movsb
js
jecxz
inc
data16
ljmp
cwtl
insl
lret
jbe
pop
fadds
sti
and
push
xchg
das
pop
pop
mov
xor
cs
vmwrite
push
dec
mov
cmp
lret
jae
aad
jnp
jmp
cmp
scas
cmp
sti
dec
mov
xchg
and
repz
dec
cmp
jne
mov
xor
xor
movsl
insb
jb
and
xchg
mov
or
imul
cld
sarb
sub
mov
rclb
das
jno
mov
std
jl
out
popf
out
add
jg
xchg
psraw
adc
lret
in
push
inc
movl
push
stos
fs
shlb
xor
jnp
iret
sub
cmp
push
adc
inc
cld
sub
divb
and
int3
mov
test
cmp
ja
xchg
xorb
rcr
dec
jmp
clc
cmc
mov
test
stos
sti
fcomps
jnp
pop
test
cmp
mov
sub
outsl
add
stc
icebp
loop
sbb
pop
inc
xchg
enter
cmc
mov
ljmp
mov
hlt
das
and
popa
push
sub
int
sar
xchg
arpl
fmul
lods
shll
inc
fbld
sbbl
cltd
mov
add
es
mov
dec
js
cmp
aaa
xchg
in
mov
add
je
jg
push
sub
xchg
outsl
push
or
push
ds
repnz
fs
stos
clc
dec
pushf
cs
fnclex
cmc
movsl
mov
into
sbb
lds
adc
push
or
mov
jae
xchg
add
jo
jg
sub
xchg
imul
inc
adc
or
mov
sbb
xorl
jp
jo
loope
cmpsb
xchg
push
xchg
inc
mov
repnz
ret
sub
push
clc
xchg
stc
mov
ficompl
mov
jmp
pop
shrb
je
xlat
push
add
or
out
in
add
mov
shr
dec
push
dec
pop
test
mov
fwait
add
xor
push
gs
stos
or
push
jl
jb
jne
mulps
ret
nop
iret
test
jbe
or
sbb
pop
les
int
rcll
movsb
add
popf
adc
in
dec
push
std
ret
fmuls
test
adc
in
push
data16
push
dec
and
mov
push
repz
es
sub
mov
xchg
adc
sbb
cmpsl
xor
inc
and
mov
push
loop
cli
push
sub
cmpsl
push
scas
pop
rol
or
mov
mov
mov
test
bound
in
inc
or
jp
inc
jge
out
pop
and
dec
fdivr
or
fsubs
leave
jge
add
sub
test
clc
bound
out
loopne
rcrl
stos
faddl
push
test
sub
rcl
insl
xor
movsl
jbe
lods
int3
outsl
popa
out
sub
call
adc
jmp
push
pop
scas
insl
dec
mov
sbb
pushf
outsb
or
cmp
xchg
loop
ljmp
mov
inc
xchg
popa
aas
push
pop
sbb
adc
shlb
lds
cld
mov
fsubs
fadds
xchg
inc
cmp
sti
data16
clc
loope
push
xchg
hlt
xchg
push
or
adc
mov
das
ffree
pop
pop
in
outsl
rcrb
dec
sbb
les
push
pop
inc
mov
push
rcrl
push
daa
or
clc
into
scas
lods
mov
pop
in
and
stos
adc
imul
lret
pop
jb
popa
in
ret
xchg
outsl
pusha
mov
int3
lock
cmp
pop
mov
scas
xor
repnz
cli
lock
and
rcll
fstpl
dec
pop
jne
test
sub
push
out
sub
xor
ss
inc
repz
mov
clc
test
push
data16
jns
repz
jns
cwtl
arpl
pop
push
outsb
dec
mov
add
mov
mov
lock
or
gs
lock
jge
lods
xor
int3
leave
xchg
aam
decb
push
loopne
cmp
sub
push
mov
push
cmpsb
bound
or
subb
outsl
mov
push
orl
movsl
shl
inc
jno
xor
andl
mov
xor
orl
cmpb
jmp
cmpsb
sub
push
pop
imul
jnp
or
rol
sbb
lahf
add
sub
dec
xor
les
pop
inc
fldt
sti
inc
sbb
xchg
cmpsl
cli
add
push
cld
add
orl
ja
xchg
xchg
pop
cmp
pop
std
pop
outsl
bound
stos
call
and
and
imul
jb
cli
push
inc
push
neg
ljmp
and
xlat
pop
cld
jge
mov
cmp
jb
xor
outsl
jo
aas
ss
addb
push
outsb
push
jo
cs
rol
mov
mov
scas
or
mov
ljmp
cmc
mov
xlat
mov
xchg
imul
scas
mov
or
and
leave
pop
mov
dec
inc
and
cmpsb
cmp
outsb
aaa
hlt
test
pop
mov
fwait
loopne
jnp
or
arpl
es
shll
inc
mov
sbb
insl
int
jae
cmpb
cmpsb
push
and
fwait
xchg
daa
pop
jns
cmpsb
jnp
pop
or
adc
xchg
dec
lods
push
pusha
int
outsl
addr16
dec
dec
add
dec
mov
out
fisubrs
sarl
fisubs
lock
les
dec
and
popf
jbe
jle
ror
adcb
dec
cmp
inc
mov
mov
jb
ss
xchg
pop
or
add
xchg
mov
popa
ja
mov
divb
cmp
sbb
jb
ret
pusha
or
fwait
xchg
cmp
or
addr16
inc
jl
loopne
ljmp
ds
lcall
xchg
mov
in
dec
jo
loope
jae
dec
dec
jg
rorb
xchg
leave
cli
icebp
lahf
cltd
ljmp
dec
test
jmp
xor
jge
jecxz
rol
mov
or
fucomi
pop
jmp
les
popa
jbe
ret
faddl
push
sub
mov
adc
mov
push
rorb
pop
adc
mov
xchg
cmovge
in
rolb
xchg
sbb
sbb
outsl
or
xchg
mov
add
subb
pop
xchg
jbe
and
mov
call
into
or
movsl
fwait
mov
in
dec
inc
inc
mov
xchg
or
lock
fwait
das
and
insb
arpl
mov
lret
sub
pop
pop
add
ss
ja
popf
incb
and
inc
repz
ljmp
std
xchg
cmp
mov
loop
xchg
push
pusha
rcr
repnz
lods
pusha
sarl
orb
dec
xor
pop
rcl
adc
stos
cmp
outsl
pop
outsl
and
rorl
into
mov
mov
repz
fstpt
push
movhps
mov
xchg
cmp
cmpsl
cmp
xor
jp
or
and
nop
dec
pusha
jo
sub
aas
xor
jae
adc
adc
outsb
cmp
js
mov
into
std
cld
mov
test
dec
jl
cmp
push
stc
pop
add
inc
cmp
sub
jnp
imul
clc
insb
sbb
test
mov
mov
jne
loop
adc
pop
xchg
ret
jbe
xor
sub
cmp
jmp
xchg
in
push
inc
push
and
outsl
rorb
sbb
fistpll
mov
xor
mov
call
loope
or
les
sub
jp
jge
popa
push
sbb
test
cmpsl
cmpsb
sbb
shll
pop
aam
shll
je
iret
sarb
daa
cmovnp
ret
mov
xchg
outsl
sbb
popa
cmc
loop
add
js
test
aaa
test
sbb
imul
and
nop
mov
and
packsswb
lods
cmp
repz
jne
lods
add
xchg
and
mov
outsb
add
ss
xor
loop
inc
nop
adc
add
ficoms
fs
xor
mov
jmp
cmpb
ja
js
js
mov
dec
rclb
out
int
call
fs
test
mov
rcl
popa
cmp
xor
xchg
jl
jl
push
fmuls
popa
in
in
mov
add
push
sahf
testl
xor
pushf
out
adc
xchg
aam
jo
loopne
sub
add
les
xorb
loopne
and
in
cmp
das
mov
and
icebp
mov
dec
ljmp
mov
stos
push
fmull
insb
ljmp
mov
dec
fnsave
jl
jno
sarb
ja
stc
in
sub
pop
jb
mov
mov
sbb
xorl
or
les
shrb
push
insb
in
adc
pop
xchg
jmp
adc
mov
sbb
mov
sbb
pop
test
push
addl
sub
dec
or
loope
sub
pop
enter
push
inc
rcrb
popa
ds
adc
mov
jge
jo
cltd
xchg
jl
cmp
outsl
sub
insl
sbb
dec
mov
aaa
les
xchg
cmpsb
cld
dec
fmull
ss
mov
xchg
jnp
adc
xchg
scas
repnz
pop
vpmacsww
mov
and
jns
jne
jnp
fistpl
mov
cwtl
adc
add
cltd
inc
mov
xchg
jbe
fdiv
roll
mov
shll
js
jle
jmp
int
ret
adc
adc
mov
mov
xor
cli
lods
push
jns
cmp
shll
mov
jl
ss
mov
sbb
jp
test
dec
in
cltd
loop
and
dec
int3
fwait
push
push
test
jle
pop
pop
subl
add
mov
jg
iret
inc
int
xorl
cli
in
xchg
xchg
test
add
xor
push
push
adc
xchg
pushf
outsl
inc
hlt
hlt
add
int
in
mov
cmp
jo
fsubrl
inc
sub
add
repnz
mov
adc
or
pusha
sub
fwait
mov
shrb
and
push
mov
sbb
les
imul
lds
xchg
pusha
mov
lods
sarb
sbb
stos
jns
sub
mov
jb
pushf
je
jge
outsb
fs
mov
or
das
ret
pop
in
iret
test
sbb
decb
cmp
add
sub
jnp
sahf
and
pop
pusha
mov
adc
aad
movl
imul
pop
cmp
jecxz
pop
adc
pop
or
pop
and
xchg
mov
pop
push
mov
push
dec
jns
and
jb
xchg
pop
inc
popf
lds
dec
push
push
daa
mov
jae
inc
or
fptan
enter
ljmp
ret
dec
je
popa
add
in
lret
add
xor
es
push
xor
ret
stc
or
scas
lahf
jle
imul
dec
loopne
idivb
imul
dec
cmpsl
je
dec
fisubs
out
addr16
sub
popaw
cli
lock
add
ljmp
cs
inc
mov
movsl
jns
imul
xchg
sub
insb
adcl
arpl
pop
cmp
dec
mov
sub
out
or
fisttps
push
mov
pop
jmp
inc
add
stos
push
or
out
arpl
ret
inc
jns
xor
inc
add
mov
test
sub
mov
adc
mov
sbb
jge
pop
push
jle
out
aas
dec
cmp
xchg
fdivrl
stos
sbb
mov
cmp
fsubrs
cmc
imul
ds
sbb
sahf
repz
mov
jl
inc
subb
pop
mov
std
mov
jb
push
mov
dec
adc
loopne
jmp
aad
int3
adcb
xchg
pop
push
push
adc
sbb
out
fcompl
insl
clc
addr16
stc
mov
sbb
or
mov
jmp
adc
mov
push
dec
ret
jl
xchg
sub
js
sarl
int
jl
insb
cmp
ret
pop
fs
mov
les
xchg
or
xchg
push
pop
jnp
push
cmp
insb
push
js
test
sub
jp
testl
stos
inc
in
sarl
into
xchg
add
inc
stc
sub
shr
cmc
cmp
push
enter
xor
push
arpl
iret
dec
sub
les
fadds
stos
scas
pop
mov
cmp
dec
pop
ds
sub
mov
std
add
cmp
mov
dec
mov
mov
add
dec
rcll
inc
cmp
push
jle
dec
sbb
je
sbb
scas
test
jge
aas
or
cmp
fisubs
jmp
pop
lret
sbb
in
js
shlb
lds
popf
jns
or
dec
jne
xor
pop
sbb
fwait
jo
sbb
repz
or
aad
stc
in
in
xor
pop
lret
mov
loopne
jge
inc
mov
cmpb
mov
leave
push
push
es
sub
lcall
mov
add
shll
xchg
inc
icebp
sub
aam
cli
movsl
cld
fyl2xp1
jp
adc
andl
cmpsl
js
sbb
sub
pusha
insl
bound
int
jbe
int
pop
and
or
jo
cmp
and
push
xlat
je
out
lods
push
push
pop
or
adc
movsb
lret
out
dec
aas
cmp
jl
in
insb
cmp
mov
push
jg
adc
mov
add
or
push
dec
insb
cs
push
pop
jno
ret
pop
or
adcl
movsb
into
jg
jne
dec
fstpt
xchg
add
adcb
inc
inc
add
jp
inc
sub
jge
leave
into
sub
mov
lods
out
push
pop
and
sarl
cmpb
sub
rclb
int
das
ds
xchg
adc
add
test
xchg
push
dec
mov
and
pop
xchg
mov
lret
les
dec
sbb
or
stc
jo
lds
pop
cmc
dec
xor
ljmp
in
push
jo
nop
push
push
fstpt
aas
js
imul
hlt
xchg
ja
cmp
popa
lds
aam
insl
outsl
sbb
nop
int
aam
bound
in
mov
les
es
lds
ds
fs
adc
mov
fwait
out
ljmp
insl
add
add
scas
lea
scas
pop
xor
outsl
jecxz
dec
lock
jp
xor
pushf
jge
and
mov
lret
pusha
adc
aam
sbb
daa
jnp
cmpsl
iret
call
fs
sbb
jg
add
int
cmp
aam
es
stc
cld
les
cmc
lcall
jp
int3
shll
inc
mov
dec
pop
pusha
aam
xchg
ficomps
icebp
jle
and
lods
es
adc
pop
and
scas
pop
movsb
sarl
addb
outsl
das
sub
test
test
cmp
cmp
mov
jl
cmp
cmp
mov
sub
cmp
iret
test
push
inc
or
ficoml
lock
sub
xor
mulb
pusha
mov
stc
inc
xor
mov
cmp
jmp
mov
push
cmp
mov
ljmp
popa
cmc
xchg
fdivrl
es
cmp
jp
fsubl
popa
adc
cli
rclb
push
into
pop
jbe
mov
cmp
rcl
mov
ret
in
shlb
cmp
add
sbb
into
arpl
mov
jl
xor
sti
sahf
js
sbb
rolb
aam
iret
aam
mov
cltd
xchg
sub
lret
repz
loopne
xchg
mov
inc
daa
fldl
loope
cmpsb
cwtl
test
or
fisubl
in
xchg
pop
cwtl
test
fidivs
stc
in
addr16
pop
push
lahf
pop
outsb
dec
inc
sar
push
mov
xchg
insl
jge
aaa
xor
xor
in
push
and
sahf
pop
xor
or
xchg
fimuls
ss
dec
test
jge
js
jp
stc
pop
cmp
pop
cmp
fldcw
mov
insl
scas
shrl
fcomps
aas
pop
fidivrl
jge
or
and
or
lea
das
mov
cs
push
fldenv
cmp
adc
scas
pop
jb
jo
jb
or
test
lret
dec
jae
in
cmpb
add
shlb
dec
xchg
gs
inc
inc
imul
cmpsb
mov
aam
repz
add
insl
pop
inc
js
int
and
lcall
or
imul
xchg
fs
or
mov
push
ja
cmp
or
pusha
inc
out
shl
add
push
repnz
or
mov
mov
add
ljmp
push
pop
out
sub
push
xchg
adc
dec
pusha
icebp
popf
xor
xchg
ret
add
mov
sub
xchg
and
jnp
es
jo
test
fstl
jp
shll
lcall
ret
pop
imul
in
jne
inc
in
les
dec
lods
push
leave
pop
sbb
stc
or
fdivrl
jecxz
mov
cli
popf
mov
lock
xor
push
inc
aam
push
stos
xchg
daa
fdivrs
lcall
aas
xchg
inc
adc
xchg
pop
mov
cmp
mov
test
es
adc
pushf
lods
xchg
mov
aaa
test
sub
test
mov
pop
scas
cs
stos
cmc
jae
stos
add
dec
stc
xor
jns
dec
popa
dec
fdivs
mov
shlb
cltd
sbb
dec
jnp
rcrl
and
fstpl
cli
sahf
cmc
mov
sbb
pop
fnstenv
mov
into
scas
sbb
iret
scas
push
jl
test
rcrl
dec
lcall
in
rorl
push
pop
nop
cwtl
xchg
lods
adc
mov
mov
fcoml
xchg
jae
add
sbb
out
sub
decl
mov
stc
loope
lea
push
mov
int
incb
nop
iret
mov
adc
inc
cmp
or
sahf
shl
sbb
arpl
fbld
daa
in
in
int3
xchg
pop
cmpl
shll
into
pop
imul
xor
mov
and
movsb
test
sub
bnd
and
orb
xchg
scas
or
xchg
sbb
das
add
scas
rcr
data16
push
repnz
outsb
and
xor
mov
xchg
sti
lock
call
mov
loope
and
insb
les
xorb
push
push
pop
sarl
dec
loop
les
jmp
dec
test
xchg
stc
mov
lock
sti
sahf
pop
pop
icebp
dec
add
jg
push
xor
mov
pop
push
xchg
mov
or
push
push
sbb
cmp
mov
jmp
int
mov
stc
bound
call
adc
dec
xchg
sub
lds
or
jle
sub
nop
xchg
add
add
xchg
mov
sub
mov
stos
ret
xor
mov
mov
icebp
inc
pop
mov
lods
lock
test
pop
loopne
popa
mul
ret
test
sar
add
repz
mov
pop
stc
out
mov
inc
in
inc
and
shll
mov
jge
mov
repz
div
or
cltd
leave
pusha
mov
cmp
cs
or
andb
pop
das
cltd
addl
inc
mov
dec
mov
jmp
xchg
mov
xchg
or
jmp
add
inc
push
mov
mov
xor
cltd
xchg
cmpsl
mov
in
inc
sbb
push
dec
cmpsl
movsb
int
mov
sahf
ds
adc
mov
mov
mov
fdivrl
and
test
dec
jns
pop
mov
sub
add
cwtl
inc
rorb
fcmovnbe
mov
mov
push
enter
mov
xchg
std
sbb
inc
sbbb
xlat
jbe
addr16
push
test
jle
fldt
fsubr
in
adc
insl
and
mov
cmp
pop
mov
bound
ljmp
mov
sub
ss
arpl
push
dec
mov
or
inc
jp
popf
test
xchg
fsubrl
adc
movsl
hlt
adc
sub
jp
xchg
or
sbb
add
inc
test
daa
ljmp
scas
mov
inc
jns
add
mov
jbe
xchg
dec
mov
lock
dec
fidivrs
cli
mov
aad
sti
adc
dec
mov
pop
or
gs
jle
cmp
jno
test
add
and
outsl
or
pop
repnz
sub
je
arpl
xor
sub
imul
xchg
cs
cmc
xchg
pop
mov
addr16
add
xor
dec
cmovb
cli
aad
popa
cltd
hlt
push
xchg
stos
ds
sbb
inc
cmp
mov
fnstenv
dec
stc
xchg
pop
add
dec
mov
test
push
in
jae
rorb
cmpsl
popf
vpunpckhbw
inc
sbb
into
and
repnz
xor
inc
sub
incb
shll
pop
in
jg
outsl
pop
xchg
jb
mov
inc
stos
iret
scas
or
cltd
xor
cmp
ret
int3
gs
out
push
arpl
adc
cmp
adc
hlt
sub
sbb
clc
dec
dec
xchg
repnz
nop
sbb
pop
xchg
add
jne
xchg
jnp
sti
movsl
sar
outsl
lea
dec
repz
xor
and
jne
jns
cs
stos
xor
das
xchg
and
jmp
orb
xchg
das
jns
jecxz
jl
jl
mov
sbb
arpl
pop
cmp
add
add
mov
mov
jmp
icebp
daa
inc
xchg
xchg
add
leave
test
jmp
pop
jmp
push
xor
sti
cmp
call
fcomp
mov
pop
push
xlat
fsubrp
adc
xchg
fnstsw
in
addr16
adcl
rcrb
cmp
ret
cwtl
and
cmpl
jge
data16
idivl
lods
ret
js
mov
push
mov
mov
push
add
xchg
sti
in
fsts
je
insb
push
call
jg
arpl
rclb
test
pop
out
cmp
nop
mov
adc
add
sub
jo
adc
icebp
or
mov
xor
push
vmread
jns
outsb
shl
nop
xlat
lods
fs
shll
js
bound
scas
repnz
lods
inc
dec
outsb
and
jb
xchg
fcom
ja
xor
std
xchg
or
sarb
cli
imul
mov
outsl
fnstenv
adc
stc
out
push
dec
in
inc
xor
jmp
and
sub
loopne
scas
sar
jg
loopne
mov
dec
jns
test
adc
mov
je
jge
jl
pop
mov
shrl
movsb
and
inc
aas
jl
jns
sub
and
mov
test
mov
mov
or
push
push
jnp
dec
push
push
rcrb
ljmp
or
mov
imul
mov
inc
jnp
dec
xchg
dec
sahf
stc
sahf
xor
outsb
xchg
cmp
mov
sbb
inc
ss
jnp
jne
loop
mov
sbb
add
fstpt
xor
add
jae
xchg
dec
push
push
add
sub
shlb
lods
xchg
lret
pop
sahf
mov
push
jne
dec
sahf
aad
dec
jnp
xlat
mov
dec
jnp
jle
jl
fs
mov
mov
outsl
pop
pop
gs
fucomi
xchg
das
aam
jge
dec
cmc
or
movsb
jmp
mov
xlat
test
mov
jge
sbb
dec
insb
jns
mov
push
push
std
sahf
pop
gs
xchg
adc
mov
mov
ss
jp
hlt
test
jo
nop
cmpsl
bound
ljmp
rol
loope
dec
pop
ret
xchg
xchg
in
int3
clc
arpl
mov
stos
stc
gs
dec
fsub
or
mov
jne
lock
cmp
rcll
push
mov
cli
mov
sub
sbb
popa
inc
push
movsl
xchg
and
jo
cs
lods
fadd
mov
fwait
out
push
cltd
fisttpl
mov
xchg
adc
mov
push
repnz
in
daa
stc
mov
daa
push
dec
nop
fiaddl
fs
jae
fdivl
imul
outsl
lods
lahf
cwtl
cmc
jnp
jle
sub
cld
loopne
je
jecxz
lods
outsb
mov
or
dec
and
fbld
frstor
or
push
rcr
mov
outsb
test
xor
in
je
dec
and
mov
test
sbb
mov
adcb
jne
fdecstp
aad
pop
or
add
mov
sbb
add
dec
mov
cli
mov
mov
dec
sarl
lcall
cmp
testl
jne
mov
rcll
mov
inc
jae
xchg
or
mov
xchg
mov
inc
sub
pop
orl
mov
je
jg
mov
pop
shl
sub
std
mov
cmp
mov
jp
add
dec
aad
jnp
jbe
push
sub
outsb
adc
xchg
sbb
or
lds
stc
mov
ds
rorl
mov
jl
sarb
in
xchg
ljmp
dec
dec
add
jl
mov
or
mov
mov
pop
pushf
mov
adc
mov
inc
out
movsl
fwait
sti
jl
xchg
add
mov
xchg
or
iret
insb
fdivl
das
ss
roll
js
les
test
lods
adc
and
lods
subl
pushf
inc
cmp
sbb
shlb
mov
push
fnsave
js
idiv
mov
mov
jmp
movsb
addr16
mov
mov
push
movsb
inc
push
fwait
pusha
sahf
push
dec
cltd
outsb
mov
ds
jns
imul
and
jnp
inc
nop
jle
lcall
loope
and
fninit
sub
pop
sbb
cs
dec
aas
jmp
jmp
mov
nop
adc
outsl
int
pop
mov
pop
inc
xchg
cmpsl
mov
push
inc
xchg
aad
mov
mov
mov
addl
and
xchg
outsb
mov
pop
scas
lea
in
push
cmp
test
push
mov
fadd
inc
insl
cmp
cmp
je
sbb
subl
popf
notl
cmc
dec
pusha
sub
pushf
push
cmc
add
adc
push
cmp
sbb
jnp
sub
jecxz
shrl
xchg
pop
enter
jmp
aas
in
fisubs
xor
fcomps
inc
pop
ss
xchg
rcr
clc
mov
add
scas
call
cmp
rcrl
sub
jle
mov
je
je
ja,pt
sti
bound
push
and
mov
xchg
push
mov
cld
xor
lds
ja,pt
stos
pop
data16
inc
add
scas
sub
jmp
cmc
cmpsb
sub
jbe
je
adc
jge
sbb
pop
cmp
int3
into
nop
xchg
movsb
gs
adc
mov
shl
popf
and
cmpb
mov
lods
jg
jle
xchg
je
cs
fs
and
out
int
fstps
jp
out
xor
mov
mov
sbbl
add
mov
test
shrl
daa
pushf
mov
sub
cld
mov
clc
hlt
imul
mov
and
mov
sub
inc
int
les
hlt
and
mov
lret
lds
mov
cmpsl
fsubr
mov
sti
cltd
mov
fists
lods
das
mov
test
cmp
hlt
cmp
rcrl
adc
cmpsl
xchg
xchg
ljmp
fistps
scas
mov
loope
dec
jp
pop
mov
mov
xor
loopne
or
mov
jne
es
mov
mov
mov
aam
std
pop
and
rol
data16
pop
cmp
pop
xchg
or
pop
xlat
fisttpl
inc
jno
sti
and
pop
mov
xchg
cltd
pop
sti
jns
out
inc
mov
jae
push
mov
aad
add
std
mov
push
sub
cmpsl
arpl
into
pop
out
in
xor
js
dec
rcrb
loope
xchg
cmp
out
insb
jl
cmpsl
test
push
mov
les
in
and
int3
mov
into
xchg
lods
mov
push
sub
aaa
cmpb
add
mov
sub
ja
insl
enter
adc
rcll
dec
ficoms
mov
leave
ret
xor
outsb
ljmp
xor
xchg
out
iret
jbe
sub
or
movsb
adc
dec
inc
adc
dec
xor
xchg
imul
jbe
inc
sbb
mov
orl
xor
scas
imul
ja
dec
ds
cmp
popf
mov
jge
les
in
ret
push
xchg
cmp
xor
ret
ror
sti
mov
cmpsb
xor
and
jmp
mov
lret
xor
out
xchg
ss
or
aaa
xor
out
imul
ja
or
push
cmp
push
popf
mov
jge
les
mov
add
fcompl
call
push
jmp
imul
lds
push
hlt
pop
push
xchg
lock
push
sahf
es
xor
dec
aas
enter
cs
inc
mov
sub
int3
adc
ljmp
inc
subl
orb
cmp
push
xchg
mov
js
pusha
xor
sub
dec
cs
mov
popf
stos
jb
pop
sarb
sbb
lcall
sub
push
push
sub
hlt
add
pushw
sub
cs
jae
xchg
sbb
inc
cmpsl
adc
sbb
lock
cmp
add
fcoml
dec
popf
in
fiaddl
clc
incb
call
mov
dec
in
cs
jmp
leave
xor
add
in
jmp
xchg
aam
and
rclb
shrl
addr16
mov
xor
cwtl
aas
xchg
pop
inc
out
gs
sarl
fwait
sub
jns
data16
lret
sub
dec
fiaddl
and
movsl
cltd
mov
pop
and
inc
mov
lods
fwait
adc
or
push
dec
fsubr
popa
repnz
cmp
xchg
push
addr16
lea
cli
jne
xchg
lahf
aas
lds
icebp
ds
adc
lock
pop
add
or
in
lods
mov
xchg
mov
adc
rcrb
mov
aam
mov
mov
test
adc
lret
orb
add
cmpsb
cmpsb
sbb
daa
sub
out
nop
xor
push
jns
cmp
push
or
xchg
ror
sub
out
ljmp
popa
add
sbb
adc
cmp
adc
std
stos
sub
data16
int
inc
xchg
fwait
pop
adc
popa
or
aam
fidivs
fidivrs
mov
xor
sub
aam
lcall
cld
in
cli
xchg
xor
out
inc
xchg
sub
add
add
daa
sub
hlt
imul
insb
cmpsb
jl
ffree
iret
mov
lahf
cmp
nop
leave
insb
jne
xchg
int
mov
fstpt
or
mov
shlb
inc
jne
jg
orb
ds
jbe
leave
out
pop
cmp
dec
sub
out
lret
jno
mov
add
mov
les
jg
cltd
cmpsb
nop
addr16
sub
outsl
mov
mov
jecxz
sbb
add
push
sub
jo
sub
popa
xorb
daa
cmp
add
mov
add
add
outsb
rorl
inc
hlt
cmc
lret
inc
mov
push
pop
ret
leave
outsl
xchg
gs
mov
jo
inc
mov
scas
adc
aaa
or
xchg
sahf
and
adc
or
movsb
cmp
xchg
jns
sub
sbb
jmp
repnz
outsb
out
gs
daa
subb
pop
insb
mov
ljmp
inc
int3
push
aaa
xchg
sbb
push
adc
lahf
jo
push
out
cs
mov
sti
push
in
movb
sbb
sub
mov
push
jne
xor
jns
xchg
sti
cld
push
jae
jno
fmull
push
fucomi
sub
add
inc
adc
xchg
imul
adc
jg
or
aas
test
lods
popa
hlt
xor
sub
aam
fimull
and
xor
or
cli
insl
adc
sbb
add
xor
xchg
xchg
push
xchg
inc
and
in
add
xor
insl
mov
out
dec
inc
mov
add
sub
lods
inc
outsl
mov
pushf
sahf
fstpt
jp
xchg
out
cmc
jp
xchg
loopne
aam
cmpsb
mov
shlb
lea
jg
ret
loope
push
gs
and
inc
jg
rcr
ret
test
test
sub
sbb
sbb
stc
fisubs
mov
jmp
inc
rcr
scas
mov
push
xchg
sub
gs
mov
jns
xchg
nop
ds
mov
push
inc
add
ja
scas
scas
cmp
test
adc
frstpm(287
and
faddl
sbb
adc
ljmp
sub
and
into
into
jle
and
inc
fwait
mov
pop
jl
push
sti
jecxz
sbb
mov
jb
fs
aam
xchg
pop
inc
jno
sub
jge
dec
mov
add
dec
insb
dec
daa
dec
add
sbb
insl
sti
adc
data16
arpl
movsb
xor
jp
xchg
push
cmp
arpl
sbb
cmpsb
cmpsb
es
and
std
ret
test
or
rorb
mov
insb
cmp
inc
sub
into
mov
mov
push
sub
outsl
or
cmpsl
dec
dec
aas
push
lret
sbb
hlt
jg
lahf
inc
lea
std
pop
int
jo
into
xchg
sub
in
movq
pop
push
jne
pop
xchg
pop
aas
adc
xor
fwait
pop
out
xchg
aas
fwait
out
aas
cmp
scas
inc
push
and
out
dec
pop
out
adc
in
jb
es
call
adc
cli
xchg
sub
dec
in
cmpsl
pop
ljmp
dec
inc
mov
jge
xor
leave
mov
sub
jo
cmp
jg
inc
lea
fs
pop
fprem
js
jb
xchg
adc
mov
dec
into
fisttpll
and
jmp
dec
xchg
mov
cmp
je
test
test
xlat
fdivrs
vmptrld
test
mov
les
and
fisttps
xchg
jge
scas
cmp
imul
mov
hlt
sbb
mov
mov
out
sbb
mov
inc
test
xchg
xor
cmp
push
xchg
imul
mov
sub
shrl
testl
mov
jb
mov
ds
xchg
add
or
and
inc
ss
test
sub
aas
cmp
es
mov
add
or
inc
dec
or
and
mov
add
mov
cs
inc
cmp
scas
pusha
pop
mov
pop
mov
arpl
pop
and
popf
cli
scas
push
in
adc
call
lret
lock
adc
ss
pushf
jns
pop
test
push
mov
inc
sbb
pop
mov
xchg
dec
inc
inc
push
shlb
dec
sub
sub
test
jne
xchg
jns
cld
jge
imul
push
repz
add
stos
mov
adc
test
fisttpll
xor
mov
inc
pop
push
xor
leave
loop
add
int
jo
or
in
add
sub
mov
push
xor
cld
cmpsb
cmp
sub
mov
or
dec
sbb
mov
adc
jns
sub
jmp
dec
mov
push
ja
loop
inc
fucomi
xchg
add
dec
mov
pop
mov
push
mov
imulb
mulb
lret
cld
les
or
or
addl
push
jmp
pop
mov
cmp
movsl
or
xor
mov
into
pop
in
mov
add
je
push
mov
xor
shlb
jns
lahf
scas
xchg
iret
stos
mov
sub
dec
fdivrl
mov
insl
insl
ds
fistps
mov
repz
mov
pop
adc
xor
xchg
dec
push
xchg
and
lds
mov
push
in
sub
mov
sarb
loop
loop
les
mov
andl
mov
mov
mov
out
mov
or
dec
shl
ljmp
pop
xor
mov
shld
pop
hlt
cs
push
hlt
pop
xchg
mov
aas
mov
inc
repnz
and
jns
dec
repnz
sarl
dec
fnstenv
outsb
sbb
in
out
scas
xor
pop
jne
in
pop
in
add
push
adc
jb
test
movsl
xor
cltd
pusha
push
stc
js
adc
mov
movsl
mov
lock
sub
pop
jnp
cmp
cmp
stos
pop
js
repz
push
daa
sub
in
jns
xchg
mov
lret
jle
test
lock
xlat
xchg
stos
filds
ljmp
push
fldenv
imul
rorl
push
pop
pop
popf
inc
das
jg
stos
add
xchg
retw
pop
mov
add
dec
sub
xchg
add
adc
and
das
mov
adc
into
scas
xchg
push
movsb
inc
mov
cmp
pusha
push
jnp
push
mov
mov
and
inc
mov
or
jae
mov
scas
femms
push
and
mov
dec
jnp
mov
or
dec
scas
inc
push
pusha
leave
dec
xchg
cmp
jo
xchg
xor
xor
push
repnz
out
cli
imul
sub
pop
outsb
sub
or
js
lock
test
call
or
enter
and
xchg
sub
mov
idivb
xchg
aas
rorl
push
add
lea
sub
andps
pop
cli
imul
and
hlt
jno
test
test
ret
fimuls
sub
lods
jnp
ret
sahf
in
lea
push
and
sub
shrb
sbb
int
sub
sbb
sub
out
jbe
mov
lds
push
cmp
rolb
jge
insb
xchg
faddp
sub
add
pop
dec
movsb
insl
out
or
adc
cld
and
mov
ret
popf
sbb
mov
mov
xchg
push
jle
loopne
out
pop
xor
cld
pop
xor
sbb
cmp
hlt
or
xchg
loope
push
sarb
jnp
sahf
xchg
mov
cmpsb
jmp
jp
mov
or
cmpsb
imul
jg
xor
andb
cmpsb
mov
jg
stc
adc
sbb
xor
stos
sub
jl
es
nop
hlt
sti
cwtl
mov
xor
pop
call
repz
jecxz
xchg
out
and
jno
sub
sub
paddsw
dec
or
loopne
push
mov
add
mov
mov
adcl
testl
pop
cltd
ret
clc
xchg
dec
push
adc
jle
ret
lret
testb
ret
mov
sub
test
out
inc
sub
inc
andb
mov
shrl
sub
xchg
sub
out
jae
mov
int
mov
sub
cmc
and
mov
stos
sbb
sbb
xchg
xchg
and
cmc
mov
jns
adc
in
ds
inc
sbb
xchg
in
call
add
xchg
data16
jne
mov
movsl
add
icebp
notb
movsb
pop
lea
cmp
xchg
add
cmp
xchg
pop
cmp
pop
popa
or
xor
pop
push
mov
out
mov
add
xchg
in
pop
imul
and
pop
xor
mov
enter
xchg
add
push
out
push
cmp
cmp
and
jo
pop
mov
loopne
popa
pop
popa
xor
xchg
jb
jnp
and
ja
mov
fadds
pop
sbb
nop
hlt
xor
dec
push
in
stos
enter
mov
push
xchg
push
mov
insl
repnz
dec
outsl
push
mov
mov
pop
add
sub
in
roll
jecxz
das
sub
daa
push
add
fs
lock
mov
test
adc
xchg
xchg
lods
stos
jno
sbb
lahf
xchg
mov
lret
arpl
sub
or
push
hlt
push
and
mov
js
add
sbbb
sub
or
sarl
fs
fcmovne
pop
sub
sbb
mov
rclb
lds
sbb
pop
cmpsl
xchg
sub
fisttps
mov
pop
negl
pop
mov
cmp
cmpsl
into
int3
popf
fstl
pop
sub
repnz
mov
pop
mov
fildl
inc
rolb
jns
mov
cmp
sbb
lret
lcall
mov
and
pop
add
stc
cs
push
fs
loopne
das
fstpt
push
inc
xchg
inc
dec
lods
js
or
mov
xchg
mov
push
fdivl
push
jno
fisttps
repnz
jp
xchg
fwait
addb
jns
adc
xchg
xchg
aam
clc
adc
aaa
mov
lret
cpuid
pop
xor
out
cmp
arpl
data16
add
ja
jecxz
outsb
imul
xchg
in
mov
fwait
dec
or
loop
pop
loop
sbb
repnz
outsl
inc
push
addr16
and
lds
xor
sub
push
xchg
cld
js
dec
movsl
adc
stos
mov
mov
push
cmp
mov
push
fs
mov
imul
push
cmp
mov
mov
push
stc
push
incl
xchg
loop
inc
or
add
pop
pop
pushl
fcomi
jmp
or
dec
sti
push
lock
inc
scas
or
gs
push
jle
or
sti
mov
jo
xchg
push
nop
jg
pop
adc
aad
and
push
nop
aas
leave
push
mov
cmp
cs
adc
dec
fnstsw
jb
xor
add
push
outsb
imul
dec
push
lar
add
scas
jle
mov
ret
inc
dec
lock
jle
jns
inc
movsb
jb
xchg
jge
shll
aad
push
addr16
mov
pop
incb
or
into
popf
and
hlt
mov
in
ja
inc
loop
sbb
mov
pop
push
test
imul
fiadds
ret
std
pop
leave
aas
add
ror
mov
jb
jle
andl
xor
dec
lds
repnz
mov
cmp
and
push
aaa
adc
hlt
ds
push
adc
mov
dec
dec
inc
or
lock
movsl
cwtl
sti
push
in
push
xorb
fnstcw
lods
movb
imulb
sarb
sub
icebp
mov
pop
jbe
fmull
mov
jle
jmp
and
stc
push
add
shlb
pop
xchg
or
cmpsl
dec
mov
fmulp
mov
outsb
clc
cld
cmp
xor
inc
sub
loope
sbb
push
fwait
sbb
mov
cmp
sbb
in
jl
jno
mov
std
mov
xchg
push
mov
std
mov
fisttpl
xchg
or
je
dec
unpcklps
cwtl
stos
clc
sbb
sbb
sub
mov
es
stos
cmpsl
cmp
imul
imul
push
stos
sbb
mov
movsb
pop
or
jbe
les
sub
mov
insl
leave
pop
pop
scas
sbb
and
lahf
jmp
ja
inc
std
inc
popf
sbb
sub
std
ja
imul
loop
xor
ret
xor
pop
cmc
xor
or
jnp
dec
ss
xchg
pusha
xlat
ret
xchg
mov
jp
pop
inc
jb
shl
xchg
and
push
pop
insb
add
cmp
or
xor
xlat
pop
add
xor
jns
cmp
jb
gs
mov
sbb
in
adc
dec
mov
out
lahf
in
cmp
inc
xchg
sti
dec
adc
call
push
xchg
mov
std
sbb
ret
ljmp
or
cmp
push
roll
dec
dec
fsubl
hlt
mov
inc
push
test
push
outsl
es
cmp
xchg
es
mov
out
shrb
cmp
fiaddl
push
cmc
int3
xlat
dec
cwtl
push
and
ds
adc
mov
mov
xchg
sub
dec
mov
test
mov
mov
je
btc
inc
dec
fs
shr
pop
mov
les
fcoml
pop
ret
lock
repz
cmp
std
or
cltd
out
mov
imul
inc
sub
push
and
fwait
dec
lret
fisubrs
orb
repz
pusha
dec
in
adc
or
push
add
xchg
sarl
inc
inc
repnz
push
inc
jns
cld
adc
adc
pop
mov
mov
adc
push
in
and
dec
ds
xrelease
adc
stos
pushf
cmp
xchg
inc
imul
jp
mov
dec
or
lods
ja
int
subps
sbb
jge
cmp
aaa
mov
es
dec
and
gs
and
out
cmp
jns
insl
rorb
sub
adc
scas
pop
or
aad
mov
cmp
lods
lods
aas
fcmovb
adc
mov
shll
lds
lret
shrb
xchg
stos
xor
pop
lcall
daa
int3
jl
or
movsl
sbb
icebp
mov
stos
xchg
jmp
fs
orl
lret
mov
into
aam
xor
int
xlat
stos
dec
push
frstor
enter
dec
mov
nop
sub
call
xor
icebp
jge
lret
cmpsl
lcall
imul
test
push
cli
pcmpgtb
push
push
xor
mov
xchg
inc
sub
sub
out
push
cmp
xchg
mov
lret
cmp
fwait
repz
ss
lock
arpl
xor
data16
out
sbb
adc
or
mov
arpl
mov
adc
sti
dec
xchg
mov
inc
lock
or
cmp
imul
xor
rcrb
insl
inc
jl
addr16
js
mov
and
jl
push
jle
mov
cld
and
jp
xorb
in
add
push
cld
sbb
test
mov
or
push
mulb
test
out
jo
push
jp
imul
outsl
pop
fcompl
xchg
popa
cmp
mov
test
jne
push
in
in
xchg
xchg
test
inc
out
pop
cwtl
les
std
cmp
daa
fcomps
add
jo
faddl
sub
test
outsl
enter
int
popf
mov
cmp
cmp
popa
sub
pop
pop
add
xchg
or
or
mov
adc
mov
or
std
mov
push
rcll
cwtl
sti
lds
stos
add
out
jno
out
outsb
mov
divl
les
addr16
negl
or
sbb
mov
sub
call
dec
inc
ret
add
and
pop
xlat
dec
and
add
pushf
outsl
mov
cs
mov
or
in
xor
lods
lcall
sbb
push
lods
sbb
rolb
mov
in
jle
insl
xchg
aad
fldt
pop
sti
clc
sbb
fsubl
sbb
xchg
xorb
mov
in
repz
add
pop
lods
aas
push
xchg
or
andb
sub
cmp
dec
push
sbbb
aas
xor
sti
push
inc
or
aad
mov
clc
pop
sub
ja
mov
push
out
dec
cli
xlat
in
adc
inc
sub
shrb
and
les
scas
js
fld
lods
mov
jmp
inc
test
adc
lahf
mov
pusha
push
iret
ficomps
mov
js
call
sub
or
outsb
cmp
or
jle
std
and
dec
xlat
pop
out
arpl
in
xchg
pop
into
ret
inc
jp
xchg
hlt
pop
pop
pop
addb
sarl
inc
adc
xchg
mov
int
mov
dec
sahf
fwait
cld
push
daa
adc
int
imul
sbb
pop
loopne
xchg
cli
inc
scas
lcall
xchg
movsb
dec
aas
pushf
sbb
daa
pusha
cmc
dec
push
push
adc
cmp
mov
mov
pop
sub
addb
stc
add
insl
sbb
in
mov
mov
out
jge
adc
in
iret
add
inc
inc
jg
lret
aas
lret
ret
addr16
xchg
jnp
cli
test
fwait
dec
flds
mov
aam
cmpsl
sub
jbe
jo
stos
add
xchg
in
pop
xchg
test
pop
sub
fistps
imul
push
rcr
pop
dec
adc
jle
mov
adc
lock
in
addr16
call
push
mov
test
pop
ret
cmp
or
clc
imul
scas
jo
dec
test
mov
xchg
shl
sbb
nop
mov
int3
mov
in
pop
cmpsl
sbb
pop
inc
rcl
sbb
sub
xchg
dec
test
or
push
add
xor
mov
pop
lock
fisttpll
es
jmp
add
push
cld
insb
fiadds
pusha
dec
cmp
cltd
push
ss
push
and
repz
or
adc
jl
fbstp
arpl
lahf
pushf
cmc
int
jecxz
push
pop
mov
mov
les
outsl
mov
aaa
or
fldl
add
icebp
cmp
das
js
or
fs
sbb
xchg
pushf
enter
sub
sbb
xor
mov
inc
pop
adc
mov
xchg
or
ret
jo
notl
js
mov
stc
mov
and
adc
mov
pop
popf
daa
sbb
and
dec
fsubr
pusha
shrb
orb
fsubrs
lret
or
cmp
cmp
pop
pusha
sti
scas
and
mov
mov
sbb
xor
fmull
das
shll
ds
cld
adc
cmp
adc
rorl
nop
hlt
and
stos
inc
call
and
xor
mov
or
stos
and
push
jle
bound
xchg
pop
xchg
int3
and
and
mov
add
test
pop
push
cli
or
pop
daa
incb
iret
xlat
jmp
lods
xor
inc
lods
repz
imul
jo
aad
xchg
fdivr
int3
xchg
loop
std
jo
pusha
das
or
nop
call
adc
ds
xor
inc
or
stc
lcall
mov
repnz
stc
movsb
sbb
idivl
les
sbb
push
fucomip
sub
lret
mov
and
or
add
cmc
push
push
stos
jle
add
subb
jp
sti
xchg
inc
adc
sbb
or
dec
je
repz
add
inc
mov
call
test
push
and
add
xchg
scas
pop
or
fsubrs
bound
jmp
js
repnz
dec
jp
pop
enter
rcrl
mov
loope
call
push
push
insb
aas
cmp
fld
and
pop
icebp
lret
andb
inc
cld
jl
jns
cmp
ret
dec
add
nop
jle
mov
cltd
cs
push
lahf
sbb
xlat
add
pop
add
subb
push
maxps
dec
add
scas
jmp
out
jecxz
mov
dec
fbld
repnz
xchg
xchg
outsl
subb
sbbb
lea
pusha
mov
aas
xchg
sub
jns
loop
out
pop
mov
es
sbb
movsb
mov
je
ja
mov
xchg
mov
mov
inc
ret
insb
xchg
xorl
sub
outsb
stos
xchg
xchg
adc
inc
aas
inc
cmp
adc
cmc
mov
inc
jmp
fstps
dec
leave
jo
or
jo
and
insb
cs
lahf
inc
adc
leave
xlat
aam
sub
push
ja
in
pop
aad
and
or
int3
mov
clc
and
xchg
shlb
repnz
add
js
pop
adc
cmp
jp
repz
insl
outsl
fadd
cmp
cmp
sub
cmp
adc
pop
push
xor
in
inc
cltd
mov
push
sub
xor
sarl
jno
sbb
adc
fnstsw
add
xchg
outsb
lret
mov
inc
in
adc
xor
mov
mov
or
mov
ja
jmp
jnp
clc
fldl2t
cld
loopne
je
mov
xor
out
ret
insl
cmp
fs
mov
ret
loop
icebp
mov
insl
xchg
cmp
popa
in
sub
xchg
test
test
and
aas
lods
imul
push
test
or
ret
sub
or
dec
sub
inc
jp
mov
sub
movsl
add
xor
outsl
loopne
sub
jbe
cmp
xor
in
inc
mov
jne
jnp
xor
push
jbe
dec
lock
ljmp
dec
inc
xor
sub
adc
mov
inc
xorl
cwtl
adc
leave
cmpsb
push
jbe
ss
jle
pop
jecxz
imul
leave
in
cs
adc
and
sarb
xchg
orb
mov
stos
dec
pop
ret
cmp
fdivs
jle
sub
das
stos
out
loopne
jp
mov
out
push
mov
movsl
or
in
sbb
movsb
arpl
fidivrs
out
repz
sahf
es
daa
cmp
aad
and
add
imul
sbb
loop
push
adc
add
pop
jp
xor
cmp
and
arpl
mulb
fmull
test
push
mov
and
mov
test
mov
jns
movsb
jae
adc
push
mov
leave
dec
jl
and
jp
jo
stc
test
ret
das
scas
rorb
enter
or
cmp
movsb
mov
push
aad
ret
and
sub
xor
add
xor
cmp
lahf
sbb
or
data16
insl
inc
jns
or
sub
xorl
cmpsl
jg
pusha
out
cwtl
int
jno
std
sub
sub
cmpsb
xchg
cli
mov
push
inc
pop
negb
cmc
jle
fildl
inc
mov
cmp
add
jnp
mov
or
mov
stos
xor
push
xlat
jnp
cld
rcrl
mov
sbb
or
mov
dec
xchg
sub
in
pop
add
xor
inc
lds
repnz
stos
scas
ret
dec
rcl
push
or
sub
scas
neg
movsl
sbb
add
jle
xchg
cli
mov
xchg
push
xchg
mov
into
stos
push
cmp
jne
mov
pop
inc
outsl
test
inc
lcall
dec
shll
pop
add
fidivrl
jo
aaa
push
jmp
rol
push
inc
jp
loope
xchg
push
js
add
xorb
lock
pop
xchg
cmc
scas
je
insb
bound
jecxz
jo
xchg
iret
imul
sbb
dec
mov
add
les
fdivrp
ret
mov
or
and
push
fcmovu
mov
pop
add
xchg
sbb
sub
mov
enter
jge
lds
mov
cld
sub
das
inc
mov
lods
inc
cmpsb
sbb
and
mov
fildll
int
aad
js
inc
cmpsb
imul
ljmp
sbb
div
bnd
pop
cmp
sti
lret
add
clc
adc
leave
fsts
jg
shll
rcrl
ds
out
loope
jns
dec
aas
cmp
xchg
stos
lods
cmp
bound
sub
mov
adc
push
call
or
xorb
adc
ja
imul
dec
mov
mov
cwtl
pop
mov
sub
xchg
inc
jns
sbb
insb
inc
adc
loopne
pop
push
cwtl
jge
pop
cmp
sub
xchg
sub
or
mov
mov
jb
fcompl
inc
gs
jg
out
ds
dec
roll
je
add
push
cltd
outsb
cs
cmp
ljmp
pop
mov
xchg
and
mov
xor
stc
ret
insl
insl
pop
mov
mov
cmpsb
jge
std
outsb
xchg
dec
dec
dec
hlt
cld
dec
test
mull
sub
ds
cmp
pop
scas
repnz
mov
pop
and
pop
sub
insl
jb
out
imul
insb
flds
sbb
sub
out
jl
pusha
and
pushf
xor
psrlw
jbe
data16
sub
clc
mov
push
hlt
jle
mov
jp
mov
cmp
jne
mov
sbb
xchg
in
imull
sarl
xchg
idivb
lods
inc
js
xchg
xchg
jne
push
movsb
mov
mov
cmpsb
orl
sbb
mov
ja
jbe
inc
ds
cwtl
lods
mov
repnz
hlt
jp
add
sti
lods
jns
in
inc
ds
dec
ficomps
andl
mov
lds
cmovb
cltd
push
pop
adc
insl
dec
xor
sbbb
push
push
cmp
mov
lret
xor
loop
fwait
inc
pop
or
and
fiadds
pop
jnp
ret
sub
into
mov
insl
out
mov
jo
sub
xchg
pop
pop
push
push
dec
in
popf
hlt
pop
aas
push
xor
test
sub
iret
inc
sbb
leave
insl
outsb
inc
jnp
mov
jle
mov
push
test
sbb
xchg
adc
pop
adc
data16
sar
and
adc
dec
push
aam
scas
xchg
push
out
fs
and
cmc
xor
popf
xchg
es
pop
sbb
inc
mov
push
addl
xor
xchg
cmp
dec
pop
scas
mov
pop
dec
push
mov
adc
shr
pushf
test
add
nop
dec
push
push
repz
das
mov
cltd
data16
enter
dec
idivb
inc
add
cmp
inc
pusha
pop
cmp
cwtl
clc
lods
sub
mov
loop
mov
insl
std
add
test
push
outsl
jmp
mov
mov
xor
mov
xchg
sbb
lods
sbb
lret
add
int3
xor
cld
movsb
scas
movsb
test
into
cmpsb
jmp
pop
cmc
jnp
push
or
sbb
test
and
rcrb
or
mov
mov
xchg
dec
idivl
ret
stc
inc
mov
in
iret
pop
sub
cmpsl
movb
int
jno
cmp
or
jle
xchg
dec
scas
xchg
iret
jp
adc
and
jbe
jae
xor
and
out
push
jmp
mov
mov
xchg
sbb
add
loope
cmp
lcall
xor
xchg
xor
jecxz
inc
push
mov
icebp
int3
insl
inc
jecxz
mov
nop
mov
sahf
dec
mov
xchg
xor
popa
pop
call
mov
mov
mov
jne
js
cli
flds
and
push
lcall
pop
mov
fdivrs
xchg
adc
jp
push
leave
cmp
ret
push
push
lock
dec
xchg
sbb
jle
mov
std
push
mov
cmp
in
jg
shlb
js
shl
shrl
test
mov
lock
fdivr
ret
lods
xor
or
pop
push
xchg
out
sub
sbb
push
cmpsl
sti
shl
push
lcall
mov
jbe
pusha
jae
imul
clc
test
daa
xchg
loop
sti
jmp
adc
jle
adc
cwtl
xchg
jns
test
push
hlt
mov
push
call
mov
inc
pop
inc
mov
pop
or
fwait
push
pop
inc
mov
bound
xchg
xor
pop
push
add
lea
cwtl
adc
mov
shrl
pop
mov
fistl
out
fs
mov
jp
addr16
or
xor
test
pop
adc
outsl
mov
ds
jne
jae
mov
push
pxor
inc
or
push
lods
lock
das
or
iret
addr16
cli
das
mov
fmul
push
int3
sub
push
and
fnstsw
jnp
js
addr16
outsb
adc
dec
clc
sub
inc
mov
or
andb
mov
movsl
popf
cwtl
pop
ret
xchg
leave
xchg
cmp
cmp
inc
cmp
inc
fcompl
xchg
test
fdivrl
mov
and
sub
cld
scas
add
jge
jae
out
scas
mov
xchg
cmp
xchg
or
cld
sbb
sti
mov
mov
dec
mov
mov
push
sub
mov
ss
add
call
cli
lock
sbb
cmp
and
add
jl
jecxz
push
dec
outsl
jnp
aas
sbb
push
cmp
imul
sub
movb
test
mov
inc
imul
lods
xchg
jbe
out
and
pop
imul
push
lcall
inc
push
mov
lea
pop
cs
lods
sahf
jp
dec
pop
push
jp
jne
aam
jns
fnsave
rcr
test
ljmp
mov
jl
sbb
push
or
fwait
xlat
aaa
jmp
bound
aam
dec
jae
aad
mov
in
pop
out
mov
in
add
mov
cmp
jmp
cmp
stos
push
push
adc
sub
fstpl
xchg
not
inc
stc
xchg
inc
scas
adc
imul
mov
jg
xlat
sbb
insl
enter
cmp
test
mov
inc
mov
icebp
sbb
sbb
sub
mov
sub
pop
aas
inc
cwtd
push
gs
add
jl
sar
pop
add
fwait
push
ja
push
lret
add
inc
aad
xor
xor
insl
out
lock
lea
test
push
lods
jmp
jl
je
fwait
insl
lods
aad
push
adc
aad
imul
inc
insb
jge
mov
or
xorl
neg
mov
adc
jne
adc
pop
addr16
sub
mov
jge
adc
pusha
inc
or
pusha
dec
pop
aad
les
or
adc
imul
les
mov
dec
jle
lods
andb
dec
add
stos
inc
aas
ret
jnp
fistpll
and
sub
mov
mov
movsb
xchg
mov
aaa
dec
adc
mov
fs
mov
lret
pusha
jp
push
lea
out
mov
test
sbb
aad
inc
and
add
xchg
arpl
cmp
mov
into
sbb
mov
or
mov
test
jne
das
add
ds
aaa
out
outsl
jae
mov
repz
popf
dec
cmp
ret
pusha
xor
stos
int3
es
jg
adc
or
sub
into
jmp
push
mov
jnp
dec
lock
lcall
and
outsl
popa
inc
imul
sbb
lcall
mov
push
into
xor
pop
sbb
dec
push
shll
pop
inc
mov
pop
sub
stos
scas
mov
cmc
jle
push
pop
stos
test
dec
mov
cmp
adc
xchg
push
repz
adc
cs
lock
test
adc
jecxz
add
lahf
imul
xchg
jle
frstor
pop
jae
mov
out
adc
jno
xchg
stc
add
lds
leave
ret
pusha
rcll
inc
push
mov
push
std
fistpll
incl
in
mov
inc
fildll
jp
les
sbbl
xchg
mov
xchg
imul
and
cli
pushf
jg
pop
cld
push
vcvttsd2si
dec
mov
scas
aad
jl
test
inc
roll
add
call
fs
mov
or
gs
fs
mulps
cwtl
mov
cmp
mov
xor
outsl
xrelease
xchg
mov
into
sbb
mov
jecxz
mov
pop
or
scas
daa
mov
mov
sub
fistps
les
mov
mov
fadds
rolb
cmp
jl
mov
xchg
lds
negl
sub
dec
xor
cmp
jns
jle
loop
add
xchg
adc
or
xor
std
mov
in
lea
rorb
cli
xchg
jle
sbb
adc
sbb
mov
movsb
push
mov
push
or
outsb
push
stos
outsl
jns
in
cltd
lcall
scas
or
adc
inc
movsl
cmp
xchg
sarl
sbb
popa
push
popa
lock
sbb
outsb
xchg
pop
mov
in
pop
inc
push
or
lahf
int
and
jbe
roll
mov
in
cmp
sarb
jno
xorps
repnz
inc
push
sub
insl
roll
sub
push
or
jl
insb
fwait
sbb
ja
cltd
enter
push
add
cmp
or
mov
je
ror
add
lcall
stos
mov
xchg
movsl
pushf
mov
jb
xlat
popa
sbb
ds
dec
jb
dec
ret
test
out
push
in
sbb
cmp
push
scas
or
clc
mov
scas
push
mov
adc
mov
test
les
ficoml
loope
mov
push
mov
cmp
in
jb
stos
xchg
dec
mov
sti
mov
cmp
ret
or
sbbb
es
iret
xchg
xchg
jecxz
add
xlat
jb
cli
mov
insb
in
xchg
push
mov
mov
xchg
fwait
pop
scas
push
jg
ret
sbb
lahf
cmpsb
xchg
not
lods
mov
addb
stos
dec
jp
and
out
roll
jg
imulb
mov
shl
cs
mov
mov
loope
ljmp
cmp
sahf
pop
es
xlat
out
data16
cli
cmp
jl
lods
mov
insl
xchg
inc
adc
fiadds
cmpsb
sub
mov
jge
mov
lahf
mov
pop
inc
cwtl
cmc
adc
jne
xchg
and
inc
orl
and
es
dec
popa
lods
rorl
jnp
std
cmp
mov
dec
mov
and
xor
orb
or
xor
pop
xchg
jl
lods
xchg
sbb
mov
add
cwtl
mov
lods
add
je
or
inc
rorb
fs
lahf
dec
ljmp
idiv
aad
iret
dec
in
fistps
in
repz
dec
sbb
ljmp
xchg
test
inc
mov
dec
jmp
sub
xchg
sub
xchg
cwtl
xor
fistps
push
sbb
and
push
fildl
bound
and
dec
or
push
ss
sbb
cmp
lods
xor
dec
jg
repz
cmp
pop
out
ljmp
mov
sbb
lahf
lods
nop
sbb
out
mulb
loopne
mov
fadds
lea
aad
in
test
adc
jne
mov
mov
cmc
cmp
repz
push
xchg
sub
cmc
insl
push
and
shr
sub
push
les
mov
out
mov
add
daa
imul
push
xchg
and
jo
sub
aam
mov
out
jo
adc
sub
cmp
push
js
cmp
mov
pop
push
sbb
repnz
cmp
lcall
lahf
mov
arpl
dec
jg
fwait
and
addr16
and
aaa
jge
nop
rcr
call
mov
mov
mov
push
es
nop
lods
in
dec
mov
sbb
mov
rorb
movb
inc
pop
jno
bound
sti
cmp
adcb
sarb
adc
jp
nop
aam
pop
mov
dec
aas
sahf
xorb
sub
insb
daa
dec
jbe
imul
inc
les
aas
movsl
push
fsubs
es
jo
sub
jb
or
cmp
test
in
scas
or
sub
insb
incb
pop
std
mov
sub
mov
jno
pop
ret
pop
mov
out
aaa
fs
pop
adc
push
lea
insb
pop
push
pop
test
jno
nop
out
icebp
xlat
inc
call
xorb
jnp
pop
cmp
test
or
jnp
xchg
stos
push
push
cld
mov
push
and
mov
loop
adc
dec
xchg
cltd
adc
movsl
fidivrl
mov
jno
xor
lods
lret
ds
pop
and
mov
push
aas
lock
xlat
pop
mov
push
xchg
mov
jl
add
imul
call
movsb
pushf
push
mov
movups
arpl
cmp
cmp
push
out
mov
or
jne
and
jns
pop
icebp
jo
mov
into
inc
lahf
loop
repz
jecxz
aam
xor
stos
test
cmpsb
ljmp
fistl
jg
mov
test
or
xchg
xchg
mov
cld
loope
cmp
mov
xchg
inc
xchg
mov
shrl
aas
xor
xchg
loop
jne
push
lahf
push
outsb
dec
mov
dec
mov
push
xchg
push
pop
movsl
inc
dec
add
call
out
add
pusha
jge
and
movsl
pop
cwtl
push
fs
mov
mov
mov
fwait
loopne
ror
sbb
idivb
pop
add
jmp
fdivs
adc
mov
sub
push
push
imul
hsubps
notb
or
mov
stos
pushf
das
cmp
enter
pushf
movsb
sub
mov
std
ljmp
pop
inc
vaddps
scas
neg
cli
cmp
or
outsb
cld
mov
push
mov
cmp
les
insb
stc
hlt
inc
or
and
dec
lea
imul
sub
jns
out
pop
add
je
cld
insb
jl
jo
das
lods
xorb
jbe
ljmp
out
loop
sbb
les
cmp
movsb
push
sbb
jl
adc
adc
shrl
jne
je
ljmp
out
loop
sbb
enter
dec
adc
mov
pop
repnz
inc
pusha
loop
insb
xor
lds
fnstcw
movsb
dec
jmp
rclb
dec
faddl
xor
cli
push
out
mov
inc
xorb
popa
dec
jg
add
lods
pop
fnstenv
jo
sbb
adc
or
in
cmp
sbb
push
cwtl
xor
add
shl
test
push
jg
inc
out
arpl
xor
outsl
or
mov
and
xchg
jbe
inc
shr
hlt
or
sbb
cltd
push
xchg
or
add
jle
ret
aam
out
rcll
lcall
inc
lcall
fldz
fsub
and
jp
mov
jmp
cmp
pop
push
mov
dec
fsubr
fistps
xchg
out
push
and
jbe
lods
mov
push
insb
hlt
and
fs
loop
dec
adc
jb
dec
aam
xchg
sti
cmp
xchg
push
in
out
jmp
pop
fidivs
hlt
jo
or
pop
sbb
cmp
add
clc
sti
xor
jecxz
movaps
mov
cmpsb
jge
add
mov
mov
outsb
loop
in
pop
push
and
cmp
push
mov
xlat
adc
push
xchg
sub
stos
inc
inc
mov
push
cmp
lods
lock
repz
adc
aam
mov
aad
test
test
add
sti
mov
pop
or
inc
push
and
lock
imul
int3
test
pop
aas
cld
insl
jge
add
pop
shl
push
les
adc
pop
jge
daa
insb
das
and
cli
es
bound
adc
mov
sbb
xor
add
mov
dec
loope
lods
fmul
cmp
jle
stc
ds
icebp
lret
cmp
aas
cmp
or
inc
push
dec
fdivr
xlat
dec
add
es
outsl
xor
adc
cmpsb
cmp
outsb
pusha
or
insb
call
arpl
daa
mov
les
jnp
syscall
sub
xchg
or
mov
arpl
pop
pop
cmp
inc
cmpsl
loopne
inc
addr16
fpatan
sahf
arpl
inc
mov
sbb
or
mov
sub
xchg
mov
fldenv
out
push
cmp
xchg
push
adc
outsl
mov
cmp
mov
mov
sub
xchg
add
xlat
jle,pn
arpl
push
jns
imul
push
stos
in
dec
test
xchg
mov
repnz
xchg
pop
push
and
aad
mov
add
popf
enter
lret
inc
lret
sub
jl
aaa
std
out
ss
fists
mov
cmp
push
sbb
xchg
je
xor
jmp
imul
arpl
andl
vpsrlw
fnstcw
fwait
pop
aaa
jg
lret
outsl
add
xchg
imul
or
xchg
or
or
jb
cmp
sti
cmp
fwait
int3
loop
xor
popf
movsb
sbb
and
xchg
inc
mov
jle
rcl
cmp
or
mov
out
jb
pushf
xchg
test
jae
decw
jle
sbb
test
aad
xchg
mov
out
out
sub
daa
sub
stc
or
shl
or
fiadds
jp
and
mov
lret
rcll
ficomps
add
jmp
sub
hlt
fcomps
or
mov
mov
nop
mov
popf
push
adc
cmp
xchg
push
aas
mov
lds
nop
adc
jns
jns
sbb
push
std
push
lahf
sbb
clc
mov
roll
xor
inc
pop
sbb
sub
popa
pop
inc
arpl
push
les
xor
mov
push
lods
jle
cwtl
pop
and
adc
stc
xor
sub
mov
pusha
sbb
fstps
and
ret
mov
fdivrl
jno
xchg
xor
push
cmp
mov
pop
jl
jp
ljmp
xchg
mov
sbbl
add
out
xchg
les
cmpsl
es
mov
jnp
rcrb
scas
pop
push
jmp
ss
cmp
or
ret
add
mov
inc
adc
jae
ret
pop
jg
inc
push
out
jbe
les
hlt
xchg
push
scas
les
ficompl
sbb
xlat
popa
sbb
cmp
ret
mov
cmp
lea
inc
stc
pop
ljmp
cmp
rcl
jg
popa
jo
lods
hlt
jns
cmp
mov
inc
pop
sbb
dec
pop
imul
cmp
ret
fisttpl
in
dec
js
fwait
pop
lahf
jl
popf
or
xor
addb
popa
jg
out
jmp
aad
rolb
adc
jl
pop
mov
mov
test
pop
dec
push
cmp
imul
fcmovnb
cmp
ret
jno
or
lret
pop
add
mov
cwtl
push
add
inc
xor
int3
sbb
rcrb
pop
xor
jecxz
cwtl
xor
ss
je
fcompp
jge
dec
jmp
fiadds
out
je
sbb
in
cmpsb
adc
lcall
mov
stc
sub
frstor
push
js
jne
sbb
sub
push
test
movsl
adc
aaa
mov
or
xor
pop
push
test
push
popa
outsb
mov
ret
sbb
jl
outsl
imul
push
jmp
xor
sbb
aas
filds
cmp
jns
or
xor
movsl
in
test
subb
test
shll
jecxz
aam
xchg
fnstsw
loope
addr16
or
jnp
andb
scas
insl
and
aaa
xor
in
inc
pop
les
loope
insb
sub
fbld
mov
ret
mov
or
scas
inc
cmp
cltd
add
or
sar
cmp
sub
in
xor
jb
xor
test
popa
xor
pusha
ret
inc
lret
xor
ret
stos
movsb
cmp
and
pop
lgs
lahf
and
dec
push
dec
mov
push
cmp
jp
lock
mov
mov
in
push
mov
pop
ret
iret
in
pop
sahf
in
pop
xchg
pop
mov
sub
arpl
xorl
jno
out
popa
call
push
fwait
xchg
cld
push
aaa
pusha
mov
mov
mov
imul
and
xor
mov
loopne
popa
adc
adc
xor
hlt
ret
sub
lods
rcrb
fidivrl
and
jae
fs
loop
pop
jns
sbb
jle
cmpsb
cmp
pop
gs
mov
repnz
in
dec
ret
out
inc
lcall
jp
xchg
mov
sub
bound
ss
pop
cmc
push
xor
adc
or
fs
pop
jle
push
dec
dec
fldenv
repnz
jb
or
jne
scas
popa
dec
mov
ret
mov
sbb
pop
mov
loope
movsb
xchg
inc
stc
ja
in
ret
in
pop
lods
test
daa
jns
push
xor
mov
cmp
movsl
add
pusha
sarb
pop
iret
mov
cmp
and
and
adc
mov
fbstp
das
add
aaa
popa
cli
cmp
and
ret
mov
stos
adc
or
test
mov
movsl
push
jmp
xor
pop
hlt
sysenter
stos
ficompl
sbb
sahf
jbe
sub
loope
jmp
out
icebp
push
out
addr16
push
mov
jecxz
ljmp
mov
movsl
out
mov
mov
xor
cmc
call
loop
aad
sarb
mov
cltd
rcr
arpl
or
add
mov
out
test
mov
fstpl
insb
cmp
xor
mov
adc
jnp
jne
xor
adc
xor
push
pmulhw
push
and
xor
jnp
inc
pop
bound
cmpsb
mov
xor
cld
or
push
push
push
xchg
inc
mov
fs
loop
adc
rcll
cld
inc
add
push
xor
push
pop
jno
pushf
push
jns
or
jne
into
xor
loop
cmp
arpl
push
dec
sbb
jge
je
scas
jl
pop
arpl
popa
sub
into
pop
pop
or
cmp
jmp
push
mov
xor
and
xchg
add
jle
and
sbb
out
sub
cmp
sbb
sub
jbe
jno
or
push
jge
dec
stos
data16
das
cmp
adc
adc
push
mov
repnz
jecxz
inc
xor
loop
adc
pop
mov
push
jle
adc
stos
sub
xchg
xor
add
mov
out
mov
pop
inc
adc
adc
data16
pop
fadd
push
jbe
jns
mov
mov
imulb
dec
cmp
data16
fisttpl
mov
push
test
mov
divb
leave
add
test
lahf
subb
fs
add
sub
imul
inc
popf
sbb
cltd
js
and
xor
xor
call
pushf
icebp
out
inc
add
sub
xlat
lds
adc
inc
add
lods
les
scas
sbb
adc
and
inc
mov
jmp
mov
aam
adc
fcoms
add
mov
rcrb
jl
notl
fwait
test
subb
rorb
fisttpll
xchg
jl
push
mov
repz
je
xchg
je
mov
lock
xchg
leave
je
into
xlat
jne
out
and
add
out
jo
dec
cmpsb
cmp
mov
jns
jge
or
jne
leave
sbb
xchg
adc
std
push
jp
out
aas
pop
movsl
sahf
jo
sub
ret
out
inc
mov
mov
push
xor
imul
inc
push
dec
push
add
loope
in
pop
lods
cmp
ss
xchg
push
xchg
in
call
jecxz
test
outsl
movsl
sub
daa
mov
stos
inc
nop
jo
icebp
ret
in
xchg
dec
jns
pop
mov
loop
ss
xchg
adc
cmpsl
mov
sbb
imul
xor
fstpl
jbe
xchg
pusha
xor
or
addr16
das
in
loope
fdivs
jae
lods
pop
es
adc
xor
cmpsl
subl
dec
cmpsl
mov
push
inc
mov
addr16
pop
inc
ss
add
pop
pop
add
adc
cli
aas
out
jae
push
or
enter
adc
add
fldl
inc
stos
clc
movsl
xchg
mov
sbb
cwtl
loopne
xchg
call
mov
add
and
jg
js
test
dec
mov
out
mov
dec
sub
rcll
sbb
and
cmp
pop
test
xor
int
pop
jns
mov
in
lcall
mov
sbb
push
or
add
dec
fnstsw
enter
shrb
sbb
mov
xlat
loope
outsb
adc
pandn
fldcw
movsl
inc
jmp
xchg
push
mov
lahf
insb
xor
dec
cmpsl
in
cltd
lock
push
pop
adc
push
out
mov
xchg
jae
sub
mov
rolb
or
aad
inc
jns
xchg
and
mov
sub
dec
lods
or
repz
out
mov
addr16
fists
or
fiaddl
repz
and
in
sub
cmpsb
out
nop
jmp
add
and
push
orb
daa
dec
xchg
notl
and
popf
adc
es
adc
mov
xchg
fidivrl
jne
ds
and
sub
mov
push
fadds
xchg
mov
xorps
je
cmp
mov
leave
inc
les
inc
dec
sub
ja
lods
adc
outsl
push
ja
cmp
ret
adc
or
inc
call
push
fadd
pushf
pop
pop
in
add
push
add
cmp
adc
mov
je
outsb
int
xor
and
jo
lahf
dec
jns
xchg
popf
dec
lret
jl
cmc
lret
popa
mov
mov
jp
sub
dec
inc
xchg
cmpsl
pop
jns
jbe
nop
xchg
in
popa
imul
sbb
sbb
push
repz
mov
cmc
xor
xor
loop
in
mov
mov
inc
out
cmp
pop
xlat
inc
jg
cmpsb
adc
scas
lea
mov
scas
push
add
pop
stos
cmp
popa
repz
aas
sub
je
pop
mov
xlat
bound
adc
jbe
shr
cmp
sbb
xor
push
dec
pusha
mov
xchg
sti
jmp
add
xchg
fsubs
cmp
cwtl
mov
inc
dec
mov
inc
push
imul
ret
int3
inc
push
shl
movsl
jmp
lds
aaa
pusha
sti
push
and
rorb
pop
jno
rcrl
repz
fs
jl
pop
rolb
inc
imul
mov
mov
dec
sarb
movsb
mov
inc
or
ficoms
xor
push
jae
xor
add
xor
mov
in
sahf
mov
push
inc
adc
orb
mov
push
sbb
add
lret
jmp
hlt
callw
js
popa
insb
pop
in
push
add
fnstcw
inc
mov
dec
xchg
push
add
add
xlat
add
outsb
inc
test
stos
and
mov
and
inc
xlat
jbe
clc
cld
cmp
xchg
dec
push
test
shl
add
inc
mov
push
sbb
ja
mov
mulb
andl
cmc
stos
test
dec
outsb
push
sbb
lret
ljmp
shrb
push
jmp
adc
movb
stos
sar
jae
lret
jno
mov
sbb
lock
adc
insb
sub
les
jge
dec
pushf
imul
mov
sub
fiaddl
in
mov
subb
adc
aad
rcrb
fcomp
xchg
sub
dec
out
and
enter
mov
xor
xchg
pop
andb
push
js
rorl
in
add
and
sub
adc
jle
sbb
andb
push
incb
outsb
dec
clc
nop
add
pop
inc
cmp
cmc
inc
pop
rolb
decl
data16
xlat
xor
int
ja
test
pushf
jb
imul
inc
out
repz
xor
adc
outsb
add
lds
jns
in
es
xchg
push
push
sti
lret
nop
stos
adc
or
push
sbb
push
pop
sti
push
sbb
hlt
lret
cmp
and
gs
push
shll
cwtl
or
inc
or
jmp
inc
in
test
imul
stos
xlat
sahf
lock
cmp
mov
mov
add
aas
add
ret
mov
ss
movsb
mov
in
jge
out
mov
dec
cmpsl
fs
mov
scas
pop
cmp
xor
xor
pop
adc
icebp
sub
mov
sub
xchg
add
xchg
pop
cmpsb
ds
pop
xchg
or
into
test
in
ret
nop
gs
adc
adc
lret
mov
pop
adc
sbb
mov
sub
sbb
push
pop
pop
testl
int
rcrb
xchg
mov
ss
arpl
xchg
lock
dec
push
cli
sub
mov
mov
shll
fs
pop
cs
lret
xlat
int
ss
push
push
xor
and
and
movsb
push
stos
cli
add
cmp
pop
movb
pushf
sbb
adc
hlt
int3
jge
sub
cmp
xor
push
fisubl
mov
adc
fisubrs
sahf
gs
add
addr16
lea
adc
and
adc
iret
orb
xlat
lods
scas
sub
xadd
pushf
push
xor
fs
add
push
jecxz
sbb
rcll
mov
and
and
xchg
in
jbe
sub
std
into
push
dec
jl
enter
inc
cmpsb
jno
std
xor
adc
lds
add
sub
pop
je
adc
cmpsb
aam
pop
jge
cmpsl
mov
and
push
mov
int3
js
mov
pop
cmp
dec
adc
mov
fcomp
nop
jle
fs
lret
subb
jmp
mov
and
pop
adc
add
out
push
and
icebp
xlat
into
mov
pop
insb
sub
xchg
scas
push
push
mov
mov
icebp
push
dec
imul
inc
xor
je
js
jo
call
pushf
push
xchg
cmp
je
iret
outsb
adc
sbb
lods
rorl
pop
sbb
and
dec
adc
cmp
jno
jl
pusha
or
or
fcoml
mov
and
mulb
jecxz
jmp
sub
pop
pop
test
push
call
sbb
cmp
out
cmpl
mov
loopne
pop
xchg
pop
add
leave
sub
xlat
and
stos
mov
mov
cmp
adc
push
dec
fnstcw
in
jg
rcrb
shlb
xchg
cmpsl
push
lret
call
cld
bound
mov
shrl
and
and
xchg
and
imul
pop
push
cltd
push
and
in
and
ror
sub
cmpsl
int3
mov
add
clc
outsl
mov
stos
add
push
out
repnz
test
fs
mov
imul
inc
ja
inc
ret
add
jge
enter
sbb
push
mov
inc
rolb
mov
mov
pop
adc
push
mov
lds
iret
dec
dec
js
maxps
clc
pop
or
negb
fcmove
sar
push
mov
enter
sub
adc
jmp
iret
lret
sarl
stos
dec
popa
out
ret
pop
mov
lods
jecxz
test
test
sar
mov
add
xor
pop
mov
aam
adc
fsubl
mov
es
test
xor
jg
std
pop
iret
lods
mov
idiv
and
pop
imul
jge
push
lods
int
movl
dec
inc
push
jb
cmpxchg
and
cmp
in
sub
mov
dec
jg
xor
cmp
lret
cmp
pop
push
pop
cli
adc
jne
inc
cmp
and
mov
inc
xor
dec
xchg
repz
sub
das
orb
das
sbb
jns
fisubl
fistl
pop
scas
scas
scas
jb
cmp
dec
jecxz
and
lret
bound
iret
cwtl
push
mov
or
in
dec
sti
out
mov
add
iret
mov
mov
nop
fisttpl
cltd
jne
loop
fs
mov
push
and
fnstsw
mov
dec
rorb
movsl
pop
mov
add
pop
jnp
mov
push
xorl
mov
push
adc
pusha
jb
mov
inc
mulb
loop
xor
icebp
dec
arpl
bound
cli
stc
into
or
leave
add
xchg
dec
xor
jmp
repz
sbb
jmp
movsb
adc
jae
adc
aas
adc
fisttpll
fwait
je
push
mov
gs
sbb
int3
pop
or
fdivl
sahf
sarb
cmc
lret
or
sti
mov
sbbl
fcompl
inc
push
loope
pusha
cmp
hlt
push
in
push
imul
lret
or
int3
adc
mov
andb
data16
or
sbb
sarl
ret
cmp
add
mov
cltd
cwtl
mov
mov
cli
push
mov
je
pop
xchg
cmp
push
cmp
and
dec
data16
aam
in
xor
test
xor
push
sub
popa
lcall
push
je
xchg
jmp
inc
add
xchg
jne
push
das
pop
add
popf
cmp
dec
mov
push
sub
sahf
xor
lds
jae
jno
xlat
leave
cmp
sbb
in
and
mov
icebp
pop
cmp
and
or
xor
aam
hlt
and
imul
test
mov
xchg
adcb
jo
cmpsl
icebp
add
out
sbb
sbb
mov
cld
sarl
fincstp
dec
mov
ret
inc
lret
xor
rcr
inc
and
jp
add
or
and
cmp
pusha
shrb
jmp
jnp
mov
dec
ja
push
sar
or
jp
shl
pop
out
std
jecxz
sub
popf
jg
rcl
pop
mov
pop
fdivrs
sbbl
cmpsl
imul
jne
inc
scas
es
push
ret
movsb
insl
stos
mov
mov
data16
mov
pushf
js
pop
mov
xchg
pop
and
or
popa
int3
xlat
xchg
daa
imul
adc
xor
xor
jbe
loop
cmp
pop
dec
ja
sub
pop
push
dec
jo
push
ljmp
push
les
jg
in
or
sbb
jbe
ds
pop
dec
pop
int3
inc
sub
xchg
jno
icebp
int3
bound
inc
mov
jno
pop
cmp
cmp
out
inc
cmp
xor
push
scas
pop
lods
pop
rolb
js
mov
popa
push
inc
cltd
inc
push
pop
inc
jg
push
je
xor
push
cmp
data16
mov
or
cmp
test
push
push
bound
push
pusha
inc
pusha
jo
fprem
inc
dec
and
lea
mov
ret
out
push
jno
jbe
in
int3
in
aam
add
push
mov
ja
es
pop
loop
and
rcrl
inc
inc
jp
rorb
arpl
dec
cmp
es
rclb
push
and
mov
aas
and
scas
ds
pop
jbe
lahf
or
addr16
hlt
cs
cmp
inc
and
mov
sarl
jns
shrb
cmpl
out
or
mov
add
aad
cmp
cmp
sub
xchg
mov
scas
jns
xchg
lds
out
aad
je
sbb
xor
inc
push
cwtl
subb
or
adc
lcall
movsw
sahf
add
or
push
stos
roll
and
mov
push
mov
adc
sub
stos
mov
ffreep
mov
pop
jg
std
shll
dec
push
inc
jbe
cwtl
pop
jmp
es
fldcw
jle
and
in
std
or
inc
cmpsl
push
es
push
out
daa
imul
or
sub
xchg
es
inc
js
xchg
ud1
push
mov
mov
sbb
adc
push
hlt
jno
je
jnp
inc
xchg
insw
repnz
xchg
add
mov
ds
in
and
adc
mov
out
cmp
lods
sbb
inc
and
jge
cmpsl
adc
rcrw
push
fs
ss
mov
je
jle
jnp
add
into
hlt
mov
push
lea
jae
cmp
pop
rcrl
mov
nop
mov
inc
cmp
sub
xchg
mov
sbb
pop
xchg
xor
inc
mov
jg
lods
jns
xchg
shll
rorb
je
or
pop
push
rcr
jo
sbb
dec
aaa
adc
sbb
popa
clc
popa
or
xchg
cmp
cmp
dec
jecxz
out
adc
enter
jb
das
shrl
pop
sarb
sbb
andb
rorl
cmp
and
mov
das
inc
jmp
mov
inc
mov
mov
jle,pn
pop
insb
lret
inc
xchg
mov
cmp
es
test
cmp
push
inc
mov
ds
push
mov
xor
in
rorb
lea
fnstsw
les
mov
in
pop
outsl
mov
xchg
inc
cmp
dec
inc
mov
adc
inc
push
cwtl
push
movsl
mov
inc
sbb
adc
std
xchg
mov
ffreep
inc
in
pop
adc
enter
push
sahf
push
cltd
rcr
mov
mov
arpl
mov
test
fldcw
mov
popa
push
cmp
call
in
inc
sbb
sbb
push
jnp
dec
jbe
sbb
jle
in
and
mov
add
cwtl
subb
xchg
jg
out
dec
jl
mov
pop
inc
loop
aam
movl
xchg
adc
add
inc
fbstp
inc
xchg
stc
push
test
js
push
adcl
cmc
sub
hlt
ss
pop
mov
std
jns
jbe
outsb
insb
test
shlb
cmp
xchg
push
mov
cmp
push
repnz
and
in
arpl
clc
jb
je
stc
xor
cltd
int3
ret
inc
mov
test
jb
loop
movsl
insl
push
xchg
ds
flds
or
fdivrl
lcall
pop
pushf
ljmp
popa
or
xchg
jnp
in
push
out
out
lcall
es
mov
pop
addr16
jnp,pt
push
or
inc
sbb
sub
jl
cld
adcb
push
sub
jbe
addr16
div
fists
sbb
loope
inc
fsubs
pop
jl
pop
xor
pop
mov
xor
mov
std
pusha
cmpl
push
push
sbb
inc
jae
jp
xor
xlat
xchg
es
in
lods
or
jae
mov
mov
cld
push
sub
pop
lahf
or
inc
jl
outsb
add
in
adc
out
sbb
jle
sbb
adc
sbb
sbb
pop
sahf
push
scas
push
pop
push
out
add
jecxz
roll
inc
xchg
aad
push
sub
lods
inc
xchg
jge
jle
fildll
or
stos
sbb
push
jns
mov
and
push
jno
jb
mov
adc
jb
lahf
aam
fcoml
sbb
arpl
push
das
pop
mov
inc
xor
popf
pop
sbb
mov
in
xor
sbb
push
add
outsb
incl
pop
insb
push
jae
inc
movsl
js
stos
jp
jo
and
jo
scas
xor
push
xor
lock
jb
popl
out
xchg
out
aad
lock
pushf
inc
popw
scas
inc
pop
scas
fnstsw
test
cmc
pop
fildll
sbb
push
push
sahf
jb
fistpll
push
mov
xchg
ds
aas
out
push
arpl
mov
ficoms
aaa
inc
sahf
cmc
cs
cmp
and
cmpsl
sub
mov
shll
push
jle
mov
jbe
push
pop
push
pop
add
dec
push
mov
insb
jp
cmpsl
sbb
xorb
ret
ror
ret
xchg
xlat
aad
add
dec
sbb
cltd
push
adcb
jp
cmpsl
mov
dec
ret
mov
mov
fistpl
sbb
xchg
push
stos
jle
mov
inc
mov
hlt
jp
cmpsl
pushf
adc
jb
push
ret
pop
into
dec
outsb
mov
mov
push
xchg
je
cli
and
push
mov
mov
mov
mov
and
hlt
jp
cmpsl
pushf
adc
jb
push
ret
inc
into
dec
outsb
mov
mov
push
xchg
jo
and
push
xchg
mov
mov
xor
jp
cmpsl
cld
adc
in
or
mov
outsb
push
pop
test
ss
push
fidivrl
mov
decb
clc
out
dec
fisubrl
cwtl
into
dec
pop
enter
clc
add
dec
add
cwtl
jb
mov
mov
adc
jb
mov
outsb
xchg
xchg
sahf
fildl
adc
mov
inc
pushf
daa
inc
mov
clc
jp
cmpsl
in
or
push
push
into
inc
outsb
dec
xchg
mov
mov
jo
repnz
push
cmpb
xchg
adc
jbe
into
push
ss
mov
and
cld
jp
cmpsl
in
adc
pushf
jle
outsb
into
push
outsb
pop
xchg
inc
jl
out
fs
mov
mov
mov
xor
sbbb
clc
mov
jbe
clc
jle
bound
push
mov
dec
jp
cmpsl
js
cli
jb
bnd
cli
into
out
ljmp
bswap
cwtl
jmp
jle
mov
lock
call
adc
jb
outsb
ret
pop
into
inc
outsb
dec
xchg
mov
mov
insb
mov
xchg
mov
mov
mov
fwait
cmpsl
mov
mov
pop
jp
data16
pop
push
mov
js
out
push
inc
loop
out
outsb
rclb
push
ds
and
clc
push
add
dec
push
push
adc
adc
jb
mov
outsb
xchg
xchg
sahf
fildl
or
xchg
and
push
cmpsb
jle
mov
push
mov
loopne
call
push
into
pop
outsb
inc
xchg
dec
fstpt
js
out
push
mov
mov
cld
add
or
adc
push
push
push
xchg
mov
and
mov
fisubrl
clc
mov
testb
out
out
mov
adc
das
dec
es
sub
push
sbb
add
mov
push
adc
jbe
pop
push
inc
pop
mov
mov
push
mov
or
cmpsl
cmp
mov
sub
mov
jp
loopne
push
jle
jle
clc
outsb
add
inc
push
mov
insb
jp
cmpsl
sbb
xorb
ret
fmulp
ret
cwtl
cmp
int3
mov
data16
pop
jp
data16
push
push
mov
js
out
push
loop
out
into
shrb
xchg
fcmovne
int3
ss
shlb
clc
clc
sbb
push
dec
or
cwtl
jp
mov
mov
cmp
pop
mov
outsb
xchg
push
out
cmp
dec
pop
mov
rorb
push
call
mov
push
push
push
pop
pop
inc
clc
mov
mov
cwtl
xchg
loop
insb
and
adc
jp
cmpsl
add
scas
jb
lret
ss
jle
mov
pushw
push
cmpsb
add
push
push
cwtl
pop
cmp
dec
jp
cmpsl
inc
adc
jb
xchg
mov
imulb
xchg
out
ljmp
mov
fcoms
dec
cmp
add
dec
push
push
mov
mov
cmpsl
pop
adc
jb
stos
ret
xchg
into
lcall
loop
out
cmp
mov
fcoms
xchg
jp
aas
in
data16
jbe
jle
jle
clc
outsb
add
inc
push
mov
js
out
push
loop
out
into
outsb
ficoml
outsl
js
inc
push
into
push
outsb
sbb
push
and
push
sub
mov
ret
stos
pop
xchg
clc
sahf
add
cwtl
out
mov
sub
mov
lock
hlt
and
call
adc
jb
inc
ret
dec
into
mov
mov
xchg
push
andb
and
push
xchg
jle
mov
insl
mov
and
sarb
call
retw
push
pop
outsb
inc
xchg
dec
jl
out
and
push
bnd
mov
stos
ficoml
pop
test
jecxz
jp
aas
in
push
jb
pushf
mov
push
pop
push
inc
pop
dec
clc
mov
cmpsb
dec
stos
push
mov
or
xchg
cmpsl
cmp
mov
ds
out
xchg
adc
cmp
in
adc
pushf
jle
into
push
outsb
pop
xchg
inc
fisttpl
mov
out
and
push
bnd
mov
xchg
push
ficompl
clc
into
push
xor
cmp
les
push
hlt
add
push
into
jb
jle
fldt
push
push
push
mov
ds
push
jle
mov
cli
mov
pop
repnz
incb
loop
out
push
mov
into
outsb
sub
scas
and
push
push
jle
mov
lret
mov
add
cwtl
ljmp
fcomps
cs
sub
push
dec
sbb
cltd
push
adcb
jp
cmpsl
mov
dec
ret
mov
mov
fistpl
adc
lcall
mov
addr16
and
les
cmpsl
lock
loopne
outsb
jp
data16
push
push
pop
test
ss
push
fidivrl
mov
div
push
pop
loop
out
add
dec
fisubrs
cmp
xchg
and
clc
adc
push
dec
push
push
mov
lods
jp
cmpsl
pop
adc
jb
scas
ret
xchg
into
sahf
outsb
mov
push
out
add
mov
sbb
adc
push
in
mov
add
mov
cmp
mov
mov
dec
lcall
adc
xchg
adc
jp
cmpsl
and
dec
push
ds
sub
mov
or
mov
cs
push
inc
pop
dec
clc
mov
mov
cwtl
xchg
out
push
jp
cmpsl
add
stos
jb
mov
int
jnp
enter
hlt
mov
or
bound
clc
push
add
dec
push
mov
jo
cmpsl
pusha
adc
into
fisubrl
xchg
into
ret
and
les
push
push
push
pop
or
arpl
cwtl
push
mov
pop
jp
cmpsl
dec
adc
jb
add
into
cli
outsb
out
out
fcmovnbe
fimuls
into
fdivs
and
pop
sbb
push
add
jle
outsb
cwtl
push
and
pop
jp
cmpsl
dec
adc
jb
sahf
ret
or
outsb
cli
xchg
out
ljmp
mov
aam
dec
es
sub
push
dec
push
cmp
nop
adc
jb
inc
ret
dec
into
mov
mov
xchg
push
lcall
sahf
jle
mov
mov
mov
and
cld
jp
cmpsl
in
adc
into
jle
bound
push
dec
pop
mov
jle
mov
mov
push
out
ljmp
push
xor
shr
imul
pop
aas
cwtl
push
jbe
xchg
and
adc
adc
jb
cmpsb
ret
xchg
into
sahf
outsb
mov
push
shlb
mov
inc
add
and
cs
adc
cwtl
add
dec
jp
cmpsl
mov
sub
inc
ret
dec
into
mov
mov
xchg
push
xchg
mov
push
sahf
jle
mov
mov
mov
and
clc
jp
cmpsl
call
jle
bound
push
inc
movsb
mov
fidivrl
mov
decb
clc
out
ja
mov
js
sub
and
sbb
lcall
cmp
aam
and
mov
fsub
and
push
pop
rcrb
pop
lods
sub
pop
lods
dec
adc
mov
mov
movsb
pop
sub
nop
or
popa
nop
mov
sub
push
data16
lcall
and
lahf
pop
jb
aam
ja
and
bound
in
or
push
fwait
push
mov
es
fstpt
mov
jnp
push
adc
inc
shl
and
or
inc
cwtl
and
inc
shlb
cmp
sub
push
fwait
add
and
xchg
jle
inc
sbb
mov
push
in
jo
dec
jnp
ds
test
dec
ss
mov
inc
pop
movsb
and
das
mov
dec
and
xchg
repnz
push
sub
int
jl
test
sahf
push
push
jnp
test
dec
and
imul
shlb
cs
and
dec
js
sub
inc
and
add
inc
push
fs
movsb
and
ja
in
popf
aam
jb
cmp
pop
rclb
addr16
xor
es
dec
and
cmp
or
shlb
jb
pop
sub
ret
pop
pop
arpl
jecxz
aam
ds
call
loopne
cmp
scas
cmpsl
jnp
divl
jg
pop
cmp
push
adc
cmp
aam
cmp
dec
ret
clc
pop
stc
in
jbe
pop
pop
inc
xor
inc
daa
or
movsl
clc
pop
inc
aam
and
xchg
pop
xchg
inc
pop
jmp
cmp
movsl
add
pop
push
in
pop
cltd
shll
jo
and
mov
mov
jp
pop
ficompl
cld
sub
rcrb
xchg
push
mov
outsb
push
dec
inc
outsb
movsl
mov
out
push
xchg
ds
mov
cwtl
inc
push
mov
xadd
push
xor
lods
jle
test
imulb
push
jge
int3
mov
cmpsb
cltd
imulb
and
xchg
shrb
sbb
inc
ds
data16
and
jg
inc
sbb
testb
xchg
inc
je
jmp
sbb
sub
mov
mov
ret
neg
adc
es
dec
lea
cwtl
jb
shlb
mov
mov
repnz
push
or
ds
hlt
xchg
outsb
push
mov
pop
xchg
xchg
pop
js
out
push
mov
xor
inc
mov
pushf
call
aad
cmp
rorb
sub
xchg
pop
mov
cld
dec
sbb
dec
repz
inc
cmc
mov
loop
inc
es
es
sbb
cs
aam
cmp
aam
orl
xchg
movsb
outsb
dec
insb
push
cmp
push
mov
mov
jg
sbb
ds
pop
push
pusha
push
pop
mov
push
mov
cmp
pop
push
push
rolb
sbb
cs
lock
lcall
inc
test
dec
mov
ja
and
data16
sbb
stos
ds
bound
repnz
dec
enter
aas
loopne
outsb
jmp
lods
pop
fcomi
pusha
addr16
int
or
xchg
das
cwtl
inc
pushf
mov
sahf
pop
cmp
add
mov
dec
int
pop
push
sbb
clc
imul
add
dec
and
incb
pop
test
mov
jo
pop
lea
pop
addr16
in
push
xor
push
popa
sbb
ficomps
jb
je
xrelease
dec
cmp
stos
mov
lahf
rorb
stos
mov
nop
pcmpeqb
lods
adc
ds
frstor
cmp
mov
mov
mov
mov
dec
out
xchg
jo
pop
inc
mov
pop
loop
arpl
clc
roll
lods
xor
push
or
sub
mov
ret
sub
iret
test
daa
pop
pop
cwtl
int3
stos
push
hlt
cmp
inc
lcall
pop
rol
das
leave
jne
mov
adc
xor
out
das
fs
in
mov
inc
push
dec
in
push
xor
out
inc
xchg
popa
cmp
and
sub
das
test
sbb
jmp
sub
pop
sbb
in
jge
sub
sbb
testb
inc
stos
sahf
stos
jecxz
push
or
jne
mov
in
call
mov
decb
test
cmp
xchg
push
xchg
sub
mov
and
outsl
es
jp
aam
sbb
and
cwtl
cmc
cwtl
sub
xchg
push
das
fwait
outsb
and
dec
ja
inc
icebp
jno
pop
loopne
jmp
jb
ljmp
call
mov
mov
sub
icebp
and
jge
xor
mov
push
scas
pop
inc
and
aad
pop
adc
adc
push
hlt
loopne
mov
cmp
inc
sbbb
mov
sub
inc
xor
mov
cmp
and
repz
outsl
inc
and
dec
aam
adc
cmp
aaa
add
das
mov
in
int
fs
mov
cmp
push
fwait
mov
jp
bound
sub
pop
pop
sub
ja
push
ljmp
push
adc
mov
mov
daa
dec
and
adc
mov
inc
jns
sbb
xchg
data16
pop
sub
inc
int3
mov
clc
idivb
aas
mov
adc
inc
addl
outsb
sub
push
cs
xchg
xchg
push
inc
in
int3
ds
outsb
push
or
push
and
push
and
shr
in
mov
and
dec
adc
mulps
cmp
cli
cmpsb
scas
sbb
lret
jnp
les
movsl
inc
loopne
in
cmp
sbb
daa
add
jnp
xor
ljmp
pop
push
aam
and
test
jp
mov
pop
xchg
sub
addr16
xor
xor
mov
insb
jnp,pn
mov
scas
roll
iret
popf
push
cmp
jae
pushf
mov
mov
imul
and
loopne
cmp
repnz
and
xchg
sub
inc
push
xor
push
addl
insl
and
and
inc
push
inc
movsl
nop
add
test
ds
jp
outsb
dec
or
adc
push
mov
add
and
out
or
dec
mov
sub
mov
adc
ja
lret
jl
mov
cmp
push
cmp
sbb
inc
aas
andl
dec
pop
inc
mov
outsb
pop
xor
pop
jp
mov
ds
insb
arpl
imul
cmovae
mov
pop
jg
xor
out
cwtl
inc
cmpsb
roll
mov
mov
in
xchg
cmpsb
pop
inc
hlt
hlt
ds
and
dec
xchg
jno
mov
in
ficoms
mov
lds
lods
int3
mov
outsl
xlat
ds
xor
andb
and
sbb
sbb
add
xor
cwtl
sahf
sti
cld
lds
mov
mov
push
lahf
hlt
cmp
scas
xor
push
orl
scas
jno
loopne
int3
dec
push
insb
push
lods
pop
repnz
pop
mov
push
mov
jnp
es
jnp
es
ja
jno
push
fisubs
push
lods
mov
push
es
cmp
cmp
and
adc
shlb
inc
push
clc
daa
mov
sub
mov
adc
sti
xor
push
pop
out
call
add
push
jmp
jle
arpl
cs
pop
pop
mov
or
dec
dec
cmp
lods
ljmp
rorb
sub
push
and
mov
pop
ret
push
mov
adc
cmpsb
cli
negl
sarb
mov
mov
inc
dec
cmp
mov
add
lcall
xor
or
cltd
test
mov
sub
xchg
mov
mov
ret
loope
sbb
jle
pop
inc
add
push
mov
fs
mov
loop
ds
testb
and
pusha
sub
or
sbbl
les
and
push
enter
test
push
add
sar
arpl
addr16
jp
lock
aam
pop
fisttps
mov
pop
shrb
mov
adc
mov
pop
jl
test
pop
roll
or
iret
pop
jge
push
xchg
jecxz
aam
and
pop
cmpsb
sub
jg
es
sub
push
movsl
addr16
movsb
jo
rcrb
xor
sbb
xchg
xor
pushf
outsb
and
push
test
pop
scas
int
and
mov
add
or
out
shl
inc
xchg
or
mov
cwtl
add
xchg
lcall
inc
sub
or
inc
push
jno,pt
cwtl
divl
inc
xchg
aam
insb
or
adc
es
sbb
dec
mov
bound
ds
sub
int
xor
mov
add
mov
in
pushfw
fmuls
outsl
in
lods
push
jns
ret
sbb
scas
les
movsb
lock
je
fs
sbb
cltd
scas
jle
xchg
orl
inc
out
stos
cmp
nop
loope,pn
nop
inc
ds
cmp
pop
pop
add
lods
les
je
ja
movsl
cwtl
and
xchg
push
in
in
int3
mov
mov
cmp
cwtl
push
cmp
mov
mov
das
ds
pop
xchg
add
xchg
mov
mov
adc
sub
fidivrs
push
push
mov
jge
movsl
cmp
push
jg
outsl
jle
stos
scas
mov
lods
add
addr16
mov
adcl
xchg
inc
nop
cld
loope
add
cmpb
adcb
jno
dec
sbbb
lret
push
fdivrs
sub
adc
ss
sub
mov
loop
mov
orl
test
fs
push
seto
inc
jbe
or
add
sahf
push
shlb
inc
mov
pop
fldenv
cwtl
push
cmp
rcll
pop
cwtl
xchg
mov
fidivrs
sbb
pushf
aam
ljmp
ds
sbb
imul
xchg
sbb
push
and
pop
pop
add
add
push
push
xorl
and
int3
adc
adc
daa
add
jno
xchg
add
loopne
sub
addr16
out
mov
addr16
mov
sbb
mov
and
and
push
and
push
mov
and
imul
mov
jns
lods
sarb
mov
dec
mov
inc
mov
push
insl
ret
push
data16
popf
and
mov
pop
inc
sahf
icebp
xor
int3
pop
push
mov
xchg
mov
daa
pop
jg
xchg
nop
out
test
sahf
iret
xchg
push
fistpl
pop
push
daa
mov
imul
test
inc
dec
and
rcll
nop
inc
std
mov
push
jle
pop
adc
and
imul
repnz
das
mov
jbe
shlb
mov
and
loop
pop
xchg
inc
push
mov
pop
jecxz
sub
cmp
mov
push
and
shll
mov
aad
out
aam
pusha
or
jmp
addr16
mov
sub
sti
inc
push
pop
mov
xchg
inc
lea
push
pop
mov
sbb
pop
pop
rol
adc
mov
add
jnp
xlat
mov
or
push
and
inc
xchg
test
inc
call
mov
pusha
test
adc
movsb
aam
cmpsb
lock
and
and
mov
pop
jle
and
push
imul
adc
ds
stos
scas
push
das
mov
loop
lcall
lret
or
arpl
and
incl
pusha
inc
push
mov
fwait
inc
xchg
add
mov
inc
stos
xor
jne
xor
jnp
and
pop
lahf
pop
lods
push
rorb
pop
push
jp
pusha
sbbb
pinsrw
and
lcall
arpl
push
jae
mov
arpl
lahf
lea
inc
add
aam
sub
cmpsl
cmp
inc
fstpt
mov
loope
jnp
inc
inc
fwait
or
call
lods
cmpsb
jg
cwtl
je
lock
rcrb
and
dec
mov
fs
sbb
or
mov
addr16
xlat
div
flds
jmp
cli
sub
outsl
fdivrp
aas
or
arpl
pop
lcall
push
das
daa
sbb
lcall
push
push
inc
mov
inc
jmp
mov
add
or
scas
cli
pusha
xchg
addr16
jl
jnp
add
repnz
fsubr
les
push
cwtl
mov
or
addr16
mov
mov
int3
inc
lds
je,pn
lock
popa
sub
and
in
push
or
mov
popf
or
dec
xchg
scas
imul
pushf
aam
sbb
enter
mov
fldcw
sub
in
bound
lods
xlat
jb
inc
sub
les
or
cwtl
cli
xchg
pop
fdivl
sbb
mov
mov
add
pop
jo
mulb
dec
add
push
cmp
das
enter
std
jecxz
push
mov
dec
xchg
out
imul
and
add
mov
xchg
ljmp
jge
and
inc
or
rclb
ret
clc
iret
cmp
and
mov
aam
xor
add
adc
pop
pop
push
xchg
rclb
add
add
cs
cmp
pop
in
and
clc
dec
call
daa
mov
pop
in
shrl
xor
stos
cld
pop
mov
add
sbb
aad
mov
call
movsl
push
mull
outsb
shrb
jle
xor
idivb
xor
sub
inc
adc
idivb
adc
out
fistl
test
leave
hlt
inc
jle
imul
mov
xor
push
and
loopne
sbb
std
push
lock
pop
cmpsb
add
es
out
daa
daa
and
xor
jmp
addl
arpl
cmc
cmp
pop
pop
add
push
shrl
push
in
shr
pop
int3
cwtl
outsb
adc
adc
pop
jg
clc
dec
iret
pop
outsb
fidivs
stos
inc
ror
data16
and
icebp
and
lods
in
push
pop
pop
push
out
adc
aaa
filds
fs
push
lcall
les
mov
pop
or
int
add
adc
xchg
cld
cld
pushf
push
call
sub
and
sahf
and
push
push
nop
cld
mov
cmpsl
das
mov
rcrl
popa
hlt
and
inc
adc
cmp
jns
sti
into
aad
cmpsb
sub
mov
sub
les
sarl
adc
mov
daa
sub
es
rolb
pop
js
idivl
cmp
sbb
cmp
js
xor
aas
or
cmp
fldln2
and
sub
push
pop
mov
loop
or
stos
xchg
mov
pop
pop
push
cli
test
cmp
mov
pop
andl
mov
jb
pop
push
loop
sub
mov
shlb
mov
ror
imul
sub
and
pop
sub
inc
pop
lcall
xchg
dec
dec
out
and
inc
int3
jge
pop
loope
or
sub
pop
or
jmp
cmp
imul
xor
arpl
add
push
pop
push
xor
ret
mov
jg
xchg
cmp
es
bound
into
dec
inc
cmp
dec
push
pop
push
loop
sahf
sbb
sarl
fs
xchg
fwait
mov
mov
cld
pushf
push
jge
hlt
dec
pop
xchg
push
popa
add
xchg
or
pop
push
jns
les
rcrb
int3
inc
push
sbb
in
jbe
pop
cmpsb
cmp
scas
xchg
add
push
scas
mov
stos
push
inc
popa
outsb
and
daa
mov
lock
push
or
cmp
push
cli
das
pop
mov
mov
pop
inc
aad
xor
push
mov
jp
lock
pop
das
dec
xchg
mov
pop
sub
lds
pop
int3
push
sarl
imul
es
arpl
test
dec
dec
jl
mov
sbb
iret
pop
lds
mov
movsl
pusha
rcl
adc
add
pop
ffreep
xchg
inc
out
aam
sub
xor
pop
or
push
cli
mov
jg
mov
dec
add
mov
orb
ja
push
aam
mov
inc
mov
lds
xchg
aam
addb
pop
das
test
call
movb
xor
cs
inc
jmp
ret
sbb
jno
iret
mov
mov
push
push
add
sbb
push
push
push
mov
push
insb
push
push
es
dec
inc
push
jge
adc
test
sbb
jp
dec
or
or
mov
adc
pushf
arpl
add
xchg
adc
bound
icebp
adc
ds
int3
mov
cs
pushf
pop
mov
xchg
loope
pusha
fwait
inc
sbb
push
and
subl
movsb
cltd
xchg
icebp
jbe
outsb
push
mov
jl
xorb
push
add
pop
scas
pop
sub
inc
iret
mov
stos
pop
mov
add
cld
es
xchg
add
push
fisubrs
jbe
jbe
push
cmp
adc
and
or
xlat
movsl
mov
ret
push
roll
xor
sar
sub
adc
ret
adc
push
mov
sub
and
imul
pusha
dec
rcrb
fdivrl
xchg
es
push
mov
pop
int3
pop
inc
sbb
or
cmp
sub
arpl
data16
mov
pop
jp
out
pop
sub
mov
xchg
and
xchg
cmp
xchg
outsb
push
cmp
or
sub
int
mov
fs
push
lods
or
jge
add
addl
outsb
add
popf
dec
cmc
add
fwait
inc
bound
cltd
inc
pop
cld
jl
dec
pop
jg
imul
sbb
push
out
fdivrs
push
loop
hlt
ds
dec
add
shlb
jns
mov
adc
pop
inc
cld
mov
shr
inc
mov
inc
jae
add
push
add
pop
and
sahf
adc
sbb
or
int
cmp
mov
cmp
inc
xor
repz
es
int
cmp
adc
das
mov
xchg
pop
pushf
aam
xchg
jl
int3
leave
fldl
push
sub
mov
mov
ja
add
addr16
mov
pop
and
jle
inc
and
inc
xchg
int
inc
pop
icebp
mov
sbb
in
push
sbb
out
sti
int3
mov
pushf
je
dec
pop
pop
cmc
rcll
pop
push
lock
add
es
imul
jbe
stos
jns
mov
inc
mov
inc
repz
push
inc
mov
push
mov
insl
ja
push
dec
push
inc
data16
pop
idivb
add
loopne
xchg
jp
das
cs
es
int
imul
inc
pop
mov
mov
adc
and
pop
jle
shrb
push
bound
dec
js
scas
idivb
mov
rcrb
pop
nop
inc
push
mov
pop
dec
in
mov
por
sbb
arpl
mov
aam
jbe
xchg
adc
mov
xchg
arpl
shrb
fwait
mov
mov
mov
add
and
pop
sub
lods
and
sub
add
in
ds
add
jae
xor
sub
fs
pop
xor
mov
hlt
test
pusha
sbbb
sbb
lock
push
pusha
push
shrl
pusha
fsubrs
mov
in
mov
cmp
inc
dec
mov
mov
aas
jno
jns
popf
xor
arpl
xchg
jnp
mov
es
jbe
inc
gs
pop
test
inc
js
roll
mov
scas
jg
shrl
push
jle
pop
mov
mov
dec
pop
movsl
and
dec
iret
flds
es
cmpsb
inc
daa
mov
fdivs
inc
xor
jp
pop
ret
popa
ds
dec
add
daa
and
push
es
mov
push
pop
pop
leave
push
or
es
mov
lcall
aam
mov
stos
repnz
movsl
fbld
sub
enter
sub
out
mov
mov
dec
in
sti
dec
shll
dec
js
adcl
cmc
sub
mov
mov
sbb
jle
inc
dec
push
clc
es
outsb
and
jg
bound
pusha
cmp
ja
inc
movsl
jl
xchg
dec
dec
mov
stc
xchg
and
es
pop
sbb
cmp
push
icebp
fdivrs
cwtl
aam
inc
sub
pop
fdivl
popa
add
add
int3
fisubs
push
xor
dec
inc
fwait
jns
imul
int3
out
push
es
aam
jns
sbb
xchg
icebp
out
mov
bound
xor
and
lds
in
pop
jae
add
aaa
test
add
lds
imul
jbe
jnp
jne
cmp
jnp
outsl
jae
sub
pop
sbb
adc
dec
add
dec
jbe
pop
cmp
cmp
push
dec
pushf
inc
or
and
out
mov
rcrl
mov
pop
push
adc
imul
inc
sub
sbb
and
dec
dec
adc
gs
adc
aaa
sbb
js
insb
and
add
xorl
adc
outsb
push
out
iret
icebp
out
popa
int
sbb
call
out
mov
dec
xchg
scas
fldenv
ja
ss
push
push
xchg
insl
sbb
lods
rol
dec
outsl
loope
and
clc
mov
sub
stos
cld
xchg
jp
cmp
add
outsl
inc
data16
jnp
mov
jbe
pusha
and
inc
out
outsb
notb
add
shlb
cmp
aad
or
into
sbb
pop
inc
push
stos
add
pop
in
mov
repnz
xchg
pop
adcl
cmp
cli
jle
cmp
inc
mov
jnp
div
add
das
lret
pop
addb
repz
cld
std
jge
cmp
imul
movsl
in
fdivs
loope
or
dec
mov
mov
cmp
fnstenv
sbb
sub
fisubl
test
negl
repnz
jno
push
cs
mov
and
sbb
loopne
mov
jo
jl
add
stos
bound
out
jge
cmc
imul
xchg
popf
cmp
push
insb
lods
add
shll
gs
dec
inc
dec
jl
sbb
popl
cmp
and
lahf
jno
xor
aam
rcll
insl
cmpsb
popf
cmp
imulb
mov
jno
jb
pusha
int3
jb
jl
sbb
shl
jp
in
pushf
inc
outsl
hlt
jge
jle
cmpsb
popa
das
ret
jg
jb
sbb
mov
jns,pn
out
sub
daa
call
mov
lds
adc
mulb
xchg
loopne
les
sbb
movsb
adc
sub
nop
jp
lods
lds
pop
xor
outsb
sbb
andl
movsl
xchg
xchg
push
mov
into
pop
jo
stos
fcoms
cmp
in
ja
fs
sahf
xor
pushf
popa
mov
mov
and
and
cmp
dec
fwait
outsb
cld
iret
sbb
dec
jbe
mov
sub
push
mov
mov
andb
push
lahf
insl
ljmp
loopne
xchg
xor
in
mov
mov
jae
mov
loopne
add
dec
dec
aaa
adc
adc
or
pop
pusha
in
mov
add
ja
sarb
dec
stos
jno
imul
pop
mov
pop
pop
aad
sbb
mov
pop
inc
and
jnp
push
lock
loope
jbe
out
adc
pop
cmp
add
testb
jo
adc
sub
inc
pop
sahf
inc
gs
arpl
gs
lea
iret
cmp
push
push
insb
dec
lret
pop
addl
scas
lock
jle
lcall
push
inc
push
mov
add
add
xor
or
jmp
push
fdiv
out
adc
inc
add
add
dec
stos
cmpsb
lahf
mov
mov
ret
loop
js
lea
pop
xlat
ds
mov
mov
mov
js
test
stos
xor
push
inc
sbb
cmp
divb
add
outsw
mov
jbe
fisttps
inc
mov
sbb
xchg
jno
aas
int3
mov
push
mov
fwait
imul
dec
lea
outsl
push
jno
in
test
sbb
jl
addr16
fistps
gs
scas
push
inc
sbb
push
fimuls
std
or
push
loope
adc
jb
fwait
stc
test
mov
mov
js
dec
adc
pop
xchg
or
stos
arpl
hlt
pop
pop
test
fcoms
mov
or
dec
leave
sti
insb
das
or
cmp
mov
ds
push
or
mov
inc
adc
pusha
bound
mov
add
or
fwait
cltd
sub
and
out
jp
es
repz
xor
lods
xchg
negl
add
mov
adc
cmc
push
mov
push
push
pop
in
ret
jge
out
cmc
scas
mov
in
rcrl
xchg
inc
sub
jns
add
cltd
push
add
mov
repnz
test
sub
lea
adc
std
pop
push
dec
mov
jle
xchg
jnp
incb
jmp
xchg
repnz
jne
adc
and
out
jg
sahf
fcmovbe
sbb
jbe
nop
popl
xchg
mov
testl
push
repz
sbb
sti
cmpsb
bound
jge
lods
out
mov
and
xchg
adc
sbb
cli
popa
lds
shlb
mov
sahf
fwait
fs
jb
jge
or
xchg
and
add
sbb
insl
mov
es
push
jnp
test
mov
pop
rcll
stos
addr16
adc
push
push
and
push
enter
ret
dec
lods
cmp
addr16
xchg
jae
jl
popa
mov
mov
nop
pop
sti
jg
out
push
and
inc
sub
sbb
jne
jo
xchg
incl
push
jne,pn
lock
out
dec
pop
push
arpl
push
and
pop
inc
ret
push
cs
cpuid
lock
sbb
xchg
jle
jle
xchg
cmp
out
jle
cli
cld
cs
hlt
jecxz
repz
xlat
test
daa
mov
and
adc
fsts
pop
outsl
sub
js
pop
push
movsb
inc
rorb
mov
test
loop
inc
jecxz
pop
dec
ljmp
stos
and
arpl
fcmovnbe
mov
or
inc
jbe
out
xchg
movswl
es
subb
sbb
xchg
movb
push
sub
and
mov
andb
fs
adc
daa
fldt
cltd
push
mov
jle
stc
add
cmpsb
mov
mov
jl
outsl
cld
cld
inc
adc
or
icebp
nop
xchg
sarb
push
xchg
mov
push
add
test
adc
cmpl
jle
inc
or
ljmp
and
cmp
xchg
push
sbb
jnp,pn
pop
addr16
mov
lret
cmp
enter
dec
push
cmp
out
in
jl
sti
dec
and
or
push
push
cltd
insl
lcall
or
inc
ds
cld
dec
call
fwait
outsl
mov
lods
jle
js
das
repz
and
mov
sub
stc
lret
ror
sbb
jg
sub
xor
icebp
rcll
pop
out
cmp
pop
dec
test
add
fmuls
sti
imul
jns
setle
stos
std
xchg
push
popa
sub
mov
sbbl
mov
pop
in
clc
pop
pop
lret
es
jmp
fistps
outsb
push
push
push
cmp
pop
cmc
movsb
mov
rcl
pop
add
out
out
xchg
pusha
cld
ja
mov
in
sub
cmc
inc
out
enter
es
push
cmovp
mov
mov
inc
lods
sub
pop
xchg
pusha
sarb
pop
fstps
pop
lahf
adc
jmp
leave
shrl
pop
inc
mov
xchg
cmp
rcl
sbb
jge
add
dec
or
lret
outsl
mov
and
mov
out
push
or
jecxz
push
fcomps
cs
outsl
mov
filds
xchg
out
fs
scas
jno
mov
hlt
xchg
bound
nop
iret
pop
sub
jo
jbe
loop
fdivr
sub
jo
ds
ret
sarb
jae
jle
pop
sbb
cmp
inc
mov
mov
dec
push
mov
dec
inc
adc
imul
inc
dec
inc
mov
into
mov
fcmovu
jne
jp
movsl
ds
push
ja
xchg
xchg
sahf
rcrb
inc
scas
fs
inc
mov
sub
pop
lods
inc
push
fwait
outsb
bound
push
popa
and
jb
sbb
ljmp
lods
pop
mov
mov
add
lods
inc
shll
loop
add
add
sub
jbe
fdivrl
test
mov
mov
xchg
lea
inc
ljmp
lods
jg
xchg
push
int3
xchg
inc
sub
add
enter
xor
jg
push
mov
or
inc
push
and
mov
cmp
xlat
xchg
sub
sbb
xchg
mov
loope
rcr
mov
test
xchg
push
mov
bound
or
pop
movsl
mov
and
je
sbb
push
sub
push
adc
mov
cld
jecxz
movsl
pop
shl
adc
sbb
pop
imul
add
sub
clc
push
xchg
mov
nop
test
mov
xchg
mov
jnp
push
out
sarl
push
in
outsb
cmpsb
mov
jecxz
clc
sbb
mov
ficompl
test
fisttps
xchg
scas
ljmp
cmp
cmpsb
aaa
aam
mov
dec
or
mov
inc
xchg
push
sub
inc
jle
and
inc
inc
cs
aaa
scas
inc
or
dec
sub
or
insl
mov
mov
ret
pop
clc
bound
mov
and
loop
es
and
inc
data16
in
cmpsl
add
repz
bound
inc
cmp
popa
or
xor
xchg
or
adc
push
fists
mov
xor
add
mov
sbbb
cmpsb
movsl
lods
fcomps
dec
push
arpl
jmp
fadd
sbb
lahf
loop
inc
push
stc
lcall
insl
jmp
outsb
pop
lods
ljmp
dec
imul
mov
jecxz
push
add
push
cwtl
adc
daa
fincstp
jns
jle
and
daa
out
lock
mov
push
out
xor
xchg
test
rorl
shl
mov
cs
and
fadd
xor
repnz
adc
addr16
aam
pusha
cmp
ja
lods
ret
pushf
fiadds
ja
imul
fbld
cs
mov
or
push
gs
sahf
add
mov
in
and
outsl
pusha
push
daa
fs
aas
jns
shll
imull
cmc
xchg
popa
sbb
pop
pop
sbb
bound
push
or
ss
jae
pop
sub
mov
cmc
xchg
and
ret
mov
aaa
clc
imul
enter
mov
adc
sbbl
adc
lods
mov
mov
mov
and
add
push
push
scas
xchg
xor
pop
gs
leave
pop
sbb
insl
and
add
jp
ficoms
pushaw
aam
scas
insl
rcrl
repnz
sub
das
sbb
push
and
mov
push
lods
or
jbe
cmp
xchg
bound
les
pop
int3
outsb
xchg
stos
out
out
iret
sbb
pop
jle
push
divb
ljmp
dec
imul
xchg
jp
scas
cmpsl
pmaxub
in
pop
sbb
cmp
sbb
mov
mov
inc
add
loop
sub
xor
mov
jb
add
inc
push
pushf
jl
and
mov
pop
push
jecxz
inc
push
addb
rcrb
enter
pop
scas
sahf
or
rolb
dec
into
push
cltd
cmp
mov
mov
dec
insb
pop
sbb
fnstcw
insl
iret
cwtl
dec
and
xchg
dec
pop
data16
js
outsl
mov
sbb
xchg
add
and
stos
lahf
push
sub
js
stos
mov
push
gs
lea
cmp
add
sti
lcall
xor
xchg
sbb
andl
jne
out
pop
jno
mov
sarb
jle
push
aaa
lahf
push
outsb
bound
movsl
fildll
push
dec
aaa
mov
cld
in
pop
cmp
aad
or
xchg
and
mov
add
or
lea
mov
dec
insb
xchg
jg,pn
xor
and
adc
popa
fdivp
outsb
sbb
xchg
bound
es
sbb
sahf
pop
mov
sub
adcb
lret
jne
and
fisubs
push
pop
adc
mov
jmp
mov
push
mov
xlat
mov
dec
sub
data16
ret
cmp
cmpl
mov
int3
push
jns
andb
add
ss
sbb
sbb
das
pop
ss
adc
xchg
inc
insl
mov
pop
xchg
cmp
inc
es
scas
fcoms
in
mov
cmpsl
pop
cmp
shll
sti
push
mov
into
and
pop
lret
mov
inc
mov
fnstenv
inc
stc
cmp
pop
cmp
xchg
pop
scas
cmpsb
xchg
in
lcall
inc
and
mov
pushf
leave
mov
push
and
adc
repnz
lret
and
pop
repz
pop
popa
adc
push
cmp
fwait
jp
mov
sub
xchg
addb
mov
inc
call
pop
xchg
cmp
out
movsb
cmp
leave
shrl
insl
ja
ret
outsb
or
xchg
mov
inc
jo
cwtl
jne
ss
popf
push
out
sub
jmp
mov
imul
aad
lock
mov
ljmp
xchg
sub
mov
enter
pusha
inc
aad
mov
xchg
cs
into
push
mov
das
popf
loopne
cmpsb
sub
mov
xor
push
xchg
hlt
mov
cmpsl
loopne
jae
dec
ja
data16
add
arpl
js
dec
scas
dec
fdivrl
xchg
and
sbb
and
mov
mov
or
repnz
dec
insl
sbb
scas
negl
scas
add
sbb
into
inc
jmp
jge
test
aad
xlat
decl
sbb
mov
sub
int
js,pn
cmpsl
and
sub
pop
pop
sbb
push
rorb
mov
push
xor
hlt
nop
in
sbb
rcrb
and
subl
std
add
dec
fs
sbb
mov
xchg
lret
fstpl
and
mul
mov
dec
hlt
xchg
aaa
cmp
sbb
les
cmpsb
sbb
jmp
in
es
and
dec
or
out
mov
dec
inc
fdivrl
mov
int3
imul
jb
push
fs
int3
push
aas
inc
arpl
and
mov
imul
pop
push
mov
add
shlb
jns
push
cwtl
or
fs
pusha
fcompl
add
cli
cs
push
pop
add
test
aam
insl
outsl
adc
psubsb
fsubl
push
push
aaa
sbb
xchg
adc
sub
lea
push
mov
mov
sub
jp
out
xchg
push
into
mov
jbe
sbb
push
mov
ds
outsb
stos
dec
and
loopne
fists
cmc
xor
cmp
data16
pop
pop
inc
cmc
push
mov
inc
xchg
pop
cmpsl
adc
imul
mov
stc
leave
and
popf
pusha
aas
or
rclb
mov
jnp
push
cwtl
in
movsl
fildll
jecxz
enter
xchg
add
push
sub
cmp
xor
add
test
jbe
lods
loopne
cmpsb
cmp
push
adc
xchg
std
std
sbb
dec
mov
in
inc
mov
push
sbb
xor
movsb
jno
adc
aam
mov
insl
in
js
rclb
adc
inc
fsubr
mov
push
addr16
mov
ret
rclb
rol
push
cmp
dec
xor
xchg
or
pop
pop
test
in
push
aad
mov
mov
cmpsl
cmc
repz
add
dec
add
loope
cmpl
scas
sbb
fs
jns
inc
addl
xchg
out
push
sbb
loope
jp
sub
gs
cs
mov
lret
mov
cmpb
xor
adc
adc
mov
cmc
jge
inc
or
stos
push
push
mov
lahf
lock
and
xchg
xor
das
aas
adc
xchg
sahf
jecxz
inc
hlt
dec
sbb
xorl
mov
pop
loope
test
xor
ficoms
stos
test
jp
test
lahf
adc
filds
xchg
dec
push
jg
xchg
and
ret
ja
pop
mov
call
call
pop
outsl
jbe
pop
loopne
adc
das
or
out
lcall
pop
fwait
xor
es
movsb
cli
xchg
int3
xchg
mov
sbb
insl
sub
mov
mov
nop
jne
imul
outsb
cmp
sbb
fndisi(8087
test
mov
push
xor
jo
pop
loop
hlt
add
out
rolb
adc
sub
mov
jle
jns
popa
mov
movsb
shll
lods
lods
jnp
or
mov
dec
js
dec
pop
pop
mov
add
xchg
bound
inc
push
inc
loopne
cmp
test
inc
push
adc
mov
jns
repnz
jmp
rcr
dec
into
cltd
stos
leave
dec
js
sbb
loop
xchg
pop
jnp
sbb
insl
dec
cmp
mov
mov
pop
xor
std
pop
hlt
cmp
mov
flds
lcall
dec
imul
testb
icebp
lcall
push
mov
lret
push
fcompl
int3
fldenv
adc
push
shrl
out
stc
lret
filds
push
js
cltd
mov
push
pop
mov
dec
aam
push
or
cmpsl
mov
out
cwtl
or
jno
fwait
cmp
and
jne
popf
hlt
shlb
fldcw
mov
pop
sti
sub
shlb
or
and
pop
inc
xchg
add
push
movsb
fadd
mov
inc
push
push
jno
inc
fst
mov
ss
aam
push
fistpll
andb
jecxz
cld
call
add
lods
adc
xor
mov
inc
jns
stc
xor
loop
add
pop
repnz
scas
icebp
inc
mov
inc
xchg
mov
mov
pop
shlb
and
pop
pop
lret
fmulp
mov
inc
les
xchg
fstpt
in
cmc
imul
lret
add
in
pushf
insb
jbe
popa
in
sbb
shlb
ss
leave
repnz
add
das
mov
jns
dec
fcoml
mov
mov
pop
xor
push
outsb
add
sti
mov
fs
int
aad
sahf
pushf
xorb
ss
sbb
pop
add
cmp
aaa
push
adc
mov
or
pusha
xor
pop
fs
cltd
inc
js
dec
xor
cmp
mov
repnz
jnp
in
dec
or
dec
fs
jp
bound
cmpsl
jbe
jb
push
mov
inc
gs
or
or
cld
adc
inc
push
lock
sbb
xor
and
bound
sub
enter
fs
aaa
and
cs
jmp
pshufw
insb
xchg
add
mov
call
stc
shrb
jb
pop
dec
pop
shlb
jle
add
fsubr
lods
mov
movsl
xlat
push
cmp
loope
cwtl
ds
loopne
addb
sub
lds
mov
sub
out
xor
cmc
pop
inc
mov
xchg
mov
inc
xchg
pop
push
and
xor
mov
push
dec
inc
test
les
pop
push
imul
jge
cmp
push
sub
xor
cmc
stos
cli
ret
mov
test
adc
in
lret
imul
rcll
clc
bound
add
push
mov
inc
xchg
cmp
pop
loopne
call
and
jmp
ficoml
ljmp
push
sti
test
imul
and
iret
xchg
adc
sbb
jecxz
mov
xor
mov
pop
bnd
stos
xor
inc
mov
into
cmpsl
xor
add
lds
fsubrs
jae,pt
xor
pop
test
cmp
mov
add
push
cmp
movsb
fdivl
mov
push
mov
mov
fdivs
movl
loopne
stc
jne
ret
sbb
or
inc
inc
xor
mov
add
movsb
subb
sbb
jae
mov
data16
mov
inc
sbb
xchg
add
and
scas
cltd
jmp
sbb
jmp
sbb
cwtl
adc
cmp
negl
pop
ja
cli
or
aas
adc
add
aad
pop
bnd
leave
pop
loop
pop
mov
dec
xchg
arpl
jns
insb
mov
bound
mov
dec
sahf
std
fs
jle
cmp
push
jo
push
cmpsl
jns
pusha
sub
sti
mov
sbb
jecxz
addb
pop
xorl
inc
out
sti
in
into
lea
push
rcll
or
jge
adcb
jo
int3
adc
repnz
imul
lods
xchg
jl
mov
sbb
pop
add
cmc
sbb
insl
stos
jp
sar
out
imul
sahf
dec
xchg
mov
mov
inc
aas
pop
and
xor
call
dec
out
lahf
cwtl
or
in
inc
xor
lret
test
sub
les
or
sbb
out
dec
pushf
inc
sarl
lds
in
pop
mov
add
fidivs
fbld
js
xchg
cmp
xor
fnstenv
jl
sbb
js
or
ss
mov
shlb
aad
aam
popa
es
push
dec
stos
lods
call
hlt
xor
adc
jnp
in
ljmp
ja
jg
inc
xchg
ss
data16
jb
and
jle
dec
int3
insl
rsm
pop
clc
int
in
pop
fstl
in
scas
movb
mov
mov
sub
lock
aam
mov
xor
lds
xor
nop
adc
cli
add
aaa
int3
mov
cli
filds
xchg
cwtl
xchg
push
out
nop
pop
dec
mov
sbb
push
arpl
aam
push
gs
clc
popf
push
or
xchg
ret
adc
shlb
or
adc
cwtl
mov
xor
ja
sbb
xchg
test
push
and
mov
sahf
sub
adcl
inc
xor
xchg
sbb
lock
inc
hlt
movsb
sub
push
ljmp
ficompl
imul
jnp
clc
mov
dec
inc
xor
lahf
imul
ss
push
and
lds
fdivl
inc
js
mov
cmpsb
mov
cmpl
mov
pop
je
xchg
in
mov
outsb
cmp
sbb
addr16
rclb
pop
hlt
in
shll
mov
inc
aas
rcll
dec
dec
cld
xchg
inc
lods
xorb
js
jno
adc
add
add
and
les
xchg
loope
fisubrl
cld
cld
stos
cs
mov
repnz
hlt
mov
mov
or
mov
xor
test
js
fsin
stos
lret
mov
mov
mov
fcmovu
xlat
and
pop
out
xor
ds
adc
stos
fcmove
sub
into
test
or
push
xor
cmpsl
xchg
mov
and
sbb
aas
jle
mov
push
dec
repz
test
mov
xchg
sub
sub
jge
ror
jmp
gs
and
mov
xchg
fdivl
cmp
hlt
xor
lret
jecxz
scas
fimull
jo
ljmp
push
jge
cld
xor
adc
pop
test
pop
jbe
xlat
push
dec
std
or
mov
xor
xor
mov
inc
loopne
mov
fidivs
call
jg
or
push
jmp
pop
lods
out
xor
adc
or
inc
jnp
lds
enter
jb
cmp
idivb
dec
add
xor
fs
cmp
pop
sub
and
inc
out
shrb
cmp
rorb
jmp
xor
repnz
sub
cmpsb
push
push
pop
dec
je
out
push
and
dec
push
mov
mov
push
xor
mov
jl
shll
rorl
fildl
dec
repnz
xchg
jg
add
add
jno
pop
fsts
sbb
cmp
out
ret
jbe
jle
dec
sub
fdiv
mov
jne
inc
and
cmpsl
push
call
mov
xor
dec
sub
pop
mov
push
push
and
je
sub
test
mov
stc
push
pusha
aad
add
and
cmp
rcr
inc
fcmovbe
dec
xchg
xor
lds
sbbb
lret
movnti
mov
mov
movb
enter
push
pushw
xor
add
cmp
xchg
pop
repz
jecxz
sti
pop
stos
idiv
sar
faddp
shl
aam
movsl
lahf
xlat
inc
dec
shl
mov
stos
xlat
mov
cmpsl
adc
or
xlat
inc
jle
ljmp
sbb
add
cmp
adc
jmp
fs
lret
faddl
xchg
pop
fidivs
cwtl
inc
mov
dec
loopne
mov
mov
xor
add
fisubs
mov
cmp
sbb
fs
call
inc
loop
jns
mov
orb
inc
adc
cmpsl
mov
das
push
jno
cli
daa
xor
push
sub
pop
sub
push
scas
push
stc
rcl
out
xchg
int
push
repnz
push
and
inc
aaa
mov
aad
cmp
dec
cmpl
inc
out
stos
cmp
lock
add
inc
adc
mov
jae
fsubrs
pop
lahf
xchg
rolb
pop
inc
sub
fisubs
push
or
popaw
xchg
mov
xor
jg
pop
out
sbb
push
nop
stc
add
ficompl
jmp
mov
inc
lods
sub
das
repnz
addr16
mov
add
add
lods
cmp
lret
pop
cld
add
imul
roll
jp
inc
pop
jo
inc
mov
test
mov
sar
inc
popa
arpl
or
pop
cmp
cmp
inc
dec
inc
stos
clc
mov
xchg
push
or
or
fwait
pop
jns
call
push
push
dec
sbb
xor
clc
cmpsb
or
xor
cmpsb
jg
and
ret
xor
lret
das
mov
mov
push
jae
outsl
inc
enter
mov
pop
mov
outsb
pop
bound
sbb
push
es
and
mov
movsb
add
pop
cltd
or
cs
std
nop
lcall
sub
add
inc
test
and
call
sbb
arpl
sarb
mov
pop
imul
das
movsl
cmp
xchg
jge,pn
cmc
jle
adc
sti
adc
mov
cli
adc
loop
aaa
iret
mov
shlb
and
lds
inc
xchg
jb
je
mov
sbb
int
dec
pop
xor
out
into
mov
inc
sbb
js
sti
popaw
lock
xchg
sarb
inc
mov
jmp
fbld
pushf
mov
pop
aaa
cmp
and
and
mov
mov
xor
insl
jp
out
cmp
and
es
ret
cmp
mov
clc
mov
ds
fmull
mov
insl
push
sahf
ds
fcoml
out
idivl
jnp
shr
insb
mov
sub
lods
and
cmp
bound
mov
mov
mov
fstl
rcrb
je
arpl
mov
roll
fsincos
adc
jp
push
bound
mov
test
pop
iret
mov
imul
in
cwtl
or
add
cwtl
aas
pop
fdivl
jbe
leave
inc
dec
cwtl
loopne
or
pushf
sbb
insl
bound
dec
xor
or
cs
insl
nop
in
dec
push
pop
ficoms
and
and
push
pop
cmp
nop
jg
fidivl
xor
enter
dec
ds
into
shll
pop
ds
adc
int
pop
mov
out
jecxz
mov
adc
fbstp
jne
je
jae
xchg
mov
inc
sub
inc
or
sub
xor
data16
sub
or
jge
xor
mov
mov
pusha
mov
insb
mov
push
sub
mov
and
pop
daa
dec
push
and
ss
inc
aas
inc
stos
dec
pop
dec
cmpsb
add
add
or
negl
fnstenv
xor
inc
and
push
test
jo
cmp
and
inc
dec
pop
mov
popa
dec
push
data16
rol
jne
clc
enter
cld
fildl
in
jmp
ror
or
mov
inc
mov
sbb
inc
push
repz
leave
mov
roll
adc
cmp
jp
incl
jb
xor
test
jne
aaa
ds
sbb
add
pop
shll
bound
pop
lods
cwtl
push
inc
add
scas
pop
sbb
das
popf
ds
mov
adc
push
cmc
mov
dec
cltd
dec
lret
movsb
test
shlb
test
int3
punpckhbw
imul
stos
lock
iret
dec
mov
shlb
pop
test
fwait
mov
dec
lods
fistps
push
jge
jbe
mov
test
out
push
jb
xchg
inc
jle
xor
jnp
dec
or
lcall
inc
lret
inc
ret
outsb
adc
push
sti
cmp
shlb
xchg
or
mov
ret
lahf
pop
pop
enter
ljmp
mov
ss
scas
out
into
push
imul
hlt
pop
data16
xor
push
mov
fwait
ret
push
add
push
pop
ljmp
mov
mov
add
dec
inc
ss
adc
pusha
aaa
aas
add
adc
xchg
inc
int3
sarb
cmp
or
repnz
addr16
adc
xor
sbb
ficoms
daa
cmc
popf
sbb
lea
mov
das
or
adc
and
adc
adc
add
xchg
into
sbb
mov
icebp
push
mov
push
and
inc
int
clc
dec
ss
js
lods
and
in
and
insb
fwait
lea
push
jge
cld
adc
jp
out
es
sub
adc
es
mov
mov
test
je
imul
push
sbb
hlt
mov
sarb
inc
push
xor
jne
push
sub
je
ss
fildll
shll
push
data16
mov
ret
pop
mov
mov
sub
out
ljmp
shll
xor
xor
adc
push
dec
aaa
mov
leave
ret
dec
sbb
cmp
push
js
stos
jmp
and
ss
ret
std
xor
rcl
aad
add
dec
mov
inc
dec
dec
fnstsw
mov
sbb
xchg
sub
das
addl
adc
sub
lret
in
int
add
aaa
push
movsl
in
inc
ja
ds
pop
cmp
out
mov
sbb
jno
stos
ret
and
xor
stos
das
cld
mov
pop
scas
leave
add
imul
mov
dec
push
fs
mov
aaa
cwtl
cltd
out
xchg
leave
ds
pop
pop
mov
push
sub
cmc
sbb
xchg
iret
bt
push
outsb
aas
dec
fimull
sbb
and
bound
iret
jle
scas
xchg
call
cmp
push
jp
insb
add
xor
dec
ds
mov
inc
jb
cmp
ds
scas
cmp
imul
gs
mov
imul
frstor
orl
xchg
inc
sahf
pop
mov
dec
jns
and
ret
sbb
and
mov
mov
outsb
jo
push
pop
mov
cmp
cmp
and
jg
setl
out
in
push
mov
ficompl
adc
sbb
or
sub
push
sbb
mov
mov
movsl
mov
push
inc
sbb
xor
push
data16
repnz
ss
or
in
jle
sbb
or
xor
dec
push
adc
sbb
xchg
push
cmp
mov
push
push
fdivr
or
push
int3
cmp
ja
push
mov
dec
das
cmpsl
enter
insb
and
fnsave
in
mov
add
xchg
push
mov
cmp
movsb
adc
into
pop
xchg
mov
shr
lods
nop
pop
jl
xchg
rclb
pop
aad
and
jne
js
dec
cmp
lea
sbb
addb
rolb
mov
pop
movsl
je
js
test
adc
jge
pop
xchg
fs
or
in
data16
mov
cmp
or
mov
add
dec
addr16
or
iret
push
cld
add
mov
sub
mov
shr
les
jb
pop
jge
cld
adc
push
xchg
and
js
or
imul
push
mov
push
jge
popf
into
dec
mov
xorl
cld
adc
dec
xchg
daa
add
jp
div
sti
insl
cld
jb
int3
jo
jae
sarl
jnp
fdiv
add
jle
iret
jno
jno
jns
adc
adc
adc
sbbb
roll
bound
xchg
fcomps
sbb
jp
xor
pushw
repnz
pop
pop
into
jge
mov
repnz
jae
inc
test
cs
mov
imul
je
in
cltd
push
add
push
pop
and
data16
cmp
dec
cmp
sub
iret
xorb
xchg
dec
imul
js
push
aam
push
pop
jae
sbb
fucomip
ficomps
and
popf
into
xchg
adc
and
mov
cltd
jmp
scas
adc
es
fwait
mov
call
adc
nop
mov
ret
gs
xchg
inc
sbb
lods
aad
push
cli
pop
cmp
sub
xor
dec
adcb
jle
or
inc
dec
inc
out
pop
or
push
jno
add
in
cmc
daa
dec
popa
jno
js
leave
add
icebp
inc
jns
stos
push
mov
sbb
dec
out
movsb
out
xor
outsb
mov
cmpsb
outsl
loop
or
fldenv
mov
cltd
cmp
arpl
aaa
add
fstpl
push
jle
push
jnp
adc
xor
xchg
iret
or
fwait
xchg
sub
and
insl
jbe
enter
push
pop
jo
jb
insb
xor
push
lcall
and
enter
int
lret
fs
mov
bnd
xchg
xor
mov
jg
mov
insb
lods
mov
push
insl
xor
mov
jnp
or
and
ja
je
dec
cli
push
cmpsl
jle
loopne
inc
xor
mov
pop
subb
fcoml
mov
roll
push
ret
sub
mov
cli
loope
cmp
ja
sbb
push
out
add
jp
xchg
jmp
mov
fcomps
xor
sti
sti
pop
lods
cld
cmp
cmp
add
lret
push
leave
or
cwtl
xor
sbb
fwait
pop
pushf
jle
mov
add
mull
adc
movsb
int
mov
je
mov
mov
js
outsl
popf
insl
and
repnz
push
mov
ds
mov
cs
push
jle
cld
sub
out
add
lahf
inc
inc
dec
movsb
mov
add
mov
js
rclb
pop
insb
ja
jl
dec
mov
lahf
or
jne
push
scas
pop
push
adc
adc
insb
lahf
pop
fiaddl
out
cmc
shlb
mov
ds
mov
add
cmp
xchg
push
push
add
lret
adc
cmp
into
addr16
mov
cmp
push
lahf
cmp
jl
mov
cmp
jmp
and
jle
jmp
and
mov
jle
out
inc
clc
xchg
jae
pusha
das
enter
pop
push
jp
test
adc
pop
adc
clc
and
xchg
int
enter
jo
mov
jl
outsb
xchg
cli
sbbb
repnz
jne
cmp
dec
mov
lods
adc
negl
popa
outsl
orb
fisttps
inc
iret
sbb
mov
mov
cmpps
test
arpl
clc
pop
and
and
mov
dec
or
xchg
jb
xchg
mov
cwtl
sbb
xor
cld
cmpsl
cli
imul
add
push
jmp
je
pop
in
mov
jno
push
inc
pop
mov
xchg
sub
mov
push
pop
aas
jne
push
imul
mov
pmullw
adc
jne
dec
lahf
insl
and
xor
sbb
fwait
pop
je
test
fisubrs
cltd
shrl
inc
fs
addl
adc
add
lock
mov
movb
inc
mov
and
push
jp
repnz
jo
das
pop
inc
mov
lock
xchg
enter
lods
ss
scas
pop
xor
or
mov
lods
mov
and
jo
push
jb
imul
cli
bound
jp
push
xchg
mov
mov
jns
mov
out
lods
test
es
bound
cmpsl
pop
imul
sbb
mov
mov
xchg
and
enter
js
out
lods
pop
sbbb
mov
pop
jo
cmp
test
jo
dec
dec
frstor
ja
jbe
dec
incl
sub
negb
mov
dec
pmulhuw
cmp
sbb
aaa
inc
xor
rolb
dec
jno
xor
stos
dec
cmp
xor
jne
push
xor
repnz
insl
cltd
popa
or
xor
mov
xor
add
xor
lret
add
shrl
dec
inc
jne
jg
dec
xor
aad
mov
push
xor
fwait
inc
add
cmpsb
dec
cld
fiadds
test
and
sub
leave
add
mov
add
dec
enter
rorb
jo
inc
int3
push
fisttps
in
ss
xor
xchg
ss
fcoms
adc
fdivs
cmp
push
popa
jg
mov
add
xor
inc
adc
popl
inc
shl
push
dec
cmpsl
dec
pop
in
stc
xor
inc
ss
cmc
jne
mov
push
lea
cmp
cltd
sbb
and
pop
adc
adc
test
imul
xchg
xor
aaa
es
fs
jbe
jmp
jg
mov
jecxz
mov
aad
pop
pop
add
aad
inc
fs
sbb
sbb
inc
fs
fldl2e
xchg
xor
xchg
xchg
xor
inc
jne
adc
scas
fisubs
loop
cmp
aaa
cwtl
test
adc
lahf
and
pusha
sub
dec
lcall
cmp
ret
pop
xchg
cmp
aaa
xchg
clc
inc
pop
xlat
pusha
in
aaa
xchg
cmp
pop
xlat
cmpsl
dec
add
cmp
mov
dec
cmp
push
or
add
repnz
sbb
test
fwait
inc
pushf
jp
cmp
push
jns
pusha
aaa
test
xlat
out
sbb
es
mov
inc
fnstsw
aas
mov
add
inc
mov
xchg
cmp
enter
push
jo
mov
repnz
sub
inc
pop
push
xchg
idivl
xor
ret
mov
shrl
sbb
inc
sbb
sbb
loopne
mov
xor
xor
and
and
jge
orb
leave
cmc
pop
and
iret
testb
jae
movsb
fwait
addr16
mov
jbe
mov
popf
fisttpll
in
repz
and
das
xor
or
bound
xor
std
pop
fildl
dec
pusha
or
hlt
test
mov
ret
sahf
sub
pop
pushf
add
fstps
or
inc
pop
movsl
mov
sub
sub
and
test
outsl
mov
jbe
xchg
mov
or
cwtl
push
jae
enter
cmp
or
rorl
pop
in
pop
jne
scas
stos
jb
cld
loop
inc
jbe
push
xchg
mov
inc
lahf
dec
cmpsb
cld
adc
sbbl
xor
hlt
jno
rcll
arpl
pop
mov
loope
sbb
movsl
push
popa
and
sbb
loop
loop
or
ret
out
push
or
stos
jno
les
int
orb
icebp
dec
or
or
mov
or
sub
adc
xor
cld
shlb
into
mov
std
mov
jbe
adc
stc
cmp
insb
imulb
int
repz
inc
jecxz
or
cs
push
cmpsb
mov
sbb
push
pop
mov
pop
lock
imul
jb
jne
shrb
insb
mov
pop
pusha
or
pop
mov
sar
gs
lahf
outsb
mov
lret
scas
push
jecxz
xor
cld
cmp
int
repnz
add
ret
mov
mov
stos
les
les
mov
lahf
dec
test
ret
mov
mov
push
adc
into
cld
pop
or
psraw
xor
push
mov
sub
fildll
fidivrs
jae
das
insl
popa
push
je
push
ret
push
insl
aas
cmpsl
scas
jge
jno
sbb
sbb
ja
sbb
and
cs
inc
sub
xor
lods
fistps
push
jne,pn
jp
jo
sbb
cmp
or
jg
addb
pop
or
inc
xor
xchg
inc
jecxz
jns
cmpsl
aad
lock
jg
xchg
daa
jle
call
mov
push
pop
jne
fiadds
bound
push
stos
xchg
xchg
mov
je
imul
out
inc
mov
push
xlat
pop
xor
mov
dec
fwait
stc
lret
inc
mov
push
or
mov
ds
add
xchg
cmp
add
push
xchg
es
sub
inc
fcompl
adc
inc
mov
dec
xchg
cwtl
daa
mov
push
cli
adc
das
sahf
enter
cmpsb
push
mov
mov
jb
push
adc
xchg
mov
cmp
cmpb
pop
push
lcall
nop
scas
xchg
inc
ljmp
imul
sbb
sbb
ljmp
arpl
mov
in
adc
jp
mov
inc
jg
xor
pop
pusha
imul
shll
push
int3
test
cltd
cld
icebp
and
dec
call
fistpll
push
pop
in
rorb
loope
jno
xchg
cmp
cwtl
jle
jb
rcl
jo
sbb
repz
jbe
idivb
mov
in
add
lock
shll
fbld
mov
sub
sti
adc
pop
xlat
out
decl
in
mov
cs
scas
mov
jae
or
jl
jb
jp
movsl
cmp
jg
iret
cmp
mov
cmc
and
push
outsl
mov
sbb
shll
js
in
std
loop
cwtl
dec
push
insb
push
sbb
lea
cwtl
xorl
mov
je
xor
out
sbb
adc
insl
das
lret
sbb
fcomp
rcl
pop
scas
mov
cmp
in
pop
pop
jecxz
or
pusha
lods
lcall
cmp
popa
in
jae
pop
stos
xor
or
adc
xchg
mov
in
pop
dec
lret
dec
lcall
mov
and
test
sbb
loop
out
dec
sbb
push
dec
rcll
sbb
enter
pop
insb
adc
jge
sbb
gs
or
in
psubsb
mov
movsb
nopl
jns
js
xchg
inc
hlt
ja
inc
lret
stos
adc
gs
pop
test
test
movsl
mov
or
xor
adc
or
adc
dec
js
stos
loope
fisubl
and
hlt
sbb
sbb
js
dec
adc
push
mov
adc
lret
iret
scas
add
xor
decb
into
and
testb
push
adc
imul
xor
push
ds
or
xor
adcb
sarb
cltd
cmpb
mov
hlt
clc
lret
js
fwait
xor
mov
ret
mov
shlb
mov
ja
imul
or
adc
bound
mov
imul
out
dec
dec
push
orb
ljmp
pop
cmpsl
aas
sbb
loopne
push
add
and
fidivs
ret
sahf
or
fs
cs
fistpl
xchg
out
fcmovnbe
fisubrs
or
into
pop
add
add
rcrb
inc
push
out
pop
sahf
loop
not
push
push
es
js
aad
pusha
lods
push
pop
outsb
clc
push
ss
push
fbld
clc
fimull
adc
dec
sbb
std
fidivrs
push
mov
xchg
xor
mov
push
out
adc
mulb
mov
xchg
pop
push
lods
jp
push
sub
mov
inc
jb
call
inc
pop
inc
mov
xchg
ds
daa
jb
in
xchg
pop
sbb
dec
jp
cmpsl
or
mov
ljmp
fidivrs
fwait
out
dec
push
pop
and
shrl
std
sbb
loop
sub
push
cmpsb
push
adc
jbe
ljmp
callw
imul
xor
cmpsb
ret
or
je
cmp
ret
mov
inc
pusha
nop
sub
cmpsb
cmp
mov
and
sub
cs
adc
aas
mov
lcall
into
ret
cmp
push
inc
push
xchg
push
fiadds
cli
cmpsl
jl
out
add
shrb
fs
test
xchg
pop
lahf
push
mov
xor
int
jp
mov
int
mov
adc
incb
sbb
xchg
mov
inc
mov
jge
dec
out
data16
outsl
arpl
xchg
sub
das
jae
popa
mov
mov
mov
and
adc
pop
scas
out
data16
sbb
roll
xor
push
addr16
js
in
push
push
push
fsubr
inc
add
mov
shll
aas
scas
jg
cs
fwait
pop
daa
pushf
ret
fiadds
inc
mov
mov
or
cwtl
out
jbe
pop
and
pop
jb
out
jp
xor
inc
mov
jg
pop
mov
fldcw
mov
jg
add
orb
jle
int
leave
inc
movsl
inc
mov
cltd
outsb
fsubs
and
and
add
pop
jge
ja
xchg
mov
dec
pusha
bound
inc
mov
je
shrl
inc
xchg
in
das
repz
sub
mov
mov
mov
in
or
xor
sbb
push
ret
lahf
sbb
inc
lods
testl
out
push
or
movsb
add
adc
bound
dec
and
arpl
inc
inc
cltd
sbb
popa
clc
jp
inc
add
push
outsb
adc
mov
jmp
ljmp
jno
fwait
sarb
inc
ja
cltd
insl
push
ret
addr16
outsb
or
sbb
je
psubw
push
cmpb
dec
nop
or
nop
sahf
outsb
jb
mov
pop
stos
cld
add
call
aad
jp
fwait
add
jnp
pop
ja
cmpsb
in
cli
add
dec
repnz
lcall
mov
push
ja
jbe
push
add
add
mov
jno
gs
pop
xor
nop
push
and
out
sbb
adc
es
popa
sbb
ss
lods
in
add
mov
inc
sahf
inc
jne
gs
mov
scas
jecxz
sbb
gs
pusha
sbb
mov
loope
js
push
pop
lret
xorl
dec
jo
sub
pusha
push
sub
add
inc
pop
push
jno
insb
xchg
cmp
sbb
mov
data16
and
mov
lods
insb
cld
add
cwtl
cmp
ss
or
sub
fbld
repnz
fnsave
jne
sub
push
add
jecxz
popa
add
and
or
inc
repnz
test
mov
adc
insl
in
arpl
cmp
inc
sub
std
outsb
adc
inc
rorb
iret
sbb
xlat
leave
mov
sub
inc
mov
imul
xchg
test
jl
dec
dec
mov
add
daa
loop
ds
ljmp
adc
mov
insl
addr16
orb
insb
sbb
push
push
adc
xchg
out
or
push
adc
mov
mov
sarl
addr16
aam
scas
ja
pop
stc
fidivrl
sbb
test
mov
dec
mov
adc
jns
pop
cmp
inc
fiaddl
ljmp
jle
pop
cmc
notb
jb
pop
out
arpl
jns
mov
xchg
sbb
dec
sbb
push
cmpsb
push
lahf
xchg
add
mov
fstpt
daa
orb
sbb
vmread
jbe
das
pusha
gs
push
cmpsb
add
jg
xor
inc
nop
outsb
sbb
into
jbe
mov
cmp
into
andl
pop
notb
ds
push
pop
std
ret
pop
mov
cmpsl
push
lahf
jne
add
inc
sbb
insl
cwtl
movsb
fbstp
jp
popa
inc
mov
addr16
das
outsb
jge
sub
mov
add
push
jns
sbb
mov
adc
add
inc
imul
into
int
mov
sub
push
cli
push
stos
or
rcrb
add
jge
push
std
cltd
mov
cwtl
andb
adc
push
lea
xchg
sbb
xchg
and
push
shl
mov
push
mov
pop
scas
inc
hlt
mov
add
inc
pop
inc
xchg
and
inc
mov
push
jmp
scas
je
mov
repz
aam
into
cwtl
jae
gs
nop
and
lret
sbb
sub
dec
call
inc
sbb
dec
sub
cmp
mov
sbbb
sahf
sahf
cmpsl
cmpsb
jl
loope
loope
pop
loopne
test
or
pop
add
mov
cmp
pop
fdivrl
fcompl
fbstp
dec
out
cmp
bound
or
fisttpll
loope
or
mov
push
lds
adc
jne
sbb
cmpsb
xchg
cmp
mov
in
cmp
mov
jns
loop
jge
std
sub
test
and
and
lret
mov
jnp
repz
lahf
stos
mov
jp
aaa
jnp
loope
icebp
int3
test
dec
xchg
js
loop
daa
cmc
sub
cmpsl
push
cld
js
rcrb
dec
cmp
inc
stos
out
orb
out
addr16
push
inc
mov
arpl
push
shrb
frndint
inc
sub
fs
or
dec
icebp
add
iret
push
dec
inc
out
jge
jnp
lds
or
jl
fnsave
mov
lahf
cmp
rclb
clc
xchg
bound
mov
enter
push
repnz
shl
dec
loope
rorb
ss
pop
mov
je
nop
lahf
cmp
repnz
xor
les
stc
pushf
sbbb
leave
xchg
fildl
or
les
stos
lahf
andb
jne
pop
sbb
mov
push
movsb
test
loopne
inc
stos
scas
dec
push
inc
jecxz
movsb
jecxz
test
inc
cmp
push
mov
insb
and
les
aad
sbb
push
sub
push
out
stos
lock
jne
fadd
mov
jecxz
pop
dec
push
fadds
lea
sbb
inc
in
repz
jmp
xchg
cli
push
jb
mov
jns
and
test
ret
inc
mov
mov
pusha
mov
ja
outsb
cmc
out
pop
arpl
dec
outsb
sub
in
bound
scas
push
sub
ret
in
jmp
push
push
mov
lret
andb
ds
aas
rcrb
sbb
js
gs
jne
and
movsl
pusha
adc
adc
idivl
lret
or
jae
push
pop
xchg
ja
in
xchg
cli
or
ret
pop
fstpt
sbb
orl
fwait
orb
shr
pop
adc
mov
mov
sbb
jnp
js
movsl
xor
cs
mov
int3
mov
mov
jb
pop
jbe
loopne
out
pop
sbb
andl
push
push
push
jns
lret
mov
outsb
bound
imul
shrl
and
push
fsub
xchg
inc
inc
xor
inc
fists
nop
scas
lods
pop
xchg
jge
add
sbb
pop
xor
sbb
add
imul
or
iret
adc
or
xchg
je
jle
mov
xor
jns
fldcw
sbb
xor
fnstsw
adc
xchg
cmpsl
cmp
scas
jb
faddp
into
outsb
into
xchg
into
cld
adc
jbe
ds
ds
es
add
dec
cs
mov
call
adc
ror
jp
jp
push
push
mov
es
mov
ss
mov
mov
dec
cmpsb
push
mov
adc
lcall
cld
outsb
lret
mov
cs
cs
adc
push
add
dec
push
push
mov
test
lret
adc
jb
xchg
ret
sahf
into
xchg
xchg
fnclex
out
push
shrb
mov
lock
cltd
mov
push
push
in
fidivrs
mov
es
push
dec
pop
mov
mov
push
mov
add
stos
cmpsl
xor
mov
test
jp
cmpsl
call
outsb
inc
xchg
dec
jl
out
push
mov
scas
push
into
pop
sub
pop
adc
jp
cmpsl
hlt
adc
loopne
outsb
xchg
push
push
pop
push
dec
pop
mov
fidivrs
mov
repnz
pop
out
ljmp
and
dec
ret
fidivrs
outsb
and
femms
push
push
push
jle
mov
ds
mov
add
cwtl
mov
adc
xchg
cmpsl
cmp
mov
mov
ss
jle
mov
bound
push
push
pop
push
clc
push
add
jbe
mov
mov
cmpsl
adcb
jb
pop
ret
pop
into
inc
outsb
inc
xchg
dec
fisttpl
mov
mov
mov
fidivrs
mov
loop
push
sbbb
mov
repnz
push
mov
xor
xchg
xchg
mov
outsb
add
ljmp
cmc
lret
and
push
and
jbe
ficoml
cmp
hlt
clc
inc
call
sub
aas
cwtl
jb
mov
cmpb
mov
jb,pt
dec
ret
mov
mov
fistpl
enter
mov
jbe
inc
adc
and
scas
push
ret
push
into
push
outsb
pop
xchg
pop
fistpl
pop
push
dec
movsb
mov
sub
mov
sbb
clc
imul
dec
jnp
jns
bound
mov
lcall
jb
jle
insb
into
push
jne
push
jnp
test
jg
cmpsb
sub
sbb
jbe
xor
cwtl
cmp
ja
dec
mov
dec
lahf
xor
xchg
add
icebp
lret
inc
je
nop
pop
mov
inc
cmp
sub
dec
xor
lea
jnp
hlt
or
jo
mov
jp
push
xor
cmp
add
gs
xor
push
and
es
into
mov
and
sbb
popf
imul
std
sub
mov
xchg
clc
mov
popf
out
shll
adc
sub
test
shr
fwait
lods
inc
jp
lahf
or
outsb
pop
xchg
test
pop
sub
data16
mov
jg
out
dec
sbb
xor
push
data16
cs
add
fwait
repnz
outsl
push
xor
jnp
xchg
cmpsb
or
xchg
pop
add
lcall
mov
sti
addr16
sub
xor
bound
mov
xchg
xor
out
jne
xchg
jb
mov
jns
js
adc
mov
pop
push
nop
in
jg
xchg
push
sbb
ds
clc
push
and
inc
mov
lods
mov
out
or
popa
pop
leave
sarl
cmp
cmp
push
repz
adc
adc
pop
fwait
adc
ja
bound
dec
push
sub
push
daa
dec
pop
in
and
bound
out
mov
popa
lret
push
dec
adc
and
inc
dec
call
mov
pushf
pop
adc
lea
xchg
dec
or
lea
es
mov
cmpb
imul
icebp
out
or
mov
pop
iret
cs
pop
aas
sub
sbb
icebp
mov
mov
pop
flds
roll
xchg
cmpsb
mov
jnp
push
or
je
xor
mov
iret
xorb
or
daa
inc
ljmp
in
xchg
add
cwtl
xchg
xchg
sarl
mov
out
add
jae
ds
xchg
int3
mov
xor
mov
push
add
push
sub
cmp
lods
lcall
rorl
jp
cmpsl
mov
mov
sahf
pop
sbb
xor
test
cwtl
jp
pop
and
stos
xorl
dec
jnp
aad
adc
add
incb
pop
divb
stos
ja
outsb
sub
mov
outsl
out
sub
popa
sbb
mov
fcmovne
iret
je
imul
pop
dec
mov
cmc
mov
inc
lcall
arpl
and
fistl
in
inc
and
in
jp
dec
dec
xlat
mov
xor
fnstenv
sub
fiaddl
xor
and
jmp
cmp
out
or
sbb
jg
pop
stos
rclb
mov
ret
inc
inc
cmpl
sub
dec
mov
outsl
cwtl
pop
sbb
push
push
call
jle
xchg
clc
pop
shrl
sahf
pop
ret
jbe
pop
xor
pushf
imul
aam
and
jle
in
push
popf
loop
or
aad
add
push
ficomps
fdivrs
sbb
mov
out
sbb
sbb
fwait
fs
dec
mov
es
mov
mov
add
insb
mov
jb
jge
pusha
dec
push
push
dec
lret
pop
push
cltd
imul
repnz
dec
xchg
mov
inc
and
dec
xlat
repz
in
imul
in
or
inc
js
push
push
setnp
inc
jno
mov
push
loope
push
xchg
or
dec
add
jae
sub
adc
pop
outsl
imul
and
jge
into
mov
push
dec
pop
int3
dec
adc
scas
andl
mov
inc
sbbl
aam
aas
push
mov
xchg
cmp
fcoms
fimull
inc
sahf
push
scas
mov
push
push
das
jo
lods
mov
xlat
jle
pusha
inc
mov
test
stos
decl
ljmp
scas
inc
adc
fwait
cmp
jb
cmpb
and
cmpsb
cmp
test
cmpsb
dec
cs
lods
aam
outsb
mov
lea
xorb
jg
push
gs
lds
inc
shrb
mov
or
ds
fsubrs
push
leave
mov
outsl
ds
out
push
mov
int
icebp
repnz
test
scas
mov
les
add
add
les
loopne
mov
outsb
xor
int
aam
xchg
loope
lock
mov
dec
adc
pushf
or
cmc
mov
push
pop
les
mov
cs
aaa
mov
jb
or
ljmp
adc
arpl
xor
sbb
mov
fisubl
jl
pop
cmp
imul
lods
pop
mov
adc
jns
out
cmp
xlat
jnp
repz
xchg
pop
shll
inc
ret
inc
jo
scas
jb
push
aas
inc
or
jbe
in
into
setne
mov
push
sub
pop
sub
cld
fsubs
mov
adc
andl
pusha
or
lahf
decb
int3
clc
push
rcl
mov
and
xor
jg
push
mov
fninit
xchg
xchg
in
and
mov
js
or
call
jns
das
mov
mov
lock
je
andb
ds
mov
aam
pop
in
add
call
push
cli
int
inc
xor
fsubs
adc
cmp
nop
int
out
cmp
mov
imul
ja
cmp
sbb
cs
lahf
mov
sbb
int
jp
jns
pushf
jmp
incb
loope
push
mov
popa
xchg
pop
jb
mov
andl
insl
out
xchg
inc
fwait
lods
andl
xchg
stos
aam
push
fwait
sub
adc
mov
add
sub
int
fs
andb
pusha
sub
adc
sbb
sub
fbld
shll
jp
push
mov
xor
popf
jg
mull
gs
lods
je
adc
popa
repz
es
xchg
fisubrl
loop
mov
push
sahf
pop
jl
sbb
dec
xor
and
xchg
pop
mov
or
cld
mov
inc
stos
xor
pop
cwtl
outsl
cmp
lods
loopne
std
jp
pop
nop
or
imul
test
jbe
mov
imul
in
rclb
xorl
push
sbbb
cmpsl
xor
icebp
dec
rcrb
sub
dec
sbb
aas
mov
mov
and
cmc
mov
xchg
shrl
repnz
mov
xor
subb
mov
aam
out
pop
daa
jnp
pop
pop
pushf
adc
jbe
mov
mov
outsl
aad
lcall
mov
test
rorb
imul
ljmp
xchg
out
jne
and
imul
sbb
pusha
add
inc
gs
out
call
xchg
inc
adc
ret
cmp
js
and
push
inc
dec
mov
sbb
stos
rolb
mov
jno
sub
pop
jl
pop
pop
mov
ds
fs
clc
push
call
xchg
out
xlat
dec
ds
jge
xor
xchg
aaa
insl
ret
xor
cmpsb
loop
xchg
arpl
nop
hlt
xchg
repz
xchg
sub
stos
sahf
es
stos
mulb
dec
aad
add
push
mov
sub
sub
mov
adc
jl
pop
stc
aas
addr16
call
arpl
popl
scas
lcall
jae
adc
cmp
pop
mov
or
out
add
adc
rcrl
gs
jns
sub
pop
pop
push
mov
adc
shll
or
pusha
nop
mov
xchg
push
push
jecxz
in
loope
adc
pop
or
fsubrp
mov
js
outsl
xchg
out
sbb
pop
out
popa
add
ja
pop
das
or
outsb
or
outsb
push
jne
stc
cwtl
add
pushf
adc
jp
test
rclb
cwtl
int3
inc
sub
int
push
add
pop
push
sub
pushf
aas
nop
lods
sub
dec
cmp
sarl
or
inc
inc
push
inc
test
adc
jbe
push
clc
add
inc
scas
sbb
xchg
xchg
adc
je
outsl
sbb
jp
loope
clc
lock
mov
sbb
cmp
or
cmpsb
int
test
iret
dec
pop
shlb
push
fidivrl
xchg
jle
jmp
ret
or
ja
push
xor
add
fsubr
adc
mov
lods
mov
lahf
jns
andb
jg
pop
imul
mov
cmc
js
dec
jae,pt
addr16
mov
stc
dec
repz
repnz
scas
loop
test
cwtl
xchg
xor
sbb
mov
stos
mov
rcr
push
jg
sbb
xor
mov
xorb
mov
lock
inc
cmp
add
cmp
mov
dec
mov
xchg
pop
sbb
insl
in
push
sbb
xchg
ja
pop
push
mov
xchg
rcrl
lods
xchg
int3
mov
and
out
fcompl
xchg
bound
scas
mov
cmc
call
sub
sbb
je
sbb
adc
popf
mov
mov
mov
insb
aas
xchg
iret
out
movsb
ja
aas
adc
jae
stc
outsb
xorb
inc
mov
test
stc
in
dec
fldenv
sbb
xchg
jno
push
push
adc
jns
adc
push
push
inc
adc
cltd
mov
adc
cs
push
call
push
push
jle
mov
out
xchg
pop
clc
out
dec
ret
cmp
lret
and
adc
xchg
push
in
aas
dec
xchg
faddl
sbb
pop
scas
mov
push
push
ss
pop
xchg
imul
xchg
pop
push
stos
es
das
mov
inc
push
fimuls
mov
push
pop
mov
arpl
adc
scas
pop
daa
jecxz
sub
push
bound
inc
ficoms
popa
data16
pop
repnz
inc
inc
sbb
pop
gs
ret
mov
mov
stos
mov
scas
jbe
xsha256
cmpsb
xchg
outsb
inc
mov
adc
gs
mov
add
dec
adc
das
or
inc
movsb
xchg
dec
ds
sbb
cmp
repnz
mov
mov
out
inc
jl
adc
cmp
xchg
lret
out
sbb
and
dec
dec
lea
xor
inc
loopne
adc
in
notb
int3
aaa
xchg
repnz
xchg
jl
adc
add
cmp
clc
sbb
mov
imul
leave
aad
xchg
push
xor
aam
lods
pop
mov
cmpsl
sub
mov
test
xlat
ja
cmpsl
hlt
cli
jp
call
adc
data16
push
aam
lahf
jbe
in
xchg
arpl
push
insl
inc
xchg
daa
and
popa
js
pop
cwtl
pop
mov
cmp
fwait
cmp
push
bound
mov
xchg
and
test
movsb
and
outsb
in
sbbl
mov
enter
push
shrl
push
popf
jne
movsl
mov
jb
sahf
data16
psubusw
inc
ret
outsl
mov
jmp
jl
xchg
mov
jp
cltd
xor
or
stc
in
jp
mov
fisubl
in
mov
jbe
xchg
fnstsw
mov
mov
arpl
call
test
jmp
sub
bound
sbb
and
push
rcrl
push
es
pop
lock
mov
pop
and
jb
ret
and
jp
pop
es
int
inc
loopne
call
xchg
push
clc
pushf
inc
add
fcoml
loope
pop
push
bound
ror
and
cmp
sbb
std
test
add
sub
and
sbb
mov
sbb
sbb
adc
push
jne
add
adc
mov
sub
data16
popa
xchg
testb
pop
movsb
xchg
cmp
jnp
jno
pop
ja
out
adc
cmp
pop
mov
sub
pop
test
aad
ss
out
jp
xchg
testb
sub
add
mov
lret
popf
fadd
dec
addr16
sub
repz
push
mov
shrl
inc
scas
fwait
sub
inc
pushf
outsb
pop
ss
inc
pop
xchg
sub
cmc
add
int3
subb
jl
or
scas
dec
push
or
push
pop
mov
jne
jg
push
xchg
lret
xchg
negb
push
sub
mov
rorb
lahf
xchg
mov
jbe
dec
cmp
movsl
outsl
and
icebp
out
pop
jp
shll
inc
and
clc
or
adc
jmp
mov
fwait
int
mov
pusha
mov
in
cmp
adc
mov
nop
movsb
mov
push
or
movsl
outsl
std
push
jne
and
or
mov
adc
mov
push
jp
push
or
mov
aas
jnp
jp
sbb
gs
push
int
mov
add
cmp
int3
or
addb
addb
fidivl
inc
insb
mov
add
std
sbb
sti
push
jle
push
out
xor
mov
mov
pusha
fnop
repz
pop
mov
inc
arpl
mov
out
or
mov
icebp
inc
dec
cmc
nop
jae
or
sbb
fcomps
fmull
dec
xorb
pushf
or
jno
mov
inc
rep
sahf
lcall
push
or
mov
pop
cmpsl
test
cs
mov
cmp
sbb
in
jmp
and
or
cmp
pop
je
test
inc
xor
call
adc
cwtl
adc
inc
xor
lret
cmp
scas
fiadds
lret
jle
ss
or
adc
pusha
or
sahf
sub
mov
std
test
leave
xor
aaa
jns
push
cmpsb
cmpsl
dec
inc
sbb
sbb
shll
xor
dec
dec
nop
ljmp
sbb
xor
mov
jae
pop
pop
into
or
add
push
fbld
mov
cltd
add
hlt
pop
ficompl
add
nop
lret
mov
xchg
jb
mov
push
dec
sbb
push
rcll
xor
mov
cmpsb
lcall
push
dec
xor
cmp
push
js
lret
inc
xor
add
add
into
xchg
jns
lret
test
pushf
dec
lret
push
push
idivl
out
push
adc
enter
cld
imul
cld
mov
nop
scas
adc
xor
adc
mov
dec
icebp
aad
adc
sbb
mov
testb
xchg
pushf
lret
jnp
mov
and
jp
xchg
inc
jge
aam
adc
jbe
xor
pop
xor
cmp
aam
imul
xlat
dec
pop
jnp
jo
cmp
pop
jp
and
and
or
std
or
int3
jae
jno
sbb
add
push
cld
cmp
popa
out
push
adc
mov
cmpsb
lret
shrl
aad
push
lcall
arpl
adc
scas
mov
jp
adc
js
es
stos
cmp
cld
push
or
push
int
inc
imul
ljmp
scas
push
mov
push
jp
cmpsl
pop
adc
movsb
cmp
inc
leave
aas
ds
int3
adc
or
push
xchg
push
and
mov
inc
jle
mov
pop
sbb
pop
adc
sub
mov
lret
cmpsl
lret
and
into
mov
mov
dec
std
mov
xor
inc
pop
and
dec
cmp
push
sbb
jne
ss
xchg
xchg
jecxz
sub
js
mov
mov
ja
sahf
shrl
sub
idivb
ds
and
ljmp
mov
inc
arpl
pushf
repnz
fmuls
fdivrl
mov
scas
mov
dec
rcr
lahf
mov
xor
jle
lods
into
cmpsl
mov
int3
pop
jecxz,pt
jno
cli
xchg
and
shlb
or
adc
jl
loopne
adc
push
dec
pop
push
test
out
cmp
mov
in
mov
scas
les
xor
adc
daa
cwtl
dec
jle
cmpsb
and
and
cmpsl
and
pop
lcall
jg
xchg
jmp
out
dec
cli
frstor
rol
cmpsb
jp
cld
js
out
movsl
cmp
inc
in
push
add
ds
out
insb
ja
mov
adc
add
int
inc
jle
push
into
push
and
adc
mov
data16
sarb
sbb
push
pop
sbbb
cmp
push
ret
jnp
jp
jle
movsb
push
push
mov
push
into
jb
popa
aad
push
mov
mov
data16
icebp
aas
movsb
das
push
lahf
xchg
push
cmp
inc
cmp
je
or
add
and
xchg
lock
xchg
lcall
fldl
mov
mov
daa
xor
lock
inc
repnz
into
adc
jl
dec
out
popa
pop
cmpsl
cmpsb
cli
mov
sbb
cmc
andb
popf
jl
bound
cmp
add
fildll
push
arpl
lcall
fs
add
pop
inc
ret
sbb
ds
xchg
test
clc
arpl
jnp
mov
jle
stc
bound
int
push
jg
xchg
int3
mov
ja
aaa
movb
jns
push
sbb
add
xor
and
sub
inc
clc
and
lods
jge
rclb
mov
and
sbb
adc
ljmp
popfw
test
adc
jo
rol
fs
push
aas
dec
incb
and
push
sbb
fs
imul
lock
lcall
fs
mov
push
and
add
mov
dec
es
cmp
cmc
mov
dec
je
xchg
mov
jne
arpl
cld
inc
mov
add
adc
cmp
inc
call
das
pop
daa
xchg
jns
and
pop
insb
sbb
idivb
dec
sbbb
js
inc
jb
shrb
adc
mov
andl
and
jl
shll
test
push
mov
cld
inc
fiaddl
inc
dec
outsb
and
lcall
movsb
sarb
pop
into
add
sahf
daa
je
sbb
and
inc
xchg
mov
int
ljmp
xchg
pop
gs
adc
jb
pop
pop
xchg
in
jecxz
dec
jp
push
aam
mov
cs
sbb
mov
mov
pop
cmp
cmpsb
pushf
cwtl
inc
ja
ljmp
dec
cmp
xchg
jb
xchg
mov
scas
aam
ret
cmp
and
mov
stos
sub
or
inc
sub
or
ja
pop
jbe
call
xchg
bound
stos
dec
dec
push
cli
aam
repnz
lods
jbe
mov
mov
mov
push
mov
ljmp
fisubrs
dec
hlt
xor
repz
jge
jmp
ljmp
inc
push
add
loop
jge
rcl
xor
mov
xchg
push
inc
lock
mov
mov
mov
lock
pop
cmp
mov
adc
push
push
jo
sub
sub
push
mov
mov
add
dec
push
mov
cwtl
jp
cmpsl
in
adc
hlt
push
ret
push
into
outsb
cs
ds
fdivrs
inc
fimull
push
scas
int
inc
repnz
mov
xchg
xchg
fldt
push
mov
dec
dec
cs
xchg
cmc
xor
xor
dec
repz
sub
pop
inc
xor
push
bound
bound
ss
cwtl
dec
or
mov
mov
jmp
jb
mov
aam
mulb
pop
cmp
pop
push
pop
and
scas
lret
mov
push
aaa
fmuls
inc
xchg
ret
clc
sbb
cltd
js
adc
sbb
mov
lcall
mov
leave
lods
movsb
popf
mov
ret
sbb
test
lret
cmc
xchg
cwtl
bswap
mov
lret
xchg
test
xchg
sub
and
ss
sti
or
mov
mov
arpl
or
shrl
mov
xor
lea
shrb
sbb
pop
adc
jb
and
and
sahf
aad
or
int3
in
loop
xchg
dec
dec
mov
sbb
ljmp
and
int3
push
stos
sti
add
xor
sarb
jae
jmp
or
cmp
repz
shrl
xor
xchg
push
add
shrl
imul
in
mov
adc
or
pop
pop
push
incl
fstl
push
xor
push
sbb
cmc
es
incl
int
inc
ja
enter
xchg
jmp
mov
leave
ret
pop
icebp
cltd
sbb
and
lcall
mov
repz
stos
jbe
test
mov
dec
mov
mov
into
out
xor
sahf
dec
scas
jecxz
lea
cs
pushf
cld
sub
ja
dec
sbb
mov
dec
aam
mov
test
or
cltd
fsubr
sub
fwait
shrl
and
outsb
adc
out
sub
push
dec
ds
dec
insl
popa
ss
mov
mov
pop
daa
mov
xchg
cli
out
fildll
jecxz
sbb
dec
out
cmp
lcall
xor
adc
dec
or
or
das
cmpsb
push
outsl
jne
add
out
cmp
jno
mov
or
xchg
mov
insl
fisubrl
sbb
roll
add
cmp
push
dec
imul
xchg
in
mov
mov
idivb
js
ds
clc
daa
jnp
aad
fsubrl
es
add
icebp
xor
popa
in
mov
lds
ss
testb
aaa
int
xor
mov
leave
adc
jl
sub
popf
dec
mov
add
dec
jmp
ljmp
into
push
js
aad
outsb
lds
mov
jle
out
mov
mov
push
cltd
jp
cmp
lea
cwtl
pop
adc
push
sbb
or
dec
lcall
iret
sub
hlt
push
subl
pushf
inc
jg
mov
cmpsl
push
sti
jno
arpl
adc
jne
mov
mov
cld
adc
cmpsl
dec
lea
and
icebp
pop
add
add
add
add
and
add
cmp
add
add
add
add
add
push
add
addb
add
add
add
mov
add
addb
add
or
add
add
add
add
add
mov
add
mov
add
add
add
push
add
dec
add
dec
add
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
ja
ja
ja
pop
add
add
pushl
add
or
ja
ja
ja
ja
ja
jo
add
pushl
add
or
pushl
add
or
ja
jo
ja
ja
ja
jo
add
pushl
ud0
pushl
add
or
push
lock
pushl
add
or
ja
ja
cmp
add
pop
jo
add
or
push
sti
divl
xor
add
or
aas
mov
add
or
ja
ja
ja
mov
add
or
aas
mov
add
push
sti
testl
ja
ja
ja
ja
ja
mov
add
or
push
add
add
add
decl
add
or
ja
ja
ja
ja
add
int3
inc
or
push
or
dec
rorb
decl
rorb
ja
ja
ja
ja
ja
dec
iret
int3
inc
or
pushl
rorb
pushl
lret
rorb
ja
ja
ja
ja
ja
jo
int3
lock
pushl
dec
rorb
pushl
add
or
pushl
add
lock
lock
lock
lock
lock
lock
lock
lock
vpmacssdqh
mov
add
add
add
aas
rolb
pop
addb
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
pop
addb
add
add
add
add
add
add
add
add
add
add
add
add
or
addb
xadd
add
in
dec
jg
add
add
add
and
add
add
lock
add
and
str
mov
add
mov
add
mov
add
verw
mov
add
hlt
mov
add
cld
mov
add
sldt
sldt
add
add
add
sldt
add
add
lldt
sldt
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
sldt
add
add
add
addb
add
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
jb
imul
add
jb
fs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
je
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
gs
fs
outsl
outsb
outsb
arpl
outsb
xor
add
add
mov
cmp
add
pusha
push
dec
mov
dec
movsl
and
inc
jmp
add
sbb
adc
pop
dec
mov
loopne
jecxz
fiadds
xchg
cmpsl
ja
cwtl
push
pop
sub
addb
sbb
insl
add
sarb
adc
cmpl
xchg
or
adc
jmp
or
adc
add
sbb
bound
mov
xchg
cmp
pushf
test
jae
in
or
inc
adc
int3
hlt
das
nop
iret
daa
add
enter
mov
pop
shlb
sbb
into
and
push
and
inc
test
or
jle
ret
or
js
adc
mov
into
and
xor
and
or
lret
pop
pop
push
xor
in
or
movsl
pushf
out
dec
mov
aas
data16
add
outsl
divl
sub
jmp
or
xchg
dec
add
or
push
xchg
pop
cmp
dec
adc
imul
xlat
in
xchg
mov
or
es
lods
rcr
out
out
add
xchg
jno
gs
orl
fisttpl
lock
sahf
pop
adc
icebp
js
mov
outsb
push
shlb
fwait
mov
sarb
add
dec
std
cmp
add
lea
mov
inc
negl
dec
push
sub
pop
xor
leave
in
lods
dec
jns
adc
bound
dec
xchg
xchg
xor
mov
and
fisttps
push
enter
pushf
and
aas
adc
mov
imul
scas
subb
push
mov
pop
test
leave
popl
xchg
xor
adc
cs
push
push
ljmp
mov
divb
pusha
ret
or
cld
in
cwtl
ret
add
and
stc
add
fdivrl
ret
sub
adc
or
adc
scas
dec
popf
inc
cli
cltd
jne
xchg
test
push
xchg
std
and
inc
add
xor
mov
dec
das
add
pop
lock
mov
and
clc
loope
add
or
dec
cs
clc
fstl
andl
add
push
insb
push
nop
cmc
test
dec
mov
inc
push
inc
add
and
inc
jecxz
inc
je
add
or
nop
sbb
sub
aas
in
js
pushfw
bound
nop
mov
in
iret
ja
sub
mov
clc
push
add
inc
adc
mov
das
ret
clc
pusha
imul
cwtl
xor
push
xor
add
jnp
cmp
mov
inc
push
or
rcr
imul
mov
fmull
mov
test
add
push
ret
add
dec
add
mov
std
add
mov
mov
adc
add
or
push
pop
xchg
les
jp
test
clc
or
pop
or
dec
mov
add
pop
fdivr
push
dec
add
insb
arpl
pop
cmc
cwtl
fidivl
or
mov
aaa
adc
test
sbb
scas
fs
jae
inc
jne
mov
jle
shlb
xorb
aaa
xor
or
out
add
outsl
icebp
dec
mov
add
jmp
push
jnp
xchg
dec
movsl
cmp
pop
nop
fisubrl
ret
repnz
or
add
leave
out
popa
aam
cmp
xor
jp
stos
sti
jns
push
xchg
mov
or
inc
pop
dec
mov
cmp
ja
add
and
and
arpl
adc
pop
mov
cmp
gs
or
sub
mov
add
lock
xor
test
cli
pop
inc
subl
or
adc
or
inc
jo
push
call
sbb
shll
cs
or
pusha
and
arpl
mov
les
or
add
mov
imul
sarl
rorl
test
cmc
into
add
iret
add
aad
pop
mov
or
xchg
ret
bound
or
js
or
xor
xchg
ja
flds
sbb
repnz
or
xchg
or
cmpsb
adc
in
mov
inc
mov
ret
inc
xchg
and
push
rclb
imull
add
inc
mov
rclb
mov
dec
cmpb
cmpsl
int3
or
lods
movsb
lret
add
mov
cs
pop
add
shrl
cmp
lock
or
jl
inc
xchg
pushf
adc
sbb
je
or
andl
out
cmp
mov
push
stc
adc
dec
add
mov
dec
rol
mov
fucomip
cmp
lahf
pusha
fsubs
mov
push
or
cmp
repz
repz
insb
sub
inc
adc
inc
sub
das
and
les
xchg
add
xor
add
ds
push
or
pushf
mov
push
lret
pop
andb
les
lret
shlb
into
bound
gs
push
loop
lds
int3
fistps
push
inc
insl
xchg
mov
orl
push
xor
xchg
inc
roll
jbe
fs
jp
jno
add
addl
mov
lea
nop
test
adc
xchg
adc
cwtl
adc
cltd
xor
or
lcall
add
sahf
add
add
mov
je
add
cmpsb
add
lods
add
lods
add
scas
add
mov
daa
ret
ret
add
les
xchg
lds
je
into
gs
iret
in
shll
ficoml
cmc
push
inc
clc
sahf
inc
cli
addb
fs
stc
add
sub
add
sbb
or
and
bound
cltd
daa
add
add
add
cmp
mov
add
inc
pop
cmp
movsb
push
punpcklbw
adc
and
stc
rolb
lock
pop
fiadds
faddl
fcmovb
ret
xchg
and
fildll
push
add
sbb
pop
xchg
mov
stos
sarl
pop
std
add
lock
inc
dec
pop
popf
or
cmc
loope
xor
and
add
sbb
ja
jno
sbb
sbb
inc
pop
adcl
aaa
and
orl
or
or
or
push
mov
push
push
xorb
jno
subb
subb
adc
sbb
adc
add
enter
pushf
ja
outsl
js
jp
jns
andb
int
adcb
adcb
sbb
out
xchg
subb
adcb
cmp
or
fwait
cltd
pushf
addb
push
mov
test
add
pop
push
cwtl
or
or
or
adc
xchg
or
add
daa
add
sub
push
xor
pusha
or
movsb
inc
loop
add
xor
xor
icebp
movsb
add
test
rorl
scas
or
ret
or
adc
jmp
adc
adc
insl
adc
jo
cmp
pop
fnstenv
adc
ret
and
or
adc
push
push
or
andb
divb
add
inc
push
pop
sub
in
xor
pusha
or
repz
fs
pop
mov
adc
add
ss
cld
cmp
adc
inc
fsubrs
dec
insb
aaa
arpl
jg
mov
jns
rolb
jo
cmp
orl
add
negl
pop
xor
sbb
daa
and
adc
shll
mov
ret
pop
leave
push
add
add
add
add
push
or
pop
outsb
inc
pop
xchg
mov
push
mov
add
add
add
lret
lods
fldl
or
adc
shll
add
jl
fsubr
mov
sub
xchg
push
and
test
in
orb
das
add
jl
scas
dec
cwtl
es
test
leave
ds
adc
out
push
mov
sbb
or
adc
cmp
jnp
cmpsl
stos
je
lahf
jo
adc
jae
das
or
mov
pop
sbb
add
mov
shll
imul
cmp
nop
das
adc
cmp
nop
ja,pt
push
hlt
inc
push
jp
push
lock
adc
dec
std
aas
mov
pop
or
pop
adc
xchg
mov
inc
in
jns
inc
xchg
je
push
mov
inc
xchg
call
mov
fistps
dec
test
les
mov
dec
xchg
and
outsb
and
into
add
iret
dec
jmp
add
sbb
and
sbb
or
mov
mov
add
cmp
outsl
push
push
ret
pop
shlb
pop
sbb
stos
hlt
sub
and
pop
sub
fscale
push
cli
ja
and
or
and
sub
adc
divb
add
shrb
lods
or
dec
js
jnp
xor
push
lahf
ss
adc
push
test
mov
cltd
sub
jl
push
cmp
adc
jle
inc
repz
test
sbb
lret
movsb
sub
leave
or
sub
cmp
jno
stc
push
add
fwait
pop
push
sbb
sbb
fs
cmpsb
pushf
les
cmp
add
sub
adc
or
dec
sar
out
movsb
mov
adc
push
or
popa
or
jmp
dec
push
mov
mov
jne
iret
fucomp
cmp
xor
stos
inc
stc
lods
or
xor
cld
cwtl
xchg
or
or
inc
push
mov
mov
push
stc
mov
lahf
subl
xchg
mov
daa
xor
das
xor
mov
fdivs
inc
lods
shlb
pop
sub
mov
ja
or
lret
add
add
gs
mov
jo
or
rclb
test
or
or
sub
mov
mov
sahf
lds
adc
sub
push
xor
ss
inc
and
or
xchg
jae
cmp
inc
cmp
inc
cmp
inc
inc
stos
inc
inc
xor
or
inc
jge
dec
add
add
dec
ss
push
lods
mov
cmp
addb
push
push
sub
mov
sub
hlt
pop
and
or
arpl
outsl
add
add
add
inc
jg
addb
addl
or
mov
jmp
or
mov
mov
scas
adc
ret
add
aad
push
incl
sbb
add
dec
and
bound
inc
lret
cmp
xor
or
inc
add
or
mov
mov
rorb
add
addr16
pusha
or
insb
leave
jns
or
les
or
inc
je,pn
add
jno
inc
add
cs
sbb
lock
loopne
add
int
mov
or
sahf
xchg
fdivrs
lret
cmpl
inc
movl
cld
xchg
jmp
jno
sub
ret
xchg
mov
xor
cs
int3
aam
or
imul
and
testl
int3
imul
jmp
dec
test
jl
mov
push
or
inc
shlb
aad
lock
adc
fsts
in
test
mov
fistl
loop
inc
inc
jnp
mov
dec
push
adc
xchg
addb
mov
cwtl
adcl
pop
add
mov
sub
adc
into
rorb
outsb
add
or
add
add
roll
jo
inc
sbb
push
cld
cmp
sbb
sub
outsb
fldcw
push
dec
jnp
xor
dec
ja
pusha
or
mov
xchg
mov
xchg
das
roll
push
xchg
push
adc
lods
mov
cmp
pop
mov
loope
imul
aam
and
jmp
add
das
aam
inc
lea
cmp
into
iret
push
int3
ja
out
inc
divl
mov
xor
and
inc
xchg
inc
cmpsl
lret
dec
sahf
je
xchg
fwait
rclb
stc
or
mov
loop
adc
adc
sbb
mov
pop
frstor
sub
adc
mov
fdivrs
or
or
mov
lea
mov
pusha
xchg
subl
inc
xchg
jle
lret
or
add
std
jmp
fadd
cmp
inc
mov
xchg
adc
add
stos
jae
pop
enter
xor
push
add
xchg
ljmp
and
dec
mov
shlb
xchg
mov
lods
insb
mov
xor
push
out
pop
inc
popf
push
data16
or
and
mov
or
inc
mov
lock
and
sub
adc
adc
shll
pop
push
inc
push
adc
jg
jge
add
push
pop
jbe
mov
mov
ret
and
xor
rol
das
or
bound
mov
xchg
xor
int
jp
mov
lock
addr16
mov
punpckhbw
or
or
pop
or
movsl
cwtl
xchg
push
testl
nop
and
add
add
shrl
add
subb
js
dec
sub
inc
sbb
inc
xchg
fiaddl
ss
xchg
add
out
je
adcb
sub
inc
loopne
or
test
nop
daa
les
test
enter
out
or
dec
fimuls
mov
lock
clc
sub
jle
jne
in
stos
xchg
arpl
fmull
fildll
cmp
pop
sub
fs
repz
loope
push
frstor
add
push
roll
mov
cwtl
pop
sub
push
inc
cmc
or
dec
je
dec
inc
mov
add
mov
imul
je
inc
push
lret
jb
in
jb
repnz
gs
mov
iret
xchg
add
cmp
inc
movsl
jb
add
jns
cmp
mov
rdmsr
jl
movsl
or
xchg
sub
xlat
sub
outsb
or
cmp
int
add
bound
ja
add
cmc
cmp
add
movsl
add
and
inc
adc
cwtl
dec
add
dec
add
add
xor
js
add
adc
psrad
les
adc
xorb
push
dec
loopne
lock
loopne
add
hlt
add
out
inc
pop
mov
rclb
lcall
fbstp
xor
les
in
xchg
add
xchg
add
xchg
add
cwtl
or
mov
dec
adc
or
pop
or
arpl
inc
add
inc
fisubs
sbb
imull
test
or
mov
dec
or
inc
dec
into
inc
pop
mov
hlt
insb
decl
or
sbb
sub
and
inc
dec
inc
mov
adc
movsl
xorl
and
add
mov
test
out
pop
and
rcrb
add
xchg
mov
sbb
std
inc
int
lret
dec
popf
and
or
sahf
cmp
mov
and
xor
inc
push
push
nop
lods
aam
mov
or
movsl
orl
fldenv
lock
sbb
xchg
dec
push
inc
or
add
sub
mov
sub
mov
add
je
outsb
bound
add
cmp
call
inc
imulb
arpl
or
add
mov
or
xlat
imul
popa
lods
fcoms
xchg
ret
aam
push
or
test
scas
or
dec
addr16
sbb
mov
jo
or
dec
sbb
add
je
sbb
mov
push
repz
xor
mov
xor
pop
mov
pop
stos
sbb
adc
test
jl
or
data16
sub
push
push
pop
lret
sbb
mov
pop
cmc
add
add
rclb
push
sbb
ljmp
or
adc
xchg
jl
push
icebp
aas
jmp
cmp
xor
lahf
test
add
jno
and
inc
enter
fiadds
inc
jl
aas
cwtl
rcll
and
inc
nop
and
sbbl
dec
std
xor
adc
les
icebp
or
lret
add
mov
mov
add
cmp
hlt
in
add
sub
cmpsb
mov
pop
add
bound
lods
mov
xchg
es
jmp
mov
inc
add
mov
add
mov
jge
jmp
sub
cmpsb
int3
and
adc
es
data16
or
sub
shlb
and
xor
mov
inc
lcall
inc
cmp
cmp
sbbl
add
inc
push
inc
imul
xor
cmp
add
repz
add
scas
add
rclb
or
test
mov
xchg
cmp
ds
scas
cltd
test
in
lods
adcb
mov
es
inc
xlat
popf
les
data16
icebp
enter
add
fcoml
mov
fcmovb
mov
arpl
stc
pusha
call
adc
xor
sbb
sub
cmpsb
sub
es
sqrtps
add
adc
add
push
loopne
pop
jg
push
arpl
mov
cmp
or
cmc
add
stc
add
pushw
add
xchg
stos
ss
rolb
xchg
and
das
sub
loope
or
or
sbb
pop
fs
mov
daa
in
mov
add
outsb
jp
mov
xchg
add
pop
lahf
mov
push
mov
shll
xlat
inc
and
insb
hlt
or
call
add
cmc
mov
adc
test
or
inc
or
mov
mov
push
add
ret
jg
sub
and
sub
inc
ljmp
cmpsb
adc
xorl
or
or
aam
push
push
add
cmpsl
das
stos
out
xor
xor
testl
stos
push
cld
aaa
ljmp
mov
or
or
adc
sub
or
add
fdivrl
stos
lcall
gs
pop
or
and
int
pop
test
std
nop
mov
paddsb
pop
call
lock
in
or
stos
jne
inc
mov
rcrl
xchg
icebp
cmpsl
notb
and
sbb
or
push
jne
aad
ljmp
push
sbb
add
repnz
lock
pop
stc
mov
or
cmp
jae
dec
stos
xor
sbb
mov
xor
pop
jl
add
mov
mov
inc
cltd
aaa
out
or
inc
pop
adc
add
movsb
lods
out
adc
add
cmc
loopne
sub
aas
fisttpll
ss
or
add
insb
inc
mov
leave
mov
cmp
xor
push
push
ror
pop
stos
pushf
add
lea
cmp
lds
sbb
and
xchg
sbb
dec
or
daa
mov
sub
mov
sbb
lock
xchg
mov
cmp
adc
push
hlt
cmp
cwtl
cwtl
lret
inc
fisubl
inc
fistl
mov
inc
mov
sub
xchg
fcoms
pop
jl
xorb
fcompl
push
or
dec
pop
imul
add
add
shl
jmp
jo
add
push
enter
out
xor
add
push
add
add
aam
int3
imul
sbb
neg
xor
xchg
rcrb
inc
jmp
ds
jp
add
test
es
add
icebp
sbb
je
mov
add
add
call
out
orb
xchg
sub
push
pop
pop
not
out
sbb
cltd
mov
mov
enter
and
bound
pop
pop
inc
int3
loopne
cmp
sbb
xor
bound
nop
jae
pushl
add
jmp
iret
adc
call
not
notl
push
rclb
icebp
inc
push
ljmp
mov
xchg
lods
add
jo
dec
call
shrl
ficomps
push
xor
into
sub
sub
ret
ret
jecxz
mov
push
neg
dec
mov
or
lock
pop
adc
or
pop
jns
push
daa
out
inc
push
and
add
loope
jecxz
push
loop
bswap
dec
scas
sbb
sti
jg
sub
arpl
test
not
repnz
xchg
pop
fildl
nop
imul
lds
dec
xchg
pusha
out
aam
jmp
add
fildl
and
xor
adc
lahf
dec
mov
dec
push
pop
pop
add
cmp
mov
sub
les
mov
sbb
push
pop
push
jns
sub
enter
pop
pop
int3
pusha
mov
sub
int3
push
pop
and
testl
inc
mov
addr16
or
dec
sbb
jle
add
rorl
mov
cwtl
dec
xor
pop
aas
sarb
add
or
and
pop
push
roll
ljmp
sub
or
fisttps
add
ljmp
cmp
mov
jno
xlat
mov
mov
xor
xor
flds
mov
loopne
sub
movsb
fdivr
add
or
xor
push
pusha
pop
mov
mov
sbb
cli
pusha
cmp
ja
add
sbb
cli
stos
or
xor
out
pusha
imul
fwait
or
pop
pop
movsl
fs
xor
out
dec
cmpsb
inc
add
aam
shl
cmp
inc
outsl
scas
iret
out
call
cwtl
cmp
not
sub
fidivrl
hlt
lret
loop
imul
mov
aad
test
mov
call
push
ss
sti
pushf
cmp
inc
pop
rclb
out
push
imulb
fistl
add
mov
scas
out
repz
jnp
ret
push
dec
add
jae
sub
arpl
aam
inc
jns
jne
lret
loop
fbstp
mov
bnd
in
inc
das
and
cmp
mov
mov
rorb
aad
mov
int
incb
push
outsb
xor
xchg
sub
mov
xor
xchg
push
sbb
and
add
shlb
jg
popf
inc
mov
rolb
push
pop
arpl
aad
cmc
mov
gs
mov
sub
adc
cmp
jo
lock
mov
add
incl
add
xchg
fsubrl
icebp
mov
add
fldcw
jb
rorl
xchg
sub
adc
lock
std
js
pop
pushf
push
setne
xchg
iret
jle
fs
xchg
fwait
mov
or
adc
mov
mov
not
push
lods
sbb
outsb
sub
sub
in
pusha
into
xor
cmpsb
scas
or
push
sti
movsb
add
cmpsb
jl
std
pop
lret
subb
pop
in
pop
and
cli
cltd
or
test
mov
xor
mov
dec
lods
push
pop
sub
mov
popf
out
iret
pop
in
shl
dec
lods
es
andl
pusha
mov
pop
add
mov
push
sub
shlb
je
mov
xorl
sub
mov
push
mov
xchg
jnp
scas
cwtl
jmp
outsl
pop
push
lahf
sbb
popf
shll
idivl
cmp
pop
pop
mov
loopne
test
cmpsb
mov
add
mov
xor
fsubrs
fisttps
notb
add
xchg
inc
dec
gs
in
pop
inc
or
shl
stc
sub
cmp
xor
cmp
les
adc
dec
adc
pop
leave
std
test
js
test
insl
fs
pushf
dec
test
push
pop
pop
xchg
cli
xor
das
mov
and
ljmp
pop
and
test
add
inc
adc
dec
dec
push
clc
les
xchg
mov
pop
adc
add
inc
sbb
shll
xor
stc
jns
movb
sahf
cmp
inc
add
pop
sub
jno
or
scas
push
test
imul
data16
pop
mov
andb
movsb
xchg
inc
pusha
mov
xchg
mov
add
jno
dec
xlat
cmp
xor
ja
xor
popf
in
and
add
pusha
adc
mov
xor
insl
bndldx
sbb
adc
fcmovnb
and
addr16
arpl
loope
jmp
rol
adcb
pusha
cmp
dec
jbe
dec
cld
les
mov
mov
aam
ljmp
pop
in
or
fisttpl
sar
adc
pop
or
add
xchg
xchg
or
adc
faddl
ret
xor
ret
loop
loopne
movl
mov
adc
push
cmp
pusha
and
adc
adc
lods
shrb
std
push
fadds
outsb
fadds
repz
aad
sub
mov
imul
xchg
enter
push
scas
es
nop
shl
sub
test
sub
pop
add
leave
cwtl
lods
jmp
sbb
rcr
fwait
mov
xchg
xor
push
pop
aam
mov
call
cmp
test
lret
sti
and
loop
popa
arpl
les
test
xor
sub
cli
push
push
cmp
pop
or
cmp
subb
icebp
inc
dec
insb
add
iret
xor
arpl
testl
and
js
cmp
jo
stos
adc
jp
xchg
not
jns
xor
push
push
xchg
or
cmpb
imul
out
in
aam
adcb
insb
ja
dec
xor
and
or
inc
xchg
cmp
mov
aad
mov
ret
mov
jecxz
sbb
and
incb
out
sbb
cltd
shr
test
push
xchg
or
sbb
jae
dec
stos
scas
xchg
adc
in
add
xor
mov
push
pop
les
out
dec
mov
xor
rclb
jae
into
dec
lret
xchg
push
cmp
jle
and
mov
push
pop
stos
nop
sub
or
pop
clc
lods
es
add
xor
loope
mov
sub
cmpsb
lret
add
jne
not
inc
add
xor
dec
fdivr
adc
sub
mov
mov
xchg
dec
push
xchg
out
sub
jnp
mov
sbb
add
xchg
dec
inc
or
lret
pop
imul
adc
pop
inc
pop
insb
aaa
cltd
or
inc
add
sub
mov
fwait
xorl
cwtl
mov
push
push
lcall
add
fcomip
push
fdiv
dec
sbb
in
shl
fisubl
into
add
das
addr16
int3
jecxz
add
xor
adc
or
stos
dec
lret
dec
jl
push
cmp
xchg
lret
xlat
aam
jmp
ljmp
jle
xor
outsl
xorb
dec
aaa
xor
fisttps
inc
or
nop
push
test
addb
and
mov
push
fidivs
mov
add
loope
xorb
mov
inc
xchg
mov
sbb
in
add
aad
add
xchg
xor
pop
xor
adc
shl
int3
sub
ja
push
pusha
inc
pop
les
and
adc
xchg
addr16
dec
jmp
pop
movsb
add
insb
aam
icebp
jge
pop
jmp
sub
mov
and
mov
lods
jg
movsl
lret
cwtl
add
xchg
and
add
lahf
mov
push
jb
nop
fcompl
ja
mov
adc
inc
add
pop
loopne
jno
dec
mov
dec
push
repnz
pop
std
adc
dec
not
mov
cmp
loop
xchg
sub
stc
andb
sub
pusha
mov
out
fdivp
adc
cmp
rcll
pop
movsb
enter
push
push
pop
leave
hlt
clc
xchg
test
sbb
mov
or
mov
xor
mov
ljmp
cmp
repz
aad
nop
les
mov
mov
cmpb
mov
inc
js
mov
inc
lds
inc
cmp
es
gs
fsubrl
adc
inc
or
sbb
adc
cmpsb
and
add
jo
neg
mov
xchg
icebp
mov
jnp
sbb
cmpsb
rcll
push
pop
pop
add
aas
test
fsub
inc
cmp
inc
or
cmp
jae
or
je
inc
into
ret
mov
loop
aam
pop
xchg
xor
dec
mov
jno
and
fwait
xchg
arpl
xchg
fsubr
inc
sub
xor
sub
add
and
and
test
js
jle
jl
aaa
add
sbb
pushf
push
inc
cmp
int3
movl
icebp
lds
or
setge
popa
add
in
inc
inc
loope
loop
dec
stc
fiadds
addr16
in
mov
sub
and
xlat
nop
cwtl
shrl
adc
ltr
test
sub
push
mov
js
and
pop
loope
sbb
add
sub
not
pop
popf
or
mov
hlt
sbb
sbb
rcrb
inc
xor
faddl
mov
xor
pop
mov
dec
dec
int
addr16
xor
addl
enter
pop
rorl
push
cld
cmp
or
rorb
jno
js
sub
sub
fildl
mov
xor
fs
mov
ds
orl
or
and
clc
out
inc
sub
js
xor
loop
repz
and
orb
jne
inc
popf
push
rcl
test
push
xor
insb
incl
dec
xchg
aas
and
sub
lock
stos
dec
dec
jge
pusha
adc
test
repz
dec
push
mov
stos
ret
rclb
mov
or
popa
cmp
fisttpl
lret
repnz
dec
xor
dec
dec
lret
add
push
or
xor
idivl
shrb
push
xchg
lock
andb
push
push
pop
pop
inc
pop
fstpt
testb
mov
pop
and
dec
sub
out
add
push
inc
andl
dec
add
cli
test
ret
rcrl
mov
cwtl
xlat
fcompl
je
movsb
out
add
ja
xchg
stc
mov
push
mov
jns
or
xchg
mov
and
sub
test
mov
cli
divb
enter
push
cmp
fdivrl
push
xor
cs
cltd
mov
add
sbb
in
add
xor
adcl
cmpsb
mov
adc
or
data16
cwtl
mov
cmp
int
bsf
rclb
inc
dec
sub
fs
pop
dec
sbb
nop
mov
mov
fiaddl
inc
push
and
cltd
mov
scas
xor
cs
add
into
xchg
add
jbe
cli
int3
test
adcl
les
rorb
add
push
add
dec
xchg
dec
loop
repnz
arpl
lret
or
xor
and
inc
add
test
icebp
xor
ss
pop
rclb
adc
or
lock
jle
push
fimull
faddp
xor
add
repz
push
pop
pop
xchg
inc
add
cwtl
mov
jecxz
add
int
das
add
mov
xlat
adc
jae
ds
add
lret
inc
seto
or
stos
push
aam
add
not
sub
or
and
push
iret
pusha
cmp
inc
push
adc
pop
or
and
push
xor
in
dec
test
push
scas
xchg
leave
xor
sbb
pop
hlt
mov
add
outsl
in
mov
mov
test
ljmp
xor
add
push
popa
adc
sub
inc
push
std
das
mov
rorl
in
jbe
call
dec
out
add
mov
fsubp
mov
lret
mov
sbb
les
mov
popf
sbb
test
push
pop
lock
inc
test
and
push
pop
orb
ret
inc
add
push
push
or
pop
gs
xlat
dec
add
in
cmp
int3
rcl
sbb
add
scas
jbe
divb
jmp
repz
mov
pop
push
test
andb
test
insl
test
mov
add
imul
or
xlat
and
scas
addb
dec
lds
mov
mov
int3
ficoms
ljmp
pop
test
testb
and
lock
cld
in
cmpsb
xor
cmp
icebp
mov
neg
inc
or
dec
mov
xor
cltd
dec
pusha
cli
addps
mov
adc
test
mov
daa
add
or
pop
ret
mov
lcall
push
cmpsb
xor
add
out
fistps
or
inc
mov
aaa
inc
rorb
add
xor
dec
test
or
cmp
xchg
movl
pop
cmp
test
scas
adc
add
fsub
je
dec
cwtl
or
fs
pop
push
xchg
add
and
cmp
xor
cmp
jmp
or
mov
cmp
sbb
test
pop
add
or
cwtl
mov
test
sbb
mov
neg
cwtl
sarb
fcomps
push
inc
and
sbb
inc
adc
push
outsb
dec
mov
ljmp
shrl
dec
mov
sub
sub
mov
cs
ficoms
pop
flds
pop
cld
imul
leave
fs
push
add
mov
popa
jg
test
add
and
jbe
js
xlat
dec
inc
bound
adc
sti
xchg
into
sbbb
xchg
sub
cltd
pop
test
cmp
push
dec
sbb
outsb
xchg
push
sbb
inc
dec
and
aam
mov
out
add
in
stos
push
dec
loopne
call
daa
imul
push
add
mov
out
xchg
hlt
pop
xor
inc
or
add
pop
subb
repz
push
test
add
pop
dec
loop
and
push
cmpsb
enter
test
inc
inc
negb
xor
xor
add
movsb
and
mov
or
out
sub
add
pop
xchg
xchg
leave
pop
div
movsb
push
lret
icebp
add
pop
cmp
push
aam
dec
addb
mov
movsl
jno
jo
notl
addb
mov
dec
lahf
mov
jno
mov
arpl
ficoml
out
fs
das
jmp
or
aas
std
xchg
xchg
stos
enter
sub
cmp
push
add
and
shl
xchg
fwait
xchg
rcll
leave
sbb
add
arpl
mov
sahf
mov
inc
es
ret
pop
push
xchg
mov
or
sub
mov
and
in
xchg
sbb
pop
std
adc
xchg
cmp
sbb
insl
mov
mov
iret
mov
addl
movzwl
sbb
xor
dec
testl
adc
xchg
aas
imul
sbbb
stc
xor
loopne
add
mov
rcr
mov
sbb
sbb
stc
test
add
push
bsf
inc
jo
pop
lds
orb
adc
mov
int3
out
cmp
jo
ret
notl
mov
xor
dec
sub
loopne
mov
leave
adc
sbb
xchg
sarl
or
sar
adc
pop
orl
or
cmp
lds
cmp
imul
push
pop
pop
and
lods
xchg
out
sub
push
pop
test
push
inc
push
arpl
pop
push
mov
mov
xor
cmpsb
test
clc
cmp
dec
orl
and
nop
hlt
loope
jp
mov
jns
jecxz
push
add
les
pop
ljmp
push
xchg
ds
pop
dec
test
xor
mov
arpl
mov
rcrl
adc
xor
icebp
test
inc
sub
and
sti
inc
pop
jo
dec
adc
add
decb
inc
icebp
pushf
pop
cmp
ss
mov
and
icebp
xchg
popa
mov
push
or
lock
out
aas
add
cli
nop
fs
lret
xchg
ret
push
movsl
dec
addr16
cmp
adc
add
and
ss
mov
xchg
lcall
les
faddl
cmp
xor
adc
jl
gs
stos
mov
jo
daa
fisubl
lods
push
insl
mov
ss
add
pushf
push
loop
das
lcall
push
imul
inc
or
mov
stos
xchg
jge
ja
cmp
out
mov
add
adc
mov
or
bound
loope
pop
pusha
jp
jnp
push
or
pushf
and
add
push
loope
mov
sbb
shr
mov
cmp
lds
das
xor
neg
inc
push
dec
dec
xchg
test
push
cwtl
mov
jge
adc
movsl
dec
dec
jo
xchg
mov
xlat
inc
dec
add
jge
divl
or
dec
mov
push
addb
pusha
add
add
xor
sbb
add
push
inc
cld
mov
ds
xchg
push
daa
add
jno
movsb
or
pop
and
and
add
push
imul
push
inc
mulb
cwtl
clc
dec
sarb
insb
xchg
dec
or
push
js
dec
cli
xor
adc
sbb
lock
mov
pusha
bound
xor
cmp
neg
and
add
push
je
mov
popf
fimull
adc
mov
mov
dec
dec
mov
or
dec
push
add
pop
cmp
pop
xor
push
aaa
xor
mov
orl
fistpll
pusha
xlat
mov
inc
in
sti
mov
std
sub
cltd
fwait
andb
ja
mov
leave
add
mov
inc
mov
inc
add
shrb
xchg
mov
inc
sbb
std
lret
addb
xchg
rcrb
add
stc
btr
or
pop
lcall
sub
and
lock
jmp
lock
mov
mov
xor
addl
xchg
daa
xor
sub
jl
dec
mov
xor
daa
sub
xor
pusha
xchg
lret
mov
orw
outsl
test
pop
jg
push
sub
repnz
lods
adcb
or
aam
xor
lds
pusha
lcall
adc
cltd
xor
ret
btc
push
or
stos
stos
mov
mov
inc
fwait
dec
mov
loopne
xor
xchg
push
mov
xor
clc
mov
add
ret
cmp
mov
jp
jp
add
int3
inc
sbb
sub
outsb
cmp
dec
mov
mov
jae
jno
movsl
lcall
bound
cltd
ret
add
push
mov
sbb
aad
ds
mov
fcmovb
xchg
popa
sbbb
sti
cmpsl
sub
xchg
sbb
jl
add
and
ror
sarb
cmpl
adc
inc
lock
popf
stos
mov
add
fdivrs
cmp
int3
inc
pop
add
nop
adc
in
movsb
les
push
shr
add
jge
lods
fists
push
lret
xor
mov
ret
push
imul
out
cs
mulps
adc
or
sub
cwtl
and
mov
test
pop
xchg
xor
les
mov
cmp
xor
ret
cwtl
scas
mov
adc
mov
push
pop
adc
dec
add
jno
mov
in
and
xor
cli
mov
std
push
and
and
and
cmp
pop
add
cmpsl
imul
cmp
test
inc
movl
aam
cmp
imul
ss
lods
arpl
cwtl
int3
xor
pop
in
stos
pop
or
mov
add
mov
sub
aam
jbe
lock
cltd
jne
cmp
push
into
mov
lahf
mov
adc
sbb
lret
popf
jbe
mov
andb
ret
sub
bound
insb
xchg
push
mov
dec
cmp
cmp
add
pop
sysret
lcall
mov
loopne
loope
mov
sbb
mov
mov
int
jge
addr16
or
jae
and
outsl
xor
daa
jne
je
bound
iret
push
outsb
cltd
push
fs
arpl
mov
or
sub
push
arpl
push
or
add
pop
inc
sub
loopne
mov
mov
add
adc
cwtl
fbld
sbb
js
xchg
push
stos
or
cmp
xor
or
lock
push
arpl
or
push
or
mov
jno
mov
movsb
and
sub
sub
sub
inc
and
push
pusha
inc
inc
push
push
or
sub
int3
push
adc
icebp
dec
sub
inc
sbb
inc
push
push
xor
inc
cmp
sbb
icebp
pop
ja
shrb
fs
je
test
nop
and
inc
adc
push
cmp
movsl
push
xor
rclb
gs
and
nop
and
sub
and
ss
jae
arpl
and
push
pop
dec
sub
or
sub
adc
popa
sub
fs
incl
nop
sbb
xor
push
push
je
lea
addr16
pop
inc
enter
push
shrb
loopne
in
fsubs
pushf
sub
mov
push
dec
bound
add
jmp
mov
enter
push
sbb
mov
sub
cmp
cmp
sbb
mov
and
xchg
or
and
xor
call
fmull
js
popf
xor
cmp
mov
mov
push
add
les
call
testb
je
mov
or
std
pop
test
xor
or
sbb
mov
and
push
push
mov
xorl
jne
push
add
xchg
cmp
jne
xor
pop
lret
fadds
add
rorb
lea
rcrb
sbb
push
add
cli
fs
out
dec
adc
push
inc
add
pop
je
repnz
call
cwtl
dec
mov
sbb
push
add
or
adc
cltd
bound
inc
test
add
mov
push
lret
xchg
dec
mov
nop
push
push
push
mov
cld
adc
ljmp
add
push
pop
fstl
mov
or
push
jne
add
call
inc
xchg
or
or
inc
add
push
in
rorl
jne
pop
sbb
cmp
jne
ret
sbb
call
mov
sub
mov
push
je
pop
clc
mov
xor
mov
jno
add
jb
std
jno
sbb
ja
and
sbb
inc
mov
sub
inc
sub
jmp
cmp
pop
jb
add
push
clc
dec
xor
iret
inc
sub
jmp
fldcw
test
stc
jne
iret
xchg
adc
rclb
ja
aam
test
or
or
cmp
out
sbb
pop
xchg
sub
or
cmp
push
mov
jl,pn
out
adc
add
jge
dec
rclb
test
je
rcl
loopne
dec
lods
fs
mov
mov
dec
push
clc
stos
rcll
and
call
popa
cmp
push
test
pop
jns
mov
cmpl
xchg
ja
fcompl
insb
in
std
dec
and
and
cwtl
jecxz
or
pop
pop
push
movsb
sbb
popl
lds
adc
sbb
and
jae
nop
sbb
movb
ja
xor
push
xchg
jg
jne
push
jae
xchg
or
mov
sti
inc
pop
jne
jmp
pusha
add
adc
sub
psubsw
or
adc
sbb
adc
mov
dec
test
ljmp
add
xchg
ret
xchg
and
xchg
mov
push
dec
sbb
or
inc
fnsave
pop
sarl
add
xor
fstp
clc
call
add
push
pop
inc
adc
sub
test
shrl
jmp
adc
mov
mov
or
imul
xor
mov
and
push
xor
jmp
add
pop
leave
dec
divl
sub
inc
xchg
test
ret
sbb
jae
lods
or
out
fiadds
call
inc
loop
adc
xor
mov
aas
push
xchg
add
cmc
pop
aam
cmp
jg
sub
jb
xlat
push
sbb
clc
pop
ja
je
aad
lea
push
inc
mov
leave
nop
stos
call
and
mov
cmp
xor
or
call
jns
aaa
xchg
adc
xchg
pop
arpl
cli
ret
xchg
xchg
add
je
es
or
add
jle
fiaddl
adc
adcb
or
and
xor
mov
out
lcall
jmp
adc
inc
mov
sbb
aad
ds
push
jmp
push
imul
cmc
jne
inc
dec
nop
sbb
jp
and
cmpl
test
adc
or
adc
mov
mov
mov
mov
sbb
jecxz
ss
add
aam
or
cmp
jae
hlt
iret
xorl
int3
push
mov
jl
pop
and
mov
ret
mov
dec
cmp
sub
or
adc
repnz
cmp
fistl
stos
mov
sbb
sbb
dec
pushl
out
jnp
push
shrb
inc
add
inc
push
jle
movsb
adc
jbe
and
aad
or
sbb
jo
clc
setbe
push
mov
cmp
mov
adc
add
xor
cmp
jne
mov
out
bound
movb
pop
pop
jecxz
mov
push
xchg
mov
ret
jmp
in
or
pop
les
dec
stc
repnz
test
test
mov
enter
push
mov
popl
mov
hlt
xchg
adc
cmp
mov
dec
add
les
pushf
xor
adc
pop
jne
sub
int
mov
mov
pop
loopne
push
cmp
cmp
adc
dec
or
jg
add
test
jns
add
add
rclb
push
and
xchg
ficoml
mov
or
mov
test
sbbb
dec
pusha
in
shll
add
adc
call
adc
dec
push
mov
inc
lret
cwtl
fwait
sbb
add
cli
adc
add
arpl
pop
xchg
insb
mov
or
or
or
or
sbb
add
sbb
cld
cwtl
in
jg
add
inc
adc
cmp
outsb
or
push
push
lret
sub
addb
push
add
ret
pop
or
dec
or
push
adc
add
pop
ficoml
sub
scas
enter
ret
loop
and
testb
std
and
add
cmp
lods
push
inc
push
call
add
test
fs
lret
fdivs
add
or
pop
pop
pop
clc
cwtl
fsubs
add
jne
cmp
sub
xor
inc
push
or
cmpl
mov
or
dec
pop
push
adc
ret
cmpsl
adcb
call
aaa
sub
movsl
jg
aad
cmp
sarb
leave
fiadds
je
push
xlat
scas
and
add
adc
cli
mov
cmc
insb
mov
test
fildl
aad
jae
test
lods
push
std
add
push
ret
lea
sbb
call
jl,pn
pop
push
mov
les
dec
push
mov
push
or
mov
push
add
sub
sbbl
mov
add
fldenv
nop
dec
hlt
aam
adc
pop
cwtl
lahf
adc
jmp
dec
sti
inc
adc
mov
sbb
jg
add
push
or
pop
mov
lret
push
pop
mov
or
dec
or
or
dec
fwait
inc
pop
jmp
sub
rorl
adc
pop
cltd
xor
sysexit
movlps
int
inc
loop
and
fdivr
call
dec
or
sbb
push
and
mov
inc
push
roll
fsubs
xor
in
push
test
add
and
or
ljmp
pop
or
pop
insb
xchg
and
and
popf
lret
xchg
jno
js
outsl
imull
andl
js
xchg
pusha
dec
data16
aam
icebp
call
dec
rorl
mulb
pop
mov
dec
ss
pop
daa
int3
lea
push
mov
outsb
xor
pop
lcall
clc
add
pop
test
mov
subb
jbe
ljmp
mov
adc
int
or
mov
test
leave
or
xlat
xchg
xor
ds
mov
sub
je
mov
push
dec
or
aad
jne
sbb
lcall
push
cmp
sbb
sub
cmpl
cwtl
repz
mov
add
icebp
dec
mov
lret
out
into
xor
cmc
sub
leave
mov
mov
mov
adc
xchg
out
pop
jmp
sub
mov
dec
cmp
lea
push
dec
dec
leave
pop
insb
in
xchg
push
mov
movsl
mov
jne
pop
call
je
or
clc
and
jle
nop
mov
xchg
jp
leave
push
push
xor
das
push
add
ja
data16
fidivrl
mov
adc
jg
mov
jns
or
add
scas
inc
inc
sbbb
sbb
add
jl
hlt
jl
and
cmp
or
dec
scas
or
mov
movsl
push
mov
sbb
mov
inc
jmp
or
xchg
leave
xor
push
outsl
test
adc
and
int
push
and
and
xchg
nop
push
push
pop
mov
mov
and
push
xor
or
lods
jb
pop
jmp
or
fidivs
push
add
mov
or
jmp
or
les
mov
rorb
mov
or
call
or
xchg
ret
scas
sbb
scas
dec
xor
mov
sar
cmp
dec
test
test
push
adc
add
lea
jo
movsl
push
faddl
mov
test
je
pushf
and
cli
add
cld
adc
xorl
sub
or
or
push
mov
or
js
mov
cmp
inc
mov
cmpsb
insl
inc
and
pop
mov
stos
popa
in
out
and
and
jmp
lock
movl
mov
pop
pop
fucomp
clc
mov
rolb
add
add
iret
jge
jge
dec
pop
sub
nop
imul
and
shll
testb
das
push
dec
shll
mov
or
pop
sub
cmp
jmp
xor
pop
push
or
mov
jl
lret
push
push
push
sbb
dec
adc
pop
xor
add
and
and
jmp
aad
sub
mov
dec
dec
js
inc
lahf
push
add
push
cmp
mov
mov
adc
jmp
gs
xchg
rorl
inc
pop
imul
cmp
xor
xchg
loop
dec
clc
cs
jbe
and
fcoms
jmp
push
je
xorl
adc
das
jne
mov
push
add
adc
cld
mov
sbb
inc
and
and
jo
mov
decb
mov
xor
mov
cmp
mov
sarl
mov
cmp
xchg
call
or
inc
adc
dec
jge
out
cltd
xchg
jl
dec
addl
inc
xor
sbb
dec
add
mov
inc
je
sub
addl
test
je
mov
mov
push
xor
pop
or
ret
push
jmp
enter
xor
sub
sbb
adc
cmc
xor
nop
jbe
or
and
jecxz
test
subb
sub
dec
inc
or
xchg
mov
dec
subb
jne
mov
inc
cwtl
xor
mov
xchg
xlat
pop
dec
inc
and
xor
jmp
aad
cmp
mov
or
ret
sahf
or
pavgw
dec
xlat
movb
divl
je
xchg
inc
add
rep
incl
movsb
and
inc
je
cld
inc
jl
movsl
add
sbb
inc
sub
sub
call
sbb
scas
movzwl
inc
lock
add
repnz
rdtsc
shlb
mov
add
jnp
and
lcall
or
in
addl
add
or
jl
insb
or
and
fwait
mov
pop
dec
push
iret
insb
dec
clc
cmp
mov
bnd
dec
jae
shll
pusha
cmp
and
sbb
adc
push
pop
je
jb
inc
leave
mov
mov
int
in
call
scas
sbb
sbb
lret
push
push
int
mov
divb
sbb
jb
or
fdivs
in
and
or
jne
push
sbb
lock
dec
or
cmp
push
sbb
dec
inc
jmp
push
mov
xchg
mov
add
loopne
mov
shll
or
stos
movsb
adc
stos
pop
shrb
incl
test
or
loop
sub
add
push
rcll
dec
mov
and
inc
stc
add
je
mov
push
ja
bound
sub
and
js
pop
push
pop
test
push
xor
dec
and
cmp
and
add
or
and
ja
and
lea
add
xchg
fmuls
pop
or
dec
mov
aam
cmp
jg
push
add
fdivrs
js
pop
sub
sbb
lds
mov
sub
jb
xchg
and
adc
pop
add
or
mov
jmp
add
add
pop
xor
mov
jae
dec
push
addb
cmpsb
cltd
inc
and
sub
adc
mov
jl
je
or
frstor
adcl
loop
scas
loopne
fldt
fidivs
jne
adc
je
sbb
pop
stos
rorb
and
sub
dec
mov
dec
mov
inc
icebp
stc
pop
rclb
sub
stc
jmp
mov
inc
pop
addr16
adc
out
ret
cld
cmpb
or
add
mov
push
ret
hlt
inc
adc
xchg
cwtl
push
pusha
and
imul
shrl
inc
mov
movsl
aam
hlt
pop
adc
out
test
hlt
and
mov
adc
jecxz
inc
add
leave
sbb
mov
lds
mov
cwtl
jbe
imul
fiadds
cwtl
and
mov
and
vmovsd
js
inc
add
xlat
fadds
nop
add
dec
add
push
in
int3
into
sbb
ret
xchg
push
pop
fsts
enter
nop
mov
cmpb
and
daa
push
lret
into
pop
addb
aas
sbbl
pop
push
mov
addr16
leave
jb
jp
push
xchg
and
cld
gs
mov
jo
test
lds
push
iret
decl
js
hlt
mov
push
stos
mov
cmp
jmp
cmp
pop
out
sub
inc
imul
lea
divl
jl
xor
cmp
decl
xchg
push
mov
dec
mov
mov
add
push
sbb
cld
sarb
repnz
test
inc
sbb
nop
fildl
daa
movsb
lahf
outsl
inc
pop
stos
clc
scas
adc
jecxz
cli
inc
pop
pushf
mov
adc
mov
aam
testl
xchg
iret
shll
aam
faddl
fdivrs
mov
push
add
mov
cmp
dec
dec
in
xchg
add
cmp
jo
cmp
add
mov
movsl
mov
popa
out
xchg
add
and
add
repz
mov
addb
fwait
xchg
and
les
lock
xor
ret
push
adc
orl
pop
jne
mov
or
and
or
jp
jne
mov
push
add
rclb
lea
cld
push
push
jbe
mov
mov
pop
xor
push
pushl
int3
mov
sbb
inc
hlt
xchg
xchg
push
int
clc
push
mov
lds
adc
lds
test
mov
sar
lahf
clc
jmp
or
and
test
clc
push
add
inc
outsl
jb
popa
outsb
js
cmp
jo
imul
inc
push
push
pop
dec
popa
jae
push
inc
insb
jne
xor
fldcw
cmpsl
add
pusha
jo
xor
add
push
inc
rep
fs
sub
dec
pop
dec
rcrb
sub
inc
and
hlt
daa
sbb
shrb
push
call
test
push
or
shlb
andl
or
call
mov
mov
lahf
stos
orb
rclb
jmp
pop
adc
shl
loop
sub
rol
push
lock
dec
fmull
adc
sbb
in
cmp
lock
push
fdivs
push
jnp
mov
and
sbb
jne
mov
scas
lock
fbstp
jbe
popa
shl
call
fadd
data16
ret
rcrb
call
dec
bound
push
xchg
jmp
les
or
add
scas
loope
pop
inc
push
testb
ret
pop
add
sub
clc
je
jnp
fucomi
pop
cmpl
inc
mov
cwtl
repz
xchg
in
mov
cmp
and
mov
adc
xor
call
shlb
icebp
pop
jmp
jb
sbb
js
push
push
push
pop
ss
rcll
ficomps
add
mov
mov
in
add
movl
out
or
pop
or
pop
pop
pop
orb
fldcw
sub
or
je
test
pop
pop
inc
jno
sti
dec
and
cmp
clc
lods
push
test
ror
xchg
call
cmpb
adc
popw
in
push
call
mov
pusha
call
push
ret
bound
and
or
push
movsl
sbb
pop
push
push
jmp
dec
filds
sbb
jmp
jmp
or
movsbl
clc
clc
xchg
add
add
xor
sbb
pop
adc
mov
sbb
adc
push
and
adc
ja
jns
ds
lahf
mov
jl
or
cmp
inc
mov
push
sbb
cld
call
adc
or
test
push
lcall
mov
cld
cmpl
push
je
call
inc
sbb
jbe
xchg
das
mov
mov
jne
mov
js
and
or
jmp
or
push
cmp
adc
mov
cmc
cmp
jo
dec
push
add
cmp
leave
sbb
fcmovne
push
mov
out
sub
mov
or
push
or
add
inc
out
push
push
or
dec
insb
popa
sub
mov
jmp
add
xchg
sub
xlat
or
je,pt
mov
lcall
or
and
test
cmp
pusha
or
fadd
sbb
out
loopne
pop
add
push
push
push
push
enter
inc
pop
inc
insl
mov
aas
ret
mov
mov
mov
adc
inc
or
pusha
add
std
mov
or
popf
dec
stos
jg
scas
aas
sub
adc
adc
mov
jnp
lea
dec
push
cmp
lods
fs
mov
sub
xor
outsb
mov
mov
push
int3
xchg
xor
lret
or
xchg
xchg
cs
xor
cmp
jg
je
in
inc
or
mov
outsb
xchg
dec
jmp
add
aas
sub
xchg
ss
xor
push
cmp
lds
sub
inc
adc
push
and
cmp
std
xchg
das
push
pop
xor
xchg
enter
leave
dec
pop
adc
sbb
push
and
rcl
rcll
ror
rcll
rcr
rorl
rcr
rorl
rcr
roll
ror
aas
adc
or
pop
leave
inc
push
or
dec
pop
pop
ret
mov
jo
andb
xor
xor
jno
dec
rclb
and
xorb
es
int
cmp
add
int3
inc
sbb
je
sti
jno
outsb
add
mov
fdivr
out
fistpl
inc
cs
dec
jl
or
int3
sub
or
and
jmp
adc
call
mov
outsl
dec
in
cmp
xchg
push
ret
sub
adc
or
xor
insb
loope
pop
jp
or
cmp
xor
and
add
jg
or
cwtl
shlb
imul
test
jle
dec
jl
inc
xor
lcall
dec
jmp
sub
push
and
enter
ss
sub
nop
pusha
or
in
lods
dec
sub
inc
lret
repz
sbb
sub
sub
jg
pusha
pop
bound
mov
les
movsl
popl
dec
mov
sbb
cmp
push
dec
les
add
cld
ja
add
mov
push
xchg
int
nop
test
sbb
aad
pop
mov
mov
push
push
inc
dec
pop
push
into
sbb
je
sbb
add
call
push
inc
cmpsb
xchg
mov
or
aam
xorl
and
les
adc
fnstcw
dec
cwtl
push
jle
mov
sub
lcall
add
lahf
out
in
inc
push
push
in
leave
add
pusha
inc
addb
jmp
pop
fcoml
push
push
js
mov
dec
or
in
dec
jno
mov
ret
mov
idiv
add
pop
xor
rorl
push
sti
mov
dec
js
in
adc
mov
andl
pop
stos
cmp
fsts
call
and
or
jle
xchg
sbb
mov
pop
sbb
outsl
or
pushl
push
and
aaa
xchg
test
pop
push
cmp
push
sbbw
adc
push
and
jbe
mov
imul
push
push
call
in
fwait
aad
sbb
add
ss
or
ret
rcrb
mov
jo
dec
aas
and
stos
push
jne
icebp
push
movsl
pop
or
mov
ret
inc
cwtl
or
jnp
jbe
sub
subb
cmp
xor
add
lahf
add
call
pop
sub
adc
jne
std
mov
in
inc
or
lcall
sbb
inc
adc
cmp
mov
add
or
push
mov
mull
nop
xor
xchg
or
je
arpl
sbb
cmpl
pop
xchg
repnz
xor
inc
sbb
stos
loope
and
lock
xchg
bound
test
inc
call
dec
clc
push
mov
sub
sbb
push
push
dec
orb
jl
xor
mov
mov
and
faddl
mov
test
movl
or
pop
mov
int3
fcmovbe
nop
int3
push
and
inc
daa
jg
test
inc
sar
sub
jnp
pop
sbb
fisubl
add
outsb
push
xchg
dec
lret
or
aam
sarb
adc
insl
loopne
out
js
sbbb
inc
add
push
xchg
rorb
mov
cld
sti
and
push
pop
nop
xor
xchg
iret
xchg
clc
mov
stc
leave
insb
sub
mov
out
fdivrs
cmp
int3
jne
imul
add
inc
add
push
sub
cld
cmpsl
cld
push
fstps
in
test
jmp
add
cld
pusha
add
sub
push
jb
and
call
jl,pt
mov
lret
call
sub
ja
xchg
pop
rorl
jmp
and
adc
xor
xor
jge
xor
fs
adc
mov
aam
nop
mov
xor
stos
pop
mov
popf
or
push
or
add
mov
outsl
inc
mov
cmp
mov
pop
cltd
inc
push
xor
bound
or
pop
pop
or
or
jmp
or
add
mov
sub
cmp
mov
inc
dec
dec
nop
dec
push
and
imul
push
rcrl
shrl
dec
pusha
xchg
add
pop
and
es
mov
mov
cld
jns
aas
aas
inc
cmp
test
std
movsb
xor
loop
jns
push
xlat
xor
cli
cmp
mov
mov
adc
cmpsl
push
hlt
push
pop
xor
and
inc
rolb
mov
inc
orb
or
dec
stc
subl
sbb
rcll
cld
add
xchg
and
testl
add
addps
and
mov
addr16
clc
std
mov
mov
lret
aad
push
dec
push
inc
sbb
test
call
cli
orl
or
or
es
inc
dec
pop
in
cltd
adc
sbb
mov
mov
dec
jmp
cmpsb
mov
mov
mov
in
repnz
adc
daa
adc
into
or
pop
fstps
xchg
or
and
mov
and
and
daa
push
sti
ds
leave
or
push
loop
push
int3
sub
add
add
push
shr
iret
decb
in
pop
cmp
jne
dec
mov
or
add
xchg
and
outsb
je
or
jmp
push
add
fwait
pop
cmpsl
mov
sub
adc
pop
mov
adc
sbb
jae
add
jmp
and
sbb
pop
xor
pop
or
jmp
sbb
cmpsb
aad
push
clc
inc
and
nop
mov
faddl
mov
cmpb
fidivl
xor
out
das
jb
fcoms
push
mov
mov
cmp
and
or
pop
mov
clc
sub
jnp
data16
sub
es
add
fidivrl
sub
nop
mov
sbb
add
or
gs
mov
push
adc
scas
sbb
test
and
or
dec
jl
addb
and
icebp
sarb
aaa
add
stc
add
lea
dec
adc
push
add
cli
movsb
aad
daa
lret
or
cmpb
enter
cmpl
cmp
add
jbe
ret
in
loopne
inc
sub
lahf
jnp
out
cld
pop
movb
jne
dec
xor
mov
xchg
icebp
jl
jmp
cmp
rolb
cmpsb
mov
lret
sbb
dec
or
mov
push
cmp
lea
lcall
ret
pop
mov
sbb
push
push
dec
dec
adc
and
push
mov
inc
and
loop
inc
jl
push
cmp
dec
mov
inc
repz
jo
dec
xor
xchg
int3
les
nop
imul
in
add
and
or
and
or
mov
bsf
adc
or
xor
mov
jmp
mov
push
or
adc
push
add
mov
inc
or
pop
in
add
adc
and
adc
inc
cli
sbb
aam
stos
adc
xor
jo
mov
xchg
lret
inc
and
pop
and
sbb
push
int3
adc
push
sbb
mov
jmp
lock
sub
pop
call
ja
shll
in
clc
addr16
xor
pop
icebp
rclb
xor
mov
addb
out
cmp
cmp
adc
aaa
or
cs
aas
dec
rorl
mov
hlt
mov
add
outsl
cld
jne
jo
push
rorl
sub
jle
mov
cmp
lock
leave
je
adc
xchg
or
dec
or
xor
or
or
imul
adc
or
filds
adc
test
mov
dec
adc
jmp
adc
push
xor
mov
and
or
add
push
or
sbb
pop
jmp
and
push
rcrl
adc
xor
ds
adc
inc
xor
cmp
inc
mov
jne
cmpsb
ljmp
or
js
jmp
mov
divl
popa
test
and
and
cmpsb
notb
dec
jne
jmp
and
xor
jmp
inc
mov
lcall
adc
cltd
mov
add
pushl
cwtl
incb
pop
in
lret
inc
ljmp
stc
movsb
lds
cmp
mov
in
pop
inc
popw
ds
arpl
push
push
mov
scas
dec
dec
pop
nop
mov
adc
mov
ja
mov
cmpsl
or
or
in
lock
add
add
adc
and
add
mov
sbb
cmp
mov
inc
or
dec
xor
adc
or
push
sbb
clc
xchg
mov
loop
cmp
add
push
mov
pop
es
dec
push
movsb
push
pop
nop
jp
pop
add
or
jne
shl
out
das
rcr
shlb
int
mov
ret
xor
nop
not
loopne
shl
in
or
out
jb
push
sbb
faddp
add
inc
loop
xchg
bound
div
push
out
jmp
mov
and
xchg
push
xchg
sub
jmp
and
movsb
pushf
xchg
lods
mov
jmp
xchg
xor
add
sti
cs
subl
push
xor
test
jg
sbb
jge
mov
shll
fs
cmp
add
loop
sub
lock
dec
imul
sbb
sub
in
push
rorb
call
mov
cmp
xchg
inc
test
fadd
testl
in
out
push
leave
cmp
or
pop
andw
xchg
add
xor
into
jge
dec
sbb
xchg
out
mov
imul
xchg
or
sub
movsb
orl
push
in
test
jmp
decl
lods
imul
fmuls
push
jae
in
mov
rolb
arpl
popf
xor
shll
int3
in
push
rclb
arpl
lods
jmp
enter
add
test
out
cmp
ret
movl
mov
or
pop
push
sub
push
mov
add
push
pusha
cmpl
sub
int
or
or
add
jl
inc
outsb
sbb
and
int3
ret
ret
pop
mov
xchg
dec
jne
lret
and
sbb
inc
push
andl
push
push
adc
lods
mov
xor
cmp
lock
jne
push
mov
xchg
push
adc
xchg
jbe
push
xor
add
daa
xor
sbb
popf
dec
es
adc
pusha
dec
jle
push
push
mov
jns
xchg
clc
pop
pop
test
pop
int
cmp
rorl
popf
and
fadds
adc
push
mov
bound
call
les
dec
adc
xchg
outsl
jne
ss
lods
or
xor
or
shl
adc
lcall
or
mov
mov
cmp
adc
stc
jecxz
jmp
or
test
add
out
lods
lret
xchg
mov
addr16
clc
cltd
lea
movsb
sub
test
mov
cmc
pop
rorl
xchg
and
call
dec
loop
lods
iret
dec
mov
push
frstor
sub
adc
stos
adc
add
jne
cltd
lret
cmp
into
orl
add
jne
rorb
call
orb
notl
loop
sub
movb
fisubrs
mov
adc
push
push
scas
cmp
adc
rolb
roll
cli
movsb
cmpsl
sbb
lahf
mov
push
push
xor
xor
jle
dec
ret
cltd
in
sbbl
lahf
xor
popa
adc
sub
push
add
ret
inc
dec
jg
sub
nopl
ret
dec
xchg
dec
dec
gs
inc
inc
lahf
popa
testl
bound
daa
dec
scas
dec
xchg
add
gs
out
push
xor
cs
shlb
outsb
sbb
push
inc
adc
mov
dec
mov
lea
outsl
push
xor
or
iret
push
inc
fdivr
cmpsl
ljmp
scas
push
nop
add
and
hlt
cmp
repz
dec
lods
inc
push
cmp
inc
mov
cmp
mov
pop
sub
cmp
push
and
push
dec
push
sub
test
inc
cmpsb
and
insb
dec
push
push
popa
dec
dec
into
push
mov
lahf
scas
add
sbb
fildl
xor
cmpb
jmp
or
or
and
mov
xchg
and
xorb
cmp
adc
adc
data16
inc
mov
shrl
shlb
movaps
xchg
add
pop
push
or
jns
fs
sbb
and
shll
and
cmc
loope
cmpsl
and
fsts
sbb
data16
popa
das
jb
in
es
sbb
jae
sbb
mov
loope
mov
dec
outsb
adc
test
enter
push
dec
test
pop
clc
xchg
mov
xchg
add
mov
sbb
and
cmp
popf
in
mov
int3
push
mov
push
iret
movsb
icebp
call
lods
mov
cmp
out
dec
cmpsb
sub
and
mov
sub
xchg
add
mov
cmp
cld
jne
leave
jp
mov
mov
ljmp
cmpsb
xor
xchg
add
aas
jecxz
fs
jmp
in
popl
leave
jne
jae
imul
je
xchg
rsqrtps
loopne
mov
addr16
mov
cmp
cmp
roll
sub
sbb
add
and
outsb
or
push
pop
aaa
or
sub
enter
jo
adc
dec
test
lods
add
mov
pop
cmp
or
inc
sbb
sub
loope
or
in
mov
inc
add
jae
movb
push
inc
cltd
fdivp
mov
pcmpeqb
jmp
jno
mov
mov
test
sbb
cmp
inc
test
call
push
mov
cmp
xchg
arpl
or
xor
dec
hlt
adc
fadds
or
or
adc
nop
mov
in
xor
push
dec
aas
int3
mov
xor
dec
aas
int3
divb
mov
jnp
aad
push
mov
mov
sub
mov
jnp
inc
push
test
or
push
adc
mov
xor
fwait
insl
lret
es
cltd
pop
ljmp
inc
or
sub
add
adc
hlt
sub
imul
xchg
cwtl
gs
mov
fcmovne
mov
mov
outsl
cmp
lock
es
scas
and
sub
mov
ret
adc
mov
sbb
or
call
jle
xor
mov
jnp
pop
test
dec
cmp
rorl
aaa
cmc
dec
sbb
test
sbb
imul
rcll
enter
jl
mov
or
cli
adc
inc
adc
or
ljmp
add
js
subl
movsb
xor
mov
cmp
push
mov
jb
cmp
xchg
push
jl
in
sub
or
inc
sbb
add
fs
je
lahf
je
int3
or
mov
lods
cmp
and
je
insb
cmp
mov
and
aad
cmpb
dec
mov
xchg
inc
scas
aas
or
loopne
or
sbb
mov
jae
inc
mov
shl
pop
xchg
and
or
in
jo
mov
dec
or
testl
icebp
jb
cmp
sbb
mov
and
xchg
test
cli
cmp
sbb
mov
and
mov
loope
loop
jecxz
in
in
out
inc
out
call
xchg
xor
dec
sbb
cmpsb
or
and
xchg
out
enter
jb
cmp
sbb
mov
and
xchg
enter
jb
cmp
sbb
mov
and
xchg
fmulp
shlb
ret
mov
and
xchg
enter
jb
cmp
sbb
mov
and
xchg
into
enter
jb
cmp
mov
mov
mov
mov
mov
sbb
mov
and
cmpsb
mov
inc
sub
cwtl
mov
or
add
gs
lock
popa
cwtl
and
or
shlb
push
add
xor
jecxz
push
nop
jl,pt
bound
push
nop
sub
adcb
in
mov
sub
movb
inc
js
gs
add
outsl
outsb
push
aam
and
sub
cmp
mov
nop
push
les
cmp
adc
jne
je
dec
gs
outsl
jb
cmp
adc
test
and
inc
dec
outsb
fnstsw
js
pop
nop
js
dec
dec
or
je
clc
popa
insb
cwtl
or
pop
mov
cmp
adc
insb
test
push
jle
inc
pusha
jne
or
gs
or
mov
in
add
inc
inc
imul
outsl
nop
push
loopne
mov
sbb
popa
outsb
addr16
adc
push
stc
test
or
test
add
xor
xchg
scas
pop
fs
jb
inc
or
dec
das
adc
mov
nop
in
jnp
and
sahf
dec
and
jbe
sbb
fs
jo
inc
pop
mov
ja
fs
dec
sub
pop
pop
enter
insb
and
push
popa
insb
hlt
pop
pop
enter
or
pop
nop
dec
pop
scas
pop
dec
inc
jae
mov
push
outsl
cmpsl
fwait
and
and
sub
sbb
mov
xor
or
mov
pusha
jnp
and
int3
aam
adc
arpl
rorl
mov
arpl
push
dec
jb
push
insb
gs
nop
sbb
pop
or
pop
ja
push
inc
push
je
arpl
mov
and
or
je
imul
int3
jnp
and
xchg
enter
popa
or
sub
out
cmpsl
pop
push
dec
enter
or
ret
popa
outsl
xchg
fs
enter
inc
mov
jb
jae
mov
ftst
lfs
cmpsb
pop
and
lock
pop
xchg
xor
popa
daa
data16
jno
pop
addl
xor
rcll
dec
or
or
jae
into
inc
insb
mov
pushf
jl
inc
xor
xor
and
cltd
nop
push
das
cmpb
div
cmpsl
pop
or
add
adc
xchg
aam
inc
pusha
lret
mov
mov
add
popf
addr16
inc
mov
mov
lret
mov
aas
push
push
adc
xchg
fimull
add
dec
aam
jmp
cmpsl
adc
mov
adc
inc
jb
mov
and
sbb
dec
sub
movsb
cmp
in
or
lret
loop
add
jmp
jne
pop
bnd
xor
bound
or
movb
rorl
mov
xchg
aam
das
jecxz
dec
add
addb
lock
cld
in
xor
je
sbbl
mov
loop
xor
js
dec
push
push
mov
and
movl
testl
scas
cwtl
cmp
inc
sbb
jle
sbb
inc
clc
push
mov
add
inc
push
jmp
sub
and
adc
loopne
push
inc
sub
inc
out
lret
adc
pop
and
mov
ss
or
or
xor
mov
dec
sub
xor
fxch
clc
testl
push
adc
call
pop
testl
mov
jnp
test
add
sbb
scas
push
push
jmp
dec
movsb
xchg
mov
push
stos
cmp
fs
sbb
aam
popf
mov
repz
shll
mov
jg
mov
mov
ret
inc
inc
push
and
in
js
cmpb
jne
dec
lock
jg
push
xchg
out
int
mov
add
jnp
cmp
jne
push
mov
out
xor
leave
jmp
dec
es
rolb
inc
fcoms
inc
xor
mov
jl
push
and
inc
dec
addl
cmp
mov
push
xor
into
sahf
push
push
pop
lods
cs
cmp
xchg
sarl
je
or
popa
lock
lea
push
add
inc
sub
in
adc
pop
call
xchg
loope
add
push
or
adc
and
mov
stos
aaa
ffreep
imull
xor
or
cmpsl
stos
lock
hlt
push
hlt
add
dec
loopne
fisttpl
adc
push
ficoms
sbb
rclb
ret
stos
daa
outsl
fimuls
nop
fcoml
xchg
pushf
push
xor
sub
mov
mov
jns
lods
loop
nop
aam
push
mov
sub
not
mov
cmp
clc
shr
dec
cmpsb
jle
adc
pop
pop
gs
push
push
mov
rorb
xor
push
xorl
sub
sarl
pop
aam
pop
fldenv
push
pop
xor
incl
inc
lcall
dec
sub
and
dec
cmp
rolb
jp
sub
sbb
cli
sbb
mov
push
add
je
lds
inc
cwtl
gs
or
flds
lods
test
sub
add
xor
aad
jne
or
dec
out
rorb
rcr
leave
enter
cmp
pop
dec
rol
out
add
or
in
xchg
rolb
push
add
outsl
sbb
repnz
xsave
pop
or
adc
add
sub
aad
mov
call
les
daa
scas
push
pushf
cmp
outsl
in
rcr
jp
pusha
adc
sub
loopne
mov
mov
test
mov
add
jge
push
or
jb
adc
cli
sbb
and
jne
repz
mov
mov
das
repnz
std
mov
into
mov
xchg
sub
pop
push
mov
hlt
shll
lods
jmp
mov
mov
fldcw
mov
fadd
jne
push
push
jmp
sbb
pop
mov
fs
push
xor
cmpb
jl
jl
mov
or
and
stos
xchg
push
ret
jge
decl
push
call
pop
mov
mov
cmp
sahf
xor
call
imul
mov
add
xchg
incl
xchg
push
in
jmp
pop
cmp
or
xchg
decb
mov
add
pop
sbb
push
test
call
sarl
jns
pop
or
or
xor
int3
push
pushf
push
jg
aas
and
es
mov
mov
test
clc
mov
and
lahf
adc
cltd
xor
lcall
les
push
fmull
sbb
sub
loop
popa
lods
je
lock
and
jae
push
cmp
je
or
inc
sub
jne
mov
testl
adc
ret
mov
mov
and
adc
ret
mov
scas
push
aas
in
cmp
mov
out
or
xchg
pop
sbb
mov
cmp
xor
pop
push
mov
inc
fwait
aas
mov
icebp
or
jne
pop
dec
adc
sub
sahf
and
jbe
inc
sbb
mov
lds
cli
xchg
cltd
adc
test
jmp
popf
add
or
jns
neg
sub
popf
xchg
pop
lahf
and
notl
sbbb
lahf
hlt
bound
sar
and
push
js
cmp
jbe
mov
cltd
or
mov
jmp
dec
xor
and
lods
add
or
lock
out
push
cld
movsb
and
stos
not
pop
mov
or
imul
das
fdivl
aas
push
or
and
lods
fidivs
sub
out
jle
push
stc
mov
adc
or
inc
fmul
aad
or
jmp
add
add
xchg
je
jg
push
inc
fnstsw
fldl
add
adc
cmc
dec
sub
xorb
nop
push
cmp
jbe
and
jne
sbb
adc
adc
mov
mov
mov
sbb
and
je
pop
cmc
shll
loop
adc
ret
int
jne
sub
mov
icebp
stos
mov
daa
cmp
pop
push
and
lcall
call
and
cli
jmp
jne
push
inc
xor
xchg
xchg
icebp
iret
cmp
dec
inc
clc
mov
stos
add
pop
mov
cmp
es
sar
nop
insb
dec
cld
cmp
js
xor
or
es
fst
add
ret
jmp
imul
push
jne
sub
pop
or
jge
mov
jmp
lea
xchg
mov
pop
mov
xor
imulb
lods
push
sbb
push
add
fcmovbe
bound
in
inc
mov
add
xchg
push
mov
rol
mov
sub
movl
shr
leave
jg
add
out
stos
cmp
loope
pop
insl
xor
aam
dec
adcb
loope
loope
push
or
mov
hlt
mov
xor
repnz
ss
ret
adc
or
jbe
and
cmpsl
test
xor
jle
dec
mov
test
dec
jge
add
inc
ljmp
pop
test
jge
xor
mov
sub
inc
jae
pusha
push
call
add
dec
subb
in
dec
mov
jmp
xor
xlat
cwtl
add
cmp
je
or
or
mov
jle
mov
pop
sbb
insb
inc
pop
ret
cmp
adc
call
rolb
cld
pop
fidivs
jmp
aaa
testl
mov
jb
mov
and
or
push
add
pop
or
push
je
cmp
mov
add
jg
orl
std
jl
es
stos
cmpb
cmp
nop
sbb
mull
sbb
jmp
loopne
inc
lea
loop
inc
or
mov
lds
stos
or
pop
inc
clc
mov
push
xor
call
jne
orl
shrb
dec
push
les
sub
cwtl
fcompl
add
add
aam
out
add
inc
sbb
mov
cmpl
mov
pop
xchg
bound
add
or
add
repz
inc
nop
push
dec
je
cmovnp
nop
adc
mov
ss
jg
sub
mov
jecxz
sahf
jnp
inc
or
jne
xchg
das
out
test
lea
xor
sbb
icebp
add
lret
jbe
add
pushf
fwait
sti
push
push
mov
cmp
je
push
jbe
push
and
sub
sub
lea
or
out
cmpsl
scas
add
pop
pop
inc
loop
xchg
stos
hlt
leave
test
jne
push
sub
cmpsl
insl
or
and
popf
sub
push
sub
add
dec
sub
xor
sub
cs
cmp
add
sub
mov
cltd
jl
xor
dec
loope
xor
mov
pusha
in
adc
pop
or
mov
and
cmp
sbb
inc
push
fs
adc
and
cmpl
rcrl
inc
insb
xchg
mov
cs
imul
jbe
dec
inc
test
int
cmp
adc
loope
scas
call
stc
loop
out
fldt
fcomps
fstpl
scas
xadd
mov
sahf
xor
pop
fbstp
push
movsl
fildl
mov
mov
rorb
sub
add
les
andb
mov
add
push
sub
mov
or
pusha
or
daa
cmpb
lea
dec
js
or
cmp
jmp
sub
mov
xor
adc
movsb
sahf
cmpsb
and
sub
cs
or
fmull
add
dec
xchg
out
xchg
add
dec
or
mov
sub
mov
or
je
mov
fadds
test
or
decl
jbe
mov
add
pop
mov
sarb
fidivl
jae
dec
add
xchg
popa
push
in
insl
mov
mov
or
and
insb
mov
or
jg
sub
nop
or
sub
cmp
push
adc
pcmpeqw
pop
dec
sbb
jmp
es
and
pop
gs
and
mov
inc
ljmp
add
enter
call
notl
adc
jmp
cmp
and
push
sub
scas
daa
cmpsb
das
and
ret
ficoms
fisttpll
mov
xchg
sub
fbld
fwait
pop
push
pop
call
insb
dec
xor
or
add
mov
xchg
movsb
add
pusha
pop
or
enter
and
mov
frndint
ret
mov
shl
testb
nop
push
add
icebp
xorl
rclb
inc
imul
dec
rcrl
add
out
cmp
int3
out
data16
incb
getsec
addb
daa
xor
incl
jb
js
or
lock
sbb
movl
dec
nop
pop
jle
xor
dec
incb
or
sub
lock
sub
mov
aas
mov
in
pop
mov
repnz
test
stc
test
sub
fistpl
fstpl
push
fwait
cmpsl
add
or
push
xor
clc
mov
iret
negb
punpckldq
jne
adc
adc
fldl
pop
pop
das
mov
pusha
pusha
call
dec
hlt
fistpl
add
pushl
xchg
push
or
mov
dec
lret
dec
cs
test
sbb
cld
xor
aas
mov
cmpsb
or
or
mov
push
inc
lret
pop
xor
push
test
mov
mov
add
jl
shr
sahf
rclb
sbb
in
dec
adc
in
ret
mov
add
lods
mov
xchg
pop
in
sbb
sub
imul
xor
movzwl
mov
add
shl
scas
push
and
sub
addr16
pop
mov
out
shlb
rcl
xchg
dec
test
repnz
cmp
adc
adc
inc
jmp
adc
decl
sbb
mull
hlt
pop
xchg
ret
push
in
cmp
or
jne
pop
arpl
pop
mov
les
push
test
movsb
sarb
push
or
push
std
xchg
adc
bound
fstpl
icebp
pop
fwait
push
sbb
lea
dec
xchg
das
push
test
or
adc
or
xchg
adc
bound
mov
dec
sahf
movsl
jb
and
inc
les
jmp
cmpsb
and
jmp
xchg
push
push
dec
pop
add
cld
les
fucomip
push
in
xor
cmpsl
lahf
fs
cltd
xchg
mov
ds
push
dec
fnsave
dec
gs
push
pop
add
jb
xor
fcmovnbe
pop
mov
push
xor
or
dec
lret
jno
inc
inc
dec
call
pop
mov
xor
adc
push
mov
inc
and
stos
int3
add
jne
dec
popa
mov
inc
rorb
nop
stc
xor
and
inc
lods
dec
enter
sub
in
jno
dec
shlb
leave
xchg
sub
insb
push
jae
or
push
jmp
ja
adc
repz
mov
leave
mov
inc
sbb
mulb
jle
je
ret
popf
clc
fs
jne
xchg
sub
leave
into
or
and
adc
jmp
jns
ret
dec
jge
adc
jae
cmp
sub
and
inc
jmp
movsb
pop
dec
and
lret
push
orb
repz
lea
fwait
scas
pop
sbb
mov
leave
dec
aaa
aam
lock
ret
mov
dec
push
aam
mov
or
stos
fwait
pop
jge
mov
popl
std
into
inc
dec
fidivrl
or
js
es
cltd
test
fnstenv
jne
hlt
push
sub
inc
lret
pop
in
icebp
dec
fucomp
aas
sbb
mov
out
mov
xchg
xor
scas
and
jb
ret
xor
addb
and
fmull
repz
ds
pop
psrld
push
cmp
cmp
es
fdivrs
xor
loop
cmp
cmp
fdivrs
jmp
popf
lods
push
push
add
and
pop
mov
jae
out
enter
jne
push
or
movsb
cmpsl
daa
lret
add
jmp
shlb
movsl
call
jne
dec
mov
ds
stos
shlb
adc
adc
sub
push
dec
fwait
test
mov
cmc
popa
pop
je
add
mov
jmp
add
jnp
sub
jle
fisubs
lods
jne
in
mov
push
hlt
sub
or
sbb
ret
jno
mov
inc
or
and
sub
imul
add
and
add
std
in
add
lea
push
jbe
pop
inc
sbb
das
jne
xlat
xor
fst
inc
and
test
cmp
xchg
lret
sbb
and
imul
outsl
pop
je
xorb
inc
rolb
and
mov
dec
stos
push
cmpb
mov
adc
arpl
and
mov
push
leave
mov
xor
mov
push
dec
into
cmp
lcall
xchg
dec
gs
pop
mov
inc
add
xchg
jmp
pop
inc
xchg
inc
xchg
hlt
xchg
mov
adcl
inc
or
data16
or
es
mov
push
xchg
sbb
inc
mov
sub
push
cli
mov
adc
push
lea
jb
xor
jp
mov
loop
xchg
add
or
dec
pusha
dec
and
call
mov
push
je
mov
das
mov
adc
lret
dec
test
jmp
adc
cmp
ds
push
sbb
push
push
jmp
incb
nop
lret
mov
clc
push
and
mov
inc
sahf
pop
cltd
scas
outsl
movsl
jbe
cli
filds
fs
adc
inc
add
ret
jnp
fistpl
aaa
popl
shrb
scas
cmp
inc
xlat
and
hlt
xchg
sub
or
xchg
jae
add
cld
mov
dec
inc
lods
mov
jle
push
mov
cld
push
adcl
ds
mov
sbb
outsb
addr16
out
push
lret
xchg
leave
lods
mov
jns
pop
clc
mov
into
hlt
repz
cmpb
mov
and
imul
dec
dec
adc
test
adc
dec
lock
jg
add
push
jg
cmp
jne
push
pop
adc
aaa
mov
clc
inc
and
push
and
sub
adc
push
pop
sbb
inc
scas
pop
mov
or
dec
pop
and
push
stos
xor
push
sub
mov
add
dec
sub
jb
jmp
sub
daa
inc
movups
adc
and
jb
dec
loop
mov
cmc
fnstenv
xchg
and
insl
das
cmp
cli
negl
push
cld
jl
shlb
je
or
mov
shr
xchg
shlb
or
cwtl
loop
dec
sahf
mov
out
sub
push
lock
jge
and
nop
in
dec
or
mov
mov
andl
fadds
pushf
jnp
adc
cltd
fs
filds
adc
ret
push
mov
insl
outsb
arpl
add
roll
jg
outsl
jmp
push
sub
sti
jb
pop
adc
push
and
cmp
jl
mov
mul
xor
xor
and
das
adc
shll
add
int
nop
push
add
or
or
or
scas
nop
inc
xor
push
test
test
mov
cli
or
test
xor
sbb
xchg
cltd
or
jle
std
mov
jnp
adc
and
xchg
inc
and
cmp
mov
jae
mov
and
cmpb
jge
mov
push
xchg
cmpsb
in
pushf
dec
cld
dec
cld
mov
lea
cs
mov
mov
scas
push
and
les
enter
dec
movsl
mov
dec
or
das
push
cltd
enter
mov
inc
adc
cmp
jmp
xchg
enter
and
mov
sbb
inc
fmuls
bound
jle
sbb
mov
cmpsl
jecxz
mov
fldenv
push
test
jp
daa
mov
out
cld
incl
rolb
or
je
popa
dec
adc
jae
arpl
push
mov
int
xor
fimuls
adc
mov
and
adc
int
subl
push
sub
and
adc
repnz
gs
pusha
mov
inc
rclb
push
lret
mov
insb
xor
movsb
push
pop
and
int
in
jne
in
clc
push
or
mov
lcall
mov
xchg
cld
or
sub
mov
sbbb
mov
push
mov
adc
xchg
dec
pusha
mov
or
or
sub
lret
push
dec
dec
xor
mov
gs
bound
mov
inc
lock
push
xorb
mov
mov
and
movl
fisubrl
imul
mov
in
dec
or
repnz
enter
pop
adc
orb
es
pushf
xchg
push
cld
lret
jmp
popa
les
stos
and
adc
mov
repz
xchg
dec
push
dec
out
pop
std
testl
jl
mov
xor
inc
jb
push
inc
xor
add
cmpb
or
mov
add
add
adc
nop
add
mov
mov
fisttps
or
clc
loop
dec
mov
xor
bound
pop
stos
adc
mov
shr
xchg
sbb
roll
ret
cmpsb
pop
sbb
push
adc
andb
push
xor
sub
aad
addl
dec
ret
xchg
cmp
sub
sub
loopne
adc
cmpsb
adc
sbb
mov
aad
ljmp
xchg
sbb
test
xchg
insb
fisttpll
sub
jb
repnz
dec
push
xor
lret
hlt
pushf
outsb
xlat
mov
inc
loop
pop
rorb
dec
push
sub
pop
mov
pop
mov
std
lods
xor
jbe
ficoms
imul
cmp
jge
xchg
out
mov
jne
xadd
mov
pop
add
sub
jb
inc
pop
mov
xor
and
stos
outsl
pop
push
cwtl
lret
jne
mov
add
inc
cs
nop
push
jne
stos
xor
lods
fs
ja
and
int3
inc
loop
xchg
rclb
sub
adcb
test
icebp
inc
nop
adc
pushf
and
hlt
and
es
mov
push
sbb
fimuls
add
dec
mov
sub
roll
sbb
pop
sbb
dec
cltd
mov
movsl
cmpl
test
cwtl
push
stc
pop
or
clc
test
jmp
aaa
jbe
mov
inc
mov
call
add
adc
dec
cli
or
pop
xor
xchg
adc
cmp
lea
push
and
add
mov
cmpl
cwtl
xchg
rorl
bound
pop
popa
cwtl
dec
fsubr
mov
or
inc
fs
xchg
push
mov
adc
mov
mov
pop
jne
jle
dec
je
adc
jne
dec
push
inc
std
xrelease
jno
cmpsb
fwait
pop
push
cmp
add
adc
dec
in
pusha
jge
dec
adc
aam
enter
lock
daa
mov
or
and
shrl
dec
or
xor
inc
sbb
fdiv
dec
adc
or
or
mov
sub
nopl
mov
mov
dec
in
outsb
inc
sbb
mov
mov
xor
inc
pop
push
xchg
xlat
rcrb
cmp
add
and
xor
pop
fdivrs
loope
cmp
sub
push
insl
mov
sbb
add
sub
add
sub
orl
int3
mov
clc
bound
cltd
or
pop
clc
and
cmc
roll
inc
mov
test
sbb
cltd
aas
and
and
les
sbb
adc
dec
bound
hlt
mov
jl
pop
int3
jge
push
cld
push
hlt
mov
add
aaa
jb,pn
cwtl
cmp
dec
stc
and
cmc
xchg
cmpsl
inc
shll
jl
push
mov
jb
popf
cmp
xchg
add
fs
inc
pop
xchg
add
insl
or
jo
test
and
mov
and
inc
dec
push
in
xchg
adc
rcrb
into
test
int
or
push
mov
add
add
movb
jmp
pop
mov
adc
inc
mov
or
and
cmp
cmp
mov
adc
sbb
mov
jae
imul
xchg
popa
arpl
js
push
in
mov
test
ret
dec
push
lock
enter
icebp
inc
mull
adc
mov
test
enter
in
cwtl
and
dec
nop
cltd
pop
and
dec
dec
adc
add
jo
or
xchg
loopne
pusha
inc
fcomps
adc
adcl
fs
adc
sbb
cmp
adc
sub
call
adc
xchg
and
xor
icebp
adc
mov
fdivl
and
adc
loope
pop
xor
adc
and
call
dec
in
cltd
loopne
rclb
js
das
and
push
mov
and
inc
push
or
int3
inc
test
enter
les
cmp
rclb
and
inc
push
and
movsb
or
lods
inc
jl
test
sbb
mov
dec
dec
mov
pushf
mov
cmp
or
mov
dec
and
mov
sbb
mov
mov
dec
or
mov
dec
xor
jl
and
mov
dec
or
mov
sbb
mov
insb
mov
dec
cmp
mov
fs
dec
and
mov
mov
mov
cmpsb
or
adc
cltd
xor
dec
fwait
or
pop
sub
xor
sbb
xchg
sub
int3
cmp
jae
nop
mov
cmp
add
test
jp
ret
pop
jl
jo
jnp
or
sbb
adc
stos
xor
mov
pop
adc
and
add
sbb
test
sbb
daa
mov
js
inc
divl
dec
xor
nop
push
mov
inc
push
test
aas
xchg
rclb
test
or
inc
push
mov
dec
jb
dec
push
inc
inc
enter
or
sub
loop
cltd
or
lods
adc
inc
add
in
mov
inc
scas
mov
xchg
cmpsl
sub
iret
and
shlb
inc
mov
call
or
test
sub
jmp
movsl
sbb
imul
sbb
out
add
or
xchg
push
and
xor
das
jne
sbb
test
or
sahf
sahf
das
orb
mov
sbb
mov
dec
test
fwait
loope
jnp
les
pushf
fiaddl
mov
imul
js
jge
adc
sbb
fists
aaa
adc
push
lods
sbb
cmp
xchg
daa
lods
dec
aam
das
mov
pop
and
and
xor
jno
inc
and
pop
test
in
and
pop
cwtl
jne
mov
add
sbb
push
std
nop
xchg
das
adc
or
xchg
cltd
jp
loop
pop
adc
outsb
imul
jae
mov
mov
movsb
je
mov
sub
sbb
data16
cs
popl
inc
or
cld
mov
mov
out
add
add
ret
sar
out
add
fstpl
in
jne
pop
je
push
test
cmp
mov
push
or
jmp
cmp
test
add
cmp
aas
add
jg
mov
leave
dec
ljmp
sbb
adc
add
dec
andw
ds
mov
xor
jne
scas
cwtl
xchg
mov
push
jge
jb
insb
test
je
daa
dec
adc
mov
jns
add
or
pop
adc
and
xchg
test
xchg
mov
call
or
ss
cs
jge
xor
dec
rolb
shlb
sbb
fcomps
or
fcmovb
push
adc
sub
push
std
int3
call
ds
xor
sbb
mul
mov
push
mov
push
les
scas
sbb
or
pushf
lods
lret
je
add
repnz
jmp
or
add
pop
inc
loopne
cli
add
out
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
cmpb
mov
mov
push
cli
sub
rclb
sub
popf
pusha
jge
iret
test
dec
shrl
or
pop
cmp
jae
push
add
inc
inc
adc
cmp
ja
test
mov
dec
cwtl
adc
add
jge
mov
popa
imul
dec
repnz
in
adc
dec
xchg
dec
daa
push
cmp
mov
test
cmp
pop
sub
inc
adc
and
and
or
cmp
push
sbb
out
add
sarl
mov
xor
add
repz
sub
shrb
leave
mov
mov
loop
mov
loopne
add
jg
mov
sbb
cmp
sbb
out
fistpll
pusha
and
rcll
cmp
fiaddl
xor
adc
out
aaa
fwait
lock
sub
cmp
push
call
test
or
int3
push
clc
aas
add
or
sbb
or
insl
dec
sub
stos
xor
decl
pop
dec
jns
dec
adc
hlt
mov
or
adc
adc
and
dec
subl
in
jp
loope
loop
pextrw
mov
test
jmp
xchg
adcl
and
jmp
mov
movsb
cmp
mov
dec
outsb
orb
and
and
xor
inc
mov
mov
adc
test
and
add
inc
pop
mov
test
test
jne
inc
or
ud2
and
fisubs
les
adc
daa
xor
xchg
dec
hlt
jae
popf
inc
in
jecxz
jl
xchg
insb
cmp
push
cmp
fs
addr16
xchg
xchg
xchg
sub
iret
jmp
dec
push
shrl
sub
or
push
fnsetpm(287
cmp
outsl
fldenv
subw
lods
adc
xor
out
xchg
inc
clc
mov
andb
rol
mov
inc
in
mov
adc
push
xchg
xlat
mov
or
push
clc
add
xchg
clc
jbe
in
xchg
repz
outsb
sub
sub
and
shlb
fstpl
dec
cld
xchg
xchg
mov
scas
dec
call
mov
push
stos
xor
call
ds
call
and
inc
orb
dec
cld
xor
lahf
loope
mov
sub
mov
movsb
std
clc
test
lea
les
lock
xchg
loop
mov
adc
push
std
or
jl
mov
push
jae
sti
lea
xor
gs
adc
or
pop
movsb
sub
dec
or
jl
push
pop
repz
cmpb
cltd
dec
mov
adc
pop
mov
jge
subl
or
push
inc
and
cmp
jne
loopne
mov
faddl
nop
inc
jecxz
push
and
lea
inc
inc
fisubl
fimull
lods
sbb
push
fisubl
adc
add
jno
cmp
in
jae
outsb
popa
cmp
xchg
mov
cmp
lods
inc
pop
lcall
jb
lds
sbb
clc
ss
in
push
or
pop
fidivs
test
dec
or
adc
xchg
pop
pushf
rclb
ja
fcmovne
loope
sbb
jno
push
mov
test
sbb
shrb
adc
mov
xchg
push
jmp
mov
mov
aam
mov
inc
test
leave
loope
lea
data16
xchg
and
xchg
sbbl
xchg
in
sahf
repnz
cmp
insl
mov
jp
mov
sbb
push
call
orl
test
inc
ljmp
and
shll
addr16
and
add
out
jne
aaa
arpl
push
add
lret
enter
sub
lods
xchg
les
xchg
and
mov
gs
and
shlb
push
je
xor
adc
mov
js
dec
and
sbb
ljmp
lock
cld
adc
lea
push
mov
sbb
add
jb
cmp
mov
jp
mov
lods
imul
flds
outsb
dec
sub
nop
clc
and
cmpsb
xchg
sub
das
jecxz
imul
dec
cmp
fs
cmpsb
ss
push
lock
or
pop
jg
jp
xchg
or
bound
jne
jp
push
loopne
jp
jge
imul
sbb
inc
je
or
jne
or
or
ds
push
inc
adc
orl
cmp
sbb
mov
in
add
jo
mov
in
add
sub
or
rclb
mov
xchg
test
call
inc
adc
xchg
lods
imul
das
and
push
dec
in
repz
push
out
fadd
call
jnp
or
xchg
jb
enter
push
add
sbb
sub
cmp
add
outsl
sbb
sbb
ljmp
sub
mov
or
mov
cvttps2pi
sub
jo
xchg
mov
mov
popa
arpl
dec
add
cmp
or
fldenv
repnz
and
aad
xor
sbb
or
fs
pop
sub
jbe
xor
xor
cmpsb
dec
sub
xor
outsb
cmc
pop
fdivrs
or
jne
push
inc
add
xor
sbb
jmp
add
dec
jmp
jae
jmp
ljmp
imul
push
sub
sub
sub
test
or
ja
mov
or
jmp
sub
ja
mov
sub
add
add
xchg
inc
and
jmp
jle
movb
push
jbe
push
insl
or
movb
sbb
ja
mov
and
sbb
insb
or
inc
in
sub
and
jne
xchg
enter
aad
sub
out
push
sub
nop
inc
enter
or
test
adc
loop
adc
test
mov
in
sbb
outsl
sub
jg
dec
shl
out
cmp
xor
aaa
cmc
cwtl
test
add
shr
adc
xchg
ret
dec
xchg
decl
lcall
cmp
adc
insl
jb
and
je
sahf
adc
dec
sub
push
and
cltd
imul
popf
enter
xor
dec
sbb
int3
jae
ds
mov
sbb
adc
mov
xor
lret
mov
mov
and
jmp
cltd
mov
or
cmp
bound
leave
jbe
cs
jmp
mov
adc
jmp
xchg
orl
inc
mov
gs
ret
dec
sbb
mov
push
in
lea
xchg
daa
mov
in
xor
lock
fwait
lret
push
clc
inc
sbb
mov
std
hlt
dec
add
int
jae
push
or
ja
inc
in
test
mov
and
pushf
xor
adc
cld
mov
adc
insl
fsubr
lods
ljmp
mov
outsb
icebp
inc
push
je
jne
mov
lret
add
cld
adc
xor
xlat
popa
cld
or
xor
sub
xor
push
ljmp
fucomp
or
andl
jns,pn
lds
add
int
jo
ds
adc
or
lock
xor
adc
adc
mov
shlb
cmp
repz
pop
dec
or
xchg
mov
addb
mov
test
insl
in
add
jb
mov
mov
fs
add
in
test
cwtl
xor
adc
leave
ja
add
or
imul
je
dec
xor
hlt
sbb
fsubrl
and
cmpsb
mov
sub
sbb
pop
inc
jae
andl
and
es
pop
aam
sti
addr16
lods
push
jae
iret
inc
add
movsb
mov
add
outsl
xor
jne
aaa
mov
loop
cmp
popa
inc
jb
and
dec
xchg
mov
gs
pop
sub
jmp
push
rcrb
sbb
fists
and
fldenv
pop
and
cmp
cmp
pop
add
xchg
repz
mov
or
xchg
inc
sbb
andb
mov
stc
loop
xchg
hlt
or
das
and
cmp
pop
add
addps
sub
push
cmp
sqrtps
xchg
sbb
loope
shr
push
rclb
jge
loope
push
cmpsl
jbe
adc
adc
xor
int
lods
into
push
out
rcll
add
pop
fwait
adc
mov
inc
rcl
fidivs
adc
mov
pusha
push
clc
or
leave
jmp
mov
cmp
adc
dec
mov
xchg
nop
ss
in
and
add
adc
sub
sub
push
fmulp
out
in
js
call
xor
mov
inc
or
pushf
dec
adc
subb
mov
cmp
daa
push
out
xchg
hlt
push
push
ret
pop
sub
push
pushf
cmp
and
sahf
add
es
add
xlat
and
fwait
inc
outsb
xchg
sub
mov
sbb
add
dec
cmp
sub
test
int3
add
lea
sbb
dec
xor
shrl
std
add
int
and
mov
cmp
sbb
adc
sbb
shll
fld
sub
cmp
cmp
pop
and
leave
and
popa
ja
cld
inc
mov
lock
dec
aad
lods
pusha
add
pop
pushf
cmp
push
xor
pop
sahf
sbb
mov
adc
cmp
mov
inc
add
push
testl
lret
sub
jmp
push
icebp
xchg
add
ret
shll
daa
cmp
aaa
jp
js
fbstp
aaa
pushf
int
sub
scas
pop
jl
inc
movsl
imul
insb
cmp
pop
pop
sahf
jge
mov
pop
push
xchg
in
les
les
sub
inc
add
call
inc
add
xchg
mov
jle
je
xchg
jne
inc
dec
add
nop
push
push
sti
cli
mov
add
mov
jbe
aam
mov
cmp
xlat
cmp
and
inc
adc
and
je
mov
sub
jb
lds
dec
push
inc
jnp
mov
std
xchg
fcmovb
sbb
pop
mov
nop
sub
adc
xor
cmp
push
xor
sahf
mov
sti
inc
adc
sar
adc
dec
pop
shrl
push
jge
or
test
test
sub
sbb
push
test
icebp
sub
push
dec
inc
stos
cmpb
sbb
push
stos
push
imul
or
out
decl
nop
mov
push
andnps
xchg
lods
xchg
loop
adc
push
adc
mov
shll
ret
rol
push
mov
sbb
stc
or
movb
lods
popa
jmp
roll
and
enter
jp
or
xor
movb
incl
nop
add
adc
mov
dec
imul
mov
iret
cli
ss
mov
jl
or
sub
pop
outsb
push
push
mov
adc
daa
rcr
xchg
mov
pop
jbe
inc
xor
push
cmp
adcl
js
jge
or
jl
and
bound
jne
add
xor
inc
pusha
inc
adc
cmp
jns
adc
or
xchg
lret
push
jns
mov
or
and
mov
mov
imul
jecxz
xchg
ret
test
xchg
pop
loop
xlat
call
mov
pop
loope
inc
mov
xchg
fisttpll
xchg
xchg
mov
or
mov
sbb
neg
or
mov
test
inc
inc
jno
cli
push
jmp
hlt
int3
adc
sbb
push
xor
adc
cli
mov
and
xor
punpckldq
push
dec
push
movsl
mov
insl
shll
jge
stos
gs
cwtl
and
test
addb
xor
mov
sub
sahf
sub
sbb
in
fadds
dec
inc
pop
dec
pop
dec
in
jecxz
dec
xor
and
jle
sarl
and
stos
xor
cld
jmp
xor
orb
cmpsl
jle
inc
adc
mov
cli
sahf
gs
imul
int
xor
popf
cwtl
jbe
cs
ds
incl
xchg
or
insb
cwtl
mov
movsl
cmp
scas
outsl
movsb
xor
je
xor
pop
mov
inc
adc
pop
sbb
pop
ja
pop
add
in
sbb
nop
aam
nop
lcall
lods
jmp
and
adc
xor
mov
pushf
and
pusha
adc
popa
stc
pushf
pop
and
in
and
xchg
lret
pusha
aad
repnz
cmpsl
jl
leave
or
wbinvd
push
inc
cmp
inc
push
sbb
and
or
cmp
lret
flds
mov
sub
push
sbb
xchg
add
push
mov
ljmp
and
inc
addb
mov
loop
xor
dec
je
ja
adc
ret
imul
aad
outsb
sub
or
je
stos
cwtl
clc
stos
lea
ret
mov
pop
stos
sbb
jo
jno
in
outsl
and
jns
enter
jnp
jl
xchg
jge
jle
in
mov
loop
pop
stos
and
subb
adcl
pop
inc
mov
enter
lea
pop
std
ljmp
lock
mov
jmp
pop
mov
rolb
adc
cmp
cmpsl
and
ja
rorl
pop
xchg
ret
xchg
add
test
scas
rorb
and
lods
adc
and
pop
inc
cmp
pop
repnz
movsl
xchg
add
sub
lret
adc
jle
jmp
ret
inc
add
dec
or
daa
sbb
inc
and
jbe
xor
jb
push
adc
push
mov
ret
pop
dec
xor
in
cs
aam
mov
cwtl
mov
inc
dec
or
xor
adc
jge
dec
enter
dec
pop
and
adc
mov
lea
or
push
in
int
cmp
cmp
subl
xchg
or
movl
mov
xchg
pushf
pushf
jb
int3
mov
ret
int3
cmpsl
pop
pushf
and
xchg
loop
data16
mov
cmpsl
js
inc
inc
lret
shlb
add
sub
mov
sub
sbbl
add
add
out
adc
jmp
shr
rorl
or
nop
and
push
push
and
test
inc
push
dec
test
mov
inc
insb
out
push
xchg
ss
scas
and
mov
enter
mov
and
cmpsl
add
leave
stos
jae
push
aam
lock
mov
sub
scas
and
cmove
cltd
dec
jb
inc
dec
mov
inc
pop
nop
pop
push
dec
popa
push
pushf
and
repnz
aas
xchg
xchg
cld
xchg
in
jg
xchg
stc
xchg
pop
enter
cltd
repnz
in
jg
sahf
stc
lahf
push
mov
push
jmp
cld
movsb
mov
mov
cmp
sub
push
xchg
addr16
add
and
mov
xchg
fadd
test
test
imulb
stc
dec
push
fdivs
stos
fmul
adc
imulb
fcomps
sub
aas
shrl
fdivrs
pop
js
idivl
aam
rorb
lcall
int3
mov
dec
and
add
jmp
cmp
sub
dec
xor
je
rcrl
cwtl
imul
lahf
jne
nop
lock
sahf
sbb
sbb
imul
xor
push
loop
pop
inc
enter
and
mov
nop
pop
je
call
sub
lock
loopne
jns
push
repnz
je
call
and
dec
and
xor
fdiv
jp
mov
add
inc
lods
shlb
sub
in
adc
aas
xchg
xor
test
inc
mov
lods
dec
and
rclb
ret
lret
sub
stc
add
xor
push
and
adc
push
and
mov
in
push
or
mov
or
inc
push
fisttpl
sbb
or
mov
mov
sub
adc
dec
mov
mov
mov
loop
mov
frstor
shll
sub
jecxz
and
mov
jle
dec
lret
xor
roll
sti
adc
scas
enter
mov
fmuls
scas
push
add
adc
sbb
mov
clc
xor
in
cmpsb
or
mov
mov
xlat
mov
sbb
cmpsl
pop
es
sbb
fdivr
shrb
cmpsb
inc
adc
gs
stos
cltd
push
daa
mov
pop
sbbb
lock
and
lods
push
push
adc
sti
xor
push
fdivrl
mov
movsb
and
inc
dec
or
xor
adc
movsb
pop
lea
mov
mov
cli
call
aam
jg
add
cmp
idivl
add
mov
ds
rorb
add
mov
fisubrs
inc
in
stc
add
mov
adc
dec
cmp
lret
jae
adc
roll
test
call
testb
cmp
jl
cmp
mov
inc
cmp
jne
adcb
xor
lret
ret
add
mov
add
add
cltd
adc
mov
xchg
sub
shrb
imul
sub
jbe
int
ds
pop
int3
incl
and
divl
xor
cmp
inc
inc
inc
add
dec
dec
dec
dec
dec
dec
add
push
push
push
push
cmp
inc
dec
add
loopne
mov
pop
and
fs
imul
in
ret
ja
sarb
add
divl
mov
adc
mov
xor
mulb
or
sbb
adc
and
and
hlt
insb
pop
bound
fmuls
jg
and
sbb
call
adc
movsb
ret
sahf
mov
roll
cmp
jl
xchg
xor
jl
flds
adc
and
inc
sub
mov
adc
add
lret
xchg
and
push
xchg
mov
adc
push
stos
stc
xchg
test
lods
shlb
out
xor
pushl
rolb
xchg
test
add
mov
jnp
hlt
out
dec
addl
jl
outsb
lea
sub
and
xchg
mov
insl
popa
in
jg,pn
call
test
sub
sbb
push
inc
test
fcomps
lahf
ficoms
cmp
push
or
adc
lods
es
adc
add
add
dec
lea
push
movsb
add
cmp
adc
ret
add
jae
in
out
sbb
dec
jns
aad
adc
jnp
pop
cltd
das
xchg
xor
shll
pop
pop
pop
popf
xchg
adc
mov
mov
shlb
lret
call
mov
inc
bswap
test
jle
rorl
add
repnz
inc
or
xchg
or
mov
lods
dec
stos
xchg
jl
add
push
or
or
push
push
adc
mov
mov
shrb
fdivs
mov
clc
pop
mul
add
jae
inc
daa
push
out
xor
nop
xlat
xor
mov
testb
inc
int
ret
shrb
cld
jbe
outsb
add
mov
out
daa
mov
dec
fucomip
push
or
inc
repz
stos
mov
sub
nop
cmp
mov
dec
jl
test
jle
sub
sub
or
les
test
pop
and
add
or
lcall
call
dec
xor
jmp
pop
pop
push
jbe
or
add
sti
pop
lahf
jbe
daa
adc
inc
enter
pop
imul
out
scas
mov
push
enter
repz
pop
add
sbb
jb
dec
jmp
test
clc
nop
rcll
jmp
sub
sbb
xchg
pop
push
dec
clc
jmp
or
xor
sbb
pop
add
push
pop
xchg
sbb
mov
rclb
add
repz
cld
pop
lea
fdivl
dec
push
mov
lret
xor
push
sbb
mov
in
add
jae
nop
sbbl
lea
dec
jb
inc
out
iret
cmp
jbe
or
push
je
xchg
mov
xor
jns
sbb
out
sbb
test
push
fnstsw
xor
adc
cvtps2pi
and
sbb
cltd
adc
outsl
repz
mov
dec
mov
scas
ret
jb
add
les
adc
adc
push
mov
fcomps
lea
jle
enter
push
and
push
push
sbb
and
popa
outsb
in
inc
leave
nop
mov
sbb
push
inc
rorb
test
iret
add
or
into
lock
hlt
or
add
push
or
out
loopne
sub
cmp
inc
jmp
lret
sub
xchg
pop
mov
in
nop
es
adc
arpl
cmp
pusha
inc
sbb
pop
outsl
in
movsl
push
xor
cmp
je
and
jb
sub
push
cmp
jecxz
cwtl
pop
fwait
sbb
fistps
repz
or
fimull
jecxz
and
push
xchg
mov
in
or
or
dec
xor
aaa
inc
xchg
data16
fmul
push
or
inc
sub
daa
lcall
lock
inc
mov
jp
xchg
mov
into
push
dec
inc
xchg
movsl
sarl
mov
inc
mov
jae
call
dec
ljmp
shlb
out
leave
or
push
and
jp
out
add
xlat
shr
jmp
push
or
dec
movl
sar
cli
xchg
je
jle
inc
push
jae
add
xchg
scas
xor
and
fisttps
sub
or
xbegin
or
jo
andl
iret
loop
pop
adc
jmp
sti
out
adc
out
into
mov
mov
gs
ljmp
or
loopne
stc
stc
cli
add
add
mov
adc
sub
xchg
jmp
call
mov
xor
adc
sbb
adc
mov
popa
jns
add
cwtl
addb
daa
mov
sub
sbb
subb
mov
and
les
add
insl
inc
mov
push
mov
sahf
or
inc
and
nop
imul
add
in
inc
mov
inc
jns
test
mov
push
cmp
and
mov
dec
sub
jo
add
push
test
dec
scas
sub
fs
sbb
inc
mov
rolb
mov
add
adc
cmc
push
pop
and
insb
xchg
rorb
aam
mov
push
or
stos
daa
mov
or
mov
jne
mov
or
repnz
das
sbb
shll
inc
add
test
mov
and
mov
shl
dec
dec
mov
mov
and
adc
loope
adc
cmp
sub
inc
aam
cmp
pop
aaa
ret
inc
jns
pop
adc
xchg
bound
mov
add
adc
inc
adc
add
inc
lods
xchg
lahf
and
test
mov
mov
flds
outsl
add
or
push
and
aad
xor
dec
sub
lahf
and
inc
cmp
or
jl
pushf
mov
aad
ror
divb
xchg
pop
or
and
insl
add
adc
stos
aad
cmp
or
in
and
mov
adc
cmp
inc
cld
mov
pop
test
adc
add
iret
fimuls
and
dec
mov
and
nop
sub
mov
mov
mov
adc
out
fsubl
mov
cmpsb
test
out
inc
aam
adc
sbb
call
rcl
flds
call
and
in
fistl
test
sub
jl
pop
orb
mov
gs
lods
les
insb
inc
mov
inc
out
and
hlt
xchg
aad
int3
adc
pusha
leave
bound
cmp
xchg
ljmp
push
inc
cmpsb
jno
mov
pop
or
push
out
andb
movsb
aam
adc
bound
cmp
cmp
call
lret
lcall
ret
adc
pop
mov
fcoms
push
and
pop
sub
jge
out
inc
incl
fsubs
add
rcrl
test
inc
mov
ljmp
sub
test
cmp
loopne
sub
add
mov
adc
add
xlat
inc
xor
mov
enter
sub
inc
testl
xor
adc
mov
mov
arpl
mov
nop
xchg
roll
xlat
or
outsb
xor
lock
repnz
out
mov
sbb
and
push
cmp
jne
push
mov
sub
hlt
xor
mov
dec
add
xor
sbb
loop
aas
add
ret
leave
push
std
rorb
test
jbe
or
mov
aas
adc
rol
or
adc
jbe
dec
jne
and
mov
sbb
lret
test
and
push
sub
xor
mov
inc
cwtl
and
add
mov
or
fdivrl
push
xor
stos
je
mov
lahf
pop
mov
test
hlt
cmp
aaa
add
xor
lret
mov
adc
sub
cmp
xor
push
xor
inc
movsb
jne
mov
mov
push
sub
hlt
das
lods
lds
leave
adc
aad
xchg
and
mov
or
lock
hlt
push
aam
inc
and
push
aaa
push
ret
or
adc
or
push
adc
dec
or
adc
ja
ret
xchg
lret
test
or
add
mov
lds
xchg
push
push
and
fisubl
dec
lahf
sarb
sub
inc
add
dec
fiadds
test
adc
fists
cs
jnp
xchg
xchg
lahf
enter
movsl
mov
adc
jns
xor
and
rorb
aad
test
mov
sbb
lock
jbe
mov
rorb
dec
push
sub
jb
xor
mov
das
pop
xchg
push
or
jae
push
popa
mov
dec
or
dec
jne
mov
push
lahf
xor
sar
in
mov
ds
loopne
push
mov
sbb
outsb
mov
jge
push
xchg
dec
xchg
daa
mov
call
fs
adc
into
push
sub
int3
ds
adc
push
pop
lods
call
jmp
pop
add
mov
mov
xor
test
roll
or
ds
push
and
and
pop
jb
mov
bound
pop
inc
push
and
or
jb
aad
data16
cmp
lds
cwtl
or
inc
and
mov
jg
into
xchg
adc
adc
adc
cmpsb
sub
pop
enter
push
mov
push
adc
sub
adc
push
sub
adc
adc
xchg
or
or
test
adc
adc
cli
sub
loope
jmp
dec
mov
gs
bound
xchg
mov
test
xor
test
adc
sbb
jmp
sub
es
adc
imul
push
pusha
mov
and
imul
mov
mov
fsubl
pop
mov
dec
mov
mov
dec
xor
inc
test
arpl
or
out
xchg
icebp
mov
fcompl
shll
in
adc
cwtl
lods
xor
sub
aam
xchg
push
push
mov
sub
mov
sub
shr
test
jbe
hlt
repz
adc
movsl
xor
out
sarl
fiaddl
aaa
ret
xor
mov
out
push
or
movsl
incb
push
mov
adc
jg
add
xchg
lock
push
cmp
sub
imul
ljmp
fcmovnu
movsl
xchg
ds
scas
xchg
adc
jp
test
mov
mov
out
ljmp
and
xchg
lahf
arpl
in
aas
xchg
outsl
aam
in
or
std
sub
enter
dec
ja
add
jnp
bnd
movsl
add
test
repz
scas
or
sti
cmpsb
sbb
sub
xchg
rolb
jmp
aas
mov
outsb
sti
dec
xor
add
mov
scas
xor
dec
add
pop
sub
jmp
in
cmp
pop
repnz
neg
lock
or
pop
cmc
lea
pop
push
popa
mov
xchg
fs
and
test
shr
mov
cmc
mov
push
fs
sahf
adc
sbbl
shlb
cld
or
rolb
dec
jne
out
and
inc
mov
rorl
push
add
pcmpeqb
add
out
pop
push
inc
into
inc
push
call
push
add
cmp
or
add
and
fs
daa
clc
in
sub
push
sub
test
or
icebp
pop
push
or
lahf
ljmp
pop
enter
inc
push
rcll
cmp
aam
inc
inc
push
shl
push
push
dec
and
or
xor
and
sbb
xchg
fs
inc
pop
fsub
adc
call
mov
pop
mov
sbb
xor
pop
dec
sub
xor
adc
add
jb
insl
popa
cltd
das
jnp
repz
movsb
adc
adc
mov
adc
sub
inc
sub
outsl
push
test
repz
sub
push
push
movsb
es
or
pop
and
pop
movsl
sub
rcrb
adc
sbb
mov
cmpsb
flds
jge
bound
sub
adc
leave
mov
xchg
pop
mov
pop
dec
test
fcmovu
pop
lret
mov
fsubs
cltd
fcomps
or
fs
mov
xchg
rclb
adc
adc
inc
sbb
jle
adc
ljmp
movsb
lea
adc
scas
pop
idivl
enter
add
jmp
dec
cmpl
call
cli
inc
mov
adc
jae
lcall
and
ret
adc
push
xor
and
jae
sub
sbb
push
sub
push
or
pop
add
or
push
stos
and
xor
outsb
add
shll
inc
adc
cmp
or
pop
jp,pt
or
sub
cwtl
mov
cmp
xchg
push
in
loopne
cmpb
or
test
mov
rorb
adc
dec
daa
and
cmp
inc
movsl
sbb
stos
repnz
shl
sbb
scas
les
js
std
out
inc
jb
je
jbe
cld
inc
cmp
inc
rcll
inc
test
inc
inc
mov
imulb
fsubrl
xchg
lea
mov
enter
sbb
iret
jnp
xchg
xchg
xchg
sbb
sbb
jb
jnp
call
ret
sbb
out
in
mov
dec
inc
sub
xor
nop
es
mov
and
cmp
ret
test
add
ret
or
fmull
add
arpl
dec
imul
enter
loop
jge
mov
scas
sbb
inc
or
adc
outsb
jl
and
add
push
mov
lock
adc
fisubrs
mov
sub
stc
test
sub
mov
mov
add
jmp
scas
test
scas
mov
icebp
test
outsl
test
xor
lds
test
movsl
cmp
pop
add
push
cmp
mov
pop
test
lds
shl
mov
mov
test
mov
mov
xor
adc
lcall
test
xchg
out
adc
fs
mov
andl
movsb
push
push
mov
ljmp
cmpsb
jb
pop
xlat
sub
movsl
pop
aad
test
or
shrl
rcll
hlt
lds
iret
push
test
xchg
adc
imul
scas
test
inc
movsb
jp
not
leave
stos
test
jb
test
nop
mov
xchg
andb
ljmp
lods
adcb
dec
rcll
or
xchg
je
test
mov
in
xor
std
and
imul
mov
cli
imul
xor
push
mov
std
and
push
mov
in
xor
jnp
mov
stos
scas
jnp
mov
mov
lods
jnp
mov
rclb
mov
test
cmpsb
mov
stc
lods
cmpsl
push
jl
lds
lods
movsl
push
jl
vaddsubps
mov
lods
movsl
pop
mov
inc
ret
je
test
mov
loopne
test
mov
mov
or
bound
lahf
mov
loop
stos
popf
test
nop
pusha
mov
fwait
test
cmp
push
mov
cmpsb
pop
sub
cmpsb
fldcw
movsb
push
test
xchg
push
out
xchg
pop
test
push
arpl
push
loope
lea
push
pop
mov
pop
test
inc
stos
hlt
test
lods
mov
hlt
test
lods
xchg
mov
in
in
or
out
adcl
bound
lahf
jns
in
movl
aaa
dec
push
inc
pop
leave
cmp
mov
cmp
jl
push
sbbb
mov
adc
jns
xchg
mov
shr
add
inc
add
cmp
add
jl
sub
push
add
pop
cmp
ja
cmc
jecxz
rorl
xchg
sbb
sbb
and
jmp
adc
push
add
xor
mov
nop
xchg
jle
push
andb
cmp
push
add
cmp
jge
push
aam
jl
stos
pop
mov
sar
inc
pop
in
fistl
or
jecxz
adc
ja
js
jg
add
cmp
inc
sti
addr16
mov
mov
cs
in
add
mov
cmpb
jne
mov
mov
mov
hlt
adc
mov
out
scas
push
nop
frstor
adc
mov
or
push
mov
push
outsb
and
mov
mov
stos
mov
mov
and
push
dec
sbb
pop
mov
and
mov
addr16
jl
divl
jge
or
or
mov
push
mov
push
push
lock
mov
mov
test
pop
xlat
pop
or
or
aam
sarl
decb
xor
mov
sbb
inc
mov
mov
ret
hlt
push
in
in
mov
scas
jb
imul
outsb
or
or
and
xor
push
popf
or
mov
push
mov
mov
mov
neg
vmwrite
rol
scas
sahf
enter
stos
ss
push
inc
mov
push
inc
and
ss
xor
leave
adc
xorl
aas
and
loopne
inc
lods
enter
sbb
adcl
xchg
shlb
test
sub
jnp
dec
ja
xor
out
sub
in
daa
icebp
lcall
xorb
gs
arpl
and
pop
fimull
cmp
movsb
test
popa
pushf
lea
mov
mov
cltd
push
iret
rorb
mov
sahf
ret
pop
jns
imul
cmpb
inc
es
out
loop
xchg
inc
lahf
and
fdivl
pop
inc
sbbb
mov
sub
jbe
xchg
adc
jne
cwtl
ja
imul
test
jecxz
std
jae
icebp
and
sbb
cs
out
ja
sub
insb
mov
testb
mov
in
inc
mov
pop
sbb
lock
jecxz
xor
or
cmc
and
push
clc
adc
sub
dec
jl
fdivrs
dec
xchg
movsl
fsubp
test
push
clc
add
out
push
xlat
icebp
dec
inc
push
and
sub
fldl
enter
leave
sbb
sbb
xor
pop
inc
xor
sar
adc
or
inc
push
sbb
cli
repz
jg
adc
jno
push
push
push
pop
and
xchg
ss
xchg
aas
lock
pop
dec
cmp
add
jns
cmp
xchg
pop
js
in
les
outsl
movsl
or
addr16
movl
inc
sbb
in
and
pop
popa
lods
mov
movsb
sub
incl
inc
in
dec
sub
jns
roll
vmread
mov
sub
out
xor
or
cmp
add
stc
cmp
ja
lahf
xor
pop
push
cmp
mov
cmp
frstor
iret
sbb
out
mov
add
fidivl
push
or
out
dec
push
sub
in
xchg
addb
mov
or
and
cli
lds
mov
stos
lods
mov
pop
pop
push
jnp
movsb
fwait
push
sbb
test
mov
test
fmuls
rcrl
ficompl
jnp
mov
mov
pop
loop
ds
fmull
repnz
push
loop
jae
in
gs
in
dec
or
les
pushf
sti
pop
xlat
lock
sar
push
in
pusha
push
push
mov
mov
sti
ficomps
mov
insl
inc
sub
cmp
adc
and
or
pop
shr
fs
mov
push
cmp
mov
jle
pop
std
scas
js
inc
inc
cld
mov
cld
push
or
jl
mov
cmp
mov
call
add
push
fs
fs
insl
aas
mov
sub
fldcw
cld
adc
aad
in
popa
jb
outsl
ja
sub
or
inc
push
adc
jbe
or
push
or
outsb
jmp
stos
or
and
mov
pushf
lret
pop
mov
jne
bound
dec
inc
outsl
js
jae
sub
mov
or
jae
xor
imul
dec
jle
mov
rorb
mov
cmp
or
push
push
jnp
sub
push
pop
lret
jge
dec
fsubr
gs
cli
mov
and
test
or
mov
and
mov
dec
xchg
add
push
push
cmc
xchg
pop
pop
jno
shlb
imul
fildll
pop
xlat
inc
or
ror
adc
mov
pop
push
mov
and
xor
call
ret
jecxz
add
int
shrd
mov
repnz
and
and
push
sub
and
inc
call
into
repnz
inc
shll
or
mov
push
and
repz
pop
dec
es
dec
repz
pop
xchg
xor
xor
mov
fisubrs
aam
jecxz
cmp
test
hlt
jg
sub
mov
loopne
lea
hlt
sbb
imul
inc
xchg
test
lea
lods
inc
shll
mov
stc
xchg
fiadds
enter
xor
adc
loope
cmc
pop
les
fidivs
insl
sub
mov
loop
inc
cmp
cmp
mov
mov
aaa
sbb
mov
and
pop
mov
inc
add
sub
mov
adc
dec
jle
cli
mov
jmp
lea
mov
jae
js
lock
mov
test
jne
adc
out
and
js
mov
addr16
xor
fcompl
idiv
imul
or
loop
out
sub
or
mov
cmp
push
adcl
adc
dec
out
es
dec
movsb
xor
jae
dec
out
push
adc
xchg
or
test
fmuls
fsubr
adc
push
add
test
add
add
or
sub
popa
shrb
push
les
cmpsl
fwait
adc
stc
push
xchg
or
jns
push
xlat
cmpsl
lret
arpl
stos
add
push
in
cmc
add
loop
push
jmp
insb
push
push
call
jne
sub
and
xorl
cmp
or
loope
outsl
je
xchg
xchg
and
pop
push
xor
cmovae
cmp
mov
ja
cmpsl
jb
arpl
js
faddl
add
dec
mov
xchg
jns
sub
or
inc
xor
pop
adc
pop
test
cmp
test
inc
ds
and
xchg
cmp
xchg
repnz
rolb
jbe
xchg
add
sub
je
jae
adc
jmp
lds
hlt
sub
into
dec
mov
adc
sbb
mov
jmp
or
sub
jmp
push
cmpsb
fnstenv
movsl
push
fiadds
jmp
push
sbb
neg
mov
add
pop
mov
push
daa
xor
jmp
lahf
inc
shrb
scas
jb
inc
sbb
pop
lcall
xor
add
pcmpeqb
rolb
jne
or
push
hlt
xor
clc
push
ljmp
in
sub
add
cmp
imul
mov
sbb
bswap
je
mov
stos
xchg
leave
mov
lret
and
or
mov
je
xor
lahf
shr
dec
mov
mov
dec
mov
fbstp
push
sub
xchg
dec
stos
jl
mov
sbb
test
mov
lcall
subb
mov
inc
push
inc
or
xchg
sub
push
fsubl
je
and
cs
ds
lods
dec
push
iret
or
and
mov
mov
fbld
ret
push
xchg
sbb
and
nop
push
enter
insb
stc
pop
mov
lahf
clc
xchg
xchg
sbb
pop
pop
adcl
and
jle
out
add
jp
mov
jmp
rorl
jl
imul
sbb
mov
adc
inc
mov
mov
hlt
sub
inc
sarb
enter
mov
and
insb
lret
sub
popa
sub
nop
push
mov
rorb
fisubl
pop
and
outsb
push
xchg
xor
inc
outsl
lret
daa
out
lods
lds
jb
adc
sbb
mov
cmp
leave
push
mov
aaa
mov
fst
dec
stos
outsl
icebp
mov
xchg
sbb
dec
or
cmp
invd
push
or
cmp
add
aam
orl
ja
ss
inc
jne
cmp
out
mov
sub
lret
mov
mov
mov
movl
cmp
sub
mov
inc
sub
xchg
pop
xchg
ret
jne
cltd
aaa
adc
mov
dec
ds
adc
loop
sub
adc
inc
inc
mov
dec
pop
cmp
mov
inc
loop
nop
xchg
aad
fadds
or
sub
jb
adc
xchg
in
inc
xchg
push
dec
jne
arpl
xor
sub
xchg
pcmpeqw
movsb
lcall
retw
fisubrs
lret
push
inc
push
xchg
aad
push
aam
ljmp
xor
loope
push
arpl
xchg
mov
cmp
jne
sbb
or
lds
out
and
xlat
mov
sbb
in
inc
mov
or
inc
xor
mov
stos
sub
sub
jp
cltd
sub
jbe
adcb
dec
push
popa
jmp
adc
rclb
stos
dec
pop
insl
sbb
mov
lret
jp
xor
push
jl
xchg
cld
lcall
xor
jmp
ret
lcall
pop
popf
ja
fstpl
add
adc
mov
pop
sarl
aaa
jae
xorl
int3
sub
push
fmuls
cwtl
push
mov
adc
adc
ret
loop
xchg
sbb
adc
push
or
pop
ja
or
and
push
inc
pop
imul
loopne
mov
xchg
pop
and
xor
mov
xchg
scas
mov
mov
fs
aaa
les
inc
push
std
and
leave
inc
or
or
stos
cmpsl
call
push
cmp
sbb
push
inc
inc
dec
leave
sarb
aas
add
rolb
jg
push
je
je
loop
mov
add
jl
jmp
std
ret
int
push
or
subl
sub
push
adc
or
adc
inc
jo
mov
fidivs
dec
jge
add
shrb
push
dec
or
add
adc
push
push
pop
push
or
mov
inc
mov
add
push
lds
add
pop
push
cmp
mov
xor
sbb
call
jb
mov
sbb
sub
pop
leave
fs
lahf
nop
mov
sbb
jmp
inc
inc
or
xchg
lods
bound
loope
dec
pop
push
adc
lods
aam
enter
jbe
mov
in
jns
jge
nop
xchg
jne
add
sbb
aad
add
push
add
add
push
add
aad
clc
cmp
mov
dec
test
cltd
push
pusha
sub
sarb
pop
push
popf
mov
jbe
or
andb
pushf
subb
orl
push
pop
aad
aad
pop
mov
push
inc
push
push
add
mov
and
mov
into
inc
repz
sub
sahf
les
js
mov
jle
sub
lods
nop
or
jbe
add
jle
cmpb
xchg
push
lds
mov
insl
xchg
push
push
ja
sbb
or
push
adc
add
pop
dec
push
jne
push
mov
pop
aas
cs
fs
aas
cltd
sbb
daa
inc
or
push
jp
nop
push
aad
sub
mov
dec
push
push
dec
inc
dec
or
and
push
sti
xchg
pushf
dec
cmp
push
inc
push
clc
testl
outsb
out
sub
lods
mov
in
arpl
mov
ja
cmp
inc
lahf
pop
iret
sbb
pop
adc
loop
fimuls
lahf
mov
mov
arpl
in
inc
loope
adc
push
push
mov
pop
test
adc
mov
out
je
mov
mov
push
push
inc
push
outsb
pop
or
cmpsb
inc
movl
movsl
hlt
push
add
push
lods
mov
nop
or
xchg
xchg
test
les
xor
mov
or
inc
mov
adc
mov
push
adc
push
push
xchg
xlat
test
sub
xchg
sbb
dec
and
mov
sub
cmpsb
dec
das
int3
jle
stos
mov
outsl
dec
std
add
sub
mov
sbb
mov
out
mov
push
dec
adc
or
nop
push
or
add
enter
mov
inc
add
or
and
adc
inc
daa
test
mov
in
aam
xor
sub
push
outsl
nop
sub
pop
and
movsl
loopne
outsl
ja
jnp
test
fimull
and
outsl
popf
mov
push
jbe
dec
in
push
gs
dec
push
hlt
fs
and
out
dec
inc
mov
inc
xorb
jmp
sub
or
sbbb
aam
sub
sub
cmc
bound
fwait
sub
and
dec
sbb
inc
adc
add
inc
lock
lock
sbb
push
pop
sbb
rcrb
inc
int3
push
jne
or
mov
hlt
adc
in
pop
mov
in
push
in
or
enter
adc
inc
cmp
cmpsl
jg
and
insl
push
and
fsts
gs
and
add
mov
test
or
push
sbb
inc
xor
sti
mov
jmp
mov
jns
inc
popf
push
or
mov
sti
daa
push
in
mov
push
jno
sbb
aam
test
xchg
dec
scas
pop
mov
cmpsb
stos
cltd
push
shrl
pop
jnp
fsubrs
add
mov
xor
push
cmp
das
fsubrs
mov
test
cmp
jae
adc
bound
movl
lods
add
in
and
xor
push
sub
jg
and
mov
add
add
cmc
and
stc
push
or
fsubs
sbb
je
or
int3
hlt
call
pop
jmp
sub
adc
inc
adc
push
xchg
adc
adc
push
aad
dec
cld
pop
adc
add
xor
andl
fmull
add
test
cmc
cwtl
pushf
push
jne
sub
add
xchg
or
std
adc
mov
stc
inc
sub
aas
add
cmp
adc
inc
movsbl
pop
pushf
cmpsl
scas
inc
mov
in
cmp
xchg
pop
inc
or
aam
sahf
sub
jbe
push
in
cwtl
inc
mov
enter
jl
push
movsb
xchg
aad
add
sub
adc
cmpb
loope
pop
ret
inc
stc
test
stos
xchg
xor
nop
call
and
rcrl
push
push
ret
std
sub
aaa
inc
add
loop
gs
or
dec
xchg
or
add
push
subb
sbb
xor
or
jg
ret
movsb
adc
dec
add
call
ret
mov
test
inc
lock
add
lcall
dec
sti
pusha
pop
call
add
clc
and
xchg
xchg
jp
adc
push
inc
daa
jge
mov
and
sbb
andb
dec
xchg
inc
movsl
cmp
jecxz
dec
mov
xor
cmp
rcrl
jns
rclb
pop
movsl
inc
xchg
call
gs
push
pop
inc
pushf
mov
adc
in
mov
and
add
and
jbe
test
sub
dec
lds
cmp
sbbb
adc
push
dec
dec
lods
mov
dec
insb
int
adc
xchg
outsl
nop
daa
stos
adc
push
clc
mov
dec
rcll
xlat
and
test
push
or
xchg
jbe
in
sahf
das
hlt
fisubs
lock
and
inc
adc
sbb
push
mov
cmp
dec
ficompl
sub
pusha
adc
aad
xchg
adc
in
cmp
test
aas
xor
add
pop
scas
dec
sub
xchg
adc
lret
ljmp
aam
lds
push
mov
test
into
mov
scas
push
rcr
sub
sub
cmp
cmp
outsl
jp
jmp
decl
sbb
ljmp
xchg
push
dec
add
sti
dec
xor
lods
scas
xor
xchg
clc
loopne
pop
andl
xchg
movsl
mov
sahf
sub
ss
mov
repnz
mov
or
push
xchg
add
test
daa
fisttpll
scas
cmp
subl
adc
or
daa
inc
push
cmpsb
cmpsl
imul
dec
or
mov
cmp
fisttps
or
and
mov
and
in
push
and
sti
daa
sbbl
dec
cs
cmp
in
dec
push
inc
and
std
fidivrl
push
add
inc
lea
jnp
inc
lock
test
bound
andb
jge
pop
or
sub
rol
or
add
ss
and
adc
not
cmp
xor
iret
sarb
lcall
fs
xchg
shr
jmp
or
test
sbb
mov
mov
xor
loopne
push
stc
or
out
das
in
adc
pop
push
in
sbb
push
aam
leave
mov
clc
adc
dec
mov
test
jb
icebp
dec
sbb
cltd
cs
hlt
stos
inc
std
adc
ficompl
scas
xor
add
movb
fcoms
dec
or
xchg
sbbl
std
dec
sub
adc
sbb
adc
mov
ss
sub
and
mov
adc
sbb
sub
push
jmp
pop
cmpsl
mov
gs
aaa
mov
and
add
notb
push
ljmp
sbb
mov
adc
xor
stos
pop
rorl
jg
xchg
es
aas
sbb
data16
cmpsl
and
scas
adc
push
and
bnd
cmp
test
or
jmp
in
push
and
add
and
inc
add
negl
inc
fdivs
or
dec
imul
sub
pop
mov
int3
sub
push
dec
or
aam
adc
push
in
lock
sbb
xor
repnz
inc
sbb
push
addb
xor
inc
dec
sub
test
or
fadds
adc
out
leave
adc
inc
dec
nop
mov
clc
test
divl
push
push
inc
dec
fsubs
loop
mov
mov
adc
add
mov
fsts
mov
inc
testb
je
push
fdivrs
jecxz
push
adc
sbb
mov
add
mov
or
sub
cmp
loope
jo
loop
lock
adc
jbe
cmp
mov
sbb
xor
sub
cmpsl
sbb
inc
add
and
or
cmp
sub
xlat
pop
sbb
adc
push
sub
pop
lret
mov
sahf
out
pop
adc
jo
orl
add
shll
mov
add
jns
repz
xchg
sub
cmpb
jne
mov
orl
mov
or
mov
sub
cmp
cltd
insb
in
cmp
fiaddl
rolb
cmp
andl
aas
xchg
les
movsb
and
adc
jne
and
je
sbb
and
sti
gs
fs
push
mov
cltd
mov
fwait
es
vmread
mov
cld
mov
cltd
testb
add
out
mov
xor
or
xchg
push
shrb
push
pop
leave
adc
test
add
and
subb
inc
call
jmp
data16
mov
pop
fs
decb
jp
and
repz
sbb
out
popa
push
jecxz
push
daa
fbstp
or
mull
loope
jmp
test
stos
pop
je
aaa
cmp
mov
push
popa
mov
mov
cmp
inc
jo
aaa
xchg
rorl
xchg
and
and
push
sbb
add
add
inc
sbbl
adc
test
adc
push
cmpb
add
or
pop
push
add
jmp
sub
xchg
ret
mov
cmpsb
inc
stc
or
mov
adc
sub
mov
or
inc
mov
pop
or
and
inc
sarb
push
xchg
adc
sub
mov
pop
adc
cmp
xchg
push
adc
sub
test
mov
push
nop
mov
push
pushl
add
shr
gs
jmp
push
sub
add
lret
push
sbb
xchg
add
xchg
gs
add
loope
pop
pop
ret
mov
cmp
pop
repnz
rolb
bound
push
sahf
sbb
inc
adc
or
add
sbb
adc
mov
call
dec
sahf
mov
jmp
jl
sahf
mov
cltd
push
pop
dec
jnp
mov
shlb
push
mov
mov
add
cltd
push
sbb
adc
xor
sbb
movsl
lds
xchg
and
pop
mull
movsl
mulb
andl
popf
cmp
mov
sub
pop
add
push
mov
mov
or
jne
cmp
cmc
pop
movsb
sbb
xchg
ret
inc
adc
rcll
cs
in
in
inc
mov
add
xchg
cmp
jne
add
inc
mov
leave
jns
in
cmpsb
loop
push
fildll
mov
test
adc
dec
lret
je
fs
adc
jns
jns,pn
cld
push
xchg
xlat
mov
adc
in
pop
dec
out
inc
lea
push
aaa
es
mov
jmp
push
ret
adc
add
call
in
stos
stc
fistps
jnp
mov
ret
or
cmp
insl
cmp
push
push
cmp
ret
fs
or
jne
insl
pop
lret
adc
pop
and
popa
dec
adc
inc
in
and
mov
sub
xchg
lahf
and
cmp
cmpsl
xchg
aad
lock
mov
call
push
in
or
sbb
hlt
lods
lret
mov
xchg
or
sub
cmp
sub
insb
loope
cs
or
aam
xor
inc
pop
and
cwtl
inc
xor
add
xor
bound
dec
push
mov
pop
mov
pop
gs
dec
cmp
jo
ja
sbb
nop
mov
push
add
or
dec
cmp
xor
sub
dec
dec
xchg
das
xchg
insb
sub
push
mov
add
sub
aam
pop
fsubr
fisubrl
repz
xor
loope
mov
mov
aas
add
adc
xchg
sub
push
sbb
push
adc
roll
adc
outsb
xchg
mov
std
daa
jle
pop
and
sbb
dec
push
mov
test
and
xchg
dec
jecxz
lea
sbb
add
push
dec
mov
mov
mov
xchg
cmp
outsb
xor
pushf
sahf
mov
sahf
rorl
sub
cmpsl
sahf
or
ss
sbb
orl
sub
mov
je
add
mov
inc
dec
jne
push
into
jb
imull
cld
lcall
inc
mov
mov
inc
add
jmp
adc
adc
and
or
and
jne
sub
jle
das
push
dec
mov
cmc
inc
jae
data16
push
pop
push
int3
and
out
fs
or
push
popf
pop
in
inc
ret
jno
and
sub
rol
lock
out
lret
or
or
cmp
cmp
mov
and
out
push
daa
cmp
mov
inc
scas
sbbb
push
pusha
push
inc
div
mov
add
fisttpl
movsb
pop
lock
lahf
pop
or
adc
lcall
xchg
add
mov
push
mov
xor
lret
sbb
mov
jmp
cwtl
push
scas
adc
push
in
cli
mov
rorb
lcall
jmp
push
inc
je
mov
inc
and
xor
or
adc
or
leave
mov
leave
ficoml
adc
js
push
flds
and
jg
es
sbb
loop
sbb
outsw
push
or
cmpsl
fmull
push
mov
push
lcall
inc
mov
mov
test
dec
or
mov
decl
pop
loop
push
push
adc
faddl
popf
cmp
xchg
mov
into
jle
pop
insb
pop
stc
loop
shr
sbb
inc
mov
mov
add
mov
rcrl
mov
mov
and
gs
push
jns
push
pop
add
stc
leave
clc
push
cmp
inc
inc
cmpsl
xchg
xchg
inc
enter
dec
xchg
xor
call
in
jge
or
mov
jb
xor
xchg
outsb
mov
sbb
jle
xchg
inc
cmpsb
push
or
ljmp
jne
test
shll
adc
and
imul
push
pop
push
hlt
daa
sbb
movl
push
push
call
pusha
push
das
jmp
aad
mov
pushf
lcall
and
xchg
and
scas
adc
add
sbb
cmp
dec
ljmp
pop
xchg
jne
xchg
js
cmpl
pop
mov
out
dec
daa
push
cmp
dec
or
mov
dec
push
mov
adc
sub
sti
loope
outsb
repz
hlt
mov
dec
xchg
adc
arpl
jo
cltd
push
sbb
shrl
test
jg
and
and
clc
mov
inc
inc
incl
mov
adcl
call
pop
sub
jg
xchg
hlt
out
out
out
outsl
cwtl
push
jmp
xchg
jns
add
mov
sub
ja
xor
and
sub
jae
push
adc
sbb
ret
push
xor
xchg
push
mov
orb
add
add
adc
push
adc
mov
adc
data16
push
inc
outsl
in
push
mov
fwait
and
rorb
shlb
dec
inc
push
pop
sub
and
cmpl
xchg
je
sbb
repz
cs
cmp
sub
cmpsb
sldt
jne
inc
decl
in
mov
icebp
in
outsb
jb
xchg
or
jb
inc
insl
repnz
xchg
inc
mov
pushl
in
leave
push
fisttpl
lds
pop
les
or
icebp
loope
dec
call
out
mov
push
pop
mov
mov
mov
aaa
inc
cmp
inc
rcll
inc
mov
add
lea
jo
mov
sub
js
adc
arpl
icebp
cmp
sbb
outsl
push
dec
jbe
dec
push
xlat
jle
dec
js
or
xor
push
xorb
xlat
fwait
dec
std
sbb
pop
jb
cld
add
jmp
xor
cs
mov
lds
insb
call
push
mov
cld
jge
cmpb
ret
sub
xchg
scas
sub
push
jecxz
insl
pop
push
clc
pusha
and
mov
fstpt
pop
fbld
jmp
sahf
decb
iret
ficomps
dec
adc
xlat
sub
testl
cmp
leave
xchg
or
inc
xor
adc
or
push
add
cmp
or
outsl
or
lahf
push
xor
sbb
out
add
mov
imul
subb
add
imul
xchg
adc
jl
push
lock
jle
movsl
jae
jae
aad
ror
add
fiadds
dec
mov
out
test
inc
mov
data16
aas
dec
sub
dec
mov
enter
mov
sub
popa
pop
push
xchg
jbe
dec
sub
lods
cli
xorb
inc
dec
rclb
or
aaa
adc
mov
test
dec
xchg
sub
mov
test
add
jo
cmp
jne
insl
pop
sbb
adcb
adc
scas
sub
push
inc
mov
xor
aam
mov
sub
add
xchg
mov
dec
mov
call
jae
iret
sub
xor
mov
push
movswl
mov
mov
movzbl
cmpl
mov
xor
xor
mov
ret
jne
xchg
and
scas
stos
inc
add
or
or
xor
ret
xor
xor
rclb
inc
xchg
sbb
pop
dec
push
sub
pop
add
imul
xorb
std
mov
mov
enter
stos
pushf
adcl
jo
push
push
sub
jne
push
adc
test
popl
test
mov
mov
rcl
js
mov
and
flds
cmp
popl
ds
and
jbe
sbb
adc
test
mov
mov
cmpsb
mov
shl
test
nop
mov
stc
test
and
aas
test
adc
test
arpl
out
sbb
cmp
xchg
jl
inc
stos
cmp
push
aas
push
inc
cmpb
xchg
xchg
pop
jge
mov
in
iret
lea
mov
and
fs
adc
stos
cmp
fcoms
stos
xchg
scas
mov
adc
mov
push
in
jmp
ss
fsubs
and
mov
rorb
scas
pop
mov
push
aaa
add
sti
shlb
inc
testb
cwtl
push
cmp
xchg
ret
dec
aaa
lods
xor
push
jnp
inc
incl
loopne
test
divl
inc
xchg
mov
or
out
dec
mov
inc
arpl
sub
inc
mov
sub
push
or
sbb
scas
inc
xchg
out
iret
sub
cltd
sti
or
add
mov
mov
sbbb
shrb
push
subl
pop
mov
or
mov
int3
sbb
and
shll
or
scas
ja
add
enter
fs
insl
test
in
sbb
push
gs
dec
pop
je
std
jb
aaa
sti
jl
inc
cli
bound
cmpsb
jb
popa
imul
inc
mov
jo
outsb
imul
std
int
in
jae
scas
inc
cmp
jae
imul
jmp
fdivrl
loopne
dec
dec
test
dec
mov
push
loope
push
mov
les
cmc
or
adc
mov
data16
mov
dec
shrl
inc
fidivrs
or
arpl
jmp
fmull
fwait
aas
xor
std
push
mov
and
scas
adc
std
les
adc
mov
outsl
jb
jne
mov
es
jl
add
or
sub
aas
or
mov
andb
or
adcl
stc
push
lret
rol
popf
xchg
xor
pop
test
ds
dec
pop
sbb
jp
cmpsb
fistl
xchg
or
sarb
cmp
jns
popf
and
les
xchg
rorl
cmp
pop
in
das
and
inc
jb
and
sbb
cmp
adc
shl
and
daa
inc
lods
cmp
popa
inc
negl
inc
jg
push
inc
lods
jg
out
sbb
and
push
std
leave
fiadds
movsl
or
adc
ja
test
stc
jo
aad
and
dec
imul
mov
or
pop
sar
xchg
xor
repnz
xor
mov
loopne
test
test
push
mov
ficoms
jne
test
inc
lods
test
test
push
cmp
xchg
mov
icebp
test
adc
inc
ljmp
mov
dec
adc
or
push
and
shl
jne
jno
adc
sub
sbb
test
sub
sub
and
add
movsb
outsl
cmp
pop
jg
test
cli
sbb
fidivrl
and
sarb
sbb
push
push
adc
sti
lea
lret
xchg
push
cmp
adc
aad
inc
sar
mulb
dec
sbb
mov
pop
es
iret
inc
rolb
js
adc
loope
inc
fwait
outsb
sbb
aas
adc
and
adc
xorb
add
and
push
and
or
inc
or
sbb
sbb
xchg
xchg
and
jbe
xchg
and
jbe
xchg
push
in
jne
push
popf
and
mov
adc
fcompl
fisttps
push
push
add
adc
aaa
push
push
pushf
push
inc
or
sbb
or
movsb
mov
and
push
inc
testl
adc
dec
sub
inc
push
daa
mov
and
mov
dec
test
ljmp
sub
mov
adc
inc
cld
mov
scas
or
xor
hlt
cmp
mov
div
outsl
xchg
adc
jmp
cmp
xor
lds
xor
sub
out
arpl
or
lods
push
in
jg
ljmp
xchg
scas
xor
clc
movsl
test
leave
xor
add
cmpb
test
ficoml
xor
lods
daa
mov
leave
xchg
lock
pop
hlt
add
cmp
or
mov
inc
cld
mov
cmpsl
dec
inc
pop
mov
cmpl
push
and
or
inc
jg
test
lea
xchg
push
lea
push
rorl
xchg
rcll
push
and
add
mov
cs
pop
call
dec
jne
adc
outsl
pushl
aas
jno
lods
adc
cs
ud2
ja
cld
out
sbb
dec
push
and
adc
inc
push
xchg
xchg
xchg
test
lock
add
cmp
dec
aaa
xor
cmp
or
icebp
or
sub
insb
sbb
das
inc
aad
mov
sbb
cld
xor
cld
rorb
test
roll
xchg
rorl
cs
test
and
mov
push
mov
jns
dec
xchg
mov
inc
out
lret
dec
xor
push
cmp
ret
xchg
xchg
stc
jnp
cmp
push
push
jne
adc
jne
mov
icebp
ret
stos
and
fs
cmc
or
test
mov
mov
cmp
inc
std
and
or
or
xor
sarl
xchg
mov
sbb
push
cmp
pop
xchg
popl
addb
stos
gs
push
enter
mov
or
mov
lahf
cld
pop
imul
mov
pusha
mov
popa
xchg
push
push
ja
push
sbb
mov
xor
adc
mov
imul
sbb
ficoml
jbe
pop
mov
repz
sbb
sub
adc
jp
stc
push
clc
call
mov
adc
pop
pop
lahf
repz
adc
rorb
es
faddl
cltd
dec
hlt
and
test
sub
mov
pop
lret
inc
in
adc
mov
sbb
pop
out
shlb
leave
mov
jg
lret
out
rclb
xchg
in
test
outsl
nop
nop
xchg
test
push
test
sti
inc
inc
dec
sbb
inc
mov
mov
iret
add
push
dec
jb
push
inc
xor
pop
sahf
dec
fwait
push
js
rclb
cmp
or
dec
ficompl
mov
mov
or
add
add
arpl
sub
mov
xchg
jmp
sub
in
decl
lret
movsl
xlat
ljmp
icebp
sbb
adc
pop
scas
adc
pop
and
mov
mov
or
push
into
pop
js
aas
cmp
push
fidivrs
nop
call
inc
push
mov
xor
test
scas
aaa
xchg
out
jmp
test
cmp
jmp
inc
cmc
push
adc
fisubl
ret
adcb
or
inc
fildl
cmp
outsl
mov
xor
sub
push
loop
jnp
pop
repnz
cli
adc
cmp
inc
jb
cmp
xor
pop
xor
add
bnd
xchg
xor
aas
and
shrb
jnp
mov
adc
jp
or
sbb
inc
fimuls
pop
jmp
add
pop
ss
push
or
lcall
or
pop
jl
lea
push
inc
stc
jl
js
dec
aaa
inc
repz
xchg
or
and
add
adc
cs
sbb
xor
jne
sub
imul
cmp
mov
inc
je
add
add
repz
push
test
in
pop
shll
xor
jecxz
mov
cmp
xchg
sbb
inc
and
push
sbb
fmuls
and
aas
push
lea
add
push
or
dec
sbb
dec
sub
fldl
pop
test
and
daa
xor
push
rcll
jge
add
inc
push
push
dec
outsl
sahf
adc
jne
sti
jb
adc
mov
adc
sub
das
dec
sti
pusha
add
jb
mov
jno
adc
adc
or
sub
sbb
imul
das
scas
pushf
jge
lock
fimuls
notl
dec
xchg
ret
cmpsb
pushl
sarb
jns
xorl
lock
push
data16
xor
or
popf
or
mov
fstpt
dec
mov
and
pop
sbb
jne
addr16
das
std
sbb
out
mov
jns
sbb
jae
mov
mov
mov
pop
push
push
pusha
push
mov
inc
mov
stos
jne
outsl
xor
neg
pop
popf
icebp
mov
ret
loop
adc
in
mov
mov
jbe
sub
and
adc
adc
leave
sbb
movzbl
jecxz
add
dec
pushf
lret
sbb
jno
push
inc
inc
jle
fisttpl
cmpb
xchg
movsb
into
movsb
mov
mov
mov
push
andl
and
iret
inc
cmp
jbe
push
sbb
cmpb
xchg
test
fadds
sub
clc
xchg
movsb
cwtl
leave
jmp
inc
mov
mov
sub
adc
pop
in
jbe
mov
and
push
xchg
pop
mov
mov
cltd
leave
mov
cmp
sbb
push
pop
aaa
and
push
je
inc
push
cmp
adcb
je
mov
or
movsb
or
pop
movsb
int
lret
stos
xor
or
pop
addr16
or
cmpsl
xchg
xor
cmpsl
pop
or
call
out
mov
adcb
punpckhdq
inc
jle
movsb
pop
test
jmp
popa
mov
popf
cmpsl
mov
lods
cli
xor
test
sbb
movsb
cmpsb
daa
inc
mov
adc
cltd
push
mov
aam
xchg
mov
sub
mov
lock
jbe
daa
ret
jle
jne
in
adc
jg
or
and
xchg
cmp
leave
in
push
imul
inc
or
adc
scas
lret
pop
dec
mov
sub
add
fcompl
fnstsw
sbb
mov
out
filds
pop
lahf
call
daa
mov
xor
mov
enter
or
mov
das
aaa
xchg
int3
adc
mov
bound
dec
push
sahf
mov
or
mov
or
pop
out
pop
mov
dec
mov
cld
push
repnz
cmp
jl
pop
aad
add
je
mov
and
stos
lock
jmp
push
roll
les
ja
ficoml
dec
stc
mov
iret
mov
fsubl
jmp
jmp
mov
adc
or
jmp
in
pop
adc
push
or
loope
aam
loop
sub
repnz
leave
dec
add
jmp
push
and
rcrl
fs
hlt
add
mov
pop
pop
imul
int3
cmpsl
push
lret
pop
push
dec
adc
dec
pop
adc
inc
gs
mov
into
push
and
push
xchg
adc
stos
leave
mov
add
and
xchg
push
in
mov
js
xchg
cmpsb
dec
cmpsl
mov
inc
gs
dec
popa
adc
lock
das
dec
movsl
mov
push
in
adc
push
out
inc
je
cmp
jns
outsb
movsl
lea
jp
and
mov
sbbb
cmpsb
adc
sub
jnp
popa
push
mov
pop
push
dec
jl
or
shrb
and
or
data16
or
dec
or
xor
ficompl
popa
das
sub
or
and
and
jne
movzbl
push
or
scas
lfs
or
das
sub
mov
mov
push
or
pop
lahf
cmp
movl
jp
or
orl
mov
data16
decl
pop
push
adcl
xchg
jg
inc
pushf
das
jg
cmc
movsl
movsl
dec
mov
add
pop
pop
and
or
add
adc
call
lretw
lahf
outsb
js
or
gs
sbb
jg
les
mov
popf
mov
xchg
inc
sbb
aam
cmp
aad
xchg
aam
sbb
outsl
lcall
mov
dec
inc
pop
jle
imulb
mov
push
or
inc
sbb
aad
daa
sbb
mov
adc
mov
and
and
jnp
test
and
and
mov
lds
pop
out
mov
xchg
adc
mov
fcomi
cld
rorb
call
or
rcrl
ret
add
mov
sbb
xchg
jg
xchg
pop
adc
ret
dec
pop
adc
dec
lret
inc
pop
push
mov
inc
enter
je
icebp
lahf
push
push
sbb
and
subl
and
fld
adc
sub
fxch
or
je
adc
adc
inc
add
pop
test
xor
mov
mov
sbb
adc
cs
popf
inc
push
test
int
add
ss
dec
xorl
dec
mov
ds
sub
mov
scas
insl
arpl
or
cmc
mov
add
hlt
outsb
out
sub
dec
pop
ss
add
cmpsb
dec
mov
fwait
arpl
lret
or
negb
inc
ret
cmp
jae
xor
es
dec
and
adc
and
jp
and
and
or
stos
call
fcompl
mov
into
pop
dec
sti
mov
and
fstl
push
test
bound
int3
lea
inc
bound
xchg
push
jae
xor
incl
dec
je
sub
push
mov
fwait
push
subb
arpl
mov
add
ret
daa
or
ficomps
sub
hlt
popf
icebp
push
cmp
xor
xchg
inc
dec
cmp
cmp
fsubrl
xor
shrl
add
inc
xor
add
dec
inc
push
push
imul
fs
add
xchg
js
icebp
sbb
shll
adc
cmp
jne
jmp
nop
push
inc
aaa
cmpsb
and
leave
fstl
xchg
fcomp
dec
push
call
sbb
lock
sbb
in
dec
cld
jo
popa
jae
ja
push
fs
xchg
jecxz
cmp
imul
popf
rcr
test
pop
inc
inc
dec
cmp
sub
adc
mov
sbb
pop
sti
push
les
bound
dec
inc
fcoms
adc
loope
mov
std
inc
or
mov
cli
in
orb
outsb
push
loopnew
fs
sbb
or
outsb
fnstsw
aam
js
outsb
push
loope
and
daa
je
js
jg
push
faddl
fadds
aaa
pop
icebp
pop
cli
and
mov
mov
sbb
mov
dec
pop
jmp
cltd
adc
popf
rcll
insb
pop
arpl
and
jae
cwtl
jns
test
lock
and
xlat
fbld
or
and
push
je
roll
jp
xor
pop
outsb
push
or
mov
lret
dec
mov
fs
loopne
inc
inc
xor
mov
sbb
inc
lds
or
push
pop
hlt
inc
mov
ret
aad
mov
jge
je
dec
outsb
fisubl
pop
cs
and
data16
mov
jmp
rcrb
adc
data16
xchg
push
and
and
inc
sbbl
inc
orl
push
ret
inc
cmp
jae
nop
rclb
icebp
sub
push
pop
inc
pop
imul
fnstenv
pop
sub
pop
dec
or
enter
das
jno
inc
mov
xchg
or
js
adc
lods
cmp
in
xor
adc
fsubs
bound
int3
cmpsl
jb
add
stos
mov
es
addr16
or
cmpl
in
mov
sarl
cmp
sbb
sub
push
xor
push
lods
lods
aam
negl
xlat
loope
aaa
or
enter
push
aas
sbb
mov
push
inc
mov
mov
pop
add
gs
dec
sub
xlat
les
mov
mov
inc
mov
jmp
dec
sub
adc
test
pop
in
cmp
imul
mov
mov
pop
fstpl
out
pusha
cmpsb
or
test
and
insl
sub
adc
fmulp
filds
in
pop
clc
add
jne
aam
stos
add
and
xchg
adc
test
sbb
jg
sub
movsb
ret
in
or
push
inc
sub
fadds
lods
iret
jo
fadds
or
stos
sub
inc
dec
in
and
xor
sub
mov
cmp
ret
lahf
fistl
loope
js
pop
jae
xchg
pop
or
cmp
clc
xchg
push
sub
in
popa
ret
pushf
mov
imul
sub
stos
jb
adc
popa
outsb
mov
rorl
ja
fsubr
lcall
scas
pop
mov
lahf
or
xor
dec
outsb
sbb
inc
lds
cs
popf
pop
xlat
dec
push
pop
push
bnd
cmp
cs
mov
cmp
andb
sub
test
ljmp
jb
loop
xchg
cli
cmp
jo
xchg
rol
adc
dec
push
loopne
lds
enter
aas
fidivs
and
cmp
mov
inc
notl
popa
arpl
and
lahf
roll
shlb
xchg
shrb
js
xchg
jnp
cltd
pop
adc
subl
shll
push
cltd
out
xchg
pop
addl
dec
xchg
cli
daa
xchg
push
in
ljmp
or
cmp
sahf
cwtl
dec
lea
mov
call
or
clc
decl
daa
adc
cmpsl
icebp
adc
xchg
fidivs
sbb
mov
sahf
adc
mov
je
inc
sbb
mov
mov
jecxz
mov
hlt
shr
cli
cmc
cltd
cmp
sbb
xor
xchg
push
inc
mov
xchg
dec
sti
or
sti
jecxz
cmp
jge
or
nop
mov
xchg
mov
jg
in
xchg
repz
pop
movl
push
mov
test
insb
mov
aaa
enter
mov
mov
xor
inc
pushf
and
enter
pop
test
mov
inc
cmpsl
mov
add
clc
xchg
mov
fsubrl
dec
in
inc
cld
pop
mov
insb
xchg
add
cmp
pop
push
fstp
rcrb
inc
mov
adc
mov
test
xor
lock
adc
sbb
xchg
and
cld
enter
addr16
and
or
push
adc
enter
adc
ss
or
push
test
sarb
pusha
pop
cltd
add
and
adc
xchg
ret
and
dec
mov
jae
mov
add
test
jo
xchg
push
data16
imulb
scas
arpl
movsl
imul
cmpsl
arpl
inc
enter
sgdtl
adc
dec
test
incl
adc
push
or
rorl
js
insb
sbb
loope
cmpb
inc
dec
mov
les
push
outsb
and
add
cmp
xorb
cmp
nop
or
inc
cwtl
and
jno
das
jg
sbb
push
nop
ss
cld
int3
cs
imul
push
add
push
or
inc
repz
push
adc
cmp
ljmp
inc
lahf
pusha
push
addl
cmp
or
ss
call
adc
sub
mov
loope
dec
mov
add
adc
add
inc
sub
mov
adc
adc
lcall
and
fstps
mulb
inc
or
ljmp
lds
mov
cmpb
and
clc
jmp
pusha
shr
cmpsb
into
inc
sub
inc
mov
push
call
jl
adc
dec
pop
scas
pop
lock
adc
or
inc
or
sub
mov
inc
or
mov
mov
and
sbb
sub
jno
jno
repnz
test
enter
inc
add
sbb
imul
and
adc
in
pusha
mov
mov
push
sbb
rcrl
inc
jbe
sbb
inc
xchg
je,pt
add
or
insb
adc
add
inc
xor
test
and
adc
fs
inc
mov
cltd
jo
mov
test
adc
lods
adc
and
inc
mov
mov
xchg
rorb
les
int3
shlb
add
xor
xor
fcompl
loopne
xor
scas
imul
xchg
and
cmp
sub
adc
cmp
cld
mov
cmp
adc
xchg
adc
sbb
dec
or
and
add
xor
xor
sbb
sbb
xor
cmp
inc
and
inc
and
and
mov
push
enter
or
bound
xor
je
insb
sbb
js
je
out
jl
cmp
xchg
pop
les
xchg
test
inc
mov
inc
mov
nop
adc
bound
inc
nop
and
lods
xor
xchg
and
mov
sbb
adc
bound
inc
mov
in
call
xchg
mov
adc
sbb
dec
es
clc
adc
mov
sti
shlb
in
and
xor
or
xchg
mov
movsb
stc
dec
sub
and
mov
pushf
nop
adc
jb
jnp
stc
sti
gs
pop
pushf
inc
stc
xchg
dec
enter
ljmp
fsubl
ljmp
cmp
mov
ds
adc
test
adc
mov
test
sub
adc
pop
dec
mov
or
mov
mov
mov
sbb
adc
ficompl
aam
sbb
adc
sbb
xchg
and
daa
add
sub
xor
xchg
adc
in
cmp
inc
shr
insl
add
push
in
es
xchg
sub
adc
and
cmc
enter
addr16
xor
or
xchg
cmp
ret
xchg
js
add
xor
or
xchg
and
inc
lea
loop
xor
inc
mov
mov
adcl
cmp
in
adc
loopne
in
inc
pop
psubsb
in
push
sbb
test
sbb
inc
sbb
add
and
jb
sbb
or
test
sbb
adc
sbb
sbb
push
xor
sbb
and
nop
sub
sub
and
xchg
mov
cmp
cmp
inc
and
inc
nop
inc
mov
dec
test
and
push
fs
sub
pop
inc
xor
or
daa
nop
push
or
xchg
mov
fs
jl
inc
sub
adcb
or
test
sub
nop
fs
sub
pushf
inc
xor
das
nop
test
lods
push
xor
xchg
mov
fs
xor
inc
les
int3
push
xor
rolb
cmpl
in
ss
and
sbb
or
js
or
es
jno
dec
push
lds
adc
adc
xor
adc
jnp
inc
clc
cmp
and
enter
or
xchg
mov
sbb
sbb
inc
jg
and
sub
test
and
xchg
xor
and
lock
bound
lods
popa
inc
xchg
and
push
adc
xor
xchg
and
mov
insb
test
xchg
enter
sub
jl
xchg
xor
cwtl
nop
mov
mov
or
xchg
mov
mov
fwait
or
xchg
mov
adc
mov
xorl
sub
mov
enter
xor
adc
mov
adc
xor
adc
lds
fcoms
loopne
in
inc
int3
or
lock
xchg
mov
int
lock
into
mov
clc
and
sub
and
adc
roll
xchg
popa
or
mov
xor
leave
pop
xchg
pop
add
and
adc
xor
test
test
or
add
dec
and
je
xchg
or
clc
or
xchg
nop
cmp
cwtl
adc
hlt
adc
xchg
and
adc
inc
mov
lods
adc
or
test
or
inc
sub
out
and
adc
mov
fistl
mov
dec
cmpsb
mov
cwtl
lock
in
mov
adc
nop
dec
jge
outsb
jo
lods
adc
movsl
lock
cs
jl
xchg
sub
in
push
mov
xchg
movzbl
popf
mov
cmpsb
sbb
inc
daa
sbb
insl
mov
sbb
or
mov
popf
jb
test
mov
mov
aad
and
int3
mulb
fs
push
in
jecxz
push
adc
add
push
in
jmp
test
or
mov
adc
and
inc
add
test
or
add
and
add
sbb
add
and
lea
add
mov
xor
pop
add
sbb
and
jmp
or
dec
xchg
dec
mov
push
xor
or
inc
pop
mov
pusha
enter
add
insb
sbb
push
inc
jo
je
jo
js
jl
adc
xor
inc
mov
xchg
rcll
add
adc
mov
or
xorl
mov
xor
adc
mov
mov
testb
xor
pop
dec
mov
push
out
push
xchg
jmp
xlat
movsl
dec
lea
push
jmp
mov
sub
cmc
out
or
push
add
test
dec
and
inc
and
push
outsb
inc
clc
mov
adc
sahf
adc
sti
cmp
jbe
lret
adc
or
xchg
and
nop
enter
fdivl
rcrb
aam
add
sbb
dec
es
inc
loopne
mov
call
mov
dec
sbb
daa
push
adc
adc
push
es
xchg
adc
popf
pop
cld
cmc
test
pop
dec
sub
pop
xor
aad
push
sbb
aaa
fadds
call
or
pop
lock
std
fs
mov
push
imul
ret
call
mov
cltd
adc
imul
cli
gs
jle
bound
mov
add
adc
dec
stc
mov
pop
sbb
fimull
movsl
adc
push
push
sub
test
inc
mov
les
fistps
jle
mov
scas
jp
adc
sub
cld
and
dec
popf
ret
outsl
je
inc
das
inc
lahf
xchg
inc
pusha
add
xor
sbb
mov
pop
jbe
insb
lock
or
andl
jne
push
outsb
popa
insl
jg
mov
hlt
add
imul
jecxz
push
jns
xchg
dec
insl
push
mov
xor
push
subl
push
sbb
mov
fs
xor
inc
jne
insb
imul
push
insb
adc
adc
and
xorb
push
inc
push
push
in
mov
daa
mov
and
stc
dec
pop
xor
xchg
cmc
cmp
push
cmp
push
sbb
jp
xchg
icebp
in
ljmp
jne
mov
mov
lods
jmp
lods
loop
shrb
jb
jb,pn
push
and
and
and
jae
jb
and
add
and
arpl
dec
push
cmpsb
je
or
sub
rcll
cs
lcall
push
push
stos
and
repz
into
sbb
dec
das
xchg
cmp
adc
movsl
sbb
inc
aad
call
dec
nopl
sub
adc
inc
push
mov
ror
imul
push
test
push
sbb
inc
and
inc
and
scas
movsl
sub
test
mov
ds
inc
testb
xor
inc
dec
mov
pop
dec
dec
pop
add
sub
in
in
dec
dec
dec
das
cmp
cmp
push
sbb
mov
test
push
inc
ret
ja
jnp
and
sbb
sbb
cs
addr16
xchg
push
dec
mov
inc
push
mov
jne
xchg
jo
es
cs
cltd
adcb
repnz
xor
xor
xchg
pusha
push
inc
stos
push
shlb
sub
dec
insl
dec
xor
xor
push
xchg
jecxz
xchg
sub
mov
in
xor
sub
lods
xor
mov
nop
push
dec
inc
popa
jl
xor
mov
fs
pop
xchg
adc
les
jno
or
pop
imul
push
aaa
in
cld
push
mov
jae
jp
adc
pop
test
mov
js
and
sub
mov
lods
and
sub
sub
mov
lods
insb
adc
and
mov
dec
pop
dec
loopne
cmp
cmc
push
insb
push
jns
sub
push
push
inc
repnz
mov
sahf
inc
cltd
or
inc
jb
and
mov
mov
mov
jp
rclb
or
inc
inc
mov
fiaddl
cmpb
sbb
push
pusha
cmp
aam
cmp
push
pop
outsb
dec
ljmp
and
or
cltd
pop
inc
cmp
fsubrl
sbb
dec
push
inc
dec
sub
movsb
mov
xor
sub
inc
mov
jb
add
push
rorb
popa
repnz
jae
sub
pusha
cli
loope
dec
imul
jno
into
gs
push
jmp
adc
movsl
stos
jbe
inc
xchg
call
push
shrb
nop
push
dec
gs
xchg
dec
dec
je
jne
repnz
sbb
cmp
dec
xor
js
adc
inc
adc
jne
xor
inc
out
movsb
fwait
sbb
insl
xchg
aam
inc
dec
mov
imul
sahf
and
mov
jne
imul
mul
lret
gs
int3
inc
inc
lds
popa
jns
and
add
arpl
test
fwait
adcb
inc
mov
cmpsl
cmp
sbb
cmp
int3
iret
enter
fiaddl
jae
xchg
mov
and
dec
and
pop
adc
push
push
and
out
insl
adc
inc
inc
lcall
and
popa
cmpsl
cld
int3
mov
mov
inc
push
or
push
pop
mov
int
insb
shl
mov
and
testl
xchg
sub
daa
inc
sub
pushf
cmpsl
repz
jecxz
mov
xchg
mov
xchg
into
sbb
mov
push
cwtl
fdivl
dec
xchg
into
js
inc
adc
push
je
in
das
sbb
inc
xchg
dec
mov
dec
push
adc
scas
and
push
dec
scas
and
mov
inc
adc
or
mov
push
mov
mov
xchg
ficoms
outsb
cmpsb
and
sbb
xor
pop
push
outsb
popaw
in
push
ficoml
and
cmp
orb
mov
push
and
push
dec
cmp
popf
pop
xor
js
movsl
jmp
imul
into
out
xchg
jb
push
aad
mov
adc
xchg
and
adc
and
jo
push
cs
sub
sub
outsl
inc
mov
jb
and
push
or
add
popa
addr16
xchg
and
inc
push
and
xorb
push
aas
and
mov
push
in
popa
and
pop
and
mov
stos
ficoms
popa
add
andl
hlt
xchg
outsb
and
or
and
mov
jns
lods
icebp
push
xchg
push
jmp
mov
jge
dec
pop
add
loopne
sbb
out
adc
jne
out
hlt
cmp
lods
xor
cmp
mov
test
sub
push
ret
gs
push
insb
stos
push
popf
add
or
fisubrs
repz
call
loopne
add
jge
inc
mov
pusha
arpl
pand
sub
add
add
ja
outsb
lcall
jb
into
fs
xchg
stos
test
mov
or
jecxz
ljmp
std
loopne
xchg
rorl
fwait
sbb
loopne
loop
fwait
adc
push
push
mov
outsl
mov
dec
call
or
je
dec
test
add
mov
movzwl
repz
cmp
jne
and
sub
ss
repnz
jecxz
sysenter
fcomi
pause
jbe
adc
sub
and
push
je
sbb
ret
jne
cmpsl
dec
adc
lods
daa
dec
mov
pop
sub
pop
xchg
xor
mov
inc
sti
mov
and
inc
adc
and
lock
push
testb
xor
ja
dec
push
out
int3
sbb
fs
daa
mov
push
adc
mov
jg
sbb
pop
push
adc
or
sarl
cs
mov
mov
je
adc
and
lock
sbb
fnstsw
mov
xor
cli
filds
mov
push
cltd
loopne
pop
pushl
push
scas
negb
dec
ja
mov
ret
mov
mov
jle
mov
inc
push
adc
cmpsb
sbb
sbb
adc
shll
cmp
cmp
dec
cmp
lods
addb
imul
push
sbb
test
int3
sbb
les
xor
mov
jb
decl
ljmp
pop
in
push
test
and
test
call
enter
call
mov
inc
fwait
jne
call
ljmp
loop
mov
lods
pop
adc
add
or
divl
loopne
jno
lock
push
jae
or
mov
jmp
stos
inc
int3
mov
bound
sbb
add
push
call
test
aaa
cmp
mov
mov
das
sub
push
xchg
imul
addr16
or
or
pop
in
pop
jle
adc
insb
pop
mov
ret
scas
xor
add
inc
sbb
or
mov
mov
rcrl
scas
je
mov
cmpb
cmp
test
dec
push
das
lds
addr16
hlt
add
push
dec
inc
pop
mov
movsb
cmp
test
test
ret
lods
sahf
xchg
insb
mov
push
and
or
stos
icebp
and
cwtl
js
stos
push
cmc
sbb
cld
xchg
and
dec
jne
ljmp
cmpsl
adc
orl
clc
inc
push
test
std
mov
movsb
mov
mov
push
mov
clc
jo
hlt
ja
les
pusha
imul
push
lret
fs
lret
cmp
and
xor
push
pop
lock
int3
xchg
add
pop
xchg
dec
add
pop
inc
dec
mov
or
pusha
ljmp
fsubl
test
or
pop
or
mov
mov
imul
mov
pop
and
push
mov
lods
dec
mov
mov
call
mov
ret
mov
mov
xor
mov
aam
push
int3
add
ja
adc
popa
dec
jecxz
pusha
cmpsb
fwait
jmp
or
and
and
clc
push
shl
sbb
or
mov
and
ja
ja
cltd
jns
sbbb
add
repnz
lods
add
mov
addb
stc
xor
and
push
pop
or
fiadds
pusha
or
sub
inc
das
sti
xchg
sbb
data16
into
or
into
push
nop
push
enter
adc
mov
int
test
cwtl
jmp
sub
push
int
jmp
jecxz
ficoms
das
cli
test
push
sub
adc
sbb
xor
jmp
into
repnz
sbb
sbb
jecxz
repnz
and
test
test
xor
and
sti
or
mov
push
inc
inc
enter
dec
scas
and
push
les
lock
jmp
outsb
mov
ret
dec
das
sub
in
movsl
adc
movsl
sub
push
ljmp
push
push
out
sub
jns
test
psrad
aam
push
inc
jo
lret
js
pusha
inc
cmpsl
test
xchg
mov
xchg
sub
ljmp
test
mov
lock
enter
repz
push
test
int3
pop
nop
mov
std
test
mov
aaa
inc
pushf
aas
enter
test
sub
mov
xor
push
movsb
cld
mov
loopne
mov
les
test
jno
repnz
and
or
mov
or
sbb
cmc
mov
arpl
and
push
test
cmp
jg
repnz
dec
push
or
stos
and
mov
test
popf
cmp
test
jns
adc
mov
xchg
mov
push
out
lea
sbb
cld
push
aaa
leave
aam
push
ret
push
inc
fsubr
popl
popf
jecxz
call
nop
loopne
adc
mov
lods
pop
xor
lea
sbb
inc
in
in
movsl
inc
into
mov
shlb
or
shll
hlt
out
push
xor
or
scas
push
dec
pop
cltd
xor
sub
push
xor
mov
sub
inc
xchg
scas
adc
inc
or
push
inc
clc
mov
adc
stc
sbb
adc
push
inc
and
je
sub
sub
or
stos
and
in
adc
cmp
xchg
inc
mov
add
mov
add
ss
test
mov
js
mov
cmp
add
jns
push
dec
insb
push
test
pop
scas
xor
adc
ret
in
outsb
cmpsb
mov
aam
aam
push
inc
jp
cltd
or
loope
ret
push
inc
movsb
jg
test
mov
push
and
test
sbb
inc
test
mov
mov
sbb
or
dec
inc
mov
sub
mov
sbb
adc
cld
xchg
inc
add
fwait
adc
push
or
adc
vmovlpd
mov
inc
mov
test
cmp
test
xorb
add
mov
mov
hlt
bound
sub
jo
push
mov
mov
jns
inc
and
je
je
mov
or
mov
mov
sbb
out
xchg
or
cmp
scas
mov
cmp
and
cli
or
jne
cmpsl
andnps
cwtl
aas
xor
loope
lock
sbb
pusha
add
sarl
pop
in
cld
ret
or
mov
add
and
mov
and
pop
enter
faddp
ljmp
andb
and
push
sub
dec
inc
jmp
xor
sub
adc
or
xchg
or
cs
push
dec
repnz
xor
xchg
push
adc
or
mov
icebp
mov
in
test
push
in
out
es
and
sub
test
sbb
in
push
adc
adc
xor
outsb
adc
mov
sub
or
inc
imul
mov
or
das
push
sbb
inc
pop
inc
push
and
out
inc
cmpsl
mov
das
or
cmp
out
push
orl
pop
hlt
mov
je
xchg
mov
shl
mov
sub
and
pop
mov
popa
add
mov
loope
xor
mov
inc
inc
bound
pop
popa
ret
nop
push
dec
push
push
outsl
push
push
inc
adc
mov
xor
push
push
test
out
pop
jnp
inc
lock
inc
xor
sarl
pop
adc
mov
jno
dec
popf
dec
repnz
pop
rcll
cmp
pop
adc
push
adc
adc
popa
dec
mov
mov
add
push
je
ret
scas
mov
mov
mov
mov
xchg
adc
push
push
push
dec
dec
outsb
or
jb
jl
inc
adc
dec
adc
lds
in
pusha
jp
insb
dec
push
xor
or
nop
add
orb
or
notb
mov
or
int
or
xor
sub
dec
ljmp
daa
push
adc
fdivl
mov
pop
mov
stos
hlt
imul
fsub
push
idiv
std
or
cld
push
pop
dec
mov
jno
inc
movl
adcl
sahf
jno
xlat
adc
add
lock
or
in
mov
call
and
arpl
sub
or
sub
cmp
xchg
dec
int
and
test
mov
or
cmpl
dec
je
andl
inc
mov
into
and
dec
in
xchg
sti
adc
shll
inc
sub
mov
push
and
dec
jbe
mov
lcall
jecxz
cmc
inc
pop
ret
or
and
bound
adc
xchg
into
and
inc
out
xor
xchg
or
and
inc
adc
arpl
xchg
jg
lea
mov
dec
loope
out
and
and
les
mov
dec
pop
xchg
insl
and
mov
and
dec
rclb
std
or
lds
mov
dec
arpl
xchg
movsl
mov
loope
repz
sub
mov
pusha
and
dec
test
mov
mulb
or
add
dec
sub
and
bound
adc
xchg
into
and
inc
repnz
enter
adc
and
dec
push
xchg
and
orl
xchg
icebp
and
leave
inc
sbb
push
and
dec
outsb
xchg
jp
xchg
insb
int3
mov
mov
or
loopne
mov
adc
add
and
dec
sub
bound
mov
lcall
and
inc
loop
mov
lret
sbbl
dec
pop
xchg
data16
mov
loop
hlt
lahf
push
pusha
inc
and
mov
leave
and
dec
push
andb
inc
pushf
movsl
mov
jg
push
scas
testl
fs
sub
jae
xor
cmp
dec
adc
cmp
stos
push
and
jmp
or
enter
push
and
jno
stos
cmp
lret
mov
lock
mov
adc
and
inc
pcmpgtd
adc
sub
jg
dec
jl
outsl
test
pop
insl
mov
or
and
mov
mov
pop
mov
mov
push
inc
push
mov
adc
push
xchg
lcall
adc
xor
or
stos
lea
rcrl
dec
fldt
cmpsl
inc
mov
push
enter
sbb
pop
stos
mov
repz
iret
lea
inc
sbb
xchg
lcall
sub
in
insb
aas
lea
stos
sbb
imull
ror
jae
scas
sbb
push
dec
xor
fcmove
mov
and
mov
xor
adc
lret
scas
adc
fs
sub
and
jge
psrlw
mov
jecxz
icebp
jecxz
pop
adc
pop
stos
test
mov
lds
mov
xor
aaa
mov
sub
push
xchg
mov
add
push
pop
mov
inc
stos
mov
adc
inc
das
mov
adc
test
and
pop
testl
pop
mov
adc
pop
or
jg
inc
mov
jmp
lret
repz
push
test
mov
push
lret
sarl
imul
sub
pop
std
and
mov
shrl
inc
lock
xor
inc
inc
push
xor
pop
pop
pop
sub
push
lods
jno
imul
pop
adc
inc
movsl
or
sbb
xlat
stos
push
and
in
mov
pop
cmpsl
movsl
or
pop
repnz
and
les
xchg
xchg
mov
loop
cmpsb
inc
dec
or
push
fbld
xor
mov
mov
push
inc
lret
movsl
sub
movsl
jle
decl
setbe
pop
xorb
movsb
mov
adc
push
lods
dec
and
mov
test
mov
push
push
xchg
dec
push
inc
in
mov
mov
push
push
pop
adc
fbld
mov
ja
lds
cmp
movsl
sbb
inc
mov
sub
dec
inc
loop
mov
lds
push
mov
dec
psrlw
xor
cmpsb
dec
sub
inc
lahf
mov
push
inc
ror
mov
jl
push
test
test
test
popa
mov
mov
sub
arpl
scas
stos
and
and
fdivl
iret
inc
dec
sbb
loopne
sub
push
in
popa
fadds
xor
mov
mov
dec
pop
cltd
imull
push
mov
mov
mov
jl
adc
add
aam
ljmp
icebp
jae
das
data16
fmull
sub
lea
or
lock
sbb
xchg
stos
mov
hlt
mov
rorb
sti
loopne
add
or
or
adc
adc
sbb
sbb
sub
je
and
mov
or
and
inc
fldpi
mov
adc
iret
add
and
dec
inc
xchg
push
and
jnp
mov
dec
aad
out
stc
or
lret
dec
pop
xchg
outsb
and
mov
sub
mov
rol
sub
inc
jae
push
cmpsb
and
xor
out
test
or
cmpsl
push
sub
cmpsb
adc
test
stos
adc
and
test
iret
push
inc
aaa
mov
adc
test
cmpsl
adc
test
js
sbb
dec
ret
jbe
and
out
addr16
push
popl
test
jae
cmp
pop
push
or
or
mov
cld
cs
and
fstl
xabort
and
mov
fstp
sub
mov
xor
dec
out
test
mov
out
ljmp
cmp
test
test
mov
movsb
xchg
add
pusha
mov
adc
movsl
lds
pop
inc
popa
and
mov
addb
or
mov
sub
and
movl
add
adc
sbb
cmp
xchg
push
push
mov
add
push
push
or
push
shl
and
js
or
dec
enter
in
sub
inc
cmpsb
and
das
xchg
fcoml
mov
lods
dec
push
inc
ret
mov
sub
sbb
sbb
and
fadds
add
mov
xchg
test
adc
out
pop
loop
faddl
xor
add
xchg
adc
xlat
jp
push
pop
mov
mov
cmp
xchg
jp
das
ljmp
sub
ljmp
sub
sbb
lds
pushf
mov
les
mov
sti
aaa
add
xor
adc
push
dec
or
or
lea
sarb
push
and
mov
inc
push
pop
mov
adc
lods
inc
dec
sub
mov
pushf
mov
cwtl
lods
ja
cmp
sub
inc
and
pop
fwait
hlt
or
adc
inc
mov
outsb
test
leave
cmp
loop
mov
imul
cmp
xchg
fisttpl
pop
fst
sbb
movsb
pop
popf
cmpb
cmp
enter
sub
out
xor
or
popa
or
movb
pop
stc
add
sbb
adcl
mov
into
adc
cmpsb
xor
mov
imul
push
pop
aad
or
aam
jb
sbb
cmp
movb
dec
xchg
mov
add
dec
pop
inc
insl
jmp
and
push
dec
mov
add
call
add
inc
sbb
push
xor
out
or
lds
imul
cmp
xchg
stc
ljmp
rcr
sub
jns
pop
mull
pop
lds
das
cmp
mov
push
add
ss
cmp
or
cmpl
dec
lahf
pop
lret
scas
or
dec
mov
notl
cltd
jb
test
push
scas
shlb
and
roll
orl
jecxz
rcrl
dec
jle
sub
iret
push
inc
or
repnz
stos
adc
push
loop
push
sbb
iret
jo
add
cmp
or
daa
scas
and
sub
xchg
adc
mov
mov
add
cmpsb
or
jmp
or
test
dec
mov
and
dec
adc
dec
xchg
push
pop
xor
les
insl
push
pop
push
cmp
js
outsl
ss
les
and
sbb
cmp
xor
dec
test
ljmp
and
xchg
mov
movsl
mov
mov
aaa
hlt
enter
ja
mov
scas
das
and
push
adc
adc
sub
push
inc
dec
dec
pop
mov
divl
inc
imul
hlt
pop
inc
insb
and
adc
dec
cmp
mov
adc
scas
enter
loop
adc
ljmp
mov
or
xchg
dec
jbe
pop
lret
test
ss
int3
adc
pop
jbe
enter
pop
add
xor
push
pop
mov
mov
sub
jns
dec
cs
sub
sub
nop
jnp
pop
add
sub
sub
ds
xchg
pop
sub
aam
push
pushf
sbb
test
mov
outsb
test
sub
mov
out
add
in
mov
add
hlt
test
or
add
xor
add
adcl
sub
xchg
mov
or
xlat
test
cwtl
sub
in
addr16
imul
inc
cld
jg
push
cltd
push
sbb
jno
inc
inc
call
ds
cmp
pop
decl
jne
xor
adc
mov
ret
lods
mov
rorl
pusha
blcmsk
add
shll
pushf
fldenv
mov
push
shl
orb
mov
mov
js
dec
push
mov
xchg
sub
jmp
or
cmp
pusha
sub
mov
adc
fdivl
les
cmp
adc
push
xor
adc
mov
lret
inc
movsb
paddd
lods
cmp
and
mov
mov
lea
test
xor
mov
cmp
andl
dec
push
mov
push
inc
push
lret
push
dec
jae
jmp
stos
loop
push
out
and
and
fsubrl
movsl
outsl
insb
mov
push
push
jnp
or
cld
push
dec
pop
sub
xchg
rcrb
add
pop
inc
leave
mov
mov
mov
add
and
jae
dec
dec
out
je
and
xchg
push
or
outsl
dec
push
cltd
outsl
fmull
jne
insb
pop
orb
xlat
mov
sub
mov
inc
adc
dec
insb
xor
mov
pop
dec
and
je
in
adc
mov
iret
hlt
sbb
push
jno
xchg
gs
jns
mov
cmpsl
sub
fprem
fnstsw
test
incl
xchg
lds
fisubs
adc
and
in
dec
mov
in
adc
adc
les
xchg
and
dec
loope
add
mov
xor
add
xchg
dec
fs
test
cmp
add
hlt
enter
push
sbb
fsubr
or
rcl
jmp
sbb
sbb
inc
sbb
or
nop
nop
lret
adc
xchg
adc
or
fisttps
mov
inc
cltd
or
les
push
or
and
aam
movsb
mov
xor
adc
inc
sbb
loopne
sub
and
dec
and
push
inc
or
insb
push
fsub
or
adc
adc
les
inc
bound
adc
hlt
adc
sbb
mov
aaa
cwtl
or
fwait
or
mov
adc
and
mov
inc
mov
mov
mov
mov
aam
sbb
add
loopne
adc
or
call
adc
jge
or
dec
loope
dec
add
adc
cmpsl
push
aam
and
dec
and
sub
int3
enter
ror
into
add
fmul
fimuls
fnstsw
loope
push
xchg
in
xchg
js
mov
cmpsl
pop
addl
je
xor
xchg
adc
xor
xor
lods
xchg
inc
xor
add
dec
and
pushf
jl
scas
clc
les
xchg
inc
push
push
or
add
movsb
pop
nop
jo
pop
lcall
pushf
mov
inc
jbe
imul
fsubrp
inc
enter
or
dec
add
add
or
xor
cmp
inc
inc
dec
push
mov
and
dec
je
jl
test
mov
mov
mov
aam
fcoml
in
in
dec
hlt
xchg
cld
adc
and
adc
mov
sub
xor
cmp
inc
sub
rclb
add
sbb
mov
mov
enter
push
xor
sbb
inc
pop
and
popa
pusha
pop
sbb
mov
je
adc
enter
sub
push
xor
dec
adc
pop
sbb
sub
mov
jns
je
add
sbb
xor
xor
adc
inc
add
movsl
sub
insb
and
out
adc
cmc
test
cmpsl
aam
mov
aad
test
out
add
jb
lret
pop
lcall
xchg
add
rclb
xchg
xor
ja
add
out
mov
les
hlt
push
xor
repnz
data16
xor
mov
mov
add
mov
pop
sub
mov
mov
repnz
mov
test
aam
sbb
in
insl
push
jns
add
movl
test
fs
bound
std
in
leave
mov
add
adc
insb
push
arpl
cmp
or
outsb
cmp
adc
in
pusha
aad
addr16
add
aam
add
test
sbb
xor
add
mov
lods
jecxz
fadds
xor
filds
or
cmp
fnstcw
cmp
ficoms
inc
xlat
enter
add
and
mov
push
cltd
xchg
mov
cmp
or
and
sub
mov
jl
das
adc
stos
add
data16
add
jbe
jno
add
adc
out
mov
test
push
movsl
in
add
cmc
movsb
or
xor
pop
jle
cwtl
push
add
mov
cmp
insb
fs
add
out
push
imul
popa
rcrb
xor
test
pslld
xchg
push
mov
roll
or
movb
mov
push
jmp
mov
mov
add
sub
rorl
pop
popa
mov
into
nop
sub
mov
aam
add
fadds
shll
push
ds
fldcw
add
lods
sarb
sub
add
add
or
jno
push
and
daa
adc
or
leave
and
mov
outsl
orb
mov
add
push
stc
ficomps
leave
sbb
shlb
add
cmp
shrb
cmp
mov
insb
mov
mov
lcall
add
ljmp
fildl
push
fdivl
adc
arpl
test
fs
add
push
or
clc
iret
push
in
popf
decl
xchg
daa
scas
orb
sahf
push
pop
jge
orb
shlb
repnz
inc
push
imul
lret
addb
ss
sbb
lock
add
loopne
rorl
adc
dec
frstor
fistpll
mov
mov
mov
aad
mov
push
call
xchg
shll
push
repnz
fisttps
addr16
cmpsb
fldl
add
dec
fisubrl
add
scas
testb
add
add
ret
out
mov
push
enter
mov
outsb
xor
imul
sbb
add
ss
push
xchg
ja
or
add
mov
and
es
mov
mov
pop
mov
add
mov
cmpsl
call
ret
iret
shlb
pop
sbb
loopne
fwait
repnz
pushf
mov
pop
insl
add
ss
jmp
test
jb
push
addb
adc
mov
mov
cmp
mov
fwait
mov
rclb
mov
add
jl
or
cld
roll
icebp
clc
mov
push
pop
int
mov
mov
outsl
cwtl
inc
mov
es
jle
jo
ud0
cmp
push
pop
or
adc
sahf
popl
imul
insb
push
add
or
add
dec
ret
cmp
popa
cmpsl
notl
pusha
rolb
dec
inc
imul
dec
push
scas
fcompl
flds
or
inc
lock
aaa
jle
add
jg
add
xor
jno
pop
mov
mov
push
cmpsb
mov
ss
pusha
push
xlat
int
push
add
push
mov
jp
data16
dec
popa
les
sbb
push
sub
mov
mov
clc
filds
add
xrelease
mov
or
testb
clc
or
or
cli
sbb
sbb
cwtl
adc
dec
or
adc
jno,pn
or
and
push
and
jae
sub
sbb
sbb
adc
or
push
xchg
sub
sub
inc
add
sbbl
aas
pop
aad
push
add
add
xor
jo
popa
inc
std
push
cmp
data16
lea
push
mov
mov
xor
outsl
cltd
js
or
and
inc
cmp
sub
jne
jge
adc
jmp
xor
or
jl
mov
enter
lea
adc
fs
cltd
sub
and
lret
cmp
movsl
mov
dec
and
adc
adc
mov
ret
mov
cmpsl
and
lock
mov
or
mov
adc
test
adc
xor
mov
cltd
add
inc
sub
ret
les
add
cmp
lret
mov
iret
lods
js
test
inc
js
andb
fists
adc
in
sbb
jmp
adc
and
in
enter
lock
js
mov
sub
js
jl
repnz
mov
push
sbb
and
push
sbb
inc
sub
or
enter
sbb
inc
adc
adc
inc
sub
cs
push
leave
cmp
mov
cltd
adc
movntps
push
adc
out
in
cmp
xor
ss
push
leave
arpl
lret
fs
sub
addl
nop
and
push
dec
sub
popa
in
dec
clc
xchg
adc
add
adc
fdivrl
dec
adc
push
inc
pop
and
dec
mov
adc
cltd
sub
and
and
jns
dec
adc
movsl
sub
je
sub
mov
sbb
movsl
sub
fwait
adcb
sbb
xchg
xor
cmp
sub
icebp
inc
xchg
and
add
inc
xchg
xor
push
inc
fwait
sub
fs
jb
push
inc
mov
fstpl
test
stos
lods
adc
or
cmp
mov
mulb
les
and
shlb
jl
outsb
inc
inc
imul
fsts
adc
imul
mov
movsb
cmp
cmpsb
cmp
cwtl
shl
fdivrs
cltd
dec
adc
loop
pushf
shlb
nop
sub
or
out
test
adc
repz
sbb
and
inc
sub
incl
sbb
test
pop
adc
mov
mov
jno
or
and
pop
sub
xchg
sbb
shl
dec
mov
adc
or
daa
test
adc
sub
sbb
xor
cmp
aaa
cmpsb
adc
jno
cmp
jb
mov
enter
cmp
mov
enter
cmp
mov
enter
sub
arpl
xchg
and
sub
sub
dec
subb
lods
adc
sbbl
loop
adc
xchg
and
test
mov
cmpsb
adc
mov
test
adc
mov
push
mov
mov
and
inc
mov
leave
test
loop
dec
sub
clc
test
fstps
fstl
loope
xchg
cld
sub
adc
jmp
cli
xchg
cmp
in
sub
adc
icebp
jb
adc
or
xor
les
decb
dec
and
std
adc
lods
gs
push
add
and
sbb
test
and
in
cmp
mov
mov
rep
cmp
xchg
lods
mov
add
mov
stos
dec
cmp
sub
adc
cmpsb
cmp
xor
dec
sub
cmp
repnz
cmp
loope
add
pop
sbb
aam
test
pop
sbbl
js
arpl
jns
push
js
mov
fs
orl
shld
ja
and
inc
pop
addl
adc
xor
shrb
shrb
xchg
mov
xchg
xchg
adc
loope
popf
jb
push
inc
movsl
sub
enter
inc
in
dec
loopne
in
addl
enter
and
inc
add
mov
fs
push
sahf
dec
xchg
ret
outsb
bound
daa
adc
and
mov
xchg
xor
or
outsb
sub
adc
shll
dec
adc
xchg
shlb
in
nop
aam
das
pusha
call
inc
aad
in
in
cmp
cmpsb
adc
daa
fs
fs
cmp
mov
and
pop
adc
movsl
sub
mov
adc
repnz
or
js
xchg
add
adc
inc
test
sbb
pop
sub
aam
adc
pop
jns
sbb
xchg
in
sub
test
test
xlat
or
xor
mov
xor
les
pop
inc
dec
push
fwait
xchg
adc
dec
dec
adc
xchg
test
dec
xor
sbb
pushf
cmp
adc
pop
xchg
popf
adc
nop
adc
int
loopne
js
cmpsb
adc
int3
sub
jb
push
inc
jo
iret
inc
test
jne
push
nop
adc
or
adc
xchg
mov
xchg
xchg
test
xchg
loop
adc
xchg
mov
mov
xchg
cmp
lret
adc
cltd
mov
push
lcall
fwait
movsl
cmp
in
mov
stc
mov
inc
lahf
mov
cmp
and
sbb
nop
and
frstor
sub
mov
inc
sub
stos
jno
or
mov
xor
mov
and
xor
pop
test
adc
les
lods
cmp
mov
adc
inc
inc
mov
inc
test
mov
dec
cltd
push
arpl
adc
bound
and
and
mov
pop
or
mov
mov
adc
inc
das
adc
inc
xchg
insl
cmpsl
js
je
and
subb
xchg
mov
mov
test
and
mov
dec
xchg
les
mov
rorl
and
fisubrs
dec
xchg
in
mov
mov
or
mov
mov
inc
decb
lds
add
das
mov
mov
bound
inc
nop
adc
sbb
push
inc
adc
add
inc
addr16
cltd
jns
or
test
push
mov
adc
sbb
adc
push
and
push
push
sbb
and
mov
data16
adc
cmp
xchg
adc
or
sbb
nop
jne
fcomps
pop
xor
sub
sub
mov
enter
push
and
push
xchg
adc
and
xchg
adc
and
test
and
adcb
inc
popf
mov
xchg
or
mov
jno
pop
adc
xchg
lods
mov
mov
push
or
and
roll
adc
pop
pushf
jo
shrb
adc
lock
test
stc
xlat
lods
adc
loopne
fstl
push
and
sahf
fldt
mov
out
inc
jecxz
in
loop
negb
repz
jno
or
in
inc
add
xor
cli
movsl
adc
or
popf
and
adc
sti
xchg
sbb
mov
xchg
es
clc
adc
cmc
push
and
inc
icebp
sub
test
adc
cmp
dec
js
dec
inc
call
add
push
adc
jmp
dec
ljmp
push
and
in
cmp
adc
loop
adc
out
mov
std
dec
mov
jl
shrb
sub
sub
add
fxam
fsub
mov
hlt
adc
xchg
loop
fsts
jmp
adc
or
sbb
mov
stos
cltd
adc
or
inc
or
mov
enter
adc
loop
adc
fmuls
push
int
inc
fcmovne
aad
fstpt
out
lock
and
xchg
fists
hlt
cmp
call
and
test
call
dec
adc
cmpsl
mov
fsubl
or
nop
xchg
sub
test
call
pop
or
and
fsubr
pop
adc
push
loopne
mov
in
sub
mov
inc
repnz
and
adc
inc
sbb
inc
shlb
test
dec
cmpsl
sbb
sbb
inc
loopne
pop
push
call
xchg
pop
leave
fcomps
jl
mov
dec
adc
outsl
nop
fcom
cmp
jne
lock
and
adc
sbbl
sub
nop
nop
cmp
enter
mov
xor
mov
inc
inc
lcall
in
xor
xchg
and
inc
mov
loop
inc
mov
and
mov
rorb
sub
int3
sub
xchg
shlb
mov
jno
or
or
in
or
sbb
lock
jno
or
adc
sti
jno
sbb
push
sub
push
out
sbb
xchg
or
xor
adc
fisubrl
in
cmp
push
jmp
nop
loop
adc
push
and
dec
nop
loop
cmp
and
cmp
adc
xchg
and
ficoms
cmp
inc
sbb
push
adc
push
sbb
and
ficompl
sub
sbb
loope
ret
sbb
loope
push
adc
cmp
sub
mov
sbb
xchg
jp
fildl
inc
push
dec
adc
in
cltd
dec
push
js
cmp
dec
push
adc
mov
mov
leave
fstps
dec
inc
repnz
mov
sbb
and
mov
mov
movsl
dec
js
cltd
cmp
inc
mov
and
mov
ret
dec
sub
leave
jb
sbb
fs
divps
nop
fdivl
push
enter
gs
adc
sbb
lock
ja
subb
adc
outsb
mov
lock
push
jle
or
pop
dec
adc
test
lods
adc
jg
adc
jmp
and
xor
mov
imul
sbb
sub
inc
and
cld
mov
sub
adc
push
mov
push
clc
dec
cmp
cmp
stc
cmp
adc
loop
adc
in
mov
in
push
and
call
and
cld
adcb
arpl
sub
test
fucom
jb
push
fsubrs
mov
and
and
popl
xchg
adc
jne
popf
push
jbe
add
movsl
push
fs
and
test
cmp
mov
mov
push
in
adc
int
aad
aam
adc
enter
push
icebp
sub
jno
inc
adc
or
mov
lods
sub
gs
bound
repz
fs
imull
and
sub
mov
loope
js
add
mov
and
sub
test
push
push
sbb
and
and
rolb
push
inc
sub
xor
test
adc
and
mov
adc
imul
push
push
mov
lds
cmp
test
popa
loop
adc
bound
mov
push
cmp
mov
or
sub
cmp
notl
adc
out
push
out
push
mov
les
scas
mov
fs
sub
push
inc
adc
adc
out
cmp
ret
push
fimuls
and
inc
ljmp
mov
adc
adc
filds
sub
cmp
into
sbb
mov
inc
sbb
sbb
cld
mov
pop
and
sbb
or
loop
mov
jo
dec
lock
adc
add
clc
mov
mov
pop
adc
mov
adc
adc
push
inc
inc
enter
or
scas
fs
sub
mov
or
test
inc
mov
arpl
pop
push
imul
pop
or
ja
sbb
xchg
test
inc
mov
mov
in
sub
test
inc
mov
or
push
pop
sbb
mov
sub
test
push
or
enter
pop
sub
test
dec
sub
cmpsl
lret
lock
sub
dec
cwtl
test
outsb
js
adc
out
cmp
lods
hlt
jb
push
push
cli
adc
movsb
out
or
push
inc
and
xor
push
push
adc
scas
adc
sbb
sub
and
stos
xchg
js
sub
stos
in
xor
rep
dec
adc
xorl
repz
inc
sub
movsl
cmp
adc
lods
mov
lods
sub
test
lods
loop
adc
stos
mov
stos
or
jl
stos
cmp
nop
push
inc
cmpsl
enter
push
and
test
inc
scas
mov
loop
cmpsb
sbb
rorb
sbb
xchg
testb
repnz
or
repnz
mov
aam
lds
xor
insw
push
nop
pop
cmpsb
sub
lret
outsb
cmp
lods
cmp
outsl
mov
in
cmp
cmpsb
sub
rep
mov
cmp
sub
test
jno
pop
adc
xchg
pop
pusha
or
outsl
ret
push
pushf
sbb
das
int3
sub
dec
es
adc
jl
push
mov
es
inc
in
test
int
adc
mov
adc
sub
lock
icebp
mov
mov
push
movsb
adc
cmpsl
dec
shrl
loope
es
sub
push
inc
and
push
dec
push
or
dec
jecxz
push
fldl
ret
push
mov
push
dec
mov
dec
repz
bound
dec
push
cmpsl
add
mov
cmp
jb
and
inc
cld
inc
push
xor
push
or
inc
xor
xor
xor
pop
pop
inc
cmp
jle
test
inc
inc
push
inc
sub
sub
dec
mov
into
or
test
mov
pusha
popa
orb
dec
dec
push
adc
rep
xor
mov
mov
push
and
inc
pop
xchg
sub
ror
or
inc
xchg
add
add
dec
popa
test
movsl
mov
movsl
or
xlat
cs
daa
les
adc
push
lock
adc
add
aam
add
push
cmp
or
out
nop
or
dec
dec
or
ds
mov
sbb
les
dec
dec
xchg
arpl
dec
inc
sbb
inc
adc
sbb
mov
lods
push
aaa
fwait
or
cmpsb
dec
das
adc
fs
pop
cmp
push
or
xchg
sub
jne
adc
and
mov
dec
adc
movsb
lret
inc
dec
jecxz
mov
xchg
inc
pop
fwait
adc
or
es
or
or
cmp
jae
fisubrl
or
adc
shrl
push
inc
add
jne
xchg
or
xor
pop
pop
add
call
lret
imul
cmovg
add
push
push
adc
xchg
or
or
inc
dec
and
xor
sbb
add
lock
dec
inc
pop
push
inc
dec
fldcw
ss
push
fmull
mov
cmp
bound
sets
test
outsb
dec
sub
dec
add
inc
dec
push
push
sbb
or
adc
stos
or
inc
or
push
jo
or
inc
adc
push
je
mov
push
sub
in
push
or
and
cs
dec
inc
dec
test
dec
or
stos
sbb
outsl
pop
cltd
or
inc
mov
insb
dec
or
inc
pop
cmp
sbb
inc
and
xchg
iret
sbb
jmp
leave
and
dec
pop
inc
jecxz
push
sub
sub
inc
or
mov
mov
push
push
daa
arpl
pop
inc
push
daa
sub
dec
jo
dec
push
inc
dec
and
xor
sbb
mov
sbb
sub
iret
cwtl
or
inc
rclb
ficoms
dec
int3
push
or
repz
stos
cli
xchg
sbb
push
inc
movsb
push
cmc
rclb
mov
push
sahf
mov
xchg
inc
popf
or
dec
xor
test
add
add
arpl
pop
pusha
dec
insl
or
call
sti
and
xor
sub
push
orl
dec
sub
inc
cli
popl
dec
xor
scas
testb
inc
inc
nop
xchg
cmp
dec
fldl
or
cld
push
mov
ret
push
push
push
push
pop
pop
pop
dec
fisubrs
sbb
mov
pop
dec
test
xor
push
push
and
push
repz
adc
jge
add
inc
inc
adc
inc
push
adc
test
push
mov
in
xchg
sbb
lods
aaa
rcrl
in
inc
jg
addb
data16
or
or
outsl
or
lret
push
dec
push
dec
push
dec
pop
outsl
adc
ficompl
ljmp
push
inc
add
cmp
movsl
daa
mov
push
push
push
pop
gs
push
je
xchg
jb
push
dec
add
push
int3
daa
dec
shl
xor
mov
sub
push
jno
dec
push
push
pushf
mov
jp
mov
xchg
push
scas
aam
test
lods
cmp
pop
lret
dec
mov
dec
fwait
cmpsl
push
adc
pop
cmpsb
dec
cmpsl
add
push
pop
push
push
add
dec
and
cmc
sub
or
push
rcrl
or
push
or
adc
add
xchg
dec
dec
mov
adc
adc
enter
sarb
daa
hlt
fiaddl
call
jbe
or
test
push
daa
adc
xor
lahf
popa
mov
movsb
push
push
xor
xor
popf
jmp
jae
xor
dec
sbb
xor
hlt
push
add
inc
push
inc
cmpsb
or
and
push
inc
jb
cmp
movsb
xchg
mov
loop
pop
xor
mov
adc
nop
push
mov
outsl
push
xchg
push
inc
inc
test
inc
xchg
inc
test
and
pop
or
inc
or
push
sub
inc
fisubs
lea
aam
dec
or
fs
dec
inc
cwtl
cs
xor
add
popf
pop
inc
and
ret
pop
push
inc
and
push
inc
push
sub
push
jl
rorb
pushf
aad
popa
fldenv
xor
and
les
adc
cmp
aaa
je
push
imul
pushf
in
arpl
inc
mov
xchg
inc
cltd
or
push
adc
test
mov
mov
inc
test
dec
adc
mov
pop
xor
mov
in
jnp
push
dec
daa
je
or
dec
mov
dec
pop
and
jg
pop
inc
and
inc
movsb
push
push
xor
sti
stos
and
inc
push
sub
push
push
push
sbb
and
inc
jbe
adc
or
xor
push
push
in
dec
mov
or
inc
or
jbe
inc
xchg
or
mov
adc
or
push
push
pop
inc
cmp
push
hlt
in
cmpsb
cmp
fldenv
inc
push
and
inc
fdivl
lods
or
mov
adc
pop
fcmovnu
xchg
pop
fst
xchg
adc
cmp
aad
push
js
jmp
jbe
jecxz
add
sbb
and
maxps
repnz
inc
std
adc
pushf
les
and
or
int
fs
and
push
push
scas
aas
aam
mov
push
cld
sbb
leave
inc
in
or
in
cmc
mov
pusha
sub
test
ret
adc
inc
fcompl
or
into
mov
jle
mov
pop
rcl
xor
shrb
jo
fs
std
mov
clc
pop
fsubl
lret
fcoms
mov
or
mov
adc
and
dec
cld
movsl
pop
push
jne
or
and
mov
add
push
cmpsl
add
ljmp
add
sub
test
cmp
or
les
dec
dec
or
cmp
pop
sbb
mov
pusha
jbe
or
call
sbb
cld
fwait
inc
and
out
data16
adc
adc
xchg
or
lods
inc
mov
pop
sbb
addr16
cmp
xor
int3
mov
jns
sub
adc
orb
inc
je
xor
push
call
jl
hlt
dec
in
jns
or
data16
movsb
mov
dec
mov
movsb
sub
add
and
jmp
and
fsts
add
dec
xor
ljmp
cld
int3
or
int3
test
in
and
mov
inc
xor
adc
aaa
xor
sub
fmulp
mov
adc
jne
pop
gs
mov
inc
jl
int3
push
and
sbb
call
xor
loop
adc
out
push
push
les
jg
cmp
adc
mov
mov
xchg
add
dec
xchg
xchg
adc
movsb
xchg
add
vpmacswd
repnz
and
jl
mov
pop
adc
add
sbb
add
inc
lcall
fwait
or
adc
add
sbbb
adc
and
dec
je
mov
mov
adc
and
push
loope
or
dec
sbb
sub
inc
inc
push
bound
xchg
dec
movsb
xchg
mov
lret
repnz
and
dec
ds
dec
and
jb
mov
ret
rclb
or
stc
rclb
dec
or
insb
xchg
jp
mov
xchg
and
dec
stos
sbb
dec
fcoms
or
je
mov
adc
inc
push
push
and
dec
stos
xchg
mov
out
hlt
adc
add
xor
inc
xchg
push
and
jp
mov
dec
aam
call
mov
adc
adc
push
dec
push
jle
nop
inc
pushf
cmpsb
mov
dec
out
mov
lcall
dec
mov
or
outsb
adc
or
mov
les
dec
loop
clc
sub
push
fwait
or
or
mov
and
dec
push
inc
mov
shlb
dec
in
xchg
clc
adc
pushf
and
inc
sub
mov
pop
and
dec
jbe
andb
inc
cmpsb
mov
and
dec
imulb
sub
and
push
data16
adc
cmpsb
or
jbe
push
popf
push
or
pop
inc
arpl
jg
xor
jbe
lods
outsb
call
cmp
jg
lods
cmp
rorb
mov
or
cmp
push
sbb
inc
lcall
or
fs
mov
lahf
enter
push
outsl
dec
jne
mov
cmp
lret
inc
cmpsb
or
arpl
or
imul
js
cmpsb
push
movsb
dec
stos
insl
lds
mov
adc
and
jmp
pop
stc
push
daa
aad
ss
dec
adc
stos
gs
gs
and
enter
jae
mov
test
push
int
fs
lea
adc
push
jae
and
in
xor
dec
pop
lods
jo
jle
lods
mov
ja,pt
sbb
repnz
lret
pop
adc
mov
test
jne
jb
and
bound
jg
into
cmp
mov
lods
sub
jp
ljmp
lcall
dec
jbe
jo
sub
or
addr16
jne
jns
push
sbb
cmp
dec
rcrb
and
inc
fwait
popa
jne
movsl
inc
sub
sub
xor
int
dec
adc
sub
es
or
xchg
and
mov
stos
push
into
divb
jp
fmulp
outsl
stos
and
cmp
push
into
movsb
lcall
movsl
adc
pop
sbb
mov
push
lds
xor
adc
push
jns
jae
jne
push
pop
jo
cmp
mov
jge
roll
dec
adc
dec
push
ljmp
sub
in
daa
jae
pop
scas
mov
inc
and
ljmp
out
lea
push
pop
adc
mov
scas
jae
adc
xchg
push
push
jecxz
push
into
cmp
push
adc
xchg
es
sti
mov
cli
in
cld
stos
adc
jnp
pop
dec
cli
ret
push
inc
sub
push
inc
xchg
jbe
or
or
inc
push
jae
xor
popa
arpl
inc
xchg
sub
out
sub
dec
fs
jb
mov
adc
mov
adcb
movsb
in
adc
inc
xchg
paddq
repz
jae
sub
sbb
rep
popa
add
and
jb
push
int3
sbb
testl
xchg
mov
jae
lods
mov
push
hlt
xchg
inc
jb
clc
inc
imul
xor
push
or
adc
sub
imul
lds
jo
and
push
push
dec
addr16
shll
insb
inc
outsb
pop
jg
shrl
mov
dec
pop
dec
addr16
dec
push
push
incl
out
outsb
lods
sbb
sub
pop
cltd
mov
mov
xchg
dec
sub
inc
xchg
arpl
or
bnd
into
cwtl
or
imul
sub
dec
test
jb
xchg
jl
fsubr
push
imul
push
lods
sub
xchg
ret
mov
mov
xchg
adc
mov
movsl
pop
push
dec
arpl
mov
popf
aas
pop
adc
shll
andl
xor
lcall
xor
cmpsb
xchg
mov
add
mov
sbb
pop
aas
dec
lcall
fcomps
in
outsl
jns
arpl
movsb
or
ljmp
sub
test
sub
pop
xchg
or
mov
stc
or
dec
lds
sub
les
ret
pop
mov
lret
pop
and
movsb
lods
jno,pt
and
push
push
jg
in
jae
sti
jbe
aam
dec
mov
fldenv
or
scas
loopne
sub
imul
add
aad
jae
sub
and
xor
fs
and
adc
xchg
jl
push
lcall
xchg
add
xor
in
stos
sbb
push
xchg
push
xchg
pop
xchg
pop
xchg
pusha
xchg
fs
push
xchg
adcb
xchg
mov
xchg
mov
xchg
rclb
ljmp
xor
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
cmp
add
xor
xchg
mov
xor
std
in
cmp
and
mov
push
cmp
pop
dec
push
jne
jge
xchg
dec
fwait
dec
mov
mov
lds
dec
loop
call
mov
cmp
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
add
ss
cmp
xchg
inc
xchg
bound
ret
nop
daa
cmp
gs
cmp
cmp
cmp
cmp
cmp
jo
cmp
sbb
sub
xor
push
cmp
leave
pop
leave
leave
into
leave
aam
in
in
enter
cmp
jb
jb
jb
jb
or
insl
aaa
and
test
add
sub
xor
leave
push
and
arpl
subl
cmp
cmp
push
adc
sbb
and
cmp
adc
push
jp
xchg
mov
in
in
in
xor
push
daa
pop
daa
mov
shll
daa
shlb
loopne
jmp
inc
xor
pop
pushf
popa
pushf
imul
xor
daa
jae
jg
xchg
loope
out
out
and
xor
je
leave
sahf
leave
mov
ror
enter
lock
sbb
aaa
mov
cmp
daa
in
and
cmp
and
cmp
and
in
in
in
cmp
cmp
cmp
orl
lcall
dec
fiadds
aas
cs
cmp
imul
xchg
mov
lsl
or
inc
cmp
push
mov
sti
add
xor
ja
jle
xchg
xchg
mov
xchg
call
mov
sahf
in
in
push
jne
ss
add
or
push
xchg
cs
fimuls
dec
cmp
dec
pop
dec
test
dec
xchg
dec
cld
dec
add
sub
dec
bound
dec
xchg
dec
fwait
dec
mov
dec
rorb
dec
icebp
dec
testb
sbb
push
xchg
mov
lret
cmp
test
pop
rcrb
in
in
in
in
nop
inc
push
xor
xor
xchg
daa
lahf
and
das
pop
pushf
pushf
lods
pushf
mov
ret
xchg
daa
mov
mov
daa
out
daa
mulb
std
and
cmp
leave
and
sub
leave
push
leave
pop
leave
leave
push
jb
jp
inc
es
leave
aam
out
leave
stc
enter
pop
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
sbb
cmp
aaa
pushf
inc
pushf
push
pushf
pop
pushf
pushfw
outsb
pushf
jbe
jle
xchg
pushf
cmpsb
pushf
into
pushf
pushf
ficomps
pushf
incb
push
daa
push
daa
es
cs
ss
inc
in
in
in
in
in
in
in
xchg
mov
jb
jb
jb
jb
jb
jb
dec
jbe
cwtl
pushf
out
out
pushf
negb
daa
push
daa
push
and
xchg
test
xchg
decb
daa
lods
push
daa
pop
daa
data16
outsb
daa
jbe
jle
xchg
mov
xchg
daa
sahf
daa
cmpsb
daa
scas
and
rcrl
xchg
ficoms
notb
cmp
push
mov
push
xor
pushf
push
pushf
push
pushf
es
cs
pushf
ds
inc
pushf
dec
pushf
push
pushf
pop
xchg
dec
mov
dec
fwait
dec
cmpsl
dec
mov
dec
int3
dec
aam
fmull
dec
in
dec
hlt
dec
cld
inc
add
or
adc
shlb
xor
cmp
inc
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
dec
mov
aam
fdivrl
in
in
es
loop
add
or
adc
sbb
and
sub
xor
jge
inc
and
int3
lock
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
cltd
pusha
pushf
cld
xchg
or
adc
sbb
and
sub
dec
daa
cmp
inc
daa
push
daa
pop
daa
insb
daa
jle
test
xchg
daa
lods
daa
mov
shlb
daa
fsubl
loopne
in
xor
popa
add
hlt
leave
clc
leave
cld
lret
sbb
cmp
push
leave
dec
leave
dec
xor
push
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
lcall
or
jb
jb
jb
jb
jb
jb
dec
push
lods
cmp
cmp
cmp
jb
test
pushf
mov
mov
les
dec
int3
dec
in
ss
jb
jb
jb
jb
pop
and
cmp
cs
cmp
pop
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
xor
xorb
leave
sbb
sbb
and
and
sub
sub
xor
xor
dec
leave
push
leave
js
jl
or
leave
mov
mov
nop
leave
mov
leave
int3
leave
ror
aam
fmul
fmul
loopne
in
call
sbb
and
and
sub
sub
xor
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
xchg
push
sbb
pushf
loopne
in
call
ret
daa
sub
xor
xor
mov
pushf
inc
pushf
dec
pushf
pop
pushf
jl
test
andl
pushf
xchg
mov
xchg
fcoms
call
lock
cmp
cmp
jo
cmp
xor
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
mov
jb
jb
jb
jb
jb
jb
jb
loope
je
or
or
adc
adc
sub
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
mov
pop
or
adc
sbb
jb
jb
into
add
dec
push
dec
je
sarb
test
cwtl
daa
mov
daa
enter
shlb
aam
fsubs
sbb
cmp
and
sub
pushf
cmp
pushf
imul
xchg
scas
cs
call
mov
jno
mov
adc
xchg
xchg
jmp
leave
mov
leave
lods
leave
mov
mov
loop
popa
nop
out
jno
jb
jb
jb
jb
jb
sbb
cmp
insb
pushf
jo
je
js
push
mov
push
cmp
cmp
lds
stc
fs
jo
mov
pusha
xchg
xor
jb
jb
jb
pop
fisttps
decb
and
push
pop
mov
cmp
sub
push
push
xor
dec
dec
dec
jnp
mov
dec
mov
icebp
dec
adc
mov
mov
cmp
push
pop
xor
pop
dec
xchg
inc
cmpsl
xchg
lods
imul
enter
mov
in
sbb
cmp
pushf
cmpsb
pushf
aad
test
cmpl
jb
jb
jb
jb
jb
dec
fwait
push
xor
cmp
dec
xchg
pop
xchg
mov
mov
xchg
cmpsb
xchg
mov
jno
and
in
in
in
test
mov
jb
jge
jb
jb
jb
jb
jb
jb
into
ss
dec
dec
dec
dec
dec
push
dec
pop
dec
pusha
dec
gs
push
jo
movsb
jge
cmp
lea
mov
dec
mov
dec
rorl
dec
in
out
imul
xor
pop
xor
cmp
lock
xor
add
fmuls
pop
xor
jns
popf
dec
test
and
loop
pusha
lods
xor
jb
jb
repz
dec
mov
insl
leave
mov
leave
lock
push
dec
jnp
lcall
xchg
out
xchg
notl
cs
pushf
cmp
xchg
xchg
ret
jl
xchg
mov
xchg
adc
mov
leave
push
leave
jae
or
leave
lcall
cmp
push
mov
dec
fisttpll
dec
jmp
lock
cmp
in
in
mov
jb
jb
jb
dec
pusha
dec
jb
push
je
pop
jb
jb
pop
movsb
outsb
cmp
mov
sub
jl
int3
js
mov
sub
in
in
mov
jb
jb
jb
jb
jb
pop
sbb
push
mov
mov
pop
pop
nop
dec
mov
test
cwtl
gs
arpl
pushf
mov
addl
xchg
fmul
mov
cmp
dec
pop
pushf
add
or
adc
and
sbb
and
sub
test
cmpsb
es
add
dec
push
test
dec
nop
cmp
rcrb
sub
daa
in
call
mov
sbb
cs
cmp
inc
leave
dec
fs
in
in
in
in
in
in
in
mov
dec
mov
jl
dec
dec
loope
jmp
negb
or
test
daa
sub
xchg
push
xchg
pop
daa
andl
daa
xchg
daa
mov
daa
mov
cmp
cmp
cmp
push
add
cwtl
loopne
adc
ds
cmp
aas
pop
dec
and
push
imul
test
mov
inc
nop
push
and
add
xor
pop
int3
push
ja
xor
aaa
mov
push
jns
repnz
int3
cmp
xlat
cmp
xchg
shrl
movsb
push
xor
sub
xor
movsl
pop
pop
jb
daa
dec
daa
push
daa
pop
daa
addr16
mov
sbb
pushf
cmpsl
movsb
mov
dec
cmpsb
testb
cmp
cmp
in
in
in
in
mov
lret
xor
flds
xchg
sbb
xor
cmpsb
cmp
pop
pushf
fildl
jmp
inc
aas
mov
cmp
or
pushf
mov
xor
cmp
jb
jb
jb
jb
sbb
xor
sbbl
leave
pushl
out
jb
jb
jb
jb
jb
jb
dec
mov
mov
and
in
mov
dec
xor
inc
ss
inc
xor
and
jb
jb
jb
jb
clc
cmp
mov
mov
mov
push
rcrb
lock
cli
jmp
xor
pushf
aam
adc
pushf
dec
pushf
push
pushf
arpl
xchg
xchg
jb
jb
pop
fnsave
sbb
and
dec
shll
leave
jae
jg
scas
cs
addb
cs
pushf
cmp
xchg
mov
jb
jb
jb
jb
jb
jb
jb
jb
jb
dec
out
or
daa
and
or
jno
jge
mov
call
xchg
js
xchg
xchg
shl
mov
and
pushf
mov
xchg
stc
inc
cmpsl
leave
insb
ja
dec
mov
int3
loope
shrb
cmp
jb
jb
pop
imull
sbb
aas
xchg
dec
ret
pusha
xchg
xchg
cmpsl
imul
dec
push
aam
dec
scas
inc
pop
sbb
and
leave
dec
leave
push
leave
imul
jne
xchg
lahf
and
and
jnp
leave
lret
xor
out
cmpsl
cmp
cmp
push
das
aas
insl
dec
jae
mov
cmc
dec
sti
xchg
push
push
cli
sbb
leave
or
je
adc
xor
cmp
mov
pushf
movsl
mov
xchg
pushf
jmp
sbb
ss
insb
idivb
push
cmp
sub
sarb
aaa
pop
lcall
push
sub
fs
mov
fdivrs
jb
push
mov
insl
sub
or
and
xchg
insb
or
mov
loope
lock
pop
pop
aas
adc
sub
cmp
dec
and
mov
inc
test
xchg
and
mov
in
movsb
mov
adc
pop
xor
int3
adc
xchg
and
xchg
lcall
xor
or
cmovb
cmp
in
in
in
in
in
in
in
in
mov
adc
les
mov
and
jb
jb
pop
pop
or
imul
les
or
sbb
cmp
cmp
cmp
push
and
lock
aaa
inc
xchg
cmp
xchg
xchg
in
clc
xchg
add
push
xchg
and
pop
xchg
outsb
dec
mov
dec
mov
test
cmp
orl
jno
mov
xchg
mov
ret
lds
cmpsl
cmpsb
or
xchg
dec
xchg
jae
jge
xchg
mov
mov
ficoml
mov
jb
pop
lods
pop
das
rolb
push
xor
inc
in
in
pushf
cld
sbb
pushf
jb
test
sub
sub
loopne
shl
leave
inc
je
data16
in
in
in
in
xchg
xchg
adc
jae
test
das
push
mov
inc
xchg
dec
pop
enter
cmp
pop
and
jp
imul
add
and
pop
lods
jb
jb
jb
jb
dec
cltd
mov
enter
pushf
out
cmc
xchg
xor
and
in
mov
xchg
jo
mov
xor
pop
cmp
pop
and
leave
mov
leave
iret
leave
ljmp
pop
or
xor
dec
shll
cmpsb
adc
cmp
daa
test
xchg
loope
cmc
nop
adc
das
xchg
les
adcl
fcomps
jb
jb
dec
jmp
push
or
adc
in
add
xchg
pop
dec
es
out
leave
movsl
leave
ror
fxch
sub
cmp
cmp
cs
pushf
aad
fld
out
loope
shr
sbb
cmc
dec
jle
inc
add
add
js
jb
jb
jb
jb
jb
jb
jb
mov
xor
and
inc
xchg
out
dec
jb
jb
jb
jb
dec
arpl
or
dec
test
lods
leave
mov
cmp
aam
ljmp
dec
mov
dec
movsl
dec
mov
or
sub
cmp
daa
iret
xchg
and
mov
jp
mov
xchg
in
in
in
mov
sbb
xchg
cmp
and
lods
mov
pop
cmp
andb
adc
pop
fs
xor
subb
jb
jb
jb
jb
jb
pop
mov
sarl
xlat
cmp
cmp
adc
adc
ds
xchg
and
jl
cmp
inc
insb
xchg
jl
ljmp
or
pop
sbb
daa
jb
jg
xchg
xchg
push
fcoms
mov
push
dec
fidivrs
leave
mov
push
cli
mov
mov
sbb
xor
lds
repnz
pop
dec
les
rol
enter
push
jb
jb
pop
mov
pushf
fisttpll
loope
sub
les
iret
and
leave
aam
fmul
out
aaa
ss
pop
nop
push
add
dec
push
cmp
xchg
xor
sub
clc
sub
sbb
cltd
mov
cmp
push
or
pop
dec
pop
push
inc
jb
dec
cmp
xor
in
in
push
xchg
add
sbb
xor
push
xorb
pop
adc
cli
or
cmp
xor
in
mov
jl
nop
clc
ss
xchg
add
cmp
js
and
movsb
pushf
mov
test
cmp
lock
in
in
sahf
cmp
pop
cmp
and
xchg
add
pop
push
scas
pop
dec
andb
and
mov
out
mov
dec
pop
push
movsb
inc
dec
addr16
mov
mov
rorl
je
daa
hlt
and
ds
leave
pop
leave
jg
push
bound
loope
add
and
adc
outsb
mov
and
leave
fistpll
adc
jmp
icebp
sub
pop
inc
push
or
or
adc
sbb
in
pushf
sbb
mov
pusha
xor
daa
sub
push
jb
dec
imul
mov
jb
dec
test
add
das
sub
and
mov
ret
leave
cmp
enter
xor
les
push
or
and
ret
mov
xchg
aaa
adc
and
push
daa
pop
daa
pusha
daa
jae
jg
sahf
in
mov
aam
dec
out
dec
cld
push
daa
popa
mov
cli
mov
mov
cmp
and
xor
jmp
jl
cmp
or
cmp
sarl
leave
mov
xchg
or
adc
and
pop
in
in
in
lcall
sub
xchg
mov
jb
dec
clc
lcall
pusha
and
rclb
xchg
and
dec
cs
js
insb
pushf
jne
xchg
pushf
movsl
pushf
mov
icebp
jo
jb
dec
sbb
dec
dec
push
inc
pusha
dec
jns
test
mov
es
dec
pushf
jecxz
icebp
push
rdmsr
sbb
cmpsl
dec
inc
daa
outsb
and
shll
leave
jbe
sbb
pushf
icebp
mov
and
in
lcall
and
xchg
adc
loopne
xchg
and
rcrb
pushf
outsl
pushf
jle
mov
mov
ret
jb
jb
jb
dec
ffreep
cwtl
in
pop
xor
pop
add
bound
dec
fimull
dec
push
or
add
jb
jb
jb
jb
adc
aaa
cmpxchg
and
xchg
push
lcall
mov
jo
cmp
das
cs
insb
aas
and
in
in
xchg
jbe
cmpsl
dec
scas
push
inc
rorb
dec
in
decb
push
inc
sbb
dec
das
pop
cmpsb
dec
inc
mov
and
xchg
nop
nop
lock
les
dec
in
out
dec
cmc
popa
push
adc
and
sub
cmp
pop
cmp
test
mov
and
lods
test
in
pop
xchg
push
xor
mov
mov
in
jb
sbb
cmp
adc
mov
sbb
xchg
jo
jne
test
ljmp
daa
sub
adc
push
push
pop
xchg
xchg
mov
pop
ja
aam
jo
mov
xor
add
aam
adc
mov
pushf
pop
mov
mov
or
shlb
cmp
lea
xchg
and
xchg
pushf
mov
mov
adc
dec
push
aad
fisubl
in
jmp
and
add
adc
pop
or
fadds
loop
out
or
icebp
popa
cmpsb
sti
jl
cmp
adc
sbb
add
loop
daa
pop
in
jb
jb
pop
ja
cmp
es
dec
scas
ficoms
lahf
ret
jle
adc
call
rcll
push
in
in
popf
xchg
stc
and
mov
or
or
in
push
cmp
cmp
cmp
xor
xchg
jnp
outsb
cltd
enter
xchg
sbb
inc
push
scas
sbb
pushf
lahf
pushf
mov
lret
pushf
loope
notl
dec
dec
cmpsl
push
jnp
xchg
mov
mov
out
dec
push
ss
in
mov
cltd
and
xor
inc
xor
shll
inc
leave
inc
jo
ss
cld
aaa
jb
loopne
dec
add
and
nop
dec
lret
or
cmp
je
daa
shll
fbld
in
and
mov
sbb
pushf
stc
xchg
cmp
and
leave
leave
sub
daa
fadd
mov
leave
xor
inc
leave
push
leave
pop
and
js
mov
xchg
mov
sbb
pushf
loop
xorb
push
sbb
nop
int3
xor
xor
leave
cmp
jmp
loop
daa
mov
fmul
mov
xlat
xchg
mov
add
sub
mov
cmp
jo
xor
cmp
bound
add
in
mov
mov
pushf
test
cmp
sub
enter
shl
xor
ret
enter
jb
pop
dec
jbe
cmp
subl
xchg
int3
dec
sub
dec
ljmp
jb
jb
jb
dec
xchg
sub
lahf
and
outsb
push
cmp
lret
sbb
cmc
je
or
aaa
pop
popa
and
fs
inc
in
pushf
xchg
push
push
nop
sbb
leave
mov
outsb
or
arpl
mov
leave
fnstcw
cmp
cmp
push
or
es
cs
inc
rcll
add
xor
mov
mov
bound
cmpl
or
outsb
push
dec
push
orl
fwait
shlb
or
rolb
xor
xchg
jo
dec
sbb
dec
xchg
dec
xchg
push
je
sbb
pushf
pop
pushf
pusha
pushf
fs
push
je
aam
leave
andb
mov
nop
pushf
ficoms
cwtl
and
xchg
movsb
xchg
test
mov
mov
inc
ds
rorb
inc
inc
inc
fsubp
leave
in
call
lock
pushf
clc
dec
cld
stos
push
ds
or
dec
adc
dec
sbb
dec
and
push
sub
sub
xor
xor
cmp
dec
or
inc
cmp
dec
test
push
mov
pop
in
in
in
sahf
and
xchg
je
sbb
int3
and
mov
mov
nop
xor
cwtl
in
xchg
xchg
movsb
daa
test
lods
mov
mov
add
mov
stos
push
int3
dec
in
aam
fmuls
dec
loopne
sub
call
fs
mov
sbb
pushf
or
pushf
sbb
sub
sbb
pushf
cmp
inc
xchg
inc
mov
in
mov
jle
loopne
fs
in
popf
pop
xor
daa
js
jl
subb
nop
mov
mov
and
lods
testb
inc
dec
ror
cmp
int3
add
aam
mov
in
call
lock
hlt
dec
clc
push
inc
shrb
dec
or
jb
pop
adc
loop
xchg
and
out
sub
and
xchg
js
lock
pop
pop
ret
notl
add
pop
pushf
or
sbb
cmp
leave
das
fs
aaa
in
in
in
in
in
in
in
mov
push
arpl
js
cmp
jnp
int3
xchg
test
cmp
cmp
daa
add
dec
das
pop
pop
inc
jg
xchg
daa
mov
daa
flds
ror
and
or
xor
push
pop
push
test
jb
xchg
nop
dec
cwtl
scas
cmpsl
nop
fsubs
out
and
lods
scas
mov
gs
jp
push
and
dec
xchg
in
jb
jb
pop
aad
sub
cmc
ret
push
pushl
leave
and
sub
cmp
dec
cmp
pop
popa
jo
adc
inc
pop
scas
mov
out
sbb
xchg
aad
pop
sysenter
and
das
mov
cmpsb
pop
mov
adcb
xchg
movl
mov
mov
daa
mov
push
sub
dec
pop
dec
outsl
dec
jnp
xchg
dec
mov
dec
out
dec
cli
push
les
sub
dec
subl
xchg
mov
cmp
mov
xchg
daa
lahf
and
mov
lods
std
leave
adc
xchg
pop
daa
ja
test
inc
les
cmpl
daa
mov
and
xchg
inc
xchg
dec
push
out
sbb
pushf
insl
xchg
jne
into
mov
mov
in
in
mov
push
stc
and
cmp
cmp
nop
aas
fsub
dec
push
push
sbb
dec
imul
and
leave
icebp
pusha
mov
pop
push
or
inc
and
daa
cmpsb
inc
jbe
mov
ror
fmulp
out
in
leave
imulb
cmp
sub
aaa
xchg
sahf
sbbb
loopne
in
in
mov
jb
jb
mov
jg
push
mov
push
lahf
in
in
dec
leave
push
push
shrl
pop
add
lods
in
dec
lock
repz
lock
outsl
or
pusha
js
pop
push
sbbb
cli
sbb
adc
add
mov
mov
adc
add
enter
xchg
adc
fsubs
cmp
shr
aas
xor
lds
test
push
adc
lock
jb
jb
jo
nop
scas
pop
adc
fidivrs
xchg
dec
fdivrl
je
mov
pushf
loopne
les
cwtl
adc
and
add
and
js
shlb
mov
xchg
sbb
inc
inc
test
je
nop
add
mov
inc
adc
dec
loopne
and
pop
xchg
rolb
rclb
or
and
push
test
rolb
cmp
add
mov
jb
jb
dec
pusha
addl
push
inc
push
les
in
sarl
and
cmp
pop
dec
fs
and
cmp
and
fsubrs
dec
sbb
and
sbb
push
adc
popa
or
jnp
add
dec
inc
rcrl
cmpb
outsb
test
mov
jb
sbb
xor
mov
dec
hlt
loopne
jo
test
mov
mov
adc
adc
dec
cmp
les
pusha
mov
pushf
sub
les
hlt
cmpsb
pop
sub
leave
mov
mov
rolb
addb
mov
push
cmp
sub
jp
push
inc
dec
pop
pop
ficoms
xchg
ret
aam
push
in
mov
mov
movsb
xor
mov
cwtl
mov
inc
call
adc
pusha
and
mov
inc
fmul
movsb
test
xchg
js
out
mov
int3
lock
xchg
sub
inc
xchg
push
fidivrs
xchg
movsb
mov
int3
mov
xor
xorb
test
shlb
clc
mov
mov
pop
dec
push
jo
xchg
cwtl
dec
dec
shlb
call
adc
sub
or
popa
ds
cs
and
add
scas
and
adc
add
cmp
in
fs
xchg
test
mov
sar
jl
es
xchg
inc
dec
cli
push
fidivrl
or
or
int3
dec
xor
es
mov
test
scas
sar
scas
sub
jl
cmp
pop
and
leave
lods
jle
lcall
xchg
cmp
xorb
jle
js
js
pop
in
xorl
sub
pop
adc
adc
mov
fsubl
sbb
ds
or
lock
nop
jb
pop
mov
hlt
xchg
or
ss
jb
pop
pop
mov
test
shlb
mov
mov
xchg
jo
subb
add
push
cmp
cmp
pop
inc
dec
and
mov
mov
and
fsubrs
in
fs
inc
sub
push
pop
js
push
mov
ret
fdivp
nop
add
sbb
sub
inc
xchg
pop
enter
daa
nop
and
int3
popa
push
sbb
inc
xchg
pop
mov
cmpb
shl
in
clc
sahf
out
and
dec
js
dec
jo
mov
loope
sarb
call
push
and
or
pusha
inc
add
loop
ficompl
lret
mov
movsb
lcall
sbb
xchg
lock
and
add
scas
ret
jo
pop
push
mov
mov
sbbb
movsl
pushf
insb
rorb
insb
in
inc
pop
or
pop
and
dec
pusha
xchg
jo
pop
cwtl
cmpsl
push
shlb
xor
cmp
dec
xchg
test
mov
les
dec
in
pop
push
xor
dec
sub
add
mov
mov
fmull
pop
mov
sbb
push
add
int3
scas
or
clc
or
ret
jbe
pop
insb
lock
xchg
in
mov
fsubl
clc
add
mov
pushf
cwtl
xchg
lods
lock
aam
call
adc
sahf
cmp
dec
jo
and
xchg
and
stos
or
loopne
call
lock
popf
cld
xchg
add
out
mov
mov
xor
shlb
xor
sarb
mov
adc
and
jo
call
jbe
push
mov
push
scas
xchg
dec
cwtl
dec
pushf
gs
push
mov
pusha
push
mov
or
and
rclb
jo
into
in
call
lock
pushf
clc
xchg
cld
andl
xchg
or
pop
dec
adc
sub
and
and
pop
jecxz
cmp
inc
sub
and
xor
and
add
js
std
and
nop
inc
test
call
shrb
push
xchg
fdivrs
mov
dec
or
xor
pop
push
add
aas
test
push
sbb
xor
nop
inc
cld
push
xchg
pusha
aas
and
adcb
loope
loopne
xchg
sub
test
and
fsub
and
js
sbb
clc
in
pop
xchg
push
jmp
and
add
cmp
inc
mov
aam
push
dec
cmpb
dec
cld
cltd
jo
dec
addr16
or
push
push
adc
sbb
pushf
inc
sbb
sbb
and
dec
push
or
adc
cmp
bound
adc
adc
scas
push
push
jne
outsb
adc
outsl
xchg
gs
push
or
mov
imul
fs
push
xchg
pop
inc
lret
or
dec
outsb
xchg
adc
or
jb
xchg
push
aad
xchg
push
xchg
add
sbb
insb
xchg
adc
lods
mov
jo
adc
hlt
mov
and
out
popa
int
outsb
pop
xchg
or
je
inc
xor
lret
add
pop
push
fwait
mov
inc
add
push
fmuls
cmpsb
enter
or
or
lret
in
xor
sbb
cltd
jb
outsl
fwait
or
jne
or
sbb
imul
aaa
movsb
ljmp
xchg
xor
sbb
adc
or
fisubrs
push
sbb
sub
fs
js
lret
and
enter
lret
scas
xchg
js
int
and
xor
xchg
or
and
inc
gs
sub
sbb
dec
xor
ret
sub
xchg
pushw
sarb
in
test
std
push
inc
adc
push
sub
lods
loop
push
jae
dec
data16
aad
push
cwtl
ss
sbb
test
sub
or
adc
lods
insb
inc
sub
push
test
sub
mov
aas
cmp
push
dec
jbe
jle
popa
cmpsl
mov
sub
sub
push
insl
mov
push
js
cmpsb
mov
or
sbb
and
add
loop
mov
mov
mov
add
sbb
insb
dec
insb
lahf
es
jne
adc
sbbb
scas
dec
jbe
push
lret
push
cmpsb
rclb
and
mov
xor
arpl
ss
fisubrl
mov
jo
mov
jp
xchg
data16
jo
dec
je
int
and
inc
xchg
loop
or
stos
add
fwait
sub
stc
je
lret
cmp
fwait
mov
movsb
fucompp
mov
jne
pop
test
cltd
stos
fisubrl
xor
or
in
xchg
inc
xchg
arpl
xor
or
insl
inc
cmpsb
pop
push
dec
fldl
push
arpl
pusha
jo
push
bound
push
lods
dec
imul
xchg
sbb
loop
test
aam
xor
sahf
test
xchg
jae
call
js,pn
and
push
mov
es
jo
add
push
sub
push
push
dec
xor
leave
pop
xor
dec
dec
rol
push
push
test
xchg
bound
and
movsl
xor
subl
xor
xor
cmp
push
or
pushf
pushf
aam
data16
xor
mov
jo
fcompl
fs
sub
movsl
movsb
es
push
xchg
fs
imul
and
lret
or
or
inc
enter
adc
and
hlt
pushf
inc
jb
or
enter
sub
loopne
into
sahf
pop
jae
mov
cltd
les
xor
adc
fsubs
addr16
push
mov
adc
fisubs
and
xchg
dec
ficomps
jp
fs
enter
inc
push
mov
sub
andb
dec
cmp
add
inc
add
or
add
xlat
jge
dec
mov
out
cmpsl
xor
imul
dec
sub
pop
iret
mov
add
adc
outsl
xchg
es
add
or
dec
imulb
push
out
pop
xor
cmp
push
push
dec
cmpsb
addr16
xor
sbb
mov
add
inc
push
dec
push
xor
adc
insl
fnstcw
mov
je
mov
mov
inc
push
jle
bound
cmp
gs
int3
dec
mov
movsb
push
test
mov
sub
push
or
mov
adc
push
dec
inc
inc
inc
xor
into
dec
xchg
pop
push
pop
daa
sub
sahf
dec
xor
inc
fsubl
clc
cmp
iret
loop
xchg
cmp
and
call
cmp
jecxz
pop
not
adc
movsb
jmp
pop
add
fs
sub
mov
lock
outsb
es
popa
jg
dec
dec
adc
push
inc
pop
mov
push
dec
stos
xchg
adc
inc
xchg
push
jne
cmpsb
and
pop
into
push
test
adc
adc
dec
je
mov
inc
dec
stos
mov
jnp
outsb
notb
xchg
xor
sub
cmp
in
nop
and
sub
cmp
xchg
mov
dec
mov
fnsave
ljmp
or
dec
xor
and
sub
nop
push
ljmp
jp
push
push
cmpsb
sbb
ret
push
cltd
push
pop
cvtdq2ps
push
scas
sbb
cmp
push
out
sub
test
pusha
call
add
mov
add
sub
sub
jmp
and
adc
add
add
mov
mov
xor
inc
dec
jne
jmp
aaa
mov
addr16
lods
movsl
test
push
pop
push
pop
add
add
rclb
pop
test
dec
pop
adc
mov
ljmp
shlb
outsb
push
add
les
mov
pop
in
pop
test
jno
in
pop
sti
xchg
int3
mov
add
outsb
add
aaa
ret
andb
add
enter
add
shlb
enter
pop
add
hlt
js
or
or
les
int3
mov
add
rolb
and
cmpsb
jae
shlb
jae
dec
adc
or
add
add
add
add
cmp
add
sar
cltd
sahf
lea
popa
test
add
popa
mov
add
orl
or
add
mov
add
xor
dec
or
pop
or
mov
add
add
dec
adc
or
push
mov
xchg
testb
leave
in
add
add
inc
push
add
test
push
lret
test
mov
lds
lds
push
xchg
js
jno
sti
jno
in
bound
add
mov
aaa
int
xchg
add
dec
add
add
mov
add
sbb
sbbb
add
test
in
or
bound
adcb
add
inc
in
enter
sub
lds
xchg
add
mov
push
cmp
xchg
add
sti
sti
sti
pop
or
mov
add
mov
sub
add
clc
mov
mov
inc
mov
inc
push
or
mov
inc
push
or
push
or
mov
inc
push
or
aaa
les
or
mov
inc
push
or
push
or
mov
inc
push
pop
les
or
mov
inc
push
pop
les
or
mov
inc
push
pop
les
or
mov
inc
push
pop
les
addb
add
push
das
cld
mov
pop
mov
inc
in
jno
sti
sti
mov
push
or
mov
inc
push
pop
les
or
mov
inc
push
or
test
push
add
add
xorl
add
or
mov
inc
push
pop
int
or
mov
inc
push
or
push
repz
icebp
mull
sti
sti
dec
mov
inc
in
mov
push
or
mov
inc
push
pop
int
or
mov
inc
push
or
test
add
add
or
test
add
add
or
inc
push
repz
hlt
mull
sti
sti
test
jnp
add
or
test
push
add
add
repz
hlt
mull
sti
sti
mov
inc
aaa
int
in
add
add
test
push
add
add
in
push
repz
hlt
mull
sti
sti
pop
das
inc
and
lea
add
or
test
fildl
cmp
and
shlb
ret
in
add
add
cmp
repz
pop
roll
mov
mov
xor
inc
dec
or
in
add
add
aad
psubusb
fucomip
shl
jge
mov
shlb
pop
pop
pop
cwtl
mov
stos
cld
fcomps
shl
jge
and
fcomps
fcomps
shr
jge
jmp
fcomps
rol
gs
pop
pop
fcomps
rol
jge
cmpsl
mov
fcomps
push
out
push
add
fwait
mov
fsubs
push
frstor
pop
pop
psubusb
shl
jge
sub
sub
pop
and
sub
std
push
fcomps
shr
jge
sub
fcomps
fcomps
adc
fcomps
sahf
fnstsw
mov
sbb
pop
pop
fcomps
xor
pop
pop
xsha1
cmpsb
int3
xchg
jmp
fisubrs
scas
shl
outsb
stc
pop
pop
pop
pop
cmpsl
aam
pop
fdivs
rorb
pop
rclb
pop
fsubs
push
fstpl
pop
pop
pop
pop
fcomps
fdivs
fsubs
push
fisttpll
rcrb
mov
fidivrl
pop
pop
pop
push
fcoml
pop
aas
rcrb
mov
pop
fwait
pop
inc
adc
ficompl
cmpsb
cmpsb
mov
pop
pop
pop
jne
mov
dec
pop
pop
pushf
fcomps
loopne
pop
pop
pop
jecxz
outsl
fisubs
sbb
push
fsubrl
pop
pop
pop
pop
rclb
adcl
xor
xor
mov
aas
xor
xor
xor
arpl
cmpsb
jecxz
cmp
mov
xor
xor
cmp
das
xor
xor
xchg
pop
jno
mov
mov
mov
out
cmpl
dec
aas
xor
hlt
xor
xor
mov
xor
xor
mov
xor
xor
das
mov
in
shlb
sarb
dec
and
xor
cmp
dec
xor
xor
fisubl
cmp
cmp
sub
xor
mov
outsl
push
aaa
loope
mov
push
mov
xchg
icebp
enter
xor
xor
std
mov
xor
xor
bound
loope
mov
cwtl
mov
cwtl
mov
out
cmp
mov
clc
fwait
imulb
or
testl
jbe
mov
xchg
js
lcall
cmp
divb
xor
xor
inc
int3
int3
int3
outsb
mov
daa
xor
xor
ret
int3
addr16
int3
push
xor
xor
pop
sti
xor
xor
das
mov
fwait
shlb
shlb
mov
mov
dec
xor
xor
cmc
mov
sbb
xor
mov
xor
gs
lahf
leave
pslld
mov
arpl
lock
mov
arpl
lock
mov
aaa
mov
int3
int3
int3
hlt
mov
xor
xor
xor
xor
int
pop
jb
lret
xor
cmp
ret
int3
int3
int3
mov
aaa
push
xor
jne
mov
xor
xor
mov
imul
std
cmp
add
mov
add
add
lock
push
adc
pop
push
pop
push
adc
pop
inc
push
push
inc
pop
inc
adc
inc
inc
pop
pop
pop
adc
sbb
ja
inc
push
pop
pop
inc
push
inc
or
gs
push
push
pop
pop
pop
inc
adc
pop
pop
pop
inc
cmp
inc
push
adc
adc
inc
inc
or
inc
inc
inc
sbb
pop
push
sbb
inc
pop
pop
push
sbb
cmp
pop
push
pop
pop
adc
adc
pop
push
pop
push
inc
pop
push
inc
jae
push
pop
pop
sbb
addr16
pop
inc
adc
pop
push
inc
push
pop
adc
adc
pop
inc
push
push
inc
push
push
adc
pop
adc
je
pusha
addr16
jbe
adc
popa
pusha
jp
jge
pop
push
adc
push
adc
pop
push
pop
push
adc
pop
inc
push
push
inc
push
push
cmp
pop
adc
push
pop
inc
inc
adc
inc
push
inc
inc
push
push
adc
cmp
inc
push
pop
push
push
adc
pop
push
push
inc
or
jno
inc
push
push
adc
inc
inc
pop
pop
push
inc
xor
add
adc
cwtl
add
push
sarl
movsb
adc
jns
cmp
add
pushf
lds
lcall
aaa
add
sbb
sub
das
insb
and
sbb
mov
test
out
mov
cmc
or
xor
call
add
pop
mulb
add
jnp
adc
es
bound
xor
ret
pop
inc
adc
lds
or
js
sti
mov
add
mov
dec
rolb
jno
fimuls
orb
cwtl
cli
roll
add
mov
inc
std
inc
lock
dec
fdivrl
popf
pusha
cmp
sub
cmp
mov
xchg
ss
aam
lods
shl
push
pop
mov
mov
dec
lret
insl
int
dec
add
add
or
cmp
or
test
sbb
mov
adc
sbb
mov
add
orb
in
clc
inc
jle
cmp
or
out
jecxz
mov
add
or
adc
icebp
add
jl
add
jmp
inc
push
inc
and
dec
cmp
mov
adc
stos
pop
or
push
loope
add
mov
sub
add
adc
sbb
andb
sbb
or
lds
and
sub
sbb
fcoml
dec
pop
add
push
mov
adc
or
sub
sub
push
and
incl
push
sub
or
xchg
add
mov
inc
and
ss
mov
fprem
in
add
icebp
and
push
pushf
lock
popf
enter
mov
insl
shrl
call
cmp
or
pushf
movsb
dec
and
mov
dec
adcl
sahf
faddl
nop
in
insl
jmp
add
xor
xchg
lods
push
movsb
or
jle
ds
pop
sbb
add
rcrl
daa
stos
repnz
mov
sbb
and
push
dec
push
pop
cmp
fs
aam
pop
in
pop
cmp
mov
pop
cmp
ss
cmp
inc
clc
sub
daa
inc
push
inc
dec
inc
aam
push
pop
push
dec
ss
push
jbe
pop
pop
dec
xor
xor
mov
inc
out
pop
mov
push
push
inc
fisttpl
inc
push
into
fistpl
addb
pop
xor
dec
ss
outsb
aaa
xor
ja
data16
mov
fnstenv
inc
push
loop
jge
lock
jl
mov
xlat
inc
cmpsl
push
scas
cmp
aaa
pop
push
fbstp
add
push
inc
push
xor
int
std
jecxz
sbb
orl
cmp
and
fists
pop
xor
inc
inc
mov
inc
and
xlat
xor
cmp
jno
ss
int
call
jge
add
add
sbb
fxch
push
or
pop
rorb
repz
jne
daa
inc
xor
inc
jp
fwait
test
push
add
xlat
imul
loope
add
cmp
add
shll
add
cmpl
mov
sbb
cmc
mov
movb
and
lock
add
enter
xchg
xchg
sbb
icebp
dec
xor
mov
iret
and
pop
scas
add
add
lods
outsb
or
sbb
or
icebp
adc
add
sub
add
sbb
pop
jl
sbb
mov
mov
sbb
into
mov
push
test
pusha
add
add
xchg
jne
rclb
out
pop
mov
add
mov
or
arpl
jge
push
dec
dec
cmp
mov
lods
inc
aaa
add
scas
insb
mov
inc
add
mov
inc
inc
push
jle
add
clc
stc
xchg
sub
out
ljmp
inc
cld
sbb
lds
in
add
push
leave
or
jmp
pusha
pop
cmpsl
std
mov
mov
out
add
jno
push
add
sbb
fiaddl
movsb
add
and
test
xchg
sbb
stc
sti
adc
lret
loope
add
sbb
ds
cmp
cmc
fmuls
and
cmpsl
add
pop
out
hlt
inc
add
cld
sub
les
std
mov
stos
loopne
enter
orb
mov
mov
or
add
gs
jns
add
out
xchg
push
aas
jno
add
es
jle
sub
popf
add
dec
ja
enter
sub
repz
add
out
sub
add
lcall
shlb
je
jmp
pop
cmpl
jns
mov
xchg
pushf
repnz
mov
mov
add
sub
mov
add
cs
jle
xor
lods
jo
add
fisubs
cwtl
mov
pop
in
xchg
cmp
inc
mov
sbb
dec
jg
adc
fcoms
push
addl
mov
icebp
add
in
ljmp
dec
and
lahf
mov
mov
roll
pop
movsb
jbe
add
out
push
xchg
sub
stos
test
aam
add
pop
loopne
mov
popa
in
sub
aad
jbe
and
jo
dec
cmp
pop
pop
js
cmp
xlat
test
jb
add
insb
in
in
pop
aas
add
jle
jl
lret
repz
sbb
out
scas
jge
add
sub
mov
adc
xchg
mov
popa
push
add
dec
xchg
jecxz
test
add
mov
jp
add
lret
sub
das
sbbb
leave
lds
pushf
inc
popa
sti
pusha
adc
mov
mov
dec
enter
imul
testb
andb
mov
inc
hlt
into
lahf
add
es
sub
fwait
int3
mov
sti
push
lret
adc
or
lds
mov
add
inc
and
pop
sbb
jbe
inc
out
leave
add
sbb
push
and
pop
jns
push
ljmp
xchg
push
xchg
enter
stos
jge
fdivp
in
jl
add
cltd
lcall
push
clc
leave
mov
mov
les
pop
add
repnz
dec
call
jo
cmpsl
push
mov
jp
shlb
mov
in
imul
mov
je
shrb
add
and
mov
dec
push
lcall
jg
sbb
dec
xor
cmp
cmp
add
int
and
cli
jecxz
push
lcall
inc
sub
repnz
push
push
call
jg
aas
add
icebp
inc
repnz
mov
lods
ficompl
cmc
data16
jmp
test
sub
loop
add
jne
fwait
xchg
cltd
aas
aad
push
mov
rorb
icebp
sub
repz
decb
gs
pop
and
std
fdivrl
add
scas
ret
push
addl
lcall
add
or
mov
hlt
push
add
mov
cmpb
add
rcrl
push
xchg
cs
jns
nop
sbb
add
push
add
mov
andb
pop
push
popa
sbb
fbstp
sub
adc
inc
xchg
nop
push
lock
rorb
ja
stc
sbb
sub
dec
sbb
sysret
inc
popa
adc
loopne
fwait
push
lods
test
add
clc
or
hlt
cmp
sti
mov
cli
add
in
popl
ljmp
jae
fdiv
mov
out
pop
mov
cmc
scas
imul
inc
sbb
rorl
mov
stos
and
add
xlat
rcr
jl
outsl
pop
insb
inc
pop
jp
add
out
fwait
lret
pop
push
mov
sbb
or
jb
sbb
push
test
xor
mov
add
add
repz
add
stos
jg
cltd
jnp
add
pop
add
out
inc
add
mov
nop
or
add
imul
lock
dec
jmp
sub
hlt
std
push
ud0
xor
shrb
push
jno
ret
outsl
cld
pop
cmp
mov
xchg
lock
shrl
fcompl
add
addr16
add
push
adc
add
cmc
outsl
fs
pop
ljmp
pop
int
add
pusha
or
push
popf
in
sarb
adc
test
call
dec
push
sbb
fwait
add
add
cmp
xchg
les
mov
cli
int3
adc
mov
dec
insb
incb
pop
leave
and
js
add
jno
je
push
fldl
test
mov
das
aam
cmpsl
add
lahf
imul
mov
popf
icebp
xchg
add
mov
inc
cs
mov
test
popa
in
jo
lods
mov
lock
int3
jae
add
jbe
fs
xchg
add
or
inc
add
cmp
add
xchg
sub
mov
scas
aas
cmp
mov
sbb
mov
cmpsl
add
push
in
fxch
add
inc
push
movb
lods
int3
mov
xchg
pop
jmp
add
or
mov
lahf
or
add
jmp
jp
sahf
popa
add
inc
and
imul
add
pusha
aam
mov
orl
add
xor
push
stos
adc
into
sahf
out
mov
lret
add
inc
jb
and
mov
or
jo
jge
jno
pop
xlat
arpl
inc
mov
mov
cs
or
jno
add
stos
push
pop
ljmp
or
insl
pop
xchg
das
add
clc
jne
aas
adc
xchg
lock
jbe
aas
add
xchg
daa
sub
in
pop
ret
outsl
cmp
xorb
mov
or
fisubrl
mov
or
addb
subl
xor
sbb
ja
jg
mov
add
inc
push
adc
test
push
test
rorb
ljmp
loopne
push
iret
out
ja
jg
insl
pop
lock
sbb
dec
cld
adc
add
push
imulb
addb
add
popf
sbb
mov
mov
cs
insl
fbstp
add
lret
lods
out
push
lret
add
mov
data16
popf
xor
nop
icebp
jmp
cmp
xchg
sub
add
jne
push
add
adc
xor
add
xchg
icebp
inc
push
subb
in
or
test
sbb
stc
dec
dec
cmp
vpsubsb
incb
out
lods
sbb
out
call
jb
add
fwait
in
cwtl
and
cmp
bound
cmovb
inc
loop
insl
push
ljmp
dec
aaa
add
sub
xor
add
cmp
mov
stc
aam
cld
sub
add
cmpsb
test
xchg
add
jno
mov
mov
adc
in
insl
incb
xchg
sbbl
or
stos
scas
pop
iret
jle
xchg
jmp
subb
push
test
inc
aaa
test
sub
lret
cmp
jns
pop
fs
sub
jmp
clc
and
cmpsl
push
sub
outsb
add
js
adc
add
aam
fstpl
dec
xlat
pop
loope
mov
test
pop
cmp
xor
aaa
add
testl
pop
js
fnsave
push
loopne
movsl
mov
int
repnz
mov
xorb
push
push
iret
mov
add
and
and
shrb
xor
daa
addr16
mov
stos
pop
push
mov
ret
adc
hlt
stc
add
inc
dec
xor
xor
mov
adc
in
inc
roll
pop
scas
das
push
add
incb
mov
adc
out
cmp
hlt
and
jnp
jmp
sub
jl
sub
add
push
stc
sbb
shrb
int
cmp
movsb
test
add
mov
ljmp
adc
dec
daa
or
hlt
loopne
push
sahf
inc
mov
inc
inc
ret
movsl
lock
pop
push
xchg
shrl
jecxz
add
mov
sarb
rol
fiaddl
mov
test
je
add
repnz
xor
movl
mov
popa
push
push
decb
inc
add
fbstp
stos
add
adc
lret
add
lcall
outsb
out
jmp
add
rclb
ss
push
cmp
add
push
mov
xchg
mov
add
adc
xor
push
add
sub
push
jle
pop
add
imul
add
outsb
loopne
cmpl
add
sbb
add
push
dec
xor
lds
add
jmp
sbb
push
repnz
gs
lahf
xlat
mov
popa
push
dec
fiadds
hlt
pusha
xor
cmp
mov
add
mov
mov
iret
into
in
fbld
pop
ret
sbb
mov
add
les
aaa
loope
je,pt
adcb
ljmp
mov
sarb
add
or
push
jne
in
add
sbb
hlt
fiaddl
into
or
mov
mov
inc
jmp
jns
jbe
add
pop
adc
mov
orl
pop
pop
xor
jbe
jg
add
adc
into
jp
data16
mov
cli
lahf
mov
mov
out
mov
sbb
mov
ss
cmp
add
inc
add
and
loopne
pop
add
addr16
jns
mov
jg
ljmp
rcl
dec
das
add
leave
lds
mov
mov
push
inc
clc
in
add
lcall
inc
fistl
adc
cmpsb
into
out
fidivrl
push
lcall
sti
daa
push
mov
add
test
push
ficompl
jne
push
int3
push
aad
roll
cmp
rcl
js
cmp
cld
loope
call
insb
stos
jg
out
add
xchg
mov
add
lret
inc
mov
adc
cltd
push
add
dec
lret
sbb
lods
or
xor
mov
test
mov
adc
stc
adc
sub
push
xchg
xchg
and
inc
shlb
leave
sbb
stc
xor
loope
add
sub
nop
jmp
xchg
stos
mov
jbe
add
in
sahf
flds
push
add
mov
push
mov
sub
add
ret
repz
ret
nop
shl
aas
pushf
test
push
or
jo
or
dec
and
pop
and
cli
and
jp
jo
push
xor
popa
sbbb
pop
sub
mov
ja
mov
inc
adc
imul
pop
insl
test
leave
sub
jg
pop
push
add
pushf
fldcw
mov
and
xchg
shrw
mov
test
mov
pop
add
jb
xlat
in
cli
pop
mov
fmull
shll
clc
cwtl
mov
jmp
xlat
fs
xor
sub
andl
cwtl
sbb
cmp
mov
out
inc
sarb
pop
adc
xchg
sbb
mov
sbb
mov
pop
loopne
add
xchg
fcmovu
mov
sbbl
fdivrs
push
aad
inc
mov
sahf
xor
sbb
push
outsl
adc
sbb
or
push
pop
add
and
shll
movsl
cmp
cwtl
add
test
rolb
in
jo
mov
add
orb
insl
xor
addb
sbb
add
repnz
movsb
inc
xlat
sbb
ret
adc
fxch
enter
jbe
add
ja
rolb
insb
inc
fdivrl
inc
pop
dec
out
lret
fnstenv
roll
icebp
mov
push
pusha
std
adc
sbb
push
or
add
fsubs
add
jno
sbb
jge
lcall
and
hlt
jp
or
mov
into
or
sbb
pop
lahf
aaa
push
pusha
add
lcall
inc
jo
mov
test
shlb
xchg
inc
sbb
add
aas
add
or
adc
mov
add
shrb
mov
loopne
add
out
loop
fwait
cmpl
mul
cwtl
cmp
pop
jne
daa
sbb
add
addl
mov
idivb
outsl
add
inc
imul
notb
scas
add
jae
call
js
xchg
aaa
mov
stos
and
add
push
add
sbb
and
pop
repnz
subb
jmp
cli
inc
rorl
mov
call
mov
xchg
xor
xchg
cltd
cmp
scas
in
mov
jecxz
add
sub
or
pop
mov
adc
push
adc
mov
inc
jle
add
cmp
pushf
jp
call
loop
add
push
xor
mov
xchg
cltd
jl
xorl
testb
sbb
cmpsl
cmpsb
lcall
mov
add
jmp
add
mov
add
loopne
pop
mov
int3
jno
lea
jmp
pop
iret
add
mov
cmpsb
sbbb
and
push
dec
sbb
fadds
aad
sub
jno
jp
pop
cmp
cmp
cld
notb
stos
push
test
xorb
sti
jp
and
or
add
push
mov
inc
in
addr16
pusha
outsb
ret
mov
je
fbstp
cmp
adc
push
push
add
dec
repz
inc
in
jp
out
ljmp
and
mov
cmp
mov
test
fiaddl
lret
xor
mov
push
pop
stos
aad
lods
inc
adc
pop
mov
data16
fdivr
add
dec
mov
push
cmp
add
push
mov
and
xor
sub
repnz
mov
jle
jl
bndstx
pop
xchg
negb
imul
scas
add
mov
mov
pop
sbb
stc
inc
cmpsb
add
jb
push
pop
shll
add
ja
push
xor
dec
add
std
mov
js
pop
xchg
sbb
es
push
icebp
ljmp
jle
test
xchg
push
in
int
push
cmp
add
clc
mov
stc
stos
mov
enter
inc
xlat
pop
and
dec
push
sar
inc
inc
fwait
add
clc
popa
mov
jns
add
out
mov
add
mov
subb
sub
insl
dec
jge
mov
pop
lock
inc
fnsave
fildl
push
les
push
sbb
inc
jl
jno
mov
or
test
jle
setg
cs
add
ja
repz
dec
adc
xchg
scas
out
add
shlb
add
jne
mov
call
sub
xchg
jae
add
jge
cmp
fwait
add
add
mov
dec
add
popf
jge
push
mov
shl
adc
cmp
push
inc
scas
lcall
ss
xchg
rcl
jno
psllq
js
sub
mov
xchg
jg
pop
inc
add
orb
jg
add
repz
outsb
faddl
scas
dec
xor
add
roll
test
fsubrs
push
lds
data16
scas
daa
lret
adc
out
add
dec
mov
fiaddl
inc
lret
fsubrs
pop
sub
mov
sahf
leave
shll
add
fmull
push
cmp
in
xchg
cmp
sti
cmpb
sub
mov
push
adc
jbe
add
ret
add
pusha
insb
ret
frstpm(287
xchg
scas
add
mov
leave
mov
push
add
inc
ret
jb
add
sub
dec
fxtract
jge
lock
dec
push
push
cld
movsb
dec
push
add
push
pusha
in
cmp
inc
push
sbb
and
adc
inc
mov
mov
in
int
arpl
hlt
cld
mov
add
bound
push
add
iret
rcrb
dec
aad
add
pop
jp
mov
std
in
pop
jmp
xchg
add
fwait
add
pusha
cmp
cli
rolb
add
lret
xchg
add
lea
mov
jb
cmp
jmp
repnz
dec
push
add
cmpsb
sub
into
data16
add
ucomiss
xor
jle
adc
ljmp
andb
nop
pop
sbb
loopne
fwait
mov
add
outsb
inc
sbb
push
sbb
fsubl
mov
sahf
pop
push
adc
add
js
add
call
test
add
pop
push
add
mov
stos
xchg
and
push
pop
notb
mov
out
mov
decl
push
and
xor
ljmp
cmpsl
dec
sub
and
add
mov
add
pop
ret
fsubr
leave
inc
and
scas
pop
mov
or
in
add
add
mov
faddp
mov
loopne
sbb
and
subb
xchg
data16
add
sbb
das
ret
cmp
repnz
xor
mov
outsb
cmp
mov
js
je
add
arpl
push
imul
add
inc
lcall
fcomp
pop
xlat
add
xchg
jb
pop
pusha
mov
adc
lahf
enter
pop
hlt
scas
push
imul
call
out
add
xchg
movsl
push
add
mov
mov
add
jne
pop
out
xchg
fmull
icebp
loop
adcl
pop
in
dec
add
xor
cmp
dec
fmuls
jp
dec
add
stos
sub
outsb
sub
push
ficoms
add
and
cmpsl
adc
loope
je
ljmp
packssdw
lock
adc
jecxz
jle
inc
in
scas
push
stos
popf
flds
mov
and
add
cmp
int3
dec
das
add
dec
add
in
add
push
js
add
fwait
mov
mov
dec
add
pusha
pop
and
add
add
insb
sbb
shrb
sub
pop
add
add
dec
and
fnsave
jns
add
push
push
xchg
add
sahf
jecxz
fiadds
shrb
add
sahf
aad
mov
mov
jns
sub
jecxz
repz
xor
sbb
sbb
dec
add
or
ljmp
sub
xchg
les
pop
xorl
aaa
or
clc
jae
sbb
xchg
out
int3
jmp
pop
add
add
in
mov
jl
out
out
push
hlt
jnp
add
sahf
ljmp
jl
cmp
ds
cmp
pushl
jno
sbb
mov
dec
pop
add
repz
adc
mov
mov
mov
out
pop
pop
xchg
aaa
jle
mov
loope
xchg
xlat
cmp
or
in
scas
sbb
aas
add
pusha
mov
push
stos
lock
xchg
adc
outsl
push
push
jecxz
jle
sti
add
pop
rcr
xchg
ret
addr16
mov
scas
out
data16
xchg
cs
add
push
push
stos
sti
scas
pusha
pop
lahf
lods
push
add
cmc
in
popa
dec
mov
add
cmp
pusha
push
xchg
cmp
sub
xchg
das
pop
std
mov
clc
je
mov
out
push
test
add
push
xchg
outsl
add
push
rolb
pop
fadd
movl
xchg
stos
mov
movb
adc
adc
lret
mov
push
hlt
add
cmp
add
test
test
xor
cmp
mov
movsb
int3
fildl
mov
lods
and
orb
add
jno
fstp
in
mov
mov
insl
push
out
dec
sti
push
sbb
xchg
mov
or
push
roll
iret
int
jnp
sub
add
insb
gs
push
je
add
testb
cs
sbb
stc
ret
xchg
and
add
and
jmp
aaa
push
inc
lret
fnsave
add
insl
xchg
loopne
gs
push
ret
mov
add
mov
test
add
lret
orb
outsb
out
aas
add
sbb
fildl
push
aam
xchg
pop
rcrb
addl
pushf
insb
sbb
popa
push
in
cmp
movsb
mov
pop
xor
in
lock
lods
in
movl
jmp
cmpsl
push
add
push
cmp
fdivrl
sbb
xor
test
cmc
or
movsb
insl
movsl
sbb
push
inc
mov
shrb
add
push
cmpsb
xchg
pop
cmp
movsb
rolb
xchg
ds
and
push
loope
xor
adc
add
popa
lock
bound
fwait
icebp
mov
push
inc
or
jns
sahf
mov
jne
lock
xchg
xlat
popf
repnz
clc
cwtl
sub
scas
scas
add
sbb
add
pop
add
fiaddl
push
popa
inc
out
orb
aad
add
xchg
aas
in
orl
rolb
fcomi
mov
hlt
lret
jmp
mov
in
mov
jg
xchg
daa
xchg
imulb
dec
add
test
xchg
push
push
out
pop
add
inc
cld
and
add
push
xchg
push
rolb
xchg
gs
popf
mov
mov
push
jp
arpl
mov
shlb
jns
xor
test
pop
add
cwtl
mov
scas
les
add
mov
out
loope
filds
mov
jge
sub
aad
cmc
movsl
cld
xchg
fmul
rorb
add
dec
pop
or
or
scas
movsb
or
push
jp
loop
add
gs
cmp
jo
fldl
add
pmuludq
adc
ljmp
int3
xor
inc
push
out
push
ret
inc
mov
pop
mov
mov
or
sub
dec
cmpb
lcall
mov
out
add
repnz
pop
cltd
add
in
sarl
test
test
and
dec
adc
insl
fisttpl
add
lret
jne
cmp
sub
cmp
xchg
add
cltd
clc
popf
add
cmp
pop
les
inc
jp
lea
test
jecxz
arpl
jmp
mov
inc
inc
lahf
cmp
loope
add
jp
push
add
lret
idivl
add
dec
test
mov
jb
out
add
fadd
dec
and
mov
fldt
imul
lcall
int
mov
fwait
push
jecxz
sbb
cmp
lea
andl
stc
add
out
out
fsubl
add
nop
das
add
xor
out
setb
stc
clc
popl
inc
lds
mov
add
xor
ds
dec
pushf
mov
add
or
xchg
add
cmp
mov
xor
add
sub
jne
adc
test
clc
and
inc
xor
push
add
adc
jae
add
pushf
mov
popf
pop
sub
and
mov
add
lods
and
loopne
outsl
rolb
mov
add
push
insl
sbb
jge
aam
xor
push
fdivl
push
inc
aas
lcall
dec
mov
rcrb
scas
mov
mov
or
lcall
hlt
add
dec
shl
add
into
out
and
lret
mov
push
sbb
push
repnz
sub
outsl
sarb
adc
cwtl
shl
add
test
enter
out
add
fsubrs
dec
push
rcrl
fidivrs
loope
subb
in
jns
les
push
xchg
test
or
cli
or
mov
jg
jnp
pop
push
push
fnstsw
add
push
xorb
add
outsb
dec
lret
mov
sub
addl
addr16
mov
push
or
push
nop
int3
push
hlt
push
sub
sbb
enter
ret
jns
push
jo
sahf
jno
popf
mov
or
dec
cmp
test
and
ffree
push
inc
cmp
andb
lcall
out
notb
jle
add
mov
movsl
pop
add
add
mov
jmp
add
inc
jbe
mov
pop
cmpb
cs
add
xor
std
sahf
jb
add
or
test
xor
jl
pop
aaa
cmp
subb
inc
add
add
data16
mov
loopne
out
mov
pop
cwtl
sbb
shll
in
add
add
out
xchg
sub
add
out
rcrb
insb
cmp
cmp
ret
out
sahf
adc
add
mov
repnz
push
icebp
lods
jbe
add
rcll
test
xor
pop
jbe
divl
inc
sbb
add
in
or
sub
mov
mov
add
mov
push
xor
inc
pop
xlat
fiaddl
negl
add
add
stc
orb
sqrtps
adc
mov
cli
add
ss
bound
les
pop
ficoms
gs
int3
call
push
cmc
sti
fwait
xor
stos
sub
les
pop
push
jg
popa
add
pop
mov
stc
add
pop
fldt
cmp
pop
jne
push
xor
push
aaa
out
cmc
jno
repz
loope
pusha
push
jmp
push
add
test
adc
mov
add
sub
sub
pop
xchg
bound
fstps
insb
xor
push
push
add
cmp
jns
flds
xchg
add
mov
rclb
push
loopne
cmp
inc
sub
fsubr
call
mov
pop
rolb
in
test
mov
pop
cmpsl
adc
lock
push
stos
int
loopne
les
mov
addr16
jnp
into
cmc
pop
push
xor
outsb
xchg
hlt
gs
xchg
bound
push
jo
fwait
out
nop
add
call
lock
add
add
scas
out
push
cmp
movl
rclb
lret
and
mov
scas
or
pop
sbb
test
inc
movsl
add
inc
push
jmp
cwtl
lcall
mov
add
push
adc
insl
pop
add
push
negb
lock
pop
dec
mov
add
push
mov
pop
out
sahf
xchg
movb
dec
cmp
cmp
lahf
push
pusha
incl
les
fistl
mov
jecxz
stos
xchg
aas
cli
iret
and
push
add
push
pusha
popa
add
aam
mov
push
aas
pop
test
cmp
stc
xor
inc
es
push
out
pop
fadds
clc
pop
jecxz
xor
add
mov
add
cld
mov
fsubs
popa
pop
pop
mov
cmp
sbb
add
mov
std
add
push
shlb
les
mov
fsqrt
addb
sbbl
jb
xchg
hlt
or
jge
push
mov
inc
add
xchg
popf
stc
movsl
sub
dec
add
jo
rolb
mov
dec
mov
push
jae
mulb
adc
stc
in
xchg
loopne
lea
cmp
ljmp
mov
cs
xor
aaa
add
adc
imulb
les
sbbl
sbbb
xchg
sbbb
xchg
dec
stos
add
inc
fidivl
push
mov
add
pop
adc
or
cmp
cmc
pop
push
out
add
mov
insb
sub
inc
popf
dec
loope
lock
add
sti
pusha
inc
push
les
cmovp
mov
out
cli
ret
add
enter
stos
dec
lock
stc
push
call
nop
push
jg
orb
data16
mov
mov
sub
cmp
push
ja
push
add
cmpsb
test
mov
adc
and
dec
loopne
xchg
movsb
mov
ja
add
loop
add
mov
and
pop
fisubrs
jle
pop
shlb
leave
mov
sub
or
mov
push
add
or
or
push
adcb
jb
dec
stos
jge
add
or
fcmovnu
xchg
cld
add
aad
jns
mov
xchg
outsb
or
and
aas
dec
add
lds
add
sti
jmp
sbb
and
mov
jne
or
movsb
xor
mov
dec
fbld
push
mov
dec
jmp
sbb
adc
dec
mov
add
cli
mov
mov
pop
inc
iret
testl
cmp
jae
nop
mov
mov
test
add
dec
int
out
inc
jne
xor
mov
cld
cmp
int
aaa
xchg
add
xchg
pop
nop
adc
add
adc
or
test
mov
jns
jb
pop
jne
mov
hlt
out
sbb
pusha
int3
ja
rcrb
add
pushf
cmc
lds
jmp
mov
je
fnsave
shl
pushf
fsubs
inc
mov
add
stos
addl
pop
mov
clc
mov
cmp
pop
loope
inc
xchg
push
dec
add
or
and
and
lret
pop
int3
lcall
hlt
or
orb
sbb
test
es
add
push
xchg
jg
aad
daa
add
icebp
out
add
nop
fcoml
push
xchg
add
fsubs
mov
aam
rolb
inc
das
jbe
mov
sub
xchg
push
dec
js
hlt
test
or
test
sbb
mov
es
lds
fdivrs
mov
popf
sbb
in
jne
add
cmp
test
dec
and
cmp
add
stc
push
pop
lret
push
cmp
or
add
arpl
lea
cld
or
adc
testb
cli
outsl
sub
das
xchg
sub
cwtl
dec
add
inc
or
pop
mov
in
fisttpll
lcall
mov
xchg
push
add
imul
jnp
gs
movsl
mov
add
cmp
pop
add
fidivl
dec
pop
fnstsw
xchg
dec
cwtl
and
push
dec
cmpb
aam
cmp
mov
cmc
test
add
rorl
add
inc
xor
ret
rorb
mov
xor
add
pop
sbb
pop
or
movsl
inc
mov
aam
clc
add
pop
or
jge
pusha
add
test
loopne
cmpsl
rep
inc
pushf
push
out
shlb
xchg
cmp
dec
add
rcr
cli
cmpsl
add
sbb
xchg
rcrb
data16
or
sbb
jno
adc
xor
addl
shll
sub
je
sbb
cld
and
fldl
add
cmp
inc
cmp
add
pop
andl
shlb
pop
jae
je
test
pop
repnz
mov
sub
xlat
fildl
adc
addl
jno
pop
add
xchg
xor
add
push
movsl
sub
in
adc
cmp
and
fdiv
jnp
roll
sbb
mov
adcl
cmp
or
fildl
test
icebp
fdivr
pop
jbe
mov
les
gs
pop
std
cmpsl
mov
icebp
inc
and
or
les
shrb
faddp
push
fwait
push
push
adc
int
and
sbb
enter
jge
lock
xor
pusha
cmp
mov
add
out
fsubl
rclb
add
scas
cld
mov
push
imul
in
xchg
roll
add
test
fsubrs
inc
add
jae
scas
add
in
mov
sti
add
add
pop
test
pop
add
cltd
inc
incb
bound
std
mov
sbb
enter
je
clc
mov
xor
insb
add
sti
or
jns
sbbb
out
andb
roll
cltd
clc
mov
ret
add
push
pop
mov
or
xchg
xchg
or
push
add
test
mov
mov
adc
pop
push
or
out
xchg
inc
outsb
cmpb
add
sar
leave
ret
cwtl
out
add
test
jns
in
add
movsl
aad
shrl
mov
add
push
xchg
adc
insb
jno
add
frstor
dec
and
dec
xor
pop
jne
xor
xor
addr16
fmuls
mov
add
pop
jbe
push
cmp
add
loopne
roll
xchg
and
shll
add
movb
testl
repnz
fwait
mov
mov
imul
rolb
imul
andb
aam
inc
add
sarb
mov
pop
push
fwait
cli
inc
push
xchg
outsl
outsb
fisubl
loopne
out
and
add
add
jnp
movsl
mov
stc
jp
addl
cwtl
stos
repz
add
xor
scas
hlt
xlat
add
cmp
dec
out
roll
fs
push
and
test
mov
and
pop
add
pop
hlt
mov
out
jb
sbb
sbbb
add
or
lahf
jle
or
fmull
pop
sbb
cmp
jl,pn
mov
mov
sub
movsl
add
xor
pop
js
xchg
insl
aaa
push
int3
lcall
lock
dec
sub
add
sub
mov
mov
pop
push
imul
push
xorb
add
push
or
or
jae
jle
sub
pusha
test
push
test
xlat
mov
push
dec
inc
push
push
inc
push
add
push
jb
fs
add
gs
or
inc
daa
add
fadds
