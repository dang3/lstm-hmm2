call
in
sub
push
push
lea
push
push
xor
call
cmp
js
sbb
mov
inc
push
mov
add
push
lea
fidivs
clc
sub
and
mov
fistl
cmp
les
jle
add
pop
push
gs
fcoms
leave
and
jne
sbb
add
inc
js
mov
ret
mov
xor
das
jg
add
lea
push
push
clc
loopne
testl
imul
mov
cmp
daa
sub
push
jl
xchg
test
pop
jne
jle
jmp
mov
push
mov
sbb
mov
add
mov
and
push
jp
insb
sti
in
ljmp
and
repnz
mov
sti
jge
jg
push
lea
sub
push
push
mov
add
jmp
inc
lods
sbb
dec
mov
cltd
lock
pushl
pop
inc
inc
and
push
shll
push
xor
and
mov
data16
push
inc
stos
push
call
or
imul
mov
adc
pop
pop
mov
xor
jmp
add
jle
cvttps2pi
sbb
xor
and
pop
push
mov
jnp
pop
push
inc
stc
push
rcll
fistpl
inc
sbb
pop
mov
idiv
mov
dec
jle
in
fs
adc
inc
leave
xor
shlb
test
les
push
sub
mov
out
cmp
and
sub
add
and
mov
in
repnz
xor
enter
nop
sub
pop
pop
add
mov
push
mov
push
scas
lea
xor
fcoml
popf
insb
lods
sub
cwtl
xchg
in
push
mov
sub
out
insb
jns
fiaddl
dec
popf
mov
into
pushl
jne
add
fimuls
out
lcall
pop
jbe
xor
jmp
ja
push
pop
cld
clc
mov
push
fwait
les
xchg
sbb
and
sub
jne
cmpsb
shl
sbb
in
out
and
clc
cld
cld
mov
sbb
shl
add
dec
hlt
adc
or
sbb
int
pop
outsl
out
add
mov
add
push
or
cmp
mov
lock
cmp
add
movw
call
pop
scas
adc
bound
data16
push
daa
iret
cmp
pop
add
push
cmp
imul
scas
and
sahf
insl
loopne
push
fisubrs
push
cmp
in
mov
aas
rep
push
mov
adc
xlat
cmp
setg
or
pop
cmp
in
pop
pop
pop
lea
mov
movl
fsubs
loopne
pop
jg
mov
pop
imul
mov
mov
fisttps
out
test
jge
dec
je
and
lcall
push
mov
mov
mov
adc
push
das
mov
je
add
pop
les
das
sarb
and
push
scas
jl
add
xor
sub
cmp
std
das
jns
adc
adc
cmp
pop
in
jno
mov
call
add
test
jne
insb
xorl
sbb
xor
test
add
rcll
push
insb
mov
aad
dec
lret
into
mov
add
lahf
mov
jmp
out
fstps
loope
test
cwtl
adc
adc
in
test
xchg
xchg
pop
insw
loopne
pushf
adc
mov
pop
out
cwtl
lea
cld
cmp
nop
jl
jnp
inc
lock
shl
rcrb
and
push
push
cmp
into
iret
inc
sbb
out
enter
add
call
ss
mov
push
dec
aam
dec
sub
sbb
add
push
add
jne
mov
push
fildl
dec
pop
mov
xor
nop
pop
pop
jne
cmp
aaa
push
cmp
les
xlat
sub
ucomiss
ret
aam
xor
sbb
ret
xsaves
sti
push
subb
push
mov
push
subl
repz
jge
jge
add
fsubrs
inc
and
add
js
js
loope
adc
pop
pop
or
or
pop
subl
cmc
sbb
push
push
dec
les
shll
test
inc
cmp
xchg
dec
jg
mov
adc
prefetch
fnstcw
sub
enter
adcb
add
pushf
xor
nop
adc
lock
xchg
lods
pusha
mov
cmpsb
push
pop
sbb
mov
ret
and
or
addb
push
xorl
mov
jecxz
jle
loopne
out
push
add
jge
mov
mov
jl
mov
movsl
adc
adc
stos
mov
adc
test
cmp
stos
add
xchg
sbb
int
mov
push
sub
xor
jo
cmpsb
fistps
pop
in
or
testb
push
cwtl
xchg
std
push
push
push
mov
add
scas
test
pop
loope
mov
or
mov
das
je
and
jmp
xor
adcb
addb
vpshuflw
xor
sub
pop
push
push
ret
mov
scas
int
outsl
pop
push
push
ret
js
inc
je
add
loopne
pop
dec
mov
push
out
sub
mov
addb
cld
sub
notb
add
push
mov
les
in
or
movsl
push
mov
dec
fbld
sub
int3
nop
sbb
int3
cmpsb
int
mov
add
sub
add
call
push
cltd
pop
idiv
cmp
je
pusha
xorl
arpl
or
dec
in
test
xor
mov
mov
xor
push
adc
add
jmp
pop
xor
pop
jne
push
push
je
test
adc
or
out
pusha
mov
scas
lods
xor
dec
das
pop
repz
rcr
leave
and
pop
divb
daa
mov
push
mov
out
cmp
push
decl
add
xor
mov
int
mov
xor
mov
push
dec
xor
dec
or
jl
and
xchg
mov
leave
enter
int3
cmpsl
dec
mov
icebp
lea
sbb
push
filds
push
imul
or
out
push
jne
decl
ret
popf
mov
ret
pop
movsl
inc
mov
jns
adc
or
sub
or
cmp
orl
jnp
rorl
and
enter
mov
xorl
sub
adcb
fs
mov
adc
push
sbb
inc
js
dec
xor
mov
psllw
push
and
inc
pop
lea
inc
cmp
pop
inc
das
mov
mov
les
popf
xlat
je
or
loopne
mov
out
lock
arpl
sarb
push
jo
pop
or
sub
cli
cld
jnp
jle
add
cmpb
jne
inc
in
cmp
lock
clc
xor
push
test
stc
sub
mulpd
xor
fildll
movsb
sub
mov
pop
shlb
inc
mov
inc
cmp
sbb
cmp
or
dec
xor
and
fdivl
out
faddl
icebp
mov
cmc
add
sub
lret
sbb
push
dec
fsubrl
mov
mov
pop
jl
xor
cmc
jne
pop
jmp
mov
popf
arpl
jge
ret
clc
jne
push
jmp
push
jmp
sub
lods
je
mov
movsb
push
xchg
out
xor
sarl
xchg
adc
clc
jmp
dec
mov
mov
cmp
push
push
lret
add
and
fisubs
roll
pushl
mov
xor
inc
mov
mov
sub
aad
push
aad
push
std
sbb
push
jae
pop
add
ds
out
inc
mov
ret
test
fsts
dec
adc
lea
xchg
in
sbb
xor
cs
push
jnp
xchg
dec
mov
adc
cmp
repz
mov
shr
stc
xor
ret
pop
ret
icebp
mov
loopne
pop
mov
andl
add
adc
fmuls
dec
inc
add
jnp
jge
adc
clc
jg
popf
ret
dec
and
add
add
push
jge
out
out
lock
xor
jnp
into
cmp
dec
mov
mov
pushl
lea
ja
incl
pushl
jmp
movb
cmpsb
sar
mov
xor
rcll
add
adc
cmc
pop
divl
popf
jge
push
push
push
lea
pop
inc
and
cli
adc
push
mov
or
sub
cmp
daa
stc
add
mov
cmp
fstpl
mov
fchs
xor
inc
jecxz
sub
xchg
and
repnz
test
scas
int3
sahf
xchg
gs
out
jno
mov
jp
mov
arpl
mov
fidivrl
dec
pop
push
dec
sbb
jecxz
data16
pop
rol
lds
rol
fldl
adc
adc
cmp
adc
pop
push
adc
mov
clc
sbb
mov
mov
cli
jge
jg
mov
cmp
ja
mov
loopne
sbb
call
xchg
inc
fcomps
jo
test
add
sbb
into
dec
xor
scas
int
imull
sub
push
push
enter
push
js
mov
mov
push
sub
push
jno
mov
push
cmp
fdivl
push
push
push
xchg
test
mov
flds
pop
aad
jo
in
loope
sbb
pusha
sub
xchg
adc
call
mov
adc
or
cmp
sbb
leave
loope
push
pop
icebp
nop
loope
push
fsubr
xchg
and
sbb
gs
push
add
push
addr16
push
pop
xchg
in
loopne
sbb
and
and
inc
lock
shrb
xor
push
loopne
fadd
dec
push
push
sbb
adc
enter
cmp
lock
dec
frstor
iret
and
fdivrs
mov
xchg
cmpsl
enter
mov
ja
push
clc
lock
xor
fs
stos
clc
clc
and
daa
sbb
movsb
insl
leave
and
mov
pop
mov
mov
push
and
scas
out
jecxz
or
daa
mov
test
sub
xor
ds
mov
inc
add
out
jl
aam
clc
push
and
hlt
std
push
push
orl
or
dec
mov
loope
mov
imul
cmp
insb
adc
enter
and
sbb
mov
mov
xchg
adc
movsb
cltd
add
cmpsl
mov
out
adc
lahf
les
cld
adc
fcomps
rolb
arpl
jo
inc
push
mov
mov
sbb
or
pop
jle
leave
push
push
lds
mov
push
mov
scas
in
mov
daa
in
cmp
push
cmp
pop
mov
push
jge
cs
fildl
push
fs
or
adc
fucomi
cmp
jb
out
adc
lods
add
push
sbb
inc
adc
insl
mov
lea
ja
pop
and
mov
fdivrl
sub
inc
dec
jne
push
loopne
and
pop
sbb
jg
push
cmpb
pusha
jp
fsubs
in
test
cmp
or
shl
fldt
jg
fildll
fmull
dec
sub
outsl
aaa
in
fstl
test
sbb
cmp
sub
rcrb
pop
addr16
fs
out
mov
adc
sub
mov
adc
xor
enter
mov
andb
or
pop
aad
inc
aam
jae
loope
cmp
dec
xor
call
pop
xlat
fnstsw
add
add
adc
add
jmp
add
xchg
adcl
xor
add
xchg
sbb
shl
daa
and
inc
cli
loopne
fildll
jbe
push
mov
mov
lea
shr
cmpl
aaa
lret
add
movsb
das
mov
idiv
decl
add
add
sbb
xchg
idiv
pop
or
loop
add
aas
icebp
sub
scas
mov
and
add
divb
add
out
cmpl
jbe
adc
inc
insl
xor
lock
mov
loopne
pop
or
xchg
inc
cmp
jb
imul
jb
js
dec
adc
lea
out
jnp
loopne
pop
cmp
adc
or
outsl
cmpsl
push
loope
cmp
jne
mov
xchg
mov
mov
add
iret
xchg
pushl
and
sbb
pop
push
addb
les
mov
js
xor
or
xchg
adc
adc
sub
fldt
jmp
xchg
sbb
and
in
mov
sbb
push
shld
aad
in
cmp
inc
cmp
mov
add
ja
out
sbb
sbb
push
xor
hlt
sahf
sub
je
add
pusha
push
pop
orl
repnz
ret
insl
mov
scas
test
fdivr
mov
dec
into
call
shlb
sarb
sub
push
fsubs
shrb
push
test
rorl
iret
pop
outsb
add
xor
push
pop
mov
or
mov
xor
adc
dec
mov
jecxz
adc
lret
mov
and
rcr
or
jge
stos
pop
stos
pop
cltd
outsb
mov
insb
jno
in
mov
call
enter
adcl
aad
out
mov
hlt
mov
add
mov
adc
sub
push
lds
sar
sbb
pop
shr
xor
push
cmp
sub
repnz
mov
pop
in
out
movzbl
push
xor
or
incl
int
add
mov
pop
and
pop
in
dec
or
dec
sbb
cmp
pop
icebp
inc
fdiv
dec
mov
pop
and
fwait
sub
incl
dec
pop
dec
mov
mov
or
mov
ret
ja
xchg
daa
push
add
test
jbe
mov
sub
jle
push
cmp
lret
and
pop
mov
insl
add
mov
out
andb
or
roll
cmp
or
inc
sbb
ficoml
add
loope
in
lods
pop
add
pop
loope
jmp
or
stc
cmp
jae
jg
mov
adc
lock
stos
lcall
rcrb
lds
jp
add
mov
add
or
adc
cmc
jo
jns
jbe
lock
ja
ja
push
cmp
js
jae
cmp
aas
mov
lea
dec
or
pop
jecxz
or
incb
jmp
push
push
inc
pop
or
test
pop
sbb
rcll
add
inc
ja
pop
cmp
fmull
jl
ud0
std
jbe
mov
xor
cmp
iret
mov
pop
cld
inc
cmp
je
ja
adc
dec
push
mov
scas
outsl
pop
mov
sub
daa
xor
mov
pop
jmp
ljmp
jecxz
pop
popa
divl
jns
fistps
stc
cmp
jae
inc
outsl
jns
add
jmp
cmp
jae
add
rolb
movsb
addb
lock
xor
negl
lea
mov
mov
mov
pop
push
pop
out
add
cwtl
ja
or
loop
mov
adcl
push
out
sbb
cmp
add
jl
mov
and
dec
and
cmc
jecxz
sub
pop
jae
jmp
add
ret
in
dec
lock
into
sbb
pushf
mov
sub
ret
mov
repz
push
jmp
sarb
int3
mov
sbb
pop
lock
fcompl
in
jbe
and
lea
rcrb
loopne
jge
lock
test
addb
and
das
inc
add
mov
call
push
jbe
in
push
fs
movsl
loope
inc
inc
imul
pop
test
inc
push
andb
mov
enter
ja
sti
cmp
lods
shrb
jae
aad
mov
mov
sbb
add
data16
jg
not
jne
testb
jne
orb
sbb
ljmp
pop
jno
dec
fisttpll
test
sub
pushl
and
mov
dec
jns
jmp
pop
sti
fstpl
iret
mov
lock
cmp
subb
inc
pop
lock
hlt
pusha
or
mov
push
nop
push
pop
push
or
mov
jecxz
adc
int
xchg
push
rclb
push
les
loope
lret
mov
inc
shrl
shll
dec
jno
cmp
aam
dec
sbb
ljmp
fidivrs
inc
push
push
stos
xchg
ret
adcl
add
push
cmp
ja
leave
rcrl
pushl
xor
lock
cmp
xor
sbb
push
std
popf
push
sbb
das
cmp
push
out
imul
cmp
mov
inc
cs
loopne
mov
stc
cmp
popa
jl
push
imul
popf
sub
setle
inc
xlat
leave
or
mov
fildll
jg
mov
arpl
push
test
push
iret
insl
push
and
jnp
popa
add
and
fdivrp
pop
sub
fadds
fldl
sbb
out
aas
bound
leave
arpl
aad
dec
mov
mov
and
jo
push
adc
mov
adc
cmp
push
lea
add
inc
popf
ret
in
aas
loope
gs
lock
sub
sub
jne
jo
ss
jmp
aas
sub
pop
js
fmull
push
mov
aaa
nop
pop
shrb
iret
push
in
add
dec
push
push
leave
imul
rcrl
mov
add
mov
add
stos
add
fsubrs
lods
push
rcrb
insl
dec
xor
test
insb
shl
fbld
pop
sbb
int
test
jo
dec
or
jo
pusha
arpl
xchg
sub
jl
cmpsl
cmpsl
add
mov
dec
jae
arpl
pop
neg
xor
xor
push
fldt
adc
pop
pop
ja
mov
stc
sub
or
xchg
cld
add
outsb
jnp
jns
adc
jns
jmp
test
xchg
push
lea
mov
mov
push
pop
mov
sub
push
and
roll
mov
add
jbe
sti
je
add
push
and
repz
imul
add
imull
inc
les
adc
jmp
cmp
repz
andl
mov
dec
es
fmull
adc
cmp
rorb
ja
inc
nop
add
std
out
inc
push
xor
add
or
mov
pop
inc
movsb
sti
movsl
stos
and
aas
sbbb
push
or
mov
sub
pop
clc
pop
pop
pop
pop
ret
gs
leave
jne
inc
mov
xor
dec
das
and
jg
add
in
cmpb
je
or
push
add
incl
mov
mov
sbb
or
or
je
hlt
out
dec
cmovnp
pop
subl
mov
sarb
fsubl
push
mov
sub
leave
jbe
mov
xor
cwtl
mov
jmp
ret
cmp
in
into
mov
and
push
addr16
fmuls
mov
inc
neg
call
push
push
inc
mov
push
fs
pop
pop
cmp
out
lcall
insl
push
or
mov
xor
mov
inc
cmp
jb
push
push
mov
push
inc
fstpl
fmul
test
dec
mov
movsl
mov
xor
movsw
pop
mov
mov
cli
pop
push
push
call
xchg
icebp
dec
mov
jge
jne
icebp
xor
adc
xor
jl
in
cmc
loopne
cmp
ficoms
push
inc
lcall
int
cmc
and
inc
jge
mov
es
add
hlt
jae
push
mov
pop
or
push
mov
or
mov
sarb
dec
js
pop
pop
sbb
sub
into
mov
inc
lcall
mov
cmp
rcll
scas
fdivrp
jne
fisttpll
test
xchg
sbb
pop
and
adc
mov
movntq
inc
mov
cmp
test
or
mov
iret
push
insb
mov
add
adc
inc
sbb
int3
push
push
out
sub
jge
xor
jmp
cmp
orl
sar
adc
ja
adc
or
fsubs
loopne
loopne
popf
inc
test
cmp
test
add
sub
and
pop
sbb
cmp
mov
lods
adc
add
mov
sub
daa
in
pop
mov
bound
pusha
repz
xchg
in
inc
adc
jbe
adc
lret
push
mov
sbb
mov
jmp
and
addl
ljmp
or
push
decb
mov
shrl
jno
addr16
pop
mov
push
push
sbb
mov
insl
jmp
xchg
loopne
dec
testb
and
ret
mov
sarl
adc
inc
xor
movsl
les
std
jmp
inc
pop
lea
mov
add
adc
sub
push
gs
xor
xor
jl
jecxz
lods
leave
lret
adc
dec
mov
xchg
fs
add
jecxz
in
ss
sub
or
add
hlt
mov
aad
iret
jbe
ljmp
pusha
xchg
sahf
cli
jne
pop
pop
mov
push
dec
test
sbb
cwtl
loope
loope
stos
cmpb
je
adc
gs
je
add
shlb
pop
fucom
pop
cmp
fbld
ss
and
rcrl
fdivrl
mov
push
push
orl
mov
aaa
je
push
mov
sub
repz
sub
sbb
xchg
pusha
jb
inc
fsubr
inc
dec
insb
outsl
or
pusha
mov
test
xor
pop
push
jns
sbb
idivb
jmp
add
je
pop
sub
pop
repz
sbbl
push
and
add
add
sbb
es
ret
push
pop
les
lahf
jmp
jbe
push
push
scas
insb
fimuls
lock
enter
inc
mov
pop
push
push
mov
or
cld
mov
inc
xor
push
dec
lods
sbb
test
inc
fmull
or
pusha
xlat
mov
sti
aaa
insb
inc
inc
inc
mov
dec
sub
inc
out
push
cmp
fwait
pop
lods
or
shrl
cld
jle
push
sbb
or
mov
or
xlat
pop
and
ret
es
adc
cltd
add
jl
arpl
inc
or
jne
imul
cs
sbb
into
push
cmp
or
pop
jmp
mov
mov
cmp
fdivp
push
push
cmpsb
adc
insb
mov
test
or
or
dec
es
fstp
shrb
mov
cmpsl
pop
sti
shrl
cmp
mov
adc
in
fcoml
shlb
and
adc
jnp
sbb
fmul
fcmovnu
mov
mov
xchg
adc
cs
cmp
inc
pop
mov
int3
fcmove
and
mov
xchg
pop
jb
xor
mov
mov
pop
push
cmc
and
push
loop
cmp
inc
push
cmc
pushf
fistpl
cmp
lea
push
push
mov
fnsave
outsl
clc
adc
ret
xor
cmpsl
js
das
ss
popa
and
out
add
sbb
jl
je
add
fisttpl
sub
jo
jne
pop
es
push
mov
adc
jle
and
cld
lea
jne
jge
push
in
xchg
cmp
gs
mov
subb
push
mov
in
call
call
add
scas
sarl
dec
push
cmc
idiv
mov
lock
cmp
in
xor
cld
adc
inc
ljmp
rcr
push
jb
cmc
divb
jbe
popf
xchg
push
test
mov
xlat
fwait
inc
pushf
cli
ja
jl
scas
inc
jle
test
cmpsl
hlt
mov
fsubrs
push
or
mov
or
cmpsl
sub
sarb
inc
inc
div
pop
mov
mov
inc
adc
shll
pop
cmpl
popf
lods
sbb
sbb
sbb
pusha
and
adc
or
lea
shll
push
xor
insl
xor
sbb
sub
shrl
inc
push
dec
xchg
xlat
test
pop
xor
mov
and
sub
cmpl
fsubl
add
adc
sbb
ss
js
and
pop
jmp
adc
enter
xor
push
adcl
fwait
mov
imul
add
and
sbb
xchg
sbb
mov
sbb
sbb
and
adc
or
lods
jo
and
shlb
mov
ret
and
rclb
and
dec
out
dec
sbb
mov
inc
and
fmull
aas
call
je
inc
add
pop
cltd
idivl
add
out
stc
test
outsl
movb
inc
jmp
dec
mov
mov
icebp
jb
or
decl
mov
mov
inc
dec
jmp
andb
fdivrp
cmp
sahf
add
push
call
je
dec
pop
and
xchg
testl
add
mov
inc
inc
sbb
or
jecxz
dec
jo
sbb
sbb
push
xchg
sub
mov
mov
repz
clc
call
aad
mov
call
inc
xchg
sbb
orb
ret
push
xor
or
out
ret
and
aad
hlt
xor
cld
mov
mov
pop
mov
push
cmp
cmpsb
xor
mov
or
mov
ss
push
popa
hlt
lock
dec
cmp
call
nop
inc
push
mov
mov
pop
push
xchg
sbb
pop
sbb
fdivrs
push
jecxz
pop
arpl
mov
pop
add
adc
mov
lcall
add
sbb
jge
jbe
and
cli
xor
out
iret
outsb
lcall
jb
subl
addb
add
xor
xorb
imul
pop
inc
nop
add
xchg
stc
or
mov
jecxz
sahf
adc
push
mov
mov
pop
int3
xor
adc
add
testl
push
pop
cmpb
xchg
lods
repz
push
in
js
and
jl
loope
xor
cmpsl
lea
dec
inc
or
pop
mov
mov
sbb
imulb
jge
jle
jg
cmp
cs
or
or
idivl
loopne
lods
xor
addr16
jmp
jo
lahf
or
dec
push
je
movsb
aad
lock
pop
dec
movsl
push
or
or
xchg
add
push
loope
insl
neg
pop
add
fisubl
dec
mov
add
fcomi
or
sub
enter
add
and
sbb
ds
xor
out
cmp
out
mov
dec
cmp
popa
sub
mov
mov
lock
pop
shlb
push
cmp
pop
push
outsb
xor
or
inc
xor
push
push
imul
iret
cli
add
mov
popl
gs
sub
fiaddl
jmp
dec
cmp
pop
insb
sbb
aaa
sarl
ret
pop
jmp
or
stos
mov
add
mov
insb
and
lea
test
mov
add
mov
test
mov
test
cmp
dec
test
or
add
pop
stos
pop
cmp
or
mov
adc
call
pop
add
mov
sbb
lock
jecxz
or
pushf
sbb
jge
jnp
and
pop
js
lea
mov
loopne
addb
add
inc
sub
inc
push
fdivs
sbb
std
adc
mov
xchg
push
inc
das
bound
in
mov
add
pop
fs
fs
scas
or
mov
mov
loop
push
push
jg
les
hlt
jne
or
fstl
aaa
test
xor
cmp
clc
add
jbe
lea
mov
ret
cmp
je
inc
add
cmp
adc
ret
push
sbb
jae
mov
cmp
pop
pop
js
jle
adc
cwtl
jecxz
add
xor
jg
ja
mov
jg
mov
jg
cmp
jbe
aas
mov
cmp
ror
hlt
jmp
dec
insl
pop
fdivrl
jae
lea
adc
pop
sbbb
adc
push
out
mov
outsb
add
jecxz
cs
pusha
shlb
mov
sbb
pop
push
push
dec
push
faddl
push
and
or
stc
xchg
or
push
clc
loop
dec
enter
and
je
nop
fs
loop
push
nop
aam
mov
aaa
ret
mov
pop
sbb
fcoml
movsw
or
sbb
fs
aaa
pop
iret
jne
data16
push
mov
mov
in
test
sbb
scas
sbbl
push
cmp
std
jo
loopne
push
xchg
popa
lock
pop
cmp
fimull
hlt
bound
sbb
or
ds
pop
fwait
dec
jl
out
push
sub
xchg
push
repz
inc
mov
mov
data16
add
lds
in
mov
fildl
adc
inc
adc
add
in
mov
push
jb
push
xchg
repz
loope
sar
jl
cmpsl
loope
sti
xchg
repz
and
jns
enter
jmp
sub
adc
pop
xchg
jmp
and
dec
jle
sbb
inc
or
or
jle
mov
pop
inc
scas
mov
xchg
dec
ret
sub
fs
mov
or
add
lock
or
inc
daa
sbb
adc
and
mov
sbb
xchg
pop
inc
add
sbb
cmc
adc
inc
test
ret
popf
push
inc
sbb
mov
negl
push
push
sub
negl
lret
or
insl
push
sbb
testb
shlb
inc
fimuls
mov
push
and
add
cmp
jle
dec
movsl
int
insb
cmp
shrb
pop
pop
xchg
addl
xor
pop
mov
test
je
lret
out
lcall
mov
test
je
cmp
je
or
je
pop
movsb
lret
ljmp
xor
cmp
sete
incl
jmp
lea
mov
mov
outsb
mov
adc
mov
es
push
dec
inc
inc
jmp
cmpb
and
in
sub
lock
adc
add
std
cmpb
jne
cmp
and
sub
and
jno
xchg
ret
pop
or
jge
pop
cmpb
mov
and
push
inc
inc
or
mov
mov
cmp
imul
dec
inc
test
mov
sub
inc
add
cmp
jge
cmp
je
sbb
jmp
mov
mov
mov
cmp
jl
cmp
and
pop
jmp
clc
mov
and
add
mov
enter
stc
cmp
or
cld
popa
pop
adcb
push
pop
add
adc
push
push
mov
xor
cmp
je
mov
pop
mov
insb
jne
mov
mov
aas
jmp
mov
dec
testl
jmp
mov
cmp
jne
mov
cmp
xlat
push
rcrb
je
sbb
dec
cmp
or
fnstenv
mov
inc
inc
fdivrs
push
jne
popa
cmp
push
lods
pop
adc
shll
jmp
xor
adc
test
inc
jmp
mov
lods
icebp
les
jne
testl
or
pushf
mov
add
push
cld
je
mov
pop
ss
movb
fmull
and
in
fsubrl
sub
jle
inc
sahf
adc
pop
popf
mov
add
jecxz
pop
pop
subb
fsubl
and
rorl
push
add
rcll
stos
fadd
pop
dec
imul
sub
mov
adc
icebp
frstor
and
outsb
addl
outsb
popf
enter
inc
ret
jns
xor
xchg
adc
xor
sbb
or
adcl
test
fiadds
enter
push
lcall
scas
cmp
in
xchg
sbb
test
cmp
push
mov
sbb
leave
inc
adc
bound
or
jb
cmp
cmp
cmp
loop
jae
and
pusha
mov
cs
cmp
jbe
repz
pop
sbb
mov
push
fimull
in
pop
das
pop
sub
mov
jg
adc
push
cmpsl
test
add
mov
xor
repnz
in
enter
int3
decb
dec
lea
test
add
flds
or
xchg
sub
mov
negl
jnp
jmp
add
clc
cmp
mov
out
call
fwait
xchg
push
inc
dec
test
xchg
clc
add
in
push
add
pop
psadbw
mov
pop
pop
loopnew
push
ret
add
or
pop
xor
dec
adcl
cmp
or
inc
xchg
jb
or
jge
orb
lock
jmp
jge
mov
into
push
jnp
sbbl
mov
loopne
mov
cmp
insl
or
aad
mov
arpl
mov
pop
imul
ret
popa
in
jb
dec
dec
lock
std
xchg
inc
and
adc
lock
sti
mov
adc
in
sbb
adc
adc
push
add
inc
jne
mov
push
push
push
into
movl
cld
mov
mov
ljmp
daa
cld
repnz
cmp
push
push
stc
in
add
lcall
leave
push
sub
pop
mov
enter
orb
fs
loopne
push
daa
mov
pusha
cmpl
lods
negb
jne
mov
sub
jno
jmp
and
je
lock
daa
xchg
jno
dec
sbb
shlb
xchg
push
add
pusha
outsb
divb
insb
inc
lock
sbb
jns
cwtl
loope
xchg
adc
add
inc
push
push
or
movb
xor
or
repz
push
mov
je
and
arpl
movb
push
jecxz
lea
sbb
imul
imul
jne
adc
outsl
lcall
xor
inc
movb
and
sub
gs
cmp
fidivs
pop
outsl
movsbl
mov
inc
jmp
pop
aas
sti
dec
push
inc
mov
nop
cmp
xchg
mov
je
jmp
out
add
imulb
and
std
xor
add
int
pop
xor
pop
movsl
and
add
jg
sbb
sbb
add
jmp
jne
es
popf
cmp
outsb
call
fimull
xor
adc
push
mov
cmc
fsubl
mov
and
dec
shlb
rorl
scas
adc
shrb
mov
jmp
mov
dec
dec
lea
push
xor
stos
lock
xor
pop
inc
pop
dec
out
mov
push
lock
cmp
mov
inc
push
and
pop
popf
pop
aam
pusha
sub
dec
outsb
mov
int3
dec
pop
dec
xchg
push
popa
push
inc
cs
test
xor
dec
jne
push
pop
or
add
dec
and
pop
push
jb
mov
fldt
or
add
jmp
push
mov
or
xchg
mov
mov
dec
mov
shr
mov
add
push
mov
adc
test
dec
mov
in
in
pop
cmp
imul
outsl
gs
cwtl
cmc
push
jne
jne
push
sbb
and
imul
sub
xchg
or
add
sub
and
fildl
enter
cmp
pop
addr16
or
xchg
popf
mov
xor
aad
push
les
or
mov
and
sbb
add
or
cmpb
pop
icebp
mov
hlt
inc
push
sub
pop
sbb
inc
and
mov
andb
sbb
push
lock
sti
orl
or
popf
cmp
int3
daa
adc
inc
push
jmp
sbb
out
push
stos
popf
mov
mov
ret
in
aaa
mov
mov
or
ja
mov
loopne
lock
jbe
push
adc
xor
lcall
jmp
and
cmpsl
adc
jns
icebp
popa
jo
xchg
inc
inc
sub
call
push
jo
push
add
xchg
sub
push
xor
test
push
xor
mov
rcll
fiaddl
push
lcall
push
push
pop
pop
jbe
push
sahf
push
add
and
and
add
and
and
nop
testb
or
push
and
jl
and
cld
and
xchg
adc
inc
xor
xor
or
out
shrl
je
pop
and
jb
shl
out
pop
ret
fwait
cmpsl
mov
push
mov
push
sbb
es
xor
push
loope
inc
cmp
jo
push
lret
jecxz,pt
test
pop
jp
lods
pop
and
xor
add
sbb
sbb
cmpsb
adcb
jno
add
es
adc
iret
lods
xor
rdpmc
xor
push
or
pusha
and
ret
adc
adc
cmp
and
or
ficoml
orb
into
shlb
sti
xchg
fdivrs
out
cmp
ret
jbe
inc
push
neg
xor
xor
push
es
pop
xor
adc
pop
cmp
rorb
jge
jne
bound
decb
outsb
cmp
xlat
les
or
push
inc
jnp
imul
push
pusha
cmp
enter
sub
xchg
imul
pop
and
cmpsl
rcrl
je
jmp
lods
and
dec
jae
mov
test
data16
sub
mov
and
and
popa
sbb
push
imul
mov
aam
push
cmp
sbb
xchg
xchg
add
cmp
lods
rorl
pop
xchg
and
adc
mov
push
mov
ret
cmp
add
or
pop
roll
or
adc
andb
fdivl
scas
cmp
dec
incl
cli
stc
es
push
mov
lds
lea
push
push
sub
inc
mov
and
ss
fsubr
ret
mov
arpl
in
movsl
push
int
in
push
cmp
shl
daa
hlt
or
lock
mov
xor
mov
cld
outsl
push
lret
div
cmp
ja
inc
dec
sbb
movb
arpl
push
aam
mov
in
pushf
mov
inc
call
jmp
fidivl
or
jecxz
adc
push
or
xchg
in
pusha
adcb
jmp
fldl
xchg
pop
push
mov
push
push
mov
pop
or
stc
mov
mov
mov
adc
mulb
inc
unpckhps
dec
or
outsl
mov
inc
push
push
sbbb
ss
pinsrw
mov
cltd
in
xor
gs
or
sub
xchg
xchg
sub
lds
ret
dec
dec
aad
sbb
popa
mov
je
push
sub
push
divl
shr
push
add
in
jbe
mov
cmpsb
dec
push
lds
add
hlt
and
iret
dec
loop
mov
testl
xor
push
mov
sbb
sub
mov
or
repz
inc
mov
mov
loopne
dec
cmp
clc
jmp
iret
rcrb
xor
lods
sub
and
sahf
imull
sbb
mov
loopne
and
lret
add
in
js
in
add
mov
sub
or
lcall
mov
pushaw
pop
jl
mov
loopne
cmp
insb
jl
fxch
in
test
inc
xor
leave
enter
xor
and
ror
adc
sbb
pop
lock
jl
test
in
inc
dec
rcr
lods
cld
lods
and
lods
in
in
in
loopne
repnz
loopne
repnz
rcrb
or
enter
int3
repz
sahf
in
out
mov
push
sbb
adc
int3
xor
mov
jmp
push
lock
jnp
jecxz
repnz
mov
out
pushf
sbb
cmp
mov
jo
cmp
push
pop
and
mov
lods
cmp
and
loopne
inc
lods
out
nop
add
mov
jbe
rcl
and
or
sbb
xchg
lods
mov
mov
out
clc
icebp
call
lods
and
and
enter
and
and
movsb
mov
daa
je
lods
frstor
push
outsb
jb
sub
lods
mov
leave
inc
mov
add
and
repnz
xchg
sbbl
sbbl
int3
dec
cmp
inc
dec
data16
and
insb
adc
ds
inc
dec
add
lock
inc
call
adc
sbb
sbb
cmovno
fdivp
sub
xor
sub
jo
add
scas
mov
cld
shl
add
mov
test
lods
daa
mov
xchg
cwtl
int3
mov
pop
jl
inc
dec
sbb
insb
fsubl
mov
dec
inc
dec
inc
mov
sbb
inc
fsubrs
jg
mov
xchg
and
subl
sub
daa
out
leave
in
add
insb
cld
out
dec
js
inc
inc
dec
sbb
movsl
ss
fsub
fs
pop
rcrb
adc
pushf
int3
push
pusha
push
dec
dec
mov
mov
aam
xchg
dec
inc
dec
inc
inc
test
in
nop
xlat
shufps
lods
xor
cld
jae
out
into
pop
lock
lods
enter
in
fadd
xchg
fxch
enter
ja
lea
test
pushf
xor
sbb
push
and
je
movaps
lods
lret
repz
movsl
insb
js
jl
mov
push
add
inc
lods
cmp
inc
adc
pop
xchg
sbbl
lods
dec
push
enter
in
scas
mov
pushf
jg
out
adc
popf
int3
jo
inc
out
sub
cmp
in
out
inc
xor
mov
add
cmp
mov
dec
mov
inc
mov
jb
jge
mov
inc
ljmp
hlt
xor
add
and
lret
outsb
dec
cmpsb
or
and
call
add
push
jl
xor
jmp
sbb
rcll
xor
sub
or
rorl
out
adcb
dec
sarl
enter
sbb
and
ror
enter
mov
fcomi
in
jo
sbb
pushf
mov
sub
mov
insb
sbb
cmovge
pop
mov
mov
pop
sahf
imull
sbb
pushf
adc
jmp
enter
and
or
scas
test
sub
mov
adc
jo
negb
xchg
and
xchg
inc
inc
sbb
push
pop
nop
or
cmp
movsb
push
inc
inc
cs
mov
mov
and
leave
sbb
enter
fcoms
js
enter
test
and
in
shr
in
jb
addr16
test
pushf
xchg
cmp
test
xor
jl
nop
data16
adc
popa
fs
mov
and
pusha
lock
push
mov
inc
scas
dec
fs
dec
push
mov
lock
mov
mov
cmp
xchg
cmp
movsb
addr16
or
cwtl
mov
mov
hlt
mov
je
push
int
inc
jg
fisubrs
add
push
mov
push
push
xor
fstpl
mov
in
aam
push
flds
inc
shlb
mov
leave
push
out
dec
sbb
push
addr16
jo
push
mov
push
pop
jae
loop
xor
int
pop
imul
mov
test
sti
dec
movb
jae
leave
mov
incl
adc
cmp
je
or
xor
inc
cmp
jl
scas
fcmovnu
inc
adc
xor
cmpb
rcr
xor
jmp
cmp
pusha
jge
mov
inc
add
inc
cmp
jl
cmpl
je
sub
or
add
sbb
cmp
pop
dec
add
div
stos
lea
decl
js
jl
push
mov
cmp
mov
jo
fs
inc
cmp
sbb
jle
pop
inc
dec
cmp
negl
popa
pop
jl
cmp
lock
jg
mov
call
movsb
leave
dec
repnz
and
push
flds
aas
pop
movsl
mov
std
lcall
fistpll
sub
idivb
xchg
xor
jno
popf
cld
ret
or
xor
je
xchg
aas
sti
xchg
cmpl
mov
mov
into
jecxz
clc
packsswb
mov
add
pop
jge
or
jb
cltd
rclb
outsl
mov
divl
push
shll
dec
jmp
jne
ret
mov
jecxz
jb
arpl
pop
in
push
push
cmc
fimuls
push
inc
loopne
jae
jno
or
jns
data16
push
lret
sub
and
add
movsb
je
daa
clc
mov
stc
clc
bound
mov
ret
add
mov
fs
push
jne
mov
imul
mov
aam
pop
xchg
rol
addr16
add
out
clc
adc
lahf
mov
jmp
in
cmp
movl
std
enter
add
cmp
notrack
cmpl
aaa
xor
ja
sbb
ds
sub
adc
mov
xchg
pop
inc
icebp
add
in
insb
inc
xchg
call
xor
pop
inc
std
ret
sbb
aas
add
add
cs
add
xorl
sub
and
xchg
or
ficoml
sti
cli
daa
xchg
call
testb
fadds
push
orb
dec
push
cmp
jne
dec
xor
sbb
push
aam
pop
pop
pop
inc
lds
add
jmp
xchg
div
fimull
mov
sti
inc
inc
dec
jne
pop
jmp
add
sbb
movzbl
jecxz
mov
out
and
add
lcall
or
adc
pushf
test
lds
sbb
lea
xlat
sbb
clc
mov
xchg
popl
push
mov
adc
repnz
or
lock
push
xchg
jno
aas
pop
mov
add
lods
mov
jmp
xor
or
leave
shrb
push
cmpsb
push
popa
mov
fwait
test
cmpsb
lock
pop
xor
cmpsl
pusha
pop
fnstenv
aaa
pop
mov
mov
jp,pt
lea
add
jecxz
in
adc
lock
push
cwtl
dec
jne
push
leave
xchg
jl
push
add
inc
jle
pop
push
mov
xor
jg
ss
sub
sbb
xchg
jecxz
jae
inc
or
test
or
fsubrl
xor
repz
jno
out
add
pop
test
lret
jne
fidivrl
in
je
sbb
add
jp
pop
clc
std
jno
cwtl
sbb
inc
push
xchg
push
mov
rorb
sub
nop
push
push
xor
and
lea
cmp
je
sarb
lahf
dec
push
and
inc
pop
dec
fnstenv
scas
pop
mov
lods
jmp
ret
lods
pop
sbb
dec
push
imul
js
inc
ret
clc
dec
jb
xchg
into
fisubs
or
add
pushf
aad
enter
xchg
jns
ss
mov
decl
pop
add
sbb
rorb
repz
inc
pushl
lret
cmp
enter
sub
cmpl
std
insb
mov
pushl
out
rolb
aam
in
popa
and
popa
lods
std
and
notl
or
xchg
test
mov
adcl
popf
ds
movsb
ja
and
adc
lea
movb
pop
push
adc
or
push
popf
andb
clc
mov
add
fsub
fwait
sbbl
imul
dec
fidivl
and
dec
orl
push
jl
push
sub
adc
dec
or
loop,pt
jne
cmp
aad
nop
or
xor
and
add
es
inc
push
or
mov
push
cmp
pop
cmp
je
pop
add
xlat
insb
mov
lock
addr16
cmp
loopne
lea
pop
push
data16
rorb
mov
arpl
jno
add
add
lock
mov
pop
xchg
push
sbb
mov
xor
add
pushl
int
mov
pop
addl
xor
adc
lret
out
push
cmpl
mov
dec
orb
pusha
xor
dec
push
xor
cmpsl
mov
push
push
addr16
inc
cmp
push
mov
pop
jne
sbb
mov
fs
pop
or
scas
sbb
popa
mov
inc
cmp
jl
andb
inc
add
cmc
pop
test
popf
nop
mov
add
mov
mov
shl
movsbl
pop
sub
jmp
add
stc
pop
jl
push
pop
pop
jnp
and
orps
or
mov
stos
orl
pop
es
out
inc
xor
fadd
mov
lcall
push
test
push
test
out
jb
pop
add
cmpl
cmp
inc
adc
push
adc
sti
fs
xchg
mov
jne
mov
insl
jmp
dec
or
mov
outsl
in
fcomi
jne
mov
jne
lahf
push
test
cmpsl
mov
movsb
adc
cmpl
mov
pushf
repnz
adcb
sbb
or
popl
add
dec
loopne
sbb
jbe
mov
pop
add
sbb
and
rcll
push
lods
pushf
pusha
push
pusha
sbb
push
add
push
cld
sbb
add
push
gs
xchg
mov
adc
push
mov
adcl
and
cmp
orl
sbb
push
inc
or
mov
pop
jge
fs
mov
dec
sbb
push
or
jecxz
test
int
cmp
call
sbb
mov
and
sub
je
mov
loope
cmp
cmc
pop
ret
fmuls
xchg
jno
mov
mov
mov
or
cld
filds
clc
dec
test
loop
lret
call
out
xchg
mov
sti
push
jne
mov
push
dec
dec
nop
xchg
es
sub
fdivr
cmpsb
push
in
xchg
mov
pop
loop
xor
aam
popf
ret
insb
jae
adc
fdivl
add
or
dec
lahf
aam
loop
mov
push
or
and
add
cwtl
mov
add
into
cmp
or
int3
aam
or
push
inc
push
mov
add
clc
aaa
lret
jl
int
hlt
add
add
mov
adc
das
dec
xor
xor
icebp
dec
imul
mov
adcb
call
push
std
imul
jb
jmp
repnz
sbb
outsb
test
sbb
ret
push
imul
dec
mov
loopne
push
push
test
rcl
xchg
data16
jp
or
stos
test
sub
mov
scas
fstpl
and
cmp
insb
jno
jmp
and
dec
pop
jno
popa
outsl
sbb
xlat
cmpl
call
aas
mov
add
bound
mov
lock
cmp
je
mov
or
rclb
xchg
or
sbb
jge
movl
inc
pop
int3
and
fwait
lock
out
enter
xchg
push
rorl
aam
push
and
push
mov
out
mov
int
push
insl
inc
sub
add
cwtl
ja
jne
or
andl
hlt
mov
adc
pop
dec
adc
idivl
out
repz
hlt
pop
std
add
add
loop
xor
negl
rolb
cmc
mov
adc
jnp
adc
daa
adcl
jno
push
push
pop
std
stos
or
xchg
das
popa
mov
das
orb
aaa
adc
in
xchg
test
cld
into
orb
jo
inc
mov
shrb
adc
addr16
out
sbb
push
nop
cmp
sbb
mov
and
or
mov
xlat
imul
or
and
adc
sbb
sbb
insl
fmuls
test
mov
or
jae
sbb
xchg
adc
shlb
lods
movsl
sbb
pop
fldenv
mov
cs
adc
inc
dec
push
stc
lock
inc
nop
pusha
xor
mov
sbb
push
adc
stc
mov
push
addb
add
xor
pop
mov
ret
adc
sbb
pop
cmp
loope
sub
cmp
hlt
mul
push
cltd
jl
pop
jmp
jmp
mov
arpl
je
add
das
movsl
lret
xchg
jge
push
jl
xor
ds
test
inc
inc
pusha
and
inc
cmp
pop
pop
mov
ja
cmp
in
xchg
mov
xchg
push
insb
mov
xor
or
insb
lahf
mov
fucomip
ret
pop
sub
in
pop
fidivl
jmp
inc
pop
add
movsl
cmp
repnz
roll
out
push
dec
fnstsw
lea
sbb
idivl
mov
cld
push
push
cli
or
orb
lock
repz
bound
xchg
or
lds
into
push
mov
xchg
mov
add
call
mov
push
push
sar
fmull
pop
xlat
lea
shrb
pop
pop
jo
xor
xchg
sub
add
jne
pop
sub
dec
jecxz
and
aam
out
insb
pusha
add
or
mov
fildl
or
jns,pt
loopne
fwait
sub
or
add
psrlq
xor
push
push
outsl
mov
push
push
jbe
inc
or
sbb
data16
loope
mov
sarl
push
mov
xor
movsb
dec
fwait
dec
test
push
aas
pop
push
and
dec
int3
push
cmp
cmp
mov
lea
test
sahf
arpl
cmpsb
jg
push
sbb
jno
insb
rsm
insl
enter
fsubs
xor
sbb
xadd
add
push
mov
mov
out
push
and
cltd
jo
xor
xchg
das
dec
rclb
jnp
cmp
push
inc
push
pop
repnz
int
es
xor
jne
push
push
addb
sbb
sbb
imul
std
pop
cld
pop
xchg
add
in
pusha
negb
lods
and
imul
inc
xor
sbb
inc
lock
call
in
pop
je
and
and
jbe
adc
in
sbb
xchg
or
fwait
or
insl
rorb
enter
push
mov
lea
pop
pop
lods
int
cltd
sbb
mov
out
pop
and
dec
jle
lea
xchg
add
aam
test
cwtl
fimull
arpl
dec
dec
jo
jge
jg
loop
outsb
adc
lcall
std
je
scas
sub
cmp
jl
in
mov
jb
mov
adc
dec
sar
inc
mov
mov
xor
decl
xor
sbb
xor
xor
cmp
repz
mov
out
lea
dec
sbb
push
popa
or
sbb
jbe
mov
push
ljmp
and
xor
test
add
scas
cmc
insb
dec
mov
decl
repz
std
fcompl
in
mov
pop
xchg
mov
lock
adc
dec
fsubrs
pop
mov
sti
add
jg
sub
cmp
add
maxps
mov
jge
in
jge
test
mov
add
decl
jmp
cmp
clc
push
xor
sbb
xchg
std
add
or
jg
add
adc
mov
fwait
inc
nop
xchg
and
xor
loop
shrl
sbbb
inc
outsl
xor
jno
fldcw
sub
ret
pop
mov
jne
fcomps
lods
inc
js
cmpsl
addr16
xchg
iret
mov
jae
mov
fisubs
xchg
lea
pop
sub
cltd
xchg
push
pop
test
mov
or
dec
push
dec
in
lods
aam
inc
push
pop
loopne
adc
and
iret
xchg
stos
fists
dec
and
lcall
push
fs
sbb
pop
pop
adcb
movsl
inc
sub
mov
out
out
mov
push
jne
cmp
xlat
jns
fmull
pop
cmpsl
bound
outsl
lds
dec
dec
jne
icebp
fildll
outsb
lock
pop
cld
lea
push
lret
push
mov
sub
sahf
das
cmp
fsts
js
mov
inc
and
mov
xor
aas
call
popf
xor
and
xor
out
sar
or
and
mov
or
repz
xor
or
fs
mov
dec
enter
lock
add
adc
lret
cwtl
pop
mov
mov
or
sbb
in
imul
adc
icebp
aas
or
idivb
pop
je
inc
push
lock
rolb
fadds
and
jp
sub
shlb
mov
cmp
popa
xor
cmp
pushl
shl
add
push
jo
call
push
jb
rclb
in
jp
pop
dec
adc
mov
imul
aas
movl
xor
sbbl
int3
repnz
or
fstpt
cmp
sbb
js
addr16
mov
ret
test
push
sbb
fistl
mov
push
mov
inc
out
jle
mov
adc
pop
cmp
cwtl
iret
sub
scas
mov
mov
cmp
fidivrs
push
jmp
jno
or
add
sub
sub
xorb
lahf
push
mov
pop
mov
cld
in
mov
add
add
stos
mov
sti
inc
sbb
pavgb
mov
mov
ficompl
sbb
mov
cmp
jae
push
inc
sbb
lock
push
mov
push
sub
js
jae
clc
cmp
push
rorl
pushf
xor
or
mov
pop
xlat
xor
and
inc
rcr
pop
mov
sbb
ret
idivl
cli
add
loope
sbb
push
add
sbb
pop
aas
leave
mov
rdtsc
neg
sbb
filds
xorl
daa
or
push
mov
push
xchg
ljmp
roll
cmp
pop
ljmp
pop
repnz
test
mov
inc
mov
bound
push
push
push
dec
xchg
shrl
xchg
xor
push
fmul
xor
adc
fwait
in
pop
jecxz
stc
dec
stos
push
inc
cmp
adc
in
inc
rclb
sub
add
pop
clc
jne
xor
in
push
pop
mov
sub
jecxz
push
add
mov
fdivl
adc
pop
call
jle
adc
rclb
push
fsubrp
std
push
imul
hlt
adc
jmp
in
adcl
dec
js
ja
clc
jge
jle
out
rorl
push
dec
add
das
jmp
add
inc
inc
xor
inc
jns
setae
pop
rorb
ds
push
xlat
add
iret
cld
je
mov
sbb
xor
je
lea
hlt
pop
push
loope
fistl
pushl
hlt
mov
ds
xorl
and
mov
mov
pop
sbb
dec
adc
adc
cmp
mov
pop
adc
cmp
and
push
cld
das
addr16
pop
xchg
adc
mov
mov
movl
imul
pop
sbb
insl
mov
or
sahf
clc
aam
mov
lock
push
pop
inc
or
and
imul
inc
jo
cmp
mov
lcall
or
rolb
les
sbb
sti
notb
or
jle
push
cmp
sbb
jo
enter
loop
bndstx
pop
jmp
push
loop
xor
mov
ds
out
data16
jl
mov
adc
push
xchg
xor
lea
mov
mov
inc
adc
test
pop
enter
push
int3
dec
sbb
pop
jmp
xlat
sbb
and
lret
insb
loopne
cs
cmc
pop
roll
in
div
mov
test
cs
sub
mov
repz
adc
test
daa
push
rolb
mov
dec
mov
mov
mov
push
sbb
out
mov
ret
div
pop
adc
add
pop
sub
jecxz
div
pop
mov
stc
cmp
mov
cmp
jb
mov
or
or
adc
stos
lcall
insl
mov
dec
adc
in
iret
mov
insb
and
push
mov
or
sub
inc
xor
or
popa
jnp
and
mov
shrl
nop
xchg
or
and
sbb
pop
repnz
or
cmp
and
mov
sti
jno
sahf
adc
pop
sub
jmp
hlt
cs
ljmp
call
inc
cs
loopne
inc
inc
cs
aam
pop
enter
int3
pop
enter
test
and
jae
xchg
or
mov
sbb
repnz
test
xor
and
and
jg
dec
adc
pop
xor
adcl
pop
test
nop
inc
mov
push
insb
xchg
cs
sti
cwtl
sbb
and
orl
inc
cs
inc
cmp
mov
sbb
adc
jmp
repz
jb
and
adc
adc
adc
das
jbe
push
ror
add
or
mov
cmp
dec
or
sahf
clc
sub
stc
sbb
jns
ds
inc
adc
inc
adc
ret
push
aas
sbb
add
add
ljmp
pop
pop
mov
push
popa
mov
mov
push
jns
test
testl
cltd
mov
mov
cmpsb
xchg
jl
push
xchg
or
inc
fwait
ret
mov
and
mov
xor
lds
push
pop
mov
pop
iret
adc
dec
sub
sub
jmp
orl
sarb
mov
pushf
movsb
xchg
mov
out
clc
fwait
test
sbb
mov
loopne
adc
push
mov
popa
add
cltd
pop
test
nop
cmp
sub
lods
jb
sbb
in
jo
cld
mov
cmp
inc
loopne
arpl
cmp
push
cltd
xchg
ficompl
imul
pop
enter
test
mov
push
std
dec
mov
push
orl
bnd
inc
cld
sub
fs
xchg
sbb
xchg
hlt
inc
inc
cs
out
pop
pop
xchg
inc
ds
test
mov
in
push
in
jns
bound
cmc
loopne
in
sub
ja
in
inc
cs
int3
inc
inc
inc
cs
mov
outsl
mov
cs
mov
adc
in
cmp
inc
pushf
mov
mov
andb
dec
sahf
andl
adc
xor
outsl
adc
jl
js
and
pop
mov
daa
and
pop
xor
push
jae
fs
pop
pop
repnz
push
enter
xchg
adc
jmp
pop
insb
in
ja
inc
sub
enter
or
pop
clc
adc
adcb
insl
cs
nop
sub
movaps
sbb
sbb
inc
inc
cs
adc
or
or
add
bnd
xchg
or
sub
push
clc
sub
and
mov
pop
xor
insb
call
push
loopne
fcoml
xor
add
inc
sahf
or
in
add
loope
int3
sub
sub
inc
inc
es
push
ds
imul
aas
and
shll
mov
call
repnz
sbb
addr16
std
daa
and
or
xor
lods
jne
fcoms
outsb
test
xor
and
popf
orl
add
inc
sbb
aam
or
clc
dec
rorl
out
cld
inc
movl
and
mov
push
or
jno
rclb
adc
jbe
add
sbb
push
loopne
imull
test
daa
in
jne
jmp
or
enter
xchg
jo
or
repnz
mov
mov
addr16
ja
pop
jnp
scas
pop
pusha
sub
adc
add
push
jno
xor
pop
and
push
popa
mov
add
sbb
xchg
mov
mov
mov
pop
inc
mov
push
mov
jo
pop
bound
bound
sub
xor
add
xor
sbb
sbb
adc
std
adc
movsl
xchg
ret
lock
cmp
or
mov
mov
add
pop
cmp
push
lods
ret
jb
sub
in
rcrb
jae
mov
or
xor
or
outsl
fiadds
clc
jae
push
fcompl
add
shll
lea
fdivrl
cmp
mov
adc
orl
adc
mov
adc
je
mov
inc
fcoms
or
cli
pop
push
jnp
pop
jne
jmp
xchg
enter
leave
cmp
mov
push
cmp
or
sub
in
xor
je
cmpb
je
daa
dec
add
js
or
js
repnz
pop
bound
fwait
xchg
iret
repnz
idivl
testb
ss
push
loopne
pop
call
ret
or
pushf
lds
mov
add
fs
mov
dec
lea
lcall
outsl
mov
shl
xor
xchg
rolb
dec
mov
dec
jecxz
pop
mov
jle
cmp
fcmovnu
add
push
cmp
inc
or
sub
ljmp
dec
or
iret
jl
pop
jmp
sbb
lock
fwait
and
in
sbb
addb
dec
je
repz
add
adcl
sbb
arpl
decl
lahf
jne
push
jmp
mov
add
enter
pop
mov
lret
push
ds
or
loopne
or
repnz
inc
hlt
push
push
test
pop
inc
or
sub
sbb
std
and
add
enter
add
rclb
mov
test
inc
ficoms
jge
push
sub
enter
pop
dec
ret
nop
pop
imul
dec
xchg
jne
dec
jo
adc
mov
and
je
popf
and
dec
sbbb
mov
mull
inc
xchg
mov
insl
push
adc
add
ret
push
minps
imulb
push
fnstenv
mov
add
mov
cmp
sub
in
popa
dec
and
enter
mov
and
cmp
ret
adc
sarb
inc
mov
jmp
dec
cs
sbb
lsl
inc
or
shrl
push
jns
shll
xchg
add
jnp
shll
lea
filds
lea
add
fsub
cmp
les
enter
cmp
add
out
adc
adc
adc
in
dec
push
mov
push
jmp
in
sbb
xor
fmul
fildll
das
mov
xchg
sbb
sbb
sbb
adc
shlb
gs
nop
mov
js
addl
adc
test
push
scas
add
loope
les
mov
xor
push
add
repz
mov
dec
inc
sub
or
rcll
or
rcll
decb
pop
jmp
add
push
xchg
cmp
pop
insb
xchg
lcall
push
add
or
movsl
nop
std
loop
pop
pusha
xor
jmp
xchg
xor
movb
dec
pop
insb
mov
mov
popf
rcll
nop
loope
cmp
jne
nop
or
nop
fs
adc
fsubrl
push
xorl
loope
or
daa
out
adc
dec
and
mov
pushl
adc
in
scas
cwtl
sub
fwait
inc
sub
dec
enter
sbb
sbb
sub
es
push
dec
dec
sub
es
and
jo
stos
add
adc
and
push
nop
sub
xlat
adc
int
fistl
xor
mov
lock
shlb
cmp
into
test
adc
jmp
xor
pop
mov
sbb
cmp
repnz
push
aad
push
jo
and
adc
adc
mov
push
stos
insl
in
in
push
nop
pop
aad
sbb
in
shrb
push
js
xchg
pushf
pop
sub
sub
xor
and
dec
pop
push
xor
mov
dec
dec
dec
jb
add
add
jns
cmp
add
mov
mov
and
loopne
mov
in
or
ret
cmp
pushf
or
gs
rcl
jae
xor
push
outsb
push
arpl
jbe
shl
adc
sub
sub
add
mov
bnd
add
enter
mov
mov
cmp
movsl
pusha
rolb
test
adcb
and
popl
dec
sahf
sbb
mov
and
or
jge
jg
inc
mov
jmp
dec
xor
aad
xorl
das
ret
sbb
push
unpckhps
jle
movsl
lock
sbbb
sbb
push
jno
add
pop
daa
inc
push
sbb
subl
or
daa
fimuls
dec
ret
sbb
jmp
jne
mov
lret
add
inc
mov
cltd
or
test
mov
and
sbb
lods
inc
push
test
xor
sbb
lods
add
pop
mov
aas
fwait
jne
sub
and
popf
iret
ret
mov
inc
sub
adcl
cwtl
inc
sbb
orl
cmp
cltd
rol
in
popa
lods
daa
and
inc
adc
and
xorl
mov
cmp
sub
fldl
test
xor
mov
inc
daa
movsl
test
xor
das
test
aaa
cwtl
mov
pop
jb
push
nop
push
fwait
int
call
rol
inc
into
mov
mov
popf
or
adc
sbb
adc
cmp
xchg
insl
and
push
test
xchg
and
es
pushf
rclb
pop
sbb
adc
mov
push
push
pop
pushf
loop
shrl
fs
es
mov
jmp
shll
movsl
test
dec
xor
adc
and
out
cmp
jp
jo
jb
mov
cltd
xor
int
daa
lret
jg
fmull
mov
or
aad
push
das
mov
ja
fwait
arpl
push
sbbl
iret
sbb
bswap
inc
ds
or
jl
mov
sbb
xchg
out
add
daa
ja
pop
jae
xor
sbb
sbb
stc
gs
mov
add
xchg
addr16
iret
aam
bound
pop
pusha
and
loope
popf
sub
sbb
es
popa
js
lock
pop
out
lea
lcall
outsb
add
xchg
decb
add
push
insb
jmp
cld
dec
sbb
jmp
push
xchg
lret
xorb
xchg
cld
cmp
je
and
mov
aam
push
je
inc
push
jns
adc
cs
mov
push
jb
sub
decl
xchg
xor
push
popa
mov
and
mov
outsb
in
shll
je
push
into
test
or
sub
popl
mov
or
movsb
and
and
aam
pop
and
add
xorb
mov
fmuls
push
pop
pusha
adc
jmp
mov
pop
add
jne
and
test
jns
popf
sbb
jae
push
sbb
xor
sub
xor
dec
mov
and
pop
sbb
xchg
dec
fwait
imul
popf
cmpsb
jle
or
push
fadd
icebp
push
lds
push
sub
push
add
cs
and
testb
add
dec
sub
jae
inc
pusha
lods
out
notb
leave
js
and
fisubs
arpl
dec
test
and
fwait
sub
and
mov
cmpsl
sub
or
add
pop
repz
push
fwait
cld
mov
sbb
cmp
lock
xor
jp
mov
dec
pop
add
in
testb
enter
or
in
testb
xor
xchg
xchg
xor
test
inc
inc
nop
adc
lds
movb
push
sbb
jl
pop
jns
pop
push
test
std
dec
xor
pop
mov
lcall
push
lds
shlb
pop
and
add
xchg
ret
insl
or
mov
std
stos
fcoms
sub
pop
shll
push
call
push
and
xor
push
cmp
or
lea
movb
sub
gs
in
pmuludq
lahf
add
sub
insb
xchg
and
mov
pop
adc
push
or
mov
leave
ret
test
push
cltd
add
stos
dec
mov
sbb
sarb
pop
dec
mov
cmovae
xor
les
enter
cmp
ja
icebp
dec
push
loope
fs
ficomps
clc
hlt
dec
push
xchg
xchg
cs
pop
push
xlat
xor
cmp
pop
andb
pop
imul
and
sub
popf
push
push
pop
fcomi
add
push
sub
and
adc
sbb
inc
push
test
and
push
adcl
popf
enter
jge
addr16
shlb
inc
aas
je
push
push
test
fsubrs
dec
leave
inc
push
xchg
or
mov
repz
pusha
mov
addr16
fiaddl
test
sarb
mov
xor
cld
scas
add
jno
notb
add
je
push
adc
jmp
push
add
in
jmp
lock
ss
jmp
movsl
popa
outsl
jl
push
dec
fmulp
out
dec
and
cmp
ret
jnp
out
push
bound
mov
push
xchg
and
xor
movsb
fcmovnu
jg
xchg
rclb
xchg
or
iret
shlb
hlt
adc
jbe
into
dec
xor
xchg
cmp
dec
mov
mov
and
sbbl
jecxz
add
cmp
dec
and
test
clc
cmpsl
cmp
cmpl
sahf
out
inc
pop
jne
lods
xor
imul
repnz
sub
aam
and
rcll
out
daa
divl
and
cwtl
fadd
jg
lock
les
xor
clc
ss
jns
sahf
cltd
xor
loope
dec
mov
cltd
mov
idiv
lea
sub
loopne
test
pop
jno
ret
idiv
xchg
lret
sub
or
out
inc
jecxz
call
call
sub
inc
cmp
xor
das
push
push
mov
cmp
push
mov
xor
xchg
fcoml
sbb
daa
sub
push
sbb
push
xchg
push
cwtl
out
fcoml
or
cmp
mov
jb
cmp
ja
xor
pop
jnp
fs
cmp
adc
lock
jb
subl
push
sbb
ja
and
jns
imul
out
cs
push
sbb
jae
xor
inc
loopne
sub
fwait
rdtsc
jae
js
out
sbb
xor
push
inc
fistpll
adc
push
ljmp
cmp
mov
loopne
xor
dec
cli
outsl
adc
add
adc
xor
or
ds
nop
fs
xor
in
jecxz
mov
adc
push
or
cmp
sti
xchg
mov
mov
sti
mov
movsb
int
push
repz
mov
inc
push
iret
push
add
ficoml
nop
xchg
xor
adc
adc
adc
or
xor
lock
xchg
sub
dec
jno
or
pop
in
xor
mulb
push
jns
in
and
inc
lods
lods
in
xchg
in
adc
add
lods
fists
clc
push
imul
call
lock
nop
pop
ss
push
xorb
jo
xchg
xadd
xor
xor
adc
es
shr
xchg
test
pop
cmp
sbb
lahf
mov
push
js
cmp
jb
ds
clc
jmp
cli
jae
cmpl
pop
jne
add
int
adc
mov
jb
movsb
jl
push
aam
and
sub
sub
jbe
xor
sbb
cmp
lahf
mov
je
insb
pop
aam
push
or
cwtl
fmulp
cmp
sub
clc
nop
dec
push
lds
mov
sub
movsl
push
testl
and
addr16
adc
cmp
stc
insb
ss
xor
iret
push
ss
loopne
enter
loopne
mov
xor
push
and
daa
adc
jb
test
sbb
sub
xor
nop
sub
dec
jle
xor
data16
sbb
rcll
mov
add
addr16
adc
mov
lock
or
mov
aas
mov
jg
loopne
dec
mov
mov
sub
movsbl
jge
xchg
mov
push
insl
or
and
test
loopne
sbb
push
add
sbb
xchg
inc
inc
jo
fstps
cltd
pop
xchg
mov
shrl
inc
nop
adc
inc
mov
xchg
mov
out
ret
mov
or
dec
mov
add
mov
imul
or
icebp
addl
mulb
movl
dec
inc
loopne
and
mov
mov
call
scas
lcall
jmp
lods
add
xor
cmp
dec
dec
or
rclb
add
or
divb
stc
mov
sarl
dec
or
xchg
push
pop
mov
push
lods
invd
cltd
inc
jl
mov
mov
incb
jne
lds
adc
test
cld
in
loopne
fldcw
inc
push
xor
jne
mov
inc
jns
test
lds
imul
leave
jo
jne
mov
xor
shlb
or
cmp
inc
shrb
repz
pusha
arpl
inc
loope
xorb
push
popa
cmp
adc
add
jbe
or
int
je
nop
or
push
cmp
cmp
mov
push
and
push
sbb
xchg
jbe
or
stos
mov
dec
adc
sub
push
xchg
aaa
andb
stos
aam
arpl
lods
sub
sub
lods
push
icebp
and
pop
negb
sbb
adc
insb
push
call
add
and
in
out
mov
je
cmpl
jns
xchg
popa
push
inc
leave
xor
movsb
or
push
cmpxchg8b
or
mov
sbb
add
dec
adc
mov
xor
inc
or
cmpsb
sahf
loope
or
mov
xchg
fiadds
fsubrs
jl
adc
rdmsr
enter
enter
js
push
xchg
and
dec
popa
test
cmp
aad
push
pushf
fsubrl
adc
mov
dec
mov
adc
inc
popa
shll
pop
jae
inc
or
xor
jl
inc
les
int3
mov
jb
sub
cmp
jbe
sub
fistpl
cmp
push
aam
das
ds
pop
push
cli
add
push
jno
js
mov
and
addl
daa
or
mov
sahf
xor
dec
inc
popa
jg
mov
jecxz
add
dec
sub
out
xor
cmp
call
and
xor
push
sub
out
sub
push
loopne
inc
dec
daa
in
jecxz
adc
jne
ja
adc
cmp
sbb
sti
mov
and
sub
or
inc
sbb
inc
fimull
and
pusha
sub
movb
test
adcl
xorb
icebp
and
nop
inc
fsubs
xchg
adc
mov
adc
sbb
adc
stc
add
or
add
xchg
stc
push
push
pushf
cmp
js
jo
mov
push
in
ret
and
insl
pusha
sti
je
push
gs
pop
ja
add
pop
sub
outsb
jnp
xorl
or
dec
incb
es
sbb
cltd
sbb
pop
add
mov
addl
add
mov
add
lret
pusha
in
stc
jo
add
mul
push
ja
mov
std
mov
and
or
adc
and
inc
test
sbb
or
fistl
push
add
inc
jns
std
stos
push
lcall
cmp
pop
add
push
push
add
int3
or
mov
or
xchg
xor
add
or
push
add
rorb
js
push
sbb
dec
and
sub
mov
jne
das
pop
mov
inc
loopne
sub
loop
jge
pop
out
mov
call
ljmp
outsb
dec
into
sub
cmp
push
pop
flds
fidivl
rclb
add
jae
aam
adc
jo
cmp
pop
add
push
xor
adc
xor
dec
jmp
sbb
push
mov
or
repz
adc
clc
push
ss
xor
hlt
cmp
cmpsl
pop
inc
cmp
sub
adc
xchg
xchg
pop
jg
jnp
mov
push
mov
fnstenv
fsts
push
and
fisubrs
push
sbb
je
mov
xchg
mov
xor
adcl
jo
and
out
and
lods
loope
add
daa
add
lea
jg
jl
ds
jae
pop
lret
ret
cmp
sahf
loopne
loop
lods
dec
xchg
iret
pushf
fisubrl
cmp
rcrb
ret
add
pusha
sbb
popa
inc
or
sub
cmp
and
lds
dec
pop
adc
mov
test
rorb
inc
cmpsl
xchg
add
ljmp
testl
sub
hlt
ffreep
inc
fdivr
syscall
inc
inc
cmp
cmp
cld
out
jmp
push
mov
push
push
sarb
push
add
inc
and
xchg
je
cmpsb
add
adc
add
das
mov
cmpsb
adc
pop
fs
imul
jp
pop
inc
xchg
addb
jmp
int
inc
or
movsl
lea
push
and
jg
add
and
call
iret
jle
gs
cmpl
jno
jo
out
pop
mov
add
xchg
sbbb
jo
das
cmp
sub
out
push
mov
jg
sbb
insl
loope
jp
jge
popa
push
loop
mov
push
pushl
fcoml
je
cmp
je
movl
pop
ds
mov
js
mov
jbe
test
imul
jg
mov
or
in
aad
mov
pop
xchg
xchg
adcb
hlt
loope
orb
add
loopne
add
shrl
mov
roll
mov
lahf
or
ds
jne
push
xchg
cs
xor
in
stos
sti
push
push
push
mov
out
call
cmp
jne
inc
add
dec
jmp
aad
and
or
sbb
sub
rcrb
rclb
test
fld
or
sub
adc
xor
inc
adc
sub
xor
leave
sbb
mov
clc
mov
mov
add
loop
in
push
add
xor
imul
incl
add
cld
addr16
and
imull
xor
arpl
mov
xchg
cwtl
dec
loopne
sti
push
cmp
sbb
jecxz
push
in
sarl
jne
push
mov
pop
faddl
lods
in
dec
das
jp
jne
or
mov
aad
or
mov
cmc
mov
mov
aam
fsub
or
fsub
outsb
in
addr16
xor
in
in
sti
xchg
jo
jns
push
push
pop
adc
push
jmp
dec
bound
or
xorb
xchg
mov
push
xchg
sbb
les
cld
je
and
sub
mov
xor
stos
jmp
sbb
data16
push
cli
and
or
mov
jle
mov
bound
add
notl
mov
test
jg,pt
push
xchg
sbb
xor
out
mov
xor
sbb
jecxz
pop
in
stos
inc
js
inc
dec
lds
mov
nop
aaa
mov
mov
ja
pop
shll
pop
es
dec
push
stos
adc
dec
insb
adc
shrl
inc
mov
inc
and
js
dec
dec
sti
int3
jnp
daa
and
push
or
pop
sbb
mov
test
fists
xchg
push
mov
out
cld
xor
repnz
or
mov
xor
or
data16
jmp
push
in
sbb
inc
xchg
iret
xor
lret
or
out
lret
into
xor
shl
nop
sbbl
sub
cltd
mov
sbb
pop
jmp
je
xor
sub
sub
and
stos
add
popa
stos
or
jmp
movsl
cltd
cmp
rcrb
out
popf
mov
adc
sbb
inc
fucomp
popa
xor
cwtl
pop
in
sbbl
insb
sbb
movl
loope
mov
pop
xor
aaa
xor
sub
and
ja
and
sub
lods
pop
stos
dec
or
xor
sub
push
fwait
cwtl
repnz
push
xchg
inc
mov
mov
lods
sbb
sub
add
dec
into
loopne
sub
icebp
mov
push
push
xchg
cmp
lods
aas
cmp
out
addl
mov
xor
and
stc
andl
test
jo
and
ret
nop
mov
scas
ret
fcmovnb
mov
and
adc
push
in
push
jb
xor
inc
push
rcrb
jbe
inc
mov
les
out
repnz
fldl
div
push
imul
pop
incl
pop
popf
add
cld
dec
jno
nop
imul
fcomip
lock
lods
inc
scas
lock
and
aam
rolb
pop
xor
int3
enter
xor
dec
push
test
fwait
push
jmp
or
or
movl
in
inc
les
inc
pop
cmp
jne
mov
mov
pop
clc
jle
rolb
test
incl
add
cld
dec
pop
test
je
and
es
sbb
iret
dec
jmp
sub
std
mov
add
jge
test
cltd
or
jmp
mov
inc
or
popl
xor
and
jmp
daa
sbb
je
inc
fisttpll
fwait
cmp
add
cvtdq2ps
pop
ret
daa
andb
scas
push
adc
adc
aas
xchg
inc
jo
push
inc
mov
add
fiadds
rolb
inc
adc
inc
fstpt
mov
xchg
xor
sbb
xor
test
loopne
movsl
mov
mov
add
imul
repz
js
imul
sbb
jne
mov
inc
rorb
minps
mov
sbb
mov
lahf
std
sar
icebp
add
sub
clc
adc
repz
pop
cltd
sub
cmp
cmp
mov
adc
cmp
call
lcall
adc
or
mov
dec
sar
jne
test
sbb
stc
adc
jge
mov
sbb
add
pop
mov
incl
jne
mov
mov
add
or
out
repnz
add
loop
clc
or
leave
je
mov
pop
int3
lcall
bound
jp
jmp
pushl
jo
dec
inc
or
and
pop
add
ds
lret
push
pop
push
and
inc
cmp
dec
pop
sub
lds
outsl
xlat
je
ficompl
je
insb
cltd
mov
popf
mov
sub
or
cmp
adc
xor
push
add
mov
insl
stos
or
mov
test
lods
sbb
les
push
dec
adc
aas
pop
mov
add
cmp
jbe
cmp
jb
subb
adc
and
stc
or
fdivl
xchg
sub
inc
movsl
mov
add
jb
adc
add
das
test
cmp
mov
xor
mov
dec
sbb
icebp
mov
jo
lods
adc
mov
int3
lea
gs
lods
push
dec
add
add
nop
inc
inc
inc
inc
jle
pop
lods
sbb
add
jmp
out
xor
in
push
in
mov
mov
lcall
in
lock
sbb
mov
add
add
add
adc
mov
xor
dec
pusha
and
mov
daa
rclb
adc
xchg
or
push
lea
jl
cld
ljmp
sbb
shr
popa
out
neg
adc
stc
testb
sub
in
pop
nop
fcoms
negb
and
fildl
jne
add
in
xchg
mov
aas
inc
fiadds
scas
inc
out
add
outsb
insl
nop
dec
dec
push
pop
add
aad
pop
add
shll
test
xor
mov
das
sbb
cmpsb
imul
imul
or
aas
rorb
fcomps
roll
call
add
pop
pop
add
outsl
and
pop
sbb
dec
xor
add
or
xlat
or
icebp
lahf
jmp
dec
mov
add
shll
mov
inc
cmp
stc
or
inc
test
lcall
xor
rcrb
and
xchg
jmp
lea
es
ljmp
std
push
cs
nop
cld
fists
orl
and
scas
hlt
pop
cmp
add
sub
shrl
jns
adc
or
pop
jnp
mov
push
rep
je
inc
dec
insl
pusha
jb
mov
add
mov
push
popf
jge
jns
ds
jae
sub
cld
sbb
add
ja
cmpw
lahf
pop
or
bswap
push
xchg
icebp
sti
pop
or
xor
xor
mov
jg
icebp
pop
ret
pushl
sti
out
fists
ret
cmpl
and
ret
stc
mov
aaa
fs
cmp
adc
add
mov
fmulp
inc
sahf
in
and
xor
push
xor
mov
jg
lret
mov
pop
mov
and
lret
aaa
mov
lret
in
pop
adc
inc
or
xchg
push
push
popa
cmp
aaa
adc
aaa
jnp
push
fcoms
pop
frstor
decb
in
pop
push
and
or
adc
cmp
daa
xor
sub
and
mov
scas
pop
push
lea
push
sbb
dec
inc
fcompl
xchg
pop
jmp
or
add
cwtl
insl
push
sbb
push
jmp
push
and
fstpl
aaa
sarl
pop
pop
fnstsw
sahf
jne
jg
and
ret
adc
aam
and
push
jge
loop
dec
inc
inc
mov
dec
lock
sbb
loop
ret
mov
jnp
and
adc
outsl
repz
int3
push
xor
xor
aam
insb
hlt
fstcw
push
inc
fwait
adc
or
cld
fldcw
mov
hlt
or
and
leave
lea
inc
mov
or
inc
cs
or
call
sbb
pop
notb
mov
lods
or
arpl
jmp
fdivr
and
xchg
sbb
addb
mov
loopne
inc
daa
call
add
sbbb
and
cwtl
inc
add
mov
or
xchg
mov
mov
mov
sahf
inc
aas
pop
int3
and
add
inc
shlb
inc
adc
push
ds
popa
adc
gs
add
rdmsr
aas
jnp
sbb
pop
repz
inc
inc
in
jmp
sti
add
push
mov
xor
cmp
rcll
sbb
insb
and
div
jo
adc
jo
jg
dec
xor
icebp
fcomps
cmp
je
in
inc
sbb
out
mov
int
inc
lock
hlt
clc
cld
pop
lock
pop
mov
fcomp
inc
pusha
lds
jbe
dec
loopne
repz
push
outsl
and
sbbb
mov
ja
fdivs
out
and
or
cltd
int3
adc
mov
js,pn
loopne
jg
pop
movl
adc
xlat
adc
adc
adc
cmp
and
jne
es
loop
scas
and
out
sbb
imul
arpl
pop
mov
push
push
lods
mov
inc
pop
cltd
mov
jl
lret
xor
xor
out
mov
add
cmp
pop
add
add
inc
pop
ljmp
pop
out
mov
mov
or
add
inc
or
fdecstp
mov
lock
xchg
sbbb
add
mov
sbb
loope
inc
cmc
in
pop
sbbb
loopne
out
sub
add
push
push
push
aad
orb
jecxz
mov
jge
sub
push
push
mov
and
call
dec
cmp
subb
je
and
sub
cld
jle
or
mov
mov
jl
add
mov
pop
mov
test
call
ret
fs
mov
xchg
adc
xor
jecxz
aas
push
jns
shl
push
repz
or
push
scas
or
xchg
inc
ss
mov
push
fsubr
or
fmull
inc
add
imul
cmp
roll
fbld
lahf
push
xor
dec
mov
inc
test
lea
push
mov
lods
adc
test
adc
and
or
push
lea
add
pushf
inc
push
call
not
fcomp
sbb
or
pusha
idivl
add
add
rcr
mov
jg
or
push
les
xor
mov
testl
call
aad
mov
clc
jg
and
cmp
clc
aam
fidivl
nop
cwtl
push
mov
enter
cmp
stc
rcr
mov
mov
or
push
inc
arpl
xor
dec
push
pop
fs
in
xchg
push
jg
nop
or
push
test
stc
jg
cmpb
push
mov
dec
xor
mov
icebp
into
jle
shrb
repnz
cmp
jae
push
cmp
cmpsl
lods
gs
xor
mov
pop
sub
stc
add
test
ret
xor
mov
test
push
or
iret
int3
xor
jnp
or
dec
out
sti
mov
daa
fistl
mov
cmpsl
mov
mov
test
je
cmp
rcr
inc
xor
cmp
jbe
inc
xor
or
sub
adc
loope
cmp
inc
or
or
js
dec
jge
imul
pop
add
mov
daa
iret
test
xchg
mov
dec
js
imul
or
je
inc
call
out
and
push
cmpsb
adc
dec
jg
sbb
aaa
sub
and
enter
sarl
adc
adc
add
sub
and
filds
aaa
lock
cld
jmp
cmp
jb
mov
fldl
insl
je
jno
adc
ret
jbe
cltd
pop
ja
xchg
xchg
ss
sub
rorl
mov
jmp
enter
pop
or
mov
or
call
inc
dec
call
jbe
mov
orl
jmp
or
leave
mov
xchg
xchg
jge
or
in
je
shlb
arpl
outsl
ret
jo
pop
mov
pop
and
push
mov
add
loope
dec
cmp
mov
mov
je
and
inc
jmp
test
push
sar
imul
test
jne
pusha
and
and
or
sub
or
xchg
rorl
or
push
cmpsb
add
jg
pop
js
add
xor
lock
pand
scas
sub
lret
mov
lods
repz
insb
jl
sbb
mov
add
dec
not
xchg
pop
test
cmp
stc
push
dec
pop
add
and
inc
in
mov
xchg
in
insb
loop
sub
cmp
adcl
and
adc
xor
or
ret
dec
add
jbe
pop
gs
rdpmc
mov
and
imul
dec
xor
pop
inc
cmp
je
pop
ficompl
test
cmc
cli
jg
cmp
lock
lea
mov
sti
aas
jo
outsl
sub
add
loopne
les
notb
jo
mov
and
mov
leave
push
ja
push
inc
fstps
adc
adc
test
lcall
jg
ss
or
and
into
push
dec
add
ja
mov
add
push
jmp
cmp
dec
pop
pop
push
inc
sbb
push
jne
mov
xchg
sbb
shll
fucomi
lock
loopne
rolb
shrb
jne
adc
xor
pop
add
mov
xchg
ja
loop
test
and
or
or
jns
jbe
scas
add
cmp
pusha
and
outsb
addr16
dec
ja
dec
ret
mov
pusha
push
lcall
stos
cmp
push
and
lea
cmp
jb
jp
loopne
mov
das
sub
aad
in
adc
xor
sub
cltd
loope
fiadds
cmp
imul
pop
add
push
out
push
jae
scas
mov
pop
out
mov
mov
adc
sbb
out
adc
push
sub
adc
int
pusha
fldt
addr16
cld
jmp
rcr
shr
rcr
or
jne
div
mov
fs
fwait
in
jnp
dec
mul
add
jb
cmp
or
cmp
jbe
dec
cltd
jnp
fists
fdivrl
or
push
pushw
fdivl
push
sub
enter
ficoml
or
xlat
or
or
sub
cwtl
testb
sbb
adc
or
neg
push
es
sbb
stc
add
lahf
out
push
pop
or
icebp
inc
stos
dec
push
and
add
es
sbb
sbb
sbb
sbb
aaa
cmp
dec
adc
xor
movsb
cltd
loope
rcr
dec
fcomi
sbb
push
cltd
sbb
shrl
dec
mov
imul
push
test
js
mov
or
and
add
jae
inc
jns
sub
dec
cmp
pop
add
mov
call
nop
sbb
shl
inc
ret
insl
cmp
out
add
jmp
ja
jns
add
ror
cmp
inc
jmp
ffreep
mov
inc
cs
inc
cld
cli
pop
repnz
xlat
mov
xor
mov
jne
inc
inc
dec
xor
jne
mov
loope
sti
dec
add
add
push
pop
jecxz
and
out
aam
stos
sub
cmpsl
je
mov
mov
dec
adc
cmc
popa
imul
ljmp
cmp
mov
ljmp
les
std
mov
cmp
jne
sbb
out
jne
or
lea
and
dec
test
sbbb
sbb
cli
mov
sub
test
jle
jno
imul
fcmovnb
in
pop
dec
das
sub
rolb
icebp
push
inc
jmp
mov
ret
adc
sbb
adc
shlb
mov
sbb
adcl
jg
icebp
lcall
mov
push
xor
or
in
sti
or
mov
cmp
adc
add
pop
add
jecxz
add
xchg
in
es
xor
mov
repnz
cmpb
repz
push
push
or
jbe
jo
cmp
lret
sub
loope
or
sti
push
mov
push
dec
ret
sub
clts
cmp
pop
push
jmp
jmp
clc
fidivl
jb
jmp
adc
pop
cmp
jbe
jae
idiv
jg
imul
add
mov
add
mov
dec
xchg
fdivrl
test
aas
dec
scas
mov
jmp
sub
dec
jne
mov
mov
cmpl
dec
ja
test
sub
adc
mov
inc
adc
push
and
popa
movsb
xchg
jmp
mov
pop
neg
sbb
push
jnp
or
loopne
addr16
jno
push
and
fnstsw
mov
mov
pop
inc
add
mov
rcrl
pop
sbb
ja
sti
je
add
shrb
aaa
inc
cmp
mov
decl
adc
xor
xchg
or
pop
inc
shlb
iret
cmp
ret
mov
das
or
mov
imul
ja
pop
and
pcmpeqb
mov
ret
push
push
lahf
stos
lods
pop
arpl
xchg
lahf
xor
loop
incl
or
rolb
sub
test
cmpl
je
mov
mov
sar
jecxz
mov
popl
std
add
inc
fiaddl
jmp
and
sub
inc
jmp
popa
addb
xchg
or
jne
mov
xchg
hlt
cmc
mov
xor
push
mov
filds
xlat
out
lea
jnp
mov
loope
repz
mov
cmp
sbb
or
clc
shll
cmp
and
xor
cld
or
adc
arpl
xor
inc
ja
test
ret
sub
mov
xchg
lock
subb
stos
in
sub
sbb
rorl
or
cmp
jmp
lea
loopne
push
and
cmp
inc
adc
and
push
jns
or
add
xchg
or
jmp
clc
or
xchg
push
sbb
lods
adc
inc
leave
or
jae
adc
lret
loope
daa
aam
mov
std
adc
lea
push
xchg
cs
adc
push
mov
sarb
rep
push
pop
mov
mov
mov
mov
and
shr
shl
lea
sbb
ljmp
ja
mov
insb
adc
into
pop
push
shl
shl
ret
out
add
fnstenv
add
mov
inc
std
imul
push
dec
pop
shl
dec
shll
mov
inc
test
add
out
stos
and
xor
leave
sahf
jno
sbb
push
add
sub
lahf
pusha
mov
mov
cmp
fwait
jmp
cmp
pop
jge
cmp
popa
loope
mov
or
movb
dec
pushf
jecxz
andl
inc
pop
and
enter
jo
or
pop
or
sbb
pop
je
insb
push
push
push
push
pop
dec
and
test
push
in
push
xor
aas
es
icebp
mov
lea
rorl
pop
pop
inc
or
enter
int3
int3
lea
pop
ret
lea
stos
sbb
ud0
pushf
addr16
je
mov
inc
cmp
sbb
push
mov
or
xor
out
adcb
adc
mov
mov
xchg
mov
xor
xor
xor
mov
xlat
ss
and
out
sar
and
call
inc
cld
cmp
je
xor
in
test
push
out
and
add
push
aam
xchg
pop
arpl
outsb
or
cld
push
add
xchg
push
imul
cld
jb
cmpb
popl
cmpsb
cmp
cltd
jne
cmp
sub
cmp
or
or
pop
add
sbb
or
add
sbb
clc
aad
hlt
testb
sbb
pusha
lods
cs
pop
jp
jne
mov
push
adc
mov
inc
add
or
inc
ss
adc
sub
cmp
mov
daa
or
addr16
aaa
repz
pop
lahf
add
test
in
jnp
and
xlat
je
cmp
jb
jge
ficoms
pop
sbb
mov
jle
mov
ds
sub
push
adc
jbe
sub
inc
push
aas
stc
sbb
push
inc
ss
div
jg
mov
or
repnz
inc
neg
dec
mov
adc
cmp
sbb
sbb
sub
lea
les
jg
mov
inc
inc
data16
sub
sar
dec
mov
lret
enter
sbb
mov
mul
jge
or
mov
add
loope
rcrl
scas
test
push
push
mov
out
aam
or
xchg
sbb
cli
leave
movsb
mov
cmp
lds
enter
xor
shl
add
shlb
scas
mov
adc
adc
mov
movsl
sbb
jmp
or
int
inc
jnp
test
xorb
mov
jo
dec
dec
or
pop
in
sarl
jge
push
push
lods
sub
hlt
in
mov
rolb
pop
movzwl
push
pop
push
sub
dec
popa
sub
ja
jno
inc
mov
mov
imul
ljmp
cwtl
cmp
test
repz
or
jnp
in
loop
loope
lahf
subb
negb
pop
dec
pop
dec
das
sbb
sahf
pop
cmp
adc
cmp
push
pop
push
cmp
ss
test
das
fcmovnb
dec
or
popf
mov
push
gs
xor
and
or
nop
mov
or
and
push
xor
out
or
or
sar
xchg
adc
mov
dec
sti
jge
fildll
je
test
ds
imull
cmc
cmp
dec
inc
dec
add
adc
data16
xor
xor
aas
xor
cmpsl
push
adc
jecxz
lret
mov
loope
mov
dec
test
subb
add
je
sbb
add
mov
dec
or
jno
mov
pop
pop
movsl
cmp
pop
lock
xor
cwtl
dec
cmp
sbb
or
jle
xchg
dec
and
pop
inc
ljmp
sub
add
xor
lds
sti
neg
orl
jl
and
adc
push
pop
mov
push
loopne
lcall
and
sbb
mov
jecxz
add
xor
dec
xchg
pop
xchg
imull
mov
in
and
gs
push
add
nop
cmp
mov
or
je
jmp
flds
sbb
xorb
or
add
and
addb
sub
sub
lods
xor
add
jge
sbb
inc
sbb
jnp
int
lea
jmp
mov
lock
lock
and
jg
lea
insb
mov
push
imul
push
jns
jl
cmp
mov
adc
rclb
cmpb
sbb
xchg
jne
inc
inc
dec
sub
adc
ja
inc
bound
fadds
loop
nopl
sti
add
popa
shll
cltd
in
xor
icebp
addr16
test
and
ret
js
jno
sar
inc
je
insb
and
and
je
test
into
shlb
adc
cmp
sbb
sbb
test
adc
mov
mov
add
or
popa
xchg
add
xor
and
sarl
inc
aam
pop
or
inc
inc
jmp
xchg
add
mov
or
clc
cmp
jo
sub
fmuls
roll
cld
xchg
add
out
or
adc
fxtract
or
je
add
hlt
out
add
sub
mov
je
dec
stc
call
je
pop
mov
fcmove
mov
sub
inc
add
add
sarl
sub
add
mov
lock
xor
int
push
fmull
cmp
mov
add
mov
sub
xchg
jno
xchg
pop
cmp
add
adc
mov
inc
mov
jno
lds
xor
cmc
dec
hlt
rclb
andb
in
popa
test
dec
inc
int3
mov
xlat
pop
mov
les
sub
mov
ret
pop
sahf
pop
rdpmc
imul
jae
push
les
push
push
out
in
test
data16
inc
mov
leave
and
add
mov
sub
push
fs
sti
mov
jne
addb
data16
cltd
push
or
dec
dec
ret
pop
pop
or
notb
test
jg
jmp
inc
ljmp
inc
jmp
lds
or
test
jmp
das
inc
xchg
push
dec
and
das
add
or
add
mov
dec
aad
js
sarl
mull
adc
inc
jp
and
inc
sub
ds
pop
cmp
ja
cltd
jmp
pop
mov
jmp
mov
or
loopne
xor
xor
cli
mov
jl
jae
pop
shr
lock
mov
jmp
pop
or
jne
and
jge
sti
push
dec
testl
jmp
mov
ret
cmp
mov
push
pop
push
pop
pop
and
fnsave
ret
stc
shrb
jge
int3
cmp
into
jle
add
cmp
clc
mov
jmp
mov
std
mov
xor
fstpl
push
movb
inc
pop
orb
fsub
idiv
push
lods
lock
movsl
es
adc
jmp
test
stc
jbe
adc
je
and
and
in
in
loopne
add
hlt
xor
or
sbb
lcall
ljmp
repz
pop
jl
add
dec
or
xor
or
push
pop
pop
jle
adc
sbb
enter
icebp
push
dec
mov
push
jbe
or
dec
mov
or
mov
inc
adc
popf
je
xor
or
div
jg
orl
inc
add
insb
ficomps
push
cmp
movsl
jo
or
inc
outsl
sbbl
idiv
dec
add
mov
mov
add
out
jbe
orl
pop
xor
add
inc
or
push
jle
rcrb
push
aad
or
add
jae
sbb
inc
scas
or
mov
fistps
dec
jno
es
push
movsbl
push
inc
sbb
adc
imul
int3
cmc
loopne
dec
subl
movsb
sbb
push
xor
flds
push
cld
cmp
cmp
and
sub
mov
mov
cmp
or
xchg
dec
mov
stos
push
mov
push
test
pop
jl
jle
inc
sub
dec
stos
xor
clc
iret
insl
cs
repz
movsb
lock
roll
sarl
fsubs
icebp
sbb
or
pop
mov
mov
add
or
mov
add
loop
mov
addb
jg
and
xchg
cmp
rclb
mov
stos
aam
ja
push
ja
push
jmp
xchg
xchg
mov
gs
aam
sar
xor
push
in
or
xchg
or
inc
enter
inc
popf
rclb
add
xor
pop
cmp
dec
adc
or
inc
inc
out
adc
xchg
cld
add
and
dec
rorl
jle
push
lret
push
call
aad
icebp
ljmp
sub
in
loopne
test
lret
rorb
and
add
adc
inc
pop
shl
inc
rclb
std
sti
dec
jg
je
or
inc
je
dec
je
mov
aaa
inc
jmp
sbbb
sub
add
push
fidivs
jnp
inc
push
stc
std
jle
jmp
inc
bnd
insl
push
in
in
je
icebp
jmp
jbe
sti
jmp
decb
sti
and
mov
dec
adc
lds
inc
sbb
das
cltd
xchg
add
add
jge
xchg
aaa
adc
cmp
inc
push
ja
mov
xchg
add
ret
clc
xchg
xor
add
sbb
inc
cmp
jnp
or
pop
imul
xchg
lea
or
jns
test
mov
push
outsl
aas
pop
add
repz
arpl
sub
fs
ret
mov
mov
addr16
or
sbb
jl
or
jbe
dec
add
sti
xor
addps
push
push
pop
das
adc
icebp
nop
int3
jle
mov
mov
sub
jne
mov
jns
cmp
lock
cmp
test
adc
mov
or
push
gs
sub
add
adc
data16
pop
push
sub
jle
adc
into
adc
mov
std
push
pop
scas
in
push
inc
mov
jge
fwait
mov
jne
push
pop
inc
mov
and
in
push
inc
fistl
mov
mov
cmp
dec
inc
mov
adc
jno
movb
insl
add
rorb
cmc
hlt
outsb
sbb
and
adc
adc
leave
and
das
ds
js
adcl
inc
testb
aas
dec
adc
andb
xor
bound
popl
or
les
enter
sub
mov
loopne
mov
dec
imul
add
sbb
test
mov
pusha
add
test
and
je
jb
lods
add
dec
call
aas
push
jmp
ret
lods
cmpsb
addr16
mov
ret
xlat
js
addb
cmp
dec
add
bound
push
loope
adc
mov
jmp
cmp
adc
push
xor
xor
dec
mov
das
addps
aas
lods
arpl
outsl
pop
mov
mov
jmp
pop
sub
iret
pop
sub
xchg
sbb
pusha
add
ficomps
jmp
xor
pop
inc
push
cmpsl
and
mov
jo
xchg
mov
cmpsl
pop
inc
cmp
jnp
add
ss
cmp
jae
mov
jmp
ret
cmp
ja
gs
inc
add
push
sub
inc
mov
mov
and
mov
mov
decl
sbb
jne
xor
jmp
sbb
cmp
jmp
jmp
add
add
sub
xor
xchg
inc
cmc
inc
leave
es
xor
push
test
pop
push
jecxz
in
jg
je
mov
push
enter
call
filds
cltd
stc
add
lret
test
je
pushf
jne
aas
test
inc
mov
movzbl
fbstp
sub
test
loopne
lahf
ret
cmp
ret
jo
pusha
cmp
xor
aam
or
or
punpckhbw
repnz
add
xor
jb
mov
xor
mov
dec
fildll
rcrb
lods
dec
jne
fnstsw
rolb
out
adc
iret
lmsw
lcall
dec
sub
loope
cltd
stos
aas
or
inc
jmp
push
push
fimuls
pop
pop
sbb
push
mov
repnz
lock
jge
lahf
add
add
jno
fistpl
xchg
adc
adc
rcrb
add
ficomps
arpl
push
sub
cld
dec
fldl2t
add
xchg
mov
shl
xchg
mov
mov
and
je
or
cmp
out
insb
shl
jmp
lea
shl
jmp
fwait
and
mov
imul
sub
add
sarb
clc
xchg
je
neg
pop
inc
xlat
cwtl
test
adcl
rolb
lcall
fcoml
ret
ljmp
cmp
or
inc
jmp
lock
push
mov
imulb
call
cmpsb
adc
sbb
xchg
xchg
dec
push
enter
in
lea
jne
ljmp
jne
mov
mov
test
push
divb
xor
jg
dec
ficomps
push
pop
dec
das
jp
mov
mov
and
jge
add
jmp
jle
les
out
stos
add
nopl
mov
out
pop
jg
lock
add
or
or
push
imul
cmp
jmp
push
ret
mov
fistpl
pop
js
inc
clc
push
xor
mov
push
inc
out
mov
add
js
shlb
insb
dec
je
mov
ret
mov
pusha
fs
mov
pushf
mov
clc
pop
sbb
inc
setne
cmc
jl
inc
je
imul
outsb
js
andl
jbe
into
je
mov
or
jnp
sahf
cld
jnp
xor
mov
inc
xor
push
or
cli
add
pop
add
xor
call
and
std
lock
inc
movsl
repnz
pop
sar
loop
ret
out
mov
imul
sub
lea
xor
mov
das
cmp
sar
aas
dec
pop
testl
iret
jbe
dec
adc
pop
call
dec
mov
stc
and
mov
dec
add
sti
not
and
decb
jne
ljmp
loopne
pop
imulb
xor
mov
and
push
jns
mov
lahf
jl
mov
jl
daa
ret
jns
sbb
mov
mov
fdivr
aas
testl
sub
test
push
cld
and
mov
xchg
push
dec
pop
das
leave
jbe
mov
mov
add
sti
cmpb
jnp
insb
and
jg
imul
loopne
mov
push
mov
and
dec
enter
shlb
xchg
cltd
fmull
push
mov
jg
jge
pop
add
xor
mov
and
lds
cmp
or
push
mov
gs
lods
fstp
stc
push
push
dec
mov
or
jg
cmp
das
dec
arpl
and
dec
xcrypt-cbc
cmpsl
push
jae
jge
mov
loopne
xchg
mov
jmp
or
sbb
mov
pushf
lea
sbb
sub
lea
xor
pop
add
cmp
or
mov
adc
xorps
xchg
cli
mov
sbb
xor
cmp
test
testl
fiaddl
push
call
aas
cmp
push
in
pop
sbb
inc
int
mov
dec
push
mov
dec
inc
adc
jmp
pusha
add
and
sub
and
xlat
and
daa
dec
faddl
or
mov
in
and
inc
push
sub
and
dec
mov
sub
jge
lea
mov
pop
or
or
pop
mov
push
pusha
int
shr
jecxz
jge
sbbb
pop
in
lock
cs
push
push
js
shr
mov
jmp
push
or
shr
sbb
mov
ds
mov
jae
mov
lea
push
and
or
popa
out
mov
hlt
ret
adc
xor
jne
mov
cmp
dec
adc
add
pop
dec
jae
sbbl
pop
outsb
jmp
es
jae
inc
or
idivb
xchg
testl
and
sbb
adc
test
repnz
nop
mov
cli
push
mov
adc
mov
mov
aaa
mov
aas
dec
or
out
dec
inc
or
mov
rcll
stos
xchg
test
jmp
jmp
mov
or
je
mov
lret
fists
jnp
pushl
jne
int
and
pop
test
jl
shl
inc
jmp
mov
aad
insl
inc
push
stc
xchg
sub
icebp
test
add
adcl
ljmp
or
dec
dec
popa
inc
jge
and
push
pop
inc
sub
adc
inc
and
mov
decb
jne
dec
in
or
or
xor
push
sub
mov
and
push
or
pop
push
cltd
arpl
or
jp
push
or
pop
jp
fiadds
repz
push
jl
test
add
or
push
mov
or
mov
or
mov
aad
into
and
adc
cmp
push
or
das
push
or
lea
or
bound
sub
out
or
aam
add
aas
aad
mov
mov
cld
fs
ret
fiadds
roll
and
cld
mov
inc
das
lea
sbb
sbb
movsb
jp
cmp
xlat
mov
mov
lea
adc
sub
rcr
cs
scas
xor
js
test
pop
push
das
nop
movsb
je
inc
and
cmp
pop
adc
les
mov
loope
mov
xor
and
inc
mov
sub
nop
imull
or
push
xor
jne
push
stc
loopne
mov
jge
dec
dec
pop
test
mov
incl
imul
lds
dec
sbb
jno
inc
jno
data16
mov
imul
rcrb
add
xor
add
or
sti
out
add
or
out
jns
pop
adc
add
insl
std
sbb
cli
ja
inc
out
dec
jbe
test
push
cmp
cld
lock
dec
daa
movl
sub
ret
movl
pop
dec
mov
dec
or
pop
jl
pop
pop
inc
fs
inc
test
jecxz
jmp
mov
pop
test
hlt
mov
jne
or
mov
pop
lret
shr
std
push
lret
movsl
push
pop
movsl
jnp
mov
clc
cmpsl
push
cmc
xlat
lea
sub
xlat
push
lods
jle
icebp
shr
or
dec
cld
dec
cmp
mov
jne
decl
mov
test
mov
jns
dec
add
dec
popl
popa
aad
enter
sbb
adc
lahf
lock
pop
mov
add
pop
jbe
daa
dec
push
pop
cmpsl
clc
jl
and
dec
in
sbb
inc
pushf
nop
jge
sbb
xchg
jo
outsb
sbb
leave
jg
shll
add
cld
xor
dec
mov
xor
pusha
test
pop
sbb
lea
xchg
pop
jg
or
popa
cmp
out
pop
or
dec
pop
pop
and
leave
xor
adc
fimuls
inc
lret
jno
and
and
xor
dec
out
adc
adc
add
ja
or
rcr
inc
and
loopne
das
mov
xchg
ficompl
jge
push
fldcw
mov
dec
insl
pop
xor
pusha
add
addr16
pop
mov
jo
adc
popa
in
jle
jne
xor
cltd
or
lret
dec
inc
cmp
add
repnz
jo
push
repz
jne
and
sbb
push
in
scas
mov
jno
or
lcall
jmp
pop
add
fstpt
xchg
gs
aam
ret
pop
dec
dec
data16
xchg
push
decb
push
seta
add
ret
xchg
cmp
lret
ret
fs
jns
push
add
mov
and
add
pop
fldl
inc
arpl
cmp
or
lahf
mov
cmc
and
and
test
mov
xchg
and
mov
pop
pop
sub
jo
popa
sbb
inc
cli
repnz
aad
and
gs
push
xor
outsl
in
icebp
fisubrs
mov
sub
sub
sub
xor
or
xorl
add
js
popf
inc
push
xor
leave
jg,pn
xor
mov
inc
adc
adc
or
rcll
or
pop
adc
add
add
insl
jb
outsl
orl
test
xchg
dec
add
xchg
xchg
arpl
test
xchg
nop
icebp
jo
add
das
jecxz
shll
lret
and
shl
or
jbe
jge
mov
sub
andl
inc
repnz
les
sti
shr
leave
bnd
add
pop
cli
xchg
inc
test
je
mov
or
test
cmp
adc
test
push
js
mov
imul
pop
push
mov
xor
shll
and
je
or
inc
rolb
jmp
mov
push
ret
jmp
pop
sbb
aaa
xor
and
mov
andl
jecxz
sbb
or
jmp
push
ds
ret
sbb
or
jmp
loope
and
arpl
dec
adc
mov
lret
sbb
fldl
aaa
sub
pop
adc
mov
and
pop
cmp
jp
js
xchg
adc
add
addr16
or
add
es
adc
sti
add
add
test
fisttps
fistpll
sbb
and
or
pop
pop
loopne
push
adcb
jmp
adc
mov
or
testl
jns
jecxz
mov
adc
filds
shrb
and
inc
add
jb
jg
pop
adc
pop
fldl
fstpl
daa
pop
lods
imul
and
addr16
je
test
or
orb
imul
jle
adc
push
neg
or
push
pusha
sub
xor
stc
js
push
inc
pop
pop
fcompl
inc
mov
cmp
mov
iret
pop
filds
push
or
cmp
test
fcompl
xor
cld
aas
movsb
iret
ja
fchs
fstpl
frstor
mov
lods
outsb
aas
xor
dec
sbbb
lcall
inc
nop
es
addl
lock
fstpl
mov
test
add
fs
adc
jl
mov
pop
xchg
lret
repz
mov
inc
and
gs
jns
out
or
sub
or
into
fdivs
lahf
lea
lret
mov
jmp
test
mov
cmp
rcll
loope
cli
stc
fwait
push
stc
fists
mov
enter
roll
add
insl
hlt
sbb
je
frstor
jns
pop
add
adc
add
xor
pusha
inc
sbb
push
fsubrs
adc
xor
imul
mov
or
sub
pop
jno
lcall
cmp
imul
js
and
mov
enter
dec
lahf
push
lock
sbb
and
push
ret
and
add
mov
dec
pop
push
xchg
insb
or
push
movsb
in
pop
xorl
push
cli
dec
movsb
inc
xlat
je
mov
jg
and
stc
mov
xor
mov
je
cmp
cmp
add
mov
mov
push
mov
push
movsb
and
jmp
test
add
mov
xor
sub
loopne
push
dec
sub
or
stos
xor
dec
push
cs
push
xchg
jns
cmpb
cmpsb
and
inc
or
push
aad
sub
out
lock
push
or
mov
mov
call
insb
icebp
hlt
movsb
mov
dec
fcmovu
add
pop
mov
xchg
xchg
cmp
inc
push
jmp
sbb
pop
sbbl
rclb
or
pop
pop
cmp
add
and
or
xchg
andb
push
gs
icebp
cwtl
mov
jnp
iret
negb
fst
gs
or
roll
dec
jmp
adc
out
movsl
and
mov
ret
and
xor
or
sub
add
and
jnp
mov
cs
bound
jge
aaa
dec
imul
push
sbb
fnclex
sbb
sub
mov
and
and
or
insl
or
cld
arpl
shll
or
sub
or
mov
insl
scas
and
sbb
mov
xchg
or
xchg
fld1
fdivp
fstp
xchg
push
rcrl
fldpi
xor
mov
je
scas
add
inc
sbbl
sbb
inc
cmp
adc
std
adcl
jne
fmull
insl
lock
call
movsb
leave
ret
mov
pop
sub
fucom
mov
adc
pop
mov
add
aaa
rol
pop
ljmp
and
xchg
pop
je
mov
mov
lods
rorb
rolb
dec
and
cmc
push
inc
dec
sar
rorb
mov
or
int3
into
hlt
repz
insl
mov
push
hlt
mov
imul
cmp
ffreep
or
sub
or
stc
clc
pop
lcall
xor
daa
add
adc
addl
push
pusha
or
aad
jb
or
lds
cmc
lret
je
leave
clc
pop
inc
subb
rorb
cld
gs
xchg
ja
xor
xchg
icebp
adc
cmpb
xor
sbb
xlat
fisttpl
lahf
rcll
sub
sbb
add
push
or
cmp
mov
add
pop
adc
mov
push
cltd
neg
mov
pusha
shlb
rolb
lret
sahf
xlat
ss
push
ret
xor
scas
add
or
jle
sbb
mov
mov
jge
outsl
push
or
cmp
lret
push
pop
push
xchg
dec
inc
cmc
int3
cmp
pop
mov
cmp
pop
add
jns
neg
cld
xchg
jle
daa
sub
adc
cltd
pop
idiv
sbb
pop
jnp
cltd
or
or
je
xchg
call
cli
add
adc
ffree
mov
mov
lret
cmp
xor
jl
xor
lods
sbb
mov
xorl
cmp
xor
sub
and
pusha
js
mov
push
add
nop
pop
std
jne
movb
add
jg
aaa
jl
pop
push
mov
pop
xor
dec
sbb
and
clc
cmp
or
sub
ficomps
jbe
inc
out
pop
and
jge
pop
sub
fsubrp
push
pop
cmp
std
fidivrs
ficoms
push
push
push
movsb
lds
lds
int3
fs
mov
adc
fcoml
push
push
aad
icebp
push
arpl
lahf
cmp
cmp
pushf
rorl
imul
cmpsl
dec
pop
cld
mov
or
mov
iret
cmove
jmp
push
rcl
add
xor
shlb
nop
movb
pop
add
dec
andb
fistpl
pop
mov
fcmovnbe
aam
or
adc
mov
mov
sub
jne
out
pop
sarb
int
loop
sbb
sub
jmp
and
repz
leave
sbb
push
jecxz
push
push
add
adc
pushf
inc
or
mov
push
mov
out
les
ljmp
pop
fbld
jecxz
cmpl
outsl
adc
push
push
scas
jns
insl
lret
ljmp
push
cmp
das
push
cmpl
fistpll
jbe
or
decl
or
sbb
in
add
push
adc
fisttpl
add
call
std
jmp
das
nop
insl
add
and
sub
cmp
jb
mov
inc
sbb
orb
lock
sbb
inc
add
mov
cmpb
test
mov
xor
loopne
loopne
jle
dec
sete
mulb
cwtl
sbb
mov
jnp
jl
stc
or
pop
pushf
stos
mov
add
adcl
cmp
mov
repz
inc
adc
jne
dec
pop
movsb
call
ret
in
jle
loop
fadds
jae
jl
jnp
inc
or
add
ja
inc
and
adc
out
and
scas
inc
or
sti
and
push
jbe
aaa
mov
jbe
das
bound
sbb
lock
lret
mov
adc
sub
jmp
push
cmpb
in
test
push
xor
dec
or
dec
and
xchg
loopne
cmpb
push
cmp
leave
xchg
mov
popf
sub
mov
cmp
into
mov
jle
fdivrs
mov
sarl
imul
test
jle
and
ret
jae
sbb
lock
clc
clc
jae
cmp
jl
cmp
jg
jl
mov
sub
xor
hlt
and
push
cmpb
mov
arpl
or
push
xor
jmp
add
rol
push
cmp
cmpsl
jp
mov
or
rcrl
mov
xchg
mov
or
sbb
sarb
mov
repnz
sbb
or
cwtl
call
ret
and
pushf
add
movsl
test
mov
icebp
loopne
stc
cmp
push
imul
and
jle
cmp
ret
mov
addb
insb
imul
dec
jecxz
pop
test
sbb
insl
jbe
and
test
insb
xor
mov
cmpsb
mov
pusha
leave
and
fwait
jle
dec
je
sub
daa
loope
xchg
push
outsl
adc
add
pop
sub
sbb
jb
xor
scas
add
sub
out
lock
scas
sbb
push
adc
pop
lahf
mov
call
incl
or
adc
mov
push
jle
pop
aam
or
mov
outsb
dec
sub
sahf
fsubrl
dec
jnp
or
jns
in
loopne
mov
sub
pop
cld
mov
cmp
sbb
int3
jecxz
mov
mov
pop
xor
icebp
in
push
gs
xor
out
cmpsb
and
dec
frstor
in
and
and
in
std
inc
loopne
cli
mov
aas
sbb
dec
loop
sarb
and
adc
aam
push
xchg
into
cmc
fnsave
pop
inc
cmp
cmpl
js
and
sbb
sub
enter
int3
add
shll
and
jns
adc
or
iret
sbb
cli
icebp
jl
or
testb
inc
fimuls
sbb
sbb
leave
cmp
pop
push
and
push
dec
unpcklps
out
es
arpl
and
je
fwait
popa
cmp
xchg
jae
and
in
pop
mov
sahf
fists
push
pop
sbb
shlb
pop
inc
cmp
cmpsb
or
xchg
xor
add
xchg
subl
mov
cmp
jmp
jae
push
lock
imul
sbb
pop
stos
add
or
cmpsl
lea
jns
pop
xor
jmp
mov
in
test
adc
push
push
icebp
lret
adc
add
arpl
pushl
rol
dec
jnp
mov
ror
cld
xchg
sub
jg
add
test
jl
aas
xor
lret
pop
pop
and
mov
pop
popf
notb
ja
sbb
push
icebp
leave
ror
fs
in
mov
pop
es
jmp
pop
sbbl
add
pop
pop
sub
or
adc
mov
test
adc
xchg
mov
inc
jne
clc
shr
pop
dec
cmp
xor
nop
fildl
stos
fcoms
dec
inc
jg
xchg
ret
rclb
test
push
jne
sbb
pop
bound
xor
lahf
sbb
xchg
sub
fildll
xchg
and
or
aaa
pop
xchg
in
adc
push
jmp
enter
inc
stos
sti
jmp
lahf
pop
push
data16
fwait
and
inc
cld
sub
inc
call
push
push
js
cmp
popa
adc
inc
mov
xchg
orl
inc
cmp
jg
adcl
sbb
sub
jmp
xor
push
pop
dec
push
dec
pop
push
ds
cld
cmpsl
mov
or
mov
sub
jmp
and
mov
imul
inc
push
iret
das
ljmp
mov
test
or
mov
aas
pop
cmp
sbb
test
or
gs
jns
imul
aaa
sti
jmp
pop
andb
je
clc
mov
aas
push
cmp
pop
jmp
dec
adc
xor
dec
dec
movsl
mov
sbb
movsb
sbb
aad
andl
jp
xor
mov
add
add
or
dec
pop
xchg
xchg
cli
iret
sahf
pop
testb
je
inc
popa
neg
cmp
dec
xor
sub
push
jle
add
test
inc
es
push
ja
adc
xorb
pop
sbbb
std
pop
push
inc
enter
lret
jmp
xor
mov
sbb
imulb
or
lock
dec
mov
mov
lods
movsb
sarb
test
ljmp
mov
stos
sbb
fimull
sbb
jo
jne
or
inc
cmp
icebp
gs
jl
jno
je
sub
sbb
subl
cmp
inc
mov
jbe
mov
adc
popa
gs
test
scas
xor
mov
sbb
push
pusha
pop
ret
mov
mov
ret
xor
push
cmp
out
repz
adc
stc
sar
cmp
cmp
lea
push
and
fwait
pop
push
or
jmp
out
in
jno
inc
add
xchg
dec
dec
jo
loopne
lds
fldenv
into
movsl
cmpsb
cmpsb
add
mov
cli
out
or
roll
dec
inc
sbb
and
mov
test
jl
cmc
in
push
sbb
add
mov
pop
jno
dec
and
jne
aaa
fcoms
iret
bound
mov
add
push
test
xchg
xor
test
sar
je
icebp
adc
push
rcr
mov
push
pushl
xchg
xchg
mov
push
inc
scas
test
in
jnp
or
sbb
cmp
insl
xchg
cmp
mov
in
cltd
hlt
je
roll
push
fistps
mov
nop
aam
fimull
std
lret
rolb
or
outsl
and
mov
sub
push
inc
adc
sbbb
and
out
add
mov
fidivrs
scas
or
jmp
mov
dec
xchg
movsl
mulb
stos
push
insb
shl
je
movb
inc
mov
jae
push
sub
pushf
pop
ljmp
mov
adc
sbb
aas
in
aas
adc
mov
inc
mov
and
xor
or
subl
sbb
jo
cwtl
mov
out
je
mov
addb
das
sbb
push
and
sub
sbb
mov
mov
fsubrl
jae
popf
in
adc
imul
jne
xchg
jmp
pusha
insl
or
je
aam
push
adc
and
push
in
ret
cmp
inc
inc
add
or
cld
lods
xor
pop
fcomp
hlt
das
or
cld
fisttpl
xlat
pop
sbb
je
cmp
loope
rorl
jg
mov
hlt
sbb
into
add
or
add
cmpsl
lds
inc
add
popf
jecxz
enter
ja
fistpll
add
push
jg
pusha
sub
je
or
je
push
je
xchg
xor
sbb
cltd
lods
call
mov
addl
mov
pop
or
mov
ret
sbb
cmc
inc
jmp
jle
jae
outsl
or
ret
pop
add
mov
dec
enter
enter
lret
bound
sarb
jge
ud2
push
jne
inc
mov
pop
cmp
test
and
enter
into
or
shlb
je
rclb
jecxz
inc
pop
addl
sbbb
bound
mov
sbb
out
pop
fbstp
mov
or
add
xlat
adc
adc
and
cmp
push
jle
mov
xchg
sti
add
testb
jmp
sbb
ret
jmp
mov
jmp
int
incb
and
out
xor
mov
roll
cmp
cmp
aas
and
jno
cmp
fisubs
loope
pop
jns
or
or
dec
lret
adc
jge
xchg
hlt
inc
je
ja
or
arpl
lods
and
cmpl
fistl
adc
lea
lea
add
pop
or
fdivrp
jmp
mov
jle
ds
orw
sahf
push
adc
pop
pop
addl
and
aas
adc
test
andb
andl
inc
xchg
cwtl
cli
loopne
cs
movaps
pop
push
and
pusha
jno
mov
pop
je
call
sti
lret
pop
jge
cmp
stc
adc
or
sbb
inc
rcrb
aad
push
mov
and
cmp
lret
dec
aam
or
sbbl
add
mov
into
rcrb
cmpsb
add
cmp
jge
add
je
adc
pop
push
mov
add
mov
inc
mov
dec
and
sbb
aam
add
test
in
and
subb
xor
mull
dec
xor
jmp
jge
sbb
cmp
sbbb
push
pop
sbb
jb
loopne
xchg
cld
mov
xchg
push
scas
fisttpll
loope
xlat
ja
js
fisttpll
and
sub
and
cmp
sub
add
clc
jae
repnz
sub
fwait
lock
sub
jae
sbbb
mull
or
jmp
pushf
rcrb
leave
data16
inc
mov
push
lds
inc
sti
pop
mov
daa
or
add
xchg
lea
fcomi
cmp
jge
rorl
in
push
mov
cmp
mov
shll
pusha
or
and
mov
lock
and
mov
idivb
mov
scas
mov
xchg
rorb
orb
inc
push
or
js
inc
mov
xchg
ror
fwait
mov
mov
pop
mov
incl
add
jl
xor
fnstcw
decl
xor
dec
test
add
push
negb
pop
clc
and
shl
jl
std
pusha
rclb
inc
loopne
xchg
mov
mov
fistps
push
orb
jmp
adc
jmp
or
and
fwait
pushl
xorb
mov
clc
push
xchg
test
pop
loopne
sbb
movsb
cmp
movsb
or
jecxz
inc
jmp
push
adc
lods
popa
call
je
pop
mov
mov
aas
jle
mov
aam
test
jo
mov
pop
xchg
dec
fistl
jbe
mov
xor
out
cmp
push
ret
or
sarb
push
adcb
cmp
frstor
sbb
dec
jp
sub
les
mov
and
xor
outsb
mov
fdivl
fadd
insb
push
nop
jbe
scas
call
fs
dec
adc
fsubr
std
dec
xchg
addr16
inc
or
sbb
mov
loopne
or
stos
jg
mov
movsb
or
cmp
jmp
inc
push
and
fmull
xchg
mov
gs
fdivrp
fbstp
enter
pushf
push
pusha
je
or
adc
xlat
mov
push
push
add
jno
orb
cmp
sbb
jmp
jecxz
mov
ss
and
inc
cmp
cmpl
cld
sarb
adc
xorl
inc
cmp
test
sub
insb
jg
mov
or
cli
js
jge
add
mov
xchg
lahf
test
ss
into
mov
mov
dec
out
mov
test
push
inc
jp
inc
aas
popa
cmp
sti
dec
mov
fcmovbe
nop
sub
out
movsl
xchg
or
inc
cmp
push
xchg
shl
stos
lea
pop
dec
pushf
lret
je
mov
jge
cli
cmp
ja
cld
mov
jo
or
cmc
inc
inc
andb
jle
inc
mov
clc
cld
add
sarl
inc
fstpt
mov
lea
push
adc
js,pt
movsl
pop
mov
cmpb
movsb
out
cmp
jge
mov
and
push
jae
jo
pop
cmc
push
sub
insb
test
in
loopne
mov
mov
mov
adcl
and
xor
push
sub
fs
sub
gs
jnp
xor
dec
pushf
xchg
sub
jl
mov
mov
out
jo
mov
out
adc
or
push
fstps
xor
das
mov
mov
pop
lahf
adc
mov
mov
adc
jmp
rcrb
cwtl
jp
dec
out
hlt
mov
movb
loop
aaa
or
mov
pop
sbb
sti
sarb
ja
xor
jns
rolb
rep
rep
inc
inc
mov
test
cmp
xor
test
push
lea
adc
cmp
popa
and
jle
push
fmuls
pop
test
jle
loop
jne
push
cmc
adc
nop
inc
fstpt
stc
insl
jmp
xor
mov
jecxz
lock
andb
jmp
pop
pop
lods
xor
mov
cmp
shll
mov
pop
aaa
jb
das
ja
popf
xorb
jmp
cltd
xchg
mov
sub
mov
jne
std
nop
cwtl
cld
mov
out
mov
ja
pusha
xchg
in
add
add
jne
icebp
push
mov
pop
cli
je
dec
adc
cmp
adc
xchg
fs
xchg
test
sbb
push
gs
punpcklwd
aas
lods
xchg
jne
jmp
andb
add
inc
dec
add
lea
loop
dec
add
js
adc
push
leave
inc
cmc
ret
sbb
and
pop
or
test
pusha
shlb
dec
repnz
loopne
js
mulb
inc
push
sub
push
int3
addb
adc
out
loopne
loopne
or
cmp
jge
ja
mov
rorl
mov
and
or
and
lcall
in
cmp
sub
sbb
and
aas
pop
cmp
xchg
xor
aas
add
cmp
add
and
popl
add
adc
rcrl
pop
pop
jmp
hlt
mov
and
cmp
dec
mov
rorl
pop
pop
push
fld1
cmp
sbb
adc
je
push
rorb
lea
pop
pop
lea
test
jp
pop
nop
rolb
aas
jmp
jg
jne
mov
xchg
jne
mov
mov
popw
xchg
out
jp
jle
mov
or
jbe
inc
sbb
ja
imul
push
jmp
shr
lods
or
pushl
pop
mov
xor
dec
cmp
je
cmp
insl
xor
cmp
push
xchg
jmp
mov
call
divb
adc
sbb
adc
addb
cmp
xchg
enter
inc
cmpb
and
or
lods
adc
decb
inc
stos
add
add
ficomps
outsl
jne
pop
decl
xor
dec
inc
sahf
push
mov
pop
pop
cmp
jnp
fcoms
adc
pushf
or
std
jno
push
inc
pop
clc
cmp
mov
clc
add
dec
loop
mov
test
shrl
es
dec
dec
xchg
aam
pop
imul
mov
and
cmp
mov
rolb
jmp
lods
dec
jg
gs
stos
gs
lea
xchg
aaa
jae
loop
call
mov
inc
cmp
sub
rclb
lods
add
push
mov
mov
inc
inc
pop
aad
shrl
cmp
into
sbb
inc
cmp
idivb
jmp
cmp
xorl
and
and
fdivr
xor
int3
cmp
dec
and
jmp
ja
decw
sbb
cltd
mov
enter
adc
adc
add
mov
scas
or
inc
lret
cmp
sbb
and
hlt
jo
shrl
or
jge
lret
ret
pop
pop
push
add
xchg
movlhps
ffreep
mov
shr
mov
dec
dec
push
inc
adc
push
adcl
out
add
inc
add
fs
pusha
push
adc
push
or
je
push
sbb
push
aas
mov
loope
aaa
jno
arpl
movsl
dec
into
popa
pop
sbb
inc
rolb
aas
adc
mov
notb
rorb
xor
loopne
andb
ljmp
jl
push
rorb
out
inc
and
push
mov
inc
mov
jae
outsl
jmp
sbb
cmp
arpl
dec
out
add
cli
imulb
sub
idivl
clc
sbb
lahf
mov
loope
cmp
pop
lods
jmp
aad
and
push
inc
addr16
add
dec
inc
insb
jp
dec
push
loop
out
test
cmp
jecxz
jmp
outsb
pop
or
je
rorl
fidivrs
idiv
or
sub
inc
aad
popf
aam
aam
add
fistpll
test
pop
xchg
jmp
cmpsb
inc
ficompl
jecxz
xchg
inc
xor
pop
inc
xor
or
pop
nop
adc
pop
add
inc
test
fistl
adcb
mov
inc
pop
or
popa
sti
jg
aas
ret
jbe
jl
roll
lea
call
sti
add
pop
pop
orb
xor
dec
push
cli
in
pusha
lret
lods
sub
data16
loopne
dec
inc
and
mov
jbe
pusha
xor
xor
jmp
mov
scas
xchg
mov
jg
pusha
cwtl
or
push
nop
idiv
push
mov
mov
push
pop
sbb
test
cmp
sub
popf
push
cmp
flds
and
jl
mov
test
pop
in
ljmp
pop
loope
inc
lret
movsb
shlb
lock
push
jle
popa
lret
mov
in
loope
dec
sbb
fnstenv
loopne
and
cld
mov
jmp
cli
ljmp
sbb
lods
push
or
packssdw
das
in
inc
fwait
loope
push
mov
outsb
add
xor
sbb
std
push
add
push
dec
shrb
and
fcomp
cmp
fdivr
mov
cmpsb
ret
pop
js
sub
dec
cwtl
push
pop
inc
cmp
popa
cmpsb
push
and
jmp
jne
popa
jl
imul
push
mov
push
clc
xchg
pop
push
cmp
sub
dec
add
cmpl
cwtl
inc
shr
mov
xchg
sbb
mov
add
mov
push
sbbl
push
sbb
pop
mov
jmp
rorl
inc
sub
fs
xchg
jmp
dec
pop
inc
sub
pop
sub
dec
xchg
mov
adc
movb
inc
rorl
lea
jl
mov
and
dec
sbb
dec
ret
add
xor
inc
clc
sub
pop
cmc
add
jl
push
fmulp
mov
mov
daa
lea
jecxz
cmp
je
ret
xor
imul
clc
add
xor
hlt
cwtl
imul
and
and
cmpsl
pop
pushf
mov
add
inc
add
lcall
xlat
sbb
cmp
xor
pop
aas
lock
mov
adc
arpl
fdivrl
stos
xor
shll
jmp
sbb
push
int
mov
adc
and
out
adc
sbb
add
inc
add
cmp
mov
mov
pop
add
pusha
and
or
jo
mov
bound
mov
jge
mov
mov
ljmpw
clc
xchg
stos
stos
and
fdivrs
mov
adc
cmp
cmp
and
mov
bnd
add
lock
or
popa
and
add
add
aam
ret
push
inc
cmpb
call
sahf
mov
adc
add
icebp
xlat
ret
jae
ja
push
sub
daa
movsl
pop
lea
mov
movsl
xchg
jo
pop
push
stos
mov
xor
add
cmp
xor
fwait
jp
enter
hlt
or
xorl
xor
or
pop
push
pop
and
movsl
sub
cmp
pop
addr16
adc
div
push
in
cmpsl
in
adc
adc
xlat
mov
mov
add
cmp
add
sarl
mov
imul
mov
inc
mov
jle
je
mov
je
sub
dec
mov
fwait
push
mov
push
hlt
pusha
mov
or
mov
xor
pop
jo
sbb
mov
mov
mov
adc
leave
mov
fisubs
movsl
push
adc
nop
out
and
hlt
inc
aas
fisubrl
jo
jp
xor
or
inc
es
lods
fld
add
or
xor
test
push
int3
sub
mov
pusha
rol
add
mov
loopne
loope
out
out
ds
adc
xor
imul
mov
std
std
ljmp
je
cmp
jl
cmp
jg
inc
jmp
popa
cmp
inc
pop
fcmovu
fxch
xchg
dec
add
pop
push
or
nop
out
and
mov
or
neg
xor
adcb
xchg
je
jno
jns
add
adc
xlat
add
cs
jo
sub
aas
stos
popf
mov
int3
repnz
adc
xchg
test
mov
fsubrs
pop
pop
mov
mov
xchg
push
sbb
fisubl
jbe
xchg
nop
jne
adc
xor
mov
push
fisttpl
sub
add
popf
push
adc
and
in
std
ret
and
ds
sti
or
jne
adc
js
cmp
faddp
sbb
iret
insb
ja
insb
mov
cmp
add
add
push
jmp
push
add
icebp
or
in
ret
mov
sti
and
push
xchg
mov
jl
pushf
sbb
cmp
push
add
jge
cmp
jl
mov
sbb
jge
lret
enter
ret
adc
pop
mov
jle
push
xchg
testl
mov
jne
push
out
mov
daa
shrl
out
jns
mov
sbb
sbb
add
scas
pop
sbb
daa
sbb
bound
cmpsl
aad
add
mov
mov
adc
and
shrb
push
sar
mov
ljmp
stc
push
add
lea
testl
sbb
push
sbb
push
pop
sub
add
xor
stc
jmp
sbb
lods
mov
jne
bound
loopne
jns
mov
rolb
call
sub
jmp
fwait
loopne
xchg
adc
pop
adc
mov
sub
fstpt
or
fstpt
sub
sub
fsincos
sub
mov
jle
mov
push
lret
add
or
jmp
mov
jecxz
insl
inc
and
add
push
cli
movb
adc
lods
adc
test
sbb
push
mov
adc
mov
aad
mov
and
rorb
sub
jle
popf
jl
pop
aas
pop
cmp
notb
or
xchg
in
sub
popf
push
inc
addl
xchg
out
jmp
sti
jnp
push
jge,pn
and
movsb
out
jle
insb
mov
push
or
or
or
cmp
ret
int3
mov
cmpl
push
shld
shl
inc
rol
and
shl
and
pop
mov
or
xor
add
pop
adc
pop
mov
test
push
add
pop
fistps
or
push
mov
mov
ret
inc
mov
notb
je
decl
das
inc
fisubl
adc
mov
shlb
mov
nop
pushl
or
add
popa
loope
push
or
pop
xchg
sbb
xchg
shlb
or
lea
lock
lea
outsl
test
lods
lcall
test
cmpl
fstps
ja
loop
das
movsl
push
jae
jae
out
fists
adc
add
or
dec
mov
add
add
add
test
mov
ds
jle
mov
test
add
adc
out
lahf
dec
add
call
or
pop
sbb
clc
pop
je
cmp
ja
sets
pop
pop
test
pop
mov
and
add
adc
int
xchg
add
add
test
addl
mov
pop
lahf
into
or
je
push
or
testl
add
ror
mov
or
jne
or
ret
add
push
add
pusha
sub
push
ret
adc
jecxz
sub
std
not
test
jne
cmp
jge
lea
cmpl
cmp
rolb
bnd
imul
nop
push
xchg
mov
pushf
cltd
adc
cmp
sub
adcl
push
or
std
lds
sbb
add
add
mov
pop
jp
add
pop
cwtl
loopne
adcb
ret
pop
cltd
addr16
fldenv
je
push
inc
mov
pop
add
loope
dec
loop
mov
test
pop
mov
push
push
sbb
fwait
add
mov
push
inc
mov
mov
cmp
push
pop
std
enter
stos
mov
sub
push
fcoml
aaa
mov
movsl
mov
pusha
cmp
mov
orl
stc
ss
fs
xchg
or
push
pop
aam
xlat
pop
in
push
jp
cli
add
add
dec
and
cmp
mov
pop
out
mov
fxch
sub
mov
mov
call
mov
xchg
push
fwait
ud2
pop
std
mov
jne
xchg
hlt
push
pop
mov
leave
pop
fwait
mov
lock
jl
orb
dec
ret
xor
clc
add
jns
inc
imul
mov
rorl
mov
pop
addb
dec
pop
adc
add
std
adc
or
sub
push
cli
sbb
ljmp
xor
notb
pop
add
cmpb
imul
jge
fstl
add
sub
ja
push
xchg
mov
out
add
xor
or
jbe
cli
xchg
dec
xchg
loope
jge
cmp
fdivs
aas
sub
or
in
xchg
test
push
sub
mov
xor
sbb
push
adc
pop
jl
movsl
popa
or
push
jo
sbb
ja
add
idivb
adc
andb
inc
add
inc
sbb
cmp
adc
daa
shl
inc
std
jo
mov
or
mov
jg
inc
fldcw
cmp
or
jne
and
xor
push
jecxz
cmp
inc
inc
fdivs
inc
dec
fidivs
js
ljmp
imul
in
and
adc
pusha
movsl
loop
jg
test
jle
movb
test
mov
jle
inc
or
fcmovnu
add
rolb
pop
mov
inc
jg
fmuls
jne
insb
or
adc
call
cmp
iret
jmp
mov
pop
incl
jmp
push
imul
add
mov
push
cmp
jns
hlt
pop
push
iret
scas
add
sub
movsl
and
outsb
scas
mov
mov
pop
mov
movswl
add
mov
insl
dec
scas
sub
mov
mov
jp
and
and
inc
sub
rcll
add
setl
lods
pop
push
ret
outsl
dec
mov
push
or
getsec
adc
clc
push
dec
scas
rcrl
stos
data16
dec
dec
add
lods
adc
inc
or
loop
cli
xchg
sti
inc
ret
adc
leave
mov
shr
or
lea
mov
push
add
add
and
jae
fisttps
iret
cltd
dec
or
xchg
jno
xchg
xor
push
push
xorl
add
loopne
fcom
push
adc
mov
mov
sub
arpl
cmp
cmp
jl
loop
jnp
adc
dec
push
cmc
inc
cmp
popf
mov
mov
in
and
das
inc
push
cmp
lock
es
xchg
jno
dec
icebp
push
mov
js
sahf
hlt
dec
js
das
idivb
insb
mov
lea
cmp
adc
xor
fwait
icebp
mov
add
clc
cmp
push
sbb
and
das
ljmp
leave
jno
xor
jno
mov
or
mov
add
jmp
shl
movsl
or
dec
jo
iret
out
jae
pop
cmpl
mov
pop
pop
ss
or
js
dec
aas
dec
xchg
mov
jne
push
push
jmp
or
jmp
negb
add
adc
xor
inc
mov
pop
in
dec
nop
sub
leave
or
xor
and
add
je
adc
stos
sub
repz
and
push
push
push
push
mov
clc
orl
adc
in
testb
fsubrl
add
sub
shll
jns
push
shl
pop
jge
ret
rcrl
jg
mov
xor
push
sbb
je
sub
add
push
rcll
xlat
jae
mov
call
mov
jmp
andb
or
push
cmp
pop
aad
test
mov
push
fsubs
adc
pop
and
sub
int
rcl
sub
daa
int
sbb
and
in
fwait
lea
inc
jmp
cmpb
je
or
je
xor
inc
adc
adc
mov
adc
cmp
xchg
pop
sbb
imul
idivb
je
fildll
iret
push
push
cmp
movsl
roll
outsb
aad
jle
fwait
aaa
adc
mov
add
sbb
push
insl
je
pop
bound
call
pop
add
pop
movsbl
inc
xchg
and
inc
mov
outsb
mov
or
mov
jo
in
push
testb
les
add
orl
repz
mov
push
cwtl
pop
fidivl
test
push
hlt
mov
fwait
jecxz
loop
sub
in
push
pop
or
cwtl
cmp
lcall
sub
leave
js
push
pop
aad
lock
mov
fcom
mov
dec
incl
or
push
add
fwait
clc
negb
pushl
cwtl
mov
mov
repz
fwait
js
or
add
js
je
inc
loopne
div
add
lcall
adc
aas
and
push
popa
add
je
jmp
insl
adc
adc
loopne
cmp
sbb
mov
jb
pop
sub
iret
or
inc
sbbb
push
int
xchg
sbb
xchg
pop
adc
repz
dec
xor
fs
inc
test
rclb
inc
push
sbb
jb
xchg
inc
push
xor
and
fidivs
or
std
lahf
jmp
ss
push
push
xor
inc
in
and
mov
arpl
test
sub
sahf
pop
les
or
sbb
push
xchg
push
pop
mov
adc
loopne,pt
bound
inc
and
xchg
cltd
mov
add
and
les
pop
leave
div
xchg
cmp
adc
test
mov
repnz
jge
xor
gs
inc
and
pop
sub
pop
loop
xlat
data16
mov
dec
and
jne
lret
aad
xor
pop
aaa
and
xor
mov
push
xrelease
hlt
dec
inc
pushf
ret
rorb
push
push
push
push
mov
pusha
jae
nop
shlb
inc
dec
test
hlt
dec
outsb
jecxz
in
or
push
mov
rorb
mov
and
pop
lcall
clc
rorl
insl
mov
mov
ja
pop
ffreep
mov
sbb
jle
push
pop
dec
dec
adc
aad
mov
adc
cmpsl
mov
pop
mov
daa
xchg
fcmovb
pop
xor
sar
inc
das
testb
dec
hlt
sub
repz
add
pop
inc
pushl
pushf
sbb
and
add
mov
mov
loopne
ds
bnd
cmpsb
sbb
push
stos
mov
xor
pop
je
push
cmp
test
popa
jmp
and
mov
insb
ds
jae
subl
or
cmp
pop
jbe
and
or
jo
dec
jae
mov
mov
aaa
leave
cmp
adc
mov
aam
xor
add
into
jae
push
nop
adc
adc
or
call
add
pop
sub
sar
pushf
pop
lea
adc
add
incl
sub
popa
dec
xor
das
or
and
xor
inc
into
add
mov
lea
shr
or
mov
cmpsb
jo
shr
shl
push
pop
push
ja
mov
mov
jp
jmp
out
rol
or
out
ljmp
lock
xor
adc
test
dec
inc
push
adc
push
or
or
push
jle
mov
movsl
movsl
push
movsl
sub
mov
mov
adc
test
insl
and
decl
add
adc
pop
cmp
aas
dec
add
mov
aam
mov
xchg
int
test
mov
jae
dec
mov
mov
lret
jnp
aaa
insl
cmp
pop
jmp
data16
pop
data16
lods
loope
or
popa
loopne
dec
jp
movsb
fcomi
rcrb
hlt
or
lock
push
xchg
fsub
aam
sbb
dec
in
mov
test
mov
and
lods
lahf
ss
stc
or
mov
or
push
sbb
or
xchg
pop
cmpb
out
fists
sti
xor
cmp
iret
jns
add
cmp
sbb
loopne
sub
jnp
lock
push
sub
jbe
pop
xchg
inc
sbb
lcall
cmpsl
ret
sahf
pushf
fidivl
add
stc
cmp
mov
or
push
inc
mov
cld
sbb
adc
gs
imulb
sti
dec
push
cmovp
int3
mov
call
pop
push
lcall
add
push
cli
cmp
or
arpl
jo
clc
mov
les
push
stos
negl
andb
jae
mov
js
mov
xor
lock
jmp
adc
xlat
mov
add
push
iret
mov
jb
fwait
test
sbb
add
xor
xchg
outsl
in
lock
adc
add
xor
mov
adc
inc
xlat
stos
notl
dec
dec
push
pushf
mov
je
push
js
cmp
loopne
jge
gs
cwtl
add
xchg
stc
sub
push
or
pop
dec
adc
inc
jmp
lock
mov
mov
fdivs
mov
cmpsl
sbb
dec
sbb
cmp
sub
adc
mov
add
pop
sub
rclb
stos
mov
je
rolb
push
adc
jg
mov
insb
add
rorb
dec
lods
imul
psraw
mov
jbe
mov
inc
mov
mov
dec
inc
dec
adc
xchg
mov
lret
add
fwait
cmp
xorb
dec
mov
lock
sub
add
lret
pop
mov
sbb
sub
mov
cmpb
aam
push
adc
cli
adc
xchg
dec
cli
repnz
aam
xor
mov
sbb
cmp
and
cs
xor
ljmp
lret
repnz
ret
mov
sbb
mov
adc
pusha
adc
cmp
or
pop
mov
js
loop
mov
inc
or
fcmovbe
add
inc
dec
jp
lcall
sbb
in
and
lcall
jle
push
or
mov
lock
or
outsl
test
lcall
pop
in
out
lcall
in
aaa
test
sti
out
aas
jne
das
add
add
add
mov
or
push
mov
sbb
jne
andw
xor
pop
jo
in
add
fdivs
xchg
ret
cmp
test
cltd
adc
maskmovq
je
xchg
adc
inc
jns
inc
sub
adc
cmp
push
and
lcall
mov
in
ja
fcmove
add
jl
add
aas
sbb
jmp
movzwl
iret
push
clc
push
incl
sbb
adc
out
or
lock
jb
pop
or
mov
dec
or
testb
mov
inc
aas
xchg
movswl
mov
xor
cmpl
jp
lret
xor
notb
jmp
lods
add
adc
lods
xor
js
fnstcw
and
and
pop
fidivrs
push
xlat
cli
and
out
ds
cli
or
clc
rorl
sub
sbb
jne
arpl
add
xor
xor
or
fsubrp
dec
xor
shrb
jle
repz
sub
and
mov
push
mov
pop
sub
cmp
leave
inc
jecxz
pop
sub
xor
out
mov
jne
cmp
mov
popl
add
xor
shll
loop
pop
or
dec
jmp
xchg
adc
lcall
add
ret
sub
mov
mov
cwtl
jp
sbb
pop
push
xor
push
jle
pop
add
andb
rorl
clc
inc
pop
outsl
or
mov
xor
popa
popf
mov
sub
les
add
fisubs
dec
arpl
jmp
sbb
jge
in
hlt
daa
cld
cld
sbb
sbb
mov
aaa
and
aaa
lock
add
sub
and
cmpsb
add
stc
loop
add
mov
and
les
lret
and
es
in
or
add
lret
or
mov
lcall
inc
adc
hlt
and
hlt
or
jne
or
xchg
push
lods
icebp
andb
sbb
push
or
lods
in
pop
out
adc
or
dec
dec
add
out
dec
xor
adc
insb
push
cwtl
mov
nop
add
repz
xchg
es
rclb
or
popa
add
aaa
hlt
jnp
sbb
inc
pop
cmp
inc
enter
xchg
mov
or
and
add
ljmp
sbb
pop
insb
outsl
add
test
or
dec
fs
insl
jne
push
nop
or
or
xorb
outsl
push
int3
xchg
sbb
xlat
addl
cmpb
jne
sti
imul
fwait
pushf
inc
jge
stos
pusha
pop
shll
push
outsb
cmp
xor
and
xor
cwtl
pop
dec
pop
add
lods
int3
adc
mov
lahf
shr
mov
adcl
xor
add
and
frstor
ds
push
sbb
mov
popa
pop
ret
pop
xor
adc
insb
out
jno
loopne
das
push
pop
dec
cltd
test
fnstsw
lods
inc
mov
shll
outsl
in
out
je
das
cmp
dec
jb
inc
jp
adc
mov
inc
bound
out
jne
mov
or
jmp
sbb
dec
rorb
mov
cmp
xchg
in
inc
or
lds
ret
and
test
push
jl
into
xor
mov
std
mov
aas
ja
push
fwait
mov
lret
push
clc
roll
imul
sub
jbe
pop
mov
movsl
jg
jecxz
popa
push
cmp
adc
add
xorb
dec
ror
push
mov
push
testl
jle
add
sbb
call
pop
arpl
pop
adc
sub
xchg
outsl
add
insl
push
mov
cld
out
xor
pop
addl
sub
insl
hlt
add
call
adc
roll
or
jg
add
rcrb
or
mov
or
jg
mov
cmp
gs
loope
cmpsb
jle
or
fadds
add
jnp
add
and
dec
and
jmp
in
lcall
xchg
mov
mov
xlat
lock
ficomps
testl
adc
sbb
mov
or
sbb
xchg
por
inc
loop
test
dec
jae
out
ret
std
pop
jecxz
or
mov
pcmpeqw
or
rcr
lds
xor
frstor
sub
loope
movl
arpl
orl
mov
clc
adc
pusha
cmp
je
jge
shrb
push
daa
lods
inc
sub
adc
jnp
push
loopne
or
jne
cli
aaa
jo
push
jg
and
ljmp
sub
xchg
lock
or
or
xor
push
aaa
jl
xlat
cs
loopne
jae
lea
mov
pop
in
mov
pusha
mov
ljmp
loope
xor
test
js
push
sbb
add
mov
add
or
testb
xchg
pop
filds
pop
jne
push
mov
add
and
xor
jmp
cmp
cmp
out
rorb
sbb
push
push
xchg
decl
jle
push
xchg
je
movsb
in
sbb
inc
and
inc
sub
mov
test
inc
jnp
mov
jp
xchg
popf
add
pop
dec
push
inc
pop
or
cwtl
sbb
and
mov
jle
sbb
idivl
aaa
les
fcoms
dec
jns
pop
push
xchg
inc
sbb
std
lret
add
cmp
je
push
js
pop
mov
fxch
or
cmp
jbe
inc
orl
or
jp
leave
and
xchg
sbb
and
jbe
int
loop
js
nop
jno
int3
and
or
push
dec
inc
adc
aam
pusha
test
aas
cmpsb
pusha
enter
cmpsb
rorb
dec
addr16
testb
xor
cmpsb
jns
xchg
out
repnz
popa
dec
in
stc
inc
out
mov
ljmp
cmp
loopne
sub
es
inc
push
sub
test
push
add
mov
repz
push
lea
mov
les
icebp
dec
sahf
sbb
sbb
sub
ret
xchg
xor
jmp
mov
je
push
mov
outsl
or
je
popa
and
cmp
mov
jmp
dec
sbb
inc
fstpl
ss
push
xchg
loop
cmp
cmp
xor
aad
test
add
and
loop
jns
div
je
mov
addr16
xor
sbb
dec
xchg
imul
push
ljmp
mov
cmp
mov
jno
mov
or
out
jmp
mov
xor
pop
and
call
jmp
pop
mov
mov
xor
jp
popa
fidivs
cmp
dec
adc
or
clc
or
mov
fs
popa
or
add
fimull
push
adc
push
cmp
mov
sub
pop
or
roll
fistpl
fcomi
shll
fcoms
movsb
mov
pop
loope
jp
aas
fisubrl
and
in
outsb
test
cmp
push
add
mov
mov
int
add
push
sbbl
cwtl
add
leave
xchg
lock
mov
xor
pop
add
adc
stos
push
push
jmp
add
or
cmp
jge
pop
movsl
sub
adc
inc
mov
sbb
or
shl
bound
add
jne
push
cmp
dec
jecxz
arpl
xchg
fildl
das
aad
sbb
rorb
mov
mov
inc
mov
sarb
push
adc
jmp
idivb
out
and
or
adc
ret
or
popa
rcrl
cmp
aas
push
xchg
adc
jecxz
mov
add
mov
mov
or
ficompl
repz
cmp
mov
xor
sbb
nop
mov
ljmp
push
adc
sub
mov
inc
out
or
lock
inc
push
jbe
cmpb
loopne
mov
movl
xchg
sbb
cmp
fdivl
jns
pop
add
lret
out
push
push
sub
jle
in
rorl
push
sbb
into
rcl
mull
mov
iret
into
pop
or
mov
bound
mov
test
add
jo
stc
adcl
inc
or
and
cmp
mov
mov
dec
repnz
jg
add
loop
adc
mov
cwtl
push
clc
and
in
lods
iret
mov
inc
sub
jb
in
leave
out
test
cmc
lods
subb
or
add
adc
sub
add
and
inc
into
sti
addl
repz
push
aaa
push
sbb
or
movsl
idivb
cmp
jns
loopne
outsb
imul
xor
pusha
adc
xchg
jmp
add
xor
cs
add
adc
or
jno
inc
sahf
cmp
je
mov
sbb
cmp
jmp
test
push
sbb
inc
mov
mov
mov
push
mov
cmp
test
cmpb
test
cmpsb
adc
mov
dec
pcmpeqd
xor
int3
pop
xor
push
adc
or
xor
or
sub
stos
sahf
push
jns
mul
iret
int3
int3
push
adc
in
or
cmp
adc
in
jmp
add
lock
lods
lahf
lods
adc
add
dec
add
push
jg
jmp
das
and
push
push
das
xor
xor
je
and
push
stc
ljmp
popa
je
outsl
outsb
cmp
dec
outsl
sbb
add
outsb
pop
mov
add
aas
push
add
aas
inc
mov
cmc
aas
dec
out
ja
call
insb
outsl
imul
jne
pop
fs
mov
xor
jbe
arpl
lock
stos
or
imul
add
push
add
fucom
std
push
add
add
add
and
cmp
pop
fwait
mov
decl
add
xor
push
push
pop
push
and
add
pusha
push
push
jo
js
pop
sub
add
std
lods
std
jle
add
add
jne
insb
add
repz
insb
insb
jp
dec
mov
push
xor
pop
js
pusha
mov
fs
pop
push
neg
mov
popa
bound
fs
cmp
ds
push
flds
insb
je
femms
add
imul
and
xor
pop
inc
mov
dec
addr16
pand
mov
mov
xor
ja
sti
jg
cli
imul
inc
push
incl
lock
cmp
dec
jae
jb
add
adc
leave
jne
sti
outsb
xchg
pop
sbb
clc
dec
inc
push
dec
inc
dec
xor
xchg
xchg
ja
out
ds
loop
lahf
les
pop
mov
das
mov
clc
inc
push
inc
outsl
pop
inc
in
in
sub
push
das
insl
imul
subl
outsl
cmpsb
jns
xor
jl
push
push
out
repnz
jmp
shll
imul
jb
push
dec
dec
add
inc
fistl
sbb
push
dec
dec
inc
sbb
testl
xor
cmp
sub
rol
lret
bound
and
sahf
mov
mov
outsl
dec
aaa
outsb
outsl
icebp
fildll
addr16
inc
insw
pop
sti
pusha
out
jmp
imul
outsl
ss
fs
mov
xor
jbe
sub
mov
dec
arpl
ret
sbb
mov
cmpl
or
les
xor
out
outsl
jo
mov
pusha
outsl
fs
and
push
or
cmp
xchg
or
insl
mov
pop
pop
jb
pop
insb
outsl
arpl
xchg
imul
fnstsw
dec
xor
cli
pop
add
xchg
or
jb
insl
inc
xchg
insl
insl
lds
pop
xor
lahf
and
cltd
call
mov
add
sub
addr16
lcall
push
outsl
or
mulb
je
and
decl
clc
cmp
sub
jae
inc
sub
and
jnp
mov
bound
jns
or
lock
mov
push
test
sbb
add
sahf
call
pop
imul
outsb
ds
adc
jns
jmp
push
push
and
push
dec
xchg
ret
inc
jno
jns
cld
loopne
dec
dec
add
gs
adc
jbe
xchg
dec
mov
push
pop
shll
stos
mov
push
inc
gs
lahf
je
movsb
jbe
jo
add
std
in
es
push
mov
xchg
popa
addr16
outsl
js
xor
push
aaa
jb
testb
add
dec
dec
inc
add
rep
cmp
jae
ja
push
loop
pop
mov
cmovo
clc
cmp
mov
outsl
cmp
pop
pop
ds
mov
push
dec
stos
pop
sub
shll
pop
jbe
and
outsl
or
clc
add
daa
mov
dec
cmpsb
pop
xchg
rcll
fadd
lds
call
xorl
nop
inc
pop
adc
adc
pop
sbb
xlat
das
xor
xorb
add
mov
pop
add
insb
jnp
or
daa
addr16
repz
fdivs
sbb
sbb
call
or
sub
and
cmp
pop
pop
sbb
popa
pop
push
fmuls
leave
or
pop
dec
fiaddl
add
mov
xor
fmuls
pop
sub
add
or
pop
cs
add
pop
cmpxchg
iret
mov
inc
rcrl
or
es
cs
pop
aas
sbb
mov
and
insb
or
not
mov
nop
pop
out
vucomiss
lock
scas
add
lods
rdpmc
nop
pop
jnp
xchg
dec
pop
inc
inc
fisubs
inc
xlat
fidivs
enter
pusha
lods
mov
or
enter
jl
jo
repnz
add
lods
into
and
rcll
or
xlat
pop
nop
xchg
dec
andb
andb
jmp
repnz
add
sbbl
xlat
pop
sti
cs
pusha
pop
subb
pusha
pop
xchg
dec
sti
xchg
add
insl
xor
xor
pop
sub
xchg
or
add
adc
add
add
xor
xor
adc
add
jg
mull
jae
xor
adc
push
gs
outsb
gs
cmp
push
in
xor
dec
and
ret
in
sub
sub
in
xor
inc
pop
leave
addl
adc
in
cmp
push
popa
jae
xor
je
adc
and
add
bound
out
ja
je
cltd
pusha
imul
mov
fadds
jo
dec
adc
push
mov
cmp
xor
insl
xchg
aas
sbb
popa
insb
push
fs
and
out
adc
pop
push
inc
inc
dec
pop
inc
js
insb
outsl
fidivrs
dec
je
add
xor
mov
popa
imul
out
out
popa
jb
jae
jb
add
fdiv
cmp
push
push
aaa
push
xchg
mov
push
inc
je
popl
xchg
data16
jae
gs
outsl
lea
pusha
cs
push
js
shll
dec
push
test
frstor
cmp
add
fdivl
pop
pop
and
int3
inc
mov
mov
sub
sbb
sbb
jne
sub
outsb
lock
loopne
push
out
inc
mov
jne
sub
sub
xchg
push
cmpsb
xchg
int
mov
xchg
addr16
scas
dec
dec
pop
mov
xchg
pusha
adc
add
sub
stos
adc
jg
add
aam
adc
pop
dec
dec
inc
add
mov
lahf
call
dec
pusha
jnp
jb
xchg
add
add
add
dec
push
push
iret
xor
std
int3
inc
fs
mov
pusha
pop
or
aaa
jo
xchg
jl
add
inc
push
icebp
sub
adc
jb
mov
aas
testb
inc
addr16
test
or
pusha
fiadds
mov
inc
dec
push
pushf
mov
sarl
xchg
xor
sub
add
jp
xorb
enter
fcomps
inc
lcall
int
mov
int
ds
mov
pop
movsl
cmpsb
xor
xor
inc
out
push
pop
nop
inc
adcb
scas
sbb
cltd
push
dec
mov
xchg
jo
adc
enter
add
or
adc
loopne
vmread
or
aaa
jo
cwtl
bound
dec
rclb
test
scas
xor
xor
iret
das
inc
adc
adc
out
shlb
and
mov
add
jmp
mov
test
iret
xor
orb
mov
das
push
fcomp
or
ret
fildl
pavgb
adc
cmpsb
sbb
cs
je
repz
push
ja
mov
subps
add
inc
add
int
xchg
push
add
xor
cwtl
pusha
push
outsl
add
and
sub
scas
sub
add
sub
jmp
pop
mov
into
int3
loopne
jg
mov
add
xchg
mov
add
sbb
ja
mov
xlat
push
pop
and
jo
pop
gs
popa
jo
jb
jmp
add
clc
fcoms
jg
popa
mov
out
call
inc
jb
cmp
pop
push
sbb
aaa
adc
add
and
sub
decl
push
push
dec
push
dec
and
dec
inc
push
inc
dec
and
dec
inc
dec
dec
add
adc
pop
mov
jb
jne
sbb
dec
cmp
xor
xor
adc
dec
and
xor
jae
xor
sub
or
js
adc
inc
and
negb
in
inc
inc
inc
or
inc
inc
inc
add
outsb
mov
push
add
jl
es
inc
inc
inc
addb
dec
dec
cmp
push
jmp
push
push
push
push
rcrl
popa
bound
gs
sar
push
insb
insl
outsb
outsl
jo
jb
je
jbe
js
jp
test
xor
ss
cmp
adcl
sub
lock
call
or
arpl
notl
repnz
jge
call
push
call
aas
push
push
push
cli
xchg
inc
call
add
inc
js
mov
std
xor
jbe
mov
mov
xor
clc
mov
push
add
loope
push
lret
loopne
call
and
or
pop
jl
inc
cmp
addl
dec
andl
out
xchg
rcll
ret
xor
pushl
mov
lds
xor
leave
mov
mov
repz
je
inc
jmp
add
icebp
aas
push
popl
pop
popa
ret
pusha
mov
ja
cli
mov
fs
cmp
stos
or
clc
mov
cmp
das
lods
jmp
iret
push
add
testb
add
mov
mov
push
add
lret
cltd
jg
adc
push
add
sbb
inc
and
mov
add
add
xor
std
sub
movaps
lods
flds
ror
add
jge
decl
jl
and
loope
and
mov
mov
push
in
sbb
push
call
fsubs
jmp
out
les
dec
movsb
xchg
cld
call
repnz
out
mov
cs
xor
lods
test
lret
iret
mov
push
jecxz
mov
sbb
rcrl
or
arpl
xor
out
out
fists
sbb
mov
jmp
add
pop
xor
pusha
push
jmp
jl
std
loope
out
into
jecxz
cwtl
decb
push
andb
and
pusha
push
push
sub
add
lret
add
aas
mov
rcrb
das
adc
inc
arpl
and
xor
loop,pn
push
cwtl
mov
jne
repz
adc
add
and
daa
addr16
and
outsl
addr16
jne
pop
data16
and
sbb
jns
mov
adc
add
test
shlb
push
movsb
inc
sahf
in
adc
adc
cltd
xchg
and
add
sbb
orb
xchg
pop
js
push
add
mov
inc
cmp
adc
cmp
push
outsw
rolb
cs
add
cmpb
push
or
fisubrl
dec
xor
push
lahf
add
add
ss
inc
inc
inc
cmovo
fnstenv
add
adc
add
inc
adc
in
inc
sub
xchg
rcrb
mov
stos
add
adc
xor
jne
add
pop
add
out
inc
jmp
aas
add
cmp
data16
or
inc
add
test
and
bound
add
shll
clc
xor
adc
pop
jb
inc
sahf
popa
ss
pushf
and
push
lret
add
pop
imul
mov
pop
mov
lcall
ljmp
jmp
adc
inc
dec
lahf
lea
imul
sbb
lods
nop
add
nop
pop
add
mov
inc
cmp
and
enter
add
push
jno
jo
and
adc
outsb
iret
icebp
push
push
pop
add
add
push
jp
push
lods
mov
sbb
jecxz
lea
rclb
lea
stc
jnp
or
addr16
icebp
subl
sbb
pop
add
sub
sub
call
pop
xorl
sub
loop
in
out
jp
or
dec
out
pop
cmp
jle
xor
jmp
push
in
out
jle
rorl
out
ljmp
push
xor
cmp
aaa
out
ret
and
aas
cmp
decl
inc
jmp
mov
fcmovb
fists
mov
mov
add
stos
ljmp
sti
call
fs
aaa
add
inc
mov
jmp
loope
jl
imul
sbb
leave
popf
fnstsw
dec
enter
mov
dec
cmpsb
inc
fs
cmpsb
dec
sbb
cmpsb
mov
ss
jg
jg
adc
dec
or
pop
mov
or
fs
cld
mov
mov
push
xchg
shlb
jge
fists
xchg
outsb
push
jg
pop
nop
adc
out
jmp
fmul
mov
sti
les
mov
inc
sbb
mov
movsb
xchg
cmp
mov
insb
inc
out
pushl
inc
adc
insb
mov
loope
dec
movsb
outsb
ss
push
data16
lock
and
lret
outsb
aaa
ret
mov
push
mov
fdivp
cmp
push
dec
mov
adc
ja
sbb
call
xchg
imul
xor
in
jg
lahf
mov
xor
push
incl
stc
das
add
cmpsl
dec
mov
or
cld
ret
add
js
ja
jmp
in
out
sub
inc
jl
cmp
rolb
or
add
mov
mov
jl
inc
loopne
pop
sbb
push
push
and
adc
icebp
pusha
mov
xorl
cld
add
jb
xchg
ret
xor
push
pop
cmp
add
add
push
call
js
jbe
or
jae
pop
or
and
call
jg
aaa
in
ret
pop
pop
pop
push
sub
std
call
les
rep
mov
stos
push
push
push
push
mov
sbb
or
sti
test
std
les
ret
push
add
je
js
pop
mov
cld
xor
dec
and
rcll
ret
cmp
inc
das
sub
xor
jne
inc
and
int
inc
jge
sub
jmp
sbb
mov
int3
cmpsb
fbld
xorl
sub
fbld
sub
lds
jne
lret
add
and
mov
enter
and
cmp
aas
add
add
sub
adc
jecxz
pop
or
incl
data16
loope
jmp
cmp
imul
mov
and
and
cmp
out
and
jmp
std
gs
push
xor
les
xchg
insl
jo
or
cmpsb
les
pop
jb
or
addb
les
xor
sub
xor
je
push
mov
dec
push
dec
cmp
sbb
add
sbb
out
nop
adc
fadds
in
loopne
dec
inc
add
mov
dec
mov
mov
xor
fildll
xor
rorl
ss
imul
dec
leave
fs
sti
out
test
pop
and
daa
push
inc
dec
inc
push
push
pop
sbb
mov
ja
popa
jne
jne
in
mov
xchg
aas
scas
arpl
out
mov
fidivrs
push
outsl
bound
arpl
jns
insl
and
ds
popa
addr16
jbe,pn
jae
add
sarb
xchg
popa
inc
push
inc
outsb
inc
gs
dec
dec
add
jns
sbb
pop
inc
mov
ss
xorl
cs
lods
cs
testb
gs
mov
outsl
hlt
pop
inc
mov
outsb
je
cmp
jnp
sahf
pop
push
sub
aaa
xor
mov
divl
or
addr16
fs
or
or
js
insl
stos
cmp
mov
insl
arpl
sti
inc
jno
test
add
fcmovnb
loopne
insl
rcrl
inc
jg
or
leave
dec
movsl
mov
insl
inc
jne
jg
inc
mov
mov
pusha
imulb
das
daa
add
add
divl
fsubl
jo
push
mov
push
rcll
inc
outsb
cmovbe
aas
push
insl
jns
add
sub
adc
sub
aaa
jo
push
in
push
shll
das
add
add
xor
fwait
jno
pop
sub
jbe
mov
roll
jbe
push
sbbb
cmp
or
adc
cmpsl
sub
mov
imul
aaa
lahf
aas
or
mov
and
push
mov
fsubr
ret
mov
in
jo
stc
addr16
mov
jp
add
jns
jo
dec
dec
sub
rclb
aas
add
or
push
push
cld
push
clc
and
insl
jo
dec
dec
dec
dec
push
push
push
js
or
jns
pop
push
jmp
inc
push
das
dec
push
sub
jge
mov
or
test
inc
mov
sti
jg
dec
imul
and
cmp
xor
scas
jns
inc
jb
pop
add
jmp
out
test
add
jbe
pop
jo
xchg
arpl
jae
std
lock
sub
test
xorl
pop
inc
xchg
push
or
mov
or
xchg
bound
testl
loopne
lods
jb
notl
push
push
dec
push
dec
push
inc
dec
cmp
or
mov
jmp
push
mov
push
fcomps
mov
iret
add
add
stos
divl
add
shlb
xor
add
dec
es
cmp
add
and
and
xchg
jp
je
sub
insb
xchg
sbb
xchg
jp
adc
test
fmuls
cmp
jne
test
mov
push
jns
inc
cmp
cmp
loopne
std
jg
cmpb
adc
add
test
jg
mov
lret
adc
or
push
sbb
lahf
cmp
imul
outsl
outsl
lea
ja
xchg
mov
xor
push
inc
or
loop
xor
xor
andl
mov
ret
aaa
gs
sub
fbstp
je
popa
out
dec
pop
in
je
mov
xor
ret
xchg
jge
test
xor
or
sbb
inc
cli
inc
push
pop
and
fscale
int
sbb
inc
push
push
xchg
xor
dec
push
push
dec
pop
and
mov
js
pushf
pop
sub
cwtl
fstpl
pop
js
daa
sub
negb
pop
sub
or
scas
pop
subl
push
aaa
push
lods
movsb
adc
outsl
mov
inc
je
and
dec
and
notb
push
push
outsl
adc
jns
xor
fs
pop
dec
xchg
mov
subb
inc
outsb
push
pop
push
inc
enter
xor
and
arpl
shll
cmp
jns
push
push
inc
add
ret
mov
mov
scas
mov
loope
cmp
leave
out
punpckhwd
outsb
jns
je
cs
das
int3
sub
int3
xor
in
sub
outsl
pop
push
xor
xor
mov
or
push
push
inc
cmovo
jmp
and
ja
push
or
push
sub
and
test
sbb
scas
bound
mov
add
inc
dec
dec
cmp
push
nop
insl
jns
in
sub
push
je
insb
cmp
jnp
sub
jae
adc
js
out
movsl
je
cmpl
sbb
sub
repnz
and
test
imul
gs
inc
push
inc
outsb
call
add
dec
push
and
sub
imul
daa
inc
jmp
sub
adc
push
push
daa
mov
cmp
push
add
dec
test
pushf
stc
add
jns
add
and
jmp
cmpsb
movsb
cld
sub
push
subl
je
push
sbb
sbb
pusha
outsl
push
dec
test
sub
sub
xchg
jg
add
xor
fidivrs
sbb
fsubrl
push
cmpsl
lahf
cmpl
in
jge
dec
cmp
cmp
sub
sub
std
inc
inc
dec
inc
adc
inc
pop
adc
dec
ds
add
notl
mov
fs
cmc
jae
and
outsl
imul
xor
sub
inc
push
dec
jl
xor
and
jmp
lods
adc
insl
or
add
inc
test
mov
inc
cmp
movsl
add
inc
test
or
jnp
icebp
jae
lds
cmp
nop
jae
orl
sbb
stos
lock
repnz
shrl
scas
xor
cmp
pop
sub
xchg
daa
fmull
and
inc
inc
sbb
movsl
pop
adc
ja
xchg
imul
mov
xchg
xor
fs
or
inc
adc
or
or
popl
cs
je
sahf
psubsw
lock
jns
popa
mov
test
adc
push
movsl
insb
dec
inc
mov
push
xchg
fisttps
lds
pop
dec
adc
test
jmp
dec
push
adc
push
and
rorl
js
dec
pop
arpl
ds
mov
xor
jne
idivb
test
and
test
mov
out
dec
testb
inc
cmc
dec
push
dec
jge
mov
jbe
dec
lret
fbstp
pusha
rclb
stos
fldenv
jle
sub
or
pop
gs
adcb
and
rcrl
inc
dec
push
inc
aam
test
mov
mov
ret
lods
out
sahf
mov
mov
test
jo
xor
inc
inc
sbb
inc
adc
sti
es
dec
inc
sub
xchg
test
push
addl
mov
gs
in
mov
popf
push
and
push
test
mov
sub
xorb
shlb
imulb
or
mov
movsb
pop
pop
push
ja
icebp
push
dec
pop
test
jo
inc
aad
xchg
pop
pop
aam
push
aam
insb
pop
and
inc
loopne
ss
movsl
inc
pop
call
je
push
sahf
adc
xor
or
fwait
ja
jg
dec
inc
push
nopl
push
push
push
loop
and
jno
sbb
adc
fcoms
xor
das
inc
inc
fs
pop
sub
push
jo
mov
jo
inc
insb
inc
or
sbb
and
rclb
imul
pusha
loopne
mov
outsb
jae
insb
jne
into
pop
sbb
scas
outsl
insb
int3
nop
jnp
inc
dec
sub
mov
jne
jle
daa
push
test
fs
hlt
add
pop
ficompl
pop
mov
or
add
das
lods
pop
aad
mov
xchg
gs
test
insb
mov
nop
daa
push
or
mov
mov
daa
adc
jne
pop
pop
pop
rclb
xlat
lods
adc
outsb
and
fdivrl
adc
xor
sub
cmp
and
add
imul
inc
out
pop
cmpsb
in
popa
daa
push
xchg
mov
dec
dec
inc
dec
jb
push
jb
inc
daa
pop
insb
adc
out
and
sub
cltd
inc
dec
mov
cmp
jle
daa
mov
imul
jnp
adc
aaa
dec
ret
cmp
xor
xchg
mov
push
dec
ret
push
push
imul
pop
gs
mov
cmp
push
adcb
test
popf
push
shll
lods
add
aaa
insb
jnp
ss
cmp
aaa
fdivl
mov
push
repnz
imul
sbb
jae
push
outsb
push
push
nop
pop
inc
mov
push
cmpsb
sti
fiaddl
dec
cmp
insb
mov
inc
popf
ja
pop
push
testb
inc
mov
push
dec
fs
pop
sbb
dec
or
pushf
fnsave
push
inc
jae
arpl
daa
ss
push
movsl
inc
pop
cmpsb
in
stos
icebp
ja
xor
pop
dec
bound
test
mov
inc
pop
inc
imul
insl
lahf
inc
and
inc
insl
push
ss
mov
arpl
hlt
out
jo
iret
pop
mov
push
push
sub
or
jmp
js
push
xchg
jae
push
push
pop
mov
jae
jns
mov
inc
cli
jae
sarl
pop
sub
pop
xor
gs
dec
mov
mov
test
call
lret
inc
dec
fwait
mov
push
cmpsb
add
aad
push
outsl
imul
jnp
das
testb
jo
test
jecxz
out
or
movsb
ss
push
dec
gs
add
insl
or
push
push
bswap
dec
jno
mov
fisubl
popf
fstpl
and
int3
mov
test
jbe
aam
inc
or
mov
das
adc
gs
roll
sbb
mov
imul
push
mov
add
xchg
cmp
bound
ficompl
cs
mov
inc
adc
ret
lds
jae
jns
mov
adc
sbb
or
into
jno
scas
add
adc
jb
xchg
inc
sub
das
imul
pop
subl
jo
sub
sub
ret
aaa
fmull
xor
test
sbb
xchg
icebp
ljmp
dec
mov
push
xor
push
inc
pushf
lods
in
mov
inc
addl
dec
jbe
and
mov
inc
jns
or
jo
push
adc
add
sbb
subl
insb
xchg
mov
sub
imul
sub
sub
dec
adc
dec
inc
inc
inc
inc
inc
dec
inc
inc
push
mov
cmpl
pop
cmp
or
out
sbb
sbb
xchg
loope
pop
push
dec
roll
push
dec
fstp
in
push
sti
pop
xor
cmp
xor
add
mov
nop
pop
imul
imul
movsb
imul
xor
and
shll
js
dec
shll
sub
lcall
sbb
cmpsb
imul
cmpsb
imul
push
inc
sub
adc
int
imul
shll
nop
test
xor
je
pop
dec
cmp
ss
shll
sbb
or
sbb
cmpsb
pop
in
int3
rcrb
xchg
test
cmpsb
imul
imul
shll
lods
mov
nop
test
push
lcall
sub
adc
sbb
loopne
shll
cwtl
mov
xor
xorb
dec
cmp
dec
shll
sbb
cld
sbb
imul
imul
imul
lcall
int3
les
lods
mov
lcall
xor
sbb
add
push
dec
shll
test
xor
shll
xorb
xor
rcll
xor
sbb
imul
lcall
mov
jo
pop
dec
lcall
sbb
add
dec
mov
clc
adc
loopne
enter
shll
shll
push
xor
xor
les
test
mov
shlb
sub
ss
rcrl
add
adc
push
imul
cmpsb
imul
dec
inc
xor
sbb
mov
lcall
int3
xor
shll
mov
pushf
nop
shll
pop
push
dec
shll
or
shll
loopne
les
test
test
push
cmpsb
imul
adc
adc
lcallw
aam
cmpsb
imul
imul
cmpsb
imul
rcl
xor
rol
movsb
nop
xorb
xor
fs
dec
cmp
and
add
or
lcall
cmpsb
imul
movsb
imul
fwait
add
or
fmul
mov
mov
mov
xor
rcrl
sub
xor
ss
adc
or
xor
ror
mov
shll
inc
xor
adc
clc
or
imul
imul
imul
mov
lock
shll
nop
orb
dec
je
pop
dec
cmp
xchg
dec
shll
adc
hlt
or
imul
imul
imul
mov
adc
pop
lock
shll
movsb
pushf
dec
shll
fs
xor
shll
inc
xor
imul
cmpsb
imul
imul
cmpsb
imul
lcall
int3
shlb
cwtl
nop
test
imul
imul
dec
shll
int3
shlb
mov
shll
dec
inc
xor
ss
rcrl
or
hlt
add
cmpsb
imul
imul
cmpsb
imul
add
xor
mov
fmul
mov
dec
movsb
cwtl
mov
xor
shll
cmp
and
clc
add
xor
shll
movsb
cwtl
mov
xor
shrl
dec
cmp
xor
ss
sbb
add
xor
rcl
les
xor
jl
pusha
push
inc
cmp
dec
shll
sbb
add
incl
shlb
enter
mov
sbbb
ds
test
data16
dec
dec
push
dec
xchg
call
inc
pop
inc
xchg
addr16
adc
inc
inc
push
push
aaa
push
sbb
sti
insl
push
inc
dec
pop
inc
dec
push
adc
nop
sub
dec
dec
inc
push
sbb
inc
inc
dec
inc
out
ffreep
fmuls
pop
addl
test
mov
cmp
inc
inc
das
mov
insl
mov
pop
pop
dec
dec
inc
inc
dec
inc
push
dec
insb
or
mov
sbb
fidivrs
push
push
dec
push
rcpps
ja
cmp
fstpt
out
push
inc
xor
xor
push
pop
push
pop
imul
rcrl
push
insl
inc
push
push
outsl
divb
inc
inc
push
dec
push
inc
mov
outsb
fistl
push
inc
inc
dec
das
testb
pop
push
daa
outsl
dec
push
dec
sbb
fisubrs
lock
ss
push
ja
push
mov
movb
aas
pop
enter
inc
push
dec
pop
push
inc
inc
dec
sbb
sub
push
pop
test
dec
dec
inc
dec
pop
push
pop
pop
push
or
dec
mov
inc
fidivl
push
dec
push
in
sarb
push
xlat
rclb
pop
das
jb
sub
inc
push
inc
adc
daa
dec
lahf
stc
cmp
inc
mov
dec
push
ret
inc
inc
inc
inc
cmp
loop
pop
inc
inc
aaa
pop
sbb
pop
xor
mov
mov
test
cmp
pushl
not
xchg
ret
dec
cmp
das
push
push
lret
adc
mov
negl
insb
sbb
pop
ja
pop
fs
push
sbb
push
fstl
shll
dec
inc
addr16
and
push
mov
pop
dec
mov
fistl
mov
cs
insl
add
scas
ret
cmp
sub
arpl
pop
push
out
dec
ficompl
xchg
stos
xor
push
xor
divb
xchg
push
pop
pushf
add
dec
inc
dec
xor
arpl
shrl
pop
cli
loop
add
sub
movsl
sub
push
push
ret
shrb
inc
cmpsl
sub
mov
jae
inc
aaa
mov
and
insb
hlt
push
movsl
push
dec
clc
addr16
aaa
testb
dec
push
lods
stc
add
push
shl
push
xchg
jl
adc
movl
imul
pop
push
xchg
push
cmovbe
inc
dec
adc
ds
push
jne
popa
mov
aaa
dec
int
dec
popa
xlat
jg
inc
sbb
arpl
pop
jno
aaa
inc
pop
pusha
aas
neg
inc
das
inc
inc
dec
xor
es
inc
dec
dec
inc
push
rdmsr
sub
mov
xor
cmpsb
pop
nop
jbe
push
inc
xor
push
je
pop
inc
push
pop
jle
shlb
movsb
sbb
ret
pop
shlb
jg
aaa
rcl
jbe
jge
push
dec
das
mov
jge
push
popa
pop
cmp
pop
mov
add
adc
jno
data16
and
xchg
xor
push
cwtl
out
lcall
ret
inc
test
inc
push
outsb
shll
sbb
fildl
nop
mov
push
je
dec
in
jns
adc
sub
push
int
push
inc
pop
xor
mov
xor
push
shll
xor
movsl
jmp
out
dec
pop
adc
popa
fimull
pop
pop
dec
pop
sub
pop
inc
mov
dec
xchg
mov
dec
push
push
pop
fadds
cmp
dec
inc
adc
push
movsl
fdivs
mov
push
outsl
dec
daa
lcall
inc
scas
inc
aas
dec
dec
fmuls
dec
add
daa
push
mov
lahf
mov
fadds
sbb
dec
mov
push
pop
inc
daa
pop
in
dec
orl
jo
fcmovnbe
mov
iret
inc
inc
pop
xchg
push
and
dec
dec
mov
push
scas
loop
aas
incl
jnp
push
je
inc
push
test
jo
push
cmp
pop
xor
inc
mov
or
push
addr16
test
insl
sub
dec
inc
inc
stc
pop
inc
jo
in
addl
inc
gs
pop
dec
xor
fcoml
push
sbb
dec
inc
and
mov
mov
jb
mov
rol
push
inc
push
dec
inc
incl
inc
push
inc
enter
pop
sbb
inc
inc
inc
push
outsb
mov
push
subl
jle
and
dec
iret
inc
push
pop
dec
inc
cmp
xchg
pop
cmp
adc
and
das
push
add
sub
inc
xchg
mov
arpl
aam
push
push
dec
in
outsb
fneni(8087
xor
add
push
push
inc
inc
cmp
inc
or
jecxz
movsl
sub
inc
jo
xor
fdiv
es
adc
pop
push
push
inc
adc
xchg
outsl
and
jno
adcb
push
pop
inc
dec
mov
push
push
ja
pop
mov
test
inc
inc
cmpsl
iret
push
mov
or
ja
push
push
inc
test
push
arpl
adc
arpl
jo
pusha
mov
add
das
lea
or
mov
sbb
arpl
xchg
pop
xor
sbb
add
imul
inc
int
inc
lret
icebp
ret
gs
inc
pop
push
lods
pop
aad
push
sarl
inc
push
dec
lahf
loope
arpl
sub
inc
std
mov
inc
jmp
dec
push
xor
xor
aaa
pop
xor
lds
dec
cld
pop
test
mov
mov
sbb
pop
fsubs
xchg
dec
pop
pop
aad
test
dec
xor
aaa
ss
xor
add
movsb
sbb
jecxz
cmp
out
fiaddl
fistpl
mov
jecxz
mov
fadds
popl
jo
pop
inc
push
mov
push
pop
inc
xor
movsl
das
sub
jecxz
arpl
lcall
outsl
dec
aam
aad
mov
push
and
pop
inc
inc
or
dec
push
orl
pusha
jnp
sbb
rcl
jbe
in
push
xor
inc
loope
mov
jmp
stos
leave
xchg
pop
dec
addr16
add
outsl
dec
jo
rorb
or
jg
or
xor
stc
sbb
add
mov
pop
pop
daa
sub
mov
std
lods
push
pop
aaa
sbb
inc
dec
rcll
test
cmp
daa
xor
cmp
clc
xor
push
pop
mov
pop
pop
aas
pop
xor
pop
adc
pop
pushf
add
jp
pop
pop
call
pop
cmp
jge
aaa
inc
add
ja
push
scas
mov
push
test
cmpsb
repz
in
cltd
testb
incl
aaa
mov
hlt
pop
or
imulb
xchg
popa
movsb
jmp
jns
jle
dec
inc
dec
sbb
dec
mov
mov
leave
orl
in
jo
enter
inc
push
test
in
sub
jbe
push
cmpsb
xor
push
xlat
mov
push
push
inc
push
dec
push
dec
mov
cmpsl
mov
xor
xor
pusha
in
insb
dec
inc
pop
pop
mov
dec
pop
sti
pop
jecxz,pn
rol
sub
sub
insl
xor
xor
pop
lahf
jmp
xchg
dec
push
mov
loopne
xor
dec
dec
mov
mov
mov
sbb
pop
dec
dec
movsl
cmp
add
and
scas
nop
mov
inc
push
pop
mov
rcll
in
pusha
mov
adc
dec
rcll
xchg
push
or
xor
inc
mov
mov
inc
mov
mov
pop
outsl
adc
ja
mov
jno
repnz
dec
push
pop
aaa
dec
and
fsts
imul
push
popa
fisttps
inc
mov
fiaddl
dec
mov
jg
loop
jmp
xor
inc
pop
pop
ja
dec
sbb
inc
push
sub
pop
in
inc
push
movsl
insb
xor
mov
push
xchg
mov
and
sub
sbb
shlb
arpl
fcompl
outsw
imul
insb
sub
dec
dec
inc
dec
push
pop
jne
pop
lods
adc
adc
push
xchg
mov
lea
mov
pop
outsb
jnp
pop
and
mov
dec
dec
or
shlb
pop
dec
dec
dec
ja
sbb
dec
out
dec
sbb
add
pop
test
ja
dec
push
mov
inc
dec
pop
insl
fistpl
js
fstpl
subl
push
bound
dec
ret
dec
pusha
lods
push
orb
gs
jg
js
stos
dec
push
push
push
sub
xlat
sub
lds
dec
adc
testb
mov
mov
pop
pop
inc
pop
or
mov
test
dec
push
inc
popf
nop
jbe
dec
xor
test
inc
xor
inc
xchg
scas
add
stos
shll
dec
dec
add
push
push
add
push
mov
push
xor
inc
dec
shl
jae
inc
or
push
mov
mov
sbb
shlb
xor
xor
lea
pop
decl
push
lods
shlb
stc
push
out
mov
insl
pop
cmp
jecxz
ret
push
lock
cmp
mov
push
imul
lahf
cmpsl
nop
dec
adc
push
test
mov
pop
dec
push
inc
push
inc
adc
jne
les
xor
mov
fldt
dec
xor
pop
jbe
add
pop
inc
push
jecxz
inc
inc
cwtl
or
out
sbb
sub
pop
sbb
cmp
outsb
and
or
inc
cltd
arpl
test
add
mov
dec
loope
cmovae
inc
xchg
insl
sub
adc
jmp
xor
inc
pop
mov
dec
pop
daa
push
jg
cmpsb
or
push
sub
inc
xchg
push
aam
dec
pop
movsl
mov
test
xchg
mov
cmp
pop
mov
push
mov
pop
dec
adc
mov
movl
mov
outsl
xor
mov
or
dec
fadds
fcmovnbe
iret
pop
sbb
fldl
or
cs
sbb
dec
clc
add
dec
or
or
fmull
cmpsl
dec
sti
push
push
fimull
adc
xlat
cmp
test
scas
lods
arpl
dec
dec
push
aas
dec
ja
or
pop
mov
lret
sub
push
push
xchg
mov
cltd
lea
sbb
sti
arpl
sbb
mov
sbb
push
push
movl
sbb
addr16
dec
scas
adc
or
popf
sbb
sbb
test
pop
inc
push
push
push
aam
test
push
sbb
rol
push
mov
push
push
popa
in
add
xchg
xchg
xchg
adc
inc
insb
popa
ja
add
arpl
inc
inc
push
mov
xor
xor
ffreep
push
or
xor
cmp
rol
xlat
popa
mov
jmp
jbe
fstpt
sbb
shl
or
inc
adc
mov
pop
inc
jns
rcrl
add
in
sbb
imul
jg
aaa
addr16
dec
sti
test
pop
inc
inc
dec
mov
fcompl
sbb
push
movsb
rorb
inc
push
inc
push
dec
pop
xlat
test
psubw
js
pop
jbe
push
pop
pop
outsb
cmp
push
pop
repnz
push
dec
inc
push
xor
mov
mov
dec
das
fisttps
sbb
movsl
jne
imul
xorl
das
dec
mov
mov
inc
mov
dec
pop
or
inc
add
xchg
andl
push
loop
out
inc
cmp
mov
pop
inc
dec
addr16
jb
push
lock
inc
pop
fldl
pop
jo
adc
popl
add
pop
repz
sbb
push
call
pop
pop
pop
push
cmp
daa
cmp
sbb
dec
and
pop
jl
sbb
repz
pop
cmp
push
push
sbb
xchg
xlat
call
inc
push
mov
push
sbb
out
fwait
jg
and
ja
jle
xchg
push
jg
push
dec
push
inc
push
insb
cmp
inc
inc
xlat
pop
rcr
pop
ja
push
mov
aas
into
rolb
sub
fcmovnbe
lahf
pop
aaa
adc
fstl
iret
inc
sub
and
lahf
push
push
xor
es
push
out
inc
lea
inc
mov
adc
xorl
cs
scas
ljmp
arpl
jmp
push
xlat
imul
sub
mov
sbb
sub
jne
sbb
pop
inc
gs
dec
pop
and
nop
push
in
push
cs
sub
insl
testl
or
jp
pop
adc
mov
add
fwait
mov
or
test
fwait
cltd
int3
daa
add
jle
add
insl
daa
jne
sub
ja
add
jg
push
nop
imul
imul
jl
ret
mov
add
dec
xor
sub
pop
daa
add
xchg
cmp
xor
es
xor
xchg
adc
insb
xchg
push
jns
xor
dec
jae
ret
les
ljmp
fisubs
fcomp
sub
push
or
outsb
push
inc
sub
daa
xorb
mov
or
jecxz
xor
in
nopl
jae,pn
andl
insb
jne
jp
das
jl
jbe
mov
pop
inc
pop
xchg
and
or
push
cmp
or
mov
xchg
bound
roll
or
fadd
imul
inc
arpl
cmp
pop
dec
jae
insb
adc
imul
or
pop
or
outsl
jbe
bound
jmp
jg
push
ljmp
imul
mov
push
and
das
inc
push
and
and
aam
in
push
dec
mov
xchg
sbb
test
mov
hlt
and
and
and
and
or
out
cmp
xor
and
sub
scas
insl
outsl
fidivrs
push
data16
xor
sub
cmpsb
divl
push
cmp
outsl
adc
add
dec
dec
sub
inc
xchg
fldcw
fs
sbb
daa
and
dec
insl
or
mov
add
and
pop
xchg
push
aas
aaa
dec
cmp
or
aam
pop
pop
adc
add
mov
scas
dec
or
scas
cmp
stos
mov
hlt
sbb
loopne
test
fs
call
inc
fistl
dec
mull
mov
jmp
pop
jne
adc
outsl
dec
pusha
xchg
push
fildl
daa
adc
mov
pop
pop
inc
mov
xor
xor
xor
push
jo
mov
adc
insl
cs
mov
pop
jae
sub
int3
cmpsb
ficoms
inc
insl
fisubrl
popf
sub
add
js
jo
aas
xchg
jp
mov
cmp
das
inc
outsb
xor
je
mov
dec
inc
bound
or
lret
in
outsl
pop
mov
out
jne
pop
movsl
andb
cmp
shrb
pop
sub
scas
inc
jmp
outsl
loopne
and
xor
or
inc
insb
arpl
lahf
in
movsl
jge
and
adc
xchg
ret
test
or
xchg
gs
insb
scas
push
test
adc
ds
mov
jge
push
or
aaa
jbe
mov
dec
jmp
fisttpl
dec
test
dec
outsl
sbb
xor
ja
cs
push
lret
jo
lahf
xchg
inc
aaa
mov
mov
test
fildll
jbe
and
subl
je
jmp
lock
iret
sub
push
stos
test
gs
jecxz,pn
das
int
cmp
mov
jge
jge
jmp
cmp
popl
pop
add
outsb
aaa
mov
xor
add
jmp
pop
xchg
in
insl
mov
jecxz
addr16
pop
jns
pusha
add
or
push
imul
and
fbld
cs
inc
addb
arpl
out
xchg
sub
out
fcoml
xlat
in
aad
pop
mov
jns
enter
dec
jnp
pop
adc
xor
pop
rcll
rorb
push
push
insb
add
dec
and
popa
sbb
xchg
jmp
sbb
cmp
sbb
pop
inc
and
push
or
add
insb
push
adc
loope
scas
subb
pop
pop
jo
sub
xchg
inc
in
push
xor
pop
jo
loope
push
je
inc
pop
add
jmp
nop
sbbb
mov
lea
mov
outsb
pop
popa
push
pop
pop
jo
dec
std
mov
jae
inc
fsubs
sub
xor
mov
sbb
iret
push
pop
mov
xor
pop
push
pop
mov
mov
mov
test
or
outsb
or
aas
push
sub
push
outsl
loope
mov
push
insl
push
adcl
jb
popa
ja
and
mov
pop
sub
insl
fadds
jns
mov
loop
push
arpl
sbb
popa
icebp
rcrb
lret
sub
jbe
mov
xchg
jbe
jg
mov
and
mov
xchg
outsl
add
gs
js
scas
sub
fs
jno
jne
test
ja
push
les
ja
ljmp
ss
mov
das
fisttpll
adcb
inc
std
inc
xchg
add
lahf
add
dec
dec
jae
mov
inc
xor
xor
sub
aas
shll
out
push
roll
fistl
cmp
sahf
pop
jae
push
sub
inc
push
lds
push
add
or
xor
add
pop
pop
cmovle
popa
nop
push
lcall
outsl
jnp
xor
test
xchg
jae
jae
imul
mov
and
ret
jbe
fmuls
in
icebp
cmp
das
sbb
sbb
push
push
pop
push
out
add
imul
pop
insb
clc
ja
xchg
stos
lds
jmp
rcrl
int
adcl
dec
mov
mov
imul
into
push
mov
mov
push
cmp
in
inc
mov
pop
das
mov
bndldx
mov
ficoms
aad
popa
fs
arpl
movsl
mov
cmp
inc
cmp
scas
jnp
outsb
push
push
add
icebp
mov
pop
enter
insb
fmuls
loope
inc
aaa
add
push
test
roll
or
inc
in
mov
jne
xorl
imul
test
push
mov
mov
mov
cmp
daa
das
js
lret
push
and
mov
lods
mov
jnp
inc
mov
test
movb
push
iret
xor
out
fists
mov
inc
ds
das
push
sub
les
push
and
mov
mov
dec
ja
dec
inc
sbb
mov
sub
xor
nop
ret
cmpsl
add
decl
jno
cmp
es
cmc
inc
adcl
pop
fs
outsb
je
and
data16
push
dec
es
dec
sub
push
hlt
inc
cmp
or
loop
das
mov
jnp
jno
mov
dec
dec
jp
dec
inc
cmp
pop
aaa
dec
outsl
push
jb
ja
fldcw
pop
std
ret
add
insb
pop
push
jne
dec
inc
push
pop
cs
xchg
dec
pop
mov
xlat
jle
push
or
inc
push
push
sbb
rcl
xor
inc
pop
xor
inc
push
cmp
out
or
pop
pusha
hlt
fs
clc
add
jne
sbbb
shrb
insl
jae
arpl
inc
inc
and
inc
pusha
sub
xor
sub
pop
js
adc
aaa
into
insb
cmp
mov
jae
sub
push
jae,pn
repnz
std
sub
and
and
push
mov
cmp
jae
or
cli
push
and
mov
jb
jb
imul
movsl
push
jbe
adc
movsb
cmp
iret
or
jae
pop
cmp
add
adcl
dec
movsl
pop
mov
cmp
repnz
add
inc
mov
push
or
and
loopne
jecxz
arpl
arpl
andb
pop
dec
dec
inc
and
pop
xchg
das
jb
add
add
jb
adc
ja
shll
gs
cmp
pop
push
or
inc
add
ret
add
cmp
and
sub
sub
inc
xchg
and
pop
or
inc
xchg
sub
sub
or
inc
pop
cmp
aas
daa
and
pusha
jle
adc
addb
and
sub
sbb
nop
inc
and
nop
and
or
inc
xchg
sub
sub
pop
or
inc
cmp
and
pusha
and
jle
and
int3
mov
lcall
and
and
and
pop
enter
sub
inc
enter
pop
cmp
aas
daa
and
adc
leave
aas
test
cs
outsb
adc
test
xor
inc
enter
sub
cs
les
sbb
das
and
push
enter
js
inc
enter
push
sub
or
add
and
incl
inc
dec
gs
mov
and
stc
aad
xchg
inc
add
dec
push
inc
push
add
ret
jb
lock
xchg
pop
in
add
popa
dec
mov
add
iret
in
jne
mov
mov
insb
pop
pop
in
lea
add
fiaddl
popa
jns
jp,pn
rorl
les
sti
rclb
cmp
add
and
inc
or
cmp
aas
imul
adc
pop
push
icebp
rcpps
jo
arpl
cmp
sbb
add
push
lods
xor
fbld
pop
mov
push
adc
pop
mov
pop
and
and
scas
pop
arpl
push
mov
sub
cmpb
jo
cmp
mov
lds
das
sbb
or
and
sbb
sub
inc
fbstp
pop
fisttpl
inc
repnz
jmp
rclb
fisubrs
add
dec
icebp
fdivrl
or
insb
push
sub
inc
mov
fidivl
pop
and
sbb
rcr
in
jb
inc
out
das
sub
call
clc
xor
inc
cmpl
aam
and
jne
add
aad
loopne
add
shlb
invd
adc
outsl
fstl
outsb
pop
xor
adc
daa
add
jmp
outsl
negl
dec
adc
jl
test
sahf
lock
scas
mov
cld
ja
mov
das
in
cmp
xchg
subb
inc
inc
orb
add
dec
xor
inc
pusha
jb
mov
add
inc
movsb
inc
adc
inc
loopne
or
and
sbb
and
jbe
movhps
lret
inc
add
adc
push
das
sub
cmc
xchg
mov
or
inc
add
jl
aas
pop
pop
jne
jae
lock
add
icebp
mov
adc
sbb
and
adc
decb
pop
inc
or
imul
adc
movsb
aas
sbb
add
cmpsb
pop
rcrl
adc
and
js
or
lock
loopne
dec
shll
aam
xor
shll
or
adc
rcrl
sbb
imul
pop
cmpsb
imul
lcallw
jg
clc
pushl
fildl
or
movsl
loope
inc
out
jnp
lea
fsubrs
pop
cmp
mov
sbb
pop
pushw
push
add
setp
add
nop
cmpsb
imul
orb
aaa
or
mov
daa
adc
adc
in
and
inc
addl
push
fdivs
xorps
xor
insl
push
and
andb
jb
pop
andb
or
aas
adcl
xchg
sub
mov
popa
sbb
add
into
aas
xlat
pop
cmp
mov
push
nop
dec
mov
sub
sub
nop
mov
add
adc
addl
adc
add
test
cs
invlpg
pop
add
add
add
in
and
pusha
cmpb
cmpsb
fisttps
cld
cld
in
movsl
sbbl
xor
scas
cmp
pusha
xorl
mov
mov
sbb
in
call
dec
adc
push
ficompl
mov
xor
fcomp
loopne
jae
jle
rorb
movsb
jns
sbb
inc
lcall
nop
add
nop
xchg
xchg
add
mov
mov
lcall
push
or
or
adc
adc
adc
sbb
sbb
movsl
sbb
sbb
push
js
imul
and
mov
jecxz
push
and
xor
popa
mov
lidtl
push
add
lods
shlb
xorb
icebp
pop
mov
mov
xchg
push
inc
jg
fadds
push
out
mov
outsl
pop
push
push
xor
shll
mov
insl
lcall
dec
insl
add
jne
scas
cmp
imul
repnz
das
push
add
dec
dec
dec
insb
rcll
pop
add
xchg
inc
sbb
sbb
rcrl
nop
push
fidivrs
add
enter
xchg
add
or
and
push
ret
mov
adc
dec
mov
mov
sbb
into
lcall
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
std
call
sub
mov
popl
cmp
cmpsb
iret
decl
js
jns
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
lcall
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
jmp
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
and
push
movsl
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
add
leave
fwait
xchg
and
and
std
outsl
add
aas
jno
or
mov
pop
fs
dec
lea
aas
inc
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
pushl
xchg
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
decl
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
jmp
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
out
adc
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
incl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
call
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
pushl
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
jmp
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
sub
std
jmp
sbb
gs
std
orl
pop
ficomps
frstor
pop
ret
inc
cs
inc
push
ljmp
inc
das
shlb
cmp
inc
repz
sbb
out
jl
rcll
popf
pop
outsl
xor
dec
stc
dec
gs
fcoms
xor
push
inc
xor
dec
jge
subb
adc
mov
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
sub
inc
pop
mov
fistps
and
cwtl
ss
lea
dec
xor
mov
mov
imul
sbb
add
dec
xor
jns
out
push
cli
push
imul
mov
push
xchg
mov
gs
mov
popa
xchg
fisubs
xor
push
imul
outsb
cmp
fnsave
negl
inc
js
mov
sbb
sti
inc
add
sub
pop
int
lcall
or
sbb
xor
shlb
add
xor
xchg
scas
adc
jnp
pop
outsb
cmp
lock
push
mov
bound
cmp
or
andb
xor
cwtl
push
mov
push
sub
fistpl
jae
gs
pop
mov
mov
add
push
fdivrl
outsl
das
xchg
push
dec
outsl
mov
adcb
sbb
das
mov
lret
arpl
push
xchg
popa
jo
imul
daa
pop
in
dec
sbb
bound
inc
sbb
mov
pop
sbb
insl
adc
inc
add
add
clc
dec
insb
sub
push
ja
xchg
push
ret
sub
or
xor
inc
ficomps
pop
sub
or
je
lods
loope
push
dec
movsb
outsl
jo
dec
xchg
push
add
imul
jnp
popa
sbb
push
push
insb
cmp
dec
mov
push
xorl
scas
push
mov
into
movsb
pusha
inc
imull
bound
shr
pop
cmp
bound
dec
jnp
test
pop
mov
pusha
and
adc
push
inc
mov
add
adcl
adcl
dec
repz
sbb
inc
sahf
iret
dec
inc
decl
and
push
mov
mov
das
gs
loopne
push
cmp
and
push
popa
push
or
popa
bound
or
mov
ja
mov
loopne
inc
mov
add
inc
add
scas
loop
inc
sbb
sbb
mov
mov
push
shll
nop
or
xchg
adc
stc
push
das
pusha
or
mov
in
daa
pop
mov
dec
inc
push
adc
prefetch
or
rclb
mov
nop
sbb
cmpxchg
or
outsb
pusha
adc
pop
push
das
popa
xorl
xchg
push
push
xchg
dec
push
arpl
add
pop
mov
push
cltd
mov
pop
sbb
dec
iret
fwait
inc
add
pop
push
inc
mov
pop
sbb
add
mov
mov
xor
pop
fcmovne
ja
mov
subb
mov
xor
rolb
in
xlat
jno
push
int3
add
add
fiaddl
pop
jo
insl
inc
push
gs
test
rol
mov
and
mov
xchg
addl
sarl
mov
outsl
xorl
xor
fnsave
cs
pop
addb
and
dec
push
lock
rol
push
aad
mov
and
push
les
imul
mov
rol
add
lret
repnz
adc
call
sub
mov
add
xor
sub
mov
add
pop
adc
xor
or
push
inc
add
dec
add
add
leave
inc
punpckhbw
testl
test
aam
push
adc
inc
sbb
sub
inc
movzbl
fisubrs
or
add
push
pmulhuw
xchg
xchg
or
add
mov
pop
lock
addb
xchg
ss
jb,pn
or
sbb
sbb
dec
lcall
dec
dec
xchg
dec
pop
rcrb
rorb
das
lds
or
add
push
xchg
incl
add
add
add
dec
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
