dec
push
xchg
or
pop
and
jp
insl
fidivrs
jl
cmc
push
das
out
rcll
inc
jbe
mov
sbb
sti
xchg
and
cmpsb
das
mov
clc
fcmove
mov
mov
lret
sub
in
ljmp
loop
cmp
int
loope
jno
sarb
push
pop
aad
pop
in
mov
lods
fmul
adc
pop
sub
out
mov
pop
cmp
outsl
stos
bound
xchg
dec
cmp
icebp
add
and
rcrb
test
jno
imul
sti
xor
mov
imul
pushf
mov
dec
jmp
mov
pop
lret
repz
adc
shrl
addb
imull
fistl
jp
dec
mov
pop
scas
adc
stc
out
fildll
push
lahf
add
lret
lock
in
inc
push
mov
aas
adc
sbb
and
jmp
scas
rcll
lods
cli
mov
adc
addr16
add
stos
xor
stos
jo
loope
xchg
ret
clc
mov
into
fsts
fs
jle
adc
sub
fwait
or
mov
mov
enter
shr
xor
insl
jnp
pop
push
imul
inc
cltd
data16
cmpsl
mov
push
dec
xchg
cmp
push
fbstp
jbe
mov
lods
stos
jne
mov
cmc
and
pop
dec
mov
push
repz
cld
pushf
and
das
adc
push
nop
ja
out
fwait
add
cmp
pop
in
pop
loop
aas
mov
addr16
arpl
sub
or
or
mov
rclb
sub
in
rep
fs
lcall
in
cmp
outsb
cmc
movsb
loopne
xchg
xchg
int3
push
mov
jnp
or
push
out
and
in
hlt
popf
in
jecxz
mov
cmc
lea
sub
and
rorb
test
push
jp
dec
sub
popa
sbb
sahf
xchg
jmp
adc
test
or
pop
cmp
ss
lds
jae
stc
or
subl
lret
adc
cmp
imul
jno
movsl
sti
test
ss
cmc
stos
stos
xor
xor
jle
jo
rcll
jns
pop
dec
insb
push
lahf
or
aad
sub
pusha
aam
inc
les
jo
mov
dec
mov
outsb
xchg
scas
sbb
dec
push
cmp
lahf
fisubl
gs
mov
hlt
pop
lret
cwtl
inc
jmp
lods
and
mov
mov
mov
in
sahf
ja
mov
xlat
xor
and
fsubrs
fiadds
test
jle
pusha
hlt
push
test
push
dec
xchg
mov
and
pop
inc
xchg
fdivs
test
mov
mov
dec
pop
pop
mov
cmp
scas
pop
inc
inc
lods
aad
aas
adc
int3
lret
cmp
push
mov
inc
jp
pushf
push
mov
fstpt
sti
imul
sbb
in
fs
adc
daa
fsubr
mov
inc
scas
add
repz
adc
cmp
sti
in
xchg
mov
push
pop
fisubrl
xchg
call
fistpll
xchg
idivb
jne
out
pop
inc
dec
pop
push
add
test
sub
xor
popf
fsubrs
js
sahf
aad
push
insl
out
data16
push
bound
jg
arpl
mov
push
jnp
popa
imul
rolb
inc
lods
fsts
dec
ja
add
pop
xchg
cmpsl
cmpsb
fs
push
js
lret
xor
popa
or
inc
outsb
clc
and
pop
mov
mov
or
sbb
in
mov
insb
mov
in
xor
out
ja
push
dec
add
sub
cwtl
aam
out
mov
popf
or
mov
icebp
pop
jns
out
fimuls
mov
add
push
pusha
outsb
xor
mov
aaa
bound
xor
sahf
push
jl
lahf
andl
outsb
adc
leave
je
jle
mov
mov
sbb
push
lds
repz
mov
adc
lahf
jbe
cmp
mov
sub
std
xor
popa
jecxz
lahf
pop
jne
cltd
push
mov
movsb
ljmp
jno
jne
pop
add
sbb
push
sbb
fbld
fidivrs
sbb
cli
das
rolb
and
mov
push
dec
imul
aas
std
cmp
pop
pop
adc
leave
sbb
aaa
mov
sub
mov
pushf
aas
int3
test
xor
mov
lock
arpl
push
cltd
mov
xlat
push
cmpsl
pop
out
lret
sbb
xchg
ret
fmuls
mov
ljmp
mov
push
popa
xlat
mov
dec
shl
push
or
adc
cwtl
cmpb
pop
mov
sbb
xchg
dec
push
dec
fdivrp
mov
inc
outsb
stos
or
sbb
adc
mov
or
loopne
and
fcmovu
mov
scas
jns
push
mov
sub
popa
mov
mov
daa
adc
je
mov
mov
out
push
xor
daa
js
nop
xor
inc
xchg
nop
pop
js
ja
or
xchg
repnz
fnstenv
leave
fists
rcll
stc
push
sti
xchg
in
push
xchg
cmp
pop
sbb
jge
mov
lods
or
jecxz
ljmp
je
sub
inc
cs
mov
jmp
aam
repz
inc
push
das
sbb
mov
or
subl
je
xchg
push
sub
pop
mov
cmp
ja
adc
repz
inc
sbb
dec
ret
pop
nop
push
xchg
pop
sub
jbe
dec
lret
pop
dec
adc
fsts
js
mov
leave
out
add
mov
sarl
outsl
xchg
xchg
adc
mov
and
scas
fcomps
fidivl
bswap
mov
repz
ja
pop
lcall
dec
lods
jg
aas
ja
sbb
mov
push
xchg
shlb
cmp
sub
inc
lret
push
push
xchg
adc
cmpsb
jecxz
sbb
out
or
and
loop
or
in
lcall
or
test
xchg
adc
add
inc
pop
jbe
add
fcomps
pop
jnp
mov
adc
popf
mov
mov
inc
mov
push
repz
in
out
hlt
mov
cmp
or
pusha
hlt
inc
lahf
ficoms
cmpsb
push
and
mov
pop
and
or
and
pop
pop
dec
sbb
push
fbld
fsubs
inc
stos
loopne,pn
adc
iret
icebp
sbb
jnp
cmpsl
test
xor
test
add
xor
mov
int3
mov
mov
sbb
lahf
loopne
xor
push
dec
push
shlb
pop
fimuls
pop
mov
les
enter
xor
push
cli
mov
sti
nop
push
lret
push
inc
xchg
jmp
popa
movsl
mov
xchg
adc
pop
pop
cmp
ss
fwait
loopne
jno
and
cmovbe
cmp
test
fnstenv
dec
dec
jno
lds
pop
leave
dec
jmp
adc
dec
mov
in
pop
cld
pop
movsb
movsl
test
add
cmp
jp
inc
adc
fbstp
adc
jg
adc
sbb
aad
popa
mov
push
add
cld
ds
or
push
xchg
lcall
ficomps
sbb
sahf
adc
mov
mov
add
pop
test
sarl
repnz
imul
push
sub
inc
jns
push
repz
leave
or
lea
mov
repnz
daa
addr16
cmp
jb
jne
sub
mov
sub
cwtl
outsl
lock
or
inc
dec
xchg
sub
nop
mov
dec
mov
inc
sub
std
insl
push
dec
stc
push
mov
jle
and
xor
out
jp
adc
or
push
pop
cmp
ret
cli
jg
sahf
out
jbe
roll
mov
insb
mov
addl
mov
dec
lods
ret
sbb
push
mov
inc
add
test
pop
jbe
stos
cmp
leave
lds
mov
out
add
ficompl
mov
shl
outsl
mov
sub
sub
mov
scas
dec
in
movsb
in
enter
push
enter
xchg
mov
xchg
and
sbb
sahf
adc
test
sub
add
je
dec
shrl
ret
jnp
test
idiv
test
imul
inc
fistps
push
loop
xchg
mov
fcomip
jbe
cld
inc
add
sbb
push
enter
pop
cmp
cltd
adcl
push
fnsave
jp
lret
and
mov
mov
mov
mov
and
sub
outsl
filds
fsubrs
push
cmp
into
icebp
sub
mov
ret
mov
add
mov
dec
and
cltd
mov
mov
cmp
in
or
popf
jmp
adc
sbb
jmp
or
hlt
mov
xor
jle
out
push
insb
pop
gs
daa
ror
push
shlb
and
cmp
dec
jno
cmp
and
mov
mov
fidivs
push
rorl
xor
testb
pop
jp
movsb
jle
arpl
mov
xor
loopne
mov
rcrl
mov
pop
loope
aad
pop
sbb
dec
mov
fwait
aad
in
inc
iret
movsl
jo
mov
fwait
mov
jnp,pt
mov
popa
ljmp
cmc
push
xchg
and
jne
or
xchg
jmp
mov
pop
mov
insl
dec
pop
add
lds
jp
repnz
pop
xor
in
scas
lret
cmp
into
cmpsb
test
and
cmp
jbe
ficomps
nop
xchg
xchg
stos
cmp
xor
push
sub
imul
mov
xchg
bound
dec
lods
push
adc
fs
and
xor
in
fistps
fxch
pop
lea
test
xor
xchg
or
idivl
testl
push
icebp
leave
gs
adc
int
mov
adc
adc
cld
dec
call
pop
shr
or
data16
cli
fnstcw
or
pop
pushf
sbb
repnz
xor
pop
popf
xlat
bound
lea
mov
insl
mov
pop
lcall
mov
sti
jo
pop
sub
sar
sub
ljmp
out
stos
fsubp
dec
outsb
sbb
mov
mov
cmp
cmp
int3
xorl
mov
sub
adc
xor
pusha
push
jecxz
clc
ja
add
popf
clc
aam
cmp
mov
add
outsl
ret
lods
push
mov
in
scas
fldcw
mov
clc
pop
loop
pop
mov
rol
lods
or
push
les
les
pop
insl
ljmp
sub
movsb
pop
int
pop
lods
frstor
add
cltd
pop
sahf
testl
prefetch
push
in
pop
sbb
sub
add
xor
pop
fidivrl
fstpt
aas
jmp
dec
jns
adc
push
int3
sbb
xor
mov
imul
lods
xchg
xchg
pop
mov
xor
test
mov
xor
insb
idivl
mov
sbb
inc
mov
nop
cltd
add
lret
loop
popf
aas
mov
jp
loop
int3
pop
sub
es
jbe
stc
fimull
sahf
hlt
pop
xlat
cmpsl
into
out
xchg
inc
mov
mov
lods
xchg
xchg
or
shrb
jbe
add
push
sub
outsw
xor
lret
xchg
adc
fs
loope
xchg
scas
push
aam
in
pause
xchg
inc
js
inc
fldenv
mov
outsl
xor
mov
insb
push
xchg
mov
sub
xor
sub
xchg
adc
loope
push
lods
add
inc
mov
in
loope
mov
inc
jl
jo
pop
test
cmp
cmp
lea
jae
adc
mov
lret
mov
dec
aam
mov
lods
movsl
jno
pop
repz
mov
and
rcll
clc
xlat
fwait
insb
jbe
dec
xchg
inc
mov
sbb
mov
cmc
je
inc
add
negl
outsb
cmpb
jecxz
or
cltd
movlps
xchg
pop
dec
mov
cmpsl
fwait
push
jg
mov
cmp
clc
sbb
ljmp
je
int3
mov
addr16
adc
mull
pop
mov
or
mov
mov
xchg
xor
mov
push
fdivs
ja
push
lea
pop
fcmovnu
lret
data16
leave
xlat
xor
test
xchg
cmp
fldcw
inc
sub
mov
int
pusha
xor
sub
fs
int3
cmp
mov
shlb
mov
mov
aam
adc
cmp
cmpl
push
in
pop
shll
push
jg
adc
xchg
fsubrs
ja
pusha
das
test
out
mov
or
fildll
popf
jo
scas
bound
ror
and
movsb
adc
pop
cmp
jg
sub
data16
cmovnp
popf
lods
add
addl
nop
int
arpl
addl
or
inc
mov
add
repnz
dec
int
xchg
fmuls
sbb
jg
sub
cmp
mov
add
lret
add
xor
stos
push
inc
jno
ljmp
jmp
in
mov
sbb
in
fisttpl
dec
aaa
lahf
movsb
dec
orl
in
shl
aaa
scas
push
fadd
popa
cmp
ret
mov
ljmp
pop
xor
cs
cmpsl
mov
mov
cltd
ficoml
inc
ds
addr16
and
inc
push
and
fbstp
inc
lahf
xor
xor
mov
adc
insl
sti
pop
and
in
insb
pop
add
jne
repnz
jb
andb
add
cmp
out
mov
dec
adcb
cmp
xchg
inc
es
cmpsl
je
mov
push
jp
out
popa
das
aad
push
rorb
daa
push
outsb
and
add
push
gs
std
and
fs
lahf
xor
inc
gs
mov
push
mov
adcb
daa
mov
ret
into
loope
icebp
int3
out
dec
mov
fidivrs
sub
xor
arpl
es
mov
call
pop
and
xchg
aad
xor
adc
xor
pushl
ret
and
jmp
jbe
pop
in
cmpsb
inc
xor
push
clc
movsl
cs
cmp
mov
and
lods
add
mov
subl
iret
mov
mov
test
add
add
sbb
nop
iret
in
imul
je
daa
mov
out
aas
mov
xor
hlt
movsb
jmp
inc
mov
push
andb
add
fs
scas
dec
inc
dec
es
adc
test
shll
aad
xchg
pop
lret
and
dec
mov
fcmovnu
push
sbb
out
pusha
push
gs
nop
inc
scas
pop
test
aas
pop
dec
xor
cmp
scas
push
jo
popl
out
int
add
and
mov
pop
and
rcl
or
jns
cmp
mov
es
jge
dec
xchg
std
fwait
jge
inc
stos
or
push
ss
fwait
jae
fists
mov
pop
pop
movsl
ljmp
mov
popf
xchg
pop
adc
push
pop
stos
sbb
stos
cli
repnz
imul
in
xchg
ds
pop
mov
call
ljmp
inc
push
jo
xchg
lods
xor
mov
fst
sahf
scas
shrb
sti
out
movsb
stc
add
jge
or
xchg
das
ss
in
sarl
push
xchg
sbb
xchg
pop
mov
jge
insl
hlt
pusha
test
push
mov
jl
dec
jns
cmp
sub
fdivl
push
mov
xor
pusha
cs
shr
add
into
mov
jae
mov
decl
mov
cwtl
loop
inc
icebp
mov
add
inc
or
ret
or
push
xlat
jl
or
sbb
out
pop
mov
shlb
xor
xor
fisubl
dec
ja
test
adc
push
mov
outsb
fisttpl
out
cmc
mov
mov
or
popa
stc
fsubs
sub
outsb
fstps
addb
sahf
mov
loop
gs
or
mull
xor
outsb
cmp
int3
icebp
sbb
jnp
pop
movsb
jae
mov
and
cmp
cmp
pusha
push
and
in
mov
mov
lock
mov
shl
pop
out
roll
scas
add
fstl
pop
jns
fwait
mov
test
mov
pop
pushf
aam
push
insl
test
repz
dec
cwtl
and
dec
iret
sarb
sbb
cld
mov
popa
pextrw
adc
leave
repnz
pushf
xor
mov
lods
cmpxchg
dec
in
add
push
or
pop
jecxz
pop
mov
ja
cmpsl
push
outsl
cmp
aam
adcb
xchg
sbbl
js
push
clc
or
std
dec
or
pushf
mov
lds
add
jge
adc
mov
js
add
fs
push
in
xchg
adc
inc
sahf
sahf
pop
pusha
and
inc
pop
pop
dec
out
lret
push
jns
movsb
call
and
bound
sbb
xor
pop
fcoml
cmpsb
mov
jno
popa
ret
mov
lcall
lahf
movl
in
aaa
addr16
jmp
sub
popa
fchs
xor
sub
jbe
adc
sub
cmp
adc
addps
imul
xor
lret
or
loopne
in
xchg
test
in
fadds
mov
shlb
dec
sub
sub
mov
test
lahf
mov
cli
push
jo
aas
outsl
xchg
dec
fwait
or
sub
push
or
sub
mov
int3
jge
cmp
scas
scas
dec
mov
cmpsb
xorl
pop
xchg
mov
adc
gs
sbb
adc
cltd
inc
xchg
push
mov
fwait
mov
jb
jmp
sbb
ds
adc
mov
push
cmp
fsubl
push
cld
fldl
sbb
mov
adc
repnz
gs
adc
addr16
fidivrs
mov
push
loopne
movsb
xchg
sub
lods
fprem
push
loope
cmpsl
xchg
orl
push
outsl
xor
aas
sub
outsl
adc
test
lods
mov
lock
addb
out
rcll
jp
repz
push
pop
clc
pop
stc
stos
loopne
and
xchg
cmp
nop
lock
mov
push
into
sub
mov
push
xchg
jmp
sbb
repz
xchg
aad
jo
outsb
imul
xor
jp
or
repnz
pop
and
sahf
cmpsl
and
sbb
dec
xor
les
imul
dec
or
mov
adc
imul
jmp
pop
lods
pop
and
and
jne
jg
mov
pop
sub
push
mov
jno
inc
sysenter
pop
and
cli
out
test
xor
daa
pop
aam
movsl
cld
jle
daa
leave
xchg
and
fisubs
popf
pop
adc
stos
rcl
outsl
rcrl
in
dec
icebp
sarb
push
bnd
mov
push
add
adc
mov
addl
imul
mov
jae
xchg
mov
push
int3
ja
sub
or
mov
xchg
sbb
gs
push
in
aaa
push
mov
jno
pop
rol
cmp
in
add
out
mov
cltd
mov
in
popf
mov
das
xchg
sub
cli
adc
pop
adc
fisubl
sub
jmp
loope
sbb
push
repz
lret
pop
xchg
mov
inc
mov
sti
adcb
test
xlat
or
out
xorl
mov
ds
ljmp
test
xchg
sub
loopne
push
pop
or
push
shll
sub
pop
aad
cli
push
ret
or
nop
jo
rorb
sahf
pop
jb
sbb
in
xorl
mov
nop
popl
das
fwait
pop
out
add
xor
outsl
bound
flds
cs
fsts
shr
push
inc
xor
xchg
push
xor
int
jae
push
jmp
fs
movsl
xchg
xor
fs
addb
sbb
stos
lret
pop
ret
shrl
fldenv
add
mov
cmpl
cmp
ret
aam
fcompl
mov
aad
imul
xchg
xchg
fwait
enter
jle
rcll
movsb
cmp
mov
mov
int3
pop
faddl
dec
nop
jmp
xchg
pop
inc
leave
mov
fistpll
in
push
inc
ja
repz
ljmp
mov
adc
pushf
dec
fsubrs
leave
lret
push
sbb
push
in
fidivrs
and
push
or
pusha
sub
scas
jb
xchg
dec
int
and
adc
xchg
or
stc
loopne
test
out
add
jae
inc
push
push
jp
into
es
dec
fdivrl
adc
scas
sub
fdiv
inc
pop
lds
shlb
ljmp
jecxz
push
cmpsl
mov
sub
mov
cmp
lcall
push
mov
pop
movsb
clc
test
pop
xchg
inc
xlat
mov
push
cs
mov
ret
sub
adc
mov
and
xor
fs
add
xchg
sub
test
mov
xchg
mov
test
pop
xchg
or
jmp
mov
cmpsb
xor
pop
inc
xchg
aas
add
dec
mov
fstp
jo
push
aad
push
adcl
mov
lods
loope
rorl
imul
mov
ret
mov
imulb
test
dec
or
sahf
ja
dec
out
inc
jb
jno
iret
fdivrs
dec
jge
sbb
sub
xor
lods
push
inc
mov
mov
adc
add
sahf
dec
pop
mov
lret
aad
adc
cmpsb
cmp
loope
mov
test
rcll
and
or
xchg
xor
in
fwait
push
xor
jp
cmp
sbb
inc
sti
adc
mov
inc
imul
es
rorb
push
add
sbb
aad
cli
shr
mov
ret
dec
sbb
popf
cmp
ljmp
xchg
pop
dec
cmc
mov
and
xchg
daa
add
mov
mov
in
loope
push
in
js
shrl
mov
jae
mov
push
inc
adc
fldt
popf
mov
mov
call
xchg
xchg
xchg
ret
jae
faddl
outsl
jmp
shll
and
dec
fs
add
push
or
outsb
ja
fcoml
int
and
mov
jg
mov
xchg
mov
ljmp
inc
aas
cmc
inc
sbb
test
adcl
add
mov
aam
pop
push
out
aaa
es
jl
mov
or
pop
shll
xor
fidivrs
repnz
imull
xchg
aam
mov
mov
sbb
jbe
cmp
dec
fwait
cwtl
sahf
out
lods
and
imul
cmc
pmulhw
aam
xchg
cmp
push
insl
inc
std
dec
push
dec
in
gs
arpl
jnp
loop
mov
mov
or
push
and
lods
shlb
xor
rorb
jecxz
and
test
mov
insb
loop
xlat
lods
mov
mov
pop
mov
daa
outsl
stc
jo
jl
xchg
vpaddsw
fdivrs
xchg
movsl
or
shrl
insl
iret
ror
adc
and
nop
mov
repnz
cli
outsb
inc
push
hlt
mov
bnd
xor
push
outsl
stos
fcom
in
not
mov
imul
movsb
bound
enter
add
push
jecxz
mov
fcoml
lahf
add
jge
sub
inc
mov
orl
lcall
jge
cmpsb
pusha
mov
or
jae
cmp
xchg
cwtl
mov
loope
test
roll
push
cmc
movsb
lods
cmp
and
xor
scas
xchg
push
aaa
cmp
hlt
pusha
scas
aas
pop
or
pop
aad
pop
xor
mov
jp
pop
adc
xorl
cmp
add
cmpb
xor
and
and
out
sub
add
adc
aas
and
mov
in
and
icebp
outsl
ret
nop/reserved
stc
push
sbb
mov
iret
std
stc
push
cmp
movsl
mov
pop
lods
and
sahf
in
pop
testl
nop
push
push
shrb
fsubrl
mov
in
cmc
and
mov
enter
pushf
movntq
out
scas
and
xchg
xor
mov
push
xchg
stos
mov
repz
jnp
sbb
mov
cmpsb
or
sbb
iret
test
mov
push
movsb
stos
test
fisttpl
mov
and
or
inc
mov
das
mov
fnsave
mov
clc
gs
inc
addb
fs
xor
push
icebp
dec
and
adc
scas
insl
in
hlt
mov
mov
push
adc
dec
pusha
repz
pop
cmp
fs
push
jmp
push
sub
and
stos
out
xor
movsl
sub
pop
std
mov
fwait
add
pop
xchg
filds
xor
arpl
mov
test
test
fistpl
repz
scas
call
sub
cwtl
jge
cmp
lea
out
mov
fwait
mov
push
sub
xor
scas
jecxz
or
jb
adc
push
sub
test
and
jmp
xchg
lods
fistl
and
fwait
mov
mov
xor
insl
nop
loope
cmpl
or
test
xchg
cwtl
push
push
or
sbb
dec
int3
sahf
mov
and
insl
mov
mov
fwait
sbbl
insb
sub
jge
lret
les
roll
mov
call
cwtl
jle
arpl
bound
xchg
mov
lods
mov
call
xchg
repnz
data16
pusha
jle
int
jae
jge
bound
sbb
ja
mov
in
xchg
sti
adc
lcall
andb
test
mov
xor
mov
push
xor
stc
jns
sbb
insb
mov
xor
ds
test
ja
inc
addb
xchg
add
ret
adc
and
mov
sbbb
push
aam
add
mov
pop
bnd
jge
mov
sbb
stc
pop
lret
push
adc
vmwrite
inc
or
mov
arpl
pop
dec
daa
leave
inc
shll
leave
push
out
lret
jns
add
aas
lahf
push
sub
push
stos
or
pop
adc
dec
pop
push
push
inc
jmp
cmc
jmp
sbb
inc
xlat
insl
and
xor
jecxz
mov
pextrw
lods
addr16
out
or
mov
loope
pop
or
push
mov
cmpsl
dec
shll
sub
add
pop
xchg
inc
lret
sub
fldt
pop
add
ret
cmp
daa
mov
push
sarl
subb
out
lret
sbb
cmp
out
lods
shrl
je
out
test
mov
xchg
adc
dec
add
lret
lcall
xor
gs
add
dec
mov
das
jns
es
js
add
iret
aam
sub
loope
stos
mov
mov
jns
jg
sub
dec
pop
xorb
fwait
sub
cmp
cltd
fsubrs
push
push
pop
push
jmp
add
push
add
setp
cld
fsubp
mov
mov
int
pop
in
fwait
sbb
sub
scas
hlt
fsubrs
cmc
sub
fidivl
enter
add
pop
inc
fxch
cmp
dec
std
mov
rcr
fldl
lods
xorb
lods
adc
pop
pop
adc
stc
mov
in
adc
xor
cmp
aad
enter
sbb
lahf
pop
jb
repnz
loop
xor
test
mov
aas
inc
pop
mov
fcmovne
cld
dec
lock
js
pop
std
repnz
push
mov
iret
mov
push
test
sbb
inc
insl
in
cmp
push
stos
cmp
rcrl
adcb
fidivrs
ss
dec
and
outsl
inc
mov
aas
leave
adc
inc
iret
and
sbb
push
xor
popf
xlat
hlt
and
shlb
lahf
or
into
jecxz
lahf
inc
sub
jmp
mov
cli
jbe
movsb
pop
lret
iret
sbb
test
lods
adc
scas
and
pop
adc
inc
fistpl
dec
add
call
dec
xchg
ret
sbb
cld
jo
icebp
mov
mov
mov
es
adc
jg
xchg
scas
and
sbb
jge
mov
add
and
rcll
jnp
add
adc
stc
mov
mov
clc
mov
mov
mov
xchg
shll
jecxz
mov
and
push
inc
push
mov
push
idivb
cmp
fisubrl
xchg
jb
insb
addr16
and
cmpsl
sub
dec
loope
adc
push
jg
xchg
xor
cmpsl
mov
jmp
push
and
sbb
and
out
lods
adc
sahf
jnp
jmp
mull
insb
jnp
adc
dec
fsubp
dec
rcrb
pop
pop
sti
dec
testl
pop
push
add
or
inc
sbb
dec
jo
cmpsl
jno
push
mov
ret
cmp
stos
popa
mov
clc
push
inc
and
jle
mov
cltd
aas
lret
mov
jl
and
mov
sub
lret
sbb
and
adc
jns
shll
testl
mov
xor
jne
push
mov
insb
fisubrs
sub
mov
movl
loopne
lret
std
and
iret
dec
icebp
xchg
pusha
sub
aad
cs
insl
ss
dec
mov
mov
xchg
xchg
fwait
xor
mov
add
push
ret
xor
cld
mov
pop
ds
inc
repz
int
div
imul
cmp
mov
cs
push
xor
mov
jns
pop
push
jg
jae
mov
in
test
pop
mov
lret
mov
pushf
cld
arpl
pop
in
jmp
jge
addl
je
fidivrs
in
pop
lret
xor
jg
hlt
adcb
xchg
sub
mov
test
and
or
fmuls
into
mov
loope
cmpb
inc
iret
cld
adc
pop
sub
clc
add
fstpl
sbb
inc
sub
sub
fadd
les
lcall
addl
fwait
push
js
sub
js
movsb
sti
dec
mov
adc
out
fdivrp
dec
sub
lods
adc
jo
xor
std
push
cltd
cli
aad
adc
inc
mov
sarb
mov
pop
cmp
fbld
jle
adc
fimuls
push
add
pop
push
fs
gs
mov
repnz
rorl
jno
dec
mov
rolb
andb
dec
popa
test
lea
fmuls
sti
idivl
test
outsb
xchg
outsb
dec
and
les
loope
lds
mov
mov
sbb
push
push
xor
pop
and
cmp
test
sub
jbe
adc
sbb
test
ss
in
lahf
inc
lods
iret
and
ja
xchg
inc
test
dec
aaa
sbb
ja
jnp
insb
pop
int
in
sub
jb
mov
cs
xchg
mov
xchg
mov
mov
into
dec
aaa
arpl
jmp
and
fwait
or
rcrb
cmpsl
jle
fistpl
fisttpl
mov
lcall
cmp
adc
jp
pop
xor
insl
push
jl
in
js
stos
push
out
ljmp
push
test
test
push
push
xor
sub
jl
aas
lock
mov
in
inc
aam
xchg
and
push
inc
mov
sbb
jae
idivb
jge
aaa
push
inc
push
pop
in
push
xchg
sahf
stos
jmp
xchg
outsb
mov
jl
iret
xchg
outsl
mov
mov
fnstsw
jl
push
data16
jmp
and
mov
std
push
dec
scas
aam
in
les
push
int3
push
movsb
jmp
outsl
es
mov
pop
fisubrs
add
push
sbb
mov
test
insb
xchg
popf
cs
out
mov
leave
stos
test
sbb
dec
and
add
xor
mov
xor
scas
sbb
sbb
or
mov
xchg
dec
adc
sub
ds
sbb
add
insb
mov
push
push
scas
inc
icebp
mov
push
in
cli
and
int
adc
je
inc
repnz
lock
in
dec
sbb
jg
jl
repnz
xor
ds
push
mov
mov
lds
inc
loop
leave
mov
punpckhwd
js
sbb
fcomps
mov
adc
jge
add
mov
xchg
scas
adc
mov
mov
xchg
les
jmp
jns
ret
cmp
addr16
pop
test
add
sub
das
inc
or
nop
or
aam
jo
sar
inc
in
mov
sub
je
gs
lret
inc
add
adc
push
dec
popf
jmp
divb
push
add
cmp
jb
lds
roll
out
daa
jmp
cmp
sub
test
pusha
mov
adc
test
cs
jge
sahf
dec
xor
add
add
mov
jecxz
popa
lcall
nop
dec
lock
jnp
dec
aas
jbe
xor
inc
faddp
sbb
dec
lret
pop
or
xchg
or
inc
outsl
notl
xchg
repnz
repz
out
xchg
je
out
loop
cmpsl
add
pop
dec
jbe
fdiv
mov
pop
shll
xchg
cs
insl
inc
lcall
pushf
pusha
icebp
push
mov
mov
icebp
add
orl
repz
stc
push
sub
fists
repz
std
aad
add
dec
mov
shl
cmp
mov
pop
mov
test
les
push
mov
sub
xchg
dec
lods
out
push
and
out
daa
outsb
lods
fistl
ret
insl
jae
pop
lods
xorb
outsb
sub
in
or
cmpsl
jmp
mov
test
aaa
adc
or
and
xchg
dec
inc
push
sub
daa
mov
mov
out
jae
sarl
sti
mov
add
fcmove
stos
jle
fwait
push
inc
andl
rolb
fmul
mov
fsubs
enter
mov
lea
mov
mov
dec
jge
or
call
xchg
aaa
rorb
int
out
inc
cmp
daa
cld
sarl
in
ja
loopne
leave
mov
aas
sub
out
mov
sub
stc
movsl
jecxz
mov
push
and
push
jl
jg
sbb
cmpsb
inc
movsb
insl
mov
mov
fwait
test
andl
sti
fidivl
mov
fstpt
sbb
imul
cld
lods
sbb
dec
xlat
pop
in
clc
pop
lock
push
lret
dec
test
mov
xchg
ljmp
adc
lret
and
idiv
dec
or
into
dec
pop
loope
add
in
xchg
adc
testl
or
and
xor
out
pop
in
sbb
mov
push
pop
into
shll
orb
fnstcw
mov
sbb
add
cmp
xorb
in
adc
xor
jecxz,pn
xchg
mov
adc
cmpsb
out
mov
cmp
bound
mov
mov
and
pop
push
scas
xor
jmp
ficoml
cmpsb
or
sahf
cli
add
and
fldt
jb
imul
xorl
outsl
into
je
movsb
or
fstl
push
mov
rorl
fsubrl
cli
bound
or
jecxz
add
enter
nop
and
cltd
mov
push
inc
mov
inc
outsb
orb
iret
iret
and
lods
xor
cmp
push
jo
in
dec
fidivrl
jo
repnz
pushf
adc
idivb
jns
pop
out
aad
adc
and
cmp
xchg
mov
ret
sub
mov
scas
jns
dec
add
xchg
lret
pop
dec
stos
mov
sbb
cmp
ret
dec
xchg
je
mov
out
inc
jp
xor
lcall
fs
rcrl
stos
adc
movsl
jnp
jle
jge
lods
jno
fstps
dec
dec
stc
jns
xor
lods
loop
fildl
ja
pop
test
cmc
lret
xchg
ja
xor
stos
push
je
sbb
fcomip
lds
mov
mov
jne
std
jne
xorb
pop
xorl
jbe
cld
xchg
mov
inc
js
sub
sub
adc
pop
jne
test
cmp
bound
sub
pusha
lcall
adc
add
xchg
push
adc
or
andb
mov
jle
int
push
and
inc
xchg
es
ret
nop
cld
in
mov
xchg
ss
cmpsb
enter
das
addb
sub
cmpsl
rolb
mov
xor
imul
pop
xchg
lods
xor
fsubrs
into
xchg
das
icebp
cwtl
imul
popf
pop
jbe
pop
jne
filds
jmp
imul
jge
jp
insl
cmp
add
xchg
enter
imul
lods
sbb
pop
loope
xor
mov
push
xchg
and
pusha
sahf
cwtl
push
sub
pop
mov
iret
pop
int3
or
mov
push
std
iret
call
icebp
cmpl
mov
push
in
push
jg
mov
imul
jno
pop
cmpsb
call
popl
mov
inc
sar
cmp
push
xchg
icebp
xor
mov
loope
dec
xchg
pop
adc
push
mov
mov
mov
ret
aaa
xor
aad
mov
movb
jnp
and
aam
je
fildl
sub
or
insb
fldenv
les
stos
leave
lcall
in
lret
mov
cwtl
ss
es
adc
adc
add
mov
jns
cmpl
lock
mov
cmp
or
mov
sub
pop
cmp
mov
mov
jne
aas
lret
add
or
int
sub
inc
aad
xor
mov
in
adcb
sbb
push
mov
pop
mov
pusha
lret
outsb
sub
test
in
dec
scas
jns
push
and
mov
fadds
push
das
out
push
daa
xchg
cli
xchg
adc
mov
sub
jle
add
shrl
push
lcall
push
cmp
shr
inc
cmp
sub
leave
sbb
mov
and
outsb
mov
pop
subb
movsb
push
push
pop
dec
push
test
mov
inc
dec
aad
jg
rorl
je
inc
sarb
xchg
scas
sbbl
dec
xchg
leave
and
int
cmp
mov
loopne
pushf
push
cli
loope
pop
xchg
fsubrs
iret
into
jmp
cmpsb
fistps
test
and
cmpsb
dec
movsl
or
and
cmp
mov
inc
cld
movsb
shlb
inc
xor
adc
repz
loopne
nop
in
pop
daa
into
mov
enter
add
lcall
add
sbb
pop
cmpsl
into
add
or
or
add
push
sbb
imul
into
push
out
cltd
add
push
cmpsl
cmp
addr16
imul
or
addl
add
out
jnp
jecxz
dec
in
in
or
xor
push
ret
and
cmp
jecxz
xchg
sahf
push
mov
inc
int
rcll
adc
into
in
adc
aaa
and
sbb
jp
cmp
scas
jbe
jbe
jg
xlat
test
xlat
inc
mov
stos
lea
sub
rcr
inc
mov
sbb
hlt
jge
lds
or
test
adc
jle
pop
loopne
xchg
adc
nop
sub
cs
int3
dec
push
or
dec
fdivrp
adc
jg
jmp
invd
mov
imul
jbe
jb
inc
shlb
mov
jb
adcl
stc
lods
xchg
pop
ljmp
iret
fsubrl
or
push
fldenv
shll
pop
xchg
test
mov
inc
xor
imul
push
dec
cli
int
and
sub
fimull
bound
jge
in
mov
test
test
bound
cmpsb
push
movsl
movsb
cltd
mov
cld
movsl
data16
les
mov
pop
cltd
push
push
sbb
adc
pop
call
pushf
or
sub
mov
mov
sub
sahf
lods
inc
sti
dec
or
xor
or
pop
dec
xor
push
xchg
inc
clc
rcll
rclb
gs
dec
call
sbb
andb
and
xor
jg
fnstcw
add
cmp
call
pusha
cmp
rorb
pop
dec
jno
rcll
insl
subl
jmp
push
in
gs
inc
sub
addr16
xchg
outsl
iret
rcl
cmp
mov
mov
push
or
sti
xor
adc
and
pop
add
mov
aaa
das
mov
xchg
das
dec
addr16
fildll
xchg
mov
js
hlt
jo
shll
ficoms
and
add
cmc
dec
dec
xchg
or
mov
pop
pop
pop
outsb
movsb
ret
mov
ja
push
fists
and
push
jns
mov
in
mov
mov
ljmp
mov
pop
mov
pop
sub
in
sti
mov
fcomi
into
adc
mov
add
fwait
mul
push
mov
scas
pusha
movsl
fisttps
pop
pop
mov
stc
jb
daa
loopne
popf
subl
out
or
hlt
stos
and
je
or
or
push
in
jmp
xor
jno
mov
xchg
test
sub
test
xchg
repz
jg
sbb
insb
ret
jp
xchg
sbbl
mov
sub
mov
xor
mov
jmp
mov
iret
dec
repz
xlat
sahf
xchg
clc
les
xor
adc
dec
rorl
jb
stc
and
gs
pop
mov
das
in
sub
sub
fwait
pop
arpl
xor
fnstcw
imul
jp
imul
sub
push
aas
pavgw
xchg
jae
push
fsubrp
xor
gs
mov
iret
ret
inc
lea
or
shll
cmc
int
movl
bound
adc
sub
test
je
mov
lret
fs
inc
stos
sahf
xor
push
arpl
mov
mov
adc
sti
shll
jl
je
cltd
cmpsb
and
push
jbe
sbb
sbb
push
ret
sbb
cmp
mov
cmp
outsb
js
sbb
ljmp
push
mov
sbb
testl
xchg
rcrl
inc
inc
xchg
add
orl
lock
dec
push
sub
mov
stos
stos
cmp
cmp
in
sub
inc
mov
insb
xchg
lock
mov
shrl
shr
push
pop
adc
mov
mov
xor
add
add
xchg
jmp
sub
test
test
cmc
imul
out
inc
mov
jmp
pop
push
pop
xchg
mov
pop
adc
andl
pop
scas
xor
and
out
js
test
mov
fnsave
mov
xchg
loope
push
add
int
dec
lret
pop
add
mov
inc
dec
in
gs
in
push
mov
xor
pop
mov
int3
sbb
jp
arpl
cmp
add
outsb
jne
test
xchg
cmp
mov
jne
mov
mov
pop
movsb
dec
mov
pop
outsb
mov
loop
jmp
cmp
jno
jl
cmp
fcompl
data16
das
push
dec
lods
popa
cld
cmp
jnp
mov
leave
outsb
or
stos
or
dec
in
adc
add
sarl
push
scas
jae
sahf
outsl
mov
cli
repz
lods
out
lods
popa
xchg
and
mov
xor
push
ss
outsl
shl
fdivp
xor
and
jg
add
push
xor
in
fs
xchg
or
inc
iret
dec
in
dec
xchg
test
pop
retw
push
adc
rorb
movsb
adc
or
jge
push
jnp
popf
jmp
xchg
push
sti
xchg
mov
sbb
fs
mov
sbb
call
pop
jle
je
sbb
jle
add
dec
fidivrl
pop
ret
incl
ret
dec
push
mov
rorb
pop
or
sub
jl
in
add
mov
sub
push
push
pop
dec
es
xor
xor
ficoms
subl
pushf
sub
jecxz
mov
sub
mov
inc
mov
xchg
fstps
xchg
sub
lock
sbb
xchg
aaa
mov
mov
imul
mov
mov
out
outsb
imul
cmpsl
ljmp
push
std
jnp
sub
adc
or
jbe
cmp
aad
or
pop
mov
cmp
out
out
int
or
mov
pop
and
add
xchg
xchg
fisubs
out
mov
add
fcmove
outsb
pop
cmp
xchg
dec
cmp
mov
inc
inc
cmp
xor
cmpsl
inc
mov
popa
push
cmp
lods
ljmp
daa
aas
adc
or
xor
push
test
or
sub
dec
xchg
incb
jbe
cmpl
dec
xor
dec
movsl
rorb
xchg
pop
lods
or
filds
mov
fisttpll
lret
push
push
sub
outsl
out
jnp
push
test
das
insl
add
arpl
lahf
push
fistpl
adc
popa
imul
iret
or
or
inc
cltd
adc
mov
scas
lods
cmp
sub
popa
inc
rolb
mov
outsb
mov
rolb
and
movl
push
sarb
ds
data16
xchg
xor
fistpl
sub
or
or
js
testl
mov
aam
cmp
cltd
fnstenv
imul
and
jmp
or
insb
lock
cmp
inc
repz
hlt
push
insl
xorl
fistps
lds
bound
sub
sbb
lds
dec
mov
mov
mov
sbb
mov
ret
inc
push
ss
ffree
cli
outsl
test
jmp
sub
jnp
jbe
cli
push
in
ja
sbb
mov
mov
out
and
or
add
scas
ficoms
mov
faddp
add
js
popf
dec
cmp
cmp
lret
or
outsb
in
or
or
add
xor
popa
out
sti
push
xor
xor
or
mov
xchg
cmpsl
push
xchg
add
dec
inc
lods
pop
test
insb
mov
cld
loope
insb
push
je
cmp
pop
xrelease
mov
out
or
pushf
iret
pop
and
int
imul
dec
sbb
fld
or
xor
inc
mov
sbb
in
mov
mov
into
or
cli
or
lret
mov
int3
push
call
stos
orb
pop
pop
in
cmp
add
pop
mov
idivl
sub
icebp
xchg
or
push
xchg
xor
pop
xchg
out
mov
mov
cmpl
dec
jmp
sqrtps
popa
jge
sbb
int3
vpunpckhbw
cs
stos
rsqrtps
imul
xchg
in
jb
int
out
add
cmp
dec
jbe
push
inc
push
movsl
in
roll
and
rcrl
push
bound
add
mov
mov
push
into
xor
inc
rolb
pusha
movsb
dec
jl
cmc
adc
add
jno
push
sti
push
pop
cmp
orl
push
out
in
lock
outsb
jp
aas
ss
frstor
mov
test
inc
outsl
stos
shrl
push
ss
sub
mov
pushf
fwait
ja
push
push
addb
aam
movb
pop
popa
movsb
roll
xor
jne
mov
pop
stc
mov
adc
fdivr
mov
fidivs
mov
call
push
sub
scas
js
sbbl
pop
das
xchg
stc
pop
shl
aam
vpmullw
fldt
pop
loop
xchg
xor
sbb
adc
movsl
pop
sbb
sti
mov
data16
pushf
push
incb
test
scas
insb
push
rorb
fwait
into
shrl
leave
or
leave
adc
mov
rol
mov
mov
sti
loopne
test
ljmp
and
mov
loope
add
sub
popf
xor
sub
ret
push
mov
mov
pop
scas
insb
sub
push
pop
push
cwtl
orb
pushl
jl
sbb
adc
xor
xchg
mov
dec
jle
adc
loop
jg
sub
xor
jl
adc
push
fwait
mov
sub
movsl
push
jne
repz
push
insl
pop
dec
inc
sahf
sarb
mov
pop
cli
or
or
sti
sbb
ret
fiadds
inc
cmp
jmp
scas
aas
inc
lahf
xchg
bound
push
sub
lahf
pop
int3
xor
int3
testb
icebp
add
mov
addr16
je
jno
push
mov
sub
orl
adc
cmp
push
jns
out
test
mov
jae
repz
jg
lahf
scas
cmp
xor
loop
mov
icebp
arpl
push
dec
in
jno
adc
xorl
add
sbb
jle
cmp
sti
rcrl
cmp
inc
lret
shr
stos
sub
fcoml
dec
dec
adc
mov
cmp
out
lret
cmp
test
push
aam
divb
pop
jmp
aas
push
dec
sbb
jl
dec
and
push
push
fisubrl
push
lret
lahf
das
int3
mov
inc
push
and
call
stc
push
adc
out
sahf
xor
mov
add
inc
pop
and
jb
out
mov
xor
repnz
jge
es
add
adc
or
add
cmpsl
test
jnp
daa
loope
std
xchg
cmc
pop
mov
xchg
add
bound
cmp
ret
pop
or
add
mov
iret
iret
xor
insb
gs
dec
pop
fwait
sbb
and
test
lahf
jp
inc
mov
sbb
leave
lods
xchg
rcl
test
aas
out
sbb
mov
mov
es
jg
mov
add
sbb
vpunpckldq
mov
or
xor
fldl2e
push
push
sahf
negb
sbb
inc
fnstenv
dec
ja
das
sbb
mov
xlat
dec
test
movsl
in
mov
out
mov
adc
int
fistpl
outsl
mov
repnz
cmp
loope
gs
cmpsb
or
fildl
ljmp
dec
lods
ret
insl
and
out
and
xor
cs
mov
jl
clc
mov
stc
jb
mov
int3
xchg
cmp
sbb
inc
ss
aad
jae
in
mov
xlat
cmc
cs
xchg
push
xor
mov
push
dec
push
mov
xlat
clc
sub
dec
mov
jo
push
js
sahf
fucomip
dec
push
pop
sub
outsb
mov
ljmp
sub
xlat
data16
ds
pop
rcrl
popf
dec
cltd
scas
fwait
add
repz
pop
cmpsb
sbb
push
cmp
pop
flds
lods
mov
in
mov
stc
xor
sahf
jmp
hlt
push
aad
push
mov
xor
jns
cmp
test
xchg
and
std
loope
mov
jbe
jnp
mov
pop
outsb
cmpsb
xchg
and
pushf
lret
mov
cmp
not
mov
clc
jae
add
mov
lock
stos
fildl
and
nop
mov
hlt
mov
sarb
mov
mov
out
cltd
jle
lcall
fadds
or
xlat
ljmp
je
push
mov
cmc
inc
loopne
loopne
adc
sar
mov
adcl
in
shll
mov
mov
icebp
insb
mov
lds
cmpb
mov
mov
jp
aam
mov
mov
stc
das
fdivs
mov
jp
popa
and
push
addr16
push
cmp
hlt
sbb
insl
repz
xor
inc
into
jle
outsl
inc
out
xor
adc
sbb
in
lds
je
lret
mov
jecxz
pop
dec
jo
sti
ja
sbb
cltd
cltd
test
adc
iret
enter
add
movsl
scas
and
inc
jnp
and
sbb
imul
push
sarb
out
xchg
mov
out
popa
in
cmp
hlt
jb
in
into
cs
jl
add
sbb
dec
aaa
nop
pusha
aad
insb
add
mov
inc
xchg
ds
bound
cli
mov
dec
mov
add
sub
das
jns
imul
sub
jmp
inc
iret
xor
adc
pushf
mov
in
adc
rcll
ja
inc
fsts
pop
cmpsb
sub
add
repnz
mov
cwtl
lock
xlat
lcall
movsl
shll
or
push
sbbl
mov
and
dec
inc
xor
push
add
dec
bound
shlb
bound
sub
xchg
mov
cld
inc
outsl
sbb
push
out
insl
or
cs
inc
cmp
sbb
icebp
negl
pop
cmp
add
dec
movsl
ja
mov
adc
movsl
cmpb
sub
mov
icebp
cwtl
jo
cmp
sbb
pop
mov
shll
std
push
shl
mov
imul
push
jmp
adc
mov
sahf
ljmp
ret
scas
sub
push
inc
inc
xchg
pop
fdivrs
inc
xor
jl
cmp
pop
xchg
mov
xchg
sub
shl
inc
xlat
lock
add
mov
mov
in
add
cwtl
mov
pop
ss
or
dec
data16
mov
orl
xor
mov
inc
jle
mov
loope
orl
mov
adc
cmp
in
jne
and
ret
out
inc
xchg
sahf
adc
push
loopne
inc
jl
xor
mov
dec
cmp
outsl
sarl
aaa
sbb
mov
jmp
enter
popf
jo
add
arpl
cmp
aam
stos
cli
call
in
mov
push
cli
mov
das
jo
mov
xchg
xchg
data16
cmp
jmp
daa
adc
and
push
cmpsl
loop
cmp
jae
dec
sbb
cmp
subb
loopne
fistps
push
mov
xchg
add
cmp
aam
idivb
pusha
int3
pop
jb
fdivl
and
mov
fsubrl
popf
jmp
mov
loop
push
iret
lcall
xor
imul
fdivrs
jmp
movsl
in
js
out
repz
jmp
dec
shl
jg
push
and
cs
out
daa
mov
gs
stos
mov
adc
add
loop
imul
ss
sarl
daa
clc
jbe
in
imul
xor
and
jle
pop
fadds
xchg
mov
jp
enter
imul
or
fldcw
lods
mov
ss
cmp
ret
out
orl
sub
loop
lea
mov
xchg
inc
aaa
and
fsubrl
mov
mov
and
ret
sbb
sbb
jne
call
scas
inc
or
add
lahf
dec
jmp
gs
subl
pop
inc
mov
negl
sbb
xor
or
mov
xacquire
in
jge
ljmp
andl
inc
mov
adc
mov
mov
cs
iret
mov
adc
shl
repnz
or
test
rcrl
sub
js
ljmp
sub
test
pushl
push
jns
xor
out
xor
fdecstp
jg
xchg
xor
mov
push
lcall
adc
mov
cli
xchg
xchg
pusha
jnp
call
and
mov
jne
movsb
add
xchg
imul
sbb
mov
pop
mov
leave
and
inc
shl
jp
ret
jg,pt
mov
push
out
les
aaa
mov
xchg
and
popa
jb
mov
sti
ret
jg
pop
pop
outsl
sbb
stos
fcomi
add
jb
push
aaa
mov
stc
or
dec
mov
mov
lds
inc
mov
and
decb
stc
movsb
jne
jle
mov
or
push
xor
aam
outsb
jl
leave
test
gs
xchg
cld
add
dec
add
xchg
push
sarb
cld
aas
sub
and
cld
sbb
push
out
imul
or
shl
test
insl
push
xor
sbb
pop
inc
xchg
push
and
lahf
mov
mov
cld
mov
je
popa
sub
jo
sub
sbb
inc
dec
fsubr
jle
mov
mov
add
clc
outsb
mov
sarb
rcrl
mov
aam
sbb
sub
sarb
addr16
and
xor
loop
push
stos
mov
ret
repz
repz
xchg
inc
in
into
sarl
push
fcoms
cmove
mov
push
push
cmp
mov
daa
out
or
pusha
insb
mov
outsl
fdivl
jbe
scas
clc
popf
cmp
dec
ss
or
mov
shll
xchg
cli
and
and
jb
xor
ret
enter
imul
dec
mov
call
sub
jb
push
jl
lcall
sub
xchg
push
push
cmpsb
add
pop
mov
push
jle
insl
fcomps
cmp
data16
out
and
in
dec
sbb
push
add
inc
aad
cwtl
mov
mov
sub
xchg
mov
mov
clc
mov
notb
aas
and
xchg
xor
mov
cmp
ret
data16
sub
cwtl
inc
jg
push
xchg
aaa
pusha
pop
sub
push
mov
mov
xchg
and
xchg
js
ficomps
jo
mov
lret
scas
xchg
jp
add
iret
inc
arpl
imul
add
fs
inc
out
outsb
sub
cmp
js
xchg
cltd
lahf
subb
sbb
inc
mov
test
xor
push
or
push
mov
fidivs
or
mov
gs
sub
fists
mov
ret
int
movsl
ljmp
es
ljmp
mov
pop
jge
std
mov
sub
jl
roll
ds
cltd
xor
jbe
fldcw
push
movhps
test
xchg
loop
repz
and
xchg
mov
and
pop
pop
mov
scas
nop
mov
and
xor
das
fsubs
gs
les
push
ret
mov
xchg
inc
push
stc
adc
push
daa
test
cmp
lahf
div
push
mov
orb
fs
and
mov
je
xchg
imul
in
movsl
jp
add
mov
jbe,pt
daa
mov
out
repz
or
push
rcrl
dec
pop
mov
xchg
inc
dec
jp
jecxz
mov
push
stc
pushf
mov
mov
outsb
sbb
xchg
inc
stos
add
testl
out
jnp
in
loope
mov
cli
dec
sub
je
push
test
rorb
movl
sub
mov
dec
scas
adc
xchg
test
test
in
and
fildll
outsb
add
sbb
dec
push
adc
leave
iret
and
in
lods
cmp
xor
push
fmuls
push
add
mov
mov
shl
sub
dec
scas
gs
ljmp
orb
mov
add
inc
movsl
fwait
cld
je
fistps
mov
inc
add
out
into
test
lea
lock
aaa
add
test
aas
fyl2x
pop
adc
cmp
mov
or
pop
cli
pop
scas
mov
xchg
shll
mov
sbb
inc
push
push
xchg
xor
cmpsb
adc
cld
shrb
jnp
cmp
adc
mov
ja
and
and
in
sbb
orb
xchg
jne
loop
mov
jle
repnz
fwait
inc
lock
das
inc
loopne
sub
das
into
jbe
cmp
js
pop
mov
xchg
rolb
dec
adc
or
ret
fiaddl
int
and
andb
add
lret
push
out
mov
aad
sti
add
jne
jle
pop
cmp
hlt
and
scas
movsb
mov
adc
mov
mov
and
dec
jae
inc
aaa
cwtl
sahf
fwait
mov
add
jl
mov
sbb
mov
pop
fsubl
cmp
jecxz
xor
and
js
ss
push
hlt
in
leave
jg
lahf
jecxz
xchg
pop
in
ficoms
mov
addr16
jns
xor
outsl
push
inc
ficompl
mov
js
fsub
aaa
xchg
and
push
js
or
mov
js
das
jp
jns
testl
mov
fisubs
push
xor
adc
jecxz
aaa
std
popa
clc
add
pushf
push
lods
js
lods
lret
icebp
hlt
push
sti
arpl
test
cltd
jo
sbb
xchg
push
stos
mov
ljmp
enter
push
jnp
enter
mov
dec
or
jecxz
adcl
enter
dec
gs
loope
out
mov
pop
test
mov
inc
in
stc
das
xchg
jbe
data16
aaa
inc
jecxz
add
rcll
xchg
mov
ficoms
sub
pop
aaa
mov
stos
add
dec
jno
loopne
sub
mov
push
jnp
pop
loop
mov
incb
jb
sti
loop
sub
fcomps
adc
inc
sbb
or
and
mov
mov
mov
xchg
jb
cmpsl
aas
in
test
loope
arpl
jnp
aad
xchg
mov
insl
sbb
inc
xlat
sbbb
jne
cs
shlb
mov
test
mov
xor
repz
outsl
scas
push
lea
shlb
lds
in
int3
es
mov
jno
xor
push
sub
call
lahf
fscale
mov
repz
inc
cli
mov
scas
dec
test
xchg
lahf
sub
mov
lret
ljmp
mov
mov
jno
mov
jmp
sub
push
mov
cmp
cld
je
push
add
mov
aas
inc
dec
hlt
leave
scas
jmp
fidivrl
xor
insb
mov
test
or
adc
shlb
push
adc
ror
pop
or
fistl
shll
push
or
cld
shrl
jno
gs
lea
insb
loopne
mov
inc
xchg
mov
sub
out
xor
jns
lods
or
xchg
sub
sub
cmp
jne
out
stos
clc
test
fs
sub
sbb
movsl
push
lds
adc
rorl
ss
push
dec
mov
or
mov
les
inc
cmp
rclb
push
dec
es
cs
mov
inc
inc
ret
movsl
sbb
sub
lods
iret
mov
add
push
pop
pop
or
or
adc
data16
push
mov
in
jg
mov
or
push
cli
scas
lods
test
mov
fists
mov
arpl
shr
sub
dec
mov
cld
xchg
or
add
mov
pop
popa
mov
jmp
sub
test
fstpt
xchg
push
pop
cmc
and
push
fwait
pop
std
mov
loop
ret
jnp
xchg
push
nop
jns
add
xor
add
adc
hlt
push
mov
fwait
inc
xor
and
and
sbb
jo
and
sbb
xor
cmpsb
pop
or
lds
mov
insb
and
inc
push
ja
out
sbb
sbb
xor
cs
leave
cld
add
pop
stos
cmc
inc
pcmpeqd
dec
cs
aam
and
xor
fcomps
test
insl
fsqrt
repnz
int
cmpsb
negl
in
or
leave
popa
jle
add
xchg
insl
jle
mov
cmp
aad
cmp
repnz
pop
lods
vpextrw
lds
inc
lcall
outsb
loopne
leave
fists
mov
fistpll
inc
loop
mov
sti
lcall
popa
adc
jl
inc
daa
hlt
outsb
inc
dec
and
imull
inc
xor
pop
mov
aad
test
call
jo
pop
cmc
dec
movsl
mov
xchg
sub
std
shrl
mov
lcall
loopne
push
out
mull
je
jle
jmp
adc
int3
mov
inc
sbb
push
out
push
iret
fdivl
add
int
push
outsb
pop
mov
xor
mov
negb
inc
enter
outsb
jno
psubw
jo
xchg
mov
popf
lret
fidivrs
idivb
and
adc
jecxz
dec
mov
stos
push
cmp
lcall
pop
sub
outsb
test
pushf
call
xchg
in
mov
cltd
push
dec
subb
hlt
jns
fcompl
xchg
mov
xor
dec
jne
mov
xchg
dec
push
movsb
fdivrl
and
jbe
daa
and
cmp
setnp
test
push
notb
mov
add
xor
mov
inc
dec
inc
add
clts
leave
sahf
sub
dec
adc
sti
in
pop
int3
jge
outsb
adc
les
push
dec
push
push
je
ret
lea
xchg
movsb
push
add
decl
icebp
pop
aad
imul
pop
sbb
mov
call
pop
dec
dec
mov
inc
test
cmpsb
and
outsb
insb
leave
sub
cmpsl
cmp
mov
and
test
xchg
fsts
pop
jo
xor
in
dec
mov
outsl
in
inc
repz
mov
stc
xchg
xor
popf
icebp
cmp
ja
lea
popa
mov
dec
push
pop
mov
imul
test
das
sub
jmp
xor
jno
or
push
gs
sub
test
repz
mov
mov
sbb
pop
lods
mov
jge
imul
hlt
fwait
rcr
push
aaa
mov
or
xlat
adc
dec
mov
sub
inc
sbb
pop
dec
stos
dec
dec
push
call
dec
push
mov
scas
fsts
popa
sbb
mov
push
jmp
repz
enter
hlt
and
outsl
data16
jecxz
nop
pushf
mov
pop
bound
mov
scas
jns
imul
xchg
mov
sub
dec
imul
test
sub
pop
jb
add
and
aas
jne
ret
dec
jae
daa
cs
pop
sub
jbe
mov
fsubl
es
mov
andl
push
dec
jbe
mov
push
stc
test
sbb
adc
cltd
fldcw
pop
xchg
xchg
xchg
jne,pn
or
das
xor
adc
dec
cmp
lcall
sti
xchg
icebp
iret
sti
pop
dec
scas
jle
jp
inc
add
aas
push
xor
xchg
int
ljmp
daa
jp
data16
icebp
shl
pop
mov
mov
xlat
adc
dec
inc
ds
jmp
pop
lds
and
sbb
adcb
inc
jmp
rorl
pusha
dec
andl
outsb
popf
lods
push
std
aad
cmp
popf
in
aaa
in
scas
mov
pop
mov
rcrb
iret
arpl
divb
push
jno
push
push
shl
sahf
imul
into
mov
sub
xorl
sbb
cmp
mov
jle
mov
pop
jecxz
jns
ret
push
pop
and
repnz
sar
mov
sub
daa
out
pop
jae
cmpsl
jmp
aam
fldenv
inc
jmp
add
pop
xlat
arpl
popa
push
lcall
idiv
into
pop
sahf
cmp
jle
pushf
repz
dec
dec
push
fildl
fistpl
mov
movsl
cmpsl
jne
mov
or
push
xchg
pushf
inc
push
mov
push
add
cmp
xor
push
sbb
xchg
mov
jo
mov
mov
sbb
int
jmp
testl
ja
addr16
imul
dec
mov
jecxz
leave
dec
sub
cmp
push
movsl
imul
lods
add
or
loopne
cmpb
scas
adc
adc
and
movsl
je
push
cwtl
stos
in
outsl
hlt
das
push
adc
cmpsb
loopne
inc
cmpl
jno
pop
fwait
jl
mov
cmpsb
or
push
jo
xchg
push
add
sar
or
icebp
ds
cmp
fsubs
xchg
add
fs
pop
stc
cmp
movsb
mov
gs
insb
jo
push
adc
enter
push
outsb
xchg
push
xchg
inc
mov
enter
in
sbb
mov
dec
xor
enter
add
cmpsl
sub
js
fs
jmp
daa
addr16
and
mov
insb
adc
aas
cmp
jnp
or
and
fbld
xorb
push
mov
mov
jle
mov
inc
and
movsl
fstpl
inc
test
mov
xor
mov
roll
cmp
jp
sbb
xor
xor
sub
outsl
test
sarb
aaa
fnstcw
sub
cmpsb
inc
mov
cs
jo
fldt
inc
pop
stos
jecxz
mov
lcall
lea
popf
jae
int
sbb
jmp
ret
lret
push
push
fistpl
add
stos
and
notb
sahf
mul
lahf
test
cwtl
lea
in
mov
movsb
push
cmp
int3
or
cmp
bound
mov
push
dec
insb
fs
sub
push
mov
jns
scas
xor
outsl
lods
sbb
outsb
loopne
jns
mov
loope
jl
add
outsb
sbb
cli
jb
pop
push
ja
jl
xorl
push
idivb
popa
insb
jecxz
sub
out
loopne
cmp
movsb
xchg
shlb
iret
repz
dec
clc
adc
xor
adc
inc
dec
insl
loopne
pop
lahf
gs
xor
test
or
out
pop
nop
adc
adc
pop
cli
fwait
clc
mov
inc
xchg
pop
lret
xchg
imulb
jnp
imulb
sub
fcomps
aaa
pop
pusha
xchg
paddsb
mov
cmp
shll
pushf
ss
mov
out
xor
sub
movsl
jmp
repnz
adc
test
dec
cmc
xchg
xor
jle
jb
fdivs
pusha
sub
jne
inc
lods
es
in
js
out
pushf
aaa
push
sub
or
mov
std
xor
mov
roll
mov
shrl
inc
mov
cwtl
fdivrl
mov
jl
mov
loop
mov
lods
jecxz
xchg
clc
dec
dec
push
xchg
xchg
adc
ss
bound
jbe
stos
popa
cmpsl
icebp
jp
dec
mov
xchg
ja
mov
mov
mov
jae
je
add
lcall
cwtl
inc
push
sub
jb
xchg
inc
stos
cltd
lods
int3
xchg
push
adc
adc
dec
mov
and
insb
adc
sub
and
cmp
iret
mov
cltd
mov
push
imul
jle
mov
in
push
jle
xorl
mov
mov
sahf
and
adc
fcoml
test
bound
sti
addb
movsl
stos
and
fdivs
hlt
mov
adc
out
adc
xchg
ret
cmpsb
fnstsw
clc
and
popf
or
cmp
dec
inc
xor
out
cmp
js
imul
loope
movsl
xlat
fiaddl
rcl
leave
loope
pop
xor
jb
and
sti
iret
mov
and
xchg
push
aas
fucomp
mov
test
cld
repnz
jns
fwait
xor
popa
cmp
fs
sbb
insl
shll
xor
sub
pop
es
add
cmp
lock
testl
nop
pop
adc
mov
out
out
in
dec
or
mov
sub
nop
test
dec
xor
into
ret
push
mov
pushf
mov
in
lock
push
sti
xchg
addl
xchg
stc
aas
jge
loope
in
mov
mov
movsb
xor
je
arpl
inc
outsl
cmp
jg
subb
test
or
data16
pop
cmp
jl
or
stos
jge
mov
xor
mov
nop
sbb
mov
mov
mov
mov
pop
loope
push
sbbl
adc
out
mov
mov
jne
lea
and
into
cli
inc
xchg
in
sub
jb
aas
push
jle
and
sbb
lods
les
or
add
xchg
ret
mov
xchg
test
cli
fwait
sub
das
into
xor
adc
aam
adc
or
dec
popa
ljmp
xchg
outsl
xchg
push
or
cmp
inc
ja
orb
cwtl
mov
and
add
mov
mov
mov
mov
subb
pop
lea
pop
push
inc
into
rcrl
adc
loop
push
addb
rorb
push
mov
sti
xor
nop
outsl
pop
sub
jle
or
mov
sti
cmp
mov
jb
xor
xchg
and
inc
int
popa
jno
cmp
xchg
int3
les
push
imul
imul
xor
cmp
pusha
push
pop
cmp
repz
enter
fdivl
xchg
outsb
in
jp
mov
pop
add
popa
sub
cmc
jmp
loopne
xor
fdivr
test
int
mov
fistl
pop
push
xor
or
lods
or
out
cmp
sbb
and
sbb
fisttpl
dec
ja
out
mov
stos
loopne
add
and
and
leave
sub
in
dec
pop
es
push
cmp
lock
xchg
sar
dec
pusha
out
fcmovnu
cld
inc
mov
inc
pop
dec
shll
xchg
sub
loopne
in
lods
movups
repz
xor
push
nop
out
cmpsb
and
pushf
dec
inc
cmp
fwait
mov
lea
pop
or
jnp
or
inc
js
inc
fidivl
outsl
cmpsl
stos
push
sbb
hlt
sub
lret
test
mov
sbb
movsb
sub
push
pop
insl
adc
and
pop
hlt
jo
xchg
pop
sbb
cmp
xchg
lds
lods
adc
mov
subl
or
repnz
sub
test
arpl
lds
aad
inc
add
adc
lahf
add
mov
lods
mov
mov
hlt
popa
jns
ret
mov
xlat
popa
fdivrp
orb
jl
pop
add
jne
gs
xor
daa
mov
jno
cmpsl
frstor
rclb
outsl
sub
repz
and
pop
xor
std
nop
cmpsb
xchg
testl
mov
and
xchg
mov
cs
ret
sti
fwait
stos
bswap
data16
mov
push
cli
jg
out
and
cwtl
loope
es
mov
and
adc
jp
popf
pop
cmp
mov
sbb
add
mov
testb
pop
jge
scas
aas
scas
sahf
inc
mov
mov
cmp
push
mov
mov
aas
in
jecxz
add
add
mov
add
and
sub
cmpsb
cmp
in
xchg
cmp
jp
xor
lahf
scas
push
add
mov
pusha
jecxz
fwait
fwait
pop
fnsave
sub
stc
jg
test
xor
or
push
pop
jecxz
repnz
and
sub
ret
ret
jp
int
popf
call
mov
stc
mov
lret
adc
push
das
das
sbb
mov
stos
pusha
and
dec
sbb
movsb
xchg
pusha
mov
mov
pop
daa
clc
aam
subl
jp
xlat
les
mov
fstps
inc
sbb
xchg
sbb
nop
cld
inc
pop
cs
pushf
je
pop
scas
rclb
in
or
adc
cmc
aam
addr16
xor
jne
out
mov
adc
bound
mov
jmp
out
jmp
mov
dec
or
icebp
mov
jmp
cmp
inc
rolb
and
xchg
adc
ss
enter
inc
in
loope
scas
orb
jl
stc
adc
jnp
rorl
shr
pop
mov
addr16
inc
scas
xor
mov
rclb
xor
push
lahf
pop
gs
push
iret
add
loopne
fs
sub
push
sub
shlb
cmp
notb
sbb
inc
jmp
loop
cmpsb
sbbb
test
adc
sub
cmp
mov
rcl
ljmp
mov
cmp
adc
std
out
repz
jle
lret
out
repnz
adc
mov
cmp
testb
mov
jno
pop
push
incl
cmp
xchg
jp
fdivrs
aas
mov
adc
xor
lahf
pop
sbb
mov
rorl
das
mov
push
lret
mov
dec
ja
in
pop
shll
mov
scas
fdivl
shlb
or
ret
push
enter
sahf
dec
mov
lcall
sub
xorl
push
bound
xor
in
xor
mov
xchg
fldenv
mov
lret
shll
add
mov
mov
mov
orb
inc
cmp
fisttps
pop
sbb
arpl
mov
mov
aaa
push
int
mov
jp
mov
arpl
aam
addl
cmp
idivb
mov
inc
jecxz
lock
fld
xchg
push
xchg
push
jg
mov
pop
enter
popa
pop
inc
sti
xchg
inc
push
inc
mov
ljmp
dec
int3
clc
loop
jno
or
ret
fstl
dec
rclb
mov
das
and
data16
test
inc
stos
pop
mov
pushf
pop
mov
dec
pop
cs
jb
jne
shrl
notb
jns
xor
ror
aaa
addl
lods
pop
cmp
test
in
rolb
aam
es
sbb
stos
fstl
xor
cltd
js
add
mov
bswap
inc
dec
inc
dec
dec
or
test
pop
rcl
leave
int
push
movb
pop
pop
add
or
xor
cmp
or
sub
jnp
mov
cmpsl
jae
gs
add
stos
jle
mov
bnd
cmc
cmp
xorl
into
lods
ja
mov
sar
loope
mov
insb
outsb
or
lods
mov
mov
in
add
in
sub
lahf
or
inc
push
adc
je
cmpsl
jbe
or
push
mov
dec
sarb
clc
ret
fidivs
inc
ljmp
outsl
in
popa
inc
dec
cwtl
push
out
xchg
adc
sbb
jle
adc
sahf
loope
ror
jns
int
dec
lock
ja
arpl
mov
mov
cmp
stc
ljmp
fdivrs
insb
adc
daa
out
pop
into
cmp
sub
fdivrs
outsb
inc
pop
into
mov
cmp
lods
sarl
fsubrp
hlt
xchg
sbb
popf
out
and
xchg
inc
jbe
pop
cmp
jnp
mov
mov
mov
and
xor
push
mov
repz
sub
pop
fs
push
cltd
mov
sbb
mov
cmpsl
mov
test
inc
jae
pop
ret
jo
adc
xchg
xor
pop
fcmovnbe
arpl
push
daa
push
jbe
cmp
push
xor
adc
stos
cld
incl
dec
imul
jecxz
test
dec
sbb
and
shl
xchg
lods
pop
mov
fs
jecxz
push
fdivs
cmp
mov
fs
inc
dec
jne
sub
mov
push
sub
push
fdivs
mov
daa
clc
leave
and
in
lahf
das
addl
enter
cltd
into
je
ja
xchg
sti
dec
mov
icebp
dec
jecxz
xchg
push
popf
push
les
inc
push
int3
xlat
or
mov
push
adc
jb
sti
imul
stc
dec
dec
add
into
sbb
push
loopne
push
sbb
sub
inc
imul
mov
xchg
xchg
mov
out
sahf
push
stos
xchg
les
jmp
stos
fildl
gs
jp
xor
repnz
mov
outsb
xchg
adc
push
repnz
fcom
cld
lcall
in
flds
clc
sbb
cmp
outsb
jbe
adc
and
dec
fcoml
sbb
pop
dec
or
push
jno
cmp
dec
popf
cltd
jbe
pusha
fiaddl
outsl
lcall
adc
in
and
add
xlat
or
jmp
or
adc
sub
lret
mov
enter
js
loop
mov
sbb
sub
mov
lret
xor
ret
sbb
push
sbb
mov
jecxz
dec
ret
pop
hlt
push
es
or
jae
iret
push
shll
mov
jmp
mov
dec
testb
mov
jbe
push
jb
mov
fsubs
xor
and
adc
out
mov
or
imul
std
lret
push
roll
nop
xor
and
daa
lcall
std
paddw
sub
push
out
sbb
mov
dec
jp
xor
stos
sbb
mov
xchg
xchg
push
pop
push
dec
inc
mov
and
pop
lods
adc
or
div
dec
mov
jmp
das
cs
push
adcb
adc
iret
dec
jae
popa
jo
xor
sbb
jl
sbb
pop
mov
dec
mov
aas
or
loope
mov
les
ljmp
sbb
add
pop
mull
hlt
jmp
lods
mov
daa
fsub
pop
mov
movsl
enter
xchg
and
add
sbb
mov
cmp
les
scas
inc
inc
push
add
jbe
repnz
loopne
sbb
js
clc
int
ljmp
mov
inc
in
sbb
roll
ss
stos
ret
insl
xchg
std
cmp
or
xchg
cmc
inc
mov
sub
cs
xor
popa
jge
push
daa
mov
mov
and
cld
jg
push
xor
sbb
nop
cmpsl
pop
inc
and
or
lahf
stos
sbb
xchg
out
orb
testb
stos
cmp
push
push
ja
loope
mov
jecxz
dec
mov
cmp
cmpsl
hlt
inc
jae
xchg
pop
push
mov
pop
movsb
push
popa
aad
mov
xor
sub
int3
outsb
mov
les
mov
push
ds
shll
shll
sbb
xor
fidivrl
loopne
inc
jl
sub
jae
push
cmp
jno
sbb
inc
mov
in
mov
es
insb
dec
fidivs
fisubrl
push
gs
mov
jl
fwait
movsl
and
cmpsb
dec
int3
xchg
dec
popl
mov
add
xchg
pinsrw
xchg
xchg
add
cmp
sub
sub
inc
push
stc
lcall
into
jb
xlat
push
pushf
add
push
adc
inc
pop
jns
movsb
cmpsl
or
dec
pop
call
cmp
pop
mov
out
mov
into
fidivrl
mov
sbb
mov
movsb
das
das
adc
jae
orl
push
rorl
ficomps
int3
xchg
sub
je
fcomi
add
lahf
sbb
xor
mov
ret
jns
dec
iret
addr16
fimull
mov
loope
and
or
push
hlt
xor
movsb
jo
push
mov
imulb
or
or
sbb
mov
sbb
adc
lahf
shlb
pusha
jp
pusha
cmc
xchg
sahf
unpckhps
jl
cltd
rcrb
cwtl
std
cmp
jnp,pt
xchg
clc
pop
jg
xchg
xor
xlat
and
stos
fs
lret
lods
push
rolb
call
out
push
pushf
inc
dec
pop
xchg
mov
push
dec
xor
jge
pop
rorb
xor
gs
xor
gs
xor
enter
push
sbb
sub
jg
mov
inc
ja
jg
into
mov
xor
outsb
jmp
aas
pop
test
xor
in
jne
pop
aam
shlb
mov
ja
les
out
mov
jmp
pop
cmpsl
or
inc
stc
add
or
fs
fstps
add
lods
mov
dec
shlb
out
scas
adcl
push
not
inc
jne
in
push
int
outsb
fisttps
pusha
sub
xchg
xchg
sbb
loope
arpl
sarl
adc
pop
gs
xor
jmp
imul
rcll
enter
and
adc
mov
and
stos
push
rcrl
push
jae
mov
ret
test
jl
sbb
test
fbstp
jl
sub
fwait
dec
and
aaa
mov
loope
ret
ljmp
in
out
pop
push
ljmp
icebp
lods
sbb
sbb
in
idivb
xor
mov
nop
imul
cmp
insl
pop
jns
push
rclb
lea
pop
or
mov
jle
jle
and
cld
xchg
add
subl
push
pop
mov
divb
inc
add
cmp
add
in
inc
mov
pop
mov
xor
jecxz
les
dec
mov
incl
push
push
test
insl
ja
jnp
loop
cli
fisubl
push
cmp
into
mov
lcall
xchg
xor
shl
sub
shll
and
roll
cmpsl
aam
dec
shrb
xchg
test
mov
jge
xchg
data16
pop
mov
cmp
stc
scas
shl
scas
nop
mov
movb
scas
jecxz
pop
int3
inc
repz
aaa
fimuls
lcall
aaa
adc
enter
cmp
jo
in
loope
xor
push
cmp
stos
cmp
pop
enter
and
std
hlt
call
add
inc
clc
jmp
fisttpll
add
xchg
mov
pop
jns
loopne
icebp
cmp
pop
jmp
inc
inc
cmc
add
mov
inc
nop
lods
or
lods
sbb
movsl
stos
outsl
idiv
pop
mov
pop
pcmpgtd
iret
adc
push
pop
jo
in
xchg
push
mov
fldcw
push
push
jns
sarl
cmp
and
in
sub
imul
mov
lret
xor
scas
imul
ljmp
ficoml
call
mov
test
lods
imul
stc
pop
xor
push
xor
push
iret
out
xchg
dec
and
jle
jg
jnp
mov
mov
push
jmp
push
mov
mov
xchg
mov
addr16
filds
pop
mov
imul
not
sub
ffreep
loope
cmp
aas
cld
stos
sub
xchg
push
ljmp
jne
repnz
inc
in
dec
sbb
jae
and
push
enter
push
aam
mov
out
or
jnp
or
out
arpl
mov
sub
adc
or
adc
rcrb
add
sub
pop
sbb
hlt
jecxz
sbb
cltd
icebp
aaa
aaa
jmp
jnp
int
cmp
pop
adc
movsb
cli
dec
inc
mov
mov
addr16
ljmp
jns
mov
push
js
test
adc
mov
xor
push
fcoms
and
cli
bound
adcl
mov
or
std
aad
ja
jnp
adc
sub
xor
sub
mov
scas
cmpsl
jmp
sbb
or
and
mov
xor
ljmp
test
mov
pop
clc
mov
xor
xchg
adc
mov
xchg
fisubs
xchg
dec
adc
pop
pextrw
sbb
int
pop
add
dec
sub
fbstp
xchg
add
imul
push
subb
fidivl
mov
cmp
push
roll
std
xchg
stc
sbbl
pop
out
fs
push
xchg
stos
and
inc
mov
pop
inc
or
sbb
lods
ss
ret
lcall
mov
push
pop
jmp
xchg
lock
dec
xchg
mov
add
mov
je
xor
scas
dec
mov
inc
xchg
mov
pushf
inc
adc
lock
mov
das
cmpsl
jbe
mov
xchg
aad
pop
fists
jno,pn
pushf
jnp
jae
jne
xlat
push
scas
pop
fcomip
xchg
push
loop
in
inc
aad
pop
lahf
dec
or
dec
xchg
sahf
mov
jb
mov
and
add
xor
cli
in
jle
sub
popa
xchg
int
iret
xor
hlt
out
pusha
shl
sbb
xchg
adc
aas
aaa
mov
or
in
cs
push
enter
in
mov
adc
outsb
inc
fdiv
jl
fsts
iret
arpl
or
mov
lods
lea
mov
arpl
icebp
or
pop
xchg
add
sub
divl
nop
push
adc
inc
inc
xchg
sbb
cmp
inc
repnz
xchg
nop
mov
jmp
hlt
inc
ss
mov
pop
cmp
mov
leave
push
gs
push
jmp
jp
ljmp
cltd
scas
push
divb
xchg
pushf
ret
frstor
dec
xor
adcl
xor
rorl
xor
mov
jne
add
cmpsl
dec
or
out
xchg
push
cmp
adc
mov
jae
clc
jp
mov
int
dec
aas
ficompl
push
pushf
lds
stos
imul
subb
jns
inc
aam
sub
and
xor
dec
nop
sbb
sbb
and
dec
pop
in
xchg
or
and
mov
lock
or
ret
mov
xchg
flds
leave
xchg
adc
jae
mov
dec
adc
lods
fmul
das
test
lahf
decl
and
push
jl
xor
mov
out
shlb
xchg
adc
aas
test
jl
or
inc
or
into
pop
sub
add
jno
insb
sti
lock
lods
adc
out
mov
or
add
jg
mov
aam
movsb
les
cmp
add
idivb
test
mov
push
es
outsl
and
lret
xor
jecxz
or
adc
fisubl
dec
out
and
cmp
push
pop
mov
addb
mov
and
insb
push
mov
stos
leave
out
daa
dec
and
out
mov
jns
mov
jae
jns
je
ret
mov
and
imull
mov
pop
dec
mov
jp
mov
xor
and
inc
sub
les
lods
lods
neg
jbe
outsb
repz
es
pop
in
dec
cld
lret
popa
mov
cs
push
push
cltd
mov
loope
add
fidivs
aad
jp
aas
adc
xchg
pop
mov
lahf
test
aas
lea
ret
and
cltd
inc
pop
jne
xor
pop
or
pop
ss
fbstp
pop
lret
shlb
fs
shll
mov
inc
push
xor
stc
into
addr16
arpl
mov
or
not
or
cmp
adc
addr16
or
or
sahf
imul
je
sbb
loope
repz
test
arpl
inc
xlat
dec
add
dec
fisubrl
imul
clc
push
cwtl
inc
dec
subb
cld
push
pop
or
add
lcall
movsb
mov
jne
add
add
and
pushf
mov
sub
scas
xchg
push
dec
fisttps
je
mov
push
and
add
cwtl
fisubl
push
xchg
pop
dec
xor
sbb
or
fwait
or
rcr
ja
iret
aad
xchg
pop
aam
mov
ss
roll
lock
aaa
rcl
xchg
fidivl
sahf
inc
mov
std
jl
pop
sbb
add
subl
jnp
or
mov
test
sub
enter
pop
or
mov
imul
loopne
ret
lds
lahf
add
ds
push
adc
cmpsb
xchg
cltd
and
aad
jnp
lcall
in
push
dec
fwait
xor
mov
inc
mov
or
dec
cmpsb
sbb
cltd
xchg
in
xchg
jmp
stos
mov
jmp
pop
xor
jmp
jg
inc
and
inc
loop
xchg
das
or
add
fidivl
sbb
xchg
dec
jg
mov
stc
cmp
filds
addr16
test
cld
jae
or
arpl
sbb
jnp
icebp
int
add
xor
adcb
xchg
sub
leave
cmpsl
fwait
xchg
xchg
repz
mov
stos
fildll
and
ss
add
pop
push
pop
adc
inc
add
in
pop
ret
inc
xor
ret
xchg
arpl
mov
bound
jecxz
mov
lret
outsb
mov
and
or
adc
mov
inc
xor
jnp
xor
and
xchg
xor
imul
flds
into
inc
inc
loopne
push
stc
push
fwait
add
adc
or
adc
lret
leave
lds
cmp
adc
out
pop
pop
mov
cmp
test
test
test
je
mov
dec
scas
cmpb
sbb
inc
cmp
popa
stos
cmpsl
mov
mov
push
lret
jmp
dec
dec
cmc
sbb
inc
adc
mov
jl
sub
je
push
ficomps
cld
fstl
ljmp
cltd
cld
mov
or
cmc
sbb
sub
sbb
mov
mov
xor
or
adc
movsb
lahf
sub
insb
push
outsl
lfs
xor
imul
jl
push
xor
sbb
xchg
cli
mov
inc
jmp
push
dec
or
out
bound
jb
jne
or
stos
xlat
xchg
sub
scas
int3
add
test
xor
sbb
add
push
sbb
and
mov
scas
add
fidivl
and
sti
bound
sbb
shlb
filds
dec
and
les
sbbb
and
repz
xor
movsl
dec
cmp
or
pop
mov
jne
cmpsl
or
push
imul
fmuls
pop
jle
fnstcw
dec
movsb
push
movb
rcrb
xchg
cmpsb
les
gs
inc
jns
cmc
or
jecxz
enter
inc
adc
je
adc
testb
push
or
pop
ds
or
mov
out
sti
add
jae
cltd
sbb
jge
sub
ljmp
sarl
hlt
pop
test
daa
les
mov
xchg
icebp
daa
cmp
xchg
mov
push
out
mov
push
or
mov
lds
daa
nop
shlb
mov
fdivs
stos
loope
or
mov
fldenv
and
xor
out
fdivr
lea
fcoml
pop
jle
pop
inc
add
dec
stos
out
hlt
dec
pop
inc
xchg
std
das
mov
xchg
jmp
into
xchg
mov
add
pop
in
aas
xchg
adc
mov
adcb
icebp
adcb
or
or
lcall
cs
adc
test
aas
jb
push
push
test
lods
mov
xor
arpl
jns
out
sar
sub
lret
loope
lcall
add
adc
orb
xchg
jge
pop
dec
stos
gs
lock
inc
std
aad
enter
xor
pop
jge
cli
xchg
jge
cmp
jns
dec
mov
fists
lods
lods
fildll
movsl
outsl
push
pop
lret
insl
jb
mov
inc
jg
jno
stc
jecxz
loope
dec
lret
pusha
jb
fcomip
push
pop
scas
loope
mov
and
shll
xchg
outsl
pop
or
pop
rolb
pop
call
xchg
xchg
jnp
addr16
and
popa
repz
adc
movsb
data16
inc
dec
scas
shr
cld
js
jmp
rorl
inc
movsb
scas
xchg
cmpsl
icebp
lods
cmp
rolb
icebp
int3
ret
repnz
test
daa
insl
pop
das
fs
mov
nop
or
sub
int3
test
sti
scas
idivb
cmpsb
mov
mov
aaa
mov
clc
data16
xor
mov
subb
rcll
lea
in
adcb
mov
pop
test
mov
lret
dec
or
add
lods
aaa
cltd
mull
bound
xchg
mov
scas
mov
dec
push
mov
std
cmc
int
aaa
mov
inc
xchg
and
repnz
sbb
sub
fisttpll
sbb
bound
add
pop
fcompl
adc
lock
stc
cltd
jle
inc
dec
cld
mov
flds
and
xor
inc
fimull
outsb
sbb
pop
out
push
jno
mov
mov
and
push
dec
mov
pop
xor
loop
iret
loope
ds
pop
xor
push
bound
pop
inc
scas
cli
or
ficoml
mov
jb
jne
push
or
push
or
sub
and
imul
sar
test
std
stos
ficomps
mov
enter
dec
and
lods
ljmp
cmpl
dec
cmp
xchg
mov
adc
jno
out
or
inc
pusha
loopne
popa
or
adc
jle
clc
mov
outsb
mov
pop
cmc
and
xor
xchg
dec
es
mov
adc
fwait
out
add
push
inc
pop
testb
les
dec
nop
sahf
sti
sub
pop
mov
into
and
jmp
fiaddl
sub
jmp
loopne
ficompl
xor
shlb
stc
mov
mov
cmp
fwait
mov
sub
cmc
or
xchg
mov
mov
movd
sbb
out
jns
mov
adc
xchg
and
jge
inc
and
mov
adcl
es
dec
jbe
ds
sub
jo
enter
cltd
sbb
out
ds
sub
test
fstpt
mov
add
dec
das
out
imul
mov
pop
mov
mov
dec
es
fsubl
scas
movsb
ljmp
das
cwtl
adcb
icebp
dec
ss
pop
lret
mov
repnz
and
aad
jne
test
add
imul
add
cwtl
mov
add
aam
in
xchg
shll
and
jo
jbe
mov
movsb
js
cli
insl
sahf
jnp
xchg
test
rorb
fwait
cwtl
xchg
cmpsb
push
aaa
hlt
add
ljmp
std
inc
or
adc
in
inc
push
xorl
xor
push
sub
cmp
jmp
testl
add
aas
and
push
mov
adc
cmpsl
pop
fcomip
cmp
das
sub
inc
mov
jnp
fwait
pop
adc
icebp
ja
add
cwtl
push
popa
xchg
lock
xor
sbb
aam
fimull
scas
mov
lcall
xor
mov
jbe
xchg
insl
jns
icebp
iret
push
sahf
test
imul
sub
sub
and
outsl
js
test
lds
push
fsubl
loope
cmp
dec
add
xor
lods
stc
jns
out
sarb
ja
and
fsubrl
and
sbb
bound
cmc
push
cmpsb
mov
sbb
shll
pop
aam
gs
adc
jb
hlt
call
and
push
push
cli
insl
mov
repnz
int3
and
cmp
outsl
lret
in
mov
or
outsb
mov
xlat
xchg
pop
ret
out
or
enter
jmp
rol
adc
jo
aaa
nop
pushf
movsb
rcrb
scas
jle
jg
nop
stos
mov
or
inc
gs
sub
dec
cmpsl
add
mov
jne
cwtl
sub
pusha
fwait
dec
rclb
mov
push
pop
ret
or
dec
je
jmp
shl
or
cmp
xchg
cmp
loopne
repz
xor
rcrl
sub
add
or
mov
mov
xor
jg
loope
adc
call
cmpsl
sub
xor
and
repnz
add
test
and
or
jl
and
jbe
lods
xchg
xor
cmc
pop
cmpsb
cmpsl
and
mov
xchg
cmp
mov
lds
ret
inc
pop
iret
jl
vshufps
wrmsr
mov
xchg
arpl
jne
fdivs
shlb
adc
scas
xchg
jle
and
push
in
test
pop
mov
mov
push
aaa
cmp
movsb
loopne
cmpsb
enter
sbb
mov
pusha
inc
mov
jle
lock
movsl
pop
jp
jae
and
popf
mov
or
js
adc
cmc
pusha
dec
int3
dec
push
les
or
fbld
int3
fnsave
push
lea
stc
pop
and
add
push
outsb
xor
mov
test
lcall
mov
xchg
dec
pop
pop
jmp
bound
cmp
xchg
data16
inc
adc
fistpll
daa
dec
in
adc
push
ds
jb
inc
loope
inc
jb
push
call
popf
in
call
push
dec
stc
cmp
insb
test
add
dec
sub
cld
mov
mov
inc
mov
xchg
les
cmc
mov
jecxz
sub
int
out
add
push
aaa
rcrl
push
inc
dec
test
inc
nop
add
xchg
pop
data16
dec
test
and
inc
xchg
cmc
repz
jmp
test
sub
adc
in
nop
push
mov
jge
dec
aaa
pop
test
sahf
push
push
iret
pop
pop
inc
xchg
pop
add
popa
movl
adc
adc
xchg
mov
in
adc
push
not
add
cmp
or
push
sbb
aam
inc
cmp
fwait
and
pop
add
imul
test
inc
pop
gs
subb
ret
cmpsb
push
fdiv
lret
jae
mov
cmpsl
cmp
xchg
add
sbb
mov
sub
or
cmp
sub
idiv
popf
inc
mov
adcb
push
jg
ss
repz
call
pop
popa
and
mov
insb
or
sbbb
mov
xchg
and
lods
lock
mov
mov
ds
and
daa
fdivrl
sbb
add
cmp
les
ret
arpl
rcr
insl
test
andl
dec
cltd
inc
add
cltd
sahf
sbb
xor
inc
call
push
lea
jmp
xchg
inc
dec
rcrl
mov
mov
inc
aas
adc
mov
add
loope
aad
stos
std
push
mov
inc
add
jae
ret
es
dec
jbe
sub
mov
pop
sub
mov
mov
rol
lret
cmp
cltd
bswap
daa
or
mov
cmp
mov
pop
aas
pusha
fimuls
ja
data16
loopne
mov
test
mov
xchg
or
pop
cltd
imul
insl
jb
jbe
mov
cmp
inc
fdivrs
fcomp
xchg
dec
adc
add
mov
dec
or
pop
sbb
lcall
xchg
ljmp
cmp
enter
push
aad
or
xchg
lcall
mov
sar
xchg
dec
jo
cmp
pop
daa
adc
dec
sbb
mov
push
dec
test
and
jp
fstpt
clc
adc
aad
sahf
ja
std
adc
stc
mov
push
subl
insl
xchg
pop
out
push
push
inc
fs
adc
sti
cld
pop
mov
jo
cmpsl
inc
ret
mov
add
imul
aaa
lods
fcomps
pop
ljmp
mov
xchg
fchs
sub
push
or
and
sbb
daa
fs
loope
fnsave
addb
inc
iret
add
cmp
out
roll
fimuls
xchg
in
dec
adc
mov
in
ret
loope
popl
pop
insl
rclb
lcall
lods
ja
mov
mov
jmp
andb
push
push
ds
mov
je
lods
das
in
lcall
push
jae
mov
adc
daa
fwait
or
mov
fnstenv
pop
sub
jl
adc
mov
mov
and
jle
sbb
dec
or
sti
in
mov
popa
mov
cmc
test
xchg
push
jne
cmp
pop
xor
lret
in
mov
leave
push
call
nop
push
std
movsb
arpl
sbb
add
mov
push
mov
repnz
cmpsb
pop
jle
andl
mov
add
mov
test
mov
mov
sahf
arpl
imull
mov
xchg
out
sub
fists
iret
xchg
test
or
daa
pop
in
clc
mov
push
hlt
mov
stos
ja
lahf
fstl
ret
inc
out
mov
dec
sbb
sahf
mov
jno
and
xor
icebp
dec
in
lock
push
sub
mov
pop
cmp
adc
push
out
into
and
pop
cmp
jecxz
imulb
negl
mov
cmp
movsb
movsb
adc
adcb
rclb
lods
and
or
push
xor
dec
and
aaa
mov
fisubrl
xchg
stos
sbb
pop
ret
sub
xchg
sub
lret
adc
adc
enter
dec
test
jbe
mov
push
add
es
sub
in
sbb
push
push
icebp
bound
jno
jecxz
movsb
in
popa
cmc
dec
dec
adc
xchg
lcall
sti
mov
out
mov
mov
scas
jae
sub
inc
or
xchg
mov
and
mov
dec
cmp
push
popf
push
fisubs
daa
add
das
pop
js
sbb
jb
mov
push
rol
scas
pop
test
cmp
inc
pop
cmp
xchg
or
mov
pop
ret
push
nop
add
and
dec
xchg
cld
test
and
arpl
aam
sub
jb
pop
pop
aaa
insb
add
repz
je
inc
dec
add
in
pop
dec
and
and
cmpsl
push
lahf
push
add
dec
dec
clc
mov
and
movsb
pop
sarb
out
dec
outsb
cmc
shll
dec
inc
or
sub
xchg
xor
lock
movsl
xchg
sbb
cmp
clc
push
mov
ficomps
fdivrl
sbb
sbb
mov
movsb
test
popa
or
mov
insl
cmp
and
cmp
outsl
mov
and
in
pusha
sbbl
sti
xor
test
repnz
pop
lds
jmp
cmp
movsl
mov
das
jb
lret
pop
dec
jno
cltd
lahf
mov
js
push
xchg
cld
cmp
lahf
xchg
push
or
jne
xchg
mov
mov
add
lahf
jge
inc
sarl
icebp
cmc
sarl
push
lcall
lahf
mov
sbb
xlat
cltd
notb
inc
mov
push
and
push
repz
mov
inc
adc
scas
cmp
push
shlb
jle
jle
adc
and
sbb
mov
sub
sub
test
inc
adc
mov
mov
xchg
pop
xorl
ja
cmove
and
push
push
arpl
arpl
pop
push
inc
test
orb
xor
out
movsl
or
dec
sbb
ret
aas
jle
push
sub
jg
push
adc
hlt
xor
cmpsb
cld
push
aad
les
or
popf
sub
cmp
sbb
adc
inc
inc
add
adc
mov
fisttpl
cmc
popf
das
addb
dec
sub
mov
mov
mov
les
leave
mov
decl
dec
mov
pop
jp
sub
add
pop
inc
fs
lahf
in
out
call
mov
icebp
jb
lea
fnsave
pusha
xchg
sbb
lods
aad
pop
push
xchg
das
mov
shrb
dec
jbe
pop
mov
dec
xchg
orps
jns
xor
and
in
cmpsb
je
in
or
aas
sub
adc
pop
in
pop
and
pop
sbb
add
lcall
inc
push
xor
fstpt
sub
inc
dec
adcl
stc
test
icebp
mov
mov
mov
mov
xchg
push
lods
push
imul
dec
rorl
and
xor
bound
test
out
dec
xchg
mov
pop
dec
scas
fisttpl
rorb
pop
or
pop
jmp
movsb
mov
xor
xchg
mov
cmp
pop
dec
lock
inc
repnz
cmpsb
imul
xchg
ret
jmp
mov
aad
fcmovnb
pop
mov
std
add
out
xchg
ret
adc
push
jbe
inc
xchg
out
popa
xor
sbb
int
mov
push
xchg
fisttps
sub
mov
inc
je
les
adc
pop
sti
pop
sbb
pop
cmpsb
loop
adc
xchg
repz
fcmovnbe
cmp
xor
hlt
cs
sub
cmpl
mov
cwtl
mov
push
pop
xlat
cmp
test
lock
lret
aaa
roll
stos
jg
adc
inc
cmp
out
push
jl
add
test
mov
pop
lock
push
fs
jbe
orb
pushf
sub
xlat
jne
aas
jne
add
xor
fwait
lahf
test
sti
mov
jnp
fnsaves
bound
int3
xchg
pop
loope
dec
xchg
test
push
cmpsl
shll
mov
in
clc
push
push
repnz
jae
and
jbe
push
xchg
and
lods
popa
cmp
mov
cld
push
jle
ja
imul
jbe
dec
push
int
into
push
dec
fstpl
sbb
icebp
push
out
popa
pop
push
bound
xchg
pop
mov
lcall
adc
dec
mov
xor
jmp
sbb
mov
test
jbe
out
addr16
lods
xor
cmpsl
int
ds
je
mov
outsb
jmp
sub
mov
xlat
test
mov
sub
mov
popf
enter
xchg
mov
pop
jb
inc
mov
movsb
adc
sub
cmpsb
jl
pop
movsl
pushl
lock
dec
fstps
sbb
movsb
cmp
push
mov
xor
sbb
ficomps
push
loop
in
xorb
jo
add
mov
sub
xchg
icebp
jnp
mov
and
cmp
adc
or
jno
xlat
xor
jbe
push
xchg
inc
add
push
popa
fiaddl
fdivrs
and
aam
mov
scas
bound
lret
lds
xor
stos
adc
mov
outsl
rcrl
insl
int3
push
sub
jb
les
jle
xchg
add
adc
ret
xor
shrb
inc
pop
arpl
or
push
into
movsl
adc
jp
aad
lahf
sub
push
jle
dec
lock
adc
jl
aas
fcomp
pop
sub
pop
fs
xchg
mov
jmp
ret
xor
in
out
lret
aaa
fwait
out
xlat
xchg
and
jmp
inc
mov
ret
pop
mov
and
cmp
shl
faddp
mov
das
int
jne
mov
pop
movsl
pop
inc
xor
and
rcll
pop
mov
outsl
js
and
sbb
mov
sbb
pop
stos
in
cmp
add
movsb
pop
mov
test
lcall
cmp
add
data16
add
cs
mov
cld
pop
clc
stos
pop
sub
xlat
dec
mov
lret
int
and
aad
out
push
fnsave
and
dec
gs
cmp
imul
mov
mov
into
inc
mov
repnz
pop
mov
adc
jne
push
fwait
add
xor
stos
mov
adc
loope
cwtl
cli
xor
mov
fidivs
fwait
dec
and
pusha
inc
and
cs
bound
mov
pushfw
adc
sub
jb
sbbb
mov
sarl
jbe
xchg
or
pushf
xchg
mov
test
lods
inc
xor
mov
or
popa
mov
icebp
test
jb
mov
lea
in
lret
xchg
inc
xchg
jno
ja
jb
mov
bndldx
cld
or
cmp
movsl
sub
lods
addl
fldcw
xlat
movsb
movsb
stos
add
mov
or
inc
ljmp
loopne
shll
pop
int3
pop
mov
out
mov
and
jns
push
ret
repz
int3
rcrl
test
pop
pop
test
imul
add
inc
dec
sbb
cmp
movsl
or
cmp
adc
cmp
sub
lds
jno
pop
pushf
push
add
hlt
in
gs
call
xor
adc
mov
mov
jp
rclb
sub
ljmp
pop
pop
lock
test
mov
test
xor
ds
xchg
popa
fs
in
lods
xchg
adc
mov
iret
sub
mov
daa
repnz
jns
sub
lret
scas
push
je
ljmp
sub
popf
push
jmp
sub
xchg
xchg
mov
loope
repnz
sbb
jbe
fidivrs
lds
into
popa
mov
push
fildl
pop
sbb
pop
js
cwtl
rclb
sub
cld
lods
sbb
arpl
aaa
mov
in
push
mov
mov
stos
fstl
fwait
adc
clc
push
hlt
fisubs
pop
mov
xchg
idivl
repz
es
repnz
mov
xor
sub
pop
mov
push
jo
pop
adc
pop
fcomps
aam
inc
ficoms
cld
push
push
mov
pusha
or
and
sbb
sahf
push
mov
fidivs
hlt
popf
cmp
jge
dec
push
or
lcall
scas
cltd
mov
cmp
push
outsl
insb
iret
daa
sub
jge
mov
scas
jno
aaa
push
cmp
pop
ja
inc
mov
int
ret
aas
push
adc
addr16
xchg
dec
mov
pop
cmp
or
stos
enter
jno
rcll
ret
mov
test
testl
addr16
ror
loopne
bound
add
inc
and
inc
data16
or
das
test
ficomps
sub
fnstcw
cmp
mov
loopne
orl
mov
outsl
mov
cmp
inc
mov
cld
jmp
mov
mov
mov
out
mov
xor
xor
popa
cmp
stos
adc
int
cs
xchg
sub
imul
lods
jmp
push
xor
in
loope
or
in
stos
inc
or
lea
rcr
push
xchg
imul
xchg
shrb
dec
dec
mov
pop
and
rcrl
and
add
lods
mov
xchg
es
loop
jnp
cmp
into
xchg
pop
sub
es
inc
in
jge
mov
addr16
cmpsl
leave
lds
adc
adc
jno
aaa
pushf
mov
inc
jle
rcrb
out
jne
or
cmpsb
inc
mov
cli
test
repz
cmp
fcmovu
dec
cltd
ljmp
fisttpl
cmp
xor
inc
pushf
or
mov
jae
or
lods
pop
or
mov
cmp
lods
out
add
sub
enter
mov
cli
adc
push
fdivrl
pop
lods
ss
test
xor
aaa
xchg
pop
mov
sbb
push
pop
mov
sbb
rep
mov
sarb
out
fists
push
inc
js
cmp
pop
inc
loopne
outsl
xchg
sbb
xchg
repnz
mov
jecxz
push
mov
mov
std
ljmp
mov
mov
data16
ja
aas
jne
push
cmp
lock
call
js
mov
inc
test
lock
jo
lret
mov
inc
push
push
and
xor
test
repnz
mov
mov
into
lock
xor
in
sbb
adc
adc
adc
pop
rorl
jge
fsubp
xchg
imull
jle
pop
inc
imul
xor
js
mov
lods
hlt
js
pop
pop
xlat
ds
int3
cmpsl
in
jmp
jmp
xchg
xchg
xlat
inc
mov
adc
push
mov
jp
stos
imul
add
dec
test
mul
pop
pusha
je
fdivrl
jo
fidivl
inc
add
ret
sbb
cltd
jo
pop
outsl
rcrb
aad
push
clc
outsb
stos
xor
xlat
clc
and
dec
xorl
cmp
push
stos
rolb
dec
mov
mov
jl
pop
dec
jno
ret
xchg
ficoms
fs
add
cmpl
lock
in
mov
in
jo
ds
lahf
sti
add
test
cmp
or
mov
ja
repnz
mov
cmc
das
fucomp
push
aas
daa
scas
cmp
adc
jnp
push
fisttps
cmp
int3
test
adc
cmpsb
loopne
enter
out
sbb
cmp
loop
jg
xchg
sub
or
mov
dec
sub
jbe
sahf
lock
jmp
cli
pop
sbb
push
aam
ficomps
sar
aam
xchg
jae
subb
imul
test
iret
jns
bound
xor
lret
cwtl
fdivrs
jge
add
and
inc
clc
out
jge
fxch
dec
xchg
sbb
stos
or
out
arpl
mov
out
fwait
ja
addr16
fsub
sbb
pushf
xor
cmpsb
xchg
inc
sarl
std
mov
mov
ficompl
inc
mov
ss
jl
adc
xor
adc
pusha
aaa
or
lea
leave
cmp
adc
stc
addl
sub
insb
xlat
cmp
mov
xchg
adc
mov
std
negb
xchg
popf
or
daa
inc
mov
loop
xchg
mov
in
sbb
jne
nop
mov
scas
cli
lods
cld
dec
adc
jno
cmp
or
inc
push
xchg
popa
aaa
cmp
js
jns
fsub
dec
sti
dec
and
orb
sbb
sub
add
enter
mov
sub
sbb
mov
push
popa
push
jmp
pop
push
out
sbb
nop
pop
out
xor
cmpsl
push
sbb
push
mov
imul
push
jmp
fistpll
mov
sbb
aam
jle
lods
sbb
pop
jb
cmp
fbstp
jae
or
shrl
shrb
insl
jnp
push
fmul
mov
ret
jb
mov
mov
mov
or
cmp
int3
jecxz
fisubl
adc
lods
das
pusha
clc
inc
mov
stos
pop
cmp
push
sbb
outsb
jecxz
in
leave
loopne
js
adc
push
push
pop
mov
dec
xlat
pop
mov
sub
pop
push
jge
je
pop
jb
inc
shl
sub
gs
adc
and
icebp
sub
jo
dec
and
outsl
jecxz
mov
pushf
rol
and
xor
mov
push
popa
push
mov
std
out
pop
dec
push
ret
xor
cmc
lea
fisubs
pop
fistpl
cli
adc
pop
call
pop
aas
pop
popf
dec
mov
adc
push
fwait
sbb
cli
cmp
mov
ret
adc
mov
pop
outsl
mulb
sbb
dec
pop
xchg
sub
stos
mov
inc
test
add
pop
adc
or
mov
ret
stos
xchg
subl
xor
lds
push
aas
mov
push
rcr
push
lds
push
lahf
mov
inc
sub
fbstp
nop
or
outsl
decl
add
mov
pusha
dec
scas
push
test
rcrb
inc
mov
push
mov
jecxz
xchg
add
ror
loope
sti
inc
repnz
nop
pop
aam
jae
pusha
sbb
aaa
fwait
mov
pop
add
loop
lret
in
popf
test
mov
push
inc
insl
mov
pop
sbb
xor
jg
mov
push
dec
lock
push
imulb
mov
iret
rorl
adc
aaa
fwait
aad
jg
fsubrl
inc
stos
pop
mov
sub
mov
push
popf
inc
xor
subl
xor
lret
ffreep
int3
lds
popf
std
jge
daa
movsb
popf
dec
and
lods
and
sub
mov
sbb
xor
sub
out
mov
or
test
je
rcr
mov
es
or
mov
cmp
add
js
das
xchg
sbb
mov
ret
push
xor
inc
popa
push
mov
pop
mov
ljmp
xor
cld
sbb
dec
imul
xchg
out
movsl
xor
fsubl
push
ljmp
fistpll
and
sbb
push
rcr
push
lds
mov
test
cmc
fnstcw
dec
or
ja
jl
imul
dec
add
mov
repnz
fwait
push
inc
mov
outsl
xchg
jecxz
pop
aas
fwait
lods
lcall
mov
sub
push
fidivs
bound
in
arpl
dec
sarb
in
mov
fidivl
xchg
jp
call
mov
in
in
xor
adc
mov
add
aas
push
bound
xlat
mov
adc
pop
repz
or
fdivl
lods
pop
dec
xchg
int
xchg
popf
pop
mov
sbb
or
pop
imul
clc
or
lahf
mov
push
pop
push
inc
inc
test
jmp
pmuludq
test
fdivrl
fwait
or
push
mov
and
fbstp
xor
pop
cli
shll
fcomps
call
adc
mov
rcrl
nop
xor
mov
mov
imul
push
push
stc
mov
cmpb
pop
cmp
add
aam
outsb
sub
inc
mov
mov
test
xor
int3
add
sti
repnz
mov
dec
arpl
push
xchg
xor
int
mov
mov
test
mov
xchg
ljmp
jb
sarl
cmp
scas
ja,pt
and
popa
repz
mov
cld
inc
aaa
sbb
das
aaa
and
les
jecxz
movsb
mov
pcmpeqd
ret
xchg
or
jp
jbe
add
pop
ds
cmc
adc
daa
jmp
adc
cmp
std
xor
jg
scas
outsl
cmp
out
jge
mov
in
popf
testb
sub
lret
fs
or
or
in
lcall
movsb
mov
push
xor
pop
and
mov
add
shll
jae
sub
mov
lret
sub
inc
loopne
movsl
mov
adc
cmc
and
dec
lret
inc
and
sbb
sbb
inc
xchg
cltd
hlt
lock
shrb
imul
mov
push
int3
dec
bound
sbb
iret
pusha
mov
das
dec
add
inc
add
dec
inc
ds
mov
in
xor
push
gs
fistpll
mov
pop
loope
sub
pushf
push
hlt
push
push
push
or
fcoml
stos
ja
iret
sbb
ret
push
out
adc
daa
dec
push
popa
out
lods
sbb
mov
loope
adc
imul
xor
dec
rorl
addl
jo
push
sahf
push
icebp
pop
incl
sub
rcr
insl
in
aam
shll
pop
rcrb
out
fwait
dec
or
sub
scas
pop
into
mov
sbb
push
lahf
dec
lds
dec
adc
xchg
fmull
adc
mov
icebp
shll
adc
mov
mov
xchg
mov
cld
in
or
mov
sti
iret
jnp
and
in
ret
mov
and
sub
les
mov
int3
and
popw
popf
push
adc
pop
ret
ret
dec
dec
addr16
mov
cld
sahf
xor
xchg
cmp
or
aaa
add
xor
sub
lahf
out
fbstp
repz
pop
aaa
in
push
call
in
pop
xchg
clc
adc
popa
fwait
leave
cli
push
adc
cmp
sub
cltd
movsb
sbb
shr
in
lret
mov
pusha
in
rcl
mov
movb
inc
movd
outsl
xor
aad
shlb
adc
mov
and
test
cld
cltd
cmpb
jg
imul
imul
sbb
and
sbb
inc
push
jge
sbb
js
fmulp
xor
ret
nop
mov
stos
inc
lret
fisubrs
add
hlt
cmp
sbb
sbb
jb
fucom
pop
sbb
iret
dec
outsl
push
inc
add
mov
adc
pop
dec
call
xchg
fwait
push
popf
cmp
sbb
pop
icebp
movsl
cmc
cmpsb
xchg
xor
mov
fcmovne
scas
dec
lahf
cmp
sbb
rolb
rcrb
pop
jne
xchg
lret
jp
aam
stos
jb
sbb
xor
sub
dec
loope
add
aam
dec
sbb
push
xor
repz
jl
xchg
repnz
loope
push
mov
pop
mov
jle
scas
insl
sub
stos
push
pop
mov
cltd
cmp
lods
leave
mov
pop
jne
test
xor
xlat
iret
insl
jecxz
std
sub
add
inc
shrl
es
xchg
adc
insl
repnz
outsl
test
pop
or
cmp
jmp
test
xchg
sub
mov
sbb
push
out
dec
mov
mov
sbb
popa
push
adc
add
data16
xchg
aam
ljmp
mov
cmpsb
stos
in
sbb
sub
rcll
ret
jp
sbb
or
dec
outsl
int
cmp
ja
mov
stos
int
and
movups
fstps
pop
pusha
push
stos
inc
pop
xchg
andb
xor
add
sub
ss
nop
movsl
imul
lds
das
dec
out
xor
lret
out
jo
stos
jg
sbb
sti
daa
movsb
fwait
out
daa
push
or
sarl
fsts
add
xchg
pusha
sub
iret
xor
pop
adc
cmp
mov
icebp
push
test
rorb
dec
pop
aaa
fwait
ret
imul
cwtl
in
sub
arpl
push
and
andl
fcompl
dec
mov
xorb
cmp
icebp
rorl
mov
cmpsb
clc
gs
outsl
add
packssdw
mov
xor
cmc
sbb
xlat
fidivl
rolb
aaa
push
lds
out
daa
mov
cli
ljmp
stos
jecxz
mov
stc
scas
and
decb
ds
mov
or
push
sahf
ret
pop
fimuls
dec
cmp
std
or
push
or
cmp
xchg
sub
xchg
xor
les
rclb
out
movsl
cli
lcall
stos
aam
clc
mov
sub
in
xchg
pop
sbb
push
sar
lods
repz
incl
mov
pop
pop
xchg
pop
int3
fisubs
push
or
daa
push
adc
mov
lret
lock
sub
adc
or
sbb
out
lods
lods
jnp
push
inc
enter
push
mov
lahf
movsl
popf
imul
xlat
sarb
push
ljmp
fmul
push
sti
fiaddl
pop
int3
xchg
mov
outsl
cwtl
add
adc
xchg
pop
sbb
arpl
push
mov
mov
push
das
test
lahf
data16
int3
xor
sub
lahf
mov
xor
outsb
stos
pop
mov
sbb
lret
jnp
mov
adc
outsl
xor
push
rcpps
insb
stc
pushf
jmp
roll
daa
sbb
push
call
sbb
push
movsl
ret
popf
aam
sub
jae
xchg
fcoml
mov
push
cltd
mov
cmp
xor
sub
adc
fldt
sbb
and
shrb
imul
fsub
sti
mov
and
mov
xor
and
jb
push
in
sbb
cmp
sbb
testl
adc
mov
aam
xlat
xlat
or
ret
mov
inc
int
and
ds
cmpsl
push
nop
cltd
mov
or
scas
xchg
cmp
inc
outsl
call
mov
fsub
int
lods
fstpl
fistps
or
out
jmp
gs
call
push
mov
nop
int3
outsl
icebp
inc
pop
jle
cmpsb
jle
data16
cmp
hlt
or
subb
shll
fs
mov
cmp
inc
sub
mov
fisttps
pop
sbb
loope
xor
mov
imul
mov
aas
mov
add
arpl
push
adc
lret
adc
lahf
mov
xchg
ds
stos
cmp
pop
das
dec
inc
adc
bound
xor
lret
fisubs
in
outsl
test
mov
lcall
jp
sub
pushf
mov
mov
pop
jae
imul
test
test
insb
fbstp
scas
movsb
sbb
fs
jae
jo
dec
jae
dec
cmpsb
lret
push
inc
outsb
dec
xchg
pop
repnz
cs
add
cmp
fnstsw
push
js
shll
aad
xlat
add
int
data16
xchg
or
into
xor
xchg
mov
add
mov
pusha
or
rorb
or
jae
and
cmpl
das
stc
adc
adc
xor
pop
js
clc
jne
lods
add
pop
leave
test
imul
pop
shlb
jmp
in
sti
movsb
jge,pn
cmp
test
shll
mov
push
mov
or
jne
je
into
jle
inc
or
fldt
dec
sbb
push
fbld
jns
data16
dec
jbe
fbld
push
std
sub
push
push
or
cmp
mov
mov
je
sbb
inc
push
ret
push
dec
shlb
cmp
inc
pusha
shlb
scas
sbb
jecxz
mov
leave
popa
xchg
mov
sub
mov
lods
lahf
mov
mov
mov
push
aam
jo
rcll
lds
dec
ljmp
xchg
pushf
out
push
lods
sbb
cmpsl
cmpsl
mov
leave
ss
and
lcall
dec
pop
add
cmpsb
lahf
cs
jmp
cltd
xchg
lds
pushf
inc
xchg
xchg
aas
xor
ret
sub
in
lret
hlt
outsb
enter
pop
mov
in
fwait
bound
imul
mov
clc
dec
clts
stc
hlt
sub
rorl
out
add
daa
xchg
daa
pop
cmp
addr16
pop
mov
scas
xchg
inc
out
sbb
aas
rcll
mov
jge
mov
ss
pop
jle
mov
xor
adc
stos
inc
jnp
inc
inc
adc
and
out
cmp
jb
call
fsubs
shlb
int
fsubrs
shll
add
out
cmp
xor
jp
mov
lea
adcl
mov
lea
or
jl
aad
shufps
fstpt
or
cltd
shlb
push
scas
sub
lea
mov
rcll
aam
outsl
or
popf
mov
jge
jae
adc
daa
mov
xor
stc
shlb
sub
push
fwait
out
xchg
xor
scas
mov
and
shl
inc
and
rcrl
repnz
mov
xchg
inc
hlt
call
loopne
pusha
pop
mov
int3
repnz
jo
sub
ds
mov
test
xlat
push
lcall
adc
inc
add
mov
push
outsl
pop
aaa
cld
out
mov
aaa
ret
negb
jns
lods
adc
lret
fcompl
subb
addb
mov
inc
sub
in
xchg
pop
data16
insl
pop
ret
add
outsl
xchg
movsl
movsb
outsl
cmp
inc
mov
scas
adc
sbb
adc
mov
loop
aam
adcl
dec
or
adcl
fsubrl
push
mov
dec
and
mov
aas
enter
bound
rorl
mov
enter
and
jne
dec
incb
add
cltd
pop
lods
scas
pop
mov
cmp
mov
outsl
pop
loopne
fbld
outsl
mov
mov
dec
fwait
sub
or
ds
into
sti
mov
fimuls
dec
enter
js
add
jae
push
xchg
clc
out
loope
push
pop
mov
movsb
xchg
sbb
mov
testb
dec
test
repz
std
stos
sub
mov
add
mov
and
rcr
push
movsl
adc
idivl
or
inc
ja
jmp
bound
add
clc
fsubrs
fbstp
addl
cmpsl
sub
call
push
pop
dec
pusha
add
xor
out
mov
lods
push
test
inc
cs
push
adc
xor
popa
mov
scas
aad
lret
pushf
dec
mov
dec
loop
pop
test
mov
pop
repnz
out
out
pop
add
add
lods
jb
sbb
out
movsb
and
sbb
lahf
jecxz
cmp
adc
jg
subps
jno
enter
adcb
repnz
test
in
push
sub
pop
xchg
inc
mov
dec
adc
pop
cmpsb
push
add
xchg
pop
add
mov
popf
cli
dec
popa
and
rcl
sub
add
inc
or
or
test
sub
bswap
pop
mov
jp
fld
dec
adc
ficompl
fs
shl
and
sub
fsubrp
js
ds
adc
or
jecxz
js
aas
sub
sub
mov
pop
xchg
sbb
push
loop
mov
push
loope
sbb
jecxz
jnp
bound
les
testb
add
add
xchg
lods
jmp
fdivrl
cmc
cmp
fwait
scas
or
vmovntps
adc
push
jbe
jae
ss
mov
fcom
popf
pcmpeqb
lahf
repz
pop
xlat
mov
ds
push
movsl
stc
cmpl
ja
rorl
fs
mov
mov
clc
mov
jnp
xor
les
fcom
add
xor
lahf
push
lea
pusha
rolb
aad
out
xchg
mov
iret
cli
push
popa
cmp
inc
scas
jae
js
xrelease
cmp
rol
insb
stc
out
clc
out
fdivrl
pop
add
mov
jnp
xlat
and
mov
xor
hlt
adc
sbb
cmp
push
xor
loope
in
inc
or
shl
lock
sbb
adc
jno
sub
add
movsb
imul
jo
fidivs
loopne
sbb
push
and
sbb
xchg
cltd
adc
inc
fistpll
pop
fldcw
popa
rcll
scas
adc
jg
push
loop
daa
aad
out
jo
cmp
and
out
ljmp
sbb
sti
xchg
outsb
push
cli
fwait
mov
test
push
xchg
inc
pop
mov
inc
insl
scas
dec
xchg
or
or
dec
jns
nop
add
nop
adc
and
inc
jge
pushf
pop
pop
cli
push
int3
push
dec
clc
mov
cwtl
fs
add
fiaddl
leave
in
or
in
inc
add
sbb
dec
mov
sbb
mov
popf
push
loopne
je
mov
jb
push
pop
dec
stos
cmp
std
mov
xor
loope
xchg
addl
and
cmovge
movsb
mov
jmp
cmp
xor
std
sbb
or
gs
add
mov
pop
inc
fdivrl
lret
push
xor
aaa
je
test
shl
call
mov
rcl
sbb
mov
es
jnp
insb
jnp
jle
push
out
inc
pop
stc
imull
stos
inc
mov
lea
jno
pop
cwtl
mov
push
xchg
xlat
incl
pop
gs
mov
bound
and
xor
sbb
out
imul
xchg
pop
outsl
test
mov
and
inc
pop
iret
stc
call
int
mov
stc
in
sbb
testl
mov
xor
and
pushf
imull
push
fistl
test
in
and
jns
rclb
lods
jp
je
aad
xchg
add
iret
lret
and
adc
mov
inc
ret
das
push
xorl
repnz
dec
xor
sbb
fists
ret
sti
pop
push
loop
div
xor
push
subl
mov
sahf
push
sub
or
shlb
fiaddl
fisubrl
imul
dec
popa
xchg
adc
cmpsl
xor
and
mov
and
sub
popa
cs
and
inc
shl
adc
or
out
push
sbb
pop
xor
orl
jno
xchg
jns
xor
in
xchg
mov
cltd
ret
pop
shrl
scas
shl
mov
and
jb
xchg
push
mov
rclb
in
movsl
loopne
push
mov
jmp
or
inc
sub
sbb
cld
inc
in
out
loop
mov
in
fldcw
add
jmp
fimuls
push
push
cmp
imul
mov
adc
push
pop
and
mov
push
xchg
les
lods
adc
xchg
out
aad
daa
lahf
xchg
stos
ljmp
gs
jbe
pop
adc
push
mov
mov
push
pushf
insb
mov
and
cli
inc
pop
aas
lret
pushf
cmp
xchg
xchg
inc
jne
cs
loop
mov
fsubl
mov
jp
jge
dec
js
iret
pusha
add
cs
stc
addr16
andb
dec
outsb
mov
mov
hlt
push
scas
inc
push
xchg
inc
xchg
mov
cmpsb
mov
test
popf
nop
repnz
add
hlt
xor
jge
adc
pop
ret
popf
sbb
lret
dec
mov
dec
mov
mov
dec
arpl
push
pop
popa
test
cmp
mov
faddl
jg
inc
stos
pusha
mov
outsl
sub
les
add
negb
and
loopne
xlat
in
push
aas
sbb
pop
fbld
cs
mov
mov
cmp
std
jmp
mov
jne
sub
jmp
xchg
rol
cs
jnp
ret
mov
insb
push
jno
cmp
ret
sbb
rcll
mov
cmpsl
rcr
loop
enter
inc
cmpsl
out
and
aad
ds
mov
push
hlt
into
push
andb
es
cmp
or
or
xor
cmpsl
push
xor
xchg
aam
shrl
fcmovnu
ss
mov
inc
fistpl
cmpsl
insl
ljmp
scas
jp
add
fbld
test
int3
sbb
xchg
arpl
and
sub
insl
lahf
les
cmp
add
sahf
aaa
adcb
xchg
insb
bound
cmp
jp
push
out
jle
jl
pop
stos
in
pop
aam
sti
push
push
sarl
scas
push
sbb
data16
shl
rsqrtps
mov
pop
pop
inc
cwtl
pop
shrl
pop
xor
sbb
pop
dec
insl
push
jnp
mov
add
dec
fiaddl
sub
sbb
sbb
cmp
paddusw
mov
lods
les
gs
mov
add
mov
lods
shll
mov
jo
push
pop
cmpl
pop
imul
mov
sub
out
push
es
or
jb
ds
nop
pop
out
pusha
jo
xchg
leave
pop
ret
mov
or
fisubs
pushf
loope
lret
or
xchg
je
nop
cmp
lods
add
dec
add
hlt
es
push
mov
out
imul
push
xchg
lods
dec
mov
les
popf
mov
test
es
push
sub
testb
sub
inc
mov
out
lock
aam
cmpsl
mov
loop
sahf
testb
pop
xchg
outsl
push
xchg
rcll
pop
cmp
icebp
jg
data16
jne
insl
dec
cmc
cwtl
sbb
je
sub
push
lea
stc
mov
lret
mov
ss
inc
data16
add
sub
pop
aad
xchg
mov
nop
iret
dec
adc
mov
add
sbb
jno
jo
inc
xor
ja
mov
adc
inc
fwait
out
cmp
or
mov
lret
ljmp
fiadds
in
push
bound
lahf
jbe
rolb
jns
pop
sbb
dec
add
fadds
mov
xchg
call
nop
out
mulb
mov
jecxz
sti
and
mov
xor
jb
inc
andl
testb
sub
into
pop
xchg
int
stos
or
push
rol
xorb
sub
fldl
ljmp
add
cmp
and
aam
mov
js
outsb
add
cmpsb
out
jle
popl
decl
cltd
fdiv
adc
icebp
mov
add
stos
fbld
out
popf
jg
xchg
mov
lcall
pop
push
cmp
fs
inc
repnz
or
pop
xchg
mov
stc
div
testb
cltd
dec
mov
dec
adc
call
inc
in
enter
jb
pop
cmp
mov
push
mov
in
andl
mov
movsl
cmp
push
in
mov
add
int
adc
pop
lcall
adc
sahf
adc
shr
add
push
cld
push
imul
fnstcw
mov
xchg
pop
scas
push
mov
mov
add
clc
adc
pop
sub
pop
mov
dec
lock
js
mov
dec
dec
dec
sbb
push
or
jo
arpl
xchg
repz
cmp
jbe
pop
mov
lods
imul
jp
cli
cli
push
hlt
lret
xor
lret
test
mov
cmpl
das
cld
sti
clc
inc
push
leave
rcll
jnp
sbb
aam
lret
hlt
dec
outsl
jge
iret
xchg
dec
mov
adc
loopne
xor
push
and
mov
insb
adc
sub
jle
pop
add
sarl
test
cltd
pop
add
jl
add
add
adc
jl
cli
int
jb
push
in
or
lds
jmp
push
pop
testl
sub
lret
test
xchg
into
or
xchg
dec
fcmovb
sbb
aaa
or
mov
mov
sub
dec
imul
shlb
out
mov
gs
sahf
in
mov
in
iret
pop
dec
in
dec
mov
or
ja
lcall
xor
adc
pop
mov
lahf
xor
push
int3
iret
sub
lcall
lret
adc
pop
aaa
or
adc
movsb
ljmp
pop
jmp
addr16
or
pop
pop
rcrl
dec
cmp
sbb
and
addr16
jne
popf
sub
sub
in
fxch
inc
sub
arpl
sbb
fdivrl
loop
pop
jle
dec
lds
cld
scas
push
lods
pushf
rclb
fstpl
je
add
mov
insb
dec
jo
imul
pop
insl
sbb
dec
cld
mov
fst
sti
mov
add
mov
into
jmp
adc
lahf
xchg
clc
jp
jbe
pop
lgdtl
inc
out
cmp
lahf
scas
arpl
mov
icebp
shlb
andl
push
jl
pop
scas
sbb
inc
sub
aas
stc
stos
movsb
ja
test
pushf
das
mov
pop
js
ja
or
mov
and
fwait
mov
jmp
mov
repz
xchg
push
arpl
xchg
cmp
jno
xchg
lods
mov
aaa
cltd
out
enter
mov
into
xor
inc
int3
push
repnz
aad
movsb
rcrb
out
ret
mov
jge
jecxz
mov
pushf
inc
mov
inc
xchg
inc
add
mov
aaa
sub
mov
fsubrs
xchg
ret
stos
adcb
lret
push
pop
lock
frndint
loop
add
call
cmc
nop
xchg
les
sbb
fisttpll
xlat
xchg
jne
push
in
mov
test
sahf
sbb
cmpsb
imul
or
push
test
aam
mov
arpl
lahf
mov
inc
test
shll
cltd
out
pop
or
adc
mov
adc
or
push
fcomps
inc
mov
add
add
jmp
daa
jge
repnz
dec
hlt
adc
push
add
push
rcl
or
sbb
jb
js
loop
mov
movsb
cltd
repnz
cmp
adc
xor
es
xor
or
cld
and
addb
outsb
xor
mov
sti
nop
jno
push
dec
push
stos
stos
add
xchg
adc
pop
stc
shlb
mov
daa
aas
sub
xor
dec
sbb
loope
int3
push
fadds
jns
add
fbld
inc
xor
test
flds
inc
pop
add
and
dec
arpl
pop
mov
rorb
std
bound
stc
pop
push
add
adc
fistpll
xor
insl
jnp
mov
xchg
fstl
dec
xchg
mov
mov
nop
or
sub
inc
inc
adc
lahf
mov
popa
outsb
lods
ficompl
push
divb
fcompl
sbb
inc
push
xchg
out
adc
push
push
add
rcll
mov
lods
stos
stos
hlt
pop
jecxz
sbb
mov
mov
pop
lods
mov
xchg
das
loopne
sub
pop
xor
les
adc
jno
fmull
divl
pop
and
js
or
add
cmp
addr16
cltd
jno
jecxz
pop
adc
and
ffree
sahf
pop
loop
ret
arpl
add
rcl
add
xor
adc
movsl
jmp
lea
ja
adc
lahf
or
arpl
sub
cmp
jmp
scas
ficoms
dec
mov
das
test
inc
xlat
inc
dec
lods
sub
jno
mov
repz
imulb
int
test
pop
ja
mov
dec
mov
addr16
xchg
fwait
mov
rcrb
inc
mov
cmp
jne
enter
jecxz
pop
xchg
xchg
jb
loope
cmp
ret
mov
or
fdivl
jg
mov
mov
lds
mov
mov
icebp
rorl
insl
mov
es
outsl
jne
stos
rcrl
scas
jne
mov
leave
bound
xchg
mov
sbb
jns
test
test
mov
gs
rolb
int3
gs
dec
pop
bnd
add
mov
in
lahf
push
loop
aam
imul
out
shr
sahf
cmp
shll
mov
add
or
int
fimull
push
aaa
fcoms
mov
and
jg
call
nop
adc
push
das
push
fiadds
jp
mov
mov
or
fiadds
inc
xchg
dec
add
cmpsl
dec
push
mov
test
je
loope
test
jmp
mov
into
inc
std
jle
ret
xor
cmp
fcompl
cmp
shrb
jne
xor
dec
jnp
jae
pop
jl
roll
fidivs
sbb
cli
imul
std
cmpsb
push
xlat
cli
lahf
in
pushf
cmp
fmul
in
fstl
pushf
push
jmp
je
mov
dec
addl
and
mov
xchg
mov
out
inc
dec
dec
outsb
mov
insb
mov
push
repnz
fstpt
inc
sbb
xchg
pop
dec
jmp
push
ret
adc
imul
sbbb
dec
push
mov
clc
pop
out
jmp
xchg
rdtsc
pop
mov
push
adc
ffreep
std
negl
test
shll
and
cwtl
xchg
push
jnp
repnz
movsl
bound
mov
push
dec
addb
jnp
stc
test
int
std
mov
xor
movsb
notl
cmpsl
rorl
lahf
daa
leave
xchg
stos
jg
shlb
sbb
aaa
out
bound
pop
jg
add
aaa
jnp
push
push
sbb
repz
mulb
xlat
mov
ret
sbb
xchg
jns
mov
or
xor
xchg
fistl
adc
frstor
test
pop
ljmp
into
mov
enter
outsl
xchg
push
mov
sub
xchg
add
pusha
mov
insb
mov
pusha
pop
scas
or
lods
mov
rorb
mov
jno
in
loope
cld
inc
fs
cmp
dec
shll
ja
fs
sbb
scas
mov
gs
pop
cld
pop
icebp
gs
jle
jnp
mov
and
pop
sbb
test
popf
insb
lods
sbb
ds
pop
inc
lds
and
xor
push
add
popf
test
cli
fstpl
jo
pushf
lock
int3
jnp
sbb
jno
pop
mov
mov
shlb
cld
mov
push
lcall
mull
inc
mov
scas
enter
aam
std
iret
and
adc
mov
mov
xchg
mov
cmc
mov
mov
add
sbb
push
inc
jle
xor
push
and
aas
into
testb
rclb
xor
xchg
jg
fsubrl
xlat
repnz
xor
fdivrs
bound
xlat
iret
psllw
add
js
rorl
sbb
adc
sbb
mov
push
std
orl
mov
data16
call
sbb
or
testb
into
bound
cmpb
mov
mov
js
xor
dec
lcall
mov
lods
bnd
dec
or
int3
mov
es
cmpsb
popf
pusha
xorb
fstl
aad
outsb
xchg
sahf
loope
or
daa
test
in
push
fnsave
js
push
mov
xor
hlt
pop
xchg
fwait
mov
cs
fdivrs
xor
pop
lods
or
jo
dec
push
adc
push
test
clc
jl
pusha
adc
js
cld
push
and
adc
das
dec
aad
cwtl
test
jge
sub
pushf
out
ret
popa
cmp
ret
jo
ret
clc
ss
or
push
cs
adc
je
sbb
stos
jl
pop
aas
cmpsl
aad
stc
fldenv
imul
fisubs
icebp
out
in
add
lds
push
dec
clc
and
sub
adc
or
xchg
and
jge
or
dec
jns
test
add
pop
cmp
mov
add
test
ret
bound
xor
test
jo
cmp
pop
jne
fcmovnb
arpl
cwtl
insl
scas
mov
mov
push
mov
jecxz
clc
pop
clc
mov
xor
mov
out
adc
sbb
iret
inc
fimuls
out
outsl
mov
testb
xor
subb
ljmp
dec
dec
adc
int3
mov
out
dec
or
push
push
inc
stos
mov
fwait
popa
cli
mov
iret
pop
fs
xchg
xor
rcll
add
mov
mov
mov
call
push
jnp
loop
mov
in
mov
movsb
push
pop
rorb
and
lret
cmc
mov
ret
jbe
push
push
in
std
inc
jg
push
dec
mov
leave
push
mov
sbb
xchg
pop
test
pop
push
push
mov
dec
aaa
es
repz
lret
lcall
add
adc
stos
sub
les
in
push
jl
or
add
arpl
jmp
insl
mov
test
mov
add
in
addr16
add
insl
jle
subl
pop
and
xchg
xor
jg
or
mov
sub
movsl
sub
icebp
sbb
daa
or
out
pushf
movsl
bound
sbb
imul
imul
int
dec
pop
adc
scas
ficomps
or
xchg
stos
mulb
fldpi
pop
dec
test
jnp
cmp
out
shlb
sub
cwtl
xchg
aas
cld
cmc
push
jl
ja
xorl
add
loop
flds
repz
jbe
add
scas
adc
fsubrl
stos
jecxz
lock
dec
pusha
cmpsl
hlt
xor
xor
ret
or
and
int3
push
popl
insl
mov
insl
sub
push
popa
andb
ja
subb
jno
jno
loopne
dec
stc
xchg
mov
mov
dec
and
xlat
cli
push
mov
pusha
repnz
or
or
ret
push
xchg
data16
popa
fmuls
fldl
pop
mov
sub
xchg
adc
pop
jle
leave
mov
js
cmc
es
dec
push
shlb
icebp
cmp
in
stos
repz
fnstcw
orb
jge
inc
push
loopne
addr16
dec
xchg
fisttps
push
test
xorb
adc
repz
sub
addl
push
or
das
aas
sub
push
ret
out
lods
nop
xor
jae
sub
jne
jp
lret
rclb
xchg
sbb
jns
into
cmpsl
mov
test
sbb
xchg
push
sub
xchg
jmp
mov
jae
faddl
in
inc
fadds
mov
addr16
gs
mov
out
cmpsl
int3
sub
lock
push
jo
cwtl
xor
jl
xchg
xchg
std
add
std
popa
enter
mov
out
cmp
xchg
icebp
arpl
fdiv
and
cwtl
outsl
dec
lds
movb
dec
mov
loopne
bound
push
inc
loop
fcoms
sbb
dec
addr16
push
and
push
jbe
dec
jne
or
sahf
inc
sub
mov
pop
fdivs
pop
mov
insl
stos
stc
in
mov
imulb
sub
addb
or
push
int3
insb
outsl
push
loopne
xlat
mov
cmc
and
arpl
bound
adc
movb
loopne
lock
adc
mov
xor
jae
inc
aam
fldl
rcl
xchg
hlt
mov
or
adc
inc
pop
xchg
nop
aam
pop
and
addr16
mov
popf
cmp
push
push
arpl
mov
mov
inc
push
es
jge
popa
dec
insb
jecxz
testl
ss
pop
jp
dec
mov
lods
cmp
movl
inc
aaa
inc
pop
aas
inc
ljmp
aad
sub
loop
js
or
dec
mov
mov
loope
xchg
mov
dec
jae
mov
push
pop
gs
mov
and
mov
sbb
icebp
stos
nop
loope
mov
gs
rorb
hlt
mov
jp
out
fidivrl
push
in
out
cmp
test
sbb
daa
test
push
ds
mov
pop
lret
xchg
jno
into
div
dec
std
or
add
lods
pushf
mov
imull
outsl
insb
sbb
lahf
dec
scas
dec
xchg
ljmp
inc
ds
jae
pop
mov
test
outsb
or
inc
pop
iret
jp
movsb
xchg
and
mov
out
xchg
push
rorl
cmp
xchg
jl
or
cmp
arpl
aaa
ret
mov
outsl
fcomi
xor
inc
std
sbb
ljmp
mov
lods
cli
loopne
add
dec
sub
pop
and
cltd
sbb
icebp
dec
imul
sarl
push
ja
inc
rcrb
jg
rorl
fiadds
in
pop
inc
scas
pusha
rolb
js
je
out
mov
nop
adc
xor
sbb
or
lahf
or
mov
mov
lods
daa
pushf
dec
push
jno
and
mov
push
or
fstl
loop
cmp
imul
xchg
or
shlb
int
cltd
aad
mov
mov
test
and
lret
cmpsl
push
pop
movsl
xor
xchg
mov
inc
mov
and
ret
and
xchg
cs
xor
idiv
lods
mov
mov
xchg
ja
int3
xor
ja
icebp
ret
in
ret
fld1
push
subb
orl
repz
mov
call
mov
jmp
xchg
or
cmp
xor
jecxz
and
test
xor
je
ss
test
push
xor
pop
add
outsl
push
xlat
fs
roll
dec
pop
inc
aad
mov
out
mov
lods
push
imul
mov
fwait
mov
inc
cmc
mov
and
int3
jle
and
mov
stc
jo
aad
popa
push
movsl
lcall
test
sahf
fdiv
mov
ret
outsl
lret
cs
lock
mov
ljmp
outsl
adc
jo
call
repz
jge
and
fcmove
pusha
out
insb
dec
dec
push
sbb
out
mov
adc
xlat
adc
stos
std
clc
cli
add
push
fwait
int
cwtl
sti
pop
cld
stos
push
loopne
push
rcrb
loopne
aam
and
in
pop
adc
sub
cli
popa
push
add
adc
ja
sbb
fisubl
mov
cwtl
jb
rcl
mov
and
jo
call
cmpsl
inc
popf
cmp
add
fisttpl
xor
mov
mov
mov
mov
dec
das
enter
sbb
lods
jmp
mov
xchg
add
push
shrl
subb
cmc
inc
cmpb
fistpll
jae
incl
inc
clc
jns
xchg
and
cltd
pop
ljmp
xlat
mov
outsb
iret
jne
test
push
jmp
add
loopne
mov
mov
call
sub
cmp
out
out
lret
into
es
cmp
pop
sahf
out
adc
and
jbe
or
mov
pusha
lret
sarb
mov
or
popf
mov
pop
xchg
popa
and
std
call
cwtl
dec
jmp
das
fcomps
cmc
inc
out
sarb
or
je
or
repnz
std
cmp
fmul
loop
mov
clc
mov
popl
in
in
inc
adc
imul
cmp
inc
stc
xor
in
das
lret
mov
xor
inc
sub
repz
clc
adc
movsl
es
pop
popa
int3
test
movsb
push
inc
inc
dec
xchg
mov
mov
cmc
pop
mov
repnz
adcb
mov
or
out
adc
dec
push
lcall
pop
mov
cs
or
xchg
mov
scas
and
lret
das
or
jp
xchg
xchg
pop
mov
xor
test
mov
inc
inc
inc
sub
testb
xchg
addr16
mov
adc
mov
xor
cli
push
test
lret
jp
insb
cmpl
push
xchg
inc
push
push
push
je
jbe
jmp
int3
jl
xlat
sbb
lea
imul
pop
cmp
jmp
adc
cli
scas
xor
gs
pop
sbb
lahf
push
loop
mov
shll
push
mov
inc
xchg
lods
fs
dec
sarl
inc
adc
adc
in
sbb
cmp
cmp
add
push
or
inc
inc
out
jae
imul
xor
fisubrs
mov
adc
xchg
xchg
jg
jae
aas
movsb
frstor
inc
insl
jge
xor
int3
sub
xchg
sbb
cmpsl
ljmp
and
push
insb
fisubrs
ljmp
lahf
jge
mov
sarb
out
push
ret
sub
lock
call
push
cld
push
inc
in
add
fcoms
js
inc
sbb
jl
jno
repz
shll
mov
cs
repnz
shl
pusha
xor
popf
adc
cmp
sbb
shlb
adc
xchg
fstpl
sub
sar
repnz
pop
scas
dec
insl
inc
and
fidivrs
fsubs
cmp
test
dec
add
jnp
adc
pop
sbb
dec
mov
jmp
mov
fcmovne
loopne
sub
das
xchg
out
xor
shll
xchg
xchg
lahf
aas
dec
xor
insl
aaa
dec
cmp
mov
sbb
mov
xchg
fistpll
mov
scas
test
or
ljmp
push
lcall
mov
lret
mov
call
daa
push
shlb
lods
aaa
call
pop
std
nop
adc
cmpsb
sub
cmpsb
sub
das
cmpsl
sbb
imul
inc
push
lea
imul
pop
jno
jne
loop
mov
loope
jae
insl
jl
inc
jmp
stc
notb
in
lods
dec
outsb
xor
xor
jle
ficoml
mov
inc
in
mov
pop
pop
int
xchg
js
mov
cltd
mov
idivl
outsl
scas
cmp
mov
popa
inc
test
stc
pop
sbb
addr16
insb
cmp
cmp
and
scas
pop
push
fidivl
jnp
dec
aas
out
jae
test
xchg
adc
fnstsw
jl
mov
inc
inc
or
int3
inc
mov
mov
cs
sub
or
mov
cmc
fsub
fldenv
enter
jnp
push
add
lods
nop
cltd
rolb
jecxz
jno
push
pop
lcall
inc
add
xor
test
cld
test
fcomps
sub
fistps
sub
mov
and
jecxz
mov
fildll
jp
sbb
jne
cmp
sub
push
out
repnz
or
jl
popa
or
lcall
adc
shrb
sbb
es
mov
rcrl
outsl
add
push
add
dec
fidivs
ret
outsl
mov
sub
pop
cmp
mov
sbb
je
sarb
outsl
mov
xchg
insb
das
addr16
repz
adc
mul
jne
cmpsb
xorb
jp
mov
fildll
adcl
adc
fld
and
or
cli
stc
test
cmp
mov
pop
dec
les
addr16
sbb
pop
test
push
ret
ret
push
xchg
pop
xchg
nop
in
mov
icebp
imul
mov
sete
pop
xchg
sub
les
adc
incb
fsubrs
xor
xchg
pushf
xchg
push
and
ficomps
out
aam
xor
xchg
xchg
xor
xor
loopne
cli
sbb
lea
push
ss
or
pop
and
inc
xor
cmpsb
js
jecxz
xchg
or
sub
push
fsubl
and
jmp
cmpsb
popf
push
movsl
ja
movsl
pop
push
push
push
lahf
inc
rcll
push
ret
pmuludq
outsb
sub
lock
les
dec
rorl
je
dec
cmp
stos
movsb
pushf
inc
test
adcl
scas
stos
cmp
xor
jbe
mov
pop
push
shl
int
mov
mov
in
cmp
xchg
jns
jmp
mov
or
cli
mov
xchg
test
test
lock
call
add
pop
mov
add
sub
cmp
adc
or
or
lret
std
scas
jb
pop
inc
fstl
xchg
lods
sti
xchg
aam
aam
stc
inc
gs
mov
test
or
in
add
jmp
push
pop
dec
pusha
ss
dec
xchg
cld
out
push
dec
mov
les
stos
and
sbb
sbb
xor
fdivp
cmp
ja
pop
stos
add
dec
sbb
lret
nop
dec
sbb
pop
pop
in
pop
leave
fnstcw
in
xchg
daa
xchg
push
hlt
sub
subl
mov
sub
aas
jg
sbb
inc
or
dec
movsl
movsb
call
xlat
fisttps
movsl
jb
add
fcomps
adc
inc
popf
push
inc
mov
imul
sub
and
xor
mov
pop
xchg
mov
inc
sbb
lods
adc
jno
mov
mov
inc
mov
add
jecxz
insl
xchg
dec
mov
scas
ja
mov
les
jno
into
xor
stos
add
bound
mov
xchg
scas
aam
mov
loope
loopne
sub
das
inc
sbb
cmp
sti
mov
mov
shrl
mov
push
inc
xchg
sub
mov
push
fsubrs
test
movb
jle
in
sub
cs
insb
addr16
mov
mov
and
adc
xchg
jae
test
ret
in
fistps
dec
cmp
cmc
sub
mov
rcrb
push
inc
cmpsb
out
jecxz
adc
rcrb
icebp
mov
adc
dec
and
mov
adc
adc
jge
outsb
mov
mov
push
movntq
out
in
mov
es
shll
lock
cmp
mov
push
inc
das
adc
test
jl
or
test
inc
inc
sbb
popa
jae
dec
clc
jbe
test
lea
jp
movsb
stos
ret
pushl
orb
aas
shl
stc
xor
mov
pop
sub
mov
push
shrl
loope
sbb
pop
ror
repnz
add
dec
cltd
cltd
cmp
mov
jl
shl
es
in
nop
sub
test
cld
nop
cwtl
fbld
mov
add
dec
mov
push
hlt
mov
sub
test
adcl
inc
mov
ljmp
insl
mov
stos
mov
push
mov
test
push
stos
out
push
filds
pusha
xor
gs
in
popf
imul
jl
ret
jp
xchg
dec
cltd
xchg
stc
mov
aas
in
mov
int
pop
div
mov
jmp
insb
xchg
sub
rcll
popf
and
jae
cwtl
jo
and
pusha
xchg
sbb
and
mov
push
xor
mov
imul
out
mov
jecxz
jns
movsl
pop
jp
bound
jno
fwait
ja
mov
fs
mov
and
mov
pop
stc
int3
incb
xor
fwait
pop
adcl
sub
pop
mov
inc
lods
repnz
pop
jns
add
add
or
stc
stos
call
into
sub
clc
repz
stos
cmp
pushf
xor
sub
shll
mov
and
mov
out
ret
dec
divb
cmpsl
sar
aad
mov
cmp
sbb
ljmp
sbbb
inc
hlt
mov
hlt
in
outsb
push
adc
cmpl
mov
test
pop
pop
aas
imul
xchg
movsb
xor
jo
fs
test
pop
test
iret
xchg
jecxz
cmp
and
sbb
jge
mov
and
pushf
icebp
mov
inc
mov
frstor
pop
and
clc
add
add
pop
push
mov
pop
movsl
cwtl
mov
dec
rorl
push
pop
cmpsl
mov
inc
or
dec
xchg
insb
enter
mov
pop
inc
jg,pn
inc
popf
hlt
jmp
cli
clc
cwtl
jl
cmpsl
loope
out
fdivp
xorl
imul
ror
test
js
jae
fwait
jmp
movsb
outsl
xchg
dec
mov
push
add
mov
data16
sub
out
testb
inc
lret
loop
sub
outsl
xadd
jno
xor
imul
loope
scas
insl
addb
lods
shr
rorl
and
imul
std
lods
sahf
or
movsl
xorl
icebp
mov
aad
mov
and
inc
mov
movsb
call
divb
sub
gs
lods
jbe
jno
mov
jne
movsl
cld
xor
adc
iret
clc
mov
pop
cltd
jnp
and
lods
mov
inc
xor
push
mov
and
and
rolb
mov
repnz
insb
add
xchg
jg
int3
and
jg
lock
outsb
pop
mov
xchg
jge
push
or
cmc
stc
fwait
jge
loopne
jno
cwtl
pusha
ja
xchg
dec
push
inc
mov
insl
scas
cmp
addr16
fs
in
es
lods
or
jge
ds
inc
mov
xor
cld
daa
ret
fstpt
and
xchg
idivl
dec
ss
inc
cmp
loop
or
in
hlt
in
xor
xchg
test
lret
jmp
mov
fdivr
xlat
clc
es
lods
int3
mov
jne
jp
inc
push
movswl
je
test
mov
loope
filds
mov
cmpsb
mov
inc
ret
iret
fs
lods
inc
mov
pop
push
or
jno
out
push
cmp
mov
cmp
push
adc
mov
adc
push
sarl
lds
adcl
cmpsl
mov
lret
inc
inc
mov
sbb
push
ret
loop
stc
test
jnp
fs
mov
adc
in
loopne
jbe
jl
push
mov
cltd
incl
pop
iret
xchg
sbb
jbe
xor
fidivrl
clc
mov
sub
jb
xchg
test
movsl
sub
add
sub
hlt
ja
xchg
mov
mov
test
jmp
fld
lcall
and
iret
inc
and
out
jno
push
push
mov
jecxz
js
push
jg
push
push
cmp
stos
ret
ja
pop
and
sbb
lcall
cwtl
xor
dec
pop
lock
dec
addr16
sbb
push
je
out
add
and
inc
mov
push
sbb
iret
cmc
stos
bound
push
xor
sub
aas
jo
jmp
in
jg
addl
imul
ss
adc
sub
and
pop
push
out
xchg
pusha
in
mov
loop
aam
sahf
in
es
pop
hlt
sub
xlat
fidivs
push
or
dec
sbb
xchg
mov
inc
jp
and
mov
sbb
mov
jae
in
cltd
pop
and
lret
add
outsl
adcb
out
dec
pop
fldt
and
jbe
pop
and
mov
addr16
jge
xchg
inc
cmp
imul
jne
cmp
scas
fldenv
jecxz
daa
inc
test
jb
adc
mov
stos
jae
sarb
out
mov
adc
movsb
cli
subl
adc
cmc
sti
sbb
adc
rorl
jbe
sbbb
imul
sbb
dec
mov
sub
pop
test
out
add
push
jno
inc
xchg
fnstsw
int3
jns
mov
cli
ret
mov
add
add
dec
icebp
bound
jns
popa
scas
pop
test
add
xchg
hlt
inc
sarl
dec
add
cmp
adc
adc
call
clc
cmpsb
xor
decb
repnz
add
bound
push
bound
js
das
ffreep
adc
push
loope
outsl
pop
xor
dec
mov
push
adc
in
shrl
xor
mov
jle
or
or
sbb
or
aaa
mov
pusha
and
movsl
xchg
in
sbb
pop
mov
push
push
mov
jge
jne
jg
mov
popf
xchg
in
mov
fdivs
push
dec
fstl
inc
aas
dec
mov
xchg
fsubl
jo
and
in
es
mov
dec
and
rcl
dec
dec
cmp
bound
mov
cld
or
add
dec
xor
test
or
ret
imul
or
cld
and
int
bound
cmp
pushf
inc
sbb
xchg
incl
pushf
enter
aad
popa
out
stos
xlat
jnp
jmp
out
imul
insb
mov
mov
or
les
call
pusha
lods
movb
jp
mov
xor
xchg
shl
or
jp
add
mov
mov
out
push
sub
test
bnd
stos
cmp
adc
aas
jge
xchg
xchg
ret
add
push
leave
xchg
movb
adc
jb
mov
and
inc
cmp
and
xor
xchg
adc
sbb
pushf
arpl
scas
imul
sbb
xor
cli
sub
ret
pop
jnp
and
test
popa
and
movsb
sub
mov
ja
stc
pop
sub
rol
shll
loope
stc
andb
std
lock
jmp
mov
mov
rcrb
lret
push
cmp
aad
es
ss
inc
out
inc
shlb
loop
int
lock
add
inc
xchg
hlt
pop
mov
cs
push
jns
cld
aaa
add
lock
and
ret
out
out
pushf
leave
xchg
push
add
push
gs
xor
sbb
sbbb
mov
mov
and
stos
lcall
pop
pusha
in
pushf
xchg
cs
mov
sti
sub
leave
cmpsl
jmp
inc
add
in
xchg
icebp
adc
int
xchg
scas
or
lcall
sub
js
rcr
mov
fwait
mov
lds
adc
push
mov
mov
inc
call
ds
stos
sub
ficomps
inc
pusha
inc
cmp
rcr
mov
sub
push
mov
pop
ss
cmp
xchg
ds
pop
aad
int
test
fbstp
fadd
inc
js
push
jno
addl
sbb
xor
jbe
xchg
inc
sbb
mov
jmp
stc
dec
xchg
sub
out
push
or
cmp
pop
jns
int
sbb
mov
daa
or
jle
mov
int3
mov
hlt
pop
mov
dec
out
stos
or
sbb
and
sub
movl
jmp
xchg
add
jb
adc
shll
cmp
in
pop
lea
cmpsb
push
loopne
jmp
incl
out
xor
cmp
jl
je
fisubrl
aam
xor
add
push
nop
dec
inc
hlt
test
cmp
fistpll
aas
cmp
das
xorb
xlat
adc
std
stc
filds
push
bound
mov
push
sti
adc
test
or
xor
loop
leave
add
inc
cmp
testb
jecxz
std
add
jo
shr
and
xlat
rcll
mov
or
cltd
inc
sub
jecxz
repnz
cmp
mov
sub
pop
stos
adc
aaa
mov
cmp
cmp
loop
add
sub
testb
add
push
and
in
jg
es
pop
orl
pop
jg
shlb
mov
dec
lock
movsl
addr16
stos
push
xchg
lahf
rcrl
lret
xchg
add
add
push
sbb
sbb
push
das
les
pushf
lock
mov
jnp
xchg
add
jl
and
or
add
xchg
repnz
clc
lods
inc
mov
les
adc
out
xchg
out
push
mov
hlt
jg
jnp
or
fldenv
mov
push
clc
dec
dec
inc
pop
into
push
lret
jle
ret
fcomi
sub
adc
lods
pop
jb
daa
shrb
out
xchg
pop
out
xor
mov
rclb
in
shll
pushf
mov
cmp
fistps
dec
mov
adc
jge
popa
in
and
out
lock
pop
pop
mov
test
add
cmp
push
cmpsl
inc
shrb
mov
andl
sahf
add
enter
push
inc
xor
fs
pop
mov
stos
scas
insb
cmpl
adc
push
mov
ret
aad
in
lret
lods
stos
std
push
rorl
js
scas
jecxz
dec
inc
outsl
in
fwait
cmpsb
or
lods
loop
push
mov
stos
and
adc
cmp
mov
cmp
add
or
dec
daa
popl
mov
jo
jle
mov
clc
stc
loopne
inc
jle
push
push
rcll
adc
mov
incb
gs
notl
cltd
or
scas
out
sub
lret
outsl
aas
mov
sbb
scas
arpl
add
in
mov
ret
nop
es
idiv
jno
pop
and
ror
das
imul
mov
push
and
adc
xor
daa
int3
les
test
out
dec
pushl
and
pop
out
lock
xor
mov
mov
adc
adc
push
jo
popf
rclb
pop
jmp
fs
into
jb
mov
mov
lock
test
fcom
std
or
sub
add
inc
pusha
mov
xchg
pop
pusha
cwtl
mov
insl
shl
out
out
pop
sub
fidivl
xchg
scas
xor
test
stos
xchg
mov
mov
pop
xor
hlt
lcall
insl
xchg
mov
jle
xor
jl
scas
xchg
rcll
pop
loopne,pt
pop
test
insl
dec
sarb
mulps
fnstsw
es
pop
mov
out
arpl
fistpl
jne
mov
jbe
xor
outsl
inc
mov
jno
dec
enter
ja
test
sbb
les
test
mov
adc
call
mov
add
pop
imul
xor
or
mov
cmpsl
push
outsl
popf
xlat
cmp
jle
es
and
loop
push
xchg
fisttpl
shll
cmpsl
enter
arpl
cmpsb
push
movsl
xchg
cld
subl
fimuls
ficomps
adc
adc
and
dec
jae
subb
add
mov
sahf
dec
add
rcll
mov
adc
jp
jne
popa
mov
das
scas
pop
fs
rcrb
into
lret
mov
popf
pop
cltd
fisubrs
pop
movsl
mov
or
ret
sub
and
mov
push
ror
inc
jns
pop
out
xchg
out
xchg
js
pop
jmp
mov
dec
subb
in
lea
cmpsl
mov
and
fldenv
add
mov
or
mov
mov
test
mov
fmuls
xchg
std
dec
repz
sbb
jp
and
and
pslld
cltd
mov
mov
lock
ret
scas
adc
fsubrl
sbb
sbb
in
pusha
fwait
rolb
insl
cmp
mov
iret
stos
push
inc
pop
pop
into
cmp
ja
subl
mov
sbb
push
dec
loopne
cmpsl
cmp
fs
sarb
mov
mov
xorl
add
pop
sbb
and
les
loopne
jl
mov
xchg
adc
test
jecxz
xorl
dec
sbb
mov
ss
xor
cmp
fnsave
adc
lds
add
test
jl
push
lret
gs
inc
pop
mov
mov
mov
aaa
popa
adc
push
push
xor
repz
gs
das
or
xchg
dec
iret
cltd
jno
mov
mov
in
cld
popa
leave
or
push
jle
movsl
or
inc
fdivr
flds
adc
sbb
push
sahf
sbb
mov
lcall
orb
jecxz
mov
push
andb
mov
add
sbb
iret
aam
add
cmp
pop
xor
orb
mov
nop
pop
mov
shll
mov
pop
dec
inc
mov
sarb
pop
adc
mov
jle
dec
pop
and
pop
adc
add
cmp
out
bound
notb
pop
inc
sub
mov
leave
scas
into
mov
mov
jno
cmc
rorl
dec
push
aam
dec
out
scas
inc
insl
pop
ret
lcall
jae
cmp
stc
fisttpll
leave
roll
cmp
push
jecxz
mov
ret
adc
das
ljmp
and
in
stc
imul
arpl
sub
cltd
sub
int3
mulb
dec
push
decb
fdivrs
fdivrs
lock
cld
mov
test
cmpsb
ret
mov
mov
or
fwait
mov
sub
lret
jg
lds
or
pushf
dec
push
test
dec
push
add
xor
js
sbb
lods
sti
dec
mov
push
lret
lds
sti
jle
push
or
mov
mov
ss
in
dec
inc
iret
cmpsb
leave
or
pop
jp
mov
mov
and
out
xor
mov
dec
je
or
out
or
aad
jns
push
ljmp
stos
pop
popf
pop
dec
push
fadd
sahf
and
inc
xchg
dec
fdiv
sbb
jbe
xchg
push
mov
sti
leave
jno
imul
fiaddl
sub
mov
or
cmp
or
ss
pop
punpckhdq
jne
ljmp
jmp
pop
inc
fwait
jp
adc
mov
lds
mov
mov
sahf
out
int
or
mov
sub
lock
hlt
mov
popf
leave
gs
stos
add
and
shrl
int3
fucomp
lods
gs
fdivrs
ficomps
cld
enter
mulb
or
cli
icebp
fucomi
jg
repnz
test
clc
cmp
inc
xchg
pop
in
jl
sbb
mov
dec
push
xchg
movsb
and
rcrl
and
sahf
dec
imul
sbb
add
in
popa
out
cmp
js
js
pusha
xor
and
mov
mov
mov
popa
lock
bound
push
shrl
out
mov
add
adc
fnsave
adc
cmp
lods
notb
mov
or
rol
rol
ja
nop
mov
sbb
mov
scas
push
testb
push
data16
fildl
cmp
xchg
add
ds
pushf
inc
sub
pop
repz
jp
mov
add
jl
pop
icebp
add
and
outsl
add
adc
inc
rcl
insb
inc
sbb
mov
xor
cmp
pop
divl
sti
fmuls
xchg
das
ret
arpl
cs
dec
stc
xorb
scas
fwait
int3
dec
stc
lods
icebp
add
arpl
cmp
stos
pop
ds
hlt
mov
movsb
push
pop
or
dec
dec
lret
je
popf
push
mov
popf
aad
lods
add
mov
insl
hlt
sub
xor
lods
add
jmp
push
lcall
mov
dec
inc
mov
fidivs
sub
lahf
test
add
fwait
ret
cmc
jg
jbe
loopne
dec
push
push
div
sahf
stos
test
fsub
rolb
test
xchg
movsb
push
inc
mov
add
repnz
xchg
out
movaps
fs
or
or
mov
sbb
lea
out
pop
test
movsl
mov
stos
aas
sub
stc
mov
loopne
pusha
xlat
pop
aam
ss
int3
lea
push
hlt
cwtl
fwait
iret
cmp
sti
in
pop
test
mov
addr16
jl
rcrl
xor
mov
shlb
mov
test
xchg
and
jl
pushf
mov
jle
int3
jle
leave
or
jnp
adc
mov
bound
scas
push
in
in
and
jo
leave
inc
dec
cs
jl
call
adc
push
test
out
out
cli
pop
xchg
dec
sub
daa
push
negb
dec
xchg
mov
adc
test
adc
sub
add
jmp
lds
mov
xchg
mov
sub
out
scas
movsl
js
jg
dec
bound
and
mov
repz
push
leave
xor
jb
lods
dec
mov
fcmovnbe
inc
cli
mov
pop
icebp
dec
rcll
scas
xor
out
pusha
adc
lcall
mov
dec
mov
clc
xor
xchg
or
test
hlt
enter
flds
movsb
push
aaa
xchg
adc
std
movsl
jecxz
ror
adc
add
adc
sbb
mov
xchg
jnp
or
scas
xchg
or
cmpb
lea
insb
fcmovu
or
addr16
scas
lret
or
pop
outsb
pop
andb
sub
dec
inc
xchg
dec
add
push
add
sbb
pop
cmpsl
inc
cmp
arpl
mov
cmp
outsb
xor
out
in
inc
push
stc
lods
in
jbe
andl
pop
xchg
popa
inc
int
sub
xchg
xor
int3
pop
inc
xor
dec
sbb
xchg
mov
cmp
sub
js
repnz
ja
call
pop
jae
int
and
lods
mov
adc
jb
xchg
jle
roll
jmp
push
lcall
xor
mov
pop
sub
out
js
scas
repnz
push
or
xchg
idiv
outsl
adc
out
jno
or
int3
and
rol
lahf
and
sub
orb
stos
scas
test
popf
lds
into
and
or
enter
pop
fsubrl
out
aas
js
sub
lret
js
add
sahf
mov
aad
push
jle
popa
mov
dec
scas
and
in
out
and
loop
push
mov
repz
pushf
sarb
loopne
mov
ja
push
sub
fildll
mov
jle
movsl
fs
fdivrl
jbe
mov
pop
push
jp
jno
cmp
adc
mov
jle
push
push
aad
add
loop,pn
lret
xchg
add
clc
jmp
mov
aam
push
incb
jmp
cmp
mov
loopne
pop
pop
mul
adc
outsb
fisubrs
cmovge
clc
pop
mov
testb
inc
cmp
pop
lea
mov
pop
pop
hlt
rorb
mov
sbb
cmp
sub
and
ret
fnstcw
enter
lret
outsb
pop
adc
clc
ret
out
sub
int
bound
pop
std
outsb
pop
movsb
ljmp
mov
jl
scas
mov
pop
mov
adc
or
push
daa
jbe
lcall
push
dec
dec
mov
mov
add
pop
mov
imulb
add
adc
push
or
fs
mov
ja
xchg
push
idivl
mov
rcll
push
mov
mov
jbe
xchg
out
in
xlat
aad
aaa
mov
out
dec
fistpll
cmp
lds
les
push
fnsave
enter
mov
or
popa
jg
and
mov
mov
int
lods
out
stos
pop
xor
push
jnp
dec
fwait
jb
cs
fcoms
dec
incb
push
aaa
test
cltd
ljmp
add
mov
or
adc
pop
je
sarb
icebp
daa
push
mov
cmpsl
xchg
or
inc
sub
negb
in
pusha
xlat
iret
leave
es
cmc
mov
add
test
adc
lods
jl
jo
stos
xchg
xor
das
push
loopne
and
mov
in
push
and
test
mov
movsb
and
and
inc
fisubs
push
aas
jecxz
sub
add
jge
cltd
adc
cmp
lock
rol
ss
lahf
fdivl
and
cltd
sbb
insl
dec
imul
adc
xchg
push
mov
out
xchg
in
sbb
pop
fs
ret
sti
xlat
mov
out
adc
stos
cs
sub
les
lahf
xchg
sub
cmp
mov
call
scas
movb
push
stos
movl
shlb
fisttps
mov
movsl
or
in
cwtl
mov
jmp
gs
subb
lret
sbb
push
loopne
int3
rorl
xchg
nop
sbb
sbbl
scas
jecxz
outsl
and
xor
cwtl
dec
leave
sbb
cmp
bound
mov
and
jo
adc
pop
or
rol
rcll
ret
imulb
popf
iret
mov
add
pop
loop
jno
mov
push
push
push
or
fwait
mov
in
arpl
xchg
push
mov
xor
jp
in
das
lret
stos
cmp
hlt
sbb
pop
int
cmpsb
sub
adc
pop
xor
rclb
pushl
xor
ds
mov
inc
icebp
repz
cwtl
lahf
add
mov
repnz
push
cmc
xchg
orb
add
jnp
cmp
xchg
inc
lret
js
inc
test
xor
lds
popf
dec
insl
lods
jge
mov
cmp
pop
imul
lea
ss
xor
int3
cmp
std
movsl
ds
dec
mov
call
jle
and
daa
loop
pusha
std
jne
orb
dec
pop
dec
cltd
test
repnz
stos
fistps
data16
pop
xchg
sbb
push
jnp
mov
cmpsb
sub
inc
and
pop
push
jl
cltd
sub
bound
xchg
mov
ret
add
popa
push
push
push
pop
sahf
leave
jmp
out
mov
inc
popa
sahf
ret
data16
subb
into
subb
and
ljmp
in
pop
xchg
ljmp
inc
loop
adc
sbbl
clc
push
cmp
loope
bnd
ss
hlt
daa
push
xorl
jmp
jmp
cmpsb
mov
xor
divl
xchg
mov
mov
push
cmp
pop
hlt
add
les
mov
fcomp
movsl
es
push
add
loopne
adc
dec
inc
fwait
addr16
int
popa
mov
mov
cmpsb
cld
or
cmp
cmc
xor
jl
jbe
dec
das
repnz
pop
dec
cmp
cmp
call
mov
aas
push
jns
lock
and
pop
nop
enter
aaa
xchg
sbb
pop
fwait
add
xor
sbb
mov
pushf
ljmp
in
and
outsb
test
mov
xor
sahf
jbe
aam
cwtl
push
iret
js
and
test
xchg
lds
jb
fistpl
leave
pop
mov
xchg
push
stos
roll
mov
mov
add
fisubs
pop
idiv
test
outsb
jle
stos
dec
nop
sbb
mov
xor
imul
insl
adc
lds
sbb
rep
gs
repnz
inc
sbbb
sbb
and
and
ja
fistl
test
lock
dec
es
nop
and
std
dec
mov
shlb
and
add
sbb
cmc
fimuls
push
dec
loopne
add
jae
cmpb
mov
or
lret
adc
in
jmp
ror
jae
lret
pop
push
mov
jp
int3
jne
call
add
std
push
das
mov
and
mov
aam
lea
mov
inc
cld
pop
adc
fwait
pop
outsl
mov
and
bound
push
ljmp
imul
mov
out
or
iret
cs
icebp
sbb
mov
add
cwtl
cmp
lock
mull
dec
pusha
imulb
pop
or
pop
test
sahf
out
inc
adc
cwtl
jecxz
mov
aam
stos
mov
pop
or
jle
inc
mov
shlb
outsb
cmp
add
stos
sahf
jg
jbe
inc
jg
inc
push
pop
bound
inc
jl
insl
xchg
pop
int
outsl
les
jae
mov
dec
cmp
lret
xchg
add
aam
mov
mov
fdivrs
in
mov
hlt
leave
inc
add
repz
xchg
dec
push
jl
push
cltd
pop
jmp
repnz
js
jp
hlt
subb
and
leave
pop
fstpl
adc
movsl
fwait
xor
xchg
js
gs
adc
cmp
adc
add
pop
stc
pop
aaa
and
movsl
out
into
std
test
sbb
jns
xchg
fyl2xp1
data16
inc
xchg
or
leave
out
pop
cmpsl
mov
pop
out
mov
pop
lahf
imul
imul
flds
daa
inc
lcall
sahf
push
daa
dec
das
pop
xlat
leave
aad
or
sub
jno
pop
pop
clc
movsl
in
inc
mov
sub
inc
jne
mov
rorl
jmp
sub
jecxz
push
pop
shr
insb
push
mov
ret
es
adc
popa
mov
mov
lods
xor
mov
stc
popf
cmp
push
cmp
lock
lea
mov
jmp
xchg
cmp
test
rcl
ss
cmp
adc
jns
pop
cmc
loop
ja
pop
sarb
add
push
outsl
mov
push
repnz
nop
lret
daa
pop
xor
mov
cmpsl
outsb
cli
cmpsl
lock
mov
lret
sub
push
sti
fstpl
mov
and
enter
es
mov
jne
dec
jae
push
mov
sahf
into
into
mov
clc
jnp
dec
add
push
pop
fdivs
movb
lret
xchg
mov
jle
push
mov
add
fistpll
sbb
scas
pop
sub
fidivrl
repnz
aaa
dec
mov
and
and
inc
imul
dec
cmc
pop
test
or
sub
addr16
xchg
push
or
push
mul
test
pop
rcll
lea
repnz
mov
shr
mov
cmp
nop
test
xor
add
data16
jecxz
mov
mov
add
loope
add
in
push
inc
push
add
les
cltd
adc
mov
aaa
xlat
cmp
sub
jl
lock
mov
xchg
mov
jno
lret
imul
adc
xor
pop
xchg
movsb
push
cmc
roll
or
and
in
inc
fsubr
cltd
pop
test
jecxz
mov
mov
shlb
jo
xchg
or
inc
ja
in
clc
jge
push
fdivs
xchg
call
ret
flds
pop
dec
and
mov
mov
inc
or
mov
cmpb
and
mov
push
xchg
bound
lods
jmp
clc
gs
gs
pop
stos
into
xchg
sbbb
aad
daa
sbbl
std
jecxz
push
cmp
or
test
sbb
stos
push
mov
or
add
or
ljmp
mov
in
xchg
add
jno
stos
dec
inc
mov
lcall
int
inc
std
or
flds
lds
outsl
imul
cmp
cld
xchg
jb
pop
rclb
clc
or
daa
jo
mov
aad
add
js
inc
mov
cli
mov
pop
sub
sbb
orl
lock
fcmovbe
mov
outsl
frstor
mov
xchg
mov
and
sub
pop
jbe
add
popa
mov
jecxz
ljmp
mov
cs
fstps
push
rcrb
adc
es
gs
xlat
fistl
ret
sbb
mov
push
in
cs
clc
nop
mov
int3
divl
mov
ret
fdivrl
decb
inc
subb
cmp
xchg
cmp
sbb
add
mov
insb
scas
adc
fwait
sub
pushf
int3
lret
pop
cmp
mov
sahf
stos
mov
xchg
push
in
adc
cmp
in
jge
add
enter
pop
in
loop
xchg
mov
outsl
dec
sub
jns
test
pop
push
jge
cltd
mov
mov
xchg
loope
ret
call
enter
adc
xor
xchg
xor
or
xchg
sub
icebp
das
jne
or
push
mov
jbe
dec
lcall
jbe
repz
and
push
pop
jno
pop
jmp
jne
dec
pushf
int3
sbb
outsb
push
iret
pushf
leave
and
fs
sub
push
jns
gs
mov
or
xchg
in
lock
ja
or
xchg
xchg
insb
push
test
mov
loope
ss
jne
jnp
jnp
inc
and
je
outsb
sbb
dec
repz
xchg
mov
in
pop
je
push
add
xchg
cmp
add
inc
push
cs
lcall
test
out
jle
ja
pop
mov
lahf
mov
dec
fidivs
mov
sbb
and
jmp
mov
inc
inc
ja
cmpsb
sbb
pusha
push
decb
test
inc
test
test
test
scas
and
push
dec
shl
dec
ss
dec
cld
pop
inc
xchg
fdivl
push
or
cmp
in
incb
int
jnp
jbe
mov
fs
sarb
sub
dec
notb
outsb
leave
pop
pop
xor
sub
pop
ret
push
outsl
sbb
xchg
pop
out
loop
sub
stos
push
cltd
mov
out
sub
dec
pushf
pop
sub
call
subb
js
add
sub
mov
cmp
stos
jae
sarl
or
dec
sbb
lret
adc
jb
call
iret
popf
and
lret
popa
pop
push
fmuls
in
rcl
inc
jno
pop
pop
sbb
scas
mov
hlt
inc
xlat
jne
es
test
lods
adc
jge
mov
sub
pop
sbb
mov
scas
fwait
out
dec
repz
testl
insl
sub
jne
pop
and
aam
idivb
popf
dec
xchg
add
inc
and
jg
cmp
sbb
sbb
cmpsl
sub
aaa
cmpsb
std
pop
mov
sub
test
in
movsl
add
mov
cmp
xor
dec
pop
and
leave
nop
ljmp
std
xchg
xchg
shrb
cld
push
adc
aad
and
in
into
loope
mov
inc
loope,pn
test
aam
in
jae
outsb
push
jno
cmpb
into
mov
pop
and
xchg
es
mov
jb
icebp
mov
scas
decl
cli
lahf
pop
test
hlt
cmp
jecxz
fidivl
mov
fs
sbb
jb
adcl
xchg
xchg
daa
imul
sub
dec
pop
hlt
xchg
mov
xor
cmp
adc
stc
insl
out
mov
fimuls
in
adc
xchg
xchg
pop
pop
jb
mov
mov
and
test
dec
mov
cmp
cltd
xor
movsl
mov
gs
sub
clc
lds
cmpsl
pop
scas
add
cmpsb
add
adc
scas
movsl
sbb
stos
loope
adc
inc
or
mov
popf
sbb
push
push
xchg
bound
sub
frstor
adc
mov
mov
aas
test
dec
stos
sti
push
out
sbb
int
into
dec
nop
inc
mov
cmpsb
sbb
cmp
aaa
mov
xchg
mov
dec
mov
push
xchg
sub
xchg
int3
popa
shufps
test
push
stos
and
sti
rcrl
or
push
fcomi
push
xchg
fsub
lret
mov
imul
dec
data16
ljmp
and
mov
scas
adcb
xchg
and
and
mov
sub
cmp
cmpl
clc
stos
cmp
data16
clc
mov
loopne
mov
repz
jecxz
mov
jo
es
mov
jge
inc
sbb
push
pop
arpl
je
and
es
shl
lods
movsl
push
xchg
lret
sbb
jbe
hlt
mov
ljmp
or
mov
mov
mov
lods
cmp
mov
dec
jg
popa
outsb
cmp
jmp
jnp
xchg
lods
test
or
loopne
push
pop
lahf
lock
dec
push
lret
repz
shll
jne
xchg
xchg
movsb
pop
loop
sbb
out
cmp
xchg
and
scas
cwtl
cmc
push
push
sub
inc
popa
insb
pop
xchg
xchg
jne
cmp
add
adc
fcoms
lret
pop
fisttps
pop
push
mov
mov
in
and
dec
mov
xor
xlat
inc
pop
cs
push
cmp
adc
mov
mov
pop
inc
push
adc
mov
out
dec
sub
lea
das
movsl
lcall
arpl
jne
and
int3
js
sub
outsb
adc
sbb
adc
pop
xchg
jnp
fsubrs
and
pop
addr16
sub
push
imul
js
pusha
clc
dec
negl
sahf
dec
out
cli
mov
or
rolb
jns
das
xchg
or
push
out
push
inc
cmp
xchg
xchg
add
ret
test
jbe
pop
dec
push
xorl
je
sub
imul
daa
sbb
push
bound
or
movsl
mov
push
mov
and
xor
idiv
jne
punpckhdq
xor
bound
lea
dec
loopne
pop
inc
fwait
lcall
cmp
gs
nop
inc
into
mov
push
xchg
dec
jnp
mov
fstpt
and
add
mov
add
xor
enter
sahf
les
sbb
inc
je
jg
out
clc
xor
inc
daa
dec
mov
xor
cli
add
dec
jae
in
mov
inc
jns
dec
mov
pop
or
das
jae
mov
mov
or
sub
out
cmp
ljmp
mov
adc
pop
lods
into
imul
and
xchg
jg
stos
add
lock
lahf
inc
or
sbb
cltd
jo
push
lods
in
scas
jnp
js
nop
dec
fisubl
fstp
into
and
ds
pop
mov
xchg
jl
adc
mov
mov
inc
cmp
icebp
push
repnz
cmpsl
fimuls
imul
jecxz
js
mov
scas
add
icebp
mov
push
popf
and
jb
pop
gs
insb
fs
ljmp
sub
xchg
add
or
xchg
dec
pop
rcll
stos
xchg
mov
mov
jbe
pop
jns
ds
inc
sbb
sahf
cld
jmp
out
mov
jnp
int
mov
mov
dec
push
jge
adc
jmp
xchg
jl
lods
cmpsb
push
int3
pop
pushl
sbb
lock
xor
shrl
loopne
mov
ret
mov
imul
xor
out
mov
out
jecxz
dec
mov
outsb
pop
enter
pop
data16
pop
cltd
jnp
pop
jle
push
xor
and
sbb
out
mov
outsb
shlb
inc
pushf
adc
xor
mov
add
cli
fs
add
jbe
xor
aas
and
dec
jge
aam
popf
xor
or
mov
loope
outsb
xor
shlb
dec
mov
inc
insl
je
lods
pop
sub
dec
push
jmp
mov
xlat
and
ds
aaa
cmpsl
pop
jp
lock
mov
sub
push
outsb
and
mov
sti
pop
or
adc
and
pusha
add
jnp
les
jg
cli
lods
inc
xchg
nopl
jne
jo
sysexit
adc
pushf
add
sub
enter
adc
stos
mov
pop
jl
dec
lock
sub
fdivl
mov
sbb
mov
or
mov
inc
xlat
mov
cltd
leave
jmp
xchg
add
fwait
std
dec
jbe
movsb
scas
push
mov
xor
add
flds
mov
jns
cli
jns
fwait
mov
fcmovbe
ret
pop
pop
fdivr
dec
add
popa
mov
in
test
cwtl
or
lods
shl
add
xor
or
adc
data16
inc
imul
add
orb
enter
sbb
cwtl
leave
push
and
add
pop
les
fwait
dec
adc
and
jp
xchg
icebp
adc
aam
inc
iret
xlat
loope
outsb
or
icebp
and
dec
stc
sbb
mov
sbb
mov
into
push
xor
pop
iret
das
and
rorb
or
inc
inc
add
in
inc
sub
mov
ss
ja
adc
mov
aad
lods
add
mov
lods
mov
inc
mov
pop
out
mov
push
and
jge
jmp
push
inc
shrb
sbb
or
or
mov
mov
xor
in
adc
mov
aas
shll
scas
repz
arpl
inc
xchg
sub
and
pop
pop
not
rcl
das
sbb
adcl
adc
pop
test
mov
xchg
addb
mov
cmp
sub
mov
cmp
jecxz
and
xor
dec
lock
mov
and
pop
fdiv
and
rol
jne
cmp
cwtl
xchg
andb
jle
fwait
sbb
or
jmp
or
mov
adc
out
out
cmpb
mov
mov
jecxz
call
jle
imul
jg
lahf
push
fisubrs
pop
lea
mov
jle
mov
mov
push
and
jmp
fwait
ret
les
pop
enter
jmp
shlb
xchg
push
push
lods
cltd
roll
out
mov
jl
pop
jg
adcl
push
and
adc
push
cmpl
xchg
dec
or
jae
or
mov
popa
icebp
test
sub
mov
cmp
xchg
sub
cmp
lea
rcll
outsb
js
and
fldenv
sub
bound
cmc
jbe
stc
aas
mov
leave
clc
inc
cmc
iret
test
pop
data16
xor
mov
cmpsl
jb
addr16
mov
xor
xor
out
pop
mov
stc
into
fldz
jb
aaa
cwtl
js
repz
sub
pop
mov
hlt
inc
cmp
xchg
push
mov
jge
and
gs
addr16
enter
adc
jbe
mov
xchg
sbb
add
dec
cld
imul
fisubs
fidivs
mov
jne
call
sub
add
jo
xor
cmp
mov
xchg
mov
mov
mov
jp
cwtl
inc
es
pop
and
cmp
test
pop
lret
sub
test
fisubrs
and
cli
enter
mov
or
ljmp
mov
fnstenv
das
dec
daa
mov
into
and
pop
or
movsl
fsubl
cmp
mov
xchg
xlat
xchg
roll
mov
jb
ljmp
cmp
mov
cmc
push
sub
in
orl
adc
clc
jnp
cld
rol
fldl
push
mov
xor
and
int
data16
cmp
and
fs
and
call
push
sub
rcll
pop
loope
pop
int
cmc
inc
cwtl
fwait
mov
movsb
adc
mov
jmp
add
nop
out
das
arpl
ds
or
sub
gs
shlb
fstpl
adc
pop
sub
movsl
push
mov
mov
or
mov
hlt
pop
out
test
inc
es
pushf
push
int
das
jae
loop
rorb
lea
xor
les
adc
and
jmp
jge
aad
lock
out
ds
cwtl
mov
lods
negb
mov
jo
sti
jecxz
fwait
movsb
mov
mov
and
ja
mov
add
push
enter
test
fcompl
out
cli
jne
sbbb
pop
push
jo
imul
inc
pop
cmp
out
cmp
sbb
mov
cmp
adc
or
mov
lods
sahf
sbb
sbb
in
jg
mov
testl
nop
loope
shl
pop
movsl
gs
inc
sub
sbb
fs
mov
jae
fprem
test
sub
scas
mov
aas
or
dec
xor
sub
jecxz
sbb
sahf
gs
add
jb
outsl
ficoms
out
cs
mov
mov
and
roll
sbb
rcl
pushf
mov
hlt
push
dec
data16
fisttpll
cwtl
imul
xor
pop
icebp
mov
push
mov
rcl
jno
sub
jnp
xor
xor
stos
daa
and
cmpsb
and
shll
inc
inc
jg
fisttps
fidivrs
in
std
sbbb
nop
rolb
mov
test
push
xor
cmp
icebp
cmp
loop
popw
sub
push
mov
pop
jno
aad
sub
pop
or
test
mov
adc
gs
test
icebp
xor
andb
aam
fs
jecxz
xchg
jns
pop
sub
jge
sar
sbb
out
cmp
fsubs
cmp
stc
mov
jo
dec
ror
ficompl
out
test
scas
fcmove
xchg
fs
push
and
mov
call
mov
jno
mov
cwtl
int
fwait
icebp
addr16
ret
lret
rol
sub
insl
stos
outsb
xor
mov
jmp
adc
pop
inc
iret
or
and
stos
and
fwait
push
mov
fcoms
lret
sbb
dec
push
add
mov
jmpw
movl
dec
or
jnp
pop
xor
and
pushf
mov
inc
sahf
sub
jbe
mov
sub
push
mov
dec
sarl
jae
aam
push
cmpsb
adc
sbb
xchg
jl
sbb
loope
push
sbb
xor
loope
stos
lret
inc
iret
jb
pusha
mov
or
int3
ret
xor
bound
in
cmp
ds
pop
lahf
lods
push
fcmovne
ljmp
sub
mov
mov
xor
jecxz
std
loop
and
push
push
popf
mov
xchg
negl
dec
cmp
ret
xchg
mov
sub
mov
xor
dec
pop
xor
mov
mov
je
dec
add
or
push
in
iret
sbb
jns
sbb
push
pop
cmp
testb
iret
xor
mov
pop
dec
sbb
in
cmpsb
mov
lock
jb
adc
pop
sarb
lock
push
mov
ljmp
adc
jl
lea
mov
fldcw
pop
ss
aas
push
mov
pop
fs
and
movsl
fmull
in
mov
leave
jo
aaa
aas
add
adc
mov
rcll
adc
ds
add
cmp
sub
pop
shrb
and
repz
out
in
mov
mov
leave
test
xchg
into
sub
jb
lds
and
push
and
cmp
scas
mov
jl
push
cld
insl
cld
cmp
and
jnp
aas
pushf
in
in
dec
imul
sub
add
pop
aaa
mov
adc
mov
rcrb
jecxz
cwtl
jecxz
mov
adc
ljmp
adc
in
insb
insl
arpl
lret
fucomi
pop
bound
ljmp
stos
push
fnstsw
mov
arpl
movsl
jo
out
sbb
dec
xchg
pop
push
xchg
icebp
pop
rcll
push
xchg
push
push
inc
lods
push
jmp
test
mov
call
sbb
xor
adc
inc
movsb
push
insl
aas
xor
mov
testb
mov
out
lock
push
add
mov
call
sub
frstor
sarb
mov
int3
fidivs
mov
sub
in
loopne
xor
leave
sub
mov
int
adc
push
or
dec
cmp
loopne
adcb
cld
inc
out
mov
mov
pop
fisttps
cmpsl
pop
xor
add
outsb
and
into
sbb
dec
mov
addr16
sahf
mov
xor
mov
inc
pop
sbb
dec
push
adc
push
or
dec
or
not
test
mov
jnp
enter
mov
xchg
js
ret
jmp
pop
xor
add
push
or
push
pop
ja
fstpt
xor
pop
xor
xlat
adc
jns
dec
push
insl
sub
adc
or
stos
sti
out
orl
push
aaa
jo
sahf
movsl
leave
xchg
mov
clc
insb
popf
adc
xor
inc
shll
loope
jle
in
xchg
inc
dec
cli
cld
add
lcall
jecxz
shlb
adc
das
mov
ret
aas
push
sub
push
sub
gs
test
pop
rcll
pop
das
enter
iret
jg
aas
xchg
mov
cmc
lret
ja
push
inc
mov
xor
test
lods
dec
hlt
mov
jns
lock
sarl
sbb
jbe
imul
and
mov
inc
jne
cmp
mov
scas
imul
arpl
or
mov
test
sub
jno
insl
and
cli
call
or
iret
pop
rclb
cltd
addb
pop
xchg
mov
sbb
dec
std
sub
mov
push
jmp
push
xor
inc
rcrb
je
mov
jp
inc
cmp
sahf
insb
das
hlt
in
in
arpl
jne
popa
sbb
lcall
pop
xlat
nop
jno
push
int3
mov
lods
mull
push
jecxz
pop
lret
add
cli
inc
push
push
les
in
outsb
or
pop
hlt
test
mov
mov
ja
push
jae
out
movsb
int
movsl
and
aas
and
data16
iret
push
scas
inc
ret
jnp
mov
hlt
ja
push
test
mov
mul
pop
andb
out
aas
daa
mov
inc
pop
jb
or
jbe
dec
or
loope
mov
arpl
pop
dec
adcl
stc
jp
ja
fnstcw
test
mov
xchg
rorb
sub
in
pop
xor
pusha
popf
mov
sbb
out
mov
aad
addr16
xor
aam
fucomi
inc
push
orb
out
and
lea
repz
ds
dec
mov
mov
les
push
imul
xchg
popa
push
jge
leave
negl
mov
aam
cwtl
dec
or
push
sub
push
int3
sarb
es
or
and
int
jae
roll
dec
inc
sub
lock
or
push
push
mov
add
push
enter
and
sbb
scas
mov
cmp
mov
movsb
cmpl
pop
nop
xchg
jne
push
inc
in
cmp
mov
outsl
lret
cmp
popa
fwait
xorb
cwtl
lods
fldenv
arpl
xor
gs
adc
xchg
icebp
dec
aas
and
aad
mov
movsl
popa
lds
push
ja
mov
lods
cmp
pop
pop
clc
sbb
mov
or
repz
and
test
xchg
xchg
ds
loopne
les
sub
ja
xchg
adc
mov
jl
mov
in
test
add
test
cmpsb
cmc
sub
pop
or
push
faddl
cld
loope
mov
call
orb
mov
shrl
push
sbb
adc
inc
pop
shlb
add
add
test
rolb
push
mov
xchg
mov
inc
inc
das
jle
int3
dec
push
mov
hlt
lock
mov
mov
insl
push
lods
in
stc
xchg
fldcw
aaa
or
pusha
mov
out
lock
adc
scas
and
leave
ret
pop
inc
cmpsl
loop
popa
mov
cli
jmp
ds
add
jbe
jns
mov
jl
and
dec
imull
decl
fwait
mov
and
inc
pop
std
data16
repz
fcmovnbe
sbb
cmp
aaa
sub
les
mov
push
sbb
mov
out
arpl
sbb
sub
inc
nop
pop
xor
inc
inc
insb
cwtl
aam
mov
lods
pop
cwtl
xchg
stos
and
andl
mov
loope
sbb
cld
pop
xchg
es
int3
js
dec
test
adc
aas
xlat
xchg
jl
adc
cmp
adc
jnp
shr
int3
fsin
push
sub
data16
lods
or
ret
in
inc
clc
mov
xchg
inc
pop
ret
das
add
jne
fnstcw
fucom
repz
lods
fisttpl
das
dec
sub
mov
inc
or
testl
or
lret
add
aad
inc
bound
popa
adcb
mov
mov
imul
jb
mov
fbstp
cmp
jp
pop
sbb
or
scas
insl
jb
mov
push
xchg
mov
idivl
xchg
enter
rcrb
mov
fcmovu
jb
pop
loope
lods
add
push
sbb
jno
dec
bound
lods
mov
and
in
cmp
mov
test
dec
lea
aad
mov
mov
pop
rorl
mov
mov
or
mov
sub
add
add
dec
jbe
push
or
xchg
rcl
pop
cmp
aam
jne
xchg
mov
icebp
xor
push
aas
push
sbb
lea
dec
inc
jg
std
sub
gs
cmp
enter
lock
and
xor
sub
mov
adc
ja
imul
cmpsl
scas
pop
fbstp
cmpsl
xor
dec
je
int3
jno
mov
jo
jecxz
nop
pop
shlb
xor
cwtl
and
mov
sahf
mov
cli
cs
popf
push
aas
rorb
inc
fimuls
add
cmp
loopne
adc
repnz
mov
cli
pop
cmpsb
inc
in
inc
lahf
ret
int
pop
pusha
nop
bound
adc
insl
mulb
jnp
fldl
jo
filds
sub
and
pop
jp
daa
pop
rol
out
jne
clc
cld
xchg
call
sbb
adc
inc
sarb
iret
push
scas
xchg
jmp
push
aad
icebp
test
test
mov
movsb
or
add
xchg
pushf
and
addr16
sub
mov
pop
and
dec
pop
fimull
stos
cmp
mov
jle
cmp
jnp
mov
sbb
in
fsubrp
sub
dec
lods
sbb
out
mov
xor
outsl
adc
cmp
rolb
xchg
repnz
and
push
xchg
push
mov
sbb
or
push
out
lods
int3
daa
pop
mov
xor
xchg
test
push
imul
push
xchg
sbb
test
je
cmp
sbb
xchg
sub
push
pop
push
jb
loope
add
shlb
push
mov
mov
sbb
or
insl
mov
xor
pop
inc
adc
popa
mov
mov
adc
pop
aad
jne
pop
lcall
sub
inc
dec
aas
adc
fwait
das
in
pop
int3
adc
sarl
and
enter
jecxz
cmp
mov
jmp
pop
iret
fbstp
std
sub
repnz
insl
lcall
mov
out
test
mov
push
ds
jno
add
daa
and
flds
mov
xor
jb
push
in
loop
and
adc
xchg
int
in
hlt
xchg
adc
pop
jl
in
adc
sbb
pop
pop
inc
pop
pop
jnp
mov
jo
inc
test
out
pop
les
add
sahf
lcall
xor
fsub
divl
mov
inc
ds
push
mov
dec
push
leave
push
roll
and
xlat
mov
or
xchg
add
lock
hlt
cwtl
testb
inc
ss
xor
cmpsb
cmp
cmc
mov
inc
dec
jl
xchg
scas
aad
jns
xor
mov
in
push
test
sub
pop
mov
push
dec
mov
lret
imul
sub
push
movsb
lock
fildl
rcrb
movzwl
cld
add
in
enter
rclb
jl
je
lods
rolb
jp
pop
mov
pop
fdivrs
or
out
rorl
push
jg
aad
jmp
mov
mov
inc
sti
les
jae
adc
xchg
ja
sti
imul
sbb
pop
push
les
pop
mov
notl
mov
lahf
pusha
test
scas
or
jge
mov
fmuls
dec
push
jo
lea
jne
add
xor
insl
ss
popa
fisttps
stc
nop
iret
push
cmovo
add
stos
scas
in
push
ss
in
fldcw
xchg
mov
mov
loopne
cmp
sub
mov
mov
in
lods
ss
adc
add
fstpt
data16
dec
cmpsl
sbb
pushf
cmp
je
xor
cld
stos
sahf
fistpll
mov
pop
xchg
popf
enter
and
adc
sti
sti
int3
push
add
cmp
sub
in
mov
mov
mov
push
jmp
jle
fstps
mov
enter
scas
sbb
jb
pop
xor
cli
fcmovne
pop
ret
and
scas
jbe
mov
mov
enter
addl
add
xchg
adc
or
pop
scas
dec
test
or
mov
and
cwtl
movsb
scas
shll
sbb
push
push
mov
xchg
mov
mov
daa
incb
add
xchg
shll
loop
jb
or
adc
sub
pop
cmp
mov
sub
and
aad
adc
stc
popf
sub
or
arpl
lock
dec
movsb
ret
es
cmpsl
mov
pusha
jp
aad
cltd
push
test
popa
mov
repz
inc
in
xchg
dec
cmp
loope
hlt
pop
jle
jne
lret
jae
or
xchg
mov
call
dec
test
xchg
xchg
sbb
insl
or
push
mov
mov
call
sbb
pop
lret
hlt
insb
mov
mov
xor
mov
les
popa
cmpsb
push
popa
rclb
sbb
xor
leave
fisubl
loope
xor
arpl
add
je
cmp
mov
dec
push
pushf
scas
inc
adc
ret
loop
stc
popa
or
mov
mov
and
flds
cwtl
in
push
xor
inc
out
cli
or
js
mov
and
in
jns
jmp
push
adc
mov
xor
jp
lahf
and
push
sub
inc
mov
jae
adc
bound
dec
pop
or
or
fdivr
lret
or
ficoms
mov
in
dec
dec
js
fistps
jnp
xor
sahf
cs
push
out
jmp
sbb
xchg
lods
mov
movsl
call
sbb
pop
and
sti
jge
loopne
pop
dec
insb
divl
dec
cltd
cmp
repnz
xchg
mov
and
adcb
jbe
xor
sub
repz
dec
or
pop
cli
nop
add
cmpsb
scas
pop
xchg
xchg
ja
xchg
mov
lods
mov
mov
jge
sbb
or
inc
xor
xor
addb
sub
pop
mov
inc
inc
bound
mov
xor
lar
lcall
sub
jg
fs
aas
sub
cs
pop
sti
movsb
int3
jmp
or
and
cmc
lret
lret
sub
and
xchg
outsl
inc
bound
xchg
or
scas
add
jge
dec
push
pop
movsl
leave
jecxz
sub
fwait
mov
mov
cmc
pop
dec
hlt
cmp
std
cmp
and
mov
mov
outsb
cli
loope
bound
jbe
dec
add
repnz
mov
pop
sub
adc
mov
fstl
cpuid
call
ret
add
notb
mov
mov
push
fildl
lock
clc
sbb
rorl
adc
call
push
int
sbb
adcb
xchg
sti
cmp
clc
add
sbb
fcompl
xchg
inc
cmpsb
dec
sub
cmpsl
mov
stos
sbb
push
imul
test
mov
mov
out
fcmove
clc
shlb
bound
movsl
or
test
lret
ss
addb
fistl
xor
lds
jmp
xchg
testl
push
jg
sub
ret
mov
xlat
orb
mov
imul
push
inc
inc
in
daa
das
fs
sbb
add
push
lds
and
aam
jbe
sahf
inc
and
inc
fucomip
loop
icebp
and
or
jp
sub
mov
orb
cmc
sbb
repnz
pop
mov
lret
jecxz
fisttpll
pop
xchg
dec
dec
iret
mov
jge
adc
sarl
sbb
pop
lret
or
dec
lret
dec
jg
lea
and
fidivrl
sbb
ja
test
mov
sti
adc
cmp
pop
mov
pop
xlat
ss
mov
cwtl
xor
fcomps
std
ss
mov
pushf
push
shl
cmp
ss
mov
fimull
fldl
aam
sbbl
sub
cmp
test
push
loopne
xor
pop
sub
xor
daa
cltd
xchg
mov
call
shll
clc
fadds
iret
inc
test
lret
inc
mov
lret
sub
ds
lea
and
pop
and
fs
js
jp
fidivl
dec
pop
pop
stos
notb
mov
push
test
xchg
lds
inc
rolb
icebp
mov
scas
xchg
test
ljmp
nop
fisubs
add
test
mov
clc
mov
and
xor
sbb
cmp
cmp
inc
jo
ret
pop
inc
pop
push
jbe
pop
inc
xor
or
clc
xor
push
jl
mov
mov
xor
enter
ret
adc
inc
cltd
jb
jmp
repz
xlat
sbb
and
and
out
ja
push
xor
xchg
or
shll
adcb
push
inc
and
repnz
mov
adc
pop
adc
leave
dec
jmp
loope
jb
js
push
pusha
push
add
sub
imul
xchg
rorl
insl
dec
mov
push
cmp
les
fnstcw
movsb
lret
push
mov
jo
jge
lret
and
and
shlb
mov
ja
and
out
mov
and
adc
mov
aad
or
les
mov
ds
push
cmp
sar
fsubs
xchg
pop
cld
jecxz
or
xchg
outsl
sub
in
fcompl
stos
test
fcomi
sbb
inc
jecxz
stc
lret
cli
ret
push
scas
dec
and
push
mov
icebp
xchg
test
repnz
lock
jo
mov
dec
or
cmp
sub
pop
cli
jne
mov
push
push
test
aad
adc
xchg
scas
mov
push
mov
jnp
in
or
outsb
imul
adc
fwait
push
aam
and
dec
icebp
pop
insb
sbb
adc
dec
xchg
scas
mov
data16
cmp
call
push
gs
xchg
fbld
mov
sub
in
fcompl
jns
test
arpl
jg
mov
sbb
jnp
mov
sbb
cmp
jns
sub
data16
xor
outsb
add
adc
mov
and
dec
pop
stc
lret
mov
lods
pop
pop
dec
sbb
enter
xchg
or
int3
mov
test
sub
xor
sbb
adc
cmpsb
xlat
adc
add
in
fistl
adcl
stos
jge
ja
outsb
xchg
adc
fildll
int
and
mov
xor
inc
xchg
pop
mov
push
mov
push
and
cmpsb
sbb
push
push
mov
add
test
pop
mov
xchg
push
ljmp
mov
fwait
adc
fwait
leave
inc
fisubrs
push
mov
jae
sbb
mov
or
or
vcvtsd2ss
enter
mov
gs
mov
adcb
mov
add
jle
inc
add
inc
jp
push
sbb
pop
outsl
or
jg
hlt
lea
jno
jp
aas
xor
xor
xor
jb
scas
adc
add
test
xchg
fwait
jo
xchg
cmp
nop
sbb
lds
push
sub
stos
out
dec
jns
jmp
mov
ds
sbb
push
cmpsl
pop
leave
adc
fadd
mov
push
mov
enter
je
jns
push
stos
and
bsr
test
jae
xchg
iret
sbb
in
adc
add
jbe
jno
je
dec
test
sbb
int3
pop
ret
idivb
lret
xor
sub
pop
jle
and
iret
lret
push
in
pop
popf
adc
enter
add
bound
std
or
jnp
and
cmp
add
clc
jae
mov
cmpsb
in
js
jp
stc
lods
jg
jne
sahf
pushf
pminub
data16
aam
ret
pop
roll
xchg
push
roll
data16
fistps
fbld
mov
not
push
add
cmp
jle
cmp
andb
std
sub
mov
lea
dec
rcl
jae
or
push
pop
xchg
xchg
xlat
xor
out
je
dec
cwtl
fistps
sub
and
orb
loope
ds
xor
insl
shrl
outsb
sub
out
jns
push
sbb
enter
int3
rcrl
lcall
lods
daa
test
sub
rol
out
fiaddl
inc
push
arpl
in
gs
sbb
inc
xor
xor
aam
push
cmp
xor
pop
mov
mov
leave
js
add
xlat
lock
add
movl
mov
xchg
sarb
jp
mov
or
cltd
or
rcll
test
jmp
or
mov
cmp
dec
sti
jae
inc
repnz
ret
xchg
test
sbb
div
mov
addr16
lahf
cmp
pop
push
or
das
lds
js
cs
ja
and
cli
sub
idiv
adc
out
xor
test
xor
and
outsb
push
mov
mov
pop
ds
cld
push
arpl
mov
arpl
mov
mov
mov
ljmp
inc
lcall
xor
leave
cltd
leave
mov
rolb
push
loop
ds
inc
inc
arpl
mov
cld
outsl
ss
test
mov
sub
jns
xchg
sub
pop
mov
jne
dec
lea
xchg
aas
mov
fcmovnbe
pop
pop
inc
add
dec
pop
mov
jg
loope
adc
mov
sub
fistps
mov
sub
mov
mov
mov
jb
js
out
test
cld
fistl
ret
lret
stc
push
cmpl
cmc
add
idivb
filds
in
or
aad
std
aam
fcoml
sarl
or
data16
imull
jmp
pop
stos
es
out
cmc
das
pop
fiadds
mov
sub
mov
mov
lods
mov
les
stos
mov
and
add
and
clc
inc
movsl
xchg
jno
clc
inc
cmp
inc
shll
lcall
mov
mov
not
lahf
sbb
lods
sbb
push
inc
rcr
ret
sbb
sub
xlat
dec
mov
out
sbb
mov
xor
mov
mov
aad
lods
fs
xlat
jecxz
mov
push
fdivrl
cmp
xlat
adc
fnsave
adc
es
mov
jl
test
loop
lea
sarb
push
in
into
ret
mov
daa
jge
scas
ret
loop
nop
or
sub
dec
fdivrl
and
sarl
lods
pop
dec
popa
add
jbe
sub
inc
ja
dec
mov
data16
lods
dec
mov
rorl
dec
mov
and
mov
fisubrs
and
add
xor
shrl
pop
lods
movsl
sbb
adc
jp
bound
rcll
loopne
add
and
cld
xchg
repz
mov
mov
pop
and
call
fstl
mov
cmp
cmpsl
movsl
in
imulb
mov
pop
sub
sti
jge
loope
lds
mov
sbbl
push
or
jnp
mov
jbe
imul
es
inc
loope
leave
mov
xchg
push
pop
xor
inc
cli
leave
hlt
in
cmc
xor
adc
mov
loopne
lahf
pop
lret
stos
lds
aad
scas
insl
adc
movsb
dec
testl
inc
out
in
test
jno
das
xchg
jae
xchg
test
mov
push
push
sbb
add
xchg
data16
cwtl
enter
iret
add
cmp
sbb
mov
mov
out
mov
mov
dec
pusha
jge
sub
imul
fsubl
mov
sti
es
push
and
jmp
aad
mov
xchg
insl
push
or
hlt
jne
dec
ss
add
lret
xchg
roll
mov
aad
clc
adc
push
jnp
or
lret
mov
pusha
inc
cmc
xchg
in
stc
inc
subb
dec
sbb
enter
mov
bound
cmc
test
push
nop
xor
fsubrl
jne
and
dec
in
ret
cmp
push
popa
adc
xor
xor
sar
flds
int3
xchg
jns
dec
test
shll
test
cmp
lds
nop
cmp
xor
or
push
add
divb
lret
testl
add
dec
and
adc
imul
les
dec
cmp
sbb
ljmp
cli
js
mov
pop
scas
leave
leave
popf
or
mov
inc
and
inc
inc
int3
nop
sub
xor
int3
push
iret
cli
push
scas
orb
adc
sbb
das
idivb
je,pt
popf
push
sub
inc
mov
arpl
push
jae
dec
mov
out
xchg
cmp
daa
stos
and
add
mov
aas
add
push
mov
jmp
add
adc
ficoms
popa
int
es
xor
out
ds
dec
rolb
xor
cmpsl
cli
cmpsb
or
pop
adc
cmp
add
lret
mov
aas
insl
lea
mov
icebp
cld
pop
ja
jl
xlat
ss
mov
daa
jae
cmpsl
xor
lods
dec
mov
mov
inc
inc
cld
jl
sti
mov
dec
test
cltd
xor
mov
adc
jg
cmp
loop
mov
add
loop
out
roll
xchg
test
js
aad
push
mov
sbb
insl
push
jnp
or
and
sbb
int3
sbb
loop
jns
mov
dec
leave
int3
stos
xchg
sbb
aad
cmpsb
dec
add
gs
adc
fsubl
jecxz
or
sbb
cmp
push
ffree
mov
test
jne
mov
add
dec
pop
movsl
ret
xchg
mov
jl
add
xchg
fwait
push
subl
mov
subl
adc
nop
hlt
insb
popa
cmp
mov
xor
dec
lcall
pop
test
xchg
repnz
fiaddl
shl
cwtl
xor
lea
mov
jbe
mov
adc
xchg
std
pop
mov
fs
and
inc
dec
test
aas
xor
les
mov
addb
rcl
push
xor
test
test
fdivrs
rcr
jae
cmpsl
adc
pusha
int
test
dec
adc
movsl
dec
push
mov
int3
fidivrs
es
iret
push
adc
xchg
cltd
aas
cld
dec
imul
mov
mov
mov
add
mov
or
addr16
mov
std
mov
shll
cmpsb
lea
mov
test
sti
mov
push
fisubrl
fmuls
add
push
inc
jne
push
int3
cmp
adcb
nop
punpckhbw
arpl
jnp
pop
fcoml
shrl
lea
ds
jnp
js
repz
aad
dec
ror
es
imulb
cli
mov
in
xor
rcr
nop
out
adc
mov
cwtl
subb
shl
test
mov
stos
and
pusha
sub
sbb
jno
and
cli
dec
add
shl
lcall
adc
fcompl
jl
fadd
xor
xor
movsl
adc
xor
int
or
movsl
mov
cmp
cmp
jbe
cmc
lahf
mov
lds
mov
sbb
insl
jns
roll
sub
enter
push
cmpsl
dec
stos
out
adc
sub
jg
js
scas
mov
pop
std
adc
cmp
cmpb
add
lcall
mov
inc
scas
mov
xchg
xchg
femms
xor
mov
ficoml
outsl
cld
mov
mov
adc
gs
out
hlt
cmc
fdivrs
je
fcomi
cmp
pushf
mul
repnz
addb
xlat
shlb
and
xchg
dec
lods
popf
mov
sub
sbb
lret
bound
mov
sti
ja
adc
push
loope
dec
and
int3
shr
out
inc
pop
ds
and
jl
lods
inc
mov
fyl2x
sub
bound
les
repnz
xchg
push
hlt
push
mov
push
add
je
xor
or
mov
mov
push
int3
dec
dec
cmp
scas
push
leave
push
std
out
fistpll
mulb
or
or
rcrl
rcl
jecxz
test
mov
push
repz
jle
ss
sub
jp
movsl
mov
or
add
mov
inc
jnp
push
inc
repz
bound
into
in
rclb
mov
xor
cltd
loopne
or
call
mov
sti
or
push
dec
gs
scas
mov
rolb
mov
shll
add
popa
mov
test
xor
mov
cmp
xchg
mov
loope
pusha
fcoml
movsb
push
mov
inc
sti
and
aad
sub
mov
push
sbb
push
cmp
sbb
push
lcall
dec
jbe
cmpsl
dec
std
lret
cli
pop
cmpb
dec
sub
data16
and
add
pop
pusha
out
xchg
or
or
mov
call
iret
call
adc
jae
adcb
add
push
outsl
pop
mov
test
mov
xor
mov
jno
push
loopne
aad
testb
xor
idiv
dec
test
xchg
jo
cli
jecxz
idivl
into
jnp
sub
mov
inc
lds
enter
sbb
stos
adc
mov
cmp
mov
sub
cmpsb
pusha
jns
push
clc
testl
ja
pop
cmp
fiaddl
jnp
jo
jecxz
mov
sub
aaa
pop
outsl
push
dec
sbb
xor
lret
aaa
push
stos
xor
ds
push
adc
lcall
inc
sti
jne
jnp
nop
xchg
xchg
scas
popf
roll
mov
jbe
out
loopne
mov
pop
bound
gs
int3
call
inc
pop
cld
adc
adc
jae
fcoms
mov
push
test
dec
or
push
adc
fidivs
push
lea
sbb
mov
xchg
aam
lcall
mov
jns
sbb
fistpl
lods
xlat
xor
outsl
jno
inc
mov
ds
iret
hlt
test
push
ss
lcall
std
mov
pusha
push
dec
mov
insl
push
lahf
add
pop
out
push
dec
sti
in
ret
or
add
inc
incl
bound
stos
dec
mov
out
insb
dec
mov
rorl
scas
cmp
test
repnz
orb
test
push
sbb
les
mov
xchg
xchg
xor
jo
mov
cwtl
pop
sub
xor
sbb
cmc
jns
movsl
insb
xor
popa
inc
fadds
les
xor
jns
jmp
xchg
xchg
push
aas
test
inc
mov
inc
aaa
mov
push
jmp
pop
xor
push
push
aaa
jns
lods
xchg
bound
mov
jmp
insl
iret
xor
mov
pop
lahf
loope
lds
dec
add
ja
outsl
jg
xor
or
sbb
cmp
jle
loopew
jmp
subb
popa
out
sti
jns
push
pop
adc
loope
push
dec
call
push
les
and
and
stos
mov
pop
or
push
movb
dec
sbb
in
in
mov
sbb
shlb
adc
insl
push
test
test
loope
jb
mov
add
sub
xchg
rcrl
test
movsb
in
jno
bound
dec
mov
cmp
ret
sbb
in
inc
pop
pop
xorb
xor
dec
dec
pop
xchg
imul
inc
or
mov
add
mov
out
mov
sub
loope
pop
pop
push
or
fmulp
pop
push
or
xor
and
sbb
add
mov
ss
call
xlat
xor
ficoms
and
inc
mov
ds
inc
loopne
div
and
push
cmp
addb
insb
fldenv
popl
repz
pop
in
outsl
mov
jle
es
sbb
cmpsb
sub
test
dec
popa
push
loop
in
cmp
repz
cs
leave
jecxz
insl
mov
and
and
pop
dec
and
or
das
test
cmp
adc
test
add
std
xchg
aad
rorb
lea
ds
cld
mov
xchg
add
lods
push
scas
cmp
cli
in
dec
jb
insb
or
xchg
int
add
add
and
cmpsb
dec
xchg
mov
popf
ret
mov
sbb
and
lds
movsl
xor
pop
sub
aad
fstl
inc
fwait
xchg
or
pusha
pop
fldt
test
mov
jnp
lock
out
jno
xchg
sbb
dec
fs
dec
and
xchg
cmp
inc
data16
pusha
push
sti
or
jl
pop
outsb
out
loopne
xchg
cmpl
lret
push
mov
pop
nop
jbe
fcmovnu
popa
out
adc
das
out
mov
test
jns
add
ret
push
mov
xchg
push
out
std
in
fwait
outsb
jb
cltd
nop
or
les
dec
enter
stos
adc
pop
jnp
out
xorl
test
jmp
sbb
ret
mov
and
int3
push
lods
je
and
adc
xor
inc
push
scas
push
cmpb
jmp
jge
inc
out
xlat
lret
cmp
jo
addr16
stc
jo
add
dec
xor
sbb
or
jnp
fsubrs
ds
pop
lea
sahf
loope
xor
test
iret
cmp
adc
in
shrl
adc
add
dec
fstpl
mov
psrad
jns
push
jns
pop
or
add
xchg
sahf
jg
aam
into
fstpt
test
mov
or
add
imul
inc
jns
int3
in
dec
pop
pop
xchg
xor
push
int
xor
jbe
xchg
push
fists
sahf
mov
lahf
mov
push
loopne
cmp
push
lds
ret
jo
xor
jae
call
adc
pop
test
mov
int
out
shl
aas
fsubr
pop
mov
pop
mov
jb
lret
scas
jg
and
movsb
sub
push
fsub
sbb
or
xor
add
sti
imul
lret
mov
push
loopne
int3
arpl
lahf
in
mov
adc
ss
fmull
or
cmp
aam
and
stos
cmpsb
and
pop
lods
xchg
in
adc
mov
in
notl
fiaddl
jb
int3
mov
and
test
inc
pop
out
aaa
jle
stc
cli
popf
xor
or
jmp
pusha
xchg
adc
pop
mov
adc
push
in
cli
mov
ret
stc
fsubl
das
fwait
leave
mov
cmp
icebp
inc
stc
pop
out
dec
inc
jmp
bound
movsb
popf
out
mov
pop
in
jmp
adc
or
repnz
int3
ljmp
xlat
pop
xchg
xor
sub
push
out
loop
cwtl
repz
mov
jge
xor
and
pop
and
xchg
sbbl
fildl
cmp
enter
dec
adc
xor
movsb
or
inc
fchs
dec
sbb
inc
out
hlt
jo
dec
sub
jl
in
sbb
insb
fcmovu
leave
sar
inc
push
mov
inc
and
orb
int
mov
sbb
insb
add
inc
test
or
xor
fmull
test
dec
test
les
dec
ds
lds
dec
mov
push
lods
dec
add
fisubl
mov
mov
addl
test
jp
xor
ss
push
repnz
sbb
jbe
aad
call
fwait
inc
fwait
test
sub
mov
xchg
mov
imul
test
xor
out
pop
ret
or
pop
and
insb
and
add
insl
cmpsl
jge
inc
jnp
jp
push
pop
cmp
insl
push
xor
dec
jecxz
jg
jmp
pop
pop
xchg
ss
scas
sbb
pop
fldt
jge
cmpsb
xsha256
cmpsb
pop
pop
ret
mov
cmp
rorb
dec
xchg
adc
jnp
mov
xor
jno
aad
sbb
xchg
jbe
add
int
jg
jae
mov
std
lds
dec
pushf
lcall
mov
lds
mov
lret
jmp
jl
xchg
push
jns
push
adcl
mov
mov
insb
bound
nop
call
stc
fidivl
adc
dec
and
ljmp
pop
push
inc
cmp
mov
repz
adc
clc
aas
cmc
test
mov
fildll
dec
mov
cwtl
movb
inc
cmc
xor
jo
pop
loope
pop
aaa
out
scas
outsb
xor
imul
jg
xor
mov
enter
ficoml
cld
loop
and
inc
xchg
loop
or
shlb
in
adc
loopne
add
add
jnp
pop
pop
jno
popa
cli
mov
sub
ret
and
cmpsl
mov
and
cmp
mov
jle
adc
movsb
jno
cmp
mov
xchg
push
dec
mov
push
shl
xor
repz
fsubrp
xorb
insl
or
push
inc
push
sahf
popa
mov
sbb
scas
in
sub
fstpt
and
push
pop
out
ljmp
loop
inc
arpl
jp
das
sub
mov
bound
nop
ljmp
ja
es
aaa
mov
mov
fdivs
cmp
push
adc
and
or
movsb
xor
xchg
push
cwtl
pop
hlt
mov
push
popa
shrb
paddsb
push
xlat
sbb
or
fidivrs
in
or
xlat
insl
mov
test
or
and
mov
dec
mov
lods
mov
mov
loopne
scas
inc
pusha
cmc
inc
incb
jecxz
xor
sub
pop
inc
dec
nop
cmp
push
arpl
and
mov
sub
bound
imul
pop
pop
popf
ss
xchg
sbb
pop
add
pop
loope
dec
sub
mov
lods
hlt
push
push
adc
adc
outsl
jo
loop
dec
and
in
adc
mov
out
pop
push
scas
sbb
shrl
scas
jge
mov
sbb
in
int
mov
sbb
das
mov
adc
cmp
push
outsl
pop
adc
les
pop
js
push
in
in
dec
out
aad
pop
nop
mov
je
jg
mov
out
dec
push
mov
daa
or
mov
in
popa
pop
jl
dec
hlt
mov
addr16
in
jnp
xchg
fcoms
xchg
ret
fwait
lock
imulb
or
je
add
cmp
jmp
orb
addl
lahf
pusha
movsb
dec
xor
push
addr16
imul
and
fidivrs
bound
ficomps
cmpsl
shrb
sbb
cld
dec
cmp
and
xor
xchg
out
xor
shlb
xor
out
push
push
jo
jnp
jmp
sti
mov
cmp
ret
push
adc
adc
dec
sbb
repz
divl
movsl
loopne
inc
dec
pop
xchg
cmpsl
cmp
dec
neg
jmp
mov
push
jb
leave
sbb
mov
jecxz
mov
js
iret
add
popa
les
sti
sbb
lods
pop
mov
in
xchg
cmp
and
scas
xorb
loop
fstl
dec
icebp
jg
sub
stos
cmp
sbb
dec
sub
iret
shlb
add
scas
jnp
push
scas
in
ds
out
rcl
xchg
bound
xor
ret
test
sbb
lea
mov
xor
mov
jg
cmp
ja
insl
jbe
test
mov
arpl
cmpsb
pop
pop
push
sub
push
cmp
and
xchg
enter
cmp
push
xchg
jg
sub
add
pop
loop
adc
shr
andb
and
jbe
cmpsl
adc
mov
mov
lea
adc
xchg
cmp
pop
jp
orb
xor
cmc
or
mov
jne
popf
rcrl
popf
hlt
push
jns
sbb
xor
mov
rcr
mov
sub
int3
cltd
out
push
xchg
repnz
imul
mov
repnz
clc
push
jle
jle
imul
pop
push
xchg
sub
adc
push
inc
pop
dec
jmp
fdivs
push
test
push
add
shlb
aas
fucomip
and
sbb
sub
pop
hlt
int3
fwait
push
idiv
dec
repnz
lea
adc
call
adc
pop
adc
les
sbb
in
in
and
adc
nop
or
popf
out
hlt
lock
dec
mov
adc
outsl
jmp
mov
ss
jle
mov
xor
cltd
sti
inc
rol
addr16
adc
in
xchg
pop
sbb
imul
dec
outsb
data16
inc
repnz
and
std
add
aas
subl
jmp
icebp
ret
mov
stc
add
mov
and
pop
mov
test
mov
jns
cld
xchg
stc
fyl2xp1
test
adc
sub
xchg
jl
mov
aas
sub
push
sub
cmpsb
rorl
xor
or
data16
mov
sub
rorl
push
pop
inc
shl
jecxz
stos
push
cmc
jae
movsl
inc
mov
lea
mov
ficoml
mov
loope
mov
adc
insb
out
adc
xchg
cmp
cmpsl
or
xchg
pop
inc
cmp
cli
or
inc
mov
pop
outsl
jmp
pop
pop
cmp
dec
push
sub
mov
or
bound
sub
and
fsubrl
dec
mov
pop
rcll
inc
cmpsb
xor
mov
std
push
cmpsl
pop
insb
mov
sub
lahf
int3
mov
inc
mov
cmp
push
dec
shlb
xor
lods
imul
fs
jno
jmp
sbb
fisubl
push
or
popa
mov
stos
in
xchg
dec
cmp
dec
adc
and
xchg
cmpsb
inc
inc
or
ret
xchg
jmp
insb
movsb
dec
outsb
push
xor
loope
pop
cmp
adcl
push
cli
out
cmp
cs
in
mov
aam
inc
dec
popa
cld
repz
jge
adc
data16
jecxz
and
les
into
xor
arpl
xor
xor
push
cmp
mov
jbe
test
mov
filds
imul
cld
adc
mov
stos
das
int
sub
push
lock
roll
and
out
dec
mov
mov
lcall
mov
add
ret
cmp
jp
je
mov
outsb
shll
sub
and
xchg
push
into
enter
nop
xchg
cs
das
push
pop
rorb
add
test
sbb
adc
cmp
or
leave
pushl
cld
cmp
pop
fistpl
aam
stos
repz
xor
inc
inc
xchg
push
in
jb
lret
xchg
cmp
pushf
stc
jno
mov
mov
and
pop
and
jg
cmp
sub
sbb
and
cmp
mov
sbb
pop
sti
es
jg
int3
add
sbb
sarl
fstp
xor
and
test
into
mov
cmp
fdivrs
xor
xchg
rcrl
xchg
hlt
sub
push
pop
mov
cwtl
lcall
add
imul
adc
add
movsb
push
gs
subl
movl
push
inc
or
insl
pop
jns
in
mov
add
lret
jbe,pn
rcrb
xor
addr16
xor
out
add
add
adc
lahf
nop
sub
orps
fstl
and
addr16
or
jnp
and
lahf
outsb
jmp
mov
or
pop
push
push
dec
fsts
and
call
dec
push
or
sti
xchg
in
icebp
ja,pt
int3
sbb
add
xor
add
push
insl
call
outsb
sbb
mov
xchg
mov
sbb
xchg
rol
dec
jl
cmp
sti
faddl
xchg
in
jecxz
scas
fidivs
jnp
bound
mov
lods
stos
icebp
pop
addr16
mov
cmp
push
jmp
insl
inc
lret
xchg
popa
push
xor
dec
dec
cmpsb
or
xchg
fistps
mov
inc
jmp
stos
mov
les
mov
add
pushf
lods
movsl
pop
hlt
jl
xor
ret
sar
sahf
js
mov
out
mov
add
std
in
add
xor
cld
cltd
ret
mov
jbe
xchg
lods
iret
stos
xor
push
xor
mov
pop
add
fidivrs
clc
push
cmpl
ljmp
test
stos
push
mov
and
je
pop
push
rcll
mov
and
shl
hlt
xchg
sub
cmp
pop
jnp
test
add
rcl
mov
fsubrl
call
push
push
lods
les
ja
cmp
dec
in
mov
push
mov
ficomps
mov
mov
outsl
out
sbb
mov
xor
fbld
and
mov
cmp
stos
jge
flds
ljmp
aas
dec
dec
xchg
cmpsl
jb
es
mov
or
sbb
out
pop
mov
repnz
jg
cld
xor
loopne
fimuls
outsl
pop
jmp
sbb
in
push
inc
popa
js
test
and
jg
jno
pop
insb
dec
fisttps
fidivs
jp
sbb
cmp
push
cwtl
ret
popf
push
js
push
arpl
imul
jle
mov
outsb
test
jns
sbb
cwtl
es
cmp
pushf
xchg
daa
add
aaa
dec
mov
stos
outsb
mov
pop
fcoml
or
into
add
mov
inc
mov
je
popa
pop
sub
lea
xchg
xor
jnp
sahf
mov
sbb
pop
pop
iret
cltd
xchg
imul
cmc
sbb
popl
sbb
cmp
ja
mov
aam
loop
adc
xor
jmp
je
inc
into
xchg
loop
out
xchg
xchg
ds
mov
sub
dec
neg
ljmp
lods
and
out
fwait
and
std
mov
js
inc
xchg
fimuls
or
in
sub
ljmp
xchg
lcall
xor
jno
jg
cmpsl
ja
mov
lock
pcmpgtw
adc
jmp
stc
cmpsl
add
mov
push
ds
push
frstor
sub
fisubrl
adc
mov
cmc
jae
shll
pop
popf
test
jnp
mov
icebp
loopne
adc
dec
pop
popf
xor
enter
subl
mov
outsl
divl
repz
add
xchg
lret
add
sbb
xor
outsl
jbe
and
or
sbb
fucomip
mov
stc
push
imul
ret
popa
leave
sbb
push
xorl
push
xor
pushf
jp
mov
pop
adc
data16
cltd
pop
hlt
xor
pop
jle
inc
scas
inc
fcomps
mov
sub
pop
fistl
in
pop
dec
adc
push
xchg
inc
pop
imul
sub
outsl
shl
js
sub
sub
adc
rorl
in
leave
and
jl
xchg
jle
lcall
inc
add
arpl
imul
out
adc
mov
fidivrl
popa
into
lret
jle
cmc
pop
pop
aas
es
inc
lret
jo
stc
out
push
mov
ja
pop
int3
adc
mov
rolb
mov
pop
stc
nopl
pusha
inc
stos
sub
sbb
lcall
incb
pop
sti
aam
add
jle
jbe
int3
fs
xchg
in
sbb
adc
and
inc
xor
sub
loopne
push
fwait
aaa
lcall
jno
pushl
add
mov
mov
repz
cmp
mov
bound
dec
lret
test
xchg
mov
cmc
cmp
es
jge
loopne
mov
mov
mov
jns
outsl
xchg
jns
add
fimull
sub
xchg
inc
nop
stc
sbb
dec
jle
rorb
mov
mov
gs
pop
movsb
push
sub
cmp
pop
clc
int3
sub
das
ljmp
add
ds
lds
out
loopne
addr16
jecxz
repz
mov
mov
imull
xchg
add
sbb
test
inc
adc
mov
mov
lds
outsb
dec
in
xor
mov
mov
out
mov
sarb
push
int
cmp
add
fcompp
in
dec
add
mov
adc
lahf
gs
push
or
lds
and
cmp
aad
shrl
pop
adc
fsubp
xor
adc
add
je
jne
jae
daa
dec
add
out
pusha
sbb
dec
iret
les
shlb
mov
es
popa
add
inc
mov
addl
mov
fst
int
mov
xchg
dec
xchg
push
mov
out
cli
sti
xor
out
rol
add
bsr
xor
xor
cmp
xor
jns
push
test
xchg
xchg
xchg
push
je
and
xchg
push
call
ret
dec
pop
gs
imul
jno
jmp
lds
mov
jle
adc
inc
pop
mov
mov
daa
pushf
cmp
jl
inc
test
jno
xor
pop
test
sahf
push
mov
pop
fistpl
xchg
push
sbb
popa
aam
push
mov
test
cmpsb
adc
sti
jae
xor
cwtl
adc
popf
jnp
sub
std
push
cmp
or
sub
lcall
sbb
xor
data16
mov
ffree
sbb
into
push
mov
pop
data16
div
lret
into
fstl
call
sbb
sarb
int3
dec
xchg
cmp
jae
jo
adcb
mov
fistl
out
push
sbb
cltd
lahf
mov
jnp
mov
fisubl
mov
nop
test
sub
or
jae
cmpsl
out
inc
add
add
mov
xchg
notl
sbb
sub
sbb
push
or
dec
lret
stc
shl
fdivrs
sahf
push
add
lret
push
int3
fisttpl
lods
mov
pop
sbb
mov
sbb
test
clc
lods
call
cld
push
or
rclb
fmuls
lods
cwtl
push
push
mov
shrb
jl
lret
mov
mov
dec
or
mov
ret
sub
add
dec
xchg
cwtl
loope
push
test
fcmovnbe
cmp
adc
shrb
add
add
cwtl
sub
xor
dec
adc
dec
call
lods
jl
movsb
xor
fiaddl
xor
pop
fsubrl
pop
insl
jno
rclb
insl
dec
outsl
mov
imul
ja
or
loope
repnz
hlt
cld
and
fldl
mov
mov
out
pop
fmuls
pop
shrl
ret
jns
jno
ret
xor
ds
loopne
xor
jp
inc
bound
arpl
inc
xchg
xchg
dec
sbbb
and
sbb
sub
cld
add
sub
xchg
lods
push
dec
lods
pop
push
pop
mov
and
adcb
add
pop
lea
adc
bound
cltd
dec
movsb
sbb
fsts
add
lods
xchg
add
pop
orl
roll
mov
mov
jns
fwait
outsb
arpl
add
loopne
in
movsl
cmp
addb
adc
call
or
jp
dec
pop
and
sub
cmp
push
out
jns
add
mov
es
jno
xchg
add
out
arpl
loopne
mov
or
rcll
inc
pop
push
gs
fcoml
dec
mov
xchg
les
or
cli
pop
jne
aaa
stc
ja
outsb
inc
gs
lods
aas
insl
sub
mov
jg
jg
sub
inc
out
in
xor
pushf
lahf
repnz
inc
sub
or
and
and
sar
psllq
xchg
gs
xchg
mov
mov
pop
mov
arpl
sahf
gs
sahf
popa
jae
xor
dec
or
cwtl
cmp
out
xchg
lahf
push
leave
insl
jl
fisttpll
mov
shll
jb
es
dec
cmp
out
dec
xor
or
xchg
shl
rolb
outsl
adc
xlat
movsb
ss
sbb
xlat
mov
dec
movsl
ret
dec
cmp
mov
ret
pop
push
xor
pop
xor
test
loop
jb
aas
shr
rcrb
xchg
mov
fadd
sbb
xchg
xchg
and
add
add
lods
cs
inc
insb
movsl
roll
jb
lcall
gs
sbb
loope
mov
aad
test
repz
daa
push
dec
inc
inc
mov
movsb
inc
nop
inc
fstps
call
mov
ret
jae
jge
adc
cld
adc
es
fcoml
mov
stos
lods
int3
xchg
add
out
data16
imul
movsb
ficoml
xor
aad
frstor
test
cmp
and
cmp
jns
dec
sbb
or
adc
sar
lock
xor
mov
and
scas
sbb
lahf
sub
pop
jp
push
or
jbe
movsl
add
rol
mov
xor
in
add
push
in
fsubrl
fcompl
pop
jp
lods
ficoms
pop
sub
imul
in
mov
cmp
js
imul
repz
test
dec
cmp
fcomp
pop
mov
pop
sahf
sbb
insl
and
mov
or
and
push
lods
adc
mov
adc
inc
pushf
xchg
mov
iret
mov
aad
std
and
testl
xlat
loopne
xor
mov
dec
xor
ljmp
mov
sub
mov
mov
dec
in
mov
and
xchg
pop
cwtl
sub
push
mov
sbb
sbb
dec
push
or
jle,pn
aas
fs
push
push
jnp
mov
sub
push
pmulhuw
das
pop
aad
inc
enter
jae
mov
pop
mov
aas
icebp
or
inc
sub
cmp
sbb
sbb
popa
mov
pop
inc
arpl
std
push
test
mov
test
adc
addb
sbb
pop
daa
mov
js
inc
movsb
or
movsb
aas
fs
push
inc
sub
sub
jmp
and
push
fmuls
sbb
add
ret
push
repz
pand
mov
fildll
lcall
pop
lret
shrb
call
push
mov
sti
push
aam
mov
lods
mov
fucomi
mov
jmp
cmpxchg
in
push
out
in
cmp
outsl
stos
adc
imul
inc
lcall
jl
out
cmp
clc
fidivrl
add
call
cmp
pushf
fucomi
sub
in
or
test
push
outsb
pop
xchg
leave
subl
call
sub
jl
sti
out
insl
es
jb
das
ljmp
dec
scas
and
stos
mov
mov
xchg
push
in
mov
lret
dec
sahf
xchg
fildl
sbb
dec
aaa
fistpll
push
fildl
and
jmp
mov
dec
stos
sbb
dec
scas
fstps
pop
out
mov
xlat
mov
lret
cwtl
int
cmp
jnp
ret
push
mov
jno
icebp
scas
xchg
stos
mov
sti
mov
push
cmc
out
jnp
dec
cli
enter
jg
mov
inc
clc
push
push
dec
mov
das
sahf
in
mov
cld
stos
xor
test
mov
lods
lods
mov
jl
imul
cmp
add
decb
hlt
rclb
in
sbb
mov
push
aas
sbb
rcrb
in
sub
hlt
jbe
push
dec
sbb
andb
or
adc
pop
lock
stos
mov
xchg
pop
sub
std
cmp
sbb
jg
push
pop
insb
stc
push
lret
and
loop
jp
cmc
leave
or
push
xchg
shrl
outsl
cmpsb
loop
jp
cmc
into
or
jg
hlt
enter
fistps
pusha
movsl
stc
cmp
hlt
iret
or
ficomps
popa
movsl
in
jl
repz
cmovae
jmp
cmp
enter
fistps
push
xchg
out
sub
pop
push
xchg
call
cmp
or
test
pop
push
xchg
out
sub
cmp
or
push
xchg
out
das
arpl
cmc
into
or
push
xchg
call
cmp
pusha
movsl
stc
aas
jae
mov
push
inc
lahf
ficomps
popa
movsl
clc
aas
jo
lret
add
ficomps
push
xchg
jmp
cmp
mov
int3
add
fistps
push
xchg
out
sub
jae
mov
push
jecxz
jge
repnz
or
test
pop
push
xchg
call
cmp
repnz
or
test
pop
push
xchg
shrl
outsl
mov
cmc
leave
or
push
xchg
shrl
outsl
cmpsb
loop
jp
cmc
into
or
jg
hlt
enter
fistps
pusha
movsl
stc
cmp
hlt
iret
or
ficomps
popa
movsl
in
jl
repz
cmovae
jmp
cmp
enter
fistps
push
xchg
out
.byte
xchg
sbb
shll
cmp
xchg
inc
popf
fcomps
push
xchg
out
sub
cmp
or
push
mov
ret
mov
into
or
dec
xchg
das
data16
pop
inc
clc
shrb
xchg
and
push
mov
sub
add
lret
jp
add
stos
or
cmp
mov
int3
add
fistps
push
xchg
out
sub
jae
mov
push
jecxz
jge
repnz
or
test
pop
push
xchg
call
cmp
repnz
or
test
pop
push
xchg
shrl
outsl
mov
cmc
leave
or
push
xchg
shrl
outsl
cmpsb
loop
jp
cmc
into
or
jg
hlt
enter
fistps
pusha
movsl
stc
cmp
hlt
iret
or
ficomps
popa
movsl
in
jl
repz
cmovae
jmp
cmp
enter
fistps
push
xchg
out
sub
pop
push
xchg
call
cmp
or
test
pop
push
xchg
out
sub
cmp
or
push
xchg
out
das
arpl
cmc
into
or
push
xchg
call
cmp
pusha
movsl
stc
aas
jae
mov
push
inc
lahf
ficomps
popa
movsl
clc
aas
jo
lret
add
ficomps
push
xchg
jmp
cmp
mov
int3
add
fistps
push
xchg
out
sub
jae
mov
push
jecxz
jge
repnz
or
test
pop
push
xchg
call
cmp
repnz
or
test
pop
push
xchg
shrl
outsl
mov
cmc
leave
or
push
xchg
shrl
outsl
cmpsb
loop
jp
cmc
into
or
jg
hlt
enter
fistps
pusha
movsl
stc
cmp
hlt
iret
or
ficomps
popa
movsl
in
jl
repz
cmovae
jmp
cmp
enter
fistps
push
xchg
out
.byte
sub
cwtl
add
jb
gs
xor
cs
insb
add
mov
cwtl
add
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
add
add
pop
sub
mov
lea
mov
lods
add
jmp
ret
add
rol
jmp
ret
test
add
stc
xor
ror
nop
jmp
call
imul
add
sub
dec
dec
jmp
jmp
sbb
mov
dec
add
fldt
les
ret
mov
call
mov
sahf
lock
push
pop
nop
or
fnstenv
nop
in
outsl
pushw
repnz
or
push
jns
add
arpl
aad
sub
lret
cld
adc
and
push
mov
jl
push
pop
pop
pushf
sti
pop
aad
pop
int
repz
addl
push
sbb
mov
xchg
sbb
mov
in
aad
jne
sub
outsl
push
das
xchg
enter
mov
dec
cmp
icebp
adc
jbe
xchg
and
sbb
roll
insl
lds
fucomi
inc
sub
bound
das
mov
cmp
inc
fildl
jae
xchg
std
add
test
sti
pop
testb
inc
scas
je
stos
fiaddl
int3
jp
mov
and
pop
mov
popf
insl
cmpsl
data16
aad
cmpb
fs
gs
xchg
stos
adc
test
xchg
call
ret
lock
ficoml
cmpsb
mov
stc
inc
sub
nop
leave
icebp
outsl
pushw
xor
adc
push
push
jns
xor
and
push
cltd
and
arpl
jmp
leave
mov
movsb
repz
push
sub
jmp
stos
mull
pop
enter
sbb
push
or
outsl
nop
add
movsl
xchg
jno
popf
pusha
inc
das
aad
gs
daa
ja
dec
pusha
repnz
call
insl
aam
or
pop
mov
adc
mov
jo
mov
add
push
push
lcall
adc
cmpsb
popf
mov
lds
stc
and
pop
lods
ret
and
int3
xor
out
cmc
rcrl
sbb
fstpl
xlat
pop
mov
scas
imulb
mov
ret
lret
in
sub
aaa
movsb
arpl
xchg
jp
xor
mov
push
push
lahf
fistpll
imul
adc
adc
pop
loop
mov
adc
mov
jns
mov
xchg
lods
pop
sub
mov
xchg
dec
adc
jnp
sbb
xor
add
xchg
mov
and
jne
pop
out
or
xchg
and
pop
int3
inc
and
cmova
vmovaps
jne
ss
inc
cld
movl
cmp
sbb
lock
loop
add
pop
sub
out
sbb
stc
sbb
sub
mov
jl
hlt
xchg
fs
sbb
leave
pop
test
aad
xor
add
les
int3
fs
or
aad
mov
push
cmp
inc
out
xchg
es
sbb
ds
mov
dec
out
not
subl
fwait
ds
loopne
mov
adc
js
stos
out
pop
mov
ljmp
popf
fidivrl
dec
mov
pop
clc
or
mov
sub
pop
adc
pop
fnstsw
lock
xchg
jnp
dec
in
cmp
fs
loopne
idiv
sbb
lahf
adc
in
mov
in
cld
mov
lar
popa
loopne
imul
jecxz
in
pcmpgtw
out
jbe
push
pop
fcmovnu
inc
test
dec
cs
call
out
in
add
icebp
xchg
outsb
pusha
lcall
mov
mov
ljmp
cmp
dec
sub
loope
and
pop
mov
push
jmp
add
xor
inc
dec
xor
add
dec
aad
aad
pushf
xchg
push
dec
mov
push
cmpsl
jbe
outsl
fucomi
add
dec
in
xor
aas
cmp
notl
cmc
cmovge
lcall
jbe
pop
ficoml
in
and
adc
testl
mov
sbb
sar
adc
mov
dec
scas
add
fwait
mov
xor
test
push
pop
mov
sbb
jl
push
mov
mov
mov
lds
or
negl
xor
push
push
pop
or
inc
and
vmovaps
mov
pop
clc
add
sub
mov
aaa
or
add
hlt
fidivrl
outsb
pusha
pop
pop
orb
fsubrs
pop
inc
mov
adc
and
sub
jge
jge
push
dec
lods
ret
adc
stc
xchg
insl
cli
pop
push
enter
add
out
xchg
mov
mov
xor
pop
popf
test
xchg
push
test
xchg
in
push
cmpb
cmp
and
int
out
sbb
pop
mov
idivl
adc
aam
je
jmp
mov
and
and
xor
hlt
mov
addl
cltd
pop
adc
inc
sub
mov
fnstenv
sbb
adc
adc
rorl
leave
inc
ss
push
sbb
aaa
jae
lcall
sub
addl
sbb
mov
inc
test
dec
push
adcb
stc
pop
imul
pushf
mov
rcrl
and
and
or
fldt
cmp
movsl
test
repz
mov
mov
fdivl
in
add
insl
fidivs
or
mov
sub
test
enter
lea
negb
rorl
call
dec
mov
into
pop
shrb
sbb
clc
int3
lds
dec
push
inc
out
out
in
or
lods
int
mov
cs
pushf
std
shll
aaa
lahf
lahf
jle
adcb
mov
fxch
mov
rcrl
outsb
xchg
loope
rclb
mov
jns
xchg
dec
fsubp
out
inc
cmp
sub
jle
sahf
mov
popl
nop
xchg
nop
je
stos
test
inc
pop
mov
lods
clc
sar
ret
mov
xchg
enter
fisttpll
loopne
stc
jecxz
push
out
in
out
push
imul
jge
push
mov
es
movsb
lret
dec
je
add
loopne
mov
sub
ret
lock
add
pop
mov
and
rcrb
ret
iret
jp
fcmovb
cmp
mov
mov
pop
cltd
mov
in
xchg
push
jecxz
pop
mov
pusha
add
dec
xor
mov
fsubl
addb
pop
mov
or
inc
mov
mov
iret
imulb
push
adc
cli
call
mov
jb
jns
dec
pop
xor
cltd
or
jmp
arpl
ret
xor
pushf
mov
loop
inc
mov
sbb
jl
je
dec
cmp
or
jmp
rol
mov
mov
pop
dec
inc
ss
sbb
mov
hlt
push
cmpsb
lods
jge
pop
outsl
inc
xlat
and
pcmpgtw
xlat
sub
orb
into
and
das
inc
cmpsl
cmp
sbb
iret
loope
mov
push
pusha
mov
sub
or
repnz
fsubrs
adcl
fldt
cmp
mov
test
adcb
lods
ret
je
int3
fiaddl
stos
cmp
ret
aad
mov
data16
pop
cs
adc
hlt
fsubrl
pop
gs
fildll
test
mov
mov
or
push
dec
das
mov
xlat
leave
iret
shrl
pop
inc
xor
adc
cli
call
mov
sbb
xor
cltd
or
jmp
arpl
ret
xor
pushf
mov
loop
inc
mov
sbb
jl
je
dec
cmp
or
jmp
rol
mov
mov
pop
dec
inc
ss
sbb
mov
hlt
push
cmpsb
lods
jge
pop
outsl
inc
xlat
and
pcmpgtw
xlat
sub
orb
into
and
das
inc
cmpsl
cmp
sbb
iret
loope
mov
push
pusha
mov
sub
or
or
push
push
dec
cmp
dec
fldt
cmp
movsl
movsb
jge
scas
push
in
movsl
es
lods
ret
je
push
jge
lea
add
mov
fistps
jne
pop
pusha
adc
clc
jae
ja
fildll
dec
aaa
cmp
cmp
push
sub
mov
sub
mov
lmsw
inc
xchg
xor
xor
mov
shrl
xor
and
inc
es
je
mov
sbb
lea
je
rol
xor
pushf
es
dec
xchg
test
movsb
imul
loop
cmp
pop
pop
cmpsl
xor
das
mov
and
add
inc
stos
lahf
