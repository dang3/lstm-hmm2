push
sbb
in
orl
inc
subb
jo
sbb
call
sbb
ja
in
inc
jmp
mov
push
pop
and
cmpl
insl
scas
adc
lea
xorb
sbb
adc
pop
sbb
je
adc
add
jo
jo
lods
adc
sbb
or
je
add
add
mov
or
inc
pop
daa
sbb
shlb
fwait
adc
adc
push
or
pop
lods
ret
sub
sub
ror
ret
xchg
and
sbb
lcall
xor
push
in
inc
adcl
adc
roll
and
adc
movsl
push
xchg
xchg
sbb
adc
aad
js
xorl
cmp
sbb
test
sbb
nop
test
add
sub
adc
and
mov
andl
insl
ljmp
adc
add
adc
inc
lods
mov
rcrb
mov
inc
test
pop
movsbl
cwtl
sbb
mov
jg
inc
sbb
sbb
lods
call
movl
push
sub
lock
xchg
inc
push
xchg
or
fildll
sub
int
adc
jo
jae,pt
dec
mov
ds
sbb
push
int
push
mov
leave
xor
cld
mov
cli
adc
adc
scas
adc
xchg
jne
push
outsb
inc
dec
jmp
in
sbb
push
scas
sub
adc
cmove
xchg
inc
ret
jo
movsb
dec
mov
mov
adc
xor
clc
movsb
call
inc
xor
cld
inc
in
and
fcmovbe
xor
and
cmp
inc
xor
mov
insb
movsb
inc
pusha
mov
sbb
insb
movsb
icebp
insb
movsb
or
adc
xchg
xor
sti
and
test
rorl
sbb
cmpsl
in
cld
mov
adc
in
insb
cwtl
insl
mov
inc
icebp
inc
mov
insl
mov
adc
popf
jo
movb
adc
dec
fldcw
clc
adc
daa
lock
adc
xor
pcmpeqd
xor
jmp
lock
or
xchg
xor
gs
or
addr16
sbb
clc
and
shl
inc
dec
jnp
lock
clc
shl
xchg
add
hlt
push
adc
lock
cmpsb
stos
rcll
sub
add
test
xchg
sub
cli
sub
sti
and
xor
or
push
into
adc
pop
in
adc
xor
sbb
bound
test
fs
dec
lea
xlat
or
add
mov
mov
cmp
adc
adc
loopne
andl
cld
and
aam
push
push
repz
or
or
or
push
dec
iret
test
xor
add
add
cmp
jne
sub
add
inc
jae
cmpsb
xor
sub
es
pop
nop
pop
inc
loope
and
push
lea
inc
or
mov
shlb
mov
mov
adc
jg
adc
add
cmp
push
mov
ljmp
incl
shrb
push
and
mov
adc
lret
js
mov
inc
int3
add
shrb
xor
or
xchg
adc
fisubl
add
sub
fimuls
fs
loop
push
lahf
and
out
xor
adc
sub
test
subb
lods
sbb
popa
lods
clts
push
pop
aas
scas
mov
push
lds
icebp
adc
and
fdivs
inc
and
dec
inc
in
dec
sbb
sahf
xchg
inc
mov
out
addl
fs
leave
incb
pushf
xchg
jns
inc
push
nop
cmp
pop
and
fisttpl
sbb
outsb
inc
out
stos
fidivl
and
adc
xor
push
adc
inc
sub
inc
adc
adc
cs
push
adc
pop
imul
rorl
cmp
jmp
cmp
test
and
decl
xor
mov
and
lea
dec
inc
les
popf
mov
sbb
xor
push
mov
in
sbb
dec
fidivrl
aaa
xchg
movsl
pushf
adc
iret
out
lods
popa
adc
add
xor
cmpb
and
fwait
lock
add
push
push
push
add
push
pop
lea
movsl
dec
dec
sti
adc
orb
es
sbb
daa
sub
fcoms
lods
cltd
repz
fs
insl
call
push
mov
movsb
jl
andb
repnz
xor
add
es
sub
jb
int
cli
or
and
sub
and
push
and
call
add
xchg
pushf
sub
jne
push
test
mov
xor
sbb
pusha
sub
push
sbb
sub
cmp
dec
mov
pop
int
in
shlb
and
je
and
gs
call
cmpsl
xchg
shl
mov
lea
or
in
xor
and
lret
mov
repnz
cltd
pop
sub
call
mov
jg
enter
fidivl
mov
scas
or
cmp
nop
mov
jns
pop
mov
and
mov
call
in
fadds
lcall
or
movsb
adc
and
push
or
cld
mov
ds
add
pop
or
jmp
dec
call
rcrl
pop
add
pop
pop
leave
ret
int3
sbb
or
or
mov
orb
and
cmc
dec
stos
les
lahf
pop
dec
jnp
les
and
enter
lret
adc
pop
int3
aas
dec
lods
mov
stos
scas
mov
sub
xor
fdivrs
mov
mov
out
mov
loop
sub
test
mov
enter
inc
fmull
xor
xlat
cmp
fdivrs
hlt
mov
lcall
and
jmp
je
sub
mov
inc
push
xchg
lcall
imul
dec
hlt
inc
push
mov
inc
sub
push
xchg
movhps
test
or
int3
fwait
mov
add
dec
and
or
out
mov
mov
mov
mov
pusha
dec
adcl
mov
fcoms
sbb
adc
sub
orb
inc
cmp
or
or
dec
dec
lods
xchg
and
in
or
repnz
sub
mov
popa
adc
dec
clc
cmc
adc
in
jp
inc
jne
push
push
hlt
mov
dec
inc
adc
pop
dec
cmpsl
cltd
add
call
leave
ror
test
test
lahf
inc
call
gs
or
pusha
and
shlb
fimuls
push
or
lret
or
stos
shlb
test
cli
sub
xor
and
adc
fs
adc
mov
int3
xchg
cmp
push
inc
cmp
pushl
call
mov
and
add
and
or
pop
inc
fisttps
inc
hlt
addl
jg
or
stos
cltd
ds
pop
adc
dec
sbb
clc
sti
inc
mov
sub
inc
cmp
or
sub
rcrb
lcall
dec
add
mov
or
xor
and
pop
mov
dec
dec
rcrl
daa
mov
xchg
push
mov
inc
mov
test
mov
icebp
fisubrl
add
sub
mov
out
pop
cmp
mov
push
daa
hlt
call
adc
stos
pop
mov
nop
add
jmp
sbb
jp
sub
mov
inc
hlt
les
out
jnp
push
fs
push
mov
rcl
and
xchg
dec
mov
add
and
mov
pop
sbb
fstps
xor
mov
js
xchg
es
in
inc
cmc
cmpsb
gs
fnstenv
lea
int3
mov
mov
popa
in
jmp
or
dec
mov
and
xchg
adc
inc
push
xchg
adc
mov
es
adc
scas
dec
mov
sub
cmpl
or
idivb
addl
mov
movsb
sar
jmp
pop
pop
xchg
sti
and
cmp
test
push
fstl
pusha
adc
or
loope
or
and
add
lods
rolb
jp
pop
jg
inc
mov
imul
adc
inc
std
xor
and
inc
scas
push
rcr
mull
call
push
scas
and
mov
adc
push
and
sub
inc
fcoml
push
scas
je
jge
xchg
pop
mov
std
pop
outsb
inc
test
frstor
insl
bound
call
sub
std
jnp
in
cwtl
inc
jno
movsb
sbb
sti
lods
dec
inc
inc
mov
inc
and
and
dec
adc
or
adc
mov
jae
xor
popa
bound
and
cmpl
jle
or
xor
push
inc
cmpsl
adc
je
push
dec
fcomps
hlt
sub
push
inc
inc
and
inc
enter
rcll
sti
bound
add
enter
and
aad
test
out
add
push
inc
jno
shr
pop
iret
xchg
push
mov
xchg
jbe
inc
or
ret
icebp
adc
test
push
cld
or
pop
pop
push
push
adc
push
aas
pop
push
dec
sub
xchg
xor
sub
jne
sbb
sub
adc
push
sub
pop
nop
aaa
cltd
addr16
adc
dec
push
icebp
inc
sti
mov
in
jno
stc
adc
insb
je
ret
sti
pop
mov
xor
push
cltd
ja
out
inc
dec
push
sub
iret
adc
in
inc
jns
or
cmp
add
push
fs
insl
lea
lcall
or
cmpl
xor
mov
imul
mov
call
xchg
or
inc
jle
loope
test
call
call
mov
lock
jo
xchg
add
hlt
mov
lea
mov
ja
aam
dec
or
je
adcl
fs
push
jmp
shrb
movsb
int
sub
sub
push
stos
add
xor
sbb
cmp
neg
adc
rolb
or
sbb
adc
icebp
sbb
jbe
sbb
mov
and
cmp
push
lretw
and
mov
sbb
call
pop
call
dec
es
popa
sbb
push
or
das
addr16
push
xchg
add
dec
sbb
dec
stos
dec
scas
sbb
sbb
cwtl
mov
fstps
sar
xchg
dec
mov
inc
adc
movsl
scas
jbe
arpl
push
xor
push
push
mov
push
outsl
sbb
pop
sti
dec
inc
and
addl
rcl
daa
fstl
cld
xor
dec
enter
nop
test
push
jb
pop
adc
and
cs
orb
es
dec
cltd
adc
sub
test
call
sbb
xor
sub
xchg
cmp
sar
popf
rcrb
and
mov
inc
ret
add
insl
mov
add
call
test
or
aaa
gs
jno
pop
in
adc
add
pop
repnz
and
push
adc
sbb
call
cmp
rcrb
in
insl
cmp
inc
pop
dec
fdivrs
stos
and
xorl
cmp
aam
adc
enter
add
andb
push
pop
sbb
inc
push
pop
js
jge
orb
push
xchg
xchg
xor
add
scas
cmp
inc
xor
add
ficoml
or
shrl
stc
hlt
mov
ja
fmull
lods
and
mov
inc
aam
int
pop
data16
mov
adc
jg
pop
out
add
jmp
adc
lods
addl
arpl
mov
rcr
clc
add
addl
ss
add
lock
mov
inc
and
fiaddl
clts
lea
xor
adc
push
aas
adc
filds
fcoms
inc
inc
add
shrb
mov
repz
add
aaa
lock
dec
mov
js
adc
bswap
mov
dec
xchg
xor
fisttps
add
push
push
dec
aas
mov
jmp
daa
jmp
cmp
add
adc
andb
or
dec
cmpsw
or
mov
mov
pop
and
push
sub
sbb
xchg
in
cwtl
fdivl
pop
rorb
pop
out
fsubrl
adc
imul
incb
lock
jo
and
fadds
aad
imul
xor
sbb
inc
cld
sbb
lret
sbb
add
lock
testb
jb
mov
fidivs
and
aam
nop
insl
repnz
sbb
jmp
sub
pop
test
dec
inc
sub
inc
in
xor
inc
adc
inc
test
push
adcb
lds
rorb
stos
xchg
stos
push
jl
jb
and
sti
or
sbb
in
cmp
add
jl
clc
dec
int3
popf
ret
push
daa
push
xlat
and
and
add
imul
adc
pop
push
adc
or
jns
inc
xchg
dec
adc
adc
sub
lock
ret
inc
mov
in
add
adc
lea
sub
pop
sbb
ficoms
in
mov
push
aas
mov
sub
cld
mov
pusha
jl
stc
or
std
andb
xor
cmp
and
outsb
adc
scas
mov
cwtl
lret
shll
mov
inc
push
jne
dec
sbb
int3
mov
movsl
enter
nop
dec
push
shrl
rorl
out
inc
call
sbb
test
xchg
fdivp
or
pusha
adcl
movsl
cmp
cli
push
leave
mov
push
add
and
clc
and
inc
cmp
sub
jo
daa
call
sub
rorb
mov
push
lock
sub
xor
mov
stos
dec
arpl
aad
adc
cmp
andl
xor
xchg
or
push
fldenv
lods
pop
and
mov
pop
mov
jecxz
jecxz
cmp
sbb
and
or
xor
das
cwtl
in
jecxz
movsl
xor
test
or
inc
sbb
inc
mov
adc
nop
ss
sbb
sbb
dec
int
xchg
push
or
or
lcall
test
sbb
mov
mov
outsl
xlat
repz
in
aam
test
mov
jno
lret
add
add
cmp
adc
imul
jb
jmp
cltd
sub
sbb
pop
cmp
inc
popf
or
lea
mov
daa
mov
jp
sub
cpuid
or
movsl
and
or
icebp
inc
test
out
or
sarl
call
adc
mull
cmp
and
or
ss
test
imul
pop
fdivs
rcll
push
das
clc
and
daa
fnstenv
push
or
xchg
hlt
jbe
mov
push
fsts
xchg
iret
xor
sbbb
push
add
adc
jge
loop
fs
dec
pop
xor
pop
adc
adc
cmp
enter
fsubl
stos
inc
sti
push
cmp
loope
add
mov
push
sub
lret
test
int3
popf
sub
sub
test
scas
or
mov
daa
or
or
mov
das
dec
loopw
add
movsl
adc
fistl
mov
inc
push
add
xor
mov
dec
outsl
sbb
jnp
mov
mov
xchg
pop
je
adc
loop
and
add
les
cmp
inc
and
cs
push
es
adc
loope
stos
pop
lock
jo
mov
fs
mov
jmp
lea
lods
mov
out
sbb
jmp
movsl
xchg
adc
inc
xchg
xchg
decl
sub
jp
pop
ja
cmp
pop
movsb
aas
testl
push
dec
xor
push
sub
push
mov
test
sub
bound
pushf
in
jle
xchg
and
cmpsl
inc
add
imul
dec
loop
and
xor
xor
or
jb
push
dec
cwtl
inc
je
pop
ret
push
call
sub
shll
pop
fstpt
push
xchg
bound
adc
push
add
mov
mov
gs
je
ror
push
gs
rorl
lcall
xchg
jno
jns
dec
mov
or
xchg
sub
call
pop
dec
fisubrs
pop
ja
int3
hlt
lock
testl
mov
sbb
mov
push
push
sbb
add
arpl
aaa
data16
mov
lcall
jmp
fisubrl
mov
je
and
jge
sub
pop
and
aaa
jo
xor
inc
loopne
mov
mov
loopne
xor
push
adc
in
movsb
mov
or
jp
pop
sbb
nop
xchg
daa
sbb
xor
in
xor
gs
cld
pop
int
sbb
or
clc
sbb
and
cs
cltd
mov
outsl
in
dec
adc
lret
adc
testl
sbbb
dec
pop
insb
rorl
or
jp
sbb
shll
mov
add
xor
test
push
adc
xor
push
mov
sub
call
sub
clc
xchg
les
cmc
add
jmp
xchg
lock
xor
inc
mov
inc
dec
popf
sbb
cld
inc
mov
inc
loopne
enter
mov
setnp
and
push
jae
cltd
loop
cld
fildl
fsts
popf
stos
dec
adc
mov
test
xor
int3
adc
add
mov
inc
cltd
imul
test
sub
dec
pushf
and
adc
sub
imul
and
mov
add
sbb
xor
push
cmp
and
pop
sub
adc
dec
pop
and
xchg
mov
popa
or
jmp
push
popf
mov
jns
push
jnp
xor
push
out
movsl
aad
push
insl
jbe
movsb
push
repz
push
call
ss
enter
sbb
addb
cmc
cmp
mov
sub
cld
rorb
mov
loopne
insl
inc
sbb
mov
sbb
decl
sub
push
add
test
test
jnp
pop
mov
out
movzwl
and
adc
mov
inc
repnz
cmp
or
push
cmp
sub
pushf
xor
dec
add
das
mov
int3
lret
adc
js
test
jge
adc
jne
add
adcl
mull
arpl
out
test
inc
xor
lret
movsb
add
dec
hlt
mov
mov
cmpl
xchg
push
lret
lock
insl
and
mov
outsl
arpl
and
mov
imul
sub
aas
lea
rorb
mov
orb
push
xchg
out
aaa
and
test
sub
outsb
and
jmp
xchg
and
lea
inc
xchg
sar
lods
mov
cltd
mov
inc
cmp
push
inc
lret
ficoml
jmp
leave
mov
push
scas
dec
and
cwtl
in
jg
and
and
adc
dec
or
and
call
mov
fnstenv
mov
sti
dec
sbb
call
dec
in
into
dec
add
cli
dec
jmp
scas
and
nop
mov
test
hlt
les
and
or
xchg
pop
dec
stos
icebp
and
jmp
dec
mov
cmpsb
xchg
dec
xor
sub
inc
jle
jmp
inc
adc
call
enter
mov
sbb
rcrl
xchg
inc
sbb
fsub
dec
out
test
and
mov
pop
jae
push
mov
aas
push
or
push
roll
lds
xor
push
sub
pusha
sub
je
cltd
outsb
or
or
in
jns
sub
int3
inc
xchg
sub
and
jmp
fsts
push
das
xchg
sbb
mov
push
mov
sbb
hlt
xorb
out
hlt
add
clc
iret
outsl
stc
aaa
dec
int
cmp
scas
and
dec
xor
and
or
daa
and
xchg
dec
add
iret
jmp
enter
jge
in
rol
leave
or
das
or
sub
shlb
test
mov
add
and
shlb
cmp
and
nop
adc
cs
mov
loopne
and
jo
cmp
jl
in
inc
adc
mov
sub
cmp
in
ficoms
clc
inc
or
outsl
outsl
or
dec
jb
and
dec
add
inc
pop
fstl
push
in
bound
and
icebp
scas
inc
ficomps
mov
mov
pop
popf
inc
cmc
adc
sarb
icebp
mov
adcb
jl
jmp
insl
push
test
xchg
les
cmp
sti
enter
jg
push
stc
mov
xor
daa
sub
mov
xchg
je
push
jno
add
and
cmp
sub
adc
lods
test
xor
adc
addr16
adc
lea
mov
adc
inc
cld
or
mov
or
fisubl
or
and
lods
push
xor
mov
loope
and
mov
rorb
lret
adc
lock
mov
pop
dec
mov
sbb
cmp
add
cltd
push
pop
idiv
subl
popa
xor
mov
xor
xor
inc
imul
daa
xchg
add
mov
jno
lret
adc
ljmp
add
xor
mov
cmp
cmpsl
shr
add
in
add
and
or
add
sbb
or
cmp
push
cld
pop
xchg
movsb
xchg
mov
sub
jg
notb
pop
mov
and
clc
adc
mov
mov
fxch
adc
dec
jno
psubd
jno
sub
pop
test
push
cmpb
mov
nop
add
mov
push
mov
pop
movsb
push
xchg
sub
stos
mov
enter
and
adc
jmp
repnz
movb
sbb
and
leave
sbb
add
insb
jl
add
mov
push
pop
adc
sub
into
arpl
jb
xor
inc
sub
call
addr16
and
jne
push
pop
or
aaa
inc
push
adc
sub
mov
inc
add
insl
movsl
ja
push
test
in
add
or
cmp
push
dec
inc
leave
je
ficoml
xchg
lods
push
movsb
in
test
adc
push
push
mov
pushf
imul
and
adc
push
and
sub
adc
xor
dec
and
je
aaa
repnz
addb
push
jge
inc
icebp
mov
and
loopne
mulb
sub
test
mov
adc
mov
flds
das
or
and
fsubl
dec
jmp
pop
add
pop
dec
test
push
inc
aaa
mov
lods
cmp
xchg
pop
pusha
jne
movsbl
add
push
mov
enter
insb
out
sbb
inc
lahf
loope
aad
adc
inc
push
stc
sbb
dec
xchg
inc
adc
adc
inc
movsl
inc
fnstenv
out
or
pop
pop
insl
movsl
ds
pusha
mov
push
add
clc
fs
sub
shll
xor
pop
add
or
mov
sbb
dec
js
cmp
and
xor
or
testl
adc
cmp
xor
hlt
aad
and
std
adc
push
mov
sub
and
sbb
lret
leave
in
lcall
and
lret
jb
adc
mov
std
push
mov
adc
scas
fucomp
inc
out
imul
adc
push
mov
call
and
or
xchg
imul
push
mov
out
mov
sbbb
rorb
jg
call
pop
mov
sub
mov
xorb
push
inc
push
out
mov
jge
push
inc
shl
adcb
xlat
mov
push
xor
icebp
push
cmc
jae
in
adc
or
adc
mov
mov
push
pop
in
icebp
sti
ret
pop
adc
loope
sbb
dec
repz
and
ret
inc
gs
nop
inc
xchg
addr16
pushf
push
test
push
push
or
sbb
fs
subb
jno
or
hlt
mov
sub
hlt
daa
push
jns
or
cmp
sub
popl
mov
or
adc
xchg
adc
inc
cmc
mov
jle
js
sub
add
dec
or
loopne
dec
or
xor
xchg
dec
sub
push
add
or
lret
fistps
push
push
xchg
daa
mov
pop
mov
sub
lods
ret
xchg
cmpb
ret
pop
int3
cmp
dec
nop
movsl
sub
pushf
fisubrs
xor
movsb
dec
adc
outsl
adc
into
movsb
lods
sbb
cli
in
lret
sub
pop
jmp
xor
imul
inc
dec
pop
adc
cli
lock
and
xor
fmuls
sub
mov
push
stc
xor
hlt
mov
xor
lret
fldcw
cli
aad
scas
stc
repnz
pop
daa
and
push
and
push
cmp
pusha
pop
sub
out
inc
cmp
or
cmp
jno
mov
sub
test
je
or
pop
outsl
pop
dec
sbb
jl
cmpl
daa
adc
call
sub
inc
add
loope
in
add
sbb
stos
add
movsb
rcl
mov
push
mov
lahf
cmpsb
mov
sub
cltd
adc
in
adc
or
jg
mov
adc
stc
or
clc
sub
daa
or
xchg
sbb
dec
push
mov
xor
adc
les
test
popa
xor
call
fidivrl
and
adc
pop
movsb
dec
orl
push
arpl
lods
xor
adc
inc
cmp
and
call
je
and
inc
ret
push
sub
ret
push
dec
enterw
outsb
pop
scas
push
test
je
cltd
push
push
or
mov
pop
inc
fs
test
xor
mov
js
mov
movl
jg
mov
push
popa
insb
aaa
call
adc
bound
jl
inc
mov
inc
mov
notb
push
or
nop
adc
xor
test
pop
sub
mov
mov
xchg
mov
dec
inc
mov
and
dec
cmp
es
xor
sbb
dec
and
es
push
leave
or
pop
xchg
mov
cmp
mov
jge
in
mov
fldenv
jnp
mov
adc
sahf
and
fdivl
insb
hlt
and
arpl
or
adc
pop
mov
push
pushf
push
xor
and
and
push
cmp
in
pop
rorl
inc
and
inc
loop
insb
adc
pop
sub
popa
ljmp
jo
jns
mov
insl
cmpsl
clc
lret
icebp
andb
and
mov
xchg
movsl
and
push
fs
and
cmp
loopne
mov
push
mov
pop
push
mov
add
and
dec
adc
test
dec
cmp
and
cmp
das
sbb
pusha
cs
push
pop
lds
enter
mov
mov
ljmp
dec
inc
mov
add
sahf
sbb
movsb
jno
cmp
mov
gs
fsts
cmp
aam
mov
mov
mov
test
push
bound
mov
and
imul
adc
adc
jle
enter
test
sbb
das
push
ja
jle
mov
push
scas
adc
xor
loop
pop
push
and
adc
negl
sub
loope
xchg
sub
jg
add
sbb
les
dec
cmp
enter
sub
mov
xchg
xchg
pop
out
shlb
sahf
fsubrl
xchg
sub
push
test
out
sub
lea
pop
and
pushf
lea
cmp
sub
call
subl
dec
adc
xor
adc
mov
and
mov
sub
mov
dec
cmp
cli
add
cmp
mov
cmp
push
sub
inc
pusha
and
popa
adc
add
jo
lea
inc
popf
push
dec
es
shrb
call
hlt
cmp
sahf
gs
andl
jl
sub
in
and
xchg
insb
fstps
xchg
push
das
je
inc
inc
pop
xor
mov
das
mov
jg
mov
or
lods
or
stc
pop
or
enter
dec
mov
lcall
sbb
and
push
mov
cmp
std
xchg
and
loope
rolb
add
add
js
sbb
movsl
adc
xor
xor
fdivl
lretw
stc
test
aad
ret
dec
movsl
mov
cmp
sub
data16
pop
xchg
pop
adc
and
add
adc
rclb
mov
jb
push
xchg
pop
xchg
out
or
repnz
push
mov
lock
cld
fists
adc
or
pop
roll
mov
inc
out
xor
ljmp
inc
adc
lods
push
loop
sbb
mov
dec
push
mov
adc
fsubrs
push
sbb
loopne
add
loop
jo
xor
imul
cltd
inc
or
cld
mov
icebp
fs
cmp
nop
outsb
stos
xor
lret
and
shlb
jae
xor
hlt
sbb
jae
mov
clc
dec
and
je
or
fcomps
cmpsl
pop
cmp
xor
push
push
jne
jl
inc
xor
cmp
pop
es
lret
nop
jl
xor
cltd
loope
movsl
dec
xchg
or
or
insl
dec
pop
and
mov
adc
push
cmp
in
pop
jmp
mov
mov
lcall
test
and
push
sbb
imul
pop
shlb
inc
dec
cld
or
roll
jge
or
mov
xchg
push
push
test
repz
adc
in
sti
pusha
movb
dec
xor
and
cwtl
mov
xor
ds
or
adc
dec
add
mov
push
cmp
es
call
mov
in
lods
iret
lahf
and
adc
or
push
xor
or
ljmp
daa
cmpsl
sbb
test
cwtl
push
loop
out
and
mov
clc
jle
je
cmpsl
inc
sub
mov
mov
or
in
jl
fidivrl
or
xchg
js
jb
movsl
sub
dec
mov
jne
sub
sub
push
mov
jmp
push
mov
push
and
jmp
and
pop
jle
xchg
ss
loopne
notb
cmp
and
je
pop
add
mov
jnp
adc
add
inc
aam
std
xchg
aam
lods
icebp
inc
movsb
cmp
subb
push
jno
out
jb
adc
dec
pop
dec
mov
aaa
xor
call
adc
xchg
js
enter
sbb
add
dec
adc
inc
jo
push
std
jo
test
pop
aad
mov
pop
ret
or
mov
aam
dec
push
jo
add
fildl
cmp
jl
or
cmp
std
test
dec
out
cmpsb
push
push
jle
adc
mov
mov
sub
adc
jmp
mov
push
xchg
push
and
mov
adc
xchg
push
push
push
push
pop
enter
cltd
es
push
js
dec
add
loope
ds
xchg
test
inc
outsl
and
popf
mov
lds
outsl
adc
out
out
and
sbb
push
add
cld
xor
testb
jmp
inc
adc
outsl
mov
inc
clc
pop
pop
clc
bound
and
divb
je
lods
sbb
loop
dec
pop
add
xchg
jp
orb
push
flds
movsb
mov
or
push
cmp
pop
mov
jmp
fildll
push
je
repnz
adc
das
sub
iret
add
inc
je
inc
mov
lds
cmpsl
inc
scas
bound
push
mov
push
and
and
cmc
gs
imul
sbb
popa
or
adc
and
sti
ds
pushf
inc
addr16
inc
pop
dec
aaa
mov
pop
xor
leave
bound
outsb
xchg
mov
cld
adc
cli
jge
sub
cmp
jns
sbb
popf
cmp
jmp
lock
ret
sbb
jecxz
jb
dec
fwait
and
and
xchg
inc
xchg
loopne
mov
jnp
and
or
fsubr
cmpsl
out
xchg
test
imul
inc
sbb
das
push
xor
xchg
mov
and
cltd
jae
or
repz
iret
cmp
ds
xor
mov
cmp
test
cmpsb
adc
and
je
pop
sbb
mov
jecxz
mov
pop
rorb
pop
ret
stc
orl
bound
and
mov
enter
lret
nop
sbb
test
scas
xor
test
sbb
sub
insl
push
jmp
or
mov
cmc
pop
pop
jae
or
das
jb
sbb
outsl
and
dec
mov
and
imulb
and
loop
adc
cmpsl
push
xorb
adc
adc
das
push
jns
mov
sub
rorb
icebp
ret
int
subb
enter
jne
sbb
xchg
push
ret
adc
inc
pop
xor
jle
punpckhbw
mov
jl
mov
adc
and
or
mov
pop
repnz
sbb
xorb
je
push
cmc
inc
pop
cmp
inc
sub
leave
or
pop
clc
lcall
or
xchg
add
insb
or
inc
cmp
fs
loopne
jae
loop
test
sbb
push
int
mov
test
imul
push
into
jo
stos
cmp
mov
inc
adc
es
fsubs
pop
inc
fsub
sbb
in
mov
lock
pop
ret
xlat
mov
sub
sub
cmp
clc
and
mov
nop
inc
mov
cmp
vandpd
adc
in
or
adc
inc
sub
cmc
in
ret
xor
test
jbe
scas
push
nop
dec
test
in
and
movsb
mov
dec
sub
aas
jbe
repnz
call
leave
push
jp
mov
and
xchg
jns
aas
adc
adc
push
push
ss
loopne
cmp
push
pop
nop
js
stc
in
jb
jge
gs
stos
inc
xor
xchg
dec
pop
enter
leave
addr16
ret
and
rcll
and
imul
repnz
aas
xchg
inc
loope
rcrb
inc
cmp
mov
cwtl
ljmp
jecxz
fdivs
sub
rorb
clc
fcmovb
adc
outsl
call
roll
enter
inc
adc
les
cmp
jmp
sbb
out
and
mov
test
cmc
and
out
adc
cmc
loop
adc
pusha
daa
test
es
cmp
fwait
rclb
repz
mov
andl
xor
pop
xchg
ret
inc
lea
mov
xor
xchg
sbb
pushf
in
les
inc
cmc
adc
and
push
adc
inc
divb
adc
in
test
aaa
mov
ljmp
out
in
mov
push
inc
pop
enter
jmp
lea
xor
fwait
stos
sub
and
inc
dec
lods
lcall
mov
push
movsb
or
xchg
lods
and
inc
xor
outsb
test
mov
sbb
fs
adc
lret
mov
inc
repz
xor
mov
icebp
push
daa
push
repnz
addr16
mov
pop
fadds
loopne
jb
test
bound
push
leave
loope
jns
xchg
sub
push
push
jmp
cmp
mov
jno
les
enter
sar
daa
dec
das
mov
mov
cmc
aas
cwtl
stos
or
cmp
loope
addr16
and
imul
cmp
dec
hlt
inc
and
loop
cmc
xor
aam
push
lds
lret
fadd
dec
inc
xor
adc
inc
mov
sub
inc
xchg
dec
scas
or
pop
mov
nop
in
xor
sub
lods
out
and
mov
push
add
js
mov
popf
add
adc
aad
inc
aam
inc
mov
dec
sbb
inc
lret
xor
adc
movaps
sub
jmp
push
loope
cmp
push
xor
mov
ds
adc
out
cmp
inc
dec
dec
sahf
add
jnp
mov
data16
sbbb
or
pop
mov
xor
cmp
adc
push
cld
scas
inc
dec
adc
outsl
rcrb
je
mov
xor
push
inc
call
push
inc
sbb
push
or
hlt
sbb
cmp
and
push
call
xchg
xchg
sbb
cmpsl
popa
dec
enter
nop
push
push
sub
fmuls
pop
nop
sbb
js
push
jl
inc
add
push
loope
fisttps
or
jmp
push
sbb
jle
adc
mov
sbb
inc
xor
jecxz
mov
nop
test
popf
adc
pop
inc
mov
rol
sub
fimuls
sbb
loopne
dec
sbb
fcmovnb
xchg
dec
insb
aam
adc
das
test
inc
cmp
loop
clc
adc
sbb
addr16
repnz
gs
sub
jmp
ljmp
les
push
fs
lods
jo
pushf
std
sub
add
stos
loope
jl
and
sbb
stc
add
add
lock
test
sbb
cmp
push
or
daa
or
lcall
pop
repnz
inc
mov
and
loopne
sub
mov
mov
push
enter
lods
das
movsb
sbb
inc
lods
testl
rcll
les
xlat
bound
push
pushf
hlt
sbb
loop
xor
xor
mov
xchg
and
sbb
lods
inc
jo
push
dec
pop
jp
push
mov
adc
pop
in
xchg
dec
hlt
imul
and
dec
outsl
sbb
sub
nop
sahf
es
mov
pushf
aas
ret
adc
jae
jl
aam
push
mov
lods
movsl
test
xchg
ds
mov
imul
movzbl
pop
sbb
jmp
pop
in
sub
xor
pop
cmpsb
mov
mov
and
nop
repz
lea
add
enter
and
jle
aas
call
and
les
inc
or
sub
outsl
push
jg
sub
inc
cmp
mov
jae
subl
mov
lret
push
adc
sub
das
mov
movsb
sbb
adc
out
orb
mov
inc
and
xorl
push
or
fcoml
push
dec
and
add
mov
pop
call
and
cmp
push
jae
push
xchg
mov
loopne
sbb
into
add
int3
inc
xchg
jge
cmp
shl
sub
clc
or
icebp
push
das
lea
dec
jns
std
loop
nop
mov
fisttpl
add
sbb
inc
or
adc
or
lret
xor
inc
inc
fimull
jne
mov
xor
or
out
in
js
andb
and
jo
in
dec
sub
add
mov
add
movsbl
cmp
jge
add
js
xchg
out
mov
jae
sub
inc
xor
mov
lahf
and
out
mov
mov
fisubl
push
loopne
jb
sbb
xor
jmp
mov
push
cmpsl
push
repnz
and
pop
lret
jbe
inc
push
and
cmp
push
fs
out
push
lret
lcall
hlt
loop
repnz
ljmp
repnz
push
loop
leave
in
rol
inc
lea
cmp
xor
adc
cs
jae
cli
daa
in
pop
test
mov
xchg
sbb
and
cmp
inc
cld
jno
fwait
mov
add
and
out
fldenv
xor
and
xor
adc
das
test
xchg
mov
jp
pop
lret
jl
inc
and
adc
pop
in
push
test
mov
jns
hlt
fisttpll
mov
and
aas
or
inc
pop
lods
and
insb
mov
mov
dec
add
sbb
jnp
dec
stos
jmp
pop
inc
jle
sti
js
je
jo
mov
add
push
sbb
in
push
sbb
lea
addb
fnstenv
sub
xchg
iret
ud2
scas
jbe
push
adc
shl
sarl
in
and
mov
ljmp
and
in
fs
adc
xchg
push
sub
adc
adc
ds
sub
sbb
je
daa
and
dec
mov
dec
test
ds
xchg
lds
inc
xchg
cmp
mov
loop
movsl
scas
inc
dec
and
inc
and
andl
push
sub
pop
dec
je
sub
push
lds
mov
mov
and
loope
mov
cmp
repnz
loope
test
imul
and
jbe
jg
enter
call
xchg
mov
js
add
mov
icebp
inc
or
push
inc
and
xchg
loopne
pushf
aam
sbb
add
and
test
jp
push
xorb
mov
cwtl
adc
or
pop
lgs
js
in
mov
ret
inc
adc
arpl
adc
inc
xor
lcall
mov
bnd
dec
dec
jne
mov
sbb
push
mov
sbb
in
push
and
dec
rcr
sbb
lcall
push
lret
inc
push
outsl
adc
imul
aaa
add
pop
ret
shll
scas
inc
out
scas
cmp
adc
mov
push
pop
test
test
addr16
mov
mov
rol
rcrb
test
in
cmp
inc
shlb
je
sarb
outsl
xor
fmull
sarl
sbb
lcall
push
sub
jbe
fxch
ss
or
push
dec
xchg
push
and
mov
adc
ss
mov
loop
push
adc
mov
xchg
nop
sbb
inc
test
test
push
rorl
popa
cld
lock
or
call
jne
adc
sub
jl
adc
in
js
inc
mov
fs
int3
iret
icebp
movsb
or
test
inc
stc
gs
jbe
pop
fprem
xchg
or
orb
mov
pop
dec
xchg
sbb
shlb
cmp
dec
lods
or
lock
aam
and
dec
mov
xor
xor
mov
xchg
or
jle
push
dec
insl
adc
out
dec
add
rcrl
test
jo
mov
sub
daa
adc
rorl
jae
lds
mov
add
loop
mov
hlt
lret
imul
mov
adc
aas
push
adc
enter
or
rorb
dec
mov
mov
and
push
jl
mov
in
scas
push
mov
cmpsl
sbb
popl
mov
int3
and
test
lods
push
clc
stos
rorl
outsb
incb
inc
call
lahf
mov
pushf
inc
loope
mov
inc
xor
xchg
mov
jle
movsl
sbb
cmpsl
ljmp
and
and
mov
pop
push
mov
adc
pushf
mov
incl
dec
and
mov
and
mov
adc
jno
push
xchg
push
iret
sbb
aaa
lret
lahf
adc
mov
pop
mov
and
mov
xor
aaa
clc
cmp
or
gs
push
push
jle
lods
stos
movsl
out
sub
pop
icebp
adc
or
pop
adc
test
lret
mov
mov
je
or
testl
scas
xor
dec
pop
call
imul
mov
ja
xchg
adc
mov
dec
fs
sbb
adc
push
and
sub
enter
shlb
sbb
inc
lock
sbb
inc
popa
fisubrl
or
mov
test
mov
push
icebp
sub
sbb
imul
mov
sub
add
mov
imul
orb
ds
outsb
test
mov
test
mov
adc
insb
sub
cmc
mov
mov
and
repnz
leave
rcrl
adc
shr
adc
aaa
loop
cmpsb
jno
movsl
arpl
repnz
stos
popa
vunpcklps
lret
inc
mov
pop
cmpsl
adc
loope
and
adc
pushf
mov
mov
mov
mov
mov
mov
js
xchg
pop
adc
loope
bound
mov
jmp
rcrl
push
inc
adc
and
enter
test
push
add
inc
clc
inc
lds
in
les
subb
dec
mov
mov
inc
sbb
xchg
jmp
adc
xor
mov
mov
adc
pop
lock
xchg
test
insb
or
xchg
shlb
xchg
push
cmc
cwtl
jne
xchg
les
enter
jno
jg
jmp
test
jp
xchg
xchg
fisubs
aas
ret
and
mov
lods
xchg
pop
sbb
adc
icebp
mov
and
aam
lock
fsubrs
mov
xchg
in
push
adc
cltd
nop
shl
mov
xor
test
xchg
mov
or
lock
or
or
mov
xor
jl
scas
adc
sub
adc
test
sub
xchg
adc
dec
lods
insl
or
mov
push
pminsw
arpl
cmc
ljmp
adc
pushf
les
push
add
jno
loop
enter
mov
outsb
rcll
pop
andb
and
jae
insb
push
and
popf
pop
insl
scas
cmpb
sbb
scas
mov
sbb
test
sub
xchg
mov
add
sub
test
push
loopne
inc
daa
ret
and
and
or
xor
inc
out
test
and
pop
cmp
inc
and
cmp
shlb
movsl
insb
mov
icebp
push
pop
adc
stos
fadds
push
test
fadds
or
xlat
jmp
adc
ss
movsl
xor
test
dec
jle
pushf
in
cs
sbb
xchg
nop
fisubs
aas
ret
pop
mov
out
loop
adc
js
decl
cmpsl
inc
adc
inc
mov
sbb
xor
mov
adc
inc
sbb
inc
aaa
scas
and
xor
xor
pushf
cld
cmp
sti
adc
sahf
mov
inc
in
les
cmp
cwtl
in
test
inc
in
mull
in
xor
lcall
mov
sub
mov
mov
mov
jae
loope
in
and
push
ja
hlt
call
xor
insb
adc
aaa
mov
test
push
lret
jmp
mov
jns
mov
fs
push
stc
test
pop
mov
mov
xor
aad
adc
imul
mov
cld
jmp
adc
stc
loope
jmp
das
adc
lods
hlt
xchg
inc
and
xchg
push
cmp
mov
and
test
inc
ja
lods
mov
aam
lahf
adc
call
enter
ret
sbb
out
inc
adc
js
dec
inc
adc
sbb
xchg
call
enter
sti
scas
inc
inc
mov
adc
stos
std
sub
pop
push
sub
lahf
inc
loope
push
add
inc
shr
pop
mov
call
les
nop
and
adc
lahf
loope
push
adc
leave
mov
adc
les
int
push
das
mov
jmp
ret
mov
push
in
out
icebp
inc
call
and
fdivrs
add
mov
into
xchg
sbb
xor
or
les
or
add
xchg
test
call
xchg
xchg
cmpb
sbb
imul
adc
out
and
dec
dec
jl
rcl
adc
cli
push
insl
xchg
jmp
es
xor
cli
aam
inc
das
push
xor
or
sbb
inc
push
cmp
ret
inc
and
dec
popf
jb
push
pop
jne
pop
mov
push
cld
xchg
inc
lcall
out
das
dec
cwtl
cmp
pushf
stos
fcoms
xlat
or
or
sbb
mov
nop
sahf
ficomps
loopne
mov
into
in
scas
adc
out
cmp
js
cmovbe
ret
xchg
mov
rcll
aam
nop
xor
sub
fcoms
push
test
repz
mov
loope
adc
sub
pop
xchg
leave
rcr
cli
push
and
daa
das
rcrb
inc
xchg
sub
mov
jle
push
sub
call
xor
daa
ja
sbb
xchg
adc
insb
sub
inc
test
inc
xor
jg
dec
in
das
cmp
rorb
mov
aaa
daa
push
cmp
into
sar
movsl
adc
js
mov
or
addb
cmpsb
icebp
push
adc
or
inc
or
mov
mov
movsb
popf
inc
movsl
inc
mov
ss
out
adc
test
call
push
hlt
dec
outsl
loop
sbb
and
fwait
jb
scas
sahf
mov
out
dec
xor
or
fsubl
lds
add
in
out
or
pop
dec
aam
xor
mov
outsb
mov
lea
dec
push
mov
cmpsl
mov
or
pop
stc
push
icebp
scas
push
or
sbb
mov
nop
and
in
push
in
in
adc
notl
adc
mov
enter
mov
lods
adc
inc
jmp
rcl
adc
insb
mov
call
sbb
push
dec
aam
xchg
add
enter
pop
mov
push
mov
sub
scas
jns
test
call
daa
pop
sub
rolb
stos
jg
and
les
or
push
cmp
inc
mov
jne
add
dec
dec
add
stos
mov
mov
icebp
in
test
jae
push
adc
andb
or
fdivr
cs
push
enter
lods
daa
inc
scas
scas
rol
mov
xchg
push
and
xor
sti
das
add
add
cmpsb
sbb
push
dec
adc
sti
test
mov
cwtl
shl
cmpsb
sbb
push
pop
jle
mov
sub
sbb
test
and
xchg
or
subb
addl
fprem
cmp
fsubs
pop
outsb
or
in
imul
test
enter
mull
sbb
repnz
lret
imull
adc
add
popa
cmp
add
and
sbb
lret
mov
xchg
pop
sub
sti
sub
xchg
cmp
jbe
notb
push
push
lret
add
hlt
hlt
mov
add
push
sbb
jmp
faddl
and
rorl
push
cmp
shll
xchg
leave
pop
pop
mov
lahf
pop
fisubs
sub
and
sbb
mov
xchg
fldcw
or
sti
push
test
mov
pop
mov
push
sbbl
adc
sbb
sahf
and
add
call
ljmp
insl
and
jnp
ret
and
sbb
mov
xlat
mov
jo
xchg
or
test
push
test
ror
adc
adc
adc
lock
xchg
or
mov
nop
rolb
fdivl
pop
inc
test
les
enter
push
imul
imul
jne
push
add
cmp
adc
inc
push
aas
test
pushf
idivl
adc
and
jmp
mov
mov
sbb
pusha
xchg
enter
push
xchg
popa
cltd
loope
xchg
adc
push
cli
adc
lds
dec
adc
pop
pop
xor
mov
mov
pop
clc
xchg
movsl
test
pushf
and
jp
or
push
js
adc
mov
sub
xchg
shr
adc
and
nop
sub
dec
loop
loopne
push
and
jl
xor
jbe
mov
call
mov
loope
push
jae
sti
jle
wrmsr
jno
xor
adc
add
cld
add
sbb
jp
and
xor
or
dec
mov
mov
js
mov
wrmsr
cmp
push
call
inc
fs
push
cltd
inc
jle
add
out
fst
test
clc
inc
lods
and
in
mov
and
outsl
push
fcos
or
dec
and
outsb
les
setns
add
cld
test
jne
pushf
jne
adc
inc
shrl
xchg
and
add
adc
add
cmp
jb
xor
jo
fistpll
jmp
adc
sarb
mov
outsb
cmpsl
and
and
or
add
and
add
add
dec
dec
imul
and
and
sbb
sub
adc
xor
add
out
sbb
or
dec
out
repnz
mov
or
add
adc
test
leave
call
punpckhdq
pop
lea
cmp
mov
jb
enter
call
xchg
and
xor
mov
or
cmpsb
aad
or
test
or
and
cmc
sbb
cmpl
cmp
dec
mov
nop
pop
push
call
insb
sbb
adc
enter
jmp
push
test
cs
pop
call
adc
scas
std
lods
xchg
add
stc
cmc
dec
bound
movsb
push
hlt
and
nop
je
jo
scas
bound
pusha
push
inc
mov
sahf
cmp
js
je
cmp
sub
xchg
pusha
pop
sub
addb
adc
mov
and
sbb
mov
or
and
xchg
adc
test
add
xchg
mov
test
cmp
les
mov
popf
or
xor
dec
xor
and
cwtl
les
repnz
mov
mov
sbb
push
xchg
dec
adcb
sbb
or
mov
cmpsl
and
pop
and
imul
test
repz
mov
and
jecxz,pt
add
clc
dec
inc
or
add
cmpsl
repz
aaa
leave
ljmp
and
fwait
mov
int3
stos
mov
mov
daa
xchg
pushf
push
adc
inc
pop
push
xchg
sbbl
xor
insb
or
push
lds
mov
pop
movsb
std
mov
test
mov
sub
mov
sub
notl
std
adc
cld
in
xchg
in
outsb
xor
xor
and
jle
mov
std
mov
ljmp
movsb
mov
pop
and
mov
outsb
mov
ret
jecxz,pn
lods
cmp
jge
jmp
xchg
jne
add
es
and
add
mov
jmp
push
iret
xor
test
rorl
cwtl
inc
loopne
filds
lcall
movsb
or
add
test
jge
inc
add
jne
jmp
in
pop
jmp
lock
mov
out
push
push
mov
and
adc
in
push
jecxz
dec
sub
dec
in
jl
push
ja
cmp
xor
cmpsb
mov
lahf
add
movsl
or
cld
mov
frstor
cmp
mov
xor
jmp
mov
sbb
cmp
dec
cmp
push
and
jp
repnz
push
cmp
and
inc
add
and
push
mov
in
std
pop
xlat
sti
xor
and
push
dec
sub
jae
cmc
and
aas
divb
sbb
and
inc
cmp
add
enter
adc
adc
adc
js
cs
push
sub
stos
bound
syscall
cmp
sbb
xchg
or
add
add
nop
or
mov
mov
push
lds
test
hlt
cld
daa
outsb
rorb
adc
clc
and
mov
xchg
fdivp
xchg
xchg
sbb
sbb
xor
pop
add
ljmp
pusha
xchg
push
adc
mov
mov
xchg
lea
or
mov
imul
lea
mov
pop
and
mov
adc
add
cmp
jbe
inc
nop
pop
or
les
ror
popa
mov
cli
push
imul
shl
pusha
cld
notb
ds
xor
lods
mov
mov
pop
or
push
cmp
cld
adc
testl
cld
mov
mov
ja
lahf
xor
pop
inc
or
jg
dec
nop
decb
xor
inc
adc
clc
and
sbb
mov
aas
call
dec
mov
adc
push
fcompl
stos
jmp
xor
clc
and
pop
fs
push
mov
cltd
pop
xchg
mov
mov
push
mov
in
pop
lcall
push
sub
push
stos
scas
in
jmp
fs
aaa
stos
adc
fsubr
repnz
push
add
popf
cltd
fdivs
negb
pop
sbb
mov
stos
dec
push
cmp
push
sub
lea
ja
jl
cmpsl
shll
lcall
and
in
stos
push
enter
sub
addr16
mov
movsb
inc
jmp
or
or
push
cmpsb
xchg
and
add
mov
shlb
pop
sub
xor
jp
mov
xor
out
add
in
in
push
push
mov
mov
rolb
scas
or
mov
inc
mov
and
popf
push
adc
push
inc
inc
enter
push
push
call
adc
sub
adc
idivl
insb
mov
les
adc
add
test
cmp
lock
cs
sbb
sub
aaa
out
inc
pop
xchg
ja
cwtl
sub
push
jns
or
test
push
sbb
movsb
push
ds
adc
sub
fadds
jbe
cwtl
pop
push
stc
xchg
insb
mov
pop
inc
mov
sbb
sbb
test
push
add
or
cmpsb
aaa
movsl
dec
popf
and
fadds
push
adc
xchg
adc
ljmp
mov
xorb
or
scas
and
out
mov
adc
movsl
cbtw
sub
dec
dec
loopne
cmpsb
xor
inc
das
sbb
add
jns
sbb
int3
stc
es
sub
addr16
test
mull
jmp
pop
call
jne
jns
cwtl
sub
stc
daa
xor
push
int3
cmc
or
mov
daa
mov
jne
jb
jnp
test
and
sub
cmp
jg
dec
xchg
adc
enter
ret
out
sahf
lcall
and
imul
jmp
pop
or
jne
leave
mov
daa
xor
pushf
cmp
mov
push
inc
lock
data16
add
add
pop
push
sub
mov
adc
push
or
movsb
cmp
inc
out
pop
or
int
clc
stc
mov
and
adc
call
insl
inc
push
mov
cli
mov
outsl
mov
rcrb
div
mov
and
mov
xchg
inc
dec
adc
cmp
jecxz
sub
cltd
lcall
leave
xor
inc
clc
xchg
xchg
and
or
mov
in
mov
pop
adc
adc
sbbl
adc
call
sub
mov
adc
sub
push
xchg
jbe
ret
fbstp
dec
inc
push
xchg
xchg
in
and
adc
inc
xchg
out
and
dec
fcoml
inc
pop
mov
fadds
pop
pop
orb
mov
sub
adc
enter
fldcw
insb
xchg
nop
mov
adc
mov
insl
dec
int3
fadds
mov
sbb
pusha
adc
mov
mov
ror
mov
cmpl
adc
insl
test
add
or
lahf
cmp
sub
jbe
add
sbb
adc
adcb
push
add
in
int
js
insl
test
push
dec
or
xor
or
mov
nop
xor
adc
sbb
sbb
test
movsb
repnz
push
adc
mov
dec
pop
ss
push
cmp
mov
cwtl
and
lea
pop
aas
mov
sbb
repz
inc
outsb
adc
iret
cwtl
xor
clc
xor
cmp
and
fs
insb
adc
mov
jae
and
mov
or
fsubl
xchg
in
mov
adc
sbb
les
push
mov
flds
loope
cmp
or
les
push
test
jge
sub
push
in
push
fiadds
adc
adc
jns
inc
aas
adc
xor
pushf
adc
and
movlps
or
inc
mov
or
adc
mov
cmp
aam
insb
adc
sbb
jp
pushf
mov
mov
test
or
mov
lods
sub
ljmp
gs
in
dec
and
cmp
dec
fmull
jno
or
sub
push
lcall
movsb
int
sub
enter
insb
lock
enter
insb
call
nop
cwtl
mov
nop
ss
test
pushf
fs
mov
lock
repz
inc
insb
cmp
adc
insl
enter
insl
mov
xor
jl
lods
fs
jns
add
test
adc
dec
outsb
dec
rcr
aam
mov
sbb
mov
mov
insl
dec
cld
flds
inc
push
mov
sbb
outsb
and
fcoms
xor
adc
outsb
and
in
and
insb
test
inc
push
enter
insb
hlt
inc
insb
lea
hlt
insl
and
insb
or
lea
mov
adc
cwtl
mov
adc
test
cmp
cmc
sbb
push
adc
mov
inc
aam
sub
fs
mov
adc
out
sub
add
add
push
xchg
aam
nop
or
pop
insl
xor
test
inc
xor
or
mov
adc
enter
enter
xchg
adc
outsb
enter
insl
sbb
xchg
and
inc
je
adc
and
or
insb
sub
adc
subb
push
add
mov
test
push
arpl
outsb
loop
insl
cmp
mov
mov
adc
loop
push
jno
push
add
sbb
jecxz
cld
insb
xchg
xor
repnz
push
sbb
je
and
and
inc
jl
mov
pushf
ss
insb
inc
mov
rolb
test
fildll
push
sahf
mov
ret
xor
jl
mov
cmp
cmp
adc
insl
enter
les
ljmp
inc
push
mov
test
push
or
sbb
andb
mov
push
and
out
mov
push
sub
mov
and
js
outsb
mov
and
sub
les
fsubrl
test
xchg
adc
inc
mov
clc
cmp
adc
inc
adc
inc
mov
enter
mov
insl
adc
xor
nop
les
movsb
fdiv
insb
mov
mov
adc
sbb
sbb
inc
fadd
cld
insl
dec
call
inc
les
jg
xchg
and
xor
out
and
insb
sahf
pushf
arpl
insl
in
sub
inc
mov
push
xchg
aam
lret
jl
or
stos
xchg
loopne
mov
jns
cmpsl
mov
fildl
xchg
mov
pop
cmp
call
fs
sbb
es
clc
in
sub
mov
lods
mov
pop
popl
scas
pop
ror
dec
mov
adc
or
rcr
xor
and
inc
or
enter
dec
movsl
mov
xchg
adc
in
inc
adc
insl
sub
adc
sbb
test
mov
mov
fadds
test
adc
jne
mov
and
adc
sub
and
insb
jo
es
sbb
cmp
push
les
fs
inc
cmp
sub
sub
outsb
adc
iret
cmp
iret
les
enter
dec
loope
enter
jnp
xchg
push
lods
pop
xchg
ljmp
inc
adc
add
stos
adc
lods
lea
std
adc
scas
sub
inc
adc
sbb
je
mov
or
mov
jg
adc
push
stos
test
add
add
aas
xchg
push
xor
fiadds
push
sbb
xchg
pop
mov
or
insb
cmp
add
lea
xchg
in
dec
iret
mov
ss
mov
hlt
jp
ret
mov
cmpl
push
in
js
test
and
test
jle
stos
pop
and
and
adc
or
jge
fwait
xchg
add
dec
mov
adc
or
and
pop
dec
xchg
xchg
dec
adc
sub
scas
sub
cmp
ret
adc
pop
sbb
pop
and
pop
push
cli
sbb
pop
sbb
mov
daa
mov
sub
es
and
add
popf
adc
sub
cmpsl
and
dec
arpl
push
jg
into
cmpsb
jae
decb
mov
push
mov
call
xor
push
adc
inc
xor
inc
xchg
ss
dec
or
popa
jl
or
jg
or
dec
pusha
mov
clc
pop
adc
or
push
adc
and
xchg
adc
mov
daa
lock
les
pop
xchg
mov
or
xor
pop
adc
push
enter
jmp
sbb
xchg
sbb
sub
add
cmp
test
out
or
rorb
repz
hlt
inc
je
cmp
lock
adc
test
dec
js
rcrl
xchg
sub
jle
dec
adc
dec
call
in
push
mov
mov
and
jl
and
jmp
push
or
mov
mov
lods
imul
dec
les
sbb
adc
movsl
fnstcw
jg
popa
or
jne
outsb
sub
loope
mov
dec
sub
jecxz
cmp
or
shrl
fistpl
and
jl
imul
stos
fcoml
push
sahf
xchg
aam
mov
outsb
xor
sbb
ja
adc
pop
add
lods
cmp
popf
test
repnz
inc
enter
or
mov
push
push
scas
sub
dec
jecxz
inc
sti
push
mov
xorl
mov
mov
lods
or
aam
dec
imul
mov
shlb
mov
mov
sti
xlat
add
push
jl
outsb
mov
cmp
sub
mov
mov
mov
and
test
scas
popf
mov
cld
lock
add
push
addb
stos
gs
insl
lods
cmc
repz
and
push
or
data16
cmp
in
daa
mov
sbb
adc
pop
mov
inc
inc
push
in
mov
jge
fstl
out
adc
cmp
test
cld
ljmp
notl
lea
push
cmp
jl
lds
loop
ja
mov
push
lods
push
dec
gs
dec
mov
call
mov
add
and
outsl
dec
xor
test
inc
or
push
call
mov
inc
lock
lds
jle
mov
or
mov
pushf
fdivl
cld
jp
icebp
mov
jbe
ds
mov
add
shll
jae
mov
mov
js
sbb
push
xor
je
fwait
lret
xchg
and
jo
xchg
sbb
or
fsubrp
lret
sub
cld
stc
or
inc
jecxz
adc
cmp
inc
outsb
das
adc
push
std
out
jbe
or
sti
or
push
popf
into
push
clc
std
jmp
pop
imul
xor
rol
mov
cmpsl
loopne
hlt
mov
lcall
xor
xor
push
ja
mov
inc
insl
or
jmp
fidivrl
daa
sbb
push
adc
push
inc
les
and
inc
or
imul
sub
insb
das
mov
pop
repz
push
int
jg
jmp
orb
mov
imul
pop
ja
cmc
or
jmp
scas
cmc
sbb
add
or
jle
adc
mov
jmp
lahf
jle
dec
inc
fwait
es
hlt
or
ds
test
lea
aas
or
lcall
negl
add
ja
addb
inc
dec
or
add
adc
adc
add
push
pop
xchg
aad
push
or
add
stos
sub
sub
add
sbb
frstor
mov
and
pop
lret
adc
adc
or
mov
and
sub
adc
scas
xorl
sbb
les
faddl
dec
imul
sub
dec
les
and
xor
or
or
or
arpl
xchg
and
bound
adc
enter
aam
mov
or
arpl
test
pop
xchg
filds
leave
mov
in
sub
mov
adc
pop
mov
je
nop
sbb
jmp
test
jb
add
or
repnz
bound
fbstp
cmp
mov
sub
adc
push
xchg
mov
ret
fimull
outsb
or
xchg
flds
or
xor
or
mov
push
add
push
or
test
lock
adc
push
loope
mov
hlt
jmp
lret
mov
sub
insb
jge
adc
cmp
test
push
andl
repz
cmp
dec
or
pusha
lcall
adc
push
mov
movsb
or
inc
dec
cmp
mov
popw
xchg
jle
pop
icebp
push
mov
xchg
cltd
sub
popf
adc
std
push
repz
inc
aam
xchg
sub
push
sbb
enter
je
cmp
mov
icebp
mov
adc
out
addr16
fisubrs
adcb
mov
mov
mov
js
adc
lds
dec
cmp
mov
pop
mov
adc
std
loope
fcomip
in
dec
jmp
inc
out
pop
cli
cmp
and
notb
dec
fsubrl
lods
test
scas
addr16
popf
or
inc
xchg
sub
fsubrs
and
call
inc
adc
ret
sub
scas
and
push
jns
push
bndstx
rcl
pop
lcall
jae
mov
bound
adc
rol
pop
sub
js
lock
and
or
xchg
rclb
pop
jno
mov
jno
jo
and
enter
push
add
mov
cwtl
jne
mov
pop
and
aas
cld
mov
pop
pop
repz
mov
xchg
insb
sbb
mov
cmp
jo
test
sub
adc
popa
pop
roll
loopne
xor
cltd
adc
call
stos
hlt
lock
dec
imul
push
mov
stc
and
mov
cmp
cmp
inc
dec
clc
dec
jecxz
daa
call
lea
sbb
jne
jne
lods
xchg
lcall
jns
push
fucomp
sarl
ret
or
cld
adc
lret
pop
cmpsl
aad
mov
mov
fs
sub
mov
sarb
xchg
mov
sbb
and
fmul
push
inc
sub
lock
push
mov
inc
fiaddl
insl
dec
mov
imul
mov
inc
std
pop
lcall
jno
lods
ja
jne
sbb
cwtl
push
or
xor
mov
push
shl
or
test
xor
or
movsl
adc
arpl
lock
fldt
vmovaps
stos
and
insb
adc
cmp
xlat
jne
call
adc
jo
mov
sbb
cmp
mulb
push
or
jmp
les
push
xor
or
push
mov
inc
sbb
mov
cmp
mov
or
jmp
sbb
sbb
flds
push
pop
add
adc
mov
sahf
add
cltd
pop
sarl
mov
push
call
mov
ds
jge
icebp
mov
jp
push
loopne
rcr
lret
adc
or
fcoml
pop
enter
mov
test
gs
or
xchg
test
lahf
imul
out
rcrb
jb
add
xor
or
clc
push
aad
sub
outsb
sbb
add
dec
movsb
or
adc
rolb
xor
jl
mov
mov
les
jns
pop
das
test
push
and
adc
adc
sub
inc
inc
popa
and
sbb
fstps
or
push
sbb
enter
push
ret
sub
and
pusha
push
ljmp
cmp
lea
int
cli
out
ds
mov
movsb
or
mov
or
sbb
mov
mov
xchg
enter
adc
inc
pop
dec
insb
stos
lea
push
imul
mov
les
cmp
stc
sbb
xor
or
pop
rcl
xchg
push
fs
cmp
and
out
jno
push
test
sarb
lea
and
push
and
pop
push
add
sbb
push
xor
sub
mov
pop
lcall
pop
sbb
data16
push
inc
xor
cmp
push
and
pop
push
aad
add
push
fs
jae
xchg
test
cmp
lea
jmp
xchg
sbb
adc
test
and
and
shrb
mov
int3
and
into
and
jnp
or
xchg
dec
fs
fsub
icebp
xor
or
jae
or
inc
lock
push
in
in
mov
inc
fsubs
dec
xchg
xchg
idivb
mov
mov
jge
sahf
jl
inc
pop
or
jge
xor
das
push
xor
pop
ret
push
sub
lods
mov
pop
popa
dec
xor
jmp
sub
not
sub
aam
mov
push
leave
mov
loopne
pop
call
push
sbb
cltd
adc
xchg
movsb
shll
in
pop
or
jge
or
mov
jne
mov
inc
movsl
pusha
mov
pop
push
jmp
pusha
nop
inc
mov
jns
inc
pop
mov
inc
or
adc
inc
je
bound
add
jmp
or
add
add
bound
add
inc
jl
pop
and
inc
lds
fs
bound
cmp
test
inc
dec
or
gs
or
mov
inc
jl
mov
inc
adc
leave
adc
or
mov
push
or
or
nop
aas
push
cmp
xchg
mov
pop
pop
test
push
jno
xchg
mov
sub
mov
and
mov
and
xor
sbb
push
les
and
or
cmp
and
enter
and
push
inc
mov
adc
pop
or
test
enter
and
cmpl
enter
jo
xchg
arpl
movsb
movsb
adc
inc
sub
xchg
les
sub
jle
aaa
stc
movsb
or
imul
nop
fdivs
cld
or
inc
lcall
and
pop
sbb
dec
stc
out
in
jns
xchg
sub
adc
mov
jno
mov
add
dec
and
sbb
andb
mov
cmp
dec
xchg
pop
shl
repz
adc
dec
sub
sub
adc
cmpl
sbb
jno
test
push
test
jmp
cmp
sub
jae
daa
dec
sub
cs
push
dec
mov
sbb
cmp
jl
dec
xchg
and
dec
fs
jp
mov
mov
and
push
sbb
insb
mov
push
push
test
inc
lcall
imul
loope
dec
and
adc
lock
fmuls
or
push
pop
push
pusha
push
aam
jle
ret
or
sub
push
push
pusha
push
test
add
push
mov
xor
and
adc
outsb
adc
aad
lods
popa
and
pop
std
imul
push
pop
xor
mov
pop
jl
fsub
adc
inc
hlt
or
mov
adcl
mov
outsb
xor
jl
xor
sub
je
or
pushf
mov
je
sbb
roll
jnp
mov
pop
pop
nop
xor
ss
push
mov
call
mov
jle
sbb
sbb
shlb
xchg
test
cmp
and
push
daa
pop
sbb
test
int3
cmp
xchg
xor
adc
mov
sbb
push
and
xor
sub
pop
inc
jl
ja
or
mov
lea
cmp
jae
sbb
or
add
scas
or
add
sub
jmp
dec
or
in
push
ljmp
test
adc
call
fwait
cs
adc
dec
jmp
mov
notb
cmc
or
or
inc
mov
or
push
test
rorb
or
xor
fmull
movzwl
cs
pop
aas
mov
jg
scas
pop
push
ja
push
jmp
push
testb
es
rol
adc
sbb
pop
add
adc
and
mov
data16
xchg
sbb
dec
inc
lock
and
jo
dec
mov
insl
push
or
test
in
js
mov
jmp
mov
movsb
mov
cmc
clc
adc
mov
cwtl
add
push
movsb
lock
push
bound
dec
dec
xchg
add
mov
add
jmp
push
adc
mov
push
test
ret
adc
mov
xchg
add
add
push
pop
xor
pop
incl
rep
sub
lods
cli
xor
mov
movhps
roll
faddl
push
in
mov
inc
insb
and
mov
and
mov
cmovno
cmp
pushf
rcl
mov
fists
sub
test
daa
scas
scas
push
dec
mov
dec
lods
add
dec
pop
dec
sbb
jle
inc
add
adc
push
ds
and
mov
fcoms
and
enter
pop
lea
scas
xor
mov
xor
push
cld
test
mov
and
out
xor
jo
and
loop
push
inc
pop
pop
popa
sar
push
adc
rorl
pop
test
bound
pop
shl
pop
ds
pop
sub
movb
out
or
mov
jmp
xor
push
push
std
xor
outsb
and
out
jb
and
js
loope
sbb
cmpsb
loope
fs
sbb
out
shll
pop
insb
mov
push
mov
enter
call
in
dec
or
pop
std
mov
pop
adc
xchg
mov
xchg
jb
or
dec
inc
cmp
sarb
dec
xor
cmp
or
cmpsl
data16
inc
data16
sbb
inc
cmc
sub
xchg
push
mov
push
sub
nop
mov
scas
adc
cmp
or
push
sbb
std
jge
es
mov
xor
stc
aam
cmp
aam
push
inc
stos
pusha
mov
mov
popf
roll
call
ja
dec
and
xchg
push
dec
daa
ss
mov
bnd
xor
lock
cmpsb
out
or
std
jp
rorb
xchg
adcl
xor
loop
cmp
jo
pusha
and
fsubrs
xchg
add
pushf
insl
cli
push
ja
mov
pop
dec
lcall
fcoms
pop
inc
sarb
adc
push
jns
push
fld
add
and
inc
push
sub
mov
pop
mov
pop
xchg
addb
mov
faddp
sbb
and
jmp
pop
int
add
movzbl
or
push
cld
filds
jl
rclb
push
pop
and
pop
xor
or
or
insb
pop
outsl
jecxz
cs
out
inc
fisttpl
ja
cwtl
into
lock
iret
add
and
push
sub
and
popa
mov
andl
aas
adc
mov
hlt
xchg
pop
pop
lods
or
aaa
inc
xchg
xorb
ljmp
inc
dec
inc
push
pop
test
push
or
mov
add
cmp
or
sub
inc
loope
sub
push
test
add
and
xor
mov
sbb
loope
mov
adc
or
and
int
test
jp
add
out
jge
inc
cmp
pop
loopne
lds
pushf
lret
add
insl
lods
shl
js
adc
inc
push
or
icebp
into
inc
fucomip
bnd
imul
lds
push
cmp
pop
dec
sbbb
pushf
in
jb
loopne
mov
pop
ljmp
mov
outsl
jbe
cld
cmp
dec
inc
popa
pop
clc
push
pop
adc
pop
es
xor
fsubl
repnz
loop
and
sti
jp
hlt
mov
leave
lock
sahf
lods
in
push
xchg
gs
and
mov
or
loopne
inc
sub
popa
adc
call
enter
in
test
fidivl
and
out
sbb
les
add
loop
dec
sbb
outsb
mov
dec
or
lods
in
xchg
mov
out
test
adc
out
dec
jne
mov
adc
insb
shrb
addr16
test
push
cmp
xchg
in
xlat
sbb
movsb
mov
test
xchg
into
imul
inc
jp
stos
and
out
enter
push
scas
das
push
jno
or
cmpsb
fisubs
movsb
add
pop
or
and
add
movsl
lahf
loopne
inc
movsb
mov
xor
in
in
and
fs
and
mov
cs
in
push
out
or
fisubrl
iret
cld
mov
out
pop
and
out
push
inc
aaa
jae
sbb
je
out
fsubrl
and
cmp
inc
lods
lahf
shll
sub
xchg
pushf
and
daa
pop
pusha
hlt
xchg
dec
xchg
ss
arpl
or
lea
popf
mov
pop
dec
rcl
push
cmp
or
out
mov
js
les
out
pop
inc
xor
sub
sub
int3
out
mov
stos
pushf
pushf
sbb
pop
inc
mov
or
mov
insl
popf
sti
data16
mov
mov
and
sub
test
mov
cmp
jmp
cmpsl
je
push
imul
rcll
clc
scas
mov
jge
call
sub
add
and
call
mov
xchg
scas
xchg
call
push
dec
cld
fwait
xchg
push
gs
cmp
mov
loope
out
int3
pop
popa
mov
cmp
inc
inc
lods
imulb
adc
in
lret
mov
test
shrb
lock
add
push
popa
stc
jnp
xchg
and
or
mov
popa
push
loopne
das
cld
hlt
xchg
inc
aam
dec
mov
dec
sbb
mov
mov
adc
and
shrl
addr16
sub
cmc
les
fs
jp
clc
scas
fst
idivb
enter
and
pushw
mov
orl
rorl
popf
push
les
ja
aas
add
jne
out
mul
xor
push
aad
mov
fs
jmp
aaa
adc
or
or
cmp
sbb
fcoml
pop
sbb
loopne
cmp
or
nop
add
call
lock
adc
dec
mov
dec
ds
inc
sbb
clc
fisttpll
lret
incl
add
or
in
pop
jno
in
mov
or
or
iret
aas
in
inc
js
addb
push
ror
sub
jle
fwait
das
jns
jl
inc
sbb
inc
les
xor
or
addb
jbe
jbe
lods
mov
mov
or
mov
mov
add
xchg
arpl
daa
imul
repnz
jo
int3
cmp
call
shll
fadds
mov
leave
push
fwait
sbb
fsts
and
nop
push
adc
loop
cs
xchg
lods
jg
jns
ljmp
int3
mov
test
mov
adc
add
sub
inc
cmp
outsl
call
mov
lock
stos
push
sbb
jo
pushf
or
jb
sahf
mov
lea
fcompl
in
dec
mov
call
jno
mov
aas
lds
lea
inc
call
and
cmp
cmp
das
xor
sbb
and
add
aam
test
test
xchg
mov
sbb
sbb
std
inc
push
mov
mov
sub
das
aam
insl
and
xchg
stos
push
mov
cltd
push
jl
sub
jp
ret
pop
dec
push
sub
adc
js
out
pop
and
inc
scas
or
mov
fsubl
add
jl
call
xchg
clc
dec
cmc
ljmp
inc
or
insl
adc
xchg
inc
rclb
call
fdivr
mov
aas
cmc
inc
cmpsl
push
pushf
daa
gs
incb
sbb
cmp
xchg
sbb
xchg
scas
cli
enter
insb
xor
test
sti
or
push
lret
adc
jl
dec
xorb
xchg
push
jno
mov
out
clc
lods
push
jae
add
xor
push
push
mov
adc
int3
pop
iret
adc
jge
test
fneni(8087
adc
adc
cmp
les
xor
pop
add
mov
negb
in
lcall
mov
test
jne
dec
hlt
out
push
adc
push
les
inc
jb
pop
dec
mov
cwtl
adc
les
shl
inc
popa
adc
and
mov
lea
inc
pushf
daa
dec
fiadds
scas
mov
cmp
stos
sub
fstpt
repz
mov
es
fs
xor
subl
xor
mov
repz
lahf
and
ret
jge
mov
xchg
jb
lock
sbb
call
pop
mov
movzwl
incb
lea
aam
fsts
pop
in
ljmp
mov
das
testb
mov
pop
and
adc
lods
loope
mov
and
push
dec
xchg
mov
jmp
bound
add
mov
cmp
push
add
icebp
sub
or
or
in
cmp
mov
jecxz
xor
es
sub
mov
add
inc
das
mov
ds
sti
test
push
cmp
jo
cmp
mov
adc
cs
test
mov
in
bound
imul
dec
je
sub
loop
cmp
cmp
sahf
sub
pop
adc
call
imul
rol
mov
test
pop
sub
in
aaa
and
mov
scas
fstps
or
enter
inc
mov
add
repz
sti
sbb
sbb
mov
sarl
mov
dec
add
aam
es
clc
loop
mov
push
mov
add
loop
daa
cld
xchg
inc
in
xchg
mov
jmp
push
mov
jp
loop
jnp
mov
call
inc
xor
and
mov
lret
mov
lret
adc
pushf
inc
jbe
pop
or
mov
inc
and
rcrb
lods
jbe
insb
movsb
add
jne
test
rolb
push
xchg
lcall
sub
push
inc
mov
lods
sbb
add
rcrl
xor
xchg
movsb
sub
popa
xchg
pop
pop
test
enter
sbb
arpl
adc
cmc
adc
dec
imul
add
mov
fcomps
popf
in
push
js
jne
loop
imul
cmp
cmp
fcoms
or
cs
insb
ja
pop
mov
mov
hlt
xchg
lea
out
adc
test
in
and
fwait
adc
pop
push
sub
testl
je
push
jb
ret
sbb
outsb
je
fidivl
adc
sahf
test
push
adc
jg
inc
add
mov
in
adc
push
adc
and
in
cmp
mov
mov
jae
xchg
test
push
pop
lods
jae
xor
cmp
insb
popa
dec
jbe
mov
popf
popa
lcall
sub
pop
inc
mov
inc
cmp
sbb
sbb
cmc
std
stos
addr16
jl
imul
inc
and
push
insb
cmp
jb
jmp
jmp
sub
push
mov
xchg
adc
sarb
dec
add
sahf
xor
adc
xor
xchg
scas
adc
je
or
pop
sub
or
push
adc
mov
jbe
cmp
shr
dec
inc
mov
mov
fcoml
sar
cmp
mov
ret
hlt
rcrl
inc
adc
inc
shr
std
push
inc
mov
ror
call
sbb
and
or
orl
lcall
mov
ja
mov
mov
sbb
repz
sbb
push
xor
push
in
jbe
daa
rclw
rorb
jbe
pop
push
gs
scas
fbld
push
adc
jo
xor
push
or
aam
pop
rcl
imul
dec
sub
aad
inc
setg
ret
push
loope
sbb
pop
mov
pop
inc
dec
movsb
pop
mov
stc
inc
xor
sbb
inc
cmp
cmp
jne
mov
test
push
sbb
push
cmp
fidivs
inc
js
mov
inc
adc
push
mov
enter
ficomps
mov
inc
pop
and
adc
add
cmp
mov
and
das
push
adc
dec
push
outsl
lret
xchg
and
xchg
cmc
in
mov
ficomps
sbb
shl
inc
pop
bsr
push
dec
sub
clc
mov
mov
or
mov
dec
xchg
fs
add
push
pop
fiadds
shlb
fs
sub
std
ja
jb
push
adc
lahf
jae
and
dec
jno
or
test
aaa
xor
pop
adc
enter
push
and
inc
adc
or
mov
xor
add
dec
cld
sbb
imul
push
xor
icebp
or
mov
add
or
movsb
aam
and
test
push
push
sub
mov
cltd
or
fcomps
add
sbb
cmp
push
mov
loopne
sbbb
adc
and
in
jmp
push
mov
test
enter
or
nop
add
clc
dec
mov
mov
mov
lahf
inc
push
dec
adc
sbb
and
icebp
or
sub
mov
xchg
imul
mov
js
sbb
sti
add
jne
ds
adc
jge
arpl
cmp
and
mov
xchg
xor
scas
fs
push
and
cld
cmp
je
sbb
dec
add
cmp
daa
sub
jmp
adc
cmpsb
push
cmp
cli
sub
push
inc
div
or
js
xchg
or
and
push
add
sub
lods
and
mov
inc
xchg
xor
xchg
sub
inc
jle
das
mov
call
adc
or
pop
xchg
clc
popf
loope
clc
or
or
std
arpl
sbb
inc
push
cmp
dec
pop
add
sub
mov
test
movsb
sbb
sub
scas
mov
jle
pop
and
fcmovnb
xor
push
orb
and
mov
sbb
nop
adc
fdivs
and
push
sbbb
push
and
push
or
fdivs
int
or
call
and
std
mov
add
lock
inc
jns
js
test
adc
mov
adc
xor
imul
sbb
xor
das
push
stc
and
and
jge
xlat
rdtsc
sub
pop
hlt
cmp
mov
cs
push
stos
les
xlat
les
sub
testl
jmp
cld
jne
mov
daa
outsb
roll
jne
push
movsl
fistl
jl
les
lret
mov
xor
pop
std
mov
aas
aam
addr16
inc
or
cs
mov
push
je
mov
cmp
and
sub
and
mov
sub
xchg
inc
xor
shll
outsb
in
fbstp
xchg
jl
xor
jmp
cltd
and
or
mov
lock
test
inc
pop
jne
and
mov
sub
ret
pop
adc
mov
sbb
hlt
mov
ucomiss
or
xchg
add
mov
dec
sbb
or
call
push
push
inc
nop
dec
xlat
cmpsl
lahf
xor
pop
inc
or
jae
sbb
jbe
test
adc
jo
daa
xchg
jmp
jo
inc
inc
xor
mov
pop
cmp
outsb
mov
dec
xchg
movsb
or
cld
inc
mov
push
push
pushf
mov
push
inc
js
inc
test
adc
mov
and
mov
mov
stos
aad
imul
dec
out
jmp
push
lret
jns
bound
std
adc
es
les
enter
mov
lahf
xor
mov
sbb
or
adc
sbb
pusha
test
enter
andb
cmp
sbb
push
xor
sub
jb
daa
jne
sub
dec
daa
or
or
lods
daa
xor
js
cmp
xchg
ret
sub
push
or
sbb
push
loop
jae
and
or
mov
leave
mov
push
call
orb
pushf
pop
in
inc
add
mov
push
add
pop
mov
push
lcall
inc
jg
mov
add
nop
push
ja
stos
pop
pop
and
and
movl
cltd
dec
js
popf
lea
dec
dec
xlat
jns
sbb
add
fs
mov
mov
mov
insb
push
mul
movzbl
out
mov
adc
add
ss
mov
insb
mov
and
es
and
cmp
and
int
adc
shl
les
cld
or
cmp
push
jno
jmp
into
ss
and
push
daa
xchg
push
js
and
mov
sbb
add
push
push
adc
or
sbb
cmp
cmpsb
cmp
imul
cli
add
jecxz
xchg
repnz
and
mov
and
add
cli
xor
mov
sub
imul
cmp
xchg
inc
hlt
and
lock
outsb
inc
stc
add
pop
rcrb
adc
test
aam
test
mov
and
pop
incl
pmuludq
pop
inc
mov
mov
inc
add
out
repnz
test
cltd
cmc
or
sub
je
loop
sub
in
lds
daa
cmp
mov
mov
imul
adc
std
loop
mov
jmp
mov
xor
or
mov
popf
adc
aam
mov
imulb
mov
add
push
jne
insb
push
inc
call
or
jno
xchg
movsb
loope
test
jbe
adc
ja
cli
and
adc
adc
mov
jp
inc
push
lods
and
sbb
xchg
icebp
dec
inc
clc
or
imul
call
sbb
jmp
inc
adc
bound
repnz
jne
in
jbe
jle
sbb
dec
or
or
mov
repnz
shrl
sub
cs
leave
or
bound
bound
ret
dec
mov
add
ss
cwtl
sub
call
adc
and
xchg
icebp
jle
push
pop
push
and
adc
sbb
sarb
or
mov
and
push
and
jbe
dec
daa
mov
jp
gs
iret
mov
push
or
mov
and
call
gs
std
lret
inc
das
adc
scas
inc
data16
and
xor
add
movsb
sti
test
adc
cmp
sub
maxps
sbb
mov
inc
aam
fsubr
inc
fs
lret
and
jge
push
cmp
subl
mov
push
inc
or
sub
adc
push
xor
dec
xchg
adc
sbb
mov
xlat
pop
and
inc
bound
sahf
popa
nop
enter
jb
dec
push
pop
and
ret
and
stos
adc
dec
and
fcoml
xor
sbb
icebp
jg
add
push
addb
jl
inc
mov
mov
ret
sbb
mov
mov
sbb
shrl
adc
std
xchg
xor
sub
pop
sub
dec
dec
stc
sub
jo
dec
cmp
xchg
inc
fbld
sub
cmc
loop
push
adc
sbb
mov
lods
lock
sub
popf
cmp
mov
insl
call
lret
mov
fmuls
mov
xor
cmp
pop
les
cmpsb
jge
jmp
jnp
psubd
ljmp
mov
lahf
repz
lea
jnp
jns
cmc
int
stc
xor
ds
pop
pushf
jp
inc
imul
cs
ss
xorl
in
pop
sbb
insl
dec
inc
jmp
daa
jge
dec
xlat
adc
sub
mov
jmp
inc
xor
jne
pushf
in
or
rsqrtps
leave
cmpsl
stos
imul
loope
movups
out
cmp
jecxz
jecxz
daa
hlt
xor
and
clc
insl
inc
adc
inc
xchg
mov
jne
imul
and
adc
nop
inc
loope
jne
dec
or
mov
adc
add
sarl
push
fmull
ljmp
adc
adc
jge
jg
cld
jne
xor
sub
mov
pop
pop
test
daa
jmp
test
scas
sarl
push
or
push
mov
inc
and
in
out
ljmp
dec
sbb
shlb
push
or
push
jne
test
jecxz
fmul
jmp
and
xchg
jbe
mov
dec
shll
xor
inc
or
adc
mov
push
test
xchg
xchg
aas
mov
es
popf
dec
shrl
sbb
in
sub
jmp
sbb
sbb
cmpsl
cld
test
gs
cmp
jp
lret
nop
adc
pop
sbb
mov
mov
rorb
mov
xchg
mov
rcll
sbb
fs
stos
and
mov
movsl
or
and
adc
sub
shll
push
dec
push
data16
adc
xchg
or
xor
add
movsb
rcrl
data16
sbb
or
sub
and
std
and
or
push
fstl
es
out
xchg
aad
cmpsb
pop
fwait
repnz
pop
pop
lea
les
rep
repnz
and
sbb
add
jno
adc
out
xor
dec
mov
adc
adc
dec
bound
inc
mov
mov
hlt
adc
ret
sub
loopne
and
aam
adc
sbb
call
sub
add
push
mov
dec
push
mov
lcall
test
lahf
scas
jbe
push
push
mull
das
cld
inc
jp
fs
xchg
push
aas
inc
sub
daa
push
jbe
ret
test
sbb
pop
adc
push
adc
mov
andw
cwtl
cmpsl
push
mov
dec
push
aam
arpl
dec
dec
fsubl
ja
dec
mov
mov
lcall
negb
ret
pop
in
ja
loopne
push
push
and
push
movsb
or
nop
jbe
dec
ja
clc
mov
xchg
jge
push
movsb
dec
inc
shlb
aaa
mov
pop
stos
mov
dec
into
mov
mov
cld
fdivrl
adc
sbb
add
sbb
add
inc
pushf
and
fsubrl
add
or
push
dec
adc
loopne
outsb
insl
or
pusha
les
icebp
adc
out
inc
mov
adc
mov
loope
cs
lods
sub
or
lock
mov
push
inc
in
or
dec
jg
shr
or
movsb
and
cwtl
push
cmpsl
jb
daa
inc
xchg
dec
or
and
rclb
test
push
pushf
adc
dec
dec
call
call
sub
prefetch
ret
and
or
push
inc
add
in
push
in
idivw
sbb
add
andl
test
xor
mov
enter
push
push
cmpsl
cld
outsb
push
insb
dec
pop
outsb
mov
adc
mov
call
push
or
adc
test
xor
inc
xchg
add
inc
adc
nop
ret
inc
roll
mov
or
call
outsb
lds
mov
add
or
dec
repz
and
inc
or
rclb
int3
dec
popf
jns
xchg
in
adc
ret
mov
lock
xor
je
xor
and
subb
sub
dec
sub
adc
xor
mov
push
inc
add
sub
pop
das
sbb
sub
xchg
cltd
mov
stc
inc
mov
sbb
inc
pop
sahf
inc
or
movsb
fadds
mov
push
or
aas
les
pop
mov
dec
jecxz
and
call
movl
dec
fcmovb
stos
push
pop
and
and
int
gs
push
les
adc
push
ss
pop
sub
push
jnp
enter
mov
adc
mov
mov
jb
mov
test
mov
dec
js
subl
dec
outsb
je
adc
jecxz
push
jmp
inc
lds
cmpsb
sub
out
or
and
data16
lea
ljmp
sbb
gs
mov
xchg
push
enter
sub
and
mov
sbb
jle
mov
test
dec
lock
sti
es
in
xor
mov
add
xor
les
ficompl
xchg
shr
pusha
or
add
or
adc
and
sbb
pusha
add
or
dec
push
mov
data16
pop
shll
sub
dec
push
pop
lea
inc
nop
add
and
movswl
mov
popf
stos
or
push
xlat
lds
sbb
pop
shlb
mov
add
addr16
or
rcrl
adc
adc
or
sub
pop
sub
ja
push
sbb
dec
add
lds
sub
and
imul
icebp
sbb
sbb
mov
shl
lods
inc
mov
enter
sbb
sarb
jmp
popf
jae
and
addr16
push
xor
push
cltd
push
jb
stc
jns
ret
or
pop
adc
aaa
add
pushf
or
sub
adc
jne
je
popa
data16
out
and
or
jmp
jne
std
loope
cmovb
or
dec
notb
ret
adc
cmp
xchg
in
mov
push
aam
mov
aad
xchg
push
stos
cmp
sub
cld
std
mov
jmp
je
jecxz
mov
lret
loop
popl
jno
mov
cld
sub
negl
cmp
repz
xorl
xchg
or
add
in
mov
inc
xor
sub
jmp
test
pop
pop
test
enter
das
pop
aaa
push
in
cld
lods
fdivs
push
mov
popa
sti
push
mov
cli
push
mov
dec
or
xchg
lcall
int
sbb
stos
jae
in
in
mov
in
mov
mov
cmp
inc
into
inc
push
or
jg
ja
mov
push
adc
and
mov
mov
and
push
inc
push
dec
adc
inc
mov
and
push
adc
mov
das
les
or
dec
subl
fs
inc
push
les
mov
aaa
lret
adc
jne
out
fs
lea
inc
and
pop
adc
pop
lods
movsb
test
addr16
or
sar
add
ret
adc
and
jl
push
sub
jle
leave
jle
jl
and
negb
cltd
sub
cs
jle
and
sub
pop
stos
in
jnp
push
xor
dec
outsl
jmp
pop
cmp
jecxz
and
adc
jbe
out
mov
adc
dec
dec
adcb
jl
push
jbe
fs
popf
mov
pop
popf
stc
lods
int
mov
or
xchg
inc
mov
iret
leave
js
xchg
jl
je
adc
jb
in
pop
mov
inc
sbb
stos
ficoms
and
add
or
fwait
test
insb
add
adc
push
and
add
shl
mov
or
and
stc
add
dec
daa
inc
mov
lds
enter
rorb
dec
fwait
or
jns
aam
mov
ret
adc
mov
rorl
rolb
sub
dec
stc
mov
add
mov
sahf
add
add
andb
test
sub
out
and
mov
les
mov
int3
or
int
push
into
inc
and
inc
dec
rolb
roll
rolb
roll
aam
cmp
inc
daa
inc
sub
inc
pop
fadds
flds
fiaddl
fildl
faddl
fldl
fiadds
filds
loopne
push
loope
add
inc
push
jecxz
and
add
cmp
adc
or
ljmp
xor
out
inc
dec
lock
cmp
inc
adc
inc
inc
repz
pop
hlt
inc
aaa
cmc
inc
sbb
inc
push
clc
inc
sub
int3
sbb
adc
dec
pop
ljmp
or
push
sar
or
dec
push
dec
push
lods
cmp
fs
push
arpl
movsb
sbb
mov
add
stos
and
cmp
mov
loopne
jne
xchg
jns
cli
iret
mov
out
push
or
xchg
mov
scas
dec
pop
pop
incb
mov
jb
and
notb
dec
or
pop
mov
lds
sbb
fldl
enter
pop
add
mov
sub
adc
fmul
test
inc
mov
or
lcall
insl
test
rolb
fs
xchg
scas
sub
or
jae
lret
cmp
mov
mov
dec
gs
ficompl
sbb
jmp
cmpsb
fwait
das
pop
mov
mov
lea
sub
or
mov
push
test
je
jl
or
movl
add
ret
nop
adc
jg
sbb
pop
jle
rolb
sbb
add
clc
mov
inc
cld
dec
pop
shl
in
push
mov
or
test
jne
dec
adcl
iret
or
pop
mov
and
test
fld
jmp
mov
push
pop
inc
test
add
fldenv
dec
push
jmp
ja
pop
lret
cmpsb
or
mov
dec
add
add
inc
push
cmpsl
pop
ret
sub
adc
sbb
adc
stos
mov
jle
mov
mov
mov
rcrb
testb
adc
mov
int
push
inc
dec
add
adc
sbb
lcall
xor
mov
test
push
fimull
dec
jg
ljmp
in
and
loopne
xchg
scas
or
jge
adc
int3
add
push
push
push
testb
mov
mov
movsb
push
add
jmp
mov
xchg
leave
and
and
and
push
and
and
and
and
and
mov
lret
cmp
pop
cli
inc
dec
sub
scas
in
sub
push
sbb
xchg
jmp
and
push
mov
push
in
shrb
adc
push
test
jg
mov
stc
cmc
add
jge
xor
push
cmp
jbe
add
jb
push
adc
cmpl
stc
adc
jb
mov
test
inc
add
sub
jb
or
loopne
inc
ret
rolb
xor
aas
nop
adc
ror
sub
or
les
and
test
add
out
or
scas
adc
int3
mov
dec
dec
sub
fimull
sarb
inc
cmpsb
lret
inc
inc
inc
std
inc
sbb
mov
inc
test
adc
dec
pop
test
sbb
xor
call
jmp
and
jmp
and
call
mov
add
dec
clc
adc
icebp
dec
icebp
ror
int3
xchg
loopne
scas
sub
and
cmp
cli
or
push
push
or
lea
sarb
cmp
std
in
cld
icebp
inc
dec
or
dec
fldenv
lock
lock
mov
dec
jecxz
inc
inc
dec
pop
int3
sbb
mov
cmp
loopne
dec
mov
dec
push
mov
mov
jne
cmp
jle
dec
sub
nop
sub
dec
lods
cs
jb
scas
and
sub
push
hlt
cmp
or
or
or
sbb
mov
adc
xchg
adc
je
adc
dec
xchg
adc
pop
dec
xchg
or
pop
dec
cmp
lods
and
or
jl
xchg
mov
jp
adc
cmpsb
aas
test
jo
fucompp
mov
jo
lock
cmp
mov
cmp
daa
sbb
pop
in
pop
ret
mov
ljmp
add
shll
adc
add
sub
add
in
mov
sub
inc
inc
and
inc
and
adc
lea
push
sub
sar
scas
or
enter
push
lds
adc
pop
mov
cmp
bound
cld
sub
mov
mov
hlt
lock
adc
lcall
rep
ja
and
mov
mov
add
out
push
cmp
and
sub
add
jae
in
lds
mov
sbb
adcl
xor
pop
xchg
stos
or
xchg
call
pop
sbb
cmp
je
test
push
xor
mov
jae
xor
or
call
sbb
je
pop
pop
push
popa
packsswb
lock
rcrb
rclb
es
fs
movsl
fwait
arpl
iret
lds
stos
adc
or
sarb
das
mov
push
push
push
cmp
ss
popl
sbb
addb
mov
jns
push
push
push
and
or
fldl
call
daa
jle
inc
sub
jne
pop
push
popf
jl
mov
pop
mov
cld
jecxz
jo
push
icebp
inc
dec
dec
repz
paddusb
sub
pop
xor
mov
test
clc
sub
fdivl
sahf
jne
addl
test
jne
inc
sbb
ret
or
nop
les
xchg
push
push
xchg
outsl
and
dec
jnp
mov
adc
mov
add
add
movsl
xchg
sbb
lock
push
clc
sub
xchg
sbb
mov
inc
xor
mov
dec
es
pop
hlt
fstcw
dec
push
cmp
div
insl
xor
jge
fwait
or
es
push
clc
leave
and
cwtl
adc
dec
test
hlt
or
loopne
jo
inc
test
or
inc
inc
mov
inc
or
push
test
or
cmc
test
lock
push
mov
pop
imul
adc
or
loopne
gs
mov
and
xchg
scas
adc
mov
adc
ljmp
mov
std
xchg
jmp
cs
jae
pop
pop
sahf
int
mov
push
push
imul
mov
ds
adc
lods
fistpl
push
xchg
lods
or
jge
outsl
adc
mov
in
inc
jg
scas
inc
fwait
mov
inc
lcall
loope
mov
sub
push
inc
sbb
movsl
enter
jo
push
rorl
das
xor
lcall
bnd
ret
mov
sbb
loopne
sbb
push
leave
and
dec
imull
inc
lahf
nop
int
mov
int3
insl
clc
movsl
sahf
adc
jae
mov
int3
add
mov
rolb
aam
adc
dec
jl
push
ret
xchg
int3
clc
mov
je
mov
jmp
pop
cli
inc
int
int3
pop
cmp
xchg
pusha
push
lea
in
ds
movsl
and
push
ret
jmp
imul
aad
out
nop
adc
add
inc
xchg
and
add
jp
mov
std
add
xor
imul
sbb
lahf
std
pop
rclb
jmp
shll
arpl
mov
jl
cmp
sub
cmp
lea
cmp
cmp
add
jle
pop
or
testb
xor
sbb
ror
scas
and
or
add
cmp
ja
ljmp
mov
test
pushf
int3
imul
pop
loop
or
push
inc
and
and
dec
pop
inc
xchg
push
aas
mov
and
and
adc
adc
adc
mov
jg
loopne
push
push
out
lcall
sbb
test
lcall
shrb
xor
mov
or
mov
jl
add
mov
stc
cwtl
cld
inc
outsl
call
jmp
fs
cmp
xchg
test
pop
lea
or
imul
push
out
in
or
mov
mov
push
or
dec
out
mov
inc
jbe
push
imul
ret
lock
dec
push
push
popf
ljmp
insb
push
lea
pop
push
sub
add
adc
hlt
sbb
mov
lods
mov
loop
push
pop
or
bound
xor
orb
lods
or
push
lret
mov
pop
push
or
inc
int3
dec
enter
sub
and
sbb
mov
pop
push
nop
icebp
mov
jl
nop
adc
lock
mov
fsubrl
clc
push
lock
dec
or
sub
or
mov
or
push
jne
lock
aad
pop
cltd
movsb
shrd
int3
mov
adc
sub
jbe
and
push
int3
or
or
mov
and
xor
push
enter
cmc
std
adc
push
aam
xchg
dec
and
dec
sub
aaa
or
sub
or
add
cmp
mov
cmpsb
inc
cs
and
lods
loope
add
and
sub
add
stc
add
inc
pop
adc
mov
repz
xchg
out
or
ret
enter
sub
jne
push
dec
sahf
jae
mov
and
mov
nop
and
or
ret
cmp
add
add
cs
shlb
adc
mov
cmp
inc
jl
sbb
adc
add
scas
mov
ja
lods
ss
inc
pusha
fadds
popa
nop
cld
shl
inc
fisubrs
ret
pop
arpl
inc
sbb
mov
data16
push
or
mov
test
aad
push
cs
aam
popf
cmp
aam
out
adc
dec
push
add
jl
adc
cmp
add
mov
sbb
jmp
packuswb
add
pusha
sub
pushf
inc
add
inc
jmp
cmp
jle
sub
mov
jne
mov
inc
add
add
call
mov
shrb
cmpb
shlb
add
iret
cmp
xchg
jne
add
xchg
movsb
adc
sbb
push
cmpl
inc
sbb
inc
lret
pusha
lahf
jmp
repz
xor
mov
dec
addr16
xchg
push
pushl
or
add
inc
gs
or
ret
xchg
andl
xor
push
or
jns
push
push
jge
imul
pusha
sbb
pop
bswap
test
mov
push
dec
push
mov
and
push
or
add
xchg
rcrb
jle
jmp
xor
or
sub
into
inc
and
enter
mov
add
push
pushl
push
call
sub
cwtl
jle
add
add
sar
jmp
cmp
dec
adc
cs
fdivrp
roll
or
shl
rol
sub
push
push
dec
mov
je
scas
cmpl
test
rcrl
je
sub
pop
dec
in
adc
mov
test
xchg
lret
adc
addl
movsb
or
sub
in
cmc
pop
and
inc
fadds
xchg
push
nop
aad
inc
bnd
loope
mov
or
scas
adc
adc
cmc
ljmp
xchg
pop
xor
and
test
je
mov
dec
push
sub
call
pusha
or
jmp
sub
xor
pop
clc
or
pop
dec
mov
or
call
arpl
inc
mov
outsl
dec
in
in
in
mov
in
or
inc
and
jmp
inc
mov
inc
adc
adc
popf
fsubs
sub
arpl
dec
sbb
or
fisttpll
xchg
inc
push
movsl
mov
sbb
mov
dec
or
or
rcrl
call
ret
mov
je
rcrb
push
adc
or
into
mov
and
sub
or
ds
adc
add
add
push
shll
cmp
adc
ret
lock
mov
and
cmp
sbb
out
mov
lea
cmp
jb
adc
cwtl
jae
and
or
pop
push
and
sub
adc
mov
imul
adc
pop
xor
out
mov
adc
xor
movsb
ret
je
imul
loope
imul
adc
mov
sysret
inc
cmp
movsl
adc
push
or
or
jne
test
adc
mov
call
sbb
and
scas
inc
cmp
jne
leave
inc
add
or
fucomip
insb
mov
imul
xor
ret
or
mov
mov
cwtl
nop
stos
pop
pop
jno
add
pop
jb
cmpb
jne
sbb
fwait
loopne
adc
push
movsb
lahf
jnp
pop
or
data16
inc
sub
clc
test
mov
add
mov
mov
xor
mov
andb
inc
jmp
cmp
loope
xchg
or
or
jne
jg
sbb
lea
jo
or
inc
cmpb
mov
lods
inc
jae
mov
xchg
inc
mov
pop
sub
cmp
xlat
mov
xchg
das
mov
inc
mov
and
pop
pop
and
dec
andb
popa
pop
xorl
jne
sbb
sub
mov
les
scas
adc
or
jae
lock
stos
add
ds
adc
pop
sub
lcall
mov
jne
xchg
xor
popa
and
das
lea
jp
popf
jae
xor
lret
push
jno
push
xchg
adc
loope
das
repnz
fs
subb
sbb
pop
mulb
call
pop
lea
cmp
test
divb
push
pop
mov
mov
push
inc
jmp
xorb
sub
dec
adc
inc
stc
ss
push
xor
daa
pop
arpl
mov
in
cmpsl
or
jp
push
ds
jne
pop
xor
xlat
data16
ret
xor
imul
je
push
pop
adc
test
loopne
cmp
push
jne
push
ljmp
into
test
inc
adc
test
test
shlb
test
dec
push
mov
xor
or
sbb
push
push
pop
sbb
mov
enter
jnp
call
enter
cmp
lea
mov
mov
hlt
jb
or
push
stc
lret
add
imul
push
icebp
lahf
das
movsb
je
ret
sbb
jg
mov
cmp
in
push
or
inc
cmp
mov
and
dec
jg
sbb
adc
mov
je
rclb
test
xorb
jne
sub
mov
outsb
add
movl
clc
pushl
jmp
mov
add
fstps
leave
mull
aaa
mov
popa
rcll
fcoms
fwait
pusha
pop
add
cmp
shll
pop
dec
pushl
scas
xor
or
rcll
xorb
out
adc
push
nop
mov
js
daa
dec
push
addr16
add
jmp
cmpl
ret
cmp
pusha
cld
push
jne
andb
mov
insl
cmp
pusha
cld
icebp
xor
fucomi
lock
imul
scas
inc
inc
mov
mov
std
add
je
imul
cld
pop
aam
jb
xor
jnp
jge
es
jae
enter
out
lret
mov
mov
or
cmpsb
mov
test
cmp
xorl
orb
rorl
inc
rcl
cmp
cmc
popa
push
ficompl
stc
ficoml
push
mov
and
adc
movsl
test
sbb
push
xchg
jns
push
mov
decb
std
incb
adc
xchg
or
ret
adc
xchg
pop
fs
push
or
out
mov
mov
fidivrs
lds
mov
xor
mov
decb
pop
lret
inc
movb
mov
or
in
ja
fs
mov
xchg
test
lods
jle
pop
push
jo
je
mov
or
fxam
roll
add
or
subb
push
adc
hlt
xchg
outsl
lret
clc
orb
xor
stos
inc
iret
in
loopne
adcl
and
jg
or
out
lea
and
adc
je
dec
cmp
or
iret
sub
out
js
adc
inc
aam
xchg
inc
pop
mov
push
std
mov
dec
dec
dec
push
xchg
iret
push
push
xor
lea
rep
mov
pop
mov
sub
lahf
xor
iret
stos
add
jecxz
lea
and
jne
data16
xor
shll
sub
lock
shl
shr
mov
dec
xor
pop
test
jmp
mov
inc
sub
push
and
push
dec
pop
rcll
es
jne
xorb
pop
sub
pop
rclb
ret
push
mov
std
mov
int
sub
sbb
test
mov
or
icebp
adc
fcmovne
dec
movsb
rcr
bound
cmc
sub
adc
icebp
sbb
adc
mov
rolb
adcb
in
call
or
add
div
mov
mov
inc
pop
and
shll
cmp
push
ja
xchg
mov
xor
inc
pop
cmp
adc
mov
push
test
jmp
outsl
inc
adc
or
and
xor
or
cltd
insb
or
mov
mov
adc
adc
mov
lahf
and
add
cmp
inc
ss
push
je
loopne
sub
adc
jno
adc
adc
adc
dec
inc
cmp
jmp
fnstcw
daa
fs
sbb
inc
adc
adc
movsb
test
mov
addr16
cs
mov
xlat
js
adc
mov
jge
mov
cmp
jne
inc
inc
dec
dec
icebp
outsl
push
mov
inc
rorl
push
iret
daa
adc
out
call
fldl
loopne
and
sub
cmpsl
mov
cld
dec
mov
dec
or
cmc
loop
fistps
add
adc
sti
ljmp
sbb
mov
orl
popf
enter
fchs
push
adc
bound
jbe
loop
cmp
push
js
cmp
in
shlb
mov
and
add
or
add
sbb
test
mov
adc
and
and
mov
inc
cli
cltd
lcall
je
mov
xchg
jge
pop
or
enter
mov
xor
inc
sbb
inc
pop
push
xchg
jge
rcll
testb
addl
sub
nop
adc
mov
mov
jge
pusha
push
pop
das
rclb
push
stos
pop
adc
mov
hlt
out
dec
inc
mov
call
jge
cmp
or
xchg
outsb
aas
mov
daa
or
sbb
jmp
mov
adc
adc
clc
insb
push
enter
add
shll
lea
pop
or
ret
jge
cwtl
sub
sbb
lea
push
add
adc
call
cltd
push
call
mov
cs
test
int
std
or
daa
adc
andl
popa
or
out
adc
cmc
shlb
sar
dec
call
adc
testb
cmp
push
std
out
mov
sbb
push
ficoml
cmp
and
add
data16
ret
mov
andb
inc
inc
inc
adc
jb
xchg
sbb
call
push
jae
push
or
movsb
or
inc
jp
sub
les
push
mov
outsl
sub
dec
test
mov
sub
and
and
shr
dec
sbb
inc
daa
or
shlb
xchg
mov
das
jmp
pop
lods
or
or
sbb
cmp
pop
push
mov
fwait
push
je,pn
xorl
jb
jns
dec
outsl
aad
mov
or
roll
das
push
pop
data16
pop
and
sbb
cmp
or
pop
subb
xchg
pop
sbb
bound
cmpl
lcall
adc
cmpb
mov
les
std
sbb
sbb
add
push
pushf
bound
sbb
iret
push
dec
mov
stos
decl
fcomps
mov
cmp
clc
aam
test
data16
dec
push
fsubs
and
inc
pop
inc
pop
xchg
push
loopne
inc
ret
lret
push
hlt
add
pop
gs
push
mov
jb
aam
jmp
es
das
adc
or
orl
lret
pusha
add
adc
lret
adc
mov
sbb
mov
repnz
sub
jno
mov
jmp
push
fwait
mov
cmp
or
lock
leave
pop
rolb
dec
and
addr16
das
mov
mul
rclb
sub
cmpsl
push
push
pop
cmp
jne
pushf
and
sbb
dec
jne
jg
adc
or
cwtl
push
push
call
les
enter
lock
shlb
adc
pop
sahf
adc
pop
bound
and
dec
pop
imul
mov
and
repz
xor
push
andl
adc
xor
mov
decb
xor
dec
xchg
xor
mov
stc
cwtl
and
orl
adc
and
push
mov
pop
add
mov
push
movsb
sub
or
xchg
loope
sub
xchg
cmpsb
inc
push
mov
sbb
jae
add
adc
push
push
push
inc
dec
push
cmp
sub
cmp
lret
and
pop
inc
add
pusha
jg
lea
cwtl
arpl
and
imul
roll
mov
jo
mov
xor
mov
cmp
pop
adc
bsr
shlb
add
add
pop
inc
and
inc
shl
cmp
in
push
or
mov
push
mov
rolb
jl
sti
and
or
push
clc
int
mov
lcall
or
pop
add
add
add
jle
rorl
xchg
add
adcl
push
fs
push
fmuls
loopne
in
cld
sbb
jmp
sub
xor
or
stos
sub
dec
out
sbb
aas
je
or
push
push
or
mov
and
adc
repnz
or
sub
pop
mov
call
lock
sub
mov
cwtl
das
mov
addb
push
mov
test
add
mov
and
and
add
lret
push
mov
mov
cmp
mov
cs
or
and
mov
mov
std
mov
adc
and
test
adc
jg
jbe
cmp
inc
out
push
jb
js
insb
xor
sbb
sbb
into
or
sbb
stos
mov
jg
mov
sbb
pop
data16
push
jmp
clc
addr16
push
rolb
adc
xor
pop
and
clc
inc
loop
sbbl
inc
xor
outsb
jo
insb
aam
cld
or
add
xor
jne
movsb
shll
mov
lahf
pushf
sub
cmp
pop
and
mov
inc
mov
xchg
inc
sub
xchg
and
dec
test
xchg
jl
inc
cmpw
repz
jmp
xchg
dec
cld
adc
inc
lea
cmp
iret
fdivs
ds
mov
shl
pop
mov
inc
xchg
dec
mov
nop
push
mov
adc
xor
sub
pop
je
cmp
or
inc
jmp
fdivr
dec
jmp
cmp
xor
jmp
jmp
imul
cmpsl
test
fistps
addl
call
pop
out
imul
aaa
cmp
mov
push
mov
dec
sub
and
pop
stos
sub
cs
mov
add
lock
cld
xchg
push
mov
sbb
jg
mov
add
adc
out
outsl
and
push
cmpsb
and
pop
pop
or
test
pop
pop
hlt
or
jne
cmp
sub
push
call
inc
cld
inc
sbb
pop
xchg
gs
adc
dec
adc
cmpl
sub
leave
mov
daa
daa
jmp
mov
xchg
mov
or
xor
adc
sbb
or
ds
pop
inc
dec
lds
pop
mov
mov
xor
push
and
add
mov
jmp
dec
xor
or
cmp
add
xor
add
xchg
and
lcall
jmp
adc
push
test
and
imul
or
add
cmp
xor
xor
inc
dec
adc
call
rcrb
jmp
adc
jnp
repnz
add
lock
mov
sbb
in
pop
dec
jl
add
adc
jl
push
sub
ficoml
push
cli
jmp
ficompl
or
js
add
jae
or
sar
and
testl
imul
bound
jg
mov
out
xor
hlt
cltd
push
sbb
push
sarb
jmp
adc
mov
xor
pop
and
push
pop
aam
clc
jae
or
sbb
mov
sub
sbb
and
add
cmpsb
cmpl
add
jne
stos
sbb
dec
inc
xchg
movb
aaa
popf
jbe
popf
test
add
ret
push
shll
test
mov
or
sub
or
and
cmp
sub
int3
push
hlt
xor
jns
test
xchg
cmp
int
ljmp
xor
lcall
xor
call
in
inc
or
mov
cld
add
loopne
add
xchg
enter
ret
dec
mov
ljmp
enter
push
dec
sub
adc
call
lods
add
mov
push
jno
adc
int
test
add
xchg
jg
inc
add
and
jo
mov
xor
xor
sbb
push
add
decl
js
push
das
adc
js
nop
xor
cltd
aas
call
mov
adc
add
ret
mov
dec
stos
ret
hlt
nop
xchg
push
xchg
clc
or
adc
lods
rep
jae
ds
dec
and
fidivl
in
dec
jb
gs
lods
insl
jbe
push
push
push
inc
insl
sti
inc
std
jne
aaa
aas
or
xor
jge
pop
push
inc
or
inc
shll
sbb
push
mov
add
andb
mov
xor
fistl
push
mov
popf
xor
int3
shl
or
or
rolb
cmp
je
fdivrp
dec
push
jb
or
inc
or
pop
inc
inc
add
mov
es
fistl
push
adc
adc
xchg
out
cmpb
and
nop
mov
or
mov
adc
and
dec
ljmp
fs
in
push
loopne
hlt
mov
add
push
loope
aas
push
ret
mov
xlat
sub
adc
arpl
fsub
std
daa
inc
shufps
jg
xor
sub
clc
inc
hlt
push
rorl
cld
ret
dec
jne
dec
enter
jle
ss
sub
or
xor
inc
cmpsl
xchg
and
mov
sbbl
aad
xchg
pop
push
inc
aaa
ja
xor
jns
push
js
push
js
add
jge
pushf
add
dec
stc
dec
jp
rorl
mov
mov
jns
add
xor
jge
in
adc
mov
inc
cmpsl
xchg
inc
in
flds
sub
jp
pop
xor
outsb
or
les
arpl
das
pcmpeqb
inc
cld
push
mov
pop
xchg
out
in
mov
rclb
je
or
hlt
or
outsl
enter
sahf
or
or
sub
inc
fs
bound
mov
packuswb
xchg
or
in
jecxz
fwait
push
add
mov
dec
adc
fs
cwtl
sub
mulb
jle
test
jmp
sub
lea
sub
popf
or
push
sbb
sarl
xor
mov
test
sbb
das
mov
adc
pop
dec
popf
jle
cmp
or
push
call
pop
bound
inc
test
pop
xorb
pop
jo
mov
mov
scas
sub
and
sbb
inc
sub
outsb
inc
mov
jge
jb
adc
shlb
stos
xor
jo
jbe
push
push
gs
cmp
ret
push
sub
xchg
daa
mov
sub
sub
lcall
rcll
mov
sub
mov
pop
or
add
leave
mov
adc
dec
add
dec
adc
es
insl
sub
and
and
or
dec
pop
nop
jg
dec
sub
movsl
pop
loop
inc
mov
jle
ds
in
mov
adcl
repz
insb
outsl
cltd
adc
lods
and
popa
shlb
xlat
stc
cmp
cmpsl
xchg
cli
aas
dec
sub
jmp
or
and
bound
mov
addr16
dec
cmpsl
or
cltd
inc
addr16
push
in
push
or
inc
sub
add
pushf
push
push
sti
xor
sbb
dec
das
or
cmp
adc
in
dec
lock
push
pop
jmp
cmp
add
pop
jmp
or
pop
pusha
mov
xchg
adc
rclb
call
mov
or
jge
jnp
inc
pop
ljmp
cmpsl
and
mov
lret
aas
pop
cmp
je
inc
mov
ss
cmp
and
inc
jae
xchg
jmp
jbe
cmc
lock
and
xor
push
lock
sbb
mov
xchg
ret
push
mov
mov
and
xor
inc
enter
mov
pop
lock
shr
inc
cltd
add
test
or
shr
cs
loope
push
cmp
push
xor
push
test
cmp
add
enter
lret
pop
add
sbb
cmc
rclb
or
test
je
adc
jne
int3
or
xchg
inc
xchg
xchg
popa
mov
sub
pop
xor
or
leave
sti
ds
mov
xchg
or
push
sub
inc
cs
popa
adc
mov
sahf
aam
es
jb
rclb
or
imul
mov
into
mov
out
jecxz
sub
cmp
cmpsb
pusha
sbb
adc
mov
lret
jb
dec
orb
sbb
out
movsb
repnz
jb
add
leave
jmp
jne,pt
xchg
xchg
push
pop
adc
aaa
loop
adc
or
pop
push
push
jnp
pusha
movl
pop
call
outsb
mov
jo
jge,pn
dec
pop
push
data16
iret
notb
outsl
jne
cmpl
ljmp
inc
sub
cmp
push
lea
cltd
add
inc
adc
and
in
pop
jle
mov
movsb
in
incl
jmp
out
fwait
roll
inc
push
xchg
pop
sbb
jo
xchg
cmove
or
cmp
mov
sbb
inc
insb
shl
add
aas
lea
rol
jg
sub
hlt
and
je
aaa
push
insb
loope
inc
add
inc
in
fimull
fsubp
pop
add
and
add
je
neg
mov
inc
lea
dec
pop
test
int3
push
ror
dec
adc
dec
or
jne
dec
add
adc
repz
bound
xor
out
pop
or
pop
aas
es
ljmp
and
or
or
push
xchg
test
adc
ret
cmp
push
enter
lods
lahf
out
sarb
out
js
mov
inc
or
mov
test
dec
push
decl
mov
leave
scas
les
inc
out
mov
es
sbb
jl
movsl
adc
cmp
push
push
pop
jbe
sub
push
mov
cmove
stos
imul
mov
ficomps
dec
iret
js
test
or
mov
jmp
je
push
or
dec
imul
pop
jne
std
cmp
dec
outsb
pop
pusha
or
pop
pop
ret
push
mov
jl
les
cmp
mov
xchg
test
push
inc
mov
lods
and
inc
mov
dec
call
seta
cmp
aas
dec
push
cwtl
mov
inc
mov
and
push
mov
mov
movl
sbb
lea
mov
cmp
jae
nop
sub
xorl
mov
lods
ficompl
mov
pop
xchg
push
inc
add
sub
sbb
adc
add
shr
push
into
jecxz
loope
leave
aas
in
dec
popf
pusha
mov
xchg
xchg
f2xm1
mov
ret
adc
jne
mov
dec
pop
sbbb
cmp
jbe
mov
mov
dec
mov
stos
stc
and
sbb
cmpsl
inc
shr
lea
add
xlat
and
or
in
in
cmp
or
shl
insl
pop
or
mov
dec
push
or
add
cltd
jl
mov
clc
mov
sbb
scas
lea
jno
sarl
mov
pusha
mov
or
mov
shlb
clc
dec
pop
cmp
test
jbe
stc
push
hlt
lods
test
aas
cmp
jbe
sti
rolb
pop
adc
nop
mov
and
adc
inc
xchg
lods
mov
add
dec
test
aas
shll
cmpsb
or
jle
pushf
mov
test
push
stc
sub
mov
out
test
push
add
pop
rolb
and
sarl
testl
jmp
out
or
jno
lea
negl
jne
dec
and
push
sbb
xchg
and
mov
nop
push
inc
lock
sub
adc
pop
mov
mov
rcrl
mov
inc
fwait
shl
add
or
cmpsb
out
movsb
in
adc
push
push
call
and
push
xor
test
cmp
and
pop
xor
mov
xchg
or
ret
dec
jns
xchg
adc
sub
scas
adc
js
inc
dec
insb
in
jo
or
adc
jne
cmc
sahf
mov
repz
inc
xchg
test
enter
repnz
cmpsl
adc
subb
push
inc
xchg
lahf
dec
xchg
or
inc
and
add
mov
dec
mov
or
mov
lods
lods
xlat
mov
addr16
xor
rcll
cmp
pop
cltd
sbb
dec
pop
test
sbb
imul
lock
call
out
xchg
push
aam
or
adc
not
call
mov
cmp
xor
dec
dec
loop
outsb
and
decb
iret
jne
add
adc
fwait
xor
adc
jne
mov
ljmp
and
out
xor
pop
dec
jae
bnd
fdivl
sub
jmp
cmp
mov
out
push
daa
call
fcmovnb
cmp
sti
fidivl
pop
pop
mov
inc
test
pextrw
sub
out
cs
loopne
cld
fistps
nop
adc
xchg
mov
movsb
adc
push
adc
dec
scas
dec
adc
mov
sbb
mov
sarb
cmp
xlat
je
mov
cwtl
lret
jbe
pop
pop
mov
test
addr16
or
test
jl
roll
loope
jmp
mov
push
stc
mov
sub
mov
popf
dec
orl
jle
stc
pop
cmp
xor
sub
and
mov
popf
cmp
ljmp
inc
clc
or
cmovge
dec
add
in
and
jmp
mov
dec
sub
xchg
xchg
mov
mov
outsl
adc
and
xor
jp
add
test
xchg
xor
xchg
sub
jl
xchg
cmpsb
cmpsb
inc
ret
pop
inc
fs
cmp
mov
cwtl
lcall
xor
or
or
stc
jl
scas
jmp
dec
sub
or
aas
or
mov
mov
sbb
or
imul
or
cld
stos
mov
jp
lock
ror
inc
add
or
cld
mov
addr16
ds
cmp
adc
pop
mov
dec
scas
enter
add
shll
or
and
mov
sub
push
jae
pop
sbb
je
mov
xor
add
push
dec
mov
inc
xor
xor
fwait
in
add
inc
adc
add
jl
mov
adc
pop
jbe
jbe
push
imul
jge
loop
push
movb
gs
jmp
sub
adc
push
std
jno
leave
inc
popf
mov
or
and
inc
and
ret
cmp
enter
cld
dec
xor
inc
or
add
or
dec
and
shl
loopne
aad
test
dec
mov
les
inc
xchg
add
add
cli
ja
jmp
sbb
pmovmskb
out
in
cld
vmptrld
inc
lock
inc
push
xchg
sbb
dec
add
sub
and
sub
mov
test
or
clc
pop
xlat
inc
pop
dec
out
dec
or
in
add
nop
fs
inc
cmp
mov
lcall
sub
add
js
mov
shr
mov
push
jns
pop
ret
mov
mov
xchg
push
adc
pop
jl
xlat
lea
sub
adc
pop
out
push
ljmp
dec
cld
dec
cmp
cmp
or
aas
push
orl
add
fnstcw
repz
inc
push
mov
pop
icebp
sub
mov
pop
adc
mov
cmp
dec
pushf
cmp
pop
sub
clc
pushf
sbb
nop
jno
inc
sbb
and
orl
lret
push
jg
gs
add
stos
loope
adc
sub
lret
xor
sub
sbb
jecxz
sub
fistl
or
addb
or
cmp
daa
jne
adc
inc
adc
and
or
adc
mov
jmp
jo
jno
jns
dec
mov
or
mov
inc
cld
js
xor
je
add
out
inc
popa
and
clc
jmp
outsb
inc
ret
jge
push
sub
movsb
xor
pop
xor
push
mov
mov
xor
cmpl
sub
test
movsb
and
subl
jae
push
mov
je
xchg
jp
push
jne
sbb
lea
cmp
ja
out
jp
ja
jno
xor
push
popl
out
mov
out
inc
jnp
xorl
jno
lcall
out
pushf
mov
sbb
mov
jecxz
or
sbb
inc
into
and
push
dec
lret
sbb
inc
jns
bound
dec
jmp
dec
daa
sbb
loop
testb
inc
push
adc
or
adc
rdmsr
emms
jp
das
call
pop
dec
ret
mov
enter
call
pop
std
into
incl
das
push
xor
push
jne
call
and
hlt
gs
push
scas
xor
and
jno
nop
test
pop
xchg
sbb
adc
add
cmpsl
sub
fs
and
bound
jmp
adc
push
iret
out
sub
imull
in
sbb
sbb
jmp
sbb
dec
fisttpll
leave
cmp
shr
lods
xor
pop
push
or
mov
push
gs
mov
pop
add
and
je
xor
std
test
pop
adc
inc
mov
es
adc
nop
js
jle
daa
push
add
xor
jb
shll
lret
addl
out
shl
or
jne
add
sbb
es
ss
xchg
mov
inc
sti
rol
add
iret
cmp
adc
and
ret
je
jmp
adc
fildll
add
test
push
int
out
shll
and
loope
ret
js
and
je
cmp
pop
push
or
sub
call
adc
mov
fmul
mov
or
pop
lret
loope
pop
inc
ret
adc
or
and
and
and
sbb
stos
or
orb
and
stc
popa
inc
loope
in
loop
mov
std
inc
rcll
sahf
inc
jns
in
lcall
sbb
frstor
dec
pop
adc
nop
push
frstor
inc
add
fldl
or
inc
call
sbb
sub
out
xor
add
xorl
adc
inc
sti
dec
add
testl
push
sbb
andb
loope
xchg
add
dec
fwait
push
cmp
or
jne
addb
mov
in
test
add
inc
or
or
and
insb
mov
mov
bound
sub
adc
and
dec
add
pop
xchg
or
mov
inc
cmp
pop
std
pushf
rclb
cmpsl
clc
mov
xorb
stos
seta
jmp
fcoms
ret
ljmp
call
jmp
shld
push
dec
or
or
dec
dec
push
sub
dec
mov
and
xchg
xor
call
or
cmp
pop
xor
or
fldl
fcompl
add
dec
lods
push
ja
fnstcw
mov
outsb
movsl
and
dec
mov
jmp
sub
jno
sbb
lea
jo
mov
cmp
sbb
pop
test
test
fidivl
rcll
pop
sub
repz
and
jbe
inc
inc
lods
and
adc
inc
add
mov
lea
add
adc
into
sti
or
or
jmp
cmpsl
inc
pop
jae
cmp
jl
add
mov
pop
or
orl
or
pusha
inc
sub
sub
test
ds
adc
sbbl
clc
hlt
scas
adc
sbb
sbb
dec
jne
xchg
lret
push
inc
cltd
nop
mov
int3
pusha
pop
xor
adc
mov
push
aam
mov
repnz
pop
mov
je
add
pop
pop
call
loopne
cmp
mov
in
sub
inc
adc
pop
adc
or
xchg
out
das
mov
jne
and
loopne
mov
and
cld
jecxz
dec
mov
xor
movsb
sar
push
cmp
mov
ret
fsubrl
sbb
inc
data16
leave
int3
xchg
clc
adc
je
mov
imul
and
xor
leave
mov
adc
push
push
pop
je
shrl
jl
lods
sbb
loope
lods
xchg
jnp
add
cwtl
adc
js
std
adc
sbb
int3
adc
sub
xorl
pushf
scas
int
add
fldcw
leave
adc
adc
add
cmp
shl
add
dec
test
sub
mov
mov
jg
dec
decb
mov
lret
adc
or
sub
mov
fsubl
pusha
in
pop
int3
movsb
stc
imul
mull
sbb
je
shrb
popf
mov
xchg
xchg
mov
sub
lcall
nop
sub
pop
data16
push
andl
adc
push
mov
outsl
jae
mov
xor
pop
adc
shll
adc
dec
addb
adcl
add
or
jmp
mov
push
pop
out
adc
pop
pop
in
push
ss
das
testb
push
push
mov
xchg
in
push
incb
and
movswl
sub
adc
sbb
ds
lcall
dec
sbb
push
loop
xchg
mov
js
enter
stos
dec
ljmp
insl
cmc
inc
scas
mov
dec
mov
je
fldt
pop
cld
fwait
pushf
or
test
mov
mov
in
adc
lcall
mov
sbb
inc
sbb
fmuls
or
movsb
das
stc
insl
and
gs
sbb
inc
cwtl
sub
enter
jne
dec
int
insl
sbb
call
pop
push
push
imul
cwtl
mov
pop
jmp
dec
outsb
loop
xor
pop
clc
jo
mov
push
rol
jmp
aam
push
mov
sbb
rcl
mov
gs
je
push
pushf
stos
shlb
test
lcall
jne
jmp
stos
pop
add
inc
mov
rorl
leave
jne
pop
mov
mov
push
lret
dec
add
cmp
aad
sbb
or
leave
or
mov
cmp
mov
dec
xchg
mov
or
mov
imulb
mov
dec
mov
je
sbb
adc
call
js
mov
cld
adc
mov
sbb
adc
roll
pusha
je
daa
push
or
int3
sbb
test
setg
push
or
cmp
popl
sub
add
cmp
jne
mov
push
insb
das
pop
push
and
inc
add
xchg
cmpl
arpl
inc
mov
rorb
out
mov
dec
stc
gs
js
inc
cmp
adc
or
mov
cltd
inc
push
aas
push
adc
adc
or
enter
sub
and
jge
adc
pop
sub
adc
add
and
daa
inc
cmp
pop
add
jns
add
and
adc
and
mov
std
ficoml
insl
cwtl
ljmp
mov
pop
add
and
push
inc
cmp
jne
xchg
or
inc
int
mov
pusha
stos
cmp
pop
cmc
xchg
dec
or
xorl
or
add
dec
ret
or
xor
add
in
xchg
cmp
sbb
or
xlat
test
push
xchg
add
pop
xor
clc
xchg
sbb
mov
lock
sub
out
test
idivb
scas
pop
adc
push
or
cld
add
fs
pop
dec
pop
int3
push
adc
push
pop
dec
in
vmovsldup
insl
les
mov
test
mov
xor
sub
aam
repz
jmp
add
and
xor
or
cmp
orl
rorl
add
subl
jge
xor
or
adc
stc
and
push
les
push
arpl
adc
sbb
adc
or
adc
divl
xchg
into
cmc
ss
inc
adcb
push
out
mov
and
out
fs
or
data16
xlat
jmp
mov
jge
push
sbb
mov
mov
adc
js
cld
mov
inc
or
sahf
fs
aas
mov
xor
hlt
add
lds
nop
mov
cmpl
jle
mov
sbb
ds
fisttps
pop
cmpl
dec
outsl
mov
push
push
push
add
sbb
push
ds
add
cmp
das
insl
loopne
out
and
mov
add
movzbl
push
jmp
call
sub
rcl
je
jmp
xchg
sbb
push
and
call
aad
in
out
push
sbb
jle
dec
nop
inc
je
adc
ret
call
inc
add
add
dec
or
dec
push
loopne
add
jle
sarb
mov
ljmp
or
fmull
or
test
aas
mov
cmp
loopne
divps
flds
push
add
cmp
push
rcll
inc
enter
movsb
das
ror
pop
call
jecxz
sbb
inc
mov
fdiv
pop
dec
aam
aad
xor
add
ja
test
inc
jbe
iret
xor
hlt
jle
test
or
inc
addl
clc
mov
daa
and
flds
add
xchg
sbb
cmp
jg,pt
push
jnp
xlat
sub
cmc
rol
jmp
add
ja
icebp
sub
push
xor
inc
push
add
mov
imul
sub
ds
xchg
in
xchg
xchg
insb
or
test
jmp
aad
in
mov
enter
lods
xor
cmpsl
out
pushl
jae
repnz
insb
and
inc
mov
lock
jae
push
jl,pt
out
jl
and
adc
sbb
pop
dec
hlt
push
or
cmpb
push
es
sub
lock
test
add
and
adc
pop
test
sbb
stos
inc
cli
dec
cmpb
lea
cmpsl
inc
pop
in
leave
ret
mov
add
jne
inc
data16
and
push
add
shrd
dec
outsl
leave
mov
subl
and
push
fidivrl
inc
fadds
xchg
or
test
sub
subb
jle
hlt
ja
int
jne
xchg
dec
inc
push
lock
or
add
popa
pop
push
cli
sub
imul
das
movsl
pop
dec
adc
sbb
add
xor
sbb
call
xchg
dec
and
adc
popa
cmpsl
je
cmp
jmp
inc
and
das
sbb
inc
dec
add
dec
push
and
xchg
sbb
sub
dec
jb
add
fists
or
push
lods
inc
fadds
ss
outsl
pop
push
call
aam
sub
push
mov
push
adc
adc
pop
adc
shll
das
and
push
sbb
das
in
aam
xor
iret
fcompl
xchg
dec
mov
or
in
loopne
xchg
pop
aas
test
adc
or
mov
and
movsl
pop
mov
sbb
movsl
inc
cmp
call
push
pop
sub
outsb
imul
daa
out
in
ds
mov
rol
jmp
adc
js
mov
addr16
stos
jg
loopne
add
cmpl
cmpl
and
lret
adc
xchg
test
cmp
lds
sbb
call
mov
xchg
dec
popf
push
jne
cmpl
adc
sbb
rcrl
push
mov
daa
push
rorl
gs
cld
loop
inc
add
shlb
ret
es
sub
pusha
pushf
call
and
cld
shl
mov
push
xor
push
scas
cwtl
xchg
mov
scas
add
push
sub
mov
mov
sub
and
in
adc
fs
xor
push
sub
inc
jae
inc
sub
adc
rcrb
adc
dec
sub
mov
int3
movsl
jle
jg
out
outsb
inc
in
pop
or
mov
mov
xchg
cmp
push
push
add
jb
mov
push
jg
cli
test
pusha
jmp
hlt
sub
test
cli
mov
xor
cmp
inc
or
adc
dec
mov
jmp
lods
sbb
enter
les
int3
test
dec
sub
sub
adc
clc
push
jecxz
stc
xchg
stos
adc
dec
add
adc
stos
or
pushl
lds
out
dec
or
xchg
push
xchg
outsl
dec
in
dec
pop
daa
push
xchg
add
test
jl
or
and
or
mov
mov
daa
push
push
pop
mov
sub
push
mov
shr
fcmove
lods
push
lea
pop
fsubrs
pop
jmp
pop
stc
call
add
call
pop
adc
enter
lds
xchg
inc
pop
pop
push
mov
xchg
pop
mov
xor
jmp
cmp
inc
inc
in
push
xchg
cmp
adcb
jg
ret
push
pop
call
xor
cmp
out
xchg
adc
icebp
pop
sbb
ja
or
cmp
jmp
call
sar
loope
inc
testl
inc
incb
inc
std
push
hlt
ja
shr
ret
dec
or
xchg
stc
adc
dec
xor
add
push
test
or
imul
or
or
and
loope
sbb
pop
or
aas
das
or
rcll
or
das
sar
scas
xchg
jnp
cmpb
pusha
sbb
pop
sub
mov
dec
not
notb
aam
dec
mov
mov
xor
scas
imul
repnz
mov
mov
add
adc
lds
pop
inc
pop
icebp
push
imul
inc
mov
rorb
add
cmp
sub
or
mov
cmp
je
push
call
jmp
push
xor
xchg
dec
and
mov
mov
and
lret
fidivs
inc
sbb
push
aas
pop
jecxz
stos
ja
orw
push
in
jb
push
add
sub
xchg
test
and
dec
mov
inc
cmp
shlb
push
mov
mull
sbb
pop
and
aad
enter
cmp
add
mov
inc
test
push
add
imul
and
mov
xlat
out
inc
lret
lcall
mov
add
pop
fs
dec
add
xchg
xchg
xor
mov
xor
jle
mov
mov
dec
fwait
cmp
movsl
jl
and
dec
xor
xchg
adc
add
push
test
adc
rcrl
ret
fadd
dec
ss
inc
sbb
fadds
test
jl
stos
cmp
test
mov
clc
dec
pop
out
and
xchg
cli
mov
add
jnp
mov
cmpsl
sub
push
out
jo
xchg
dec
xchg
je
jne
adc
mov
add
mov
stc
and
push
shrl
inc
cmp
sbb
mov
or
loope
or
pop
push
lock
fsubr
jb
jle
fs
xchg
push
mov
inc
adc
scas
int
inc
xchg
stos
nop
cltd
and
out
lcall
cmp
push
cld
xchg
enter
xchg
push
ret
push
leave
push
mov
movb
mov
test
pop
jge
sahf
fstp
aam
lret
push
call
dec
jecxz
add
pop
call
lret
mov
add
xor
pusha
or
or
push
call
hlt
mov
pop
pop
or
pushf
mov
inc
jmp
insl
pop
adc
xchg
sbb
ds
clc
movsb
mov
pop
adc
mov
std
xor
mov
mov
pop
add
aas
or
jb
mov
pop
and
mov
and
adc
enter
frstor
arpl
mov
sbb
je
inc
mov
ljmp
dec
cmp
inc
mov
sbbl
add
pop
or
jae
insl
pop
adc
bound
sbb
je
jbe
push
and
push
pop
and
add
inc
xor
dec
jl
jne
outsl
dec
mov
jne
repnz
and
adc
add
inc
rclb
jb
loop
pop
je
hlt
push
bound
ret
sub
mov
aas
pop
daa
pop
ficoms
push
mov
push
xor
push
cld
clc
cmpsb
sbb
jb
xlat
das
js
and
add
add
jmp
pop
leave
or
mov
adc
add
pop
cmp
inc
jecxz
cmp
lcall
insl
repnz
addr16
pusha
jnp
lret
lods
inc
or
hlt
orl
call
xlat
in
xchg
cmp
or
jmp
mov
mov
int
iret
jge
adc
and
les
nop
cld
jnp
sbb
orb
test
jne
or
jmp
call
lock
mulb
push
jne
test
add
or
jmp
clc
ljmp
mov
and
cmp
pop
pop
test
into
test
das
es
gs
rcrb
sbb
jb
lock
dec
or
xor
enter
lret
jge
cwtl
pop
xorb
lock
dec
jo
sbb
or
scas
push
inc
pop
adc
adc
and
inc
aad
jle
mov
int
adc
pop
dec
and
ret
mov
ljmp
shl
call
ds
xor
rcrb
cmpl
sub
lret
lods
cmp
decl
clc
data16
or
mov
lods
aad
push
hlt
stc
imul
pusha
pop
xor
aam
mov
push
push
cli
cmp
adc
push
or
mov
cmp
je
mov
fcomps
jl
xchg
sub
lock
ja
stc
and
push
mov
mov
adc
loop
and
stos
stos
in
movsb
pushf
roll
xchg
and
cmc
jns
orl
lea
decl
mov
pop
stos
and
orb
out
sub
xchg
lea
aad
cmpl
stos
xchg
pop
push
sub
push
add
addb
cmp
ja
or
mov
xor
or
jbe
inc
jecxz
lock
aam
jb
xchg
add
shrl
jo
pushf
push
mov
dec
lods
call
mov
jns
cmp
movsl
xchg
pop
mov
push
cmpl
test
in
xchg
test
pop
popa
mov
call
inc
roll
sti
and
ret
es
stos
add
in
xchg
jne
andb
jne
mov
pop
xor
push
and
popa
sahf
in
or
arpl
cwtl
stc
sbb
jns
xchg
imul
cld
jne
xchg
jp
test
and
sub
and
or
mov
js
sub
adc
adc
push
insl
sub
rol
inc
fldl
mov
add
jno
dec
call
mov
mov
mov
jne
lock
jo
repnz
test
dec
mov
lea
sbb
shll
lock
mov
imul
pop
xchg
ret
or
stos
inc
lds
jne
pop
pop
cmc
inc
lea
mov
and
imul
dec
mov
push
mov
call
inc
cld
in
mov
inc
sub
adc
inc
lret
lea
adc
and
push
sti
rclb
xchg
add
mov
add
and
add
mov
adc
jmp
cmp
xchg
inc
out
or
inc
dec
cmp
sahf
shll
push
dec
pop
ret
xor
adc
or
push
dec
int3
cmp
ljmp
mov
int3
push
movsl
test
push
push
call
std
adc
xchg
sarb
jmp
jne
rcll
lcall
adc
push
cmp
add
pop
sub
xchg
mov
je
xor
xor
push
push
scas
adc
lret
adc
jb
clc
or
andb
xor
inc
add
sbb
fldl
inc
rcrl
pop
dec
pop
in
nop
adc
test
cmp
je
cld
shrb
or
adc
test
and
sbb
add
sub
push
mov
stc
and
adc
adc
test
inc
or
or
jno
xrelease
dec
popa
adc
mov
or
mov
jecxz
jne
cmpl
lea
or
sub
sahf
mov
in
add
inc
adc
add
sbb
pop
or
xchg
push
add
lds
data16
ds
pushw
orl
sahf
sti
insb
out
test
js
push
in
ret
or
aam
addl
xchg
addl
lea
push
in
or
dec
movsl
fs
inc
inc
pop
push
call
es
cmpsl
popa
subl
sbb
jge
mov
leave
bnd
adc
jmp
cmpsb
imul
movsb
jl
push
movsl
dec
in
inc
cld
and
push
or
sbb
jge
loope
mov
sub
rep
aam
je
outsb
and
and
test
jmp
pop
gs
inc
lret
inc
mov
or
cwtl
cmp
lahf
and
ret
and
jle
or
andb
xchg
lea
imul
sti
in
jmp
sbb
lock
or
push
mov
enter
add
inc
push
or
dec
lock
dec
add
pop
mov
lea
mov
addb
jp
sub
jo
pop
mov
and
cmp
int
js
jo
shrl
xchg
ret
dec
xchg
or
and
lock
adc
inc
movsl
clc
and
pop
push
push
popa
notrack
dec
sub
jmp
enter
sbb
adcb
test
nop
lds
jge
dec
jle
les
test
push
xchg
jp
dec
sbb
in
dec
jmp
rorl
and
sub
fwait
jp
call
f2xm1
xchg
or
lock
and
enter
fucomip
xor
incl
add
andl
into
xchg
or
daa
test
in
dec
adc
mov
out
mov
xchg
in
dec
bound
push
cmpsb
les
fdivrs
divl
inc
or
jle
repnz
mov
mov
fisttpl
mov
enter
dec
sbb
or
cmpsb
mov
adc
xchg
xor
sub
xorb
lea
push
lds
decl
jno
je
jmp
pop
dec
inc
outsb
test
push
lea
je
or
mov
repz
sbb
add
ret
rcpps
repnz
dec
inc
jae
test
nop
aad
adc
rdtsc
mov
cltd
ss
sbb
adc
jmp
les
and
jl
sbb
mul
inc
mov
out
sahf
in
or
push
mov
add
or
fcmovb
repz
push
stc
lock
dec
xor
add
adc
sti
pop
adc
hlt
xlat
add
inc
inc
xor
bound
ret
aad
out
mov
push
test
out
pop
sub
scas
enter
jmp
mulb
push
arpl
mov
adc
xchg
inc
fcomp
pop
add
aas
sub
sarl
shlb
enter
dec
add
neg
adc
cmp
inc
rcl
test
pop
inc
or
mov
push
xor
push
or
or
dec
mov
push
jecxz
loop
out
in
adc
sarb
xchg
test
jae
or
adc
xor
je
ret
call
pop
mov
ja
mov
pop
dec
adc
jo
sti
dec
addr16
mov
ret
clc
das
mov
das
mov
adc
es
pop
jge
mov
mov
sti
and
pop
icebp
jno
push
mov
and
loop
sbb
or
call
rcrl
test
adc
push
clc
push
rol
in
adc
or
mov
repnz
das
push
push
mov
or
bound
inc
jl
aas
popa
addr16
ret
pusha
jmp
dec
nop
mov
add
jmp
das
push
movsb
push
xor
and
fcmovnu
pop
or
pop
add
or
mov
or
notb
bound
dec
bound
mov
push
or
fistpl
mov
rcll
lret
lea
mov
dec
daa
inc
sbb
or
jne
bound
cmp
add
jo
or
and
cmp
test
dec
cmp
aaa
cmp
inc
and
mov
add
cmp
mov
lcall
rcrl
mov
fcompl
sti
dec
sti
push
and
pop
mov
or
and
add
nop
inc
cmp
test
je
out
pop
in
and
rolb
jae
cmp
jne
jp
aaa
dec
pop
or
and
and
pop
je
dec
sub
jp
cwtl
notb
xor
les
stos
subb
jne
mov
and
adc
inc
adc
inc
and
dec
and
stc
out
insb
ja
ds
or
and
sbb
ja
cli
push
add
and
fsubrl
cmp
mov
mov
jl
xor
push
cmp
je
cmp
repz
or
fidivrs
cmp
mov
fistl
repz
or
xchg
xchg
or
call
cmp
je
push
push
xor
cmpsb
jne
andb
aas
xchg
and
imul
loope
adc
or
jg
dec
leave
mov
jge
xor
std
jo
leave
pop
std
dec
test
insb
in
pop
pop
sbb
ret
mov
mov
and
mov
mov
cwtl
sub
mov
mov
add
cmp
lahf
add
into
push
xor
cmp
loope
cmpsl
dec
stos
dec
or
dec
and
mov
or
sahf
dec
xchg
pop
push
ss
push
adc
dec
mov
push
popf
sbb
fldcw
cmp
or
jne
sbb
dec
daa
jne
cmpsl
aad
add
pop
inc
or
lods
sub
pushf
pop
inc
mov
inc
xchg
cli
cmpb
sti
je
cmpl
jno
adc
mov
inc
inc
or
aad
jmp
push
or
sub
cmp
inc
dec
adc
aas
mov
and
jo
iret
int
push
in
int3
adc
decb
mov
dec
rcrb
sbb
push
sub
add
push
mov
cld
add
inc
shll
pop
jne
add
shr
test
and
sbb
lea
cmp
mov
jmp
jo
jbe
movsl
cld
push
add
sete
testb
lock
push
push
inc
mov
pop
mov
adc
addl
adc
mov
fidivrs
inc
cs
push
sbb
leave
push
xor
mov
mov
int
sub
jne
and
push
jg
push
pop
syscall
enter
dec
fucomp
insl
push
ljmp
jle
jle
sub
pop
xorl
daa
or
add
repz
pop
dec
inc
fxch
out
or
cmp
sbb
ljmp
jb
subl
inc
push
inc
ret
cmp
je
in
jno
ret
jne
nop
pop
repnz
xor
dec
sar
ret
popl
push
pop
imul
call
pusha
cmp
jmp
xor
jae
data16
push
jmp
cmp
sub
je
fwait
les
inc
pop
imul
jmp
imul
mov
je
popa
popa
loope
cmp
add
ss
into
inc
or
iret
pop
or
mulb
mov
les
mov
adc
xchg
xor
inc
outsl
push
fsubrl
xchg
test
xor
clc
ss
bound
push
imul
loopne
rclb
or
jae
sbbb
mov
inc
adc
or
stos
sbb
jmp
lea
scas
bound
push
cmp
cmpsl
mov
push
xchg
sbb
rcr
rorl
dec
mov
lret
out
cmp
add
mov
and
add
cmp
lea
sbb
inc
add
add
dec
inc
jl
aad
orb
xor
jle
les
in
ss
mov
dec
in
cs
jne
movsl
cmpsb
xor
into
iret
cmp
fiadds
jge
testb
add
cmp
jl
bound
in
cmp
sbb
jne
test
inc
add
mov
pop
lods
std
pop
ret
dec
mov
xor
test
pop
push
jb
or
shlb
roll
orb
bsf
add
pop
or
cmp
add
mov
xchg
stos
cmpb
xor
pop
cmp
mov
inc
or
cld
in
jb
lock
fstps
dec
mov
and
mov
clc
inc
enter
jnp
jge
cli
popa
shlb
mov
push
push
clc
imul
call
pop
lret
xchg
push
xor
dec
or
jno
xchg
sub
cmp
or
mov
push
test
call
add
lods
or
jns
push
jnp
fnstenv
jmp
imul
pop
xor
andb
lods
das
hlt
int
push
sub
inc
sbb
popf
or
and
and
mov
pushf
or
daa
cmp
in
push
sbb
or
pop
xor
xchg
dec
hlt
pop
leave
sarl
or
cmpsb
arpl
or
test
mov
push
mov
xchg
sbb
out
and
fs
scas
aam
jecxz
fldenv
xlat
adc
inc
icebp
lea
inc
mov
arpl
sbb
call
test
jg
lock
mov
xor
int3
cmp
sub
and
or
cmpl
xor
test
movsl
mov
pop
inc
xchg
mov
adc
adc
sub
push
inc
inc
clc
mov
stos
aam
pop
and
mov
ficoml
adc
or
sub
pop
jmp
mov
fmul
xorb
rorb
hlt
ss
dec
mov
mov
into
data16
add
add
mov
int
and
rcll
mov
add
inc
dec
xor
outsl
sbb
rcll
cld
fmuls
leave
mov
mov
out
push
or
mov
and
in
cld
orb
and
out
in
sti
or
cld
jae
pop
or
push
inc
mov
stos
mov
movb
inc
mov
enter
sub
lret
mov
or
icebp
jp
mov
push
push
hlt
scas
in
cwtl
mov
out
add
pop
or
xor
in
adc
leave
pop
add
push
pop
shll
dec
sub
mov
loop,pt
xchg
xorb
lea
dec
hlt
fcoml
inc
or
rcll
das
pushf
and
cmp
je
movl
adc
mov
mov
leave
flds
scas
jns
or
push
adc
test
inc
shrb
push
sbb
imul
adc
add
enter
adc
popa
add
into
add
sbb
jb
push
push
cli
dec
xchg
pop
pop
enter
xchg
lds
inc
xchg
je
imul
rcrb
sub
ja,pn
sub
xchg
push
ss
xor
ret
or
ss
jne
jmp
in
dec
and
and
adc
sub
outsb
inc
mov
adc
push
aam
stos
hlt
pop
cmp
notb
xchg
sbb
outsl
mov
sbb
and
pop
sbb
cmp
imul
and
mov
jle
nop
rcll
adc
sub
popf
pop
lea
push
out
insl
jge
cwtl
inc
sub
jb
cmp
xchg
test
ds
aas
hlt
addb
mov
lret
adc
push
xor
add
movsl
sub
lcall
ret
push
inc
jae
or
add
shld
shl
aaa
pop
rcr
repz
shl
adc
rcrb
lock
push
popf
int3
fs
inc
stos
push
mov
push
loop
lock
cs
dec
mov
mov
cmp
leave
or
insb
mov
int
pop
and
xor
inc
psrlq
ljmp
sbb
out
and
cmpsl
ret
jns
loope
bound
xlat
sub
jg
cmpsl
cmp
not
and
or
fisubrs
das
rcl
stc
rcr
insl
lds
pop
mov
push
dec
stc
mov
xchg
cmpsb
push
ret
inc
push
addr16
adc
add
mov
adc
jns
and
add
fsubl
daa
inc
push
add
movzwl
xor
rcrl
hlt
stos
mov
mov
cmp
mov
add
jne
jmp
pop
je
push
add
pop
add
lea
pop
add
pop
pop
pop
js
xchg
push
push
jnp
xchg
jae
mov
or
and
aam
nop
mov
cwtl
mov
mov
enter
cmp
sbb
or
or
popf
and
lcall
push
jne
or
mov
xor
inc
xor
pop
idiv
fs
xchg
bound
jl
fists
test
mov
jb
dec
jle
rolb
inc
hlt
incb
adc
xchg
push
sahf
sbb
mov
jl
push
mov
dec
sbb
adc
jp
lea
mov
pop
pop
imul
aaa
call
inc
dec
js
lods
cmp
int3
inc
add
fmull
pop
idivb
push
gs
pop
shll
xchg
mov
pop
add
xor
adc
movsl
mov
mov
sub
pop
mov
inc
mov
inc
xchg
xchg
jge
jge
pop
push
jg
stos
dec
cmc
icebp
mov
mov
pop
and
add
cmc
lahf
add
enter
push
xchg
or
lea
mov
mov
add
sub
stc
fwait
sub
mov
add
mov
test
push
and
xchg
sub
adc
or
or
iret
push
push
push
and
lahf
rolb
and
out
sub
daa
rclb
and
fisttpl
jmp
and
insl
lret
bound
dec
jne
xchg
out
mov
cwtl
hlt
sbb
testl
enter
push
cmpps
lock
fldpi
dec
addr16
stos
jmp
mov
int
xor
std
fnstenv
and
daa
outsl
out
or
hlt
add
xor
mov
and
jmp
aas
mov
and
daa
add
testl
stc
sti
les
out
fldt
and
decb
cmc
add
pop
jmp
jp
outsb
mov
inc
ja
dec
and
cmpsl
or
add
inc
jg
enter
dec
or
icebp
or
sbb
cmp
fdivrs
aas
sub
xchg
xor
adc
or
scas
dec
pop
fcomip
mov
and
xchg
pop
push
and
cmp
mov
movsl
pop
push
dec
xor
pop
mov
pop
ja
cmp
add
pop
mov
mov
andb
jg
add
repz
imul
jg
and
call
cmp
icebp
dec
clc
dec
adc
inc
sbb
cs
ss
sub
or
shlb
xor
insb
adc
sub
sub
xor
insb
dec
and
mov
sbb
pop
pop
adc
push
inc
or
mov
adc
leave
sub
xchg
cmc
in
stos
pop
ret
pop
das
lea
jle
movb
aas
test
mov
pop
push
scas
xchg
push
jg
mov
pop
mov
mov
jmp
mov
adc
cmp
push
call
jmp
jo
clc
ds
xor
incl
lock
call
pop
sbb
adc
dec
jno
insb
add
dec
and
nop
aaa
call
ja
aaa
adc
mov
movsl
pop
data16
call
mov
sbb
in
push
or
mov
push
or
pop
or
cmp
daa
jmp
data16
inc
or
mov
xchg
and
icebp
and
mov
fisubrs
cmp
mov
in
add
je
outsb
adc
sub
mov
mov
and
add
jne
mov
fdivrs
jmp
enter
jo
cwtl
mov
scas
adc
enter
xcrypt-cfb
cmpsl
loop
mov
into
pop
adc
add
fcmovb
jmp
or
lea
adc
jp
cwtl
mov
jmp
adc
or
xchg
mov
push
aas
fdivs
popf
push
jmp
mov
dec
adc
daa
push
and
or
stos
add
lods
pop
das
pop
or
cmp
inc
sahf
or
sub
mov
iret
js
adc
and
gs
xor
sub
or
lea
push
cmp
shrl
cli
js
ja
push
jae
popf
jns
push
add
loope
jp
call
sbb
mov
gs
mov
mov
inc
rcrb
bound
jmp
test
in
jecxz
push
sbb
and
into
xchg
leave
pop
mov
das
and
imul
xchg
jp
int
movsb
xor
jmp
xchg
cmp
pop
sbb
and
test
mov
mov
int
call
scas
je
dec
lock
testl
add
fcoml
into
or
negb
sub
xchg
loopne
pusha
dec
cmp
sbb
xor
rorb
sub
popf
ret
insb
or
mov
and
inc
ret
jl
dec
hlt
ffreep
cwtl
xchg
jne
iret
nop
sub
outsl
xor
push
fadd
push
inc
jle
and
cld
inc
call
xchg
xor
adc
cmp
loopne
adc
add
jmp
ds
dec
fbld
das
push
sbb
into
jbe
sub
test
cmp
aas
adc
push
push
cli
add
dec
ret
imul
or
mov
notb
or
mov
add
bnd
jno
or
or
or
cmp
dec
pop
mov
inc
adc
cmpl
scas
dec
xor
enter
into
add
daa
pop
dec
push
loopne
or
divb
inc
shl
mov
sahf
testb
rcrb
jno
pop
out
jns
and
aas
enter
and
mov
adc
jno
jns
sub
imul
dec
mov
roll
dec
test
or
cld
call
cwtl
nop
cmp
lahf
mov
lret
adc
xor
inc
sarb
dec
xlat
in
sarl
fdivs
and
sub
xchg
sub
pop
adc
sbb
cmpsl
xor
adc
das
sbbb
clc
int3
je
or
ljmp
les
sbb
lock
inc
xlat
inc
ja
or
sti
ret
int
mov
add
lds
mov
xor
inc
sub
iret
adc
xor
add
mov
clc
dec
xor
adc
cs
inc
add
adc
add
push
jmp
test
mov
add
test
je
lock
and
adc
cmp
mov
test
inc
mov
mov
mul
les
js
push
or
xchg
and
or
sbb
imul
pusha
fstp
cwtl
dec
lods
repnz
sbb
jmp
push
rcrb
lods
das
negl
lret
dec
push
pushf
nop
jne
sbb
mov
and
xchg
and
jmp
aad
adc
data16
or
movsb
xchg
cmpsl
or
or
cmp
xor
lret
or
mov
add
jp
repz
cli
add
add
js
cwtl
cmp
cmp
dec
xchg
adc
mov
and
fnsave
aas
sub
push
xchg
sbb
dec
aam
mov
subb
mov
or
adc
mov
jge
push
ret
fcoml
sbb
shrl
push
mov
out
movsl
cmc
dec
or
xchg
hlt
decb
sub
push
xor
xor
push
stos
inc
sbb
call
mov
mov
in
push
push
mov
jg
aas
mov
or
pop
cmc
bound
cld
sbb
and
cmp
mov
int3
or
cmp
or
mov
mov
icebp
imul
loop
sub
inc
adc
pushl
and
or
into
push
inc
mov
orb
test
hlt
aas
push
or
aas
mov
xor
gs
push
mov
adc
insb
pop
and
pusha
aas
lret
or
push
inc
aas
gs
clc
dec
cmp
repnz
fsubr
mov
mov
jmp
ds
mov
push
push
call
fsubs
xor
rclb
jp
mov
imul
jmp
in
stos
xor
mov
insl
inc
xor
out
icebp
lahf
je
sbb
xchg
push
cmp
sub
pop
xchg
xor
jo
imul
jl
dec
lock
sub
pop
cmp
jl
cmpb
add
jmp
pop
push
xlat
xchg
push
inc
test
fs
sub
repz
mov
sub
std
notl
sbb
call
outsb
rclb
out
push
test
inc
jecxz
mov
insb
bound
push
les
push
and
lahf
adc
inc
fstps
inc
adc
add
adc
inc
sbb
imul
mov
dec
push
xor
adc
sub
sbb
enter
sbb
jne
xchg
adc
push
push
sbb
adc
push
or
adc
lds
adc
xor
sub
sub
lds
or
in
and
xchg
adc
push
ret
mov
push
push
fimuls
sub
inc
pop
pop
push
cmpsb
and
inc
and
jmp
movb
lea
repnz
jg
mov
adc
add
inc
jnp
pop
mov
adc
or
jge
ror
comiss
add
mov
sub
rcrl
adc
mulb
repnz
sub
push
add
sub
dec
push
scas
mov
cmp
xor
inc
insb
or
popf
dec
shll
and
add
push
addb
push
mov
andl
fldl
or
jmp
or
dec
mov
imul
call
pusha
clc
xor
push
add
hlt
test
sub
cltd
divl
sbb
jge
mov
pop
sub
add
movsl
mov
fs
xchg
or
add
or
fs
adc
cmp
jle
cmpl
pop
stos
sbb
loopne
test
jg
add
jge
popa
mov
push
cmpsl
add
ss
pop
sub
std
xor
xor
push
sub
bound
jns
rcrl
or
lahf
loope
push
inc
mov
test
inc
dec
lcall
mov
push
fstpl
loopne
fidivs
lcall
xorl
movsb
es
jp
mov
in
inc
rclb
mov
and
into
pop
inc
sbb
adc
ljmp
jne
or
xor
lock
clc
xchg
xchg
add
sti
outsl
cwtl
sub
das
testb
jp
js
pop
and
adc
inc
mov
adc
pop
and
xorl
inc
jbe
jp
xchg
and
push
stc
and
mov
xor
adc
mov
dec
les
lahf
fs
jne
ret
pop
pop
push
test
adc
lock
fistpll
in
sbb
stos
xchg
fs
sub
addb
or
jp
icebp
iret
sbb
sbb
aam
push
movsb
test
sub
adc
mov
mov
xor
pop
or
xlat
adc
call
mov
xor
adc
add
lahf
and
and
xlat
xchg
mov
lea
cli
popa
pusha
jae
pop
xor
pop
das
mov
push
je
jl
dec
test
shrb
jbe
pushf
leave
fsubl
dec
das
es
call
cli
ret
pop
out
ja
xor
dec
xchg
dec
lret
addr16
mov
popa
into
add
mov
lea
aas
shr
or
hlt
mov
jo
cmc
ljmp
mov
negb
repnz
stc
jb
cmp
or
mov
sbb
stc
ljmp
pop
das
mov
mov
push
jbe
or
push
mov
inc
push
add
or
sub
lea
movsl
pushl
call
lcall
add
test
movsbl
je
inc
sbb
cmp
shl
mov
enter
loope
movsb
push
loop
mov
push
inc
test
and
out
jmp
loope
adc
movsl
mov
dec
jae
add
jmp
mov
adc
and
mov
loop
pop
leave
orb
adc
adc
movsb
lahf
mov
frstor
rcrb
inc
call
nop
push
fsubl
loopne
aam
and
std
pop
push
outsb
and
or
push
or
jnp
inc
jmp
add
lock
or
ja
test
faddl
push
sti
xor
push
cmp
push
ss
in
pusha
fstps
add
mov
sub
push
dec
pushaw
sub
add
push
push
xorb
nop
into
pop
jmp
cmpsl
cld
dec
insb
and
sahf
rcrb
add
dec
or
mov
mov
cmp
sub
inc
push
inc
or
mov
jle
or
sbb
xchg
xor
jmp
dec
push
or
rclb
cmpsb
or
dec
dec
push
lcall
adcl
sbb
adc
ret
js
and
add
push
mov
dec
jmp
sub
daa
pop
xchg
adc
jae
pop
in
lds
out
loop
jne
les
mov
sbbl
mov
or
and
push
in
xor
xor
mov
add
mov
or
adc
push
in
sbb
inc
lds
cmp
dec
incb
mov
enter
fs
add
mov
and
add
addr16
insb
jmp
sub
and
push
pop
dec
adc
mov
inc
jmp
sarl
ss
mov
shrb
push
push
pop
jmp
and
sbb
xchg
jmp
fisttps
adcl
imul
jl
sarl
inc
loop
cmc
les
jae
repz
jp
xor
mov
mov
xchg
mov
rorb
cmp
sbb
cmp
cmp
jbe
addb
mov
fildll
int
hlt
dec
imul
adc
push
xchg
sub
repnz
rclb
shlb
sti
enter
xor
shlb
adc
fadds
dec
sub
loopne
xor
sbb
movntps
jle
and
aam
mov
out
pop
in
push
push
out
pop
addb
adc
les
add
pop
cmp
in
fwait
and
mov
jge
je
cmp
push
in
ret
sbb
sti
jmp
fdivl
shr
jp
stos
or
and
rolb
shl
mov
jno
xchg
pop
add
lcall
adc
sbb
adc
and
add
inc
add
and
xlat
rorl
jmp
mov
leave
xchg
mov
dec
mov
push
pop
push
and
or
mov
adc
and
dec
ljmp
out
inc
sti
out
dec
aas
stos
bound
inc
add
sub
leave
sbb
shlb
push
or
sbb
cmp
adc
sbb
or
add
add
jmp
loopne
jp
mov
loope,pn
clc
cli
push
sbb
sub
sti
push
push
inc
xchg
je
adc
mov
and
push
cs
packuswb
daa
popa
sbb
lea
pop
lret
roll
outsb
shrl
in
sbb
add
xchg
iret
sub
add
sbb
adc
dec
xchg
out
or
roll
push
cli
imul
dec
pop
jge
dec
mov
in
mov
scas
add
repnz
xor
jnp
jbe
call
data16
jb
and
in
sbb
pop
add
in
testb
nop
xor
sbb
insl
add
add
in
lahf
and
std
adc
xchg
jne
decl
aas
aaa
sti
stos
and
es
call
dec
sbb
jne
mov
fiadds
jle
dec
sbb
repz
out
fisubl
inc
lcall
adc
jne
jb
adc
call
in
push
or
mov
cmpsb
mull
mov
mov
jl
and
js
mov
jne
push
inc
pop
mov
out
add
xor
xor
push
shll
out
mov
dec
icebp
mov
inc
sub
decl
sub
mov
push
fimuls
pop
cli
mov
fs
or
xor
push
cltd
hlt
pop
fnstenv
add
xorb
arpl
sarl
insl
fdivs
or
dec
push
inc
pop
add
push
imul
clc
adc
adc
add
cmp
adc
add
and
push
call
into
jo
jbe
mov
cmp
and
add
sti
jo
sbb
xchg
jb
call
push
lds
stc
sti
xchg
aam
adc
mov
jg
and
in
and
adc
mov
or
sub
mov
push
lea
adc
jecxz
test
andl
ret
dec
jne
push
test
dec
push
cld
cli
push
sub
pop
xchg
adc
lods
push
movsl
mulb
sub
insl
cli
nop
adc
push
adc
nop
dec
hlt
out
rclb
je
repz
mov
push
mov
and
fs
psadbw
clc
push
and
mov
nop
dec
iret
lret
cmp
mov
js
and
lahf
dec
stos
push
fs
outsl
mov
adc
cmp
add
leave
xchg
xchg
iretw
mov
or
xchg
cwtl
rorb
lods
ljmp
push
sub
and
dec
sbb
xlat
divb
inc
add
xlat
pop
les
call
push
dec
inc
jge
adc
ss
or
dec
ljmp
jl
push
dec
sbb
or
adc
imul
or
pop
or
mov
fs
mov
dec
xchg
sbb
out
sbb
mov
ss
xlat
ja
dec
rcrl
mov
sar
mov
psrlq
jbe
andb
cmp
cmp
push
sub
sub
add
xor
lea
add
ljmp
mov
or
insb
push
sub
mov
inc
or
movsb
fbstp
sbb
and
test
and
cmp
aad
or
mov
jg
lods
xor
std
mov
jp
aas
mov
sbb
loop
pop
test
loope
mov
inc
xchg
push
cmpl
and
xchg
xchg
push
test
push
add
cmp
cmp
mov
aad
les
jmp
mov
cwtl
cs
or
add
shrb
mov
leave
shrb
fs
mov
sbb
or
scas
rol
cld
sbbl
add
xor
je
mov
stc
addr16
add
hlt
movsl
shlb
cld
adc
pop
jg
addl
dec
add
jle
div
out
inc
lds
jns
and
mov
pop
adc
push
rorl
jae
sub
mov
add
mov
icebp
outsb
xchg
mov
movsl
inc
icebp
inc
mov
jne
sub
movsl
cmp
add
cmp
ja
mov
jle
dec
icebp
ss
xor
sub
gs
cmp
push
fdivl
push
out
scas
or
imul
insl
hlt
cmc
loop
hlt
sbb
mov
mov
pop
sti
dec
or
xchg
dec
add
or
sbb
push
xchg
jmp
cmp
fbld
xlat
xchg
inc
mov
and
es
pushf
inc
or
mov
jmp
cmp
xchg
and
sub
ret
pop
adc
jne
jno
into
andl
add
xchg
loope
add
loopne
mov
lea
pop
ret
pop
jb
or
inc
notb
scas
shlb
xchg
cmpsb
leave
mov
imul
shll
into
test
or
xchg
sti
ds
leave
push
xchg
and
push
pcmpeqw
push
jl
push
push
sbb
nop
test
in
xor
pop
pop
ret
lret
lea
jmp
jns
cmp
gs
negl
idivb
orl
sub
insl
fs
mov
pusha
je
dec
pop
sbb
push
mov
cmpsb
addl
push
lds
lea
ds
push
inc
loop
stos
and
int
cli
lret
lods
fwait
dec
test
push
jne
jmp
fdivl
fsubs
pop
xor
push
mov
mov
jne
push
mov
daa
bound
clc
cmp
cmp
sbb
or
mov
lea
mov
pop
daa
add
repz
jg
call
jbe
mov
cmp
xlat
sub
push
pop
orb
xor
sbb
push
jns
into
fsubl
and
popf
loop
pop
out
cmp
cmpsl
comiss
jns
loope
js
daa
jge
rolb
loope
insb
inc
cmp
jg
mov
pop
repz
adc
push
sbb
mov
les
jb
ds
cmp
je
pop
iret
or
rcl
test
test
or
or
jb
test
jbe
inc
stos
dec
addr16
add
xor
les
push
jbe
xor
pop
and
or
dec
push
loop
fdivl
xchg
iret
loop
cs
cltd
das
out
das
sbb
jnp
les
sub
rorl
push
push
pushf
pop
test
xchg
sub
imulb
sbb
mov
jns
in
and
and
dec
sub
test
out
sub
inc
bound
sub
ficomps
fcmovne
in
pushw
je
adc
dec
xlat
mov
cs
fsub
pop
dec
inc
mov
das
jmp
pop
or
cmp
add
jae
mov
aaa
es
mov
loopne
cvttps2pi
mov
imul
add
lods
mov
sbb
notb
sub
in
and
adc
cmp
bound
fmull
cld
popa
sbb
mov
movsb
xor
jne
aaa
loope
es
les
bound
cld
mov
rorb
sahf
arpl
andl
loopne
xor
pushl
lea
call
inc
adc
inc
jmp
sub
jnp
pop
cld
fcoms
outsl
mov
jmp
mov
xchg
jl
jne
cwtl
test
and
jle
mov
jo
cmp
push
dec
sub
inc
push
repnz
push
or
andl
lcall
mov
es
xchg
dec
addb
popa
xlat
mov
xor
jbe
outsb
sub
xchg
mov
outsb
add
neg
sbb
mov
outsl
imul
les
sti
aam
out
dec
and
sub
push
cmp
sti
cld
jb
or
cmp
inc
sbb
das
xlat
vmovntps
mov
adc
adc
test
xchg
or
and
lea
mov
jge
pop
mov
or
divb
addr16
ja
push
out
ljmp
or
xchg
adcb
add
pushf
xchg
or
stc
jmp
jmp
mov
push
out
or
push
sar
adc
mov
cmp
cltd
mov
xchg
adc
stc
inc
rcll
int3
pop
jecxz
push
mov
sbb
fisubrs
and
cmp
ds
out
and
aaa
push
adc
inc
mov
movsb
mov
or
push
mov
fsubp
or
pop
aad
into
inc
push
mov
test
pop
or
popf
lods
test
popf
jge
int3
add
call
sub
sub
jns
call
mov
push
pop
mov
jnp
imul
incl
push
int
les
sahf
push
push
push
adc
arpl
or
pop
mov
or
icebp
pop
push
cmp
in
dec
movsb
pop
xor
or
and
or
out
mov
or
pop
call
xor
push
xor
add
cmp
or
sub
aas
pop
mov
lods
push
mov
xchg
insb
loope
push
xchg
in
mov
xchg
lock
mov
mov
and
jle
push
cmpb
push
dec
int
data16
cmp
dec
out
lods
imul
icebp
push
rclb
daa
add
and
aas
adc
mov
adc
fs
and
pop
out
mov
sub
popa
nop
and
dec
loop
loopne
inc
inc
test
inc
outsl
adc
enter
and
nop
aas
test
nop
js
imul
mov
loop
and
aam
rclb
ljmp
and
xor
pop
or
lods
inc
loope
std
decl
test
faddl
adc
test
enter
add
in
bound
and
pop
cmp
test
ret
push
jo
xchg
add
orb
adc
fcoms
or
push
mov
ret
test
out
dec
negl
pop
pop
jbe
and
xchg
xchg
or
mov
inc
jp
out
push
icebp
xchg
in
mov
loop
dec
mov
and
jo
pop
inc
repnz
inc
cmp
pop
jne
sub
call
out
adc
lret
dec
scas
bound
dec
daa
adc
or
add
je
pushl
jl
aaa
mov
jp
mov
mov
sub
cwtl
xchg
pop
push
adc
rcrb
rcr
and
shrb
test
push
sarl
mov
jge
add
pop
in
hlt
xchg
inc
stc
inc
in
mov
fisubrs
adc
and
add
adcb
out
shl
je
call
push
bound
pop
jmp
push
adc
and
iret
adc
sub
sbb
addb
or
in
fldt
mov
nop
sub
fldenv
rclb
and
cltd
lock
nop
sub
mov
inc
adc
dec
inc
mov
popf
aas
adc
sub
mov
add
add
add
scas
add
inc
inc
push
and
jne
in
push
in
xor
xor
je
and
adc
jne
push
popa
out
sarl
fistl
ja
stos
sbb
push
inc
and
sbb
and
mov
sbb
sub
add
out
mov
les
add
movsl
arpl
add
mov
push
pop
movsb
mov
aad
fcomp
rclb
or
pop
sub
mov
mov
repnz
mov
test
add
sbb
in
insl
push
mov
hlt
add
test
adcl
adc
shrb
std
add
leave
mov
add
fldcw
and
add
enter
pop
adc
imul
push
addr16
add
aam
dec
add
test
movsl
cmp
test
xor
leave
add
lods
jecxz
fdivs
add
filds
or
cmp
fldenv
jo
sbb
push
addb
mov
and
les
mov
mov
sub
mov
or
and
or
das
adc
stos
sbb
sub
add
jbe
jno
add
adc
out
mov
mov
push
movsl
in
lahf
add
aam
call
cmp
add
mov
add
loope
or
add
xchg
insb
fs
add
out
push
imul
popa
call
test
pop
repnz
xchg
push
sarb
add
add
hlt
or
add
fnstenv
adc
ljmp
cld
add
sbb
ficoml
mov
aam
pop
popa
adc
cmp
mov
aam
movsl
fisttps
xchg
pusha
fadd
shll
push
imul
inc
mov
rolb
mov
add
in
sbb
or
fnstsw
add
cmp
adc
or
and
mov
outsl
rorb
aam
add
push
stc
fiadds
pop
cwtl
leave
fldcw
and
test
pop
cmp
or
mov
add
and
mov
popf
add
mov
cmp
push
ljmp
fildl
add
fdivl
or
test
cmp
push
or
jp
iret
push
in
decl
xchg
daa
jo
add
mov
pop
jge
rorb
lock
mov
add
incb
ret
pop
push
test
jno
insb
sbb
imul
jbe
aam
loopne
roll
mov
ficoml
int3
dec
fstpl
stc
inc
out
mov
pop
aad
mov
pusha
call
xchg
shll
cmp
fisttps
ds
cmpsb
fldl
mov
dec
add
mov
fisubrl
or
or
pusha
jp
sbb
fists
addr16
mov
jns
mov
popa
lret
sbb
andl
shrb
ss
push
int3
add
inc
or
das
add
add
lds
mov
mov
add
mov
pop
cmpsl
call
ret
rolb
mov
sahf
fldcw
mov
fs
es
pushf
add
insl
add
aas
ss
jmp
addr16
sbb
adc
add
adc
jp
loop
sub
mov
fwait
mov
xchg
or
mov
fdivrl
or
loope
xchg
fdiv
clc
add
ficompl
int
push
mov
mul
sbb
mov
roll
out
xor
add
dec
cmp
pop
push
or
adc
gs
cmp
rcll
insb
push
js
or
mov
push
addl
ret
cmp
add
pusha
rorb
imul
ds
push
add
or
add
cmp
aaa
push
lock
mov
inc
jmp
sbb
mov
jns
add
mov
add
add
xlat
int
push
ficoms
fldenv
jp,pn
mov
add
les
sbb
xchg
add
outsl
sub
mov
mov
rcr
pop
out
add
or
aas
test
imul
xor
add
adc
add
add
add
push
loope
and
cmp
pop
cmp
or
xor
jl
and
sub
ljmp
jo
js
add
inc
sbb
lea
repz
add
outsb
shll
xchg
add
sti
sti
push
pop
pop
jns
or
sub
or
js
cmp
insl
outsl
push
fs
aas
push
adc
bound
and
andl
aas
pushw
push
test
adc
jb
arpl
arpl
test
outsl
ss
notl
arpl
std
or
popa
sub
cmpsb
or
sti
inc
dec
xor
push
push
xor
movsb
or
sbbb
sarb
push
inc
adc
dec
jae
jb
outsl
mov
mov
fidivl
shll
ficomps
outsb
test
int3
dec
xor
push
push
push
adcb
lcall
or
mov
adc
or
mov
popf
adc
jmp
sahf
sbb
mov
and
or
jae
pop
lcall
das
scas
into
and
xchg
sub
jecxz
out
or
add
lret
int
iret
cmp
dec
imul
dec
daa
js
dec
dec
inc
dec
pshufw
or
add
xor
cmp
adc
insb
cwtl
pop
je
push
push
lret
jge
stc
fnstsw
sbb
cld
sub
and
inc
aaa
and
out
ss
push
jne
push
mov
jp
pushf
inc
cmp
leave
pop
or
jae
outsl
inc
je
outsl
and
dec
jbe
and
inc
inc
push
iret
insl
sbb
inc
push
sub
xor
stc
pop
movsb
push
or
mov
add
and
jno
xor
pop
clc
jb
jo
mov
inc
pop
dec
and
outsl
call
xor
popf
sbb
sbb
add
ds
insl
aas
inc
lods
in
inc
shlb
and
imul
sbb
or
push
mov
and
jo
andb
insl
inc
xchg
incb
mov
push
in
and
push
dec
insl
in
pop
sub
cmp
or
jae
pusha
mov
rcr
push
addr16
or
cmp
daa
lret
dec
and
test
cmp
sub
scas
repnz
push
outsb
mov
mov
jns
sub
inc
pop
pop
and
cmovbe
and
push
aad
cmp
inc
cs
dec
loope
dec
pop
imul
jbe
inc
lret
add
or
dec
mov
push
mov
inc
jb
sub
popa
rolb
and
aam
dec
faddl
aas
or
in
dec
push
insb
stc
inc
loop
gs
dec
xchg
pop
dec
outsl
jbe
sahf
hlt
mov
je
pop
inc
inc
rclb
loop
xchg
jne
adc
adc
out
fs
xchg
dec
inc
daa
popa
addr16
mov
call
mov
insb
inc
ret
push
dec
inc
in
or
dec
inc
test
or
cmpsb
xor
shlb
shr
push
inc
or
in
mov
rclb
andl
dec
push
xorl
push
adc
les
inc
movsl
in
dec
pop
arpl
rclb
pusha
out
lea
xchg
bound
xor
and
xchg
jns
xor
ljmp
cmp
lods
push
add
bound
inc
push
arpl
insl
loopne
mov
add
or
inc
mov
mov
pusha
xor
das
and
or
inc
rol
mov
sub
or
sub
xor
ret
adc
cs
lret
jle
mov
mov
or
dec
aam
dec
adc
cmp
and
repnz
ds
push
and
cmp
sub
mov
add
movsb
add
inc
sbb
adc
xchg
mov
dec
enter
cmp
js
push
push
mov
push
insl
cmp
cmp
or
inc
js
mov
and
adc
in
push
and
inc
add
movaps
or
mov
xor
and
fadds
daa
test
aaa
or
jo
add
enter
test
insb
adc
jb
fcoms
jno
movntps
pop
lods
mov
jns
add
test
sub
jo
loop
cwtl
sbb
adc
aam
xchg
clc
mov
push
add
xor
sbb
pop
push
adc
sbb
jmp
push
test
imul
fwait
sbb
jecxz
test
cltd
insl
stc
bswap
aad
fstps
xor
imul
push
xchg
cs
mov
lret
jbe
cmp
and
push
cmp
dec
push
lret
pop
push
scas
push
lret
pop
push
pop
adc
fs
sub
pop
aad
repnz
xchg
nop
pushf
ljmp
stc
cmp
movsl
scas
gs
insb
xor
mov
sub
in
fisttpl
les
inc
jbe
or
mov
push
sub
sub
fildll
movsl
dec
fs
mov
lret
stc
aas
pop
adc
push
test
dec
aam
push
or
fwait
jl
dec
lods
adc
pop
push
adc
adc
add
sbb
gs
int3
push
lret
js
add
sbb
scas
sub
or
lea
push
push
js
lret
stc
sub
cs
popf
xchg
ds
adc
mov
xchg
sbb
or
mov
lods
adc
adc
sbb
out
lea
add
adc
outsb
sub
sbbb
sub
pop
adc
cmp
sub
sub
adc
sub
sub
in
push
xor
gs
add
mov
add
add
add
das
inc
xorb
inc
loopne
push
fstl
sbb
addb
mov
push
xchg
enter
add
outsb
xor
loope
inc
push
dec
hlt
pop
jo
xchg
mov
sub
add
cmp
je
jb
push
mov
outsb
gs
jo
or
or
loopne
cmp
mov
adc
xor
mov
add
cli
jmp
jae
inc
pushl
cwtl
sti
clc
ret
and
xchg
imul
xor
fsts
movsl
aas
lcall
mov
add
enter
sbb
xchg
shrb
jne
add
sbb
fdivrl
xchg
adc
mov
js
pop
stos
push
in
cmp
mov
push
test
adc
arpl
outsb
sbb
mov
repz
jno
mov
xchg
lret
iret
or
into
gs
shl
fs
es
leave
add
cwtl
stc
fwait
cwtl
sub
sub
lock
out
add
repz
lretw
ss
popa
inc
orb
insl
xor
test
fbld
pop
repnz
cwtl
int3
adc
fimuls
frstor
pop
add
daa
mov
inc
jno
cmp
enter
dec
ret
rclb
jnp
pop
pop
jno
addr16
fdivrp
in
leave
jmp
idiv
fdivr
cmp
cltd
fimull
in
repz
adc
loope
test
popf
clc
std
aas
mov
shlb
ljmp
cmpsl
jl
cmp
popa
mov
lock
jl
ret
clc
cli
cmp
jmp
pop
add
pop
arpl
and
cwtl
jnp
insb
outsl
imul
jae
arpl
cmp
or
fs
or
outsl
cmp
mov
xor
scas
inc
xchg
jb
gs
cmp
and
push
or
mov
ret
cs
and
inc
jo
gs
lahf
int3
cld
popa
icebp
iret
fmulp
inc
outsl
push
jmp
test
insb
sbb
push
loopne
jne
mov
arpl
outsl
push
js
outsl
inc
dec
or
push
insb
fisttps
jbe
push
dec
js
and
xchg
jae
loope
push
push
add
jae
arpl
push
in
jo
xchg
fisubl
insl
inc
outsb
repz
adc
sub
sbb
icebp
sbb
arpl
jbe
mov
scas
sub
movl
fldt
xchg
dec
nop
nop
mov
jl
idiv
jp
pop
insl
jb
inc
repz
icebp
cmpsb
inc
or
sub
je
nop
cmp
xchg
sub
sub
jo
pop
sub
aad
add
inc
sub
inc
cmp
mov
inc
lahf
xor
jnp
insl
xor
jne
sub
adc
data16
mov
nop
inc
dec
add
sar
lgdtl
add
add
push
dec
inc
jb
or
in
ja
test
adc
bound
add
and
inc
push
push
dec
push
dec
mov
inc
dec
add
xor
dec
mov
cwtl
push
fisubl
ja
test
mov
addr16
lds
push
or
xor
dec
ret
dec
xor
mov
push
and
xor
std
dec
mov
jae
pop
in
or
decl
add
or
xor
push
addb
dec
inc
stos
inc
mov
adc
push
inc
add
aas
lret
out
cld
addl
dec
dec
dec
sahf
add
push
push
push
push
add
pop
rorb
gs
imul
rolb
jb
shlb
or
jp
ret
add
xor
ss
cmp
cmp
das
mov
data16
out
in
fildl
push
arpl
negl
mov
lock
pop
push
aad
dec
adc
cli
xchg
inc
and
int
sbb
fistpl
adc
cltd
call
mov
ret
push
mov
mov
mov
pop
xor
push
int3
add
lcall
push
or
sahf
and
les
pop
pop
pop
and
call
inc
and
lea
pop
addl
addl
arpl
lock
add
add
addr16
jl
xor
fs
xor
mov
mov
hlt
fcomip
pop
scas
je
inc
jmp
and
fs
cld
pop
popa
adc
pusha
mov
mov
mov
incb
add
stc
cmp
aas
je
dec
cli
dec
pop
fiadds
idivb
adc
dec
push
movb
outsb
sub
sbb
pop
outsb
push
lds
mov
lcall
cmp
push
add
dec
sbb
pop
and
jmp
cmp
xor
shr
jmp
loopne
je
ror
lock
jmp
cmp
jl
fwait
jne
dec
mov
data16
or
adc
push
mov
popa
cmp
or
clc
ret
repnz
notl
mov
cs
lods
test
mov
add
jecxz
xor
daa
dec
aas
sbb
pop
fs
xor
inc
pop
jo
lods
cld
push
pop
jg
xor
jl
add
pop
xor
pusha
push
cmp
or
jb
cwtl
decb
out
out
xchg
push
nop
add
and
pop
and
mov
pop
sub
add
bound
arpl
mov
shrl
or
pop
xlat
bound
sbb
dec
adc
inc
dec
arpl
add
inc
addr16
int
xchg
or
mov
sub
insb
sbb
xor
pop
pop
inc
aad
popa
bound
jge
xchg
test
sbb
xchg
xor
lock
scas
add
inc
dec
outsl
addr16
cmp
push
lgdtl
or
mov
mov
sti
push
insb
mov
cmovb
adc
adc
daa
lea
js
pushf
add
add
and
mov
add
lock
and
pop
or
hlt
sbb
mov
dec
cmpsl
mov
jno
or
cs
jle
or
add
push
push
cmpb
lahf
inc
push
imul
adc
out
and
lods
lret
cmpl
adc
mov
or
add
xchg
inc
adc
add
pop
insl
add
mov
lods
arpl
fnstcw
cmp
jb
xorb
cmpsb
mov
scas
pop
push
inc
mov
push
shrl
dec
cmp
data16
dec
imul
outsb
imul
fs
or
push
or
andl
dec
jbe
pop
mov
icebp
and
test
movsb
dec
push
jmp
mov
into
xchg
pusha
add
xchg
cmp
xchg
cwtl
sbb
test
ret
cwtl
leave
ds
xchg
cmp
push
sbb
add
or
fmuls
fistl
add
mov
and
jg
gs
cltd
mov
cmpb
mov
xchg
call
add
cs
adc
and
dec
xor
dec
push
mov
fs
dec
jo
adc
ljmp
or
xchg
lods
and
adc
and
je
mov
or
and
mov
adc
dec
pop
xchg
pusha
and
jo
mov
dec
pushf
xchg
movsb
and
adc
and
dec
fcoml
hlt
cld
mov
and
or
xchg
and
sub
mov
and
dec
push
xchg
pop
and
push
mov
dec
nop
xchg
xchg
and
sub
jb
loope
jb
fs
push
add
ss
mov
jmp
insl
sahf
dec
je
cmp
outsl
xor
sub
sahf
jne
cmpsl
adc
insl
pop
sub
imul
jle
xchg
test
outsb
or
dec
jne
mov
popa
mov
and
dec
add
pop
push
adc
inc
popaw
fldt
enter
mov
adc
cli
xchg
nop/reserved
js
dec
jl
inc
inc
dec
dec
dec
das
adc
rcrl
dec
sbb
sub
aam
inc
outsb
push
push
push
push
iret
aaa
dec
dec
xor
inc
inc
xor
cmpsl
add
push
dec
push
rclb
adc
dec
inc
inc
cld
inc
jo
aam
shlb
adc
jno
mov
adc
ficomps
mov
inc
addr16
adc
xor
push
push
test
adc
xchg
inc
inc
adc
sbb
pop
fwait
cmp
pop
dec
cmp
push
bound
adc
popf
daa
popl
inc
jbe
dec
mov
inc
dec
dec
stos
rclb
rclb
sbb
ja
mov
and
push
movsb
out
push
and
hlt
sbb
aam
dec
mov
sarb
jne
add
or
jge
aas
inc
nop
and
xor
sahf
mov
adc
or
and
or
test
and
jb
cmp
das
loope
add
loopne
or
lcall
sbb
sbb
mov
jbe
xchg
les
dec
repz
mov
jns
outsl
sub
sub
push
test
or
insb
les
test
sbb
xchg
inc
sub
pop
xchg
daa
shlb
push
shl
rep
sbb
imul
ds
outsl
lds
cmc
in
xor
xor
enter
cmp
xor
push
xor
push
push
dec
icebp
dec
mov
gs
xor
insb
sub
xor
add
dec
push
inc
mov
inc
lret
xor
and
add
add
dec
xchg
push
shlb
pop
jnp
cmpsb
mov
and
adc
inc
movsl
arpl
xchg
fcoms
rcl
sbb
fldt
xor
and
sub
mov
xor
loop
push
icebp
leave
xchg
or
rcll
push
cmp
movsl
push
jae
jl
xor
push
cmp
mov
je
mov
pop
and
dec
adc
or
insl
or
mov
arpl
inc
outsb
jecxz
xchg
imul
in
inc
sbb
sub
or
xor
adc
insl
movsb
lea
rcrl
push
sub
and
dec
repz
and
das
lods
sub
sbb
enter
dec
lock
or
pop
sub
inc
test
mov
test
xchg
mov
and
imul
push
push
jne
xchg
or
outsb
lods
push
loope
or
and
push
or
imul
push
cs
push
sub
and
sbb
repnz
pop
lret
jo
loope
add
imul
pop
mov
lcall
add
and
cmp
inc
dec
or
mov
dec
daa
push
adc
mov
pop
loope
pop
dec
dec
lahf
jne
jo
or
push
pop
inc
sbb
stos
fidivs
pusha
push
mov
insb
inc
je
shlb
and
push
fs
mov
cmp
arpl
mov
sub
sbb
shl
mov
aam
movsb
and
dec
jo
inc
mov
insl
inc
das
adc
push
loopne
shlb
xchg
xchg
repnz
int
or
addr16
dec
add
cmp
movsb
or
jae
out
xchg
sub
sub
and
sbb
ljmp
jne
adc
pushf
sub
jge
dec
push
in
jns
roll
int3
push
jo
jg
lahf
xchg
and
rorl
cmp
add
and
mov
push
lods
dec
jne
imul
xchg
cmp
fstp
jne
lahf
lcall
sbb
inc
pusha
and
mov
loop
push
out
gs
test
nop
popf
sbb
adc
loop
jo
bnd
mov
xor
cs
dec
pop
shrb
jle
inc
and
adc
insb
jl
jns
dec
jne
arpl
jmpw
in
leave
adc
and
pop
fcoml
or
xchg
push
in
fs
push
inc
out
inc
or
xorl
pop
sub
cmp
inc
insl
push
or
or
xchg
ss
loope
pop
je
sub
icebp
fildl
call
inc
rcr
shrl
pop
scas
and
cld
cwtl
xlat
nop
pushf
gs
or
pop
inc
dec
push
push
adc
dec
hlt
cmp
xor
sbb
test
and
xor
pop
outsb
dec
insl
adc
pop
push
popa
je
cmp
ja
out
imul
cs
sti
sub
decl
repz
or
xchg
je
push
or
movsb
mov
dec
xchg
out
mov
daa
call
sub
dec
push
push
pop
xor
insl
sub
jo
sbb
data16
pusha
lods
dec
hlt
call
scas
shlb
push
rcrb
aam
push
fcoms
xor
pop
lcall
adc
imul
jne
mov
mov
xchg
out
imul
jmp
xchg
pop
and
sub
fidivrs
dec
insb
fsubrs
outsl
int
loop
mov
jo
cmpsl
or
js
rcrl
xorb
pop
push
and
adc
test
jne
sbb
mov
pop
mov
pushf
into
mov
or
sub
pop
dec
outsl
mov
inc
hlt
xchg
adc
jle
jns
js
dec
imul
jno
push
cs
fiadds
push
inc
or
dec
pop
sub
sbb
fimull
addr16
fsubr
test
adc
push
xchg
dec
mov
jnp
mov
stos
sbb
out
xchg
jae
repnz
shlb
cwtl
daa
fistl
daa
in
xchg
xor
insb
adc
nop
adc
es
or
mov
jne
jo
fldcw
and
mov
imul
mov
ja
insl
dec
cs
rclb
gs
jmp
adc
xchg
push
pushf
xor
mov
and
mov
pusha
shlb
and
mov
xchg
xchg
or
mov
cld
and
push
lcall
popa
cmp
jb
outsb
adc
or
jl
sbb
push
repnz
outsl
mov
lods
aaa
sub
xchg
repnz
and
insl
mov
leave
fcomps
pop
dec
inc
and
mov
push
push
nop
sub
jle
bound
mov
dec
mov
dec
out
push
lret
enter
inc
sub
movsl
fbld
js
push
cmp
pop
push
js
arpl
test
cmp
frstor
xor
cmp
add
sub
add
dec
adc
xor
jo
sub
in
mov
out
adc
add
push
jae
cmp
jns
inc
insl
adc
gs
xchg
lods
mov
outsl
mov
lods
aam
test
dec
inc
sbb
pop
cmp
lea
push
inc
imul
in
stos
sub
sahf
mov
mov
je
stos
dec
test
xlat
cs
jge
and
or
mov
mulb
repnz
jg
cmp
xor
ds
lcall
sub
jne
add
sub
data16
mov
es
adcb
cmpsb
test
xchg
mov
push
push
call
inc
and
fisubl
test
iret
neg
js
jbe
addr16
lret
scas
sub
fdivs
push
adc
adc
push
adc
dec
mov
movsl
cmpsb
jns
push
xor
fcmovbe
mov
push
cli
or
push
dec
push
mov
sub
lea
into
rorb
xor
lahf
icebp
cmpsl
sub
ret
in
imul
outsl
out
jno
loope
cmp
ss
sub
cmp
cmpsb
xor
mov
lock
dec
push
outsb
cmc
mov
cmp
insl
cmp
mov
imul
imul
test
mov
add
mov
and
cmp
add
sub
push
icebp
bound
frstor
adc
cmpsl
xchg
inc
sub
pushf
movsb
repz
and
sub
dec
pop
inc
shlb
cmp
jne
rdtsc
shrb
call
push
jmp
pop
xchg
je
inc
jg
and
pop
inc
push
sub
sub
adc
ret
xor
adc
mov
das
xor
dec
inc
icebp
dec
insb
fisubs
arpl
sbb
and
inc
pushf
rcll
xor
out
dec
loopne
inc
adc
and
movsl
bound
adc
outsb
imul
or
in
adc
je
imul
pusha
rolb
aas
loope
mov
mov
or
push
pop
xchg
out
sub
addr16
popf
xchg
sub
out
imul
cs
in
and
fs
sbb
or
jbe
test
inc
cmp
push
or
adc
dec
dec
mulb
rclb
add
push
outsl
rorb
test
mov
jge
adc
adc
push
mov
add
pop
mov
lahf
call
jbe
push
mov
lret
push
xorb
pop
rclb
test
add
push
add
mov
sbb
inc
stos
jns
inc
imul
or
pop
inc
rolb
ja
jb
push
or
push
mov
fdivr
pop
pushf
mov
pop
or
add
or
push
pop
jg
adc
xor
push
jg
sub
xor
adc
dec
jp
xor
push
pusha
inc
pusha
xor
das
mov
pushf
mov
adcb
push
adc
push
inc
sub
inc
pop
bound
mov
add
mov
xor
inc
jb
dec
pop
xchg
dec
inc
mov
rcr
push
sub
cmp
lret
imulb
xchg
mov
adc
loop
shll
fadds
dec
mov
xchg
cmp
pop
push
push
lods
or
lcall
pop
add
cltd
nop
xchg
dec
mov
or
xor
push
into
adc
adc
divb
dec
inc
push
pop
repnz
stc
sub
mov
or
add
shlb
jmp
inc
nop
push
pop
or
shlb
mov
cmp
xchg
add
imul
push
ss
ret
rolb
cmpsb
push
jae
push
test
adc
mov
gs
cmpsl
jo
ret
xor
pop
inc
dec
mov
orl
arpl
push
outsb
inc
lret
lea
cmpsb
sub
ja
je
into
dec
lret
xor
pop
mov
cmp
lds
popa
popa
push
inc
js
inc
adc
in
icebp
fbstp
cmc
dec
lret
pop
shlb
test
adc
add
arpl
push
xchg
sbb
push
jne
jnp
rorl
test
out
je
push
sbb
rcrl
aas
lretw
xchg
sub
subb
push
dec
cmp
xor
popa
addr16
jae
mov
dec
push
sub
or
sbb
pop
cmpb
mov
aas
sub
call
xchg
dec
shr
icebp
inc
and
je
cmp
daa
jbe
rcrl
je
xchg
es
adc
test
add
pop
and
sbb
adc
mov
in
adc
rolb
frstor
imul
pop
das
insl
sub
ja
mov
mov
push
movsl
jl
icebp
sti
adc
jb
jae
clc
push
inc
dec
dec
test
stos
pusha
and
adc
cmp
and
xchg
pop
dec
movsb
jg
sub
add
adc
lea
mov
shrb
jns
mov
ret
shrb
dec
popa
insl
lods
test
fs
jb
inc
inc
fldl
or
dec
inc
mov
enter
pop
leave
push
imul
push
mov
es
clc
and
in
push
dec
stos
and
mov
testb
fadds
xchg
outsl
insb
push
loopne
adc
nop
and
add
cltd
push
and
inc
sub
and
stc
and
aad
idiv
int3
aas
push
pusha
and
and
fucomip
inc
fistps
xor
enter
jae
nop
adc
add
test
in
fmul
adc
and
lahf
scas
pop
jle
xor
mov
mov
push
or
popa
inc
fidivl
or
adc
push
or
flds
sub
or
imul
enter
xor
pop
sbb
mov
rorb
mov
fisttpll
pop
push
or
push
cmp
cmc
push
push
stos
and
jae
ja
clc
iret
push
popa
cs
push
dec
sbb
cwtl
inc
idivl
fs
lcall
dec
xor
mov
imul
add
adc
inc
inc
inc
inc
adc
inc
sub
addr16
xchg
insb
imul
sub
sub
ljmp
xor
dec
insl
jp
jecxz
das
xor
or
and
arpl
and
dec
movsb
sbb
enter
mov
rolb
bound
mov
inc
sub
jnp
sub
dec
outsl
inc
or
int3
inc
or
mov
cld
movsb
icebp
dec
xor
bound
adc
cwtl
inc
dec
jne
das
inc
jle
cmpsb
sub
dec
inc
cmpsb
adc
or
mov
pop
sbb
mov
stos
sbb
cmpsl
adc
mov
add
inc
in
inc
sub
jb
inc
sahf
ret
mov
sbbl
jae
inc
cltd
lock
dec
mov
lret
enter
ss
das
push
push
icebp
inc
leave
inc
pushf
stos
push
xor
xchg
adc
push
leave
inc
imul
scas
xor
mov
sub
dec
inc
int
sub
test
mov
pop
push
data16
or
push
dec
adc
dec
lea
jbe
dec
jb
dec
dec
adc
and
cwtl
inc
mov
mov
stos
cmp
dec
pop
sub
insl
dec
push
mov
gs
lret
push
out
pop
je
adc
add
push
movsl
cmp
pop
bound
pop
inc
mov
mov
cmp
test
adc
xor
push
lock
xchg
push
daa
adc
outsl
pop
lea
sbb
mull
scas
rcll
std
faddl
inc
add
or
nop
cwtl
mov
mov
mov
mov
adc
and
dec
add
add
leave
or
xchg
sub
or
and
je
in
adc
sub
jmp
inc
cmpsl
jo
nop
test
out
inc
pop
or
sub
push
add
lret
mov
ror
xor
sub
mov
lea
and
imul
dec
cmp
sub
notb
push
push
in
adc
lock
cmp
mov
lock
push
popa
mov
addr16
jle
jecxz
ss
pop
mov
inc
test
shl
push
or
sti
jle
outsb
inc
jae
stos
fs
das
jnp
cmp
sbb
inc
insb
pop
outsl
rclb
test
mov
adc
pop
shlb
mov
xchg
popf
adc
fidivs
jl
mov
pop
pop
inc
dec
data16
ss
xchg
jo
push
notl
mov
nop
dec
cmc
insl
dec
das
fldl
sub
mov
test
lret
lds
push
adc
inc
jl
enter
sub
pop
xchg
loopne
mov
inc
push
rcrl
or
jl
out
mov
adc
pop
sbb
jle
cmp
inc
stc
in
insb
jne
sub
dec
cmc
cmp
mov
mov
ret
arpl
mov
je
xor
xchg
pop
mov
xchg
imul
mov
ss
adc
data16
jne
push
inc
movsb
mov
dec
lcall
inc
cmp
xlat
cmpsl
loop
sub
cmp
scas
inc
cmp
jmp
push
adc
inc
lret
cs
in
dec
ds
lret
fs
sub
insl
lods
cmp
push
dec
push
and
jne
xlat
cmpsl
out
leave
int3
arpl
push
movsl
fldenv
or
call
cmp
pminsw
fsubrl
pusha
xlat
add
or
xor
and
ror
jbe
inc
sbb
inc
or
xchg
lods
enter
subb
sub
in
mov
xor
mov
sub
cmp
mov
and
mov
inc
and
mov
lea
push
push
mov
adc
cmpsb
adc
and
ret
test
ss
or
and
cmp
push
xchg
sub
dec
aad
call
hlt
mov
movsb
in
sbb
sbb
cs
mov
mov
xchg
dec
dec
imul
lret
fstps
shll
push
cmp
mov
movsl
fsubl
adc
cmp
dec
stc
adc
inc
inc
decb
inc
xchg
mov
dec
outsl
cwtl
daa
inc
into
data16
daa
call
xorb
jl
movb
roll
cmc
ficomps
inc
scas
lret
leave
xor
test
jae
xor
incb
test
lea
sbb
fs
hlt
xchg
jmp
sbb
inc
xlat
test
mov
or
cmpsb
pushf
mov
sbb
dec
dec
js
adc
or
mov
mov
mov
dec
push
cmpsl
lahf
push
dec
stos
imul
mov
lcall
imul
xchg
cltd
cmp
pop
popa
xchg
jb
cmp
ljmp
push
imul
dec
stc
stc
notb
cmpsl
jbe
sub
out
add
dec
push
inc
push
xchg
ljmp
jge
test
testl
dec
sub
outsb
shlb
cs
and
jae
outsb
xor
cltd
in
inc
xchg
cs
adc
xchg
mov
in
test
mov
inc
push
testb
test
xchg
push
push
cmpsb
push
incl
imul
inc
mov
daa
pushf
sbb
mov
push
daa
ror
movsl
imul
sbb
jns
adc
popa
pop
mov
js
jp
cs
dec
or
sbb
mov
cmp
movsb
aaa
mov
sbb
push
ja
into
test
cltd
pop
dec
inc
data16
push
stc
sub
sub
ljmp
cmp
lods
xchg
push
jns
das
les
das
sub
cmpsl
out
sub
push
movsl
or
dec
stos
dec
sub
out
cltd
or
push
stos
fs
cmpsl
aam
pop
mov
jbe
sbb
mov
leave
les
xchg
mov
mov
sbb
fwait
call
jae
imul
and
jb
xchg
bound
sbb
cmp
mov
lret
and
outsl
push
dec
out
inc
movsb
in
sub
adc
decl
sub
sahf
and
stc
out
sub
test
leave
jle
ficoml
shrl
mov
incb
jp
dec
mov
js
mov
dec
test
call
cmpsl
sbb
and
and
enter
pop
repnz
nop
sub
sub
and
stc
pop
bswap
cmp
daa
pop
nop
pusha
cld
jle
in
aas
sub
and
hlt
cmp
and
stc
inc
bswap
and
inc
and
es
sub
sub
das
bswap
pop
jle
cmp
daa
cld
pusha
xchg
jle
and
stc
outsb
aam
sub
and
and
enter
and
and
es
sub
and
das
jle
pop
repnz
daa
xchg
pusha
aas
and
and
lret
arpl
mov
mov
pop
nop
and
test
pusha
dec
sbb
cs
dec
inc
stc
push
sbb
and
inc
and
mov
jle
and
and
jns
pusha
jp
sbb
shll
inc
sub
jge
inc
and
xor
dec
or
push
or
inc
push
je
in
mov
popf
mov
xchg
arpl
or
xor
add
sbb
pop
fwait
sub
xor
push
dec
sub
inc
xor
mov
or
inc
dec
dec
repnz
or
imul
dec
test
jo
sub
fmull
cmp
int3
inc
jae
mov
push
jbe
xchg
fistpl
or
sub
test
sub
aas
popf
jne
int3
pop
or
cmp
dec
mov
das
out
and
mov
push
push
cwtl
pop
jno
push
pop
inc
mov
jne
jo
arpl
outsl
ficomps
fisubl
adc
adc
mov
sbb
cmpb
mov
push
ss
test
jge
pop
inc
fwait
add
pop
jae
cmp
imul
inc
pop
pop
jne
sbb
movsl
lea
sbb
or
add
and
mov
outsl
jae
and
add
dec
sub
mov
add
adc
adc
cmp
adc
add
inc
add
dec
add
push
and
cmpl
add
cmp
cmp
dec
addr16
cmp
sbb
cmpsb
sub
setbe
leave
movsl
loope
imul
cld
mov
xor
sub
cwtl
pop
jno
cmp
test
lods
xchg
or
inc
and
sbb
push
movsb
jmp
mov
adc
dec
cmp
daa
adc
adc
jecxz
jge
push
call
iret
fcomps
mov
or
mov
and
dec
sbb
orl
cs
adc
icebp
jl
push
ss
shr
mov
int3
pop
cmp
dec
inc
jecxz
lahf
push
arpl
sbb
loope
cmp
ret
or
push
push
daa
and
testb
and
jae
enter
jae
and
pop
js
and
movsl
add
pop
aaa
nop
idivb
xchg
jb
mov
outsb
xchg
mov
and
pop
and
push
insb
xchg
mov
mov
mov
cmp
xor
or
push
pop
mov
push
dec
nop
mov
or
cmc
or
push
cmpb
push
mov
stc
sbb
nop
sub
rolb
add
js
aad
cmp
or
or
or
cmp
rolb
or
test
and
pop
sbb
xor
mov
push
cmp
or
adc
inc
jne
repz
push
add
jb
cmp
out
sbb
incl
xlat
add
and
push
call
jae
pop
and
or
add
pop
rdpmc
jne
ret
adc
je
pop
pop
pop
push
adc
in
push
lahf
add
test
rep
add
push
mov
leave
add
add
push
test
ret
addr16
push
into
xor
xor
stos
or
pusha
cmpsl
cli
enter
xlat
divb
cmpsb
cmp
call
pop
insl
pop
repnz
xor
pop
jg
dec
dec
dec
inc
dec
lahf
nopl
push
push
aas
xorb
jne
dec
jp
and
repz
mov
cmp
push
movsl
jae
aaa
dec
ret
jge
jbe
fs
jl
dec
jne
inc
fdivl
sub
jns
sahf
mov
inc
leave
sbb
pop
clc
das
cmpsb
sub
mov
push
mov
adcb
xchg
pop
jg
push
loope
xor
jne
aad
and
or
fisttpll
cmp
jmp
add
ja
dec
adc
lahf
inc
insb
xor
cwtl
lcall
mov
mov
lret
inc
out
push
jge
movsb
push
xor
push
add
pop
loop
jns
cs
adc
insb
roll
lcall
mov
roll
cld
mov
sub
lahf
int
and
cld
mov
js
push
push
sub
test
out
dec
mov
dec
mov
sub
stos
sub
jp
jle
fistl
push
mov
out
sub
in
mov
and
xchg
mov
loope
sbb
mov
ljmp
push
sub
nop
and
or
test
pop
pop
leave
subl
aam
cmp
dec
mov
lcall
std
cmp
pop
ds
inc
std
xor
test
lahf
fldcw
in
xchg
lret
imul
and
push
iret
fistps
cmpsl
inc
in
arpl
ja
loopne
mov
outsl
lret
lcall
mov
pop
jg
outsb
iret
shrl
inc
pop
inc
imul
mov
cmp
loopne
div
xor
lock
loop
jg
sub
in
neg
fbstp
icebp
adc
clc
std
sti
insb
dec
in
out
cmc
sbb
int3
lret
aad
mov
int
fistpll
fs
xor
cli
pop
xchg
cmp
push
ja
jp
or
ljmp
sbb
out
mov
jge
mov
popf
call
shr
sbb
popf
sbb
clc
xor
mov
or
push
push
push
in
sub
sbb
sti
push
adc
clc
xchg
lods
mov
push
cmp
sub
dec
stos
push
ja
cld
rcll
hlt
imul
pushf
pop
es
or
shrl
ja
inc
imul
sahf
sbb
bound
popa
ja
movsl
pusha
enter
add
roll
adc
inc
or
shrl
xchg
int
push
in
pop
pop
push
sbb
add
mov
jle
cmp
dec
enter
or
dec
jmp
sub
lock
sbb
aas
sub
sbb
or
orl
shll
add
cmp
pop
inc
fs
and
push
test
rorb
or
sub
adc
clc
pop
jne
adc
mov
inc
fs
xchg
andb
inc
js
mov
adc
dec
and
pop
or
and
push
pop
xor
add
xchg
xor
adc
mov
or
and
or
adc
and
dec
sbb
cld
rcrb
adc
xchg
push
and
inc
pop
in
and
loopne
and
xchg
and
fadds
adc
decl
mov
sub
push
je
sub
add
add
cmp
int3
ret
int3
sahf
in
add
addb
xchg
stc
sub
jle
jns
rcll
enter
and
add
jno
dec
add
add
cmp
rclb
call
ljmp
pusha
cmpb
and
cmpsb
fbld
or
lahf
loopne
addb
sbb
fisubrl
xor
lds
or
jb
and
mov
in
call
test
inc
or
or
ficompl
rcrb
test
cs
fcomp
loopne
add
jle
je
mov
fcmovnbe
cmp
bnd
les
in
lods
xchg
and
and
or
mov
dec
or
mov
sbb
or
push
xor
or
addps
xor
and
sbb
in
xor
inc
cmp
push
cmpsb
xor
push
sbb
push
or
gs
xor
insl
loop
add
pop
movsb
mov
in
xor
cmpb
cmpsb
and
sub
push
sahf
adc
mov
enter
jb
into
cltd
and
sbb
dec
pop
or
xorb
mov
and
adc
lods
xorl
add
lcall
sbb
repnz
jb
push
inc
xchg
mov
in
cmp
mov
mov
rcl
inc
mov
or
jl
jno
pop
inc
adc
adc
cld
or
iret
fcoms
int3
fsubrs
adc
js
icebp
push
test
or
cwtl
xor
jns
xchg
and
test
mov
inc
xchg
es
add
add
test
mov
add
mov
loopne
and
inc
xorb
lock
icebp
cmp
push
daa
movsb
in
push
push
inc
inc
call
fs
and
add
and
dec
pop
or
enter
aam
repz
adc
xor
or
insl
inc
xor
cmp
insb
ja
cmp
loopne
rorl
push
das
or
insb
lret
mov
enter
cli
or
repnz
inc
or
push
ret
movhps
and
adc
push
andl
add
mov
and
pop
ret
add
lock
mov
sub
test
lds
std
and
dec
sbb
xor
xchg
add
xchg
inc
push
add
sahf
add
mov
adc
idivb
aad
iret
decl
js
jp
outsl
loopne
jmp
mov
test
push
daa
cmp
jl
add
mov
stc
popf
sti
jmp
add
jbe
int3
add
sub
test
adc
stos
clc
scas
push
jecxz
cli
clc
jmp
cmpsl
aam
mull
iret
add
int3
xchg
push
cmpsb
scas
add
or
cmp
dec
dec
pop
inc
in
cmpsl
xchg
cmp
xor
push
hlt
in
pop
cmp
sahf
xchg
pop
call
cmpsb
lock
movsl
mov
popa
rcrl
and
add
xchg
clc
repz
mov
fldl
xchg
and
mov
push
pusha
les
push
sti
aas
jno
or
xlat
mov
add
cmp
dec
lea
xchg
outsb
adc
sub
add
loop
pop
mov
icebp
lock
push
and
cmpsl
out
lock
cmpsb
add
mov
add
cmp
aad
pop
mov
std
and
popa
test
ja
int3
stos
in
das
dec
pop
loope
les
mov
xchg
adcb
inc
aas
int
pop
lcall
cmp
lods
push
mov
incl
and
loop
cld
cmp
pop
popa
mov
add
sarl
jl
adc
das
lea
mov
sti
inc
dec
cld
movsl
cmp
cmp
sub
jge
mov
jl
rcr
push
add
arpl
int3
and
cmp
cmpl
inc
xor
lods
cmp
add
xchg
mov
cmp
mov
sbb
cmpsb
add
pop
add
cmp
sbb
and
xor
dec
nop
pop
add
cmpsb
xchg
js
add
mov
cmpsl
add
inc
pop
mov
sub
add
sub
scas
cmp
pop
add
rcr
add
call
mov
pop
push
xchg
cmp
push
andl
sbb
gs
std
rorb
adc
add
ror
add
cmpsb
fsubrs
and
test
push
add
aas
inc
push
gs
aam
mov
sbb
stc
lcall
inc
jae
mov
outsb
sub
and
jb
popa
scas
pop
shll
jb
aam
and
je
mov
daa
xor
xor
add
add
enter
nop
add
mov
mov
popa
sbb
xchg
pusha
push
sbb
fsubrs
outsl
jno
cli
inc
xor
daa
sti
mov
mov
mov
pop
data16
dec
loope
mov
adc
ret
aas
loop
sbb
inc
push
and
iret
aam
adcl
mov
cltd
pusha
call
mov
add
call
jmp
push
add
call
lea
lea
xor
call
call
jmp
push
add
jmp
pushl
pushl
call
add
add
cmpl
jne
lea
cmpl
jne
xor
pusha
jmp
mov
mov
mov
call
lea
push
or
jne
push
jmp
push
push
push
call
add
cmpl
jne
inc
or
je
add
mov
popa
mov
jmp
add
mov
mov
add
call
add
push
push
push
push
push
call
mov
pop
pushl
push
call
add
call
call
cmpl
je
cmpl
je
call
call
mov
mov
jmp
inc
cmpb
jne
inc
mov
call
add
mov
jmp
call
push
call
test
je
mov
mov
jmp
mov
mov
test
je
xor
push
mov
mov
movl
jmp
pushl
pushl
call
test
je
jmp
sldt
movl
mov
add
mov
jmp
inc
cmpb
jne
inc
jmp
push
add
mov
cmpw
je
cmpb
jne
jmp
inc
cmpb
jne
inc
inc
mov
call
add
mov
cmpb
jne
push
push
pushl
call
jmp
add
add
add
jbe
idiv
cmpl
je
sub
add
push
mov
mov
pop
ret
push
mov
cmpl
je
sub
add
pop
ret
push
push
cmpl
je
mov
mov
sub
add
pop
pop
ret
push
cmpl
je
mov
sub
add
pop
ret
pusha
cmpl
je
mov
mov
jmp
sub
add
sub
add
add
cmpl
jne
popa
ret
pusha
mov
or
je
mov
mov
mov
cmp
je
add
jmp
mov
mov
mov
add
add
jmp
movzwl
mov
shr
mov
imul
sub
add
add
cmp
jne
sub
mov
add
add
cmp
jb
cmpl
jne
popa
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
cld
or
or
or
imul
gs
xor
cs
insb
add
xlat
or
inc
xlat
or
push
xlat
or
pop
xlat
or
outsb
xlat
or
add
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
push
imul
jb
je
arpl
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
add
or
add
push
push
mov
jmp
inc
cmpb
jne
jmp
dec
cmpb
je
cmp
jne
cmpb
jne
pop
inc
jmp
pop
pop
ret
cmpl
jne
mov
jmp
mov
jmp
xor
push
push
push
push
call
mov
cmpl
jne
pushl
pushl
call
mov
cmpl
jne
pushl
pushl
call
mov
or
jne
push
lea
push
pushl
call
add
jmp
cmp
jne
push
pushl
lea
push
pushl
call
add
jmp
cmp
jne
push
pushl
lea
push
pushl
call
add
push
lea
push
pushl
push
call
push
push
pushl
call
popa
ret
pusha
cmpl
jne
pushl
pushl
call
mov
call
movl
call
lea
mov
mov
lea
push
pushl
mov
mov
xor
xchg
popl
add
popa
ret
push
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
leave
ret
pusha
lea
push
call
mov
lea
push
call
mov
popa
ret
pusha
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
lea
push
push
push
call
or
jne
lea
push
push
push
call
jmp
cmpl
jne
pushl
pushl
call
push
lea
push
lea
push
push
call
popa
popa
pop
ret
popa
ret
pusha
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
push
push
push
push
call
mov
push
push
push
call
push
push
push
push
push
push
pushl
call
cmp
je
mov
call
push
pushl
call
mov
push
push
push
push
call
mov
push
lea
push
push
push
pushl
call
cmp
jne
mov
mov
xor
cltd
jmp
mov
rol
xor
inc
dec
cmp
ja
cmp
je
cmpl
jne
pushl
pushl
call
push
lea
push
lea
push
push
call
push
call
push
push
pushl
call
cmpl
je
cmpl
je
pushl
call
jmp
call
popa
ret
push
push
pushl
call
ret
push
mov
add
pusha
mov
movl
mov
mov
cmpl
jne
movl
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
call
jmp
cmpl
je
cmpl
jne
push
pushl
call
jmp
cmpl
jne
cmpl
jne
push
lea
push
lea
push
push
call
cmp
jne
push
pushl
call
push
call
popa
mov
leave
ret
push
mov
add
pusha
mov
movl
mov
mov
cmpl
jne
movl
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
jmp
cmpl
je
cmpl
jne
push
pushl
call
jmp
cmpl
jne
cmpl
jne
push
pushl
pushl
call
push
pushl
call
popa
mov
leave
ret
pusha
call
mov
pushl
pushl
call
mov
lea
push
push
push
lea
push
push
push
call
popa
ret
pusha
mov
lea
mov
mov
jmp
call
lea
push
push
lea
mov
add
mov
mov
jmp
inc
cmpb
jne
inc
inc
cmp
jb
mov
pusha
push
lea
pushl
pushl
call
push
pushl
push
call
lea
mov
add
jmp
dec
cmpb
jne
inc
pop
jmp
movzbl
mov
inc
inc
cmpb
jne
movb
popa
lea
pushl
push
lea
push
pushl
call
add
pushl
push
call
or
je
push
lea
push
lea
push
push
call
push
call
jmp
push
call
or
jne
push
lea
push
lea
push
push
call
push
call
incl
cmp
jbe
movl
pushl
call
popa
ret
pusha
lea
push
lea
push
pushl
call
add
pushl
pushl
call
lea
mov
add
mov
mov
jmp
inc
cmpb
jne
inc
inc
cmp
jb
push
lea
push
pushl
call
add
pushl
pushl
call
lea
mov
pushl
pushl
lea
push
pushl
call
add
pushl
pushl
call
push
lea
push
pushl
call
add
pushl
pushl
call
popa
ret
pusha
push
lea
push
pushl
call
add
pushl
pushl
call
popa
ret
pusha
mov
jmp
push
call
or
jne
push
call
or
jne
call
jmp
inc
cmpb
jne
inc
cmpb
jne
popa
ret
pusha
cmpl
je
cmpl
jne
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
jmp
jmp
movl
mov
add
jmp
pusha
mov
xor
jmp
inc
inc
cmpb
jne
repz
jne
movl
popa
jmp
inc
cmpb
jne
inc
cmpb
jne
cmpl
jne
jmp
mov
mov
inc
inc
cmpb
jne
mov
incl
popa
ret
pusha
push
push
pushl
call
push
push
pushl
call
push
push
pushl
call
push
push
pushl
call
popa
ret
pusha
push
push
push
push
call
mov
mov
lea
mov
jmp
movzbl
mov
inc
inc
dec
cmp
ja
push
call
push
lea
push
push
pushl
push
call
call
popa
ret
pusha
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
lea
mov
jmp
movzbl
mov
inc
inc
dec
cmp
ja
push
call
push
lea
push
push
pushl
push
call
mov
xor
cltd
jmp
mov
rol
xor
inc
cmpb
jne
cmp
jne
mov
cltd
jmp
mov
rol
xor
inc
cmpb
jne
mov
mov
cmp
jbe
cmp
jbe
cmp
jbe
jmp
xor
xor
rol
inc
dec
cmp
ja
jmp
push
lea
push
lea
push
push
call
popa
popa
pop
ret
call
popa
ret
pusha
cmpl
jne
call
mov
pushl
push
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
cmpl
jne
pushl
pushl
call
mov
cmpl
jne
pushl
pushl
call
mov
lea
push
call
pushl
push
call
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
mov
lea
mov
lea
mov
popa
ret
pusha
mov
mov
or
jne
movl
cmp
jne
cmp
jbe
movl
popa
ret
pusha
cmpl
jne
pusha
push
push
mov
imul
add
push
push
call
mov
popa
mov
cmp
jne
mov
rdtsc
mov
cmpw
jne
movl
add
add
movb
inc
movb
movb
xor
xor
rol
add
mov
movb
movb
movb
mov
movb
movb
movb
movb
mov
movb
add
mov
popa
push
xor
cmpw
jne
mov
mov
sub
sub
pop
ret
jmp
popa
ret
pusha
call
call
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
movl
lea
push
call
cmpl
je
cmpl
je
call
or
je
mov
cmpl
jne
cmpl
je
lea
push
push
call
mov
cmpl
jne
movl
cmpl
je
cmpl
jne
mov
add
mov
cmp
jne
movl
mov
mov
mov
cmpl
je
movl
mov
lea
push
push
push
push
push
push
push
call
cmp
je
movl
inc
cmpb
jne
inc
dec
jne
popa
ret
pusha
cmpl
je
cmpl
jne
cmpl
jne
pushl
pushl
call
mov
push
lea
push
lea
push
push
call
popa
pop
popa
ret
popa
ret
pusha
push
call
push
lea
push
push
push
push
call
pop
lea
mov
add
sub
jmp
movb
dec
cmp
ja
popa
ret
pusha
mov
test
js
mov
mov
addl
jmp
push
call
test
jns
cmpl
jne
mov
addl
popa
ret
pusha
lea
mov
xor
cltd
jmp
mov
rol
xor
inc
dec
cmp
ja
lea
mov
jmp
xor
rol
inc
dec
cmp
ja
popa
ret
pusha
lea
push
call
mov
popa
ret
pusha
lea
push
call
mov
popa
ret
pusha
mov
mov
add
mov
add
mov
add
xor
lea
mov
add
xor
rol
xor
inc
cmpb
jne
cmp
je
inc
cmp
jb
xor
jmp
mov
add
movzwl
mov
add
mov
add
mov
popa
ret
add
add
add
inc
add
xchg
inc
ja
icebp
clc
or
jg
icebp
lret
imull
sbb
nop
xchg
or
xchg
js
or
push
scas
xlat
lock
jne
gs
xor
fs
insb
add
jb
jb
add
insb
and
popa
gs
and
data16
and
and
jb
jae
add
jne
and
je
insb
outsl
popa
and
outsb
popa
insl
imul
and
jb
jb
and
inc
outsl
jne
and
je
imul
jae
gs
outsl
jb
and
jae
fs
outsb
popa
insl
imul
and
jb
jb
and
inc
outsl
jne
and
je
imul
jb
imul
jo
jb
cmp
imul
and
outsb
popa
insl
imul
and
jb
jb
and
inc
jo
insb
imul
and
and
jb
popa
fs
jb
outsb
outsb
imul
outsw
cmp
push
popa
jb
imul
jae
ja
jb
and
jne
push
outsb
je
jb
and
and
je
jbe
imul
jns
jne
ja
outsb
je
je
and
outsb
arpl
and
and
insb
and
outsb
insb
outsl
popa
fs
or
outsb
imul
jo
imul
and
outsb
and
je
jb
outsb
and
je
outsl
jne
and
jae
gs
jb
and
fs
insb
and
insb
gs
add
jne
and
je
outsl
ja
insb
outsl
popa
and
jae
gs
jb
and
fs
insb
and
insb
sub
and
arpl
jae
cmp
sub
pop
outsl
jne
popa
jb
and
je
arpl
outsb
arpl
and
imul
je
or
sub
inc
imul
outsb
outsl
je
bound
outsw
jne
and
and
insl
outsl
je
and
jb
gs
or
sub
pop
outsl
jne
and
jb
ja
insb
insb
and
jae
bound
imul
popa
arpl
jae
and
imul
je
or
arpl
popa
jo
insb
imul
and
outsb
and
je
jb
outsb
and
je
outsl
jne
and
jae
gs
jb
and
fs
insb
and
insb
gs
and
outsl
addr16
insl
and
insb
insb
and
ja
arpl
and
inc
outsl
ja
insb
outsl
popa
fs
fs
insb
and
insb
and
and
jb
jne
je
popa
outsb
and
outsb
and
je
bound
insb
outsl
popa
fs
popa
jae
and
jae
popa
jb
and
jae
popa
jo
imul
and
and
and
insb
and
outsb
and
and
outsb
insb
outsl
popa
fs
popa
imul
add
add
push
xchg
jb
cmp
push
dec
pushf
adc
clc
or
add
add
pop
push
dec
inc
inc
add
pop
push
dec
push
push
dec
inc
add
pop
dec
push
dec
inc
inc
add
pop
push
inc
inc
push
pop
push
add
pop
push
inc
inc
push
pop
inc
add
pop
inc
dec
dec
inc
push
pop
inc
add
pop
inc
dec
dec
inc
dec
add
pop
push
push
push
add
pop
dec
inc
inc
inc
pop
push
add
jne
addr16
fs
arpl
and
sub
popa
jae
and
outsl
jae
and
and
outsb
and
and
jae
popa
jb
and
outsl
ja
and
and
gs
cmp
push
insb
gs
jae
and
je
and
je
push
and
and
outsb
dec
arpl
push
outsl
data16
arpl
or
jb
imul
je
insb
insb
gs
popa
outsb
jae
je
popa
je
jns
jne
popa
jb
and
outsb
outsb
imul
bound
addr16
add
add
add
insb
insl
outsl
outsb
cs
insb
add
movsl
out
test
aam
or
sub
adc
pushf
inc
cld
call
mov
and
lock
add
add
inc
add
add
xor
push
bound
je
cmp
and
ja
insb
outsl
popa
imul
add
insl
jo
gs
cmp
and
jb
outsb
je
inc
imul
and
inc
add
inc
add
jne
add
add
add
add
aas
jne
add
inc
add
add
ret
ret
pusha
mov
mov
mov
cmp
jbe
cmp
jbe
mov
cltd
mov
imul
div
jmp
xor
lea
call
popa
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lret
add
add
add
add
add
add
add
add
inc
add
ja
outsb
add
add
add
add
add
add
add
outsb
add
add
mov
add
add
add
add
add
jae
or
add
incl
add
outsb
add
add
add
outsb
add
and
outsb
add
jae
jae
add
popa
add
jns
and
add
add
add
imul
jae
add
add
mov
pop
add
push
add
add
add
add
add
add
incl
add
outsb
add
add
add
add
jb
outsl
add
jb
add
jae
and
add
add
mov
add
add
add
add
add
add
add
add
add
incl
add
push
add
je
add
add
add
add
push
add
add
or
and
into
add
add
incl
add
outsb
add
add
add
outsb
add
cmp
add
add
mov
add
add
add
add
add
add
or
add
add
outsl
add
jo
insb
add
je
add
add
add
add
push
add
add
daa
add
add
or
push
add
incl
add
add
add
add
add
add
push
add
add
popf
add
add
push
add
add
incl
add
arpl
add
add
add
add
lret
add
add
add
add
mov
and
add
add
push
add
jae
jae
ja
outsl
add
add
add
add
add
add
outsb
add
add
mov
pop
add
push
add
add
add
add
mov
push
add
add
incl
add
add
and
jo
popa
add
jae
ja
outsl
add
add
add
add
push
add
add
push
add
add
or
add
incl
add
jae
ja
outsl
add
add
add
add
add
add
push
add
add
sub
or
add
add
incl
add
push
add
add
test
or
sub
push
add
add
incl
add
add
imul
add
add
add
mov
add
adc
mov
add
and
add
add
cli
loopne
add
adc
add
add
pop
sbb
add
add
add
add
fnstenv
add
and
add
add
pushl
add
push
add
add
cmp
stos
nop
dec
mov
int3
and
popa
iret
clc
ficompl
fldenv
jo
jge
movl
out
sub
pop
sti
mov
cwtl
dec
fildl
test
test
dec
repnz
cmp
sbbl
fisubl
add
push
repnz
lods
or
dec
push
ret
dec
lods
jmp
sbb
sub
mov
imull
gs
cmp
fbld
in
outsb
mov
sub
cmp
clc
mov
inc
movsb
fadd
lods
mov
pop
lahf
and
mov
xchg
scas
lret
fstpl
push
mov
pop
insl
stos
push
cmp
dec
test
lea
cwtl
mov
popf
mov
jae
adc
xchg
mul
lahf
adc
or
mov
mov
lea
shrl
push
push
out
sbb
loope
push
adc
ret
cwtl
das
sbb
stos
pop
adc
push
std
push
fwait
or
mov
fcomps
mov
push
jl
inc
incl
lock
cmpnltps
div
movsl
sub
inc
cmpsb
out
flds
lods
mov
pop
jg
mov
inc
fcmovnu
adc
xchg
fistpl
test
jno
inc
mov
mov
mov
pop
movsl
arpl
and
aam
xchg
fwait
loope
sbb
mov
xchg
fnsave
xchg
stos
jle
jmp
lods
mov
push
dec
xchg
mov
jp
xchg
pop
in
call
mov
lret
notl
mov
lods
les
js
mov
fs
rorl
cmpsl
addl
shrb
xchg
push
jo
push
sbb
jl
xor
fidivrs
mov
push
mov
push
fldcw
fildl
pop
clc
sub
scas
xchg
scas
fmuls
pop
lcall
sub
in
cli
mov
push
fsts
imul
cwtl
xlat
jmp
adc
movsl
push
js
cwtl
or
loopne
sub
lds
and
cs
jle
sbb
sub
int3
scas
test
xor
jmp
cwtl
sbb
test
mov
mov
cs
imul
stos
leave
shrb
ss
jg
mov
cmpsl
pop
mov
popa
rcll
popf
and
imul
cmp
lods
mov
nop
dec
aam
pop
xchg
enter
inc
ljmp
lea
xchg
pop
jmp
xlat
and
sahf
xchg
or
loope
ds
pop
jns
fdiv
xor
rorl
stc
cmp
jmp
jns
aam
stos
cmpsl
mov
xchg
jnp
mov
fsts
loopne
pusha
xchg
in
mov
cmp
outsl
out
and
and
loope
mov
mov
sahf
rcrl
out
cmpsb
adc
cli
in
jb
pop
lret
sub
sub
neg
jbe
cwtl
ljmp
divb
out
