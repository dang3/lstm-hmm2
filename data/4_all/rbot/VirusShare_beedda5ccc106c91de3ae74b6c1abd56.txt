mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
ficoms
jmp
cmova
pushf
adc
dec
cmp
lock
aam
xor
cmp
xchg
stc
ret
test
ds
inc
pushf
pop
addl
loopne
mov
lret
pop
xor
int
jne
test
js
xchg
daa
and
or
jmp
sbb
dec
mov
add
or
sbb
mov
cmc
pushf
loopne
xor
push
subb
push
adc
fucomp
mov
insl
dec
cs
mov
add
inc
sarl
mov
cld
cmp
cmp
xchg
imulb
sbb
mov
adc
push
sub
lret
jecxz
jns
popf
stc
push
mov
jo
jns
clc
sbb
push
arpl
movl
inc
in
adc
std
xor
mov
jbe
inc
mov
or
mov
push
test
mov
push
xor
push
mov
dec
aam
int3
dec
sub
mov
sub
nop
dec
sub
enter
test
sub
gs
xor
shlb
push
clc
enter
dec
push
movb
dec
adc
es
call
daa
cs
nop
mov
fldenv
adc
hlt
sahf
ss
out
jnp
push
xor
mov
push
in
pop
or
pop
adc
sahf
cli
popa
push
xor
xor
inc
sahf
dec
fsubs
lds
fbld
jecxz
cmp
sub
push
mov
lret
or
jae
ret
mov
mov
imul
jecxz
pop
pop
aam
notb
aad
jb
mov
dec
xchg
dec
mov
outsb
loope
mov
adc
mov
mov
sub
pop
pusha
add
xlat
pop
add
test
mov
adc
loope
cmp
fbstp
iret
xor
pop
sbbb
es
mov
out
fstpl
push
push
movl
adc
jnp
add
ljmp
outsl
jb
aam
loop
pop
and
pop
mov
pop
sbb
cmpsl
dec
mov
mov
fstl
repz
inc
shrb
inc
insb
fldenv
jle
lds
adc
leave
xchg
or
out
or
popa
mov
cmp
stos
scas
idivl
lds
sub
arpl
les
adc
shrl
sub
sbbb
fistl
jmp
jnp
mov
jecxz
adc
mov
xor
pop
stc
stos
pop
dec
cmpsl
adc
sbb
stos
dec
inc
aam
pop
ret
movsb
push
in
js
pop
in
sbb
pop
out
fwait
inc
mov
mov
sub
push
cld
insl
iret
inc
loopne
je
pop
int
icebp
inc
scas
ljmp
mov
jne
push
cli
fistpl
insl
cmp
jge
pusha
and
mov
xor
pop
outsb
sub
push
pop
lahf
andb
pop
insl
hlt
fwait
aam
fxch
lock
sub
jnp
sub
xchg
jno
xlat
lcall
push
and
sub
iret
and
imul
clc
jne
aad
ljmp
pop
popa
gs
bound
jno
push
daa
sarl
ja
or
xorl
or
xchg
mov
icebp
pop
mov
dec
jno
repz
and
xchg
mov
xchg
inc
lods
lcall
jge
xchg
jmp
icebp
xchg
jne
lds
jle
in
call
pop
outsb
es
pushf
xchg
aad
push
cmpsw
mov
jno
mov
pop
data16
das
cmp
fxch
mov
gs
cmp
data16
adc
mov
icebp
xchg
pop
and
sti
pushf
jl
dec
int3
mov
mov
js
xor
in
adc
jo
sbb
cmp
repnz
or
adc
fdivp
jecxz
test
enter
pop
outsl
call
aas
in
popf
inc
scas
cld
in
lahf
cltd
stos
inc
push
xchg
clc
push
repz
or
push
out
sub
xor
pop
add
leave
popf
push
test
xchg
jmp
adc
push
push
sub
xlat
add
fistpll
fisubs
scas
scas
mov
rcll
lret
pop
leave
sti
or
mov
pop
lret
ss
cmpsl
xchg
pop
rcrb
test
ficoml
push
push
roll
mov
sub
out
loope
popf
leave
and
dec
push
pop
inc
fs
pop
cmp
cmp
cmp
push
cmp
lret
inc
lcall
js
mov
icebp
mov
shll
and
or
lahf
xor
add
lahf
jmp
pop
sub
add
fnstcw
mov
pop
pop
in
int
fbld
lods
addr16
lods
inc
xchg
xor
iret
into
bound
push
in
xchg
inc
jmp
imul
pop
in
lret
sub
or
push
sbb
jae
or
mov
xchg
ret
jbe
sbb
xor
dec
xchg
mov
lret
lret
loope
jmp
push
sub
fnstcw
mov
insl
cmp
mov
jno
push
xor
ljmp
and
cld
mov
cwtl
xchg
mov
imul
sub
push
or
cltd
adc
pop
test
std
or
lcall
xchg
and
movsb
xchg
dec
jne
xor
mov
jb
sub
popf
lret
inc
jmp
xchg
inc
add
in
packssdw
pop
call
dec
lret
cmp
ljmp
or
adc
out
mov
sarl
or
sub
mov
fimuls
inc
push
lea
cwtl
gs
or
icebp
addr16
jg
pop
jbe
mov
mov
ret
arpl
loop
jnp
sti
mov
jae
imul
cpuid
or
loopne
pop
je
les
jb
mov
cli
adc
lret
fnstenv
jg
imul
and
hlt
bound
ljmp
push
outsl
mov
push
mov
scas
int3
fstpt
jecxz
or
xor
mov
gs
adc
jecxz
out
inc
pop
mov
shl
sub
push
movsl
imul
mov
or
fisttpl
dec
dec
push
fs
lock
outsl
xlat
popa
sbb
mov
sahf
stos
jnp
ljmp
popa
pop
movsl
mov
mov
dec
rorl
cmp
push
stos
out
out
lods
dec
insb
nop
adc
add
mov
das
mov
rolb
std
shlb
mov
dec
xor
test
and
insb
mov
shlb
push
data16
cmpsl
xchg
ss
push
mov
fisttpll
jo
iret
shll
cld
dec
pop
icebp
push
fsubrs
pop
lods
fnstenv
and
pop
xchg
js
mov
loopne
cmp
cmp
lock
pop
shlb
fwait
inc
cli
pop
mov
sbb
repz
clc
inc
lods
lcall
xor
fbld
dec
pop
in
push
pop
cmp
mov
dec
sub
dec
push
xchg
aam
incb
mov
xchg
bnd
or
repz
fucom
cmp
pop
sbb
daa
pop
notl
mov
dec
testl
pop
and
push
cltd
sub
push
fldt
adc
push
scas
xor
cmp
scas
pop
push
add
or
into
out
sub
into
dec
sbb
xor
out
cmc
cld
jle
shlb
fstpt
call
push
jne
inc
push
jmp
ret
sbb
cmp
xchg
sbbl
dec
cmp
dec
fsubl
daa
jbe
insb
psrad
outsb
mov
mov
test
push
call
in
out
aaa
add
xor
sub
xor
inc
mov
repz
aam
cmpsl
loop
xchg
push
jge
popf
leave
mov
pop
lds
mov
xchg
mov
aad
shlb
nop
mov
mov
test
pop
jne
xchg
fldcw
xchg
and
sub
dec
jl
inc
mov
adc
fwait
mov
cmp
mov
mov
rolb
mov
adc
out
aas
push
inc
das
jl
jecxz
popf
inc
loopne
sub
xchg
pusha
xor
pop
jle
call
ljmp
jbe
add
fmull
sub
xchg
ficompl
jbe
jno
xchg
fnstsw
jg
dec
aam
jmp
fnstsw
sbb
mov
rolb
hlt
or
and
flds
pop
mov
xchg
sbb
mov
jge
cli
lret
cmp
mov
enter
adc
mov
push
das
shll
inc
movsb
xorb
and
mov
mov
sbb
fnsave
into
mov
add
movl
fcomps
mov
xor
jecxz
push
call
jnp
popf
sub
in
lret
xor
and
cmc
jbe
bound
in
mov
imul
sub
sbb
icebp
jmp
dec
inc
pusha
andl
popa
lods
pop
data16
inc
int3
xchg
scas
int3
cmp
pop
jmp
and
mov
adcb
and
inc
sahf
rcrl
aas
lods
jecxz
adc
sbb
xchg
movsl
int
aad
xchg
add
pop
div
icebp
add
adc
hlt
out
fimull
mov
lret
cmpb
loop
es
mov
stos
add
cmp
xchg
mov
sbb
inc
adc
push
pop
adc
mov
les
int3
or
ret
outsb
fsts
sbb
fldenv
adc
mov
mov
mov
adc
popl
lock
inc
jge
decl
sbb
inc
or
movsl
mov
jno
pusha
jge
std
pusha
and
cmp
shrb
aam
push
dec
xchg
fidivrs
mov
sub
daa
pop
fdivl
scas
mov
mov
loopne
inc
aas
sub
addr16
jo
nop
scas
fdivrl
push
pop
sbb
divb
pop
ret
pop
xor
popa
rcr
scas
inc
xor
mov
in
mov
mov
jge
clc
and
movsb
adc
xor
pop
aas
cwtl
push
mov
pop
loop
ret
or
dec
mov
mov
std
scas
inc
xor
mov
push
bound
pop
and
sub
test
sub
dec
icebp
mov
hlt
sub
int
and
pushf
aad
popa
xlat
outsb
dec
inc
mov
les
in
xor
push
xor
pop
ror
and
insb
ljmp
or
mov
in
jo
in
loopne,pt
add
adc
lret
xchg
dec
dec
pop
fidivrs
js
cs
cmp
scas
jmp
loope
dec
lock
cltd
push
outsl
sbb
mov
rolb
sbb
test
enter
xor
aam
pop
dec
pop
xor
push
sub
jmp
sahf
add
imul
test
fildll
mov
cli
xchg
repnz
lea
push
rcrb
push
xchg
mov
or
repz
cmpb
ret
xchg
inc
dec
mov
adc
or
push
push
mov
cmpsl
adc
jnp
out
aaa
xor
cli
lea
hlt
mov
jbe
dec
aad
cmpsb
mov
movb
divps
popa
adc
andl
and
popf
ret
cli
imul
test
jb
pop
mov
dec
cmp
pusha
fptan
inc
cmp
pop
add
out
out
in
mov
sti
sbb
sub
add
add
mov
ret
sti
scas
movq
bound
mov
adc
and
insl
not
sub
pop
test
flds
jns
aas
push
mov
leave
xchg
cmp
lds
into
andl
movsb
inc
push
add
cmp
push
inc
pop
adc
xor
repnz
aam
insl
adc
stc
lea
xchg
addr16
mov
xchg
jg
popf
in
mov
pop
jp
aad
negl
cmp
xchg
test
sub
xchg
jle
cld
pusha
fsts
arpl
aam
enter
repz
xchg
aaa
loopne
cli
stos
sti
xchg
sub
ljmp
push
and
inc
push
ja
jmp
pushf
loop
mov
sbb
int
adc
push
inc
lea
and
add
outsl
jne
xchg
ror
mov
cmp
imul
daa
dec
xchg
sbbl
in
mov
inc
ss
adc
xchg
pop
pusha
cmp
iret
adc
xor
push
imul
es
mov
add
out
movsl
mov
aad
mov
subps
loopne
into
and
adc
enter
popa
mov
clc
sub
sti
andb
pop
push
cmp
adc
test
and
and
into
jecxz
add
xchg
or
sar
incb
and
xor
nop
mov
mov
dec
jmp
popf
mov
daa
icebp
dec
loop
pop
mov
call
ljmp
xor
jb
sub
adc
jp
mulb
inc
mov
pop
sbb
pop
push
adc
mov
adc
jle
push
pop
lods
lods
cmp
xchg
insl
cmp
roll
iret
sub
mov
in
dec
test
push
mov
cmp
fwait
into
sub
adc
rorb
adc
push
mov
test
cmp
popl
jmp
xchg
in
sub
js
imul
mov
fbld
or
mov
loope
fwait
dec
add
ja
xor
mov
stc
sarl
mov
ja
fcoms
pop
out
adc
ficompl
inc
mov
cmp
mov
cmp
lret
mov
sbb
xchg
cmp
inc
enter
je
shlb
test
movsl
stos
mov
cmc
and
divl
lahf
test
arpl
add
scas
loop
cmpsb
arpl
adc
adc
mov
mov
cltd
mov
pop
roll
jns
loopne
xchg
cmpsl
fwait
out
sti
mov
std
and
icebp
xlat
call
rclb
jmp
andb
hlt
mov
sbb
inc
rcrl
arpl
dec
jge
xchg
in
jmp
jl
jbe
insl
jecxz
push
jle
jbe
cmp
nop
mov
jnp
adc
xor
push
ficompl
cmpsl
mov
sub
add
stos
pop
mov
jp
and
les
jp
cs
or
jb
fimuls
imull
dec
adc
xor
in
dec
out
pop
pushf
or
into
push
lds
push
popf
pusha
rol
cld
lods
mov
adc
mov
inc
push
mov
test
ja
pop
sbb
pop
push
fsts
dec
js
push
mov
call
leave
scas
nop
mov
xchg
mov
stc
sbb
divps
lret
xchg
cltd
sub
inc
fucomip
lret
add
xorb
rolb
dec
fwait
mov
pop
enter
cmp
sub
lock
push
xlat
dec
push
sub
add
pop
gs
inc
cs
and
adc
mov
movsl
stos
data16
ljmp
xchg
inc
jns
jmp
cwtl
aam
xor
jmp
xchg
fwait
mov
shrb
adc
jecxz
aad
lcall
cmp
adc
cs
lcall
je
movsl
cmp
pop
xchg
subl
fmull
pop
idivl
xchg
retw
jmp
xor
mov
mov
stc
pushf
add
fwait
or
xchg
add
sbb
ret
insl
pop
cmp
add
lods
xor
xor
push
shlb
xor
or
jecxz
mov
pop
push
mov
lods
push
adc
dec
xorl
push
push
outsb
xchg
negl
shll
mov
ret
mov
fstpt
jo
push
sbb
pop
push
add
xchg
cmc
and
out
add
aad
subb
and
push
sbb
sbb
cs
cmp
leave
xchg
andl
lock
ljmp
movsl
sub
int3
inc
pop
mov
enter
aas
and
mov
xchg
into
in
orl
lret
test
jns
dec
cld
sbb
int3
shll
push
xchg
mov
cwtl
ljmp
les
mov
mov
je
fdiv
pop
mov
adc
mov
or
mov
mov
jg
cmpsb
out
add
or
inc
push
jbe
xchg
jns
dec
mov
dec
jmp
xchg
adc
push
xor
inc
js
push
mov
repz
test
daa
cld
into
xchg
fwait
sub
mov
push
cmpsb
push
fdivs
pop
xchg
xchg
cld
mul
mov
sbb
mov
out
xlat
rcrl
hlt
rcll
sahf
pop
int
popf
mov
mov
daa
lds
inc
fcmovnbe
and
lods
fwait
and
in
add
inc
leave
mov
popf
in
cmpsb
add
incb
and
stos
call
xor
adc
movhps
inc
xchg
leave
aad
push
mov
adc
inc
lcall
dec
sbb
inc
movsb
mov
push
mov
add
pop
mov
in
or
insl
mov
addb
scas
mov
imul
rolb
das
test
sub
dec
push
dec
pop
mov
rolb
test
push
subb
pop
fisubrs
es
or
ja
mov
sub
push
stos
movl
inc
inc
fdivrs
lods
push
arpl
xor
push
pop
push
inc
fisttps
mov
fnstcw
fistpll
stc
inc
sar
jge
sbb
or
ljmp
ja
dec
mov
adc
cs
or
cmp
mov
cltd
fistps
loop
sbb
aaa
inc
jae
mov
sti
cmc
adc
push
jmp
pop
pop
pushaw
in
repnz
add
lcall
push
push
dec
xchg
xchg
test
sbb
lds
xor
push
mov
sub
and
jno
neg
dec
sarb
mov
jae
cld
xor
push
xor
jge
insl
add
das
out
adc
les
js
mov
leave
push
xor
xor
jbe
and
repz
aad
lret
and
stos
jbe
dec
sbb
pop
bound
fdivl
mov
or
mov
f2xm1
outsl
push
pusha
lock
pusha
sbb
lock
mov
add
stc
mov
cmp
test
shrb
mov
fisttpl
mov
pusha
lods
stc
jo
das
fimuls
stos
mov
cmc
xor
es
dec
scas
fwait
shll
cmp
sub
jge
mov
dec
pop
ja
xor
stc
out
mov
cld
push
jo
jg
or
cmc
jg
ss
jo
aad
inc
lret
das
adc
mov
out
cs
scas
cmpsl
test
sub
adc
sub
shlb
pop
xchg
notl
xor
bound
or
jbe
loope
sahf
flds
cmp
dec
std
push
icebp
loop
mov
outsl
or
inc
js
xor
enter
rcrb
mov
outsb
mov
mov
ret
xor
adc
ds
cmp
adc
arpl
add
les
imul
leave
daa
in
icebp
leave
lods
mov
and
mov
jno
xor
or
lret
add
dec
dec
cmp
out
dec
xor
imul
aad
lods
and
jge
cs
dec
xchg
xor
cwtl
imul
sbb
testb
pop
adcb
icebp
add
mov
imul
xchg
rclb
cmp
inc
or
inc
xchg
addr16
add
cmp
jge
push
dec
xor
pop
jecxz
push
sahf
jo
mov
jecxz
das
lcall
pop
enter
call
cmp
stos
rcll
outsb
shll
inc
cmp
pusha
xchg
sti
ret
gs
ss
cmp
cwtl
enter
sub
sti
xor
mov
lret
mov
inc
sti
scas
and
cmpsl
xor
cmc
std
push
cld
xor
arpl
jge
cmc
lods
inc
cmc
pop
cltd
adc
imul
xor
xchg
xor
pop
mov
popl
dec
mov
daa
out
pmaxub
shrb
cmp
or
fnstsw
pop
pop
add
ficompl
inc
push
push
xchg
repz
shlb
pop
mov
loop
xchg
scas
in
call
or
push
fcoms
mov
inc
out
mov
xor
clc
add
ss
push
mov
fcomi
aaa
inc
lret
rolb
inc
add
stos
dec
mov
and
jge
aam
in
ret
add
mov
or
xchg
mov
ret
mov
popa
cmp
cwtl
mov
cmpl
out
ret
repz
cs
stos
sub
gs
daa
movsl
lods
psllw
pop
inc
stos
bound
dec
fnsave
les
sbb
mulb
and
or
daa
dec
and
sbb
xlat
push
pushf
pop
stos
mov
repz
sbb
push
sti
addr16
test
lods
xchg
xchg
data16
and
pop
jle
push
ret
fists
sub
pop
push
mov
mov
not
pop
sub
add
dec
aad
lea
mov
insb
maskmovq
notl
testb
in
sti
sahf
adc
or
mov
push
jbe
enter
fs
daa
jno
sti
mov
movsl
sbb
cmc
inc
push
shrl
jo
mov
cli
fwait
or
xor
add
sbb
popf
cs
push
inc
negl
dec
sbb
xchg
test
jno
xor
outsb
jmp
xlat
insb
mov
mov
pop
dec
pop
mov
out
jnp
sub
mov
repz
int3
js
fdivl
arpl
and
and
pop
mov
mov
addr16
cmp
add
cmc
add
test
jl
inc
lcall
ret
cmp
cmp
cmp
dec
je
or
or
pop
leave
hlt
and
insb
mov
and
out
gs
xchg
jb
pushf
push
sub
xor
dec
sti
xchg
enter
popa
or
test
sbb
repz
push
out
inc
outsl
stos
and
xchg
and
push
inc
sbb
cltd
inc
cmp
sub
push
lahf
inc
sbb
in
es
insl
aad
movsl
insl
mov
add
es
in
popf
cmpsl
pop
dec
out
dec
mov
call
frstor
cltd
jns
pop
adc
cmpb
dec
xor
stos
inc
shrl
or
sahf
adc
or
fcoml
dec
pusha
fnstsw
mov
sahf
mov
div
or
leave
adc
cltd
or
push
xor
bound
cmp
inc
out
aam
sub
pop
inc
mulb
ftst
andb
sbb
jl
mov
test
xchg
subb
add
and
pop
jno
xchg
out
add
inc
mov
cmpl
jle
fcoms
mov
addb
test
in
mov
lahf
jmp
scas
call
call
rolb
adcl
pop
nop
cmp
and
std
jne
xchg
push
int3
xchg
ds
call
cmpb
out
sbb
add
outsl
mov
inc
aam
ret
idivb
push
cmpsb
aam
sub
clc
pop
mov
test
dec
iret
lds
lds
jno
test
xor
std
sbb
xchg
call
xor
push
stos
stc
jne
sub
hlt
xor
lock
fs
xchg
lock
icebp
mov
int
in
mull
mov
adcb
and
jo
sub
ljmp
mov
sub
cli
inc
or
mov
push
insb
out
cmp
imul
xchg
xchg
das
ljmp
mov
ret
shr
jg
cmpsl
inc
leave
scas
rol
add
lcall
dec
sbb
inc
test
dec
js
bnd
mov
cltd
add
dec
mov
leave
dec
lret
mov
fnstenv
pusha
dec
or
xor
inc
insb
out
dec
sbb
adc
push
bound
gs
cs
cmp
cmc
inc
lock
mov
xchg
push
mov
mov
push
sub
sub
xor
test
pop
outsb
xchg
cld
leave
xlat
adc
add
cmp
mov
testb
lods
popf
aam
daa
mov
aas
std
xor
mov
push
les
daa
jp
pop
orl
lods
sbb
out
cmc
aam
add
jp
dec
sub
call
aad
sub
mov
in
xlat
or
outsb
or
mov
scas
idiv
xor
push
dec
in
fldl
sub
popa
loop
and
pop
cs
xchg
xorl
jo
and
adcl
popf
pop
push
jne
lods
jmp
test
cmp
push
jnp
cmc
adc
cmp
pop
xor
in
in
jns
idivb
out
xchg
add
arpl
test
sbb
sub
fwait
or
std
jmp
pop
xchg
sub
mull
js
lea
aaa
cwtl
stos
mov
movsl
jle
inc
aas
icebp
inc
add
push
cmpb
addr16
lcall
xchg
inc
dec
xlat
pop
adc
adc
xor
pop
mov
loope
xor
push
out
xchg
adc
cltd
into
ja
xchg
cli
cs
imul
into
sbb
shrb
and
jg
dec
mov
lahf
stos
daa
dec
jmp
shlb
inc
mov
ficoms
lock
ret
in
mov
jecxz
test
mov
xor
out
call
push
xrelease
sbb
call
mov
lea
je
cmpsb
inc
iret
scas
repz
cld
jno
cli
lods
clc
xor
loop
sub
jo
iret
jp
sub
or
arpl
dec
push
jno
pop
adc
sbb
mov
inc
fnsave
mov
sti
adc
xchg
inc
xchg
adc
cli
sahf
fidivrl
xchg
mov
mov
orl
pop
mov
cltd
sub
cmc
lahf
add
cmpsb
sub
dec
lock
dec
or
pop
inc
sub
insl
rclb
fcoms
push
xor
push
repz
nop
dec
sub
or
or
xchg
ja
adc
adc
scas
jo
insl
fdivrl
inc
lds
or
sbb
dec
sarl
insl
lahf
xor
out
push
shll
xor
movsl
test
jecxz
pop
fsubrs
pop
gs
jne
dec
add
mov
popa
or
cmp
mov
stos
fwait
std
neg
mov
leave
rclb
mov
inc
xchg
cmc
aad
adc
xchg
adcb
cmp
popa
add
and
mov
stos
inc
sub
movsb
push
aad
nop
mov
loope
xor
test
daa
nop
scas
jge
xchg
shl
xchg
xchg
inc
movsb
popw
lea
mov
add
iret
test
popf
movsb
cmp
test
inc
lods
inc
js
xchg
pop
int
nop
pop
and
ret
mov
iret
lcall
and
int
add
arpl
jmp
adc
outsb
sbb
fwait
mov
add
jecxz
push
repz
je
mov
cmp
inc
mov
xchg
or
mov
das
sub
sbb
xor
add
pop
addl
insb
mov
xchg
adc
pop
inc
mov
pusha
test
ret
jnp
jg
xchg
test
lods
ss
aad
pop
add
dec
cmpsl
sub
sbb
icebp
jno
cmp
and
call
jo
data16
aas
jnp
adcl
xor
mov
out
push
adcb
roll
xchg
je
int3
jp
rcl
pop
xor
out
ljmp
xchg
adc
dec
mov
jns
inc
xor
or
sub
push
lcall
test
mov
push
pop
sti
aas
sbb
and
jge
cmpsb
mull
push
jns
sahf
adc
cwtl
fldpi
mov
fwait
ret
ds
icebp
lcall
and
mov
scas
stos
push
or
fmul
push
jl
loope
lods
lds
mov
sub
or
mov
xchg
je
neg
pop
pop
mov
test
mov
lret
imul
inc
sbb
mov
sub
and
sbb
sahf
mov
aad
loopne
pushf
mov
insl
xor
xchg
and
cmp
stos
inc
cmp
cmp
lret
inc
inc
cmpsb
enter
mov
mov
mov
jne
test
repz
call
inc
sub
scas
sub
mov
dec
clc
js
or
adc
dec
xor
lahf
pop
repz
jae
mov
and
and
cmpsb
aad
je
mov
aam
ja
jb
test
pop
lret
pop
int3
in
xor
addr16
add
out
test
push
inc
sti
stos
sbb
cld
mov
movb
mov
outsb
bound
mov
imul
mov
rorb
mov
sub
xor
cmp
mov
or
adc
jb
nop
sbb
lea
dec
lret
push
data16
stos
jno
and
adc
movsl
ficoml
mov
testb
sbb
xchg
in
test
push
mov
inc
sub
dec
push
test
clc
mov
xor
fistpll
int3
jle
or
shrl
popf
imul
loope
xchg
xchg
in
cmp
cmp
lods
out
cmp
hlt
jnp
mov
cwtl
rcrl
pminsw
pop
push
scas
je
push
xchg
pop
out
xlat
fisttpll
mov
inc
push
fdivl
mov
fnstsw
ljmp
outsb
pop
sahf
sahf
pop
jnp
bound
add
cwtl
xchg
xchg
push
mov
xor
bound
filds
cwtl
pop
in
pop
mov
cmpsl
mov
popf
movsb
in
cs
sbb
loop
fwait
dec
jl
jmp
xchg
push
stos
pop
pop
push
test
and
jnp
call
std
xchg
and
nop
inc
xor
sti
testb
cli
insl
lods
jns
cmc
popf
xchg
and
stc
into
dec
inc
out
or
out
adc
sbb
shll
pop
cld
mov
in
pop
jecxz
leave
into
cmp
movl
pop
fdivrl
jl
dec
cltd
push
sub
test
out
push
out
pop
xchg
lods
cmpsb
and
mov
lret
push
pop
and
push
mov
mov
incl
movsb
xchg
push
sub
adc
ss
cmp
mov
xchg
and
sub
add
jmp
lcall
cmpsb
daa
adc
ret
dec
outsl
int3
int
outsl
mov
xor
mov
cltd
inc
and
push
cmp
xor
mov
mov
sti
xchg
stos
lods
xor
and
in
lods
rcll
js
adcl
jbe
mov
push
icebp
adc
or
pop
sub
lods
jb
jo
add
inc
popf
scas
xchg
adc
sti
rcrl
cs
sti
fisubl
mov
xor
pop
inc
pushf
test
cld
sbb
xchg
rorb
lods
cltd
sbbb
in
and
mov
dec
dec
or
popf
dec
sbb
fsubr
cli
js
mov
cld
lcall
sub
pop
out
sbb
jmp
outsl
out
dec
movsb
dec
insl
movsb
das
test
frstor
clc
outsb
leave
pop
push
jecxz
sub
test
pop
xor
and
xor
sub
dec
and
xchg
jle
mov
push
and
add
std
xor
dec
jae
addb
jp
scas
mov
pushf
pop
fadds
cmp
stc
out
jnp
add
sub
pop
fcompl
addb
and
arpl
int
mov
adc
addr16
mov
add
jnp
out
int
fmulp
xchg
lret
cwtl
inc
decb
out
pop
sub
and
int3
pop
and
dec
push
or
test
sbb
xor
in
mov
sbb
fucomi
jl
xor
add
scas
xor
adc
push
imul
mov
xor
je
pop
data16
dec
xor
dec
add
push
add
sub
sbb
pop
dec
pop
inc
clc
dec
mov
jle
lea
outsb
ficompl
idivb
int
enter
imul
dec
jo
push
imul
dec
hlt
inc
adcb
dec
jo
movsl
cwtl
mov
daa
push
dec
cmp
sbb
iret
sbb
mov
rcr
cld
lcall
xlat
xchg
adc
lret
pushf
out
inc
fwait
insb
mov
decb
fwait
jle
movsl
scas
pop
sub
mov
pop
jmp
negl
jno
in
push
dec
xchg
xor
inc
imul
bound
mov
out
pop
mov
jmp
bound
lods
adc
nop
stos
or
fbstp
cli
in
icebp
mov
pop
add
cltd
sbb
xchg
xchg
pop
push
xor
jmp
push
daa
jp
push
out
faddp
inc
push
mov
mov
jbe
data16
mov
add
cmc
movntq
out
fldl
stos
or
scas
mov
push
in
inc
mov
pop
jne
sbb
jmp
xor
sbb
cmp
stos
inc
in
xchg
add
in
jmp
scas
pushf
out
adc
mov
xor
movsl
arpl
xlat
jp
shlb
pop
mov
psllw
imul
xorl
data16
xor
pushf
shll
call
mov
jge
data16
std
scas
dec
out
into
pop
dec
xor
lock
push
movsl
sbb
and
lock
int
addr16
xchg
cwtl
sbb
add
push
cwtl
call
loop
inc
xchg
loop
call
jecxz
ds
call
test
jb
je
fld
jno
push
adc
cmp
cmpsb
inc
jg
push
mov
jbe
mov
sbb
pusha
call
cli
scas
cli
out
add
xchg
negl
movsb
jmp
imull
mov
sarb
rorb
pop
iret
xchg
and
addl
mov
or
mov
andl
and
in
inc
cwtl
cs
sub
js
inc
icebp
pop
add
sub
shrb
mov
ja
or
rolb
sub
inc
xor
mov
testb
pushf
lahf
cmp
pop
rcrl
out
xor
ja
insl
sub
ficomps
in
popf
sub
cmp
inc
scas
inc
icebp
ss
mov
fldl2t
sub
bound
pop
stc
clc
add
mov
xchg
je
sahf
pcmpgtd
push
xor
add
mov
arpl
xchg
mov
ds
and
pop
in
pop
push
adc
sub
ret
pop
or
hlt
xchg
xor
and
mov
sbbb
cmpsl
mov
iret
cli
rolb
and
mov
es
or
mov
sub
cmp
xor
iret
ja
fdivs
scas
das
pop
dec
lods
push
nop
nop
ret
int
roll
dec
cmp
cwtl
stos
or
rorb
pop
insb
addr16
sti
cmp
dec
pop
push
aam
cwtl
ret
sarb
stos
gs
stc
fmuls
negl
out
loopne
test
jl
or
mov
push
sbb
jns
xchg
add
jo
mov
add
scas
incl
push
insb
jg
adc
adc
and
sar
out
and
in
add
or
stos
sub
imul
push
dec
inc
pop
inc
outsl
push
adc
pop
clc
mov
es
into
mov
mov
ss
out
mov
pop
xchg
inc
xchg
adc
add
cmp
lea
ja
shlb
sub
mov
pop
out
shll
xor
jno
push
lret
enter
push
push
int3
outsb
test
inc
lds
xlat
in
test
mov
mov
sub
and
lret
insb
sub
fists
in
cmp
in
dec
cmc
inc
fistl
xor
push
mov
rcrb
cmp
cs
addr16
int3
and
rclb
xchg
pop
in
jge
xchg
lret
xchg
xor
testl
adc
sbb
inc
movsb
and
pop
pop
call
adc
or
adc
sbb
sub
xchg
nop
sbb
mov
xchg
mov
rorb
xor
push
cmpsl
add
rcrb
push
repz
lcall
jge
lcall
stc
shl
pop
jo
sbb
sub
adc
jl
fstp
mov
gs
mov
sti
and
or
push
pop
lods
inc
stos
jg
fisttpl
xchg
pop
sbbb
mov
fstps
sbb
sarb
cmc
std
adc
scas
mov
negl
lock
pop
repz
enter
lods
shl
sbb
lock
sub
push
push
mov
jne
cmp
xchg
repz
sbb
sub
dec
fnsave
adc
std
xchg
jb
lret
mov
xor
jae
xor
xor
aas
adc
es
jae
mov
pop
repnz
jne
xor
pop
test
test
pcmpeqb
and
out
mov
ljmp
bswap
sbb
sbb
fadd
cmp
fdivp
frstor
outsb
lahf
int
and
dec
mov
mov
push
loopne
mov
jno
stos
outsl
fsubr
cld
ja
js
lret
add
notl
push
int3
xor
popa
rclb
jb
cltd
jg
xor
aas
inc
outsb
dec
inc
fnsave
mov
lds
fistl
setns
and
push
in
ja
dec
pop
pop
bound
and
push
daa
push
out
out
cmpsl
cmp
sbb
mov
lods
dec
inc
cmp
fwait
in
fdivrs
sbb
rclb
push
dec
mov
dec
pusha
fadds
loopne
mov
pop
mov
cmp
ret
es
repnz
mov
aas
mov
xchg
sbb
ret
std
jp
cmp
or
mov
inc
and
cwtl
dec
addr16
pusha
push
aas
bnd
pop
and
mov
loope
bound
nop
in
mov
data16
loopne
or
and
cld
jl
repz
inc
testb
dec
add
xor
pusha
adc
push
inc
push
nop
push
stos
mov
mov
pop
cmp
fldt
jo
and
ret
stc
jecxz
fadds
fsubp
and
lahf
xchg
inc
xchg
jne
in
sbb
ss
mov
fcmovb
lahf
imul
mov
pop
mov
out
nop
hlt
pop
mov
loope
mov
mov
mov
or
leave
xor
ljmp
jg
mov
popf
popa
pusha
insb
ret
fstpl
adc
sub
cmp
pushf
and
in
cmp
movsb
aaa
or
xlat
imul
mov
gs
and
mov
orb
data16
in
inc
and
xor
sbb
push
test
jnp
and
rcrl
jnp
orb
cli
mov
mov
rorb
xor
fstps
push
or
loope
add
and
jp
jo
clc
mov
xchg
mov
adc
movsb
push
arpl
ljmp
mov
pusha
fdivs
jle
jo
imul
sti
xor
xchg
adc
fdivr
and
cmp
std
mov
fimull
std
outsb
sub
push
xchg
dec
cltd
xchg
clc
adc
cwtl
scas
aad
test
dec
push
xchg
dec
ss
les
movsl
out
mov
les
push
out
xor
xlat
stos
xchg
pop
insb
faddl
mov
inc
std
inc
push
dec
inc
jge
adc
mov
inc
inc
mov
jle
mov
pop
int3
aam
dec
jecxz
hlt
test
int
daa
xor
sbb
xor
push
pop
in
lcall
arpl
dec
stos
fwait
out
adc
add
scas
inc
push
jo
stos
andl
push
jno
and
outsb
ja
je
dec
mov
insl
lret
incb
in
mov
sub
nop
adc
mov
hlt
add
jp
pop
popa
add
punpcklbw
xor
addr16
aam
lret
dec
xlat
jl
cs
mov
xchg
mov
xchg
sbb
mov
aaa
dec
adc
les
loope
cltd
outsb
xchg
clc
add
and
sbb
out
jno
bsr
sbb
rcr
mov
cmp
mov
shrl
inc
faddp
mov
mov
pop
ja
mov
es
out
sahf
jne
mov
sub
js
mov
lret
js
popa
daa
push
jnp
dec
loopne
shlb
jb
sbb
pop
cmp
mov
scas
and
shr
pop
pop
add
dec
ds
and
ret
and
xor
nop
add
add
ds
shrl
xor
xor
mov
shll
adc
stos
add
pop
and
fbld
jl,pn
std
xchg
xchg
cmp
pop
lret
xchg
or
test
daa
daa
rcr
or
and
pop
repz
jp
cmpsb
sarl
arpl
cmp
inc
lahf
fsts
test
icebp
mov
aad
out
adc
sbb
into
imulb
fstl
push
std
shr
nop
ss
lds
movsb
dec
and
cmp
cmp
aas
sbb
lret
sbb
adc
or
loope
push
pusha
pop
lret
mov
pop
rcll
jmp
stos
addr16
stos
adcl
push
lds
adc
jnp
mov
pop
scas
push
out
pop
xchg
jp
pusha
test
decb
movsb
sbb
pop
lahf
and
push
mov
dec
addr16
cmc
xchg
dec
adc
push
xchg
scas
xchg
movsb
fldenv
rorb
and
shll
lods
jmp
and
adc
adc
jge
inc
movsb
lods
mov
mov
inc
sahf
pop
jp
faddl
add
in
ds
es
in
idiv
push
fldt
lahf
js
add
xor
int
popa
and
into
ljmp
add
xor
insl
jge
scas
in
addr16
inc
push
stos
mov
xor
add
insb
cs
iret
out
mov
movb
sbb
daa
sbb
faddl
cs
mov
imul
mov
dec
es
or
ja
pop
lcall
xchg
jl
sti
movsl
insl
cwtl
pop
pop
jmp
stc
lock
pushf
mov
sti
push
pop
xor
loop
and
mov
mov
cmp
dec
sbb
xor
pushf
stos
jnp
adc
std
jmp
jecxz
pop
addl
jnp
pxor
out
add
pusha
push
insb
xor
sti
or
arpl
add
jno
out
mov
ss
push
stc
test
and
lds
adc
scas
lds
cmpsb
push
clc
pop
or
ss
pusha
hlt
add
lods
sbb
rcrb
stos
adc
adc
fnsave
insb
addb
sub
pop
pop
aad
sahf
mov
or
nop
shll
lahf
xchg
mov
cld
std
loopne
mov
adc
lahf
add
jno
jns
int
mov
int3
xor
xor
aad
in
and
fistpl
xor
cmc
pop
mov
sarb
scas
rol
xchg
stos
js
sbb
push
jb
fs
popf
cmc
loope
inc
cli
lret
outsl
pop
imul
aam
sbb
ret
imul
sbb
cmpsl
mov
mov
movsl
insb
xchg
push
rcrl
inc
add
mov
inc
xchg
xor
sbb
out
cmp
out
mov
pop
xchg
enter
js
add
arpl
inc
sub
and
stos
and
jp
sbb
sbb
pop
dec
cmp
xchg
or
insl
mov
int
scas
scas
pop
daa
pop
stos
push
sub
push
scas
or
sahf
jns
dec
mov
push
pop
mov
xchg
add
mov
loope
fisubrl
sarb
fsubr
jns
sub
xchg
es
cs
dec
cmpsl
pop
and
add
or
adc
adc
cmp
dec
ja
inc
aas
push
jmp
sti
mov
into
xchg
sbb
sub
clc
mov
pushf
fcmovb
sbb
jno
adc
pop
add
push
jnp
jae
fisubrs
add
inc
adc
fisubs
dec
addr16
fmull
jno
mov
jbe
add
fnstsw
mov
jge
shlb
insl
inc
js
jle
and
stos
dec
add
je
fistpll
pusha
cmp
mov
rol
and
sahf
pop
in
add
addr16
out
dec
jb
outsl
mov
xor
aaa
sbb
nop
push
scas
mov
fnstsw
inc
push
faddp
adc
jnp
out
xchg
mov
test
xchg
xorb
sub
popa
jns
push
sbb
mov
adc
mov
cmpsb
push
or
scas
jge
loopne
movsl
fs
jno
loopne
into
inc
inc
out
inc
and
add
sbb
stos
fists
jle
add
or
cmp
addr16
dec
outsb
push
cmp
adc
outsb
push
xlat
je
enter
fucomi
loop
dec
dec
loop
clc
push
adc
pop
adc
ds
mov
and
xor
sbb
imul
add
mov
jnp
lea
ljmp
adc
sub
call
pop
mov
loop
jmp
jmp
fcomip
pusha
sti
lds
shrb
addl
mov
adc
pop
xchg
insl
push
mov
add
fidivl
mov
add
aas
pop
lds
push
gs
mov
pushl
addr16
clc
jmp
iret
dec
das
lahf
pop
mov
jle
adc
xchg
cwtl
or
cmp
les
orb
and
jae
pop
jg
ljmp
sbb
inc
sub
arpl
pop
iret
popa
inc
push
xchg
mov
nop
ror
push
js
xchg
cmp
inc
mov
add
data16
adc
cmpsl
pop
mov
adc
das
nop
pushl
mov
or
push
pop
mov
fwait
mov
sahf
inc
ret
or
cmp
cmpsl
dec
ja
dec
xchg
add
sbb
mov
cmc
outsb
mov
mov
mov
les
push
lahf
in
mov
cmp
rcr
clc
rcll
cmpsl
std
pop
aad
inc
push
fistps
and
add
jnp
jle
lcall
clc
lea
sbb
sbb
cmp
and
int
pop
sbb
inc
pop
ret
sub
sti
lahf
std
or
scas
adc
iret
push
pop
pop
adc
fistl
mov
or
inc
push
dec
cltd
xchg
pusha
xor
dec
xlat
fwait
or
push
lret
lahf
adc
xchg
and
fcmovnbe
lock
inc
xchg
ret
mov
push
dec
adc
loopne
nop
jnp
mov
mov
cltd
push
loopne
popf
outsl
and
mov
inc
jmp
inc
sbb
rcl
aad
cmpsb
inc
andl
add
jo
nop
and
inc
cmp
mov
jno
mov
insb
loopne
pop
xor
out
mov
pop
cmpsl
inc
ffree
sub
stc
scas
mov
sub
test
cmp
popa
pop
sbb
pop
ljmp
jmp
lods
data16
js
pop
mov
sbbb
sti
inc
das
loopne
pop
push
es
mov
add
xchg
push
cmp
lret
dec
xor
ss
leave
ret
cmpsb
adc
push
dec
movsb
aaa
inc
add
add
outsl
xlat
mov
outsb
mov
ja
outsl
outsl
out
jl
jae
pushf
dec
jb
mov
popa
ds
lock
cmp
mov
mov
in
in
adcb
test
mov
ret
xchg
xchg
xlat
push
push
fiaddl
bound
push
stos
sbb
notl
aaa
ja
out
aad
dec
add
xchg
es
ret
data16
int3
cmpsl
adc
rcr
sbb
aaa
test
pusha
push
orl
pop
sbb
hlt
shlb
push
cmpsb
jmp
enter
sub
icebp
cmp
or
je
and
jmp
lock
add
lea
fwait
int3
inc
pop
dec
je
imul
inc
icebp
xchg
fs
daa
jbe
sub
popl
cmp
pop
xor
mov
mov
popa
dec
mov
mov
popa
daa
jno
add
cmpsl
mov
sbb
sti
in
xor
or
jle
adc
xor
sbb
ret
scas
mov
add
adc
add
ror
push
lds
inc
push
and
and
movsb
ja
lahf
push
and
lret
mov
mov
movsb
push
sbb
mov
imul
xor
pop
mov
cld
mov
scas
xorb
das
dec
xchg
cwtl
cmp
test
testl
ljmp
mov
mov
cmpsb
mov
ljmp
inc
mov
bound
mov
pop
sti
insb
insl
pop
mov
into
cmpsl
inc
ds
mov
or
inc
les
scas
popa
or
lcall
jge
mov
sbb
sbb
pop
mov
mov
dec
clc
mov
xor
loop
pop
adc
inc
mov
dec
rcr
lods
dec
mov
std
sub
push
mov
int3
mov
or
xchg
push
in
loopne
lods
dec
pop
jge
jecxz
dec
loope
mov
mov
or
inc
dec
mov
testb
in
mov
pop
add
das
push
xor
mov
push
dec
aam
fisubl
test
lret
mov
outsl
and
mov
xor
or
inc
lds
mov
les
cmp
mov
xor
lret
loope
inc
mov
mov
pop
inc
dec
popf
out
cmp
inc
push
ljmp
xor
daa
lock
or
jns
adc
rclb
lahf
push
xor
pop
mov
out
dec
jns
cmc
ljmp
push
dec
or
sbb
int
sub
mov
ficoms
in
scas
out
fadds
std
idiv
imul
mov
cmp
mov
and
add
mov
test
test
repnz
dec
sub
lock
das
insb
lds
inc
push
cs
addb
add
es
jno
jbe
mov
jbe
lods
pop
lcall
rep
inc
test
cmp
jg
repz
js
push
jns
cwtl
pop
mov
xchg
cmp
adc
and
mov
or
fidivs
cmp
pop
inc
inc
aam
dec
inc
insb
push
sbbl
fwait
out
cmp
push
into
jne
jp
in
scas
adc
and
cmp
imul
lods
loopne
xor
les
inc
fwait
je
jne
scas
xor
and
testl
bound
xor
pop
dec
cmp
mov
and
add
mov
cmp
rclb
inc
xor
or
fadds
ds
stos
testb
lcall
lret
sbb
add
je
scas
popf
adc
jae
and
ret
subb
divb
pop
xor
sub
in
insl
add
aas
loope
push
sub
mov
sbb
lahf
loopne
scas
sbb
mov
aam
inc
jae
ljmp
leave
rorb
push
xchg
jae
push
test
push
popf
scas
push
jne
mov
pop
cld
in
shr
je
test
outsl
lcall
jae
cmpsl
push
mov
aad
lock
or
movsl
rorb
lea
cmpl
cmpsb
cmpsl
rolb
and
fadds
mov
cmpsl
jecxz
popa
xor
repnz
out
sbb
ljmp
sbb
push
lea
lods
lods
int
lods
xor
orb
pop
jmp
popf
cld
mov
ret
push
pop
fs
outsl
filds
add
inc
ficomps
into
lods
out
inc
or
lea
arpl
aad
sub
pop
pop
xchg
aad
cmc
push
inc
adc
shlb
or
mov
jae
xor
push
sbb
mov
out
sbb
jnp
pusha
push
dec
outsb
in
scas
call
fcomps
jae,pn
lods
jmp
addr16
stos
hlt
cmp
mov
pushw
mov
sbb
adc
aas
cmp
cltd
sahf
xchg
inc
cli
fdiv
outsl
cmc
test
gs
sbb
fucom
cmp
jmp
push
fists
mov
pop
push
mov
jge
cmp
cmc
fnsetpm(287
shl
xor
mov
mov
sbb
popa
cld
rcll
insl
out
sbb
xchg
ljmp
faddl
popa
inc
subl
push
xchg
jle
aaa
pop
push
jno
popa
lret
js
pop
icebp
stc
insb
inc
dec
mov
nop
mov
dec
dec
mulb
jnp
xor
mov
xor
inc
adc
fnstsw
and
ljmp
sbb
sbbl
mov
adc
dec
mov
pop
hlt
and
push
push
dec
push
insb
cmpsl
cmpsb
jg
push
sbb
sar
jb
push
sarl
push
aam
clc
mov
enter
in
push
rclb
stc
xlat
push
dec
jno
cmp
sub
scas
mov
in
dec
cmp
repnz
aaa
mov
fs
sub
movsb
movl
pop
or
adc
ds
push
or
sbb
fcmove
mov
data16
int
cmpsb
and
test
dec
inc
lret
cmc
mov
cmp
aam
xor
pop
cwtl
dec
xchg
test
loope
sub
sub
mov
mov
and
das
cmpsb
lahf
iret
jl
or
repnz
mov
test
add
je
mov
jb
outsb
lret
je
xchg
dec
and
adc
out
popa
test
pop
adc
jge
xchg
sbb
insl
nop
scas
mov
sti
add
data16
xlat
adc
jns
les
mov
outsb
cmp
xchg
add
enter
pop
jl
out
xchg
sbb
xor
out
add
jl
les
xor
lret
mov
push
or
les
adc
std
jno
sbb
arpl
sub
xor
iret
cli
iret
das
add
mov
lcall
shrb
ficoml
std
inc
andb
jecxz
inc
outsl
or
or
xchg
lods
sbb
pop
mov
mov
xchg
cmpsl
mov
jmp
cmp
lret
cmpsl
cs
push
mov
ljmp
lods
cwtl
sbb
addr16
dec
lret
adc
inc
insb
adc
mov
stos
or
mov
pop
mov
cmove
xchg
fistpll
test
mov
bound
test
xor
ss
mov
movsb
iret
enter
aaa
sbb
or
and
pop
ret
or
fdivl
adc
movups
imul
add
jg
push
mov
mov
sbb
or
xor
pop
mov
push
push
xchg
adc
jmp
mov
pop
in
out
lods
jge
jmp
bound
and
adc
lret
mov
xor
aas
loop
mov
cli
add
inc
pushf
idivl
imul
test
cmp
mov
fiadds
movsl
jle
mov
stc
add
xchg
mov
xchg
push
or
cmp
mov
push
cmc
adc
ja
push
loope
fiaddl
repz
int
rolb
xchg
xlat
add
sahf
adc
aam
ror
mov
movsb
les
adc
loope,pt
mov
aam
inc
test
sub
mov
pop
dec
repnz
mov
test
jo
mov
lock
call
fisttpl
cltd
int
dec
mov
xor
test
push
cmp
insb
adc
out
push
test
ss
cld
cmp
lods
movsl
ss
jl,pt
sbb
ret
sbb
int
push
mov
int3
sbb
lock
ja
push
adc
inc
xchg
clc
add
mov
popa
aam
dec
iret
add
push
int
icebp
mov
or
push
xchg
outsb
jp
sbb
or
pop
sbb
test
es
xchg
lcall
nop
cmpsl
push
inc
push
xchg
push
inc
sub
mov
lods
movsb
in
scas
jl
dec
fs
incl
outsl
jge
scas
in
test
push
notb
into
pop
movsl
mov
jns
inc
pop
leave
mov
lcall
call
xlat
push
lods
mov
scas
imul
nopl
or
in
scas
into
push
sbbl
imul
repnz
mov
test
fidivl
sub
and
or
sbb
cmpsb
mov
hlt
jnp
loop
mov
push
jne
std
add
xchg
ror
add
rcll
std
push
popf
add
xchg
fsub
dec
push
sbb
test
das
scas
pusha
jl
pop
push
sahf
inc
cmp
loop
mov
mov
lret
lahf
xchg
xchg
adc
mov
inc
mov
incl
sbb
jno
popa
ljmp
jl
xchg
scas
mov
loope
mov
cmp
mov
mov
in
popl
insb
fcmovne
inc
push
mov
call
subl
icebp
dec
mov
imulb
sbb
adc
mov
sbb
push
and
inc
push
in
imull
and
scas
cmovbe
sub
jl
insl
mov
xchg
push
mov
push
add
daa
mov
jno
lcall
nop
adc
movsl
mov
dec
loope
push
adc
in
in
mov
test
or
dec
sahf
into
int3
cmpsl
cmpsl
ljmp
pusha
xchg
mov
dec
push
cmp
push
call
lea
lret
adc
add
leave
data16
push
adc
cs
lret
in
adc
cmp
push
jmp
leave
mov
mov
inc
dec
mov
sbb
pop
xchg
mov
inc
mov
mov
cltd
inc
inc
pop
push
into
add
cwtl
in
int
pop
dec
sarl
mov
pop
mov
dec
loopne
push
or
stos
pushf
cmp
in
fs
inc
push
fistpl
cltd
aas
sbb
insb
test
push
cmc
inc
push
xchg
dec
scas
and
aas
ret
int3
or
and
stos
jmp
mull
xchg
pop
mov
dec
and
lods
jns
ljmp
aad
enter
jmp
jecxz
jp
fmulp
pushf
test
inc
scas
and
mov
fidivs
xor
bound
mov
jmp
jmp
add
cmp
mov
jp
rorb
jg
inc
xor
mov
mov
bound
movsl
lret
daa
dec
pop
cld
inc
mov
pop
pop
daa
movsb
mov
inc
push
mov
pop
lret
push
jnp
inc
mov
stc
fstp
outsb
pop
adc
aas
mov
js
cmp
repnz
mov
out
xchg
int
xchg
cmp
ret
jae
jle
cltd
jmp
sub
or
std
xchg
adc
addr16
mov
dec
sbb
insb
cmpsb
fbld
aam
dec
loopne
flds
int3
fsubp
mov
push
outsb
add
out
or
cwtl
ds
cmp
arpl
pop
xchg
out
add
scas
andl
xchg
insb
jnp
mov
adc
lret
jnp
sbb
imul
iret
jmp
loope
mov
push
adc
adc
xchg
add
push
jae
jmp
pop
outsb
mov
dec
hlt
leave
cli
xchg
dec
stc
into
mov
cmp
jge
mov
inc
mov
inc
imul
pop
mov
add
inc
stos
orb
cli
pop
xor
or
test
xor
sbb
out
dec
pop
push
sbb
push
lret
mov
cmp
outsl
jp
ficomps
adc
push
fsubrl
movsl
repnz
cmp
cwtl
fdivs
jb
inc
cmp
scas
fiadds
sbb
insb
dec
jp
mov
and
sar
adc
xor
sti
in
sar
lret
cmp
mov
daa
push
xor
push
dec
std
mov
xor
xchg
pop
shrb
es
push
or
into
popf
insl
enter
lret
mov
mov
les
lds
mov
sub
fcompl
repnz
xor
pop
sub
cmp
and
mov
and
pop
aaa
mov
xchg
mov
testl
shrl
aad
jmp
or
sbb
mov
xor
xor
pop
lahf
xchg
rcrl
sbb
pop
xchg
mov
inc
shll
push
dec
xlat
inc
mov
sahf
cmpsb
jne
jo
clc
je
jle
pop
adc
bound
lods
jecxz
test
andb
scas
sarb
jp
in
pop
push
sbb
ja
xchg
add
adc
dec
or
push
sbbb
and
rorl
lahf
lea
cmpsb
in
lods
adc
inc
and
push
mov
xchg
gs
dec
mov
jo
dec
cltd
out
and
incb
in
in
fildll
cmpsl
aam
dec
fsubs
and
rcl
shrb
lret
shlb
iret
addb
sbb
popa
xchg
ss
adc
scas
mov
inc
loopne
ljmp
ret
aad
cmp
push
or
push
into
and
or
xchg
int
inc
push
xchg
push
or
xor
test
sarb
out
add
cmpsl
mov
in
mov
push
xorb
repz
out
mov
aam
add
or
add
sub
popa
test
jg
add
and
lea
ret
gs
mov
mov
leave
in
mov
fdivs
dec
sub
je
das
cwtl
jb
lods
xor
jnp
push
lcall
xchg
mov
lods
mov
xchg
mov
jns
call
in
daa
jmp
out
andl
aad
push
mov
je
fldenv
xor
xchg
cmp
aad
fcoms
icebp
cld
push
cmp
mov
push
fldl
mov
repnz
arpl
in
inc
jnp
adc
in
lahf
es
xor
mov
push
or
fs
cli
xchg
jbe
pop
cmp
xor
xchg
push
pop
andl
pop
sbb
rcl
aaa
dec
call
roll
ja
jae
jbe
or
cmp
repnz
std
pusha
push
ret
imul
push
out
inc
mov
fisttps
cmp
or
loope
lret
cld
in
decb
mov
jae
movsb
xchg
out
cs
xchg
cmpsl
arpl
mov
xchg
xchg
adc
sub
push
fdivrl
sub
sbb
sub
inc
lcall
aas
loopne
shll
clc
lods
jbe
or
cld
jnp
xlat
jge
je
push
addl
xchg
xchg
jp
sub
imull
mov
aaa
and
int
adc
jb
mulb
cltd
stos
orl
outsb
cmpsb
das
pusha
jle
xchg
or
out
ror
je
mov
mov
push
jb
mov
repnz
xchg
or
arpl
lret
sbb
fdivl
push
sbb
xchg
lods
mov
inc
lods
pop
push
mov
sub
push
mov
imul
hlt
cli
cmp
add
xchg
dec
or
add
outsl
fnstsw
add
add
inc
xchg
jnp
mov
gs
cmp
jecxz
sub
inc
push
dec
push
call
add
push
and
in
pusha
je
add
arpl
in
fimull
dec
rcrl
add
daa
jo
out
es
mov
out
add
mov
out
insl
cmpsl
sbb
and
jno
push
js
icebp
imul
jne
adc
iret
sbb
adc
out
sbb
mov
subb
sub
ss
enter
inc
jne
mov
subb
popa
icebp
repnz
sbb
hlt
mov
and
fnstsw
pmullw
jecxz
cmp
outsl
cmpsb
loope
cmp
push
sbb
inc
adc
add
fstpt
pop
sbb
ja
inc
leave
ljmp
adc
sbb
fadds
daa
out
cmp
cmp
fwait
lahf
cmp
add
push
adc
jae
inc
fwait
pop
sahf
mov
mov
xor
in
cmp
adc
push
jo
push
pop
xchg
xor
in
lock
xchg
cld
lds
icebp
inc
push
popf
insl
sbbb
add
pop
lods
mov
push
repnz
and
mov
fs
cmp
lcall
jl
loopne
and
imul
adc
push
adc
or
shrl
lahf
cmc
mov
jns
cld
test
je
mov
cmpsb
jmp
adc
mov
mov
fistl
adc
and
cs
lret
movsl
in
adc
rcll
jge
fcompl
xchg
sub
xchg
mov
mov
xor
cmp
test
ja
lock
mov
and
cli
cld
pop
insb
cmp
jae
mov
jne
dec
cltd
addr16
dec
aam
or
adc
adc
outsb
subl
pop
mov
jmp
bound
sbb
test
fcomi
mov
push
xchg
loop
lcall
push
out
aas
enter
inc
lret
in
jnp
mov
mov
movntps
mov
pop
mov
in
repnz
push
adc
ret
and
outsb
dec
jge
movsb
fsubl
test
test
dec
lcall
ret
aam
or
push
or
pop
xor
ficoms
push
cmpsl
jno
jl
mov
popf
xor
mov
inc
jle
iret
cmp
test
push
xorl
inc
inc
iret
jnp
xchg
in
into
lret
pop
mov
push
aad
cs
movsl
mov
fs
dec
sti
fistpll
jb
loopne
pop
adc
mov
lock
adc
clc
mov
push
push
mov
mov
inc
sub
jmp
adc
push
pop
push
sub
adc
repnz
adc
inc
jo
mov
jno
jmp
cmpsl
jbe
jle
sbb
jp
arpl
mov
xlat
ret
pop
lret
fsubp
outsl
dec
fiadds
xchg
jge
cmp
or
inc
enter
jmp
lea
push
cmp
pushf
jns
cmp
idiv
dec
mov
xchg
fbld
imul
mov
mov
pop
xor
icebp
sbb
pop
mov
cmp
es
inc
add
outsl
add
xor
xchg
fs
rcll
push
jecxz
hlt
enter
cmc
in
test
leave
jno
pop
add
push
leave
call
and
pop
inc
stos
nop
fwait
sbb
jge
bnd
nop
mov
stc
mov
fimuls
push
movl
nop
shr
mov
pop
mov
or
sbb
pop
in
movsb
jb
filds
sub
rorb
xchg
mov
jmp
xchg
outsl
addr16
add
loop
jbe
stc
mov
out
cmp
adc
jae
pop
ffreep
xor
cld
shll
or
pop
int
cmp
ret
mov
inc
sub
mov
sbb
int3
pop
pop
push
jbe
into
xor
scas
mov
xchg
xchg
push
mov
sbbb
mov
std
mov
ficoms
lret
dec
jae
inc
and
mov
leave
adc
pop
inc
int
mov
cwtl
push
push
sub
or
shrl
pushf
sarl
jmp
and
inc
scas
adc
in
mov
jne
test
dec
lea
in
insb
and
pop
leave
pop
repnz
dec
popa
add
loop
adc
iret
mov
aam
fnstsw
sub
xor
mov
add
int
fwait
xchg
cmp
js
sahf
jge
lds
cmpsl
arpl
push
pushf
jle
hlt
test
jmp
insl
pop
xor
push
push
jbe
sub
push
add
xor
dec
lock
loope
test
test
mov
cmp
shrl
insl
loope
icebp
fsubrl
or
push
push
dec
cmpsb
sub
arpl
lea
adc
stc
inc
scas
cmp
out
mov
and
mov
lret
pop
repnz
sub
sub
inc
scas
fstps
inc
push
sahf
cmpsb
sub
fdivs
and
fisttps
incl
stos
data16
inc
jecxz
cwtl
test
lea
das
adc
orb
fimull
push
sub
ret
xchg
jno
inc
sti
mov
hlt
aaa
or
adcl
stos
das
xchg
pop
and
mov
nop
ljmp
jno
ja
test
repz
cmp
pop
leave
inc
cmp
jecxz
pushf
clc
push
sub
adc
cmpsl
aaa
lds
in
adc
sahf
outsl
sbb
pop
pop
mov
pop
cltd
pop
pusha
sbb
inc
hlt
mov
pop
mov
pop
aad
mov
arpl
cmp
cli
test
fldcw
mov
aam
orb
cltd
call
js
fs
mov
cmp
mov
dec
test
das
clc
xchg
or
add
in
and
add
fidivs
mov
jge
out
cmc
pop
cmc
and
cmp
inc
dec
xchg
std
mov
in
and
repz
bound
mov
stos
fwait
jecxz
std
sbb
cld
jns
cli
dec
lds
inc
inc
add
ret
jns
stos
scas
xchg
incl
movsb
xchg
into
fld1
cli
fs
jmp
stos
enter
jle
adc
adc
ret
sub
cmp
stos
sbb
push
xchg
stc
iret
jecxz
mov
in
imul
cmpsl
mov
mov
ss
das
iret
call
iret
add
lds
ret
inc
pop
fs
add
inc
stos
mov
addl
or
jno
cmp
fmuls
xor
or
jecxz
nop
out
jne
in
loop
sub
push
int
dec
xorl
xchg
incb
xor
fsts
aas
add
pop
sahf
and
jbe
data16
push
jmp
pop
and
scas
sbb
dec
or
pop
mov
outsb
sti
mov
jmp
pop
cmp
in
loop
mov
sar
dec
xor
sbb
or
mov
bound
out
lods
ds
mov
sarb
sbb
pop
scas
imull
add
aad
sbb
mov
xchg
and
pop
sub
adc
aam
ja
faddl
add
lds
cmp
clc
mov
sub
pop
pushf
cmp
or
int3
outsl
lret
xchg
imul
adc
or
inc
mov
mov
sti
ja
cmp
dec
in
or
lcall
xchg
sbb
xor
push
dec
aas
mov
lods
in
pushf
cmc
out
inc
or
xchg
push
dec
hlt
mov
sub
je
fldenv
xlat
aaa
scas
pop
jb
int3
je
xor
adc
mov
xchg
mov
jae
sbb
sbb
into
pop
xchg
inc
mov
mov
jp
into
fmuls
pop
hlt
xchg
cmp
scas
loop
rcl
sarb
enter
inc
xchg
pop
xchg
push
sbb
cmpsl
add
jnp
andb
jg
repnz
pop
jge
xlat
nop
test
fdivs
push
inc
fiadds
popf
dec
cmp
add
aam
mov
pusha
push
dec
jle
das
leave
inc
mov
cwtl
inc
cmp
adc
sbb
lret
in
loop
shr
inc
imul
pushf
mov
sbb
dec
mov
mov
pop
pop
fiadds
inc
push
dec
mov
fisubs
shll
enter
pop
cmpsb
in
leave
pop
cmp
dec
repz
ljmp
pop
pop
dec
add
xor
ret
sbb
mov
mov
lcall
add
push
sbb
inc
repz
push
mov
aad
icebp
xor
push
jmp
xchg
popa
ror
daa
jp
inc
ret
ljmp
iret
inc
fdivrl
int
xor
adc
or
add
aad
fcomps
rorb
sbb
sub
dec
enter
xchg
bound
vpsllq
emms
mov
mov
addr16
mov
jl
mov
xor
mov
dec
int
mov
mov
lods
fistpl
add
push
shrb
pushf
es
xor
inc
xor
ja
pop
dec
jnp
mov
adc
xor
xor
inc
add
loope
fldcw
cmp
cmp
loopne
mov
arpl
xchg
repz
or
imul
cltd
ds
adc
arpl
xor
and
pop
push
mov
push
sti
xlat
test
aaa
data16
popa
or
mov
xor
adc
test
sub
mov
fsub
lret
insb
cmp
dec
out
inc
jle
lds
pop
and
fildl
rcr
add
mov
push
xchg
and
inc
adc
je
cld
out
xor
mov
int3
imul
daa
pop
jp
jno
sub
push
mov
loope
into
out
gs
icebp
cmpsl
jbe
jb
mov
inc
mov
loop
into
jmp
xchg
sub
scas
xor
fxch
push
sarl
js
push
adc
ja
stos
lock
je
mov
cld
mov
adcl
mov
sub
cld
insb
inc
cltd
xchg
fsubrs
out
mov
xchg
jecxz
adc
int3
data16
push
andb
push
arpl
pop
jecxz
cmp
sub
bound
out
das
adc
mov
mov
popa
xorl
call
inc
test
lcall
and
push
repz
mov
ja
xor
xor
jle
add
enter
stc
mov
lret
and
loope
sbb
cmpsb
xor
xchg
repz
lahf
in
dec
repz
and
movsl
js
sub
loope
addr16
int3
lcall
add
je
iret
negb
xchg
pop
das
insb
xchg
or
adc
or
in
sub
add
int
test
xor
mov
push
lods
lret
mov
fsts
push
pop
repnz
and
sub
rclb
andl
push
out
mov
aad
xor
fucomip
xorl
inc
cwtl
dec
add
xor
lods
adc
jle
dec
add
out
cmp
cmp
loopne
repz
xor
lods
ret
mov
inc
iret
sbb
push
jle
lods
xorb
sahf
out
xlat
fmulp
sub
jge
xchg
mov
es
mov
aas
cmp
mov
and
sub
mov
int
and
adc
arpl
dec
jle
mov
jbe
sub
mov
leave
or
adc
sub
lret
push
mov
xchg
fstps
mov
mov
stc
mov
rcrb
inc
add
xchg
add
cmpsl
das
mov
daa
call
sub
sbb
push
and
in
xchg
add
bound
mov
ret
adc
test
mov
add
xchg
data16
dec
sbb
cltd
mov
jae
pop
loope
test
sbb
jae
lret
push
push
nop
push
jle
in
out
je
cmp
push
sbb
rorb
mov
and
leave
inc
add
mov
cli
ret
mov
shlb
mov
clc
dec
movsb
outsl
aam
fs
or
out
int
lea
ljmp
or
add
pop
cmpsl
into
push
xor
aas
je
pop
cmpsb
push
je
mov
mov
and
mov
test
pushf
or
xor
pop
jne
mov
hlt
xchg
mov
sub
fwait
scas
or
pop
insl
jp
cwtl
pop
fcomps
cmpsb
dec
pop
dec
push
out
loop
inc
mov
inc
push
pop
inc
stos
orl
or
fidivs
or
out
push
mov
lcall
dec
xor
xchg
js
mov
loopne
aaa
mov
pushf
in
jmp
xlat
dec
add
mov
sbb
jle
popa
test
aas
mov
call
test
out
sti
sahf
sbb
arpl
ds
sbb
dec
xchg
subb
and
or
mov
mov
int
ret
rcrb
dec
fisubs
xchg
mov
cltd
jp
xchg
aas
mov
rorb
pop
test
loopne
outsb
in
stc
repnz
loop
cmpsb
jnp
and
sub
pop
aad
and
in
aaa
adc
repz
and
aaa
jno
mov
shrl
pop
push
jp
jno
xor
mov
bound
jb
dec
test
mov
hlt
dec
fsubl
lods
push
out
out
ret
or
mov
in
pop
pop
push
sub
orl
fcoms
adc
push
pop
addr16
out
lret
adc
add
xchg
mov
test
out
inc
aad
fadd
jne
popf
movsl
bound
aaa
popa
notl
jmp
pop
add
sbb
aad
mov
jle
xchg
jne
ret
aad
adc
sbb
or
fucomp
out
jg
push
jmp
dec
mov
fisubrs
cmpsl
lret
outsl
jl
sub
es
cltd
xchg
test
arpl
popf
orb
les
aad
add
int
mov
sahf
push
xlat
pushf
out
jno
lahf
adc
mov
xor
mov
cmp
or
punpckhbw
repnz
inc
imul
stos
mov
imul
imul
mov
jp
test
xor
pop
jle
inc
aam
xchg
cltd
imul
mov
adc
mov
dec
mov
sbb
add
sub
lock
jae
movsl
jp
jmp
mov
adc
rcrb
and
xor
fsubs
int3
jo
xchg
sarb
int
int3
fisttps
clc
xor
imul
and
add
movsl
inc
jecxz
cli
fldenv
lods
mov
or
mov
or
stos
sub
push
shll
push
lret
out
jns
aad
mov
mov
add
mov
in
xchg
icebp
cmpsb
inc
xor
movsl
dec
sbb
cmp
jp
xchg
sub
fistpl
das
add
movsl
loopne
fbld
test
mov
not
xchg
lods
cmpsl
movsb
mov
push
push
sti
jns
sahf
notb
test
xor
rol
lods
je
xchg
pop
mov
sahf
or
and
bound
cmp
and
sbb
jb
mov
push
iret
or
nop
lock
ret
mov
mov
popa
and
test
mov
cmpsb
jge
and
xor
dec
pop
push
pop
les
push
fsubr
rolb
ror
jno
popl
inc
jo
dec
enter
test
out
scas
popf
push
outsl
repz
test
icebp
imull
sbb
cld
ljmp
sti
add
inc
push
cmp
mov
xor
jne
fists
pop
movsb
pusha
aaa
jle
repz
shlb
mov
sub
xchg
pop
xor
jmp
test
ret
jg
loop
bound
stos
popf
std
push
cmp
jmp
dec
popf
das
jge
mov
mov
pop
addb
mov
push
mov
ret
mov
dec
inc
sbb
mov
or
sahf
inc
add
jecxz
les
xor
pop
push
jg
arpl
aas
pop
inc
pop
adc
mov
sub
sbb
out
sub
scas
insl
cmp
imul
sub
jp
test
or
push
repnz
sbb
sbb
pop
xchg
dec
out
mov
hlt
cwtl
xor
dec
mov
or
and
ss
lock
pop
ret
sub
rcll
xor
push
xchg
jns
or
ret
mov
mov
ret
inc
sbb
into
xchg
fcmove
jae
gs
sub
ret
cli
lea
enter
fnstenv
sbbb
mov
add
fcoml
jo
mov
jns
dec
sar
jl
ja
and
stos
addr16
push
mov
inc
xor
jb
add
in
daa
mov
sbb
shrl
cmp
sbb
cwtl
jbe
sub
lahf
cmpsb
fidivrl
adc
adc
nop
dec
je
jle
cmpsl
loop
scas
mov
and
and
cmp
dec
fcompl
fs
aaa
xchg
sbb
xchg
add
fiaddl
push
scas
sub
outsb
sub
adc
out
jo
int
test
xor
mov
inc
mov
mov
js
fadds
sbb
pop
push
sub
mov
pop
mov
xchg
ss
stc
xchg
cmp
sub
cmp
cmp
ficoml
repnz
outsl
and
fistpll
das
sub
popf
out
xor
dec
pop
idivb
cmp
ss
inc
loopne
inc
sub
xchg
rcll
mov
mov
je
mov
fwait
sar
push
fdivr
pop
push
and
and
cmpsb
into
insl
repnz
mov
add
mov
and
scas
imul
fstpt
repnz
or
inc
stc
dec
sbb
push
int
dec
cld
push
lds
jo
test
add
inc
mov
jno
jmp
neg
xor
sub
jmp
sahf
sub
nop
insb
cmp
inc
jg
stos
or
add
adc
dec
or
jae
inc
pop
jp
inc
incl
jmp
dec
sar
movsl
mov
sub
imul
sbb
ret
sbb
cld
lret
sub
xchg
fcmovnb
mov
mov
js
add
movsl
aaa
into
push
int3
fmuls
and
iret
out
pop
pop
mov
cmp
ficomps
and
cltd
push
lea
insb
pop
jp
iret
adc
mov
sbb
pushf
pop
arpl
mov
push
fisubrs
adc
xor
jle
dec
cli
ret
addr16
dec
lcall
ucomiss
pop
int3
and
jecxz
push
jg
cmp
add
mov
cmp
shll
pxor
andb
arpl
and
cmpsb
push
fidivrs
jo
out
jl
imul
out
inc
andps
fidivs
mov
ja
xchg
push
jge
cltd
repz
rorl
jp
jb
fsubrs
gs
push
add
jns
jle
mov
in
cmp
das
push
stos
lret
repnz
lea
dec
arpl
add
jecxz
mov
outsl
outsb
cmp
push
push
inc
in
clc
mov
repnz
mov
sbb
pop
aad
pushf
mov
sub
jl
jge
int
int3
jmp
add
add
pop
in
sbb
dec
jecxz
popa
push
movsb
ja
pop
mov
jo
xor
mov
inc
xor
test
mov
in
and
push
adc
push
out
xchg
addr16
mov
add
cmp
pop
into
out
adc
mov
jmp
sub
or
or
fnstsw
fwait
fwait
and
iret
imul
stc
leave
jae
fs
fs
repnz
dec
mov
jp
mov
scas
dec
arpl
inc
mov
xor
push
fs
mov
pop
popa
sbb
xchg
push
daa
icebp
xor
sbb
test
andb
and
jns
clc
and
or
imul
push
icebp
sub
mov
push
push
es
mov
and
loop
sub
inc
inc
mov
jecxz
dec
sbb
idiv
add
jg
sub
ret
sub
int
sub
push
fbld
fsubrs
mov
outsl
imul
push
mov
pop
cmpsl
ljmp
mov
push
and
sub
popa
jb
lret
push
mov
pop
cmp
jae
add
cltd
pop
imul
mov
sub
jno
xlat
jns
pop
movsb
ret
mov
mov
mov
movsl
inc
loopne
dec
loope
cmpsl
cwtl
bound
jp
in
cld
mov
sti
sbb
push
pop
cmp
arpl
ljmp
pextrw
or
aas
roll
jle
or
push
data16
pop
lods
repz
jns
pop
lret
inc
pop
outsb
test
and
lea
push
and
jno
lods
mov
rsm
lahf
push
fistl
jnp
std
lock
xor
mov
inc
adc
dec
sbb
fildll
mov
dec
cli
inc
imul
pop
cltd
jle
mov
jmp
aad
fstpl
call
fdivrl
arpl
mov
cltd
icebp
jno
dec
hlt
out
testb
aas
sub
cmp
mov
xchg
or
clc
or
add
mov
mov
insl
icebp
xor
lahf
mov
mov
std
in
jp
mov
pop
rcrb
leave
lret
pop
loop
enter
mulb
movsl
dec
sti
and
and
pop
pushf
or
addb
lea
xchg
hlt
into
popf
in
mov
out
popf
pushf
jle
test
sbb
sub
adc
mov
sub
stc
and
xor
push
imul
imul
sbb
popa
xchg
push
pop
gs
andl
ds
push
push
xchg
dec
inc
repnz
cmp
outsl
in
lret
adc
add
mov
imul
mov
in
iret
or
aas
xor
sbb
call
inc
filds
sbb
push
inc
adc
fisttps
and
daa
int3
std
mov
fxtract
or
test
repnz
rolb
mov
rorl
loopne
xor
xor
test
gs
push
sub
lret
xor
in
mov
mov
or
adc
daa
shrl
mov
scas
push
mov
fwait
aam
mov
out
repnz
mov
xchg
popa
rolb
dec
adc
push
cmc
dec
jl
dec
fcoms
fcomip
mulb
push
jns
outsl
push
test
aas
jae
mov
pop
xchg
lods
mov
adc
xor
lods
sbb
or
mov
gs
lret
fbstp
insb
dec
pop
and
push
rolb
nop
jg
dec
push
sbb
mov
xchg
xchg
aaa
add
adc
adc
in
push
push
push
int3
sbb
ljmp
mov
outsb
mov
jmp
fsubr
fucom
pop
ja
mov
dec
ret
and
into
das
add
data16
invd
cmp
or
aaa
into
jo
ja
mov
in
lcall
and
in
or
mov
mov
dec
or
imul
adc
movsl
dec
mov
movsl
cmp
sub
enter
inc
push
imul
xlat
pop
sbbl
mov
mov
xchg
loop
lcall
lret
mov
xor
cmp
pop
mov
lahf
and
sbb
cmp
jp
lret
and
fsubrl
push
clc
jno
adc
xor
orl
adc
ds
mov
mov
fnstcw
jo
cld
push
addr16
pop
jbe
pop
mov
mov
mov
int3
hlt
sbb
mov
mov
aaa
mov
cli
vsqrtss
mov
mov
inc
popa
lcall
test
mov
mov
pushl
idivb
movsl
adc
cmp
or
int
popf
pop
les
scas
jmp
clc
add
hlt
push
cmp
loope
push
cltd
cwtl
and
add
dec
mov
lret
ss
adc
subb
repz
fists
and
fcomps
or
inc
or
jge
aam
fistl
out
sbb
lahf
mov
push
lods
pop
mov
mov
sbb
fwait
pop
lret
es
mov
cvtps2pd
adc
inc
movsb
inc
pop
mov
sub
arpl
push
dec
mov
test
adc
ljmp
pop
sarl
out
and
jne
mov
sarb
shlb
cs
leave
push
gs
xor
cmp
outsb
mov
adc
dec
lcall
mov
je
sbb
shrl
adc
je
test
cmp
cmp
dec
adc
adc
push
in
jo
sbb
stos
test
lea
sti
dec
jns
fadds
or
or
sbb
mov
sbb
in
push
xchg
jl
jg
clc
or
jmp
jle
js
xor
pop
pop
jecxz
mov
push
insl
clc
cmpsb
or
mov
test
push
cld
push
fmull
pusha
jns
mov
jmp
ror
shlb
es
jmp
int3
dec
jne,pn
mov
in
test
jp
mov
or
xchg
inc
adc
imulb
xchg
mov
es
and
cli
outsl
sbb
outsl
repnz
ja
push
push
jmp
movsl
test
mov
inc
icebp
lds
imul
aam
repz
shl
and
pop
and
jo
xor
lods
lods
out
sub
adc
and
inc
std
mov
fwait
iret
test
push
lret
mov
cltd
pop
test
dec
push
and
test
xlat
xor
push
fisubs
ja
pop
clc
sbb
jno
outsb
lods
or
dec
mov
dec
mov
fisubl
outsl
sbbb
test
scas
mov
int3
movsl
out
fsubrl
mov
jp
icebp
mov
test
or
cmp
sti
lds
sub
imul
jge
lret
ret
xchg
mov
or
nop
sub
ds
mov
mov
rcrl
xor
arpl
ficoml
stos
ljmp
jecxz
nop
std
fwait
shll
ljmp
xor
popf
outsb
xor
imul
jbe
dec
xor
push
push
data16
aaa
aam
gs
loope
aam
mov
push
in
push
addr16
or
lret
ja
movsb
dec
nop
iret
in
cmp
jmp
aaa
mulb
ss
add
push
sbb
sub
lcall
int
jnp
xor
out
lods
xor
ds
cs
mov
ljmp
add
shll
arpl
push
push
lods
loope
cs
sub
dec
mov
and
sub
or
testl
push
xor
xor
mov
push
and
dec
and
push
ss
lds
xor
dec
lahf
sbb
nop
mov
cmp
lods
scas
test
push
xor
cmp
lcall
sub
fists
lcall
mov
xor
int
lret
mov
iret
lock
or
sbb
stos
or
fisttps
mov
mov
call
mov
bswap
sbb
jo
jl
mul
testb
xchg
pop
ret
loop
aas
inc
jge
daa
pop
ret
mov
mov
sahf
outsl
loop
enter
inc
mov
je
adc
or
iret
pop
pop
xor
movl
lods
cld
xor
adc
lret
jnp
and
adcl
addr16
nop
pop
inc
xchg
insb
cmpsb
loop
push
xchg
xor
inc
mov
out
das
push
dec
sub
jecxz
pushf
mov
iret
sbb
out
in
push
xchg
push
or
pop
mov
clc
mov
add
mov
sbb
add
sbb
or
xchg
mov
out
mov
sub
push
jne
ficoml
dec
hlt
sbb
mov
call
and
add
adc
js
js
jle
pop
and
and
ja
add
xchg
das
int
movsl
shrl
cwtl
stc
je
push
cmp
scas
test
push
out
pop
loopne
mov
pop
jae
mov
aas
and
aas
sub
sub
leave
pusha
ret
cld
popf
lock
xchg
mov
adc
loop
rcr
out
int3
ret
lds
xchg
fstps
mov
and
pop
jle
jns
ss
mov
xchg
cmp
mov
cmp
orb
daa
mov
sub
mov
pushf
xchg
adc
xchg
out
das
push
sti
fiadds
mov
xor
ja
add
outsb
push
inc
fs
ja
cld
adc
mov
dec
call
ret
xlat
shlb
push
dec
inc
out
mov
pop
pop
pop
jne
add
movsb
dec
bound
out
add
addb
xor
add
dec
or
movsb
jae
dec
and
sub
inc
sub
jo
inc
call
mov
ds
xor
lret
or
sbb
pushf
addb
nop
and
idiv
mov
or
xchg
jns
arpl
in
not
push
xlat
and
das
ficompl
gs
out
jecxz
cli
jo
lret
addr16
add
pop
push
jno
jno
mov
pop
ret
xor
xlat
loope
sub
mov
cs
sbb
out
sbb
mov
iret
mov
fs
lods
js
mov
fadds
xchg
inc
inc
stos
dec
or
je
xlat
aad
aas
dec
test
insl
xchg
repz
pop
xor
jg
das
jo
jo
pop
arpl
jno
aad
or
in
insb
test
or
mov
xchg
mov
shl
mov
xor
test
xor
mov
or
push
push
xchg
xor
cmp
mov
shrb
in
jle
int3
mov
sbb
mov
sbb
test
test
cmp
test
jl
add
xchg
sub
js
dec
sbb
lods
divb
jnp
mov
add
cwtl
push
inc
mov
inc
je
dec
inc
jmp
and
push
cmpsb
sub
xchg
jge
test
lods
pop
sbb
in
lret
scas
orb
test
jno
int3
lret
daa
insb
mov
mov
fistps
shlw
mov
es
and
les
cltd
dec
or
mov
js
les
icebp
std
js
repz
adc
mov
wrmsr
pop
fidivs
outsb
dec
push
dec
cwtl
pop
xlat
js
pop
cltd
inc
jmp
xlat
mov
pop
cmp
xor
js
lret
shrb
cs
push
out
dec
arpl
std
into
nop
xchg
sub
xchg
test
out
popa
out
lea
mov
push
jne
jecxz
popf
pop
icebp
push
mov
shrl
imul
ss
push
in
sbbb
into
jnp,pt
out
push
pop
and
imul
dec
dec
adc
jnp
jecxz
mov
daa
cmp
out
push
sbb
fidivrs
ffreep
js
rorl
sub
insb
js
popa
or
mov
mov
inc
lods
inc
ret
rcll
cltd
ss
stos
mov
std
xchg
inc
movsl
xchg
sbb
dec
inc
dec
les
pop
mov
and
in
testb
xchg
xchg
pop
test
mov
push
pop
add
push
xchg
xor
adc
das
movsb
jle
std
mov
lock
push
loop
add
in
inc
decl
mov
xchg
insl
lods
lret
push
push
jecxz
xchg
mov
xchg
cld
leave
push
fildll
jns
fwait
mov
pop
push
fidivrl
popf
int
jae
fistps
popa
outsb
shlb
sub
shl
push
inc
scas
out
sarb
or
pop
push
xor
js
xchg
loopne
loop
andb
lds
inc
mov
push
jb
es
pop
and
stos
icebp
in
lahf
dec
sub
add
push
shr
add
xor
push
fiaddl
pop
mov
imul
out
pusha
das
test
stos
dec
lret
call
inc
and
cmp
xor
pushf
and
add
das
faddp
jae
in
stc
jge
jecxz
lds
xchg
in
in
pop
cs
arpl
or
out
orb
outsl
ret
loope
sub
add
cmpsl
cmp
and
insb
or
cmp
mov
imul
lock
mov
insb
or
add
lods
and
xchg
push
and
dec
mov
repnz
cli
inc
mov
push
cli
mov
mov
popa
xchg
pop
dec
daa
add
fwait
call
test
mov
test
ljmp
sahf
add
add
mov
imul
and
test
lret
popa
jnp
jo
push
jge
sahf
loope
test
idivb
jns
and
or
push
adc
jl
out
and
ror
ljmp
mov
mov
push
push
lret
rcrl
test
movsl
ds
dec
pop
daa
notl
rcrb
inc
ss
cltd
js
or
aaa
cwtl
sahf
dec
cmpsb
data16
xchg
sub
jmp
in
pushf
stos
and
enter
hlt
shrl
pop
mov
movsl
push
in
mov
xchg
lahf
sbb
mov
aad
mov
mov
sti
scas
or
sub
or
int
rclb
rcr
mov
popa
inc
ret
add
or
jae
aas
lock
sbb
xchg
mov
jbe
loopne
mov
xchg
lret
movsl
repnz
scas
jbe
dec
cwtl
movsl
roll
ret
jne
jg
in
aas
enter
and
jp
push
lods
js
pop
cmp
aam
andl
xchg
pop
stos
outsl
test
leave
jno
xchg
mov
push
dec
push
out
xor
cmc
jecxz
and
dec
repnz
fs
jg
inc
adc
mov
out
pop
js
bswap
sub
lret
popf
push
cmp
icebp
and
in
lahf
mov
daa
mov
adc
in
out
std
push
fsubrl
ret
cmp
gs
dec
cmp
mov
lods
xchg
outsl
fnstenv
lock
sub
sbb
and
mov
and
ljmp
xor
pop
scas
add
dec
pop
lea
pop
dec
inc
mov
decl
leave
dec
repz
sbb
pop
ja
mov
sti
mov
sub
lret
xchg
inc
and
sub
daa
idivb
cmc
mov
in
inc
jbe
imul
sti
inc
lea
mov
loopne
fcompl
jno
jbe
dec
mov
xchg
lret
push
adc
repz
inc
adc
addr16
mov
push
jp
xor
or
cmp
std
pusha
cld
push
outsl
dec
lret
dec
xchg
mov
sub
mov
jo,pt
or
repz
dec
push
aad
push
daa
jns
popa
push
nop
js
pop
test
fs
mov
pop
mov
cli
leave
xor
lods
addl
stos
lea
jnp
je
lods
shrb
push
xchg
add
push
lahf
cmpsb
and
cmp
loopne
ret
sub
mov
and
add
push
adc
cmp
xor
sahf
xor
ffreep
sbb
test
push
add
jle
sbb
push
daa
mov
loope
or
subl
mov
fcompl
out
jno
stos
dec
sbb
mov
cli
jo
inc
outsb
pop
sub
mov
pop
pop
xor
loop
inc
dec
lock
test
inc
mov
jnp
sub
mov
pop
xor
insb
sub
mov
hlt
pop
movq
sbb
sbb
mov
aaa
adc
mov
xchg
xchg
xchg
arpl
cmc
xchg
adc
stc
daa
or
loope
mov
jne
fs
inc
jns
inc
push
scas
adc
clc
push
test
in
xchg
imul
iret
cmp
push
pop
lcall
stos
call
push
mov
mov
stos
ret
mov
mov
je
es
cld
xchg
fcomi
test
nop
testb
sbb
test
pop
hlt
dec
outsb
mov
sbb
fadds
fldcw
xor
mov
mov
ss
xor
and
sti
jnp
mov
ja
dec
fcomps
cmp
mov
mov
stc
idivb
add
sahf
mov
jnp
xor
mov
cwtl
jae
fwait
icebp
add
mov
dec
push
addr16
scas
loope
pop
test
imul
or
icebp
scas
cmp
insb
push
icebp
negl
sub
lcall
sub
repnz
push
cld
repz
jge
add
xor
or
lock
notl
repnz
cli
int3
push
int
out
ds
rcl
imul
dec
jle
mov
insl
push
fldl
jnp
jg
add
cmc
addr16
xor
mov
and
call
imul
mov
xlat
xchg
and
cmp
xchg
rol
fnsave
push
mov
loope
test
xor
add
aaa
mov
popa
sub
idiv
cmp
lahf
ret
mov
or
loopne
mov
mov
push
notb
and
jae
dec
into
arpl
in
xchg
fstpl
inc
in
xlat
incb
jmp
movsl
jae
lods
fldcw
iret
std
pop
pop
jge
inc
inc
cmp
fsubs
push
sahf
mov
test
xchg
aad
push
add
mov
add
scas
addb
add
adc
mov
sbb
fdiv
mov
mov
mov
sub
jge
iret
jbe
sti
mov
jns
or
jmp
xor
ret
jb
scas
insl
lock
shrl
jns
xor
cmp
cmc
jmp
outsl
test
push
cld
jo
dec
ret
mov
or
std
pop
inc
push
mov
mov
push
xor
out
xor
push
pop
cmc
clc
or
xor
adc
cmpsb
dec
dec
inc
fs
push
stos
ret
mov
or
and
popf
push
pushf
rcll
shlb
jns
mov
adc
jns
mov
daa
push
test
cli
subl
xchg
xor
mov
cmp
xchg
int3
in
ret
push
pop
inc
insl
add
mov
insl
iret
roll
sbbl
test
pop
icebp
cmc
or
xchg
lahf
xchg
stos
sahf
jmp
sub
cs
test
jg
add
rorb
sahf
leave
add
gs
test
out
jae
aam
sub
testl
sti
aas
inc
and
mov
pop
imul
push
arpl
push
xor
lods
jnp
scas
dec
dec
ficomps
add
call
cmp
pop
cmpsb
inc
pop
push
loopne
stos
push
mov
rcr
pop
xlat
xchg
jmp
call
lods
adc
or
sub
js
push
cmp
or
loop
mov
es
in
fnstcw
mov
jnp
stc
je
sbb
out
jns
adc
jg
sub
test
cmp
out
add
and
mov
mov
cltd
push
fadds
mov
ljmp
cmpb
pop
xlat
sub
dec
pop
inc
outsb
xchg
in
dec
inc
push
or
mov
mov
pop
imul
add
int
loop
pop
cmpsb
cmp
cmp
add
or
jecxz
pop
add
int3
scas
inc
jl
dec
jg
pop
popa
xorl
leave
jo
daa
sub
cmp
jo
addr16
inc
cmpsl
es
aas
adc
xorb
mov
sub
bound
jnp
lea
push
or
rclb
pop
inc
inc
cmp
imul
pop
xchg
push
add
test
mov
lods
stos
jmp
mov
mov
mov
push
lock
dec
cmp
subb
jae
fwait
xchg
mov
stos
call
cmpsb
je
data16
adc
movsb
sub
ror
xor
cmp
idivl
cli
in
mov
xchg
xlat
notl
push
mov
dec
bound
mov
inc
push
out
sub
mov
mov
andb
mov
aad
cmp
cmpl
adc
jne
enter
and
cmp
lret
call
push
loope
sbb
push
outsb
mov
cs
into
mov
inc
loope
je
inc
jb
mov
jl
cmp
fldenv
push
lods
xor
mov
pop
sarb
mov
dec
insl
fnsave
mov
adc
mov
dec
pop
xchg
push
or
pop
mov
packssdw
xchg
mov
dec
jp
lods
cmpsb
into
push
cmp
mov
dec
push
cmp
out
in
push
sahf
insb
dec
jae
add
sub
cmp
pop
inc
cmp
gs
test
cmp
arpl
arpl
inc
pop
xor
jg
test
adcl
arpl
push
lods
mov
sbb
sbb
test
jg
mov
pop
cld
cwtl
or
cmp
cmp
outsb
jns
cltd
ljmp
mov
sub
or
push
pop
jmp
dec
insb
xor
or
call
push
adc
mov
rcrb
jbe
push
push
enter
and
xor
or
lret
es
sub
movsb
lock
aam
mov
cmp
xchg
mov
sub
std
arpl
aam
add
loopne
mov
jns
jae
jbe
clc
lods
dec
jp
sub
pop
mov
into
and
lods
sbb
pop
mov
int3
mov
xor
scas
sbb
jmp
loope
js
in
adc
cmp
sub
and
add
push
pop
imul
inc
sti
or
cli
rolb
clc
jl
jp
imul
mov
xchg
out
cmpsb
in
sbb
loopne
sbb
adc
in
xlat
mov
leave
mov
lahf
lahf
gs
addl
mov
jo
sub
outsb
inc
sub
pop
clc
and
xor
push
cmpsl
aam
and
xorb
pop
ja
cmp
jnp
add
imul
in
jno
test
sbb
outsb
cmp
xchg
mov
push
jmp
or
pop
adc
pop
fldenv
inc
inc
jle
mov
xchg
cmpsb
inc
cmpb
dec
mov
bound
test
pop
cmpsl
loopne
cmp
shlb
repz
pop
mov
repz
dec
sbb
lret
mov
pop
or
je
in
sub
xor
ss
les
ret
push
xor
lods
mov
sti
dec
icebp
je
roll
xor
iret
fdivrl
xor
test
add
daa
xor
cmp
test
out
jno
out
mov
out
std
adc
lods
popa
xor
lcall
and
lock
dec
lahf
and
jae
fs
jl
outsl
jge
dec
call
mov
push
jnp
mov
pop
shrb
je
sub
jmp
addr16
ficomps
cmc
inc
nop
jmp
jg
add
add
cld
and
int3
jmp
dec
mov
dec
and
pop
call
dec
arpl
js
stos
in
ret
jbe
xor
int3
test
pop
out
jo
in
mov
dec
xor
inc
cs
and
fsubrl
xor
fwait
xchg
repz
loopne
outsl
rorl
test
adc
std
int3
das
arpl
pushf
lods
jp
push
loopne
aas
sub
xorl
loop
dec
fstpl
fldcw
mov
pop
xchg
push
cmp
int
movsl
gs
or
jb
sbb
insl
pushf
xor
mov
das
fdivl
les
jmp
ret
and
clc
xchg
rol
int3
xor
mov
into
aaa
pop
ss
mov
cmp
es
jecxz
ret
xchg
jecxz
in
pop
xlat
xor
mov
enter
cmp
xchg
sbb
mov
inc
cltd
ror
movsb
xchg
push
xchg
dec
xchg
mov
outsl
push
ret
gs
cmp
mov
flds
mov
lret
sbb
sbb
and
imul
nop
jo
movsl
mov
notb
and
movsl
mov
or
test
lock
fstpl
xchg
insb
int
icebp
fisubl
aas
mov
cwtl
aad
shr
mov
xchg
and
stos
lcall
push
cmpsb
nop
xchg
sbb
mov
and
stc
ds
jo
mov
lret
shll
loop
pop
jecxz
and
into
push
sbb
mov
push
ds
bound
sub
sub
inc
cmpsb
or
cmpsb
mov
out
push
cmc
xchg
test
fwait
dec
frstor
xchg
cmp
and
mov
xor
repnz
mov
into
jp
repz
repz
data16
sub
fdivrl
mov
out
or
frstor
push
and
jecxz
mov
and
mov
cmp
mov
fmul
divb
and
mov
and
loop
rorb
jnp
adc
fmull
pop
shl
xor
push
jb
pop
jno
and
jmp
push
out
and
clc
sbb
jb
jne
push
ds
dec
sbb
mov
add
cmc
aad
inc
sbb
mov
out
ljmp
pop
ret
enter
mov
lods
pop
in
lahf
cli
imul
xchg
in
mov
cwtl
push
div
stos
je
inc
jle
jmp
adc
pop
push
push
add
mov
pop
loope
or
cwtl
dec
pop
jns
push
js
xchg
clc
jl
sub
mov
cltd
mov
ret
xchg
insl
adc
xlat
xor
push
sbb
fidivs
inc
fmuls
and
loope
loop
xchg
test
pusha
scas
outsb
sbb
or
sbb
fldcw
xchg
ret
adc
iret
xchg
ja
repnz
data16
in
push
jns
sbb
jecxz
xchg
mov
jne
pop
aam
mov
sbb
pop
dec
and
dec
out
add
pop
ss
pop
adc
call
mov
add
xchg
inc
xchg
xor
cmp
mov
mov
rcll
jp
mov
ss
push
fwait
dec
mov
cmpb
out
std
xchg
pop
in
inc
andb
pop
xlat
xor
loope
and
and
mov
in
outsl
fiaddl
out
push
loope
mov
mov
inc
loope
cmp
jno
clc
push
mov
test
jnp
nop
mov
popf
pop
std
movsb
lods
mov
out
mov
ret
or
fneni(8087
mov
scas
push
div
test
insl
or
out
fs
shrb
out
mov
out
mov
stos
mov
in
cmp
mov
test
and
pop
int
inc
lcall
stos
pop
xchg
loope
xchg
lods
push
push
icebp
scas
mov
sbb
push
roll
adc
bound
in
retw
pop
cmp
push
jno
cmp
cmpsl
in
jg
cli
and
pop
dec
mov
pop
add
movsl
inc
jno
ffree
mov
push
int
negb
mov
mov
mov
cld
cmp
adc
adc
scas
lea
sbb
and
test
push
out
dec
or
call
in
cli
scas
imul
add
hlt
inc
pop
out
pop
mov
in
push
xchg
sub
loope
push
sub
ffree
movsl
pop
fs
mov
mull
jl
movsb
ficompl
push
insl
adc
in
xor
sbb
pop
mov
mov
push
repnz
push
clc
movsl
int
or
out
in
jmp
push
lea
sub
mov
hlt
and
out
stos
into
fwait
xchg
lret
or
mov
or
je
inc
jmp
sub
rorl
jge
pop
addb
lock
cmpsl
into
loope
out
loope
pusha
fistps
mov
ss
mov
add
mov
mov
inc
inc
sbb
fs
xor
test
scas
aam
xlat
mov
xor
mov
call
mov
les
addl
mov
cli
movsb
movb
jp
sub
jmp
cli
stc
sbb
cld
push
inc
movsb
mov
jge
mov
inc
loope
subb
gs
wrmsr
lret
insl
fisubrl
ja
xor
add
xlat
pop
mov
mov
sti
inc
xchg
jnp
xor
push
addb
outsl
push
pop
lods
out
hlt
and
mov
cmp
xor
sahf
ja
add
adc
in
stos
jo
jae
add
lret
mov
insl
sbb
xchg
dec
loope
out
dec
int3
inc
lods
cltd
push
push
push
mov
test
out
jmp
mov
push
test
ja
mov
scas
add
insb
push
sbb
mov
push
pop
xchg
dec
cmpsb
push
test
sub
cli
xchg
in
fidivs
mov
sub
test
aam
movsb
sahf
addb
mov
bound
mov
mov
mov
jbe
adc
leave
scas
dec
jbe
push
push
pop
scas
push
dec
fldl
mov
mov
mov
testb
push
jne
xchg
sub
xchg
sbb
pop
mov
test
mov
dec
and
mov
pop
push
jns
in
add
mov
and
cmpsl
jp
and
cmpsl
jns
and
and
clc
testl
cmp
ljmp
mov
fwait
cmp
sti
add
lea
sub
inc
jl
cmp
xchg
frstor
push
outsl
shrl
lcall
idivb
sbb
mov
loop
sbb
dec
stos
xchg
outsb
dec
loope
adc
mov
in
pop
iret
xor
neg
xlat
mov
fwait
mov
lcall
mov
xor
cwtl
cmp
pop
jnp
or
mov
popa
and
push
inc
cmp
jae
inc
fs
subl
sti
gs
or
inc
in
pusha
andb
cld
mov
xlat
or
push
inc
sbb
test
cltd
lret
adc
jae
cmp
stos
push
frstor
push
and
enter
xchg
jl
push
sub
outsl
mov
int
dec
leave
xor
sbb
pop
or
subl
ret
push
dec
xchg
lds
xchg
xor
iret
cmp
or
push
or
cmpsb
lcall
add
daa
pop
imul
ret
xlat
sub
mov
and
cli
lahf
add
scas
jno
sub
and
mov
xchg
bound
sub
push
pop
cli
dec
inc
xchg
jnp
jl
pushf
fwait
dec
fldl
pop
mov
fwait
jo
int
notb
sbb
out
xor
hlt
adc
mov
ds
mov
mov
mov
fwait
scas
or
loopne
or
fimull
dec
mov
mov
ret
mov
jmp
lcall
cmc
pop
cmp
or
loop
mov
inc
orl
and
mov
mov
jae
mov
cmc
into
push
aad
push
leave
push
je
das
int3
sub
add
cmpsb
subb
sub
push
jb
jb
jmp
cmpsb
xor
aas
pop
pop
mov
clc
in
outsl
mov
ficompl
cltd
mov
nop
adc
dec
xchg
and
test
add
jl
or
sbb
aam
clc
insl
pop
sbbb
loope
int
jmp
std
push
mov
pop
mov
dec
in
cmp
pop
cmp
push
and
jb
and
xchg
outsb
out
sub
or
arpl
in
sbb
dec
jge
stos
mov
aas
idivb
repnz
cwtl
pop
pop
daa
mov
lret
xchg
adc
xor
xorl
pop
aaa
daa
scas
push
push
sbb
adc
jg
sbb
mov
mov
push
js
adcl
inc
adc
je
shr
stc
lock
sbb
lds
loopne
stos
inc
lods
mov
add
cmp
out
push
inc
add
jp
fmull
stos
push
stos
inc
xchg
jae
sbb
rcr
pop
jmp
and
push
popa
cwtl
add
in
jae
jecxz
or
adcb
jmp
mov
stos
push
cmp
dec
mov
dec
mov
bound
icebp
test
mov
ja
movsl
or
repnz
push
adc
rclb
inc
into
rcll
ret
jge
out
pop
inc
fidivrl
loop
xchg
arpl
data16
push
stos
int
test
mov
add
nop
jge
mov
test
movsb
push
fmull
push
cmpsb
inc
iret
scas
mov
jle
fnstenv
xchg
push
out
pop
lods
ss
xchg
divb
sub
dec
icebp
divl
ffree
loop
inc
xchg
xor
leave
mov
add
aam
lret
or
mov
dec
test
xchg
jecxz
out
popa
push
dec
fwait
data16
jecxz
sub
mov
pop
or
cli
lods
fwait
jbe
fstps
faddl
lahf
fidivs
and
fs
xchg
inc
pop
and
add
dec
dec
and
mov
out
leave
pop
mov
sbb
lea
repnz
sbb
gs
xorb
sarb
inc
call
mov
inc
test
hlt
jnp
rorl
pop
nop
fcomps
jmp
idiv
sub
stc
inc
push
stos
in
lock
add
leave
pop
mov
push
xchg
push
adc
sti
test
mov
or
push
imul
xor
push
inc
ljmp
subl
inc
mov
and
stc
jae
stos
aas
mov
popf
xchg
jmp
cli
lcall
or
bound
or
sub
push
jmp
mov
ret
add
rorb
add
rolb
push
mov
or
or
cmp
aaa
jbe
and
xchg
and
stos
mov
lods
add
shl
imul
mov
xchg
inc
xlat
push
mov
cmpsb
mov
add
or
fistpll
fisubrl
sbb
rclb
sbb
xchg
or
xor
mov
mov
addl
nop
popf
inc
cli
into
repnz
into
push
jle
sub
push
nop
insb
orl
xor
in
sbb
jne
push
ss
or
ja,pn
adc
cmpl
sahf
in
cmp
fmull
push
icebp
imul
lds
mov
pop
inc
pop
jecxz
adc
inc
dec
ficoml
push
leave
mov
push
mov
mov
cmp
stos
out
scas
and
sbb
roll
mov
iret
cmp
mov
cmp
push
sub
mov
inc
push
in
sbb
test
mov
popa
int
cmpsb
xor
add
xlat
lahf
dec
push
pop
popf
inc
mov
inc
pop
scas
inc
mov
test
stc
ss
movsb
and
and
loope
icebp
cmc
int3
aam
push
jb
mov
in
popa
sbb
and
mov
mov
and
push
push
lds
push
jo
fwait
in
pop
sub
addr16
push
jnp
popa
sbb
in
movsb
aaa
adc
outsb
ja
cmp
add
inc
add
mov
dec
xchg
jecxz
scas
push
xor
mov
dec
movb
sub
jns
mov
xor
out
out
rolb
loope
daa
hlt
aad
add
jno
mov
call
lret
jbe
push
scas
add
ja
inc
xchg
test
outsb
mov
mov
inc
lret
xchg
mov
or
or
mov
fs
jmp
ja
pop
mov
arpl
es
sbb
cmp
jne
mov
push
xchg
and
push
mul
cmp
and
andl
and
or
aas
mov
dec
jbe
mov
addr16
push
dec
in
dec
stc
fisubl
pop
mov
add
cli
push
adcb
mov
sub
sub
nop
xor
or
lea
sbb
inc
fbstp
inc
imul
add
or
scas
flds
lods
iret
addr16
stos
les
or
je
je
test
imul
imul
enter
movsb
inc
fistpl
imul
fmuls
push
cmpsl
mov
ret
shll
test
aas
jg
fcmovb
push
test
cld
push
fidivrs
lcall
mov
notb
out
mov
push
lds
pushf
xchg
mov
xchg
pushf
fsubrl
scas
push
inc
testb
push
mov
and
and
lcall
jp
dec
jo
mov
outsl
push
jmp
lahf
cmp
mov
std
fldenv
adc
test
icebp
lds
ja
mov
xor
loopne
fstl
lods
fwait
mov
xor
pop
daa
gs
pop
jle
repz
pop
dec
jbe
popf
lret
push
lods
xor
jge
push
pushf
fcompl
pop
pop
push
xor
mov
pop
popa
and
dec
loopne
add
out
in
clc
movsl
fs
lcall
dec
sbbb
js
cmp
testl
test
pop
push
and
xchg
and
jmp
mov
add
mov
xchg
inc
out
xchg
popl
lret
outsb
mov
cmp
loope
js
mov
mov
pop
xchg
fisubrl
in
jbe
sub
pop
ljmp
stos
xor
mov
sahf
adc
pop
inc
lret
mov
aam
js
push
mov
fistpl
int3
das
jo
push
ljmp
mov
jns
hlt
adc
test
xor
sbb
jle
movsl
or
movsl
sub
push
out
add
push
and
ds
sbb
add
cmp
cmpsl
mov
inc
xor
inc
push
aaa
inc
pop
popf
dec
xchg
adc
mov
orl
cmp
mov
cmp
sub
and
outsl
lret
pop
xor
test
push
lcall
mov
push
add
js
and
in
loopne
std
sub
fdivl
fidivrs
or
or
test
fprem
and
dec
xchg
xchg
xchg
notb
mov
xor
lcall
cmpsb
sub
xchg
mov
gs
add
mov
sub
push
sti
push
mov
push
sbb
ljmp
lea
pop
and
dec
jmp
popa
cwtl
cld
xchg
mov
mov
sub
inc
jle
mov
mov
cmp
andl
inc
jnp
mov
pop
adc
push
mov
mov
lock
jecxz
subb
pop
dec
ds
cmpsb
adc
mov
loop
insb
mov
loop
dec
and
test
mov
dec
mov
sahf
into
push
daa
pop
mov
xor
loop
lret
pop
add
mov
mov
ss
xchg
xchg
inc
inc
lds
add
inc
mov
mov
pop
negl
rol
mov
push
sahf
or
mov
bound
jb
cmc
pop
cltd
out
inc
or
lock
ret
stos
or
inc
sbb
dec
pop
je
fs
pop
aas
notb
sub
mov
call
jbe
mov
lret
fwait
int3
aad
fstpt
xchg
jge
imul
movsl
and
out
jns
pop
fcomps
fmul
test
ret
cltd
mov
fisttpl
xchg
mov
cmp
jo
jmp
jg
shlb
inc
sub
ror
mov
jp
out
jl
dec
es
sbb
rclb
data16
lahf
mov
es
mov
cmc
popa
loopne
cmp
int3
or
inc
rcl
pop
dec
jo
adc
push
fldl
mov
cld
xchg
scas
mov
dec
test
or
scas
cmpsb
xor
je
subb
xchg
test
inc
scas
mov
orb
scas
xor
and
data16
jae
outsl
jg
test
shrb
jp
push
mov
psubq
testb
pushf
jecxz
inc
cli
fildll
std
sahf
negb
xor
inc
and
incb
stos
push
jno
aad
push
dec
inc
mov
jae
enter
or
test
imul
mulb
cld
xchg
cli
xchg
add
lcall
test
mov
mov
mov
int
cld
lcall
test
loop
dec
inc
sbb
lods
mov
push
lods
mov
shl
in
addr16
xor
fisubrl
cmp
out
or
cmp
clc
push
cwtl
pop
mov
inc
push
adcb
adc
pop
xchg
cmpsl
lcall
push
imul
push
sub
daa
les
pop
cwtl
adc
push
pop
and
lock
psubw
mov
je
sub
js
cmpsb
into
xlat
push
rcll
notb
mov
aam
add
push
mov
ja
dec
and
notl
daa
cmp
pop
cmpsb
sub
pop
scas
ja
jg
lahf
das
and
sbbb
adc
lds
cmpsl
aas
popl
lcall
js
data16
and
push
test
fs
adc
push
sbb
movsb
rcrb
mov
sub
mov
in
pop
scas
xchg
xchg
in
mov
xorl
xchg
mov
pusha
shlb
fstpl
jl
and
dec
pop
icebp
mov
in
xor
push
test
pop
aas
mov
imul
xchg
mov
lcall
xor
imul
ds
stos
push
das
dec
pop
add
dec
pop
pop
cs
xorb
dec
arpl
xchg
fdivrl
cmp
or
or
inc
jb
inc
loopne
mov
iret
repz
lods
int
stos
jge
clc
movsb
mov
ja
xchg
jne
xchg
int3
test
jp
push
imul
sub
or
roll
push
ds
inc
dec
jge
xor
mov
jae
iret
jge
cld
jp
mov
pop
fwait
mov
lods
fdivrl
testl
jl
add
insl
mov
lods
xchg
leave
jns
jle
out
addr16
gs
inc
push
je
adc
hlt
jae
mov
xor
or
xlat
cwtl
sub
inc
notl
shrb
loop
push
mov
rolb
aaa
decb
jle
jbe
inc
jge
adc
push
sahf
xor
addr16
lds
imul
pop
dec
mov
daa
cld
jbe
repnz
or
ret
sub
or
sahf
sbb
in
sub
and
fcmovnbe
mov
call
mov
lods
incl
aaa
imul
pop
xchg
mov
gs
subl
push
cmp
and
notb
push
push
and
mov
and
adc
aas
push
adc
out
movsb
add
mov
push
push
lock
stos
sahf
das
sarl
fwait
daa
scas
mov
adc
stc
inc
popa
push
add
sahf
xchg
and
inc
pop
cmc
sub
adc
xor
push
sbb
ret
xchg
fadds
xor
mov
jmp
push
clc
push
mov
push
lods
inc
popa
cmp
rcrb
add
rorb
fs
cmp
daa
xchg
push
mov
inc
unpckhps
or
dec
imull
aaa
jg
imul
in
add
inc
dec
sub
daa
push
lahf
shll
inc
fisttpll
lods
ss
pop
push
icebp
adc
ss
xchg
push
mov
push
push
add
inc
rorb
inc
insb
mov
push
js
cmc
fcmovnu
mov
repz
cmp
notl
stos
cmp
out
aaa
mov
adc
mov
inc
pop
mov
iret
out
xchg
mov
add
xor
push
or
adc
mov
lret
mov
and
out
push
mov
adc
pop
push
push
shlb
or
mov
jl
sarl
rcll
insl
dec
outsl
out
and
cmpl
ljmp
repnz
cltd
dec
repz
aas
jecxz
idivl
aaa
cmp
jle
cmp
imul
sbb
cmp
fistpl
mov
enter
inc
xchg
cli
xor
jmp
into
bound
je
inc
mov
movsl
xor
cld
addr16
stc
int3
add
push
rcll
lret
mov
ja
frstor
sar
shrb
jo
jmp
ja
popa
jg
test
std
add
push
cmp
mov
addl
mov
ret
mov
xchg
stos
cs
cmpsb
cmpsb
loop
mov
push
sbb
inc
cmp
mov
in
mov
addr16
sbb
out
xchg
push
and
or
std
cltd
lods
and
into
dec
pop
pop
sub
adc
pop
add
dec
cmp
gs
outsl
mov
or
mov
cwtl
mov
data16
je
daa
lods
jae
pop
ret
test
push
bound
dec
notb
inc
ja
repz
dec
cmc
xor
pop
mov
cwtl
and
clc
pop
adc
popa
loope
mov
hlt
ljmp
mov
pop
out
push
inc
enter
jbe
mov
test
into
mov
cmpsb
in
push
mov
sub
push
mov
idivl
xchg
pminsw
cmp
test
orl
sub
sarb
dec
mov
std
add
std
imul
stos
push
ret
inc
test
repz
cmpsb
cld
xor
scas
mov
xchg
mov
xchg
sbb
mov
outsl
dec
stos
andl
sbb
xchg
dec
dec
jae
add
dec
jae
mov
es
das
pop
lods
jge
jp
stos
sub
movsl
data16
ret
mov
into
mov
sbb
inc
add
mov
xor
cmp
jo
mov
fsts
dec
dec
sub
cmp
xchg
xor
hlt
pop
dec
jbe
mov
jb
nop
cmp
xchg
cmc
iret
loopne
pop
pushf
push
jbe
inc
jo
or
icebp
jge
mov
inc
and
sub
fists
mov
add
push
pop
dec
or
cli
cmp
or
add
mov
mov
popa
adc
xchg
mov
shrb
sub
push
inc
fistpll
lods
stos
xor
dec
dec
adc
cmp
adc
loop
jge
movsb
jmp
aam
mov
mov
push
sbbl
stos
push
lods
fstpt
xchg
mov
push
cltd
insl
or
mov
sbb
mov
addr16
int3
xor
jno
mov
ficomps
jg
add
int
pop
mov
in
es
stos
jmp
jne
cmp
mov
adc
fabs
push
cmp
jo
and
pop
jnp
or
popf
cmp
or
or
jle
aam
lods
pop
ljmp
stos
pop
lret
pop
cmc
dec
push
clc
pop
out
aaa
dec
mov
add
into
stos
clc
or
icebp
popa
int
pop
xlat
jg
in
push
push
out
fsubl
bound
data16
mov
fistpl
cmp
and
xor
xor
movsb
pop
sub
sbb
neg
pop
or
sbb
ljmp
testl
xor
adc
dec
jge
pop
std
enter
xchg
push
push
pop
pop
leave
ds
clc
xchg
movsb
lock
movsb
and
and
fisttpll
jl
mov
mov
mov
and
mov
pushf
push
je
xorb
in
xor
outsb
test
rorb
mov
push
jns
int
inc
or
push
sahf
jb
push
fnsave
mov
in
mov
ljmp
xor
push
ret
test
sub
lods
in
mov
jmp
xchg
cmpsb
sarl
mov
addr16
imulb
mov
divl
addl
mov
and
xor
mov
lahf
addr16
cmpsb
movsb
loop
adc
jae
jb
jge
push
jp
push
pop
sub
mov
push
int3
or
repz
pop
test
mov
adc
mov
nop
sub
fwait
mov
sar
mov
stos
and
pushf
insl
stos
add
add
cmpsb
lods
dec
push
inc
out
loopne
pop
or
pop
sbb
sbb
into
gs
popa
or
sub
std
iret
xor
das
cmp
mov
xchg
dec
xor
push
xchg
xor
imul
pop
inc
sbb
xor
or
ss
lahf
testb
xor
and
hlt
cwtl
mov
icebp
leave
xor
add
mov
js
pop
repz
sub
fwait
dec
sub
inc
adc
roll
fistpll
mov
dec
push
xchg
push
roll
or
dec
xchg
data16
mov
jg
ss
lods
and
xchg
mov
sahf
xchg
es
fidivl
or
add
leave
lock
adc
in
push
test
ss
jl
mov
sbb
push
push
test
fs
sub
lahf
or
lock
pop
sbb
stc
addr16
mov
push
inc
and
adc
movsb
adc
pop
cmp
xor
cmp
sub
daa
outsb
cmp
andb
dec
insl
adc
cmp
ljmp
lods
outsb
mov
cltd
xor
push
and
xchg
imul
dec
hlt
inc
xor
clc
addl
gs
cmp
int
out
lret
arpl
xchg
bound
cltd
subb
adc
outsl
out
fcomp
sbb
mov
push
sbb
or
out
mov
sub
lds
or
jmp
dec
sahf
fadds
inc
sub
lret
pushf
and
xchg
test
xchg
test
je
addr16
pusha
jb
outsl
add
jbe
adc
dec
inc
pop
cmp
or
fadd
rolb
idivb
pop
mov
lahf
shrl
int3
mov
mov
xor
jge
sti
or
loop
cmp
jecxz
in
push
push
cltd
in
lret
int
push
lcall
rolb
xor
jae
adc
and
cmpsl
pusha
push
xchg
cmp
jbe
decb
std
dec
pusha
mov
dec
mov
inc
popa
jnp
add
int3
push
pop
or
push
xchg
sarl
cmp
in
jbe
subl
push
imul
in
pop
push
pop
cmpsb
cmpsb
push
mov
push
or
aaa
shll
jle
mov
negb
pop
ljmp
fnstcw
inc
push
mov
mov
push
movsl
dec
movsb
jle
out
leave
push
xlat
scas
cmp
ljmp
pop
dec
mov
xchg
and
stos
sbb
call
pusha
cmp
nop
shlb
in
push
mov
push
sbb
mov
dec
add
in
test
jl
cmp
push
xchg
adc
xchg
sub
fs
repnz
xchg
rcrb
push
sti
loop
and
mov
out
lret
jne
inc
mov
and
jo
iret
rcrb
sahf
push
cmpsl
int3
sub
fs
sbb
mov
xchg
jmp
lods
push
cmp
sbb
stos
cmp
xor
cmp
push
jg
cmc
push
adc
fstl
or
daa
in
adc
mov
jecxz
out
enter
xor
fistl
insl
cmc
pusha
pop
sbb
test
sti
rcrb
ss
out
mov
add
movsb
xchg
sub
gs
mov
mov
cmc
inc
pop
repz
sbb
and
xor
push
negl
push
ss
mov
inc
scas
shl
popf
jle
aad
inc
mov
jb
push
push
outsb
fdivrp
adcl
lcall
xchg
mov
in
adc
cmpsb
cs
mov
jo
lds
bound
loop
in
das
mov
add
aam
loope
mov
enter
and
mov
mov
dec
fistps
clc
jmp
or
stc
rcrb
enter
out
push
sub
pop
jecxz
aad
inc
or
out
sub
pushf
popf
leave
mov
fistl
pusha
arpl
xchg
mov
int
cli
mov
mov
cmp
and
cs
subb
push
pop
cmp
and
jge
mov
xchg
add
dec
stos
cld
mov
ret
mov
mov
rcrl
inc
xor
jmp
pop
or
testb
test
in
jbe
add
jae
inc
popf
push
cld
xchg
int
jo
scas
sbb
pop
aad
inc
xchg
mov
xchg
xchg
or
or
ljmp
les
lock
push
sbb
in
rcrb
fwait
outsl
ja
aam
push
mov
inc
stc
mov
adcb
push
add
test
or
sahf
movsl
push
mov
icebp
fwait
gs
jmp
fwait
adc
adc
xor
imul
cmp
vunpcklpd
aaa
fs
scas
fdivrs
and
test
nop
sbb
mov
push
pop
cltd
orb
xorl
stos
into
lahf
lods
sbb
loope
mov
pop
ret
les
xchg
leave
insb
aas
add
xchg
subl
mov
sub
sub
out
and
out
cld
mov
js
add
mov
sbb
jns
add
mov
inc
insb
cli
jb
add
xchg
push
test
and
in
std
jl
fidivrs
std
mov
int3
das
rolb
loop
push
aas
repnz
daa
xchg
cwtl
rorb
pop
cmp
and
fucompp
ds
pop
mov
mov
ret
fstl
aam
clc
fwait
bound
insl
loop
and
fwait
jg
adc
sub
insl
jmp
and
xor
mov
dec
add
xchg
jg
lods
into
sbb
rcrb
jmp
stos
dec
xor
insb
aad
sbb
ljmp
fidivrl
lahf
shl
rcll
sbb
and
std
es
lea
orl
lods
inc
and
into
and
jae
rcll
mov
push
sbb
fwait
pushf
jmp
cltd
clc
in
push
insl
jl
mov
das
xchg
sbb
stc
push
mov
ljmp
pop
and
mov
rolb
jl
cmc
or
mov
jbe
orl
sub
repz
adc
data16
xchg
jmp
mov
mov
fsubrs
shrl
sub
pusha
push
sub
jne
mov
popf
pop
je
xchg
out
imul
aaa
jmp
repnz
popf
mov
jne
mov
mov
xchg
xchg
mov
pop
pop
test
rcrb
ss
test
enter
cmp
mov
mov
xor
cmpl
push
shl
test
bound
push
out
jecxz
dec
inc
repnz
xchg
jnp
outsb
ss
pop
sti
xor
sti
sub
sahf
and
lret
jecxz
int3
cwtl
lcall
out
mov
push
cmpsb
fdivl
adc
out
mov
mov
repz
push
inc
sbb
call
or
xor
sarl
push
loopne
mov
iret
cmpsb
xchg
push
sahf
xor
mov
push
fcmovbe
push
mov
mov
lds
push
pop
int3
lods
jg
decb
lahf
pop
stos
pop
mov
add
scas
mov
nop
inc
in
xor
push
inc
xchg
xchg
int
call
lcall
and
push
push
into
mov
adc
pop
pop
orb
out
cli
xlat
sbb
pusha
pop
dec
pop
jl
xchg
std
mov
mov
lcall
sbb
adc
idivb
sbbl
orl
insb
enter
adc
mov
xchg
jae
ret
sbb
dec
dec
xor
sarl
pop
ficoml
sbb
xor
xchg
shl
mov
pop
mov
mov
or
xchg
mov
nop
arpl
mov
jecxz
pop
and
cmc
cld
cmp
ljmp
push
out
mov
push
gs
adc
int3
hlt
mov
mov
mov
lahf
pop
xchg
scas
lcall
adc
sbb
pmaddwd
push
jb
inc
jle
mov
jae
mov
loopne
or
mov
jno
sub
divb
aas
ss
or
ret
jmp
jge
mov
cwtl
lahf
xor
push
call
scas
out
int
in
sbb
add
push
jae
lcall
adc
push
mov
xchg
lcall
repnz
stos
jae
ja
fcmovnb
sahf
adc
xchg
daa
jg
sbb
push
hlt
dec
iret
push
fdivp
sub
push
jne
push
mov
shr
or
arpl
pop
push
sti
ficoms
or
mov
movsb
xchg
in
mov
dec
fistps
imul
insb
or
outsl
mov
insb
add
push
push
out
jl
push
xlat
pop
push
jns
fildl
out
dec
inc
push
ret
repz
les
test
cltd
mov
and
add
inc
pop
push
xchg
inc
in
dec
push
mov
jg
dec
nop
pusha
cwtl
push
sar
and
cmc
aam
out
sbb
and
loop
mov
inc
mov
mov
jg,pt
push
mul
mov
fstl
adc
push
hlt
cmc
jno
sub
int3
ret
mov
inc
mov
ret
dec
pop
lahf
mov
scas
pop
xor
pop
test
sub
cmp
hlt
mov
bnd
add
jp
fldt
rclb
xchg
sbb
lock
inc
pusha
movsl
cmp
cmp
fucomip
sub
pop
jne
testl
cmp
xchg
adc
jecxz
ret
jmp
jnp
loop
push
mov
mov
pop
xor
dec
loope
cwtl
leave
aam
fdivrp
cmpsb
or
and
and
sub
ret
sar
aaa
in
mov
inc
sbb
push
std
jo
das
lcall
and
in
and
mov
xlat
inc
push
cmp
lahf
or
sbbl
arpl
push
jmp
adc
mov
jb
mov
or
scas
push
lahf
adc
xor
mov
jle
lock
cltd
mov
jno
mov
out
adc
mov
mov
push
ljmp
mov
lds
and
in
in
je
xchg
mov
ret
xlat
mov
jbe
pop
test
aaa
cwtl
and
pop
out
scas
dec
and
mov
int
in
push
test
ret
inc
scas
cwtl
pop
in
stc
roll
pop
je
int3
js
lods
xor
dec
imul
nop
pop
mov
dec
pop
or
push
dec
jo
test
daa
cmpsb
mov
jnp
out
in
cmp
xor
fsubrl
mov
pop
outsb
stos
push
add
and
rcrl
mov
mov
lds
cld
adc
aaa
in
pushf
sub
adc
xor
push
leave
cmpsl
int3
hlt
fimuls
rcr
sub
imul
mov
push
mov
ss
aaa
pusha
jb
sub
aam
or
sahf
adc
xchg
imul
and
xchg
js
mov
sti
std
or
or
mov
pusha
ret
jbe
jae
lret
lea
xchg
mov
push
push
adc
mov
or
stc
orl
xor
stos
dec
push
into
xor
sbb
mov
insl
inc
call
sub
outsb
fs
xor
sbb
adc
dec
xor
ret
jp
fs
push
decl
and
jp,pn
stc
add
pop
scas
xchg
mov
ss
pop
inc
jecxz
cmpsb
lret
pop
movsl
in
mov
lock
shl
addr16
dec
cmp
sub
adc
mov
pushw
mov
into
pushf
iret
xchg
adc
push
xchg
xchg
mov
das
dec
sahf
outsl
out
xor
push
mov
scas
shrl
loope
test
andl
lods
ret
and
mov
test
fimuls
push
xchg
pop
or
push
pop
xchg
mov
cmpsb
stos
pop
add
xor
stc
xor
jno
mov
aam
xchg
xchg
stc
push
push
loop
jns
pop
push
xor
and
int3
pop
lret
rolb
loope
mov
or
cmp
cmpl
push
sub
cs
sarl
jmp
and
push
push
sarb
mov
mov
xchg
lahf
into
inc
hlt
mov
mov
xchg
inc
test
stos
xchg
cmp
test
sti
jp
jecxz
out
mov
add
dec
hlt
aam
cmp
testb
jl
jb
and
js
push
and
test
sbb
movsb
mov
jmp
lahf
dec
stos
mov
rcll
xchg
inc
mov
add
mov
stos
out
sub
fwait
mov
leave
scas
lret
stos
subl
xorb
push
pop
cmp
push
sbb
sbb
xlat
and
inc
xor
dec
or
mov
dec
dec
mov
incb
sbb
call
cmp
or
inc
js
or
movsl
push
pop
xchg
jge
jp
ds
inc
pop
aam
pop
idiv
and
xchg
and
sbb
test
cmc
mov
push
add
jg
push
xchg
add
inc
inc
xchg
jge
mov
add
xchg
pop
mov
pop
repz
or
xchg
and
outsl
mov
xchg
xchg
pop
jl
andb
adc
idiv
adc
cmp
mov
imul
add
inc
pop
jb
daa
push
jno
arpl
stos
mov
pusha
sti
jns
inc
mov
push
fsubl
xor
ret
adc
aaa
cmp
fcomip
mov
ja
popf
or
add
fmull
lds
daa
jo
pop
adc
sub
fsubrl
jecxz
inc
mov
outsb
in
add
mov
out
pop
and
push
pop
xchg
xchg
lret
imul
push
outsb
jge
fwait
hlt
repz
or
or
jge
jmp
pop
test
pop
enter
push
mov
jb
add
popa
lret
cmpsb
js
test
fs
xchg
adc
mov
add
pop
and
push
out
pop
push
stos
leave
mov
scas
mov
sbb
aaa
arpl
fdivr
and
andl
xchg
ss
out
addr16
imul
lcall
sub
push
mov
out
aas
ds
fwait
stos
cli
call
jl
daa
xchg
shlb
test
dec
cmp
fistl
or
js
aam
push
lock
or
push
push
push
xchg
mov
repnz
fstps
sti
pop
shlb
aaa
mov
shlb
cld
aaa
imul
pop
iret
in
scas
ret
jb
dec
ljmp
je
sbb
xchg
jo
cltd
fcomps
push
fisttpl
sbb
jl
adc
mov
popf
push
mov
xchg
sub
imul
jne
sbb
aaa
dec
jecxz
adc
insb
sub
and
push
movsl
subl
jnp
fistpl
mov
data16
mov
hlt
leave
sbb
and
loop
jae
cmp
fisubrl
pop
add
xchg
cmpsb
sbb
fisubs
sbb
cmp
jmp
sbb
in
pop
xor
adc
loope
ljmp
xor
pop
out
sbb
outsl
mov
mov
inc
jae
push
test
and
lret
lahf
test
addr16
lock
inc
push
test
sub
inc
xor
adc
std
cli
test
add
xchg
xor
add
jg
mov
adc
in
or
lods
sub
ret
stos
test
cli
das
sbb
lahf
dec
fmull
pop
mov
inc
sub
shl
je
mov
xchg
sbb
sub
sbb
pop
rcll
in
adc
roll
and
fisttpl
inc
insb
pop
add
mov
and
sbb
mov
or
push
dec
sub
xchg
jmp
push
cmp
lea
mov
pop
daa
test
mov
sub
push
iret
mov
sarb
and
sbb
and
xchg
inc
sahf
ret
push
mov
andb
leave
push
lods
movl
fstpl
and
cmp
sub
in
adc
jbe
push
dec
lods
aas
lea
loopne
pop
mov
inc
jmp
mov
push
push
xchg
and
mov
mov
je
mov
dec
imul
sub
push
clc
cmpsb
iret
xchg
shl
pop
mov
outsb
add
jmp
sbb
cmpsl
ret
jno
sahf
cmpsb
add
rcl
movsl
jl
push
inc
xor
sti
xchg
mov
cltd
imul
movsb
sbb
sbb
imul
sub
dec
stc
xorl
cmc
inc
mov
push
sub
jno
lds
leave
or
push
insb
lods
pop
scas
div
das
ja
arpl
daa
das
call
inc
mov
sub
fiadds
dec
out
icebp
movsb
dec
mov
jae
dec
shr
roll
push
add
pop
pop
bound
sbb
es
cmpsl
xchg
flds
cmpsb
xchg
addb
or
mov
sbb
lret
xor
mov
imul
dec
xchg
mov
cmc
cmp
loope
arpl
jbe
or
and
hlt
icebp
out
es
inc
test
xchg
popf
out
inc
lahf
repz
push
enter
xchg
xchg
ljmp
push
lods
xor
clc
mov
imul
outsb
dec
mov
pop
fsts
xor
clc
xor
fbstp
lods
outsl
movsb
repz
jno
push
stos
icebp
pop
loop
clc
stos
xor
pop
stc
jecxz
out
leave
outsb
sub
hlt
inc
push
rol
jb
or
xor
in
int
inc
daa
repz
cmp
mov
or
in
fmulp
sbb
inc
ja
mov
scas
push
mov
dec
popa
mov
push
push
mov
jns
xchg
mov
fidivrs
js
addr16
bound
popf
mov
jns
push
aam
lahf
jmp
jb
sub
xor
outsb
sbb
xor
push
sti
mov
mov
add
push
pop
xchg
sbb
dec
out
push
repnz
data16
sti
int
cwtl
dec
xor
aad
test
sbb
out
sbb
xorl
fcomp
and
div
xor
mov
sbb
rol
mov
div
sti
add
cmc
mov
lds
sub
enter
or
adc
cmp
jo
and
inc
mov
add
mov
add
mov
test
mov
cmp
shlb
lahf
loop
mov
aas
and
aas
dec
push
jnp
insb
lahf
fcmovnb
pop
js
lds
mov
xlat
and
sbb
or
mov
pop
fs
pop
dec
xchg
inc
lahf
add
es
aad
lock
ljmp
cs
pop
sti
in
in
sti
sub
jae
fcoms
idivl
jb
cmp
stos
dec
add
out
lret
jle
xchg
lods
sahf
xchg
mov
jae
loopne
inc
mov
cmp
int
mov
jnp
sub
add
mov
sti
jbe
pushf
or
ret
cld
mov
clc
add
add
testb
movsb
mov
mov
cmc
mov
inc
pop
aas
stc
enter
or
std
adc
cmc
sbb
xchg
inc
call
data16
lahf
mov
outsl
stc
mov
out
insb
lods
sti
sub
fisubs
jmp
mov
mov
and
mov
add
sarb
mov
jle
and
fwait
pop
xchg
mov
xchg
stos
and
cmp
movsl
or
lds
outsl
fsubrl
jmp
jo
xor
inc
fwait
mov
and
scas
pop
cltd
or
push
or
arpl
xor
jp
mov
jl
outsl
jg
ret
aaa
xor
cmp
cmpsb
je
jmp
fiaddl
outsb
jl
fldenv
out
out
adc
mov
filds
mov
add
cmpsb
lret
jge
fnsave
icebp
push
lret
pop
cmp
mov
fisubrs
fldcw
je
test
fsubl
negb
mov
jge
out
jbe
dec
out
mov
lret
inc
test
fisttpll
push
inc
add
mov
jae
cmpl
push
ss
lret
aaa
xchg
adc
xchg
imul
jns
mov
mov
aaa
loope
dec
movsb
aam
idiv
push
je
outsb
cmpsl
push
sub
pop
push
int
icebp
int3
ljmp
aad
ja
mov
popf
or
dec
outsl
mov
decb
popf
sbb
mov
push
push
xor
push
xor
mov
insl
add
movsb
mov
call
add
pop
push
push
fwait
subl
pop
dec
mov
orb
loope
cld
out
cmovle
popf
jmp
or
sub
mov
scas
cmpl
adc
mov
pusha
arpl
cld
jecxz
ret
std
jae
out
and
cmpsb
dec
ja
xor
popa
cmp
mov
adc
cmp
movsl
jb
push
push
pop
jecxz
adc
cmp
les
pop
outsl
sti
incb
cmp
mov
xchg
pop
xor
push
notl
insl
adc
adc
jecxz
scas
pop
in
xchg
pusha
mov
repnz
cmp
sbbl
or
addr16
lea
mov
stc
adc
jp
fidivs
adcl
out
inc
dec
jne
lds
je
xchg
push
sbb
cmp
fst
out
or
cmp
push
pop
add
and
pop
sbb
jno
sub
jle
lods
das
jnp
and
cmp
lods
xor
xchg
lods
fmuls
mov
add
or
sub
mov
scas
movsb
leave
add
fmuls
aam
sub
jge
test
dec
cmpsb
sbb
rorl
pushf
or
cmp
pop
ds
fstpt
clc
mov
mov
ss
stos
dec
clc
jg
out
repz
lods
cmp
adc
cli
mov
pop
sub
les
mov
or
jge
or
addl
fwait
lcall
pop
inc
in
imul
pop
mov
jnp
repnz
jae
stc
cltd
in
pusha
and
sub
sarl
or
mov
sbb
cmpsl
lods
adc
xlat
test
daa
les
lock
fdivrl
lcall
inc
daa
cmp
fstcw
repnz
mov
shlb
aaa
fbstp
jl
and
mov
bound
mov
jno
sbb
ja
xor
mov
mov
pop
cmpsl
pop
in
mov
mov
push
sahf
addr16
adc
xor
popa
and
xchg
mov
pop
jle
inc
or
popa
ficompl
mov
mov
mov
idivb
push
xlat
cmpsl
mov
fdivl
cmp
jbe
out
xchg
addr16
mov
xchg
dec
movsb
push
pop
xchg
imul
fsubs
out
loope
adc
dec
pop
sub
push
pop
or
cmpsb
inc
jno
pop
xchg
jp
and
add
gs
repnz
adc
xor
inc
ss
out
push
stc
popa
pop
int
pop
and
imul
scas
xor
xchg
mov
frstor
mov
jno
cmp
mov
outsb
ret
fucompp
fldenv
scas
sbb
nop
jae
push
leave
xchg
jne
and
mov
ljmp
and
dec
inc
mov
cmp
sbb
push
testl
mov
imul
push
mov
leave
mov
rol
xor
dec
daa
icebp
sbbl
mov
cmp
test
pop
mov
jae
lcall
push
outsl
jl
addl
dec
and
in
mov
scas
fld
sti
push
clc
jns
jle
bound
mov
xor
cmc
js
inc
mov
ret
pop
xchg
gs
pop
imul
or
sbbl
loopne
fsqrt
in
arpl
dec
jb
jo
add
in
mov
mov
std
xchg
daa
daa
repz
pop
and
jp
push
ss
sti
mov
sbb
pop
and
cmp
or
shrb
pop
in
pop
xchg
mov
pop
hlt
and
inc
push
mov
sbbl
pop
mov
sub
or
sub
out
loopne
mov
push
pop
or
dec
xor
sub
hlt
ja
sub
mov
and
rcrl
and
iret
sbb
js
xchg
addr16
sbb
pop
cli
aaa
lods
cmp
add
cwtl
aad
push
movb
arpl
xor
jne
iret
pop
loope
lret
sbb
cmp
outsb
xchg
movsb
movsl
cwtl
sub
push
mov
das
ret
jb
pop
sbb
cwtl
and
xor
sahf
add
xor
aad
jns
pop
mov
adc
lds
mov
sub
cmp
mov
movsb
push
mov
fwait
sbb
mov
jp
jbe
fsubp
sahf
es
dec
repnz
mov
ja
mov
pop
push
daa
xchg
sbb
lcall
adc
mov
inc
out
pop
cmp
add
sub
movsl
xchg
sbb
cmp
in
aam
adc
cli
sbb
mov
sbb
mov
xchg
jbe
cli
lds
sbb
xchg
popa
mov
push
or
mov
pusha
test
adc
out
push
outsb
push
xchg
in
adc
in
mov
mov
and
outsl
dec
adc
ss
jg,pn
in
inc
xor
mov
iret
jae
mov
sub
addb
cmp
pop
out
mov
push
and
jnp
mov
loop
sub
jne
or
pusha
stos
lea
cmp
fisttpl
in
lret
mov
push
andl
leave
in
pop
scas
push
and
iret
and
and
mov
rcrl
mov
push
sub
enter
mov
pushf
mov
add
inc
add
neg
push
outsl
movsb
mov
cmp
enter
dec
lea
dec
dec
xchg
pop
pushf
test
fcoml
pushf
frstor
dec
mov
and
pop
sarb
jno
mul
out
jecxz
xchg
mov
rcrl
cmp
in
insb
or
cmp
cltd
iret
push
mov
dec
jmp
jae
and
mov
mov
fsts
dec
and
xchg
loop
push
push
fcmovne
inc
push
popf
xor
add
and
mov
js
mov
aad
mov
negb
mov
mov
xchg
lahf
add
imul
stos
fs
push
mov
sub
cmp
fnstsw
xor
enter
adc
sbb
imul
xchg
dec
cmp
test
mov
rcl
faddp
adc
jg
or
and
mov
mov
add
mov
repnz
movsb
popf
out
mov
push
loop
adc
fldcw
sbb
ja
or
cwtl
pop
cwtl
inc
push
add
dec
ljmp
pushf
xchg
mov
inc
push
mov
add
and
les
mov
out
stos
lods
pop
sbb
mov
fisubl
push
pop
sbb
mov
stc
sbb
loope
add
sbb
cmpb
push
idivb
addr16
lods
sbb
stc
xchg
shr
sti
stos
ret
xchg
rorl
in
test
mov
jns
mov
in
xor
jbe
and
data16
int3
and
inc
sub
into
lods
daa
cmpsl
ss
ja
push
add
mov
sub
shll
shll
pop
pop
ljmp
adc
lcall
out
push
xchg
cmp
andl
popf
pushf
lods
pop
or
loop
out
sbb
movsl
xchg
rol
jle
sbb
sub
mov
out
add
xor
inc
popf
pop
or
sub
dec
lret
lods
rorl
sub
call
pusha
adc
cmpsb
push
popf
mov
add
stos
jmp
adc
jmp
es
loope
or
push
xor
mov
bound
mov
dec
fisttpl
out
jb
shrb
inc
cmpsb
jp
cmpsb
mov
je
or
sub
std
sbb
fldl
mov
loop
jo
jmp
xchg
xchg
ret
fwait
jnp
sub
enter
icebp
mov
sub
pushf
jle
insb
cld
movsb
in
in
leave
sar
imull
mov
inc
xchg
fdivrp
bound
rorb
jl
ljmp
lret
incl
xchg
sbb
test
and
insb
ljmp
addl
jecxz
and
outsw
sbb
push
out
push
sar
jmp
mov
adc
and
cmpsb
mov
sub
movsb
pop
imul
sbb
mov
lret
jo
push
dec
sahf
and
xchg
xor
fmul
dec
add
add
adc
pop
push
jp
pop
push
lcall
pop
imul
push
xchg
pop
push
decl
fisubrl
jnp
mov
aaa
imul
inc
sbb
or
adc
jno
push
jp
sub
ss
mov
and
pop
cmp
inc
dec
jae
ret
jecxz
mov
xor
lods
lock
clc
iret
dec
lock
fwait
jg
dec
aaa
jo
leave
pop
or
mov
or
imul
adc
sub
fwait
add
leave
jae
xchg
push
iret
push
fs
xchg
cwtl
mov
pushf
jg
outsb
add
cmp
push
sbb
mov
dec
stc
adc
je
insl
movsb
sub
add
xchg
xchg
std
and
add
mov
shll
mov
pop
cmc
in
scas
imul
sbb
sbb
mov
leave
push
fistpl
pop
xlat
sbb
and
lds
cmc
js
pop
add
xor
jbe
cld
fistps
mov
push
insb
and
popf
shll
pop
xchg
add
mov
cmp
push
jle
jecxz
jmp
jp
mov
sub
int3
imul
xchg
mov
inc
jae
lods
cmp
leave
cmc
testl
or
mov
testl
clc
sub
xchg
cmpsb
aas
sub
inc
fstpl
into
add
sub
idivb
xchg
mov
mov
push
call
das
mov
push
cmp
jecxz
cmp
cs
fwait
xchg
mov
push
jle
fcompl
repz
ficompl
xchg
push
in
mov
dec
rcll
fcompl
in
cmpsl
jl
cld
pop
xchg
pop
add
push
imul
mov
scas
cltd
test
jecxz
movsb
cltd
mov
xchg
in
mov
mov
icebp
je
mov
cmc
or
movsb
stc
and
mov
insb
adc
test
in
aam
sarl
fcmovnu
stos
jb
push
xchg
mov
xchg
aad
ss
stos
mov
jl
mov
outsb
insl
fistpl
shlb
push
jne
push
add
dec
loope
push
imul
add
cli
xchg
loop
lods
mov
pop
sub
pop
xor
dec
jne
push
in
imul
ss
pop
jne
jns
jns
cmp
mov
xchg
sub
bound
call
sbbl
mov
lods
jp
xchg
lea
enter
jg
lret
es
out
mov
fstpl
lea
sarb
loope
fsubs
jg
mov
xor
ss
sub
inc
sub
mov
sbb
mov
testb
aad
imul
jo
push
dec
faddl
inc
jle
aaa
pop
aam
repnz
in
aaa
push
jns
repz
inc
test
std
or
pop
insl
fldl
call
sbb
or
lret
aas
xchg
jle
sub
lahf
icebp
sbb
ds
sub
sub
lock
dec
jle
pushf
pop
movsb
femms
sub
out
and
and
pop
xor
sahf
mov
push
inc
xchg
stos
loope
pusha
add
push
mov
mov
xor
sbb
les
sbb
mov
pop
cmp
adc
cltd
push
xchg
mov
xchg
jnp
movsb
jb
jp
insl
dec
push
add
add
js
xor
push
push
add
or
pop
ds
into
sysexit
cmp
pop
xchg
push
xchg
and
cs
int
out
xor
adcb
gs
mov
lahf
sub
push
cmp
fwait
xchg
scas
adc
mov
push
sub
jmp
cmpsl
mov
scas
js
repz
mov
jmp
inc
pop
pop
movsb
ja
hlt
rcr
out
jle
push
cmp
and
sbb
xor
sysret
les
sub
lds
pusha
and
stos
dec
xchg
xchg
sbb
fldlg2
adc
mov
cwtl
das
add
ret
mov
xorl
dec
inc
jns
pop
mov
mov
jb
pop
and
jnp
mov
pop
call
cwtl
sbb
xchg
or
lea
xor
js
leave
cmpb
ljmp
sbb
xor
xor
sbb
cmpsl
and
adc
movsb
xchg
lcall
in
push
mov
sbb
jp
add
inc
cmc
ffree
fsubl
mov
or
sub
lea
push
pop
add
mov
int3
in
push
xlat
sbb
xchg
lahf
es
popa
fdivl
dec
daa
cmp
cmp
enter
push
pop
outsl
mov
add
jmp
addb
xchg
movsb
xor
out
push
sarb
aas
sar
int3
push
jmp
mov
scas
dec
test
and
sub
roll
cli
leave
push
mov
cmpsl
int3
cmpsb
mov
repnz
lock
xchg
mov
inc
add
mov
loope
aas
inc
push
daa
mov
out
and
rcrb
lods
inc
pop
and
cltd
sbb
sub
cmp
mov
xchg
push
adc
cmp
mov
lds
dec
xchg
dec
aaa
inc
insb
mov
jae
in
dec
cld
xchg
push
inc
xchg
out
mov
inc
sub
lahf
or
inc
xchg
adc
xor
and
jmp
call
movsl
sub
and
and
inc
aam
dec
mov
clc
mov
sbb
cltd
scas
pop
ja
outsb
sub
cmp
adc
pusha
push
mov
adc
mov
xor
aas
rorl
dec
aas
ret
out
dec
ja
dec
shll
aam
add
outsb
ficomps
pop
jmp
imul
lea
test
inc
sbb
dec
daa
hlt
mov
fdivl
mov
loop
jecxz
jmp
fwait
pop
std
sub
int3
sbb
push
in
mov
pop
mov
stos
sbb
in
loop
fstpt
adc
jae
jecxz
xor
mov
lea
cmpsl
jg
add
jge
inc
lcall
fdivs
arpl
dec
lret
xchg
jnp
xor
mov
jo
pop
mov
pop
sbbl
adc
mov
mov
pop
and
fs
mov
out
stos
popf
insl
mov
and
pop
inc
addr16
shlb
clc
shrl
add
mov
mov
jecxz
push
pop
mov
jno
xchg
subb
push
mov
mov
aas
and
mov
push
andb
fldl
sarb
outsb
leave
cs
cmp
push
cmpsl
mov
xchg
sub
rcrl
sbb
ljmp
aas
sub
jge
rol
or
inc
ds
inc
and
or
ss
xchg
jno
stc
je
pop
push
sbb
gs
test
test
mov
pop
lods
fdivrl
scas
push
push
movsb
xor
xlat
lahf
popf
sub
loopne
push
out
int3
pop
sbb
jo
test
adc
mov
jnp
inc
dec
xor
push
add
sti
sahf
dec
ljmp
add
inc
pop
test
or
shll
popf
xorb
pop
cmp
jne
aad
pop
adcb
xchg
pop
sarl
rclb
scas
or
adc
push
leave
jb
repz
popf
jnp
leave
adcl
xchg
lods
fldenv
jno
jle
inc
dec
rorl
popa
pushf
out
test
shll
fs
ljmp
sub
xor
loope
mov
lods
mov
cld
or
test
fwait
arpl
movsb
jb
arpl
or
es
adc
push
push
inc
sbb
jb
mov
faddl
insl
daa
adc
cli
sahf
cld
divb
mov
in
jle
dec
mov
sbb
or
repz
xor
cmp
add
lds
pushl
in
mov
popf
jno
lods
pop
mov
sub
out
cmp
pushf
hlt
and
adc
fwait
and
loopne
fwait
and
jo
cmpb
lahf
shrb
inc
dec
sbb
inc
xchg
mov
ss
pop
hlt
sub
ffreep
stos
pop
xor
aas
roll
sub
shlb
cmp
inc
fstpl
aas
xchg
sti
sti
jae
mov
jae
jbe
adc
mov
pop
dec
adc
mov
dec
fwait
mov
dec
mov
push
fdivrs
push
add
push
or
das
or
int3
jg
lret
and
pop
push
cmp
cltd
xor
xchg
cld
mov
jl
inc
jge
jl
les
loop
out
mov
xor
fs
pop
inc
dec
or
ret
mov
pop
jo
cwtl
cmpsl
insb
fdivrs
jecxz
add
xchg
fidivrl
and
jmp
and
in
roll
js
add
xorl
lahf
mov
aad
daa
xchg
mov
mov
or
aam
sarl
mov
push
sub
repz
xor
dec
popf
inc
sub
push
pop
leave
mov
mov
xchg
mov
test
testl
sahf
lcall
test
in
rclb
insl
mov
std
add
cmp
dec
cmp
sub
into
inc
mov
into
adc
ds
imul
fisubrl
lock
pop
inc
sbb
pop
sub
xor
hlt
roll
imul
je
cmc
jb
lds
cwtl
scas
dec
insl
mov
subl
jecxz
ss
out
inc
sub
std
mov
dec
dec
cmpb
lret
push
mov
mov
pop
add
test
xor
add
mov
shlb
mov
fisubrs
jg
and
and
push
and
and
hlt
ljmp
xor
iret
insb
pop
shll
dec
push
loop
and
in
dec
cmp
aas
cltd
je
push
mul
and
ss
jno
test
movsl
jnp
sub
cli
xorb
xlat
in
pop
das
mov
mov
pop
or
test
sbb
and
jo
jmp
sbb
imul
movsl
xchg
out
inc
xchg
and
ret
ds
mov
scas
js
test
adc
jnp
mov
dec
xchg
add
mov
mov
mov
xchg
cld
ret
adc
icebp
out
dec
jbe
adc
jge
shrb
inc
stos
xchg
xchg
sub
inc
sbb
int
pop
jnp
push
arpl
ja
ret
jb
push
sbb
imul
mov
in
push
in
es
jbe
mov
pop
and
inc
xor
mov
sahf
imul
enter
or
addb
mov
push
adc
das
jle
insb
roll
gs
adc
stos
mov
mov
mov
dec
stc
push
mov
jp
mov
cmp
js
add
xchg
mov
mov
or
sub
sub
icebp
into
xchg
mov
jp
in
inc
inc
imul
mov
add
lea
sbb
push
ret
mov
push
mov
arpl
iret
xchg
add
pop
in
xlat
mov
add
jne
ret
mov
mov
add
bound
popf
push
dec
int3
adc
mov
in
outsb
mov
scas
sub
int3
lret
push
fcmovu
mov
sti
push
out
lods
mov
or
movsl
xrelease
cmc
jle
pop
push
sbb
jo
fmull
fmull
sbb
lock
mov
popf
mov
test
outsb
cmp
dec
int
pushf
lods
mov
dec
es
mov
adc
movsb
mov
jnp
inc
jo
pop
cmpsb
jge
dec
jecxz
xor
push
pop
mov
add
iret
lret
cmpsl
ss
jnp
pushf
stc
icebp
lret
sbb
lock
jns
lds
or
inc
jmp
xorb
sbb
and
or
jnp
ljmp
and
movsl
add
lock
lods
mov
xchg
sub
xor
dec
ret
sti
push
mov
inc
fsubrp
stc
in
in
jb
dec
pushl
ljmp
js
push
ficoml
ds
sbb
cmpsb
mov
adc
cmp
lods
cmp
or
push
xor
jmp
iret
mov
pop
sub
and
xchg
add
xchg
sub
mov
dec
lock
jg
popaw
test
cwtl
cmc
lret
test
insb
icebp
fsts
inc
add
enter
call
and
jno
sub
dec
cmp
cmpsl
fcomi
pop
inc
mov
mov
sahf
out
xor
call
shl
mov
cmpb
push
shl
fucomip
fidivl
add
mov
sbb
and
rol
or
ret
sbb
push
push
xorb
cmpsb
addr16
cs
or
pop
int3
pop
or
int3
or
gs
cmp
cmpsl
push
outsl
ret
add
mov
outsl
mov
sub
push
jg
or
pop
push
sub
lds
lock
mov
lret
push
movsb
lds
outsb
test
push
cwtl
push
mov
adc
into
rolb
stos
xchg
cmpsw
push
jbe
std
icebp
sahf
jmp
fnstsw
mov
push
sub
cmpl
add
cwtl
aam
jge
or
add
adc
nop
mov
cld
cmp
cmpl
jno
test
add
lock
xor
out
adcl
pop
lods
loope
jmp
mov
cs
daa
loope
push
push
dec
mov
repnz
xor
sub
test
outsl
xor
inc
or
and
or
divl
jp
cli
das
rol
ret
clc
mov
int
mov
sbb
jae
in
cmpsl
loop
movsl
pop
add
xor
push
je
rcrb
test
sub
scas
repnz
in
adc
and
sbb
into
mov
or
loopne
dec
mov
insl
subl
bound
je
cmpl
jbe
out
orb
mov
sahf
xchg
sub
leave
into
push
pop
push
out
mov
xor
mov
leave
fs
repnz
mov
mov
mov
ja
rol
mov
xor
leave
push
mov
out
leave
cs
sahf
fiadds
out
inc
or
in
push
gs
enter
mov
push
scas
add
sbb
or
scas
out
out
pop
daa
mov
add
cmp
lods
inc
mov
sub
fscale
pop
inc
popa
mov
or
push
push
jecxz
push
aad
mov
mov
roll
pop
add
xor
push
dec
mov
xor
sarb
stos
mov
aam
daa
fwait
xchg
movsb
mov
adc
mov
inc
rclb
arpl
push
xor
mov
cli
xchg
int
in
ret
inc
lds
incl
fdivrs
mov
push
addr16
outsb
mov
movsb
outsb
or
clc
and
xor
lods
loop
bound
in
push
mov
imul
mov
sub
cmp
mov
js
mov
jno
dec
imul
shlb
pop
imul
adcb
fadds
mov
mov
outsl
adc
ficomps
mov
iret
outsl
scas
or
fsub
outsb
popa
out
bound
popf
outsb
hlt
or
cmpsl
sarb
cs
jge
pop
dec
jns
mov
xorl
mov
cld
enter
cltd
pop
dec
pop
push
cltd
jl
and
es
cmpb
add
pop
scas
push
hlt
sub
popa
stos
test
sbb
sub
cld
push
push
xchg
lret
inc
mov
adc
push
xchg
xor
in
sub
mov
out
adc
rclb
mov
mov
sbb
push
scas
sbbb
xchg
add
push
mov
mov
ljmp
fadd
xor
cmpsl
or
or
jp
jecxz
lea
xor
xor
inc
sbb
out
roll
mov
testb
fs
jnp
es
clc
xchg
nop
test
aam
sbb
xor
dec
cmc
mov
imul
jns
mov
and
fnsave
scas
ljmp
jge
int
jb
sarb
pop
sbb
and
aas
xchg
ds
gs
adc
aad
xchg
mov
dec
mov
pop
xchg
shl
mov
push
fisubrs
loope
pop
mov
mov
and
test
xchg
stc
sub
or
inc
xchg
and
mov
imul
enterw
xlat
jp
lds
in
outsb
cmp
cmp
ret
xor
loop
push
mov
out
jecxz
and
clc
xchg
stos
push
add
sub
mov
mov
in
or
mov
pop
fisubrl
xchg
orps
ja
fwait
xor
fwait
xchg
popf
xor
mov
lret
int
sahf
fmull
lea
xchg
adc
popf
push
dec
lods
cmpsl
je
scas
mov
jle
jae
cmp
sbb
lods
xchg
add
aaa
data16
inc
pop
dec
repnz
push
repnz
push
test
daa
dec
das
ljmp
inc
mov
orb
cmpsb
sub
push
mov
andl
xor
pop
incb
xchg
sbb
jne
int3
xor
roll
jp
int
in
mov
leave
mov
mov
push
fldl2e
push
inc
jecxz
and
fs
dec
mov
ret
adc
mov
fwait
hlt
xchg
fmull
mov
add
mov
icebp
or
jmp
inc
adc
inc
pop
or
loopne
adc
shl
fstps
rol
test
or
loope
push
pop
cld
mov
pushl
rclb
popf
sbb
add
push
in
push
imul
cmc
nop
rcll
adc
enter
xchg
rcr
dec
xchg
cmpsb
sub
lea
sub
jge
pushf
ljmp
test
xchg
mov
idivb
mov
imul
sub
fildl
mov
mov
cltd
jo
fisubrl
rolb
subb
or
stos
loopne
daa
iret
out
push
lret
pop
enter
mov
and
or
iret
ja
movsb
int
push
jno
es
ja
imul
dec
or
or
xchg
adc
push
xchg
inc
jecxz
adcl
insl
jns
mov
inc
add
mov
mov
sub
aaa
out
test
pop
cmc
cmp
jl
dec
mov
pop
xchg
pop
mov
push
push
cwtl
push
scas
sar
jnp
repnz
in
inc
stos
test
cs
pop
add
out
mov
jg
mov
inc
pop
iret
sub
and
dec
jne
jne
mov
out
and
jl
mov
jne
ret
or
out
addr16
xor
stos
cmp
enter
xor
faddl
cmp
fdiv
dec
add
mov
jge
mov
js
xor
pop
divl
sub
or
in
leave
xchg
stos
in
insl
jo
mov
and
nop
ficoml
into
mov
outsl
leave
repnz
dec
clc
push
movsb
stc
and
inc
roll
pop
movb
and
std
pusha
xlat
fucomip
pop
pushf
imul
movsl
icebp
into
shl
mov
mov
lea
dec
in
aas
inc
popa
loope
adc
imul
cwtl
add
decl
cld
cmpsb
scas
out
ret
xorl
cmpsl
or
jns,pn
pop
scas
jl
pop
popl
loope
mov
pusha
ljmp
push
mov
lods
jb
xorl
imul
inc
stos
mov
pop
jae
cmp
mov
ror
mov
cmp
outsb
push
lds
aam
push
sahf
and
sbb
enter
push
or
push
fisttpl
or
xor
pop
cwtl
jb
sahf
lcall
dec
adc
cli
seto
xor
dec
xchg
insb
adc
gs
inc
leave
mov
push
into
inc
fcmovnbe
and
cmp
pusha
leave
mov
xchg
arpl
or
data16
add
push
test
aad
movsl
or
mov
out
pop
dec
repz
lods
xchg
pop
in
xchg
rcrb
pop
inc
mov
xchg
mov
enter
or
adc
mov
sub
ja
push
adc
dec
add
js
mov
lcall
cmp
je
sbb
sbb
push
loop
add
or
test
pop
mov
push
je
and
add
xchg
xor
or
dec
hlt
nop
aad
xor
sbb
std
mov
adc
decb
popa
adc
cs
sbb
jne
insb
adc
faddl
inc
jo
or
in
stc
xchg
dec
lcall
push
fldcw
shll
cmpsl
int3
push
mov
std
sbb
data16
xlat
insb
and
daa
add
lret
mov
pop
icebp
popa
mov
cmp
xchg
or
adc
add
into
sub
in
xor
adc
insl
add
add
mov
dec
into
clc
inc
push
imul
cmp
enter
test
inc
xchg
add
xchg
aas
dec
and
mov
cmp
cmc
in
sub
and
or
and
adc
das
mov
paddq
sar
imul
inc
ret
pop
or
add
fsubl
popf
push
scas
add
andl
fwait
push
add
add
sbb
mov
sahf
fisubrl
push
mov
or
out
mov
and
jg
mov
stos
mov
mov
push
aas
int
gs
cmp
test
lock
sbb
or
jg
scas
xor
xchg
popf
or
push
pop
sarl
xchg
mov
fstpl
sbbl
push
jmp
fs
js
loopne
mov
idiv
insl
pop
push
adc
or
xchg
cmp
cwtl
lret
fsubl
pop
test
and
cwtl
inc
nop
in
push
test
and
jle
lahf
inc
jbe
test
pop
dec
push
lcall
sub
imul
sub
add
add
xchg
adc
lods
push
inc
test
rclb
dec
xor
mov
mov
pusha
addr16
inc
push
jae
test
shlb
fnstcw
les
enter
jno
jb
adc
xchg
inc
js
ss
rol
fsub
arpl
xor
and
sbbb
scas
mov
xchg
insb
lret
daa
cmp
fs
dec
mov
jae
mov
push
movb
inc
add
mov
imul
rcr
jae
nop
fucomi
icebp
push
cmp
or
mov
mov
push
dec
lret
and
out
leave
fstpt
mov
cwtl
rcrl
jl
lods
push
jbe
je
push
iret
loopne
mov
js
mov
xchg
jmp
inc
clc
in
adc
jno
sbb
push
mov
pop
inc
enter
cmp
ret
xchg
popf
xor
faddl
push
mov
enter
aad
shrl
cmp
mov
mov
lcall
test
insb
and
or
lods
das
imul
fnstsw
sub
int3
enter
or
mov
in
mov
idivl
pop
shr
xchg
xchg
mov
cld
and
or
mov
mov
mov
push
cltd
xchg
push
in
lds
mov
lds
fbld
call
push
push
call
jo
inc
int3
mov
mov
xor
inc
loopne
dec
mov
push
ljmp
cmpsb
cmc
xchg
arpl
dec
ljmp
sbb
adc
and
idiv
clc
inc
lods
inc
in
pop
dec
jbe
scas
pop
sbb
inc
imull
sbb
les
in
faddl
mov
push
sub
dec
add
or
jecxz
sub
pop
das
jns
push
mov
cmpsb
cwtl
push
add
dec
fadds
and
adc
inc
add
dec
out
sbb
mov
lahf
pop
das
stos
fiaddl
push
iret
inc
cmpsb
jbe
mov
insl
jecxz
xor
cmc
jle
imul
or
sub
jb
and
sbb
jge
xchg
loopne
inc
scas
or
das
xchg
movsl
jbe
jb
add
std
icebp
xor
in
pusha
or
pushl
add
loope
imul
cmp
leave
lds
push
xchg
sub
outsl
sahf
dec
lock
and
pop
xlat
clc
aad
pop
mov
mov
dec
out
xor
ret
mov
sub
fiadds
push
addb
sub
xchg
push
insl
ror
loope
movsl
test
mov
push
xlat
push
mov
jae
stc
mov
mov
and
jns
sti
shrl
sub
in
and
adc
push
ljmp
xchg
jne
push
mov
sub
mov
inc
dec
dec
or
and
inc
inc
jecxz
fidivrs
lcall
jns
stos
add
pop
orps
lahf
jg
aam
xchg
hlt
repz
xlat
fmuls
js
xchg
bound
lods
dec
ret
xlat
ficompl
out
mov
xcrypt-ecb
cmpsl
dec
rcll
testb
inc
or
out
push
in
scas
test
pop
pop
out
inc
stc
jbe
scas
cmc
mov
stos
inc
scas
xchg
sti
or
mov
push
xchg
repnz
mov
cwtl
pop
inc
jae
xchg
lds
nop
or
sub
pop
loope
cld
add
inc
call
push
jo
mov
jmp
insb
add
xchg
mov
pop
test
sub
mov
and
push
sub
jmp
jg
arpl
and
adc
mov
inc
pop
and
mov
xor
or
fwait
ds
push
adc
iret
and
daa
sbb
adc
adcl
inc
loope
in
sbb
into
and
ret
js
inc
inc
cwtl
aad
mov
leave
stc
ja
lock
push
test
lahf
cmc
jae
aaa
jae
inc
jne
inc
sub
inc
in
pop
leave
stos
and
sahf
sub
push
mov
mov
loope
push
and
pop
adc
in
ret
jb
xorl
popf
stos
ja
pusha
jp
rcll
mov
jg
inc
addr16
rclb
loopne
das
arpl
cli
dec
out
mov
ja
mov
push
adc
add
add
outsb
lret
shll
sbb
je
push
mov
iret
lcall
pop
cmpsb
inc
in
fsub
fdivs
sub
test
xor
aad
repz
add
inc
fcompl
jo
int
push
scas
fisubrs
fwait
loope
or
pusha
fs
xchg
call
sub
xor
outsb
and
dec
jb
iret
popf
inc
fmuls
xchg
mov
mov
xlat
aam
jle
cmc
sbb
decb
push
and
or
cs
mov
jo
xchg
sbb
pop
jo
and
jg
xchg
push
hlt
movsb
or
pop
in
adc
loope
sbb
push
fwait
add
mov
cli
stc
out
call
adc
push
xchg
lcall
jns
push
jp
mov
ss
lds
mov
loope
rorb
inc
jns
out
dec
adcb
jnp
icebp
loop
mov
movsl
fs
dec
cltd
inc
cmpsb
xchg
test
inc
and
mov
movsl
mov
xor
sbb
or
das
mov
push
cmp
addr16
push
pop
mov
mov
addr16
inc
dec
hlt
mov
divb
jno
and
push
jle
loopne
dec
or
in
pop
push
and
ret
scas
adc
sbb
in
mov
mov
mov
insb
add
cmp
mov
dec
sbb
jns
dec
mov
in
sub
test
pop
fistl
jg
mov
insl
mov
sarl
adc
lods
dec
xchg
adc
imul
adc
xor
fwait
fs
les
cmp
aad
sub
leave
aam
in
jp
pop
mov
cmp
lods
inc
push
xor
out
pop
nop
sub
lret
mov
arpl
adc
jmp
lret
movsb
mov
into
xchg
pop
jne
in
mov
test
dec
bound
jge
incl
pop
xchg
cmpsl
xchg
cmp
xchg
adc
gs
shrl
ficoml
inc
adc
inc
orb
xchg
cmp
leave
push
push
ds
ret
mov
mov
jbe
adc
mov
shl
out
pop
leave
lcall
in
das
push
fistl
jle
xchg
and
outsb
dec
xor
and
dec
mov
push
dec
hlt
data16
pop
and
test
rcl
mov
lods
ljmp
inc
mov
dec
sbb
adc
mov
fsubrl
mov
popl
sbb
mov
jp
stos
xchg
aad
pusha
sbb
nop
shlb
in
int
test
inc
mov
push
jge
imul
iret
sbb
arpl
lock
or
insb
add
cltd
sbbl
sub
out
mov
sti
pop
or
mov
lahf
mov
cmpsb
xchg
cmp
push
js
in
lret
jg
ret
pop
mov
push
ffree
pop
adc
cmp
out
pop
cmpl
cmpsb
dec
into
pop
adc
es
push
sbb
call
daa
push
ja
into
dec
es
mov
ljmp
lret
std
pop
jnp
inc
mov
stc
jecxz
push
sub
icebp
jmp
mov
push
push
and
or
out
out
repnz
sub
test
xchg
aas
mov
push
enter
dec
clc
lock
jmp
ds
jmp
ret
jae
fadd
sbb
mov
fwait
xor
scas
sarl
fadd
inc
or
out
xor
dec
mov
shlb
mov
cmp
jno
lock
push
sub
hlt
mov
addr16
fsubrl
enter
pop
ss
mov
or
movsb
scas
jp
jns
xchg
shlb
push
dec
add
jecxz
lret
fwait
and
pop
push
iret
mov
shlb
mov
xor
icebp
add
mov
pop
shll
cld
insl
mov
inc
rclb
sarl
jnp
sub
mov
repz
add
mov
jle
mov
mov
or
xchg
cmp
sbb
cmc
xchg
imul
jmp
mov
push
clc
ds
pop
xchg
xchg
xor
negl
inc
rclb
xlat
or
pop
adc
xor
inc
fucomi
jae
mov
and
adc
cmp
push
add
inc
sub
in
sub
push
xchg
clc
xchg
fcompl
arpl
fistpl
fadd
lcall
daa
pop
or
push
push
push
seto
into
mov
mov
cmp
stc
fnstcw
es
sahf
imul
popa
jmp
sbb
fldenv
mov
sti
lret
cmp
jbe
das
inc
pushf
xchg
inc
mov
or
fiadds
mov
xchg
sar
jbe
mov
cmp
mov
orl
mov
scas
aas
mov
test
pop
dec
cltd
lret
es
mov
pop
inc
addl
dec
add
push
in
mov
stc
or
pop
mov
push
sbb
enter
xchg
jno
or
subb
jmp
sbb
add
shufps
mov
into
outsl
sub
ljmp
cmp
pushf
je
pushf
ret
mov
or
inc
fwait
xchg
ljmp
and
jno
inc
and
and
popa
jp
sbb
sub
push
clc
push
enter
aas
jo
cmc
mov
int
rorl
mov
xor
xchg
jne
int
pop
cs
pop
jl
sbb
jno
jp
or
scas
push
stc
pop
cmp
push
add
and
xchg
dec
pop
or
fcmovne
and
jns
sbb
mov
loopne
sbb
ds
je
dec
ret
push
andl
je
push
push
dec
push
fbstp
push
mov
insb
sbb
mov
xorb
or
and
aam
lret
dec
sbb
pop
arpl
inc
push
out
pusha
rcr
lock
data16
xor
mov
cmc
dec
mov
cmp
outsl
push
ror
adcb
and
inc
shrb
push
xorb
sbb
leave
xlat
push
cld
cmc
mov
cld
or
ret
aas
add
lret
cs
adc
imul
scas
add
mov
pop
xchg
add
xor
int3
ljmp
enter
lret
shlb
iret
leave
mov
das
mov
mov
loope
push
ss
scas
cmpsb
jbe
test
js
mov
dec
in
sub
into
push
or
adc
xor
ljmp
daa
push
mov
push
div
fs
lcall
call
pushf
xchg
sub
mov
or
and
loopne
mov
ss
inc
add
fwait
popf
push
ret
inc
jne
xchg
sub
jl
je
dec
aad
jp
dec
xchg
mov
adc
push
lret
mov
inc
nop
je
jp
aas
aam
test
scas
in
lock
ja
inc
jns
nop
fmul
test
icebp
into
and
aam
movsl
addl
sbb
and
test
inc
mov
mov
fs
add
mov
pop
ficompl
sbb
pop
cmovnp
dec
lahf
jecxz
xchg
or
push
push
test
fstps
popf
pop
pop
sub
or
push
lahf
sbb
jp
ss
mov
jmp
bound
adc
push
push
loopne
mov
aas
push
mov
loope
add
cmp
or
push
and
int3
push
loopne
mov
test
adc
popf
iret
out
pop
cld
gs
fistl
xor
mov
xchg
bound
mov
cwtl
scas
bound
into
enter
or
stos
fstps
out
popa
lock
xorb
lods
daa
bound
sub
cmp
int
loop
in
nop
dec
jb
nop
xchg
or
adc
int
mov
into
sbb
xchg
aaa
mov
mov
jecxz
mov
ds
jmp
hlt
add
outsb
or
insb
data16
pop
arpl
lods
repnz
mov
push
or
popf
imul
mov
out
cmp
adc
add
es
cmp
cmp
mov
fsubs
cwtl
or
ljmp
mov
cld
sub
xchg
and
sti
push
faddl
jmp
xchg
lahf
jg
push
lret
adc
popf
in
outsl
jg
movsl
jnp
xor
fdivrl
xchg
insl
jnp
xchg
mov
xchg
out
mov
inc
iret
or
shrd
xchg
cvtps2pi
insl
xchg
inc
xchg
or
icebp
add
adc
js
jmp
aad
pop
lret
cmc
jnp
mov
inc
daa
jg
jp
mov
scas
push
mov
je
push
and
xchg
mov
push
add
xor
jg
popa
dec
inc
addr16
push
insl
cmp
imul
xchg
or
shrl
sbb
iret
mov
push
xchg
mov
or
sbb
fstpl
inc
mov
in
stos
fcom
imul
jecxz
jecxz
mov
push
fsubrl
xlat
in
mov
jl
jmp
shlb
insl
jle
cs
cmpsb
and
pushf
push
aam
fistps
out
sbb
or
dec
fcmovnbe
outsb
shlb
aad
pop
mov
xchg
lock
mov
arpl
jno
xchg
sti
data16
fsubr
flds
lcall
mov
lret
mov
stc
inc
add
popa
cmp
jae
scas
out
jbe
xchg
jae
sub
shll
lods
push
ja
and
push
add
add
notb
jae
sub
dec
gs
dec
mov
xchg
frstor
dec
jae
mov
insb
fisubrs
stc
jbe
and
movsb
test
add
cmp
inc
mov
mov
mov
xor
sahf
push
mov
push
cmp
pop
push
test
mov
pop
mov
or
sete
xchg
push
push
lret
rol
in
mov
pop
pop
ret
std
dec
mov
cmpsl
add
or
in
test
pusha
pop
lea
ja
insl
push
push
push
rclb
rcrb
jmp
inc
lret
arpl
out
add
popa
pop
pop
sbb
les
jo
aad
aad
or
aad
xor
jg
mov
cli
movsb
jle
add
inc
inc
adc
xlat
lahf
and
inc
sbb
mov
stos
sbb
test
or
jnp
mov
add
fistl
dec
dec
out
bound
inc
jbe
repz
or
xlat
mov
out
ret
mov
inc
lods
jo
jns
ss
adc
in
mov
in
hlt
xor
mov
flds
xor
ret
jo
scas
dec
lods
mov
call
xchg
mov
jns
mov
sbb
aaa
push
cmp
cvtss2si
mov
flds
mov
cs
adc
fdivp
pop
inc
adc
xchg
cmp
xchg
adc
imul
and
leave
mov
adc
mov
out
push
int
addr16
stc
jp
rorl
outsl
stos
inc
cmp
add
add
mov
stos
xchg
jl
or
test
ret
dec
pop
scas
enter
add
fldt
sti
fnsave
shll
fidivs
imull
mov
inc
and
push
iret
xchg
sbb
pop
pop
add
push
icebp
rorb
call
sahf
jns
bound
xchg
test
andl
sub
je
mov
out
out
adcl
loopne
repz
mov
fisubl
mov
add
pop
push
pop
jl
loopne
pop
xlat
push
in
movsb
xchg
xorl
stos
loop
lods
pop
dec
xor
inc
jge
loopne
pop
push
cmp
pop
mov
test
add
jbe
fldcw
cltd
inc
in
jno
pop
fisubrl
pop
repnz
lsl
dec
insl
xor
ljmp
stos
push
cmc
cmp
add
mov
ret
ret
and
icebp
enter
in
sub
pop
pop
add
add
int
jnp
pop
sub
xor
sarl
pop
into
dec
inc
add
outsl
pop
fs
or
aam
push
and
or
stos
outsb
pop
or
mov
mov
in
inc
ja
stc
push
jle
iret
xor
cs
outsl
aas
inc
lds
hlt
aaa
push
repz
ficoml
xor
cmp
test
jbe
and
into
mov
stc
dec
jb
lahf
and
xchg
dec
sbb
fnsave
add
mov
sbb
cmp
nop
js
mov
test
xchg
push
test
xor
sbbb
mov
jecxz
aam
jl
mov
hlt
sub
faddp
je
mov
inc
xchg
sahf
fs
push
or
sbb
and
cmp
or
inc
push
lahf
mov
int3
daa
out
inc
outsb
pop
xchg
xchg
xchg
push
push
inc
jecxz
ss
je
adc
and
setl
jp
cmp
push
push
jp
fsubl
jmp
jns
push
mov
or
jmp
dec
pop
test
dec
xchg
mov
int3
mov
adc
orb
inc
and
insb
mov
mov
dec
or
aas
hlt
inc
out
icebp
dec
adc
shll
stos
es
hlt
aad
daa
fmull
adc
out
aam
fwait
stc
push
imul
adc
cmp
push
popf
loop
in
mov
cmpsb
iret
mov
push
outsl
in
mov
push
in
stos
push
imul
jle
aad
push
test
push
push
repz
cmpsb
repz
icebp
pushf
out
cmp
mov
gs
aam
out
inc
cmpb
add
or
cmp
xchg
stos
cmp
pop
push
daa
test
adc
insb
bound
cmc
adc
in
pop
lods
lock
and
inc
mov
push
in
mov
leave
cmp
movsl
punpckhwd
repz
test
sbb
fsts
movsl
jae
cmpsl
cmp
adc
aas
int3
lret
cmp
sub
pop
aaa
pop
int
stos
into
or
sbb
aam
xor
mov
jg
imul
in
clc
dec
lods
dec
inc
or
dec
in
adc
dec
popa
sbb
filds
pop
mov
stos
int
movsl
mov
dec
and
insl
or
jle
xor
cmp
iret
mov
and
popf
inc
das
pushf
js
add
popa
jmp
std
fcmovne
rdtsc
inc
mov
add
movsb
cmp
es
pop
popa
insb
aad
adc
push
mov
fwait
dec
sub
pop
les
mov
mov
cmpsl
stos
sub
mov
das
jge
mov
or
pop
movsb
stc
iret
adc
dec
ret
inc
iret
inc
add
cmp
fldenv
xchg
sets
cwtl
aad
test
and
xchg
imul
lahf
in
cmp
inc
loop
cmp
lods
fcoms
das
cmp
insb
inc
cmpsb
out
pop
sbb
sbb
outsb
mov
mov
inc
mov
push
mov
scas
inc
sbb
sbb
outsl
enter
add
adc
and
pop
jge
sub
pop
dec
lret
icebp
test
push
loop
inc
sbb
add
lcall
xor
stos
xchg
jle
pop
and
inc
mov
add
push
and
jne
js
and
leave
insb
and
pop
mov
lret
pop
ret
inc
dec
imulb
push
popf
dec
fstl
sbb
push
in
pop
mov
fstl
test
gs
pop
stc
sbb
test
mov
push
lret
stc
and
sarb
pop
iret
stos
sti
adc
xor
and
mov
push
mov
mov
xchg
nop
mov
bound
fldenv
xchg
out
pop
leave
sbb
aad
pop
push
movsl
imul
sub
mov
pop
cmpsb
xchg
lcall
out
xor
push
add
cmp
add
test
xor
jnp
dec
rcl
jle
and
or
xchg
div
and
or
xchg
movl
pop
pop
aam
hlt
std
jb
fisttpll
mov
sar
push
pop
daa
in
ja
jbe
xlat
mov
adc
data16
inc
or
movsb
mov
dec
dec
adc
inc
jo
fistpll
and
mov
jne
lcall
fdivs
xchg
mov
xchg
fstpt
and
and
and
stc
shll
mov
addb
and
in
scas
test
mov
icebp
jmp
jmp
xchg
cmpsl
out
stc
sbb
xchg
iret
mov
stc
or
rorb
mov
ret
lret
cmp
push
xchg
xor
fisttps
cmp
sbb
and
leave
push
inc
sbb
notl
xorb
adc
popf
sti
dec
push
xchg
push
push
icebp
les
outsl
dec
fcompl
adc
data16
or
jnp
push
outsb
rcr
movsl
and
cs
or
mov
mov
lahf
in
out
sbb
mov
dec
mov
adc
pop
push
mov
xor
sbb
cmp
mov
insb
pop
inc
inc
adc
mov
in
icebp
scas
xchg
pop
aad
or
xchg
call
ds
mov
loope
cmc
sar
out
popf
repnz
cltd
test
int3
xor
gs
gs
ja
lea
andb
clc
mov
nop
jo
mov
jl
cmc
movsb
add
jno
or
push
add
sub
mov
out
jns
jecxz
jge
ss
in
jb
addr16
pop
sbb
push
inc
add
push
incl
scas
mov
loope
add
addl
fs
cmc
jne
sahf
icebp
adc
sub
movsb
loope
sbb
aad
xchg
fnstsw
lds
push
xchg
jno
or
jmp
and
push
popf
out
sahf
loopne
push
fucomp
inc
lods
jb
int3
push
jg
xchg
dec
mov
imul
inc
ds
fbld
xchg
add
push
pop
test
mov
sbb
jno,pt
inc
pop
addr16
mov
ret
sub
cmp
inc
fistps
cs
jno
aad
lock
aam
inc
sbb
push
and
cmpsl
sub
ds
enter
lods
cmc
ljmp
sub
add
dec
add
sub
add
jmp
adc
icebp
and
add
inc
fwait
in
sbb
sub
std
outsl
jo
movsl
clc
and
sub
adc
jnp
repz
xchg
push
int3
lods
nop
sbb
jo
imul
test
shr
ret
inc
mov
loope
mov
das
nop
and
sub
clc
cmp
loope
push
sbb
pop
xchg
movsl
aam
jnp
cmp
rorl
lods
call
fwait
es
incl
hlt
scas
into
sub
mov
cmp
aad
jns
sub
ljmp
movsb
xchg
push
sbb
in
rcrl
push
push
mov
adc
addr16
mov
pushf
adc
insb
sbb
lea
fwait
scas
push
lret
int3
lods
sub
aaa
xchg
sbb
mov
sub
jo
lock
cmp
jmp
addr16
fadds
cs
xor
dec
pushf
inc
mov
loope
loope
jne
inc
xlat
cmc
int3
scas
pop
std
jmp
out
xchg
add
cmp
fnsave
pop
icebp
mov
sahf
pop
cmp
mov
out
imul
push
mov
into
cmp
add
nop
mov
sahf
adc
xor
jl
inc
and
aaa
rorl
jnp
inc
ret
lea
es
cmpsl
lahf
and
xchg
cmp
dec
xor
add
in
fimuls
sbb
cs
in
test
es
ret
fldcw
sub
cwtl
fldt
ret
sarl
push
pop
push
fdiv
add
mov
push
pushf
push
mov
mov
push
push
cmp
ret
and
js
scas
jae
sahf
popa
jb
pushf
mov
cmp
pushf
nop
adc
ljmp
imul
in
xor
fcoml
adc
stc
pop
or
inc
into
xchg
sub
pusha
sbb
lods
and
and
adc
or
adc
daa
jmp
hlt
fbstp
in
out
dec
pop
inc
pop
push
rcrl
lods
push
insl
xor
push
sub
test
cli
push
xchg
cmpsl
fwait
mov
mov
add
inc
popa
pop
mov
pop
cmp
insb
test
push
xchg
cmpsb
push
sbb
mov
adc
dec
sbb
pop
ja
pop
sub
lea
dec
push
and
push
mov
dec
jp
mov
jo
outsl
adc
pop
outsb
cmp
cmpsl
shl
fistpll
sub
cltd
mov
es
mov
jmp
sub
adcl
stc
sti
aas
sbb
shlb
insl
xchg
icebp
adc
cld
imul
mov
xchg
in
aam
stos
jae
bswap
adc
lock
add
insb
dec
scas
push
push
push
fstps
xchg
lret
mov
push
xor
std
add
std
icebp
xor
mov
or
jne
jmp
add
dec
fidivrs
push
je
les
outsl
xchg
scas
and
jmp
push
dec
movsl
or
hlt
cmp
scas
mov
cmp
pusha
dec
scas
pop
and
enter
imul
cmp
rcl
sub
fnclex
and
test
sti
test
mov
loope
jg
xor
or
push
mov
out
xchg
cmp
pop
push
cmpsl
push
mov
cld
jle
ss
push
xor
and
sbbl
mov
das
pop
inc
ret
popf
lock
aad
cld
dec
xchg
es
out
notb
jae
mov
mov
fistps
push
pop
cmpsl
cld
adc
sbb
inc
adc
push
popl
mov
frstor
sti
push
fimuls
aad
mov
pslld
insl
jo
push
jp
mov
cmp
push
ljmp
bound
outsb
ss
arpl
popf
insb
mov
cmp
ja
dec
add
stc
mov
cmp
pop
popf
xor
mov
pop
fldt
lods
ja
inc
xor
or
xchg
xor
js
rclb
int
mov
cwtl
jne
lds
add
loopne
ja
dec
fld1
mov
dec
data16
inc
push
sbb
leave
and
fstpl
dec
cmp
cmp
insl
pop
insb
loope
push
das
or
lds
xlat
jo
xor
xchg
jo
stc
jo
add
shll
xchg
adc
fcmovbe
test
add
and
cmp
add
pushf
mov
lret
in
sub
or
jmp
or
jle
xchg
dec
js
int
cld
mov
sub
data16
loope
pop
sub
fwait
in
push
jns
mov
in
mov
js
inc
idiv
das
jne
shl
mov
icebp
mov
or
xchg
mov
inc
enter
dec
test
jg
rolb
sbb
shll
mov
mov
lods
fildll
pop
in
test
push
cmp
daa
aam
mov
das
pop
imul
pop
dec
data16
mov
and
mov
jp
lods
xchg
jmp
pop
inc
cmpsb
popa
cmp
test
mov
add
adc
push
lahf
scas
out
sbb
xchg
pop
loopne
or
cld
cmpsb
movsb
sub
push
loop,pt
push
jecxz
cltd
addr16
mov
mov
lock
dec
inc
std
or
and
pop
xor
mov
adc
aad
adc
repz
xchg
ss
test
cmp
in
idivl
push
push
rolb
push
neg
cmp
rcll
sahf
dec
mov
pop
stc
push
mov
pop
xor
mov
xchg
mov
adc
fsub
aad
sbb
sub
inc
jp
jbe
cmp
jg
adc
fdivrl
lcall
out
or
lret
xor
or
jmp
imul
lods
loop
and
in
stc
jae
inc
mov
pushf
xchg
cmp
stos
cmp
std
bound
pop
psubusb
jb
pop
xchg
nop
pushf
pop
int
daa
lret
push
icebp
icebp
jl
movsb
ficoml
arpl
mov
cmp
clc
into
rcrb
dec
subb
mov
cmpsb
xor
out
in
es
push
in
adc
push
popf
add
movsl
sbb
insb
rcl
xor
fiadds
lfs
lea
pop
cli
cmp
sbb
mov
jl
lret
mov
mov
dec
fsubl
cmpsb
fmul
sbb
add
int
gs
je
pop
mov
iret
adcb
fistps
cwtl
popf
xor
pushf
jns
int3
xchg
xchg
push
daa
es
arpl
mov
data16
cmp
mov
sub
lret
aam
jmp
mov
aad
int
je
loopne
pop
mov
pop
cmpl
in
out
ret
inc
mov
sarl
mov
leave
movsb
pushf
adc
sub
and
and
loope
push
test
jb
lea
sub
inc
pushf
jne
mov
inc
or
sub
pop
test
mov
cmc
loope
cs
in
xchg
push
sub
out
mov
push
gs
push
and
or
mov
xlat
in
imul
pop
loopne
mov
xchg
dec
into
and
iret
test
and
jae
cmp
cmc
mov
lcall
testb
inc
into
rcrb
sub
in
pop
adc
rol
push
xchg
test
icebp
aad
jecxz
loopne
sub
sub
cwtl
jnp
mov
cmpsl
xor
std
sbb
mov
xor
pop
mov
cmpsb
pop
add
sub
lahf
outsb
in
xchg
sub
xchg
add
and
jmp
fadds
inc
add
jno
out
xchg
mov
iret
jecxz
dec
mov
jae
add
outsl
lret
xchg
ljmp
and
and
inc
mov
sti
cmpsl
cmpsl
xchg
and
xor
mov
pop
push
sbb
lret
and
push
fucomip
cmp
cmpsb
pop
pop
mov
fnstenv
push
fstpl
aam
adc
icebp
in
push
sub
inc
pop
mov
adc
enter
add
in
out
dec
lods
mov
jns
or
push
scas
xchg
cli
xchg
mov
xchg
xchg
in
and
ficoml
fs
jg
dec
push
or
js
mov
ret
push
add
incb
push
lods
imul
pop
out
push
ss
inc
je
loope
pop
sar
or
stc
subb
shrl
jae
adc
pop
inc
mov
mov
sbb
in
test
lahf
clc
les
adc
sbb
push
add
mov
lcall
lahf
hlt
imul
mov
push
loop
push
addr16
sub
imul
sub
dec
lods
icebp
jg
pop
jg
mov
insb
movsb
sbb
daa
inc
push
xor
test
mov
mov
mov
xchg
mov
xor
push
add
mov
inc
dec
mov
int3
repz
sub
je
mov
cmpps
inc
jecxz
insb
fmuls
jp
jmp
push
lret
ljmp
mov
test
pushf
adc
adc
jg
fsts
imul
aas
mov
cltd
stos
inc
jmp
push
or
add
adc
cltd
add
cmp
xchg
push
mov
jnp
pop
dec
dec
pushf
dec
sub
jl
jnp
or
jp
cld
mov
scas
clc
neg
rorl
pop
or
scas
push
ficompl
ds
out
mov
inc
ljmp
push
add
mov
outsb
mov
jg
enter
xchg
jmp
or
in
scas
shlb
pop
fstl
dec
mov
dec
dec
pop
insb
add
sbb
lea
das
dec
arpl
pop
aaa
js
or
faddl
sub
ret
xorb
cmp
push
into
inc
iret
pop
jecxz
cmp
xchg
ret
cmp
ficomps
sbb
js
jecxz
cmc
dec
scas
jmp
xor
out
mov
mov
insl
mov
jno
mov
jg
pop
cs
xchg
jecxz
clc
call
leave
out
xor
cmp
jo
push
lret
rclb
add
inc
mov
stc
dec
fmull
lock
add
jo
xchg
mov
fmull
nop
mov
sbb
das
cmp
out
pop
inc
ret
ja
icebp
add
out
jae
arpl
xchg
mov
jmp
fwait
lcall
xchg
mov
add
lods
lods
aaa
adc
jmp
imul
dec
or
add
mov
sub
cmp
dec
in
and
pushf
jp
repz
fnsave
aaa
cltd
inc
mov
shlb
bound
pop
add
adc
mov
and
sbb
push
mov
push
scas
fwait
fldenv
cld
and
sbb
dec
cmpsb
mov
xchg
sbb
filds
aas
fadds
sti
pop
sub
mov
mov
scas
jnp
mov
jp
mov
push
mov
mov
repz
dec
jae
shlb
sbb
into
test
xor
jmp
ret
sbb
aam
lds
pop
int
pop
add
jo
jmp
push
cli
fnsave
ljmp
push
bound
and
mov
fisttpll
add
notl
popa
movsl
icebp
divl
adc
inc
push
frstor
or
leave
data16
fwait
test
and
in
add
popf
mov
pop
movsb
mov
xchg
lods
inc
jl
add
sub
test
sbb
inc
push
addr16
mov
jecxz
repnz
adcb
je
andb
push
mov
test
jp
mov
jg
or
test
add
ja
mov
outsb
test
pop
aaa
sbb
jmp
pop
dec
jmp
loopne
pop
mov
neg
scas
fnop
cmp
sbb
sub
insb
pextrw
mov
test
mov
add
add
sub
add
in
out
jl
xchg
ds
pop
ss
ret
mov
leave
int3
cmp
or
cmpsb
dec
cmc
ficomps
xchg
shrb
adc
test
clc
sbb
xchg
mov
pop
mov
xor
out
xchg
addl
push
sub
cmc
dec
xchg
shl
aaa
mov
rorb
pop
pop
fildl
mov
popa
xor
leave
sbb
xchg
push
cmp
or
mov
cmpsb
mov
mov
adc
ret
insl
test
add
mov
aas
out
jnp
xor
dec
jmp
mov
shrl
insl
and
movsl
outsl
jl
idivb
ret
ds
mov
pop
jge
inc
ret
mov
stos
cmp
aas
femms
loope
and
cmc
insl
and
sarb
stos
int
mov
mov
scas
mov
add
stos
sub
cmpsl
push
mov
ja
sub
sbb
int3
or
mov
or
jg
mov
lret
cmp
jl
ljmp
lahf
and
into
sbb
in
sbb
xchg
cmp
adc
mov
jnp
jb
in
mov
pop
inc
mov
mov
popf
mov
dec
nop
icebp
subb
in
xchg
xchg
inc
repnz
cmpsl
ja
add
push
int
roll
js
and
cwtl
data16
aad
incb
pop
jb
add
hlt
adc
int
stos
cmp
das
jle
push
mov
into
mov
adc
sbb
iret
mov
cmp
xchg
push
add
ret
repnz
fstpl
pop
push
neg
popf
adc
xor
sub
gs
adc
pop
subb
rcr
mov
int
lock
loop
mov
imul
adc
imul
dec
cmp
mov
jnp
mov
mov
xchg
adc
mov
pop
xor
sub
aas
sbb
fcoms
test
xchg
xorb
adc
pop
leave
enter
mov
add
pushl
and
aas
adc
cs
add
mov
jp
data16
scas
hlt
cmp
xchg
mov
test
pop
mov
pop
loopne
into
movsl
fisubrs
in
or
mov
mov
or
sub
inc
mov
addb
cld
sub
lret
pop
lahf
jecxz
arpl
pop
inc
jae
repz
xchg
push
sahf
jle
orl
mov
movsb
aam
fs
adcl
mov
mov
adc
bound
or
enter
pop
jae
sbb
or
sub
lods
ja
adc
pop
je
repz
mov
shrb
push
pop
shl
nop
in
mov
int
cmpsb
push
inc
lret
or
outsb
fwait
in
jo
dec
xchg
ss
mov
push
add
jecxz
hlt
nop
mov
in
mov
and
sbb
dec
repz
sub
das
int
sbb
cld
xor
das
dec
jmp
rcrb
add
ret
or
pusha
neg
aas
insl
push
mov
sub
cli
scas
xor
xchg
mov
sbb
cld
lahf
pop
sti
and
mov
cmp
pop
xchg
mov
cmp
popf
pop
cmp
jno
ljmp
dec
sbb
test
leave
cmpsb
cmpsb
pushf
movsb
lea
mov
outsb
stc
inc
dec
pop
and
pusha
push
and
mov
xor
lds
xchg
mov
inc
sar
sbb
das
cltd
mov
ja
test
adc
inc
test
pusha
adc
sub
mov
enter
pushf
fbld
scas
add
cmp
inc
add
pushf
out
insb
out
add
xor
push
out
leave
loope
jbe
or
sahf
push
pop
xchg
fs
outsl
cmc
testb
outsl
pop
adc
outsl
imul
jp
sbb
fldcw
inc
and
xchg
jb
test
pop
xchg
mov
adc
lret
rcrl
sub
test
lcall
stos
adc
jle
adc
adc
das
pop
in
push
sbb
rclb
mov
pop
test
jnp
xor
fldz
push
popa
int
aas
xor
sub
push
sub
pop
movsl
add
inc
dec
push
outsl
out
out
dec
sbb
dec
pushf
insb
xchg
adc
daa
int3
aam
or
int
in
add
repnz
mov
stc
shl
arpl
adc
lea
mov
call
add
sbb
sbb
push
push
mov
mov
scas
nop
rorl
mov
cmpsl
iret
and
outsb
jge
push
sbb
sub
cwtl
shrl
daa
outsl
xor
dec
ret
leave
pop
jns
les
xchg
nop
pop
jae
cmpsb
adc
ss
int
cmpsb
pop
out
sbb
aam
inc
cmp
pusha
dec
insl
fistps
clc
es
mov
adc
decb
aad
inc
ret
mov
fisubrl
inc
push
pushf
xchg
lock
jecxz
inc
mov
mov
mov
imul
push
popa
arpl
push
lock
ja
stc
gs
test
mov
jge
pop
repz
scas
mov
lods
test
sahf
xchg
mov
sub
dec
jne
repnz
movsl
xor
fildl
inc
shlb
loopne
mov
xchg
test
jns
pcmpgtd
mov
adc
sbb
push
es
cmp
imul
pushf
push
sub
arpl
dec
adc
test
dec
stos
stos
xor
movsl
adc
repz
pop
dec
inc
push
or
sbb
data16
lock
or
inc
adc
or
dec
out
jecxz
aad
pop
jecxz
gs
leave
push
pop
cli
int3
in
dec
mov
xchg
js
je
bound
insb
xor
les
inc
mov
xor
mov
mov
xchg
inc
in
int
ja
stc
jb
xchg
test
xchg
sbb
outsb
gs
shl
arpl
pop
mov
pop
ja
aam
cmp
sti
dec
pop
sbbl
mov
pop
pop
gs
call
sub
insb
cwtl
gs
mov
int
in
or
gs
sbb
arpl
pop
pushf
push
mov
clc
push
jae
ret
and
fwait
stos
std
test
daa
adc
add
dec
push
cmp
stc
cld
dec
fndisi(8087
cmp
mov
pop
aam
ret
jmp
and
xlat
mov
ret
outsl
sti
mov
popa
fdivrs
pop
inc
mov
into
push
test
push
enter
mov
or
xlat
cmc
in
sbb
push
std
pop
decl
pushl
mov
loop
xor
sub
faddl
or
jo
push
xor
std
clc
inc
xchg
out
mov
insl
punpckhbw
push
push
mov
scas
pop
in
lock
iret
loop
jmp
xor
mov
ljmp
pop
fcmovnu
pop
cmp
outsl
pop
ficoms
packsswb
xlat
pop
adc
add
fsts
and
sub
std
lea
add
mov
mov
jbe
mov
lea
ljmp
push
stc
lret
jp
jecxz
ret
in
jnp
nop
pop
cmpb
cld
cs
mov
adc
jb
adc
cld
popf
dec
popl
jbe
jl
leave
outsb
xchg
mov
mov
or
xchg
jns
adc
mov
inc
lahf
sbb
adc
mov
loope
dec
cld
lahf
xchg
pop
inc
mov
cs
sbb
or
sahf
ret
shrl
cld
test
mov
movb
cltd
jb
lea
out
lret
xchg
dec
mov
mov
nop
xchg
sahf
ss
outsl
and
or
cmp
out
es
cmp
insb
lcall
out
loop
inc
mov
push
and
shlb
aas
in
sti
outsl
mov
push
lds
xchg
leave
dec
xor
loopne
mov
imul
iret
xchg
lods
push
lods
test
mov
ret
dec
push
cmp
dec
mov
mov
ret
xor
imul
lret
add
dec
or
mov
jbe
hlt
xchg
inc
ljmp
or
sub
mov
mov
push
push
stos
int3
jb
imul
out
cmp
mov
add
inc
loop
mov
and
mov
add
ja
dec
cli
sti
pop
aas
out
and
push
out
and
rcrb
fdivrs
out
mov
test
cwtd
xchg
cli
aam
xchg
mov
dec
in
jg
fwait
pop
xor
add
xchg
cmp
data16
cmp
pushf
testb
imull
std
mov
inc
adc
hlt
fcompl
fisubrs
mov
sub
pop
je,pn
aad
js
sbb
sub
aas
jp
pop
stc
mov
push
sti
add
pushf
inc
and
fsubrs
mov
std
fidivl
imul
mov
add
add
fcoms
or
pop
ljmp
push
andb
lods
push
cmpsl
cli
ret
insl
or
or
loop
call
sbb
es
les
push
and
dec
inc
js
push
test
mov
inc
push
or
testl
sbb
dec
add
mov
inc
push
mov
lea
sbb
inc
or
ret
xchg
mov
push
dec
mov
and
fdivl
repnz
mov
test
pushf
jnp
iret
sub
faddl
jg
shl
pop
repz
dec
rorl
lret
stos
jns
jp
jmp
lcall
into
fidivrs
mov
pop
cmp
dec
fldl2e
outsl
sbb
mov
push
inc
shl
inc
fistpl
pop
cmp
mov
popa
fimull
cld
cwtl
mov
adc
sub
xchg
mov
jp
cld
aaa
push
rcl
sahf
loop
cmp
mov
push
jo
ljmp
das
xchg
imul
jns
sbb
xchg
lods
sbb
or
cmp
cmpsb
dec
push
xchg
cwtl
mov
ret
push
inc
lcall
mov
ds
or
and
and
xchg
adc
ja
popf
or
cwtl
popf
idivl
jg
aad
lods
addr16
push
or
test
cltd
mov
lahf
xchg
push
sub
je
outsb
adc
lock
mov
imul
cmp
push
add
fsub
jl
push
cmp
movsb
ss
sbb
or
cmc
push
rclb
cmp
mov
sbb
mov
push
xor
mov
xor
clc
inc
sub
fwait
adc
jbe
mov
push
daa
pushf
cwtl
loop
mov
clc
mov
sub
loopne
fsts
shll
pop
mov
into
cmp
test
ss
pop
inc
sbb
outsb
stos
enter
pop
pusha
and
shr
jmp
das
jns
clc
cld
lock
add
daa
dec
pop
cmp
leave
xchg
xor
aam
push
jmp
mov
lods
xchg
push
loope
xchg
shll
cmp
mov
stc
pop
fistps
cs
lods
lea
aam
mov
xor
out
inc
xchg
pusha
aaa
or
out
cmp
ficoml
jns
test
int3
cltd
mov
cmp
mov
and
add
cmp
js
pop
pop
fidivrl
call
addr16
mov
jp
pop
sub
sub
pop
mov
mov
notl
jl
xchg
pop
stos
pop
sub
sub
mov
test
imul
mov
pop
mov
jl
cmp
mov
mov
mov
cmp
push
scas
jnp
pop
cmpsb
test
pop
in
sbb
pop
xchg
cwtl
dec
jle
pusha
call
gs
fstpl
sahf
aam
repnz
mov
adc
push
dec
or
hlt
jns
js
mov
push
jecxz
xchg
adc
xor
add
add
scas
push
std
lods
xchg
push
pop
cmpsb
pop
add
or
jp
ja
xchg
imul
int3
es
xlat
jno
adc
in
push
sbb
xor
testl
into
cmpsl
shll
rclb
dec
xchg
jmp
fsubrs
js
dec
inc
cmpsb
cmp
sbb
int
add
inc
xchg
daa
mov
mov
cmp
pop
pop
pop
roll
mov
push
out
cmc
sub
xor
jnp
xor
cltd
lcall
sub
or
jne
dec
jp
ret
and
out
mov
dec
xchg
xor
lods
decb
lret
adc
loop
add
pop
iret
outsb
cs
push
bound
fistpl
jnp
push
sti
mov
push
xchg
mov
dec
xchg
andb
fwait
inc
push
shl
add
es
xchg
push
push
mov
mov
xchg
mov
gs
fisubrl
xchg
rol
imul
lods
cmp
adc
push
add
insb
into
test
inc
into
out
cmp
jnp
mov
or
adc
mov
ss
sbb
add
lcall
dec
test
fistps
add
test
sbb
adc
xchg
xor
test
jb
mov
lods
fs
hlt
sbb
fwait
ljmp
xor
cwtl
jns
cmp
ss
push
adc
sub
mov
cwtl
cmp
je
and
inc
pop
pop
lock
pop
jl
cwtl
dec
pop
or
mov
imul
jae
cwtl
lds
test
cmc
jo
lods
call
pop
movsb
out
mov
stos
mov
lahf
adc
lock
dec
out
or
dec
cli
sahf
test
icebp
push
outsl
cmp
mov
cmpsl
jp
pop
push
inc
push
stos
pusha
cs
data16
lds
or
daa
dec
mov
inc
mov
loop
fcoml
fcoms
adc
fstl
sbb
int3
fstpl
and
cmp
hlt
sbb
iret
test
jmp
add
sbb
loop
in
aad
loopne
insb
sbb
mov
sub
mov
std
bound
pop
into
and
cmp
xor
xchg
mov
mov
cmp
loope
jg
pop
lret
sbb
mov
sbb
sbb
sbb
ret
out
je
push
lods
scas
into
jge
daa
addl
cmp
fdivs
nop
xor
dec
sti
mov
loope
arpl
pop
stc
fdivrl
dec
cmp
inc
push
push
sbb
mov
pushf
jle
sbb
push
imul
rcr
filds
mov
dec
jnp
and
mov
add
std
ljmp
ljmp
dec
mull
mov
inc
int
iret
mov
imul
aas
mov
adc
inc
iret
jge
mov
cmp
sti
jle
push
fs
sub
je
cmp
push
movsl
lock
mov
clc
mov
rorb
push
xchg
jmp
cwtl
sub
int
dec
push
add
add
mov
and
imul
popf
pusha
dec
or
in
mov
mov
add
lods
jno
inc
sbb
and
es
push
or
jl
push
and
lock
aaa
xchg
call
pop
es
shlb
jg
cmp
xlat
push
leave
mov
mov
dec
adc
mov
test
mov
jle
push
sbb
in
sub
mov
nop
mov
or
push
cltd
repnz
mov
cmp
outsl
das
insb
mov
stos
lea
in
fsubrp
mov
mov
repz
cmpsl
xchg
mov
mov
sub
add
int
fidivs
mov
ja
pop
insl
xor
pop
inc
xor
pop
pusha
add
lahf
inc
adc
es
sub
xchg
inc
add
adc
lock
lret
lods
leave
je
mov
push
ljmp
in
and
cmpsl
enter
and
pop
pop
mov
cmpl
fistl
adc
aad
lock
pop
arpl
push
stos
fsubr
movntq
out
repnz
int3
dec
in
sbb
push
ds
addl
push
aas
sub
xor
xor
xchg
es
jmp
out
mov
jne
shl
fildll
lds
cmp
push
pop
lret
sar
clc
xchg
pop
test
in
xchg
js
loopne
jae
push
aad
or
adc
in
movsb
jmp
mov
pop
stos
enter
dec
xor
insl
dec
shrl
sbb
xchg
and
add
jns
xor
cmp
cs
movl
push
pop
mov
enter
push
adc
adc
popf
ljmp
pop
dec
iret
fimuls
mov
push
jno
lcall
mov
and
neg
scas
popa
int
mov
or
xlat
dec
daa
inc
imul
mov
jno
xchg
mov
add
sbb
nop
es
cmp
xchg
xchg
push
add
faddl
outsl
sbb
loop
inc
ja
jo
and
decw
mov
int
cmp
test
adc
repnz
jae
aaa
mov
std
addr16
mov
iret
dec
sbb
pop
jp
push
push
push
test
sbb
and
outsl
jmp
or
into
std
inc
fwait
jae
add
jle
in
cmpsl
jne
xchg
repz
pop
xchg
push
push
add
ficoml
rcl
mov
andb
cmp
shll
xor
pusha
ss
add
cmp
or
test
int
xchg
add
cmc
lcall
les
mov
inc
ret
cmpsl
lea
lods
mov
xchg
pop
call
xchg
xor
sub
jmp
ret
mov
add
inc
loope
sub
xor
jae
xlat
mov
mov
mov
shrb
and
ficoml
sbb
nop
shlb
ficompl
ljmp
out
cmp
jl
data16
push
popa
inc
sbb
or
fildl
push
xor
fisttps
mov
sub
sarb
clc
jmp
push
push
pop
xor
loop
push
into
mov
rcr
cmpsb
push
push
stc
jns
sub
xlat
js
mov
fdivs
xlat
fprem1
inc
clc
out
insl
or
xor
mov
orl
iret
cli
adc
pop
std
sub
pop
cmc
or
ds
cwtl
sbb
adc
fwait
sbb
aas
outsb
dec
les
add
or
nop
rclb
loopne
pushf
fwait
lock
fistps
sahf
xor
outsl
mov
xor
pop
mov
stos
jbe
pop
mov
fprem
push
adc
call
sub
arpl
aaa
cwtl
shrb
xchg
lods
scas
add
cmp
sbb
imul
rcrl
aaa
shrb
out
inc
inc
out
add
fidivrl
sti
repz
lcall
push
inc
int
fwait
or
xchg
push
dec
repnz
push
cmp
xor
shl
add
enter
pop
mov
cmp
lret
mov
dec
arpl
inc
in
dec
loopne
fnstenv
adc
daa
mov
stc
adc
fdivr
orw
dec
mov
jno
inc
in
mov
setae
sarb
add
sbb
jle
data16
jg
nop
adc
orl
pop
pop
xor
in
jb
lods
dec
out
jo
divl
fidivl
repnz
hlt
jbe
sbb
xor
jle
sbb
xchg
sti
stos
xlat
outsb
pushf
adc
mov
xchg
mov
sbb
push
inc
fldenv
int3
sbb
and
in
xchg
test
inc
sub
cmpsl
in
pop
lret
sbb
pop
lret
pop
ret
mov
xchg
and
push
inc
aam
cltd
aaa
pushf
mov
stos
lods
cmp
jecxz
test
stc
xor
push
sub
mov
push
gs
sbb
jg
and
cmp
gs
xchg
pop
mov
mov
and
xchg
cmp
cmp
cmp
cmpl
loopne
pusha
push
roll
mov
clc
daa
outsl
jg
or
sub
inc
out
mov
jns
enter
mov
enter
jmp
testb
aaa
pop
aam
cmp
in
test
dec
sbb
xor
xchg
sbb
imul
loopne
cld
sahf
jle
mov
and
sbb
add
je
lret
inc
adc
dec
dec
push
iret
daa
xchg
xor
cmp
sahf
xchg
xor
je
mov
jmp
or
sbb
out
jnp
lret
jmp
mov
add
jp
rcr
mov
outsb
lods
insb
hlt
sbb
fyl2x
xchg
fwait
push
dec
scas
xchg
mov
cmp
scas
mov
adc
pop
lcall
mov
arpl
push
ret
mov
xchg
push
cmp
out
out
sub
test
or
sbb
divl
add
sub
pop
pusha
ljmp
inc
aas
cmp
jmp
xor
sbb
mov
xor
sbb
adc
scas
mov
mov
or
adc
push
sub
push
popf
adc
and
loopne
not
int3
mov
int
in
cltd
xchg
cmpsb
xor
fcoml
adc
mov
test
mov
and
aam
adc
test
push
adc
xchg
outsb
xor
mov
mov
cs
or
push
in
das
leave
mov
test
jle
push
and
jno
cmp
dec
fnsave
lcall
cltd
cs
sahf
xorb
and
sbbb
es
mov
repnz
xor
sub
ret
test
jnp
mov
mov
fcmove
aas
mov
inc
add
or
adc
nop
aad
idivl
in
add
push
add
out
lods
outsb
out
or
aaa
aaa
pop
or
pop
pusha
mov
out
pop
pusha
pusha
rcr
test
aam
mov
cmpsb
push
cmp
movsl
cmpsl
lret
shll
cwtl
lcall
cs
femms
xor
xor
xchg
cmp
fisttps
out
xor
xchg
jo
ja
cmp
inc
push
inc
mov
or
or
jge
shlb
ret
xor
iret
jnp
lock
cld
xor
mov
imul
mov
jmp
jno
inc
xor
mov
mov
repz
je
mov
in
cmp
lret
pop
xchg
enter
divb
pop
scas
aaa
arpl
imull
out
dec
int
push
repz
inc
add
push
outsb
mov
stos
aam
mov
jne
push
or
dec
inc
push
mov
pushf
mov
push
jl
lret
ficoms
loopne
jno
xor
or
pop
out
leave
lock
jecxz
stos
daa
mov
push
cmp
lret
and
pop
inc
out
sub
insb
mov
or
jmp
cltd
inc
les
xchg
pop
push
cli
out
repz
and
mov
divl
push
pusha
jge
mov
pop
mov
insl
and
mov
inc
push
pusha
inc
push
jp
repz
fwait
push
xchg
mov
pop
and
jae
xchg
mov
lock
add
push
cmp
xchg
push
or
jle
inc
jl
cmpsb
cmp
loopne
sti
imul
cmp
inc
movsb
mov
pop
jae
adc
mov
decb
ficoms
xchg
push
mov
ds
popa
cltd
insb
mov
cmp
xor
in
or
add
inc
iret
fnsave
aas
ret
out
movb
cli
pop
mov
jne
gs
cwtl
lods
sahf
pop
inc
mov
cmp
ret
ficoml
jne
jp
hlt
push
bound
mov
cmp
sub
sbb
test
pop
sub
mov
loope
mov
stos
mov
jne
pop
sub
push
jbe
pop
imul
pop
xchg
mov
test
push
inc
jle
xor
mov
testl
lds
xor
pop
and
in
out
loopne
and
jmp
aad
addl
into
repz
jecxz
sbb
test
mov
jo
mov
jmp
in
icebp
xor
push
mov
sar
sub
xor
or
mov
cmc
mov
mov
bound
insb
sub
cld
add
and
add
addl
sbbb
lock
call
push
icebp
popaw
in
std
std
clc
outsb
clc
out
xchg
pop
inc
xchg
loopne
mov
mov
clc
aaa
es
lahf
je
roll
ljmp
adc
jne
xor
mov
pop
cmp
jbe
dec
mov
aad
cmc
pop
sbb
dec
ds
enter
dec
xor
insb
inc
push
lods
sub
outsl
and
ljmp
outsl
mov
inc
mov
mov
adc
fsubrs
jl
subl
in
fnstsw
repnz
mov
js
popf
scas
jno
inc
pop
loop
inc
mov
jp
cmpsb
ja
and
xchg
les
enter
dec
pop
xorl
repz
notl
push
jl
dec
idiv
pop
push
fstpl
inc
mov
ret
inc
lods
mov
or
xchg
les
cld
push
fimuls
fsubrl
jne
sub
popf
mov
mov
jne
add
cltd
clc
and
lahf
push
dec
cmp
cmc
push
adc
cwtl
mov
pop
add
ret
rcrb
sbb
bound
fisubs
mov
cmp
call
orb
add
sahf
bound
aam
mov
out
cmp
mov
xlat
dec
adc
push
sbbl
cmp
aas
fcomp
jl
inc
adc
xor
sub
jnp
sbb
shlb
mulb
aaa
sbb
fildl
pop
idiv
repz
and
pop
adc
divl
pop
mov
jle
call
sub
mov
iret
mov
jne
clc
not
movsl
xlat
sahf
lret
ljmp
mov
mov
sub
rorb
cli
and
jge
insl
mov
idivb
mov
or
das
xchg
xor
dec
pop
pop
rcll
sbb
test
int
dec
call
or
repz
bound
pop
jle
xchg
mov
sbb
out
loopne
lret
adc
jg
aas
push
loop
rcrl
xchg
adc
pop
fisubl
arpl
mov
aaa
adc
mov
pop
or
adc
andb
daa
mov
mov
addr16
lds
ret
add
pop
jo
int3
gs
push
rorl
push
dec
insb
push
push
icebp
inc
arpl
or
fisubrl
fcomps
lds
pop
mov
dec
fdivl
jge
cmp
pusha
mov
cwtl
inc
xchg
clc
dec
add
push
sub
jl
and
xchg
pop
jl
rcrl
xor
push
mov
add
aaa
and
je
or
lret
or
cmpsb
mov
xchg
push
or
aad
xchg
sti
daa
jo
test
pop
sbb
insl
ljmp
sbbb
push
push
jns
fisubrs
xor
push
push
fldl
ja
dec
inc
das
inc
imul
cmp
inc
and
lock
fmull
ret
push
mov
adcl
jne
icebp
in
addb
sbb
inc
data16
outsl
jmp
std
rorl
je
adcb
inc
lret
push
lock
cmp
pop
dec
es
xlat
lods
ficoml
aaa
lds
insb
in
fsts
in
and
add
adc
orl
call
xor
sbb
xchg
mov
aad
mov
adc
sub
leave
and
mov
mov
mov
sahf
adc
nop
sti
pop
cmp
ret
xlat
push
loop
mov
not
cmp
data16
jo
or
cmp
mov
jne
xor
imul
jle
cwtl
fmull
inc
push
mov
cmc
fwait
incb
je
sub
push
sbbl
mov
or
xchg
pop
leave
sbb
shrb
testb
mov
pop
fdiv
std
and
js
mov
or
insb
mov
inc
mov
cmp
sbb
iret
icebp
dec
pusha
clc
adc
mov
gs
scas
cmpsb
inc
push
mov
sbb
sbbb
mov
mov
jecxz
rcll
hlt
mulb
pop
push
sti
jecxz
sbb
popa
mov
dec
bound
loop
aaa
add
pop
or
or
dec
and
mov
leave
fs
pop
xor
pushf
dec
je
dec
add
xchg
pop
add
je
sub
xor
dec
mov
or
test
popa
test
nop
jecxz
jg
in
test
jmp
or
dec
rorb
jmp
aam
inc
in
jg
jo
sbb
dec
mov
adc
sub
lret
cmp
fsubrl
cmp
aad
jg
xor
sub
in
int
xchg
push
idivl
les
lcall
mov
mov
push
call
adcl
mov
push
or
pop
addr16
xchg
and
rorl
arpl
xor
mov
lds
add
mov
mov
test
push
inc
rclb
lret
mov
scas
stos
mov
lods
fildl
push
or
pop
stos
inc
mov
xchg
mov
mov
shr
mov
jo
xchg
stos
bound
sti
mov
pop
mov
inc
mov
push
dec
sbb
mov
jmp
out
push
adc
inc
mov
adc
repz
jb
lock
data16
das
sub
ss
adc
cmp
cmp
test
pop
cltd
jbe
mov
sbb
ja
cwtl
sti
sub
add
mov
mov
std
loope
pop
fnstsw
icebp
push
add
mov
jle
jbe
pop
mov
dec
ljmp
mov
pop
or
sbb
fsubrs
notb
shrl
in
ja
les
mov
mov
adc
jmp
cld
mov
popaw
fistps
push
inc
mov
hlt
and
pushf
scas
loope
pop
imul
sbb
inc
loopne
mov
loopne
xchg
xor
pop
push
iret
jbe
scas
sub
pop
jnp
xchg
xor
notb
shll
mov
js
pop
mov
out
cmpsl
sbb
jnp
inc
xor
xchg
fldl
add
ja
cmp
outsb
nop
sbb
fwait
xlat
idivb
lea
sbb
out
dec
push
pushf
cmp
adcb
push
in
dec
xchg
cmp
iret
lods
loope
and
adc
xchg
pop
fsubrl
insb
adc
ss
pop
mov
rcr
xchg
dec
push
je
paddsb
imulb
hlt
inc
push
ret
movsl
xchg
and
cmc
out
inc
fidivs
push
fwait
jmp
add
movsb
les
mov
mov
dec
mov
lahf
or
push
sbb
push
in
pusha
mov
data16
je
lcall
add
ret
mov
jp
jae
lahf
inc
inc
mov
add
inc
push
test
shrl
out
lret
xchg
and
cmp
test
cmp
lret
lods
sbb
pop
mov
jmp
cmpsb
outsb
out
iret
in
aam
mov
out
arpl
add
outsb
iret
imul
jns
pop
push
and
sub
mov
inc
lret
adc
jns
fistpl
dec
mov
mov
sahf
cmp
je
repnz
cmp
testb
test
jne
xor
insl
xor
add
cmp
xchg
mov
adc
adc
push
dec
xchg
adc
repz
in
jno
adc
add
mov
and
and
add
adc
xchg
push
jns
mov
loope
mov
add
out
pop
rcrl
lret
rorb
mov
sub
pop
in
ss
loope
scas
arpl
cmp
sub
push
jmp
xor
leave
push
ret
cs
adc
xchg
dec
loopne
dec
aas
cmp
fadd
pop
cwtl
insl
xchg
inc
lds
fstpl
fcmovu
cld
insb
movsl
cmc
xchg
imul
fistpl
mov
pop
sbb
sub
popa
pop
mov
push
scas
push
lret
stc
push
call
or
mov
mov
call
fisttps
mov
loope
sbb
and
and
hlt
inc
aas
call
popa
jle
push
xchg
and
mov
add
pop
jo
jne
mov
xchg
aaa
jb
push
fstpt
outsl
pop
ficomps
xor
xchg
jne
lea
add
mov
sahf
repz
aaa
pop
sbb
pusha
ds
add
out
jg
pusha
lahf
cmpsb
and
and
mov
ficoms
xor
out
fcomps
sbb
or
sub
xchg
push
xchg
popl
sub
pop
cmp
jecxz
add
insb
popa
and
cli
mov
cmp
es
jo
mov
in
pusha
cmp
loopne
push
and
outsb
lcall
jne
dec
cltd
imul
or
push
pusha
loop
dec
push
jl
sub
mov
and
pop
xchg
sahf
stos
insb
popf
loop
repnz
inc
pop
shr
xor
es
lret
push
scas
ret
popf
hlt
fwait
push
xchg
push
js
inc
lods
adc
insb
pop
sahf
pop
sub
bound
mov
mov
cld
inc
sti
jae
fdivs
dec
cltd
mov
in
inc
loopne
inc
add
popf
add
shl
xor
mov
lret
arpl
imul
fnop
in
dec
push
xchg
testl
mov
outsb
stc
scas
aam
mov
inc
mov
loope
dec
dec
jmp
mov
lods
sub
fs
sub
ljmp
pop
pusha
test
push
cmp
movsl
mov
sub
insb
or
xchg
sahf
sub
leave
push
xchg
neg
mov
pop
push
mov
scas
sub
cs
in
scas
aas
add
sbbl
cmpl
dec
aad
dec
jae
aam
int3
andb
push
hlt
or
xchg
lock
cmp
imul
push
inc
sub
fs
fisubrl
mov
jns
mov
fstps
xor
outsl
jne
mov
movzwl
jo
outsb
scas
lods
pop
cmpsb
adc
inc
ljmp
and
mov
out
outsb
sub
jns
mov
cli
outsb
fnsave
pop
insb
rcr
sub
push
jae
lods
daa
insb
cmp
xchg
in
jnp
push
mov
sbb
push
mov
and
sbb
adc
repz
push
mov
icebp
push
lcall
mov
or
sbb
pop
insl
dec
aaa
and
insb
ret
test
mov
pop
cmp
rcrl
jno
cmp
mov
and
in
xchg
cli
jb
xchg
sub
mov
fcoml
out
sbb
leave
pop
shr
les
pop
sbb
mov
and
and
mov
shr
cmp
jae
dec
mov
hlt
xor
lcall
mov
ljmp
stc
cmp
mov
jne
sbb
aas
and
icebp
mov
pop
std
inc
scas
cli
push
hlt
int3
fcomps
dec
loop
cmp
std
rolb
jp
mov
jle
xchg
pop
push
in
or
movsb
cld
jmp
push
xor
inc
push
pop
mov
mov
mov
adc
pusha
mov
cmp
data16
push
movsl
cmc
adc
fnstcw
pop
fs
push
push
in
pop
sahf
std
rol
cmp
mov
inc
push
mov
adc
jle
sar
loop
sub
popa
jl
cs
imul
dec
aas
mov
pusha
scas
out
fst
pop
mov
int
icebp
pop
xor
arpl
ret
sahf
pop
icebp
mov
cs
xor
mov
mov
cmp
mov
mov
jne
repnz
pop
les
xor
in
scas
and
fwait
xchg
aam
and
or
xchg
scas
test
pop
fnstenv
js
insb
pop
cli
pop
jbe
mov
or
sub
mov
mov
sbb
push
xchg
sahf
cmpl
adc
sub
jl
cwtl
and
outsb
jmp
mull
mov
push
xchg
fsubs
icebp
leave
adc
icebp
addr16
dec
lods
or
lcall
jo
lahf
jle
cltd
add
adc
movsl
dec
pop
xchg
adc
push
xor
sbb
lea
sbb
add
mov
mov
data16
sub
or
negl
std
xchg
cmp
repnz
mov
sbb
mov
sub
int3
cmp
sbb
and
aam
pop
call
call
cltd
xor
inc
and
push
xor
fidivl
inc
xchg
mov
sar
and
movb
inc
fstpl
mov
jmp
imul
outsb
fisubrs
sahf
lock
xor
push
ljmp
adc
stos
push
pop
push
cli
cs
ljmp
lret
jb
inc
rorl
les
push
sub
dec
insl
pop
iret
inc
popa
les
repz
arpl
xchg
clc
adc
fistpl
sbb
mov
subb
add
mov
or
or
xchg
in
jp
pop
sti
and
push
insl
jb
xor
dec
scas
rcll
mov
iret
pop
and
mov
xor
xchg
mov
out
push
repz
push
jns
xchg
mov
pop
dec
xchg
dec
push
cli
aad
scas
lods
xchg
cs
ret
pop
orb
cld
in
in
inc
cmp
jl
scas
push
jmp
cmpsl
test
inc
inc
fadd
or
mov
pop
lret
insl
fnstenv
les
dec
mov
xchg
pop
enter
pop
cmp
fsubr
je
pop
test
lods
inc
outsb
push
jge
dec
pop
loop
mov
sbb
jns
and
fdivrs
sbb
mov
push
xchg
pusha
or
imul
insl
pop
add
mov
push
fdivrs
jnp
sub
add
or
scas
cmovle
stos
outsl
push
jbe
lock
out
jl
fimuls
mov
cmp
in
xchg
dec
popa
push
mov
push
out
and
fadds
add
cmp
clc
scas
pop
mov
test
leave
ds
dec
sub
dec
pop
push
push
lret
sti
dec
push
dec
call
push
xchg
jle
dec
lea
add
leave
and
imul
sbb
daa
or
int
push
das
movsb
sbb
and
das
jo
mov
ds
sbb
mov
inc
loopne
icebp
dec
faddl
mov
scas
push
lret
test
sbb
mov
adc
subl
mov
sbb
out
push
insb
in
icebp
out
push
imul
jo
testb
shl
jle
cmp
and
xchg
cmp
cmovs
popa
pop
add
push
mov
jp
push
leave
shrb
fxch
add
mov
inc
adc
shl
xchg
mov
jp
test
xchg
xchg
mov
std
loop
sub
cmp
dec
pop
xchg
xchg
push
incl
xchg
cmp
cmc
cmpsl
dec
add
pop
inc
xchg
mov
cmp
insb
push
mov
and
pop
mov
out
xor
and
and
cwtl
test
xor
or
rclb
pop
jb
cmp
scas
push
pop
pop
jl
incl
sub
inc
fucomp
ja
or
mov
shrb
in
cmp
std
mov
jmp
push
dec
sub
popl
roll
repz
adc
dec
inc
lret
or
imul
imul
push
pop
mov
add
movsl
imul
movsb
loop
sti
cmpsl
push
xchg
fnstcw
out
pop
je
ljmp
jno
sub
imul
out
movsl
nop
mov
xor
jne
push
add
ljmp
adc
jp
mov
adc
inc
ss
scas
xor
xchg
fsubr
jecxz
pop
cmp
stos
jae
shlb
push
aad
jns
mov
lret
fwait
pop
and
clc
sbb
cmpsl
sbb
add
and
shll
sbb
and
iret
jo
pop
sub
bound
add
add
daa
jmp
out
inc
sub
lock
ret
call
pop
mov
fsubs
push
lock
xlat
sub
pop
pop
push
out
lcall
sahf
es
addr16
inc
inc
or
arpl
jnp
pop
jb
xor
adc
xor
bound
lods
std
lds
cmp
scas
adc
ljmp
scas
sti
addr16
pop
out
and
push
push
fs
mov
sbb
cld
in
loop
pop
mov
xor
pushf
gs
push
ret
cmp
out
mov
dec
cmp
sbb
lock
cmpsb
pop
int
imul
scas
pop
loop
add
xchg
add
lock
movsl
push
or
stos
mov
sar
jmp
push
inc
outsb
push
fwait
arpl
push
jecxz
lcall
mov
lcall
inc
cltd
rorb
sbb
xor
push
mov
jo
add
mov
movsb
daa
sbb
add
bound
movsb
mov
mov
mov
mov
shlb
imul
test
je
repz
ds
les
out
mov
adc
mov
movsb
push
ficomps
xor
mov
xor
dec
sub
cmp
fisubrs
js
or
mov
in
jge
iret
outsl
sub
call
lock
add
push
dec
mov
pop
and
adc
adc
jnp
adc
or
mov
xchg
in
pop
cwtl
fldenv
mov
mov
push
pop
pop
push
decl
push
mov
mov
dec
xchg
pop
inc
cmp
lods
into
xor
es
sahf
or
out
add
movsl
dec
xchg
je
cs
test
mov
cmpsb
or
lods
adc
mov
xchg
xor
movb
les
cmp
ret
mov
cmc
xor
sarl
repz
sbb
mov
clc
ja
bound
fwait
sahf
adc
jmp
or
out
test
jo
out
into
leave
arpl
jecxz
pop
imul
pop
adc
sbb
negl
fmuls
in
and
mov
imul
push
or
or
inc
and
fdivs
sub
hlt
pop
out
out
pop
mov
mov
pop
inc
inc
sti
xchg
fisubrl
sbb
iret
add
call
out
adc
jo
or
pop
cwtl
jbe
andb
ja
jbe
in
and
mov
push
ja
ss
int3
in
popf
jecxz
push
cmp
out
or
cmp
or
add
fldl
xlat
and
xchg
sbb
pop
pop
adc
mov
or
aam
lret
lock
loop
incb
pop
mov
cltd
and
out
rcrl
out
pop
xor
push
mov
arpl
dec
xchg
fildll
cmp
xchg
in
adc
jno
inc
mov
in
pop
sbb
push
xor
dec
movsbl
rcrb
shr
mov
test
testb
in
pop
dec
jb
lods
cmp
cmpsl
pusha
sbb
mov
cmp
jns
mov
adc
dec
aaa
jb
test
sbb
xor
add
sbbb
or
and
dec
jmp
push
pop
fisubl
lcall
outsl
jns
and
inc
push
hlt
inc
enter
mov
out
lock
mov
shrb
jp
loopne
inc
inc
mov
or
lcall
jp
test
ficoml
cwtl
sbb
and
jge
jo
stc
mov
enter
sbb
jecxz
lcall
enter
push
gs
popa
popa
inc
jb
data16
jmp
lret
pushf
jle
jne
push
pop
and
rcrl
dec
lea
stos
adc
inc
mov
and
lret
es
je
dec
jge
adc
pop
fidivrl
stos
ror
fsubrs
xchg
push
fnstcw
or
inc
jecxz
and
cmp
jle
orl
out
loope
xchg
in
or
push
push
test
xor
test
cmp
inc
arpl
ret
xor
adc
sub
dec
sub
outsb
std
cld
xlat
clc
sub
fstps
xor
ss
in
mov
sub
push
add
or
loope
cmpsl
xchg
adc
inc
sbb
ret
sbb
xchg
xor
lea
pushf
pusha
push
jae
and
lods
into
jnp
in
jle
ret
data16
xor
lods
clc
dec
sbb
sub
cmc
pop
inc
sbb
idiv
ret
testb
in
loope
xchg
inc
stc
dec
loope
enter
sub
inc
mov
inc
in
fstpt
mov
xchg
xor
pop
enter
xchg
out
inc
sub
negb
add
or
and
insb
mov
int
inc
jl
insb
dec
mov
cmpsb
add
jo
mov
pushf
loopne
dec
and
sbb
cmc
push
jns
loop
add
pop
adc
and
movsb
pop
mov
out
jge
fsts
shl
sub
sbb
jl
test
xchg
aam
subb
shr
repz
into
aam
push
jne
mov
sbb
dec
cmp
or
push
cmp
mov
leave
clc
stc
push
jle
xchg
dec
xor
push
cmp
jl
push
rcll
leave
ret
in
xchg
nop
fdivp
dec
inc
adc
jmp
xchg
lods
test
sub
in
loopne
sbb
fidivrs
ficoms
out
cmp
and
inc
in
sbb
push
into
bound
mov
out
xor
unpckhps
test
les
inc
sub
popf
loop
cmc
js
inc
rorl
cli
fisubrs
es
jle
xor
sti
push
inc
fiadds
push
or
pop
xchg
pop
sub
jns
das
and
push
jmp
jl
xchg
ds
movsl
idivl
fidivs
jns
cld
cmp
outsb
mov
mov
sbb
push
out
pop
popa
jo
inc
dec
stc
cwtl
push
call
roll
adc
popf
adc
pushw
loope
pop
add
repz
push
mov
sub
sti
mov
inc
ds
add
dec
rcll
std
xor
adc
xlat
dec
and
dec
push
pop
aad
jne
jnp
repz
adc
xor
add
dec
pop
mov
in
push
lods
mov
push
cmpsl
mov
js
ljmp
sbb
jae
xchg
sub
sbb
mov
cmp
out
lock
push
repz
or
movsb
cmp
mov
das
xlat
out
fstpt
lcall
push
lret
dec
mov
inc
sub
pop
pop
popf
lea
xor
pop
jp
aam
ss
lods
dec
cmp
loope
lea
scas
push
jno
cs
mov
cwtl
addr16
sahf
std
sahf
andl
cmp
dec
dec
jne
outsl
in
outsb
adc
int3
pop
lret
jg
ds
pop
ja
in
add
dec
cltd
xchg
les
push
not
jmp
movsl
inc
inc
pop
scas
adc
test
adc
or
jo
das
dec
fdivrs
insl
outsb
xchg
leave
popf
mov
lods
stos
out
mov
jecxz
sbb
mov
mov
fbld
pop
sub
cmp
ret
cli
jp
cmp
xor
jg
jge
pop
mov
xor
xor
and
hlt
pop
into
repz
sbb
xchg
or
data16
notb
xchg
mov
aad
stos
scas
or
pop
jmp
mov
dec
xor
dec
jo
add
fldenv
pop
sarl
push
lds
aas
mov
push
and
arpl
repnz
inc
dec
jge
push
es
sbb
roll
dec
and
and
out
cmp
cmp
in
fsub
mov
into
cli
xchg
sub
insb
dec
clc
mov
push
hlt
inc
mov
fsubl
mov
xchg
fstpl
imul
repz
fsubrs
sbb
fidivl
mov
adcl
pop
int
cmpsb
sbb
sub
test
add
sub
mov
xlat
nop
leave
enter
mov
cli
aad
popl
inc
fidivs
ljmp
pop
repnz
pop
orl
lret
shll
out
pop
insl
outsl
and
pop
mov
and
insl
push
inc
cmpsl
jne
aas
in
cmp
mov
jg
inc
mov
jo
gs
test
test
outsb
mov
data16
jno
push
xor
mov
pop
and
rorb
jbe
daa
mov
add
cmp
jl
repz
hlt
adc
or
lcall
pop
vcmppd
mov
xchg
cwtl
sbbb
pop
arpl
lret
stos
and
jg
test
add
icebp
add
jmp
or
push
adcb
lds
es
add
xlat
xchg
aam
jmp
xor
addr16
fs
inc
xor
lock
cmp
repnz
fwait
dec
in
enter
jns
push
lods
xchg
aam
and
push
pushf
adc
das
stos
push
sbb
pop
jnp
aaa
pop
xor
mov
and
or
mov
xchg
mov
bound
xor
adc
add
pop
sbb
inc
sub
sbb
insl
int
pusha
pop
adc
xchg
push
push
push
xor
cmpsb
aaa
and
insb
xor
cmc
sub
dec
push
mov
mov
pop
in
adc
add
jmp
aaa
fisttpll
hlt
push
fwait
jbe
fisttpl
push
mov
lahf
lcall
or
push
push
add
sbb
das
pop
dec
stos
je
mov
movsl
cs
popf
mov
lods
and
mov
push
sub
mov
gs
subb
nop
ds
mov
loope
cwtl
jp
cmc
psllw
mov
or
addb
mov
add
cltd
push
fisubrs
movsb
push
jg
and
cmp
fimull
inc
pop
insb
adc
cmp
pop
int
xor
mov
mov
dec
sub
pop
pop
mov
sub
adc
sbb
out
mov
push
inc
push
xor
movlps
lret
and
add
popa
mov
je
cmc
sub
inc
jmp
rcll
movsl
in
or
repnz
mov
mov
inc
cmp
mov
push
and
fbld
sub
lds
add
sti
cmp
cmpsb
cltd
and
cld
jmp
sbb
outsb
pop
add
xchg
push
jbe
cwtl
lds
jge
and
sbb
cmpl
and
fs
cmp
cltd
cmpl
mov
mov
fcomps
lods
and
ljmp
or
lret
nop
in
shl
lds
in
inc
push
cmc
ds
enter
and
sarb
xor
fists
mov
repnz
add
add
cmpsl
out
aam
gs
cmp
bound
mov
add
push
cmp
mov
xlat
ret
mov
mov
cmp
jae
scas
ret
sub
pusha
sub
sub
mov
jno
ja
push
jae
lea
testb
mov
cmp
add
xchg
lds
sbb
inc
gs
mov
mov
xchg
jmp
push
jb
xor
dec
fldl
ret
and
mov
push
cmp
and
jg
lcall
pop
sbb
and
or
js
xchg
sub
dec
push
cmc
push
push
sub
insb
sbb
mov
fcoms
lcall
dec
stc
add
or
jle
sub
cmpsb
test
repz
lahf
jle
dec
addb
xchg
sbb
push
and
jne
adc
sbb
fs
mov
mov
std
adc
dec
sub
mov
sahf
jmp
out
mov
test
in
sbb
iret
inc
fcoml
mov
loop
jbe
bound
in
xchg
adc
jecxz
cwtl
out
pop
xor
push
adc
movsb
xor
xchg
mov
push
mov
repnz
lods
push
xor
cmpsl
xchg
dec
mov
sbbl
icebp
sub
push
xorl
ja
fs
push
rcl
jb
mov
sbb
add
arpl
adc
pop
cmp
mov
stos
xor
popa
push
orb
shr
sbb
cmp
or
dec
jb
inc
dec
mov
scas
mov
push
std
outsl
pop
push
mov
xor
call
dec
loopne
adc
add
or
icebp
je
insb
pop
ret
or
cmp
mov
xor
fs
lods
cmp
add
fistpll
lds
test
jae
inc
push
sub
dec
pop
sahf
loop
pop
mov
setnp
loopne
fs
scas
mov
cmpb
call
sub
aam
mov
or
jne
push
lret
add
pop
add
stc
sub
daa
sti
pop
int3
and
sahf
sbb
inc
mov
aaa
lods
xchg
test
cld
push
aam
or
jmp
mov
pop
inc
mov
gs
filds
iret
adc
daa
in
xchg
in
repnz
xlat
shrl
cmp
cld
subl
fisttps
add
rcrb
jmp
jg
jb
cmp
fwait
add
add
jne
jne
inc
lea
mov
movsl
add
hlt
cli
scas
test
push
push
es
jno
xchg
ds
jno
mov
or
ds
insb
and
cmp
loop
sahf
shll
pop
insb
lcall
icebp
into
enter
jecxz
cmp
in
jnp
sbb
inc
das
push
or
shll
mov
je
repz
xor
cs
out
mov
adc
push
sti
inc
mov
mov
or
and
xor
ljmp
jmp
int3
mov
pop
cs
ss
enter
mov
mov
pop
roll
or
test
jo
push
ret
xor
mov
fstpt
push
orl
xchg
insl
cmpsb
pop
xorl
mov
stos
jecxz
nop
sbb
jno
call
mov
xchg
test
xchg
and
nop
xchg
cld
stos
push
cwtl
mov
roll
lock
sub
adc
jo
dec
or
cmp
fcmovb
and
jns
mov
mov
js
sbb
in
out
and
out
imul
stos
int
mov
shlb
cwtl
mov
enter
in
aam
and
mov
scas
push
fdivl
or
andl
and
push
movsb
push
xor
out
add
aas
sbb
and
cmp
testl
loop
dec
test
addr16
push
jo
dec
mov
mov
dec
ret
xchg
bound
xchg
lods
lret
ror
mov
pop
into
loopne
sub
stc
sub
dec
and
lahf
test
mov
roll
add
in
fadds
inc
inc
mov
mov
mov
adc
lret
xchg
arpl
push
inc
cmp
lea
btc
push
repnz
jno
lods
in
dec
enter
dec
xchg
fcomp
shll
sbb
pushf
shll
xor
jno
lret
aaa
sub
cmp
call
mov
ljmp
add
mov
or
std
imul
adc
sti
mov
call
mov
rclb
xchg
loopne
stc
aas
sub
imul
popw
lret
movl
add
cmpb
shlb
pop
pop
loop
out
pop
or
pop
xorb
mov
arpl
dec
xor
pop
in
sub
sub
idivb
outsl
sub
inc
cs
iret
mov
sub
test
sbb
add
and
jl
outsl
pop
xlat
enter
cmc
dec
js
in
xchg
loop,pn
mov
sahf
lods
and
shll
lods
dec
cs
sbb
inc
sti
lret
stos
test
push
iret
cmc
enter
fs
leave
cli
ds
push
and
cmp
push
fdivr
pop
bnd
xlat
sub
aaa
xchg
sbb
icebp
push
jo
mov
fisttpl
sbb
loope
jecxz
xchg
bound
ficompl
cmpl
aam
mov
pop
adc
and
jb
sub
test
inc
jge
mov
movsl
dec
repnz
dec
mov
movsl
rcll
add
inc
add
hlt
dec
mov
mov
cmp
test
xor
push
ja
fs
push
sbbl
repz
or
add
sbb
in
jl
sub
xor
dec
cmp
data16
leave
vcvtsi2ssl
fs
jns
adc
sbb
mov
iret
sbb
nop
inc
cmp
rcl
inc
pop
mov
mov
fadd
bound
addr16
mov
pop
cmp
sub
cwtl
xor
pop
sub
sub
in
pop
pop
imul
and
cmpsl
mov
std
dec
ljmp
and
jp,pn
pushf
pushf
call
sbb
jo
xor
jnp
faddl
scas
aaa
notl
ljmp
into
and
jns
lock
or
jnp
mov
or
xchg
cmp
mov
ret
ret
pushf
mov
loopne
push
and
outsl
add
pushf
out
sbb
out
and
andb
cmp
mov
mov
xchg
std
adc
jl
sub
mov
pop
ja
jg
bound
or
shlb
jne
cmp
fsubr
scas
jae
sub
sub
stos
mov
movsb
and
jo
divl
out
jno
mov
or
in
lock
jg
xchg
mov
mov
jl
sti
bswap
daa
xor
outsb
lahf
jg
pop
push
or
je
sub
fisubrs
xchg
mov
and
dec
cmpb
popa
dec
cmp
mov
hlt
pushf
rcrb
push
in
lock
mov
or
mov
cmpsb
inc
mov
cmpsl
sbb
lock
imul
jmp
mov
xor
enter
in
aam
push
scas
pop
int
push
inc
into
hlt
movsl
inc
or
jns
xor
dec
adc
push
aaa
sub
mov
sub
push
dec
lret
insb
jmp
cmp
push
push
loope
outsb
adc
cmc
or
inc
jno
lods
pop
in
jo
jle
in
loope
xchg
cli
dec
push
test
cld
dec
mov
test
and
xchg
gs
inc
mov
cli
lea
jp
nop
rolb
out
inc
add
scas
mov
push
ret
movsl
jl
xchg
cmpsb
outsb
dec
cmpsb
pop
inc
xchg
int3
mov
mov
lcall
adcb
adc
dec
pop
les
xchg
in
out
mov
pop
mov
imul
pop
push
jmp
sbb
adc
je
lcall
out
out
mov
mov
gs
insl
es
adcb
jl
or
jg
out
imul
jle
out
pop
pushf
mov
out
inc
mov
and
out
mov
add
dec
dec
dec
pop
and
jecxz
scas
inc
push
call
jge
adc
shlb
jbe
push
std
pushf
aam
jge
leave
scas
or
xor
repnz
lods
bound
dec
enter
int3
negb
hlt
out
in
xchg
pop
jmp
test
or
jb
stos
jl
push
cmp
jbe
jbe
mov
xchg
jp
movsl
cld
call
pop
adc
out
or
mov
mov
in
pop
mov
inc
in
pop
mov
nop
pop
xor
pop
mov
lret
mov
or
pop
inc
xlat
and
and
sub
ja
cli
repz
aad
xchg
movsl
xchg
sarl
jg
sub
cld
add
or
mov
les
pxor
cltd
sbb
sbb
jns
jno
push
movsl
push
mov
mov
pop
ror
imull
push
jne
aaa
loop
inc
sub
jae
mov
movl
testb
mov
aad
mov
dec
mov
sub
dec
xor
ja
test
push
inc
mov
insl
mov
inc
dec
mov
xchg
push
push
fiaddl
inc
xor
xchg
mov
jo
add
pop
push
pop
sub
aam
sbb
pop
push
mulb
adc
aad
ud1
jg
push
mov
stos
insb
add
pop
mov
sub
sarl
test
mov
adc
xor
icebp
jne
aad
dec
cs
cmp
add
cli
scas
loope
cmp
sbbl
mov
or
adc
popf
jb
pop
lock
mov
push
jb
jmp
xor
int
repnz
xchg
adc
adc
inc
sahf
cli
inc
push
imul
insl
jbe
sti
sbb
xchg
jbe
cmp
pop
mov
sbb
mov
adc
fs
xor
imul
std
xchg
or
inc
inc
sbbl
jle
add
in
jmp
sbb
pop
or
outsl
adc
cmp
stos
fwait
data16
or
push
negl
and
pop
bound
mov
cmp
sub
pop
cmp
mov
mov
push
ss
add
cmpsl
cmp
jns
popa
lahf
hlt
pushf
push
xchg
pop
mov
adc
jl
and
in
jns
mov
push
pop
cmp
jmp
jge
sub
testb
fldl
clc
shrb
push
push
add
dec
cvttps2pi
xchg
outsb
cwtl
dec
xchg
hlt
mov
ljmp
div
mov
bswap
flds
push
sbb
call
sub
sbbb
fimuls
fcomp
jb
and
pop
dec
xor
cmpsl
enter
add
sahf
mov
outsb
jnp
aad
jae
aas
in
mov
das
sbb
enter
push
loop
repnz
jle
mov
push
ljmp
incb
adc
loop
lds
mov
jnp
dec
xchg
push
in
lods
int
iret
mov
loopne
les
cmp
nop
jbe
jl
fbstp
imul
sbb
mov
cwtl
mov
sub
sbb
sti
lcall
jns
out
or
lock
xor
mov
xor
mov
scas
xchg
mov
aas
lcall
jo
out
sub
inc
repz
xchg
lret
int
scas
ficoml
push
push
sbb
or
fwait
imul
cltd
imul
xchg
mov
call
loope
fstpt
xchg
mov
cmp
pop
pop
mov
xchg
lret
pop
lods
lahf
data16
lods
mov
sti
adc
jo
loope
gs
jae
pop
lods
lcall
push
aaa
int3
mov
testl
into
mov
jle
jnp
xchg
out
jle
sbb
adc
xchg
sub
outsl
inc
fld
xchg
cmp
fs
mov
call
sbb
dec
outsb
push
mov
shll
xor
aaa
mov
call
nop
mov
jl
fs
cmp
sbb
in
xchg
jp
dec
rorb
mov
jmp
cmp
adc
mov
aam
mov
mov
call
push
mov
imul
xchg
inc
pop
sub
push
or
sti
sahf
and
fistpl
and
or
out
imul
hlt
stos
imul
out
mov
je
inc
enter
pop
fistpll
int3
xor
and
push
ss
sar
stos
mov
test
xor
sub
test
cmp
mov
adc
jmp
pop
xor
inc
fistpll
jne
cltd
jnp
outsb
ds
mov
and
push
pusha
jne
adc
adc
aaa
mov
cmp
scas
loope
inc
mov
push
push
jbe
xor
xor
sbb
xchg
mov
jne
ret
sub
jg
jp
sbb
pop
xor
test
and
push
dec
je
pop
inc
scas
xor
stos
add
inc
call
mov
jg
sub
or
sti
subl
fnsave
add
rorb
jo
and
inc
dec
or
dec
cmc
outsb
cltd
ret
cs
mov
push
mov
addr16
aad
call
test
xor
adc
jno
jle
test
push
pop
adc
stos
push
add
fdivs
adc
pushf
test
lcall
mov
mov
call
sbb
iret
in
sar
xchg
insb
add
fisubl
sub
loope
mov
lret
in
push
dec
adc
iret
das
pusha
mov
mov
das
jnp
mov
icebp
mov
xchg
test
out
and
and
xor
sti
pop
int
test
xorb
sbb
ss
lods
scas
test
inc
rorl
jmp
fsubrp
sahf
sti
adc
mov
in
mov
repz
cmp
loop
xchg
inc
fsubs
and
movb
cmp
jmp
out
roll
cmp
cli
mov
imull
pop
les
mov
test
add
jmp
jp
aas
cmp
and
cmp
xor
jmp
xchg
ror
cmp
ret
pop
inc
dec
fwait
mov
jne
fcoml
cld
cmpl
jecxz
jnp
jmp
or
fwait
nop
scas
mov
pop
mov
aaa
push
xchg
pop
out
sbb
shlb
inc
nop
mov
fsub
lods
add
mov
lahf
fstl
sbb
and
sub
rcrb
je
lock
pop
or
jp
repz
jo
and
push
popf
je
jnp
mov
xchg
sub
mov
or
mov
je
cmp
rcr
jge
sbb
in
inc
sub
inc
jecxz
cmpsb
mov
xor
aad
dec
xchg
std
add
icebp
fcompl
inc
jge
push
pop
jmp
push
rcrb
ds
push
repnz
lcall
int3
sub
pop
mov
xchg
lods
rcrb
sub
push
stc
pop
fs
mov
add
sub
ret
lret
jo
xor
jb
outsl
mov
cltd
sbb
cmp
mov
add
movsl
stos
ds
dec
pop
ja
sbb
sbb
loop
mov
inc
inc
stos
pop
sti
jl
and
mulb
fbstp
in
mov
ljmp
jbe
dec
mov
test
sbb
shr
cwtl
test
aaa
shr
ret
lret
sbb
rorb
shr
testl
popf
stc
jle
ds
icebp
mov
sbb
lret
inc
mov
cmpsl
daa
mov
cmp
jae
arpl
mov
addl
mov
popa
mov
ja
in
mov
jns
mov
push
cmpsl
lods
movsl
and
sub
push
xor
cmpsb
push
sub
fcmovnu
call
shl
hlt
mov
sub
sbb
cmpsl
mov
cmp
aad
mov
shl
aas
inc
test
fstpl
sbb
and
outsl
cwtl
lods
cmp
mov
test
stos
sub
inc
or
rcr
and
and
leave
and
mov
mov
sub
lahf
cmpsl
test
imul
fs
xor
push
ljmp
cli
dec
push
sub
sbb
jle
push
jle
adc
test
xchg
dec
xchg
push
mov
sbb
stc
imul
pushf
popf
adc
mov
pop
pop
ja
ss
or
sbb
fwait
enter
push
push
scas
test
sbb
es
mov
out
push
jno
aam
hlt
sti
jge
and
nop
popa
xchg
mov
sbb
push
mov
push
in
movsb
in
mov
popf
out
lock
sub
xchg
lds
adc
xor
enter
pop
int3
lcall
mov
stc
hlt
lods
dec
repz
dec
packssdw
out
imul
out
orl
push
and
mov
adc
inc
push
fucom
pop
push
or
repnz
adc
mov
in
jbe
fstl
aas
add
cs
xor
inc
sub
adc
xchg
mov
push
sbb
bound
cs
and
ja
mov
add
addl
movsl
inc
xor
push
and
mov
pop
lods
call
push
xchg
es
hlt
mov
push
push
test
dec
mov
push
add
in
pop
pop
or
adc
insl
out
lcall
push
xchg
pushf
shrb
mov
int3
repnz
jmp
dec
mov
mov
xchg
jnp
lahf
stc
sub
mov
gs
orb
out
shl
dec
cmp
int
xor
test
pop
fildll
fcomps
and
mov
lock
jae
into
cmp
fs
xor
fsubl
xor
jne
andl
sub
xorl
lock
test
push
movsl
mov
enter
and
mov
xor
mov
addb
xchg
push
pop
adc
addl
insb
add
pop
stc
pop
repnz
jle
addr16
cli
popa
scas
or
or
idiv
dec
xchg
in
add
and
rcl
and
inc
inc
fistl
or
dec
bound
xlat
mov
subl
scas
rorb
inc
ret
adc
mov
lods
xchg
xor
push
cmc
mov
jne
inc
push
insl
cmp
aaa
inc
cmp
xor
pop
test
jnp
pop
xorl
scas
addr16
nop
sbb
rcrb
jge
cmp
fdivrl
dec
addr16
mov
fwait
add
xchg
leave
jg
jge
push
insb
leave
pop
movsl
fwait
inc
inc
iret
or
pop
sub
xor
lods
and
sub
flds
aad
stos
push
test
mov
push
insb
imul
and
mov
ret
and
jmp
movsl
mov
mov
xor
stos
push
sub
sub
add
stos
scas
lods
in
fwait
mov
push
mov
cmc
sbb
insl
pop
vsubpd
shll
cwtl
xor
fnsave
jl
fsubs
add
or
cmpsl
ja
pop
loope
push
adc
inc
jnp
mov
dec
jl
arpl
popf
mov
stos
mov
lds
fstpt
es
loopne
mov
fnstsw
push
jns
test
adc
es
imul
shlb
hlt
dec
dec
add
push
inc
jg
sbb
lret
in
adc
pop
das
and
mov
push
adc
inc
sub
jecxz
test
xor
in
stos
xor
push
in
ds
inc
pop
sbb
lea
jne
and
mov
dec
mov
insl
cmpsl
addr16
jmp
das
xchg
xor
popa
lcall
in
sub
sbb
repz
andb
popa
dec
sbbb
cmpsl
imul
mov
push
stos
mov
dec
pusha
lds
aam
sbb
scas
mov
push
cmp
rcl
movsb
inc
ljmp
das
pop
popa
fnclex
push
xor
ja
pop
jne
in
sbb
xorl
push
leave
stos
inc
nop
mov
dec
sti
leave
ret
mov
jge
mov
cs
lock
imul
xor
hlt
sbb
jo
ds
push
add
in
push
and
xor
rcrb
mov
shll
imul
jp
int3
mov
int3
xor
jnp
sub
inc
pop
jae
dec
and
repz
insl
clc
push
pop
bound
fmul
mov
orb
scas
sub
in
aam
imul
lcall
fwait
mov
stos
in
xchg
sbb
fsubrs
lcall
lods
sbb
mov
stos
pop
fsts
adc
enter
ret
add
inc
xchg
sub
in
movnti
dec
push
hlt
sbb
aaa
mov
testl
mov
addr16
jg
cmp
leave
pop
hlt
int3
mov
xchg
mov
lea
sub
xlat
mov
fwait
adc
idivl
mov
or
mov
adc
jne
loopne
nop
rol
push
je
jmp
mov
movsb
inc
inc
out
mov
push
sbb
adc
cmpsl
mov
adc
or
cmpsb
xchg
lock
cltd
cltd
mov
xchg
hlt
adcl
push
pop
pop
or
and
call
xchg
stos
arpl
lret
inc
jmp
xlat
sbb
les
push
dec
aas
ja
jnp
adc
cltd
loop
and
xchg
sti
mov
xchg
push
jmp
jmp
xor
adc
inc
adc
das
shrl
in
push
fsubrs
sbb
ss
data16
push
and
pop
add
push
sbb
sub
js
xchg
stos
sbb
push
add
jl
nop
fiadds
xchg
pop
int3
mov
mov
jle
push
sub
jae
cwtl
out
iret
jnp
cs
jp
movb
cmp
add
mov
stc
adcb
insb
clc
sbb
gs
xor
pop
adc
jecxz
aad
arpl
jp
aad
pop
sbb
testl
ret
cs
test
lcall
xor
sbb
pop
push
jg
into
adc
mov
mov
mov
mov
int3
dec
nop
mov
sbb
add
mov
cmc
jb
jb
scas
mov
cmpsb
add
cmp
mov
adc
xchg
xchg
cmp
jle
mov
mov
push
dec
jl
xor
clc
add
xor
xchg
fdivs
loop,pn
jg
ljmp
jecxz
xchg
arpl
jmp
test
ds
dec
andl
sub
xchg
cmpsb
lods
fisubl
rcrb
out
and
xchg
and
mov
dec
incb
mov
push
pop
das
and
add
and
sbb
mov
rorl
dec
cmp
jecxz
push
sti
mov
les
push
xor
xorl
leave
inc
mov
decb
mov
les
call
xchg
pop
incl
xchg
dec
add
cld
in
inc
gs
lret
mov
mov
cwtl
aad
adc
cmp
fwait
imul
rcrb
or
rclb
jbe
dec
cmp
stos
arpl
ss
inc
cwtl
test
dec
stos
pop
and
ss
mov
xchg
mov
fwait
cli
dec
mov
xchg
rcll
jecxz
mov
cmp
jp
andb
addb
lret
inc
mov
pop
mov
adc
insl
pop
js
jg
mov
push
repnz
jmp
cmp
call
test
push
xchg
lea
pop
pop
inc
inc
inc
fsubs
sbbb
fsts
lods
sbb
pop
lock
sarl
or
add
mov
loop
or
or
hlt
shrl
jnp
inc
call
push
xor
cltd
and
bound
and
popf
push
outsb
push
and
daa
dec
sarl
cs
pop
pop
repnz
xor
mov
push
ror
js
cli
les
addr16
fidivs
nop
aas
inc
outsb
jns
xchg
and
and
adc
test
pop
scas
cwtl
shlb
pop
pusha
dec
stos
add
and
pop
out
rcll
push
push
ret
cmp
in
xor
lret
shr
frndint
aaa
jne
jg
psubb
mov
roll
push
cmpsl
and
jge
stos
test
or
add
add
insl
mov
lcall
push
out
lds
cmp
push
in
jbe
insb
test
enter
dec
es
or
pop
xor
movsb
cmp
hlt
cltd
push
pop
pop
movsb
pop
ret
loop
iret
and
pusha
andl
sbb
nop
xchg
cmp
dec
inc
mov
jno
fwait
mov
clc
test
les
movsl
push
cmpsl
inc
lret
push
jp
outsl
dec
pop
sub
pop
into
rorb
cmp
or
out
aam
dec
or
mov
and
adc
or
mov
and
dec
xchg
xchg
cmpsb
lahf
jb
or
aas
pop
jae
iret
cmp
int3
jns
mov
enter
stos
dec
data16
es
mov
popl
insl
mov
adc
outsb
enter
or
mov
insl
sbb
and
inc
and
test
lahf
addr16
xor
pop
sub
jne
pusha
adc
fcoml
push
xor
mov
pop
sub
rorb
aam
outsl
adc
cmp
lods
mov
push
mov
fistpl
pop
shlb
test
pop
movl
cmp
dec
push
arpl
imul
mov
cmc
mov
subl
loope
or
arpl
sub
or
mov
jnp
push
cmp
psubusw
aam
pop
cmc
ret
daa
xlat
iret
and
sub
int
lods
orl
mov
shrl
ret
enter
fcmovnu
mov
and
aam
nop
mov
xlat
push
xor
in
ror
jp
pusha
adc
jl
fwait
std
mov
add
imul
and
adcb
test
pushf
mov
mov
std
jp
push
in
out
test
mov
xor
cli
shlb
sarl
sub
xor
sub
push
or
or
pusha
add
ja
and
inc
insl
sarb
dec
arpl
sti
push
push
xchg
mov
or
sahf
imul
clc
mov
sbb
in
cmp
cmp
out
sbb
jl
and
inc
xlat
pop
mov
adc
pop
lcall
ret
adc
xor
pop
and
cli
scas
inc
gs
or
icebp
leave
inc
jmp
jg
clc
insb
push
jnp
and
stc
cwtl
xor
aaa
les
adc
cmp
mov
xchg
les
pop
fwait
cs
inc
rclb
adc
mov
fsts
cmp
push
and
pop
push
cmpsb
jge
mov
cli
cmpb
and
sahf
in
inc
adc
clc
xchg
xor
mov
adc
cmpsb
stos
loope
pop
nop
jb
pop
leave
cmp
mov
insb
fmull
lods
bound
pop
gs
jg
adc
movsl
mov
rcll
je
fidivrl
jns
out
mov
push
xlat
xchg
aas
sbb
aad
mov
jbe
adc
sub
lret
jp
xchg
test
addr16
lret
sub
pop
add
shl
out
mov
push
lret
pop
xor
nop
movsl
jae
or
jb
push
outsb
mov
inc
decl
in
ret
mov
divb
int
pushf
call
jecxz
dec
sub
sahf
subl
jg
push
movsb
adc
sbb
mov
push
data16
xchg
mov
add
gs
insb
xchg
and
jno
adc
das
popf
mov
xrelease
stc
sbb
popa
stos
out
jbe
mov
xor
mov
xor
jbe
cmp
lods
inc
bound
jp
in
enter
mov
add
inc
pop
inc
sbb
mov
jnp
mov
scas
mov
je
clc
xchg
movsl
add
adc
mov
dec
dec
mov
popa
ds
xchg
andb
fldt
jb
outsl
jb
shl
in
in
push
adcl
test
jmp
mov
fistpl
pop
sbb
cltd
or
call
in
inc
repnz
sub
mov
in
lds
cmp
push
jns
cmpsb
and
clc
imul
push
adc
outsl
sbb
not
jmp
lcall
sub
rcr
and
sub
inc
out
jmp
and
add
out
or
push
xlat
xor
pop
test
jb
and
push
adc
cmp
xorb
cmpsl
scas
jae
icebp
xor
and
push
lret
aaa
xor
out
pusha
repnz
push
xor
andl
jne
das
cmp
mov
add
dec
adc
xchg
repz
sub
sbb
mov
ss
lahf
lock
scas
jge
jb
dec
pop
adc
add
dec
rcrb
minss
pop
sbb
scas
fnstenv
sub
dec
jmp
mov
xchg
fs
fidivs
lahf
sub
xlat
adc
lcall
mov
mov
mov
push
pop
adc
into
lea
pop
sub
cmpsl
push
repz
add
call
adc
es
enter
jg
and
ret
or
xchg
xor
push
sub
repnz
fsubrp
loope
insb
or
inc
or
xchg
icebp
push
int3
dec
enter
mov
sub
in
xor
cmp
aaa
scas
push
aas
fstps
repz
add
dec
ljmp
or
rclb
int3
fildll
mov
cmp
lock
and
inc
dec
jb
push
mov
loopne
and
cmp
jns
repz
repz
sub
loop
or
insl
lods
popf
mov
je
mov
fsubrl
gs
mov
dec
orb
into
lcall
mov
xor
jle
add
mov
out
cmp
adc
inc
mov
inc
fxtract
cmpsb
dec
popa
repnz
fcoms
xchg
lcall
cmp
mov
test
dec
mov
or
push
ret
cmp
pop
dec
xchg
sub
outsl
pop
xlat
xchg
outsb
mov
rorb
enter
fisubrl
ss
and
sub
sbb
icebp
push
je
pop
out
jo
outsl
daa
add
jg
stos
or
ret
cmp
cmp
mov
jne
loope
pop
into
push
pop
and
adc
add
push
stc
sbb
ljmp
shr
pop
iret
sbb
fsubp
addr16
stos
inc
or
shrb
dec
test
and
scas
push
das
push
mov
outsl
or
shll
ret
ror
js
ret
dec
cmp
outsb
mov
pop
icebp
vpaddd
outsb
imul
xchg
xchg
ror
cmp
shll
dec
or
inc
pop
addl
cmpb
stc
cmpsl
fstpt
fwait
cs
cmpsl
adc
insl
sbb
mov
mov
or
loop
shll
jle
jecxz
loop
rcrl
imul
jnp
loopne
dec
rcrl
push
xor
push
mov
stos
sbb
push
sub
scas
in
inc
daa
jnp
add
and
push
insb
out
in
dec
dec
jmp
add
or
or
pop
sbb
push
fisubrl
les
push
push
cmp
and
mov
out
push
idivl
cmpsb
lcall
cmp
mov
popa
lcall
jbe
gs
jne
outsb
sub
push
gs
adc
rclb
iret
push
jecxz
aas
adc
mov
leave
sbb
pop
pusha
mull
mov
fisttps
inc
mov
xchg
adc
sbb
test
das
and
cmp
lds
cmp
js
test
mov
add
cmp
pop
cmpsb
mov
jns
test
sbb
mov
clc
not
xchg
fiadds
sbb
out
fbstp
les
scas
popa
adc
fwait
mov
inc
sub
pushf
mov
cmpsl
data16
dec
adc
cmpsl
outsb
pop
push
push
insl
sub
cmp
out
hlt
js
push
test
xor
cli
mov
jmp
nop
pusha
fs
movsl
jae
dec
fs
in
testb
inc
and
add
aas
test
xchg
or
dec
push
mov
aas
data16
cmp
test
shr
cmpsb
dec
jecxz
js
inc
mov
sbb
sub
cmp
movsl
jae
or
jae
mov
jns
or
rolb
xor
mov
adc
fadds
lea
add
clc
fs
shll
pop
rorl
aad
mov
and
int3
fldcw
outsl
cltd
add
insb
je
loop
push
in
leave
jge
sbb
lock
aas
flds
xchg
mov
imul
xchg
mov
jecxz
push
je
mov
sahf
cmp
push
idiv
sbb
dec
into
insb
ljmp
notl
in
mov
aad
pop
xchg
pop
inc
lods
cmp
mov
loop
dec
mov
add
inc
mov
scas
test
hlt
jno
and
mov
jae
mov
inc
les
mov
jecxz
xchg
push
cs
sbbl
stos
fadds
or
and
push
mov
das
out
mov
push
in
ficompl
adc
int3
inc
jle
lret
cmpsl
mov
sbb
sub
dec
fbstp
orl
mov
std
dec
dec
out
pop
jns
xor
addb
push
fstpl
and
bound
and
mov
or
or
repnz
pop
and
mov
xor
sub
push
mov
in
fsubrp
call
fisttpll
inc
adc
push
negl
and
insb
add
or
outsl
andl
repz
push
xor
sbb
movsb
or
push
adc
mov
int
ds
stc
mov
es
test
sub
inc
rcll
push
outsl
mov
xchg
out
pusha
dec
sub
sub
popf
push
ja
sub
mov
mov
add
sub
push
push
mov
jmp
fwait
test
or
cmpsl
idivb
pop
dec
jb
xchg
mov
hlt
test
addr16
movsb
into
leave
push
mov
xchg
imul
pusha
fidivrs
mov
xchg
mov
jno
lods
jp
lahf
xchg
and
cmc
testb
add
pusha
sbb
mov
xchg
xor
push
dec
sbb
scas
pop
xchg
mov
xchg
inc
and
xor
add
ja
loopne
scas
test
sti
mov
cmp
dec
cmp
ljmp
dec
enter
out
fcmovnb
repnz
mov
clc
je
and
xchg
mov
sar
mov
push
andl
jno
xor
testl
ljmp
in
mov
scas
xchg
stos
jg
mov
fisttps
pusha
adc
in
xchg
and
icebp
mov
inc
mov
dec
pop
mov
push
fcmovnu
lods
sub
popf
cmpl
pop
push
or
fsubrs
pop
aaa
jno
lds
and
cmpsw
dec
jle
inc
inc
cmp
fisttps
jo
adc
in
testl
popa
ljmp
jno
popf
sbb
or
loope
aaa
push
inc
jmp
cwtl
das
or
push
mov
adc
nop
mov
pop
mov
adc
mov
shlb
les
push
push
shl
sub
push
clc
or
popa
repnz
je
dec
jnp
je
nop
icebp
fidivl
pop
dec
popf
scas
icebp
dec
mov
xor
adc
fisttps
push
pop
dec
aas
loop
mov
stos
inc
int
jnp
jb
std
pop
imul
cmp
xor
cmp
insl
out
jp
sbb
adc
imul
fwait
mov
out
xor
sub
pop
or
push
mov
hlt
stos
shlb
mov
dec
mov
stc
shlb
cltd
xor
mov
dec
subb
mov
aas
jae
sbbb
loopne
or
int3
enter
jg
dec
or
hlt
jne
rcrb
xor
mov
and
pop
sub
inc
clc
mov
cmp
push
mov
cmp
inc
outsb
adc
test
pop
inc
mov
cmpsb
sbb
jecxz
or
movsl
shll
inc
dec
push
jae
lods
jbe
mov
mov
jge
mov
mov
jb
inc
into
mov
jne
mov
repz
lds
and
rolb
out
cmpsb
andl
imul
js
mov
outsb
push
mov
and
or
fimull
fcoms
or
js
stos
mov
and
notl
loopne
sub
pop
nop
push
sti
div
xchg
mov
pop
dec
mov
xchg
push
mov
addr16
mov
inc
jns
jg
and
out
mov
lods
or
lret
jp
cs
dec
ja
jle
push
and
das
sbb
inc
or
jnp
mov
loope
cmpsb
jle
add
std
ret
cltd
mov
loop
xor
add
dec
sar
arpl
push
test
pop
xor
mov
push
mov
adc
jno
rcrb
jns
sub
cld
je
repz
or
push
adc
pushf
dec
xchg
sbb
enter
stc
mov
popa
push
adc
jnp
inc
movsl
mov
xchg
jno
in
sub
push
xor
fcmovne
orb
rcll
andl
imul
outsb
repz
add
xor
scas
mov
data16
cmp
add
jns
jl
lahf
dec
sub
mov
clc
pop
fucomp
xor
iret
mov
xlat
or
jbe
sub
ja
mov
es
push
mov
jae
mov
movsl
shll
lods
adc
push
rorl
mov
jae
push
pop
ficoms
mov
test
outsb
jecxz
test
nop
sbb
sub
fldl
movl
fsubp
arpl
cmp
nop
adc
cltd
or
xchg
xchg
int3
xchg
loopne
add
push
stc
aas
inc
mov
mov
addr16
xchg
xchg
int3
mov
pop
insb
lods
rclw
cmp
fsubl
repnz
add
dec
scas
or
dec
orl
sbb
les
xchg
and
jl
bound
scas
out
cltd
loope
lods
push
xchg
lods
mov
lds
xor
out
mov
ss
add
inc
jge
jns
xor
fcmovne
in
aad
xchg
cmc
lret
mov
sub
add
stos
jle
movsb
push
dec
pusha
xor
xor
scas
mov
and
adc
add
gs
cs
stos
shlb
lahf
lds
addr16
sub
dec
push
inc
lods
lcall
inc
add
call
mov
int3
sarb
sti
cwtl
sti
cltd
addr16
mov
into
cmpl
subb
sahf
jne
pop
divb
fistl
mov
push
lods
inc
xor
lods
adc
sbb
push
mov
inc
cmp
fistps
mov
enter
and
lret
push
dec
push
lahf
adc
test
jle
mov
lret
ds
mov
aad
xor
mov
mov
mov
xor
test
incb
inc
lods
fisttps
in
mov
pop
inc
movsl
add
cmp
out
popa
popf
sub
push
ljmp
jo
xchg
out
mov
int3
test
xor
insb
jns
and
ss
jp
int3
xchg
xchg
popa
cmpsb
and
loopne
popf
lahf
sub
stc
repnz
mov
push
sub
inc
outsl
xchg
and
orb
inc
loope
hlt
mov
xchg
lret
xchg
repz
iret
or
sbb
into
xchg
insl
das
lcall
testb
gs
xchg
cmp
fsts
inc
add
sub
cs
mov
jae
shlb
aad
icebp
sarl
cmp
xor
stos
or
or
xor
mov
loope
add
das
dec
xchg
and
ss
or
leave
ljmp
jnp
and
rorb
xlat
dec
fucom
pop
push
insl
addl
add
xchg
sub
xchg
xlat
hlt
xor
jg
cmp
xor
pop
sbbb
add
lds
ljmp
inc
imul
lods
xor
or
int3
push
ffreep
fiaddl
mov
imul
out
mov
aas
cs
mov
sbb
les
fcmovnb
cmpsl
push
push
push
adc
idiv
mov
imul
add
inc
pushf
jg
add
and
fs
pop
xchg
or
jle
in
xor
add
and
sub
xchg
dec
pop
mov
popf
push
cmp
mov
bound
cmp
mov
aaa
mov
pop
dec
fwait
jp
cmp
xchg
repz
cmp
sub
add
shrb
mov
imul
mov
outsb
or
cmpl
out
idivb
cld
imul
cmp
mov
xchg
hlt
movsb
inc
lea
push
dec
cs
je
jne
popf
sar
adc
push
mov
pop
adc
repnz
jb
xchg
add
testb
jmp
cli
or
or
sub
pop
dec
inc
sbb
addr16
imulb
das
stc
call
push
int
sub
mov
mov
inc
mov
xor
push
xchg
or
loop
mov
in
mov
inc
es
les
push
cmc
scas
xor
push
stos
jg
fisttpll
daa
and
lea
cmp
test
enter
add
push
sbb
sbb
stos
test
push
in
movsl
push
dec
lds
push
aas
push
iret
js
js
mov
pop
pop
xchg
sbb
pusha
sbb
test
repz
outsl
insl
lahf
popa
insb
jge
dec
pop
fwait
test
data16
push
fadd
cwtl
add
gs
xlat
mov
fbld
out
sub
push
lea
lcall
movsl
inc
or
xchg
xchg
fsubs
cmp
outsl
fimull
cs
fisubl
sub
pop
mov
or
sub
mov
fsubrs
add
divb
test
fisttpll
cli
jbe
or
jle
rcl
test
push
fstpt
lods
xor
cmp
out
inc
jne
shrl
arpl
add
aas
push
push
push
xlat
ret
jbe
xchg
adc
add
cltd
jmp
int3
lds
loope
mov
jg
loop
subb
adc
xchg
mov
sbbb
mov
mov
shl
mov
xchg
andb
dec
bound
pop
insl
negl
test
rol
sub
cmpsl
mov
pop
scas
or
pop
in
xchg
mov
and
add
add
and
mov
in
psraw
xchg
mov
xorl
fsubrs
mov
jp
mov
mov
xchg
adc
mov
shl
jge
outsl
mov
mov
daa
cwtl
add
leave
adc
fisubrl
ret
jbe
inc
orl
inc
xor
dec
orl
int3
push
push
int
xchg
fsubs
jmp
xacquire
test
in
ret
addb
test
ja
pop
dec
test
and
pop
adc
cs
popa
test
movsl
aam
push
mov
pop
scas
iret
into
in
scas
fiadds
or
sbb
scas
adc
jb
lret
mov
test
jg
push
pop
cmp
hlt
or
sub
cld
fisubs
push
adc
fimull
or
clc
mov
lahf
add
push
sti
addr16
push
ret
mov
loope
pop
shrb
mov
mov
iret
inc
mov
sar
loope
push
push
imull
cmp
inc
cld
icebp
push
aas
fidivrl
add
jns
cld
aaa
stos
xor
sbb
mov
add
mov
or
fsts
adc
adcb
insl
cmp
pop
imul
scas
push
imul
push
cmc
orl
cmp
add
stos
iret
mov
dec
sub
imul
lock
mov
push
cmpsb
loopne
shlb
pop
outsl
stc
cmp
enter
js
ss
dec
xchg
adc
lds
jne
hlt
ja
test
iret
popa
daa
sub
cmc
push
mov
fists
dec
xor
mov
outsb
rcll
orl
inc
sbb
ja
lcall
loope
mov
lcall
mov
gs
loop
jl
pop
sub
push
aam
insb
aas
mov
clc
xor
lods
or
dec
popf
dec
xor
mov
rcrl
insb
add
movsb
fwait
mov
xchg
mov
xor
mov
mov
push
stos
add
jno
cmp
push
lret
adc
adc
mov
mov
push
lcall
test
cld
fldl
mov
fcompl
ljmp
or
ret
push
test
inc
mov
mov
xorb
icebp
loop
sub
leave
xor
pop
mov
in
pop
daa
clc
or
loop
push
jno
scas
adc
push
jge
imul
jo
sub
pop
aas
sub
add
inc
ljmp
insb
push
cltd
or
hlt
add
pop
cmp
fcmovbe
inc
movsb
mov
jbe
push
aam
adc
push
addl
sbb
dec
imul
dec
aaa
lret
insb
ficoms
push
les
mov
lahf
push
cmpsb
idivb
inc
jmp
fisubs
dec
jbe
clc
out
sarl
mov
add
xchg
xor
out
rcll
mov
sbb
xor
cmp
dec
rcl
sbb
adc
mov
mov
push
add
xchg
mov
mov
ret
aam
mov
rolb
inc
imul
das
push
out
out
outsb
inc
in
mov
mov
int
pop
adc
fildll
or
add
sbb
int
pop
and
arpl
punpckldq
lahf
mov
cs
mov
fs
xlat
and
aaa
push
dec
mov
xlat
add
mov
mov
dec
lcall
out
cmp
repnz
jmp
mov
outsl
cli
lods
mov
dec
cmpb
loop
bound
mov
int3
jp
cs
xor
or
mov
xchg
or
mov
mov
adc
int3
out
pop
ja
cmp
mov
and
xchg
pop
sahf
fst
sub
sbb
fsubl
mov
jmp
loopne
mov
jg
inc
adc
jl
icebp
xorb
repnz
cmp
fs
cmp
loopne
pop
lock
outsl
rcll
int3
jge
xchg
bound
aaa
das
inc
rcll
push
test
ja
seto
cmp
mov
adc
dec
inc
pop
mov
cmp
mov
add
xchg
cmp
inc
add
in
xor
mov
dec
cmpsl
aaa
scas
je
and
pop
bound
xor
dec
pop
int
test
popf
mov
mov
mov
sbb
push
fcmovu
jge
sti
fistpl
xor
sbb
insb
push
lahf
js
cmpsl
lods
lahf
jecxz
test
xchg
dec
cwtl
fxch
pop
out
add
sbb
mov
popa
dec
sbb
or
push
mov
sbb
push
lods
mov
sub
xor
ret
ja
cmp
mov
in
cli
push
leavew
mov
not
imul
and
inc
cmp
scas
and
xchg
mov
ss
jo
xor
jno
clc
xchg
sbb
aaa
and
icebp
lret
mov
enter
loope
ret
jge
bound
dec
mov
sahf
loopne
dec
pop
les
add
into
pop
loopne
loope
pusha
mov
dec
out
sub
fwait
pop
sbb
filds
orb
mov
xchg
jle
dec
mov
ret
jle
pusha
xor
in
sbb
lea
imul
jmp
or
leave
outsl
adc
lret
imul
sbb
popa
lret
idivb
lcall
adc
jbe
push
mov
add
test
loope
mov
mov
sub
arpl
and
fcompl
addr16
sar
add
popf
into
mov
fs
sbb
lock
inc
dec
jmp
mov
xchg
or
add
iret
push
push
and
cmpsb
xor
fldenv
push
ror
push
mov
lock
movsl
add
push
jnp
inc
add
je
enter
loope
rclb
mov
or
iret
jbe
fldl
pop
sub
pop
stos
pop
push
fs
jp
mov
mov
movsb
push
shrb
in
and
leave
in
sbb
clc
sub
sti
les
and
test
mov
test
sbb
enter
lea
outsl
adc
movsl
sub
and
jae
mov
iret
enter
pop
ds
or
mov
or
mov
hlt
shl
daa
pop
mull
and
jle
dec
inc
aad
jmp
cmc
test
fcoml
xchg
pop
roll
aaa
cli
cmc
mov
xlat
adc
jp
enter
test
arpl
in
jecxz
fwait
jp
add
dec
cmp
outsb
pop
xor
or
xor
insl
stos
push
pushf
daa
push
xlat
mov
test
mov
clc
idivl
xlat
jp
fdivrs
sti
sub
or
notb
insw
movsb
xor
inc
xchg
inc
or
sub
cli
out
xchg
or
or
lock
xchg
jmp
hlt
and
sbb
sahf
ja
and
pop
movl
pusha
ljmp
cltd
test
mov
push
lahf
out
mov
scas
fnsave
addl
adc
js
and
xlat
dec
enter
out
and
je
imul
xchg
enter
dec
gs
out
pop
out
insb
shr
sub
jnp
repnz
ret
cld
shll
mov
sbb
inc
ja
jecxz
pusha
jmp
mov
lea
lods
inc
fdivl
adc
dec
stc
lcall
insl
pop
push
sbb
ljmp
lret
inc
cwtl
sbbl
icebp
leave
xchg
gs
add
dec
ljmp
loopne
pop
dec
rcrb
xlat
outsb
imul
inc
pusha
mov
dec
fnsave
cmpsb
cmp
call
stos
xchg
xor
aas
push
xchg
and
lret
cmpsb
xor
out
pushf
fildll
xchg
jmp
insb
or
jecxz
inc
scas
or
std
sub
cmp
xchg
cmp
mov
int3
xor
in
mov
ss
jmp
sub
stos
aam
incb
jmp
dec
inc
stc
mov
pop
fidivrl
pop
pop
sti
leave
sbb
mov
or
sarb
jne
jle
sahf
negl
inc
adc
and
rorb
in
movsb
int3
hlt
and
mov
add
in
mov
jmp
cs
nop
fsub
pop
into
add
out
std
in
out
aas
mov
add
cwtl
cld
sub
mov
jg
loop
sbb
inc
in
or
daa
or
inc
push
sub
es
cmp
dec
movsb
addl
hlt
test
stos
sbb
popa
mov
mov
ret
or
pop
lock
mov
addr16
idivl
push
ds
repz
mov
icebp
out
sub
outsl
xchg
push
sub
sub
lock
or
aam
cli
cmpsb
sahf
mov
lcall
stos
pop
bound
xor
scas
mov
in
ja
out
stos
incb
lods
fmull
push
adc
cmp
in
xchg
adc
dec
sar
sbb
mov
push
stos
outsl
test
inc
in
or
popf
aas
icebp
jns
mov
js
xchg
push
pop
sub
inc
fldcw
out
xchg
jo
loopne
call
inc
mov
in
repz
mov
clc
pushl
xchg
roll
pop
icebp
xchg
addr16
mov
cltd
inc
adc
in
xlat
fsubrs
and
jo
ret
imul
xchg
movsb
adc
mov
mov
cld
insl
iret
stos
lock
add
mov
rclb
and
lret
push
dec
xchg
inc
fcomi
sub
mov
fld
mov
adc
sbb
push
mov
push
cmp
mov
dec
xor
pop
or
testb
push
bswap
mov
cmc
xor
push
int
mov
push
pop
mov
out
sbb
les
imul
das
add
lea
push
push
arpl
pop
adc
xor
sub
cmc
pause
out
mov
xchg
jns
add
inc
xchg
fs
cmp
shl
jb
das
and
iret
ljmp
sub
mov
fcomip
adc
outsb
mov
or
fsubrs
cmp
cltd
push
cltd
mov
or
or
and
jg
cwtl
aad
pusha
cltd
mov
dec
ljmp
jns
push
sub
push
mov
xchg
loopne
int3
sub
imul
add
xchg
or
xor
test
testb
mov
mov
mov
out
xchg
jp
xchg
mov
inc
hlt
mov
adc
push
cmpsl
adc
mov
test
and
nop
shlb
push
fdivrs
insl
jge
xor
stos
jno
push
gs
mov
call
fstpt
lret
subb
hlt
lcall
and
jecxz
inc
mov
in
shll
push
aam
js
ds
jge
xchg
or
sub
std
ja
cwtl
cli
ret
les
ret
mov
push
loop
sub
pusha
nop
xchg
mov
shrl
inc
icebp
ss
fldcw
cmp
and
bound
fcoms
ret
xchg
cmovbe
pop
or
jnp
lcall
jbe
mov
lahf
pop
jg
xor
nop
jne
mov
jno
adc
imul
lods
sub
arpl
mov
ret
into
adc
stc
aad
cmp
test
mov
shlb
sbb
inc
je
arpl
jge
fadds
test
into
into
mov
in
xchg
out
ss
inc
pop
jns
dec
cmpsl
fcomip
sbb
mov
or
not
imul
sbb
loope
roll
or
popf
loope
jle
sbb
add
negb
cmc
and
pop
xchg
adc
repnz
in
dec
filds
dec
inc
hlt
iret
pop
cmp
lock
arpl
jg
jge
cmp
pop
xchg
push
and
xor
arpl
inc
and
aaa
icebp
pop
inc
mov
ret
fisubrs
xor
stos
push
movsl
mov
fcomps
jo
xchg
push
cwtl
fld
jmp
sbb
outsb
arpl
mov
or
and
cmp
sahf
pop
push
sub
sbb
mov
arpl
lcall
insl
out
aam
arpl
ficoms
and
test
outsl
jle
sub
sub
mov
shrl
in
inc
add
pop
add
outsb
adc
popaw
or
mov
pop
push
pop
call
mov
jbe
stos
clc
test
sahf
mov
dec
jmp
or
inc
call
fs
aas
cmp
imul
icebp
loopne
mov
pop
jbe
adc
repz
mov
pop
xchg
aam
out
pop
divl
cmp
ss
test
xor
inc
pop
inc
and
pop
test
cli
push
sub
lods
jb
mov
adc
push
mov
jb
mov
add
lcallw
std
push
cltd
pop
mov
pop
pop
mull
divb
aaa
out
int
dec
arpl
jb
std
in
push
out
push
repnz
mov
rolb
pop
in
adc
mov
lret
jecxz
adc
and
xchg
fdivrp
int
inc
pop
or
cltd
xchg
adc
stos
jnp
insl
mov
mov
and
out
push
push
lods
hlt
lods
das
aaa
test
lahf
push
out
cmpsb
outsb
push
inc
dec
and
sub
pushaw
xchg
nop
movsl
jne
jecxz
mov
inc
jbe
mov
add
xchg
pop
mov
add
aaa
lcall
xchg
outsb
mov
lds
div
cmp
and
imul
inc
jge
mov
push
push
inc
mov
jb
ljmp
push
test
adc
setbe
out
and
repnz
in
divl
pusha
inc
adc
test
mov
mov
jmp
add
sbb
inc
or
repz
pushf
fs
fs
mov
add
inc
call
jge
sub
sarl
jp
lea
test
xor
ret
jl
sbb
imul
push
mov
cld
stc
adc
neg
pop
xchg
xlat
std
sar
les
inc
pop
mov
jae
jl
fidivrl
dec
pop
ja
enter
test
popa
cmp
or
adc
sbb
mov
sub
mov
sub
xchg
pushf
pop
rorl
xorb
jno
cmp
aad
lea
adc
push
jmp
pop
int3
sub
push
mov
pop
inc
pop
pop
flds
mov
testb
push
sub
or
in
mov
mov
sub
xchg
push
std
pop
pop
movsl
push
lahf
xor
sti
xor
aaa
push
dec
mov
ffreep
push
fstpt
mul
or
mov
lahf
jne
adc
stos
adc
out
fcoml
mov
push
dec
mov
loop
rclb
loope
loopne
arpl
adc
add
mov
test
test
mov
lret
sub
sbb
or
add
jne
xchg
and
aas
popl
stos
adc
shl
push
shrb
rorb
push
aad
cmpsl
fbld
mov
add
out
jp
imul
sub
and
push
enter
push
notl
xchg
jns
adc
ja
addl
scas
inc
in
lret
inc
push
cld
mov
xor
mov
out
push
cmc
and
xchg
ja
lds
inc
cmp
push
xor
aaa
mov
xor
xchg
negb
test
inc
lcall
fmul
cwtl
xor
aam
adc
jns
inc
jecxz
test
mov
cmpsl
adc
cltd
add
roll
pop
sbb
data16
inc
outsb
stc
out
mov
mov
xlat
push
pop
xorl
inc
aam
movsl
scas
push
repnz
int
test
ret
lods
inc
in
or
push
dec
pop
mov
mov
pop
xor
mov
adc
jg
push
adc
das
push
cmp
rorb
xchg
iret
popf
sub
xor
push
mov
lret
lock
add
scas
repz
into
mov
je
jns
dec
scas
call
and
push
cmc
push
inc
or
add
sti
mov
iret
imul
jb
ds
icebp
aaa
fwait
inc
push
shlb
in
in
mov
push
dec
inc
insl
push
jge
sbb
or
out
mov
push
sub
nop
pop
mov
into
outsb
pop
rorb
jp
mov
in
mov
shl
sbb
add
fwait
jmp
es
or
jp
cmp
mov
dec
mov
cmc
lds
jno
xchg
je
stc
mov
popf
orb
fcomip
jns
jns
lcall
xchg
fimull
dec
cmc
loop
cltd
mov
sub
sub
mov
inc
pop
je
jl
lock
pop
rdrand
sti
not
push
in
jge
cmpsl
mov
and
jnp
test
std
or
repnz
lahf
mov
scas
mov
movsl
pusha
sub
jns
adc
and
orl
and
repz
mov
jl
xor
lock
mov
movsb
scas
inc
sbb
and
sbbl
aam
call
popa
test
fstps
sbb
testl
sub
imulb
push
movsl
sbb
add
je
xchg
inc
andl
dec
gs
mov
ror
pop
repz
cwtl
popa
movsb
int
scas
pop
lods
push
adc
fs
int3
xlat
cmp
inc
leave
in
addr16
fiadds
cld
jp
jmp
inc
add
ljmp
lods
or
sub
xchg
enter
mov
inc
nop
sub
add
int
push
inc
pop
push
cmpsl
cmp
rcrb
call
push
push
ljmp
rorl
imul
out
test
inc
cmc
mov
push
jmp
insl
outsl
filds
xor
aam
pop
dec
lahf
int
lds
and
adc
push
shl
lahf
sub
fnsave
push
lock
ss
mov
push
push
test
adc
cmp
push
sbb
fs
mov
sub
dec
xchg
adc
cmp
hlt
fdivs
ficoms
xor
jp
in
mov
sbbb
pop
adc
lret
xchg
push
jo
rcl
aaa
lds
fisttpll
jo
mov
mov
push
jle
lock
fwait
push
les
cmc
jg
stos
mov
mov
mull
push
mov
stc
lods
sti
insb
icebp
and
rcll
insb
mov
or
mov
push
xor
into
xor
jbe
adc
and
leave
pop
iret
decl
in
mov
adc
sbb
fldl
xchg
adc
pop
outsl
pushf
cld
out
inc
adc
push
jae
mov
jne
xchg
push
andb
imul
out
jl
stos
or
jb
imul
push
insl
or
popf
push
popa
cwtl
xchg
push
push
jge
jecxz
push
sbb
push
mov
out
jo
insl
xchg
pop
jg
je
push
sub
lea
push
mov
imul
push
inc
adc
push
pushf
mov
add
mov
fidivrs
into
lds
or
adc
addr16
clc
mov
inc
cld
mov
mov
les
sahf
lahf
push
jbe
scas
sub
push
mov
testl
gs
sbb
ret
mov
repz
push
mov
inc
or
push
in
jmp
inc
sub
testl
loopne
leave
mov
ret
cmpsb
mov
lods
or
adcl
or
ficoms
cmpsl
mov
push
adc
shll
imul
mov
setnp
lods
pop
jl
fsubrs
pop
testb
cmp
sub
xor
call
enter
adc
popf
mov
jb
repnz
xlat
popf
xor
xchg
jns
cmp
pop
add
jbe
mov
sub
and
dec
and
xchg
dec
pop
repnz
lcall
sahf
in
pusha
push
cmp
inc
fnstcw
push
dec
rcrb
shlb
insb
cmp
jbe
xor
mov
mov
aam
arpl
push
dec
mov
push
adc
sbb
sbb
dec
call
cmp
shrl
mov
iret
jecxz
andl
int3
push
gs
adc
ds
loop
push
cmpsl
sbb
les
xchg
mov
cs
rcr
cmp
cs
xchg
sub
mov
ret
adc
dec
insb
rorb
loopne
cli
pop
mov
das
pop
lahf
movsb
data16
lcall
sub
daa
addr16
push
push
nop
outsb
outsb
lcall
push
icebp
push
ror
jecxz
dec
outsl
add
xchg
push
inc
and
pop
add
jl
pop
mov
mov
pop
leave
mov
imul
js
ret
ljmp
loop
xchg
mov
test
cld
movsl
push
dec
adc
fcmovne
inc
test
sub
aad
inc
lds
sbb
mov
cmpsl
mov
roll
js
lret
jg
call
push
lcall
mov
cmp
loop
dec
xchg
xlat
sub
or
or
fbld
repz
jo
adc
xchg
rolb
push
sub
in
mov
ljmp
out
sbb
xor
loop
cmpb
or
mov
cmp
mov
add
sbb
mov
cmp
mov
jl
fcompp
pop
ret
ds
cmp
cmp
xor
cmp
in
mov
test
mov
xlat
pushl
xchg
rcl
subb
movsl
fdivs
mov
les
into
fistl
sub
ret
rcrb
jl
push
lcall
sbb
mov
push
add
push
mov
cmp
pop
stc
fistps
cmp
and
in
jecxz
fidivrs
cwtl
rcl
out
das
hlt
addr16
imul
mov
clc
or
rcll
add
mov
les
repnz
mov
sbb
sbb
into
lds
adc
adc
xchg
mov
sub
pusha
es
popa
addr16
jl
clc
clc
mov
cltd
mov
loopne
mov
cmc
sub
arpl
mov
cmpsl
pop
pop
jnp
xchg
movsl
jo
ja
mov
sub
and
cmp
lock
rcrb
in
test
mov
shr
lods
mov
cmp
jp
add
xchg
cmpsl
mov
mov
jmp
loopne
dec
mov
or
in
data16
and
and
dec
mov
cltd
loopne
aas
xor
inc
adc
clc
inc
popa
sbb
cmp
pop
jl
into
push
add
jp
mov
ret
cld
ljmp
mov
cmp
lods
mov
cltd
ret
ret
jecxz
lret
mov
xchg
sub
inc
pop
mov
add
pop
cmp
leave
push
pop
arpl
into
xchg
jo
mov
mov
scas
idivl
stos
dec
call
shlb
add
cs
sarl
stc
ljmp
je
in
je
unpcklps
int
pop
xchg
jl
and
mov
xor
mov
mov
cmp
loope
push
or
jle
xchg
xlat
push
mov
lret
movb
jbe,pn
cli
mov
jl
pushf
mov
or
and
inc
scas
stc
and
mov
cs
daa
mov
mov
int
subb
lcall
sbb
stos
aaa
call
test
mov
out
es
ja
sub
pop
xor
dec
jno
mov
sbb
lods
lret
adcl
mov
stc
sub
imul
clc
jg
data16
fildll
dec
les
pusha
push
idiv
add
pop
mov
fdivl
xchg
mov
ret
pop
popf
add
inc
mov
daa
push
adc
call
ljmp
push
std
test
mov
mov
test
repnz
adc
pop
out
inc
movsl
shl
push
mov
std
das
frndint
pop
dec
in
xor
shll
dec
arpl
adc
in
and
sbb
ljmp
inc
jne
fmull
adc
xchg
lods
insl
movsl
lods
js
adc
inc
pop
mov
icebp
inc
stos
ds
cli
add
xchg
movsb
jecxz
cwtl
dec
xchg
push
pop
push
dec
lcall
test
mov
adc
sub
arpl
push
lods
adc
cmpsl
cmp
inc
out
imul
cmp
clc
add
sar
nop
popa
in
fsubrs
xor
data16
movsl
jl
pop
push
les
inc
inc
out
push
mov
jns
push
dec
adc
adc
sahf
xchg
add
sahf
mov
jmp
xor
dec
pop
stos
sbb
dec
cs
int3
in
je
and
repnz
shlb
stc
test
dec
sbb
push
pop
inc
in
xor
sbb
xor
dec
mov
pop
icebp
add
adc
cmpl
adc
cmpl
inc
mov
pop
cmp
cltd
into
ret
mov
push
insb
addr16
push
scas
mov
mov
jno
jg
mov
mov
fsubp
sub
roll
xchg
ret
clc
dec
jl
xchg
xchg
add
sbb
add
xchg
sub
fdiv
mov
push
push
insl
test
mov
pop
fcompl
lahf
xchg
test
push
push
dec
lds
je
fmuls
xchg
mov
arpl
test
out
jle
lcall
pop
cmp
int3
roll
or
xor
cltd
cmpsb
mov
out
xchg
dec
or
pop
xchg
clc
and
add
mov
je
fmulp
mov
inc
imul
and
hlt
mov
dec
inc
in
and
xchg
movsb
cmp
dec
sbbb
lods
arpl
outsb
call
mov
iret
rcr
mov
rcr
outsb
jg
xchg
xlat
pop
cmc
call
ret
cltd
cmp
int3
call
xor
jg
mov
push
fidivrs
call
mov
lock
insl
xchg
cld
inc
into
scas
data16
addr16
lea
pusha
cmpsb
pop
std
test
and
stc
cli
jo
icebp
shll
imul
mov
pop
push
mov
dec
sarl
push
lcall
cmp
pop
das
or
xchg
jmp
mov
iret
cmp
cmc
orl
fistpl
jmp
or
xchg
jno
push
aad
in
inc
push
std
rorl
mov
push
push
add
fcoml
mov
stos
lods
iret
inc
sub
test
es
adc
mov
or
test
sub
jo
mov
hlt
xor
cs
mov
ret
fiaddl
fwait
pop
and
mov
push
cmp
js
out
sbb
rcll
cltd
pop
xchg
std
push
adc
scas
xchg
add
add
pop
sbb
cld
mov
js
xor
cwtl
in
mov
inc
pop
int3
sub
sub
pop
addr16
pop
add
sbbl
cmpl
cmc
or
clc
clc
mov
std
lds
fdivrs
loope
jne
test
sub
scas
mov
pop
into
pop
adc
push
lods
jmp
repz
in
aam
repz
mov
jmp
dec
mov
iret
xchg
mov
xorb
push
cltd
fdivrs
int
movsb
andb
jge
inc
dec
ss
sbb
dec
add
dec
mov
sti
dec
rcll
sub
cwtl
xchg
in
lods
dec
rorb
movsb
aam
xchg
mov
xchg
mov
and
sub
mov
loopne
inc
or
adc
sub
mov
orb
ljmp
adc
jecxz
frstor
pop
mov
lret
outsb
mov
ja
pop
sbb
std
mov
lods
xchg
les
fcmovnbe
adc
mov
and
hlt
mov
enter
xchg
push
adc
int
stos
fwait
or
mov
fwait
stc
je
pop
xor
insl
push
xor
fld
loopne
cmp
ds
inc
popf
fwait
ja
push
ljmp
pop
xor
int
mov
xorl
cwtl
sub
out
scas
xor
mov
inc
pushf
pop
mov
and
adc
clc
sub
les
xchg
push
xchg
aaa
das
jno
in
push
ficoms
push
cmp
add
sub
mov
dec
test
push
jo
dec
add
les
aas
pop
jle
roll
and
inc
mov
pop
mov
les
push
fdivrs
shrl
cltd
stos
nop
xlat
inc
stos
xor
insl
fimuls
stc
cmpsb
popf
jl
push
push
outsb
in
xor
sbb
call
dec
adc
es
cli
outsb
lods
ret
ficoms
sahf
aad
imulb
fdivrl
xchg
and
dec
sub
xchg
addr16
xor
data16
add
cld
mov
push
mov
or
dec
jno
data16
mov
pop
test
negb
outsl
sbb
mov
pop
jns
shll
dec
movsb
pop
loop
aas
adc
int
pop
push
xor
push
cmp
jecxz
cmp
and
popl
lods
shl
scas
dec
jle
pop
fstl
in
mov
jle
mov
mov
pushaw
adc
cmpsl
jle
mov
sahf
scas
lock
push
pusha
push
push
cmc
lcall
push
ret
push
xor
arpl
cmp
sub
ds
arpl
pusha
lahf
push
clc
xchg
inc
cmp
leave
cltd
xor
cmp
add
cmp
rcl
push
in
and
add
inc
dec
jle
pushl
idivl
aad
pop
in
outsb
mov
pop
stos
lds
scas
xchg
adc
ret
sbb
ds
loope
jp
test
gs
and
add
inc
int
push
sbb
sahf
pop
or
je
fstpl
lahf
lahf
push
call
das
cs
sahf
lret
pop
jp
sub
cs
cmp
dec
fists
mov
fnstenv
test
out
cmp
push
mov
lret
or
lcall
aam
int
pop
mov
sub
xor
sbb
and
inc
lock
cs
shll
lods
jle
lcall
sbb
and
cbtw
push
js
sub
scas
fsubr
or
or
jmp
loop
repz
sub
push
xor
ret
cmp
mov
test
es
fmuls
push
repz
aam
mov
hlt
retw
rol
inc
jb
insl
lds
pop
lret
shrb
daa
add
lods
mov
pop
adc
in
movsb
or
cmc
gs
sbb
nop
das
repnz
repnz
cs
je
in
or
pop
and
cwtl
sbb
mov
addr16
scas
out
clc
rcrl
outsb
ret
sti
xlat
sub
xchg
lea
push
xchg
cmpsb
inc
cmp
fucomi
data16
repz
lret
push
lea
lahf
sub
inc
or
pop
cmc
add
xor
incl
mul
and
pop
jl
fldt
mov
dec
fwait
cmpb
int
mov
add
stos
mov
scas
aad
ds
popf
jo
stc
pop
and
and
int
ss
mov
adc
shr
pop
addps
repnz
mov
sub
fcmove
sahf
add
or
cmpsb
jb
mov
adc
test
outsb
nop
das
clc
in
dec
int
call
sub
mov
jb
aad
enter
or
inc
xlat
js
dec
inc
adcb
out
int
mov
loope,pn
mov
pop
sub
ljmp
sbb
arpl
sub
outsb
push
fs
int3
rcl
dec
inc
cmpsb
cmp
sub
rolb
xchg
nop
lds
ret
mov
ss
xor
or
cmp
mov
lret
roll
je
cmp
je
pop
jp
loope
pop
fisubrs
mov
pop
jne
push
pop
mov
add
xor
pop
into
rcll
pushf
mov
mov
imul
out
test
mov
sbb
jge
jge
xor
pop
adc
xor
ret
ljmp
sub
repnz
decb
push
inc
mov
jb
fidivrs
push
xchg
sub
push
mov
mov
xchg
cmp
xchg
push
shld
repz
aam
scas
adc
sbbl
xor
scas
add
out
aam
jmp
jmp
repz
xchg
enter
inc
sbb
or
inc
sub
hlt
add
paddsb
mov
inc
test
out
mov
and
adc
push
xchg
sti
ljmp
icebp
adc
pushf
imul
lods
sub
mov
std
pop
je
adc
adc
pop
decb
xlat
sbb
sub
repz
lock
shlb
fidivrl
cmc
push
pop
enter
xchg
aad
sbbl
pop
out
std
jle
test
inc
pop
cli
stc
jmp
add
mov
repnz
mov
cmp
inc
lea
jns
ret
add
or
jno
adc
adc
xchg
movsb
imulb
subb
mov
negl
adc
inc
dec
mov
push
or
scas
mov
cmp
sub
hlt
fdivrl
stos
lods
and
push
je
adc
loop
mov
jecxz
jle
cmp
xchg
out
cmp
call
mov
adc
inc
lods
sbb
mov
shlb
push
lsl
bound
ds
addr16
push
push
sub
mov
loope
fs
cltd
sub
ds
leave
pop
or
mov
or
xchg
push
fwait
popf
or
mov
insb
mov
xor
push
icebp
push
les
push
xlat
cltd
inc
mov
icebp
icebp
ljmp
insl
cmp
inc
xor
add
mov
addb
mov
loop
fs
xor
js
mov
sti
in
sub
ret
push
lock
pop
into
mov
fucomi
icebp
aaa
xchg
push
into
dec
xchg
pop
jl
cld
inc
test
test
int
mov
jecxz
nop
adc
or
mov
stos
dec
adc
xchg
mov
ret
or
lods
push
gs
nop
pop
jmp
xor
sub
addr16
fwait
lds
roll
cmp
or
jp
fwait
cmpsl
dec
mov
clc
lret
sbb
cmp
jb
lds
jns
outsb
cmpsl
cmp
xchg
jmp
cwtl
popf
scas
test
sub
loopne
cmpsl
jmp
std
pop
pop
add
sub
jge
xor
nop
mov
idivl
mov
mov
jmp
add
imul
dec
sbb
ret
add
lahf
iret
gs
pop
xchg
cmpsb
mov
ret
pop
sub
cli
daa
or
sub
mov
mov
in
rorb
popa
aas
mov
scas
jmp
insb
pushf
prefetch
mov
iret
xor
sub
pop
pushf
xor
and
fldt
movsl
cmp
into
ss
dec
adc
xchg
cmp
movsb
push
cmpb
xor
mov
adc
cld
or
cmpsb
fistps
fisttpl
sti
or
push
sub
dec
push
insl
add
add
xor
mov
xchg
leave
mov
inc
mov
pop
out
cmp
fsqrt
fsubrs
jo
push
leave
hlt
jle
popf
pop
lret
push
nop
rclb
mov
sarb
std
xchg
sbb
dec
mov
out
inc
mov
dec
pushf
add
cmp
mov
repnz
out
cld
or
cmp
je
xchg
fildll
roll
ret
pop
dec
mov
call
xchg
mulb
fisubrl
fs
imul
push
mov
sbb
iret
movsb
jl
nopl
and
sub
inc
lcall
lods
iret
add
pop
push
dec
in
movsb
mov
fwait
lcall
imul
dec
movsl
repz
and
int
cs
push
cld
push
cwtl
add
das
xchg
jge
lret
ds
ficoml
iret
push
dec
adc
cmp
cmp
and
arpl
push
fs
fsub
stos
test
adc
xor
mov
or
incl
lods
xlat
mov
arpl
mov
sbb
jg
sub
gs
ljmp
push
rcll
aad
repz
fnstsw
add
outsl
jb
mov
mov
pop
std
pop
push
sub
js
cltd
dec
mov
mov
jp
jno
sub
clc
xor
rolb
cmp
das
stos
pop
xor
arpl
gs
add
ret
jg
add
call
test
xchg
bswap
and
mov
lahf
mov
sub
mov
jo
pop
loopne
adc
or
push
or
jo
ret
adc
jecxz
fwait
loopne
xchg
cmpl
lods
inc
push
mov
lds
inc
lods
xchg
cmp
inc
mov
fwait
mov
bound
aaa
popf
stos
xchg
pop
push
cmp
xor
mov
push
repz
dec
out
jo
push
dec
sbb
push
test
stos
fstpl
cltd
loopne
je
lods
rol
pop
cmp
daa
sbb
pop
fists
mov
cmp
xor
push
aas
insl
or
xchg
out
mov
pop
jo
inc
es
pop
cmc
mov
or
dec
jbe
dec
mov
jno
mov
xor
ficoml
jnp
jecxz
dec
mov
mov
lret
lock
ret
pop
cmpsl
dec
mov
cmc
cld
sub
lret
jns
sahf
dec
push
jmp
push
cmc
add
inc
pause
mov
movsb
push
les
mov
push
cmp
lds
adc
dec
loopne
in
pop
mov
mov
sub
insl
repz
sub
outsl
cmpsb
rcll
hlt
mov
cmp
in
dec
pop
lea
popa
inc
bound
inc
addb
stc
pushf
repz
cs
xchg
ret
and
push
pusha
mov
lahf
mov
sub
std
aaa
or
and
cmp
xchg
test
pop
inc
or
cmpsl
aas
test
sbb
sbb
hlt
lods
rol
sbb
loope
adc
test
push
adc
push
bound
fidivs
push
and
and
sbb
cmpsl
ss
inc
les
adc
adc
cmpsl
pushf
or
data16
js
pop
repnz
clc
dec
pushf
push
add
pop
cltd
ja
sar
out
gs
inc
jae
movsl
dec
jge
inc
test
mov
sarb
stos
lcall
adc
test
movsb
cmp
mov
xchg
mov
jl
aaa
rorl
fs
test
mov
pop
sub
movsb
lds
xchg
fucomp
add
push
fwait
push
dec
add
mov
mov
and
push
ja
aas
popa
mov
cmp
xchg
nop
mov
jae
dec
add
dec
cltd
stos
mov
fdivrl
xchg
jmp
pop
mov
cmp
xor
pop
test
inc
out
cmp
xchg
loopne
inc
push
push
dec
outsb
cs
xorl
inc
add
outsl
push
movsb
repz
hlt
enter
pop
fildll
or
roll
js
movsb
aaa
pusha
in
std
bound
ja
aas
lods
jge
or
inc
mov
sub
ficomps
imul
int
mov
adc
fwait
test
dec
push
pop
mov
xor
outsl
shlb
in
jg
out
adc
pop
imul
shll
out
das
imul
loop
xchg
ret
xchg
cmc
push
mov
aad
and
sbb
mov
sbbb
xchg
xor
sub
and
push
mov
push
inc
push
adc
jge
push
shr
push
pushf
xchg
push
pop
inc
les
inc
dec
sti
lds
or
fisttps
sub
push
loopne
arpl
pop
data16
adc
in
movsb
stos
stc
xor
mov
test
test
push
test
negb
sarl
mov
push
jbe
mov
mov
xor
sti
decl
cltd
out
xor
add
out
scas
aas
std
lret
notb
adc
andl
aas
movsl
jae
mov
repz
pushf
imul
mov
jmp
andb
clc
ret
filds
or
lods
pop
cmc
stc
pop
push
aas
in
pop
inc
inc
bound
sbb
daa
outsb
fnstenv
inc
test
and
and
test
movsb
and
sub
dec
fldl
in
inc
jg
xchg
mov
sub
out
sahf
iret
int
mov
mov
lods
mov
test
loop
test
xchg
out
xchg
decb
xchg
mov
jne
imul
cmp
sbb
popf
jg
insl
jecxz
or
js
jb
add
lret
js
cltd
jne
or
test
pop
mov
xchg
pop
xor
xchg
cmp
fdivl
ficoms
jo
lcall
add
inc
and
loope
sar
pop
xchg
sub
popa
loope
xchg
rol
and
xor
mov
pushl
mov
inc
push
out
mov
cltd
daa
push
repz
hlt
lcall
push
incl
ja
inc
idivb
pop
in
jecxz
inc
push
sub
leave
ret
add
pop
out
adc
mov
mov
add
jmp
push
and
add
jns
into
lods
and
adc
sub
imul
pop
loopne
pop
imul
add
aas
or
cmp
sub
push
jae
mov
xchg
popf
mov
jo
mov
faddl
sbb
xchg
repnz
dec
faddp
movsb
inc
jg
stos
jne
mov
stos
bound
adc
addr16
xchg
pop
inc
inc
lret
sbb
or
and
loope
dec
adc
hlt
mov
and
out
stos
out
nop
xor
mov
sahf
sahf
cltd
mov
shll
mov
mov
xchg
xchg
pop
adc
aaa
mov
and
push
pusha
push
mov
mull
adc
lahf
out
in
mov
cwtl
sbb
daa
or
les
xchg
mov
dec
pushf
popf
add
pop
pushf
rorl
test
cltd
dec
pop
imulb
iret
stos
mov
sarl
js
test
add
mov
push
add
push
es
dec
repz
int3
cmp
jns
adc
fs
in
in
jecxz
add
mov
insb
in
cmp
rclb
nop
or
pop
push
fs
mov
addr16
mov
fimull
sti
pop
inc
push
cmp
dec
outsl
cmp
xchg
in
loop
sub
insl
pop
jb
mov
xchg
inc
cmc
jb
lret
or
shlb
negb
mov
rcll
arpl
int
out
add
gs
pop
mov
add
aad
sbb
adc
push
lret
cs
adc
inc
mov
loop
push
xchg
mov
and
out
pop
xchg
pop
fsubs
fbld
fistpll
dec
xchg
mov
add
mov
insb
jle
rolb
mov
andb
outsb
or
sub
adc
push
adc
out
dec
inc
xor
jp
pop
insl
jle
mov
adc
push
cltd
dec
rorb
int3
add
mov
cmp
dec
or
push
mov
or
sub
sbb
mov
xchg
add
or
sbb
pusha
inc
sub
bound
jae
xchg
mov
push
and
push
ret
dec
push
frndint
leave
inc
push
mov
jge
fistl
jle
mov
stos
sub
test
insb
pop
xchg
add
imull
je
pop
arpl
insb
sbb
cmp
jp
shl
push
mov
lods
outsl
mov
es
iret
aaa
or
pop
jns
jg
and
mov
lahf
mov
fnsave
subb
push
sub
lock
dec
xchg
jae
or
dec
sbb
je
loop
inc
push
nop
mov
int3
pop
ja
jae
add
push
jecxz
mov
test
or
push
andl
add
std
pushf
xor
les
aam
jmp
and
cmpb
inc
and
in
xchg
adc
mov
pushf
call
dec
inc
dec
ds
jb
out
das
dec
xchg
or
addr16
adc
pop
or
popa
repz
xor
out
test
hlt
ret
or
into
push
and
fildl
lret
or
fdivr
sar
xchg
leave
ljmp
nop
pinsrw
aaa
in
je
cmp
and
xor
ss
jbe
lret
inc
jp
shrl
sahf
iret
mov
sti
pop
stos
xchg
cld
inc
xlat
mov
addr16
xlat
pusha
in
inc
xor
das
pop
push
imul
fidivl
movsl
cmp
pop
add
int3
leave
push
cmpsl
xlat
dec
jno
add
push
mov
shrl
xchg
pop
lcall
inc
mov
xchg
int3
add
and
adc
insb
mov
dec
push
rorb
ja
fcmovnu
xchg
aaa
mov
and
or
jae
and
jl
sub
loop
insb
insb
cmp
xlat
ror
ss
push
mov
out
aaa
loope
jbe
cmpsl
sbb
xor
xchg
aas
loopne
push
inc
xchg
adc
or
add
lds
sub
xchg
icebp
push
aam
mov
push
and
clc
add
sub
mov
inc
adc
out
movsb
imul
push
pushf
or
xchg
sahf
adc
lock
cmpsb
inc
jb
jmp
fildll
mov
push
test
inc
int3
mov
pop
pop
mov
xchg
jl
int
dec
sbb
rcl
outsl
adc
add
fildll
les
inc
sbbl
adc
jp
das
out
dec
cwtl
mov
iret
adc
js
cs
xor
jnp
dec
inc
ret
pusha
movsb
jno
sub
iret
cwtl
mov
sbb
in
mov
inc
mov
nop
push
pop
cmp
cwtl
or
inc
ljmp
push
fsubrs
je
mov
lds
dec
stc
fs
arpl
and
mov
jo
loope
arpl
add
xor
push
dec
push
mov
adc
jno
cmp
and
add
lahf
pop
mov
js
push
adc
xor
popa
pop
in
and
in
lds
lahf
adc
ds
sub
lcall
add
cmp
cs
enter
pop
mov
scas
xor
push
push
pop
fsqrt
test
inc
or
mov
repnz
xchg
in
dec
sbb
jnp
mov
sbb
repz
sub
xor
imul
imul
or
mov
lods
cmovl
sbb
aam
loope
fwait
cld
shll
insb
push
sbb
test
xor
out
pop
ret
mov
in
mov
orb
sahf
dec
repnz
or
inc
and
xchg
jecxz
mov
cs
mov
adc
add
pop
mov
pop
cli
sub
lock
cmc
in
call
sub
jmp
dec
adc
jo
ds
mov
pop
mov
lods
pushf
jmp
ds
xor
xlat
xchg
bound
cmp
push
dec
cmp
scas
xchg
aam
mov
popa
add
rclb
mov
jne
std
mov
repz
out
jae
mov
mov
mov
lcall
xor
adc
sbb
hlt
out
sbb
pop
cmp
xor
jb
ljmp
add
dec
xor
mov
into
out
call
lods
test
cltd
jmp
popa
jno
loope
push
sbb
rcrb
mov
xchg
out
sarl
dec
frstor
ret
inc
mov
sub
clc
stos
xchg
jmp
dec
das
jmp
cmp
ja
xlat
dec
daa
test
xor
xchg
add
fcompl
nop
lods
or
inc
xlat
xor
dec
ss
add
test
movsb
in
inc
mov
dec
push
call
jecxz
aaa
inc
js
fdivrp
inc
dec
shll
lods
xchg
mov
pop
or
cmpsl
push
adc
sbb
andb
int
jecxz
or
daa
mov
mov
push
pop
inc
sub
xchg
or
movb
test
cmp
out
push
cmc
lahf
dec
call
lock
inc
sub
mov
push
push
jecxz
ficoms
dec
shll
xor
lcall
jle
xchg
sub
faddp
jge
add
aad
mov
add
mov
inc
xor
call
imul
lret
xor
pop
inc
pop
mov
mov
ret
xchg
push
fidivs
ss
daa
xchg
push
arpl
flds
mov
sub
add
pop
scas
insl
inc
jl
mov
fdivl
dec
adc
mov
push
cmp
imul
mov
shrl
and
aam
inc
or
xchg
xchg
sbb
in
sub
repnz
xor
lea
mov
and
jne
jbe
into
into
movsl
push
pop
mov
add
fs
jbe
and
adc
stos
outsl
movl
pop
or
lcall
sbb
sbb
rolb
faddl
pop
jns
inc
sub
pusha
cmpsb
sbb
sbb
mov
sahf
xor
mov
xchg
sti
pop
sar
dec
sbb
rcl
push
push
sub
fisttps
jecxz
push
mov
jno
and
sub
mov
flds
xlat
push
adcl
xchg
add
inc
and
in
jae
mov
xor
insl
inc
cld
sarl
stos
xor
jmp
lea
sub
test
call
mov
push
xlat
cmp
cmp
orb
cmc
push
data16
sbb
fs
mov
adc
test
rclb
pop
adc
cmp
cmp
out
lret
or
aad
cmpsb
inc
xor
fdiv
cmp
mov
jae
add
push
cwtl
test
mov
popa
shlb
add
loopne
stos
inc
out
sbb
xor
jl
lret
movsl
inc
bound
insb
cmc
call
sbb
clc
pop
icebp
in
into
xor
mov
ret
arpl
popf
mov
and
or
jae
lret
mov
inc
cmpl
iret
insb
pop
jae
fs
int
and
sbb
out
cmp
dec
movsb
jbe
xor
out
repnz
adc
scas
lcall
out
ja
movsb
in
jns
xor
jp
pop
mov
cmp
and
mov
xchg
mov
push
orl
into
push
add
stc
iret
shl
stc
fidivl
popa
pushf
pop
push
sub
mov
jg
mov
aad
push
outsl
fs
cmpb
movsl
imul
sbb
xor
fnstcw
loop
mov
adc
adc
inc
sbb
inc
je
jne
mov
dec
in
mov
jmp
cmp
test
hlt
inc
adcb
push
push
into
icebp
or
adc
cmp
xor
ret
xchg
inc
add
fsubr
cmp
mov
test
test
popa
mov
int3
xor
mov
fistps
mov
or
or
cltd
xor
inc
sbb
lahf
ret
push
insb
pop
adc
stc
adc
inc
ret
pop
adc
or
sub
movsb
fnstcw
xlat
sbb
in
mov
icebp
xor
lock
mov
stos
pushf
inc
std
subl
or
adc
int3
sub
jbe
mov
add
and
icebp
or
or
jnp
adc
lods
push
insl
sbb
xor
push
push
and
pop
adc
or
adc
jne
mov
sub
add
push
cli
gs
dec
out
mov
dec
adc
lret
adc
movsb
mov
outsb
xchg
mov
push
sbb
loopne
loope
dec
shl
repnz
cmpb
add
mov
inc
ret
pop
dec
rcrb
sub
mov
out
or
mov
or
out
xchg
mov
cmp
imul
cltd
xchg
jg
jns
push
jmp
lcall
push
add
fldt
arpl
sbb
add
aam
and
mov
cld
adc
xor
xor
push
or
int3
stos
sti
int3
in
iret
outsl
inc
add
and
out
int
fnstenv
or
sti
loope
in
mov
xor
jmp
or
mov
pop
cmpsl
jg
jg
mov
push
lds
or
pushf
sbb
nop
or
pop
dec
imul
jb
shrb
or
jns
or
loope
push
pop
xor
rorb
jecxz
out
inc
add
fucomi
mov
sub
test
inc
lods
lcall
cltd
sub
push
mov
aam
fs
out
outsl
mov
loop
lea
dec
mov
enter
in
jle
std
jmp
imul
inc
dec
or
into
add
ja
test
cmp
mov
pusha
ds
idivl
mov
mov
xlat
mov
sbb
aad
fcoml
mov
cmp
xor
sub
mov
add
mov
jg
pop
sub
mov
outsb
pop
mov
minps
lock
mov
adc
or
lret
cmp
mov
por
cmpsl
add
and
push
repz
jge
xchg
push
and
lahf
cmp
les
les
mov
xchg
cld
repz
inc
std
pop
push
test
int
xor
add
and
dec
fcmovne
sub
popa
out
add
mov
aaa
mov
pop
addr16
sbb
std
push
push
and
push
jae
mov
inc
std
iret
es
cmp
push
insb
call
ficompl
pop
mov
aas
xlat
mov
mov
or
and
outsl
iret
in
jo
vpshufd
sbb
adc
push
push
pop
je
or
jle
mov
or
sbb
xor
ficoml
sarb
adc
dec
xor
pop
movsl
xchg
addl
sbb
arpl
push
int
or
lods
std
jmp
lods
in
lods
add
clc
add
out
xor
std
sbb
jb
push
pop
inc
aam
sbb
out
std
aam
cmp
sbb
jns
subl
rcrl
mov
and
pusha
inc
inc
lea
xor
stos
mov
inc
call
dec
repnz
inc
ret
push
into
and
in
pop
xchg
fldenv
xor
out
je
jns
fwait
add
subb
mov
jb
sti
mov
push
divb
call
test
jns
leave
add
cmp
jne
mov
arpl
mov
sbb
pop
inc
dec
dec
push
aad
fisubl
jmp
mov
cs
jne
sub
enter
andl
loop
cmc
int
dec
xchg
jns
js
xchg
cmp
xor
dec
and
scas
test
push
mov
cmp
add
enter
call
in
xchg
imul
scas
mov
pop
arpl
pop
cmc
mov
jno
push
aam
pushw
xor
xlat
push
push
lods
outsb
lock
enter
cmpsl
mov
imul
iret
in
test
mov
dec
xchg
or
mov
push
cmpsl
into
lcall
xor
inc
push
push
movsb
dec
int3
inc
test
xor
dec
es
jl
int
or
icebp
loope
cmp
lcall
jecxz
push
cmp
fiaddl
mov
in
in
int
pop
fldpi
sti
aas
or
lea
rclb
mov
pop
adc
sub
sti
mov
je
ror
cmp
and
mov
into
push
aad
mov
push
cmp
jb
add
jmp
jmp
xor
jno
dec
flds
hlt
dec
repnz
add
push
pushf
outsb
mov
aas
or
scas
ror
inc
xchg
mov
cmp
stos
or
xlat
arpl
inc
test
add
cmp
sarb
lret
fs
popa
sub
rclb
pop
jnp
test
pop
out
push
push
dec
jmp
or
aad
into
sar
sbb
in
pusha
dec
popf
and
sti
fstl
xlat
lret
stos
sub
int
clc
jbe
lret
scas
cmp
xchg
mov
loopne
add
ret
pop
push
cs
jb
xor
das
add
inc
in
adc
cmp
clc
add
dec
or
orl
jb
lea
call
je
mov
int3
aam
lods
daa
inc
jae
out
fcmovnu
dec
pop
ja
das
ja
cmp
insl
mov
xchg
sbb
enter
cmp
popf
mov
insb
std
sub
add
jg
inc
pusha
daa
insb
jle
lcall
pop
sbb
insl
pop
das
loope
xor
jge
dec
xlat
jmp
sub
jp
loop
jl
cmc
mov
sbb
mov
xchg
out
out
mov
push
test
pushf
sub
fildll
pop
incl
cmc
nop
inc
dec
inc
jmp
ljmp
sbb
popf
xchg
sub
xchg
rclb
pop
sbb
xlat
sbb
xor
stos
je
iret
mov
xlat
fildll
sub
pand
out
int
aam
cli
sbb
ljmp
sub
dec
sub
sbb
popa
arpl
add
addr16
inc
js
and
mov
sub
cmp
inc
pushl
cli
cltd
scas
sbb
cld
lods
fcomp
add
fdivrs
cli
inc
lahf
out
adc
aam
xlat
push
xor
movl
jge
leave
sbbb
and
and
xchg
sub
dec
in
es
pop
jp
jne
test
incl
lods
jne
xor
sub
xchg
lea
sbb
jae
add
xchg
xchg
dec
iret
mov
push
stc
mulb
js
sahf
sbb
rep
jbe
and
inc
test
inc
and
popf
int3
sub
lea
lock
out
inc
mov
lret
jl
mov
lock
xor
bound
shlb
rcr
sbb
fsubs
xchg
mov
arpl
dec
cmpsl
adc
fstl
les
subb
mov
js
xchg
xchg
sbb
dec
sbb
sub
ficoms
sub
sub
mov
hlt
xchg
lds
dec
fwait
or
mov
pop
jbe
push
mov
imull
fmulp
sbb
and
insl
scas
xor
out
scas
pop
xlat
lock
mov
add
out
shrl
jne
cmc
movsl
pop
test
enter
cmp
shll
repz
int3
fcmovnu
adc
pop
sub
insb
pop
ds
es
inc
rcrb
in
or
dec
das
vpmuludq
sahf
gs
movsl
adc
push
pop
push
outsb
jbe
pop
notl
fsub
loop
in
add
fcoml
jp
add
lock
jge
pushf
xchg
sbb
mov
fcomi
dec
gs
add
rclb
or
sub
cmp
push
cltd
or
mov
sbb
mov
pop
and
jp
mov
lds
jl
dec
loope
shlb
mov
jb
cmp
mov
adc
sub
inc
cmc
addl
xor
movsl
lahf
mov
out
xchg
lahf
jne
div
pop
xor
mov
adc
cmp
cmc
fcmovbe
lods
mov
xchg
xchg
push
fs
or
shll
jo
lods
xchg
xchg
mov
inc
in
imul
jle
cs
out
jecxz
fisttpll
mov
lds
shlb
inc
rorl
jge
add
ss
stos
out
cltd
mov
mov
stc
adc
das
mov
loop
lds
push
cwtl
add
setl
arpl
pusha
out
inc
out
inc
out
push
jo
int3
ret
sub
mov
sub
add
std
cwtl
xor
or
outsb
sbb
arpl
sbb
mov
xchg
rcl
pop
sti
or
lds
push
mov
sub
adc
pop
into
xchg
enter
or
cmpl
sub
xlat
insl
mov
cmp
add
xchg
roll
dec
js
lods
mov
lret
push
aam
enter
mov
mov
jno
push
or
mov
icebp
scas
les
jl
jmp
xor
mov
fwait
and
mov
mov
mov
pop
fwait
cltd
dec
push
inc
leave
sbb
pop
scas
dec
stc
push
mov
jns
dec
shrl
pop
mov
out
popa
push
cld
ret
mov
jno
push
sbb
cwtl
idivb
pushf
lock
jmp
sbb
cmp
jb
or
movsl
push
pop
xchg
lret
sub
xchg
lods
xchg
mov
popf
movsb
mov
push
inc
xchg
sbb
shl
lahf
lea
into
xchg
cwtl
xor
insl
data16
cmp
aam
pop
pusha
push
xchg
movsb
jge
popf
jnp
sub
ficoml
dec
adc
mov
adc
cmp
mov
mov
cmc
xchg
fs
dec
mov
cmpsb
jl
sub
ds
je
push
loop
pop
test
je
jbe
xchg
orps
xchg
adc
popf
lret
ficompl
mov
adc
dec
or
push
xchg
jnp
lock
mov
xlat
adc
adc
inc
and
shr
fstps
lcall
push
aaa
jecxz
ljmp
cmpsb
jno
lea
mov
in
mov
mov
xlat
mov
adc
cli
xchg
js
addr16
out
push
mov
fs
imul
cmpsl
mov
cmc
test
or
fwait
jnp
mov
ret
dec
fsubs
movups
jne
or
in
cmpsb
test
in
push
xchg
out
popa
push
addr16
cmp
inc
orb
dec
sarb
cmp
jns
lds
xchg
jge
mov
ret
fsubrs
mov
dec
or
push
test
test
sbb
scas
jb
mov
adc
lds
fldl
cmp
fcomi
cmc
sub
cmp
bnd
jb
and
sub
data16
xor
dec
aas
jno
daa
adc
sbb
add
mul
push
jl
push
enter
push
xchg
sbb
mov
cwtl
adc
sub
fsubr
lea
test
mov
pushl
add
xor
push
clc
sbb
popf
xor
xchg
loope
cwtl
test
imul
jg
dec
jge
popf
inc
xchg
subb
mov
xchg
mov
or
inc
out
and
pop
lea
daa
clc
cltd
sbb
mov
jge
mov
push
push
sbb
imul
ss
jbe
out
mov
xlat
or
aam
adc
cmp
ret
jecxz
stc
or
push
inc
cltd
int3
daa
bound
int3
xor
ret
repnz
mov
lock
push
bound
dec
mov
aaa
mov
aas
cltd
adc
xchg
sub
aaa
push
inc
xchg
stos
ja
push
mov
jae
std
dec
or
mov
cmc
push
and
push
fmul
mov
fwait
adc
rcll
mov
lea
rcrb
aam
inc
jge
xor
xchg
in
popf
adc
out
movsl
lods
popf
xchg
sarl
dec
in
pop
sti
xlat
push
or
sub
stos
test
adc
and
andb
and
xchg
xchg
imul
push
fsubs
leave
sbbl
xor
pop
outsb
adc
push
add
mov
test
repz
xchg
js
xchg
pusha
cmp
sub
leave
lcall
or
adc
ds
pop
sbb
adc
in
and
stos
jo
cmpb
test
adc
mov
pop
push
pusha
mov
lock
jle
subl
cs
fcmovbe
mov
push
aaa
push
out
out
mov
pop
cmp
xor
and
push
shll
hlt
cltd
xchg
inc
sub
das
mov
mov
jno
stos
jbe
pop
enter
cli
xchg
ror
push
sbb
mov
sub
mov
movsb
xor
xor
fidivs
clc
cltd
pop
cmp
loop,pt
sub
ljmp
push
dec
sbb
cmp
xchg
add
ss
fisubs
sbb
out
rclb
call
sbb
notb
fs
or
inc
or
or
mov
xchg
das
jnp
repz
pushf
add
int
pusha
sub
mov
ss
sub
cmpsw
in
pop
test
mov
lock
movhlps
xor
mov
xorl
adc
sub
adc
cmc
mov
push
pop
dec
sbb
rorb
jp
cld
sbb
aad
das
inc
sbb
jno
mov
movsb
loope
sub
push
lret
jecxz
pop
pop
in
inc
out
dec
jbe
out
fstpt
loope
pop
pop
fdivs
mov
addr16
frstor
sbb
enter
mov
cmp
mov
addb
rcrl
movsl
mov
je
push
push
jno
and
push
add
rcll
popf
xor
xchg
sbb
subb
lahf
or
or
sub
cltd
or
jg
popl
sub
sbb
add
push
cmp
xor
add
xchg
inc
mov
jl
mov
xor
ret
lods
pop
xchg
xchg
les
xor
xchg
stc
loope
mov
jb
outsb
sbb
jle
outsl
sbb
mov
xlat
add
cmp
push
pop
movsb
int3
mov
xchg
mov
xchg
mov
roll
add
mov
jl
cmc
jo
shrb
jbe
icebp
out
loop
mov
jg
pop
in
sbbb
ret
jbe
insb
mov
popf
frstor
sbb
mov
add
sub
lret
and
mov
or
repz
lods
sbb
or
xchg
xchg
dec
shlb
jle
mov
xor
ja
jae
scas
mov
bound
xchg
jo
adc
sub
into
add
adc
pop
mov
out
cmp
mov
push
sub
mov
jb
nop
push
adcb
call
test
jle
push
out
mov
addr16
ret
movsb
cmp
jno
and
jbe
fwait
cmp
jne
mov
jl
dec
push
dec
and
loopne
shlb
sbbl
pushf
jns
jl
mov
xchg
out
mov
lcall
rcl
pushf
add
imul
int3
mov
xchg
mov
test
js
int
mov
loope
pushf
pop
test
aaa
push
mov
pusha
lahf
negl
inc
rcrb
push
lods
leave
dec
daa
push
xchg
dec
outsl
xor
ffree
dec
sbb
movsb
lea
lret
stos
cmp
inc
iret
ret
and
int3
lret
fs
popa
or
inc
jno
mov
jle
add
add
push
xor
dec
pusha
out
negl
mov
addb
adc
xor
jns
push
out
xor
lock
and
push
dec
arpl
out
lea
sub
mov
and
bound
jo
sbb
rclb
enter
sbbb
and
or
xchg
push
sbb
pop
mov
addr16
push
outsl
pushf
and
idivb
rorl
mov
pushf
test
adc
sbb
hlt
rcll
jnp
xchg
sbb
inc
ss
push
ljmp
mov
popf
test
xchg
dec
pop
push
daa
mov
in
std
movsb
adc
lds
lcall
adc
je
mov
sbb
adc
testl
or
test
jge
xor
test
negl
lret
or
pop
mov
xchg
push
ja
inc
out
stos
xchg
jo
dec
js
mov
or
cmp
cmp
or
or
cli
add
cwtl
push
xor
ja
mov
lods
mov
imulb
jmp
add
mov
cmp
stos
aam
add
cmp
mov
mov
lahf
sub
mov
cwtl
xor
or
cmp
and
aas
push
popa
mov
aas
in
push
outsl
jmp
add
jecxz
out
mov
sbbb
repnz
dec
repnz
std
mov
or
leave
idivl
add
inc
aaa
sub
movaps
cmp
rcl
movsb
mov
add
xlat
aad
dec
adc
sbb
fnsave
cmp
loope
lahf
lcall
xchg
int3
or
sbb
and
xor
clc
scas
sub
add
push
pushl
sub
dec
push
dec
and
lods
add
add
sbb
push
sub
hlt
jp,pt
mov
dec
movsb
in
cmp
and
xchg
lods
and
aaa
lcall
adc
push
mov
cmp
add
sahf
or
lea
cli
lcall
roll
lods
mov
imul
enter
mov
sbb
fsts
lret
aad
test
gs
sub
jns
add
push
in
add
lock
sub
daa
jg
add
mov
mov
add
dec
mov
aaa
or
enter
call
xchg
bound
scas
or
cmpsb
inc
push
pop
xor
push
in
aaa
js
scas
fiadds
je
je
jmp
fbld
jnp
cld
ljmp
aad
fsubrp
cmp
jo
fstl
int
mov
popl
int3
ja
insl
loope
ds
add
xor
cmp
pusha
ja
shll
pusha
cmpl
xchg
inc
clc
adc
mov
add
es
or
sub
pop
mov
movsl
mov
nop
bound
jbe
jp
inc
repz
shr
mov
xchg
mov
adc
leave
outsl
pop
je
fxch
lea
fwait
repz
call
addr16
cwtl
in
iret
hlt
xchg
imul
arpl
movsb
jno
sbb
lods
rorb
jo
int
mov
fnstsw
outsl
pop
lahf
pop
mov
insb
jb
mov
or
loopne
pop
addb
insl
jge
xor
dec
xor
mov
xchg
scas
and
sahf
push
add
add
ds
inc
add
adcb
mov
incb
dec
jbe
mov
xchg
adc
test
adc
enter
loope
scas
mov
cmp
test
bound
adcb
xor
rcrb
popf
jecxz
imul
xchg
lods
mov
jbe
xlat
sub
arpl
adc
add
lock
out
outsl
xchg
in
test
pop
or
dec
inc
fildl
sub
adc
and
cwtl
jbe
xor
inc
mov
imul
jbe
xor
mov
push
sti
in
out
inc
enter
pop
dec
adc
xchg
cmp
jae
ss
or
out
subb
mov
fiaddl
pop
dec
test
sbb
addr16
mov
test
mov
arpl
fstpt
lcall
push
gs
cmp
cmpl
sbb
das
pop
dec
test
mov
and
shll
dec
jge
dec
repnz
gs
xchg
test
lea
push
pop
rcrb
push
pop
dec
shlb
adc
inc
dec
inc
ja
cmp
jmp
ja
test
gs
pop
imul
push
xor
imul
pusha
lods
adc
mov
sbb
and
ror
dec
adc
cs
and
push
test
fstpl
fcmove
xor
fsubrp
mov
psrld
nop
loope
lods
sub
outsl
xor
and
adc
mov
xchg
adc
dec
mov
pushf
mov
cmp
out
jo
movsb
sbb
and
push
cmpsb
movsb
jmp
dec
rep
repnz
movsl
mov
cmp
lds
dec
insb
jbe
and
mov
bound
arpl
lcall
pop
rcrb
adc
lcall
int3
inc
movsb
adc
fldt
loopne
rolb
icebp
inc
test
in
int
aad
lods
cmp
add
aaa
pushf
xor
jb
xor
adc
xor
cmpsl
push
push
or
in
scas
sti
or
dec
imul
add
std
lahf
or
out
pop
push
sub
lret
dec
nop
lea
dec
push
mov
push
in
cmpsb
mov
pop
dec
insl
mov
out
mov
mov
fs
cmp
sub
pop
icebp
movsl
cmp
jl
insl
int
jg
out
stos
lea
sbb
in
xchg
in
addr16
loopne
mov
inc
cmp
ja
jne
addb
mov
std
push
hlt
and
sbb
fstl
add
xchg
mov
mov
or
sbb
outsb
or
popa
jge
lea
aad
and
mov
notl
mov
fcompl
lahf
clc
and
xchg
or
mov
and
das
fldl
adc
xchg
sub
fistpl
paddd
add
lock
popf
xchg
pushl
push
lock
or
sbb
mov
test
mov
adc
cmp
xchg
jae
mov
std
xorb
mov
cld
cmp
sbb
idivl
fimull
push
mov
int
out
mov
enter
data16
cwtl
push
es
sbb
clc
push
mov
add
mov
push
test
in
mov
push
adc
scas
inc
inc
mov
inc
outsl
push
lods
mov
ja
hlt
mov
lret
mov
insb
add
pop
jge
push
sub
lds
pop
out
pop
in
push
pushf
sub
jne
sbb
push
arpl
loopne
shr
testl
and
cmp
push
or
out
adc
mov
call
in
xchg
dec
sub
sub
push
bound
mov
mov
xor
lret
mov
ja
sub
jg
loop
mov
popf
mov
test
jno
shld
faddp
insl
mov
lret
push
sbb
int
xchg
cmp
sub
jnp
lds
push
jmp
push
or
cmp
sub
ja
sti
adc
mov
out
mov
xchg
stc
rcl
jecxz
loopne
fbstp
mov
dec
cmpsl
call
or
test
mov
adc
mov
push
gs
add
cltd
mov
aaa
repnz
push
dec
fisubs
mov
neg
repz
mov
xor
jns
je
jmp
mov
xchg
inc
dec
int3
sub
mov
mov
bnd
popf
xor
rol
hlt
ss
shl
and
xor
cmc
lahf
push
pop
mov
imul
into
es
je
or
ljmp
mov
jne
int3
push
iret
das
sarl
add
je
mov
ret
ror
add
clc
mov
ss
jmp
cmpsl
aam
movsb
jge
sbbb
lea
aad
out
jp
into
clc
leave
clc
cmp
lret
jo
pop
adc
movsl
cmp
clc
push
xchg
lcall
mov
mov
outsl
fdivrp
xchg
adc
rcrl
test
popa
lret
xchg
shll
dec
jb
sub
loop
add
aad
lahf
xchg
dec
push
rcr
mov
xchg
xchg
cltd
lods
jmp
scas
and
and
mov
xchg
fstl
js
and
adc
jns
xor
sbb
gs
sub
mov
pop
mov
js
aad
testl
pop
ret
mov
adc
xor
and
jno
jbe
sqrtps
loop
imul
lret
xor
xchg
mov
jecxz
or
arpl
jmp
scas
das
ss
sub
fimuls
into
add
ss
outsl
jl
nop
adc
add
or
adc
sti
outsb
testl
scas
jecxz
inc
jge
pusha
icebp
pushl
add
andl
push
ret
das
cli
xchg
lods
mov
movsb
push
fimuls
scas
es
or
imul
push
addr16
mov
mov
call
popa
aam
xchg
shlb
push
mov
arpl
addl
dec
cs
fs
test
clc
jae
sub
and
in
adc
sbb
fwait
aaa
cmc
test
out
mov
cmp
daa
jae
cs
fidivrl
aad
rol
test
mov
sub
cwtl
arpl
testb
push
pop
or
jb
rolb
xchg
cmpsb
lahf
into
shll
mov
mov
into
int
adc
lahf
jg
fs
mov
icebp
and
arpl
mov
scas
scas
inc
insl
fiadds
aam
mov
inc
mov
cmp
ja
stos
adc
sub
out
xchg
pop
ds
insb
test
leave
sbb
dec
pop
std
loope
mov
xor
outsl
gs
push
or
sbb
ds
test
and
addr16
fs
jl
mov
cmc
pop
inc
inc
rolb
sub
popa
imul
sbb
sti
stos
mov
pushf
cwtl
and
pop
test
jne
mov
adc
ret
sbb
cmp
outsl
jmp
imul
dec
inc
outsb
push
filds
push
subl
mov
ret
mov
pop
sub
mov
lret
int
jle
cwtl
fcoml
std
or
mov
mov
cmp
cmp
push
push
les
cmp
in
lret
dec
dec
enter
or
jne
movsb
imul
aam
xor
js
lods
xchg
incl
les
loopne
cmp
sub
or
add
or
shlb
jle
lret
cmpl
xor
sbb
pop
testb
dec
jle
push
fisubrl
push
sbb
fnstsw
pop
popf
js
push
push
inc
aaa
insl
repnz
jnp
inc
jmp
stos
xor
cmp
push
mov
adc
sbb
mov
mov
and
iret
pop
and
inc
nop
mov
push
xchg
mov
cmp
cltd
sbb
xor
add
lahf
ret
mulb
push
inc
or
aaa
daa
jno
inc
inc
jge
gs
push
movsb
xor
sahf
sbb
mov
inc
aas
push
in
cs
or
jle
addb
cmp
jbe
add
std
jl
ss
jle
xchg
sbbb
fldenv
sbb
inc
cwtl
xchg
mov
mov
or
mov
xor
stos
cmp
ficompl
pop
pop
sbb
in
aaa
cltd
das
pop
xor
xor
push
pop
jp
push
je
stos
loop
jne
pop
and
test
ret
jmp
sbb
add
std
cmp
notl
imul
hlt
pop
test
inc
mov
scas
ds
shrb
jp
hlt
jnp
hlt
mov
insb
jb
push
mov
sbb
push
jnp
aad
jmp
xchg
outsl
xchg
mov
xchg
or
jmp
mov
push
push
jne
pop
pop
cltd
jo
ja
imul
movsl
outsl
leave
dec
aaa
neg
addr16
ds
je
pushf
jp
xchg
pop
jb
xor
cwtl
jp
jne
xor
push
inc
out
xrelease
push
and
lahf
xchg
fstpl
stos
jne
ja
loop
aaa
cmp
cmp
loopne
mov
adc
xchg
cwtl
ds
adcb
lock
clc
and
pop
push
loope
add
jnp
nop
sbb
out
mov
mov
jp
fiadds
mov
cld
daa
push
lock
outsb
sti
add
mov
mov
mov
pop
or
push
outsl
dec
call
jno
adc
cs
lret
inc
mov
sbbl
sub
in
test
mov
test
leave
adc
cmpsb
movsl
push
shll
jle
mov
ja
mov
add
mov
pop
push
bound
pop
mov
pop
out
imul
loope
adc
adc
sbbb
cld
xchg
dec
and
pop
clc
pushl
scas
scas
sbb
pop
filds
lcall
gs
outsl
gs
lret
out
sbb
das
pop
negl
test
out
pop
cld
xchg
dec
dec
lea
mov
jne
sbb
xchg
ds
cmpsl
imul
in
in
push
pusha
mov
cltd
lock
xchg
push
pop
xlat
xchg
xor
shl
push
inc
out
sahf
push
lcall
fcmovnu
lods
sub
mov
xchg
aas
dec
lahf
cltd
outsb
pusha
lods
out
fucomip
mov
lods
xchg
fdivr
leave
aas
xchg
jbe
mov
orb
lahf
leave
push
lret
mov
lahf
cld
push
or
ss
leave
dec
push
out
cmp
sarl
ds
insl
insl
into
cmp
xchg
mov
leave
push
pop
push
stos
jmp
scas
rolb
popa
ret
js
cmc
lock
or
mov
jno
movd
imul
movb
ss
dec
jle
out
push
lahf
mov
pusha
scas
mov
mull
jge
out
out
sbb
or
jnp
mov
push
ljmp
fcomps
inc
bound
pop
push
arpl
jne
imul
andl
ja
cltd
cmp
dec
lret
bsr
adc
adc
xor
lahf
ret
cwtl
push
aaa
pop
jae
adc
pop
std
dec
mov
sahf
aaa
dec
or
pop
dec
mov
jno
mov
mov
push
ds
lret
push
push
shrb
rcll
and
pop
or
sub
imul
fs
ret
sarl
add
rol
sub
mov
pop
aaa
arpl
jg
and
pushf
movsb
mov
pop
cmp
leave
xchg
cmp
imul
jmp
or
pop
mov
daa
es
mov
lods
stos
push
icebp
inc
aaa
in
das
dec
idivb
jge
lret
xchg
pusha
mov
test
orb
fdivrl
jecxz
shl
sub
adc
jb
enter
lds
out
add
mov
xor
add
lret
imul
pop
imul
adc
or
jg
push
jb
stos
sub
pop
pop
aas
xor
repz
xor
and
test
cs
cmpsl
gs
adc
xchg
dec
sbb
imul
out
inc
mov
ret
and
inc
xchg
jmp
mov
cs
enter
dec
adc
inc
add
sbb
daa
fwait
loope
std
mov
mov
and
loope
rcl
xor
test
mov
repnz
in
xor
out
inc
adc
shlb
fwait
push
sahf
cmp
jne
inc
into
test
idivb
push
xchg
shll
cltd
outsl
or
pusha
fistpll
call
out
or
mov
mov
inc
inc
cld
dec
insl
push
mov
mov
leave
mov
bound
fstps
mov
push
stos
enter
insl
push
adc
aas
push
mov
out
out
cmovs
mov
jl
stos
inc
movb
out
sbbl
xor
cmp
jmp
jecxz
stos
jb
loope
negl
inc
mov
pop
faddl
aam
popf
lcall
dec
ret
jl
push
cmp
call
add
movsb
xchg
xchg
cmpsb
mov
ja
pop
sbb
mov
sbb
jae
xchg
jge
sarb
cmp
aas
aas
adc
jnp
sub
mov
hlt
fiaddl
ret
daa
in
add
adc
pop
and
push
cmpsl
cmp
loopne
xchg
ljmp
lahf
hlt
das
xor
mov
jmp
sti
mov
inc
fcom
outsb
nop
js
mov
fdivl
std
jne
mov
inc
int3
lds
clc
pusha
pop
shl
arpl
jnp
mov
fsub
xchg
push
dec
or
les
push
xchg
mov
xlat
test
divl
add
cld
sub
mov
les
cmp
cmp
dec
or
loope
shrl
scas
push
or
add
repz
and
mov
ljmp
mov
sti
xchg
sahf
mov
stc
pop
dec
orl
repnz
and
mov
xchg
movsl
clc
fwait
xchg
push
lahf
repnz
mov
and
mov
clc
clc
dec
shll
mov
or
lds
xchg
and
jae
pop
push
mov
pop
in
rcll
pushf
fimuls
mov
adc
xor
lret
shl
jnp
ss
sub
int
test
mov
mov
push
mov
aas
mov
scas
push
mov
aaa
repz
push
xor
lahf
mov
sbb
push
pop
ds
sbb
add
xor
mov
push
fmul
or
pop
lret
inc
test
lods
xor
lea
rorb
sbb
les
icebp
cld
inc
dec
push
lret
inc
and
test
scas
push
adc
adc
call
ljmp
and
repz
jns
add
sub
xor
or
dec
loop
pop
pop
cmpl
pop
lods
push
cmp
xor
daa
cmp
iret
loope
fcmovbe
and
and
add
fsub
lret
cs
lret
or
aaa
mov
mov
inc
sub
mov
daa
lds
pop
fisttpl
cltd
adc
cmpsl
push
add
fwait
add
jecxz
and
xor
clc
test
imul
enter
outsb
or
sub
mov
shll
ss
push
mov
pop
nop
jbe
in
bound
out
shlb
and
mov
ja
push
sub
inc
mov
test
mov
rorl
dec
or
add
adc
or
add
out
out
lock
mov
mov
rolb
fimull
sub
les
mov
pop
arpl
inc
cmp
or
mov
inc
jle
adc
ss
mov
movsl
subl
jo
repnz
repnz
mov
mov
jbe
inc
and
addl
pusha
dec
mov
jno
pop
out
mov
dec
sbb
shlb
lock
ret
or
fsubrs
mov
lahf
ret
mov
add
xchg
inc
sbb
cmpsl
arpl
inc
fisubs
adc
frstor
into
out
stos
mov
xor
stos
in
rorb
repz
dec
pop
sbb
in
and
loop
int3
mov
call
push
outsl
pop
sub
adc
enter
pop
and
test
mov
add
leave
xchg
push
pusha
shlb
and
out
xchg
add
push
pop
push
push
scas
ljmp
or
inc
and
sti
mov
ljmp
dec
mov
repz
mov
popl
xor
jmp
jns
cmp
dec
or
cmp
test
adc
push
jnp
xchg
xchg
jl
das
and
jmp
sahf
jb
out
mov
xchg
mov
adc
lahf
adc
push
bound
outsb
pop
pushf
xorl
or
in
ret
lret
std
out
mov
jne
sbb
jae
lds
leave
sbb
rorl
sbb
or
aas
loop
cmp
mov
pop
scas
pop
pop
push
cli
hlt
aam
pop
pop
stos
add
jno
lods
roll
add
sbb
add
aas
add
jo
add
lock
add
dec
add
add
add
add
add
add
insb
nop
or
jl
or
nop
nop
or
mov
add
add
nop
or
add
add
lcall
add
nop
or
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
fcomp
add
in
add
add
add
sub
popf
stos
pusha
leave
fildll
push
dec
decb
or
dec
loope
push
push
push
push
mov
test
je
push
out
or
outsb
insb
xor
cs
push
mov
cmp
xor
jb
jne
insb
inc
gs
push
add
mov
call
xor
sbb
mov
jl
sar
sbb
adc
ss
clc
cmpl
mov
push
push
jbe
push
or
lea
inc
aad
stc
mov
add
adc
push
push
call
sub
je
int3
adc
jne
dec
push
addb
pop
push
add
push
jmp
pop
pop
pop
pop
ret
in
xor
push
add
addr16
lea
mov
or
loopne
dec
and
add
xor
add
dec
mov
sub
inc
adc
adc
jmp
xor
or
cmp
or
rolb
sbb
inc
adc
pop
pop
mov
movsb
enter
ret
cmp
rolb
sbbl
shr
enter
stos
adc
mov
add
xchg
lea
xor
or
mov
shr
add
lea
iret
inc
repz
shl
sbb
add
cmc
inc
inc
cmp
jl
mov
imul
mov
js
mov
xchg
adc
xor
sbb
lret
xchg
add
fcmovb
jecxz
add
cmp
mov
int3
sbb
push
push
push
cmp
dec
mov
ljmp
mov
movzwl
dec
pop
lock
test
int
icebp
xorl
push
sbb
mov
and
lock
add
mov
jle
push
xor
mov
or
lret
mov
shr
and
jecxz
lds
sti
lock
shl
inc
push
and
push
sahf
flds
sub
mov
sub
adc
pusha
mov
lds
repz
aas
pop
mov
dec
push
shl
movsl
add
fstpt
sbb
lods
movsb
cmpsl
push
jae
insl
fisubrl
push
testl
test
test
shl
fcmovnu
mov
inc
xor
lea
mov
or
and
insl
push
lock
dec
or
mov
mov
dec
jbe
mov
jge
dec
stos
imul
dec
cmp
inc
nop
icebp
push
push
and
loopne
add
stc
nop
xchg
les
inc
cmp
insb
incl
xchg
mov
sbb
and
xor
ljmp
icebp
push
sub
daa
in
cwtl
imul
mov
clc
xsha256
cmpsb
xchg
or
add
jge
mov
sbb
jmp
es
and
jne
jmp
dec
aaa
rolb
xor
push
mov
and
push
push
sbb
insb
or
test
jl
lahf
adc
and
push
sbb
sbb
test
adc
cmpsl
pushf
push
cmpb
jae
jle
mov
mov
push
and
sub
inc
icebp
jge
adc
adc
mov
xor
setl
dec
loope
push
cwtl
rorb
jbe
lahf
test
xor
js
and
inc
or
adc
pop
dec
xchg
test
fldl
push
test
push
sar
or
mov
or
cmp
push
popa
sbb
jae
and
dec
sub
icebp
leave
fs
arpl
and
cmp
push
cmp
and
inc
push
sbb
unpcklps
cwtl
xor
mov
sub
daa
jecxz
adc
dec
or
pusha
mov
xchg
adc
call
decb
es
push
and
out
fldcw
mul
xchg
mov
test
inc
cwtl
adc
add
mov
mov
jl
lods
jo
jb
outsl
and
in
enter
sbb
and
and
sub
and
rcr
inc
or
xchg
sub
jl
pop
int3
adc
imul
or
xchg
call
lods
push
rcll
test
add
testl
or
sub
shlb
sarl
bnd
ret
cli
and
add
mov
jmp
xchg
pushf
or
xlat
fwait
ret
xchg
xchg
cmp
cli
and
jae
and
mov
clc
shr
sbb
pop
sti
cmp
jae
mov
pusha
add
jecxz
jns
lea
nop
add
divl
decl
push
mov
sbb
sub
cmpsl
test
xor
sub
mov
or
sbb
lcall
cmp
mov
das
cmc
dec
in
and
aad
cwtl
xor
push
out
adc
pop
leave
add
shl
jmp
mov
inc
call
cltd
addr16
hlt
jne
xchg
test
or
loop
sub
lret
pop
mov
cld
xor
ret
add
sbb
add
mov
and
pusha
pop
inc
out
push
sub
push
sbb
leave
data16
or
add
cmc
adc
fxch
xor
inc
cltd
mov
jmp
jge
insl
xchg
cld
and
addb
jne
sub
add
mov
or
and
out
xlat
push
sar
and
or
xorl
xor
movsb
jge
out
or
xor
fistpl
roll
pop
adc
pop
or
mov
sbb
call
add
push
les
push
fiaddl
repz
xchg
cmp
add
nopl
test
imul
test
pop
rcrb
push
and
fstpl
hlt
mov
cmpsl
frstor
fscale
xchg
fsts
inc
or
pop
sub
sbb
dec
repz
dec
inc
mov
jmp
inc
jmp
mov
stc
dec
je
xor
and
adc
ja
std
sub
add
lea
ffreep
mov
setns
mov
iret
inc
insb
sbb
fisttpl
movsl
popa
jl
clc
cmp
pop
mov
inc
and
xlat
mov
jbe
sbb
inc
test
add
and
jno
pop
nop
adc
adc
js
xor
mov
inc
or
adc
sub
push
push
dec
sgdtl
inc
push
test
cli
test
in
sbb
cmp
scas
or
mov
outsl
add
and
mov
mov
and
jo
push
or
sbb
imul
lds
stos
call
sbb
push
push
call
fstl
mov
inc
cld
cmpl
js
shlb
or
pusha
arpl
lea
stos
add
jnp
add
jae
test
pop
mov
lods
jnp,pt
adc
pop
lcall
int3
enter
or
sbb
push
or
cwtl
xor
cmp
nop
add
add
push
clc
and
push
push
push
adc
xor
jbe
mov
xchg
sub
or
xor
dec
adc
add
mov
mulb
push
outsb
je
lret
jnp
xchg
and
lret
or
sbb
push
jmp
test
push
and
test
push
in
test
xchg
cmpsb
add
mov
or
enter
push
xchg
lds
or
sbb
xchg
mov
orl
fisubs
sbbb
and
or
inc
icebp
add
movb
pop
loope
sub
inc
mov
shll
call
fadd
pop
int3
xor
or
cwtl
movsb
test
pop
pop
pop
pop
ret
push
in
inc
test
call
adc
xchg
add
leave
jne
add
push
call
pusha
and
sar
xor
xor
jne
push
push
idiv
jne
fdivs
jne
inc
stos
pop
add
jmp
mov
lods
push
jne
scas
leave
push
nop
add
int
aas
pop
xchg
clc
push
dec
enter
pop
add
mov
or
hlt
cltd
or
mov
adc
cmp
dec
cmp
or
incb
push
jmp
sub
push
clc
movzwl
test
xchg
jne
dec
ja
mov
leave
je
insb
dec
cld
cmpb
inc
pop
adc
add
cmp
jge
push
inc
movzbl
add
mov
call
mov
jne
sub
rcl
test
mov
shr
rclb
les
push
add
pushf
and
nop
add
jmp
pop
pop
mov
cmp
xor
dec
adc
jmp
loopne
jmp
push
mov
clc
xor
mov
jbe
push
push
call
sbb
adc
push
mov
cmc
std
decb
push
sub
dec
fmulp
inc
in
adcl
loopne
pop
jge
dec
or
rcll
pop
mov
add
movsl
sbb
inc
icebp
jnp
push
cli
movsb
outsl
rcrl
stos
fisubrl
lret
into
pusha
cmp
cmp
xor
add
test
pushf
lcall
push
lock
push
push
xchg
dec
mov
mov
push
in
push
outsb
dec
sub
ss
mov
jl
xor
rorb
hlt
push
dec
or
or
cli
sbb
push
jecxz
mov
push
in
ror
inc
je
test
and
adc
popl
jmp
pop
push
sbb
sbb
push
stc
jmp
fimull
dec
out
movl
or
sub
pop
fimull
aad
or
sub
sti
addr16
add
or
jle
aam
dec
cmp
push
je
add
aam
mov
inc
dec
dec
or
mov
adc
push
push
push
mov
add
inc
pop
dec
test
and
ja
adc
lds
bound
pop
fnstcw
sbb
mov
xchg
ret
testb
movsl
inc
mov
js
xchg
rorl
test
and
out
dec
pop
adc
ds
jge
push
adc
rolb
pop
push
xor
dec
xchg
dec
popa
aas
jo
inc
push
pop
test
inc
or
mov
imul
cmpsl
inc
leave
push
inc
xor
pop
imul
call
mov
je
cld
add
mov
divl
sub
mov
cmp
fcmove
loopne
sbb
dec
or
jmp
rorb
mov
or
mov
imul
mov
cmp
mov
lea
add
iret
shr
loope
std
fs
lea
xchg
roll
ret
mov
test
add
mov
push
inc
loope
sbb
inc
mov
rcr
inc
jl
movsl
inc
and
clc
lahf
inc
sub
sbb
jo
imul
gs
loopne
jnp
push
jo
arpl
and
jae
addr16
out
je
and
outsl
div
pop
imul
inc
dec
inc
cs
out
sub
insb
and
inc
imul
jne
je
sub
sbb
mov
adcl
daa
popa
addr16
outsl
js
ja
sub
inc
popf
xchg
je
adc
pop
xor
stos
cmpsl
xchg
cltd
stos
sbb
loopne
add
je
into
test
loopne
mov
outsb
fs
jo
pop
icebp
sbb
dec
mov
insb
sbb
aas
mov
mov
fmull
clc
add
and
add
addr16
and
dec
add
add
pusha
mov
mov
cld
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
nop
or
in
pop
add
dec
or
add
or
sub
or
add
inc
add
nop
or
and
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
jae
xor
mov
je
cld
add
mov
divl
sub
mov
cmp
fcmove
loopne
sbb
dec
or
jmp
rorb
mov
or
mov
imul
mov
cmp
mov
lea
add
iret
shr
loope
std
fs
lea
xchg
roll
ret
mov
test
add
mov
push
inc
loope
sbb
inc
mov
rcr
inc
jl
movsl
inc
and
clc
lahf
inc
sub
sbb
jo
imul
gs
loopne
jnp
push
jo
arpl
and
jae
addr16
out
je
and
outsl
div
pop
imul
inc
dec
inc
cs
out
sub
insb
and
inc
imul
jne
je
sub
sbb
mov
adcl
daa
popa
addr16
outsl
js
ja
sub
inc
popf
xchg
je
adc
pop
xor
stos
cmpsl
xchg
cltd
stos
sbb
loopne
add
je
into
test
loopne
mov
outsb
fs
jo
pop
icebp
sbb
dec
mov
insb
sbb
aas
mov
mov
fmull
clc
add
and
add
addr16
and
dec
add
add
pusha
mov
mov
cld
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
nop
or
in
pop
add
dec
or
add
or
sub
or
add
inc
add
nop
or
and
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
jae
xor
mov
je
cld
add
mov
divl
sub
mov
cmp
fcmove
loopne
sbb
dec
or
jmp
rorb
mov
or
mov
imul
mov
cmp
mov
lea
add
iret
shr
loope
std
fs
lea
xchg
roll
ret
mov
test
add
mov
push
inc
loope
sbb
inc
mov
rcr
inc
jl
movsl
inc
and
clc
lahf
inc
sub
sbb
jo
imul
gs
loopne
jnp
push
jo
arpl
and
jae
addr16
out
je
and
outsl
div
pop
imul
inc
dec
inc
cs
out
sub
insb
and
inc
imul
jne
je
sub
sbb
mov
adcl
daa
popa
addr16
outsl
js
ja
sub
inc
popf
xchg
je
adc
pop
xor
stos
cmpsl
xchg
cltd
stos
sbb
loopne
add
je
into
test
loopne
mov
outsb
fs
jo
pop
icebp
sbb
dec
mov
insb
sbb
aas
mov
mov
fmull
clc
add
and
add
addr16
and
dec
add
add
pusha
mov
mov
cld
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
nop
or
in
pop
add
dec
or
add
or
sub
or
add
inc
add
nop
or
and
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
