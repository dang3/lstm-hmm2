pop
data16
incl
inc
add
pop
inc
outsl
outsl
insb
gs
outsb
add
or
add
jmp
jae
add
jb
lea
sub
add
push
fcomip
mov
add
dec
outsb
je
addr16
and
iret
scas
xchg
ffreep
pop
cs
jns
insb
daa
push
outsl
jb
aas
int
fs
orb
popa
imul
add
cwtl
or
push
je
sub
outsb
mov
imul
push
imul
les
or
and
xorl
ds
or
fnstenv
sbb
pop
cmp
fwait
data16
pop
push
dec
bound
arpl
pop
sbb
js
roll
lds
std
ret
insl
dec
and
or
jb
popa
arpl
add
pop
inc
add
js
ds
lcall
dec
inc
imul
inc
sbb
add
cmpsb
std
mov
addl
jmp
adc
mov
scas
push
mov
mov
test
adc
or
rorl
or
pop
jb
jb
adc
popa
fs
je
ss
rorl
in
fs
fs
imull
jmp
push
sbb
inc
push
sbb
or
daa
pop
sbb
cld
xchg
clc
or
lock
and
xchg
aas
call
xor
fmull
push
sbb
aam
int3
sbb
enter
and
push
mov
xchg
lods
or
fs
test
cmp
cmp
xchg
andl
or
dec
dec
pushf
xchg
push
sbb
xchg
nop
mov
xchg
inc
mov
les
mov
add
imulb
je
movzwl
mov
aaa
inc
pop
ret
popa
ret
push
jns
test
sbb
je
insb
push
xchg
inc
push
flds
push
jg
push
in
mov
test
jne
xor
pop
leave
mov
push
mov
mov
ret
lea
mov
mov
mov
inc
cmp
jne
in
out
mov
push
mov
mov
push
nop
mov
add
scas
mov
mov
xchg
add
out
aas
in
sub
rclb
mov
or
adc
idivl
inc
add
push
mov
push
or
or
ret
push
push
push
mov
mov
mov
mov
pop
mov
rcrb
mov
out
push
or
push
jg
ja
or
ret
and
lea
or
inc
add
sarb
cmp
jne
aaa
sub
fistpll
jmp
scas
sub
jle
mov
cmp
test
pop
aas
js
rcrl
fidivs
mov
fucomip
imull
cmp
jb
mov
add
call
ja
and
dec
pop
mov
aaa
or
mov
adc
out
mov
ret
jmp
pop
mov
add
pop
rol
ja
sub
orb
lock
mov
jl
sub
mov
aam
std
jnp
add
jmp
sbb
sti
jne
shrb
loopne
pop
and
mov
cmp
popl
jge
mov
call
jg
enter
add
and
push
jg
data16
cld
mov
mov
test
je
mov
mov
dec
arpl
test
push
and
add
int
lahf
loop
mov
sub
or
push
lahf
push
fcoms
jne
icebp
add
cmp
dec
popf
cmpl
in
adc
fsubrp
mov
lock
inc
lds
fs
mov
sti
pop
icebp
cmp
faddl
lds
pushf
jmp
outsl
ud0
ja
mov
add
cmp
ja
cmp
mov
imul
sbb
ret
jmp
movl
filds
mov
ljmp
sbb
push
fs
out
mov
or
push
adc
hlt
outsl
lock
pop
mov
mov
and
sbb
repz
loop,pt
mov
sub
or
sahf
loopne
lds
mov
jle
add
or
add
jbe
or
nop
loope
ret
jbe
scas
adc
sti
push
push
mov
icebp
mov
dec
jmp
ss
jae
and
push
xor
adc
xor
or
push
cmp
add
sbb
or
push
jo
sti
sbb
jae
mov
cmp
jae
std
add
pushf
mov
addl
popa
rcll
add
dec
xadd
pop
arpl
clc
mov
aas
or
mov
repnz
shll
cmp
jg
inc
xlat
dec
out
fimull
pop
fs
je
mov
aaa
sbb
xor
push
std
insb
push
push
pop
add
jne
jne
sti
int3
cmpl
movsl
and
push
and
lods
hlt
fdivs
mov
and
out
cli
jge
add
je
add
test
inc
jle
popa
scas
mov
sub
push
stos
mov
xor
mull
mov
mov
popa
dec
adc
ficompl
push
cmpsl
or
fwait
aas
lea
jne
jmp
xchg
jmp
imul
jne
sbb
scas
xlat
js
lret
rolb
cmpsl
sub
inc
popf
adc
push
cltd
xchg
xchg
mov
mov
adc
jecxz
add
ds
mul
out
cmp
jae
mov
out
rorl
xchg
xchg
mov
pop
test
loopne
je
imul
jo
inc
shrl
or
adc
jl
insb
loop
add
sbb
femms
xor
add
aaa
push
push
in
aas
cmp
and
or
cmp
lea
mov
and
adc
xchg
seta
insl
sub
mov
xor
add
imull
cmp
in
mov
jle
mov
mov
les
pop
pop
pop
pop
add
push
ret
cmp
sub
pop
pop
xchg
in
mov
int3
shlb
inc
xor
or
loopne
push
pop
hlt
in
mov
add
or
inc
sbb
imul
add
push
fucomi
or
push
mov
add
or
pop
pop
cltd
and
pop
mov
scas
ret
jne
add
adc
dec
or
add
cmp
pop
test
jns
add
sar
scas
inc
addb
cwtl
mov
jmp
sub
mov
sub
mov
pop
adc
in
pop
sbb
jb
add
or
mov
cmp
shlb
add
pop
cli
call
xchg
lea
cmp
jl
movl
ret
fldl
lahf
daa
adc
or
add
mov
mov
and
mov
or
leave
adc
adc
stos
cmpsb
lcall
or
push
or
push
rolb
xchg
ret
decb
fsubp
mov
xor
adc
je
push
jae
push
add
cmpsl
sub
push
ljmp
ret
aas
add
negb
fdivl
dec
jb
sub
cmp
cmp
movl
mov
fcomip
aad
xor
add
mov
clc
add
and
cmc
jne
mov
bound
and
mov
jbe
adcb
dec
lret
sbb
out
rclb
adcb
or
sub
cmc
jg
or
jg
clc
sub
sub
cmp
jge
out
cmp
push
mov
or
in
sbb
adc
xlat
cld
lea
and
xchg
fnstsw
in
mov
aad
stc
xchg
mov
or
push
in
scas
inc
adc
or
sub
loope
xchg
iret
scas
ja
mov
mov
add
sub
jo
dec
movl
cli
addr16
mov
cmpsb
adc
mov
mov
sbb
cmp
inc
adc
add
add
sub
cmp
or
mov
pop
mov
sbb
inc
adc
adc
movb
cmp
enter
pop
or
popf
push
popa
mov
dec
cld
pop
push
jo
and
lea
movsl
movsl
mov
dec
cs
pop
cltd
cmovl
sub
or
push
push
mov
cmp
popa
js
sub
pop
add
adc
and
mov
js
sub
mov
ja
gs
mov
add
add
pushf
sbb
std
adc
cwtl
dec
sbb
xchg
or
mov
sub
cwtl
add
pop
cmp
stos
pop
int3
rol
lods
mov
mov
or
mov
pop
sbb
cmp
cmpsl
mov
adc
or
aas
mov
div
mov
mov
sbb
lea
jle
adc
filds
insl
lods
jg,pn
pop
mov
pop
je
pop
lahf
adc
or
dec
or
outsb
sbb
pop
jle
lahf
aaa
push
jl
cmp
movsb
sub
cmpl
adc
dec
icebp
add
inc
add
xor
stos
loope
sub
xor
jmp
call
cmpsb
aad
inc
and
xor
mov
repnz
jne
mov
pop
xor
popa
pop
xlat
test
mov
js
pop
jne
pusha
or
jp
sti
clc
stos
jle
inc
cld
jbe
daa
xor
push
push
mov
add
hlt
loopne
pop
or
sti
mov
mov
ret
test
jg
adc
jns
movb
pop
add
scas
shlb
push
or
decl
es
jge
inc
pushf
mov
mov
add
ret
or
mov
in
sbb
jmp
mov
xor
lahf
cmp
jp
or
mov
in
shrl
bextr
mov
push
pop
pop
mov
sbb
mov
cmp
jne
out
or
and
adc
adc
lret
pop
mov
pop
lock
test
jne
test
lock
ja
decl
loopne
cld
add
add
add
mov
mov
or
or
test
popa
jge
xor
lcall
or
ret
cmp
push
ss
sub
in
xorl
add
pop
sub
mov
test
je
inc
jmp
or
cli
add
or
orl
jmp
mov
in
jmp
jmp
js
push
clc
push
adc
xor
dec
adc
mov
and
cmp
and
add
and
shrl
out
mov
mov
mov
sub
jge
push
out
mov
jecxz
cmp
icebp
mov
arpl
jl
push
stos
adc
iret
loope
sbb
notl
mov
jecxz
adc
add
out
jns
cmp
sbb
pushf
xchg
mov
testb
cmpsb
mov
pop
and
sbb
mov
add
add
add
punpckhwd
in
add
sub
cmpb
jl
mov
iret
adc
xor
dec
daa
add
js
add
add
test
mov
push
or
fbld
add
push
hlt
sbb
mov
jge
fadds
lea
mov
sbbb
push
or
mov
xchg
xchg
mov
adc
cmpsl
jmp
mov
jno
add
ret
or
xchg
in
or
add
sbb
pusha
dec
mov
rclb
test
insb
lcall
mov
adc
add
ss
dec
fwait
mov
ret
mov
fildl
cmp
jge
aaa
inc
adc
lret
xchg
dec
sbb
cmp
jo
cmpsb
test
pop
ds
adc
inc
push
or
add
dec
sbb
xor
mov
je,pt
cmpl
mov
test
je
out
outsl
repz
sbb
enter
or
mov
ret
push
jmp
pop
xor
add
mov
inc
bound
shl
out
add
push
mov
push
cmp
jae
dec
sbb
ret
rol
mov
inc
fs
popf
xchg
sbb
or
inc
or
mov
in
or
xor
fstpt
jg
dec
sbb
or
jo
mov
mov
cmp
aas
cmpb
cmp
fmull
xor
loopne
sbb
pop
jne
xor
xchg
fldenv
mov
hlt
icebp
lds
sbb
clc
mov
mov
cmp
rcrl
push
je
jae
sbb
ret
jg
jg
sub
inc
cmc
jl
cmp
jg
add
mov
inc
rep
jmp
mov
dec
shll
jmp
mov
jmp
mov
iret
ret
or
add
mov
push
push
and
sbb
push
out
mull
cld
cmp
ja
je
popa
js
rep
xchg
idiv
out
mov
xor
lea
xor
std
xor
in
or
lcall
jmp
rolb
mov
mov
pushf
add
and
std
icebp
out
cmpb
scas
cmpb
add
out
in
mov
jmp
cmp
inc
sbb
shrb
roll
ljmp
jne
add
adc
adc
fisttps
push
lcall
gs
mov
mov
inc
inc
push
jnp
jge
ja
shl
pop
cmp
test
clc
adc
pop
and
movsl
add
test
jne
push
push
out
aaa
add
or
jmp
mov
jge
sbb
rorl
je
pusha
mov
outsb
repnz
jmp
mov
jp
testb
sti
sahf
push
shlb
add
sbb
cld
scas
data16
jb
cmp
ja
sub
inc
mov
fldcw
push
pop
add
cmp
pop
jae
fwait
mov
pop
scas
in
or
fsts
dec
or
psubusw
fldcw
pop
inc
test
jb
sub
in
mov
dec
inc
ss
rorb
test
lea
push
rolb
push
inc
pop
cmp
dec
add
xchg
std
cmp
jne
push
pop
es
popa
pop
sub
or
sbb
or
pop
push
subl
push
or
lahf
and
divl
mov
in
jle
movl
sbb
test
jge
inc
cmpsl
addr16
xor
or
adc
mov
mov
test
dec
je
add
mov
sbb
mov
clc
movl
daa
cs
add
push
shr
and
lret
lahf
sub
in
cmpb
mov
filds
push
cmpsl
push
push
lea
fdiv
xor
sbb
cmp
sti
pop
icebp
jle
mov
jne
dec
add
pushl
inc
push
inc
inc
out
sub
ja
xchg
push
addr16
fdivl
cwtl
lret
loop
rorl
ficoms
sbbb
test
jg
ljmp
shlb
cmpb
out
push
xchg
sub
sti
fildll
and
nop
dec
jne
jmp
lea
adcl
jmp
mov
inc
push
push
cmp
mov
jmp
cmc
movsb
jo
fstpt
mov
pop
mov
pop
mov
cs
scas
xor
imul
ljmp
lock
leave
mov
lea
ds
adc
cmpsl
mov
sarl
inc
sbb
cld
cmp
jo
push
dec
pop
sub
icebp
pop
das
movb
jg
add
add
jmp
sub
imull
call
in
sbb
fucomi
pop
cmp
in
mov
je
cmp
addr16
push
out
mov
add
push
fs
outsl
cmp
mov
dec
std
jbe
movzwl
and
ret
mov
pusha
inc
cld
imul
push
push
fdivr
push
or
and
bound
les
sbb
shl
jae
sbb
adc
or
push
cld
xchg
and
jne
inc
imul
je
sbb
outsb
sbb
lods
and
clc
call
push
push
pop
push
jae
lock
jo
pop
cmp
aas
mov
bound
iret
les
loope
jge
ret
imulb
cmp
jae
mov
and
loope
push
std
das
push
sbb
lock
adc
xlat
fistps
sti
push
cmpb
outsb
add
jmp
xlat
xor
rorb
jb
cmp
ja
mov
mov
mov
inc
add
loop
enter
testl
loop
inc
xchg
lods
push
mov
cmp
insl
sub
push
lret
mov
inc
inc
and
inc
js
mov
inc
cli
incl
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
fistpll
mov
sbb
add
add
dec
jne
jmp
adc
incl
and
je
mov
cmp
jne
dec
je
mov
cmp
jne
or
loopne
pop
add
pop
cmp
adc
std
jne
shr
shr
sbb
int
test
shr
or
mov
rol
dec
shlb
pop
and
mov
cmp
jne
dec
dec
call
and
xor
push
in
jp
jecxz
pusha
in
pop
inc
or
dec
mov
jbe
and
or
bound
sub
js
sbb
inc
mov
xchg
sub
int
test
std
mov
shl
or
or
rep
mov
inc
pop
fidivs
stos
pop
xor
imul
mov
out
sub
or
or
insb
or
mov
pop
jl
mov
inc
mov
or
mov
cli
add
xchg
dec
push
in
das
sahf
cltd
idiv
sbb
mov
xor
inc
sbb
dec
arpl
sub
adc
push
pop
shrb
push
loopne
lock
mov
or
or
sbb
push
inc
je
mov
jmp
out
pop
sub
fcoms
add
mov
jnp
rorl
andb
mov
mov
inc
push
and
push
push
aam
pop
fstpt
push
inc
or
sti
sti
sti
and
jge
sub
je
and
cmpsl
lret
je
pop
je
xor
dec
and
fdivrs
rolb
and
add
sub
in
sar
or
cmp
ja
lea
dec
add
push
addr16
aas
std
out
int
or
jge
jmp
inc
in
neg
jle
js
pop
sub
jmp
pop
shr
inc
inc
jmp
mov
fists
popa
jb
xchg
and
add
cmpsl
shl
or
aad
lock
push
pop
cltd
pop
xor
mov
idivl
mov
stc
sbb
add
push
imul
inc
mov
dec
jne
pop
das
mov
jbe
pop
and
cmpsb
mov
and
sub
pop
jle
testb
lcall
orl
adc
fldt
and
sbb
jns
sub
je
das
std
xor
in
insb
lock
and
ss
pop
xchg
jge
mov
repnz
xor
sbb
mov
cmp
push
fstp
fldt
outsb
loope
rcr
mov
in
cmpl
jg
aas
mov
pslld
pushf
or
daa
pslld
mov
adc
xchg
lahf
cld
and
sbb
add
aas
inc
mov
mov
lock
sti
out
mov
xchg
sub
xor
out
sub
pop
jecxz
mov
mov
lds
mov
jbe
imul
xchg
mov
mov
mov
bound
cmpb
mov
xlat
fadds
outsb
xor
xchg
push
or
push
push
ljmp
mov
ret
inc
mov
push
pop
test
enter
mov
call
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
fisttps
add
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
sti
iret
decl
js
inc
mov
stos
mov
cmp
or
mov
pop
clc
jmp
jg
mov
imul
divl
jl
xor
cmp
call
mov
mov
jle
push
inc
mov
push
sbb
sarb
repnz
test
decl
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
idiv
jmp
dec
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
addl
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
decl
fsubs
addr16
repz
mov
subb
and
and
jne
pop
aad
bound
xor
jmp
fstpt
pop
mov
pop
jne
push
pop
and
or
rorl
js
mov
outsb
pop
scas
das
push
hlt
movzwl
scas
add
enter
das
xchg
push
xchg
sbb
jne
xor
push
push
std
pop
divb
mov
movl
cmp
clc
add
mov
cmp
subl
mov
loopne
and
shlw
cld
pop
aas
or
icebp
mov
adc
call
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
pop
mov
jae
push
popa
insb
jne
fninit
fwait
push
mov
es
mov
dec
das
xlat
mov
xor
mov
inc
rep
push
or
cmp
push
pop
mov
or
dec
cld
jne
dec
mov
xor
ret
mov
jne
stos
repnz
mov
ss
fmull
rolb
test
sbb
test
pop
js
rcrb
enter
and
pop
cwtl
jbe
rcr
test
or
sub
push
lret
fs
jge
loopne
cmp
pop
sub
jle
xor
xor
pop
mov
or
push
cld
jmp
push
mov
jge
mov
xor
push
shr
dec
rep
pop
aas
ljmp
loop
mov
incl
lods
sub
in
cmp
je
pop
out
jg
testl
mov
mov
pop
sbb
pop
fadds
cmpsl
cmp
scas
lods
icebp
out
decb
mov
sub
inc
or
fsubrs
push
sti
jmp
stc
jl
adc
add
mov
add
lret
orl
call
jmp
xchg
sahf
xchg
negl
clc
pop
push
push
adc
clc
cmp
mov
push
lahf
sub
sub
xor
or
clc
mov
mov
push
mov
push
push
jmp
pop
lea
inc
jecxz
dec
cmp
xlat
dec
setne
cmp
mov
pusha
adc
andl
sarl
das
outsl
icebp
out
cmp
jne
jb
cmp
fisttpll
or
jne
sbb
sub
or
inc
inc
cmp
sbb
mov
add
sub
test
inc
outsl
rclb
rorl
mov
leave
jne
mov
add
nop
push
xchg
jmp
lret
leave
or
decl
push
add
repnz
je
pop
in
negb
pop
add
sub
pop
push
cld
enter
cld
pop
cs
xchg
add
mov
mov
fdivr
jmp
out
mov
mov
mov
xor
mov
pop
jne
das
mov
and
orb
es
les
dec
orb
pop
push
clc
add
cld
aad
or
lds
sti
inc
push
stos
pop
push
icebp
pop
mov
pop
in
popa
lock
xor
decl
je
jns
xchg
adc
outsl
std
add
sbb
add
dec
jne
icebp
fucomi
sbb
add
cmp
mov
xor
jecxz
dec
cmp
and
fwait
mov
lahf
push
pushf
enter
out
push
daa
sbb
pop
repnz
add
out
pop
jmp
push
xor
call
add
dec
mov
push
arpl
hlt
xor
paddw
outsl
jg
mov
mov
mov
movl
ds
xchg
cmp
sub
mov
or
adcl
test
mov
push
clc
sbb
ja
sub
xor
jg
fldenv
cmpb
cmpb
or
cli
in
push
call
push
lea
mov
push
popa
push
dec
mov
in
or
das
add
and
shl
add
or
jae
sub
xlat
pop
push
push
incl
leave
xor
cmpb
je
or
mov
or
mov
sub
and
sbb
xchg
fcmovnu
push
jecxz
xor
adc
loop
fdivl
andb
jecxz
pop
push
or
add
inc
add
jne
sbb
cmpl
mov
adc
outsb
das
jnp
or
or
push
ret
test
mov
inc
test
test
ds
incl
push
je
dec
je
xor
daa
mov
sbb
sub
mov
ja
pop
enter
hlt
leave
or
xor
arpl
lahf
jp
push
or
sti
push
jns
push
clc
add
dec
add
out
test
ret
push
sbb
push
sub
pop
xchg
and
inc
push
mov
add
sub
test
lret
mov
push
sbbb
ret
inc
jmp
xlat
fcmovnu
mov
pop
mov
mov
sub
inc
push
outsl
in
jo
pop
dec
or
add
push
divl
mov
cltd
push
or
inc
loop
adc
pop
add
lds
pop
popf
add
aas
repnz
lock
push
addl
jne
xchg
mov
mov
or
mov
pop
jmp
pushw
aaa
dec
jne
dec
adc
fwait
in
xor
inc
call
out
daa
push
sahf
inc
cmpsb
in
lahf
adc
adc
or
adc
mov
push
sarb
ret
adc
or
dec
mov
pop
mov
arpl
cmp
into
push
jle
cmpsl
test
ret
push
cmp
cltd
subb
or
push
fmuls
ss
push
push
push
push
push
loopne
and
mov
ficoms
mov
sahf
clc
pop
sbb
sbb
or
pusha
add
outsl
xor
jle
ficomps
pop
xorb
adc
adc
adc
adc
mov
std
in
jmp
pop
lods
pop
and
xor
cmp
mov
mov
xchg
xor
std
pop
ljmp
mov
add
and
jg
pop
cmp
push
sub
ds
sub
je
jmp
add
sub
jb
je
jg
stc
imul
push
cmp
cmp
adc
lcall
mov
cmp
enter
leave
jmp
mov
jmp
dec
sar
mov
jmp
push
sbb
into
jmp
mov
mov
sbb
or
lret
cmp
push
or
xor
jbe
inc
mov
jg
sarl
je
push
outsl
jne
cmpsl
push
or
inc
pop
sbbb
aam
cmp
je
add
add
cli
mov
sti
ja
out
push
inc
cli
sub
inc
leave
je
push
cmp
push
sub
jo
adc
dec
xor
mov
inc
or
enter
push
ret
xor
mov
cmp
incl
sti
cmpsl
add
or
cmp
jne
loope
mov
adc
cmp
or
or
jo
fdivr
and
fstpt
dec
mov
inc
ficoms
pop
rcll
out
cmp
or
jns
xchg
fistpl
sbb
pop
mov
lock
and
jl
ds
cmp
jle
add
sbbl
dec
mov
movl
sbb
inc
adc
xor
mov
stos
mov
movb
jne
pop
repz
cmp
mov
push
add
add
add
push
cwtl
ss
jne
pop
pop
pop
out
pop
stos
inc
pop
sbb
mov
dec
add
mov
xchg
or
xchg
pop
xchg
mov
loope,pn
jne
lret
xor
mov
add
mov
daa
incb
leave
mov
pop
mov
hlt
push
sarb
xchg
mov
mov
jmp
sbb
sub
std
dec
lahf
xor
sbb
inc
movsl
test
aas
rcrb
adc
ja
add
or
call
pop
leave
pop
push
cmpsl
dec
rolb
inc
adc
cmpl
cmpl
or
cmp
lea
or
push
push
pop
dec
xchg
xor
inc
pop
ret
mov
xor
bound
adc
push
jns
jge
cmp
or
inc
mov
or
js,pn
fs
cmpb
push
cmpl
lock
rclb
popa
mov
pop
mov
call
and
dec
and
jecxz
mov
nop
loopne
push
jne
jb
addl
jno
fsubrl
add
fwait
inc
adc
sbb
pop
cmp
cmp
push
or
cmp
je
jns
mov
es
insl
call
adc
push
xor
loope
or
lea
cmp
clc
pop
jl
adc
icebp
add
iret
shlb
gs
mov
add
sbb
popl
push
jmp
mov
mov
push
sub
sub
out
movsb
ljmp
mov
mov
push
adc
das
je
jo
rclb
push
push
mov
lods
pop
jg
inc
or
aaa
scas
adcb
stc
inc
cld
xchg
inc
mov
mov
and
dec
cmc
dec
add
lock
div
push
pop
or
push
mov
push
ljmp
xchg
xchg
int
sbb
fstps
out
jg
mov
dec
jl
lock
clc
std
fdivrl
mov
push
sbb
add
and
lcall
xchg
dec
and
inc
jg
jns
andb
jo
je
ret
dec
in
mov
mov
xchg
adc
mov
or
xchg
incb
jle
push
add
loopne
push
adc
pop
movw
inc
clc
ret
pop
and
movl
sub
clc
das
add
mov
sub
aas
mov
cmp
push
mov
aaa
push
jno
arpl
lea
push
sbb
add
mov
add
xchg
push
lea
add
cmp
cld
push
fisubl
pushf
nop
pop
jg
mov
jmp
lea
cmp
push
or
mov
lods
rcl
jl
dec
mov
jbe
int3
and
sub
fistpl
sbb
and
sbb
jge
xor
rcll
inc
push
mov
mov
loope
das
nop
in
and
or
in
pop
push
or
je
add
fdivrl
add
mov
pop
sub
jmp
cmp
pop
sub
and
pop
pop
or
je
push
data16
in
add
pop
jne
cmp
or
nop
push
add
repnz
jmp
rcrl
rcrl
mov
xchg
scas
adc
push
sbb
pop
cld
or
cmp
jl
mov
pop
or
cmpsb
add
aas
push
cmp
sub
dec
sbb
jmp
mov
push
cld
add
cmp
pop
and
fnstcw
and
fsubp
mov
sub
popa
dec
or
repz
je
cmp
mov
shll
add
sub
js
rorl
sti
cld
add
mov
fmuls
daa
mov
lds
push
sbb
jle
inc
dec
clc
mov
mov
jmp
jbe
mov
mov
xchg
adc
or
xor
cmp
jnp
or
mov
gs
dec
jne
mov
fsubs
ja
jge
and
aaa
add
dec
jmp
add
test
and
inc
pushf
sbb
cmp
out
into
pop
dec
jne
mov
inc
jo
and
and
or
loopne
and
lea
jmp
xchg
lcall
add
push
xor
fst
imul
pop
fiadds
and
push
cmp
out
cmp
push
or
cwtl
popf
sbb
jmp
aam
sahf
and
das
cmpsl
push
clc
inc
lock
pop
mov
ret
add
add
je
push
pop
sub
mov
cmc
mov
iret
pop
ja
adc
cmpb
pop
mov
outsl
cmp
push
movd
dec
push
sbb
jl
cmp
jge
sub
pop
sbb
adc
outsb
sbb
and
jmp
pop
test
push
inc
jmp
and
dec
xchg
fs
cmp
lret
xchg
dec
jl
sub
mov
mov
jle
inc
sub
add
lea
inc
dec
sarl
movsb
push
pop
dec
cmp
or
lds
mov
push
mov
mov
sub
xlat
adc
imul
pop
or
xchg
mov
lea
lock
push
add
mov
shr
add
xchg
dec
cld
push
insb
dec
js
mov
inc
and
scas
cli
jae
adc
adc
push
mov
in
pop
aaa
fisttpll
arpl
add
outsl
xlat
ret
cmp
mov
aaa
lock
out
and
sbb
loopne
rorl
das
loopne
mov
lock
jo
cmc
jmp
out
aad
xchg
test
cmp
fiaddl
adc
sbb
or
push
cmp
mov
push
push
push
ss
jnp
nop
push
mov
mov
aam
cmpsl
in
jmp
flds
cmp
aaa
mov
out
stos
out
mov
pop
in
jno
jl
add
cmp
dec
xor
pop
lock
jl
adc
ret
aas
fcomps
inc
push
lock
fsubrs
pop
or
jbe
decl
fdiv
lret
imul
xor
inc
orb
sub
fmuls
pop
add
and
inc
stc
hlt
or
sti
testb
jmp
call
push
cmp
xor
xor
leave
dec
shl
add
sbb
out
cvtps2pd
or
pop
push
inc
mov
dec
mov
jecxz
dec
add
pop
pop
pop
ret
loope
cmp
xchg
pushf
lcall
sub
cmp
push
lods
add
add
xor
sub
xchg
daa
imul
daa
cltd
cmp
and
movsl
jo
mov
leave
xchg
pushf
push
xchg
jecxz
cmp
popf
lds
pop
inc
inc
pop
inc
sub
inc
add
hlt
mov
push
mov
mov
push
shr
jl
push
push
inc
int
push
or
inc
insb
sbb
outsl
or
mov
fimuls
icebp
jle
push
add
or
or
and
or
pop
cld
cmp
je
cmp
lret
cmp
je
mov
dec
add
cltd
clc
xchg
mov
fucomip
inc
adc
or
adc
jmp
jle
scas
xor
aad
push
cs
add
dec
cs
std
gs
pop
adc
cmp
pop
jmp
cmp
adc
pop
fimuls
xchg
push
jmp
lahf
inc
pop
xlat
cmp
cltd
out
call
push
sub
xchg
enter
xor
dec
cmpsb
sub
add
pusha
pop
imul
outsl
fisttps
mov
inc
xor
pop
in
jb
and
cmp
addr16
cmp
push
pop
enter
inc
sub
jmp
inc
sti
mov
inc
or
sub
push
test
lock
sbb
jmp
add
adc
xchg
daa
inc
cwtl
or
cmp
jg
adc
shll
pop
mov
push
lcall
pop
outsl
jp
jns
dec
mov
xchg
pusha
sub
inc
xor
sbb
inc
xorb
add
inc
cwtl
xor
mov
pop
inc
push
sbb
push
dec
enter
or
sbb
es
icebp
loope
cmovno
lea
outsl
cld
insl
dec
clc
pop
jmp
add
sarl
add
nop
clc
shll
mov
cmp
repnz
xor
or
je
or
mov
push
je
jo
adc
loope
cmp
mov
pop
or
in
xor
in
push
jmp
and
cmpl
int3
insb
lea
mov
mov
js
jno
pushl
sti
arpl
mov
cmp
cs
mov
in
push
mov
jns
xor
mov
in
sbb
and
vmread
dec
dec
jne
hlt
add
sarb
mov
insb
and
mov
jns
addr16
inc
push
popa
jge
inc
push
sbb
loopne
jmp
and
cmp
inc
mov
sub
ja
int3
jmp
cmp
dec
xor
data16
loop
adc
dec
xor
add
daa
or
ja
fcomps
sti
add
add
inc
ljmp
push
and
mov
aaa
cmp
add
jns
loope
in
lret
push
in
adc
mov
out
es
adc
in
pop
and
rolb
nop
push
add
iret
je
xchg
push
or
xchg
inc
inc
pop
fimuls
xchg
jno
mov
cld
and
mov
pop
jbe
loop
scas
push
pusha
aas
sub
cmp
les
push
das
mov
out
and
mov
mov
iret
in
or
rorl
pop
pop
ret
xchg
hlt
push
add
lock
sbb
dec
or
push
or
mov
les
mov
stos
dec
inc
inc
cmpb
mov
mov
mov
sub
inc
jmp
mov
sub
mov
inc
and
sub
xor
xor
pop
sub
sbb
xor
jo
cs
gs
sub
inc
pusha
jns
jg
in
ret
or
psubw
jb
cmp
addr16
cmpsl
mov
and
sti
push
xor
sbb
aaa
jmp
push
negb
fcoms
inc
jmp
jl
andl
push
sub
jbe
jmp
jg
mov
cltd
pop
cld
add
adc
movsb
popa
sbb
loopne
lsl
adc
xchg
add
sbb
or
or
hlt
inc
xor
ljmp
cs
mov
adc
std
rcl
add
ficoml
sub
jae
sub
dec
rcll
adc
adc
or
das
jg
ret
or
call
inc
jo
adc
nop
sub
mov
sub
or
incb
xchg
shr
setl
cmp
je
dec
add
cli
inc
movsl
rorb
push
shll
lea
arpl
dec
push
dec
dec
cltd
push
lahf
outsb
decl
into
push
fisubs
add
loopne
popf
jp
inc
repnz
pop
add
push
psllw
pop
mov
movsb
sbb
lods
jl
dec
pop
lock
shl
shr
pop
push
pop
inc
add
movb
test
or
mov
xorl
dec
jle
mov
dec
in
in
cmp
je
pop
jnp
mov
and
nop
add
mov
cmp
jge
adc
xor
cld
out
and
imul
lock
add
outsl
cld
lea
mov
inc
mov
pop
decl
stos
mov
lock
in
xchg
jge
neg
or
push
in
test
cmp
rorb
push
int3
imul
dec
push
dec
arpl
mov
add
add
jl
cmp
in
mov
lock
test
loope
cmpl
jge
add
cltd
or
xchg
dec
jns
push
clc
jno
and
add
or
add
pop
adc
sti
mov
dec
jne
enter
mov
and
test
lahf
inc
lahf
xor
lock
jne
jp
pop
sahf
xlat
add
inc
mov
pop
stos
and
inc
pop
pop
ret
pop
sbb
push
push
mov
dec
icebp
lret
clc
out
pop
pop
jae
aaa
decb
in
sbb
and
jb
cmp
xor
inc
jecxz,pn
negl
mov
je
movsl
jnp
jne
sysret
cwtl
sub
icebp
mov
pop
or
add
add
cltd
int3
xchg
xor
jno
repz
mov
push
inc
pop
sbb
dec
in
je
jmp
aam
xchg
ret
jmp
mov
mov
test
cmp
jne
mov
or
mov
push
clc
jno
jg
adc
hlt
push
adc
inc
push
sbb
or
add
push
loop
rcr
pop
js
adc
cmp
pop
pop
inc
aam
lret
cmp
cmp
fnstcw
int3
js
pop
jne
add
dec
sub
mov
jne
ds
test
pusha
and
push
mov
aas
std
movb
fisubrs
mov
inc
add
dec
mov
sub
add
jbe
lock
cmp
inc
push
push
gs
stc
mov
mov
sub
std
sbb
ljmp
aas
loop
jge
cmp
lea
jg
cmp
test
fs
mov
push
push
mov
lea
add
cmp
dec
hlt
call
mov
jb
gs
xor
cs
insb
sub
jg
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
outsl
fcoml
into
loopne
sbb
jbe
imul
add
mov
add
mov
cmp
and
adcl
add
dec
xchg
mov
mov
adcl
packuswb
inc
clc
data16
jns
push
mov
or
repnz
jecxz
push
or
mov
sti
and
push
test
add
sub
inc
cmp
jecxz
jge
push
aad
push
loope
out
jmp
hlt
das
mov
imul
dec
cmpb
stos
pop
jne
sbb
cmp
jne
adc
inc
adcb
icebp
add
shrl
rcrb
sbb
add
xor
push
je
das
outsl
repz
xchg
imul
imul
outsl
data16
popa
jb
mov
mov
jae
aaa
subl
incl
pop
adcb
dec
js
dec
cwtl
ds
sbb
jno
xchg
lret
mov
xor
push
loopne
add
mov
inc
mov
xor
fdivl
jp
mov
pop
lea
pop
add
adc
add
add
mov
inc
and
into
psubd
add
mov
jnp
mov
in
cmp
pusha
mov
cmp
dec
inc
dec
add
or
inc
cmp
xchg
mov
outsb
pop
icebp
jne
fwait
mov
xchg
shrb
or
int3
pusha
stos
jns
mov
clc
inc
clc
psrlq
add
jg
jno
mov
pop
mov
cmp
jne
adcb
or
cmpsb
int3
fiaddl
ret
pop
ror
pop
mov
call
sub
push
add
test
adc
mov
mov
sbb
inc
imul
push
sbb
push
inc
aaa
sub
adc
mov
mov
adc
outsb
cmp
mov
pop
pop
ret
sbb
jo
sti
mov
push
in
jns
sub
pushf
test
mov
dec
adc
lret
dec
xor
sbb
xor
add
fmuls
mov
dec
test
cmp
fists
or
shrl
jp
xlat
mov
inc
icebp
mov
mov
and
call
icebp
sbb
movzwl
inc
cmp
ja
mov
inc
jmp
cld
push
jmp
cmp
pop
add
pop
cld
ja
fcmovb
jmp
decb
lret
loopne
sbb
adc
and
sbb
and
lret
test
xor
cmp
lret
mov
dec
popa
rolb
jge
cmp
jae
lods
jb
or
add
cmp
dec
movb
and
sbb
add
dec
jbe
pop
add
cmp
lea
add
ret
lock
fs
mov
pop
out
lock
ljmp
add
out
cld
test
sbb
ret
or
inc
test
je
in
mov
aas
or
enter
and
mov
xor
mov
and
cmp
jne
scas
movb
and
or
mov
pop
jecxz
mov
dec
dec
cld
mov
int
mov
or
inc
fwait
xlat
or
cmpb
xorb
adc
dec
cmp
add
lret
shl
and
inc
inc
mov
ret
cmp
jnp
xor
ffreep
sbb
push
sbb
or
jb
mov
sbb
leave
push
adc
hlt
aam
scas
loopne
fs
loopne
adc
bound
je
adc
into
lea
cmpl
sarb
idivb
in
push
pop
pop
cmp
push
in
mov
dec
outsl
jmp
aad
xorb
stc
xor
push
dec
mov
loopne
or
push
sbb
aas
gs
popf
pop
ret
dec
aad
test
fsubs
cmpsb
or
cld
cmp
in
inc
dec
enter
sarb
and
jns
cmp
gs
xchg
mov
cmp
and
daa
idivb
fdivrl
clc
lahf
test
mov
jmp
adc
sti
stos
cmp
mov
sub
add
mov
rcrb
inc
dec
add
lock
mov
add
sarb
xchg
mov
out
pop
jg
adc
and
push
lea
push
push
nop
test
xor
and
mov
push
lock
scas
cmp
and
adc
lock
daa
sbb
jecxz
out
test
incw
mov
sbbb
mov
call
orb
jl
mov
xor
subl
push
stos
lea
ss
xor
addb
push
es
cmp
hlt
es
test
daa
sub
fnstenv
out
sahf
cmp
adc
sub
pop
lock
js
inc
dec
add
mov
cmp
mov
cld
dec
jg
sbb
cmp
jbe
fimuls
stos
shl
and
lods
mov
push
sub
invd
std
dec
cld
sbb
mov
fs
inc
xchg
pusha
subps
lret
sub
push
xchg
outsb
pusha
xchg
icebp
pop
mov
mov
les
inc
scas
mov
adc
out
scas
cmp
or
jmp
mov
push
push
movsb
sub
mov
leave
jne
mov
jns
inc
cld
or
push
pushf
lret
add
mov
dec
sahf
and
ret
mov
faddl
sub
fstpl
mov
shrb
cmp
or
mov
jl
xor
cmp
mov
popa
and
sub
cmp
xchg
loopne
cmp
push
push
or
mov
or
inc
add
jbe
add
push
inc
lahf
xchg
into
mov
add
push
or
xor
in
cmp
je
mov
add
xor
add
sbb
and
outsl
fs
gs
daa
gs
adc
adc
icebp
aas
jnp
mull
insb
adc
imul
outsl
arpl
out
mov
popaw
jne
je
dec
outsl
je
addr16
mov
outsb
popa
lea
gs
outsl
inc
arpl
or
out
ficoml
or
or
xor
mov
outsl
insl
bound
outsl
js
imul
ja
nop
cld
lock
cmp
andps
outsb
dec
inc
xor
je
sbb
arpl
add
test
or
js
xchg
orl
insb
loopne
push
sbb
fcom
rcrb
fs
inc
int3
enter
inc
push
sarb
mov
inc
push
sbb
mov
pushf
cwtl
xchg
nop
sbb
mov
push
cmpb
push
sbb
inc
push
sbb
pusha
push
sbb
pop
push
push
sbb
dec
dec
inc
fs
inc
push
inc
cmp
nop
inc
push
sbb
sub
push
sbb
and
sbb
sbb
sbb
or
add
leave
inc
push
add
xchg
clc
and
in
orl
call
xor
and
aam
xor
and
and
and
lods
orl
test
mov
and
and
and
pop
sbb
or
enter
clc
hlt
sbb
lock
call
in
fcoml
aam
inc
push
sbb
les
sbb
mov
nop
inc
mov
test
nop
inc
push
movsb
mov
sbb
sbb
test
sbb
jl
je
fs
inc
jo
push
fs
pop
nop
inc
push
sbb
push
inc
push
sbb
inc
push
sbb
cmp
xor
fs
inc
xor
fs
inc
push
and
sbb
inc
push
sbb
adc
inc
push
sbb
add
jb
nop
add
xchg
clc
movsb
xchg
fs
inc
dec
mov
push
sbb
mov
jl
je
sbb
insb
push
push
pusha
pop
pop
nop
inc
push
sbb
inc
push
sbb
inc
push
sbb
cmp
sbb
sub
and
nop
inc
push
and
nop
inc
push
sbb
or
push
sbb
add
enter
clc
hlt
lock
and
and
popa
orl
ror
mov
enter
sbb
mov
inc
push
lods
test
nop
inc
push
sbb
sbb
mov
sbb
test
inc
js
jo
nop
inc
push
insb
push
xchg
pop
pop
and
dec
and
inc
orl
cmp
xor
or
enter
and
enter
sbb
enter
adc
or
orl
add
push
sbb
in
xchg
clc
hlt
lock
in
call
push
loopne
fcoms
ror
inc
push
sbb
rolb
fs
mov
fs
inc
lods
test
fs
inc
push
mov
push
sbb
mov
jl
je
sbb
insb
push
push
pusha
pop
pop
nop
inc
push
sbb
inc
push
sbb
inc
push
sbb
cmp
sbb
sub
and
nop
inc
push
and
sbb
mov
rol
loop
or
inc
dec
popf
mov
pop
mov
inc
jo
pop
fmuls
mov
jno
add
sbb
or
jge
test
nop
xor
lock
mov
sar
push
cmc
movswl
out
inc
inc
add
inc
and
outsl
jge
out
xchg
mov
stc
and
jmp
cvtpi2ps
pop
leave
punpckhdq
fs
lahf
adc
mov
or
mov
push
pop
pop
or
dec
shll
and
pop
or
push
push
adc
mov
mov
xor
pop
scas
cmpsb
push
push
sbb
push
sub
ss
sahf
push
add
pusha
jo
test
pop
mov
mov
mov
push
lods
pop
pop
sbb
pop
xchg
push
pop
pushf
push
outsl
add
fs
or
cltd
in
iret
inc
or
inc
pop
or
sbb
repnz
sbb
gs
cmp
sti
jg
and
push
dec
inc
inc
dec
add
outsl
jecxz
push
into
mov
aaa
and
dec
pop
inc
push
dec
pop
and
jg
rorl
pop
sub
push
inc
dec
pop
dec
dec
dec
and
rcr
inc
push
das
push
jmp
enter
js
jb
pop
outsb
and
sub
jl
lock
icebp
repnz
repz
cmc
testb
and
clc
stc
xor
and
and
and
loop
or
enter
out
xor
and
call
sub
in
enter
in
out
out
and
rolb
aam
or
enter
fnstenv
enter
fcmovnu
enter
fstp
fbld
orl
rol
or
enter
or
enter
leave
xor
and
and
and
mov
or
enter
mov
xor
and
and
and
and
mov
mov
xor
and
and
xchg
or
dec
dec
jp
dec
push
enter
sbb
cld
insl
pusha
or
push
inc
imul
cmp
jg
or
popa
jb
push
cmpsb
mov
dec
pop
cs
fadds
jb
and
push
das
ljmp
push
stc
mov
xchg
pop
add
or
arpl
je
outsl
outsb
clc
or
and
fmull
loopne
lock
jmp
fs
rorl
ds
mov
std
pop
and
outsl
jb
nop
mov
mov
enter
js
inc
dec
lea
nop
adc
mov
xchg
out
push
ds
jnp
inc
in
add
decl
je
dec
gs
imul
mov
pusha
cmp
pop
or
test
fisttpl
mov
enter
xchg
popf
pop
pop
outsl
add
jmp
dec
mov
ds
jl
fidivl
cmpb
or
xor
push
sbb
scas
fdivr
mov
or
imul
outsl
nop
sub
xor
ss
jg
popa
outsb
mov
adcl
lods
stc
jb
insb
outsl
ja
mov
movsl
lock
mov
nop
cmp
scas
ds
stc
incl
in
jle
outsb
jbe
insb
imul
sub
insb
jle
gs
scas
or
inc
enter
jns
lock
inc
orb
adc
or
fs
pushf
scas
jo
add
shrd
rol
push
outsl
imul
loopne
ds
or
mov
arpl
xorl
inc
dec
mov
scas
mov
add
inc
je
xchg
adc
loopne
scas
clc
jae
push
adc
or
insb
push
adc
je
push
jb
insb
movsl
nop
push
scas
push
cli
add
nop
les
les
fidivs
nop
insb
inc
xlat
sbb
cmpsl
addl
aam
bound
test
adc
xchg
fs
mov
fmuls
out
js
inc
mov
imul
xor
mov
test
data16
nop
sbb
imul
push
stos
cmpsl
mov
lods
inc
push
or
fisttps
sub
arpl
add
mov
icebp
cs
xor
dec
dec
pcmpgtb
dec
out
inc
cmp
je
or
lcall
icebp
jg
adc
push
push
faddl
jne
int3
add
jns
insl
clc
ror
psrlw
fsubl
fldl
xchg
js
aam
ss
aam
sar
fildl
in
xor
shll
in
incl
sbb
push
loopne
sbb
mov
xchg
add
xor
mov
push
fists
and
dec
jne
push
mov
pop
ret
mov
fld
or
or
lods
outsb
arpl
cmp
fcos
inc
fiaddl
jge
shr
testw
repz
add
push
dec
mov
mov
cs
pop
ret
shll
jb
ss
aas
mov
js
adc
js
daa
test
les
add
aaa
sbb
jg
pop
push
push
in
mov
adc
or
mov
mov
mov
call
ret
int3
dec
scas
or
push
adc
fdivp
mov
mov
fldl
addr16
cli
imul
fadds
add
test
jge
mov
xchg
jle
int
push
inc
inc
dec
jmp
and
inc
pop
xor
xor
add
or
xor
daa
mov
cmp
jbe
aas
inc
jnp
leave
repz
je
movzbl
pop
push
cmp
xchg
sbb
lret
loopne
sti
loop
js
repz
jne
mov
mov
inc
inc
aas
push
mov
sub
or
add
mov
jmp
out
std
out
out
and
sti
je
loope
out
sub
pop
movsb
lods
pop
inc
or
mov
lret
jp
cld
call
push
lret
add
pop
adc
xor
imul
sbb
or
mov
bound
cwtl
pop
pop
les
fstpt
adc
neg
mov
sbb
sbb
daa
jo
or
subb
inc
sbb
sub
jns
cmp
in
push
jp
push
adc
and
call
lock
repz
cmpb
jbe
cmp
test
xchg
pop
dec
sub
add
aaa
clc
imul
lret
inc
cmp
cmpb
lcall
shrb
mov
mov
push
mov
nop
pop
fs
and
add
sub
push
push
cmp
jne
push
inc
push
mov
fdivr
out
outsl
mov
jmp
sub
adc
inc
das
and
adc
subl
dec
sub
cmp
fisttps
std
add
mov
dec
mov
or
sahf
sub
cld
and
in
loopne
add
call
mov
push
mov
mov
or
in
add
xor
add
mov
dec
imul
in
jae
clc
mov
xchg
push
and
fildll
push
cmp
mov
jbe
cld
jbe
cmpsl
mov
je
or
je
pop
sbb
pop
inc
cmpb
cmp
cs
or
inc
jmp
ja
mov
sbb
sbb
mov
or
insb
jno
scas
pop
data16
ja
lea
cltd
cmp
in
cmp
clc
adc
cmpsb
ss
xor
or
sbb
fwait
xor
lea
outsb
mov
jmp
add
pop
or
out
loopne
push
sbb
cmpb
xor
dec
add
push
dec
cmp
pop
int
add
push
jo
or
jmp
ljmp
pop
jno
xchg
popf
mov
in
cltd
push
sbb
mov
xchg
aaa
test
cs
decl
sbb
sub
je
jae
cmp
push
aam
cmp
mov
push
jnp
push
insl
adc
je
push
add
int
jae
inc
dec
jne
shlb
hlt
scas
cmpsl
out
or
jne
sarb
test
fwait
lock
cs
inc
dec
mov
ret
mov
shl
icebp
dec
sar
and
cmp
jb
sysret
mov
std
sar
std
ljmp
jbe
add
mov
sub
jmp
add
dec
jne
arpl
out
mov
sub
xor
push
outsl
cwtl
rol
roll
mov
xor
mov
add
mov
negl
subl
fisubrs
movb
dec
inc
ret
cmpsl
mov
add
add
adc
mov
fs
push
dec
xor
fildll
fistps
mov
faddp
add
add
sub
add
rorl
fdivr
addl
lea
add
push
sub
loopne
jae
bound
ret
ffree
ffree
ffree
pop
aad
loopne
sub
add
push
subl
frstor
push
push
or
cmp
pop
pop
cmp
mov
push
push
mov
mov
and
or
and
bnd
xchg
cwtl
sbb
aam
out
ss
mov
mov
shl
popa
or
adc
in
out
fidivl
imul
scas
sbb
push
mov
pop
hlt
lea
data16
popa
xor
inc
and
lods
pop
popa
inc
inc
je
or
adc
test
and
mov
push
addb
in
jmp
inc
add
jo
mov
push
mov
or
icebp
adc
adc
dec
mov
mulb
aaa
sbb
repnz
and
cltd
cwtl
popl
sbbb
lods
fimuls
fdivs
dec
adc
test
jl
inc
or
push
inc
loop
adc
nop
push
cmp
add
cmpsl
mov
jo
daa
mov
xchg
or
lahf
xchg
sbb
cld
pop
call
insl
lock
xor
insb
setne
aas
ss
divb
pop
dec
pop
jg
pop
addr16
fidivrs
movb
and
nop
movsl
jno
add
pop
jp
xor
out
out
xor
mov
in
icebp
fsubs
out
test
unpckhps
mov
aaa
jmp
and
cmp
arpl
cld
mov
mov
or
xchg
clc
or
xor
add
out
sar
incb
ja
mov
and
ja
push
sbb
and
sub
fimull
lods
stc
mov
mov
fs
sahf
adc
mov
inc
jae
outsb
push
push
pusha
xlat
adc
orl
mov
mov
stos
scas
xor
ds
pop
pop
push
test
cmp
je
xor
daa
pop
ss
movb
sbb
ret
das
into
adc
cmp
sarb
fidivl
cmpsb
jg
or
or
mov
sahf
xor
mov
cmp
mov
enter
pop
push
jb,pn
ja
and
adc
sub
mov
inc
add
cli
cli
push
cmp
nop
adc
ss
loope
pop
data16
lea
mov
mov
lods
add
daa
loopne
inc
lods
lods
ja
sub
push
adc
push
mov
lock
pop
inc
cmp
dec
sbb
mov
lea
mov
adc
adc
daa
pop
clc
not
and
mov
aam
mov
out
push
push
js
add
adc
xorl
adc
mov
xchg
pop
je
jae
daa
pcmpgtd
mov
call
pop
mov
cmp
data16
aaa
push
xchg
aas
pop
cltd
js
outsl
xor
sarb
je
jmp
decl
and
push
jnp
test
sub
sub
sbb
lds
sbb
adc
push
dec
repz
das
and
pushf
xchg
fmul
pushf
xchg
pop
sbb
fwait
inc
test
push
lea
sub
sbb
pop
cmp
pop
mov
cmp
fmuls
sbb
jne
push
jg
pusha
sbb
dec
xchg
jno
mov
dec
ret
bound
push
loopne
pop
dec
mov
nop
lcall
nop
ret
hlt
call
mov
push
pop
hlt
clc
cld
and
imul
insl
clc
sbb
ss
aas
inc
call
inc
sub
insl
aad
mov
sar
mov
add
lock
adc
adc
push
jge
xchg
pusha
shll
in
rcr
add
pushl
daa
mov
mov
pop
inc
lds
jmp
in
xchg
jp
mov
sub
adc
dec
not
mov
and
lret
pop
pop
enter
rcrl
ret
insb
call
rorb
add
add
lret
fldcw
mov
mov
testb
mov
mov
adc
aaa
roll
shl
iret
push
ds
jg
jb
mov
xor
xor
repz
mov
mov
popf
mov
xchg
and
mov
dec
popa
pop
cmp
cli
ss
lock
ljmp
subb
lret
pop
mov
rorb
mov
xchg
dec
xor
add
add
xchg
and
repnz
gs
inc
adc
add
jae
mov
dec
je
mov
mov
pop
sub
jbe
sbb
or
mov
mov
push
add
loop
push
mov
jne
jo
push
and
sbb
aam
pop
pop
orl
sbb
pop
jo
sub
push
or
pop
jl
xchg
mov
das
inc
sarb
xor
xchg
into
xchg
test
dec
sbb
lea
jbe
sahf
jg
cmc
push
mov
sti
pop
jbe
mov
or
rorl
pusha
cmp
jne
or
fldl2e
les
add
cmp
clc
lret
dec
cmp
and
and
and
testl
sub
mov
jl
cmpl
sbb
mov
sbb
daa
idivl
aaa
xchg
push
cmp
pop
mov
jg
fwait
mov
aaa
add
clc
adc
mov
stos
loope
ret
push
loope
or
jne
xchg
sub
dec
fildl
sti
sub
jmp
dec
jg
call
add
sub
in
std
mov
cmp
das
hlt
and
lods
jmp
jecxz
movsb
fisttpll
sub
sub
mov
xchg
jne
repnz
or
inc
fildl
sub
jbe
xlat
lret
shrl
xchg
pop
mov
rep
xchg
add
imul
cmpl
push
mov
xor
sub
mov
call
cmc
mov
xor
cmp
ja
imul
clc
sub
movzbl
add
and
in
dec
inc
mov
repz
pop
mov
fsubp
std
or
repz
add
rol
or
sar
out
mov
push
pop
pop
jne
lea
out
clc
fisttps
jmp
lcall
mov
jp
jecxz
cmp
scas
pop
hlt
pop
es
ret
xor
push
inc
in
xchg
and
roll
push
outsl
cmpsb
aad
mov
fcompl
incl
sub
xchg
mov
push
sbb
or
into
mov
imul
nop
mov
mov
jl
xor
and
jne
or
ret
sbb
add
mov
outsb
pushl
or
fs
jmp
xor
inc
inc
add
jo
in
and
jmp
mov
pop
xchg
jmp
mov
cld
aas
jnp
popa
and
cld
call
pop
jns
inc
out
in
mov
ja
inc
jg
mov
dec
fdivl
popf
mov
popa
or
std
xorb
mov
rcrl
cltd
movsl
ds
leave
add
push
nop
lods
out
ret
lds
add
jnp
je
mov
or
repz
xchg
add
adc
dec
jge
dec
clc
push
jnp
add
adc
cmp
jbe
mov
fdivs
jne
xchg
adc
aad
clc
inc
fdivrl
pop
mov
add
push
loopne
mov
inc
iret
dec
dec
jo
jmp
movsb
mov
xchg
ret
xor
and
pop
sahf
lret
mov
pop
adc
ds
or
xlat
ljmp
hlt
test
bound
inc
sarl
out
mov
sub
jns
mov
mov
test
jg
arpl
xor
shlb
sub
mov
lds
nop
test
cmp
insb
jge
sbb
lea
insl
add
dec
movsl
mov
cmp
jl
jmp
add
add
cwtl
cs
xchg
xor
push
lea
hlt
sub
scas
hlt
ret
push
lea
inc
ret
iret
push
xor
stos
or
add
pop
jge
mov
neg
cld
sarb
jmp
or
leave
mov
stos
xchg
push
mov
xchg
mov
das
std
dec
pop
gs
mov
inc
dec
xchg
sbb
or
jg
dec
mov
stos
cmp
jne
pop
pop
out
mov
jb
mov
mov
fwait
sti
mov
test
hlt
mov
repz
pop
add
lods
adc
xchg
jge
cmp
icebp
test
mov
adcl
pop
insl
daa
jo
add
sarb
xchg
push
dec
xchg
js
jge
movzwl
sub
ret
sbb
adc
lea
mov
jl
inc
ljmp
adc
mov
je
add
or
mov
add
div
jle
lea
sbb
call
mov
inc
test
cld
jno
xor
lahf
pop
add
xchg
inc
scas
dec
dec
inc
dec
inc
dec
lods
or
lahf
push
fidivl
dec
xchg
jge
push
jne
mov
jno
ret
std
mov
aam
dec
scas
loope
adc
stc
std
jl
pop
sbb
xlat
fisttps
jg
je
mov
stos
neg
sbb
stos
jmp
inc
fdivp
sti
ss
mov
loop
push
adc
push
pop
dec
jmp
testl
mov
mov
lcall
add
mov
sub
add
leave
ficompl
mov
mov
pusha
insl
pusha
jo
mov
cmp
mov
shlb
scas
je
mov
dec
pop
push
push
mov
repz
inc
test
jne
sbb
mov
testl
call
lret
add
je
inc
jne
pop
xor
dec
jne
ret
xchg
repz
or
repnz
mov
sub
lock
adc
mov
incb
or
je
push
push
cmp
xlat
add
xchg
add
or
pop
pop
inc
loop
push
mov
add
test
fcomi
ret
and
inc
add
and
and
adc
and
sub
inc
sub
sub
pop
mov
and
sub
sub
fs
sub
sub
sub
pop
mov
cmpsl
loopne
enter
out
dec
je
xchg
in
mov
xchg
xchg
fwait
adc
outsl
xchg
or
cmp
cli
and
inc
push
lret
adc
cmpl
add
movb
sub
jp
test
jne,pn
imul
and
jmp
out
pop
hlt
xor
fabs
push
adc
pop
frndint
rcr
scas
nop
push
out
push
or
fstps
testl
fidivl
idivb
fbstp
lea
mov
inc
sub
xchg
shr
addb
js
in
add
push
cmp
xor
stos
hlt
mov
jge
jns
fwait
mov
cmp
movsl
sti
dec
pushf
or
cmpb
jb
movb
addr16
or
cmp
jmp
or
add
enter
cmp
out
add
inc
xor
push
or
shr
mov
xlat
pop
imul
xor
cmp
pushw
adc
mov
push
rorl
je
and
aad
add
or
in
jg
lock
push
inc
sub
mov
loopne
sti
packuswb
jae
dec
add
mov
fildll
ret
xor
cli
insb
jmp
cmp
outsb
js
fidivl
fwait
mov
ja
jne
insb
hlt
pop
jg
and
jne
dec
sub
cmp
jg
cmp
inc
or
ljmp
cmp
add
enter
cmpb
divl
cmp
cmp
pop
jmp
mov
sbb
mov
and
mov
sub
js
xor
mov
fyl2x
fwait
cli
sub
add
xchg
pop
mov
cmp
cs
aaa
lods
or
icebp
data16
jne
inc
sbb
dec
and
sub
sti
inc
jne
inc
push
sub
cwtl
jne
mov
jno
add
sahf
add
push
mov
adc
aas
jmp
fstpt
push
push
aas
add
mov
sbb
inc
push
xor
push
insl
sub
mov
int3
paddd
push
sbb
cmp
jae
fimull
cmpsb
arpl
add
mov
insb
jo
inc
negl
daa
push
mov
pop
cld
push
inc
imul
pop
cmp
xor
or
add
inc
cs
sub
sbb
iret
cmp
movsb
dec
pop
inc
js
push
sar
filds
xor
add
mov
push
jmp
movsb
lahf
sbb
adc
data16
insl
add
fwait
pop
push
sub
out
add
jge
or
inc
or
adc
adc
cli
neg
xor
test
adc
pop
xchg
sub
and
jecxz
adc
repnz
out
in
or
push
sbb
or
cmp
inc
lahf
xchg
add
stc
inc
aad
jae
sbb
sbb
inc
addr16
add
push
lods
pop
push
imul
adc
in
add
or
movsl
xor
das
mov
fwait
push
add
pop
dec
push
lret
adc
fbld
rolb
in
sti
pop
push
sbb
test
call
fldcw
sbb
mov
cmc
outsb
push
xchg
hlt
pop
pushl
add
popf
popa
jp
mov
fisttpl
pop
outsl
inc
jl
mov
popa
push
cmp
in
out
and
xlat
and
call
pop
mov
roll
inc
scas
and
fldenv
mov
inc
dec
testb
add
push
mov
test
roll
idiv
add
inc
xchg
clc
movsl
jg
add
lea
ja
mov
incb
jb
ja
and
push
jb
or
jb
sti
insb
sti
cmp
xchg
push
sti
pop
inc
ja
adc
push
orb
pushl
add
inc
dec
jne
sub
dec
mov
aas
inc
mov
imul
or
repnz
aas
pusha
ds
add
popa
mov
adc
ret
or
inc
and
cmpsl
loop
clc
mov
and
std
nop
jae
and
pop
xor
jl
call
inc
and
dec
in
test
jg
mov
xchg
inc
sahf
cmp
clc
hlt
add
add
adc
or
inc
cmpsl
dec
out
lock
mov
cmp
add
inc
add
dec
pop
jecxz
mov
jge
shl
lock
lods
mov
xchg
mov
add
or
dec
lock
imul
aam
test
pop
jmp
loopne
aaa
pusha
xchg
cmp
xchg
jp
pop
xchg
cwtl
mov
jnp
push
cmp
ret
jns
sbb
enter
insl
pusha
jecxz
repnz
jnp
cmp
jb
adc
sub
fists
add
sbb
sbb
ja
pop
cmc
and
stc
xor
bound
aas
jo
das
lret
jbe
or
rcl
add
ret
and
push
cmp
addr16
stc
xchg
inc
rorl
addr16
pop
sub
push
or
pop
push
sub
repz
push
lret
fwait
out
cmp
push
adc
pop
faddl
add
scas
sbb
lret
mov
loopne
mov
xchg
and
mov
mov
add
jne
cltd
cld
js
mov
fcmovb
sbb
lods
add
in
and
lea
sbb
cwtl
xor
aam
or
insb
add
adc
add
add
imul
loopne
in
jns
xchg
icebp
dec
js
fstpl
lods
add
test
push
push
mov
mov
rcrb
mov
push
pop
inc
mov
rorl
or
sti
je
neg
sbb
pop
inc
hlt
out
push
cmpb
jne
fwait
jge
mull
push
lea
or
xchg
repnz
insl
cwtl
js
movb
jae
jecxz
mov
mov
jge
call
ljmp
pushf
pop
call
push
call
aam
dec
pop
lret
mov
lret
aad
jmp
pushf
xor
out
repnz
pusha
push
dec
push
sbb
push
and
push
jae
sbb
fdivrl
adc
xchg
push
mov
add
dec
xchg
ret
outsl
mov
je
or
sub
xchg
out
sbb
pop
cmpl
sub
mov
sbb
mov
imul
xor
adc
xchg
mov
ret
sbb
sub
dec
nop
and
inc
imul
fsubl
jbe
xchg
pop
mov
in
ret
ret
sbb
test
jg
nop
sysret
stc
int3
fsubrs
loope
ret
mov
push
imul
xor
push
or
movl
testb
jns
add
add
add
pop
sbb
mov
mov
fadds
nop
insl
mov
mov
mov
pop
jge
push
pop
incl
aaa
lcall
movsb
cmp
adc
sbb
imul
sub
loopne
or
cmp
insb
repnz
add
mov
inc
mov
push
fldpi
dec
mov
pop
cmp
jne
mov
xor
lahf
icebp
pop
dec
xchg
fisubs
push
mov
xchg
test
scas
or
clc
or
or
jle
add
add
or
or
loope
dec
or
or
xchg
push
les
cmpsb
icebp
push
scas
add
ss
mov
xchg
lds
mov
jle
lcall
pop
or
add
lock
push
push
and
mov
mov
cltd
mov
pop
std
inc
mov
fbld
dec
push
lea
push
xchg
xlat
mov
push
dec
fwait
loopne
hlt
dec
or
sbb
xor
pop
add
inc
mov
icebp
sbbb
mov
mov
fisttpl
dec
add
push
fmuls
aad
push
mov
push
mov
mov
nop
sub
nop
mov
daa
pushf
call
xor
cmp
loope
mov
xor
rcll
push
lock
and
add
adc
pop
jle
mov
add
push
jmp
sub
je
sub
fistpll
push
cmpb
dec
mov
ljmp
sub
cmpl
jne
push
je
mov
cmp
xor
mov
xor
mov
popa
mov
ljmp
outsl
dec
push
sub
icebp
or
or
hlt
or
or
jle
or
mov
ffreep
bound
or
sub
popa
out
cs
push
movsb
inc
fisubl
sbb
mov
dec
in
dec
sbb
xor
jne
imul
jb
dec
pop
cmp
addl
mov
mov
daa
jns
mov
inc
inc
add
dec
jo
inc
ja
jns
adc
pushf
sub
jmp
and
leave
and
jbe
mov
cmp
add
sub
sti
out
ret
or
and
adc
out
adc
or
adc
push
mov
es
add
nop
data16
push
pop
test
outsl
dec
cwtl
je
inc
cwtl
rolb
popa
sbb
push
test
fucomi
add
dec
mov
mov
sub
mov
fimuls
rclb
fldt
push
jmp
adc
cli
sub
mov
enter
mov
fstl
push
add
jmp
inc
dec
das
push
int3
into
dec
lods
dec
adc
and
ret
ja
dec
mov
clc
insl
mov
cmp
sub
inc
ret
sbb
aaa
jne
or
mov
xchg
out
stos
cmp
mov
inc
xchg
mov
fisubs
xor
pop
dec
jl
jo
idivl
fdivrs
leave
mov
mov
or
mov
jne
dec
add
test
movsl
or
or
jle
pop
mov
push
push
mov
add
mov
jg
inc
ljmp
loopne
sti
adc
sub
jae
cli
jb
lock
sbb
scas
pushf
adc
ret
add
js
add
loopne
mov
mov
fimuls
inc
popa
cmpsl
add
mov
mov
xor
xor
or
fstpt
pop
rcr
call
lock
repnz
mov
xchg
dec
mov
ret
ss
test
and
push
mov
cmp
jl
pop
fs
pmulhw
cmp
jne
incl
fcompl
push
adc
lcall
jmp
sub
je
dec
je
sub
mov
pop
scas
sub
je
jmp
mov
jmp
push
push
push
daa
sbb
arpl
mov
jle
fadd
imul
push
mov
push
adc
rorb
add
loopne
sbb
lahf
mov
pop
sbb
sub
mov
jo
jl
mov
shrb
push
stos
add
pushf
les
fsubrs
mov
mov
jmp
xchg
adc
popa
jne
xchg
dec
pop
mov
ja
test
cmp
jg
mov
dec
stos
lcall
add
out
rcrb
imul
add
cmpl
mov
push
fstpt
adc
pop
and
add
sbb
mov
fadds
fsub
in
push
in
ds
repnz
mov
mov
lock
jg
popf
cmpsb
mov
fstps
nop
iret
ds
int
jne
loope
aam
mov
dec
xorb
sbb
mov
xchg
sub
push
cmpsl
sbb
sbb
pop
ljmp
mov
or
nop
cmp
shl
jne
xor
mov
hlt
fistl
sbb
repnz
xor
add
add
lock
out
out
clc
clc
imulb
jb
and
cmp
push
mov
and
pop
in
call
and
sti
and
jmp
aaa
repnz
jmp
or
into
lock
cmc
popa
movsl
or
pop
push
jmp
cmpb
ja
push
push
hlt
filds
push
lods
pop
mov
pop
data16
div
idivb
icebp
add
cmpb
jle
and
fs
jne
cmp
pop
xchg
testb
or
add
ja
sbb
daa
or
lret
sbb
mov
push
lcall
fwait
dec
lds
mov
and
jmp
out
mov
or
in
and
sarl
add
mov
xlat
test
fildl
iret
mov
neg
fsubrl
fisubrs
fdivs
subl
test
xor
add
imul
idiv
repnz
and
ret
inc
xchg
loope
gs
fs
push
jno
das
lock
scas
sub
iret
aas
mov
dec
frstor
mov
dec
add
pop
jmp
push
mov
add
add
fstpl
ljmp
sub
mov
icebp
jg
push
mov
inc
daa
mov
jp
add
xor
cmp
mov
add
mov
daa
daa
in
inc
or
add
sbb
or
shrl
fwait
push
les
std
inc
ja
push
imul
jne
push
add
sbb
out
stos
xchg
xchg
or
add
or
adc
or
jmp
cli
cmp
ret
inc
fistl
push
pushf
mov
or
xchg
into
mov
dec
sub
ss
pop
pop
addr16
cmp
leave
stos
adc
inc
lods
mov
push
jns
or
mov
loope
mov
ret
mov
fldcw
movsb
loopne
mov
adc
pop
movb
push
cmp
dec
mov
or
sbb
clc
das
daa
frstor
jb
and
sti
negb
stos
fstpl
fwait
jmp
sbb
dec
loop
sbb
inc
pusha
cmp
fisubl
cmp
add
push
pop
cli
xor
jmp
loopne
jg
orb
and
or
and
jo
test
pop
or
lea
cmc
pop
inc
push
push
loop
adc
xchg
mov
aad
or
add
insb
xor
add
ffree
js
push
out
pop
addl
pop
bound
lock
adc
movsl
scas
js
int
inc
lcall
test
mov
add
mov
or
xor
pop
inc
mov
add
mov
push
push
out
adcb
mov
mov
rorl
inc
add
filds
in
pop
adcl
inc
lock
loope
pusha
in
mov
inc
mov
nop
sti
or
xchg
or
or
pop
add
xchg
in
push
in
adc
movsl
and
xor
in
dec
call
sub
in
cltd
sub
lock
cmc
rolb
sbb
pop
outsl
push
call
div
push
jge
push
rolb
je
xchg
cmp
aam
add
sbb
pusha
lds
jns
or
mov
test
mov
std
sbb
jle
mov
jecxz
xchg
cmp
fstpl
out
shrl
shll
subb
jne
mov
enter
add
mov
ja
andl
lahf
in
add
add
ret
push
mov
xor
mov
xchg
add
sub
xor
xor
or
push
and
nop
ret
pop
or
clc
xchg
ret
or
pop
sub
clc
test
addb
mov
repz
jecxz
or
xor
lds
je
sub
je
scas
ret
sbb
rcrl
push
frstor
jle
mov
das
push
jl
jecxz
sbb
sbb
lock
ffreep
mov
out
lods
add
jle
mov
cwtl
mov
fsubrs
mov
cmovnp
jle
test
punpckhwd
in
adc
adc
add
push
mov
sbb
cs
jmp
push
xor
jmp
leave
xorb
in
jle
sahf
and
sub
pop
mov
stos
xorb
daa
push
sub
mov
pop
and
cltd
add
sub
adc
mov
into
inc
inc
test
add
iret
test
rol
addr16
ror
fadds
jne
adc
test
xor
loope
cmp
and
mov
xor
jmp
or
popf
cmovge
out
or
les
loope
mov
mov
ss
and
mov
dec
or
sbb
push
sbb
fadds
dec
sti
add
cs
insb
bound
push
cld
int3
xor
pop
mov
inc
add
sbb
adc
lea
pop
or
mov
cld
movb
data16
mov
push
xor
mov
mov
cmp
mov
mov
int3
sahf
clc
push
lea
mov
lret
ja
dec
bts
fwait
lea
add
push
or
cltd
mov
jp
aas
data16
je
rcrb
fwait
cwtl
loopne
cmp
jge
clc
sbb
inc
sbb
mov
fidivrl
sbb
or
mov
std
hlt
in
pop
mov
jbe
leave
pop
call
jmp
and
or
push
dec
pop
mov
pop
push
or
sub
je
sub
or
ret
sahf
outsb
or
sub
or
inc
add
sub
aaa
sub
or
cmpsb
or
or
mov
mov
sar
pop
add
movsb
test
push
or
sbb
divl
push
adc
jnp
cmp
sahf
pop
test
push
xchg
xchg
scas
or
movsb
je
fwait
shrb
push
pop
mov
roll
xchg
pop
aam
xchg
lock
sub
sub
push
or
mov
mov
xchg
jo
fbstp
fnclex
pusha
lods
mov
cmp
jg
cmp
jns
cltd
jg
adc
pop
and
sbb
push
inc
jmp
xlat
pop
in
arpl
mov
cmp
int
loop
or
ljmp
andb
jno
push
adc
idivb
cmp
ljmp
pop
out
inc
jmp
setl
mov
sarl
lea
shlb
or
adc
cmp
fmull
xchg
sti
and
inc
cmc
loop
xchg
mov
in
or
cmpsl
stos
pop
jge,pn
clc
scas
in
push
dec
ss
in
mov
sub
jl
cmp
jecxz
adc
and
xchg
pusha
mov
ja
mov
sub
add
jno
nop
jns
push
mov
mov
loop
add
mov
pop
fmul
lock
cmpsb
push
enter
jecxz
push
stc
inc
dec
push
cmp
je
jmp
xor
inc
inc
jle
push
xor
and
sbb
ret
mov
add
pop
xchg
or
or
push
push
xchg
mov
dec
push
mov
jns
add
nop
out
or
mov
jecxz
adc
pop
cld
cmpl
or
loop
movaps
jne
fdivs
cmp
and
or
or
or
test
aad
inc
fiaddl
xchg
lret
sub
decb
jo
dec
mov
xchg
fldt
mov
fs
cltd
or
shlb
int3
jle
sahf
push
pop
enter
shrb
fwait
or
fsubs
outsb
fs
pop
sub
int3
mov
mov
mov
adc
sub
nop
out
int3
nop
adc
and
inc
mov
aam
mov
sub
cmp
std
pop
jmp
rolb
or
sbb
and
cmp
cmp
pushf
pop
adc
mov
lods
mov
add
mov
test
xchg
fs
mov
push
shl
push
push
jnp
adc
mov
lea
aaa
insb
in
nop
daa
dec
or
enter
and
imul
or
xor
les
filds
mov
movsb
jo
int
test
in
lret
or
mov
inc
mov
int
and
aam
inc
shrb
mov
sbb
cwtl
xchg
cmp
inc
or
adc
pop
inc
pushf
pop
mov
add
aaa
outsb
orl
xor
and
mov
mov
shlb
mov
incl
or
sbb
pop
enter
loop
js
in
push
dec
mov
ficoms
or
jne
in
add
repz
sub
push
adc
adc
clc
leave
adc
addb
mov
fidivrs
add
jne
cmp
lods
subb
add
call
clc
jne
iret
lods
rorb
test
pop
adcb
je
cmp
inc
icebp
pop
xor
divl
and
frstor
stc
xchg
xchg
lock
clc
nop
fcompp
sub
pop
dec
pushf
or
adc
shlb
adc
sarb
or
loope
dec
sub
iret
cmp
push
adc
inc
loope
mov
data16
mov
push
std
imul
sub
aas
pusha
and
dec
jmp
dec
fnstenv
mov
xor
jmp
and
inc
jns
dec
or
inc
adc
and
aaa
add
add
add
xchg
add
ret
push
pusha
xor
fwait
je
mov
sbb
add
leave
cmp
daa
xchg
mov
lock
test
fcoml
or
call
mov
cmp
mov
scas
das
adc
ljmp
inc
sub
push
add
and
fs
xor
div
inc
inc
inc
jge
rorb
pop
push
add
rolb
jnp
mov
orl
pop
hlt
jge
mov
pop
mov
and
addr16
loopne
dec
dec
imul
add
cmp
dec
fimull
and
dec
add
and
dec
dec
jle
fildll
push
dec
mov
sub
dec
cmp
dec
mov
adc
pop
xchg
or
and
push
imul
ss
inc
iret
es
scas
test
mov
mov
jns
scas
pop
jo
ret
sub
jnp
push
cmp
pop
push
inc
cmpsl
das
pop
and
jno
in
xor
sbb
pop
mov
push
fucom
in
adc
or
mov
adc
jmp
scas
sarb
fistl
addr16
es
stos
fs
das
fs
xchg
adcb
aas
push
outsb
loopne
lds
add
xchg
cmp
mov
int
aas
dec
roll
in
inc
cmp
jl
aam
out
jmp
sbb
or
inc
inc
jmp
adc
push
fidivs
and
inc
lahf
jge
or
and
out
push
js
iret
ljmp
je
sbb
cmpb
sub
lods
lret
adc
mov
mov
cmp
shlb
jmp
add
out
sbb
ja
sub
adc
add
dec
cld
add
ret
sub
sub
xchg
or
lock
jbe
and
notb
rolb
adc
lock
daa
mov
push
adc
sbb
inc
or
xor
aad
inc
and
inc
inc
movl
addr16
ss
jbe
xchg
aad
xor
pushf
pop
pusha
xchg
and
insb
pusha
ja
xor
mov
aad
scas
enter
jge
loope
adc
in
push
mov
dec
ret
fwait
or
notb
push
mov
sub
jb
inc
jno
sbb
inc
std
inc
sti
stos
lcall
jne
test
ljmp
inc
jne
fwait
jo
cmpsl
push
out
pop
ja
pop
xor
cmp
mov
push
push
movl
cltd
out
add
test
push
data16
leave
data16
aas
or
sarl
adc
or
rcll
bound
mov
push
test
ret
adc
add
jnp
fdivl
arpl
mov
mov
lock
int
fldt
out
mov
popa
mov
pop
xchg
mov
inc
inc
cmp
pop
jne
lea
into
dec
dec
movsl
pop
scas
movd
jae
imul
cmp
xchg
shll
cmpsb
in
stos
sbb
inc
dec
jne
jmp
push
sub
sarb
push
and
in
or
add
xchg
xor
push
out
mov
mov
js
jne
push
lret
sbb
scas
sub
inc
mov
push
loopne
lcall
dec
xchg
adc
add
inc
dec
iret
push
lock
mov
mov
es
ja
jl
inc
push
jns
call
mov
mov
mov
mov
and
out
nop
add
mov
sbb
fdivrl
add
mov
cmpl
mov
pop
repnz
aam
fdivrs
sahf
aaa
xor
jg
sub
mov
leave
pop
repnz
mov
push
xor
enter
xor
inc
adc
sbb
lea
and
xchg
les
ret
rolb
shl
aam
or
in
mov
lahf
std
cmpsl
cld
push
mov
or
fildl
test
or
pop
mov
fcmovb
mov
and
push
mov
das
fs
jg
add
pop
scas
insl
add
fs
xlat
pop
in
add
pop
jo
cmpsb
cwtl
cmp
mov
and
int3
out
stos
cmp
pop
push
cmp
or
in
pop
repnz
add
fdiv
inc
or
or
je
xchg
ret
repz
lea
jmp
cltd
sub
in
nop
ret
lock
mov
sub
add
inc
mov
pop
cmp
push
jae
jp
inc
push
stos
jge
ss
mov
sbb
fldt
adcl
xor
dec
rorl
mov
fmuls
dec
fldl
daa
dec
or
dec
push
test
test
xor
wbinvd
mov
dec
mov
shrb
out
inc
sub
inc
in
pop
aam
pop
jmp
mov
std
daa
in
fimuls
xor
sub
daa
cld
cld
aas
adc
push
mov
test
adc
jl
xor
cld
mov
ret
dec
push
xchg
push
fcmovnu
mov
test
ja
xor
inc
push
loope
andb
jmp
or
sbb
inc
cwtl
jge
inc
repz
mov
dec
aas
mov
push
fcompl
adc
push
nop
mov
js
push
push
sti
cmp
pop
push
pushf
or
mov
add
mov
push
pop
cld
filds
push
add
gs
jo
mov
inc
jae
imulb
std
xchg
lock
inc
mov
xchg
movsb
mov
sub
dec
insb
aas
push
mov
dec
testb
js
add
or
jmp
inc
cmp
jne
sti
and
fidivrl
daa
sub
vcvttss2si
pop
push
andb
loope
adc
inc
jmp
daa
fxch
ret
xor
mov
fmuls
mov
in
xchg
add
jmp
data16
repz
loopne
ja
mov
push
into
pushf
mov
sbb
mov
lret
mov
or
mov
lea
out
xor
xchg
push
mov
inc
xchg
pop
leave
or
enter
cld
pop
subl
lea
or
push
orb
pop
loopne
stos
js
sbb
or
pop
cmc
xor
sub
or
mov
inc
cmp
incl
xlat
fadd
daa
clc
push
aaa
insl
pop
adc
sbb
or
jb
and
jg
adc
in
fmull
lret
pusha
mov
adcl
adc
cmp
or
in
sub
mov
pop
push
xchg
mov
sbb
loopne
sahf
nop
dec
xor
clc
mov
clc
sub
jnp
ja
je
push
iret
cwtl
mov
mov
clc
into
adc
xchg
jl
out
xchg
ret
mov
lea
mov
icebp
push
in
test
sbb
mov
enter
jns
xor
nop
push
push
movsb
add
aam
orb
pop
jns
nop
mov
xchg
sub
lds
xchg
ret
incl
adc
mov
flds
fdivrl
sub
inc
decl
cmpl
ja
sub
popa
scas
imul
movsb
loopne
rorb
inc
xor
or
add
cmp
orl
cmp
mov
sarl
roll
xchg
sub
dec
cmp
or
shlb
mov
pop
add
aam
or
dec
es
outsb
dec
out
xor
int
and
stc
rorl
stos
jmp
je
adc
inc
push
fdivs
repz
xor
adc
push
or
mov
dec
jg
dec
sbb
and
push
xor
cmpsl
leave
sub
gs
loop
xor
dec
enter
cmpsb
dec
xorb
adc
into
ja
add
shrl
out
and
leave
movsb
movsl
push
loop
scas
xchg
xor
sbb
movsl
inc
or
pop
in
int
xorb
add
jge
and
pushl
rcrl
js
xor
cltd
lods
dec
jmp
popa
ja
rol
cmp
cmp
or
outsl
fsubrl
pop
rolb
push
jno
fwait
gs
mov
adc
jae
pop
cs
sarl
hlt
outsl
cld
push
xor
push
dec
in
push
movsb
in
and
insb
xchg
jb
call
cmpsb
imul
rcrl
lods
outsb
dec
movsb
mov
fisubrl
pushf
push
xchg
scas
or
push
repz
rcrl
jl
outsl
pcmpeqb
insb
jle
fs
sub
cmpsb
imul
lods
sbb
inc
push
shrb
insb
daa
cmp
adc
pusha
dec
jae
or
xor
sub
in
sub
rcrb
sbb
dec
sbb
adc
insl
nop
pop
adc
or
in
ja
xor
or
pop
out
leave
ja
jbe
jbe
cld
push
pop
loopne
xorl
mov
mov
pop
jb
shr
in
rclb
cmp
push
je
fcomp
jae
or
rorb
dec
jae
je
pop
enter
insl
les
jne
cld
push
imul
sbb
cs
out
or
mov
xchg
cmp
pop
out
fisubl
mov
test
mov
adc
pushf
or
or
lcall
mov
cmp
das
ljmp
inc
pop
mov
inc
lcall
adc
or
dec
adc
pop
cld
test
shr
and
jge
sub
cmp
push
or
xchg
sbb
inc
lods
dec
xor
mov
and
leave
and
dec
xchg
nop
test
dec
push
cmp
push
call
daa
inc
cmpsb
inc
ret
lahf
xchg
or
ljmp
jle
dec
lock
mov
mov
cmp
xor
cwtl
mov
inc
push
mov
imulb
in
mov
out
js
or
insb
jb
xchg
bswap
les
push
push
cmpl
add
sub
data16
adc
imulb
and
xlat
aam
ret
dec
add
pop
or
push
in
cltd
mov
sbb
jns
or
and
cmp
sub
xchg
sub
xchg
inc
addr16
call
cmpsl
ss
cli
and
add
add
inc
enter
insl
adc
inc
and
lods
popl
nop
mov
nop
pop
and
or
xchg
in
mov
add
cld
clc
lea
sbbb
sbb
adc
mov
std
les
sub
clc
xlat
pusha
and
ret
rolb
jmp
sbb
and
pop
push
mov
jb
xor
jecxz
cmpsl
adc
jmp
nop
filds
orb
add
add
adc
adc
leave
pop
testl
insb
lea
sub
leave
in
adc
adc
in
stos
nop
inc
mov
mov
mov
push
add
inc
jns
sbb
push
and
aaa
xchg
push
ret
jle
ss
add
loopne
cld
insl
add
inc
pop
mov
sarb
call
iret
enter
pushf
xchg
pop
jb
mov
mov
pop
jb
and
leave
and
leave
and
enter
jb
int3
fmul
and
in
iret
enter
in
fsubs
and
out
jb
xor
loopne
sbb
cmp
xor
sub
push
ljmp
rorb
sbb
lock
jmp
hlt
ret
pop
repnz
or
mov
aaa
adc
inc
push
lcall
gs
and
inc
fs
jne
iret
mov
dec
jne
inc
imul
repnz
pop
outsb
dec
jb
pop
outsl
jb
negl
xor
jb
insl
push
je
push
push
push
mov
mov
dec
cmp
and
data16
inc
jae
push
aaa
fsubs
mov
outsb
xchg
sbb
or
inc
repnz
xchg
hlt
loope
add
xchg
jmp
and
cmpsl
jge
cmp
adc
mov
out
and
fsubrp
loope
mov
mov
and
xchg
lock
dec
rolb
in
inc
sti
dec
imul
fmul
mov
inc
das
sbb
push
mov
inc
fsub
lock
scas
es
adc
dec
lods
std
or
dec
inc
cmp
sub
or
data16
pop
add
cltd
lea
icebp
add
push
dec
popa
cmpsl
xchg
fnsave
adcb
mov
xor
fstl
xor
es
mov
mov
inc
and
adc
pop
mov
test
rolb
push
repnz
push
repnz
xchg
sub
inc
jb
lret
mov
andb
inc
popa
adc
or
sbb
push
sbb
xchg
repz
xchg
fs
xchg
xor
jl
push
inc
push
sbb
daa
test
fs
xchg
mul
iret
in
add
mov
gs
dec
push
and
xchg
hlt
dec
hlt
adc
jle
and
insl
jo
mov
orb
ds
lods
adc
iret
sbb
add
cmc
fstps
divl
int
mov
mov
ds
xchg
test
adc
adc
pop
stos
jg
cmc
sarl
push
dec
cld
daa
inc
pusha
repnz
cmp
adc
cmc
cmp
push
mov
cmp
call
mov
cmp
sub
pusha
or
call
add
xchg
cld
daa
in
push
outsb
in
nop
cmp
in
add
in
and
into
mulb
fdiv
aad
mov
test
test
enter
xor
or
cwtl
repz
shl
outsl
aad
cli
arpl
cmpsl
add
mov
stos
add
or
mov
cmp
jmp
dec
je
sbb
sub
add
enter
push
xchg
daa
loopne
ja
add
xorl
loope
inc
je
flds
push
orb
cmp
sub
clc
int
jg
pop
stos
hlt
mov
mov
bound
mov
lock
xor
in
mov
enter
hlt
call
lods
movsb
cltd
call
mov
add
jmp
inc
lcall
int3
repnz
add
push
mov
enter
std
int3
or
jae
pop
lcall
enter
xchg
jl
mov
orb
pushf
adc
scas
rclb
mov
dec
movsb
xchg
push
aam
aam
mov
cmpsl
icebp
fadds
loopne
mov
mov
aam
jmp
adc
fcmovnbe
jmp
outsl
shll
add
jge
adc
add
mov
cmp
dec
mov
testb
inc
or
add
cmp
mov
sub
dec
cmp
cmc
xor
cmp
inc
add
in
enter
sub
pop
aas
xchg
and
add
roll
rcll
xchg
sbbl
cwtl
hlt
xchg
imul
inc
ja
ret
cmp
addl
insl
jp
jmp
pushf
dec
loope
int
jne
pushf
xchg
scas
pop
dec
jmp
jecxz
fcompl
ljmp
scas
mov
je
in
pop
mov
call
and
inc
add
fisttpl
or
push
add
pop
sbb
add
rclw
pop
xchg
hlt
daa
jne
aaa
xor
dec
pop
dec
ficoms
jmp
and
out
pop
outsb
movzwl
lock
or
cld
lahf
push
jl
inc
xor
lea
call
orb
das
mov
fsubrl
and
sbb
and
xor
xchg
inc
and
sti
sub
inc
pop
dec
inc
movsb
ret
mov
sbb
mov
das
inc
cmp
inc
fdivs
cmp
dec
repz
dec
jnp
in
cmp
inc
pop
subb
in
test
cs
cmp
jl
ss
insl
je
mov
push
xlat
les
push
jo
movsl
xor
push
aas
fadds
mov
add
push
add
fcmovbe
push
pop
inc
sub
or
adc
add
adc
sti
xor
test
mov
fnop
jmp
push
mov
cmp
shll
push
icebp
leave
mov
or
daa
jae
cwtl
call
push
int3
aas
dec
adc
je
ret
aas
inc
xchg
push
out
adc
sub
clc
fimull
test
add
or
mov
sbb
nop
xchg
add
and
or
dec
loopne
std
test
push
jo
sub
repnz
xorb
mov
mov
pop
or
adc
gs
in
in
jns
cltd
nop
call
or
outsb
cmp
inc
mov
inc
call
sbb
inc
hlt
xchg
jmp
push
fcmovne
cwtl
cmp
lock
lock
push
mov
pop
add
lret
rorl
push
push
imul
push
sahf
aam
mov
iret
or
add
adc
cmp
outsl
xchg
cmpsl
leave
xor
inc
adc
or
out
jo
sub
pop
nop
xlat
mov
push
in
sub
shrl
or
rorl
pop
push
lock
je
pop
adc
cmp
jne
imul
and
pop
xchg
in
or
or
int3
xor
lock
xchg
inc
int3
jo
lock
xchg
add
xor
sbb
enter
cmp
sub
ja
mov
add
scas
les
mov
cmc
adc
add
loopne
adc
nop
jno
cmp
fwait
jmp
push
xchg
mov
xor
ss
cltd
fs
inc
cs
adcl
cltd
in
mov
push
into
push
sbb
jb
mov
sbb
push
jmp
push
mov
cmp
cmpsl
sub
xor
jae
push
es
arpl
pop
adc
and
pop
shll
inc
inc
add
popf
std
sbb
hlt
fldenv
xor
inc
lds
jl
das
add
mov
popa
sbb
es
loopne
or
push
ss
and
mov
jno
mov
shr
sarl
push
lock
or
xor
ficomps
cmp
jmp
sbb
adc
in
cmc
loop
shll
xchg
aaa
cmpsb
imul
pop
push
test
lcall
mov
push
mov
lcall
nop
and
data16
cmpb
pop
loopne
xor
insb
dec
repnz
xlat
enter
xlat
mov
sub
xor
negl
dec
jb
subb
add
les
fnstenv
pop
fs
lret
imul
dec
clc
fnstsw
fstpt
test
fidivs
cltd
nop
pushf
aam
icebp
mov
dec
or
xor
imul
das
in
cld
daa
pop
jb
mov
jp
and
mulb
int3
jmp
mov
add
fsubr
inc
push
cmp
cmp
dec
lahf
roll
dec
loope
inc
mov
dec
in
jmp
data16
pop
je
nop
iret
arpl
push
das
adc
cwtl
iret
popl
xchg
and
dec
rcrl
and
xlat
shlb
mov
inc
fcomip
or
std
jg
sub
xor
xor
push
cld
sbb
cltd
repnz
push
push
or
adc
repnz
in
push
inc
cwtl
pushf
pushf
or
js
sbb
pop
push
mov
ljmp
adc
inc
imul
pop
inc
jo
or
in
xor
jmp
inc
scas
shr
in
and
or
mov
xchg
nop
in
inc
push
mov
aam
push
rclb
jno
outsl
loope
and
outsl
addr16
call
xor
push
sbb
sbb
popa
aam
adc
lods
ja
lret
stc
movsl
or
add
mov
mov
or
pop
adc
xor
push
jae
mov
fdivl
sub
lcall
push
sub
adc
mov
aam
imul
or
aas
sub
mov
dec
in
mov
fldenv
pop
push
sar
cmp
pop
or
inc
adc
cld
inc
jg
fildll
fdivs
inc
mov
push
cmc
call
pop
jb
mov
push
sbb
sbb
lds
push
or
add
mov
sub
pushf
inc
push
adc
pop
lea
dec
je
jmp
outsl
iret
or
or
psubb
xor
test
push
push
mov
mov
cltd
clc
inc
mov
xor
das
or
jae
xlat
ss
xchg
mov
push
fs
and
loopne
subl
xor
outsl
cmp
sub
pop
pusha
xor
push
fwait
lahf
and
test
mov
adcb
or
sub
pop
test
aaa
or
fistpl
mov
add
and
jnp
idivl
or
aad
jae
fistpl
pop
and
ljmp
test
sbb
in
addr16
jbe
cld
sub
jb
mov
or
add
xor
add
rcll
decb
inc
pop
xor
mov
jmp
sbb
jb
or
call
and
cmpb
out
and
jne
adc
mov
fldt
nop
orb
pop
push
je
orl
push
inc
mov
iret
dec
pop
or
orb
arpl
loope
mov
lret
mov
or
push
fsubs
add
out
add
push
lds
addb
mov
or
mov
cltd
nop
xorl
jno
push
repnz
add
lds
jmp
aas
or
adc
out
in
repnz
ja
out
push
pop
push
add
pop
xor
add
stos
sub
push
jne
addb
xor
mov
fs
push
adc
jb
mov
mov
and
leave
add
adc
adc
and
mov
clts
xchg
cs
shll
test
sub
cmp
pusha
push
adc
cmp
int
dec
inc
rorl
jmp
adc
test
stos
and
add
jl
adc
call
aam
sbb
pop
cltd
das
mov
add
push
cmp
pushf
bound
fucomp
pop
xchg
clc
add
adc
cmp
shlb
sbb
ja
js
inc
outsl
add
xor
mov
xchg
in
in
daa
sbb
push
jle
fsubs
xor
or
les
popf
clc
in
bound
dec
test
lea
test
enter
cltd
mov
push
fmull
push
jb
fnsave
mov
push
xor
pushf
adc
sbb
sbb
in
mov
out
dec
mov
daa
add
adc
call
and
add
loope
mov
fcoml
rcll
ja
jbe
or
adc
inc
add
lea
xor
pop
xchg
jnp
imul
push
xor
pop
js
sub
repz
insb
int
mov
mov
lods
imul
es
lock
adc
push
inc
daa
add
push
cmp
ss
les
sub
xor
orl
add
mov
xchg
sub
and
adc
and
mov
and
push
or
mov
jmp
repnz
loopne
adc
jge
and
xchg
pop
mov
enter
sbb
dec
shll
or
andb
xchg
push
or
stos
xor
dec
imul
xchg
in
stos
pop
rorl
xor
adc
push
imul
adc
lods
in
mov
or
jmp
and
or
insl
and
in
add
jno
js
inc
out
sub
loopne
sbb
adc
cmp
cmp
enter
xchg
mov
bound
xchg
sbb
dec
xor
push
lods
aas
sub
push
enter
jno
arpl
in
cmp
imulb
std
sub
jmp
loopne
jecxz
push
adc
lock
pop
jle
add
add
out
dec
pop
lock
inc
push
nop
decl
mov
dec
rcrb
and
jmp
out
add
or
out
out
sub
add
mov
push
orl
loope
and
popf
mov
inc
or
push
pop
and
add
jp
xchg
lcall
push
mov
dec
mov
or
pop
xor
ret
lcall
push
jne
nop
popf
and
mov
jle
and
jnp
gs
adcl
inc
out
mov
inc
jnp
sbb
ds
fildll
popa
jg
add
push
mov
jo
push
incl
push
dec
add
rclb
aad
pop
push
sbb
sbb
in
inc
outsb
pop
nop
push
arpl
addl
inc
addl
jbe
sbb
je
test
rol
fsubr
inc
push
push
shll
es
or
xor
orb
push
mov
int
sbb
mov
shrl
pop
sbb
dec
jmp
adc
push
movsb
popf
adcb
pop
dec
sbb
into
xor
pop
inc
mov
jne
and
mov
aas
pop
add
jno
and
adc
mov
inc
or
mov
or
rcrb
testl
push
imul
inc
pop
dec
inc
xor
jecxz
test
int
sbb
insl
call
mov
add
dec
sbb
fisttpll
in
mov
add
rcrl
add
mov
xchg
fstl
pop
sbb
cmp
sbb
mov
jns
adc
sbb
and
xor
pop
add
push
xchg
adc
push
out
dec
shrl
cli
push
push
adc
dec
inc
lcall
rcrl
insl
sbbb
test
adc
loope
inc
inc
shlb
mov
fs
fnstcw
lcall
xor
add
loope
lahf
or
jbe
mov
sub
pop
push
pusha
mov
hlt
nop
jbe
adc
fildll
ficoml
sbb
and
push
or
fists
pop
cwtl
xchg
and
dec
je
sub
dec
rolb
and
cltd
pop
cmpsl
xor
shll
inc
data16
push
clts
xchg
pop
add
bound
bound
ret
scas
loope
sbb
adc
dec
and
adc
push
sbb
sub
or
inc
in
icebp
repnz
dec
pop
sub
jmp
es
test
imul
push
insl
jmp
inc
mov
xor
and
push
dec
aam
cld
pop
int3
mov
cmp
dec
adc
adc
fwait
jns
dec
sub
ljmp
insb
lcall
imul
stos
rolb
add
dec
shl
std
and
fs
ss
adc
add
sub
mov
mov
out
test
dec
hlt
fildl
shrb
mov
faddl
and
or
sub
dec
jbe
xchg
dec
inc
pop
inc
in
and
mov
loopne
in
dec
adc
sub
xchg
loopne
push
leave
orl
sub
pusha
inc
mov
add
inc
xchg
adc
or
loopne
scas
mov
cld
and
adc
pop
pop
imul
cmp
push
inc
nop
mov
in
mov
imull
dec
data16
adc
cmpsb
lock
push
ret
inc
push
sbb
lods
or
stc
push
lock
int
hlt
mov
cmpsl
pop
pop
cmp
push
leave
inc
leave
or
jns
enter
adc
lcall
sub
jl
es
adc
outsl
mov
sti
and
cmpsl
pop
loop
nop
xchg
in
pop
loop
fcmovnb
fimull
adc
mov
bound
adc
pop
dec
sub
push
adc
mov
cmp
test
loop
in
test
push
inc
ret
sub
xchg
jb
shrl
pop
in
xor
dec
sbbb
jns
xor
jmp
testl
sub
imul
daa
adcl
mov
orl
adc
xchg
fsubrl
pop
leave
jns
dec
sbb
lods
mov
adc
xchg
xchg
adc
sbb
xchg
mov
add
pushf
sub
leave
lea
test
xor
js
push
mov
push
mov
shl
fildll
xchg
sbb
add
push
scas
nop
and
fildll
push
jns
cmp
fildll
sub
mov
dec
scas
inc
dec
fildll
pop
add
mov
or
xor
xchg
lcall
fcoms
xor
or
bound
xor
jge
sub
sbb
cs
sbb
sub
jne
and
or
cmp
sbb
pop
out
mov
pop
in
jns
lods
add
mov
inc
or
insl
lea
movsb
nop
mov
fmuls
sbb
xor
add
pop
nop
pop
and
push
inc
pushf
jns
cmp
jle
test
sub
sub
xchg
xchg
movsl
mov
fldenv
jmp
add
pop
jns
stos
loop
mov
daa
fildl
lods
push
lds
mov
cmpl
sbb
mov
pop
leave
add
lods
pop
adc
and
in
mov
sbb
imul
inc
addl
mov
mov
adc
psubusb
aas
outsl
call
add
pop
dec
dec
and
sbb
cli
pusha
mov
push
mov
inc
cmc
in
mov
mov
pop
dec
je
and
adc
ja
fidivl
ds
es
lock
push
shlb
lret
js
add
pop
roll
popf
inc
addl
pop
mov
mov
das
inc
imul
sub
push
dec
inc
inc
add
loop
add
cld
sub
pop
rolb
pop
das
push
push
test
jno
adcb
and
movsl
in
das
cmp
mov
sub
shll
cwtl
cmp
inc
pop
xor
xor
adcl
or
xor
psraw
mov
in
loope
push
arpl
out
sbb
ret
adc
xchg
sub
inc
xchg
dec
push
add
hlt
lcall
add
hlt
mov
inc
loopne
dec
adc
nop
in
out
xchg
outsl
jnp
adc
dec
xor
push
xor
shll
xor
xor
pop
xor
pop
imul
xor
jns
push
mov
add
inc
pop
repnz
and
inc
shrl
xchg
dec
scas
fidivs
or
xor
daa
imul
adc
mov
inc
push
lock
inc
out
add
jae
add
sbb
sarb
call
sbb
call
hlt
add
inc
xchg
loopne
or
in
push
fsubl
cwtl
jo
scas
xchg
inc
xor
pop
enter
aam
mov
nop
popa
aaa
aam
mov
cltd
rcl
nop
gs
lods
jmp
inc
push
enter
lea
push
cli
int
addl
sbb
or
mov
rorb
in
mov
fidivs
xor
xor
push
xor
xor
stos
mov
fisubl
push
add
pop
cmp
mov
in
xchg
mov
insb
in
aaa
mov
mov
or
leave
fnsave
mov
shrl
cmp
dec
insb
test
mov
adc
fcomps
cltd
inc
movsb
negl
movsb
mov
pop
enter
mov
mov
or
mov
mov
stos
xchg
jno
sbb
pop
jmp
adcl
jmp
popf
mov
scas
arpl
dec
xchg
push
and
ret
adc
mov
mov
xor
mov
pop
bnd
xor
add
icebp
mov
cmp
in
out
jmp
repnz
sub
in
dec
test
test
xchg
ss
cmp
sbb
xchg
pop
inc
pop
push
aaa
mov
and
pop
sub
ret
loopne
xor
rcl
aam
stos
or
fs
test
out
sbb
andb
repz
or
aaa
loopne
nop
lcall
push
mov
cmp
jb
imul
fnstenv
sbb
cmp
dec
mov
push
and
es
mov
int3
in
fdivs
add
adc
jns
sub
or
imul
xor
push
xor
pop
mov
push
daa
cwtl
adc
movsl
lods
es
cmp
or
dec
in
lcall
jnp
es
pusha
movsbl
cs
fdivs
fdivs
aam
sbbl
aam
mov
dec
mov
rcl
iret
or
xchg
inc
push
ret
int
test
cld
enter
les
cmp
mov
aaa
in
mov
movsl
cmpb
cmp
cmp
cmpsb
imul
shll
in
push
je
in
movsb
or
pop
cmp
rorb
push
rclb
sahf
mov
fs
mov
ja
es
loope
mov
jne
mov
mov
push
mov
pusha
mov
cmp
test
movsb
aam
xor
inc
push
movsb
mov
jbe
cmp
pusha
cmp
cwtl
jno
es
cwtl
aaa
scas
or
daa
loopne
enter
popf
nop
fcmove
xchg
aaa
aaa
cmp
push
repz
mov
cmp
jo
mov
es
adc
mov
add
nop
xchg
addr16
int3
or
mov
adc
scas
cmp
mov
or
loope
add
gs
in
and
mov
jg
pop
rcl
cmp
adc
sbb
or
incb
bound
or
or
fcoml
jmp
xor
aam
js
or
cmp
fistl
or
sbb
jne
inc
jmp
in
add
mov
js
inc
insb
mov
or
or
sbb
adcb
push
sub
adcl
data16
sub
outsb
inc
scas
fs
push
insl
or
and
inc
inc
pop
or
inc
dec
and
or
out
mov
repnz
inc
pop
xor
rol
lock
mov
pop
sbb
pop
jmp
movw
ja
aam
gs
dec
lods
sbb
mov
lahf
call
and
push
adc
mov
inc
arpl
jg
cmpb
adc
or
adcb
or
in
push
das
or
fisttpl
cltd
rcrb
mov
inc
xchg
push
and
push
push
bound
or
loopne
out
add
je
repz
dec
xchg
xor
add
pop
or
add
pop
push
add
js
sub
mov
or
out
out
pop
push
or
push
add
or
lahf
pop
mov
mov
or
push
push
mov
inc
inc
adc
dec
sbb
bound
dec
pop
push
pop
and
lret
popl
mov
and
roll
sub
sbb
xor
das
mov
cmpl
mov
xor
jmp
cmp
ret
aad
pop
sbb
cld
test
sub
mov
push
xor
sub
cwtl
in
add
cmpsl
mov
or
je
xor
adc
or
add
ja
jmp
and
bound
neg
push
xorb
jl
jno
jne
add
or
jmp
into
test
in
jae
adc
fadds
sub
push
jp
and
lmsw
and
jecxz
jmp
out
pop
push
outsl
xor
cmpsl
add
pop
js
or
inc
lods
nop
shll
fmuls
sti
fimull
cld
xor
out
inc
insl
jo
jns
add
or
jne
xor
out
or
popa
and
daa
pop
fwait
ds
out
int3
inc
push
aas
insb
add
inc
outsl
jne
sub
jg
xchg
jb
outsb
arpl
mov
shll
popa
je
dec
insb
es
js
fstl
adcb
adcb
movsl
insl
and
push
aas
add
in
push
outsb
imul
inc
arpl
adc
and
inc
iret
jns
or
push
inc
jns
add
sub
test
jnp
add
fidivrs
xor
sbb
shll
sti
out
push
pushl
leave
mov
xlat
mov
lcall
xchg
sub
add
mov
enter
push
add
jno
rol
cmp
aas
cmp
or
lea
add
les
cmp
stos
sbb
push
pop
and
popf
sub
add
xchg
shrl
mov
or
inc
sbb
and
test
in
and
rorb
inc
outsb
jns
and
rcrb
inc
push
push
gs
push
or
adc
and
or
cwtl
lahf
xor
dec
xor
sub
lock
imul
mov
nop
or
pop
nop
push
int
mov
jecxz
into
xor
mov
jl
sbb
push
push
pop
mov
sbb
xchg
pop
sub
out
adc
cwtl
xchg
enter
xchg
bound
add
and
push
adc
jp
or
ror
stc
adc
jno
cli
insl
mov
icebp
fmuls
or
jge
cmp
je
out
les
sbb
inc
clc
xchg
mov
pop
arpl
roll
mov
mov
fidivrl
push
test
out
pop
lea
add
add
subb
lods
andl
sub
push
mov
add
ret
or
mov
daa
clc
push
ret
mov
in
add
sbb
inc
dec
push
pop
test
ss
push
mov
push
pushf
add
dec
dec
dec
mov
shr
sub
mov
sbb
push
iret
pusha
xchg
mov
rorl
lahf
mov
fsubrp
lods
add
pop
ret
rorb
int3
fistpl
jp
ljmp
test
mov
cmp
pop
mov
cmc
xor
int3
scas
cmpl
ror
jb
or
jbe
js
mov
ret
pop
inc
cmp
cld
mov
xchg
ret
add
setg
daa
sbb
mov
das
adc
push
fnstenv
dec
and
stc
adcb
and
lock
adc
dec
lock
and
mov
pop
orl
push
jl
inc
xor
inc
sbb
out
push
insl
idivb
sbb
sbb
pop
addb
sbb
insb
cmp
mov
xchg
or
sbb
enter
and
xchg
mov
xor
push
cmp
je
gs
push
lods
cmp
out
daa
dec
jo
in
inc
incl
push
push
leave
cmpb
in
inc
inc
push
ss
add
fdivl
cs
inc
out
insl
aas
daa
sbb
subl
not
mov
int
adc
test
adc
dec
sub
mov
xor
sub
sbb
inc
inc
sbb
sbb
sbb
mov
stc
shlb
jae
dec
enter
push
fdivrs
test
scas
scas
cmp
cmp
nop
xchg
xchg
xchg
cmp
cmp
xchg
xchg
xchg
xchg
cmp
cmp
cwtl
cltd
lcall
popf
sahf
lahf
cmp
cmp
addb
cmp
cmp
mov
cmp
mov
pop
repnz
inc
inc
mov
dec
inc
mov
mov
add
sbb
and
inc
adc
inc
add
div
popf
nop
push
dec
add
adc
icebp
pop
lea
ljmp
push
lcall
sbb
test
jnp
jmp
jmp
das
inc
dec
xor
or
add
ja
mov
aam
xchg
mov
sub
mov
cmpl
jge
sti
jge
and
jp
icebp
insl
inc
jbe
sub
add
test
test
outsl
adcl
lock
decl
mov
mov
lock
cmpsb
fisttpl
mov
cmpsb
jo
jns
sbb
adc
mov
cmc
cmp
je
mov
dec
push
sbb
movsl
inc
add
and
idiv
cmp
and
jne
jmp
cmp
paddd
insb
sbb
test
out
jne
lods
pop
and
sub
dec
push
or
stos
mov
push
dec
inc
push
or
sbb
pop
sbb
lcall
or
nop
mov
addr16
loop
imul
jmp
cmpsl
push
mov
sbb
cmp
aas
pop
je
jle
add
sti
lar
decb
ja
and
cmc
dec
sub
jmp
call
jmp
xor
adc
mov
cmp
movsl
push
add
jle
fnstenv
or
adc
add
mov
xor
add
pushl
xor
insl
lock
aaa
add
pop
push
jg
mov
jp
add
cmpb
ja
jb
and
pop
add
add
call
out
inc
pop
in
mov
mov
or
push
mov
push
lea
sbb
jb
incl
cmp
pop
dec
inc
xlat
jmp
lret
nop
pop
cmc
out
lahf
jecxz
into
jmp
dec
or
lods
cmp
fwait
mov
stos
mov
mov
and
test
jnp
les
and
dec
stos
xor
push
imulb
inc
xchg
dec
pop
jo
push
sub
cmp
inc
aaa
clc
inc
mov
sbb
movsb
push
xchg
cmpl
enter
dec
mov
test
hlt
ret
push
cmpb
lahf
mov
mov
mov
xor
fists
incb
adc
loope
jnp
call
jo
test
idivl
dec
fistpll
push
add
cmpb
or
sub
jp
outsb
sub
call
bound
andl
push
lcall
notb
daa
adcb
cmp
sbb
mov
xchg
add
mov
jl
movsl
es
jo
cld
xchg
cmp
mov
xor
fstpt
insl
lods
push
sbb
lds
in
ss
pop
adc
adcb
sti
cmp
loopne
jnp
cmp
or
mov
cmp
in
dec
popf
fstl
and
xor
add
popa
fldt
fstps
in
test
adc
mov
cmp
adc
or
cmp
frstor
push
andl
jecxz
cld
lret
pop
lret
add
mov
mov
jge
push
mov
xchg
cmpsb
xor
mov
push
fnstenv
add
sbb
and
ss
or
inc
sbb
idivb
mov
dec
mov
adcb
mov
xor
or
push
push
imul
sbb
jmp
pop
jmp
loopne
jo
sbb
sub
jmp
in
push
orb
adc
lock
repz
xlat
inc
rclb
pop
jp
jno
cmpb
jno
pushl
jl
add
call
mov
jo
add
adc
jmp
ret
xlat
insb
adc
xchg
loopne
mov
add
fs
push
dec
or
aaa
rclb
add
outsl
icebp
or
shrl
mov
mov
add
or
cmp
cmp
or
nop
or
cwtl
fwait
or
pusha
insl
cmpsb
test
inc
sbb
popl
mov
int
pop
mov
xchg
shlb
sti
ret
dec
push
inc
inc
jbe
sub
push
jg
or
dec
push
dec
push
dec
pop
push
dec
or
cli
fistps
inc
adc
addb
dec
push
gs
imul
or
add
pop
inc
cmp
sbb
ljmp
or
gs
insl
jl
push
or
call
push
or
pop
inc
inc
push
mov
es
xchg
mov
or
push
or
jp
sti
push
or
xor
sbb
xor
or
fistl
ret
dec
outsb
push
insb
sbb
jmp
add
dec
les
jae
aaa
shlb
sub
add
add
mov
sbb
mov
pushf
add
arpl
xor
adc
mov
inc
jmp
je
push
andb
jg
dec
sbb
and
xchg
subb
iret
mov
insb
jbe
push
fnstenv
je
inc
mull
jge
ja
pop
icebp
stos
shrl
inc
cmp
out
pop
enter
nop
test
or
cld
or
daa
jne
push
orb
jnp
mov
sbb
xor
pop
push
cmp
insb
repnz
cwtl
paddb
push
hlt
lock
nop
inc
push
sbb
in
daa
pop
sbb
adc
adc
test
int
xor
in
sbb
xchg
add
jg
or
insb
imul
pop
push
mov
notb
out
std
xchg
shlb
data16
sbb
push
sbb
pop
inc
std
add
movzwl
loopne
or
inc
imul
xchg
add
fstps
stc
bound
test
push
sbb
or
sub
dec
outsl
sbb
sub
jbe
outsb
insb
jns
cli
or
xor
orb
push
jge
out
fisubrs
arpl
or
insb
mov
mov
cmpsl
or
dec
imul
adc
xchg
push
or
inc
cli
fisubrs
dec
xor
gs
add
add
fdivs
add
xlat
mov
cs
or
jns
mov
jae
cmc
popf
mov
cmp
and
xlat
adc
aas
ret
xchg
inc
jbe
dec
or
push
fldenv
shlb
sub
or
pushf
push
add
or
ds
and
ss
add
clc
push
push
cmpsb
adc
ljmp
das
pop
pop
ds
orb
pop
mov
mov
lds
adc
dec
lods
outsb
mov
in
ret
or
daa
or
inc
leave
insb
in
jb
fs
or
test
scas
mov
pop
bound
adc
scas
adc
push
inc
and
inc
sbb
mov
mov
cmpsl
xchg
jbe
pop
mov
int3
mov
adcl
das
iret
and
scas
pushf
cld
and
and
inc
imul
jl
addb
mov
fcompl
loopne
mov
je
divb
mov
in
jmp
aam
or
xchg
jb
or
outsl
adc
mov
mov
lock
add
je
rol
aaa
addb
xchg
fs
push
push
xchg
lds
sub
pop
popa
insl
add
or
fisubrs
ja
mov
loopne
dec
xor
enter
push
push
add
xor
lods
mov
pop
adc
push
push
add
or
fsubp
int3
mov
lea
in
push
xor
add
lcall
pusha
out
sbb
flds
mov
insb
pusha
lea
test
das
pusha
or
jle
cwtl
shlb
push
jbe
adc
imul
add
bound
sbb
mov
arpl
loope
push
arpl
inc
call
aaa
subb
jne
cmp
add
add
sub
nop
test
adc
orl
mov
inc
mov
insl
push
aam
xchg
cld
push
nop
outsl
mov
pop
cmp
sbb
repz
insb
mov
in
lock
shrl
lea
pop
sub
subb
fs
lcall
pop
lcall
outsl
adcb
fisubs
xchg
pop
and
sbb
xchg
call
xchg
pop
les
jle
mov
cld
sti
stos
or
push
push
sbb
or
ss
and
inc
jno
cmpsl
xor
pop
jl
and
pop
sbb
push
sbb
adc
dec
insl
movsb
adc
mov
addr16
fs
push
incb
and
push
dec
shlb
mov
push
test
cmovns
aas
dec
hlt
inc
fs
jo
or
das
pushf
jae
push
rclb
sahf
cmpsb
mov
scas
cmp
outsl
sub
pusha
in
or
test
enter
dec
push
inc
rcrl
adc
jbe
or
pushf
movzwl
out
mov
dec
mov
imul
lret
jo
xor
or
jl
in
pushw
fcomps
pop
cmp
pushf
push
lock
mov
lcall
movsb
gs
pusha
sbb
imul
and
inc
and
add
adc
or
nop
bound
add
addr16
bound
xor
jnp
das
xchg
shlb
ss
mov
stos
pop
je
imul
dec
lods
pop
test
clc
push
sbb
sbb
jbe
pop
sub
ds
adc
stos
cmp
dec
stos
pop
mov
fimull
lock
mov
lods
mov
je
jbe
mov
hlt
popa
add
data16
push
popa
test
mov
mov
add
aas
pop
inc
das
dec
lods
pop
xchg
lods
lods
lods
add
dec
dec
scas
rolb
pop
push
pop
push
pusha
cwtl
cs
popa
pop
add
and
out
add
les
daa
mov
shll
push
es
push
or
dec
dec
fwait
push
fs
and
out
cwtl
and
sbb
push
mov
xlat
xor
or
adc
loope
enter
inc
aam
adc
inc
fmuls
mov
fdivp
insb
push
adc
addr16
leave
movsb
imul
pusha
xchg
enter
pop
fiaddl
pop
testl
sbb
mov
out
inc
mov
dec
adc
fsubs
xchg
repz
or
cltd
nop
or
cltd
nop
or
sbb
or
add
push
add
xchg
adc
in
scas
lcall
ret
adc
and
aas
dec
pop
cltd
adc
imul
mov
cs
adc
clts
pop
test
insb
divl
jbe
insb
sti
pop
push
or
je
imul
test
mov
decl
lock
inc
pop
jmp
cld
insb
pop
or
add
pop
fdivrs
mov
rcll
jns
mov
insl
sub
ss
je
mov
cwtl
mov
push
insb
pusha
sub
dec
imul
es
or
lret
cmp
mov
fadd
mov
fldt
mov
loope
push
adc
xchg
add
mov
xchg
loop
rorb
inc
popa
call
orl
inc
out
lcall
mov
in
inc
adc
sub
fiaddl
dec
fidivl
rcrl
in
ljmp
jbe
sbb
pusha
add
and
inc
movsb
icebp
xchg
xchg
call
rcll
dec
sub
ljmp
mov
mov
call
mov
dec
cs
adc
aam
enter
aam
sub
imul
cmp
sbb
inc
int
dec
addb
outsb
outsl
repnz
add
jle
imulb
sub
jo
and
inc
push
sbb
add
mov
jle
xlat
pushf
testl
mov
sbb
hlt
pop
dec
mov
test
fsubrs
repz
pushf
push
xchg
hlt
mov
hlt
loopne
aam
sti
adc
filds
cli
stc
clc
push
push
push
push
push
push
lahf
shll
pushl
jle
push
cmp
mov
pusha
fs
sbb
mov
mov
push
dec
into
pop
push
inc
push
sub
push
or
fadd
push
mov
add
je
push
add
add
aam
or
inc
decb
rol
pop
add
cmp
xlat
or
fdivrp
push
add
addr16
mov
xchg
jno
imul
mov
lods
imul
outsl
jl
pop
inc
imul
and
push
sbb
jbe
imul
pop
jb
dec
ss
in
jb
jb
enter
sub
stc
fdivr
xor
mov
insl
ss
cli
pop
cmp
push
add
aam
and
and
add
incl
pop
movlps
adc
pop
sub
jo
cmp
adc
data16
pusha
add
loop
fs
cltd
inc
and
mov
or
dec
adc
pop
call
adc
push
mov
push
lods
fldt
imul
dec
mov
leave
inc
lock
jne
pop
les
add
je
add
and
push
js
js
mov
jne
add
jb
dec
xor
fidivs
xlat
shrb
in
pop
js
jae
pop
jno
pop
or
jne
pusha
mov
and
data16
in
push
mov
dec
push
lret
xlat
bound
cmp
push
rolb
je
iret
or
adc
dec
les
incl
jg
mov
leave
outsl
dec
add
mov
cmovnp
lock
rcl
mov
sub
sub
jne
fildll
add
xor
sbb
outsl
jmp
fmul
push
sbb
add
pusha
loop
dec
pop
fisubs
stc
fadds
ret
arpl
pusha
inc
inc
add
or
or
and
or
pop
xlat
pop
jge
mov
ret
std
sbbb
mov
mov
push
mov
mov
xchg
inc
inc
add
mov
fistpl
sar
lods
xchg
jne
add
jl
and
push
rcl
notl
and
mov
sbb
lcall
add
sti
pusha
adc
jae
or
push
inc
popa
pop
or
mov
sbb
add
rorb
data16
mov
das
and
jbe
int
stos
stos
adc
cld
adc
jecxz
dec
push
xor
add
xor
jnp
or
loopne
out
jae
lds
sub
pop
adc
inc
dec
and
mov
adc
mull
push
adc
fs
setge
cmp
and
gs
mov
fmul
xor
xchg
fisubl
movl
out
leave
js
call
dec
enter
add
lea
fldenv
scas
imul
in
and
and
pop
inc
and
je
jno
sbb
adc
jp
and
sbb
imul
ror
icebp
rorb
mov
push
fisubrl
push
fwait
lea
int
ja
pop
iret
or
add
push
cmp
inc
adc
or
mov
cmp
imul
subb
shrl
adc
mov
sbb
push
add
ds
dec
jne
mov
push
adc
xchg
xchg
outsb
lds
shlb
movsb
mov
out
push
inc
rcr
xchg
es
sbb
xor
jns
cmpb
dec
out
mov
inc
popf
adc
xchg
mov
mov
cmpb
clc
ficoml
lods
cmp
ss
js
hlt
clc
insb
je
adc
je
sub
or
subl
fcom
dec
adc
dec
xor
xchg
pop
push
sbb
cmp
lods
add
or
xor
or
jp
push
movsl
insl
aaa
mov
outsl
add
stos
inc
test
aaa
dec
or
imul
shrb
sub
cmp
push
xor
mov
call
dec
jbe
and
call
rcrb
pusha
xor
mov
inc
adc
adc
fs
stos
iret
add
add
and
cmp
pop
mov
pop
roll
jge
imul
dec
pop
daa
xorb
mov
in
int
rorb
mov
mov
pop
xor
cmp
hlt
les
add
add
repz
ljmp
mov
sbb
inc
mov
test
lahf
lret
sub
cmp
popf
aaa
push
cmp
jl
push
mov
push
or
shll
lret
jbe
adc
sbb
shlb
stos
fmul
enter
pop
pushf
fiaddl
pop
daa
rolb
sub
add
sub
arpl
test
js
jae
dec
push
xchg
mov
in
das
test
data16
xchg
lahf
imul
jo
dec
jg
mov
jmp
or
test
dec
mov
shlb
daa
add
and
or
xchg
rolb
test
xchg
mov
addr16
loopne
sti
cld
jge
ret
mov
or
scas
pop
mov
or
enter
dec
int
add
loope
lds
sahf
leave
push
dec
jle
cmp
adc
lds
or
push
out
outsb
shr
mov
inc
and
dec
ret
ret
out
loope
adc
jmp
jmp
push
je
mov
jbe
mov
insl
cmp
or
cs
lds
jg
and
xor
enter
cld
fcoms
andl
xchg
xlat
cs
int3
xlat
inc
or
push
push
stos
bound
xlat
scas
in
mov
cwtl
scas
sub
nop
cmpb
test
mov
and
inc
sbb
adc
add
mov
or
inc
jb
mov
mov
xor
outsb
jo
lds
pop
jo
pop
xchg
fildll
cmp
xor
stos
lock
popa
es
push
and
mov
or
imul
out
addr16
sbbl
jg
rcrb
jno
icebp
orb
aaa
lea
pushf
mov
xorb
stos
pop
dec
cld
mov
jmp
ret
or
mov
jbe
lret
inc
aam
pop
jmp
add
sbb
sbb
ficompl
out
mov
unpckhps
je
addr16
fadd
addl
adc
mov
sbb
fisttpl
scas
or
mov
mov
xlat
xor
pop
inc
cmpb
lahf
pop
mov
mov
add
xlat
sbb
in
sbb
push
push
or
aad
adc
jb
adc
jecxz
ja
call
push
mov
shrb
jecxz
ret
ss
xlat
and
push
xor
movsb
cmp
push
pushf
push
mov
in
insb
and
xor
mov
daa
cmp
mov
inc
sub
pop
xchg
or
pusha
inc
inc
add
xlat
fdivrs
adcl
sahf
mov
xchg
pusha
xchg
jl
in
xlat
arpl
popa
rcl
mov
mov
pop
xchg
out
lcall
ljmp
ja
fldcw
adc
mov
push
or
jbe
mov
adc
lea
inc
or
rorb
repnz
popf
aam
test
fstpt
pop
fsubrs
mov
clc
je
cmp
test
mov
je
fdivrs
cvtdq2ps
push
dec
inc
push
cld
pop
fsubrs
je
mov
sub
adc
or
mov
scas
mov
test
in
and
jl
cmp
mov
je
subl
push
insb
xchg
dec
push
push
add
scas
cmp
sbb
sub
stc
pop
das
mov
pusha
cmpsb
test
aas
jno
sbb
jl
nop
or
stos
push
inc
mov
outsl
push
or
outsl
jae
jae
loop
mov
adc
cmp
incl
rorl
leave
cmc
add
xchg
stos
mov
or
adc
scas
push
fsts
sbb
mov
jbe
push
popf
or
dec
or
cmp
add
lea
stc
ds
jp
inc
pop
sbb
jno
and
push
in
mov
mov
add
xor
pop
sbbb
pop
pop
insb
shrb
rolb
xchg
mov
into
cmp
mov
test
movsl
loope
xchg
outsb
inc
cmp
loopne
inc
ret
xlat
adc
sbb
setg
xor
in
lret
addb
jmp
and
mov
stos
jmp
js
ret
mov
rcl
scas
rcl
loope
sub
dec
or
int
out
js
in
jne
sbb
leave
daa
rcll
push
xor
mov
push
cmp
dec
xor
and
sub
jecxz
mov
dec
rorb
fldt
cmp
mov
adc
and
jp
push
ja
ljmp
xchg
sahf
popf
push
or
pop
and
adc
sub
js
es
inc
or
imul
and
shlb
rolb
push
adcb
pop
stc
or
loopne
loop
addr16
mov
leave
scas
push
jns
in
inc
push
dec
jno
in
fcoml
sbb
test
aas
and
jmp
dec
dec
xor
nop
decl
push
dec
mov
dec
inc
loop
popa
xor
cmp
push
cmp
dec
rdmsr
dec
pop
movsl
mov
cmovbe
push
mov
xor
cltd
jp
adc
adc
test
add
imul
test
jg
dec
add
xchg
jmp
mov
mov
lds
push
dec
add
add
fcmove
sub
dec
or
inc
mov
rorl
and
and
push
sbb
aaa
push
mov
dec
and
in
and
push
mov
adc
mov
adc
repnz
inc
fsubrp
jae
pop
inc
xlat
push
rolb
enter
gs
pop
sub
add
rclb
cmp
jge
mov
jecxz
pop
cmp
dec
leave
daa
jbe
lcall
sar
mov
shl
sbb
call
cld
in
cmp
je
test
fadd
pop
sbb
adc
xor
or
aad
test
sub
jp
mov
adc
cwtl
rclb
addl
paddd
orl
stos
adc
btr
cmp
jl
cltd
jle
inc
adc
rolb
pop
addr16
in
push
sub
dec
inc
add
add
enter
jg
cmp
je
sbb
ljmp
ja
and
bt
jb
jge
das
call
ret
sbb
hlt
dec
adc
jmp
inc
cmp
jne
adc
aad
decl
jne
les
and
lods
inc
add
pop
loop
add
ret
sbb
adc
xchg
sbb
in
ret
les
inc
sahf
fcmovb
xchg
fmuls
add
in
lock
add
xor
push
adc
jno
mov
pushf
inc
decl
pop
cld
outsb
imul
xchg
test
jge
dec
cmp
pop
add
ret
mov
sub
sbb
fcmovnb
and
cmpsb
call
js
int
lods
xchg
pushf
xorb
push
orl
lahf
enter
dec
pop
add
adc
push
mov
xchg
fdivrl
and
sub
xchg
cwtl
add
add
add
aam
ficompl
inc
aas
or
push
or
insl
sbb
adc
loopne
adc
jne
mov
or
sub
push
negb
jb
outsl
inc
inc
testb
je
gs
push
xor
push
sub
daa
adc
push
adc
jg
mov
xchg
add
mov
fprem
inc
nop
xchg
adc
fwait
or
pusha
mov
adc
dec
inc
mov
jo
iret
mov
sub
xchg
scas
leave
ret
subb
add
push
std
or
cmpl
pushf
push
insb
xchg
out
mov
jne
xchg
pop
sarb
and
or
cli
ret
xchg
xlat
or
pop
loope
pop
sub
dec
inc
ss
inc
cs
imul
shlb
push
shlb
adcb
and
movsl
add
test
mov
push
in
jmp
jmp
in
sub
cmp
mov
lock
push
and
pop
adc
mov
cmp
je
outsl
or
pop
and
pop
cmpb
jg
xorb
dec
sbb
add
loope
pop
jno
into
jne
vpcmpeqd
cmp
jp
and
dec
add
or
and
es
out
add
imul
mov
jg
adcl
push
lods
sub
shl
xor
aam
or
pop
jb
inc
jg
stc
hlt
or
dec
sahf
jge
adc
test
mov
lret
and
enter
mov
clc
add
in
jnp
scas
inc
cmpsb
push
or
jno
js
bound
xor
dec
ret
jo
hlt
dec
mov
jp
adcl
add
cmp
inc
popa
xchg
dec
jb
jmp
fucom
push
xchg
mov
pop
pop
jnp
cmp
inc
cmpsb
psubw
dec
or
jne
sbb
cmp
xchg
push
or
and
fsubs
mov
sahf
dec
xor
cmp
shll
push
ja
filds
push
in
xchg
clc
andl
and
test
iret
mov
out
pop
add
psubb
ss
addb
ss
ucomiss
adc
scas
leave
mov
push
adc
add
or
movsl
sub
add
pop
jbe
je
push
mov
add
xchg
nop
mov
subb
adc
or
out
pop
bnd
sbbl
aas
jo
jae
pop
ret
aaa
inc
mov
mov
clc
in
sti
clc
cmpb
jne
sbb
cwtl
fs
les
ret
mov
add
lea
aad
roll
cmp
dec
jne
and
bound
or
sbb
jmp
lahf
je
gs
mov
adc
jbe
xchg
push
test
fadd
jne
imul
fstps
cmp
push
push
stos
sub
jmp
xlat
iret
pop
push
mov
in
cwtl
pop
lea
jmp
fnstenv
xchg
mov
pop
stc
insl
add
inc
sbb
push
dec
add
xlat
jmp
leave
je
jmp
mov
pop
ret
sbb
pop
addr16
sbb
mov
rolb
icebp
imul
es
iret
shll
cmp
dec
scas
pusha
fwait
or
out
push
popfw
dec
or
pusha
mov
xchg
popa
scas
nop
ja
ss
cwtl
mov
xchg
dec
mov
sbb
icebp
lock
sub
xchg
sub
or
test
dec
cmp
ljmp
pop
xor
std
push
rolb
cwtl
mov
adc
mov
les
add
insb
inc
fsubl
arpl
ds
dec
cld
cmc
repz
sbb
mov
inc
add
pop
pop
push
pusha
adcl
loopne
inc
pop
push
cltd
adc
rol
pop
cmpsb
or
ljmp
mov
mov
cmpsb
sub
js
ja
ja
es
dec
clc
shrb
lret
inc
arpl
add
adc
jecxz
or
mov
push
rorb
arpl
push
push
lock
xchg
movsb
push
adc
dec
adc
jnp
ljmp
adc
addl
mov
shlb
mov
imul
sub
outsb
mov
xor
sbb
fnstcw
inc
sahf
xchg
xor
cld
lock
pop
js
push
enter
mov
mov
leave
ljmp
and
inc
xchg
loopne
out
jp
and
pop
subb
cmp
fwait
or
mov
xor
pop
fwait
iret
dec
popf
cmp
fdivp
lock
push
xchg
shl
mov
dec
cmp
sub
leave
and
adc
mov
and
into
push
pop
sub
xchg
xor
and
and
and
pop
inc
pushf
jb
push
insb
sub
add
and
mov
andl
inc
or
insl
lods
inc
adc
mov
mov
xchg
popf
ret
adc
adc
dec
andb
dec
xor
xchg
pop
xchg
loopne
inc
jbe
loope
adc
adc
ds
inc
lret
add
in
xor
pop
call
stos
lcall
es
xor
pop
jb
in
in
mov
nop
lahf
shl
ret
mov
add
xchg
sub
scas
sbb
or
loopne
nop
addr16
clc
pop
sub
push
aam
adc
inc
and
ret
popl
addr16
clc
fcoml
push
sahf
mov
aas
jo
push
les
insb
call
and
lahf
dec
mov
xor
jecxz
push
rcll
scas
push
jmp
gs
test
mov
fdivr
ret
mov
jne
cmp
xor
cmp
cmp
push
inc
shll
xchg
cs
pusha
ret
fwait
or
xchg
into
pop
inc
cwtl
mov
xorb
ror
xor
push
pop
adc
cmp
push
into
ljmp
nop
pop
sub
or
pop
or
xchg
jmp
fbstp
xchg
ds
lret
or
add
xlat
in
outsl
xorb
cmpsb
in
xchg
lahf
pop
or
mov
push
clc
clc
add
fiaddl
jb
mov
ret
test
lock
adc
mov
push
inc
loopne
inc
jb
out
out
sub
ja
adc
mov
add
dec
adc
in
pop
cmp
mov
mov
clc
bound
dec
push
cmp
pop
daa
mov
inc
mov
jne
push
mov
loope
adc
into
mov
sbb
sbb
jmp
sub
add
in
xchg
add
sbb
push
lret
mov
and
mov
push
lds
mov
enter
mov
adc
push
and
xchg
fimuls
jno
ror
mov
adc
mov
lahf
je
or
and
mov
xchg
inc
sub
fs
mov
adc
mov
notw
popf
inc
repnz
adc
js
mov
mov
adc
movsb
jle
mov
cmp
out
adc
or
add
jmp
sub
setb
xchg
ja
mov
cmpb
jne
or
push
and
call
push
movsb
sub
dec
dec
mov
xlat
dec
adc
and
outsb
jecxz
rcll
dec
jmp
mov
push
xlat
mov
inc
movsl
and
or
cmpsb
push
push
fimull
mov
push
push
push
pop
adc
add
and
pop
xchg
les
adc
rcr
push
pop
neg
or
jp
jmp
mov
jnp
mov
jbe
jno
loope
pushf
xor
push
pop
aas
xchg
pusha
xorl
jae
push
cmp
lds
mov
sahf
sar
ss
arpl
hlt
test
jne
inc
lahf
icebp
movsl
cmpsl
cld
inc
and
inc
add
cmp
cltd
mov
jmp
mov
add
pusha
push
out
negb
pop
scas
cmp
jne
testb
orb
and
add
pop
aaa
push
add
fisttpll
sub
insl
jns
jns
imul
mov
mov
pop
xchg
into
xor
push
dec
lret
jnp
loopne
add
push
icebp
cmpsb
gs
inc
pusha
adc
inc
or
push
xor
cmp
lret
arpl
outsb
mov
sub
dec
adcb
lock
sbb
push
push
lret
sbb
sbb
pop
add
jmp
or
add
push
mov
shlb
inc
pusha
or
pop
add
and
xlat
into
jnp
fcom
leave
and
and
sub
and
and
sub
adc
dec
xchg
test
dec
adc
inc
ret
adc
sub
insb
rcll
jo
and
lea
inc
inc
inc
stos
shl
mov
lock
test
frstor
imul
mov
cs
iret
cmpsl
cwtl
ss
movsl
mov
mov
aas
pushf
loopne
mov
xor
mov
out
xorl
dec
jb
add
push
adc
or
dec
mov
cmp
aas
mov
scas
jo
mov
aad
cld
daa
pop
add
ja
add
pop
scas
and
rorl
push
or
add
xchg
add
repz
nop
pop
iret
mov
stos
pusha
cmpl
fwait
aad
jbe
repnz
mov
pop
jae
jle
sub
fisttpl
push
sbb
enter
test
movb
mov
mov
ret
xor
xchg
inc
xchg
mov
mov
or
bound
xor
add
inc
int
je
dec
jno
leave
adc
or
sub
pop
add
mov
inc
sbb
jg
enter
je
outsl
orb
xchg
and
mov
push
fidivrs
loopne
incl
xchg
repnz
mov
aad
push
sarl
in
rorb
in
mov
fistps
jne
add
pop
cmp
hlt
shr
ja
sbb
push
cmp
insl
or
jno
jg
jl
xor
fwait
mov
xchg
cmp
jne
mov
outsl
add
push
or
or
sbb
jmp
sbb
jle
insl
fcmovnb
outsl
lea
popa
hlt
jl
mov
sub
faddl
mov
inc
adc
out
xor
je
stc
cmp
push
and
cwtl
nop
mov
jno
xchg
or
shr
inc
jne
data16
sbb
or
cmc
jne
stos
enter
pushf
mov
xchg
xchg
inc
push
jge
pop
dec
repnz
add
push
add
dec
out
xchg
js
mov
and
or
and
inc
jno
pop
push
push
imul
inc
and
test
and
adcb
flds
add
out
ret
jno
into
insb
add
or
in
pop
push
push
subb
adc
mov
push
lea
jp
ja
cmpl
lahf
add
jge
adc
add
jbe
and
jns
call
in
rcr
pop
adc
jno
loop
cmpsl
inc
add
and
call
nop
aam
add
in
adcl
sub
lret
insb
jmp
enter
adc
xchg
cs
and
or
fistps
dec
add
sbb
add
jle
cmp
cli
add
cld
pop
stc
xor
cmp
xor
add
out
or
addr16
loope
loop
les
mov
inc
gs
sub
fbld
ljmp
dec
fimull
adc
mov
sbb
fistl
lods
fs
adc
jno
and
rcrb
or
pop
int3
sub
xchg
popf
xor
adc
or
adc
or
jbe
or
sbb
mov
adcb
popf
in
lret
imul
cmp
outsl
pusha
arpl
add
into
mov
mov
stc
lahf
cmp
movsb
shl
adc
xor
cltd
sub
and
fcompl
imul
add
lret
mov
xchg
mov
loopne
in
das
add
movsl
rol
or
add
sbbl
hlt
repnz
mov
pop
lods
inc
ja
sti
aam
jmp
dec
mov
push
and
push
lds
inc
sub
dec
inc
mov
int3
xchg
insb
inc
add
cmp
rcrl
rcll
movsl
mov
in
pop
mov
jg
mov
lret
pop
js
int3
fmull
notl
js
sub
sub
nop
mov
jns
pop
out
faddl
push
push
icebp
xchg
test
cmpsl
jl
mov
jo
orl
imul
icebp
mov
into
aaa
ret
mov
fidivl
orb
pushf
nop
pop
scas
sub
pop
imul
or
push
enter
or
or
arpl
rcrl
enter
dec
leave
loopne
fcompl
cmp
fmull
cmp
or
jne
mov
nop
push
rcr
push
sbb
adc
or
inc
push
adc
in
es
add
xor
aad
and
shrb
or
mull
pop
cmp
jne
or
rorb
loopne
sbb
or
gs
lea
jg
inc
push
or
dec
or
adc
and
add
sbb
outsl
push
movsb
and
cmpsl
ret
dec
lahf
movsb
jo
mov
inc
or
call
jp
push
add
movsb
push
fists
into
rolb
movsb
cmp
call
hlt
test
mov
mov
insb
scas
ret
sub
add
dec
movsl
cmp
jge
sbb
add
mov
add
ror
rorl
add
test
push
loopne
or
incb
cmp
je
push
jne
sbb
mov
inc
push
dec
jl
xchg
adc
jecxz
mov
mov
daa
or
loope
inc
adc
aas
jo
roll
stos
test
push
or
mov
iret
mov
jne
cmp
jle
or
loope
lock
mov
push
andb
add
popf
xor
sub
inc
jns
cs
ja
cmp
loopne
xchg
push
pop
scas
mov
nop
ja
mov
shl
or
pmulhuw
mov
lahf
lea
mov
cmp
push
push
loope
adc
mov
nop
out
icebp
xor
mov
icebp
into
mov
adc
and
jg
repnz
out
adc
test
push
dec
or
pop
les
inc
adc
js
add
mov
inc
sbb
mov
imul
setg
mov
cmp
mov
jecxz
sbb
jmp
mov
push
mov
iret
adc
dec
mov
add
cmc
push
add
push
sub
js
jo
inc
xor
out
sub
mov
and
push
cwtl
mov
or
ret
popf
adc
lret
jnp
or
or
inc
enter
cmpl
or
mov
rcrb
mov
fiadds
sbbb
cmp
jne
sub
hlt
out
shlb
mov
sub
mov
lea
movsl
pop
inc
sbb
sbb
xchg
pop
lret
rorb
add
inc
cmp
fwait
mov
imul
pop
insb
add
add
push
mov
push
arpl
push
movb
rclb
xchg
add
push
faddp
dec
cmp
push
push
pop
nop
xchg
mov
add
xchg
add
inc
pushf
mov
jmp
inc
sbb
fldl2e
add
aas
data16
sbb
xchg
inc
jl
mov
rolb
xchg
mull
popw
push
or
mov
xchg
es
sbb
test
jnp
rorb
lahf
ss
rcr
int
int
and
sbbl
test
add
loop
cld
xchg
cli
mov
dec
dec
xchg
mov
sub
ja
or
mov
jns
and
jg
dec
cmp
mov
jns
xlat
dec
dec
cmp
stc
mov
shrb
aas
adc
arpl
shlb
pop
cmpsl
jecxz
movaps
les
xor
add
lods
enter
movsb
shrb
dec
test
insb
pop
fwait
cli
test
fsubr
or
movsb
pop
inc
cmp
jl
or
xchg
push
enter
sub
push
aaa
inc
cmpb
xlat
andw
and
shrl
cld
mov
data16
jno
push
cmp
and
je
adc
add
mov
enter
jno
mov
xor
push
add
and
inc
int
adc
test
mov
adc
add
mov
or
add
jb
mov
inc
mov
sub
add
and
add
xlat
ret
adcb
aad
pop
cmpsb
inc
out
jb
lods
rorb
out
sbb
shl
add
or
inc
repz
rcrb
pop
add
dec
pushf
fiadds
mov
push
adc
stos
ds
mov
mov
cmpsl
insb
dec
mov
dec
das
pop
or
int
cmp
cmovle
sbb
push
fisubrs
xchg
push
jo
and
jge
pop
pop
cld
sbb
add
call
add
icebp
jns
ficompl
jecxz
push
jae
sub
add
enter
cmpsl
ds
sbb
outsl
xchg
push
dec
adc
add
stos
add
push
movb
adc
inc
popa
fadds
shrb
add
sub
push
jne
hlt
aaa
test
jo
pop
mov
add
sbb
sarb
decl
cli
add
into
mov
pop
jge
inc
lret
call
and
push
push
sbb
push
fs
adc
xchg
pop
and
lock
cltd
dec
cltd
pextrw
jnp
cmp
movsl
cmp
adcb
jo
push
add
push
push
aaa
clc
leave
daa
sub
xchg
jne
mov
push
add
out
and
and
loope
mov
fidivl
inc
adc
mov
mov
xor
int3
sub
mov
xor
xchg
mov
pop
fdivs
in
dec
lea
into
sbb
mov
or
pop
sub
enter
mov
mov
xor
xor
ret
lock
inc
rorb
pop
cmp
jg
shll
into
sar
sbbl
pushf
and
add
xchg
add
pop
and
es
dec
jne
and
jbe
mov
hlt
sub
lock
sub
call
mov
xor
mov
mov
inc
xchg
adc
loopne
or
shl
fucomp
cmp
xor
loopne
xchg
dec
cmp
fidivs
sub
repz
ja
clc
pusha
mov
clc
jmp
mov
outsb
adc
cmp
pusha
out
adc
push
cmp
roll
nop
adc
push
mov
call
pop
es
mov
pop
mov
ja
ja
sub
test
cmp
das
push
push
adc
fsts
lret
dec
mov
mov
or
mov
or
jne
pop
push
add
mov
jl
dec
gs
cmp
or
and
xor
sub
call
jmp
cmc
inc
inc
fisubrl
dec
jle
push
test
bound
mov
adc
outsl
adc
test
xchg
mov
in
inc
jecxz
inc
jne
dec
adc
pop
ja
jmp
lods
loopne
mov
xchg
rolb
add
popa
inc
mov
arpl
shrb
cmp
and
push
mov
and
or
or
les
pushf
xchg
movsb
mov
int
icebp
dec
sub
in
outsl
adc
xchg
cmc
les
and
and
mov
or
push
gs
lock
jecxz
shll
je
mov
push
shll
les
push
pop
mov
and
gs
lods
add
push
push
adc
mov
add
mov
jge
std
ja
pop
addb
sbb
or
gs
incb
jnp
jmp
sub
shlb
sub
xchg
sub
sub
or
pop
xchg
movsl
dec
dec
out
enter
mov
or
mov
xchg
mov
cmp
push
xor
inc
mov
mov
mov
popf
insb
test
mov
shlb
std
sub
sbb
sub
cmp
dec
sbb
rcl
shrl
sub
cmp
or
push
int
xchg
jo
imul
adc
mov
xchg
push
mov
jno
push
hlt
in
and
cmpsb
iret
push
pop
mov
gs
in
dec
sbb
adc
mov
pop
dec
sub
lret
addb
jmp
dec
das
nop
imul
xor
data16
jo
cmp
subb
lock
in
push
adc
clc
xor
popf
cmp
sub
movd
sbb
shl
enter
xchg
or
push
add
loopne
or
inc
jo
mov
enter
dec
sub
adc
into
or
cltd
xor
xor
nop/reserved
lods
and
xor
inc
daa
mov
les
pop
mov
adc
and
notl
add
dec
aas
and
imul
mov
adc
and
sub
fcoml
sbb
gs
jmp
mov
sahf
push
mulb
je
cli
jge
pop
sbb
adc
jmp
mov
pop
ss
in
cwtl
imul
out
jb
mov
pop
push
mov
mov
in
jge
jl
pushf
jne
mov
cmp
sbb
add
in
xchg
popa
inc
pop
data16
adc
adc
xchg
hlt
mov
adc
lock
and
sbb
push
xor
fimuls
pop
loope
clc
push
stc
cmp
rcll
inc
jnp
xchg
xor
inc
in
dec
pop
nop
sbb
cmpsb
imul
push
nop
lods
cmp
lret
loop
cwtl
and
and
inc
lcall
fdivs
pop
fst
mov
pusha
dec
add
pop
mov
xor
andl
xor
cld
mov
loop
mov
fs
and
xlat
pop
nop
popf
mov
out
or
ds
cmp
sahf
sbb
push
inc
bndstx
out
iret
sub
jns
sti
ss
imul
int
xbegin
and
jge
popa
sub
add
out
sarb
jns
xor
cld
clc
cld
and
xchg
hlt
sub
pop
push
add
ja
push
and
pop
mov
jmp
aad
mov
scas
mov
rorb
inc
pop
fistl
mov
add
lcall
flds
lock
and
or
mov
cld
cmpsl
or
lret
ja
pop
insb
enter
or
leave
nop
mov
mov
sbb
pop
or
xor
mov
pop
pop
add
into
xlat
sub
push
loop
xor
xor
incb
push
nop
cwtl
add
dec
dec
popa
xor
mov
sub
mov
sub
inc
pop
outsl
and
das
sbb
and
adc
and
jns
xchg
add
divl
sub
in
iret
mov
xchg
sub
or
testb
ss
js
add
lahf
movsbl
push
in
dec
xor
mov
dec
mov
arpl
inc
lds
cmp
ret
in
insl
pop
push
mov
movsb
pop
xchg
out
scas
push
push
push
aas
mov
or
push
mov
jne
mov
and
das
testb
mov
pop
cmpsl
add
adc
fsubl
in
rolb
or
cwtl
mov
leave
adc
xor
stc
add
dec
mov
sbb
cmp
push
jle
ds
fsub
push
or
daa
shrb
pushf
xchg
in
or
push
or
and
xchg
aaa
mov
or
stos
xor
repnz
rcr
mov
andl
lret
jae
dec
pop
mov
out
xchg
popf
orb
inc
shlb
cmc
rcll
inc
xor
and
xor
sub
dec
inc
jmp
sti
jmp
sbb
jge
dec
icebp
xor
or
aam
in
inc
imul
add
pop
xor
xchg
std
mov
aaa
xor
add
pop
stos
or
inc
mov
pop
lea
pop
adc
out
adc
sbb
sar
testb
sbb
ret
lock
shl
pop
mov
scas
lock
and
jo
je
push
cs
lds
dec
sub
xchg
push
push
mov
insl
dec
xor
out
jecxz
lret
push
push
fidivrl
pop
dec
mov
icebp
inc
shrb
or
dec
pop
and
or
in
enter
add
or
stc
xor
mov
adc
movsl
push
in
xchg
xchg
lret
or
out
mov
or
mov
test
faddl
imul
dec
shlb
jl
jno
js
hlt
inc
aam
mov
rcr
sub
mov
lods
pop
imul
sub
add
aad
mov
xchg
push
pop
cmpps
push
pushf
mov
jge
sub
xor
mov
cmp
roll
pushf
rclb
pop
mov
inc
gs
push
xchg
out
call
lock
add
lret
sub
dec
or
jnp
pop
insl
push
montmul
cmpsb
test
cmpl
mov
mov
push
mov
mov
lcall
dec
outsb
stos
and
insl
fwait
xor
inc
mov
cwtl
popa
cmp
mov
testl
push
ret
call
daa
ret
mov
jb
enter
mov
sub
aaa
cmpsl
in
ret
loop
cmp
cmp
mov
or
mov
cwtl
sbb
loopne
repnz
fmul
pop
cmp
lret
xlat
adc
mov
sub
push
sbb
and
cmp
xchg
push
add
lds
mov
inc
push
sbb
das
xchg
pop
fcmovne
sbb
mov
inc
adc
gs
addb
sub
add
sbb
daa
cwtl
sbb
loop
aaa
add
aaa
cmc
sbb
pop
inc
js
pop
sti
ficoml
aas
dec
jmp
movsb
jns
adc
pusha
test
adc
addr16
sbbb
outsl
push
scas
outsb
test
push
das
test
inc
pop
jge
mov
xor
xlat
dec
jno
add
mov
bnd
mov
jae
and
jb
rcl
add
outsb
imul
popa
lret
inc
and
insl
and
push
call
cmp
push
adc
push
or
lods
cld
sub
and
sbb
jns
push
sub
cmp
xor
pop
mov
pop
mov
fcoml
hlt
mov
daa
fsubrs
push
imul
xor
mov
pop
lds
clc
aam
sbb
push
cli
mov
mov
imul
je
mov
add
adc
cmp
nop
ja
call
xor
fwait
xchg
ficoml
push
sbb
pushf
dec
movsl
dec
pop
mov
lds
frstor
scas
sbb
das
xchg
and
fsubs
xlat
sub
dec
add
and
dec
pop
fstl
xchg
cltd
push
orl
imul
fistps
adc
imul
sub
out
cmpsb
or
sub
xchg
testb
pop
stos
mov
movsl
inc
pop
clc
lods
xchg
lods
inc
cmp
jns
inc
adcb
and
dec
dec
push
test
xor
fistpl
dec
cmp
sub
mov
btc
in
xchg
sub
loopne
push
les
mov
push
into
loopne
stos
ret
jmp
shrl
cmp
add
mov
loope
lock
mov
add
mov
mov
daa
fwait
push
mov
lods
xchg
and
cmp
adc
jne
add
and
sbb
jne
je
push
adc
je
andb
pop
jmp
and
mov
mov
adcl
cmp
repnz
pop
fdivrl
shlb
in
fldl
push
mov
xor
ja
ja
adc
je
jmp
shll
add
mov
leave
dec
cmpl
add
xchg
cmp
or
mov
out
push
add
incb
xor
inc
add
call
xchg
frstor
add
lock
sbb
add
lret
add
jne,pn
jbe
adc
pop
mov
shrb
jnp
clc
add
mov
add
inc
cmp
leave
das
pusha
repz
iret
in
pop
mov
pop
xor
adc
stos
fbstp
ficoms
fiadds
dec
in
inc
lcall
push
cmp
dec
push
push
pusha
outsb
imul
filds
leave
push
loop
pop
pop
mov
adc
add
cltd
xchg
sub
jge
or
mov
popf
fsub
sbb
jmp
das
pop
push
sarl
in
hlt
push
mov
pop
enter
add
cmp
shlb
shll
pop
leave
ljmp
in
loopne
cld
xor
bound
and
cmp
mov
ds
sub
movsl
out
and
fs
movsb
and
lock
ret
rorb
push
ljmp
jns
pop
xlat
loopne
dec
dec
pushf
div
das
sub
sub
mov
shll
in
xor
inc
jae
inc
es
push
test
push
decb
adcl
push
call
rcll
int3
cmp
jl
push
mov
mov
lea
adc
loope
lods
arpl
xchg
dec
ljmp
dec
rcrl
pusha
or
jle
in
stc
inc
push
mov
mov
inc
inc
call
pop
in
mov
call
pop
or
xor
movsl
lock
xor
pop
daa
call
cmpsl
sbb
add
inc
sbb
bound
loope
leave
push
add
jge
cmp
adc
add
mov
fwait
sbb
ret
das
pop
mov
jle
cmp
adc
sub
inc
cwtl
pop
and
sbb
icebp
pinsrw
cmp
pop
jmp
or
xchg
mov
pop
sbb
cli
or
inc
cld
mov
lahf
push
addl
jecxz
repz
mov
jecxz
cs
and
mov
pop
ret
clc
clc
mov
lea
sbb
dec
xor
rcll
mov
dec
loop
jg
int3
or
inc
inc
xor
push
push
xor
mov
jecxz
mov
mov
in
dec
mov
inc
xor
inc
lea
inc
or
pop
push
push
mov
sub
aas
sbb
imul
xor
adc
out
cmp
popf
lret
inc
xchg
push
sbb
push
inc
pop
lods
in
shrl
mov
push
addr16
fwait
xor
cwtl
push
ret
push
out
lods
pop
daa
jne
je
stc
movsl
aaa
cmp
and
jle
mov
xor
cs
sbb
add
sub
js
jb
cmpb
or
out
lock
dec
xorb
jmp
mov
addr16
cs
adc
nop
jmp
daa
jl
out
pop
sub
inc
push
xor
pop
pop
mov
pop
lea
sub
ret
sbb
adc
rcll
cmpsl
jns
cmp
rolb
xchg
stc
mov
or
sub
sub
movsl
clc
lods
sbb
sub
push
out
incb
lods
inc
or
inc
adc
cmp
add
bound
fdivl
fildl
jecxz
je
mov
and
dec
add
in
ret
mov
bswap
xor
jl
or
sbb
cmp
pusha
or
loope
jl
and
xchg
pop
jnp
mov
push
add
mov
mov
fdivrl
xchg
fmuls
mov
fnstsw
mov
push
imul
adc
and
xchg
push
call
xor
or
add
push
ss
pop
jb
mov
cmp
call
leave
dec
add
add
pop
movl
mov
pop
rcll
test
push
insb
dec
daa
xchg
in
push
mov
push
xor
popf
insl
fisttpl
jg
inc
andb
xchg
sbb
push
push
pop
loopne
pop
outsb
sbb
test
dec
fildl
ret
ret
push
push
aas
pop
loopne
in
psubsb
push
scas
adc
push
idivb
add
outsl
nop
iret
sub
aam
int3
jb
outsb
sbb
push
fldt
flds
xchg
xchg
push
push
and
mov
push
cmp
aam
mov
orb
jg
add
adc
loope
sub
hlt
mov
xchg
sbb
int
stos
xor
mov
shll
subl
test
fwait
mov
adc
jl
add
xor
ret
loope
imul
sbb
jns
ljmp
test
mov
cmpsl
pop
pop
mov
scas
cs
mov
test
ljmp
adc
mov
pop
test
adc
adc
ret
movsl
rorb
popf
and
test
sbb
scas
lods
sbb
pop
and
lock
outsl
xchg
add
sub
out
mov
add
add
daa
cwtl
aas
pop
shlb
pop
inc
inc
xchg
cs
lock
and
lock
xor
dec
inc
add
icebp
test
push
and
imul
icebp
aas
cmp
adc
adc
cmpb
sbb
leave
fisttps
fistpll
add
or
test
push
dec
jae
xor
cmp
mov
call
jb
mov
xchg
pushw
adc
fidivl
repnz
inc
cmp
adc
loop
xor
sbb
lret
je
pop
jno
or
sbb
das
mov
fisubrs
push
int
jo
mov
fmull
jns
push
sahf
rcrl
sbb
outsb
aaa
add
and
imul
test
dec
or
fs
sbbb
test
movsb
xor
cld
ja
pop
push
hlt
ds
insl
sub
test
or
cltd
mov
sub
mov
mov
shr
cmp
xchg
je
add
jo
loop
gs
out
adc
insl
cmp
adc
mov
or
inc
xor
enter
pop
out
cmp
push
pop
sub
arpl
mov
or
andb
xor
add
int3
push
sub
or
push
xchg
lods
fdiv
ret
push
push
je
test
call
and
inc
aaa
and
mov
out
sub
cmc
shlb
and
sbb
movsl
mov
push
mov
jecxz
jmp
add
jnp
sbb
fwait
test
push
inc
push
pop
fisttpl
imul
or
aas
xorb
dec
lahf
movsb
test
sti
pop
adc
sbb
shrb
push
xor
pop
in
xor
setne
sbb
int
div
mov
sub
jmp
pushf
movsb
lahf
push
adc
pop
cmp
pop
les
sub
mov
je
inc
inc
and
lods
cwtl
movsb
iret
xlat
loope
popa
xlat
dec
sub
aas
rcrl
jge
enter
dec
mov
out
push
or
or
pop
jg
mov
mov
sbb
add
jg
lea
stos
outsl
inc
and
jo
into
lret
loop
sbb
fdivrl
mov
inc
mov
dec
sub
add
movq
repz
les
add
movsb
addl
adc
mov
loopne
orw
mov
and
mov
mov
daa
sbb
inc
mov
fsubrs
mov
push
movups
push
nop
data16
popa
test
mov
push
pop
or
or
test
dec
pop
push
pop
xlat
dec
cmc
lar
adc
leave
dec
mov
jno
jb
jmp
add
inc
in
mov
and
out
pop
imul
push
add
inc
rcr
cmp
ljmp
mov
inc
pop
lock
lock
out
enter
sbb
enter
mov
sbb
enter
lahf
bnd
movsl
lods
jmp
xchg
inc
or
xor
nop
mov
adc
cmp
fwait
add
mov
or
push
mov
xor
repz
adc
loop
xchg
nop
or
repz
xchg
adc
push
adc
adc
stos
sub
adc
xchg
mov
loope
cmp
cmpsb
jmp
jecxz
scas
adc
jne
mov
inc
jp
mov
sbb
cld
xor
jo
fidivl
lods
add
inc
inc
and
jmp
cwtl
loop
cld
push
push
push
pop
repz
fildll
mov
aad
out
mov
add
fs
and
test
inc
sbb
xchg
adc
stos
and
dec
gs
mov
loopne
jo
cmpsl
xchg
mov
sbb
ffreep
add
imul
cs
ss
inc
push
inc
divl
jle
arpl
decb
arpl
push
mov
sub
pop
sbb
and
js
ss
lods
mov
cmp
jne
es
cs
jne
lea
nop
pop
loopne
inc
inc
outsb
adc
add
jp
push
adc
sub
jl
mov
and
jns
hlt
pop
dec
ficomps
xor
mov
mov
sbb
push
adc
mov
or
inc
dec
jne
push
add
xchg
mov
out
insb
out
lock
outsl
cs
push
mov
push
add
insl
mov
cmpsl
jne
addl
fwait
cwtl
push
mov
and
jmp
sbb
sbb
and
or
lods
pop
sub
pusha
pop
daa
dec
inc
mov
inc
mov
adcl
leave
aas
popa
stos
mov
push
and
jge
jle
xchg
jns
jg
push
dec
cmp
jnp
sbb
aaa
xlat
mov
add
add
dec
mov
push
pop
jg
fwait
jmp
or
and
outsb
jbe
test
mov
int3
sbb
or
dec
clc
nop
nop
popf
shr
lds
xorb
or
ja
popa
les
addl
addr16
dec
mov
out
mov
fs
push
lds
nop
cmp
cs
pop
cmpb
mov
add
pop
dec
cmp
xor
jecxz
and
and
daa
cmpsl
rorl
add
inc
loop,pt
jno
xchg
jge
fistpl
add
sbb
mov
adc
or
inc
and
or
test
ret
sub
testb
shrb
sbb
sbb
inc
mov
jmp
loope
cmpsl
adc
lds
movaps
out
mov
mov
or
fmuls
inc
data16
cmpl
jg
adc
pop
rcll
xchg
fstps
int
mov
cmp
add
or
lock
xchg
add
pusha
bound
or
data16
popl
scas
ja
pop
movl
pop
insb
jmp
xchg
ds
sarb
sbb
push
in
cmp
out
inc
push
int3
xchg
inc
sub
das
add
in
mov
js
jecxz
sbb
or
ja
add
pop
rclb
or
lea
xchg
cmpsb
xchg
sub
mov
or
cmp
cmp
outsb
ret
inc
or
inc
je
dec
push
out
or
push
xlat
sub
ret
adc
out
mov
xor
stc
nop
push
lods
and
cmp
ljmp
adc
or
sub
mov
es
lods
or
cmp
jne
pop
adc
cwtl
popa
pop
fisttpll
cmp
insb
inc
call
pop
daa
mov
dec
mov
inc
pop
loopne
push
or
cltd
mov
add
mov
loope
xchg
stos
inc
adc
push
adc
test
sub
out
add
sti
inc
shll
mov
mov
xor
dec
adc
mov
add
sub
fisttpl
movsl
fwait
rcrb
in
sub
iret
pop
cld
and
add
add
inc
pop
adc
pop
cmp
sub
fdivrp
jl
leave
jle
push
add
add
lret
addl
push
or
adc
add
shlb
or
loopne
jmp
inc
into
xchg
pop
sti
inc
std
and
xchg
push
xor
popf
mov
sub
push
adc
cmp
cmpl
inc
adc
incl
or
movsl
push
push
and
aaa
push
dec
popa
jnp
stos
fs
inc
inc
shr
or
fldt
or
in
xchg
cld
and
lret
pop
popa
js
add
adc
add
adc
jmp
adc
jns
movsl
and
clc
je
lods
out
mov
fucom
enter
pop
mov
popa
test
aas
mov
mov
jle
mov
push
inc
loope
jno,pt
or
fwait
add
test
and
ss
out
das
popa
add
leave
roll
adc
jns
fcoml
adc
mov
push
ja
mov
jmp
mulb
sub
fcompl
in
push
and
sbb
loop
mov
push
mov
movl
push
in
out
adcb
or
ja
jmp
or
sbb
adc
shlb
mov
xchg
xchg
sbb
loopne
jnp
xchg
jns
call
and
adc
xor
orb
decl
mov
orl
dec
pop
lahf
push
bnd
sarl
add
sbb
mov
aad
mov
pop
dec
stos
pop
out
xor
insl
and
and
inc
sub
adc
movsl
or
cmpsb
fdivp
cmp
and
sub
mov
mov
test
add
adc
pop
popf
jne
addl
push
push
repnz
jl
inc
pusha
sub
pop
push
mov
mov
xor
sbb
add
push
jp
call
xchg
pop
daa
loopne
rclb
sub
ret
lcall
clc
insb
xchg
or
test
sahf
jl
dec
lock
and
adc
mov
add
xchg
sub
ficoms
lock
inc
inc
pop
or
add
dec
std
sti
pop
popa
and
add
pop
add
mov
cld
pcmpeqw
xor
sti
adc
mov
pop
adc
or
cmp
popa
or
adc
pop
mov
push
push
and
or
pop
das
add
add
popf
add
sub
sbb
inc
out
daa
out
cwtl
mov
sub
les
fisttpl
cmpsl
cmp
pop
into
inc
pop
movsl
in
bound
cmp
adc
test
imul
fadds
or
fildl
push
ud1
add
sub
aam
xchg
sbb
pop
test
adc
lock
push
cld
sahf
adc
add
cld
push
jo
rorb
pop
call
cmp
sbbl
inc
movsb
dec
rcrb
jge
lret
adc
push
dec
mov
xchg
mov
lods
jl
or
pop
loop
ja
mov
jmp
sbbb
mov
rcll
mov
pop
mov
incl
inc
aaa
jnp
and
cmpsb
lea
inc
pop
popa
cwtl
pop
lret
ljmp
pop
sarl
fdivl
ljmp
or
test
mov
pop
and
jns
mov
sbb
ja
add
enter
push
jo
enter
jb
je
orl
jbe
orl
js
jp
or
enter
jle
enter
pusha
popa
enter
bound
and
orl
enter
imul
and
xor
and
and
and
push
orl
pop
pop
pop
pop
or
enter
pop
xor
and
and
and
inc
orl
dec
dec
dec
dec
or
enter
dec
xor
and
and
and
aaa
orl
cmp
cmp
or
enter
ds
and
and
jl
or
and
test
xchg
inc
insb
iret
nop
mov
add
mov
movsl
add
xchg
ss
add
lcall
subb
adc
arpl
mov
or
inc
dec
pop
sbb
mov
jne
das
dec
pop
push
outsb
je
imul
xor
data16
and
push
add
sbb
push
notb
imul
or
adc
loope
dec
mov
jae
je
insl
lcall
jns
lock
push
data16
shrb
dec
je
arpl
adc
in
pop
push
jp
outsb
gs
mov
mov
cmc
xlat
fisubl
or
mov
iret
push
lock
fisubl
int
cmp
pop
jo
outsl
fidivl
xlat
sbb
cmove
push
or
adc
mov
inc
jge
or
repnz
outsb
jae
les
add
mov
in
mov
inc
div
push
dec
outsl
jo
in
xchg
ja
push
pop
inc
jns
sbb
or
dec
shll
nop
dec
add
dec
imul
ss
xor
mov
ss
pop
xor
aas
jge
mov
mov
loopne
or
or
or
fstps
inc
jb
fisttpl
pusha
or
fsubs
dec
jge
fiadds
aaa
or
push
lods
cld
jnp
or
inc
inc
imul
in
outsl
outsb
jb
jae
es
outsl
push
jbe
mov
pop
xor
or
push
cmp
jne
mov
fdivs
pop
ja
push
aad
jae
xchg
pop
mov
movsb
and
ret
jl
pop
pop
orl
sbb
cld
or
and
mov
cmpsl
inc
xchg
fadds
sub
int
jbe
xchg
or
shlb
mov
es
inc
and
push
mov
imul
ret
lret
add
icebp
into
pop
adc
cmpsb
mov
mov
es
lock
subb
pop
push
jnp
inc
aas
mov
shlb
bound
or
pop
add
fbld
aas
push
push
dec
gs
pop
imul
rolb
adc
or
add
out
push
rol
cmp
jnp
inc
ss
push
add
push
mov
jp
and
orb
outsl
decb
mov
pop
test
pop
daa
push
add
xchg
cmp
pop
sbb
les
jg
and
inc
add
add
push
shrb
lds
cmp
inc
pusha
insl
shlb
adc
rcrb
push
sarl
ds
xor
push
inc
or
adc
inc
sarb
pop
test
inc
rcrb
jmp
or
mov
push
push
cmp
jb
xchg
xchg
add
test
pop
dec
mov
jmp
sub
test
add
lcall
pop
push
pop
daa
in
mov
je
adc
fcomps
push
xchg
xor
vshufps
mov
sbb
push
movsl
dec
fwait
mov
mov
imul
xor
push
inc
xor
push
or
lods
sub
test
add
shll
cmp
loopne
or
add
mov
pop
sub
xchg
dec
pushf
arpl
pop
mov
sbb
fcompl
movq
xor
stos
sub
xor
push
bswap
mov
mov
dec
clc
es
sbb
pusha
mov
ds
in
test
push
rcrb
push
add
insl
xor
pop
and
push
sub
nop
pop
es
test
in
jnp
in
dec
inc
enter
test
mov
jo
pop
push
dec
lfs
sbb
mov
aam
pop
daa
push
adc
or
and
pop
jb
inc
mov
jnp
adc
inc
pop
pshufw
test
fcomp
fdivs
dec
imul
mov
push
test
adc
xchg
adc
adc
insl
sbb
push
push
adc
adc
mov
mov
pushf
push
dec
int3
push
js
mov
inc
sbb
mov
add
out
cs
fidivl
sub
cs
pop
and
adc
scas
xchg
shlb
lcall
push
lock
inc
sbb
movzwl
popa
out
rcr
cmpsb
std
movb
rcl
daa
sub
aaa
pusha
adc
insl
mov
out
lahf
lock
add
div
dec
insl
popa
addr16
sarb
ror
adc
hlt
push
jmp
push
mov
sub
lods
ret
nop
and
mov
xchg
pop
test
mov
dec
sahf
dec
mov
inc
loopne
inc
mov
pop
inc
in
pop
pop
add
cwtl
pop
popf
imul
pop
mov
inc
mov
shl
pop
and
mov
call
test
data16
addr16
dec
mov
notl
and
lods
inc
mov
push
adc
adc
add
push
or
mov
mov
push
sarb
repnz
pop
push
js
in
in
js
jnp
jl
jl
rcrb
aam
mov
sub
xor
mov
dec
xor
mov
lahf
dec
nop
push
push
adc
push
jbe
in
cwtl
mov
pop
popa
xor
lret
mov
sbb
inc
or
push
and
aas
push
dec
arpl
pop
cmp
push
pop
or
pop
nop
xchg
dec
pop
repnz
push
sahf
lahf
xchg
mov
inc
cmp
sbb
enter
xchg
das
and
lcall
sbb
fcmovnb
daa
dec
pop
sbb
mov
add
sub
pop
addr16
push
mov
pop
xor
jg,pt
mov
add
dec
adc
and
add
call
ret
rol
xor
inc
dec
jne
push
or
dec
and
out
les
jo
or
pop
add
dec
mov
rcll
sbb
mov
push
mov
xor
sbb
sbb
mov
inc
push
popfw
adc
dec
jne
je
insb
xor
js
int
add
flds
and
mov
and
xchg
adc
cmp
mov
dec
and
dec
cmp
ficoml
popl
decl
push
stc
cmp
add
sbb
pop
and
adc
dec
ja
lods
roll
addl
int3
xor
fwait
aas
addb
pusha
xor
dec
lret
mov
js
xchg
pop
testl
nopl
xor
jne
jecxz
or
push
sub
pusha
sbb
dec
jmp
xchg
mov
and
mov
enter
sbb
fidivs
sub
and
sbb
je
push
jo
imul
and
xorb
sub
fucomip
out
push
jo
cwtl
pop
loop
incl
mov
cs
jle
aad
add
fdivrs
sbb
addl
sbb
cmp
adc
jge
pop
or
push
pushf
imulb
loopne
push
sbb
in
and
in
lock
sbb
mov
mov
not
dec
cwtl
or
mov
xor
or
inc
in
jg
mov
in
add
movsb
mov
fsubr
add
pop
cld
mov
cmpsl
add
and
in
or
jmp
mov
outsl
arpl
add
push
jg
insb
dec
popa
jb
outsl
outsb
push
fs
cmp
in
lahf
cld
rcrb
insb
imul
jbe
xlat
into
pop
nop
add
jb
insb
gs
push
les
sbb
gs
insb
pop
aaa
add
push
imul
dec
in
cmpsl
xchg
gs
pop
gs
insb
outsl
sbb
nop
ja
jne
or
daa
in
inc
jne
push
jno
popa
mov
push
pop
or
loopne
les
jns
add
push
imul
sbb
dec
pop
insl
inc
dec
addr16
xor
mov
xor
lds
mov
out
sbbl
push
pop
imul
and
mov
addl
add
mov
je
inc
push
xchg
dec
enter
std
insb
add
or
pushf
jg
enter
gs
or
pop
xlat
jmp
push
lds
imul
lahf
sbb
xchg
mov
add
inc
sub
xchg
fcompl
or
push
insb
and
andl
xorl
fcomip
fwait
or
adc
push
pop
or
outsw
inc
jno
or
jg
push
dec
outsb
aas
iret
push
outsb
jne
or
adc
fiaddl
or
lahf
dec
shl
shll
aas
push
arpl
add
jmp
mov
imul
cmp
loop
das
cmp
and
or
nop
popa
mov
das
or
test
and
adcb
push
mov
mov
test
pop
push
ret
das
or
push
adc
pop
add
pop
pop
data16
pushl
dec
pop
inc
dec
inc
push
push
inc
push
add
mov
inc
inc
inc
inc
dec
xor
notl
dec
inc
dec
dec
arpl
lahf
mov
inc
inc
push
adc
inc
push
dec
dec
push
mov
and
inc
shll
insl
in
insl
dec
dec
and
out
inc
inc
xor
xor
adc
inc
dec
inc
and
inc
and
mov
xchg
inc
push
inc
inc
dec
mov
push
push
push
dec
dec
push
dec
dec
lea
stos
mov
sbb
enter
inc
inc
dec
push
mov
dec
inc
dec
cmp
fimuls
out
pop
dec
pop
adc
inc
push
push
push
dec
push
inc
scas
dec
inc
dec
clc
dec
push
mov
popf
cmp
push
cwtl
add
icebp
mov
mov
mov
add
sbb
and
add
jl
adc
mov
icebp
jl
orb
sbbb
add
add
add
or
mov
or
aas
cmp
and
add
fistps
cmp
inc
or
sbb
addl
mov
iret
or
add
add
mov
mov
pusha
out
adcl
shlb
mov
mov
sub
lea
mov
pop
mov
pushf
es
faddl
sbb
adc
ja
cvttps2pi
movsb
lcall
lds
ret
adc
mov
test
rclb
inc
imul
add
loop
and
sbb
cltd
push
jp
cmp
adcl
xor
icebp
pop
rorb
inc
clc
adc
imul
loop
push
test
mov
push
cmp
push
push
fmuls
popl
adc
das
cltd
add
add
nop
test
add
or
jne
lret
jae
and
push
or
jmp
lea
loope
pop
push
cmp
mov
or
repnz
mov
add
pop
and
inc
adc
outsb
jns
xor
test
mov
adc
xor
dec
out
movsl
jnp
daa
mov
enter
je
jl
inc
sbb
je
rol
jmp
adc
push
mov
add
inc
aam
pushf
mov
sbb
ja
sbb
adc
lea
incb
or
test
mov
sbb
lahf
ret
cmp
sbb
movsb
sub
mov
inc
fiaddl
xor
jns
fcomp
add
mov
iret
cld
mov
dec
or
pop
inc
fildl
or
xor
movsb
int3
jmp
ss
dec
mov
shlb
iret
cmp
adc
or
test
mov
dec
adc
and
xlat
repz
aam
sarb
fcmovnb
mov
xor
inc
adc
jne
jo
push
mov
les
adcl
movsb
popa
sub
rolb
lea
ljmp
in
aam
inc
lea
or
or
and
or
and
pop
sub
imul
jecxz
push
mov
dec
xor
adc
fmul
outsb
das
pop
data16
push
pop
shl
ficoml
adcl
loopne
mov
ret
add
add
pop
jnp
push
popf
mov
or
sub
xor
outsl
inc
sbb
add
bound
xchg
and
xor
push
mov
movb
mov
sbb
or
inc
push
aaa
in
push
leave
cmpb
nop
mov
dec
add
jb
sbb
or
dec
xor
and
in
pop
adc
cltd
sub
pusha
pop
and
and
in
sbb
sbb
sub
pop
push
jo
add
jne
fidivrs
pop
sub
xchg
fcoms
ds
mov
jae
xorl
das
mov
dec
in
js
add
sbb
sub
inc
or
test
cmp
push
enter
sbb
sbb
sbb
shrl
pop
push
adc
sbb
push
or
in
call
sbb
or
push
inc
xchg
sub
nop
call
dec
push
and
sub
outsl
push
xchg
js
pop
push
dec
xchg
push
sub
fs
clc
ds
mov
mov
push
or
mov
sbb
and
push
jo
add
and
shll
lock
mov
push
lea
jnp
jb
sbb
ss
test
insb
das
inc
stos
add
ret
loopne
inc
sbb
add
sti
inc
add
jmp
sub
jmp
je
sbb
add
adc
arpl
in
call
lock
xor
bound
aas
aaa
push
prefetchw
adc
enter
nop
mov
movsb
or
nop
out
and
xchg
cmp
mov
dec
ret
and
daa
inc
sbb
push
adc
inc
sub
pop
adc
adc
adc
dec
sahf
loopne
mov
dec
ret
mov
inc
cmp
adc
inc
mov
mov
outsl
shl
and
pushf
xchg
test
adc
adc
enter
cmp
jno
and
or
cli
scas
and
cs
idiv
sub
and
push
or
push
add
or
pop
or
or
xor
or
push
sub
push
pop
or
in
push
maxps
mov
test
or
or
adc
in
in
testb
data16
ja
bound
and
sub
iret
rcrl
xor
in
les
pop
or
add
jnp
sbb
adc
iret
js
dec
dec
add
les
cmp
adc
push
adc
inc
and
push
pop
fsubs
leave
push
pusha
push
inc
cwtl
or
jge
push
insl
pop
mov
outsb
or
lds
insl
ud0
sbb
bound
hlt
sub
dec
push
mov
cmpsl
lahf
pop
pop
rorb
sbb
cmp
adc
punpcklwd
xchg
rcrb
rolb
push
mov
adc
cmp
fadds
or
fldcw
or
cmp
mov
mov
daa
jp
xor
loopne
jnp
push
xlat
and
int
sub
roll
dec
pop
dec
jb
insl
sbb
and
cmpl
dec
js
enter
outsb
adc
andb
ds
fcoml
adc
push
xorb
js
dec
sbb
pushf
pop
ret
push
std
push
jle
pop
int3
inc
adc
enterw
xchg
int3
xor
and
pop
lods
adc
mov
or
jge
insl
movl
jge
xchg
pop
xor
in
data16
pop
inc
jae
dec
mov
xchg
cli
call
and
mov
cmp
je
mov
in
ds
mov
movsb
push
aad
test
adc
mov
mov
sbb
push
es
dec
fdivrs
ljmp
clc
cmpb
and
orb
cmp
sbb
out
push
subb
lock
not
and
mov
pop
cmp
je
test
cmpl
add
sti
fdivs
pusha
jns
mov
push
add
add
mulps
mov
loopne
mov
add
and
xor
push
xor
push
loopne
stos
mov
xchg
adc
or
adc
add
xbegin
ficompl
test
sbb
pusha
inc
xchg
sbbl
mov
inc
test
add
xchg
std
shlb
push
sti
ja
add
xor
mull
sub
push
inc
bswap
mov
das
mov
and
or
and
mov
pusha
pop
and
and
repnz
aas
pop
xor
cmpb
gs
decl
push
add
add
leave
ss
push
mov
pop
add
movsb
or
xor
mov
rcll
lea
addb
aaa
jmp
insb
ss
aaa
shll
add
add
pop
jae
cmp
and
call
jge
xchg
pop
mov
in
push
add
leave
outsb
aaa
insl
push
jo
xchg
push
adc
aaa
cmp
mov
nop
or
test
jo
enter
xchg
cmp
in
insb
and
loopne
int3
adc
in
movsl
arpl
fiaddl
les
call
sbb
xor
daa
aam
jle
xor
fstp
push
out
push
push
mov
push
xchg
fimull
push
insl
addr16
adc
inc
pop
mov
adc
add
add
or
mov
add
pop
orb
mov
cld
pop
and
dec
divl
shl
and
add
cltd
dec
popl
sar
xchg
or
inc
outsl
fdivrl
mov
unpcklps
lahf
mov
jp
mov
pop
sub
test
sub
sub
add
xor
out
add
or
test
ret
and
insb
push
clc
xchg
mov
clc
mov
fs
sub
or
sub
dec
push
push
or
and
mov
lret
rcrl
or
cmpsl
faddl
or
cmp
sbb
push
push
jge
imul
mov
mov
mov
testb
pop
and
out
ljmp
imul
lock
jmp
jns
addl
add
jno
xchg
push
sbb
lock
sub
inc
inc
das
inc
xor
mov
orb
dec
in
loopne
movb
mov
movsl
movb
add
dec
out
lock
adc
push
leave
jl
adc
pop
repnz
call
addr16
cmp
add
add
and
out
xor
sar
lret
xchg
lea
add
std
mov
mov
or
add
rclb
add
dec
xchg
faddp
inc
add
mov
dec
mov
cmp
aas
push
js
setno
mov
fwait
mov
push
mov
pop
pop
lds
mov
jne
and
push
jge
adc
adc
adc
sbb
push
inc
add
push
shll
movl
aam
in
pusha
aas
popf
sub
xor
push
ljmp
adc
bswap
shr
insl
add
decl
dec
jns
jmp
add
xor
out
mov
sub
shl
sbb
add
fbstp
sti
insl
cltd
idivb
add
adc
inc
or
xchg
cld
push
mov
dec
add
cld
dec
cmp
push
outsl
shrb
pop
call
pop
cmp
push
fstpl
jp
or
xor
idivl
das
rolb
jne
aas
sbb
add
inc
add
inc
movzwl
mov
test
push
cmpsl
fucom
movsl
cmp
das
daa
jmp
pop
repnz
addr16
or
or
push
cmp
lea
add
icebp
xorl
ss
in
dec
ret
imul
enter
cmp
clc
xor
mov
pop
jl
sbb
or
add
in
dec
inc
or
or
lea
cs
or
cld
adc
data16
inc
or
inc
mov
pop
pop
js
mov
clc
jo
sub
pop
fmul
jnp
testb
dec
mov
mov
or
add
push
cmp
scas
movups
faddp
inc
ljmp
add
mov
hlt
xor
sub
inc
daa
add
pusha
pop
xorb
sti
stos
or
ss
push
in
cmp
mov
add
push
xor
inc
push
aaa
outsb
cmp
inc
sbb
mov
mov
or
cld
and
sarb
pushf
sub
lret
mov
adc
push
jl,pn
or
adc
cmpsl
loop
aas
jge
addl
push
in
or
xor
push
add
test
push
hlt
fsubl
pop
cld
lret
pushf
js
vmovntps
sbb
add
dec
sbb
add
add
or
push
rol
and
stos
shrl
movl
popf
dec
adc
and
insb
pop
cld
push
push
mov
pop
in
aas
mov
add
stos
or
jae
aas
inc
ror
mov
stos
lock
mov
cmpsl
ljmp
dec
js
aam
enter
lret
rcrb
or
pop
adc
in
push
mov
lock
add
jp
cmp
pusha
sar
testl
clc
jg
test
jle
shr
inc
ljmp
xchg
mov
enter
cmp
jle
dec
xchg
cmc
add
push
mov
cmp
and
jbe
and
leave
cmovbe
into
and
sub
pop
add
jle
shrb
lods
popa
mov
inc
movsb
jge
or
and
je
mov
addr16
add
enter
fcomp
cmp
pushf
push
mov
hlt
mov
xchg
sbb
scas
iret
sub
or
clc
or
in
sub
push
or
lods
fmull
inc
sub
fdivrs
push
inc
add
das
mov
inc
xchg
loopne
hlt
test
mov
aas
inc
sti
sti
loope
ret
imul
sub
loopne
es
cmp
sbb
lea
jno
mov
cltd
fldt
sub
dec
jne
cmp
xor
popa
xchg
xor
mov
aam
daa
inc
dec
clc
add
in
add
sub
jno
adc
imul
dec
jl
lret
pop
aam
mov
call
arpl
sbb
rclb
inc
pop
in
enter
ret
adc
ja
xchg
xchg
leave
inc
mov
std
inc
mov
insl
mov
push
mov
les
ret
sub
shr
inc
das
jns
jge
cmp
int3
mov
movsb
mov
push
mov
cmp
aas
cwtl
mov
pop
mov
sbb
or
pop
pop
cwtl
loope
add
mov
or
shr
nop
divl
aas
cs
or
sub
dec
pusha
lock
dec
stos
adc
cmc
pop
adc
push
xor
cmpsl
mov
sarb
cmpsb
loopne
xchg
lods
jle
mov
pop
data16
test
cmp
ret
sbb
sbb
sub
add
sub
mov
loope
testl
xchg
pop
mov
add
xchg
insb
inc
add
in
jnp
add
push
jg
lock
ds
loopne
jmp
lds
in
and
jns
jne
test
adc
xor
dec
adc
adc
insb
and
call
xor
inc
mov
shlb
jae
imul
js
and
lahf
push
xchg
pop
and
jmp
dec
adc
mov
pop
mov
mov
test
js
cwtl
jmp
insb
cmc
out
adc
adc
cs
add
or
hlt
or
sub
adc
mov
inc
es
mov
mov
dec
inc
pop
popa
inc
adc
add
in
stos
nop
or
xor
xlat
hlt
xor
add
fisttps
shrb
enter
inc
aas
insb
test
daa
and
int
pop
stos
rcrl
mov
add
adcl
arpl
inc
call
inc
clc
clc
xor
sub
hlt
incl
or
mov
jmp
or
jg
loop
daa
lret
dec
xor
xchg
sbb
mov
out
sbb
lods
adc
push
loopne
test
addb
xchg
pop
push
pop
notl
pop
xchg
in
hlt
int3
inc
call
sahf
in
fwait
sbbb
nop
stos
imul
fistl
addl
sti
xchg
sbb
dec
dec
mov
jae
mov
int3
add
push
and
jo
loopne
add
and
push
or
pop
dec
sub
fmuls
mov
mov
mov
mov
add
mov
data16
mov
insl
mov
lods
cmpsl
mov
mov
iret
outsb
jg
mov
stos
cmp
add
test
sbb
in
in
ljmp
fcoms
in
loopne
fcoml
clc
call
cmp
push
int3
orl
lds
dec
cmpsl
inc
mov
and
scas
adc
push
adcb
fistpll
aaa
pop
mov
cmp
adc
cmovb
xor
ja
insl
mov
out
jnp
fildll
adcl
shr
xlat
insb
xor
fdivr
popa
loop
push
fildl
aaa
fdivrl
push
dec
cmp
stos
int3
popa
xchg
test
add
or
enter
adc
or
add
je
sub
pop
mov
mov
xchg
int3
pusha
sub
stos
mov
sahf
mov
inc
xchg
inc
dec
hlt
sahf
fs
inc
hlt
rorb
mov
add
jle
fwait
pop
sti
popa
fstps
push
popa
imul
pop
ret
xchg
add
and
movsl
shrb
fsts
ret
adc
mov
ret
xchg
mov
sbb
inc
push
add
in
and
or
incb
and
push
pop
adc
xchg
fdivrl
int3
push
inc
mov
adc
cmpsl
adc
pop
scas
mov
cmp
rorl
ltr
pop
fadd
addr16
jb
addl
scas
fadd
adc
add
or
and
xor
ds
jle
pop
dec
inc
test
inc
movsb
dec
inc
mov
add
mov
das
inc
mov
dec
add
sub
jmp
and
push
add
mov
push
inc
add
clc
mov
repnz
mov
inc
mov
hlt
mov
leave
xchg
cmp
mov
xor
movsl
es
add
push
cltd
divb
dec
add
popw
gs
in
imul
js
fmull
cmpsb
jle
sbb
xor
dec
inc
xchg
inc
dec
jne
and
jne
or
nop
mov
sbbl
dec
popf
mov
inc
movl
xchg
in
pop
outsb
aaa
test
xchg
add
ficoms
sub
jp
xlat
or
test
push
daa
add
adc
xor
and
sub
sbb
repnz
inc
add
pushl
pop
pusha
dec
outsb
stc
or
arpl
mov
and
mov
pushw
mov
push
push
jae
ret
repz
mov
push
int
mov
lods
aam
mov
or
inc
dec
inc
add
ret
imul
sbb
cmpsl
pop
insb
xor
mov
push
or
dec
popf
aas
push
add
xchg
ss
and
push
pushf
loope
enter
rcll
popa
or
or
into
les
sbb
lock
pop
cmpb
das
jge
sub
push
add
neg
mov
insb
mov
aas
ja
jb
sbb
dec
ds
pop
mov
mov
js
inc
cmp
push
or
mov
les
bound
mov
add
xor
stc
jge
xor
inc
mov
or
lock
fs
push
hlt
call
dec
mov
inc
cmp
xor
sbb
and
cmp
xor
mov
shl
adc
nop
outsl
shll
adc
and
and
mov
push
lret
xor
in
or
testb
push
pop
and
push
adc
xor
fs
sbb
xchg
in
inc
cmp
fistps
xor
dec
add
insl
mov
or
bound
stos
pop
add
inc
ss
mov
sub
sbbl
push
or
sbb
dec
mov
idivb
test
push
enter
lds
xchg
cmp
and
pop
lahf
or
sbb
and
enter
or
aam
inc
adc
movsb
aaa
mov
cs
enter
es
movsb
adc
sbb
aas
ror
push
jnp
sbb
or
jo
sbb
enter
mov
outsb
and
and
mov
xchg
dec
push
or
push
mov
in
jb
jbe
ret
mov
inc
cmp
xor
sub
xor
mov
jmp
test
pop
pop
sbb
mov
test
add
lds
mov
cmp
push
inc
or
rorb
je
test
mov
jmp
lods
mov
ss
or
jg
inc
bound
and
aaa
add
es
add
xorps
dec
out
adc
fisubs
cmp
fstpl
imul
fld1
shll
sub
in
mov
lods
jns
jmp
pop
ret
js
cmpb
push
mov
in
sub
inc
sub
mov
inc
clc
mov
addl
dec
or
push
popa
cmpsb
loop
in
fs
inc
sahf
das
imul
xor
dec
inc
xchg
nop
sub
add
out
pop
dec
jle
stc
mov
loopne
test
clc
push
aad
dec
push
enter
daa
lods
stos
push
clc
mov
sub
pop
addr16
ret
hlt
push
sbb
or
push
adc
rcr
pop
mov
iret
adc
pop
xchg
pop
mov
inc
mov
or
hlt
movsb
mov
mov
push
sbb
mov
sbb
add
push
jge
imul
or
push
fldt
fimull
lea
sbb
jno
and
int
xor
mov
xor
and
arpl
add
test
lcall
out
jle
push
push
add
push
push
mov
mov
xchg
pop
scas
stos
and
pop
adc
jo
jmp
or
rcrb
add
sub
or
les
fistps
xchg
rclb
pop
or
xchg
lea
jae
and
shrl
test
aaa
add
pop
push
pushf
add
sbbb
add
mov
inc
sub
pop
and
and
pop
mov
sub
daa
jns
popa
aam
adc
add
push
inc
sub
mov
mov
js
xchg
dec
cmp
es
jecxz
mov
mov
mov
jmp
jg
adc
aam
negl
daa
add
push
out
cmp
test
movsl
inc
and
mov
push
sbb
sbb
into
or
adc
push
add
or
pop
push
push
jecxz
loopne
xor
call
inc
xchg
fimuls
addr16
decl
adc
xchg
mov
and
or
mov
push
sub
jno
je
dec
dec
je
and
xchg
clc
pop
jl
js
jle
dec
jle
pop
fimull
mov
dec
shrb
test
movsb
push
in
xchg
pop
adc
inc
addr16
scas
fs
dec
mov
add
add
inc
mov
xor
add
inc
and
xchg
pushf
pcmpeqw
addb
out
sub
or
add
sbb
or
lock
xorb
jmp
push
push
jae
imul
mov
fsts
or
adc
in
lret
mov
outsl
in
sub
push
shlb
das
call
das
fdiv
xchg
mov
push
arpl
add
cld
daa
test
pop
or
divb
dec
lock
hlt
push
mov
xchg
cwtl
dec
dec
test
rclb
adc
and
ss
push
addr16
popa
in
xor
adc
aas
xor
pop
xor
dec
or
inc
xor
popf
mov
push
nop
xchg
sbb
jle
pop
shr
movsb
adc
popf
adc
enter
ret
aaa
dec
cmp
nop
daa
ss
addl
xchg
or
xchg
and
lds
add
or
ret
jmp
push
adc
push
rcll
and
cwtl
movsb
or
mov
cwtl
les
cmp
mov
shlb
dec
inc
je
add
in
das
fldcw
xor
inc
push
dec
inc
insl
ja
dec
enter
or
test
fs
out
mov
adc
xchg
loope
fmuls
mov
sbb
icebp
sub
mov
adc
adc
rcrl
sub
aaa
pop
enter
or
cmp
stos
sbb
clc
pcmpeqd
sbb
lcall
fiadds
push
and
pop
xor
subl
sar
addl
pusha
fldenv
mov
xor
and
push
push
test
arpl
mov
lret
sbb
call
ret
bound
push
xchg
xlat
jge
or
or
fimull
bnd
clc
pop
sbb
cltd
lcall
rep
in
pop
fistl
mov
daa
enter
sbbl
daa
mov
xor
dec
add
enter
xor
in
leave
addr16
mov
test
imul
jg
cmpsl
cmp
mov
into
mov
jne
or
xchg
movb
cmp
dec
dec
stc
add
sub
mov
jo
add
sbb
cmp
push
scas
pop
scas
mov
pusha
push
subb
adc
adc
jmp
mov
xchg
stc
sub
popf
xchg
adc
adc
or
push
sbb
fisttpll
sub
push
or
and
jbe
fadds
pop
cs
sub
sbb
addr16
xor
sub
jmp
pop
push
adc
rolb
daa
pop
fs
jo
je
xor
push
das
aaa
andb
in
loope
adc
xchg
cmp
xchg
or
push
js
adc
sbb
dec
cs
jle
and
fistps
xor
fdivl
js
push
call
add
fs
dec
fs
ret
cmp
mov
pop
add
movsl
inc
add
fldt
nop
addl
dec
inc
shlb
dec
test
subl
or
add
pop
and
jb
adc
sbb
enter
daa
sbb
sbb
adc
push
int3
or
mov
pop
out
hlt
xorb
imulb
loope
adc
pop
nop
jmp
xchg
imul
cmpsl
inc
icebp
out
orb
pop
cltd
jo
js
pushf
pop
nop
mov
negl
and
lock
test
sub
je
test
cmp
movsb
add
xchg
mov
mov
sahf
push
je
add
push
add
cld
inc
jecxz
inc
sbbb
or
jmp
pop
dec
in
push
add
ret
sub
mov
ljmp
and
mov
xchg
aad
sub
dec
xchg
xchg
sbb
push
jae
xor
sbb
inc
pop
cmpsb
data16
dec
loope
rolb
in
loop
inc
xlat
xchg
lods
xor
add
mov
sub
mov
movsb
or
lret
sbb
iret
inc
xor
pop
push
repnz
lea
pop
or
enter
mov
jns
push
in
sub
fucomi
lret
out
pop
dec
js
add
mov
inc
cltd
sbb
jbe
add
sbb
add
ja
jns
push
mov
push
add
push
mov
sub
sbb
mov
xchg
mov
push
outsl
fadds
jl
pusha
pop
stc
mov
add
fwait
and
xor
pop
enter
cwtl
daa
mov
pushl
mov
or
add
jmp
adc
jecxz
enter
imul
es
sub
dec
fsubl
push
sub
or
cmp
ficompl
adc
lods
cmp
jmp
sub
mov
or
xchg
sub
movb
test
ffree
les
jmp
fwait
lds
inc
mov
sbb
andb
cmp
cmp
pusha
pop
shrl
pushl
mov
mov
cwtl
push
inc
mov
and
iret
addr16
rcrb
mov
test
dec
imul
fcmovnu
jecxz
jo
add
or
mov
aaa
outsl
jo
dec
lods
xor
mov
push
outsl
sbb
jmp
test
pop
dec
adc
int
mov
pusha
pop
nop
pop
pusha
dec
jb
movsb
pop
aad
push
imul
lret
fsts
and
shlb
push
push
cltd
pop
lahf
dec
pop
lcall
sub
xor
js
cmc
daa
fs
add
inc
insb
mov
das
add
jnp
repnz
push
mov
or
cmp
dec
pop
inc
or
dec
cmp
sbb
int
inc
out
add
adc
lods
xor
fs
es
adc
mov
lahf
sub
push
jp
frstor
mov
push
test
pop
lock
mov
icebp
xchg
push
inc
inc
fcoms
fisubrl
lret
aad
push
pop
int3
adc
je
fistpl
jl
mov
es
adc
push
ss
pop
movl
pop
iret
lods
push
cli
dec
pop
mov
cmp
jne
add
sbb
xchg
mov
xlat
pop
in
inc
push
sbb
lods
sub
adc
and
nop
jbe
es
jne
sub
mov
sbb
add
cmp
sbb
js
push
nop
push
movb
jge
push
mov
bound
in
mov
in
jp
incb
adc
sub
pop
add
or
and
jne
je
dec
inc
aaa
or
out
or
and
or
jg
cmp
fistpll
inc
mov
sub
inc
faddl
test
movl
sbb
add
sub
rclb
and
lahf
call
mov
inc
dec
mov
out
push
fmull
into
xor
fisttpl
sbb
push
and
lods
ret
shrl
fistpl
int
cmpsl
negb
push
or
push
fdivrl
mov
mov
pop
jecxz
sbb
mov
adc
aas
cmpsl
hlt
cmp
fs
stos
add
and
je
scas
dec
jecxz
imul
add
cmp
and
or
xchg
mov
adc
in
enter
clc
adc
adc
sub
sub
mov
push
adc
imul
das
fcmovb
inc
mov
ret
dec
xchg
xchg
inc
adc
mov
test
in
xor
add
jne
mov
xor
mov
or
xchg
xor
dec
mov
jge
cs
inc
out
jl
lock
push
inc
or
xor
das
enter
sub
sbb
lods
and
arpl
xlat
sbb
mov
jle
dec
clc
jb
or
loopne
mov
int3
shll
push
sbb
add
sub
mov
cmp
inc
in
xorb
xor
pop
pusha
pop
adc
adc
aam
adc
mov
imul
push
xchg
cmp
enter
je
mov
xor
shlb
or
nop
add
sub
fs
adc
push
mov
std
loopne
loopne
orb
dec
adc
adc
mov
cmpsb
sbb
inc
jp
add
xchg
aad
xor
mov
cmp
mov
inc
sahf
sub
test
jae
sbb
adc
jecxz
stos
or
dec
sbbb
addl
lock
mov
or
iret
pop
push
mov
xchg
test
jg
sbb
mov
test
lsl
mov
xor
push
push
shlb
jmp
inc
aam
or
or
fmuls
and
out
movb
nop
dec
rcrb
and
sub
and
jne
push
test
mov
mov
into
add
lods
loopne
add
lcall
pop
mov
inc
addr16
push
inc
hlt
mov
lock
inc
out
add
add
pop
test
or
jno
sub
ljmp
add
push
test
loope
psubsb
xor
fisttps
fisubrl
lock
lock
imul
push
inc
or
cmpb
mov
cwtl
mov
jne
repnz
repnz
jns
in
xor
popa
popa
not
or
dec
mov
shrb
push
fcom
xorl
pop
push
sub
movl
cltd
in
adc
or
cmpsl
std
push
or
loope
add
insb
outsb
pusha
push
inc
cmp
jge
sub
imul
mov
les
jo
xchg
imul
nop
add
sbb
arpl
cmc
fistl
sub
call
inc
and
xchg
ja
and
xor
cmp
add
xchg
bound
in
push
xchg
jo
mov
ja
dec
pop
xchg
mov
imul
cmp
cmp
test
and
mov
popa
xchg
mov
push
mov
mov
push
xchg
jge
and
es
xor
push
xchg
clc
mov
adc
mov
and
movl
ss
test
and
xor
xor
ret
add
not
imul
fists
push
add
sbb
add
les
lret
arpl
fst
xor
add
mov
sti
xchg
cmpsb
push
or
sbb
pop
mov
xor
adc
lret
int
sub
push
push
test
inc
pop
in
pop
sub
inc
jnp
loope
sub
ret
rol
daa
cmp
das
and
pusha
mov
sbb
cwtl
sbb
pinsrw
imul
sbb
negl
pop
jg
movzwl
pop
dec
sub
scas
rcrl
lret
cmp
dec
add
gs
cwtl
fstpl
add
repz
dec
pop
shr
sbb
inc
loop
popa
insb
cmpb
add
push
fiaddl
jnp
mov
adc
leave
adc
les
sti
inc
cmpsb
add
push
andl
clc
imul
call
movsl
sub
dec
inc
or
inc
leave
popf
notl
xlat
inc
sbb
pop
and
pop
mov
test
mov
jnp
insb
cmovs
mov
sbb
inc
andl
ret
rcr
icebp
adc
fcoms
or
sub
cmp
adc
and
loopne
inc
push
out
pop
lock
loope
imul
sub
inc
popf
jo
jnp
xorl
add
add
or
or
mov
lret
xor
adc
stos
sub
push
inc
pop
sbb
mov
movsb
hlt
jo
insb
add
mov
stc
sub
cwtl
mov
sub
add
lock
sub
pop
sub
add
pop
subb
xor
inc
xor
ret
or
rorl
adc
popa
or
pop
mov
in
mov
decb
adc
pop
sbb
pusha
call
adc
dec
leave
sbb
in
sub
inc
test
cmp
jmp
sahf
or
sbb
cmp
pop
enter
xchg
lods
pop
jo
sbb
into
adc
mov
insb
xor
cmc
add
mov
addr16
lea
rcll
sbb
adc
decl
je
sub
je
sub
inc
addl
je
jmp
mov
xor
inc
clc
mov
jne
mov
lods
out
movsl
mov
jmp
imul
jp
lock
jmp
jmp
mov
or
adc
cmp
bound
sbb
dec
aaa
fdivrs
mov
cmp
or
insl
in
scas
decl
jle
sub
dec
mov
or
rcrl
in
pushf
imul
add
xor
ret
push
popa
movsl
push
fisttps
sub
rclb
lds
pop
jmp
push
xor
mov
inc
mov
mov
lods
push
jp
outsl
imul
dec
jge
sbb
mov
adc
js
sbb
or
enter
sbb
add
dec
add
dec
or
jge
sub
sbb
mov
jnp
cmp
push
ja
jae
or
sarb
popa
cs
sub
test
mov
outsb
jne
fs
or
loopne
inc
push
dec
push
nop
xchg
mov
jle
mov
lods
dec
cmp
addl
jle
pop
sub
mov
aaa
adc
add
mov
and
mov
sub
dec
aaa
lcall
or
push
pop
push
push
push
insb
ss
adc
add
dec
movb
sbb
sub
xor
out
iret
daa
mov
jg
pop
mov
imul
adc
jnp
insb
aad
call
rorb
cmp
inc
or
pop
mov
pop
or
sbb
pop
add
jne
push
push
mov
adc
pop
out
push
sub
ljmp
test
add
jecxz
push
jno
shrb
call
add
mov
fld
push
add
pusha
add
mov
lea
aas
arpl
mov
mov
shrl
lods
stos
ss
jle
inc
jo
inc
mov
add
inc
and
pop
iret
fs
test
ret
or
icebp
lea
fiadds
daa
push
outsl
andl
addl
pop
clc
pop
inc
lock
mov
mov
dec
push
add
xchg
pop
inc
mov
dec
mov
adc
mov
xchg
clc
popf
les
daa
push
mov
cmp
mov
xor
cmp
xorl
and
mov
ret
dec
pop
add
push
or
repz
popf
rorb
fadds
loopne
mov
movsl
loopne
adc
pop
mov
rcr
lcall
dec
or
add
sbb
nop
outsl
enter
xchg
in
xchg
mov
mov
lds
jp
pop
sbb
movsl
push
pop
mov
outsl
lcall
or
push
sub
mov
hlt
inc
daa
jae
leave
sbb
or
push
call
pop
add
add
test
add
enter
sub
push
mov
and
mov
pop
sbb
xchg
ret
or
lock
pop
pop
and
testb
lods
sub
fimull
jo
mov
inc
test
dec
cmp
pop
or
ljmp
scas
inc
add
add
push
movsb
repz
jne
femms
imull
sbb
arpl
in
lock
pusha
js
add
sub
sti
cmp
jo
mov
movzbl
lods
movsb
and
jne
sub
cwtl
je
dec
das
mov
scas
push
sub
inc
jmp
mov
mov
test
in
inc
inc
mov
adc
push
addr16
add
cs
xor
xchg
pop
xchg
outsl
mov
iret
test
add
pop
lods
mov
push
xchg
jmp
lods
orl
mov
sub
push
push
push
xor
sti
sub
sbb
int3
cld
mov
inc
or
add
mov
orb
mov
mov
cmpsl
imul
stos
test
sub
cs
je
dec
inc
rcl
adc
xchg
adc
mov
loope
in
shl
xchg
sarl
dec
add
dec
add
inc
cmp
leave
test
rcll
xor
dec
in
mov
lds
jbe
ss
adc
sub
push
dec
and
imul
jb
fs
and
fsubrs
inc
xchg
pop
xchg
adc
and
mov
and
mov
xchg
ret
push
push
sub
out
or
mov
adc
mov
movsb
inc
and
add
lods
lahf
jnp
inc
shlb
push
mov
push
pusha
popa
mov
or
or
test
or
jp
and
push
jno
adc
lea
adc
cmp
lret
stc
xlat
ret
movsl
mov
pusha
and
push
jle
in
lret
addl
jmp
sbb
xchg
push
jmp
push
shll
jmp
mov
outsl
mov
ret
inc
daa
inc
xchg
into
test
pop
cld
xor
stos
cmp
push
imul
cmp
mov
add
add
jle
adc
xchg
adc
test
testl
pcmpeqb
cltd
jo
int
xor
mov
mov
or
inc
add
sbb
sub
or
adc
sub
cmp
push
adc
push
jo
cld
push
or
mov
lea
cmp
sti
push
in
movsl
jns
jns
ja
or
xchg
inc
cmp
pop
or
pop
sbb
das
gs
cmp
icebp
add
addb
mov
add
adc
inc
mov
bound
mov
and
nop
add
mov
add
jge
push
and
dec
xchg
popa
imul
or
sub
mov
inc
push
add
inc
dec
shl
and
and
push
in
repz
adc
pop
inc
and
xlat
mov
lahf
inc
loope
sbb
sbb
mov
pop
adc
stc
lea
cmp
and
inc
sbb
mov
lret
xchg
cmp
mov
iret
das
inc
xor
or
inc
daa
orb
lea
or
rclb
aad
and
inc
and
rcll
mov
push
je
loop
scas
xchg
push
jo
pop
xorb
sbb
shll
push
push
sbb
movsb
pushf
mov
fldenv
mov
inc
mov
pop
push
cmpsl
sbb
inc
ret
fucomp
movzbl
sub
test
cmc
enter
clc
int
or
sti
test
dec
out
clc
mov
inc
aad
push
imul
add
jmp
mov
lahf
test
rolb
das
stc
pusha
ds
jmp
lds
add
inc
inc
mov
jp
xor
sbb
int3
mov
cwtl
pusha
xchg
adc
or
xor
leave
sbb
sbb
fs
cmp
loop
sub
jno
and
ja
fidivrl
andb
iret
push
lds
subl
or
insb
data16
aad
inc
push
loopne
dec
jg
mov
sub
ss
jp
cmp
push
sbb
push
aam
adc
mov
sbb
and
mov
movsb
dec
or
ja,pt
in
fstps
and
ljmp
repnz
sbb
lock
jo
mov
in
cmpsl
sub
adc
dec
test
adc
imul
mov
imul
loopne
cmp
jae
inc
bound
inc
fisubl
loop
xor
aaa
or
pop
xchg
jbe
adc
add
daa
xor
aad
inc
lock
cmpsl
adc
shrl
into
test
xorb
in
daa
and
inc
or
mov
mov
js
bound
xor
cmp
inc
and
or
sub
scas
cs
push
jbe
push
adc
push
imulb
or
cmp
xor
pop
mov
adc
je
aaa
pop
jns
aam
imul
cmp
pop
jecxz
xor
pop
sub
push
mov
sbb
add
inc
cmp
mov
xchg
mov
stc
lret
and
sub
pop
push
dec
sbb
adc
or
je
xlat
adc
pop
sahf
test
add
jo
sbb
or
xor
mov
faddl
popf
inc
dec
push
leave
inc
inc
xchg
dec
sbb
or
arpl
and
add
decl
adc
add
xor
xor
ja
inc
and
xor
adc
add
adc
pushf
movsb
push
and
jmp
mov
les
loopne
popf
pop
cmc
jmp
movsb
and
xchg
mov
dec
js
movsl
pop
adc
adc
insb
dec
or
les
lods
popf
stc
pusha
sbb
movsb
or
cmpsl
jne
adc
jo
scas
inc
adc
fmuls
and
daa
adc
xchg
or
fnsave
pusha
pop
sbb
aam
lods
stos
int3
mov
addr16
mov
stos
mov
rorl
mov
aaa
xchg
jmp
adc
dec
add
loope
movzwl
adc
add
dec
jmp
clc
sbb
bound
imul
adc
pop
adc
sub
xchg
outsl
push
cmp
add
roll
cmp
mov
stos
xchg
into
daa
xor
lea
or
mov
outsb
xchg
js
adcb
cmp
adc
scas
pop
cmp
stos
pop
rolb
lret
popa
jo
xor
pop
adc
imul
notl
or
xor
loope
cmp
push
sbbb
xor
xchg
shlb
sub
mov
les
insl
xlat
xor
mov
push
ss
aaa
sub
jnp
shl
subl
mov
pop
jb
or
test
popa
fbld
aas
add
loop
daa
push
jmp
cmpsl
icebp
mov
nop
xchg
cli
add
mov
sub
sub
divl
inc
arpl
enter
push
daa
mov
add
or
fwait
pop
push
adc
and
sti
sbb
add
cmp
rorb
outsl
push
mov
mov
jmp
jp
xorb
sub
jne
mov
mov
cmp
fadds
xor
mov
cmp
and
pop
bound
aam
xor
and
add
xchg
mov
sub
loop
nop
addr16
mov
push
ja
pop
test
das
sbb
popa
leave
or
std
xor
cmp
jne
push
or
sub
dec
mov
and
std
es
inc
and
ret
cmp
and
subps
xchg
mov
lock
push
addl
adc
adc
add
jo
pop
or
xor
cmpl
sbb
sub
dec
lcall
mov
sbb
and
push
dec
scas
jne
sar
pop
push
push
mov
and
inc
dec
or
inc
mov
dec
or
inc
cmp
rorb
and
into
xor
mov
pop
stos
add
or
punpckhbw
ss
pop
or
outsl
hlt
lods
sarb
imul
ret
mov
loop
hlt
inc
pop
jmp
inc
cld
sub
popf
nop
mov
xor
and
add
pop
xor
push
insb
lock
lcall
push
sahf
imul
inc
adc
jae
and
mov
shll
in
pop
loopne
in
ret
call
and
mov
ds
loope
jl
inc
pushf
push
outsb
or
imul
nop
cmp
lcall
in
shlb
pop
and
push
and
mov
jae
fcoml
movsb
or
hlt
mov
mov
mov
in
push
pop
mov
push
push
mov
fisubrs
adc
call
add
mov
bound
pop
aaa
test
or
mov
sbb
sub
mov
fiadds
sarb
push
jl
leave
sbb
aad
hlt
lock
xor
mov
inc
ds
rdpmc
lods
push
jg
popf
inc
mov
and
pop
or
iret
test
idivl
dec
ja
popf
inc
cmp
lgs
mov
push
or
hlt
gs
jnp
popl
jns
stc
push
pushf
inc
pop
sahf
inc
push
push
fs
or
dec
or
add
push
mov
push
jbe
xchg
push
popf
das
mov
cmp
pop
xor
mov
mov
popf
push
adc
dec
jns
lea
pop
mov
decl
aaa
stos
and
stc
outsl
or
inc
lods
aas
cmp
mov
dec
dec
fldl
xor
popf
rorb
push
add
dec
ljmp
jb
ljmp
sahf
clc
inc
mov
adcl
orl
push
enter
push
popa
cmpl
push
push
clts
sbb
dec
inc
inc
sbb
cmp
xor
nop
inc
push
xor
xchg
inc
push
sbb
sbb
cmp
sbbl
outsb
xchg
xor
dec
fmuls
add
mov
aaa
pushf
cmpb
and
push
mov
xor
mov
sub
pop
lea
mov
or
nop
mov
adc
push
mov
mov
insl
adc
pop
mov
jmp
lods
out
lods
je
movb
dec
dec
repz
push
mov
mov
je
jb
xor
insb
inc
push
cmp
and
dec
loop
fwait
push
push
jmp
push
sub
jb
je
pop
jae
sbb
adc
mov
or
mov
push
push
leave
rcll
int3
push
adc
data16
mov
adc
xchg
andl
repz
or
sub
mov
adc
push
cmp
loopne
test
into
jns
add
add
or
push
popa
cmp
jle
push
and
jle
mov
imul
mov
xor
shlb
ds
sub
cmp
and
mov
add
add
aas
sub
cmp
sbb
iret
cmp
jmp
lods
bound
ficomps
fsubr
or
lock
push
xor
jbe
nop
xchg
add
daa
adc
sub
and
dec
adc
sub
repz
or
or
lahf
xchg
or
jmp
xor
or
insl
and
sbb
or
cmp
and
repnz
or
xchg
ret
pusha
das
adc
ss
push
rcrb
test
andb
dec
xor
std
cmpl
jne
xor
sub
xchg
push
das
lea
xor
andl
or
and
push
adc
jle
lea
adc
lock
cmpsl
mov
cmp
ds
jb
push
lock
sub
jns
imul
cld
sub
inc
pop
cmpsl
in
push
jb
push
movsb
adc
das
and
in
adc
movsb
enter
cmovno
sub
inc
dec
sbb
pop
jb
repnz
xor
cmpsb
das
cs
in
sbb
push
dec
jne
loopne
mov
push
mov
xchg
inc
mov
add
push
mov
inc
andb
ficoml
pop
dec
hlt
sbb
fiaddl
gs
neg
pop
push
lret
or
or
push
enter
ja
sbb
and
loope
jbe
ss
sub
dec
jnp
push
push
xor
fbld
mov
push
push
es
shlb
outsb
jne
ds
or
insb
popa
jns
jae
push
sbb
sarb
movl
add
mov
or
sub
adc
iret
data16
les
mov
mov
mov
push
push
inc
push
fiadds
dec
incl
cmpsl
and
dec
and
push
jp
add
insb
xlat
leave
orl
cmpsb
jne
dec
xor
pop
prefetchw
adc
loopne
std
outsl
inc
cld
lahf
inc
mov
xchg
cld
mov
pop
rcll
mov
popl
inc
sub
mov
outsb
or
test
inc
inc
imul
or
les
dec
jno
push
imul
ja
fbld
inc
dec
or
pop
mov
jnp
cmpsl
inc
data16
data16
jbe
or
mov
mov
cld
loopne
pop
and
idivl
push
sub
adc
mov
add
mov
cld
test
sub
or
pusha
test
mov
jb
popa
sub
push
shlb
scas
push
dec
addl
cmpsb
or
or
dec
test
mov
dec
aam
fmuls
mov
sahf
movsb
add
movsl
add
frstor
dec
shll
mov
lea
jmp
mov
ror
rcr
jecxz
push
adc
stos
imul
cmp
nop
rcrb
inc
push
add
add
push
scas
ljmp
mov
inc
push
cmpsl
andl
push
or
dec
add
bndstx
call
clc
clc
mov
xlat
cmp
movsl
sti
cmp
add
mov
frstor
les
mov
push
sub
sub
xchg
test
iret
lahf
nop
les
lock
and
mov
adc
inc
push
jecxz
mov
inc
mov
lods
inc
push
inc
or
je
imul
fwait
das
inc
jbe,pn
lea
sbb
cld
sbb
pop
aam
movsl
cmp
sub
das
or
lods
iret
xor
fwait
lock
sbb
adc
into
in
shlb
add
f2xm1
dec
testb
cmp
lods
pop
insb
icebp
push
xchg
adc
test
ja
add
and
mov
lods
sbb
lods
and
sub
xor
data16
out
and
inc
inc
adc
xor
rorb
in
lock
stos
sbb
jg
in
and
outsb
or
add
xor
jo
cmp
stos
sbb
xchg
sub
pop
loop
add
mov
repnz
mov
addl
xor
xor
rolb
add
addr16
stc
or
cmp
lods
sahf
test
repnz
adcl
pop
mov
pop
xchg
inc
or
fimull
pop
hlt
sub
test
sbb
or
mov
cmp
hlt
jne
push
lret
fidivrs
in
jle
adc
leave
sub
add
adc
add
dec
popf
sbb
and
fucomi
daa
fists
scas
sub
sbb
and
jmp
mov
push
enter
pop
xchg
je
mov
sub
xchg
or
movsl
xlat
mov
and
push
inc
jo
and
ss
cmpsl
inc
mov
dec
jne
adc
sbb
or
and
in
pop
adc
rcll
je
pop
adc
sbb
jge
lock
add
push
adc
adc
push
sbb
dec
daa
fstl
or
xor
or
ja
add
bound
aaa
and
movsb
xchg
or
in
shl
pop
js
and
and
jno
inc
lods
pop
addb
cmp
fsubl
pushf
xorb
daa
lea
or
pop
push
pop
or
cmp
rcll
sbb
shlb
add
push
jo
fsubr
pop
insl
jle
adc
mov
cmp
and
test
cwtl
sub
hlt
sbb
xchg
shr
lcall
in
js
dec
adc
pop
fadd
cmp
jmp
hlt
les
inc
push
sbb
je
cmpsl
push
dec
mov
scas
mov
loopne
out
inc
mov
and
dec
sbb
pushf
cmpsb
int3
push
and
and
sar
call
add
push
jns
es
and
mov
add
enter
sub
js
adc
jne
mov
sbb
jno
insl
inc
inc
test
xchg
imul
push
xchg
das
lock
inc
repnz
and
call
sbb
push
cld
in
dec
psraw
push
push
pop
enter
jnp
sub
inc
dec
inc
sahf
pop
pop
das
add
jmp
cltd
or
in
js
shll
adc
popa
pop
pop
xchg
ja
es
xchg
clc
mov
sbb
out
xor
sbb
and
xor
daa
jns
test
lock
mov
cltd
ja
fmuls
jmp
mov
pop
push
loope
pop
xor
insb
mov
push
inc
sbb
and
jne
leave
fdivr
mov
stc
mov
cld
or
ljmpw
je
or
sbb
sbb
xchg
loope
and
ret
sbbb
xor
adc
test
lahf
shlb
leave
add
xor
ret
mov
sbb
jg
decl
pop
fdivrs
cmp
jne
sbb
jg
push
adc
inc
cs
sbb
sbb
shlb
xor
jo
inc
bound
xor
dec
pop
movsl
adc
mov
adc
je
cmp
shl
inc
mov
add
mov
sub
xchg
shlb
clc
sbb
shrl
inc
or
inc
sbb
fs
pop
jo
fsubl
cmp
in
adc
add
neg
sbb
push
xchg
faddl
addr16
dec
je
test
mov
hlt
aaa
push
dec
push
bound
outsb
pop
lods
in
in
js
insb
fcoms
xchg
in
jo
cmp
rolb
xor
mov
bnd
dec
inc
or
out
je
and
enter
jno
cmp
cmp
jl
push
pop
test
and
enter
pop
js
jns
cltd
pusha
lods
pusha
nop
ret
es
adcl
insl
arpl
add
inc
scas
sub
cwtl
cmp
out
adc
push
sub
or
maxps
rclb
push
pushf
es
and
int3
cmp
pop
push
push
sub
cli
das
jnp
addb
pop
outsl
jae
sbb
push
filds
cltd
in
xchg
int
push
aam
push
insl
aas
xor
outsl
cmp
and
push
rol
push
mov
sbb
daa
adc
nop
cwtl
mov
dec
aas
call
out
dec
sub
pop
cmp
push
inc
jb
sbb
add
ja
popf
cmpsb
adc
cmpsl
add
cmp
mov
xchg
push
inc
sbb
dec
scas
add
mov
push
test
push
jns
sbb
add
test
daa
loop
dec
mov
enter
xor
mov
adc
scas
stc
into
sbb
adc
sbb
mov
cmp
sbb
cmp
xchg
cwtl
pushf
mov
movsb
test
mov
cmp
cmp
cmp
enter
cmp
cmp
fcomp
loopne
cmp
cmp
call
cmp
hlt
clc
cld
add
add
or
pushf
pushf
pushf
pushf
adc
sbb
pushf
pushf
pushf
pushf
and
sub
sbb
sahf
pushf
xor
mov
mov
push
dec
pextrw
inc
pop
mov
mov
inc
adc
adc
pop
push
pop
arpl
test
ret
out
sbb
sbb
addl
sub
test
inc
sahf
add
mov
jns
in
xchg
adcb
pushf
test
push
in
mov
inc
sahf
add
or
add
mov
mov
iret
cmpl
enter
shrb
pop
les
sbb
jae
int3
cwtl
rolb
aam
enter
fcom
fsub
ds
repnz
lock
les
nop
addr16
call
push
in
lock
out
sahf
hlt
push
clc
push
cld
js
mov
add
or
repnz
lods
or
adc
iret
cmpl
enter
sbb
sahf
add
and
in
nop
cmp
push
sub
sahf
add
xor
mov
cmpsl
ljmp
cld
and
jne
je
gs
xlat
inc
add
enter
outsb
add
inc
insb
outsl
jae
and
mov
inc
movsb
lods
sbbb
rcll
inc
loope
add
add
imul
popa
jb
or
daa
mov
loopne
test
je
lods
push
dec
popa
jne
cmp
test
imul
xor
fs
pop
inc
or
dec
dec
arpl
jae
out
sbb
inc
dec
daa
fs
or
outsb
jae
push
xor
fiaddl
pop
pop
mov
xchg
aam
pop
add
ret
fists
xchg
stos
sub
xor
jae
or
xchg
add
pop
mov
pop
dec
xor
inc
or
cmpsl
subl
xor
sub
pop
or
outsb
popa
and
mov
pushf
addl
push
pop
or
fcompl
in
pop
mov
mov
xchg
sbb
and
adc
push
pop
ja
sbb
push
jg
lods
pop
xchg
loope
je
addr16
jne
imul
inc
adc
pusha
mov
imul
push
das
pop
xchg
xor
enter
xchg
cltd
xor
arpl
loope
andl
outsl
adc
mov
dec
popa
or
insb
pop
mov
dec
pop
imul
popa
les
cmp
and
push
add
bound
dec
lahf
subl
mov
dec
mov
dec
mov
je
dec
mov
outsl
push
lods
inc
je
xchg
cmp
jl
xor
js
in
push
and
and
push
in
pop
jnp
outsl
pop
sub
push
in
mov
pop
inc
cmpsb
in
fs
in
push
in
pusha
pushf
push
in
cmpsb
pusha
int
inc
cmpsb
in
aam
in
pop
repnz
push
in
mov
insb
inc
cmpsb
in
inc
insb
pushf
xlat
push
push
cs
pop
fcompl
add
ss
push
pop
bswap
outsl
nop
vmwrite
lret
lret
lods
mov
mov
push
xor
out
and
incl
sarl
add
in
cs
shrb
sbb
add
sbb
fs
adc
lds
push
pop
sub
push
xor
jae
sub
xor
dec
fisttps
flds
pop
pop
cmp
cmp
or
mov
pop
dec
dec
popf
lock
pop
dec
outsb
rclb
out
push
push
add
insl
lods
push
shufps
and
xor
push
push
inc
inc
mov
mov
iret
adcb
pop
add
jmp
movsl
jg
push
adc
adc
js
dec
adc
shlb
inc
cmp
movsb
dec
inc
jbe
inc
add
cmp
and
push
push
add
mov
insb
jecxz
imul
xchg
dec
pop
ret
inc
adc
sbb
mov
pop
adc
in
inc
fidivl
das
pop
test
pop
out
or
es
cmpsb
jbe
imul
pop
rcr
add
test
pusha
andb
add
inc
jmp
xchg
inc
push
push
pop
ret
insb
repz
push
test
das
in
dec
jnp
pop
mov
dec
mov
jl
adc
inc
mov
dec
out
add
pusha
inc
fmull
roll
pop
cli
mov
test
inc
arpl
or
push
fimull
mov
or
add
push
lcall
leave
int
popa
pop
rcll
add
add
dec
mov
arpl
pop
mov
pop
dec
add
pop
push
daa
negb
addr16
cmpsb
ret
sbb
inc
insb
insb
pop
fidivl
pop
or
and
adc
adc
cli
shrb
int
arpl
mov
insl
push
sbb
movsb
jmp
pop
cltd
jbe
stos
and
sub
xchg
add
mov
aas
jecxz
lea
shlb
subb
aad
mov
insb
addr16
push
xor
imul
or
push
adc
and
insl
dec
jmp
dec
in
mov
out
call
cs
or
jnp
mov
fdivs
jno
jae
nop
out
jae
loopne
int3
sbb
insl
nop
enterw
les
jbe
outsl
mov
movsb
inc
cmp
jbe
testl
into
jo
popf
sbb
inc
movsl
cmp
or
ds
adc
mov
or
pop
or
inc
jo
pop
icebp
pop
cmpsb
xor
lods
aaa
in
add
mov
inc
jbe
xor
aam
xor
jl
mov
or
ds
pop
and
xlat
push
cmp
inc
push
inc
sbb
aad
and
fbld
add
aam
xchg
sarl
loope
push
imul
cmp
or
jo
or
add
test
jae
loop
sub
push
bound
fistpll
insb
mov
lea
sbb
in
lds
cmp
push
je
or
das
inc
add
movsb
push
push
pop
test
je
xor
fdivl
mov
pop
ror
imul
jae
xor
aas
push
pusha
leave
or
and
cmpsl
xor
sbb
nop
andb
add
inc
dec
adc
and
jmp
push
mov
xor
sub
sbb
imul
inc
arpl
call
fdivs
push
inc
push
enter
inc
xlat
cmp
or
testl
push
xor
dec
xor
cmp
push
add
cmp
adc
sub
cvttps2pi
and
adc
xor
and
and
and
sbb
sbb
push
or
enter
add
enter
add
and
and
or
or
push
cmp
enter
icebp
fs
inc
push
repnz
nop
inc
push
sbb
div
mov
das
add
fs
shrl
cmpsb
cmp
or
fwait
cmpsb
add
cmp
dec
shll
and
xor
shll
rclb
or
ss
rol
add
cld
pop
mov
imul
imul
cmpsb
imul
mov
lods
pusha
movsb
lcall
xchg
dec
mov
cmpsb
imul
imul
imul
cmpsb
imul
lock
loopne
dec
shll
enter
shll
add
cld
push
mov
add
fcom
mov
mov
mov
mov
jl
sbb
pop
and
and
xchg
test
xor
into
cs
dec
repnz
mov
aad
mov
dec
push
leave
inc
aad
mov
push
repnz
xchg
inc
daa
push
mov
pop
call
adc
lcall
and
pop
adc
ja
xchg
pop
push
into
push
jo
seto
xchg
and
cwtl
adc
xchg
and
inc
pop
test
or
shl
or
ja
sbb
aas
mov
outsl
dec
ss
fwait
mov
xorb
rcrb
jl
mov
ss
shlb
jb
test
fisubl
insb
cmpsb
fadd
xor
xchg
into
xor
pop
jecxz
xchg
movsl
ror
into
sbb
ret
jo
scas
add
pop
xor
xlat
les
or
jb
mov
push
sahf
pushf
add
and
xchg
stos
mov
mov
enter
add
inc
or
daa
fcmovnb
sbb
insb
in
xor
pop
fdivrs
rcrb
sbb
dec
out
adc
add
inc
filds
cli
add
fmuls
push
jecxz
or
add
insb
sub
dec
dec
fdivl
adc
sbb
xor
adc
add
pop
adc
cmp
dec
push
ds
pop
adc
imul
and
stos
imull
or
xor
prefetch
sbb
xor
jmp
sysenter
cmp
hlt
ret
adc
bnd
pop
js
sbb
sbb
out
leave
or
inc
pop
and
loope
mov
xchg
and
mov
stc
push
pop
xchg
std
jmp
movups
push
hlt
pop
nop
and
repnz
mov
or
adc
mov
jne
movsb
inc
ret
jno
sub
and
add
lea
sbb
test
cmpb
jmp
mov
cmpsl
adc
push
pop
add
cmpsb
fisubs
rcll
pusha
and
pop
fadds
xor
sbb
jbe
push
adc
push
insl
mov
orl
test
and
stos
mov
stc
in
or
push
push
fiadds
and
lret
or
inc
imul
mov
or
cmp
or
cmp
or
in
jge
adc
inc
adc
xlat
dec
test
sbb
pop
int3
fcmovne
pushf
jae
push
and
fcmovne
mov
or
jg
mov
rcrb
cmpl
enter
rolb
or
mov
xor
inc
faddl
shrb
nop
aam
cmpb
outsb
repnz
push
roll
scas
leave
adc
daa
rcrb
mov
sub
out
insl
add
enter
push
xor
inc
inc
push
add
push
push
adc
sub
xor
ret
pusha
xchg
inc
push
pop
packuswb
sbb
jne
fldl
movsb
jnp
mov
or
mov
test
loopw,pn
rol
xchg
and
pop
sbb
daa
adc
jae
mov
dec
fsubp
dec
or
call
call
lds
sti
add
or
lods
pop
push
push
jb
add
jmp
pop
pop
and
test
mov
jo
arpl
lock
loope
cmp
push
add
adc
lahf
fidivrl
xor
and
and
sti
divl
xor
sub
xor
dec
imul
mov
jl
add
cmpsl
add
in
fcompl
jno
lods
insb
push
arpl
imul
cltd
pop
imul
js
arpl
pop
imul
jb
jb
popa
or
sbb
es
iret
into
mov
bound
jbe
daa
ja
imull
roll
pop
jb
dec
mov
sahf
addr16
push
mov
out
movsl
mov
arpl
insb
daa
push
subb
sub
stos
outsb
in
insl
ss
das
je
cmpsl
sbb
int3
or
mov
imul
xchg
cmp
pop
je
and
pop
jb
arpl
in
cwtl
int
jns
outsl
dec
pushw
das
add
push
imulb
jb
pusha
rorb
clc
pop
sbb
mov
loopne
and
add
call
loope
ficoms
xlat
cld
popf
adcl
adc
push
incl
int
daa
cld
cmpl
cmpsl
orl
jg
ret
fcmovne
pop
jge
adc
jne
jo
mov
fldl
mov
js
inc
sbb
jns
push
push
int
stos
mov
or
mov
push
pop
fists
popa
mov
enter
mov
pusha
mov
fnstsw
ret
push
test
mov
mov
and
icebp
movsl
scas
test
dec
adc
push
push
mov
shl
imul
iret
or
sbb
mov
lods
jno
and
test
cmp
shrl
add
jge
sub
lcall
loope
in
outsl
aaa
adc
pushl
adc
in
clc
push
nop
daa
adcl
rorb
push
add
adc
rcll
add
inc
add
mov
cmp
add
pop
nop
pop
or
sub
inc
mov
loope
mov
loope
int
mov
and
pop
xchg
addr16
add
add
lcall
add
or
or
or
or
or
imul
cmpsb
imul
imul
and
and
and
es
aaa
dec
pop
push
dec
shll
mov
dec
rcl
loope
add
adc
imul
imul
cmpsb
imul
push
shll
push
fs
xchg
pop
iret
rorb
and
or
xor
add
add
push
push
adc
xor
iret
pop
adc
push
cmp
repnz
sbb
sbb
and
orb
or
repnz
push
or
cmpb
sub
or
xor
sub
xor
cmpb
xor
cmp
xor
adc
adc
inc
push
inc
enter
pop
dec
sbb
repnz
push
sbb
iret
sbbb
sbb
cmp
enter
pusha
ja
sahf
cmpsl
jns
push
popa
imul
out
and
and
sahf
out
and
and
jns
sahf
and
and
and
push
xor
inc
shlb
xchg
popa
shl
les
and
dec
add
mov
xor
fcoms
inc
add
in
out
lea
sti
add
mov
sub
push
fstp
inc
inc
pop
test
and
inc
and
pop
push
adc
push
adc
mov
add
call
mov
call
sub
cmc
push
ror
xchg
int3
mov
jo
or
into
in
push
loopne
faddl
in
dec
pop
mov
add
dec
add
and
and
idivb
xchg
arpl
xor
fmull
cmpb
decb
popa
dec
sbb
fwait
sub
imul
call
cmp
jno
clc
mov
imul
pop
hlt
mov
fsubrs
jmp
arpl
add
and
push
hlt
pop
inc
decl
stc
test
and
inc
or
inc
add
or
shl
bnd
inc
nop
mov
les
xchg
inc
in
mov
and
add
clc
inc
pop
ss
insl
push
cmp
pushf
cld
orb
pusha
mov
in
mov
inc
push
xchg
into
xchg
jbe
pop
mov
xchg
lret
adc
clc
ds
sub
xchg
lds
pop
shll
or
pop
or
hlt
clc
push
mov
filds
or
fwait
mov
cwtl
adc
sti
je
sub
rcrl
pop
xchg
or
or
rol
ja
clc
or
push
mov
mov
xor
adc
xor
and
clc
push
mov
add
or
xchg
add
xorl
cmpsb
pop
and
mov
test
enter
fs
inc
out
add
inc
or
gs
rcr
bound
jo
ljmp
dec
and
cmpsb
jno
jae
or
mov
jae
inc
outsl
je
orb
imul
push
lret
inc
jb
sub
push
dec
pop
and
dec
adc
fisubrl
js
pop
adc
push
icebp
add
mov
orb
lahf
pop
lret
sbb
push
in
inc
or
push
sub
jnp
fsubr
cmp
and
fsubl
in
mov
in
mov
bound
dec
in
pop
cmp
push
xchg
enter
push
xlat
nopl
repz
in
sbb
faddp
and
pop
add
mov
cld
subl
and
push
lock
adc
ret
cmove
popa
pop
jecxz
iret
sbb
in
inc
add
repz
pop
cmp
arpl
mov
jae
leave
stos
bound
repz
inc
gs
insb
loopne
fcoms
arpl
rcrb
adc
movsb
imul
gs
lods
sbb
push
adc
dec
pop
repnz
nop
fs
adc
or
je
mov
cmp
in
jmp
adc
add
jo
sub
inc
rorl
out
adc
or
lahf
pop
mov
lods
dec
mov
xchg
mov
loope
inc
insl
add
loopne
fisubl
mov
push
mov
or
jb
push
jae
lret
addb
movsl
data16
pop
push
dec
test
cmpb
jno
dec
jp
mov
hlt
mov
push
cmpsl
inc
addr16
jae
mov
divb
or
cmpsl
dec
sbb
pop
lcall
push
push
in
adc
cmp
push
lock
add
sbb
sub
scas
push
ret
mov
scas
sbb
adc
jle
dec
in
imul
test
and
jl
popf
push
dec
outsb
push
dec
xorb
mov
push
pop
inc
add
aas
lret
inc
inc
lcall
movsl
sbb
cmp
jle
mov
and
js
jnp
je
roll
xchg
inc
adc
pop
and
insb
sbb
in
test
shlb
inc
test
data16
hlt
push
and
xor
or
mov
inc
mov
push
sub
jb
add
dec
repz
pop
and
add
inc
rorb
push
add
push
dec
enter
ficomps
xchg
pop
subb
pushf
insl
cld
push
outsl
jo
jo
push
push
add
inc
shrb
pop
sub
xor
mov
cmp
sub
cmp
push
cmpsb
cmpsb
inc
or
sub
add
adc
cld
adc
lods
mov
push
adc
sub
adc
inc
push
cmpsb
adc
mov
push
rcll
imul
mov
pusha
xchg
mov
iret
push
inc
or
scas
pop
dec
jne
dec
fiaddl
cs
es
adc
loope
mov
push
in
mov
mov
xorb
push
mov
and
push
and
mov
imul
rclb
xor
xor
or
inc
inc
pop
xchg
xchg
xor
or
pushf
or
pop
push
add
push
out
dec
xor
inc
xchg
xchg
test
dec
add
dec
jae
or
add
xor
and
imul
cmp
insb
rolb
add
inc
enter
fwait
xchg
add
js
je
dec
adc
xchg
fdivrs
dec
gs
outsb
rolb
cmp
dec
loopne
cmp
or
push
lock
push
call
cmp
dec
xor
cmp
add
dec
cmp
dec
fdiv
push
xchg
fs
or
inc
push
xchg
loopne
add
dec
out
daa
jo
sbb
xchg
inc
into
hlt
dec
dec
pop
xor
inc
pop
rolb
push
sbb
mov
sahf
adc
add
pop
insb
push
push
adc
sbb
cmp
add
inc
imul
dec
adc
or
lea
pusha
ret
pop
push
clc
ds
adc
popa
jae
in
jbe
cmp
add
pop
mov
and
and
or
fsts
adc
or
mov
pop
adc
sbb
in
imul
or
inc
push
jne
insb
adc
sub
or
outsb
jecxz
sub
pop
mov
mov
pusha
pop
pop
popf
xchg
aam
xchg
push
ss
adc
mov
or
insl
jns
mov
adc
dec
cwtl
testb
adc
rcrl
jns
add
dec
pop
fmull
mov
adc
sub
call
stc
cli
push
bound
and
xor
push
and
xchg
pushf
inc
dec
les
cmp
es
inc
shlb
aaa
imul
xchg
and
pop
aam
fcmovne
mov
sbb
sub
push
push
and
mov
cs
mov
mov
mov
sbb
pop
call
pop
lcall
adc
pop
adc
or
pushl
pop
mov
scas
ljmp
jmp
and
xor
mov
ret
sete
int
xor
test
fsubrl
push
mov
push
test
push
nop
push
or
scas
mov
sub
fiaddl
or
lcall
pop
or
cmpsl
or
inc
or
jns
inc
sbb
and
pop
pop
inc
lds
cmp
mov
or
lods
and
push
outsb
sub
adc
mov
ja
inc
inc
jne
dec
xor
mov
push
xchg
or
push
add
adc
enter
adc
mov
mov
nop
adc
mov
sub
adc
jnp
cmp
les
outsb
jae
sbb
inc
jb
sbb
and
sbb
lock
cmp
or
or
imul
push
fs
cmp
sub
sub
mov
xor
nop
pop
xor
push
lods
imul
jo
insb
loope
pop
dec
mov
pop
andb
test
fsubs
and
xor
push
jge
mov
movsl
sahf
xor
mov
jb
xor
sub
add
sub
mov
cmp
xor
xor
xchg
xchg
outsb
dec
out
leave
adc
mov
cs
cmp
pop
sbb
lea
inc
xchg
enter
sbb
push
xchg
shll
or
mov
jg
pusha
rclb
rcrb
testl
stos
lods
inc
xchg
loopne
jo
xchg
xchg
inc
xchg
xchg
gs
aaa
inc
push
inc
push
cmp
pop
cmp
inc
cmc
sub
dec
cmp
mov
jb
or
cmp
and
aas
xor
jb
inc
inc
inc
shlb
mov
pop
pop
inc
inc
pop
or
or
and
inc
sbbb
inc
xchg
mov
xor
outsl
add
add
adc
neg
gs
repz
sbb
inc
test
inc
int3
adc
pop
cmovae
and
push
jl
add
pop
sub
insb
adc
fcoml
inc
popf
addb
mov
dec
push
push
push
into
xchg
inc
pusha
nop
fadds
sub
lock
nop
sub
pop
mov
mov
pop
sub
adc
add
pop
mov
adc
sbb
insl
xchg
jl
hlt
sbb
cmp
inc
in
je
cmp
pop
test
sub
inc
fcompl
xchg
es
insb
sbb
and
jecxz
pop
sub
sbb
loopne
leave
ret
add
insb
jno
push
shlb
mov
in
pop
gs
mov
jbe
mov
dec
jle
mov
add
icebp
and
pushf
cmp
pop
mov
or
loop
adc
push
in
sub
add
push
xor
sbbb
inc
popa
mov
nop
mov
lods
sbb
negl
cmp
push
insb
xor
pop
cs
outsl
adc
sti
mov
cmp
push
test
hlt
sbb
cmp
notl
xchg
sti
orl
jb
pop
pop
adc
cwtl
mov
and
sub
pop
addr16
xchg
sbb
push
push
subb
rolb
cmp
notb
sub
adc
sub
mov
mov
cwtl
sub
imul
loope
std
mov
lret
add
pop
xchg
sub
xor
fisubrl
xchg
test
or
pop
sub
in
aaa
cmpl
fwait
add
jns
subb
add
in
hlt
cmpsb
outsb
int
mov
lock
int3
outsl
or
out
jno
rcll
xchg
mov
les
xchg
xor
jg
dec
mov
and
vunpckhps
jmp
cmp
andb
jle
cld
scas
nop
inc
push
jg
cmp
or
sbb
xor
cmp
add
push
pusha
and
dec
cld
and
in
or
cld
add
cmp
jne
pop
jmp
push
xchg
nop
out
or
aas
add
sub
mov
in
sbb
cmpsl
cmp
add
sub
mov
mov
mov
xor
int
xor
push
sbb
fdivrs
dec
push
cmp
pop
mov
scas
jl
subb
movsl
add
pop
sar
add
or
andl
jg
orl
dec
cwtl
pop
es
push
cmpsb
je
insb
arpl
and
test
inc
gs
testb
je
mov
nop
mov
cmp
pop
mov
inc
aam
sarb
pop
cltd
fwait
shll
in
sbb
rorl
int
jns
js
adcb
fwait
or
cmpsb
fld
add
pusha
loopne
xor
jge
faddl
sbb
and
cmp
jo
cmpb
and
push
insl
dec
fwait
int3
pop
dec
sbb
add
jg
lock
idivl
mov
inc
sahf
mov
mov
pop
daa
loope
mov
mov
aad
daa
not
and
sbb
int3
clc
push
out
nop
outsb
or
push
aas
xchg
add
inc
pop
stc
inc
push
leave
scas
cmp
inc
push
daa
sahf
mov
inc
cmpsl
and
dec
pop
mov
pop
ret
push
push
imul
mov
or
pmaxsw
push
insb
add
pop
adc
xor
test
pop
popa
cld
add
add
sti
add
shll
cmp
rorl
test
cmpw
inc
addl
shr
xchg
sbb
inc
pop
xchg
call
inc
pop
adc
jecxz
adc
bound
dec
sbb
popa
add
je
jg
sub
pop
pop
popa
and
test
add
adc
imul
inc
test
std
in
add
fildl
pop
sbb
inc
push
cmp
add
in
rolb
or
loopne
adcl
cmpl
mov
jne
mov
mov
adc
adcl
outsl
cmpsl
clc
fadds
loop
out
push
xor
cmp
icebp
sbb
add
ret
int3
add
mov
xchg
pusha
pop
add
insb
cmp
pop
adcl
cmp
int
xor
dec
pop
xchg
xchg
xchg
fidivrl
push
sbb
add
push
inc
push
jbe
out
xor
or
jmp
rclb
inc
mov
or
movsb
sbb
scas
dec
sub
in
roll
into
mov
or
icebp
loopne
les
out
jle
xor
xchg
add
inc
test
jl
movsb
adc
add
pop
cmp
mov
push
in
jge
mov
pop
pop
std
inc
outsb
cmp
mov
fcomps
pop
lcall
fidivl
ds
ret
les
adc
in
test
cmp
and
xchg
and
cmp
jge
xor
nop
push
cmp
pusha
aaa
xor
scas
mov
mov
cmp
inc
push
mov
or
repz
les
add
inc
lock
cwtl
movsb
jl
adc
es
jno
sbb
test
test
lea
pop
fadd
xchg
xorb
fdivrl
mov
jge
fwait
inc
notl
mov
or
and
insb
dec
pusha
inc
pusha
dec
sahf
or
stc
sbb
mov
inc
imul
xor
sbb
stc
add
loopne
mov
dec
sbb
rcrb
pop
movb
jno
xchg
push
fadds
inc
mov
add
adc
mov
fcmovnu
add
jo
scas
xchg
add
outsb
jmp
lods
jno
push
sub
adc
xor
test
icebp
or
cmc
and
pop
mov
cs
mov
mov
sbb
cmp
roll
dec
test
imul
and
sbb
popfw
or
pop
testb
faddp
test
shrb
rcl
cmpsb
imul
inc
test
mov
mov
and
mov
adc
je
popf
mov
enter
mov
fcomi
pushf
mov
stos
sbb
sbb
call
sbb
mov
inc
bound
fs
push
push
mov
loope
les
dec
add
lea
pushf
bound
mov
icebp
cmp
and
and
and
dec
bnd
sbb
xchg
or
daa
es
dec
xchg
cltd
mov
orb
pusha
dec
or
adc
data16
and
sbb
mov
inc
jmp
incb
ds
movb
sub
ret
nop
xchg
mov
shlb
mov
mov
push
inc
and
clc
in
mov
sub
jae
movl
mov
outsb
adc
popa
sub
sbb
shrb
pushf
jae
adc
mov
ret
arpl
sub
add
xchg
mov
and
notl
adcl
dec
xor
jnp
mov
sub
inc
sahf
lods
or
not
jmp
sbb
xchg
or
movsb
in
or
outsb
push
mov
sub
inc
xchg
mov
pop
and
and
ss
outsl
and
cwtl
orb
mov
daa
test
popa
xchg
sbb
fisubl
push
push
cmp
add
push
dec
push
ss
sbb
cmc
adcb
inc
jb
sbb
mov
pusha
enter
leave
sbb
or
hlt
jge
inc
xor
test
cmp
loope
cld
mov
clc
mov
and
cmp
sbb
pop
sbb
adcl
push
ljmp
jno
insb
sbb
aas
inc
xorb
xchg
scas
lcall
ljmp
xchg
test
sbb
and
and
cmp
mov
mov
inc
lods
jecxz
adc
xchg
xchg
xlat
inc
sbb
and
mov
movsb
lea
outsb
in
push
mov
es
dec
inc
mov
adc
in
jno
lods
xlat
jmp
inc
clc
jne
and
arpl
inc
leave
push
enter
sbb
sbb
xchg
sbb
fildll
out
xlat
or
push
loope
mov
pop
mov
or
inc
movl
xor
sbb
cmpsl
test
repnz
sbb
jge
cmp
cmpb
jno
jl
dec
leave
pop
jmp
test
daa
pop
xchg
popa
call
test
xor
rorl
jecxz
jb
push
xor
rolb
pop
dec
pusha
sbb
jns
pusha
enter
cmp
jno
nop
ret
ret
adcl
lahf
sub
sbb
inc
add
pushf
test
jne
int3
movl
pop
cmp
xor
mov
daa
jb
sub
sub
inc
aad
lock
test
xchg
push
adc
sbb
or
sbb
push
js
and
or
cmp
mov
pop
pop
adc
xchg
fxch
xor
or
push
and
clc
scas
push
sub
push
dec
cltd
add
push
inc
lcall
and
jb
mov
mov
add
ja
xchg
mov
mov
mov
cmpsb
js
push
icebp
cmpb
adc
sub
adc
and
rcrb
scas
icebp
jmp
xor
adc
mov
cmp
filds
cmpb
leave
mov
or
lock
adc
adc
in
inc
jge
addl
mov
imul
add
sbb
cmpsb
inc
incl
lods
jmp
das
adc
je
sbb
inc
cmpsb
frstor
call
pop
je
scas
rcrl
call
out
and
mov
aas
fnsave
fwait
push
dec
pusha
int3
inc
dec
and
or
jno
sti
loopne
mov
imul
pop
xlat
out
filds
sub
jle
cmpl
cmp
insb
loope
ret
xor
fildl
out
mov
inc
sbb
inc
stc
xchg
add
xchg
jge
or
cmpsl
cmp
push
push
xchg
sub
jmp
sbb
rolb
adc
sbb
das
mov
shrl
mov
mov
stos
sbb
mov
adc
jge
inc
lods
bound
inc
lock
xor
inc
sub
jmp
loop
xor
cmp
dec
arpl
push
daa
add
stos
mov
xlat
dec
or
add
jmp
cmp
sbb
pop
cwtl
in
lcall
sbb
xorl
js
fxch
es
pop
jge
mov
rol
and
xor
sbb
enter
xchg
sbb
pop
rolb
pop
ret
add
sbbb
daa
xor
cmpsb
mov
les
notb
test
jne
mov
jmp
jmp
nop
test
pop
lods
sbb
jns
cmp
sbb
cmpsl
mov
jmp
cmp
rolb
mov
cmp
inc
adc
push
or
inc
loope
in
inc
sbb
nopl
xlat
shrb
xchg
jae
std
dec
cmp
daa
jle
ret
pop
jge
inc
add
cmp
stos
or
clc
dec
add
or
scas
mov
inc
testl
movsb
pop
sub
push
in
mov
insl
jns
and
or
test
stos
addb
sub
sbb
stos
add
adc
mov
loope
sub
mov
sub
push
sub
cmp
pop
push
sbb
sbb
sub
je
das
fdivrs
test
jle
xor
jp
adc
jecxz
mov
call
mov
cmp
loopne
clc
cmp
jle
mov
sub
fwait
test
jle
mull
jne
inc
pop
jg
pop
add
or
hlt
ljmp
outsb
cmpsl
lock
and
fsubl
xlat
mov
adcl
sbb
lret
or
adc
loopne
mov
xor
add
or
cmp
test
test
xchg
aaa
xor
xchg
cmp
faddl
push
outsl
mov
enter
andl
popa
shlb
inc
dec
addr16
incl
add
shlb
inc
add
ret
inc
and
dec
dec
push
push
inc
dec
pop
loopne
dec
pop
iret
jae
dec
stos
add
outsl
in
adc
inc
adc
rcrl
xor
add
or
adc
jge
addr16
test
mov
ret
jbe
imul
xchg
ja
jne
stos
or
push
and
sbb
sub
xchg
daa
cltd
xchg
inc
dec
adc
inc
sub
add
and
and
sbb
sub
into
push
adc
mov
clc
ljmp
in
loope
push
pop
or
orl
xchg
push
daa
pop
adc
or
push
add
mov
jne
push
mov
sub
loop
jecxz
jnp
mov
enter
mov
and
mov
inc
stos
mov
xlat
in
in
imul
loopne
clc
jp
and
pop
inc
add
push
mov
mov
or
dec
or
mov
addr16
sbb
mov
ret
push
cmp
xchg
xor
push
in
andl
mov
popf
je
pop
mov
insl
xchg
movsb
jne
mov
and
sub
and
or
jmp
inc
das
dec
xor
jmp
jmp
jo
test
and
repnz
aaa
test
cs
add
push
or
mov
sbb
add
mov
push
jle
lods
adc
ficompl
fsubl
sub
xchg
sti
pop
cmc
in
sub
cmp
mov
add
hlt
adc
clc
dec
test
cmp
pushf
or
cwtl
imulb
es
cmp
jge
and
imul
xchg
in
divl
xor
mov
and
jns
add
rorl
mov
pop
adc
fadd
lds
mov
lea
lahf
loopne
pop
in
call
std
or
or
divb
mov
adc
mov
roll
or
sbb
or
mov
rorb
adc
movsb
cltd
enter
xchg
loopne
jbe
subb
test
jo
and
std
xorb
jl
or
call
push
xor
or
mov
jno
add
lods
and
call
lahf
sbb
inc
push
mov
js
add
test
scas
push
push
inc
data16
mov
cmp
fsubp
pusha
jmp
sub
lcall
push
jmp
test
popa
test
stos
pusha
push
xorl
insl
lock
fcmovne
repnz
dec
clc
ret
adc
sub
jns
sbb
and
pusha
sub
nop
and
pop
cmp
mov
test
mov
mov
dec
push
push
jp
mov
pop
dec
jne
sbb
cmpsl
cmp
sbb
xor
xchg
jo
inc
loop
jo
push
pop
jl
test
jae
add
sub
mov
mov
cld
and
mov
aas
adc
dec
sbb
mov
pop
clc
sub
xchg
cmpsb
adc
adc
xchg
inc
sbb
adc
or
pop
xor
frstor
divl
inc
xchg
mov
cmp
jne
ret
adc
or
mov
incl
loope
pop
xchg
push
mov
mov
in
adc
stos
add
xor
sub
and
sbb
ret
test
sbbb
cmp
popl
dec
lods
dec
daa
lea
int3
shll
cmpb
mov
sub
or
mov
les
ss
pop
pop
ret
cld
pop
mov
je
sub
cmpb
jecxz
mov
lret
inc
rolb
jbe
mul
scas
and
xor
lods
sarl
mov
insb
rcrb
adc
mov
sub
addl
loopne
ret
inc
mov
mov
fistps
push
mov
cmp
cld
sbb
or
je
or
cmpsb
pusha
leave
rolb
or
aam
mov
jle
cmp
jae
add
mov
or
mov
repnz
cwtl
pushl
pop
aam
sbb
loopne
add
xchg
imul
jmp
insl
rclb
rclb
out
or
inc
movl
test
mov
orl
jg
mov
push
lds
in
xor
xchg
add
xchg
mov
push
repnz
add
pop
negl
xchg
shlb
mov
lods
jmp
or
jb
repnz
aad
jmp
lock
rclb
pop
xchg
nop
push
sub
inc
push
bound
insl
in
fs
push
inc
jb
es
enter
sbb
cmp
xchg
insb
jnp
mov
fsubrl
xchg
and
xchg
cltd
in
sub
mov
inc
mov
xlat
pop
in
roll
xor
sbb
push
pop
push
lret
inc
cmpsl
movsb
pop
inc
xchg
cld
inc
repnz
pop
inc
fs
inc
add
pop
inc
mov
xor
mov
pop
subb
fdivrs
dec
sub
xorl
and
or
push
js
xor
addr16
jae
mov
inc
push
pop
push
pop
inc
inc
decl
add
dec
movb
mov
rcll
add
adc
cmp
stc
mov
iret
loopne
sub
outsl
cvtpi2ps
sub
push
dec
push
jns
enter
sub
out
enter
jg
or
jl
data16
loopne
lcall
addr16
jno
sbb
and
sub
cmpsb
dec
push
cmc
xor
add
lret
or
or
inc
mov
aaa
fs
in
nop
ss
shlb
mov
and
mov
mov
jo
xchg
push
push
dec
shl
mov
adc
xorl
xor
inc
push
add
add
or
sbb
or
inc
jbe
push
sub
arpl
sbb
dec
mov
jnp
mov
and
dec
sbb
clc
push
mov
jmp
dec
add
inc
cmp
and
adc
pop
pusha
adc
arpl
notl
inc
es
adc
or
cmp
sub
lods
insb
pop
mov
sub
push
imul
adc
bound
and
addr16
and
lds
jns
xor
test
cmc
xchg
jns
dec
jp
sbb
imul
mov
push
lods
nop
shll
or
cmp
add
mov
add
aaa
dec
dec
aaa
cmp
aaa
jl
and
rolb
cmp
inc
pusha
js
enter
jo
cmp
popa
dec
pop
add
dec
jb
rcll
test
xor
adc
adc
cmp
in
xchg
rolb
jne
inc
cmc
push
mov
roll
cmp
jne
mov
mov
or
lock
in
in
add
pusha
sti
cmp
in
rol
gs
and
xor
mov
mov
or
add
xchg
fstl
push
and
mov
xor
inc
cmp
or
cwtl
add
jecxz
aaa
sti
mov
jg
inc
sub
sub
and
sub
push
pop
sbb
cmp
arpl
sub
and
xor
mov
ret
sub
ret
fstps
dec
std
mov
push
and
adc
xor
andl
pop
rorl
cmpsl
jg
leave
xor
add
leave
xlat
adc
in
mov
cmp
shlb
push
lock
dec
push
lock
or
movsb
adc
in
mov
stos
mov
or
push
fldcw
push
lock
mov
cld
sub
inc
lea
mov
cmp
pop
mov
stc
inc
mov
lock
push
decl
insl
jo
inc
jmp
xorl
or
mov
or
in
adc
jbe
mov
sets
push
mov
cmp
aad
mov
outsl
cmp
and
sbb
fcoms
cmp
adc
inc
movsl
out
sbb
loop
jge
add
inc
push
cmp
stos
enter
and
or
movsl
or
and
ret
call
adc
or
pop
les
xor
push
sbb
lea
jge
fs
mov
inc
add
leave
adc
lock
cmpsl
adc
push
add
gs
or
pop
repnz
dec
add
lock
dec
outsb
push
dec
ds
mov
cwtl
xchg
mov
xchg
pop
inc
or
adc
inc
mov
add
push
cmc
add
inc
adc
add
in
decl
dec
dec
dec
inc
dec
push
add
or
mov
or
or
aaa
xor
dec
movsb
mov
decl
or
or
pop
jg
fwait
and
jg
add
xor
mov
test
ds
inc
incl
hlt
sub
pop
adc
sub
jmp
sbb
ja
jno
dec
cli
pushf
sti
jmp
cmp
push
test
test
cmp
ficoml
adc
cs
dec
lock
cmp
lock
les
or
sub
lahf
aaa
add
cwtl
mov
inc
cs
iret
aam
movl
mov
les
sub
pop
add
push
pusha
leave
dec
xor
pop
sbb
add
cmp
lcall
adc
daa
nop
inc
mov
std
dec
adc
pop
mov
mov
sbbb
push
pop
pop
addr16
xor
mov
orl
fcmovb
mov
mov
mov
je
adc
movsl
or
and
adc
mov
or
nop
inc
cltd
movsl
inc
nop
out
cli
push
sbbb
sub
pop
lods
mov
jns
enter
shlb
cmpsl
jge
push
filds
fwait
adc
add
add
or
pop
push
xchg
lods
sbb
or
outsb
and
add
and
push
pop
test
aam
mov
insb
fnsave
or
add
xchg
push
test
test
insb
sub
movsl
popa
test
outsb
adc
insl
cmpsb
push
aam
add
xchg
mov
call
scas
pop
aaa
loopne
pop
push
fwait
ja
or
imul
pop
insb
imul
imul
je
js
sub
push
xor
jae
jbe
clc
mov
and
adcl
mov
inc
incb
inc
inc
xchg
ds
test
xor
insl
adc
inc
es
push
inc
xor
je
cmp
ficompl
mov
push
shl
push
hlt
cmpsb
test
sub
pop
ds
jb
add
insl
mov
pop
les
insl
adc
loopne
jg
pop
in
leave
add
loopne
outsb
and
pop
leave
adc
js
dec
inc
sbb
pop
pop
test
insb
and
mov
cmpsb
pop
mov
clc
or
inc
outsl
mov
lcall
cmp
lods
mov
inc
or
xchg
das
jns
dec
inc
cld
inc
clc
outsl
jo
leave
push
adc
pushw
aaa
test
pop
sarb
inc
ja
addl
cmpl
pop
sub
push
pop
leave
mov
ds
in
inc
cmpsl
and
inc
pmulhuw
out
test
xchg
xchg
test
popf
or
fstps
xchg
test
imul
push
in
and
and
jo
mov
xor
aam
es
dec
push
in
popa
add
push
push
out
adc
and
cmp
fdivl
shrb
mov
jne
adc
xchg
sub
bound
cmp
ret
bound
mov
mov
inc
sbb
jle
test
jmp
mov
outsb
xchg
or
dec
jnp
lods
xchg
insl
popa
in
arpl
lods
enter
jbe
test
ljmp
fs
sbbl
or
dec
movsb
paddusb
mov
imul
add
cmp
jg
lock
outsb
or
push
sbb
sbb
mov
add
popa
imul
pop
test
leave
pop
or
pop
inc
inc
dec
mov
or
push
mov
add
nop
lret
ror
push
test
and
aaa
pop
and
addl
adc
adc
mov
loopne
dec
movb
cmpsb
xor
cmp
mov
adc
dec
add
movsb
add
push
push
push
inc
or
dec
dec
push
or
mov
and
add
sbb
adc
add
and
dec
lahf
or
leave
push
xchg
add
sbb
or
or
pop
mov
xchg
or
adc
imul
mov
dec
out
rsqrtps
dec
testl
lds
call
add
ss
xchg
add
ss
fdivrs
mov
dec
popf
aaa
call
mov
enter
mov
int3
jnp
movups
dec
outsb
loope
ja
push
adc
mov
or
lcall
sbb
fptan
push
jbe
scas
xor
cmp
nop
cwtl
or
aam
pavgb
shrl
add
into
sbb
xchg
clc
dec
cmpsl
pop
xchg
dec
sbb
dec
or
inc
ljmp
inc
or
data16
push
or
test
sub
addr16
dec
inc
add
sbb
outsl
arpl
test
xchg
inc
inc
add
dec
iret
out
push
jno
iret
notl
push
xor
notl
and
or
jns
gs
aam
adc
sbbb
addr16
cmp
dec
paddusb
add
inc
jl
xchg
dec
xchg
adc
inc
lods
dec
add
add
or
add
cmp
or
dec
dec
loope
cmp
adc
ljmp
add
rclb
or
js
cmp
fmuls
lea
xchg
push
and
loop
jo
cmp
mov
in
fdivrl
inc
push
pop
xlat
gs
pop
pusha
and
push
or
adc
out
xchg
sub
rorb
js
xchg
in
and
push
adc
enter
push
add
or
add
inc
or
daa
sub
xor
add
pusha
push
push
push
push
jo
or
cmp
sahf
mov
out
addb
mov
test
mov
js
js
add
iret
push
pop
cwtl
and
pop
add
pushf
add
or
cmp
mov
stos
xor
hlt
out
js
pop
je
cmpsl
inc
mov
jl
jle
lcall
test
pop
pop
lock
outsl
mov
pushf
aas
orb
add
in
xlat
dec
add
add
add
add
inc
add
clc
fs
xlat
add
pop
add
mov
lcall
aaa
or
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
imul
in
jmp
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
fdivr
fcos
fdivr
xlat
call
call
call
call
call
call
call
stc
jg
test
jnp
dec
dec
dec
dec
mov
dec
dec
js
lret
scas
jno
cmpsb
imul
dec
movsb
push
mov
aaa
add
push
inc
pushf
fmul
shll
mov
hlt
xor
pushf
push
and
repz
cmp
mov
jl
and
andb
mov
xchg
mov
pop
xor
cmpsb
lahf
xor
je
or
imul
jo
xlat
ss
cmpsb
fcomp
mov
mov
int
mov
mov
cmpsl
and
cs
push
cwtl
insl
xchg
cmpsb
insl
push
in
mov
add
mov
das
xchg
mov
fcomps
inc
leave
nop
pop
pop
sbb
adc
or
or
pop
lods
test
mov
cmp
inc
sbb
mov
push
mov
fwait
dec
pop
inc
sarb
imul
aam
or
adc
add
push
push
aas
incl
adc
push
mov
out
sub
push
or
adc
sub
lods
loop
jo
xor
or
aaa
mov
nop
pop
dec
pop
test
enter
jg
xchg
mov
add
inc
inc
mov
popl
or
mov
das
dec
and
and
mov
inc
mov
dec
insl
or
int
sub
imul
jo
pop
push
syscall
mov
xor
ja
or
inc
popf
mov
dec
jb
push
dec
popa
je
fisttpll
fisttpl
inc
push
push
cwtl
sbb
lds
adc
pushf
subb
push
or
pop
out
lock
rolb
inc
data16
add
push
outsb
jb
jl
and
jl
xor
in
push
bound
or
sbb
or
push
popa
popf
adc
dec
xchg
mov
xchg
and
sbb
adcb
jp
and
inc
bound
fidivrl
push
pusha
pop
divl
js
xorb
jl
imul
imul
fadd
loopne
inc
daa
les
mov
arpl
std
sbb
imul
pusha
mov
or
inc
pop
outsl
or
imul
nop
cld
and
sub
inc
or
adc
rclb
dec
int
into
xor
sbbl
jl
cmc
dec
jg
popa
push
lldt
add
loope
rcrb
add
mov
pop
incl
and
cs
dec
add
add
shlb
cmp
and
dec
test
test
adc
sbb
sbb
fimuls
add
mov
jg
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
jg
repnz
mov
and
and
mov
mov
mov
incl
mov
sub
xor
cmp
sbb
loope
jg
mov
inc
inc
inc
inc
inc
inc
inc
clc
adc
std
mov
js
mov
lahf
jo
stc
mov
pushl
loopne
int
imul
loop
adcb
in
adc
cwtl
ss
mov
pop
in
fdiv
js
int
cltd
dec
in
data16
push
and
hlt
pushf
mov
lock
outsb
or
repz
imul
push
call
or
mov
xor
in
out
imul
cmpsb
push
cmp
imul
cmc
das
andb
insb
dec
imul
push
cmc
push
pop
xchg
dec
shll
insb
je
idivb
in
xor
clc
es
shlb
aam
std
push
jmp
cmp
push
cmp
mov
arpl
pop
sub
sub
int
fld
out
call
test
out
test
paddq
shlb
jl
mov
nop
jmp
inc
mov
pop
fcmovne
xor
ss
push
pop
sbb
add
lods
mov
push
mov
and
add
or
sbb
mov
in
test
pop
call
inc
mov
pop
sub
inc
sahf
add
js
inc
pop
and
sbb
aas
inc
test
cs
daa
je
lods
sbb
pop
sub
inc
mov
pop
cs
jns
mov
pop
pop
pop
jb
pop
add
pop
sbb
pop
fcoms
and
sub
adc
out
jb
adc
pop
rclb
adc
mov
mov
add
push
sub
push
stos
sub
scas
test
popa
sub
hlt
add
add
sub
pop
pop
mov
negl
add
mov
nop
adc
mov
or
or
cmp
add
nop
sbb
sbb
mov
les
in
and
mov
xchg
lcall
adc
rcrl
dec
pop
push
xchg
je
add
push
inc
popa
inc
push
adc
insb
js,pt
fsts
inc
push
hlt
and
lret
in
add
les
das
in
xor
lock
sar
push
and
pop
ret
out
push
sbb
das
xchg
popa
les
pop
jnp
mov
nop
sbb
and
jae
arpl
or
imull
mov
bound
inc
adc
pusha
xchg
add
aaa
loopne
pusha
in
arpl
into
jbe
push
xor
cwtl
arpl
cs
or
int3
popa
ret
adc
popa
adc
rcrl
dec
outsl
cmpsb
pop
dec
mov
sbb
cmp
add
mov
nop
pop
fwait
dec
xor
orb
cld
adc
adc
clc
add
push
in
sub
imul
in
shlb
and
sub
or
mov
or
pop
call
or
sbb
mov
dec
rorb
add
push
jbe
lret
inc
sub
movsb
or
jno
mov
and
fidivs
mov
jae
add
add
xchg
imul
dec
jne
dec
fmuls
inc
mov
mov
jno
adc
das
ljmp
or
push
pushf
test
add
cs
and
push
pop
inc
pusha
and
push
or
nop
or
inc
pop
iret
jb
mov
mov
daa
inc
jb
ja
stc
orl
sub
shlb
xchg
daa
push
cmp
das
ss
push
push
inc
push
inc
mov
scas
loopne
push
jo
daa
or
add
dec
ret
inc
insb
popa
punpcklbw
and
push
fcoms
dec
outsl
sbb
pop
inc
cs
imul
pop
mov
pop
testb
movb
js
pop
ret
fcoms
fildl
push
or
jo
int3
and
mov
dec
std
mov
adc
push
mov
pop
push
aas
mov
push
pusha
adc
xor
adc
dec
adc
mov
and
lret
cwtl
lea
mov
es
xchg
js
adc
nop
fistps
mov
cmpl
cmp
ja
add
hlt
push
mov
and
adc
sub
push
andl
mov
mov
cmp
push
scas
push
imul
fs
dec
mov
add
or
sub
jmp
mov
pop
mov
add
push
or
daa
mov
dec
cmp
push
pusha
mov
sbb
push
bound
xchg
lret
dec
mov
xor
jp
mov
loope
and
pop
adc
loop
add
dec
or
add
test
cmpsl
jno
sbbb
das
sbb
dec
or
mov
jne
psubb
imul
push
cmp
cmp
stos
jmp
aam
fnstenv
ret
and
adc
in
push
or
push
dec
pusha
jp
jecxz
loopne
xchg
pop
add
adc
xchg
or
adc
lret
mov
lret
adc
sbb
and
sub
mov
and
sub
sub
sbb
sub
dec
adc
pop
add
xor
sbb
push
or
or
fidivrl
repnz
or
mov
cmp
fdivrl
je
sub
add
cmp
inc
or
je
ja
sbb
inc
aam
int
push
dec
test
dec
test
mov
mov
mov
nop
bound
pop
shlb
adc
dec
mov
mov
dec
dec
sbb
jne
mov
sbb
mov
or
lds
push
out
add
test
test
sbb
xor
pop
cmp
out
push
xchg
dec
pop
pop
out
xlat
xor
jmp
or
shlb
call
or
dec
xlat
and
scas
insb
inc
or
andb
sub
push
pop
faddl
mov
dec
cmp
rolb
pop
mov
outsb
add
xor
push
sub
sub
movsb
ret
or
test
inc
mov
pop
dec
pop
movsl
adc
aaa
add
inc
inc
inc
sub
fbstp
mov
adc
or
pop
ret
mov
pop
jp
and
sbb
dec
aas
xor
pop
rclb
mov
aas
cmpsl
sub
in
cmpsb
das
inc
pop
leave
jae
mov
sbb
xchg
or
das
sbb
in
push
out
inc
in
sub
adc
cld
inc
movsl
ja
mov
push
push
nop
xchg
testl
inc
loope
aaa
inc
lea
int3
push
pop
inc
aam
sub
inc
inc
fistl
mov
adc
fidivrs
addr16
in
iret
push
sub
enter
xor
adc
sbb
sbb
stos
cmpsb
mov
xchg
adc
outsb
movsl
lcall
adc
shr
sub
fstps
mov
push
data16
dec
adc
dec
or
adc
sbb
or
sub
add
pop
seta
ficoms
push
sub
int3
invd
add
ss
mov
xchg
in
daa
fidivl
add
andb
out
hlt
dec
loop
orb
inc
je
js
shlb
xchg
adc
mov
jmp
mov
jb
jne
movb
jmp
cmp
jne
inc
js
push
scas
add
inc
imul
aam
xchg
les
inc
sbb
jl
ljmp
popw
test
push
rol
mov
and
dec
sub
loop
ds
das
out
je
out
mov
shl
mov
call
xchg
repz
movsl
ja
popa
fnstsw
cmp
pop
adc
sbb
inc
inc
je
add
dec
pop
movsl
in
sub
test
test
mov
xchg
flds
jmp
js
dec
sti
or
ss
sbb
pop
and
xor
popa
cmp
aam
sbb
xchg
mov
cmp
or
xchg
rorb
mov
scas
mov
mov
add
mov
mov
sbb
into
add
adc
inc
dec
in
add
cs
enter
dec
dec
sub
in
lea
cmovnp
loope
jns
fsubrs
pop
adc
pop
xor
jle
cmp
subl
adc
add
rclb
add
xchg
iret
xor
lahf
or
pusha
pop
daa
xchg
jno
sub
and
mov
inc
jle
push
jb
jp
xchg
mov
cmpb
repnz
xchg
test
popf
and
or
cld
mov
cmp
gs
xor
fld1
dec
jle
inc
jno
call
or
add
and
and
push
push
mull
fdivrs
dec
in
mov
test
or
add
xor
cmp
orb
push
in
push
adc
jl
pop
popa
jae
and
mov
dec
nop
sub
loopne
ret
add
cmp
shr
mov
inc
jne
and
imul
les
outsl
xor
and
mov
adc
xor
or
movsl
or
movsb
inc
ret
or
jge
push
sbb
call
pop
push
push
adc
std
sub
push
push
pop
cmp
mov
ss
xchg
movb
imul
gs
loope
and
lahf
fs
inc
fs
mov
test
fsubr
cltd
loope
pop
xchg
movsl
test
sub
imul
outsb
call
push
mov
int
pop
shlb
lea
cmp
mov
mov
lods
or
es
sbb
fdivs
test
mov
sub
jb
and
inc
xor
mov
rorl
add
pop
jg
inc
jo
jl
mov
mov
js
push
fsts
adc
dec
jne
scas
ds
mov
add
je
out
aas
push
imul
and
push
sbb
push
cs
or
sbb
cmp
jne
loop
jecxz
out
clc
xor
test
shrb
fsubrl
jnp
das
push
jge
mov
sub
fldenv
add
or
xchg
xchg
in
dec
fwait
cmpsl
es
loop
sub
loope
xchg
aam
xor
or
inc
pushf
mov
lea
js
jnp
cmp
xchg
add
aaa
xor
sti
cmp
je
ljmp
lret
and
mov
xchg
faddl
push
mov
pop
out
add
push
insl
mov
pop
pop
mov
adc
lds
aam
es
push
adc
mov
test
add
ret
into
and
dec
and
push
mov
push
and
movups
subb
ret
xor
jne
mov
inc
jmp
in
push
xchg
push
and
or
pop
pop
out
es
cmp
fdivl
rclb
push
das
pusha
sub
test
sbb
push
andb
xlat
xchg
pop
nop
gs
cltd
or
pop
sbb
and
fists
clc
mov
outsl
pop
fdivs
mov
jmp
cmpsb
ret
push
jno
xor
xor
lret
andl
jge
out
decl
aam
xor
dec
inc
cmpsb
adc
fdivrl
dec
fwait
sbb
das
cmpsl
mov
leave
cmp
loop
push
xor
fidivs
mov
aam
dec
sub
negb
adc
mov
cld
mov
inc
ss
push
inc
push
lea
js
or
add
test
jp
cs
data16
mov
or
fldt
stc
fstpl
fwait
xorl
and
jecxz
sub
iret
and
jns
sub
imul
push
push
bound
cmp
add
mov
sbb
cmp
sbb
or
pop
sub
mov
lret
or
jbe
xchg
inc
pusha
addr16
inc
addr16
push
bound
pushf
subb
push
cmp
push
enter
mov
jnp
mov
inc
popf
pop
cltd
cmp
mov
mov
xchg
push
call
stos
mov
sti
xor
or
lret
xchg
popa
outsl
lcall
jecxz
and
jne
rolb
dec
stos
push
shl
jo
xor
bound
adc
loopne
in
jge
lcall
sub
jnp
jno
push
lret
dec
aaa
lock
dec
jmp
or
push
lcall
pop
xchg
ja
push
jg
fs
jne
push
dec
sub
add
testb
inc
add
pop
jno
dec
lods
leave
popa
inc
clc
or
andb
push
pop
push
adc
xor
cmp
sub
pop
shll
xchg
ss
int3
mov
popl
jne
mov
lods
or
push
sbb
sbb
jge
sub
aas
sahf
fiadds
insb
xchg
aas
push
add
enter
xor
mov
daa
ds
subl
inc
incb
or
add
sbb
or
cmp
cs
jle
inc
xor
adc
sbb
sbb
push
cmovo
loopne
and
mov
pusha
xchg
add
cmc
sub
insl
xchg
cld
sbb
div
mov
testb
cli
jmp
and
or
loop
add
xchg
sbb
add
insb
xchg
movsl
adc
loope
and
mov
xor
arpl
jmp
outsb
je
test
pop
aaa
lods
inc
lock
adc
cmp
sub
and
data16
add
add
push
js
jo
gs
mov
pop
sub
js
pop
fs
mov
add
add
or
and
adc
jo
or
cmp
sub
adc
jmp
xchg
ss
or
mov
pusha
movsb
imul
mov
cli
push
sub
and
popa
jnp
notb
adc
mov
xchg
add
dec
jg
xor
cmp
xchg
push
insl
insb
inc
sub
enter
leave
popa
xchg
adc
rolb
ret
ss
rorl
fwait
imul
push
and
dec
popa
repz
imul
lds
lock
testl
inc
movl
add
add
sbb
movsb
add
mov
imul
cmp
adcl
inc
add
sub
xlat
push
add
popa
jo
sbb
push
pop
sbb
and
push
aam
pop
test
notb
jp
xor
pop
and
mov
addr16
adc
or
cltd
cld
push
lock
movsb
and
jmp
pop
jb,pn
iret
jmp
and
movl
cs
inc
or
imul
pop
nop
ja
mov
mov
adc
xor
cltd
or
push
xchg
mov
movsl
aas
mov
dec
pop
mov
push
cmp
nop
jmp
pusha
cltd
sub
pop
mov
jns
jnp
add
insb
add
data16
pop
lea
lods
popf
inc
cmp
push
dec
orb
jge
mov
jb
xorb
or
push
in
sub
sbb
out
sub
or
shrl
mov
dec
sub
sub
popf
sub
mov
sbb
ja
jae
dec
pushw
mov
lea
daa
andb
loop
mov
add
dec
push
sbbb
and
arpl
fcmovb
dec
push
les
mov
repnz
dec
and
push
adc
in
mov
adc
or
inc
pop
repnz
ja
jge
sub
outsl
aam
adc
out
pop
push
jle
jmp
cmp
je
mov
test
jbe
pop
adc
pop
jle
add
jge
cmp
push
or
mov
cmp
pop
je
and
jbe
cmp
cmp
in
addr16
or
lcall
jecxz
mov
rcr
mov
mov
outsl
add
test
loopne
dec
rolb
push
inc
jbe
popa
sub
cmp
test
xlat
cmpb
mov
ljmp
dec
mov
pop
into
ja
push
jns
in
mov
mov
mov
add
add
mov
pop
add
shl
bound
pop
and
pop
jns
nop
or
add
push
sub
pusha
mov
insb
loopne
inc
icebp
insb
std
fs
cmpsb
xchg
enter
and
ja
lret
lcall
loop
arpl
icebp
inc
pop
cmp
je
sbb
addr16
and
jl
insl
shr
sbbb
dec
or
or
mov
std
and
sbb
dec
jmp
and
push
add
sub
pop
adc
dec
ret
xchg
out
or
sbb
push
sbb
test
and
jo
fs
xchg
lcall
adc
inc
and
or
mov
int3
and
or
xchg
daa
jne
fstpt
sbb
xchg
jne
cmp
or
push
js
xchg
scas
cmp
inc
jo
xchg
andl
andl
ret
adc
cmp
insb
aas
pop
addr16
add
fimull
add
xlat
fstl
cmp
je
add
add
mov
lds
dec
jae
mov
fldcw
movsb
imul
pop
loopne
aam
add
dec
je
js
pop
sbb
push
dec
sarl
add
pop
pop
pop
addl
imul
pop
and
jp
jmp
lcall
add
in
xor
stos
insl
jo
lret
ja
call
insb
cmp
clc
add
aas
cmp
add
cmpsb
loopne
and
nop
mov
fs
dec
add
cmp
inc
insb
pop
in
sbb
adc
je
push
fs
dec
dec
adcl
lea
pop
ret
push
xorl
sbb
inc
cmp
xor
pop
dec
push
das
mov
pusha
cmp
mov
dec
push
jnp
lds
push
es
insl
xlat
pusha
sub
inc
xor
cmp
add
add
inc
pop
inc
paddusw
fistl
lret
xchg
push
cmpsb
lds
in
test
cmpsb
mov
imul
fdivrs
push
mov
and
inc
mov
fimull
and
cld
movsl
loope
inc
outsl
adc
xor
push
orl
inc
pop
xchg
dec
push
fldcw
mov
add
push
mov
mov
or
mov
imul
imul
push
push
shl
clc
push
arpl
add
mov
push
hlt
int
sbb
enter
lret
push
cmp
loope
xor
mov
adc
cli
adc
and
and
sbbl
dec
dec
push
cmp
out
sub
aaa
xlat
fildll
or
std
in
push
arpl
cmp
idiv
push
leave
insb
enter
mov
or
nop
or
xor
xchg
pop
cmpsl
add
popa
push
rcl
and
jle
jne
jmp
xchg
jo
jbe
or
jp
xchg
add
push
mov
xchg
pop
into
je
les
fidivs
adc
push
cmpl
js
adc
xlat
push
je
icebp
or
push
sbb
shr
jge
or
adc
add
and
mov
jne
cmp
adc
pop
dec
dec
inc
mov
dec
xchg
jns
cmpsl
cmpsl
test
or
out
adc
push
inc
cmp
xor
fst
repnz
adc
sahf
xor
pop
mov
cld
movl
adc
pushf
xchg
testl
and
jno
push
push
mov
jns
adc
mov
mov
ds
or
xchg
mov
add
mov
and
dec
or
or
bound
mov
inc
test
push
scas
mov
popa
mov
cmp
addr16
xchg
sub
push
sbbb
cmp
inc
dec
das
mov
push
adc
sbb
sub
clc
xchg
rcrb
sub
add
push
pop
mov
dec
mov
mov
imul
and
adc
cmp
in
adc
pop
xchg
jle
mov
push
pop
scas
adc
xor
pop
adc
das
nop
ret
ficompl
dec
xor
xor
sub
rolb
pop
lds
roll
mov
cld
inc
inc
lret
inc
dec
insl
in
sub
push
xchg
dec
pop
mov
sbb
or
xor
das
xchg
jge
movsb
push
or
and
and
cltd
pop
sub
push
add
push
and
sarb
in
cmpsl
aas
mov
xor
add
repz
xor
lock
mov
and
in
cmp
cli
clc
out
pop
movsb
loopne
and
mov
push
bound
cli
lds
test
pop
push
pop
in
loop
jo
mov
repnz
cmc
or
xchg
xchg
sub
mov
imul
or
push
addb
cmpsb
imull
and
add
xchg
jle
imul
add
and
mov
dec
mov
outsl
dec
add
add
lea
fldenv
daa
scas
cs
cmp
inc
add
push
sub
adc
and
pop
mov
leave
xchg
push
xchg
mov
xchg
push
mov
add
out
add
add
test
call
and
mov
push
rorb
xor
es
pop
outsl
hlt
hlt
pop
lret
and
std
xchg
mov
and
fnstcw
inc
jl
mov
dec
xor
or
xchg
leave
mov
push
push
push
mov
dec
dec
fdivrs
push
cmpsl
ss
jp
popf
xchg
ss
add
inc
sub
mov
sub
dec
andb
pop
and
loop
out
xchg
cmp
cmp
sub
aas
shll
mov
push
aaa
mov
out
pop
inc
cld
xchg
inc
and
sbb
imulb
add
lock
mov
xchg
xor
cltd
or
adc
sub
cmp
je
or
lret
push
sbb
dec
test
pop
or
push
adcl
adc
or
shrl
sbb
loopne
movsl
push
pop
dec
addb
mov
add
mov
dec
mov
pop
mov
leave
dec
or
add
imul
cmp
cmpb
dec
sub
int
sahf
or
or
mov
mov
add
add
adc
dec
sub
cmpsb
test
add
add
adc
lea
mov
loop
pop
push
sarb
inc
xchg
push
cmpb
push
push
xchg
arpl
cmpsl
jo
mov
pop
push
xor
jle
sbb
xchg
out
xchg
pop
pop
add
mov
or
push
pop
je
mov
and
jae,pn
ret
aas
and
testb
je
adc
addb
or
inc
add
addr16
fadds
sub
or
jge
sbb
add
adcb
mov
rorl
jns
sbb
popl
fcom
lds
push
popf
inc
jo
cli
jge
insb
pop
push
adc
dec
xor
add
iret
add
cmp
add
fs
inc
jae
push
sbb
jl
insb
les
and
mov
add
cmp
je
aam
sbb
pushf
int
pop
xor
and
clc
mov
fscale
loop
adc
or
addr16
cmp
or
pop
push
add
xchg
nop
rclb
nop
lods
inc
imul
mov
repnz
stc
cmpsb
daa
test
or
jae
jo
push
mov
adc
cmpsl
xchg
xor
rsqrtps
arpl
les
jns
jo
xchg
lret
outsl
pop
pop
mov
je
rclb
adc
jns
dec
xor
jmp
xchg
lods
jno
sub
or
add
sti
inc
outsl
pop
je
mov
movb
ja
ficoms
add
push
inc
add
xchg
imull
sahf
mov
arpl
mov
xchg
or
jecxz
cs
push
add
loopne
shrb
mov
mov
fisttpll
out
sysenter
es
pop
je
mov
ss
add
rclb
cltd
and
fldlg2
bound
dec
and
mov
setnp
xchg
xchg
sbb
mov
pop
and
dec
dec
or
and
inc
pop
xor
enterw
fnstcw
data16
getsec
lock
push
pop
cwtl
cmp
sbb
test
loope
sbb
cltd
fcoms
add
or
loopne
lcall
cwtl
inc
pusha
insb
mov
ljmp
pusha
fwait
in
adc
xor
icebp
cwtl
inc
sbb
mov
lds
jmp
lods
cli
sar
push
push
out
mov
leave
je
xor
iret
xchg
dec
push
pusha
rclb
ret
leave
inc
and
pop
adc
push
out
and
dec
add
and
adc
dec
dec
cmp
jl
push
rcrb
movsl
lcall
les
push
addr16
mov
and
clc
xchg
and
jle
dec
fldenv
cmp
testb
cmp
cmp
jno
enter
pop
pusha
adc
mov
pop
mov
dec
jmp
push
sbb
push
jnp,pt
add
adc
jne
and
adc
adc
ret
in
fdiv
lock
cmpb
pop
aas
imul
jne
bound
sub
fisubrl
sub
jle
lods
ja
or
xor
or
xor
adc
fidivs
cmp
leave
jg
shrl
jne
incl
inc
pop
mov
cltd
adc
xor
adc
mov
adc
mov
insl
xchg
push
mov
incl
and
mov
sbb
and
xor
pop
adc
aam
push
jle
push
xor
loopne
dec
incl
pop
cld
add
push
popa
mov
dec
add
dec
push
push
popa
test
mov
ss
cwtl
test
fcomps
xor
smsw
mov
stos
jp
cmpsb
pop
add
push
inc
mov
jb
lock
and
xchg
sbb
adc
jno
fidivs
pushl
jo
test
mov
xor
fadds
mov
imul
sbb
push
jns
leave
or
xchg
pop
add
xorb
and
loopne
and
ss
dec
add
in
adc
or
sub
jmp
inc
cmpb
inc
pushf
fs
out
popf
sahf
addr16
pop
dec
loopne
icebp
sbb
orl
mov
push
push
and
hlt
add
ljmp
ljmp
xchg
arpl
call
idivb
add
inc
xchg
adc
mov
notl
repz
sbb
sbb
adc
mov
or
test
mov
push
xchg
adc
fldt
decl
fmull
fildl
fsubp
inc
mov
mov
adc
mov
cld
fwait
lea
fst
pop
jmp
in
adc
or
adc
xchg
icebp
outsb
add
outsb
out
gs
add
js
sub
adc
pop
cmp
push
push
insb
push
mov
cmc
xor
add
adc
fcomip
in
leave
dec
push
es
or
enter
or
or
add
inc
add
xor
xor
xor
sbb
cmp
push
shll
vmovmskps
aaa
roll
or
test
jno
mov
stos
jbe
xchg
add
shlb
sbb
sub
mov
or
icebp
xchg
neg
pop
mov
dec
imul
inc
loope
pop
sti
push
imul
mov
mov
mov
xchg
mov
xor
div
or
pop
cmp
cltd
add
mov
or
inc
pusha
sub
or
and
jl
addl
pushf
xor
xchg
inc
scas
nop
sub
dec
jl
inc
dec
ss
mov
insl
jg
mov
loope
sbb
push
sbb
jmp
sbb
das
or
add
test
xchg
out
mov
lret
mov
sbb
inc
push
jnp
push
call
out
mov
jge
push
dec
dec
addr16
mov
cmp
fldcw
mov
aaa
call
inc
loopne
fisubrs
addl
sbb
jecxz
dec
nop
stc
sub
cmove
mov
movsl
nop
insb
test
test
add
mov
in
outsl
or
rcrb
lret
mov
push
and
or
push
jo
mov
jo
jns
decl
mov
mov
sub
jb
je
and
pop
add
push
in
mov
push
ss
xor
ret
adc
or
inc
lods
or
inc
ficomps
push
test
jmp
mov
pusha
orl
xor
jne
in
lret
cmpb
jae
lock
dec
int
mov
add
cmp
cwtl
shrb
test
fs
add
sub
push
fadd
pop
inc
jp
xchg
dec
inc
cmp
in
adc
call
insb
and
mov
punpckhdq
xchg
inc
jg
bound
inc
xchg
in
lea
stos
in
mov
cmp
xchg
sarb
push
sbb
xor
add
inc
std
popa
popa
adc
stos
sub
lret
sub
inc
nop
adc
mov
inc
sub
lret
adc
mov
mov
andb
sbb
xor
js
or
add
inc
adc
pop
adc
js
jne
or
add
pop
push
push
fnstcw
call
jo
mov
icebp
faddl
adc
movsl
pop
rcrb
dec
pop
sti
incl
lock
es
mov
jne
loopne
sbb
inc
adc
push
je
iret
mov
xor
cmpl
and
add
xor
adc
pop
imul
and
xchg
pop
movsl
sahf
xchg
andb
sbb
add
xor
hlt
pop
ret
xchg
jb
loope
push
popf
les
mov
dec
imul
imul
pop
add
inc
mov
push
into
adc
lea
sbb
mov
or
mov
and
scas
pop
gs
in
mov
jae
mov
or
sbbl
pop
xlat
cltd
xor
and
xchg
shlb
jbe
add
or
and
jle
int3
enter
adc
xor
inc
int3
test
push
test
jp
and
inc
outsl
sub
push
pop
ja
xor
syscall
mov
or
mov
adcb
ret
dec
adc
je
inc
shlb
insb
int
mov
pop
rorb
adc
data16
adc
push
sub
sub
sbb
or
test
sbb
push
fnstsw
cmp
ljmp
inc
icebp
or
cmpl
jge
mov
cmp
rolb
or
or
or
sub
pop
jmp
sub
push
add
push
or
pop
xchg
inc
daa
xchg
push
push
mov
cmpsl
adc
add
clc
mov
mov
pushf
push
das
lea
push
xchg
out
and
rclb
dec
loopne
jne
mov
mov
dec
mov
mov
dec
dec
mov
mov
data16
jmp
add
inc
xchg
bswap
or
mov
dec
inc
xchg
fidivl
and
dec
fwait
jno
cmp
pop
pop
add
test
sbb
add
mov
lods
and
mov
add
sbbb
dec
sarl
bound
cmp
cmp
mov
adc
xor
je
fbstp
packsswb
adc
cmp
inc
nop
cmp
daa
push
xlat
pusha
inc
rol
sub
add
mov
sub
mov
jmp
ret
mov
xor
mov
rolb
pop
adc
out
sub
push
dec
push
add
jle
pop
add
ja
sbb
subl
push
adc
inc
sbb
push
shlb
mov
inc
or
shlb
clc
mov
or
mov
cli
sub
cmp
pop
xchg
push
adc
and
push
or
mov
cltd
push
ror
nop
loopne
adc
out
loopne
leave
or
dec
test
addr16
test
lret
ficoml
sarb
add
push
les
sahf
push
fimuls
fildl
aas
mov
pushl
add
xchg
ss
and
clc
xchg
push
fidivrl
and
adc
and
pop
test
or
xlat
pop
cmp
and
jmp
inc
xor
adc
mov
rorb
cmp
and
pop
sub
sarl
movsb
nop
fwait
aas
sub
and
inc
mov
sbb
or
ljmp
cmp
pop
sub
cs
jecxz
pusha
insb
mov
and
and
adc
aaa
or
sbb
sbb
push
arpl
sub
cmpb
dec
sub
sub
sbb
setae
add
xor
lea
outsb
leave
xor
shrb
inc
testb
dec
loope
xor
jg
jg
adc
add
xchg
jo
clc
or
jmp
mov
ret
fcom
aad
sub
inc
and
or
out
lock
into
ss
pusha
jmp
mov
sbb
mov
sbb
pop
jecxz
mov
shrb
or
pushf
lock
inc
xor
inc
push
mov
mov
jecxz
test
dec
inc
cmpsb
jl
push
inc
xor
lret
pop
and
inc
push
cs
mov
mov
mov
call
movsl
inc
das
cmpsl
cmp
push
dec
xchg
movsb
xchg
in
daa
in
cmp
and
adc
lcall
adc
out
addl
and
clc
scas
mov
mov
dec
xor
inc
dec
pop
insl
test
add
jno
mov
and
push
dec
adcb
ret
jb
push
pop
lods
arpl
dec
fs
cmpl
sub
dec
sub
mov
mov
ret
pop
aam
push
pop
add
xchg
pop
dec
or
mov
loop
pop
dec
add
loopne
and
dec
xor
sub
adc
push
es
call
cmp
rclb
mov
std
jecxz
push
stc
cmp
adc
leave
inc
stos
jmp
mov
or
out
outsl
leave
adc
add
ret
pop
xchg
mov
sbb
mov
lret
ss
leave
inc
mov
add
jmp
or
add
dec
sbbl
xor
addl
mov
xor
pop
and
mov
clc
pusha
in
mov
and
lock
cmp
jge
or
fnstenv
pop
adc
adc
jle
adc
repnz
leave
or
adc
je
loop
sbb
pop
arpl
jne
testb
pusha
sub
sbb
pop
push
sbb
rorb
or
fs
inc
test
push
inc
loop
aam
adc
adc
das
jl
jnp
fbstp
xchg
pop
insl
and
lret
or
mov
jo
loopne
xchg
or
daa
or
test
les
xchg
xchg
mov
inc
enter
push
mov
add
loop
insl
mov
add
movsb
push
aad
add
mov
sbb
xchg
mov
or
insl
loopne
fwait
pop
add
dec
or
nop
fildl
data16
jae
fsubs
cmpsl
in
pop
xchg
push
inc
out
pop
pop
push
in
insb
and
nop
int3
dec
xchg
pusha
test
movl
aas
insb
ret
mov
bound
das
adc
push
rorl
pop
pop
js
testb
pop
adc
rol
xor
arpl
or
cltd
push
pop
add
lcall
adc
cmp
or
mov
sub
dec
bound
loopne
test
roll
mov
data16
sahf
dec
sub
push
pop
test
or
aaa
aam
pop
jne
dec
icebp
jb
adc
cmp
xchg
movntps
jecxz
sub
cwtl
cmc
or
dec
dec
imul
ret
mov
sub
js
sbb
insl
sbb
dec
add
add
add
inc
pop
cld
sub
loope
push
movsb
fcomps
adc
jbe
sub
popf
and
dec
rcr
lods
inc
ret
addr16
push
jmp
adc
mov
pop
cmp
je
dec
test
add
nop
ja
and
pop
clc
fcoml
fldcw
or
mov
sub
cmpsl
and
outsb
adc
rclb
fs
cmpl
jno
xchg
imul
sub
jle
pop
or
test
mov
and
and
inc
mov
xchg
add
cmp
inc
and
xchg
xchg
dec
push
mov
adc
cmp
jne
out
push
inc
add
mov
loope
fldt
sub
fnstcw
push
xor
inc
leave
inc
or
xor
fwait
jo
mov
xor
xor
mull
xchg
mov
mov
outsl
cltd
push
sub
push
mov
dec
mov
sub
cmp
adc
dec
imul
test
mov
or
arpl
adc
and
push
and
das
imul
outsl
in
or
and
or
add
cmp
fcompl
loopne
fiadds
sub
add
pop
ret
push
aaa
out
enter
js
xorb
dec
ret
dec
jg
mov
cld
shlb
add
pop
xlat
mov
dec
push
add
insl
jmp
cli
push
add
inc
adc
daa
dec
lock
xlat
movsl
add
jne
push
or
adc
xor
mov
pop
lcall
and
js
add
jecxz,pn
test
inc
outsl
shrb
jno
jge
or
repz
in
aam
int
add
push
cmp
sbbb
rolb
imul
data16
xchg
lret
push
dec
push
pop
dec
popf
push
inc
dec
imul
cmp
loopne
xor
sub
add
or
aaa
add
pmuludq
or
mov
lcall
add
or
push
or
pop
dec
xchg
gs
adc
js
adc
and
jg
les
push
aam
inc
jns
push
movsl
sbb
pop
push
push
daa
lock
push
sub
pop
inc
les
in
cmp
adc
adc
cmp
popa
adc
sub
lods
sbb
popa
sbb
mov
ljmp
push
out
lahf
sbb
lcall
pop
xor
lret
jnp
sbb
mov
push
mov
mov
pop
das
mov
jne
or
lods
movsb
insl
jnp
movl
or
daa
sub
mov
loope
xor
mov
shlb
push
inc
mov
pop
mov
lea
sub
pop
insl
push
or
pop
xor
inc
ja
sub
jmp
aaa
sbb
sub
cmc
loopne
push
ja
loopne
inc
mov
subl
dec
add
or
inc
movsb
jo
mov
subl
dec
les
and
enter
or
lea
pop
add
pushf
clc
xor
insb
cmp
in
pop
icebp
mov
bound
and
jecxz
pop
add
fs
adc
add
inc
adc
push
or
pandn
aas
imul
xchg
xor
xchg
cltd
and
push
lds
mov
sub
cmpl
jnp
push
xchg
clc
mov
mov
sbb
adc
adc
mov
cmpsl
push
jne
shll
lock
js
inc
dec
fldl
out
pop
or
pushf
sub
dec
fs
pop
nop
ret
hlt
mov
mov
adc
add
hlt
cltd
outsb
jmp
lcall
and
dec
nop
fadd
sti
imul
jl
cmp
jecxz
shlb
sub
cmp
mov
or
add
mov
out
jo
dec
push
cmpsl
mov
and
in
nop
inc
add
lahf
outsl
arpl
lahf
pop
lods
fdivrs
adc
adc
outsl
bound
pextrw
lods
dec
pop
cmp
mov
pop
inc
pop
ljmp
popf
inc
mov
mov
push
arpl
mov
sarb
lahf
dec
cmp
setg
jmp
pop
jecxz
sub
pop
add
cmp
setle
xor
inc
inc
es
dec
lret
mov
dec
adc
cld
sbb
push
and
pusha
lret
mov
rolb
nop
add
jo
inc
inc
ficoml
fldl
pop
mov
popa
jmp
push
or
add
cltd
jecxz
xor
xor
aad
sbb
mov
pop
pusha
mov
es
sbb
int3
cmp
in
or
loopne
pop
imul
push
dec
push
test
out
mulb
je
adc
adcl
add
orb
jnp
jge
jmp
aaa
hlt
jmp
xorl
into
sbb
mov
sar
add
shl
mov
and
xchg
into
xor
in
aaa
dec
push
cmp
lock
add
mov
leave
mov
inc
xchg
fs
push
add
and
jecxz
aad
shlb
cmpl
xorl
adc
imul
sub
idivl
inc
icebp
lock
dec
add
dec
or
pop
or
add
bound
imul
dec
pop
add
xchg
loope
loope
add
lock
dec
std
cmp
cmp
ja
dec
ret
mov
and
lahf
shlb
jns
add
imul
sub
lods
cmp
jae
jmp
xor
add
push
sbb
push
mov
jmp
sbb
pop
inc
push
push
lret
imul
lods
mov
mov
push
adc
repnz
ret
mov
and
lods
inc
inc
xchg
jle
and
xor
mov
or
inc
xchg
cmovno
add
out
push
pop
shll
into
stos
pop
ret
leave
or
sub
pop
push
xchg
adc
fmuls
sub
xor
xchg
pop
and
addl
test
push
movsl
jne
loope
inc
aaa
and
movsl
mov
and
sbb
mov
pop
jne
mov
mov
stc
ljmp
pushf
lds
or
sbb
mov
cmpb
mov
out
loop
inc
sbb
or
dec
and
out
dec
push
cmp
cld
in
and
jo
jge
push
sbb
int
sbb
dec
jl
scas
sub
mov
mov
fiaddl
xor
sbb
hlt
xorl
pop
lock
outsl
pop
and
int3
mov
cmpsl
jne
add
or
out
das
arpl
dec
inc
xchg
sub
orb
call
scas
sbb
mov
popa
jne
push
test
inc
pop
adc
test
mov
lods
lock
adc
or
add
test
call
push
cmp
stos
ljmp
and
push
aad
mov
enter
push
data16
pop
adc
and
add
push
xor
repnz
pop
test
mov
or
xor
cmpsb
or
popa
stos
mov
pop
in
xchg
sbb
jbe
sub
pop
into
insl
fs
pusha
loope
sbb
stos
push
jnp
sbb
movsb
lret
nop
scas
push
sarb
ret
dec
pop
pusha
push
out
lods
fidivrs
loop
das
incw
push
jne
aas
pop
sub
out
addl
rcrb
ljmp
in
enter
les
adc
test
xor
fdivs
hlt
mov
xor
inc
push
and
sub
add
xor
sub
mov
rorb
call
idiv
shll
push
and
add
ds
test
in
push
enter
pop
aaa
cmpsb
inc
mov
and
stos
sbb
mov
add
ds
aas
leave
xchg
lds
inc
shll
dec
ret
call
arpl
add
fs
mov
rorl
ds
mov
in
add
pop
jl
mov
adc
xchg
mov
xchg
popf
call
xor
inc
lock
pop
mov
enter
stos
mov
mov
jg
push
std
add
add
inc
jne
jmp
pop
rorb
sub
jae
push
push
cmc
or
add
sub
jecxz
mov
xchg
dec
xchg
inc
outsl
in
xchg
jmp
rclb
mov
xchg
pop
pop
insl
jne
or
cltd
orb
sbb
ret
ffree
aas
pop
lods
repz
mov
sbb
enter
jb
sub
add
inc
inc
adc
mov
mov
xorl
xor
mov
inc
push
dec
ss
fnstsw
mov
aas
movb
jmp
lds
jbe
push
mov
out
filds
sbb
sarb
adc
test
mov
xchg
out
stos
fdivr
jp
xor
or
jecxz
fwait
adc
jmp
inc
xchg
sub
and
mov
imul
add
push
or
pushf
test
lret
jns
mov
inc
mov
xchg
call
lock
push
cmp
adc
push
push
loop
sbb
outsb
loope
mov
movsl
ficoml
mov
or
outsl
jbe
lds
test
sub
loope
mov
push
push
out
mov
ss
nopl
enter
jl
dec
push
in
xor
xchg
mov
pop
jle
stos
xchg
or
subl
and
and
push
pop
sbbl
fisubl
inc
adc
out
pushf
movsb
jno
cs
push
mov
sub
data16
add
adc
mov
add
inc
loope
jmp
mov
mov
je
orl
scas
and
ret
ret
insl
jmp
mov
aaa
stos
push
dec
bound
or
mov
adc
mov
push
xor
pop
rcr
leave
and
xchg
mov
adc
and
test
sbb
mov
sbbb
and
xor
xor
push
leave
ret
pop
dec
and
inc
pop
roll
cmp
dec
or
imull
rclb
xchg
je
icebp
lods
sub
add
sar
aad
testb
add
shll
xchg
and
movsl
stos
inc
nop
jmp
mov
xchg
test
in
stc
insb
in
dec
incl
out
sub
push
xchg
pop
push
jle
pushf
mov
js
adc
test
das
or
dec
xchg
push
push
outsb
ja
inc
je
and
mov
add
xchg
gs
into
cwtl
into
dec
dec
hlt
push
data16
mov
add
pushf
xor
jnp
mov
pop
xor
push
loopne
fisubl
sahf
nopl
test
dec
xor
or
adc
repnz
inc
sub
test
xor
iret
xorl
enter
popa
cmp
inc
inc
pushl
push
lods
pop
fwait
push
outsl
xor
pop
and
stos
popa
sub
loope
push
inc
sbb
out
sbb
rclb
sahf
xor
adc
rcrl
xlat
and
enter
popa
pop
push
rol
lea
cld
jbe
sub
dec
mov
mov
push
les
insl
cld
mov
or
lds
ja
and
loopne
jecxz
push
mov
ret
adc
lea
mov
adc
rorl
add
test
data16
jbe
mov
loop
sub
cmp
js
mov
clc
cmpb
testb
out
inc
popa
jne
loope
lea
pushf
cmpsl
push
add
or
lods
sbb
jg
jle
pop
push
dec
test
and
and
rol
and
inc
dec
pusha
push
in
nop
pop
mov
push
mov
cmp
testb
sbb
fs
roll
add
inc
dec
cmp
jno
pop
and
arpl
adc
ss
mov
inc
std
rcl
hlt
cwtl
push
adc
pop
call
xchg
adc
std
pop
mov
or
jb
xchg
pop
push
pushf
inc
pop
repnz
insb
or
jecxz
jecxz
xor
in
idivl
add
mov
and
mov
lahf
es
and
popa
pop
sbb
sbb
cmp
or
cmp
push
add
pusha
out
push
ret
adc
popf
inc
inc
js
fistl
and
dec
cmp
and
arpl
push
js
xchg
push
xor
mull
outsl
je
pop
cwtl
mov
mov
scas
mov
or
seto
and
push
xchg
sub
sbb
dec
or
loopne
xchg
jo
push
mov
sahf
or
or
push
or
mov
xor
mov
sbb
and
sbb
add
lcall
dec
mov
clc
lret
je
xor
popl
aad
sbb
add
outsb
xchg
hlt
lods
cmpsl
xor
mov
add
add
jmp
xor
or
scas
cwtl
pop
int3
shlb
push
es
aas
pop
data16
lods
add
mov
arpl
inc
je
aad
arpl
movb
flds
cmp
nop
mov
mov
ss
jae
loopne
sub
dec
add
shll
outsb
push
fsubrl
mov
sbb
pop
sub
mov
push
out
sbb
popf
scas
xchg
lret
push
push
test
nop
pop
popf
sbb
or
mov
clc
sbb
add
push
inc
mov
sub
dec
adc
push
sarl
xchg
insl
push
pushl
add
rclb
jo
dec
int3
or
inc
fsubrl
jne
pop
cmpl
xor
sbb
mov
mov
hlt
or
imul
test
sbb
lret
test
nop
fcmovb
pop
mov
sbbb
mov
adc
icebp
addr16
cmpl
push
pop
fwait
push
gs
push
scas
ljmp
jo
add
loop
sub
sbb
insl
cwtl
les
pop
dec
test
and
push
nop
mov
gs
adc
and
mov
test
sbbl
push
adc
scas
and
movsb
sbb
insb
sbb
adc
inc
sbb
jmp
popa
sbb
or
inc
or
push
push
cmp
loopne
mov
call
pop
movhps
iret
dec
popf
shr
lret
data16
lahf
jo
or
adc
or
or
inc
jns
enter
insl
imulb
arpl
sub
push
test
test
jno
je
sub
test
rclb
mov
dec
mov
fiaddl
mov
mov
stos
test
test
fs
scas
sub
jno
xchg
dec
sbb
inc
jmp
dec
es
adc
or
mov
sbb
inc
aaa
hlt
fcmovnbe
lahf
jecxz
cmp
jge
xor
and
rcl
inc
div
outsl
xchg
mov
test
pop
rcll
scas
js
add
or
pop
inc
adc
jl
adc
or
push
call
add
imul
xor
mov
push
dec
jo
mov
mov
xor
sub
pop
cmp
fwait
lods
jno
pop
mov
movsl
pusha
pop
pop
mov
jne
and
sub
les
repnz
icebp
push
sbb
cmp
adc
ret
adc
inc
inc
js
stos
dec
mov
lcall
mov
sbb
sbb
or
dec
ss
faddl
and
rorl
inc
lcall
xor
popf
mov
xor
dec
jb
xchg
cwtl
jb
dec
cmp
or
sub
inc
fsub
je
inc
push
fistpll
xchg
adc
inc
xor
pop
mov
push
cwtl
sbb
scas
adc
sbb
adc
xor
xchg
shll
out
adc
push
and
cwtl
movl
aam
stos
adc
loopne
ljmp
pop
loopne
or
jl
mov
jle
jbe
pop
fbld
psubq
add
inc
call
dec
sbb
add
push
jmp
addl
add
andb
ret
fcmovnbe
xchg
inc
dec
jg
mov
xor
arpl
dec
push
fwait
pop
mov
push
lahf
sbbb
xor
test
jbe
sub
popf
sbbl
mov
cmpsl
push
sbb
js
data16
inc
push
add
pop
les
and
pushf
rclb
call
in
xor
push
mov
movsb
aam
pop
lcall
stos
rsqrtps
scas
loope
sbb
xchg
sbb
adc
js
js
pusha
adc
cwtl
mov
inc
xchg
subb
test
jo
cmp
sbb
les
pop
and
push
add
mov
dec
aaa
in
push
xchg
inc
movsl
xchg
jmp
push
pushl
sbb
sub
js
xor
or
ficoml
les
dec
sbb
jp
inc
add
push
xor
add
mov
clc
test
pusha
clc
sbb
and
inc
cmp
mov
jl
push
into
mov
arpl
setae
jecxz
lock
dec
xor
repz
lock
jl
into
hlt
scas
lock
sbb
lds
int3
xor
cmpsl
xchg
sub
clc
jecxz
xchg
test
sub
dec
and
mov
xchg
mov
lret
insb
sbb
loope
imul
xchg
jecxz
and
pushf
push
push
adc
push
push
fsubrs
aad
test
cmp
pop
pushf
mov
inc
jbe
mov
loope
mov
jmp
clc
pop
inc
sub
sbb
and
nop
sbb
adc
shlb
iret
pop
aaa
test
rorl
adc
ret
andl
in
and
outsl
sbb
mov
outsb
aam
sarl
adc
pop
movsl
lret
es
pusha
stos
fnstcw
mov
inc
dec
insl
pop
sbb
stos
or
cmp
push
pop
xchg
cmc
adc
and
lcall
orl
sbbb
pop
jbe
jg
rolb
icebp
shll
jnp
add
push
pop
or
bound
sbb
lahf
call
repz
bound
or
scas
sbb
arpl
push
dec
add
mov
push
and
mov
clc
enter
push
adc
mov
and
xchg
mov
xor
add
adc
inc
add
xor
and
mov
adc
or
movl
mov
insb
inc
mov
movsb
push
sbb
shlb
fld
pop
fbld
mov
xor
movsb
in
jo
pusha
test
inc
adc
add
adc
addr16
sub
ficoms
mov
adc
mov
lcall
adc
add
pop
mov
cmp
push
insl
or
xchg
adc
adc
das
mov
inc
cmp
dec
and
je
bound
ret
xchg
stos
movb
mov
nop
ja
jns
sub
dec
adc
movswl
inc
pop
rcl
sbb
add
bound
pop
nopl
mov
push
call
cs
xchg
js
lahf
aam
sbb
scas
daa
cmp
daa
cwtl
xchg
clc
in
sub
xchg
scas
xor
daa
add
xchg
out
pusha
pushf
ss
repz
cld
mov
dec
sbb
bound
sub
cmp
je
sbb
les
cmp
test
dec
pop
bound
xchg
test
jl
mov
xlat
xchg
push
je
inc
daa
sahf
pop
mov
das
lret
cmp
add
or
xor
adc
fstps
inc
cmp
and
xor
mov
aaa
bound
loop
shlb
xor
ret
sbb
repnz
int3
enter
or
adc
push
pop
and
mov
xlat
sarb
mov
xchg
aaa
fdivl
aaa
insl
cwtl
mov
in
dec
movsl
inc
mov
mov
xchg
mov
aam
fisubrs
mov
rorb
add
jge
mov
ret
movl
inc
push
int3
repnz
adc
in
sbb
push
lock
push
sarb
fwait
sbb
or
shr
in
in
aaa
icebp
mov
nop
sub
imul
mov
pushf
js
subl
pop
movb
mov
arpl
add
sahf
stc
or
jge
push
xchg
loopne
lock
int3
or
xor
dec
shll
and
scas
aam
rcll
dec
aaa
stos
movsl
push
and
out
lods
fcmovnb
sbb
adc
cs
add
out
mov
jecxz
push
xchg
shrb
arpl
daa
cmpb
mov
pop
andb
mov
sub
xchg
add
je
dec
mov
fildl
enter
notl
cmp
push
ret
xor
adc
pop
or
pop
bound
pop
es
movsb
mov
mov
les
dec
xchg
sub
or
shll
inc
pop
sbb
std
mov
pop
inc
jmp
mov
sbb
inc
mov
or
adcl
call
cmp
adc
xchg
in
jbe
cmp
imul
iret
xor
push
pop
push
les
push
or
cmp
popa
adc
or
pusha
inc
sbb
test
bound
rol
inc
sub
insb
popa
and
sti
pop
cmc
or
sbb
rolb
addr16
inc
or
lcall
nop
pop
in
push
into
in
or
dec
in
inc
jecxz
rorb
mov
or
push
ljmp
fs
inc
jb
pusha
loopne
rcll
ja
sbb
fcoml
sbb
pop
daa
mov
leave
xor
sar
std
pusha
pusha
ficompl
cmp
imul
in
or
ds
push
sub
out
mov
add
sbb
movsb
inc
mov
jnp
mov
jg
mov
or
out
lcall
out
push
mov
iret
ljmp
hlt
cmp
sbb
hlt
ficompl
or
aas
cmp
repnz
xlat
loop
loopne
mov
fidivrs
jns
shrl
aam
jno
pop
jl
aaa
test
orb
fidivrs
loopne
and
arpl
push
pop
jno
sbb
je
push
repnz
je
or
je
lret
add
dec
adc
mov
ret
and
push
xchg
jl
cld
filds
int
adc
into
jmp
pop
mov
adc
cmp
sbb
pop
mov
or
mov
sub
arpl
daa
fiaddl
adcb
fnstcw
pop
inc
shrb
jbe
or
pop
sub
scas
loopne
fisttpl
rcrl
jb
push
jle
pusha
aad
cmp
jae
data16
ret
fisttps
cwtl
movsb
aam
lds
movsb
sbb
and
cmp
push
or
dec
pop
addr16
sbb
into
xor
xchg
xchg
int3
test
jae
or
arpl
xor
push
orb
in
jns,pn
jge
sbb
movsb
subl
test
jne
popf
cmp
pop
aad
fsubs
add
inc
pushl
notl
and
ret
sbb
dec
pop
rorl
or
aas
lds
pop
ljmpw
dec
dec
pop
push
shlb
mov
push
imul
push
and
push
adc
roll
movsl
cmp
aas
jle
adc
nop
jmp
enter
dec
cmp
cmp
xor
or
sub
rcll
imul
xchg
adc
fyl2x
and
jle,pn
pushf
sub
mov
dec
cmp
jb
or
xor
es
ss
mov
cld
icebp
adc
push
mov
jmp
arpl
arpl
ret
scas
inc
mov
pop
push
jp
or
sbb
cmpsl
mov
stos
jns
inc
fbld
inc
outsb
xor
push
or
mov
mov
popf
mov
jns
mov
dec
enter
sub
dec
cmp
bound
sahf
sbbb
lahf
stos
rorb
mov
pop
pop
outsl
inc
and
aaa
xor
dec
jle
adc
sbb
je
mov
sub
pop
sbb
inc
or
imul
addb
push
movsb
adc
dec
mov
lock
adc
and
jg
add
cmpsl
into
jnp
cli
and
pop
add
add
push
xchg
rolb
cmp
jbe
fdivrp
pop
xchg
andl
mov
xor
add
push
lods
adc
call
ljmp
scas
push
mov
xor
inc
inc
cwtl
stos
push
xlat
dec
cltd
pop
inc
inc
adc
xchg
and
stos
adc
or
and
adc
cmp
stos
cli
roll
sbb
rcll
mov
faddl
or
add
sbb
add
pusha
jae
cld
shlb
adc
sub
push
mov
sbb
xor
cmp
pop
cs
test
nop
sub
jg
add
pop
jmp
add
jb
or
std
mov
inc
push
mov
add
aam
in
lods
test
fldenv
pop
mov
add
xor
add
clc
cltd
loopne
push
xor
data16
insb
lods
add
pop
aaa
xor
cmp
pop
dec
inc
jle
out
sbb
jmp
sbb
fwait
add
adc
push
movsl
cmp
mov
sbb
inc
mov
mov
pop
sbb
mov
xor
jne
pop
xor
sti
lahf
sub
andw
sbb
xchg
or
jg
stos
or
or
test
and
sub
sbb
pusha
or
jns
cltd
or
push
faddl
jmp
xor
cmp
inc
aam
jns
add
lret
rol
insb
add
xchg
jne
xchg
inc
or
movsl
or
mov
lods
xor
mov
push
ret
inc
and
and
and
fwait
push
mov
in
out
jecxz
inc
xlat
sub
pop
icebp
orl
xor
data16
into
das
loop
and
jmp
mov
je
xorb
push
push
cmp
mov
popa
idiv
mov
leave
jecxz
imul
nop
push
add
add
mov
cmp
push
scas
pop
test
xor
cmpb
pop
loopne
sbb
xor
add
mov
adc
js
mov
int3
and
mov
inc
or
sbb
aam
push
and
sbb
inc
jmp
lret
jne
cmp
lods
mov
inc
in
enter
popf
cmp
int
js
inc
lcall
pop
or
xchg
rcl
jecxz
mov
add
daa
cmp
cmp
push
xorb
js
cmp
sub
icebp
and
add
cmp
lret
ret
sub
sub
pushf
sbb
or
xchg
pop
int
add
das
cmp
dec
or
dec
test
or
ret
fnstenv
jge
cs
mov
jmp
add
jbe
sub
and
rcl
push
add
pusha
iret
pop
cmpsb
inc
add
call
mov
ret
inc
cmp
xor
rcrb
xor
mov
and
xchg
add
inc
jmp
jge
in
test
rcrb
or
adc
in
pop
xchg
loopne
push
sbb
or
and
xor
jge
inc
cs
out
ret
divl
nop
push
xchg
cmp
inc
cs
xor
cmp
nop
lods
mov
loopne
cmpsl
sbbb
loopne
insb
repz
adc
andl
mov
add
pop
or
jge
push
sbb
pop
or
popw
or
add
pop
or
rolb
adc
mov
orb
loopne
decl
push
add
xor
adc
movsb
add
and
xchg
push
sub
popf
fsubrs
push
pop
xor
and
sti
push
and
inc
add
sti
inc
xchg
loopne
jo
pop
push
fmull
add
call
sub
push
rcrl
add
push
sbb
cmpsl
add
icebp
clc
jmp
push
sub
sub
fs
jae
jle
dec
insb
adc
dec
testl
mov
scas
push
or
adc
shll
or
mov
lahf
mov
dec
inc
mov
dec
inc
test
cmp
mov
ret
xor
sub
iret
sub
fs
sahf
cmp
nop/reserved
sahf
cmp
lock
push
adc
push
movb
xor
mov
fstpl
push
adc
int3
dec
add
mov
or
pop
pop
add
mov
aaa
loopne
adc
hlt
mov
lea
stos
lock
add
clc
addr16
cmp
daa
ljmp
movl
fwait
xlat
je
adc
sbb
jo
repnz
fdivl
bound
pop
pop
mov
ret
mov
movsb
add
adc
mov
sub
and
add
test
push
lods
cs
cmp
out
push
sub
shlb
int
cs
in
add
das
lock
xor
test
je
xchg
sbb
adc
addl
sub
andl
jae
daa
rorb
je
ret
sbb
out
or
adc
arpl
dec
add
jmp
push
xor
rcrl
arpl
es
sub
popa
popa
scas
pop
adc
arpl
push
ss
fstl
xor
mov
and
or
adc
je
push
cmp
add
dec
outsl
test
mov
cmp
movsb
mov
mov
inc
push
mov
fisttpl
adc
jmp
jne
sbb
mov
lock
in
sti
fadd
rclb
adc
jne
fmull
add
mov
imul
mov
add
cltd
shlb
inc
pop
pushl
xor
sub
sub
jb
movsl
int
xor
inc
xor
prefetch
loop
mov
test
add
sbb
fwait
nop
mov
jno
mov
cmpb
adc
mov
mov
dec
jge
adc
pop
iret
add
nop
dec
jo
jle
in
scas
inc
insl
popa
hlt
jg
mov
add
dec
xor
push
and
push
ret
cmp
les
push
fld
or
add
or
je
call
add
dec
loop
test
mov
add
addr16
or
je
inc
mov
popl
cmpsl
cld
jbe
push
jns
xchg
mov
mov
mov
daa
adc
xchg
movups
xchg
and
pop
jecxz
or
adc
out
push
jge
xor
xchg
cltd
sub
mov
sub
or
loope
or
nop
stos
addb
or
jmp
push
std
test
mov
aas
lcall
inc
ja
movsb
test
mov
lea
jb
inc
or
cmpsl
or
sub
sub
popf
rolb
cmp
or
nop
imull
clc
lock
jns
inc
or
or
leave
pop
push
pop
call
iret
repz
rcr
int3
fmuls
aam
push
inc
rcll
jl
fildl
lods
push
sbbl
scas
movsl
sub
or
xchg
hlt
loopne
sahf
and
sub
xor
or
push
movb
fadds
dec
cmp
add
push
push
mov
xor
in
cmova
or
fs
cmp
sub
sub
cs
jmp
pop
add
in
aam
or
rcll
xchg
add
mov
lret
inc
inc
jns
ficoml
mov
in
ja
dec
or
pop
jl
std
in
add
sub
mov
mov
pop
jmp
inc
jle
fcmovb
and
sbb
jge
cmpsl
sbb
adc
or
loopne
adc
jns
xchg
mov
das
or
imul
mov
mov
adc
pop
or
repz
dec
add
add
into
mov
iret
mov
push
fistpll
and
jns
xchg
addr16
adc
fldlg2
ds
mov
push
mov
and
into
icebp
sub
into
inc
dec
add
add
jno
mov
jge
cmp
pusha
dec
cmp
jle
sbb
sbb
in
dec
fdiv
ror
repnz
int3
or
dec
fadds
fdivrs
enter
aam
fisubs
and
aam
les
xor
fisttpll
lds
push
lidtl
add
pop
add
add
xchg
outsl
incl
cmpsl
add
fs
sub
dec
add
les
lock
pop
add
sbbb
adc
out
and
inc
xchg
jl
mov
enter
inc
xchg
out
repz
sbb
sub
lock
mov
sbb
add
lea
sbb
xchg
jns
mov
nop
or
jns
daa
test
and
nop
cmp
dec
mov
add
popa
sub
push
and
pop
mov
icebp
fmul
mov
sub
ljmp
sub
inc
sub
mov
jmp
inc
mov
or
push
ds
cld
aaa
mov
loopne
jle
jle
xchg
lock
dec
or
mov
mov
cmp
adc
push
rclb
dec
mov
mov
sub
test
fmull
iret
mov
int3
hlt
add
pop
adc
mov
cmp
xor
arpl
fs
mov
nop
add
lods
mov
imul
push
rcrl
in
push
pop
gs
nop
gs
int3
add
scas
imul
cmp
cltd
push
inc
xchg
adc
push
fiaddl
ja
lahf
push
or
lret
add
sbb
clc
mov
imulb
fnsave
xchg
in
add
adc
pop
add
in
add
inc
or
stos
adc
outsw
les
jecxz
cmp
insl
gs
insb
sub
sub
sbb
pop
pop
adc
insl
addb
lods
mov
out
imul
mov
fadds
scas
or
data16
mov
mov
sub
adc
dec
xor
ficompl
mov
aam
mov
cmp
lea
mov
jno
fs
adc
outsb
sub
add
sbb
fmul
add
adc
fdiv
addr16
inc
pop
cwtl
testl
enter
adc
and
xchg
dec
sbb
fadds
add
outsb
and
daa
sarl
arpl
test
sbb
bswap
fs
pop
pop
and
xor
jne
xchg
dec
and
xlat
push
dec
sbb
popa
jne
sub
adc
inc
hlt
roll
orl
push
shrl
xchg
cvtps2pi
adc
nop
inc
sbb
call
and
or
push
outsl
inc
shrl
aad
cmp
es
adc
sbb
xchg
jge
xchg
outsb
loop
dec
movl
mov
or
fnstsw
sbb
or
add
adc
cmp
nop
int
mov
sbb
enter
jp
inc
pop
ret
xor
mov
inc
jmp
mov
and
adc
roll
and
xlat
add
dec
add
add
push
cli
fwait
mov
inc
push
dec
sbb
sbb
std
adc
or
mov
sbb
call
cmp
sub
adc
adc
test
fistpll
jmp
addb
xchg
rol
cmp
xchg
ja
outsl
xchg
scas
mov
push
add
add
mov
sub
push
shll
test
xchg
in
adc
adc
cld
outsl
push
or
iret
or
and
push
lods
scas
add
mov
sbb
orb
loope
sti
xorl
xor
jp
sti
lock
jne
xchg
loope
stos
or
xchg
imul
sub
add
aas
test
add
addr16
add
pop
jbe
loopne
nop
xchg
mov
aas
dec
dec
mov
jp
push
adc
bound
push
into
dec
pusha
and
jbe
data16
repz
or
add
and
lcall
add
mov
nop
data16
mov
and
xor
leave
jo
dec
mov
inc
nop
add
or
and
stc
mov
add
adc
add
pop
movsl
cwtl
adc
adc
cltd
adc
add
sub
stos
bound
or
add
adc
outsb
setge
cs
inc
dec
call
cmp
adc
pop
sub
fs
aam
push
mov
enter
aad
xchg
adc
arpl
dec
fcomps
outsl
sbb
or
cli
pop
jg
or
mov
cmp
jge
mov
and
add
sub
jno
inc
rolb
insl
in
add
fs
das
fldl
adc
sbb
sbb
sub
outsl
push
movsl
push
xor
in
jle
and
and
scas
adc
mov
xor
call
inc
loop
push
xor
lds
cs
dec
pushf
and
cmpsl
mov
adc
rclb
leave
jne
mov
mov
shlb
mov
iret
gs
sbb
xchg
stos
add
sbb
push
pop
or
fwait
push
adc
in
and
xor
mov
or
add
setns
jmp
cmp
pop
mov
inc
add
jbe
ret
sbb
cmp
or
sub
or
push
sub
sbb
icebp
and
jmp
mov
xchg
idivl
clc
sub
mov
paddb
pop
adc
dec
sub
js
jb
mov
add
push
mov
in
vpclmulqdq
mov
mov
adc
andl
aam
push
pop
outsb
pop
fistpl
and
xor
add
arpl
mov
sub
sbb
pop
loope
or
pusha
push
xchg
push
jae
mov
and
sub
push
xchg
clc
dec
push
jbe
xor
jg
out
or
push
outsl
add
or
add
clc
ret
scas
fists
add
popa
cmp
jno
loope
cmp
push
js
pop
aam
mov
push
or
pop
gs
mov
bound
ret
sbb
fnstcw
movsb
ret
cmp
je
pop
or
fimuls
cs
lret
lret
imul
xor
arpl
pop
test
adcl
or
or
scas
roll
and
push
loop
xchg
jp
sbb
mov
adc
out
aad
add
testb
add
pop
ret
stos
lahf
das
je
pop
call
cwtl
add
inc
das
xchg
sub
or
adc
imul
dec
xor
or
nop
add
mov
mov
adc
add
test
pop
mov
ficomps
bnd
mov
sbb
xchg
jl
dec
sarl
and
mov
cmpsl
flds
enter
xchg
shlb
push
sbbb
fcoml
shr
jbe
mov
shlb
mov
or
jle
cmpb
jg
rorb
inc
fs
les
or
mov
add
mov
xchg
shrb
fidivl
adc
xor
ficompl
imul
inc
repz
xchg
adc
decb
mov
push
mov
dec
inc
in
jbe
test
cmp
lods
pushf
outsl
mov
subb
mov
or
ret
adc
and
pop
add
mov
leave
push
add
push
mov
jb
test
fstpl
pop
fisubl
cmp
xchg
rclb
add
fsts
cmp
fmull
sbb
push
daa
loop
lods
sbb
lea
pop
adc
roll
cmpsl
xchg
loopne,pn
mov
adc
fs
push
mov
dec
js
adc
aaa
pop
mov
outsl
pushf
dec
jne
into
inc
inc
add
jb
clc
mov
dec
pop
jmp
add
ljmp
adc
dec
popf
or
in
pop
xchg
sub
jmp
aam
jmp
cmp
adc
fs
xchg
pop
mov
popa
inc
jb
adcb
xor
addb
pop
cmp
inc
or
push
add
xor
pop
imul
cli
or
cmp
jmp
pop
push
or
cmove
pop
shlb
add
inc
je
ret
add
je
dec
leave
and
shrl
js
cmp
test
nop
iret
daa
mov
movb
jmp
mov
addr16
aam
xchg
or
mov
or
cmpsl
add
sub
cmp
stc
push
xrstors
out
mov
pushf
stos
adc
xchg
lock
pop
add
inc
and
imul
jo
rcr
adc
xor
nop
cld
mov
cmp
mov
cltd
adc
sbb
popa
xchg
xchg
cmpb
fwait
dec
push
add
or
push
adc
sbb
jp
lods
aas
or
pop
push
adc
test
stc
cmp
mov
fdivrs
lock
loopne
xchg
imul
and
add
xor
sbb
pop
insb
adc
jo
imul
mov
and
fsub
xchg
in
adc
push
dec
jb
stc
push
clc
rolb
fs
pusha
leave
add
add
jo
inc
and
dec
push
es
lock
adcb
movsl
mov
jae
imul
rcll
or
sub
add
or
or
mov
shlb
mov
mov
cmpsb
pop
or
mov
sub
and
jle
xor
inc
test
lock
loop
loopne
insb
xchg
pop
push
pop
bound
and
pop
xlat
adc
or
jle
jno
or
cmp
shr
iret
scas
adc
mov
mov
add
mov
push
pushf
fistps
loopne
dec
jo
inc
xchg
or
repnz
adc
or
cwtd
inc
and
and
sbbl
mov
mov
inc
test
add
mov
insl
pop
test
add
inc
mov
jle
sbb
lret
loop
fsubl
xor
xor
sub
and
rorl
pusha
xchg
sbbb
mov
xor
adc
xor
pushf
out
push
and
mov
mov
jae
cmpsb
cmp
subb
fisttpll
xor
imul
jo
sbb
jmp
int3
mov
popf
dec
pop
ffreep
rorb
mov
mov
es
js
xor
adc
daa
mov
in
nop
cmp
adc
rolb
add
inc
add
incl
pop
dec
insb
mov
adc
sbb
sub
mov
pushf
cs
xor
and
adc
pop
jbe
or
pop
les
aaa
or
sub
lsl
cmp
xchg
or
fs
clc
xlat
fdivr
insl
add
call
aam
cs
or
mov
push
and
mov
mov
subb
fs
xor
test
adc
mov
bsf
cld
cmpsb
sub
cmp
or
mov
and
adc
jno
and
inc
scas
lret
hlt
add
out
pop
and
sbb
outsl
jo
daa
inc
cmpb
push
sub
cltd
cmp
loope
inc
hlt
jmp
fs
sbbl
pop
aas
pop
shlb
adc
jge
test
push
push
push
mov
cmovae
adc
rorb
data16
mov
or
pop
rolb
cmp
or
rorb
mov
pusha
pop
leave
mov
xor
es
das
inc
sbb
pop
ret
jo
mov
pop
xchg
or
mov
mov
sub
push
and
mov
fnstcw
cmp
push
jnp
xor
pop
mov
sub
or
push
mov
hlt
sub
and
mov
dec
adc
jle
pop
mov
jmp
push
add
and
enter
popa
or
sub
addb
into
push
jl
lock
stos
fincstp
cmp
cwtl
add
pop
xadd
js
add
js
mov
cmp
adc
xor
sub
push
popa
dec
popa
pushf
notl
dec
cmp
mov
test
into
push
xchg
or
subl
test
or
inc
fs
movl
sbbl
or
pop
add
or
addb
int
and
aaa
push
les
push
lock
jmp
xor
or
enter
ja
adc
std
add
push
enter
and
push
inc
mov
push
dec
stc
ja
push
xchg
ja
and
inc
jecxz
or
sbb
pop
or
or
sub
jo
add
mov
adc
push
mov
mov
jno
arpl
js
jmp
xchg
sbb
out
ss
or
mov
jg
pop
rdpmc
adc
sbb
cmp
ja
mov
icebp
jne
sbb
sub
sbb
pop
sbbb
inc
mov
sti
dec
shr
and
or
sbb
mov
or
pop
out
mov
sbb
mov
sbb
enter
cwtl
in
inc
icebp
mov
ljmp
or
in
jmp
jg
outsl
jne
mov
add
lock
cltd
add
add
add
mov
add
add
aaa
jnp
push
mov
mov
sub
sbb
sarb
adc
aad
clc
sbb
inc
out
add
cmp
xor
push
sbb
sbb
pop
add
les
add
daa
mov
push
test
sub
aas
adc
ja
mov
out
add
test
scas
add
xchg
jg
xor
or
jg
pop
dec
cmp
jg
cmp
ss
loop
add
pusha
pcmpeqd
push
sti
jmp
cmc
xchg
mov
sbb
mov
push
push
sbb
dec
pusha
jb
inc
mov
xor
imul
loope
notl
sub
inc
mov
jae
xchg
push
add
int3
push
call
pop
cmp
add
inc
pop
addb
sbb
clc
aaa
xor
dec
popa
fstl
les
fsubp
push
loope
out
push
sbb
pop
pop
sbb
pop
shrb
push
xchg
and
jbe
test
xor
sahf
xchg
arpl
insb
aad
sub
push
daa
jne
adc
sub
orb
int3
lret
fnstcw
aas
nop
mov
inc
mov
enter
sarl
jnp
xchg
cs
repz
mov
mov
push
in
inc
mov
mov
mov
scas
push
pop
pop
sbb
xchg
push
dec
add
js
inc
or
sbb
mov
inc
sbb
lock
adc
add
cmp
lock
push
loop
jne
sub
cltd
dec
and
testb
and
sbb
mov
push
adc
loopne
cmp
jae
push
and
test
pop
outsb
ja
stc
pop
push
test
add
and
loopne
sub
fs
call
jno
mov
das
cmc
sub
fisttpl
or
or
pop
mov
adc
xor
cli
in
ret
adc
fwait
shlb
sub
negl
mov
inc
pop
sub
dec
repz
cld
sbb
clc
imul
or
or
add
jmp
or
jmp
add
add
adc
sub
mov
or
les
in
test
xchg
scas
popf
or
mov
in
sbb
enter
dec
xlat
push
rclb
adcb
sub
jnp
dec
and
pop
ret
cmp
push
rolb
inc
xchg
fs
jo
enter
ljmp
adc
push
sbb
roll
inc
pop
and
icebp
leave
xor
push
jmp
push
out
pop
inc
call
mov
push
test
dec
cmp
sbb
add
cltd
xchg
fisttpl
push
or
or
ja
adc
sub
or
leave
out
xchg
cld
fidivs
orb
push
jne
jne
inc
xchg
mov
movsb
or
insl
sbb
jg
adc
test
movsb
lcall
rcll
mov
stc
in
add
sub
mov
into
repnz
sbb
xor
sub
dec
xchg
gs
in
dec
lock
push
jp
fcomps
les
jmp
jnp
shlw
out
cmp
xor
dec
add
cmp
sub
lret
fstps
sub
fldcw
int
add
dec
dec
popa
inc
add
lods
and
aaa
pop
stc
bound
stc
or
xchg
or
jns
mov
fidivl
sub
sub
mov
imul
mov
bound
pop
or
jb
subb
pop
or
imul
cli
ljmp
add
mov
mov
sar
jns
adc
cmp
fdivrp
inc
pop
or
out
or
daa
pop
pop
jne
lahf
and
or
jge
hlt
add
add
mov
adc
in
out
pop
push
push
fs
push
pop
pushl
mov
and
ret
icebp
push
cmp
jbe
xchg
dec
push
pop
push
outsl
sbb
out
orb
fildl
push
sbb
ret
ds
fs
push
inc
mov
sbb
or
inc
je
xchg
jecxz
call
and
mov
das
and
mov
mov
cmp
int3
adc
push
add
js
sub
sahf
sbb
hlt
dec
repnz
hlt
lock
and
mov
sbb
or
mov
jae
loope
loopne
scas
icebp
or
lods
faddl
cmp
pop
push
jnp
sub
js
flds
push
and
push
jecxz
imul
mulb
ds
cs
addl
xlat
adc
lcall
push
in
dec
or
adc
sub
jecxz
test
push
inc
ja
sbb
fidivrs
cltd
mov
adc
pop
movsb
mov
nopl
push
pop
or
push
fldenv
push
sbbl
nop
rolb
popa
rolb
fldenv
or
or
sahf
push
rolb
jbe
outsb
roll
das
sbb
mov
sahf
inc
add
fs
or
ja
mov
enter
cmpl
ret
or
movsl
aam
cmp
push
dec
sub
adc
add
shll
ja
mov
xor
ret
jg
mov
dec
dec
push
sbb
or
sbb
jge
rcr
dec
icebp
xor
xor
xor
cmpl
pop
jecxz
rclb
into
adc
jmp
sbb
sub
stos
addb
inc
dec
filds
add
rcrb
sbb
inc
movsl
pop
sbb
aaa
cld
sbb
sub
inc
lcall
mov
cli
stos
jle
and
adc
gs
mov
mov
and
jnp
xchg
out
out
lea
push
cltd
adc
and
dec
and
push
mov
lods
rcrb
inc
sub
mov
imul
ja
mov
in
add
in
enter
sub
adc
jno
xchg
jl
fdivrl
scas
flds
sub
sbb
sbb
or
lods
adc
rclb
popa
mov
add
push
int3
inc
mov
xor
and
xchg
xchg
xor
movsb
jns
push
cmp
test
sub
adc
sahf
xor
sbb
in
xchg
sub
arpl
jbe
jne
mov
mov
xorl
cmp
jne
pop
das
jne
jo
loope
adc
cwtl
mov
adc
xlat
and
inc
daa
pop
pop
xor
sub
push
lret
mov
loope
push
insb
sub
decl
loope
jae
push
rcll
pop
adc
les
or
icebp
push
leave
mov
pusha
fs
xchg
jbe
les
jp
sbb
inc
rclb
ljmp
and
push
push
mov
dec
pop
cmpsb
adc
add
outsb
xchg
scas
xorb
pop
pop
loopne
and
adc
cmpb
xorl
push
push
andl
add
and
inc
mov
add
ds
mov
xorb
daa
fcoms
js
inc
pop
pusha
and
ret
xor
mov
sahf
xchg
adc
pop
rorl
sub
or
mov
test
in
xorb
mov
dec
cmpsl
test
push
ret
inc
addr16
rol
ficoml
repnz
fwait
mov
xchg
cmp
inc
inc
or
das
xor
sahf
ljmp
outsb
adc
push
push
dec
adcb
sbb
mov
movl
je
popa
sbb
inc
and
jae
dec
clc
adc
arpl
aam
mov
arpl
and
sbb
mov
mov
clc
jne
xor
xor
clc
stos
test
pop
xor
push
addb
add
fisubrl
lret
call
ds
clc
push
std
dec
sbb
mov
pop
jno
nop
xchg
scas
jg
push
pusha
add
pusha
sub
cmp
nop
shlb
nop
cmp
jg
pop
or
jle
imul
add
lock
mov
cmp
ss
ss
es
pop
ret
mov
rolb
xchg
test
and
xchg
push
and
in
jo
xlat
sbb
cmc
jb
rcll
pop
push
xchg
test
jle
inc
pop
xor
pop
and
mov
inc
xor
daa
aam
and
pop
aas
popa
fcmovne
insl
aad
das
adc
cs
outsb
push
and
sub
mov
xor
add
inc
movl
adc
dec
pop
xlat
sub
cmp
jge
jbe
mov
pop
fsubs
add
cltd
or
pop
jmp
lret
mov
adc
cmp
inc
lods
inc
pop
fadds
mov
inc
leave
aad
or
insl
push
mov
and
and
jo
lret
and
fs
adc
aad
stos
aaa
mov
inc
sbb
adc
imul
pusha
add
pop
loopne
push
test
jne
jnp
enter
pop
and
xchg
mov
jno
sub
or
pop
ss
fwait
dec
add
sub
dec
sub
push
jl
or
xor
and
cmp
xor
add
dec
leave
leave
push
push
xor
test
adcb
sbb
inc
inc
add
mov
inc
call
inc
bound
cltd
sub
xor
or
scas
or
rcrb
inc
push
xor
adc
sbb
or
in
xor
in
fidivl
xor
jo
inc
arpl
add
push
or
push
push
add
rcrb
test
arpl
test
dec
dec
mov
test
lock
inc
clc
inc
lea
add
fadds
lock
hlt
xchg
js
es
popf
outsl
mov
jne
cmp
popa
outsb
lahf
sub
xchg
or
pushf
xchg
mov
es
or
and
and
in
ret
mov
adc
adc
and
jne
add
and
and
or
add
lods
sub
sbb
and
mov
inc
rclb
cmp
ffree
xchg
lret
xchg
inc
cmc
or
dec
faddp
lret
mov
and
mov
ret
pop
fcmovbe
inc
add
mov
daa
sub
insb
push
or
sub
add
inc
mov
movswl
js
inc
inc
loope
aad
das
and
inc
xor
push
xor
dec
inc
or
mov
and
inc
sbb
inc
pop
test
lcall
jecxz
cmp
mov
cltd
ja
add
sub
movsl
dec
mov
and
shl
mov
jmp
sub
or
pop
frstor
adc
sub
mov
inc
dec
xchg
mov
sbb
add
add
js
lea
and
and
jmp
and
or
and
and
fs
addr16
pop
shrb
jne
psubq
add
add
lahf
insl
in
and
adc
jae
jge
out
xor
inc
or
fisubs
mov
xchg
mov
fbld
mov
push
push
and
out
push
es
fs
mov
test
sub
pop
push
cmp
inc
mov
sub
inc
jbe
cmp
fwait
rclb
dec
dec
jmp
adc
push
and
gs
add
cmpsb
mov
dec
subb
pop
add
or
mov
in
cmc
pusha
push
scas
sbb
xor
pop
or
add
divb
push
popa
and
inc
call
cmp
cmp
das
pop
sbb
mov
inc
inc
sbb
jno
adc
mov
and
enter
orb
sti
add
and
push
mov
imul
or
push
sbb
arpl
insl
je
pop
xor
mov
mov
sub
iret
nop
cmp
je
js
cs
and
adc
dec
sahf
and
test
sbb
jo
and
nop
jl
dec
inc
out
sbb
xchg
dec
xor
je
inc
pusha
pinsrw
out
dec
add
dec
dec
inc
add
insl
adc
test
pop
inc
mov
mov
movsl
jnp
gs
cmp
sub
fwait
and
cmpsb
xor
xchg
and
add
imul
push
das
inc
in
inc
out
lret
dec
pop
das
cmp
popa
xchg
dec
jae
pop
ret
sbb
pop
jno
fs
jno
cmc
sbb
push
adc
divl
cmp
adc
add
mov
testb
stos
push
int
mov
sbb
xor
push
stos
jo
gs
pop
jl
pop
sub
js
mov
mulb
sub
push
adc
xor
sbb
or
hlt
fwait
inc
sahf
inc
or
dec
mov
push
add
or
sarl
mov
pop
fisttpll
sub
fsts
sub
gs
inc
add
mov
mov
pop
fimuls
mov
sub
add
or
pop
pop
or
adc
mov
dec
inc
push
or
mov
test
mov
push
mov
shlb
in
loope
xor
mov
addl
and
icebp
xchg
shlb
lahf
mov
push
mov
sub
cmp
test
mov
xor
in
cmpsl
aaa
and
jl
or
popa
xor
mov
fadds
ret
cmp
sti
addr16
fsubrp
fwait
lods
aas
mov
cmpl
addr16
mov
rolb
nop
xchg
push
add
stc
fmull
and
lahf
dec
adc
pop
sbb
add
or
fs
or
mov
cs
ja
and
mov
jg
xchg
adc
jle
adc
xchg
scas
scas
or
stc
addr16
inc
and
mov
dec
mov
xchg
mov
sbb
popf
push
mov
xor
xchg
lahf
imul
adc
jae
mov
pop
pop
icebp
inc
jle
pop
rorb
add
sti
mov
pop
adc
pop
repnz
push
xor
popf
nop
sub
sbb
pusha
in
cwtl
pusha
add
sbb
lcall
add
inc
hlt
push
inc
fs
inc
inc
or
adc
inc
lcall
inc
cli
sahf
clc
out
cli
xor
pusha
push
inc
pop
inc
push
push
push
adc
lcall
jbe
xchg
xor
push
push
jnp
push
bound
lods
sbbb
jmp
xchg
inc
push
shll
and
or
sbb
sbb
jo
mov
mov
add
pop
test
ret
repnz
xchg
add
jl
inc
insb
inc
enter
inc
adc
push
push
inc
sbb
insl
in
daa
sarl
int3
sub
sbb
xor
sbb
mov
lods
ds
sub
ret
or
push
dec
push
mov
pop
pop
dec
sbb
out
addr16
or
pop
inc
shrb
and
or
mov
movb
push
or
cmp
cld
inc
aaa
push
dec
mov
in
push
or
add
or
inc
dec
add
vmread
cmp
outsb
add
out
or
xor
or
nop
lldt
rol
jo
aam
add
jo
cmpsb
stos
or
sbb
or
pop
imul
mov
shl
clc
or
and
xor
and
sub
xor
xor
shll
inc
inc
dec
dec
mov
push
mov
loop
add
pop
adc
rolb
inc
add
loop
pop
enter
popf
nop
cmp
xor
mov
push
xor
pop
inc
iret
sub
or
lea
and
ja
outsl
and
inc
xchg
mov
or
sub
or
jno
and
pop
mov
rolb
xor
lahf
leave
cmp
jmp
pop
inc
repnz
add
mov
and
jmp
outsl
sub
xchg
cmpsl
sbb
add
in
or
stos
xchg
mov
xchg
mov
jnp
loopne
repz
and
xor
in
add
inc
ljmp
or
mov
insb
or
xchg
dec
pop
and
and
inc
sub
sbb
pusha
inc
cs
arpl
aam
imul
bound
les
gs
ja
insl
imul
lods
add
lea
pop
out
sbb
inc
or
xchg
enter
sarb
xor
fwait
js
xor
mov
lock
xor
and
rorb
push
scas
cmpsl
cmp
push
pusha
xchg
lcall
push
jge
popf
and
cmp
jne
ds
dec
jecxz
mov
cmp
xor
or
inc
mov
dec
jge
jecxz
and
pop
loopne
and
push
inc
iret
and
pop
pinsrw
xor
inc
dec
sbb
adc
sbb
xor
push
push
lock
or
push
ljmp
cmpl
adc
jo
incl
das
scas
add
in
dec
or
jns
data16
imul
push
and
sbb
daa
or
out
sub
cmp
push
sbb
loope
sbb
aad
lock
push
andl
dec
inc
bound
pusha
cli
jg
sarb
ss
push
and
cmp
push
jbe
sbb
dec
daa
cmpsl
dec
add
push
xchg
add
mov
loop
hlt
mov
jmp
ljmp
aaa
lea
jbe
and
sub
and
xlat
adcl
movsl
nop
add
and
add
lock
cmp
pop
push
ds
in
xchg
and
imul
mov
push
je
inc
mov
jl
cmp
leave
cmp
pushf
sbb
mov
lret
inc
add
adc
pop
xchg
mov
inc
dec
or
cmp
and
nop
les
pop
pop
les
lret
inc
xor
je
ret
daa
sti
push
pop
inc
push
pusha
aas
and
frstor
sub
fmull
dec
pop
in
fbstp
push
pop
sbbl
adc
inc
sub
push
push
and
pop
imul
pushf
push
fldt
inc
popa
and
insb
mov
xor
dec
jne
test
or
pop
out
rolb
les
out
and
jne
sub
inc
inc
jo
je
push
rclb
adc
inc
push
xlat
fsubrs
or
sub
jno
enter
pop
inc
push
push
scas
xorl
pop
cmp
mov
sbb
ljmp
dec
addb
push
add
add
mov
sub
or
mov
js
lods
xor
shrb
sbb
adc
aad
pusha
call
push
fdivrl
int
jle
push
push
cmp
je
test
jb
jg
and
jl
or
in
jl
mov
ds
or
inc
jne
push
nop
insb
jns
mov
and
mov
nop
dec
sub
mov
int3
lcall
js
xor
call
mov
xor
add
inc
roll
xchg
ja
je
mov
add
mov
fidivrs
jne
cmp
or
and
cmpsl
sarb
adc
add
ret
dec
fbstp
mov
out
add
lods
orl
fsub
dec
sub
lea
mov
jnp
sub
sahf
test
or
mov
add
arpl
pop
or
test
nop
dec
adc
daa
pop
inc
pop
pop
inc
add
addl
flds
push
or
out
xchg
sbb
jns
arpl
rol
xor
and
xchg
or
out
inc
loope
or
call
addr16
je
outsl
push
and
push
shlb
imul
xor
int3
and
jno
les
ss
push
mov
hlt
jbe
push
sub
cmp
xor
clc
jle
and
rclb
in
adc
rcrb
add
popa
xlat
je
xor
inc
fldcw
mov
dec
or
mov
or
push
in
pop
mov
mov
in
bound
adc
adc
push
sbb
pop
ss
nop
fiaddl
xor
xlat
daa
subl
add
ljmp
push
mov
mov
push
inc
adc
sub
and
and
mov
sarb
xor
xchg
add
pop
test
cmp
inc
jle
dec
out
mov
cs
mov
mov
push
adc
adc
lcall
mov
movsb
jl
ljmp
push
xor
jge
nop
pop
ficoml
cld
push
std
pop
inc
cmp
inc
inc
add
adc
mov
je
sbbl
lahf
aam
xchg
add
lods
xchg
arpl
and
xor
insb
xlat
call
outsl
inc
arpl
and
pop
fcoml
jo
mov
js
je
sbb
aam
xor
pop
scas
lcall
ret
jbe
cltd
push
ljmp
gs
popa
add
pop
out
pop
add
cwtl
mov
inc
dec
adc
ds
les
mov
and
xor
out
mov
jecxz
and
test
or
sbb
pop
or
icebp
ja
or
push
insb
mov
int3
aam
xor
iret
xor
movsl
push
sahf
fs
mov
dec
jo
cs
dec
mov
ret
sbb
fs
icebp
or
mov
sbb
add
gs
push
js
inc
cltd
adc
imul
and
iret
cmpsl
lods
cmpsl
loop
data16
cmp
pop
jle
seta
cmp
lods
jbe
mov
sbb
out
pushf
jecxz
cmp
or
cmp
xchg
lret
push
xchg
jmp
push
mov
dec
aaa
and
dec
pusha
xchg
jnp
jbe
inc
inc
imul
test
fcmovu
xor
xor
push
insb
sbb
rol
cmp
mov
mov
mov
cmp
and
movb
adc
inc
loop
cmp
inc
lods
stos
bound
mov
jg
jg
push
fadds
xlat
add
mov
push
mov
push
std
testl
pushf
push
jae
in
add
sbb
jmp
xor
movsb
mov
adc
insl
pop
int3
adc
add
cs
imul
sub
mov
arpl
add
dec
icebp
inc
inc
imul
adc
xchg
jns
xchg
mov
xchg
loope
jmp
pop
mov
cs
test
push
aaa
add
cli
adcb
xchg
xor
loopne
xchg
fwait
xchg
inc
roll
cmp
lcall
loopne
xor
inc
or
push
pop
aaa
mov
inc
jns
aaa
les
add
call
bound
jne
pop
or
fwait
pop
xor
in
cmp
xor
mov
inc
pop
loop
sti
dec
imul
dec
pop
adc
adc
or
mov
add
push
inc
push
cmp
mov
dec
imul
xchg
sub
cs
es
inc
adc
or
pop
add
jb
or
adc
mov
push
pop
or
inc
pop
xchg
outsb
in
adc
push
nop
pop
scas
pop
in
int3
adc
xchg
dec
repnz
cmp
sbb
mov
stos
and
push
scas
jbe
test
and
and
lock
adc
in
jl
dec
popa
aas
mov
fbstp
int3
divl
in
mov
mov
mov
jmp
sbb
pop
xchg
xchg
xchg
xchg
call
loope
xchg
mov
loopne
mov
icebp
mov
cmpl
rorb
ret
jg
push
mov
leave
sti
pop
adc
adc
cld
aas
jne
mov
cmp
popa
in
ja
add
mov
or
jns
icebp
inc
mov
cmc
pop
inc
inc
ret
dec
adc
cmp
stos
push
hlt
sub
jmp
lea
mov
add
vpmacssdd
cwtl
dec
dec
dec
js
loope
loopne
loopne
push
mov
ret
dec
adc
mov
adc
cmpsl
outsl
mov
and
mov
out
insl
mov
cmp
xlat
jl
lods
mov
sbb
shl
test
xchg
push
cmp
je
mov
insb
mov
lret
rcrb
inc
scas
xlat
fsubrs
cld
jg
jne
pop
xor
outsl
dec
ja
lock
daa
xchg
fidivrs
lcall
and
dec
shr
bound
stos
fwait
jo
and
aam
mov
dec
mov
and
pop
inc
dec
xor
mov
rol
inc
bound
mov
clts
push
js
cmp
mov
adc
and
mov
sbb
daa
nop
dec
and
mov
inc
out
scas
pusha
adc
pop
add
je
jb
lods
popa
cltd
pop
fistpll
test
dec
and
adc
mov
inc
enter
mov
and
and
hlt
mov
adc
cmp
nop
ret
inc
outsl
inc
bound
inc
sub
push
sbb
pop
cmp
add
adc
call
adc
add
lahf
ror
aad
bound
cmp
imul
adc
arpl
out
add
in
or
sub
pop
loop
push
inc
add
lcall
inc
fmul
je
add
lahf
cmp
sbb
inc
sub
sbb
es
lock
or
sbb
ret
xor
sbb
lock
and
cmp
push
in
test
in
and
test
in
xchg
rclb
orb
jb
push
xchg
dec
xor
call
push
adc
int3
sbb
mov
push
mov
cmp
adc
movsl
add
rolb
xlat
scas
loope
sub
adc
inc
clc
mov
dec
cmp
adc
lea
pop
sbb
in
lock
xor
imul
in
arpl
dec
in
sarb
push
cmp
inc
pop
loopne
push
fstpl
jb
nop
xor
fists
sub
adc
jae
enter
xchg
xlat
in
push
popf
and
jbe
sub
inc
jle
jmp
cwtl
ja
rolb
ja
enter
insb
inc
mov
movsb
mov
sbb
or
jae
test
jno
or
pushf
inc
into
je
mov
mov
movsb
cmp
fldl
fcoml
sub
out
aas
lock
inc
les
dec
incl
jne
dec
cmp
or
or
xchg
fcmovb
test
dec
fwait
gs
add
and
inc
xor
mov
mov
je
mov
insb
aad
lock
mov
push
jae
add
sub
add
movl
cmpl
and
sub
cmp
aas
mov
test
mov
xchg
xorl
daa
mov
sti
dec
jne
les
rorl
mov
lods
cmp
arpl
xor
aaa
stc
adc
mov
mov
and
push
stc
xchg
sar
mov
pop
add
dec
cld
jns
sub
cmc
push
xchg
push
shlb
and
inc
push
mov
mov
jo
mov
sub
jmp
outsl
daa
push
and
cmp
jne
inc
lods
in
dec
lea
insl
inc
or
out
pop
xor
add
in
jl
xchg
adc
repnz
ret
push
inc
call
add
dec
pop
cmpb
adc
or
inc
scas
inc
and
add
in
in
pop
pusha
add
nop
das
xchg
daa
gs
pushf
in
mov
inc
pushf
les
adc
rolb
ds
outsb
jne
outsb
push
mov
cmpsl
and
push
cltd
mov
ja
fwait
pop
xchg
sub
push
in
fildll
adc
into
js
or
daa
test
add
adc
add
push
inc
ljmp
bound
insb
cmp
xchg
jge
lods
fcoml
scas
insb
adc
xchg
rcl
mov
and
subb
add
mov
or
push
mov
and
inc
fs
arpl
sbbb
xor
cmp
icebp
clc
imul
sbb
inc
outsb
push
pop
add
sbb
dec
fistl
rcr
adc
sub
sub
addr16
or
jne
xor
or
andb
fisubrl
in
or
or
nop
add
js
add
inc
mov
hlt
jp
cld
cld
inc
jl
mov
mov
inc
data16
xorl
pop
mov
push
mov
sbb
push
adc
in
or
imul
dec
push
insb
push
mov
push
mov
lods
mov
shl
push
jnp
cwtl
push
in
pop
xchg
inc
rorl
fisubrs
nop
outsb
mov
nop
jg
mov
js
clc
xchg
scas
mov
fcomps
and
pop
mov
daa
xor
test
cmpsb
jl
mov
pushf
mov
lret
testl
movsb
or
push
xchg
mov
clc
mov
scas
cmp
pop
sbb
shufps
xor
mov
je
loop
or
push
mov
imul
pusha
insl
sti
sbb
rorl
add
inc
mov
imul
dec
cmp
ret
add
flds
push
mov
fs
or
inc
rcr
adc
mov
cwtl
push
fildl
jb
cmp
scas
and
inc
bound
add
xor
or
and
imul
xchg
cmp
cmpsb
jl
mov
push
pop
cmp
mov
lods
int3
mov
jo
pop
xor
pop
lock
cmp
les
orl
in
add
mov
mov
xchg
dec
mov
add
push
ret
lods
pusha
mov
push
movsb
ds
dec
push
pusha
lea
push
movsb
ds
dec
dec
lcall
dec
inc
mov
in
cld
xor
inc
pop
cmpb
or
lock
pop
push
popa
fs
pop
sbb
fsubs
sbb
or
xor
or
and
adc
and
jnp
loopne
mov
jo
addl
orb
cmpsl
adc
aam
cwtl
cwtl
push
add
sub
test
and
jns
or
pop
pop
push
aad
adc
mov
rorl
push
loopne
ret
lahf
nop
push
pop
pop
lods
ret
aam
inc
add
push
enter
mov
inc
add
lret
aaa
cmp
jge
xor
push
daa
in
or
hlt
jbe
push
arpl
inc
pop
adc
jl
add
mov
and
roll
xor
inc
pop
movsb
dec
adc
pusha
out
jg
lods
rcll
lock
outsb
mov
push
pop
and
push
loope
cld
ret
xchg
mov
sub
pop
repz
dec
mov
scas
add
add
pop
bound
xchg
add
and
fiadds
inc
sbb
leave
inc
ss
dec
mov
push
mov
int3
jmp
pop
add
inc
mov
into
clc
lret
rcrb
icebp
push
inc
sub
xchg
arpl
mov
adc
pop
xor
jns
sahf
shlb
popl
out
andps
pushf
mov
popa
xor
adc
jo
dec
jo
jo
xchg
jle
repnz
mov
push
jb
arpl
fstp
mov
cmp
or
or
xchg
add
cmp
ja
fld
push
fdivs
add
sub
inc
dec
sbb
popa
daa
test
jo
fld
mov
sub
adc
sub
sbb
mulb
ror
nop
call
shrb
sarl
aad
inc
int
js
fsubrs
cmp
loopne
cwtl
fstps
sbb
inc
mov
andl
pop
popa
mov
jb
xor
mov
xor
add
fwait
pop
inc
push
push
and
xchg
and
sub
cld
fcomp
in
sub
mov
inc
sarb
in
pop
imul
jecxz
xchg
or
sbb
or
and
cmp
push
adc
sbb
adc
jo
jo
sbb
in
xchg
orl
out
test
sarb
out
xchg
shl
and
cwtl
mov
pop
xchg
push
scas
mov
jecxz
mov
ds
xor
xor
ss
cmp
xor
inc
sar
adc
inc
dec
dec
dec
dec
dec
dec
dec
dec
or
jg
and
push
push
push
pop
pop
pop
lods
mov
or
or
inc
sub
sub
add
push
pop
mov
cmp
pop
push
mov
push
stc
inc
cmp
jp
shl
rcll
jno
inc
testb
data16
sbb
fisubl
adc
add
lahf
mov
js
add
push
xchg
add
pop
mov
lret
insb
sub
aam
xor
clc
lods
adcl
and
push
test
lss
jne
mov
sbb
incl
clc
sub
clc
dec
pusha
stc
xor
je
push
jmp
sub
sahf
mov
js
push
inc
jge
rorl
mov
aas
or
fdiv
and
mov
cli
dec
nop
in
sbb
xchg
cmp
pop
dec
push
sbb
cs
inc
and
pusha
add
sbb
orl
imul
pop
add
cmp
xchg
push
inc
inc
inc
dec
nop
into
xor
pusha
sub
popa
cmpsb
mov
and
mov
fnstenv
nop
lds
call
enter
or
dec
ja
fiaddl
sbb
imul
and
cwtl
fsts
sbb
inc
fcomp
cmpsl
adc
pop
xchg
push
enter
jl
inc
hlt
inc
scas
add
sbb
js
mov
pop
add
push
push
jbe
or
test
mov
ret
adc
fisubl
scas
and
or
mov
jns
mov
push
jg
dec
lahf
outsb
push
pop
jns
or
out
in
and
push
das
inc
jmp
pusha
leave
enter
xor
pop
sub
sub
mov
fsave
mov
and
int
gs
or
jmp
inc
arpl
push
add
push
or
cwtl
cmp
fwait
mov
mov
bound
imul
mov
and
mov
sub
xchg
xchg
test
xchg
lock
push
mov
sbb
popa
aas
mov
cmp
ja
sbb
xor
popa
jne
mov
incl
adc
popa
mov
adc
ret
ret
cwtl
add
scas
xchg
mov
pop
or
testb
jge
push
insl
stc
dec
insl
or
sub
out
aad
movsl
jns
add
mov
pop
jmp
jae
or
inc
inc
arpl
sub
mov
outsb
sub
icebp
cmp
ja
jo
in
dec
mov
ss
pop
mov
jmp
popf
dec
mov
outsb
xor
push
xor
nop
ja
enter
out
nop
mov
adc
in
push
sbb
adc
jb
or
or
inc
notl
add
inc
adc
ss
dec
adc
movsb
mov
subb
pop
xchg
or
and
ds
fs
insb
mov
outsl
push
sbb
inc
imul
rclb
push
dec
push
nop
cmp
ficoms
inc
push
inc
adc
data16
cmpb
imul
mov
negb
aas
cmp
fnstsw
gs
or
je
adc
inc
imul
pop
leave
add
mov
and
cmpb
test
sbb
add
or
fidivrs
mov
ds
dec
mov
push
mov
inc
xchg
add
or
xorb
aas
cmp
les
inc
aas
aam
add
mov
inc
mov
mov
out
test
iret
movb
pop
cmp
sbb
add
jp
add
or
nop
add
inc
jmp
push
xchg
shlb
stc
lods
lret
fs
sbb
pop
add
movsb
cmp
loopne
mov
push
jnp
ss
jle
adc
fs
adc
sub
add
mov
add
cmpsl
cmc
xchg
push
pushw
popa
mov
leave
add
dec
sub
sbb
inc
sahf
rol
rorb
add
inc
dec
pop
cmp
sbb
inc
aam
pop
cltd
into
xchg
xchg
pop
push
mov
adc
fucomi
dec
pop
pusha
inc
insb
sub
mov
enter
fs
sbb
add
test
xor
or
pusha
dec
daa
sarb
out
push
test
addb
inc
sub
xchg
jl
lret
aas
jno
pop
fbld
pushf
sub
jle
and
mov
adcl
dec
lods
dec
add
aaa
shrb
inc
add
xlat
clc
xor
pushf
add
pop
shl
lcall
pop
inc
push
cmp
mov
or
and
out
call
in
clc
testl
inc
iret
ret
rcrb
xor
pop
cmp
shl
lret
inc
iret
pop
xlat
or
shrl
or
cltd
jmp
pop
jb
movsl
or
movl
add
sbb
popa
jge
test
dec
mov
cmp
pop
add
sub
ss
adc
popa
jg
cmc
in
push
or
push
in
loopne
sub
lret
popa
sub
mov
sbb
loope
dec
and
adc
dec
iret
fmull
push
sub
int
les
mov
xchg
or
dec
add
push
andb
lods
pusha
adc
inc
daa
adc
cmp
outsb
mov
andl
fcmovb
inc
adcb
movb
and
cmp
mov
pop
push
enter
inc
sub
sbb
jecxz
fcomi
and
mov
insb
mov
mov
insb
and
mov
aas
mov
xorb
test
ja
or
loop
push
push
adc
ja
je
add
and
jne
ja
mov
int
insb
out
mov
mov
lcall
inc
loope
stc
or
push
popa
decb
inc
dec
test
pop
lret
sahf
rdpmc
sub
adc
rclb
jg
imul
test
mov
xchg
fsubs
iret
pop
aas
outsl
cmp
add
es
cpuid
bound
cmc
mov
and
fsts
cmp
test
sub
std
or
scas
aad
cmp
jae
mov
rorl
jbe
jmp
jbe
sbb
aaa
mov
inc
xor
and
rorb
xchg
mov
cmp
mov
push
or
adc
call
mov
push
mov
jae
mov
inc
sbb
or
mov
and
sub
arpl
and
pop
lods
cwtl
adc
mov
call
call
mov
jecxz
xor
cli
and
adc
push
and
add
test
and
xchg
les
push
je
cmp
adc
push
push
js
pop
rol
shrb
fisubrs
jne
xor
and
sub
xor
or
or
pop
mov
scas
mov
push
and
rorb
adc
or
sbb
js
pop
std
insl
addb
jl
or
sbb
cmp
mov
fiaddl
dec
and
dec
iret
adc
xor
mov
sbb
adc
test
rorb
subl
push
mov
jmp
xor
aaa
mov
ret
cwtl
out
addl
push
mov
ret
xchg
jo
cmp
push
pop
inc
xchg
imul
enter
push
mov
xchg
add
xchg
scas
xor
mov
xchg
icebp
mulb
je
inc
inc
mov
bound
scas
and
lea
mov
mov
and
adc
mov
inc
jp
push
inc
cli
in
stos
inc
cmpl
inc
iret
dec
dec
fildl
cmp
pop
adc
fisubrl
inc
iret
xor
loopne
pushf
int3
cmpsb
stc
lock
hlt
enter
pop
jns
sbb
je
push
or
inc
cld
call
fdivs
rorl
pop
inc
es
xor
shl
insb
outsl
mov
cmp
mov
inc
sbb
dec
aaa
push
sbb
sbb
ret
movsl
mov
adc
or
xchg
mov
add
mov
daa
mov
add
sub
push
insl
adc
rolb
xor
sub
dec
test
xor
addr16
push
lods
loopne
sbb
add
sbb
adc
or
mov
cmp
imul
addr16
insb
and
pop
adc
xchg
jmp
and
and
seta
pop
fimull
push
mov
js
lcall
or
inc
cwtl
pop
add
leave
inc
push
imul
mov
pop
push
push
inc
adc
and
push
fsubrs
enter
aam
insb
not
mov
xlat
xchg
jl
pop
popf
pop
mov
xchg
mov
jl
clc
add
xchg
cmpsb
and
cltd
add
sbb
adc
mov
pop
push
or
lock
dec
or
sub
sub
iret
enter
add
inc
push
sub
pop
sbb
in
sub
roll
pop
movsb
push
subb
jbe
or
pop
push
fmul
jo
test
or
fdivs
or
mov
push
test
movl
cmp
push
mov
shrl
inc
stos
mov
mov
popf
mov
insl
xor
into
hlt
cmp
hlt
hlt
pop
mov
hlt
push
iret
hlt
sub
inc
add
rep
mov
repz
dec
or
pop
jns
in
stos
sbb
insl
sbb
xor
leave
lock
rorb
or
popa
add
jae
iret
ds
pop
fildll
push
push
mov
adc
mov
mov
loope
jae
outsl
lea
jo
dec
or
xchg
sub
pusha
and
jb
loopne
or
outsb
aaa
fbld
js
jo
mov
fcmovb
dec
cmp
push
sbb
add
or
call
and
test
lock
and
push
inc
or
enter
mov
notb
fwait
or
add
sbb
add
or
dec
dec
dec
dec
loopne
add
and
enter
inc
clc
mov
or
mov
xlat
xchg
pushf
or
or
aaa
xor
xor
xchg
les
mov
sub
jmp
add
push
arpl
add
add
sbb
adc
cmp
cli
loope
and
adc
xor
xor
bound
inc
sbb
add
mulb
dec
cld
mov
pop
mov
pusha
movaps
adc
mov
daa
call
in
inc
stos
mov
pusha
std
push
rorl
inc
clc
dec
inc
jb
xor
enter
sub
daa
lock
sub
cmp
add
add
dec
clc
inc
jb
cmp
test
dec
inc
xchg
inc
or
and
xchg
sub
bound
mov
sbbb
inc
adc
lock
sahf
dec
call
pop
pop
inc
stos
add
push
add
test
adcb
push
sbb
pop
push
out
adc
and
dec
lret
ret
repz
mov
cmp
loop
addr16
das
stos
dec
ds
add
inc
ror
sub
adc
mov
pop
push
adc
repnz
fistps
mov
cmp
cmpsb
lea
add
cmp
jae
jl
jge
in
add
mov
and
add
push
sbb
inc
in
sbb
mov
and
jnp
fsubrs
push
dec
adc
cmp
pop
sahf
popa
push
pop
pusha
inc
push
sbbl
and
adc
xchg
inc
daa
scas
out
adc
sbb
shlb
xor
lret
push
fs
pop
movsl
pop
shlb
jl
xor
pop
mov
or
mov
fistl
repnz
and
out
movl
pop
inc
sbb
test
xchg
sbb
jno
lcall
pusha
pop
faddl
adc
or
out
mov
fisubrl
sub
inc
add
mov
test
jo
insl
push
mov
daa
mov
scas
imul
jnp
sbb
pusha
adc
lock
or
inc
xchg
mov
movsb
popf
inc
call
les
fidivl
inc
fiaddl
ljmp
dec
dec
es
adc
bndldx
adc
adc
push
cmpsb
add
mov
int
es
cmp
or
mov
and
inc
lret
fcomps
outsl
add
addr16
push
std
ja
sbb
inc
mov
int
cmpsl
int
in
mov
xor
daa
pop
push
adc
ficomps
inc
add
add
data16
add
xchg
pop
xchg
xchg
push
stos
and
ds
push
and
add
adc
mov
orb
xchg
out
dec
repz
add
stos
pop
leave
lock
add
add
inc
ds
xor
frstor
xor
adc
inc
or
sbbb
mov
cwtl
outsl
cmp
int3
or
inc
mov
lds
jmp
pop
lcall
aas
cmp
add
rcll
aas
cmp
mov
or
mov
mov
add
loope
daa
lods
andl
inc
push
push
mov
mov
shll
cmpb
stos
mov
insl
sbb
cmp
and
pop
xor
test
rcll
insb
mov
mov
add
and
fsubrp
mov
test
aas
je
repz
movsb
out
or
aam
aas
pop
add
jne
cmpl
adc
sub
mov
xchg
xor
or
sub
xor
sbb
cmp
mov
mov
mov
ds
inc
pop
dec
and
dec
inc
push
jo
jne
outsl
sbb
test
jg
xor
push
rcr
daa
mov
repnz
mov
aaa
or
add
sub
out
leave
or
outsb
mov
and
ljmp
fimuls
in
or
pop
cmp
jns
repz
cmp
fs
std
add
repnz
cmp
pop
movb
jo
fcmovnu
mov
imul
add
push
bound
je
mov
mov
jbe
test
pop
cmpsb
push
xchg
cmp
fiadds
inc
aas
jbe
and
xor
mov
popa
push
das
and
jo
push
dec
popf
fstps
add
sbbb
lea
orl
add
pop
push
fwait
bound
push
mov
in
nop
loopne
popa
pop
jne
xchg
or
xchg
or
out
jmp
shlb
fistpl
mov
ret
jne
xchg
jne
xor
mov
cmp
popa
jbe
mov
jl
xor
and
mov
jmp
jmp
and
ret
inc
roll
les
popf
push
arpl
and
aam
xchg
lods
and
pusha
mov
pop
lret
add
sbb
orl
hlt
insb
leave
xchg
jae
mov
mov
loopne
jg
push
in
andl
adc
xor
repz
test
xorb
pusha
int
fdivs
adc
push
adc
lock
push
ljmp
movsb
jmp
xchg
test
adc
jno
push
and
out
jl
fcoms
dec
mov
dec
inc
movsb
sub
xchg
dec
or
les
mov
inc
jmp
inc
mov
mov
out
in
xchg
out
inc
inc
mov
push
test
sub
push
or
rclb
xlat
mov
mov
stos
jmp
movsb
jg
lods
out
ss
mov
out
cmpl
loop
ret
adcb
insb
cmp
enter
sbbl
popf
cmp
push
ss
mov
lret
fidivrs
push
iret
pop
dec
idivl
cmp
push
cmp
inc
mov
sti
mov
and
imul
pop
mov
push
les
insl
jb
jae
es
mov
js
in
in
cmp
push
ja
mov
xchg
pop
pop
inc
dec
pop
adc
mov
mov
jbe
movsl
aas
insb
sahf
lock
add
inc
inc
xchg
inc
cltd
mov
dec
movsb
dec
fidivs
pusha
push
push
xor
xor
add
call
mov
mov
insb
sub
repnz
cmpsl
dec
sbb
xchg
jl
inc
and
push
xor
inc
leave
cmp
cmp
push
xor
inc
or
cmpl
pop
je
or
adc
push
pop
and
dec
ficoms
inc
pushf
insb
pause
popa
xchg
dec
mov
add
add
jl
adc
popf
or
movsl
and
push
xchg
inc
loop
das
pop
test
jne
stc
iret
add
xor
enter
jl
xor
add
ja
cmp
mov
mov
mov
mov
or
imul
adc
mov
ret
fldenv
adc
push
jno
mov
imul
inc
and
add
or
and
sysexit
adc
sbb
daa
xor
in
dec
mov
lods
pop
xor
sarl
les
popf
xor
sub
call
cwtl
aaa
sbb
and
aaa
imul
stos
fisubl
cwtl
add
and
push
mov
mov
enter
pop
cmpsb
aam
lods
add
loope
xchg
addb
xchg
inc
movsb
mov
pop
jne
add
inc
sbb
test
inc
cmp
inc
push
lock
adc
add
ss
mov
push
sbb
mov
into
push
imul
inc
add
adc
cmp
jl
and
cwtl
dec
imul
es
and
or
pop
add
das
outsl
sbb
int3
add
out
adc
rol
out
sbb
sbb
sub
mov
lea
cmp
or
inc
cmp
hlt
sub
adc
push
clc
xchg
inc
sub
xchg
nop
or
loopne
test
rolb
inc
test
cmp
inc
fiaddl
sbb
and
jle
shll
insl
inc
push
add
lret
or
test
aam
rcrb
mov
jne
inc
mov
pop
dec
adc
int3
fs
sbb
push
mov
pop
push
sbb
dec
repz
out
lret
sbb
addps
xlat
movsb
mov
adc
enter
cmpsb
jnp
mov
imul
inc
cmp
or
fs
push
or
test
mov
adc
and
sbb
mov
jmp
scas
cmp
xchg
jecxz
xchg
push
sbb
lret
sbb
dec
xor
add
je
popa
mov
dec
add
add
sbb
adc
cmpsl
sbb
push
push
cmp
dec
jmp
or
fcmovnu
pop
out
insb
mov
pusha
imul
dec
jle
xor
jl
xlat
orb
sub
mov
fsub
adc
cmpsl
or
sub
jo
daa
mov
iret
add
lea
dec
sbbl
inc
xchg
clc
and
xor
shll
jl
push
les
sub
cmp
hlt
call
fcomi
sbb
mov
daa
inc
cs
test
mov
test
push
mov
out
mov
xchg
and
lret
shl
test
and
or
mov
lods
add
cmp
ss
mov
pop
or
cmpsb
sub
cmp
pop
cmp
dec
jb
fdivs
xchg
inc
iret
sbb
lods
xlat
pusha
sti
cmp
out
xchg
inc
and
loopne
push
cli
adc
test
addr16
sbbl
fs
xorb
leave
lret
mov
inc
movb
shrb
mov
in
arpl
ret
inc
or
or
pop
addb
or
test
and
xor
pop
cmp
jae
add
xor
fsubl
add
jl
jg
aaa
dec
dec
leave
xchg
pop
and
mov
lret
jg
inc
cmp
iret
cmp
mov
pushf
jne
cmovns
cmpl
call
das
ret
mov
sahf
push
cmp
push
fistpl
and
adc
movsl
xor
add
hlt
fstps
ds
pop
push
cmp
js
push
int3
inc
arpl
jle
push
mov
lds
sbb
std
fnstcw
inc
cmp
fadd
mov
push
add
xor
adc
inc
inc
inc
jae
es
leave
ja
daa
dec
mov
sbb
fisttpl
and
sahf
scas
inc
stc
lods
jnp
mov
mov
mov
xchg
pop
push
lahf
pop
test
sub
cmpsl
jne
xor
lahf
cltd
ret
or
in
jne
fstl
jns
xchg
push
add
pusha
mov
or
cmpsb
hlt
add
push
pop
xor
lock
xor
and
sub
mov
pop
or
mov
jg
sub
in
adc
pusha
add
and
ljmp
mov
pop
mov
data16
add
adcb
cmp
pop
adc
and
in
rcr
sbb
fs
fisubrs
add
js
int3
js
nop
cs
ja
push
mov
pop
push
add
and
push
mov
jecxz
inc
mov
cltd
add
xchg
rolb
out
sbbl
pop
ja
fldt
les
cmp
inc
jno
inc
into
mov
ficoml
xor
sub
js
das
inc
cmp
add
xor
sbb
jo
mov
call
sbb
or
inc
jo
addr16
xchg
aam
cmp
or
dec
or
cltd
push
test
push
xor
push
push
pop
out
adc
and
es
cmp
jb
xor
lea
cli
mov
add
pushf
pop
testl
add
xchg
jbe
add
mov
jge
cmp
ds
adc
push
cli
in
mov
orb
lods
popa
push
mov
adc
jge
push
or
loope
mov
cltd
loopne
xor
push
add
js
or
cmp
jp
and
mov
adc
pop
add
dec
shrl
cmp
pop
or
icebp
inc
mov
mov
mov
xchg
arpl
mov
pop
loop
xchg
inc
adcl
movsl
cli
and
add
in
ja
call
sub
in
add
je
addl
stos
icebp
push
shr
mov
repnz
and
mov
xchg
xor
sbb
and
repnz
push
nop
mov
dec
inc
mov
jmp
xchg
test
push
out
jb
dec
sti
xor
push
stc
sbb
pop
or
push
rorl
xchg
scas
pop
adc
lret
mov
cmpsl
xchg
add
sti
mov
sub
and
xor
lcall
push
push
call
push
popa
pop
in
mov
ret
loop
mov
sbb
cmp
je
xor
pop
shl
add
nop
fiadds
lahf
imul
and
mov
adc
repz
out
push
test
std
add
in
hlt
adc
and
jmp
popl
je
loope
test
xchg
mov
mov
insb
stc
pop
push
fwait
sbb
lahf
dec
test
pop
jns
fsubrp
add
pop
add
and
xchg
jle
or
push
dec
inc
mov
xchg
mov
cltd
std
mov
jbe
test
lcall
add
push
sbb
insb
mov
mov
cmp
scas
cmpsb
cmpb
jl
je
sub
fildl
dec
push
sarb
and
into
add
aaa
add
inc
add
and
cmp
xor
inc
mov
and
mov
add
dec
xor
xchg
dec
xchg
idivl
mov
fstp
adc
inc
or
pop
daa
push
xor
mov
jo
adc
xor
add
jnp
mov
jmp
lea
or
xchg
dec
sahf
xchg
ret
or
fisubs
inc
push
int3
inc
orl
in
add
xor
lahf
jp
popa
dec
cmp
ds
in
xchg
inc
iret
dec
inc
dec
push
sbb
dec
inc
dec
sbb
into
mov
das
sub
test
ja
push
nop
dec
popf
outsl
loopne
and
xor
jne
ret
sbb
push
push
or
dec
subl
jno
jmp
xor
in
or
cld
adc
xor
add
dec
ja
xchg
mov
push
xor
inc
inc
pop
sbb
adc
jge
mov
das
call
sbb
or
and
dec
addl
jmp
dec
pop
test
clc
dec
sub
inc
pusha
jno
add
sbb
adc
js
xchg
add
xor
lock
and
or
int
pusha
lods
sub
dec
adc
call
mov
aad
or
daa
in
fisttps
xorl
pop
xchg
ds
mov
or
sti
mov
cwtl
addb
movsl
addr16
mov
sarb
jmp
sbb
jno
aaa
out
loopne
adc
rorb
cmpb
cmp
or
jl
adc
pop
sub
imul
int3
pop
adc
jno
xchg
out
mov
rcrb
mov
xchg
test
pop
dec
or
or
into
sbb
adc
push
in
dec
xor
and
inc
push
mov
and
xchg
je
pop
sbb
imul
enter
push
daa
clc
popf
lods
or
mov
test
rorl
fisttpl
leave
jnp
andb
push
insb
jne
cmc
jb
cwtl
or
push
movsl
push
ja
mov
cmp
xor
inc
int
sbb
stc
cld
adc
inc
inc
and
adc
or
aaa
sbb
je
out
push
dec
push
mov
add
fsubrl
push
mov
les
insb
push
jg
cs
xor
cmp
fadds
push
xor
mov
push
xor
ret
aas
cmp
sbb
and
adc
adc
add
jno,pt
loope
push
sub
mov
xorb
sub
sbb
les
add
arpl
ret
rcrb
lret
insl
and
dec
adcb
jg
or
pop
add
inc
adc
nop
ss
cmp
jne
xor
pop
or
cmp
jno
push
or
add
iret
cmp
ds
cld
xchg
mov
push
mov
jo
cmpsb
adc
add
aas
cmp
sbb
push
adc
fmuls
add
loop
repz
nop
outsb
int
insb
add
xchg
movsb
aad
adcb
push
repnz
push
inc
insb
sbb
cmp
out
inc
xor
pop
xchg
testb
cmp
mov
test
add
or
mov
mov
inc
adc
nop
adc
jnp
test
ljmp
xor
sub
test
mov
xchg
scas
lcall
sub
mov
insl
out
js
scas
sub
lret
popa
pop
ja
pop
add
sub
cwtl
mov
and
adc
sub
sub
adc
mov
cmp
loope
pop
adc
jns
imul
inc
push
aad
adc
test
test
popa
jl
add
popf
loopne
and
and
xchg
adc
dec
and
add
and
mov
lock
and
jbe
add
loopne
je
fisttpl
fs
insb
fisubrl
lods
and
cli
in
jo
add
mov
push
loopne
outsl
lods
xor
hlt
jmp
and
mov
xchg
xor
xor
or
mov
jge
push
enter
xor
fists
mov
sub
or
inc
mov
subb
mov
add
pusha
enter
orl
pusha
xor
dec
popa
dec
arpl
push
in
pop
inc
add
jg
xorb
mov
and
ret
jb
arpl
mov
faddl
and
fs
add
enter
stc
aad
sbb
xchg
inc
mov
notb
and
cmp
ljmp
sbb
lret
repnz
mov
mov
lea
shlb
push
push
repnz
adc
xor
add
addl
ljmp
cs
nop
dec
xor
in
pop
fwait
sbb
xor
inc
xchg
sub
dec
xchg
fmuls
sbb
xlat
in
adc
cltd
loope
ret
sub
arpl
test
push
dec
mov
imul
add
lds
lea
and
push
dec
mov
ficomps
mov
mov
jecxz
xchg
sub
or
mov
cmpsl
shlb
add
push
sub
push
or
pop
and
and
sub
sbb
fs
xchg
das
js
push
sub
add
mov
and
add
movsl
int3
dec
sbb
pop
addb
test
mov
pop
cmp
bound
pop
jge
jl
jg
cmp
inc
popa
add
sbbb
addr16
leave
inc
add
test
add
pop
cmp
add
add
mov
sbb
dec
pop
in
test
aaa
dec
xor
or
das
add
inc
dec
jmp
jge
xor
push
and
xchg
xchg
jns
cmpb
ror
aaa
movsl
or
cmp
pop
or
push
pop
and
inc
sbb
add
jecxz
adc
push
and
pop
iret
ret
dec
pop
push
nop
pop
aam
add
xchg
mov
lret
rol
insl
gs
cli
xor
pop
out
fwait
sub
ljmp
mov
push
sub
movzwl
push
imul
shrl
cmpsb
jmp
mov
jo
adc
fs
add
add
ret
nop
add
fistps
add
lret
loopne
jns
push
mov
es
test
cmp
std
dec
pop
sub
dec
outsl
testb
lahf
xor
sub
imul
lcall
sbb
loopne
invlpg
or
push
in
fiadds
sbb
or
lds
pop
ljmp
xchg
sub
xchg
lds
xor
aaa
add
push
adc
xchg
and
add
outsl
adc
jne
cmp
imul
inc
sub
dec
xchg
mov
aas
sub
mov
adc
sub
xor
pop
std
jmp
sbb
ljmp
jg
test
rclb
lock
inc
inc
dec
or
out
cmp
sub
sti
jl
mov
cmp
adc
and
push
jmp
inc
and
and
inc
sbb
mov
jns
ret
mov
cmpsl
arpl
faddl
test
pop
inc
ret
sbb
hlt
nop
push
imul
xchg
adc
mov
stos
rcr
movsb
xlat
cwtl
push
and
rcll
push
imul
test
jo
xor
sub
adcb
push
je
rcrl
jo
adc
shll
fs
pusha
cwtl
cmpsb
imul
les
leave
mov
mov
pop
push
inc
cmp
out
nop
pop
adc
rclb
sub
dec
fdivrl
insb
xor
mov
jnp
rcr
inc
test
or
scas
add
adc
jg
add
xor
jb
cmp
fs
mov
movsb
test
sahf
or
adc
lods
andl
fisubs
add
pop
dec
outsb
arpl
mov
popa
leave
push
push
jl
add
add
gs
or
test
mov
gs
aaa
popl
lcall
or
add
sub
shlb
fbstp
fwait
or
pop
adc
jg
add
lock
adc
ret
inc
cmp
stos
mov
xor
xchg
add
movsl
and
pop
and
inc
orb
andl
sub
stos
sub
or
mov
xor
pop
sti
xorl
movsb
ds
xor
aaa
or
mov
sbb
sbb
or
flds
or
and
push
add
fiaddl
mov
test
mov
loope
iret
inc
adc
repnz
or
dec
and
push
cmp
mov
insl
outsl
gs
in
mov
or
xchg
or
scas
fidivl
cmp
push
jg
push
push
push
sbb
xchg
leave
arpl
rcrl
sbb
push
or
mov
loope
inc
or
mov
vmovsd
xor
ja
dec
into
leave
xlat
mov
inc
imul
repnz
or
fidivl
js
sahf
push
sbb
push
push
adc
pop
or
dec
pop
in
inc
iret
iret
jg
adc
inc
add
or
test
jecxz
enter
push
ja
adc
in
adc
pop
add
mov
out
push
adc
lock
adc
lock
test
enter
adc
ret
push
push
cmpb
xchg
or
and
pop
xor
sub
sbb
testl
jo
dec
lcall
mov
or
gs
dec
adc
in
cmp
adc
cmpsb
adcb
data16
jecxz
jae
or
jns
adc
mov
jbe
jge
push
outsl
mov
mov
pushf
jecxz
insl
inc
pop
nop
add
les
prefetch
or
scas
dec
xchg
outsb
inc
or
decl
sbb
out
mov
das
mov
popa
sub
dec
or
jg
shrb
loope
fmul
insl
leave
int
pop
add
sub
xchg
nop
adc
out
sti
xchg
xorl
fwait
shlb
push
push
add
adc
adc
popa
jns
outsb
sub
sub
and
or
out
mov
out
mov
or
int
sub
fists
js
inc
mov
jb
xlat
enter
add
fnsave
add
lea
pop
fmull
jo
addr16
jl
test
jo
adc
andb
lret
and
push
push
gs
add
lea
subb
mov
mov
xor
and
mov
fsubs
popa
mov
inc
incb
in
insl
mov
loope
xchg
jg
jb
insl
popa
jb
or
or
sbb
push
lret
scas
push
outsb
pusha
popa
lahf
out
add
ror
in
jo
addb
in
fsubp
pop
and
or
pop
aas
inc
add
mov
sbb
negl
movb
xor
arpl
dec
imul
lds
or
adc
or
inc
fildl
rcr
xchg
cmpsl
fst
rolb
jno
jbe
les
add
das
sub
nop
xchg
fildll
adc
dec
jae
push
push
push
dec
push
add
or
cmc
arpl
add
xchg
fsubrl
or
dec
or
and
add
inc
clc
imul
and
push
dec
enter
call
repz
lcall
loope
in
aas
jmp
sbb
cmp
mov
js
push
inc
mov
fcmovne
push
les
inc
inc
cmp
inc
faddl
jns
stc
pop
inc
add
mov
adc
inc
add
shrb
cmp
or
and
in
ds
jle
inc
add
cmp
jo
inc
repnz
inc
fs
pop
mov
out
sbb
push
push
add
lods
pop
sahf
idiv
shll
jecxz
push
hlt
fs
lcall
jmp
addl
adc
pop
jmp
adc
adc
sbb
loope
mov
adc
push
popf
xchg
inc
add
ud2
clc
insl
xor
mov
add
sub
and
push
mov
sub
clc
and
or
mov
cs
js
dec
std
ljmp
ret
add
shl
push
icebp
mov
leave
or
sub
dec
repz
dec
in
inc
sub
int3
cmpsb
xor
push
fs
pushf
inc
dec
data16
roll
movsb
sub
dec
dec
push
push
lods
mov
dec
pop
clc
dec
call
out
out
push
pop
aas
push
dec
data16
pop
je
mov
mov
push
nop
xor
adc
xor
imul
jl
lods
push
push
aam
push
sub
out
insl
int
cwtl
push
aam
xchg
inc
jo
fwait
mov
add
mov
and
xlat
ss
mov
sub
mov
and
sub
sub
pop
inc
sbb
inc
adc
add
mov
adc
push
popa
jns
pop
sti
add
inc
out
int3
jmp
rolb
jl
xchg
mov
int3
jmp
movsb
lret
mov
push
pop
lret
push
add
nop
pushl
push
or
and
loopne
or
or
mov
push
cmpxchg
adc
popa
push
lock
movsl
add
or
shrl
imul
xchg
fcoml
add
or
sbb
out
adc
push
mulps
adc
push
sub
push
ret
cmp
xor
dec
inc
test
insb
clc
ret
imul
lods
sub
push
pop
xchg
lcall
repz
dec
fadds
or
adc
ret
idivl
adc
inc
sbb
add
in
dec
inc
loope
ds
and
sub
jne
push
cmp
push
and
mov
add
leave
adc
clc
nop
dec
clc
and
or
movsb
pop
pusha
xor
push
sbb
movsb
mov
je
fstps
push
and
dec
jnp
in
push
pusha
push
add
roll
sbb
f2xm1
push
sbb
cmpsl
stos
mov
pop
or
or
add
push
jae
inc
loope
lea
xor
inc
mov
mov
movl
or
or
inc
imul
leave
and
xor
xchg
xor
aam
test
insl
and
or
dec
pusha
and
fldl
enter
sub
lods
inc
outsb
push
inc
jmp
into
jmp
sbb
mov
cwtl
das
lods
sub
push
jno
cwtl
in
dec
sub
in
mov
jbe
ja
adc
sbb
or
addb
bound
aad
insb
fs
imull
inc
dec
loop
jnp
pusha
shlb
ret
and
push
ret
mov
iret
mov
xor
and
insl
push
lock
add
push
imul
bound
loop
or
dec
pop
enter
cmp
xor
sbb
xor
add
and
or
cmp
out
mov
push
int
es
cmp
out
push
sbb
adc
fwait
cmp
in
or
addb
gs
and
movsb
das
inc
push
outsl
enter
and
cmp
orl
jae
pusha
or
inc
jbe
jle
sub
mov
aad
and
movl
or
push
and
and
mov
fisttpl
mov
pop
xchg
aam
xadd
pop
in
add
push
dec
cmp
push
xor
dec
insb
lds
repnz
pop
out
nop
shlb
mov
mov
inc
stos
inc
and
and
push
and
mov
dec
or
jae
rolb
nop
and
cli
shlb
inc
mov
mov
repz
inc
mov
mov
rcll
inc
rcr
lock
stc
jns
mov
shlb
and
push
cwtl
dec
ja
mov
mov
inc
fistps
xchg
out
mov
adc
sbb
loope
test
dec
dec
push
mov
and
dec
dec
inc
rcl
dec
add
scas
or
dec
in
imul
and
in
or
inc
inc
inc
cwtl
fcomps
pusha
or
inc
push
addl
stos
xchg
test
inc
and
mov
loope
dec
push
mov
test
int
imul
sub
xor
adc
lcall
push
add
shl
push
add
push
dec
adc
mov
inc
push
push
cmc
imul
mov
sbbb
clc
add
icebp
in
ja
popa
dec
lcall
jns
adc
test
adc
sbb
pop
nop
cmp
xchg
cmpsb
dec
lock
sbb
jbe
shlb
mov
insb
clc
pop
lods
stc
pop
adc
pusha
push
cwtl
stc
aas
and
and
xchg
arpl
or
sub
inc
popl
or
mov
sbbb
mov
gs
pop
xor
pushf
bound
insb
push
mulb
out
pop
sub
adc
push
nop
and
sub
out
adc
push
mov
and
insl
loope
xchg
or
or
ss
xor
ficomps
mov
pop
clc
addr16
mov
cmovb
out
iret
cmp
pusha
in
pusha
push
pop
sbb
adc
sti
mov
push
enter
js
xchg
nop
je
scas
movsb
sti
lock
jb
xchg
sti
sti
inc
add
and
jo
test
repnz
lea
inc
add
xchg
cmp
push
mov
add
mov
mov
or
mov
mov
and
movsb
repz
jecxz
xlat
jne
cmpsl
out
jmp
push
je
mov
or
push
inc
arpl
outsl
popa
push
test
and
sahf
jae
lahf
ret
test
insb
xor
into
push
or
es
lret
mov
add
enter
sbb
xchg
je
dec
je
adc
and
sub
dec
pop
adc
dec
pusha
inc
stos
and
je
ja
push
mov
push
hlt
mov
and
sarb
std
xlat
inc
xchg
sbb
movsb
ss
push
sar
leave
mov
jno
cld
mov
dec
sbb
mov
sahf
aaa
fiaddl
cltd
inc
aam
js
sbbb
sub
fisubs
mov
inc
in
push
pop
insb
xchg
das
lcall
or
xchg
cwtl
sbb
dec
xor
push
jne
shlb
cmp
leave
ss
push
test
and
cmp
out
jnp
mov
dec
push
adc
xor
lahf
pop
inc
or
cmp
std
lahf
jecxz
mov
push
ret
mov
push
mov
push
ret
fstpt
daa
pushf
mov
or
enter
nop
rorb
movb
mov
dec
ret
mov
dec
jge
enter
insb
mov
js
loopne
mov
imul
ret
push
xor
call
lds
sti
test
jae
mov
and
addr16
flds
push
loopne
jcxz
rcll
lock
std
push
test
add
or
xchg
data16
or
adc
hlt
adc
xlat
adc
mov
add
sub
nop
mov
dec
ja
andb
mov
pusha
or
mov
sbbb
xor
add
add
xchg
and
aad
add
nop
sarb
add
popa
cmp
pop
push
aam
in
push
leave
lods
add
out
or
add
lret
pop
enter
rcrb
pop
pop
inc
push
or
fnsave
push
add
std
mov
cmp
mov
add
pop
add
mov
dec
pop
cld
mov
push
pop
mov
or
sarb
or
mov
addl
inc
add
or
push
idivl
data16
sub
pop
inc
add
inc
dec
je
mov
scas
std
and
nop
fistpll
push
fildl
pop
push
adc
or
inc
xchg
xchg
or
inc
les
shrb
das
pop
dec
arpl
mov
add
sbbb
sbb
in
mov
hlt
add
ja
sbb
sub
or
das
xor
rcll
sub
ud0
or
cmp
inc
sub
mov
xor
inc
popa
mov
sti
xor
inc
or
push
inc
add
fisubl
movsb
in
or
xor
push
hlt
inc
add
mov
dec
enter
push
lret
add
xchg
sub
dec
add
test
dec
pop
dec
sbb
sbb
mov
adc
pop
add
add
or
push
sub
jge
push
pushf
xor
push
or
mov
cmpb
push
cmp
cmp
je
jmp
sub
fldt
dec
push
sahf
add
nop
in
mov
movsb
add
adc
xchg
xchg
or
mov
das
rclb
adc
cmovs
stos
sbb
daa
xor
test
arpl
mov
mov
add
outsl
fmuls
xchg
or
fcoml
das
mov
loopne
lods
push
mov
pusha
adc
or
adc
push
lcall
mov
mov
push
sti
lahf
push
neg
jmp
arpl
lods
add
inc
je
cmp
imul
push
push
sub
xor
push
xchg
repnz
ret
push
mov
int3
pusha
pop
stos
push
gs
xchg
cmp
jmp
inc
fldt
lahf
inc
add
inc
pushf
hlt
pop
shlb
mov
cmp
adc
dec
pushf
sub
fcmovb
adc
push
fisttpl
cmc
lcall
mov
loope
sarb
dec
xchg
pop
in
in
subb
dec
push
ds
jne
and
loope
mov
cmpsb
adc
pop
xchg
sahf
pop
test
xorb
or
and
mov
mov
fcmovnb
push
inc
pop
inc
notl
ret
push
or
add
addr16
inc
or
dec
cmp
mov
mov
adc
or
jecxz
lea
mov
jge
popa
push
fs
mov
ffreep
jge
rclb
lods
pusha
push
jmp
or
lcall
sub
xor
add
add
dec
sub
adc
add
inc
and
decl
stc
jo
xchg
dec
mov
or
je
ss
rolb
vmovntps
adc
add
lea
popf
mov
ss
add
test
in
or
cmpsb
pop
and
lods
mov
cltd
daa
xchg
shll
in
aaa
add
shrl
dec
mov
or
shr
dec
loop
js
test
adc
mov
out
fs
sahf
push
push
and
sbb
sbb
dec
xor
mov
clc
inc
push
cmp
mov
mov
push
jne
adc
lea
xor
xlat
lahf
inc
mov
scas
add
test
sbb
mov
push
movsl
sub
je
mov
imulb
xchg
jbe
dec
inc
push
mov
dec
dec
sub
sub
adc
adc
dec
decb
add
adc
pushf
inc
dec
sbb
mov
mov
cli
add
xor
push
popa
jecxz
cmp
cltd
pop
jmp
pop
das
and
sbb
roll
cld
ljmp
dec
jmp
mov
jl
fdivs
mov
and
push
cmpl
add
xchg
jno
sbb
or
cmp
push
ja
add
and
testl
outsl
repnz
fwait
sbb
mov
lret
leave
jge
xor
adc
cmp
jnp
cmpl
mov
jb
cmp
ss
inc
ficompl
mov
or
mov
jp
sub
sbb
movsb
jmp
movsb
and
add
adc
mov
cmp
cltd
nop
dec
cmp
or
cmp
mov
pop
inc
sbb
adc
adc
pusha
cmpsb
fcmovnbe
jp
rorb
repz
cmpb
mov
push
xlat
and
push
mov
mov
push
mov
clc
sbb
jae
movsl
and
and
pop
inc
and
out
adc
or
ljmp
sub
out
ds
xchg
dec
dec
notb
cmc
mov
repnz
mov
pop
adc
add
lea
or
xor
jb
add
add
add
cmp
ret
mov
orb
je
xchg
dec
sbb
mov
adc
nop
inc
adc
fists
inc
inc
ljmp
or
jno
les
or
sub
or
push
sub
dec
pop
inc
stos
pusha
ss
aas
addr16
mov
jge
xchg
push
addr16
pushf
andl
push
lcall
dec
cmpsl
cmp
xchg
lea
add
outsb
push
xor
inc
jmp
mov
sub
mov
push
mov
inc
inc
cs
inc
outsb
push
nop
lock
inc
sub
sbb
cwtl
out
aaa
or
push
push
xchg
orb
aaa
int3
sub
pop
xor
cmp
aaa
inc
xchg
adc
jp
jg
mov
mov
pop
in
enter
and
movsl
mov
or
push
in
push
or
outsb
adc
repnz
aaa
cmovne
inc
add
lods
enter
adc
pusha
cmpl
enter
adc
push
adc
jg
je
mov
sbb
bswap
mov
loopne
or
or
dec
repnz
or
or
mov
pop
sbb
test
xchg
out
cmpb
movb
add
loope
pop
ds
cmpsl
shll
add
sti
enter
rolb
and
pop
dec
outsl
es
cmpsb
or
and
dec
mov
xchg
dec
inc
inc
ds
pop
mov
inc
sbb
dec
adc
aaa
rcrb
test
add
jno
jp
int3
mov
rcrl
scas
xor
ss
sbb
xchg
inc
cmp
or
cmp
add
or
jbe
repnz
or
ds
adc
mov
jge
mov
lea
push
mov
push
sbb
push
adc
insb
icebp
fcmovbe
addl
outsl
or
lds
sbb
cmp
sub
sbb
pop
mov
mov
jg
mov
nop
mov
inc
cmpl
or
sbb
addl
mov
test
jns
xor
inc
sti
jge
adc
dec
test
rclb
sbb
mov
stos
inc
sub
js
fstpl
rol
mov
loope
in
mov
pop
aas
or
add
movsl
add
roll
ds
and
mov
les
or
incl
scas
leave
adc
aam
scas
fidivs
movb
dec
je
sbb
movsb
or
arpl
add
fsts
popa
mov
cs
push
xchg
sub
add
mov
adc
pusha
jne
jg
or
mov
insl
push
gs
mov
ds
inc
mov
jo
push
sarb
inc
or
pop
daa
fs
ret
scas
test
je
xor
dec
push
adc
and
or
and
adc
enter
call
or
mov
add
push
add
sub
sub
nop
mov
pop
in
dec
adc
adc
xchg
push
test
nop
mov
mov
mov
xchg
rolb
aas
push
push
sbb
xlat
cmpsb
add
jecxz
and
sbb
mov
js
ja
jo
mov
jb
push
xchg
pop
fsubs
andb
sbb
and
and
cs
push
jns
add
test
dec
repnz
push
adc
sbb
je
dec
xor
std
inc
inc
or
jb
loopne
in
incb
xchg
push
repz
cmpsl
test
daa
push
or
jl
dec
mov
sbb
rcl
inc
push
pusha
mov
push
std
mov
ss
inc
jg
mov
cmc
mov
jnp
es
repz
testb
and
mov
sub
mov
cld
and
and
loopne
dec
and
and
test
je
mov
xor
lcall
inc
xchg
das
cmpl
daa
daa
inc
fstpt
adc
inc
insl
adc
iret
roll
sub
cmp
push
sub
add
xor
cmp
adc
add
ret
or
pop
push
xor
in
in
daa
mov
addb
ss
cmp
adc
sbb
xor
fimull
and
or
push
test
std
push
imul
sbbl
push
jl
movsb
pop
mov
out
mov
inc
pop
mov
lock
pop
dec
pusha
add
outsb
ljmp
sub
mov
xchg
jmp
cs
lcall
and
lea
cmp
sbb
lock
fs
and
dec
sar
pop
pop
lea
xchg
inc
dec
push
iret
push
push
inc
push
pusha
add
add
and
pop
shlb
fdivrs
in
cmp
pop
inc
lods
sub
inc
jmp
stos
jns
shl
or
push
xor
in
shl
fiaddl
sbb
ret
in
inc
fcoms
jb
mov
outsl
or
mov
arpl
xor
adc
test
rolb
dec
inc
mov
xlat
jno
scas
or
jnp
aas
sub
ja
add
mov
mov
lret
orb
or
jnp
test
pop
insl
dec
jp
jle
jne
gs
cmp
sbb
or
push
jnp
xchg
sbb
dec
push
popa
out
mov
sahf
lret
add
xlat
jo
pop
and
pusha
push
push
and
add
faddl
xchg
loop
push
pop
imul
push
jns
push
inc
in
movsb
xor
pop
jp
leave
insb
jo
xor
xor
mov
mov
xchg
scas
lods
cmp
mov
pop
jo
mov
jnp
or
adc
push
std
pop
subb
jl
daa
push
cmp
inc
pop
insb
jo
dec
sbb
out
inc
imul
insb
hlt
insl
mov
in
repnz
push
out
mov
shll
ja
mov
sahf
cmpb
and
push
adc
cmp
aam
pop
or
jb
push
insb
insb
and
inc
xorl
pusha
xor
or
add
mov
nop
cwtl
pop
inc
stos
gs
and
sub
inc
sbb
sub
dec
push
push
cmp
or
push
les
das
sub
pop
sar
call
pop
loopne
xor
icebp
add
dec
shl
cld
sbb
adc
jae
xchg
mov
adc
adc
xchg
mov
xchg
adc
arpl
push
adc
iret
out
cmpsl
sub
add
xorb
mov
stos
xlat
xor
icebp
pop
adc
inc
gs
xor
in
adc
popa
jmp
dec
addr16
and
ss
xor
mov
dec
in
cmpsb
imul
pop
xor
pop
jl
adc
fsubrs
sbb
xor
xchg
pop
movzbl
pop
and
and
or
push
imul
test
mov
pop
lahf
and
mov
jb
aas
cmpb
addr16
xor
sbbb
mov
js
dec
imul
les
pop
adc
xor
xor
out
mov
scas
adc
inc
sbb
push
les
enter
sub
xchg
cmpsl
cmp
add
cmp
xchg
or
leave
inc
push
mov
mov
mov
into
enter
int3
enter
sub
frstor
xchg
jne
mov
or
and
push
cmpl
sub
pop
inc
and
inc
or
mov
or
push
push
mov
ja
out
mov
or
inc
xor
nop
jle
cmp
bound
mov
xchg
clc
xor
dec
xchg
xorl
xlat
leave
lods
or
push
aad
add
pop
inc
push
andb
popa
jne
xchg
rolb
push
xchg
mov
cltd
cli
sbb
sub
dec
ljmp
pop
outsb
jl
cltd
nop
xchg
loopne
js
aaa
cmc
and
or
arpl
fld
scas
xchg
cmp
jmp
and
xlat
dec
pop
push
int3
fwait
rorb
cmpb
insb
rcr
add
or
movsl
test
sbb
and
mov
or
testb
pop
insb
push
adc
and
outsb
push
sbbb
xchg
mov
cmpsb
adc
pop
dec
fs
xchg
cmp
sub
dec
dec
xchg
push
cmc
and
addr16
popf
xor
add
add
inc
sub
outsl
push
sbb
cld
test
mov
and
movsl
and
cmc
fdivrs
les
pop
addb
inc
or
add
cwtl
test
imul
imul
inc
add
pop
add
sbb
hlt
cli
inc
jg
cmc
in
ret
fldl
push
jb
or
pop
sahf
sub
or
fwait
cmpsl
clc
sbb
sub
dec
je
daa
cmpb
sarb
cmp
jne
scas
dec
mov
sbb
test
jne
inc
sbb
xor
pop
pop
jns
push
mov
or
mov
xor
fwait
lret
jo
sahf
inc
mov
testb
enter
xchg
and
dec
lods
sub
cmc
js
mov
inc
test
mov
sti
mov
test
bound
mov
movsl
add
sbb
inc
bound
add
into
dec
add
or
inc
jecxz
ficoms
ret
mov
dec
jnp
cmp
or
adc
inc
dec
fstp
or
pop
add
hlt
cmc
es
inc
fisubs
fsubs
hlt
out
xchg
or
inc
jmp
in
jmp
mov
lret
xchg
jp
clc
push
test
sarb
mov
ds
mov
pop
enter
push
push
out
inc
ljmp
inc
nop
popl
sub
cld
daa
lock
fbstp
adc
push
adc
outsb
xchg
lea
adc
out
adc
or
or
or
leave
daa
mov
and
and
or
cmp
or
cwtl
push
das
adc
cmp
adc
test
jbe
sbb
pop
addr16
adc
ret
and
movsb
mov
dec
and
jno
sub
and
add
push
dec
rolb
in
cmp
or
jbe
lock
add
adc
sbb
sahf
lret
sub
push
sahf
je
nop
jne
mov
xor
xchg
dec
enter
sbb
sbb
add
sub
xorb
add
push
les
roll
ds
xor
add
mov
and
mov
add
adc
mov
and
cltd
pusha
mov
insb
push
fisubrl
jmp
lea
mov
push
sub
inc
add
fsts
pop
inc
xchg
leave
add
popa
pop
mov
es
out
movsb
add
fisttps
lret
or
fsts
mov
dec
add
enter
insb
sbb
sbb
dec
leave
adc
push
loopne
rcr
in
das
xorb
fdiv
std
in
inc
add
incl
jge
lret
pop
and
sub
push
adc
std
ret
rclb
adcl
jnp
add
and
dec
or
sbb
out
cwtl
push
or
dec
pop
and
mov
test
mov
add
lcall
enter
leave
sbb
sub
add
rcrb
mov
popa
xchg
outsl
or
push
in
jne
push
push
add
mov
shlb
sbb
add
das
xor
clc
push
xchg
push
and
mov
inc
or
sub
adc
cmp
add
mov
cmp
sbb
pop
out
cmp
or
int3
pop
or
pop
int3
jmp
inc
jno
shlb
icebp
inc
loopne
enter
aam
sarb
mov
adc
xor
adc
cmp
mov
icebp
xchg
or
lea
cmp
addb
and
arpl
mov
ror
mov
add
sbb
jecxz
addb
adc
cmpl
pop
sub
push
pop
loope
adc
jne
cmp
add
into
pop
test
and
add
add
mov
cmp
add
inc
enter
jno
dec
mov
push
add
stc
xchg
clc
stc
push
aam
adc
or
pushf
inc
rolb
sbb
mov
cmp
cld
adc
push
data16
pushf
dec
mov
daa
pop
test
or
pop
roll
test
fldt
xor
mov
imul
mov
push
or
je
jbe
add
sub
push
push
sbb
xor
out
scas
or
jo
jno
cmp
inc
pmaxub
xchg
or
cltd
int3
pop
add
das
add
xor
fwait
mov
cmpb
and
cs
in
push
mov
add
sbb
movsl
add
arpl
arpl
push
les
adc
into
cmpb
and
dec
pop
adc
loopne
jnp
and
pop
mov
inc
vmovaps
xchg
daa
add
out
mov
cmp
test
lds
fidivrs
mov
mov
mov
mov
int3
inc
int3
ss
xchg
mov
test
push
push
sub
ret
nop
add
xor
sbb
lock
test
lods
jo
or
popa
push
jbe
pushf
cmp
daa
cmpb
fdivs
jno
add
add
xchg
mov
mov
cld
jne
jmp
andb
clc
jle
sbb
adc
loope
sbb
je
leave
mov
imul
or
mov
or
lods
and
and
pop
add
mov
clc
je
cmp
push
and
add
cmp
jmp
int
push
and
aaa
lar
sahf
popf
sub
add
fs
jmp
xor
adc
movsl
pop
and
push
andl
jl
pusha
or
test
int3
loope
mov
es
insl
out
pop
xor
mov
rcrb
nop
add
push
adc
addr16
or
out
and
sbb
cmp
fisttpl
mov
dec
fisubrs
cmp
pop
or
inc
push
jo
orb
mov
mov
jnp
push
ret
in
jne
lock
xchg
jne
aad
push
ja
and
mov
ret
xor
xor
pop
fildll
cmpsb
test
or
loop
add
pop
fldenv
mov
pop
and
jg
mov
and
mov
mov
jmp
mov
ret
shl
xor
bound
int3
jnp
pop
and
xchg
dec
adc
jo
dec
movsb
shld
add
fimuls
push
aad
lock
push
cmp
cltd
xor
add
mov
jnp
cmp
outsl
adc
movsl
add
aad
cmp
dec
sub
xchg
notl
sbb
lret
or
push
cmp
push
jns
jmp
rorb
mov
pop
insb
mov
push
fisttps
push
std
loope
shlb
loope
jne
pop
dec
cmp
rclb
aam
frstor
sub
subl
imulb
out
adc
ret
sti
rol
addl
mov
sbb
call
push
add
pop
add
sahf
repz
and
add
dec
jmp
dec
or
sub
and
pop
or
push
dec
adc
push
jl
inc
mov
fcoml
outsl
mov
xor
lods
xchg
stc
push
inc
xchg
rorl
mov
test
std
xchg
mov
test
lods
adc
push
std
rcll
sbb
cld
mov
add
dec
hlt
adc
lds
lock
dec
pop
iret
ds
mov
sub
sbb
mov
loopne
lods
sbb
call
add
pop
adc
mov
mov
cmp
ja
inc
xchg
cmp
stos
push
leave
rclb
test
adc
push
enter
rcrb
jns
rclb
repnz
fld
mulb
add
jne
xor
jmp
fistpll
mov
xor
add
xchg
push
mov
adcb
or
push
fisubs
cmc
fdivs
sub
sbb
sub
add
xchg
mov
xchg
shlb
roll
add
call
sbb
pop
sub
add
jmp
sub
ret
and
adc
leave
rclb
sbb
sub
or
mov
sbb
jecxz
mov
mov
movsb
mov
cwtl
cmpxchg8b
dec
movsb
fdivs
leave
jo
pop
push
popa
rcrb
sbbl
add
repz
adc
dec
outsb
test
sub
icebp
xorb
rorb
aaa
push
lods
popa
xor
jmp
loope
test
xchg
push
cli
insl
or
sarb
or
xchg
xchg
add
mov
inc
sub
js
fisubl
mov
jo
xor
push
xorl
movsb
das
add
inc
dec
push
outsb
enter
dec
call
add
daa
push
insl
cmp
repz
mov
sub
inc
add
xchg
pusha
add
test
dec
iret
test
rorb
and
sub
faddl
ja
push
loopne
in
sub
dec
pop
or
adc
lret
mov
lret
adc
sbb
add
imul
shrb
and
sti
pop
xchg
mov
nop
jmp
cmp
in
pop
test
or
movsl
pop
incl
idiv
dec
and
lcall
data16
out
push
push
pop
or
repnz
and
decl
pop
add
or
and
pushf
push
testl
cld
popa
push
sub
inc
cmpl
jne
test
mov
pop
lret
push
imul
cmp
adc
les
mov
stos
test
vmwrite
cmp
jo
xor
sbb
mov
lds
jne
test
or
adc
mov
ja
iret
or
inc
inc
jne
inc
adc
rcll
inc
loopne
xchg
mov
pop
popa
call
sbb
mov
es
mov
sub
test
rorb
mov
and
cs
cs
ret
jmp
movsb
pop
add
mov
add
subb
cmp
addb
push
cwtl
or
or
nop
adc
or
icebp
in
stos
fs
dec
cmp
dec
pop
sbb
insl
in
les
popf
sub
or
fs
dec
dec
rcrb
jbe
or
sahf
sub
push
decl
or
nop
jne
stos
mov
pop
cltd
js
push
push
dec
rcrb
js
or
fs
mov
out
jl
enter
loope
push
inc
jo
cmp
dec
add
dec
push
and
mov
or
popa
fisttpl
dec
pop
jmp
and
in
sub
adc
sbb
xor
or
mov
mov
xchg
or
test
sbb
push
push
push
mov
nop
or
sub
mov
dec
jbe
into
pop
loope
es
testb
mov
and
lret
xchg
mov
icebp
sub
xchg
sahf
or
outsb
add
sub
bound
adc
or
shlb
push
push
push
mov
inc
push
insb
mov
cmp
icebp
and
and
or
add
outsb
xchg
popa
or
cwtl
push
test
test
and
mov
or
xchg
fwait
daa
sub
aaa
cmpl
fistpl
hlt
sbb
or
sbb
sub
repz
dec
dec
mov
add
lock
cmc
sbb
push
mov
dec
inc
push
and
roll
loope
sbb
aas
push
add
mov
adc
xor
or
lea
std
movsl
pop
add
iret
je
cmp
je
sbb
dec
cmpb
je
xor
loop
pop
mov
mov
cmp
mov
xor
movsl
xchg
sbb
mov
or
roll
push
and
inc
dec
call
mov
mov
mov
push
push
roll
dec
les
mov
add
add
stc
adc
dec
mov
fs
push
add
push
scas
mov
mov
cmp
mov
or
nop
aam
dec
icebp
cmp
inc
inc
cmp
inc
sbbl
sbb
sub
cmp
addl
mov
inc
push
imul
sysenter
sub
outsl
xchg
mov
lods
xchg
jb
pop
xchg
inc
push
hlt
xchg
mov
xchg
inc
dec
fmuls
adc
sbb
push
pop
or
xchg
ret
faddl
push
cmp
in
mov
mov
add
arpl
cmp
loope
inc
pop
adc
or
shlb
mov
popf
insl
dec
push
icebp
push
sub
fs
xor
outsb
add
lock
fcoms
sbb
inc
in
movsb
in
cmp
hlt
in
insb
cwtl
cmc
decb
adc
lcall
add
or
mov
and
jns
add
or
mov
mov
movl
push
data16
add
and
incl
in
je
shlb
fbld
stos
and
add
test
push
push
clc
mov
mov
jne
lds
icebp
mov
nop
enter
or
add
push
movsb
sbb
add
fwait
mov
cmp
or
pop
outsl
pusha
xor
add
push
aaa
movsl
and
popa
and
adc
cmp
test
add
pop
xor
xchg
out
jne
fwait
add
cmp
mov
ja
and
inc
add
and
stos
cmp
mov
adcl
lea
adc
adcb
sbb
add
sbb
add
inc
xor
loope
adc
rcr
fcom
xor
lret
or
mov
shrl
pop
shll
mov
inc
mov
repnz
loopne
jae
in
mov
mov
rcll
loope
adc
clc
or
enter
pop
fs
fstpt
call
ret
pop
dec
sub
add
inc
cmp
rolb
in
jae
js
inc
or
dec
xchg
add
inc
dec
cmpsl
enter
xchg
lods
sbb
ds
sbb
and
add
xchg
stos
and
hlt
sbb
scas
push
push
mov
dec
cmp
push
sbb
mov
xor
inc
sbb
in
adc
jbe
adc
sbbl
adc
push
or
nop
mov
pop
xchg
jae
push
adc
jmp
dec
mov
pop
das
je
pusha
bound
push
shlb
test
fdivl
mov
inc
lcall
or
adc
testl
jno
or
jno
lock
pushf
xchg
imulb
jmp
adc
mov
xor
or
test
jmp
pop
sbb
mov
iret
movb
mov
push
xchg
add
xchg
adc
sbb
enter
cmp
pushf
ret
jno
popa
pop
daa
add
daa
stc
cmp
arpl
into
inc
aaa
add
sbbb
xor
je
sbb
insb
xchg
test
arpl
pop
ret
lock
sti
sbb
dec
out
les
and
or
arpl
scas
inc
insb
add
xor
xor
fdivrs
add
or
or
leave
mov
pop
mov
lahf
pop
lods
push
add
fildl
add
test
iret
inc
xchg
add
fidivrs
je
outsl
adc
xchg
xchg
adc
shrb
addr16
adc
hlt
sub
sbb
dec
inc
and
or
jmp
fisttpll
test
xor
adc
cmp
cmp
sbb
xor
idivl
push
imul
daa
fcoml
stos
mov
mov
in
xor
dec
cmc
mov
xchg
fidivl
add
jmp
sub
and
cltd
testb
sub
addb
stc
sbb
pusha
and
mov
or
sub
test
sub
sub
and
or
or
out
mov
adc
lock
or
mov
mov
inc
je
dec
sub
jne
test
adc
in
in
add
or
sub
push
pop
and
sbb
mov
inc
xchg
adc
icebp
stos
pcmpeqw
add
sub
sbb
cltd
subb
pop
int3
jge
sub
mov
scas
mov
ret
push
incl
dec
dec
dec
mov
add
jns
or
loopne
popa
decl
insb
push
and
sbb
scas
push
inc
dec
cmp
loopne
rclb
ss
gs
and
mov
lcall
jle
xor
mov
and
inc
mov
lods
add
add
jmp
jl
add
push
adc
sub
addr16
dec
xchg
cmc
cmp
add
pop
xchg
inc
mov
inc
sbb
int
or
mov
orl
or
je
fs
and
push
inc
dec
pop
jecxz
cmp
arpl
sbb
pop
clc
sub
sbb
je
sbb
and
push
adc
std
add
adcl
mov
adc
inc
pushf
add
in
xor
ret
rcrl
xor
and
push
int
add
les
jne
dec
lea
sbb
pop
dec
sar
cltd
shr
and
movsl
xor
xchg
arpl
je
xor
push
imul
sub
add
inc
push
pop
arpl
shr
or
dec
push
mov
test
cmpsl
test
pop
ljmp
insb
dec
or
es
cmp
pusha
push
cli
or
jo
imul
jne
sub
sub
loopne
and
xor
pop
dec
add
push
or
xor
leave
nop
mov
mov
cmp
inc
popf
in
loopne
clc
jge
pop
bound
fdivrl
mov
lret
ss
jp
faddl
cmp
mov
adc
inc
sub
inc
push
fs
xchg
shrl
rorb
cli
lods
add
pop
inc
inc
sub
and
sub
jmp
inc
gs
scas
mov
dec
mov
add
scas
repz
or
or
loopne
sub
or
arpl
std
xchg
push
add
cs
fwait
jmp
pop
scas
pop
daa
dec
icebp
andb
ret
push
cwtl
mov
mov
inc
and
fdivrp
or
sub
xchg
rorl
movsb
cmp
mov
adc
mov
or
mov
stos
les
pop
les
inc
push
inc
sub
xchg
push
xor
fcoms
sub
cmpb
popf
dec
xlat
pop
or
orb
inc
inc
push
add
sbb
inc
fs
mov
push
cld
add
push
push
lds
and
imul
dec
jp
outsl
push
mov
pushf
xchg
mov
push
dec
mov
inc
pop
je
test
adc
mov
addr16
imul
pop
mov
sub
lret
or
and
in
add
daa
mov
mov
mov
sbb
jne
and
and
xor
pop
inc
or
test
add
jne
fiadds
xor
mov
sbb
adc
add
lcall
pushf
out
sub
xchg
sub
add
in
clc
cmp
xor
or
push
xchg
fildl
jo
outsb
mov
scas
push
por
sub
js
cltd
in
test
fmull
jmp
ret
jle
sbb
push
jo
cmpb
mov
int
jo
push
mov
addl
push
leave
stc
pop
inc
xchg
jp
mov
and
pop
ja
push
inc
push
ret
loopne
in
ret
sub
and
shlb
aas
je
or
pop
add
arpl
loopne
cwtl
jno
dec
leave
and
xchg
int
push
gs
mov
sbb
or
mov
call
sub
pop
fs
pusha
and
jge
js
int
sbb
pop
push
stos
pop
lcall
ret
adc
inc
sub
gs
out
movsl
into
nop
in
sub
add
add
jmp
cmp
jnp
adc
push
jb
not
movl
dec
ret
in
xchg
inc
pop
es
fs
add
cltd
add
mov
fdivs
and
pop
shrl
jbe
subl
mov
xor
sbb
lcall
andb
ljmp
inc
inc
sbb
mov
inc
lods
sbb
lahf
mov
dec
lock
daa
add
inc
testl
inc
into
inc
pop
mov
pop
in
jmp
int
popa
cmp
mov
inc
xor
mov
add
adc
lea
xor
add
lock
movsl
test
dec
lock
insb
dec
and
insb
rcl
and
adc
pop
in
dec
xor
xor
and
xchg
lock
pop
xlat
fcmovnu
je
jnp
insb
inc
shl
sub
cmp
and
js
jp
psrld
push
cmpsl
pop
add
jo
mov
xor
sub
and
or
cwtl
sbb
inc
es
adc
add
jno
stos
xchg
adc
cmp
rclb
mov
xor
push
fldenv
movsl
rolb
stos
ds
imul
test
or
insb
dec
inc
enter
lock
dec
leave
sbbl
out
addb
lock
dec
repnz
fdivrs
sub
arpl
popf
add
movsl
rorb
ret
inc
pop
mov
lods
xor
int3
inc
xchg
ret
test
inc
xor
ret
shlb
jp
push
stos
dec
lds
inc
es
push
out
push
orb
or
insl
and
mov
push
daa
adc
sbb
lods
mov
pop
ss
add
mov
adc
push
sub
push
orl
stos
add
xor
cwtl
push
pop
cli
or
das
fnsave
ret
xlat
popa
cmp
mov
sub
pop
sbb
test
loopne
sub
mov
je
testl
push
add
data16
push
lret
mov
es
roll
push
jmp
cmpb
xor
push
pop
add
xchg
cmp
xchg
push
in
ret
in
push
jns
loope
cmp
outsb
mov
dec
call
sub
aas
je
push
dec
sbb
fwait
idivl
loopne
mov
mov
mov
sarb
ret
mov
mov
sti
ficoml
xor
shlb
ja
ret
sbb
adc
inc
outsb
lahf
imul
xchg
iret
js
addb
in
push
je
cmpsl
daa
jge
sub
decl
xchg
or
or
sbb
cld
push
mov
inc
loope
out
cmp
pushf
push
popa
xlat
rol
jl
or
movb
sbb
cli
hlt
sub
lea
jno
xlat
jne
pop
or
xchg
and
dec
add
nop
push
mov
imul
ljmp
adc
addr16
pop
fisttpll
stos
test
push
and
add
pop
loope
xorl
shlb
mov
pop
sub
push
and
jge
je
inc
cmp
pop
fnstcw
test
mov
nop
push
aas
mov
add
insb
jmp
insb
das
in
shlb
int3
mov
adc
add
lahf
inc
mov
mov
sbb
mov
or
sub
add
mov
inc
xchg
inc
mov
adc
mov
pop
jnp
or
push
sub
loop
mov
or
and
cld
cld
dec
push
jns
cld
inc
add
cltd
nop
add
cld
cld
cld
stc
or
out
gs
popf
or
xlat
fdivrl
inc
mov
divl
xchg
or
dec
cltd
inc
mov
sbb
push
or
push
dec
js
jo
jmp
hlt
orl
test
aaa
das
dec
in
push
cltd
lahf
cmp
in
in
adc
fadds
mov
lods
and
sti
mov
inc
sub
jg
pop
adc
push
xchg
push
mov
pusha
mov
and
sbb
xor
pop
pop
andb
movsb
daa
add
sbb
pop
enter
xchg
mov
push
push
mov
mov
jno
or
cmp
push
and
lahf
add
repnz
pushf
xchg
mov
mov
inc
xorb
xchg
mov
or
xchg
pop
repnz
jae
dec
xor
xor
and
and
test
xlat
mov
mov
dec
mov
mov
mov
mov
adc
mov
xchg
push
xor
ret
pop
enter
dec
dec
dec
push
filds
pop
pop
sbb
xchg
cli
jne
push
push
xchg
dec
fldt
dec
inc
in
bound
movsb
dec
pop
push
aaa
push
pop
lcall
add
insl
sbb
imul
jo
xchg
movsl
inc
fwait
inc
push
pop
iret
jne
and
inc
cmpsl
aad
dec
mov
nop
inc
mov
dec
movsb
sbb
dec
ss
enter
push
and
jmp
and
add
test
leave
cs
xchg
mov
call
ds
pusha
mov
xor
out
jl
or
jle
subl
adc
aas
dec
jbe
pop
adc
inc
sub
sbb
jne
out
and
sbb
pop
pop
cmp
mov
clc
xchg
clc
or
jmp
pop
pushf
rorb
push
xor
or
fisubs
movlps
or
mov
nop
insb
dec
sbb
or
mov
mov
jo
mov
pop
enter
iret
into
mov
fstl
push
les
sub
push
ret
and
iret
cmp
xchg
or
fcmovne
orl
jl
or
out
cmp
sti
test
test
lret
ret
cmp
sub
std
rorb
and
or
push
mov
movsl
dec
push
mov
sbb
mov
int3
dec
ror
testb
imul
insb
adc
scas
shrl
cmp
cmpl
mov
sbb
shlb
orl
clc
rorb
jne
out
jno
roll
insb
shll
orb
xchg
mov
into
sub
fbstp
pushf
pusha
rol
sti
and
sub
mov
ret
xchg
xchg
cwtl
mov
pop
xchg
ret
lods
gs
or
mov
adc
jg
shlb
dec
popa
jns
jne
jae
sub
js
insb
sbb
inc
mov
pop
cmp
dec
sbb
mov
pop
or
cmpsl
test
cmp
cmp
push
std
mov
out
mov
adc
add
sub
loop
push
xor
pop
sbb
add
pop
outsl
or
add
cmp
adc
adc
mov
add
adc
out
test
or
inc
cmpsl
cmpsl
inc
movsb
subb
orl
daa
inc
and
inc
push
cmc
es
popa
addr16
xchg
call
add
ljmp
fs
dec
cld
idivb
and
cs
add
dec
imul
lods
mov
enter
das
push
mov
mov
shrl
sbb
sbb
ret
and
sub
add
sbb
es
dec
sbb
popf
push
mov
icebp
les
sub
test
sbb
daa
dec
incl
nop
imul
iret
and
mov
out
dec
inc
mov
gs
push
insb
popa
enter
rclb
or
icebp
or
mov
xchg
inc
mov
pop
outsl
ds
mov
mov
push
testb
inc
add
push
push
in
lock
dec
testl
xor
sub
cmp
stc
test
shr
adc
dec
mov
lcall
adc
jbe
sub
nop
test
adc
aaa
xchg
dec
jae
xor
das
cmp
sub
lods
sarb
add
push
push
lods
out
mov
jne
mov
clc
hlt
push
pop
in
xchg
xchg
pop
movsl
add
adc
and
sbb
cs
lock
push
lock
cmp
add
inc
je
sbb
sbb
xchg
lcall
mov
ss
mov
in
or
fwait
push
xchg
inc
subb
push
dec
cmp
ljmp
add
sub
xchg
out
ja
pop
mov
jne
mov
or
cld
pop
cmp
inc
or
xor
lock
daa
pop
add
sbb
imul
lock
stc
xor
clc
hlt
and
xor
es
rolb
jbe
mov
pop
sub
mov
dec
and
xchg
sbb
adc
xor
jmp
fldl
rcrl
add
cmp
dec
mov
pop
rolb
cmpsb
dec
mov
out
xor
pop
hlt
je
clc
sbb
adc
iret
aam
sbb
popa
cmp
das
push
mov
subl
fmuls
pusha
and
aaa
sub
outsb
nop
pusha
pop
pop
insl
ffreep
cmp
add
fistl
jmp
inc
jo
test
sbb
pop
pop
lea
push
lods
xor
xlat
inc
or
mov
lock
or
popa
add
fisttpll
arpl
bswap
int
popa
clc
je,pn
add
xchg
cmp
imul
xor
sar
xlat
shrb
jae
ss
sbb
lret
xchg
or
mov
add
push
jp
ja
sbb
idivl
mov
in
outsl
adc
dec
movsb
sbb
das
sub
lock
mov
adc
fcoml
xchg
mov
test
addb
cltd
mov
inc
imul
lds
sub
cmp
cmp
pop
jne
mov
adcb
xor
mov
cmp
mov
test
and
insb
add
or
adc
mov
push
mov
sbb
pop
shlb
nop
mov
icebp
push
inc
test
enter
push
pop
mov
xor
and
jne
jns
mov
xchg
jno
xchg
movsl
adc
pop
shlb
push
jbe
iret
add
cmp
test
int3
adc
mulb
mov
push
mov
enter
je
jo
loope
inc
js
cmp
leave
je
insl
pop
adc
sbb
loopne
aaa
jmp
jl
jecxz
cmc
jmp
in
mov
pop
dec
jle
ret
fcom
movsb
push
js
and
inc
test
leave
or
imul
cld
testb
popa
pop
pop
push
jb
mov
in
adc
dec
dec
and
scas
jb
ret
sub
sbbl
hlt
or
and
and
add
add
rcr
mov
rolb
push
pop
fstp
in
call
xor
xchg
mov
nop
movb
and
je
test
adc
movl
mov
inc
js
test
test
les
and
or
rcrb
add
mov
js
and
fldcw
mov
add
lret
test
lea
jo
sbb
inc
ror
xchg
jecxz
arpl
sub
pop
jo
or
push
sahf
inc
mov
lea
daa
cmp
in
cs
mov
inc
sti
dec
lea
and
sarl
jo
xchg
sti
lock
inc
pop
push
pushw
push
enter
adc
xchg
iret
dec
dec
dec
inc
dec
dec
xor
and
inc
push
and
sbb
mov
shlb
mov
aam
sub
or
or
push
or
jb
enter
or
into
dec
sbb
cmp
push
lret
push
fadd
xchg
sbbb
mov
cmp
push
push
jl
add
icebp
add
cmpb
and
cmp
je
loope
or
push
cltd
adc
cwtl
cltd
call
data16
dec
and
xor
jge
xchg
xchg
add
and
xchg
rcrl
sbb
xchg
es
bound
sbb
es
movsb
int
orb
xor
addb
mov
idivl
sbb
sub
sbb
push
and
sbb
xchg
mov
aam
mov
add
or
and
xlat
lods
dec
add
repz
push
sbb
outsl
pop
arpl
fwait
mov
or
sub
ja
insl
fcoms
repnz
pop
push
cmpsb
and
mov
inc
add
sub
call
add
xor
inc
aam
xorl
inc
dec
cmpsl
add
cltd
inc
adc
test
cmp
xchg
sbb
dec
jle
push
insb
inc
js
xor
cmp
pusha
or
out
sahf
gs
push
xlat
jae
call
dec
cmp
add
mov
clc
inc
pop
je
xor
lods
xor
js
out
inc
inc
jp
mov
or
sti
adc
sbb
sbb
imul
xlat
inc
fcoms
stos
test
xchg
repz
add
xor
pushf
cmp
mov
addl
das
inc
pop
push
xchg
add
outsl
dec
push
shrb
cmp
popa
add
push
adc
mov
bound
inc
mov
xor
aad
add
movsb
push
inc
testl
mov
adc
xchg
ja
xor
push
mov
inc
inc
push
fs
ss
or
std
comiss
xor
sub
jle
addb
lea
jne
test
inc
push
mov
lock
lret
add
sub
xor
adc
sbb
orb
cmp
aam
popf
dec
and
jbe
xor
repz
mov
daa
fs
add
inc
ljmp
inc
mov
push
add
and
xor
test
pusha
test
inc
inc
add
lahf
inc
xor
dec
sub
mov
xlat
jbe
push
test
push
push
and
pusha
dec
ja
adc
movb
cmp
in
fsubrl
sub
xorl
mov
add
jnp
mov
xlat
xor
jo
xchg
outsb
jmp
adc
lods
xchg
jg
add
out
push
jg
adc
sbb
or
incl
jnp
int
xchg
mov
fistpl
adcb
cmpl
push
andb
divl
pop
push
sbb
call
jns
inc
add
push
in
mov
add
test
out
adc
imul
sub
lcall
sbb
pop
jb
jl
and
add
in
adc
pop
push
repnz
int3
lcall
daa
add
fcomps
shl
andb
pop
xchg
sub
dec
stos
sub
mov
dec
mov
sbb
mov
pop
xor
mov
cwtl
cwtl
mov
xor
rolb
in
in
or
mov
add
test
xchg
lea
adc
mov
imul
ret
lret
out
fiaddl
fs
sbb
and
test
inc
adc
inc
inc
outsb
or
les
outsb
and
inc
insl
adc
dec
push
lods
imul
mov
mov
mov
add
sbb
test
int
or
test
sub
nop
popf
inc
xor
or
mov
bound
ficomps
mov
xchg
dec
fcomps
inc
inc
cmp
sbb
mov
outsb
inc
cmp
adc
mov
cld
inc
sti
jne
add
repz
and
dec
xor
push
and
js
pop
push
push
outsl
insl
sub
add
xor
das
test
or
rclb
and
cmp
out
mov
cmp
lea
sti
and
ljmp
pop
sub
add
mov
pop
pop
dec
das
ljmp
int3
cmp
adc
out
pop
add
jae
xor
adc
xor
fdivrs
or
dec
or
or
push
fsubl
fcmovnb
cmp
mov
imul
and
jbe
or
jge
dec
andl
lock
ret
push
add
subl
and
int
inc
jnp
or
shll
das
jl
jno
stc
xor
mov
xchg
push
fildll
arpl
xchg
xor
mov
sbb
push
xor
adc
jmp
or
xchg
es
and
arpl
mov
ja
pop
nop
out
test
adc
mov
xchg
addr16
insb
je
dec
test
shlb
jg
pop
cmp
movb
sbb
rorl
stos
inc
sub
or
addr16
out
dec
in
pop
push
and
inc
inc
in
and
je
push
push
adc
jae
in
push
inc
push
xchg
push
movsl
dec
xchg
insb
and
mov
cld
jmp
mov
xchg
lods
push
mov
bound
add
pop
test
pop
enter
cmp
add
rcll
and
cwtl
add
push
adc
and
rcr
iret
notb
dec
adc
dec
cmp
outsb
js
mov
andb
out
push
and
dec
jge
sbb
inc
sub
js
test
out
pop
test
adc
adc
or
xchg
scas
fdivrl
mov
and
push
cmp
dec
add
call
dec
mov
mov
cmp
jne
mov
imul
test
cmp
pushf
enter
rclb
pop
cmp
jne
mov
xchg
subl
icebp
add
in
cmpb
adc
push
and
lahf
addb
dec
jb
mov
or
mov
and
inc
mov
pop
dec
mov
sbb
test
mov
shll
sbb
or
das
ret
pusha
inc
mov
jmp
mov
adcb
outsl
sarl
push
jnp
mov
call
sbb
imul
cli
fildll
test
nop
fdivrs
popf
xchg
fdivl
outsb
test
add
add
and
mov
addr16
sbb
enter
addb
push
jge
cmp
and
into
iret
adc
mov
insl
aad
xchg
and
cmp
add
movsl
loopne
push
rorb
add
mov
loopne
jg
jbe
xchg
fcoms
mov
mov
aam
inc
daa
cmp
arpl
popa
and
aam
jmp
adc
pop
lock
outsb
pop
jmp
in
sub
jp
imul
movsb
xor
orl
add
sbb
pop
xchg
xlat
mov
rclb
dec
dec
lea
dec
mov
rolb
ja
mov
add
stos
rcr
sarb
loope
jl
fnstsw
shll
cmp
adc
dec
adc
in
adc
xchg
xor
sub
jno
fldl
adc
add
mov
mov
inc
nop
xchg
ret
sbb
lea
das
loop
aad
data16
in
sub
push
rcl
insb
loopne
pop
cmpl
sbb
rorl
sti
mov
int3
mov
aas
or
inc
jno
test
into
push
cmp
ja
test
cmpb
mov
mov
dec
in
mov
testb
add
push
and
lea
xchg
mov
push
add
push
add
lock
mov
mov
mov
movsl
add
push
mov
push
and
pop
loopne
shlb
ss
aad
daa
sbb
iret
stos
xchg
jne
movsb
rolb
pop
cmp
lods
xor
fcomps
and
cs
xor
sub
pop
adc
dec
cltd
push
outsl
rclb
shrb
or
hlt
adc
loop
je
xchg
and
sub
add
cld
sub
ss
dec
ret
je
movl
pop
ljmp
test
xchg
pop
push
nopl
inc
les
lret
add
inc
dec
push
mov
inc
stos
add
add
pop
es
arpl
popf
lock
dec
in
mov
push
pusha
lret
add
faddl
inc
nop
inc
movsb
mov
pop
pusha
pop
mov
orl
lret
adc
mov
push
enter
enter
hlt
in
adc
lahf
dec
add
lret
push
clc
test
adc
setno
xchg
add
addb
or
add
and
outsl
sbb
sbb
outsl
iret
iret
xchg
leave
and
sbb
lret
push
or
jb
fmull
ret
and
mov
dec
daa
xchg
in
xchg
inc
clc
add
xchg
addl
pop
insb
or
aaa
sbb
pop
mov
stos
add
jne
pop
and
in
pop
xchg
jle
cmp
dec
mov
cmp
test
testl
add
xor
lock
adc
fstl
add
pusha
lret
roll
lcall
mov
inc
ret
pop
push
outsl
cmp
jae
mov
add
mov
fdivrl
jge
dec
jo
mov
sub
pop
cmc
push
pusha
outsb
push
push
xor
jg
bound
fs
lea
das
cmpsb
les
push
and
nop
gs
pushf
or
or
enter
in
xchg
inc
fstpt
hlt
mov
sbb
adcl
sbb
repz
push
add
push
inc
dec
push
xchg
adc
mov
lock
mov
sbb
cmp
in
or
and
lods
loopne
mov
xor
pusha
push
dec
xchg
rcrl
fisubrs
jmp
jae
mov
sbb
xchg
and
adc
nop
dec
sub
ret
sub
sbb
xor
popa
mov
rclb
fsubs
or
xor
out
clc
push
jmp
outsb
add
wbinvd
movsl
adc
push
cmp
jne
mov
add
add
cs
dec
adc
mov
lock
test
mov
aad
xchg
mov
sub
popa
and
test
push
rolb
out
add
nop
int3
hlt
mov
sbb
in
add
sti
pop
or
popa
and
mov
and
mov
and
mov
dec
mov
ds
and
shrb
cwtl
mov
fadd
leave
arpl
pop
sub
lds
mov
dec
cmp
sub
sbb
pop
rdmsr
adc
inc
aaa
jecxz
xchg
push
cli
pop
shr
rorb
push
loopne
or
sbb
and
xor
cmp
scas
dec
cmp
inc
enter
xchg
inc
push
mov
aas
popf
add
hlt
pop
push
out
add
mov
add
cmp
pushf
push
data16
mov
pushf
lods
or
jne
dec
mov
je
aam
push
inc
pop
mov
insb
icebp
push
addl
xchg
stos
popa
add
and
inc
cmc
cs
andl
inc
std
aam
xor
pop
jmp
test
mov
xchg
sbb
nop
adc
jne
shlb
inc
sbb
fs
das
movl
inc
jl
roll
filds
dec
sbb
sub
fldl
pop
cmpsb
push
adc
je
rclb
bound
pop
int
jo
sub
or
add
loopne
cwtl
sub
push
or
int3
aam
popa
inc
adc
mov
gs
mov
cwtl
stc
or
jmp
pusha
jne
mov
lods
adc
aas
push
add
xor
inc
pop
mov
inc
push
add
sub
sub
js
lods
addb
pop
mov
jo
jge
nop
and
stc
add
mov
push
add
jne
and
mov
adc
add
ret
mov
xchg
adc
shl
mov
add
xchg
and
lods
rorb
mov
in
rclb
sub
add
or
mov
dec
and
sub
or
pop
je
mov
adcb
inc
mov
pop
repz
mov
jp
testl
subb
fmuls
push
cs
jp
daa
mov
adcb
addb
mov
sbb
add
sub
adc
add
fiadds
arpl
or
ja
xor
or
jne
mov
push
xchg
push
add
and
nop
add
mov
pop
sar
dec
sbb
jge
mov
sub
xor
jmpw
mov
xchg
add
rolb
loop
adc
adc
sub
and
mov
cltd
idivl
loopne
in
insl
popa
pusha
push
push
fwait
mov
pop
add
pushf
lock
addl
inc
call
popa
imul
faddp
and
lea
mov
xchg
mov
outsb
push
push
and
je
lea
and
add
jo
jmp
cmpb
mov
cmp
sahf
clc
shlb
aaa
in
pushf
and
mov
gs
adc
jmp
addl
inc
pop
lods
push
push
sbb
popa
mov
cmp
loope
pop
jle
push
add
je
movsb
xchg
nop
in
jl
pushf
inc
inc
cld
push
es
cmpsl
jo
or
adc
aaa
pop
or
arpl
inc
inc
cmp
movsb
push
stc
test
push
mov
adc
or
repz
test
pop
or
add
enter
adc
xchg
add
repz
pop
xchg
daa
cwtl
or
add
int
mov
pop
push
sub
addr16
int3
out
sub
sub
inc
dec
lret
enter
daa
jae
addr16
dec
and
jmp
jo,pn
mov
mov
sbb
aad
lret
negl
pop
pop
sarl
sbb
xchg
sub
js
in
repz
lea
iret
int
jnp
mov
test
enter
adc
jo
xor
repz
adc
mov
or
icebp
paddq
mov
add
lea
push
and
jecxz
or
cmpb
ss
jne
fistps
pop
adc
push
xchg
xchg
xor
adc
popa
push
aad
cmpsb
mov
pop
xchg
push
cwtl
jbe
add
adc
push
stc
push
mov
imul
imul
sub
pop
lods
or
sbb
sbb
pop
dec
call
adc
fsubr
pop
or
ds
cmc
sub
cwtl
scas
loope
dec
jb
bound
insb
in
mov
adc
shlb
add
or
imul
jns
lea
aam
and
outsl
leave
fistpll
push
mov
xchg
jmp
outsl
push
aam
and
mov
sbb
push
cwtl
push
adc
loopne
dec
daa
scas
movsl
inc
test
inc
or
add
push
cs
js
xchg
adc
and
jbe
sbb
push
pop
cmpsb
xchg
sub
test
or
push
dec
inc
jae
add
pop
dec
adc
std
outsb
inc
cmp
je
test
aaa
lds
jne
push
gs
adc
lods
je
add
scas
xchg
add
mov
nop
xchg
sub
mov
add
imul
lret
pop
add
lock
js
inc
shrl
push
es
lods
loope
js
and
cwtl
xor
ret
cld
add
inc
bound
popaw
or
imul
ret
movb
popa
adc
test
mov
stos
shll
mov
daa
mov
cmp
sub
add
je
pop
adc
data16
int3
push
mov
xchg
add
mov
sbb
add
jle
inc
add
dec
add
jno
icebp
and
cmp
popa
jb
mul
xor
add
pop
aaa
popl
and
sbb
mov
ds
mov
dec
adc
je
xchg
imul
add
sub
loop
dec
sub
icebp
popf
fmul
data16
jns
xchg
adc
in
xor
aam
inc
movsb
mov
inc
movsb
cvtdq2ps
pop
jg
jle
pushf
mov
inc
enter
push
nop
add
add
test
or
dec
jmp
xchg
mov
test
mov
dec
rclb
xlat
cltd
sub
push
dec
popa
or
nop
data16
int3
adc
adc
iret
sti
je
xchg
or
jecxz
insb
push
jns
adc
xchg
divl
cmpsb
xchg
xor
adc
sub
sub
push
inc
xchg
lock
jo
push
jae
dec
cmpsl
pop
and
movsb
cmpsb
adc
stc
jno
rorl
push
mov
mov
sbb
sbb
push
mov
iret
sbb
sub
push
mov
int
or
xor
xor
andl
mov
cmpsb
movsl
jo
pop
dec
test
iret
dec
test
xchg
outsl
leave
add
inc
in
mov
mov
or
adc
pop
adc
or
or
js
or
or
js
ss
mov
jae
fsubs
nop
mov
mov
dec
xor
and
xchg
ret
int3
xor
push
and
push
stos
and
outsl
jae
nop
ffreep
rolb
and
das
xor
jge
push
lahf
das
sub
shll
cmpsl
cmp
push
and
push
dec
inc
js
imul
lods
fadds
inc
std
xchg
mov
lods
iret
or
sbb
cltd
dec
notl
dec
outsb
and
iret
je
sub
orb
adc
push
inc
push
mov
movsb
adc
scas
inc
jbe
dec
sub
mov
sub
movsb
mov
jnp
adc
and
scas
inc
fadds
movsb
xor
fdivr
popf
push
sti
add
sbb
std
jmp
push
loopne
loop
inc
push
sbb
in
inc
push
sbb
call
jmp
fs
inc
in
out
out
fs
inc
push
rcl
rclb
aam
inc
push
sbb
fadds
sbb
fcmovu
fcompl
fs
inc
fstp
fbld
push
rol
nop
inc
push
sbb
lds
sbb
enter
nop
leave
lret
sbb
int
iret
fs
inc
push
mov
mov
inc
push
sbb
sbb
mov
mov
fs
inc
mov
inc
push
mov
push
sbb
sbb
test
sbb
stos
stos
lods
sbb
lods
scas
scas
fs
inc
push
nop
xchg
xchg
nop
inc
push
sbb
sbb
cwtl
push
sbb
lcall
popf
sahf
lahf
xchg
ret
fs
sbb
mov
and
in
adc
pusha
arpl
insb
add
daa
or
out
sbb
call
push
push
xor
jne
jg
xchg
mov
enter
or
add
mov
or
test
aaa
in
fldcw
add
push
push
je
jae
fnsave
inc
dec
sub
loop
movsb
add
outsl
sub
testl
in
filds
mov
ret
xor
sbb
leave
sarb
adc
add
add
nop
or
add
nop
or
nop
push
pop
leave
nop
or
or
or
nop
or
or
nop
or
nop
push
bswap
nop
or
adc
adc
nop
or
adc
nop
or
nop
push
pop
leave
nop
or
sbb
sbb
nop
or
sbb
nop
or
nop
push
pop
leave
nop
or
and
and
nop
or
and
nop
or
nop
es
leave
nop
or
sub
sub
nop
or
sub
nop
or
nop
cs
leave
nop
or
xor
xor
nop
or
xor
nop
or
nop
ss
leave
nop
or
cmp
cmp
nop
or
cmp
nop
or
nop
ds
leave
nop
or
inc
inc
inc
or
nop
or
inc
inc
nop
or
nop
inc
inc
leave
nop
or
dec
dec
dec
or
nop
or
dec
dec
nop
or
nop
dec
dec
leave
nop
or
push
push
push
or
nop
or
push
push
nop
or
nop
push
push
leave
nop
or
pop
pop
pop
or
nop
or
pop
pop
nop
or
nop
pop
pop
leave
nop
or
pusha
popa
bound
nop
or
fs
or
nop
addr16
nop
or
push
nop
or
insb
insl
test
nop
outsb
outsl
icebp
ss
push
push
inc
inc
push
jne
sub
add
punpckldq
cmp
jae
inc
mov
add
je
pop
fbstp
jo
jge
mov
push
sub
outsl
xchg
push
shll
jae
cmp
cmc
jo
push
lret
pop
outsb
xor
insb
into
repnz
add
xchg
push
pop
jb
jbe
pcmpgtd
mov
adc
push
jae
xlat
into
mov
push
dec
push
je
out
jae
nop
cmc
push
aas
pop
mov
cmp
push
pop
movsb
adc
or
adc
outsb
and
push
pop
xor
in
and
xor
daa
dec
add
add
mov
lock
mov
dec
jae
cmp
or
leave
push
pop
push
outsb
ss
mov
dec
push
add
sub
add
or
jae
in
idiv
arpl
push
pop
inc
jns
das
add
ss
push
scas
das
sub
popa
das
iret
or
into
mov
insb
mov
cmp
pop
push
lahf
cwtl
loopne
sbb
inc
daa
fcmove
adc
cmpsl
rolb
add
cmp
push
inc
jne
or
test
daa
push
cmp
jp
ja
imul
in
xchg
jns
das
lods
pop
sbbb
mov
mov
imulb
jo
jne
das
dec
outsl
ret
pusha
push
jnp
push
dec
sub
pop
out
dec
mov
aas
dec
outsl
imul
sub
ss
push
cmp
inc
dec
roll
test
inc
mov
cmp
mov
adc
push
loope
mov
pop
imul
adc
scas
pop
push
lcall
xlat
ret
gs
lahf
popf
scas
push
or
sbb
fnsave
and
or
sub
dec
clc
fdivrs
push
mov
das
rol
cs
sarl
xor
inc
xor
push
mov
or
inc
das
inc
sbb
or
xlat
insl
jae
jecxz
sub
insb
or
or
mov
pop
bound
icebp
cmp
inc
fs
hlt
aaa
idivb
dec
icebp
mov
xor
in
fs
push
push
arpl
xchg
inc
pop
iret
in
cwtl
sbb
push
push
imul
jo
fcmovbe
insl
and
mov
addl
xchg
add
mov
or
andl
aam
jle
test
mov
pop
inc
push
insl
mov
jb
jno
or
lcall
repnz
shlb
jno
mov
mov
add
cld
inc
mov
xor
mov
test
xor
mov
rol
inc
sti
aam
cmpb
add
test
std
mov
mov
dec
movsb
rol
fxch
scas
fbld
fs
rol
xor
es
xor
ror
xchg
ret
roll
adc
push
shll
inc
push
into
mov
stos
fmuls
pop
inc
pusha
cmpsl
or
push
adc
mull
data16
xor
sbb
or
sbb
ret
pop
pop
mov
and
xlat
data16
dec
push
mov
ret
test
mov
in
mov
jl
xor
inc
dec
lods
dec
das
lret
nop
dec
xor
xor
xorl
lea
ret
inc
fadd
inc
xchg
sbbl
add
pop
pushf
xchg
scas
mov
mov
test
mov
fmul
inc
fiaddl
mov
and
pop
pop
enter
imul
pusha
or
mov
inc
xchg
lds
nop
stos
in
fadd
sbb
push
push
loope
mov
in
xlat
rclb
or
movsl
nop
mov
xor
popa
add
imul
xchg
insb
cwtl
fcmovnbe
shr
adc
push
movsl
leave
cmp
insl
call
test
nop
lock
out
sub
jl
push
push
cltd
jns
xchg
mov
xor
push
mov
lret
ret
enter
mov
mov
push
and
sub
and
pusha
lds
sbb
lahf
xchg
xor
and
sub
movl
xlat
inc
stos
enter
scas
push
add
test
add
addr16
and
in
sbb
gs
add
movsb
dec
and
adc
loop
push
and
or
aam
mov
push
xchg
std
xor
aaa
xor
sbb
call
and
xlat
lret
inc
movb
pusha
les
ja
leave
ss
stc
pop
push
adc
dec
insb
mov
dec
cmovs
pop
mov
pop
leave
jnp
cmpsb
imul
mov
repnz
adc
shll
jp
dec
shll
loopne
lcall
sbb
xor
cwtl
cmpsb
imul
push
loope
add
inc
xchg
mov
jno
mov
mov
cwtl
je
dec
push
in
xchg
call
in
rorl
subb
push
inc
and
and
dec
xchg
movsb
jb
mov
jb
adc
in
xor
and
xor
mov
imulb
cmp
gs
cmp
push
repnz
jl
jo
outsb
push
fstps
mov
fdivl
imul
imul
sbb
fmuls
sbb
outsb
cmpsl
sub
jl
mov
sub
lds
popa
mov
sub
in
inc
cld
mov
leave
lret
movsl
leave
ret
cmpsl
aas
or
inc
jle
jbe
mov
inc
cmpsl
or
lahf
pop
daa
gs
add
pushf
mov
mov
push
dec
add
shlb
and
sub
pushf
sub
lock
popf
inc
jecxz
clc
and
push
in
in
jge
sbb
or
and
xchg
in
iret
xchg
ret
in
mov
add
movsl
decl
dec
bound
push
int
mov
lcall
push
int
cmp
int
jb
es
int
and
int
ja,pt
or
lock
inc
repz
push
pop
fisttpll
in
adc
in
outsb
add
and
mov
in
cs
aas
push
iret
inc
add
sub
data16
mov
pop
sbb
test
fwait
loopne
sarb
xchg
xlat
insb
lods
imul
pushf
jle
push
aam
lods
jns
mov
insb
aam
aad
mov
xor
insl
push
sbb
jbe
pop
push
sub
push
cmp
fdivr
inc
fimull
sbb
dec
or
cs
inc
sub
adc
iret
inc
add
mov
mov
test
or
lock
push
in
ficompl
mov
cmp
xchg
xor
movb
sbb
xchg
iret
insb
mov
dec
jo
push
testl
movsb
and
cs
mov
shrb
mov
or
popf
ds
test
es
lret
and
mov
add
and
lock
scas
test
dec
lret
jae
jecxz
test
xchg
lea
xchg
sub
and
rcll
add
lock
dec
push
push
mov
or
xchg
xor
test
loope
ljmp
inc
cmp
bnd
ret
push
roll
les
in
lahf
adc
or
dec
mov
sbb
or
das
xor
adc
mov
repz
insl
or
push
push
dec
sbb
jge
push
mov
shl
rcrl
fwait
and
dec
imul
in
in
hlt
add
push
push
mov
push
popa
outsl
ljmp
push
jno
inc
sbb
push
jno
subb
add
and
xchg
mov
add
add
mov
mov
leave
pop
mov
fadds
xchg
pop
mov
add
sub
inc
push
nop
test
pushf
or
adc
mov
or
out
cmp
lods
dec
and
pop
mov
loopne
push
push
mov
pop
xchg
sbb
movsb
test
test
sbb
enter
or
rcll
or
out
add
movsl
call
pop
mov
into
sarb
or
daa
ljmp
xor
cmpb
mov
stc
inc
jle
cmpl
push
mov
insb
fs
andl
pushl
imull
mov
pop
pop
out
fs
dec
push
ret
popa
cmc
test
pop
push
add
or
enter
push
in
and
std
and
cld
rcr
outsb
xchg
push
ret
les
pusha
xor
mov
push
sbb
cmp
fisubrl
xchg
outsb
adcl
mov
fsubr
inc
xchg
xchg
or
outsb
pop
neg
clc
sbb
adc
in
pop
mov
xor
mov
dec
pop
pusha
jo
ss
cmpsb
in
iret
rolb
sub
add
inc
or
push
pop
pop
jo
mov
insl
sbb
jne
push
fisubrl
dec
mov
xchg
addb
mov
push
mov
inc
xchg
pop
lahf
mov
add
mov
rolb
filds
adc
xlat
pop
popa
xchg
bound
mov
adc
inc
or
imul
in
dec
pop
fimuls
xor
or
or
daa
pushf
jb
mov
inc
inc
les
jns
xlat
lock
jo
adc
cs
mov
mov
mov
inc
add
bound
inc
sub
leave
push
add
lods
nop
in
loopne
dec
repz
jbe
in
jae
lret
pop
insb
dec
pop
je
push
jle
xchg
mov
mov
and
lods
pop
int3
or
fs
push
lock
mov
or
dec
inc
jb
jmp
les
sub
adc
in
imul
movsb
dec
add
fsts
push
sub
scas
inc
add
outsl
dec
mov
dec
mov
inc
adc
das
push
mov
imul
sbb
fistl
movsl
xchg
rdmsr
inc
or
mov
out
dec
inc
sti
fldt
push
fldcw
imul
sbbb
fidivl
nop
dec
inc
mov
or
push
je
mov
and
adc
mov
test
hlt
out
aas
test
aas
pop
inc
xor
js
add
mov
mov
movl
out
push
cmp
fistl
hlt
leave
jnp
and
lock
cmp
pop
lock
repnz
in
add
movsl
add
arpl
js
or
and
outsl
sbb
mov
mov
cld
popa
ljmp
or
or
ds
pop
call
cs
out
mov
es
dec
pushf
inc
push
adc
push
fsub
outsb
mov
and
das
push
mov
jae
nop
pop
mov
add
inc
jl
cld
pop
and
jno
jmp
mov
and
jmp
nop
outsl
pop
push
rorb
pop
jp
inc
scas
or
or
pop
gs
nop
or
jecxz
or
and
add
jo
inc
leave
cmp
sbb
adc
test
jo
add
push
pop
adc
jo
sub
inc
dec
jne
shrb
movb
sub
add
stc
sub
pop
cmp
xchg
pop
jmp
aad
nop
push
enter
fisubs
dec
lahf
jbe
fsubrp
aaa
test
je
mov
test
fistpll
push
fistpll
mov
scas
dec
pop
jo
dec
insl
mov
js
push
add
int3
insb
mov
xchg
fdivs
mov
push
jne
add
dec
outsl
jns
sarl
push
gs
daa
inc
jb
add
dec
jnp
dec
inc
bound
jo
push
mov
and
pop
imul
gs
movsb
xchg
jl
dec
arpl
jbe
or
adc
add
filds
test
add
outsl
or
cmp
sbb
pop
pop
and
sbb
inc
insb
outsl
bound
sarl
pavgb
push
gs
xchg
push
cmp
or
or
jb
dec
push
inc
outsb
adc
sbb
pop
or
inc
lea
insb
xor
add
xchg
dec
or
push
in
sbb
mov
lahf
test
outsl
vpopcntw
out
lahf
sub
loope
pop
add
jne
dec
pop
dec
scas
mov
sub
enter
rclb
pushf
dec
das
fldenv
loop
mov
movsl
loop
aam
mov
popa
mov
jns
fcoms
sub
loop
fdivrs
jmp
and
pop
int3
add
and
sbb
jmp
mov
add
nop
pop
test
lods
les
adc
and
sbb
xor
and
add
lret
das
ja
addl
clc
pop
sbb
pop
call
sbb
sbb
es
adc
sub
xchg
into
dec
xchg
jne
test
inc
sbb
adc
push
pop
cmp
mov
je
orl
adc
mov
inc
xor
add
mov
in
cmpb
mov
test
push
loopne
mov
jb
iret
sub
mov
jmp
sbb
shlb
pop
das
inc
and
pop
jmp
xor
dec
push
jns
mov
sbb
adc
movsl
pusha
popf
in
inc
cwtl
outsb
ljmp
repz
das
sub
cmp
test
ret
ficomps
jmp
adc
jne
or
xchg
sub
push
xlat
or
xchg
dec
adc
sti
test
enter
call
aam
mov
bound
pop
and
and
dec
inc
out
push
arpl
daa
mov
in
test
sub
lahf
sub
mov
repz
add
fdivrs
loopne
sub
enter
xor
mov
fmulp
and
mov
mov
or
pop
in
dec
stos
push
or
inc
into
in
add
and
das
cmp
inc
inc
das
dec
inc
push
jnp
inc
sahf
inc
push
push
pop
ja
dec
pop
and
lahf
push
inc
xchg
xchg
mov
push
dec
push
lods
cmpsl
xor
inc
inc
sub
xor
neg
and
dec
outsl
add
cmp
imul
lock
mov
out
xchg
add
pop
out
sub
mov
out
dec
xor
out
dec
std
gs
inc
xor
dec
jle
cmp
scas
push
and
pop
inc
dec
mov
jmp
and
xchg
sub
inc
mov
in
lods
mov
push
jmp
push
fnsave
scas
pop
cs
ret
mov
lock
arpl
add
es
sbb
or
sbb
andb
jg
jbe
add
inc
movsl
add
decl
dec
in
fildll
sub
jle
mov
cmp
jne
mov
stos
pop
sbb
test
scas
mov
dec
pop
fistpl
nop
push
es
lcall
les
enter
cmp
and
hlt
arpl
pop
int3
mov
incb
je
inc
rorb
mov
cmpsl
inc
mov
xor
nop
call
xchg
or
jle
xchg
add
popf
cmp
int3
lea
es
in
je
jl
pop
jmp
sahf
ss
rorb
add
push
push
out
push
dec
ds
inc
mov
xchg
xchg
cltd
test
push
rorb
in
rolb
inc
jmp
dec
stos
lahf
inc
adc
inc
push
push
inc
aam
nop
scas
cmp
sbb
inc
add
subl
insb
push
jno
adc
out
incb
xor
xor
jbe
pop
rdpmc
add
dec
repnz
jno
shrb
js
in
ljmp
jbe
jmp
add
pop
lcall
in
cmp
mov
movsl
addl
mov
lods
aaa
push
pop
xor
push
push
icebp
xor
xor
dec
lcall
fbstp
js
add
and
xorb
cmp
xor
aam
lcall
fmulp
xor
cmp
or
add
fs
outsb
pop
or
and
pop
jnp
dec
lea
loope
insb
test
stc
gs
sub
push
je
loope
loopne
inc
jecxz
hlt
pop
xor
or
push
adc
xchg
sarl
in
loope
subb
inc
mov
add
ret
test
add
or
nop
jne
mov
or
jne
fidivs
sub
adc
inc
addr16
pop
les
ffreep
add
movsb
and
pop
shlb
in
and
push
xlat
aam
in
inc
jns
xchg
aam
in
iret
or
test
mov
add
xchg
in
push
in
xor
ret
aad
pop
cmpsl
es
movsb
sbb
gs
mov
pop
cmp
mov
jecxz
ss
or
jo
nop
mov
dec
xlat
or
outsb
sub
mov
jns
adc
pop
cmp
push
cmp
or
mov
xor
dec
xchg
aad
and
lods
jge
lea
or
loopne
imul
in
shrb
nop
jg
push
outsl
jb
push
pusha
add
or
subl
movsb
outsb
or
push
inc
adc
sbb
repz
inc
add
add
rorb
adc
outsb
out
mov
adc
mov
lds
rorl
cmp
or
nop
xlat
orb
cmp
mov
push
push
mov
repnz
jno
lcall
addb
in
push
pop
sub
out
sub
mov
add
jmp
les
xor
xchg
inc
xor
sub
sbb
lea
mov
xchg
dec
out
lock
loope
mov
or
bound
add
scas
add
sbbl
int3
mov
xchg
add
stos
js
add
dec
jb
push
sub
or
mov
add
add
icebp
adc
xor
das
loope
ret
inc
fadds
popa
cld
icebp
test
dec
mov
push
bnd
fwait
popa
push
out
test
mov
inc
inc
jo
icebp
inc
xor
cwtl
rcrb
jb
sti
push
pop
jb
daa
inc
xlat
dec
add
mov
lods
push
lock
jne
repnz
adc
xchg
hlt
pop
imul
pop
adc
loop
push
push
mov
icebp
je
in
aam
push
mov
xor
and
xchg
xor
addr16
aaa
sbb
dec
mov
cmp
adc
cmp
fiadds
sub
inc
sarl
arpl
mov
dec
dec
decl
lods
andb
fs
sbb
repz
subps
mov
lcall
insb
jne
insb
xchg
outsl
dec
and
inc
or
dec
lea
add
sbb
or
pop
or
enter
sbb
arpl
cwtl
fldt
hlt
cltd
mov
pop
sub
sub
and
adc
pop
gs
jbe
pop
xor
jne
cmp
push
andl
mov
sbb
ja
push
sub
dec
ds
das
pop
arpl
clc
inc
sub
leave
dec
std
inc
pop
cld
sbb
lods
inc
cwtl
push
pop
cli
inc
call
mov
in
shrl
cmc
sub
push
cmpb
lods
add
xor
cmpb
mov
out
fs
dec
sub
add
dec
enter
inc
movsb
mov
add
mov
sbb
icebp
or
and
divl
in
and
adc
insl
cmp
movl
aam
movsl
adc
xor
cmovb
cs
sub
xor
and
call
adc
or
dec
ljmp
push
mov
dec
testl
insb
enter
pop
jnp
addr16
lods
cmp
and
sbb
ret
rorb
nop
pop
lods
pop
add
clc
pop
mov
lret
nop
lds
cmp
adcb
adc
push
rolb
out
mov
mov
or
push
loope
mov
push
ss
pop
daa
and
inc
loopne
ficoml
push
or
in
fst
xchg
fs
sbb
sbb
fdivrs
cmp
pop
mov
icebp
repz
or
fs
push
arpl
sbbb
or
into
or
fstl
sub
bound
push
inc
push
mov
add
rcrl
jecxz
stc
jns
fsubr
sbb
bound
and
out
aaa
adc
int
arpl
inc
es
push
icebp
adc
movsb
xchg
notl
pop
pop
or
dec
cmp
cmp
lcall
jno
divb
imul
inc
pop
add
cmp
xchg
and
push
inc
in
jno
dec
dec
xor
pushf
sbbl
or
sbb
jnp
adc
or
outsb
or
iret
test
or
call
jmp
sti
inc
jns
sbb
pusha
adc
inc
xor
xchg
sub
inc
movsl
sub
push
sub
and
cmpsb
loope
dec
jne
in
mov
and
idivl
mov
cmpl
mov
xchg
jae
pusha
sub
mov
mov
in
js
xor
lahf
sti
imul
mov
sub
mov
inc
pusha
mov
leave
cmp
fadds
sub
adc
shll
inc
movsl
or
inc
cmp
lea
or
xor
mov
fistl
adc
mov
add
ret
addr16
adc
push
movl
adc
mov
or
or
leave
sbb
loop
sbb
add
dec
outsl
xchg
xlat
in
std
inc
aam
lret
cmpb
xor
pop
sbb
push
mov
add
dec
mov
jne
mov
les
lret
out
in
lret
jp
aam
cmp
and
add
sbb
pop
jne
dec
jo
or
stos
movsb
pop
enter
adc
or
mov
lret
sub
mov
sub
push
push
js
enter
mov
in
adc
pushl
add
xor
and
jb
stos
push
adc
sub
and
sub
sbb
or
jge
rcll
push
pop
sbb
and
rclb
push
push
sarb
sbb
add
jno
mov
movl
fildl
xlat
negl
or
out
lock
mov
cmpsb
data16
inc
mov
inc
mov
test
loopne
sbb
cmp
cli
sbb
jne
sub
jg
dec
mov
mov
fadds
inc
aam
pop
addb
test
push
fistl
call
fsts
pop
leave
stos
mov
mov
lahf
insb
mov
dec
add
ds
push
sub
or
mov
dec
mov
pop
out
adc
add
incl
inc
loopne
inc
sbb
inc
loopne
or
push
sbb
xor
add
jo
push
inc
xchg
xchg
fidivrl
pop
add
add
xchg
xchg
or
adc
push
push
xor
pusha
cmovne
add
mov
push
and
push
jl
lcall
rolb
push
mov
and
lahf
nop
inc
pop
cmp
xor
sub
sbb
fwait
add
add
inc
test
or
ret
inc
add
je
add
sub
insb
mov
repz
pop
sub
enter
pop
aam
int
pop
or
and
pop
or
sub
orl
test
imul
mov
add
ret
and
xor
add
xor
xchg
pop
adc
dec
jecxz
leave
dec
jb
or
scas
xor
inc
aaa
lahf
push
mov
jg
cmp
call
sbb
push
das
pop
inc
popa
adc
cltd
adc
xchg
popf
xor
pop
imul
arpl
insb
loopne
or
jle
loope
out
adc
insl
push
inc
in
pop
pop
inc
insl
cmp
xor
inc
inc
and
mov
daa
dec
sbbl
sbb
mov
rolb
sub
pop
cwtl
pop
test
jns
fnstcw
out
int3
add
cmp
jle
push
into
cld
sbb
xchg
dec
mov
mov
pop
sub
lock
or
aas
call
xchg
test
sbb
mov
call
sub
call
fisubl
add
push
sbb
bound
dec
xchg
mov
ss
or
inc
enter
sbb
testb
cmp
pop
or
sbb
loopne
adc
nop
or
insb
sahf
mov
mov
sub
mov
pop
add
in
push
dec
mov
add
or
pop
pop
loopne
mov
aaa
xchg
mov
or
jnp
push
out
pop
sub
sbb
xor
mov
add
cmp
inc
popa
sbb
xchg
add
push
or
inc
adc
jbe
cmp
aaa
arpl
mov
mov
and
inc
cltd
roll
test
inc
jecxz
sbb
rcr
inc
andb
add
add
xchg
lea
mov
or
test
fcmovb
iretw
mov
push
loop
sub
or
sbb
push
jb
lods
shlb
popa
pop
or
inc
das
arpl
sbb
fmuls
out
mov
sub
push
or
jo
in
push
and
call
lahf
jbe
xchg
int3
sbb
sti
in
iret
add
mov
xchg
xor
adc
mov
pop
test
sub
cmp
inc
in
arpl
push
mov
pushl
adc
push
dec
ds
or
jnp
inc
xor
cmpsl
push
aam
add
jns
stc
and
enter
mov
add
fdiv
adc
and
add
push
aad
or
inc
daa
and
cmp
add
int
in
lret
ret
sub
jnp
xchg
dec
leave
imul
jne
pop
or
and
adc
jg
dec
ret
inc
inc
xchg
fildl
adc
add
mov
cmpxchg
loop
test
rolb
loop
cmp
shll
pop
fsts
in
test
fwait
shrb
leave
test
or
xchg
mov
addl
cmp
es
sti
and
cmp
inc
sbb
pusha
add
push
lret
das
pop
aam
hlt
sbb
rolb
sub
or
or
int
decl
fs
or
inc
addr16
decl
lock
pusha
xlat
xchg
cmp
int3
push
dec
rol
xor
arpl
pop
aaa
cmp
adc
xor
adc
and
scas
les
faddl
and
push
lea
insb
insl
mov
jae
loop
int
push
xlat
adc
test
push
fimull
lods
dec
mov
ret
cmp
pop
rorl
dec
inc
add
out
jo
imul
mov
ret
scas
adc
sub
stos
xchg
add
and
inc
fldenv
into
push
dec
jmp
mov
add
jo
pop
dec
pop
lods
jo
add
imul
je
inc
aaa
or
push
sub
mov
dec
lcall
jl
or
pusha
or
popa
imul
inc
push
inc
sbb
mov
jo
inc
je
inc
je
js
sub
mov
pop
jl
add
inc
adc
loopne
cmp
add
test
xor
inc
je
movsl
adc
sbb
popf
adc
loopne
inc
inc
inc
in
in
rclb
jno
mov
add
icebp
add
xchg
add
mov
outsb
sub
mov
mov
pop
ret
jmp
lea
dec
xchg
xor
fimull
and
xor
out
dec
dec
adc
stc
push
adc
imul
xor
sub
mov
lea
jno
or
sbb
imul
add
fists
add
push
fcmovnb
mov
sub
push
outsb
fmulp
nop
mov
das
push
jmp
and
call
push
rcrb
add
xchg
iret
in
outsl
in
dec
repnz
cs
loopne
jb
cmp
test
and
xchg
push
stos
xor
ret
pop
js
xchg
inc
pop
push
in
jg
pop
xor
mov
xchg
sub
sub
and
enter
arpl
inc
push
cs
sub
jnp
popa
adc
mov
jae
add
in
jno
and
jno
pop
add
mov
fwait
cld
fs
adc
mov
inc
push
cmpl
sbb
dec
insb
fucomi
and
pop
repnz
in
aaa
cwtl
xor
sub
cmp
cmp
jne
mov
sbb
test
push
lds
dec
js
mov
mov
fs
pop
push
adc
lock
lock
mov
popf
test
and
add
jo
pushf
xchg
adc
and
cwtl
adc
in
sbb
cmpsl
cmpb
push
push
outsl
fs
xchg
add
xor
repz
test
hlt
outsb
mov
je
dec
and
xchg
enter
xchg
fadd
pop
add
push
movsl
add
xchg
insb
and
inc
int3
ret
adc
xor
xor
pop
pop
or
xchg
jne
mov
or
xchg
xor
neg
mov
pop
xor
cld
dec
imul
adc
push
arpl
push
pop
scas
dec
es
cmp
fsubrs
addr16
inc
push
aam
outsb
add
aam
stos
rolb
jb
leave
pop
outsl
rcrb
int3
adc
int3
or
enter
rolb
mov
dec
in
stos
rolb
xchg
fadd
pop
lods
mov
pusha
je
shrb
mov
ljmp
loopne
bound
sbb
mov
mov
add
pop
xor
or
movsb
jo
out
in
cmc
push
xchg
dec
loop
mov
inc
xor
or
mov
aaa
add
pop
jl
lods
mov
movsb
xchg
cmp
sbb
or
mov
xchg
cmp
pop
mov
hlt
sbb
hlt
in
outsl
push
jb
add
hlt
clc
dec
jb
and
or
sbbl
jbe
add
pop
loopne
xchg
pop
leave
fbstp
and
inc
sahf
shlb
je
inc
imul
push
mov
mov
insb
pop
icebp
lea
mov
sub
gs
add
aaa
xor
add
and
sbb
xlat
mov
push
add
pop
popa
jge
dec
popa
addr16
push
stos
cltd
mov
enter
dec
add
outsb
inc
andl
inc
adc
push
sbb
pop
lcall
shrb
or
jno
push
lock
xchg
aaa
adc
pushf
dec
sti
outsb
sbb
mov
mov
jge
inc
fs
and
push
dec
jno
bound
addl
dec
fists
jo
test
xchg
daa
sti
shrb
add
mov
jle
sub
das
call
daa
jmp
sub
mov
jo
repnz
das
sub
and
mov
insl
and
in
cmpsb
and
xor
jl
in
adc
pcmpgtd
xchg
in
in
pop
add
les
add
and
lahf
les
addr16
in
jecxz
dec
jne
mov
push
mov
push
out
jl
and
into
adcb
pop
lahf
mov
and
aad
fwait
shlb
jge
mov
sub
clc
mov
sarb
cmp
shrl
call
sub
or
inc
sbb
and
rclb
or
inc
ljmp
add
add
sbb
lods
jo
pusha
mov
cmc
sub
iret
je
mov
outsl
jne
mov
cmp
test
imul
inc
shrb
int
add
bound
std
sarl
jmp
aam
cmp
add
jmp
cmpl
sub
push
jmp
push
rolb
push
mov
xchg
adc
jo
push
push
test
es
adc
js
mov
call
jno
push
adc
push
mov
or
xchg
adc
jne
xor
in
pop
mov
stos
pop
cmpsb
xchg
andb
cmp
pusha
add
pop
xchg
pop
push
push
adc
dec
adc
mov
dec
push
iret
mov
and
and
hlt
mov
push
fstl
fsubrl
inc
push
and
xor
jno
mov
xor
sbb
xchg
test
cmp
ljmp
call
lea
mov
fs
adc
cmp
mov
inc
fiadds
jo
adc
push
sub
and
lea
je
ja
adc
punpckhbw
jmp
cmp
adc
jo
xor
sbb
hlt
cltd
inc
or
mov
nop
inc
imul
adc
addr16
shrb
imul
jbe
dec
mov
inc
ljmp
jo
ja
dec
jle
out
and
mov
and
and
mov
cs
fiadds
scas
and
and
push
push
push
xor
aam
xor
xor
inc
cmp
lret
push
gs
jb
pop
adc
movsb
sub
inc
or
push
clc
cmovb
jae
and
fs
and
add
mov
mov
aas
add
clc
xor
or
test
sub
int
pop
jl
sub
dec
ds
sub
lcall
sub
jl
ja
sbb
cs
xor
mov
aaa
iret
push
inc
push
test
into
movsb
pop
xor
lsl
or
mov
jl
and
bound
pushf
sbb
xchg
andb
dec
mov
fwait
push
daa
int3
nop
mov
inc
inc
add
or
inc
shll
mov
or
aaa
or
test
nop
mov
dec
pushf
or
sbbl
loopne
jno
or
jbe
add
lcall
cwtl
pop
jae
ljmp
mov
or
roll
sbb
adc
or
mov
out
inc
mov
fcoms
inc
push
clc
popl
mov
push
push
sbb
ret
and
and
push
or
inc
and
dec
pushf
and
pop
or
inc
addr16
cmp
mov
inc
push
inc
xadd
in
sti
sub
daa
mov
daa
push
cmp
je
insb
mov
adcl
movsb
sub
lcall
inc
stos
aam
adc
fdivl
xor
daa
lea
and
cmpl
and
jbe
and
cmp
js
shrb
push
adcl
frstor
ljmp
das
cmp
rolb
adc
jg
push
sub
ss
push
xor
cmpsb
pop
lahf
fs
pmuludq
scas
loope
pop
mov
jmp
pop
or
push
and
sarb
push
lods
dec
mov
cli
mov
pop
mov
incl
xchg
add
adc
mov
add
add
lcall
enter
mov
pop
mov
scas
pop
mov
clc
inc
insb
and
inc
rolb
push
sub
stos
and
pop
movsb
andb
adc
push
lock
xor
cmpsb
test
mov
sbb
call
push
push
dec
dec
inc
test
mov
in
or
adc
cmpsl
lock
jle
mov
lea
inc
inc
sbb
je
xchg
sbbb
inc
and
testb
inc
outsb
pop
clc
ret
leave
jnp
shl
mov
dec
push
xor
add
ja
into
cmpsl
mov
and
mov
sub
sub
popa
sub
imull
jo
pop
push
xchg
mov
push
and
movsb
bswap
or
or
cs
cltd
jl
popf
in
movsl
or
and
dec
adc
push
jmp
int
pop
xchg
lds
outsb
inc
inc
adc
or
das
cltd
sarl
into
jmp
or
cmp
shrb
pop
xor
ja
xchg
aaa
cld
scas
dec
mov
nop
xchg
mov
clc
clc
ss
cmp
jge
push
adc
dec
sub
es
add
imul
pop
add
mov
xchg
mov
pop
push
cmp
add
or
lcall
mov
movsb
cmpsb
xor
inc
and
in
cmpl
repnz
inc
iret
out
add
inc
push
inc
aaa
mov
push
and
jl
mov
je
fsubrl
mov
or
mov
lds
xchg
cmp
popa
mov
ljmp
jno
outsl
inc
pop
or
out
loopne
adc
data16
xor
sbb
push
or
aad
roll
mov
adc
inc
loop
imul
mov
push
add
insb
xor
lock
pop
push
and
jle
xchg
fdiv
test
std
lahf
negb
push
mov
and
push
pop
lea
pop
mov
inc
dec
jne
xchg
pusha
and
pop
sbb
xchg
inc
test
push
adc
rcrb
pop
dec
dec
mov
movsb
ds
xor
and
pmulhuw
outsl
push
movsb
clc
sarb
sti
cmp
sbb
daa
daa
sub
and
cwtl
sub
mov
inc
call
adc
mov
mov
mov
jl
add
test
xor
adc
mov
mov
stc
roll
xor
or
or
cmpsb
adc
xchg
or
jne
lahf
mov
or
mov
mov
cltd
mov
inc
or
push
out
fcmovnb
dec
not
es
shrb
iret
sub
push
add
push
inc
mov
dec
jge
lret
dec
out
lret
cmpb
pushf
jne
lcall
or
jnp
add
or
ret
lret
inc
jmp
cltd
mov
dec
inc
and
push
in
xchg
sbb
jmp
mov
push
mov
stos
xchg
adc
push
sarb
into
das
fistps
ret
xor
andl
inc
mov
rorl
cmp
enter
pop
sbb
fmul
inc
sub
cmc
add
jl
push
in
sbb
or
lods
mov
pop
popf
cmp
xor
cld
sbb
adc
outsl
jecxz
jne
mov
add
push
xor
add
mov
push
ret
fs
aas
mov
loopne
mov
lods
jno
pusha
add
xchg
jl
inc
test
mov
rcr
xchg
dec
xor
xorl
mov
sub
jo
xor
inc
sbb
insl
or
jp
dec
sbb
xor
pop
in
dec
outsb
pop
lock
xlat
xchg
xor
loopne
and
faddl
flds
out
mov
pop
push
and
lds
mov
jmp
mov
sbb
insl
dec
call
in
adc
bound
jbe
jmp
mov
cmp
les
into
insl
jo
nop
xor
and
testb
or
js
dec
call
cmp
add
and
insl
sbb
mov
pop
addl
fs
xchg
xor
adc
dec
or
data16
mov
pop
inc
xor
scas
sbb
pop
mov
xor
testl
in
sbb
adc
dec
or
adc
andb
je
rcrb
dec
lods
xor
sbbb
xchg
xor
or
jo
pop
out
popa
vmovntdq
andl
jge
xor
xor
xchg
icebp
stos
lds
add
stc
cmp
add
inc
imul
outsl
dec
mov
mov
push
pop
or
repz
adc
ja
inc
js
jl
sub
mov
or
cmp
add
cmpsl
or
mov
sbb
subl
cmp
lahf
and
in
xchg
les
lea
add
sub
lret
les
push
pop
jg
push
cmpsl
add
sub
gs
les
push
pop
ret
sub
mov
mov
or
xchg
or
daa
mov
add
sarb
cld
jg
bound
cmp
pop
inc
popl
dec
test
mov
jns
imul
add
mov
mov
push
daa
mov
icebp
sbb
loop
pop
sub
xchg
sub
dec
pop
insb
dec
prefetch
or
imul
testl
scas
xor
hlt
pop
cld
xchg
inc
push
jmp
aaa
test
rcrl
ret
test
mov
push
pop
jecxz
cwtl
sti
xor
inc
push
icebp
test
sub
jmp
in
mov
fs
std
in
and
dec
xchg
jae
sub
hlt
cmp
clc
adc
cmp
jmp
cmp
mov
ja
cmpl
mov
cmp
add
or
and
add
call
xchg
sub
shl
iret
push
bound
lods
fsts
adc
jb
adc
insl
or
mov
cmp
push
mov
imul
jo
popa
jb
test
inc
ss
repnz
call
add
imul
mov
adc
icebp
dec
inc
test
gs
pop
add
jns
insl
dec
mov
icebp
or
xchg
jl
movsb
ds
scas
mov
mov
clc
ret
cmpl
dec
movb
bound
outsl
xor
pop
negb
or
aam
cmp
je
mov
mov
sub
or
adc
fadds
loopne
push
adc
xchg
sub
push
int3
xchg
shr
sub
ret
push
ret
andl
and
sub
cmp
test
fadds
stos
lret
dec
dec
test
cld
pop
mov
xchg
rolb
cmp
fisttpll
lret
push
das
dec
aaa
sub
cli
in
mov
int
in
push
pushf
outsl
in
jmp
and
jae
cmp
cmp
loop
mov
popf
jmp
test
sbb
ja
cmp
dec
sub
xor
jo
mov
shlb
test
or
cli
adc
dec
test
idivb
or
mov
mov
ja
sbb
imul
sub
lcall
fisubrs
add
adcb
adcl
mov
jmp
xchg
outsl
imul
or
push
pop
popa
jbe
jle
insb
pop
dec
cli
dec
mov
out
daa
bound
insb
inc
lea
jbe
push
into
cmp
daa
mov
mov
sbb
ret
push
js
and
push
mov
xchg
sbb
mov
sbb
dec
sub
pop
pop
or
pop
cmp
leave
daa
lcall
cld
add
fwait
inc
inc
call
mov
test
testl
cmp
sbb
pushf
jo
inc
xor
jmp
inc
lret
pop
sbb
jnp
xlat
lea
push
outsl
adc
sbb
sbb
icebp
test
pop
pop
pushf
or
loopne
mov
lds
push
pusha
test
lods
adcb
arpl
inc
std
orb
xor
push
jl
inc
add
jne
stc
rol
sub
add
icebp
inc
test
pop
and
adcl
ja
faddl
aas
inc
clc
cmp
in
pop
out
jp
and
ja
mov
das
cli
int3
cmp
stc
jle
mov
jb
sbb
push
mov
pop
les
mov
jns
shrb
add
mov
outsb
sbb
repnz
pusha
mov
aas
inc
push
xchg
push
arpl
aas
add
cmp
aaa
and
icebp
and
es
fldl
add
adc
mov
sub
inc
cmovg
test
imul
and
dec
add
hlt
mov
mov
jns
dec
jl
sbb
sbb
shr
ficompl
std
mov
or
lock
test
push
add
push
andl
push
push
or
sub
daa
lock
sbb
nop
sub
adc
mov
add
push
fsubrs
and
adc
inc
adc
add
xor
ret
and
add
cmp
pop
inc
ret
scas
insl
push
push
loopne
sub
pop
cld
inc
test
sub
mov
shr
ror
add
mov
jl
adc
or
add
imul
inc
cld
and
fmulp
push
and
sti
jle
or
add
push
sahf
sub
jl
in
dec
jb
inc
add
inc
loop
jnp
add
add
rorb
dec
inc
push
add
repnz
js
dec
adc
cmp
and
lods
mov
push
mov
sub
mov
xchg
enter
cmovg
pop
and
bound
or
scas
cmpl
lret
stc
test
add
dec
sub
test
inc
add
adc
cmpsl
insb
mov
adc
adc
fmull
mov
xlat
mov
outsl
inc
adc
add
mov
xorl
loopne
inc
push
fs
outsl
xchg
jmp
xor
adc
jo
clc
aam
dec
cmp
jl
mov
sub
xor
pop
sbb
add
xchg
cmpsl
inc
inc
mov
push
inc
rclb
xchg
int3
adc
ret
jl
mov
and
shlb
cmp
sbbb
cltd
test
add
movsl
push
imul
andb
inc
inc
lods
ss
push
data16
cmp
leave
xchg
sub
test
inc
xor
jmp
pop
notl
movsl
das
push
sbb
mov
cmpsl
popa
and
push
popl
sbb
and
nop
add
sarb
sbbl
gs
mov
and
ds
pop
or
or
push
int
fs
ret
inc
mov
and
push
leave
orl
dec
inc
sbb
inc
les
mov
popa
cmc
dec
lods
inc
stos
inc
mov
enter
dec
lods
loopne
fidivrl
ds
fbld
add
sub
insb
out
popl
enter
movsb
push
aas
adc
outsl
adc
shrl
or
push
repnz
enter
pop
mov
dec
sarl
repz
pop
pusha
sub
cmp
lods
sbb
sbb
pop
sbb
gs
push
dec
fbld
push
push
data16
mov
dec
push
xor
push
into
dec
xchg
ret
ret
test
lods
dec
inc
or
sub
xchg
daa
jecxz
inc
sbb
push
cmp
push
xchg
adc
stos
inc
ret
lcall
and
arpl
and
jge
nop
pop
lds
xchg
cmpsb
sub
sub
jmp
mov
xlat
in
rcll
mov
add
add
fcmovu
lea
popf
pop
jb
inc
hlt
dec
arpl
push
fs
inc
nop
dec
or
rcl
xor
add
pop
and
mov
xchg
btr
ret
inc
push
mov
or
mov
inc
adc
je
push
leave
mov
xchg
movsb
cmp
incl
push
mov
in
or
arpl
inc
push
adc
pop
arpl
push
lods
loop
dec
lods
insl
adc
popa
es
repnz
stc
pop
test
push
mov
xor
adc
and
mov
cli
mov
sub
jae
xor
sub
leave
mov
iret
lds
in
daa
movsb
rcr
push
fldt
dec
int3
mov
adc
shrb
or
push
in
ss
arpl
pop
out
sbb
dec
adc
cmc
push
sub
cmpsl
es
add
cmp
add
es
adc
sub
or
inc
cmpsl
addl
sbb
dec
or
xor
les
sbb
mov
pop
fwait
cmp
jo
add
and
jge
dec
das
add
inc
orl
add
sbb
orl
xchg
into
lds
mov
push
pop
and
sub
in
add
lods
out
xchg
pop
add
inc
mov
jno
pusha
out
or
pop
and
lods
shll
sub
mov
dec
nop
cmp
pop
mov
outsb
cld
cmp
enter
or
dec
push
arpl
pop
or
ljmp
sbb
sbb
mov
or
jae
dec
sub
sub
pushf
push
mov
sbb
imul
lods
out
adc
leave
sbb
pusha
add
sbb
mov
pop
sub
fldl
and
pop
mov
xchg
xlat
mov
js
mov
push
fcoml
add
push
push
js
rclb
add
and
add
or
xorl
and
nop
adcl
push
fisttps
nop
pop
repnz
push
js
adc
aam
and
out
pop
sub
sahf
push
ss
aas
cld
pop
mov
push
inc
add
push
adc
mov
xchg
pop
sub
or
or
aam
inc
adc
incb
and
xchg
mov
inc
daa
outsb
ljmp
xchg
mov
aam
inc
or
shrb
or
mov
add
in
dec
inc
pop
adc
rorl
cmp
js
inc
fwait
xchg
push
mov
jo
jo
push
leave
adc
dec
sbb
dec
sbb
pop
lock
mov
sbb
or
pushf
cmp
jne
out
addb
insb
jmp
unpckhps
insl
movsl
mov
mov
addb
ja
or
push
cmp
mov
jno
jae
clc
scas
push
xchg
add
cmovge
mov
addr16
jns
cmpsb
adc
or
jmp
bound
pop
and
pop
orl
mul
mov
push
test
push
add
loope
nop
in
rolb
mov
gs
push
sub
addb
inc
push
inc
or
repnz
mov
nop
or
mov
push
jno
inc
push
push
push
insl
jbe
push
adc
inc
push
out
inc
xor
dec
insl
mov
mov
int3
dec
mov
add
lahf
aad
shll
imul
cltd
loopne
xchg
test
add
das
mov
mov
inc
stos
cmc
or
mov
arpl
mov
rcll
mov
mov
adc
sub
clc
sbb
loop
lcall
test
fwait
inc
les
add
fsubs
add
outsl
shlb
call
pop
mov
and
loopne
pop
daa
xchg
addb
sbb
stc
sbb
cmp
sub
orb
fisttpll
fwait
add
mov
sbb
mov
sbb
int3
adc
testl
push
or
ja
cmp
insl
fldl
or
jo
mov
or
sbb
sub
pop
test
or
cmpl
sub
pop
xchg
sbb
sbb
inc
ja
aad
adc
imul
pop
jecxz
push
test
test
fildl
pop
sub
nop
addl
hlt
push
sbb
addb
lods
ja
pop
adc
or
adc
pop
add
mov
jg
cmp
pop
stos
inc
cltd
add
jmp
lock
add
pop
inc
insb
add
adc
push
in
mov
call
scas
or
inc
ficompl
push
mov
imul
mov
dec
and
inc
xchg
sub
hlt
add
sarl
add
jns
add
test
inc
jno
dec
add
leave
jns
jo
out
ss
pop
dec
daa
add
hlt
add
addl
mov
hlt
pop
hlt
mov
stos
pop
negl
icebp
xor
pop
jae
mov
jne
inc
push
add
test
pop
js
dec
insb
mov
mov
aas
movsb
test
sbb
push
mov
shlb
movq
pushf
cwtl
adc
or
test
mov
adc
inc
or
imul
adc
or
bound
inc
shll
mov
add
jo
add
pop
xor
xchg
adc
mov
jp
mov
push
push
mov
and
nop
testb
add
pop
test
mov
xchg
jbe
xor
push
inc
add
add
in
and
fisubl
adc
arpl
fsubs
and
testl
outsb
add
or
sbb
push
or
pop
sarb
cmpsb
add
xor
cmp
and
cmp
orb
addr16
das
pop
mov
aas
gs
fisttpl
pushw
add
push
hlt
add
inc
sahf
nop
adc
addb
cmp
pusha
jle
or
sbb
in
xor
and
xchg
orl
add
add
aam
fsubrl
push
xorl
pop
sbb
mov
mov
mov
mov
xor
pushf
lea
mov
dec
cmp
andb
mov
cwtl
push
and
dec
adc
movups
add
pop
pusha
adc
or
add
add
fs
lea
leave
sub
dec
repz
push
insb
add
aad
or
push
push
hlt
mov
xchg
data16
int
adc
push
inc
pop
adc
sbb
cmp
inc
and
sbb
or
sub
or
add
jo
out
pop
add
cmp
mov
and
fidivrl
and
pop
loopne
dec
dec
popf
and
and
dec
lcall
and
imul
imul
int3
pusha
pusha
jns
jne
and
inc
push
xchg
jne
movsb
push
adc
mov
es
repz
adc
popa
dec
js
xor
add
cmp
sub
add
test
mov
ljmp
cmp
movsl
xor
cli
and
lods
cwtl
mov
sub
and
pop
xchg
mov
or
leave
pop
jl
test
jno
movsb
shrb
inc
push
rolb
pop
mov
and
or
mov
mov
inc
rcrb
dec
shlb
lea
movsl
xor
and
frstor
jl
rorb
movsl
mov
mov
xor
mov
cmpb
loopne
mov
xor
cmp
sbb
call
hlt
rcrb
xchg
cmpsb
mov
xchg
xchg
sarl
clc
mov
faddp
shll
addb
add
repz
lahf
or
push
outsl
xchg
inc
or
add
dec
or
push
nop
xor
aaa
jbe
fs
adc
imul
jmp
movsb
xchg
xor
and
cmp
adc
push
sub
repnz
cmp
call
xor
and
jo
lock
cmp
xor
lds
pop
inc
inc
inc
push
push
inc
dec
lcall
pop
test
or
pop
dec
push
addl
inc
dec
inc
adc
add
add
inc
mov
sbb
lcall
testl
push
fidivrs
data16
or
rorb
js
nop
mov
add
in
int
or
inc
mov
dec
jecxz
bound
nop
nop
dec
inc
rcl
push
mov
cwtl
dec
int
int3
cmp
mov
dec
out
pushf
and
dec
test
test
adc
test
and
mov
bound
test
or
dec
repz
mov
ret
push
mov
repnz
loope
fisttpll
dec
push
inc
xchg
imul
decb
push
dec
inc
inc
dec
dec
dec
mov
pop
repnz
inc
push
push
dec
pop
dec
aas
dec
jnp
push
in
inc
inc
dec
push
push
dec
jg
in
mov
and
dec
dec
mov
repnz
fisttps
inc
pop
ds
inc
mov
push
push
out
sbb
fwait
xchg
aas
mov
inc
inc
push
dec
dec
dec
add
and
push
dec
inc
pop
inc
push
inc
push
pop
fwait
dec
loope
aaa
out
sbb
push
and
sub
push
or
dec
fbld
dec
dec
out
gs
dec
cmpsb
pop
daa
test
lret
sbb
xchg
lds
inc
dec
inc
bound
push
push
lcall
push
inc
aas
enter
cmp
and
mov
add
lea
test
push
incl
xchg
mov
jne
and
inc
or
test
and
imul
inc
cwtl
or
adc
and
mov
leave
jne
add
lret
xorb
jae
cltd
sbb
xlat
cmpb
and
push
inc
inc
cs
and
sbb
dec
push
rclb
les
mov
jbe
bound
sbb
popa
xchg
push
into
and
jne
addr16
sbb
leave
inc
push
arpl
push
xor
xchg
insl
mov
push
dec
sbb
pop
addl
pop
pop
xchg
adc
decl
cli
sub
ja
orb
mov
pop
andb
nop
mov
mov
movsl
mov
dec
adc
jp
sbb
daa
inc
test
pop
sbbl
xorb
sub
dec
fisubl
pop
jg
movl
out
sbb
in
dec
subb
nop
xchg
jl
dec
cmp
clc
lock
pop
leave
imul
addr16
je
enter
or
int
or
mov
sbb
or
in
and
jmp
jmp
ljmp
xor
repnz
add
add
out
rolb
pop
xchg
sbb
and
pop
imul
adc
and
inc
cmpsb
cld
cld
pop
and
sbb
and
mov
daa
fstps
jne
sub
mov
mov
nop
leave
push
sbb
jns
mov
sbb
js
push
jb
rolb
xchg
cmp
xor
movsb
nop
sub
imul
sub
and
inc
popa
add
inc
in
leave
push
push
scas
inc
enter
adc
movsl
dec
adc
cmpb
lea
pop
out
lea
mov
jo
jmp
or
addl
and
cmp
dec
sub
xlat
push
mov
xor
out
or
into
dec
inc
and
jo
add
xor
bound
or
add
rcll
imul
adc
or
adc
add
decb
push
js
jg
movl
adc
xor
jno
les
movsb
mov
fldl
push
adc
dec
and
movsb
loopne
rcrl
pop
iret
and
je
jo
lret
or
mov
insb
adc
nop
or
adc
adc
add
push
es
rolb
jns
xor
adc
mov
adc
cmpsb
adc
in
lds
push
mov
leave
test
movsb
jns
mov
add
lods
aaa
xor
je
jne
push
scas
push
and
cld
and
or
mov
test
cmp
xchg
and
rcll
imul
dec
pop
or
sub
mov
les
inc
sbb
jnp
clc
insb
or
in
imul
cmp
sub
adcb
stc
arpl
inc
insb
inc
div
add
imul
inc
dec
xor
xlat
jle
dec
push
test
push
and
call
inc
pop
jb
cld
out
jl
mov
xchg
into
iret
add
pop
mov
mov
sahf
push
sbb
pop
push
inc
or
imul
call
cmp
jge
sbb
lahf
test
mov
mov
pop
mov
xchg
inc
push
jns
or
sbb
inc
aaa
xchg
cwtl
in
xchg
mov
jae,pn
gs
push
ret
inc
subl
or
pop
add
adc
das
clc
loop
jo
call
push
bound
aaa
xor
and
dec
mov
add
inc
inc
push
insl
mov
mov
notl
mov
imul
test
in
xor
xor
jb
dec
enter
pop
jle
and
jne
dec
mov
repz
in
outsb
lock
outsl
cmp
push
push
fnstsw
xchg
lret
mov
xchg
addr16
add
push
adc
jp
xor
loope
mov
adc
enter
test
push
add
daa
loopne
mov
jns
dec
popa
sub
movzbl
pop
and
adc
jne
test
jne
sub
insb
jb
add
jmp
fimull
sahf
push
xor
push
mov
jae
mov
adc
loopne
shlb
or
xchg
or
je
and
xor
xchg
test
lock
in
push
add
int3
xor
dec
pop
and
aas
popf
shlb
mov
mov
arpl
or
pop
insl
sbb
xor
sub
enter
cmpsb
subl
jae
xchg
ja
adc
mov
test
mov
inc
cmp
divb
xchg
push
fs
dec
and
test
mov
dec
pop
in
adc
pop
int3
cmp
push
shll
nop
ja
and
movsb
lcall
out
inc
insl
xchg
es
clc
subb
jb
clc
out
sahf
pop
ja
sbb
cld
add
push
ss
push
sbbl
subb
stos
pop
mov
test
pop
xchg
je
push
call
call
and
in
enter
or
adc
sar
lret
enter
or
sti
sub
fcompl
xorb
stos
push
push
push
dec
push
push
push
push
jo
dec
pusha
popa
dec
popa
fisubl
ja
and
mov
test
loopne
add
inc
push
push
and
arpl
push
dec
rcr
xor
add
add
mov
mov
cmp
jbe
sbb
enter
cmp
fsts
push
cmp
mov
subl
call
sbb
or
or
test
mov
add
mov
inc
mov
scas
jmp
cmp
push
dec
mov
push
cmp
xor
andb
jmp
das
aas
andl
ljmp
test
xor
in
adc
mov
xor
test
dec
in
add
pop
xchg
in
jb
xchg
xor
pusha
or
pusha
and
inc
fbstp
sbb
cld
mov
cmp
out
add
dec
inc
push
xor
aas
loopne
loopne
sbbl
andb
fs
loopne
mov
subb
xor
xchg
pusha
cwtl
cmp
adc
fcmovne
fists
push
sbb
jo
sbb
mov
add
jae
mov
mov
arpl
cwtl
and
add
push
rorb
xchg
push
xlat
sbb
sub
dec
lret
xor
dec
loop
xor
in
inc
xchg
push
jp
cmp
xor
jmp
gs
inc
adc
sbb
push
xor
loope
es
sar
leave
andb
daa
pop
iret
pop
dec
test
mov
sbb
fimull
test
scas
pop
sub
mov
enter
daa
loopne
jne
lahf
pop
cmpsl
push
nopl
in
xchg
push
xor
lcall
pop
aam
jo
jae
jns
enter
loopne
dec
xchg
pop
in
or
out
dec
in
mov
daa
sub
ja
das
leave
movmskps
adc
push
call
add
clc
cmp
jecxz
adc
jne
icebp
push
cwtl
jl
fidivl
lea
stos
sbb
mov
mov
cmp
movsb
jns
mov
js
out
or
or
add
cmp
push
in
cltd
push
fs
jmp
adc
and
lock
dec
pop
test
adc
add
hlt
push
lea
and
xor
add
das
pop
adc
pop
and
xchg
or
pop
add
bound
push
or
cmp
imul
shll
cmpsl
aas
rcrl
loopne
nop
jne
call
xor
ficoms
icebp
lods
pop
dec
mov
and
repz
xchg
mov
aad
lret
dec
test
dec
les
daa
mov
test
rcrb
mov
test
mov
xor
and
mov
repz
adc
mov
and
xchg
mov
je
push
fidivrl
aam
jmp
ficoml
ficompl
fldt
add
mov
mov
pop
jge
daa
adc
jp
mov
adc
andb
inc
or
sbb
dec
insb
test
fstl
mov
stos
sub
add
add
lcall
iret
jmp
sub
in
daa
add
mov
movsl
jg
mov
jne
mov
jl
sub
jl
mov
push
adc
xor
ss
add
jg
sbb
cmpb
neg
or
xchg
rclb
sub
call
test
mov
xchg
lock
adc
sub
xchg
rol
stc
sub
jle
rcl
add
lock
mov
js
xchg
push
and
mov
sarl
lret
test
push
push
inc
adc
or
test
jo
das
or
sbb
cmp
sub
fstpl
out
adc
pop
sbb
add
sub
push
add
sub
test
inc
jb
notb
call
add
fcomp
mov
or
outsl
push
pop
and
orb
inc
dec
out
mov
mov
jae
mov
fdivs
sub
in
and
nop
lahf
aaa
and
test
add
jg
adc
xchg
push
jmp
cli
cwtl
pop
lods
mov
mov
or
pop
dec
cltd
pop
enter
xchg
outsl
fcompl
pushf
dec
popf
faddp
in
in
push
cmpsb
sahf
pop
ss
push
sub
enter
jecxz
jb
jmp
mov
popa
xchg
lret
stos
mov
push
lahf
mov
pop
mov
movsb
dec
popa
movsb
lret
das
pusha
out
xchg
movsl
fisubl
mov
xor
out
lds
loopne
lea
xchg
or
xchg
cmpl
lods
popf
dec
push
xchg
push
in
mov
pop
sahf
out
lods
mov
sbb
bound
out
sbb
sbb
jb
scas
outsl
ljmpw
mov
ja
pop
lods
add
int
ss
shrb
add
cmp
mov
cmp
pop
popa
push
cmpsb
movsb
pusha
inc
adc
fcoml
mov
mov
push
rol
fdivrl
lret
loopne
mov
jb
stc
es
enter
or
pop
dec
jae
fadd
les
cmp
add
outsl
push
xor
mov
enter
sbb
cltd
push
sbb
xchg
and
mov
or
stos
xor
cmp
inc
dec
fwait
and
push
rorb
pop
leave
test
mov
push
add
jl
push
and
popa
mov
xor
insb
mov
sub
or
cltd
push
fcmovnb
push
mov
or
cmp
mov
or
add
dec
adc
ret
and
aad
repnz
dec
mov
jle
ret
pop
dec
push
add
cmp
rolb
cmp
nop
nop
mov
mov
and
mov
mov
and
orb
add
sbb
xchg
out
push
add
pusha
mov
cmp
fs
add
inc
push
xchg
xchg
and
je
in
sahf
inc
pop
inc
js
popa
jae
jl
pop
mov
jb
mov
or
and
mov
xor
xor
roll
sbb
cmp
jae
cmp
add
in
roll
add
mov
inc
or
adcb
stos
loopne
sbb
mov
in
clc
or
inc
scas
fs
add
nop
sub
add
dec
cld
cld
decb
and
add
push
sbb
mov
iret
out
pop
and
hlt
lock
in
mov
sub
xor
mov
jae
push
call
pop
in
add
add
loopne
loopne
fmull
seto
fdivr
inc
in
enter
stos
sbb
fsubrs
nop
add
rolb
and
or
fs
enter
add
les
int3
mov
xchg
rcrb
jge
arpl
sbb
shlb
ja
jb
fnstenv
adc
push
fisubs
rcrb
mov
xor
nop
dec
mov
dec
xchg
xor
cwtl
rorb
adc
mov
push
sbb
lea
in
rclb
das
gs
addb
xor
cmc
and
es
mov
dec
ljmp
lods
sub
int
jbe
test
dec
scas
inc
inc
in
adc
jge
add
push
popa
push
push
out
imul
cmpl
pop
and
imul
pushl
mov
out
scas
enter
ja
sbb
movsb
xchg
sub
jns
adc
insb
mov
mov
mov
push
push
mov
sbb
shll
inc
xor
cmp
xor
adc
pop
mov
xor
fwait
das
loope
lods
addb
cmpsl
pop
add
imul
xchg
iret
test
addb
add
nop
xchg
je
lds
xchg
sub
add
or
mov
das
inc
shrb
sub
mov
push
add
xor
xorb
nop
out
in
dec
sbb
hlt
subb
and
insb
and
add
add
pop
aam
in
cmp
js
add
shrb
loope
sub
flds
enter
add
je
add
sub
sub
es
push
sbb
mov
inc
push
fs
adc
and
pop
aas
pop
inc
adc
or
push
enter
adc
lcall
lock
nop
orl
add
or
cmp
in
sub
jle
dec
adc
and
jne
push
mov
jns
jp
shll
addl
xchg
sbb
xor
mov
lea
jbe
cmp
add
jne
cmp
adc
xor
mov
mov
sub
mov
add
and
jne
mov
cmp
dec
mov
cmpsl
stos
jne
inc
sahf
inc
jae
mov
xor
xor
movsl
cmpsb
rcrb
in
cwtl
xchg
ja
testl
add
mov
ss
ds
and
out
push
lods
add
daa
adc
and
and
call
loopne
leave
add
mov
rcrl
stos
sub
nop
or
adcb
adc
or
push
or
loope
notl
jb
adc
pop
leave
dec
xchg
nop
inc
adc
jns
imul
add
add
push
and
cld
std
clc
std
add
and
clc
std
hlt
std
orb
fsubrl
mov
and
mov
cwtl
pusha
fldlg2
pop
call
add
mov
aas
xchg
adc
pusha
adc
in
lea
or
push
loopne
loopne
nop
add
sbb
faddl
sub
nop
sub
test
rorb
fsubrs
and
enter
adc
add
fs
call
je
adc
leave
int3
enter
xorb
test
add
popa
inc
cmpb
lret
xchg
dec
pop
adc
mov
dec
inc
xlat
test
adc
test
mov
adc
fmul
enter
fsts
enter
lods
test
pop
and
add
xchg
pushf
sbb
mov
and
pushf
pushf
jns
shlb
loop
xchg
add
cwtl
cwtl
lea
orl
add
push
nop
sbbb
nop
or
mov
pop
lret
out
test
scas
push
jl
xor
add
sbb
mov
xchg
call
in
in
add
ds
in
jno
inc
lcall
cmp
dec
aaa
mov
inc
push
push
and
into
mov
mov
popf
pop
jmp
xchg
in
mov
cwtl
dec
inc
nop
inc
dec
inc
je
fsts
test
and
inc
push
or
cld
adc
xchg
and
add
xchg
dec
jmp
mov
lret
mov
cld
push
mov
pop
ficoml
xchg
mov
das
lods
mov
sbbb
dec
and
and
xor
or
mov
sbb
add
clc
rorb
add
sub
js
sub
jns
adc
sbb
or
jo
jb
es
les
xor
insb
orb
push
and
dec
rolb
jns
in
aas
jl
mov
add
push
pusha
mov
ret
int
cmpsl
jp
dec
inc
or
xchg
fs
rcrl
pop
shl
push
imul
push
push
sbb
cltd
mov
aad
add
sub
and
jg
push
push
xor
add
xor
adcl
inc
push
int3
pop
lret
push
push
add
xchg
movsb
sub
andl
xor
and
arpl
inc
repnz
shlb
mov
sub
and
andl
orb
xchg
sbb
insb
addr16
es
add
cmp
dec
xor
popa
xchg
ret
cwtl
pop
fadd
fbld
arpl
fs
xorl
and
sub
and
or
shlb
sub
cltd
or
add
inc
jb
popl
add
pushf
xchg
iret
add
std
sub
dec
and
in
std
and
push
es
add
and
fwait
sub
inc
inc
sub
jnp
and
mov
mov
nop
mov
sbb
popa
xchg
add
nop
or
adc
cmp
add
fdivrs
fidivrs
sbb
sub
cmp
sub
aad
jbe
cmp
test
pop
adc
sbb
sub
in
jp
jns
inc
dec
jecxz
jl
nop
adcl
decl
sbb
and
sub
and
or
inc
push
push
vxorps
dec
add
xchg
jecxz
add
adc
sub
or
add
mov
add
das
mov
int3
mov
test
xchg
adc
iret
and
nop
cld
cld
cld
pushf
cwtl
iret
enter
add
mov
hlt
enter
hlt
cmp
cmp
pop
imul
mov
insb
xor
mov
imul
mov
dec
sahf
movsb
mov
es
fucomi
dec
sbb
xor
cld
pusha
add
sub
shlb
xchg
int
sbb
je
xchg
je
sub
mov
push
pop
jo
sub
lds
mov
adc
and
push
adc
sub
je
imul
push
fstpt
xchg
inc
mov
shlb
adc
fmuls
call
xchg
std
inc
adc
inc
dec
dec
inc
xor
call
cmc
ret
iret
mov
cmp
xchg
pop
push
push
inc
push
push
lods
imul
cmpsb
test
and
popa
lea
lods
add
xor
dec
push
push
out
dec
push
stc
push
dec
dec
dec
adc
inc
clc
es
jbe
aaa
jne
imul
fisttps
adc
xchg
add
add
jae
inc
imul
cmp
stos
fldenv
loope
add
fs
and
add
je
add
xor
nop
int3
adc
or
dec
inc
data16
dec
nop
sub
and
xor
inc
adc
inc
sub
test
inc
dec
and
dec
dec
push
daa
stos
mov
out
inc
inc
dec
sbb
pop
xor
pop
mov
inc
jle
push
inc
push
dec
cmc
dec
add
sub
das
push
push
or
push
mov
sub
dec
pop
or
dec
adc
and
int3
add
sub
sub
adc
and
insb
jg
jno
xor
in
sbb
pop
loope
sub
sub
inc
sub
sub
cli
xor
mov
cmpl
mov
or
jg
ret
cmp
add
xor
aaa
movsb
jb
jp
test
and
cmpsb
lods
outsl
es
sub
mov
int3
enter
and
mov
les
add
mov
jecxz
xchg
mov
sub
dec
mov
in
add
test
scas
ret
mov
pop
fstpt
add
add
or
loopne
orb
pop
enter
cmpsb
fcomp
dec
jae
rcl
fs
sbbb
enter
test
mov
xor
rcrb
enter
enter
mov
loop
hlt
ret
pop
ret
mov
in
push
or
sbbb
push
lods
enter
lds
dec
jecxz
xor
js
add
enter
mov
cmpsl
add
scas
dec
repz
loopne
add
dec
jno
sbb
cmpsl
xor
push
cmpsl
ret
or
or
mov
lahf
push
hlt
mov
push
or
xchg
dec
pop
ljmp
test
int
pop
ss
lds
and
jno
enter
mov
add
imul
fcomp
adc
out
rclb
addr16
in
sahf
and
ret
clc
xchg
add
jae
mov
xor
cmp
test
je
cltd
push
sbbl
xchg
popf
das
sub
scas
xor
ja
aad
adc
and
insb
idivl
inc
add
leave
mov
pop
leave
push
jb
rol
sbbb
adc
push
mov
jb
adc
mov
orl
add
add
js
mov
inc
ljmp
pop
push
add
push
jmp
mov
dec
mov
add
or
or
push
pusha
inc
lcall
or
rclb
add
push
xor
lock
dec
adc
sub
mov
push
push
mov
cltd
call
cltd
inc
loopne
cld
add
test
or
push
mov
push
mov
or
mov
pop
lret
adc
ficomps
enter
or
pop
push
iret
cmp
rcll
jecxz
push
adc
push
xor
pop
mov
leave
jae
add
pop
iret
es
dec
mov
mov
mov
add
mov
mov
cmp
push
aam
and
movzbl
idivb
pop
insl
jg
icebp
into
push
adc
aas
imul
or
je
les
pop
xor
adc
imul
xor
out
inc
sub
xchg
cmp
xchg
add
xchg
lret
out
pusha
adc
adc
cmp
pusha
into
mov
pusha
dec
mov
jg
add
testl
mov
pop
and
or
adc
xor
pushl
sub
cli
int3
leave
enter
cld
clc
loope
lock
sti
adc
xchg
and
into
sub
test
and
and
mov
outsb
test
sbb
jo
pop
lea
cmp
insb
or
leave
les
leave
mov
arpl
and
roll
movsl
je
mov
js
cmp
leave
js
rclb
rorb
ss
popa
xor
sbb
add
in
loopne
push
xchg
xchg
and
xor
mov
test
and
call
nop
mov
andb
dec
addb
mov
xor
add
pop
repnz
add
xor
enter
or
sbb
dec
shl
psubd
fldenv
cmp
adc
or
rcl
pop
push
popa
sbb
repnz
pop
iret
inc
mov
inc
add
add
inc
sub
add
mov
les
ja
push
mov
lock
sub
testl
inc
js
negb
jns
add
mov
movsl
mov
loope
loopne
test
inc
test
lds
rorb
outsl
jg
je
mov
in
cmp
es
jae
pusha
add
and
push
xchg
jge
adc
push
cmp
ds
or
jb
jae
mov
loop
cld
sbb
nop
imul
inc
inc
inc
xor
mov
das
sbb
dec
fwait
mov
clc
repz
and
shrb
shlb
mov
sahf
cmp
pushl
rol
fsubs
call
sub
shlb
cpuid
jb
and
pop
pusha
jge
or
add
xchg
loope
jb
add
mov
cmp
leave
push
cmp
mov
movb
ja
pusha
cmpsb
out
lds
push
les
sbb
mov
icebp
in
jl
aam
and
push
and
dec
xor
add
inc
adc
in
rcrb
pop
ret
sub
adc
gs
in
cld
push
push
pop
cld
out
jb
rcrb
sbb
lea
pop
add
xor
fmul
mov
inc
clc
sbb
mov
iret
cmp
pop
or
dec
pop
stos
sub
orb
sub
or
add
inc
dec
lret
lret
cld
ret
sbb
lea
ret
mov
inc
pop
push
mov
les
shll
ja
jo
rorb
pop
pop
nop
neg
inc
popf
xlat
lahf
jl
aas
dec
dec
and
jg
aaa
add
mov
xor
jbe
sbb
aas
cmp
cmp
jle
and
outsb
cmpb
pop
inc
adc
arpl
dec
es
add
loop
or
aas
mov
add
mov
xor
mov
pop
ja
aam
shrb
xchg
adc
mov
test
mov
or
push
dec
jp
xchg
aam
adc
xchg
aad
mov
jb
scas
cmp
test
adc
push
inc
addr16
and
cmp
xor
mov
int3
sahf
or
pop
out
jmp
sub
xor
push
inc
push
add
xor
and
xchg
ret
mov
cmpsl
daa
movsl
or
jecxz
mov
test
ret
cmp
int
sbb
add
or
mov
mov
out
mov
outsl
popa
fs
je
mov
pop
nop
cmp
mov
sbb
push
aaa
movl
mov
mov
push
mov
inc
daa
popa
movsl
outsb
jo
push
push
mov
pop
mov
lea
jecxz
mov
push
mov
sbb
fidivl
pop
xor
or
xchg
add
pop
es
push
rcrb
test
dec
sub
test
mov
jge
push
ret
cmpsl
xlat
fstl
addr16
clc
and
dec
outsb
adc
popa
pop
ret
xor
into
inc
jmp
cwtl
insl
bound
xor
lock
inc
ds
sbb
adc
push
sbb
dec
das
mov
jmp
mov
xchg
adc
mov
jge
je
mov
out
int3
push
xor
xchg
push
and
xchg
inc
pop
enter
dec
popf
pop
movsl
adc
cmpxchg
aas
les
outsb
inc
and
mov
or
pop
mov
jne
xchg
orb
adc
jp
test
push
leave
push
in
pusha
add
push
mov
aam
dec
pop
xor
bswap
inc
push
adcb
dec
fsts
lcall
inc
daa
lea
add
sbb
fstl
lret
arpl
and
out
call
mov
pop
push
dec
leave
stos
fadds
cmp
xchg
pop
jb
add
cmp
fs
mov
orl
test
push
pop
ficompl
inc
mov
sub
add
or
jnp
cmpsb
mov
adc
scas
push
mov
jo
sarb
popa
mov
lods
lods
sub
push
mov
popf
cmpsb
cltd
mov
enter
sbb
or
xor
or
pop
or
mov
js
or
jb
jecxz
and
mov
loopne
aam
imul
outsl
orl
movsl
sub
sbb
js
cmp
adc
jmp
inc
dec
or
aam
inc
movsb
cmpsl
shlb
ljmp
jne
xor
shll
inc
xlat
mov
xchg
jp
xor
pop
and
jb
add
outsl
sbb
xor
mov
sti
das
mov
xchg
aam
pop
xor
or
mov
imull
jae
and
adc
pop
push
lret
outsl
xchg
enter
pusha
xchg
add
push
adc
adc
sub
jne
inc
adc
ret
push
and
jo
xchg
jbe
and
in
pop
int
out
push
mov
movsb
fimuls
sub
aad
in
dec
clc
data16
push
dec
add
mov
or
sbb
pop
adc
cmpsb
movsb
int
enter
lahf
push
mov
mov
xchg
popa
push
inc
enter
gs
inc
xchg
dec
sub
fsubr
push
cwtl
outsb
pop
jbe
add
fldl
xchg
xor
mov
dec
fwait
shrb
sub
insl
and
stos
push
adc
sbbl
push
add
rcrb
mov
mov
mov
mov
mov
loop
mov
push
xchg
add
mov
int
outsb
ret
pusha
add
xchg
mov
or
adc
vmptrld
mov
xchg
imul
pop
or
and
lock
dec
loopne
in
adc
lea
mov
and
aaa
push
push
push
rcll
dec
and
loop
hlt
adc
leave
inc
insb
inc
dec
loopne
sub
ltr
les
and
pop
fwait
mov
push
dec
dec
or
or
sbb
xor
lock
mov
pushf
add
add
arpl
loope
xchg
or
clc
cld
mov
mov
push
aas
push
lahf
pusha
push
out
out
push
in
xchg
out
aam
in
in
or
xor
add
lock
adc
and
mov
outsl
lea
outsb
arpl
adc
sbb
rcrl
test
pop
add
fiaddl
or
sbb
dec
je
adc
insl
pop
cs
jne
insl
test
fs
jg
lds
in
insl
aad
call
inc
push
xor
sbb
test
repnz
adc
ljmp
sbb
push
lea
mov
push
sbb
test
add
sub
dec
loopne
and
jns
fwait
cmp
jmp
inc
add
add
and
mov
dec
mov
cwtl
and
sub
xorl
lcall
dec
movzbl
cmp
jle
mov
or
es
popa
or
aas
xchg
movl
in
add
cld
addr16
insl
call
xor
and
testl
or
sub
and
clc
mov
fdivrl
sbb
aad
cmp
je
xor
test
fstp
cwtl
lock
in
mov
mov
and
inc
add
or
shll
call
es
pop
in
mov
fildl
add
pop
push
imul
aad
int3
inc
cli
or
and
enter
xor
push
iret
rorb
sti
scas
or
xchg
adcb
pop
mov
loopne,pt
mov
loopne
inc
repnz
fnsave
loopne
loopne
movsb
xor
jmp
jns
jge
inc
pop
adc
adc
sti
movb
adcb
dec
icebp
loope
cmpl
and
jl
or
jg
loope
mov
dec
add
data16
mov
cmpxchg8b
test
outsl
dec
cltd
inc
rcl
lock
sarb
pop
mov
stos
out
bound
adc
push
cmp
mov
or
or
insl
les
dec
ljmp
sbb
cmp
insb
push
and
and
fs
dec
xchg
rcrb
test
cld
hlt
pop
push
push
mov
lea
or
out
jns
dec
adc
jae
les
mov
test
test
daa
xor
push
sti
ret
dec
mov
xor
dec
jbe
pop
and
pop
dec
rclb
dec
sub
and
xor
arpl
fiaddl
lods
mov
add
divb
xor
or
test
sbb
pop
inc
fs
insl
loop
xor
nop
pop
push
inc
xchg
testl
and
pop
call
mov
mov
push
xchg
scas
xlat
psrlq
movl
cli
and
mov
inc
inc
push
and
icebp
pop
fildl
fiadds
add
nop
pop
and
mov
aad
add
in
push
or
xor
pop
mov
inc
in
jmp
jae
xchg
add
je
mov
push
aas
gs
xor
add
jnp
adc
xlat
inc
jbe
arpl
rcrb
cmp
dec
add
je
sub
inc
int3
hlt
popf
mov
add
test
inc
lret
push
add
sub
nop
fistl
stos
and
sbb
xor
lea
add
mov
cwtl
in
call
add
or
add
clc
sbb
or
movsl
jge
inc
adc
or
test
pop
outsl
lock
test
stos
pop
mov
jmp
push
sbb
lods
or
or
jo
fsubr
mov
sub
scas
jmp
cmp
dec
aaa
mov
adc
lret
aam
iret
add
aaa
rorb
mov
add
js
shlb
jmp
mov
test
sub
je
cmp
jb
cmp
ja
fnstcw
stos
jbe
ss
push
add
jmp
pop
or
or
insl
adc
ja
out
and
fistl
scas
ja
jg
dec
jne
mov
lock
xor
add
fnstsw
dec
jne
sub
stc
cli
jno
aaa
xor
xor
repz
xlat
or
push
iret
and
fdivrl
or
lock
xor
and
jno
push
adc
pusha
xlat
cmc
bound
mov
or
enter
adc
add
add
clc
pushl
lea
sub
adc
ret
cmp
inc
sub
ljmp
ss
ja
addl
mov
outsl
fldenv
pop
fisttpll
push
fildll
xlat
orl
das
inc
addb
cmp
xchg
pop
hlt
mov
daa
daa
mov
dec
outsb
mov
inc
xor
scas
pop
or
push
dec
xor
mov
sbb
mov
jl
mov
inc
mov
adc
and
xor
mov
add
cmp
inc
and
fistpl
jns
and
fstl
loopne
fdivs
pushf
and
jmp
or
test
dec
movb
mov
daa
adc
xorb
adc
add
sbb
cmpb
mov
push
add
int
and
jl
adc
mov
cmp
int3
xor
cld
push
xor
jmp
orb
repz
mov
ficompl
push
pop
fsubs
mov
fbstp
or
add
lods
in
mov
cmp
es
push
xor
and
sbb
mov
push
or
adc
adcb
xchg
les
pop
pop
pop
and
push
and
in
adc
out
cmpsb
mov
rcll
push
or
psraw
mov
fidivrl
adc
dec
push
adc
mov
cwtl
sbb
push
add
dec
push
add
test
inc
push
xchg
ficoms
mov
jle
sub
jmp
xchg
cltd
add
jecxz
fmull
or
mov
lods
mov
dec
shll
icebp
sti
fildl
mov
movsl
lret
push
push
rclb
mov
push
pop
addl
and
jno
cmp
sbb
and
mov
sub
out
push
sub
pusha
in
inc
lods
repnz
dec
mov
pop
hlt
popa
push
and
std
xlat
sub
pushf
aas
ljmp
ror
ds
icebp
int
xchg
xor
pop
out
adc
sti
push
add
bound
cld
xor
jns
inc
xchg
sub
inc
xor
cmp
aam
dec
out
aas
repnz
inc
pop
fsubr
cmp
cli
xchg
or
prefetch
fldt
pushf
push
shl
scas
shrb
daa
iret
inc
jo
out
or
inc
inc
fsts
imul
push
test
push
ds
sub
xor
dec
push
pop
lods
push
hlt
push
out
adc
lods
xor
push
pop
pusha
push
mov
xor
add
add
out
ret
sub
push
jo
dec
push
add
rcrb
jbe
pop
and
bound
inc
js
push
add
xchg
aas
sbb
sub
sbb
or
jge
jo
inc
or
xchg
xor
adc
push
cli
push
add
or
inc
and
loop
mov
push
pusha
sbb
lahf
sbb
nop
and
mov
jmp
nop
daa
sbb
push
mov
dec
sbb
or
loope
xorl
fsubrs
out
push
dec
mov
lret
shlb
xor
mov
sbb
outsl
stos
repnz
pop
mov
add
pusha
enter
dec
in
jecxz
pushf
es
jg
jae
jns
pop
sbb
cmp
dec
ret
ja
add
lods
repz
push
pop
jbe
les
outsb
adc
mov
lret
inc
dec
rorb
jo
ror
mov
sbb
and
jbe
add
mov
movsb
sahf
lods
test
shlb
pop
test
mov
jnp
push
nop
fstpl
add
hlt
pop
xchg
xchg
gs
push
fistpl
lds
jns
push
loopne
mov
es
and
pop
pop
test
push
jns
loop
pop
mov
push
lods
hlt
mov
or
pop
adc
sbb
add
add
je
stc
cs
fdivrl
test
mov
sahf
sub
or
sbb
cmp
adc
sbb
sbb
in
pop
or
sub
in
push
add
xchg
in
add
loop
cwtl
inc
pusha
inc
popf
clc
inc
push
jle
push
sbb
scas
cmp
add
jl
sbb
adc
jbe
test
fildll
fdivs
xchg
rcll
mov
adc
sub
adc
icebp
jl
adc
sub
scas
xchg
out
xchg
outsl
neg
fcompl
cs
ficoml
fwait
and
lock
idivb
imul
mov
movsb
pop
fistpll
clc
sub
and
aam
test
sub
xor
add
push
inc
cmpsb
mov
adc
xchg
enter
insl
adc
cmp
xor
mov
add
in
dec
adc
dec
sbb
test
aad
in
mov
and
sub
in
add
mov
cmp
dec
lds
in
push
xor
jmp
leave
lret
adc
inc
jbe
pop
adc
push
jo
inc
mov
rcl
pop
stc
pop
jbe
or
dec
int
sub
shrb
add
aam
inc
add
and
in
stos
add
fmull
shlb
ficoms
jge
fwait
das
ret
or
add
push
push
pop
push
sbb
nop
add
pop
in
xchg
sahf
and
daa
in
xchg
dec
es
add
or
mov
jo
and
mov
test
jecxz
cmp
cmp
fs
aam
gs
inc
push
cld
addl
push
scas
add
jl
add
stc
inc
sbb
loopne
mov
arpl
add
sub
enter
adc
popf
inc
pushf
mov
and
jnp
cmpsb
cli
jns
push
andb
and
xor
xlat
pop
aad
cli
and
xchg
or
xlat
xchg
aam
test
scas
jl
or
aam
fdivl
pop
mov
xchg
and
insb
and
rcll
sti
pop
pop
sbb
sub
pushw
push
jg
adcb
mov
mov
inc
clc
pop
adc
test
or
xorb
enter
add
aam
enter
mov
pop
aam
insl
and
jns
ss
sub
bound
fdivs
jbe
sub
je
xchg
inc
xor
sub
call
jnp
ret
and
lock
push
call
mov
xchg
push
xor
out
nop
xchg
es
add
aad
sahf
cmc
sbb
mov
aam
sub
test
mov
inc
je
push
adc
lds
cltd
inc
xchg
inc
in
in
out
inc
dec
cmp
int
push
sub
lock
mov
and
cmp
sub
jmp
dec
mov
inc
shll
divl
lcall
call
test
mov
xor
mov
add
add
pcmpgtd
add
out
mov
into
daa
or
jno
mov
inc
push
mov
or
cmp
out
andl
xor
or
push
mov
push
and
bound
pop
sbb
and
or
dec
incb
das
sbb
out
push
pushl
push
add
xchg
fisubs
sbb
aam
es
push
adc
cltd
xchg
fisubl
add
call
cwtl
pop
sbbb
pusha
icebp
xchg
adc
iret
lret
test
iret
mov
or
mov
js,pn
fiadds
fwait
pop
push
xchg
adc
jp
dec
or
push
add
xor
shll
xor
adc
ret
inc
sub
cltd
imul
add
adc
inc
inc
adc
shlb
cmpsl
inc
and
push
cwtl
ss
ljmp
lods
outsb
leave
jecxz
pop
mov
xor
dec
pop
inc
in
dec
dec
orps
and
dec
cmpb
add
pop
sbb
adc
ljmp
dec
mov
lds
xchg
sarb
adc
aas
and
pop
sbb
dec
jae
dec
sbb
push
jb
sub
or
out
stos
int
add
cwtl
outsl
push
add
test
mov
pop
inc
jae
jp
mov
test
adc
mov
mov
inc
push
mov
inc
mov
inc
sub
pusha
mov
pop
imul
dec
nop
dec
lods
push
xor
addr16
sub
lahf
outsl
insb
gs
outsl
cmp
rclb
shll
imull
imul
arpl
xor
ss
cmp
sbb
movsb
dec
or
mov
lea
xchg
inc
pop
aas
dec
jl
inc
push
jmp
dec
sete
sub
inc
fsubp
stos
jge
add
push
sbb
and
into
sbb
or
jb
add
dec
fisubrs
sub
mov
add
cmp
out
or
sbb
mov
mov
jbe
lahf
push
mov
das
xor
pushf
add
sbb
js
scas
mov
in
icebp
enter
js
xchg
xchg
xor
mov
inc
push
add
inc
push
dec
add
push
cmpsb
dec
mov
inc
adc
fs
repnz
dec
jo
mov
lcall
jge
xchg
xchg
push
pop
sbb
cmpsb
imul
cmpsb
or
pushf
cs
sub
xchg
aaa
inc
add
inc
int3
push
add
mov
and
pop
xor
xor
adc
test
sub
pusha
enter
mov
sbb
inc
cmp
fcompl
and
xchg
ja
push
mov
mov
sbb
xchg
daa
loopne
mov
pop
jb
mov
sbb
and
jb
sub
orl
lods
test
and
sbbl
in
inc
push
and
adc
add
nop
sbbl
and
add
nop
xor
add
inc
xchg
pusha
ret
push
movsb
outsl
cmp
inc
pop
in
push
lods
shlb
and
jb
pusha
test
pop
jb
mov
mov
add
or
lea
movsb
mov
sbb
or
and
push
in
cmp
push
mov
in
mov
fildl
pushf
sbb
sbbl
sbb
sbbl
inc
fwait
icebp
pushf
pushf
dec
shrl
jl
mov
xor
shll
iret
fcoml
fstps
add
flds
push
adc
push
cmc
add
dec
shll
mov
shll
push
bound
jl
rcrl
push
leave
xchg
sahf
xor
shll
sbb
ss
shll
ja
mov
lcall
pop
jecxz
pop
ss
lock
or
pop
and
cmpsb
imul
cmpsb
imul
add
sub
sbb
xchg
dec
cs
sbb
ljmp
mov
dec
enter
add
or
dec
push
sbb
shrb
inc
bound
or
add
andl
fwait
xchg
mov
sub
or
ficomps
hlt
push
test
cmpsb
add
push
out
hlt
pop
in
pop
inc
jl
aas
pop
sub
inc
movsb
sbb
and
and
cmpl
cmpl
and
inc
and
rcll
pop
in
xlat
adc
inc
andb
push
inc
rorb
pop
xor
outsb
xor
scas
cmp
mov
push
fmull
sub
sbb
flds
cmpsb
imul
sub
inc
rcrl
xor
or
adc
sub
test
pop
inc
or
lret
cmpsb
fnstcw
sub
fiadds
cld
pop
sub
int
imul
jo,pn
and
adc
mov
push
pop
or
jo
dec
push
dec
and
ss
out
jg
add
xlat
push
loope
arpl
inc
xlat
add
mov
inc
jno
inc
cmp
add
fidivs
lret
pop
pusha
mov
fdivr
and
and
in
pop
or
add
mov
daa
add
adc
xchg
mov
inc
dec
mov
orb
add
sub
out
imul
add
pusha
add
shlb
ret
adc
or
pop
add
sub
lods
jecxz
into
orb
mov
lds
daa
hlt
sub
scas
ret
mov
pop
adc
adc
jbe
iret
out
ror
cmp
push
inc
roll
jg
sbb
inc
sbb
adc
mov
and
pop
je
add
loope
dec
loope
sub
mov
stos
inc
pusha
sti
and
inc
dec
adc
jle
lods
mov
cmpsl
movsl
pop
pop
xor
or
fcmovb
jmp
sub
and
enter
mov
lahf
sub
arpl
xchg
dec
push
cmp
cmp
adc
inc
sbb
add
pop
jbe
jg
push
push
xor
inc
mov
std
adc
add
aam
ja
and
add
testb
jnp
inc
aaa
cmpl
adc
add
pop
adc
lods
push
jnp
pop
gs
pop
scas
sbb
fcoms
int
cmpsb
cmp
inc
adc
cmp
sbb
adc
add
call
or
mov
pop
pusha
pop
out
stos
or
xchg
pop
xor
inc
push
add
test
sbb
fldl
daa
push
lock
mov
mov
jmp
adc
insl
popf
add
inc
dec
sbbb
push
aas
adc
pop
adc
xchg
push
mov
xchg
cmp
inc
or
in
sbb
mov
repnz
sbb
jns
sub
add
and
fisttpl
mov
pop
shrl
xchg
mov
cmp
jnp
das
leave
mov
or
push
sbb
dec
arpl
pusha
mov
push
rcrb
shlb
popf
and
xor
mov
adc
jno
nop
pop
push
inc
sbb
jmp
pushf
add
cmpsl
adc
dec
sub
mov
mov
or
add
popf
jns
adc
cmp
and
sub
inc
xor
dec
jle
lea
xor
andl
out
test
push
loopne
cmp
mov
pop
out
mov
leave
gs
or
or
or
sbb
push
dec
jecxz
loopne
or
add
add
ljmp
int
push
xchg
and
sub
cltd
push
test
insl
sbb
ret
sarl
add
mov
inc
sub
popa
inc
test
xchg
add
enter
cmp
jne
mov
mov
ret
lret
mov
sbb
jl
and
out
dec
push
or
dec
mov
hlt
add
mov
pop
add
inc
or
mov
rolb
subb
mov
rorb
or
outsb
and
cmp
sbb
mov
outsl
jge
push
adc
xchg
mov
in
mov
or
sub
xor
push
push
inc
cmp
adc
fldt
leave
lds
adc
pop
shrl
jno
dec
push
pop
inc
add
fmuls
lds
add
xlat
mov
adc
enter
jb
sbb
nop
or
adc
mov
xlat
in
inc
jecxz
lret
jne
mov
ret
push
paddsb
cmp
mov
lret
insl
jne
fs
xor
push
mov
and
sbb
mov
adc
and
arpl
or
or
int
insl
sbb
inc
or
inc
dec
jnp
mov
push
jb
cmp
mov
jne
inc
add
mov
or
cltd
pusha
int3
xorb
xchg
and
or
cld
fisttps
or
es
and
cmpsl
add
inc
inc
nop
xchg
add
jb
sbb
fs
mov
dec
and
sub
gs
cmp
insb
mov
cltd
pmulhuw
xor
push
sbb
push
imul
pop
arpl
add
testb
mov
cmp
decb
lds
jo
adc
pusha
mov
xor
mov
xchg
mov
and
push
adc
dec
cmpsl
inc
dec
sbb
dec
adc
add
movsl
subb
sub
jbe
xor
and
jnp
mov
nop
dec
xorb
inc
mov
orl
jo
es
nop
ja
mov
jg
test
pop
jno
xor
das
orb
or
clc
jne
ljmp
sub
jns
xchg
mov
pusha
xchg
adc
dec
mov
or
pop
and
mov
mov
add
add
pop
dec
fwait
sahf
push
adc
in
and
push
cmp
push
sbb
pop
xor
add
cmp
add
push
adc
and
ret
adc
in
jmp
out
add
sti
or
adc
mov
es
leavew
inc
jmp
je
push
inc
mov
rorb
inc
out
dec
mov
gs
sbb
popa
movw
adc
scas
sti
push
push
or
movl
loopne
outsl
push
add
lcall
ja
sbb
sub
xor
adc
outsb
push
cmp
pop
push
xchg
dec
out
or
lea
xor
and
mov
pushf
add
in
sbb
fisubs
jne
insl
dec
add
mov
inc
ret
or
mov
mov
push
inc
cmp
and
mov
push
mov
sbb
mov
push
push
call
push
cmp
ja
xchg
test
arpl
pop
arpl
mov
pop
or
gs
dec
mov
sub
xchg
call
mov
pop
jg
movsb
mov
std
ret
movsb
and
pop
or
mov
sbb
mov
cld
outsb
jb
adc
push
inc
sahf
insl
mov
test
push
push
iret
jle
mov
inc
xchg
in
pop
mov
mov
sub
subl
dec
cmc
add
cltd
mov
cli
or
push
and
aad
adc
add
jns
call
testb
mov
adc
jle
jmp
andb
xchg
sub
shll
mov
xchg
stos
mov
or
dec
les
dec
je
jmp
scas
add
cwtl
mov
sub
add
or
out
pop
xor
push
je
sbb
inc
add
aam
push
mov
into
and
jne
ljmp
push
dec
lea
pusha
lock
sbb
or
dec
add
loop
sbb
xchg
in
test
je
xor
inc
out
aas
dec
mov
and
push
dec
add
push
call
pop
or
shrb
pop
fsub
push
js
lock
add
pop
jle
leave
sub
in
mov
mov
xor
dec
mov
addr16
jle
and
out
lahf
push
cmp
incl
pop
adc
jl
push
sbb
fisttps
add
arpl
push
nop
jmp
dec
mov
fcompl
pushf
data16
inc
outsl
adc
and
clc
popf
ret
fisubrl
mov
cmp
add
inc
add
bound
xchg
je
xor
fbld
jb
xchg
inc
pop
fcmovnb
mov
xor
addr16
add
mov
ljmp
aad
mov
jne
sub
add
adc
pop
pop
ljmp
arpl
adc
nop
test
pop
sbb
enter
movsb
xor
xchg
and
inc
push
or
cmpsl
in
xchg
fcomip
mov
pop
imul
add
push
les
std
add
jns
and
loop
sbb
adc
adc
lods
data16
fadds
add
je
jg
insl
call
je
popa
arpl
dec
sub
inc
aam
mov
popa
sbb
dec
push
xor
add
push
int
test
mov
mov
mov
push
xchg
aam
dec
add
movsb
lea
adc
add
mov
sub
mov
jp
mov
jo
add
inc
lods
push
aaa
in
stos
and
xor
jo,pn
mov
push
add
sbb
sub
imull
xor
and
mov
mov
sar
dec
ret
movsb
loopne
jne
push
adc
arpl
jo
push
addb
and
or
adc
xchg
inc
jo
cmp
rolb
adc
lds
jo
cs
outsl
and
sbb
popa
test
imul
push
idiv
dec
sub
xor
xor
lret
lret
mov
ret
and
add
scas
and
and
xlat
cmpb
push
xchg
jnp
int3
roll
ret
dec
inc
stos
pop
xchg
test
add
add
push
dec
mov
dec
add
jne
mov
cs
xchg
push
loop
sub
in
rclb
mov
cwtl
in
sub
cmp
sub
into
rcl
iret
and
repnz
loope
sbb
cmp
sbb
add
out
or
movsl
xchg
adc
scas
sub
pop
rclb
lock
push
sbb
push
dec
jae
push
shlb
loopne
pop
jb
push
mov
lock
sub
mov
dec
xchg
lret
or
mov
scas
daa
pop
jmp
push
insb
test
and
xor
adc
mov
mov
jmp
cmp
or
sbb
cld
mov
subb
jg
es
pushf
js
pop
jle
fcompl
loopne
pop
ret
or
es
dec
pop
jl
bound
insb
pop
sub
and
add
pop
mov
test
pop
negl
outsb
cmova
insl
out
aad
add
jnp
jmp
sbb
jmp
mov
push
movsb
sbb
insl
popf
sbb
addb
es
ret
sub
pop
iret
out
or
and
fptan
xchg
mov
aad
mov
dec
adc
in
frstor
mov
repz
inc
icebp
ja
inc
lcall
mov
dec
jnp
mov
popa
lahf
add
call
cld
sbb
and
daa
sbb
andb
lret
adc
adc
andb
sti
cmp
repz
lret
mov
ss
je
and
sbb
mov
out
lret
aad
and
out
roll
sub
cmp
pop
pop
sar
xchg
lret
or
xchg
dec
lahf
jmp
cmp
jmp
pop
cmpl
inc
mov
xor
dec
sti
sub
or
or
adc
mov
icebp
loope
adc
sbb
mov
mov
aam
movsl
push
or
js
mov
push
je
in
test
cmpsl
inc
push
jl
repnz
jmp
gs
sbb
push
nop
popf
mov
xbegin
cs
xchg
mov
sub
and
imul
inc
sti
fcomps
out
dec
test
mov
pop
sub
or
int
adc
inc
test
scas
insl
inc
sub
pop
and
ret
test
or
outsb
sbb
and
aaa
loope
adc
mov
dec
and
test
adc
mov
xchg
in
inc
test
and
fadds
imul
rorb
sbb
bound
imul
addr16
mov
das
sub
cmp
scas
push
inc
pop
inc
not
or
push
mov
fstpl
or
sub
outsl
bound
dec
dec
mov
loope
and
dec
sbb
sub
stos
addb
jo
cwtl
and
xchg
pop
fsubrs
inc
pop
add
sbb
movsb
xor
les
and
add
pop
push
dec
pop
insb
or
pop
sub
push
cmp
jge
mov
xor
push
jnp
repnz
sub
ds
push
inc
adc
fcmovb
and
movsb
lods
dec
cltd
mov
pusha
orl
movsl
outsl
mov
test
rcrb
cmpl
fsts
mov
or
imul
pop
jo
enter
dec
fs
imul
add
adc
cmpl
sbb
jb
mov
inc
xchg
mov
sbb
insl
cmp
sbb
push
mov
ss
ss
loopne
into
inc
xor
inc
and
leave
ss
movzwl
or
cmp
sub
xchg
iret
dec
stos
or
inc
shlb
xor
inc
loop
cwtl
sub
push
inc
shlb
adcb
pop
js
fsubrs
lahf
sahf
loopne
pop
cmpsl
xchg
or
sbb
mov
loopne
push
cmp
test
fsubs
aam
mulb
mov
out
fs
cmp
push
lcall
test
push
shrb
dec
loope
push
inc
xchg
rorb
cmp
jo
add
jne
mov
dec
jbe
enter
popa
xor
clc
clc
gs
sub
mov
and
fadds
cmp
call
mov
loop
pop
pop
sbb
pop
push
pop
cmpsb
and
adcl
pop
incl
add
xchg
cld
cmpb
fwait
inc
add
lret
dec
pop
add
jmp
flds
fmuls
fcmovnu
lahf
lret
pop
mov
flds
aaa
fsubrs
inc
decb
fcomps
inc
lahf
or
mov
rcrl
aaa
xchg
pushl
add
add
mov
jns
or
xor
xor
insb
xor
insl
pop
pop
mov
adcl
add
imull
outsl
adc
adc
aam
out
push
sub
rcrb
test
ficoms
cmp
aaa
jo
or
das
mov
push
popa
in
add
sbb
or
xor
retw
dec
push
add
andb
lea
inc
xchg
les
or
push
sbb
xchg
outsl
cmp
mov
sub
lock
sbb
pop
mov
mov
arpl
imul
xchg
mov
int3
adc
push
inc
imul
mov
adc
add
cld
add
mov
add
or
ret
sbb
inc
pop
subb
and
adc
cmp
mov
sbb
rorb
push
xchg
pop
jno
push
push
test
mov
lock
out
pop
lock
sub
mov
add
sbb
aam
dec
loopne
outsl
xchg
xor
push
sahf
mov
out
enter
add
xchg
mov
xor
imul
mov
xchg
cmpsb
imul
xor
pop
in
xor
call
push
into
pop
cmp
enter
fwait
xor
bound
repz
adc
push
aaa
lret
xor
sbb
test
mov
fcoms
jmp
scas
lret
and
insb
imul
in
fmuls
or
adc
repnz
dec
pop
cmp
adc
adc
or
add
movsl
or
leave
jecxz
pop
out
mov
inc
gs
test
call
push
sbb
and
adc
or
push
fs
aaa
lret
sub
shlb
adc
int3
or
push
cmp
pop
jae
xchg
ss
mov
and
dec
bound
int3
push
sarb
aaa
or
pushf
adc
vmwrite
std
or
sbb
sub
jno
and
stos
aam
ds
or
mov
mov
xor
mov
mov
push
rol
inc
xchg
mov
pusha
mov
push
nop
mov
push
mov
fistpl
push
repnz
imul
add
pop
insl
sbbb
pop
lock
cmp
pop
mov
mov
cmp
ja
orl
pushf
sub
in
lret
and
lock
add
les
adc
add
adc
aaa
mov
or
push
dec
fildl
pop
hlt
xchg
roll
jb
sub
lock
arpl
push
jne
jb
jbe
xorb
or
sbb
pop
adc
and
mov
je
adc
inc
je
add
and
cmp
out
es
jp
cmp
fisubrl
adc
sub
mov
cmp
adc
xchg
cmp
push
movsl
imul
jge
cmp
inc
pop
leave
dec
mov
inc
add
sbb
jnp
aas
pop
cmp
into
and
adc
mov
adc
cmc
cmp
dec
jecxz
lfs
inc
mov
cmp
dec
jno
jg
mov
stos
lret
stc
xchg
cmp
mov
mov
cmp
cmp
imul
push
je
add
lock
mov
aas
inc
or
loopne
outsl
fs
inc
fimull
sbb
sarb
mov
mov
rolb
inc
xor
fiadds
jbe
pop
and
outsb
dec
pop
roll
adc
or
push
addb
push
cs
dec
clc
inc
add
test
inc
adc
and
ja
insb
dec
popa
sub
andl
ljmp
enter
mov
push
movntps
and
and
add
or
dec
jnp
fimull
push
incl
or
aas
dec
ljmp
repnz
fisttpll
xchg
push
sahf
je,pt
and
sub
mov
cmp
scas
mov
pop
jo
jle
xchg
lock
push
jl
pop
inc
repz
mov
inc
xchg
in
add
and
inc
inc
add
loope
xchg
imul
imul
xor
in
add
adc
inc
cltd
popl
and
out
inc
cmp
jne
push
and
add
mov
sarl
fidivrl
push
enter
sarl
xchg
ds
push
popa
fistl
ds
sbb
outsb
xchg
fcmovnu
jge
xor
les
vxorps
cmp
filds
incl
xor
push
inc
ret
mov
inc
sub
mov
push
sub
inc
cmp
lods
in
test
push
push
cmpb
rorb
mov
xor
dec
adc
cmpsl
xor
mov
loope
test
mov
add
shlb
insb
dec
inc
ja
sub
jb
lock
fmull
jmp
das
and
push
into
sbb
movb
mov
cmp
cwtl
cmpsb
pop
pusha
adc
push
push
call
add
sub
xchg
xchg
adc
lds
loopne
lds
add
inc
mov
ja
inc
adc
bound
add
sub
sbb
inc
adc
into
sbb
push
adc
int3
adc
inc
cs
add
daa
dec
loop
and
add
add
cmp
dec
ret
cs
sbb
push
popf
cmp
loop
cmpsl
js
inc
pop
aaa
inc
ret
mov
mov
leave
mov
dec
xchg
inc
insb
mov
push
sbb
add
xchg
inc
das
cmp
xchg
jo
push
jb
fdivrs
pop
jb
dec
outsl
or
in
mov
adc
inc
cmpsb
in
push
js
js
stos
gs
out
dec
cmp
inc
or
test
inc
inc
inc
and
pop
test
aaa
inc
fadd
mov
ret
loopne
mov
mov
cmp
pop
in
add
add
mov
data16
lahf
outsl
ja
add
and
xlat
sbb
ret
sbb
mov
dec
pop
mov
pop
xchg
mov
ret
dec
fidivl
das
inc
xor
xlat
inc
push
and
dec
mov
cmpl
imul
and
adc
fs
jns
call
pop
pop
sti
int
adc
sub
cmpb
jbe
add
xchg
xchg
fucomp
xchg
hlt
sbb
enter
mov
add
inc
cld
sbb
mov
push
adc
inc
cs
cltd
and
and
loopne
push
pop
push
in
inc
adc
jne
and
jbe
imul
or
mov
incl
and
pop
or
and
xchg
xchg
ljmp
cmpsl
flds
in
cmp
inc
jl
ds
jle
inc
inc
cmp
cmp
inc
inc
push
push
push
outsl
mov
scas
sub
call
test
icebp
jbe
adcl
insb
data16
cld
fisttpll
push
inc
outsl
jae
push
outsb
imul
cmpsl
imul
insb
jae
aaa
add
or
mov
adc
and
rorl
push
adc
add
scas
xor
nop
pop
add
repnz
add
popf
jl
pop
xchg
dec
inc
les
or
mov
push
and
sbb
sub
xchg
inc
xor
push
inc
orl
outsb
pop
aad
mov
sub
int3
push
mov
push
or
ret
xchg
adc
gs
pop
fstl
push
inc
inc
shrb
in
je
pushf
inc
xchg
xor
adcb
fmuls
and
adc
add
mov
dec
inc
cmp
scas
push
pop
sub
push
xchg
xor
jo
and
add
mov
jl
andb
imul
xor
dec
gs
add
jnp
cmp
pop
adcb
inc
fists
add
or
push
iret
movsb
jle
inc
repnz
jmp
pop
jp
add
mov
and
xchg
inc
xchg
pop
adc
adc
lds
xor
xor
sub
sbb
inc
adc
mov
jg
cmp
and
mov
and
inc
inc
aad
or
daa
scas
movsl
or
mov
dec
jl
stos
xor
adc
sbb
loopne,pn
pop
test
das
call
je
add
sarb
shll
xchg
mov
add
test
pop
inc
es
inc
or
lret
pop
imul
mov
dec
jne
insb
and
bswap
sbbl
push
cmc
and
mov
aam
in
xor
and
or
pop
test
mov
loopne
sbb
rcr
push
mov
mov
daa
mov
xor
lret
jge
js
xorl
adc
mov
insl
sbb
jo
test
repnz
cmpsl
cmp
dec
push
inc
dec
out
test
inc
mov
sub
push
sub
mov
test
je
add
popa
andl
mov
inc
data16
cmpsb
or
jae
daa
add
es
fs
cmp
sub
adc
or
test
jb
rorb
daa
faddl
mov
add
ret
sbb
adc
nop
dec
mov
movsl
add
sub
jbe
cmp
adc
inc
sub
sbb
pusha
or
jns
cmp
xor
call
addl
add
or
ljmp
call
pop
jns
push
nop
outsl
loopne
or
shl
fwait
pop
lock
add
lret
add
xchg
mov
inc
pop
ret
movsb
inc
sbb
push
pop
les
add
sbb
mov
jg
arpl
pushl
mov
jb
add
dec
push
sub
sub
sbb
das
mov
dec
cmp
es
mov
dec
adc
inc
dec
push
and
push
pop
dec
jl
nop
mov
pop
shll
or
cmpsb
imul
xchg
iret
mov
and
cmp
inc
push
jmp
mov
jmp
pop
mov
cld
ds
inc
call
sbb
pop
push
shrl
sbb
sub
leave
cs
push
rclb
mov
nop
push
clc
dec
in
jge
shrb
push
mov
inc
add
enter
enter
enter
or
and
mov
xor
outsl
sbb
sbb
or
xor
inc
pop
xchg
hlt
loopne
push
inc
sbb
adc
js
sbb
les
mov
dec
xchg
mov
mov
into
in
xchg
mov
fnsave
or
in
sbb
and
sbb
jp
xchg
adc
pop
sub
mov
leave
xchg
std
mov
les
mov
mov
lock
mov
or
in
mov
mov
add
pop
fmull
pop
adc
push
sarl
inc
adc
inc
imul
adc
stos
sbb
cwtl
jo
aad
sti
and
fwait
mov
outsb
or
filds
outsl
xchg
lret
fcoms
mov
mov
ja
cmp
lods
pusha
sub
mov
cmp
push
fstpl
fwait
mov
add
gs
and
leave
mov
push
fisttps
leave
aad
adc
adc
push
cmp
sub
and
or
loopne
pop
das
das
test
sub
add
or
mov
das
fs
jns
inc
push
inc
movsb
pop
adc
pop
push
sbb
fsubp
push
pop
fstpl
xchg
gs
add
faddp
lret
js,pn
or
adc
das
ret
arpl
lret
push
test
and
in
out
mov
pop
xchg
jle
in
mov
cld
xor
pop
xor
outsl
jecxz
pusha
lods
gs
bound
hlt
test
add
sub
push
sti
jbe
lock
scas
push
add
or
jle
stos
rcrl
pusha
movsl
cli
movsb
mov
mov
mov
test
pop
pop
lock
pushf
mov
add
inc
hlt
cwtl
lcall
xchg
cwtl
in
inc
xchg
or
add
cs
inc
popf
add
gs
je
adc
iret
sub
sahf
imul
xchg
sub
test
nop
sbb
aas
nop
mov
xlat
nop
adc
adc
lret
inc
jle
mov
ds
enter
inc
mov
repnz
or
xorl
test
test
into
gs
sbb
fisttps
add
or
loopne
pop
inc
int3
cmp
add
jns
and
fsubrl
sbb
mov
ret
mov
and
fcompl
sbb
xlat
sbb
loop
xlat
or
mov
int3
add
sub
jne
insb
xlat
xchg
push
mov
mov
sbb
xor
mov
rcl
and
adc
xchg
in
pusha
mov
sub
and
rolb
dec
test
jns
hlt
xor
add
sub
call
adc
adc
int3
aaa
fadds
popf
push
addr16
pop
pushl
fsubl
into
pop
popf
cmpsb
lods
lods
or
push
add
push
cltd
les
pop
faddl
rolb
mov
mov
mov
aam
inc
sbb
aaa
sub
add
cmp
and
cmp
push
mov
or
or
and
lds
push
dec
loope
or
mov
pop
enter
pop
mov
lock
scas
and
jb
add
push
dec
enter
les
inc
cmp
sbb
lea
dec
and
push
inc
movsl
pop
mov
pop
adc
jmp
lret
push
add
repz
sbb
dec
jle
sbb
jb
iret
nop
xorb
adc
or
mov
movd
xor
imull
je
or
inc
pop
push
notb
pop
sub
mov
mov
testl
in
mov
xchg
pop
inc
add
cmpsb
push
shlb
and
pusha
out
pop
inc
cmpb
jo
inc
mov
mov
cmp
int3
mov
sub
aas
rorb
test
inc
daa
dec
xchg
push
testb
inc
insl
pop
mov
xor
xchg
cmp
sub
jo
or
dec
test
das
out
and
jle
bound
test
mov
jne
xchg
dec
pop
mov
int3
test
mov
icebp
nop
addl
push
mov
sbb
aas
jl
adcl
sub
cmp
pop
daa
es
and
test
and
mov
roll
add
clc
loope
setns
jbe
dec
mov
xor
fsubrl
movl
aaa
mov
adc
mov
jo
aad
leave
faddl
cmpb
mov
push
int3
movsb
mov
xchg
push
xor
outsb
sub
or
xchg
sub
imul
add
in
sub
pop
xchg
mov
add
and
outsb
add
addb
rcll
or
ret
aaa
into
lret
jle
mov
movb
sbb
imul
xchg
pop
jb
mov
xchg
cmp
imul
mov
add
push
popa
add
adcb
ret
jecxz
fistpll
pop
xchg
adc
add
stos
ret
add
add
or
or
xor
imul
add
add
push
or
pop
and
adc
jo
ficompl
and
add
and
inc
add
add
xchg
sbb
sbb
shrb
jg
data16
insl
inc
adc
insl
sbb
xchg
sub
xlat
add
dec
fidivrs
push
adc
push
dec
je
xor
push
outsl
push
rcr
loopne
pop
setl
fcomps
inc
dec
test
sbb
pop
and
pop
jo
inc
add
xchg
and
icebp
imul
xor
push
xor
jne
cmp
inc
addr16
sub
imul
movsl
or
or
cmpsb
in
lods
jns
xor
push
mov
cs
adc
nop
hlt
pop
pop
mov
inc
scas
push
sarb
and
lcall
leave
pop
in
popa
inc
mov
adc
imull
rcl
psubb
mov
incb
sbb
dec
xchg
lods
out
sbb
shlb
hlt
hlt
ret
int
pop
loopne
jbe
fcomp
adc
cld
scas
cmp
inc
icebp
add
push
mov
xchg
xchg
nop
push
or
and
push
and
aam
xor
test
xchg
or
jge
xorb
dec
mov
cltd
sub
nop
inc
out
dec
outsl
addr16
sbb
add
or
ljmp
xchg
sbb
add
cltd
mov
adc
syscall
push
sbb
pop
adc
adc
cmp
sbb
or
inc
js
addr16
aaa
in
add
inc
or
fdiv
inc
push
sub
js
jae
aaa
jmp
mov
cmp
or
add
es
mov
in
pop
pop
push
dec
or
and
aas
inc
pop
inc
mov
aaa
outsl
aam
mov
mov
add
xor
lret
xchg
mov
push
dec
sbb
xor
enter
scas
faddl
push
arpl
add
or
or
xchg
mov
jbe
cmc
lret
into
pusha
or
inc
xchg
inc
or
incl
and
ret
inc
adc
mov
dec
addb
or
hlt
ja
lock
push
pop
or
test
mov
and
mov
cmpsb
add
insb
push
push
daa
xor
push
push
shrb
add
call
int3
push
movsb
pushf
xor
outsl
inc
jg
jo
nop
clc
cld
addb
xchg
je
loopne
lret
push
jmp
adc
sub
lea
adc
pop
mov
mov
pop
leave
add
inc
pop
ret
adc
push
loopne
dec
add
aas
and
cmp
push
pop
repz
mov
out
sbb
or
ss
adc
push
das
sti
dec
outsb
add
ja
andl
adc
sbb
push
push
add
fs
add
sbb
fstpt
mov
in
mov
gs
dec
lcall
add
popf
outsl
pop
push
inc
and
mov
cmpsb
roll
or
add
outsb
sarb
pop
bound
mov
in
sti
sub
lods
adc
push
and
pop
cs
sub
ja
cmp
lods
arpl
inc
xor
dec
or
or
cmp
shld
xlat
test
inc
insl
js
jl
fldt
inc
ret
lods
inc
es
add
dec
cwtl
or
stos
daa
jb
inc
cmpsb
jns
mov
push
and
cmc
mov
mov
aam
inc
jmp
jge
pop
fst
fsubrs
cmp
inc
clc
jmp
in
pop
sub
fxtract
mov
mov
pop
jmp
int
lea
pop
inc
dec
push
imul
jl
movsb
in
xchg
addr16
rorl
aaa
mov
insl
xchg
stos
push
inc
inc
push
aad
rolb
lods
jg
pop
push
sbb
dec
or
hlt
xchg
inc
xchg
lods
lea
fs
ret
cmp
mov
popa
and
push
outsb
inc
xchg
ja
sbb
lods
add
gs
dec
sub
sub
adcl
lea
mov
xchg
in
jbe
mov
das
pop
in
imul
xor
inc
sbb
bound
mov
mov
adc
push
add
cli
nop
fisubs
or
jl
mov
mov
imul
fldl
mov
cli
push
pop
cmovbe
sub
pop
sbb
popa
mov
sbb
enter
enter
mov
lock
push
dec
adc
fmuls
repnz
mov
sub
lahf
fcoml
mov
fldcw
xchg
jl
int3
jge
or
xchg
rcrb
int3
mov
unpcklps
in
and
add
call
sub
jne
inc
ds
push
imul
jecxz
nop
fdivrl
push
inc
pop
dec
push
pop
insl
lods
or
shll
add
je
leave
andl
or
sarb
jl
enter
enter
sbb
inc
je
push
mov
int3
insl
in
es
repz
inc
insb
aad
loope
inc
or
repnz
stos
shlb
enter
sar
loop
pop
adc
mov
add
jns
mov
add
or
xchg
jns
ret
jo
mov
pop
xchg
aas
add
mov
scas
and
lods
or
pushf
sbb
shr
sbb
mov
outsl
add
push
add
and
cwtl
gs
mov
leave
out
xor
cmp
movsb
daa
add
dec
jnp
scas
xor
nop
aas
insl
push
mov
mov
into
pop
loope
je
cmpsl
inc
adc
js
inc
push
sub
or
or
add
or
sub
jae
cmp
mov
in
loopne
dec
or
push
mov
enter
mov
mov
mov
jo
xchg
dec
push
decl
inc
arpl
add
in
enter
cmp
jno
orb
mov
push
lods
negl
in
jo
jne
fsubrs
popf
push
test
pop
lods
mov
jnp
and
stos
add
mov
adc
fcomps
ss
sbb
mov
xchg
adc
xor
fsubrl
inc
xchg
int
jge
xchg
fcompl
outsb
ja
movsb
and
mov
imul
and
je
or
cmpl
xchg
nop
pushf
inc
sbb
addl
jo
int
ret
mov
fcomp
dec
nop
add
cld
sub
pop
add
push
mov
xchg
js
pusha
inc
dec
adc
sbb
lret
shlb
push
ror
fcomp
fcoms
les
xchg
out
addb
jno
aam
mov
or
or
add
fcoms
nop
test
test
mov
pop
decb
mov
mov
cmp
pop
xchg
gs
inc
inc
inc
inc
pusha
pop
xchg
dec
dec
dec
dec
mov
dec
lea
adc
jne
xchg
arpl
mov
into
mov
ret
imul
jmp
inc
inc
clc
sub
mov
cmp
cmp
add
sahf
decl
jb
add
daa
cmpb
pusha
popf
sbbl
pop
test
inc
daa
mov
inc
cld
loop
in
jns
or
popa
pop
loopne
cltd
lahf
cld
stc
sub
sub
jecxz
sbb
cmp
sbb
and
je
push
stos
xchg
dec
and
sub
adc
lahf
clc
mov
daa
aas
pop
insl
loopne
push
xlat
pop
jae
fwait
ret
das
js
inc
icebp
cmp
rorb
and
nop
or
clc
into
xchg
and
lods
sbb
adc
iret
cmp
imulb
dec
sub
push
cmp
mov
xchg
sub
lea
mov
sub
push
jae
adcb
pop
inc
pusha
and
outsb
in
push
and
in
loopne
mov
xchg
mov
mov
and
sub
dec
imul
dec
mov
stos
pusha
imull
pusha
xor
sbbb
or
dec
pop
repnz
in
adc
fcmovbe
nop
sub
or
or
cmp
xchg
leave
cltd
adc
psllq
jp
insb
inc
aaa
mov
lea
mov
out
repz
add
jne
xor
fs
ss
in
ja
js
mov
das
pop
dec
mov
adc
jp
xor
pop
dec
clc
out
cmp
dec
outsl
test
sbb
dec
sahf
in
test
hlt
fadds
movsl
mov
jmp
sbb
xor
jecxz
sbb
cld
dec
or
cmp
or
lock
imul
xlat
in
mov
test
mov
push
push
xor
test
lahf
add
in
in
cmpsb
loopne
addl
sbb
enter
add
jb
aam
in
sahf
pop
mov
push
fs
int3
es
xchg
enter
xchg
inc
jo
ror
in
rcl
mov
mov
mov
repnz
lock
out
adc
sbb
xor
mov
or
inc
push
cmp
enter
xchg
cmp
dec
fsubs
pushl
mov
and
push
pushf
adc
xchg
pop
imul
jb
nop
adc
sub
scas
inc
orl
push
jo
mov
dec
xor
xor
lahf
dec
and
insb
and
or
mov
sbb
adc
push
lods
or
mov
inc
addr16
dec
push
sahf
popa
sub
dec
pop
or
inc
inc
add
subb
xchg
movb
or
add
mov
xchg
nop
mov
adc
add
nop
repnz
loop
xor
mov
and
mov
pop
lea
sbb
jo
jb
sbb
in
mov
push
fmuls
mov
push
js
int3
lcall
sbb
or
in
mov
addr16
sub
and
push
bnd
push
push
mov
arpl
ror
jnp
imul
nop
test
jno
mov
sbb
mov
jl
mov
inc
sub
subb
loope
push
inc
push
or
push
add
rcrb
aaa
pusha
and
ret
rolb
sbb
adc
inc
xor
add
push
dec
push
mov
dec
add
sbb
bound
repnz
in
jl
hlt
jl
jbe
xchg
sbb
add
cmp
les
repnz
add
and
bnd
inc
mov
test
push
adc
test
adc
xchg
push
mov
dec
addr16
sbb
xor
sub
adc
add
stos
add
xor
adc
sub
stos
fcmove
push
xorb
jo
xchg
mov
fisttpl
add
xor
inc
adc
dec
xchg
jle
inc
mov
sbbl
dec
jg
xor
enter
pushf
out
outsb
or
push
sbb
or
jbe
pop
xor
push
fwait
adc
aaa
cmpsl
shll
jg
push
enter
jg
pop
jb
cwtl
or
jo
inc
and
jle
adc
mov
sbb
ss
inc
in
inc
jo
xchg
dec
lret
inc
cltd
rcrb
pop
sbb
push
pop
cmpsl
fidivrl
lds
into
je
jmp
push
inc
push
push
movsb
hlt
push
out
cmp
sub
incb
int
in
jmp
cmpsb
mov
sbb
rclb
cmpb
movsb
addb
orb
ja
dec
xor
clc
inc
dec
mov
nop
andb
mov
or
inc
data16
loopne
mov
add
and
and
mov
in
mov
jae
lods
adc
push
xorl
dec
scas
into
cwtl
fnstenv
nop
or
rolb
pop
sub
outsb
xor
add
andl
ds
fldl
sub
push
fs
xchg
call
and
sbb
or
mov
cmc
add
fbstp
lret
mov
inc
loope
cmp
add
dec
sahf
dec
adc
test
mov
jne
add
dec
adcl
xor
or
loop
or
add
mov
push
sbb
or
xor
add
cmpsl
ror
add
fadds
call
xlat
inc
push
fcoml
mov
outsb
or
addr16
mov
cs
scas
prefetch
push
and
dec
mov
mov
out
dec
sbb
outsw
cmp
add
xchg
outsl
aad
xor
sbb
fdivl
mov
or
loopne
add
repz
cmp
in
pop
xor
cmp
xchg
mov
inc
in
cmpsb
inc
cwtl
xchg
js
mov
push
movsl
iret
mov
xor
add
sbbl
int
push
es
sub
and
sbb
add
mov
arpl
and
xchg
cmp
mov
test
pop
adc
repnz
sbb
xor
stos
pop
dec
sbb
sbb
and
add
dec
and
cmp
and
lods
shlb
cmp
sbb
add
inc
and
push
outsb
mov
sbb
test
pusha
and
inc
ret
and
add
mov
rolb
cmpsb
push
inc
fstps
movsl
pop
or
sub
xchg
inc
repnz
orb
adc
add
addr16
sti
test
add
or
fwait
sub
mov
pop
pop
inc
or
adc
das
mov
ljmp
pop
xor
add
jb
cmp
dec
aam
pop
int
add
ds
dec
push
pop
les
lret
push
lea
add
js
gs
int
add
ja
popf
inc
loopne
xchg
pop
or
adc
add
pusha
mov
xor
int3
xchg
and
or
fs
xchg
nop
inc
mov
rcrb
ja
xchg
pop
int3
ds
xchg
jg
add
push
lea
pop
xchg
and
nop
call
and
cmp
adc
mov
cmpsb
cmp
pop
sbb
pop
les
push
mov
sub
popa
push
pop
mov
jb
and
xor
pusha
mov
push
syscall
dec
repnz
lea
pop
imul
je
das
xorl
or
cltd
mov
hlt
jp
pusha
mov
movsb
fcomp
add
insl
ret
cmp
mov
or
movsl
add
mov
cmp
addr16
stos
es
ret
adc
in
xchg
inc
dec
cwtl
push
dec
enter
clc
xchg
movsb
xchg
scas
add
xchg
pop
push
sub
out
jbe
lcall
andl
xor
nop
fadds
sub
and
xchg
sbb
in
push
loopne
inc
hlt
imul
decb
mov
loop
adc
inc
repnz
je
scas
leave
rorb
js
mov
mov
rorb
sahf
mov
call
ljmp
adc
lret
sbb
rorb
sbb
ss
add
pop
xchg
or
scas
mov
inc
rolb
or
addb
mov
pusha
add
or
loopne
xor
stc
inc
scas
xchg
or
adc
lods
movsb
cwtl
daa
jbe
iret
dec
cwtl
push
pop
jae
sahf
or
sbb
sbb
adc
or
inc
dec
add
mov
pop
xchg
sbb
sarb
adc
mov
add
enter
movsb
enter
fwait
xchg
dec
pop
dec
pop
xor
push
adc
pusha
jae
inc
pop
xchg
pusha
sub
fsub
inc
push
divb
lock
and
push
faddl
ret
in
dec
lea
or
sub
mov
inc
adc
inc
inc
sub
int
loope
pop
scas
imul
add
push
mov
mov
imul
sub
test
sbbl
cmp
xchg
sbb
cltd
js
fldl
mov
cmp
xchg
inc
adc
dec
mov
adcl
inc
adc
adc
fs
out
in
repz
insb
andl
xor
aaa
iret
pop
xchg
out
dec
rorb
sbb
lea
je
inc
js
inc
jl
lret
jae
dec
adc
lea
xchg
int
adc
or
adc
sub
dec
cmpl
push
orl
mov
sbb
repnz
jbe
and
xchg
addr16
add
sub
pop
jns
je
sub
aas
adc
jbe
mov
mov
ds
push
jl
ffreep
loopne
sub
int3
sbb
or
lret
inc
loope
aam
sbb
sub
cmp
lods
mov
out
shlb
mov
add
pop
shufps
xchg
xchg
adc
js
lods
cmpsl
mov
ss
sbb
mov
add
bound
cs
in
subb
pop
fdivs
int3
sbb
adc
mov
ret
movsb
mov
out
jne
test
or
test
loopne
inc
mov
xor
sub
and
push
sub
ljmp
jge
or
shlb
push
cmc
mov
mov
iret
xchg
loop
in
cmp
adc
or
push
ja
xchg
test
pop
cld
push
jnp
add
lea
adc
inc
cs
loopne
jb
dec
pop
imul
add
adc
mov
sub
stc
js
inc
imul
jecxz
push
xchg
sbb
add
inc
into
xchg
dec
je
xchg
ud2
dec
ljmp
add
push
test
push
or
sbb
adc
pop
mov
xor
std
imul
jmp
cmp
and
xchg
jmp
and
or
pop
pop
inc
push
push
popl
jmp
in
arpl
add
sub
call
jbe
add
dec
cmpsl
jo
push
sbb
and
js
ret
mov
sbb
cmc
adc
sub
into
sarb
scas
movsb
popa
xchg
pop
scas
add
mov
add
cs
xchg
cmp
mov
adc
xchg
loop
and
lock
stos
mov
mov
inc
rolb
sbb
sbb
out
inc
pop
and
mov
pop
nop
xchg
jmp
int
cmpsl
add
xor
sub
hlt
nop
in
pop
sbb
subb
mov
fiadds
outsl
inc
dec
mov
or
out
jne
js
lcall
xor
flds
addb
jp
roll
jno
insb
adc
repnz
push
orb
pop
sarb
adc
jo
mov
add
aas
mov
push
and
cmpb
fisttpl
and
sbb
bound
push
sbb
mov
mov
jns
cmpb
xchg
mov
or
test
xchg
push
lret
mov
and
add
jecxz
jne
and
cmpsb
push
popf
and
or
shl
jo
imul
ret
fs
xor
add
popa
mov
cmp
fnstenv
popf
inc
xor
sub
lret
xchg
test
pop
or
pop
js
jne
inc
inc
pop
in
push
es
mov
lods
nop
je
mov
fbld
idivl
dec
sarb
dec
lret
mov
mov
int
fs
mov
ss
lock
xchg
cmp
addl
js
add
or
push
outsl
jge
jbe
shlb
enter
xchg
push
js
insl
insb
outsb
cmpsb
jno
pop
cmp
pop
add
push
lds
add
and
mov
mov
lahf
adc
xor
xchg
lea
and
stos
dec
lret
clc
push
mov
push
inc
inc
and
in
jne
jg
shrb
sbb
jmp
or
insl
pop
inc
into
dec
pop
loope
pushf
mov
inc
add
push
mov
int3
je
pop
mov
pop
jle
pop
lds
aas
fwait
inc
lock
inc
xor
and
push
loope
adcb
add
cmpsb
jns
adc
mov
and
lahf
jo
scas
push
or
push
adc
dec
push
fdivrs
sbb
mov
aam
inc
mov
xchg
pop
add
inc
jp
dec
add
mov
or
adc
inc
movb
sbb
and
cmp
mov
xchg
sub
xor
adc
lods
in
xor
popa
adc
pop
push
shrb
out
xchg
xchg
push
inc
mov
je,pt
dec
jno
add
jnp
adc
rcll
popa
sub
nop
cmp
xor
pop
sbbb
mov
sbb
push
inc
mov
clc
jb
add
dec
clc
sub
insl
daa
lahf
xchg
mov
hlt
mov
js
shrl
sbb
js
jmp
jae
popl
jmp
mov
jbe
insb
lcall
or
mov
out
mov
inc
jecxz
sahf
sub
nop
push
mov
mov
push
mov
mov
mov
lods
push
out
sahf
mov
mov
push
adc
repnz
outsl
mov
xor
mov
mov
or
mov
xor
sar
enter
mov
jno
mov
adc
mov
or
das
jmp
or
cmp
cmp
xchg
cwtl
lea
cltd
sub
movl
sbb
fstp
insb
and
mov
movups
inc
fwait
fwait
test
addb
add
mov
iret
in
mov
or
xchg
les
or
adc
adc
imul
and
xchg
cmp
inc
sub
adc
pop
sub
out
add
lods
stc
imul
cmp
inc
cmp
in
ss
or
cmpsb
push
nop
pop
inc
mov
inc
pop
xchg
add
cltd
movsb
in
cmpb
sbb
bound
cltd
pop
or
mov
inc
cwtl
in
out
jl
xor
dec
or
pop
mov
push
add
dec
int3
out
or
sbb
add
xor
xchg
jmp
inc
add
xor
dec
add
insl
and
dec
or
cmp
xchg
movsl
inc
jo
fisttpl
lods
xchg
nop
cltd
fsubl
inc
add
or
add
lahf
xor
mov
and
push
cld
imul
repnz
cmpsb
pop
loopne
mov
pop
and
sbb
inc
inc
call
add
dec
lods
in
xor
cmp
mov
sub
xor
xchg
jg
cmpsb
addl
mov
xor
push
and
incl
lcall
cmp
notl
jge
inc
or
pop
sbb
push
pop
xchg
mov
cmp
enter
cmpsl
and
xchg
test
movsl
add
and
cmpsl
push
nop
mov
sbb
lea
popf
outsb
mov
push
or
xchg
pop
in
mov
adc
or
mov
push
out
sbb
or
pop
adc
sbb
cmovae
xchg
inc
mov
xor
and
outsl
sbb
adc
les
addr16
cmp
movsl
cmpsb
pop
js
iret
aad
pop
test
inc
jb
fsubrl
das
out
and
mov
xor
mov
add
test
push
adc
sbb
mov
or
cmp
mov
enter
test
cmpl
enter
shl
aam
sahf
add
sbb
add
fcoml
nop
out
loopne
in
jns
in
call
sahf
in
push
lock
sbb
xchg
mov
pusha
adc
cmovge
push
mov
adc
adc
jae
outsl
je
dec
xor
and
jb
pop
ss
aas
aaa
add
addb
fcomps
add
insl
fs
aas
push
imul
xor
and
jge
dec
outsl
fs
gs
xor
mov
aas
push
push
xchg
jo
push
xchg
stos
sbb
or
xchg
sbb
sub
inc
leave
int3
rcrb
enter
jmp
ret
dec
lods
jmp
push
ja
lods
jg
rol
xchg
cmp
lods
hlt
xor
dec
mov
mov
lea
jns
addb
xchg
clc
fsubrs
ds
inc
sbb
pop
push
xchg
test
inc
inc
cwtl
ljmp
test
cwtl
dec
repz
adc
inc
add
mov
fnstcw
mov
pop
pusha
clc
mov
mov
push
push
mov
roll
mov
jbe
ret
pushf
inc
xor
adc
sbb
or
jb
pop
in
shlb
in
and
xchg
push
pop
and
daa
nop
xor
add
pop
addb
push
pop
cwtl
pop
sbb
jmp
imul
and
push
call
pop
xor
push
imul
pop
ss
aaa
mov
leave
adc
ljmp
fisttpll
pushf
sub
jle
mov
pop
push
and
add
add
adc
mov
scas
adc
add
add
addb
jb
add
add
inc
scas
inc
add
dec
das
insb
add
insb
adc
rorb
adc
sub
test
sub
addr16
rcrl
jmp
cmp
leave
sub
pushl
or
scas
push
mov
mov
mov
or
mov
add
add
lret
mov
lret
add
cmp
or
pop
pop
inc
cmp
add
pop
sub
leave
stos
ss
call
xor
filds
sbb
sub
icebp
jle
adc
sub
sub
xchg
add
adc
push
and
imul
pop
jge
test
sbb
popa
arpl
adc
pop
or
xor
test
sub
shr
mov
lret
sub
cmp
sub
lods
cmp
and
subb
lods
sub
addb
jo
loope
pop
dec
rorb
pushl
out
mov
rclb
adc
ffreep
pushf
cmp
inc
fildl
add
mov
stc
jl
fmuls
inc
mov
adc
jbe
mov
roll
mov
mov
stc
icebp
adc
cli
repnz
pop
pop
or
xchg
repz
push
pop
xchg
jecxz
inc
cmp
jns
jp
test
pusha
mov
and
adc
pop
leave
psrld
fisttps
push
lea
aaa
popa
cld
sahf
mov
clc
push
mov
mov
pop
mov
mov
addb
inc
cwtl
jne
adc
or
push
scas
lods
lret
les
sbb
mov
mov
int3
cmpsb
cmc
inc
jge
dec
inc
jnp
add
mov
lods
popa
stos
pop
or
cmp
addr16
add
jbe
add
and
int3
int3
xchg
sbb
popf
inc
cltd
ret
aas
and
test
adc
das
adc
dec
cmp
les
and
in
mov
adc
add
mov
inc
inc
push
sbbl
add
clc
add
js
and
mov
push
scas
mov
cmp
xor
test
and
cmp
sbb
mov
sbb
mov
pop
fidivl
inc
into
in
stc
nop
repnz
adc
push
cltd
inc
and
mov
rcrb
xchg
add
push
nop
or
or
lret
add
call
inc
lea
test
cmp
or
je
or
mov
mov
stc
mov
in
into
or
cmpsb
pop
xchg
and
sub
je
pop
or
inc
addr16
inc
fildl
fadds
sub
ret
mov
roll
xor
mov
fmuls
push
sub
and
mov
test
inc
sub
jae
sub
cmp
enter
cwtl
repz
adc
xchg
sbb
xor
movsb
test
dec
add
lock
dec
sbb
sub
push
ss
jnp
cmpsl
outsb
push
sbb
and
or
and
sbb
imul
or
pop
inc
cmp
inc
cltd
je
xchg
sub
add
pop
filds
bound
test
gs
or
pop
out
addl
insb
cmc
adc
popa
and
pusha
or
push
outsl
ror
test
inc
nop
jge
jbe
jmp
xchg
mov
in
andl
add
dec
rorl
add
add
ja
inc
xor
aad
mov
inc
popf
gs
or
aas
mov
xor
xchg
aaa
mov
out
dec
and
fidivrl
aaa
sbb
adc
xor
cmp
test
dec
scas
mov
xchg
mov
pop
pop
je
and
pop
sbb
xor
push
mov
jp
inc
fldcw
xor
sbbb
inc
sub
and
or
outsl
inc
sub
test
inc
cltd
sub
add
test
sbb
inc
or
lods
and
adc
movzwl
shlb
xchg
or
js
or
sti
aaa
mov
add
jne
adc
pop
testb
cmp
orl
lea
faddl
or
pop
or
add
iret
push
fmuls
pop
fbstp
imul
push
push
mov
ret
pop
inc
mov
inc
or
mov
dec
fbld
adc
dec
add
push
lea
adc
push
inc
add
push
push
cmp
or
add
cmc
push
sbb
into
mov
rcl
and
jl
out
js
pop
mov
or
inc
add
add
gs
cwtl
sub
mov
cmp
mov
inc
jmp
sbb
push
cmp
mov
inc
dec
out
jp
cmpsb
sub
int
pop
adc
andb
repz
push
in
and
sbb
shll
mov
pop
add
dec
loopne
jns
add
xchg
xor
in
jo
sub
jne
addb
div
stos
gs
push
dec
xchg
or
xor
mov
inc
xchg
lods
aaa
divl
push
clc
int
mov
pop
or
out
mov
xor
mov
loop
and
adc
or
xor
insl
jle
mov
test
lds
add
dec
jmp
cmpl
mov
push
subl
adc
mov
mov
pop
add
popf
loopne
in
sbb
cmpb
ret
addb
test
or
xor
sub
test
cltd
loopne
aad
add
or
and
lods
mov
xchg
lods
stc
and
xchg
mov
lea
adcl
jnp
push
enter
sub
imul
sarb
xor
mov
xchg
and
inc
inc
mov
popa
sbb
xor
add
cmp
pop
cmp
cmp
cmc
push
or
outsl
push
push
aas
stc
sbb
repz
cmp
push
mov
jg
sbb
cmp
or
in
inc
mov
pop
or
pop
cmpsl
ja
stos
inc
inc
out
sar
push
jmp
push
movsb
sub
adc
nop
push
sub
pop
push
add
xor
subl
movsl
stc
sub
and
push
movl
and
adc
pop
inc
test
mov
xor
sbb
in
adc
mov
mov
xor
add
or
push
movsb
std
push
test
or
arpl
nop
data16
xlat
add
sub
rol
cltd
add
mov
aas
cld
test
mov
mov
cltd
xchg
mov
cld
lea
adc
push
mov
mov
push
or
sub
or
rorl
sub
int3
add
adc
pushf
mov
inc
inc
rol
push
sub
test
inc
stos
aaa
test
pop
push
dec
imul
pop
jecxz
jg
sbb
iret
scas
loopne
in
stos
test
jl
rol
xor
test
sahf
mov
out
test
push
cmpsb
lock
ja
pop
pop
add
xor
inc
pop
sbb
test
add
mov
or
orb
adc
adc
cmp
jbe
mov
dec
mov
dec
mov
nop
push
mov
popl
adc
lahf
cmp
or
jg
mov
and
pop
movb
sub
push
sbb
imul
mov
dec
mov
mov
lock
lock
leave
inc
pop
xlat
aas
adc
push
shll
jle
push
mov
fistpll
push
rorb
adc
adc
popa
hlt
or
repz
cmp
add
dec
and
inc
jnp
lods
adc
push
mov
mov
mov
jg
mov
sub
in
out
movsb
mov
dec
stc
pop
inc
jmp
xorb
movsl
int3
mov
lea
jbe
xor
loopne
add
fldcw
popf
leave
push
mov
jae
aam
xor
sets
xchg
dec
je
imul
cmc
jmp
mov
sub
or
es
and
inc
xchg
mov
mov
add
mov
and
mov
add
jmp
push
orl
push
into
xor
ret
inc
jb
test
insb
sub
mov
cwtl
cmp
push
mov
xor
iret
mov
mov
insb
adc
nop
mov
sub
into
loope
inc
das
push
inc
imul
xorl
outsl
enter
xchg
xlat
arpl
xchg
sbb
insl
xchg
dec
rcrl
ret
jmp
push
add
aaa
adc
mov
jno
sbb
fld
jg
mov
in
loop
mov
add
test
dec
cmp
pop
fdivp
aas
inc
inc
inc
xor
dec
fcompl
pop
cmp
outsb
pushf
pusha
and
xor
mov
push
cmp
sbb
cmp
sti
je
cmp
adc
sub
shll
adcb
add
add
rorb
jmp
hlt
jmp
fstpl
addb
or
insb
into
outsb
lock
cwtl
mov
testb
push
xchg
jle
ja
jae
enter
xor
or
add
add
cmpsb
imul
push
mov
mov
nop
sub
mov
inc
cwtl
sub
or
stos
dec
out
sbb
push
insb
addb
mov
cmp
cmp
mov
or
sbb
stc
xor
inc
push
sub
shlb
and
adc
addr16
add
lret
and
imul
sub
fnstsw
push
je
jns
jb
mov
inc
adc
adc
rolb
adc
js
and
enter
add
sub
mov
fbstp
cmpl
loop
jbe
inc
xor
mov
pop
faddl
adc
mov
add
mov
adc
push
lahf
clc
add
leave
lcall
pop
add
je
shll
scas
scas
mov
out
and
jbe
mov
clc
add
dec
jl
or
jl
jl
push
push
pop
dec
push
adc
pop
clc
ss
xlat
mov
xor
adc
rdpmc
or
or
les
shll
sbb
sub
mov
sub
sbb
enter
push
test
pop
add
outsb
mov
cmp
jbe
movb
adc
mov
pushf
ret
lock
and
xor
movsl
push
lock
and
xor
mov
add
scas
adc
or
lret
add
pusha
xor
or
das
movsl
insb
or
jne
dec
add
sbb
mov
lret
inc
push
or
cmp
stos
add
add
xchg
ret
arpl
dec
repnz
xchg
jge
add
mov
mov
xor
lea
jnp
bound
add
loopne
inc
dec
dec
add
add
mov
sub
and
call
mov
mov
add
lods
mov
mov
pop
and
inc
pandn
pop
cltd
or
hlt
mov
jp
and
inc
lahf
imul
add
sub
dec
or
inc
push
push
movb
jp
in
mov
and
cwtl
cld
sbb
mov
inc
adc
dec
gs
js
pop
push
test
and
mov
pop
call
jge
and
call
adc
aam
pop
cmc
dec
lock
or
ja
cmp
stos
adc
add
mov
jp
push
mov
adc
gs
mov
pop
mov
pop
mov
adc
shr
pop
addr16
leave
mov
ja
loope
cld
jae
pop
cmp
mov
idivl
and
pop
out
mov
cltd
dec
push
pop
out
adc
or
test
and
dec
inc
adc
aam
iret
dec
cmp
sbb
dec
andl
mov
jne
inc
inc
adc
les
imul
cmc
enter
add
sub
fcmovnu
inc
sahf
out
dec
sub
push
shl
jbe,pn
pop
call
subl
adc
fisttps
jg
mov
mov
cltd
idiv
mov
add
fdiv
in
pop
mov
or
or
pop
dec
adc
push
mov
jge
imull
adc
cmp
push
xor
or
scas
sbb
xor
xor
dec
xor
fdivrl
or
mov
ja
add
xchg
outsb
loop
dec
xor
and
jmp
mov
movsl
add
pop
pop
and
js
fimull
sbb
or
mov
mov
ja
fdivs
fisttps
jmp
sbb
cmp
rcrl
lret
jl
adc
sbb
and
add
dec
mov
jl
pop
test
cmpsl
mov
or
mov
imul
push
push
xor
sub
imull
add
aam
addb
sbb
push
popa
add
sbbb
xor
adc
lock
add
cmp
ja
inc
or
add
add
fucomi
cltd
arpl
movsb
clc
jbe
test
xchg
decl
or
dec
xor
cld
sbb
rol
or
push
int
ret
sbb
cmp
mov
sub
jmp
xchg
fidivs
andl
dec
js
and
jecxz
sbb
add
js
fisttps
and
fbld
mov
jbe
pusha
add
pop
pop
pop
or
inc
and
jmp
test
dec
add
movl
sbb
pusha
sub
mov
and
xchg
in
jl
sub
jbe
test
ds
inc
lret
popa
jl
adc
jl
lea
mov
dec
push
mov
add
sub
push
add
push
inc
mov
movsl
in
push
inc
dec
dec
adc
or
dec
sbb
mov
clc
mov
dec
xchg
cmp
test
rcrb
add
add
cld
lret
mov
aas
or
incl
sub
mov
inc
divw
fldt
xor
jne
xchg
movsl
test
jecxz
jnp
aaa
or
push
into
sarl
push
xchg
jo
jb,pt
nop
push
mov
bound
test
mov
adc
cmp
add
push
cmp
outsb
divl
popf
les
mov
pand
push
add
in
ss
insb
lahf
inc
and
add
leave
inc
or
mov
or
lret
lret
adc
sbb
lahf
lahf
lahf
int3
sbb
iret
and
mov
jg
sahf
shlb
cmp
sub
inc
cmp
dec
mov
rorb
and
jge
pop
inc
xor
and
or
push
add
and
cmp
pusha
stos
xchg
call
xor
xor
or
pusha
je
push
and
push
jp
fdivr
add
jle
cs
subb
leave
fsts
dec
cmp
mov
and
pop
dec
jle
and
rorl
sbb
sbb
fcom
and
test
add
test
adc
sub
xor
arpl
jle
xchg
jg
mov
add
fistl
or
mov
subb
jae
mov
cmp
push
or
addr16
insb
mov
dec
or
adc
cmp
inc
lcall
or
fistps
shl
insb
cmp
scas
stos
lret
insl
nop
data16
das
and
dec
neg
mov
fldt
imul
inc
daa
or
hlt
shrb
rcr
insl
inc
jo
dec
jl
out
nop
push
xchg
dec
dec
inc
or
dec
or
in
xchg
inc
movsl
pop
dec
sbb
jmp
sub
xchg
jg
pop
and
jo
orw
std
mov
and
adc
cmp
jns
in
adc
inc
inc
sbb
mov
testb
in
mov
pop
fs
mov
lods
movl
jle
out
xchg
cs
xchg
pop
cmc
add
fcomps
push
xchg
pop
pop
pusha
and
loope
mov
in
testb
out
out
inc
shl
mov
or
mov
or
les
mov
push
or
mov
mov
notl
sub
sbb
cmp
imul
inc
jle
iret
or
loopne
pop
incl
mov
push
ret
incl
dec
add
loop
mov
jl
push
sbb
addb
xor
add
xchg
jl
loope
push
inc
imul
adc
jae
mov
jge
cmpl
xor
mov
mov
push
or
or
add
push
push
mov
outsb
dec
cltd
test
shlb
mov
aam
jl
or
pop
fwait
push
addr16
cld
or
jns
sub
adc
xor
adc
cmc
add
jne
add
push
mov
jle
pop
dec
xchg
sbb
sbb
stos
dec
xor
mov
add
mov
repz
stos
mov
divb
jns
sub
and
ds
adc
test
fnstenv
and
mov
and
sbbl
jge
mov
aas
add
mov
push
pop
inc
sub
mov
or
add
mov
adc
jo
push
mov
addl
fmuls
push
adc
mov
adc
add
mov
mov
test
and
and
loop
jg
aaa
in
add
nop
out
mov
sub
add
insl
scas
and
bound
xlat
inc
pop
pop
fscale
mov
test
dec
jle
adc
xchg
ds
jle
jmp
sub
into
leave
movsb
mov
mov
lock
sub
jo
jb,pt
clc
mov
call
sti
pop
test
push
xor
xor
ja
outsb
adc
push
lahf
and
inc
pop
pushf
cld
jge
test
sbb
sbb
ja
sbb
jo
lods
cmp
dec
jno
inc
lods
push
sbb
and
aad
sbb
pop
data16
rclb
nop
cmpsl
cltd
lret
push
lret
push
and
dec
pop
mov
and
and
sub
adc
jne
xchg
xchg
or
dec
jle
cmp
or
in
cld
sbb
mov
pop
adc
js
push
dec
popa
popa
pop
pop
jmp
pushf
movsb
mov
push
mov
call
pop
sahf
adc
call
inc
mov
int
aad
mov
mov
add
enter
mov
add
loope
dec
sub
or
out
cs
dec
inc
mov
lock
or
shr
mov
test
mov
in
mov
mov
jnp
or
push
cmp
roll
dec
dec
and
add
arpl
adc
cwtl
add
xorb
sbbl
pop
push
mov
in
in
into
cli
pop
jae
push
mov
add
scas
mov
mov
jnp
cmc
jbe
mov
pop
xlat
mov
clc
cmp
mov
mov
add
adcb
xchg
inc
inc
scas
cmpsl
iret
int3
or
mov
xor
mov
xlat
mov
jle
sbb
test
int3
divl
pop
inc
sbb
sti
sbb
or
shlb
adc
jb
push
daa
js
pop
mov
jns
or
sbb
and
imul
test
icebp
or
bound
shlb
sub
js
xor
mov
aaa
iret
stos
filds
or
sub
iret
les
or
jg
pusha
lock
or
ljmp
or
dec
mov
out
lcall
stc
and
loope
xor
das
mov
out
pushf
sbb
jo
and
fstps
jae
sub
rolb
xchg
add
and
insb
add
imul
jp
nop
add
cmc
mov
cmp
das
dec
mov
adc
sub
jmp
add
fistpll
xor
bound
push
fldl
rolb
and
xchg
mov
sbb
or
les
enter
mov
loope
jg
mov
lods
cmp
outsb
and
imul
sbb
loope
xor
fwait
nop
and
sub
testl
sub
je
dec
stos
jb
or
jmp
pop
js
sbb
add
inc
js
push
push
bound
jo
or
movsb
adc
jl
into
pop
add
sbb
add
inc
femms
inc
or
icebp
sub
addb
adc
lock
and
sub
lea
adc
daa
gs
inc
cmc
popa
popa
mov
lea
cmp
fnstsw
jl
push
push
subl
dec
jnp
pop
les
add
stos
push
test
call
mov
cmp
pusha
xor
mov
sbb
and
or
mov
add
dec
or
xchg
xor
adc
inc
push
movsl
arpl
and
cmp
gs
int
push
add
das
inc
test
out
out
add
pop
mov
jle
xor
mov
out
push
xchg
fstps
pop
ja
fs
mov
cwtl
dec
and
adcl
push
sbb
push
jne
xor
repz
mov
cmp
insb
adc
hlt
or
xor
adc
filds
sbb
stos
jo
mov
loop
jmp
out
adc
push
mov
jo
or
adc
adcb
or
and
add
test
adc
arpl
adc
xlat
adc
push
arpl
xchg
add
inc
mov
add
add
ror
lret
fs
add
int
mov
jno
or
in
pop
sub
push
cmp
dec
fcmovnbe
je
int3
adc
mov
aam
pop
and
xchg
insl
jne
pop
or
cmpsb
pop
jp
jmp
push
fadd
cmpsl
jns
imul
dec
scas
sbb
subl
pop
cs
nop
push
into
shl
mov
add
inc
enter
fwait
les
add
sbb
in
mov
jo
adcl
xor
aam
out
sub
pop
sbb
arpl
test
cmp
repz
xchg
adc
sbb
jne
stos
add
xor
sub
add
shl
dec
rorb
cmp
leave
int3
incl
pop
and
sbb
daa
in
and
xor
add
sub
call
mov
or
lods
lret
les
iret
aaa
push
pop
sub
push
ret
add
in
es
inc
movl
push
mov
sub
jmp
mov
or
adc
push
or
xchg
add
xchg
xor
inc
outsb
mov
shll
loope
cwtl
nop
or
dec
push
pushf
push
insb
add
or
fadd
adc
mov
adc
ficomps
sbb
and
pushf
add
mov
sbb
push
cmp
xor
mov
pop
shl
add
loopne
adc
add
add
xchg
adc
mov
jae
int3
mov
mov
add
xor
imul
test
out
xchg
dec
mov
iret
lock
mov
cs
jns
adc
scas
xor
sbb
push
pop
enter
cld
mov
push
movsb
ljmp
xor
pop
sub
xchg
lea
aaa
mov
dec
add
lea
jge
pop
pop
and
adc
ja
into
lea
stos
jecxz
jmp
aaa
dec
int3
hlt
das
sbb
das
pop
xor
dec
call
stos
add
ficoms
pop
adc
gs
add
hlt
sub
addl
xor
testl
sub
xor
lret
sbb
sub
lods
lods
cld
xchg
out
leave
inc
mov
mov
adc
or
shll
pusha
int3
mov
or
test
fmull
mov
ret
cmpl
xchg
or
jns
sahf
mov
mov
xlat
lock
pop
je
xchg
push
dec
or
sub
jl
insb
and
mov
jp
and
add
sub
mov
or
jo
mull
cmp
loope
addl
sbb
pop
shrl
sbb
dec
cs
pop
mov
lds
push
add
push
push
test
and
xor
sub
adc
adc
xor
or
push
out
push
scas
call
dec
or
pmaddwd
lea
sar
and
lea
xchg
xorb
add
pop
or
notb
fstpt
bound
or
into
push
push
sbb
fucomp
sub
call
scas
add
xchg
nop
cmp
jle
adc
mov
repz
cld
pop
and
dec
and
cmp
sub
jge
test
push
scas
shlb
pop
xor
mov
cmp
pop
mov
add
jecxz
mov
mov
and
sbb
xchg
fs
fdiv
repnz
jg
inc
lds
es
push
add
jb
mov
sbb
cmp
cmp
push
sub
mov
pop
xchg
push
data16
dec
pop
das
int3
inc
dec
test
imull
stos
mov
addl
dec
dec
loopne
xchg
mov
in
lds
stos
frstor
cmp
add
pop
sahf
dec
icebp
add
jmp
or
mov
out
and
sub
push
int3
or
cltd
loopne
movsl
push
cmp
arpl
or
cmp
jl
stc
xchg
sti
xchg
cs
lret
mov
clc
push
adc
pop
pop
dec
pop
mov
mov
lea
sbb
mov
mov
fisubs
movzbl
jno
mov
ret
pop
dec
jnp
jge
test
xchg
out
pop
jno
je
sti
xchg
xor
fistpll
cmc
sarl
mov
xlat
mov
xor
sbb
mov
mov
loope
icebp
jle
out
and
sbb
dec
jl
mov
jmp
mov
sarb
jmp
sub
xchg
out
add
push
movsb
mov
imul
sub
mov
js
pushf
enter
jmp
call
out
mov
jbe
and
xor
dec
jo
scas
cmp
and
inc
adc
decl
push
xor
push
outsb
pop
in
faddl
js
jmp
mov
inc
es
mov
jecxz
inc
ficomps
cmp
mov
aad
jp
inc
inc
loop
inc
icebp
pop
push
jge
mov
inc
stos
jge
xchg
push
xchg
jecxz
jo
or
nop
xchg
clc
add
int
push
scas
lret
add
or
inc
movb
add
cmp
xor
cmp
fmuls
sbb
cmp
pop
das
or
addb
aad
or
sub
cli
or
rcrl
and
pop
xchg
push
mov
adc
add
loop
add
adc
addr16
add
test
xor
jo
sbb
mov
inc
stos
sbb
and
dec
aad
int3
sbb
sub
xchg
loopne
dec
dec
int
lea
shll
cmp
add
pop
cwtl
adc
cmp
dec
push
ret
dec
lea
pop
jb
mov
in
inc
dec
aad
frstor
sub
es
and
push
mov
insl
push
xchg
add
push
dec
lods
imul
rclb
inc
or
sbb
push
add
push
rolb
dec
and
mov
int
pop
or
pop
or
fiaddl
cmp
adc
scas
sbb
popa
mov
push
mov
push
movsl
rolb
jno
push
shrl
je
sbbl
xor
pop
add
dec
sub
pop
inc
adc
cmp
pusha
dec
jl
pop
jbe
jno
movswl
and
or
push
jl
inc
mov
inc
mov
inc
cmp
jmp
dec
js
jmp
jne
xchg
mov
inc
subl
sbb
fsub
adc
push
add
or
sub
cld
std
outsl
xchg
cltd
fisttps
or
cmp
rcrl
in
jns
add
pop
sbb
dec
or
ljmp
xor
xchg
xor
jo
inc
xor
jmp
sbb
divl
xchg
dec
jle
cwtl
sbb
ljmp
dec
cmp
das
jns
xlat
cmp
pop
inc
add
xchg
pusha
movl
cmp
inc
rorb
xor
dec
and
loope
xchg
push
mov
mov
cmpsl
jge
test
addb
inc
xchg
push
fimull
fsubr
out
sbb
push
lea
inc
aaa
jecxz
aas
fucomi
or
jp
push
or
arpl
xchg
sbb
adc
movsl
mov
mov
dec
xchg
push
arpl
mov
stc
push
mov
pop
xor
adc
inc
int3
or
or
or
mov
xor
out
aaa
lock
dec
lea
jmp
mov
fdivr
mov
lret
sarl
mov
fcoml
sub
pop
pop
js
ffreep
sbb
and
dec
sbb
aam
lahf
pop
add
sti
rclb
jnp
mov
add
sti
sub
add
add
movsb
push
inc
push
pop
jp
cwtl
xchg
dec
push
cmp
enter
enter
inc
cmp
mov
test
imul
daa
jb
loopne
test
adc
add
cmp
dec
std
pop
jo
imul
test
dec
pop
leave
repnz
fnstenv
add
adc
nop
sub
ret
xchg
push
jb
and
mov
test
dec
dec
bound
aad
and
jle
aad
xor
das
aad
std
add
mov
lods
cltd
and
inc
rorb
in
jne
inc
inc
mov
aaa
mov
test
in
imul
fnstsw
daa
inc
lea
cmp
xchg
push
fisttpl
clc
filds
or
icebp
je
mov
add
ret
jg
push
cmp
sub
sbb
fildl
cmpb
jo
test
dec
jmp
adc
fmuls
xchg
dec
lret
out
sub
out
xor
mov
add
jmp
out
dec
loopne
inc
mov
andl
inc
stos
mov
fcmovbe
inc
outsb
add
shlb
and
push
sar
hlt
and
shlb
inc
push
or
jge
push
add
daa
rorb
push
mov
dec
fcompl
adc
idivl
sbb
push
mov
test
shll
mov
out
xor
mov
lods
xchg
dec
cld
inc
int3
jle
mov
inc
aam
mov
mov
inc
inc
jg
insb
fwait
xchg
scas
sub
xchg
pushf
and
adc
push
out
mov
mov
pushf
inc
pop
loopne
mov
mov
inc
adc
ss
mov
pop
je
jge
movzbl
jl
jle
fmulp
xchg
sbb
cwtl
pop
jl
sub
lock
and
push
and
or
lock
mov
loope
jne
mov
and
call
mov
sbb
adc
add
inc
js
or
dec
jmp
mov
roll
or
mov
and
mov
mov
out
jne
jbe
inc
sbb
push
xchg
outsl
fldl
adc
shll
cld
jg
add
gs
fdivl
sub
xor
inc
lahf
es
pop
ret
dec
or
out
testl
cmp
sbb
jp
sahf
sbb
jmp
shlb
es
lret
or
jne
loope
sbb
std
lea
inc
add
fistpl
add
add
inc
test
clc
cmpsl
or
jle
or
inc
push
mov
fisttps
mov
add
pop
xchg
stos
pop
or
sbb
sbb
dec
mov
cli
std
cmp
shl
xchg
mov
xchg
cmp
xor
or
cmp
adc
movsl
add
aas
lea
mov
mov
mov
add
and
jns
and
cmp
or
sbb
add
sub
inc
sahf
mov
dec
mov
es
repz
sar
lea
dec
sub
in
mov
and
test
repnz
ss
adc
and
addr16
or
test
xchg
movzbl
adc
test
jge
jl
and
push
and
ds
sbb
lret
adcb
pop
data16
cmp
and
shlb
aas
inc
add
je
inc
mov
les
xor
cwtl
sub
and
dec
cmpsl
cmp
add
and
lret
xor
mov
xor
lock
and
push
fs
push
xchg
jp
push
add
xchg
jo
or
xlat
ret
ret
sti
lds
inc
cmp
fstp
sbb
lock
lods
mov
jb
sbb
sbb
pop
enter
pop
lock
subl
sub
sub
sbbb
jl
jmp
xlat
lcall
adc
or
fdivs
js
mov
decl
or
mov
xor
enter
jae
dec
mov
lock
lock
push
sub
sahf
jmp
mov
js
enter
loop
daa
adc
and
add
add
ret
imul
mov
jmp
fs
shr
adc
stc
mov
in
out
or
sub
jbe
into
xor
pop
out
sbb
inc
and
test
test
scas
arpl
cs
icebp
ret
inc
in
les
cs
xchg
inc
pminsw
mov
nop
rorl
js
js
add
scas
cmp
sub
scas
test
dec
jmp
dec
sub
xor
dec
mov
je
jle
sub
cmp
jae
icebp
ja
sub
gs
cmpb
and
sbb
mov
add
dec
inc
or
push
fcmovnbe
xor
test
fiaddl
xor
adc
loopne
jae
push
jne
lods
add
push
xchg
cmp
dec
mov
and
sub
push
sub
mov
add
daa
shlb
rolb
leave
adc
or
jne
loope
mov
hlt
adc
pop
sbb
or
mov
mov
pop
add
call
jb
mov
jmp
dec
jo
adc
jmp
and
js
and
mov
sbb
pop
in
jne
xchg
push
scas
jge
sub
add
or
sar
ljmp
repnz
ja
loope
clc
lea
mov
mov
push
adc
adc
ds
mov
mov
and
enter
jo
je
adc
loopne
inc
or
in
ror
loop
jmp
lock
push
daa
into
inc
sub
andb
push
test
sub
jecxz
or
sbb
dec
xor
add
pop
xlat
sbb
or
les
es
mov
push
pop
adc
jge
popa
icebp
and
aas
push
call
lret
ljmp
lods
or
push
fiadds
fcoml
loope
xchg
sbb
hlt
in
xchg
dec
hlt
sbb
int3
adc
dec
ja
int
mov
cmp
rcrl
mov
add
fwait
out
adc
pop
lock
mov
jbe
add
loopne
fnstcw
add
mov
adc
insl
mov
adc
imul
pop
imul
arpl
aam
repz
push
scas
orb
ret
xchg
daa
adc
insb
push
xchg
adc
rol
sbb
mov
mov
pop
inc
or
or
xorb
xor
lret
pop
jecxz
int3
xchg
repnz
loope
call
imul
sub
sbb
rorb
pushf
cmp
or
add
loop
fdivr
mov
jns
into
lret
jmp
inc
fdivs
adc
test
pop
dec
cmp
das
leave
test
enter
xchg
pop
or
adc
add
or
and
xchg
sub
int3
xchg
les
cmp
flds
mov
xchg
adc
lods
pop
pop
cmc
out
clc
mov
das
adc
add
xor
ljmp
stos
loope
ret
cltd
aas
push
push
fimull
lds
mov
jno
mov
mov
pop
jns
pushw
and
inc
jge
xor
out
sbb
sar
xchg
push
loopne
push
jne
mov
int3
loope
xchg
mov
jns
xchg
xlat
ja
and
loop
inc
mov
add
pop
fs
sbb
or
fimuls
jge
adc
jp
cmpxchg8b
mov
inc
sbb
cli
inc
ja
push
dec
add
jl
inc
sub
ljmp
sub
push
rorb
and
sarl
inc
das
push
paddb
outsb
fdivs
mov
inc
adc
xchg
cltd
add
jmp
out
fsubs
js
inc
inc
es
ror
sub
dec
adc
and
loopne
fcom
push
mov
ss
scas
in
gs
cs
push
dec
fisttpll
xor
mov
int3
xchg
add
addb
andl
sbb
icebp
enter
leave
loopne
push
add
sub
mov
xor
sti
aam
aas
int
cwtl
and
inc
add
add
out
adc
mov
xchg
out
add
or
les
stc
js
add
les
inc
sbb
add
adc
jmp
adc
sbb
mov
xor
pop
inc
sub
les
xor
inc
sbb
je
mov
scas
and
inc
sub
je
aaa
rcll
adc
es
ja
adc
and
pop
jp
add
scas
jbe
addr16
stc
movsl
addl
or
lea
movl
xchg
push
int3
ss
das
mov
and
xor
sub
inc
push
mov
or
xchg
xor
dec
fs
scas
pusha
sbb
outsb
fimuls
pop
pop
jmp
dec
andb
loope
cmp
xor
dec
jnp
sub
sbb
int
or
jmp
add
cmp
add
jne
fadds
and
js
aaa
xchg
xchg
clc
andb
cmp
jne
sub
adc
cmp
push
or
jbe
sarl
js
dec
jl
dec
js
das
push
call
mov
fisubs
add
js
leave
mov
jge
cmp
jl
xor
mov
push
add
jns
push
dec
adc
and
enter
inc
sbb
lret
inc
in
or
jns
push
lcall
xor
sbb
or
outsl
ret
dec
fsubs
ret
push
js
cmpl
sbb
fldenv
test
shll
pop
mov
cltd
adc
lcall
fwait
or
incl
xchg
adc
aam
mov
stos
xchg
jns
lea
mov
jno
push
sbb
xchg
sti
pop
addr16
leave
dec
dec
push
dec
inc
mov
adc
add
add
mov
ret
test
out
shr
int3
sbb
sub
push
mov
and
arpl
jne
inc
cli
hlt
xor
xchg
lock
daa
lret
insl
add
sub
mov
pop
fldcw
jmp
lea
or
pop
or
movsb
cs
ljmp
sbb
fisubrs
std
jmp
nop
push
dec
and
or
ret
xchg
dec
inc
push
add
ljmp
fistpl
add
push
dec
push
pushf
mov
adc
cli
pop
clc
call
scas
push
pop
rolb
jge
mov
push
lock
mul
pop
mov
add
add
inc
rcr
pop
sbb
out
add
dec
jl
jge
or
inc
das
xchg
es
in
hlt
dec
js
adc
popl
enter
push
xchg
dec
leave
test
xchg
xor
jne
loopne
jecxz
push
gs
lahf
xchg
push
addr16
adc
sub
dec
xor
dec
adc
clc
inc
sbb
das
or
xchg
out
je
jo
lds
jl
adc
adc
jmp
xchg
xchg
ret
xor
mov
call
push
cmc
in
push
mov
test
jnp
adc
mul
mov
add
mov
loope
cmp
sti
leave
or
jge
insb
ret
jge
mov
dec
lret
into
inc
cmpsb
xchg
movsl
xchg
das
jl
inc
loop
aaa
dec
xchg
mov
inc
nop
sbb
sti
xchg
sbb
ss
loopne
arpl
neg
add
mov
jge
adc
mov
jns
inc
cltd
sar
test
sbb
cmp
jl
xor
fs
sbb
les
in
add
push
test
push
pushf
xchg
outsb
or
add
adc
lock
fmuls
add
mov
cwtl
rolb
lock
or
dec
push
shl
test
testl
push
xchg
inc
lahf
jl
add
inc
test
pusha
or
cmp
pop
jp
test
and
clc
sahf
pusha
jo
xor
adc
ds
xor
fidivrl
cmp
mov
fwait
xor
lahf
mov
aam
pop
mov
mov
dec
sarb
push
insl
stc
insb
pop
mov
jl
pop
mov
cmp
sbb
and
insb
inc
mov
or
pusha
mov
sbb
push
or
push
sbb
mov
pop
mov
jbe
sbb
sub
push
cmp
or
sbb
add
sub
addr16
xchg
push
clc
mov
imul
adc
add
in
rol
xorb
lahf
addr16
in
adc
mov
or
clc
jle
addl
outsb
es
in
dec
fisubl
xchg
lock
lock
mov
and
and
pop
or
cmp
jl
jno
mov
xor
adc
ja
cmp
jg
inc
cmp
adc
gs
lahf
inc
pop
ja
or
sbb
sbb
cmpsl
xor
nop
in
jno
sbb
add
int3
or
int
jge
dec
insl
ljmp
jmp
or
pop
sbb
in
rolb
outsl
aam
xor
push
in
jge
pop
adc
or
adc
or
dec
xorb
inc
stos
cmp
das
xchg
in
push
lock
jecxz
std
mov
jmp
jle
mov
dec
lea
sbb
jo
or
loope
movnti
cmp
fdivs
ja
mov
add
in
jl
pop
outsb
add
mov
mov
pop
xor
cmpsb
imul
pop
xor
pop
push
dec
cld
popa
add
mov
mov
xchg
xchg
or
lock
sahf
aam
mov
push
into
push
lock
test
xchg
sti
mov
sbb
js
jo
xor
mov
inc
sub
cs
cmp
cmp
call
aam
fcoms
fmul
pop
inc
sbb
clc
mov
hlt
in
mov
lea
and
xchg
loope
sbb
call
outsl
lahf
into
mov
xor
xchg
mov
adc
rcr
inc
ljmp
mov
cmp
inc
fcoml
push
push
jp
cs
mov
jmp
ret
enter
les
shlb
rcl
add
enter
mov
test
mov
push
mov
mov
insl
aam
adc
mov
pop
inc
adc
cmpl
enter
jne
sbb
imul
flds
or
rcrl
push
sbb
nop
cmp
js
cwtl
sbb
dec
xor
xchg
mov
lret
xor
sbb
dec
adc
or
loopne
jl
pop
ljmp
insl
and
ret
mov
in
lods
fidivrs
and
adc
sbb
add
adc
push
mov
add
dec
add
or
dec
xchg
adc
pop
in
arpl
mov
call
lret
and
xchg
cltd
add
mov
aam
leave
enter
pop
insb
jmp
xchg
ret
push
shlb
rcl
pop
ja
and
fs
push
adc
cs
inc
jne
add
sub
out
jo
cmpsb
inc
pop
loope
ret
cmp
scas
xor
js
in
lods
mov
mov
adc
push
push
test
inc
cltd
dec
pop
sub
mov
je
jmp
scas
and
dec
hlt
mov
push
push
sub
jno
cmp
pushf
adc
xor
cwtl
adc
inc
jnp
mov
sbb
pop
cld
fcomps
fwait
in
and
xor
call
adc
mov
and
push
push
inc
or
mov
rcll
jb
sub
shll
or
popa
xchg
es
xlat
enter
cs
or
adc
xchg
lcall
push
in
test
fmul
cmp
cmpl
cmp
cmp
andb
pop
add
pop
mov
cmpsl
pop
jp
pop
sbb
sti
sahf
cmp
add
dec
push
lret
hlt
push
insl
xor
jbe
or
lods
adc
mov
push
shl
xor
incb
add
pusha
push
and
adc
dec
lods
hlt
push
imul
sub
call
jne
mov
inc
push
adcb
push
adc
fidivrs
adc
pop
test
sarl
int3
sub
pop
push
adc
dec
mov
xchg
mov
or
mov
rdmsr
test
dec
cmp
bound
xor
sub
mov
ss
rorl
sbb
daa
subl
or
je
fildl
push
loopne
xchg
fs
cmpb
pop
push
mov
pushf
icebp
xchg
jg
xchg
cmpb
shl
push
push
gs
mov
cmp
add
add
adc
jb
add
sbb
daa
lock
xchg
xchg
jge
inc
jl
roll
xor
mov
sti
dec
jne
aaa
and
adc
or
enter
sub
xor
sbb
sbb
or
xchg
fndisi(8087
adc
aad
jecxz
inc
cld
mov
jle
push
xor
adc
xor
inc
call
cmpb
fdivs
mov
add
leave
nop
insb
adc
add
xor
or
scas
mov
and
jge
cmp
imul
push
bound
or
push
sti
add
outsl
fadds
fisttpl
das
adc
aaa
loope
add
subb
xor
jmp
inc
add
loope
mov
leave
cmp
inc
xchg
fnstsw
or
or
fadds
jmp
out
cmp
imul
rcll
mov
xchg
cli
ja
fmuls
scas
fadd
loop
sub
dec
add
xchg
mov
imul
mov
add
rorl
mov
fidivrl
loop
mov
inc
push
std
dec
inc
inc
sub
rolb
adc
jle
jns
fsubs
addr16
lfs
stos
push
fisttpl
loopne
mov
loopne
xchg
inc
cmp
divl
mov
das
xchg
add
push
mov
or
faddl
xor
bound
push
mov
jp
testl
stc
or
insl
popa
sub
xchg
inc
sub
sbb
test
sub
jns
cs
dec
pop
adc
pusha
inc
sub
push
xor
jae
add
imulb
ret
leave
pop
pop
je
dec
je
jmp
xchg
sub
inc
les
push
movb
sub
sub
out
jmp
sub
out
rorl
adc
arpl
pop
rcll
inc
in
mov
push
imul
or
or
jmp
sbb
test
and
push
pop
stos
dec
mov
fwait
mov
or
xor
cmp
pop
adc
adc
das
fstps
inc
and
leave
enter
jg
cmp
mov
dec
cmc
test
cli
jae
jl
data16
or
inc
movl
sub
shl
mov
lods
sbbb
xchg
xlat
addb
add
mov
cmp
pop
cli
cmc
clc
test
add
rorl
mov
movsb
sar
mov
add
test
fs
dec
in
add
cmp
je
xor
fisubrl
and
mov
sub
mov
xlat
mov
lret
int3
xadd
das
ds
pop
mov
push
cmp
jge
nop
pop
dec
pop
pop
or
mov
adc
adc
add
loop
push
mov
cmc
xor
lock
aam
in
sti
test
mov
add
or
adc
sub
mov
add
pusha
mov
xor
mov
sti
push
arpl
data16
sbb
daa
push
jns
lret
mov
daa
in
sbb
clc
sbb
loopne
or
leave
fwait
mov
call
ficoms
inc
cmp
and
mov
xor
and
push
push
dec
enter
mov
sbb
rcll
dec
in
xchg
dec
fadds
ret
hlt
fcomp
std
popa
cwtl
rcrb
sbb
lods
outsl
xchg
ret
cmp
pop
imull
adc
enter
dec
es
xor
sbb
scas
cmp
jb
or
mov
inc
clc
jge
scas
add
in
mov
aaa
or
and
lret
enter
jmp
inc
in
jle
clc
sbb
loopne
jno
dec
pop
ficompl
fcmovne
or
imul
xor
call
mov
adc
dec
pop
pop
fs
rclb
dec
aam
iret
add
daa
sbbl
jno
sbb
rorl
idivb
lea
testl
pop
mov
xchg
les
adc
lods
adc
push
aas
test
add
std
xor
cmp
or
out
movl
imul
jge
xchg
cmp
jl
pop
fisubs
and
and
add
or
sbb
xchg
sub
push
test
loop
xchg
pop
sub
jne
je
mov
jo
mov
movsb
pop
cmp
testl
add
push
or
out
adc
lret
xlat
mov
mov
pop
add
in
or
adcb
xchg
and
add
in
xchg
ja
mov
in
pop
cld
or
jne,pt
lods
dec
cmp
jge
mov
sub
cmp
jge
mov
add
mov
jl
ret
inc
loopne
jecxz
jge
add
test
and
xchg
lods
orl
pop
rclb
and
aam
sub
jge
or
adc
fs
fidivs
mov
aaa
mov
or
push
jne
pop
cmc
push
outsb
sub
sarl
daa
xchg
je
pop
clc
add
add
adc
out
out
shl
jns
cmp
in
xchg
icebp
add
pusha
fdivl
test
xor
into
sahf
mov
bound
or
gs
gs
int
popa
cmpsb
cmpsl
add
inc
das
jge
lcall
mov
test
or
mov
bound
inc
cli
out
inc
jp
roll
jl
leave
or
mov
mov
fsubl
jo
mov
adc
pop
jmp
mov
sbb
orl
adc
mov
pop
into
jmp
xor
pop
fstp
mov
inc
sar
mov
mov
out
or
stc
and
sysenter
xorl
icebp
repz
inc
out
push
or
push
mov
inc
shrl
sbb
lock
xor
lahf
ja
jl
and
jl
test
in
ja
mov
mov
nop
popa
loopne
xor
clc
xchg
and
mov
loope
cmp
in
hlt
sub
mov
xchg
in
inc
add
mov
and
jae
push
cmp
call
xchg
jmp
mov
inc
jae
fcoms
enter
jge
xor
and
push
mov
inc
sub
dec
test
xchg
sbb
add
mov
push
add
mov
pop
lret
lods
or
loopne
and
and
rorl
push
out
push
loopne
and
sbb
mov
add
rolb
mov
mov
or
adcl
fldenv
mov
push
cli
movswl
repnz
push
add
mov
sbb
ret
imul
pop
adc
sti
cli
inc
jo
cmp
sbb
mov
stos
pop
out
movsl
fdivrl
jo
rorb
out
in
imul
push
adc
cmp
adc
push
adc
pushf
push
inc
push
ss
loopne
je
xor
mov
lea
cmpsb
mov
les
jne
sub
into
test
fdivrs
add
sub
movsb
lods
pop
sbb
fwait
mov
pushf
sub
mov
jmp
cwtl
frstor
cltd
clc
pop
cmp
add
mulps
inc
add
sub
fnsave
jne
push
fadds
lock
push
push
mov
sbb
xchg
xchg
sbb
mov
jl
mov
add
rcr
xchg
sbb
sbb
loopne
adc
lock
or
ss
cmp
jae
sub
mov
xchg
cmp
fdivrl
scas
mov
mov
repz
shlb
mov
mov
pop
pop
mov
xchg
or
jmp
enter
imul
mov
sbb
mov
neg
mov
neg
mov
mov
add
inc
mov
fsubrs
jge
cmp
cmp
ss
test
adc
dec
stos
loope
or
fistpl
jg
test
cmpsl
call
lcall
rorb
push
adc
xor
inc
pusha
fldl
jecxz
pop
sahf
inc
sbb
push
js
sub
je
pop
add
pop
pop
adc
sbb
push
dec
int3
es
insl
cmpsl
out
or
popw
iret
push
add
inc
add
and
and
mov
add
insb
fstpl
jns
and
test
test
sti
push
jmp
mov
jle
add
lea
insl
push
rcrb
adc
iret
push
sub
xlat
addb
pop
sub
das
sbb
cmp
and
sbb
cmp
das
les
pop
outsl
lock
mov
add
and
lahf
adc
jecxz
std
out
pusha
adc
add
pop
call
adc
or
in
sub
mov
jnp
aad
sbb
or
daa
sub
and
cs
inc
xor
stos
adc
push
lods
movsl
mov
or
leave
enter
or
sbb
daa
mov
sahf
add
cltd
loop
nop
push
mov
adc
ret
add
or
pusha
add
daa
mov
or
das
lods
xchg
fs
cs
addr16
insl
pop
hlt
dec
adc
add
loope
and
xchg
jge
inc
mov
adc
dec
jno
mov
mov
adc
push
dec
inc
fdiv
push
popa
jnp
fnstsw
test
loopne
test
fcmovne
mov
push
movsl
lcall
adc
test
roll
std
data16
mov
sub
cmp
jl
adcl
sbb
push
cltd
mov
dec
vmovss
adc
sbb
push
dec
andl
ja
and
inc
mov
jno
cmp
arpl
mov
inc
cmp
mov
cmpsb
and
mov
ret
jl
sbb
mov
enter
mov
mov
adc
or
inc
dec
xchg
lds
lea
adc
aas
adc
sarb
cli
dec
fisttps
inc
pop
adc
stc
add
pop
pop
popw
pusha
cmp
sub
push
adc
fidivs
push
pop
dec
inc
ss
roll
dec
push
clc
push
jl
cmp
mov
stc
mov
sbb
sbb
out
js
sbb
enter
call
add
xchg
sbb
xor
pop
xchg
pop
cmp
outsb
pop
xchg
ss
or
jle
mov
inc
push
clc
sub
lods
mov
mov
mov
dec
and
inc
push
mov
cmpsl
add
cltd
and
inc
sbb
add
pop
jecxz
es
and
push
sbb
mov
lock
dec
loope
jo
data16
jmp
add
repz
pop
mov
dec
clc
pop
or
inc
incl
inc
adcl
sbb
or
aam
ret
fwait
lock
xchg
dec
das
lea
sub
adc
mov
scas
out
test
jecxz
into
jno
mov
shll
mov
sar
ds
push
insl
rclb
and
js
hlt
xlat
adcb
and
icebp
cmp
jo
mov
fwait
and
das
adc
or
dec
loopne
dec
dec
lock
sahf
out
sbb
arpl
inc
mov
cmp
cmpl
arpl
jo
xor
or
imul
inc
daa
clc
test
test
dec
xchg
stc
xor
sbbb
shr
and
je
dec
or
dec
jne
fldl
popl
push
xchg
mov
mov
dec
jb
bound
inc
and
sarl
jae
mov
dec
pop
mov
xchg
mov
sbb
incl
insl
dec
push
push
out
cmpsl
sub
xlat
jb
mov
dec
add
lahf
lret
insb
xor
cmp
dec
loope
mov
ror
add
mov
adc
dec
fidivrl
or
pop
pcmpgtd
sbb
stos
lock
mov
adc
in
cmpl
ljmp
xchg
cmp
pushf
push
jl
repnz
lods
sti
imul
or
ds
int3
insl
imul
bound
das
jmp
add
jp
or
stc
pop
dec
and
mov
inc
and
sbb
inc
and
mov
iret
cmpl
lret
jle
jge
jle
cwtl
pop
sub
cs
cmp
push
std
jbe
inc
pushf
jge
aaa
mov
mov
inc
dec
iret
ret
clc
dec
adc
ret
pop
jo
or
pop
mov
jmp
inc
fbstp
mov
push
push
push
ds
faddl
or
aaa
adc
xor
xchg
push
stos
pushf
mov
jmp
sub
dec
sbb
push
and
add
orb
fildl
xchg
or
and
or
push
ja
lahf
mov
fs
inc
pop
sub
rol
scas
test
mov
adc
add
sbb
roll
ljmp
adc
jmp
mov
dec
adc
out
andb
xchg
or
ret
jno
sbbb
rclb
sub
xor
adc
adc
cmp
sub
dec
cmc
mov
scas
push
stc
mov
sub
mov
mov
or
lcall
insb
enter
mov
dec
mulb
mov
sahf
in
out
ret
sbb
push
dec
xchg
sbb
jmp
cmp
jnp
add
and
dec
jl
adc
in
fldl
punpckldq
daa
mov
cld
mov
ds
cmp
jg
fadds
jo
mov
scas
push
xor
cmp
pop
cmp
addr16
push
cmp
cmp
fmul
mov
adc
orb
jae
lret
sub
fstl
call
sub
dec
and
xchg
dec
or
adc
push
scas
push
or
cwtl
dec
call
addr16
push
push
jmp
xor
mov
jno
mov
orb
push
and
imul
mov
mov
jg
mov
adc
adc
dec
adc
push
pop
sbb
in
ficoml
stc
jno
mov
add
les
pop
cs
xor
xor
daa
adc
jne
mov
and
cmp
js
xor
xchg
mov
jl
mov
mov
sbb
inc
or
and
inc
icebp
or
inc
les
dec
xor
ljmp
jo
mov
aas
adc
jge
mov
jae
mov
xchg
fwait
sub
xchg
sub
mov
sbb
sub
xchg
cltd
or
pop
or
bound
mov
sub
adc
nop
gs
mov
push
mov
cmp
aam
lods
cmp
dec
mov
pop
mov
xlat
push
add
push
jns
loopne
add
sbb
jbe
add
mov
adc
mov
jbe
ds
xchg
subb
push
dec
outsl
jno
mov
inc
mov
push
imul
mov
and
xchg
or
je
push
stos
test
lret
enter
movsl
je
mov
data16
mov
mov
push
pop
pop
div
jg
xchg
jo
add
inc
jmp
nop
xor
cmpsb
add
and
push
mov
adc
mov
adc
mov
icebp
into
add
jmp
push
scas
add
or
or
hlt
cli
in
sbb
push
or
add
movsb
into
and
adc
adc
xor
stos
push
and
push
dec
xchg
out
sbb
and
mull
and
ret
push
dec
pop
xor
mov
fstps
pop
xchg
add
mov
cmp
test
push
adc
dec
sub
push
pop
repz
ret
dec
jo
jae
add
push
or
and
rorl
mov
xor
and
and
mov
dec
repz
push
int3
insl
xor
mov
imul
cvtpd2pi
pop
or
ret
inc
mov
movsl
add
cmp
push
push
je
stos
sub
inc
enter
stc
add
xor
cmpsb
dec
cmpb
inc
data16
adc
bound
or
and
sarb
inc
mov
inc
xchg
cwtl
xchg
outsl
dec
or
dec
mov
mov
pop
or
cmp
insl
mov
shll
imul
jne
jl
jmp
sub
or
call
pop
fimuls
xor
adc
repnz
mov
push
sub
out
xlat
in
jae
cmp
ficompl
add
dec
jmp
cmp
or
out
and
dec
and
or
shlb
dec
sti
mov
addr16
dec
push
pushf
jbe
rorl
fisubrl
dec
mov
sub
outsb
cmc
mov
dec
sti
push
dec
aas
mov
mov
nop
ljmp
fs
xchg
insb
dec
ljmp
xchg
lcall
or
fcoms
rcll
dec
mov
xor
jo
aad
in
sub
dec
adc
inc
push
pop
fldt
adc
add
pop
inc
imulb
adcb
fs
inc
mov
inc
mov
outsb
pusha
mov
addl
dec
lcall
push
push
lret
or
adc
sysexit
add
fmuls
inc
inc
sub
dec
pop
or
mov
mov
push
push
dec
dec
cld
dec
xor
roll
sbb
push
shlb
ret
movl
xor
movswl
loope
aaa
mov
inc
jl
cmp
mov
lods
lock
xchg
cmc
push
ds
test
cwtl
pop
xchg
push
mov
pop
cwtl
cmc
ret
add
xor
nop
popf
adc
mov
push
js
sbb
setp
addl
pushf
xchg
cmp
lcall
pop
adc
into
sub
out
adc
leave
test
jl
mov
jb
test
jge
pop
push
rcrl
mov
xchg
daa
xor
sub
es
jmp
sub
dec
or
inc
lcall
test
or
push
mov
insb
into
enter
rorb
arpl
test
add
mov
mov
jl
push
add
sub
pop
dec
rclb
int
insb
insb
dec
es
arpl
xchg
xchg
inc
sahf
adc
ret
jo
mov
nop
xchg
or
push
mov
stos
xchg
sbb
and
pushf
add
mov
cmp
enter
mulb
mov
mov
arpl
cmp
push
in
lea
mov
sbb
and
add
or
imul
mov
add
sub
je
wrmsr
xor
movb
add
cmp
outsl
mov
fistl
dec
sbb
jl
pop
adc
xchg
cmp
mov
subb
mov
add
or
mov
xor
iret
jo
icebp
mov
mov
fdivr
test
movl
xor
add
and
inc
dec
mov
push
or
dec
jp
and
shll
mov
rcll
pop
and
es
bound
sarl
cmp
add
test
pop
ja
popf
adc
cmp
push
mov
xor
cmpb
add
jp
mov
aad
loope
lahf
fadds
fldln2
and
out
and
add
mov
aam
pop
fidivs
mov
inc
mov
pop
add
mov
and
lea
inc
test
test
mov
aas
push
pop
cmp
call
xor
or
add
les
insl
mov
lock
sbb
xor
insl
popa
xchg
sahf
mov
jo
sub
nop
adc
dec
xchg
in
push
cli
mov
mov
adc
or
lea
push
nop
bound
push
push
pushf
dec
ret
or
pop
popa
sub
and
cmpsb
sub
mov
push
mov
fdiv
sub
unpckhps
sahf
adc
push
out
push
xchg
sbb
int
xchg
adc
out
pop
adcl
adc
lods
mov
xchg
cmpsb
dec
cmp
sub
dec
xchg
jo
cwtl
cli
mov
in
cmp
xchg
push
sub
fidivrl
gs
add
mov
sbb
dec
fwait
aas
sbb
lcall
mov
into
rcrb
ret
test
repnz
jae
in
jbe
and
sub
sbb
out
adc
or
es
es
add
rcll
rcrb
or
cmp
mov
add
gs
cmc
dec
clc
and
std
js
jnp
aad
sbb
imull
cmp
xchg
in
pusha
adc
adc
sub
sbbb
and
push
xor
dec
js
or
rolb
mov
in
push
jp
push
lods
popf
test
je
aaa
adc
js
xchg
inc
or
imul
sbb
add
dec
and
sub
imul
xor
pop
stos
xchg
and
stc
ss
xor
and
pop
pusha
icebp
aad
push
je
rclb
push
aad
sti
xorl
pushf
push
push
pushf
jl
xor
pop
inc
and
add
mov
xor
xor
pop
sbb
xchg
or
pop
or
xor
sahf
aad
add
jp
daa
mov
das
inc
sub
add
out
and
push
fimull
sbb
cmp
sbb
jo
sysret
push
in
sub
and
mov
sahf
les
es
jns
mov
dec
mov
shrb
cmp
vxorps
mov
daa
loop
sub
frstor
sti
and
add
xlat
jmp
xor
jl
mov
and
fs
xor
sbb
mov
lea
shrl
lret
jge
cwtl
js
idivl
push
fmull
mov
fwait
cmc
inc
fistpll
sub
push
and
mov
mov
adc
lret
lds
adcl
and
into
test
xor
mov
lret
mov
pusha
cli
arpl
cmc
inc
xor
push
cmp
mov
add
add
jmp
add
xchg
xor
mov
aas
inc
cmp
shl
rorb
dec
aam
arpl
cmpsb
pusha
mov
xor
and
push
jl
pop
sub
push
insl
mov
pusha
popa
add
sti
aad
ret
jmp
and
ret
xor
aam
fsubl
sub
pop
das
pop
jp
dec
xor
mov
sub
pop
lret
sub
fidivl
push
fbstp
jne
push
dec
inc
mov
push
fistl
fisttpll
call
add
cmpsb
push
pop
adc
push
or
jbe
aam
fstl
and
in
push
fmul
popa
mov
sub
pusha
sub
mov
mov
dec
pop
rol
mov
or
jb
jmp
add
or
clc
lds
fadds
mov
jne
add
stos
inc
ret
js
inc
in
lea
pop
and
xchg
add
test
jo
sarb
clc
jbe
mov
inc
lea
or
jg
ja
rcl
adc
add
test
aas
dec
test
mov
cmp
dec
jmp
adc
push
arpl
mov
mov
inc
jl
cmpl
shl
sbb
and
cmp
orl
pop
cli
cmp
jbe
mov
inc
add
inc
push
pop
stc
enter
xchg
push
clc
jg
mov
movzwl
xor
cmp
mov
xorl
mov
jle
loopne
insl
jb
or
adc
sbb
jl
popa
add
dec
roll
push
push
sbb
push
inc
lock
aad
jg
ja
addb
or
andb
rclb
and
inc
cmc
daa
xor
pop
push
add
ljmp
jo
sub
jbe
dec
fsubrp
mulb
push
dec
mov
push
add
inc
jecxz
sbb
sub
mulb
gs
cmp
pop
in
jbe
mov
fiadds
lods
pusha
ret
mov
sub
push
lods
adc
dec
cmp
fadds
xchg
sub
and
dec
in
adc
aam
rorl
add
lret
add
mov
or
call
fsub
jge
or
adc
cmpsb
enter
push
sub
cmp
xor
mov
out
out
mov
in
jbe
movl
hlt
pop
fwait
inc
sub
pop
push
lea
xorl
jp
inc
mov
mov
jge
roll
ja
mov
scas
data16
jecxz
add
or
or
push
push
scas
aam
dec
addl
pop
movsb
pop
pop
andb
outsl
sub
movl
mov
push
je
aaa
mov
out
pop
mov
sbb
insl
or
sarb
pop
add
adc
pop
dec
sarb
pop
inc
les
mov
push
xor
imul
lahf
mov
and
and
xlat
sbb
cmc
pop
adc
pop
jp
mov
insb
sbb
jp
test
rolb
fisttpll
test
cmp
sbb
xor
push
cmp
mov
xchg
imulb
mov
divb
xchg
test
jno
cltd
sub
jbe
pop
jg
lret
lret
push
push
dec
dec
push
enter
inc
xor
sbb
xchg
adc
dec
jae
imul
test
dec
mov
std
inc
das
adc
or
add
nop
cmp
lods
mov
push
mov
cmp
jmp
enter
es
test
push
or
jo
pop
ret
and
test
push
dec
lahf
xor
cli
push
out
and
sahf
xor
enter
mov
xchg
lea
sbb
rorl
sti
pushf
jne
or
jae
insb
dec
mov
dec
inc
gs
pop
pusha
push
mov
push
filds
or
fstps
mov
or
jbe
enter
or
mov
adc
cmp
loopne
out
push
mov
lahf
cltd
xchg
cld
filds
fdivrs
pop
fimuls
adc
inc
fdivr
pop
hlt
rcl
xchg
gs
shl
imul
pop
pop
repz
and
lock
cmp
lock
ficompl
adc
and
int
pop
aam
adc
mov
in
pop
xchg
mov
xor
call
lret
sbb
pop
jo
loopne
in
xlat
cmp
call
and
loopne
jns
repz
shlb
mov
rol
mov
mov
flds
gs
push
ret
enter
cwtl
enter
mov
aam
push
in
shlb
pop
popf
call
stc
inc
xorb
fwait
inc
or
fstps
mov
in
pop
sub
hlt
bound
adc
in
and
call
addb
sbb
pusha
push
jnp
mov
inc
add
xorl
jns
pop
pop
adc
pop
fnstsw
iret
aas
xor
jne
pop
sbb
test
adc
out
or
sbb
shlb
repz
adc
repnz
adc
arpl
or
sbb
imul
adcb
jnp
adc
add
fadds
pop
in
bound
jns
add
inc
sahf
and
out
lods
cwtl
add
test
gs
lds
dec
dec
cmp
mov
inc
add
jg
cmp
stos
sbb
mov
pop
sub
data16
aas
aam
mov
jne
daa
rolb
aad
cltd
push
push
push
sbb
cmp
or
push
add
das
in
xchg
imul
or
pop
xor
xchg
imul
pusha
jne
xchg
inc
jo
sti
insl
std
test
xor
imul
enter
stos
and
rorb
mov
shl
rcrb
std
mov
jne
dec
lock
stos
sbb
int
and
sbb
inc
pushf
xor
add
and
pusha
rclb
lods
mov
cmp
push
rcl
cmp
mov
out
or
sti
sbb
ja
cli
stos
lock
in
sbb
sub
out
outsb
dec
xor
loopne
mov
cltd
xor
mov
mov
mov
pop
cmc
lahf
js
fmull
icebp
ret
mov
add
loopne
negl
repnz
sub
ljmp
add
pop
arpl
sti
shl
sub
mov
add
adc
adcl
push
xchg
sar
add
addr16
sub
inc
into
add
xor
mov
dec
sub
sbb
movsl
inc
sarl
cwtl
fmull
or
outsl
sti
sbb
and
sub
and
sbb
add
sbb
and
pop
inc
in
or
or
sub
decl
in
das
movsl
les
jge
std
cmp
push
les
fwait
rcr
add
xorb
ds
scas
dec
repnz
fmuls
inc
or
mov
lret
cmp
ss
jg
roll
test
or
gs
add
add
push
or
out
pop
cmc
and
pop
mov
fld1
ficoms
pop
incb
xchg
mov
adc
push
jb
sbb
add
sbb
inc
fldenv
dec
add
dec
sbb
pop
or
push
inc
xor
shrl
and
jecxz
jb
mov
sbb
idivb
add
gs
inc
dec
enter
outsb
push
pop
insb
popa
sub
ret
subl
sub
mov
add
add
fmull
les
ljmp
pop
jmp
in
ret
pop
fchs
les
inc
in
cmp
pop
fmull
push
dec
mov
or
cmp
mov
xor
push
sub
xchg
cs
dec
sbb
cmp
adc
cmp
cmp
inc
pusha
push
inc
cmpsb
aaa
mov
pop
pop
iret
inc
pop
cmc
push
mov
in
in
int
cld
icebp
shl
or
loop
lea
add
add
out
neg
lea
shl
testl
testl
xlat
sub
das
push
fwait
xor
xor
push
jo
xchg
test
hlt
push
cmp
mov
sbb
add
int
adc
out
ficoms
aam
hlt
xor
fidivrl
add
test
stos
imul
insb
popf
mov
aaa
sub
enter
call
xchg
daa
cmp
hlt
neg
and
jne
rcrl
ret
dec
push
in
int
orb
lret
add
loope
emms
sub
add
icebp
or
push
movsb
std
push
or
xor
sub
cltd
mov
add
xchg
stos
pop
dec
sub
ret
add
in
sbb
xchg
ds
fsubrl
add
push
in
aas
cmp
xor
daa
mov
inc
in
sub
fistps
mov
mov
mov
add
mov
mov
lret
lret
rorl
hlt
lret
sar
fcmovnb
sbb
lds
sub
out
and
jns
pop
imul
add
gs
add
mov
add
out
pop
flds
lret
imul
jne
push
sti
ljmp
jmp
push
clc
adc
shrl
sbb
pop
mov
push
dec
loopne
push
outsb
icebp
jb
dec
add
cmp
lds
popa
adc
pop
loope
push
adc
xchg
push
inc
xchg
cwtl
test
push
add
stos
cmpsb
rolb
lods
popa
ficomps
cmp
addr16
jp
push
cli
push
xor
aad
rclb
add
add
add
or
and
sbb
pop
push
sbb
jecxz
pop
icebp
rcrb
pushf
dec
jle
bsr
sti
adc
sbb
scas
or
imul
push
and
mov
repz
sub
pop
and
inc
xlat
call
and
cwtl
jecxz
sub
add
or
mov
sarl
pushf
adc
or
mov
sub
sbb
clc
pop
cmpsl
adc
dec
jo
sub
clc
dec
push
sbb
xchg
dec
xchg
jge
inc
mov
adc
jne
loopne
push
cmp
adc
aas
loope
repz
add
push
pop
jl
sbb
imul
rolb
or
pop
add
pop
rcll
movsb
stc
push
or
xchg
inc
pop
adc
inc
and
jp
adc
test
ud2
sub
test
and
and
roll
and
or
cmpsl
jae
add
mov
mov
pop
mov
ficomps
and
test
or
xor
cmp
mov
cld
cmp
inc
inc
sub
lcall
testl
in
xchg
sub
pop
jns
inc
adc
or
cmp
ficoml
mov
cld
xor
mov
bound
arpl
xchg
jne
and
or
sbb
mov
mov
xchg
fcoml
addb
add
in
insl
je
ret
push
fildl
ljmp
rolb
decl
mov
shl
inc
jns
or
push
inc
add
call
cmp
aam
xor
dec
rcll
lods
inc
mov
add
sbb
rolb
sub
cs
and
insb
xchg
mov
push
adc
xchg
ja
aaa
xchg
int
pop
and
les
xchg
mov
adcl
cmp
xchg
mov
movsb
jbe
or
dec
xchg
push
jg
and
cmp
jmp
pop
dec
les
inc
fldenv
mov
rcll
cmp
inc
aaa
xchg
fcomps
faddl
cwtl
and
mov
inc
pop
pop
daa
mov
sar
sub
pop
test
jne
shrb
jno
ret
or
push
mov
nop
iret
push
or
adc
cmp
mov
rorb
pop
enter
mov
sub
push
xor
mov
pop
shrb
stc
lods
sub
push
push
push
jno
cmp
test
fs
sbb
push
sbb
mov
pop
jge
cmp
aaa
iret
inc
pop
jl
pop
and
push
rolb
add
add
rcrb
dec
inc
sub
add
push
out
ds
xor
xchg
rolb
inc
push
inc
push
lods
std
orb
or
sub
mov
cwtl
sbb
pop
mov
jmp
mov
sbb
xchg
mov
daa
xor
movhps
loopne
adcb
out
aaa
test
dec
testl
push
push
ljmp
nop
in
jl
nop
dec
adc
sbb
jecxz
pusha
ds
cwtl
xor
or
pop
sbb
mov
xchg
frstor
ret
mov
lock
jns
cmp
addb
mov
daa
inc
dec
nop
mov
xchg
pop
imul
adcl
cmp
push
sbb
mov
inc
test
fs
ja
or
pop
push
andb
movsl
ja
jp
inc
stc
dec
daa
dec
pusha
mov
or
jl
clc
popa
cld
mov
push
inc
subl
mov
cmp
mov
inc
in
and
fnstenv
sbb
and
sbb
insb
push
push
add
jp
fimull
mov
xor
inc
mov
mov
add
mov
xchg
dec
arpl
jle
dec
or
cmp
cmpsb
adc
sub
and
cmp
sbb
inc
xchg
xchg
or
adc
adc
push
sbb
sbb
sbb
jns
mov
add
rcll
and
cmp
and
andb
nop
daa
sub
es
mov
fdivl
or
js
xor
clc
adc
or
jno
cmp
das
add
mov
mov
inc
inc
pushl
cs
pop
cmp
mov
fs
cmp
or
add
add
int3
shlb
add
inc
cmpsb
cmp
push
xor
incb
pop
popa
pop
mov
adc
push
lea
add
cld
test
adc
sub
xor
ret
in
fcmovnbe
pusha
or
inc
fwait
and
bnd
sbb
or
call
inc
adc
pop
or
call
out
push
sub
popa
inc
lcall
add
xchg
add
add
fstpt
xor
mov
jg
xor
daa
adcb
mov
xor
dec
push
into
xor
pop
popf
fisttpll
fcoml
pop
jl
mov
cmp
shrb
adc
dec
inc
dec
aam
pop
nop
inc
cwtl
orb
leave
inc
or
cmp
push
jmp
fadds
sub
or
adc
sbb
rol
xor
insb
int3
loop
les
or
jl
and
aad
mov
sub
or
popa
or
xor
push
push
sbb
or
adc
xor
or
sbb
cli
sbb
std
into
push
push
or
inc
mov
add
inc
cmp
and
pop
xor
push
adc
cmp
lcall
iret
insl
imul
adc
fs
pop
shlb
imul
push
adc
add
mov
and
arpl
rolb
add
inc
and
mov
mov
rcll
mov
xlat
inc
xor
ja
out
lock
jge
add
or
jb
mov
mov
adc
dec
daa
dec
add
les
inc
adc
aaa
faddl
scas
les
inc
cli
push
push
mov
stc
fists
dec
pop
mov
xor
fdivs
sub
data16
and
cs
mov
das
or
loope
enter
mov
into
testl
add
ja
xchg
sub
add
mov
mov
mov
push
inc
testb
jecxz
out
into
in
mov
cmp
cli
jno
std
subl
fwait
pop
or
inc
or
je
std
pop
aas
dec
cltd
inc
push
pop
or
lods
mov
imul
sub
inc
cmp
pop
enter
jge
mov
fwait
pop
or
dec
pop
cmp
push
mov
stos
add
adc
pop
xchg
add
arpl
adcl
and
jg
adc
and
add
fisubl
imul
nop
imul
outsb
xor
or
inc
outsb
cmp
pop
push
pop
xlat
pop
dec
outsb
mov
aam
xchg
nop
dec
ja
push
inc
dec
cmp
ror
test
cmp
jp
adc
mov
add
add
jne
mov
aas
or
pop
inc
add
in
imul
or
or
mov
push
lods
adc
jb
xchg
cld
and
mov
and
and
or
lds
mov
cmp
mov
jo
icebp
shl
pop
outsl
jmp
xchg
cs
xchg
scas
js
mov
les
push
divps
mov
insl
mov
loop
int3
push
jl
mov
add
jle
loop
mov
dec
imul
push
add
sub
pop
adc
jns
jle
mov
mov
xor
jb
sub
mov
sub
jg
sub
int
inc
test
pop
aam
inc
xchg
jle
pop
fsubr
aaa
adc
das
pop
inc
test
xchg
jp
scas
ljmp
mov
dec
aaa
movsl
or
sub
std
mov
in
sub
and
andl
jne
ret
xor
mov
inc
or
xchg
out
leave
pop
pop
jbe
jle
pop
pop
rorb
add
fistl
dec
sub
inc
adc
ret
mov
cmp
loopne
xlat
dec
pusha
adc
lock
xchg
cmp
mov
sub
dec
add
mov
xor
mov
pusha
loop
test
push
inc
lahf
or
sub
pop
gs
test
or
sub
add
aas
nop
ficomps
pop
hlt
shrb
add
in
outsl
mov
sub
push
arpl
jno
fstpt
mov
lock
imul
pop
or
push
adcb
add
mov
fs
jae
or
sti
add
and
dec
inc
fwait
addr16
adc
inc
push
loope
test
dec
cmp
add
dec
push
cmp
or
xchg
mov
xlat
ret
clc
or
push
pusha
pop
lock
scas
call
push
mov
es
jmp
add
leave
mov
imul
cs
sub
xor
pop
lds
add
sbb
mov
dec
imulb
adc
les
inc
scas
int3
imul
in
sub
call
lret
jae
cs
cs
inc
push
add
cwtl
xor
push
in
leave
pop
and
xchg
pop
test
lret
mov
mov
or
test
cmp
cmp
rclb
xor
mov
inc
dec
cmpsl
ljmp
incl
das
pusha
scas
sbb
outsl
jne
mov
lds
xchg
pop
bound
push
sub
or
dec
aaa
inc
je
cltd
mov
push
xchg
imul
ja
fidivs
sub
lds
mov
cmp
jb
mov
push
lret
add
or
fsubs
rcll
mov
daa
mov
mov
inc
popl
sub
adc
add
adc
push
mov
cmp
adc
pop
bound
popf
dec
cli
int
jge
pextrw
inc
ret
mov
test
adc
push
add
inc
dec
add
add
mov
fldl2e
ret
adc
dec
fsubrs
loopne
repz
cmp
xchg
inc
mov
aaa
insb
mov
cmpsl
jne
mov
push
mov
jbe
cltd
notl
xchg
or
add
lea
cmp
int
daa
jne
les
adc
adc
shrb
call
cmp
nop
cmpl
dec
lods
and
es
dec
sahf
out
inc
push
cs
pusha
xchg
mov
lds
dec
subb
jno
mov
inc
xor
rcll
roll
dec
loopne
lret
mov
fsts
xor
andnps
sbb
aaa
in
push
jmp
mov
and
push
and
xchg
cmp
pop
lock
mov
mov
xchg
xor
popa
aas
jb
lret
xor
sbb
lret
pop
adc
xor
adc
inc
aad
scas
loope
sbb
add
jg
mov
in
push
and
addr16
mov
mov
arpl
cmpb
mov
subl
ss
adc
adc
andl
mov
inc
and
rorl
add
and
ljmp
mov
xchg
jns
or
sbb
cmp
jp
pop
xor
pushf
movsl
jns
inc
jl
sub
les
or
dec
rcrb
xor
push
add
pop
pop
fidivl
sub
pop
mov
push
lock
insb
jg
push
sbb
cmpl
mov
or
mov
jns
pop
cs
lods
pop
push
add
or
jmp
mov
arpl
push
fs
cltd
mov
mov
push
nop
pop
movsb
jno
cltd
orb
mov
andb
mov
iret
int3
es
adc
movl
jle
roll
fildl
jae
or
mov
out
inc
mov
add
inc
jmp
adc
and
je
and
pop
or
push
fstl
cwtl
mov
jbe
sub
cmp
and
adc
into
push
test
jge
mov
or
fidivs
pop
mov
es
jge
or
and
pop
je
inc
dec
cld
jns
add
or
fwait
popa
jno
dec
jl
stc
out
adc
xor
adc
xchg
dec
cs
cwtl
jo
mov
add
lea
insb
nop
imul
jecxz
pop
in
nop
xorl
cmp
fyl2xp1
ret
xor
call
pop
bound
or
shrl
inc
add
push
hlt
incb
fs
mov
add
test
sub
lcall
push
xor
movsl
and
insb
adc
lds
lock
push
xorb
test
call
dec
sbb
insl
pop
and
jg
cmc
enter
or
sub
xor
inc
sub
cmpsb
and
scas
add
jl
mov
or
jg
mov
movsl
push
les
stos
pop
add
das
sbb
movsl
add
sub
insb
jle
cmpsl
xor
sarl
enter
movsl
pop
adc
sub
dec
adc
mov
mov
sbb
xchg
push
sub
fimuls
pop
fs
test
mov
cmp
inc
fwait
adc
pop
lock
push
adc
add
xor
imul
inc
inc
ret
popa
repz
std
add
ror
fstps
adc
out
lods
inc
xchg
pop
and
cmovo
pop
popf
adc
pop
jo
loope
popa
xor
jae
add
mov
jle
cmpsb
xchg
mov
scas
shlb
xor
jbe
inc
adc
loop
fs
or
or
cli
ljmp
push
dec
or
push
mov
mov
mov
or
mov
insb
cmp
push
subl
and
push
fs
call
xor
mov
sub
jmp
add
mov
lods
loope
ret
add
rcl
jbe
mov
outsl
inc
shlb
cmp
or
mov
idivb
add
push
xor
inc
aam
imul
adc
inc
iret
inc
mov
add
jno
repz
sub
jo
or
add
leave
xor
outsb
insb
mov
stos
push
dec
adc
test
dec
mov
push
or
in
daa
inc
insl
jo
das
insb
es
insb
fs
inc
inc
sahf
adc
pop
loop
push
adc
push
xor
sbb
sbb
pop
roll
out
or
cltd
sbb
dec
movsl
sub
sub
push
or
cltd
mov
mov
data16
out
adc
repz
jnp
aas
push
add
ds
mov
xor
add
les
inc
jmp
and
add
add
sbb
dec
pop
pushf
pop
outsl
push
pop
cs
xchg
mov
lea
jg
dec
rcrl
xchg
shll
push
rcll
jb
outsl
movd
mov
ja
push
mov
add
cmp
int3
testl
in
icebp
data16
or
add
pop
and
sub
xchg
add
imul
cmp
scas
in
add
push
daa
dec
adc
or
dec
dec
es
cmp
out
adc
fadds
ret
xor
dec
ja
inc
lods
loopne
adc
mov
cwtl
or
cli
cmpsb
and
sbb
and
add
add
sahf
and
mov
sbb
adc
cmp
sbb
and
popa
add
loopne
cmp
inc
std
movsb
xchg
xchg
mov
ss
movsb
pop
cld
inc
nop
dec
push
dec
jno
lds
jns
bound
inc
xor
adc
mull
ret
adc
cmp
rcrb
cld
cltd
add
ja
orb
aaa
pusha
clc
iret
mov
inc
mov
pusha
sub
iret
pop
fcomp
xor
push
lret
add
inc
movsl
cmova
sbb
rolb
and
pop
adc
test
es
popa
jg
sarl
addr16
xchg
out
mov
inc
insb
jge
js
jg
outsb
adc
test
in
dec
insl
jg
mov
add
or
add
mov
or
xchg
cmp
cmp
addl
lock
push
push
cmpl
cmp
push
js
sahf
inc
push
incl
jne
inc
cmp
sbb
daa
add
ljmp
or
push
inc
or
cltd
aam
loopne
add
mov
inc
dec
jbe
pop
arpl
cmp
jge
sbb
push
add
or
lret
scas
mov
dec
lea
rorb
sahf
or
mov
in
cmp
or
mov
inc
push
xchg
pop
pop
or
movsb
loopne
add
mov
mov
or
xor
adc
cltd
xchg
push
add
enter
rorl
add
or
rcll
xor
mov
lods
or
ja
sub
sub
sub
push
dec
aam
push
adc
incl
pop
js
xchg
xchg
push
adc
es
inc
sub
sbb
xchg
push
fcoml
xchg
dec
push
movsl
or
xor
mov
sbb
sbb
gs
leave
iret
adc
adc
push
xchg
pop
rcr
cli
sbbl
pop
cmpl
insb
inc
xor
push
data16
dec
inc
add
adc
add
push
mov
mov
dec
cmp
add
dec
and
cli
dec
push
jo
cmp
mov
mov
out
pop
push
adc
fcompl
push
xor
sbb
and
je
aaa
sub
push
xor
add
mov
inc
mov
push
push
jecxz
les
mov
push
lret
dec
sub
loopne
and
push
mov
fcmovu
movsl
cmc
mov
xchg
adcb
stc
inc
push
dec
pop
jmp
mov
scas
dec
add
xchg
adc
adc
dec
shlb
and
mov
push
ret
add
daa
add
xchg
mov
xor
adc
lds
addr16
pop
cmpsb
or
pop
and
jmp
loopew
cmp
adc
je
dec
or
scas
sbb
scas
add
and
mov
jb
cmc
enter
adc
xor
mov
or
aaa
add
inc
jne
jne
fstps
or
xchg
mov
data16
fisttpll
mov
dec
mov
test
or
mov
adc
inc
or
rorb
in
pop
shl
and
push
loope
mov
fildll
mov
xchg
pop
sbb
or
cmpl
adc
and
je
out
in
mov
ds
mov
xchg
sub
adc
mov
mov
mov
into
ds
into
loopne
mov
iret
push
xor
jg
lds
enter
mov
adcl
and
lahf
push
xlat
sbb
mov
pop
sbb
in
out
sbb
ret
arpl
jnp
test
xchg
shrb
cmp
es
test
rclb
xor
loop
cmpsl
hlt
xchg
or
push
insb
xchg
movsb
adc
xchg
lods
and
sbb
imul
cmp
ljmp
cmpl
sub
sbb
jl
andb
sub
add
add
cmp
or
inc
clc
movzwl
xor
push
pop
ljmp
sbb
push
add
ret
movl
lods
inc
cmp
adcl
dec
icebp
or
out
adc
push
leave
xor
xchg
repnz
in
mov
or
mov
inc
add
cmp
push
adc
adc
aam
inc
push
testb
or
xchg
adc
add
add
loope
mov
adc
pop
dec
or
jmp
addl
adc
js
fnsave
ret
xor
in
rcll
xchg
les
fists
ja
fcomps
jg
lahf
xor
incl
mov
xor
push
and
popa
xchg
cmp
iret
jae
jns
rolb
mov
mov
adc
or
cmp
or
inc
ja
fimull
xchg
lock
lret
loopne
ffreep
and
in
lea
aaa
ljmp
or
mov
mov
cmp
xchg
sahf
adc
inc
lods
mov
test
loop
repnz
ret
mov
movsl
inc
pop
cli
ds
jne
stos
jl
faddl
fmuls
xlat
sbb
and
pop
test
adcb
loopne
sbb
sub
dec
jnp
inc
pop
dec
das
movsb
imul
adc
cmpsl
and
adc
jbe
mov
or
out
push
inc
sbb
outsl
bound
repnz
dec
cmp
and
shlb
sub
push
mov
insl
outsb
test
cmp
cmp
push
add
stos
dec
int3
push
xor
iret
les
fadds
jecxz
insb
sbb
int3
mov
outsl
jg
pop
fadds
ja
or
movsl
jl
xor
ljmp
loopne
repnz
aas
xchg
in
jmp
mov
arpl
fistpll
jle
add
jge
pop
test
out
fmuls
in
jle
movups
mov
jmp
cmp
leave
fcmovnbe
sub
jmp
mov
rclb
rcrl
sbb
and
wrmsr
lcall
dec
and
insl
loope
hlt
sub
out
je
ret
pop
in
lock
mov
adc
jns
jge
inc
jmp
and
sbb
cmp
roll
lods
popf
xchg
xchg
pop
lods
adc
sub
into
adc
and
fdivl
mov
xchg
inc
clc
mov
and
cmpl
xchg
in
lcall
ficoms
xor
or
add
daa
inc
dec
es
in
mov
shl
lds
push
add
and
pop
repz
pusha
xchg
dec
mov
out
enter
xchg
adc
xchg
sbb
mov
jle
mov
cmp
jle
and
inc
mulb
and
add
std
sbb
fwait
pop
aam
and
leave
jae
xor
sysenter
fs
jne
adc
and
sub
ss
in
in
in
call
inc
call
inc
shr
or
jno
or
add
call
xchg
xor
sbb
or
mov
and
inc
sti
les
xchg
pop
cmc
cltd
and
imul
lods
xchg
adc
and
ficomps
mov
ret
xor
aas
cwtl
js
lods
or
sbb
je
inc
jmp
stos
pop
and
imul
out
xor
in
inc
stc
ret
add
cmp
inc
ljmp
jmp
xchg
loopne
inc
loopne
push
lea
or
dec
mov
mov
in
out
mov
and
mov
inc
cwtl
loop
xor
vmulps
andb
and
pop
jne
add
and
andl
popf
jle
pop
ret
loopne
mov
insl
ret
cmp
jg
dec
adc
push
adc
push
test
aaa
adc
and
jno
out
sbb
push
pop
scas
ror
les
sbb
ja
or
or
jge
pop
mov
movsl
sbb
pop
cmp
adc
sbb
sbb
dec
cs
pop
adc
dec
or
inc
jmp
or
mov
test
add
orb
adc
jge
mov
sbb
addb
cli
dec
add
fisttps
mov
sti
aad
add
imul
add
push
jg
push
sbb
cmp
and
sub
sbb
insl
les
icebp
lods
mov
jle
add
push
mov
mov
jge
fdivrp
mov
or
addb
inc
cmp
pushf
scas
imul
bswap
andl
xchg
sbb
xor
lea
iret
push
cltd
xchg
shl
push
sub
sub
mov
add
push
add
daa
adc
arpl
iret
or
xchg
test
lock
lea
orl
xchg
jno
mov
inc
aam
std
xchg
les
jl
add
call
out
add
mov
enter
jl
addl
jp
pop
jnp
and
add
jmp
push
add
cmp
fstpt
lea
cmp
add
pop
dec
test
cmp
push
orb
in
and
sbb
or
push
rcrb
push
lock
outsl
mov
add
inc
jecxz
sub
jb
pop
or
xor
mov
jl
nop
pop
add
lock
add
in
and
add
enter
or
add
mov
sub
and
loopne
inc
xchg
orl
pop
or
sbb
or
adc
in
enter
enter
push
xor
mov
mov
inc
jmp
fnstcw
mov
mov
and
jecxz
pushf
adc
add
or
push
stc
test
cmpsb
mov
int3
and
test
pusha
dec
pop
jae
ret
push
adc
fs
into
push
sbb
jle
dec
or
mov
dec
lea
dec
sbb
aad
mov
sbb
sub
lahf
or
in
ficoml
in
test
fisttpll
cmc
sbb
sbb
incl
jnp
mov
insb
push
rorl
xor
stc
les
or
cmpsb
and
stc
dec
sbb
dec
sbb
add
inc
lahf
fdivs
xor
arpl
or
mov
push
mov
arpl
rorl
or
push
lods
add
sbb
and
xor
inc
roll
mull
incl
sbb
sub
aam
cmp
sbb
mov
iret
inc
or
mov
fdivl
test
or
js
jne
cmc
adc
or
test
sbb
fstpl
test
jmp
out
add
stos
xor
adc
mov
in
aam
sub
jmp
sbb
ret
adc
lods
mov
outsl
cltd
push
sbb
mov
cmpsb
add
js
add
inc
mov
les
mov
or
or
shlb
xor
ja
jae
inc
add
lahf
xor
stos
xor
aas
nop
jmp
cwtl
and
mov
sbb
packuswb
pop
sbb
or
push
push
add
add
in
jnp
dec
jne
inc
inc
call
mov
xor
adc
or
jmp
pusha
or
jo
adc
ret
jmp
add
insb
ljmp
adc
ret
ret
mov
stos
or
dec
scas
pop
leave
mov
lea
sahf
addr16
leave
roll
push
sbb
inc
sub
fs
mov
nop
mov
inc
xor
mov
sbb
push
and
and
add
lock
lock
and
mov
cmpsl
dec
and
cs
xor
inc
call
push
and
lcall
mov
push
call
into
pusha
int3
ret
inc
xor
sub
pop
dec
das
pop
nop
sbb
xchg
dec
or
jno
dec
xor
ror
add
add
outsl
mov
out
push
push
ret
mov
push
lea
mov
dec
fimuls
bound
mov
dec
std
add
dec
add
dec
int3
addr16
outsb
cmp
hlt
add
test
gs
add
cwtl
push
insl
dec
cli
aaa
push
add
aam
rolb
notl
gs
addr16
jne
in
sti
jno
out
stc
or
push
or
pusha
jb
adc
shlb
mov
lea
or
sub
test
add
push
add
fs
pushf
and
sbb
mov
shll
or
sbb
xchg
mov
or
enter
adc
in
xchg
dec
mov
pop
clc
jae
popa
dec
in
std
dec
hlt
adc
subl
mov
dec
lock
xchg
lock
in
movsb
add
mov
mov
push
cmp
and
jne
pop
test
cwtl
sub
lods
push
cmp
xchg
xchg
jmp
add
xor
mov
or
dec
mov
and
sub
outsl
add
cmp
xor
cmp
ret
pusha
std
loop
push
mov
xor
inc
xchg
sub
pop
jb
inc
ja
xor
adc
in
lret
inc
lods
movl
or
test
cmpsl
fcmovnu
or
inc
mov
jne
sbb
imul
cmpb
pusha
fs
mov
adc
popa
sub
ljmp
or
cld
dec
sbb
xor
xchg
cmpsb
dec
add
pop
push
fistpl
rolb
push
nop
xor
jne
lcall
xchg
adc
mov
mov
sbb
bound
sbb
adc
xchg
and
pop
mov
gs
cmp
adcb
stos
in
add
mov
jle
jl
or
inc
ret
rcll
lcall
sarb
or
sub
mov
lea
mov
xor
inc
mov
clc
mov
js
pop
mov
scas
jno
sbb
mov
push
push
or
jns
add
or
adc
rcll
or
call
pop
mov
adc
or
mov
mov
dec
jmp
push
and
dec
mov
xchg
adc
dec
push
adc
pop
or
mov
leave
orl
or
adc
jae
mov
fs
push
add
cmp
mov
sub
mov
or
inc
dec
ss
add
adc
aaa
and
push
lcall
out
add
dec
je
dec
adc
adc
mov
push
add
cmpsb
mov
enter
inc
enter
mov
pop
dec
stos
or
int3
xor
sbb
push
add
rolb
inc
in
add
inc
dec
mov
nop
xor
shlb
orl
xchg
mov
lods
cmp
stos
hlt
xor
arpl
jle
mov
arpl
fs
or
push
push
inc
inc
inc
pop
lods
xor
imul
mov
xchg
or
imul
in
out
or
jge
pusha
lahf
dec
or
sbb
sub
sbb
sahf
or
shll
sub
push
or
cmp
adc
pop
and
mul
jnp
adc
lock
xchg
push
shrb
adc
jbe
sbb
jne
jmp
rolb
int3
les
mov
mov
cmp
out
aaa
out
inc
xor
imul
adc
cmp
enter
pop
mov
sub
jno
call
lock
decl
jecxz
or
mov
sbb
daa
sti
enter
cmp
jns
sbb
lods
lds
lret
pop
sbb
les
and
and
mov
jo
jmp
xchg
jb
incb
xchg
lret
jo
sub
fwait
movsl
test
incl
add
xorb
sbb
loope
jg
arpl
xor
xchg
push
sbb
je
sbb
sbb
cwtl
and
add
lea
cmp
data16
and
xchg
jno
push
inc
adc
mov
popaw
jo
sbb
cmp
add
sub
cmp
imul
dec
mov
mov
and
jae
hlt
push
jns
mov
sbb
repz
pop
inc
pop
mov
test
jbe
test
and
push
push
and
mov
sahf
mov
sbb
mov
or
xor
imul
xchg
sbb
clc
jle
lock
push
jle
mov
clc
jb
icebp
sub
sub
dec
mov
pushf
push
adc
test
enter
or
dec
sub
adc
ljmp
dec
adc
inc
jo
push
out
sbb
and
sub
push
cmp
data16
inc
cmp
popaw
push
inc
fmuls
mov
lock
addb
aam
lds
mov
sbb
add
sub
add
push
lret
shlb
mov
movswl
sub
pop
hlt
sub
sbb
jecxz
insb
or
add
dec
cmp
pop
iret
push
hlt
add
cs
add
or
pop
add
into
leave
inc
inc
dec
pop
and
add
dec
pushf
loop
pushf
ret
and
hlt
add
repnz
add
add
mov
add
or
xor
add
or
pushf
mov
inc
xchg
cmp
mov
or
hlt
or
and
je
and
lods
insl
xor
pop
inc
fmull
shll
or
movsl
dec
iret
adc
inc
scas
mov
loopne
jle
mov
add
mov
push
sbb
shlb
cmp
sbb
movsb
in
int
aas
push
mov
jle
adc
incl
mov
shrl
xor
int
sbb
cmovbe
insl
and
das
sbb
stc
mov
test
sti
push
or
stos
iret
adc
adc
in
jle
jg
adc
rcll
fldpi
pop
sbb
inc
cmp
push
lea
es
inc
inc
pop
jb
dec
mov
stos
in
jb
insb
pop
dec
ljmp
dec
sbb
fldenv
cltd
lea
fidivrs
jge
sbb
out
adc
mov
xor
lods
xor
lea
mov
xor
cmp
inc
hlt
scas
lods
frstor
sbb
leave
add
fimuls
or
cld
adc
xchg
into
aas
adc
jnp
pushf
adc
xchg
xchg
sbb
xchg
mov
iret
pop
arpl
stc
adc
sar
adc
pop
add
loopne
in
xor
js
es
push
inc
mov
psubsb
sbb
call
xchg
fcom
rorl
dec
mov
inc
mov
mov
adc
add
sbb
dec
insl
sahf
adcl
pop
js
in
int
addb
sbb
jb
insb
popf
sbb
test
fsubr
or
and
sbb
loope
es
sub
fmuls
rcll
in
xchg
mov
inc
inc
outsl
loope
adc
pop
sub
jle
lds
sbb
lret
into
add
loop
dec
mov
sti
sbb
fwait
or
inc
leave
loopne
fcomps
fsubs
xchg
mov
adc
push
push
sahf
cmpsb
sbb
add
sbb
push
xor
jle
or
jno
xchg
push
mov
inc
mov
bound
iret
and
clc
mov
or
xchg
lock
or
iret
aad
ds
mov
cld
cmp
jge
xor
xor
add
sbb
jae
inc
jae
cmp
jb
jmp
dec
and
lret
push
or
scas
pop
leave
push
xchg
or
or
sub
sbb
adc
or
nop
or
or
xor
insl
fwait
pop
test
lea
shll
xor
mov
cmp
adc
or
mov
dec
ret
notb
fsubs
pop
jns
fsubrl
dec
xor
inc
xor
sbb
leave
adc
mov
rorl
pusha
adc
mov
pop
jl
cltd
add
mov
add
pop
sub
inc
pop
adc
push
push
sbb
into
mov
dec
loop
and
pcmpeqw
add
dec
sub
mov
xor
dec
clc
mov
sub
cld
xchg
pop
cmpl
test
mov
sbb
inc
adc
clc
inc
outsb
add
or
inc
out
xor
xchg
loope
and
xchg
rorb
sbbb
lea
mov
xchg
or
add
jae
add
mov
fcom
mov
idivb
xor
jmp
iret
or
xor
and
push
adc
mov
jne
ror
jb
cmp
orl
sub
or
push
lret
mov
cltd
call
incb
addl
mov
and
aam
or
mov
sbb
fs
xor
movsb
cmp
sbb
int3
jmp
adc
addl
fadds
aam
push
adc
add
inc
out
jge
pushw
out
push
pop
insb
jmp
fdivs
jge
movzbl
add
inc
inc
push
jl
inc
dec
jl
pop
scas
ret
rcrl
sbb
in
add
shlb
add
and
aam
scas
cmp
add
jge
int3
cmp
lock
pusha
pop
mov
dec
iret
js
push
shrb
push
push
pusha
inc
cli
popf
push
dec
xor
xchg
jno
inc
add
dec
cld
nop
pusha
pushaw
ds
leave
movsb
add
or
cmp
mov
clc
xchg
shll
dec
nop
outsl
cs
mov
jmp
sub
fnstcw
and
push
mov
cmp
jl
cmc
js
fildl
adc
add
sti
pop
cs
push
mov
jb
push
loop
xor
js
ret
clc
jg
jg
xor
call
ret
call
dec
bound
adc
insl
lret
pop
sub
sbb
push
cld
arpl
jae
inc
out
sti
pop
or
cmp
jp
or
dec
popa
loopne
testb
and
or
hlt
jb
inc
or
xor
in
cmpsl
aam
call
lea
push
lock
cmpb
adc
dec
sub
or
inc
inc
mov
jae
jno
loopne
adc
mov
imul
jle
or
aaa
stos
push
mov
fmuls
cmp
insb
test
mov
mov
out
sub
jns
and
or
and
add
cmp
js
push
adc
dec
pop
cmp
addr16
mov
test
mov
jle
jns
movb
call
fcoml
ret
pop
pop
loopne
and
xor
mov
and
shll
lods
jmp
xchg
and
inc
cmp
and
test
push
pop
or
lcall
incl
decl
xchg
add
sub
pusha
insl
add
pushf
sbb
push
push
scas
inc
rorb
add
cs
decl
dec
or
rclb
add
push
inc
inc
xorl
add
ret
sbb
push
pop
aam
lret
je
fmuls
out
push
and
jns
mov
pop
sbb
and
scas
add
or
pop
mov
lea
int3
loopne
fwait
inc
shrb
xchg
popf
stos
das
xor
cld
cmp
addr16
insb
loop
mov
add
dec
in
add
out
mov
stos
and
pop
xor
xor
repz
daa
ret
fisubrl
dec
pushl
fimuls
mov
stc
clc
call
xor
ljmp
adc
int3
int3
into
insl
enter
mov
or
imul
int
stos
ja
cmpsl
sub
jle
cmp
imull
or
add
push
jns
jae
mov
and
frstor
loopne
fsubrs
adc
in
xor
pusha
fs
sbb
cmpl
dec
and
mov
fisubrs
in
sbb
jne
sub
or
adc
loope
or
mov
dec
sub
adc
sbb
add
fs
pusha
dec
xor
rcl
and
mov
inc
and
out
add
lds
fidivs
jne
leave
sbb
call
data16
mov
xor
rcll
imul
das
adc
jo
divb
xor
arpl
stos
adc
lods
pop
xor
cmp
ss
in
pop
enter
sbb
shrb
lods
jl
adc
cmp
cwtl
inc
imul
push
lret
xchg
orps
cltd
pop
push
addl
or
push
out
add
jle
sbb
pop
adc
ljmp
or
idivb
push
inc
fcompl
fistps
add
add
cmp
leave
mov
jns
add
incb
ffree
sbb
outsb
xor
dec
and
adc
adc
xchg
leave
xchg
insl
and
daa
inc
sub
out
mov
sbb
daa
imul
lea
cmp
andb
nopl
or
or
in
xchg
adc
inc
sbb
or
inc
or
adc
sbb
sbb
jl
jmp
fs
xchg
or
add
test
cmp
cmpb
in
sbb
ljmp
hlt
lods
and
push
push
nop
push
aad
sbb
mov
push
pusha
pop
leave
cmp
mov
xchg
js
shll
or
dec
int3
mov
mov
pusha
sahf
bound
imul
test
jmp
cltd
in
adc
enter
add
jbe
call
inc
call
loopne
sbb
inc
sarl
sti
jg
out
mov
pop
sub
inc
cmpb
sub
pop
dec
mull
and
pop
das
and
add
xor
lcall
hlt
pop
enter
or
and
jo
fs
mov
fcmovnb
fstps
repnz
inc
das
loopne
and
inc
fsubs
inc
jb
aam
daa
inc
jb
rcl
int3
int3
adc
dec
cs
dec
enter
and
das
sub
loope
mov
push
mov
lea
push
sahf
inc
lock
push
jo
inc
add
in
fadds
mov
xor
jns
or
mov
and
inc
mov
shr
adc
xor
jne
xor
leave
xchg
mov
sahf
fs
add
mov
xor
adc
mov
js
dec
pop
push
cwtl
rcrb
movsl
leave
jo
push
xor
or
adc
xchg
jno
fwait
out
ret
xchg
das
mov
mov
pop
rcl
jnp
sub
add
bound
or
sbb
xor
adc
das
pop
or
dec
push
lcall
xor
xor
and
push
add
adc
add
adc
add
cld
sahf
add
pop
or
adc
sub
cwtl
cmp
push
and
sahf
sbb
lea
jecxz
loopne
out
fwait
adc
sub
cmp
xor
adc
push
mov
xor
dec
jno
cmpsb
cmp
cmp
xor
push
add
jecxz
mov
adc
sub
mov
pop
push
mov
mov
add
dec
les
adc
pop
cld
fadds
cltd
push
int3
dec
jge
fnstsw
mov
cmp
add
xchg
shlb
loope
adc
stc
mov
and
xlat
add
jno
push
test
ficoms
je
pop
stc
xlat
imul
pop
sub
jecxz
dec
pop
mov
mov
int
jle
cli
shl
or
arpl
jl
iret
xchg
push
leave
lcall
adc
mov
inc
es
pop
dec
adc
mov
andl
scas
adc
cmpl
and
cmpsl
nop
jge
fistpll
fnstcw
mov
xlat
ss
cmp
mov
popa
shll
ljmp
nop
rcll
mov
or
cltd
int3
addr16
ss
or
ja
cmp
adc
dec
inc
ja
xchg
mov
test
sar
jne
testl
push
push
test
or
and
cmp
cmp
inc
inc
inc
mov
inc
das
fidivs
sub
or
xor
fdivs
sub
ret
adc
sbb
adc
lcall
pop
inc
and
popa
iret
cmp
cmp
inc
adc
push
js
call
xchg
xor
mov
inc
int
mov
mov
fs
inc
mov
adc
loop
ror
lea
pop
sbbb
mov
push
rorl
adc
mov
cmp
shl
mov
xchg
int
mov
jb
fdivr
daa
call
inc
inc
data16
mov
or
push
push
cmpsl
hlt
adc
or
mov
lock
add
mov
int3
or
movsl
pop
add
adc
movsb
sbbl
mov
inc
mov
dec
pop
decl
sub
sbb
and
cmp
es
or
imul
pop
daa
mov
ret
or
ljmp
mov
cmp
or
cmp
and
movsb
push
cmp
les
inc
fadds
hlt
loope
es
cmp
icebp
mov
xor
inc
add
neg
add
add
loope
not
mov
in
adc
or
or
jmp
pop
shrl
jbe
or
mov
mov
inc
sub
cmpsb
in
pop
inc
sar
xchg
sbb
outsb
std
or
push
xor
and
add
jns
mov
push
xchg
test
mov
cmpsl
mov
daa
insl
fwait
mov
adcl
add
sbb
dec
lret
jnp
lcall
movsl
cmp
inc
mov
adc
lahf
mov
inc
mov
call
stos
imul
cltd
push
or
jmp
sar
addr16
mov
cmp
ficompl
inc
mov
cmp
aad
loopnew
das
faddl
mov
out
or
nop
orb
dec
movsl
dec
ret
sub
mov
int3
arpl
sahf
push
mov
push
dec
fmuls
jns
jl
or
outsb
in
repnz
negl
sbb
inc
add
or
dec
jno
xchg
mov
cmp
jle
loop
inc
add
xor
repz
mov
sbb
dec
xchg
and
and
or
aam
lods
int3
sub
fcoml
push
std
repz
inc
or
scas
aas
push
fildl
aad
call
roll
jle
jecxz
add
and
dec
pop
and
add
push
fldenv
inc
je
jne
fwait
roll
lret
bound
sub
lahf
sub
add
xor
fsts
jp
mov
inc
fists
sub
inc
pop
jne
inc
pop
out
jae
in
fs
push
test
inc
mov
xchg
aaa
fwait
inc
fisttpl
pusha
cmp
mov
movl
cmp
imul
mov
addl
inc
and
mov
test
xor
in
scas
adc
push
mov
xlat
mov
movsb
mov
fidivrl
das
pop
sbb
outsb
decl
lea
jmp
or
cwtl
leave
sub
pushf
lea
outsb
lcall
add
stc
or
push
inc
mov
xchg
sti
or
pushaw
aaa
insb
pop
add
test
pop
mov
add
inc
dec
xor
rcl
adc
cmpsb
xlat
mov
adc
clc
ret
out
arpl
lcall
test
cmp
dec
add
mov
adc
ljmp
clc
cs
push
cli
add
sub
icebp
je
push
sub
add
jns
mov
testl
add
push
or
sub
int
insb
movsb
dec
int3
jo
int3
test
xor
sub
add
jnp
mov
mov
mov
pushl
mov
add
jmp
add
lea
push
shl
push
sbb
fcmovnb
sti
daa
sti
mov
popa
neg
stc
lds
andb
dec
cmp
xor
mov
testl
cmp
idivb
movsb
jo
mov
sub
and
cmp
pop
adc
pop
and
lahf
bound
nop
or
imul
add
pop
stc
sti
xor
pusha
pop
pusha
add
adc
test
push
inc
mov
cmpl
jae
and
loopne
inc
outsb
xor
into
inc
push
pop
movsl
std
shr
rcr
flds
fadds
fstps
push
jmp
loopne
jno
push
sub
adc
sbb
or
repnz
cmpsl
adc
bound
or
adc
pop
fdivrl
pop
cmp
clc
mov
and
sbb
and
sub
and
int3
sahf
daa
sbb
fs
adc
sub
imul
shll
xor
sub
pop
or
lods
jns
adc
adc
fisubl
int
rcrb
push
sbb
fdecstp
xchg
negl
xchg
add
flds
icebp
or
and
sub
dec
xor
sbb
push
inc
sti
dec
sbb
fs
cs
jg
adc
enter
fs
inc
cmp
add
cmp
into
fs
sbb
nop
in
cmpb
mov
pop
dec
sahf
fcmovnb
sbb
add
cs
in
xor
pusha
push
pushf
out
xor
sbb
faddl
xchg
and
sub
xchg
lcall
lcall
leave
and
cwtl
imul
out
aas
adc
mov
cmpsl
aas
xlat
inc
push
test
bnd
and
popf
cld
fistl
push
push
mov
add
push
add
dec
sahf
adc
les
xor
sbb
rcrb
jnp
out
incl
inc
pop
or
js
and
aas
push
dec
xchg
push
fistl
inc
mov
enter
dec
mov
fs
imul
outsl
xchg
pop
jle
adc
push
sub
iret
notl
and
mov
mov
xor
movb
cmp
dec
mov
or
inc
adcl
xchg
xchg
in
dec
dec
xchg
jb
or
loope
and
mov
inc
sar
and
inc
or
mov
jo
mov
or
xor
mov
or
jecxz
arpl
sti
push
or
sbb
lret
lea
fists
popf
adc
push
shl
inc
enter
in
sbb
pop
popl
call
jmp
lea
dec
push
mov
inc
lock
push
dec
call
ja
add
and
sub
mov
jne
test
lock
int3
mov
pop
ud0
dec
sub
or
popa
mov
js
daa
xorb
jg
sub
jge
stc
aaa
adc
jne
jnp
loopne
jg
or
xchg
or
nop
je
out
xchg
ds
sbb
mov
mov
pusha
faddl
lods
call
xlat
adc
inc
and
call
dec
aaa
and
cmpsl
pushf
lcall
mov
cmp
add
fwait
lods
iret
jne
xchg
sbb
ffree
sbb
ret
jecxz
push
shrl
add
sbb
jmp
outsl
jne
jae
cmp
aad
pop
xor
add
decl
clc
push
cmp
cmp
inc
push
cmc
lahf
fiadds
aam
cwtl
adc
in
test
decl
sbb
outsb
pop
push
popa
mov
add
mov
sub
cmp
sbb
iret
dec
add
dec
jge
mov
mov
fwait
or
loop
inc
adc
jecxz
sti
movd
pop
in
lea
aad
lock
xchg
shl
insb
arpl
sbb
adc
sub
lock
incl
jne
test
xor
jb
in
into
rol
add
subb
add
push
xchg
sub
movsl
xor
push
outsl
mov
lea
sbb
add
roll
add
imul
mov
fs
and
call
aaa
or
add
lcall
lea
stos
add
addr16
dec
inc
stos
dec
or
push
jne
mov
pop
adc
dec
movsl
add
mov
pop
sbb
test
adc
sub
mov
jo
inc
xchg
mov
cmp
lahf
cmc
sbb
xchg
sub
push
test
mov
adc
adc
popa
sbb
insb
mov
inc
cmp
jl
jb
mov
or
sub
xorl
arpl
xchg
jge
inc
and
andl
push
stos
xor
mov
ret
add
sbb
pop
add
add
sub
or
les
subb
sub
jns
mov
push
add
jb
sbb
ljmp
lret
cmp
addb
mov
inc
cmovne
mov
cmpsl
add
jp
or
mov
popa
repnz
insl
xlat
adc
in
or
or
and
adc
jl
loop
mov
dec
pop
lahf
hlt
mov
shlb
into
sarl
sub
rolb
int
add
adc
aaa
cmpsl
movsb
les
add
repz
or
xor
xchg
xchg
dec
sbbl
adc
and
and
in
sub
push
pop
loopne
inc
pop
lea
jg
add
das
negl
mov
adc
les
jae
mov
or
cltd
jg
lea
sbb
push
inc
out
pop
movl
mov
ss
or
cmp
jl
dec
ret
xor
fwait
add
out
lret
push
es
inc
xor
sub
fists
mov
shl
jbe
adc
push
dec
mov
test
imul
xchg
in
test
cmp
push
mov
inc
jecxz
out
mov
pop
push
inc
cmp
test
js
pop
sub
lock
cmp
push
sbb
daa
insl
aam
push
decb
incb
adc
sbb
jmp
fidivrl
mov
call
rorb
lret
add
incb
addb
fsubs
out
add
dec
das
cmpsl
ja
dec
dec
jns
clc
gs
rol
sbb
dec
dec
cmpb
or
popf
cmp
xchg
adc
sub
fisubrs
or
mov
cmp
mov
cmp
dec
mov
inc
inc
and
fsubrl
add
pop
push
adc
aam
adc
js
mov
or
aas
dec
jb
aam
fwait
adc
dec
enter
add
dec
dec
call
pop
lret
cmpsl
lcall
mov
loop
ret
push
dec
in
mov
mov
cmp
popf
mov
fs
add
pop
push
popa
mov
mov
mov
push
jo
ja
sbbl
mov
sbb
mov
cmp
call
push
mov
cld
adc
push
xor
xchg
or
out
and
add
js
dec
cld
dec
insl
adc
nop
add
cs
fdivl
pop
mov
mov
pushf
cmc
inc
pop
or
jg
dec
out
fcoms
cltd
add
xchg
xchg
xor
add
ds
sbbb
out
mov
mov
mov
je
notb
sbb
add
fs
hlt
imul
negl
addr16
pop
sahf
lock
dec
xchg
in
inc
xchg
imul
xchg
mov
loopne
imul
dec
inc
and
cwtl
mov
sbb
call
adc
pop
fsubrs
fidivrl
xor
xor
mov
and
inc
aam
das
lds
pop
imul
insb
and
jmp
push
mov
ja
or
and
movsl
mov
dec
imul
insl
lcall
mov
mov
mov
daa
jns
mov
push
mov
daa
inc
mov
sub
xchg
nop
and
xor
jne
int3
sarl
andb
push
push
jne
popf
push
loopne
insb
push
adc
push
arpl
push
push
into
and
cwtl
or
mov
shlb
fbstp
imul
push
ret
in
and
or
sub
adc
and
dec
cmpsb
fs
adc
scas
dec
jb
sbb
cmpsb
ss
and
and
daa
es
dec
cmpsb
sub
scas
and
and
in
outsb
inc
pop
xor
clc
outsl
add
ss
sti
adc
mov
in
dec
xchg
and
and
sub
andl
shll
sbb
lds
stos
aaa
inc
fwait
inc
lcall
mov
pushf
iret
pop
mov
idivb
enter
mov
sub
inc
mov
mov
inc
sahf
lods
fstpt
nop
and
fldl
call
popa
jmp
enter
int3
mov
and
jnp
pop
add
add
inc
inc
push
fs
and
xchg
push
fs
addb
or
ucomiss
jge
lock
xor
inc
inc
nop
add
fsubs
pop
sub
cs
push
jg
or
xchg
mov
and
xor
and
add
and
xor
add
and
aas
pusha
jle
add
and
xor
add
pop
jl
add
and
daa
and
xchg
cmpsl
and
jmpw
add
ret
and
add
xchg
jo
xchg
fs
sbb
dec
dec
adc
xchg
rclb
dec
add
shrl
xor
sub
std
and
push
movsb
xchg
xor
lods
addr16
fistpl
pop
daa
adc
cmp
mov
fisubl
sbb
in
push
and
loopne
xor
mov
add
inc
push
adc
andb
add
pop
and
mov
lcall
scas
cmp
adc
mov
push
call
into
orb
and
fwait
xchg
pop
mov
in
sub
push
adc
data16
sub
and
sub
cmpb
or
stos
or
leave
pop
cmpsl
or
adc
push
lock
popa
adc
mov
lahf
push
mov
dec
xlat
and
push
enter
jmp
fsubs
jb
jne
pop
adc
mov
mov
test
popl
inc
mov
add
dec
filds
pop
or
inc
data16
outsl
outsl
lea
inc
imul
mov
out
repz
push
inc
inc
mov
push
out
pop
lods
in
pop
dec
out
das
sub
and
xchg
xchg
mov
sub
loop
ret
adc
add
inc
clc
lods
add
and
scas
sub
inc
push
adc
pop
ret
xor
jne
xor
add
fistps
or
add
add
xor
add
bound
adc
xor
push
jnp
add
xor
aas
pusha
xor
sbb
das
sbb
test
movsl
imul
js
jmp
xor
push
mov
adc
push
imul
fistl
in
adc
pop
or
rclb
push
fistl
and
into
jl
sub
shll
adc
push
or
or
or
cld
xor
xchg
xchg
in
mov
xor
dec
cmp
xor
or
out
add
adc
in
outsl
xor
xor
xchg
pop
add
jle
and
push
pop
inc
xor
inc
pop
into
mov
push
cmpsb
pop
sub
fmulp
jmp
sub
pusha
adc
mov
pop
sbb
popa
imul
out
mov
jp
xor
cmc
and
insb
sub
pop
adc
subb
shr
add
lods
mov
push
sbb
stos
adc
pop
sbb
fmuls
stc
adc
insb
sti
popa
pop
mov
or
add
add
mov
test
xchg
mov
lods
in
loope
lock
xchg
inc
cmp
bound
jae
push
pop
rolb
lcall
mov
dec
imul
lock
pop
pop
pop
jo,pn
test
or
pop
and
popa
or
cld
rcl
cmp
cmpsl
jl
loope
ret
call
mov
xchg
mov
xor
dec
mov
ret
mov
push
push
adc
or
sub
dec
loopew
adc
in
or
inc
inc
cltd
jp
sub
or
cs
stc
cmovs
xor
sbbl
test
or
push
bound
sub
jnp
jns
xor
push
adc
daa
mov
pop
mov
add
repnz
mov
stos
shlb
mov
loopne
nop
rcll
repnz
xor
xor
rol
int3
enter
mov
mov
push
out
repz
pop
and
insl
pop
fwait
pusha
imul
movl
fwait
orb
push
ret
and
add
addr16
sub
pop
nop
sarb
and
sub
insl
inc
scas
cs
pop
leave
mov
nop
fs
dec
mov
ss
adc
hlt
pop
test
pop
sahf
pop
pop
lock
ljmp
jle
jge
test
adc
leave
or
loopne
ljmp
xor
ret
mov
inc
lret
mov
in
enter
cmpb
add
xor
dec
in
lea
dec
clc
mov
lods
and
push
pushf
in
mov
xor
rorb
xchg
sub
pop
mov
sbb
enter
test
rorb
or
int3
and
jno
fdiv
adc
and
inc
lock
in
dec
repnz
in
sub
and
gs
push
inc
stos
in
push
pop
cmc
dec
pop
sbb
mov
movsl
and
sti
outsl
cmp
add
and
and
add
je
movl
dec
inc
ds
dec
and
sbb
pop
add
jg
andb
outsl
jns
push
popa
xchg
jnp
insb
push
xchg
push
imul
xchg
push
cmp
xchg
xchg
xchg
fld
or
enter
insb
pushf
rolb
das
mov
or
or
mov
sbb
cmp
into
and
mov
mov
inc
mov
mov
ss
sbb
mov
aas
in
in
mov
cs
repnz
pop
and
push
mov
bnd
push
mov
repnz
add
fcoms
or
fdivs
mov
repnz
mov
repnz
mov
mov
push
mov
repnz
or
repnz
mov
movsb
cwtl
push
mov
repnz
mov
cwtl
mov
mov
mov
fldenv
mov
gs
leave
mov
push
subl
xchg
mov
addps
enter
inc
xor
and
push
xor
xor
sbb
sbb
pop
and
pushf
dec
mov
lock
lock
sub
rclb
fsubs
out
adc
sahf
stos
rclb
push
jns
xchg
test
pop
test
mov
sbb
sub
sbb
nop
sbb
xchg
xchg
inc
sahf
push
sbb
push
jns
cmp
cmp
sbb
mov
movsb
cmp
std
sbb
clc
std
fcomp
push
push
leave
enter
mov
pop
mov
pop
xchg
and
jo
jo
iret
push
xor
cmp
leave
enter
and
subl
add
or
and
fdivr
jns
rcrb
mov
nop
out
mov
mov
sahf
stos
mov
xchg
mov
mov
xor
sub
sbb
sub
add
fs
out
sub
sti
jae
out
fdivr
sub
sti
cmpl
test
sub
repnz
and
jae
mov
dec
dec
push
xor
enter
in
and
sbb
sbb
cli
out
int
in
xor
cli
push
jns
xchg
mov
xor
jl
xor
sub
sbb
stos
fs
xor
leave
xchg
inc
sahf
adc
fdivr
iret
inc
lcall
mov
mov
xchg
mov
aaa
iret
push
xor
push
in
and
clc
xchg
out
int
clc
cmp
clc
mov
push
jns
mov
mov
sbb
mov
nop
out
sbb
cmp
push
jb
cmp
idiv
notl
jae
cmp
and
mov
pop
js
js
xor
jae
xor
xor
jae
cmp
div
testb
in
lock
inc
lods
push
jns
push
mov
cmc
sbb
cmp
cmc
and
push
repnz
nop
inc
cmp
leave
enter
inc
cmpsl
xchg
and
hlt
dec
sahf
xorl
hlt
mov
sbb
mov
fs
out
fs
fs
sahf
stos
sbb
dec
lcall
enter
and
js
xchg
mov
dec
js
cmp
enter
sbb
repnz
adc
add
sub
sub
xor
mov
inc
shll
and
scas
sbb
sbb
or
push
xchg
sbb
sub
xchg
gs
stos
add
cwtl
cmc
and
ret
jae
push
inc
xor
enter
sarl
test
int3
int3
decl
lods
shl
jecxz
fdivs
jl
mov
arpl
add
movsb
int3
cmp
sbb
les
nop
adc
rol
les
test
dec
aaa
sbb
inc
ja
test
mov
sub
push
cltd
cltd
test
pop
out
cmpsl
push
imul
mul
and
enter
sbb
dec
xor
stos
jne
adc
and
add
leave
cmpsl
lods
inc
lods
xlat
arpl
or
xor
xor
mov
mov
mov
add
adc
xchg
push
rolb
or
mov
insl
clc
clc
and
leave
add
pop
or
xor
xchg
xorb
leave
adc
mov
pop
js
adc
mov
or
pop
addb
xor
jle
or
adc
dec
call
mov
dec
sbb
shr
in
xchg
mov
add
ja
sub
mov
out
xchg
lods
mov
add
dec
adc
dec
xor
push
xchg
rcll
test
cmp
mov
fmul
stos
imul
cmp
cmp
int3
or
sbb
cmp
xor
add
sbb
add
push
dec
pusha
pop
iret
adc
enter
inc
cltd
or
add
jnp
add
cmp
call
inc
lret
sub
mov
loopne
leave
rolb
sbb
and
in
fadds
inc
fmull
sarl
adc
lahf
jle
inc
cs
inc
adc
insb
dec
sub
xor
mov
sbb
pop
sbbb
pop
add
add
or
dec
push
rolb
dec
mov
lock
mov
sub
int
push
rol
lret
cmp
lea
sub
push
dec
dec
and
jle
mov
push
and
xchg
adc
mov
xor
cli
or
in
jo
test
dec
aaa
or
nop
mov
pop
fildl
mov
inc
adc
cmp
repz
mov
jbe
enter
test
dec
cmp
aas
rol
mov
sub
pop
push
enter
scas
or
mov
mov
arpl
push
fidivs
inc
imul
dec
and
and
and
add
adc
aad
roll
loopne
insb
adc
addr16
and
popf
arpl
pop
gs
pop
mov
andl
gs
test
daa
sub
cmovge
pop
jae
adc
test
push
xorb
pop
test
insb
sub
xchg
lret
movsb
jmp
test
sbb
arpl
mov
sbb
sub
cmpsb
push
sbb
add
mov
adc
loope
or
dec
add
das
lea
or
dec
adc
dec
or
imul
sbb
sbb
int3
cmp
jbe
mov
and
pop
mov
cmpsb
mov
shll
mov
dec
ret
and
pop
sub
inc
arpl
lds
or
or
dec
popa
cmp
rolb
add
push
adc
mov
xor
imul
adc
rcll
or
dec
outsb
adc
sbb
add
imul
fcomps
fadd
mov
inc
lcall
or
lods
lock
fbstp
mov
add
xchg
in
aam
mov
or
sub
outsl
mov
hlt
inc
dec
repnz
int3
mov
mov
loope
xchg
adc
test
les
sub
sarl
addr16
test
cmp
push
shll
cmp
xor
add
lods
lods
iret
leave
and
movsb
push
jb
and
push
shr
inc
mul
or
mov
movsb
movsb
pushf
mov
or
mov
push
and
and
and
inc
mov
orl
lea
fwait
add
inc
sub
test
data16
cmpb
and
outsl
mov
pop
xchg
in
or
aam
clc
dec
xrelease
inc
popf
adc
sub
jns
jl
xchg
mov
in
les
leave
pushf
adc
test
inc
enter
andb
xor
cmp
dec
inc
scas
js
jl
nop
dec
sahf
je
je
adc
or
pop
and
insb
jb
pop
leave
insb
jbe
test
add
and
pusha
call
pusha
adc
pop
pop
test
pop
aaa
sub
pop
outsl
xorb
push
or
mov
fstpl
and
push
push
shlb
lea
xchg
leave
fs
cmp
pop
dec
push
xchg
dec
inc
scas
dec
dec
dec
add
and
inc
dec
sub
dec
push
xchg
sbb
inc
inc
cmpsb
nop
and
cltd
dec
xchg
pop
inc
sahf
and
xor
cmpb
or
jae
enter
lahf
sub
in
jb
xor
sub
cltd
sub
or
or
stos
and
inc
xchg
and
fmul
add
or
sbb
sbb
and
adc
or
push
inc
shrb
enter
cmp
sbb
popf
or
sbb
add
inc
dec
add
pop
dec
push
das
adc
push
scas
gs
mov
push
or
sub
inc
add
fisubrs
push
or
or
and
and
push
sbb
movsl
lods
adc
into
nop
mov
sub
inc
test
cld
std
sbbl
add
loopne
test
or
test
dec
sub
imul
jo
cmp
xor
mov
xchg
xchg
xor
insl
hlt
std
nop
hlt
std
inc
scas
lods
mov
std
mov
loopne
sbb
je
mov
in
std
push
or
and
push
in
std
lock
lock
xchg
pushf
fs
std
lock
std
push
leave
sub
and
mov
add
cmp
or
test
std
in
sbb
dec
leave
loopne
loopne
fdivr
repnz
xchg
fdivr
aam
leave
out
push
and
fdivrs
sub
dec
rclb
int3
int3
stos
nop
xchg
cmp
inc
je
cltd
in
leave
dec
push
enter
cmp
rcrl
fs
rorb
lahf
xchg
dec
inc
les
and
and
int3
mov
adc
mov
outsl
jl
and
and
cmp
fstl
es
inc
mov
mov
scas
mov
inc
and
adc
imul
dec
pushf
xchg
pop
test
enter
movsb
movsb
leave
jae
leave
test
mov
jb
and
xchg
sub
aas
or
pushf
mov
inc
test
iret
sub
xchg
cwtl
add
lds
add
std
enter
nop
std
pusha
sub
xchg
std
out
or
enter
adc
or
mov
push
mov
xchg
mov
and
test
cmpb
jne
aad
mov
xorb
and
test
imul
xchg
or
jl
push
mov
push
dec
pop
xlat
cmp
lods
fldenv
inc
mov
mov
sub
or
inc
mov
insb
add
daa
xchg
jo
test
rolb
jae
insb
adc
add
fbstp
in
sbb
test
or
and
dec
insb
rolb
xchg
dec
mov
xchg
addb
pop
std
pop
dec
pop
cmpsb
dec
fstl
es
sbb
push
push
and
adc
push
push
or
pusha
sub
dec
cmpsb
in
add
inc
xor
inc
xchg
xchg
sub
mov
mov
push
push
nop
inc
xchg
les
orl
pop
jns
dec
sbb
push
inc
sub
cmp
jmp
aas
std
mov
inc
cmpsb
loop
cmpsl
cmp
sti
jmp
xor
sbb
mov
push
loopne
dec
sub
and
or
and
xchg
dec
inc
sub
and
push
loopne
dec
and
add
add
fbstp
mov
add
cwtl
nop
lret
lahf
mov
dec
and
mov
push
or
sub
and
aaa
imul
sbb
and
or
xchg
and
inc
push
mov
sbb
adc
es
dec
adc
jl
inc
arpl
aas
enter
and
and
jae
test
add
sbbb
outsl
imul
and
inc
add
or
inc
cwtl
mov
pop
sub
addr16
leave
pop
push
push
aam
push
dec
inc
dec
dec
jg
loopne
cwtl
rorl
push
push
push
gs
push
popf
xchg
and
gs
push
jo
sub
mov
xchg
lret
adc
and
adc
or
mov
inc
dec
stos
mov
sbb
dec
ja
jg
sub
jmp
shlb
dec
dec
insb
push
sbb
cmpl
sbb
xchg
insb
pop
push
das
loope
cmc
push
jb
jnp
in
or
add
mov
xor
leave
xor
lock
mov
jbe
mov
pop
inc
data16
jg
ret
fldl
mov
and
or
and
fsubr
inc
adc
adc
pop
pusha
push
push
ret
add
imul
nop
mov
sub
ret
and
pop
jbe
push
or
dec
push
inc
or
and
popa
nop
es
jecxz
cmp
or
push
in
out
dec
daa
dec
push
inc
sbb
or
orb
mov
and
dec
mov
inc
mov
bnd
inc
xchg
cmpsb
adc
inc
inc
and
cmp
ja
push
inc
cwtl
imul
pop
daa
data16
loope
fst
push
or
insl
and
je,pn
xchg
or
ja
in
push
xor
aaa
and
jae
add
outsl
cmpb
xchg
or
push
push
dec
xchg
push
inc
xchg
test
mov
pushf
daa
shlb
pop
inc
mov
mov
test
daa
nop
loope
andl
jmp
cmp
test
icebp
mov
test
sbb
sub
jle
sbb
push
mov
popf
mov
pop
or
jns
xchg
xor
mov
jmp
pop
ret
and
pop
pop
inc
cwtl
out
xchg
cmp
mov
sub
andl
enter
inc
mov
xchg
ret
decb
inc
les
pusha
push
popf
push
sbb
test
fiadds
jb
das
ds
pminsw
cs
inc
sbb
or
das
test
repz
dec
jns
pop
cmp
xor
adc
xchg
filds
jns
orl
push
js
push
or
or
ss
jnp
sbb
mov
shrb
pusha
jecxz
push
pop
sub
add
xor
ds
loope
test
cmp
adc
mov
ljmp
inc
aaa
mov
mov
xor
enter
cld
xchg
add
fsts
roll
scas
jbe
add
inc
inc
out
mov
push
inc
pusha
shrl
arpl
outsl
in
fimull
jmp
dec
jbe
testl
xlat
mov
sbb
or
inc
pusha
fwait
inc
ret
insb
sub
hlt
stos
xchg
hlt
mov
or
ss
test
out
std
mov
ds
jmp
roll
push
int3
xor
icebp
sbb
lret
sbb
je
es
jmp
lea
or
and
mov
xchg
inc
or
int3
cmp
xchg
jno
xor
add
aas
dec
movsl
adc
pop
push
add
sub
xchg
cmp
fsubl
popf
or
jle
jle
push
dec
es
aaa
xchg
in
test
mov
push
cmp
sbb
pop
repnz
push
sti
xor
jmp
lret
inc
mov
std
push
add
add
inc
sub
xor
orb
inc
inc
cltd
ret
mov
lds
mov
xor
icebp
pop
leave
pop
xor
fbstp
cmp
fildll
xlat
push
leave
pop
popa
add
jae
pushw
jbe
dec
test
and
xchg
out
ds
jno
sub
and
jno,pt
iret
and
add
dec
and
jg
ds
pop
cmp
addr16
and
dec
enter
or
and
xchg
sbb
int3
inc
push
mov
adc
pusha
add
fs
or
jns
fs
js
and
sub
or
add
mov
add
and
mov
ret
add
cmpsl
mov
add
or
sti
add
jmp
push
arpl
roll
push
pop
add
or
mov
addb
xchg
sub
sbb
add
cmp
ja
fdiv
add
xorl
sar
call
sub
and
ror
push
adc
cld
das
pop
dec
pop
sub
dec
sbb
pop
and
shll
push
jo
arpl
filds
fwait
cmp
xchg
add
jl
arpl
add
lahf
pop
push
enter
mov
arpl
push
inc
push
outsl
sbb
inc
inc
scas
push
xchg
and
cmp
lock
fs
iret
lock
mov
sub
and
sbb
mov
in
cwtl
sub
adc
lahf
sub
jge
inc
sub
sbb
addr16
pusha
adc
int3
stos
or
js
test
add
pop
xchg
imul
xchg
test
leave
sbb
and
call
jo
and
mov
shlb
dec
add
test
push
jno
add
gs
push
xchg
jmp
pop
inc
loopne
stos
xor
mov
xor
sub
call
lret
cmc
adc
add
mov
or
jo
and
call
or
cwtl
jmp
adc
cmp
dec
inc
faddl
fmull
sbb
xchg
push
mov
add
lret
lock
int
scas
sbb
ja
fcomps
scas
mov
push
xchg
cltd
mov
push
imul
xor
dec
pusha
sub
in
pop
nop
fidivl
dec
mov
mov
inc
inc
dec
jne
mov
adc
push
jecxz
call
lret
aam
fs
and
pushf
es
loope
xor
pusha
push
jo
add
add
mov
add
leave
add
xchg
or
adc
and
add
clc
mov
inc
andb
inc
xchg
int
cmp
and
sbbl
dec
inc
or
sub
adc
xchg
dec
mov
int3
xchg
and
add
aam
pop
or
sbb
and
add
iret
push
sub
or
or
pop
orl
ljmp
faddl
cmp
jns
pop
pop
in
add
or
mov
sub
cltd
jg
xor
dec
pop
xor
fs
add
out
das
inc
pop
arpl
xor
out
push
fs
lcall
xchg
mov
cwtl
and
pusha
enter
aaa
jbe
stos
xor
fistl
jge
jo
pop
or
leave
mov
and
or
mov
adc
add
sub
outsb
pop
dec
outsl
mov
shlb
adc
bound
add
mov
push
mov
xor
xor
inc
outsl
in
sub
push
ss
test
dec
sbb
dec
rcr
dec
addr16
lret
push
xchg
xlat
and
popa
jne
rolb
pop
adc
in
or
adc
nop
sub
or
cmpsb
inc
imul
push
divb
fs
xchg
inc
add
addr16
rcrb
ret
inc
dec
adc
dec
mov
imul
xchg
dec
sbb
or
roll
push
lret
clc
add
fs
xchg
repz
cli
gs
inc
and
push
data16
push
jbe
outsl
pop
push
sub
paddb
mov
push
push
xor
inc
out
in
in
lret
lods
out
jl
dec
inc
add
xchg
fildll
dec
push
push
add
inc
add
fwait
lret
data16
cwtl
sahf
push
mov
fsubl
pop
ss
addb
movsb
lcall
inc
sub
dec
sbb
aam
outsl
mov
nop
push
test
fadd
mov
xor
push
insl
in
pop
clc
ds
push
aam
mov
je
shll
jl
dec
push
rolb
dec
loopne
push
sbb
or
rcrl
insb
in
pushf
mov
addb
mov
xchg
dec
dec
test
pusha
fcomp
nop
outsl
mov
inc
push
inc
adc
push
loopne
pop
mov
fbstp
fdivl
add
fwait
pop
pushf
push
dec
push
inc
inc
adc
xchg
int
scas
cmpsb
call
inc
add
push
fwait
outsl
test
inc
add
fdivrs
inc
add
mov
test
js
mov
mov
ficomps
cmp
add
fwait
gs
nop
int
sbb
push
imul
jl
dec
push
mov
push
xor
push
push
or
sub
nop
movsb
and
add
cltd
add
clc
ss
push
jo
rep
xchg
inc
inc
adc
loopne
dec
pop
cwtl
fwait
gs
aam
sbb
or
dec
jae
jl
fcomp
pop
in
sub
ficoml
shr
ds
rolb
inc
add
add
lcall
nop
inc
pusha
fsubrl
rorl
lods
adc
in
sbb
fldcw
movsb
push
je
inc
mov
push
sub
in
clc
push
les
clc
jl
cmp
jge
mov
fisttpl
pop
addl
outsl
repz
call
hlt
stos
xchg
push
xor
cmpsb
imul
mov
push
int
movsb
jmp
int3
or
test
pop
mov
push
mov
dec
jmp
inc
pop
cmp
cld
or
xorb
in
dec
das
fadds
fadds
jge
xor
and
mov
xor
in
sahf
enter
add
pop
mov
push
test
daa
cmp
mov
mov
xlat
iret
enter
fcomp
fxch
loopne
jecxz
in
pop
add
adc
add
xchg
insb
and
jo
cld
inc
je
lods
gs
pop
nop
mov
xor
xor
dec
lea
xchg
incl
add
sahf
pop
fsub
lods
inc
aad
push
adc
mov
fwait
sbb
inc
fdiv
sbb
les
pop
movsl
std
punpckhbw
pop
cmp
cmpsl
push
imul
or
aas
ljmp
orb
sub
mov
hlt
inc
cld
push
add
or
sbb
xor
shll
xor
inc
dec
shll
insb
je
dec
shll
test
shll
shll
in
hlt
shll
mov
jns
push
adc
xchg
add
add
cmpsl
xchg
outsl
leave
leave
gs
xor
jb
nop
mov
xchg
in
jb
xchg
addl
addl
les
enter
cmpl
out
pushf
cmp
test
rcrl
and
cmpsl
repz
add
orb
push
xor
xchg
or
add
adc
push
ja
pop
inc
inc
incl
jl
mov
mov
aam
hlt
imul
cmpsb
imul
fstpl
pop
adc
iret
and
xor
inc
add
jb
push
push
inc
xor
icebp
mov
mulps
mov
cmpsb
les
jg
dec
and
add
add
scas
out
insl
or
test
scas
enter
xor
xlat
push
fcoms
in
push
cmp
cltd
ja
and
nopl
xor
out
sarb
rol
add
fs
je
incl
fidivrl
test
pop
mov
pop
mov
cmpsb
lret
hlt
sti
invd
sbb
mov
lcall
inc
or
imul
imul
cmpsb
imul
sbb
sbb
push
or
fs
js
nop
cmpsb
imul
imul
dec
shll
push
xor
dec
lret
mov
roll
pusha
xor
imul
push
add
xor
shll
out
insl
dec
or
pop
cmpsl
pop
lidtl
add
cmpsb
imul
shll
cmpsb
xchg
mov
dec
shll
js
xor
shll
mov
xor
rcr
fsubr
lock
fnstcw
add
add
lods
pop
lods
cmp
or
or
push
subl
add
add
add
adc
sbb
nop
push
mov
or
insb
in
out
not
or
lret
lock
add
add
lcall
xor
jg
dec
pop
push
shll
movsb
mov
sbb
and
xor
dec
rcrl
mov
cmp
cs
pop
adc
fiaddl
sbb
mov
fwait
add
jmp
pushl
xor
or
jle
repnz
fucomi
cmpsb
das
sti
montmul
cmpsb
orb
inc
xchg
inc
push
sbb
adc
lods
pusha
nop
adc
xor
dec
xchg
or
enter
sbb
enter
add
fadds
or
adc
fs
add
dec
push
mov
mov
mov
nop
cwtl
test
mov
mov
push
xlat
pop
sbb
negl
sub
pop
insb
fst
adc
jae
and
fisubrs
lock
or
cmpsb
imul
imul
cmpsb
imul
and
xor
shll
pusha
je
orb
mov
mov
stc
jns
adc
outsb
mov
pusha
add
push
sbb
negb
scas
jbe
lds
in
filds
inc
xor
xchg
pop
mov
add
or
nop
push
pusha
dec
rorl
std
test
xor
shll
cli
movsb
stc
mov
clc
int3
mul
mulb
cmc
or
sbb
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
and
add
sbb
sbb
invd
andb
add
jnp
xchg
jbe
mov
pop
outsl
mov
or
or
divb
pop
addb
sbb
lcall
or
jbe
insb
stos
jmp
aas
adc
xor
andl
cmp
dec
pop
pop
add
insl
mov
pop
inc
gs
popa
push
lea
adc
sbb
push
or
fs
mov
or
xchg
aas
enter
push
push
xchg
pop
add
jnp
or
stc
mov
cli
sti
cld
shll
add
addb
shll
add
je
inc
push
cs
mov
mov
mov
xor
in
lods
call
shll
test
lock
xor
rcr
hlt
mov
xor
enter
or
fimuls
loopne
add
sub
imul
insb
lcall
adc
dec
shll
sbb
sbb
xor
shll
and
dec
shll
inc
mov
sub
int3
xor
xor
rcr
xor
in
cmp
xor
fs
cmp
or
lcall
inc
mov
lcall
movsb
cmpsb
imul
imul
cmpsb
imul
shll
cmpsb
or
xor
mov
inc
xor
shll
je
in
js
xor
shll
mov
cmpsb
imul
imul
cmpsb
imul
xor
rcrl
insb
cwtl
sub
xor
pushf
xor
mov
shll
push
lods
test
shll
int3
mov
shll
in
mov
mov
enter
lcall
lock
cmpsb
sub
add
xor
or
fcomps
pop
fdivl
loopne
jl
xor
shl
cmp
call
dec
pushf
in
push
lods
lock
shll
hlt
jo
clc
shll
mov
cmpsb
imul
shll
or
or
shll
adc
cmp
shll
cld
pop
cmpsb
imul
cmpsb
imul
cmpsb
imul
mov
cmpsb
imul
cmpsb
imul
xchg
int
or
pusha
or
sbb
cmpsb
imul
imul
shll
mov
loope
fidivl
mov
jo
jo
pushf
push
rcrb
pop
adc
push
and
int3
push
sub
mov
push
cmp
in
push
inc
addl
idiv
push
push
or
xchg
xchg
xchg
fs
jo
xor
shrl
pop
mov
int
mov
adc
dec
in
mov
in
push
push
roll
shrl
jecxz
fiadds
add
adc
xor
dec
pop
fs
shll
jl
xchg
mov
lods
mov
imul
loopne
loopne
lcall
sub
imul
mov
push
lcall
inc
pop
push
aam
xor
mov
hlt
add
adc
xor
xor
roll
je
dec
shll
fsubr
lcall
sbb
cmp
cwtl
imul
sbb
aam
pop
pop
call
add
jmp
fwait
rcr
inc
cmpsb
push
cli
ds
std
cmpsb
jns
ret
scas
pop
push
push
jl
mov
push
pop
cmpb
adc
sahf
mov
lahf
add
pop
daa
scas
aas
and
xchg
push
stc
icebp
loope
cmp
rol
addl
xor
clc
lock
lahf
stos
mov
insl
inc
xor
or
xor
add
xor
bswap
adc
jo
hlt
decl
addl
dec
mov
shrb
sbb
and
adc
das
out
pop
fbld
sub
xchg
push
scas
outsl
lahf
pop
or
cmp
add
inc
xor
or
cmp
pop
aaa
testl
dec
mov
ja
call
jmp
adc
sub
sbb
daa
out
xlat
test
cwtl
pop
movsb
fs
push
stos
imul
add
xor
push
dec
incb
shll
or
inc
mov
mov
jle
inc
mov
lea
jge
loop
shrb
out
push
fisubs
loope
shrl
bound
pop
mov
insl
popf
pop
or
cmp
push
inc
testb
cmp
add
dec
mov
jbe
dec
mov
jne
ljmp
jmp
push
sub
sbb
and
push
pop
cmpsb
xchg
push
test
gs
push
sti
ja
mov
lds
push
inc
dec
cmovns
mov
fisttpll
push
pop
and
jae
push
sbb
jge
std
sbb
push
bound
mov
inc
sub
sbb
fstp
push
mov
or
ja
neg
aaa
jb
or
emms
ja
jg
mov
cmpsl
mov
aaa
fnstsw
fbstp
aas
out
popa
dec
mov
xor
aas
lret
xchg
scas
jg
jmp
hlt
aas
stos
adc
shl
aas
aas
cmp
jmp
jnp
add
enter
aas
pop
stos
jb
push
test
add
imul
je
sbb
imul
or
push
or
sbb
sub
xor
xor
and
adc
xor
shll
pop
push
adc
shll
sub
cmp
dec
shll
push
sysenter
dec
shll
push
and
dec
sarl
cmp
dec
pop
daa
cs
shll
das
aaa
ds
and
or
enter
xor
or
dec
cmp
aaa
imul
ja
ds
cmp
insb
sbb
adc
sbb
or
aaa
and
cmpsb
imul
ss
cs
push
insb
nop
xor
outsb
jns
js
xchg
cmpsb
gs
pop
bound
or
imul
push
ss
insb
inc
aas
outsb
cmp
outsb
push
cmpsb
outsl
pop
or
add
jecxz
add
add
push
pop
or
or
add
cmp
call
add
add
add
add
jge
add
add
jmp
xor
adc
pop
and
xor
inc
mov
adc
xor
sbbb
sbb
sbb
sub
test
aas
adc
arpl
addr16
jne
ja
jns
addl
decl
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
inc
enter
rcl
aad
xlat
fcomp
loop
in
out
call
repz
cmc
mul
shll
clc
stc
cli
fs
arpl
pop
or
fisubs
sahf
adc
in
mov
jno
and
adc
xchg
mov
lock
shll
xor
and
or
and
imul
gs
jmp
idivb
insb
pop
inc
out
push
je
add
or
shlb
push
cwtl
xchg
sahf
mov
fsubrs
fistl
scas
push
inc
push
mov
add
adc
jnp
mov
enter
push
pop
add
dec
push
xchg
adc
xchg
mov
imul
xor
scas
outsb
or
pop
out
push
in
movsl
pop
outsb
push
mov
in
push
or
dec
shlb
xor
out
inc
pop
lock
push
arpl
dec
inc
xchg
add
dec
movsb
or
push
fadds
into
push
add
push
lock
bndstx
loopne
adc
lods
xor
pusha
sbb
push
or
insl
push
nop
mov
mov
es
push
les
xlat
fsubrs
andl
xchg
int
sub
mov
mov
xchg
add
lods
es
mov
inc
adc
or
pop
loopne
push
es
scas
call
push
cmpb
int
sub
xchg
mov
aam
push
mov
sub
dec
mov
testb
and
push
pop
addb
call
es
push
push
rorl
dec
lret
clc
cs
pop
push
dec
roll
scas
movsb
mov
mov
mov
mov
dec
cwtl
pop
insb
int
push
adc
leave
test
in
push
mov
pop
inc
shr
ja
into
xchg
fs
mov
rcrl
dec
add
scas
add
adc
push
sub
jo
mov
adc
jo
sub
fadds
ja
scas
pop
xchg
pusha
ficoms
hlt
add
test
in
sahf
push
or
mov
lcall
lea
out
cwtl
add
mov
push
imul
insb
push
enter
mov
mov
mov
mov
insb
push
mov
movsl
cmpsb
pop
push
fcompl
pop
xchg
xor
fiaddl
sahf
mov
call
dec
scas
inc
add
lods
mov
ds
push
lock
movsb
push
inc
and
rorb
out
sbb
jl
mov
ss
call
call
ss
in
cmpb
fisubrs
push
aas
mov
push
popf
push
hlt
push
push
pop
mov
sbb
sahf
sbb
fsubs
pop
xor
out
mov
jo
pushf
ss
mov
adc
pop
divb
in
pop
sahf
pop
mov
das
adc
repz
and
out
into
pushf
daa
pusha
dec
jnp
inc
fcomps
push
inc
cmp
inc
outsb
xor
outsb
aam
inc
mov
dec
push
test
imul
mov
pop
adc
jbe
xchg
push
pusha
mov
lods
cmpsb
mov
or
scas
out
and
fidivrs
popa
adc
es
lcall
jbe,pn
fisubrl
push
cmp
rolb
push
xchg
pusha
imul
add
sahf
in
push
outsb
dec
or
adc
rorb
imul
cs
mov
push
mov
sub
js
xchg
xchg
fsubrl
mov
pushw
hlt
mov
xor
push
cmp
pop
adc
out
or
ds
js
adcb
imul
subb
mov
clc
sahf
sbb
mov
outsb
adc
out
and
or
dec
pop
rcl
or
push
sbbb
rorb
in
rcrl
push
adc
pop
mov
adc
and
dec
out
jmp
add
mov
mov
fiaddl
add
movsb
cmpsb
push
sbb
xorb
je
lret
push
xchg
pushf
ja
aam
or
dec
shr
es
push
mov
ror
mov
jl,pt
mov
xchg
add
ficomps
scas
mov
sub
or
or
sbb
adc
mov
mov
push
mov
out
cmpsb
xorb
call
sbbl
xchg
insl
push
mov
outsb
fmull
mov
pop
imul
xor
cmp
push
xchg
in
jbe
enter
fisubs
sbb
mov
cmp
dec
mov
ja
inc
inc
xchg
fwait
push
adc
add
addb
dec
add
push
xor
les
rorb
fs
or
or
add
add
add
add
push
dec
or
push
add
fisubrl
dec
or
pop
insb
imul
push
and
pop
dec
aaa
push
pop
mov
add
inc
add
adc
in
test
push
loop
in
fnstenv
or
xor
or
dec
pop
jae
xor
or
push
dec
xchg
inc
mov
mov
fidivl
cs
pop
push
outsb
dec
xor
inc
dec
inc
lcall
or
inc
sbb
inc
sahf
inc
cmp
push
push
jbe
dec
add
repnz
movsb
pop
inc
sub
pop
add
add
adc
cltd
pop
add
add
add
push
fdivl
push
pop
sahf
add
add
push
mov
sbb
add
pop
mov
add
cs
dec
add
incb
cld
jns
xchg
inc
jg
clc
aas
push
pop
jmp
fisubs
cld
add
pop
or
imul
push
aas
cmp
dec
jb
jg
addb
mov
test
xor
rorl
mov
mov
roll
mov
cs
psubb
addr16
lret
in
out
pop
out
ficompl
xlat
mov
cmp
add
loopne
repz
add
pop
sbb
pop
pop
aas
pop
mov
ds
xchg
addr16
lock
mov
xor
pop
std
mov
push
fldl
cmpsb
imul
jle
or
int
rolb
je
cmpsb
jo,pt
iret
rolb
sahf
add
cmp
add
aas
pushl
cmp
xor
push
cwtl
pop
cmovge
imul
push
add
jb
shll
pop
aas
into
push
add
ficompl
jo
lcall
pop
and
cmp
cmp
bsf
dec
pop
outsb
es
add
jne
pop
std
clc
cmp
loopne
rcrb
cs
push
mov
inc
pop
ret
jmp
std
lods
adc
jmp
add
xchg
lret
neg
pop
sbb
mov
addb
push
push
cs
stos
mov
add
lret
in
dec
pop
in
les
test
lret
adcl
jg
aas
push
push
cs
test
add
andl
cld
pop
cmp
mov
pop
push
fsubrl
aaa
sbbb
pop
imul
dec
adc
cs
std
mov
cmp
or
push
sub
scas
stc
ss
add
inc
addl
pusha
jne
cs
xor
sbb
push
push
sbb
ljmp
ret
mov
xor
clc
clc
mov
sbb
cmp
sbb
or
test
jb
test
cmp
cmp
data16
pop
and
xchg
xor
mov
add
fimull
add
rolb
jbe
imul
incl
and
in
ss
add
mov
outsb
out
sahf
cmp
subl
mov
daa
sbb
lret
int3
fildll
cmp
xor
daa
and
lahf
es
xor
and
or
push
adc
cmp
clc
dec
mov
fcmovu
push
dec
push
movb
ss
daa
cmp
ja
outsb
pop
fisubl
push
sbb
mov
dec
addl
pusha
mov
ja
fnstcw
push
hlt
sbb
mov
add
mov
push
lods
xchg
test
xor
enter
cmp
cmp
xchg
fistpl
ds
and
daa
inc
ja
dec
mov
movsl
daa
dec
sub
and
stc
mov
and
ja
in
cmp
push
js
clc
xor
jbe
and
sahf
frstor
pop
push
lds
ja
push
and
and
cmp
std
nop
and
mov
pop
adc
push
cmp
push
fsubs
popa
xlat
push
lret
insb
cmp
pop
push
and
push
mov
insb
fldt
ss
fnstenv
mov
dec
push
lds
clc
repz
andl
test
lahf
add
ja
notl
adc
dec
aas
das
inc
inc
mov
push
or
xor
jnp
push
pop
daa
xor
outsb
daa
inc
mov
or
aad
mov
dec
dec
pop
xchg
sub
js
out
in
jb
nop
xchg
mov
addr16
add
clc
add
daa
add
push
repz
or
sbb
es
data16
adcb
or
inc
arpl
daa
ds
shrl
cmp
clc
and
cmpsb
pop
sbbl
imul
mov
sub
mov
dec
imul
daa
push
lcall
push
aas
es
lret
fnstsw
mov
inc
es
call
fwait
jle
lcall
repz
xchg
ss
out
jecxz
test
subl
add
xorl
inc
xchg
sbb
or
stos
movsb
out
sub
or
lahf
xor
jle
xor
inc
xor
mov
arpl
cs
bound
repnz
inc
in
push
inc
sub
xor
aaa
loopne
push
xor
pusha
xor
add
je
rcll
je
stos
inc
push
shll
xchg
mov
out
push
inc
mov
and
inc
mov
call
stos
sub
pop
lock
rcll
and
xor
dec
xchg
pop
xchg
dec
mov
daa
subl
adc
xchg
movsl
imul
mull
mov
adc
or
sub
and
xor
adc
cltd
xchg
js
ret
xchg
sbb
cwtl
sbb
adc
cltd
or
call
and
sti
fidivl
sbb
daa
fdivs
daa
dec
xor
dec
xor
insl
mov
dec
daa
dec
daa
dec
in
out
add
daa
clc
dec
or
mov
xorl
adcl
rorb
mov
aas
sbb
cltd
loopne
call
xorl
cltd
cltd
push
mov
inc
xchg
decl
rclb
test
int3
cwtl
sbb
daa
repz
inc
push
cmp
repz
xor
or
push
sahf
push
mov
sbb
pop
and
mov
es
daa
shlb
xor
pop
pop
push
lds
stos
pop
pushl
inc
sub
inc
sarb
cmp
es
and
aad
mov
lcall
cmp
sub
stc
xchg
ss
repz
daa
sbb
aaa
es
mov
dec
and
add
mov
sub
stos
sub
aaa
fs
insb
cmpl
fs
jbe
les
adc
and
sbb
insb
fisubl
fdivl
mov
or
repnz
daa
and
pop
dec
jmp
xchg
add
mov
and
and
pushf
aas
subl
push
push
aas
adc
adc
and
add
andb
outsl
lahf
fnstenv
sets
psllq
fwait
pop
cld
push
lock
add
pop
mov
lock
sbb
or
out
xchg
outsb
cltd
into
add
jbe
in
add
mov
in
xor
xor
adc
lsl
jbe
leave
xor
or
pop
dec
fadds
xor
pop
mov
pusha
sub
sub
cmp
inc
in
adc
insb
aas
cmp
dec
or
xchg
xchg
push
sti
push
or
jae
stc
mov
orl
xchg
inc
cmp
inc
pop
add
adc
mov
pop
cmp
inc
imul
dec
jnp
xchg
add
or
aaa
popa
sbb
fidivl
mov
inc
bound
movsl
mov
or
push
gs
ja
dec
shll
fs
add
mov
in
pop
inc
cs
jb
jnp
cmp
js,pn
dec
bound
fs
testb
xor
and
jne
jo
pop
sarl
outsb
mov
xor
cs
ficoml
int3
repz
arpl
mov
lcall
lcall
lcall
daa
arpl
pop
mov
mov
inc
and
insl
lahf
mov
loop
pop
adc
sti
xchg
add
cmpsb
xor
push
jbe,pt
fidivs
jno
bnd
xor
lods
fwait
ds
jo
mov
ljmp
movsb
dec
add
data16
sub
sub
fs
out
test
and
adc
lcall
bound
ret
xchg
mov
aas
xor
fndisi(8087
jbe
push
bound
add
ficoml
xchg
sub
jo
add
sbb
sbb
mov
jne
es
negb
sub
out
xchg
push
pop
or
and
sbb
mov
jle
bound
lret
ss
sub
push
xor
add
out
fwait
addr16
xor
lcall
push
inc
pop
das
or
movsl
loopne
aam
push
jcxz
mov
rorl
jp
outsl
xchg
dec
out
nop
loopne
mulb
push
orl
and
sbb
packuswb
and
in
filds
adc
push
imul
outsb
mov
push
insb
pop
outsl
xchg
adc
dec
xchg
subb
sbb
repnz
xlat
cmp
mov
loopne
lock
sub
add
test
mov
adcb
push
mov
mov
jecxz
pop
fcompl
inc
fs
jnp
fimull
outsl
sub
mov
mov
mov
insb
jns
inc
inc
mov
adc
push
push
push
sbb
repnz
or
mov
sbb
adc
jbe
scas
mov
cs
mov
cmp
adc
xor
push
jg
add
push
xchg
sub
mov
stos
adc
sub
push
pop
and
pop
insl
adc
in
adc
cmp
jnp
xor
mov
sbb
cmp
incb
mov
sahf
push
imul
pusha
mov
ss
or
lods
sbb
out
adc
push
fistl
shll
fisubrs
mov
movsb
ljmp
mov
and
and
insb
insb
fsubp
aaa
enter
jns
fists
pop
push
imul
xchg
out
push
sub
mov
add
cs
push
notl
pop
data16
push
adcb
into
inc
mov
push
and
cmpsb
sbb
pop
cmp
sub
bswap
or
sbb
jno
and
das
push
inc
pop
and
mov
sbb
push
bound
push
push
dec
and
jns
sub
xlat
push
mov
adc
fists
inc
outsl
movups
and
cs
aaa
inc
fs
and
jge
and
sub
imul
ret
lcall
xor
loopne
ret
jnp
fwait
push
pusha
inc
imul
and
pop
adc
lret
cltd
add
or
out
outsb
inc
arpl
lods
adc
incl
pop
shll
push
add
jecxz
mov
out
mov
xor
and
js
mov
jb
and
jnp
test
cmpsb
ret
push
mov
mov
add
dec
mov
xchg
add
lret
out
lods
lret
data16
lahf
insl
mov
jns
xor
mov
ja
movsb
in
fidivl
ret
pop
inc
inc
test
sbb
jnp
jno
test
cwtl
scas
adc
out
js
pop
punpcklwd
sbb
inc
pop
insb
mov
and
and
cmp
xchg
adc
arpl
rorl
pop
lods
popa
aaa
shll
mov
xor
mov
xor
sub
iret
shlb
lds
or
add
jne,pn
and
and
jnp
sti
mov
scas
fistps
stos
imul
jae
adc
mov
loope
or
xor
bts
xlat
arpl
rorb
or
inc
add
sub
movsb
popa
es
xchg
notb
cli
cmp
add
push
out
sbb
sub
mov
rolb
insl
out
inc
rclb
or
cmpsl
xorb
push
lods
loop
push
lret
lds
push
inc
adc
push
adc
and
sbb
addr16
mov
adc
adc
sub
lcall
inc
inc
ret
and
cmp
sbb
ja
in
pusha
ret
lret
dec
jno
stos
jnp
add
outsl
xchg
shufps
add
fbstp
push
and
dec
cmp
pop
bound
addr16
fdivrl
and
sub
mov
pop
push
stos
add
xlat
xor
rorb
pop
rcll
push
push
jae
stos
and
ret
cmp
out
outsl
push
loopne
dec
orl
xor
outsb
cmp
sbb
sub
sub
push
xor
push
xor
sahf
jbe
inc
mov
pop
scas
adc
outsl
inc
or
push
fwait
arpl
cmp
flds
scas
adc
loop
sbbl
add
cmp
fiadds
push
jnp
add
jp
imul
scas
fwait
lock
push
arpl
es
and
add
bound
pop
adc
movsl
scas
jecxz
dec
sbb
repz
data16
pop
jns
andl
jnp
add
and
or
shrl
and
inc
or
sbb
add
les
pop
pop
jp
inc
pop
sbb
mov
sarl
pop
push
adcb
add
and
jae
jg
adc
loopne
arpl
into
iret
addb
and
and
rorl
xor
push
mov
es
add
xor
pop
jmp
outsl
mov
push
loop
arpl
rcl
adcb
mov
out
add
adc
fwait
add
mov
mov
iret
mov
inc
mov
addr16
ret
test
and
lods
popa
inc
push
scas
inc
mov
jecxz,pn
out
xlat
mov
pop
inc
sub
push
jae
sbb
ds
aaa
mov
xchg
jle
xchg
inc
ljmp
xor
dec
sbb
lods
push
sbb
push
jmp
pusha
shl
xchg
loope
inc
lods
scas
pop
popf
test
sbb
add
push
pop
mov
add
je
arpl
dec
mov
sub
push
inc
sbb
rcll
div
or
mov
xchg
dec
xchg
push
sbb
fdivrs
inc
inc
adc
xor
rorl
xor
jmp
testb
outsl
mov
imul
mov
aaa
inc
xor
je
ret
pop
aas
or
pop
xor
sub
testl
cmpsl
inc
arpl
stos
add
mov
inc
shll
mov
dec
mov
sbb
push
imul
push
iret
xor
dec
and
sub
scas
stos
add
cmp
adc
inc
cmpsl
push
loopne
push
cmp
test
xor
bound
das
dec
test
inc
inc
pop
or
adc
fildl
and
movsl
xor
outsl
insb
or
sbb
push
iret
jns
adc
and
push
push
cmp
add
ret
mov
out
adc
movsl
ficoml
outsl
adc
mov
mov
mov
add
or
lock
push
loop
dec
push
in
add
dec
insb
push
add
ds
popf
mov
add
pop
or
lds
cmp
out
or
push
jne
jbe
xor
mov
add
movsb
test
outsb
jns
movsl
fldl
es
je
mov
imul
push
imul
and
sti
push
or
lea
scas
mov
jno
add
xchg
xlat
fs
ljmp
add
sbb
pop
scas
inc
or
aas
lahf
or
adc
shrl
and
jg
xor
inc
mov
pusha
daa
push
adcl
pop
push
arpl
pop
xor
push
mov
data16
add
js
jbe
insb
loopne
xlat
jo
bound
add
lock
xor
xor
stos
outsl
mov
sbb
add
jecxz
outsl
data16
xor
aaa
cli
push
aas
fidivrl
testb
adc
sbb
push
jae
ret
dec
fcompl
and
arpl
cmpsl
cmp
lods
mov
inc
fsubs
pop
jo
mov
or
cltd
scas
push
sbb
xchg
add
push
testl
lods
jmp
dec
xor
aad
test
scas
push
push
sub
add
out
ljmp
inc
add
cs
js
inc
stos
dec
lret
mov
inc
imul
aas
add
bound
divl
outsb
dec
addl
mov
scas
xlat
mov
outsb
sub
repnz
sub
mov
mov
aas
mov
jo
ret
push
push
fs
push
dec
pop
scas
dec
stos
sbb
les
pop
mov
adc
stos
les
mov
imul
add
inc
rcrb
pop
nop
inc
sub
mov
sub
icebp
sub
scas
add
push
inc
ss
xchg
add
push
jecxz
mov
mov
push
sbb
into
cmp
outsb
scas
push
fimull
mov
imul
jbe
popa
sub
divb
pop
aad
cmp
or
add
sub
push
add
inc
repz
xor
jbe
xchg
xor
push
mov
inc
mov
jmp
push
bound
adc
inc
adc
subb
adc
push
pop
add
mov
pop
insl
push
sbb
inc
sbbb
addr16
add
dec
data16
push
pop
xor
jb
inc
shrl
mov
fdivs
sub
repnz
rcr
sub
mov
scas
rorb
add
pop
mov
aaa
sub
jne
mov
bound
or
aad
xor
inc
aaa
sub
push
sub
push
jae
imul
rolb
dec
out
and
insl
mov
pop
sbb
mov
daa
inc
mov
pop
xchg
push
popa
pop
stos
adc
ret
cmp
into
shrb
add
pop
outsl
lret
mov
mov
sbb
or
popf
fcmovb
jbe
add
xchg
sbb
xor
or
push
fisttpl
mov
loop
mov
mov
mov
xlat
add
add
mov
jbe
stos
outsb
cmp
daa
or
fdivrs
dec
xor
xlat
mov
shrl
and
movsb
dec
or
cmpsl
popf
mov
je
add
jbe
daa
iret
sbb
addr16
cmp
pop
mov
mov
jmp
adc
adc
les
js
push
add
push
xchg
fsubs
pop
fbld
and
fcomip
dec
bound
mov
sbb
gs
repnz
and
inc
mov
xor
xrelease
fsubs
push
das
adc
lahf
pop
lcall
faddl
or
xor
jecxz
push
cltd
ficoml
dec
dec
pop
mov
es
xor
push
movsl
dec
or
jnp
xchg
add
push
sub
bound
push
sti
stos
pop
mov
and
and
add
sbb
jae
lea
cwtl
mov
loopne
add
xor
iret
pop
cmp
loopne
das
sub
or
dec
xor
bound
jne
push
add
xchg
nop
and
and
pop
cmp
adc
lods
mov
cli
add
loop
mov
dec
pop
sub
pop
push
sbb
or
pop
push
cmp
bound
roll
or
fwait
daa
push
andl
jnp
scas
push
sub
jae
or
mov
xchg
and
jg
jmp
jo
inc
xchg
addr16
pusha
and
cmpsl
and
or
inc
adc
dec
mov
aas
arpl
jno
add
unpckhps
mov
inc
inc
jnp
adc
popa
xor
roll
aad
pop
stos
jae
or
daa
cmp
push
mov
xlat
aas
cmpsb
aad
or
xor
cs
loope
jns
jle,pn
xor
sbb
lahf
pop
pop
xor
jg
sbb
push
lahf
mov
cmp
jle
push
cs
adc
sbb
pop
push
mov
mov
imul
lcall
inc
pushl
dec
inc
shrl
shlb
xor
shrl
push
push
jecxz
or
lds
test
insb
inc
sbb
pusha
sub
push
or
cmp
outsl
sbb
push
and
loopne
push
imul
sub
daa
sti
daa
mov
cmpsl
push
xor
insl
je
mov
jne
adc
out
push
sub
xchg
out
push
add
mov
or
push
in
aaa
aam
push
xorps
push
push
pop
xchg
fisttpll
fadd
sbb
jp
popa
ret
cmpsb
sbb
xchg
or
ds
or
fdivs
ret
aas
iret
inc
and
arpl
js
mov
mov
fisubl
pop
outsl
subl
add
dec
xchg
ret
aad
rolb
lcall
mov
jmp
stos
sahf
inc
add
data16
add
imul
pushf
or
fiadds
sbbb
shll
xchg
sub
pop
out
insb
or
outsl
pop
add
xor
das
inc
and
mov
fisubl
add
ljmp
pop
pop
ffree
pop
adc
adc
pop
sbb
shrl
jae
mov
mov
test
jae
mov
sub
jecxz
fimull
arpl
lods
mov
mov
push
ds
xchg
push
mov
and
lcall
add
imul
stc
outsb
jp
inc
cmp
mov
aam
ss
sub
stos
adc
pop
xor
pop
add
add
mov
or
iret
scas
divl
fisubl
out
add
push
xor
xchg
arpl
fwait
into
jb
push
out
test
sub
push
mov
mov
mov
imul
inc
mov
adcb
lahf
lahf
test
arpl
aad
enter
jg
xorb
xlat
and
adc
fwait
sub
xor
or
mov
push
or
ljmp
cmp
fisubrl
mov
xor
push
sbb
fstpt
notl
iret
lcall
mov
sub
test
ds
lods
push
sbb
fistpll
addl
pop
insb
cmp
mov
mov
daa
dec
sahf
push
sbb
cli
mov
sub
arpl
xchg
rolb
in
pusha
cli
sahf
pop
jg
fsubrs
mov
xor
lahf
push
mov
stos
push
outsb
sub
lea
xlat
arpl
add
mov
push
sbb
stos
popa
adcb
or
rolb
in
mov
repz
push
or
dec
pop
push
jg
jae
ret
xor
jo
push
fisubrs
inc
pusha
cmp
jnp
repz
ffree
ss
fisttpl
jg
or
das
pusha
push
mov
jmp
push
xlat
popw
inc
movsb
scas
or
mov
mov
jae
inc
or
mov
mov
jb
add
and
sub
push
pop
pop
pop
ss
arpl
gs
insl
inc
and
jg
xchg
mov
push
or
das
ds
orb
arpl
sub
das
das
pop
shrb
sbb
mov
lea
test
stos
and
adc
xlat
insb
fsub
sbb
scas
mov
push
arpl
scas
mov
stos
inc
stos
push
testl
push
arpl
sub
push
adc
adc
and
pop
arpl
ss
xchg
dec
mov
xor
iret
out
idiv
aas
cmp
aaa
mov
pop
fwait
cmp
mov
sbb
mov
aam
and
dec
data16
and
gs
es
shl
adc
jb
pusha
loop
dec
pop
push
pop
xchg
or
inc
jae
ret
inc
jae
clc
and
xor
or
inc
mov
pop
rcr
cmp
inc
addl
popf
jle
and
xor
add
or
outsb
jb
push
jo
std
sub
jg
dec
cmc
imul
push
dec
mov
xor
push
inc
pop
adc
add
int3
adcl
xchg
and
inc
sub
adc
push
and
inc
xchg
xchg
pop
cmp
mov
push
fwait
mov
ds
jb
sub
mov
sub
pop
pop
inc
dec
xor
lahf
xchg
outsb
jb
popa
adc
int
mov
fs
ret
lods
sub
daa
movsl
adc
lret
xchg
adc
sbb
mov
jmp
clc
fwait
popa
sbb
inc
insb
addr16
adc
or
cmpl
gs
dec
aas
fistpl
mov
out
push
addr16
daa
sbbl
adc
inc
push
ret
lret
insb
add
ret
loope
adcb
adc
mov
arpl
dec
ret
sub
push
push
ret
adc
imul
push
lret
push
fimuls
jae
rcll
inc
adc
mov
sbb
out
mov
dec
in
jecxz
icebp
adc
dec
dec
xchg
sbb
pop
adc
push
insb
test
xor
in
inc
sbb
fmull
fs
outsl
daa
test
or
or
pop
das
inc
cmp
sti
mov
and
fisttpll
popa
out
cmpsb
sub
dec
xor
leave
adc
xor
sbb
sbb
sub
sbb
pop
and
pop
xchg
insl
sbb
clc
push
loope
and
cmp
fs
iret
adc
sbb
mov
cltd
push
fxch
pop
pushf
jno
push
mov
inc
jae
sbb
add
push
sbb
and
add
adc
pushf
aaa
mov
ds
in
repz
ja
xchg
outsb
adc
mov
cmc
sub
test
andb
hlt
and
xchg
mov
dec
xchg
mov
xchg
mov
jp
jne
test
mov
aas
add
imul
push
adc
nop
dec
mov
je
in
adc
sub
out
mov
dec
dec
in
je
ret
inc
dec
and
scas
mov
and
mov
or
loope
or
add
mov
add
inc
or
cmp
addl
jmp
push
push
movsb
xchg
and
out
add
pop
or
out
test
repz
in
cs
xchg
mov
pop
btr
bound
xor
cmp
sbb
add
xchg
or
pop
push
imulb
sbb
iret
loopne
adc
inc
mov
decl
sub
and
insb
cmp
or
daa
or
adc
and
xchg
add
mov
pusha
or
cmc
or
daa
add
sub
add
pusha
or
jne
daa
and
xor
pop
sub
jnp
mov
add
imul
imul
push
fdivrp
std
pop
push
popa
or
push
push
jae
out
rcrl
aad
imul
cmp
mov
pop
jbe
push
add
rcrb
or
push
ss
dec
mov
push
inc
insb
inc
cs
mov
add
jb
inc
insl
movsb
dec
jb
fcom
test
dec
lret
out
idivl
aad
xor
jbe
imul
aad
xlat
jbe
cs
cmp
push
xchg
ja
mov
and
add
mov
or
repz
aam
dec
cmp
fucomp
fisubrl
sub
inc
fldcw
cmp
pusha
or
mov
or
push
pop
push
cs
sbb
sbb
mov
outsb
mov
insb
mov
adc
or
dec
ja
rorl
adc
ja
mov
popa
adc
inc
jne
rcl
dec
cmpsb
mov
lcall
push
arpl
shll
dec
lds
addl
lret
pop
jne
or
imul
or
pop
xchg
pop
das
xchg
or
arpl
xor
cmp
out
mov
sub
pop
inc
sub
or
xchg
xor
jno
arpl
jae
jns
addb
popa
pop
in
aaa
sbb
or
in
fstpl
and
insb
mov
pop
cmpsl
jbe
inc
pop
jae
bound
dec
jno
push
int3
fildll
xchg
push
outsl
js
pop
push
call
divl
sub
add
or
jo
push
cld
push
in
xchg
mov
sub
mul
push
psrad
xor
push
jne
sub
out
ljmp
pop
jp
pop
push
pop
jns
xchg
rcr
jns
push
testb
shl
fcompl
insl
jo
popa
pop
add
outsb
jae
fst
nopl
fxch
jbe
insb
push
data16
outsl
insl
bound
add
adc
dec
mov
push
mov
xor
inc
bound
jbe
jge
jp
inc
pop
lods
push
add
jae
mov
scas
repnz
outsl
pop
or
jnp
xor
cmp
test
bound
push
subl
into
sbb
imul
mov
mov
icebp
cmp
pushf
insb
je
sub
push
fcoms
dec
xchg
mov
pop
pop
pop
mov
mov
push
gs
xchg
jno
xor
fs
sbb
or
cmp
jbe
std
jecxz
adc
and
outsb
jb
fs
repnz
sbb
xor
add
outsl
outsb
lds
jb
or
fimuls
push
imul
out
push
aam
imul
jns
mov
xchg
std
push
jae
addr16
cmp
je
adc
adc
repz
fs
psrlq
jns
fidivs
jne
les
xor
add
loopne
cmpsl
stos
jp
cmp
jnp
lret
inc
insl
jne
xor
imul
pcmpgtb
addr16
cmpsl
adc
lahf
ds
jb
ficoms
subl
mov
and
pop
gs
fnsave
push
je
or
lret
jb
or
aas
pop
adc
scas
pop
jp
adc
push
cmpsl
lods
call
jo
cmp
and
jns
jbe
enter
insl
adc
push
mov
jo
out
insb
icebp
add
jae
gs
pushl
insb
mov
imul
sbb
or
add
daa
lock
insb
or
gs
ret
dec
dec
adc
shll
adc
into
push
push
adc
jae
insb
lretw
fsubs
out
fcmove
and
push
jg
sarl
lds
je
daa
lret
xor
push
and
pop
fucom
out
jmp
insb
mov
push
push
mov
loopne
stos
jns
sahf
mov
cmp
andl
popa
addr16
popf
insb
cmp
fisttpll
icebp
push
call
les
push
fiadds
into
mov
insb
popa
addr16
subl
push
es
cmp
je
mov
outsl
push
loop
adc
shl
iret
loop
outsl
js
popa
insl
jns
je
mov
xor
rorl
push
adc
inc
outsb
jb
imul
mov
test
mov
loopne
push
daa
lret
push
pushw
int3
cmpsl
rclb
jb
push
bound
fsubrs
pop
and
dec
and
xor
adc
mov
vmread
cmp
push
mov
jns
jae
mov
cmc
mov
sub
fnsave
push
adcb
cltd
push
psubusb
push
cmp
push
cmp
iret
out
adc
in
imul
cs
adc
shll
iret
outsl
or
cmp
ffree
and
outsl
popf
scas
ja
adc
adc
dec
xor
fdivl
push
and
imul
out
or
mov
jno
aaa
loope
push
lock
movsl
lods
int3
jns
add
test
or
shll
or
insl
insl
lods
adc
fcmovnbe
cmp
in
dec
je
rclb
adc
imul
insb
arpl
jae
jo
sub
fcompl
jb
movq
stos
adc
push
adc
enter
add
fs
ror
loopne
loopne
or
jae
pop
jae
add
pusha
jae
aas
fnstcw
push
out
adc
push
aaa
fisubrs
or
jp
lret
jo
jae
out
movsl
and
pop
adc
ucomiss
adc
cmp
jbe
jecxz
cmp
lds
jbe
and
jb
outsb
adc
and
int
stos
adc
es
popa
jae
enter
adcl
ja
ret
sub
outsl
rol
in
dec
and
arpl
mov
lahf
and
push
cld
sbb
cli
mov
aaa
fadd
mov
add
adc
test
pop
mov
add
ja
outsl
bound
out
sahf
ficoml
imul
adc
mov
adc
jae
packuswb
or
fs
and
push
les
mov
loop
jae
push
movsl
jne
mov
cltd
hlt
adc
jne
lods
into
into
cs
adc
or
adc
push
decb
sbb
jne
mov
push
mov
sbb
mov
push
or
pusha
nopl
insb
in
add
push
inc
daa
inc
imul
daa
orl
or
pushl
and
int3
mov
ljmp
das
push
ja
gs
adc
inc
loop
pop
gs
popa
push
sbb
add
inc
outsb
arpl
add
xchg
mov
gs
mov
pop
arpl
sbb
sub
pop
sbb
sbb
gs
and
int
jne
insl
push
pop
mov
jae
and
sbb
shlb
sbb
push
jae
and
add
mov
data16
loopne
xchg
insl
adc
rcrb
mov
adc
fldenv
cmp
insb
dec
dec
xchg
aaa
les
sub
jae
je
pop
xor
adc
adc
jg
adc
mov
add
or
loopne
jl
imul
lock
cmpl
push
pop
xor
inc
jno
imul
mov
rcrl
xor
push
inc
insb
cwtl
adc
dec
inc
bound
inc
xchg
loopne
dec
push
or
dec
or
mov
push
or
mov
xor
in
sbb
insb
fs
adc
inc
inc
mov
ret
jo
adc
lret
adc
sub
jo
or
lock
cmpsb
ljmp
jne
loopne
out
add
gs
push
jno
rcll
xchg
imul
insb
xlat
xchg
jae
cmp
ja
pop
inc
repz
inc
adc
or
push
dec
maxps
xchg
inc
push
inc
faddp
pop
push
dec
gs
je
sub
mov
adc
push
andb
adc
pop
inc
adc
fcomps
jbe
adc
sbb
ds
outsb
jne
pop
or
rolb
or
insb
jno
aas
jo
loopne
test
pop
inc
imul
sbbb
mov
jae
fst
add
movsl
push
insb
arpl
ja
ret
imul
xchg
adc
pop
push
push
leave
je
inc
or
push
imul
cmp
xor
and
sub
fs
mov
and
or
push
mov
ret
adc
adc
add
lcall
add
outsl
push
push
imul
or
sub
lock
adc
inc
imul
push
les
xor
and
insl
je
inc
ss
xor
and
sbb
dec
jo
fldl
and
mov
sbb
out
push
popa
imul
lods
lea
insb
push
or
xlat
icebp
dec
add
imul
add
dec
shll
adc
pop
js
imul
inc
or
adc
sbb
jae
dec
mov
adc
or
jp
jb
adc
xor
stos
fwait
cmp
adc
adcb
adc
rol
sahf
outsb
sbb
mov
lds
popa
test
leave
or
mov
mov
sub
or
sbbl
push
mov
fisttpl
jl
adc
and
inc
mov
stos
mov
jmp
sahf
and
push
aaa
nop
push
dec
mov
or
fcoms
scas
enter
ret
cltd
into
int3
xor
sbb
dec
je
adc
xlat
or
add
push
addb
jo
mov
test
stc
pop
adcl
and
cs
inc
mov
dec
xchg
aad
out
mov
jb
mov
push
and
mov
mov
jp
jecxz
outsb
loopne
cmovp
and
sbb
cmp
xor
imul
jecxz
jmp
mov
push
rolb
push
cmp
subl
push
mov
movsl
pop
add
and
xor
jns
in
test
xor
jo
adc
mov
stc
stos
stc
andb
adc
movsb
insb
shrb
insl
cmp
testl
je
insb
inc
sub
adc
icebp
sti
dec
mov
pop
call
jno
icebp
push
in
dec
add
mov
out
outsb
test
lea
popa
insl
jne
push
pop
push
pushf
mov
arpl
ficoml
shll
jae
inc
cmp
movswl
xor
mov
adc
mov
lods
loopne
inc
jae
fadds
mov
sbb
mov
adc
cmpsl
data16
pop
push
fcoml
adc
add
jns
outsl
and
sahf
adc
or
and
xor
sbb
ss
and
pusha
adc
add
jo
or
jns
clc
xor
xor
jne
outsl
adc
or
addl
ja
es
negl
inc
push
dec
jo
pop
or
jae
insl
mov
lock
ret
aad
inc
jb
aad
jnp
cmpsl
shlb
push
push
cmp
test
and
cmc
dec
pop
or
gs
repnz
js
jo
out
adc
cs
pushf
push
xchg
jne
lods
xor
lds
xchg
pop
ljmp
insb
adc
dec
push
push
ljmp
adc
xchg
aaa
ljmp
push
loopne
loop
mov
loopne
xor
sub
lcall
insb
jno
shrl
in
or
sahf
outsl
and
sbb
or
push
push
mov
or
stos
jbe
test
cmp
jb
cmpsl
sbb
testb
insb
bound
push
mov
imul
push
jbe
xchg
dec
or
and
mov
adc
outsl
adc
add
adc
pop
scas
cmp
dec
cld
jb
add
pop
cmp
add
or
rcll
repz
xor
leave
dec
fisubrs
or
pop
je
fimull
imul
xor
jp
mov
adc
xchg
ja
testb
jne
cltd
dec
xchg
arpl
jno
fwait
icebp
fdivrl
dec
outsb
or
lret
or
push
push
push
les
enter
movntps
pop
in
mov
add
pop
jns
pop
lcall
mov
inc
push
shrl
fstpl
sbb
sub
sbb
dec
ss
repnz
ljmp
imul
inc
xor
mov
cmpsl
je
adc
test
mov
mov
or
mov
xor
dec
mov
or
jns
jp
push
ss
mov
pop
popa
outsl
push
xor
fstl
sub
fsts
rolb
dec
sahf
shl
xchg
pop
aad
ficoms
sub
adc
cmp
test
jns
adc
xchg
mov
js
shlb
fs
loopne
clc
mov
dec
pop
push
cmpsb
jge
pop
ud0
sub
les
jae
es
nop
pop
loopne
ja
pop
inc
push
xchg
push
mov
adc
adc
push
xor
test
dec
dec
outsb
popf
arpl
mov
or
adc
adc
je
outsb
xchg
sbb
pop
jno
cmp
dec
or
mov
cli
rol
mov
ljmp
pop
test
je
push
sti
adc
adc
jp
lahf
jne
push
shll
add
sbb
cli
push
adc
mov
arpl
into
sub
mov
adc
mov
jo
mov
jge
fcoml
out
jno
fs
pop
fstl
xlat
mov
inc
mov
adc
gs
js
cmp
lock
hlt
push
or
test
movsb
mov
dec
adc
mov
mov
addl
je
mov
daa
jae
xor
lcall
adc
je
and
mov
je
js
jp
lods
push
adc
jo
adc
or
inc
jnp
cmp
sbb
mov
jb
jae
xchg
arpl
pop
xlat
addr16
push
imul
jne
bound
push
stos
mov
sbb
es
js
or
test
or
jno
loopne
addr16
dec
sbb
cmp
mov
lret
outsb
xchg
or
in
push
nop
call
outsl
insl
inc
test
psrld
jno
mov
jne
loopne
cmp
adc
push
pop
inc
jne
out
test
js
jne
and
fsubp
and
wbinvd
in
outsb
hlt
push
mov
inc
jl
aam
jmp
hlt
adc
mov
jns
dec
inc
out
lods
pop
cli
or
sub
mov
ficoms
emms
inc
and
cmpsl
rcrb
in
add
push
fadds
ret
sub
gs
cmp
into
out
pop
sub
incl
dec
outsl
je
mov
iret
mov
call
cmpsl
pop
andb
dec
push
outsb
movsb
push
cmp
mov
or
jmp
fcoml
push
jns
inc
push
fistpl
mov
add
sbb
sub
or
push
cltd
jns
sbb
cmp
ret
mov
adc
adc
sub
ret
nop
sbb
nop
nop
or
add
in
unpckhps
lds
insb
mov
lahf
adc
push
test
add
xor
jnp
aad
dec
outsl
adc
outsb
adc
call
in
imul
add
mov
pop
pop
dec
or
flds
fdivrl
cmp
pushf
xchg
lods
ja
insb
aad
repnz
je
sbb
bound
dec
add
fs
test
insb
cmp
call
int3
and
xor
add
outsb
popa
mov
or
push
jb
and
clc
rolb
mov
int
cmp
bound
adc
push
movsb
add
fisttpll
pushf
add
pop
adc
jbe
scas
mov
sbb
add
add
push
movsb
outsl
inc
imul
xchg
imul
jl
jb
add
je
movsl
adc
imul
cmpsl
push
cli
add
mov
jb
adc
or
push
mov
jbe
into
jb
leave
adc
jp
jb
imul
lea
int3
in
pop
popa
shlb
repz
fnstsw
jns
arpl
push
popa
je
cwtl
dec
jb
sub
js
in
inc
pop
or
jo
and
dec
xor
dec
test
push
lods
push
pop
push
fs
fstl
adc
push
adcl
pop
inc
ja
or
cmp
push
mov
cmp
sub
or
outsl
and
adc
push
divb
adc
sub
jg
and
dec
mov
and
dec
sbb
or
pop
insl
adc
daa
popf
or
xchg
outsl
push
add
jns
add
mov
lods
jecxz
cmp
cld
insl
adc
pop
fbstp
mov
shll
dec
or
je
or
push
jnp
pop
outsl
dec
push
mov
mov
js
mov
outsb
test
push
xorl
xor
cmp
pop
or
jnp
popf
jns
stos
sub
jp
out
ret
xchg
ja
ja
jle
inc
fsubrs
lret
gs
and
ja
fldenv
push
jbe
stc
lahf
loope
ret
adc
lea
cmp
mov
daa
insl
bound
es
jne
jns
pushf
adc
aam
test
jbe
test
push
out
ret
pop
addl
outsl
mov
out
push
gs
add
fcompl
mov
mov
movb
dec
or
push
xor
in
add
push
xorb
data16
lock
sub
xchg
inc
sub
pop
stc
adc
nop
mov
repnz
popf
jbe
jno
int3
inc
jbe
xor
or
push
jo
rclb
out
xor
or
dec
adc
es
pushf
imul
lret
push
add
push
dec
inc
adc
rolb
lcall
adc
push
ja
sub
jb
pop
jp
cmp
ljmp
sbb
or
lds
adc
push
inc
sbb
xlat
clc
gs
stos
repz
or
add
insl
cltd
test
cmp
rcll
mov
adc
imul
imul
or
jo
jne
or
outsb
add
in
lods
push
pop
bound
adc
in
es
jp
mov
or
fcompl
movl
aas
into
dec
jge
cmp
xchg
je
and
nop
sbb
inc
js
call
cmpsb
add
jo
je
outsb
pop
push
cmp
or
fsubrl
adc
pop
shll
mov
gs
fnsave
int3
sub
sub
in
fstps
push
cli
fsubs
or
inc
adc
adc
push
in
repz
es
int3
bound
adc
pop
or
adc
int3
test
adc
ficoms
or
or
mov
and
mov
dec
mov
sbb
insl
mov
adc
cmp
xchg
adc
dec
and
jae
cwtl
and
test
lods
push
cltd
sbb
adc
or
push
and
movsb
add
adc
ret
loop
arpl
push
add
pushf
sbb
fidivs
xchg
cs
cld
adc
gs
addr16
push
push
sbb
push
adc
nop
push
je
popa
andb
mov
ja
mov
jae
into
clc
frstor
push
and
push
mov
mov
in
inc
mov
jp
mov
fsubl
push
not
loop
outsl
ja
mov
push
inc
rcrl
out
mov
sbb
pop
outsl
mov
cmpsl
int3
out
lea
adc
jbe
or
dec
jbe
add
gs
in
adc
wbinvd
data16
test
mov
pusha
cmc
pushl
aaa
jp
mov
inc
push
popa
mov
adc
xchg
int3
mov
aam
leave
push
jne
or
xor
sbb
imul
movsb
jne
jl
push
jp
pop
mov
popa
stos
push
insb
or
mov
dec
pop
push
xlat
fs
push
insl
xor
adc
mov
and
pop
push
jp
sub
push
sbb
pushf
test
adc
imul
pop
fildll
sub
sub
mov
dec
adc
mov
jbe
lret
mov
jae
adc
jae
pop
mov
js
insb
jbe
loop
mov
outsb
addr16
or
ja
dec
nop
fnstcw
adc
insb
add
push
pusha
mov
test
nopl
sbb
cli
push
xorl
lahf
cmp
or
pop
and
jns
xchg
cmp
jl
or
pushf
sbb
push
or
push
push
adc
jbe
lcall
push
xchg
mov
inc
mov
sbb
or
or
lcall
clc
loopne
jecxz
loope
push
lret
mov
jnp
out
mov
lds
sub
jo
ja
or
push
xor
sti
push
outsl
or
push
inc
mov
cmp
sub
xor
sbb
pop
mov
xlat
push
outsl
push
mov
mov
inc
jne
adc
cmpsb
jp
jae
outsb
jnp,pn
in
cmp
adc
dec
aas
sahf
or
push
sti
pop
mov
sub
pop
pop
ja
dec
jno
lods
aam
push
mov
and
jnp
sbb
and
sbbb
test
negb
int3
jb
je
push
push
or
out
adc
jp
push
or
xor
fs
inc
lcall
in
xor
xor
xor
jb
jae
fwait
lahf
or
xor
je
xor
or
rorl
sti
xor
fs
insb
mov
movsb
stc
fs
outsb
xor
xor
in
nop
xor
xor
pop
inc
push
cmp
xor
sub
data16
or
iret
repnz
xor
push
xor
xor
jb
and
xor
mov
xchg
or
xor
xor
nop
inc
sahf
xchg
xor
xor
sub
imul
xchg
stos
or
and
or
xchg
xor
lret
cmp
or
push
inc
fsubrs
xchg
enter
xor
jno
and
mov
xor
xor
and
loop
loope
jo
adc
leave
and
or
jae
jb
xor
xor
iret
adc
xor
xor
leave
adc
xor
jbe
xor
jb
xor
xor
leave
push
xor
xor
and
sbb
or
xor
xor
sbbl
xor
or
adc
xor
push
xor
inc
mov
xor
fs
nop
or
xor
xor
xor
sbb
xor
scas
inc
xchg
xor
lahf
sub
xor
insb
outsb
xor
jl
leave
and
xor
xor
sub
mov
xor
xor
and
xor
xor
or
jb
xor
xor
enter
xor
xor
ss
aas
adc
xor
cmp
or
out
leave
xor
jo
xor
or
xchg
add
nop
xor
xor
nop
mov
insl
jo
sbbl
xor
xor
push
and
xor
xor
and
xor
xchg
sbb
and
cs
sbb
loope
ret
adc
xchg
xor
xor
xor
enter
xor
ja
xchg
sysenter
jb
xor
xor
in
jo
or
pop
dec
push
fs
xor
and
sbb
xor
in
test
stos
fs
xor
es
mov
xor
or
dec
xor
sub
add
xor
xchg
xchg
or
inc
push
sbb
xor
pop
cmp
xor
addr16
sbb
imul
cmp
sbb
xor
cmp
xor
xchg
dec
push
xor
inc
push
in
xor
xor
fs
or
xor
mov
xchg
add
xor
xor
push
cltd
fs
xor
sar
nop
inc
xor
jb
xor
inc
leave
adc
xor
leave
and
xor
xor
xor
lret
nop
dec
xor
xor
xor
lcall
xor
cltd
movsb
pop
xor
xor
insl
xor
enter
xor
xor
or
enter
xor
mov
mov
jno
adc
or
sbbl
jb
inc
push
inc
scas
and
es
dec
xor
xor
or
sub
xor
dec
inc
cs
xor
xor
inc
cs
xor
xor
inc
inc
scas
xor
xor
in
or
xor
xor
cmp
xor
xor
xor
leave
leave
and
and
enter
xor
nop
inc
inc
fidivs
outsb
xor
xor
fs
stos
xor
cmp
daa
in
xor
bound
cmp
mov
xor
shlb
xor
xor
push
adc
dec
adc
jb
and
xor
xor
leave
test
xor
leave
enter
xor
xor
adc
and
xor
enter
xor
xor
and
xor
xor
sub
jb
xor
xor
xor
xor
and
dec
xor
xor
xor
jb
repnz
xor
test
int3
pushf
xor
or
xor
xor
fs
mov
in
cmp
xor
cltd
inc
xchg
xor
push
cltd
inc
xor
sbb
xor
in
cmp
xor
xchg
xchg
das
xor
xor
xor
leave
lahf
cmpsb
jns
xor
xor
gs
dec
xor
xor
xor
jb
sub
xor
xor
xor
dec
xor
xor
imul
loop
xor
pop
inc
push
xchg
adc
and
repnz
addr16
xor
xor
jle
xor
xor
jb
xor
cmp
xor
xor
inc
dec
es
aad
or
int3
imul
push
cltd
cltd
test
cmp
or
and
xor
xor
and
xor
dec
test
xor
xchg
sbb
xor
xor
push
leave
adc
sbbb
xor
add
xor
xchg
jl
xor
data16
inc
leave
xchg
cmp
xor
sarb
daa
xor
xor
and
or
xor
cmp
xor
nop
inc
mov
xor
stc
nop
sysenter
je
xor
xor
dec
push
sbb
xor
xor
xchg
or
inc
mov
loop
or
lcall
xor
mov
dec
adc
pop
out
xchg
cmpsl
or
xor
push
adc
adc
fdivl
or
leave
and
xor
leave
and
sbbl
xor
or
and
xor
and
pushf
xor
xchg
mov
xor
xor
enter
xor
or
pushf
sbb
xor
repnz
sbb
xor
fs
pushf
cmp
xor
xor
push
sbb
shrb
xor
push
nop
xchg
stos
mov
nop
add
xchg
and
xor
xor
push
cltd
dec
xor
fs
nop
xor
bound
dec
sahf
out
xor
xor
xor
out
adc
xor
sahf
inc
inc
scas
or
sub
pop
addr16
jp
xchg
inc
push
cltd
xor
xor
out
in
xor
xor
cltd
or
xor
in
mov
and
inc
xchg
dec
dec
cs
xor
xor
jns
sbb
xor
xor
sahf
dec
push
xor
xor
xchg
sub
xor
xor
xor
cmp
fs
dec
xor
xor
in
jns
xor
xor
jns
mov
xor
inc
push
xor
outsb
imul
xor
orl
and
iret
and
xor
or
leave
xor
xor
push
adc
sbbl
xor
xor
jb
enter
insb
xor
jl
and
xor
xor
je
jb
int
xor
xor
repnz
push
xor
xor
xor
push
and
xor
orb
xor
sbbl
xor
sbb
or
xor
jno
popa
nop
loopne
enter
or
xor
xor
xor
arpl
addr16
xchg
xor
xor
daa
xchg
dec
inc
or
xor
leave
outsb
xor
xor
testl
push
adc
xchg
sbb
xor
test
xor
fwait
pusha
jb
xor
out
test
or
or
xor
enter
xor
xor
or
add
xor
xor
sbbl
or
in
jb
xor
arpl
and
pushf
cmp
xor
lcall
or
xor
xor
xor
rcrb
xor
xor
ds
xor
xor
mov
xor
nop
or
add
xor
xor
mov
xor
and
xor
adc
xor
xor
stc
and
insb
xor
xor
xchg
dec
xor
xor
in
lcall
push
xor
xor
imul
xor
es
xor
xor
xor
jb
xor
lcall
out
xor
xor
and
in
mov
xor
repnz
leave
test
xor
enter
xor
xor
inc
enter
xor
daa
xor
xor
xor
xor
xor
nop
dec
push
jns
ja
xor
inc
cs
xor
fs
sahf
xor
xor
dec
push
fs
xor
xor
xor
fs
xor
sahf
sub
xor
add
pop
xor
xor
nop
xchg
xchg
xor
xor
xchg
or
cmpsb
inc
mov
xor
add
xor
insl
xor
sbb
fs
cmpsb
add
xor
xor
in
cltd
inc
xor
xor
in
xor
xor
xor
inc
icebp
popf
gs
xor
xor
jae
add
xor
leave
pop
fs
arpl
adc
xchg
xor
adc
sbb
xor
adc
xor
xor
into
and
xor
and
sub
xor
pop
test
adc
xor
and
xor
jb
xor
xor
mov
leave
adc
xor
xor
push
dec
xor
xor
xor
or
enter
adc
xor
dec
dec
jle
insb
insl
xor
jns
enter
xor
xor
inc
dec
dec
push
xor
xor
jb
jnp
xchg
xor
adc
je
xchg
sub
jbe
inc
dec
xchg
push
adc
int
mov
xor
sbb
imul
mov
push
xor
jb
adc
sahf
lods
adc
xor
fs
nop
xor
xor
nop
stos
mov
es
xor
xor
or
sbb
xor
inc
sbb
xor
xor
enter
xor
jb
xor
xor
and
pop
leave
xor
xor
les
call
jb
inc
xchg
xor
xor
in
cs
xor
xor
xor
mov
lea
and
xor
xor
leave
xchg
or
xor
xor
jb
xor
xor
cmp
xor
in
fs
xor
push
repnz
xor
xor
xor
and
add
or
xor
xor
mov
add
insl
ror
adc
and
xor
and
adc
enter
xor
leave
adc
xor
xor
leave
xchg
sbb
xor
xor
xor
xchg
or
inc
xor
xor
xchg
or
xor
leave
and
xor
xor
leave
adc
xor
xor
add
xor
testb
sbb
imul
outsb
jae
xor
push
jb
xor
push
push
enter
xor
push
test
into
int3
repnz
js
xor
fsub
and
sbb
enter
adc
xor
test
mov
pusha
jmp
ss
out
xor
xor
push
adc
add
adc
loope
in
mov
xor
fs
xor
xor
add
xchg
xor
xor
inc
xchg
xor
push
cmp
xor
cltd
in
xor
xor
or
or
push
pop
adc
imul
inc
insb
xor
inc
cs
or
xor
nop
xor
xor
xor
and
xor
jb
or
xor
arpl
mov
leave
xor
adc
xor
xor
pop
cs
xor
aam
xchg
adc
xor
dec
xor
xor
and
or
xor
push
jb
and
xor
and
or
xor
leave
orb
stos
in
xor
xor
fs
xor
xor
xor
xor
or
xor
adc
xor
mov
jne
xor
xor
in
mov
xor
jb
shll
nop
pop
enter
xor
push
jb
jb
xor
or
sbb
xor
xor
add
xor
stc
leave
enter
xor
ja
xor
inc
cmpsb
in
xor
sub
add
xor
fs
xor
xor
in
dec
xor
sbb
add
xor
jae
xor
xchg
xor
xor
xchg
xor
or
test
imul
andl
lcall
xor
sbb
xor
jb
xor
push
addr16
cmp
xor
mov
xchg
add
je
xor
mov
xor
sbb
scas
adc
xor
cmp
xor
xor
push
xor
fs
jmp
push
enter
xor
leave
pop
xor
xor
xor
add
test
xor
enter
fs
xor
mov
xor
xor
xor
and
add
nop
xor
xor
xor
nop
pushf
mov
xor
and
or
xor
enter
xor
xor
iret
xchg
pop
xor
xor
and
stc
leave
xchg
pop
xor
xor
xor
xor
sub
xor
xor
bound
xor
insb
mov
pop
stos
add
or
push
add
daa
aaa
adc
xor
xor
or
xor
repnz
xor
jo
xor
xor
dec
push
divb
dec
adc
and
sbb
xor
add
xor
jb
pop
enter
and
xor
stc
adc
xor
imul
jae
and
adc
and
adc
xor
stc
and
leave
xor
xor
xor
imul
ret
xchg
gs
xor
xor
inc
push
sub
xor
xor
or
inc
jb
adc
xor
xchg
pop
xor
xor
jmp
dec
xor
adc
adc
xor
xor
jmp
xor
sbb
pop
sub
push
or
xor
xor
xor
in
xor
xor
xor
xor
xchg
mov
cmp
xor
and
sbb
xor
xor
add
add
xor
lods
nop
xchg
xor
xor
jo
cltd
adc
and
xor
xor
xor
sbb
xchg
xor
mov
xorl
adc
push
dec
dec
lret
aaa
jb
and
xor
xor
xor
inc
and
sbb
xor
add
xor
out
xchg
sub
out
add
aas
xor
jb
popa
mov
xor
xor
and
xor
xor
xor
xor
xor
add
leave
xor
xor
push
xor
xor
or
xor
xor
xor
xor
xor
sbb
daa
pop
xor
xor
roll
add
add
or
cltd
nop
cmp
jno
dec
daa
lods
outsl
jg
rorb
inc
mov
sub
leave
adc
adc
gs
push
push
ss
xchg
push
or
ret
mov
pusha
pop
xchg
je
jae
sub
in
mov
xor
out
fisttpll
and
vmread
sub
push
sbb
cld
push
dec
push
xor
and
sub
sub
sub
and
xchg
push
sbb
pop
dec
or
inc
sub
push
flds
cmp
movsb
lods
dec
mov
pop
and
push
stos
fwait
jne
mov
mov
adc
and
fldenv
mov
insl
dec
pop
mov
dec
inc
lea
adc
mov
pop
push
add
dec
loope
xchg
jecxz
xor
pop
cmpsl
out
add
inc
mov
cmp
sti
aaa
or
dec
xchg
outsl
xor
pushf
aaa
andl
jae
out
sub
or
pop
cmp
sbb
adc
inc
in
and
adc
add
and
bound
stos
fwait
sub
mov
push
mov
add
mov
inc
xor
lea
xchg
sbb
sbb
or
ljmp
inc
xor
mov
leave
xor
ret
cwtl
add
add
jnp
adc
nop
test
add
sbb
add
nop
add
pop
push
push
pop
xchg
arpl
aad
or
or
add
or
fldcw
ss
int
test
movsb
xchg
and
movsb
sub
andb
ret
aaa
jbe
xor
push
pop
loopne
sub
add
inc
mov
gs
adc
enter
cmpsb
notl
dec
fs
mov
add
and
bound
dec
outsb
das
push
ja
xlat
sbb
int
mov
lock
cs
sbb
adc
jnp
sub
cltd
addl
jo
sbb
dec
imul
jb
inc
lahf
and
and
push
or
adc
mov
pop
adcb
movsb
sbb
loope
and
ret
xchg
daa
mov
mov
sbb
jbe
or
loope
shrb
jmp
pop
rorl
imul
adc
jns
adc
xor
sbb
xor
or
dec
dec
popa
jmp
mov
push
testb
add
mov
outsl
push
je
jne
es
sub
xchg
pop
repz
adc
add
lods
sbb
cmp
xchg
fdivl
outsl
ja
lods
xchg
cli
sbb
dec
cmpsb
and
and
xchg
xchg
sbb
push
pushf
fldenv
adc
xchg
dec
and
sti
add
mov
push
sub
or
pusha
or
outsl
add
outsl
sbb
sub
out
cltd
loope
add
add
add
movb
jbe
push
xor
jecxz
jp
pop
fdecstp
adc
cmpb
imul
jo
xor
imul
imul
rcll
or
loope
mov
insb
in
enter
cmp
sbb
pop
sbb
pop
jae
push
push
dec
inc
mov
sbb
and
xchg
pop
dec
imul
sbb
clc
lds
xchg
dec
inc
dec
inc
stc
movsl
xor
sbb
insb
inc
rol
jo
cltd
fcomps
sub
mov
fidivrl
jo
xlat
int
les
pop
or
icebp
add
ljmp
xor
pusha
lahf
test
int3
jp
les
test
les
movsb
mov
gs
mov
addb
daa
add
or
or
add
jo
lock
jb
inc
push
pop
inc
pop
jo
sbb
mov
pop
dec
sub
adc
rclb
ret
add
sbb
gs
arpl
mov
iret
xlat
sbb
push
daa
cmpsl
ret
or
cltd
push
sbb
pop
aaa
dec
sub
xor
mov
dec
jne
or
mov
inc
mov
mov
pop
sbb
sbb
jle
cmpsb
add
outsl
jo
push
sub
xor
xorl
cmp
dec
adc
and
lea
das
pusha
mov
xchg
push
pop
jo
jne
push
lret
xor
sbb
mov
cwtl
mov
xchg
adc
repnz
addl
push
and
cmpsl
aad
and
js
mov
enter
add
push
or
jb
jbe
mov
dec
shr
shrl
cs
mov
xchg
ja
mov
push
add
mov
stos
sub
or
test
shlb
mov
sbb
inc
xchg
and
bound
nop
and
insl
dec
js
test
mov
cmp
mov
dec
jb
stos
pop
enter
mov
ss
pusha
dec
inc
cmp
add
pop
mov
sbb
lret
push
dec
push
xor
loope
and
adc
enter
or
inc
dec
inc
movsl
sub
mov
mov
mov
movsb
and
inc
dec
jbe
pusha
insb
xchg
sbb
subb
mov
adc
nop
lret
sbb
sub
sarb
jns
loopne
loope
and
xor
jl
enter
push
push
mov
push
fsubl
in
push
jno
mov
loope
mov
sub
or
es
inc
mov
xor
pop
movsb
popa
and
mov
out
push
xchg
adc
insb
mov
jno
or
jbe
inc
sbb
mov
mov
arpl
lahf
add
insl
fsub
pusha
push
negl
mov
and
and
or
in
mov
insb
sub
mov
push
jecxz
ret
mov
arpl
mov
rcll
sub
or
out
or
cmpsb
push
xchg
imul
push
xchg
and
test
out
sub
add
stc
daa
or
dec
lcall
lock
shll
push
daa
jnp
or
and
es
inc
rcrl
and
inc
imul
add
test
adc
aas
push
jae
xor
outsl
lods
out
cmpb
adc
adc
mov
gs
bound
sub
dec
inc
lock
inc
add
jle
fmull
ret
movsb
add
test
mov
sub
sub
and
push
lods
cmp
jno
inc
push
popf
fwait
outsl
push
push
adc
testl
fs
push
sub
lds
fs
dec
xchg
les
lods
lea
and
dec
pop
lcall
and
inc
imul
or
adc
mov
or
sbb
shlb
fldenv
sub
ret
sbb
mov
mov
xchg
int
fdivr
mov
test
mov
adc
divb
push
gs
sbb
and
ret
xchg
inc
ja
mov
test
mov
bound
push
add
jge
lret
aas
jae
ljmp
outsb
lea
into
inc
adc
rcrb
arpl
adc
adc
add
push
popa
xchg
js
mov
loop
sub
add
dec
adc
mov
mov
xor
xorb
and
xchg
pop
sahf
sbb
inc
test
les
pushf
sbb
mov
jnp
adc
fstl
jnp
push
inc
xor
dec
xchg
rcrb
inc
adc
and
outsl
ljmp
fcomps
sbb
fucomp
pop
shrl
xorb
cmp
push
outsl
dec
aaa
outsb
insl
popf
movq
aaa
cli
inc
pop
and
add
mov
or
sbb
test
insl
or
mov
push
imul
pop
push
xor
push
push
shll
adc
roll
push
jne
leave
das
in
and
sbb
imul
icebp
inc
ret
jae
dec
jae
gs
or
add
xlat
mov
mov
sbbl
dec
lahf
pop
or
cmp
mov
aad
jg
sub
xchg
add
scas
mov
sub
inc
fcomps
repz
in
adc
fstpt
pop
jne
imull
mov
dec
and
outsb
adc
add
ja
sbb
imul
shll
and
pop
mov
adc
aam
arpl
jb
sbb
adc
inc
and
in
aam
les
es
notl
ficoml
mov
and
and
testb
or
aaa
adc
and
mov
insb
sbb
pusha
and
jne
push
fists
xor
pop
inc
inc
inc
sub
push
int
push
sbb
xchg
lret
xchg
mov
jbe
les
xchg
mov
xor
push
test
jbe
stos
jecxz
daa
xor
ret
pop
mov
and
dec
pop
jl
mov
ja
push
xchg
test
mov
aaa
xchg
pop
add
mov
lea
xor
sbb
outsl
xor
adc
push
cmpb
push
and
xor
pop
dec
and
mov
sub
jl
sbb
ss
cmp
sbb
and
sub
jae
insb
sub
fcomps
mov
xor
inc
dec
ret
loope
mov
out
adc
mov
pop
adc
inc
fmuls
and
dec
add
nop
and
adc
sbb
and
lret
inc
in
lods
in
pop
dec
data16
pop
sub
and
xchg
pusha
inc
sbb
cs
ret
iret
lret
xor
lods
rorl
into
dec
mov
mov
adc
mov
pop
test
cmp
add
inc
adc
push
inc
push
ss
xchg
aaa
push
jo
inc
jl
inc
add
inc
movl
xchg
and
push
mov
in
and
mov
pusha
sbb
out
scas
pusha
inc
add
pop
add
add
out
lret
mov
mov
insl
arpl
out
pop
jle
ret
inc
add
add
in
jg
pop
inc
sub
loopne
popl
add
or
add
add
insl
mov
adc
add
add
mov
leave
xchg
sbb
add
adc
in
push
adc
nop
lahf
sbb
outsb
or
mov
loopne
cld
pushf
adc
rorb
add
loopne
cmpsb
jne
pop
aam
jg
imul
pop
pusha
inc
inc
push
cwtl
ss
inc
and
mull
push
cmp
adc
push
push
jae
inc
ficoml
andb
pop
or
inc
cs
and
imul
push
xor
mov
dec
lcall
fucom
add
loopne
seto
jb
jno
scas
bound
daa
sub
dec
add
dec
clc
jnp
mov
add
push
dec
xchg
incl
add
add
add
add
inc
xchg
inc
or
jo
cs
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
call
cmpsb
dec
add
push
dec
