pop
rolb
jo
push
add
push
add
push
add
add
add
rolb
push
rolb
add
push
add
rolb
or
add
test
rolb
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
je
jb
arpl
fs
jae
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
push
xor
xor
fs
insb
add
es
mov
add
mov
mov
add
loop
push
push
loopne
dec
mov
pop
insl
fisubrs
rcrb
and
bnd
jns
sarl
sub
cmp
push
and
test
addr16
repz
or
jge
cs
cmp
aaa
add
loop
mov
push
aam
pop
dec
push
loope
pop
sub
pop
xlat
mov
movsl
je
cmp
out
pop
fwait
cmp
nop
xor
test
lods
fldcw
fimull
push
and
test
arpl
pop
or
and
add
popa
xchg
xor
loopne
rcll
fadds
rcl
cld
call
xchg
and
xlat
pop
ds
lock
in
mov
filds
pop
sub
xchg
and
enter
or
lock
test
jecxz
inc
cmp
xor
sub
mov
add
add
add
mov
dec
xchg
lods
push
negb
jno
or
fsubrl
out
cmp
mov
sub
adc
out
imul
insl
cmpsb
ja
jecxz
jo
mov
lahf
jp
subb
lahf
xor
fwait
stos
daa
jg
dec
popa
sahf
jecxz
xchg
flds
rorl
cwtl
mov
aaa
lret
push
mov
lods
les
pop
jle
into
dec
insb
fistpll
cmpsl
inc
push
icebp
out
test
pop
cli
mov
push
stc
in
ja
pop
imul
hlt
mov
xchg
mov
pop
pushf
inc
insl
jne
xor
pop
or
xchg
cltd
imul
xor
mov
adc
mov
ss
lea
lds
lods
push
aad
cmp
mov
sub
and
jp
je
mov
fdivrl
cmp
mov
rolb
adc
add
inc
push
int3
ds
insl
sbbl
in
icebp
dec
inc
xchg
sbb
mov
sbb
push
add
in
stos
or
ret
stos
jle
jp
nop
jne
out
dec
lcall
loopne
imul
xchg
mov
or
and
divl
leave
xor
pop
gs
add
es
repz
mov
sbbb
jno
les
inc
cs
adc
cltd
dec
loopne
mov
icebp
add
xor
xchg
jae
iret
pop
addr16
xchg
adc
stos
mov
lock
sbb
test
inc
in
cmc
ret
out
xchg
fldt
loop
and
mov
mov
mov
movsl
push
jp
jns
xchg
movsl
pushf
mov
fidivl
push
sub
imul
pop
jmp
xchg
jbe
bound
lret
mov
pop
sub
mov
lahf
ja
dec
pushf
out
and
fisttpl
inc
rol
inc
xchg
negb
mov
xor
test
push
lcall
pushf
popf
pop
dec
and
ds
shlb
mov
mulb
cmp
test
pushf
jb
dec
into
add
or
pusha
enter
add
leave
cmp
mov
je
cmp
rorb
in
jbe,pt
push
xor
mov
add
shrl
aam
fldenv
jge
outsl
stos
insb
addb
arpl
roll
fcompl
and
push
hlt
fildll
push
imul
push
xchg
add
repnz
jl
scas
add
ljmp
xchg
push
scas
nop
adcl
or
mov
in
sbb
add
xor
jo
mov
outsb
and
imull
push
mov
aaa
into
testb
fcoml
pop
cld
xor
mov
jb
jle
shlb
cmp
cmp
push
mov
xorb
or
cltd
sbb
pop
repnz
sbb
ret
xchg
cmpsb
call
repnz
out
das
jo
stc
and
call
pop
call
add
mov
aam
jmp
in
cmp
sub
test
push
cmpsl
and
inc
or
jae
mov
pop
fwait
xor
push
ret
xor
arpl
adc
mov
stos
imul
ja
lds
or
dec
xchg
leave
test
cmp
pop
stos
stc
xchg
dec
mov
fwait
mov
sti
aas
bound
test
pop
gs
movsb
mov
icebp
aam
mov
inc
shl
aaa
inc
gs
dec
lds
inc
sahf
sbb
insb
insl
adc
adc
push
psubusb
xor
fiaddl
mov
lods
cmc
push
hlt
inc
dec
mov
fdivs
loop
loopne
xchg
imul
outsb
pushf
jno
and
test
fdivl
lcall
cmp
mov
push
lock
fdivs
sbb
inc
fsubl
jle
in
ja
push
sahf
push
inc
sub
lret
imul
stc
icebp
cli
jmp
addr16
xchg
or
les
cmp
shll
loopne
jne
arpl
cmpl
loopne
jns
popa
stos
fcmovu
or
mov
jbe
sbb
ss
cmp
enter
sti
shll
idivb
cmp
mov
in
dec
aaa
nop
stos
outsl
push
lods
inc
pop
pop
mov
xchg
mov
cli
push
fldl
add
lea
cmp
fpatan
stos
dec
stc
fadds
or
add
out
and
inc
icebp
xchg
push
fbld
cwtl
fmull
inc
daa
inc
add
cmpsb
jmp
xor
xlat
dec
add
movsl
cltd
adcb
add
mov
adc
outsl
dec
loope
fisubs
cmp
xor
sub
data16
out
adc
loop
sub
test
mov
inc
mov
test
in
jmp
je
ja
cwtl
pushf
shr
adc
lods
cwtl
cmp
in
push
sub
or
sub
out
sar
sbb
popa
jmp
cmp
jp
pop
sub
push
lock
cmp
xor
les
jle
ljmp
mov
cli
jecxz
test
or
push
in
and
or
pop
out
mov
loop
loop
into
fisubrl
rolb
fistps
flds
arpl
adc
pop
cmp
shll
pop
mov
jns
sbb
sbb
rcrb
outsb
inc
jno
jp
aas
outsb
lods
std
pusha
std
push
ret
mov
pop
push
rorb
addr16
iret
mov
pop
aaa
aaa
mov
add
shrl
sub
lret
hlt
test
data16
fcoml
jp
loope
sbb
pop
sub
incl
mulb
push
sbb
xchg
sbb
jnp,pn
mov
rep
sub
lds
sub
jo
ret
js
mov
sub
pop
push
and
add
sahf
cmpsb
ljmp
ja
pop
int
xchg
sbb
cs
xchg
cltd
loope
xchg
int3
cli
js
xchg
lea
adc
hlt
aaa
push
and
cmp
pop
sub
outsb
scas
sti
sbb
cld
jge
outsb
mov
push
je
aam
inc
testb
aam
pop
popf
jle
or
or
enter
sbb
lods
loop
mov
ja
in
dec
pop
shlb
sub
mov
adc
push
daa
das
xorl
mov
aad
fstpl
mov
sub
cltd
xchg
pop
testl
dec
mov
pop
xchg
and
push
scas
mov
inc
popf
xchg
xor
mov
dec
mov
xor
mov
inc
shlb
shl
test
jecxz
xchg
test
ret
sbb
out
iret
mov
cmp
lcall
inc
arpl
lods
ljmp
mov
xor
push
insl
mov
fwait
push
push
ret
pop
adc
lret
sbb
lret
dec
sub
push
test
mov
cld
ja
mov
out
into
cmp
int3
ljmp
stos
adc
test
lret
aas
mov
mov
mov
cmp
sbb
dec
loope
arpl
pop
push
loop
repz
je
pushf
mov
push
dec
loop
rcrb
aam
mov
sub
stc
mov
loop
js
test
pop
jb
aam
add
pop
adc
lock
sbb
pop
lea
pop
sub
or
jae
fcomps
jae
and
inc
rol
out
and
and
sbb
icebp
sbb
stos
cmpsl
lcall
inc
pop
jge
ljmp
stos
ficomps
and
mov
pusha
mov
ljmp
std
loopne
push
push
icebp
xorb
insl
jp
cs
push
pop
fsts
and
arpl
jl
xlat
mov
test
shrb
jmp
fnstcw
mov
repz
vpsubq
les
notl
mov
cmp
add
ds
aam
inc
mov
or
aaa
inc
sub
jle
jg
hlt
pop
int
inc
repnz
xchg
jae
adcb
inc
fcoml
pop
cmpb
adc
jge
lods
mov
cmpsl
pop
mov
jnp
adc
ds
push
imulb
out
cmp
js
sub
push
js
loopne
mov
inc
inc
xchg
stos
jnp
pop
pop
jo
lods
dec
dec
sarb
push
xor
xchg
ljmp
mov
adc
jb
pop
mov
mov
lea
pop
push
jnp
lahf
jle
mov
xor
xor
or
test
push
aaa
insl
ret
adc
fs
mov
int
ljmp
push
dec
repz
mov
subb
insb
test
cmp
add
push
mov
jmp
pop
sbb
sub
test
mov
in
fs
cmpsb
shlb
cmp
cs
jne
sub
dec
push
and
and
out
addb
lock
pushf
mov
push
cmpsl
and
adcb
xor
xchg
inc
scas
clc
add
fcoml
xor
call
int
test
inc
ret
sub
sarl
sub
cmp
jne
xor
xor
imul
cwtl
test
mov
mov
cld
mov
pop
ja
cmp
lret
and
addr16
cmpsb
lea
inc
pop
lods
ds
movsb
xchg
adc
out
mov
test
loop
call
pop
aas
sub
inc
lcall
frstor
mov
sub
fs
adc
lret
divl
insb
push
bound
mov
xorb
sti
xchg
push
jno
xchg
pop
leave
fsubs
and
pushf
in
hlt
inc
test
bound
lods
dec
data16
ficoms
mov
fisubrl
cmp
sbb
xor
push
mulb
inc
jle
fistpll
lods
mov
mov
xchg
mov
pusha
cwtl
pop
push
pop
cmp
mov
iret
push
inc
xlat
sbb
call
cmc
and
dec
jp
fwait
add
cld
dec
inc
mov
adc
and
push
push
lret
adc
xchg
ljmp
imul
jmp
xchg
pop
les
shlb
push
sbb
inc
cmp
repz
bound
inc
out
lods
xor
sahf
push
loop
add
sbb
pop
jno
mov
loopne
xlat
rcrb
loope
pop
mov
lds
push
xor
out
cltd
cmp
xor
pop
outsb
aas
dec
jmp
insb
js
or
rcr
jl
or
sahf
inc
mov
xchg
subb
test
add
cs
sar
sub
test
jp
jbe
dec
add
lret
mov
mov
sahf
mov
or
cli
dec
or
mov
mov
shlb
repnz
push
sbb
cmpl
loopne
in
add
sbb
inc
push
bound
pop
sbb
icebp
imul
test
aas
mov
call
or
pop
jg
xchg
dec
popa
fdivrs
sub
xor
or
cltd
cs
inc
or
fstpt
out
jns
mov
es
lea
sahf
les
jmp
xchg
adc
xchg
cmp
or
out
xor
fldt
xor
lret
xor
stos
mov
cs
cld
fxch
lea
inc
es
gs
aam
aas
fs
mov
mul
out
aaa
shl
jno
call
push
fidivl
adc
pop
push
test
dec
inc
add
test
jo
lods
aam
testb
mov
jb
xchg
inc
jnp
dec
addr16
fmul
jo
data16
push
int
sti
jns
leave
cmp
enter
out
jbe
les
dec
cmp
aas
lea
jmp
and
add
scas
out
inc
fisttpll
outsl
js
xor
rclb
xor
pusha
add
xor
fwait
jmp
jne
movd
mov
push
lahf
mov
dec
jmp
add
push
mov
xor
xchg
pushf
mov
jecxz
jbe
push
pop
push
inc
test
adc
xchg
aad
rcrb
dec
lock
mov
sbb
stos
dec
pop
cld
pusha
jecxz
and
and
daa
push
jne
push
movsb
cs
and
cmp
xchg
test
push
jns
pushf
pop
jnp
loop
mov
sbb
push
aaa
iret
cmp
es
add
or
xor
push
add
pop
adcb
inc
xor
cmp
add
xchg
sub
push
adc
icebp
mov
cmp
jns
mov
sub
nop
mov
pop
jmp
mov
pop
pushf
pop
jmp
insl
xor
push
lret
aam
pop
jb
in
push
mov
into
xchg
andl
int3
mov
test
call
popf
int3
pop
jg
rcrb
mov
pop
inc
call
xor
pop
and
inc
ret
lods
cld
mov
mov
mov
out
repz
movl
ljmp
push
inc
mov
jbe
sbb
repnz
aad
jg
mov
sub
mov
add
loop
les
mov
sub
adc
sti
push
nop
cld
int3
incb
push
and
xor
xor
popa
fdivrs
aad
cmp
movb
pop
or
ss
mov
insb
add
lds
scas
outsb
xor
out
mov
xor
shrl
cmpsl
mov
xchg
and
mov
mov
sub
test
mov
fwait
and
xlat
jae
mov
inc
jne
sahf
rorb
cmp
xchg
andb
test
pop
scas
jl
insl
cltd
sbb
cmpsb
sub
pushf
push
sbb
ret
lcall
stc
cld
push
int
jmp
jmp
fdivrp
popf
inc
mov
adc
mov
push
int3
stc
and
mov
mov
aas
outsl
outsb
dec
hlt
cmpl
dec
imul
leave
test
rcrb
add
movsl
arpl
iret
push
insb
aam
stos
dec
jmp
cmpsl
or
sub
imul
push
push
jno
inc
mov
fwait
push
push
sbb
aaa
xchg
ret
push
jno
mov
mov
lods
adc
cwtl
inc
inc
je
lcall
adc
mov
hlt
push
pop
lea
push
insb
jo
mov
pop
addr16
call
mov
andb
es
mov
in
cmpsb
movsl
add
mov
sarb
xor
mov
mov
test
ss
xchg
jb
lea
sub
icebp
repz
mov
adc
mov
cmp
gs
cmp
adc
imul
lahf
xlat
pop
xor
cwtl
fsubs
je
mov
pop
or
mov
scas
dec
add
sbb
mov
xchg
rcll
jp
nop
aaa
cwtl
cmp
out
cmp
loop
pop
xor
xor
xor
push
pop
subl
in
adcl
jge
mov
jb
xchg
and
cmp
outsb
fsubrl
addr16
inc
test
inc
out
shll
negl
mov
jbe
in
je
pop
fists
mov
pop
in
xchg
jno
rclb
mov
lods
and
jno
sub
addb
inc
jae
lods
mov
jns
mov
mov
mov
or
sahf
shrb
lret
dec
add
and
or
ffreep
pop
fcoml
xor
cmp
cmp
insl
fcmovnbe
repnz
adc
xor
mov
loop
insl
in
fnsave
inc
mov
xor
add
mov
sub
test
push
ret
dec
mov
ret
cmp
sub
sbb
mov
push
test
cwtd
or
adc
nop
sbb
adc
jg
pop
adcl
mov
out
mov
loope
sbb
out
add
jb
in
mov
cld
aas
jge
lgs
jmp
rcrl
gs
mov
or
cld
cmc
es
xorb
mov
aad
push
xchg
jnp
xchg
jg
mov
dec
les
mov
inc
int
add
fs
mov
std
sti
dec
xchg
addb
sbb
dec
push
xchg
aas
inc
sahf
sbb
sub
xchg
sbb
aaa
add
mov
cmpsb
movsb
aam
dec
imul
cmp
dec
xchg
mov
xchg
push
cmp
push
jae
call
mov
clc
inc
fs
int3
push
add
nop
mov
outsb
xchg
cs
cmpl
sti
data16
out
clc
inc
pop
adc
sbb
xor
add
cmp
lret
lea
sub
popf
mov
cmp
and
cmp
negb
dec
xlat
lock
hlt
sbbl
sub
faddl
cs
mov
js
ds
leave
pop
lret
lret
add
fistps
loope
sub
ret
xor
xor
xchg
arpl
add
dec
in
pop
aaa
shr
push
rolb
push
cmpsb
icebp
loope
stos
pop
icebp
dec
and
cwtl
jle
rorl
push
fistpll
add
hlt
divb
cli
jp
xchg
adc
xor
and
lahf
out
mov
rcl
push
xchg
adc
std
aad
cltd
nop
xor
jp
xchg
adc
mov
out
xor
into
add
ret
inc
aam
insl
push
cs
ljmp
stos
lock
dec
std
add
jb
push
push
jb
pushf
loopne
jmp
cmp
sbbl
clc
rcrb
jns
and
dec
or
sbb
and
inc
inc
mov
add
mov
mov
jle
std
clc
arpl
mov
inc
xor
sbb
or
in
mov
mov
jne
push
xor
jnp
sbb
mov
cmpsb
call
aam
scas
cmp
scas
or
sti
lret
xchg
incb
lahf
push
in
mov
aam
ret
xchg
in
push
mov
fisttpll
rorb
pusha
cwtl
rcll
out
jmp
adc
sahf
icebp
push
fistpl
add
dec
mov
mov
lods
cs
cmp
adc
in
inc
jo
in
stc
repz
popa
sahf
mov
addb
test
into
mov
mov
mov
rclb
scas
lea
jbe
jg
jns
push
pusha
cli
or
sahf
mov
jg
sub
lods
xchg
lds
sbb
cmp
dec
sub
sarl
and
or
push
add
or
cmovbe
xlat
lret
mov
rcrb
cmpsl
cwtl
lds
inc
inc
in
adc
mov
aam
imul
or
jecxz
addl
sarb
push
orb
stc
fimull
xchg
pop
enter
loop
dec
nop
jle
shl
jmp
mov
and
and
neg
pop
jmp
adc
sub
bound
pusha
pop
xchg
jbe
jae
or
or
dec
ret
push
inc
shrl
push
daa
mov
push
add
mov
insb
push
xchg
cmp
mov
test
cltd
inc
xchg
hlt
sbb
adc
dec
adc
gs
mov
cli
add
push
popf
stos
dec
aad
pusha
clc
out
or
sbb
cli
inc
pop
insl
add
jle
data16
add
les
jae
in
into
xlat
pusha
and
or
dec
ret
jg
mov
insl
xchg
jmp
mov
mov
dec
jmp
xchg
pop
ret
mov
or
and
int
inc
xchg
and
in
aad
cmpsb
pop
adc
or
addr16
imul
fdivrs
mov
pop
dec
lds
mov
movsb
and
ret
test
xor
scas
push
adc
loopne
push
or
add
adc
out
mov
and
lock
jge
pusha
add
mov
in
neg
mov
mov
adc
add
js
pop
in
xor
push
leave
stc
jno
adc
lods
cltd
in
icebp
in
xor
xchg
pop
fists
stos
mov
bound
out
add
mov
inc
fcompl
insl
or
comiss
inc
xor
or
mov
inc
or
mov
push
nop
lcall
dec
pop
std
mov
aas
sbb
mov
or
jae
pop
cmp
cmp
mov
fcom
jno
in
mov
cmp
ja
lock
and
call
jne
mov
add
popa
call
pop
and
push
jnp
cmp
push
cmp
test
out
adc
lcall
loope
aad
xchg
loop
ja
mov
test
cltd
scas
xlat
and
subb
dec
aaa
loop
jne
sub
sbb
sbb
mov
sti
stos
ret
aad
movsb
and
cltd
jle
adc
jl
jo
movsb
xchg
adc
cli
test
pop
jb
aam
movsl
std
fldcw
stc
sbb
out
testb
add
cmpsb
mov
xlat
xor
cld
aam
fists
mov
inc
push
adc
loopne
nop
sub
and
popa
or
fsubrs
jne
mov
mov
movsl
dec
inc
sarl
outsb
into
dec
into
sbb
aas
icebp
or
popf
loopne
dec
sub
mov
push
mov
sub
adc
rcrb
fidivs
in
push
ds
add
xchg
ret
mov
dec
mov
and
imul
lods
mov
lret
cmp
jmp
movsb
loope
xchg
movsl
outsl
inc
fucomip
mov
mov
repz
lods
hlt
dec
sub
mov
mov
ss
test
bound
pop
movsb
xor
orl
cld
jbe
std
and
cmp
mov
inc
inc
xchg
in
fmuls
or
lds
jae
jl
leave
or
xchg
mov
mov
fisttpl
jnp
shlb
cmpsl
das
fsubrl
cli
addb
xchg
sub
mov
pop
cltd
cld
mov
test
in
imul
dec
pushf
fsubr
or
xchg
hlt
dec
sti
cmc
sub
jae
inc
or
pop
enter
inc
gs
mov
out
lcall
mov
je
rclb
in
mov
xchg
cld
mov
out
sub
cmp
or
inc
and
add
testb
loop,pt
cmc
sub
xor
mov
xchg
push
clc
lcall
and
out
jae
push
outsl
sub
loopne
pop
adc
sbb
sbb
into
int3
andb
cltd
clc
test
aam
sub
repnz
xor
adcb
xchg
adc
or
mov
xchg
xchg
sbb
cmpsb
sub
jmp
in
push
mov
es
jbe
and
push
sub
stc
mov
jmp
inc
test
inc
das
add
sub
mov
or
or
insb
pop
out
xchg
aaa
xchg
fsubrl
out
mov
inc
ljmp
nop
xchg
pop
cmp
pop
addr16
insb
cmp
loopne
mov
pop
xor
inc
and
xchg
sbb
test
lods
inc
mov
xchg
stc
ficompl
in
xchg
cltd
imul
sbb
outsb
pop
push
adc
jge
fsubl
inc
imul
xor
daa
je
xchg
popa
xchg
mov
imul
inc
cmp
loope
mov
mov
inc
in
push
and
test
icebp
jns
mov
mov
movsb
fldcw
daa
push
mov
add
push
add
repz
dec
cmp
je
or
jg
imul
pop
pusha
pop
dec
push
push
test
cmp
cltd
mov
jno
mov
lods
and
mov
inc
xor
and
mov
adc
jno
push
in
cmp
mov
neg
test
dec
rorl
mov
mov
sti
cld
arpl
js
jmp
fisubrs
stos
or
and
pop
shrb
mov
jp
fbstp
jg
lahf
push
icebp
mov
fiaddl
add
inc
mov
mov
out
outsl
mov
xchg
lods
lods
pop
test
mov
dec
sub
dec
mov
adc
int3
adc
mull
lods
jp
mov
lods
test
out
inc
jge
cld
jp
daa
xchg
jns
push
popa
fnstsw
dec
rcr
gs
mov
adc
xor
push
mov
and
jae
lods
les
push
adc
jns
stc
out
iret
inc
push
sbb
xchg
fistpll
hlt
push
mov
pusha
cmp
andb
ds
aaa
mov
dec
mov
push
cmp
cmpsb
cltd
inc
add
mov
into
dec
mov
mov
repz
sub
jno
lret
dec
xorb
fimull
adc
push
fdivl
cmp
cmp
xor
cmp
sub
popa
arpl
js
push
xchg
mov
pop
xor
xchg
popa
out
call
inc
je
fcoml
incb
andb
stos
pop
adc
sbb
jmp
ljmp
clc
fst
loope
inc
or
push
stos
pop
pop
add
inc
jg
idivl
or
mov
lods
cmpsl
xchg
xor
push
dec
lods
jnp
jl
roll
xor
mov
popf
je
insb
fsubrl
push
stc
mov
pop
mov
sbb
iret
mov
movsb
jge
movsb
test
add
cmc
cmp
incb
ds
sbb
loope
xor
jg
sub
inc
jge
repnz
pop
dec
or
cwtl
ljmp
cmp
es
mov
xchg
fs
outsl
addr16
stos
dec
fildl
sbb
xor
mov
mov
push
dec
stos
sti
icebp
roll
fimull
cmp
inc
dec
imul
shll
arpl
push
imul
cmc
xchg
rcrl
push
fidivs
jecxz
gs
xchg
sti
sub
mov
test
add
or
mov
sub
jo
movsb
dec
dec
push
xchg
mov
out
sub
test
dec
pushf
fisubl
idiv
lret
movsb
ret
cmp
bound
mov
add
scas
adc
cmp
jg
sbb
and
inc
mov
lods
mov
dec
adc
test
mov
mov
and
dec
in
inc
hlt
loop
dec
cmpsb
mov
mov
es
sbbb
pop
and
add
stc
push
add
aad
cmp
insl
dec
mov
push
ds
push
mov
sbb
and
mov
add
cmpsb
idivb
dec
mov
sub
arpl
mov
adc
mov
adc
pop
pop
mov
mov
or
es
push
cmp
or
jbe
jb
aam
jg
push
pop
aas
push
pop
f2xm1
movl
cmp
je
jl
ror
jge
and
std
mov
shll
push
into
mov
rclb
scas
mov
push
das
mov
daa
dec
insb
sub
shl
mov
out
popa
addr16
xor
scas
jnp
loop
movsl
ds
or
cli
sbb
jg
xchg
mov
cmp
jge
push
scas
dec
hlt
push
jmp
mov
int
icebp
or
jmp
jmp
push
adc
daa
inc
ds
xchg
jnp
and
call
push
xor
int
ds
les
adc
push
sub
sub
mov
je
jns
mov
dec
sbb
rolb
les
xorl
popa
xchg
mov
cmp
mov
sbb
loope
outsl
or
mov
cmp
dec
adcl
aas
jo
movsb
fsubrs
or
xchg
push
ss
insl
kortestw
pushf
push
xchg
aaa
daa
xlat
mov
mov
jne
stos
sbb
je
push
es
adc
addr16
cmp
adc
lods
mov
divl
pop
inc
mov
out
xchg
mov
jl
mov
cwtl
xor
scas
inc
pop
adc
sub
movsl
lods
femms
testb
mov
stc
jge
popa
test
jnp
shlb
xor
into
mov
fdivs
out
cmpsb
adc
add
jecxz
pop
loopne
adc
mov
jmp
cmp
mov
movsl
add
xor
imul
mov
dec
mov
testl
lea
shrl
xchg
fiadds
xchg
lahf
inc
cltd
jmp
dec
out
out
test
push
xchg
mov
icebp
or
sarl
pop
inc
push
cmp
sti
or
pop
jg
sbb
jbe
int3
arpl
xchg
xchg
push
pusha
jge
mov
lret
push
jp
outsb
pop
mov
movsb
xchg
mov
lods
mov
call
mov
pop
shrb
add
sbb
sti
fst
andb
repnz
jae
xchg
jge
mov
js
test
leave
inc
cli
rcr
xchg
fdiv
pop
cmp
flds
stc
xchg
adc
push
jp
out
adc
stos
pop
mov
mov
fmull
sti
inc
dec
shll
lods
test
movsb
jb
dec
sbb
mov
lea
mov
inc
cmp
xchg
out
sub
mov
inc
push
dec
sarl
stos
pop
es
lret
fdivl
cmpsb
inc
push
add
std
pop
pop
xchg
jp
mov
inc
pop
andb
xor
or
mov
outsb
aad
xchg
mov
push
fcmovnu
jbe
lods
cmp
hlt
or
sbb
mov
hlt
outsl
ljmp
sti
sub
xor
cmp
outsb
sahf
movsb
in
lea
or
xor
sbb
adc
cld
int3
cmp
inc
jecxz
cmc
mov
jno
inc
mov
cmpsl
jb
stc
mov
jb
push
movsb
inc
fwait
ds
movsb
push
rcrb
cld
sub
scas
mov
sub
das
push
in
sbb
nop
push
or
leave
lret
test
rclb
mov
imul
cmpb
cmpb
cmp
mov
or
fwait
xor
in
outsl
cld
lods
cmpl
ret
and
xchg
jae
pop
xor
incb
push
aaa
aad
ficoml
daa
data16
dec
mulb
adc
xchg
push
push
xor
pop
and
or
bound
imul
stc
push
addr16
je
xchg
cmp
ret
pop
aas
nopl
or
dec
outsb
xor
mov
dec
mov
fptan
sahf
push
add
mov
push
mov
pop
lock
movsl
cmpl
jb
pop
pop
adc
push
mov
push
cmc
add
cmp
in
jp
push
pop
stos
lahf
fwait
data16
add
fucom
call
aam
loopne
jno
std
and
xchg
and
mov
lods
jg
xchg
pop
into
mov
dec
jo
sub
in
xchg
or
push
addr16
push
and
push
push
shr
adc
mov
clc
inc
sbb
in
jo
push
dec
jge
and
lret
fldenv
test
mov
and
out
lods
xchg
add
fistpl
mov
xor
sbbb
push
lea
cmpsl
nop
hlt
cmc
adc
ret
out
xchg
mov
ja
xor
inc
je
mov
adc
aas
fistpl
repz
pop
push
push
xor
sbb
out
scas
aaa
pop
rolb
adc
xchg
jnp
scas
shrb
mov
adc
inc
loopne
xchg
in
add
jle
dec
or
or
inc
in
mov
sbb
sti
lods
jns
jno
cmc
xchg
insl
inc
loope
sti
sbb
pop
insb
push
inc
inc
xchg
xor
insb
bound
loope
xchg
pusha
ljmp
aad
or
inc
scas
dec
out
ds
nop
dec
jmp
cmc
ret
das
loop
test
stos
mov
mov
leave
push
push
mov
arpl
ss
ret
mov
xor
lret
push
xor
mov
xchg
fimull
call
adc
in
sbb
mov
jno
inc
into
pop
pop
cmp
adc
call
icebp
and
pop
insb
push
mov
lods
outsb
inc
sub
nop
stos
jl
hlt
jmp
lea
pop
std
lahf
push
push
clc
stc
imul
mov
fcomps
jbe
cwtl
or
ljmp
xor
gs
mov
adc
push
aam
jecxz
orb
xchg
sbb
sub
call
dec
push
xor
and
enter
mov
push
in
add
int3
dec
aad
or
push
filds
fwait
mov
inc
aaa
dec
pop
stos
dec
fistl
push
inc
notl
mov
test
jp
ljmp
pop
mov
xchg
pusha
dec
movl
xchg
mov
inc
popf
push
add
jae
nop
es
pop
imul
cmp
mov
inc
and
xorb
add
jmp
stc
lods
adc
or
daa
xchg
xchg
jge
add
js
jp
adc
jns
mov
mov
jmp
gs
mov
pusha
cmp
lods
sub
add
movsl
jae
sub
leave
sahf
cmp
jnp
fs
mov
shll
cmp
pushf
adc
mov
pop
pop
sbbb
fsubrl
call
sbb
ja
mov
movl
mov
scas
jb
lock
into
or
das
xor
jg
sub
stos
nop
jne
movsb
mov
outsl
pop
jp
inc
pop
fmull
jle
cld
std
xchg
pop
xchg
into
or
push
aam
les
addr16
stos
adc
jp
popa
sub
cwtl
cltd
jne
adc
inc
int3
les
popf
lret
fld
mov
loopne
sbb
ss
mov
mov
pop
cld
stos
sbb
out
cmp
pop
test
mov
lahf
jle
push
lcall
es
cmpsl
push
adc
scas
pop
and
mov
push
jl
add
mov
adc
rol
popf
inc
out
outsb
jp
jne
inc
sti
outsl
shrb
addl
push
pop
sub
sub
jmp
data16
dec
push
inc
ljmp
hlt
lds
imul
sub
call
add
imul
popf
mov
inc
push
int
pop
push
into
outsb
pop
mov
movsl
out
inc
fsincos
out
dec
or
add
inc
fsubrl
movsl
pop
mov
fdivrs
loope
adc
das
les
add
sub
mov
movsb
out
idivl
mov
or
inc
add
cmp
jns
inc
sysret
dec
xchg
xchg
sbb
add
nop
mov
or
insb
mov
and
fwait
aas
push
mov
mov
lret
adc
int
lock
in
fwait
ja
push
jg
or
jmp
in
adc
push
push
push
lds
pop
push
and
in
xchg
fldt
and
dec
dec
jae
push
or
cmp
test
mov
cmpsl
add
stc
call
or
sbb
jns
repnz
jmp
jne
shl
mov
stc
test
mov
mov
arpl
lret
shll
jmp
mov
pop
xor
mov
push
rol
push
jmp
call
and
mov
jl
nop
sbb
insl
nop
imul
icebp
inc
push
popa
dec
jl
cmp
popa
insl
sub
mov
mov
xchg
imul
pusha
dec
and
sub
rcll
add
mov
sar
or
xchg
add
inc
pushf
jp
shr
sahf
jmp
sbb
addr16
aam
ljmp
jb
vpsubusw
or
popl
loopne
scas
sub
clc
xorb
push
testb
sub
int3
cmpl
pop
xor
pop
fsub
mov
or
sbb
push
pop
mov
push
push
mov
mov
stc
pusha
arpl
mov
jl
jg
loopne
sar
jmp
cs
leave
loop
sub
and
rorb
push
stos
add
ret
and
sbb
fs
leave
dec
add
sub
or
pop
sbb
mov
testl
pop
test
std
or
pop
mov
daa
sub
dec
mov
jge
lahf
xor
jae
mov
inc
or
out
jb
lds
jl
out
and
adc
xchg
and
push
sub
in
test
cmp
pop
fidivs
xorb
push
imul
test
aaa
push
push
movsb
dec
jae
dec
popf
mov
jmp
jle
not
or
out
push
jg
lods
inc
addb
in
imul
adc
mov
pop
mov
arpl
or
aad
jno
loop
sbb
int
loopne
xchg
xor
enter
jbe
aas
cmp
test
loope
cli
cld
lods
xor
pop
dec
add
sub
jp
inc
add
into
and
imull
xor
aaa
sub
mov
popf
test
jo
aaa
mov
outsb
inc
mov
adc
pop
cmpsb
sbb
add
lret
mov
add
pushf
test
cwtl
push
jp
add
js
jbe
push
shlb
pop
es
xchg
out
out
pop
stc
cmp
aam
xchg
push
test
mov
mov
int
mov
sub
mov
jbe
iret
aaa
add
in
push
sub
adc
fidivl
ficoms
or
pusha
add
icebp
add
inc
pop
testl
int
lahf
ret
xlat
and
and
xor
fistl
cmp
into
cmp
fsubr
test
push
insl
adc
xchg
fcos
add
mov
cmp
gs
sbb
sub
aaa
push
jo
popf
lds
loopne
lcall
add
adc
std
sti
cmc
xor
cwtl
and
xchg
fs
adc
call
ds
out
mov
mov
sub
sub
loop
movsb
imul
sbb
ss
xchg
sub
sub
sahf
in
push
fs
jle
lahf
lahf
inc
rolb
jge
mov
adc
aad
fwait
sarb
daa
repz
push
adc
lock
sbb
ret
cltd
mov
popf
mov
lahf
push
int3
adc
pop
lret
mov
jb
pop
in
push
dec
pop
aaa
lea
test
int
test
loopnew
mov
mov
das
or
in
les
push
lea
mov
cli
push
push
xor
es
dec
adc
lret
notl
lods
incb
rolb
mov
and
outsb
ds
jle
in
imul
xor
mov
mov
imul
test
aad
dec
pop
and
scas
xor
xor
cwtl
fsubrl
les
insl
icebp
out
mov
or
dec
cltd
movsl
movsl
in
push
pop
add
mov
mov
cmp
mov
bound
or
jae
and
lcall
mov
sub
inc
or
lods
outsb
sbb
sbb
repnz
out
dec
add
nop
cmpsb
inc
int
mov
push
cld
mov
adc
ret
push
ljmp
imul
xchg
inc
test
pop
dec
sahf
pop
sbb
fistpll
in
pop
mov
ds
lret
jbe
test
js
sub
fdiv
mov
clc
mov
jg
add
jne
inc
stc
pop
outsl
insl
fildl
loop
jl
xchg
aad
push
or
cmpsl
dec
sete
or
xor
adcb
adc
sbb
rcrb
inc
mov
dec
pop
orl
xchg
repnz
inc
fnstcw
daa
js
and
cmp
lds
ja
add
push
out
fcoms
stos
repz
mov
dec
iret
cs
movsl
mov
sbb
inc
jmp
adc
repz
ss
mov
sub
xor
dec
mov
iret
dec
repnz
jno
mov
or
es
mov
fidivs
jae
push
insb
call
loop
arpl
push
cmp
sbb
and
push
das
fs
fidivrs
scas
xchg
push
push
jl
stos
into
lods
cmpsl
xchg
in
or
lcall
inc
repz
and
pop
jno
cmp
stos
mov
daa
popa
js
sbb
inc
add
insb
pop
pop
mov
out
arpl
pop
mov
dec
in
mov
mov
adc
push
xchg
add
jno
cmp
add
push
jl
mov
aam
sti
aam
sub
sbb
xorb
pushf
sub
jp
and
cli
call
and
mov
dec
repnz
iret
lea
xor
add
cli
mov
pop
fxtract
mov
call
jb
xacquire
mov
inc
mov
loop
ret
xchg
dec
sub
pop
in
cli
lret
xchg
fwait
sti
xchg
mov
mov
fisubrs
nop
cmp
sub
pop
sub
mov
mov
lret
push
imul
cwtl
fnstcw
mov
push
sbb
leave
lret
inc
lcall
cs
inc
out
inc
jno
add
mov
sub
xor
adc
mov
jb
loopne
sbb
pop
mov
std
out
jp
sbb
jl
ret
movsl
popf
sbb
cmp
push
or
mov
adc
das
cmp
icebp
cmp
sarl
adc
inc
in
addr16
fistps
xor
mov
cs
xor
pop
push
fsubrl
jbe
les
js
dec
rdpmc
lea
stos
cltd
repz
cmp
xor
inc
imul
iret
cmp
mov
push
mov
xlat
loop
xchg
and
data16
jnp
xor
mov
leave
insb
mov
mov
lret
cmp
or
pop
lret
imul
js
andb
mov
or
jns
test
adc
mov
pop
lds
cmp
scas
scas
mov
xchg
xchg
jmp
inc
mov
cld
icebp
lea
xlat
and
cmp
nop
or
or
jp
cltd
cmp
mov
or
pusha
and
cmp
loopne
add
or
pop
lret
pop
mov
repz
and
cmpsl
lcall
dec
lahf
mov
sub
cltd
push
push
arpl
pop
xchg
hlt
in
decl
ret
sbb
js
test
dec
adc
and
pop
xchg
rorb
loop
or
inc
fiadds
xor
or
cwtl
stos
push
mov
and
xor
adc
ja
ficoms
in
push
test
push
imulb
repnz
adc
popa
ror
ja
popa
ret
dec
in
sub
aad
push
cmp
lods
rcrl
fsubrl
push
leave
mov
outsb
xchg
sti
or
stc
das
mov
es
lret
mov
push
pop
mov
add
fcom
xchg
and
mov
prefetchwt1
mov
stos
jo
inc
mov
nop
in
sti
sub
add
add
inc
dec
mov
movsb
bound
outsl
pusha
cmp
stc
inc
push
movsl
jmp
ror
add
test
pop
jle
lcall
xchg
jle
stc
leave
rolb
mov
push
sbb
test
lea
mov
pop
jae
jp
mov
lret
fnsave
sti
mov
lods
push
sbb
xchg
ret
dec
push
js
inc
xchg
push
jge
and
hlt
aaa
bound
in
bound
add
test
push
ljmp
ljmp
push
dec
ja
dec
sbb
pop
xor
test
in
jmp
repz
shrb
bound
sub
leave
fnsave
jl
mov
pop
jge
xchg
mov
xchg
mov
cmp
mov
shrb
xor
in
movsb
das
js
ljmp
gs
subb
sbb
int3
adc
loopne
and
dec
jb
push
scas
jp
mov
cmp
outsb
stos
ja
test
inc
lcall
ja
insl
lea
sub
insb
scas
in
mov
inc
jnp
xchg
xor
sub
adc
jnp
stc
testl
shll
add
pop
fwait
jnp
stos
test
push
pushf
jae
cmp
jo
movsb
shr
cmp
sub
insl
mov
xor
cmp
push
jge
js
bound
jne
xchg
push
cltd
imul
outsb
scas
gs
mov
lret
repz
ror
imul
pushf
fwait
jl
les
lods
in
mov
pcmpgtd
mov
call
hlt
cmp
stc
addr16
mov
lahf
mov
out
push
icebp
pusha
shrl
popf
mov
push
mov
pushf
out
out
sti
or
fsubp
mov
sbb
xchg
jnp
and
and
adcl
sbb
sarl
xchg
test
fdivrs
addr16
cmp
pop
pop
imul
ljmp
addb
or
in
mov
pop
dec
and
outsb
mov
mov
or
xchg
mov
add
adc
mov
jb
adc
mov
xlat
and
adc
push
xchg
xorl
or
sub
scas
movsl
mov
or
xor
fldt
insl
pushf
and
add
das
mov
inc
rclb
idivl
shrl
das
mov
loope
mov
in
pop
aaa
inc
popa
push
mov
mov
xchg
cs
sbb
leave
lret
mov
cmc
sub
hlt
cmpsb
call
push
inc
mov
cmp
repz
aaa
and
fldenv
orl
repnz
shl
insb
or
dec
cmp
fistpll
mov
incl
jmp
mov
jno
arpl
je
jno
xor
daa
test
xlat
mov
insb
sub
xor
scas
fcoml
int
jmp
or
pop
outsb
mov
sub
stos
and
fiaddl
cmc
int
dec
leave
pop
push
roll
adc
arpl
or
sub
cmp
pop
jmp
or
adc
xchg
pop
ret
jne
ja
add
das
and
inc
aas
rol
movsb
imul
mov
dec
mov
orl
pop
fsubrl
gs
out
imul
or
test
cmpsl
push
test
js
sbb
fnstcw
mov
mov
rcrb
in
fxch
sub
xor
lods
push
sub
sbb
mov
mov
jo
mov
addr16
call
adc
outsb
pop
mov
sub
adc
push
std
jle
mov
and
or
je
mov
arpl
pop
dec
test
js
stos
dec
sub
push
aad
in
sub
call
rclb
pusha
push
xchg
mulb
mov
and
and
push
jns
adc
cmp
lahf
cmpsl
test
cmp
mov
sbb
fcmovne
add
inc
and
sahf
and
inc
adc
add
jae
xor
imul
mov
and
clc
out
add
popa
push
not
mov
adc
popa
inc
ret
out
int3
dec
adc
outsl
push
xchg
pop
insb
daa
push
or
out
push
decl
xor
push
test
and
jmp
sti
add
mov
iret
in
lahf
fidivl
shl
add
iret
jae
xchg
push
popa
scas
insb
aad
push
or
dec
pushf
and
jecxz
jp
lds
mov
and
adc
js
pop
test
cmpsb
insl
pop
sbb
ljmp
fiadds
mov
mov
es
push
add
int
xchg
dec
imul
ljmp
adc
inc
mov
mov
movsb
jecxz
ret
xor
in
sub
daa
sbb
inc
es
fstpl
lret
xor
mov
fmulp
rorl
inc
mov
cmp
aas
fucomp
ret
loopne
aaa
lret
adc
rolb
cmp
adc
inc
xor
arpl
in
iret
and
dec
pop
hlt
mov
xor
sti
les
xchg
es
jmp
mov
shl
je
cmc
cmpsb
sbb
inc
cwtl
add
or
jnp
aas
xchg
hlt
dec
dec
arpl
lods
cli
jmp
inc
jns
add
js
fisubrl
jecxz,pt
adc
stc
push
shll
mov
pop
mov
add
fnstenv
daa
adc
movsb
cltd
sti
lods
in
insl
mov
dec
mov
sbb
outsb
mov
xchg
hlt
gs
fimuls
enter
std
dec
ss
stc
popa
mov
xor
divl
mov
mov
aaa
jl
ficompl
aad
mov
icebp
mov
out
jl
sar
pop
jle
jo
dec
nop
push
call
sub
cltd
ss
aad
nop
les
fcoms
cmp
lods
rorb
fs
nop
jno
scas
xor
out
imul
inc
out
or
je
fwait
outsb
shrb
dec
xor
iret
hlt
jo
aaa
out
mov
and
fiadds
xor
repz
sbb
add
xchg
jge
das
and
and
repz
or
push
lea
push
push
xlat
jno,pt
dec
outsl
inc
cmp
pop
and
in
mov
mov
pop
loop
jae
out
mov
cmpsl
xchg
add
stos
nop
sbb
fadds
popf
push
mov
leave
mov
xor
bound
sub
test
add
ljmp
cmp
fs
inc
mulps
xchg
jg
fildll
mov
push
cmpsl
add
stos
sti
sbb
scas
inc
or
xor
jno
fmul
rcrb
push
sub
sub
testb
insl
dec
sub
mov
shlb
push
pop
shlb
mov
mov
repz
arpl
movsl
sub
cli
dec
pushf
push
and
inc
das
lea
mov
das
test
jl
popa
in
pop
dec
bound
mov
cmc
and
xor
mov
andb
cld
jo
add
vmread
adc
mov
outsl
mov
or
test
mov
arpl
int3
sub
lret
mov
arpl
outsl
lds
orb
fiadds
dec
pop
push
jge
test
addr16
jnp
sub
mov
inc
sti
js
in
cmp
imul
pop
jae
lret
sbb
sbb
mov
mov
pop
enter
fstpt
iret
insl
cmpsl
pop
in
out
mov
mov
mov
sbb
jmp
dec
lfs
js
cmpsl
pop
dec
jmp
mov
rcrl
inc
inc
sbb
cltd
cmp
lret
repnz
out
adc
dec
daa
push
pusha
mov
dec
out
cmpsl
mov
xchg
ret
in
hlt
mov
jae
sbb
add
mov
out
mov
jo
ret
bound
iret
dec
call
and
mov
das
sub
negl
xor
mov
xchg
outsl
push
push
int
jg
es
adc
loopne
push
iret
xor
sbb
sbb
aam
and
out
dec
shl
in
xlat
xlat
and
or
test
sahf
xchg
sbb
mov
aad
add
xchg
loope
insb
int
mov
scas
add
push
inc
inc
adc
movsb
lahf
lcall
shrb
cld
cmpsb
xchg
mov
mov
mov
and
fsubl
das
stc
nop
xchg
mov
icebp
inc
xor
fucom
mov
stc
and
rorl
lea
adc
test
adc
pop
call
out
sbb
push
sub
inc
adc
shlb
sbb
fxch
mov
mov
xchg
insl
and
xchg
js
inc
jecxz,pn
icebp
inc
lods
sarb
popa
mov
or
mov
adc
das
add
lods
imul
dec
popa
out
pop
push
pop
inc
icebp
mov
mov
mov
sarl
xor
cmp
jb
add
out
sbb
test
pop
into
cmp
ret
ljmp
sbb
mov
sbb
or
add
lods
mov
dec
mov
cmpsl
movsb
loope,pn
imul
insb
sbbb
flds
xchg
pushf
xchg
push
pop
mov
mov
ficomps
mov
fnstcw
lock
cmp
sarb
ljmp
lahf
out
add
mov
popa
out
insb
popf
movsb
mov
imul
popa
in
adcb
test
test
pop
lods
sbb
inc
pop
popf
pop
xlat
adc
nop
push
sbb
adcl
adc
jne
pop
mov
aad
push
inc
lods
clc
jo
sbb
jle
dec
mov
ret
xor
mov
stos
dec
jo
add
enter
or
in
js
test
sbb
and
pusha
pop
shll
mov
mov
in
sub
pop
push
fiaddl
add
fstps
xchg
and
sub
cmp
pop
mov
scas
dec
push
inc
inc
daa
push
xor
xorb
or
and
js
jl
xchg
test
pop
int
lods
ljmp
pop
je
jg
paddusb
cli
cli
sbb
jnp
mov
out
add
adc
cli
add
mov
xchg
jmp
testl
mov
fisubrl
sub
icebp
fisttpll
dec
jg
inc
popa
sbb
jae
es
jmp
in
ss
xchg
mov
popa
test
or
mov
daa
in
sbb
test
popl
pop
cmc
shlb
xchg
push
xchg
xchg
iret
movsb
cmp
mov
popa
push
or
arpl
cltd
or
dec
test
pusha
add
mov
imul
bound
into
mov
aas
fidivs
push
pushw
sbb
pop
xchg
sbb
or
lock
mov
add
jg
xchg
fdivrs
mov
dec
ja
pop
andb
sub
cmp
and
shrl
stos
nop
pushf
lea
fs
lds
jb
aad
stos
cmc
push
mov
pop
inc
jbe
and
or
lods
pop
mov
inc
xlat
cld
mov
add
mov
int
xchg
test
imul
add
xor
mov
jne
pop
insb
cmp
jb
loope
push
adc
mov
cld
lret
ja
bound
cmpsl
ds
cmp
push
cmpsb
inc
insl
xchg
aam
stc
sub
xchg
icebp
and
test
inc
cmc
imul
mov
xchg
xchg
dec
dec
and
mov
ja
dec
add
imul
icebp
adc
cli
test
ret
stos
dec
cld
mov
pop
mov
pop
into
sbb
cmp
mov
adc
jg
fimull
test
cltd
jae
je
lock
cltd
clc
lock
sub
je
or
mov
loopne
push
mov
es
bound
push
shrb
sbb
out
jne
mov
add
mov
pop
xchg
mov
loopne
divb
dec
rorb
ss
inc
mov
jo
repnz
mov
jb
or
push
add
xchg
scas
das
xchg
imul
js
push
sbb
lds
adc
addr16
hlt
xor
shlb
mov
mov
lds
scas
inc
addr16
xchg
mov
mov
cli
lret
xchg
dec
decb
sub
cmp
inc
sarl
pushf
sub
adc
stos
jmp
mov
push
push
jno
cmc
push
push
out
xchg
push
mov
xor
inc
daa
shl
and
popf
imul
push
cli
mov
arpl
xor
mov
push
push
cmp
inc
mov
push
movsb
cmpl
xchg
pop
jl
pop
xchg
or
std
mov
aas
lret
sub
popa
ja
sti
xchg
repnz
lods
and
dec
movsl
or
imull
xlat
fnsave
xor
sub
adc
js
cmp
fcomps
push
mov
or
pop
jge
sbb
in
xor
loop
int3
mov
rorl
in
xor
scas
cltd
mov
sbb
and
cmpsb
cmc
mov
cli
push
stos
and
add
mov
loop
test
mov
and
int
cmpl
jmp
or
fsub
lahf
mov
nop
inc
xor
xchg
in
mov
dec
nop
mov
sbb
pop
cmpl
out
lds
mov
arpl
out
jne
stos
mov
neg
mov
in
repz
imul
mov
mov
mov
into
enter
sahf
sub
push
cli
shll
cmpsl
mov
in
shrl
xor
popf
sub
jb
xor
adc
mov
cli
inc
jp
lret
cmpsl
in
repz
test
sub
sub
sahf
xor
jno
leave
add
shrl
js
je
inc
mov
or
icebp
xchg
dec
inc
mov
mov
add
adc
fdivp
test
push
inc
and
adc
rcr
pop
in
or
mov
out
xchg
movsb
fwait
add
mov
dec
add
sbb
push
out
xor
rcl
ret
out
push
aam
out
testb
xchg
fstl
dec
lds
xchg
int3
push
test
dec
cltd
repz
pop
add
adc
lcall
xchg
leave
cli
cld
and
cmp
cld
or
add
je
jnp
sar
stos
mov
and
add
loope
add
fists
jp
sbb
nop
mov
push
int3
dec
pop
int3
pushf
arpl
sbb
test
gs
test
in
leave
pop
push
cmp
jne
and
lock
add
xchg
mov
xchg
sub
mov
iret
inc
mov
ret
fnstcw
xor
cmpsb
pop
int
rorl
iret
mov
push
mov
adc
push
das
out
test
lahf
mov
mov
cmp
ja
lods
cs
hlt
stos
push
inc
out
aas
out
push
into
inc
mov
xchg
pop
and
or
fs
adc
lods
push
xchg
out
xor
sub
dec
push
movl
jp
or
adc
fwait
call
xchg
add
loop
jg
ljmp
jo
fstps
and
mov
dec
out
movsl
inc
popf
jmp
sti
int
cli
inc
adc
sub
jl
scas
xor
ss
mov
xchg
mov
pop
push
std
test
and
ret
jb
pop
push
cmpsl
pop
into
insl
fmul
xor
mov
leave
jge
cmpl
loop
xchg
pop
pop
cmp
roll
cmp
mov
cmp
dec
xchg
aaa
ss
xchg
imul
out
cwtl
mov
inc
inc
loope
and
ljmp
imul
repz
in
push
adc
aam
iret
push
dec
add
xchg
xor
ljmp
sarb
adc
and
daa
addr16
push
movsl
xchg
cmp
shrl
aam
inc
push
xor
adc
cmpsb
fisubrl
jns
stos
or
out
push
mov
loope
mov
sbb
stc
mov
jne
mov
rorb
inc
cmp
sbb
push
sti
fistps
in
lds
test
cs
loope
in
inc
in
test
insl
div
push
or
lea
mov
cmp
pushf
inc
stos
push
outsb
push
dec
addl
cmp
ror
sub
jmp
xchg
xchg
js
dec
fsubrl
loopne
inc
adc
cmp
clc
lea
cs
pop
fcmovnbe
pop
xchg
mov
rorb
inc
lahf
jp
xor
xchg
push
in
mov
dec
into
mov
je
mov
dec
inc
arpl
stos
in
xchg
fadds
testb
mov
cmp
std
sbb
int3
push
fdivs
jae
leave
ds
enter
repz
faddl
loope
or
or
mov
dec
push
cmpl
cltd
out
gs
sbb
xor
add
add
xchg
or
stos
push
and
fs
test
flds
movsb
xor
xchg
sub
push
jb
aad
mov
int3
dec
pop
jbe
bound
pop
inc
sbbl
dec
mov
sarl
sbb
leave
sahf
bound
popf
adc
inc
pop
and
pop
imul
inc
jp
mov
es
and
pop
xor
mov
aam
mov
xchg
adc
push
inc
mov
cmp
fstpt
push
xchg
push
mov
and
lahf
adc
xchg
adc
test
xor
xlat
icebp
jmp
imul
aad
imul
bound
mov
int3
mov
inc
je
decb
scas
pause
xor
mov
scas
test
add
jmp
fisttpl
je
adc
aam
cld
out
leave
je
jmp
push
sub
rol
jl
cmp
lret
dec
dec
sbb
je
mov
xchg
lahf
fwait
inc
lea
mov
mov
movsb
push
out
out
repnz
mov
jecxz
adc
push
cli
pop
jmp
mov
xchg
mov
dec
xor
data16
xchg
pop
pop
iret
xchg
ret
es
sub
dec
daa
cmc
movsb
adc
jo
sub
test
shlb
xor
push
mov
or
sub
scas
addr16
testw
testb
test
xor
dec
sarl
add
nop
cltd
ds
pop
push
sub
out
pop
jne
push
ret
bound
xor
cli
call
jnp
push
and
jl
cs
testb
popf
hlt
adc
xor
pop
fisubs
push
repnz
ror
inc
negb
or
data16
cmp
jl
lcall
sub
arpl
or
lret
push
data16
rcll
addr16
in
sbb
jnp
add
push
or
sub
jge
pushf
mov
sub
fcoms
pop
sbb
pop
popf
cmp
loop
dec
mov
inc
mov
fcmovne
popf
sub
ss
lret
jp
clc
imul
ret
add
adc
adc
lods
fwait
gs
neg
sbb
filds
sub
out
icebp
sbb
mov
movsl
jno
je
rcrl
mov
mov
xchg
mov
out
mov
jb
jnp
cmovl
add
xchg
xchg
sub
cmp
loopne
or
mov
sub
mov
loopne
dec
mov
push
leave
popa
loope
lahf
ss
shlb
cmp
jno
cmp
xchg
in
xor
scas
lcall
cld
psadbw
adc
push
imul
negl
adc
gs
inc
and
add
xor
adc
or
sbb
mov
faddl
lcall
push
ret
mov
xor
xchg
mov
pop
out
jle
stos
dec
push
mov
cmp
outsb
out
enter
jbe
sahf
jl
and
fidivrs
pop
std
outsb
mov
cli
cltd
int3
adc
jp
dec
pop
push
cmpsb
fistl
test
clc
push
lret
add
adc
adcl
dec
int3
mov
mov
rolb
sbb
lea
lcall
cmp
fimuls
cmp
in
stos
jnp
mov
push
popa
cmp
mov
pusha
loopne
mov
dec
aas
repz
xchg
jl
fldt
mov
adc
test
es
shlb
jo
mov
cmpsl
xchg
add
adc
or
sub
fucomi
xchg
stos
add
inc
pop
ds
cmp
and
scas
jp
jle
mov
in
inc
pop
push
outsl
jmp
inc
repz
mov
xor
sti
push
std
or
sbb
daa
pop
movsl
inc
sub
xor
in
jge
pop
shr
pop
add
imul
lock
xor
pop
insb
mov
sub
and
cmp
sub
incl
cmp
pusha
sub
in
xchg
xor
pop
pop
mov
push
je
pop
out
pop
mov
lea
mov
mov
push
mov
es
lds
fwait
adc
mov
ds
rorl
mov
movsl
or
fnstsw
sbb
in
xchg
fadds
ficomps
xor
int3
roll
dec
outsl
or
stc
aaa
or
mov
mov
dec
int3
out
shll
aad
rol
gs
aaa
nop
insb
rolb
adc
lret
sub
sub
scas
rcrl
pop
cwtl
cmp
adc
rcrl
and
pop
imul
les
xchg
test
push
lret
sub
pop
movsl
pop
fisttpl
add
leave
loope
xor
mov
mov
push
in
icebp
mov
fucomp
add
popaw
daa
dec
aas
jae
or
cmpsl
in
mov
push
bound
out
into
movsl
mov
lods
outsl
cmpsl
lds
pop
je
movsb
es
xor
int
add
testb
jle
sub
ret
loope
scas
insb
mov
es
out
sti
mov
movsb
dec
ret
mov
ret
sbb
cmpsl
repz
in
sbb
jmp
loope
mov
mov
or
sbb
arpl
fs
std
pop
push
sub
das
imul
inc
dec
orl
divb
push
shlb
ds
jb
jmp
aam
jmp
xchg
negb
in
sbb
std
jb
push
flds
out
inc
out
frstor
divl
push
aaa
add
insb
aaa
into
mov
cmp
in
cwtl
adc
bound
push
or
pause
sarl
sbb
cli
pop
fistpl
xor
sarb
xorb
cwtl
cmp
cmpsl
aam
push
insb
aaa
shrb
push
mov
cmpb
xchg
mov
test
adc
out
ret
add
add
xchg
mov
or
loopne
dec
adcb
arpl
call
push
xchg
ss
orb
fcompl
pop
push
dec
push
call
add
add
in
std
or
dec
jnp
xchg
mov
aad
inc
mov
mov
push
out
and
lret
sub
sbb
dec
push
test
cld
les
pop
push
hlt
and
xchg
pop
jge
jp
outsl
fsubr
pop
push
test
std
mov
mov
adc
inc
mov
int3
mov
ja
in
andb
and
push
lret
les
jbe
andb
jecxz
into
and
xchg
in
ret
mov
adc
dec
push
pop
shll
mov
loop
dec
mov
mov
push
jge
or
mov
jge
mov
add
mov
je
inc
xor
jmp
out
rcr
inc
or
and
aam
and
popa
fstp
out
stc
mov
inc
mov
sbb
pop
and
add
xchg
sbb
push
cli
pop
imul
bound
or
lods
push
pop
cmpsl
pop
pop
loopne
xor
movsl
and
sbb
cs
fnstcw
mov
enter
sbb
fldl
es
jno
jnp
xlat
inc
nop
mov
lods
push
adc
jnp
shl
icebp
idivl
push
shrb
push
sti
xchg
mov
add
iret
jbe
mov
inc
pop
or
push
jae
and
pushf
sahf
lock
adc
repnz
movsb
and
bound
js
xchg
lea
push
mov
lock
jp
mov
mov
lahf
or
jbe
fwait
dec
pop
inc
xor
rcrl
xchg
push
bound
ret
rcrb
adc
repnz
fisubs
popa
iret
lock
addr16
or
scas
movsb
sbb
lea
push
sbb
cltd
adc
dec
or
or
cmp
cmpl
mov
rclb
mov
insb
notb
push
mov
insb
cld
cmc
jbe
jl
popa
cmc
and
mov
popa
scas
loopne
pop
dec
arpl
and
cmc
fidivrs
jmp
lods
stos
lret
jg
outsb
aad
pop
pop
sbb
add
hlt
mov
out
jl
cmc
dec
loope
dec
pop
into
js
nop
insl
cmp
in
and
mov
inc
cmpl
jnp
inc
push
mov
and
jo
push
pop
pop
popf
repnz
stc
inc
xor
add
fbstp
lret
jbe
mov
cmc
and
pushf
mov
push
mov
iret
sti
cld
xchg
je
sub
and
mov
mov
adc
into
pop
inc
or
mov
out
jnp,pn
push
xlat
ljmp
out
cltd
pushf
inc
or
in
xchg
xchg
mov
sub
inc
pop
cmp
gs
push
pop
cmp
xchg
pop
jecxz
fcmovne
stos
mov
xor
or
or
xorb
movsl
push
ret
mov
inc
addr16
push
jp
push
dec
sbb
shll
std
das
daa
iret
xlat
int3
fcompl
or
mov
lock
mov
shll
stc
sbb
bound
lock
dec
mov
push
or
ficoml
sbb
out
xorl
push
in
enter
shll
cs
scas
and
movsb
hlt
gs
push
lods
std
iret
adc
test
jg
dec
pop
add
pusha
xor
das
add
mov
ret
jae
or
and
stc
add
mov
stos
sbb
mov
dec
adc
xchg
rclb
into
dec
cli
xchg
bound
jge
jle
loope
lcall
mov
mov
pop
sub
gs
stos
jo
ret
add
push
fsubrp
cmp
notl
mov
mov
das
xchg
jne
mov
aaa
popf
jge
adc
mov
xchg
cltd
les
mov
adcb
lods
stos
push
ret
stc
lret
ret
sbb
loop
ja
push
int
sub
loopne
xor
xlat
pop
sub
mov
add
loope
sbb
movsl
xor
les
mov
jg,pt
mov
int3
int3
lea
sbb
cmp
icebp
test
fdivl
mov
cmc
lret
push
sbb
imul
push
addl
lret
xor
es
sub
negl
jne
sbbb
in
icebp
mov
lods
and
bound
ds
mov
lock
rcll
pop
shll
push
or
lcall
stos
enter
fmul
sbb
leave
lods
inc
jge
inc
fnstsw
cli
xchg
sahf
push
push
decb
std
adc
out
inc
out
mov
lahf
movsl
and
sbb
mov
enter
push
xchg
and
pop
lock
ljmp
ds
icebp
mov
mov
out
ret
sbb
jmp
mov
adcl
adc
ja
add
push
push
std
lds
or
jl
jp
sub
jmp
test
mov
xchg
fstpl
loopne
cs
mov
adc
push
idiv
repz
cmpsb
sub
aad
push
or
mov
push
dec
lret
test
dec
es
cmp
jmp
mov
lea
int3
into
jo
aad
push
ret
pop
dec
push
shrl
push
xchg
lret
xchg
xchg
inc
dec
stc
xor
outsb
xor
loopne
xchg
cmp
sub
xor
int
add
and
jae
mov
xor
jne
and
push
repz
popa
add
cltd
sbb
pop
pop
jne
xchg
push
inc
dec
add
or
adcb
testl
sarb
xchg
pop
or
lds
sbb
mov
and
dec
dec
arpl
mov
fcmovu
pushf
shrl
mov
and
inc
ja
loope
call
aam
into
repz
jbe
out
mov
fcoml
orps
dec
jge
clc
ret
xor
idivb
inc
mov
pusha
scas
ljmp
lcall
pop
add
cmp
and
pop
dec
arpl
loope
les
das
outsl
mov
xor
sbb
shrl
fmul
add
inc
sub
jmp
mov
dec
repnz
ljmp
popa
inc
dec
push
mov
call
jbe
pop
insb
stos
push
or
add
sbb
xchg
jnp
daa
mov
or
xor
and
or
stos
pop
mov
data16
lods
test
nop
movsb
repz
je
imul
sub
add
inc
cmpl
pop
inc
data16
into
xor
leave
fimuls
mov
rorb
add
mov
mov
data16
imul
subl
ds
mov
jns
hlt
adc
mov
sbb
ret
data16
jae
in
outsb
popa
add
call
push
mov
adc
cmp
adc
pop
push
sub
aad
jge
outsb
xor
push
dec
cli
mov
sbb
pop
ret
xchg
mov
and
outsl
sti
xchg
push
adc
cmc
xchg
lret
add
das
sar
mov
ret
dec
test
sub
and
sub
xor
popf
shlb
add
push
and
lods
adc
test
push
xchg
sahf
pop
inc
mov
outsl
test
jae
fs
mov
sub
xchg
cmc
mov
aaa
push
int3
add
jns
push
xchg
jmp
es
jmp
sub
xor
jne
mov
jns
xchg
lds
fwait
pop
lret
lcall
and
loop
loope
cld
jl
mov
fldcw
xchg
mov
pushl
mov
pop
jmp
lcall
fldz
in
in
lea
push
cmpb
cmovnp
lahf
add
jmp
pusha
xchg
adc
push
fmulp
jbe
sub
inc
dec
and
dec
enter
into
loope
fnstcw
mov
sti
push
cmp
bnd
incb
repnz
fisttpll
mov
bound
cmp
mov
jo
pop
aas
mov
jecxz
or
loope
jl
rol
sbb
mov
scas
or
ficompl
mov
mull
in
test
sbb
xchg
ds
xor
pop
add
mov
push
je
cmp
scas
jno
dec
inc
popf
movsb
dec
mov
push
mov
mov
sub
retw
shlb
mov
jo
movsl
loopne
fmuls
test
insb
lock
insl
loopne
xor
lret
in
std
sbb
mov
pop
ret
dec
cmp
imul
in
mov
fnstenv
sbb
dec
dec
mov
inc
xor
scas
idiv
add
stos
cmpsl
repnz
into
inc
cmp
jl
subps
xchg
jecxz
in
or
dec
xchg
cli
fbld
or
xchg
cmp
mov
mov
adc
test
cmc
inc
inc
add
aaa
push
addb
xor
in
push
add
mov
test
adc
mov
mov
mov
adc
push
mov
xchg
cmp
mov
xchg
idivl
push
inc
fnstsw
or
jmp
xor
fldt
lcall
sub
mov
aaa
sbb
popf
mov
adc
stc
roll
and
in
or
mov
mov
lret
out
rcrb
fstpt
test
xchg
es
xor
es
jnp
rcrb
mov
sub
xchg
push
jae
insl
adc
popl
and
gs
pop
cmpb
pop
mov
mov
inc
rorl
dec
cmp
and
mov
push
and
loop
fsubl
mov
pushf
mov
fcomps
out
shll
test
cmc
push
pop
jmp
scas
mov
jb
stos
data16
xchg
jo
pop
cs
cli
lret
mov
push
push
push
iret
imul
mov
imul
jp
or
mov
data16
test
movl
cmp
mov
add
shl
mov
pop
bound
mov
bound
jbe
fistpl
je
stos
xlat
adc
or
loopne
jae
arpl
sbb
sbb
jns
dec
mov
int3
jmp
enter
arpl
dec
pop
js
sarl
mov
in
mov
outsb
lock
mov
xchg
xorb
flds
test
jle
sbb
mov
sbb
mov
in
sbb
dec
das
shlb
sbb
inc
mov
adc
outsl
movsb
sub
lret
insb
cmp
aas
cmp
push
mov
and
sub
in
push
stos
mov
pop
aaa
xor
lret
not
fiadds
cmp
pop
imul
sbb
inc
jle
fisubrs
dec
iret
test
add
cld
pop
mov
mov
sahf
lret
mov
xor
and
ficoms
les
shll
dec
into
push
sub
int
movsl
dec
nop
popf
repnz
movsl
pop
jecxz
aad
gs
out
shr
adc
and
mov
pop
testl
aam
mov
lahf
lret
dec
mov
int
negw
push
lret
sub
push
mov
pop
inc
imul
movsb
imul
loopne
nop
fwait
out
jp
sbb
fwait
jb
mov
rcrl
repnz
cmp
dec
pop
test
enter
movb
push
mov
sub
mov
mov
xlat
stos
dec
shlb
xlat
psubw
jg
pop
lret
pushf
cmp
scas
daa
or
int
cmc
nop
insb
repnz
sahf
sub
das
je
mov
and
mov
pop
xchg
mov
aad
cltd
daa
jns
inc
xor
pop
push
add
mov
test
ret
dec
adc
and
loopne
cmp
adc
cmp
xchg
or
xorb
jl
dec
cmc
sahf
or
lcall
lret
int
ss
roll
sub
aad
push
and
clc
negl
add
pop
pop
add
mov
ds
clc
xor
scas
jo
adc
add
push
xorl
loope
jge
mov
les
pop
push
stos
les
xchg
inc
stos
sahf
cmc
pop
pop
inc
int
or
repz
sub
pop
mov
clc
cmp
mov
sti
insl
insl
sub
cltd
popl
leave
outsl
stos
mov
xor
loope
add
imul
inc
adc
push
rclb
loop
cmp
push
cwtl
mov
or
in
ja
inc
or
xchg
push
sbb
mov
jbe
mov
mov
call
xchg
daa
push
pop
pmaddwd
push
rorb
or
push
xor
pop
pop
es
inc
mov
jno
pop
pop
repnz
and
dec
jmp
outsb
push
jg
mov
pop
adc
out
das
sbb
mov
imul
iret
cmp
clc
je
popa
adc
decl
push
mov
daa
movsb
sti
adc
mov
pop
int
mov
rol
rorb
or
or
or
lods
std
inc
cmovnp
mov
mov
inc
mov
arpl
sub
sbb
das
sahf
jno
test
mov
out
imul
xchg
pop
test
mov
xchg
fs
sbb
fiaddl
xchg
in
mov
adc
dec
mov
mov
jno
sahf
aaa
sub
pop
daa
cmp
jg
cli
enter
cli
fisttps
aam
jecxz
fcmove
addr16
xor
out
jns
jnp
flds
and
enter
pop
xor
notb
sbb
aam
pushf
push
sbb
mov
dec
outsl
inc
sbb
stos
stos
xchg
mov
data16
sbb
arpl
xchg
jle
ljmp
pop
inc
xchg
add
xor
pop
cmp
sub
pop
push
pop
cmp
repnz
aad
push
sub
or
add
adc
pop
sub
jle
pop
lods
pop
jg
dec
ret
mov
enter
rolb
jl
aas
ror
rcl
inc
or
mov
jle
pop
imul
pop
pushf
into
movsl
inc
cmp
stos
inc
adc
pop
std
in
repnz
add
pop
sar
cld
out
lock
das
dec
pop
xchg
into
std
loop
sti
lods
push
mov
adc
mov
das
push
scas
jp
icebp
enter
inc
lahf
lret
stc
pop
add
inc
dec
int3
outsb
scas
into
inc
in
mov
mov
rolb
movsb
iret
jl
pushl
jecxz
xchg
ja
mov
inc
cmp
xlat
adc
push
jnp
mov
out
mov
lods
xchg
fwait
inc
xlat
fstpt
fwait
dec
mov
xor
fwait
xchg
push
sbb
mov
scas
js
cmpsl
or
repz
lods
popf
mov
mov
jg
aas
mov
and
in
mov
pop
dec
xchg
adcl
sbb
or
adc
or
in
lds
popf
inc
cld
lret
mov
aaa
push
pop
pop
xor
jp
mov
mov
call
in
orb
out
xor
push
cmpsb
jno
inc
cmpsl
repz
pushf
dec
shr
pop
outsl
aad
push
dec
cmp
rol
mov
fldl
or
cmp
aad
dec
leave
pop
adc
int
scas
mov
and
gs
out
dec
adc
ss
into
ret
scas
pop
int
rcrl
iret
pop
mov
aaa
and
adc
test
jns
add
fists
xor
or
push
icebp
xchg
sub
mov
les
cmp
dec
push
add
shrl
xor
jno
pop
push
mov
jno
stos
mov
out
cli
cli
in
std
notl
ds
dec
ja
insl
cmp
pop
vpackuswb
test
dec
scas
idivl
roll
stos
jae
jbe
inc
fcoms
dec
and
push
les
and
xor
out
daa
in
jg
adcb
ja
mov
inc
mov
xchg
in
popf
int3
xchg
ds
inc
sbb
fs
push
popf
push
loopne
inc
lods
jnp
je
int3
stos
aaa
icebp
or
insb
push
cmp
incb
cmp
pop
xlat
mov
mov
clc
fldt
aad
adc
jb
sbb
lahf
repz
and
dec
insb
mov
jecxz
stos
scas
or
push
and
sbb
jmp
push
mov
mov
mov
xchg
jg
nop
dec
cmc
fwait
bound
pop
sub
rcrb
push
or
pop
mov
cmp
andb
pop
push
fnsave
mul
fnstenv
mov
out
fiadds
jae
lahf
adc
xor
or
rcll
jmp
inc
fisttpll
scas
jnp
jns
and
push
in
mov
addr16
incb
fcoms
and
cmpsb
pop
dec
pop
xor
xchg
repz
add
push
push
test
sbb
mov
add
pop
xchg
xchg
pop
mov
das
pop
lcall
loop
jno
in
imul
gs
out
and
jp
xor
mov
pop
cmp
bound
or
fmull
push
out
sub
insb
push
fcmovnu
out
inc
pop
rcrb
adc
jge
shll
xchg
dec
inc
out
cwtl
mulb
dec
ss
xlat
insl
cwtl
xchg
lods
std
sbb
pop
push
xor
pop
in
out
xchg
add
pop
xor
jnp
cmp
lret
inc
in
mov
jl
fistpll
and
nop
lcall
sbb
pop
fucom
dec
adc
cmp
les
xor
testl
into
out
shlb
dec
lods
pop
jns
icebp
lds
cmpsb
lcall
pop
cli
aaa
add
xor
dec
fmul
inc
cld
sti
dec
cmpsl
in
cwtl
mov
scas
test
out
jae
ss
mov
sbb
ret
sub
hlt
add
addr16
sbb
imul
mul
pushf
out
notb
mov
dec
mov
fisttpll
in
mov
popf
lods
fdivrs
movsl
in
xchg
sbb
subb
pop
adc
jne
mov
imul
enter
mov
fisubrl
xchg
into
stos
xor
jno
shlb
jo
jne
mov
fsubrl
push
or
pushf
jne
sbb
ret
xchg
lret
mov
fistpll
imul
inc
and
outsb
sub
jle
mov
xchg
aaa
cmp
iret
mov
int3
in
out
and
add
inc
and
jecxz
dec
jns
xchg
or
cmpsl
push
arpl
mov
pushf
inc
add
jnp
cltd
notb
sub
mov
scas
adcl
sti
fsubs
mov
xchg
cltd
fcmovnb
ja
mov
lahf
test
dec
mov
dec
repnz
jo
mov
cli
push
cmp
das
gs
mov
fnstsw
movsl
and
push
mov
jne
js
mov
mov
pop
lcall
cmpsb
addr16
or
scas
jns
addb
into
nop
jge
sbb
push
cld
sbb
jb
and
hlt
sbb
enter
in
dec
mov
out
std
and
fldt
mov
imul
push
ds
lcall
jg
and
sti
xchg
mov
ret
lock
sbb
sub
dec
dec
and
repz
icebp
jecxz
mov
aam
or
add
mov
sti
popa
push
sbb
inc
cmc
mov
jo
into
push
pop
sbb
daa
sbb
pushf
clc
ss
imul
aam
inc
stc
xor
xor
push
fxch
xchg
and
test
sbb
mov
xchg
insb
cmp
fs
shr
sub
ja
adc
push
rolb
les
sbb
lock
dec
push
pushf
repz
mov
dec
add
and
dec
inc
lods
testb
repz
xchg
pop
sbb
pop
xchg
stos
xlat
jno
and
add
call
ja
lret
imul
push
xchg
fmul
inc
dec
adc
out
mov
test
mov
pop
ffree
xchg
scas
inc
sbb
insb
add
rolb
insl
jnp
xor
push
inc
push
and
imul
sub
gs
aam
test
outsb
outsl
pop
sbb
pop
popf
xchg
dec
adc
testb
lcall
jp
cmp
cmp
fcoms
lock
ja
in
test
cmp
pusha
inc
adc
rclb
imul
push
or
addr16
mov
outsb
je
sub
mov
sbb
sbb
les
cltd
lea
test
dec
repz
sbb
test
lret
sahf
push
pop
push
mov
or
lods
ret
cmpsb
and
cmc
inc
sub
scas
mov
je
lods
idivl
add
jne
lods
sti
mov
dec
mov
xlat
mov
bnd
ja
dec
add
mov
pop
cmpsb
scas
dec
subb
mov
fdivl
add
jg
lahf
aaa
push
scas
orl
sbb
outsb
sub
dec
sbb
fsts
cli
jl
dec
jno
mov
pop
loope
sub
rol
dec
lcall
jp
gs
xor
inc
inc
stc
mov
flds
jno
out
mov
jp
jg
push
dec
dec
icebp
test
xchg
adc
clc
js
aaa
add
lret
push
xlat
in
or
xchg
jae
stos
daa
cmpsl
repnz
data16
jmp
pop
push
inc
or
cmp
je
cmp
mov
and
xor
push
push
out
sbb
and
sbb
decb
cmpsl
mov
cli
add
mov
clc
movsb
xorb
test
jo
shld
and
insl
mov
iret
mov
movsb
jbe
call
insl
and
add
aam
cmp
testl
jo
insb
adc
mov
arpl
or
fidivl
sbb
adcl
fildll
loop
sub
cmc
xchg
mov
test
mov
xlat
inc
inc
out
mov
lcall
mov
jae
fidivrl
mov
push
pop
and
jl
push
add
inc
push
dec
xchg
and
cmp
jmp
sub
jb
xchg
sub
mov
scas
lea
pusha
pop
packssdw
subl
enter
inc
das
cmpsb
fistps
mov
fimuls
daa
jno
adc
ja
sub
je
inc
flds
jle
mov
mov
ss
sub
rcrb
cmpsb
push
sbb
leave
cmpsb
arpl
inc
icebp
inc
jge
mov
xchg
cli
aad
aas
sbb
xchg
pop
pop
btr
fwait
push
das
jae
jecxz
insl
nop
mov
push
das
in
aaa
xchg
daa
inc
movsb
arpl
test
enter
pop
adc
stos
adc
movsl
xchg
inc
iret
movsb
shlb
xor
repnz
les
std
arpl
rorb
mov
push
add
push
dec
xor
inc
mov
xchg
ds
loopne
mov
mov
lret
out
fsubrs
sub
imul
jne
outsb
mov
ret
popf
sbb
push
cmc
xchg
mov
lret
push
cmp
pusha
jnp
popa
test
loop
cmp
fists
add
lods
adc
icebp
outsl
jo
and
inc
daa
or
push
jnp
inc
lods
add
pop
inc
lock
in
mov
push
fdivs
pop
push
push
scas
jmp
sti
fs
cmpsb
fidivs
push
fucom
mov
lret
mov
jl
and
pop
rcll
mov
sub
rcrb
sub
adc
mov
dec
mov
dec
arpl
je
mov
outsb
rcrl
mov
mov
mov
or
pop
jnp
iret
add
insb
out
pop
shlb
out
pop
dec
xlat
xchg
xchg
arpl
mov
cvtdq2ps
int3
inc
mov
nop
out
fwait
out
sub
enter
jg
inc
push
inc
and
pop
jne
gs
inc
cmp
xlat
fists
mov
ss
jo
sbb
push
pop
sahf
cmp
mov
pop
les
iret
sbb
outsb
pop
and
add
aaa
dec
sub
lahf
aad
call
mov
jnp
push
out
dec
mov
sub
fs
push
loope
jne
pop
sub
xor
xor
lcall
adc
test
xchg
outsl
adc
in
mov
adc
xchg
mov
jle
fiaddl
adc
jl
inc
test
out
ljmp
fdivp
pop
add
scas
mov
cld
and
scas
mulb
or
sti
fcoms
push
inc
scas
cwtl
jne
push
lret
mov
adc
scas
mov
test
push
sub
push
gs
xchg
call
loop
sbb
jmp
or
jle
leave
add
je
dec
shl
sub
sahf
popf
andb
pop
adc
mov
push
pop
bound
xlat
push
adc
in
dec
push
fisubrs
sbb
add
xor
or
xchg
xchg
sahf
ret
sub
out
outsl
js
sub
inc
in
popf
lret
xchg
push
mov
mov
cld
or
jae
je
push
inc
push
notl
sbb
xchg
fwait
mov
dec
aam
icebp
daa
add
add
cwtl
decl
mov
ret
lods
cmpb
inc
imul
mov
cmovo
ds
cmc
enter
sbb
sub
int3
nop
jecxz
push
enter
popa
nop
jmp
dec
js
pop
loope
jno
ret
adc
inc
jbe
sbb
xchg
decb
dec
out
pop
sub
add
dec
shlb
loop
or
test
xor
std
loop
scas
lcall
adc
pop
mov
add
les
cmp
jbe
mov
sarl
pop
fists
shrl
jg
push
rol
loope
inc
iret
popf
jb
fstl
mov
shrb
or
sbb
outsb
icebp
sarb
in
xor
add
mov
aaa
mov
std
imul
pop
test
fiaddl
mov
imul
adc
jb
lahf
pop
pop
gs
call
shll
xchg
ss
xchg
add
mov
das
add
jle
stc
call
ja
ljmp
sbb
popa
movsb
lods
nop
adc
push
inc
int
add
sub
mov
cmp
xor
outsl
push
add
mov
pop
sarl
scas
lahf
xchg
jge
fs
jmp
inc
cltd
push
mov
ja
jno
cmpsl
scas
leave
outsb
repnz
cmc
add
xchg
push
cmp
cwtl
xor
jno
xlat
cli
cmp
add
les
ljmp
pop
jb
jbe
cld
inc
mov
leave
neg
push
pop
pop
gs
mov
shll
cld
cli
inc
adc
scas
into
jecxz
xor
sub
outsl
fisttpll
or
mov
mov
jecxz
mov
sub
stos
push
inc
dec
xchg
in
cld
xchg
inc
cs
insl
je
cmp
shrl
sbb
pop
cmp
popf
loop
xor
lods
jle
sub
or
push
fs
rcrb
jle
jle
mov
jmp
mov
add
jns
out
and
sub
es
xor
add
out
dec
fcmovnu
xor
in
inc
mov
jmp
mov
cmc
dec
rclb
xchg
fstpt
or
outsl
in
mov
adc
xchg
sbb
out
mov
jge
popf
mov
xchg
adc
movsl
cwtl
ljmp
into
adc
or
lods
iret
cmp
mov
xchg
lret
or
adc
push
inc
or
adc
lret
cmp
popl
out
das
or
mov
jnp
cmpsl
negb
mov
icebp
sbb
adc
dec
dec
mov
loopne
clc
push
adc
xchg
pop
xchg
jnp
aaa
loopne
in
and
rorb
pop
ds
push
xor
adc
icebp
xchg
cmp
push
in
mov
scas
shlb
cwtl
xor
rcr
push
hlt
xor
pop
cmpsb
shrl
add
push
xchg
jge
aam
pop
ret
pop
sbb
jecxz
add
or
stos
mov
mov
roll
push
mov
xchg
add
je
outsb
inc
stos
push
xor
add
outsl
pop
fadd
stos
mov
add
mov
dec
cmpl
add
str
iret
int3
xchg
sarb
sub
clc
push
inc
jmp
and
xor
ret
xchg
xchg
xor
or
dec
or
cmp
rcll
mov
mov
xchg
add
sbb
lcall
add
sbb
mov
add
push
jnp
popa
ss
cmp
cmp
mov
cmc
insb
cmp
hlt
test
pop
sub
mov
cwtl
adc
push
dec
xchg
bound
xchg
sub
jecxz
inc
lahf
lret
mov
outsb
leave
mov
mov
vpunpckhdq
and
sbb
or
std
cltd
imul
aaa
or
xchg
orl
ljmp
cmp
lret
lds
add
lea
bound
in
or
pop
cmp
fmul
push
dec
ret
mov
or
jp,pn
dec
xchg
push
jle
pop
mov
mov
dec
xlat
fstl
cli
addr16
fdivp
mov
cs
fcomp
sbb
or
aaa
fnsave
jl
fstpt
data16
repz
pusha
sbb
inc
rcrl
xor
inc
cli
xchg
dec
sbb
mov
add
lcall
mov
jbe
xor
dec
pop
jecxz
cmp
and
mov
jl
into
mov
mov
dec
or
sbb
push
jnp
sub
mov
adc
cmp
pop
add
pop
add
mov
les
jmp
data16
cmp
rcl
xchg
dec
cmpsl
cmp
jp
cmpsb
add
push
fisubl
jg
xchg
stos
outsl
xchg
sub
inc
ja
or
jae
jl
int
aaa
outsb
out
js
sahf
paddusb
xchg
sub
pop
jecxz
add
enter
mov
mov
push
addr16
std
or
ss
mov
cmc
push
jle
jns
lock
adc
pop
repnz
call
fnstcw
clc
and
adc
jle
inc
test
and
icebp
mulb
test
or
aam
out
cmp
repnz
xchg
pusha
jg
lods
addb
cmpsl
mov
cld
push
sbb
sahf
dec
test
cmpsb
fbstp
pop
outsl
repnz
nop
js
adc
push
mov
xlat
pop
add
mov
cld
in
pop
cwtl
jbe
lret
xor
outsb
and
cmpsb
es
cltd
sbb
dec
lock
pop
sbb
imul
mov
hlt
and
hlt
dec
sub
out
add
mov
out
cmp
subl
adc
fcmovnbe
cld
rolb
movsb
pop
sti
sub
push
xchg
push
test
pop
movsl
rolb
dec
ja
sbb
scas
xor
pop
pop
cltd
mov
lods
push
jne
jle
cmp
out
int3
jmp
mov
and
arpl
pop
ret
in
daa
bnd
shlb
jo
mov
adc
and
pop
hlt
push
cs
shll
mov
outsb
cmp
cld
dec
iret
push
xchg
dec
loop
notb
imul
mov
adc
mov
mov
push
pusha
jecxz
sarb
fbld
imul
sti
add
cmp
fdivl
fdecstp
push
xlat
mov
xchg
inc
add
daa
xchg
pop
negl
arpl
adc
cmpsb
das
mov
stc
jge
dec
push
aas
cmp
jnp
lcall
les
inc
fcomps
inc
lea
sub
int
push
jno
addr16
pop
or
add
scas
enter
scas
inc
fwait
and
push
cwtl
cmp
mov
lret
int3
sarl
sbb
xor
in
adc
pop
daa
jne
pop
es
sti
sbb
mov
out
insl
adc
dec
stos
pusha
inc
add
sub
shld
cltd
jne
pop
jb
adc
sub
cltd
adc
testb
pop
mov
xchg
ds
insb
je
sub
pop
xorl
add
in
std
stc
mov
xchg
lea
arpl
out
jo
push
sahf
and
cmp
cs
mov
movl
sbb
dec
xor
add
les
push
mov
test
mov
dec
into
or
inc
fsubrl
pop
cmpsl
mov
inc
popa
insb
sub
lcall
jbe
into
repnz
dec
insb
test
test
jp
loope
gs
lahf
jecxz
ret
or
adcb
orb
pop
lods
movsl
scas
in
jp
sar
into
dec
add
or
test
and
sarl
mov
arpl
fisubl
popw
mov
sbb
lods
test
scas
inc
mov
pop
scas
out
outsl
lods
add
inc
push
adc
inc
mov
inc
fsubr
popl
fildl
cmpsb
cmp
mov
arpl
scas
enter
mov
add
leave
daa
sbb
addr16
dec
into
push
outsl
inc
xlat
and
dec
cmp
out
stc
in
jge
jo
mov
xor
int3
stos
dec
cwtl
pop
xchg
ja
stos
call
mov
xchg
adc
pop
negl
data16
mov
push
fisttpll
lahf
loop
lcall
lret
cmp
xchg
inc
xlat
jmp
enter
in
sti
jbe
jecxz
lds
lods
lea
pop
in
ficomps
pop
shr
cmp
lock
push
icebp
push
dec
mov
pop
jno
imul
fs
xorl
fidivrs
add
and
in
sub
or
popf
or
mov
add
imul
and
jne
cli
push
leave
mov
xchg
loopne
fcomip
adc
adc
add
jb
push
addr16
scas
int
xchg
pop
inc
loop
jne
lret
out
or
add
mov
leave
test
dec
idiv
in
out
orb
jecxz
push
xchg
xchg
stc
xchg
push
add
add
or
enter
cmp
nop
dec
stos
lods
add
ja,pt
push
push
mov
fadd
ds
aaa
dec
sbb
ret
jns
insb
les
adc
mov
movsb
add
outsl
fs
xorl
mov
xor
and
nop
jecxz
xor
std
sub
fbstp
xchg
mov
cwtl
sarb
sub
ret
cmpsl
icebp
inc
jnp
mov
pusha
loope
pop
mov
sarl
scas
cmp
dec
rclb
mov
cltd
push
push
out
aam
mov
je
inc
fistps
pop
in
pop
ja
push
lods
sub
mov
mov
and
daa
jmp
stc
fistpl
divl
fwait
mov
das
loope
repz
cmp
sbbb
lret
out
popf
jl
inc
cld
xchg
cmp
daa
add
in
out
mov
pop
sbb
loop
scas
cwtl
out
xor
shr
dec
mov
bnd
gs
aas
dec
mov
scas
push
andl
ss
hlt
xchg
js
pop
mov
sahf
and
dec
inc
int
sbb
dec
daa
mov
mov
cli
inc
mov
cli
push
xchg
jmp
push
adc
jb
ss
js
cmp
pop
iret
xchg
cmp
and
push
dec
add
mov
sub
or
mov
lea
stc
movsl
jmp
inc
mov
mov
pop
jg
push
adc
ret
sub
adc
xchg
or
sbb
stos
and
fstpl
adc
cmp
xchg
cltd
inc
mov
stos
mov
in
loopne
fistpll
pop
sahf
push
dec
mov
fmuls
gs
inc
hlt
cmp
loope
stos
sbb
loopne
cmp
xor
jle
jbe
sub
cltd
icebp
mov
lahf
inc
ss
lock
je
jg
xchg
mov
inc
std
outsl
push
dec
push
xchg
xchg
bound
cmc
into
ds
leave
or
xor
mov
lods
sar
mov
pop
dec
mov
imul
jl
push
jbe
jae
or
xor
sbb
stos
mov
test
pusha
add
jl
xor
jnp
in
stos
fisubl
outsl
jns
bound
dec
call
and
or
subl
cmp
adc
sbb
jg
xchg
dec
mov
add
cmpsl
xor
push
pop
cld
cld
loope
dec
fs
stos
out
in
ret
sub
loopne
pop
daa
lahf
movsb
loopne
cld
mov
in
inc
mov
and
sub
dec
or
xchg
loope
push
fimull
loop
mov
inc
xor
pusha
inc
push
sbb
les
insb
mov
cmp
ret
popa
shrb
sub
shll
mov
push
sbb
in
xchg
loope
out
dec
dec
ds
das
pop
xchg
ficoms
sbb
inc
cmpsb
fisttps
mov
rorb
in
cmp
int3
test
xchg
mov
and
in
mov
dec
dec
cmp
pop
lcall
xor
popa
or
inc
outsl
insl
repnz
fldenv
into
int
add
dec
fisubrs
cbtw
sub
dec
in
fucomi
jbe
scas
sub
test
lods
jae
ds
push
imul
mov
lock
mov
es
test
xor
pop
imul
stos
cmp
aam
fstl
fxam
dec
test
mov
je
dec
jmp
jb
fimuls
cwtl
dec
loope
outsb
pop
jo
mull
pop
xor
inc
idivl
ja
xor
adc
sbb
jb
int3
imul
add
inc
xchg
push
push
mov
clc
sub
push
xlat
aas
lret
or
imul
mov
leave
or
pop
mov
xchg
andl
sti
cmp
test
push
xchg
jle
and
fwait
rorl
xchg
push
mull
enter
imul
pop
sbb
jge
xchg
inc
sub
push
mov
xchg
lea
mov
enter
and
int3
lock
shlb
inc
movsl
cltd
xor
jns
shll
sahf
fs
or
add
cmp
xor
pop
dec
aaa
mov
scas
or
into
jge
inc
pop
movl
arpl
adc
sub
push
ret
sbb
or
jmp
jb
jns
data16
jmp
mov
push
inc
cli
cmp
xchg
push
mov
test
stos
das
inc
mov
cmpl
shrl
ss
add
mov
dec
insb
mov
pusha
int3
imul
pop
stos
jbe
mov
inc
insl
sub
test
add
or
adc
pushl
mov
in
pusha
pop
xchg
fwait
jne
mov
lea
pop
jbe
push
out
push
mov
dec
out
sahf
push
cmp
cmc
loope
jp
cmc
sub
add
shll
ds
scas
cmpl
or
push
add
mov
jmp
push
adc
xor
sub
mov
mov
lcall
add
ficomps
lods
andl
sub
pop
push
or
aam
sbb
or
mov
icebp
xchg
mov
jbe
xchg
jbe
and
leave
mov
mov
fs
xor
add
mov
daa
adc
and
fadds
mov
dec
loopne
xchg
je
or
sbb
mov
mov
jl
cmp
ja
inc
aas
loope
jne
stos
add
sub
mov
mov
cmpsl
mov
clc
push
lret
mov
rorb
nop
es
dec
inc
in
jb
shr
pop
gs
cmp
xchg
add
mov
and
adc
insb
inc
sub
sub
and
imul
cmpsb
sahf
repnz
xchg
sbb
mov
dec
mov
repnz
mov
sub
shll
xchg
negl
pop
xchg
dec
inc
in
pusha
mov
inc
adc
lods
xlat
mov
out
shll
ret
mov
aad
loopne
jmp
loopne
lea
fstps
push
inc
sbb
mov
xchg
in
jo
adc
mov
sarb
icebp
and
cmp
dec
pop
mov
dec
sub
daa
mov
inc
dec
push
inc
cmp
adc
add
test
idivl
sub
or
mov
scas
stos
insb
fwait
std
cmovne
loopne
push
repnz
lcall
daa
scas
inc
addr16
mov
mov
fwait
clc
dec
jno
cmp
inc
jo
in
jae
push
insb
mov
ret
out
fidivrs
bound
mov
sub
pop
inc
jmp
stos
test
xchg
je
lds
lcall
adc
adc
popf
or
sbb
fnstenv
faddl
sahf
and
xor
xchg
or
xchg
jnp
and
xchg
sbb
jp,pt
imul
nop
xchg
dec
rcrb
jnp
or
daa
ja
pop
mov
push
out
pop
push
fldcw
popa
testb
and
sarb
push
out
stc
push
cmp
sbb
pop
popf
pusha
arpl
jmp
push
xor
notb
js
shll
cmp
or
push
sbb
mov
cmp
push
xchg
jns
add
lds
add
xor
jecxz
mov
iret
or
mov
sbb
or
push
xchg
dec
xlat
inc
adc
add
jae
int
lcall
and
xorl
jnp
mov
jle
fxch
cwtl
fists
mov
lahf
lods
call
fwait
lock
mov
adc
xor
inc
mov
dec
cmp
and
shl
aad
and
add
mov
adc
mov
xlat
and
jno
mov
movsb
or
test
pop
xor
jno
push
add
mov
mov
pop
mov
rcll
leave
es
push
aas
mov
mulb
push
inc
and
test
xchg
loopne
pop
xchg
jl
jmp
mov
mov
jg
push
sbb
sti
mov
xor
bound
or
into
inc
push
inc
sub
arpl
cmp
imul
ljmp
int3
adc
in
push
clc
outsl
mov
mov
ja
mov
loopne
adc
jmp
cmp
or
xorl
test
dec
pop
cmc
adc
imul
dec
cmp
lods
es
xor
js
adc
ljmp
sbb
out
pop
cmp
lds
addr16
cmpsl
lea
fsubrs
sarl
jp
sub
mov
int3
jns
or
movsb
mov
or
lds
fistps
cmp
jmp
rcll
sub
pop
cmc
out
imul
push
or
arpl
xchg
jbe
shl
pop
arpl
xlat
addr16
out
iret
call
hlt
pop
push
mov
mov
jmp
xchg
fsubrl
fistps
mov
mov
rorb
nop
test
mov
xor
aam
adc
add
sbb
popa
sub
add
in
add
push
push
insb
jl
add
lahf
mov
or
packssdw
cmp
xor
leave
lock
sub
sbb
adc
mov
inc
addl
cmp
out
popa
cwtl
fistl
dec
lock
hlt
rcll
fs
hlt
loope
mov
push
cwtl
jbe
outsb
push
addr16
jle
dec
test
mov
and
mov
or
fwait
mov
mov
fwait
addb
pop
mov
xchg
fnstsw
aaa
mov
push
mov
cld
mov
movsl
cmpsl
fbstp
mov
scas
dec
aas
push
mov
sbb
jno
mov
popf
jle
andb
adcl
jg
mov
ds
out
dec
fistl
and
mov
jl
push
xchg
pop
lcall
pop
xchg
and
or
outsb
adc
pop
test
cli
pop
adc
cmp
ret
inc
popa
push
je
push
mov
and
pop
repz
ljmp
stos
mov
andl
mov
outsl
lea
xor
hlt
mov
ret
int3
jns
mov
cmpsl
sbb
sarb
sbb
mov
jo
mov
in
cmpsb
ljmp
test
xchg
fcmovb
repnz
inc
testl
cld
and
pop
jb
xchg
add
inc
and
cmp
xorl
stc
jmp
adcl
pusha
stos
mov
movsb
xor
shl
scas
sbb
jg
enter
adc
pop
in
mov
outsb
loopne
cmpsb
inc
xchg
lods
popa
dec
stos
fisubl
scas
int3
mov
pop
bound
ss
in
push
int3
mov
mov
pop
push
jno
jb
movsl
jle
aam
push
cmp
add
jg
or
xchg
mov
shl
inc
movsl
sbb
mov
push
xchg
xor
sub
xchg
ja
jo
or
mov
out
inc
das
adc
loopne
push
rol
pop
mov
mov
movsl
fsts
cmp
pop
fimuls
sahf
lcall
mov
adc
and
jp
mov
rolb
movsbl
shll
and
loope
xchg
sahf
push
mov
shlb
jge
es
fists
xor
jecxz
cmp
jecxz
cmp
sahf
pop
cltd
cs
mov
out
outsl
xlat
inc
in
jl
fcomip
aad
or
leave
icebp
mov
mov
and
ret
mov
hlt
xchg
addl
xchg
cmp
ss
and
xchg
push
push
add
mov
mov
mov
loope
jmp
cltd
xchg
imul
mov
jp
out
mov
sub
aas
push
loopne
pop
outsl
pop
in
sub
mov
or
fwait
sbb
add
push
and
sbb
mov
enter
mov
andb
pop
popf
test
and
xchg
int
sub
lods
sub
add
neg
jp
push
sub
ja
adc
sub
pop
xchg
and
int
inc
sarl
inc
push
cmc
pop
mov
out
out
outsl
sti
pop
jbe
mov
mov
push
pushf
adc
dec
dec
insl
ds
or
inc
xchg
push
fnsave
leave
repnz
dec
cltd
call
pop
bound
mov
pop
out
dec
cmp
rolb
xchg
sbb
hlt
mov
cli
test
mov
ficoms
sbb
mov
mov
lds
and
dec
leave
cmp
mov
dec
mov
mov
sti
lea
stc
sub
btrl
cmp
arpl
loopne
push
lret
clc
pop
out
pop
cmc
cmp
xchg
xor
sub
dec
fldenv
out
dec
sbb
idivl
mov
filds
fistl
push
ret
mov
out
cmp
pop
jmp
addps
jg
push
jge
mov
xor
or
ret
sub
mov
pop
inc
aad
cld
outsb
sub
stos
xchg
iret
stos
dec
xlat
adcl
push
pop
sub
dec
adc
push
xchg
jnp
add
xchg
sti
sbbl
xchg
adc
cltd
aas
mov
mov
jge
cmc
inc
dec
sbb
aad
jl
lcall
jecxz
xchg
mov
lods
sbb
pushf
cmp
pop
or
adc
push
fucomi
popa
dec
or
inc
loopne
sbb
adc
clc
push
lcall
mov
push
mov
aad
sarb
fadds
insl
mov
arpl
insb
insl
inc
aas
sub
sub
lea
adc
mov
mov
out
mov
mov
mov
ret
adc
or
imul
rcrb
in
sub
stc
lds
sub
sbb
jl
pop
mov
or
ret
fiadds
cld
lcall
js
rcrl
stc
xchg
dec
push
imul
push
cltd
mov
in
sub
push
aaa
and
cli
inc
int3
loopne
in
or
add
push
mov
mov
xchg
push
mov
aas
sbb
lcall
cmc
mov
stos
or
stos
and
adc
cmc
test
jle
jno
into
lods
fxch
loopne
call
fidivrs
lock
rolb
or
aad
pushaw
in
repz
jle
mov
jae
clc
ficoms
lret
and
cmp
cmp
ss
xchg
insl
mov
mov
mov
shrb
mov
xchg
sub
sbb
popf
outsb
push
int3
js
int
ljmp
insb
sahf
mov
adc
cmovno
shl
lret
jl
data16
push
adc
mov
out
sub
xor
jmp
sbbb
fsts
mov
cmp
stos
or
mov
mov
or
sbb
ljmp
pop
inc
sbb
xchg
pop
and
adc
add
subl
aam
and
sub
mov
push
adc
adcl
and
or
roll
xchg
rorb
test
mov
push
aam
mov
pop
jl
ret
in
inc
lret
jbe
push
jne
inc
jp
adc
xor
jp
pop
adc
cmp
cmp
cmp
pop
push
pop
mov
test
add
mov
stos
in
inc
push
loope
cs
dec
add
ffree
aas
add
rorb
pop
add
in
inc
cmp
jge
popf
inc
pop
incb
dec
push
xlat
imul
mov
adc
push
fsubr
cmp
data16
jl
test
xchg
int
mov
mov
push
rcrl
in
inc
xor
sbb
mov
sarl
test
mov
outsb
pop
and
xchg
push
jne
sbb
xchg
cmp
push
test
or
nop
push
imul
add
mov
inc
add
and
push
jmp
insb
leave
out
fdivl
in
push
stos
lret
mov
adc
add
pushf
test
test
adcb
dec
pushf
inc
inc
out
movl
pushl
sub
push
fcomp
sbb
popa
roll
jle
ljmp
push
sbb
call
mov
inc
sahf
sti
mov
ficoms
popa
jo
outsb
movsl
div
lods
adc
push
sub
cltd
jns
movsb
adc
loope
loopne
jle
loopne
shr
enter
mov
loop
push
push
fisubl
xor
test
fsubl
sbb
decb
push
popa
or
mov
jbe
jae
ret
shrb
xchg
fisttpl
fidivrl
sahf
inc
aas
int
test
xchg
inc
adc
fldenv
js
inc
and
and
cld
mov
cmp
xchg
aam
aam
insl
xchg
dec
int
or
lret
in
cwtl
pop
mov
int3
push
jecxz
jae
out
add
addr16
sub
cmc
push
jl
push
cli
loope
stos
arpl
push
flds
sub
lret
mov
pop
dec
iret
subl
adc
dec
imul
and
out
mov
popf
xchg
sbb
fs
jmp
or
filds
rcrb
adc
scas
out
adc
xchg
ffreep
push
sahf
lcall
stos
jo
inc
push
pop
in
jae
dec
insb
aaa
xchg
test
in
mov
push
pop
xchg
sub
bnd
push
push
addb
pop
jae
sarb
scas
inc
and
pop
push
add
ljmp
add
cmp
xchg
jo
xchg
pushf
mov
lock
pcmpgtd
ret
pop
iret
xchg
push
xchg
jnp
and
push
lock
jg
repnz
outsb
add
into
and
push
loopne
sub
repnz
ja
imul
mov
test
pop
dec
mov
pop
jns
and
inc
add
imul
xchg
les
add
decl
jns
mov
lret
xor
sbb
mov
and
sub
sbb
int3
push
orps
sbb
cmpsb
inc
mov
fsubrl
rolb
dec
adc
dec
and
call
stc
add
ljmp
sbb
adc
aad
pop
dec
and
bswap
jg
mov
jno
adc
dec
divb
lock
insb
sbb
push
mov
sbb
sbb
test
sub
int
insb
insl
mov
lret
add
idiv
or
mov
mov
dec
ret
cmpsb
dec
lock
or
popa
repnz
xor
repnz
gs
jle
fdivrl
push
hlt
jle
fisttpl
xor
or
shlb
cmc
orl
jl
dec
jmp
dec
pop
cmc
xchg
and
jp
insb
iret
inc
sbb
ds
add
pop
jmp
movsl
rorb
mov
les
out
ds
movsl
sbb
test
xor
pusha
xchg
dec
sbb
imul
imul
aam
add
adc
fdivr
mov
jnp
xor
push
popa
aam
sbb
scas
push
jle
lea
add
aad
call
mov
loope
enter
pop
or
dec
mov
cld
inc
mov
sahf
pop
xchg
and
xor
stc
lret
into
inc
int3
test
ret
in
in
mov
mov
push
jae
xor
jae
xchg
sub
push
xchg
mov
cltd
sub
ror
or
stos
mov
aad
push
add
mov
in
scas
lret
pop
fwait
insl
add
jno
mov
loopne
pop
mov
pop
dec
mov
iret
dec
and
pop
jnp
nop
test
sbb
aas
push
cmpsb
dec
ret
cwtl
popa
aad
pushf
cmpl
out
push
jle
test
sub
pop
mov
mov
add
loop
aam
cmc
iret
mov
and
fs
cs
inc
iret
push
rep
xor
pop
mov
daa
mov
aaa
ljmp
hlt
stos
lock
xchg
dec
int3
push
pop
fsubs
rclb
push
xchg
ja
movsl
scas
lods
loop
push
test
inc
xchg
sarb
arpl
cmpb
cmp
or
test
movsb
mov
jl
sbb
push
push
pop
and
pop
push
adc
lods
xchg
mov
pop
ljmp
ffreep
jno
test
mov
add
fwait
push
jne
stos
mov
dec
movsb
icebp
xor
mov
or
xchg
adc
pop
bound
xchg
mov
insl
js
xor
mov
mov
jg
lods
sbb
dec
jmp
mov
int
pop
push
add
mov
mov
into
hlt
test
test
aaa
sbb
jns
jns
jl
fistps
aas
xor
into
cld
sahf
adc
sarb
push
dec
int
pusha
xor
lgs
js
and
out
test
adc
push
dec
mov
fs
push
enter
xchg
cmc
or
pop
push
xchg
push
outsl
sbbl
xlat
aas
cld
test
cmpsb
pop
mov
mov
repnz
lea
push
inc
xchg
jge
or
dec
jl
jae
add
xchg
ljmp
enter
shr
cs
sub
icebp
xor
sub
push
out
inc
cld
fs
mov
xchg
aaa
sub
push
push
movsb
jns
pop
loopne
lahf
cli
iret
mov
fistpl
mov
add
xchg
pop
jmp
pop
xor
dec
sbb
hlt
int
sarl
aad
cwtl
in
out
in
or
inc
loope
sahf
cmpsl
imul
jae
imul
inc
adc
xor
in
mov
adc
and
mov
pop
add
mov
push
xor
pop
mov
call
fdivrs
or
pop
lods
and
add
shrl
adc
add
mov
movl
in
dec
dec
hlt
xor
test
add
stc
pop
mov
fnstsw
push
mov
mov
dec
sbbb
mov
adc
inc
stc
dec
dec
addl
loop
daa
pop
out
mov
inc
pop
adc
fs
sbbb
mov
fs
push
push
movsl
add
sbb
pusha
add
add
push
aad
mov
ret
sarl
push
mov
test
sbb
out
fdivs
mov
xchg
fcoms
pop
push
add
stc
sbb
aam
sbb
fmull
mov
dec
push
sub
sub
push
stc
push
adc
xor
mov
andl
mov
cmp
xchg
scas
shrb
jb
addl
jae
cmp
enter
mov
adc
cmpsl
loope
out
mov
jns
mov
pop
mov
lds
faddl
cmp
push
add
mov
pop
inc
les
xchg
mov
xchg
leave
inc
test
iret
outsl
dec
out
mov
lcall
pop
sub
mov
xchg
cmp
pusha
stos
adc
cwtl
add
inc
xchg
adc
jmp
push
sbb
jl
in
aas
mov
sarl
int
or
push
fsubrs
pop
inc
xchg
scas
mov
jg
xor
cmp
hlt
or
xchg
xchg
push
bound
push
into
outsl
ds
ret
pop
mov
mov
push
dec
pop
int
and
addr16
mov
stc
daa
jl
push
mov
mov
ret
pop
cwtl
inc
cltd
cmp
in
jle
ret
cmp
sti
sbb
mov
jno
xchg
fwait
cltd
adc
fisttps
xor
aam
inc
mov
push
mov
out
push
pushf
repz
mov
adcb
or
imulb
mov
std
out
test
adc
jne
pop
mov
lret
sub
pusha
pop
inc
out
cmpsl
fldt
sub
insl
data16
add
cltd
sbb
jle
jge
mov
cmp
test
bound
mov
movb
adc
pop
popa
rcrb
cs
test
enter
mov
popa
neg
shlb
add
xlat
mov
mov
sub
arpl
rolb
sar
jecxz
test
mov
outsl
fs
xor
cwtl
ss
xlat
mov
clc
push
mov
pop
lods
call
mov
int3
insl
das
popa
dec
xor
and
inc
mov
aad
pop
dec
hlt
pop
loop
aam
adc
jns
mov
shll
xor
pop
or
ret
or
in
pop
push
lcall
or
sbb
jp
lcall
out
mov
lret
cmp
xor
sub
divl
xor
negl
data16
pop
movsb
sahf
adc
lock
xor
ret
daa
cmp
xor
ja
pushf
mov
sub
xchg
inc
or
sahf
test
mov
mov
fisubs
dec
loop
in
sarb
inc
xor
jg
pop
lock
mov
stos
cmp
push
dec
mulb
mov
subb
sbb
mov
xchg
cmp
add
and
dec
stos
icebp
mov
jp
add
outsb
adc
mov
loope
iret
mov
dec
mov
jmp
mov
test
add
aad
jmp
mov
lcall
adc
cmp
inc
jmp
scas
adc
bnd
insl
sub
pop
mov
push
dec
jg
outsb
andb
in
iret
dec
icebp
incb
inc
mov
jns
xchg
push
inc
jmp
adc
cmpl
inc
xor
mov
dec
in
and
insb
and
push
jle
scas
push
xor
ss
hlt
fcomps
mov
sbb
ja
cmp
nop
idivl
icebp
push
fsubl
pop
stos
insl
adc
pop
dec
leave
sbb
pop
dec
icebp
sbb
frstor
mov
jb
jns
dec
jecxz
lahf
jg
push
addr16
mov
sub
xor
imulb
or
roll
je
inc
inc
fildl
cltd
push
subl
aaa
push
sahf
flds
push
mov
in
lods
shr
push
or
pop
sub
pusha
sti
jp
jge
bswap
jmp
out
imul
jo
adc
mov
mov
cmp
or
repz
ror
adc
fsubl
adc
mov
aas
jb
cmc
xor
mov
repnz
mov
and
sbb
es
lret
js
jb
inc
aaa
lret
or
movsl
xlat
std
pop
repz
icebp
inc
push
push
mov
adc
and
add
lahf
bound
xchg
nop
loop
mov
xor
lock
fwait
repnz
dec
cmpl
cmp
jb
dec
aaa
fldcw
lods
xchg
clc
clc
in
iret
cmp
mov
sarl
cmp
ficoml
mov
mov
sub
ret
jge
roll
jb
xor
cmpsb
push
dec
dec
xchg
iret
xchg
and
ja
lahf
lods
loopne
repnz
cmpl
scas
add
out
mov
sbb
loop
mov
cmp
ss
cmp
adc
mov
fs
mov
je
iret
jecxz
iret
fsts
cmovo
gs
xchg
std
sbb
into
test
or
xchg
andl
pop
mov
jge
mov
loope
imul
mov
lea
and
enter
and
out
imul
lds
push
sbbl
cmc
test
mov
outsl
ljmp
scas
push
out
jg
dec
daa
insb
ret
je
fwait
jl
aas
ja
push
imul
mov
xchg
negb
dec
cs
enter
aam
fmull
push
adc
pop
pop
jo
mov
cs
fmul
and
inc
mov
pop
bound
and
xchg
mov
fildl
add
mov
adc
rolb
ret
ljmp
add
mov
jl
mov
fistps
sbb
inc
sarb
test
add
sbb
jne
shll
mov
cmpsl
inc
adc
test
sbb
adc
xchg
aaa
pop
cs
rcr
ljmp
xchg
adc
nop
rorb
mov
sti
and
push
mov
iret
fstps
sub
jmp
std
pushl
in
sub
iret
jge
cld
add
rolb
adc
xchg
les
adc
and
sbb
inc
dec
pusha
push
fistl
repz
ret
adc
outsl
xor
xchg
add
orl
jo
inc
xchg
mov
inc
loop
das
xor
dec
ss
dec
jp
in
sub
jg
out
xchg
cwtl
mov
adc
xchg
push
and
scas
sub
test
pop
cmpsl
cwtl
add
mov
jp
ret
out
aad
lcall
xchg
or
bound
adc
xor
cli
add
sahf
outsl
shlb
in
xor
pusha
out
sbb
fsubrs
push
cmc
jmp
test
les
in
add
fwait
and
jge
mov
mov
jecxz
sub
repz
enter
xor
or
add
movsb
test
push
stc
inc
mov
andb
sub
cwtl
lock
mov
inc
clc
xchg
push
call
cwtl
notl
stc
adc
and
pop
cmp
jbe
cmpsb
movsl
jecxz
push
ret
insb
push
mov
xlat
daa
in
cmpsb
push
ret
push
and
icebp
sub
jmp
or
jle
xchg
shrl
sub
insl
insb
mov
sahf
jge
xchg
js
out
aaa
gs
xor
aam
adc
mov
pop
dec
jle
ret
ret
sbb
icebp
jmp
fldenv
arpl
lods
push
jns
and
std
and
jno
pop
cld
sub
dec
clc
pop
push
ret
lahf
mov
mov
notl
xchg
adc
insl
mov
insb
pop
sub
xchg
pop
mov
roll
push
scas
or
inc
mov
jge
mov
mov
xor
fstpl
stos
cmpsl
je
or
jb
lods
mov
shlb
popa
mov
andb
add
push
in
iret
add
or
test
mov
es
push
pushf
adc
and
xor
and
jecxz
push
pop
jo
xor
iret
or
jl
jge
cmp
or
les
mov
dec
jge
fwait
pop
cmp
sbb
test
mov
pop
aas
aam
inc
cli
daa
push
addb
insl
gs
adc
mov
mov
dec
push
pop
sub
xchg
icebp
sbb
jmp
call
lcall
xlat
jne
pop
in
jns
roll
fwait
mov
shll
aaa
cmp
mov
fcoml
or
mov
adc
ror
pop
leave
imul
xor
lods
jae
mov
mov
pop
jl
dec
stos
cmpxchg
jb
xchg
dec
mov
adc
in
mov
dec
repnz
add
dec
push
fcomi
push
xchg
ds
das
lock
sar
movl
mov
andb
rolb
addr16
mov
jmp
call
loop
dec
rcrl
outsb
ficompl
jecxz
mov
leave
ss
popl
rcr
jle
jne
push
sub
dec
pop
inc
std
scas
lods
dec
cmpsb
sbb
xor
jno
ret
inc
or
aaa
sbb
xchg
cmc
jp
xchg
sti
mov
pop
adc
pop
aaa
ja
pop
andl
mov
data16
jg
push
sub
xchg
sbb
iret
clc
sub
icebp
enter
jo
jge
sub
das
and
je
outsl
sub
fstl
cmpsb
dec
and
cmp
dec
or
leave
sub
test
adc
mov
inc
xchg
cli
shrl
stos
fcomip
shl
xchg
sbb
ljmp
jno
fistpl
idivb
inc
fldl
sub
lcall
fwait
add
add
cltd
mov
jns
jl
movl
or
sub
sub
lahf
xor
fidivrl
xchg
call
sub
and
xor
int
or
or
cmp
mov
push
jbe
cli
and
pushw
mov
subb
repz
mov
fcmovb
mov
inc
cwtl
push
push
stos
repz
mov
cmc
jo
adc
mov
adc
out
jl
mov
pop
cmp
lods
inc
sub
test
outsb
scas
out
loopne
adc
dec
imul
cmpsl
mov
inc
sub
ljmp
loope
cmp
inc
adc
mov
pop
or
cmp
lock
mov
jle
push
sahf
and
push
push
lods
push
test
dec
fisubs
dec
hlt
pop
adc
iret
loope
sbb
mov
jl
sar
cli
cld
adc
mov
jle
fs
mov
jmp
cmc
cmp
lahf
inc
stc
aas
lret
mov
icebp
push
xchg
push
lods
hlt
mov
cld
fcomip
inc
fwait
pop
adc
inc
bnd
pop
xor
fs
and
mov
cmp
lock
mul
int
lcall
enter
add
js
test
fisttpll
test
mov
dec
outsb
dec
aad
fdivrs
addr16
xor
mov
push
in
stc
dec
sub
in
mov
add
adc
call
add
inc
emms
popf
mov
add
cmp
fs
dec
sbb
jnp
popf
into
cwtl
nop
pop
mov
xlat
push
xor
and
lock
daa
cmpsl
loop
scas
lock
and
shl
es
xor
mov
roll
sub
imul
jmp
jmp
and
and
aad
ja
xchg
iret
inc
lea
mov
sbb
pop
lods
sub
daa
das
xor
cmp
sbb
mov
adc
pop
outsb
xchg
push
roll
lods
jno
mov
loope
js
ds
push
jmp
pop
shrb
cs
orl
lret
or
out
mov
dec
test
adcl
cmp
fstps
int3
inc
sub
les
inc
jns
sarl
xlat
adc
in
je
mov
adc
dec
mov
es
fwait
cmp
xchg
iret
dec
and
pop
in
cmp
mov
fmull
sub
cmc
push
mov
push
add
xchg
insl
je
repnz
daa
cmp
imul
inc
and
mov
std
adc
push
pop
or
dec
outsl
push
inc
mov
push
mul
cmp
inc
mov
sbb
mov
dec
fcomps
imul
in
sti
sub
xchg
cld
cmc
sbb
sub
pop
cmp
test
mov
xchg
mov
sbb
sbb
outsb
bound
jns
fists
xor
mov
leave
mov
mov
and
jmp
fstpl
rolb
imul
out
fdivrl
inc
lahf
lcall
lahf
jnp
sub
pop
scas
mov
jg
add
adc
jp
xor
mov
iret
je
or
inc
movsl
dec
fdivrl
outsl
and
or
in
addb
xor
xchg
add
and
mov
push
outsl
inc
xor
les
outsl
dec
std
lret
or
dec
repz
fdivrs
shrb
fwait
mov
lcall
loopne
add
leave
cmp
sub
inc
les
movsl
xorl
mov
pop
adc
test
sub
jl
or
lahf
jno
dec
jp
lret
mov
icebp
xor
xchg
shr
je
jecxz
stc
int3
cmp
or
cmp
outsb
in
mov
sahf
push
push
mov
loope
fidivl
xor
cmp
test
push
push
jmp
insl
jmp
sub
jns
mov
mov
xor
xchg
cltd
loop
push
insb
std
aaa
cs
gs
push
iret
test
cmp
mov
dec
jns
insl
ret
mov
movsb
pushw
sbb
rclb
push
shlb
sbbb
jo
mov
ljmp
mov
pop
mov
push
xchg
stos
loopne
into
push
xor
and
mov
enter
push
shll
lock
pushf
xor
out
pushf
mov
lret
test
fisubs
mov
add
inc
sub
push
ds
ja
pop
ss
bound
dec
xor
popaw
and
cmpsb
cmp
mulb
iret
outsl
sti
cmp
jg
andl
pushl
imul
push
sub
cmp
dec
mov
or
pusha
inc
fisubrs
cld
sbb
jns
dec
or
cmc
leave
sbb
cmp
rclb
jbe
inc
shrl
imul
lahf
inc
mov
data16
lock
imul
cmp
fimull
pop
mov
fistpl
roll
or
dec
out
push
je
inc
loop
repnz
push
or
cltd
arpl
xlat
pop
sahf
mov
stos
pop
testb
dec
je
jo
push
std
mov
xor
push
pop
rolb
xor
fs
sahf
shl
pop
jns
into
js
mov
fmul
cs
xor
sbb
rorl
lods
mov
adc
jbe
mov
dec
push
mov
sub
dec
std
adc
or
sbb
cmp
xchg
xchg
mov
cmp
bound
inc
inc
jne
ss
icebp
es
pop
xchg
cli
cs
and
xchg
imul
jo
or
jnp
je
add
xor
shrl
sbb
adc
pop
mov
int3
fstps
mov
pop
fildll
dec
xchg
cmp
incb
xor
push
test
idiv
mov
lahf
dec
fildll
pushf
adc
nop
mov
mov
cli
mov
sub
mov
in
mov
push
lcall
out
jl
pop
insb
sbb
mov
jne
jmp
cmp
push
bndldx
xor
mov
push
stos
ja
jns
and
mov
push
test
pop
dec
jbe
mov
push
jbe
dec
cmp
in
dec
inc
in
push
jns
mov
or
dec
in
jnp
rcll
pop
aaa
pop
lods
push
xchg
add
dec
mov
jo
adc
xor
out
mov
mov
push
cwtl
mov
int
sub
sub
mov
popf
xlat
cmpsl
mov
repz
std
int3
shrl
lahf
cmp
xchg
lods
das
js
mov
and
inc
lret
ficompl
pop
sbb
inc
pusha
sar
lods
fs
xchg
sub
adc
xchg
cmc
sub
sub
sub
pop
sbb
stos
filds
pop
mov
int
test
dec
testb
int3
inc
pop
fsubrl
pop
jle
imull
or
icebp
xchg
rcrl
jle
jne
mov
jns
les
lcall
pop
outsb
stc
aam
cmpl
rcrb
repnz
sbb
jecxz
sbb
icebp
gs
notl
fisubrl
out
and
negl
adcb
sbb
sub
xchg
jo
fcmovne
dec
pushf
iret
sbb
ljmp
mov
or
lahf
xchg
mov
out
daa
lret
mov
ljmp
imul
and
xchg
mov
push
sarb
add
add
inc
orb
dec
inc
push
aas
stc
mov
gs
imul
test
adc
lods
adc
push
dec
and
int
imul
out
mov
and
rcrl
fistpl
pop
pop
or
jnp
xchg
das
inc
mov
clc
pop
add
mov
or
cmpsl
and
sbb
cld
fwait
dec
rcr
sbb
xor
incb
xchg
sub
mov
cli
leave
xchg
or
mov
nop
jnp
adc
out
cs
mov
pop
rcr
xor
sbb
cmp
ds
jo
cmp
xor
shl
add
int3
ror
mov
pop
or
mov
dec
mov
stos
sti
imul
enter
add
arpl
aam
and
ret
in
sbb
and
je
cmpsl
test
add
sti
mov
adc
rclb
incl
bsf
arpl
mov
mov
mov
mov
xchg
xchg
in
pop
fdivrl
out
xchg
outsb
push
shll
push
lds
xchg
add
cld
xor
add
out
rorl
hlt
dec
not
jg
push
xchg
jno
jmp
xchg
movsb
dec
or
dec
jns
inc
and
jne
xor
mov
loopne
or
dec
outsb
enter
xor
cmp
imull
jp
mov
xor
mov
or
mov
inc
mov
xchg
js
adc
mov
mov
ds
frstor
cmp
mov
mov
sub
pop
xor
scas
pop
xchg
das
sbbb
jns
inc
mov
mov
repz
add
clc
hlt
ss
jne
cmp
xchg
movnti
cmp
and
cwtl
jno
popf
or
jp
and
mov
xchg
mov
mov
fnstsw
cli
sbb
jmp
les
out
xor
inc
cmc
dec
inc
pusha
lods
dec
cmp
xchg
mov
sbb
and
push
xor
mov
sbbl
xchg
imul
add
test
shll
pop
cs
fistps
sti
push
xchg
cmpsb
xor
jg
mov
adc
sti
ja
ja
hlt
sbb
jecxz
int3
lock
aaa
jecxz
fsub
add
jl
pop
arpl
fnsave
xchg
pop
cmp
or
xor
or
shl
sub
popf
jb
dec
push
jno
pop
ja
stos
mov
pop
aaa
adc
xchg
dec
jae
or
ds
mov
mov
pop
bound
popa
rcrl
sahf
les
inc
xor
mov
ret
lds
sub
test
shl
push
jno
outsb
es
xor
mov
dec
pop
fidivrl
pop
xor
pop
imul
scas
out
lahf
cltd
in
mov
jl
xor
inc
cmp
dec
dec
jg,pt
jge
xor
sub
fdivl
daa
in
pop
or
mov
jae
jno
jb
jl
sti
call
and
push
test
movsb
or
jge
out
sub
aaa
loope
mov
and
pop
jg
int3
pop
xchg
adc
sbb
ret
jae
lods
xor
dec
add
cmp
mov
cmc
stos
push
je
mov
fwait
and
inc
popf
cmp
stc
pushf
cmp
loop
into
insb
push
mov
mov
mov
movsb
or
notl
popf
jno
xor
aas
or
add
jbe
movsl
push
popa
les
jne
mov
mov
add
lret
les
clc
lea
xchg
pop
aaa
pop
sub
pop
rol
sbb
shll
xchg
mov
sbb
pop
mov
frstor
inc
dec
mov
clc
scas
stc
negb
fdivr
mov
mov
hlt
adc
dec
push
aam
mov
daa
lahf
jg
in
mov
imul
cli
call
cltd
lea
cmc
dec
cmp
insb
fwait
out
pushf
repz
pop
jbe
out
fisubrl
int
mov
in
sub
cli
jle
fcoml
fldl
pop
pop
test
mov
jne
push
cld
roll
scas
mov
adc
jg
or
pop
jae
ja
mov
mov
rclb
or
cld
fisubrs
fwait
cmpsl
pop
push
stos
jp
or
enter
out
jp
jmp
imul
in
xchg
pop
jg
outsb
push
int
lods
int3
jno
test
xor
rcr
nop
jne
sub
icebp
push
test
loop
in
mov
lods
scas
mov
in
lock
std
adc
jmp
and
mov
sub
out
mov
cwtl
sbb
or
lds
cmc
mov
cmp
xor
sbb
dec
adc
xor
xchg
push
into
adc
sbb
cs
cmpsl
push
xchg
xor
mov
mov
or
xchg
pop
sub
test
inc
addb
xchg
pop
pop
gs
stos
das
ret
jnp,pt
mov
popa
ss
pop
or
les
dec
sbb
and
fdiv
and
adc
lods
insb
dec
dec
adc
mov
divb
adc
mov
imul
fistpl
iret
mov
ds
adc
lahf
mov
mov
incb
std
outsb
mov
or
or
movsb
dec
movsb
pop
or
xor
int3
inc
lea
mov
cmp
cld
sbb
pop
lds
stos
and
push
out
in
repnz
test
cmp
pop
hlt
cmp
jg
popa
jne
aas
cmp
jle
movsb
inc
adc
test
int3
sbb
sub
hlt
add
lods
or
adc
hlt
popf
pop
inc
pop
test
fidivrl
leave
dec
sbb
inc
jmp
in
and
jl
or
test
xor
xor
pop
add
lods
dec
jne
inc
mov
or
cwtl
and
movsl
mov
in
pop
sahf
jg
into
mov
pop
and
pop
mov
ret
jle
fwait
adc
pop
int
iret
fstl
out
in
mov
dec
cmp
mov
out
push
sbb
jl
push
xor
xchg
ss
leave
lock
jne
stc
add
inc
pop
outsl
ds
mov
xor
leave
ficomps
fldt
push
js
rorl
and
push
mov
mov
xor
lea
pop
fimull
push
adc
ja
cmpsb
pop
pushl
jge
xor
mov
jns
mov
lods
cltd
jle
sahf
out
test
cmp
pop
lods
shlb
orl
shl
jmp
and
popa
movsb
pusha
mov
lods
outsl
daa
inc
inc
push
data16
pop
rorb
xchg
out
and
push
and
stos
out
mov
outsb
pop
xchg
insl
and
subl
push
imul
mov
mov
adc
out
sbb
leave
sub
or
stos
xchg
sbbl
fwait
xchg
cmp
inc
jecxz
gs
punpckhbw
adc
cwtl
inc
add
ss
int
lods
mov
leave
sub
cmp
loop
nop
xchg
inc
push
mov
add
xor
dec
dec
inc
repnz
outsb
and
jmp
lret
jle
add
insl
movb
ljmp
loop
xchg
into
lds
shrb
pop
mov
call
scas
pop
ja
sub
fdivl
fidivrs
pop
roll
sbb
xchg
icebp
mov
push
add
push
faddl
das
lcall
pop
add
mov
shrl
fs
test
mov
sbb
jecxz
sbb
or
or
cld
dec
push
xchg
add
sub
pop
cmc
sti
jle
in
ds
push
add
jle
push
insb
in
icebp
or
sub
mov
push
mov
fwait
bound
fnsave
outsb
pop
lret
mov
nop
hlt
in
jno
call
mov
jge
mov
jg
mov
pop
ret
xor
lods
cmp
pop
push
add
pusha
pop
nop
and
rcll
out
jmp
rcrb
out
mov
push
sbb
xor
scas
inc
jb
sub
xor
inc
jnp
fld
addb
clc
test
stc
sbb
iret
je
mov
mov
and
clc
aad
hlt
push
mov
les
inc
mov
jbe
xor
add
pushf
js
and
mov
sbb
sub
pop
adcl
sub
out
rorb
daa
inc
das
in
test
mov
outsl
jae
cmp
sar
int3
inc
sub
xchg
mov
jmp
inc
ds
or
test
sub
scas
pop
cmpsl
xlat
sbb
loope
jno
stos
cmp
cltd
insb
and
cwtl
mov
daa
fcmovnu
insl
fiadds
ret
xchg
loopne
sbb
add
add
sub
sbb
addl
testl
repz
test
adc
sbb
lock
and
int3
ja
lcall
scas
imul
shrb
and
mov
shll
cltd
imul
or
jmp
cmpsb
xor
add
cmp
imul
sbb
idiv
call
ss
stos
ds
iret
cli
cmp
mov
fsubrs
pop
sub
mov
sub
out
jnp
and
sahf
adc
and
xor
push
enter
fcoms
aam
xor
sub
push
dec
mov
ds
test
into
push
add
jg
adc
imul
sub
lods
cmp
popa
repz
movsl
sbb
push
push
mov
fimull
jecxz
push
test
scas
ficomps
jne
xchg
mov
push
xchg
xor
mov
shr
pop
fstpt
jnp
ljmp
hlt
sti
rorb
clc
push
int
mov
les
push
testl
lods
stos
test
and
adc
or
cmp
sbb
add
lea
add
fimuls
mull
inc
sub
sub
sub
fldt
lods
mov
cli
mov
mov
or
sbb
pushf
sahf
stc
or
inc
dec
test
scas
adc
cmc
int
inc
subb
sbb
sub
rcr
lods
es
xchg
jo
adc
ds
addl
cmpxchg
inc
repz
aaa
xchg
sbb
dec
movsb
cmp
adc
adc
fisubl
xchg
gs
dec
rclb
add
mov
sub
fucom
xor
sub
lds
pushl
out
test
xor
enter
push
test
inc
loopne
or
xor
add
and
cld
pushf
pop
inc
xor
jnp
cwtl
mov
mov
loopne
shrl
inc
mov
mov
jns
inc
xchg
sub
sbb
loopne
push
out
xchg
shl
lret
std
iret
xchg
inc
pop
loope
sarl
imul
cwtl
aad
hlt
xlat
dec
mov
adc
add
ret
jb
ds
and
aad
and
adc
push
sbb
sbb
fidivl
ja
and
subl
fsubs
ret
or
rolb
clc
out
dec
push
add
loopne
je
arpl
pop
cwtl
test
cmpsl
aas
sub
pusha
mov
mov
jbe
cmpsl
fldcw
and
stos
cs
jb
int3
andb
inc
arpl
pushf
push
int
loop
jnp
test
outsb
dec
mov
push
testl
int
jle
jge
aam
jae
sbb
loope
or
leave
gs
in
push
out
les
std
or
mov
inc
mov
std
dec
std
push
mov
stos
sbb
fidivrl
fmull
and
aad
xchg
adc
cld
sbbb
mov
iret
jp
lds
mov
std
push
xchg
mov
lea
addl
aad
sbb
jnp
pop
pop
in
aad
arpl
iret
dec
int3
mov
fs
popf
iret
mov
daa
negb
jg
lds
movsb
clc
pop
loope
inc
in
push
repz
les
jle
inc
cmp
loop
xlat
dec
inc
in
cmp
dec
hlt
mov
js
mov
hlt
xchg
xchg
sub
or
xor
fstl
das
sbb
xor
out
mov
and
cmp
jp
je
push
std
ss
sub
and
pusha
js
or
pop
or
movsb
ljmp
dec
shll
dec
mov
cmc
or
jle
adc
or
iret
mov
cmpsl
sbb
dec
sbb
in
cmpsl
scas
mov
outsb
push
js
xor
lcall
aas
sub
xchg
push
outsl
jle
mov
arpl
xor
jbe
xlat
adc
mov
xor
xchg
add
or
mov
mov
jmp
mov
repz
jae
addl
popf
xchg
ljmp
pushf
iret
pop
xchg
jbe
xor
pop
mov
dec
or
or
loopne
adc
sub
push
jne
stos
xor
and
cmp
popa
mov
dec
mov
adc
shll
push
inc
pop
cwtl
push
cmp
push
push
xor
rcll
jp
fdivl
dec
sub
jo
in
lods
sub
mov
leave
pop
mov
mov
sub
in
push
in
out
cmp
mov
pop
add
push
in
repnz
ret
in
decl
sub
and
outsl
sub
stos
cmpsw
icebp
inc
outsl
test
imul
xchg
mov
nop
scas
pop
scas
sbb
mov
mov
cmc
mov
mov
jno
cwtl
fdiv
or
movsl
jns
sbb
mov
decl
sbb
jb
and
idivl
or
arpl
rcrb
bound
les
sub
mov
lea
sti
fstpl
aaa
cli
gs
leave
jmp
mov
sahf
pop
mov
loop
and
inc
sub
sarl
loope
dec
push
jnp
cmpsl
arpl
mov
sti
sahf
insb
xor
iret
lea
add
fs
dec
daa
adc
cs
lcall
mov
cmpb
or
add
lret
stos
xchg
pop
fwait
dec
scas
push
xor
mull
in
testl
mov
or
fs
mov
icebp
fiaddl
adc
mov
xor
out
ret
fdivp
je
js
fxch
jle
or
mov
in
out
sub
les
lret
lret
dec
call
aas
push
xchg
jb
jg
cmp
clc
outsb
dec
daa
je
pushf
mov
fprem1
mov
mov
adc
xchg
or
mov
into
xor
sub
lahf
popa
aad
jge
hlt
sub
push
aam
mov
bound
add
add
cmpsb
nop
add
cmp
add
popa
movsl
xor
ss
gs
jne
and
pop
xor
push
mov
int3
fs
add
mov
jno
push
dec
call
fists
pop
push
mov
push
fnstsw
mov
dec
jmp
int3
shrb
cltd
mov
pop
out
das
mov
dec
call
inc
test
mov
xor
rorl
push
and
cld
pop
xor
mov
mov
cltd
fwait
push
enter
cmp
ds
cmp
sbb
push
call
outsb
rorb
sbb
mov
inc
stos
stos
call
ret
or
stos
or
xchg
shll
add
cmpsl
xchg
xor
adc
aas
mov
jnp
pop
ret
sub
dec
mov
in
xchg
mov
loope
push
rclb
mov
xor
lods
jl
jmp
push
jae
lds
mov
add
and
mov
dec
pop
sub
mov
jle
fnsave
push
mov
das
jle
lret
cltd
sbb
andl
add
scas
adcl
mov
push
xor
es
arpl
movsl
cltd
jbe
inc
shll
out
push
mov
in
ficomps
jo
pop
dec
loop
in
adc
jmp
xor
je
dec
jno
xchg
cli
xchg
int
pop
mov
aad
arpl
orb
push
stos
imul
fldt
sub
popf
stos
dec
xor
jb
repnz
loope
sbb
ret
ficoml
lcall
or
outsl
in
stc
loop
std
xchg
mov
shrl
pusha
add
mov
push
mov
or
jp
sbb
fwait
ds
repz
sbb
xchg
dec
jb
imul
push
dec
out
data16
xchg
add
mov
jns
pop
idivl
mov
lods
push
jnp
test
xchg
sti
fmul
or
sub
cltd
pop
pop
push
ljmp
xchg
outsb
fildl
imul
jmp
xchg
or
cld
sbb
push
es
adc
nop
xchg
stos
loop
and
jg
push
ljmp
imul
push
flds
aad
aad
iret
pop
xor
jae
mov
jmp
sbb
push
mov
loop
out
lods
pop
sbb
mov
mov
subl
adc
hlt
xor
in
push
adc
jns
shlb
cmp
cltd
outsl
aam
xchg
out
cmpsl
adc
test
fs
idivb
sbb
and
inc
push
test
and
pop
pop
ret
popa
pop
shlb
das
ja
inc
mov
jp
cltd
pop
and
xor
push
lds
test
and
adc
lods
xor
icebp
nop
fs
mov
xor
mov
mov
xor
dec
xchg
orl
and
xor
sub
sbb
pop
dec
int3
sub
jl
sti
xchg
mov
dec
out
pop
in
inc
or
inc
sbb
int
push
or
add
mov
enter
mov
sbb
or
cmpsb
addl
jmp
lret
mov
lock
inc
test
mov
pop
mov
es
push
mul
mov
xor
insl
mov
leave
das
aaa
push
fcmovnu
xor
and
pop
xor
xor
mov
shlb
mov
leave
jmp
cmp
int3
imul
pop
sbb
mov
clc
in
mov
orb
ja
ljmp
or
addr16
lret
repnz
scas
cld
and
pop
push
stos
sub
call
pop
adc
sub
pop
xlat
mov
xor
sub
and
cmp
xor
stos
adc
lret
pop
scas
add
mov
pushf
addr16
push
clc
or
xchg
add
dec
push
adc
dec
cmpsl
sub
push
sub
jns
aam
xchg
cmc
mov
lcall
and
lcall
add
sahf
movsb
in
insb
sar
push
scas
adc
imul
push
sbb
pop
ret
mov
mov
int3
adc
xlat
fistl
cmpsl
and
outsl
pop
insb
fiadds
cmp
lock
movsl
pop
popf
push
push
or
pop
sti
mov
fisttpl
popf
or
dec
sbb
mov
inc
pop
and
sub
iret
out
adc
sti
cltd
fisttps
jnp
loop
addr16
mov
stc
inc
imul
addl
arpl
leave
adc
out
mov
add
enter
inc
pop
mov
fistps
xor
jp
dec
outsl
stos
dec
fwait
push
adc
dec
push
fs
insl
mov
std
in
adc
leave
jns
insl
imul
dec
nop
mov
xchg
add
xor
push
pusha
int
movsl
cmp
int3
push
sub
cs
bound
or
adc
nop
lret
inc
push
ja
or
ss
inc
jne
sub
mov
ffreep
arpl
ret
jbe
lcall
xchg
insl
sub
or
cmp
xlat
sbb
lahf
es
dec
inc
sub
cmpsl
aaa
loope
xchg
push
into
pop
pop
cmp
insl
xchg
pop
cld
test
jbe
addr16
lahf
push
xor
aam
js
pop
dec
jbe
push
mov
xchg
out
pop
add
fsubrs
sbb
jg
sub
fucomp
mov
sub
lret
mov
fsubl
pusha
data16
inc
sti
mov
push
inc
cmpsl
mov
push
adc
out
fistpll
je
popa
inc
cmpsb
xor
jnp
into
xor
ret
idivb
jecxz
mov
inc
test
sbb
inc
and
and
pushl
jp
xor
inc
cmp
jno
adc
pop
xor
movsl
push
int
sbb
push
cld
sub
xor
fiadds
or
fwait
mov
fisubl
sti
mov
rolb
aaa
scas
je
adc
loope
dec
xor
jecxz
in
push
outsl
out
enter
je
add
xor
and
pop
gs
jecxz
jo
int
add
mov
daa
dec
pop
jo
mov
rolb
adcl
xor
jo
mov
bound
into
jae
cli
sbb
push
scas
cmp
movsl
cli
rcll
dec
ja
mov
lods
add
dec
cmp
jle
jmp
adc
inc
dec
les
sbb
sbbb
fstpl
cmp
push
leave
roll
lcall
xchg
shll
es
fs
cmp
arpl
jmp
lock
cmp
or
inc
scas
xor
sahf
es
in
and
inc
add
notb
and
mov
mov
or
or
cltd
sbb
sub
or
push
mov
xor
scas
push
adc
je
xorb
lcall
push
jne
inc
inc
mov
adc
push
fs
lds
inc
add
pushf
dec
push
rorl
mov
out
ret
test
aam
xor
jbe
pop
idivb
call
mov
dec
int
mov
scas
or
jnp
xor
mov
fwait
jo
rorl
jl
loopne
outsb
rorb
lea
arpl
into
push
mov
jg
leave
jge
fisttpl
repnz
cld
lods
pop
icebp
or
pop
xchg
loop
jbe
daa
lret
aas
dec
rolb
shll
or
sub
jge
xor
pop
aad
xchg
icebp
ljmp
icebp
mov
mov
inc
jnp
lret
clc
inc
jmp
into
pop
and
testl
xor
push
xchg
addl
fbld
cmp
push
and
mov
inc
imul
mov
aam
repz
and
testb
or
inc
cmp
movq
push
dec
call
cld
aam
push
imulb
cmpsl
in
dec
mov
xor
test
jle
jecxz
daa
xor
mov
stos
sub
adc
xchg
dec
shll
fidivl
stc
negl
push
aaa
fwait
test
aas
lods
mov
divl
rclb
push
test
into
mov
mov
out
and
imul
arpl
xchg
sahf
mov
push
adc
mov
pop
lahf
mov
pop
addr16
imul
inc
mov
pop
pop
push
jnp
inc
pop
enter
insb
pop
out
or
and
ss
loop
lcall
movsb
dec
push
mov
cmpsl
fwait
or
jns
add
push
jg
adc
or
mov
jb
pop
mov
mov
ffree
mov
loope
into
fistpl
in
sbb
test
mov
jl
lods
mov
ja
push
in
test
movups
and
fidivrs
sbb
inc
out
pop
jbe
xchg
subl
inc
ss
or
test
sub
fdivrl
and
or
insb
inc
fldenv
out
jbe
jle
out
sub
adc
pop
rclb
icebp
cwtl
lods
and
jb
mov
testl
fnstsw
xchg
sbb
lds
out
stos
adc
or
and
and
mov
rorl
mov
fucomp
loope
mov
ficompl
sbb
dec
repnz
xor
movsl
out
stc
je
add
jno
pop
and
sub
out
adcb
jge
or
cmp
and
icebp
push
mov
leave
xchg
pop
cmp
mov
leave
mov
jle
add
addr16
adc
lret
test
fld1
das
test
adc
sti
lds
data16
push
mov
icebp
test
adc
bound
inc
cmpsb
mov
int3
and
cld
sbb
mov
mov
sub
sub
or
test
jl
push
lds
aad
mov
lcall
fdecstp
sbb
sti
jmp
ja
mov
pop
fwait
push
or
dec
adc
pop
jnp
pop
rcr
dec
lcall
leave
mov
or
xchg
sbb
out
test
xor
lret
shrl
xor
mov
pop
enter
pop
cmpsl
cmp
push
jg
xchg
out
fsubs
cmpsl
shlb
sub
mov
jg
das
jmp
push
xor
sarb
jb
rolb
jnp
push
xchg
pop
addr16
adc
jo
mov
inc
pop
into
iret
push
movsb
mov
aas
into
jg
push
adc
jecxz
pop
iret
pop
lods
ja
xor
sahf
push
enter
test
mov
jns
jne
add
out
scas
bound
orb
insl
loop
or
pop
mov
outsb
cmp
lret
mov
fs
clc
xor
xchg
lret
mov
cld
fists
mov
dec
mul
xchg
jno
daa
cmp
fistpll
mov
mov
or
hlt
fisttps
cmp
xchg
adc
dec
das
sarl
dec
cmpsb
cmp
mov
xor
fbld
fdivrs
pop
fstpt
andb
out
pop
ja
inc
das
xor
mov
push
repz
mov
js
roll
add
bound
mov
dec
sbb
fldl
mov
lods
dec
or
push
outsl
push
gs
loop
mov
mov
lods
gs
insl
je
scas
dec
mov
sbb
cwtl
in
in
add
dec
mov
pop
cmp
test
fists
mov
cmp
cmp
add
xlat
and
dec
push
ja
inc
cmp
insb
arpl
fcomi
dec
cs
mov
inc
push
std
hlt
aam
outsb
test
ja
js
sti
add
fdivs
nop
and
adc
popf
out
rcll
shrl
jo
add
rcrl
xor
test
test
call
mov
sub
les
mov
inc
and
je
sub
aam
xor
int3
out
mov
mov
repz
sbb
lods
xchg
and
dec
add
xchg
mov
pop
mov
push
sbb
shl
in
lods
outsb
addr16
mov
sahf
dec
sbb
sub
dec
fs
bound
fs
jo
js
lods
inc
pop
gs
jne
mov
in
into
popa
jecxz
push
loop
xor
pop
inc
dec
push
lea
imul
pop
xchg
in
gs
outsb
jge
std
push
dec
test
in
stc
movsb
loop
or
jne
xchg
bound
mov
add
adc
push
push
dec
sbb
push
mov
enter
and
stc
and
rcll
xor
mov
pop
test
addb
cmp
push
jno
xor
dec
xchg
stos
mov
ret
sbb
mov
rcll
ret
cli
arpl
mov
pop
mov
push
xlat
jo
out
xor
movsb
aam
das
jle
mov
pop
test
xor
xchg
mov
xor
add
mov
cwtl
idivl
or
repnz
push
jo
aad
sub
nop
mov
inc
push
xchg
insl
inc
mov
mov
repnz
stos
or
xor
pop
gs
xor
dec
sub
daa
push
jnp
cmp
push
cli
rorl
or
sub
jns
lret
icebp
movsl
adc
adc
lock
dec
ss
fistpll
jge
cmp
sub
stc
mov
add
mov
mov
inc
rcrb
in
incl
out
lcall
push
lret
jne
mov
lret
pop
jno
and
pushf
push
sbb
mov
mov
ds
push
or
lret
inc
jl
jl
pop
fisttpll
jbe
xor
push
ljmp
sub
clc
ds
xchg
mov
scas
push
sbb
or
mov
cmp
test
xor
mov
pushf
adc
std
addr16
rcrb
sbb
mov
or
jb
push
jno
push
cmpsb
cwtl
loop
mov
mov
cmp
ds
add
sbb
cmc
mov
or
in
out
cmpsl
push
jle
xlat
cmc
icebp
push
sti
ret
loopne
outsb
cmp
mov
cmpsb
dec
ret
and
and
mov
xchg
xchg
mov
cli
sahf
mov
loop
ficomps
push
outsb
mov
jb
mov
stc
imul
ljmp
push
jae
dec
pop
lea
mov
pop
inc
addr16
ja
cltd
cmp
push
dec
sub
test
sbb
sbb
movsb
cmp
jns
push
xor
mov
mov
sbb
aaa
mov
roll
movsl
jno
xchg
xchg
in
ljmp
push
sahf
mulb
mov
in
cmp
or
in
sub
jae
stos
cmp
iret
lahf
mov
sbb
pop
pusha
mov
stos
sub
test
stc
outsb
inc
data16
mov
sbb
cmp
ja
cmp
cltd
add
mov
xor
sbb
es
sub
mov
int
and
lret
sbb
mov
popa
jne
jmp
ljmp
jg
xchg
sbb
cmp
mov
push
dec
mov
sbb
push
test
pushf
add
adc
jae
or
add
lock
adc
mov
loopne
enter
mov
pop
xchg
icebp
add
out
add
add
adcb
into
inc
int
hlt
add
fwait
push
dec
xchg
xchg
inc
and
mov
hlt
push
dec
aas
pop
jmp
repz
dec
sarl
pop
lea
inc
insl
or
jmp
lahf
sbb
mov
decl
mov
or
fwait
bound
or
int3
addr16
and
cmp
ficompl
add
push
add
lock
ficompl
inc
jnp
adc
dec
mov
xchg
nop
int3
mov
dec
xchg
ja
dec
pop
add
je
inc
int3
fidivrs
inc
mov
jo
stos
lahf
mov
sbb
test
sbb
dec
dec
out
loope
notl
jb
adc
or
xor
int3
int
adc
mov
shlb
insb
xor
test
dec
fistpl
push
movsb
imul
dec
pop
mov
scas
fldcw
orb
fsub
cmp
jp
testl
xor
fdivr
ret
into
addr16
hlt
int
mov
pop
mov
push
sbb
and
push
push
pop
and
sbb
push
shlb
sarb
cltd
push
int3
pop
sbb
xlat
push
in
mov
add
pop
xchg
xor
repz
pop
mov
lcall
out
push
lods
rolb
mov
jb
and
repnz
popa
xor
lock
into
dec
mov
pop
fcoms
ret
push
pusha
mov
sub
cli
frstor
dec
or
jb
out
sub
xchg
loope
push
push
fildl
popa
lea
jno
popf
xor
adc
xchg
cmp
mov
movsl
rorb
jmp
sbb
or
dec
or
push
test
push
lods
imul
lret
push
mov
mov
cwtl
stos
pusha
adc
loope
gs
or
adc
or
test
adc
dec
lea
fs
jle
gs
adc
das
mov
jmp
or
cmpsl
cmpsb
fs
or
test
nop
dec
mov
xlat
iret
mov
cmp
sbb
es
fisttps
adc
outsl
cwtl
add
mov
icebp
mov
test
and
xchg
pop
shrb
out
sub
insl
jnp
incb
lea
push
mov
sbb
stos
cmpsl
mov
push
cmpsb
sbb
fimull
push
dec
mov
cmp
in
jne
jmp
mov
nop
jmp
adc
mov
out
bound
cmp
in
clc
mov
xor
sbb
add
jp
fsubs
mov
rclb
inc
pop
loopne
jle
jp
sub
pop
out
inc
inc
sbb
cld
mov
aas
jno
pop
jmp
xchg
adc
inc
cmp
stc
mov
xchg
lea
les
je
sahf
aam
cmc
in
sbb
push
out
in
sub
inc
push
out
push
repnz
adc
aas
add
fildll
ds
loopne
jp
shr
popl
sahf
roll
or
jnp
sbb
insl
ds
into
push
loopnew
daa
imul
int
xchg
mov
ds
das
js
jp
mov
cmp
add
add
and
inc
stos
mov
pop
cmc
les
popf
iret
xor
cmp
gs
mov
mov
dec
lret
sti
pop
xor
jnp
lret
fisttpl
and
jecxz
cmp
js
jl
popf
enter
rcrb
jmp
icebp
lret
xchg
add
jecxz
fistps
jno
cmpsb
xchg
or
je
pushf
leave
dec
rolb
inc
dec
cmc
pushf
fsubl
iret
dec
out
stos
lret
jb
lret
cmpsb
add
xor
pop
lods
in
adc
mov
scas
push
mov
xlat
scas
adc
test
cltd
sbb
inc
out
call
cltd
sbb
je,pn
push
lock
fs
jecxz
push
sub
leave
loop
pop
sub
mov
addb
loopne
je
ljmp
jecxz
cmp
fucomp
push
into
push
movsl
xor
inc
cmpl
push
xor
add
cmp
jmp
push
add
mov
jmp
lret
or
or
outsb
incb
cmp
lret
rorw
out
cmpsl
leave
imul
mov
xchg
mov
push
push
xchg
and
mov
add
jbe
fucomp
jns
dec
and
push
pop
iret
xchg
lcall
repz
and
movsl
mov
sbb
mov
lds
push
xor
mov
aam
sbb
lret
jno
mov
push
arpl
sub
shlb
push
sub
pop
aam
enter
rep
ret
add
popf
scas
push
aad
enter
scas
pop
xchg
sub
mov
xor
sub
arpl
lret
mov
hlt
or
ljmp
pop
lods
pop
jo
mov
test
imul
in
loope
xor
xchg
fisttpl
mov
shlb
and
js
pop
popf
dec
xor
in
xor
stc
cmp
fwait
add
xchg
repnz
lock
sbb
fs
fs
cwtl
xor
scas
xchg
aam
push
cmc
fmulp
popf
xchg
fistps
pop
or
dec
inc
sbb
adc
shl
mov
shr
xchg
imul
sub
cmp
sub
push
std
xchg
rcl
fs
sti
xchg
rolb
cmp
mov
push
add
push
mov
xchg
icebp
rcrb
shll
into
dec
dec
lea
cmp
jbe
mov
mov
repnz
adc
pop
mov
aad
sti
inc
bts
jb
fwait
in
xchg
test
pop
out
aad
xchg
xchg
mov
popf
cli
mov
fxch
or
pushfw
xchg
jmp
cmc
cltd
add
inc
pop
fucomp
mov
icebp
pop
in
and
ret
xor
frstor
or
jecxz
cmpsb
fdivrs
inc
mov
popf
or
div
cwtl
push
mov
add
mov
into
inc
enter
push
and
out
loope
sub
addb
ret
sbb
xchg
mov
gs
jo
lcall
jmp
outsb
stos
loop
push
mov
cmp
cld
andb
imul
lods
out
cmp
pop
sbb
stos
mov
pop
adc
int3
test
pop
sub
sti
or
lahf
lods
mov
pop
std
mov
mov
insl
sbb
mov
ja
es
mov
mov
into
cmp
and
or
xchg
jg
or
scas
daa
rcll
pushf
sbb
mov
aad
call
in
fiadds
rcll
mov
jno
in
out
jo
rorl
mov
mov
mov
aas
sbb
pushf
mov
outsl
hlt
cmp
or
sbb
imul
lock
daa
and
mul
fcoml
jo
lret
jnp
adc
or
nop
or
jo
lret
repnz
jnp
mov
mov
or
add
and
xchg
into
and
imul
je
dec
cmpsl
xlat
lock
ret
or
sahf
xor
loope
jl
sub
dec
sub
xlat
cmp
mov
dec
mov
xor
adc
xchg
fsubs
mov
in
nop
pop
jge
and
sbb
test
ss
popa
pop
add
sbbb
cmp
xchg
and
or
jecxz
and
push
xor
pop
shl
pop
and
mov
std
out
fdivrp
movsb
push
fwait
out
pop
sbb
mov
add
xor
jg
sahf
es
sub
mov
cmp
fcmovnb
mov
mov
mov
pop
out
jae
dec
sub
into
mov
sbb
push
aam
jo
xchg
push
and
test
loope
inc
aaa
cli
jge
stc
xchg
xor
and
push
in
xchg
adc
jbe
or
mov
mov
pusha
into
sahf
lock
and
out
fstpt
adc
or
sub
sub
push
lock
out
pop
inc
mov
fstpl
call
xorb
pop
dec
arpl
pop
aam
mov
pop
js
jg
push
iret
mov
ret
push
fadd
test
mov
inc
sub
sub
inc
jle
mov
bound
dec
lcall
iret
sub
lock
xchg
icebp
jno
ret
jmp
pop
inc
inc
aas
rolb
adc
es
or
mov
ds
add
push
inc
sub
jge
je
xor
jnp
rcll
cltd
or
andl
dec
xchg
nop
stc
je
pop
fsts
dec
inc
push
les
stos
add
mov
sub
rcrb
mov
ljmp
or
cld
stos
xchg
xor
dec
inc
stos
and
xor
nop
adc
mov
rcl
xchg
std
arpl
push
xchg
pop
mov
mov
push
sub
bound
xor
rcl
mov
std
ljmpw
int3
or
xor
xchg
imul
cwtl
andl
pop
adc
idivb
sub
loope
xlat
xchg
pop
mov
xchg
and
push
xchg
les
ja
jecxz
adcl
mov
fldcw
mov
leave
pop
mov
mov
sti
xchg
movsb
jmp
leave
leave
ljmp
popa
add
and
pop
jb
adc
std
sbb
dec
cmp
xor
shlb
enter
dec
xchg
clc
inc
scas
sub
stos
mov
push
mov
jns
push
out
aas
scas
or
jno
jg
xor
and
inc
pop
and
xor
sub
xor
mov
adc
cmp
dec
xchg
iret
int
mov
jns
pushf
dec
adc
cmp
xor
adc
jecxz
pop
pop
mov
mov
subb
divb
js
mov
fisubrs
or
mov
test
xor
cmp
mov
pop
arpl
jmp
ror
js
jo
xchg
les
or
xor
inc
movsb
push
inc
out
shlb
fists
xor
nop
jmp
hlt
cltd
add
mov
loop
int3
lret
jns
pop
into
shlb
dec
xchg
aas
jne
sbb
bnd
add
out
sbb
jle
jns
cltd
lret
dec
outsl
divl
mov
dec
inc
addr16
rcrb
push
sbb
sti
adc
dec
push
mov
pop
fidivrs
stc
out
and
popf
je
icebp
int
pop
xchg
add
dec
adc
jle
test
jo
sub
cld
pop
aam
lods
mov
js
sbb
inc
jno
adc
add
dec
and
sub
test
adc
dec
sbb
test
sub
stos
dec
mov
inc
lcall
jmp
jae
dec
js
in
xlat
lock
fiaddl
xchg
inc
test
popf
shll
outsb
insb
ljmp
lods
fadds
fisubrs
dec
xchg
pop
adc
lds
sarl
dec
scas
or
cmc
imul
xchg
add
xor
mov
sar
adc
add
sti
xor
mov
mov
rcrl
adcl
insb
or
jp
out
sbb
add
jb
jnp
ljmp
sbb
xchg
mov
cmp
cmc
test
xchg
push
enter
mov
pop
shlb
and
iret
test
or
sub
and
xor
es
adc
in
mov
imul
cmp
call
jl
call
dec
or
mov
dec
jo
in
mov
test
push
scas
lods
imul
fdivs
add
add
call
pushf
fwait
mov
adc
hlt
gs
cmpl
iret
sub
bound
daa
leave
add
jo
dec
pop
popa
icebp
insl
iret
shlb
loop
into
sbb
adc
loop
mov
fstps
adc
rorl
cwtl
cli
cmp
insl
sbb
cwtl
jle
sbb
pop
not
outsl
lock
leave
inc
aad
add
cmp
inc
push
inc
fbld
jecxz
jp
lea
and
iret
stc
cmp
xchg
xor
or
xchg
inc
push
dec
dec
insl
loopne
cmp
les
in
jle
mov
dec
push
cmp
cld
add
arpl
sbb
bt
test
push
mov
lcall
jbe
nop
es
test
int
mov
jb
shll
dec
test
jl
mov
cmp
ret
xor
nop
dec
scas
and
rorl
outsl
add
push
movsl
adc
cltd
in
sarl
not
adc
mov
icebp
push
int
mov
loopne
addr16
adc
sub
subl
fneni(8087
arpl
pop
inc
mov
clc
sub
jecxz
inc
test
jmp
out
enter
dec
mov
leave
cmp
ljmp
pusha
adc
add
loopne
xor
push
mov
loop
addr16
dec
mov
neg
int3
add
pop
xchg
daa
adc
movsb
or
sti
ret
lds
jecxz
or
push
les
les
mov
xchg
mov
std
ja
xor
negl
arpl
adc
sub
into
scas
fstp
pop
imul
sti
inc
pop
loop
frstor
loop
gs
jl
out
cmc
mov
testl
xor
push
outsb
or
ss
test
or
rcll
cld
xlat
cmp
andl
ret
jle
inc
mov
loopne
lret
push
bound
add
test
lret
imul
stos
mov
jp
sbb
mov
adc
fcomp
sbb
mov
mov
jo
add
movsl
inc
movsl
pop
push
testb
mov
movsl
je
in
xor
dec
lock
ret
lahf
gs
pop
dec
push
icebp
or
fstl
xor
xchg
in
adc
pop
sub
sub
aaa
int3
sbbl
rorl
add
pushf
dec
mov
movsl
insl
jmp
add
lret
cs
mov
sub
stc
nop
inc
mov
mov
scas
lret
iret
sbb
test
pop
test
inc
or
dec
out
test
mov
pusha
mov
lods
mov
sbb
mov
push
popf
pop
sub
xchg
mov
dec
scas
sbb
mov
insl
add
scas
push
adc
mov
fnstsw
cmc
mov
aaa
jns
sub
cli
mov
test
je
int3
and
cmpsl
insb
jne
add
dec
sbb
call
testl
mov
cmp
jle
rorb
ss
jno
jle
cmpsl
lods
aad
mov
call
mov
push
es
insb
outsb
popa
or
shlb
aam
mov
sarb
inc
imul
dec
pusha
xchg
push
stos
cmp
adc
push
xchg
ss
scas
test
mov
or
mov
cs
or
mov
mov
sbb
sub
xchg
and
sub
mov
dec
xchg
and
fisubl
push
mov
xchg
pushf
insb
adc
push
fnsave
mov
jmp
xor
call
jl
and
jno
icebp
add
inc
xor
add
cmp
cmpsb
repz
pop
xchg
inc
dec
lcall
cmc
mov
imul
jmp
cmp
adc
dec
fidivl
inc
cmp
mov
jmp
mov
rcr
ds
mov
mov
mov
add
pop
insb
loopne
pop
push
lret
test
xor
xchg
add
sbb
aaa
cwtl
inc
out
in
or
cs
pop
sti
out
mov
nop
xchg
popf
mov
add
rep
mov
cmp
mov
in
out
ss
leave
sub
push
icebp
mov
outsl
cmpsl
push
je
and
or
dec
pop
lds
xchg
and
push
outsb
inc
pushf
icebp
add
mov
insb
es
test
fildll
push
js
push
test
enter
xor
daa
sbb
dec
mov
sahf
pop
popl
pop
inc
mulb
shll
inc
sbb
je
outsb
jns
cltd
sti
lods
nop
cld
mov
movsb
lahf
inc
fstpl
push
inc
sbb
fmull
adc
popf
or
pushf
sbb
sub
sbb
adc
push
in
in
cwtl
lret
ljmp
jl
in
pop
dec
clc
jb
xor
dec
andl
mov
xchg
pop
add
aam
ljmp
dec
and
ret
icebp
divl
mov
pop
mov
or
stos
fnsave
jae
jmp
jo
xor
fsin
fmuls
fstl
insb
lret
xchg
pop
inc
loopne
push
pop
mov
leave
xchg
in
imul
jne
cmc
and
popf
xor
sahf
sahf
push
in
mov
iret
test
adc
mov
inc
das
les
clc
aas
imulb
xchg
add
inc
push
xorb
mov
roll
testl
pop
jle
movsl
add
xor
pop
jbe
push
adc
adc
repnz
push
loop
cmp
jp
icebp
loop
sub
mov
outsl
lahf
rolb
rcll
je
push
popa
cmpsl
in
faddp
or
jle
cmp
inc
mov
mov
add
or
cld
xor
loope
adc
faddl
xor
popf
std
insl
leave
adc
cli
iret
int3
imul
cltd
popf
mov
shll
pop
xchg
clc
add
adc
cmp
mull
xchg
dec
out
jl
mov
sbb
jl
mov
fsub
push
push
call
mov
jl
std
es
stc
cmp
lock
scas
imul
sarl
call
cmp
xor
aaa
dec
test
imul
mov
sahf
xchg
mov
fisttpll
xchg
push
scas
jae
jmp
data16
xchg
push
sub
mov
idivl
movb
sbbl
sti
jo
cmpsb
cltd
pop
insb
pop
popf
in
xor
clc
dec
push
hlt
add
dec
xlat
mov
sahf
push
cmc
addr16
and
dec
push
cli
scas
mov
dec
xchg
cmp
cwtl
adc
jecxz
nop
xlat
push
xor
adc
int
dec
out
mov
adc
iret
add
imul
outsl
daa
jge
add
iret
or
popa
insl
push
cmp
adc
insb
push
pushf
push
adc
mov
jo
pop
sahf
repnz
sahf
mov
pop
adc
std
clc
jae
pop
inc
xlat
fcoml
jnp
inc
rorl
pop
dec
pushf
cwtl
or
mov
dec
push
add
pusha
fcmovb
jg
ret
jno
enter
shl
dec
fdivl
or
mov
in
sbb
clc
outsl
xchg
ja
in
cmc
xor
push
lret
mov
call
xlat
jnp
push
icebp
cwtl
es
and
insl
sti
mov
insb
and
dec
pop
test
mov
scas
test
inc
je
repnz
imul
ds
xchg
insl
and
jmp
das
inc
hlt
lods
jns
imul
xor
jns
daa
or
sub
enter
shr
mov
xor
and
mov
and
xor
or
mov
stos
or
cmovns
xchg
add
rorl
clc
shl
jmp
icebp
jb
or
fnsave
add
jnp
out
int3
mov
lods
cli
xchg
xor
movsb
jns
dec
fcomi
sbb
fwait
cmpb
lds
jp
addb
jb
mov
aaa
pop
or
enter
push
mov
ret
push
mov
pushf
call
and
out
sbb
insb
and
lock
sbb
adc
add
xchg
out
repz
ret
pop
fidivs
fcmovnb
cmp
sbb
push
cmp
aas
je
sub
addr16
jp
scas
test
mov
sbb
cld
pop
push
shlb
out
ficomps
inc
xchg
lcall
ljmp
jmp
sti
add
cli
test
repnz
adc
or
fwait
addb
adc
sub
or
sub
aad
dec
or
es
sub
insb
and
aam
pusha
pop
mov
repnz
cltd
in
roll
mov
push
sub
add
dec
inc
mov
clc
das
mov
in
inc
mov
lcall
outsb
popa
push
mov
cld
imul
mov
enter
xor
push
stos
jg
testl
pop
in
dec
xchg
fsubrs
inc
or
jo
push
mov
aam
add
push
rcl
in
push
xor
mov
in
stos
sbb
ret
fs
loopne
mov
sti
jne
fildll
cwtl
into
rcl
or
inc
stos
cld
or
or
insb
nop
lds
cmp
rcl
adc
inc
les
js
mull
leave
mov
loop
dec
mov
in
sub
xor
shl
mov
iret
lods
popf
push
dec
xchg
xor
sbb
mov
mov
pop
xlat
mov
xor
mov
dec
shlb
dec
fcmovne
mov
test
lret
pusha
xchg
lods
cmpb
addr16
imul
mov
imull
test
cmp
add
ret
push
ds
inc
pop
call
xchg
sub
pop
push
call
pop
mov
mov
in
dec
dec
xlat
movsb
inc
lock
movl
dec
ljmp
in
test
clc
cmp
mov
jmp
lock
outsl
repz
sti
insb
lret
jae
call
xor
cmpsl
shll
ds
sub
data16
outsb
out
push
in
movsl
mov
pop
push
mov
sub
inc
movsb
sbb
sub
imul
arpl
es
inc
scas
mov
dec
arpl
add
add
decb
cmp
lods
jp
sti
xchg
out
add
pop
je
push
lods
xchg
cmp
iret
ja
into
cmp
xlat
or
jbe
xchg
outsl
mov
mov
fidivrl
negb
sub
in
lods
pop
pop
enter
movsl
xor
add
mov
mov
push
mov
mov
out
cmp
aas
je
ror
dec
bnd
lds
mov
mov
daa
out
loope
or
ljmp
xchg
loope
jno
mov
rol
loop
fcomip
popf
or
es
sahf
jo
stc
adc
sbb
in
jle
in
enter
notl
test
sahf
or
or
orl
insl
xchg
cmp
das
sbb
addr16
pop
fwait
shr
pushf
fdivrs
dec
repz
xchg
sbb
dec
lea
sub
mov
jmp
or
or
fbstp
sti
popa
aas
aam
out
dec
dec
lahf
xchg
push
addr16
pushf
push
movsb
leave
cwtl
out
sarl
out
push
scas
call
ss
mov
pop
fildll
pop
push
pusha
jcxz
push
inc
mov
das
cmp
jne
pop
sub
shr
jecxz
xchg
inc
orl
shrb
mov
xchg
or
repnz
sub
mov
test
aaa
xchg
xor
enter
data16
std
ljmp
add
ds
dec
andb
shrb
or
das
mov
jae
mov
repz
cmp
xorb
lcall
or
test
or
iret
rep
jb
addr16
xor
mov
mov
cmp
mov
or
icebp
cli
push
mov
lcall
hlt
ret
test
lock
pushf
mov
mov
lods
push
ja
xchg
push
mov
lock
or
sti
mov
mov
jbe
pop
and
add
push
pop
subb
adc
or
or
adc
push
imul
xchg
rclb
decl
pop
stos
or
jl
stc
add
or
xchg
imul
sbb
mov
into
aad
xor
mov
cld
outsb
mov
jno
insb
or
jecxz
push
aad
loop
das
sub
mov
jge
jg
aaa
xchg
pop
bnd
outsb
sbb
cmpsl
jbe
arpl
xor
popf
adc
fldenv
loope
push
lea
lock
loopne
lcall
bound
dec
inc
dec
mov
pop
test
das
loop
loop
xchg
fsts
and
lret
popa
imul
ret
push
outsb
enter
loope
push
rorb
lods
cmc
imul
xorb
jo
mov
cltd
push
repz
sbb
pop
cld
test
sarl
mov
mov
inc
pushf
jp
or
loop
rcrb
mov
adc
popf
mov
faddl
push
clc
dec
and
icebp
mov
pop
movsl
push
repz
sub
lcall
hlt
add
fnstsw
out
xor
xchg
xchg
adc
xor
setge
jmp
jno
add
xchg
das
inc
lods
adcb
and
jge
and
sbb
shr
ja
in
lret
dec
xchg
jl
adc
lock
dec
insl
fwait
mov
lods
inc
call
int
pop
jmp
mov
adc
les
stc
push
stos
xchg
sarb
scas
sub
or
ficoml
ja
xchg
inc
pop
std
xchg
ljmp
adc
and
sub
mov
xchg
xchg
mov
mov
stos
sub
xchg
cmp
sti
push
popf
nop
mov
sbb
dec
and
stos
mov
int
scas
lds
dec
iret
popa
or
mov
xor
pusha
xor
xor
sub
leave
xchg
iret
es
cmc
mov
cmp
cld
mov
xchg
pop
scas
lds
cmp
aad
pop
adc
popa
xor
mov
out
hlt
jp
sub
or
aaa
mov
mov
inc
repz
js
lds
inc
pop
push
and
mov
xchg
inc
push
lock
out
mov
fnstenv
cmp
mov
push
dec
rorl
mov
sub
mov
push
rorb
sbb
lds
ret
jae
rorb
inc
push
or
ljmp
sub
lret
lea
pop
dec
stc
push
push
dec
pusha
inc
fists
lock
lods
shrb
pop
insl
iret
push
orl
test
jnp
jle
jnp
pop
pop
roll
or
repnz
stos
jae
int
or
push
pop
push
and
rolb
stos
fsts
ljmp
repnz
add
xchg
xchg
xchg
or
push
jg
and
test
fwait
sub
and
out
jns
int
mov
inc
lea
dec
cli
sbb
jb
enter
sti
imulb
xchg
test
cmp
push
cmpsl
fdivl
push
insb
inc
lea
xor
cld
dec
lahf
adc
push
lock
adcl
fwait
std
lret
mov
mov
xchg
loop
cltd
dec
outsl
out
sub
dec
cs
pusha
sbb
sbb
hlt
adc
fstps
inc
cmpsl
repz
cmc
jl
mov
or
xor
push
xor
mov
sub
pusha
sarb
mov
push
jbe
lds
outsl
pop
movsl
mov
add
mov
dec
push
mov
add
outsl
mov
sub
cmp
inc
sub
scas
lea
pop
or
dec
mov
in
or
push
mov
sarl
cmp
inc
cmpsb
lea
mov
jo
or
sbb
cmpsb
lods
pop
rcrl
cmp
jmp
push
bound
sbb
orb
cmp
popa
js
fdivrl
in
scas
sbb
dec
mov
lods
inc
fimuls
cmovp
xchg
inc
add
inc
popf
add
sbb
scas
iret
push
imul
cld
jle
jae
out
xor
xor
xchg
inc
sub
mov
dec
shll
dec
xor
aas
imul
cmp
jnp
fisttpl
cld
cwtl
in
jl
mov
push
sbb
jg
xchg
adc
pop
inc
mov
xchg
inc
in
scas
sub
xchg
ret
popl
ret
loop
dec
xchg
cmp
imul
test
and
push
fdivrl
add
add
fcmovnbe
insl
push
cmpsb
into
and
mov
das
xor
aaa
push
inc
test
sub
mov
jno
jge
jnp
push
pop
pusha
aam
enter
lret
inc
pop
es
std
rclb
xchg
push
mov
mov
sbb
imul
jb
pop
loop
pusha
adc
xchg
jnp
daa
jne
inc
aaa
dec
nop
inc
lcall
rolb
ret
pop
adc
or
xchg
pop
fmul
out
inc
aaa
shll
sbb
dec
push
mov
or
ds
je
xchg
cmp
xlat
es
or
sub
cli
mov
sub
iret
out
xchg
or
fs
mov
xchg
inc
outsb
lea
push
and
stc
mov
mov
aas
xchg
mov
xchg
adc
loope
sbb
into
push
inc
in
cli
das
cmp
lret
sub
sahf
xlat
out
jp
into
xor
and
stos
xchg
or
in
repnz
aad
mov
jae
pop
mov
mov
shlb
out
ficompl
sub
ja
mov
aad
xchg
jge
xchg
addr16
cmp
or
jp
pop
sahf
incl
es
push
call
mov
lcall
mov
mov
and
lods
cbtw
ficoms
cmp
repnz
pushf
xchg
dec
aad
lods
in
adc
sub
out
cs
xchg
push
mov
addb
and
int
popa
leave
or
ja
imul
int
fidivl
out
mov
cmpsl
cmp
sub
mov
fmull
sbb
cld
lcall
inc
stos
rolb
push
mov
push
jmp
push
pop
push
xor
inc
test
inc
das
pavgb
testb
jb
lock
cmp
dec
fisubl
out
ja
ds
ds
ret
movsl
jmp
repz
in
inc
out
jl
sub
in
xchg
pop
mov
ss
xchg
mov
in
cmp
cmpsl
cmp
out
push
or
insb
add
xchg
jge
ficoml
enter
ret
int
aam
dec
repz
dec
mov
xor
rorl
adc
mov
push
or
push
xchg
mov
fdivrl
cld
call
fstl
jbe
aad
xor
pop
inc
lcall
leave
cmp
add
aam
and
xchg
cmp
inc
in
into
lret
std
std
sbb
xchg
mov
push
push
adc
inc
xchg
out
out
sbbl
mov
lahf
pop
mov
xor
lret
xor
adc
push
data16
je
bound
icebp
mov
push
dec
shr
add
dec
iret
mov
mov
and
adc
mov
lret
xor
shrb
popa
pusha
adc
dec
inc
lahf
push
mov
fnstenv
cld
pop
mov
inc
stc
insb
push
fldenv
mov
fdivrs
xchg
sarb
cmc
ficoml
jae
sub
stos
lcall
andb
mov
lcall
es
sbb
cli
adc
inc
dec
jno
xor
dec
push
ljmp
js
sti
add
sbb
loope
mov
sub
mov
dec
stos
xchg
jno
mov
aas
dec
enter
fistpll
stc
test
stc
dec
add
push
adc
jl
fimuls
jbe
xchg
adc
inc
sub
scas
enter
mov
dec
outsb
mov
jno
push
insl
adc
aam
das
out
inc
addr16
dec
fs
addr16
inc
xchg
test
xchg
cli
test
sbb
insb
mov
push
pop
pop
cmc
nop
fs
mov
mov
fimuls
insl
push
mov
mov
dec
xor
mov
adc
xor
xchg
adc
bnd
xchg
js
imul
dec
xchg
pop
jns
sbb
lea
stc
xor
xchg
lahf
mov
jno
sub
pop
push
or
js
pop
lcall
gs
pusha
jp
dec
fisubrl
nop
pop
outsl
adc
xlat
sbb
in
xor
movsl
jns
dec
jecxz
mov
cs
sub
mov
lds
push
or
jae
std
jl
mov
bound
cli
mov
lock
mov
sub
jnp
std
mov
sub
faddp
call
aad
fdivl
iret
rcrl
push
subl
jg
sub
push
jne
sbb
insl
fildll
enter
cmp
add
jae,pt
ss
sub
leave
mov
les
fucomi
inc
enter
mov
xor
dec
inc
or
inc
hlt
dec
bound
xchg
adc
xchg
pop
jbe
sarl
imul
subb
push
sub
mov
aas
out
xchg
inc
lods
insl
jp
push
mov
cli
sbb
push
jg
add
lock
rorb
cmp
jmp
out
cmp
mov
sahf
ret
aam
imul
mov
dec
adc
rcr
sbb
fdivrs
ret
push
xchg
movsl
mov
loope
dec
xchg
push
sahf
xchg
inc
dec
lahf
jnp
mov
dec
loop
sbb
inc
jnp
test
mov
test
mov
sahf
mov
push
insl
pop
xchg
not
mov
and
and
mov
out
adc
push
mov
xor
or
mov
loop
lea
xchg
jmp
xchg
fstpl
mov
data16
test
xor
js
mov
mov
fiaddl
push
mov
into
sbb
xchg
push
mov
cli
popa
or
mov
stos
cmc
ret
ret
cmp
mov
and
or
fwait
stos
aas
mov
push
jmp
add
xor
dec
out
add
shll
enter
cmp
cmp
jno
push
pop
xchg
push
addr16
mov
daa
pusha
ret
aam
je
xor
mov
sub
mov
xchg
or
lods
jb
add
push
mov
lock
jo
fidivrl
pop
scas
sub
xor
or
jg
inc
mov
call
das
fidivrl
mov
add
cmp
subl
cmp
aam
jmp
xchg
fwait
xchg
cwtl
pop
sbb
or
jbe
inc
les
mov
cmp
dec
cmp
mov
push
aaa
ret
notl
jo
test
cmpsb
mov
in
cmpsl
or
fisubl
jnp
dec
or
loope
js
stos
mov
mov
xchg
in
rcrl
pop
xchg
scas
jmp
hlt
fidivrs
and
and
push
sbb
cltd
sbbb
push
push
adc
cmp
ljmp
ret
xchg
inc
jle
into
jne
sarb
fisttpl
pop
mov
add
dec
inc
sbb
test
enter
jmp
sbb
jo
lret
pusha
push
cmp
xor
pushf
pushl
cwtl
leave
fs
mov
loopne
push
or
addl
gs
aas
jg
movsl
int3
jl
mov
aas
push
mov
adc
aaa
ljmp
inc
sbb
mov
lret
push
jecxz
xor
outsl
aam
lret
std
lods
adc
js
mov
sbb
push
dec
xor
outsl
lret
cmp
jb
lock
ficompl
les
subl
aam
out
cmp
ljmp
jl
mov
sub
outsb
dec
xchg
jecxz
rclb
dec
sbb
ja
mulb
dec
loop
dec
insl
mov
xor
or
fildl
sub
das
mov
js
mov
fdivl
push
mov
jl
jb
mov
outsb
sbb
sbb
inc
sahf
imul
push
cltd
pop
test
xorb
lret
inc
lret
mov
jl
in
mov
push
xchg
adc
lret
daa
aas
imul
pop
xor
xor
pop
rol
xor
mov
mov
stos
dec
mov
scas
push
lea
sub
dec
pop
shrb
push
out
cmp
pushf
mov
cmp
pop
mov
lock
pop
es
and
sti
fiadds
xchg
and
out
mov
pop
sbb
xchg
movsl
sub
sbbl
adc
rcrl
sbb
xchg
iret
sbb
std
mov
inc
fdivr
pop
jecxz
sbbl
fcompl
aad
mov
jbe
xor
add
push
cli
inc
add
or
aam
mov
clc
ljmp
movsl
or
mov
cmpsb
mov
imul
insb
stos
scas
repz
push
out
stos
in
jge
mov
popa
xor
add
mov
adcl
dec
sbbb
xchg
push
movsl
mov
adc
aam
adc
push
cld
and
out
ja
sarb
pop
cmp
inc
jge
stos
out
xchg
pop
ss
fsts
ds
or
loop
push
test
mov
int
push
xor
mov
outsl
mov
jo
mov
add
xor
les
fldt
or
jl
dec
sbb
in
xor
mov
daa
ja
jno
xchg
sub
xor
add
adc
test
xor
stos
pop
push
and
lret
pop
movsb
flds
std
incb
mov
push
lret
xor
push
pop
jecxz
das
and
sbb
out
mov
fsubs
pop
inc
add
sbb
ja
cmp
cld
jne
pop
cs
add
push
dec
sub
int
mov
stos
pop
cmc
imul
mov
mov
mov
cmpsl
or
sti
stos
scas
jmp
addr16
jo
cld
or
push
arpl
dec
jge
int
push
sub
andb
popf
jmp
push
fisttpl
pop
or
fnsave
lret
inc
dec
lds
mov
scas
xor
popa
call
int
sub
xor
push
stos
lahf
rcrl
mov
mov
shrl
mov
inc
outsl
cs
ret
mov
in
movsb
lret
mov
xor
test
push
jne
mov
adcl
mov
jae
sarb
lods
std
xchg
les
and
incb
stos
mov
mov
pusha
rcl
fists
jne
test
mov
sbb
aad
mov
mov
decl
mov
jmp
add
insl
cmp
subb
xor
das
outsl
mov
jns
in
xchg
ret
andl
sub
cmc
cmp
pop
js
or
cmpsb
ss
mov
adc
push
out
or
sub
out
inc
fcomi
mov
xchg
pushf
cmp
cmpsl
cmpl
das
or
cmp
add
lahf
insl
fadd
negl
fidivrl
cmc
pop
cli
outsl
ljmp
mov
or
fdivr
ds
mov
xor
xor
lahf
aad
sbb
xlat
fwait
and
out
inc
imul
imul
data16
mov
clc
xchg
mov
daa
xchg
outsl
mov
rcr
dec
push
in
xor
or
cmpsl
enter
pop
sahf
sub
daa
cmp
punpckldq
mov
sbb
std
int3
repz
pop
addr16
mov
ficoms
sbb
fbstp
imul
ss
jno
loope
dec
xchg
mov
insl
aam
adcb
add
fcoml
mov
test
push
pop
les
das
ret
xchg
fstpl
xchg
das
jmp
sbbb
pop
mov
mov
movl
dec
push
lods
shl
lret
push
lea
add
cmc
dec
sahf
mul
hlt
xor
push
shlb
mov
inc
pop
lods
xlat
xor
mov
ja
je
inc
in
mov
pop
mov
sub
bound
jo
and
push
mov
xchg
xor
sub
ret
jb
jbe
push
mov
jecxz
sahf
xor
in
push
pop
and
sbb
jns
lea
adc
mov
mov
imul
cmc
xchg
dec
push
loope
pop
push
mov
jbe
sub
lock
mov
aas
adc
shrl
pop
jne
arpl
push
jne
push
dec
push
dec
push
out
nop
sbb
fmul
sahf
push
mov
xchg
adc
les
rcrl
movsl
jge
rorb
lods
sub
fs
inc
cmp
shrb
mov
mov
sub
push
int
cmc
jb
into
mov
cmpb
mov
rorl
mov
add
xchg
test
imull
stos
lock
stc
dec
mov
gs
mov
shl
xlat
dec
lcall
test
jne
xchg
push
xor
or
jl
pusha
inc
mov
push
push
adc
mov
inc
cmp
in
rcll
addr16
add
jns
insb
add
adc
test
inc
lret
out
addr16
jo
in
mov
inc
adc
sbb
iret
sbb
mov
pop
das
mov
mov
xlat
fsubs
sub
pop
or
push
ret
out
mov
sub
mov
insl
xorb
mov
push
xchg
call
jmp
xor
push
sub
cmp
js
sub
mov
insl
adc
lret
shlb
out
mov
jp
insb
enter
aam
dec
cmp
movsb
mov
sbb
das
xor
inc
ljmp
dec
jmp
loop
sub
cltd
jns
mov
add
inc
fwait
sbb
daa
std
in
xchg
cmp
push
jg
push
loop
leave
jb
pop
and
int
xchg
sub
push
push
fldl
jbe
mov
add
or
pop
scas
cmp
add
mov
lods
jae
inc
or
sar
xabort
jb
pop
mov
lahf
pop
or
push
xchg
data16
xchg
jbe
pop
and
xchg
jg
mov
loope
in
inc
scas
outsl
adcb
add
xchg
bound
inc
jne
aas
cmp
xchg
cwtl
aas
lahf
xchg
push
cmp
arpl
push
cmc
dec
pop
mov
into
fmuls
dec
in
es
andb
mov
push
ss
sti
xchg
shrl
lods
mov
nop
arpl
or
ss
add
jmp
test
mov
push
rcrl
outsb
fstpt
sti
xchg
dec
int
std
aaa
mov
mov
mov
mov
ror
jb
adc
xor
push
mov
sbb
mov
fistpll
hlt
sub
xchg
out
dec
mov
insb
rcll
add
sbb
xchg
repz
fisubrs
mov
push
and
sbb
and
notb
mov
add
stos
test
mov
mov
xchg
pop
sti
sub
push
sub
xchg
xlat
outsb
das
sti
lds
jmp
cld
mov
add
jne
xor
imul
lret
inc
pop
lret
pop
push
ror
dec
push
frstor
pop
icebp
aam
insb
loopne
xchg
pushf
xchg
int
xchg
fwait
sub
in
in
loope
inc
insl
rorl
jmp
es
fsubp
les
pop
dec
cmpsb
dec
push
mov
insb
js
insl
push
jle
out
mov
shll
cmp
jbe
mov
mov
and
daa
mov
inc
imul
out
leave
ljmp
lock
pop
xchg
int
rcr
cwtl
aad
jb
xor
aam
icebp
xor
daa
xor
mov
mov
mov
pop
leave
jp
out
and
inc
imul
pop
push
pop
das
and
loop
lods
test
sbb
gs
jns
pop
mov
adc
data16
add
mov
dec
sub
pop
xchg
out
mov
adc
pop
es
cmp
mov
outsl
subl
mov
dec
enter
cmp
clc
mov
jl
mov
scas
sbb
mov
pop
imul
push
xchg
fisttpl
in
add
imul
sub
push
mov
pop
lret
jle
lea
mov
pcmpeqb
testl
dec
push
aas
subl
sbb
push
inc
rcll
inc
iret
adc
out
xor
push
pop
jbe
bound
or
imul
sbb
sub
mov
push
stc
or
cmp
sbb
insl
cmp
test
jb
ffreep
scas
call
int
int
hlt
xchg
xchg
ret
xchg
or
mov
and
mov
xor
add
nop
adc
adc
xor
aad
push
mov
mov
gs
movsl
enter
aam
insl
and
add
out
pop
enter
mov
ret
sub
xchg
mov
mov
fimull
add
outsl
and
enter
push
push
inc
aam
rclb
xor
popa
sbb
movsl
push
or
aad
xchg
popf
xchg
add
xlat
adc
pop
push
mov
sub
test
fdivrl
inc
pop
clc
imul
jecxz
call
mov
mov
rclb
or
js
call
int3
inc
jg
inc
cmp
mov
mov
insb
pop
fwait
rcll
mov
test
jge
popa
mov
jle
pop
fs
add
inc
dec
xor
int
mov
add
lock
mov
scas
or
jl
pusha
sbb
pop
inc
mov
mov
jp
les
xchg
imul
pop
fwait
jnp
pop
mov
xor
mov
xchg
dec
mov
dec
es
and
mov
scas
mov
das
clc
arpl
sbb
into
lods
stos
arpl
nop
xchg
jae
xlat
aad
stos
or
ljmp
cmp
fnstsw
mov
lock
jnp
mov
xchg
xlat
outsb
in
cmp
arpl
cmp
fwait
repz
sub
mov
out
test
mov
mov
cmpsl
idiv
add
push
outsl
std
push
test
mov
repz
inc
pop
jmp
push
push
mov
imul
and
dec
icebp
clc
imul
xchg
enter
cmp
sbb
fistpl
in
aam
stc
push
cmp
push
jnp
mov
mov
inc
fsubr
push
sub
jp
dec
mov
shr
pop
decb
dec
enter
lea
jle,pt
adc
fistl
mov
xchg
pop
enter
cli
inc
add
mov
mov
adc
int3
adc
in
or
push
loope
mov
repnz
jl
xchg
nop
mov
add
in
inc
add
sub
mov
mov
dec
addr16
mov
nop
lret
dec
test
sbb
into
lahf
repnz
shrb
xchg
or
scas
sbb
sbb
lret
jno
or
jl
mov
add
paddusw
push
mov
fsts
stc
jge
les
xchg
adc
dec
mov
xor
jne
fidivs
insb
stos
push
and
decl
aam
cmpsb
divl
push
mov
outsl
aam
sbb
rcrl
xor
sub
clc
shrb
pop
sub
test
imul
ljmp
jae
jne
test
push
adc
cmp
cmpsb
rcr
enter
add
cld
mov
out
iret
mov
roll
dec
and
or
mov
sub
xor
dec
lret
or
adc
pop
push
ret
cmp
test
jae
shrb
mov
jmp
and
pop
xlat
stos
js
out
sarl
es
int3
addr16
adc
cmpsl
mov
cmp
lds
push
insl
int
adc
sub
cmpsb
loopne
push
pop
pop
inc
lds
push
out
pop
inc
sti
test
sbb
call
sbb
sub
pop
enter
pop
cltd
test
ljmp
paddd
stos
into
std
jb
ror
test
sbb
add
push
inc
mov
movsb
lds
in
pop
mov
add
sub
nop
pop
mov
lcall
popa
aad
inc
popa
pop
add
fildl
stos
add
out
pop
or
lds
push
cli
jae
call
data16
add
lcall
cmpsl
int
ljmp
jmp
incl
jp
cmp
test
mov
lods
mov
into
push
mov
add
clc
add
iret
mov
call
push
dec
std
repz
mov
mov
daa
pandn
add
popf
cmpsb
mov
push
inc
inc
adc
xor
add
gs
sbb
mov
push
cmp
adc
adc
stc
mov
mov
in
sbb
insb
add
and
std
hlt
mov
nop
sbb
pop
movsl
cmpsl
and
outsb
js
sub
repz
cmpsb
jl
push
xchg
int
jae
pop
dec
into
inc
mov
and
adc
pusha
xor
cmovns
popa
pop
jne
mov
mov
les
sbb
push
jp
mov
sbb
rcr
fisttpl
sahf
mov
xchg
sahf
call
mov
out
or
and
dec
inc
pop
ret
push
stos
jg
les
fs
adc
out
lcall
adcb
inc
test
rorb
lods
ljmp
inc
fwait
jecxz
xor
dec
call
leave
in
insl
pop
ficoml
cmpsl
repz
mov
mov
lcall
jnp
jne
mov
ret
ja
mov
arpl
jg
push
push
inc
addl
sub
xor
jbe
popf
or
cli
jmp
xor
outsl
adc
mov
push
ss
fldl
in
push
mov
les
sub
add
int
aam
add
gs
aas
jne
clc
in
mov
fcomps
and
jnp
push
dec
test
mov
sub
bnd
stos
sub
dec
inc
mov
ja
sub
lret
ret
outsb
pop
dec
jo
mov
xor
jg
sub
mov
aaa
and
ja
pop
push
cmp
addr16
scas
cmpsl
lods
fsubs
mov
imulb
pop
pop
push
xchg
push
xchg
add
add
dec
jmp
insl
push
dec
mov
aam
and
or
jbe
mov
xchg
push
pop
push
cmpsb
cs
clc
xchg
adc
ss
dec
push
not
inc
mov
xchg
imull
cmp
add
mov
mov
cmpsl
daa
cmp
jne
inc
adc
out
xlat
and
jne
fisubs
push
mov
push
daa
pop
fld
mov
cmp
pop
mov
xor
xchg
loop
xchg
pop
arpl
lods
or
test
inc
ret
xchg
fnsave
loop
movsb
gs
adcb
add
xchg
lret
xchg
push
add
aas
add
pop
out
push
out
dec
les
pusha
jmp
test
dec
notb
and
imul
in
es
and
roll
cmp
into
dec
idivb
mov
pop
ftst
xchg
test
fstpt
repz
pop
adc
sbb
jle
mov
xchg
pop
imul
dec
push
push
push
into
adc
shrb
xchg
lds
iret
popf
xchg
and
test
inc
cld
xchg
cld
jmp
sarb
add
xor
test
jmp
inc
push
mov
fs
add
iret
add
aas
dec
pushl
out
push
or
adc
inc
add
pop
scas
inc
cmp
cmp
lret
addl
pop
aaa
mov
adc
loope
xchg
in
sbb
mov
jne
push
in
pushf
jmp
sub
and
inc
ljmp
test
movsb
jo
imul
sub
jge
push
mov
pop
and
or
cld
dec
outsl
pushf
shrb
pop
pop
inc
add
out
imul
xor
and
fistpl
sub
test
mov
out
mov
push
jbe
std
xlat
ja
into
repnz
or
push
cs
fcomps
sub
cmp
pusha
pop
dec
cmp
outsl
mov
subl
data16
mov
int
lcall
mov
sub
cwtl
push
shll
data16
bound
mov
sbb
pop
xchg
pop
test
jbe
mov
cmpsl
add
pop
sarb
addl
push
xchg
lret
add
js
mov
sarb
xor
jbe
cmpsb
push
popf
repz
xor
iret
inc
dec
fs
cli
sbb
ret
jno
movsl
xor
xchg
and
jbe
sti
jne
test
dec
inc
jne
and
adc
aad
lods
dec
adc
loope
test
int
sub
aad
shlb
pop
jbe
mov
push
jecxz
mov
leave
push
pusha
sarb
loopne
dec
xor
pop
push
cmp
test
rorl
insl
push
push
mov
aam
imul
cmp
rcrb
or
out
lods
mov
scas
push
fildl
push
or
aas
push
xchg
mov
pop
cmp
nop
mov
fnsave
sbb
fs
jge
mov
andb
mov
xchg
daa
inc
jo
popa
add
dec
test
cmc
jg
sub
jns
jmp
xchg
mov
std
jbe
fstps
adc
sbb
hlt
pop
mov
add
push
push
pop
mov
lret
out
lahf
jae
jnp
cld
cmp
and
push
xchg
arpl
pop
fmul
loopne
rolb
mov
movsl
cmpb
insb
sub
lea
sub
add
and
fisttps
aaa
xchg
daa
scas
movl
mov
inc
push
sub
imul
rcrb
vsqrtss
roll
and
shl
rcrb
outsb
adc
imul
or
repz
or
fldt
sub
jbe
insl
xlat
push
call
xor
jmp
insb
fldcw
cwtl
add
xor
aad
add
out
es
cld
aam
xchg
xchg
movl
pop
mov
cmp
or
mov
xor
out
push
or
add
mov
cmp
aaa
pop
outsl
push
dec
inc
stos
push
lret
push
or
mov
ret
or
mov
sub
sbb
pop
xorl
iret
sbb
cmp
adc
cli
ss
movsl
mov
addr16
inc
or
loope
adc
add
xor
sub
jo
dec
out
lock
ja
cmp
jle
aaa
iret
cmp
jp
dec
fcmovne
pop
jmp
test
lcall
dec
jle
test
jge
addl
or
mov
mov
or
xor
cs
jno
pop
and
jbe
aas
mov
ficompl
mov
rorb
rclb
lret
arpl
xor
add
sub
test
gs
mov
cmp
cmpsb
test
repz
int3
fisttpll
push
push
lock
sub
sbb
sbb
mov
push
sbb
lock
xchg
loopne
cmp
push
lcall
adc
jl
dec
jae,pt
insl
adc
add
add
incl
lods
ss
fidivl
js
ljmp
mov
mov
add
inc
mov
jno
stos
mov
mov
and
or
or
mov
sbb
push
shll
test
daa
xor
pop
ret
loopne
shrl
pop
xchg
pop
sub
sbb
jge
sub
xchg
fsts
je
xor
adc
das
xchg
adc
shll
inc
lock
cmp
mov
aas
sbb
loopne
stc
jo
icebp
xchg
fsubp
into
cmpsb
xchg
fdivrl
push
mov
test
jns
mov
sahf
mov
dec
repnz
mov
push
stos
push
scas
dec
push
addb
add
mov
lret
jecxz
mov
mov
divb
jnp
test
adc
ficompl
jnp
aam
in
pop
pop
test
out
sub
mov
loopne
cmp
mulb
xchg
xor
stc
mov
cmpsb
pslld
shl
inc
cli
xchg
mov
pop
cmp
scas
and
sarb
clc
lret
repnz
cmpsl
ficompl
lahf
push
adc
jmp
aam
xchg
or
imul
cmp
mov
pusha
push
mov
clc
jge
faddl
xchg
mov
pop
mov
sub
jo
xchg
sub
sub
fcomp
mov
es
dec
mov
sahf
xchg
and
pop
mov
subl
lret
popa
push
lcall
bound
and
jo
sbb
cmp
in
cs
push
inc
pop
ljmp
shlb
rcrb
xchg
ds
push
scas
mov
cld
fwait
stc
pop
push
js
ja
adc
pop
xor
lods
mov
inc
inc
add
jo
or
sbb
cmp
cmpsl
mov
setbe
mov
xchg
gs
cmpl
movsl
repnz
clc
ret
xor
dec
push
xor
mov
in
jl
mov
fldln2
shlb
jno
flds
mov
movsb
inc
cmpsl
ss
test
outsb
fiadds
pop
push
test
dec
pop
xchg
pop
fisttps
push
mov
lahf
leave
pop
and
jno
add
dec
jmp
je
pop
call
cltd
mov
jecxz
mov
adc
inc
xchg
add
out
pop
mov
gs
and
arpl
pop
je
adc
sbb
in
je
jno
out
mov
mov
add
xchg
dec
mov
out
popf
jp
out
add
add
pop
jmp
add
es
push
stos
repz
js
mov
test
pop
jae
js
mov
push
les
aaa
mov
adc
dec
mov
add
xchg
mov
imul
and
push
jge
mov
adc
clc
mov
sbb
test
sub
and
push
or
jl
cli
in
scas
cld
lock
cs
jns
adc
sbb
sarl
std
test
fstps
inc
subb
int3
mov
insl
mov
xor
loope
sub
les
adc
inc
mov
mov
pop
leave
pop
aaa
mov
dec
lods
stos
or
in
and
pop
out
arpl
dec
add
mov
fcomp
out
outsb
xor
lcall
pop
jmp
clc
rorl
cmp
aas
mov
sub
test
mov
mov
insb
dec
pop
fdivl
sqrtps
bound
cmpsl
in
gs
fwait
sub
jle
push
cmp
dec
mov
ret
sub
std
sarb
jno
add
mov
fbstp
movsb
data16
mull
aam
sub
mov
push
push
iret
je
mov
jbe
sahf
inc
mov
test
mov
jge
cmpsl
and
xor
arpl
sub
cmc
ss
in
xchg
shll
xor
xor
or
fnstsw
inc
push
dec
xchg
dec
hlt
mov
bound
mov
xorl
and
mov
push
fwait
insl
add
or
jo
sub
popa
pop
adc
pop
mov
sahf
push
mov
add
cmp
mov
cmp
out
sbb
daa
inc
lret
in
cmp
es
xchg
adc
aaa
jae
fistpll
or
cmp
paddb
jns
sbb
int3
adc
and
add
cs
lods
inc
inc
int
jmp
fistps
cmp
cmp
fldl
mov
pminub
xchg
ljmp
adc
pop
sub
push
imul
sub
xchg
cwtl
enter
loop
fadds
push
icebp
rcl
xor
cmp
cltd
fnstenv
jmp
cmc
mov
mov
jg
repnz
push
fiadds
into
pushf
push
lds
stos
imulb
ds
jns,pn
add
out
lods
into
rsm
jns
pop
inc
nop
or
sbb
cs
add
and
testb
nop
or
add
out
cmp
movb
in
xchg
and
in
or
inc
insl
jbe
imul
push
and
push
xchg
adc
or
lahf
orb
mov
aaa
fsubp
jg
push
out
adc
popf
shll
sbb
pop
in
cmpsl
xor
in
into
les
in
xchg
cli
call
rcrb
shl
in
add
out
xchg
adcl
or
cli
mov
shll
jp
lds
pop
xchg
dec
cmp
icebp
shlb
roll
cmp
inc
imul
push
dec
cltd
mov
dec
and
jg
andb
lret
push
data16
repz
jge
inc
push
mov
mov
sbb
adc
fdiv
repnz
xor
sbb
out
lret
int
fnsave
lret
pop
into
inc
jecxz
mov
fldt
stos
sbb
aas
and
sbb
push
or
leave
fs
jg
cmpsl
in
cmp
push
mov
call
dec
sbb
mov
fstpl
xchg
mov
fucomip
jp
jle
pop
sub
mov
xor
ljmp
fs
mov
iret
mov
mov
add
push
sahf
pop
xor
inc
mov
out
push
jecxz
out
or
mov
lahf
testb
ret
jmp
stos
mov
push
clc
jle
push
negb
inc
add
inc
xchg
dec
xchg
mov
mov
xchg
push
std
ds
fdivrs
adc
std
xchg
insl
adc
mul
sub
data16
sbb
dec
pop
dec
fsubrl
inc
inc
daa
loop
xchg
cmpsl
and
icebp
inc
clc
inc
inc
sub
out
adc
aam
jo
ljmp
arpl
sub
clc
xchg
lcall
jle
mov
push
jge
xchg
dec
scas
inc
sti
xchg
ja
in
mov
adc
push
or
sbb
cli
cwtl
pusha
cmpsb
das
hlt
push
ds
mov
sahf
fstpt
mov
repz
add
ret
adc
push
stos
inc
xchg
or
add
add
cmp
adc
push
sbb
lock
icebp
pop
mov
mov
es
add
cmp
adc
bound
xor
sub
cmp
lods
xor
sarl
inc
int3
mov
add
xor
or
aas
or
sub
pop
aam
jno
orl
fbstp
pop
aad
mov
movsb
fisttps
mov
jecxz
outsb
int3
jae
push
inc
repnz
jg
mov
xchg
mov
mov
xchg
fsubs
adc
lcall
or
pop
aam
aam
inc
sub
pushf
fimull
mov
adc
mov
push
fld
imul
adc
insb
or
add
sub
out
sti
xorl
cmp
in
dec
sbb
scas
sti
ja
aad
cli
repz
push
inc
divb
sub
aas
les
or
add
pop
subl
jl
popa
adc
jmp
jnp
imul
movsl
mov
into
pop
add
adc
jo
stos
push
in
faddl
dec
push
bswap
arpl
mov
iret
xchg
and
jp
dec
es
lahf
imul
jne
cmp
jno
or
popf
fwait
sub
jge
in
xor
cmpsl
aaa
mov
imul
push
ret
jns
pop
push
fmulp
mov
xor
xor
mov
ret
mov
and
fstps
add
cmc
lods
lods
xlat
lock
adcl
cs
loopne
gs
mov
push
out
es
dec
mov
lds
scas
jl
jae
lret
pop
mov
adc
adc
or
cmpsb
ficoml
mov
adc
leave
idivb
mov
test
or
scas
sub
pop
pop
cmp
loop
mov
cld
outsb
dec
and
mov
inc
in
in
imul
adc
mov
xchg
lods
dec
inc
decl
bound
pop
test
lods
push
fbld
jp
ja
out
sbb
pop
incb
jae
sbb
xor
sub
lcall
mov
pop
out
pop
sbb
inc
arpl
and
movsl
ret
mov
and
scas
arpl
cmp
repnz
test
imul
shr
cmp
xchg
push
aaa
jmp
mov
dec
sub
pop
mov
lea
int3
int
inc
and
idivl
movl
stos
out
cmp
les
in
inc
sbb
mov
push
in
mov
cmpsl
scas
loope
in
pop
jns
jns
hlt
into
negb
pop
and
cltd
sub
xchg
mov
shlb
push
and
imul
shl
aas
int
dec
call
loopne
rcr
mov
aad
les
ljmp
push
xchg
pop
repz
loope
cltd
dec
mov
pop
jae
push
xchg
daa
addr16
xacquire
test
addb
mov
fiadds
outsl
cltd
xchg
movsl
jmp
popa
loop
js
arpl
int3
push
jno
fnstsw
in
jnp
sub
dec
sbb
mov
cmp
sub
cmp
adc
dec
xlat
int3
jne
push
pop
inc
lcall
inc
fisubrs
int
inc
jo
fcoms
push
fcomps
pop
insb
sbb
imul
cltd
ss
pusha
movsl
mov
pop
dec
je
sub
dec
mov
lret
jo
jb
xor
lahf
pop
cmpsl
stc
jge
mov
cmp
push
and
je
sbb
and
into
pop
outsl
fs
jnp
mov
ret
sbbb
scas
in
pop
mov
loop
fisubs
xor
enter
sarb
fsubs
xor
int
stc
imul
mov
inc
loopne
lahf
ss
push
and
mov
sub
cmp
mov
jle
decl
inc
sub
sbb
mov
xchg
sbb
jae
sbb
pop
rclb
or
pop
cmp
fsubl
mov
mov
dec
enter
mov
dec
loopne
mov
push
mov
pop
adc
jg
pop
mov
aaa
cmpsl
or
mov
sbb
in
pop
push
sbb
jne
pop
or
adc
push
mov
aaa
adcl
or
xchg
mov
sbb
mov
push
nop
push
pop
push
mov
scas
out
imul
scas
adc
mov
sarb
mov
sbb
rol
mov
call
sbb
ret
adc
data16
jbe
mov
orl
xchg
push
mov
movsb
sahf
sub
filds
divb
mov
loop
add
fcom
cwtl
pop
mov
mov
adc
test
push
cld
insb
push
cmove
push
mov
mov
xchg
lahf
test
stos
pop
mov
fcoml
cwtl
dec
cmp
pop
loop
adc
pusha
xchg
out
xor
pop
test
cmp
sti
shlb
mov
sahf
fnsave
and
ja
lret
test
lds
enter
std
scas
shll
orl
jno
xchg
subl
mov
jmp
scas
mov
pop
sbb
dec
cmp
cmp
jnp
fs
xchg
aas
jns
sub
mov
add
xchg
add
les
push
outsl
pop
popa
fsubr
and
sahf
andb
and
mov
add
cmc
mov
insl
xor
add
xchg
addr16
test
pop
mov
stc
sub
out
ja
in
andb
push
andb
mov
sbb
lret
popf
sbb
aaa
jne
mov
adc
add
scas
ds
mov
dec
std
lods
leave
xor
rcrb
je
sub
test
into
cmp
xchg
stos
nop
fmuls
cmp
jns
cmp
pushf
push
out
push
frstor
push
faddp
add
mov
icebp
xor
pop
mov
out
test
jb
adc
out
cltd
lahf
xchg
cs
xchg
push
jle
or
adc
ja
test
shl
inc
mov
and
and
mov
sarb
pop
inc
test
cwtl
mov
xor
cmp
cmp
sbb
lods
xchg
lea
das
add
mov
jns
iret
and
sub
mov
mov
pop
jb
pop
xor
icebp
mov
movsl
out
sbb
hlt
and
pop
rolb
adc
mov
mov
bound
out
repz
push
test
mov
mov
mov
addr16
enter
inc
xor
or
jmp
outsb
je
xor
adc
sbbl
es
out
push
jle
sbb
cli
decl
mov
and
pop
ret
imul
xchg
dec
dec
pop
js
push
or
mov
cs
cmpsb
das
or
and
ja
jne
icebp
cld
cmpsb
sahf
xlat
mov
pop
xchg
dec
jae
aaa
jns
les
jle
sti
sbb
shlb
xchg
mov
pop
lds
add
lea
mov
jmp
ret
cmp
xchg
inc
cs
lock
test
add
nop
inc
in
mov
aas
adc
jecxz
xor
leave
shlb
mov
loope
jp
mov
icebp
and
push
mov
out
aaa
pop
dec
push
jae
sbb
scas
mov
daa
fs
xor
mov
and
or
ret
mov
int3
jne
push
jbe
out
stc
mov
xor
in
adc
repnz
rcll
xchg
mov
sub
jmp
out
and
lret
pop
mov
mov
loop
xor
cltd
movsb
arpl
sub
imul
pop
call
pushf
repnz
jmp
and
mov
or
dec
mov
cmp
push
xor
dec
daa
adcb
sbb
sahf
push
mov
add
sub
add
in
loope
xchg
jg
lods
ret
cmp
xorb
sbb
ds
fisubrs
xlat
mov
push
mov
mov
cmp
push
and
cmpb
dec
ljmp
sbb
xor
mov
inc
mov
scas
fnsetpm(287
jno
outsl
dec
repz
inc
mov
mov
loop
xor
xor
inc
cmp
mov
fwait
cmp
mulb
mov
shlb
add
mov
dec
inc
xchg
dec
push
add
shrl
dec
push
cmp
shrb
push
xchg
inc
mov
movsl
cmp
ret
fs
jmp
add
mov
mov
and
ja
mov
jne
jns
sub
xchg
sti
add
dec
sti
xor
mov
loope
mov
dec
add
sub
fcmovne
xchg
dec
jbe
lods
push
and
fimull
sti
mov
add
inc
sub
nop
add
sbb
repz
popa
bnd
sub
daa
lcall
in
cmp
lock
mov
repnz
sbbb
mulb
in
push
ljmp
mov
and
cmp
gs
pop
inc
ljmp
gs
ret
out
fsubs
fstps
xchg
mov
jl
js
xchg
ljmp
add
pop
lds
xor
in
cld
push
sbb
pop
outsb
in
sbb
cld
fcomp
dec
dec
dec
inc
popa
imul
xchg
xor
daa
lock
shlb
dec
add
mov
sti
popf
pop
push
scas
xchg
sub
filds
mov
pop
cltd
into
push
cmpsl
or
arpl
jecxz
xchg
or
inc
lret
mov
sbb
int3
rclb
daa
adc
mov
orb
xchg
pushf
imul
push
rorb
and
fsubp
mov
movsl
cmpsb
scas
shrl
xor
xchg
pop
call
cmp
js
sbb
ficoms
out
scas
add
cmpsl
outsl
shlb
cmp
sub
dec
fisubl
cmpl
xchg
adc
clc
stc
aad
mov
and
jne
mov
mov
iret
aad
jge
call
shr
push
inc
or
dec
fcmovbe
fsubrl
add
jnp
mov
and
mov
adc
pop
cltd
enter
daa
fwait
daa
sbb
loope
repz
cmp
insl
jp
adc
ficompl
aad
or
sub
cmp
sub
loope
jecxz
idivl
loope
xor
mov
inc
cmc
add
dec
dec
dec
scas
mov
call
jle
subb
fimuls
mov
xchg
or
orl
fs
xor
int3
cmpsb
sub
add
shlb
sub
xor
mov
adc
mov
subl
gs
and
test
xchg
lret
dec
sbb
dec
je
ds
aam
add
mov
test
fwait
andl
adc
aam
dec
or
loopne
sub
repz
jns
into
push
add
cmova
mov
cmp
dec
lea
push
loop
ror
cmp
inc
cli
in
sub
inc
leave
xchg
adc
mov
shrl
and
int
inc
dec
je
repz
repz
dec
in
or
lods
lock
scas
cmpsb
push
xchg
insb
sub
jo
repz
adc
cmp
mov
outsb
mov
insl
xchg
or
jne
xor
ds
test
mov
sub
jg
xchg
jae
out
mov
cld
dec
add
mov
out
xor
lock
mov
pop
push
aad
loop
inc
xchg
mov
rcl
int3
shlb
mov
fiaddl
xchg
mov
cmp
cmc
xor
inc
insl
addr16
daa
shlb
fwait
popa
loop
dec
push
mov
inc
inc
lahf
inc
outsl
pushf
or
vmread
roll
imul
icebp
outsb
test
inc
add
pop
dec
or
sub
and
loope
jle
pand
aad
or
jno
and
inc
adc
movsb
mov
sbb
push
xchg
bound
jno
fcompl
or
mov
inc
lods
inc
sub
dec
xor
push
pop
call
jnp
mov
stos
sbb
sub
mov
jno
add
lret
aad
scas
mov
ds
dec
add
or
dec
inc
mov
jp
jns
test
out
push
cs
sbb
xor
outsl
mov
popl
lcall
mov
push
mov
mov
jmp
movsb
dec
inc
aaa
in
dec
add
sbb
andl
mov
in
dec
rorb
cmp
popf
fisubrs
sti
mov
adc
dec
sbb
lods
mov
xor
xchg
fwait
mov
sub
dec
sbb
sbb
adc
andl
mov
int
lds
xchg
cmc
sub
push
inc
xor
aas
mov
div
std
mov
int3
bound
mov
adc
movsb
or
stos
add
push
clc
aam
inc
adc
pop
sbb
mov
inc
call
pop
dec
icebp
je
adc
inc
rcrb
xor
loope
fsubrs
lret
fwait
push
sub
pop
add
dec
xchg
sbb
popf
js
idiv
lahf
stos
xor
out
rol
cmp
add
jp
pop
inc
inc
fbld
lret
sbb
cmp
mulb
cs
push
addr16
push
repnz
negb
fsts
scas
jo
je
dec
loopne
xor
mov
pushf
push
add
dec
mov
sarl
mov
pop
push
xor
xchg
push
mov
imul
xchg
and
aaa
out
pop
cltd
in
jg
sub
jo
sub
push
mov
dec
jl
popf
mov
call
inc
pop
shrl
cmc
xor
xchg
imul
xchg
cwtl
pop
test
cmpsl
jno
div
dec
dec
les
and
push
inc
add
lahf
out
jmp
lcall
aad
lods
or
jmp
addr16
mov
enter
mov
jns
pop
sub
aam
mov
stc
jae
cmp
or
and
mov
and
jmp
inc
divl
sti
jl
shll
out
mov
cs
or
jo
push
xchg
and
pop
cwtl
das
or
mov
xlat
mov
xchg
rorb
mov
fimuls
outsb
in
adc
mov
enter
xor
es
or
xchg
push
mov
int
dec
mov
push
and
das
inc
fwait
xor
xchg
mov
mov
xchg
mov
int3
mov
ss
push
xor
xor
ret
and
cmp
jmp
pop
add
in
inc
push
xor
mov
mov
int3
repnz
add
in
sbb
jmp
hlt
sbb
call
mov
aam
rclb
inc
ljmp
adc
add
cmp
pusha
xor
iret
lods
mov
std
xchg
or
cmc
lahf
cmp
xor
nop
insb
cmp
mov
push
add
add
aam
mov
or
and
std
dec
loop
jg
add
idivl
jnp
rcr
jae
int
jnp
mov
dec
xchg
xchg
cmp
sbb
aad
sar
stos
mov
int3
fs
push
pusha
cmc
enter
xchg
dec
sub
mov
ja
loopne
add
sbb
inc
inc
sbb
and
push
adc
push
jle
into
popa
gs
mov
sti
mov
cmp
inc
add
pop
xchg
lret
arpl
hlt
cld
xchg
adc
call
jo
mov
daa
fstpt
negb
aad
movsl
cmp
jns
pusha
movsb
add
loopne
in
dec
add
enter
sub
xor
out
mov
and
in
sub
jmp
ja
fcoml
jl
cli
mov
sub
push
mov
int
cmp
and
rcll
mov
pop
aaa
jecxz
and
fsubs
ss
arpl
inc
push
sub
in
push
xchg
fldl
sbbl
in
inc
je
and
rcl
subl
mov
mov
mov
dec
test
je
popf
sbb
jb
add
xchg
xorl
mov
adc
jge
or
mov
mov
mov
mov
imulb
pop
pop
lds
mov
bnd
push
addr16
sbb
cwtl
inc
jb
sahf
inc
push
xor
inc
mov
je
xor
sub
dec
mov
xchg
push
xorl
ret
pop
imul
or
or
sub
mov
mov
outsl
clc
pop
sub
xchg
and
jnp
fsubs
mov
stc
repz
call
and
xchg
push
jmp
gs
repnz
ret
push
jb
aam
cmp
pslld
iret
jno
addr16
fdivrp
mov
pop
sub
pop
and
jl
inc
shrl
jbe
jmp
loop
jecxz
int3
push
jmp
or
aas
faddl
push
cld
into
inc
mov
adc
pop
push
cmc
pop
sbb
iret
push
sbb
dec
push
sub
mov
sbb
dec
icebp
out
div
adc
incl
hlt
push
xor
lret
stc
mov
inc
fisttpl
mov
repz
mov
repz
pushf
jns
push
mov
jl
sub
mov
xlat
lds
mov
rclb
inc
aaa
imul
cli
mov
jb
daa
inc
pop
repnz
add
xchg
pop
cmp
dec
xor
or
xchg
std
inc
sbb
int
sbb
cmp
hlt
and
pop
push
pop
jb
pop
dec
push
sub
and
loope
stc
fnsave
pop
sub
xchg
negl
xor
jo
mov
push
jne
leave
sbb
xchg
ret
mov
sbb
cmp
shl
push
xchg
shlb
jge
fucompp
mov
stos
int3
daa
les
push
outsl
fwait
pop
shrl
pop
sbb
sbb
les
ficomps
call
cmp
ret
ret
lods
push
test
ret
inc
mov
inc
arpl
jbe
push
push
push
pop
wrmsr
mov
stos
xor
in
in
xchg
arpl
pop
js
lods
push
scas
mov
xchg
sbb
xchg
in
clc
jne
xlat
inc
in
and
or
adc
xor
imul
rcrl
notl
sbb
xor
sbb
scas
dec
dec
fnstenv
sub
stos
jge
mov
jno
dec
dec
mov
or
outsl
jbe
sti
adc
dec
icebp
fwait
add
imul
push
lahf
fs
mov
mov
adcb
out
mov
lret
rorb
push
lods
pop
int3
pop
outsb
jle
mov
and
pop
or
decb
movsb
push
mov
inc
push
ret
jbe
out
push
leave
pop
arpl
mov
push
ficoml
jae
es
lcall
shrb
lret
orl
aaa
add
aaa
loop
pop
mov
cmp
fdivl
mov
jbe
mov
cmpsb
in
and
inc
xchg
scas
ljmp
subb
test
mov
xchg
cld
out
xor
test
pop
lock
and
ret
addr16
push
adc
nopl
outsl
or
mov
jmp
lahf
js
inc
inc
add
dec
out
loop
stos
mov
insl
push
jmp
push
cld
outsb
adc
cltd
call
inc
push
test
cmp
int
ret
push
fildll
push
mov
cli
cltd
sbb
aaa
sbb
sub
jmp
pusha
dec
cld
cmpsb
loope
repz
dec
add
test
bound
pop
movsl
cli
sub
push
outsl
pop
xlat
xchg
sub
call
jne
roll
inc
push
cmpl
ficompl
leave
pusha
js
xbegin
add
xchg
xor
or
lods
inc
mov
inc
cmp
or
xlat
mull
jb
pop
pop
aam
leave
ljmp
test
xchg
mov
loopne
fcoml
and
sub
lods
outsb
loope
mov
jae
xor
pop
cmpsb
lods
dec
fwait
jmp
jno
xlat
pop
lea
push
repnz
movl
inc
mov
xchg
loop
scas
jae
and
xchg
cmpsl
movsb
jl
push
jbe
mov
xchg
outsb
insl
mov
in
std
pop
addr16
sub
std
ss
sti
push
stos
push
pop
dec
aaa
xor
mov
mov
and
fs
mov
add
inc
cmc
pop
sub
mov
mov
jo
rorb
mov
ljmp
mull
imul
ljmp
pushf
iret
pop
rcll
jg
mov
sti
jb
sub
cmc
outsb
clc
lcall
mov
fcompl
lcall
in
aad
jmp
sbb
cmc
jp
int
sbb
bound
imul
cmp
mov
mov
out
mov
add
add
push
in
cmc
sbb
into
cwtl
adc
cmpsl
shlb
in
add
add
lea
lret
mov
test
out
jl
fsts
loope
nop
test
testb
fdivrl
sti
and
cmc
mov
sub
in
sbb
pop
push
add
jl
adc
out
dec
sbb
push
add
inc
adc
test
ror
jle
cmpsb
pop
xor
jb
lds
and
inc
ret
dec
mov
dec
test
mov
or
mov
into
pop
adc
mov
sbb
or
lods
sbb
lods
arpl
sbb
incl
add
add
sbb
add
add
add
roll
mov
push
add
sar
rolb
pusha
call
pop
lea
add
mov
lea
push
pop
add
lods
dec
jne
mov
movb
mov
mov
push
push
pushl
push
call
mov
mov
jmp
mov
add
lods
mov
btr
jae
rep
jmp
pusha
push
push
push
call
mov
popa
pusha
mov
sub
mov
lea
xor
push
pop
jmp
mov
and
cmp
je
mov
and
cmp
jne
inc
mov
sub
xor
mov
mov
inc
shr
jne
push
inc
mov
sub
sub
mov
cmp
ja
mov
shl
mov
shl
xor
lea
mov
inc
shr
je
add
mov
shr
setae
dec
mov
pop
inc
cmp
jl
popa
add
lods
test
jne
push
push
push
call
lea
push
push
push
pushl
call
mov
sub
push
push
push
push
call
pusha
push
pushl
pushl
call
popa
push
push
push
call
lea
push
pushl
push
pushl
call
mov
jmp
add
push
call
mov
add
jmp
btr
jb
add
inc
inc
push
push
push
call
stos
pop
mov
test
jne
add
lods
test
jne
popa
jmp
push
mov
sub
xor
inc
mov
mov
mov
mov
mov
mov
xor
mov
rep
mov
push
mov
mov
mov
mov
mov
or
pop
mov
mov
movzbl
shl
or
incl
dec
mov
jne
mov
mov
mov
and
shl
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
movzbl
imul
xor
mov
mov
inc
cmpl
lea
mov
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
cmp
lea
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
test
mov
jne
jmp
sub
sub
mov
shr
sub
test
mov
mov
lea
je
cmp
jl
jmp
cmp
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
mov
add
shl
mov
mov
add
cmp
mov
lea
jae
mov
shl
mov
mov
movzbl
shl
or
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
xor
cmpl
mov
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
andl
mov
lea
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
movl
movl
jmp
sub
mov
shr
sub
sub
mov
add
movl
movl
mov
xor
mov
inc
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
mov
xor
inc
mov
shl
mov
sub
add
cmpl
mov
jge
addl
cmp
jge
mov
jmp
push
pop
mov
shl
lea
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
mov
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
mov
add
shl
movl
xor
inc
mov
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
or
mov
lea
shll
decl
jne
inc
mov
je
mov
mov
inc
sub
inc
add
mov
mov
mov
dec
incl
inc
test
mov
mov
jne
jmp
mov
jmp
mov
leave
ret
