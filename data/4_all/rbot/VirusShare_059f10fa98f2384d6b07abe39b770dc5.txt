call
in
sub
push
push
lea
push
push
xor
call
cmp
pop
push
sbb
mov
inc
push
mov
add
push
lea
into
sahf
repnz
pop
and
pushl
imul
cmp
les
jle
add
pop
pushl
and
mov
push
push
jge
push
fsubrs
jne
push
push
or
or
mov
adc
or
mov
ret
xchg
add
addr16
pushl
repz
pop
jle
mov
pushl
call
mov
movsb
jp
jmp
sub
icebp
sbb
lock
mov
clc
call
test
imul
fndisi(8087
xchg
cmp
add
add
in
mull
jne
lret
xor
mov
sti
mov
push
mov
sbb
adc
in
sti
imul
inc
cmp
pop
push
subb
fildl
cmpsl
rcrb
jo
popf
cwtl
push
add
in
pop
inc
ret
jg
push
cmp
jne
lea
push
push
repnz
jle
movl
aas
xor
pushf
mov
nop
sbb
std
fcoms
adc
sbb
mov
mov
mov
imul
jmp
fisttpll
leave
xor
cmp
mov
push
mov
push
jnp
push
test
or
jmp
push
xor
adc
fsubr
push
mov
xchg
fs
jle
adc
cmp
cmpsb
js
push
sub
pop
je
mov
mov
pop
test
sbb
ret
cmp
jne
dec
loopne
out
mov
xchg
in
lds
testl
enter
clc
test
pop
push
sbb
leave
iret
inc
dec
mov
pop
inc
xlat
pop
or
cmp
adc
jne
pmaxsw
mov
sub
jmp
push
sub
mov
push
sbb
mov
ja
pop
outsb
jl
xchg
call
pop
inc
inc
mov
mov
adc
ds
jl
dec
test
pop
popl
imul
push
clc
cld
lock
jb
insl
jmp
jbe
xor
jmp
jbe
push
push
cld
jne
or
fs
or
mov
cmp
jno
shl
sbb
mov
cld
cld
mov
out
sti
sbb
and
adc
or
sbb
add
mov
ljmp
pop
xchg
push
or
mov
shlb
mov
orl
cmp
xor
ljmp
ret
negb
mov
mov
adc
arpl
data16
push
dec
xor
pushf
push
add
push
inc
pop
push
sbb
push
mov
pop
lahf
stos
loopne
sti
pop
icebp
push
jl
mov
pop
push
pushf
loop
sarl
mov
jl
cmp
setg
pop
cmc
rcrl
add
jae
inc
mov
scas
insb
jle
cli
fmuls
data16
cmp
rcl
fsubr
loopne
push
in
push
iret
repz
push
out
lock
or
xchg
and
in
pop
rcr
clc
push
cli
push
test
lods
mov
movb
aad
mov
out
inc
inc
mov
dec
lock
outsl
test
and
sbb
push
lods
jae
out
add
adc
push
mov
int3
stos
and
dec
int3
jo
push
inc
push
repz
xchg
pop
fucomp
jno
push
dec
sbb
adc
dec
shll
cmp
int3
jae
aaa
and
daa
jnp
jmp
push
or
mov
mov
cmp
in
jnp
jne
inc
pop
fisttpl
hlt
mov
popf
bound
sub
cmpw
xchg
cld
mov
mov
imul
or
cwtl
jae
hlt
cmp
ficomps
mov
mov
rep
not
movl
fdivrs
stos
fstp
mov
mov
pop
imul
mov
cmp
hlt
fisttpl
sbb
cmpb
jge
dec
je
jbe
loopne
jle
out
add
pop
jmp
lss
int
cmp
adc
push
ftst
pop
inc
inc
je
xor
and
outsl
xorl
and
add
fidivrs
lock
test
loopne
jnp
lock
aam
pop
jl
scas
fs
push
in
add
cmpb
sub
add
flds
inc
push
or
adc
stc
xor
ret
mov
inc
jg
add
aad
adc
cs
fprem
jg
fldl
xor
sahf
mov
repz
jbe
leave
or
rcrb
hlt
cwtl
adc
adc
in
test
xchg
loopne
lods
mov
rclb
frstor
jae
das
aam
xchg
pop
js
add
clc
adcb
mov
popa
and
out
es
daa
int3
add
mov
jae
dec
pop
cwtl
mov
adcb
hlt
dec
aam
add
bound
dec
push
xchg
stc
mov
les
push
add
jne
mov
pop
push
or
sbb
lods
fmuls
jne
pop
xor
mov
ja
sbbb
pop
jne
push
xor
loopne
mov
les
sub
mov
mov
jbe
push
pop
mov
mov
sbb
lcall
subb
fdivrl
jle
mov
mov
idivl
in
pop
mov
mov
and
mov
mov
push
fmuls
or
and
push
call
jmp
out
call
mov
inc
cmp
jbe
mov
lock
pop
cmp
loope
mov
mov
push
xor
mov
mov
push
in
adc
mov
loope
mov
mov
int3
jne
xchg
jecxz
push
or
push
aam
xlat
in
mov
je
aas
push
ds
inc
pop
fsubr
lock
push
andl
les
loopne
movsl
mov
lock
cmpb
push
and
jae
pop
pop
std
pop
inc
out
incl
add
cmp
inc
not
jmp
jp
imul
jne
js
mov
jo
cltd
mov
cmp
xchg
cmpsb
lods
or
daa
dec
sbb
fcomi
incl
mov
cmpsb
pop
push
nop
inc
pop
inc
jo
and
int
xor
xor
sub
lea
push
push
push
xchg
ja
je
push
push
addb
adc
add
leave
test
mov
loopne
cmp
xor
mov
mov
add
loop
mov
cmp
fsub
jg
cmp
push
jge
sub
cmp
jge
movzwl
jnp
push
push
cli
or
lock
divb
push
xor
sub
jbe
xor
sbb
pop
lea
push
push
insb
pop
adc
movsb
ret
mov
pop
pop
push
inc
cwtl
sbb
lea
adc
sbb
sub
add
je
shlb
fsubrl
cmp
inc
cmp
je
push
jo
loop
pusha
cld
jne
movb
adc
pop
lock
pushl
scas
xorl
fwait
scas
sti
xor
mov
add
cmp
jne
je,pn
ret
add
pop
xchg
data16
test
push
ret
rorl
adc
jne
fildl
xor
pop
or
sbb
or
mov
lea
inc
test
rcrb
push
lock
push
cld
ds
int
mov
jne
push
and
dec
fwait
mov
int3
out
jmp
and
pop
dec
adc
imul
sub
add
or
cmp
sbb
pop
add
adc
xchg
lcall
jecxz
ss
cmp
cld
mov
push
pop
outsl
repz
negb
jne
push
xor
into
call
das
inc
stos
clc
fnstsw
test
movsb
push
mov
shll
dec
je
sub
push
xchg
add
pop
push
mov
pop
or
xor
in
fsubrl
jge
pop
xor
cmp
or
pop
les
lock
cmc
add
add
mov
pushl
pushl
sbb
mov
push
sbb
nop
loop
cmp
pop
push
adc
out
int3
ds
cmp
jmp
pop
and
lcall
inc
jmp
mov
leave
mov
ficomps
and
and
dec
or
sbb
pushl
dec
je
sbb
out
divb
push
ret
pop
clc
pushf
xchg
clc
les
decb
test
pop
loop
mov
xlat
xor
jbe
repnz
jne
dec
xor
pop
dec
push
test
add
cmp
mov
orl
jo
dec
push
cmp
jnp
add
mov
add
mov
push
push
call
mov
jl
inc
jle
sbb
scas
testb
or
push
cmp
lods
aaa
ret
daa
push
push
push
outsl
xchg
xchg
jbe
mov
xchg
pushf
gs
jnp
fs
push
loopne
add
or
dec
jo
push
out
push
jns
test
mov
ret
cmp
mov
pop
cltd
and
call
test
mov
loopne
dec
pop
or
in
push
into
push
cltd
aam
push
sub
mov
test
stos
fistpll
js
or
mov
push
mov
outsb
pop
or
cmp
icebp
sbb
push
push
mov
scas
in
mov
add
mov
jmp
or
or
insb
xor
lock
adc
jbe
imul
mov
add
xchg
cwtl
mov
movsb
aam
mov
and
sbb
lods
scas
fstpl
std
imul
add
mov
rcl
lods
inc
hlt
add
push
push
cld
iret
inc
sbb
mull
clc
cmp
decl
lock
imul
push
stc
mov
push
shr
shl
xor
cmp
push
cmp
add
ss
mov
jl
inc
adc
mov
rolb
mov
shlb
mov
push
test
mov
xor
add
mov
mov
shrl
test
enter
js
add
push
je
lea
push
or
push
imul
xor
in
in
and
daa
sbbb
js
addl
ljmp
pop
mov
imul
sub
push
adc
jmp
adc
or
pop
cli
arpl
jnp
js
mov
cmp
push
das
pop
movsl
sti
mov
push
dec
test
lahf
jle
mov
push
in
jmp
ret
push
fisubrs
pusha
dec
inc
mov
push
push
push
fmuls
loopne
xlat
inc
mov
cli
imul
sbb
or
add
pop
test
mov
push
cmp
sbbb
mov
adc
incb
into
test
dec
adc
cmp
jg
mov
xchg
loopne
pop
mov
scas
clc
dec
add
inc
or
inc
push
adc
pop
adc
adc
mov
or
mov
add
sub
lret
sub
push
push
loope
push
push
mov
cmpsb
cmp
push
pop
adc
scas
adcb
or
add
or
popa
dec
xlat
ret
addr16
add
enter
cwtl
icebp
sbb
sbb
aaa
in
mov
aam
adc
orl
imul
insl
fsts
xor
adc
cld
adc
add
add
pop
push
jmp
push
shrl
fstps
aam
sbb
add
pop
adc
dec
test
pushf
push
jnp
arpl
pop
adc
ret
dec
fiaddl
push
push
xor
sub
and
mov
jge
loop
out
lock
xor
cmp
jmp
inc
movsb
xchg
sbb
fwait
or
push
stos
pusha
xorb
mov
jo
jbe
mov
push
jo
insl
xchg
adc
jbe,pn
cmp
incb
cmp
scas
xchg
lahf
js
dec
or
and
xchg
pop
outsb
and
fdivrs
cmp
insb
cmc
mov
xchg
push
xor
push
scas
sub
add
clc
out
into
fsubrs
push
es
mov
movb
push
push
or
adc
push
and
inc
jmp
cmp
xor
das
inc
clc
adc
sub
sub
clc
pop
daa
push
sub
sbb
jle
lea
sub
test
jl
fs
mov
add
and
mov
xchg
mov
dec
lcall
pop
and
and
xor
pop
jecxz
ret
shr
add
sbb
jle
inc
dec
jne
pop
pop
cmpsl
sub
pop
not
ret
sahf
add
dec
pop
fisubl
std
fwait
xchg
in
clc
jo
sub
inc
or
jne
inc
gs
xchg
push
xor
mov
das
cld
mov
and
insb
jmp
adc
jbe
and
dec
dec
add
inc
push
push
jno
aas
cmc
push
pop
cmp
inc
pop
cmp
roll
pusha
push
insb
mov
and
int
into
and
data16
iret
dec
rorb
shrl
rorb
fldcw
and
cmp
daa
sub
pop
mov
data16
sub
push
fisubrl
sbb
fldcw
fimuls
loopne
mov
lcall
in
push
in
ss
int
out
out
call
and
jmp
in
xor
out
push
push
out
dec
mov
insb
ss
adc
inc
repz
ss
int
hlt
aaa
cmc
sbb
clc
sub
icebp
out
imul
mov
fnstsw
dec
inc
enter
xor
lret
cmc
sbb
std
push
mov
dec
mov
dec
inc
cmp
jb
ret
sbb
mov
push
mov
out
jg
push
adc
xchg
add
sbb
idivb
enter
scas
mov
test
call
loopne
mov
mov
mov
aas
lea
and
inc
mov
cmp
lock
push
lea
jb
fidivrs
mov
insb
sti
dec
add
jbe
inc
and
xchg
inc
orl
and
mov
je
mov
mov
mov
iret
fstl
mov
mov
mov
lret
lods
push
shlb
push
inc
cmp
cmp
insl
or
or
push
imul
add
clc
push
out
clc
cmpsb
hlt
pop
movsb
jae
and
enter
adc
and
add
fs
jo
push
fistl
xor
add
add
jnp
imul
add
mov
test
shr
into
push
mov
fsubrl
push
mov
jmp
insb
fsubp
lock
cmp
cld
int
and
out
sbb
mov
jae
push
push
repnz
fldl
int
push
repz
inc
adc
xchg
jl
repz
imulb
add
hlt
mov
sti
adc
test
dec
icebp
add
or
pop
pushf
cmp
mov
jne
nop
orl
jno
and
ret
push
and
out
fidivl
xchg
sub
loopne
add
jmp
in
ds
lock
faddl
mov
sbb
cld
mov
add
call
shrb
int3
pop
stc
pop
and
fidivrs
push
mov
rclb
inc
mov
jl
lcall
adc
insl
pusha
push
mov
lds
std
jp
pop
inc
or
or
pop
or
push
pushf
out
rclb
push
sub
inc
adc
mov
add
sub
out
dec
das
adc
add
roll
mov
pop
repnz
lret
xchg
mov
nop
pop
dec
sti
jle
jnp
sbb
jae
sbb
movsl
shlb
loopne
imul
mov
pop
jbe
movsb
push
push
test
adc
in
loope
js
and
push
vinsertf128
lock
scas
push
call
mov
push
jnp
xchg
add
clc
es
lret
call
and
adc
mov
leave
int3
das
test
push
jo
shll
jle
push
and
test
fs
fincstp
pop
call
add
cmp
sub
mov
int
and
jmp
sbb
jne
push
jmp
push
pop
adc
cmp
push
push
or
aam
adc
inc
rcrb
xor
mov
or
sbb
repnz
lret
ljmp
and
test
test
mov
hlt
aad
add
push
cltd
sbb
xorl
mov
push
fldl
mov
jne
sub
out
mov
inc
cs
xor
push
xor
push
mov
pushl
ds
lock
pusha
adc
leave
rol
clc
pop
enter
rcrl
xlat
aad
add
add
and
dec
dec
out
insl
dec
js,pn
cmp
hlt
cmpsb
mov
cmpsb
mov
in
and
dec
or
mov
add
and
aad
push
ja
or
lock
inc
jns
xor
pop
shrb
lods
inc
push
jl
cwtl
test
or
push
call
sub
xlat
out
rclb
lret
in
rolb
push
adc
pop
jbe
mov
cltd
jp
and
out
push
jae
xor
out
out
pop
pop
ret
and
and
cmpsb
adc
mov
mov
jg
or
and
push
pop
jmp
movsbl
mov
stc
das
sbb
pop
inc
pop
dec
cmp
pop
jbe
push
cmpsb
orl
fdiv
insb
push
push
loop
dec
lret
arpl
adcb
mov
insl
clc
jne
mov
jo
rcll
mov
mov
sub
push
or
pop
cmpsl
movsl
or
sub
add
jb
pop
mov
push
and
and
addr16
push
dec
dec
enter
mov
push
add
push
mov
xchg
dec
popf
add
jg
push
xchg
rcll
daa
aad
in
mov
dec
js
je
and
mov
and
jno
xlat
inc
icebp
icebp
add
into
add
int3
pop
sub
cmp
jge
sbb
cld
cmc
out
jno
fbstp
neg
push
and
cmc
push
inc
adc
dec
mov
push
es
push
add
setge
loopne
int3
ljmp
sub
jl
mov
mov
mov
sbb
or
iret
add
add
int
adc
add
sub
mov
mov
shrb
shlb
cwtl
pop
inc
test
test
clc
jbe
lock
push
and
xchg
les
mov
pop
or
pusha
sub
call
add
push
pop
mov
or
xor
cmpb
inc
jne
push
mov
mov
pushf
jp
mov
mov
pop
loopne
dec
fstl
and
aas
dec
fcmove
jae
sti
and
or
cmp
fimull
push
or
cmp
std
push
lcall
jnp
inc
push
mov
insb
add
aam
loop
sahf
adc
icebp
cs
push
test
jmp
dec
lds
movsb
add
push
and
call
and
jmp
js
jmp
pop
in
adc
pop
add
loope
push
push
std
push
cmc
sbb
add
jmp
sbb
pop
in
add
add
sub
or
mov
adc
or
jne
ret
xchg
mov
pop
jns
jge
mov
frstor
pop
mov
movsl
xor
adc
add
dec
mov
stos
stos
mov
test
cli
sbb
xor
stos
lea
push
hlt
mov
push
cmp
lcall
test
cmp
pop
cmp
ds
neg
and
lret
or
rcr
push
mov
add
adc
inc
push
add
add
ss
mov
les
das
clc
and
add
inc
add
xor
sbb
lret
enter
adc
and
repz
mov
loopne
lret
shrl
mov
mov
xor
int
mov
cmp
leave
ret
cmp
and
or
es
jle
movl
outsl
mov
lret
xor
push
adc
aam
inc
outsl
mov
test
or
rcr
push
xor
ja
decb
loopne
nop
xchg
and
jmp
jae
lea
aas
lcall
stc
cmp
rolb
ss
push
inc
xchg
push
popf
jo
cmpl
sub
je
xor
mov
mov
xor
xor
enter
fldenv
xchg
pop
jne
push
push
lcall
or
jmp
pusha
mov
addl
push
clc
jae
test
outsb
push
push
jo
inc
cmp
mov
push
xor
add
test
in
mov
add
mov
mov
in
notb
push
or
jl
cmp
jb
addb
mov
mov
shll
das
xchg
mov
lea
and
imul
push
push
lret
shl
out
sbb
pop
pusha
mov
cmp
inc
push
cmp
cmpl
test
in
cmp
aas
push
es
mov
push
fs
mov
inc
enter
mov
sub
adc
jb
rolb
sub
lcall
dec
adc
lea
out
push
fists
cmp
cmp
add
incl
bound
xor
add
mov
out
adc
push
or
push
push
and
cmpb
orb
ret
jno
sbbb
mov
xor
push
mov
sub
mov
sub
push
or
or
adc
adc
add
push
push
cmp
mov
dec
xor
loop
sbb
jne
faddl
adc
loope
xchg
loopne
andl
mov
sarb
jne
ret
jg
jmp
mov
ret
ret
jp
push
jmp
push
jae
mov
adc
push
xchg
in
test
mov
mov
jmp
dec
sub
pop
sbb
iret
cmp
fcmovnu
xor
daa
mov
std
cwtl
mov
jbe
imulb
jge
jmp
enter
inc
inc
pop
sub
aaa
cwtl
push
jl
jmp
jg
lcall
int3
sub
push
test
xchg
lgs
mov
mov
and
addr16
xchg
dec
jmp
and
adc
adc
sub
mov
or
fldz
xchg
addb
bound
in
lods
jmp
mov
fisubs
inc
and
loopne
dec
mov
negl
shlb
fisttpll
int3
sbb
jg
push
mov
or
fdivrp
push
shrl
add
sub
mov
pushf
andl
sub
dec
sbb
lahf
ss
or
stc
xchg
lret
and
in
cld
or
mov
movsb
mov
pop
rcrl
push
jmp
jns
and
insl
add
out
in
int
jmp
das
cmpb
in
mov
jb
rcrl
jne
add
inc
mov
push
in
inc
jb
sub
mov
in
faddl
push
in
fdivs
aam
mov
inc
out
xchg
add
movsl
push
sbb
mov
dec
movl
lret
pop
sahf
sub
decb
hlt
std
sbb
sbb
cmp
cmp
sti
clc
or
les
jb
dec
aaa
jecxz
pop
nop
dec
ss
insb
std
insb
xor
push
add
jl
xchg
test
push
mov
ret
mov
dec
dec
jl
sbb
add
and
push
sub
and
pop
ror
sub
inc
dec
rorb
push
sub
sarb
popa
mov
cmp
test
jno
pop
arpl
push
adc
add
je
pop
into
push
jge
test
mov
addb
dec
fcompl
lds
rcrb
push
xor
push
in
mov
sbb
sub
jne
out
mov
mov
push
push
aas
shlb
jmp
push
sti
adc
hlt
sbb
add
sbb
and
add
mov
push
rclb
adc
push
push
cli
and
sub
in
xor
clc
xchg
sub
push
add
adc
outsb
enter
ror
jmp
add
roll
mov
shl
adc
adc
cmp
or
cmp
mov
push
fsubrl
push
pop
lock
push
xchg
nop
xchg
fdivr
push
mov
dec
mov
insb
and
push
pop
test
popa
ljmp
push
fwait
test
loope
inc
mov
push
mov
pop
inc
sbb
sahf
pop
mov
mov
adc
repnz
jg
jl
mov
jae
push
sbb
or
mov
add
test
hlt
jl
dec
pop
inc
adc
movb
add
sti
push
cmpsl
rcll
sbb
mov
ret
adc
mov
decb
pop
test
das
dec
push
ss
test
add
xor
loop
xor
js
call
sub
adc
mov
sbbl
push
mov
mov
gs
adc
insl
cli
ja
ret
inc
push
dec
mov
inc
cmp
inc
jae
dec
sbb
pop
cmpb
rcl
cli
aam
std
stos
xchg
sub
popf
add
scas
mov
mov
push
fisubrs
cwtl
sbb
pop
clc
in
ja
jo
cmpsb
or
adc
fsubr
cwtl
out
int3
je
fisubrl
push
fnstcw
je
mov
ss
loopne
jae
mov
ficoml
pushf
jbe
cmpsl
push
mov
inc
aas
add
lods
add
lods
les
js
cmp
ja
cmpl
mov
je
shr
pop
mov
xchg
mov
mov
test
cmp
adc
mov
je
mov
inc
ret
or
in
push
push
push
loope
or
shrb
div
push
mov
inc
adc
cmp
shl
xlat
dec
mov
pop
je
test
jle
pop
cmp
push
adc
push
ret
adc
adc
mov
add
arpl
iret
in
jne
fildll
push
push
mov
fmull
fstpl
icebp
lret
xor
push
xor
xor
roll
rcl
sbb
shlb
scas
hlt
scas
mov
aad
sbb
mov
push
movsb
or
mov
jo
inc
shrl
iret
dec
pusha
push
xor
es
push
xor
pop
push
and
mov
cld
adc
push
add
mov
lock
push
add
std
adc
movsl
or
imul
mov
les
inc
sti
cld
sbb
inc
jne
mov
call
or
leave
fbstp
jecxz
sub
jle
mov
add
push
jl
stos
iret
lods
mov
call
lock
sarb
mov
repz
mov
mov
cmp
outsb
or
subl
or
outsl
jnp
fdivrp
lods
sub
add
mov
inc
and
clc
sbb
mov
je
mov
shrb
idiv
test
outsb
movb
fildll
fdiv
inc
jmp
dec
enter
pop
or
sbb
incb
jmp
andb
es
fcomip
rol
jle
adc
xor
je
cld
aaa
lods
mov
push
and
or
push
mov
ret
mov
mov
pusha
les
xchg
and
sbb
adc
pop
mov
imul
adc
clc
mov
or
push
push
clc
call
jecxz
shlb
clc
into
fwait
or
add
add
loope
dec
cmc
lret
pop
cs
call
test
and
clc
xor
dec
rcrl
hlt
cltd
clc
cld
loopne
or
jg
outsb
jo
lods
lods
ret
clc
push
aaa
fwait
mov
nop
out
in
push
xor
repnz
cld
clc
notl
jmp
leave
jmp
push
test
and
cmp
push
push
ja
xorb
aad
adc
fcoms
pop
js
jl
add
adc
xchg
and
ss
pushf
jbe
and
xlat
mov
xchg
out
rclb
lock
push
push
imul
sti
jmp
mov
ret
je
hlt
push
adc
enter
movsb
and
xchg
xchg
sti
ret
fadds
xchg
les
adcb
inc
aaa
mov
je
es
cltd
jo
push
iret
pop
xchg
or
nop
daa
cmp
mov
js
test
xchg
mov
xchg
cmp
cmp
cmp
xchg
xor
xchg
push
and
loop
mov
add
inc
shlb
andb
cmpb
push
stos
outsb
xor
pushf
das
xchg
push
das
pop
clc
call
lock
adc
or
sub
hlt
push
loop
ret
pop
dec
and
sarb
push
xchg
test
mov
add
xor
dec
add
sahf
lods
sbb
mov
cmp
jo
mov
ja
loop
xchg
sub
mov
cld
adc
jne
in
add
je
add
add
arpl
sarb
push
mov
and
hlt
int3
mov
sbb
outsb
xchg
popa
lea
sbb
sbb
cmpsl
pop
pop
adc
or
mov
stos
dec
rcrb
pusha
std
mov
cli
sub
push
shlb
fisttpl
mov
rorl
xchg
adc
lcall
xchg
inc
les
or
setb
test
pop
xchg
push
push
jo
jbe
cmp
test
fsubrl
clc
push
scas
ret
call
push
mov
outsl
in
sbb
and
xor
in
mov
sub
sub
inc
lret
pushw
into
cs
out
out
andb
sbb
iret
and
xchg
xor
shl
loope
push
add
cmpsb
es
mov
test
aad
cmc
dec
imulb
inc
cmpl
out
xor
xchg
fs
je
xchg
ret
faddl
sbb
xor
xlat
add
scas
ret
loop
or
mov
xchg
or
sub
adc
inc
ds
pushf
pop
jmp
push
call
pop
xor
clc
xchg
daa
jnp
mull
jmp
repnz
jmp
mov
and
add
xor
push
dec
mov
jnp
fisubs
push
push
out
jno
xor
mov
push
inc
sbb
sbb
out
dec
cwtl
add
outsb
jl
mov
pop
sbb
push
cmp
pop
xchg
jle
sbb
call
jno
mov
ret
hlt
pop
cmp
mov
jb
cmpw
jne
xor
loop
inc
push
roll
mov
mov
js
nop
and
mov
hlt
cmp
jp
lea
pusha
or
xor
adc
repz
sbb
fdivrs
ret
cli
or
push
jbe
xor
loopne
das
lods
mov
push
ret
das
jnp
hlt
clc
sbb
lret
jbe
mov
adc
mov
sbb
xchg
out
flds
push
inc
lret
and
sbb
lods
cmp
inc
mov
inc
cmp
rolb
fs
push
xor
sub
push
mov
mov
lea
xor
cmp
and
call
andl
les
pop
hlt
dec
or
inc
lock
jg
bound
xchg
pushf
sahf
neg
sbb
push
sbb
sbb
out
push
shr
jg
hlt
and
cmp
jne
aad
pop
add
in
ja
arpl
jp
and
hlt
xchg
jmp
rorl
loope
cmpl
push
mov
fimull
sub
je
or
cmp
scas
mov
add
inc
cmp
jae
jmp
pop
outsb
mov
pop
adc
mov
mov
and
mov
shr
and
mov
jecxz
push
inc
mov
or
sub
mov
sbb
sub
test
xor
add
mov
xchg
ljmp
inc
cli
adc
out
pop
mov
pop
push
loope
mov
dec
jo
pushf
mov
xchg
in
dec
cmp
pop
movsb
sarb
inc
hlt
dec
addl
andl
lock
jo
out
js
push
call
loope
mov
and
cmp
jne
loop
add
push
xlat
paddusw
filds
mov
push
add
aad
xlat
loope
add
xchg
aad
movsb
daa
pop
cmpsl
xlat
xor
xlat
jmp
pop
or
ret
mov
add
cmp
andb
add
add
inc
or
leave
mov
orb
cmp
add
adc
cmpb
adc
xchg
movsb
and
mov
xlat
add
push
lea
sbb
lcall
ss
sbb
or
xor
xchg
fdivr
xor
jnp
rcrb
int3
inc
mov
addl
stos
sbb
dec
notl
pop
push
sub
sbb
mov
and
movl
mov
lret
mov
jg
or
pusha
pop
push
adc
pop
ret
sbb
adc
dec
loop
mov
xor
dec
in
clc
cs
push
cld
pop
jbe
cmpl
dec
mov
test
mov
adc
add
xor
cmp
out
mov
jbe
cmpsb
xor
adc
pushl
sbb
int3
jecxz
push
in
sub
jmp
xor
mov
cmpl
jbe
or
iret
push
mov
fsubrs
jge
or
adc
mov
test
pop
ds
sbb
clc
das
or
idivl
inc
pop
ret
mov
jmp
cmpb
cmp
and
dec
push
je
dec
pop
shl
out
mov
pop
adc
cli
inc
push
sbb
insb
add
fidivrl
iret
mov
dec
mov
push
xchg
mov
xchg
push
daa
pop
gs
add
sub
mov
mov
aam
pop
dec
mov
xchg
jo
test
int3
imul
out
lods
repnz
fcmovu
mov
inc
xorl
jb
je
imul
inc
pop
mov
sbb
dec
incl
or
incb
setge
inc
jmp
push
xchg
jns
sub
aaa
cmpb
into
mov
cmp
mov
sub
xchg
sub
or
add
push
js
bound
jecxz
jl
lods
sub
adcb
sbb
xlat
mov
lcall
mov
imul
loopne
inc
fcompl
pop
dec
or
fsubl
fcomp
mov
lods
push
xor
stos
fdivrl
shlb
popf
enter
inc
pop
cwtl
imul
lea
stc
out
imull
mov
sub
pusha
nop
pushf
in
dec
iret
rorb
lods
cwtl
call
add
addr16
popf
push
ret
int3
and
pop
mov
lea
jg
setb
jb
push
jne
cmp
jae
mov
inc
mov
lret
xchg
mov
adc
inc
sbb
enter
xlat
xor
popa
push
xlat
push
push
out
sarl
stos
sbb
pop
cld
pop
lcall
or
lock
lea
adc
pop
xorb
lret
dec
cmp
sbb
clc
aam
xchg
and
std
add
pushf
je
xlat
mov
adc
test
in
cmp
add
test
jnp
test
cmp
into
sub
clc
add
dec
inc
push
inc
rcr
and
emms
mov
std
push
sub
jl
pop
gs
shll
xchg
adc
or
push
push
push
jl
mov
jb
test
mov
or
cmp
or
jmp
mov
add
out
jmp
jp
ficompl
or
cld
xor
sbb
xor
cmp
adc
mov
lret
lret
dec
lods
arpl
movsl
cltd
jno
xchg
push
push
gs
pop
or
jmp
or
inc
cmp
shll
mov
xchg
repnz
negl
out
std
pop
popf
mov
jne
push
cmp
mov
nop
xchg
in
lods
cli
and
xorl
cmp
scas
xor
push
stc
dec
scas
sub
add
add
cmp
inc
popa
lods
xchg
sbbl
push
pop
inc
movsb
adcl
mov
adc
pop
mov
and
push
in
cmp
aam
inc
fcmove
mov
es
cmp
cmpl
loopne
jne
mov
push
jmp
dec
dec
int3
or
jne
mov
mov
xor
sub
mov
xor
jne
fcomps
divl
jmp
xchg
cs
push
sub
adc
push
push
insb
lea
xchg
and
push
sbb
and
dec
mov
fisttpl
aas
fiadds
mov
xabort
movsb
sbb
xchg
jo
sub
push
add
mov
jbe
jle
push
lcall
jae
cmpb
xor
jg
sahf
sbb
inc
jne
inc
movb
and
sub
jb
popf
mov
pop
inc
mov
call
adc
mov
push
inc
mov
nop
ret
outsl
call
test
jmp
mov
or
or
push
adc
repnz
mov
cmpsl
fcoml
pop
cmpsb
cmp
push
pushf
mov
pop
xor
out
mov
or
rcrb
cmp
mov
negb
pop
sub
je
and
je
mov
cmpsb
mov
nop
shlb
inc
inc
dec
les
out
rorb
jmp
sub
push
push
push
cs
xchg
arpl
xor
jg
loopne
das
aaa
xor
pop
inc
lea
inc
pushf
inc
mov
sbb
pop
cmp
push
push
or
push
and
mov
aam
xor
mov
mov
call
cltd
cmp
pusha
out
inc
mov
pop
inc
nop
lahf
mov
dec
sub
cmp
mov
push
icebp
fisttpl
push
or
and
cmp
pop
xchg
add
xor
imul
push
dec
aas
xchg
mov
or
mov
and
je
push
xchg
smsw
ret
and
sbb
push
jno
push
sti
pop
test
lods
xchg
mov
imul
push
int
mov
gs
push
jne
sub
sub
das
xchg
dec
lods
sub
xor
movsb
xchg
or
add
sub
adc
xchg
sbb
dec
inc
mov
dec
lea
popf
and
sarl
add
add
jg
add
or
cmpb
add
aam
clc
dec
jne
inc
push
sub
add
sbb
inc
sub
movsb
js
fs
rorb
sbb
mov
xchg
xchg
lret
mov
cmp
leave
sub
cld
fsubp
lea
loopne
enter
call
loop
pop
cmp
pop
or
idivl
call
add
mov
subb
add
or
adc
xor
push
cmpsl
push
jns
out
ljmp
dec
xchg
xor
adc
jns
inc
cmpsb
pop
fs
inc
inc
sub
rolb
jo
inc
notb
movsb
sub
shrl
negb
mov
stc
pop
mov
loope
jno
mov
add
adc
push
jb
cmp
or
jnp
mov
push
pop
pop
jbe
push
test
jne
adc
and
pop
sbb
sbb
shll
mov
add
and
push
imul
mov
js
xchg
jno
jae
psubw
jne
adc
jmp
stos
idivl
and
mov
repnz
pop
popl
mov
loope
pop
pushf
xchg
sbb
es
mov
sbb
xor
loope
push
mov
sbb
or
push
stos
cmp
push
xchg
test
and
nop
popa
xor
mov
cld
shlb
adc
nop
mov
and
adc
iret
push
xor
ljmp
scas
or
add
cmc
fwait
push
pop
mov
out
adcb
loopne
sub
cwtl
add
or
jo
or
test
cld
sti
xor
lock
or
movsb
neg
xor
push
pop
sbb
pand
stos
pop
push
ret
ja
jno
pop
addb
pop
push
aaa
lret
call
decl
and
ds
jne
movb
push
inc
cltd
pusha
lods
popa
jnp
jle
mov
fisubl
jne
add
jge
outsb
aam
or
sbb
sbb
push
dec
jno
jo
mov
pop
add
imul
sbb
enterw
dec
mov
and
nop
enter
sbb
sub
mov
push
cmp
push
pusha
mov
xchg
dec
call
jmp
adc
push
daa
popl
pop
pop
mov
add
push
sbb
and
movsl
movsb
pushf
xor
adc
xlat
cmp
cld
inc
clc
test
pop
sahf
mov
inc
fadds
dec
inc
cmp
repz
bound
sub
xchg
pop
hlt
enter
xor
icebp
sub
in
sti
or
hlt
push
iret
pop
jmp
pop
int
in
mov
aad
or
or
push
xor
jge
add
push
lcall
aas
div
cmp
ja
add
call
xor
sti
aam
mov
pop
or
es
mov
sub
fadd
jecxz
adc
cs
clc
imul
push
fwait
mov
push
cli
and
and
dec
cmpsb
out
and
cmp
gs
out
addr16
push
lock
psubusw
es
je
jnp
roll
add
push
sti
xor
or
fildl
adc
pusha
pop
sub
jne
orl
push
sub
iret
dec
imul
bound
enter
mov
shr
push
add
leave
adc
outsl
sub
add
pop
data16
fs
sub
push
insl
push
adc
call
push
adc
lahf
xor
cwtl
mov
xchg
das
in
push
xchg
push
and
imul
and
aam
data16
nop
data16
hlt
fmul
and
dec
push
clc
adc
inc
lret
sbb
insl
in
cltd
lahf
sub
ss
loopne
test
inc
push
push
push
lods
sbb
cs
ret
in
xchg
dec
enter
adc
mov
add
dec
cmp
daa
mov
gs
adc
daa
lret
dec
and
sbb
xor
cmp
or
jne
mov
and
sbb
ficomps
xchg
aas
jno
loopne
test
or
and
adc
mov
mov
out
or
mov
mov
sbb
mov
xchg
xchg
xchg
imul
sub
addb
sub
adc
cmpsl
sbbb
loop
out
andl
push
pop
mov
and
dec
jb
in
and
test
fwait
aad
test
jne
or
hlt
sbb
sbb
cmc
add
jb
adcl
add
sub
pushf
ret
jb
cmp
sbb
fwait
add
dec
and
pop
adc
leave
adc
or
movsl
and
bound
pop
sbb
add
add
out
sub
stos
mov
cmp
dec
loop
lret
insl
and
push
outsl
pop
mov
mov
ss
je
dec
add
and
or
cmp
mov
arpl
xor
cmp
push
test
inc
jne
xchg
insl
pop
aad
les
add
or
scas
xchg
movswl
in
jg
jle
mov
push
push
xor
xorb
cmp
outsb
pop
bnd
cmp
jle
leave
loope
adc
movl
push
push
test
push
add
fadds
sub
sbb
add
mov
sub
stos
test
aam
mov
scas
sub
adc
and
add
cmp
mov
xor
or
outsl
lahf
fs
xchg
or
sub
imul
jl
cmp
jmp
push
adc
add
nop
clc
int
add
pop
push
gs
lock
xchg
inc
addl
add
jge
fcompl
decb
jo
dec
pop
xor
sub
or
lcall
repnz
insl
xor
stos
hlt
popf
test
dec
aam
mov
andl
cmp
push
mov
rcrl
test
sub
or
add
rorl
mov
dec
cmpl
xchg
rorb
inc
pop
cmp
andl
in
mov
gs
sub
repz
add
mov
inc
dec
xor
data16
mov
ja
or
andl
xlat
aam
and
test
mov
rolb
sbb
les
in
hlt
or
push
ficompl
outsl
mov
add
sbb
inc
inc
outsl
add
inc
sti
push
push
pop
add
push
lock
add
mov
jg
outsl
ljmp
dec
movl
sbb
sbb
or
jl
cs
cmp
sub
sub
jb
cmp
xor
cmovge
clc
inc
jae
jp
xor
fmuls
sbb
cltd
fldl
push
popa
mov
push
or
daa
cld
dec
filds
mov
je
xchg
popa
cmp
movl
add
rclb
sbb
and
push
cld
test
cmpsl
arpl
out
add
mov
dec
add
push
andl
add
or
cmp
and
cmp
das
push
imulb
sbb
loop
aad
sahf
icebp
sub
push
cs
loopne
int3
addr16
icebp
xor
fcompl
repnz
clc
aam
or
gs
cwtl
sub
cmp
push
addr16
outsl
in
stc
sbb
jo
mov
jl
xchg
loopne
sbb
je
clc
lods
mov
mov
push
mov
lods
shrb
and
and
push
adc
adc
cmp
jo
cltd
mov
lock
movl
aaa
sbb
mov
shr
adc
outsl
mov
fwait
shr
pop
fcmovbe
jge
or
xchg
dec
sarl
sbb
cltd
jmp
push
add
sbb
sbb
ror
or
xchg
and
ffreep
cltd
push
cltd
fs
movsb
cltd
or
addl
andb
xchg
xchg
fs
cwtl
je
cltd
dec
cmp
in
inc
mov
push
sbb
or
adc
jmp
push
sub
xlat
int
pushf
test
cwtl
adcl
mov
enter
fcomp
jbe
lret
enter
ja
nop
in
enter
cltd
fadd
cwtl
daa
orl
test
or
mov
cwtl
sbb
sub
or
rcrb
in
jb
dec
test
sbb
insb
movsb
jl
add
pusha
in
stc
sbb
mov
popa
outsb
repnz
fstpl
mov
add
in
je
popf
mov
mov
movsb
shll
popf
mov
repnz
mov
and
lcall
stos
cs
sbb
repnz
cld
push
jo
pusha
mov
inc
rclb
add
mov
sub
pusha
repnz
nop
rorl
int3
js
movsl
add
mov
nop
xor
jb
mov
lods
rcrb
in
enter
sbb
mov
adc
xor
je
jb
clc
push
add
in
fwait
sbb
sbb
roll
and
sbb
pop
pop
lock
cmp
inc
fwait
mov
dec
sbb
push
or
mov
mov
xchg
xchg
outsl
in
insb
sbb
and
and
xchg
pop
mov
inc
mov
shlb
inc
mov
icebp
sub
mov
cmp
adc
pop
add
rcrb
in
lret
in
mov
repnz
in
leave
push
mov
stc
cs
inc
movsl
hlt
mov
pop
mov
mov
lcall
push
add
jno
xchg
out
push
imul
pop
mov
xor
push
js
faddl
pushf
pushf
dec
xchg
pop
cltd
enter
add
cmp
nop
push
arpl
scas
test
lea
mov
mov
xor
in
repnz
pop
mov
xchg
outsl
lds
les
pop
inc
movsb
int3
jge
int
xchg
jae
imul
pop
ja
cwtl
cmp
xor
xor
xchg
push
mov
lret
inc
les
xchg
cwtl
int3
pushf
aam
sub
push
xor
push
xchg
cltd
mov
sbb
jo
pop
mov
je
insb
addb
mov
inc
add
pop
mov
xchg
pop
gs
adcl
in
fwait
enter
stos
sub
daa
sbb
add
mov
lcall
gs
cwtl
mov
xchg
mov
stc
add
das
push
adc
cltd
mov
inc
in
cwtl
cwtl
xchg
movhps
mov
jb
mov
int3
movd
jle
or
mov
xchg
cwtl
fsubrl
sbb
mov
mov
movsb
shll
mov
push
xchg
sub
xchg
inc
cs
sarb
push
je
leave
aaa
repnz
sbb
dec
faddl
sbb
or
pusha
enter
jae
mov
mov
cltd
prefetcht2
in
xor
add
fdiv
lock
out
stc
pop
add
jb
mov
xor
sti
lock
js
push
jo
fistps
fadds
jb
aam
mov
push
cmp
rorl
in
loopne
int3
lcall
hlt
xchg
outsb
out
cmp
mov
mov
js
loopne
insb
nop
add
outsl
std
and
xchg
mov
dec
mov
dec
nop
aam
xchg
pushf
pop
leave
dec
dec
mov
leave
and
test
lods
inc
leave
and
mov
mov
leave
and
mov
and
shrb
and
enter
leave
and
shlb
daa
fdivrs
loopne
cmpsl
inc
cwtl
fmull
adc
imul
jnp
lds
mov
push
dec
sbb
and
xchg
pop
xchg
sub
push
or
push
jge
mov
jmp
arpl
mov
test
icebp
aam
add
or
sbb
xchg
push
sbbb
pop
push
jbe
sbb
clc
mov
mov
loopne
lcall
int
clc
scas
popf
clc
ja
lcall
inc
mov
mov
inc
inc
aad
test
les
jl
push
shll
add
mov
push
ja
cli
cld
push
jl
sti
pop
xchg
sbb
or
arpl
inc
lea
sbb
adc
stos
shl
mov
test
mov
add
inc
inc
dec
jns
inc
jecxz
sub
pushf
lods
fnsave
cmp
inc
xor
push
pusha
notl
lahf
addl
shrb
push
sub
add
bnd
mov
in
fsubs
jmp
push
cmpsb
or
leave
xor
mov
nop
jmp
cmp
scas
push
shrb
pop
out
pop
je
push
inc
jne
out
sub
ds
mov
mov
sbb
dec
jbe
jns
int
push
push
mov
push
sbb
add
jmp
lods
adc
add
jb
lock
addb
lods
lods
repnz
enter
mov
mov
push
rcr
movsbl
inc
imul
sbb
fs
aam
jp
push
fsub
xchg
insb
xchg
mov
fs
adc
add
jnp
sub
fdivs
xor
dec
mov
mov
imul
jo
push
hlt
inc
pop
ds
nop
enter
xchg
fs
push
clc
push
cmp
push
add
rcl
add
mov
mov
lods
cld
je
lds
stos
jge
cld
aam
xchg
iret
lret
and
push
cmp
arpl
dec
loopne
or
or
sub
inc
add
and
cli
or
and
aaa
addl
adc
test
loopne
pop
push
mov
popl
xor
push
sub
push
mov
pop
test
cmp
push
cmp
je
inc
dec
jb
sub
and
inc
push
test
push
sub
je
dec
je
imul
push
imul
movsl
loope
or
les
jmp
or
imul
jmp
and
mov
test
mov
inc
call
je
cmp
je
add
insb
mov
add
insb
mov
imul
out
add
bound
test
in
adc
or
and
lods
and
adc
mov
scas
aas
ss
adc
push
xor
movsl
push
repz
or
pop
adc
inc
or
dec
sub
clc
push
mov
call
call
cmp
jge
cli
jae
add
inc
nop
mov
sbb
mov
xor
or
inc
cmp
jl
cmp
push
cmp
clc
dec
cmpb
jne
mov
mov
cmpb
dec
or
sti
add
inc
jge
mov
inc
add
inc
cmp
jl
cmpl
je
jmp
add
mov
addb
fcompl
aad
mov
lea
notl
jle
jl
push
mov
cmp
mov
ret
negl
test
and
mov
dec
cmp
jle
pop
call
sub
fdivrl
pop
mov
gs
jl
cmp
jg
fisubl
xor
adc
adc
cmp
adc
test
mov
sub
iret
mov
loop
sub
xchg
pushf
std
ret
jns
sbbb
movsb
inc
gs
push
mov
pop
aaa
pop
icebp
jle
push
hlt
mov
bound
mov
jle
roll
cmp
jge
xchg
lea
cltd
rclb
outsb
mov
push
clc
cltd
bound
shll
dec
jmp
dec
inc
stos
push
mov
adc
mov
js
or
scas
and
pop
lea
mov
inc
loopne
mov
cmp
jg
or
jne
inc
fucom
outsb
inc
push
dec
lea
cmp
mov
jmp
jl
pop
fs
xchg
popa
adc
pop
gs
or
or
push
out
sub
pop
mov
jne
and
call
mov
adc
mov
cmp
push
sub
call
je
mov
aad
adc
imul
dec
and
lock
cld
push
das
xchg
hlt
push
sbb
dec
push
fs
jb
les
mov
das
sub
pop
xchg
sbb
decb
cmp
out
or
jmp
stos
add
xchg
scas
push
ficomps
dec
js
mov
test
int
jns
cld
push
pop
rorb
add
push
push
imul
push
das
out
in
xchg
adc
arpl
and
lods
push
xor
lods
inc
or
jnp
fadds
out
fsubrl
movsl
ljmp
iret
jl
into
fimuls
ja
pop
dec
lock
push
cli
clc
push
dec
pop
xchg
push
scas
out
add
or
dec
push
call
fs
mov
adc
je
jmp
pop
shrl
movsb
pop
in
pusha
je
pushf
cmp
or
and
mov
cmp
inc
jo
or
imul
jge
sbb
push
and
pusha
pushf
in
mov
jge
jge
mov
inc
movsb
outsl
push
mov
push
adc
scas
out
fs
aaa
cmp
mov
js
add
inc
enter
add
mov
mov
es
pushf
mov
cld
fidivl
insb
add
cmc
scas
hlt
repz
or
push
dec
test
pusha
pop
jae
pop
sub
xor
mov
and
or
int3
sarb
adc
adc
jbe
sbb
mov
fcomp
mov
add
hlt
sub
popa
nop
pop
les
push
adc
push
gs
pop
mov
push
les
xor
arpl
xor
test
mov
pushf
test
or
loope
and
sbb
sbb
dec
call
xor
das
mov
sbb
lea
push
icebp
ss
xor
add
sbb
sbb
pusha
mov
cmp
sbb
loopne
dec
stc
xlat
incl
add
push
cmp
jne
pushf
push
orl
inc
xchg
jge
add
movsl
stc
and
mov
mov
std
xor
test
enter
or
inc
xlat
mov
pusha
scas
xchg
lods
xchg
sbb
xchg
and
cmp
pusha
jae
jbe
mov
push
popa
loope
movsl
dec
inc
scas
in
xor
xchg
ja
or
add
or
xor
jns
cltd
and
movl
sbb
sbb
sti
filds
inc
mov
jp
fidivrs
sbb
rol
popa
lods
sbb
or
adcb
dec
and
in
dec
dec
shrb
loope
hlt
repnz
cmp
push
pushf
sti
add
mov
leave
adc
mov
les
scas
lcall
jne
pop
lcall
xchg
mov
and
inc
mov
je
ret
cmpsl
rorb
cmp
in
lea
test
cs
inc
mov
jecxz
adc
add
pop
inc
xchg
sub
xor
pop
int
push
rcll
push
xchg
xchg
sub
in
push
lea
mov
mov
scas
shl
mov
mov
in
xlat
arpl
push
sub
mov
jbe
dec
mov
xchg
push
dec
data16
cmp
jns
cmp
cmp
mov
das
shr
pop
dec
xchg
xor
lock
ret
pop
daa
sbb
jp
pop
inc
inc
jb
std
xor
sbb
push
jno
cmp
mov
in
aas
dec
sar
mov
sub
add
jle
or
jg
sbb
mov
jmp
jmp
sbb
mov
dec
wrmsr
std
or
mov
test
js
ss
xchg
add
push
mov
cld
cmp
ja
sar
fstp
mov
ja
je
mov
sub
cmp
add
push
push
je
cwtl
fisubrl
out
lahf
jo
push
cmp
pop
xchg
adc
enter
dec
sbb
subl
xchg
adc
add
dec
movsb
pushf
or
out
es
nop
mov
jge
rorb
push
fdivl
ja
je
cld
jg
pop
lea
adc
movzbl
and
shrl
adc
cmp
ss
xchg
mov
loopne
push
adc
in
mov
mov
cld
ss
adc
lds
mov
faddp
imul
push
xchg
iret
repz
pop
test
push
sarl
add
or
add
or
mov
pop
ret
dec
push
or
and
bnd
push
fmull
xchg
stos
push
fidivs
inc
cmpsb
js
xor
je
adc
push
mov
mov
xchg
jp
push
into
jle
shll
je
add
das
and
xor
mov
sub
sbb
adc
pop
je
cs
loopne
adc
pushl
enter
add
jl
mov
dec
and
and
and
outsb
fmull
mov
ss
inc
pop
push
data16
mov
mov
xchg
xor
xor
scas
bound
cs
js
dec
jne
push
push
add
push
jge
add
and
sub
jne
push
pop
mov
fidivrs
jbe
jb
push
mov
mov
pushf
or
cltd
xchg
pop
loop
sub
jnp
arpl
dec
mov
scas
xlat
pop
or
xor
mov
roll
sub
or
mov
cmp
xor
mov
clc
sub
loop
testb
mov
push
orb
out
imull
push
pushl
pop
cmpb
add
repz
push
packuswb
sbb
enter
adc
aaa
scas
test
mov
and
mov
in
hlt
sbb
aam
cld
push
or
inc
xor
push
cwtl
fsubs
insb
push
and
add
xor
js
push
inc
loopne
rorl
add
clc
lea
mov
mov
push
push
push
xor
cmp
nop
pop
mov
jl
pop
out
mov
adc
mov
adc
sahf
jae
std
adc
andb
cmpsb
adc
sub
pop
pop
xor
popf
jge
push
sub
hlt
xchg
jne
pushf
cmp
pop
cmpsl
mulb
popf
scas
xchg
and
cmp
adc
cmp
stos
call
mov
and
and
insl
jle
aad
push
shlb
insb
lea
jbe
mov
sbb
sbb
dec
fistl
call
add
mov
sub
sub
cmp
and
push
repnz
out
movsb
sete
loopne
xor
ret
xor
rorb
add
ret
pop
or
xchg
nop
xchg
and
int
lock
pop
pop
xchg
test
cmp
and
cld
test
pusha
and
push
mov
imul
dec
cmp
and
inc
mov
add
sbb
sub
js
and
jge
ss
bound
in
and
jo
pop
cs
fcoml
push
cltd
sbb
add
mov
add
les
xchg
out
dec
ror
mov
push
and
fstp
push
mov
repz
and
test
dec
pop
loopne
popl
xor
cmp
sub
mov
inc
mov
dec
jbe
push
jg
jb
insb
enter
or
mov
add
push
or
movsb
add
lock
loopne
inc
adc
mov
lahf
das
lret
mov
rorb
jb
adc
or
mov
in
sub
xchg
xchg
and
sbb
cmp
mov
xor
dec
cmpsb
xchg
test
xchg
sub
mov
xchg
mov
mov
dec
cmpsb
dec
loopne
in
sub
hlt
inc
push
or
cld
clc
sub
add
push
sbb
mov
push
add
pop
mov
je
dec
rolb
jl
fstps
imul
inc
out
push
xchg
and
outsb
cmp
jb
rolb
xchg
dec
into
in
sbb
add
cmp
jno
push
clc
xchg
jl
call
call
jno
mov
pop
add
add
add
adc
pushl
mov
xor
xchg
sbb
mov
in
sbb
adc
ret
jmp
stc
pusha
lea
pop
lcall
shl
lock
xor
sahf
stc
add
pop
leave
out
dec
cltd
scas
mov
js
or
pop
xor
in
lea
and
leave
pop
or
push
mov
ja
je
dec
hlt
inc
or
je
xor
clc
sbb
add
xor
and
pushf
adc
nop
inc
push
jb
int3
mov
inc
xchg
jl
sub
js
fsubrs
sahf
or
mov
adc
mov
ret
fdivrl
jo
lds
mov
jle
xor
lods
adc
push
dec
adcb
xchg
mov
inc
dec
push
pop
outsb
mov
lret
aaa
sub
pop
je
or
int
sub
mov
js
dec
mov
into
add
push
sbb
xchg
push
push
loop
mov
or
mov
adc
clc
jnp
rcrl
subb
pop
cld
jo
xorb
mov
xchg
lock
jmp
les
mov
dec
push
fimull
pop
cli
mov
mov
push
push
push
cmp
mov
jecxz
push
add
mov
and
inc
or
cmp
and
mov
out
mov
push
push
xchg
mov
or
lahf
dec
sahf
sbb
push
pop
int
jbe
jns
out
loopne
out
or
call
mov
lock
mov
lock
ror
xchg
loopne
xchg
loope
rcrl
dec
jle
pop
je
loope
mov
sub
hlt
mov
jg
xchg
jne
aas
sbb
pop
or
jle
or
push
mov
add
mov
jg
mov
pop
sub
mov
cmp
cmp
jmp
add
push
stos
aaa
clc
add
sub
sbb
cmp
push
xor
pop
mov
push
negl
into
sub
mov
sub
inc
div
dec
ficomps
sub
push
pop
inc
loope
ret
inc
push
xchg
mov
sbb
or
xor
cwtl
or
adc
xchg
fidivrl
adc
shrb
cmc
ja
pop
pushl
mov
push
mov
xor
sbb
fmull
or
rcrb
jp
sub
nop
inc
push
sbb
mov
int3
add
fidivrs
xor
jle
sbbl
cmp
insb
sbb
fcom
outsb
adc
xchg
call
sarb
xor
sub
push
dec
push
sbb
sbb
mov
ret
add
lods
cmp
aam
inc
mov
ret
push
ret
nop
inc
ret
xor
push
movsl
lods
push
mov
shlb
aad
jb
lods
movsb
cmp
sub
int3
dec
mov
sahf
in
xchg
je
xor
dec
pop
push
rcrb
xor
inc
or
mov
cwtl
movsb
sub
in
or
dec
adc
push
out
paddsw
je
xor
inc
or
je
cld
push
jno
cmp
ret
je
adc
mov
inc
jp
and
lahf
inc
andb
fildll
movsl
jmp
jl
lahf
pusha
les
adcl
add
icebp
in
jb
sub
js
decb
loopne
into
sbb
dec
das
cmp
mov
xor
inc
push
adc
jge
je
mov
loopne
pop
lea
lods
repz
rorb
or
sbb
in
jne
cltd
dec
push
rolb
inc
rcrb
and
pop
inc
inc
push
push
push
inc
or
xor
bnd
rcrb
xor
js
push
lock
push
push
pop
mov
cmpsb
lock
pop
cmpsl
cmc
rolb
jno
mov
cmp
adcb
pop
test
fmull
cmpsb
dec
dec
mov
cmp
dec
ret
mov
xor
test
popf
add
addl
das
add
in
in
cli
add
jns
addr16
and
add
call
in
xchg
sbb
or
test
inc
xor
push
iret
xchg
adc
leave
mov
sbb
cmp
gs
test
push
and
popa
pop
sbb
mov
insb
mov
inc
jp
inc
jbe
cmp
mov
adc
push
mov
mov
xchg
pop
adc
ljmp
addb
mov
or
dec
cmp
test
xlat
cmp
inc
jecxz
test
add
mov
mov
push
adc
adc
dec
or
test
lock
call
sub
dec
mov
leave
xor
in
and
jo
in
addl
xchg
cld
iret
test
repz
push
and
popf
hlt
or
sarl
test
or
imul
int3
jnp
sbb
jne
lret
or
push
xchg
fsts
sub
add
bound
sbb
push
inc
or
or
fs
leave
fiadds
test
jns
xchg
sbb
xor
shrl
xor
mov
iret
add
fidivl
ret
mov
ret
pop
xchg
cmpb
in
push
push
sub
in
push
mov
jns
cmpsb
cmp
or
cmp
jge
sub
jno
loopne
mov
jl
cmp
push
dec
jo
push
dec
sarl
cmp
push
cmp
js
idivb
aaa
cmp
push
and
jbe
fstps
jle
or
jl
and
or
ds
cs
test
sbb
or
cmp
and
or
add
call
push
lds
jns
mov
xor
or
outsb
lcall
xor
sub
ficomps
loop
movsl
adc
outsb
je
negb
pop
js
jmp
push
jl
jmp
inc
cmp
xor
inc
sbb
sbbb
enter
test
add
dec
sbb
lods
fisttpll
repnz
push
bsr
pop
sbb
mov
ficoml
xor
jno
cmp
jbe
pop
add
movsb
sub
or
jg
add
cmp
push
inc
cmp
jl
push
push
sub
adc
jle
pop
and
mov
repz
mov
push
or
mov
cmpsb
shrb
mov
or
pop
dec
data16
mov
push
shr
mov
neg
lea
push
in
mov
cmp
movl
jmp
and
test
pop
je
xchg
or
enter
dec
adc
add
mov
shr
shl
loope
add
push
or
pop
stos
ret
jle
enter
or
lahf
dec
cmpb
cmp
mov
mov
fstpt
add
hlt
and
mov
pop
jnp
push
hlt
cli
test
inc
fdivs
fistpl
mov
jo
loope
jge
or
jg
lcall
je
lea
pushf
jmp
cld
dec
mov
mov
mov
push
addb
pop
je
enter
mov
pop
sub
inc
push
mov
push
pop
inc
and
sbb
cltd
push
push
outsl
and
fdiv
or
mov
pop
aaa
test
jmp
cmpl
and
fdivl
out
jo
inc
sbb
inc
mov
push
xorb
push
mov
and
or
mov
mov
test
imul
rcr
ret
fldt
andl
xor
add
sahf
or
sub
xchg
mov
or
or
sub
pusha
test
xor
or
pushw
lods
pushf
insb
and
in
hlt
mov
bound
testb
cmp
push
in
les
aad
sarb
mov
dec
in
or
int3
mov
pop
xor
fdivl
mov
push
roll
or
test
lods
dec
sti
add
cltd
inc
scas
nop
test
jmp
sbb
push
fadds
xor
jg
and
add
and
pop
jbe
mov
inc
mov
xchg
aas
fiaddl
add
push
mov
inc
dec
fsubrs
pop
push
push
stos
lods
dec
push
push
addl
dec
add
mov
mov
mov
jmp
je
push
cwtl
push
inc
loopne
lock
flds
jle
or
jge
adc
push
or
pop
sarb
push
jbe
ds
push
cli
imul
lock
sarb
daa
hlt
sbb
xchg
or
pop
xchg
dec
push
nop
adc
pop
mov
cmp
sub
mov
mov
push
lcall
test
pop
lds
push
push
int3
lret
mov
push
iret
or
in
int3
enter
cmp
mov
xor
fs
jae
lret
xchg
fdivr
inc
push
cmp
sub
aad
fcompl
lds
insl
jno
push
adc
mov
fsubl
mov
xchg
inc
shlb
xchg
jge
jle
and
sub
xor
das
cmpsb
jl
push
push
push
pop
dec
mov
adc
addr16
rcrb
pop
jbe
outsl
cwtl
xchg
ja
lea
into
and
rcll
ret
mov
mov
mov
mov
xor
lds
xchg
add
add
in
cltd
sub
cmp
lock
or
clc
add
sub
xchg
lock
push
shrb
js
jae
pop
arpl
push
stos
mov
ret
jp
sub
add
jmp
adc
mov
fstl
je
xchg
jbe
push
jb
cwtl
data16
mov
push
push
stos
sub
stos
loope
adc
fwait
mov
or
mov
pusha
pop
popf
mov
mov
shrb
filds
not
sbb
mov
fwait
sbb
inc
push
ret
je
fcoml
or
and
mov
negb
clc
mov
aam
out
xor
pop
xor
cmp
add
pushf
xlat
push
fstps
cmp
mov
aam
dec
daa
loopne
mov
sbb
faddp
add
sbbb
pop
mov
push
roll
cmp
dec
enter
pop
fadds
int3
dec
enter
push
inc
ffreep
test
mov
pop
add
out
push
adc
xor
in
scas
push
stc
xor
mov
and
xor
ret
adc
cwtl
xchg
inc
fs
nop
cmp
push
jmp
push
mov
dec
imul
mov
sbb
cmp
ret
mov
mov
sub
in
push
xor
jo
or
add
mov
push
push
or
add
arpl
arpl
mov
add
mov
repnz
bound
loop
xor
push
xchg
aam
loop
mov
sbb
in
in
xor
cmp
push
add
fsts
andl
cld
aas
dec
std
pop
pop
add
xor
lret
dec
add
jns
aam
dec
pop
and
xchg
dec
rclb
es
fdivs
sti
adc
or
xchg
and
or
ret
cmpsb
loopne
clc
and
inc
test
cwtl
add
movl
mov
test
push
jns
mov
in
sti
mov
cmpb
mov
std
mov
cmp
cs
je
movsb
lret
mov
popf
mov
xor
mov
push
push
pop
lret
inc
cmp
inc
ss
pop
or
push
shlb
test
pushf
pusha
or
movsb
add
xor
jg
test
loope
mov
nop
mov
pop
sbb
pusha
arpl
jo
imull
lret
mov
sbb
mov
adc
mov
nop
dec
push
pop
rorl
mov
clc
and
adc
cmp
push
jno
clc
lea
dec
or
pusha
int3
adc
pop
or
jne
int3
aad
test
cmp
les
push
cmp
push
mov
fmulp
mov
add
cmp
jnp
mov
sbb
jne
cmp
popf
add
popf
inc
dec
xor
mov
fnstsw
adcl
or
clc
adc
aaa
push
outsl
push
in
stc
mov
or
add
out
aad
xor
cmpsl
sub
pop
je
jmp
lods
jmp
dec
inc
inc
lods
sbbb
clc
jb
ja
adc
sub
adc
push
adc
sbb
sarb
inc
xor
sub
inc
push
loopne
pop
lods
sub
je
ficompl
mov
push
in
in
mov
push
jmp
out
xchg
xlat
stc
and
cwtl
pop
push
push
cs
cld
pcmpeqw
out
and
or
jne
out
subb
int3
rcll
adc
or
fdivl
in
push
xor
insl
xchg
fisubl
mov
ret
les
mov
shlb
mov
or
push
adc
add
sub
xor
jle
mov
adc
push
lock
out
xchg
xchg
daa
or
aas
cmp
je
mov
mov
jne
or
mov
or
sbb
adc
add
in
jo
mov
and
sti
and
stos
sbb
js
pop
test
lds
inc
les
js
push
xchg
aam
xchg
addl
and
mov
imul
inc
loopne
cmpsl
ja
jne
add
xor
popf
cld
rorl
ljmp
push
imul
icebp
mov
or
add
idiv
loop
aas
mov
jo,pt
jmp
mov
sub
arpl
or
loopne
shll
sbb
push
sub
jp
inc
sub
pop
mov
push
iret
test
add
add
imul
decl
push
shlb
mov
cld
push
jl
push
push
xchg
and
sbb
rclb
mov
and
fs
fisubs
cld
call
add
add
fs
int3
xchg
lahf
and
add
dec
xchg
nop
add
mov
in
and
pusha
add
mov
ds
movsb
inc
je
rcll
bnd
movsb
jmp
sbb
xor
or
incl
aaa
mov
clc
int3
lds
add
roll
sub
icebp
mov
std
dec
adc
ljmp
femms
sbb
pop
cmp
push
es
or
sub
xor
mov
push
pusha
lock
sbbl
mov
pushl
add
mov
je
test
sbb
jo
int3
mov
je
in
mov
jb
nop
sbb
add
aaa
add
es
push
aam
mov
test
or
lock
aad
add
dec
push
js
cwtl
sbb
add
cmpsb
test
sbb
pusha
incl
mov
mov
push
sub
arpl
mov
push
outsb
loopne
lds
popa
push
out
ja
or
add
or
xchg
push
bnd
hlt
int
addl
mull
lock
lea
add
jp
ret
inc
lods
inc
jle
and
and
push
and
ljmp
or
popa
mov
std
je
or
je
cmp
push
repz
notb
pop
and
add
lock
je,pn
and
rcrb
sbb
push
lods
andl
mov
and
add
test
adc
inc
lcall
imul
cld
sub
sub
idivb
or
inc
pop
sbb
pop
ss
sub
lock
sbb
aaa
dec
pusha
push
jge
push
push
sub
ds
or
insl
cmpsb
inc
push
dec
pop
push
mov
mov
adc
pop
pop
pop
cmp
push
pop
jbe
call
mov
int
cmp
push
push
shrl
cmp
dec
call
add
push
cld
pop
fsubs
cmpb
jne
cmp
xor
mov
movb
add
add
dec
sub
cmp
jge
mov
lock
cmp
clc
adc
subb
mov
or
pop
cmp
outsb
fcomps
mov
jae
pop
les
sub
jl
jne
jg
push
push
call
js
cmp
add
jp
popf
arpl
mov
inc
mov
mov
inc
fiadds
ror
xchg
test
or
adc
add
push
loopne
or
and
sbb
mov
inc
inc
pop
dec
jnp
mov
cmp
push
loope
lock
lock
jae
push
xor
adc
call
rolb
cmp
dec
fwait
or
add
notl
nop
and
pop
jne
hlt
pusha
mov
xchg
cmpsl
inc
sub
cmp
jo
sub
je
addb
addr16
and
push
stc
inc
and
add
addb
push
mov
xchg
xor
sub
dec
sub
insl
dec
int
cltd
pop
sub
lds
xchg
mov
andl
dec
sub
lahf
jns
or
lahf
sarb
xlat
inc
add
cmp
aam
mov
jge
imul
cmp
or
int
aas
and
and
pop
jle
movb
inc
cmp
mov
mov
outsb
jo
lock
outsl
or
ret
dec
xchg
rcll
ljmp
mov
adc
mov
scas
xor
in
jge
jno
pop
cld
xor
cmp
je
cmp
mov
cmp
inc
add
pop
add
sbbb
add
pop
dec
cmp
mov
imul
mov
sbb
xor
add
pop
add
les
movsb
cld
std
sbb
outsb
loop
adc
dec
add
push
dec
sbb
push
jne
mov
sbb
leave
adc
nop
cmpsl
sbb
jo
pop
or
or
xor
aad
mov
inc
ret
pop
cmp
pop
inc
and
test
mov
movsl
mov
js
sbb
test
dec
mov
inc
inc
xor
mov
add
xor
mov
pushf
nop
rol
and
pop
mov
dec
or
mov
xlat
jnp
push
int3
dec
stc
add
in
aad
popf
shrb
sarl
mov
rorb
test
sub
sub
shll
mov
xor
fs
dec
or
dec
add
aaa
mov
adc
cs
sahf
xchg
js
clc
cmp
adc
nop
push
sub
mov
lock
and
test
cmp
rorb
adc
adc
inc
fdivs
std
fs
movsb
adc
leave
and
out
push
iret
add
cmp
xchg
or
lea
and
into
mov
push
out
and
sbb
aam
and
xchg
ret
mov
jno
out
int3
fmull
out
or
lea
js
add
das
cmp
aaa
ss
push
clc
xchg
xor
clc
push
lock
sbb
sbb
das
pop
adc
jmp
mov
adc
mov
mov
mov
je
mov
jmp
mov
cmp
or
pusha
cmpsl
test
in
imul
imul
mov
lods
adc
jbe
fsubrs
test
adc
imul
jecxz
andl
pushf
dec
jb
xchg
in
add
mov
push
push
orl
mov
adc
sub
xor
xor
mov
xlat
jecxz
sub
lret
and
pop
inc
and
pop
push
decb
cmp
and
mov
inc
pushf
fxch
jge
in
xor
test
movsb
sub
pusha
das
shlb
sbb
loopne
inc
shlb
xor
pop
push
imul
je
mov
push
sub
add
add
fsts
mov
cmp
int
mov
or
cmc
clc
jne
mov
outsb
orl
dec
add
xchg
and
js
out
push
lds
mov
setl
mov
test
lods
push
inc
adc
push
adc
lock
or
fldl
inc
hlt
loopne
inc
mov
loope
jo
hlt
daa
inc
std
sbb
cmpb
xorl
pop
sbb
xor
aas
mov
adc
decl
subl
mov
pop
push
ss
sub
mov
clc
jne
xchg
test
pop
mov
js
les
jg
movl
into
jp
jmp
mov
hlt
movb
clc
and
cmp
inc
add
and
add
aaa
jnp
jbe
sbb
adc
mov
push
cmpl
push
sbb
cltd
movsb
sbb
addr16
add
sbb
loope
jl
adc
jle
mov
in
push
push
dec
xor
popl
jle
and
inc
pusha
lds
cmp
adc
pusha
in
enter
push
in
inc
push
adc
sub
mov
sub
push
inc
jb
mov
fbstp
into
pop
enter
dec
and
jns
push
fcmovnu
jno
push
and
push
test
cmp
aaa
pop
pop
push
pop
loope
mov
jmp
cmp
jle
sbb
stos
mov
or
xlat
push
cmp
push
dec
movsb
jnp
sub
dec
sub
pop
es
mov
add
mov
nop
xchg
lods
adc
jns
jb
adc
dec
test
xor
cmp
inc
sti
dec
rcrb
enter
or
sub
fistpl
jb
xor
icebp
aas
repz
popa
cmp
jle
sbbl
adc
add
pop
jmp
dec
push
nop
cmpsb
push
jl
test
in
cmp
cwtl
call
dec
sub
punpckhbw
nop
int3
or
in
lret
in
or
add
repnz
add
fimuls
push
cmp
dec
and
push
inc
es
add
push
pop
sub
mov
dec
jo
nop
lret
les
ret
shrl
jb
cmpb
push
cltd
movsb
push
sub
lock
psubw
push
sbb
into
adc
add
fiaddl
dec
enter
lds
and
insb
pop
es
inc
js
lods
dec
dec
in
roll
mov
aam
fsubrl
pop
repnz
or
movsb
jb
repz
and
inc
or
inc
sub
and
sub
add
movsl
ljmp
icebp
or
insl
int3
insb
es
adc
nop
lret
test
fcoms
lock
inc
hlt
pop
repnz
and
in
and
lret
test
pop
jle
jb
nop
js
subb
jb
cs
aad
movsb
in
pop
es
inc
cmpl
lret
inc
dec
cs
xor
xchg
adc
pop
es
dec
cwtl
jb
nop
lret
cmp
adc
lods
jne
jo
in
pusha
and
dec
sub
inc
push
push
arpl
pusha
push
jl
sbb
cmp
adc
xor
adc
jns
test
pop
jecxz
jl
push
or
pusha
jecxz
mov
in
mov
dec
js
cmp
pop
xor
enter
cmp
inc
cs
int3
in
pop
es
enter
in
and
gs
sub
sarb
sarb
in
cmp
enter
lret
add
lret
test
dec
sub
sub
cmc
sbb
loop
pop
push
mov
je
subb
add
aam
out
ss
and
or
pop
inc
out
jmp
lock
xchg
or
into
aas
sub
push
enter
xor
fisubl
es
inc
xchg
pushf
inc
in
inc
dec
mov
and
push
xor
cmp
push
in
pushf
dec
fs
xor
es
fildll
mov
pushf
fsubs
in
inc
pop
loopne
jb
and
jmp
xchg
adc
xor
nop
xchg
or
pop
sub
xor
roll
push
in
ljmp
dec
push
jb
and
xchg
jmp
cltd
nop
xchg
cs
aam
sbb
xchg
or
in
pushf
sbb
dec
es
sub
jl
mov
mov
mov
cmp
sbb
enter
mov
lcall
aaa
cwtl
pop
or
ds
pop
imul
jns
mov
aaa
cltd
fwait
cld
cld
cmp
or
xchg
jbe
mov
js
xor
mov
sti
in
pop
or
icebp
jl
aam
dec
cs
push
clc
cld
in
sub
icebp
je
test
clc
cld
int
ds
add
lods
inc
jmp
or
test
add
mov
loopne
aam
outsl
jge
push
std
cmpsb
inc
jle
push
sbb
movsb
pop
in
sbb
adc
enter
add
in
and
sbb
push
jnp
test
das
xchg
insb
and
in
sub
in
in
stos
aas
add
or
inc
enter
insb
fsub
inc
idivb
sbb
imul
movsb
sbb
inc
fisubrl
add
lods
out
xchg
dec
adc
in
or
mov
xchg
pop
dec
pop
push
sbb
cmp
fcoms
push
jl
xchg
mov
jg
add
inc
inc
sub
push
adc
sbb
sbb
leave
and
enter
and
jo
xchg
out
imul
or
dec
sti
xorb
je
push
lods
mov
push
push
jge
sub
lods
lahf
mov
in
je
push
movl
mov
or
inc
inc
lds
out
sbb
adc
out
cmpsl
adc
inc
clc
loopne
js
add
loopne
push
sbb
push
rcrb
add
movsb
jb
in
jmp
inc
fs
in
insb
xchg
loope
dec
jo
leave
xchg
dec
jb
addb
inc
xor
mov
lock
cmp
data16
add
cs
ret
in
xor
cwtl
aaa
sbb
sarb
pushf
cwtl
sub
cmp
rolb
jge
fisubrl
jo,pt
jbe
lahf
scas
das
xchg
dec
sub
cmp
mov
inc
dec
add
movd
call
sbb
cltd
pop
fs
jnp
in
in
test
lock
jb
lock
adcl
mov
adc
pop
aad
jne
aam
out
xor
js
push
loope
xor
mov
cmp
pop
or
aad
mov
enter
and
mov
rcrb
and
loopne
jle
repz
test
js
es
and
fs
and
inc
dec
rclb
adc
hlt
daa
nop
xchg
or
adc
cmp
test
inc
inc
dec
enter
jo
es
pushf
aas
movsb
daa
in
inc
sub
lds
xor
and
scas
lock
daa
adc
sbb
or
inc
sbb
test
inc
dec
es
adc
jb
sbb
cmp
jb
fcomi
pop
mov
ficoms
mov
nop
daa
adc
sbb
pop
nop
xchg
or
and
push
jmp
adc
fs
aas
js
cmpsl
jg
les
or
sub
pop
jb
clc
aad
jo
or
cltd
mov
pushf
nop
call
pmulhuw
xchg
pop
stc
cmp
adc
and
nop
xchg
psubusb
push
push
cli
adc
repnz
repz
and
int3
lock
sub
f2xm1
lods
or
xchg
or
jl
hlt
mov
push
or
in
or
adc
repnz
ret
stos
jb
and
adcb
add
leave
test
inc
dec
add
lock
incb
or
push
sbb
add
out
and
mov
sbb
hlt
aam
andb
xchg
push
or
add
xorl
stc
aas
aad
mov
add
sahf
mov
repz
mov
xchg
add
xor
sub
faddl
shrb
sbb
sub
rcrb
call
push
mov
jnp
adc
xchg
sub
je
repz
mov
cmc
pop
sub
or
sar
movsb
lds
push
or
sub
pushl
mov
add
or
jae
jl
dec
push
popl
lods
xor
push
or
cmp
cmp
inc
sbb
push
adc
jg
roll
pop
arpl
jo
and
push
cli
insl
repnz
push
hlt
cli
jmp
jne
jecxz
push
jns
mov
mov
fdiv
sbb
outsl
bound
lods
inc
jl
test
jae
js
pop
out
mov
or
shlb
fs
jp
shrl
fistl
jmp
xchg
ljmp
mov
add
push
pop
sbb
std
sub
sub
sbb
xchg
add
add
add
lahf
add
sbbb
pop
mov
mov
and
jnp
inc
cmp
mov
mov
js
push
mov
add
dec
dec
sbb
jmp
dec
sub
or
popf
dec
pusha
and
test
or
loope
nop
mov
js
cli
cmp
loope
ficomps
std
in
int3
aam
movsl
loop
iret
pushf
std
sbb
and
popa
push
fcmove
or
mov
add
je
inc
mov
mov
pop
add
inc
inc
sbb
inc
push
inc
test
xchg
or
stc
inc
mov
xchg
scas
push
mov
adc
push
and
xchg
out
in
xor
cmpl
mov
mov
daa
cli
inc
insl
lods
xchg
fnsave
adc
dec
int
test
lods
mov
mov
test
adc
std
loope
dec
sbb
and
dec
push
mov
add
add
mov
inc
jae
sbbl
dec
add
jno
orps
dec
hlt
jmp
mov
ret
jge
lock
cld
mov
xor
pop
leave
sub
xor
rclb
rolb
loop
movsb
and
lods
loopne
cmp
inc
stos
add
pop
addl
push
add
jle
dec
in
add
daa
and
out
pop
add
sahf
push
inc
mov
jo
push
testb
and
jae
push
pop
adc
push
lea
dec
mov
fdivrs
jg
adc
in
dec
adc
inc
pop
inc
out
inc
pop
cmpsl
fwait
jp
pop
mov
add
aas
adc
xor
inc
or
or
lahf
loop
enter
cmp
mov
rcrb
push
jne
fs
mov
or
jl
and
js
das
mov
push
mov
pop
add
sbb
xor
mov
int
add
jb
mov
cs
cmp
add
mov
int3
push
cmp
outsl
std
cmpb
mov
add
push
enter
pop
xchg
repz
jle
sbb
and
add
jmp
push
sbb
pushf
lea
ret
je
inc
jg
xor
pop
jnp
ds
inc
mov
dec
mull
cmpl
or
add
cld
push
cmp
push
cmp
inc
das
cld
movsbl
cmp
jl
jo
addr16
es
push
sbb
out
cmpsb
int3
sti
xor
popf
mov
into
dec
shrl
or
int3
cli
arpl
lea
adc
mov
sub
and
cli
decl
cmpb
jne
push
jmp
mov
loope
jno
mov
dec
mov
pusha
add
or
cs
icebp
hlt
lea
aam
push
daa
xor
pop
push
sub
mov
sbb
fdivrl
aas
and
jle
mov
inc
pop
cmp
and
sbb
push
push
loop
adc
xor
push
push
ss
mov
insb
movl
adcl
add
pop
pause
outsl
aad
cmp
adc
and
dec
repz
adc
jmp
fsubrs
fiadds
arpl
jae
push
jle
imul
push
jb
mov
sub
in
stos
sub
dec
inc
add
insb
sub
or
outsb
dec
dec
and
enter
loopne
sarl
rclb
in
lock
jbe
insb
inc
in
or
in
outsb
cwtl
ja
sub
inc
stos
mov
inc
pusha
cld
sbbl
dec
scas
cld
xchg
mov
divl
mov
sbb
das
pop
idivl
movsb
or
pusha
loopne
inc
lods
or
xchg
in
add
cs
rcll
push
cltd
mov
repnz
or
lods
les
hlt
cltd
orb
repz
loopne
dec
clc
hlt
fisubrs
stos
popf
hlt
or
sbb
push
gs
nop
mov
fdivr
jb
xor
mov
loopne
and
lock
sbb
inc
push
or
adc
pop
ss
jecxz
cmp
and
cmp
sti
popf
test
dec
movsl
dec
dec
pop
dec
psubb
adc
out
push
push
adc
int3
sbb
pand
pop
iret
mov
addl
movzbl
lret
cli
add
cld
test
and
add
push
lcall
push
enter
dec
inc
subb
aad
mul
nop
stc
jg
outsl
ret
cmpsl
push
xchg
pop
push
jns
adc
jo
xchg
outsb
pop
xchg
or
mov
sub
mov
lods
cmc
add
dec
cmpsl
iret
xchg
push
push
cmp
nop
rclb
mov
push
xchg
or
and
nop
pop
inc
sbbl
iret
and
test
cwtl
clc
sbb
stc
push
inc
inc
mov
cmp
fs
dec
push
or
jns
and
adc
loopne
jb
mov
mov
mov
popa
jo
or
mov
sbb
fldcw
pop
dec
inc
mov
mov
sti
lods
mov
mov
dec
pop
push
ja
enter
sub
push
add
bound
add
mov
add
lret
cmp
add
xchg
insb
test
mov
movsb
xchg
movsb
rcr
test
xchg
xorl
test
dec
cmp
daa
push
or
cmpsl
outsb
inc
repnz
dec
andb
mul
popf
mov
shl
stos
dec
adc
inc
ja
test
pop
push
pop
jg
push
jns
call
adc
clc
imul
adc
mov
jns
jns
loope
sbb
mov
or
jecxz
add
scas
mov
lods
stc
jg
data16
loope
divb
mov
push
push
xchg
adc
and
add
cld
push
jge
stos
dec
add
add
iret
gs
push
add
inc
rolb
ds
or
clc
in
sub
or
ffree
push
push
sub
push
xchg
add
jo
or
mov
mov
shl
mov
mov
sub
ret
add
dec
movsb
imul
cmp
popa
sti
mov
pop
xchg
or
or
stos
lods
add
test
ficompl
sbb
imul
push
test
cmc
stos
inc
leave
leave
adc
add
xor
adc
adc
mov
and
adc
adc
lods
rcll
jne
xchg
mov
leave
mov
mov
pop
daa
ljmp
mov
out
pop
push
jae
mov
jle
sub
add
ret
and
dec
mov
rcrl
lock
inc
push
push
lods
jp
je
insl
jno
mov
test
xor
mov
aaa
addb
add
push
add
ja
cmc
mov
xor
jnp
mov
fcompl
sbb
or
push
push
sbb
repz
jmp
push
jnp
popf
adc
xor
lahf
sbb
call
push
dec
xchg
pop
sbb
mov
xchg
add
mov
in
js
xchg
add
test
xchg
in
cmp
into
sbb
mov
mov
add
lods
in
add
sbbl
je
ss
sbb
dec
orl
fcompl
mov
add
ficompl
adc
pop
repnz
and
repz
jmp
rclb
and
push
pop
in
jl
cmpsb
mov
xchg
inc
jbe
xor
daa
sbb
xor
cmp
push
inc
lods
hlt
adcb
mov
sub
cmp
fwait
or
fistpl
adc
pusha
stos
test
icebp
inc
inc
push
mov
out
push
sub
or
pop
pop
add
std
imul
xchg
outsl
or
and
mov
sbb
mov
xlat
aam
mov
in
pusha
xchg
sar
incl
sbb
mov
repnz
popf
push
xorl
notb
push
xor
inc
popf
movsb
pop
and
aaa
adc
sub
mov
pop
push
cmp
inc
aad
adc
sbb
dec
add
test
testb
test
jne
push
movsb
clc
mov
flds
add
out
lret
or
cmpsb
adc
ljmp
or
out
push
insb
imul
add
jne
js
jl
je
scas
arpl
pop
jmp
sub
and
js
xorb
ja
push
push
cs
in
jns
icebp
mov
jb
and
lahf
add
sub
jg
jbe
je
lock
test
je
lods
or
push
rolb
pop
cmp
add
or
js
push
in
fsubr
or
push
bnd
inc
jl
adc
inc
sahf
and
push
xchg
popa
test
mov
cmp
pop
dec
pop
adc
and
iret
adc
adc
mov
pop
sbb
in
xchg
sbb
sub
cmpsb
mov
shll
test
jmp
cmp
mov
adc
mov
outsl
and
test
adc
push
xchg
inc
push
enter
inc
sub
and
shll
out
stc
arpl
adc
cmp
mov
and
adc
fstpl
adc
xor
inc
loope
dec
subb
xchg
push
popa
push
jmp
cld
add
xchg
push
imul
imul
sbb
and
add
rolb
ljmp
xor
xchg
push
repnz
shr
shlb
incb
sbb
or
ljmp
iret
imul
or
push
addl
fdivrs
inc
adc
imul
popa
outsl
jp
dec
push
cs
jmp
movsl
pop
xor
sub
pshufw
dec
sub
lcall
or
mov
adc
xor
add
or
fwait
push
mov
sbbb
sub
and
add
push
mov
xchg
jecxz
in
add
pushf
testl
aam
in
mov
je
in
call
hlt
mov
mov
dec
test
pop
lods
adc
and
adc
pop
mov
cwtl
call
or
and
mov
incl
cmp
hlt
mov
call
add
dec
pop
or
mov
push
bound
xor
imul
rclb
cwtl
mov
jne
sbb
push
lahf
or
movsb
push
fsub
incl
out
lea
cmp
out
cli
and
subl
sbb
pusha
mov
lock
inc
pop
cltd
xchg
mov
cmpsl
mov
xchg
call
push
and
pop
jb
in
mov
cmovl
out
shld
xchg
add
mov
gs
jo
xor
rclb
sbb
xor
fs
ss
sbb
out
pop
enter
pop
ljmp
testb
jmp
loopne
rclb
lcall
shlb
test
mov
push
fcoml
dec
rcll
mov
in
lcall
mov
shl
test
adc
inc
popa
sbb
add
adc
insb
pusha
dec
adc
test
xor
mov
add
aas
int
jmp
in
shl
adcb
lds
loop
push
mov
dec
pop
push
out
mov
test
xchg
das
inc
orl
pop
leave
sub
or
inc
mov
dec
xchg
adc
mov
sti
xor
sub
orl
dec
mov
sbb
cmc
push
push
sub
jno
fs
cmc
sbb
aaa
adc
sahf
mov
jns
lret
ljmp
shrl
shl
clc
div
divb
adc
or
nop
cli
test
dec
in
leave
inc
add
add
hlt
testb
test
fistps
jmp
aam
pop
or
pushl
movsb
jo
in
push
and
out
js
sbb
sbbb
cmc
xchg
movsb
push
add
jge
mov
dec
and
mov
les
push
ret
ret
add
enter
add
add
inc
rclb
and
cmp
ret
add
jno
hlt
or
cld
push
and
loope
pop
mov
or
pop
xor
arpl
popa
adc
mov
push
push
push
scas
adc
cld
jbe
rcrb
in
push
fmull
stc
or
sbb
jecxz
add
hlt
xor
jb
shr
jecxz
xchg
adc
sahf
loope
scas
gs
push
test
pusha
sbb
push
mov
loop
push
popa
test
mov
daa
adc
sbb
adc
jns
loop
mov
inc
or
add
shlb
inc
adc
in
cld
sahf
add
or
add
mov
cmp
jae
xorl
outsl
in
les
and
xor
inc
lock
sbb
in
loop
sbb
popa
aas
xor
dec
inc
int3
loope
ret
test
lret
dec
jo
mov
dec
cmp
jno
push
push
jl
pop
clc
cld
dec
inc
nop
or
lock
xchg
popa
sbb
and
leave
sub
xchg
hlt
inc
push
cmpsl
sub
pop
or
gs
test
mov
outsl
and
lret
adc
or
push
int3
push
adcl
ljmp
sub
pop
pop
pusha
mov
pushf
xchg
pop
or
popf
jo
mov
jmp
push
imul
adc
loop
aaa
and
movsl
clc
cli
cld
lods
hlt
or
in
mov
cltd
sbb
jns
in
hlt
pop
push
movsb
ret
xchg
mov
xchg
or
repz
adc
push
and
mov
clc
pushf
das
outsb
pop
or
inc
aam
cld
cmovs
loopne
adc
inc
adc
cwtl
loopne
dec
cmp
pop
and
mov
mov
into
xchg
loopne
in
popf
mov
popa
cmp
and
xor
and
adc
filds
and
jnp
mov
jb
sbb
xchg
fbld
add
push
test
mov
xchg
addl
test
adc
cmpsb
inc
leave
repz
aam
mov
je
mov
into
das
test
inc
and
adc
xchg
ds
adc
pop
cmp
iret
pop
sub
jmp
cmp
fists
icebp
sub
into
pop
cld
pop
xchg
add
in
or
and
leave
inc
inc
sbb
fcoml
adc
push
stc
sbb
test
pop
add
dec
cmpsl
nop
lock
icebp
lock
or
pop
and
test
add
jp
arpl
pshufw
fs
les
sbb
jns
ret
out
sbb
inc
aaa
and
sub
sub
push
scas
adc
rorb
dec
push
outsl
jl
ret
clc
sub
int3
jge
mov
int
push
cld
loope
cmp
lea
je
cld
push
jl
jae
cmp
jmp
stos
mov
add
push
sarb
push
add
test
cmp
push
loop
and
in
cmpsl
mov
int
jecxz
shlb
mov
pop
sub
adc
mov
add
in
sti
adcl
add
dec
aad
push
pop
loope
subb
mov
xchg
movsl
adc
jo
add
mov
jb
push
sbb
push
inc
sbb
fsts
dec
add
loop
out
rorb
push
mov
xchg
xor
pop
cld
and
fimull
pop
xchg
test
adc
imul
push
js
jge
mov
or
push
enter
ficoml
fidivrl
xor
jmp
pusha
add
mov
popf
inc
aam
adc
inc
add
sub
sbb
push
push
movsl
add
mov
shlb
dec
cmp
sbb
adc
xor
sub
xor
fs
xlat
push
enter
dec
mov
test
inc
sub
je
inc
sbb
dec
stos
sub
push
push
or
es
push
adc
out
cmpsb
or
addb
xor
dec
rolb
cltd
shrb
xchg
fdivl
adc
mov
mov
adc
xchg
fchs
jmp
jl
aam
push
or
or
push
fmuls
subb
adc
rorb
xchg
inc
fsubl
cld
jb
push
inc
push
in
and
pinsrw
mov
call
jno
pushf
xor
jb
push
in
mov
inc
push
add
cmp
sub
inc
xor
sbb
push
inc
inc
dec
out
or
xchg
add
inc
adc
dec
xor
push
mov
inc
pusha
xor
pop
lret
pop
sub
jmp
and
adcl
inc
sbb
mov
sub
cmp
dec
jmp
ss
movl
dec
neg
leave
in
lret
pop
xor
lock
ljmp
adc
mov
pusha
es
mov
adc
nop
ror
lea
testb
adc
stos
fldcw
je
push
xorl
dec
sbb
push
shlb
push
cmp
jp
or
pop
xchg
movsb
xor
in
mov
arpl
jne
add
cmp
notl
jmp
mov
cwtl
pop
imul
cld
aaa
push
mov
add
adc
fmuls
or
lret
push
je
out
aas
pop
inc
jbe
lcall
push
jl
aaa
loopne
in
xchg
jl
sub
cmpsb
xchg
leave
test
xor
negb
adc
mov
and
adc
add
mov
adc
cwtl
push
outsl
xor
mov
ds
sub
push
outsb
pop
test
xchg
mov
add
je
imul
xlat
cmp
sbb
fdivrl
mov
push
test
addb
add
pop
or
mov
mov
hlt
std
dec
cmc
int3
inc
or
sbb
lock
loopne
mov
cmp
inc
aam
loopne
jmp
push
cs
pusha
cmp
dec
or
loopne
clc
or
pop
sbb
adc
divb
cmp
jb
push
xchg
cmp
mov
je
idivb
sub
jle
lods
and
inc
and
push
je
sub
mov
mov
sub
and
xchg
das
subl
mov
js
mul
dec
mov
add
lret
test
in
cmp
mov
push
fcmovb
sbb
jp
inc
push
or
jo
out
loop
pop
cwtl
dec
jno
cltd
pop
das
sub
pop
cmpsb
adc
not
sbb
push
inc
pop
and
mov
and
enter
mov
push
mov
adc
out
mov
mov
sub
xlat
mov
xor
dec
add
push
mov
dec
adcb
clc
pushf
lock
mov
arpl
mov
fnstsw
cwtl
or
xchg
mov
add
push
or
push
xchg
add
or
cld
add
mov
mov
jmp
xchg
aaa
stc
cmp
cld
mov
cmp
sbb
outsl
aam
insl
loope
xchg
js
dec
add
xacquire
or
mov
adcb
sub
js
popf
or
scas
or
shrb
push
sub
add
push
int
sub
dec
clc
and
iret
add
or
or
pop
add
xchg
negb
sbb
mov
inc
or
enter
cld
adc
xchg
loopne
push
push
jne
stc
les
ret
push
insl
imul
call
popa
mov
add
push
pushl
pop
and
call
sbb
fwait
ss
ret
fistpll
jl
jge
pop
fmuls
or
ret
and
mov
inc
and
shl
cmp
and
add
push
lea
dec
jns
adc
add
add
pop
xchg
push
inc
adc
pop
mov
call
dec
adc
ret
or
dec
je
push
je
imul
ror
push
arpl
push
adc
or
add
lock
fsubrs
pop
xchg
inc
ret
or
movsb
add
dec
mov
ret
popf
negb
push
pop
rorl
sbb
dec
inc
movb
push
jns
cs
push
sub
push
mov
adc
ret
rol
push
xchg
jne
leave
xor
mov
psrad
mov
and
fnstcw
push
shlb
jb
jns
mov
out
add
daa
das
xchg
faddl
insb
and
push
or
dec
call
jb
ret
sbb
sub
lret
jo
jle
push
mov
sbb
push
je
inc
into
mov
push
in
sti
dec
movsb
add
jno
and
push
and
leave
mov
inc
inc
mov
sbb
inc
push
test
sbb
jb
sbb
add
inc
adc
jno
sti
jns
cs
in
sti
rolb
mov
std
in
std
in
sti
inc
cs
push
or
mov
adc
insl
mov
and
std
lret
dec
or
push
push
and
push
dec
out
sub
or
jle
fwait
push
lods
sbb
inc
cmp
sbb
cld
dec
jl
pop
into
pop
nop
mov
adc
and
jbe
orb
lea
push
repz
and
cmp
jl
andb
loop
test
xor
popa
xor
cmpb
ret
mov
push
pop
nop
adc
push
adc
incl
stc
pop
jl
push
pop
jnp
call
and
rol
push
jecxz
inc
push
pusha
adc
out
dec
nop
sbb
sbb
orb
fsubrs
add
jmp
mov
nop
repnz
sub
cs
daa
jnp
add
addl
jne
adc
xchg
mov
jl
iret
into
ret
add
loopne
add
mov
divl
pop
mov
jne
mov
stos
cmp
add
lock
add
adc
mov
loope
je
cld
ss
add
add
cld
ret
or
add
div
push
adc
or
push
jae
adcb
inc
mov
loop
sbb
add
ds
push
lea
jo
in
popf
sbb
pop
jbe
andb
lret
into
add
imul
cmp
push
sbbb
sbb
dec
adc
or
jmp
mov
cmp
push
mov
adc
jl
push
test
add
call
adc
mov
shlb
pop
pop
ret
pop
sub
jg
xor
adc
addl
enter
push
cmp
mov
or
je
xor
adc
out
pop
sahf
mov
mov
je
mov
mov
inc
adc
mov
cmp
pop
aas
loopne
xorb
mov
sbbl
ret
jg
xor
and
aas
push
fwait
mov
pop
jb
jg
jmp
mov
xchg
mov
aam
cmc
mov
fsts
sub
push
fdivrs
mov
clc
mov
sbb
inc
pop
pop
xchg
cli
dec
cld
idivb
jne
xor
mov
pushl
xor
and
dec
mov
inc
gs
pop
push
jl
mov
ret
xor
ret
add
and
pusha
dec
cld
and
lret
fists
hlt
xchg
jo
push
xor
jmp
aaa
push
mov
and
inc
popf
add
es
sub
test
push
mov
push
mov
movsb
add
mov
push
mov
adc
lods
enter
jae
pop
call
negb
or
push
sbb
push
cwtl
add
push
jb
mov
push
or
add
ljmp
inc
int
xor
push
push
nop
or
sbb
inc
mov
nop
xchg
push
jl
sbb
dec
in
andb
mov
mov
les
xor
sahf
add
mov
jno
test
mov
mov
adc
pop
cmp
and
clc
aaa
sub
ss
sbb
add
adc
pop
je
lret
pop
cmp
inc
fnstenv
or
icebp
shll
ss
stos
rorl
adc
addb
fbstp
int3
cmpw
pop
jne
adc
sub
dec
jb
adc
add
mov
inc
mov
mov
cld
jbe
stos
add
xor
ljmp
mov
repnz
jmp
add
dec
and
cmp
hlt
pop
add
sub
in
or
loopne
or
loopne
daa
mov
xor
and
aaa
js
in
cmpsb
adc
cwtl
push
adc
out
shll
fsts
je
dec
or
push
inc
loope
mov
and
push
xor
mov
shlb
mov
movl
cmpsl
cmp
sub
sti
mov
clc
data16
in
add
nop
loopne
iret
or
add
bound
mov
xor
add
push
inc
mov
lret
ja
pop
clc
inc
shr
or
fsubs
rcll
shrl
mov
push
jnp
frstor
cmp
dec
dec
mov
adc
inc
or
cmp
jbe
or
adc
cmc
mov
xlat
movsb
mov
adc
int
outsl
or
or
arpl
and
sub
sbb
ficomps
nop
jbe
jns
mov
and
mov
aaa
mov
adc
in
insl
dec
sbb
or
dec
pop
in
leave
sarb
sub
je
dec
and
movsl
daa
sub
xor
outsb
rep
xlat
or
jmp
por
aam
or
jnp
ss
inc
xor
adc
mov
and
cmc
shlb
lret
sbb
dec
jne
sbb
xchg
daa
lock
sbb
sub
push
int3
in
lea
jge
loopne
sar
out
xor
fs
fsubr
and
outsl
jge
js
add
roll
sub
jb
loope
or
cs
jp
sub
sbb
aad
jecxz
jle
pushf
inc
fsubrl
sbb
push
push
inc
mov
cmc
jmp
add
add
ficoms
sub
push
push
mov
add
pop
dec
inc
add
or
cwtl
pop
int3
pop
add
cmpsl
bound
loopne
cmp
cmp
movsb
lcall
scas
jne
mov
test
or
fcompl
jl
push
push
add
ss
lds
push
add
or
stos
push
jl
xor
or
mov
mov
mov
sbb
inc
cld
bound
push
mov
push
push
int
push
cmp
enter
fisttps
xchg
xor
out
jbe,pt
mov
cmp
test
cld
mull
cld
je
movb
mov
inc
inc
mov
cmp
jb
xchg
and
aam
push
lret
jmp
mov
pop
cwtl
clc
insl
je
or
inc
cmp
call
loope
jb
add
mov
or
movl
dec
lock
mov
or
mov
or
or
push
cmp
je
cmp
or
inc
leave
jns
adc
jne
mov
cmp
push
hlt
and
stc
pop
cli
sti
cld
or
std
or
jmp
int3
mov
inc
in
or
aaa
jmp
and
bound
sub
mov
cmp
sti
cmp
jbe
dec
xchg
and
lock
push
out
lock
sbb
mov
dec
sub
sarl
rcrb
lea
add
and
daa
sbb
pop
mov
aaa
cmp
push
lock
mov
add
adc
lret
rcll
mov
xor
pusha
cmp
pop
dec
addr16
dec
je
repnz
adc
andb
out
pop
jp
lea
mov
mov
mov
cltd
pop
push
sub
adc
fildll
adc
scas
or
inc
fs
mov
je
aaa
insb
push
push
nop
addr16
and
fs
negl
xchg
inc
les
mov
push
dec
dec
cmp
repz
rcll
and
pop
mov
pop
inc
fdivl
test
push
adc
push
sub
jecxz
pop
cmp
fsubp
inc
push
xor
add
mov
pop
test
fstpl
or
sub
notl
pop
movsb
pop
or
pop
pop
pop
mov
leave
or
add
cmp
cs
lock
add
add
add
in
addb
je
aam
cld
or
push
xorb
or
arpl
insl
pop
nop
in
sbb
push
or
mov
cwtl
cltd
dec
push
dec
movsb
cmpsb
subl
xchg
fcompl
inc
mov
lea
jmp
sti
push
push
mov
jg
jo
mov
add
xor
mov
mov
inc
cmp
cmp
jb
cmp
clc
mov
and
push
or
ficoml
cs
and
push
in
or
cli
or
or
xchg
pop
cld
cmp
insb
push
or
popa
jno
lock
mov
mov
jb
push
adc
test
scas
movsb
push
je
pop
test
sub
inc
push
adc
add
leave
repz
adc
push
icebp
in
add
outsb
xlat
test
adc
mov
push
and
cmp
cmp
and
adc
pop
mov
pop
xchg
jp
add
push
int3
xor
mov
mov
xchg
jmp
pop
fmuls
andb
sbb
inc
xchg
mov
daa
push
lods
sbb
adc
sub
or
xor
pop
inc
cs
add
mov
push
mov
and
or
mov
js
lahf
aam
or
inc
push
cmp
jle
sahf
es
pop
lea
and
mov
test
xchg
clc
adc
arpl
sub
dec
adc
scas
mov
mov
or
outsl
xor
loope
jg
jmp
pop
add
in
sbb
sub
cmpsl
jns
loopne
pop
mov
fwait
data16
lcall
xchg
dec
pusha
or
add
lods
movb
pop
xlat
sub
push
cmp
test
push
std
mov
xor
sbb
arpl
jmp
shll
pop
cs
dec
adc
xlat
es
push
dec
mov
sub
sbb
sub
leave
sub
push
in
fistpll
xrelease
into
xchg
insl
inc
mov
shlb
addr16
cmovs
cmp
je
pushf
cmp
jb
or
cmpsl
test
add
mov
xchg
rcl
std
cli
aas
inc
and
push
xor
sub
sub
or
lea
repnz
clc
lds
cld
cli
je
test
mov
jnp
fisttpll
fimull
mov
mov
sbb
push
xchg
sbb
pop
adc
push
xor
xor
sub
xor
add
add
adc
test
push
fcmovnb
sub
shl
rolb
les
mov
and
mov
add
test
fs
test
ret
jo
in
sbb
mov
cmp
popa
xor
inc
icebp
pop
repnz
cmp
ret
dec
mov
mov
mov
inc
xchg
cwtl
lods
fimull
aad
jmp
xorl
mov
mov
add
add
nop
and
sbb
jmp
push
mov
popa
add
lock
in
pop
aam
cld
push
testb
js
mov
sub
mov
inc
and
adc
test
scas
cmp
dec
push
loopne
clc
mov
mov
sbb
je
inc
aaa
mov
jg
imul
sub
pusha
outsl
jbe
cmp
jg
and
xchg
xchg
movsb
sbb
cmp
ss
lods
ljmp
push
stos
pop
les
nop
inc
mov
mov
in
adc
js
dec
cmp
lock
dec
flds
mov
loope
daa
jo
dec
dec
orl
and
add
push
xorl
inc
lcall
inc
mov
cmc
jbe
and
lcall
jmp
fwait
in
stos
push
in
out
push
subl
ljmp
cmpsl
dec
add
aam
cmp
flds
jl
push
gs
mov
xchg
clc
les
test
pop
clc
mov
adc
test
or
add
int3
rcrb
ss
subb
lock
push
cmp
in
mov
push
fdivrl
aad
mov
ljmp
and
daa
clc
cmpb
and
scas
jl
enter
test
dec
push
adc
nop
jl
push
inc
hlt
pop
test
xor
mov
ljmp
mov
push
mov
lods
fistl
cmp
mov
lock
push
sub
int
aas
div
cs
div
pop
mov
adc
push
call
testl
repz
lea
xor
adc
dec
pop
xchg
loope
and
push
lcall
insb
or
sbb
jne
cmp
sbb
jbe
das
test
jmp
sub
push
ret
xor
sub
sbb
jbe
sbb
xorl
adc
loope
jmp
add
or
ds
inc
movhps
clc
push
insl
adc
sahf
out
or
add
rcll
decl
loopne
pushl
jb
cmp
ja
dec
dec
mov
xor
push
lea
cli
pop
ss
pop
ja
jb
push
jae
xchg
cmpsl
fcmovnu
push
and
ja
pop
inc
inc
test
aaa
xor
and
in
sbb
sbb
cld
fwait
dec
sub
jae
push
sub
sbb
add
adc
push
xchg
xchg
test
xchg
jae
cmp
add
shlb
dec
in
push
mov
push
cmp
loop
or
fs
pop
mov
mov
imul
or
sbb
iret
sub
and
inc
and
add
jmp
add
idivl
push
sub
stc
jmp
jne
cmp
xchg
xchg
leave
shlb
movb
clc
xchg
sub
mov
pusha
lcall
add
std
mov
rolb
aam
add
call
inc
loopne
popa
mov
bound
dec
dec
sub
incl
sub
sbb
inc
andl
dec
jp
xchg
ss
pop
push
daa
xchg
mov
push
es
push
sub
dec
ja
test
pop
pusha
adc
push
push
out
lret
fcom
jmp
clc
lret
scas
sub
clc
adc
cwtl
stc
mov
sbb
cmc
movsb
loopne
repnz
inc
push
repz
rorl
mov
clc
xor
imul
inc
push
push
mov
pop
cmpsl
loopne
xor
xor
shlb
es
or
icebp
push
inc
je
testl
adc
cmp
dec
testb
dec
es
jno
ja
add
sub
dec
adc
inc
lret
pusha
pop
mov
sbb
fdivl
fs
in
es
pop
jg
cmc
sbb
xchg
cmc
adc
add
hlt
imul
xchg
jo
sbb
rdtsc
xchg
pop
and
xlat
mov
sub
push
add
mov
and
pop
clc
cmp
cmp
or
dec
popf
push
xor
sti
dec
dec
push
data16
mov
pop
cmp
arpl
sbb
shrb
cmp
mov
int3
push
and
loopne
outsl
add
movsb
std
add
adc
add
mov
lds
mov
inc
push
adc
stos
push
rorb
xor
sub
mov
mov
stos
cmpsb
push
nop
adc
xchg
aam
push
push
dec
cmp
mov
les
fcmovb
inc
fidivs
add
adc
add
or
dec
loopne
jmp
mov
sbb
sarb
adc
imulb
outsl
loope
mov
jmp
cltd
mov
aas
push
or
mov
dec
sahf
or
popa
sbb
pop
and
pop
aas
xor
jmp
sub
and
cmp
enter
cmc
shlb
xchg
or
mov
push
rorb
jnp
mulb
movsl
push
cmpsb
lea
lret
pop
pusha
call
loop
pop
pusha
clc
inc
adc
popf
aam
jmp
dec
mov
jp
mov
fimuls
hlt
pop
pop
cmp
sub
enter
push
pop
std
inc
js
adc
or
cmpb
push
lods
loopne
inc
sbb
test
mov
sbb
push
xchg
push
popf
test
fsubs
nop
mov
jg
call
pop
mov
mov
xor
lods
cwtl
sbb
adc
mov
inc
sbb
jne
push
stos
jmp
cmp
loopne
pop
imul
sbb
and
pushf
test
cmp
cmp
nop
decb
lcall
jne
je
int
outsb
adc
loopne
cmpb
stc
decl
shll
insl
pop
lahf
rorl
pop
jecxz
adc
repz
pusha
jne
fisttps
adc
push
inc
nop
adc
ret
sub
lds
or
jecxz
lock
dec
cld
add
dec
push
gs
cld
lret
loopne
lods
int3
dec
rorb
mov
lods
out
je
int
inc
sub
jb
pushf
xchg
mov
mov
imul
nop
orl
adc
dec
jne
add
aam
sub
dec
xchg
fidivrl
clc
mov
inc
pusha
insb
pushf
sti
inc
test
pop
lret
cmp
ror
daa
mov
add
in
mov
in
sub
sub
daa
mov
cmp
rol
sbb
fisttpl
in
inc
adc
push
mov
mov
das
insl
out
dec
mov
enter
push
mov
jp
in
push
push
and
or
lea
xchg
mov
fcoml
sbb
popf
pop
cwtl
inc
pop
lret
ds
pop
and
lods
jnp
adc
sbb
int
mov
test
mov
mov
adc
fmull
or
mov
loope
push
jg
mov
stc
ds
cld
mov
jne
inc
xor
in
xor
jmp
inc
pop
lea
mov
add
ret
pop
inc
add
push
movsl
jb
pop
inc
push
mov
xchg
imul
inc
sbb
xor
sbb
repnz
in
testl
std
xor
in
jg
bound
pop
pop
cmp
cmp
push
or
cmp
into
clc
movsb
and
or
add
mov
cmc
sbb
inc
cmp
push
jl
jmp
push
mov
inc
adc
lock
cmp
iret
nop
lea
andb
add
adc
js
jl
sbb
mov
ret
xor
xor
lods
adc
push
insl
mov
dec
push
lcall
rcl
sarl
test
cmpl
pop
xchg
sub
loope
and
aaa
cmp
ljmp
les
and
cmp
jle
xor
add
jno
divb
add
mov
out
push
jbe
jp
mov
sub
sahf
jo
pop
sub
pop
mov
inc
jl
mov
mov
xchg
add
xorl
mov
inc
arpl
sub
adc
scas
xchg
fcomi
adc
clc
add
xchg
movb
subl
or
mov
les
or
in
pop
pop
mov
cmp
je
ss
xchg
ss
popa
mov
xchg
inc
je
mov
fnstcw
lods
inc
mov
add
cmp
lods
pop
ja
add
rorl
jo
jmp
mov
inc
loope
cmp
inc
mov
or
pop
ret
mov
push
mov
arpl
or
dec
or
push
out
fmul
or
mov
pop
imull
jg
inc
xchg
outsl
mov
sbb
test
push
xchg
leave
push
and
int
add
or
mov
jl
leave
test
pop
mov
mov
mov
rep
outsl
fs
rep
orb
mov
movsl
or
in
into
dec
push
loope
loop
imul
in
in
subb
out
arpl
fs
mov
sub
dec
lods
jl
aam
xchg
xchg
pop
out
add
mov
adc
test
jmp
arpl
in
lret
fs
push
pop
iret
sbb
jo
icebp
mov
sbb
in
fwait
pop
sbb
jb
inc
repnz
call
dec
clc
inc
ja
enter
std
mov
dec
pop
mov
sti
nop
cmp
push
add
leave
repz
ljmp
gs
aam
dec
push
out
cltd
insb
xchg
inc
push
and
xor
sub
xorl
mov
adc
pop
rol
decb
xor
repnz
push
xor
adc
in
frstor
push
in
pop
ja
xchg
sbb
mov
setl
test
jb
sub
loopne
and
int3
and
xor
inc
std
int3
jbe
push
dec
das
pop
jmp
shlb
movzwl
cmp
cmp
and
xor
faddl
call
insb
cmp
mov
push
jmp
mov
adc
add
repz
adc
push
or
jge
sti
add
cmp
jl
push
jecxz
ds
cmp
add
repz
adc
push
data16
clc
mov
jne
pop
pop
shlb
int3
adc
movsb
mov
cmp
movsb
ljmp
jmp
adc
sub
sub
scas
xchg
imul
fmuls
push
xchg
mov
inc
shrb
movsl
nop
mov
push
jl
add
fldt
loope
xlat
dec
lret
daa
dec
mov
cwtl
sbb
push
cli
aad
lock
push
or
or
xor
frstor
sub
cmpsb
outsl
mov
jl
sbb
add
nop
movsl
rolb
dec
add
sub
inc
push
sub
lea
inc
sbb
push
push
inc
shr
shlb
pop
jp
sub
jno
jno
clc
add
dec
mov
push
push
adc
sar
fstpt
sahf
cmp
jae
stos
aaa
nop
inc
jmp
cmp
push
push
add
and
ja
call
adc
xchg
mov
or
push
icebp
nop
xchg
pop
popa
bound
cmp
fs
int
imul
mov
pusha
inc
fdivl
outsb
stc
and
and
ljmp
dec
adc
pop
js
and
push
mov
popa
sub
inc
cmp
insb
mov
inc
fdivr
leave
adc
xor
sub
push
or
inc
loope
sarb
rcrb
pop
cli
imul
mov
test
je
cmp
je
or
je
pop
add
push
cli
add
sub
inc
xchg
mov
imul
es
dec
inc
call
jmp
cmpb
jne
mov
adc
dec
xchg
sbb
sbb
cmp
xor
xchg
push
idiv
jp
cld
sbb
and
pop
cmpb
cld
push
inc
jg
sbb
sub
jne
jl
xchg
sbb
xlat
sar
pop
mov
cmp
jge
cmp
je
push
push
lods
pushl
or
sbb
pop
cmp
jg
xchg
mov
xchg
xor
or
add
sbb
incl
and
cmpsb
dec
sbb
mov
movb
mov
mov
loop
pushf
leave
push
stos
insl
inc
adc
ja
push
push
jo
or
mov
sub
sbb
or
or
mov
pop
imul
push
shrb
sbb
cmc
test
ljmp
cmp
int
mov
or
or
xor
aad
lds
fldt
adc
popa
iret
mov
add
out
adc
or
inc
push
add
fistpl
testb
popf
pop
sub
push
popf
pop
ret
or
test
out
sub
es
movl
outsl
addr16
rolb
inc
out
pop
jne
mov
push
jle
rolb
push
xorl
cld
dec
pop
test
je
sub
jg
adc
or
iret
dec
jmp
sub
jmp
or
pop
out
jmp
add
adc
cltd
or
fdiv
add
jmp
push
inc
xor
and
mov
xor
je
inc
cmp
add
adc
xrelease
pop
pop
sub
es
adc
shll
mov
sbb
or
sub
lret
add
cmpl
test
je
test
jbe
mov
sbb
inc
pusha
shll
mov
loopne
add
aam
in
je
inc
push
push
pop
push
into
push
push
add
cmp
add
mov
push
push
or
cmp
pop
pop
mov
or
sub
int
fisttpll
test
and
mov
sbb
leave
or
mov
or
dec
testl
mov
sti
jge
pop
fcoms
add
ljmp
cmpl
jl
or
inc
in
xchg
add
inc
and
scas
je
and
add
adc
push
xor
std
push
in
jmp
rolb
neg
dec
mov
dec
pop
inc
mov
adc
pop
mov
mov
or
mov
mov
inc
je
lods
push
lret
outsl
jmp
mov
sbb
pop
adc
mov
pop
jecxz
push
dec
push
and
inc
cmp
dec
mov
or
jne
rcll
jne
ret
insb
xor
dec
cmp
xchg
scas
sub
or
aaa
ret
sbb
add
shlb
pop
cmp
clc
pusha
jne
jne
jmp
nop
pop
push
push
js
incl
insb
mov
mov
add
cmp
jbe
movsb
jb
andl
adc
and
stc
or
or
cmc
dec
and
enter
mov
aaa
sahf
jb
loopne
add
cs
jle
lret
cmp
fcoms
sbb
add
push
and
pop
lock
mov
or
imul
mov
int3
dec
rep
cmp
add
add
inc
sub
inc
jg
testl
lods
push
movsb
push
pushf
cmp
repz
mov
mov
jns
out
in
call
jns
lock
hlt
clc
clc
sbb
jns
cld
lea
add
adc
loope
push
in
add
pop
test
subl
and
fcompl
jbe
adc
lea
jl
cld
scas
loopne
aaa
jmp
pusha
mov
rclb
mov
addb
in
pop
nop
js
cwtl
push
rcr
je
dec
divl
fiadds
dec
mov
lods
mov
sbb
ret
out
add
lods
pop
rclb
nop
dec
dec
push
ljmp
mov
mull
notb
mov
or
push
and
pop
lahf
out
xor
inc
push
subl
sbb
sbb
adc
jns
out
adc
or
or
sahf
out
add
aas
test
or
mov
adc
andl
inc
pop
daa
outsl
cld
add
mov
pop
fmuls
sub
pop
icebp
jbe
faddl
imul
rol
lea
add
adc
inc
add
and
adc
xchg
cmp
repnz
push
mov
add
dec
mov
ss
pop
fcmovnu
sub
push
mov
xor
aas
rcrb
add
shl
mov
inc
test
mov
roll
jns
sbb
inc
xor
call
add
int
inc
ljmp
cmp
nop
std
cld
pushl
mov
sbb
add
subb
push
add
add
shll
jne
mov
pop
popf
sahf
into
cmp
je
repz
mov
dec
xor
les
pop
scas
rcll
adc
mov
insl
aaa
mov
test
das
jae
mov
sbb
loope
lcall
pop
or
ret
test
cmp
cs
es
aas
or
ficomps
jne
sub
or
push
aaa
add
sub
and
jle
nop
sbb
shl
inc
ret
fidivs
push
ret
add
jmp
addr16
add
ror
test
jnp
leave
rcll
aas
adc
xchg
add
mov
shlb
ret
add
add
faddl
or
loop
enter
shrb
loopne
enter
jmp
push
and
add
mov
pop
push
inc
mov
xchg
inc
pop
das
cmp
std
repz
or
loop
jl
adc
adc
sbb
xor
adc
xor
incl
cmp
pop
push
or
stos
mov
push
je
mov
jmp
push
inc
mov
or
push
dec
fwait
imul
jp
or
lods
ss
data16
mov
sub
insl
mov
xor
sub
ds
mov
test
or
jne
popf
mov
lds
and
pop
cmp
adc
add
sbb
cld
push
or
js
or
jmp
dec
add
cmpsb
cmp
in
and
dec
imul
rorb
clc
mov
bound
ret
push
hlt
sub
jne
neg
jmp
or
incb
jbe
cmp
and
or
in
xor
rorb
lock
or
call
call
xchg
cmp
clc
subl
hlt
push
inc
aam
and
add
repnz
cmp
push
shll
mov
psubb
dec
out
push
push
clc
adc
neg
jmp
sbb
pop
lahf
out
jmp
xor
nop
movsb
adc
sub
push
pop
nop
ss
dec
test
mov
jbe
lea
shrb
cmpsb
nop
xchg
insb
cmp
es
outsl
cwtl
jbe
xchg
mov
push
subb
cld
or
push
dec
inc
gs
icebp
jl
fs
pop
dec
lcall
push
cld
icebp
test
inc
js
stos
or
xchg
xchg
push
xor
je
jnp
adc
lock
jno
fildl
idivl
push
push
repz
loopne
mov
jl
and
add
daa
mov
ja
or
loop
addb
mov
sub
dec
adc
push
inc
pop
insb
fisttps
lret
push
cmpsl
xchg
clc
add
jno
sbb
adc
mov
fimull
mov
or
dec
or
dec
jle
or
loopne
es
push
dec
xchg
cmp
inc
add
jbe
lock
mov
mov
movsl
mov
pop
mov
jmp
and
and
mov
sub
adc
mov
loope
incl
mov
lahf
fstpl
fwait
push
jns
sti
pop
inc
dec
xchg
stos
aaa
test
hlt
xor
loopne
sti
cmpsb
or
in
xchg
mov
fadds
mov
stc
loope
pop
xchg
and
addl
imull
cmp
push
push
das
sbb
into
lock
xor
sbb
and
addr16
addr16
mov
mov
mul
dec
rorl
cld
cld
jmp
imul
mov
add
mov
imul
cmp
inc
loopne
lock
and
jae
cld
xor
test
aad
rolb
mov
ret
je
lahf
mov
fs
push
cwtl
aad
push
add
cli
hlt
push
add
lock
cmp
or
std
adc
push
hlt
lcall
loopne
push
psraw
je
mov
add
outsl
push
pop
movsb
pop
cmc
jge
jne
and
xorb
pop
and
int
cs
arpl
pop
addb
clc
push
mov
ljmp
cmp
jge
jp
mov
out
and
jp
xchg
sbb
dec
sbb
mov
inc
sbb
jmp
mov
and
push
js
outsb
pop
push
jb
ret
sub
jno
push
add
jne
cs
sbb
or
or
idivl
add
push
add
push
inc
lds
fwait
adc
sarl
push
dec
sub
imul
test
ja
push
and
mov
loope
jnp
sbb
loop
or
xor
scas
and
das
sub
stc
pop
daa
jp
add
pushf
aas
hlt
pop
pusha
pop
into
mov
jne,pn
mov
cwtl
loopne
imul
adc
sub
cmp
sbb
dec
in
jmp
xor
in
push
inc
pusha
mov
add
push
jb
jne
mov
in
cli
into
adc
mov
clc
mov
ds
jmp
or
clc
addl
call
xor
xor
cld
pop
mov
cmp
adc
dec
fistpl
xlat
add
cli
xchg
cmp
add
sbb
xchg
in
ror
out
pop
in
dec
lock
mov
pop
sub
sbb
sub
jmp
xchg
add
cld
loopne
inc
inc
sub
loopne
out
adc
add
dec
pop
push
add
inc
arpl
ja
je
adcl
mov
ficoms
push
es
pop
push
shrl
cmp
dec
sbb
mov
mov
jne
cwtl
adc
sti
add
push
push
lods
outsl
mov
mov
lods
pusha
insl
in
pusha
jmp
mov
popf
pop
adc
lods
inc
mov
mov
loopne
scas
and
mov
adc
pop
jo
xor
int3
xor
push
js
fsubr
xor
add
dec
push
and
clc
xchg
pop
mov
sbb
mov
push
ret
sub
in
sti
dec
cmpsb
arpl
jmp
push
dec
adc
fimull
test
in
dec
call
add
pop
adcb
loop
xchg
pop
jge
add
and
shll
and
sub
push
or
mov
loop
je
sub
je
jecxz
add
mov
fs
fiaddl
sbb
bound
test
pop
scas
or
dec
sub
inc
cmp
dec
adc
mov
adc
adc
or
cld
mov
pop
sub
dec
scas
adc
pop
inc
sarl
dec
adc
jbe
mull
mov
cmp
jge
or
sbb
sub
or
jno
rolb
add
mov
add
loope
fwait
push
adc
out
mov
adc
orl
push
enter
lea
adcb
dec
test
mov
int
lea
push
cmp
fneni(8087
adc
andb
pop
xor
adc
push
jg
sub
cmc
test
mov
or
sbb
push
jno
sbbl
sub
jbe
movsb
sbb
pop
hlt
lret
cmp
xchg
or
lods
jg
adcl
sbb
xchg
call
or
add
push
adc
testb
pop
test
pop
enter
inc
inc
mov
add
lock
out
or
test
cmpsb
pop
pop
adc
push
xor
xor
rcll
adc
out
cmc
or
xor
push
pop
mov
sbb
or
addb
pop
jne
hlt
cmp
xchg
mov
and
repnz
popa
cltd
push
std
mov
test
xchg
push
fucomip
in
adc
cmpl
sarb
sbb
adc
imul
add
repz
fwait
cmp
lret
sbb
lods
jge
dec
aas
cmp
lret
cmp
xorl
or
add
xlat
add
insb
or
aad
sarl
loop
and
ret
dec
or
mov
call
or
mov
int
inc
adc
mov
scas
notb
cmp
fdivs
add
xchg
sti
sub
push
mov
in
xchg
movsl
call
or
jp
and
mov
cwtl
add
and
add
loopne
lret
stos
pop
add
sbb
push
data16
repnz
rorl
addr16
or
mov
xchg
xchg
and
lds
testb
jle
xlat
push
xor
cmp
adc
add
push
mov
jmp
mov
jecxz
data16
iret
addl
push
clc
out
cltd
mulb
stos
adc
cmp
pop
fisubs
mov
and
push
iret
xor
ss
sarb
jecxz
jmp
adc
or
cmp
and
aad
int3
decl
nop
add
push
mov
push
addl
fdivl
loope
nop
push
mov
or
sub
add
push
inc
add
dec
jo,pn
and
sbb
loopne
sbb
sub
cmp
jl
ret
repz
pop
invd
xor
inc
jmp
iret
cld
sbb
cld
mov
loop
xor
je
xchg
xchg
dec
and
es
stc
add
sbb
cmpsl
push
jne
sbb
pop
pop
mov
inc
lea
xchg
aad
inc
sbb
adc
jne
out
lea
or
clc
pusha
push
mov
mov
sub
dec
pop
out
or
add
mov
aaa
push
add
rclb
inc
xor
push
loop
cmpsl
adc
xor
jmp
pusha
cltd
lret
pop
inc
or
sbb
and
pop
out
mov
push
loopne
inc
loope
test
clts
cmp
movsl
cmpl
xor
xorb
ds
lds
aam
sub
out
fld
inc
into
mov
mov
sub
sub
cmp
andb
or
xchg
dec
imul
add
xchg
mov
inc
xlat
jg
in
and
mov
add
push
sbb
lea
add
test
clc
clc
xor
enter
out
xchg
cmp
stc
mov
mov
or
sub
mov
sbb
fbld
add
sbb
and
sub
je
ret
shll
aad
cmp
pop
sub
sbb
dec
inc
add
cmp
in
loopne
mov
sub
bound
sbb
inc
outsl
jle
sub
push
and
add
sbb
add
sbb
arpl
sbb
addr16
jmp
jecxz
pop
movsl
loopne
and
inc
test
test
je
mov
out
cmp
adc
pop
call
cmp
arpl
int
adc
cmpsb
inc
inc
cmp
xchg
push
push
push
repnz
jbe
les
jmp
push
shrb
les
inc
sub
fdivl
or
jg
out
sarl
loope
or
and
and
xor
je
add
add
and
pop
jnp
sti
pop
adcb
rcrl
add
xor
cmpl
dec
lock
cmpsl
clc
clc
mov
stos
cmpsl
clc
in
or
test
add
inc
shlb
mov
mov
mov
xchg
mov
push
adc
rcrb
jne
outsl
or
je
imul
or
js
or
in
div
mov
dec
adc
add
add
dec
xor
addb
das
mov
mov
or
sbb
jnp
andl
test
je
aad
pop
test
jne
je
incl
cmpb
or
into
pop
in
xor
test
inc
shlb
and
movsl
fsubrp
adc
push
cld
icebp
inc
fcoms
lahf
inc
je
js
xchg
push
and
rcll
pop
xor
push
popa
enter
pop
ljmp
adc
sub
popa
shrl
repnz
add
outsl
pop
mov
out
cmp
je
sbb
insb
mov
fstpl
cmp
ja
inc
or
ret
add
pop
and
cmp
movsb
aas
shll
jne
sbb
mov
cmpl
mov
and
movsl
jb
adc
sbb
pusha
adcb
jmp
or
pop
loope
fcompl
sbb
inc
pop
inc
sbb
mov
push
cmp
pop
lcall
add
pop
shlb
jge
dec
out
or
lock
pop
adc
push
js
xor
or
lahf
and
idivb
clc
mov
jbe
pop
add
mov
dec
xorl
add
arpl
cmpl
popa
xlat
jge
and
or
fistpl
sub
or
in
sbb
mov
or
xor
jne
adc
push
dec
movsb
sbb
inc
sub
jecxz
adc
and
ds
nop
sbb
push
mov
xchg
loopne
leave
cmp
and
push
add
jl
gs
sbb
mov
jne
adc
movsb
add
and
popl
mov
fmull
sub
lods
adc
and
sub
xor
adc
adc
sub
popa
pop
jmp
je
push
js
xor
popf
sub
dec
cld
cld
mov
add
xor
xor
nop
push
or
cmc
mov
jge
je
imul
mov
adc
insl
and
divb
inc
stos
inc
sbb
insl
mov
cmp
addb
add
jmp
push
daa
or
sbb
dec
cmp
dec
sbb
rolb
cmp
fmuls
mov
loopne
dec
and
call
and
push
movsb
cmp
cmp
add
adc
cmp
cmp
sahf
inc
cmp
mov
cmp
ss
or
rcll
dec
add
add
mov
dec
dec
fwait
mov
stos
sbb
add
dec
test
jg
xor
jg
jb
mov
jns
adc
adc
subb
mov
dec
lods
mov
mov
jle
icebp
and
push
call
mov
jmp
inc
push
fidivl
sub
mov
push
pushf
cmp
popa
cmp
in
add
mov
movsb
mov
cmp
stc
cmp
imul
int3
push
or
fldt
sahf
cs
mov
inc
adc
mov
mov
psubw
xor
lods
adc
mov
mov
loopne
push
aam
dec
shrl
cmp
mov
push
inc
sub
cmp
jp
adc
push
imul
mov
lret
pop
dec
mov
adc
orl
ss
fisubrs
imul
push
shll
xchg
icebp
or
aas
mov
rorb
clc
imul
mov
movsb
jp
jge
jle
dec
loope
xor
js
sbb
rcr
loop
aam
jg
shl
mov
enter
inc
mov
inc
aam
shrb
or
clc
jo
inc
shl
mov
and
or
sbb
push
mov
fcompl
mov
mov
loop
ret
push
or
and
mov
aaa
adc
mov
sub
xor
lahf
test
into
mov
mov
gs
sbb
cmp
push
decl
inc
lcall
lea
fmuls
mov
loopne
das
je
mov
push
mov
fnstenv
push
push
outsl
jecxz
jg
or
push
mov
shl
push
adc
inc
jecxz
lcall
icebp
ljmp
xchg
xchg
or
push
cmp
aas
sbb
je
sub
and
or
mov
cld
cmp
je
xor
cmp
je
into
out
jns
out
and
faddl
aam
xchg
pop
sbb
add
outsb
or
cld
inc
je
inc
mov
orb
inc
and
jno
adc
sub
xor
pop
inc
cmp
shlb
mov
adc
pop
xchg
lock
lea
mov
fsubrs
and
out
adc
cmp
inc
mov
bound
mov
fstps
fucomip
mov
push
or
mov
orb
mov
enter
pop
lock
flds
push
cmp
mov
and
inc
mov
jae
shll
mov
cmc
inc
call
mov
add
lods
jns
cld
xchg
push
and
adc
cld
flds
jno
shrd
sub
xchg
add
js
clc
iret
pop
xor
sub
and
sbb
cmp
mov
jnp
mov
stc
or
enter
push
pop
lock
mov
jo
add
movsb
lods
jle
dec
mov
loope
sub
inc
or
xchg
or
stos
push
stc
cmpsb
ja
mov
or
lahf
jo
jecxz
or
mov
dec
stc
jb
add
loop
jmp
xlat
cmpsb
je
cmpl
xor
into
cmp
mov
push
jne
or
pop
inc
mov
call
pop
sbb
cmp
push
call
sti
flds
dec
inc
mov
sbb
addl
mov
xchg
cmp
lods
jne
jb
and
mov
pop
jne
lea
push
jmp
inc
fmull
jnp
mov
xor
loope
sub
mov
or
out
xchg
lahf
or
outsb
jmp
dec
loope
cmp
and
popa
in
add
ret
add
mov
rorb
or
and
sahf
mov
sub
jmpw
movsl
mov
adc
pop
or
jmp
inc
mov
rcll
lcall
int
xchg
jmp
or
jmp
std
jne
ss
jmp
pop
or
sbb
xor
aad
inc
test
out
adc
test
sbb
jbe
or
adc
loope
fists
aad
jo
shr
pop
adc
fsubrl
adc
sbb
dec
scas
mov
cmpsl
sub
add
sub
xchg
pop
or
push
mov
enter
test
xchg
mov
mov
cltd
mov
lods
arpl
loope
pop
dec
cmpsl
leave
pop
add
insb
adc
adc
push
lds
out
andl
pop
in
cmp
bound
jo
std
insb
inc
cmp
cmp
inc
sbb
mov
jns
add
fcomps
xor
sbb
and
xchg
jbe
add
mov
or
js
test
mov
add
or
movsb
aam
push
xchg
rclb
cmp
add
or
adc
pop
aaa
mov
mov
pop
add
je
testl
rcrl
clc
dec
aas
shlb
mov
lahf
and
xor
pop
daa
push
mov
ds
test
adc
inc
dec
sahf
lret
es
inc
push
nop
inc
push
and
mov
pop
arpl
in
ljmp
sbb
addr16
fs
test
cwtl
mov
add
jp
imul
or
push
xchg
pop
sarb
sbb
test
push
sbb
xchg
jge
cmp
pushf
icebp
xchg
or
scas
fprem
push
shr
inc
in
xor
ret
mov
shr
rcr
or
jne
div
mov
fidivl
out
pusha
adc
out
shll
cmp
or
cmp
and
insb
pop
pop
pop
mov
frstor
dec
jnp
ret
push
fnsave
push
sub
jae
sub
or
xlat
or
in
loopne
push
or
sub
and
or
fadds
push
rcll
sub
pop
jge
inc
stos
add
mov
dec
push
sbb
es
ret
cltd
fcomps
sbb
sbb
adc
out
addr16
xor
jmp
xchg
inc
cs
icebp
sbb
adc
xchg
xchg
adc
pop
gs
pop
imul
mov
inc
xor
ss
mov
lock
lock
lock
ja
jecxz
popa
jl
cmp
jp
or
push
or
testl
hlt
scas
adc
out
mov
mov
je
inc
sbb
jmp
out
dec
or
pop
ret
hlt
adc
jle
jmp
or
inc
jmp
jg
repnz
sti
in
in
in
mov
pop
addb
mov
adc
sahf
dec
or
orl
ffreep
loopne
mov
jmp
dec
sub
add
int
mov
add
add
xor
and
and
xor
pusha
push
push
not
dec
fwait
ds
push
cltd
popf
into
add
mov
or
push
push
aad
inc
add
ja
fldt
loop
loop
pop
inc
or
arpl
sub
sbb
cmp
call
cmc
in
or
cmp
fisttps
jne
inc
inc
dec
je
adc
pop
cmp
jne
mov
add
pusha
push
inc
or
insb
call
std
lods
mov
sub
cmpsl
je
mov
outsl
pushl
push
cld
dec
adc
cmc
jne
sub
shr
sbb
lahf
adc
sbb
pop
je
push
push
push
mov
cmp
jne
sbb
out
jne
or
out
mov
pop
incb
int
mov
aas
decb
je
or
sbb
jl
add
pop
jg
dec
sbb
jo
cmp
sub
bound
mov
adcl
rcrl
adc
sbb
sub
or
cmp
and
bnd
xchg
add
xchg
outsl
mov
xorl
dec
inc
rorl
xor
sub
and
call
rol
inc
stc
push
add
roll
dec
and
clc
stc
add
ror
xchg
adc
add
in
fadds
add
pop
es
jne
hlt
aaa
jg
xchg
push
adc
or
mov
outsl
mov
test
aas
daa
popl
or
jmp
ret
les
or
test
std
pop
cs
out
mov
or
clc
dec
gs
lahf
adc
hlt
xor
pusha
in
cmp
push
push
sub
add
pushl
add
dec
adc
ficoms
push
mov
movzbw
or
out
nop
mov
iret
imul
mov
mov
aaa
rcr
out
sarl
or
js
ret
mov
pop
or
test
insb
push
cwtl
mov
jae
insl
and
or
xor
test
xchg
push
ja
xor
movsl
mov
test
jecxz
subb
jmp
mov
dec
ret
sbb
xlat
dec
push
pushf
mulb
idivb
add
jmp
ret
nop
lds
jge
mov
aad
pop
loopne
aaa
mov
cltd
aad
jo
pop
lret
xor
xor
fistpll
adc
adc
inc
or
movsb
mov
push
je
add
adc
mov
fistl
push
leave
mov
add
cmp
add
mov
inc
push
testb
add
daa
outsb
sbb
xorb
je
lods
test
mov
fs
lds
adc
mov
ds
dec
fwait
mov
setnp
jmp
and
sub
adc
cmp
mov
loopne
outsl
push
lock
pop
xor
sub
jmp
ss
sarl
popa
scas
inc
fadds
sti
ss
push
loop
in
add
jae
outsb
add
js
adc
jmp
inc
das
scas
push
aas
imul
inc
mov
inc
pop
mov
add
std
sbb
or
or
jne
shr
jmp
pop
mov
loope
js
test
mov
js
pusha
clc
mov
mov
jne
push
or
ss
add
lods
test
sub
jg
insb
adc
mov
or
add
adc
and
testb
xchg
mov
cmp
lods
adc
es
popf
or
xchg
insl
pop
jne
int3
sbb
cmp
jp
jne
mov
clc
xor
sarl
mov
shrb
test
xorl
aam
sbbl
or
sub
in
sbb
adc
cmp
test
call
xor
pop
pusha
mov
stos
add
and
jmp
sbb
adc
orl
dec
cmp
icebp
mov
add
pop
stos
fldenv
mov
test
push
push
or
jnp
inc
xchg
jno
jb
imul
sbbb
imul
dec
hlt
jmp
lahf
add
mov
repnz
add
or
mov
add
add
iret
xlat
or
xor
pop
mov
and
dec
xorb
lods
jnp
add
add
inc
cwtl
cltd
add
and
int3
movb
call
aad
enter
dec
scas
mov
neg
inc
fadds
mov
shll
mov
lods
in
sbb
mov
push
xchg
inc
dec
sub
lahf
mov
xchg
fs
enter
test
repnz
addb
mov
loope
push
or
cmpsb
mov
leave
cmp
cmc
fisttps
je
dec
dec
not
mov
pop
les
jno
sub
dec
cmp
adc
popa
adc
or
adc
cmpsb
fsub
push
xor
xor
jo
mov
sbb
or
push
mov
das
sub
loop
popa
add
dec
int3
dec
pushf
ret
rorb
sub
movsl
cmc
dec
or
and
imul
xor
cmp
daa
cmp
xchg
add
sbb
pop
jne
sbb
or
sbb
or
js
mov
inc
inc
fisttps
push
mov
and
sahf
mov
xchg
mov
fiaddl
cmp
mov
add
and
in
outsb
inc
cmp
add
pop
sbb
adc
jno
enter
roll
add
jl
dec
mov
fisubrl
xor
out
push
fsubl
or
jl
mov
lods
mov
push
dec
adc
fidivl
movsb
xor
adc
mov
sarb
xor
add
xchg
jl
jmp
push
shlb
arpl
mov
push
mov
jmp
sbb
pushf
sub
cwtl
adc
sub
enter
push
daa
cs
dec
cwtl
int3
adc
jo
push
xchg
or
cmp
outsb
pusha
insb
sti
adc
xor
mov
mov
stos
pop
icebp
pop
push
ds
imul
or
pusha
outsb
xchg
push
mov
orb
int
clc
or
hlt
sti
jge
and
inc
or
sarb
or
jae
add
popf
sub
adc
mov
mov
jmp
and
and
xchg
mov
sub
insl
insb
out
sbb
mov
outsl
jne
rol
adc
sbb
xchg
ds
in
adc
adc
or
stc
lock
aaa
add
add
xchg
or
adc
push
or
mov
mov
mov
push
lret
sub
mov
pop
jecxz
xchg
ja
shlb
int
pop
pop
jle
inc
push
es
lock
ret
hlt
jmp
add
jo
cli
adc
scas
lock
pop
imul
mov
loopne
push
enter
mov
fwait
inc
jge
xor
inc
lret
cltd
movswl
or
insb
add
inc
jmp
outsb
xor
movsb
pop
popa
xchg
ss
xor
dec
mov
fdivrl
adc
xchg
cs
sbb
movsb
inc
test
and
fisttpl
out
rcr
or
mov
aaa
mov
cmp
jl
push
push
shl
jae
jg
outsb
mov
in
jnp
mov
les
xchg
adc
and
arpl
rclb
shlb
outsb
add
repz
popf
rcrb
enter
xchg
pop
pop
out
mov
inc
les
fdivl
pop
lea
xchg
mov
lods
sbb
add
jns
je
jne
cmp
pusha
add
lea
imul
scas
sbb
sahf
adcb
pop
jbe
shlb
mov
pop
test
js
jo
movsb
in
int3
add
adcl
or
mov
mov
mov
ss
and
push
and
aam
out
jo
lret
or
mov
leave
add
fmuls
repnz
or
frstor
sub
lea
out
xchg
push
mov
popa
add
xor
f2xm1
and
mov
out
lock
dec
add
xor
nop
loopne
mov
add
int3
daa
nop
int
mov
or
mov
int3
inc
jbe
push
leave
push
inc
adc
push
inc
dec
jae
pop
fs
fs
lcall
adc
std
xchg
xchg
inc
adc
mov
mov
xchg
ss
adc
add
jmp
jne
lahf
pop
into
loope
std
je
sbb
mov
or
dec
in
and
or
mov
enter
call
mov
cs
xor
test
sub
and
outsb
lock
mov
xchg
or
sbb
cmp
mov
repz
or
data16
mov
mov
xor
sbb
jecxz
loope
xlat
mov
adc
lea
xor
xchg
ds
lret
mov
addr16
or
stos
sbb
faddl
adc
mov
mov
xchg
or
xor
dec
loop
push
dec
jge
stos
pop
mov
ljmp
inc
lcall
xchg
add
cmpsl
dec
leave
xor
jno
cmp
jno
jne
pop
test
dec
mov
mov
mov
or
ror
ret
rcrl
adc
mov
or
mov
mov
loope
hlt
mov
or
inc
fucomi
out
sbb
aas
sub
mov
iret
or
jb
insb
mov
call
adc
jp
jbe
sarb
adc
mov
adc
leave
inc
xchg
loope
cmp
mov
sbb
enter
out
jo
rcrb
and
mov
xchg
mov
imul
mov
stos
fsubr
inc
jne
mov
addr16
mov
and
xchg
sbb
jne
fsts
jne
xchg
dec
xchg
or
mov
dec
xchg
pushf
push
mov
imul
sub
pushf
stos
pop
mov
or
adc
addb
popa
xchg
out
xlat
or
icebp
mov
mov
sbb
dec
stos
pop
fisttpll
sub
loopne
sbb
jbe
cmc
repnz
push
test
enter
dec
cmp
push
sbb
mull
cmpsl
sub
pop
or
daa
sub
fdivrl
sbb
daa
cmp
mov
push
mov
lock
icebp
and
loope
push
ds
addb
add
add
in
mov
mov
sti
icebp
jbe
dec
loop
loop
and
fsubs
rol
cltd
imul
push
xchg
std
or
mov
aas
aas
sbb
sbb
aaa
mov
xorl
mov
jg
jl
adc
jae
mov
sti
dec
push
add
fnstcw
gs
add
sbb
xorb
je
inc
sarb
push
push
pusha
xchg
mov
mov
idivl
jp
dec
icebp
lock
cmpl
int3
int3
mov
xor
jg
imul
adcl
mov
lods
sub
mov
sub
xor
dec
ja
test
daa
fiaddl
imul
movl
xchg
adc
lock
sub
pop
or
push
aad
mov
bnd
sub
mov
fsubl
add
sub
hlt
les
into
pop
jecxz
cwtl
test
add
test
mov
add
sub
aaa
sbb
jmp
mov
test
dec
add
xchg
leave
add
test
inc
into
adc
pushf
dec
imul
nop
scas
imul
xor
jp
mov
push
movsb
push
fcoml
mov
or
jl
sbb
rorb
jl
je
stos
call
pushw
adc
or
aaa
add
cmp
add
mov
sub
inc
mov
js
add
icebp
lret
aad
sbb
and
xor
fsub
inc
frstor
addl
xor
iret
lea
roll
ljmp
out
repz
dec
loope
shl
cmp
roll
sahf
std
add
add
pop
leave
push
test
jns
faddl
add
add
add
sbb
fs
push
inc
aad
cmp
stos
aam
mov
idivl
push
fists
shl
push
pushf
jbe
fcmovbe
push
add
add
push
add
add
outsb
ja
dec
add
adc
or
or
mov
dec
mov
add
and
adc
or
jl
dec
or
outsl
jbe
outsb
ret
pop
std
imul
push
adc
or
mov
sbbb
inc
sbb
add
or
xchg
adc
dec
ret
fisubs
add
and
xchg
outsb
add
jp
mov
pop
xorb
push
push
or
jnp
int3
push
mov
cltd
lcall
push
add
push
loope
push
fsubs
cmpw
lret
and
add
mov
jl
or
jl
shrb
popa
push
jbe,pt
je
push
cmp
hlt
dec
mov
mov
xchg
xor
mov
jno
lea
mov
or
cli
push
into
pop
rclb
pop
pusha
in
add
adc
cmc
push
mov
add
pushf
cmp
jmp
xor
hlt
push
xchg
adc
cltd
and
or
incl
xchg
push
dec
fisubrl
loopne
icebp
push
movb
popf
adc
stc
iret
imul
pop
xor
filds
lock
in
add
or
sti
ret
les
je
dec
loop
mov
lock
dec
jae
lea
js
mov
push
cmpsl
sub
inc
jl
iret
or
and
xchg
fst
inc
movsb
mov
loopne
add
mov
pop
push
stos
xchg
pop
push
inc
out
sar
mov
jo
inc
sub
and
std
aaa
mov
inc
jmp
shrl
cmpxchg
inc
ss
push
pop
jne
adc
push
push
fsubrl
lds
pop
subl
add
adc
pop
cmp
xchg
mov
jo
fdivs
clc
iret
outsl
lea
cmp
cmpsl
cmp
push
adc
imull
es
in
push
inc
mov
daa
push
add
xor
xchg
or
imul
push
inc
xor
aad
scas
jns
cmp
out
and
insb
mov
pop
adc
or
dec
dec
bswap
mov
xlat
add
or
data16
pushl
add
mov
push
adc
imul
or
add
mov
cmp
loope
add
loopne
shrb
push
jb
iret
mov
fs
aam
outsb
andnps
inc
lds
xor
jo
pop
shrl
mov
adc
jmp
xor
daa
cwtl
cmp
jnp
jae
and
fcmovbe
roll
pop
sub
ja
mov
cmp
aaa
nop
stos
xchg
xor
enter
sbb
add
std
inc
jbe
and
adc
loopne
mov
xlat
jne
xor
add
cmp
es
xor
test
adc
mov
in
push
mov
out
test
mov
push
pop
mov
or
inc
sbb
outsb
sbb
call
ret
dec
sahf
popa
mov
test
dec
inc
leave
repz
cmp
loopne
inc
sbb
mov
fdivl
lock
fmul
cs
outsb
insl
shlb
xor
or
push
cmp
int3
jns
inc
jle
dec
dec
sahf
enter
in
jnp
shlb
push
sub
enter
aam
lret
enter
enter
popf
cltd
int3
cmp
dec
pop
xor
hlt
out
cmp
out
sahf
push
fdivp
push
adc
xor
cs
jl
or
jne
push
jno
adcl
shlb
inc
pop
xor
adc
aas
mov
add
sub
fsubs
cli
lahf
ss
jnp
push
push
jge
push
pusha
push
sarb
or
add
xchg
leave
insl
es
cmp
xlat
pushf
xor
fwait
xlat
push
adc
sbb
mov
push
jb
sbb
xchg
pushf
sub
lahf
adc
push
and
xorb
mov
mov
or
jge
ret
movsb
adc
arpl
pop
rclb
xor
dec
adcl
push
xor
ret
jmp
loope
add
lods
fldl2e
mov
jo
aas
aad
test
sbb
mov
dec
add
or
push
loope
dec
pop
cmpsb
and
pusha
cmc
test
stos
and
es
ret
sub
xchg
or
nop
dec
es
jno
es
inc
inc
cmpl
cmp
adc
add
lahf
cltd
lahf
test
push
andl
xchg
or
or
jl
xchg
dec
pop
and
loopne
or
shll
sub
and
scas
int3
cli
repnz
cmp
mov
or
cltd
std
sbb
jmp
cli
gs
mov
fmuls
popa
test
mov
pop
xchg
dec
adc
sub
pop
cmp
icebp
outsb
jno
add
loope
addl
or
cli
and
or
or
adc
sub
inc
test
xchg
or
push
xor
xor
lock
lock
xlat
lcall
inc
nop
mov
mov
and
pushf
ss
js
popf
or
enter
jg
jo
push
scas
call
cmp
sbb
fadd
sarb
ret
dec
lock
hlt
lret
xchg
in
mov
sbb
loopne
mov
add
lea
pop
sbb
lea
cmpsl
fcompl
inc
fwait
insl
jo
add
adc
mov
inc
pop
lock
repnz
mov
sub
aad
fstl
enter
adc
fwait
lcall
fdivl
add
push
es
int3
mov
stc
xchg
outsb
sbb
jle
jmp
jl
add
gs
daa
orb
ret
mov
cmp
or
pusha
xchg
hlt
addb
add
adc
mov
push
out
push
sub
or
in
xchg
cs
out
clc
push
je
testl
push
jnp
in
sub
push
lret
jle
aas
stc
outsb
je
or
push
jnp
sbb
jb
rorb
repz
push
sbb
or
mov
xchg
rcrb
cld
mov
cld
arpl
adc
or
inc
stos
dec
std
mov
cltd
push
or
xor
jle
jecxz
mov
and
in
in
dec
sarl
lock
dec
fcoml
inc
xor
dec
or
movsb
lea
fisubs
add
es
out
fsts
jo
sub
push
jecxz
jo
xchg
sete
pop
das
pop
jne
mov
ja
hlt
pop
mov
and
cmp
cmp
movb
lock
andl
loop
in
sbb
js
and
inc
mov
pushf
mov
aam
fistpll
push
mov
and
fildll
sbb
sbb
repnz
cmc
jae
or
inc
pop
mov
cmp
push
mov
add
cmp
jg
xchg
and
in
clc
mov
out
inc
add
inc
or
mov
fimuls
mov
and
jbe
or
lods
sbb
lea
or
xchg
int
xchg
add
repz
es
sub
sub
push
jo
or
jo
inc
or
cmpsb
and
mov
xor
daa
daa
and
mov
sbb
adc
jbe
test
je
jae
mov
sbb
inc
loopne
sub
jbe
mov
inc
dec
mov
cmp
add
mov
data16
sbb
cmpsl
mov
jmp
sub
mov
add
scas
sbb
push
movsb
sti
adc
push
fucomip
cmp
push
push
nop
push
in
cli
data16
loopne
push
cmp
je
movsb
nop
xor
xchg
stos
daa
add
int3
and
popa
call
stos
or
movw
jno
cwtl
cli
push
ja
jmp
shl
test
adc
psrad
mov
jmp
daa
sub
pavgw
in
add
sub
jecxz
mov
jo
cmp
iret
mov
inc
nop
pop
dec
pop
dec
adc
dec
mov
jne
pop
jne
jl
pusha
lds
arpl
mov
js
jge
or
hlt
outsl
mov
sbb
rorb
xor
test
popa
test
pop
add
add
jmp
pop
adc
cltd
or
ret
fprem
std
cs
or
inc
mov
loope
and
mov
mov
loope
xchg
adc
and
lods
xchg
mov
ja
insb
xor
dec
sbb
mov
push
mov
hlt
sbb
jmp
xchg
xlat
hlt
std
hlt
ror
rcrl
jne
jno
jge
mov
rolb
callw
adc
inc
add
mov
test
mov
pop
lcall
mov
xchg
add
rolb
cmpsb
mov
ret
push
mulb
inc
dec
sbb
jg
sti
cmp
and
inc
nop
add
ljmp
jp
notl
push
jl
dec
aam
push
pushf
iret
push
pusha
adc
out
fcmovbe
icebp
or
mov
jo
js
xchg
lret
test
out
add
sbb
xchg
xchg
lock
ror
or
or
push
pop
in
in
in
mov
push
ficompl
pushf
popw
add
add
sub
rcl
aam
lea
rcl
xor
test
adcb
call
lret
inc
and
fistps
or
rcrl
shl
fcoms
or
out
les
or
movsb
or
enter
addl
pop
in
sub
test
or
ror
mov
pop
nop
cmc
mov
jmp
scas
sub
bound
ret
mov
sub
xlat
sbb
and
sbb
and
jle
adc
inc
movl
push
movsl
add
out
call
adc
and
xchg
jnp
add
push
add
fistps
out
popf
add
adc
lret
pop
xor
dec
rcr
popf
add
adc
inc
shll
in
inc
cs
in
mov
jne
je
mov
gs
adc
inc
sub
mov
or
sbb
movb
xlat
adc
gs
lea
sub
and
ss
xchg
dec
add
ret
movsb
xor
xchg
push
loopne
push
jmp
xor
in
enter
mull
int3
push
loopne
xchg
mov
sub
enter
cmc
cmp
add
adc
lret
pop
jle
movsl
pop
sbb
xor
dec
fists
or
jmp
jg
in
jmp
add
dec
fmuls
fnstsw
pop
fsubr
or
add
shr
imul
maskmovq
testl
rclb
repnz
mov
cmp
push
shlb
pop
xchg
lret
jae
sbb
pop
and
or
and
jb
cmp
pop
or
sub
xor
sub
xchg
mov
jne
dec
add
fiaddl
lds
int3
cmp
movl
or
mov
ret
add
dec
in
inc
add
jmp
repz
push
call
aaa
aas
push
push
xor
mov
pop
add
push
add
daa
jns
in
add
add
fnstenv
push
pop
testl
mov
ljmp
add
add
add
add
imul
das
call
jl
mov
jmp
xorl
mov
push
dec
fists
pop
pop
leave
pop
ret
pop
or
xchg
lret
pop
mov
out
ret
inc
outsl
test
or
adc
scas
adc
popf
mov
lock
mov
fsubrs
pushf
repnz
fcoms
incl
xor
pop
add
fwait
push
ror
mov
push
jmp
ja
and
inc
push
inc
loope
mov
aas
sub
stc
stos
stos
add
loop
and
hlt
mov
dec
and
jb
adc
clc
dec
dec
mov
cmc
jb
scas
push
enter
into
and
add
add
loop
std
sbb
pusha
push
pop
jo
iret
cs
mov
sub
and
adcl
jb
test
sub
fcmovnb
mov
nop
jne
addr16
clc
imul
cli
sbb
and
pop
sahf
adc
mov
sbb
shl
mov
cs
pushl
daa
mov
jmp
xchg
sbb
add
jge
cwtl
add
outsl
pop
imul
into
lea
mov
adc
sbb
add
loope
movl
aas
jp
sub
sub
push
add
push
js
ja
pop
cmp
outsb
jb
adc
ja
or
and
add
or
jmp
dec
and
movsl
pop
mov
dec
push
and
or
dec
es
cld
sub
insb
push
pop
and
sbb
aam
in
mov
stos
icebp
xchg
add
push
adc
in
aas
inc
push
push
cmp
mov
dec
pop
adc
push
sbb
enter
call
dec
fs
jge
popa
je
or
or
fwait
sarb
je
jmp
jg
filds
and
cli
jmp
and
add
xor
ret
cmp
adc
push
lret
cmp
jae
sbb
adc
jecxz
sbb
dec
mov
xlat
adc
sbb
fisubrl
xchg
dec
ja
add
inc
popf
or
mov
sbb
adc
xor
and
jno
loope
cmc
in
jle
lret
xlat
insb
and
mov
loop
sbb
push
cmp
shlb
lcall
leave
negl
inc
xchg
and
mov
hlt
into
int
inc
mov
bound
lds
xchg
repz
in
inc
inc
enter
orl
lock
loopne
dec
stc
xchg
and
sub
mov
gs
and
fcmove
mov
pop
adc
stc
rorb
inc
test
cmp
rolb
movsb
aad
add
jne
mov
sbb
sbb
or
cmc
out
mov
and
sbb
sub
hlt
gs
cmpsb
dec
cmp
movl
sub
adc
testb
sahf
out
push
mov
add
out
sub
add
or
cmp
pop
add
add
push
test
pop
pop
or
aas
push
add
jno
jb
test
movsb
jno
adc
sbb
cmp
fldt
popa
mov
cltd
fs
cld
push
xchg
adc
outsb
sub
das
lods
mov
jno,pn
push
cli
andl
adc
mov
xchg
dec
sbb
jns
push
and
sbb
dec
or
add
jnp
xchg
dec
sbb
add
nop
arpl
sbb
adc
jno
pop
popl
hlt
pop
jg
add
and
xor
sbb
mov
stos
sti
mov
jb
negl
add
imul
leave
adc
mov
les
inc
or
cmp
daa
dec
mov
jne
nop
pusha
sbb
ficoml
adc
mull
push
cmc
mov
rorb
adc
sub
mov
iret
in
sbb
pop
idiv
aad
mov
lret
js
nop
sub
push
add
cli
imul
push
or
push
push
or
das
testl
or
test
fsubs
je
adc
add
adc
sub
mull
lea
jp
lret
push
xchg
push
cwtl
push
ljmp
scas
ljmp
pop
dec
add
xchg
fdivl
adc
or
pop
push
sahf
mov
jnp
daa
jmp
push
call
lcall
mov
mov
cmp
and
add
push
lret
test
add
mov
adc
shl
lods
sarl
lock
call
sub
adc
add
cmc
ret
insb
sbb
pusha
dec
inc
mov
jne
cmpsb
icebp
cs
xchg
add
stos
xchg
cs
inc
dec
push
fnstsw
andl
popf
icebp
sub
cli
sbb
dec
leave
sbb
stos
sub
mov
sahf
mov
sbb
movsb
push
and
movsb
sbb
daa
jecxz
bound
jge
mov
dec
and
sub
stc
std
clc
and
je
or
sub
dec
xchg
repnz
ficompl
push
icebp
xchg
ret
mov
jmp
push
push
inc
fisubl
adc
jne
dec
mov
xlat
sub
pop
fisttps
test
add
xorb
lds
add
popf
and
sbb
sbb
jp
xchg
or
cmp
gs
dec
inc
push
adcl
push
mov
inc
cmp
je
cmpsl
lea
mov
mov
sub
call
and
stos
inc
push
test
xchg
andl
std
mov
sub
jne
clc
sbb
inc
rolb
icebp
test
or
mov
clc
shlb
pusha
inc
sub
das
inc
out
jo
sar
or
test
adc
loope
jo
inc
sbb
loope
lret
add
adc
ret
int
add
pusha
pop
sti
pop
pop
loop
addr16
jne
adc
add
nop
mov
and
pop
je
cmp
mov
add
jl
cwtl
int
mov
inc
pop
les
xor
dec
lea
mov
add
and
pushf
cld
cmp
sub
adc
mov
push
call
test
push
ret
push
xor
data16
xor
xchg
push
pop
cmp
je
repz
pop
inc
add
pop
ret
mov
pusha
or
sub
inc
cld
push
pop
pop
dec
ss
popf
xor
pop
lret
push
scas
addl
jmp
or
mov
and
pop
neg
mov
iret
or
push
push
lahf
cmp
sub
mov
lar
pop
rcrb
enter
outsb
mov
test
movups
mov
addl
mov
xor
dec
orb
shlb
jle
add
jae
fadd
and
inc
cmp
call
add
jnp
adc
xor
shr
mov
scas
dec
pop
mov
pop
repnz
fdivr
into
imulb
sub
rorb
mov
inc
mov
mov
aam
leave
pop
add
ret
push
cmp
cmp
mov
mov
sbb
inc
jb
jae
jb
mov
mov
or
sarb
sarl
loopne
or
fs
dec
sbb
es
xchg
push
xorb
xor
cmp
loopne
xchg
mov
xor
dec
jae
fadds
jg
or
int
fcomp
pop
or
mov
mov
movsb
das
shr
movsl
jmp
imul
loope
xchg
lret
xlat
mov
dec
push
jecxz
or
mov
fdivs
rcll
int3
rorl
rol
inc
mov
adc
popl
mov
jl,pn
mov
iret
sbb
push
imul
ljmp
adc
add
mov
xor
std
mov
sub
jne
out
adc
and
jecxz
push
pop
jae
adc
sti
test
dec
cmpsb
ljmp
or
adc
mov
add
outsb
arpl
lcall
addr16
out
adc
push
cld
add
popa
pop
repnz
add
test
mov
cwtl
mov
sbb
add
cmp
sarl
sub
jge
cld
and
cmp
pop
sbb
xor
mov
loope
call
add
sahf
mov
imul
pop
lds
cmpl
dec
mov
mov
rol
test
and
sub
xor
cs
stc
mov
push
dec
cmp
xchg
adc
test
lods
adc
mov
mov
push
or
add
push
dec
cmp
push
push
push
cmpsb
mov
lock
fwait
sbb
cli
push
sub
imul
test
test
sbb
ret
push
pop
in
mov
lock
xchg
dec
ja
imul
in
xor
xor
mov
push
ret
pop
xor
push
into
pop
sbb
xor
xchg
scas
mov
fldenv
sti
pop
lds
leave
xchg
or
sbb
out
inc
push
es
mov
mov
insl
pop
inc
jb
sbb
fs
adc
xor
and
jg
enter
xor
shr
or
popa
xchg
sbb
addr16
and
mov
sub
xchg
pop
imul
or
dec
mov
aaa
add
jmp
adc
arpl
push
into
nop
mov
shlb
push
dec
sbb
lods
add
or
mov
cmp
or
imul
loope
jo
cmp
sbb
xchg
imul
cmp
push
sub
or
movb
movsb
adc
cmc
xchg
cmp
dec
adc
adc
outsb
outsb
xchg
lcall
sub
and
dec
and
sti
pop
inc
add
inc
add
addr16
or
adc
push
add
pop
sbb
jo
aas
mov
je
pop
pop
ret
mov
lahf
imul
stos
daa
lahf
push
cmp
sarl
sub
xlat
add
mov
fcoml
arpl
test
or
jg
or
lods
adc
in
mov
mov
mov
incl
nop
mov
cmc
ja
insb
leave
sahf
clc
push
push
icebp
stos
mov
cmp
or
addl
lret
les
inc
jp
mov
push
xor
or
adc
filds
or
adc
sbb
loopne
adcb
aas
flds
hlt
imul
or
sti
jo
jp
call
jnp
xchg
mov
clc
sbb
inc
or
adc
push
les
icebp
stos
mov
cmp
push
mov
and
adc
ja
loopne
add
rcll
adc
gs
out
lahf
pop
add
ret
insb
jns
inc
sarl
cld
add
mov
inc
jae
enter
mov
test
mov
int
inc
fdivrs
push
cmp
sub
adc
loope
leave
lcall
dec
mov
in
inc
inc
inc
rep
sub
in
push
push
push
ret
push
in
dec
mov
add
jmp
decl
push
pushf
mov
cmp
sbb
icebp
or
push
inc
pop
pushf
pop
jns
sub
or
aas
scas
outsb
sbb
test
bound
imul
push
mov
sbb
push
mov
test
adc
dec
cmp
mov
mov
mov
and
cld
fwait
sbb
sub
fsts
add
mov
js
cmpsb
shlb
inc
js
fcmovnb
out
sub
pop
sbb
cmpb
fs
lods
inc
xlat
cmp
xchg
rcl
adc
adc
sbb
and
mov
rorb
or
lds
sub
xor
cmp
mov
cmp
sahf
rcrb
xor
or
push
daa
jae
iret
pop
lock
sbb
mov
sbb
aas
dec
jo
and
lahf
mov
dec
jg
add
push
lcall
imul
push
or
shl
sbb
in
mov
sbb
movsb
sbb
adc
mov
pop
pop
mov
mov
hlt
add
xchg
adc
mov
jae
js
push
mov
js
popa
jle
jae
or
mov
jge
sub
and
jo
adc
ljmp
pop
xor
call
sbb
add
push
or
pop
fisttpll
jmp
add
adc
mov
cmp
mov
js
sub
shr
sbbl
out
rorb
popa
aad
mov
inc
nop
shrd
shrl
movsl
or
les
shlb
cwtl
cmpsb
jns
add
enter
lret
icebp
pop
or
sub
inc
xor
gs
aas
test
xchg
loop
in
jbe
xchg
pop
sub
aas
outsb
dec
add
add
add
push
rolb
and
xlat
pop
pusha
pusha
int
test
inc
and
adc
les
add
int3
and
add
cltd
mov
mov
call
pusha
push
bound
pop
insb
mov
lret
ds
div
in
sti
shll
add
mov
cmp
push
push
or
into
sub
sbb
repnz
sbb
lret
in
outsb
pop
enter
add
sbb
push
sub
jo
shrb
sar
shrb
call
scas
test
imull
imul
pop
int3
hlt
aam
lock
aam
fs
rolb
mov
cltd
sbb
cwtl
inc
popa
in
movsb
incb
mov
scas
cmp
xor
cs
das
aam
aam
add
mov
mov
ret
or
aam
ret
jo
loop
mov
leave
mov
mov
mov
fwait
cltd
cmp
mov
xlat
push
int3
push
es
jo
sbb
sub
das
es
dec
dec
jne
or
adc
push
or
push
adc
push
sahf
mov
lods
mov
dec
ljmp
or
cwtl
cltd
mov
jns
pop
fdivs
outsb
push
pop
mov
push
pop
fcomps
pusha
pop
or
fcomp
dec
mov
adc
jmp
mov
fld1
cmpsb
sbb
into
mov
inc
or
or
inc
adc
mov
cmp
in
adc
pop
jmp
sbb
add
rolb
test
or
adc
inc
popa
pop
imull
andb
add
mov
mov
andb
dec
pop
jno
or
pop
dec
mov
adc
pop
and
test
mov
sbb
xor
fdivs
inc
adc
add
pop
inc
or
pop
sub
ds
adc
push
sbb
rcll
or
rclb
add
adc
and
enter
loope
ret
fwait
jnp
mov
jnp
or
int3
push
add
cmp
dec
call
adc
mov
mov
idiv
cmp
imul
jp
pop
fists
xchg
hlt
and
aas
int3
xchg
stos
mov
ficomps
dec
std
lds
adc
pop
xchg
or
jp
mov
enter
fsubs
push
test
push
jmp
push
in
jb
xor
jae
xchg
test
insb
stos
mov
push
sub
imul
loope
push
mov
dec
insb
sahf
jne
xlat
into
adc
push
out
mov
fbstp
and
lods
sub
push
ficoms
push
push
loop
aaa
xchg
sbb
cwtl
mov
sub
sti
jecxz
movsb
cmpl
dec
sub
dec
or
xor
cwtl
rcrb
push
and
pusha
sbb
mov
and
push
out
cmp
push
addl
pop
test
nop
xchg
inc
rol
mov
dec
enter
push
xchg
ja
xor
loopne
sbb
jp
ficoml
jl
adc
mov
test
in
bswap
add
cmp
cs
add
mov
pop
clc
xchg
loopne
jnp
stc
add
sbb
aas
decb
je
push
test
ss
mov
jb
ds
mov
and
dec
mov
add
add
push
jo
mov
outsl
loopne
mov
call
call
and
sbb
loope
mov
push
mov
adcl
jb
sub
fwait
repnz
call
lock
xchg
pop
push
divl
jl
xchg
or
dec
pop
bsf
sbb
adc
bound
mov
pop
or
push
xor
in
pop
inc
in
xor
fstpt
addr16
mov
add
adc
lea
cmp
xor
sbb
or
push
test
cmp
data16
jl
xchg
cltd
nopl
mov
jle
aas
xor
rorb
cmp
pop
adc
je
pusha
mov
cltd
or
or
push
es
adc
test
rolb
fdivs
dec
decl
js
fwait
and
mov
xchg
mov
xchg
add
outsb
aam
mov
test
add
aam
mov
add
in
js
lods
dec
cmp
mov
leave
adc
dec
les
dec
ud2
sbb
jmp
pop
pushf
mov
pop
jne
loopne
add
cld
push
sub
inc
mov
imul
pushf
insb
xchg
inc
xlat
testb
cli
adc
les
popa
dec
scas
adc
mov
mov
divl
js
ud2
jb
cmp
movl
not
xorl
xor
add
pop
ljmp
fsubs
xorl
sets
xchg
loopne
aas
jge
inc
pop
mov
add
push
in
ja
ret
in
shll
shl
aaa
add
and
mov
dec
daa
sub
cmpsb
addb
das
mov
xchg
push
outsb
xchg
adc
ret
push
push
mov
sub
shlb
inc
xchg
jbe
sbb
add
sub
shrl
sub
in
cmpsb
sbb
jmp
loopne
scas
rorl
fisttpl
aaa
mov
dec
xlat
in
in
jp
mov
sub
movl
xor
or
pop
loop
hlt
inc
mov
inc
rclb
aas
inc
add
pmaddwd
loop
mull
sub
fsubs
xchg
cmpsb
pushl
test
fiaddl
cmpl
add
pop
int3
and
dec
cld
sar
jo
adc
out
push
cwtl
cld
es
popa
lcall
fildll
mov
sbb
hlt
jbe
add
cmp
jle
and
jo
or
loopne
push
add
jo
fs
loopne
rcl
sbb
sub
jae
adc
loopne
mull
add
mov
sub
add
cmp
fadds
sbb
xchg
xchg
aam
aam
or
push
pop
xor
inc
add
in
in
lock
fildll
jae
mov
jno
pop
jo
aaa
rorb
push
cmp
inc
sub
enter
inc
or
and
orl
mov
jns
dec
loopne
test
xchg
pop
push
mov
lahf
dec
inc
push
and
or
sbbl
jns
out
in
es
inc
push
out
mov
clc
xchg
add
aas
movsb
repz
insl
scas
add
addr16
dec
adc
scas
mov
push
out
nop
andb
mov
jle
in
inc
jb
nop
ljmp
xchg
fdivrl
add
mov
mov
orb
scas
xchg
pop
daa
fmull
mov
mov
pop
adc
iret
fmull
or
push
xor
add
or
mov
jl
fcompl
outsl
xchg
cmovns
xor
mov
cmpsl
push
fsubrs
pop
ljmp
fbstp
sbb
enter
cld
jmp
fs
add
inc
mov
xor
out
push
es
addr16
leave
and
push
icebp
push
cmp
insl
push
push
dec
mov
shl
sbb
xchg
xchg
je
in
and
and
xchg
les
loopne
sti
or
cld
adc
pop
test
add
movsl
scas
inc
mov
addr16
adc
iret
pop
add
xchg
jbe
sahf
fcoms
rol
or
call
cwtl
mov
mov
sbb
adc
add
sbb
lods
pop
mov
aam
insb
or
add
adc
imul
fnstsw
mov
test
jbe
mov
add
mov
add
xor
sahf
jp
rclb
adcl
or
ja
push
push
ss
or
rclb
add
and
sbb
jbe
loope
repnz
jno
mov
or
frstpm(287
cmp
push
imul
lea
adc
inc
test
scas
and
xchg
pop
push
nop
xchg
jnp
mov
lods
mov
sbb
or
lret
or
lock
cwtl
in
rolb
lret
je
clc
in
hlt
xchg
test
lock
xor
xor
jbe
xor
test
mov
daa
dec
scas
dec
aam
dec
fwait
fs
mov
in
lds
inc
fs
shlb
add
pop
sbb
shlb
movsb
adc
add
dec
and
adcl
in
pop
cwtl
push
sub
dec
fdivs
syscall
dec
sbb
xor
not
mov
lock
pushf
jl
icebp
call
add
jno
fsubl
sbb
fcoms
je
dec
cmp
test
adc
mov
shll
and
gs
sbb
rcl
cmc
inc
imull
add
jbe
sbb
orl
rep
mov
cwtl
fistl
sub
movsl
pop
cli
rol
je
push
xor
stos
mov
comiss
popf
dec
xchg
loopne
cmp
sysexit
sti
test
cmp
pop
jne
jns
inc
test
mov
rorl
test
repz
pop
xor
movsl
or
mov
dec
jae
mov
mov
sub
add
ret
shr
mov
push
fmuls
or
cld
nop
add
xor
cmpsb
push
in
and
add
pop
xchg
test
push
jns
sahf
mov
xlat
inc
neg
jb
ja
outsl
and
imul
xor
aas
mov
or
aam
add
enter
cld
inc
sub
fs
mov
push
xor
jo
xchg
jmp
xchg
das
or
test
sub
in
mov
mov
add
mov
add
xor
gs
pop
sarl
jmp
add
mov
xor
lea
push
jmp
mov
sbb
out
add
enter
sahf
push
loopne
mov
xchg
faddl
cmp
mov
and
cmpl
mov
add
movsb
shll
push
push
popf
cld
stos
into
add
fucomp
loopne
cmp
mov
or
les
in
cs
dec
inc
pop
into
jg
mov
sbb
inc
mov
clc
sub
push
push
add
add
imul
scas
or
sub
add
sub
call
jp
gs
add
les
sub
mov
adc
sbb
mov
inc
shl
or
add
fidivrs
push
push
daa
push
xchg
push
or
ds
call
jne
sub
fwait
inc
mov
test
jb
jmp
mov
ss
adc
mov
test
or
inc
adc
pop
test
push
or
mov
sbb
cmp
mov
cmpb
or
xor
shl
push
or
mov
pop
xor
mov
adcl
xchg
push
dec
jae
inc
inc
add
push
add
xchg
cmp
jmp
push
adc
mov
mov
add
insb
or
push
loopne
cld
push
in
or
mov
jns
mov
test
clc
movb
rcl
cltd
mov
sub
and
aad
pusha
adc
bound
sbb
clc
adc
dec
sub
sbb
xchg
cmpsb
sahf
push
cli
inc
add
add
sub
lcall
xchg
lea
scas
jl
xadd
les
mov
add
pop
push
add
add
cmpsl
xchg
test
adc
fistps
or
fwait
js
jp
inc
inc
fstpt
sbb
jle
push
inc
fstp
jne
fmull
insl
clc
fstpl
xor
sbb
fcompl
test
mov
ja
and
adc
inc
push
pop
in
push
sub
and
je
sbb
pop
inc
out
push
cmp
lret
aas
and
or
add
out
loope
xchg
or
push
dec
fs
jmp
sub
ljmp
cmp
lods
test
sbb
mov
rolb
mov
cld
and
les
lds
add
dec
gs
add
sbb
enter
jns
or
arpl
xor
arpl
rorl
adc
xlat
lock
inc
push
loop
fs
aad
push
or
nop
sub
ljmp
jno
jp
call
les
in
push
fsubs
stos
mov
inc
add
jg
mov
es
xchg
fimuls
jo
push
mov
fimuls
adc
cwtl
xchg
xlat
hlt
movsl
jbe
mov
pop
mov
lea
push
sub
jb
and
pop
int
adc
bound
icebp
adc
sub
add
xchg
test
lahf
ret
push
shl
push
orl
ss
mov
adc
pop
adc
adc
ret
test
roll
jno
sbb
cmp
xchg
sbb
mov
jno
test
popa
jle
cs
add
sbb
xor
push
mov
neg
sbb
inc
orl
sti
adc
mov
add
stos
xor
dec
lret
jb
movsl
sub
cmp
jbe
arpl
sbb
fnstcw
clc
fs
cltd
mov
add
or
sub
sub
add
arpl
or
add
adc
and
add
adc
push
add
or
aaa
test
rcll
pop
sbb
cld
daa
ficomps
fbld
ret
mov
xchg
sub
adc
imul
mov
sbb
push
dec
clc
jne
cmc
hlt
pop
pusha
mov
push
xor
popa
imul
push
mov
adc
inc
mov
jmp
pop
xor
sbb
outsb
jo
push
es
or
test
aad
cs
cmpb
mov
or
inc
loope
push
pusha
test
mov
pop
xchg
mov
movsl
ds
sub
or
push
sub
xchg
and
or
mov
inc
lahf
sub
aad
or
enter
or
dec
enter
aaa
stos
mov
cld
dec
es
std
add
setl
mov
daa
ret
add
int3
mov
mov
jl,pt
cmp
dec
mov
jmp
orb
loope
sbb
and
jg
cmp
mov
movsl
pop
inc
push
xor
inc
inc
repnz
or
xor
bound
data16
aaa
aaa
pushf
or
mov
inc
sbb
inc
or
dec
cmp
lahf
push
or
test
pop
dec
sets
mov
insb
adc
push
push
mov
mov
stos
mov
or
pusha
hlt
or
jb
aad
and
inc
jmp
clc
pop
or
or
or
in
jmp
jle
adc
inc
in
jns
cmp
movsb
dec
lods
push
adc
and
xor
sub
or
gs
jle
inc
faddl
mov
push
ret
int
aaa
jne
xor
dec
sbb
dec
cmp
cmc
aaa
xchg
add
mov
jecxz
and
adc
and
xchg
into
jle
adc
add
sbb
lret
mov
push
rcrl
dec
shl
pop
mov
mov
adc
pusha
mov
xor
inc
loope
inc
in
inc
nop
and
mov
sub
lods
test
and
inc
sub
lods
sbb
and
sbb
lahf
xchg
add
loopne
addr16
insl
cmp
imul
nop
and
push
arpl
dec
push
cmp
dec
or
cwtl
shll
test
cmp
cmp
jle
mov
in
adc
jmp
cwtl
or
int3
add
loope
clc
pop
jmp
jb
add
loopne
dec
andl
add
outsl
adc
pop
or
and
and
mov
arpl
jmp
push
sbb
sbb
in
repz
push
arpl
push
pop
adc
orb
push
lea
dec
pop
adc
pop
xor
fistpll
mov
pop
xchg
mov
test
fildl
popa
sub
call
bound
or
aam
add
cmp
movsb
adc
lret
sub
test
mov
xchg
mov
cmc
add
stc
lock
inc
loope
call
fcompl
cmp
inc
or
loopne
jne
cmpsl
dec
lods
inc
mov
mov
insl
dec
jle
movsl
dec
or
push
or
xlat
add
bound
push
icebp
imul
pushf
push
cmc
mov
push
stos
lods
pusha
bsr
in
sub
or
push
adc
xchg
inc
mov
repnz
icebp
cmp
add
sbb
insl
jo
add
adc
pop
enter
lock
subb
or
out
jge
push
cmp
fcoms
add
outsl
jo
pop
inc
xor
add
test
cld
rol
jbe
test
nop
loopne
jno
adc
fldcw
jge
add
je
dec
mov
push
notb
lret
pop
push
jbe
test
pushf
mov
dec
or
nop
lock
stc
jo
loope
xchg
or
enter
mov
dec
aaa
sysexit
lock
inc
mov
insb
loopne
movsb
push
mov
xchg
push
cmp
lea
popf
push
dec
inc
movsl
mov
xchg
jno
pop
inc
lret
ds
movsb
vlddqu
lock
pop
repz
rcrl
push
inc
fdiv
jae
scas
loopne
or
fisttps
jns
or
inc
sub
xchg
hlt
xor
lea
mull
mov
mov
cmp
or
imul
push
push
jae
loope
xchg
adc
or
push
xchg
call
pushf
jg
lea
pop
pop
fs
loopne
addl
mov
popa
mov
les
insl
push
into
sbb
sbbb
mov
sar
dec
cmp
push
add
or
sub
sub
stos
ja
mov
mov
and
jne
inc
lcall
insb
pop
push
xchg
cmpsb
mov
fmull
and
mov
mov
jo
mov
cmpsb
aaa
mov
adc
js
test
int
mov
test
pop
dec
enter
pusha
mov
shll
orl
cmp
les
addr16
xor
mov
inc
mov
inc
push
fiaddl
xchg
fsubrl
lcall
fmuls
inc
loop
clc
jne
faddl
or
inc
mov
mov
or
sub
clc
add
lret
jno
or
adc
ror
mov
fs
push
mov
mov
inc
in
xchg
inc
jne
push
xor
inc
adc
rcll
fnstsw
mov
ficoms
dec
push
or
repz
inc
add
adc
rcll
int3
aas
mov
push
push
das
xlat
xchg
orb
xor
push
jno
roll
pop
icebp
push
xor
shlb
mov
sub
mov
or
in
or
int
imul
xchg
adc
xor
fildl
push
daa
push
adc
icebp
inc
pop
ret
fstl
add
shll
or
xchg
xor
cmpl
inc
ds
shlb
pop
add
ret
jge
repz
and
adc
cmp
and
inc
aas
push
jns
sbb
enter
clc
cs
add
jne
ljmp
pusha
add
int3
jp
mov
lea
dec
cmpsl
mov
or
stos
and
pop
mov
shlb
pop
pop
div
cmpsl
jne
add
sub
pop
sub
pop
jb
xor
cs
sub
pop
fistpl
ljmp
inc
push
pop
or
sub
mov
sbb
lcall
imul
xor
mov
into
and
and
jns
xchg
and
lock
sub
sahf
inc
lds
int3
lock
jnp
sbb
jecxz
jmp
rorl
and
fisttpl
mov
mov
push
push
inc
adc
xchg
or
jp
add
or
dec
fsubl
mov
inc
mov
add
add
push
mov
add
jns
or
dec
pushf
dec
lods
sarb
test
repz
jo
jecxz
dec
mov
pusha
int3
lock
decl
inc
imul
lds
mov
jg
push
repnz
push
stc
xchg
mov
dec
mov
push
mov
loop
xchg
mov
popa
orb
push
jb
outsl
out
lret
dec
test
or
ja
out
dec
pop
in
adc
add
imul
js
aas
xchg
andl
inc
or
xchg
lea
dec
clc
je
arpl
mov
cmpsl
cld
cmp
jae
nop
sbb
add
push
gs
jmp
sub
mov
xor
js
stos
jb
call
in
mov
lea
jecxz
push
test
outsl
les
sub
mov
mov
movsb
xchg
xor
jecxz
sub
mov
cmpsb
loop
add
jne
push
mov
clc
in
test
repnz
in
aad
jmp
pop
push
cs
jnp
and
dec
cltd
sahf
fildll
ja
iret
pop
push
cltd
xchg
sbb
and
shll
adc
adc
clc
jg
xchg
and
xchg
add
dec
test
hlt
xchg
in
mov
sbb
imul
push
sub
aas
jp
and
js
insb
loope
das
int
loopne
es
jp
add
sub
sub
sahf
lret
adc
dec
clc
push
test
pop
mov
jno
adcl
test
or
mov
out
dec
adc
or
pushf
pusha
roll
mov
mov
nop
push
movl
sbbb
pop
pop
cmpl
xor
mov
push
jmp
ss
or
pop
xorl
push
outsb
inc
dec
inc
pop
test
xchg
sub
popl
subb
xchg
xchg
or
cmc
pop
push
push
lahf
or
hlt
xorb
ja
jmp
pop
cmp
xchg
mov
test
mov
sub
pushf
adc
jb
aaa
push
mov
movsb
push
jo
shrb
orl
sub
pop
mov
gs
mov
jb
subl
popa
and
pop
or
in
mov
and
scas
lods
les
fldcw
je
jb
cmp
lcall
movl
mov
mov
cmp
pop
fisubs
and
jmp
lods
frstor
jg
ficoms
adc
mov
cs
xor
or
mov
jbe
inc
jns
lret
push
xchg
xor
nop
push
sbb
jl
adc
xor
hlt
or
dec
icebp
jns
aam
les
das
and
mov
imul
sub
jns
push
inc
jb
fcmovnbe
loopne
cmp
xor
pop
outsb
xchg
mov
adc
sahf
inc
popa
loop
xchg
push
push
inc
sbb
sub
or
adc
sahf
adc
fimull
dec
push
push
adc
inc
and
inc
pop
pop
mov
adc
sub
or
loope
xor
popf
add
pusha
or
nop
add
rorb
push
xchg
lea
sbb
xchg
inc
fwait
aad
subb
inc
or
xor
sub
mov
adc
dec
sbb
adc
add
xlat
inc
dec
sbb
imul
aam
cmpsb
cld
pop
add
popa
xchg
lods
add
je
push
test
lock
outsl
pop
das
push
cmp
mov
mov
push
adc
adc
sbb
loop
pop
mov
popa
adc
jmp
je
into
comiss
dec
adc
push
dec
inc
cli
sbb
or
push
pop
lret
pop
cmp
or
mov
adc
das
popf
lods
scas
adc
mov
or
test
test
or
xchg
push
scas
jns
stc
adc
or
mov
data16
adc
and
or
fnstenv
pop
fildll
jbe
mov
mov
loope
xchg
es
sahf
pushf
or
test
repnz
add
add
xchg
xlat
ja
push
pusha
ret
scas
push
and
repz
pop
sbb
xor
icebp
mov
mov
and
inc
add
lea
jb
or
add
and
das
jae
push
mov
cmc
inc
mov
arpl
pop
mov
or
sbb
xor
movsb
filds
push
jmp
repz
sub
mov
lahf
sub
push
fisttpl
popa
adc
cmpsl
mov
roll
push
or
add
lea
mov
dec
pop
mov
or
es
fistps
mov
xor
fsubrs
pop
shrb
cmpl
das
int
jne
popf
and
call
and
pop
rorl
idivl
inc
test
or
dec
jl
stos
mov
cmpsl
rolb
jne
in
inc
daa
add
in
sar
push
test
enter
insb
push
sub
xchg
or
push
cld
dec
negl
push
push
pop
sub
adc
pusha
call
and
insl
call
xchg
cmpsb
std
mov
stc
outsl
pop
clc
mov
and
adc
add
add
mov
pop
call
fists
lods
add
popa
outsl
fsubrs
sub
cmp
mov
orb
mov
mov
in
pop
jb
repz
data16
xchg
inc
sub
xchg
or
aas
insb
push
call
add
or
data16
outsb
sbb
xchg
in
cmpsl
fdivl
loope
shll
mov
fistpll
xchg
push
mov
and
inc
sbb
outsb
addb
ss
inc
add
mov
jmp
xchg
mov
cmp
ja
pop
mov
testb
mov
in
pushf
push
out
adc
cmpsl
cld
add
push
cmpl
mov
sbb
cwtl
mov
cwtl
and
movsb
imul
stc
movsb
movsb
mov
sub
jge
xor
xchg
jmp
mov
mov
das
mov
mov
lds
mov
lea
mov
inc
pop
test
pop
push
in
test
mov
jmp
mov
xor
cmp
je
rclb
add
jne
add
sub
outsl
xchg
pop
adc
imul
sbb
add
adc
add
rcr
ljmp
and
mov
clc
nop
lods
add
xchg
xor
adc
mov
cmp
inc
add
pop
sbb
adc
xchg
pop
int3
insl
inc
inc
subl
lcall
mov
pop
ficoml
pop
jo
push
and
lods
lods
cmp
xchg
ss
lods
lods
adc
mov
mov
or
rorb
je
sub
scas
mov
rorl
dec
and
leave
inc
sbb
mov
popf
jb
adcb
dec
pop
and
rolb
jns
add
mov
jp
add
adc
sti
cmp
add
mov
xlat
add
pop
rorb
lret
sub
scas
out
add
pop
or
nop
push
xchg
push
mov
inc
xchg
add
pop
pop
push
es
mov
roll
pop
push
or
jle
push
ja
and
push
xor
ret
mov
pop
jo
test
dec
or
je
lea
cmp
mov
jbe
jl
clc
adc
pop
ret
pop
mov
pop
outsb
call
insb
mov
add
sbb
pop
xchg
add
outsb
mov
mov
push
lods
pop
push
push
or
push
or
adc
mov
int3
adc
or
ljmp
inc
cld
imul
ret
push
inc
xor
pop
inc
jmp
aam
xor
inc
inc
pop
adc
push
pop
div
inc
leave
sub
nop
cmp
fidivl
jnp
andl
arpl
or
bound
lea
push
pop
out
cmpsb
mov
pop
pop
orb
xor
dec
push
sbbb
insl
lea
insb
pop
inc
movsb
loopne
add
jecxz
jg
jbe
pusha
xor
xor
jmp
mov
dec
dec
dec
mov
sub
sub
je
mov
xor
xor
push
dec
ret
or
je
adc
mov
inc
add
push
sub
sub
es
sbb
dec
adc
push
mov
subb
push
mov
jae
and
cmp
mov
fiadds
and
daa
add
scas
outsb
cmp
fld
fisttpl
lahf
aad
xor
or
inc
imul
pusha
adc
or
or
test
daa
push
sti
loop
lret
loopne
je
repz
or
push
dec
push
lock
xchg
dec
les
aam
mov
sub
sub
xchg
aam
push
add
dec
hlt
add
inc
int
mov
ficoms
ror
and
lock
sarb
jl
test
cmp
xchg
pop
and
jg
cld
xchg
cltd
cld
adc
shl
add
ret
inc
enter
cs
sbb
test
inc
loopne
out
bound
xor
mov
in
rcrb
mov
leave
or
pop
push
cmp
xlat
jmp
jns
cmp
jno
mov
sbb
add
xor
push
rcll
adc
lcall
mov
cmp
fs
adc
arpl
loopne
clc
sbb
es
or
xchg
mov
pop
jns
mov
rolb
jmp
movb
inc
mov
add
add
push
bound
int3
repz
xlat
lea
fsubrs
dec
loopne
dec
inc
jge
leave
jp
xchg
ja
xor
das
outsb
shlb
sbb
push
mov
pop
add
mov
or
sbb
or
daa
jle
je
outsb
adc
jbe
rcll
xchg
push
sbb
adc
repnz
ja
mov
test
xchg
sbb
scas
hlt
imul
pusha
imul
ljmp
cmp
stc
xor
add
inc
repz
inc
test
adc
mov
mov
fisttpll
iret
jae
jl
leave
push
add
mov
call
sbb
and
or
pop
push
push
mov
adc
leave
push
push
xchg
add
mov
ret
and
insb
dec
mov
or
jb
pop
xchg
sub
add
pop
sub
xor
rcll
push
mov
fnstenv
or
or
mov
mov
or
or
je
sbb
push
xorl
push
jne
lods
dec
push
pop
mov
in
cmp
clc
jp
dec
cmp
aaa
xorl
xor
inc
cmp
sbb
sbb
jne
jmp
loopne
ja
scas
ljmp
or
and
mov
pop
jmp
mov
lds
and
push
in
adc
jmp
adc
xor
or
pop
add
cwtl
ret
out
mov
or
je
test
add
xchg
xchg
jmp
pop
inc
push
jmp
aaa
test
movsb
pop
push
pop
and
fwait
add
cmp
xor
andl
arpl
mov
insb
push
dec
loop
popa
ret
inc
xor
es
adc
push
add
push
cmp
inc
adc
scas
rorb
add
inc
jb
leave
sub
popa
packssdw
mov
scas
nop
loopne
mov
add
arpl
add
push
or
rolb
lret
push
cs
repnz
jmp
out
insl
loopne
test
pop
inc
push
rol
aaa
cmp
jp
or
mov
filds
cld
sbb
pop
fwait
loopne
pop
les
xchg
adc
gs
loopne
loop
lret
call
xor
and
lds
clc
imul
push
jmp
xor
dec
sub
jno
and
xchg
jmp
or
addr16
adc
xor
sbb
in
pop
sub
and
cmp
pop
xor
or
or
call
pop
push
jbe
pop
sarb
jne
sbb
movsl
stc
xor
pop
mov
xchg
xchg
sbb
pop
lret
add
lock
sub
nop
cld
movsb
loop
inc
orl
stos
adcl
or
pop
add
pop
inc
ljmp
adc
add
out
repz
push
arpl
dec
adc
das
mov
call
mov
add
stos
andl
xlat
adc
je
arpl
cmp
or
mov
inc
sub
leave
jge
jns
jb
in
pop
xor
push
mov
push
popa
movsl
insb
push
push
daa
ja
cmp
push
push
cmp
push
shrl
movsl
fisttpll
dec
push
cs
pop
pop
mov
imul
loopne
cld
in
popl
fnstsw
outsb
les
test
mov
daa
adc
cli
adc
cmc
sub
push
inc
or
imul
adc
sub
shr
cmp
push
pop
jbe
pop
aaa
mov
inc
mov
mov
adc
jmp
mov
aaa
nop
cmp
mov
xor
add
sub
push
arpl
sbb
or
inc
les
test
xchg
ja
bound
cmp
sarb
cmpsb
mov
jnp
shll
push
push
jnp
pusha
lods
les
aas
les
xchg
stos
mov
test
dec
bound
push
pushf
jg
sti
insl
in
sub
add
xchg
jg
xor
and
add
add
insb
push
addb
add
cltd
sub
or
adc
pop
and
add
add
push
push
inc
push
loopne
pop
call
dec
cmpsb
sbb
xchg
mov
rcrb
push
jg
rclb
pop
arpl
iret
pop
je
mov
loopne
jecxz
jmp
sub
cmp
in
inc
jae
or
jae
shld
shl
ret
mov
xchg
ret
mov
lahf
or
adc
dec
xor
inc
or
loopne
sub
je
pop
cmp
cmpsl
fbld
and
and
dec
or
pushl
mov
jle
and
push
dec
pop
icebp
jne
leave
add
cld
loopne
pop
sub
mov
lret
push
mov
push
mov
push
jp
pop
adc
cmp
push
jnp
sbb
insl
in
mov
lds
call
add
mov
sub
out
sub
fsubs
dec
mov
dec
push
iret
inc
in
dec
xor
cmp
add
adc
or
gs
mov
dec
mov
inc
cmp
dec
add
ja
scas
aas
mov
rcrb
or
cmp
insl
xchg
in
imul
adc
inc
push
movsb
and
sbb
popf
shl
xchg
ja
loopne
adc
sub
xchg
icebp
shl
push
inc
adc
adc
jmp
or
adcl
xlat
pop
sbb
fcomps
dec
ds
sbb
sub
les
pop
imul
mov
mov
mov
push
sub
cmp
movsb
mov
int
dec
push
test
fs
adc
lds
sarl
aas
push
or
subb
das
arpl
adcl
loope
add
cmpsl
mov
add
adc
filds
ret
add
cmc
adc
push
jnp
mov
push
add
lcall
pop
push
push
sbb
das
ficoms
jmp
sbb
dec
daa
lods
fisubrl
mov
jae
mov
or
mov
jmp
cmpl
adc
or
ret
mov
or
mov
shl
add
stc
or
je
shr
sbb
repnz
xchg
mov
xchg
adc
daa
jae
or
insb
dec
push
je
and
jge
mov
mov
scas
jmp
xor
xchg
inc
push
mov
push
jo
sub
shll
push
push
mov
and
dec
cld
fnstcw
pop
hlt
mov
cmpsl
jnp
fidivrs
adc
add
adc
mov
xor
adc
stc
inc
jmp
add
xchg
lock
adc
jp
jmp
in
inc
sahf
adc
cmp
xor
sub
test
andb
popf
add
cmp
imul
aam
or
or
or
jbe
and
add
movsl
fcomp
inc
sbb
xorl
xchg
mov
sti
mov
pop
fwait
mov
fsubrs
add
cmc
and
push
or
cmp
push
movsb
mov
or
fdivs
fcoms
in
mov
mov
mov
enter
movsb
inc
cli
push
lea
clc
dec
int3
and
arpl
jbe
dec
and
jnp
push
popa
sub
cld
shl
or
nop
pop
jb
mov
jg
jl
call
jmp
and
jne
push
push
mov
mov
adc
divl
shr
sbbb
and
enter
inc
add
loope
mov
mov
sub
mov
push
sub
push
leave
push
les
shlb
les
jns
cmp
pop
mov
sub
xor
inc
cs
dec
rclb
mov
test
ds
sbb
mov
cmp
test
adc
sub
and
push
insb
sbb
sahf
mov
inc
jecxz
aaa
dec
dec
pop
jmp
icebp
in
inc
rol
xor
icebp
in
jmp
fmull
in
sbb
mov
cli
cmp
inc
mov
ror
mov
nop
imul
add
push
adc
movsl
mov
adc
xor
lea
add
sbb
leave
cmp
xor
jae
fidivl
fisttps
jecxz
std
popa
int
cmp
cmp
pop
ret
lds
sbb
and
or
or
cmpsb
adc
inc
sbb
mov
clc
dec
mov
pop
sub
cltd
mov
cmp
mov
mov
outsb
pavgb
jno
in
or
sub
mov
pop
clc
mov
shll
xchg
les
iret
les
sbbb
imul
add
sub
cmp
and
aad
pushf
xchg
je
lock
jmp
out
or
movsl
push
arpl
add
movsl
into
je
push
jmp
push
xchg
or
sbb
cmp
lods
cmc
sbb
hlt
sbb
les
sbb
xor
jbe
shll
xorb
fidivrs
push
add
mov
and
xchg
je
lret
cmp
das
push
lock
adc
jmp
sbb
xchg
aaa
add
push
push
cmc
or
mov
fs
imul
pusha
icebp
inc
or
pop
fistpll
pop
je
stos
or
ljmp
mov
pop
push
hlt
repz
mov
pop
add
add
adc
adc
and
pop
sbb
sbbl
hlt
cmp
sub
cld
xchg
or
test
std
sbb
mov
addl
adc
xchg
push
hlt
jmp
stos
rcrl
xchg
rclb
inc
dec
mov
divb
mov
push
push
test
add
cmp
jnp
imull
dec
nop
push
int3
xchg
pusha
or
mov
aaa
push
cmc
mov
push
push
fistpll
repz
testl
cld
xchg
xor
in
fistps
sbb
jmp
push
push
pop
mov
aam
jo
or
xchg
rclb
mov
xchg
inc
pop
nop
call
push
xchg
or
sbb
mov
push
jnp
inc
or
mov
or
push
iret
repz
xchg
pushf
movsb
lods
mov
add
cmpb
cli
jns
xchg
loopne
call
inc
lods
push
xor
js
inc
mov
aas
cmp
loop
dec
inc
addb
fnstcw
xchg
pop
jns
lock
push
add
lods
and
cmpsb
clc
xchg
loope
ret
jmp
xor
fwait
mov
addr16
in
lret
negl
call
or
or
cmpb
insb
mov
fninit
pop
cli
xor
or
and
hlt
loope
ret
inc
shlb
shl
mov
push
and
or
addr16
or
lods
aas
and
leave
adc
fdivrs
rdtsc
sub
inc
loope,pn
shrb
or
push
adc
mov
adc
and
dec
enter
adc
scas
or
cld
cmpsb
xchg
and
jns
lcall
clc
adc
push
sbb
or
jmp
adc
adc
mov
xor
pop
outsb
adc
add
dec
mov
jo
xor
cmp
or
fnsave
or
adc
add
jmp
jle
sbb
cmp
inc
imul
shll
dec
enter
push
add
lcall
xchg
xor
add
outsl
add
xor
or
or
pop
mov
scas
or
fisubrl
nop
inc
adc
and
rcrl
fnstcw
inc
sbb
add
ja
je
dec
repnz
jmp
xor
in
into
lods
jmp
jmp
sbb
lock
shlw
daa
int
lret
es
adc
or
sbb
lret
xchg
outsl
in
add
add
pop
cmpsb
in
push
call
mov
sbb
mov
aas
cltd
and
ret
and
xor
pop
jmp
jns
dec
or
inc
mov
enter
inc
loop
push
imul
out
mov
and
loop
xor
incl
jge
icebp
notl
daa
or
shrl
jecxz
adc
xorl
mov
gs
cmp
std
mov
sub
pop
push
or
mov
jcxz
and
test
inc
jo
add
andb
lock
sbb
lods
and
xor
inc
cmp
mov
inc
or
loopne
mov
es
clc
lock
push
in
in
in
xchg
cmpsl
cltd
lret
or
or
mov
inc
mov
add
adc
mov
mov
das
aas
mov
mov
lock
push
rolb
loop
cmp
mov
mov
xchg
rcl
call
and
or
push
and
jg
test
add
adc
adc
mov
cltd
cmp
aas
mov
jb
mov
jno
add
lea
ret
sbb
sub
subb
xor
sbb
ds
addr16
enter
or
lcall
fistl
mov
sahf
xchg
lock
inc
testb
pop
adc
add
andl
lret
push
les
ss
iret
mov
hlt
push
test
faddl
imulb
nop
js
pop
add
sbbl
js
ret
sarb
mov
sub
adc
dec
mov
add
mov
cli
or
sub
adc
adc
shrb
loope
add
ja
filds
movsl
push
add
jle
sub
fdivrl
xorl
jg
mov
sub
int3
sbb
mov
sbb
push
jae
idivb
push
or
lea
push
fcmovnb
mov
fimuls
jl
cmp
sbb
xorb
stc
add
adc
push
adc
pop
or
push
cmp
sub
adc
lahf
adcl
dec
mov
test
call
push
loopne
fstps
leave
fdivrs
push
fcompl
fs
mov
adc
add
adc
adc
movsb
sub
jae
lods
in
cwtl
data16
push
xchg
jl
aas
mov
inc
sub
sub
and
and
lock
clc
push
js
or
xchg
and
push
push
dec
cmp
sub
into
xchg
in
dec
or
inc
adc
out
je
hlt
mov
xor
shr
leave
rcrb
lods
test
add
sbb
sti
movsb
xor
cmpsb
sub
sbb
out
xor
jecxz
aad
jg
in
xor
xchg
sub
dec
xchg
jecxz
jg
jg
popl
aaa
icebp
movb
sarl
xchg
lds
sub
fadd
hlt
pop
adcb
int
xlat
sub
push
sbb
jmp
inc
cltd
xchg
je
leave
lcall
xor
hlt
jge
ljmp
jecxz
rcrb
testl
push
adc
push
push
cmpsl
in
adc
pop
or
es
shl
loop
inc
or
pop
xor
xchg
jle
in
call
xor
sbb
xor
jl
int3
lods
sbb
inc
subl
movswl
sub
pop
mov
adc
addl
rcl
lcall
cmp
cmpsl
fwait
in
or
push
lock
jns
sbb
adc
or
mov
lcall
wbinvd
mov
arpl
daa
mov
jo
jnp
in
pop
dec
ret
cltd
ljmp
adc
jg
add
or
mov
lods
fadds
insl
dec
addl
jmp
ljmp
mov
sbb
repnz
or
enter
mov
or
or
pop
cmp
inc
mov
jecxz
rclb
subb
sbb
dec
inc
add
stos
pop
cmpsb
xor
xchg
ljmp
rcrl
dec
rcll
or
pop
or
xor
jmp
nop
sti
add
nop
aam
aad
sbb
push
cmp
sbbl
and
icebp
popf
sbb
push
xor
jnp
push
clc
std
in
pusha
mov
scas
lods
lods
dec
adcb
pop
out
inc
cmp
dec
and
movl
sbb
and
aas
imul
test
lret
pop
aam
cmp
add
inc
pusha
push
cld
xor
rcll
movsb
mov
or
mov
xor
inc
lcall
scas
nop
ss
and
pop
and
adc
int
shrb
sub
xor
xor
adc
xor
pop
and
cmp
pop
and
adc
int
rolb
dec
int
rcrb
push
dec
adc
dec
rcrb
pop
dec
pop
dec
pop
and
adc
int
rorb
cmp
adc
jo
adc
cmp
pop
and
js
jl
rorb
ds
nop
lret
adc
jb
pop
inc
mov
and
enter
inc
cwtl
sub
sub
pop
clc
movsb
and
fidivrl
fwait
ret
mov
movsl
pushl
dec
dec
push
xchg
mov
or
mov
fisubs
gs
inc
xchg
or
or
and
and
xchg
mov
and
xchg
xor
cmp
xchg
and
cmp
inc
and
xchg
and
xchg
and
xchg
push
push
pop
sbb
and
xchg
and
xchg
and
xchg
jo
js
stos
or
jl
pop
imul
andb
pop
leave
shlb
nop
leave
xchg
pop
leave
xchg
cwtl
pushf
pop
leave
xchg
pop
mov
mov
sbb
jle,pt
cmp
and
mov
adc
popf
mov
inc
push
pop
push
clc
or
push
cmp
xchg
cmpsb
or
mov
popf
ficoml
adc
jl
mov
clc
movsb
pop
hlt
ficompl
or
pop
in
out
dec
adc
call
xchg
push
lods
mov
mov
cmp
nop
je
test
pop
hlt
lods
inc
insl
pop
out
loop
adc
push
mov
adc
aas
mov
pop
mov
clc
xor
dec
popa
clc
pop
xor
pop
nop
xor
js
and
mov
push
xchg
cmp
push
add
cwtl
push
add
mov
aaa
add
loop
cmp
add
or
cmpb
add
dec
add
js
mov
arpl
xchg
mov
or
jp
ja
aaa
sub
insl
filds
iret
add
xor
push
rorb
push
jg
lret
imul
and
jg
aas
popa
loopne
adc
add
loope
inc
xor
xor
lcall
xor
movsb
jg
or
pop
add
mov
mov
cmpsl
addr16
mov
sbb
xor
sahf
jnp
or
rolb
mov
pop
hlt
fsub
inc
pop
pusha
mov
fsubs
mov
mov
fisubrl
fbld
dec
mov
or
xchg
leave
js
cmpsb
xchg
iret
sub
adc
add
leave
dec
jae
imul
sbb
popa
test
sbb
rcl
cmp
dec
in
shrb
and
push
sbbb
cmp
add
dec
jae
sbb
push
push
dec
jae
sub
dec
jae
xor
sub
push
cs
das
jp
push
dec
push
icebp
mov
decl
cli
xlat
cmpsl
lods
or
je
rorl
dec
cmp
dec
sbb
mov
shlb
or
jmp
dec
fidivs
add
or
xor
pop
add
adc
xchg
out
dec
pop
jle
jb
into
push
push
fcoms
in
shrb
xor
push
arpl
add
enter
bound
lret
shl
inc
jecxz
mov
aam
or
call
adc
out
aam
xor
mov
dec
loopne
clc
jnp
sub
xor
jmp
out
inc
push
push
mov
insl
fwait
mov
add
aaa
inc
mov
test
rcl
js
cmp
mov
pushf
imul
sbb
or
cli
fwait
call
and
sub
gs
dec
aam
and
jne
loopne
add
mov
xchg
or
adcl
lock
and
dec
fdiv
inc
or
pop
mov
aaa
mov
cmp
fdivl
loopne
fs
sti
rcr
fsubr
fxch
leave
jae
negb
add
inc
fcoms
sbb
outsl
cmp
jmp
lea
popf
adc
inc
call
or
or
sbb
shrl
inc
ljmp
jo
inc
dec
mov
cmp
in
push
rcrb
push
or
mov
ds
pop
shlb
dec
or
aam
ret
leave
sub
popa
aam
dec
je
fcomp
dec
dec
stos
and
cmp
popa
aam
push
dec
out
mov
jno
push
adc
insl
adc
imul
mov
faddl
mov
jne
cmp
lock
andb
bts
jmp
es
nop
inc
mov
sub
mov
jae
mov
enter
fadds
add
or
lea
ja
je
push
aas
test
ret
mov
test
dec
insb
push
add
inc
pop
add
std
or
inc
or
lahf
hlt
lods
cli
mov
pop
call
and
inc
add
insb
jbe
push
add
lret
xchg
pushf
pushf
pushf
pushf
imul
nop
mov
sbb
xchg
sub
push
or
adc
xlat
jne
jp
jl
mov
jmp
sub
and
mov
into
add
push
lods
call
fnstsw
adc
sbb
adc
fcompl
mov
and
lret
in
lcall
in
jae
jb
push
xor
mov
aad
mov
pop
enter
adc
add
dec
scas
add
adc
or
push
inc
sbb
and
leave
loopne
add
popa
xor
xchg
sub
jo
mov
pop
dec
fwait
or
bound
push
push
lcall
lret
mov
pop
cld
mov
jmp
adc
lea
adc
movsb
sbb
test
in
shlb
filds
add
call
rorb
push
cmp
mov
xchg
das
ds
add
pop
mov
sbb
cmp
adc
mov
dec
sbb
pop
mov
add
sbb
nop
mov
mov
imul
sub
xchg
mov
jbe
sub
and
adc
lea
or
loope
dec
and
jp
mov
aaa
add
imull
jns
mov
mov
pop
jo
sub
lret
pop
test
popl
or
mov
iret
mov
mov
nop
push
mov
xchg
or
in
sbb
movsl
loop
xchg
lea
mov
movsb
push
jecxz
enter
or
addl
cmp
sbb
and
adc
movsl
add
les
bndldx
jbe
push
scas
jecxz
inc
hlt
pop
adc
and
pop
or
into
mov
push
shll
ud1
or
xor
sub
and
andl
dec
xor
pop
jmp
sub
mov
aas
jne
std
dec
nop
adc
push
lock
push
or
jne
mov
popa
out
inc
or
arpl
and
das
mov
or
inc
lods
push
pop
nop
lret
and
add
imul
mov
out
shrl
adc
dec
or
add
xor
lds
pop
les
in
adc
push
mov
pop
jmp
sub
push
push
and
mov
mov
push
mov
jle
push
int
nop
pop
in
les
and
loope
add
add
jmp
in
stos
cmp
cmp
movsl
sbb
dec
lock
aaa
pop
xor
adcb
sbb
sub
or
ljmp
in
or
jne
cmpsl
mov
add
mov
cmpb
adc
out
sarl
and
adc
jmp
cmp
adc
inc
or
xchg
andb
jae
mov
jne
leave
clc
arpl
inc
cmp
sub
sbb
jns
rcrl
adc
adc
dec
dec
push
bswap
mov
add
stos
push
inc
lea
mulb
test
sub
loopne
je
lds
xor
icebp
stos
add
imul
dec
add
push
jae
xchg
adc
adc
or
pop
inc
mov
stos
pop
lock
lcall
lock
popl
pop
add
push
inc
inc
dec
inc
imul
jge
clc
add
mov
iret
popa
jmp
and
sbb
in
or
je
pop
je
test
push
in
fcomps
add
call
push
shll
arpl
subb
push
inc
mov
mov
leave
and
xor
insb
and
mov
fwait
out
and
sub
les
das
sub
sarl
mov
mov
adc
fwait
push
shlb
cmp
and
outsl
dec
loop
les
cmp
loopne
daa
add
cmp
inc
imul
mov
or
and
das
add
mov
data16
jbe
sub
repnz
inc
jl
dec
jecxz
push
inc
jg
stc
les
xchg
imul
sub
pop
outsb
sahf
imul
clc
leave
ficoml
and
mov
lcall
jle
cld
adc
hlt
in
js
xor
push
dec
rclb
xadd
data16
add
aas
and
mov
push
ljmp
andl
pop
adc
or
push
adc
jbe
sbb
or
lcall
lock
add
inc
ret
push
pop
push
sbbl
add
mov
stos
lods
out
add
shlb
addr16
add
and
rol
call
xor
pop
xchg
andl
leave
imul
jne
sub
inc
and
or
pushf
or
test
sbb
out
in
adcb
jb
dec
mov
addl
inc
or
loope
out
or
mov
lock
loop
lds
sarl
popf
or
stc
cs
sub
dec
sub
push
and
mov
lods
std
pop
adc
subl
jnp
arpl
test
into
popf
mov
mov
into
fidivs
test
jbe
push
sti
xchg
lret
in
xchg
add
cld
clc
clc
and
loope
inc
and
rcl
lahf
repnz
in
pop
imul
pusha
leave
sarl
xchg
push
pop
mov
int
rol
fisttpl
mov
push
inc
xor
mov
xchg
popf
dec
dec
inc
dec
sbb
imul
xchg
pusha
cmp
hlt
scas
jnp
lcall
imul
or
add
mov
test
adc
push
sub
test
add
inc
adc
sub
in
enter
jp
or
or
je
cltd
pushw
imul
insb
xchg
mov
sub
clc
mov
or
loop
xor
negl
push
fcmove
and
ret
int
cmpsb
sarl
inc
sti
mov
add
or
fldl
xchg
lcall
fld
fbld
cmp
rcl
mov
test
int
fxch
ljmp
add
test
pop
adc
jl
add
xchg
xchg
sbb
data16
jbe
jp
mov
lds
or
adc
xchg
cwtl
mov
fistl
mov
lods
pop
or
ss
mov
out
inc
sbb
xchg
jns
or
dec
imull
sbb
pop
xchg
loopne
loopne
and
sbb
bound
fisubrs
pop
das
or
lock
inc
arpl
push
mov
mov
add
and
dec
lock
xlat
jbe
pusha
dec
insb
clc
mov
fbstp
es
nop
in
sti
pop
or
add
fs
mov
sbb
xor
xor
mov
inc
pop
xor
inc
inc
repz
daa
xorl
ja
jno
or
xchg
mov
out
inc
es
data16
outsl
insl
sub
addb
ja
xor
pusha
dec
fildl
lods
xor
sub
dec
jl
adc
and
clc
cmp
and
mov
fcoml
mov
and
mov
pop
mov
mov
int3
sbb
je
adc
xchg
and
pushf
daa
pop
add
cmp
sbb
push
inc
jns
sub
in
or
adc
in
movl
mov
push
dec
stc
adc
out
test
push
dec
punpckhbw
adc
imul
and
dec
sbb
rol
sub
ja
mov
ja
es
test
and
jno
adc
and
and
imul
mov
pop
imul
sub
xor
or
pushf
xor
pop
or
jmp
in
jns
cmpsb
fstpl
les
loopne
add
sbb
cli
lods
in
mov
sbb
dec
cmp
je
nop
nop
mov
push
aam
int3
cwtl
sub
addb
inc
and
bound
imul
insb
shll
adc
sbb
add
das
cmc
nop
enter
xchg
jmp
les
cwtl
and
pushf
xchg
stc
popa
jmp
dec
stc
les
inc
and
les
pop
push
push
loope
stc
xchg
push
lods
imul
call
sbb
shl
outsl
shl
into
sub
bound
ret
sbb
sbb
arpl
dec
add
orb
aad
and
mov
mov
mov
mov
jmp
inc
push
cwtl
or
mov
push
ficoms
jb
imul
int3
or
cmpsl
es
pop
mov
push
pop
or
push
cmc
jecxz
or
inc
mov
sbb
and
sbb
jae
mov
out
inc
test
inc
jo
pop
or
dec
mov
sub
add
pop
push
xorb
push
xor
ja
sbb
or
mov
push
enter
std
xchg
test
push
or
test
mov
iret
dec
call
jge
cmpsl
cmp
outsb
cltd
push
or
mov
ret
jmp
in
je
aas
cmp
fwait
pushf
orl
jecxz
sbb
sub
pusha
jb
mov
rcl
push
lods
out
imul
out
xchg
sub
filds
dec
jo
xchg
fbld
ret
lret
sub
je
shll
lcall
cwtl
cmp
testl
lea
push
cs
in
and
xor
mov
add
mov
nop
int
dec
imul
inc
in
jbe
fsubr
cmp
hlt
dec
sub
dec
cmpsb
in
stc
xlat
roll
jmp
jge
test
jmp
out
jge
pushf
iret
fdiv
mov
mov
pop
cmpsb
sub
jp
mov
mov
pop
in
lock
clc
lea
jbe
addl
lock
lock
mov
and
pop
mov
in
mov
dec
mov
es
add
add
sub
outsl
cwtl
mov
pushf
add
xor
mov
mov
add
repz
adc
lcall
flds
fdivrs
sbb
iret
jnp
push
xor
in
mov
add
add
add
mov
jo
xchg
addps
add
add
or
iret
mov
out
aad
in
lea
push
add
aad
sbb
xchg
and
add
push
or
inc
or
xor
cmpl
ficompl
icebp
pushf
adc
les
lcall
adc
lods
int3
push
lods
jns
out
scas
scas
mov
mov
jl
out
mov
mov
mov
cltd
es
sub
push
xchg
xor
nop
pop
push
inc
pop
loope
cwtl
xor
adc
lea
cmp
sti
jg
mov
sbb
inc
add
pop
imul
cmp
pop
cmovge
mov
sub
inc
out
cmp
add
xlat
xor
in
movsb
in
iret
movsb
scas
cmp
mov
jno
cs
pop
inc
js
and
push
dec
cmp
push
jle
add
cmc
mov
dec
mov
testb
mov
push
and
inc
test
jmp
gs
dec
in
dec
rcrl
out
arpl
ret
and
inc
mov
js
add
and
outsb
dec
inc
mov
pushw
xchg
push
fcmovb
pop
sub
jmp
pushf
testl
fs
test
enter
mov
lcall
inc
movsb
pusha
nop
push
test
sbb
lret
pushf
cli
enter
neg
movsb
sbb
test
add
and
lcall
xchg
movsb
movsb
push
lods
inc
enter
shlb
pop
inc
inc
cmpsl
xor
fdiv
or
jg
lock
iret
add
jmp
or
icebp
dec
dec
sub
or
mov
mov
push
add
add
je
sarb
add
or
loopne
mov
pop
movsb
push
repz
adc
iret
mov
aam
fdiv
rorb
fisttpll
jle
push
sub
arpl
jl
xchg
iret
std
add
and
aad
pusha
mov
bound
int3
lock
scas
pusha
in
jns
imul
in
xchg
inc
lods
pop
in
aaa
push
test
lea
xchg
sub
inc
sub
mov
mov
push
cmpsb
jl
xor
dec
mov
stos
sbb
adcb
fldcw
cmp
jae
outsl
add
add
inc
sbb
cmp
pop
push
jmp
jns
or
cmpsb
xor
negl
jl
jmp
imul
dec
add
in
imul
push
in
test
cmp
push
mov
or
loopne
pop
jae
mov
adcl
outsl
sub
mov
mov
mov
add
inc
aas
imul
ret
stos
in
fsubrs
movb
inc
mov
adc
popa
pop
out
inc
push
sub
add
cmp
lods
inc
stos
daa
inc
inc
mov
mov
add
insl
push
inc
xchg
outsl
bswap
jmp
fldl
push
les
shlb
or
xor
cmp
enter
mov
and
jae
clc
mov
arpl
jae
xchg
cmpl
loopne
cmc
lea
push
xchg
sahf
andl
dec
rcrl
push
cmpb
push
out
mov
xchg
arpl
jl
or
mov
ja
sbb
or
outsb
add
pop
xchg
add
add
icebp
pusha
and
pushf
dec
or
dec
and
jo
hlt
insl
test
lret
mov
popa
or
aas
insl
dec
fwait
and
in
imul
ficoml
insl
jmp
cmp
push
cmpsb
sub
fmuls
in
outsl
in
insl
shll
insl
push
pop
inc
push
cmpb
sub
adc
jmp
mul
add
dec
and
or
enter
movsb
movsb
orl
jmp
xchg
lahf
xlat
mov
daa
jg
push
arpl
sub
sbb
adc
sub
and
or
inc
xchg
inc
or
add
or
fwait
mov
push
mov
xchg
in
sbbb
je
jmp
ret
pop
test
pop
adc
cltd
lret
jo
lea
adc
stos
lea
jmp
mov
lods
mov
and
and
insl
xor
sub
sbb
or
jbe
pop
mov
orl
lock
popa
rcrb
and
loop
jbe
push
or
pushl
out
cld
in
jne
jmpw
ja
add
mov
ljmp
or
insb
adc
shll
xchg
mov
adc
pop
cmp
xor
jge
jg
add
pop
mov
and
imul
loope
sbb
cmp
and
fsts
adc
into
or
adc
jb
push
enter
jmp
adc
or
popf
imul
or
or
mov
mov
dec
outsl
insl
xchg
lods
dec
mov
push
dec
mov
cs
mov
mov
shr
and
cld
mov
or
add
or
xchg
add
add
sub
pop
adc
jg
std
pop
xchg
sbb
shll
dec
sbb
aaa
pusha
imul
enter
xchg
add
pop
or
push
outsb
jns
sbb
and
add
or
sub
cmp
jge
mov
repz
popa
sub
jl
lcall
xchg
push
jg
adc
imul
add
mov
pop
test
and
pop
fwait
dec
sbb
jno
icebp
outsb
inc
fcmovb
or
adc
cmp
mov
adc
inc
clc
push
enter
adc
mov
in
jp
push
jmp
sub
daa
movsb
nop
test
cmpsl
insl
inc
xchg
jp
jmp
pusha
lahf
cmpsl
stc
cmp
imul
aad
in
jl
out
insb
es
out
push
sub
push
ljmp
push
shlb
push
stos
pop
cmpsl
fsubs
add
add
add
push
jle
add
add
or
or
lahf
xor
push
movups
add
adc
adc
add
xor
fsubr
dec
insl
or
sbb
es
std
lahf
mov
cmp
in
rep
mov
jmp
repz
nop
in
loope
push
push
movl
mov
or
cltd
mov
movl
xor
insl
fdivrl
popa
in
ja
dec
mov
xor
fists
imul
rorl
sbb
adc
es
bound
and
sbb
arpl
add
push
push
inc
and
pop
in
jle
ss
or
adcl
push
imul
clc
xor
fwait
movsl
sbb
mov
icebp
or
add
push
add
add
movsb
ljmp
scas
or
cld
gs
mov
and
mov
push
xchg
push
cmp
xor
ja
push
and
add
std
dec
xchg
push
ja
loop
scas
movsb
int3
cmc
mov
sbb
and
rorl
inc
pop
sbb
loopne
testb
inc
insl
jmp
cmp
jmp
inc
sub
rol
or
jnp
jp
jb
xchg
out
das
fs
jno
nop
in
ret
int3
push
rorb
add
jns
xor
adc
add
push
push
stos
cs
jbe
dec
dec
dec
fcomp
fcoms
loope
dec
aam
dec
fwait
ss
rolb
jl
xchg
rclb
js
cltd
pop
mov
dec
or
push
add
ds
add
aas
mov
test
sub
push
xorb
cmpl
ds
mov
popf
pop
jbe
xor
shll
das
aam
test
lock
rorl
lods
add
call
mov
roll
and
imul
stos
call
jecxz
pop
inc
adc
and
cmp
mov
push
jne
or
lods
add
adc
dec
daa
jae
or
icebp
daa
jne
sub
add
daa
sbb
push
cmpsb
aaa
sbb
mov
push
xlat
cmp
sub
xor
mov
pop
adc
or
lods
sbb
daa
or
jo
dec
hlt
shll
lock
dec
mov
rcrb
cmp
mov
das
and
or
dec
xor
fisubrl
sbb
repnz
jle
icebp
stc
sahf
out
notb
movsl
int3
push
cmp
les
add
add
or
add
add
add
push
pop
or
or
fsub
push
out
jns
iret
in
adc
adc
adc
xor
addb
cmpsl
imul
pop
cmp
jle
pop
add
and
xor
out
jmp
pusha
scas
aam
mov
lea
gs
dec
lcall
adcb
sub
dec
imul
test
and
push
or
popa
test
roll
fneni(8087
push
sbb
xor
fildl
arpl
icebp
sub
cmpb
imul
sbb
clc
lock
and
add
cmc
je
pop
add
sub
into
loope
lahf
sub
mov
mov
addb
int3
mull
mov
ret
push
addr16
or
jno
out
dec
lea
je
das
mov
pop
js
ja
cs
sahf
pop
xor
stos
mov
xchg
pop
and
push
das
add
iret
arpl
cmp
inc
mov
call
cwtl
mov
push
xchg
rcrl
push
adc
mov
add
mov
xchg
mov
jmp
ret
testl
mov
adc
xchg
or
add
cmp
dec
repnz
inc
sbb
xor
push
fistpl
sub
aam
mov
xorb
pop
jo
fcomp
xchg
pop
push
push
cmp
xchg
aad
inc
scas
and
add
test
push
and
adc
test
faddl
dec
pop
adc
mov
push
inc
les
ror
lret
mov
or
jmp
inc
push
subb
mov
fcompl
push
lahf
adc
mov
add
mov
lcall
or
dec
or
cmp
mov
lcall
stos
dec
sub
or
insb
inc
ret
pushl
inc
cmp
sbb
and
roll
rcrb
or
sbb
sbb
aam
jmp
or
lock
jg
jmp
es
insl
or
mov
pop
fistl
sahf
lds
mov
push
xorb
notl
push
cmp
je
sub
decl
or
popf
jmp
imul
test
jmp
mov
or
mov
mov
mov
jge
aas
xchg
push
es
mov
js
sbb
mov
cmp
ja
add
cmp
adc
out
jne
rolb
xlat
xor
adc
mov
jb
in
push
and
adc
filds
addl
lret
or
scas
xor
add
fdivs
push
loope
imul
lcallw
je
jmp
add
push
in
and
push
mov
push
insb
adc
adc
mov
shlb
or
add
test
loope
push
addl
inc
cmp
rcll
icebp
push
lea
cwtl
sub
add
jg
add
pop
in
cmp
aaa
add
lock
shr
mov
shlb
adc
mov
std
rcrb
adc
adc
xor
lods
nop
addb
push
aam
cmp
es
movsl
and
js
loopne
daa
loope
insb
push
sarl
loopne
imul
rclb
fdivp
jge
stos
and
divps
push
or
icebp
cmp
aam
push
xchg
stc
insl
add
xor
dec
jnp
sub
repnz
rclb
in
cmp
or
add
js
and
cmp
jl
rorb
out
or
jl
lods
jmp
push
jbe,pn
insl
sub
mov
loope
and
rcl
sbb
fstps
xor
mov
xor
scas
xchg
or
notl
in
cmp
pushf
in
or
dec
add
loop
dec
add
or
dec
xor
int3
xor
sbb
repz
or
mov
pop
repnz
and
enter
and
adcb
lea
rorb
add
mov
scas
test
adc
xchg
push
mov
stos
add
sbb
shlb
out
lock
fcomps
push
data16
decl
ljmp
and
popa
bound
insl
xchg
jno
addl
sar
in
jmp
pop
dec
leave
jg
xchg
test
jge
push
in
push
jecxz
cmpsl
xstore-rng
cmpsl
inc
mov
sbb
and
jmp
cwtl
in
or
sbb
jecxz
adc
lea
add
or
pusha
out
pushl
cmp
repnz
push
xor
mov
mov
pop
sbb
jnp
push
xchg
add
sbb
scas
repnz
addr16
rorb
xchg
shl
shlb
xor
aam
cmpsl
or
lods
and
cmp
jmp
jb
repnz
out
lock
dec
sub
lahf
popa
cld
mov
sbb
adc
xor
jnp
pop
ret
adc
sub
int3
sarl
push
sub
aam
lahf
jbe
add
push
lret
mov
sbb
call
movsb
xlat
jo,pt
and
adc
or
fxtract
sbb
repnz
sub
lock
push
lock
call
outsl
popa
xor
call
add
mov
das
push
add
push
add
and
ds
mov
xchg
xor
pop
insl
or
inc
push
pop
cmp
lahf
or
add
adc
xor
or
jle
add
dec
movsb
nop
cs
leave
inc
idivb
push
cmpl
les
addr16
push
or
imul
sub
adc
sarb
push
mov
sti
popf
movsb
xor
sub
add
jo
pop
mov
insl
xlat
mov
ja
sbb
adc
loopne
insl
pop
lea
adc
cmp
push
push
aas
push
ret
sbb
shlb
jo
adc
aas
and
imul
or
xchg
pop
sbb
lahf
lea
or
sub
inc
imul
notl
pushf
pop
or
movsl
loope
movsb
arpl
mov
jno
dec
xor
lret
call
sbb
mov
ss
mov
sub
add
imul
jne
jne
sbb
inc
sub
xchg
inc
jmp
and
dec
loopne
shrb
cmp
loope
xor
popa
pop
leave
pop
jl
xchg
cmp
mov
sub
fimuls
xor
insb
je
mov
imul
mov
enter
jne
andl
popf
rorb
scas
xor
outsl
imul
inc
push
adc
sub
loopne
outsb
xor
fsubl
insl
sub
lret
jmp
je
outsl
test
mov
or
xorl
pop
pop
fnstsw
dec
fs
xchg
ljmp
shrb
sbb
loope
shll
mov
or
repz
jp
data16
in
aas
push
dec
stc
mov
push
jb
and
std
sbb
dec
push
jmp
inc
dec
mov
mov
in
adc
inc
bound
repnz
sbb
push
adc
adc
and
push
add
pop
mov
mov
adc
movsl
inc
adc
or
ds
pusha
clc
push
adc
popa
inc
add
mov
xor
pop
jl
cli
or
jmp
out
jl
sbb
jle
mov
sub
sbb
lods
jge
add
dec
jmp
jns
push
xor
jg
cs
sarb
popa
inc
xchg
pop
inc
pop
imul
jbe
add
outsl
daa
push
lods
inc
loopne
leave
fdivl
movsl
mov
pop
mov
jo
int
xchg
cmp
shlb
push
add
mov
push
cmp
pop
rclb
hlt
push
outsb
addr16
sbb
test
sti
pop
call
sub
insl
pop
xor
test
cli
add
repz
or
xchg
push
and
les
test
inc
mov
imul
add
or
mul
xor
lcall
mov
fdivrl
and
leave
pop
addr16
push
add
test
inc
push
dec
pushf
mov
mov
pop
movsl
xor
pop
sbb
sarb
dec
in
fcom
or
mov
push
xor
clc
and
push
mov
mov
cmp
add
sbb
xor
push
jp
int3
fisttpll
cld
cld
shlb
test
and
jnp
out
shrb
or
fimuls
inc
add
data16
gs
sbb
ficoml
scas
sti
mov
sub
shll
shll
dec
mov
cltd
push
sti
imul
in
jl
inc
jecxz
loope
push
mov
pop
dec
dec
dec
adc
decb
mov
movsl
inc
mov
fsubl
mov
mov
sbb
or
decb
jo
push
and
sbb
sub
inc
pop
dec
pop
mov
in
lock
push
popa
sbbb
cmp
lret
xchg
push
xor
mov
mov
and
or
nop
andl
fisubrs
xchg
add
imul
adc
in
jb
xchg
xor
std
xchg
or
push
inc
jno
xchg
loop
mov
adc
adc
popa
add
popa
aaa
xchg
je
or
movsl
mov
ds
loope
mov
cwtl
movsb
push
add
push
divl
xor
shr
sbb
insb
insb
cmp
cltd
jp
je
outsb
test
or
jb
int3
rolb
jp
dec
xor
bound
jbe
sbb
aad
adc
mov
mov
mov
xor
rcrb
cmp
inc
or
or
clc
or
jg
test
cmp
cmp
jmp
and
or
ret
mov
sbb
jecxz
mov
or
xchg
adc
out
mov
repnz
push
addr16
cmp
jl
ret
inc
inc
leave
mov
push
std
hlt
clc
pushf
adc
adc
and
dec
push
pminub
movsl
hlt
add
xor
mov
push
enter
mov
add
inc
fisubs
xchg
xchg
inc
sub
nop
scas
aas
add
add
push
sbb
mov
xor
sbb
xor
ljmp
push
fistpll
push
cli
icebp
add
and
je
xor
or
loopne
stos
fldt
push
jnp
cltd
movsb
insl
add
add
or
jne
jb
lock
sbb
jne
jge
sub
lahf
pop
add
dec
xchg
mov
mov
and
adc
mov
fcmovb
add
xchg
mov
mov
sbb
fwait
sbb
inc
negb
xor
inc
insb
sub
jl,pt
addb
and
add
cmp
jg
jmp
xchg
add
cmpsb
test
or
cmpsb
insl
pop
inc
mov
or
dec
imul
lock
mov
mov
inc
lock
mov
mov
pop
inc
jp
pop
mov
movb
sarl
sbb
inc
jo
push
cmp
dec
jae
nop
loopne
mov
add
pusha
sti
adc
lahf
inc
xor
fcoms
sbb
je
xor
xchg
xchg
inc
or
xor
or
aas
add
push
pop
jle
or
push
push
dec
inc
jge
ret
cmp
call
add
xor
shrb
orl
mov
out
cmp
adc
or
pop
bound
loopne
out
mov
or
xchg
popa
inc
jp
cmc
jge
aaa
push
add
pusha
sub
negl
xlat
jle
xchg
add
cmp
cmp
clc
add
inc
inc
and
rorl
loopne
inc
dec
icebp
wrmsr
xchg
ret
adc
xchg
or
stos
pop
push
push
gs
dec
in
adc
push
or
lea
add
movsb
loopne
push
push
add
sarb
jbe
fbld
mov
inc
lods
in
dec
popf
les
sub
add
mov
movsl
stc
mov
out
rorl
inc
cmc
pop
mov
xor
out
mov
xor
sbb
push
add
aaa
cltd
or
push
fs
xor
sub
pop
shlb
mov
pusha
dec
add
loopne
insb
arpl
mov
and
xchg
dec
lock
nop
cwtl
pop
call
add
imul
or
das
sub
mov
and
popf
aaa
mov
add
add
shrb
jmp
pop
lret
or
pushl
sub
or
or
rcrl
add
or
jmp
push
lock
push
in
add
jnp
mov
movsb
int
das
jno
ret
lcall
mov
xchg
inc
sub
add
push
add
clc
cmp
popf
mov
sbb
mov
and
movl
dec
popa
push
push
xor
xchg
jl
cmp
pop
mov
push
outsl
push
sub
adc
sahf
sbb
mov
loop
or
xchg
jbe
pusha
or
adc
lea
ds
xor
imul
xchg
xor
push
or
and
cmp
and
and
jb
pop
cs
inc
dec
cs
lret
in
push
push
pop
pop
in
mov
insb
pop
cs
lret
jo
js
or
jb
test
cs
xchg
cwtl
pushf
mov
jb
lods
mov
mov
mov
xchg
lret
in
rcl
fcomp
in
mov
in
pop
cs
lret
lock
clc
cld
add
in
mov
adc
lret
adc
sbb
and
in
mov
mov
cmp
inc
dec
xchg
lret
in
dec
push
push
pop
pop
jb
pop
cs
fs
in
je
jl
in
mov
nop
pop
cs
lret
xchg
cwtl
pushf
mov
mov
mov
mov
lret
in
int3
rcl
fcomp
jb
pop
loopne,pn
call
in
hlt
clc
cld
add
mov
or
cs
lret
in
sbb
and
jae
pop
sub
das
and
mov
xor
or
pusha
add
xchg
jg
xlat
add
sub
xor
jne
pusha
cmp
push
pop
or
push
add
fcoms
pop
jns
iret
dec
gs
or
or
in
or
xor
mov
cmc
xor
test
hlt
sbb
inc
adc
inc
inc
mov
mov
add
cmp
mov
push
ja
rcrl
xor
test
fwait
pop
push
out
and
dec
cmp
adc
xor
cmp
je
lea
sub
add
add
mov
inc
es
add
xor
adc
or
or
push
mov
mov
insb
add
mov
jl
or
jns
orl
jmp
pop
pop
ret
and
test
popa
fstps
lahf
adc
popa
cmp
add
mov
dec
test
push
push
nop/reserved
xor
sub
jbe
data16
sbb
in
push
adc
inc
adcb
lahf
xchg
daa
adc
nop
dec
fmuls
cmpsl
mov
dec
mov
add
inc
add
dec
cmpsl
lahf
pop
sarb
mov
stc
mov
lahf
lea
inc
sub
or
xchg
xor
xchg
push
leave
loopne
sarb
enter
in
add
add
out
movsl
call
pop
out
hlt
in
and
and
adc
mov
dec
pop
cwtl
mov
push
pop
pop
aas
arpl
scas
or
pop
jmp
cmp
push
cmp
sub
sarl
enter
sahf
les
push
aaa
daa
xor
loop
outsl
aam
adc
cmp
push
add
aam
fcmovnb
cmp
push
jno
adc
cmpsb
and
lcall
cmp
orb
sub
shrb
dec
pop
or
pop
mov
jno
mov
push
pusha
fsts
push
dec
sbb
or
push
aaa
xor
lock
and
mov
pop
mov
xchg
add
incl
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
sub
mov
sbb
pushl
repz
test
ficompl
jmp
mov
hlt
movl
ljmp
jp
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
ljmp
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
pushl
fildl
mov
xor
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
add
and
or
adc
stos
sbb
data16
inc
fdivl
jno
fildl
mov
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
call
ret
xchg
sbb
push
sub
insb
fs
incl
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
cmp
call
pmaddwd
fnstenv
adc
mov
mov
bound
ficoml
incl
sti
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fdivr
ljmp
shll
jmp
outsb
xor
mov
sarb
add
in
lcall
or
cmp
add
daa
adc
or
and
incl
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
decl
mov
shlb
mov
lcall
mov
cmp
ljmp
rcrb
adcl
jae
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
jmp
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
out
mov
pop
aad
mov
call
xchg
shll
push
repnz
addr16
call
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
fbld
out
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
incl
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
dec
shlb
sbb
ret
es
pushf
mov
insl
add
pushl
push
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
clc
jmp
mov
outsl
ja
mov
out
cli
jo
decl
int3
lret
pop
or
adc
sahf
gs
clc
sar
imul
lcall
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
push
enter
xchg
sbb
mov
lret
mov
call
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
cli
lcall
sub
aaa
mov
or
sbb
add
sub
jg
aas
outsw
jb
popa
je
and
dec
and
jb
outsb
je
arpl
idivb
jae
popa
outsb
xor
sti
imul
outsl
fs
pop
push
sub
pop
xor
sub
push
xchg
fbstp
imul
outsb
xorb
lcall
data16
ljmp
gs
insl
imul
imul
push
mov
dec
mov
push
inc
and
inc
jb
and
mov
cmp
insl
gs
or
and
lcall
aaa
lods
lret
fs
je
jo
pop
fildl
dec
lcall
imul
push
jns
gs
and
jnp
push
in
outsl
outsl
imul
mov
jb
inc
sti
pop
mov
and
adc
addl
outsl
bound
fdivs
testl
je
sbb
sub
daa
ss
js
inc
imul
jo
add
sbb
dec
popa
xor
sahf
push
gs
sub
sbb
das
mov
es
dec
gs
xlat
inc
dec
dec
inc
dec
mov
arpl
sub
sub
cmp
rolb
mov
pusha
inc
das
jbe
add
sbb
sarl
inc
mov
fidivrl
icebp
inc
insb
push
jno
jl
mov
mov
add
dec
jae
sbbb
pop
das
dec
cs
outsl
pop
gs
rcl
xor
mov
inc
mov
or
sahf
popa
jb
fisubs
ljmp
jbe
aaa
test
sub
push
sub
add
insl
push
sbb
fs
sub
fcompl
cmpsl
cmp
aas
mov
test
xchg
incl
inc
inc
inc
add
insb
push
fbld
and
xor
xor
fcmovbe
imul
or
push
and
pop
dec
push
pop
push
inc
and
xor
repz
subl
gs
inc
lcall
xor
loopne
stos
sub
js
push
sub
insl
mov
gs
jae
cmp
push
push
sbbl
sub
push
js
or
and
loopne
push
inc
decb
add
fildl
lahf
mov
and
imul
xor
ja
js
ret
pop
pusha
push
and
pop
dec
inc
inc
push
inc
inc
inc
push
push
push
inc
leave
adc
mov
inc
dec
inc
pop
lods
sub
dec
xlat
inc
inc
inc
insb
push
sub
cmp
inc
add
scas
shll
out
in
loope
dec
pop
std
jmp
jecxz
sbb
or
fisttps
imul
dec
mov
aaa
sti
dec
bound
shlb
arpl
inc
xorl
cs
arpl
lds
das
loop
bound
inc
js
test
outsb
xlat
insl
inc
in
arpl
arpl
mov
jnp
aam
add
jmp
out
and
push
and
mov
sbb
nop
pusha
outsl
scas
int
dec
fs
jbe
and
cmp
test
in
and
push
cs
jl
xor
jmp
fwait
push
mov
xor
insb
cmp
or
add
xchg
xor
scas
test
bound
jae
inc
in
insb
add
fimull
inc
inc
data16
testb
lcall
arpl
sbb
and
imul
int
mov
sub
scas
arpl
fs
fcmovnbe
sbb
jp
into
jae
mov
adcl
sub
ds
mov
aad
pop
data16
mov
jne
add
adc
add
add
add
add
xor
sarb
push
pop
pop
or
aaa
xor
push
push
pop
or
and
add
pusha
push
xor
mov
sub
add
sbb
fstpl
jne
insb
add
pop
fsubs
adc
je
add
inc
cwtl
adc
sub
inc
jae
mov
add
loope
mov
outsb
sub
lock
fmuls
lahf
or
daa
mov
xchg
lods
pusha
xchg
push
gs
ret
or
inc
jecxz
xor
fadds
and
push
andb
fisubs
and
lret
jnp
test
aad
sub
dec
mov
ja,pn
push
jne
xor
cs
outsb
andb
imul
push
push
pop
push
insb
jne
inc
sub
ss
adc
addr16
jb
rcr
mov
or
push
pop
sub
imul
lds
inc
sub
aad
or
mov
mov
dec
jo
ja
push
and
xor
jns
or
mov
dec
hlt
push
popa
adc
cmp
rcrl
punpcklbw
jo
pop
inc
xor
rcr
add
inc
push
inc
aaa
adc
sahf
shl
push
jo
dec
shrb
jo
and
push
sbb
xchg
and
popa
cmp
xchg
or
inc
mov
insl
and
fs
insl
push
out
add
cmp
outsb
ljmp
pushl
test
and
insl
lds
popa
imul
stos
cmp
pop
xchg
bound
mov
mov
imul
or
jae
aas
pop
loop
push
into
xorb
sbb
dec
js
xor
lds
adc
jae
arpl
mov
xchg
je
popa
adc
aaa
idivb
dec
inc
push
dec
inc
dec
xor
cltd
mov
xlat
sub
add
fbstp
dec
adc
pop
mov
pop
ret
inc
push
dec
dec
inc
cmovle
dec
das
push
fldl
pop
dec
dec
dec
inc
push
inc
push
pop
inc
add
pop
ja
pop
dec
dec
dec
inc
push
inc
inc
jecxz
rolb
add
adc
lds
inc
push
sub
clts
cmp
aas
pop
mov
jbe
push
bnd
add
jle
popa
pop
sub
imul
add
lret
mov
or
push
push
and
add
dec
inc
fimuls
inc
and
push
in
cmpsl
and
xor
cmp
sub
call
sarb
cmp
aaa
je,pt
jb
int3
jp
lock
popa
mov
push
inc
bound
or
ret
pop
mov
xor
addb
bound
adc
mov
mov
mov
das
mov
and
mov
faddl
outsl
push
or
and
lcall
xor
je
insl
or
bound
int
push
int
das
mov
loope
imul
and
mov
sbb
pop
xor
lahf
into
lret
push
and
or
push
cmp
popa
jmp
xor
outsl
fdivl
adc
pop
xchg
jne
je
adc
fs
xlat
push
pusha
mov
add
fucomp
cmovge
lret
mov
shrb
inc
iret
inc
sub
inc
arpl
in
lods
cmp
daa
pop
push
push
fs
add
inc
outsl
js
scas
push
stos
insb
add
push
xor
inc
pop
mov
shrl
and
pop
jno
xchg
push
cmpsb
data16
inc
outsl
sub
dec
jns
pop
int3
jo
mov
das
insl
mov
pusha
jns,pn
push
out
aad
andl
push
pop
adc
addb
mov
repz
xchg
dec
push
gs
push
and
add
mov
push
cmp
jne
sbb
es
mov
out
cmpsb
bound
mov
jb
mov
add
inc
out
adc
xchg
jl
xchg
mov
push
or
jp
sahf
push
jne
mov
mov
outsb
fs
es
push
les
loopne
dec
rclb
scas
jne
xchg
push
push
inc
pop
insb
inc
daa
mov
inc
sbb
inc
gs
imul
fmuls
mov
jae
mull
inc
xchg
or
loop
or
mov
pushf
outsb
sahf
loopne
pcmpgtw
inc
mov
xchg
cmpsb
imul
call
inc
pop
push
ret
dec
rcrl
ret
pop
imul
push
sub
fs
outsl
cmp
inc
outsl
out
pop
pop
jb
jo
cmpsl
aaa
and
test
xchg
push
jbe
mov
test
fildl
outsl
sub
jnp
dec
and
and
push
adc
shl
gs
popa
push
mov
daa
addr16
test
cmp
arpl
sub
int3
push
dec
cmpsl
cmp
mov
adc
add
pusha
xor
jno
sbb
iret
sub
sub
cmpsl
daa
jne
pop
mov
and
aas
dec
pop
rcr
pop
mov
sti
lcall
pop
dec
inc
int3
arpl
jecxz
mov
pop
adc
or
pop
cs
push
add
daa
mov
addb
sbb
mov
scas
pop
fs
ds
fwait
jg
das
jb
scas
mov
daa
addr16
out
roll
lock
pop
cmp
xchg
aam
rcrb
jp
dec
outsb
xlat
jo
sub
sbb
jns
pusha
xorl
jae
daa
mov
addr16
xlat
xchg
sub
lahf
aam
sbb
sti
add
push
imul
cmp
add
jo
push
mov
js
daa
popa
jge
sbb
xlat
pop
daa
mov
out
arpl
in
sbb
pop
sub
cmpsb
and
imul
sub
test
jecxz
sub
push
cmp
mov
pop
fisubrl
cmpsb
cmp
outsb
pop
jbe
sbb
xor
aaa
or
sub
add
dec
sub
pop
jl
dec
daa
jae
popa
lock
cmp
daa
mov
inc
shrb
fisttpll
sbb
clts
lcall
or
sub
sub
mov
std
daa
and
sbb
pop
dec
inc
push
add
mov
adc
and
aaa
repnz
dec
inc
dec
cmovns
add
sti
clc
dec
cmp
cmp
add
dec
and
jns
imul
add
push
inc
inc
push
mov
test
outsl
jbe
dec
arpl
jmp
cli
je
inc
mov
fwait
loopne
mov
dec
jne
orb
gs
je
test
mov
dec
xchg
inc
test
inc
into
cmp
movsb
adc
xchg
cmp
sahf
jae
xchg
xchg
int3
fnsave
int3
addr16
push
xor
std
adc
jae
push
inc
clc
sbb
out
xor
dec
and
into
cmp
ja
pop
dec
inc
sub
out
insl
negl
bound
jns
out
cmp
std
pop
cli
inc
add
outsb
pop
out
out
out
jl
cwtl
cmpsb
mov
xor
or
insb
jp
xchg
push
add
movsb
mov
into
fmull
stc
out
jp
std
mov
xchg
enter
int
inc
add
push
pop
movb
jae
pcmpeqw
ja
pushf
or
xchg
jo
mov
pop
shlb
cmp
jae
sbb
inc
aas
xor
fadds
add
fneni(8087
ficomps
shrl
pop
jae
cmp
xor
cmp
cmovo
inc
fstl
inc
sbb
lock
inc
xlat
addb
ja
cmpsb
stos
xor
mov
xchg
lret
out
addb
es
jbe
add
push
imul
enter
mov
lret
scas
inc
pop
out
xchg
push
jo
adc
push
ja
cmpsb
in
mov
repnz
push
inc
add
cltd
jge
mov
jbe
dec
lods
ja
ja
jl
enter
adc
dec
in
adc
inc
ja
jae
jno
fs
dec
push
push
push
dec
cltd
add
sub
insb
xor
inc
push
fstps
and
in
xor
mov
outsl
outsl
insl
jns
adc
enter
or
fwait
insb
jae
push
insb
sub
pop
mov
jo
imul
iret
adc
jne
outsb
jo
xor
dec
fbstp
in
mov
or
lahf
add
push
in
lahf
inc
adc
cs
enter
out
mov
call
dec
adc
adc
repz
pop
sub
imul
xor
push
dec
adc
xchg
inc
mov
test
jle
adc
cmp
push
pop
cmp
insl
add
inc
inc
dec
pop
cmp
pop
mov
outsl
lods
push
mov
jae
arpl
add
and
sbb
push
lea
adc
xor
ja
jne
jb
xor
in
xchg
push
cmp
das
push
sahf
aaa
addr16
mov
push
inc
push
sbb
mov
push
gs
push
dec
mov
add
dec
shrb
adc
dec
jnp
add
sbb
jg
jge
xchg
sub
mov
fs
dec
push
lret
inc
fldcw
outsb
sbbb
pop
cmp
inc
mov
push
ret
jb
and
rol
sbb
or
mov
sub
push
pop
shrb
xchg
pushf
mov
sub
and
das
and
in
or
mov
mov
pop
mov
pop
dec
lds
loope
movntps
notb
cs
mov
pop
add
jae
inc
cmp
arpl
add
or
lods
rclb
sbb
ja
mov
jns
addr16
std
fildll
mov
and
push
jne
sub
mov
in
adc
je
mov
rorb
jle
pop
sub
scas
popf
int
add
xchg
cmp
std
mov
jg
outsl
addr16
cld
decb
push
jb
nop
pop
xchg
pop
mov
outsb
pop
push
outsl
out
add
sbb
bound
push
push
sahf
out
out
fldl
int3
inc
pmuludq
scas
jg
ficomps
inc
incl
xor
or
sub
sub
pushl
sub
das
xor
sbb
in
lock
outsb
cmpsb
stos
push
das
das
gs
xchg
push
mov
cmp
pusha
pop
dec
push
push
dec
inc
pop
add
insb
xor
pop
nop
xor
in
mov
push
or
das
and
repnz
repnz
test
pushf
rol
fwait
pop
repnz
cld
adc
pop
sahf
addr16
ss
push
xchg
pushf
in
sahf
dec
add
ss
or
pop
inc
pop
iret
test
pop
nop
cwtl
mov
stc
iret
test
call
and
test
insb
iret
test
cmpb
dec
jae
ds
push
iret
jae
mov
cmpsl
jns
bound
enter
fcoms
arpl
arpl
pop
js
shl
or
cmp
xor
fs
test
loopne
divb
mov
sub
dec
gs
das
das
in
cs
hlt
sbb
or
xor
dec
pop
mov
jns
out
das
cwtl
mov
fdivrs
and
push
shrb
push
jae
mov
cltd
nop
int
or
sub
xor
pop
out
nop
out
jl
mov
call
imul
sub
cmp
cmp
test
nop
int3
fcomp
jmp
stos
push
adc
and
dec
push
push
cmp
leave
jnp
js,pn
movsb
mov
iret
leave
repz
hlt
sbb
and
into
repz
add
push
xor
xchg
lods
cld
jbe
push
add
daa
mov
push
gs
addr16
fimuls
inc
dec
mov
inc
and
imul
ss
jne
aam
jns
insl
jae
push
sub
cli
sahf
push
pop
addr16
jne
cmp
inc
rclb
add
adc
in
arpl
clc
ss
dec
or
dec
imul
ja
addr16
outsl
push
outsl
outsl
inc
pop
dec
push
add
add
in
lock
cmp
jae
inc
xor
lods
jmpw
pop
jns
icebp
imul
push
inc
xor
xor
push
dec
inc
dec
outsl
inc
je
xor
dec
shlb
sbb
and
dec
imul
and
xlat
add
jg
jp
shll
test
mov
insb
into
shlb
push
add
dec
inc
outsb
jo
movsl
imul
add
push
pop
mov
push
bound
cs
push
inc
shlb
mov
fcmovne
mov
and
cmp
dec
inc
subb
sub
outsb
or
push
xor
add
jns
or
stc
and
jo
push
xor
xor
dec
gs
addb
in
insb
leave
push
in
sbb
inc
cmpsl
xor
mov
and
mov
outsl
sub
outsb
pushf
mov
cmpl
and
int
je
inc
cs
mov
bound
pop
jl
xor
mov
pop
mov
push
xchg
inc
inc
dec
inc
mov
lods
jecxz
pop
inc
outsb
je
fldenv
xor
add
fnstenv
sub
xchg
lock
mov
outsl
popa
mov
insl
enter
dec
add
dec
push
xor
add
sub
mov
and
or
data16
jecxz
dec
insl
sti
push
push
dec
dec
jecxz
pop
mov
shrl
push
or
pusha
fldt
xor
add
xor
mov
ss
sub
xchg
insl
insl
pop
addr16
outsb
push
jb
add
xor
lret
push
sub
pop
or
dec
dec
or
cmpsb
pop
sub
pop
adc
hlt
jne
adcb
mov
es
fisttpl
fstpt
cmp
sbb
sarb
sub
outsl
lahf
aam
push
push
mov
bound
push
das
xor
add
lahf
dec
out
dec
pop
es
push
pop
sarb
imul
push
fcomps
dec
push
pusha
sbb
iret
mov
add
out
aad
inc
cmp
pop
test
jp
sbb
add
lcall
add
add
mov
inc
mov
loopne
jne
ret
imul
push
sub
push
shlb
inc
outsb
lods
cmp
in
push
sub
addr16
jg
mov
popa
stos
or
in
sbb
inc
std
iret
push
sub
insl
fidivrl
push
cmp
inc
js
nop
cmp
adc
inc
inc
sub
pop
mov
popa
scas
and
jg
cmp
dec
dec
dec
sbb
cmp
and
jg
add
xchg
xor
popa
adc
jb
push
popa
arpl
mov
lahf
xor
and
lock
push
inc
push
inc
dec
push
dec
dec
inc
dec
inc
aaa
adc
mov
inc
push
imul
dec
add
imul
ja
outsl
lret
push
xor
cmp
repz
aad
dec
push
xchg
push
pop
mov
dec
cmpb
mov
dec
dec
pop
xchg
and
sbb
sbb
jecxz
pop
sbb
add
les
aam
add
pop
loop
mov
and
or
cmpsb
mov
jbe
inc
add
inc
dec
lock
add
clc
aaa
loope
adc
push
imul
stos
test
je
inc
push
and
or
jbe
inc
mov
adc
add
sbb
ficomps
pop
xor
lock
fisubrs
insl
je
ja
insl
adc
data16
jo
bound
mov
push
cmovle
push
inc
daa
push
pushf
ret
dec
fs
adc
ret
daa
loopne
inc
into
lods
divl
arpl
xchg
inc
sbb
insb
inc
add
cmp
popa
aaa
push
xor
xchg
fs
push
cwtl
adc
xlat
andb
dec
pop
gs
or
add
lock
out
xor
dec
add
call
into
rcrl
fs
and
cmpsb
or
into
push
sub
daa
mov
jg
dec
bound
adc
ret
cmc
sub
or
xor
rol
jg
mov
dec
pop
mov
or
test
add
cltd
cwtl
ljmp
cltd
cltd
ret
and
adc
test
fsts
movsl
lcall
jg
out
lcall
iret
into
enter
imul
shrb
xchg
rol
mov
fdivrl
push
adc
mov
lcall
sbb
pop
js
sbb
adc
arpl
outsb
sbb
adc
lcall
in
cltd
sbb
ret
shl
popf
and
ljmp
out
leave
add
cwtl
repz
sub
pop
sahf
fwait
cltd
sahf
and
pop
adc
popf
repz
addr16
mov
lret
xor
popa
leave
leave
sbb
adc
inc
lock
sti
outsl
xor
adc
fbld
fbstp
jg
adc
mov
iret
lret
lret
movsl
cli
hlt
std
and
jae
loopne
mov
leave
push
jno
xor
enter
ret
jg
shlb
ja
jno
addr16
in
leave
jmp
cli
fdivr
std
jmp
ljmp
lahf
repnz
clc
in
cld
sbb
cltd
fsub
lock
mov
outsl
std
aad
sti
jmp
jmp
xor
ljmp
fmul
cmp
in
jbe
xacquire
sti
lock
cmc
lock
jmp
in
cltd
sahf
dec
dec
int3
rolb
xchg
push
dec
dec
mov
clc
fidivl
mov
xor
jmp
push
das
add
orb
jne
out
and
mov
xor
addr16
lods
test
aaa
sti
jnp
jno
mov
cmp
fs
jo
xlat
push
daa
mov
xor
add
pop
push
fcmovne
jge
cmovle
add
push
xchg
clc
add
repz
fadd
mov
outsb
gs
jae
jb
inc
mov
ret
cmpsb
fisubrs
push
insl
popa
dec
imul
jg
outsb
and
jae
sti
inc
and
jo
xor
add
xor
xor
cmp
dec
and
lods
push
jp
jo
mov
dec
jp
sub
cs
add
cs
into
inc
pusha
int
xor
pop
fisttps
mov
subb
in
je
je
and
cmp
mov
pop
xor
ja
pop
aas
pop
inc
inc
xlat
rorb
les
jge
aas
jb
lcall
or
and
cmp
mov
gs
shlb
add
mov
inc
xchg
ret
stos
lea
inc
call
cmp
and
cmp
rorb
and
add
push
mov
cmp
outsl
jne
push
test
cmp
xlat
mov
push
push
mov
mov
sbb
jae
inc
js
add
mov
pop
test
push
xor
mov
aam
ja
sbb
dec
out
popa
sub
jae
dec
sti
push
fmulp
out
insl
loope
inc
roll
punpcklwd
add
add
add
out
jg
push
rclb
insb
dec
loope
add
mov
fldl
add
mov
lahf
call
dec
pusha
add
add
add
add
lock
xlat
xor
std
int3
inc
fs
mov
je
xchg
shlb
or
jl
aam
jg
add
sub
adc
outsb
jb
or
out
ret
jle,pt
push
inc
addr16
test
or
pusha
fimuls
ds
dec
push
add
ja
jnp
sarl
xchg
xor
sub
add
or
mov
add
enter
fdivrs
and
pop
les
int
fs
enter
int
out
stos
or
cmpsb
nop
or
out
pop
mov
pusha
push
pop
nop
inc
sub
sahf
and
xor
lods
dec
mov
and
add
in
or
mov
push
or
shll
js
or
vmptrld
jo
cwtl
xchg
cwtl
dec
rclb
test
scas
xor
xchg
iret
out
sbb
push
icebp
mov
out
sar
add
mov
orb
and
jmp
mov
jp
add
add
mov
or
fsubrs
or
add
inc
sarl
mov
fwait
adc
cs
cmp
cmpsb
pop
add
pop
sbb
subps
add
jbe
ret
xor
add
xor
jo
outsl
xor
arpl
and
leave
aas
js
sub
add
sub
mov
inc
fdivrl
test
iret
int3
loopne
jg
rcll
jmp
nop
add
push
faddl
adc
mov
xlat
mov
sub
jo
jo
sbb
lods
jo
sub
or
xor
pop
and
jmp
outsl
xchg
fisttps
or
xor
inc
cmpl
loop
testl
add
adc
sub
dec
inc
adc
test
pop
aaa
push
xor
xor
pop
sub
cwtl
add
jmp
and
xchg
mov
ja
mov
push
inc
add
cld
ja
jae
bound
inc
inc
outsl
dec
mov
sarl
outsl
fs
jae
arpl
pop
xchg
sbb
jns
pop
popa
arpl
insl
outsl
call
add
lcall
das
loop
dec
inc
inc
or
or
mov
sub
sbb
xchg
movsb
lcall
mov
int
sub
push
jo
or
dec
lods
mov
jle
ljmp
outsl
mov
and
pop
mov
inc
pop
inc
and
mov
outsl
sbb
cltd
fwait
cwtl
sbb
push
es
jnp
outsb
xcrypt-cfb
cmpsl
movsl
mov
subb
clc
dec
cmp
sbb
ljmp
rcrl
pop
gs
mov
sub
inc
dec
push
jno
pop
iret
mov
add
cmp
loopne
add
or
push
stc
fimull
sub
sets
psrad
ss
pop
int3
pop
xchg
jb
rcll
push
sbb
sub
xchg
jns
outsl
les
inc
ja
je
pop
lret
sub
adc
popa
jbe
jbe
ljmp
jbe
pop
jno
sub
into
insl
inc
xchg
mov
arpl
ds
jae
mov
xchg
pop
dec
pop
mov
jnp
inc
mov
xorl
pop
je
jl
test
inc
jns
dec
mov
jmp
rorb
je
inc
jmp
into
aam
inc
popl
jbe
sub
cmp
push
int3
aas
cmpsb
cmp
ss
inc
enter
pop
xchg
stos
jo
imul
inc
inc
cmp
push
lods
ds
add
dec
stc
pop
ja
cs
cmp
inc
push
inc
push
push
insb
and
les
movl
sub
mov
push
aaa
sub
int3
int3
push
push
adc
sub
inc
jb
push
das
jp
mov
out
int3
stos
mov
gs
imul
pop
ret
int
arpl
addr16
bound
cmp
inc
imul
cs
xchg
arpl
and
push
mov
jns
jo
xchg
jo
pop
xor
and
das
shrb
lcall
dec
push
inc
inc
or
scas
inc
les
add
scas
mov
dec
das
inc
filds
mov
ja
or
jge
adc
mov
fistps
jae
lcall
push
xchg
lret
adc
or
jmp
mov
sbb
stos
jns
imul
and
or
fs
cltd
lods
pusha
test
aad
lock
push
cwtl
popa
loopne
das
push
test
daa
jl
fwait
xor
je
add
and
mov
mov
icebp
pop
call
das
xor
xor
add
das
into
insl
jns
outsl
add
lods
inc
cwtl
inc
popa
insb
sub
cs
sub
arpl
sub
enter
xchg
fimull
push
sub
jo
ja
adc
jp
shl
xorb
sub
and
je
xor
jo
push
xchg
call
sub
inc
dec
push
or
adc
push
sub
xchg
ret
xor
imul
jne
insl
fstp
mov
loope
repnz
mov
dec
leave
or
imul
mov
add
adc
add
fcmove
stc
pop
jle
les
add
push
push
dec
push
pusha
inc
addl
push
cmp
outsb
jbe
inc
inc
add
dec
dec
adc
inc
inc
inc
inc
push
jecxz
push
dec
push
dec
inc
ds
or
and
pop
in
out
dec
inc
pop
push
mov
idiv
lods
push
inc
inc
push
cmp
sub
fmuls
mov
dec
inc
push
dec
cs
xor
and
insb
cmp
xchg
mov
shlb
inc
dec
sub
or
xchg
dec
adc
in
push
imul
das
and
add
pushf
push
push
inc
jbe
outsb
dec
push
mov
jg
rol
inc
and
or
es
mov
shrl
mov
out
xor
das
or
and
icebp
or
xor
inc
out
sub
xor
mov
mov
mov
and
das
push
push
xchg
fadd
aas
jae
jnp
mov
sub
and
mov
xor
repz
xor
add
xor
insb
xor
inc
nop
pusha
push
xor
leave
imul
popa
sbb
or
pop
insb
xlat
in
and
adc
in
movsb
sbb
flds
mov
or
dec
addl
out
sub
or
loopne
cli
rcll
clc
dec
imul
push
popa
pop
and
das
sub
into
inc
or
pop
cmp
outsb
add
fsubrs
addr16
sbb
ljmp
and
lahf
stc
push
cmp
lea
dec
mov
and
inc
insl
push
imul
xchg
xchg
push
addl
inc
sbb
push
pop
jmp
sub
xor
cmp
mov
and
pop
lods
and
mov
pop
and
or
dec
dec
push
addb
and
mov
adc
es
and
pop
inc
push
inc
pop
das
mov
xor
es
xor
sbb
jb
xor
in
jae
xor
xchg
lret
enter
jne
and
xchg
xchg
ss
aaa
ja
inc
inc
cmp
js
mov
mov
or
daa
jp
xor
or
and
in
in
add
xor
and
in
xorl
es
xor
jns
and
and
es
enter
pop
es
xchg
rcl
pop
pop
nop
mov
repnz
sub
mov
sub
pop
fs
in
sub
in
mov
outsb
sti
jb
les
daa
push
out
push
sbb
fistl
jecxz
adc
daa
push
in
clc
mov
aas
adc
insl
lds
adc
pop
aas
adc
movsl
or
mov
sbb
mov
adc
xchg
jge
inc
or
test
popa
popa
mov
sub
xchg
nop
mulb
xor
adc
ret
mov
mov
daa
dec
xor
add
mov
mov
insb
adc
daa
mov
push
sbb
and
fcomi
insl
adc
cli
rorb
pop
inc
adc
mov
aaa
adc
or
outsb
adc
iret
dec
adc
sahf
mov
inc
sahf
inc
inc
ds
mov
fcompl
jmp
pop
inc
push
push
dec
pop
fistps
cmp
or
xchg
dec
sub
push
push
std
push
push
sbb
dec
pop
aad
fnsave
pop
or
arpl
dec
inc
pop
or
mov
inc
push
push
pop
or
fdivl
pop
adcl
jbe
inc
xor
jae
or
inc
push
pop
or
pop
pop
mov
pop
inc
push
inc
dec
add
imul
pop
sub
or
rcll
outsl
or
xor
mov
sub
dec
cs
in
nop
xchg
xor
arpl
cmp
xor
in
xchg
inc
xor
cmp
addr16
push
or
xchg
xor
outsb
xchg
mov
fs
lahf
rcrb
inc
pop
mov
incb
ret
jp
fs
xor
test
or
mov
das
cltd
mov
add
cmp
and
mov
add
inc
xchg
incb
jo
or
pop
push
outsl
outsl
insb
adc
divb
popa
jo
mov
loopne
fildll
mov
into
add
pop
dec
out
inc
sub
sbbb
lahf
in
sub
js
push
in
and
xor
mov
addr16
adc
jge
and
mov
sub
dec
push
in
lods
mov
outsb
mov
xor
rorb
mulb
mov
dec
aam
mov
add
push
add
mov
rclb
push
mov
jae,pt
das
adc
lret
add
and
or
bound
fs
cmovae
arpl
ficompl
dec
notb
xor
inc
dec
lock
test
cmp
jbe
div
es
dec
test
inc
adc
pop
adc
adcb
js
addr16
xor
pop
mov
popf
and
fcoml
xchg
dec
inc
push
test
ficomps
adc
pop
ja
addr16
test
xchg
in
shlb
out
jne
insb
sub
cmp
dec
shlb
dec
cmp
mov
dec
or
jb
jbe
xchg
bound
push
shlb
insl
mov
call
iret
sbb
adc
cmp
pusha
add
sbb
adc
sub
inc
jo
add
sbb
out
int3
and
addr16
addl
mov
pop
lcall
bound
mov
add
add
jb
pusha
add
sbb
out
cmpsb
or
inc
insb
rol
fiadds
inc
loope
stos
xor
push
push
inc
push
xlat
inc
cltd
notb
pop
inc
pop
scas
pop
and
and
jae
insb
or
dec
ss
pop
jb
mov
in
pop
loopne
out
mov
cmpsl
mov
pop
sbb
sbb
jbe
pop
inc
inc
aam
adc
xchg
int
pop
dec
outsb
push
jb
out
out
cmp
add
fdivs
pop
push
jl
das
mov
outsl
xchg
jg
mov
addr16
ja
enter
pop
push
movsb
jge
bound
add
dec
and
jb
mov
add
add
pop
pop
rorl
mov
mov
xchg
sbb
xor
push
mov
jle
das
notl
xlat
les
andl
jg
pop
push
jb
outsl
jb
movsl
cmp
mov
and
outsl
adc
cmp
xor
rorb
xchg
es
sbb
dec
push
scas
pop
mov
mov
pop
push
lahf
add
sub
inc
pop
and
jmp
addb
pop
xchg
pop
pop
adc
aas
dec
test
dec
outsl
bound
inc
xchg
sbb
add
jo
imulb
inc
pop
pop
popa
pop
mov
fnstsw
rcrb
aaa
aad
mov
xchg
aam
sbb
inc
push
inc
and
shlb
push
and
sub
add
lret
jne
or
mov
mov
and
pop
push
fisubl
loopne
nop
fnsave
inc
daa
rorl
insb
push
inc
ret
dec
mov
push
pop
mov
inc
lahf
push
dec
jmp
outsl
pop
data16
bound
push
dec
insl
rcr
popf
pop
daa
push
jne
inc
imulb
xchg
adc
scas
pop
mov
fwait
inc
and
or
cmpsl
mov
lods
ret
ss
pop
push
pop
cmp
lea
fsubrl
pushf
add
push
loopne
sub
or
leave
and
jae
xor
fisubl
or
pop
addr16
fs
cmp
xor
xor
imul
pop
pop
incl
jmp
fidivl
dec
mov
xchg
bound
dec
jo
fbstp
xor
dec
aaa
adc
in
bound
imul
fimull
and
xor
repz
dec
pop
dec
and
jnp
dec
std
cmp
push
je
or
addb
pusha
icebp
sti
das
push
sbb
data16
adc
push
sbb
cs
mov
iretw
mov
flds
adc
std
mov
icebp
out
cwtl
icebp
fwait
cltd
popf
dec
adc
mov
lret
incl
icebp
insb
adc
test
movsl
mov
repz
pop
fnstsw
movsb
adc
mov
repz
aad
adc
int
enter
push
out
test
iret
popf
xchg
data16
lcall
fsubl
lcall
insb
stos
push
rcr
xor
pop
stos
inc
xchg
daa
mov
push
fisttps
cmp
jb
mov
adc
mov
lcall
test
lcall
or
add
xlat
xchg
jne
sub
pushf
push
jbe
jns
push
push
cmpsb
adc
incl
insb
xor
pusha
xor
jle
pop
loopne
iret
jge
or
inc
xchg
jg
test
xchg
and
shlb
dec
repnz
dec
imul
mov
pop
popf
jns
fwait
test
add
fcos
xlat
mov
loopne
rorl
inc
mov
daa
xlat
enter
in
enter
out
jge
adc
add
addr16
mov
cli
cmc
imul
mov
cltd
xchg
jo
daa
xchg
sbb
fildl
pop
add
and
ret
inc
push
dec
push
dec
and
dec
inc
movsb
and
xor
fisubrl
dec
inc
dec
dec
add
push
add
and
xlat
lock
mov
xor
xor
dec
inc
fwait
outsl
inc
imul
xor
test
xor
xor
pop
movsb
jae
in
push
jb
adc
or
inc
add
or
aam
imul
lods
add
xchg
orb
aaa
or
outsb
inc
ljmp
call
xchg
cmp
hlt
xor
jo
fwait
add
push
or
and
lahf
inc
ja
das
mov
push
adc
aas
mov
mov
sbbl
sbb
sar
sbb
scas
xor
ret
pop
fnstenv
inc
sbb
inc
ja
movb
lcall
add
cs
xor
cmpl
orb
add
add
push
sub
ss
adcl
or
pop
insb
mov
cmpsb
jo
push
mov
and
push
mov
neg
sbb
mov
pop
inc
mov
jne
inc
cmp
decl
mov
sub
cmp
rclb
fwait
test
rorb
cmc
dec
push
movsb
nop
add
hlt
enter
pusha
mov
xchg
sub
mov
add
rorb
clc
ret
setne
lahf
jl
inc
mov
jbe
aas
js
adc
stos
pop
cmpsb
jmp
clc
push
jns
decb
inc
inc
sub
aaa
or
or
fs
cltd
xchg
mov
jb
and
int
in
fcomps
add
setb
cmp
add
jo
insb
in
push
xor
xchg
loop
mov
add
pop
push
mov
or
mov
cld
add
outsb
cmp
pop
and
ret
pop
pop
add
pushf
xor
stc
outsl
xorl
popa
pushl
adc
arpl
fdivs
push
push
xor
add
mov
push
sbb
add
mov
clc
pop
call
in
imul
xchg
add
push
popa
std
insl
dec
push
sbb
movl
rorb
pushf
xor
push
mov
ds
ss
lock
ss
bound
fimull
or
jl
xor
push
adc
and
and
imul
pop
outsl
xor
mov
orb
sahf
and
pop
jae
arpl
and
arpl
iret
mov
add
mov
push
or
push
cmpsb
jl
adc
sbb
loope
cmp
add
cmp
inc
adc
ljmp
xchg
inc
pop
inc
inc
and
push
and
mov
ds
ret
push
add
inc
push
daa
add
inc
xchg
and
or
loope
pop
push
aam
xorl
add
aam
mov
cld
or
pop
dec
jae
pushf
cmp
pop
pusha
push
jo
addb
xor
iret
nop
add
jmp
inc
add
call
sub
sbb
sbb
mov
and
js
lods
pshufw
inc
push
adc
mov
pcmpgtb
shll
iret
pop
cmp
jae
cmp
adc
ja
in
adc
cmova
test
mov
pop
outsl
aas
and
pop
push
push
dec
mov
ret
and
dec
cli
dec
push
rorb
js
popf
jle
les
test
fidivl
adc
push
pop
jl
fsubrs
cmp
das
imul
push
mov
xchg
sbb
add
pop
bound
mov
stos
sub
shll
push
lock
insl
jne
mov
xor
mov
xchg
xorl
out
jo
data16
divl
cmp
mov
jae
sub
xchg
pop
ss
popa
mov
addl
sbb
push
adc
xchg
movsb
mov
jle
stos
pop
or
es
ret
fimull
loopne
cmpsb
lds
pop
js
lcall
lahf
filds
inc
daa
push
roll
xchg
or
lea
jo
cmp
cmp
dec
stos
push
enter
call
xor
push
add
inc
inc
fstl
add
insb
mov
arpl
outsl
pop
outsb
pop
pop
test
arpl
pop
mov
push
inc
icebp
mov
xor
testl
fmull
cs
or
in
jae
sbb
xor
mov
icebp
mov
push
or
mov
mov
daa
test
popf
cs
jecxz
test
xchg
add
adc
sbb
mov
jae
lret
add
cmp
pop
or
jo
cwtl
jne
push
insb
aad
fsubl
ja
xchg
jne
jmp
out
gs
pop
outsb
jo
cwtl
mov
add
adc
out
fcoms
push
jg
fldcw
sub
push
pop
sbb
sbb
lods
add
rclb
add
das
adc
push
add
pop
mov
fdivl
mov
popa
add
es
test
int3
dec
or
adc
pop
pop
mov
into
xor
int3
or
fs
jne
xor
mov
dec
std
xchg
icebp
cmp
sub
adc
or
loope
imul
inc
dec
push
add
mov
lea
mov
in
loop
inc
insl
and
sbb
inc
mov
loopne
sarb
mov
and
inc
test
mov
sahf
mov
push
xchg
or
sbb
arpl
leave
fistpl
fildl
jae
add
xchg
imul
push
ret
das
shll
loopne
gs
insb
cmp
and
outsb
jae
and
out
mov
repnz
data16
jnp
lock
mov
orb
aad
mov
or
fs
jle
and
movsb
xchg
inc
dec
popa
js
js
repz
and
test
cmp
nop
shll
xor
push
test
sub
pop
fadds
sub
iret
cmp
mov
ljmp
dec
ret
jmp
or
lods
sub
jge
dec
divl
add
inc
or
loopne
or
jo
pop
pop
js
xchg
mov
mov
imul
ffree
test
in
js
push
mov
pop
orl
imul
xor
push
jne
xchg
and
inc
jne
shrl
mov
mov
stos
mov
adc
ja
inc
daa
cmp
lcall
out
jne
fildll
sbb
les
inc
into
cmp
insb
jns
ret
mov
push
xor
mov
orl
lahf
cmp
sbb
fildl
jae
xorl
pop
sub
loopne
andl
adc
cmp
test
cmpsb
and
sub
inc
xor
cmpsb
jns
dec
mov
fimull
sub
cmp
push
mov
push
mov
ja
test
stc
shll
cmpsl
mov
mov
mov
xor
lods
mov
dec
hlt
mov
xchg
ss
mov
test
insb
mov
sbb
and
and
out
and
or
test
bound
and
daa
orb
mov
xchg
mov
test
or
add
rclb
subl
popf
ficoml
push
push
and
outsl
lret
add
xor
outsl
fwait
out
inc
cmp
mov
stos
jle
sbb
sbb
jl
sbb
lea
pop
xor
mov
pop
rcr
loopne
xchg
inc
rcll
mov
pusha
adc
mov
jnp
xchg
pop
roll
cmpsl
mov
dec
push
push
dec
not
push
cltd
pop
jmp
inc
push
push
and
ficoml
pusha
rolb
gs
jbe
rcr
sub
jns
xchg
adc
and
and
popf
inc
cmp
test
dec
push
popa
xor
add
jbe
jb,pt
add
xor
fsubl
xchg
rorb
xor
push
add
xchg
rcr
mov
pop
xchg
aas
xor
lods
sbb
dec
out
xor
mov
popa
loop
add
into
push
xor
sub
and
inc
mov
aas
addr16
cmp
out
inc
inc
dec
shlb
inc
sbb
or
push
adc
or
insb
popf
add
inc
inc
dec
mov
inc
push
xchg
pop
push
inc
xchg
sub
sub
add
pop
outsl
pushf
add
adc
dec
inc
dec
int
pop
mov
dec
loopne
sub
insb
push
cmpb
xchg
dec
aas
adc
mov
dec
out
enter
iret
push
testb
aam
cs
inc
fisubl
sub
in
mov
cs
and
pop
nop
or
add
sub
mov
cs
or
das
pop
cmp
aas
daa
inc
cs
or
lcall
pop
add
pop
enter
and
and
and
enter
enter
sub
sub
pop
enter
cmp
and
pusha
and
enter
xor
fsubrl
sub
pop
enter
add
and
pop
es
add
sbbl
add
jb
pop
and
inc
pop
enter
enter
pushf
sahf
das
and
and
jae,pn
push
mov
das
cs
and
pop
leave
add
mov
das
and
or
add
icebp
mov
in
and
movsl
and
mov
cmp
ja
dec
inc
dec
add
jbe
das
dec
push
inc
push
fmull
mov
mov
repnz
mov
pop
cld
sub
je
add
das
dec
lods
xor
insb
pop
add
pop
mov
pop
cs
add
pop
cs
dec
dec
jge
je
xchg
mov
imul
das
add
push
add
adc
rolb
adc
dec
lods
xchg
or
mov
push
insb
mov
dec
add
or
andb
in
push
cmp
jo
arpl
jne
dec
enter
inc
aas
rcr
mov
sub
and
mov
inc
mov
add
shrl
inc
push
pop
testb
je
je
insb
push
cli
aas
sbbb
loopne
sbb
ljmp
push
dec
inc
imul
add
add
addl
xor
jae
ret
dec
add
jecxz,pn
fldl
cmp
outsl
ja
pop
dec
lret
pop
lock
sahf
out
sbb
sbb
cmp
xchg
xor
pop
push
and
add
ss
testl
dec
inc
cs
inc
pop
ret
pop
push
push
dec
ja
sub
fisubrs
adc
sahf
ja
pop
push
mov
pushf
lods
mov
ror
fsub
dec
repz
in
hlt
cld
or
adc
in
into
repz
sub
add
out
repz
inc
push
push
fs
cmp
repz
test
iret
repz
mov
cmp
enter
in
repz
shl
push
sbb
iret
repz
sub
cmp
push
cmp
repz
pusha
push
iret
repz
cmp
lods
mov
mov
repz
call
jns
out
or
and
out
sahf
out
cmp
dec
dec
sahf
out
sahf
push
push
pop
pop
pusha
push
jo
orb
xchg
cwtl
mov
jns
mov
ror
fdivrs
out
loopne
in
hlt
cld
repz
repz
adc
sub
iret
repz
cmp
dec
push
pop
cmp
repz
insb
jl
nop
repz
repz
movsb
mov
ror
repz
aam
loopne
call
ds
adc
and
sahf
out
sub
cmp
out
sahf
out
push
pop
fs
pushf
out
sahf
jo
mov
add
or
xor
mov
and
outsl
loopne
push
xor
inc
inc
aas
cs
mov
xor
xor
or
mov
imul
ss
mov
pop
jae
mov
data16
sub
add
iret
pop
aam
push
jne
cwtl
mov
dec
into
in
and
jge
and
jo
outsl
cmp
add
add
adc
adc
xor
mov
aas
xor
inc
sbb
daa
xor
xor
xchg
cmpl
mov
scas
cwtl
add
orl
xor
add
insl
inc
pop
cmp
jb
push
or
push
xor
ret
push
outsl
jb
or
ret
pop
add
jg
inc
mov
mov
call
adc
or
adc
push
cmp
sub
pushl
sub
push
loopne
sahf
pop
mov
or
ja
fisubs
insl
pusha
lods
sub
outsl
popa
cmp
daa
divps
mov
sbb
add
sub
cmp
xchg
and
jo
das
mov
jno
sub
sbbb
push
jp
arpl
bound
push
lea
pushw
test
fs
or
jnp
aas
fidivs
push
cmp
jae
push
jne
adc
aas
jbe
pop
push
orl
cmp
xor
mov
mov
mov
mov
daa
mov
pop
pop
xchg
outsb
add
or
in
ja
outsb
gs
data16
pop
mov
jae
orl
outsl
les
fisttps
outsl
or
cwtl
mov
mov
pop
ret
fwait
shll
xor
mov
mov
dec
xor
comiss
jns
ficoml
xor
xor
mov
mov
insb
dec
outsl
popa
push
movsl
mov
sbb
cmpsb
bound
dec
hlt
jp
jno
imul
js
outsb
xor
adc
xor
and
xchg
xchg
rorl
jbe
gs
push
rcr
add
push
jb
push
and
gs
mov
mov
test
mov
or
pop
dec
js
test
cmp
mov
xor
cs
add
add
add
mov
out
js
or
test
bound
add
dec
outsl
out
cmp
jg
dec
inc
pop
rcrb
fldt
push
xor
inc
dec
dec
push
push
xor
xor
rcl
dec
outsl
xor
lock
cmp
xor
xorl
scas
push
ss
and
sub
pop
push
add
ud0
test
mov
mov
in
mov
xor
push
out
push
or
ss
popl
inc
outsl
inc
popa
mov
daa
addps
sub
mov
rclb
mov
pop
xchg
sub
adc
fcomp
fiaddl
inc
sub
pop
add
push
lock
pop
jg
jne
add
xchg
ljmp
inc
add
clc
pop
mov
jge
cmp
and
inc
pusha
pop
mov
loop
xchg
aad
mov
lock
dec
inc
xlat
sub
adcb
je
adc
arpl
test
imul
adc
leave
bound
mov
jle
pop
imul
stos
sub
and
inc
mov
dec
cmp
and
subb
push
push
sub
jo
sbb
cmp
stos
cmpsl
mov
and
push
lcall
mov
jp
cmp
jnp
xchg
nop
or
push
insl
gs
and
outsb
fs
imul
jb
test
sub
fistl
xor
push
or
stos
push
out
push
push
ret
inc
and
cmp
mov
or
push
and
int
xchg
sub
aaa
imul
nop
testb
addr16
arpl
rcrl
xlat
aaa
aad
mov
push
dec
outsl
rcrl
mov
mov
loope
dec
in
add
cmp
push
push
sbb
and
push
lcall
jo
adc
movsb
jae
push
loope
into
xor
lods
push
xor
mov
sub
or
popa
or
iret
sub
dec
pop
cmpsl
fucomip
aad
pop
in
sarl
push
inc
dec
flds
cmp
pop
imul
pop
cmp
push
xor
sub
ja
in
adc
mov
ja
inc
push
pop
sbbb
dec
adc
inc
push
pop
xor
push
sub
add
insb
addb
xor
repnz
pop
dec
jne
cmp
add
mov
or
call
inc
push
jo
adc
mov
shrb
mov
lret
data16
xorl
and
popa
ffree
jbe
adc
addr16
outsb
mov
ss
inc
push
xchg
inc
jo
inc
fidivrl
fimuls
iret
inc
and
aas
ljmp
getsec
popa
xchg
sbb
test
sub
std
jmp
xchg
pop
pop
fsubs
sub
inc
xor
xorb
loope
stos
push
out
lods
insb
mov
or
movsl
xor
daa
into
add
jb
pusha
inc
and
mov
push
pop
inc
dec
inc
cmp
or
pop
dec
fldt
stos
xor
mov
cmc
cmp
sub
inc
inc
push
inc
test
aaa
push
and
js
pop
add
jp
daa
rcrb
xlat
push
sub
dec
mov
pop
insl
jnp
cs
out
in
or
inc
mov
or
pop
fisubrl
pop
fistpll
ret
xlat
dec
sbbb
add
inc
loope
dec
xchg
xchg
jb
push
insl
fadd
shrb
pop
fwait
sahf
sahf
pop
push
das
fbstp
adc
mov
xchg
xchg
ret
mov
test
sbb
add
push
call
jae
dec
addr16
or
inc
xor
jmp
push
or
jne
add
lahf
or
dec
add
insl
js
jne
mov
cmp
mov
xchg
sub
dec
inc
jno
shlb
push
push
adc
push
xchg
stos
dec
or
sub
add
mov
dec
cmp
test
scas
into
push
jbe
loopne
cmp
movsb
cmpsb
jo
push
ds
push
mov
fisttps
and
pop
push
and
cs
out
sub
lea
and
jb
cwtl
pop
fcomps
pusha
adc
sub
cmpb
aas
popa
imul
mov
fnsave
test
push
mov
fsubs
jbe
mov
dec
xchg
push
add
add
and
mov
iret
movsb
or
dec
test
sti
pop
imul
and
inc
pop
sub
push
psubusw
mov
out
inc
pop
aad
inc
or
pop
dec
adc
adc
jb
imul
pop
ja
sub
test
inc
mov
lods
dec
shlb
subb
sub
shrl
fiadds
addr16
push
or
fs
inc
lea
pop
push
xor
mov
rcrb
xorl
cmc
push
je
out
adc
push
outsl
cmp
sahf
adc
iret
iret
lods
push
mov
movzbl
cmp
xchg
rorb
jg
xor
daa
sub
lea
les
dec
int3
gs
lock
dec
cmp
mov
and
pop
jnp
or
es
mov
adc
divl
or
js
outsl
daa
pop
adc
arpl
mov
pop
pop
loopne
dec
dec
or
orl
pop
adc
pop
push
dec
imul
mov
push
jge
or
lds
xchg
fisubl
push
sbb
popa
xchg
movsb
aas
das
inc
cld
pop
ror
pop
jo
adc
aaa
mov
les
dec
sbb
jg
addr16
imul
add
pop
gs
adc
das
push
dec
add
pop
pop
movsl
adc
cs
inc
mov
xchg
ret
fwait
push
out
adc
sub
adc
je
in
insl
push
dec
sub
jmp
movsl
ret
sbb
mov
testl
push
cmpb
jecxz
outsl
and
aaa
pop
mov
outsb
inc
xor
push
or
mov
xchg
notb
and
dec
xchg
mov
xor
inc
or
sub
push
jg
add
gs
inc
xor
push
cwtl
sub
and
pop
mov
or
aaa
inc
adc
rclb
shl
popl
xor
shrl
iret
add
sub
lea
sbb
add
push
outsl
imul
cmpsl
fnstsw
dec
adc
add
test
test
add
adcb
inc
sub
mov
push
rcr
mov
push
pop
push
mov
lods
lods
or
outsl
shrb
and
jne
adc
enter
out
add
std
or
push
mov
scas
jo
add
jge
arpl
pop
pop
nop
dec
incl
sti
aas
push
xchg
lahf
mov
popf
aaa
push
pop
imul
dec
sbb
jp
jne
or
fcoms
xlat
mov
jbe
cmp
dec
sub
test
push
or
cmc
dec
mov
push
push
and
mov
lods
jbe
fwait
adc
inc
dec
daa
push
mov
int
addr16
and
scas
xchg
daa
pusha
dec
es
in
fcmovnbe
ret
fwait
jae
inc
jl
add
lea
cmp
data16
inc
adc
imul
sub
shll
or
cs
int
sbb
loopne
pushf
fcom
mov
insl
or
shrl
xor
shll
dec
adc
mov
das
push
push
pop
movsl
outsl
pop
hlt
test
inc
inc
test
shrb
sbb
imul
aaa
dec
and
lahf
iret
push
push
and
pop
mov
popa
cmp
mov
cmp
insl
jae
push
insl
lahf
mov
inc
cmpsl
xchg
push
imul
inc
inc
inc
push
addr16
pop
pop
mov
arpl
outsb
loopne
lea
aaa
mov
outsl
inc
rcll
xor
aas
outsb
and
push
mov
dec
ds
sbb
add
push
pusha
xor
dec
add
inc
push
cmp
mov
sub
inc
mov
dec
sub
mov
mov
test
pusha
addr16
xchg
fiaddl
aaa
cmpsl
jnp
andps
push
jo
pop
pop
outsb
mov
push
aas
std
adc
test
jnp
ja
or
sub
pop
out
mov
movl
jne
jns
out
pop
sub
fisttpl
mov
test
icebp
aas
xorb
xor
pop
mov
xchg
sbb
dec
and
xlat
mov
pop
orl
xor
cmp
cs
dec
xchg
pop
pop
inc
dec
data16
imul
push
arpl
or
mov
xchg
sub
inc
mov
inc
jecxz
cmp
pop
or
fcoml
aas
inc
das
dec
add
pop
faddp
adc
adcb
test
add
push
mov
push
outsb
xlat
and
insl
xor
outsl
inc
jp
sbb
aad
ljmp
sub
ss
push
inc
test
sbbl
pop
popl
insb
add
xorl
mov
fstl
adc
cmpsb
mov
stos
ja
addb
addr16
lods
insl
ret
orl
das
subb
inc
movb
insl
adc
pop
lret
das
adc
enter
mov
push
mov
test
pushf
xor
fstpt
sbb
insl
adc
loope
stos
mov
xchg
cli
ss
pop
insl
lahf
test
insb
xchg
stos
jmp
ret
pop
cmpsl
push
sub
cmp
popa
or
repz
pop
test
fnsave
or
inc
outsl
mov
xor
jns
xchg
xchg
nop
pusha
mov
push
adc
ret
fcomps
and
add
fs
or
xor
sub
stc
je
sub
popa
std
jle
or
pop
icebp
xadd
pushf
add
or
fstps
orb
stos
movhps
out
mov
jecxz
lods
cltd
rorb
cmp
fwait
mov
test
xchg
adc
sbb
push
nop
push
and
sbb
mov
and
icebp
pop
xchg
xchg
repnz
lock
push
jo
ss
push
jg
or
add
xor
jbe
pop
push
adcb
ret
jo
sbb
pop
ja
mov
addr16
movsb
es
xchg
clc
and
popa
mov
and
inc
or
dec
sbb
jb
adc
mov
sbb
or
test
jmp
push
stc
push
test
pop
pop
out
or
mov
lret
mov
popa
adc
loopne
les
aas
mov
dec
sub
mov
cmovo
fs
mov
mov
dec
and
bound
sub
or
mov
dec
xlat
push
cmc
add
cmpsb
push
imul
mov
lods
dec
jg
movsl
mov
xor
add
cmp
mov
test
roll
or
out
aad
push
push
addl
pop
xchg
int3
adc
sbb
jo
mov
and
ds
add
lcall
ret
jge
loope
add
iret
faddl
push
xlat
push
int3
rorl
and
or
stos
push
dec
dec
sbb
cmp
mov
dec
push
ja
mov
ja
jo
pop
push
scas
lds
sahf
inc
movsb
cs
cmp
mov
add
cltd
dec
push
or
and
mov
jo
rorl
dec
or
lods
pop
sbb
inc
ja
push
cmp
lret
add
and
inc
sub
aaa
addl
inc
insl
sbb
push
add
push
sbbl
xchg
je
sub
xchg
sbb
jae
jge
adc
cmp
outsl
push
adc
cmpl
xor
mov
push
lods
repz
dec
insb
daa
add
lock
frstor
test
jl
jg
add
aas
test
scas
fisttpl
es
lods
adc
and
imul
mov
pop
cmp
mov
xor
xor
inc
cmp
imul
out
dec
lcall
fs
xlat
daa
push
inc
and
xchg
insl
mov
and
xchg
push
adcb
daa
cltd
pop
scas
pop
add
push
lods
push
mov
fs
ja
lods
test
popl
adc
fdivp
ds
push
add
dec
ss
adc
mov
inc
jbe
cli
and
scas
imul
or
das
les
mov
idivl
iret
and
or
jb
shll
popa
push
hlt
dec
outsb
jns
mov
es
jg
push
mov
lods
jbe
sbb
popa
daa
push
pop
inc
shrl
rcl
dec
xchg
addr16
imul
les
pop
mov
jmp
push
daa
pop
adc
mov
cmp
cmp
push
jae
lods
fs
jae
lods
fildl
xor
les
nop
inc
mov
cmp
insl
outsl
and
fsubrs
cli
imul
cmp
jae
lds
pop
xor
in
pop
xor
mov
arpl
mov
and
xchg
addl
enter
mov
mov
orb
xor
sub
faddl
jae
xor
fists
insb
mov
add
int
add
dec
iret
sbb
sar
push
and
jno
popa
and
je
push
xchg
and
insb
jne
add
add
mov
pop
xor
fcomp
adc
or
jae
incl
stc
das
mov
clc
inc
pop
lret
or
add
js
jbe
fisttpl
jnp
outsl
xchg
inc
xor
inc
jl
cmp
rolb
or
add
mov
outsl
and
std
mov
add
xor
push
push
and
sbb
adc
jne
mov
adc
je
adc
ds
rol
add
or
mov
fldt
xlat
add
add
push
call
adc
push
mov
repz
cmp
mov
ret
call
pop
pop
cmp
fisttps
jg
ret
pop
pop
pop
push
sub
adc
lea
mov
mov
call
rep
mov
stos
push
push
push
push
push
push
or
mov
clc
inc
pop
les
ret
add
imul
xor
mov
or
insb
lods
pop
repz
lods
inc
outsb
inc
pop
ret
pop
fidivl
mov
sbbl
xlat
xchg
push
and
sub
ja
adc
mov
cmp
pop
xor
xor
xor
mov
jp
loopne
and
loop
xor
fisubrl
push
add
push
sub
icebp
inc
push
xor
add
addl
push
mulb
push
push
insl
stos
add
pop
outsb
out
sub
adc
mov
mov
jns
ret
pusha
adc
aas
fadd
inc
dec
push
pop
inc
push
push
push
dec
ss
dec
dec
dec
cltd
or
jp
and
ja
bound
add
add
adc
cmp
insb
jns
push
cmp
fwait
movsl
adc
push
mov
inc
jne
mov
add
sub
jl
cmp
xchg
pop
inc
mov
fadds
mov
jbe
or
push
imul
inc
xchg
add
fwait
mov
das
inc
or
dec
js
push
imull
push
cmp
negl
lret
inc
add
mov
pop
insl
xchg
test
mov
notl
push
push
dec
lea
lea
xchg
test
addr16
stos
mov
or
xlat
push
mov
dec
addr16
inc
outsl
mov
roll
or
pop
sub
popa
ja
subl
das
add
pop
xchg
ret
div
sub
js
sub
mov
jae
mov
mov
loope
and
push
mov
dec
xor
loop
sub
sub
repz
ret
push
and
adc
sub
add
and
nop
cwtl
mov
cmpsl
and
xchg
adc
insl
pop
sub
jg
lahf
mov
xor
insl
mov
out
aas
js
insb
test
add
adc
mov
loope
mov
and
jo
js
inc
inc
inc
push
cmp
jnp
loope
jno
adc
and
xchg
or
rclb
or
repz
frstor
cmp
mov
and
push
inc
dec
and
inc
cs
dec
popa
mov
filds
sub
filds
pop
add
add
add
mov
add
xor
cld
rorl
in
add
push
jae
mov
mov
fwait
add
les
add
mov
pop
incl
push
out
cld
leave
jnp
dec
dec
cmp
or
jo
pop
dec
pop
adc
scas
xchg
inc
mov
and
in
push
xchg
adc
addl
adc
mov
and
cs
adc
inc
shl
and
inc
push
ret
add
aas
add
aas
jo
inc
bound
jb
mov
push
mov
add
add
das
pushf
cmp
pusha
cmpb
cmpsb
fisttps
mov
popl
jle
test
shll
mov
inc
out
in
jbe
pop
inc
mov
iret
mov
in
sbb
in
call
adc
aas
and
pop
fidivrl
xor
fcomp
loopne
mov
xor
sbb
clc
into
mov
xor
push
jns
add
add
add
or
and
or
aaa
or
fnstsw
scas
adc
adc
mov
das
and
cmp
inc
push
addr16
das
push
femms
outsb
mov
push
mov
insl
push
and
sbb
push
pop
andb
fildl
aas
addl
sub
popf
movsb
fbld
xchg
aaa
fdivrl
xlat
pop
sbb
inc
stos
mov
adc
nop
inc
inc
xor
test
push
xorl
shlb
cmp
push
pusha
xor
fnstenv
push
rorb
push
add
leave
jae
xchg
lea
mov
nop
xchg
pop
pop
jb
xchg
xchg
add
js
and
dec
pop
repnz
xchg
sbb
push
cmpsl
stc
mov
push
or
inc
or
adc
out
pop
adc
hlt
inc
repz
rcrl
int3
sbb
pop
sbb
js
jns
iret
repz
jp
cld
add
es
add
sbb
je
xor
add
fisttps
mov
negl
insl
imul
xor
fucomip
inc
jle
adc
cmp
clc
xor
xor
fdivl
aam
push
push
movsl
xor
or
int3
push
and
push
pcmpgtd
out
jns
inc
dec
push
dec
xorps
js
sbb
push
push
inc
add
in
mov
push
sub
sbbl
cld
mov
dec
add
mov
enter
aas
in
mov
pop
or
xor
stc
xor
inc
inc
jo
inc
push
push
ds
xchg
and
cmp
dec
and
imul
push
mov
push
dec
or
out
enter
add
js
xor
lss
inc
push
dec
push
xchg
in
or
scas
dec
and
dec
inc
and
adc
notb
repz
mov
scas
push
scas
dec
add
cmp
repnz
push
pop
sbb
mov
add
push
or
add
hlt
inc
scas
pop
inc
inc
pop
lret
adc
add
aaa
push
scas
and
je
pop
loopne
push
je
int
and
push
repnz
leave
iret
cs
push
inc
dec
and
dec
leave
iret
add
enter
sub
iret
add
cmp
rclb
out
loopne
sub
push
add
push
inc
xor
addr16
jle
lods
push
inc
inc
push
xor
jle
nop
xor
add
nop
cmp
pop
add
addr16
cmp
pop
add
push
jle
or
adc
add
push
gs
mov
or
add
out
in
push
inc
inc
push
in
daa
outsb
sbb
aam
les
mov
dec
dec
out
dec
dec
movsb
pop
mov
lods
mov
xchg
jg
jecxz
push
cmp
dec
add
mov
fwait
dec
pop
sahf
dec
dec
dec
pop
cmp
dec
sub
push
push
xchg
add
out
sbb
repz
or
dec
into
dec
insb
lret
leave
insb
lock
paddusb
ds
jne
dec
sahf
mov
pop
dec
dec
add
push
lods
dec
aas
mov
imul
jo
pop
mov
dec
cmp
sbb
dec
pop
inc
xorps
cmovp
aam
mov
mov
mov
jle
dec
mov
jl
insb
dec
subps
mov
cmp
cmovbe
jle
dec
jnp
mov
dec
out
insl
outsb
lock
loopne
call
push
dec
push
mov
push
sahf
les
mov
pushf
fiadds
test
push
push
into
jo
pusha
cvtdq2ps
fcmovbe
push
push
sahf
cmp
dec
add
push
js
popf
push
dec
ja
inc
iret
call
idivl
jle
mov
pop
stos
mov
cmovle
mov
jl
dec
jne
jae
push
cmove
out
xor
iret
and
cmp
insb
mov
or
push
enter
pop
decb
inc
rcpps
or
out
pop
insb
push
push
jns
out
push
dec
inc
xor
out
sahf
out
adc
or
iret
sarl
add
dec
clc
hlt
lock
repz
call
iret
in
repz
mov
jns
out
xchg
mov
in
sahf
je
pop
push
add
sarb
clc
pop
pop
fsubrl
and
add
filds
jo
lock
push
push
push
sahf
add
jg
add
pop
push
add
adc
push
repnz
mov
enter
cli
or
or
ret
nop
cmpl
adcb
sbb
pop
stc
and
leave
sbb
into
sbb
rorl
and
sahf
mov
pushl
test
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
jg
stc
mov
adc
mov
decl
js
inc
outsl
loopne
jmp
dec
inc
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
pushl
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
dec
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
ljmp
cmp
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
decl
pop
mov
and
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
add
les
add
out
aas
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
sar
ljmp
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
jmp
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
inc
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
pushl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
jmp
push
ja
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
fmull
call
cmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
decl
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
pushl
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
sar
idiv
dec
dec
gs
std
orl
pop
ficomps
frstor
repz
pop
js
mov
out
cmp
repz
xor
outsl
fdivrs
cmp
stc
cmp
repz
mov
repnz
sbbb
das
dec
insb
add
adc
ret
and
or
adc
add
and
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
mov
mov
cmp
add
add
jnp
push
add
add
fadd
pop
daa
mov
push
push
lret
fadd
add
pop
xchg
aas
dec
or
push
push
shlb
push
inc
dec
mov
adc
xor
xchg
push
and
and
dec
xlat
push
mov
outsb
fs
jge
shlb
dec
popa
push
dec
outsl
and
sbb
jo
push
pop
xchg
pop
insb
cmpsb
in
xchg
mov
dec
push
jb
cmp
pop
push
push
sbb
push
mov
cld
add
outsl
push
imul
addl
imul
aad
or
popf
fnsave
sbb
add
mov
xchg
sbb
push
pop
mov
xchg
orl
shrb
out
mov
dec
push
xor
in
dec
outsl
imul
adc
pushf
sub
sub
sbb
ja
fsubrp
adc
mov
add
pop
sub
sbb
movsl
push
daa
add
and
or
push
dec
in
addb
outsl
xchg
aaa
popl
je
pop
inc
popa
je
xchg
ds
je
arpl
popf
inc
imul
jbe
xchg
and
push
outsb
shrb
mov
es
jo
gs
dec
inc
bound
dec
sbb
mov
filds
sbb
mov
add
pusha
fildl
popa
imul
xchg
insl
add
movsb
std
and
inc
iret
ss
push
sbb
cmp
mov
pop
jns
mov
adc
and
or
iret
pop
sti
xchg
dec
lock
lods
inc
imul
cmpsb
dec
mov
push
dec
fs
push
or
in
imul
call
jb
gs
int
insb
adc
inc
mov
sbb
out
outsb
rorb
push
outsb
outsb
fimull
loope
leave
inc
jbe
adc
add
std
adc
jae
mov
xor
je
xchg
dec
inc
push
ja
xor
imul
dec
outsb
out
clc
adc
fstpl
sub
add
push
jo
mov
jae
addr16
dec
ret
jno
popa
aas
sub
inc
mov
call
jae
xor
lods
jp
mov
fnstsw
pop
pop
inc
popf
xchg
enter
adc
cmovg
ss
push
pop
stos
or
cmp
adc
sbb
out
iret
push
cmovg
adc
push
aaa
sbb
mov
movsl
jno
stos
mov
sbb
inc
sub
jp
jne
sbb
push
stos
push
js
jo
dec
mov
in
cmp
invd
das
sub
push
mov
dec
xlat
dec
jns
push
je
outsl
add
das
imul
pop
div
xchg
xchg
xchg
sub
out
int3
or
xlat
jnp
jne
mov
lds
test
push
loope
inc
dec
inc
stos
push
fs
nop
or
jecxz
xchg
xor
pusha
lock
and
adc
push
fcmovnu
pop
push
pop
inc
dec
iret
push
push
add
fcmovbe
decl
dec
add
imul
mov
jmp
add
add
add
adc
add
push
add
inc
int3
mov
pusha
add
fld
xor
nop/reserved
push
fcom
jge
mov
cmp
or
sbb
xor
mov
out
sbb
repnz
pusha
sbb
adc
add
add
aas
insb
call
push
add
cmp
add
lcall
jecxz
sbb
dec
addl
dec
and
jnp
mov
push
dec
fidivrs
sub
loopne
shrb
push
test
adc
orb
jae
dec
cmp
inc
xchg
and
insl
cmp
test
add
test
dec
incl
pusha
mov
lea
push
sub
dec
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
sub
sub
jb
shl
mov
inc
xor
je
sar
push
pop
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
test
je
push
pop
push
dec
repnz
push
call
test
je
mov
add
jmp
call
popa
jmp
