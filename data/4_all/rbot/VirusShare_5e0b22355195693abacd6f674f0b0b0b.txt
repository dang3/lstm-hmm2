jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
push
mov
push
call
ret
nop
push
mov
push
mov
and
push
mov
push
call
cmp
sbb
neg
and
pop
ret
push
push
mov
and
push
mov
push
call
ret
nop
test
je
call
or
je
ret
mov
jmp
ret
nop
test
je
call
or
jne
ret
mov
jmp
ret
nop
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
cmp
jge
jcxz
cmp
je
push
push
mov
mov
ja
lea
lea
std
rep
jmp
cmp
je
push
push
mov
mov
mov
ja
and
lea
lea
std
rep
sar
mov
mov
sub
sub
rep
cld
dec
sar
js
rep
and
mov
rep
pop
pop
ret
push
push
push
push
mov
mov
jmp
push
call
mov
mov
test
je
cmp
jbe
cmpb
jne
cmpb
jne
add
jmp
xor
mov
jmp
cmp
jne
push
call
mov
jmp
push
call
mov
sub
add
mov
mov
test
je
cmp
jne
cmpb
je
push
call
mov
jmp
push
call
mov
sub
add
mov
mov
cmp
ja
mov
mov
call
mov
mov
xor
jmp
cmp
jne
push
call
mov
jmp
push
call
cmp
jbe
mov
mov
inc
inc
cmp
ja
mov
test
je
cmp
jne
cmpb
je
push
call
mov
jmp
push
call
cmp
jbe
mov
mov
inc
inc
cmp
ja
mov
cmp
ja
mov
pop
pop
pop
pop
ret
mov
push
push
push
add
mov
mov
mov
call
test
jne
push
lea
push
push
call
mov
mov
mov
call
jmp
call
mov
mov
mov
call
mov
test
je
cmpl
je
dec
jmp
add
pop
pop
pop
ret
mov
push
mov
cmp
jbe
mov
mov
inc
inc
and
xchg
call
pop
ret
nop
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
push
push
push
push
sub
mov
mov
cltd
xor
sub
mov
xor
xor
div
add
mov
inc
test
jne
test
jge
movb
inc
mov
inc
mov
cmp
jle
mov
sub
jle
add
mov
rep
mov
mov
inc
dec
jne
add
pop
pop
pop
ret
nop
mov
xor
call
ret
mov
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
pop
xor
mov
pop
pop
pop
ret
nop
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
push
push
push
push
mov
mov
test
je
mov
mov
test
jle
dec
mov
mov
test
je
mov
call
test
jg
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
mov
cmp
sete
cmp
jle
mov
inc
mov
test
je
call
test
je
mov
cmp
je
mov
mov
mov
call
jmp
cmp
jg
pop
pop
pop
pop
ret
mov
test
je
mov
xor
mov
xchg
call
ret
lea
movl
movl
mov
xor
mov
mov
mov
mov
movb
call
ret
nop
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
push
push
push
mov
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
mov
call
cmpl
jne
cmpl
je
call
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
push
mov
mov
mov
rep
pop
jmp
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
decl
jne
push
lea
call
pop
ret
mov
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
decl
jne
lea
call
add
dec
jne
pop
pop
ret
mov
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
incl
xchg
test
je
mov
dec
jl
decl
jne
lea
call
ret
lea
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
mov
call
pop
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
xor
mov
inc
jmp
ret
nop
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
push
push
push
mov
mov
cmp
je
test
je
test
je
mov
mov
sub
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
add
jmp
mov
sub
jmp
mov
sub
jmp
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
pop
ret
mov
test
je
mov
inc
jle
incl
ret
mov
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
decl
jne
lea
call
mov
pop
mov
ret
jmp
ret
mov
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
ret
lea
mov
jmp
ret
mov
sub
jb
sub
je
call
ret
lea
mov
xor
movl
inc
cmp
jne
mov
mov
ret
nop
mov
jmp
ret
mov
mov
mov
ret
mov
push
push
mov
mov
test
je
mov
call
mov
test
jne
pop
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
jne
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
subl
jae
call
mov
movl
movw
movw
movw
call
call
mov
ret
ljmp
add
add
jb
imul
jo
jb
addr16
sub
xor
cmp
sub
xor
xor
inc
jbe
outsb
addr16
bound
dec
push
inc
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
push
push
push
add
mov
mov
mov
call
mov
movb
movb
xor
mov
mov
inc
inc
test
jne
xor
xor
mov
mov
nop
nop
nop
nop
nop
cmp
jge
mov
mov
mov
jmp
movb
inc
cmp
jl
xor
mov
add
add
mov
mov
xor
mov
mov
mov
xor
mov
lea
mov
mov
inc
dec
jne
nop
nop
nop
nop
nop
add
pop
pop
pop
pop
ret
mov
nop
nop
nop
nop
nop
xor
mov
call
ret
mov
push
mov
push
push
push
push
nop
nop
nop
nop
nop
mov
dec
test
jl
inc
mov
mov
incb
xor
mov
mov
add
nop
nop
nop
nop
nop
xor
mov
mov
push
xor
mov
lea
pop
mov
xor
mov
mov
xor
mov
add
nop
nop
nop
nop
nop
and
mov
xor
mov
inc
inc
decl
jne
pop
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
call
nop
nop
nop
nop
nop
push
mov
call
push
mov
call
mov
mov
pop
call
pop
pop
pop
pop
ret
push
mov
add
push
push
mov
mov
lea
call
nop
nop
nop
nop
nop
xor
push
push
pushl
mov
mov
lea
mov
call
xor
pop
pop
pop
mov
push
nop
nop
nop
nop
nop
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
nop
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
test
je
sub
mov
ret
mov
push
mov
add
push
push
push
xor
mov
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
mov
cmp
jbe
lea
call
mov
mov
mov
call
cmpl
jbe
movl
jmp
movl
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
push
sub
push
lea
call
add
push
mov
push
mov
call
push
mov
push
call
mov
push
call
mov
mov
call
jmp
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
decl
add
add
jb
push
xor
and
jns
je
xor
decl
add
add
xor
sbb
add
call
add
add
cmp
xchg
jmp
mov
fldcw
push
mov
add
push
push
push
xor
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
mov
call
mov
mov
cmp
ja
mov
mov
test
jne
mov
mov
mov
mov
call
mov
xor
mov
add
mov
call
mov
call
add
xor
mov
xor
call
inc
jmp
lea
mov
mov
call
mov
mov
call
inc
cmp
jbe
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
nop
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
mov
push
push
dec
jne
push
push
mov
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
mov
lea
mov
call
mov
call
push
push
call
mov
push
call
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
decl
add
add
jb
push
xor
and
jns
je
xor
decl
add
dec
push
daa
push
jne
iret
dec
in
and
add
add
decl
add
add
xor
sbb
add
decl
add
add
and
bound
aas
cmpsl
cmp
mov
call
add
add
daa
add
push
nop
cs
cli
inc
lods
inc
mov
add
add
decl
add
jne
es
mov
out
inc
add
add
call
add
add
and
inc
cltd
pop
cmpsl
movsb
loope
mov
add
add
call
add
add
xor
inc
inc
xchg
sbb
stos
pop
mov
add
call
add
add
and
inc
cltd
pop
cmpsl
movsb
loope
mov
add
add
decl
add
add
adc
or
test
push
mov
decl
add
add
xor
mov
call
add
add
cmp
jne
mov
mov
push
mov
add
decl
add
add
daa
add
push
nop
aas
scas
mov
inc
mov
add
call
add
jge
add
jge
mov
stos
cmp
test
aad
xlat
add
add
call
add
add
daa
sbb
cmpsb
mov
dec
lods
push
mov
add
aam
and
lcall
mov
push
push
add
mov
mov
lea
mov
call
lea
mov
mov
call
mov
mov
call
add
pop
pop
ret
mov
push
mov
xor
push
push
push
push
push
mov
xor
push
push
pushl
mov
nop
lea
mov
call
mov
call
lea
call
mov
call
lea
call
mov
call
lea
call
mov
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
mov
call
lea
movzwl
add
pop
ret
push
mov
mov
call
shr
mov
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
call
xor
mov
call
lea
xor
mov
call
lea
xor
mov
call
movl
xor
mov
mov
lea
push
lea
push
push
push
push
push
push
push
mov
call
push
mov
call
push
call
test
je
movb
mov
call
nop
nop
nop
nop
nop
xor
push
push
pushl
mov
movl
lea
push
mov
push
call
test
je
lea
push
push
lea
push
mov
add
push
mov
push
call
test
je
mov
push
mov
push
call
test
jb
cmpl
je
mov
call
mov
mov
add
mov
push
push
mov
mov
push
mov
mov
push
mov
push
call
mov
cmpl
je
lea
push
mov
mov
push
mov
push
mov
push
mov
push
call
test
je
mov
call
mov
mov
call
mov
movzwl
dec
test
jb
inc
mov
xor
lea
push
lea
mov
push
mov
add
push
mov
add
push
mov
push
call
test
je
lea
push
mov
call
push
mov
push
mov
add
push
mov
push
call
inc
decl
jne
mov
call
lea
push
push
lea
push
mov
add
push
mov
push
call
test
je
mov
call
mov
mov
add
mov
lea
push
mov
push
call
cmp
sbb
inc
mov
xor
pop
pop
pop
mov
push
cmpb
jne
push
mov
push
call
jmp
mov
push
call
mov
call
mov
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
push
mov
mov
push
push
dec
jne
push
push
push
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
lea
mov
mov
call
mov
call
push
push
call
mov
mov
push
mov
mov
call
push
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
decl
add
add
jb
push
xor
and
jns
je
xor
decl
add
dec
push
daa
push
jne
iret
dec
in
and
add
add
decl
add
inc
push
and
pusha
pop
iret
dec
in
and
add
add
decl
add
add
and
bound
aas
cmpsl
cmp
mov
decl
add
add
cmp
inc
inc
xchg
sbb
call
add
add
and
jns
cltd
aas
mov
cld
dec
lods
inc
mov
add
decl
add
pusha
push
and
mov
add
add
call
add
add
and
jg
mov
mov
cld
insl
scas
pop
test
add
add
decl
pop
cmp
push
adc
add
add
decl
add
add
adc
mov
sti
push
lods
push
add
decl
add
imul
push
adc
add
add
decl
add
imul
push
adc
add
add
decl
add
popa
inc
xor
mov
in
inc
add
add
decl
add
add
xor
mov
push
add
mov
mov
lea
mov
call
lea
mov
mov
call
mov
mov
call
add
pop
pop
ret
mov
push
mov
call
pop
ret
mov
push
mov
add
push
xor
mov
mov
xor
push
push
pushl
mov
movl
lea
mov
call
lea
push
mov
call
push
call
lea
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
ret
mov
push
add
mov
movl
push
lea
push
call
test
je
mov
lea
mov
call
jmp
mov
call
add
pop
ret
lea
push
mov
xor
push
push
push
push
push
xor
push
push
pushl
mov
xor
lea
call
mov
push
lea
mov
mov
call
mov
pop
call
jne
lea
call
mov
push
lea
mov
mov
call
mov
pop
call
jne
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
mov
pop
ret
add
decl
add
add
jb
push
xor
and
jns
je
xor
decl
add
add
xor
pop
push
xchg
sbb
add
add
decl
add
fs
and
mov
data16
add
push
mov
add
lea
sidtl
cmpl
jle
cmpl
jg
jmp
cmpl
jle
movb
jmp
movb
jmp
movb
mov
pop
pop
pop
ret
push
mov
push
push
push
push
xor
push
push
pushl
mov
lea
xor
call
mov
push
lea
mov
mov
call
mov
call
mov
lea
call
mov
pop
call
jne
mov
jmp
xor
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
mov
pop
ret
decl
add
add
jb
push
xor
and
jns
je
xor
decl
or
add
mov
cmpsb
leave
jmp
stos
add
add
in
add
push
push
xor
mov
xor
push
push
pushl
mov
xor
mov
call
mov
movl
lea
push
push
call
lea
mov
mov
call
mov
call
cmp
jne
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
decl
add
add
jb
push
xor
and
jns
je
xor
decl
add
add
add
mov
mov
cld
add
in
xor
push
push
push
push
push
mov
xor
push
push
pushl
mov
nop
lea
mov
call
mov
call
lea
call
mov
call
lea
call
mov
call
lea
call
mov
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
push
mov
push
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
test
je
push
call
mov
pop
pop
ret
call
cmp
je
call
cmp
je
call
cmp
je
call
cmp
jne
xor
call
ret
push
mov
xor
push
push
pushl
mov
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
or
add
dec
xor
mov
sbb
add
inc
add
sbb
lock
add
sbb
add
inc
add
sbb
inc
add
inc
add
and
mov
sub
mov
add
add
inc
add
in
add
push
xor
mov
mov
mov
mov
mov
call
xor
push
push
pushl
mov
call
call
mov
mov
call
mov
call
mov
call
mov
mov
call
mov
test
je
mov
mov
call
mov
call
mov
mov
mov
call
mov
call
lea
mov
mov
call
mov
mov
call
mov
push
lea
push
call
mov
push
lea
push
call
mov
mov
call
mov
call
push
lea
xor
call
mov
push
mov
call
xor
pop
call
test
jmp
push
call
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
call
add
incl
add
add
add
decl
add
add
jb
push
xor
and
jns
je
xor
add
add
add
add
or
add
sbb
add
add
add
add
add
add
add
pop
add
xorb
add
add
add
add
add
add
add
add
add
dec
add
add
add
sahf
arpl
add
add
add
add
add
add
push
add
add
cld
xor
xor
mov
mov
int
dec
test
cmp
ret
xor
inc
dec
push
jne
test
mov
loope
mulb
lods
cmc
mov
add
flds
out
pop
imul
out
sub
jecxz
das
xlat
sub
iret
push
jnp
testb
scas
mov
add
pusha
inc
jl
cltd
adc
out
int3
sbb
cltd
es
insb
xchg
inc
lcall
aaa
pop
cmc
jo
cmp
ret
xchg
mov
call
mull
loope
lock
add
mov
mov
test
xor
repnz
fmul
xlat
jb
pop
dec
sub
outsb
sti
aas
inc
and
mov
pop
in
pop
test
dec
mov
push
sbb
mov
or
push
inc
sub
ds
inc
mov
mov
dec
sbb
ljmp
jl
addb
adc
fisubrs
add
xchg
imul
mov
out
loop
jns
sub
inc
inc
jb
jne
nop
cmc
mov
ds
imul
movsl
inc
mov
pop
js
sbb
and
mov
cmc
mov
fmuls
sarl
inc
daa
stc
sub
fistl
js
insb
xchg
jnp
xor
aaa
dec
dec
cltd
sbb
mov
push
mov
call
push
pop
cld
or
push
in
adc
cmp
jle
jbe
pop
arpl
inc
int
adc
add
push
lods
or
pop
imul
repz
popf
adc
adcl
sti
jle
mov
mov
push
sub
cld
movsb
sub
lahf
jmp
arpl
cmpsl
aas
lods
mov
pop
ret
sbb
jbe
lds
lcall
repnz
dec
scas
and
in
push
js
sahf
leave
xorb
dec
push
pop
test
xor
adc
test
pop
das
mov
in
push
xor
cwtl
xor
add
dec
or
jl
shlb
mov
in
mov
shll
inc
push
mov
lods
imul
jns
divl
adc
in
mov
out
sbbb
push
out
fimuls
das
add
cmpsl
cmp
ret
jmp
insb
inc
int3
dec
fnstcw
mov
mov
jg
pop
sub
jbe
loopne
push
pop
aam
cwtl
rcr
cli
lea
xchg
sbb
xchg
leave
movsl
aas
aas
je
outsb
popf
rcrl
cmp
outsl
pop
pop
or
in
rcl
push
inc
push
xor
popf
test
rcll
mov
loope
mov
hlt
insl
lcall
fsubrs
es
and
xor
fsubrp
shrl
dec
insl
lods
pop
cmc
add
lea
jbe,pt
outsb
sbb
xchg
xlat
sub
mov
add
rorl
xor
and
out
adc
pushf
movsl
cwtl
cs
mov
or
int3
das
in
nop
into
xor
popa
call
into
add
cwtl
jnp
nop
fwait
mull
loopne
pop
hlt
dec
bound
xor
bound
push
push
xchg
mov
jecxz
pop
je
cli
gs
fistpll
ret
pop
dec
mov
stos
jl
clc
subl
das
iret
xchg
arpl
dec
or
xchg
xchg
mov
jno
je
hlt
fstpl
xlat
into
stos
lcall
lret
aam
xor
add
cmpsl
int3
popf
or
xor
movsb
mov
ja
icebp
scas
cmp
or
xchg
stc
or
scas
mov
mov
stc
add
inc
xlat
mov
mov
fcompl
mov
dec
jg
cld
int3
mov
sbb
mov
insb
sbb
popa
mov
sbb
flds
or
fisttps
push
imulb
push
pop
jecxz
pop
fidivrs
push
adc
or
dec
out
in
jle
repz
xchg
dec
cmpsb
sub
jae
mov
lods
int3
add
pushf
mov
adc
pop
mov
add
add
out
jp
out
sub
add
jecxz
push
and
sbb
imul
pop
outsl
aas
inc
out
xor
loope
rcrb
and
mov
xchg
popf
xchg
imul
adc
lds
shrl
sbb
fcmovnbe
and
call
cli
dec
jp
ret
aas
dec
pop
cmpsl
fldt
cmp
pop
rclb
adc
dec
stos
sub
es
mov
jle
test
in
rorb
pushf
out
dec
ret
jnp
xchg
or
test
lea
adc
sbb
stos
pop
ljmp
fwait
sbb
add
xchg
sub
imul
ljmp
js
sti
sub
jns
mov
rcrb
imul
cmpsl
mov
je
sarb
push
inc
sbb
stos
outsl
in
mov
lcall
decb
jnp
mov
mov
mov
es
repz
mov
popf
pop
jo
in
pop
loope
jae
jae
dec
ja
mov
mov
mov
negl
loopne
add
add
dec
adc
loope
sarb
fcom
or
inc
daa
jnp
in
jecxz
add
or
adc
lret
call
pop
imul
and
jp
test
mov
inc
ss
xchg
mov
fiaddl
xor
mov
sbb
mov
jno
jae
adc
and
pop
jae
jae
loopne
mov
ret
push
movsl
movsb
jg
sbb
fdivp
inc
lret
into
and
add
mov
rcrb
shl
xor
xchg
pop
jbe
sub
adc
fimull
cmp
xchg
jle
outsl
mov
cmp
test
pop
mov
mov
jle
xor
insl
push
jne
add
add
push
in
test
push
xchg
xor
out
sub
push
popf
sti
adc
in
not
xlat
mov
and
mov
add
pop
out
lret
sbb
push
jo
sub
adc
and
jnp
insb
sub
scas
mov
orl
cmpsl
push
out
test
lods
ja
cmp
lock
mov
mov
mov
jmp
jb
aam
lods
jle
xor
imul
xchg
in
cmp
lea
mov
popf
pop
or
cmpsl
pop
jns
cmp
mov
mov
ljmp
inc
adc
pop
out
or
sbb
push
das
sbb
loopne
icebp
pop
mov
cld
insl
rcrl
cmpsl
push
xchg
pop
cmc
sbb
and
aas
add
xchg
mov
cld
stc
flds
test
cwtl
or
push
add
sub
enter
mov
out
fsubs
jb
stos
iret
mov
icebp
in
stos
mov
cmc
sbb
jnp
mov
cmpsl
les
push
insb
cmp
push
cmp
sbb
xor
sbb
dec
das
incb
and
shlb
out
pop
in
addr16
decb
mov
xor
dec
fmuls
or
lods
lcall
push
in
adc
jns
shlb
dec
cmp
hlt
push
lods
jae
cmpsl
mulb
sarl
push
cwtl
out
into
xchg
pop
movsb
fisubrs
stc
es
pop
loopne
hlt
mov
in
lock
enter
scas
cmp
stos
sbb
pop
mov
sbb
jbe
mov
push
mov
test
adc
mov
sub
aam
mov
sti
inc
mov
ret
xor
or
pop
sub
pop
mov
jnp
std
loopne
loope
xor
mov
add
divb
jg
dec
in
dec
addr16
pop
scas
in
out
adc
sub
in
fwait
jle
sti
mov
dec
cltd
aad
cmc
sub
inc
and
xor
or
or
push
and
imul
out
xlat
mov
lcall
mov
push
shl
cli
xchg
jge
push
imul
cmp
xor
mov
or
xchg
push
dec
cmp
jl
push
les
jl
push
incl
call
jecxz
aam
pop
es
jl
insb
ljmp
mov
push
adc
pop
shlb
cmc
mov
cwtl
popf
mov
and
xor
jne
outsb
mov
xor
test
lds
push
jns
stos
sub
and
sub
xor
jp
loop
lahf
jnp
dec
adc
add
outsb
test
icebp
xchg
and
inc
outsb
movsl
inc
sbb
divl
adc
stos
or
push
into
scas
jbe
inc
xchg
pop
test
shrb
push
mov
jl
movsb
push
cmp
or
xchg
dec
cmp
pop
orl
adc
pop
mov
das
out
xor
arpl
cli
mov
movsb
push
in
adc
pop
mov
cmp
adc
outsb
xor
adc
jo
cmp
inc
cmp
or
into
sbb
in
pusha
roll
mov
dec
xor
cwtl
popa
lahf
repnz
mov
cmp
xchg
mov
loope
frndint
xchg
jle
dec
sbb
mov
inc
pop
mov
clc
mov
aam
jo
cltd
andb
std
insl
lret
xchg
icebp
adc
or
jnp
pop
out
daa
test
jno
jge
fwait
fnstcw
or
cli
arpl
ficoml
cmp
xor
popf
sub
inc
and
clc
inc
cmp
cltd
pop
jbe
pop
gs
cmp
or
adc
dec
ss
mov
add
jmp
mov
mov
add
or
pop
fstl
cmp
pop
lds
mov
jmp
xor
cmp
insl
jbe
pop
clc
mov
mov
mov
push
add
xor
jp
mov
sub
push
movsl
inc
pop
ss
jle
notl
clc
pop
mov
imull
aaa
loopne
fdivs
jecxz
in
jb
sbb
mov
adc
pushf
divl
stc
loopne
or
outsl
int
push
cmp
mov
in
cmp
in
sub
cltd
pop
dec
jg
aam
or
cmc
or
xor
pop
mov
xchg
rclb
lcall
bswap
pop
mov
add
dec
xchg
sbb
lret
xchg
sub
push
ss
test
adc
adc
mov
pop
inc
mov
inc
mov
xchg
add
fwait
mov
dec
mov
sbb
jno
xor
rolb
sub
inc
xchg
test
dec
fwait
mov
rolb
jl
push
pop
add
cli
sbb
push
movsl
and
ret
jo
iret
jmp
iret
rol
cltd
xor
push
pushf
xchg
imul
sub
jno
out
std
jno
add
sub
gs
pop
orb
jg
adcl
mov
divl
iret
jp
cli
sbb
pop
adc
pop
mov
aad
xchg
pop
adc
cmp
jae
mov
jbe
sbb
xchg
inc
jo
cltd
add
test
sbb
stc
ret
adc
cmpl
fildl
xlat
inc
adc
nop
pop
inc
ret
lea
bound
pop
rclb
rcl
and
test
decb
imul
jns
ja
jb
in
test
cld
mov
dec
or
push
fisttpll
hlt
push
push
insb
xchg
xchg
call
loopne
cltd
loop
mov
sbb
cs
xor
jp
enter
xchg
loopne
xchg
and
and
js
cmpsl
mov
repz
sbb
mov
jecxz
jae
inc
mov
into
jno
sbb
inc
imul
cmpsb
cmp
mov
sti
pop
test
ret
mov
lahf
and
fdivrs
mov
lods
out
adc
mov
out
inc
ret
jne
sub
fisubs
mov
out
pop
jge
adc
mov
sbb
pop
or
inc
sub
pop
loopne
mov
jge
dec
mov
mov
imul
and
mov
pop
mov
jmp
inc
adc
sti
cld
sbb
out
scas
mov
xchg
sahf
imul
outsb
sub
fmuls
jge
dec
pop
int3
sub
xor
stos
bound
into
pusha
xor
cmc
sti
push
and
ljmp
pop
in
insb
adc
enter
repz
sbb
mov
mov
sub
mov
mov
inc
or
cmpsl
add
lods
dec
pusha
cld
pop
push
or
outsb
insl
lea
add
mov
dec
pop
xlat
imul
addl
adc
jne
inc
out
cmp
aas
daa
jmp
jne
inc
cmpsl
pop
cmc
inc
std
mov
dec
adcb
dec
lds
jp
push
mov
jne
add
pop
gs
addr16
xchg
adc
cld
and
in
push
lock
dec
sti
jno
fsubs
sub
rcll
dec
dec
pop
xor
sub
dec
mov
data16
sbb
test
inc
jns
dec
mulb
push
push
and
sbb
loopne
scas
out
inc
push
out
hlt
xlat
jne
mov
cmp
mov
enter
pushf
or
mov
cmp
pop
gs
rolb
ds
sbb
xchg
sub
popa
hlt
and
pop
mov
jb
adc
sbb
iret
mov
popa
sbb
sub
mov
movsl
dec
cmp
jle
push
jmp
icebp
stos
ljmp
fcompl
dec
and
lahf
cltd
hlt
cmp
test
inc
push
mov
fcomps
jb,pt
push
pop
mov
pop
imul
sbb
sbb
in
add
mov
fst
andl
andl
jbe
sbb
arpl
inc
or
stos
push
jge
cs
add
push
and
push
mov
inc
mov
or
jg
enterw
aad
mov
cmc
xchg
and
in
mov
int3
pop
scas
call
test
and
jo
cmp
xchg
xchg
fbld
out
mov
cmp
ret
stc
pop
push
cmc
xor
lock
push
icebp
lock
mov
pusha
jle
xor
xchg
stc
or
sub
mov
movsl
imul
push
xchg
push
dec
fistl
stos
gs
iret
add
push
pop
push
arpl
mov
rclb
daa
xor
test
je
lods
and
mov
mov
mov
mov
or
outsl
jo
mov
jmp
jne
and
pop
test
js
push
je
in
loopne
pop
aaa
leave
jg
xchg
jne
add
in
xchg
insb
mov
outsb
push
cltd
sub
or
dec
in
jno
leave
aam
fistpll
cmpsl
cwtl
jp
mov
aas
mov
pop
dec
stos
mov
out
mov
pop
dec
adc
cli
and
adc
into
es
inc
out
pop
inc
int3
mov
pop
nop
loop
in
xchg
jp
mov
sub
mov
mov
repz
jge
and
mov
fcmovnu
lea
loopne
test
mov
cmp
daa
outsb
sbb
jle
int3
mov
mov
loop
sub
rcll
aad
xor
lret
addl
xor
xlat
out
inc
cmp
cmp
mov
jne
inc
jge
hlt
lds
stos
icebp
or
movsl
xchg
and
adc
bound
cltd
mov
gs
push
scas
ds
scas
sbbl
in
mov
add
je
das
out
xor
mov
sub
or
sahf
mov
adc
notb
fcomps
gs
inc
mov
and
mov
xor
dec
jmp
movsl
push
xchg
js
jb
xor
aad
add
in
push
jno
mov
fwait
dec
add
popf
add
cmp
jae
sbb
mov
dec
lret
inc
xchg
jmp
mov
mov
adc
je
std
sar
aaa
or
pop
dec
int
ja
mov
popf
mov
or
sbb
jge
dec
leave
sbb
add
rcl
inc
ds
mov
jmp
lret
enter
inc
cmp
mov
pop
mov
cs
push
jbe
lock
lret
sub
pop
nop
stos
mov
shrl
jne
dec
jg
adc
pusha
mov
jno
add
pop
nop
xor
inc
popa
and
dec
cmp
mov
das
adc
aas
dec
push
or
lods
shld
ja
iret
out
push
cltd
ljmp
pop
fnsave
push
jmp
scas
leave
xor
add
dec
push
ljmp
xor
out
cmpsb
xchg
fidivl
mov
pop
xor
lcall
jp
lock
push
push
mov
loop
pop
sub
push
jp
and
push
enter
mov
fld
rcl
stos
sub
push
jnp
mov
clc
pop
sbb
xchg
dec
arpl
mov
idivb
aas
cmp
mov
jecxz
hlt
fs
xor
cmp
cmp
mov
and
sub
add
cs
jle
inc
push
and
loopne
mov
cmpsb
pop
add
pop
lea
gs
inc
adc
jne
add
repz
stos
jp
out
rcr
stos
mov
mov
fbstp
inc
push
dec
xchg
push
pop
nop
cmp
pop
mov
cltd
jmp
mov
filds
movsl
inc
fiaddl
repz
jno
lea
jmp
sub
push
in
ja
and
shrl
sub
les
mov
push
test
rcr
or
repz
dec
ret
sbbl
mov
mov
cmpl
add
lret
icebp
rcll
test
iret
sbbl
std
fwait
adc
aad
add
mov
push
out
scas
xchg
xor
and
jns
repz
jb
adc
pop
or
sbb
pop
ljmp
js
adc
push
mov
mov
arpl
in
mov
fcompl
lret
inc
or
jne
fnstenv
xlat
xor
in
movsl
mov
rcrb
daa
pop
jne
mov
scas
pop
popf
xchg
cmp
insl
xor
pop
dec
xchg
and
push
jge
in
cmp
sahf
in
stos
xor
sub
inc
lds
xor
stos
pop
dec
mov
fnstcw
and
dec
cmp
aam
mov
mov
jae
mov
push
popa
adc
arpl
pop
add
adc
inc
inc
and
dec
push
jo
cwtl
aas
adc
lcall
xchg
mov
dec
mov
sub
pop
enter
jge
xchg
cwtl
jae
xchg
popf
mov
mov
and
pop
inc
inc
jecxz
jle
jmp
loopne
sub
dec
mov
dec
push
int
lcall
and
std
cmpb
dec
or
repnz
jne
cmp
mov
cmp
fidivs
mov
fsubs
in
pusha
lret
es
stc
inc
mov
fisubl
adc
push
arpl
dec
fwait
fs
push
push
fcoms
xchg
fucomi
loopne
mov
jo
ds
mov
cmp
fsub
je
inc
or
inc
xchg
dec
dec
mov
data16
daa
mov
scas
mov
leave
mov
push
aaa
sbb
mov
push
xor
lcall
add
into
and
mov
psubsw
mov
mov
das
daa
stos
cmc
and
mov
fwait
iret
leave
leave
push
and
pop
push
divb
push
outsl
sbb
test
int
test
inc
push
push
xor
lds
ret
or
ds
or
aas
fldt
cli
cwtl
and
cmpsl
aaa
mov
ljmp
push
xor
mov
lds
or
out
sbb
fbld
sub
add
xor
into
jp
pusha
sti
subl
test
enter
sbb
dec
mov
xchg
sti
jnp
fld
insb
mov
call
adc
adc
jnp
cli
fldenv
mov
in
cmp
lret
pop
test
fcmovu
popf
inc
sti
jno
lods
cmc
test
mov
mov
movsb
fcoms
scas
ss
sahf
mov
xchg
push
movsl
jg
inc
jns
das
pop
jmp
mov
adc
mov
iret
ljmp
neg
jp
mov
xor
and
rcll
pop
lds
in
xor
pop
sub
fadds
push
stos
mov
iret
mov
add
adc
or
imul
aas
dec
xchg
andb
into
push
mov
jl
into
jmp
or
jle
adc
add
pusha
adc
mov
mov
mov
scas
cmp
xor
jno
cmpsl
bound
and
jg
cmp
lahf
scas
dec
inc
fistpl
in
inc
iret
push
xor
xchg
dec
incl
aaa
mov
xor
jg
jle
push
test
les
mov
addr16
popf
scas
lock
in
push
dec
dec
cmp
mov
cmp
hlt
mov
pop
fidivrs
push
xlat
popf
mov
rorb
test
mov
mov
cld
bound
outsl
inc
lahf
mov
mov
int3
jns
int
enter
hlt
lods
mov
cmc
dec
in
cmpsl
lock
xchg
daa
int3
in
or
sub
xor
sbb
hlt
mov
add
mov
out
imul
dec
fiaddl
dec
pop
movsb
pop
aad
push
lods
fdivs
lds
iret
mov
mov
jae
cmp
mov
push
fwait
rcr
mov
xchg
push
sti
stos
mov
mov
ljmp
mov
movsl
roll
pop
outsl
jg
jecxz
aas
in
mul
add
mov
mov
xor
imul
pop
inc
sub
dec
inc
daa
aas
imul
fdivrl
test
xchg
insl
cmp
add
fisttpll
mov
popa
cmp
dec
mov
pop
andb
in
outsb
fwait
bound
das
lahf
and
xchg
mov
dec
jge
jb
leave
test
stos
xchg
mov
sbb
fcmovbe
sbb
mov
mov
dec
push
xor
inc
stc
or
call
popa
add
sub
lock
fcomps
fneni(8087
insl
sub
push
mov
out
fwait
data16
cmc
data16
dec
daa
dec
pop
jg
lds
cld
jecxz
pusha
mov
pop
lods
std
mov
cmpsb
jp
sahf
sti
int3
je
inc
enter
pop
xorb
dec
mov
aas
sbb
bswap
mov
push
dec
repz
or
jmp
je
xor
xchg
sbb
cmp
call
inc
out
addr16
out
push
inc
into
sbb
and
mov
xchg
aam
test
xor
jp
inc
je
jle
dec
pop
cwtl
out
ffreep
adc
inc
sbb
lret
push
push
xchg
and
xor
cld
out
and
push
cmpsl
add
dec
cltd
bound
or
sub
enter
lcall
xchg
push
add
sti
xor
data16
sbb
sub
addl
lods
fists
mov
lods
add
fwait
mov
ret
sub
pop
add
test
pop
ds
fmull
push
add
incb
data16
and
mov
daa
int
repnz
cmp
mov
xchg
mov
test
cmp
test
add
outsl
jo
push
lret
addl
jg
mov
xchg
outsl
or
sahf
mov
movsb
dec
xchg
bnd
das
enter
div
xchg
dec
and
test
mov
stos
repz
fwait
int3
movsl
and
pop
mov
sbb
loop
push
mov
adc
push
mov
adc
stc
add
ss
jp
jne
push
testl
pop
pop
lcall
mov
jecxz
popa
jae
push
adc
pusha
leave
insb
ror
daa
fistl
test
outsl
dec
cmp
sub
xchg
inc
movsb
adc
add
pop
sub
jb
outsl
scas
ror
mov
dec
aad
jl
push
fcoms
jae
les
sbb
inc
into
int3
mov
shrl
clc
pop
cmp
mov
jnp
sbb
pop
dec
lods
add
sub
subl
mov
xacquire
and
movsl
js
add
fcomps
lahf
mov
fs
dec
test
inc
pop
lret
inc
aas
ret
stos
xor
sub
mov
inc
ror
lock
imul
fdivl
addb
gs
pop
add
fsubr
out
iret
aam
lret
mov
and
adc
push
sbb
and
push
aad
leave
repz
int3
adc
pop
cmp
mov
das
nop
leave
roll
movsl
xor
icebp
paddd
push
lds
push
xor
fmull
xchg
out
cwtl
rcrl
xchg
cmp
adc
sub
or
push
cmp
xchg
ret
inc
add
rcrl
stos
add
cwtl
int3
decb
dec
dec
les
sahf
xchg
fdiv
das
out
adc
add
sbb
mov
pop
mov
xchg
cli
or
dec
arpl
insb
testb
add
sbb
pop
pop
and
mov
jae
jmp
xchg
jmp
adcb
dec
mov
fs
sub
test
xchg
pop
cmp
push
jmp
jae
bound
lock
movsb
inc
out
subb
jno
fidivrl
ja
subb
lea
inc
dec
add
popa
or
out
adc
mov
pop
cmp
xor
movsb
test
add
std
loopne
jp
lea
jne
in
outsb
fcompl
leave
mov
mov
pop
inc
in
insb
cmpsb
jl
adc
jo
test
stos
adc
popa
inc
mov
lds
xchg
inc
sbb
std
daa
ds
mov
outsb
popa
xchg
cld
mov
adcl
xor
int
out
push
aad
fwait
mov
mov
ret
nop
mov
adc
je
fcoml
test
ja
pop
push
xor
mov
dec
mov
ljmp
sahf
lcall
jns
pop
mov
lods
fimuls
lods
out
pop
outsb
xchg
and
pop
sbb
add
adc
xor
fimull
sub
mov
cmp
pusha
mov
xchg
adc
movsl
arpl
jbe
xor
sbb
sbb
add
insl
movsb
xchg
adc
outsl
mov
bound
int
imul
sub
lods
or
lods
shlb
or
push
and
mulb
nop
ds
js
orb
mov
pusha
insb
and
sbb
mov
mov
pushf
sahf
out
int
je
mov
xchg
sub
lods
or
cmp
nop
cmp
sub
movsl
mov
mov
rclb
pop
sbb
popf
mov
leave
push
nop
mov
lods
or
int
or
xchg
clc
cmc
lock
popa
mov
mov
fldt
pop
test
fdivl
mov
mov
jae
mov
mov
inc
popa
ja
stos
cmpsl
js
mov
xchg
pusha
shlb
ret
das
std
ds
mov
icebp
imul
popa
bound
mov
pop
or
in
ds
addb
add
sub
xchg
int3
lods
xchg
xorl
lcall
push
push
jne
inc
fdivl
pop
pop
data16
cmpsb
int3
popf
adc
pop
scas
out
ljmp
lea
out
inc
xchg
fisubs
push
add
mov
xchg
cmp
mov
jbe
std
sbb
mov
jb
inc
into
and
es
pop
movsb
push
repnz
es
jne
inc
popf
ror
pop
andl
shll
sbb
jns
xchg
les
popf
lret
lret
es
les
xchg
out
add
jnp
and
mov
push
pop
sbb
aas
add
imul
ficompl
mov
sbb
arpl
cmp
xchg
xor
fs
sub
mov
ja
adcb
and
ss
inc
pop
pop
cmp
fldl
cmp
pop
pop
int
lret
push
or
xor
pop
push
mov
xchg
dec
repnz
push
lds
pop
cmp
add
es
cmp
stos
fisttps
or
xchg
iret
or
pop
js
sub
mov
imul
jne
xchg
lds
jp
rorb
rorl
lds
dec
rcrl
inc
wbinvd
pop
inc
pop
lcall
jge
mov
mov
dec
rcr
xor
or
addr16
cmpsb
hlt
push
xchg
inc
jge
cltd
test
xchg
cmpl
jo
fcoms
xchg
rol
and
sbb
adc
test
mov
jmp
xchg
xchg
add
xchg
cld
pop
lret
mov
mov
xchg
add
mov
and
bsr
adc
sub
movsl
and
adc
xor
les
pushf
cmp
call
dec
push
hlt
jne
lret
sub
push
add
mov
mov
mov
push
repnz
mov
cmp
jnp
xlat
mov
dec
sbb
or
cld
repz
pop
aam
cwtl
push
mov
fwait
ja
scas
xor
inc
inc
push
sub
push
inc
xchg
and
mov
push
out
pop
test
jge
lcall
popa
scas
add
popf
clc
pop
jo
ja
jmp
jge
mov
dec
popf
fnsave
inc
ja
out
fisubrs
cmp
das
and
cmp
scas
push
sub
loope
lock
jno
gs
int3
cmp
push
xchg
jno
xor
dec
adc
add
xor
mov
pop
decb
dec
gs
insb
fs
test
dec
mov
push
jns
xor
ret
pop
mov
scas
lock
daa
sub
aaa
sbb
xor
mov
inc
enter
pusha
push
jg
sub
outsl
push
inc
test
xlat
setle
mov
in
test
cmpl
and
jnp
adc
push
mov
ret
inc
out
pop
imul
dec
je
lods
sbb
cmp
cltd
pop
mov
cmp
sbb
mov
push
movsl
adc
or
pcmpeqb
dec
xlat
jle
mov
mov
inc
jl
fldl
xor
push
dec
or
les
gs
lcall
loop
or
or
test
sub
cs
sbb
outsl
sbb
iret
fmull
lahf
mov
sub
rcl
pop
jg
outsl
lds
add
lock
aas
hlt
js
add
xlat
xchg
loopne
cmc
je
jne,pt
scas
push
fsub
es
mov
inc
jmp
scas
inc
in
sbb
hlt
lods
adc
pop
jnp
cmpsl
rclb
xor
mulb
outsb
cmpsl
mov
addb
add
xchg
aaa
mov
mov
fldcw
negl
inc
ss
outsl
arpl
xchg
mov
add
add
inc
test
push
add
dec
sub
sub
fistl
test
sbb
sub
lods
push
ret
pop
enter
jmp
jl
sub
scas
cmp
pop
icebp
js
mov
sbb
stos
and
jae
cld
xchg
lds
cmpsl
pop
pop
movl
or
and
sbb
pushf
jg
arpl
gs
push
xchg
repnz
and
shlb
jae
ret
add
mov
cmp
in
sbb
push
mov
mov
adc
xchg
xchg
insb
mov
lret
cld
cmpsb
adc
push
mov
sub
push
sbb
stos
fsubs
scas
pop
dec
loopne
fwait
mov
bound
dec
stos
mov
mov
loop
adc
dec
lods
clc
lcall
push
add
jecxz
pop
mov
sub
lea
inc
std
sbb
daa
push
pop
ret
pop
xchg
lret
pop
mov
out
aad
push
lret
push
jg
ljmp
push
adc
imul
fs
mov
movsl
inc
push
fsts
xchg
push
pop
lock
stos
fcoms
mov
scas
cmpsl
sbb
test
pop
mov
and
rcrb
fwait
or
insl
dec
lahf
inc
out
fstpl
cmp
jle
pop
jnp
adc
stc
in
mov
pop
and
dec
jmp
and
cmp
jae
mov
jg
sbb
cli
add
aad
notl
pop
mov
mov
xor
mov
rol
and
pop
shl
sub
loop
push
inc
and
fdivrp
lahf
nop
adc
stos
rcll
nop
adc
xor
pop
mov
push
pop
pop
movsl
pop
sbb
and
jp
pop
ds
sahf
mov
mov
inc
stos
clc
push
popf
test
in
cmp
jl
push
xchg
and
rcr
imul
in
jnp
in
mov
cmpsl
jns
cmc
insl
xchg
pop
push
sub
lods
cmp
in
push
fdiv
mov
mov
nop
inc
mov
sarl
rcr
dec
fiadds
sbb
dec
mov
pop
fwait
add
lock
push
enter
dec
orb
je
jno
and
push
fstps
frstor
out
imul
xchg
cli
std
mov
test
jp
fbstp
int3
repnz
lret
cmc
push
jl
pop
aas
out
jge
pop
inc
cmc
mov
aam
lock
repz
in
bound
sbb
pop
sub
pop
addr16
cs
jg
fstl
idiv
dec
add
rorb
fcoml
mov
hlt
nop
lock
cmp
das
lahf
orb
leave
add
sbb
aam
scas
fwait
cmp
sbb
push
pop
jge
out
arpl
daa
cmp
subb
jb
sbb
rclb
mov
add
cmp
jg
mov
insl
cmp
scas
cmc
add
ret
lret
xchg
lods
push
ljmp
int3
mov
dec
xchg
mov
adc
jbe
xor
push
loope
sbb
cmp
insb
bnd
or
arpl
xchg
sahf
les
cmp
push
push
mov
dec
pop
sub
push
mov
sbb
mov
sbb
outsl
inc
pop
adc
cld
cwtl
jbe
lea
pop
mov
ss
ret
arpl
scas
outsl
jl
xor
and
jb
mov
inc
arpl
in
rolb
repnz
push
dec
mov
loopne
mov
sbb
jmp
and
rclb
cmp
addl
outsl
fs
cltd
xchg
leave
bound
scas
popa
in
hlt
fildll
xchg
jns
pusha
push
gs
dec
pop
hlt
icebp
inc
int3
rcrl
clc
jmp
leave
sub
testl
dec
pop
inc
push
mov
aam
mov
cmpsl
fwait
ret
pop
add
incl
loop
cmc
enter
cmc
jmp
sbb
popf
cs
adc
mov
lahf
add
daa
jo
in
xorb
lds
mov
pop
lret
jb
xchg
insl
rolb
adc
cmpsb
insb
mov
jnp
adc
int
and
lods
jge
negb
adc
mov
pop
test
inc
or
xchg
sub
adc
sbb
mov
xor
data16
cmp
pop
clc
sub
int3
sub
xchg
mov
mov
lret
jo
rcrb
movsb
pop
imul
lret
adc
dec
cmp
mov
cld
xchg
pop
ret
push
xchg
or
pop
mov
shrb
sti
pop
orl
mov
sub
jp
daa
mov
cmp
dec
scas
dec
jecxz
in
repz
je
mov
leave
xor
dec
icebp
mov
xor
out
outsl
sub
jne
adc
and
inc
pop
sub
cmp
adc
xor
fwait
pop
fimuls
movsb
dec
loopne
es
xchg
mov
sub
sub
ljmp
repnz
mov
ret
insb
dec
adc
xor
jnp
shl
xchg
dec
dec
mov
adc
lds
pop
xchg
scas
ss
mov
and
pushf
jbe
scas
inc
dec
mov
inc
faddl
sub
xchg
icebp
mov
mov
test
stos
lcall
inc
js
sub
xchg
pop
js
rcrl
add
mov
rol
nop
stos
ds
ficomps
jbe
dec
adc
and
movsl
push
pop
pop
test
xchg
cmp
in
arpl
dec
adc
xchg
out
and
xchg
test
push
jle
cmpsb
dec
call
sbb
lret
cs
push
sbbb
pop
bound
out
xchg
add
in
cmp
fcompl
cs
pop
in
xor
or
addb
push
jl
stos
fisubrs
inc
into
jg
stos
lods
cwtl
sarb
dec
add
repnz
sbb
scas
adc
jl
xor
outsb
mov
aam
lret
ds
in
sbb
and
dec
jmp
dec
popf
sbb
pop
adc
repz
outsl
pop
data16
fiadds
out
imul
aad
mov
cltd
mov
loope
rorb
cmp
bswap
imull
rclb
mov
ficomps
sub
and
pushl
fsubrl
push
or
sub
inc
ds
mov
test
enter
arpl
xor
cmp
xor
cmc
ljmp
addb
loop
cmpl
popf
es
data16
push
cmp
inc
push
ljmp
inc
add
popf
sahf
in
cmp
mov
idivb
mov
jnp
sbb
jl
addl
ja
sub
sbb
and
push
cwtl
fwait
shrl
or
daa
pop
insl
scas
repz
sub
ss
pop
dec
xchg
jecxz
adc
mov
adc
cmpsb
popa
jmp
add
cmp
pop
cmp
xor
inc
mov
pop
lret
icebp
pop
cli
imul
stos
sahf
cwtl
fistpl
loope
inc
mov
test
mov
pop
in
stos
lea
test
adc
js
inc
dec
mov
xchg
aaa
cli
dec
jl
inc
rcll
aaa
mov
ljmp
ret
mov
mov
mov
mov
fdivr
sub
sbb
xchg
pop
mov
mov
pushf
test
cmp
inc
js
jns
dec
sub
sub
xchg
ds
jns
cld
pop
push
inc
jge
mov
loopne
lea
loop
mov
call
cmp
nop
imul
push
or
sbb
fwait
jmp
js
shlb
inc
call
cltd
mov
stos
sub
movsb
xor
imul
sti
mov
and
dec
into
pusha
fists
shl
mov
sbb
mov
cli
gs
movsl
jbe
outsb
adc
xchg
mul
cmpsb
cmc
andb
push
jns
iret
push
inc
hlt
jb
xchg
loopne
repnz
pop
xchg
nop
and
cmp
mov
insl
orl
mov
mov
cmpl
mov
leave
xchg
mov
scas
sub
or
iret
adc
jg
inc
mov
hlt
pop
lcall
pop
or
mov
stc
test
xchg
in
nop
pop
inc
stc
sub
pusha
pop
mov
enter
mov
mov
jne
inc
cli
idivl
dec
in
sub
rcrb
lods
lods
pop
daa
cmp
or
pop
test
sahf
in
cmpsl
js
dec
fimuls
cmpsl
cs
mov
stos
jg
jo
xchg
loopne
movsl
dec
fwait
cmp
sbb
or
dec
sti
sti
xchg
cli
jge
mov
mov
and
push
mov
dec
push
int3
xor
cmc
add
xor
fs
xlat
repz
and
std
cmp
mov
adc
jmp
mov
or
push
cmc
movsb
cmpsb
in
jne
mov
mov
push
mov
arpl
mov
clc
dec
sbb
ss
xchg
xor
nop
mov
push
les
iret
in
jp
mov
test
iret
push
jne
stos
les
test
movsbl
sahf
test
jge
pop
jnp
dec
and
jg
or
les
xchg
repnz
mov
cmpsb
pop
mov
mov
stos
inc
adc
gs
ds
mov
jns
sbb
fcomp
lcall
add
ljmp
dec
fmuls
sbb
icebp
pop
xchg
sub
sbb
pop
cmp
loop
test
pop
leave
lods
jl
pushf
mov
push
push
adc
push
ja
or
icebp
mov
mov
mov
mov
loop
jbe
mov
jae
pop
xchg
push
movsb
roll
push
cld
repnz
cmp
pop
mov
dec
movb
jns
cmp
insl
add
idivl
xchg
popa
gs
sbb
pop
sbb
pop
test
cmp
lods
js
dec
les
push
xchg
and
add
outsb
xor
mov
in
cli
aam
insl
lds
mov
jg
pop
cltd
es
fstpt
in
stc
nop
xor
mulb
lret
push
push
stc
out
jno
scas
mov
iret
dec
bound
daa
lret
xor
cs
int3
sub
popa
inc
negb
mov
mov
dec
mov
xor
pushf
mov
out
decb
mov
int
or
adc
dec
std
arpl
adc
repz
sub
and
cli
jecxz
movsb
cld
fmul
jmp
imul
ds
and
sub
sahf
fidivs
cmpsl
movsl
jae
lcall
fisttpl
in
sbb
pop
sub
leave
jne
fmull
jp
xchg
inc
xchg
cltd
f2xm1
loopne
push
add
push
test
jb
adc
cld
sbb
mov
aaa
aas
mov
mov
or
shld
pusha
stc
clc
daa
cmp
adc
lcall
push
mov
or
push
pop
cmc
test
dec
enter
xchg
push
adc
xchg
cmp
sbb
int
popa
add
jmp
jb
jb
lds
leave
js
inc
pop
ljmp
cmpsl
mov
push
xor
dec
or
imul
pop
mov
sub
ret
lret
dec
rclb
jecxz
jae
mov
cmp
push
sar
xchg
loopne
sti
push
nop
xchg
ret
roll
dec
dec
mov
sub
fs
popa
fstpl
xor
mov
cmp
std
inc
mov
cmp
mov
pop
push
inc
ja
cli
pop
mov
mov
mov
pop
fs
sbb
gs
push
call
xchg
popa
das
dec
or
inc
es
bound
negb
sbb
sbb
mov
xchg
jle
sub
in
cld
adc
out
dec
jne
add
mov
push
rcll
sub
mov
push
shld
jns
mov
loope
data16
and
push
pushf
idivb
popa
mov
jne
mov
adc
cltd
add
daa
in
xor
sbb
in
fstpt
jno
adc
pop
xchg
aad
sub
push
mov
loopne
xlat
pop
ret
mov
lds
ds
leave
idivb
cmc
or
jo
xchg
cmp
pop
pushf
sub
aad
into
jl
inc
cmpsl
mov
imul
or
pop
push
fsubs
push
jge
and
pop
cmpsl
icebp
and
sub
in
fwait
dec
es
popa
push
cmp
les
mov
out
mov
imul
mov
cmc
lret
call
sub
dec
lods
cmp
sub
outsl
repnz
sarb
pop
fimull
addb
mov
push
mov
pop
xchg
out
mov
cmp
sub
std
fsubrs
movsb
inc
mov
cmp
mov
and
out
mov
xchg
sub
mov
das
insb
fcmovnb
jg
xor
lods
mov
or
imul
outsl
jp
cmp
ja
mov
or
lock
inc
sarb
push
mov
xor
stos
lock
xor
mov
xchg
adc
sbb
gs
push
add
jp
jns
aaa
cmp
data16
mov
xor
push
pop
adc
call
bound
add
insl
ds
sbb
and
cmp
push
jle
repnz
mov
dec
stos
test
rolb
les
sbb
dec
aaa
sbb
fstl
or
push
cmp
mov
xchg
mov
jl
push
inc
sbb
fists
movb
fucom
ret
in
movsb
xchg
bound
cmp
xchg
dec
xor
inc
imul
sarb
dec
add
sbb
add
out
fucom
popa
mov
outsb
add
mov
pop
xchg
jmp
loop
push
lahf
std
sbb
mov
add
dec
mov
popf
mov
mov
xor
mov
aad
adc
sbb
cmp
in
clc
imul
arpl
sahf
xchg
mov
push
lea
cmp
pop
fdivs
push
idivb
mov
loopnew
pop
outsb
adc
cli
iret
arpl
inc
lret
inc
out
sarb
xchg
inc
outsl
aaa
jo
mov
addr16
fs
stos
xor
push
je
adc
adc
inc
div
rcrl
push
and
fs
inc
negl
into
xchg
lcall
jb
mov
aam
loope
lds
popa
arpl
pop
mov
rcll
fstpt
inc
imul
idivl
into
sbb
pop
out
jecxz
imul
dec
pop
mov
jo
cmpsl
fcmovb
out
mov
sbb
das
xchg
sbbb
mov
and
mov
andb
pop
mov
push
loopne
and
adc
or
std
inc
and
push
sti
push
dec
repnz
pop
hlt
and
mov
mov
pushf
lea
js
in
movsb
fstpt
loope
loopne
inc
sbb
shlb
rcll
cmp
subb
push
ret
xlat
fs
movsl
inc
out
mov
jle
xchg
int
icebp
shlb
pop
xchg
lds
pop
or
lea
outsl
lods
jae
and
sub
lock
sbb
sbb
xchg
sahf
or
push
testb
dec
adc
mov
popa
push
aaa
dec
push
test
stos
mov
subb
es
pop
repz
ret
nop
in
inc
rorb
adc
mov
jb
ja
movsl
xchg
mov
or
out
pop
sahf
cld
adcb
mov
push
xchg
jp
mov
or
jnp
cmc
lock
cmp
js
xchg
sahf
adc
shl
pop
or
xchg
repnz
mov
sbb
out
inc
les
cs
inc
popf
cs
push
cmp
stos
mov
push
mov
xchg
call
sbb
or
xchg
jb
rcrb
dec
mov
xchg
sbbl
cmp
mov
ror
xor
mov
xchg
mov
fldenv
cltd
add
adc
jns
in
push
cmp
xchg
test
jnp
or
mov
insb
stos
sbb
popa
movsb
push
push
sbbb
sub
repnz
fcmovnb
sub
mov
cwtl
mov
xor
ja
or
inc
or
mov
xchg
add
fucomi
sub
jle
mov
jb
jnp
in
cmpb
iret
add
das
sub
icebp
aam
test
mov
hlt
ret
jo
stos
sarl
es
pop
insl
addb
adc
xchg
hlt
pop
and
xchg
jnp
adc
xchg
push
adc
stos
cmp
mov
jne
xchg
cmpsb
insl
xchg
lea
xchg
push
jno
pop
aad
sub
adc
mov
mov
push
dec
fidivs
jnp
fdivp
mov
ja
or
fs
and
int
lret
xor
loop
or
cmp
sub
popf
movsl
sbb
scas
addb
add
shlb
into
xchg
sbb
test
pop
sub
adc
jl
inc
xor
pop
inc
xchg
negl
pop
mov
cmp
femms
out
inc
mov
push
in
pop
pop
nop
dec
lods
add
inc
cmp
adc
aas
repz
dec
lahf
test
fs
bound
test
push
mov
push
jle
out
push
and
add
repz
fsubrl
adc
dec
add
sub
jecxz
test
pop
lret
push
fadd
icebp
mov
jl
stc
ljmp
jno
cmp
cmpsl
sub
pusha
jns
or
mov
xor
and
push
xchg
jp
in
je
test
mov
dec
mov
das
add
push
dec
and
cmpsb
jp
dec
pop
jo
scas
pop
push
jno
and
jecxz
mov
mov
jmp
sbb
addr16
fs
mov
push
test
sar
cmp
int
jbe
sbb
pop
mov
shll
addl
push
roll
push
mov
sti
fistpl
push
movsb
sub
inc
mov
loop
xchg
out
xlat
test
cli
inc
jp
adc
lea
push
fldcw
out
es
out
mov
movb
sub
push
jnp
push
jmp
nop
test
add
out
pop
test
mov
daa
sub
imul
mov
cmp
lretw
xor
and
mov
fcompl
mov
mov
pop
inc
xor
jnp
out
mov
jmp
mov
xor
ficomps
shrb
std
jmp
mov
inc
in
add
xorb
mov
sbb
push
jle
test
popa
inc
idiv
pop
jle
in
mov
mull
mov
mov
pop
in
scas
push
imul
popa
bound
pop
loopne
fldt
iret
enter
in
stos
jmp
outsb
push
cli
or
mul
pop
flds
jnp
jns
xchg
inc
xor
jno
andl
rcrl
push
pop
shlb
stc
or
loope
out
push
jae
ret
cmp
in
xlat
cmp
fcompl
jecxz
xchg
in
insb
int3
lea
jle
mov
mov
cmp
push
scas
flds
inc
cmpsb
inc
jecxz
call
mov
leave
sbbl
adc
mov
pushf
loope
mov
xchg
pop
push
stos
cs
imul
out
lock
pop
cmpsl
es
mov
and
inc
pop
mov
xadd
in
stos
repnz
stc
cmc
loop
sti
lcall
sti
ljmp
dec
lret
shr
add
test
pop
and
sbb
add
mov
stos
mov
test
cld
movsl
mov
jns
pop
mov
push
ja
add
xor
xchg
ja
cltd
xchg
lds
cs
nop
push
pusha
je
das
inc
imull
dec
cmp
in
dec
mov
cmp
insl
dec
aad
arpl
add
cld
fisttpl
in
dec
ret
sub
pop
subl
rol
jp
fsubrl
and
jae
pushf
pop
push
xchg
stos
mov
gs
pop
fidivrl
sahf
pop
or
cmpsl
gs
stos
mov
jle
mov
sbb
push
stos
clc
addr16
cmp
lret
shrb
clc
cmp
add
lods
lods
xchg
rolb
xor
iret
mov
pop
cmpsb
add
adc
out
pushf
div
mov
lods
jns
pop
aas
mov
cmp
repnz
jmp
out
or
mov
mov
sbb
sbb
push
negl
mov
fwait
xor
mov
push
imul
xchg
sbb
mov
pop
xor
and
loopne
inc
xor
bound
lret
pop
movl
push
into
adc
jmp
mov
nop
fnstsw
mov
and
cmc
adc
mov
subl
mov
movsb
mov
sbb
xchg
ds
jp
and
dec
int
leave
push
inc
in
ficoml
fiadds
sub
pop
test
inc
fsts
jo
cmp
sbb
mov
or
mov
adc
inc
and
or
fdiv
aaa
in
fmull
in
dec
and
xor
and
add
lods
mov
add
inc
inc
add
push
jne
mov
cs
das
sbb
fldl
inc
pop
xchg
and
movsl
mov
inc
clc
addr16
jp
pop
outsb
add
sub
xchg
adc
lods
push
cmp
xchg
fisttps
ja
sub
fsub
jecxz
sbb
fists
xor
ret
aaa
xchg
xchg
push
fcmovb
add
cmp
aaa
int3
insl
or
nop
lahf
add
outsb
pop
sub
call
nop
and
sbb
sub
cmp
insb
sub
mov
xchg
out
pop
jbe
push
cmp
out
jg
and
aad
mov
roll
push
sbb
stc
insl
inc
cmp
mov
arpl
mov
pop
jg
dec
outsl
dec
int3
sub
stos
rolb
pop
jmp
cmp
jmp
ret
dec
gs
daa
mov
pusha
jnp
push
loopne
pop
xor
out
pop
lret
add
leave
aad
in
cs
ljmp
data16
out
inc
mov
push
inc
fs
ficompl
xor
fisubs
test
out
mov
xor
shlb
pusha
xor
cld
push
sbb
lods
mulb
clc
cmp
scas
in
call
lahf
out
sub
or
mov
adc
add
add
jbe
push
das
sahf
out
sub
iret
mov
push
hlt
jbe
in
out
movsl
fs
movb
xor
push
pushf
sbb
rcrl
hlt
hlt
js
pushf
sbb
jecxz
in
xor
cmp
push
pop
push
or
inc
fs
xchg
add
dec
sbb
dec
and
jnp
mov
jg
clc
xor
pop
inc
xor
lods
jno
mov
iret
or
dec
sarl
mov
xor
push
xchg
jne
add
and
lods
inc
mov
lahf
cmp
ljmp
or
movsb
add
lock
cmp
or
es
cmp
gs
and
mov
repz
jp
mov
loop
add
scas
push
xor
mov
cmpsb
mov
imulb
int3
mov
and
frstor
out
xchg
xor
or
pushf
sub
or
push
push
fdivp
div
cld
push
xchg
sub
insb
test
push
jmp
iret
lahf
lock
mov
mov
scas
sbb
cmpb
jbe
add
int
mov
and
popa
xorl
push
mov
stos
mov
jg
hlt
testb
dec
std
daa
mov
leave
sbb
cmpsb
add
int3
mov
adc
sub
mov
xchg
ret
xlat
sti
testl
aaa
or
into
mov
push
aam
dec
repnz
mov
sbb
xor
sub
daa
pop
pop
adc
sbb
stos
setno
cmp
in
mov
add
insl
or
mov
pop
fstl
or
ret
push
mov
jl
loope
xlat
xchg
in
das
insl
fbstp
and
popf
pop
mov
push
cmp
cmp
cld
xor
ljmp
mov
popl
inc
stos
lds
int3
pop
cmc
push
fldenv
leave
js
movsl
sbb
xor
cmc
adc
call
sbb
dec
mov
out
arpl
outsl
mov
cmp
push
out
sbb
lret
pushf
fisubs
cmp
cli
rcrb
cwtl
popa
and
lcall
xchg
cmp
shll
adc
push
sub
repz
fisttpl
push
popf
out
call
xor
addb
loope
je
mov
xchg
test
push
inc
xchg
xchg
or
or
dec
pusha
cmpl
cmpsb
xchg
pushf
es
inc
mov
movsb
mov
mov
loopne
dec
mov
xchg
mov
jmp
inc
sbb
pop
ret
jl
ss
fiaddl
xchg
adc
jo
add
cli
cltd
push
push
shll
cmp
dec
adc
pop
ds
arpl
sub
sbb
dec
psrad
and
loopne
popf
pop
out
jnp
test
outsb
daa
cmp
js
adc
je
rol
rcll
adc
mov
mov
add
incb
push
divl
jns
jne
xor
nop
push
fisubrs
pop
inc
dec
pop
sub
data16
cmp
xchg
dec
mov
add
mov
scas
icebp
movsb
outsb
xorb
test
arpl
test
push
into
xchg
fimull
jo
into
sub
in
adc
dec
fcmovbe
xchg
aas
add
adc
popf
sbb
dec
push
mov
dec
inc
lea
add
addr16
xlat
cltd
xor
pop
divb
sarb
xchg
and
aad
lock
pop
xchg
stc
dec
push
in
add
jne
or
pop
lcall
lret
xor
aaa
jnp
outsb
adc
int3
dec
lock
cmpsl
push
inc
bound
aam
lods
and
jno
inc
bound
scas
and
adc
mov
je
nop
lret
arpl
cs
lods
pop
fdivrl
adc
and
lock
and
jns
and
push
mov
ja
inc
movsb
push
mov
inc
dec
nop
and
out
ja
inc
sbb
push
stos
fmuls
mov
fsubrl
adc
rcr
mov
sub
fsts
inc
in
sbb
rcrb
popa
inc
xor
andb
mov
pop
test
mov
addl
imul
mov
aad
cltd
int
in
ret
scas
mov
cmp
aad
iret
lods
rcr
imul
mov
sbb
xchg
xlat
repz
pop
js
inc
or
adc
dec
cmp
orb
mov
adc
hlt
pop
movb
stc
and
in
shrb
or
cs
jp
fadds
in
or
cmp
jo
pop
push
sbb
xchg
xchg
cmpsl
mov
and
fnstsw
in
cwtl
ret
and
push
js
or
cmc
in
mov
cs
xlat
jb
repz
mov
mov
sbb
pop
push
fiadds
and
pop
addr16
loopne
aas
jle
jg
dec
sti
mov
jno
fstps
or
int
and
sub
push
test
or
ja
stc
push
and
test
sbb
or
xor
ds
push
out
xor
sub
pop
loopne
push
xchg
sbb
les
xchg
cmp
mov
fwait
and
xor
pop
sub
push
xchg
fiaddl
push
jl
pop
pop
mov
pushf
notb
mov
lea
inc
adc
add
xchg
ficomps
mov
clc
in
dec
cli
push
mov
icebp
mov
sbb
shlb
xchg
jo
mov
jecxz
cld
mov
div
adc
dec
out
inc
frstor
repz
or
ljmp
inc
mov
mov
mov
lods
pop
fsubs
mov
repnz
ja
cmpsb
add
jae
daa
sbb
nop
xor
cmp
sarb
mov
stc
mov
rcll
push
test
pop
sub
mov
imul
lcall
mov
cld
jle
jne
leave
fwait
stos
fsts
or
jp
push
ret
inc
movsb
mov
and
fcompl
mov
mov
divb
jmp
dec
insl
pop
cmp
lcall
mov
pop
mov
inc
sti
pop
lods
inc
addr16
aad
negl
jl
cmp
fists
sbb
mov
mov
int3
adc
test
push
mov
insb
sbb
aad
mov
sbb
cmpsl
lds
inc
scas
pop
roll
fidivl
lret
ja
outsb
mov
rol
movsl
jle
sbb
jns
test
dec
dec
adc
xchg
pushf
jg
out
inc
xor
mov
cmp
xlat
xor
aas
push
or
cmp
insb
aad
in
sbb
or
mov
dec
push
test
out
rcrb
ljmp
cmpsb
sub
xchg
sti
fucomip
aam
sbb
inc
shlb
fwait
es
out
sub
sbb
add
sbb
ss
and
xor
inc
rcll
nop
fnstcw
je
mov
add
pop
js
inc
hlt
ljmp
sub
imul
test
pusha
mov
lods
mov
pusha
repz
add
mov
inc
pop
jge
cltd
lods
inc
movsb
mov
orl
inc
cmpsl
imul
pop
insb
adc
jb
cmp
sub
les
or
fwait
adcl
add
sbb
mov
mov
push
aam
cwtl
pop
push
inc
mov
das
sub
pop
jmp
and
outsl
mov
xlat
negl
in
pop
sub
or
push
lret
aam
inc
mov
xor
push
stc
inc
adc
dec
sbb
sbbl
sbb
and
insl
pop
jg
sbb
bound
add
lods
pop
orb
mov
lods
push
inc
mov
sbb
mov
and
inc
sbb
mov
loop
in
fucomp
mov
lea
stc
loop
mov
xchg
xor
jecxz
pop
pop
ffreep
adc
aad
mov
inc
xchg
mov
lods
in
mov
les
andb
xchg
mov
add
xchg
push
or
cmc
adc
movsl
ja
test
out
push
mov
or
push
pop
je
mov
in
mov
push
jge
sahf
dec
cmp
imull
add
pop
addr16
cs
jo
jmp
in
xchg
cltd
xchg
sub
cli
call
add
popa
shrl
inc
jns
dec
push
dec
sub
and
sahf
add
add
out
and
inc
imul
imul
in
jo
dec
push
inc
leave
push
pop
fbstp
cmp
scas
pop
pop
sbb
outsb
je
sub
gs
stc
sbb
mov
jp
adc
stc
loop
icebp
cmp
push
js
dec
and
fcomi
pusha
or
lcall
pop
loope
into
or
outsl
jb
imul
shll
mov
sub
loopne
jbe
lea
push
ljmp
mulb
imul
outsb
cltd
and
cs
imul
in
pushf
arpl
jle
lock
inc
mov
push
jl
dec
pop
jnp
sbb
arpl
pop
push
mov
xchg
loope
push
das
mov
clc
int
inc
stos
or
ja
inc
mov
das
mov
rcrl
mov
sub
aam
out
outsb
sub
stc
dec
icebp
imul
mov
int3
jle
iret
cvttps2pi
cmp
mov
es
mov
pop
mov
stc
xor
enter
mov
insb
ret
jnp
loop
lds
jno
xorl
adc
test
gs
sub
inc
xor
push
xor
mov
mov
icebp
pop
lret
or
jnp
dec
pusha
mov
inc
stc
btc
in
push
hlt
test
std
movsl
arpl
jo
add
je
lds
aad
adc
fs
add
aaa
pop
jp
std
out
roll
inc
mov
icebp
or
sub
sub
out
outsb
sbb
mull
and
outsl
inc
mov
jge
call
xchg
lret
push
adc
sub
fistpl
push
sub
xchg
sbb
inc
movsl
and
insb
fsubrp
mov
and
push
mov
push
daa
repz
xchg
lock
roll
adc
and
insb
cli
add
dec
and
mov
mov
idivl
pop
inc
dec
fnsave
xor
negl
lods
xchg
rcll
mov
or
sub
push
cmpsl
xchg
and
subb
loop
int
jecxz
sbb
out
inc
xchg
cmc
outsb
sub
cld
jno
push
dec
push
pushf
cmp
cmp
fists
ja
sub
dec
adc
xor
mov
jae
jne
mov
loop
and
xlat
xlat
mov
add
popf
sbb
jecxz
jg
lods
or
jb
xchg
lods
js
stos
pusha
inc
cmc
ret
push
add
jecxz
cmp
test
push
fldcw
mov
ljmp
scas
aam
or
mov
enter
sbb
ja
mov
das
mov
das
dec
push
sbb
sub
or
ss
test
outsl
fsubs
inc
cmp
in
xor
xor
xchg
fmuls
or
mov
push
insl
cmp
pop
out
mov
add
test
arpl
inc
icebp
scas
fcmovb
loope
or
jge
dec
xchg
push
lock
mov
cmp
mov
mov
xchg
cmp
push
into
stc
pop
pushf
stos
cmp
jne
repnz
dec
adc
lret
movsl
xor
fcmovu
xchg
in
stos
orb
adc
aam
add
mov
imul
jns
repz
push
roll
in
dec
mov
daa
aas
lods
xchg
dec
arpl
dec
pop
inc
nop
pop
mov
sub
and
adc
loopne
shll
mov
pop
dec
adc
sti
daa
mov
and
push
dec
clc
pavgb
call
pop
push
push
aas
and
outsl
jo
imul
clc
cmp
ret
jecxz
lret
into
loope
cmpl
mov
imul
add
hlt
lahf
leave
push
test
mov
adc
movsl
pop
or
mov
add
ret
scas
inc
inc
xor
inc
mov
add
mov
adc
das
out
sub
fdivs
rolb
scas
jecxz
hlt
ss
mov
mov
mov
pop
xor
nop
aas
call
icebp
sbb
jg
call
stc
aas
jae
inc
mov
fwait
daa
adc
orl
pop
fnstenv
daa
pop
sub
out
lahf
push
popf
sbb
int
push
dec
lret
or
mov
jo
jno
jo
repz
cmp
sti
pop
or
shll
pusha
xchg
repz
lret
dec
or
out
mov
inc
push
add
lret
jp
xlat
pop
sub
pop
cwtl
outsl
sti
mov
cwtl
hlt
lret
lea
or
cmpsb
fists
loop
adc
fstpl
enter
or
inc
ss
jg
scas
lods
pop
test
inc
pop
fmull
lds
subb
jo
testb
in
xchg
loopne
into
jnp
sbb
dec
sbb
cmp
fwait
add
or
cltd
adc
bound
cmpsb
jae
daa
int3
xor
pop
lock
fs
popf
ja
sahf
inc
aad
mov
dec
mov
ja
in
dec
sbb
mov
and
inc
imul
stc
imul
lock
lds
or
adc
xchg
fisttpl
cld
cld
ss
test
jo
add
mov
stos
dec
add
idivb
lcall
lret
inc
inc
pop
cltd
push
outsl
popa
push
aaa
xchg
or
repnz
ljmp
lcall
or
mov
sahf
dec
and
rorl
inc
xor
dec
jnp
jns
cmp
cmp
push
test
lods
nop
insb
push
fldt
mov
shrb
dec
jecxz
xchg
outsb
cmp
push
inc
ja
lret
dec
js
pop
in
push
stos
clc
es
cmp
sbb
push
sbb
xchg
test
push
pushf
arpl
jnp
pop
inc
inc
stc
push
dec
add
js
adc
mov
aam
roll
and
scas
cmpsb
cmp
mov
cmp
loope
stc
add
xchg
dec
and
jmp
jo
mov
cmpb
inc
push
stos
xor
adc
dec
xlat
sub
popl
mov
repz
cmp
nop
fwait
outsb
aam
pop
xlat
imul
aaa
xchg
mov
popf
sti
inc
shl
xchg
add
rcrl
adc
mov
fwait
or
cmp
pop
push
pushf
fmuls
xchg
je
adc
lds
pop
xor
dec
xlat
lret
enter
daa
push
and
or
sbb
mov
mov
scas
addr16
push
inc
sbb
lret
push
xor
pop
push
cmp
mov
xor
lock
push
inc
xor
addr16
sub
push
xor
mov
pop
pushf
push
lea
xor
xchg
ds
and
rcll
xchg
lock
movsb
sbb
shrb
and
push
or
sub
lahf
pop
fisubrl
mov
mov
xor
xchg
xor
lods
mov
xor
sbb
mov
cmpsb
popf
cld
cld
fmull
mov
push
in
fnstenv
leave
xchg
mov
jg
addr16
int
mov
int3
mov
fstp
jbe
dec
inc
in
pop
pop
icebp
dec
mov
or
arpl
sbb
dec
stos
xor
mov
insb
sar
insb
mov
xchg
outsb
and
les
xchg
jnp
mov
notl
popa
cmp
pop
icebp
js
sbb
lret
jge
mov
into
ds
mov
pushf
jnp
insl
pushf
mov
jae
xchg
icebp
gs
xchg
stos
xor
out
outsl
insl
sub
loope
mov
mov
or
sub
fsubrs
xor
xchg
in
adc
jae
inc
ds
lds
xlat
pop
lret
jne
cs
jo
mov
bound
bound
pop
andb
gs
iret
dec
dec
sbb
dec
outsl
pop
mov
loopne
push
subb
rcrl
cmpsb
fwait
cli
pop
stc
enter
loope
dec
mov
imul
adc
add
xlat
mov
jnp
cmp
push
mov
idivb
cmp
fisubrs
test
mov
xor
std
rolb
int
sahf
lret
daa
pusha
in
pop
pop
inc
dec
add
mov
mov
into
std
sbb
cltd
psrad
lea
aam
test
idivb
sbb
mov
dec
add
pop
leave
push
xorb
mov
hlt
adc
sbb
sbb
loope
pop
inc
sbb
push
mov
cmpsl
and
aad
das
fwait
outsb
paddusb
sub
sbb
dec
enter
std
int
push
push
or
pop
das
ret
inc
nop
jmp
push
and
jecxz
cmp
jp
loop
movsb
lock
aas
xor
push
and
les
popa
stos
inc
sbb
push
es
or
popa
pop
jge
and
dec
jge
sub
es
adc
outsb
cmpsb
daa
dec
mov
jno
lods
xor
js
loopne
in
adc
xor
mov
inc
xchg
neg
cld
or
inc
rorb
adc
xor
ficoml
mov
cmp
int3
in
subl
sub
insb
sub
lahf
int
fcmovne
inc
inc
and
je
imul
clc
push
mov
movsb
test
dec
cmpsb
int3
dec
sti
test
xchg
shll
fcomp
sub
repnz
xlat
xor
test
dec
jne
sbb
subl
sti
stos
add
fs
pushf
pusha
outsb
ret
push
in
mov
jne
daa
sbb
test
test
pushf
fsubrl
adc
xchg
test
sbb
fidivrs
and
fldcw
push
rcrl
jae
and
jno
mov
scas
aam
bound
mov
insb
fsubs
pop
stc
sbb
lock
pop
rol
and
ljmp
jg
mov
mov
and
mov
jecxz
mov
ss
nop
xchg
mov
addl
ja
test
call
mov
jecxz
adc
popf
or
inc
push
sub
pop
xor
scas
mov
loopne
aaa
mulb
cltd
popf
add
xor
or
test
enter
popf
aam
aaa
in
push
push
rcrb
ficomps
imul
mov
lods
push
dec
or
daa
mul
push
inc
fwait
sbb
mov
stos
inc
lods
into
mov
inc
lcall
mov
jmp
xchg
in
shlb
dec
dec
xor
cmpsb
stos
jno
inc
int
lret
cmp
cmp
pop
faddl
pusha
leave
in
push
repnz
vmwrite
pop
lea
enter
pusha
jne
sbb
sub
push
addr16
mov
jo
dec
les
add
and
dec
mov
pop
pop
testb
in
lock
xchg
adc
outsb
in
loop
pop
pusha
push
popf
push
inc
and
xchg
addr16
cs
xor
ss
insl
dec
lock
and
loope
adc
in
aas
adc
inc
pop
int3
lods
dec
xor
pop
ret
mov
in
int3
les
out
sbb
xchg
xor
cmp
psllq
cmp
jmp
add
inc
push
push
icebp
faddl
lods
pop
inc
mov
stc
add
add
mov
dec
push
shll
ret
popl
sti
cmp
pop
call
adc
jnp
lcall
mov
in
cmp
call
rorl
add
dec
iret
sub
aas
mov
pop
les
push
adcb
test
data16
aam
cmpsb
push
mov
mov
cmpsl
popf
int3
roll
ja
in
xor
movzbl
pop
testl
ja
and
xchg
leave
pop
xchg
mov
mov
sub
cwtl
pop
jae
jmp
test
out
sbb
iret
mov
ja
mov
push
push
imul
cmp
insb
shll
jecxz
popa
xchg
in
cltd
xchg
cs
cmp
xchg
int
loopne
es
adc
pop
cmp
xchg
xchg
mov
mov
push
mulb
addr16
pop
cmp
xchg
mov
dec
push
pop
rorl
addl
sub
xchg
ds
sbb
and
aad
lods
popa
dec
cmp
ds
fldcw
mov
push
sahf
pop
ja
adc
jo
in
mov
loop
jo
int3
sbb
fcmovnb
mov
jbe
adc
daa
popl
pop
cmp
shrl
pop
shll
hlt
std
iret
jns
int
push
pop
test
daa
dec
outsb
xor
adc
jbe
cmp
jnp
xchg
adc
inc
or
adc
jne
je
lret
xor
sbb
mov
jno
add
mov
sbb
mov
jno
call
ret
dec
rcrl
fbstp
stos
sbb
ret
daa
dec
mov
lret
std
xor
das
jno
lcall
inc
sub
aaa
mov
aam
orl
jns
out
xchg
sub
sub
add
orl
push
cwtl
pop
test
cmp
push
jp
mov
sub
mov
xchg
xchg
push
in
fprem1
sub
mov
pusha
or
xchg
mov
dec
outsb
std
pop
mov
insl
and
add
ljmp
jb
cmc
ja
insl
pop
bound
mov
lods
test
sub
daa
stos
cltd
sub
mov
cli
icebp
js
mov
prefetch
insl
aad
xchg
sbb
mov
imul
outsl
cld
cld
mov
sub
rcrb
pushl
sti
iret
fisttps
clc
mov
bound
pushf
shll
stos
add
test
cli
mov
push
xor
mov
push
xor
nop
add
inc
mov
push
push
mov
mov
je
scas
out
and
std
pop
fsubl
xchg
jle
push
cli
je
dec
inc
sarb
xchg
inc
imul
pop
stc
test
add
push
push
dec
mov
test
cmpsl
cmpsl
nop
inc
loope
mov
or
jo
in
lret
std
xor
pop
shr
or
outsb
mov
call
push
leave
stos
lahf
xchg
in
loopne
jns
jae
sub
sbb
jne
bswap
pop
leave
inc
in
and
inc
and
cs
push
and
jnp
sahf
mov
aad
inc
lcall
pop
jno
lods
mov
mov
lahf
jae
lods
test
and
or
mov
lret
adc
mov
jge
jmp
adc
mulb
pop
leave
push
outsl
sub
add
dec
mov
and
mov
inc
popf
insl
mov
scas
movsl
cmpxchg
dec
cmp
in
std
and
sub
stc
cmpsb
scas
dec
xchg
stos
and
sbb
decl
imul
lods
sub
cmp
add
pop
jae
dec
pop
mov
mov
and
xlat
add
push
out
inc
pusha
jae
testl
mov
cmova
cmp
outsl
mov
inc
imul
pop
xchg
in
xchg
dec
test
lods
repnz
and
jecxz
add
jnp
pop
cmp
dec
push
gs
sbb
popf
xchg
push
inc
movsb
mov
sbb
sub
push
xchg
clc
and
in
fiaddl
adcl
fldt
sbb
cmp
add
add
icebp
push
pop
adc
stos
xor
push
adc
mov
inc
sub
out
jno
shlb
cmp
lcall
gs
iret
scas
push
add
push
stos
push
jp
lods
fdiv
dec
outsl
sahf
inc
cwtl
in
out
pop
adc
jmp
mov
pusha
fdiv
xchg
mov
inc
roll
popf
or
mov
sub
or
cmp
stc
mov
insl
and
mov
adc
jns
mov
mov
movsb
in
repz
mov
jne
mov
cmp
jg
call
and
inc
or
pusha
jo
pop
ffree
cwtl
into
sbb
mov
repz
call
loop
in
test
mov
sahf
lock
sarl
sar
xor
mov
ret
das
into
pop
xchg
jecxz
add
jg
std
adc
cmp
dec
mov
xchg
lret
inc
jp
or
cli
ljmp
pop
js
and
mov
shlb
subl
stc
test
out
sti
outsl
push
out
pop
sbb
xchg
push
mov
push
adc
or
xor
ficoml
adc
into
icebp
insb
inc
xchg
pop
fisttpl
mov
add
push
stos
mov
and
cmp
inc
fldt
sub
sahf
add
and
pop
addr16
jge
sbb
arpl
pop
decl
xor
lods
dec
std
jbe
mov
jg
inc
xchg
mov
xchg
cmpsb
loopne
pop
int
cwtl
movsb
push
test
adc
jb
push
inc
mov
inc
sub
jge
fs
xor
aas
in
sbb
mov
mov
mov
jns
push
lods
mov
cmp
cwtl
push
fdivrl
add
or
inc
and
pop
pop
add
popf
testl
add
push
pop
push
enter
adc
pop
jmp
test
fnstenv
sti
leave
mov
mov
jno
or
adc
cmp
jl
ljmp
xor
sbb
jle
je
sbb
mov
test
cmp
cmc
mov
mov
les
sub
ja
and
inc
ds
aaa
adc
pop
adc
into
inc
pop
and
test
nop
lds
fnsave
stc
jl
xchg
sbb
jnp
fwait
adc
mov
dec
mov
jl
iret
sub
ds
and
mov
icebp
fildl
sti
dec
mov
sub
xor
push
cli
iret
shlb
sahf
sub
stc
dec
shlb
mov
mov
sub
test
pop
push
imul
jnp
test
or
mov
push
dec
sbb
scas
sub
sti
mov
pop
push
add
push
xchg
in
pushf
and
je
icebp
mov
mov
scas
jne
and
int3
pop
push
dec
and
test
mov
or
hlt
inc
push
imul
push
push
add
push
hlt
nop
addl
addl
mov
ljmp
dec
imulb
pop
pop
leave
in
xorl
add
popf
dec
inc
ds
stos
leave
test
or
push
mov
test
jno
stos
adc
xor
pop
mov
jno
add
push
mov
fwait
mov
test
movsb
leave
push
jmp
push
shrl
cmp
fwait
xchg
pop
mov
inc
ficoms
fildl
adc
dec
mov
fcmovnbe
imul
fwait
inc
mov
movl
mov
add
sub
pop
ja
sti
mov
mov
or
aas
sbb
xor
pop
gs
jmp
inc
je
gs
inc
and
mov
lret
fadds
cmp
dec
inc
sub
push
mov
dec
sub
pop
or
cmp
jo
ficoml
and
icebp
push
lods
mov
push
or
jle
or
popf
and
in
xchg
lret
add
pop
loope
inc
mov
mov
inc
pop
scas
dec
adc
and
scas
inc
pop
mov
xor
in
jo
inc
pop
xchg
push
jb
ds
mov
sub
clc
sahf
push
iret
dec
push
xor
mov
and
or
iret
and
mov
fcmovnu
push
scas
das
dec
or
out
fwait
test
gs
mov
pop
add
adcb
or
and
cmp
xlat
aad
push
jb
add
mov
dec
inc
int
sbb
sbb
add
iret
pop
mov
jbe
call
push
adc
imul
jg
nop
adc
push
sub
mov
test
pop
movsb
pop
pop
mov
rcll
insb
das
insl
cmp
pop
sub
pop
cmc
fnstcw
rcrb
push
push
xchg
lea
sub
jmp
mov
pop
js
xchg
out
xchg
ret
add
shr
xor
pop
data16
lods
or
sbb
bound
push
pushf
mov
lcall
sub
mov
insb
xchg
push
lock
pop
mov
sub
xor
ljmp
xchg
add
dec
and
repz
mov
xchg
sbb
add
imul
xchg
jb
inc
dec
pop
xchg
adc
repnz
cli
or
inc
lds
imul
movsl
mov
aas
fs
repz
in
ret
stc
or
dec
ja
arpl
ss
push
xchg
rolb
mov
pop
dec
stc
xchg
or
jns
xor
ret
inc
add
push
sub
adc
jp
bnd
push
insb
jp
cmp
push
fsubl
xchg
aad
jnp
iret
ret
push
mov
dec
pop
adc
sbb
pop
jge
xchg
insb
leave
jae
mov
lods
cmp
iret
mov
stos
fldt
jns
dec
rcrb
stc
jae
in
popa
in
into
lret
test
into
leave
mov
out
pusha
pop
in
push
sbb
aad
jae
pop
repz
pop
fstpl
sub
aas
pop
add
jb
negl
push
rcl
fisubs
inc
fcomp
cmpsl
int3
dec
je
pop
int3
cmpl
das
out
addr16
leave
xorb
mov
adc
mov
les
insb
cmp
cmp
outsl
add
movsb
jge
jne
in
aaa
je
out
imul
push
js,pn
add
out
pop
jg
testl
add
into
std
mov
das
sub
inc
popa
insb
in
dec
push
in
js
inc
inc
mov
push
leave
fnstsw
jmp
jo
or
popf
aad
js
and
into
sbb
cwtl
mov
imul
sub
fsub
xchg
mov
jnp
leave
movsb
and
and
icebp
dec
lods
ret
test
dec
jl
fnsave
push
push
ss
into
aaa
xchg
fwait
pop
mov
in
dec
mov
testb
lds
ret
or
mov
dec
push
inc
nop
loope
stos
fistps
mov
repz
push
cmp
mov
ficoms
dec
shll
lea
cwtl
sbb
mov
loopne
out
inc
fwait
adc
mov
cmp
decl
aas
pop
bswap
icebp
testb
jne
push
insb
cwtl
nop
pop
in
dec
mov
sbb
fs
in
in
cltd
inc
rolb
xor
and
pop
pop
inc
add
sub
pusha
push
jnp
sarl
push
jmp
mov
aaa
ljmp
adc
jo
adc
outsl
add
fidivl
ljmp
nop
scas
ds
add
repnz
stc
fmull
hlt
push
xchg
icebp
mov
xchg
aaa
inc
xchg
jmp
dec
jno
jg
out
jecxz
mov
inc
fdiv
mov
and
jl
lods
inc
sti
pop
fidivl
loopne
or
mov
and
adc
clc
in
mov
push
mov
in
cli
push
stos
jge
dec
cld
daa
and
aaa
out
gs
xor
mov
nop
adc
fwait
test
cmp
cli
test
lock
int3
xchg
ljmp
pop
mov
lret
pop
insb
and
or
mov
pusha
std
pop
jecxz
and
mov
inc
nop
ljmp
fstpt
insb
jp
push
push
sbb
push
inc
stc
mov
dec
sbb
rclb
mov
sub
push
add
inc
outsl
cwtl
rorl
lea
stos
adc
aad
fs
icebp
and
daa
mov
cmpsl
fstl
test
push
adc
push
adc
push
cmpl
scas
fiaddl
cwtl
adc
adc
inc
lock
daa
pop
pop
jmp
and
in
popf
mov
je
add
and
and
and
iret
mov
xadd
adc
fmull
in
and
xchg
push
add
inc
