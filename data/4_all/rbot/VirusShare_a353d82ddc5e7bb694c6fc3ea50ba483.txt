inc
inc
xlat
dec
xchg
rorl
movsl
or
inc
jecxz
pop
push
popf
rcr
or
stc
mov
jecxz
mov
loopne
pop
out
inc
rol
push
outsb
pushf
mov
out
scas
fidivrl
ds
cmpsb
jp
aam
int3
mov
inc
jnp
inc
testb
pusha
xchg
or
push
xchg
or
and
xor
or
push
movntps
sbb
push
add
push
and
push
dec
in
or
or
dec
or
adc
dec
daa
or
enter
fbld
adc
sub
addr16
popf
dec
lock
inc
sub
jp
add
adc
dec
push
xchg
pop
inc
pop
mov
or
push
inc
inc
test
inc
cmp
repnz
mov
mull
sub
add
or
or
and
push
into
lea
push
aas
adc
sti
mov
in
test
insb
mov
mov
call
loope
into
cmp
pop
sbb
xchg
mov
mov
daa
in
fbstp
dec
dec
adc
in
lcall
adc
mov
jp
adc
iret
cmpsb
inc
loop
or
mov
jno
mov
inc
in
leave
jne
into
jg
xchg
jns
adc
test
pusha
adc
dec
aas
dec
stos
movsl
and
push
sub
ds
push
adc
jo
inc
pop
sub
lods
xchg
sub
call
int
add
stos
pop
mov
sub
adc
xor
inc
pop
out
mov
jno
xchg
mov
into
jo
mov
or
sti
les
add
mov
notl
loopne
sub
popa
aaa
pusha
into
adc
lcall
jne
lcall
push
cmpsl
and
aas
setg
stos
je
xlat
cs
dec
sub
push
jl
sbb
insb
cmp
nop
ljmp
movsb
push
and
addb
aad
push
push
pop
push
dec
add
sbb
inc
aaa
fmuls
and
das
or
fcomps
or
sahf
cld
sahf
pop
aas
inc
adc
mov
fsub
push
stos
bound
and
les
push
xchg
lea
pushf
test
aas
arpl
sbb
push
sbb
xor
or
lcall
into
nop
inc
leave
int3
adc
fwait
je
pushf
je
add
insb
rcl
pushf
das
push
mov
cmp
and
int3
adc
jp
sub
ss
loopne
cmp
lods
std
sbb
jecxz
mov
mov
frstor
dec
in
imul
loop
ret
xchg
jnp
xchg
in
lods
inc
lcall
scas
or
aam
fsubl
mov
mov
dec
mov
pop
push
xchg
or
mov
sub
mov
lcall
out
divl
negl
mov
adc
cli
push
push
push
adc
pop
out
or
clc
and
mov
movsb
and
jne
stos
mov
inc
jne
out
call
movsl
adc
daa
pop
jne
adc
mov
adc
aam
xor
xchg
jbe
inc
movsb
fldcw
push
push
lds
lock
xor
sub
mov
icebp
stc
sbb
bound
xchg
mov
fwait
sub
jg
xchg
or
orb
insl
pop
sub
aaa
xor
fst
stc
mov
inc
stc
pushf
inc
push
mov
loop
sbb
cmp
push
sub
mov
imul
lea
popf
mov
cmp
pop
push
dec
rclb
xor
ja
jbe
pop
roll
xor
adc
pop
pop
pop
fcmove
mov
sub
nop
ss
lcall
aam
push
inc
or
pmulhuw
pop
push
mov
mov
cmp
outsb
cmp
repnz
push
negl
vmovntpd
or
push
adc
int3
jmp
xor
pop
clc
in
push
jbe
jbe
dec
ror
add
js
adcb
adcl
mov
pop
paddw
jno
xor
cmp
pop
mov
add
scas
push
push
and
loope
adc
data16
jo
jo
mov
cmc
std
lcall
rcrb
sti
cmp
push
push
dec
or
mov
jns
xchg
addl
xor
loop
test
or
mov
cmp
imul
push
scas
mov
in
das
popa
clc
std
loop
mov
out
lods
mov
xor
popa
dec
or
out
jns
outsb
pop
xchg
mov
sbb
pop
mov
cmp
cmp
inc
dec
jp
outsb
ljmp
inc
int3
outsb
cmc
sahf
ja
das
sbb
pushl
les
js
pop
in
or
daa
in
sbb
push
jbe
aad
pop
xor
pop
jmp
adc
out
out
push
mov
xor
mov
mov
popf
movsb
sti
mov
repnz
inc
lret
scas
dec
xchg
popf
xchg
cmc
sbb
and
fsubs
ret
das
cmpb
pop
out
or
jp
pop
adc
mov
jge
mov
jecxz
add
and
mov
sub
test
xchg
jo
dec
mov
adc
or
in
push
push
and
jmp
pushf
push
pop
popf
out
mov
inc
cmovo
adc
jp
pop
negb
xchg
push
repz
jns
xchg
xlat
pusha
lods
or
insb
dec
loopne
adcl
dec
dec
arpl
cmc
movsb
mov
cld
mov
and
push
or
pop
jecxz
adc
loopne
xchg
insb
data16
or
data16
cmp
stc
xchg
cmp
mov
call
js
std
and
or
fwait
xor
sar
xchg
adc
pop
cmc
add
icebp
cmp
fcomps
inc
adc
call
out
pusha
pop
fxch
movsb
jno
ss
xchg
add
sbb
xor
pop
ds
jne
adc
fsubs
push
in
aas
sbb
jmp
shlb
xchg
adcl
les
hlt
shll
adc
ret
flds
mov
jge
jmp
pop
test
mov
movsb
stos
mov
sub
push
movb
lret
movsl
daa
aam
dec
and
jb
xor
mov
scas
and
mov
das
insl
mov
push
call
mov
ss
push
aas
std
dec
es
ret
test
mov
pop
sarl
cmc
add
test
and
icebp
xor
stos
mov
les
sbb
ficompl
jnp
push
cmpl
inc
jbe
roll
push
xor
mov
in
push
out
fs
sub
and
push
dec
sti
jns
inc
sbb
sahf
cmc
adc
hlt
push
mov
out
mov
pop
push
jl
fs
dec
shll
add
test
aaa
mov
aaa
das
call
mov
xor
and
icebp
mov
dec
dec
jns
stos
shrb
push
cmpsb
pop
cmp
mov
cmpsb
into
jbe
push
js
arpl
das
mov
xchg
lahf
sbb
push
jbe
and
test
fcoml
dec
ss
jo
scas
stos
sbb
out
jb
xor
hlt
cmp
leave
outsb
dec
push
dec
mov
cmp
add
psrlq
mov
rcrl
add
das
fcomps
xor
adc
fstp
cmp
mov
fdivrp
popf
cmc
imul
lcall
jge
in
test
fidivrs
and
bound
xchg
cmp
or
pop
int3
xlat
pop
int3
sub
lcall
sub
mov
movzbl
or
cmc
addr16
inc
inc
xor
inc
jl
test
jb
xlat
orb
mov
pop
repnz
scas
sahf
or
ss
rclb
pop
jnp
sbb
add
les
je
pop
nop
hlt
dec
cmp
or
shrb
out
lcall
sub
and
sbb
hlt
dec
or
daa
dec
outsl
movsb
enter
dec
add
inc
and
aad
insl
sub
shlb
aas
push
cltd
mov
arpl
call
mov
add
mov
dec
cmp
gs
adc
mov
hlt
mov
in
in
addr16
shll
stos
jo
std
push
pop
or
mov
dec
add
add
pop
sahf
test
les
mov
shrb
cld
add
sub
cmp
pop
lea
push
mov
pop
call
pop
dec
xchg
add
push
test
lds
mov
scas
pop
mov
test
push
jne
or
jl
sub
push
adc
xchg
jae
imul
mov
push
mov
push
mov
push
xchg
repz
xchg
dec
jmp
mov
or
cld
xor
incb
shll
lock
xlat
inc
dec
add
xchg
cmp
pop
and
lret
jge
je
mov
inc
js
and
and
jbe
and
sub
push
aad
call
sbb
jge
leave
rclb
aas
adc
push
adc
in
push
jp
sub
and
cli
sub
addr16
mov
jb
sbb
into
mov
and
sbb
pushf
jae
sbb
mov
ret
dec
jo
pop
into
sti
scas
pop
inc
dec
xchg
lret
push
outsb
mov
stos
mov
or
test
mov
mov
mov
add
xor
imul
or
mov
cmpb
in
or
hlt
movsl
ds
xchg
test
stos
test
out
cmp
lods
jo
cltd
rclb
adc
dec
pop
add
gs
dec
pop
mov
mov
add
xor
push
dec
push
in
push
ffreep
in
mov
push
insb
adc
das
movsl
movsl
sub
or
cmp
fwait
into
sbb
inc
and
dec
xor
xor
lock
imul
adc
push
imul
dec
or
repz
mov
dec
mov
mov
add
mov
pop
cmc
mov
sub
fs
lret
inc
imul
fwait
or
sbb
imul
clc
dec
jl
lods
push
clc
sbb
into
in
mov
pop
int3
pop
insl
into
xor
pop
xchg
aad
aas
testb
add
lret
jl
cmc
cmpb
add
mov
fwait
add
xchg
test
mov
loope
jle
pop
frndint
dec
and
imull
dec
test
std
pop
dec
aam
outsl
push
mov
mov
xchg
dec
adc
lcall
xchg
push
mov
std
cmc
pop
test
adc
sbb
mov
ret
pop
lock
pop
outsl
in
dec
es
loopne
pop
xor
pop
int3
andl
sbb
sbb
movsl
insb
jp
pop
outsl
xor
or
mov
dec
andb
add
xchg
out
test
cmp
jecxz
xor
enter
aam
inc
dec
inc
mov
xchg
int3
shll
mov
negb
lret
jnp
in
jnp
add
sti
push
loop
test
das
pop
int3
xchg
mov
mov
pop
sub
push
dec
cmpsl
ret
pop
cmp
cwtl
test
int3
les
insb
jle
hlt
xor
in
inc
inc
in
pop
fstl
and
mov
lods
mov
xchg
and
mov
dec
sub
push
repz
arpl
bound
mov
inc
pop
test
aas
mov
cmp
mov
push
or
test
sub
push
sub
test
mov
fisttps
orb
pop
inc
cmpsl
push
mov
jae
push
jp
insb
popa
push
add
or
addr16
cld
das
cs
pop
scas
pop
cmp
sub
push
loope
inc
xchg
dec
fs
add
lods
jp
sub
sub
call
xchg
test
aam
lods
xchg
ss
or
jmp
xchg
aam
adcl
adc
jnp
addb
movsb
pop
add
xorl
jno
test
aad
jns
js
shlb
popl
xor
pop
fsts
jge
enter
repz
pusha
sbb
cmp
shrb
aas
or
subb
push
popa
mov
dec
int3
mov
movsb
adc
pop
sarl
or
adc
out
frndint
in
popf
sub
popf
adc
icebp
pushf
stc
lock
push
mov
pop
push
dec
dec
sbb
mov
in
jae
jge
mov
adc
mov
into
lahf
xor
push
jl
mov
xchg
sbb
rorl
pop
movsb
lds
xor
push
adc
sbb
cld
je
and
popf
or
inc
push
cmp
and
gs
dec
adc
lods
add
push
imul
dec
adc
xlat
lods
dec
pop
pop
addb
cli
mov
mov
testl
in
popa
incb
push
mov
dec
mov
and
rcrl
sbb
js
adc
test
jne
lods
and
dec
xor
mov
insl
lret
icebp
or
movsl
movzbl
fidivrs
jbe
push
lea
inc
scas
add
dec
or
mov
cmpsb
lods
test
cmp
std
mov
push
test
push
sub
cli
xor
adc
in
enter
aas
mov
movsb
jmp
outsb
or
dec
cmpsl
stc
orl
cmpsl
test
sbb
sbb
cmp
mov
push
daa
pop
call
adc
and
inc
add
pop
jecxz
adc
or
mov
les
pop
test
notb
sub
aam
push
dec
ss
inc
jns
mov
inc
add
pop
cmp
lret
xor
dec
cld
add
sbbb
push
sub
or
jae
pop
mov
mov
mov
lods
lea
mov
and
fistpl
lods
mov
ret
xchg
push
fistps
test
add
loopne
ret
pop
pop
in
adc
fstp
pop
out
jne,pn
push
adc
fwait
cmp
das
push
mov
adc
ret
adc
mov
rorl
lcall
movsl
shrl
roll
xchg
xchg
sbb
shlb
jge
xor
pop
in
sub
mov
and
out
sub
inc
loopne
outsl
dec
pop
pop
adc
sbbb
sbb
xor
cltd
lods
psubusw
inc
jne
aad
inc
push
aam
jp
dec
xor
push
popa
stos
xchg
lods
inc
pop
sbb
pop
adc
outsb
push
das
scas
inc
int3
inc
push
dec
setbe
inc
fstp
mov
mov
shlb
js
mov
scas
inc
sub
add
sti
lea
lahf
pop
mov
mov
push
push
fisubl
sahf
lods
aaa
fnstcw
inc
sysexit
fwait
dec
push
mov
xchg
stos
push
loop
rol
pop
sbb
push
dec
push
sbbb
outsb
mov
fwait
insb
mov
pop
push
pop
ja
xchg
movlps
xchg
mov
xchg
sbb
sub
jecxz
xchg
mov
sub
lods
cmp
imul
sub
lock
pop
lods
pop
int3
cld
sub
add
pop
pop
decb
push
jmp
and
ret
pushf
pushf
sbb
push
sub
addl
push
sbb
sub
in
es
mov
ret
rolb
push
cmp
or
stc
movsb
out
jno
sub
mov
pop
fadd
out
mov
xchg
jmp
inc
in
adc
movsl
push
decb
jmp
fnstcw
push
aad
mov
ds
dec
mov
sub
out
rcrb
pop
fstl
add
mov
mov
cmp
pop
mov
stos
test
sub
sbb
sub
cli
scas
adc
rclb
loop
cmp
pop
movsl
enter
ret
jg
pop
icebp
push
or
ss
je
pop
cmp
popa
in
add
frstor
xchg
mov
cwtl
pop
cmc
lldt
mov
shll
xor
add
or
jl
ljmp
adc
push
adc
out
aaa
cmp
mov
imul
clc
dec
lcall
sti
dec
lds
pop
and
mov
xchg
fsubs
lret
or
bound
out
pop
push
gs
test
vunpcklps
push
sub
std
xchg
mov
push
scas
inc
or
mov
syscall
cmp
inc
mov
xchg
in
xor
out
mov
and
jl
push
sarl
hlt
push
test
test
mov
out
xchg
mov
fnstcw
rolb
or
xlat
pop
call
push
or
imul
filds
dec
xor
mov
push
jns
loope
mov
xchg
adc
fcompl
jno
mov
sub
fldcw
pop
xlat
pop
fnsave
incl
rolb
adc
mov
jns
and
outsb
push
outsb
aaa
inc
movb
adc
cmp
stc
std
cli
cltd
mov
loop
fbld
fwait
mov
mov
dec
and
cld
sub
and
shlb
cs
shlb
fcomp
cmp
mov
fisubrl
push
imul
push
mov
push
dec
outsl
adc
jno
add
dec
sahf
insl
xor
lret
mov
test
imul
dec
scas
aaa
pop
shl
push
aad
push
into
jle
jp
pop
mov
adc
scas
cwtl
inc
std
cmp
leave
inc
add
xor
addr16
jmp
test
push
cmp
mov
push
or
lea
je
adc
in
add
sub
push
xor
pushf
ja
push
lret
cli
xor
xchg
mov
test
testb
and
les
xchg
movsl
mov
sbb
fcoms
insb
cmp
mov
xchg
add
dec
add
and
mov
pop
pop
adc
push
push
push
ss
dec
add
shl
ss
jns
nop
mov
clc
adc
fildl
jge
sarl
aad
fs
rorb
out
jno
sti
jl
pop
jg
sub
addr16
notb
pop
lods
addr16
in
sbb
movsl
lcall
mov
cwtl
pop
xchg
test
add
xor
push
pop
jp
jo
sbb
lods
fistps
mov
sbb
fimull
push
sub
dec
mulb
pop
faddl
rorl
lods
inc
loop
jns
add
inc
movsl
xrelease
lods
insb
shlb
jmp
sub
je
pop
cmpsl
mov
ret
sbb
enter
mov
push
jnp
stc
jle
mov
pop
jle
sbb
pop
bndldx
pop
and
sbb
fwait
addl
xchg
adc
test
dec
pusha
arpl
push
xor
mov
rcr
into
je
aam
jl
subb
insl
add
or
les
cltd
or
jecxz
sub
xchg
xor
leave
es
fmull
dec
mov
pop
lods
test
loop
jge
cmpsl
mov
add
js
das
or
push
push
add
lock
cmp
loope
xor
pop
sbb
mov
mov
dec
test
cs
fistps
xchg
ljmp
pusha
dec
mov
fdivrs
push
jns
fs
mov
xor
mov
fs
xor
push
test
mov
insl
das
xchg
data16
add
into
mov
stc
mov
push
mov
cwtl
scas
test
mov
jne
imul
jp
jae
lods
int3
jmp
aam
shr
mov
fimuls
js
xor
fimull
jp
xor
and
cmpsl
vmread
pusha
xchg
cwtl
das
mov
add
les
mov
ljmp
pop
imulb
sbb
nop
mov
in
jns
sbb
cli
popa
nop
mov
mov
jmp
in
and
ss
add
add
xor
enter
dec
cwtl
pop
fisubrs
jp
bnd
mov
rcr
arpl
push
cmpsl
das
or
clc
iret
mov
jb
sub
repz
xor
xchg
xchg
pushf
mov
out
ss
imulb
cld
mov
aad
push
je
mov
and
daa
aam
fmul
push
or
imulb
sbb
test
and
pusha
dec
pop
pop
mov
mov
icebp
inc
stc
sub
cmp
or
in
test
fcmovnu
mov
neg
fcmovnb
cli
pop
or
movsl
xlat
imul
adc
neg
or
in
les
push
stos
repz
imul
add
xchg
mov
imul
and
sbb
inc
out
sbb
addr16
mov
mov
mov
pop
imulb
or
xchg
pop
mov
adcb
mov
lea
push
ljmp
pop
insb
cmpb
jecxz
cmc
jns
dec
mov
dec
ror
mov
mov
fists
pop
stos
js
arpl
and
inc
lahf
clc
fwait
iret
push
jns
mov
dec
push
fadd
aad
out
and
pop
dec
xor
test
out
fwait
adcb
xchg
test
mov
nop
imul
or
push
adc
movsl
in
sub
daa
inc
fwait
testb
mov
xlat
pop
push
aam
xor
fdivs
xor
pop
sbb
scas
test
pop
mov
and
sbb
ja
iret
data16
push
jmp
sarl
or
ljmp
push
add
lret
or
or
data16
mov
mov
pop
xor
xor
mov
sub
outsl
mov
push
pop
test
pusha
cmpsb
insb
scas
gs
aaa
or
dec
imull
inc
pop
cmpb
lahf
ret
xchg
aam
bound
xlat
mov
test
push
jge
inc
or
pop
push
mov
cmp
in
mov
out
aas
jae
into
add
mov
sub
pop
push
xchg
sbb
cltd
adc
xor
inc
push
movsl
arpl
mov
add
jns
xorb
into
xchg
mov
push
or
jp
xor
shlb
push
mov
clc
push
inc
popa
push
or
push
gs
pusha
psrld
ret
inc
xor
inc
inc
iret
subl
mov
int
jae
push
scas
dec
sub
jno
mov
test
or
aas
and
sub
hlt
or
negl
add
sbb
sbb
jmp
sbb
xor
xor
add
sahf
loope
mov
cs
out
mov
hlt
dec
add
sbb
add
inc
push
nop
test
cmp
popa
inc
xchg
or
aas
inc
orl
shll
sbb
int
movsb
outsb
dec
dec
gs
movsl
and
ret
sbb
xchg
push
addr16
out
dec
lock
jb
jge
pop
addr16
addr16
cmp
inc
inc
cmp
push
test
push
push
rcrb
clc
jp
fadds
hlt
outsb
add
jns
sarl
pop
sub
xor
out
lds
outsb
mov
or
div
xlat
mov
jmp
push
mull
adc
icebp
sub
xor
in
xlat
pushf
fldenv
pop
jmp
or
push
pop
jl
adc
test
insl
lods
nop
jmp
push
or
fstpl
lcall
inc
lea
js
je
shl
sub
mov
jbe
lret
cltd
int
mov
cmp
fsub
jbe
adc
std
mov
jle
cmc
clc
jne
adc
or
jmp
ljmp
fcompl
stos
faddl
sub
int
rcll
int3
push
out
or
mov
jecxz
push
lods
mov
cmc
dec
psrlw
mov
cmp
mov
mov
dec
add
or
inc
inc
ret
jbe
subb
or
sbb
idivl
xchg
mov
adc
and
pop
mov
sbb
and
getsec
sbb
lods
aas
pop
int3
adc
jmp
aas
in
sbb
mov
and
adc
sub
addb
fisubrs
add
mov
rorl
addb
fbstp
mov
enter
add
mov
xchg
fs
mov
xchg
push
dec
test
sub
xchg
mov
mov
sub
incl
popa
movsb
mov
scas
jle
dec
lock
dec
xor
in
push
stos
pop
iret
aam
call
dec
or
adc
fsts
inc
dec
adc
inc
in
adc
fldt
pop
pop
outsb
loopne
push
mov
and
dec
out
sarb
orb
je
push
je
mov
out
cmp
sub
sub
inc
xor
or
inc
xor
loopne
insl
pop
leave
xor
push
add
mov
popf
push
mov
mov
mov
mov
pusha
fistps
pop
jno
sub
cmp
xor
in
imul
pop
in
fmuls
std
fadds
add
fmulp
inc
fnstenv
mov
imul
push
fs
in
pop
imul
rorl
add
push
mov
xor
jecxz
hlt
push
push
mov
mov
mov
adc
ret
or
js
jecxz
sbb
push
in
pop
cwtl
adc
inc
sarb
loope
ficompl
adc
lcall
lods
scas
jge
fldt
xchg
sbb
lods
test
dec
outsb
mov
test
popf
add
push
imul
shrl
lret
loopne
inc
cmp
xor
nop
and
mov
pop
xor
ss
jnp
push
sbb
int3
int3
je
out
jnp
push
adc
ret
stc
xor
sub
and
mov
sub
inc
out
js
or
out
sbb
xor
add
les
stc
lret
pop
or
mov
add
adc
insb
cli
ret
out
stos
imul
xchg
adc
movzwl
mov
pusha
or
in
sbb
dec
int
mov
jns
dec
inc
mov
cmp
das
jns
xor
mov
shrl
sahf
testl
lea
pop
loopne
adc
adc
out
sbb
mov
adc
xor
xor
cmpsl
out
push
mov
jne
and
jno
mov
dec
adc
out
mov
out
jl
aad
shlb
or
xchg
and
xlat
ljmp
outsb
out
jbe
rcrl
mov
je
out
pop
add
das
or
mov
lcall
aaa
sub
insl
shl
dec
dec
or
ret
lea
lahf
push
push
mov
lret
sub
dec
push
stos
cwtl
pop
dec
jl
dec
xor
in
mov
xor
push
adc
dec
cltd
in
mov
mov
pusha
adc
xchg
cmpsb
xchg
sub
jecxz
xor
or
nop
and
ret
and
jl
test
jb
mov
push
clc
add
mov
fsts
or
inc
icebp
movsb
or
push
cmp
lret
stc
push
cltd
xchg
xor
dec
sti
jg
adc
clc
outsb
gs
rclb
jg
xor
aam
dec
lock
loopne
jmp
add
paddb
lahf
leave
gs
jp
loope
push
pop
lods
dec
xor
and
xchg
out
mov
and
lds
gs
int3
flds
xor
cltd
mov
iret
mov
sub
insl
in
rorb
fcoms
imul
leave
rclb
inc
outsb
sti
bound
stos
ds
add
dec
xor
lock
mov
test
pop
xlat
adc
lcall
rcll
cmp
scas
popf
aam
mov
sbb
fcoms
jne
imul
mov
inc
js
movsl
add
outsb
xor
push
adc
xor
je
out
out
xchg
in
inc
jmp
sub
push
mov
daa
mov
or
push
pop
xor
in
mov
or
mov
jmp
addb
xor
aas
or
fdivrs
fwait
mov
daa
xchg
or
adc
jnp
ret
mov
rclb
int
sbb
outsl
jge
add
mov
lds
das
sub
sbb
hlt
in
and
out
mov
mov
or
rcl
fidivs
fadds
and
mov
push
sub
pop
shr
imul
push
jl
lods
out
daa
scas
dec
push
enter
ret
ficompl
jp
mov
or
movsl
stc
aam
jbe
sahf
or
data16
inc
icebp
pop
inc
dec
mov
sbb
jo
rorb
fwait
jne
pop
sbb
std
into
mov
and
and
xor
loopne
mov
push
mov
xchg
subb
sahf
outsb
imul
stc
je
mov
ss
or
jmp
addr16
shr
cmp
jp
jge
ja
into
push
pop
sub
stos
dec
pop
sbb
adc
jae
sbb
and
sub
dec
xchg
into
adc
sbb
orb
mov
out
sti
mov
jecxz
pusha
movsb
pop
rclb
mov
sti
sbb
jne
jle
mov
add
rolb
call
pop
adc
pop
aas
repz
mov
pusha
pop
push
jge
cwtl
test
lcall
jbe
pop
or
je
mov
mov
test
or
sub
and
add
test
mov
mov
es
fnstenv
mov
test
iret
push
add
aaa
outsl
in
xchg
fcomp
xor
cld
mov
and
call
and
xchg
xchg
es
outsb
in
dec
and
and
mov
mov
rolb
lods
inc
push
fsubs
shll
incb
dec
sbb
stc
sbb
lods
jl
in
lds
xlat
movsb
rcll
out
out
test
mov
push
lret
enter
sub
pop
int3
lret
clc
insb
add
push
sbb
movsb
jecxz
inc
pop
xchg
sbbl
mov
xchg
pusha
dec
aad
lret
push
mov
sbb
leave
push
les
add
mov
fs
lcall
and
pop
xor
pusha
xchg
rclb
xorb
pushf
push
out
adc
lods
xchg
aaa
xchg
ret
mov
adc
dec
or
add
sbb
add
dec
xor
mov
sbb
cmp
mov
cltd
push
fcmovnb
pop
add
mov
sbb
or
cmp
decb
adc
cmpsl
popf
iret
fnstenv
nop
xor
xchg
out
out
hlt
pop
push
fnsave
and
sbb
push
mov
or
das
lret
add
inc
cmpl
arpl
inc
test
mov
es
popf
ja
or
ss
je
idivb
popf
pop
and
mov
enter
loopne
jecxz
lds
popa
es
dec
mov
inc
fistpl
pop
inc
xor
scas
stc
sbbb
pslld
inc
mov
rcrb
lods
inc
or
or
movsl
cmp
in
ljmp
jbe
cs
or
pop
insl
subb
aas
jp
es
daa
test
cld
mov
pop
les
or
push
in
mov
push
mov
test
push
jge
dec
cmp
ja
jo
add
or
dec
mov
adc
out
pop
xchg
xchg
xchg
and
je
gs
sub
cwtl
aad
mov
out
fdivrs
and
push
sub
push
es
in
and
or
jnp
adc
dec
clc
and
dec
and
add
or
fidivs
or
mov
xor
dec
sub
stc
enter
mov
cmp
fcoms
inc
arpl
add
jecxz
fildll
mov
in
xchg
lods
imul
sub
xchg
dec
pop
jp
in
or
xchg
push
xlat
adc
push
jle
out
push
dec
pop
sub
mov
shlb
adc
pop
dec
cmp
xor
lret
xor
sub
add
ljmp
inc
jno
push
push
push
cmpsl
jle
xor
aaa
and
lods
pop
sbb
out
sti
dec
mov
out
rclb
hlt
jg
call
fucomip
je
mov
or
mov
dec
pop
push
outsb
xchg
xchg
jle
add
xor
jnp
clc
mov
movsl
in
jnp
lods
cli
xchg
add
and
mov
movsb
out
lcall
sbb
in
adc
pop
sub
xlat
std
dec
addr16
push
mov
lods
sbb
add
loope
int
sub
lods
in
adc
and
daa
test
push
hlt
jle
sbb
jle
jmp
push
mov
cmp
inc
xor
lret
xor
xor
adc
mov
jns
stos
push
aad
xlat
outsb
sbb
sub
add
outsb
pop
sub
jo
push
testb
xlat
lea
sub
mov
and
or
dec
dec
sbb
push
sub
jne
idivl
es
xor
and
addl
mov
or
pop
sar
cltd
push
pusha
es
pop
cmp
rcrb
dec
fwait
aad
push
xchg
jns
and
jmp
div
les
add
in
jno
icebp
and
dec
sub
fnstcw
pop
cmp
movsl
jge
dec
or
jge
pop
mov
lods
xchg
test
in
mov
sub
rclb
or
dec
sbb
mov
mov
dec
jge
sub
mov
push
jno
jnp
pop
test
cmp
fadds
xlat
dec
or
js
add
sbb
push
shll
mov
sahf
or
popf
sub
sub
push
cld
fdivs
mov
addr16
fwait
jle
repz
test
mov
fstps
pop
sbb
xor
add
adc
das
inc
push
sub
gs
mov
mov
pop
xchg
sub
adc
loopne
lahf
adc
fsubl
or
sbb
jl
jae
xchg
test
pop
fisttps
inc
loopne
pop
xorl
or
sbb
fsubs
mov
pop
xchg
xor
sbb
cmp
mov
imul
push
lods
xchg
test
std
cmp
fldt
clc
pop
jle
push
mov
mov
jge
test
mov
lret
pop
jns
cmc
in
lods
in
xor
cmp
mov
jmp
and
cwtl
mov
or
jo
rcr
adc
out
pop
aam
mov
shll
dec
in
xlat
scas
adc
sbb
jecxz
sbbl
cmp
cli
lea
lods
mov
fs
mov
out
xchg
and
dec
lods
js
push
dec
mov
xchg
scas
sbb
pushl
ret
pop
push
or
sub
jno
xchg
insb
jns
push
xor
fisubs
add
cmp
notb
mov
in
push
stos
mull
movb
xor
add
inc
leave
daa
scas
jns
popa
jecxz
or
mov
sub
lret
mov
mov
fnstcw
aas
dec
mov
mov
movsl
jl
jp
dec
cmp
cmp
sub
mov
push
jg
mov
pop
ret
sub
cmp
or
add
adc
shll
xor
push
pop
dec
fimull
pop
stos
shlb
inc
add
sub
jno
push
jmp
xor
psubusw
pop
or
adc
adc
pushf
mov
ja
aam
xchg
loopne
out
cmp
ret
ret
ja
sbb
icebp
lods
lock
pop
or
je
inc
fisubs
add
xchg
inc
xlat
jae
push
repnz
jbe
test
jb
gs
ja
outsl
ret
lea
imul
adc
js
std
dec
pop
jmp
imul
mov
lcall
insl
push
pop
xorb
pushf
push
or
clc
and
mov
pop
cmp
inc
mov
xchg
inc
cld
lock
mov
pop
lods
pop
mov
imul
mov
ljmp
int3
ret
int3
jp
push
mov
out
jbe
std
xor
decl
push
addr16
decl
out
cmpl
jmp
adc
inc
jns
negl
xchg
pop
out
in
or
gs
push
xchg
lahf
sub
pushf
push
loopne
push
dec
in
xor
out
cltd
sbb
sub
stc
inc
cwtl
loope
scas
pop
in
gs
dec
mov
lcall
xor
test
in
mov
ds
push
inc
dec
jmp
adc
outsb
or
es
sbb
dec
and
add
into
lret
mov
sub
adc
pop
mov
push
loop
lock
push
ficompl
fwait
std
mov
mov
cmpl
int3
dec
add
mov
xor
lods
cmpsb
cwtl
rcrb
fistps
movsb
les
pusha
add
jg
mul
mov
sbbl
push
imul
lea
sbb
in
dec
cld
iret
xor
xchg
pop
jmp
ficomps
lahf
fimull
fistpl
ret
jge
ror
insb
jl
out
push
mov
cmc
mov
ds
call
sbb
inc
scas
fs
xchg
jecxz
adc
inc
push
jae
cmp
adc
pop
mov
std
inc
call
lock
sub
or
movsl
push
cmp
mov
mov
lcall
and
or
sbb
xor
dec
jge
mov
dec
xor
lcall
enter
insl
mov
dec
dec
into
cmp
xchg
out
fsubs
loope
adc
into
cmp
popf
int
inc
outsl
repz
mov
sub
js
icebp
stc
push
mov
xchg
jnp
subb
push
and
and
dec
push
enter
adc
shll
jae
icebp
popf
insb
frstor
jg
pushf
popf
adc
cltd
sbb
or
and
adc
or
popf
in
aam
lock
cmp
xchg
es
scas
adc
lock
xor
dec
sbb
das
das
rcll
nop
js
loope
xor
in
mov
fisubrl
mov
dec
and
sub
fwait
mov
xor
imul
in
scas
pushaw
rclb
add
cmpb
fidivrl
jnp
popa
and
scas
or
jno
mov
push
sbb
cmp
and
pop
cld
and
mov
shll
xor
or
sub
mul
sbb
and
jb
xor
not
pop
test
mov
sbb
lock
or
cld
call
cld
xor
movsl
cmp
mov
push
mov
or
inc
testb
movsb
subb
jne
cmp
push
stc
cmc
dec
xor
aaa
pop
mov
or
jb
fucomip
xchg
push
lods
push
jmp
in
pop
or
xchg
popf
xchg
push
fnstcw
push
stos
jecxz
pop
dec
jb
jns
push
lsl
push
pop
ss
xchg
jne
dec
idiv
dec
add
push
movsb
ss
and
adc
fwait
inc
xchg
fs
fsubrs
mov
insl
popf
call
iret
jae
jle
clc
jg
aam
hlt
decl
jbe
push
outsb
xchg
sbb
dec
sub
jno
loope
push
lea
cltd
push
call
add
xor
dec
inc
repz
push
push
sbb
andb
imul
mov
sbb
sub
xor
pop
loopne
out
aam
add
pusha
dec
mov
push
pop
mov
stc
push
int3
aaa
xchg
and
add
xlat
sti
cs
push
sub
filds
adc
popa
outsb
loop
js
imul
sub
clc
hlt
std
out
hlt
cs
das
pop
mov
js
jp
push
dec
adc
mov
xor
cmp
inc
pop
aam
aam
ror
inc
into
xor
xchg
xchg
scas
test
or
popa
insl
push
shl
cld
dec
cltd
mov
ficomps
cmp
sar
sti
jb
adc
iret
mov
sbb
dec
fisubl
push
outsb
scas
das
or
outsb
xlat
sahf
xchg
mov
sub
sbb
xor
sbbl
sarl
cmp
inc
sarb
stos
mov
pop
movsb
in
and
lods
pop
or
push
mov
iret
push
outsl
inc
sub
pop
cmpsl
cld
negl
mov
movzwl
push
mov
and
inc
or
inc
or
and
popa
iret
dec
cwtl
mov
pop
rcr
push
mov
or
out
bound
xor
mov
rolb
sbb
xor
mov
notb
push
dec
cmc
or
dec
fmul
pop
adc
movsl
mov
pop
sub
lcall
push
dec
push
and
sub
xor
adc
inc
push
sbb
lahf
push
ja
push
loop
jg
sbb
mov
and
push
xchg
cmp
jge
stos
push
and
mov
inc
xor
mov
mov
add
sbb
xchg
pop
sti
fdivr
jns
fs
repnz
sbb
and
mov
lahf
stos
mov
in
mov
cmp
cmpsb
sbb
adc
fs
xlat
in
cmp
aam
movsl
sti
nop
or
mov
push
sbbl
pop
mov
lret
sbb
mov
stos
int3
push
jae
rcl
or
mov
and
repz
leave
aaa
jle
dec
or
addr16
or
mov
stc
sub
add
or
mov
mov
push
lea
dec
scas
mov
mov
loopne
and
fistpl
add
les
sarb
imull
jge
movsb
gs
and
or
aaa
inc
mov
aas
iret
jecxz
adc
push
daa
out
jb
int
lods
repz
mov
jmp
jae
xlat
sbb
aam
roll
mov
incl
xor
punpckhwd
loopne
xchg
std
pop
xchg
inc
cmpsl
leave
or
sti
mov
movsb
jb
xchg
cmpsl
mov
popf
insl
mov
push
and
aas
cmp
dec
call
shlb
sub
jae
add
cmp
inc
push
pop
pop
xchg
test
mov
fsts
or
test
stos
mov
pushf
scas
jnp
inc
inc
cmp
sub
outsb
push
sub
mov
out
mov
notrack
jle
jno
std
xchg
add
jp
jle
in
aad
enter
or
cmp
out
clc
test
stc
jecxz
imull
xchg
mov
push
or
loop
cmp
cmpsl
nop
sub
scas
mov
jp
call
adc
jg
ret
sbbl
int
outsb
jno
nop
sbb
les
cwtl
aam
adc
push
push
movsl
or
xor
push
outsl
sub
cmp
push
ror
add
pop
sbb
pop
push
push
cs
sbb
fsubs
rcl
mov
fmuls
loopne
fsubs
jb
jp
push
inc
cwtl
dec
leave
jne
adc
mov
cmp
pop
push
insb
pop
flds
leave
mov
and
xor
pop
pushf
cmpsb
fisubrl
test
ss
test
inc
shr
dec
pop
notb
aad
outsl
pop
popa
daa
das
mov
fwait
xor
and
rcrl
dec
mov
daa
xchg
call
sarb
addl
loop
mov
mov
js
push
cmp
dec
lods
ds
int3
std
cltd
push
jns
sbb
fs
mov
cltd
jl
cwtl
inc
add
sbb
test
fimull
pop
xor
cmp
loope
push
mov
jns
jne
icebp
mulb
mov
in
pop
dec
nop
and
jecxz
scas
sub
sbb
push
or
adc
pop
mov
add
lock
dec
js
div
into
push
adc
dec
add
ret
pop
mov
fidivrl
fwait
movsl
popa
or
ret
std
outsl
arpl
pop
xlat
push
sbb
fisttpl
dec
jp
in
push
mov
js
sub
pop
aaa
adc
cmovo
xchg
cmc
xchg
jo
dec
js
fwait
dec
ja
mov
jge
subl
push
adc
jg
bound
add
xchg
dec
dec
into
adc
clc
mov
int3
pop
ss
insl
and
mov
cs
mov
popf
mov
or
or
call
inc
sub
sub
stos
or
sti
cmp
xor
dec
xor
inc
repnz
sarl
repnz
mov
push
or
test
pusha
sub
repnz
xor
push
test
orl
ss
mov
ljmp
push
fistpl
xchg
push
push
repz
xlat
rolb
and
test
push
int3
jb
sbb
das
frstor
out
xchg
adc
mov
xor
rclb
sub
out
loopne
fcoml
inc
jae
sub
in
and
jecxz
je
xchg
pushf
or
sub
inc
cmpsl
sub
jae
movsb
pop
ror
pop
stos
shlb
fs
and
loope
xorb
fnstenv
jae
sahf
and
mov
jbe
and
jle
js
add
nop
adc
test
xchg
icebp
xchg
andb
movsb
idiv
push
or
scas
cld
mov
or
or
movsb
sbb
push
sbb
inc
inc
jns
fildl
mov
aas
js
insb
jo
cltd
xchg
push
or
cmp
pop
add
xchg
cwtl
lods
pop
push
out
movaps
xlat
dec
jecxz
insb
push
in
mov
mov
adc
mov
and
fdivs
xchg
or
test
dec
shll
xchg
iret
sahf
imul
xchg
aam
test
cmpsl
out
push
dec
mov
inc
jne
mov
pop
or
mov
push
andl
lcall
mov
xlat
imul
jne
shlb
movsb
mov
push
fnsave
stos
lcall
in
xchg
addr16
mov
in
and
cmc
shll
aam
push
add
mov
aam
xor
xchg
sarb
inc
outsl
mov
in
lds
xchg
or
push
cs
dec
shlb
sbb
jg
mov
cli
out
adc
in
mov
or
cmp
push
lea
xor
mov
je
and
add
jecxz
cmp
notb
xchg
push
pop
push
fsubp
in
clc
fistpl
iret
cltd
aas
and
push
mov
shlb
add
ficoml
outsb
add
fwait
shld
arpl
jne
mov
add
out
popf
mov
push
in
cwtl
or
mov
pop
dec
mov
pop
mov
mov
inc
dec
mov
jo
lret
dec
cwtl
dec
sub
movsl
aam
sub
rol
or
test
inc
aaa
fsubr
fdivrs
into
or
inc
add
lret
paddb
mov
lret
push
in
push
roll
dec
mov
or
dec
push
sahf
and
pop
mov
add
cmp
mov
sub
fs
xor
push
mov
in
push
cwtl
mov
loop
std
mov
dec
fwait
cltd
fbstp
xor
xchg
pop
sbb
insl
and
lds
lods
gs
add
xchg
shlb
sub
push
cmp
dec
pop
sub
jg
mov
jne
mov
cmp
jmp
mov
pop
dec
fisttps
sub
inc
mov
jle
jl
inc
in
inc
adc
test
fsubrs
loope
ljmp
adc
sub
jne
xchg
int3
aas
cmpsl
mov
sub
shlb
test
lahf
pusha
xchg
add
push
out
sub
mov
push
xchg
insl
xor
rcl
repz
jbe
jmp
ds
mulb
jns
push
aaa
outsl
clc
mov
xchg
dec
sbb
inc
adc
xor
inc
arpl
mov
testb
or
dec
push
push
dec
das
int3
popa
fnstcw
dec
lods
push
aad
in
cs
mov
push
jns,pt
and
jb
cli
sbb
test
push
mov
sub
cmpsb
push
fisubs
outsl
clc
sbb
ret
inc
dec
mov
inc
or
add
lea
xor
mov
cmp
lcall
cld
fwait
ljmp
ror
testb
movsl
imul
into
lea
inc
cwtl
orb
stos
iret
dec
inc
stos
inc
in
mov
push
jmp
dec
int
ret
test
pop
ss
or
bound
mov
not
push
sbb
or
inc
es
ficompl
add
fcoml
push
adc
xor
hlt
xlat
je
inc
dec
jns
adc
cmp
lcall
and
pusha
xchg
and
adc
ds
and
lcall
mov
aaa
pop
stc
stos
dec
out
inc
cmp
ljmp
add
jnp
jae
test
cltd
das
lret
in
lret
xcrypt-ecb
cmpsl
dec
mov
out
sbb
test
test
mov
jnp
mov
cmpb
push
ss
pop
xor
mov
adc
cmp
dec
mov
push
add
pushf
mov
add
sarl
xchg
hlt
inc
movsb
pop
fs
sbb
xor
or
pop
pop
in
inc
sbb
test
or
push
mov
ret
notb
adc
repnz
leave
fs
sub
testl
movsl
pop
sub
cmp
or
pop
cmp
mov
jge
pop
divb
in
push
ss
mov
movsl
iret
ret
outsl
adc
push
push
dec
cmp
inc
jle
push
sub
xor
movsb
mov
fs
fdivs
adc
dec
or
mov
xor
outsb
mov
jle
pop
je
sub
rcll
std
pop
pop
push
mov
loop
or
push
mov
add
rolb
stos
adc
xchg
mov
sub
sbb
mov
sub
pop
cmp
mov
pop
dec
mov
or
mov
xchg
xor
int
push
int
aas
jl
sub
leave
jecxz
jns
sub
aad
mov
inc
pushl
xor
ja
addb
dec
rcrl
ds
mov
dec
cmpl
int3
mov
mov
xchg
xchg
fucomi
ds
shr
mov
push
add
std
or
and
jl
fistpl
inc
stos
rcrb
xlat
and
cmp
into
push
sbb
mov
ja
test
xchg
mov
gs
out
js
test
lea
outsl
int3
xchg
pusha
pop
ret
popa
dec
add
imul
in
inc
int
pop
pop
repnz
pushf
mov
mov
push
dec
cli
dec
sbb
inc
cmp
mov
into
cmp
pop
loop
xchg
and
jo
mov
fdiv
jns,pt
push
aaa
fs
xor
cmp
jns
pushf
mov
xor
push
jne
sub
mov
aad
add
movsb
out
loope
jmp
in
in
push
ret
dec
cvtps2pd
fs
xor
push
shrb
push
lods
xchg
cmp
xor
mul
adc
popa
cli
gs
lcall
adc
dec
in
testl
push
data16
loopne
jo
ss
insb
mov
push
mov
popa
push
inc
imull
jne
and
pop
jecxz
add
loop
cmp
add
in
jno
pop
xchg
fs
inc
int
inc
jle
cmp
and
fdivl
ret
or
dec
je
mov
cwtl
push
pop
loopne
insl
cmp
dec
inc
iret
cmp
mov
pop
dec
loopne
mov
pop
mov
inc
jp
into
dec
xor
jns
mov
mov
and
clc
mov
adc
icebp
pop
cs
and
push
aad
aaa
xchg
jns
sbbl
jp
lods
or
or
mov
pop
adc
sbb
int
inc
jns
pushf
bound
shr
jg
loopne
pop
lret
lds
std
mov
rcl
test
mov
ret
mov
pop
xor
mov
xchg
clc
scas
cmp
fcoms
enter
push
mov
pop
mov
test
mov
insl
inc
adc
pop
stos
lods
popf
rorb
mov
or
mov
das
pop
les
sub
insb
mov
mov
inc
inc
shl
pusha
ret
sbb
es
inc
pop
add
sub
jo
popf
inc
sbb
push
movsl
sbb
clc
std
dec
mov
pop
push
loopne
pop
test
inc
jmp
or
cmp
movsb
aam
mov
lock
repz
insl
int
mov
cwtl
dec
mov
jne
pop
fwait
push
sbb
js
jnp
fwait
hlt
adc
je,pn
pop
stos
mov
add
mov
stc
dec
adc
ljmp
mov
adc
je
fwait
clc
insb
inc
in
shll
jge
aas
lods
xchg
inc
fcomps
jbe
mov
arpl
mov
jae
cmp
xlat
or
in
mov
dec
je
bound
mov
pop
pop
mov
jnp
in
add
daa
shl
ret
push
lods
jnp
repnz
xchg
call
mov
push
dec
insl
lret
loope
mov
cmp
xchg
fidivs
in
xchg
inc
add
shll
xchg
js
das
add
dec
adc
iret
sbb
dec
xchg
mov
jno
inc
dec
sbb
dec
insb
aas
mov
stos
add
in
mov
out
rolb
lock
add
popf
dec
stos
push
ds
pop
mov
pop
adc
adc
movsb
mov
mov
into
xorl
dec
clc
icebp
cltd
subb
xor
jb
mov
sub
jbe
jge
dec
lret
sbb
scas
negl
in
lea
jl
inc
or
jnp
stos
mov
iret
and
into
test
popf
push
shlb
scas
push
push
xchg
sub
pop
je
adc
adcl
mov
cmc
gs
and
mov
js
pop
push
xchg
pusha
cmp
jo
clc
lea
pop
ja
push
cld
mov
jbe
xchg
pop
stos
bound
adc
and
or
data16
dec
push
std
insl
dec
dec
popa
xchg
loopne
mov
mov
rorb
jae
push
adc
lcall
pop
lods
add
call
ret
inc
je
movsl
mov
into
xor
and
sub
movsb
push
faddl
adc
or
pusha
in
add
cmpl
cli
mov
mov
out
push
push
and
sub
cmc
dec
mov
out
sahf
cmp
jecxz
mov
mov
movsl
lds
movsb
mov
test
mov
mov
stc
mov
adc
in
in
fisttps
or
rolb
inc
sahf
rclb
add
jg
insl
mov
sub
sahf
dec
add
mov
outsl
jge
adc
je
and
push
sbb
push
add
or
pop
dec
add
dec
fadds
jb
push
in
test
dec
cld
bound
outsb
xor
or
lock
jbe
aaa
jne
mov
or
sbb
add
inc
aad
jno
sub
js
push
add
mov
push
jl
or
push
or
stos
xlat
pop
in
mov
push
into
pop
cld
mov
mov
inc
in
outsb
push
dec
jbe
dec
out
leave
or
call
lcall
or
js
jo
push
adc
mov
xchg
mov
aaa
sbb
push
aaa
add
cmp
pop
push
pushf
and
iret
cmpsb
add
sahf
loopne
mov
push
movb
lds
loopne
sbb
or
loope
lret
sbb
jbe
xlat
and
lods
cltd
adc
push
jl
jbe
adc
dec
adc
jns
lods
cmp
xor
lcall
lcall
mov
cmp
aaa
or
pop
push
mov
test
into
push
in
ret
clc
test
dec
mov
insb
cli
data16
ret
mov
pushf
or
aam
xchg
and
popa
in
push
xchg
sbb
or
aad
ret
push
jg
ret
adc
inc
fisttpl
push
aaa
jl
xor
hlt
mov
lock
sbb
test
js
jns
addb
in
and
mov
stos
dec
ja
not
movsb
cmp
inc
mov
push
lcall
jge
cmpl
mov
sbb
fimull
int3
rorl
pop
xor
xchg
sbb
loopne
dec
and
jle
sbb
mov
test
ja
fmul
xchg
jno
mov
and
ret
clc
sbb
mov
xchg
sbb
xchg
push
mov
cmp
rolb
inc
cmp
jb
inc
testb
sarl
lea
jae
mov
fcmovu
outsl
mov
and
lods
mov
les
jo
aam
js
push
loope
out
jl
aaa
inc
aad
ret
sub
in
out
lea
ds
inc
jno
dec
push
mov
mov
insb
outsl
fcoms
iret
notl
test
adc
int3
loop
sub
cmpl
sahf
clc
inc
cltd
pop
cmp
pop
inc
test
mov
pusha
movsb
fsub
mov
sarl
inc
cmpb
sbb
rolb
xor
int3
fcmovu
clc
cmp
sbb
cld
push
frstor
push
jno
iret
imul
mov
dec
xor
mov
mov
inc
mov
inc
test
ja
inc
xchg
and
lea
xor
pop
mov
stc
inc
hlt
in
out
mov
les
mov
push
sahf
push
sub
lods
orl
enter
jge
aam
aam
rcl
enter
ret
call
push
jnp
inc
sub
insl
and
rorb
sub
lret
push
bound
insl
bound
jge
hlt
test
repz
js
xlat
inc
out
mov
push
mov
repnz
aam
jp
sahf
das
or
rcl
movaps
add
inc
arpl
call
cmp
sbb
sbb
xchg
and
or
inc
xor
mov
mov
or
stos
adcl
sub
push
fldenv
sarl
cmp
lret
inc
ret
cwtl
aaa
sbb
jp
sahf
cmp
in
mov
inc
outsb
jae
pusha
imul
das
jb
ds
bound
mov
cld
inc
mov
stc
inc
jo
mov
sub
in
dec
mov
in
aas
icebp
xlat
pop
aam
je
xlat
repz
push
rol
cwtl
and
nop
rcrl
mov
hlt
test
and
push
stc
jge
add
rcrl
bound
add
je
push
xchg
mov
add
fs
pop
jno
sbb
bound
ret
lods
inc
ds
in
mov
jne
ficoml
inc
jo
mov
and
call
shlb
cltd
push
stos
mov
addr16
mov
push
add
add
dec
in
les
mov
or
jp
sbb
lods
dec
xchg
inc
mov
dec
pop
add
outsl
cwtl
push
or
lds
stos
xchg
jbe
xchg
imul
sub
out
shlb
ja
sbb
cmc
cmc
xor
xor
push
mov
loopne
xor
or
shlb
adcb
outsb
les
lods
mov
gs
jl
repnz
mov
jbe
scas
jl
ss
mov
xor
in
mov
push
xchg
mov
test
xchg
in
mov
fnstenv
movsb
mull
sub
aam
inc
dec
dec
outsb
add
fsubrl
jle
push
mov
lods
push
sub
dec
stc
mov
dec
out
cwtl
jo
jg
mov
fisttpll
mov
add
cmp
es
pop
lret
mov
sbb
pop
dec
call
adc
dec
sti
dec
test
xlat
jo
icebp
inc
mov
nop
add
push
mov
outsl
mov
ret
sbb
mov
fwait
sub
sub
js
cs
stos
in
mov
pop
mov
xchg
test
in
mov
jb
js
std
mov
lea
fisubrs
sti
mov
adc
mov
loop
mov
or
and
cmpsb
lods
fs
push
lods
sbb
lods
pop
out
xchg
and
or
ja
sub
adc
sahf
sub
inc
rorl
shlb
adc
daa
sbb
push
daa
jmp
sub
insl
pop
push
das
pop
push
fbld
pop
push
popf
shlb
mov
fs
cmp
and
movsb
jo
mov
mov
lods
int
mov
lcall
push
scas
testl
and
or
test
sbb
das
or
pop
popf
out
mov
dec
ret
mov
mov
ljmp
fsubrl
je
rcr
mov
pop
imul
mov
daa
xchg
adc
cmc
dec
in
push
cltd
adc
push
jmp
iret
mov
xor
inc
jno
xlat
pop
xor
and
push
xor
out
adc
xchg
int3
inc
scas
xor
jp
adc
pop
inc
or
or
in
fsubr
xor
xchg
cmpb
outsb
test
adc
jo
popf
je
pop
pop
cmp
call
adc
addr16
push
jmp
aad
pop
jno
add
cmpsl
xor
out
ss
inc
out
push
dec
or
out
push
stos
add
test
clc
mov
jmp
push
push
rcll
sbb
adc
roll
push
inc
mov
xor
mov
mov
jge
or
cltd
mov
and
and
fsubr
xchg
data16
mov
aaa
aas
or
in
or
cld
pop
xchg
ljmp
lods
mov
outsl
xchg
aaa
test
inc
int
ss
imul
repnz
mov
push
adc
fcoms
cmpsl
lcall
pop
push
push
fiadds
sbb
cltd
ljmp
adc
and
pop
js
cmc
dec
pop
jns
mov
ret
mov
lods
dec
gs
cmp
xlat
insl
push
pusha
mov
inc
pop
cmc
call
mov
xchg
dec
mov
xor
inc
mov
in
mov
push
imul
fwait
inc
jns
dec
inc
push
rcrb
movsb
or
sbb
dec
jmp
adc
xlat
lcall
inc
jl
lret
sub
mov
cmc
pusha
mov
xchg
imul
pop
lcall
pop
adc
pop
sbb
jp
lcall
ja
sbb
jp
test
xor
scas
cmp
sbb
cmp
pop
test
inc
dec
ds
mov
xor
leave
dec
in
cld
rorl
add
and
xchg
sub
xor
or
add
je
in
dec
jns
mov
icebp
out
xor
mov
repnz
add
jno
mov
js
clc
cs
or
cmp
mov
ror
push
lods
xor
add
dec
pop
lods
clc
mov
sub
repz
cmp
sbb
dec
je
push
test
test
add
xchg
cmc
mov
sbb
out
dec
jne
sub
testl
pop
shrb
push
mov
inc
dec
pop
jl
cmpsb
fstpl
sub
push
inc
mov
jno,pn
push
sbb
andb
jne
dec
je
push
jp
add
sbb
popa
dec
lock
push
jle
mov
fsubs
outsb
xlat
in
mov
fmuls
addr16
bound
inc
lds
das
sti
sbb
jle
out
cwtl
pop
pop
push
cmp
and
add
pop
jmp
sub
outsb
cmp
test
and
mov
dec
roll
mov
dec
aas
or
mov
inc
mov
loop
mov
movb
aam
jae
shrb
jge
into
daa
pushf
push
std
xchg
lret
xchg
lret
xchg
insl
cmpsl
test
sub
stc
pop
pop
cwtl
pop
lcall
jno
dec
mov
pushl
les
dec
mov
xchg
dec
mov
dec
push
rcr
jge
lcall
sub
add
fxrstor
out
mov
fildl
pop
sar
jno
jg
imul
aas
in
mov
sub
adc
and
pop
fisubs
adc
and
popf
js
sub
jbe
fwait
nop
ficompl
fs
lcall
add
inc
mov
stos
lea
mov
mov
rorl
test
xor
push
cld
add
adc
gs
nop
js
push
mov
loop
out
fcoms
popf
repz
pushf
scas
adc
movsl
popa
ds
mov
pop
pop
push
inc
xor
movsl
ret
cmp
sbb
add
dec
test
xor
mov
cs
push
aam
jmp
lcall
mov
mov
leave
dec
fsts
dec
lods
cmp
imul
int
cs
in
pop
xchg
sbb
pop
mov
and
gs
lahf
popf
insb
sahf
addr16
shll
sub
push
jp
jo
movsl
pop
add
mov
in
mov
div
repz
rolb
sbb
pusha
xor
fisubrs
push
hlt
movsb
and
call
shll
mov
xchg
lcall
and
pop
popl
jnp
out
jo
cmc
popf
sub
pop
sub
xor
mov
adc
in
call
mov
mov
mov
pop
or
mov
adc
pop
and
pusha
and
and
in
testl
inc
inc
sub
mov
jo
in
call
int3
sub
inc
xor
inc
fwait
jp
mov
stos
jno
aas
sub
insl
mov
adc
pop
dec
adc
fsubrl
decl
lea
bound
mov
pop
and
sbb
dec
add
sbb
inc
je
xor
dec
jo
clc
mov
dec
and
dec
scas
mov
mov
lods
mov
cmpl
xchg
repnz
imul
jecxz
out
xchg
fld
dec
and
xor
xor
ficomps
dec
mov
pushf
int3
loop
or
pop
mov
pop
pop
popf
sbb
stos
out
aaa
inc
push
idivl
cli
jp
loop
loop
or
add
lods
lods
pop
mov
clc
cs
enter
test
add
adc
dec
ja
dec
ds
in
clc
lods
and
push
js
test
outsl
lods
or
sub
pop
mov
inc
sti
mov
xchg
sub
and
inc
add
test
in
mov
dec
jge
nop
stc
scas
pop
xchg
aam
dec
sbb
dec
push
outsb
out
jl
push
dec
cli
and
pusha
aaa
or
adc
pop
dec
js
imull
je
fistpll
dec
or
adc
dec
dec
clc
clc
aam
mov
jns
out
subl
leave
addr16
and
jns
mov
arpl
or
ja
adc
dec
and
popf
mov
pushf
lds
lahf
jne
idivb
jecxz
cmp
fs
pop
add
subb
or
push
outsb
xchg
sbb
sbb
out
jae
mov
inc
add
xor
push
testb
je
lds
sbb
inc
sbb
mov
adc
shrb
push
jp
or
shrl
add
aaa
and
js
cwtl
inc
adc
and
adc
outsl
mov
shlb
xor
in
hlt
jnp
int
mov
insl
and
icebp
mov
mov
jge
cmp
mov
mov
fdivrl
xchg
mov
push
inc
xor
fmuls
pop
push
dec
xchg
push
inc
xor
cmp
mov
dec
dec
pop
push
sub
xor
in
iret
hlt
inc
and
mov
prefetcht0
and
xchg
popf
aam
aam
hlt
push
ja
cmp
test
add
dec
cwtl
andb
bound
das
loopne
aam
cs
add
dec
cwtl
sahf
fldl
inc
dec
or
cmp
aam
cmc
add
mov
test
mov
ret
xchg
dec
js
mov
xchg
pmuludq
out
arpl
pop
push
push
sub
mov
testl
aam
out
mov
out
divl
mov
shrb
in
call
and
sub
dec
loopne
daa
in
pusha
fwait
cmp
xchg
mulb
ljmp
mov
jns
ret
inc
cmp
cmp
insl
and
xchg
cld
sub
pop
daa
cmp
xchg
xchg
icebp
xor
movsb
mov
pop
and
adc
addr16
add
lahf
dec
cmp
ud2
insl
aad
clc
inc
inc
daa
dec
sbb
iret
mov
add
xor
int
je
pop
sarl
sbb
iret
aam
add
sub
outsb
pushf
outsb
pop
test
dec
sbb
std
ret
movsb
frstor
pop
rcrb
pop
jae
rclb
insb
xchg
mov
sub
pop
fcomps
and
mov
cmp
gs
loop
or
mov
icebp
push
ss
fdivs
add
pop
adc
mov
adc
and
js
and
scas
pop
sub
sbb
lock
add
sub
aam
sub
inc
cmp
std
mov
push
mov
jb
out
xor
add
aad
sbb
or
xchg
les
sub
lret
sbb
jp
pop
fdiv
js
sbb
push
push
mov
mov
or
dec
add
insb
cld
call
cmc
jl
js
dec
xor
insl
jge
iret
dec
or
push
dec
lods
ret
push
int
inc
jnp
mov
jecxz
data16
pusha
pop
mov
mov
and
cld
jl
inc
inc
xchg
push
mov
and
cmpsb
popf
add
mov
jmp
adc
into
push
or
add
pop
into
push
lahf
pop
lret
stos
imul
cmpsb
fcoms
ja
jo
pop
lret
mov
iret
dec
inc
cmp
cwtl
in
add
jbe
std
aam
mov
mov
push
dec
subb
gs
mov
jns
mov
sbb
xor
outsb
int3
aam
cwtl
inc
rorb
inc
add
mov
inc
aas
push
popf
xlat
pop
and
xor
mov
test
js
ret
pusha
loop
frstor
aaa
xchg
push
dec
cmpsb
jbe
gs
mov
dec
pop
js
sbb
mov
mov
test
sbb
xchg
push
stc
dec
cmp
jl
lds
adc
scas
pop
sbb
and
lods
loope
lods
sbb
or
leave
mov
push
add
outsb
scas
push
adcl
inc
mov
jl
imul
sub
in
adc
push
dec
insb
mov
xor
inc
dec
sub
xor
jns
bound
dec
sub
cltd
mov
decl
sti
xchg
pop
pop
pop
idiv
adc
int
pop
add
push
and
jp
inc
mov
cltd
jne
cmp
popf
sub
subl
jp
adc
xor
jle
cli
push
pop
or
adcb
lea
xchg
push
mov
ss
mov
add
mov
xor
and
loopne
outsb
lret
repnz
jnp
add
cmp
testb
pop
out
jp
sbb
dec
jbe
jmp
push
jl
repnz
mov
repnz
dec
aaa
pushf
test
xchg
ss
mov
pop
adcl
xchg
mov
cmpl
daa
out
scas
popa
push
icebp
mov
xor
lock
in
sahf
push
stos
je
js
mov
jmp
imul
shrl
icebp
adc
add
leave
inc
popa
push
arpl
test
mov
in
cbtw
adc
movsb
or
or
into
push
js
scas
mov
or
sti
je
in
cs
imul
mov
inc
push
arpl
jp
add
out
or
les
sbb
inc
call
test
fdivp
repz
jecxz
adc
pop
push
sti
cld
ret
shl
add
push
repz
and
mov
jns
xchg
mov
jnp
jbe
add
push
mov
bound
pop
jae
je
mov
repz
nop
ficoml
pop
adc
mov
fadds
lock
pop
sbb
lret
jecxz
insb
jae
push
pusha
addr16
cwtl
es
pop
bound
insl
fidivrs
aam
mov
je
les
jmp
dec
pop
sbb
mov
inc
add
mov
push
rorb
dec
pop
mov
cmp
test
and
mov
clc
push
adc
push
in
cmp
or
sub
mov
and
adc
jne
sbb
insb
orb
jb
repnz
sarb
sub
inc
jne
xor
push
ss
dec
mov
add
scas
jp
js
out
std
rcll
dec
mov
ljmp
stc
loope
or
cmpl
arpl
dec
lret
mov
cmp
or
jecxz
repnz
shlb
mov
rcll
xchg
stos
mov
mov
nop
push
inc
sbb
orl
dec
add
inc
xor
dec
sbb
int
ror
pushf
insl
mov
cwtl
pop
jbe
loope
aam
lds
and
lahf
push
mov
or
dec
xor
mov
pop
les
jbe
lds
call
cli
repnz
sahf
adc
lods
int3
test
cmpb
cmp
jmp
daa
push
push
movsb
pop
adc
in
push
std
loope
mov
inc
ljmp
cmc
and
dec
mov
fistpll
les
lock
xchg
cmpsb
push
dec
sbb
or
bound
loope
xlat
rorl
mov
dec
add
or
adc
push
cmovbe
daa
inc
bound
adc
in
arpl
xchg
mov
sbb
test
pop
pop
inc
call
sbb
jns
les
jl
sbb
or
jns
scas
testl
inc
mov
push
ret
dec
jb
push
sti
push
sub
nop
fucom
movb
rcl
push
dec
dec
inc
loop
inc
lret
jmp
insl
jae
lahf
and
pop
shrl
enter
or
push
cld
push
lods
add
cmp
sti
jge
fistpll
xor
aas
ret
and
or
and
mov
inc
scas
into
push
andl
mov
jnp
lcall
mov
push
add
pop
sbb
jmp
aam
jge
xor
pop
jbe
sbb
inc
lds
and
js
clc
jecxz
add
push
idiv
mov
imul
mov
stos
sbb
into
daa
insl
sub
or
lcall
lret
insl
sbb
into
ljmp
xchg
mov
xchg
test
adc
and
inc
lcall
dec
mov
lret
aam
mov
jl
dec
dec
pop
jb
push
pop
xor
push
sub
imul
cmc
bswap
divl
ljmp
xchg
pop
out
imul
mov
inc
and
or
mov
pop
data16
test
or
fs
aam
xor
fistps
call
cwtl
dec
mov
pop
jg
mov
or
push
mov
and
mov
loope
dec
mov
jl
jle
push
fadds
lds
dec
sub
lahf
arpl
mov
pop
sub
sbb
xor
std
pop
push
out
rcl
roll
in
sub
imul
jp
andl
xor
xchg
enter
icebp
xor
dec
add
shll
or
push
aam
and
add
jae
popa
in
mov
add
shlb
cmc
jp
xchg
xor
mov
sub
push
sub
lods
mov
push
hlt
ja
inc
cmp
mov
pop
fcoms
and
movsl
push
aaa
jno
xor
or
jp
fstpl
imul
fdivrl
jge
cmp
leave
inc
cmp
push
mov
inc
inc
cmp
push
iret
mov
out
in
push
cmp
jne
push
xor
push
inc
out
xchg
pop
aas
and
stos
loopne
mov
mov
cld
lock
jp
arpl
mov
push
ret
inc
mov
inc
inc
mov
stos
data16
push
and
or
jne
in
js
loop
cld
pushf
xchg
jl
xchg
mov
incb
rorl
dec
dec
cmp
roll
pop
loop
sbb
mov
lods
xor
push
adc
mov
stos
dec
xchg
push
xor
insl
rclb
in
mov
hlt
add
mov
pop
jae
pop
adc
leave
mov
aas
ret
inc
sbb
aad
je
fsubrl
out
ss
dec
add
mov
sbbb
add
out
loope
bound
cmp
scas
orb
jl
js
pop
or
push
xchg
inc
scas
les
cmp
push
inc
out
jecxz
aad
xchg
xor
xlat
pop
ljmp
mov
inc
or
xchg
inc
jne
mov
in
and
cmp
movsb
or
scas
clc
and
sti
std
in
dec
jmp
xchg
jmp
stc
mov
clc
popa
ja
sub
sbb
int3
push
repnz
push
mov
fs
add
or
popf
mov
mov
lahf
pop
into
es
out
sbb
pop
sub
adc
aas
movsb
insl
aam
jnp
adc
out
outsb
xchg
jbe
dec
lcall
loope
out
in
fadd
push
dec
xor
pop
testl
mov
shrl
mov
add
cmp
and
xchg
mov
icebp
stc
mov
out
stos
or
test
cmp
mov
scas
or
lock
imul
sarb
jg
ret
mov
in
testb
adcl
test
jmp
adc
jo
scas
inc
pop
test
mov
lret
sub
mov
sbb
mov
imul
mov
mov
test
cmpsb
xor
fwait
mov
lock
dec
xor
mov
xor
movsl
data16
insb
and
add
iret
add
jg
adc
lret
push
fwait
arpl
cmpsb
imul
lea
in
or
adc
inc
add
ljmp
icebp
push
es
sub
jb
push
dec
test
repnz
jbe
mov
xor
es
pop
push
js
pop
ret
cmp
loop
scas
cmovge
and
movsl
idivl
sbb
unpckhps
repnz
jno
dec
xchg
js
push
dec
cld
sar
jmp
and
rorb
imul
in
call
aaa
ret
pop
fwait
shll
cmp
pop
int3
add
adc
inc
pusha
xchg
or
xchg
cli
iret
or
into
add
push
pop
pop
in
xchg
mov
dec
ret
and
sub
pop
sbbb
mov
and
jle
outsb
push
mov
xchg
pushf
testb
cmp
popf
mov
mov
mov
clc
jl
js
xchg
inc
aaa
aas
xchg
inc
test
out
adc
fcmovu
pop
xor
in
mov
xorb
test
pop
addr16
push
jo
ret
imul
mov
adc
cld
xchg
or
cwtl
imul
addl
ja
add
sbb
ss
lds
xchg
enter
icebp
adc
xchg
add
cltd
mov
jne
fwait
mov
aam
or
cwtl
pop
sti
fisttps
jns
insl
lcall
out
outsb
aad
push
subl
xchg
sub
mov
je
cmp
jae
push
sbb
aaa
xchg
sbb
movsl
add
xor
lods
jbe
dec
xor
push
pop
insl
sbb
cwtl
add
outsl
inc
xor
repnz
test
jmp
push
xor
jle
add
out
cmp
cld
sbb
scas
xor
push
hlt
xchg
lds
daa
out
roll
jno
mov
lods
pop
fbstp
xchg
lcall
push
sbb
in
les
sbb
sub
dec
mov
shll
rorb
pop
or
test
pop
push
fcoms
fwait
pop
out
sbb
icebp
inc
pop
js
jns
rcll
gs
mov
pop
dec
jno
rep
jg
push
or
push
jl
push
mov
out
jl
adc
dec
cs
inc
dec
pop
rcrb
sbb
popa
pop
cmp
and
out
sub
pop
outsl
in
add
fwait
adc
outsb
fsubrs
cmp
xor
inc
pop
xchg
outsl
movsl
adc
pop
inc
or
jb
sbb
xor
push
or
xchg
jmp
dec
int3
jl
sub
cltd
mov
push
test
std
mov
mov
cmp
mov
test
sahf
xchg
inc
lea
sbb
xor
lea
mov
incl
xchg
outsb
xchg
mov
je
rolb
setle
clc
cmp
fwait
cmc
aaa
js
mov
sbb
xchg
adc
loop
xorl
jns
xor
xorb
ffreep
jl
iret
out
dec
clc
sbb
or
inc
push
lret
sub
movsl
add
ret
nop
add
ror
out
mov
dec
clc
jmp
movsb
fldcw
testb
inc
ljmp
insb
inc
cwtl
movsl
movsl
jmp
aam
je
push
outsl
cmpsb
ret
cmp
clc
scas
mov
push
movsl
mov
and
loop
or
or
aas
fprem
orb
pop
aas
dec
push
call
jb
shr
cli
out
mov
call
pop
or
dec
repz
dec
add
and
test
inc
mov
cmp
js
pop
ljmp
add
pop
subl
jle
jne
das
out
pop
arpl
call
dec
jg
pop
das
fldcw
repnz
sub
insl
push
adc
dec
mov
ds
imul
pop
lcall
inc
notb
and
add
sti
and
bound
stos
js
sub
insl
gs
test
mov
fmul
or
pop
or
enter
push
sub
mov
pop
pop
jle
sbb
fs
sbb
or
js
enter
jo
lods
push
fadds
out
outsl
addr16
shr
inc
ret
adc
dec
dec
xor
xor
jg
lods
gs
and
jge
mov
dec
fcoml
stc
ss
aas
outsl
lahf
enter
sbb
aaa
add
add
scas
adc
adc
xor
jns
insl
addr16
mov
dec
testl
and
push
jne
pop
stos
push
lret
push
movsb
or
loop
xchg
inc
enter
test
fcoms
mov
and
sbb
mov
stos
loopne
popf
adc
add
pop
in
pop
nop
arpl
jge
mov
push
fldcw
pop
scas
push
into
dec
or
mov
mov
inc
add
xchg
add
inc
leave
cld
out
sub
jne
icebp
mov
dec
jae
lods
inc
mov
insl
add
addr16
cmp
and
cli
add
cmpsb
in
adc
ljmp
clc
sbb
xor
xchg
cwtl
adc
dec
movsl
popf
rolb
aam
cltd
mov
pushf
sbb
add
xchg
push
call
jo
pop
jecxz
outsl
lret
sbb
sub
sub
dec
data16
jnp
outsl
rolb
shrl
sub
iret
sub
or
mov
push
push
sub
or
movsb
dec
xlat
ja
and
sti
clc
push
mov
arpl
or
enter
je
pop
stos
cltd
mov
sbb
rorl
cmp
incl
dec
fldenv
xchg
imul
or
mov
or
fstps
mov
nop
sahf
into
shl
dec
cmc
lret
mov
adc
adc
sti
inc
into
mov
stc
push
std
lods
cmp
mov
out
inc
fisttpll
int3
adc
stc
pop
daa
pop
test
sbb
fsubrl
insl
jne
sbb
outsb
dec
movsl
pop
jne
test
push
ret
div
sbb
sbb
add
cwtl
jge
dec
test
jno
jo
cld
mov
cmp
mov
xor
dec
dec
jne
pop
xor
aaa
imul
add
incb
stos
dec
cmp
mov
sbb
jmp
in
pushf
rorl
xor
push
stos
sbb
jns
mov
sbbl
xchg
pop
jmp
in
dec
or
mov
shl
mov
das
sbb
mov
adc
jge
inc
pop
enter
sti
syscall
int
xchg
sbb
cmp
cmc
mov
pop
jbe
mov
rorl
rcll
and
pusha
xchg
dec
lret
cmp
push
fldcw
xchg
hlt
cmp
jns
mov
xchg
ss
gs
xchg
xchg
insl
push
dec
jb
cmp
push
dec
dec
inc
sbb
movsl
mov
push
inc
lock
cs
inc
pop
mov
cltd
jle
or
lock
sbb
fs
xchg
js
mov
and
js
push
xchg
dec
or
jl
out
add
pop
shll
jne
popf
jns
scas
fistl
sbb
push
push
aam
jle
mov
add
dec
and
inc
jnp
dec
das
rorl
popf
inc
in
mov
jne
sub
rorl
add
inc
loopne
xchg
fisttpl
insl
pop
xlat
or
leave
rolb
inc
dec
outsb
pop
sub
repz
mov
lock
dec
xchg
sbb
push
cmp
add
loope
push
popf
push
sub
jne
rorl
les
lcall
lods
xor
pusha
repnz
sub
cltd
lea
sub
cmp
adc
mov
fs
ja
cmovns
cmp
loop
push
push
inc
sbb
test
inc
cmp
and
shrl
push
aad
ret
pop
and
aam
je
and
in
push
mov
push
mov
push
mov
inc
jge
xor
sbbl
add
lock
fsubs
rclb
push
icebp
test
popa
pop
shlb
cwtl
sahf
and
pusha
in
jle
xlat
sbb
out
aaa
je
sarb
ds
notb
push
les
out
cmp
inc
cmc
jp
mov
es
dec
daa
insb
adc
sbb
add
jne
cmp
fnstcw
les
js
loopne
in
cmp
lret
pop
xchg
mov
mov
rcrl
cltd
sbb
push
push
lahf
dec
push
addr16
cltd
push
cmpsl
rolb
inc
or
int3
ja
pop
jg,pn
adc
cltd
leave
xchg
aam
pop
es
sahf
stos
sub
stos
pusha
cs
xor
inc
cmp
fcomip
addr16
js
jl
lahf
add
std
roll
fdivl
roll
xchg
or
sub
xchg
pop
mov
in
sub
nop
or
dec
dec
jle
dec
jmp
dec
repnz
inc
dec
cmp
imul
fsub
jnp
cld
mov
ret
push
xor
dec
scas
into
xchg
jne
pop
enter
stos
push
jns
xorb
testb
mov
mov
cld
ds
setne
adc
mov
cwtl
dec
into
pop
cmp
loope
sarl
fbstp
mov
add
pushf
daa
push
rorb
fiaddl
jb
popf
int3
inc
insb
loopne
lea
sbb
insb
gs
add
lods
cmp
dec
xor
jae
mov
add
xor
sti
dec
lock
ret
xor
add
sbb
cmpsb
jb
aam
jg
cmp
mov
sbb
cwtl
lret
push
into
sub
cwtl
outsl
dec
add
dec
loop
das
les
test
jg
lods
lcall
clc
imul
cld
fstps
or
xor
push
mov
add
arpl
stos
xchg
xor
movsb
popf
jecxz
sbb
pusha
std
loop
cwtl
loopne
mov
push
in
mov
or
clc
mov
mov
or
dec
out
jmp
dec
dec
or
mov
xchg
adc
pop
or
arpl
pop
lds
jbe
sub
fdivrs
and
lret
ja
daa
sbb
sub
xor
mov
sub
adc
outsl
dec
mov
push
jne
cltd
pushl
iret
xchg
lea
jle
lds
adc
stos
pop
lcall
jbe
adc
orl
es
inc
shr
idivl
pop
loope
push
aad
pop
and
dec
inc
add
pop
jmp
in
mov
sbb
pop
das
insb
push
test
jo
xchg
dec
push
pop
xchg
pop
lods
mov
dec
aaa
dec
pop
das
xchg
lods
and
outsl
lods
fldenv
ja
sbb
sbb
stc
jecxz
movsl
push
jmp
push
push
pop
out
inc
push
mov
pop
push
sbb
decl
cld
pop
int3
icebp
lret
or
lds
std
sbb
cmp
mov
sbb
pop
dec
push
pop
nop
mov
push
sub
mov
dec
mov
jle
ret
dec
jge
mov
rclb
movsb
hlt
dec
adc
movl
outsb
cmovge
xchg
ljmp
dec
dec
push
pop
incb
push
mov
ficomps
les
mov
adc
test
mov
cmp
leave
ss
ja
stos
cli
push
test
push
mov
cld
lods
repz
sbb
loopne
fwait
jne
push
pop
aas
or
aam
call
ds
xchg
jl
ja
cmp
add
mov
xor
push
enter
push
pop
pop
imul
cmp
stos
mov
or
ret
in
iret
movb
pop
fs
pop
jg
pop
add
cld
jg
repnz
jge
push
or
mov
mov
cld
cmp
sbbl
jl
and
xchg
fsts
dec
insb
xor
mov
rorl
xchg
aad
inc
or
add
dec
xor
ds
sahf
mov
add
xchg
mov
loopne
inc
sub
dec
shll
gs
test
dec
inc
mov
add
addl
lcall
inc
ds
int3
mov
cwtl
and
jb
les
mov
bound
dec
ljmp
cwtl
in
lods
mov
dec
inc
popf
scas
int3
pop
inc
test
mov
dec
cs
mov
leave
outsb
nop
lods
and
jbe
jl
push
sbbb
add
mov
je
mov
sbb
shl
and
push
inc
cmp
cmp
push
orl
aad
add
jge
push
outsb
inc
mov
inc
out
lahf
dec
ja
push
lods
jge
pushf
sbb
sbb
push
test
cltd
pop
aam
popa
daa
jle
sbb
stc
lds
insb
xchg
inc
scas
lock
sbb
dec
mov
cmpl
add
cmp
dec
loopne
push
rcll
inc
loopne
clc
mov
rcrl
sbb
pop
aad
inc
shlb
ret
mov
icebp
insb
sub
ficomps
inc
jno
or
inc
mov
inc
test
xchg
imul
out
cmpsl
push
push
into
outsl
inc
mov
icebp
jno
pushf
daa
into
int
out
pop
fisttpl
cmp
js
cwtl
lods
rcl
jg
adc
jmp
push
or
inc
mov
cmp
cmp
push
mov
cmp
into
cli
dec
xor
icebp
cmc
inc
pop
or
or
mov
mov
push
cmp
dec
cs
ret
loope
decb
sbb
cmp
lds
daa
dec
and
push
or
jmp
xlat
add
testb
adc
popl
push
das
push
xchg
cmp
push
dec
or
adc
jg
movsb
cmp
add
sub
scas
inc
xor
stc
aas
dec
pop
jne
movsl
movsl
adcb
sbb
lahf
clc
in
cmp
popl
xor
or
xor
dec
std
mov
jge
cs
xor
sbb
in
cmc
mov
push
add
dec
adc
xchg
or
and
mov
add
movsb
push
and
jae
mov
leave
dec
mov
xor
addr16
push
cmp
xchg
jl
jns
pop
icebp
aam
les
lret
test
sbb
leave
js
mov
ja
lcall
insb
xchg
pop
cmp
mov
jnp
xlat
jno
jmp
imul
fisubl
popa
mov
mov
imul
test
add
jbe
stc
mov
gs
rorl
imul
in
fs
test
fwait
pop
push
mov
popf
cmp
fsqrt
jno
push
xor
add
lret
inc
aam
jmp
mov
mov
add
xor
xor
lods
repz
pop
jle
xor
jg
xor
ljmp
sbb
jo
cwtl
cmpsl
or
jmp
sbb
outsw
adcb
lret
repnz
xchg
jb
pushf
out
es
scas
iret
mov
or
xor
aas
cmc
shll
jp
test
in
lret
mov
xchg
pop
js
jns
mov
mov
iret
insb
inc
dec
in
jb
jmp
lcall
addr16
subl
cmpl
repnz
mov
jns
dec
clc
mov
frstor
add
xor
inc
adc
js
and
in
add
les
add
outsl
popa
pop
dec
insb
jp
mov
cmpsl
mov
lods
lock
add
cmp
mov
lods
inc
addr16
jecxz
ret
sub
xor
lcall
xchg
xchg
clc
pop
andb
xor
sub
pop
in
push
mov
push
fwait
sbb
in
pop
push
dec
adc
xor
in
xor
pusha
pop
push
rcrl
dec
sub
cmp
idivb
xchg
insb
movsb
arpl
or
cmc
mov
inc
cmp
push
xchg
in
aaa
jb
jb
mov
cs
int3
stc
add
add
lods
inc
rclb
cmp
int
add
push
push
add
sub
jnp
sbb
add
sbb
or
or
outsb
lcall
insb
push
orl
inc
outsb
ss
and
psrlw
pop
imul
add
hlt
xchg
mov
sub
cmp
fldcw
sahf
fisubs
xor
jp
mov
in
cmp
cmp
mov
loopne
inc
dec
in
jae
or
pop
push
into
pop
add
jg
jne
dec
mov
popf
sub
sbb
mov
lcall
pop
stc
adc
cmp
adc
xor
dec
and
xor
les
xchg
shlb
fmul
and
dec
out
or
jg
ss
stos
nop
cs
dec
jae
xor
or
shll
mov
push
sbb
addr16
and
mov
dec
add
push
cs
aad
dec
icebp
ss
xchg
cmpsl
pop
fidivl
popf
xor
sbb
xor
mov
push
dec
cmp
test
pop
negb
and
cwtl
jns
ljmp
dec
loop
sub
push
xchg
jo
lods
or
jle
mov
mov
cld
mov
push
sub
loope
stos
data16
out
andl
test
and
dec
les
and
pusha
cmp
lds
mov
pop
lods
add
jp
mov
and
cmp
dec
mov
scas
fmull
into
test
cmc
clc
fisubrs
add
iret
push
shl
pop
inc
popa
push
and
add
jmpw
xor
pop
xor
rclb
repnz
mov
rcr
push
pop
mov
aad
mov
xor
js
mov
sahf
in
sbb
jne
fcompl
aam
cmp
loop
in
xchg
out
add
pop
mov
jno
pop
cmp
mov
add
inc
mov
in
cwtl
mov
int
es
pop
in
scas
pushf
cmpsb
lea
dec
push
jo
addr16
pop
mov
jp
movsl
mov
lock
adc
fwait
jp
mov
sarl
out
adc
cwtl
ss
in
push
cmpsb
mov
push
mov
jmp
push
cmc
add
sbb
pop
cmpsl
cli
mov
push
icebp
cmpsb
pusha
clc
jp
inc
mov
test
mov
mov
popf
and
jnp
test
std
push
lock
out
inc
test
mov
ljmp
or
stos
lcall
xchg
inc
call
cmp
and
lods
outsb
lock
ljmp
loope
cmc
push
std
bound
inc
mov
arpl
lock
push
cmpsl
sbb
fcomps
jnp
and
enter
psubusw
and
ficomps
lret
lret
jns
dec
ret
aaa
xlat
pushf
adc
sbb
pop
sub
in
enter
out
push
aas
cmpsl
shll
xchg
in
les
xchg
orl
jo
test
dec
xlat
push
fmull
mov
test
out
adc
mov
adc
add
rclb
adc
in
jl
iret
dec
jg,pt
mov
iret
xchg
and
sbb
or
cmpsb
ss
dec
jmp
ret
push
popa
ss
pop
sbb
bound
cmp
push
test
xchg
jnp
cmp
lods
xchg
fdivrs
mov
movsb
fimuls
rcl
ds
inc
lret
pop
sub
dec
pop
popa
dec
out
repnz
mov
pop
xor
and
call
adc
bound
daa
pop
push
mov
push
mov
into
pop
lods
mov
aam
inc
pop
leave
mov
lods
jne
dec
mov
dec
inc
mov
lods
or
add
adc
or
movsb
sub
out
dec
and
cmpsb
inc
mov
ds
and
sbb
push
cmp
scas
sub
lret
ljmp
scas
aas
inc
fadd
and
pop
fisttps
sbb
fwait
xor
sbb
jl
dec
sarb
add
cmpsl
andb
stc
push
sbb
push
jl
sti
enter
fdivs
vmwrite
and
rcrb
adc
in
jnp
loope
in
push
mov
movsb
daa
mov
movsl
jno
repnz
jne
pop
push
movsb
icebp
sub
int3
pop
mov
dec
loope
mov
push
inc
call
in
pop
pop
dec
mov
push
push
stc
les
test
add
inc
shll
rolb
rcrl
mov
mov
fwait
adc
inc
sbb
std
mov
add
mov
inc
jb
xor
ds
push
or
mov
ss
xlat
mov
cmp
mull
pop
xchg
or
lods
shl
cmpsl
mov
nop
mov
shl
cmpl
arpl
xor
inc
bound
jl
jp
pop
out
push
sbb
movsl
cs
push
push
js
xchg
mov
roll
lock
inc
pop
clc
test
jb
or
sbb
adc
mov
add
cmp
or
sbb
adc
adc
mov
and
cmp
mov
test
fsubr
aam
negb
cmp
push
add
rorb
jle
pop
pop
sub
mov
data16
dec
xchg
mov
vpsubd
inc
push
pop
add
sbb
repnz
jbe
notl
push
dec
loopne
and
or
repnz
or
lcall
cmc
push
pop
stos
out
add
les
mov
jb
pop
or
loop
sub
inc
aas
dec
push
pop
leave
cwtl
cwtl
dec
sbb
cmp
jns
lret
call
xor
add
mov
push
hlt
arpl
push
into
shlb
movsb
mov
push
enter
and
push
fiaddl
jo
sbb
xchg
xor
mov
and
scas
jbe
mov
push
xor
push
xchg
fldl
mov
xor
jns
jle
sub
icebp
jl
in
cltd
add
and
xchg
test
insl
sbb
ret
dec
cltd
inc
sahf
xchg
fsubl
sahf
dec
pusha
in
sub
cmpsl
ljmp
iret
mov
movsb
testl
add
aaa
inc
sbb
in
fcom
and
scas
iret
inc
js
inc
leave
jbe
push
subb
sbb
dec
dec
pop
or
add
scas
fistpll
sub
dec
mov
push
pop
push
inc
fbstp
xchg
adc
mov
movsb
lds
rcr
lea
xchg
xor
enter
pop
add
add
mov
xchg
or
mov
aaa
mov
movsb
jbe
dec
inc
mov
push
stos
and
divl
fiaddl
les
sbb
stc
std
std
imul
mov
mov
sub
cli
dec
clc
imul
cmp
imul
mov
insb
push
in
es
xor
dec
lods
or
mov
sbb
and
js
call
xchg
add
xor
nop
cmp
xor
out
sub
sbb
or
out
push
inc
mov
dec
push
fiaddl
adc
test
dec
lcall
sbb
sub
rcrl
divb
mov
jmp
push
rolb
out
shll
jp
fwait
push
add
xor
cs
push
sahf
or
ljmp
loop
into
popa
mov
sbb
sbb
pop
movsl
push
setne
inc
aam
push
dec
fdivl
jo
xchg
in
mov
outsb
sbb
mov
dec
push
ss
pushl
jl
add
stos
mov
prefetch
or
cmp
jb
xchg
xchg
add
sti
lahf
mulb
push
int
divl
test
cmp
add
lds
ret
mov
callw
inc
test
pop
mov
pusha
mov
jno
push
sub
inc
mov
aaa
push
adcl
in
sub
jbe
lods
sbb
and
jne
or
aad
ret
and
bound
mov
addb
xor
testb
xchg
xchg
pushf
push
pop
into
hlt
dec
imulb
xchg
cmp
xchg
cmpsb
test
add
lea
int
push
push
xlat
adc
sbb
iret
insb
xchg
js
cli
jns
inc
add
jg
in
test
mov
pop
test
mov
mov
xor
lea
push
in
das
pop
ja
mov
add
jo
inc
inc
andl
ret
jbe
iret
stc
adc
push
mov
jnp
cld
add
or
movsl
ja
and
add
aaa
or
and
mov
dec
outsb
stc
stos
stos
out
or
into
enter
or
lea
and
cltd
jo
lds
dec
and
insb
xor
add
mov
ret
fs
mov
les
mov
into
and
pop
add
mov
sub
scas
xor
sub
push
stc
sbb
inc
dec
jo
cmc
mov
mov
fldenv
jb
push
mov
push
push
loop
call
pop
fs
push
pop
dec
pop
and
jbe
mov
test
xor
jp
call
mov
les
jp
and
or
test
insb
sbb
dec
push
inc
add
gs
test
mov
add
and
pop
and
imul
dec
adc
cli
sbb
sub
push
push
mov
cltd
inc
and
repz
adcl
jb
lock
push
mov
push
xor
and
inc
rcrb
nop
add
sub
jae
iret
dec
sbb
dec
sarl
inc
and
pop
sub
mov
xlat
mov
mov
call
mov
inc
cmp
sbb
push
cld
sub
xchg
sbb
rcll
mov
cmp
aam
inc
pop
jl
ljmp
jbe
les
addr16
mulb
aam
pop
mov
int
popa
xchg
mov
icebp
es
xchg
lcall
jnp
xchg
hlt
pop
fs
and
loop
lea
test
xor
dec
stos
mov
inc
sub
imul
negl
in
adc
addr16
inc
clc
mov
inc
jge
in
xor
pop
xorb
inc
outsl
push
jp
js
xchg
andb
xor
jno
add
sahf
aad
in
dec
xorb
in
xchg
sub
sbb
jle
inc
jns
mov
add
stos
xchg
sub
fisttpl
arpl
push
add
and
push
mov
loopne
sub
xor
xor
xor
out
inc
xchg
inc
sub
das
scas
hlt
xor
sub
lock
adc
mov
adc
mov
mov
cwtl
je
popa
mov
mov
sbb
int3
dec
pop
stc
lahf
mov
add
mov
inc
imulb
movsl
mov
add
dec
clc
mov
pushf
pop
test
push
movsl
xchg
sti
mov
mov
aas
adc
push
cmpb
stos
sbb
icebp
add
mov
test
leave
sbb
orb
es
loop
rolb
push
roll
inc
scas
test
nop
lahf
scas
cmp
scas
fs
cmp
repnz
push
sub
pop
mov
shl
or
jmp
jnp
addl
pop
sub
dec
fcompl
xlat
outsl
ret
pusha
jbe
add
mov
aas
xorb
jge
jae
mull
inc
sbb
cwtl
mov
shll
stos
call
pop
jmp
int3
mov
push
leave
xor
jecxz
iret
fisubrs
rcll
shl
shll
push
stos
push
ret
and
jp
sub
adc
cmpsb
andb
push
pop
pushl
roll
add
out
scas
ja
test
jge
push
dec
aam
call
fsts
in
adc
xor
or
dec
cltd
or
mov
addr16
pop
pop
mov
call
sbb
or
push
push
into
add
xchg
jb
mov
inc
in
call
xchg
jp
scas
mov
dec
je
aad
subb
push
imul
dec
stos
mov
inc
xchg
or
mov
sub
aaa
std
cld
mov
lods
sub
rorb
fists
movsl
cmc
cmpsb
mov
testb
xor
loop,pt
dec
hlt
mov
xor
jno
inc
mov
inc
les
stos
cmp
clc
outsl
mov
dec
jl
sub
cwtl
push
lods
lods
hlt
fstl
arpl
cmpsl
dec
and
push
push
sub
mov
in
lods
push
cmpsl
sbb
sbb
push
push
gs
xlat
pop
ljmp
mov
arpl
push
out
push
movsb
inc
stos
lea
jo
push
adc
lods
adc
sbbb
outsl
and
xor
ss
push
jge
mov
jnp
mov
and
mov
mov
mov
ja
jns
dec
daa
pop
mov
mov
jns
push
es
loope
fsubl
add
jmp
inc
cmovle
cmpsb
sahf
enter
sbb
xchg
adc
jecxz
sbbb
loope
adc
inc
sbb
jl
mov
movsl
and
aaa
inc
into
stos
flds
mov
cmpsl
cltd
mov
scas
jmp
test
xchg
or
cmp
xchg
dec
add
aam
push
imul
popl
int3
add
stos
out
dec
or
dec
jae
movsl
jmp
pop
repz
into
hlt
shl
xor
hlt
cwtl
cmpsl
sbb
inc
fsubrl
arpl
in
sbbl
int
cmpsl
in
iret
into
lret
sbb
js
and
pop
mov
pminsw
jb
adc
bound
add
ret
dec
sbb
dec
dec
push
cmp
or
hlt
jbe
add
out
mov
pop
or
jl
fsubr
xchg
sub
dec
in
sti
dec
and
cli
scas
xor
jge
aad
cmp
dec
xchg
pop
jo
loop
or
xor
jp
jmp
sahf
jnp
dec
shll
jge
bound
xor
or
xlat
cld
ljmp
enter
and
popf
repnz
movsl
pop
mov
jle
inc
mov
je
mov
mov
push
dec
ljmp
mov
cmc
in
push
xor
jp
and
and
mov
jmp
int3
cmp
nop
dec
pop
jne
es
sbb
xor
rcll
add
adc
lahf
mov
fmuls
shll
addl
cli
fwait
lds
ret
mulb
adc
push
test
mov
gs
mov
lahf
push
hlt
pop
mov
sub
popf
repnz
ja
add
push
cmp
std
mov
in
add
jg
insb
and
or
in
repz
jb
ret
arpl
pop
and
pushf
mov
mov
imul
cmpsl
lods
enter
leave
ja
outsl
mov
lods
xorb
cltd
dec
arpl
decl
inc
mov
xchg
cmc
jns
sbb
mov
mov
std
adc
test
mov
cmc
out
ja
dec
movsl
jne
mov
imul
out
ljmp
arpl
add
fcom
inc
mov
data16
sub
lods
or
push
push
cmp
xor
add
jl
mov
icebp
inc
scas
std
inc
out
pushaw
push
add
dec
loopne
sbbl
xor
fs
lods
insl
mov
hlt
enter
xor
fstp
mov
dec
lahf
bound
dec
out
rcrb
ds
fs
jmp
xchg
out
ret
pop
mov
xchg
add
jne
pop
je
and
jge
sarb
icebp
fwait
mov
pop
push
add
add
sub
shr
int3
mov
stc
mov
clc
cmpsl
or
adc
dec
icebp
or
sub
inc
push
in
pop
xor
adc
push
dec
out
pop
pop
xor
or
stos
lcall
add
sub
popf
fcmove
push
sub
fnstcw
movsl
into
in
stos
xchg
lods
test
cwtl
loopne
inc
cmc
out
sbb
pop
lods
inc
dec
comiss
mov
sbb
jecxz
push
adc
xchg
fstpt
lods
cmpl
aaa
push
sbbl
mov
cmpsl
sbb
sbb
mov
arpl
cmp
xor
mov
outsb
iret
mov
out
jge
mov
gs
sbb
in
lcall
sub
fwait
dec
lahf
into
std
mov
mov
mov
mov
mov
mov
adc
ret
jb
dec
jns
dec
sbb
ljmp
sub
adc
dec
testl
mov
and
lret
jmp
pop
mov
push
popf
mov
sub
lea
int
imul
jg
test
jp
pop
repz
scas
and
mov
mov
in
pushf
dec
fldl2t
scas
xchg
push
mov
int3
dec
adc
aad
lock
aam
push
pop
loopne
xor
hlt
ja
loope
cs
stc
mov
inc
xchg
shr
mov
int3
sub
mov
xchg
add
js
adcl
mov
xorl
lds
stos
mov
xlat
xor
cmp
insb
es
in
xchg
and
les
dec
jl
lahf
cmp
xor
mov
bound
inc
leave
pop
movsl
lret
stos
jno
push
push
in
cmpsb
cli
inc
ret
mov
push
adc
xchg
mov
and
xchg
mov
hlt
scas
out
icebp
pop
test
xchg
mov
rcrl
inc
xor
jne
mov
and
aaa
in
mov
mov
mov
cld
enter
add
adcb
mov
cmc
mov
enter
test
push
mov
popa
testl
jl
dec
lods
jp
cmpsl
in
imul
fisttps
jecxz
dec
jnp
sub
mov
je
and
test
ja
sti
stc
sub
pop
pop
sub
jle
mov
add
jns
scas
out
jge
aaa
test
jge
mov
xchg
test
sub
fld
pop
push
insb
enter
lea
out
addr16
insb
rcrb
pop
or
jp
cmp
xor
lret
cmp
pop
dec
push
rolb
arpl
das
lods
and
pop
and
dec
test
enter
dec
sarb
dec
ret
mov
clc
js
in
mov
int
dec
mov
adc
sbb
adc
dec
mov
std
jne
daa
pushf
dec
into
fs
test
and
ret
push
insb
xlat
jns
or
dec
out
push
mov
cs
fdivrp
fwait
pusha
or
or
xlat
xchg
inc
stos
mov
test
cld
inc
pop
dec
dec
scas
push
pop
rep
jo
mov
int
xor
movsl
inc
cltd
outsl
fidivrl
mov
mov
roll
sbb
mov
cmc
hlt
int3
sub
add
push
or
pushf
lcall
stos
stos
or
in
inc
adc
fdivrs
lods
mov
jle
mov
shll
pop
cmpsl
les
loopne
test
call
mov
cmp
int3
adc
pop
fldcw
mov
inc
int
je
mov
mov
mov
jg
fwait
movsl
cmpb
rclb
cs
push
push
push
inc
jg
pop
cmp
iret
jno
fldt
xor
add
cmpsl
inc
rolb
hlt
dec
loop
and
mov
idiv
test
scas
rcrl
or
inc
sub
test
lds
sbb
inc
sub
mov
lcall
mov
mov
mov
stc
xchg
adc
ss
mov
mov
mov
nop
aaa
dec
mov
movsl
and
adc
aaa
sbb
add
cli
xchg
loop
add
dec
ds
hlt
clc
sbb
inc
xor
stos
sub
jbe
fs
xor
xchg
or
and
outsl
and
push
pushaw
dec
push
imulb
xchg
mov
or
sbb
dec
fs
inc
and
rcrl
les
sub
sub
jl
adc
jno
dec
into
lods
jns
lahf
ss
stc
mov
insb
mov
rorl
mov
enter
inc
loop
leave
loope
adc
mov
testb
inc
test
mov
movsb
push
jb
push
sbb
xchg
pop
add
jne,pt
ror
mov
into
lods
cmp
sub
aad
outsl
push
mov
mov
xor
repz
xchg
mov
jl
xor
shlb
test
mov
mov
add
call
notl
aam
popf
pop
fs
subb
jmp
fwait
push
add
add
sub
and
jge
imul
adc
cmc
fsubs
adc
mov
inc
hlt
jmp
jbe
pop
fdivr
movsb
in
add
insb
mov
cmpsl
jp
arpl
mov
movsl
add
or
shlb
dec
mov
add
mov
jp
leave
xchg
and
insb
addl
adc
js
jl
je
shrb
mov
pop
mov
xor
mov
inc
or
lods
mul
adc
dec
jmp
or
daa
js
ja
sub
in
sub
sbb
daa
fidivrl
cs
pop
inc
inc
jo
inc
call
cmpsb
dec
scas
shlb
lds
cmpsl
push
movsl
ret
clc
jb
push
stos
jecxz
sbb
lock
sbb
mov
cwtl
and
push
xchg
ficompl
add
sub
or
jae
movb
addb
jns
mov
enter
pcmpgtd
jp
sbb
jnp
fcmove
mov
lret
notl
jns
sub
mov
push
and
stos
fadds
loop
sbb
test
sbb
sbb
into
jns
scas
dec
lahf
sti
ret
cld
jae
add
cmp
aad
xchg
pushf
mov
sbb
insb
adc
mov
cmpsb
dec
popfw
rcll
aam
repz
pop
fistps
and
mov
es
test
mov
sbb
xchg
stc
test
stos
loopne
lcall
andps
cmp
lret
jl
jo
dec
and
stc
mov
inc
jnp
cmpsb
mov
mov
scas
inc
mov
push
mov
js
fists
leave
or
incb
fs
push
mov
dec
and
adc
push
repz
aas
pop
and
mov
mov
pop
lods
gs
loop
sbb
dec
sub
push
jno
lcall
or
push
jne
test
pop
jge
sbb
fcoms
xor
test
cwtl
daa
xor
add
repz
and
cld
out
cmpsl
dec
jnp
mov
mov
mov
lea
loopne
insb
push
in
xchg
dec
ret
pop
jb
sub
shl
mov
jl
cmp
xchg
sub
sub
jns
cwtl
and
out
adc
int3
fildl
cli
push
out
mov
test
and
adc
loopne
daa
adc
and
add
lods
fwait
push
cmp
sub
stos
out
mov
mov
sbb
pop
xor
insl
sti
mov
jecxz
add
in
pop
cltd
stos
and
jns
sbb
dec
jg
gs
imul
lret
add
cmp
or
dec
das
mov
jl
push
test
push
inc
inc
movsb
in
js
repz
inc
xlat
rorb
sbb
mov
mov
shrb
sbb
enter
cld
loopne
lret
testl
shrb
pop
mov
jmp
sbb
aas
repz
fsubrs
dec
xchg
jns
and
scas
sti
mov
mov
push
add
sub
xchg
or
push
pop
fwait
and
and
jb
inc
and
out
aad
adcl
orl
push
ret
fnstenv
lcall
in
sub
in
mov
int
out
cs
adc
dec
outsb
mov
push
icebp
jne
icebp
dec
je
dec
mov
push
sahf
lds
fcmove
iret
or
jns
call
and
insl
add
sub
and
daa
adc
js
repz
ds
push
int3
sub
pusha
ret
hlt
fsubr
shl
mov
xchg
scas
jb
and
inc
push
mov
and
stc
push
adc
xadd
out
xlat
fimuls
and
pop
dec
or
dec
movsl
jne
pop
cmpsl
sub
jl
jle
dec
pop
iret
lcall
mov
fs
add
jno
cmp
rorl
aaa
mov
cld
add
pop
sub
xor
inc
and
xor
fdivl
icebp
sbb
or
cmp
stos
ljmp
xor
js
je
xor
cli
test
jae
mov
loop
push
loope
fsts
sahf
xchg
lods
imul
and
or
jle
sub
xchg
je
popa
jecxz
subl
pavgw
or
adc
sub
add
fidivrs
stc
daa
xor
xor
push
cmpsl
daa
or
fdivl
inc
and
rclb
add
iret
orl
or
cmpsb
sarb
xchg
rcrb
add
mov
mov
enter
ljmp
pop
ret
inc
aad
and
daa
add
setge
lret
ret
orb
add
ss
in
in
scas
cmpxchg
and
mov
and
mov
in
add
dec
dec
das
dec
movsl
rclb
push
push
incl
mov
lock
int3
int
push
out
add
push
addb
fistpl
or
fisttps
dec
scas
into
xor
add
sub
icebp
ja
jne
lods
mov
fdivrs
ja
daa
into
out
sbb
fistps
filds
popa
xchg
and
cmpsb
jae
ds
loop
inc
xor
jmp
sbb
and
xor
addb
cmp
add
pop
jno
jae
outsb
xchg
push
add
push
xlat
jae
dec
inc
fbld
or
outsl
cwtl
mov
fldl
outsb
in
aam
jnp
or
xsaves
das
adc
cmp
lods
mov
fs
xor
xchg
lea
sub
push
ja
mov
pusha
rcrb
int
in
push
into
gs
les
pop
lret
mov
mov
xchg
cmp
sbbl
push
or
orl
outsl
cmc
jno
dec
int
add
cli
cmp
jecxz
int3
cli
pop
pop
cltd
fs
pop
dec
or
push
stos
loopne
mov
movsl
inc
xor
gs
pop
ljmp
movsl
push
fisttpll
inc
mov
stos
add
mov
jnp
lods
clc
std
push
ja
pop
imul
or
pop
roll
fdivl
mov
divl
inc
adc
jb
pop
sub
xlat
jg
or
lret
aam
into
cmp
bound
and
inc
lcall
mov
adc
lret
setae
xor
pop
dec
xor
mov
mov
push
dec
je
or
cmp
pop
sbb
pop
adc
push
or
and
loopne
enter
xor
les
and
bound
aam
loope
icebp
or
or
jg
test
mov
rcrl
add
cpuid
sbb
scas
call
mov
cltd
add
jp
add
mov
ret
mov
int
aad
sbb
out
lock
loop
mov
sub
mov
movsb
fsubr
movsb
aam
pushf
scas
lods
push
in
sbb
xchg
cwtl
addr16
push
cmp
mov
cmp
shll
clc
add
idivl
dec
fistl
push
imul
sbbl
dec
bound
jae
push
mov
cs
jp
mov
xor
jno
rcll
sbb
pop
gs
mov
fs
fnsave
jg
pop
sarb
xlat
rclb
sbbb
scas
fstps
cmp
es
aad
scas
push
pop
add
imul
add
sbb
sub
rclb
repnz
sub
push
test
ljmp
int3
lahf
dec
fs
sub
push
push
loop
and
cmp
sarl
dec
inc
fs
out
data16
jmp
mov
sub
push
push
sbb
fsubl
pusha
sbb
sub
sbb
addr16
js
fadd
jge
xchg
gs
inc
jecxz
jp
lahf
inc
xchg
movsb
add
ljmp
pop
sbb
dec
and
mov
or
gs
test
push
sub
es
scas
shlb
cmp
das
sbb
pop
pushl
test
lock
pop
test
in
and
aad
sub
aaa
pop
rorl
out
test
push
push
or
cmc
test
stos
sub
mov
mov
push
lds
loopne
or
aaa
dec
test
sbb
gs
mov
popa
mov
adc
sub
pop
loop
popf
sbb
add
xor
xchg
mov
fxsave
lahf
fldl
or
dec
xchg
fildll
cwtl
xor
pop
mov
adc
in
mov
enter
cwtl
pop
push
xchg
push
xor
pop
jg
bound
icebp
lret
pop
xor
xor
jmp
stos
jbe
jge
dec
push
pop
les
in
mov
inc
repz
shll
add
and
outsl
scas
mov
pop
mov
ficoml
test
les
and
mov
lock
and
sub
es
xor
fwait
clc
dec
push
add
push
pop
mov
push
in
sub
pop
mov
add
fsubl
dec
push
insl
xchg
sbb
add
jbe
or
inc
jecxz
xchg
sub
not
mov
leave
jbe
adc
inc
sub
sti
and
jnp
jo
aam
mov
lret
cmp
js
mov
xchg
cmp
sbb
inc
xlat
inc
push
cs
adc
dec
sbb
sub
and
fistps
arpl
popf
or
xchg
aam
nop
sub
add
xchg
test
mov
sub
xchg
pop
dec
mov
mov
push
fimuls
sbb
xor
sub
xchg
inc
mov
stos
sub
cs
dec
cs
test
flds
gs
gs
jge
in
cmp
scas
call
fildl
push
mov
lock
pop
scas
inc
repnz
push
ljmp
lods
inc
lret
aam
jne
mov
or
mov
sbb
call
dec
pop
push
adc
cli
les
push
insl
repz
inc
jle
leave
movb
inc
push
cmp
bound
in
pop
inc
dec
movsl
es
insl
jb
mov
pop
mov
mov
pop
sbb
jo
xchg
jle
loopne
test
add
cmc
imul
lods
xor
lret
and
rcrb
sbb
mov
dec
imul
cmp
icebp
aam
ja
aam
jb
pop
sub
dec
rolb
xchg
pop
pop
xchg
or
pop
fidivrs
movsl
cltd
xchg
pop
inc
int3
outsb
xchg
pop
and
aad
loope
lods
ljmp
jmp
xor
mov
cmp
fnstcw
fcompl
and
ljmp
dec
add
sub
sahf
aam
je
cmpsb
or
lahf
sub
xchg
cli
pop
jae
outsl
mov
sbb
lea
or
push
or
insl
cmp
mov
es
lret
pop
adc
pop
addr16
mov
fsts
inc
or
sahf
adc
sub
testb
push
iret
gs
js
lock
push
jge
int3
test
pop
or
sbb
pusha
fisubrl
add
sbb
ret
and
push
sub
lret
ret
loopne
add
jno
stos
lret
sub
dec
loop
xchg
aam
hlt
lea
mov
fisubrs
popf
mov
gs
push
push
dec
or
lahf
pop
adc
lods
mov
test
inc
js
cmpsl
movsl
mov
mov
out
hlt
orb
ss
fistl
mov
push
jl
bound
icebp
inc
dec
pop
inc
and
sub
and
scas
pop
out
fsts
fcoms
sbb
mull
clc
or
sbb
dec
sbb
mov
pop
sub
sbb
mov
dec
mov
sub
adc
mov
pop
mov
pusha
stos
jmp
mov
movsl
fld1
mov
pop
xchg
subb
pop
hlt
inc
or
mov
cld
pop
push
mov
out
mov
mov
dec
push
dec
pop
loope
shll
pop
cmc
or
jmp
ja
sub
or
leave
push
pop
sub
insb
xchg
or
xlat
stc
xor
int3
data16
dec
fucomi
xchg
cmc
cmp
int3
mov
cmpb
xchg
nop
pop
fldl
mov
mov
pushf
push
inc
dec
pushl
pop
push
cmpl
mov
push
rcrl
int3
push
bnd
push
mov
pop
sti
fsubrs
mov
cmp
adc
cld
test
lret
pop
lcall
add
lds
add
mov
cwtl
mov
push
insl
inc
sub
push
in
dec
jp
sbb
dec
shrl
and
sub
push
imul
inc
popa
push
push
loop
xlat
je
jecxz
ret
mov
ss
insl
test
iret
in
mov
mov
inc
or
test
jg
sub
out
jp
and
movsb
mov
jb
push
sti
sbb
je
sub
dec
imul
sbb
xchg
jge
push
mov
adc
pop
mov
dec
cmp
mov
dec
or
sub
push
in
jle
shll
mov
mov
stos
jo
and
mov
ja
cmp
in
cltd
sbb
ss
lods
fldcw
add
mov
int3
pop
jns
test
std
mov
dec
push
xchg
sub
das
and
and
sub
jle
push
inc
jge
sbb
inc
lcall
movsl
rorl
jno
rorl
in
loop
out
xor
js
rcll
mov
test
push
lahf
lea
adcb
mov
xor
push
test
cmp
dec
pusha
jno
loopne
cmp
and
xchg
push
cmp
ss
jns
mov
push
mov
lcall
pusha
adc
loop
or
insl
inc
xor
scas
add
repz
add
add
and
cmp
jbe
sbb
xlat
shll
cltd
lahf
lret
lcall
sbb
lahf
fisubs
sbb
adc
addr16
and
les
popa
push
js
mov
inc
sbb
inc
pop
ror
out
sbb
add
pop
ss
stos
adc
dec
push
divb
sysenter
cmp
clc
into
adc
or
xlat
out
push
dec
inc
dec
cmp
lahf
xor
pusha
or
test
roll
imul
cmp
cwtl
cmc
imul
lahf
lods
inc
pop
out
shrl
pop
push
dec
mov
movsb
cmc
jnp
inc
andb
adc
pop
in
dec
gs
dec
mov
jp
call
pusha
ss
sub
sbb
fsts
xor
leave
rolb
shlb
jmp
pop
cltd
loop
jne
js
mov
jnp
and
cmp
xchg
je
arpl
js,pn
enter
gs
je
or
into
pop
inc
pushf
jb
out
sbb
and
dec
pop
jle
push
push
lock
in
data16
xor
in
xor
out
mov
call
test
sub
ficoms
mov
adc
adc
lcall
rorl
mov
shll
lea
popa
fidivrs
nopl
lcall
cmp
lds
dec
sarb
pop
inc
jl
inc
out
jns
dec
push
jecxz
shr
mov
clc
pop
mov
cmp
dec
push
shrb
sbb
and
pushf
and
imul
xchg
sub
xorl
ret
push
out
jg
xchg
push
mov
adc
push
pushf
add
mov
and
dec
sub
xchg
push
fisttpl
pushf
jo
push
jno
mov
div
dec
int3
or
in
push
sti
lret
jp
push
adcl
cmp
pushf
mov
lods
mov
mov
jbe
mov
repz
data16
jecxz
or
jbe
and
and
fbstp
xchg
orps
stos
std
std
xlat
mov
fcomps
icebp
mov
and
idivb
std
out
adc
xor
les
sub
int3
push
inc
mov
push
js
lods
cs
stos
in
mov
mov
pop
sbb
cmp
pop
jl
mov
pop
aaa
jl
xor
and
fucomp
mov
sbb
jg
push
jecxz
inc
ficoms
ljmp
sbb
jg
dec
loopne
ds
pusha
std
scas
ja
pushf
pop
fdivl
fnstcw
push
sbb
addr16
mov
fstps
cmpsl
xchg
nop
inc
stc
inc
jne
inc
rclb
scas
enter
sbb
jbe
push
ja
imul
scas
adc
and
sbb
repz
scas
pop
and
add
and
scas
stc
lds
jecxz
stc
xchg
repnz
in
stos
xchg
cmpsl
lods
loopne
sub
and
aas
xchg
outsl
xor
fcoms
sbb
mov
pop
popf
push
fcompl
int
and
fnstenv
out
fistps
pop
outsb
adc
rorb
jb
icebp
xchg
xchg
insl
mov
mov
lcall
pop
js
and
outsl
jmp
cmp
js
mov
leave
cmc
or
inc
cli
out
mov
xchg
loop
mov
jae
int
loope
pushf
repz
das
push
loopne
push
sti
aas
mov
in
mov
xor
nop
mov
fadd
xchg
and
pop
mov
jmp
inc
push
push
sub
imul
mov
adc
dec
shll
sub
fs
test
jecxz
mov
js
cmc
cmpsl
and
rorb
icebp
lods
sub
inc
ret
mov
pushf
xor
mov
cld
dec
xchg
cmpb
lds
mov
jp
mov
and
iret
mov
push
mov
out
loope
xor
cmpsb
lods
xor
dec
push
xlat
jl
ljmp
int
mov
repnz
dec
fildll
adc
push
nop
pop
out
cmp
imull
mov
pop
sbb
ret
loop
and
dec
add
in
mov
aaa
lock
addr16
bound
and
and
jne
adc
ja
pop
sahf
mov
xchg
popf
jbe
iret
or
fcompl
pop
pushf
roll
mov
scas
mov
cmp
push
mov
pop
rcll
dec
sub
xchg
mov
adc
or
and
mov
mov
cmc
adcb
std
cmp
insl
pop
cmpsw
out
cmp
push
and
mov
inc
push
cmpsb
sbb
lods
xchg
sbb
fsub
shrl
sub
mov
jns
aam
shrl
add
dec
iret
or
add
push
mov
or
mov
xchg
gs
pop
sub
add
pop
pushf
jae
mov
inc
mov
pop
mov
inc
stos
or
mov
ja
mov
mov
or
pop
leave
add
xchg
dec
cs
insl
shrb
nop
test
scas
dec
ret
shll
fiadds
icebp
mov
cmp
pop
or
iret
jl
fldenv
jle
lods
outsb
in
lahf
fmull
popa
jb
loopne
mov
jl
cmp
push
ja
pop
stc
out
into
loope
es
mov
push
ljmp
mov
xchg
imul
andb
in
cmp
jecxz
fistps
jb
lea
and
cvtps2pd
cmp
mov
lret
jge
add
pop
dec
sbb
in
push
push
popf
stos
dec
fisttpl
roll
add
gs
lret
add
cli
and
sbb
adc
mov
out
in
jecxz
inc
mov
mov
adc
ficoms
sbb
mov
xchg
mov
mov
push
adc
add
pop
mov
pusha
xchg
iret
fwait
jns
in
outsb
pushf
pop
aaa
xchg
lods
mov
or
adc
pop
out
pushf
rolb
ss
and
xor
popf
loope
xchg
mov
jl
or
pop
or
cmp
sbb
mov
mov
xlat
cmp
pop
sbb
add
adc
arpl
dec
dec
or
mov
insb
lods
mov
das
mov
bound
shrl
stc
sub
test
outsb
xchg
paddsb
in
cmp
xor
xlat
xchg
icebp
xchg
orl
add
cwtl
add
cmp
or
pop
ret
inc
int3
test
scas
sub
lcall
push
sbb
pop
loop
enter
sti
xrelease
pop
xchg
ss
outsb
add
push
inc
and
stos
scas
in
mov
les
mov
in
push
mov
ljmp
lock
push
dec
movsb
mov
cmp
pushf
dec
rol
sbb
mov
enter
lock
dec
cmpb
or
xbegin
xchg
cmc
and
into
pop
add
or
rcl
jnp
bound
add
add
add
cltd
push
push
pop
pop
je
add
mov
cmp
cmp
mov
movsl
inc
mov
jp
lahf
xor
pop
adc
mov
insl
adc
mov
in
pusha
mov
inc
rcll
jp
lret
rol
jo
cmp
jg
pop
mov
xor
stc
sbb
int
adc
js
ret
outsl
jbe
and
mov
add
adc
jae
dec
jp
ret
add
mov
mov
std
push
out
cmp
in
sbb
dec
out
and
push
loopne
pop
push
icebp
in
aad
inc
cmp
fstps
dec
dec
or
or
sti
std
in
addr16
lods
dec
inc
cmc
mov
pop
push
mov
push
jns
in
push
push
or
add
jg
addr16
xchg
adc
movsb
nop
mov
pop
xor
sbb
lcall
inc
fcompl
xor
lahf
cmp
pusha
inc
sarl
pop
rcl
cmp
pop
fisttpl
popa
add
or
xor
in
mov
mov
test
mov
pop
aad
dec
mov
pop
negl
pop
arpl
pop
out
insb
add
xlat
outsb
cmp
out
bound
fcoms
push
xchg
out
mov
mov
or
sub
mov
cwtl
push
je
jl
dec
adc
aad
xor
inc
mov
imul
inc
dec
in
scas
sub
xchg
fimuls
push
dec
sahf
or
and
adcb
adcb
cmp
jb
data16
loope
fldenv
sub
dec
mov
clc
pusha
add
movsl
mov
call
popf
cwtl
mull
stos
movsb
movsl
push
sbb
xchg
ds
cmp
sahf
insl
inc
push
out
dec
gs
jg
repnz
or
mov
das
and
inc
int3
fsubrs
adc
cltd
pop
fs
cli
dec
jns
xor
lahf
and
addr16
andl
dec
push
rolb
dec
dec
dec
outsb
xlat
andb
sahf
std
outsb
inc
push
es
mov
dec
addr16
rcrb
shrl
or
and
push
aaa
cmp
outsb
sbb
shrb
xchg
mov
dec
clc
xchg
pop
dec
repz
pop
inc
sub
mov
mov
mov
or
dec
xchg
cmpsl
pusha
mov
mov
imul
mov
nop
repz
stos
data16
and
xchg
sbb
or
jecxz
test
fbld
out
in
adc
mov
pop
jns
pop
pop
jo
cli
xchg
pop
dec
in
fidivrs
pusha
pop
scas
not
je
adc
test
stc
push
icebp
push
xchg
sbbl
ja,pn
fwait
addr16
data16
xchg
pop
jns
fidivrs
stos
popa
adc
pop
jg
test
pop
sbb
nop
xor
push
jne
mov
fcoms
inc
call
int
stos
push
shlb
cs
and
stos
sbb
nop
fcoml
xor
cmpsl
lea
cli
pop
adc
dec
adc
adc
fwait
cmovge
jo
pop
sbb
jl
pop
inc
inc
add
out
cmpl
and
xor
fcoms
pop
jg
loop
imul
sub
aam
sub
fimuls
rol
int3
add
jge
lods
dec
dec
add
mov
in
jae
sub
inc
movsl
adc
adc
add
jne
cmpsb
add
enter
add
cmpsb
popl
idiv
xor
mov
insb
mov
sub
shlb
fldl
pop
hlt
aas
mov
les
adc
lods
aaa
sbbb
fs
push
adc
in
dec
dec
iret
and
out
xor
int3
pop
push
popf
lock
das
mov
jmp
icebp
inc
lds
xchg
stc
dec
lock
mov
lcall
and
pushf
ja
cmp
cmc
sbb
icebp
fadds
mov
or
iret
repz
push
pop
je
inc
add
bound
dec
addb
dec
pop
iret
and
inc
mov
int3
dec
rcrb
push
sub
sbb
aaa
adc
iret
fldcw
mov
scas
sub
popl
sar
push
mov
dec
adc
cmp
nop
test
nop
cmpsl
xchg
or
dec
in
cmp
mov
mov
and
jo
mov
xlat
inc
das
arpl
sub
pop
push
divb
stc
sub
dec
or
out
xor
enter
sub
sbb
add
pushf
sub
and
inc
in
mov
aam
cwtl
rcl
mov
add
pushf
cmp
scas
xor
ja
mov
cwtl
lock
pop
xchg
cmp
daa
je
aas
mov
pop
xor
mov
adc
sti
data16
test
mov
sub
lahf
adc
in
shrb
fs
dec
sub
sbb
and
sbb
es
cmpb
xchg
mov
rolb
mov
xchg
sub
and
mov
add
test
or
or
rcrl
mov
jne
outsl
cld
inc
add
out
or
mov
sub
sub
pop
jecxz
in
lret
out
mov
nop
mov
add
push
pop
divl
lods
fstps
sbb
js
inc
mov
add
pop
aad
ds
add
jg
dec
push
shlb
rorl
or
lock
pop
sbb
aas
push
jp
aad
nop
push
pcmpeqw
xor
push
mov
dec
shll
notl
int3
xor
jns
mov
mov
xor
ss
or
mov
or
outsb
in
add
out
xor
xchg
cmp
es
mov
cltd
in
cmc
insl
movsb
popa
add
pusha
lock
inc
fistl
add
fs
inc
sbb
std
jno
loop
jo
out
cltd
mov
pop
iret
dec
movb
in
test
out
sbb
and
paddusb
cli
cmp
xor
insl
test
jmp
inc
movsl
sbb
je
jbe
sbb
sbb
sarl
add
data16
outsl
jg
xchg
decl
jns
aad
adc
inc
dec
pop
sbb
adc
js
pop
xor
mov
cmp
mov
iret
pop
shr
lock
xor
xor
add
enter
mov
lret
push
aas
cmp
out
jae
push
call
cs
insb
mov
shlb
and
out
std
lahf
aas
movups
stos
add
out
arpl
sti
arpl
jne
or
push
pushf
in
add
movsl
push
scas
adc
faddp
std
hlt
insb
jno
push
out
icebp
mov
adc
mov
pop
mov
mov
inc
rcl
inc
pop
xbegin
sub
jns
and
and
or
jno
adcb
mov
mov
xchg
mov
out
push
push
lods
fisubrl
in
aad
push
sbb
aad
mov
movsb
in
mov
inc
sbb
sbb
adc
xor
mov
mov
xchg
add
xchg
psubsb
xor
rorb
ret
jle
mov
jns
stc
xchg
neg
and
cwtd
cmp
filds
pushf
lea
xor
ljmp
mov
movhps
adcb
dec
lcall
pop
rcrl
cli
ljmp
xchg
mov
mov
cmp
fisubs
stos
movsl
cltd
faddl
xchg
sbb
mov
sub
mov
stos
mov
rcrb
cmpsb
adc
adc
lock
mov
fyl2xp1
hlt
int
mov
pop
jmp
sbb
xchg
pop
push
cmpsl
adc
stos
addr16
mov
stc
adc
cltd
lods
or
loopne
mov
xchg
test
jp
inc
add
aaa
mov
push
xor
mov
fdivs
adc
pop
push
mov
data16
and
idivb
push
adc
xchg
sbb
cmc
andl
lahf
insl
je
and
push
sub
push
mov
js
xor
dec
into
adc
cwtl
jae
movsl
or
repnz
into
in
inc
sahf
imulb
fs
js
add
daa
imul
test
rdmsr
lahf
fists
mov
xchg
loopne
data16
xchg
sbb
add
dec
and
mov
loopne
sbb
hlt
mov
add
push
or
push
ret
mov
test
xchg
dec
push
les
dec
push
xlat
jo
or
dec
leave
pop
jge
je
sub
inc
add
lds
insb
push
cmp
test
pop
xor
ret
sbb
pop
xlat
lods
xchg
mov
cs
lods
in
aaa
sbb
jle
lods
jge
jmp
pusha
xchg
sub
inc
arpl
sahf
arpl
insb
shlb
adc
insl
clc
sub
loopne
fldcw
dec
sub
insl
pop
shl
stc
mov
test
xchg
inc
nop
les
adcb
stos
sbb
cmpl
adc
push
xor
inc
int3
jne
xor
add
aas
aaa
fmull
lods
dec
pushf
lea
push
push
push
cmp
cmp
icebp
bsf
dec
xor
mov
pop
cmpsl
shll
out
push
jbe
imul
sarl
add
cli
xchg
mov
push
repnz
gs
ss
iret
cld
rol
xchg
jge
scas
mov
push
cmp
push
sbb
sbb
fldcw
add
xor
mov
sbb
cs
sub
pop
push
sbb
loope
mov
mov
inc
icebp
mov
jle
mov
popf
sub
mov
cmp
mov
cmp
mov
test
lret
add
lcall
jne
jl
sbb
push
sbb
outsb
aam
push
adc
test
mov
xchg
stc
xchg
movsb
jge
sbb
gs
mov
idivl
je
add
mov
or
ret
outsb
lea
fwait
pop
add
stc
subb
rclb
ja
fs
dec
pusha
cltd
sbb
je
dec
aam
adc
mov
mov
xchg
mov
fsts
adc
jecxz
mov
pop
adc
adc
xlat
mov
cld
shrb
or
xor
aaa
dec
rcll
fnstsw
cli
xor
loopne
mov
adc
jge
filds
pop
push
xchg
jae
push
pop
enter
je
mov
sbbl
pop
addr16
int3
xor
xchg
dec
cmpsl
mov
xchg
or
sbb
sahf
push
push
daa
sti
inc
fldl
cmp
decb
mov
push
test
leave
sbb
mov
mov
adc
xor
pop
std
mov
dec
incb
pop
ret
jp
push
pop
popf
pop
add
fnstcw
lods
dec
out
cmp
lock
ret
shr
add
mov
cltd
add
popa
xchg
rclb
pop
mov
xlat
icebp
pop
ja
popf
movsb
sub
sbb
ja
cmp
xor
lcall
movsb
or
adc
jmp
fs
push
loope
std
data16
cmp
shll
mov
movsb
mov
mov
mov
cmp
mov
jl
mov
imul
adc
jb
cmp
out
cmp
les
test
dec
cmc
inc
notl
dec
pop
jns
outsb
push
aad
pop
xor
jns
or
push
inc
and
and
xlat
pop
out
mov
sbb
data16
outsb
push
mov
es
dec
outsl
jge
sbb
jp
or
rclb
aaa
sub
fbstp
loopne
insb
push
dec
mov
movsb
dec
jp
pop
xor
jns
xor
addl
loopne
outsb
hlt
out
xchg
lea
mov
jae
scas
add
cs
jecxz
push
xchg
lods
mov
lods
sbbl
mov
push
or
inc
xchg
cmp
sahf
jp
push
push
pop
pop
jb
jl
mov
sbb
mov
mov
adc
pop
insb
fwait
pushf
jg
xor
loop
push
mov
mov
sub
push
pop
cs
lods
push
ss
mov
inc
shll
imul
jb
in
mov
push
ja
mov
dec
mov
inc
ss
sub
std
sbb
push
clc
pop
or
lock
jle
std
enter
push
mov
js
dec
xchg
test
stc
aaa
mov
adc
fidivs
push
push
sahf
cli
mov
scas
mov
in
std
push
insb
jle
repz
inc
add
or
cmpsb
int3
push
and
fists
cltd
fists
lcall
sub
mov
sub
scas
in
xchg
sub
jnp
es
pop
mov
nop
fidivl
enter
pop
mov
mov
out
push
fisttpl
adc
mov
mov
ss
cwtl
lcall
iret
push
sub
in
in
lds
push
or
push
stos
mov
gs
mov
fiadds
add
and
cmp
jge
lock
andb
mov
sbb
divb
popf
js
fildl
int
lahf
mov
jp
les
rcrb
lods
insb
xchg
adc
push
js
fnstenv
or
cmp
fmul
pop
pop
and
pusha
and
or
cltd
mov
and
or
push
xor
mov
nop
mov
cli
pop
or
push
test
cmpl
lods
es
mov
dec
push
out
loopne
pop
sbb
mov
mov
data16
int3
pop
sbb
add
mov
into
inc
sbb
or
movsl
mov
adc
sbb
jb
lret
add
push
mov
stos
rorb
sub
pop
mov
xor
adc
and
jg
fsubrs
push
mov
mov
fs
inc
bound
sbbb
dec
dec
aam
test
xchg
sbb
push
scas
mov
pushf
and
lcall
dec
xchg
cmp
enter
push
cmp
xchg
cs
inc
ficompl
jb
mov
mov
xor
and
sub
outsb
xor
mov
or
jp
sahf
inc
cli
sbb
jbe
fsubrs
mov
mov
and
test
test
leave
iret
les
pop
or
mov
cmp
adc
mov
fcmovnbe
ret
ret
xor
sbb
jnp
xorb
sbb
mov
mov
and
add
cmp
in
adc
mov
std
or
mov
into
std
mov
mov
jg
xor
jl
fdiv
sbb
jmp
push
cwtl
dec
mov
mov
stc
in
sbb
fistps
jecxz
rcrl
push
stos
lods
cmp
inc
scas
push
sbb
orl
push
xor
cmp
mov
sub
mov
mov
repz
jns
movsl
push
mov
lods
xor
int3
cmp
stc
jns
adc
pop
in
sub
sbb
mov
pop
mov
and
jmp
ret
mov
sarl
inc
andb
leave
push
add
sbb
aam
dec
sub
adc
xchg
js
mov
int3
aad
test
dec
jle
cwtl
push
add
rol
cmpsl
mov
jmp
xor
stc
push
mov
les
push
les
icebp
mov
data16
das
rorl
aad
aaa
or
push
xlat
imul
mov
in
insl
push
cmp
or
dec
movsl
ret
jle
sti
aas
mov
mov
outsl
hlt
xor
dec
cli
jl
xchg
and
sbb
jge
ljmp
push
fwait
sbb
repz
and
or
std
subb
add
sub
cld
fmull
sbb
cmp
popf
test
test
cmp
out
fimull
movsl
orl
sbb
lret
push
into
lods
in
sub
xchg
rcl
iretw
push
pop
cmp
pop
loop
rcrl
push
adc
popf
pop
lcall
jecxz
push
sbb
or
sub
pop
sti
xchg
adc
pop
in
inc
xchg
pop
cmp
mov
mov
insl
mov
shr
mov
iret
rcr
sbbb
dec
lods
fcomp
push
stos
gs
jge
adc
mov
stos
repnz
mov
adc
inc
rorl
dec
push
movl
and
fs
outsl
mov
push
lcall
jg
sbb
jg
jge
xor
or
or
push
inc
jne
dec
ret
or
cmp
daa
les
push
sahf
push
push
add
mov
jb
dec
rolb
push
push
jecxz
lods
cmp
dec
pop
inc
adc
rcrl
push
pop
mov
pop
test
repnz
mov
leave
mov
outsb
push
fs
jg
loop
push
fbstp
js
aam
adcl
sub
cmp
loopne
mov
mov
or
lahf
lret
shl
adc
adc
or
popa
cltd
add
add
test
repnz
mov
das
fs
inc
inc
inc
inc
xchg
cltd
inc
hlt
cmp
addb
sub
cmovbe
pop
sbb
sti
fs
test
xchg
loope
xchg
mov
sahf
sbb
pop
jne
push
add
jae
nop
pop
divl
cld
in
jge
fstpl
xchg
lea
sbb
add
xchg
adc
sahf
or
mov
ja
or
jp
sub
jo
loopne
std
dec
call
adc
fs
sub
fs
cmp
je
roll
shufps
hlt
rorb
test
push
xor
lret
cmpsb
sub
xor
add
mov
mov
push
jno
cmp
cmc
orl
pop
roll
sbb
enter
arpl
sbb
adc
sub
cmp
dec
aam
mov
test
lcall
jecxz
dec
lds
mov
or
adc
xchg
jae
nop
cld
icebp
inc
movsb
xchg
in
adc
push
mov
sub
fisubrl
inc
fadds
dec
stos
mov
jb
pop
xchg
mov
imul
int3
push
jo
dec
sub
sbb
adc
jo
repz
xlat
inc
sub
mov
xlat
roll
nop
pushf
jbe
sub
mov
push
js
jbe
mov
lret
xchg
pop
fucomip
add
movsl
mov
jnp
jnp
push
pop
push
xlat
pushf
rorl
call
push
js
lahf
sbb
int3
fs
xor
add
cmp
xchg
sbb
pop
lcall
int3
scas
xchg
inc
aad
gs
add
jl
add
and
sbb
dec
dec
jecxz
ret
hlt
mov
inc
loopne
add
enter
push
push
push
jno
push
dec
add
cmp
sub
fwait
icebp
pop
fcompl
out
mov
xchg
mov
es
adc
popf
sarl
jne
in
xchg
sub
adc
push
repz
pop
lods
cmp
movsl
adc
pop
scas
or
dec
das
loopne
repz
popf
scas
mov
imul
ja
push
scas
xchg
rorl
dec
cmpsl
fwait
arpl
inc
xchg
lcall
scas
fstps
sbb
jo
sbb
push
xor
pop
and
insl
jmp
mov
adc
pop
pop
ret
pop
cmp
adcb
call
in
inc
mov
out
adc
cmpsl
jp
gs
aaa
xchg
int
loopne
out
cmp
aam
nop
shll
sub
hlt
cwtl
insb
xchg
daa
or
push
mov
aad
aas
repnz
push
scas
add
mov
pop
push
push
dec
push
addl
and
cld
push
inc
adc
dec
sub
cmp
xchg
in
push
subb
sub
cmpb
or
clc
cltd
movsl
dec
push
loopne
mov
int
stos
aam
pop
loope
dec
stos
xchg
aad
push
js
pop
sbb
imulb
insb
daa
testl
test
ljmp
mov
xlat
add
dec
lds
inc
push
ret
out
gs
ss
mov
xor
scas
sti
out
test
adc
clc
insl
js
xchg
and
adc
add
sbb
shll
es
mov
mov
dec
mov
movsl
pop
cmp
inc
pop
es
ret
sbb
pop
cs
test
fisttpll
ret
push
rcrb
mov
mov
xor
xor
out
lcallw
mov
in
push
push
lea
xchg
push
xor
xor
popf
sbb
mov
push
daa
xchg
es
ja
add
movsb
out
clc
iret
mov
in
loopne
mov
inc
call
inc
stos
int3
mov
nop
dec
leave
xor
cwtl
jl
insb
mov
cmp
and
xchg
nop
cmc
xchg
in
movsl
rcrl
and
add
push
lahf
fmuls
int3
stos
push
insl
scas
mov
jo
cld
subl
mov
jb
jbe
push
inc
leave
popf
adc
test
sbb
pop
enter
sbb
xchg
inc
cmp
sbb
add
shl
add
mov
push
lock
stos
ljmp
push
pop
out
push
aam
add
sub
xor
imul
mulb
push
lods
or
push
sub
dec
clc
or
jns
dec
dec
in
push
aaa
leave
xor
xchg
inc
lahf
sub
xchg
outsl
scas
insl
xchg
dec
lds
push
pop
or
ss
aad
jno
sbb
or
mov
mov
rcl
in
push
addr16
bound
mov
adc
mov
push
cs
js
jo
xor
sub
fs
insl
mov
roll
comiss
outsb
inc
sub
not
sbb
in
add
lahf
cmp
xor
cmp
imul
add
xchg
inc
or
push
sub
lds
clc
jp
inc
xlat
fnstsw
js
push
outsl
mov
aas
add
and
xchg
pop
push
jnp
mov
mov
adc
lcall
repnz
mov
add
push
clc
in
and
pop
mov
adc
mov
sub
push
inc
cmp
ja
jb
test
push
lock
stc
jns
pop
push
xchg
mov
or
xchg
jns
stc
mov
addr16
bound
adc
in
out
mov
cltd
pusha
cmp
test
adc
iret
pop
or
jns
push
mov
adc
sub
jg
cmc
sub
mov
sahf
mov
pop
mov
hlt
mov
jl
mov
inc
cld
repnz
popf
mov
xor
loop
fisubrs
aam
xchg
cli
sub
pop
mov
repnz
pop
dec
stos
ja
pushf
call
or
mull
mov
pop
ret
lods
test
out
mov
jg
pusha
hlt
mov
pop
out
xchg
mov
dec
sbb
xor
push
mov
jns
jecxz
dec
and
sub
or
dec
stos
bound
std
mov
cmp
xchg
stc
add
inc
pop
cli
xchg
and
xlat
inc
adc
push
push
dec
adc
ret
mov
jo
mov
sub
pop
add
push
sbb
sbb
and
cmp
and
dec
xchg
xchg
adcb
bound
fimull
and
dec
sub
es
lea
cs
sub
out
sarl
jmp
xchg
mov
pop
incb
push
fnstenv
sti
clc
ret
in
xor
sti
and
jge
add
jno
jns
push
adc
fildll
rcr
fs
jo
xor
add
or
stos
mov
divb
cmpsb
std
mov
and
das
sub
stos
mov
pop
lds
inc
or
add
out
fcoml
in
lret
mov
lcall
insb
scas
jae
push
or
jne
ss
leave
in
xchg
and
cltd
pop
push
push
aas
sub
mov
sub
and
xor
xchg
jnp
add
cmp
sahf
pop
pop
or
pusha
push
call
addr16
out
push
sbb
dec
dec
loope
xchg
rcr
into
in
push
in
add
xchg
push
or
cmc
sbb
dec
mov
aad
aam
push
orl
sbb
into
xorb
inc
sahf
call
and
push
fdivs
outsb
xchg
popf
std
jge
lcall
add
and
and
cmp
aam
push
gs
lods
push
push
ss
and
adc
aad
xchg
cmc
push
jge
sti
adc
mov
bnd
dec
mov
dec
push
mov
inc
or
push
out
mov
repz
stos
cs
jo
shll
bound
sbb
push
cltd
nop
fs
rcll
scas
and
push
pop
test
outsb
sub
push
pop
mov
xor
push
sbb
pop
cmpsl
inc
fbstp
adc
xchg
xor
das
movsl
out
dec
loop
fidivrl
lds
imul
aad
into
ret
ror
iret
cmc
inc
cltd
inc
lahf
rorl
adc
sub
lock
test
movsl
xchg
mov
mov
push
sub
xchg
aaa
mov
fbld
shlb
call
mov
aad
fidivrs
leave
int3
pop
psrlq
sub
loopne
sbb
addr16
call
test
cmpsl
inc
in
bound
push
xchg
sbb
loopne
dec
mov
mov
in
adc
and
push
fbstp
outsl
loop
or
mov
adc
jns
andl
mov
insl
sub
ret
adc
pop
sbb
mov
add
push
movsl
outsb
pushf
cmpsb
mov
data16
jbe
and
arpl
scas
adc
jo
sbb
ret
mov
sub
push
pusha
jl
push
push
push
mov
sbb
enter
pop
mov
cmp
pop
adc
push
pop
pop
mov
push
push
pop
daa
dec
pop
repz
aam
mov
or
lcallw
insl
ja
sti
mov
aam
ss
jbe
pop
xchg
js
pop
adc
in
adc
clc
sub
out
ss
or
sub
jo
rcr
fs
ss
sub
and
sbb
pop
jne
stos
mov
adc
hlt
ss
pop
xchg
sti
inc
shr
lock
or
add
lret
cmp
scas
aad
pop
push
sub
pop
xchg
add
jno
test
iret
xor
lret
lea
dec
cmp
hlt
dec
sub
addr16
inc
jge
negl
inc
aad
js
fstp
fists
jo
mov
or
xor
je
addl
cmp
ss
outsl
dec
ret
pop
sbb
mov
loop
test
out
adc
in
push
or
int3
fldcw
mov
xor
push
movsl
and
es
out
imul
leave
xchg
inc
add
inc
push
push
cvtpi2ps
sbb
xchg
stc
aam
lret
xchg
out
pop
xor
imul
jne
outsb
xor
inc
jle
sbb
ljmp
jmp
outsl
push
adc
fsubl
fistps
fists
mov
in
jno
cmpsb
mov
pop
in
sub
aas
mov
push
je
fwait
mov
or
xor
xchg
or
shl
dec
and
roll
mov
insl
push
clc
push
fwait
adc
mov
mov
fdivp
enter
mov
data16
or
enter
mov
aad
add
cmpsl
jle
xchg
out
push
xchg
enter
mov
mov
mov
sub
xor
mov
loop
fwait
in
arpl
sbb
sbb
cmp
mov
xchg
gs
sbb
mov
test
fstp
int
fnstcw
inc
sub
dec
xchg
arpl
add
fs
int3
and
lcall
imul
mov
int3
mov
out
sbb
leave
aad
daa
stc
dec
ret
or
rsqrtps
lods
or
xor
mov
aas
push
dec
data16
sbb
xchg
lds
cmp
out
or
in
push
or
jl
dec
fcomps
pop
lea
mov
lds
aad
lea
lods
clc
jo
mov
mov
and
pop
sbb
jg
scas
jno
mov
cmpsl
fucomip
push
and
add
push
jle
cs
movsl
push
pop
pop
jo
sahf
clc
ret
pop
jl
dec
sbb
jo
xchg
ret
dec
xchg
inc
in
bnd
push
jmp
jl
lds
stos
bound
aam
mov
scas
test
insb
jge
insb
lods
cmp
sti
sbb
pmuludq
xor
cmp
sbb
sbb
mov
loop
pop
adc
sub
mov
in
push
sub
mov
aaa
pop
shl
jmp
repz
inc
push
imul
push
dec
sub
push
adc
mov
xchg
shl
mov
loopne
std
dec
xchg
in
iret
cld
inc
push
fwait
sbb
imul
mov
mov
pop
shlb
das
sbb
push
mov
add
stc
stos
pop
mov
insl
mov
xchg
sbb
or
out
fs
xchg
mov
xchg
cmc
cs
sbb
loopne
insb
into
xchg
xchg
add
adc
cwtl
cmp
pop
dec
jl
inc
sub
or
adc
iret
ljmp
sub
fwait
jnp
mov
mov
xor
loope
cltd
or
inc
data16
xlat
fldenv
xor
xchg
push
or
fistpl
dec
sub
repnz
popf
sbb
pushf
dec
pop
iret
inc
imul
fistpl
fistps
push
sub
adc
xor
sahf
popf
lret
and
shrl
cmp
loopne
fistl
aad
test
in
inc
push
popa
push
int3
lods
out
push
cmp
mov
lcall
add
jo
dec
aaa
js
scas
arpl
fsubrs
xor
lock
jle
dec
jbe
int
xchg
mov
ficompl
mov
sbb
add
push
push
and
daa
cs
mov
and
stos
test
dec
pop
stos
mov
fsubrp
jae
fsubrs
mov
xor
mov
jbe
xor
mov
lods
shll
fbld
mov
sbb
dec
fs
call
add
sub
adc
jecxz
shl
inc
push
out
sub
pop
jmp
dec
lds
mov
cs
mov
push
movsb
sub
push
push
int
lea
jns
mov
andb
das
sbb
pop
fstps
jbe
cmpsl
pop
movsl
mov
push
shl
mov
shl
mov
popf
pop
adc
xchg
into
insl
jnp
jmp
pop
push
jmp
xchg
pop
out
dec
push
je
fistpl
mov
sub
cli
rcl
pop
movsb
out
jns
inc
pop
scas
pop
xchg
mov
mov
imul
jl
lahf
pop
mov
jb
pop
mov
shll
outsl
leave
in
sub
xchg
cmpb
and
xor
pop
stc
inc
cwtl
test
pop
push
rcrl
je
outsl
mov
xlat
enter
add
sarb
test
clc
out
in
fwait
imul
sub
jb
icebp
add
test
faddl
push
xlat
lret
cwtl
mov
push
daa
sbb
popa
fldt
arpl
mov
xor
sbb
xlat
imul
mov
ss
ss
repnz
mov
ds
fimuls
bound
lcall
push
push
cmp
ljmp
fistps
inc
and
or
push
loop
in
pusha
fstpt
dec
repnz
xor
jo
rcll
inc
sbb
push
rcll
add
adc
pop
aaa
mov
imul
dec
lods
xchg
ljmp
sbb
and
cld
scas
sti
dec
dec
das
push
cld
push
cli
stos
adc
sbb
js
ror
mov
push
jp
pop
mov
push
xchg
xor
push
mov
push
cmp
mov
push
test
xchg
sbb
fldt
ss
mov
pop
push
icebp
mov
pop
pop
sub
mov
popa
sub
xchg
push
pop
popa
mov
lods
mov
push
mov
sub
scas
or
pop
jns
dec
daa
out
icebp
xlat
shrb
jo
aam
std
dec
add
xchg
xchg
mov
gs
cmc
or
sbb
popf
add
xor
cmpl
cli
jecxz
fs
fst
arpl
subl
mov
out
inc
jno
and
add
xor
loopne
repnz
test
ljmp
daa
or
xchg
or
mov
add
ret
dec
and
popa
mov
mov
dec
dec
dec
and
dec
rcr
xchg
mov
mov
jo
imul
jnp
push
jge
cmp
aam
in
stos
stc
push
and
jbe
push
xchg
mov
jns
sbb
fcomps
jne
movsl
fisubl
mov
pop
dec
lods
add
lods
scas
iret
lods
sub
pop
sub
inc
out
inc
xchg
fdivrl
mov
das
jl
pop
push
test
dec
cmp
sub
push
mov
xchg
mov
jp
aad
insb
ret
xlat
lea
add
sbb
jb
fildl
pushf
test
add
dec
mov
pop
sub
out
pop
cmpsl
xor
xor
loopne
cmpsl
xor
dec
xor
addr16
jmp
dec
ret
fidivl
and
inc
jl
xlat
pop
ja
xchg
mov
imul
jbe
mov
jmp
xlat
test
adc
inc
lahf
dec
pop
sub
xor
das
cmp
ds
cmp
add
mov
jo
outsb
or
movsb
pop
popf
hlt
fmuls
xchg
jp
cltd
fmuls
xor
xlat
and
rcrb
jp
xchg
and
addr16
je
je
inc
push
cmpsl
fsubrl
mov
jne
xor
push
mov
inc
pop
jae
mov
ljmp
lret
inc
test
pop
push
sbb
fimull
das
cmp
dec
mov
mov
push
pop
xlat
push
jo
ja
in
add
xchg
sub
xchg
mov
je
push
mov
xor
stos
sar
push
and
fstps
inc
or
pop
imul
pusha
pop
fsub
and
scas
sub
fwait
sbb
jae
fsubr
xor
test
inc
pop
stos
int3
lds
push
leave
sarl
fidivs
rol
aam
add
in
mov
daa
pop
outsb
arpl
lahf
fsubl
scas
mov
push
sbb
stos
inc
pushf
dec
out
dec
xchg
adc
loopne
cwtl
scas
lea
and
push
adc
push
cmp
jne
adc
decl
sub
jl
sub
jl
adc
rcr
pop
call
xor
inc
out
push
pop
cltd
cmp
sarl
test
aam
sub
popf
inc
pop
mov
stc
cli
cmpsl
arpl
mov
dec
sbb
cmp
sub
mov
dec
and
stos
or
cmp
fcompl
adc
fdivrs
add
lcall
test
out
das
call
adc
ljmp
xchg
les
mov
push
sub
dec
lods
inc
sub
fsub
dec
or
push
sub
mov
push
clc
add
push
jns
push
fidivs
adc
jbe
or
notl
aas
imul
sahf
cmp
pop
arpl
jecxz
xor
xchg
xor
pushf
movsl
loopne
sti
aaa
pusha
dec
aam
test
push
int3
ss
out
pop
lods
add
jp
xor
jl
stc
fistl
inc
mov
in
sbb
push
cmp
rcr
sbb
dec
movsl
cmp
mov
push
mov
cmp
xchg
sbb
mov
das
or
dec
push
aad
or
mov
nop
push
sub
ret
lods
mov
cmp
pushl
arpl
das
mulb
mov
sub
dec
stc
sbb
pop
or
es
ja
ret
mov
mov
hlt
and
scas
sbb
sbb
mov
push
dec
ffreep
outsb
lods
dec
xor
pushf
lcallw
pusha
notl
sbb
incl
jnp
jo
push
adc
add
rcrl
dec
notb
sub
clc
dec
cmp
push
sub
xor
scas
adc
xchg
cmp
out
mov
stos
pop
and
int3
dec
aad
cltd
popa
mov
add
mov
test
adc
mov
fdiv
dec
fdivp
mov
dec
xchg
stos
push
test
jl
sbb
push
pop
xchg
mov
aad
imul
add
xchg
and
adc
jl
jb
loopne
jae
popf
add
xor
stos
sub
adc
cwtl
sub
daa
jl
sbb
pop
xchg
outsl
je
sub
cli
mov
pop
mov
pushf
sbbl
add
outsl
push
or
xlat
loopne
lock
xor
lcall
in
pop
es
dec
pop
dec
jbe
and
into
push
adc
mov
hlt
dec
mov
cmp
xchg
mov
scas
sub
jb
dec
xor
xchg
fs
dec
adc
xchg
sub
mov
cli
add
nop
inc
mov
add
pop
cmp
jg
push
and
cwtl
ret
push
sub
sbb
mov
scas
xchg
or
shlb
sahf
std
pop
or
add
data16
lretw
jg
adc
pop
outsb
sub
adc
sub
dec
mov
adc
in
jno
mov
dec
jl
das
imul
lds
mov
inc
test
inc
jl
ror
mov
inc
leave
inc
or
inc
fnstcw
test
xchg
in
iret
dec
push
or
cmc
sahf
movsl
cmp
pop
or
lret
jle
dec
mov
call
inc
mov
mov
sbb
xor
sub
sbb
jle
sbb
fimull
jnp
mov
push
insb
scas
lcall
ret
loop
pop
jg
jb
es
aam
jo
mov
imul
int3
outsb
fisubl
mov
and
jb
out
sub
push
push
mov
sarl
mov
push
rcrl
test
loop
inc
xchg
mov
mov
xchg
jg,pn
mov
adc
xchg
int
shrb
sub
add
xchg
stc
push
int3
rcrl
sbb
xchg
sub
sbb
inc
push
push
popa
pop
cmpsl
mov
xlat
ret
mov
dec
insl
adc
or
popf
jle
hlt
pop
cmp
jne
xor
xlat
out
adc
push
mov
stos
sbb
inc
dec
test
les
notb
loop
pop
sbb
mov
inc
mov
fucomp
add
or
neg
sbb
das
push
push
lods
call
sbb
xchg
hlt
ret
shll
stc
mov
push
dec
daa
neg
and
loop
imul
sbbl
dec
mov
stos
dec
adc
inc
sbb
add
stos
inc
inc
mov
xor
aas
cmpsb
inc
cmp
pop
and
xchg
mov
outsb
add
cmp
sub
outsb
imul
mov
fistl
sbbl
mov
adc
or
jae
mov
scas
sar
bound
andb
mov
outsb
add
fwait
les
add
stos
add
movsb
cwtl
xorb
xchg
or
adc
xchg
mov
js
xor
push
scas
jbe
or
dec
adc
mov
xchg
daa
lods
jp
cmp
fs
addr16
loopne
add
shlb
push
sbb
pop
into
push
ret
loopne
mov
jmp
inc
scas
jge
sbb
inc
sbb
outsl
je
inc
sub
insb
jae
pop
arpl
jge
or
incb
cmpsb
dec
adc
hlt
stos
push
mov
push
cmp
cli
cmpsl
cmp
sub
mov
jns
aad
lcall
mov
xor
mov
dec
popf
push
adc
int
and
shrb
jg
arpl
pop
sub
add
movsl
andb
inc
dec
movsl
imul
or
es
pop
inc
das
add
nop
fs
sarl
sbb
insb
mulb
les
adc
sahf
push
jne
negb
mov
adcl
jl
jns
xor
pop
jne
cmpb
outsl
and
fildll
jge
fmull
jns
dec
cmp
and
cld
xchg
hlt
adc
xchg
xchg
inc
add
ds
xor
pusha
outsb
mov
rcr
out
pop
andb
ds
inc
ficoms
testl
orl
dec
and
sub
in
mov
out
dec
sbb
jp
ss
stc
notb
clc
outsb
sbb
int
and
xorb
add
je
push
mov
test
dec
push
xchg
pop
movsb
cmpsl
movsb
pop
push
dec
sbb
pop
rcrb
ret
daa
sti
rol
push
scas
cmp
and
inc
mov
rcrl
dec
fpatan
cmpsb
push
daa
lods
xchg
data16
xor
aam
jnp
fisttpll
dec
push
xor
icebp
push
xor
scas
mov
push
hlt
test
fiadds
loopne
ltr
sbb
ret
enter
inc
popf
push
mov
xor
cmp
pop
mov
sbb
fldenv
push
lcall
ss
xchg
sahf
std
mov
jmp
int3
jge
popa
or
sbb
idivb
hlt
add
mov
inc
sub
mov
mov
loop
mov
xchg
shlb
inc
insl
xor
add
dec
mov
je
push
addb
xor
stos
inc
or
in
imul
inc
outsl
xchg
loope
movsb
and
mov
shrl
xlat
pop
and
rcrb
rcrb
add
test
out
adc
xchg
adcl
mov
int
inc
jle
adc
insb
imulb
xchg
filds
mov
arpl
ja
and
es
insb
cmp
mov
cli
sub
and
jbe
mov
nop
in
dec
mov
push
pop
fsubs
jge
dec
xchg
adc
mov
or
fs
xchg
mov
pop
std
pop
push
data16
scas
adc
faddl
mov
loop
test
sub
dec
xchg
adc
push
push
sbbl
xchg
cmp
pushf
jle
mov
jp
mov
imul
aaa
shll
push
jl
push
pop
imul
bound
sbb
rcl
mull
mov
roll
arpl
test
mov
mov
hlt
cmp
add
mov
test
out
dec
mov
dec
jnp
arpl
clc
jp
insb
int
aad
inc
mov
fs
out
pop
pop
movsl
xchg
jnp
mov
push
cmpsl
das
adc
stos
das
adc
mov
out
out
scas
sub
cmc
push
dec
jnp
fs
pop
aad
pop
sub
sti
inc
int3
das
loopne
das
pop
sub
push
stos
movsb
adc
shlb
add
and
xchg
jge
mov
lds
mov
mov
pusha
pop
jle
out
imul
cld
int
fwait
cmp
or
addl
sbb
inc
les
jmp
fdivr
adc
push
cmc
clc
add
insb
pop
jno
cmp
mov
scas
testl
xchg
stc
mov
cs
xchg
adc
add
aad
add
xchg
xchg
cwtl
aad
pop
xorl
insb
and
pop
pop
jp
lods
imul
fistps
push
inc
sub
inc
add
jl
or
scas
pop
movsl
or
sti
mov
sbb
call
sub
mov
mov
xchg
fs
sub
lods
xchg
imul
push
insb
in
popa
mov
sub
cs
scas
clc
add
xchg
lcall
add
fisttpl
lret
mov
inc
push
xlat
aad
fs
push
cli
dec
sub
cmpsl
sahf
push
sbb
pop
cmp
in
pop
ret
lea
ja
xchg
mov
cs
loope
mov
sbb
pop
leave
or
shl
dec
jb
lcall
inc
cmp
dec
mov
xlat
dec
repz
lods
jp
in
mov
jb
inc
out
add
xor
add
rclb
mov
or
js
and
add
cmp
xor
fcmovnbe
xor
jne
hlt
xor
sbbb
mov
dec
cmp
add
cs
add
add
jne
add
jge
call
nop
lret
out
cld
dec
jb
mov
and
dec
inc
xor
and
pusha
sub
loop
dec
push
pop
push
push
pusha
aam
insb
add
imul
sub
out
dec
jp
pop
dec
push
add
mov
mov
push
mov
adc
sub
mov
test
addl
xchg
pop
push
cwtl
insl
mov
sub
and
hlt
lock
je
sbb
fsubl
out
lods
and
sbb
mov
dec
sbb
push
sub
out
outsb
jbe
addb
movsb
aaa
mov
stos
in
cmp
pop
aaa
mov
shlb
add
rcr
xor
jno
mov
sbb
xor
dec
push
iret
popa
ss
jecxz
lcall
adc
adc
orb
mov
sbb
push
xor
push
push
cmp
mov
mov
in
jmp
dec
pushf
xor
or
push
iret
jg
dec
aaa
jmp
movb
movsb
scas
sbb
sbb
loop
push
xchg
mov
sbb
js
cltd
push
insb
sbb
rol
add
fs
push
arpl
xchg
dec
ds
mov
iret
stos
jecxz
add
pop
mov
loope
outsb
rcrb
xchg
addr16
push
jge
jge
jge
add
mov
test
mov
cmp
dec
inc
push
cmp
xor
test
xchg
movsl
mov
or
fnsave
gs
aam
mov
mov
add
xlat
or
mov
daa
pop
push
push
sahf
xchg
cmp
xchg
xor
push
xor
dec
stc
sbb
aaa
addb
sti
lods
jmp
sbb
mov
in
nop
inc
gs
jbe
mov
scas
mov
jecxz
pop
mov
in
add
mov
dec
popa
ret
pop
in
or
mov
cmp
icebp
cld
incb
push
and
dec
rcrl
jecxz
icebp
pop
add
fistl
fimull
sbb
sub
or
sbb
imul
xor
adc
sub
insb
shr
lds
adc
mov
cmc
xor
mov
mov
cs
adc
jo
push
sub
push
mov
push
adc
adc
js
xor
inc
ret
push
adcl
or
aaa
and
mov
inc
ds
pop
push
lret
push
ret
addr16
dec
and
cmc
pop
insl
cmpsl
loopne
out
mov
xchg
sub
pushf
xchg
sub
dec
or
testb
cs
push
pop
mov
nop
cs
jbe
jg
add
and
push
popa
and
subb
sbb
xchg
lock
xor
push
xor
and
outsb
cmp
test
mov
mov
lcall
jp
lcall
outsb
push
lret
jne
out
cmpsb
cmp
cld
les
out
inc
sbb
push
dec
lret
lods
jle
ljmp
jg
xor
mov
or
sbb
leave
mov
push
out
int
fsub
adcb
xchg
rclb
xchg
in
mov
jne
es
or
push
sbb
adc
lahf
aaa
sbb
xor
xor
pop
pusha
push
pop
rcr
adc
loopne
add
outsl
inc
insl
pop
pusha
pop
sub
dec
dec
movsl
call
cltd
cld
or
cs
sbb
loope
fsubrs
or
pop
gs
sub
testb
ss
jle
adc
daa
mov
pop
and
test
mov
xor
push
bound
or
lods
cmc
inc
out
adc
sub
test
fcomps
out
mov
insb
jl
test
and
xchg
mov
jmp
mov
push
pop
sub
cli
dec
xor
dec
cs
dec
push
out
clc
xchg
mulps
sti
sbb
sti
pop
es
jp
test
cld
dec
cmp
stc
test
dec
fnstsw
and
jecxz
jno
shlb
jno
les
cli
xchg
xor
xor
mov
sub
jmp
push
and
inc
cs
pop
sbb
cltd
mov
cmp
orb
shrb
pop
and
scas
jge
xor
aas
sti
idiv
push
cmp
call
mov
pop
pushf
inc
pushf
sarl
ss
inc
cmp
dec
mov
or
cwtl
nop
or
das
lret
lock
pop
push
pop
das
out
sbb
ljmp
dec
inc
lock
je
rorb
xor
or
pop
mov
add
cwtl
mov
andl
sbb
mov
inc
jecxz
sbb
push
dec
push
and
mov
loopne
inc
in
std
dec
inc
mov
cmp
push
mov
pop
call
jbe
inc
mov
xchg
int
inc
cld
lods
mov
mov
or
loopne
movsb
jg
sarb
push
sbb
nop
push
dec
sbb
scas
dec
cmpsb
clc
push
fs
or
inc
xorb
mov
push
es
insl
ja
and
cmp
mov
imul
aam
cltd
push
sub
test
mov
daa
sbb
pop
or
mov
and
and
add
sbb
mov
pop
add
fisttpll
push
lock
mov
jl
rorl
push
push
test
jne
mov
adc
pop
outsb
mov
mov
js
adc
push
loopne
jnp
jb
push
stc
fdivl
aas
imul
repnz
cmp
lcall
jmp
push
lds
shrl
jle
pop
dec
mov
pop
test
and
and
notb
inc
xor
pusha
add
mov
rorb
push
lcall
push
mov
push
es
ret
push
out
icebp
fsubr
adc
std
popf
xchg
ljmp
push
jg
mov
pop
mov
sbb
shlb
push
rcrl
rcll
out
xor
and
sahf
xchg
stos
or
stc
mov
pushl
ret
dec
dec
cmp
lods
cwtl
das
scas
loop
pop
inc
cmc
or
or
mov
addr16
xchg
clc
fmul
sbb
sbb
xor
les
in
inc
xor
mov
mov
jmp
pop
in
mov
clc
push
daa
imul
call
pop
out
aad
out
sti
scas
fs
sahf
xlat
push
in
nop
push
jge
dec
aas
inc
sbb
sbbb
mov
push
repz
jo
pop
xlat
pop
icebp
clc
push
outsl
vdivsd
imul
or
jno
xor
mov
push
mov
ficompl
cmp
out
leave
aad
push
and
fisttpll
cmp
lahf
ja
add
scas
inc
adc
or
leave
adc
push
out
popf
jecxz
aas
fwait
ret
push
jbe
mov
sbb
dec
adc
rol
mull
pop
cmp
jmp
mov
repz
loop
jno
je
mov
jo
jp
cld
push
stos
test
push
cmp
mov
enter
adc
and
cmp
sub
test
adcl
lret
cmp
add
mov
ret
enter
xor
cmp
adc
js
push
mov
bound
or
or
cwtl
scas
in
dec
xlat
out
sbb
jp
add
aaa
sbb
pop
jle
mov
jg
out
sahf
inc
push
and
mov
add
in
scas
xchg
dec
inc
push
maskmovq
xchg
aam
mov
addr16
ljmp
sbb
inc
lahf
add
pop
cs
xor
mov
ljmp
mov
pop
pop
xor
dec
lods
push
or
lret
sbb
sahf
shrl
lret
add
pushf
fwait
sub
mov
shlb
xlat
mov
sub
push
out
ljmp
and
pop
or
inc
push
sbb
push
cmp
dec
mov
mov
ficomps
mov
scas
xor
sbb
aam
sub
xor
adc
sub
adc
dec
loop
inc
or
je
test
push
popf
pop
enter
sbb
lds
mov
das
pop
cmpsb
inc
pop
pop
pusha
xchg
and
mov
fstps
das
xchg
adc
shrb
mov
jo
inc
fwait
lock
lods
or
int3
lods
cmp
xchg
movsb
in
push
push
sub
iret
inc
add
add
pop
hlt
fldl
out
mov
pop
dec
test
push
cmp
repz
adc
cwtl
pop
mov
scas
xor
mov
in
mov
dec
stc
in
in
fnsave
push
enter
pop
je
int3
mov
adc
scas
jno
lods
mov
lcall
mov
ds
push
jnp
ret
push
push
xor
mov
lret
mov
decl
add
xor
mov
add
mov
mov
or
mov
adcl
mov
pop
mov
pop
push
insl
mov
lret
push
in
add
push
add
xor
sbb
loopne
xlat
dec
jp
ret
or
xor
frstor
mov
int
insl
sbb
mov
loop
push
push
xor
push
cmpsl
notb
mov
push
scas
pop
push
clc
xchg
or
mov
cmp
adc
dec
out
push
in
mov
fistps
and
dec
lret
push
mov
mov
push
xor
or
lods
pop
sub
mov
pop
nop
lret
jno
stos
adc
les
jg
shlb
fucomip
negl
sub
push
scas
in
test
sub
add
inc
sarl
lods
mov
push
and
pop
rcrl
jmp
inc
pop
es
lods
lea
mov
dec
in
imulb
aas
adc
lds
push
outsl
jg
jb
mov
jecxz
cltd
out
daa
cwtl
popa
nopl
and
mov
jo
add
push
shrb
sub
fisubs
cmp
mov
mulb
jecxz
mov
sub
sarb
mov
je
mov
fidivrs
out
lcall
jge
sbb
test
sarb
xchg
call
or
lahf
lods
jns
inc
out
repz
dec
icebp
adc
loopne
xchg
or
inc
xchg
shlb
int3
je
dec
sti
push
jmp
out
mov
cmp
lea
pushf
insb
xchg
gs
aam
lea
test
jbe
mov
or
test
add
push
cmp
lock
imul
jb
repnz
sbb
or
push
lret
pop
pop
cltd
jl
ss
inc
add
mov
jle
gs
dec
push
jg
fcoms
notb
ja
add
std
outsl
hlt
jns
sub
dec
cmpsl
ret
push
push
out
push
js
es
pop
movnti
popl
mov
out
xchg
sbb
orl
jl
or
xor
in
mov
dec
mov
push
or
cmc
test
jmp
sbb
push
adc
adc
adc
scas
loop
dec
or
scas
dec
xchg
mov
lock
call
mov
roll
cmp
jne
mov
sbb
adc
in
add
add
decl
shlb
ret
pop
or
mov
pop
lahf
pop
jnp
xchg
cmc
cmp
jno
pop
add
cmpsl
arpl
lcall
mov
sub
push
fcompl
fwait
lcall
push
jg
dec
add
outsl
loop
dec
add
dec
mov
mov
cli
xor
mov
sub
jae
dec
mov
jecxz
or
add
mov
data16
pushf
push
imul
or
mov
cmp
sbb
dec
rcr
int3
add
xor
rcrb
ficomps
mov
dec
fldl
lcall
sbb
add
lds
jo
loop
xor
sbb
scas
es
lods
sub
jge
loope
inc
aad
push
popf
dec
sbb
sub
push
lods
ja
push
xlat
insb
adc
pop
xorb
sub
clc
jl
nopl
rorl
adc
sbb
bswap
loopne
sti
cli
dec
mov
pop
mov
cltd
mov
mov
mov
mov
xor
test
mov
push
sti
shrb
and
dec
lds
dec
mov
cmp
adc
dec
ljmp
shlb
xchg
roll
push
dec
test
aaa
rcl
sbb
insb
lret
pusha
xchg
push
jmp
cld
notb
scas
pop
lahf
ja
add
add
fdivrs
or
in
aam
js
in
movsl
or
out
add
mov
and
movsb
inc
mov
iret
and
jae
xchg
cwtl
fcoml
fidivrl
sahf
xchg
mov
add
cmp
cld
pop
mov
pushf
shlb
clc
add
push
stc
mov
sub
pop
je
cwtl
mov
add
mov
dec
jle
decb
enter
rcrb
mov
sahf
cs
mov
cmp
cld
add
mov
in
fildl
or
adc
gs
xchg
pushf
or
xchg
mov
cmpb
jbe
mov
xchg
mov
and
daa
dec
mov
push
insb
xchg
or
push
lods
mov
icebp
roll
sbb
jno
arpl
sbb
jge
add
lret
pop
dec
pop
lcall
add
or
lret
gs
adc
inc
jbe
icebp
jae
stos
stos
cld
mov
addl
sbb
jo
nop
outsb
fdivrp
xchg
ret
or
cwtl
cmc
test
mov
and
dec
ljmp
repnz
scas
add
push
xor
xchg
addr16
cmpsb
mov
and
test
jne
testb
cwtl
mov
sbb
shrb
stos
mov
loopne
cltd
out
jns
or
add
xchg
cwtl
jl
or
iret
xor
pop
fs
aam
dec
hlt
add
sahf
mov
in
add
and
lret
aad
dec
mov
xor
daa
cmpb
cld
cmp
gs
pop
ret
and
inc
push
out
pop
aas
lahf
hlt
sbb
adc
pop
pop
fs
repz
jbe
addl
int3
mov
jg
adc
inc
dec
scas
fwait
inc
cmc
lcall
aad
mov
daa
ljmp
and
imul
push
adc
xlat
stos
lea
pop
test
push
icebp
push
mov
mov
mov
shr
mov
or
and
dec
dec
mov
movsb
gs
push
and
sbb
frstor
and
aaa
stos
xchg
sbb
loop
and
and
rolb
jmp
pop
mov
mov
aaa
dec
pop
pop
out
xchg
sub
rcr
add
mov
mov
inc
adc
inc
fucomip
inc
pushf
push
mov
je
pusha
push
icebp
call
dec
dec
add
fidivrs
push
js
in
push
repz
out
xchg
mov
fcompl
out
sub
dec
inc
cmp
xchg
push
stos
pop
lds
sub
pop
add
sbb
into
scas
pop
js
push
leave
jnp
jo
jl
add
push
out
repnz
jns
testl
shlb
xchg
mov
pusha
pop
and
fwait
mov
movsb
mov
daa
cmp
scas
sbb
mov
cli
rcrl
test
les
das
cltd
dec
mov
in
cmp
mov
mov
movsb
xor
insl
inc
push
push
fdivrs
lahf
and
and
pop
inc
pop
push
mov
pop
in
call
into
in
je
pop
insl
cpuid
add
roll
pop
mov
push
push
hlt
mov
and
mov
lret
add
and
or
mov
into
iret
sub
scas
out
aas
mov
lods
loope
pop
dec
mov
and
popa
sbb
or
or
push
out
pop
aaa
adc
mov
xor
cmp
lock
sahf
and
sub
and
ffreep
jmp
pushf
pop
mov
sub
jmp
icebp
filds
dec
pop
mov
mov
daa
outsb
jbe
push
outsl
xchg
xor
loope
and
push
push
out
shr
sbb
pop
sbb
idivl
inc
es
aam
enter
sbb
insl
adc
stos
movsl
jnp
in
fdivl
fs
aam
mov
jle
pop
in
addr16
fnsetpm(287
xchg
or
push
xchg
scas
aaa
cli
dec
jo
pop
push
sub
adc
or
popl
lret
sbb
loope
push
push
xchg
push
adc
bound
sbb
lea
fildll
ja
adc
mov
daa
sbb
cmpsb
out
insl
sbb
xchg
loope
sbb
ss
mov
push
mov
pop
and
sub
in
xchg
sub
mov
ds
and
jb
push
nop
push
pop
dec
data16
movsl
cmc
mov
lods
adc
pop
jecxz
popf
das
dec
mov
push
xchg
inc
or
sbb
pop
xchg
ret
and
aas
xor
out
xchg
orl
mov
insl
insl
hlt
pop
in
lock
lods
adc
jmp
aam
mov
or
scas
push
and
add
pop
add
outsb
mov
hlt
repz
jae
and
sub
jmp
push
mov
push
fld
fs
sbb
sahf
mov
sub
pusha
scas
ss
xor
inc
lret
fldcw
xchg
in
std
mov
cld
test
mov
imul
fildll
movsb
push
jae
mov
insb
xor
jae
and
inc
mov
fwait
sub
addr16
push
inc
xor
inc
pusha
lcall
mov
fstpt
pop
and
and
mov
mov
sub
jp
pop
pop
lock
xor
mov
ja
sbbb
inc
pushf
scas
mov
enter
and
xchg
sub
insl
jp
dec
jp
in
rcl
push
inc
cmpsl
jae
and
pop
movsb
lret
inc
sbb
lret
inc
in
mov
aas
sub
in
xor
mov
sub
adc
cs
cmp
hlt
xchg
mov
xchg
adc
dec
in
mov
inc
xor
pop
fcoml
sbb
loope
shll
ljmp
or
sub
xchg
dec
pop
dec
dec
fwait
inc
mov
arpl
nop
call
add
outsb
adc
fs
push
ret
mov
add
xchg
shrl
push
insb
pop
dec
cmp
out
lods
fdivl
jecxz
dec
ds
mov
mov
sub
push
or
mov
adcl
mov
mov
xor
sub
in
sub
cs
jbe
sub
sbb
or
cmp
push
lock
sbb
popf
outsl
loope
cmc
or
push
jl
jns
sbb
dec
push
mov
xlat
pop
lods
sub
add
aaa
pop
icebp
inc
je
add
fs
addr16
sub
sbb
inc
xor
mov
push
popf
dec
jne
out
sbb
mov
pusha
adc
sbb
cld
mov
xchg
shl
push
and
movsl
pusha
loope
aam
faddl
aad
lds
inc
push
add
jle
imul
add
mov
sub
out
mov
adc
push
iret
push
rorb
aaa
fimuls
add
pop
adc
mov
aaa
xchg
fwait
iret
sbb
cmp
shr
in
add
adcl
mov
push
ss
cmp
mov
cwtl
out
inc
clc
fsubrl
movl
test
das
sub
frndint
push
mov
mov
dec
int
pop
in
js
je
test
pop
add
mov
sub
mov
test
mov
mov
cs
dec
xchg
add
sbb
push
loopne
movsl
in
cs
scas
pusha
into
lcall
int3
cmp
push
sub
pop
sbb
bswap
mov
jmp
stos
cmp
sbb
mov
push
pop
dec
cli
jae
inc
xchg
mov
les
and
fdivs
push
idiv
mov
jg
lods
inc
push
leave
adc
jno
mov
cmp
lods
daa
ss
aas
adc
int3
xor
or
out
inc
and
sub
mov
in
adc
roll
shll
int3
cmp
cld
add
cmp
fwait
mov
aam
sbb
sarb
sbb
dec
pop
test
lea
cmp
stos
shlb
stos
sbb
outsb
inc
scas
adc
data16
inc
out
jge
outsb
into
test
rorb
ret
fadds
je
push
imul
movsb
int3
dec
addr16
imul
sub
lock
rorb
jb
and
mov
js
pop
dec
jns
dec
mov
mov
rol
sbb
movsl
pop
popa
sbb
mov
push
in
out
sub
ja
stc
sub
jecxz
inc
clc
sbb
fstps
lahf
add
sbb
cmp
mov
fdivl
xor
cmpsl
xchg
push
dec
and
adc
jno
aaa
rclb
adc
dec
xchg
shl
cmp
push
movsl
xchg
sub
xor
cmp
pop
loope
outsl
mov
cmp
lahf
mov
mov
push
pop
ss
xchg
jle
mov
push
sbb
scas
sti
mov
add
in
or
xchg
cmpsl
outsb
pop
sbb
mov
popf
shll
in
sbb
lret
div
mov
adc
pop
ja
shrb
popf
jp
out
jge
mov
xchg
int
popa
pop
mov
pop
mov
pop
and
adc
idiv
minps
sub
fstp
rep
and
out
jbe
mov
rorl
push
sahf
cmpsb
mov
movsl
xorb
popa
cmc
imul
and
insl
adc
jae
pop
test
lods
xchg
imul
sbb
xorb
cmp
and
sbb
sub
and
scas
sbb
icebp
popf
jns
pop
in
lret
mov
sbb
popf
sbb
pusha
jecxz
sub
add
pop
movsl
push
arpl
arpl
mov
cmp
call
test
pop
or
jb
shlb
mov
pop
cmp
dec
stc
cmp
jbe
mov
clc
inc
lret
pop
or
aaa
lret
sbb
pop
or
pop
xor
cmp
and
hlt
mov
int
scas
dec
lock
xchg
and
inc
enter
jl
cmpsl
push
in
inc
jae
js
inc
aaa
sbb
cmc
loop
repnz
and
mov
mov
pop
push
and
jae
arpl
dec
dec
and
xlat
dec
out
ret
cmp
pop
sbb
iret
out
aad
and
pop
sbb
dec
pcmpgtb
popa
push
negb
jecxz
dec
mov
sbb
idivl
rorb
and
and
cmpsl
addr16
add
cmpsl
xlat
push
xor
mov
sbb
gs
mov
mov
mov
inc
xchg
mov
adc
push
movsb
mov
cs
or
jbe
sbb
rcll
adc
jecxz
cmpb
dec
sbb
and
in
sub
xor
ljmp
inc
addr16
mov
cmpsb
sbb
mov
inc
call
push
dec
mov
mov
and
add
cmc
bnd
test
lds
out
lods
ss
pop
add
js
test
mov
or
jle,pt
cltd
push
inc
push
rcrl
push
out
popa
mov
push
adc
pop
adc
repz
push
sbb
dec
fiadds
xchg
adc
dec
or
adc
sub
push
pop
jae
fistpll
lahf
jle
dec
xor
sbb
insb
int
cs
pop
pop
pop
add
test
push
sub
call
push
or
add
popf
rorl
or
mov
shl
addl
add
ds
aaa
sub
mov
cmpsb
xchg
cli
js
subb
xchg
xor
jns
scas
push
inc
or
out
cltd
push
dec
lods
gs
icebp
cmp
test
arpl
sub
push
into
cmpsl
movsb
add
enter
clc
ss
mov
es
pop
rolb
aad
ljmp
inc
ljmp
jecxz
pop
addr16
out
sbb
mov
mov
pushf
jl
and
cmp
mov
push
rcrl
out
adc
repnz
xor
jecxz
iret
xor
dec
int3
in
dec
mov
fisttpl
and
scas
jg
cmp
pop
add
add
sbb
idivl
addb
or
adc
mov
xchg
insl
sub
pop
sub
push
sbb
mov
xor
mov
or
jae
stc
adc
fadd
xlat
stos
cmp
pop
lahf
push
stos
roll
ds
pop
jp
mov
mov
add
pop
add
fs
pop
push
or
xchg
lods
shll
movsb
pop
stos
sbb
aaa
sbb
sti
adc
dec
jns
sbb
xchg
add
push
mov
jp
out
test
rcll
and
dec
jns
movsl
jns
out
fs
push
roll
or
adc
adc
and
testl
rclb
dec
adc
mov
sub
test
xchg
cmpsb
xor
shll
push
xchg
andb
addl
jne
out
lret
sarb
pop
inc
popf
shrb
inc
sub
repnz
in
lods
and
sub
push
cmp
or
dec
inc
push
push
lods
out
push
inc
cmp
call
and
xchg
adc
xor
into
inc
jp
push
leave
out
xchg
jne
jp
jnp
sub
stc
in
aad
push
fcompl
fwait
push
sbb
add
dec
pop
clc
jg
mov
sbb
jg
dec
sbbb
shll
jne
or
movsb
push
mov
jmp
mov
inc
dec
xlat
sbb
jp
add
pop
fnstsw
push
daa
adc
xor
jg
dec
out
push
stos
stos
jecxz
cmp
sbb
flds
jno
push
into
sub
sub
mov
popf
fisubl
in
sub
ja
xchg
scas
pop
push
cmp
fwait
push
in
gs
xlat
mov
push
lea
pop
jne
xchg
fidivs
mov
sti
sub
push
push
fwait
andl
daa
jl
sub
fistpll
rcr
ss
fisttps
orb
aam
ljmp
add
clc
sti
cmpsl
xchg
inc
js
popf
mov
mov
ja
dec
cwtl
mov
pop
sti
mov
or
pusha
aad
mov
xor
lock
dec
sar
enter
adc
das
mov
push
imul
push
jbe
xor
je
dec
sub
or
pop
dec
sbb
lea
xchg
fcoml
test
jns
fildll
mov
inc
and
nop
aaa
dec
scas
fnstsw
vbroadcasti32x8
inc
test
ljmp
xchg
push
mov
sub
nop
mov
dec
adc
gs
sub
sub
sub
fwait
sti
aam
jle
ds
and
sub
incl
cmp
or
mov
pop
mov
inc
adc
rcrl
inc
and
enter
dec
add
decb
or
fisttps
cld
pop
pop
xchg
sub
and
cmp
dec
push
cwtl
pop
mov
add
and
jecxz
subb
fs
sub
pop
cmp
incl
inc
movsb
add
sub
mov
rcrl
xchg
push
shll
ljmp
xchg
inc
xchg
pop
and
or
enter
fsubr
and
lea
rcrb
les
mov
mov
sub
les
pop
sub
cmpsb
adc
icebp
icebp
mov
daa
rcl
inc
sub
sahf
adc
sbb
pop
sbb
ljmp
in
addr16
cs
fstps
sub
mov
push
adc
xchg
or
push
leave
sbb
add
pop
add
sub
int3
filds
and
inc
pop
mov
push
sub
xchg
sub
insb
dec
out
add
mov
icebp
cmp
mov
mov
inc
inc
int
inc
loopne
sub
lds
jle
inc
dec
sub
push
or
popl
adc
call
sbb
and
xor
mov
dec
jne
sub
mov
push
inc
test
rcll
push
cmp
push
push
clc
das
sbb
jae
or
push
mov
jno
fwait
dec
arpl
dec
addr16
cmc
or
iret
mov
adc
loope
sti
lahf
sbb
add
xchg
scas
adc
jnp
lahf
stos
mull
in
push
stc
pop
bts
mov
divb
addr16
mov
pushf
jmp
jae
not
or
sbb
mov
aaa
and
or
pop
scas
stc
aas
mov
xchg
dec
fucomp
push
je
out
or
inc
push
push
mov
sahf
dec
dec
mov
loop
lcall
cmp
out
pop
add
and
mov
es
pop
outsw
inc
xchg
ja
lods
xor
jns
dec
shr
ret
sbb
jno
xorb
outsb
add
jg
xchg
add
adc
xlat
ficoml
sub
jno
fwait
adc
outsl
cmpsl
pop
std
pop
pop
push
cmp
inc
cs
mov
mov
lock
imul
fwait
mov
into
pop
dec
push
mov
loop
lea
adc
add
mov
inc
jo
xor
jp
xchg
mov
xchg
or
in
inc
ljmp
xor
sub
in
inc
dec
repnz
inc
outsl
adc
stos
movsl
or
pop
cmc
cmp
stos
and
cmp
test
push
add
insb
aas
pop
dec
sub
ret
jecxz
int3
inc
mov
fs
fstpl
pop
rcl
out
pushf
das
mov
adc
xor
inc
lds
in
push
and
pop
lcall
cwtl
outsb
sbb
clc
sub
pusha
adc
dec
pop
jae
lods
sbb
push
out
mov
and
fs
jl
sbb
cs
sbb
xchg
sahf
std
popf
out
and
xchg
inc
add
mov
jmp
xchg
add
adc
aaa
stos
out
push
gs
mov
lahf
and
jmp
icebp
ja
push
sbb
imul
cs
mov
add
insl
and
scas
iret
pusha
push
push
ficomps
adc
pop
es
jecxz
jg
out
scas
pop
sbb
or
xchg
in
add
jl
aas
outsb
mov
movsb
ret
mov
imul
cmc
rcrb
dec
mov
sbb
adc
dec
cmp
sub
or
repz
dec
pop
inc
inc
add
dec
fcoms
mov
lcall
nop
jle
pusha
or
cmp
stos
sbb
xor
mov
rcr
mov
adc
imul
xchg
xchg
push
mov
push
dec
lods
inc
int3
cld
or
mov
add
pop
bound
gs
inc
mov
je
out
or
jns
rol
dec
pop
mov
jno
mov
ja
fwait
hlt
imul
xchg
jno
mov
ja
data16
add
push
dec
mov
sub
lea
sub
inc
dec
dec
lods
lock
stos
inc
adc
loop
fdivrl
adc
lret
ror
mov
mov
add
sbb
fsubl
and
mov
rcrb
loop
or
int
fadds
add
or
call
lcall
xor
xlat
pop
leave
movsb
test
ficomps
push
js
mov
int3
pop
dec
xor
push
into
xchg
out
xor
sti
push
push
into
nop
stos
cmc
int
dec
adc
push
into
add
inc
dec
insb
or
jo
sti
enter
mov
pop
mov
pop
orb
cmp
sbb
aam
jne
in
xlat
jo
hlt
add
adc
popf
leave
dec
int
xor
and
dec
jns
inc
sub
lock
xchg
push
dec
clc
popf
fwait
mov
add
andl
sbb
cmp
lcall
clc
mov
inc
lock
sahf
sbb
sub
bnd
mov
sbb
mov
into
scas
mov
pop
and
repnz
or
imul
mov
das
xchg
xchg
sub
mov
das
in
mov
mov
addr16
ds
lods
xchg
stc
fimull
push
jb
push
daa
and
mov
mov
add
pusha
add
mov
pop
mov
mov
sbb
movsb
dec
fisttpll
cmpsl
add
and
mov
lea
gs
imul
adc
mov
lods
and
subb
jmp
push
mov
push
aaa
inc
dec
add
mov
mul
cmpsb
cmc
orl
lea
gs
xchg
mov
pop
or
andl
scas
stc
pop
pop
jcxz
mov
clc
dec
push
cmp
xor
imul
stc
pop
out
cli
repz
jae
xchg
mov
inc
lea
add
data16
aaa
dec
add
push
push
adc
pop
sbb
or
faddl
mov
xchg
std
and
add
push
sti
adc
rcrl
aad
dec
pop
mov
dec
adc
push
orl
gs
icebp
sub
jmp
xor
sti
out
dec
std
inc
pop
and
orb
dec
clc
in
lcall
cmpsl
xor
sbb
xchg
out
cwtl
jl
sbb
pop
dec
popf
ficoms
lods
out
xchg
pop
sbb
mov
sbb
loopne
pop
jmp
jl
add
sbb
sahf
mull
push
adc
or
pop
mov
insb
adc
xor
xchg
inc
or
inc
dec
pop
scas
dec
or
cmp
pop
mov
fnstenv
push
fsubl
mov
xchg
data16
jle
loope
clc
lods
push
xor
adc
icebp
pop
cmc
fisubrl
sub
jb
or
dec
mov
pop
adc
mov
jecxz
shrb
mov
inc
pop
dec
jnp
mov
aaa
out
mov
sub
inc
stc
fcom
outsl
out
addr16
xchg
dec
pop
xchg
gs
cli
adc
scas
lret
pop
dec
imul
add
mov
scas
push
sub
xor
jge
push
xchg
pop
gs
sub
aaa
push
mov
lahf
ja
adc
inc
mov
jno
lock
movsb
out
popfw
or
mov
fidivrs
neg
push
pop
add
mov
imul
insl
xor
sti
ret
add
pop
dec
jp
push
fstps
pop
pop
mov
mov
lds
orb
dec
mov
idivb
sbb
test
jno
movsl
ds
add
jg
dec
xchg
xchg
pusha
jns
aas
pop
js
fstpt
arpl
sub
push
test
adc
xchg
push
mov
add
jns
and
divl
dec
stos
mov
dec
mov
dec
mov
inc
dec
cltd
stos
insb
dec
pop
daa
push
jmp
insl
fs
xchg
scas
pop
push
int
push
daa
pop
insb
stos
movsb
dec
jae
repz
je
push
enter
jns
cmpsl
shrb
add
mov
iret
pop
ja
pusha
je
xor
or
test
ss
push
mov
ftst
jo
popa
ja
scas
xor
jns
sub
mov
jno
jmp
sbb
cld
dec
sub
push
jle
bound
inc
lods
daa
mov
incb
inc
xchg
push
rcll
xchg
push
sbb
in
adc
xor
jg
popf
pcmpeqd
mov
ds
inc
mov
push
aaa
sub
inc
cmp
daa
lcall
xor
add
xor
and
adc
ss
ret
fstps
enter
stos
jns
xchg
cwtl
clc
subb
loope
mov
mov
call
sbb
lods
xchg
jns
rcll
xor
cmp
add
xlat
loope
jg
jo
push
into
cmp
mov
daa
inc
filds
jmp
in
repnz
stc
xor
mov
into
mov
mov
fcoms
pop
lcall
xchg
inc
das
dec
rcl
bound
pop
data16
loop
insl
pop
cld
cwtl
dec
sbb
adc
dec
cmp
insl
imulb
xchg
lds
pop
cs
in
lcall
in
push
and
insb
inc
mov
add
test
fisttps
addr16
rcr
aaa
or
inc
cmp
sub
pop
add
into
xor
dec
out
mov
dec
dec
cmpsl
fs
mov
jae
inc
inc
push
push
add
sbb
xlat
cmp
stos
xor
or
or
shll
add
jbe
push
mov
adc
xchg
sbb
popf
lods
stc
repz
ja
jns
xchg
jno
les
test
sbb
lock
sbb
dec
push
pop
int
test
loop
dec
jl
aam
sub
jo
psubb
outsl
sti
push
int
adc
fsts
xlat
repnz
clc
mov
jo
or
out
leave
js
fistl
pop
outsl
adc
test
push
frstor
or
mov
push
xchg
cmp
push
xor
imul
cmc
mov
test
test
addr16
adc
dec
std
idiv
add
lcall
jg
sbb
jb
push
popl
into
pop
test
insb
mov
popf
push
xchg
int3
adc
xchg
lret
jne
je
mov
sub
dec
cmc
mov
fstl
je
imul
push
in
pop
jp
push
movsl
loop
and
orl
rolb
mov
loope
movsl
dec
bound
inc
cmc
or
ficoms
adc
dec
xchg
xchg
rclb
adc
and
cmp
stos
je
cwtl
pushf
push
adc
mov
sbb
and
adc
dec
fidivrl
outsb
xchg
mov
stos
out
inc
loop
lea
or
repz
clc
adc
and
or
inc
pop
sbbb
in
in
imul
jmp
jp
mov
xlat
push
mov
add
frstor
shll
in
popa
stos
mov
popl
lea
out
repnz
movsb
xor
sub
or
or
mov
loopne
mov
outsb
je
pop
jb
test
mov
sub
mov
add
push
sbb
push
cmpsl
and
jg
fsubs
push
add
inc
js
and
mov
pop
hlt
lahf
jnp
std
mov
in
dec
mov
mov
popw
push
pop
mov
cwtl
outsl
lahf
or
jmp
or
add
mov
or
or
jecxz
movzwl
insl
shrl
jne
scas
mov
sbb
and
adc
test
clc
xchg
add
xor
add
sahf
xor
xchg
xchg
jge
mov
push
scas
pop
nop
jae
sub
xchg
es
add
push
sub
out
cwtl
sbb
popa
push
mov
cmp
jno
add
fimuls
jo
data16
cli
lock
scas
mov
sarb
push
ret
cmp
stos
clc
test
incl
sub
cs
mov
push
stos
loope
int3
loopne
movsb
xor
jns
test
push
mov
xchg
cwtl
jns
push
mov
add
mov
js
ljmp
mov
mov
mov
inc
insb
jbe
dec
orl
mov
ret
das
hlt
jecxz
jmp
lcall
ljmp
mov
xchg
dec
adc
std
rcr
inc
aaa
test
sti
xchg
push
push
mov
pop
inc
and
fistps
into
and
sarl
sbb
mov
pop
das
out
inc
dec
xchg
cs
xchg
mov
push
sub
or
mov
push
mov
and
adc
out
pop
cli
ljmp
cltd
inc
pusha
aam
cmp
insb
fists
sbb
or
xchg
sbb
stc
nop
out
mov
negl
mov
fcoms
push
rcr
or
cwtl
cli
movsl
dec
rcrl
mov
cmp
add
out
out
in
sub
loope
mov
cwtl
sbb
shlb
inc
cli
lret
cld
gs
scas
dec
jle
lea
jae
add
inc
es
stc
int3
fnstcw
test
adc
push
scas
pop
sub
icebp
shrb
push
jl
or
or
push
cwtl
sbb
sti
leave
sbb
sbb
jae
mov
pop
adc
adc
adc
outsb
outsl
push
pop
cmp
mov
and
sbb
sbb
jne
adc
pop
dec
pop
mov
push
dec
inc
mov
or
movsl
pop
sbbl
mov
and
sbb
test
mov
add
sbb
mov
push
hlt
cltd
leave
movsb
lahf
push
stos
rcll
push
add
fbstp
fistpll
iret
push
je
push
dec
cs
mov
cltd
roll
mov
cmpxchg
jnp
jle
jnp
or
cmp
scas
mov
in
xchg
aas
mov
pop
xor
or
jbe
mov
pop
cli
aad
enter
ret
sbb
inc
ja
scas
test
push
mov
jecxz
daa
mov
jecxz
cmc
jp
pop
pop
shrl
andb
movsl
movsb
mov
mov
out
sbbl
call
dec
jne
dec
pop
jb
add
push
jbe
xchg
cld
sub
xchg
icebp
xchg
mov
mov
lock
addl
mov
into
dec
push
mov
jae
push
rcr
mov
jl
notb
shrl
out
pop
cld
test
or
test
outsb
mov
cld
xor
add
jo
push
enter
dec
push
jle
js
mov
out
outsl
and
jae
sysexit
lcall
stos
cmp
pop
mov
sbb
int
popa
cmp
ret
add
add
lods
aaa
mov
popa
je
add
sbb
dec
push
popf
aad
xchg
adc
dec
sub
xlat
je
iret
push
adc
cmp
xchg
dec
fs
inc
aaa
arpl
aas
outsl
adc
mov
bswap
jl
out
scas
jno
rorb
dec
gs
mov
sub
push
add
or
bound
bnd
pushf
sub
xchg
scas
cmpsl
xchg
xlat
bound
push
push
mov
in
jnp
lock
dec
mov
mov
sbb
inc
mov
cmp
scas
nop
mov
inc
repz
adc
fnsave
cwtl
ficompl
stc
xchg
fwait
pop
add
pop
jg
jo
inc
dec
sbb
inc
add
pop
mov
xor
jno
or
sbb
jbe
movsl
sub
and
jb
sub
repnz
jb
push
add
push
aaa
pop
xchg
or
clc
ja
jecxz
jg
cmp
stos
jg
inc
jae
mov
cwtl
das
xorl
and
jmp
lret
jno
push
lcall
sub
jge
adc
cmc
test
dec
push
sbb
jae
jle
push
pop
cld
ss
in
adc
or
mov
dec
cmp
sbb
gs
dec
mov
push
les
sbb
dec
popl
call
mov
xlat
cltd
test
jno
or
dec
or
test
push
adc
fcoms
or
mov
neg
jg
or
jmp
cmovns
xchg
jne
dec
sti
andl
push
fildl
and
mov
rcrl
sbb
sub
stc
adc
and
sbb
mov
mov
push
sub
loop
cli
psraw
cmpsl
push
inc
insb
outsb
jne
fisttpl
ds
dec
and
jge
push
cmp
push
mov
aaa
bound
pop
fbld
cmpsl
in
in
gs
outsl
out
fnstenv
jge
sbb
popf
jo
fs
nop
fnstcw
cmp
mov
add
jg
mov
or
cltd
aad
mov
roll
jne
dec
jnp
jmp
fimuls
fiaddl
ds
nop
dec
ret
ret
jecxz
sub
xor
shll
pop
movsl
outsl
cld
fcomps
les
dec
sub
mov
cmp
pop
stc
jmp
insb
and
shrl
and
aaa
xchg
push
xlat
adc
in
adc
sub
not
shll
fists
sbb
lds
pop
cmc
dec
fldenv
pop
adc
insl
add
cmp
adc
cs
mov
add
cmp
mov
mov
dec
pop
sti
or
lea
mov
cmp
jbe
and
in
or
fcoms
shl
push
in
sbb
mov
adc
scas
mov
jl
subl
test
pop
iret
js
call
mov
jmp
xchg
repnz
call
scas
xchg
into
imul
lret
out
jo
inc
push
jnp
xor
loopne
sub
out
in
mov
inc
in
mov
ja
rolb
js
add
dec
mov
int
test
inc
call
stc
rcrl
pop
cmc
cltd
dec
stos
xchg
daa
icebp
pop
test
push
push
dec
call
movsl
jo
sbb
mov
mov
or
test
sub
addr16
inc
aaa
repz
pushf
and
jmp
gs
jmp
pop
bound
inc
pop
dec
enter
xor
jp
push
sbb
sub
xor
or
dec
stos
mov
shrb
scas
test
out
mov
pop
enter
jns
push
lahf
jae
push
rcrl
sarl
inc
push
add
dec
stc
xor
push
stos
rcr
js
xchg
loop
mov
adc
pop
cmp
shll
ret
push
enter
popf
xchg
add
aad
outsb
ljmp
fldcw
rcr
scas
push
mov
inc
xor
out
insl
stc
mov
pop
lock
sar
pop
inc
jp
mov
std
jne
inc
jge
insl
rcr
xchg
movsl
out
pop
push
and
popf
dec
cmpps
xchg
sub
mov
inc
ja
arpl
pop
inc
jae
mulb
mov
xor
inc
add
mov
not
push
push
pop
negl
adc
cmc
stc
daa
into
pop
xchg
pop
aam
and
mov
sub
add
mov
inc
or
jbe
scas
rcr
sub
push
sarb
aaa
sarb
dec
push
mov
mov
push
sbb
frstor
xor
fwait
mov
sub
adc
add
mov
arpl
stc
cmp
fcoml
cmp
mov
mov
scas
loope
jmp
jbe
popa
pop
or
mov
jg
xor
mov
pop
lods
outsb
xchg
mov
mov
mov
les
and
lods
rolb
stos
js
mov
pop
out
icebp
shlb
les
scas
hlt
dec
movsb
lahf
cld
mov
repz
shrb
push
push
push
sbb
cmp
push
mov
inc
fsts
paddusw
sbb
jmp
xchg
jae
xchg
mov
push
pop
and
push
lods
sub
mov
jno
mov
push
cmp
clc
and
loopne
jge
mov
or
jb
mov
ret
or
sub
push
cmp
gs
ljmp
mov
loope
jo
cmpsb
ja
and
mov
nopl
jae
mov
or
xchg
ret
shrb
mov
aaa
pop
fsubrs
or
fwait
jb
lock
add
dec
inc
cmpb
fsubr
pop
es
sahf
dec
iret
lods
js
in
fs
es
push
and
insb
xchg
imull
mov
lahf
imul
lock
call
arpl
je
inc
fmull
push
xchg
or
jle
hlt
push
add
cmpsl
sub
mov
icebp
std
dec
sbb
mov
jmp
scas
xlat
cli
jl
aaa
add
xlat
jb
sbb
xor
mov
sbb
mov
jg
iret
pop
xor
cmp
or
mov
popf
adc
sbbb
lret
cmp
pop
fldt
sti
cmp
inc
mov
push
mov
pop
shrl
mov
imul
xchg
push
int3
add
insl
loop
pushf
add
jbe
movsl
xchg
imul
mov
fcoms
ds
aas
aaa
pop
xchg
sbb
inc
jae
lock
clc
mov
mov
andb
dec
sbb
xor
cmp
lods
pop
or
mov
mov
daa
and
jecxz
testl
pop
push
sahf
sahf
lea
aad
mov
cmp
sub
jg
aaa
inc
sub
shlb
fsubl
mov
out
jecxz
dec
xor
test
and
mov
mov
dec
out
or
sbb
xchg
dec
scas
divb
gs
lods
notb
and
inc
jmp
test
xchg
enter
sbb
add
inc
and
dec
add
aad
icebp
cmp
inc
mov
cmp
and
decb
cs
sbb
pop
dec
dec
addr16
push
pop
loopne
les
lea
aam
pop
imulb
push
adc
es
or
xchg
ds
pop
sti
call
jmp
lods
or
das
add
push
dec
cmc
xchg
push
adc
cltd
sub
inc
dec
add
or
xor
sub
mov
cld
jb
adc
push
shrl
dec
jle
adc
js
push
inc
push
stos
call
int3
push
xchg
pop
test
jecxz
jae
push
pop
xchg
loop
xchg
add
cmp
in
mov
xor
cmc
dec
mov
sti
rcrl
mov
add
dec
dec
xor
subl
pop
pop
movsb
cmp
sahf
push
popf
xor
rcr
test
ds
adc
and
js
daa
in
nop
mov
pop
cmp
out
test
push
fbld
mov
sbb
mov
dec
fstl
jbe
decb
or
jg
cld
inc
outsl
into
pop
jle
in
movsb
stos
addr16
rcrl
xchg
mov
jne
xor
pushf
daa
icebp
push
jmp
test
xchg
movsl
xor
sbb
test
push
rclb
nop
add
pop
jnp
xchg
jmp
and
dec
lods
negb
cmp
mov
push
sbb
stos
add
femms
xchg
int
rclb
cs
xor
jge
dec
cwtl
stos
xchg
inc
pop
cltd
and
popf
shrl
lret
adc
jo
ljmp
pop
push
mov
stc
xchg
fldt
pop
insl
pushf
mov
ret
push
scas
scas
imul
mov
in
call
fldl
pop
jbe
sbb
xchg
push
in
jbe
cmpb
or
add
ja
dec
cmp
mov
cmp
or
and
loopne
mov
scas
cmpsl
iret
fwait
xchg
sub
ljmp
xchg
aad
cmpsl
gs
ficomps
frstor
mov
aas
das
push
out
pop
dec
out
sti
lods
ret
out
xchg
sbb
sub
cmp
or
pop
fadd
or
sub
cmp
testl
fnstsw
mov
ret
push
push
or
sbb
add
push
popa
push
xchg
lods
sbb
bound
or
inc
mov
xchg
aad
push
mov
pop
jmp
and
push
mov
sbb
and
mov
or
or
cmp
xchg
subl
gs
mov
filds
and
jae
pop
test
jg
cmp
popf
jmp
js
je
inc
and
stos
js
mov
sbb
ret
int3
iret
and
pop
pushf
dec
sahf
sbbb
sbb
je
js
ja
and
push
pop
push
and
mov
cmp
test
lahf
push
out
sbb
fnstenv
in
push
and
jb
mov
push
push
aad
movsl
push
jnp
mov
jne
push
int
cmp
push
dec
mov
pop
test
dec
rclb
icebp
jb
in
lods
push
or
jne
or
sub
mov
cmpsl
mov
push
push
xchg
nop
sbb
xchg
movsl
or
test
xlat
leave
push
int3
xchg
sti
aad
jge
ja
cmp
or
jne
into
pusha
daa
roll
movsb
cltd
lock
loopne
nop
outsl
cmp
sbb
mov
push
imul
cmp
mov
dec
stos
sub
pop
sub
mov
mov
adc
loop
sbb
jg
fimuls
jmp
push
lds
inc
jl
dec
push
jecxz
shr
int3
xor
lea
pop
xchg
mov
mov
loopne
mov
cmp
dec
icebp
cmp
ljmp
xchg
scas
clc
das
pop
movsb
ljmp
das
movl
jbe
call
jb
test
dec
faddl
push
ret
lock
es
js
sbb
shll
jne
mov
jbe
aam
jbe
pop
int
insl
popf
idiv
xor
push
jnp
aad
js
sbb
subb
lahf
mov
xlat
push
cmp
xor
jp
test
mov
test
mov
or
mov
sub
bound
shll
insl
adc
and
xchg
mov
sbb
out
mov
xor
mov
and
add
push
mov
push
data16
pop
mov
test
lcall
mov
add
xchg
fwait
jge
data16
cmc
je
outsb
adc
pusha
sbb
push
jp
adc
movsl
in
cmpsb
inc
add
mov
ds
mov
divl
loopne
sbb
sub
shll
lret
sub
jge
add
xchg
jnp
mov
jne
stos
dec
dec
and
xchg
iret
dec
movsb
ror
add
xor
arpl
aad
jmp
scas
jp
fptan
pop
sbb
jbe
sbb
inc
stos
jle
push
xlat
jno
and
sqrtps
dec
in
dec
sub
dec
pop
mov
int
gs
sti
sahf
xchg
rcrl
xchg
cwtl
xor
inc
inc
lods
gs
lahf
addr16
in
adc
xchg
dec
mov
idiv
repnz
xchg
push
daa
push
fs
rclb
std
repnz
add
cs
imul
test
xor
call
jns
inc
mov
out
jns
fs
jno
jae
imul
aad
xchg
jnp
into
outsb
push
mov
sbb
out
cltd
mov
sub
dec
shlb
leave
xchg
jne
lds
sub
out
xchg
fldl
sahf
or
jno
pop
jp
pop
in
add
jnp
xchg
mov
sahf
add
jmp
and
push
test
out
dec
jg
and
mov
aad
test
pop
sub
adc
arpl
sbbl
xchg
xor
pop
sub
cmp
and
sbb
clc
popa
xchg
push
mov
fildll
sbb
jns
jns
je
roll
out
aaa
fldenv
stc
sti
out
outsb
or
jbe
stos
cmp
int
jb
mov
popf
xchg
jge
jg
pop
daa
shr
call
loopne
xlat
push
leave
mov
leave
inc
aaa
stc
add
cli
and
enter
out
aas
and
jb
cwtl
daa
or
jle
call
mov
jno
icebp
gs
push
xor
adc
and
mov
iret
inc
out
call
popf
icebp
test
leave
in
aad
inc
pusha
hlt
push
in
and
pusha
and
addr16
push
push
aam
jb
fcoms
stc
jns
xor
addr16
outsb
dec
or
inc
pusha
aaa
pop
fimuls
dec
inc
add
cli
lea
push
pop
inc
mov
inc
mov
addl
adc
add
or
pusha
fs
sti
xor
and
lahf
insl
jmp
daa
stc
addr16
and
mov
mov
icebp
jb
insl
cltd
pop
aam
fisubl
sub
outsb
rorb
mov
lods
sub
popa
lcall
xchg
sarb
mov
adc
and
insl
jp
shrb
inc
inc
xor
push
fcmovu
pop
mov
xchg
repnz
mov
rcr
scas
mov
insl
test
dec
shr
lds
imull
inc
push
mov
add
ss
iret
rolb
ja
pushf
inc
add
bound
imul
hlt
fs
fcoml
lea
ds
adc
daa
lcall
loop
push
sub
ret
hlt
push
jb
jge
xchg
repz
sbb
ret
out
js
mov
scas
movsl
ss
xlat
cmp
add
add
jecxz
xchg
or
fnstenv
mov
xchg
lret
and
lahf
stos
rcr
or
add
add
cmp
aam
daa
inc
cmc
fwait
je
sbb
stc
dec
addr16
push
test
jp
pop
xchg
mov
gs
aam
out
and
push
mov
mov
xchg
aam
ja
in
popa
mov
add
aad
pop
xchg
mov
stos
push
push
outsb
and
pop
pop
outsb
pop
and
rcrl
sbb
jb
dec
sbb
std
fwait
jbe
mov
pop
xor
pop
pusha
dec
and
ljmp
mov
out
pop
fsubs
add
sbb
adc
sbb
je
pop
add
sbb
cld
inc
mov
lret
xchg
inc
xchg
add
push
outsb
pop
add
sbb
lret
inc
mov
jle
dec
dec
mov
mov
add
sahf
loop
jnp
fstpt
rcrb
data16
pop
sahf
sub
in
jne
sbb
xchg
ja
mov
popf
pop
lea
fwait
xor
dec
jmp
fs
mov
gs
shll
add
xchg
stos
in
lods
xlat
cli
sbb
xor
mov
adc
idivb
add
enter
fbld
push
dec
scas
shl
pop
mov
mov
mov
notb
sbb
push
adc
or
gs
pusha
movsb
shrl
das
sub
enter
push
mov
push
not
jae
repz
pop
sbb
add
or
add
sbb
sub
rolb
pop
cmp
rcrb
push
jb
pop
xor
lods
inc
mov
xchg
insl
les
dec
pop
xor
inc
inc
xlat
push
cmp
push
or
hlt
insb
push
fwait
and
cmovle
lods
out
adc
xlat
pop
and
mov
movsb
cmpsb
or
fidivl
dec
fidivrs
mov
xchg
popl
and
dec
outsl
cmp
repz
jle
addr16
jg
jae
push
aas
loopne
or
inc
outsl
mov
add
hlt
push
pop
lret
dec
adc
int
xor
adc
inc
rclb
popf
shl
shlb
xor
popa
in
insb
dec
adc
sub
inc
xor
adc
push
or
sarb
dec
test
data16
outsb
or
jl
jge
fs
mov
clc
test
inc
inc
shl
mov
jbe
sbbb
dec
data16
popf
ss
jge
dec
cmp
sbb
or
flds
dec
test
push
in
xlat
loop
popl
fwait
or
aaa
xchg
imul
cltd
inc
cs
push
int
les
jb
dec
scas
in
lea
test
mov
mov
fnstcw
mov
dec
pop
inc
outsb
sub
js
cmp
cltd
push
ret
in
add
or
jbe
loopne
or
popf
and
xchg
push
sbb
xchg
jns
cmp
mov
in
xchg
xchg
xchg
mov
mov
xchg
inc
jb
sbb
or
sbb
mov
imul
inc
cwtl
pop
sbb
pushf
cld
insb
jp
add
fcomps
je
cmp
dec
or
xor
push
lret
stos
pop
leave
inc
mov
push
mov
push
push
dec
mov
jb
sbb
mov
orl
int
pusha
dec
clc
popa
in
in
test
cli
shl
cmpl
out
test
mov
push
cmpsb
cmc
xchg
pop
fistps
mov
push
sub
popa
pop
lock
sahf
es
lods
jecxz
ficoml
pop
push
jne
into
icebp
loopne
loop
sub
mov
jmp
or
mov
repnz
test
lcall
int
sbbl
xor
clc
jge
lock
cmpb
adc
adc
mov
idivb
mov
andb
cmp
lcall
rcrl
xchg
mov
cmpsl
xchg
xchg
add
rclb
push
inc
cmp
adc
jle
push
bound
loopne
lret
push
loop
icebp
inc
inc
pusha
loop
xor
rorl
rorb
or
aad
push
lcall
popa
sbb
scas
adc
cwtl
adc
imul
dec
clc
hlt
pop
xchg
xor
jnp
pusha
out
sbb
mov
adc
mov
pop
fistl
addr16
mov
pop
dec
ljmp
stos
add
sbb
sub
dec
je
fs
mov
mov
jmp
pop
adc
cs
je
cmc
inc
unpckhps
pop
jae
dec
aaa
inc
es
dec
fwait
std
in
cld
ficoms
je
push
sub
pop
sbb
mov
lret
aad
call
testb
pop
sti
cmc
pop
mov
sub
adc
addr16
incb
fmuls
pop
ljmp
call
ret
dec
scas
add
push
mov
js
pop
sbb
sbb
dec
xor
xchg
in
push
subl
rclb
ret
xor
stc
popa
lcall
adc
mov
dec
sbb
jae
dec
mov
icebp
rclb
pop
xchg
pop
push
addb
lods
mov
sahf
pop
inc
mov
inc
jmp
inc
pop
clc
mov
cmpsl
cmp
cld
addl
add
and
int3
mov
pop
fsubp
dec
adc
loop
mov
mov
cli
insb
inc
jecxz
iret
cmc
jg
and
pop
sub
cmp
dec
dec
cli
test
push
adc
lret
fisttpl
or
xlat
and
pusha
pop
add
sbb
push
ss
cltd
push
call
and
mov
cmp
imul
cwtl
fs
dec
ret
inc
adc
or
jne
push
lock
sahf
shr
fdivs
and
sbb
lret
jae
pop
lahf
push
shlb
ret
fiadds
enter
jge
mov
lods
stc
mov
sbb
and
js
fstps
nop
cmp
push
mov
mov
push
xor
cmp
push
je
push
out
xor
jb
outsl
frstor
jle
cwtl
pop
lock
es
mov
mov
aam
fwait
cmp
loop
mov
sbb
xor
test
push
adc
mov
outsl
add
inc
in
mulb
pusha
push
xchg
and
ljmp
aas
lock
and
divl
mov
cmpsl
push
fmuls
in
dec
lods
sub
push
mov
jnp
and
push
jmp
ljmp
icebp
inc
out
addr16
push
lcall
and
data16
jmp
sub
mov
dec
cmp
xchg
adc
cmp
push
cli
cmp
out
push
test
xor
sbb
mov
xchg
xor
cwtl
pop
fstpl
lret
inc
cmp
jno
xor
and
xor
sbbl
xchg
sbb
push
and
scas
cmp
loopne
pop
inc
fwait
jmp
aad
in
imul
rorb
rcrb
or
stc
cld
pop
movsl
mov
xchg
mov
aad
test
ljmp
xchg
out
lret
vcvtsd2ss
lock
into
adc
nop
push
movntq
jno
pop
push
in
cs
jp
push
cmp
stc
dec
xor
outsl
jge
xchg
in
adc
and
and
push
push
jmp
test
loope
mov
out
xor
ljmp
push
pushf
xchg
sub
pop
fdivrp
pushf
push
dec
or
cmp
mov
ds
add
or
jae
add
ja
sub
lock
push
shlb
test
push
xor
xchg
popa
pop
rolb
xchg
xchg
pop
mov
lds
loop
mov
push
sbb
mov
xor
xchg
int
loop
pop
adc
loope
in
push
ss
out
inc
adc
mov
xchg
xchg
push
inc
imulb
mov
dec
cmp
adc
ljmp
shll
sbb
lahf
clc
cltd
sub
push
add
aam
ja
test
shll
out
add
xlat
sub
xchg
pop
test
sub
mov
pop
push
pop
lods
dec
or
pushf
dec
jnp
ja
and
cmp
pop
jecxz
adc
adc
push
in
loop
cmp
push
jb
in
js
out
sub
pop
mov
push
clc
xchg
push
insb
rolb
int
mov
mov
inc
mov
xchg
ss
imul
insb
cmp
pop
clc
mov
fwait
mov
stos
fwait
pop
ret
jb
push
pop
in
push
sub
movsl
inc
icebp
pop
sar
mov
xchg
push
cld
sysret
push
mull
and
ds
mov
cmp
and
jns
fmul
sub
mov
fidivrl
dec
and
aam
xor
xchg
xor
push
mov
addr16
sbb
mov
add
push
loopne
sbb
fisttpll
sbb
lahf
std
cmpsb
pop
jmp
push
xor
jp
popl
pop
xor
ds
in
cmp
sbb
push
xor
dec
shll
sub
adcb
data16
add
and
pop
jmp
adcl
mov
imul
daa
rorb
mov
push
imull
pop
and
or
mov
and
mov
repz
loopne
ret
push
clc
push
stc
push
pushf
loop
arpl
push
and
rclb
fists
rolb
push
in
push
jecxz
leave
ficoms
rcrb
mov
mov
dec
mov
imul
lea
mov
jbe
sub
mov
and
dec
jbe
iret
sub
and
scas
push
push
xor
pop
push
inc
pop
int3
xor
aaa
insl
add
cmp
repnz
add
push
push
xchg
es
imul
inc
xor
fmull
sbb
inc
cld
mov
inc
mov
sahf
lea
movsl
scas
mov
push
in
cld
push
int3
jmp
ljmp
loopne
dec
mov
xchg
das
cwtl
jo
es
notb
orb
ret
add
xor
push
xor
ljmp
std
pinsrw
addr16
pop
in
sbb
lods
dec
push
or
mov
or
int
and
lret
sbb
adc
add
add
push
push
fs
add
jge
add
xchg
pushf
pop
inc
cwtl
push
inc
pushf
xchg
mov
push
push
push
mov
jb
jge
pop
or
push
addb
dec
mov
lcall
push
inc
and
cmp
imul
pop
and
in
xor
mov
inc
cvttps2pi
pop
fs
lcall
lods
push
cmp
or
sub
xor
and
je
jnp
stos
xor
add
stc
cmp
xor
and
cli
test
dec
fs
mov
outsl
inc
dec
xor
pusha
sbb
test
add
pop
aas
jge
cmpb
pusha
std
test
and
inc
scas
fbstp
lds
je
adc
sbb
shl
cmp
ficoml
js
lcall
cmp
sub
pop
add
cmpsl
addr16
xor
cli
pop
inc
sub
pop
adc
push
popf
into
out
jbe
sub
adc
dec
pop
xchg
inc
and
js
mov
or
cwtl
nop
fsubrl
adc
add
popf
out
test
out
jne
add
cld
mov
loopne
mov
cwtl
mov
xchg
pop
fbstp
into
sub
fcompl
pop
and
sbb
adc
mov
data16
add
ret
mov
imul
out
dec
cmp
adc
jne
popf
jp
adc
aam
sub
and
and
repz
cmc
insb
xor
shrl
xor
xlat
addr16
push
call
inc
arpl
cmp
repz
fisubrs
jp
popa
cmc
mov
ss
mov
mov
cmc
mov
insb
sub
jecxz
push
inc
jno
lea
xor
push
lods
divb
cld
data16
mov
dec
jns
popa
js
jno
icebp
xchg
hlt
testb
xor
gs
dec
lahf
mov
or
adc
clc
je
and
jle
adc
daa
inc
addr16
xchg
imul
xlat
je
cmp
sbb
pop
test
sarl
add
out
mov
xor
outsb
cld
ja
jb
rcr
sbb
xor
jns
adc
roll
mov
fnstcw
sub
mov
sbb
add
mov
jle
xchg
add
mov
sbb
cmp
pop
test
cmpsl
cvtps2dq
jge
pop
test
sarl
adc
and
xor
fbld
dec
xor
jno
ret
sub
add
in
push
int3
fstpt
push
sbb
or
sarb
shrl
ret
inc
xchg
pop
push
and
inc
add
add
jle
mov
xor
cmp
cmp
jge
dec
jbe
sbb
and
roll
fst
xor
fs
dec
leave
adcb
cmc
popf
lock
pop
adcl
into
insl
jne
dec
adc
and
dec
mov
mull
es
xchg
ss
out
cmp
ret
mov
mov
adc
inc
inc
fs
loope
js
inc
xchg
sub
mov
inc
cwtl
test
dec
push
rcrb
lds
sub
xchg
scas
and
mov
je
push
pop
pop
mov
ret
dec
and
arpl
mov
sbb
notb
pop
dec
call
lea
stc
testl
pop
xchg
mov
push
sub
add
sub
mov
adc
test
sbb
push
push
sbb
mov
subl
push
je
mov
sbb
gs
inc
xor
std
insb
jp
ret
bound
jl
xor
fadds
stc
mov
cmp
or
jb
mov
test
xchg
inc
push
jno
lds
adc
sbb
lds
cmpl
jle
add
lds
add
std
ss
pop
mov
sbbb
fimull
inc
xlat
dec
jb
xrelease
and
loope
insl
sbb
jmp
pop
mov
test
das
lock
int3
dec
sub
adc
bound
jl
xor
pop
into
adc
dec
dec
mov
push
push
scas
mov
or
icebp
out
jae
pop
cmpsb
jl
cmpb
dec
loopne
mov
call
mov
cmp
dec
mov
loop
mov
call
lret
mov
pop
push
xchg
stos
inc
addl
add
dec
or
jl
sub
sbbl
cmp
lods
cmp
push
icebp
jp
add
dec
int
pop
bound
pusha
push
jmp
les
shlb
shrl
sar
jns
mov
dec
in
movsl
mov
dec
int3
jmp
jg
stos
imul
adc
andb
adc
scas
push
inc
push
bound
pusha
out
setns
and
adc
inc
mov
fimuls
mov
add
popa
jmp
or
loopne
aas
call
inc
fldenv
rcrb
mov
stc
cmp
fs
repnz
mov
das
loope
add
leave
enter
lods
out
xchg
xor
mov
xchg
gs
ficomps
sbb
jmp
aas
popf
adc
jl
test
imul
lods
mov
in
adc
std
xchg
lds
dec
ret
mov
inc
or
inc
pop
enter
cmp
add
push
imul
push
pop
je
jecxz
mov
mov
cmc
scas
flds
insb
add
lret
mov
dec
inc
adcl
mov
fimuls
cwtl
mov
movsl
cwtl
jno
mov
ja
mov
pop
dec
cmp
mov
cs
sbb
aam
orl
test
gs
or
inc
fbld
ret
andl
jbe
sbb
int3
inc
mov
out
loope
or
cmc
fsubrl
xor
out
xor
mov
pop
add
aad
aad
mov
lret
inc
cmp
iret
sub
out
sub
xor
push
adcl
inc
fstl
icebp
js
jae
das
loopne,pt
xor
scas
test
test
scas
sti
push
sbb
push
stos
aas
jmp
test
xchg
jmp
xchg
ja
fcomps
shrl
lock
fs
into
mov
sub
inc
mov
pop
lock
mov
aaa
inc
loop
push
xorb
inc
out
lret
test
and
rcrb
sbb
popf
sbb
mov
test
ret
dec
popf
imull
mov
aaa
push
mov
mov
adcb
cmpb
jle
pop
pop
lret
std
out
out
inc
inc
xchg
test
test
mov
outsb
pop
pop
sbbb
pop
sub
inc
fmuls
push
xchg
and
cld
dec
fadds
dec
dec
test
sbb
cmp
ret
mov
out
into
inc
dec
cld
ret
and
ljmp
push
jge
mov
cmp
xchg
sbb
outsb
sbb
into
inc
pop
push
cmp
dec
push
push
sbb
fcoms
js
dec
sbb
leave
shlb
jo
and
shlb
inc
fnsetpm(287
push
xor
movsb
cmp
rcll
add
xchg
orb
ret
daa
pop
dec
add
jecxz
xchg
shrb
orb
jmp
lds
push
outsb
sub
xor
mov
iret
xor
mov
fstl
leave
stos
adc
add
pop
push
jne
lahf
or
pop
imul
sbb
fisttps
cmp
sub
mov
popa
gs
sbb
pop
aam
out
mov
mov
je
mov
add
mov
rorb
jae
mov
xchg
xor
hlt
int3
jo
and
sbb
leave
sbb
test
lock
cmpsl
sbb
mov
lods
testl
sub
push
xchg
test
cmp
adc
leave
inc
xchg
jge
mov
jl
mov
arpl
and
cwtl
mov
mov
xchg
test
xchg
mov
jp
cmpsb
lods
push
sahf
sub
cld
js
push
mov
jno
js
je
test
cmovs
cmpsb
push
push
mov
or
popf
movl
pop
test
fsts
popa
fstl
push
orl
lods
ljmp
jae
mov
jb
scas
loopne
dec
and
adc
cmp
jl
mov
and
dec
lahf
popf
insb
jl
jmp
add
pushf
sbb
or
pop
lcall
pop
daa
fists
jmp
xchg
push
lods
lea
add
int3
fstps
xchg
sub
adc
cmp
inc
popa
decl
pop
out
mov
lock
call
cmp
ja
xor
loopne
pop
add
xchg
dec
stc
sbb
mov
push
imul
pusha
inc
push
and
mov
or
bound
subl
cmpsb
add
scas
push
mov
ss
out
out
ja
push
lods
mov
stos
mov
fbstp
pushf
and
jne
in
fbstp
scas
mov
out
sub
xchg
test
mov
fcoms
pop
xchg
mov
gs
mov
add
lea
inc
pop
mov
daa
aaa
lret
inc
cs
mov
and
cwtl
push
lock
clc
fs
fs
testl
lds
out
shll
dec
daa
test
pop
xchg
pop
sbb
mov
arpl
mov
and
mov
out
xor
mov
jecxz
dec
jl
dec
ret
mov
dec
pop
adc
add
xor
xchg
scas
pushf
push
shlb
cmp
stc
sub
sub
in
adc
push
bound
add
fwait
popf
cmp
mov
fimull
cmp
and
dec
inc
mov
and
inc
inc
lods
dec
xchg
sbb
push
andb
jns
and
jns
xchg
leave
int
lods
add
mov
inc
xlat
sub
xor
mov
adc
mov
xorb
leave
lods
xchg
or
repnz
mov
push
iret
mov
jge
xor
repz
js
and
xor
mov
pushf
sub
icebp
xchg
insb
sub
jns
mov
fidivrs
in
cmp
int
xor
std
and
ret
push
xchg
dec
push
hlt
std
xchg
xchg
mov
inc
or
daa
inc
loop
sub
and
cmpsb
and
jnp
pop
sbb
sub
test
and
and
enter
mov
cmp
ss
enter
cmp
sbb
js
cmp
pop
and
sti
or
inc
loopne
cmp
pop
call
enter
mov
mov
stos
rorb
movsb
lods
inc
insl
jns
inc
enter
mov
inc
push
pop
out
or
xchg
insb
pop
rorl
scas
push
insl
ret
cmpsl
les
test
mov
test
add
popf
add
cmp
sub
adc
or
xor
into
adc
shrb
sbb
iret
inc
das
loop
daa
sub
sub
lds
and
sub
cmp
cmp
xor
int
popf
jbe
mov
jne
mov
out
xor
xor
scas
xchg
add
ds
pop
cmpsb
mov
dec
jmp
fs
pop
mov
mov
xchg
mov
jle
mov
mov
mov
fistps
adc
clc
je
or
xchg
or
fisubrl
xor
ljmp
in
jle
add
and
pop
cltd
dec
or
and
lahf
in
jo
or
cmp
pop
inc
mov
cmc
lods
add
in
mov
sub
sahf
and
mov
imul
je
xchg
ss
push
cmpsl
test
pop
mov
sarb
mov
add
lea
sbb
lahf
add
mov
dec
and
popf
push
dec
mov
mov
pop
mov
out
jns
outsb
lods
jl
push
xlat
mov
push
mov
orb
xor
add
mov
add
aad
stos
les
jne
cmpsb
cmp
fucom
mov
inc
jge
or
add
or
lods
inc
aaa
out
leave
push
insb
inc
sbb
add
mov
or
jo
inc
hlt
es
xor
or
mov
sub
movsl
add
xor
cmpsb
sub
lods
jae
loope
test
insb
repz
mov
and
sbb
stos
mov
cli
sbb
fldl
inc
in
cmp
lret
in
insl
ret
cmpb
lds
and
in
xchg
aas
cmc
inc
adc
insb
add
cmp
mov
jne
ljmp
mov
inc
adc
adc
pushf
mov
dec
sub
lods
inc
jl
sub
hlt
movsb
insb
dec
mov
dec
mov
push
sub
cltd
std
lea
decl
xor
adc
push
inc
push
or
jle
cmpsl
sub
jmp
dec
cmpsb
pushw
pop
test
mov
mov
das
push
jecxz
xchg
stc
sub
jle
aad
dec
clc
scas
scas
imul
hlt
decl
adc
xlat
sbb
inc
xor
mov
push
ficompl
inc
cli
push
push
cmpsl
mov
lods
mov
mov
das
sub
pushf
daa
adc
lret
add
popf
dec
mov
notb
xchg
neg
cmp
fmull
xor
jecxz
cmovo
sub
dec
out
fisubl
and
rorb
sub
insl
cs
push
ret
jbe
xor
sbb
std
fwait
loopne
cmpsl
notl
fnstenv
arpl
dec
xor
cmc
xor
sahf
popf
cmc
or
cld
pop
push
jle
iret
jns
push
inc
xor
mov
hlt
aas
ret
inc
sub
sbbb
rcl
rcll
adc
fcmovne
adc
call
fisubrl
out
ljmp
and
outsb
daa
jecxz
imul
mov
add
push
mov
adc
xor
push
sar
sub
lret
and
adc
fwait
and
stc
sbb
xchg
lea
mov
ss
mov
cld
outsl
pop
or
sub
jmp
mov
sti
enter
mov
push
push
test
call
push
arpl
sbb
inc
or
add
rcr
xor
jns
push
idivl
in
jmp
call
aaa
jle
and
ss
jmp
mov
jno
repnz
sub
mov
or
fwait
loop
or
pop
xchg
xor
or
dec
ja
stos
pop
clc
cltd
sti
sbb
cwtl
loope
push
pusha
in
ljmp
mov
adc
les
and
mov
cli
cld
mov
cmpsb
movb
out
sbb
in
sbb
xor
out
jge
pop
lret
add
dec
mov
sbb
pop
outsb
adc
mov
lds
pop
mov
clc
cmp
mov
push
movsb
insb
cmc
cmpsl
adc
cltd
bound
cmpsb
ds
rcl
pop
jno
jmp
ds
ret
test
ljmp
mov
int
nop
dec
je
mov
imul
fxch
or
pop
push
jne
fmul
inc
xor
out
int3
or
cmp
inc
lods
mov
movsl
cmc
or
dec
and
cltd
lea
test
mov
lea
or
lea
test
mov
lea
cmp
mov
push
dec
cmpsb
mov
test
mov
lret
ret
mov
cs
mov
nop
bound
adc
in
pop
add
mov
pop
arpl
jl
dec
jle
xor
sub
popf
and
sub
fnstenv
add
sub
bound
es
icebp
loopne
jmp
mov
insl
inc
mov
jo
idiv
or
out
je
fdivr
sub
fsubrs
mov
add
idivb
and
ljmp
add
int
push
sarb
cmp
daa
adc
xchg
mov
or
push
cmp
movsl
ret
mov
xchg
sub
fdivl
jp
cltd
push
loopne
jl
in
inc
adc
es
cld
fimull
flds
cmp
jnp
add
andl
mov
xor
cmp
mov
sub
cmc
dec
push
sbb
shr
jg
repz
cmc
out
xor
pop
ret
mov
mov
iret
fldcw
loope
jle
lret
sbb
jl
sbb
xchg
adc
mov
sub
mov
or
jo
out
mov
xchg
cs
movsl
repnz
sbb
fldl
cli
and
pop
adc
xor
test
adc
icebp
fucom
cmp
jmp
loopne
inc
jle
xchg
cli
sub
pop
cmp
pop
jnp
out
test
xor
test
adc
and
push
mov
mov
daa
lahf
sub
xchg
cli
nop
cwtl
inc
pusha
ret
mov
adc
fmul
mov
adc
iret
std
or
enter
mov
and
sub
data16
and
roll
mov
and
mov
jbe
incl
daa
out
xor
xchg
cltd
adc
cmp
shlb
repnz
int
test
fcompl
add
out
or
das
adc
shl
sbbl
or
and
sub
ja
fyl2xp1
adc
jp
lret
sub
rorb
rcrb
pop
pusha
clc
call
xchg
jecxz
pop
fcoml
mov
sbb
cmp
daa
mov
into
or
sar
jb
fstpt
sub
in
jnp
or
int3
mov
and
repnz
cmp
lahf
add
or
ja
fwait
and
cs
or
int3
sbb
fmull
xor
insb
out
cltd
leave
xchg
enter
je
mov
fadds
and
pop
das
into
loope
lahf
mov
jle
repz
adc
test
cmp
and
adc
jg
cmpsb
ret
inc
lcall
jne
or
push
push
sbb
nop
or
cmp
lock
mov
fs
cmp
iret
pop
sysret
int
push
fs
in
cs
lds
dec
mov
mov
or
ret
sub
push
in
aam
or
adc
jo
pop
mov
sub
adc
mov
lds
ficoml
scas
out
ljmp
xchg
xor
daa
iret
pop
setg
rol
pop
out
iret
push
cmc
ja
out
dec
mov
push
mov
sarl
adc
out
popf
pop
aas
or
js
addr16
mov
scas
mov
mov
int3
aaa
les
mov
or
push
push
ja
out
xor
aaa
std
fcoml
mov
mov
sub
mov
cmc
incb
rorl
jb
mov
xchg
xor
xlat
push
xchg
mov
dec
jne
jle
sbb
cli
jo
int
jno
in
pusha
add
pop
mov
ss
add
aaa
mov
mov
pop
js
xchg
xchg
adc
es
jle
ror
enter
out
jp
in
push
movsl
aam
mov
cmp
mov
mov
xor
mov
or
in
mov
adc
xchg
test
add
fs
push
repz
pop
and
fcmovnb
adc
jae
jecxz
xor
xchg
cmp
clc
sub
pop
cli
jmp
repz
lahf
out
or
enter
cmp
adc
cld
push
jmp
jb
jmp
fnstsw
push
xchg
sbb
and
lcall
imul
cmp
aaa
push
push
sub
and
aaa
mov
in
or
mov
sub
repz
fildll
into
cmp
outsl
pop
dec
mov
xchg
or
daa
ja,pn
mov
rclb
shlb
and
and
sub
fnstsw
xor
loope
lea
clc
das
cmp
push
dec
push
aas
mov
or
adc
arpl
jmp
push
nop
dec
lea
scas
mov
sbb
jb
add
fwait
and
mov
or
rolb
and
sub
adc
addb
imul
adc
movsl
loopne
nop
mov
mov
adc
fbld
xchg
lock
adc
imul
mov
fldcw
lea
mov
adc
test
in
lret
or
inc
ds
shrl
mov
mov
cmp
sub
iret
imul
lods
in
add
push
mov
xor
ljmp
pop
out
push
sahf
and
fiadds
cld
sub
fsub
and
or
scas
sbb
and
jmpw
sbb
repnz
mov
fiadds
aas
dec
push
dec
jmp
and
fimull
cmp
addr16
psraw
pop
pop
jp
push
sbb
sub
xor
aam
outsl
out
add
and
jg
stc
ds
lods
adc
xchg
mov
jne
add
cmp
ret
in
mov
mov
xchg
xor
shll
imul
lret
ljmp
cmpsb
int3
lock
jmp
cld
add
lods
cmpsb
arpl
add
imul
aaa
pop
pop
repnz
sahf
sarb
xlat
jge
fdiv
call
enter
int
scas
jb
mov
test
das
pop
out
jle
sbb
ljmp
faddl
fmuls
fisubs
sarl
mov
mov
jl
movsl
sbb
sub
pushf
ljmp
in
jge
jge
jecxz
add
loopne
enter
cmp
push
mov
movsb
mov
xor
pop
pushf
cs
cmp
mov
loop
ror
pop
adc
mov
add
or
ljmp
fcoms
pmulhuw
fs
sub
or
sarl
xor
and
xor
shr
adc
mov
mov
xor
xorb
dec
push
sub
out
sbb
xchg
add
xchg
xor
cmpsb
xchg
cmp
std
dec
sti
push
ja
filds
mov
adc
push
xchg
cs
xchg
and
cld
loop
pop
aas
fisubs
pop
gs
add
lods
repnz
insl
add
test
and
or
loope
inc
outsl
out
xchg
jge
loopne
fistpl
inc
in
pop
inc
fisubrl
je
xchg
dec
inc
or
inc
mov
mov
jg
mov
clc
incl
cmovl
ja
aam
adc
mov
xor
mov
xchg
out
add
push
ljmp
push
or
loop
arpl
aas
out
nop
pop
or
sub
out
xor
outsl
iret
aaa
into
jmp
jecxz
push
int3
add
dec
jbe
mov
push
outsb
or
and
fistps
daa
pop
dec
jp
aaa
add
inc
cld
addr16
repz
loope
test
sbb
and
ljmp
scas
adc
andb
push
xchg
int
addr16
insb
add
inc
imul
jp
scas
xchg
sub
and
stos
arpl
mov
add
xor
imull
add
movsb
inc
sbb
out
dec
movsl
lcall
xor
lds
into
sbbb
push
push
imul
sarl
push
lahf
ja
mov
or
mov
sbb
cmp
cli
stos
mov
sbb
xchg
cli
loope
and
dec
jnp
mov
in
inc
sbbb
cmp
fdivr
inc
loope
inc
add
mov
push
add
and
in
movsb
mov
and
or
pushf
mov
ljmp
clc
cli
enter
mov
aam
nop
fcomps
cli
sbb
jmp
dec
mov
bound
xchg
sahf
loop
fidivl
and
xchg
push
jle
out
sub
mov
dec
lea
shlb
sub
call
pop
scas
fdivs
pop
jle
aaa
imul
push
or
inc
mov
int
adc
push
shlb
cmpsb
shr
push
ficoms
icebp
rol
push
lea
adcb
jb
insb
daa
adc
add
cmp
out
fldenv
push
inc
mov
xchg
xchg
dec
bound
mov
push
mov
mov
xor
or
sub
lea
mov
lods
inc
xchg
scas
loop
push
popa
xchg
out
push
call
add
xchg
cwtl
xchg
jb
icebp
push
sub
mov
sbb
xchg
addr16
jg
cmp
xchg
int
or
inc
lret
mov
in
icebp
mov
loopne
xor
pop
ret
vpcmpeqd
xchg
nopl
push
sub
xlat
outsl
aad
in
lret
pop
aaa
fsubl
push
mov
scas
xlat
inc
xor
hlt
int3
dec
cmp
xor
pop
jne
mov
add
fstpt
movsb
add
xor
and
in
call
orw
sbb
and
subl
push
aaa
pop
div
out
mov
push
fsubl
add
sub
dec
cltd
and
push
sbb
test
mov
xchg
leave
jno
xor
mov
push
push
sub
cmpsb
jae
xchg
or
subl
movsb
add
int
dec
icebp
mov
push
adc
push
loop
int3
loop
add
xlat
dec
dec
outsl
rolb
stos
stc
jge
sub
jb
mov
mov
add
aam
fdivrs
out
or
in
std
or
dec
in
aam
lret
add
cs
mov
loope
dec
or
dec
out
fidivs
mov
arpl
ret
xor
stc
jns
sahf
clc
scas
cwtl
dec
pop
or
dec
jo
xchg
sub
outsb
cmp
scas
add
in
insb
jo
fwait
sbb
adc
in
sarb
call
add
push
test
negl
call
mov
add
dec
mov
push
pop
sub
aaa
in
adc
sbb
ret
cmp
xlat
dec
repz
mov
js
and
adcb
pop
adc
sub
insl
shl
mov
pop
jmp
adc
mov
jl
loope
and
mov
out
sti
repz
rol
lea
push
pusha
mov
jmp
add
int
punpckhdq
jo
push
jno
push
jmp
mov
ret
mov
add
test
ficomps
add
jecxz
fidivl
rcrl
gs
aad
imul
jae
icebp
iret
js
xchg
add
jns
mov
and
mov
jne
adc
fs
popf
cmp
into
xchg
xchg
pop
repz
cltd
sub
and
ds
push
xchg
sub
je
fucomi
or
cmp
movsb
cmp
push
aaa
adc
and
dec
es
add
mov
pushf
pop
les
fisttpl
das
dec
push
std
add
fsubrl
inc
jl
in
sub
sbb
jge
fwait
push
mov
dec
dec
lods
xor
lcall
mov
inc
cmp
inc
cmp
mov
mov
mov
push
dec
stc
pop
dec
je
cmp
adc
mov
aam
pop
bound
jo
outsb
mov
mov
mov
inc
insb
pusha
mov
jmp
jns
icebp
cmp
inc
jle
stos
inc
cmp
test
inc
imul
std
je
out
sbb
fs
je
sbb
ret
rclb
or
cs
test
stos
mov
mov
outsl
push
mov
ret
addb
notl
lods
adc
jns
dec
pop
cmp
fldenv
movsl
jmp
les
push
pop
hlt
mov
mov
push
nop
jecxz
pop
xor
icebp
daa
movsl
aad
popf
les
mov
mov
cld
sub
scas
jo
mov
inc
xor
push
pop
icebp
movsl
out
xorb
xchg
cmovg
push
lcall
fisttpl
cltd
xchg
push
mov
inc
aaa
lret
sub
inc
shrb
popa
or
scas
fisttpl
mov
or
scas
insb
pop
lods
dec
pop
daa
scas
or
dec
fadds
cmp
xor
fldln2
movsl
out
adcb
and
mov
push
add
loop
inc
sub
imul
adc
sbb
in
xor
inc
push
pop
iret
xchg
lret
scas
fildl
mov
or
scas
incb
mov
andb
xchg
ljmp
adc
adc
scas
sbb
aad
push
adc
test
dec
sub
test
inc
pop
xchg
jmp
mov
stos
test
int
mov
xor
mov
rol
out
add
pop
daa
dec
pop
out
int3
ffreep
sti
cmp
jae
ljmp
push
ret
mov
aam
adc
mov
testl
call
and
dec
int3
stos
fisttpll
shr
or
xor
xchg
adc
or
lret
sbb
xor
aas
fs
mov
lds
test
into
insb
sub
loopne
es
cmp
insb
lret
adc
push
xchg
add
gs
jns
or
xor
test
sub
cmp
pusha
mov
pop
pop
fmuls
sahf
sub
pop
adc
jp
loopne
fnstcw
cmpsb
les
sarb
in
push
xor
xor
cwtl
push
pop
push
jmp
push
adcb
fwait
xor
lar
mov
hlt
xor
mov
push
stc
and
shlb
es
shlb
sar
push
lods
and
in
add
out
test
push
jl
cli
sub
insb
les
and
inc
xor
and
fildl
scas
repz
jmp
stc
add
icebp
xor
mov
push
leave
iret
mov
out
out
jmp
cmpsl
lret
adc
cmc
in
sbb
stc
ret
lock
sbbb
stc
in
cmp
mov
aaa
adc
jb
in
fidivs
in
ljmp
jmp
pop
aas
addr16
push
loopne
rorl
std
pop
and
les
add
hlt
daa
in
adc
cmp
enter
or
rorb
jecxz,pt
jae
cmpsl
inc
jg
push
jbe
int
ss
push
mov
sti
icebp
push
push
jns
inc
stos
and
sbb
xchg
ljmp
in
sbb
out
lcall
pop
mov
push
cmc
mov
nop
adc
mov
loopne
xor
jo
mov
ja
or
int3
sarl
inc
iret
insl
add
shl
add
out
fs
jmp
add
mov
rolb
pop
xchg
fldln2
out
push
clc
sub
adc
mov
dec
push
movsl
out
push
dec
lds
jae
mov
mov
jmp
in
pop
movsb
jg
popf
jp
cmp
adc
cltd
mov
xchg
test
xchg
xchg
scas
and
and
and
mov
adc
push
call
popa
or
dec
loop
sti
clc
adc
xchg
pop
mov
pop
xchg
out
aaa
jecxz
sub
fstps
pop
negl
sub
mov
cmp
rcr
movsb
daa
cmpsb
pop
ds
mov
imul
adc
inc
dec
js
call
dec
fmuls
rclb
or
fs
sub
ficoms
inc
adc
mov
pusha
adc
int3
push
mov
push
add
add
push
sbbb
mov
cmpsb
dec
sbb
rclb
pop
dec
aad
xor
pushf
fcomp
loope
or
in
xchg
or
cmpsb
push
inc
outsl
add
in
pop
lds
mov
sbb
xchg
data16
jmp
loopne
or
pop
pop
fchs
cs
xchg
xlat
sarb
repz
jmp
dec
sub
jp
loopne
lret
das
cmpsl
xor
sbb
and
cmp
sar
sbb
repnz
mov
in
xlat
jb
pop
ljmp
insb
jmp
sub
cmpsl
jle
inc
fstpt
push
push
int3
jns
add
fsubl
imul
sub
test
out
mov
xchg
inc
sti
repnz
sbb
scas
push
fmuls
jmp
jns
scas
call
out
in
adc
pop
mov
fisttpl
xor
pusha
sbb
dec
push
sub
ret
lret
call
daa
es
fs
movsb
push
clc
test
add
movsl
das
mov
push
mov
sbb
mov
jae
repnz
inc
push
mov
xchg
mov
es
mov
lea
iret
adc
inc
cmp
iret
adc
cmp
mov
movsl
cld
mov
insl
idiv
repz
out
fidivrl
mov
sbb
aad
fdivrs
or
sub
sub
fcomi
insb
pop
jge
lock
jmp
aad
daa
movsb
xchg
ljmp
fsubl
push
adc
jge
clc
cmp
add
cmp
rorb
popf
cmpsb
lcall
fdivr
cmp
fbstp
call
or
outsl
sub
pop
repnz
mov
gs
and
push
fucom
adc
lock
pop
ficoms
aas
fwait
pop
or
fs
icebp
jp
push
gs
push
adc
cmpsb
test
in
lret
push
in
notl
ret
cmp
movsb
stos
pop
add
add
cmp
or
std
inc
jbe
xor
sbb
movsl
in
out
pop
mov
jbe
out
adcb
jp
sub
fidivl
repnz
fxch
or
ret
mov
xchg
add
addr16
xchg
les
roll
outsl
rcr
jae
xchg
and
mov
gs
loop
sub
push
repnz
fimuls
in
pop
jno
in
pop
jns
enter
mov
pop
repz
out
jne
dec
dec
cwtl
inc
test
rcll
in
mov
pusha
lea
lret
mov
sub
xor
lret
popf
loop
cltd
mov
subl
xor
fadds
sbb
dec
lock
mov
jge
in
xor
dec
mov
sbb
mov
in
dec
test
icebp
cmpsb
fnsave
daa
scas
rorl
pop
aaa
mov
or
push
push
cmc
jns
add
and
lret
and
push
and
sbb
sub
lret
jbe
pop
ror
es
mov
call
jns
std
mov
std
sbb
mov
je
shrl
mov
pushf
sub
pop
sub
and
cmc
arpl
mov
fdiv
jecxz
fisubrs
ret
shrb
mov
add
mov
jg
test
or
fsubr
mov
ja
loop
adc
cmp
pushf
in
xor
add
daa
adc
daa
sub
cmpsb
rcl
adc
test
push
pop
sub
jle
icebp
icebp
xor
adc
xor
mov
andl
mov
sbb
loopne
in
lahf
cmp
jmp
mov
das
int3
jmp
fs
adc
movsl
int
sbb
ljmp
pushf
cmp
out
pop
cltd
insl
dec
sbb
lock
cmp
xchg
mov
jns
adc
popf
dec
mov
mov
xchg
sbb
sub
sbb
call
mov
inc
int
test
mov
popa
xor
add
clc
rcrb
mov
ret
mov
shll
mov
ret
lret
mov
xor
inc
and
adc
int
out
xor
jnp
hlt
and
xchg
mov
fsubrs
insb
pop
in
push
xchg
pushl
mov
mov
leave
cmp
mov
lds
jns
xchg
ss
fwait
push
pusha
jne
dec
hlt
repnz
pop
xchg
push
push
mov
or
or
push
and
sbb
std
mull
xor
push
and
inc
adc
sub
sbb
fidivrs
mov
cmpsl
dec
add
or
push
xchg
leave
aas
rcll
data16
or
xchg
pusha
mov
jbe
sarl
pushf
inc
sub
daa
fsts
adc
clc
pop
fwait
cmp
fldcw
into
pop
jbe
adc
push
hlt
rcpps
fwait
scas
sub
push
ret
pop
push
aaa
mov
clc
jp
mov
sbbb
leave
mov
pop
jns
popf
test
mov
push
and
push
xor
fcmovnb
leave
cmp
stc
xorb
xchg
xlat
xchg
aam
cld
push
jbe
xchg
aaa
pop
dec
lret
xorb
test
cmp
fsubl
push
imul
call
sub
pop
out
or
clc
inc
jae
xchg
mov
xchg
cmpsl
in
mov
clc
mov
addr16
repz
push
test
call
notl
daa
imul
adc
das
ljmp
jno
mov
or
fsubs
push
loop
stos
dec
sbb
adc
in
sbb
add
jb
push
pop
jecxz
add
imul
sub
sti
lcall
mov
pop
rol
insl
les
jae
lcall
movsl
test
push
xor
or
out
sbb
rcll
mull
insb
iret
cmpsb
pop
ret
jae
jbe
lea
cli
push
fistl
cmp
repnz
jecxz
xchg
jp
stc
jp
push
and
stc
test
push
pop
pop
inc
pop
xchg
pop
loopne
cs
jmp
xlat
test
outsb
test
jg
aas
stos
das
jp
cs
andl
sbb
es
cmp
xchg
adc
push
jae
pop
mov
aad
ljmp
gs
adc
dec
enter
and
test
jae
jns
repz
repz
sub
cmpsb
loopne
jbe
ds
mov
mov
loopne
cmp
cmp
sub
and
inc
rcll
call
js
xchg
fcmovnbe
nop
xchg
push
sub
dec
call
je
iret
add
push
xchg
dec
pop
push
test
sbb
add
jns
mov
pop
adc
dec
jl
nop
es
cmp
ror
bndstx
cli
push
jnp
sub
pop
xor
jge
dec
push
mov
push
icebp
fwait
mov
fisubl
cwtl
sbb
or
iret
loopne
fldenv
and
js
xlat
outsb
daa
dec
stos
cmovo
inc
fildl
jb
or
out
enter
xor
mov
push
or
js
fisubrl
cmpsb
adc
loopne
mov
dec
cmp
or
cmp
pop
fsubrl
cmc
pop
or
in
fcmovb
or
gs
in
lods
ljmp
pop
into
in
enter
movsb
in
adc
mov
leave
push
call
out
cmpb
or
fmuls
in
dec
xor
xchg
insb
xor
in
xchg
scas
ja
xchg
pop
insb
mov
mov
movsb
pop
sbb
adc
outsl
jb
test
xor
xchg
mov
sahf
ds
sub
mov
iret
mov
mov
insb
in
add
jge
lds
js
dec
test
repnz
fnstsw
jge
loope
cmp
dec
mov
scas
pop
lret
pop
data16
in
arpl
jge
lds
js
dec
test
pop
fstp
push
jg
gs
jge
cmpsb
push
and
sarb
mov
dec
and
gs
jbe
data16
mov
gs
jb
push
ljmp
add
cltd
inc
lretw
jge
scas
mov
jb
mov
adc
mov
sahf
ds
adc
dec
lret
loope
add
fiadds
enter
fnsave
pop
pop
cmc
sbb
mov
mov
imul
leave
or
divw
and
test
aad
jb
dec
test
push
aad
jb
scas
mov
push
push
into
jecxz
movsl
cltd
mov
sub
sbbb
cmpsb
pop
or
loope
sbb
push
or
sahf
pushf
dec
hlt
fnsave
and
addr16
pushf
in
mov
orl
jno
xor
out
cmc
addr16
fildll
adc
xchg
enter
imul
stos
push
in
mov
arpl
push
mov
rorl
push
sub
xlat
cld
dec
push
scas
fadd
jl
mov
sbb
fldt
mov
mov
cmp
sub
inc
xor
pop
xchg
repnz
popa
and
stos
xchg
in
sbb
icebp
mov
and
fildl
movsl
mov
or
sub
sti
push
cmc
std
jl
lea
in
shlb
dec
ds
inc
jo
out
enter
xchg
dec
dec
dec
jge
mov
lahf
mov
mov
ss
mov
outsb
lods
rcll
sarl
leave
lcall
adc
lcall
clc
cmpsl
mov
add
sub
shll
mov
dec
jne
mov
dec
cmpsl
loop
icebp
mov
inc
pop
push
lds
fisttps
xchg
push
cmp
fucom
scas
cltd
imul
pop
jge
xchg
jge
in
adc
xchg
loop
int
xchg
jl
ljmp
mov
ds
addr16
xchg
daa
add
lds
push
imul
mov
outsl
inc
ljmp
movsl
ss
adc
pusha
leave
jmp
fistps
pop
int
push
sub
out
fnstenv
xchg
insl
cltd
or
or
bound
dec
jns
fwait
movsb
xchg
out
inc
pop
mov
outsl
xor
ljmp
and
lds
sub
in
mov
push
fmul
mov
jmp
mov
push
popa
movsl
daa
pop
pop
xchg
mov
inc
dec
lods
push
movsl
out
mov
test
inc
lds
les
xchg
imul
cli
or
or
aad
and
leave
sarl
frstor
adc
mov
add
test
mov
pop
mov
push
pusha
inc
popa
ljmp
movsl
adc
cmc
adc
aas
out
outsl
sub
loop
or
push
shll
pusha
and
lret
fnstsw
pop
shr
bound
ljmp
mov
cmpsb
leave
enter
mov
or
popf
movsl
data16
adc
pusha
loope
or
les
mov
fdivr
mov
or
mov
jle
mov
push
or
adcb
ljmp
outsl
inc
stos
jnp
popf
mov
xchg
lds
in
daa
stc
nop
add
mov
push
fldenv
sub
in
push
imul
mov
mov
lret
imul
and
adc
test
dec
lds
ret
mov
jge
mov
insl
mov
lds
les
cli
imul
mov
or
es
int
cmp
shrl
leave
daa
jle
mov
add
push
outsl
ljmp
sbb
mov
icebp
xchg
sbb
leave
push
rcl
mov
daa
ss
jmp
aas
or
ljmp
movsl
mov
push
mov
mov
xchg
xchg
jle
test
outsb
shl
mov
daa
ficompl
mov
add
icebp
ljmp
movsl
ljmp
lds
dec
arpl
mov
lds
les
subb
out
fsubl
mov
or
adc
cli
roll
mov
daa
push
mov
aas
inc
push
jns
xchg
jmp
push
mov
outsl
xor
xor
movsl
es
adc
pusha
cmp
push
aad
or
out
fdivl
mov
pop
xchg
cmpsb
insb
pop
xchg
pop
stos
outsl
insl
ljmp
movsl
outsb
or
adc
pusha
jmp
or
out
fsubr
mov
or
dec
add
leave
sahf
shll
mov
pop
lea
inc
pop
jge
cmc
mov
mov
daa
sbbb
out
add
adc
xor
movsl
testb
adc
pusha
or
movsl
mov
dec
cmc
lds
stos
jno
stos
pop
popa
mov
outsl
cmp
push
push
fldenv
fisubl
vmovsldup
lds
fcoml
push
sub
dec
aas
es
pop
out
fmull
orb
push
lret
in
push
data16
ds
mov
and
sub
daa
adc
mov
add
movsl
ljmp
or
cmpsb
mov
or
cltd
movsl
bound
mov
push
pusha
std
lds
loop
sbb
fdiv
mov
or
repnz
sbb
leave
adc
mov
es
pop
ja
lods
xchg
jbe
or
sbb
loope
daa
ficompl
mov
add
jmp
out
or
adc
push
les
dec
mov
xchg
lds
les
cli
imul
mov
or
es
xor
not
sbb
mov
mov
cltd
aas
dec
outsl
test
stos
les
lcall
mov
or
push
lret
aad
ds
leave
rcl
cmp
daa
or
mov
mov
push
popf
ljmp
popa
cmpsb
scas
fsubl
sahf
or
lret
lea
or
aad
ds
lds
daa
ss
in
mov
add
vmovq
adcb
mov
pop
adc
mov
imul
mov
push
sar
mov
daa
rcrb
mov
add
in
push
sbb
loop
or
adc
dec
lds
fwait
lods
mov
xchg
movsl
bound
mov
adc
lds
out
sbb
out
fdivr
mov
or
repnz
add
adc
mov
es
movsl
movsl
jb
cltd
adc
lds
repnz
out
faddl
mov
or
into
lret
adc
leave
xchg
sarl
xchg
insl
xchg
daa
dec
pop
test
movsl
adc
xchg
lds
les
out
fcompl
sub
xor
lret
mov
and
xor
std
jmp
stos
mov
pop
push
mov
xchg
jecxz
mov
mov
inc
xchg
stos
mov
cmp
jb
std
lcall
loop
aaa
xor
sbb
and
push
das
sub
lock
cli
in
push
mov
fcompl
lcall
cld
mov
icebp
in
push
adc
cwtl
outsb
cmp
mov
les
lcall
mov
or
push
lret
in
nop
adc
add
sbb
into
imul
loop
sar
cmp
adc
mov
outsl
loope
push
inc
push
mov
or
ljmp
leave
lcall
movsl
daa
bound
mov
xchg
aas
push
outsl
ljmp
push
mov
mov
pop
daa
mov
mov
add
and
fcmovu
or
push
int
or
sub
imul
shl
repnz
pusha
sub
into
dec
adc
push
xor
shll
push
add
out
pop
lds
lret
fs
jne
loop
jge
adcb
mov
push
or
imul
mov
test
push
xchg
mov
dec
mov
adc
test
pop
mov
mov
lods
outsb
les
lcall
out
jmp
cmp
mov
pop
adc
cs
xlat
push
mov
in
rcrl
push
loopne
jns
ret
inc
pop
cmp
adc
loop
andl
sahf
jg
test
fcoml
stos
sbb
cmpsb
jle
mov
pop
add
rclb
in
push
adc
mov
aas
or
ljmp
movsl
rorl
ss
pusha
add
sti
sbb
aad
adc
out
mov
imul
rorl
stos
daa
sbb
add
call
adc
mov
sub
cmpsb
adc
push
cmp
sti
xor
push
pop
dec
ror
bound
out
mov
cmpsl
fwait
rcll
cltd
and
sub
adc
loope
lods
out
cmpsb
std
and
fadds
jb
inc
outsl
xor
lods
sub
sbbl
or
push
cmp
aam
push
xchg
cs
ljmp
fsub
mov
or
iret
enter
es
adc
pusha
xor
fidivl
shll
orl
mov
je
or
adc
addb
lahf
jnp
pop
repz
insl
ljmp
mov
xor
mov
mov
sbb
pusha
lea
mov
mov
add
dec
push
imul
adc
push
dec
cmp
or
pop
in
pushf
je
fstpl
in
dec
and
add
js
add
in
inc
imul
mov
mov
xchg
add
push
fprem1
mov
shr
iret
fbld
push
int
cwtl
repnz
or
jle
and
sbb
and
dec
outsb
fsubs
popa
push
jecxz
ret
in
push
sub
fsub
push
ljmp
inc
lcall
sub
pop
jne
cmp
sub
cld
jbe
into
dec
rorb
fs
ja
jg
adc
adc
pcmpgtw
mov
icebp
in
in
jmp
push
imul
jae
movsl
pop
cmp
sahf
sbb
fdivs
fisttpll
mov
xor
nopl
jge
hlt
xor
pop
pushw
inc
pop
push
decl
push
leave
out
sub
pushf
and
cltd
jg
aad
push
mov
inc
dec
and
sub
and
xor
daa
aad
mov
mov
icebp
popf
jmp
repnz
popf
fldcw
sbb
xor
fisubl
fstpl
inc
dec
cltd
jmp
daa
xchg
daa
dec
cmp
pop
ljmp
cmpsb
addr16
cmpsb
das
shlb
test
jl
dec
add
pop
cmpsb
lea
sbb
mov
dec
out
je
jns
out
aam
and
mov
sub
loop
xor
sub
outsb
mov
cltd
or
addr16
mov
lods
stc
sbb
imul
leave
sbbb
daa
js
cltd
push
addr16
fldcw
aaa
mov
es
loopne
pop
imul
ss
xor
mov
sub
aad
iret
dec
es
push
daa
dec
addr16
mov
push
ss
sbb
into
push
sub
ret
push
fldenv
out
sub
imul
fadd
cltd
and
adc
jmp
mov
sub
dec
xchg
mov
mov
ja
xor
stc
pop
inc
or
cs
mov
jecxz
outsl
inc
push
imul
inc
dec
jle
ret
andb
imul
out
and
cmp
inc
in
dec
or
fucomp
pop
mov
lds
push
roll
pushl
int3
dec
movsb
daa
loope
sub
pop
leave
jb
fwait
nop
inc
notb
ret
xchg
mov
rclb
cmp
sbb
push
dec
addl
bound
xor
fs
mov
sbb
sub
daa
fucomip
mov
add
mov
lea
inc
call
jnp
pushf
mov
dec
psrld
dec
inc
sub
das
inc
das
jo
test
mov
add
imul
xor
and
dec
fldcw
xor
cli
das
pop
lds
lret
cmc
pusha
fiadds
test
test
iret
pop
add
add
cmp
and
test
out
push
ds
inc
cmp
or
out
or
pushf
sub
das
es
sbb
and
cmp
or
cmpsb
and
fwait
js
ss
push
xchg
outsl
mov
mov
popf
gs
rcr
out
cmpsl
xor
add
neg
leave
cmpsl
popf
mov
cmp
pop
aas
enter
add
sub
lcall
hlt
inc
insb
nop
incb
pop
pmaxub
and
lret
pop
ret
ja
cmp
jle
push
fldcw
push
int
xor
lea
aam
sarl
push
sbb
mov
sbb
mov
ss
popf
push
insb
lods
iret
clc
adc
inc
jmp
jecxz
repz
dec
mov
jg
xor
stos
popf
pop
push
push
push
cmp
mov
adc
adc
push
cmp
add
out
adc
mov
jae
dec
cmp
fstl
add
xor
gs
add
sub
and
popa
lcall
push
fsts
mov
mov
adc
mov
scas
cmp
push
out
jecxz
repz
rcrb
add
lods
out
scas
pop
in
lea
out
inc
rep
lock
cmp
dec
int
cmpsb
xchg
xchg
jae
mov
xchg
add
test
fnsave
incb
addr16
fbld
mov
xchg
xchg
ds
sbb
xor
adc
int3
mov
pop
jno
je
outsl
or
stc
jb
mov
mov
jnp
pop
mov
sub
cwtl
and
out
fcmove
enter
faddp
xor
sti
xchg
sub
adc
enter
jecxz
sbb
into
push
cmp
mov
je
fsts
stc
adc
int
mov
lret
adc
sti
in
bound
add
jmp
or
das
insb
push
movsl
xchg
mulb
cmpsb
imull
mov
inc
mov
jbe
ficoms
shlb
pop
sbbb
out
fcmovne
fs
add
cmpsl
stos
cmp
and
ficoms
inc
pop
repnz
jbe
out
lea
rorb
adc
jmp
pop
dec
repz
xlat
or
outsl
jae
inc
sub
cmp
push
in
pop
xor
jecxz
es
sub
call
fcmovnbe
shl
mov
clc
add
xchg
cwtl
mov
dec
adc
xchg
clc
xchg
das
xchg
sub
pop
icebp
xchg
int3
sbb
pop
sbb
and
outsb
mov
sbb
fmul
dec
mov
dec
mov
add
pop
sti
mov
test
mov
imul
inc
in
xchg
cltd
inc
mov
icebp
gs
out
neg
pop
mov
sub
sbb
bswap
fnstcw
sbb
and
out
sub
push
pop
lods
lds
jns
push
sbb
test
in
dec
mov
inc
scas
sub
sti
xlat
adc
les
pop
out
scas
add
es
aad
dec
call
frstor
in
fmul
fdivrl
jne
or
cmpsl
pop
add
out
std
xor
and
add
les
movsl
stos
fistpll
push
push
lods
inc
outsb
mov
or
jnp
sti
ss
cmp
mov
call
jo
cmp
pop
dec
and
adc
cmpsb
mov
out
push
push
xor
fldenv
xchg
xchg
xchg
xor
enter
dec
andl
int3
pop
add
jns
or
shlb
mov
add
or
sub
aaa
sbb
mov
movsl
push
or
fisttpll
dec
dec
push
xchg
adc
and
adc
ss
stc
int3
xor
push
xchg
adc
out
sti
pop
mov
daa
clc
in
lds
cmpsb
cli
cwtl
shr
cwtl
inc
les
stos
out
clc
inc
stos
ret
daa
push
mov
daa
sub
stos
sbb
xor
add
ljmp
jge
cld
push
push
xchg
xor
sbb
adc
pop
ds
jmp
mov
cmp
jns
daa
jnp
sahf
xor
sbb
add
pop
sub
mov
shlb
mov
push
xor
shlb
mov
dec
mov
repz
pop
ss
cvtps2pd
int
outsl
inc
sub
out
dec
stos
arpl
hlt
hlt
cmp
xchg
sti
cmc
pop
and
push
orl
aam
and
movsb
jp
enter
dec
adc
pop
in
movsl
pop
sub
rclb
js
jecxz
inc
mov
mov
xor
pusha
cmpsb
and
notl
loopne
fs
xchg
push
push
arpl
roll
inc
shlb
out
jle
in
mov
sbb
lcall
pop
stc
in
xchg
inc
xchg
sbb
out
movsb
pop
pop
adc
aaa
sbb
imulb
xchg
sarl
rol
gs
or
pop
mov
xchg
lds
test
sbb
call
inc
cmp
fsubrp
lods
mov
sbb
or
push
adc
xchg
jnp
mov
enter
repnz
or
fldt
bound
or
lds
mov
push
cs
pop
xor
enter
daa
fwait
pusha
in
mov
pop
shlb
cmpsl
repnz
push
cmp
imul
and
aas
shr
or
add
cmpsb
and
add
sbb
and
sar
sbb
enter
lret
cltd
lahf
or
push
mov
mov
sub
jbe
fstps
push
rol
adc
or
clc
cmp
jb
sub
scas
fucomip
xor
fcoms
bound
int
inc
ljmp
fstps
xor
outsl
repz
scas
fimull
jns
adc
idiv
cs
lock
mov
nop
add
xor
jmp
mov
repnz
adc
sbb
fstl
mov
rolb
imul
inc
nop
in
push
cmp
sbb
aas
inc
aam
mov
and
cmp
neg
mov
xchg
mov
fiadds
ficomps
inc
lds
xor
addr16
jmp
sub
je
sahf
cmp
xchg
jns
addr16
not
testl
out
fwait
adc
sub
das
mov
das
pop
inc
repz
adc
xchg
loopne
push
clc
mov
fs
adc
cwtl
insb
aam
sub
mov
pushf
push
fisttpll
cmp
dec
or
pop
stos
call
add
testl
add
push
cli
nop
movsl
fdivrs
jno
out
les
cltd
call
icebp
sbb
push
push
jp
adc
or
icebp
adc
les
inc
mov
enter
xchg
and
jge
push
cmpsb
lret
sub
out
adc
push
nop
out
push
push
or
jo
pop
ljmp
daa
out
fistl
popa
out
add
in
scas
cmc
nop
sti
jbe
xlat
test
aaa
and
pop
adc
sub
test
lea
push
aaa
xor
cmp
nop
out
adc
lcall
cmp
cmc
xchg
push
ljmp
das
sub
jp
pop
add
push
movsl
stos
fs
ficompl
dec
mov
rcrl
jb
fiadds
out
mov
mov
daa
aas
repnz
dec
sub
dec
out
cmpsb
push
cs
ret
xchg
mov
in
stos
mov
sbb
jmp
mov
test
mov
pop
xchg
adc
or
ror
pop
orb
in
js
not
cmpsb
xor
decl
data16
hlt
mov
cmp
mov
dec
mov
mov
sbb
popl
cmpsb
add
lea
je
inc
xchg
test
add
mov
sub
mov
clc
dec
sbb
jecxz
adc
negl
mov
andl
mov
xor
in
out
jp
mov
mov
rcrl
inc
xor
inc
push
push
dec
xchg
out
push
add
loopne
popa
xor
add
cmp
dec
fyl2xp1
add
daa
jae
out
mov
xor
enter
clc
stos
pop
sub
fs
sub
out
dec
fxch
stc
sbb
in
pop
cltd
lds
inc
xor
jmp
dec
sub
fs
fdiv
jl
js
xchg
dec
aaa
inc
push
jnp
mov
inc
push
lret
dec
xor
cli
lds
imul
or
insb
fldl
dec
pop
cmp
xor
push
icebp
cmc
jae
push
dec
jbe
cld
dec
push
fs
xchg
xchg
cld
and
xor
out
mov
jecxz
inc
xchg
aam
jbe
and
jb
cmpsl
scas
pop
fwait
ja
sbb
scas
mov
icebp
sbb
xchg
popa
arpl
inc
sbb
iret
xor
fcmovne
dec
xchg
mov
in
sub
push
inc
shrl
call
sahf
push
daa
inc
insl
or
bound
std
in
mov
ljmp
repz
mov
iret
and
and
cmpsl
or
jp
addr16
xchg
mull
fwait
bound
cmp
mov
insb
fimull
je
repz
jge
or
call
in
mov
iret
ret
int3
jbe
leave
test
sub
or
iret
mov
test
mov
imul
xor
mov
popf
xor
mov
cltd
out
cs
mov
shrb
ss
inc
pusha
mov
insl
inc
xchg
cmp
fwait
xor
movsl
jno
push
stc
imul
sar
aas
pop
je
add
pop
and
or
popf
push
add
mov
cmpsb
or
mov
push
cmp
lret
mov
or
pusha
hlt
xor
imul
jmp
rcll
push
pusha
cmp
push
cs
dec
ss
in
dec
jle
fbld
cmpsl
xchg
inc
jecxz,pt
mov
xchg
sub
mov
inc
loopne
jp
std
les
fnstsw
push
mov
imul
jns
cmove
test
push
repnz
mov
ret
mov
inc
or
adc
jmp
xor
iret
pop
cmp
jge
iret
loop
negl
mov
aad
pop
and
sub
pop
stos
pop
test
pop
or
pushf
mov
loop
fcmovnu
ret
fcmove
nop
call
sub
jmp
add
rcrb
pop
dec
mov
les
testb
xor
and
dec
ret
jle
sbb
loop
dec
sbb
sbb
aad
je
fstps
mov
fcmovnu
ljmp
mov
sbb
cmpsl
sbb
in
bound
mov
sti
xchg
fidivs
out
adc
mov
push
fadd
cmpsb
sti
in
outsl
addps
out
or
aas
cmp
cmp
xchg
test
js
jb
mov
out
inc
fwait
insb
jne
sub
xchg
iret
add
fs
leave
jb
pop
call
sub
cltd
jp
jns
mov
jne
mov
scas
cld
sub
xchg
xor
imul
and
stc
daa
testl
sbb
adc
shlb
add
lahf
sub
mov
mov
add
pushf
cwtl
xchg
sbb
loopne
ror
loop
mov
fsubrl
sub
cmp
dec
insl
std
add
xor
jbe
out
xchg
ja
jecxz
jp
dec
ret
or
popa
or
insb
sub
loop
jne
dec
movsb
shrb
cmp
mov
pop
and
xchg
js
rclb
repnz
outsl
inc
out
xchg
je
dec
sbb
jmp
into
ret
push
xor
rorb
int
mov
subb
repnz
fs
mov
notb
shll
cli
pop
ds
jle
imul
cltd
aad
in
cmp
mov
mov
cmpsb
dec
and
jmp
aad
xchg
and
xor
rcrl
push
ljmp
daa
popf
jle
mov
outsl
aas
xor
stos
stc
push
push
sbb
pop
pop
movsl
mov
arpl
push
dec
jne
mov
xor
pop
rolb
fmull
adc
pop
js
jns
jnp
mov
pushl
aam
mov
mov
out
pop
mov
and
fwait
lea
bound
aam
cmp
insl
das
cmp
jno
cmp
repz
enter
aaa
ret
std
push
lods
mov
jecxz
mov
cmp
rcrb
lret
fildl
or
cmp
loop
push
mov
sahf
jmp
cmp
xor
sbb
push
int3
pop
mov
subl
fs
pop
cmp
mov
lret
mov
xchg
arpl
add
mov
mov
dec
mov
mov
mov
cbtw
xor
mov
push
inc
mov
lret
push
sub
test
pop
adc
jns
xchg
inc
sbb
lock
decb
sub
in
daa
sub
push
stos
jp
aas
cmp
sbb
add
jne
test
shl
adc
sub
add
xchg
dec
lcall
out
dec
sub
jae
cmpsl
in
fs
mov
cs
es
xor
cmc
cmp
add
mov
jmp
jae
clc
add
rcrb
sub
cmpsb
adc
adc
mov
fwait
fwait
les
push
adc
adc
in
cwtl
imul
and
xchg
movsb
aam
in
sbb
adcl
adc
push
inc
adc
pop
mov
in
lods
aam
jp
mov
sub
inc
lahf
push
jns
sbb
adc
lret
subl
push
sub
mov
fildl
push
mov
and
nop
cmp
mov
xchg
sbb
cld
insb
loope
pop
mov
gs
lahf
or
xor
xchg
fildl
cltd
cmc
in
pop
mov
jle
and
and
mov
mov
and
fcomp
push
sar
bound
out
pop
mov
popf
cli
cld
hlt
int3
pop
and
mov
not
and
cmc
cmp
out
mov
shlb
out
fwait
insb
jo
test
jno
sub
cmp
adc
push
jmp
jne
daa
mov
ja
jbe
scas
lret
sbb
enter
adc
inc
notl
sbb
fistpll
dec
in
in
sbb
imul
out
test
insb
xchg
push
call
roll
lcall
and
cmc
sti
inc
mov
fisubrs
push
or
cmc
and
loopne
mov
int
adc
or
out
xchg
ljmp
adc
xor
sbb
icebp
mov
add
xchg
popa
cld
sub
push
mov
push
rcrl
movl
pop
pushf
popa
aam
sbb
sub
sbb
xchg
sbb
pop
cli
or
push
adcb
jnp
fbstp
pop
das
sbb
mov
aam
daa
mov
pop
mov
mov
push
xor
in
xor
mov
sub
and
jnp
ret
inc
sbb
mov
in
out
xor
iret
rcll
je
cmp
movsl
xor
add
fbld
jmp
in
dec
mov
decb
out
cmp
push
dec
jmp
dec
dec
or
pushf
in
andb
out
mov
dec
gs
mov
shrb
adc
mov
imul
xor
adc
daa
addr16
adc
push
mov
mov
fldcw
or
pop
fldcw
popa
stos
out
push
insb
out
imul
imul
ja
push
out
mov
pop
cmp
mov
add
cmp
scas
inc
fs
cwtl
mov
cmp
icebp
rcrb
divl
sub
sub
pop
aaa
cmc
in
sub
out
cmp
push
mov
xchg
mov
inc
xchg
iret
lea
mov
lods
xor
sbb
outsb
test
add
cltd
push
adc
fnstenv
int
scas
pop
sti
cli
add
pop
imul
lea
std
ficoml
mov
arpl
sbb
mov
sbb
and
push
jno
stc
in
sub
cmpsl
sub
ret
xchg
sti
cmp
push
clc
movsl
test
sbb
mov
shrl
add
imul
pop
ret
addr16
adcb
lret
add
scas
or
or
xchg
jmp
ja
mov
pop
in
test
inc
adc
scas
ljmp
aad
push
and
call
test
ds
mov
xlat
mov
mov
jmp
adc
test
cmp
in
es
mov
push
jae
sub
imul
inc
adc
xchg
frndint
nop
xchg
loopne
sbb
in
push
mov
mov
mov
lock
cmp
fwait
mov
fcomps
sub
lea
xchg
ja
push
in
adc
push
adc
push
out
bnd
or
sti
adc
out
push
or
xchg
add
call
es
fisttps
pop
imul
mov
jl
shrl
adc
dec
movsl
cmp
lods
mov
hlt
jnp
pop
imul
mov
dec
hlt
inc
repnz
sbb
ret
push
cltd
jl
subb
das
lds
mov
data16
ljmp
test
cmp
mov
jg
and
add
push
out
mov
call
pop
mov
mull
std
jle
mov
mov
xlat
cmp
push
in
pop
gs
pusha
push
pushf
fsubrs
cmc
int3
pop
push
imul
bnd
std
sbb
insb
cmc
adc
lcall
fscale
imul
mov
mov
sbb
pop
in
adc
mov
into
dec
ss
and
ret
jmp
add
cmpsb
add
or
out
stos
xchg
shl
jbe
jae
xchg
cmpsl
mov
pop
in
jge
sub
pop
sub
mov
ret
mov
sub
sub
jl
xchg
pop
repz
enter
dec
add
cmp
out
and
fnstenv
sbb
and
adc
xchg
push
sub
sahf
mov
cmc
pop
cmc
pop
xor
adc
adc
jae
gs
xchg
xor
xchg
stc
add
jb
sbb
in
notb
imul
out
shll
das
fdivp
add
sbb
pop
sub
add
jns
jle
pushf
fistl
aam
sub
cmp
and
fistps
clc
addr16
xchg
jae
cmp
adc
in
ret
add
ret
aad
xchg
inc
jmp
xchg
push
mov
push
jle
jbe
mov
cmp
cmp
loopne
and
mov
push
icebp
clc
and
dec
push
mov
icebp
lret
rcll
aad
clc
jmp
mov
outsb
jbe
aaa
repnz
scas
xlat
popa
insb
in
sub
xor
and
inc
sarl
mov
mov
dec
push
xchg
daa
and
in
je
repnz
push
lahf
jo
add
test
or
out
call
cs
mov
inc
mov
int
mov
and
xchg
cld
push
movsl
fwait
repz
mov
repz
loop
xchg
je
or
push
in
enter
dec
xlat
scas
sub
sub
int
cmp
ret
jmp
clc
dec
sbb
arpl
jne
repz
mov
stos
mov
cmp
mov
pop
cmp
sbb
ljmp
mov
xlat
sub
lret
fwait
mov
cmovne
mov
cmp
ljmp
mov
push
fwait
ret
xchg
push
mov
jge
jp
ljmp
inc
pusha
clc
cmc
jo
icebp
and
out
ret
xor
les
rorb
mov
sbb
icebp
jns
inc
repz
push
add
lcall
test
lahf
mov
out
xorb
sub
imul
push
dec
dec
loop
mov
aad
scas
xchg
sbb
mov
out
test
cld
jnp
popf
pop
or
xor
push
aad
mov
mov
mov
rclb
imul
jecxz
pushf
mov
cmp
dec
jns
mov
push
movsl
repz
in
pusha
sub
sub
adc
or
add
lcall
pop
in
out
ljmp
lock
push
lret
ja
jle
xchg
and
cmp
or
sbb
push
out
pop
push
movsb
cld
xlat
and
push
cli
in
movl
cmp
ljmp
cld
pop
sbb
or
mov
repnz
mov
leave
mov
jle
jnp
adc
fwait
gs
push
pop
aas
sub
cmp
sub
xor
push
sub
add
ljmp
dec
imul
test
jmp
lods
adc
filds
hlt
je
or
movsb
outsl
shll
cld
ja
pop
loopne
dec
mov
push
inc
lcall
leave
sub
sbb
cmp
in
rolb
es
das
cmp
push
cs
mov
jp
mov
in
into
inc
and
xchg
or
dec
dec
xchg
mov
push
and
adc
sbb
popa
push
js
enter
lds
fwait
sub
repz
add
jge
sar
out
int
or
stc
cmp
push
jno
test
pusha
clc
nop
mov
sahf
loope
xor
fdivrs
movsb
mov
es
sahf
pop
cmpsb
pushf
cmp
mov
lods
adcl
push
adc
std
inc
dec
loopne
shrb
outsb
sub
movsl
push
xchg
cpuid
cmpsb
and
inc
jmp
lea
push
or
pop
movntps
dec
sbb
and
sub
dec
or
cmp
cmp
xchg
pop
pop
xorb
jg
scas
cmpl
inc
pop
pop
pushf
jp
aad
es
jno
cmp
sbb
pop
sbb
pop
adc
jecxz
cmp
mov
test
pop
fnop
add
adc
sub
jno
shlb
add
cmpsl
or
xor
adc
add
fxam
sub
push
jmp
in
out
insl
cmpsl
sti
adc
outsl
cmp
cmpsl
pop
sahf
sbb
pop
cmp
xchg
mov
mov
mov
dec
pushf
addr16
sub
jl
jmp
xor
sbb
es
lret
mov
lock
or
loope
adc
int
fcompl
or
sub
stos
sbb
in
sbb
clc
fs
ja
in
adc
mov
sbb
and
sub
in
xchg
ja
cmp
ret
cwtl
cwtl
jno
movsl
test
adc
out
mov
adc
dec
mov
push
fadds
cmp
xchg
ljmp
mov
cmp
adc
push
dec
adc
lcall
cmp
out
mov
fstl
pop
jne
shl
loop
aad
callw
cmpsb
and
pop
fistpl
inc
mov
inc
cmp
cmp
jge
scas
popf
add
hlt
insl
stc
clc
addr16
shrb
mov
outsb
mov
faddp
mov
sub
popf
imul
xchg
sar
mov
rcrl
fwait
xlat
in
cmp
mov
lcall
jmp
or
mov
loop
jns
xor
lea
sub
leave
add
sub
push
jmp
mov
cmp
push
mov
mov
jp
push
pop
insl
sub
mov
sbb
roll
lock
int3
xor
loope
push
mov
test
inc
in
push
fcompl
test
call
mov
call
icebp
notl
cmc
or
adc
stos
push
and
std
sbb
xchg
inc
add
jb
sbb
adc
ds
cmc
fbstp
and
repnz
sub
jecxz
pusha
pop
mov
push
ljmp
gs
xor
out
loope
sbb
jbe
popw
mov
cmpsb
jecxz
add
cmp
out
adc
inc
push
push
push
lcall
movsb
mov
arpl
popaw
xchg
cld
mov
outsb
lock
stc
pop
icebp
push
push
xor
lcall
test
jno
enter
loop
add
add
shl
adc
lcall
scas
mov
cmc
ffreep
lods
in
mov
cmp
jmpw
push
fsubrp
cmpsb
aam
repnz
dec
pushf
mov
dec
and
mov
dec
bound
faddp
aas
orb
mov
mov
subb
push
call
insl
outsl
push
std
ljmp
add
sbb
les
outsb
insb
loopne
insl
nop
fwait
xchg
pop
inc
pop
jnp
sbb
lods
push
pop
jmp
fildl
pushf
testb
sub
dec
icebp
cmpsl
push
dec
or
out
push
imul
mov
sahf
pushf
adc
sub
xchg
jge
sub
imul
mov
inc
rcr
aad
sub
push
jg
loop
mov
leave
dec
xor
fnstsw
lods
push
xor
fistpll
aas
call
cltd
data16
addr16
arpl
xchg
adc
lret
add
stos
adc
stc
fistl
cmpsl
mov
mov
mov
push
repnz
sbb
stc
push
ljmp
pushf
add
mov
imul
or
les
lret
movsb
int
and
push
das
add
std
push
add
push
xor
cli
pop
sub
mov
dec
xchg
xor
inc
xchg
repnz
rolb
push
lcall
jecxz
xlat
scas
mov
push
test
out
jbe
shlb
inc
lret
test
inc
out
ljmp
imul
or
push
add
jmp
and
inc
imul
fiadds
xor
jbe
cli
or
push
push
and
jg
or
inc
inc
test
sbb
and
xor
in
imul
in
dec
sub
xorb
jle
push
dec
cmpsb
mov
jns
cwtl
ds
repnz
jno
andb
or
dec
cwtl
mov
jle
mov
mov
das
cmp
mov
jno
cmp
fildl
mov
cmc
jne
mov
jns
mov
xchg
fisubl
sbb
icebp
fisubrs
jge
mov
mov
idiv
push
insl
xchg
dec
leave
aad
in
xor
adc
sub
leave
mov
xchg
or
xor
jmp
shr
xchg
dec
sti
adc
js
mov
sub
ss
xchg
mov
mov
data16
cmp
push
cmp
or
or
roll
fwait
aas
aaa
pop
or
imul
out
sub
test
mov
imul
arpl
int
hlt
dec
pushf
std
pushf
push
dec
sub
mov
gs
mov
push
xchg
lret
jmp
loop
push
loope
xchg
ret
orb
mov
adc
out
push
call
xorb
hlt
imul
gs
push
xor
pop
add
lret
pushl
nop
ret
pop
enter
xchg
mov
sub
xor
cmp
enter
mov
aad
sub
ljmp
xchg
push
or
dec
imul
push
push
xor
ja
cmp
test
cmp
cmpsb
mov
jns
rol
or
scas
out
jnp
ja
arpl
outsl
rorb
xchg
and
and
repnz
fstl
xchg
addr16
test
repnz
add
or
ljmp
mov
lea
fists
fs
inc
pusha
xchg
cmp
mov
shl
adc
mov
cs
jecxz
movsl
std
mov
das
lock
mov
jb
and
adc
jae
pop
aad
dec
xchg
adc
sbb
insb
lods
lret
orb
sub
fwait
add
orb
fdivs
mov
push
sbb
flds
cmp
and
out
je
xorl
lea
mov
jle
subb
cmp
in
loope
xchg
pop
xchg
sbb
pusha
inc
xchg
jb
push
pusha
pop
out
ljmp
mov
or
clc
popf
loope
fildll
call
mov
xchg
out
jecxz
imul
or
jg
xor
sahf
cmp
shll
xchg
fisubrs
fcmovnu
inc
repnz
pop
in
stos
dec
jb
mov
test
inc
inc
jno
enter
pop
daa
mov
inc
pop
mov
mov
icebp
pop
out
aam
adc
and
jp
jle
bound
imul
mov
push
mov
pop
inc
popa
mov
in
push
pop
leave
jle
insb
mov
daa
dec
pop
cmp
push
outsl
sub
inc
in
or
or
adc
into
les
out
fcompl
ret
xchg
lret
leave
repnz
cli
push
pop
int
pusha
pop
leave
mov
lds
outsw
roll
pop
cmpsb
addr16
test
mov
mov
ret
mov
push
jge
jmp
or
lock
cmpsl
incb
dec
mov
repz
rclb
mov
adc
push
test
add
or
adcb
or
andl
cmp
pop
pop
or
mov
inc
inc
adc
dec
les
out
fmull
pushf
pop
inc
lahf
std
push
jno
cmpsb
dec
jmp
std
push
pop
mov
pop
insb
paddw
mov
jbe
rcrl
add
mul
xor
ret
in
inc
cs
icebp
dec
inc
lds
in
loope
test
add
int3
mov
in
xor
sbb
rcrl
mov
jg
psubq
and
stc
cmc
in
test
fcoml
pop
dec
sbb
dec
outsl
mov
sub
fbld
out
in
or
push
dec
mov
lret
loopne
and
in
ret
mov
out
push
inc
xor
jb
shlb
test
repz
add
xor
shr
mov
adc
je
adc
sbb
adc
push
inc
jl
mov
test
dec
push
sbb
lea
subps
push
ret
fdivr
cmp
insb
adc
xchg
adc
jmp
mov
stos
push
inc
mov
mov
push
rolb
adc
arpl
xor
mov
aam
out
lret
sub
xor
bound
stc
and
mov
nop
aam
lods
lds
or
sbb
push
xchg
inc
cmpsb
scas
xor
gs
sbb
mov
ret
cmp
lret
fsts
arpl
inc
fldcw
mov
xchg
nop
mov
ror
cmp
jo
adc
aad
into
xchg
shr
in
or
ret
adc
out
into
lcall
mov
int
jg
cmpsl
imull
out
fcoms
loopne
and
lcall
inc
cmp
mov
mov
scas
cmpsl
clts
in
mov
add
cld
inc
inc
add
xor
add
mov
xchg
out
ret
mov
cld
push
mov
std
inc
dec
mov
jns
imul
push
loopne
insl
jno
idivl
inc
xor
int
repz
ret
into
mov
into
popa
lcall
imul
push
mov
mov
add
mov
jmp
push
or
sarb
dec
out
push
mov
adcl
es
gs
pop
xor
andl
test
push
and
scas
dec
pop
inc
fs
sub
imul
push
inc
xchg
add
jecxz
dec
xchg
pushf
jp
mov
adc
pop
dec
in
test
xchg
xchg
pop
fcmovnb
ds
scas
xor
leave
jecxz
pcmpgtw
inc
fidivrs
inc
adc
mov
xor
pop
jle
in
and
into
jp
jg
je
hlt
inc
xchg
movsb
repz
mov
leave
inc
out
push
mov
ds
mov
scas
ret
addr16
mov
into
xchg
ds
dec
add
cmp
movsb
push
lcall
sbb
mov
mov
ret
andb
orb
jg
lods
push
mov
pop
into
sub
out
in
add
jne
push
jno
mov
jnp
repnz
push
add
dec
nop
jmp
push
pusha
jecxz
repz
xlat
stos
dec
and
dec
rclb
push
jae
add
out
je
add
xor
dec
movsl
lea
loopne
leave
aaa
cmc
scas
pop
adc
shl
push
std
mov
xchg
mov
adc
or
xchg
loop
sub
lret
push
jae
jae
int
dec
dec
lea
cmp
mov
and
orl
xchg
jne
jmp
xchg
jbe
jb
adc
bound
test
in
inc
sti
xorl
js
lock
lahf
mov
sbb
stc
cwtl
call
xor
mov
pop
xorl
outsb
push
mov
or
andl
pushf
cld
scas
mov
stos
or
inc
sbb
xchg
std
sbb
iret
in
das
jl
int
xchg
jb
nop
repnz
rorb
nop
test
addr16
cmp
jb
clc
cmp
jge
xchg
lahf
stos
filds
lods
iret
mov
mov
mov
aam
mov
lock
sbb
jae
or
insb
into
out
sbb
in
ljmp
sarl
mov
dec
stc
pop
or
inc
push
ss
pop
sti
pop
mov
mov
aas
jno
add
or
pop
jno
add
or
xorb
mov
add
add
add
add
add
add
add
add
add
jno
add
add
add
jno
add
add
add
add
addb
add
in
jo
add
jo
add
jo
add
or
add
or
and
or
adc
add
or
push
jno
add
or
sub
add
or
xor
or
inc
jo
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
xor
aas
adc
xor
sub
cmp
add
add
fisubl
sbb
data16
add
inc
pop
outsl
add
es
rolb
xchg
push
pop
adc
pop
fsubrl
sahf
incl
lock
xor
xchg
mov
imul
ja
add
imul
fldenv
or
int3
lret
dec
dec
add
xor
int
add
push
or
das
cmpsb
cmp
js
sbb
mov
movsl
sub
push
jo
xchg
sbb
stos
test
xor
push
push
jecxz
clc
and
and
fs
rcll
mov
sbb
mov
jp
setle
xor
jg
push
bound
push
or
sub
fadd
sbb
rcrb
mov
add
push
sbb
insb
adc
mov
pop
rolb
xor
xlat
pop
ljmp
insb
mov
repz
mov
and
push
sbb
ss
xchg
in
cmpsb
adc
push
in
sbb
mov
mov
dec
aas
ret
add
cltd
pop
sub
nop
pop
cmovo
std
adc
outsb
cld
ljmp
sbb
pop
add
mov
push
in
sub
or
sarl
push
int
clc
sub
sbb
ror
push
add
jb
js
push
pop
testl
icebp
mov
push
and
or
add
stos
iret
pop
cmp
loop
adc
and
sub
and
jle
xchg
repz
adc
xor
jecxz
jo
test
push
and
insl
push
out
jb
fisubl
push
rclb
ret
bound
mov
mov
jge
into
pop
lods
adcb
inc
mov
mov
fwait
inc
lods
pop
daa
or
pop
add
jg
js
addl
push
sti
push
pop
loop
pop
pop
imul
xchg
mov
bound
xor
jmp
notb
push
cli
int
stos
xor
and
and
add
xchg
cli
dec
cmp
mov
and
aaa
pop
push
jae
push
imul
lds
xchg
out
jnp
add
mov
cwtl
mov
repz
xor
cmp
cli
xchg
mov
addl
je
or
in
pop
nopl
jo
dec
adc
aas
movsb
add
mov
inc
xlat
fimuls
adc
mov
sahf
lret
or
push
add
and
push
add
sbb
inc
sbb
das
sbb
or
add
xor
xor
xor
aaa
add
cmp
inc
add
dec
add
pop
add
outsl
add
ja
jge
push
test
cwtl
xchg
mov
les
insl
mov
cmp
or
mov
leave
or
or
fimuls
cmpsb
loopne
mov
or
or
or
testl
stc
or
or
or
or
or
fstps
in
nop
add
mov
or
andb
arpl
andb
pop
addl
mov
add
xchg
add
and
sub
aaa
xor
nop
xor
and
rcrb
pop
or
add
or
add
jo
sarb
pusha
add
les
add
outsb
jns
sub
or
and
shrb
push
cmc
mov
or
inc
or
jnp
and
and
and
pop
and
inc
ljmp
addr16
or
inc
popf
adc
dec
adc
daa
mov
or
ss
or
call
adc
sti
add
mov
test
out
cmp
repz
data16
inc
or
mov
push
sub
adc
inc
adc
xor
or
lods
add
ds
or
lret
lret
dec
dec
sarb
int
mov
sbb
outsb
xor
mov
mov
dec
andl
cmpsb
jle
scas
cmpsl
lret
shrl
and
test
jnp
lcall
stos
xchg
mov
fidivrs
xor
imul
mov
enter
xchg
add
add
add
loope
or
or
lahf
adc
and
mov
sbb
and
and
fisubs
scas
loopne
xchg
out
and
jne
subb
subb
subb
dec
cli
andb
push
cld
orb
stos
incb
inc
or
inc
or
adc
adc
pop
inc
pop
mov
xor
cs
sbb
inc
and
inc
and
inc
sub
sub
inc
xor
cmp
mov
or
mov
sbb
and
and
mov
pusha
into
and
roll
inc
aad
mov
and
or
cmpl
lahf
scas
push
inc
push
adc
sub
nop
dec
push
js
test
mov
leave
sub
fiadds
out
dec
out
add
lock
hlt
add
negb
idivl
rcrb
cli
cs
sti
and
std
jns
incb
xchg
mov
pop
dec
xchg
jp
lock
lret
and
fildl
ja
jg
adc
jno
out
inc
add
adc
sbb
repz
jno
mov
insb
les
or
mov
pop
adc
inc
sahf
add
mov
icebp
mov
cwtl
in
ljmp
sbb
iret
das
out
cwtl
les
mov
cmp
inc
cmp
or
dec
daa
inc
dec
inc
dec
fs
dec
pop
inc
dec
jne
push
mov
pop
xchg
mov
jne
inc
sbbl
les
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
mov
push
daa
push
mov
inc
filds
inc
sub
inc
sub
mov
adcl
ret
mov
sbb
dec
enter
js
adc
adc
pop
and
dec
xor
push
xor
or
in
and
and
pop
and
pop
and
daa
pop
and
bound
push
adc
mov
arpl
jne
btr
cmp
subl
jo
sarb
mov
aad
stos
fwait
into
mov
loope
pusha
nop
je
pop
lods
in
sbb
add
cli
sub
adcb
mov
xor
jge
add
push
add
addb
or
mov
jo
inc
shlb
nop
or
xor
adc
je
mov
and
scas
repz
ja
andb
sub
test
dec
fsts
mov
shrl
aad
mov
ror
out
dec
mov
add
push
popa
xor
sbb
cltd
inc
dec
nop
mov
fidivs
jecxz
cmpsl
cmp
add
sbb
xlat
mov
stos
sbb
mov
or
cmp
push
aad
add
int
rep
add
add
in
pushf
mov
adc
dec
jp
jle
inc
loopne
add
push
outsb
ja
push
mov
aaa
ss
sbb
sub
pop
add
mov
mov
clc
add
addl
push
jp
rorl
jl
adc
aas
pop
lret
add
sarl
mov
shrb
lea
bound
pop
loop
rcll
or
or
outsb
dec
dec
in
dec
push
sbb
inc
and
lods
pop
mov
push
scas
or
push
out
inc
daa
xchg
push
movsb
aam
fcompl
push
add
stc
ljmp
or
sub
add
add
iret
inc
sbb
mov
push
mov
add
popf
cmp
lea
xchg
fadds
lahf
and
and
xor
call
shll
aas
sbbb
jge
xchg
ret
or
pop
mov
sbb
push
or
outsb
jmp
jo
add
sub
push
xor
and
push
and
imul
test
xchg
pop
add
jns
and
jmp
mov
rorl
outsl
mov
sub
push
es
pop
lea
cmc
and
mov
ds
mov
push
aam
and
add
pop
aas
mov
loop
push
jmp
adc
dec
fsubrl
sub
rolb
add
mov
inc
sbb
cmp
push
sub
inc
pop
mov
mov
add
lahf
cltd
out
int3
shll
rol
in
popa
or
cmpsb
arpl
mov
and
lcall
or
or
dec
je
xchg
push
loop
int
or
jae
jecxz
and
addr16
les
pop
jge
and
out
nop
add
xchg
add
pushf
push
pop
add
add
stos
mov
cmc
mov
inc
test
adc
inc
add
and
dec
xchg
mull
clc
add
xchg
and
add
push
bnd
roll
add
xor
sbb
shll
stos
andnps
pushf
mov
cmp
test
loopne
mov
or
call
enter
push
adc
outsb
add
icebp
mov
loop
mov
add
jae
sti
add
insb
rol
pop
stos
and
dec
and
arpl
or
jbe
mov
xchg
inc
rclb
mov
lods
mov
loope
add
adc
popf
and
and
dec
jp
orb
mov
imul
and
jae
xchg
sbb
test
lret
arpl
adc
nop
test
add
inc
or
insl
cs
add
push
mov
je
scas
push
jbe
dec
sahf
add
mov
jae
pop
adc
sbb
jnp
dec
insb
ret
fistps
jmp
test
cmp
dec
inc
sbb
mov
push
lret
mov
add
mov
imul
je
nop
xchg
xchg
mov
add
push
shrb
mov
and
and
ret
inc
std
xor
and
add
jmp
stc
add
add
rcl
mov
sub
clc
sbb
das
or
push
mov
call
cs
cmpsb
test
add
in
bnd
daa
pop
mov
arpl
mov
aaa
xor
and
movsl
nop
add
inc
movsb
cld
test
adc
sbb
add
cmp
movsl
pusha
fildll
jecxz
mov
or
push
xchg
mov
pushf
inc
sahf
adc
pop
adcl
cltd
push
add
adc
loop
fs
xor
xchg
pop
add
wbinvd
orl
cltd
dec
cmc
and
inc
popf
jb
pushl
adc
push
mov
inc
pop
enter
fiadds
pop
mov
or
jno
sbb
mov
mov
in
or
add
or
andb
jmp
push
adc
jle
insb
out
cmc
rcl
in
push
add
and
sbb
int
js
xor
mov
rol
mov
loop
xchg
sub
sbb
and
mov
sbbl
fmuls
add
lds
rolb
pushf
xor
pop
mov
mov
into
dec
sbb
loope
filds
or
mov
add
fdivs
mov
mov
add
out
cmp
movl
and
sti
in
cmpsb
sub
lahf
hlt
add
mov
out
xchg
sbb
and
add
enter
add
jmp
mov
nop
jo
jg
sub
mov
and
mov
in
fs
adc
adc
xor
aam
jo
add
inc
fs
bndldx
push
pushf
pop
dec
cmpb
or
orb
mov
sub
std
pushf
jno
inc
inc
imul
jae
fdiv
cltd
movsb
bound
sub
push
test
dec
jle
movsb
in
and
sub
cmpps
sbb
adc
scas
cmp
int
mov
xchg
cltd
xchg
and
sbbl
notl
pop
xchg
bound
ja
and
loopne
dec
adc
xor
es
xor
js
sbb
sbb
mov
xchg
jmp
mov
mov
xor
cmp
add
push
add
addr16
xchg
pushf
sbb
call
inc
adc
scas
xchg
cwtl
idiv
test
jae
and
aam
xorb
lods
cli
sub
test
xor
jle
xchg
imul
cli
or
cmp
xchg
mov
add
pushf
sbb
add
cs
xlat
lret
inc
loope
inc
stos
ss
inc
adc
dec
push
lret
mov
clc
ja
dec
lret
icebp
bound
cld
cltd
mov
cli
sbb
dec
add
mov
cmpsl
mov
test
and
popa
jg
scas
add
movsb
mov
testl
push
mov
inc
into
dec
and
xchg
in
daa
jb
add
nop
jecxz
out
add
mov
roll
outsb
fwait
and
inc
pop
icebp
loopne
fcmovnu
push
mov
movd
xor
adc
adc
call
sbb
jo
mov
sub
add
add
xlat
out
add
jnp
cmp
pusha
lea
pop
into
hlt
cmp
fs
add
mov
ljmp
cmp
or
xchg
and
xchg
cmc
movsl
push
in
nop
shlb
addr16
jns
sbbl
mov
scas
bound
mov
push
sahf
mov
dec
popf
cmpl
mov
in
and
mov
lds
popa
iret
sub
hlt
pop
mov
pop
mov
mov
push
mov
dec
pop
cmp
mov
lock
jae
insb
jae
cmp
sbb
scas
sub
ret
sbb
push
lahf
push
test
add
sbb
jbe
loop
scas
cli
enter
dec
or
outsb
xchg
pop
xchg
dec
aam
or
push
inc
roll
lds
push
push
maskmovq
testl
dec
daa
cmpsb
or
or
pop
jmp
nop
mov
add
adc
mov
rclb
inc
push
inc
add
push
and
sub
mov
xchg
add
sbb
dec
mov
sbb
imul
cltd
sbb
cmpsb
push
fistl
ret
sub
mov
pop
xor
mov
xchg
xchg
add
ljmp
out
add
pusha
inc
jno
xor
lea
cmp
daa
push
push
mov
jmp
add
jo
rolb
pop
push
sub
mov
pop
pop
push
imul
adc
les
mov
dec
call
or
mov
shrl
mov
pop
dec
cmp
add
test
or
setae
sub
pop
loope
jbe
sub
cld
mov
cmp
push
and
and
xchg
jae
es
push
and
xchg
and
shl
inc
call
jl
dec
addl
and
sbb
pop
pop
dec
push
dec
jecxz
ds
cmp
mov
sub
lds
add
in
in
or
into
xchg
mov
push
inc
notl
mov
or
mov
adc
cmc
jmp
adc
imul
rolb
inc
sbb
inc
inc
setno
int3
pop
cmc
mov
addl
rorl
mov
add
leave
rorl
pop
neg
test
pop
add
iret
mov
outsl
push
adc
hlt
push
add
mov
andl
jl
add
out
dec
mov
iret
loop
or
imul
fldcw
mov
mov
xchg
not
fiaddl
out
xchg
call
add
rorb
add
fdiv
add
repnz
imul
loope
shlb
inc
sub
mov
add
push
call
dec
sub
cld
xorb
jnp
cs
jo
mov
add
and
inc
jae
ljmp
add
in
xor
and
push
into
adc
not
icebp
enter
imul
gs
pushf
nop
adc
adc
out
call
inc
and
pop
adc
int3
jmp
mov
add
loop
sti
neg
out
and
add
or
lock
dec
mov
lret
and
jae
loop
stos
inc
jns
sub
push
int
add
jge
dec
testb
icebp
pop
xor
mov
mov
clc
add
xchg
rolb
push
cmp
not
insl
jl
scas
push
repz
sub
pop
lods
fdivrs
inc
or
push
dec
lret
mov
shlb
jns
xor
adc
out
mov
and
pusha
mov
bound
in
fs
push
xor
jbe
in
mov
addl
mov
cwtl
and
out
test
loopne
mov
adc
clc
add
ret
dec
xchg
roll
mov
jne
jmp
lcall
jb
and
mov
lock
and
ret
and
mov
fnstcw
jle
mov
mov
add
push
aam
into
add
mov
movsl
aad
inc
dec
lret
mov
lds
add
clc
and
cwtl
ljmp
xchg
dec
popf
sarl
out
shll
pop
daa
inc
test
lds
sbb
add
out
push
lds
ret
fcoms
test
inc
pop
mov
stos
lcall
stos
or
inc
jl
adc
ljmp
jnp
jns
sbb
push
sub
mov
fisubrs
testb
dec
dec
adc
daa
and
xchg
xchg
fsubl
test
sub
sti
pop
add
pop
pop
xor
cmpsb
mov
inc
fisubrl
and
mov
mov
push
test
not
push
pop
inc
inc
popa
and
scas
jnp
sbb
fldl
jne
cli
pusha
out
xor
inc
filds
mov
outsb
xchg
and
es
gs
ret
jg
int3
push
cmp
clc
add
test
andb
mov
push
icebp
outsl
pop
or
push
pop
pop
add
push
mov
bound
neg
mov
sbb
add
xchg
pop
orb
jl
or
adc
add
fwait
icebp
fs
mov
pop
xor
or
dec
sbb
and
movzwl
push
aad
xchg
or
push
neg
sbb
mov
jnp
inc
pop
jno
das
adc
xchg
insb
xor
pop
std
in
pop
push
pusha
add
or
and
add
cld
xor
jns
sub
setae
add
inc
inc
jne
mov
mov
test
call
xchg
xlat
shlb
dec
test
dec
andl
incl
into
sub
adc
sbb
mov
xchg
adc
and
dec
add
push
jno
and
out
movsl
movntps
push
rcrb
ja
dec
push
hlt
sub
arpl
clc
out
dec
mov
jns
pop
pop
stos
jl
fildl
pop
stos
fs
not
and
xchg
daa
mov
add
fsub
push
xchg
mov
mov
sbb
xchg
add
or
ret
cmpb
push
mov
cmpsb
xchg
add
addl
push
testl
das
inc
push
movsb
fadds
ds
pop
mov
jg
imul
ds
mov
sub
rolb
popa
sbb
in
fldcw
push
test
pushf
adc
cmp
push
nopl
mov
mov
pop
pop
pop
iret
push
ret
cmp
cmp
es
sub
xorl
sahf
in
sub
pop
inc
push
mov
mull
fdivl
adc
mov
mov
leave
stos
cmp
ss
or
push
inc
rcl
and
push
pop
mov
sub
sahf
jmp
inc
dec
shll
sub
mov
aad
orl
and
test
mov
popf
adc
and
dec
bound
pusha
daa
xchg
pop
or
or
sahf
pusha
stc
inc
sub
dec
cmp
mov
mov
movsl
out
add
pop
ds
push
pop
cmp
int
cmpsb
xchg
or
aad
mull
push
jnp
cwtl
mov
lds
adc
insl
xor
aam
cwtl
mov
cmp
sbb
movl
jmp
xorb
ror
dec
or
js
adc
adc
inc
and
sbb
lods
sbb
test
je
std
or
inc
lea
push
push
push
xchg
cmc
cmpsb
inc
adc
push
rclb
cmpl
and
pusha
pop
xchg
and
pusha
sbb
xchg
mov
mov
mov
mov
repz
mov
outsl
dec
gs
or
fisubs
xchg
lcall
ja
jns
jo
cwtl
jg
fadds
roll
nop
sbb
sbb
mov
adc
sti
shll
mov
xchg
stos
arpl
push
in
cmpsb
filds
test
jo
les
inc
adc
loope
and
shll
sub
jno
test
mov
sub
jl
jge
mov
bswap
add
decb
xor
xchg
jo
subl
neg
push
lds
cwtl
ret
fistpll
jb
add
sbb
push
cmpb
pop
mov
out
mov
mov
neg
and
loopne
xor
stc
push
add
lret
jnp
sub
add
xchg
mov
sub
and
mov
adc
add
int3
xor
xchg
adc
pop
mov
sub
xor
jae
mov
hlt
dec
pop
not
test
xchg
lcall
bnd
dec
xchg
fidivl
add
or
push
neg
inc
and
pop
or
xchg
ret
popf
icebp
cmp
pop
sbb
fwait
inc
sub
add
add
push
pop
inc
cmp
cltd
sub
leave
inc
mov
jmp
enter
in
mov
leave
nop
ss
ret
shl
add
push
test
arpl
faddl
jle
sub
sbb
pop
jo
nop
mov
dec
push
adc
dec
call
inc
cwtl
in
mov
or
test
add
jmp
roll
out
push
jge
test
cmp
aad
sub
xchg
mov
es
andl
pop
add
or
rorl
leave
mov
in
mov
pop
gs
xchg
daa
inc
mov
mov
add
loope
mov
imul
sbb
xchg
pcmpeqb
pop
stos
sub
dec
pop
xchg
push
inc
test
lret
pushl
out
dec
jno
pop
fcoms
sub
pop
push
pop
push
mov
inc
pop
es
cmpsl
out
jmp
test
aaa
jle
pop
inc
out
bound
stos
push
not
push
test
sub
not
sbb
sbbb
push
loope
inc
and
xor
push
stos
cmc
xor
popa
mov
sbb
cwtl
stos
sub
cwtl
fnstenv
sub
cs
push
sub
add
test
sub
shlb
shl
push
or
or
ret
add
lea
addr16
and
imull
loop
in
push
dec
dec
inc
jle
or
dec
pop
fsubl
mov
adc
push
mov
fisubrl
pop
sub
add
rorl
adc
dec
mov
or
pop
push
pop
addb
call
xchg
in
dec
jge
idivl
and
xchg
xor
push
dec
adc
pop
cmc
cmpsl
mov
mov
dec
jecxz
add
int
sub
mov
mov
sbb
adc
add
inc
fcmovnbe
shrl
fidivl
sbb
enter
pusha
addb
negl
push
fld
pushf
inc
cwtl
dec
mov
xorb
bound
mov
pusha
add
test
out
movsb
arpl
or
cmpsl
push
mov
out
gs
andl
mov
lahf
dec
push
popf
fs
notb
dec
insb
pop
sub
sbbb
or
ret
je
cmp
sub
movsl
adc
sbb
inc
jbe
out
inc
xor
lret
lret
rolb
mov
movsb
daa
add
lods
mov
xchg
sbb
mov
pop
jae
add
mov
subl
int
xchg
mov
add
popa
sub
mov
inc
loopne
xchg
cmpsb
hlt
adc
xor
neg
movsb
push
in
in
shlb
nop
add
aad
mov
das
clc
movsl
pop
cwtl
jge
jmp
in
push
xchg
pop
int3
mov
and
rorl
cmp
add
push
push
popl
mov
or
mov
cmc
ror
jo
ja
inc
mov
mov
repnz
cmpsb
outsb
pop
push
xor
into
inc
filds
cmp
or
inc
enter
arpl
inc
inc
cwtl
dec
out
add
shlb
test
pop
icebp
daa
push
push
add
add
mov
push
movsl
xor
lret
inc
xor
repnz
data16
inc
mov
push
fnstenv
or
test
add
inc
dec
jbe
cs
mov
arpl
mov
fnstenv
adc
xchg
jmp
inc
inc
test
mov
adc
movb
mov
test
jb
insb
or
xlat
movsl
pop
andb
and
dec
sub
jecxz
insb
addr16
or
in
dec
leave
adcl
xor
hlt
nop
aaa
jb
pop
jo
dec
push
add
push
loop
jmp
ret
clc
cwtl
mov
add
pop
mov
sbb
dec
dec
and
add
inc
xor
stc
push
adc
inc
jns
sub
dec
push
cmp
and
ss
or
rorb
sbb
jge
jno
or
adc
test
mov
push
shl
outsb
push
adc
mov
xor
push
mov
pop
data16
add
add
sub
mov
cmp
aam
mov
pop
adc
incb
roll
test
pusha
sbb
xchg
or
test
and
fsubrl
shll
jb
shrl
inc
lret
rclb
xchg
or
mov
lahf
mov
fisubrl
shll
jns
adc
add
ret
adc
and
fstp
loop
loop
inc
add
lds
loop
int3
cld
fsubrl
inc
insl
les
outsl
loope
xchg
movsl
xor
mov
xor
xor
xor
loope
adc
lret
pop
mov
sbb
mov
int
or
stos
xor
mov
loop
add
sbb
and
mov
dec
push
dec
roll
dec
outsl
pop
adc
or
push
or
int3
cmpsl
pusha
jecxz
insl
inc
dec
notl
andb
sbbb
lds
mov
paddd
xor
and
lcall
imul
pop
add
mov
aaa
ret
pusha
pop
fs
pop
pop
test
or
cmp
pushf
push
pop
sub
sbbl
adc
pop
pusha
inc
adc
test
sarl
into
pushl
inc
insb
test
aas
jp
and
add
xorb
push
pop
push
faddl
xchg
daa
add
dec
mov
xor
mov
mov
push
outsl
mov
and
adc
mov
xchg
push
sbbl
inc
jo
ljmp
ret
rcl
xchg
or
or
push
or
pop
cmp
cs
xchg
rcll
mov
cmpsb
cwtl
dec
jmp
sti
sbb
test
fildll
dec
std
and
gs
lret
in
sub
les
leave
push
pop
pop
not
out
ficoml
xor
pop
add
and
push
mul
ret
pop
inc
add
jl
outsb
jmp
dec
flds
add
fiaddl
jle
dec
cmp
bswap
shl
repz
xor
popa
push
or
xchg
cwtl
jb
push
inc
lock
je
stos
adc
mov
mov
push
mov
pop
jae
into
xlat
sbb
adc
addr16
push
cmp
pop
pop
mov
sub
add
leave
jb
lcall
roll
xchg
adc
dec
addr16
call
or
aas
loop
jle
or
cmp
xchg
rol
sub
sbb
pop
pusha
mov
je
out
mov
xchg
xor
jp
push
mov
xor
sub
icebp
or
inc
pop
xor
mov
cltd
stos
push
cmpsl
cld
cwtl
push
mov
dec
adc
imul
xlat
dec
inc
push
pop
lret
mov
adc
pop
decb
divl
test
ret
or
pusha
jns
xlat
mov
adc
loope
xor
xchg
rcpps
rcrb
rcrb
pop
lcall
adc
lock
adc
xlat
or
daa
movsb
testl
or
xor
dec
lock
add
pushf
es
cmp
jg
and
xor
test
pusha
or
dec
rol
rcrb
pop
mov
mov
or
mov
sahf
xor
or
push
push
xchg
movsb
mov
mov
or
clc
iret
or
daa
test
add
cli
sub
adc
aam
mull
ret
fldenv
mov
add
bound
repz
popa
and
cmc
lea
repz
shl
fxsave
add
test
push
shll
xor
mov
popa
int
leave
fdivrl
jae
sub
jmp
inc
dec
push
mov
and
add
in
and
in
adc
ljmp
jle
mov
pop
xor
jne
inc
scas
and
les
xor
enter
movsl
pop
inc
arpl
shlb
push
ret
push
neg
push
inc
sbb
sub
icebp
sbb
ror
jbe
mov
pop
rorl
ja
pop
xchg
mov
rclb
repnz
les
xor
test
jo
add
xor
sub
pop
add
xlat
inc
xor
cmp
aad
popa
fcoms
lret
xchg
xor
arpl
ss
push
sahf
mov
stc
loope
test
cmp
dec
mov
ljmp
add
jg
pop
or
mov
dec
nop
subb
push
add
or
adc
test
jg
push
adc
jnp
loope
mov
data16
xchg
or
adc
push
dec
mov
jl
cltd
sahf
add
add
add
jecxz
and
push
or
inc
inc
mov
shlb
mov
pop
and
fyl2xp1
mov
and
and
dec
dec
pusha
inc
xor
sub
fldenvs
cmpsb
test
cmp
push
subb
sti
iret
and
xor
roll
xchg
dec
scas
nop
add
cmp
jecxz
das
mov
xchg
push
pop
mov
dec
jmp
lock
decb
and
inc
roll
pop
js
icebp
add
add
mov
dec
sti
leave
xor
mov
out
add
push
inc
or
dec
or
mull
lahf
add
scas
outsl
push
push
fs
pop
cmp
scas
mov
gs
insl
sub
sbb
xchg
data16
dec
xchg
adc
dec
notb
mov
int3
pop
inc
or
sub
mov
and
xor
mov
pop
xor
test
icebp
adc
movsb
sbb
shl
fsubr
inc
push
pshufw
hlt
adc
sub
loope
inc
out
cwtl
mov
inc
xchg
cmp
insl
push
add
iret
subl
and
test
mov
mov
inc
jno
aas
lret
repz
jbe
ljmp
int3
addl
cmp
mov
add
outsl
mov
aam
and
bound
mov
push
pop
pop
jbe
out
sbb
cmp
push
adc
xchg
in
out
push
mov
sti
cmp
sub
fidivs
adc
mov
dec
xor
shrb
and
sarb
jns
xorb
cmp
dec
mov
sub
clc
jne
pop
ret
adc
mov
mov
clc
scas
stos
dec
out
aam
adc
sbb
icebp
xchg
jo
sahf
mov
lds
lcall
pop
imul
imul
aaa
sti
aas
lret
subb
aas
adc
xor
cmp
pusha
ret
stos
xchg
dec
fisttps
xchg
inc
out
and
ljmpw
test
jp
mov
movsb
adc
sbb
into
fsubr
inc
dec
sar
push
and
repnz
dec
jb
add
mov
leave
add
cmpsl
mov
xchg
sub
scas
jbe
stos
and
cwtl
repnz
mov
das
out
or
int
xlat
cmpb
cmpsb
scas
out
movsl
add
pop
movsb
cmc
rcrl
sbb
add
ja,pt
mov
jnp
cmp
cwtl
xchg
pop
outsb
cltd
and
andb
test
lahf
adc
fnstenv
stos
rorl
test
lods
inc
pop
leave
push
adc
jge
or
inc
add
pop
call
xchg
hlt
rolb
daa
not
cmpsl
pop
stc
xchg
cmp
data16
mov
inc
outsb
sub
xchg
add
cld
mov
sub
ret
dec
push
jmp
inc
lahf
dec
sbb
les
dec
imul
cwtl
jae
inc
fsubrl
lret
dec
jns
or
pop
push
sub
mov
mov
push
push
jp
fcoml
mov
mov
push
adc
inc
out
add
add
mov
and
sbb
push
cmpsb
sarl
fstl
mov
pop
add
push
pop
pop
jp
int
sub
cmp
fdiv
mov
dec
aaa
roll
pop
fdivl
test
dec
cmpsb
in
add
int
cli
push
inc
push
test
mov
dec
cmp
subb
dec
pop
push
scas
andl
insb
testl
and
loopne
dec
cmp
cli
xor
cs
bound
or
or
push
sub
add
lods
lds
das
pop
lods
aad
jo
clc
rol
or
inc
cmp
cltd
and
sub
push
sarl
add
sub
xor
add
xorb
lcall
orb
dec
sub
lret
and
mov
nop
pop
sub
jle
jl
adc
dec
decb
andb
add
iret
cmpsb
adc
aas
mov
cmp
mov
in
filds
pop
into
fwait
aam
adc
je
mov
ss
xchg
add
mov
data16
cmp
xor
xchg
push
add
imul
push
jle
add
scas
push
adc
or
sbb
sbb
push
dec
enter
dec
xor
mov
and
repnz
sub
enter
dec
push
xor
mov
fldl
iret
test
insl
adc
and
in
lret
sbb
movsb
mov
dec
and
testb
iret
andl
xor
mov
fnstcw
mov
movsb
repnz
adc
add
add
bswap
adc
xchg
es
mov
push
outsb
or
leave
inc
ret
test
cmp
and
push
leave
or
xor
jl
dec
and
add
movsb
jno
dec
lret
lret
out
stc
and
repnz
mov
sub
inc
stos
sbb
setbe
fs
push
ds
imul
push
cmp
pop
data16
inc
push
push
test
jb
adc
inc
test
mov
cmp
inc
das
popf
js
or
pusha
fsubrl
sbbb
call
dec
push
inc
cltd
cmpb
dec
or
pop
add
push
cmpsb
and
insl
hlt
sbb
icebp
jecxz
sbb
pop
or
scas
pop
push
lock
dec
or
add
add
cmp
push
lcall
jg
test
cmp
fldt
pop
xchg
jns
or
sti
cwtl
imul
sub
mov
adc
or
sbb
pop
push
push
cld
rorl
out
sbb
inc
pop
inc
dec
dec
outsb
nop
jge
out
iret
fwait
call
dec
pop
mov
dec
jbe
divl
imul
dec
pop
addr16
mov
sbb
dec
iret
je
xor
cld
sbb
mov
sbb
inc
dec
and
aam
or
rclb
sbb
mov
and
mov
call
ss
pop
and
es
aad
adc
outsb
in
add
fdivl
xchg
jge
shll
push
or
dec
and
fisttpl
pop
test
cmpsb
test
outsb
cmp
jg
dec
rclb
ljmp
sub
xchg
or
fwait
lcall
xor
sbb
lea
or
pop
sbb
rcrb
mov
sub
and
pop
iret
push
cmc
sub
sub
adc
into
jp
daa
fadds
dec
pop
rcrb
loop
jo
daa
sub
add
dec
adc
xchg
jbe
imul
fmull
ljmp
mov
inc
clc
fstpt
and
sbb
inc
into
pop
ds
mov
lods
dec
jl
addr16
adcb
sub
lcall
push
out
clc
movsl
lahf
fwait
mov
push
pop
cmp
sbb
dec
shlb
pop
jle
add
stos
sbb
xor
pop
jae
outsl
sub
dec
xor
jecxz
inc
aam
out
push
sub
pop
dec
in
ljmp
es
dec
xchg
sbb
inc
adc
aad
or
faddl
rol
orl
xchg
pop
mov
insb
fdivrs
popf
or
xchg
sbb
repnz
inc
addl
outsb
xor
int
or
sbb
push
int
pop
pop
jo
es
cli
les
inc
mov
dec
push
lods
mov
imul
sbb
add
push
adc
add
dec
lret
add
xor
pop
pop
leave
cmc
mov
pop
cmpsl
xchg
scas
repz
mov
in
cmp
stos
mul
lcall
mov
jg
andnps
test
xchg
jae
cli
pop
pop
dec
repnz
adcl
push
mov
aas
aad
imull
les
sbb
push
xor
jb
push
push
jae
add
jp
inc
ja
dec
clc
movsb
out
ffree
xor
outsb
das
cmp
cmp
lcall
jge
cmp
adc
and
and
fdivl
and
xchg
xchg
mov
lods
aam
push
les
nop
push
into
push
f2xm1
fbld
pusha
loope
das
push
jg
inc
mov
mov
sub
in
jbe
loope
cli
outsl
push
add
outsb
adc
sub
adc
out
mov
push
cltd
xor
cli
ja
sub
mov
sub
xor
rcl
adc
dec
lret
bound
xor
mov
in
xor
arpl
adc
pop
outsb
xor
adc
xor
push
cmpsb
jo
js
pop
jge
push
mov
mov
xor
push
movsb
dec
or
addl
jae
cs
das
ljmp
scas
sub
adc
out
mov
ret
lods
sub
pop
pop
push
sbb
pop
lret
pop
lcall
push
mov
fs
sub
sub
cmp
aas
mov
pushf
adc
cmp
dec
fildl
imul
add
xor
orb
scas
aas
push
sti
icebp
dec
mov
xchg
push
sahf
jne
push
sub
mov
mov
bound
stos
push
dec
xchg
sub
out
loop
in
cmc
push
enter
int3
sub
cmpsl
mov
ficoms
mov
xor
xlat
ret
push
nop
ss
inc
sahf
mov
pop
icebp
lea
jae
push
aad
hlt
in
push
adc
rolb
pop
dec
out
je
mov
fnsave
sbb
adc
outsl
dec
push
flds
fs
jle
xor
mov
cmp
fstps
xorb
push
cmpsl
cmp
adc
sahf
jae
addr16
ljmp
in
cltd
shl
test
mov
mov
push
dec
adc
dec
sahf
ja
lahf
lods
jnp
or
popl
cli
mov
cwtl
cmc
leave
fwait
addr16
push
in
insb
xor
loopne
es
push
jp
movsl
sub
in
push
jmp
enter
mov
cmp
int
addr16
scas
fldenv
push
cmp
arpl
stos
ja
sub
mov
push
add
iret
jp
fs
enter
sahf
hlt
jle
jle
cmp
add
mov
mov
mov
pop
xchg
and
ret
fbld
inc
mov
insl
lds
push
inc
fstps
das
ja
inc
or
sbbl
jno
cmpsb
pop
rclb
test
scas
mov
imul
cmp
insb
or
cmp
add
andl
inc
jae
add
push
push
and
insb
into
mov
sbb
pop
into
inc
pop
adc
ja
push
push
pushf
ss
xchg
cmpsb
bound
xchg
fwait
ljmp
cli
inc
cli
pop
add
ret
or
jle
adcl
adc
cltd
test
addb
outsl
xor
xchg
fwait
dec
inc
mov
lcall
cmp
fs
mov
pop
sahf
add
mov
adc
and
ja
inc
sbb
lret
pop
out
sbb
bound
mov
or
cmp
stos
push
jg
inc
adc
xchg
push
push
add
cmpsl
and
jb
out
mov
xchg
mov
mov
pop
fiaddl
mov
sbb
cmp
mov
mov
stos
clc
inc
push
jp,pt
dec
mov
cmpsl
fisttpl
pop
sbb
das
ds
rsm
fadds
into
cltd
dec
adc
cmp
iret
fdiv
push
fisubl
ds
bound
fwait
cmpsb
hlt
adc
mov
lret
fbstp
test
adc
dec
popf
ljmp
add
push
or
jecxz
dec
xchg
rorb
push
nop
xchg
adc
push
push
push
or
repz
fsubl
jecxz
sbbl
push
push
mov
clc
repnz
loope
xchg
jae
pop
fmul
invd
cmpsb
or
into
iret
jle
mov
rorb
lret
shlb
call
fisttpll
mov
negl
lret
test
pop
or
push
sbb
push
fdivp
push
add
loop
dec
dec
mov
or
js
fwait
pop
cmp
mov
jmp
inc
or
dec
jbe
fistpl
sbb
andl
mov
push
dec
ja
xchg
or
xchg
push
ret
std
lcall
jge
fsub
repnz
call
loope
dec
pop
inc
in
dec
aad
inc
arpl
adc
add
pop
mov
cmp
pop
push
mov
sub
mov
mov
pop
push
mov
push
dec
shl
dec
cmp
fnsave
test
or
sub
addr16
mul
push
sub
aaa
inc
int3
int
xor
out
inc
loop
in
aam
dec
lret
outsb
movsl
lds
jp
mov
add
or
in
lods
das
xor
shlb
mov
cwtl
fs
adc
xor
mov
hlt
jb
mov
stc
imul
xor
mov
sbbl
std
sbb
in
dec
movsl
sbb
in
xor
sub
cmp
repz
clc
mov
mov
sub
popa
pusha
pushf
aas
icebp
inc
int3
fnstsw
into
cli
scas
adc
sub
cltd
mov
hlt
into
xchg
repnz
push
nop
mov
js
outsl
decl
pop
jg
inc
sbb
es
mov
dec
sbb
xor
dec
lret
pop
xlat
dec
loopne
lret
sbb
jmp
xchg
inc
fmuls
push
sarl
jmp
fnstsw
sahf
fninit
add
dec
jp
pop
and
jns
dec
stc
adc
sub
mov
call
ljmp
loop
or
inc
aam
jle
inc
fcoms
adc
rol
push
mov
pop
xorb
pop
pop
sub
push
jg
push
jbe
cmp
xlat
ds
out
jnp
mov
mov
sub
mov
dec
popa
mov
lods
pop
hlt
out
aas
pushf
cmp
mov
mov
mov
cld
adcb
push
aam
pop
pop
dec
data16
pop
or
pop
mov
test
rorb
inc
sub
jnp
sarb
pop
aaa
icebp
pop
and
push
pop
mov
orb
sbb
sub
mov
mov
dec
pause
adc
xchg
jns
push
test
les
lea
lcall
dec
push
mov
inc
jle
ret
loope
sub
sti
outsb
and
mov
fcomps
pop
push
jecxz
lret
daa
cmp
push
xor
or
call
pop
push
adc
push
fimuls
jge
repnz
xlat
or
fistpl
mov
es
mov
and
outsl
cmp
adc
sti
aaa
icebp
shl
jnp
mov
inc
cmovno
fs
or
cmp
mov
cli
out
jle
sti
movsb
push
push
lret
cld
mov
mov
es
mov
push
sub
repnz
pop
out
lock
rcl
jo
dec
add
sbb
jae,pn
sub
leave
dec
int3
cmc
fcomip
xorl
and
adc
notb
jns
cmp
adc
dec
jns
mov
xchg
mov
push
push
mov
and
lret
out
loope
add
cmp
daa
inc
sbbb
jne
fists
push
mov
pop
push
call
add
pop
and
std
push
in
push
xchg
inc
dec
mov
jns
aam
fs
xchg
pop
stos
mov
inc
dec
ja
sub
fwait
ljmp
dec
xchg
push
adc
faddl
dec
xchg
jb
jge
scas
lods
push
repz
cld
xor
pop
push
sbb
push
jae
adc
cmpb
xor
mov
sub
push
lar
fwait
or
xor
cli
out
and
push
je
int
sbb
add
or
shlb
mov
aaa
out
sub
insw
int3
pop
out
jno
sub
pop
sbb
insb
and
mov
sbb
push
add
or
gs
xchg
jbe
xor
daa
dec
and
xor
sbb
cli
push
jnp
in
rcrb
and
mov
and
stos
or
andb
aad
mov
pop
mov
loop
sbb
je
or
int
aam
hlt
inc
in
test
cmc
or
test
mov
out
fstp
xchg
or
pop
sbb
fistps
insb
push
xchg
push
pop
xchg
push
push
pop
push
loopne
inc
ret
jl
pop
and
xchg
dec
ljmp
ret
sbb
push
sub
push
subl
or
xor
push
sub
ss
int
or
ret
xchg
js
icebp
jge
and
icebp
les
or
and
or
cmp
arpl
xor
das
cmp
xchg
sub
push
mov
arpl
adc
xor
cmc
pop
stc
scas
pop
xor
fnstcw
clc
jg
call
adc
jae
pop
cmp
cs
int
das
mov
cli
cwtl
xor
sub
call
fsubs
fwait
xlat
mov
cs
mov
je
movsb
pop
adcl
add
aam
loope
add
cli
xorb
sbb
pop
dec
jae
adc
sbb
jecxz
adcl
jg
mov
inc
in
insb
repnz
les
das
fs
scas
mov
loopw
cmp
mov
into
sbb
jnp
clc
loope
sbbb
xchg
and
imul
or
jae
and
or
outsl
std
adc
or
inc
push
jle
and
out
push
test
subb
xchg
out
dec
ret
arpl
or
cmp
mov
xor
sub
data16
xchg
or
fisubl
mov
mov
or
hlt
mov
aaa
scas
xchg
dec
fmul
cmp
ficomps
pop
mov
das
push
jle
fistps
or
xchg
pushf
sub
push
cld
xchg
add
inc
xor
mov
jecxz
cmp
divl
jne
fcmovne
or
jg
in
lret
imul
mov
jne
add
add
mov
pop
pushf
clc
into
push
pop
jne
fimull
fstl
and
sub
fsubr
cli
idiv
lahf
mov
arpl
add
xor
add
icebp
add
mov
sbb
dec
ds
sbb
data16
je
test
lods
adc
xchg
daa
jp
push
out
mov
jle
insb
xor
leave
out
mov
test
sub
lock
les
push
ljmp
jg
insl
xor
scas
inc
add
dec
mov
arpl
ds
sub
loopne
roll
std
pop
mov
adc
aad
sbb
sbbb
ljmp
pop
mov
mov
inc
pop
fs
push
push
sub
inc
ficomps
push
xchg
sbb
sub
mov
and
xor
scas
inc
jge
xchg
jp
sub
imul
sbb
fwait
sub
xchg
ficompl
pop
sbb
jle
loope
movsb
aad
xchg
pop
cltd
xchg
adc
xchg
xchg
pop
aaa
cld
dec
insb
cli
aad
sub
adc
pop
push
jge
loopne
add
mov
cwtl
xor
mov
sbb
add
fwait
inc
pop
pop
int
jnp
jnp
lcall
or
xchg
inc
inc
mov
pop
sub
xor
mov
mov
es
cmpsl
jne
cmp
dec
mov
aas
dec
negl
sti
xor
shll
data16
cmp
lahf
sub
dec
lds
out
das
mov
push
cmc
cmp
test
bound
mov
pop
push
xchg
dec
dec
imul
aaa
inc
jle
cwtl
js,pt
pop
lret
sub
push
sub
data16
add
imul
aas
negl
mov
popf
lds
ljmp
xor
mov
lods
outsl
dec
outsl
and
incl
in
adc
inc
stc
cwtl
cmp
lea
rorb
adc
lock
jbe
sub
push
loop
lea
sbb
adc
push
xlat
add
and
xor
xchg
les
sbb
or
dec
mov
cmpsb
or
sub
sbb
maskmovq
notl
cs
arpl
push
dec
loop
push
in
cmp
xchg
mov
and
aad
pop
cmpb
xchg
mov
mov
push
pop
xor
push
inc
mov
mov
sbb
cmp
mov
add
sbb
and
sub
cmpsb
jl
out
arpl
push
mov
fistpl
add
mov
mov
jmp
aad
test
pop
lcall
cli
sub
ja
aam
sbb
out
aam
cwtl
or
cmp
jb
pop
pop
mov
xchg
mov
les
mov
jmp
mov
mov
or
xchg
or
mov
int3
ds
addb
icebp
aam
adc
sbb
dec
pushl
stc
cmp
or
scas
mov
pop
jb
and
push
push
stc
push
mov
sbb
stos
sub
push
ljmp
pushf
aam
sbb
xchg
sbb
mov
xor
stc
lds
push
inc
jb
stos
pop
test
pop
scas
pop
in
pop
mov
add
mov
dec
in
mov
pop
stos
loopne
dec
dec
popf
dec
js
iret
xchg
test
push
pusha
cmp
and
mov
dec
push
andl
cmc
inc
inc
not
into
in
cmp
xor
ja
sbb
mov
es
repnz
mov
jmp
scas
sub
pop
inc
in
add
sbb
imul
test
pop
push
and
jg
sbb
cs
xor
mov
cld
loope
push
jg
lcall
idivb
out
sbb
or
stos
and
cwtl
lods
mov
lahf
pop
push
nop
push
xor
vmptrst
repnz
aam
xlat
jbe
les
movsb
jl
das
sub
push
and
xchg
jno
daa
cmpsb
lea
and
test
adc
fildl
jne
pop
jg
in
pop
pop
cli
cmp
cmc
xchg
out
pop
xchg
pusha
mov
mov
stc
cmp
xor
dec
push
xchg
mov
mov
push
add
jge
je
rclb
aaa
data16
cmc
lahf
sub
pop
stos
jp
sarl
cmpsb
adc
mov
pop
out
jge
fsub
lds
pusha
push
pusha
out
sbb
and
mov
xchg
aam
push
cmc
aas
and
hlt
push
inc
xor
loop
mov
lahf
add
dec
pop
pop
mov
sbb
imul
das
bound
push
pop
dec
cmpsb
dec
adc
ja
loop
cmp
mov
or
insb
mov
aas
xchg
push
dec
aad
sti
das
jg
pop
stos
in
fisttpll
add
push
push
adc
push
pop
xchg
dec
add
data16
lahf
and
push
push
das
lahf
out
xchg
xor
pusha
xlat
dec
push
xchg
xchg
pop
jle
sub
push
movl
xchg
icebp
scas
or
jecxz
mulb
xchg
and
ss
sahf
jecxz
and
xchg
jg
mov
ljmp
addl
mov
fiadds
add
leave
ljmp
or
or
ds
cmp
push
mov
lret
pop
fisubrl
cmp
data16
pushf
icebp
pop
xchg
cmp
xchg
xchg
nop
imul
pop
cmc
in
push
test
insl
idivl
mov
cltd
and
mov
push
sub
fistpl
nop
mov
add
pop
pushf
push
neg
jbe
push
push
mov
hlt
and
pop
insb
lret
fwait
push
lock
sti
xor
xor
pop
xchg
cmp
adc
out
cltd
push
mov
sbb
sub
jge
add
sub
or
dec
stos
cmp
es
and
js
adc
inc
or
mov
adc
rorl
push
jbe
mov
aad
out
pop
push
cmpb
inc
popf
ucomiss
cmp
jp
aam
out
or
pop
adc
mov
and
pop
aad
sbb
pop
and
push
pushf
bound
sahf
cmp
into
or
xor
adc
imul
pop
adc
mov
cltd
sti
out
adc
loopne
insl
adc
mov
repnz
pop
or
dec
or
fnstsw
push
sahf
rol
inc
or
pop
mov
cmc
xchg
cli
adc
jne
mov
or
add
mov
std
ficoml
inc
aam
mov
push
call
incl
add
cwtl
or
in
movsb
mov
ret
jge
inc
xchg
mov
loopne
sbb
imul
jge
inc
stc
cwtl
scas
ret
cmpsl
jecxz
aad
or
jbe
sbb
xor
out
add
or
icebp
mov
push
jl
and
push
cmpsb
fisubs
sub
adc
hlt
sbb
sbb
or
pop
mov
bound
dec
adc
sub
or
rolb
sub
push
testb
lods
or
rorb
inc
adc
xor
in
pop
inc
outsl
or
test
js
notl
pop
xor
xchg
mov
sbb
je
sbb
inc
jecxz
loopne
into
add
js
out
iret
dec
pop
push
jecxz
cmp
inc
jl
lret
push
add
fldt
adc
mov
arpl
nop
jecxz
pusha
mov
imul
daa
mov
xor
aam
push
inc
lahf
test
or
mov
jne
dec
xchg
xor
cmp
movsl
dec
xchg
lahf
inc
dec
incl
mov
dec
cli
lahf
aas
push
mov
cmpsl
xchg
add
adcl
sbb
sti
or
xchg
loop
sbb
mov
adc
dec
cmp
shrb
outsb
cmpsl
dec
push
push
sub
adc
frstor
xchg
rclb
enter
scas
test
fnstcw
hlt
and
inc
or
inc
addb
jmp
dec
andb
fdivrs
repz
mov
rep
fcomip
leave
lahf
mov
outsb
bound
imul
into
xor
push
fdivl
sbb
xor
out
mov
xor
adc
fisubrl
inc
stos
or
insl
call
pop
dec
dec
cmp
dec
cs
push
dec
sub
push
dec
das
pop
pop
dec
cmp
xor
xor
push
out
outsl
add
enter
sarl
push
sahf
mov
rcr
ret
xor
jle
insl
jbe
and
inc
rcrb
scas
daa
pop
int
or
out
push
movsl
mov
rclb
pop
mov
pop
bnd
shlb
repz
mov
xchg
jb
mov
push
sub
cltd
dec
add
add
dec
jle
sar
not
sbb
sub
adc
std
push
retw
xor
lahf
cmpsb
cmc
or
or
lret
in
outsb
mov
mov
pop
push
repnz
and
sub
in
insb
dec
sub
mov
sub
data16
dec
test
push
dec
das
shrl
jle
ds
imul
pushf
lcall
adc
mov
and
pop
fs
mov
push
lret
ret
sbb
jmp
js
aaa
or
sbb
cmpsl
cmpsb
loope
out
and
mov
mov
jle
mov
sub
pop
push
pop
mov
dec
dec
fistl
adc
fcoml
imul
or
pop
or
jg
mov
ret
cmp
xlat
dec
cld
add
push
and
aam
mov
test
pop
pop
push
inc
shrb
mov
and
dec
mov
iret
adc
cmp
in
inc
dec
sub
pusha
pop
mov
xor
lret
xor
cltd
cmpps
fs
pop
pop
leave
mov
mov
or
out
xchg
sub
or
or
clc
notl
ljmp
adc
jg
testl
and
lcall
push
mov
mov
shr
push
sbb
push
loopne
daa
test
cmp
popf
sahf
adc
pop
and
movsb
cs
push
int
cmp
push
push
sbb
es
sbb
jl
fistpl
ja
inc
lret
push
stos
sub
nop
cli
jl
repz
inc
inc
mov
fcoms
sub
push
or
push
lock
cmp
aas
jle
pop
ss
mov
ja
inc
lahf
jg
pop
mov
fsubrs
aaa
std
movsb
mov
lock
outsl
pop
inc
es
push
dec
mov
dec
sbbl
push
stos
pop
pop
add
inc
pushf
into
ss
dec
orl
aas
sahf
inc
dec
cs
sahf
push
mov
mov
repnz
mov
mov
addr16
loopne
pusha
stos
push
or
daa
dec
sbb
mov
push
cwtl
lcall
mov
ds
inc
pop
and
jbe
sub
rcrb
add
xchg
sbb
cli
xchg
syscall
dec
dec
dec
out
cltd
adc
add
test
movsl
fs
push
call
cmp
imul
sbb
xor
dec
clc
shrb
adc
cld
sbb
push
mov
ss
stc
divb
sub
aam
mov
pop
pop
aam
es
push
xor
repnz
or
cmc
cmpsb
adc
pop
int
sbb
add
adc
pop
pop
ret
push
outsl
fildll
frstor
jnp
mov
and
mov
add
pcmpeqb
gs
sub
push
ret
inc
in
loope
jns
fs
and
mov
adc
movsl
mov
bound
cmpsb
lahf
cmp
cld
mov
add
arpl
pop
or
movsb
repnz
xchg
loopne
mov
vpmulhuw
push
jp
shrl
sbb
push
and
pusha
and
jne
sbb
dec
push
lcall
out
das
ds
cmc
mov
pop
mov
mov
xor
xchg
std
jne
cwtl
inc
jbe
add
or
lahf
lret
adc
int
dec
inc
jle
push
fwait
jae
lds
and
dec
aas
enter
mov
cmp
mov
push
rolb
push
mov
icebp
das
mov
fisubs
or
mov
or
xchg
jbe
dec
cmc
jne
outsb
les
lcall
add
jg
xor
push
incl
mov
cmpsl
pop
loope
mov
dec
jg
add
push
les
fisttpl
xor
jle
add
pop
xchg
mov
sti
sbb
idivl
mov
fmull
ss
push
dec
addr16
iret
shlb
jno
clc
pop
pop
push
fldt
inc
inc
and
loopne
roll
nop
push
daa
pop
orl
iret
or
cwtl
loope
ret
cmpl
pop
stos
ficomps
iret
rcl
sbbl
push
imul
or
ljmp
dec
mov
sbb
mov
pop
cmc
mov
jp
js
push
xchg
repnz
mov
int
out
sarb
cmp
cmc
dec
jl
scas
inc
jg
jp
rolb
shrl
xchg
or
xor
idivl
or
loop
movsl
jle
and
add
mov
dec
inc
sbb
ficoml
push
lds
lock
imul
rcrl
inc
fcomip
push
cwtl
inc
sbbb
shr
inc
pushf
cld
pop
imul
sub
inc
xor
js
cmp
arpl
push
cwtl
mov
inc
shrb
adc
imul
push
vprotq
subb
aam
iret
movsl
or
neg
or
adc
jmp
push
test
imul
pop
xchg
int
popf
call
repnz
sub
sub
sub
or
jge
push
add
or
jmp
pop
nop
pop
jns
push
pop
lret
ds
add
imul
jmp
setle
fimuls
repnz
xchg
hlt
fbstp
jp
addr16
mov
loope
xor
xor
push
and
cmp
or
orl
xor
les
mov
or
push
and
iret
and
jmp
mov
std
arpl
aas
loope
insb
fwait
popa
cmp
mov
sbb
dec
push
arpl
and
hlt
push
sti
mul
adc
rcrb
mov
pop
pop
mov
jbe
xlat
into
xchg
dec
pop
pop
repz
rorb
loope
insl
jne
pop
sbb
and
xchg
sahf
and
aam
aad
daa
lret
jns
inc
rcrb
repnz
mov
push
adc
hlt
xlat
hlt
cli
das
divb
les
and
mov
inc
out
or
iret
sub
scas
fcmovnbe
enter
push
xchg
dec
push
pop
push
push
pop
mov
mov
fdiv
lret
out
adc
xchg
xchg
jmp
es
nop
dec
pop
movsb
push
sbb
sub
xor
xlat
ds
pop
jl
pop
fwait
daa
xchg
cs
fisubl
loop
addb
push
arpl
sti
add
js
andb
or
negl
data16
pop
call
add
lds
push
pop
mov
push
dec
adc
lods
pop
jno
bound
jo
ffreep
repnz
push
xchg
or
add
mov
les
push
and
push
or
into
fiaddl
sbb
jp
jno
stos
cltd
mov
jbe
pop
jle
insl
pop
mov
or
dec
sbbb
pop
mov
pushf
mov
ljmp
pop
push
adc
xor
dec
add
jecxz
mov
ja
iret
mov
lret
shlb
add
shl
jle
cs
pop
xchg
push
push
mov
mov
loope
push
incl
xor
mov
lret
and
gs
mov
sbb
add
hlt
shlb
movl
dec
test
std
movsl
or
add
pop
stc
in
push
or
std
lahf
xorb
pop
pop
cltd
loopne
std
mov
sbb
mov
pushf
sub
inc
mov
and
hlt
xchg
push
mov
pop
jg
push
push
jle
lret
push
push
sub
dec
pop
cs
popf
roll
out
xlat
pop
jo
add
mov
mov
mov
xchg
dec
test
cmp
leave
sbb
sub
adc
cmp
int
sahf
cmp
dec
fstpt
xor
bound
sti
sbb
ret
push
and
loop
inc
push
movsl
notb
je
pop
mov
xchg
sbb
push
dec
cmp
push
dec
decb
dec
xchg
cmp
ret
ss
dec
or
add
inc
testb
pop
ret
or
in
mov
aam
or
mov
xchg
cmp
fs
sbb
testl
inc
outsl
rcrl
stos
add
pmulhw
lret
xor
test
mov
dec
scas
xchg
push
jbe
mov
jnp
push
sub
and
or
and
jg
out
js
flds
testl
xchg
push
jg
push
lods
mov
or
push
cmpsl
fdivrs
popf
pop
fistpl
cmpsb
dec
negl
sbb
scas
inc
pop
adc
cltd
mov
ja
lods
pop
xchg
jns
shll
xchg
pop
cmp
pop
sarl
mov
loop
pop
aam
out
jge
and
iret
xor
jnp
cmpsb
divps
ljmp
les
cwtl
std
fwait
hlt
pop
jbe
rcl
mov
rcll
loope
inc
scas
lahf
xchg
decb
pop
jg
xchg
add
dec
popa
scas
ret
jmp
ds
out
outsb
sub
pop
mov
or
scas
and
dec
fdivp
ret
sbb
dec
push
call
adcb
mov
or
add
shl
rclb
sbb
test
add
lock
cli
inc
dec
inc
in
lock
jae
dec
sub
mov
sbb
push
push
mov
outsb
pushf
int
sbb
xor
and
pusha
bound
pop
leave
mov
sbb
dec
add
jecxz
inc
mov
pop
xor
ds
xchg
popf
pop
push
fists
jecxz
sub
xchg
inc
push
sub
mov
sub
notb
lock
das
in
jp
in
mov
and
push
pop
mov
adc
adc
xchg
lret
fadds
loop
add
ror
loop
dec
inc
mov
addps
lods
dec
add
inc
dec
sbb
xlat
mov
mulb
fiadds
cmc
adc
mov
hlt
test
add
in
jae
out
fsub
or
mov
sar
jns
shll
add
or
addr16
sub
fdivrl
cmp
adcl
cli
mov
stc
xor
pop
xor
inc
sbb
out
mov
sbb
aad
push
inc
pop
push
jbe
add
aad
pushf
lods
xchg
mov
je
dec
cs
jge
repnz
pop
je
cwtl
xlat
dec
inc
mov
and
cmp
cmpsb
jnp
cltd
and
in
inc
jecxz
mov
jbe
mov
int3
test
xchg
mov
or
filds
pop
dec
dec
or
push
mov
into
pop
cmp
add
into
movsl
pmovmskb
pop
cmpsb
movsl
jg
dec
cltd
or
sbb
testl
pop
iret
and
je
repnz
pop
fnstenv
push
test
pop
and
xor
adc
inc
sbb
mov
inc
shrl
inc
xchg
inc
es
pop
aaa
xor
bound
jb
inc
cmp
cs
inc
jno
lret
inc
cmp
pop
push
pop
push
dec
enter
data16
ficompl
jnp
addb
popa
xchg
outsb
xor
lcall
jbe
sbb
xchg
daa
packssdw
adc
mov
cmp
mov
cltd
jbe
insb
int3
pop
cltd
dec
sbb
inc
lds
mov
jmp
leave
pop
jno
inc
jle
test
ds
sahf
pop
and
in
in
std
xchg
mov
cld
gs
push
cmpsb
into
lcall
sbb
cmpsb
arpl
insb
jge
test
jmp
daa
add
push
add
xchg
mov
les
pop
xchg
jne
inc
pushf
iret
insl
mov
inc
push
insb
cld
jbe
sbb
and
mov
popa
lods
push
adcl
in
cmp
inc
push
gs
push
inc
inc
sbb
fs
dec
push
sbb
les
pop
push
push
cmp
push
sbb
and
lea
mov
js
or
pop
push
push
orl
adc
std
stc
lret
push
insl
add
jmp
adc
movsb
test
cltd
push
cmp
jge
outsl
or
or
lds
outsl
imul
aas
xor
push
js
fistpl
movsb
js
aam
outsb
icebp
cmp
add
rcll
lret
mov
push
dec
mov
push
in
pop
and
outsb
add
in
lret
cld
add
cmp
stc
cmpsl
inc
pop
fcmove
outsb
and
xor
xchg
sbb
loop
pop
xor
imul
jmp
pushf
sbb
jge
add
jb
test
and
mov
pushf
xchg
out
and
leave
xor
jbe
xor
sbb
mov
aam
pop
ret
pop
ret
sbbl
notb
cmp
cmp
mov
aaa
aas
idivb
mov
xchg
test
aaa
leave
adc
dec
int
add
push
cltd
xchg
sbbl
sub
mov
stos
repnz
mov
and
push
sub
lahf
or
pushf
mov
xchg
scas
jmp
sti
leave
in
dec
das
dec
sbb
loopne
xor
and
push
das
sar
outsl
or
sub
fadd
inc
in
jns
xchg
inc
push
xor
pop
lea
mov
sarb
out
mov
add
or
mov
sub
pop
call
mov
iret
mov
pop
sbb
stc
std
lcall
andb
mov
outsl
cmp
out
push
xlat
mov
incb
nop
adc
or
andl
rorl
call
pushf
ljmp
sbb
aam
jp
dec
psrad
sbb
inc
insb
lock
cmpsl
push
adcb
push
dec
mov
push
xor
or
movsl
dec
jge
push
enter
neg
test
test
mov
mov
pop
cld
and
jle
lahf
bound
or
xchg
sarl
and
or
loope
dec
test
iret
test
mov
jns
sub
inc
adc
or
inc
jmp
jb
inc
inc
cmp
shlb
stos
cmp
dec
pop
cmp
jb
js
subb
xchg
dec
pop
stos
stos
or
jb
inc
sarb
mov
xor
sbb
ret
cwtl
sub
sub
push
push
aaa
mov
or
sbb
push
das
xchg
adc
mov
mov
leave
inc
sub
jb
mov
mov
sbb
ret
js
aaa
dec
lods
pop
dec
mov
mov
stos
mov
jp
stc
push
test
bound
and
jp
cmp
jg
xchg
mov
pop
adc
iret
and
add
in
and
adc
out
clc
mov
ljmp
xor
jp
inc
fiaddl
xor
js
inc
das
loop
lahf
sti
repnz
mov
ss
sahf
pop
lods
rcrl
adc
stos
test
push
shlb
aas
mov
push
orb
inc
bound
push
pop
mov
add
dec
out
push
mov
cmp
dec
in
outsl
cmpsb
incb
mov
testb
cld
xchg
or
push
in
jnp
mov
xor
neg
dec
or
xchg
cmpsb
nop
stos
int3
fisubl
jle
das
cs
mov
and
jnp
sbbl
sub
xchg
scas
dec
xchg
cwtl
push
sti
test
data16
ljmp
fwait
add
cmpsl
out
movd
test
fstpt
std
xchg
call
iret
stc
inc
in
js
mov
push
mov
pop
mov
sbb
js
and
sbb
aad
into
fdivrl
lret
mov
shr
rorl
aas
sbbb
outsb
sahf
xor
pushf
test
ficoml
ret
iret
inc
sarl
sub
lea
js
and
sbb
aad
into
mov
movsl
mov
mov
mov
loopne
push
push
lahf
into
arpl
jb
adc
pop
mov
dec
loope
jb
mov
pop
mov
jnp
out
popf
push
jle
adc
dec
mov
aas
mov
pop
daa
or
jae
push
mov
pop
jg
aam
or
sahf
mov
sbb
data16
dec
mov
inc
je
dec
inc
xchg
xlat
les
jns
sbb
xor
and
pop
loop
add
pop
pop
out
ret
sub
shl
test
dec
inc
iret
pop
cmp
pop
push
andb
xor
xor
jg
add
inc
dec
in
data16
in
mov
aas
fs
xchg
out
mov
adc
movsb
and
and
jbe,pn
xchg
ss
sbb
push
sub
inc
in
cltd
mov
pop
mov
int
ss
ds
jns
sub
dec
lods
pop
mov
call
fwait
push
adc
cmp
imul
jle
add
jle
jg
xlat
mov
push
cli
push
mov
movsl
scas
dec
lcall
arpl
jb
sub
out
jne
inc
cld
insb
iret
xor
inc
cmpsb
push
clc
push
cmp
mov
inc
fmulp
mov
mov
mov
lcall
xchg
icebp
fsubp
xchg
pop
loop
push
rolb
push
dec
xor
inc
and
mov
xlat
repnz
xchg
ficompl
xorb
jae
lock
xchg
adcb
sub
mov
stos
das
mov
addb
repnz
inc
test
adc
mov
in
inc
xchg
xchg
mov
shlb
sbb
outsl
mov
xchg
xchg
adc
out
cltd
push
fdivrp
push
xchg
sbb
jns
out
data16
leave
xchg
jae
scas
adc
push
movsl
push
ficomps
data16
out
cltd
push
cmp
push
jp
push
fsubs
inc
test
mov
mov
or
sub
inc
lods
pop
mov
out
data16
push
xlat
ficomps
imul
cmp
inc
pusha
dec
dec
push
push
mov
repz
mov
test
sub
cmpsb
loopne
or
stos
fsubrs
mov
adc
xchg
jp
sti
jp
das
jmp
cmc
xor
bnd
cmpb
sub
mov
subb
shlb
adc
pop
lea
movsl
mov
loopne
jp
stc
and
sbb
xor
roll
xchg
call
add
sbb
pop
bound
in
pusha
out
push
mov
push
cld
es
xlat
sub
adc
stos
or
sbb
jl
push
cmp
pop
sbb
aad
sbb
clc
jmp
loop
jl
pusha
inc
xor
inc
call
mov
dec
outsb
fadds
in
mov
lock
outsb
pop
push
out
xlat
sbb
imul
sub
testl
mov
cmc
xchg
pop
cmp
push
sub
lcall
dec
ljmp
add
jmp
jne,pn
mov
add
xchg
ffreep
xor
daa
mov
fisttps
loopne
inc
pop
out
push
fbld
push
jecxz
adc
jge
hlt
sti
cltd
mov
js
ja
push
jl
or
sbbb
adc
sbb
negl
fisubrs
pop
xor
bnd
cmpl
and
mov
jbe
adc
xor
ljmp
add
iret
rcrl
inc
xchg
sahf
xor
dec
cmp
xchg
gs
cmpsl
das
bound
in
push
popw
mov
xchg
or
add
dec
add
push
out
pop
mov
inc
push
scas
decb
push
bnd
mov
pop
dec
adc
push
adc
out
adc
daa
or
sub
jo
cmpsb
lods
je
ja
cmpsl
or
fcompl
sub
cmp
fnstcw
xor
shlb
add
jmp
xor
jecxz
or
hlt
or
int
xchg
add
clc
iret
sub
imul
push
bound
ret
mov
add
jbe
arpl
arpl
mov
aam
dec
jge
adc
orl
add
fcom
pop
mov
jo
xchg
push
inc
dec
fsts
fcmovne
mov
mov
shlb
inc
shll
js
xchg
add
and
xchg
or
add
cld
clc
cmp
outsb
sbb
pop
jbe
pushf
and
int3
imul
aam
pushf
adc
pop
push
push
xorl
cli
pop
dec
cmp
mov
repnz
pop
cs
add
mov
scas
int3
repz
jbe
adc
movb
pop
lret
iret
pop
mov
setns
adc
cli
mov
movsl
jp
ret
sub
lret
aam
rorl
loop
cld
cmp
or
adc
pop
push
dec
into
add
cmpsl
inc
or
mov
mov
jmp
push
push
fwait
adc
push
adc
out
add
fsubr
push
mov
cltd
cld
ljmp
adc
sti
sbb
push
inc
xor
push
sbb
dec
sub
fstpl
add
fcmovne
orb
dec
xchg
scas
jnp
test
xor
pop
push
mov
pop
or
sbbl
ja
iret
pop
fs
mov
jmp
or
leave
push
int
push
xor
add
rcll
adc
out
movsb
xor
daa
jp
movsb
mov
inc
push
test
enter
mov
ss
daa
mov
or
fnsave
push
mov
mulps
cltd
xchg
cmp
pop
jbe
fstpt
shrl
pop
cmp
jle
push
addr16
out
jl
fisubs
or
sbb
sub
hlt
and
sub
adc
push
call
sub
pop
js
pop
mov
jbe
adc
lret
pop
xchg
push
jb
mov
and
nop
dec
jl
fistl
sbbb
xchg
mov
inc
jl
push
push
lcall
dec
cmpsb
test
pushf
push
fs
mov
ret
arpl
test
dec
sub
mov
xor
arpl
xor
dec
into
fmulp
cmpsl
dec
jge
fildll
stc
jg
pusha
jmp
fs
in
jecxz
push
dec
imul
sbb
jge
outsl
jecxz
push
mov
pop
or
leave
les
jmp
pop
sbb
push
add
outsb
mov
ja
lea
and
das
xchg
sbb
pop
les
dec
add
fstps
ja
shr
hlt
js
cmpsl
xchg
adc
jb
sbbl
pop
call
sahf
mov
test
aad
repz
and
jae
dec
mov
jg,pt
dec
or
popa
pop
push
pop
imulb
cmp
mov
cmp
pop
or
push
sub
jmp
adc
loop,pt
and
add
sub
in
xorb
fdivl
bound
pop
jne
es
adc
adc
sbb
int
scas
cmc
xor
cmpsl
cmp
xor
and
or
dec
hlt
cli
insb
inc
leave
xchg
sbb
mov
ret
sub
ror
iret
pop
stos
pushf
sub
jnp
and
idivb
jnp
mov
iret
push
xchg
lret
mov
cmp
ds
enter
cltd
pop
xlat
js
add
inc
push
nop
dec
dec
dec
push
cmp
loop
pop
add
mov
sub
adc
dec
mov
adc
jg
cmp
jl
xor
cmp
cwtl
adc
pop
pop
adc
mov
movsb
loopne
jno
add
push
xchg
pop
out
inc
loope
jo
sbb
aam
sbb
cwtl
jns
out
sub
jmp
or
jae
xor
push
pushf
scas
stc
jle
insb
jne
pop
jl
xor
repz
mov
mov
pop
repz
mull
mov
sub
adc
adc
push
jg
mov
lret
lods
and
bound
sbb
pop
sub
fs
sub
int3
daa
adc
push
ljmp
mov
adc
lahf
cmpsb
and
inc
jg
cmpsb
push
xchg
out
sub
cmc
mov
pop
adc
mov
stos
pop
loope
subb
mov
xor
imul
into
pop
pop
dec
sbb
mov
ja
subb
push
aas
orb
es
lret
enter
adc
push
add
mov
dec
bound
dec
adc
pop
cs
jg
jnp
cmp
repz
or
xor
mov
aaa
pop
push
lods
fistps
fiaddl
test
and
or
fs
pop
jmp
ja
scas
aas
movsb
jb
dec
xor
adc
les
sbb
or
cmp
lock
jmp
out
mov
fcomp
push
cmpsl
add
nop
fdivl
xor
js
and
lods
add
xchg
push
enter
and
rorb
int
data16
push
mov
push
mov
jl
xor
push
rolb
inc
stos
xchg
xor
sbb
ja
sub
xchg
pop
mov
mov
scas
iret
popa
mov
sub
rcrb
addr16
add
pop
adc
sbb
loopne
and
jae
ja
lods
jb
sub
xchg
adc
cwtl
cmpsb
xchg
mov
std
mov
nopl
adc
out
aad
jecxz
sti
push
or
mov
inc
add
inc
fmull
stos
add
call
mov
movsl
stos
mov
sub
push
dec
fistps
add
out
cwtl
lcall
lods
push
push
stc
jp
lret
ja
es
in
bound
push
push
add
inc
mov
or
mov
gs
pxor
add
cmc
mov
aad
test
lahf
or
jg
jmp
shlb
dec
sbb
jns
fildl
dec
xor
sbb
pop
jle
pop
pop
jge
cli
loopne
xchg
daa
jmp
push
ljmp
adc
mov
es
mov
cmp
jbe
push
pop
xchg
inc
iret
push
sbb
mov
repz
pop
pop
mov
mov
sahf
jle
or
mov
enter
push
push
jne
add
repz
inc
fadds
flds
popa
inc
shlb
aad
lret
shr
out
xchg
in
lods
mov
sbb
decb
outsb
xorb
cmp
mov
ja
cmc
cmp
xor
cmpl
jl
adc
adcb
inc
gs
ret
mov
shl
pop
xor
inc
pop
aad
push
lock
std
enter
ss
cmp
or
dec
js
cmpsb
ret
and
lret
icebp
out
jne
sbb
adcb
ret
cld
add
dec
filds
adc
cmpsb
call
xor
loope
lods
outsl
jg
dec
shrl
sbb
adc
jg
xor
ss
jmp
pushf
shr
lods
js
add
lods
cmp
push
xor
cwtl
pop
xchg
jb
aad
inc
mov
push
aad
lret
adc
dec
or
shl
leave
daa
loop
rolb
cli
hlt
inc
and
inc
push
add
fwait
or
pop
call
ret
ss
arpl
pop
pop
lods
fwait
pop
mov
dec
or
and
pop
pop
inc
sub
xor
push
fcmovne
stos
dec
sub
mov
insb
and
mov
cmpsl
jb
and
mov
add
push
mov
adc
dec
sbb
stos
ds
jnp
inc
add
jp
mov
xchg
popf
das
les
pop
jg
adc
std
mov
cmp
out
iret
sbb
popf
and
outsb
push
fs
mov
xor
jge
test
cmpsl
push
push
lahf
fmull
js
sahf
repnz
pop
and
shr
ss
mov
shr
mov
in
mov
pop
pop
js
cs
xlat
adc
pop
mov
rolb
sbb
test
cmpb
test
dec
adc
sbb
adc
ljmp
data16
fdiv
orb
pop
sbb
gs
add
enter
mov
push
push
jns
pushf
and
jmp
pop
push
ljmp
fistps
iret
imul
inc
xor
outsl
add
or
and
cmp
mov
mov
fnsave
sbb
mov
mov
mov
sbb
push
inc
mov
fstpt
jle
aaa
fwait
cs
aad
push
fimull
subb
lcall
and
fcmovnu
and
hlt
cld
push
jns
push
pop
scas
clc
into
jnp
rclb
pop
adc
xor
fistpl
lods
add
test
stos
cmp
sub
pop
xchg
xchg
ret
sahf
adc
push
inc
cli
cmp
inc
lret
push
jg
add
pop
stc
mull
sbb
pusha
xchg
jle,pt
pop
add
negl
inc
in
jbe
xor
jbe
pusha
out
add
mov
int
addl
aas
fwait
daa
inc
add
sti
jno
adc
pop
push
int
sbb
adcb
hlt
jl
dec
mov
mov
lock
push
shrd
scas
repnz
add
sub
cmp
sahf
mov
pop
cmpsl
or
add
loope
mov
insb
fadds
ljmp
sbb
pop
sbb
mov
push
stos
xor
sbbl
mull
dec
loop
jle
insb
push
arpl
xor
pop
fnstcw
xor
iret
out
jp
ja
sbb
ljmp
bound
or
push
in
out
adc
inc
sbb
or
pop
mov
outsl
repz
pop
pop
mov
hlt
push
aam
outsl
mov
scas
xor
aam
sbb
push
cli
mov
out
xor
xchg
fists
movsl
repnz
add
cmp
sub
dec
push
sbb
into
enter
outsb
push
hlt
pusha
les
jae
push
push
in
adc
add
lods
inc
scas
add
sti
or
cmpl
push
add
imul
mov
ret
push
mov
jae
insl
cs
cmp
repnz
push
pop
sbb
mov
sub
jmp
dec
mov
pop
fdivp
inc
es
mov
cmp
cs
out
fisubrs
or
fwait
push
mov
pushf
flds
push
push
daa
cmc
mov
xor
popa
enter
fadd
jne
fcoml
call
scas
fisttpl
pop
push
call
cli
jae
cmpsb
inc
add
es
mov
xor
jb
jp
ret
adc
add
int
out
xor
jecxz
jbe
mov
xor
sub
cmpsl
mov
stos
test
loopne
stos
shlb
jmp
aas
lods
sbb
push
pop
push
lret
dec
pusha
loop
and
jecxz
mov
mov
imulb
imul
faddl
das
adc
and
pop
mov
push
pop
pop
sub
sti
mov
jecxz
dec
repnz
stos
fwait
cmp
bound
mov
call
sbb
sti
mov
mov
push
scas
in
and
push
and
in
pusha
hlt
daa
cmp
cmp
sbb
lods
adc
xchg
push
aaa
push
sbb
xor
inc
cmc
jb
xchg
cmp
mov
adc
push
dec
int3
sbb
lret
stos
inc
inc
sub
jae
push
push
or
mov
out
sub
shrl
mov
mov
std
dec
xor
mov
lea
pop
mov
mov
xchg
pop
push
mov
fdiv
sub
push
rcrl
mov
mov
jne
xor
mov
mov
imul
sub
add
dec
sub
sub
shr
lock
ret
aam
mov
push
dec
stos
jmp
in
lods
add
cmc
bswap
cld
jo
jmp
imul
dec
test
cmp
or
inc
cmp
mov
and
lret
mov
xor
fs
ret
push
and
leave
mov
outsl
cli
ss
jecxz
dec
push
scas
pop
inc
pop
faddp
imul
pop
xor
inc
mov
cmpsb
outsl
dec
testb
cs
imul
and
out
xorb
jmp
dec
or
xor
iret
inc
repz
arpl
dec
sbb
inc
rol
insb
loope,pn
dec
dec
je
lcall
adc
or
fdivrs
lock
add
xchg
and
iret
xchg
push
leave
insl
dec
faddl
in
cltd
pop
push
add
sbb
add
cmpsl
out
fistpll
push
pop
rep
ljmp
or
test
adc
sbb
xorb
sub
cmpb
arpl
mov
aad
dec
or
bound
int
mov
add
pop
jp
cmpsb
outsb
push
add
jbe
jno
xchg
mov
andl
and
cli
call
mov
cmc
clc
mov
int
iret
aam
fwait
adc
push
mov
lds
dec
jl
aam
jae
or
push
leave
cmc
testl
out
pop
sub
jmp
pop
jg
mov
push
notl
or
adc
xchg
adc
push
shrl
sub
sbb
adc
ljmp
adc
fcoml
xchg
pop
popf
daa
fisubl
jb
push
cmp
jge
pop
imul
mov
icebp
int3
imul
jnp
cmpsb
rorb
or
inc
ja
mov
jg
mov
adc
push
xchg
inc
fildll
push
xor
leave
mov
pop
xor
push
pushl
ret
fldpi
sub
scas
add
xlat
sub
pop
xlat
sub
sbb
in
push
cmovnp
jecxz
mov
xor
aaa
cs
ljmp
inc
pop
fldt
mov
jno
xor
dec
stos
jb
adc
sbb
push
push
xor
rcrb
cmp
push
cmp
pop
adc
addr16
mov
fiaddl
jg
jo
jecxz
or
or
sti
fcom
or
mov
jne
mov
push
flds
xchg
sub
int3
cmpb
or
mov
adc
mov
ss
sbb
fistpll
pop
loope
in
add
sbb
sarb
add
pop
cmp
push
cmc
push
cld
es
add
in
ret
mov
push
mov
out
daa
pop
in
fwait
mov
add
cmp
push
and
sahf
or
jle
adc
inc
orb
mov
sbb
stos
mov
outsl
adc
ss
or
xchg
sbb
mov
mov
enter
sbb
jecxz
dec
xor
adc
sub
or
pushf
and
std
jb
std
mov
mov
add
push
and
inc
loope
add
addl
xlat
bnd
xchg
out
repnz
push
out
movsb
stos
xchg
lods
outsb
test
jb
fimuls
cmp
rolw
dec
lret
adc
mov
arpl
loop
pop
add
push
out
jne
daa
dec
ds
fiadds
xchg
push
testb
mov
mov
jo
loope
xchg
imul
xlat
pop
or
aam
mov
ljmp
cmp
cmpsb
jbe
push
sbb
lret
mov
int
loopne
mov
sbb
dec
loope
jl
lcall
lret
sbb
ja
outsb
jnp
pop
iret
loop
clc
mov
insl
lcall
cwtl
adc
jne
mov
mov
lock
adc
cltd
js
aas
adc
ror
ja
fisttpll
mov
push
std
jmp
fs
test
jecxz
test
movsl
jnp
in
out
in
push
testb
mov
ljmp
movsl
sbb
inc
jbe
gs
xchg
aaa
mov
insl
jb
mov
add
cmp
mov
sti
cmp
mov
mov
movsl
mov
adc
xor
fcompl
add
inc
stos
scas
lcall
sbb
add
loope
fwait
fs
mov
push
mov
push
sbb
xor
pop
push
cmp
cmp
lock
out
jg
mov
push
mov
push
push
push
clc
adc
data16
xor
mov
andb
cld
nop
or
add
add
jge
out
and
or
pop
add
mov
pop
sub
scas
scas
iret
push
fisttpll
and
in
orl
or
sub
xor
enter
cltd
push
js
testb
ficomps
mov
and
movsl
sub
sbb
xor
or
mov
push
xchg
fsubl
jne
out
xchg
ja
test
or
cwtd
aaa
jle
rep
mov
xchg
dec
sub
add
jecxz
mov
ret
add
push
idivl
bound
pop
mov
scas
dec
push
aam
pop
outsl
mov
sbbb
pop
sahf
xchg
xchg
jmp
push
jae
dec
mov
and
fwait
or
vphsubbw
push
addb
sbb
xor
dec
push
stos
xchg
cmp
sbb
daa
inc
cmp
push
std
pop
cli
push
fcompl
jb
jne
sti
leave
or
fiaddl
pop
fdivs
dec
dec
adc
lret
jno
popa
int3
stos
bound
xchg
mov
scas
or
data16
js
xchg
call
out
sbb
jl
lds
ss
pop
orb
std
adc
jp
mov
das
je
movsb
xchg
out
cmp
aad
pop
loopne
mov
or
lret
mov
hlt
ficompl
push
divl
aad
data16
sahf
js
push
pop
jmp
in
ds
pop
ret
js
mov
push
sub
pop
pop
and
cmp
pop
jo
push
pop
adc
sti
jl
xor
jle
aam
test
xlat
and
incl
push
pop
es
rorb
sbb
push
das
pop
pop
jae
and
ja
decl
jne
loop
mov
jmp
aas
and
rorb
insb
jbe
shl
jl
push
inc
or
shll
pop
and
cmc
inc
test
pop
bound
popl
pusha
dec
cmp
outsl
mov
cmp
pop
outsb
mov
out
pop
jae
rcrb
pop
inc
jne
mov
push
inc
push
mov
adcb
add
cmpb
pushf
bound
push
adc
push
mov
mov
adc
cmp
add
push
rcr
or
fldl
int3
test
test
and
push
dec
mov
mov
shrb
jecxz
sub
mov
jae
shr
jle
cld
mov
mov
dec
xlat
ljmp
rorl
insl
jnp
int3
cmp
das
lods
xchg
pop
imull
jle
sbb
int
imul
out
int
xchg
je
jle
mov
sbb
jae
cli
stos
cmp
sahf
outsl
pop
sbb
je
pop
test
popa
enter
subl
push
sbb
xor
mov
sbb
outsb
inc
dec
jle
mov
icebp
inc
or
mov
movsl
inc
cmpl
or
mov
ds
fadds
pop
bnd
ror
mov
das
sbb
fistpl
mov
pop
push
enter
or
hlt
pushf
pushw
xor
test
in
add
add
jp
dec
lret
mov
in
pop
dec
adc
push
sub
or
xor
lods
mov
jle
int3
xchg
mov
push
adc
dec
pop
jbe
movsb
cld
out
push
lods
orb
and
cmp
sbb
push
push
lahf
xor
cmp
push
dec
fiaddl
cld
push
pop
dec
lret
mov
jg
xchg
fisubrl
sub
or
cmpsl
adc
add
mov
mov
xlat
pop
mov
xor
xchg
mov
mov
sbb
in
lret
add
or
sub
or
jnp
push
or
jecxz
sub
cmovg
and
add
mov
cmp
xlat
sbb
inc
mov
push
mov
inc
loop
addl
or
pop
pop
js
cmp
pop
leave
sub
mov
dec
pusha
les
push
and
cmp
stc
or
mov
dec
es
adc
in
xchg
aad
je
pop
and
adc
pop
push
mov
sbb
mov
in
push
sub
rorb
add
adc
je
ss
xlat
call
sub
fisubrs
out
daa
inc
es
call
int3
pop
cmpsb
aam
inc
add
dec
xchg
or
mov
ds
repnz
xchg
repnz
aaa
ret
jae
mov
push
xor
xor
push
fwait
xor
clc
cmp
loope
aas
pop
dec
out
lahf
push
sub
mov
negb
ss
aas
addl
aad
xlat
sbb
int
cli
add
inc
in
sahf
int3
pushf
xor
dec
testb
or
cmpsb
xchg
cmp
into
or
jno
outsb
movsl
mov
pushf
or
js
xchg
push
subb
cli
pop
das
pop
mov
insl
rorl
cmp
dec
mov
mov
insl
daa
int3
int3
sar
mov
push
and
cld
cmpsb
movsl
mov
push
sbb
inc
int3
movsl
ret
outsb
repz
fbld
scas
lahf
fidivrs
push
mov
sbb
mov
jle
push
mov
test
xor
out
xchg
pop
dec
inc
sub
pop
dec
lahf
outsl
xor
test
dec
pop
xchg
loopne
push
daa
pop
push
or
in
je
out
jl
scas
es
xchg
hlt
pop
mov
int3
js
jbe
aaa
ret
mov
or
dec
adc
mov
jb
or
cmp
pop
or
filds
lea
cmp
push
aaa
xchg
jle
aas
sbb
cmp
inc
ss
outsb
inc
les
dec
shrb
into
dec
cmp
dec
jnp
mov
lock
in
jnp
mov
mov
add
push
out
aaa
cmp
fs
out
and
stos
div
xlat
adc
mov
lahf
push
nop
cmp
test
ljmp
repnz
push
push
fidivrs
adc
es
cli
cmp
sarb
les
xchg
cs
outsb
fwait
das
loop
fcmovne
rcll
insl
push
dec
cmp
pop
les
jmp
ret
and
dec
xchg
cmpsb
bound
ret
ret
xlat
adc
ja
push
pop
shrl
push
fwait
push
aam
mov
bound
repz
xchg
nop
jbe
add
subl
adc
jbe
out
inc
shlb
push
mov
push
pop
jle
xor
cmp
jo
sarb
push
push
outsb
jg
adc
xchg
xchg
repz
mov
add
adcl
sub
xchg
loopne
xchg
rcrl
cltd
adc
add
hlt
fdivs
repz
or
xlat
sub
xor
aas
dec
or
cli
in
fstl
adc
movsb
or
mov
jle
jle
dec
pop
fimull
std
xchg
sbb
mov
push
ficompl
das
cmp
pop
jle
sub
and
sub
inc
int3
xchg
pop
push
sbb
xchg
cmp
xchg
xchg
fwait
dec
lds
std
subl
push
xor
rorb
imull
dec
jnp
mov
cmpsb
xor
mov
add
dec
jnp
xchg
cmpsb
aaa
inc
lcall
add
or
xchg
sub
inc
dec
xchg
stos
or
xlat
push
out
add
subl
mov
inc
emms
test
in
ficompl
add
mov
sbbb
in
repnz
in
sbb
adc
and
jae
mov
add
iret
les
imul
rcr
cmp
aaa
and
jecxz
mov
shld
mov
fcoms
pop
mov
sub
out
mov
jo
shlb
inc
mov
xchg
rolb
clc
fnsave
inc
shlb
push
add
adc
mov
cmp
mov
mov
leave
outsb
jecxz
fsubrl
lret
add
prefetchw
and
push
fstpl
mov
lret
mov
dec
push
addl
outsb
mov
das
repz
add
and
pop
daa
aaa
mov
fs
cli
mov
movsl
push
lcall
in
sub
dec
mov
outsl
lods
mov
mov
in
push
xlat
sbb
popa
or
cli
lcallw
sar
push
int3
mov
jnp
pop
and
shrl
mov
fs
jb
xchg
lea
adc
aaa
xchg
mov
add
inc
movsl
ret
in
inc
sub
in
fldenv
loope
sbb
xor
jl
push
data16
jmp
sub
or
sbb
in
mov
nop
dec
lcall
xchg
fwait
in
stos
pop
jp
sub
es
sahf
call
and
push
sahf
xor
sub
lahf
mov
cmpsl
cld
popf
pop
lret
push
pop
fcomps
pop
dec
mov
adc
inc
push
sbb
cmp
dec
pop
mov
inc
push
cwtl
inc
adc
jge
iret
add
out
or
inc
add
xchg
sbb
jle
sbb
test
inc
dec
call
jg
loop
sbb
sbb
mov
lock
and
mov
xorl
cmp
enter
and
fdivs
push
or
xor
aam
dec
adc
testl
stc
enter
jmp
pop
push
add
xchg
or
aam
cmc
jecxz
mov
cwtl
mov
xchg
sbb
dec
dec
jno
xlat
add
mov
fisubs
jae
movsl
cmp
xchg
pop
sub
jle
xchg
cmp
and
ss
out
sbb
jl
lret
lahf
jo
sarl
cwtl
rcrl
mov
mov
pop
daa
push
mov
dec
sub
lahf
les
outsl
jne
imul
push
mov
mov
sbb
sub
movsl
dec
sbb
sarb
fisttpl
add
dec
jmp
shr
insl
or
sub
mov
jo
es
scas
add
xchg
xor
lds
aaa
stos
popf
movsl
stc
jg
frstor
cmpb
cmp
dec
fstps
mov
adc
mov
negl
jo
pop
cmp
hlt
jbe
jno
inc
dec
shrb
push
add
mov
call
add
ftst
push
pop
cmp
pop
inc
adc
pop
pop
sub
sub
jno
mov
pop
lret
or
movsl
imul
mov
jae
jl
loop
sub
enter
lods
dec
or
imul
in
or
pop
jecxz
popf
outsl
mov
or
fisttps
push
lock
in
sbb
fwait
adc
mov
mov
in
inc
fstps
fs
adc
hlt
adc
lcall
fcmovnb
cmp
in
cwtl
mov
cwtl
lea
outsl
lds
out
lcall
jo
adc
lea
add
aas
idivl
pushf
in
sbb
mov
mov
cmpsb
arpl
cltd
mov
xchg
xchg
nop
pop
jle
call
int
and
movl
push
pop
sbb
xor
mov
cmp
pusha
mov
sbb
mov
jge
pop
subl
add
or
push
jae
jae
jge
pop
cmp
pop
out
mov
ds
enter
daa
dec
xchg
outsl
xchg
jle
sbb
push
adc
mov
jno
xchg
xchg
enter
filds
ds
push
inc
rorl
aas
pop
fwait
mov
addr16
outsb
ja
add
mov
adc
loopne
test
les
xor
movsb
icebp
in
cs
jge
in
xchg
push
sbb
inc
sbb
mov
in
and
hlt
or
adc
fwait
jge
repz
aam
mov
xchg
or
add
pusha
into
jle
je
push
inc
pop
ljmp
fwait
aam
out
mov
sub
push
lret
jo
das
lods
add
mov
ljmp
aas
dec
imul
or
daa
or
pop
pop
sub
insl
xor
push
movsl
aad
dec
rcrl
cmp
push
idivl
enter
pop
mov
mov
fwait
ret
imul
mov
daa
add
mov
adc
adc
sub
sub
inc
pop
push
mov
pop
les
pop
cmpsb
ficompl
xlat
stos
outsb
xor
dec
pop
pop
out
inc
xchg
andb
adc
das
test
int
out
ja
push
mov
mov
dec
mov
mov
add
push
cld
and
scas
insl
lods
xchg
das
sbb
inc
push
jge
cmp
pop
iret
dec
fsubl
fsubrs
rcrl
mov
pop
aad
jg
cwtl
jne
pop
out
jno
ficompl
repnz
jle
sbb
and
xor
dec
jb
mull
mov
dec
sbb
js
pop
insb
ja
popa
movsl
ja
daa
pop
repnz
add
sarl
sbb
xchg
xchg
popf
jae
ret
push
jle
adc
ljmp
pop
jle
lahf
and
cli
arpl
lret
fs
xor
sbb
or
test
gs
mov
xlat
sti
fs
push
add
add
inc
mov
sbb
mov
js
sbb
mov
push
add
stc
popa
adc
leave
cmp
mov
fstpt
rorb
push
into
mov
int3
dec
add
jne
mov
inc
xchg
xor
ret
aas
into
jg
ret
add
cmp
jle
out
push
mov
cmp
pop
ss
pop
mov
fists
push
mul
jns,pn
hlt
sub
cs
or
sbb
pop
adc
aad
imul
mov
icebp
lock
insl
aad
mov
cmc
lea
adc
std
mov
aad
mov
xlat
or
repz
sub
std
dec
adc
add
lahf
mov
movsb
push
sbb
mov
ljmp
outsl
or
dec
dec
pop
xor
outsb
mov
inc
cs
and
or
push
aaa
dec
jecxz
fcoms
mov
push
inc
ja
outsl
inc
ret
pusha
push
clc
pop
pop
sub
pop
fdiv
mov
jp
dec
pop
pop
sub
sbb
scas
jne
mov
inc
and
aaa
and
pusha
jnp
dec
pushf
in
lret
push
outsl
ds
outsb
ret
dec
imul
pop
mov
adc
mov
dec
push
push
dec
enter
dec
lods
mov
xor
or
push
add
pop
push
cmp
sbb
fwait
int
fisubrs
cmp
or
notl
inc
mov
add
or
sbb
enter
fs
sti
std
push
mov
mov
test
push
les
mov
dec
cmc
repnz
popa
sbb
mov
dec
push
add
mov
ss
insl
and
mov
and
jmp
in
mov
aaa
aad
call
fstpt
stos
jecxz
arpl
push
loopne
orl
ret
aas
sub
sahf
lret
dec
lcall
jbe
adc
xchg
mov
iret
loop
loope
lret
mov
mov
movsl
lcall
mov
push
out
jle
xchg
pop
mov
lcall
out
dec
bound
pop
xor
ret
mov
jbe
jecxz
jmp
sub
dec
int
xchg
inc
or
cli
cmp
xchg
xor
add
and
lret
repz
push
test
adc
pop
fstl
sub
mov
mov
add
out
or
lods
or
out
hlt
xchg
movsl
push
jnp
or
cmpsb
sbb
pop
ljmp
jno
jle
adc
std
pop
pop
xchg
dec
sub
jg
pushf
jae
sbb
lret
out
jno
inc
ret
mov
xchg
adc
aaa
cmpsb
push
push
push
xor
dec
push
daa
add
add
xor
dec
pop
lcall
sahf
pop
jp
or
adc
aaa
push
jne
insb
int
imul
jo
jb
jbe
fucom
mov
or
enter
lods
jl
dec
push
outsl
iret
mov
pop
pop
mov
test
jne
add
inc
aas
popa
xchg
sub
dec
cli
sbb
out
lcall
nop
popf
push
pop
dec
rclb
aaa
cmpsb
dec
push
xor
dec
mulps
and
inc
paddusb
fcomps
mov
push
test
sub
repz
pop
sub
sub
sbb
mov
repz
mov
mov
scas
add
lods
add
xor
fistpll
repz
mov
sub
daa
xor
adc
jnp
loope
test
xor
repz
lods
cltd
cwtl
pop
dec
repz
punpckhwd
xchg
pushf
sub
pop
cmp
mov
xor
mov
mov
push
lret
fcmovnu
in
cmp
xor
adc
push
test
je
clc
cwtl
xor
int3
outsl
outsl
cmc
incb
je
pop
cwtl
add
and
lret
mov
or
sbb
lock
fcmove
in
repz
mov
inc
test
xchg
icebp
and
cwtl
pop
in
cli
xchg
jmp
jae
inc
popf
adc
jmp
inc
push
inc
add
fadds
and
xor
loop
sbb
push
mov
mov
mov
pop
cwtl
xchg
or
mov
sbb
popf
std
das
std
jae
lods
cwtl
mov
test
fistpl
mov
movsl
xchg
and
mov
iret
dec
xor
test
add
inc
push
repnz
cld
ds
imul
sbb
push
rcr
hlt
pop
push
xor
jge
sbb
jl
mov
push
and
inc
xor
test
push
aaa
jbe
fwait
ja
cld
jl
mov
pusha
and
dec
mov
stos
je
xchg
or
popf
lock
loopne
pop
dec
push
mov
fimuls
add
repnz
movsl
push
and
and
mov
mov
jbe
mov
or
dec
jbe
add
test
mov
jbe
fldcw
jle
gs
xor
fcmovnb
mov
in
mov
enter
sbb
cld
stos
pop
cmp
push
jl
pop
cmpsb
push
in
cs
cwtl
push
lcall
and
cmp
rclb
pop
cwtl
fs
fs
mov
push
daa
inc
fisttpl
sub
inc
fcmovnu
divl
in
add
jbe
dec
dec
testl
stos
out
or
lahf
jmp
add
lods
xor
into
pop
in
into
je
fcompl
mov
jo
fucomi
repnz
into
cmp
push
add
js
cli
xchg
aam
or
lods
add
sbb
push
ja
push
mov
rorb
pop
dec
or
aas
sbb
or
sbb
mov
out
loop
mov
sbb
jl
or
fisubs
loope
mov
sub
push
dec
in
adc
xor
scas
add
sub
fstpl
stos
orb
xor
sbb
cmp
cmp
adc
shll
daa
dec
faddl
push
xchg
pop
out
in
scas
and
in
pop
or
cmp
xchg
arpl
test
fcmovne
rorb
add
test
or
scas
mov
dec
push
sbb
sbb
dec
or
lret
or
sub
xor
mov
mov
jp
dec
icebp
shrb
mov
cmp
cmp
leave
aam
inc
lcall
sbb
push
sub
hlt
adc
dec
mov
lock
push
mov
lods
adc
loop
loope
jmp
jg
sbb
pop
pop
dec
sbb
int3
shlb
push
test
icebp
push
arpl
inc
fbstp
scas
adcb
cmp
add
xor
xchg
dec
mov
scas
sub
cli
and
mov
adc
cld
cmc
sbb
add
jp
or
les
out
jbe
inc
cmp
dec
icebp
repnz
pop
cmp
fwait
or
xchg
scas
dec
cmpsb
jecxz
sbb
imul
clc
es
push
addl
cmc
adc
lcall
xchg
jnp
pop
sub
lds
aas
shrb
xor
pop
sbb
push
adc
mov
dec
or
cmpsb
dec
movsl
push
ret
inc
add
ljmp
outsl
subl
fistps
adc
adc
inc
push
stc
sub
pop
ds
or
jp
mov
push
mov
cwtl
jl
punpcklwd
out
jns
popf
inc
dec
xchg
daa
xchg
mov
test
push
push
je
in
into
dec
jecxz
mov
loop
sti
enter
aad
test
int
mov
mov
testb
ret
dec
mov
jp
cmpl
loopne
lahf
sub
mov
push
dec
fdivl
outsl
pop
sub
fistl
jmp
je
jmp
dec
test
or
ficompl
cmp
or
imul
push
xchg
push
mov
adc
shrl
dec
mov
xchg
clc
fidivrs
subl
nop
imul
fwait
jge
and
lock
negl
pop
insb
ficomps
pop
dec
movsl
dec
mov
popf
or
arpl
pushf
sbb
loopne
lods
mov
cs
xor
fnstsw
add
mov
push
dec
push
jl
inc
jmp
jle
mov
and
or
mov
inc
loop
pop
mov
sahf
add
dec
fcomps
dec
push
cmp
cmp
bound
cli
adc
lret
int3
adc
add
add
push
add
sbb
mov
sub
std
xlat
jns
andl
or
jp
xchg
aad
dec
jg
mov
jbe
lahf
and
push
push
cs
je
popf
and
in
jmp
test
pop
test
addr16
gs
pop
inc
ljmp
leave
and
mov
mov
sahf
insb
hlt
data16
mov
xor
xorb
clc
syscall
mov
hlt
scas
js
push
int
or
inc
mov
jbe
leave
sub
mov
cli
add
pop
fwait
add
or
imul
jbe
out
push
jmp
pop
sbb
enter
fwait
aas
push
mov
sar
in
mov
daa
pop
mov
sahf
or
sub
push
push
jle
xor
jmp
in
addr16
rcrb
adc
in
push
hlt
enter
dec
in
lods
lock
fidivrs
clc
xchg
jno,pn
cwtl
or
test
dec
inc
sbb
inc
fdiv
data16
mov
dec
cmp
cmp
fdivrs
call
pop
lock
sbb
xor
outsb
cmp
dec
std
popf
adc
lea
jg
pop
aam
out
clc
imulb
imul
addr16
inc
dec
js
xchg
sub
cmp
adc
mov
mov
push
push
data16
inc
cmp
push
sub
in
imul
sub
mov
stc
inc
call
sbbl
std
lcall
je
sti
xor
and
xlat
aad
jle
int
popa
sbb
xchg
sahf
scas
dec
mov
incb
cmpsl
mov
imul
into
mov
pop
cmpsl
or
aas
adc
pop
fildll
loope
movsl
imul
imul
fwait
loopne
jg
out
xchg
bound
bound
xchg
das
or
lret
add
fcoml
push
cli
lret
push
shlb
sahf
das
mov
dec
lahf
adc
aas
fs
cmp
mov
or
adc
xchg
loop
push
and
xchg
hlt
cmp
daa
inc
lcall
stos
xor
ret
sbb
jno
mov
sbb
imul
add
repz
in
jae
scas
lahf
jns
jns
lret
iret
loop
scas
daa
pop
add
data16
dec
cmpl
inc
imul
push
sub
lcall
cmc
adc
sar
dec
sbb
dec
into
movsb
adc
cs
xchg
adc
gs
out
adc
ljmp
cmp
lea
or
pusha
jp
jne
loopne
pusha
mov
sbb
push
mov
ret
jb
pop
aam
fs
jb
push
dec
fnsetpm(287
sub
xchg
pop
push
and
in
out
lret
sbb
mov
mov
sti
sbb
loop
dec
hlt
repnz
into
pushf
pushf
out
mov
inc
cli
cmp
xchg
xor
push
cwtl
fnstsw
mov
pop
out
cltd
ret
divl
xchg
cmpsl
lret
adc
jp
fs
sbb
xor
push
jl
jecxz
dec
sub
jae
std
fsin
fdivrs
and
mov
add
mov
in
inc
jnp
mov
jecxz
test
mov
cli
push
mov
sarb
inc
mov
jge
sbb
notb
std
and
add
sbb
nop
fcomps
loop
ljmp
cmp
xchg
dec
shrl
cmp
xchg
and
sahf
sub
xlat
enter
icebp
ret
pop
jp
dec
lahf
inc
add
push
rcrb
mov
jb
inc
mov
push
dec
rcrl
scas
mov
pop
inc
add
cmpb
add
daa
or
push
push
jg
imul
lods
test
xor
adcb
mov
mov
popa
nop
jle
sbb
pop
jns
xor
mov
add
mov
xchg
outsb
inc
add
jmp
mov
lods
jp
push
sbb
pop
lods
lea
sub
pop
jp
roll
jae
cmp
enter
sub
loop
push
inc
push
mov
insb
and
out
adc
inc
ds
jmp
stos
cmpsl
push
movsb
test
sub
fsubs
pop
dec
fists
rclb
mov
nop
setge
cmp
add
push
out
into
cmp
pushf
jno
push
sbb
jno
scas
nop
fwait
pop
xor
dec
dec
cmp
xchg
pop
fst
dec
pop
and
repnz
enter
pop
inc
nop
xlat
fbld
dec
shrl
pop
in
push
sbb
jbe
push
fimuls
iret
sub
out
dec
rcrl
rorl
lcall
pop
push
xchg
movsl
sub
test
enter
push
sbb
and
int
sbb
mov
js
xor
mov
mov
add
mov
cmpsb
cwtl
mov
out
std
sbb
mov
daa
add
das
dec
xchg
add
sti
mov
dec
enter
mov
cmpsb
cwtl
das
dec
outsl
fdivs
mov
enter
dec
fsubrl
lds
sbb
jns
push
add
rclb
fmull
scas
jnp
sub
decb
sarl
adc
dec
ss
sub
data16
pop
in
incb
pop
xchg
loope
mov
std
leave
push
pop
push
repnz
insb
or
sbb
jbe
mov
flds
xchg
insl
nop
ds
dec
sbb
aad
pop
sbb
cmpsl
insl
xchg
out
in
loop
xor
xchg
nop
xchg
or
mov
js
pop
mov
dec
cs
movsl
pop
cli
sbb
aas
data16
filds
xor
adc
mov
cmp
sub
incl
pminsw
mov
lods
fnstenv
or
fwait
push
adc
icebp
mov
jnp
push
jg
imul
sbb
mov
in
loop
fiaddl
pop
andb
push
xor
sbb
stos
shlb
jl
mov
std
and
cmpsb
lds
pop
out
jbe
adc
sahf
push
ret
or
push
pop
pop
addr16
inc
sbb
cli
loope
cs
fmulp
flds
sbb
xor
xor
shrl
popf
dec
lcall
and
jge
ds
call
mov
pop
and
push
int
jne
pop
jl
push
sub
js
mov
cmp
lds
push
jbe
or
mov
int
adc
pop
fs
adc
loop
push
cmc
jle
dec
aam
adc
dec
mov
adc
and
xchg
rcrl
sbb
dec
sbb
jne
mov
nop
and
clc
mov
mov
sbb
fs
add
pop
cmpps
pop
cmp
or
movsb
add
daa
sub
les
push
mov
stos
pop
and
sub
push
cmp
mov
push
mov
jnp
imul
add
push
repnz
dec
mov
out
aaa
add
pop
idivb
mov
or
dec
not
xchg
arpl
xchg
jnp
in
hlt
lock
out
sub
hlt
xor
mov
sub
dec
fdivrp
or
ror
push
ficompl
aad
lahf
and
arpl
dec
adc
mov
xlat
cmp
aam
outsl
xchg
sub
mov
xchg
ficompl
dec
mov
inc
inc
push
sbb
int3
adc
sbb
loopne
outsb
add
cli
push
xchg
loope
xchg
or
ret
sub
movb
sahf
lret
lods
movsl
jp
sbb
dec
mov
in
xchg
movsb
das
add
dec
adc
pop
in
addl
adc
pop
inc
je
sub
stos
enter
arpl
sub
xor
mov
cmp
sbb
mov
push
mov
xor
movsb
ljmp
jge
pop
aam
fucom
pushf
stos
out
sub
lods
ds
cmp
and
or
gs
or
movsb
xchg
stos
add
outsb
push
push
mov
pop
mov
ja
jl
dec
es
outsb
add
das
push
xchg
mov
xor
subb
ret
xlat
dec
cli
jle
das
jb
push
and
sub
int
adc
pop
orps
push
mov
xchg
andl
icebp
push
and
dec
sbb
sbb
mov
in
add
and
mov
pop
imul
pop
js
sbb
mov
push
and
divl
push
inc
or
pop
fistl
mov
loopne
jno
jne
mov
xchg
mov
dec
jle
into
fisttps
xchg
dec
aad
add
fdivrs
lcall
or
mov
adcb
mov
lcall
test
pop
or
repz
jp
mov
sub
cwtl
rolb
mov
imul
inc
push
add
and
inc
cwtl
cmp
cmpsb
sbb
cltd
cld
data16
fwait
lcall
stos
mov
push
sahf
pop
bound
cmc
xchg
repz
inc
and
sbb
test
push
sbb
stos
sahf
imul
jp
sbb
mov
xor
jg
xchg
sub
fildll
mov
insl
adc
push
movsb
lret
xchg
aas
cwtl
sbb
push
pop
std
push
insb
scas
adc
pop
xor
sbb
shlb
and
sub
lods
adc
push
scas
or
test
cwtl
push
imul
fs
shrb
cmp
adc
xchg
pushf
push
mov
inc
cltd
sub
xchg
pushf
adc
pop
jbe
aad
and
testl
scas
shlb
addl
pop
outsb
or
lcall
cmp
loopne
push
adc
xchg
jmp
test
fadds
mov
inc
add
add
lods
push
sbb
sarb
rclb
push
push
add
push
and
mov
sub
iret
call
dec
imul
fists
ss
jl
icebp
shll
cmp
dec
dec
daa
out
shl
sbb
lahf
shrl
call
mov
sub
sub
in
mov
ficoms
repnz
adc
add
dec
add
lret
pop
aaa
xor
inc
mov
sbb
pop
mov
push
ret
and
cmc
jo
repz
inc
ret
and
sub
pop
mov
mov
pop
out
jne
mov
gs
xchg
and
movsb
inc
loope
pop
loope
xor
pop
inc
loop
mov
xor
in
push
and
sahf
inc
cmpsl
cmp
pop
dec
add
mov
xchg
mov
js
dec
cmp
movsl
cs
dec
int
adc
add
rorl
or
andl
push
adc
dec
adcl
cmp
clts
push
sbb
and
mov
clc
xchg
pop
or
push
movsl
inc
int3
mov
push
xchg
repnz
inc
xlat
fisttps
je
sub
xor
mov
in
in
enter
mov
in
rep
mov
mov
rcr
outsb
bound
js
aad
shll
mov
jae
sub
add
lock
push
daa
jne
out
decl
jnp
dec
rclb
xchg
xlat
mov
adc
lods
nop
pop
dec
pushf
ffreep
pop
push
sbb
jnp
outsb
hlt
and
pop
cwtl
xchg
add
hlt
cld
test
fxch
mov
inc
in
test
jl
cmp
xor
jg
xor
ja
mov
add
mov
bound
inc
lock
mov
cmc
dec
push
push
cmpsl
test
and
cli
mov
aaa
scas
push
lret
stc
cmpsb
imul
mov
jp
xor
mov
into
out
js
fcmovu
jno
mov
cmp
imul
push
cmpsb
mov
cmp
add
test
jns
cmc
mov
loop
out
cmpsb
inc
inc
and
pop
push
aam
dec
ljmp
jmp
cmp
jae
xchg
jb
dec
mov
cmpsl
lods
add
adc
or
shlb
sbb
repnz
enter
ror
fs
hlt
repnz
jne
sub
push
loope
mov
xor
leave
fwait
loop
or
xchg
int
les
fisttpll
sub
push
pop
or
jae
xor
jne
jbe
jno
mov
jg
push
aas
cmp
adc
ds
jb
addr16
shll
pop
insb
cmc
pop
call
psubd
push
mov
sbb
or
fbstp
lock
lock
jns
jae
mov
test
sbb
mov
loope
test
cli
fisubl
lahf
rol
mov
xchg
aas
fmulp
stos
jns
cmp
sbb
xor
lock
out
pop
inc
add
push
add
daa
cmp
push
pushf
xchg
push
out
push
xor
xchg
nop
ljmp
add
dec
mov
dec
pop
shll
mov
and
push
scas
cwtl
mov
xchg
sub
xor
jle
xor
aas
add
pop
lods
mov
mulb
shll
pop
movsl
icebp
fisubl
xor
jae
jmp
int
mov
pop
sbb
loope
mov
lods
push
jb
jle
xrelease
ficompl
jg
movsb
inc
cmpb
jns
cmpsb
xchg
lret
out
and
dec
cmp
mov
mov
out
enter
jno
cmp
mov
out
loop
cmp
cmc
pushf
jg
test
add
adc
fwait
test
xchg
xlat
lcall
lods
sub
mov
cli
cmp
mov
xlat
inc
lcall
cmp
xlat
movsl
das
cmpsb
push
sub
xchg
and
sbb
jb
cltd
jne
sub
js
into
mov
jge
mov
jle
mov
mov
outsl
aas
mov
lret
iret
int3
mov
fwait
add
es
ss
fcmovnbe
in
fninit
mov
mov
jne
ret
mov
fmuls
mov
cwtl
fisttps
aam
out
mov
sub
into
cld
cmp
add
cmp
or
or
fnstenv
nop
adc
stos
dec
rcll
ss
pop
mov
loope
pop
imull
addr16
enter
adc
adc
or
cmp
pop
or
push
jo
xlat
push
jg
mov
loope
fidivrs
sbb
fisttps
int
mov
add
push
mov
push
sub
xchg
jmp
mov
xchg
mov
out
adc
in
push
outsl
dec
cmc
pop
imul
loope
aas
std
fs
mov
scas
hlt
int3
xchg
mov
rcr
fldenv
xlat
xchg
dec
fisubs
mov
and
sbb
cwtl
push
mov
inc
dec
dec
cmc
outsb
bound
push
jg
adc
stos
mov
pop
sbb
fstpl
push
aad
stos
xor
sarl
cmp
mov
pop
lahf
jmp
xorb
mov
lret
fmull
cmp
pop
lods
sub
lret
adc
mov
psubusb
filds
push
mov
jo
sbb
loop
inc
or
dec
jle
adc
stc
pop
xor
cmp
loopne
stos
in
mov
pop
stos
sar
movb
xchg
dec
pop
mov
cmpsb
dec
jp
cs
int3
cmp
jbe
push
and
fdivrs
mov
es
xchg
out
push
cs
cltd
stc
push
xchg
mov
add
adc
sub
push
mov
add
mov
push
add
hlt
iret
sti
dec
int
mov
mov
rorl
repz
adc
push
iret
xchg
dec
fwait
fwait
inc
xchg
inc
pop
je
not
aam
mov
xor
add
ret
jg
into
dec
mov
sub
inc
out
rcl
adc
and
mov
mov
push
mov
neg
mov
js
pushf
adc
lock
leave
ret
mov
ds
and
addl
inc
negl
push
xchg
cltd
xor
scas
mov
xor
js
ds
outsb
sbb
xchg
jne
mov
in
out
lret
stc
ja
cs
fs
jecxz
mov
hlt
pop
xor
fisttps
lock
mov
and
test
clc
sub
jp
mov
out
jo
xor
xchg
cs
hlt
dec
imul
xor
mov
adc
dec
jp
clc
int
fdiv
xorl
and
ds
fst
pop
or
pop
mov
mov
imul
jb
mov
ja
aam
jl
or
cmp
dec
std
hlt
test
imul
rcrb
mov
mov
xor
mov
xchg
pop
xor
cvtpi2ps
mov
mov
inc
popa
shl
inc
insl
jmp
push
ja
mov
and
test
and
loop
mov
xlat
in
mov
popa
ret
clc
sub
stc
icebp
clc
dec
jnp
lock
mov
ret
xchg
pop
insb
popa
xchg
scas
mov
cmp
xchg
adc
add
popf
dec
out
push
pop
clc
add
or
inc
outsl
or
js
cmp
mov
das
cmp
adc
mov
ss
push
movsl
push
and
outsl
inc
aam
ss
sbb
dec
dec
int
xor
dec
sbb
sti
testl
mov
pop
fucomi
cs
mov
dec
loope
ret
push
aam
push
mov
pop
mov
dec
inc
movsb
lock
fmul
pop
mov
ds
inc
aas
and
or
pop
mov
inc
fimuls
cmpsb
adc
mov
mov
adc
sbb
subb
ss
popf
divl
in
cmp
add
mov
xor
or
mov
sub
mov
sub
sbb
mov
arpl
clc
and
repz
pop
jno
mov
stc
sbb
daa
push
inc
xor
xor
cwtl
mov
pop
sub
jne
sub
mov
call
addr16
xchg
js
adc
inc
lock
cmp
mov
jge
pop
repnz
cmp
push
into
adc
dec
xchg
xor
shlb
addr16
std
in
je
lea
dec
stc
pop
addl
mov
adc
push
xlat
data16
lds
add
cli
mov
bound
pop
push
jbe
fdivr
pop
fldt
sbb
mov
es
ljmp
lods
clc
mov
inc
jmp
outsl
rcrb
loopne
lods
clc
mov
daa
adc
imul
push
mulps
scas
add
mov
dec
fadd
dec
inc
push
cld
cmp
das
out
sti
repnz
dec
sub
jle
ljmp
lea
push
out
mov
test
shlb
in
sbb
jae
push
adc
pop
and
in
fmul
rcrb
leave
cs
lods
clc
mov
daa
adc
imul
jnp
pop
adc
cmpsb
jmp
dec
mov
dec
dec
jge
ja
fsubrl
dec
sbbb
xor
push
daa
dec
dec
push
jb
pop
inc
inc
pop
inc
ss
push
adc
enter
pop
enter
fistps
rcll
out
inc
xor
ds
jne
or
cmp
mov
dec
sub
sbb
hlt
test
outsl
ljmp
push
adc
test
xor
ds
sub
jae
stos
test
push
pop
ljmp
out
cmp
xlat
and
jnp
mov
pop
incb
mov
fstl
xor
mov
adc
or
mov
jmp
add
lret
jb
adc
jne
or
clc
aam
mov
jmp
push
jecxz
mov
int3
xor
pop
mov
lods
xchg
rcrl
dec
out
fstps
lcall
fs
inc
pop
jg
cmp
jecxz
cmp
dec
mov
test
push
leave
fisttpll
dec
loop
je
sub
push
and
push
daa
loop
lds
jnp
test
out
push
push
mov
pop
inc
xorl
movsb
data16
push
out
movsl
mov
loop
pop
adc
fisubl
mov
mov
adc
jnp
enter
xchg
xchg
out
in
sub
aas
add
popf
jle
mov
das
aaa
dec
ss
fistps
dec
rclb
push
ficomps
xor
and
or
cltd
or
or
ss
pushf
ret
pop
aam
ffree
ja
push
push
pop
imul
jne
scas
sbb
pop
ficomps
xchg
push
fwait
xchg
sbb
push
and
jne
iret
loop
negl
push
mov
fcompl
jp
outsb
imul
xchg
jne
sub
cwtl
gs
ss
mov
xchg
fmul
pop
sub
imul
mov
xor
sbb
adc
int3
lods
into
out
inc
loopne
ja
insl
sub
pop
jae
dec
out
fistpll
xor
jge
fimull
out
fmuls
push
and
push
jp
xchg
ds
lcall
sarb
fstpt
push
pop
mov
mov
jae
ficoml
inc
int3
imul
jmp
cmpsl
mov
sbb
hlt
outsb
push
cwtl
nop
out
jg
subl
cmc
push
mov
xlat
daa
in
stc
sub
xchg
imul
dec
xor
fwait
cvttps2pi
xor
jnp
in
outsl
push
mov
das
xor
mov
or
outsb
cmp
push
sbb
mov
notl
push
push
fcomip
sbb
adcb
scas
int
xor
mov
in
jp
pop
scas
mov
and
or
outsb
push
add
cmpsb
adc
and
scas
mov
dec
xchg
and
or
mov
mov
fisubs
mov
stc
xor
push
mov
mov
xchg
loopne
pushf
mov
pop
xchg
push
adc
cmp
inc
jbe
imul
adc
out
push
hlt
divl
xlat
mov
cwtl
mov
push
jae
sbb
cmp
pop
mov
or
inc
loopne
aaa
int3
xor
dec
add
int3
adc
and
imul
incb
cmpsl
sbb
xchg
mov
xor
loope
shrl
orl
pushf
pop
dec
push
xor
cli
cmpsb
sbb
imul
pop
aaa
pusha
adc
and
jge
lods
fsts
inc
test
add
push
lcall
mov
mov
lcall
sub
jnp
jb
mov
js
mov
loop
cwtl
cmp
adc
and
out
mov
xchg
xchg
jle
cltd
lret
and
inc
xchg
sbb
mov
in
or
mov
pop
push
enter
jae
fstpt
out
mov
inc
cli
push
out
pop
add
pop
rolb
jle
adc
push
add
push
push
or
in
push
mov
jne
inc
lret
cs
std
sub
call
repnz
sbb
iret
inc
mov
or
clc
repz
sbb
mov
pop
inc
xchg
push
or
push
pop
dec
testb
outsb
pop
xchg
or
pop
sub
push
dec
and
sub
adc
push
jg
cltd
dec
dec
repnz
mov
mov
push
jb
mov
es
rorb
mov
or
add
xchg
aaa
dec
mov
mov
arpl
push
lret
lahf
fs
inc
mov
movsl
dec
dec
and
inc
ljmp
fdivp
outsl
jge
cmp
cmp
jecxz
rcrl
dec
js
add
push
mov
jg
nop
cmp
or
adc
outsb
pop
cli
add
mov
push
pop
addr16
jge
mov
and
mov
xchg
jge
insb
pop
stc
mov
aam
sbb
cs
mov
jns
or
nopl
dec
add
cmp
ret
lea
pop
xchg
sbb
xor
mov
sub
xchg
mov
loopne
xor
xchg
andl
test
adc
mov
jmp
pop
xor
sbb
adc
cmp
jge
mov
sbb
scas
push
aas
fwait
xchg
xor
pusha
mov
xchg
jnp
mov
mov
in
ljmp
imul
mov
out
rclb
sbb
clc
pop
dec
out
mov
cmpsb
rol
adc
scas
cmp
inc
xchg
lret
stos
jg
dec
mov
fsubrs
test
out
mov
aam
mov
add
push
add
jge
mov
js
fmuls
push
lret
fwait
mov
inc
insb
in
jnp
mov
xchg
sbb
sahf
movsb
cli
xlat
mov
mov
rcl
pop
lds
jge
mov
mov
push
cmpsb
mov
insl
pop
add
push
jl
fsts
mov
push
dec
mov
jo
scas
mov
fadds
js
ja
arpl
ret
cs
push
cmc
push
mov
out
mov
mov
cmp
repz
adc
sub
int
mov
or
out
xor
inc
xorb
stos
mov
pop
pop
mov
icebp
ret
adc
rcl
xlat
jmp
outsb
mov
shrl
insb
pop
lret
cmp
mov
ja
nop
push
push
test
adc
dec
push
mov
xorl
fistl
push
xor
cmp
xor
lods
xlat
bound
inc
dec
rcr
and
jne
mov
xlat
xchg
xor
fdiv
mov
jle
ret
test
jno
jo
or
fiaddl
add
pop
push
addr16
jge
mov
xor
cltd
or
or
movsl
insb
mov
stos
and
inc
sbb
or
testl
dec
test
dec
mov
mov
mov
int3
lea
les
and
dec
sub
add
adc
jge
mov
push
xor
ja
jge
add
dec
add
jne
test
jp
add
lret
in
movsb
out
mov
out
push
fs
scas
vrsqrtss
mov
cmp
rcll
inc
sbb
xchg
out
jle
sar
xor
arpl
mov
adc
test
enter
enter
imul
js
jge
out
pop
icebp
jle
jo
jp
jb
arpl
xor
lods
cmp
sbb
popf
fsubrl
rcll
insb
nop
xchg
inc
jne
call
popa
cmp
inc
test
into
addr16
out
push
stos
lahf
inc
ljmp
push
paddq
mov
pop
xor
pop
stos
dec
pop
mov
xor
filds
pop
int
fsubs
mov
inc
push
sti
push
and
dec
push
loopne
xor
dec
cli
mov
outsl
mov
adc
insb
mov
xor
xor
xchg
inc
das
or
pop
sti
push
push
and
imul
adc
lea
xchg
cmp
or
jns
pop
sbb
add
out
xchg
cltd
daa
icebp
xchg
enter
cmp
and
sbb
int3
icebp
imul
dec
cld
xor
out
xchg
das
call
pop
jb
sahf
adc
mov
pop
lret
mov
or
jns
pushf
addr16
xchg
or
xchg
add
cmp
adc
test
call
inc
ret
pop
lahf
sub
mov
ss
lahf
cmp
mov
ss
call
xor
mov
or
mov
lock
xor
push
sbb
pop
loope
mov
cld
mov
repnz
pop
rcl
pop
dec
je
push
movhps
push
iret
outsl
push
push
or
mov
cwtl
mov
push
jbe
xlat
ret
out
rcrl
mov
xor
cmp
and
lea
cmp
das
fstps
sahf
fabs
into
mov
mov
cmove
and
mov
pop
test
push
push
ror
jbe
pop
push
stos
push
mov
sbb
jmp
inc
lret
scas
xlat
mov
icebp
cld
push
test
add
sub
test
cli
and
int3
or
decl
jae
mov
or
in
push
movsb
dec
adc
out
into
leave
enter
stc
push
outsb
pop
push
sbb
pop
xor
push
mov
pop
dec
inc
sub
rorb
cmpsl
fs
aad
push
add
push
pop
shll
ja
push
xor
mov
popa
repnz
inc
and
leave
add
adc
jne
clc
mov
sub
ljmp
imul
jle
sbb
mov
negb
cmc
js
scas
leave
or
enter
stos
mov
loopne
lret
adc
xor
pop
fcmovbe
repz
jno
inc
dec
fists
push
orl
push
ficomps
pusha
jecxz
pop
arpl
imul
mov
es
addb
sbbb
and
cmp
add
fldcw
fs
push
hlt
orb
adc
lahf
out
roll
jnp
cwtl
fs
rorl
out
sub
outsl
cmp
insb
test
cmpsb
pop
mov
in
sub
mull
sbb
aaa
rorb
out
push
lcall
ret
xor
negl
and
das
ficoml
or
pop
sub
xchg
inc
push
subb
add
into
or
fisubrl
or
mov
mov
push
or
mov
sbb
push
jge
lret
sub
inc
out
outsl
push
ljmp
dec
or
loope
mov
pop
sub
shl
push
dec
adc
lahf
jge
nopl
rcr
jecxz
add
or
jg
xor
popa
movsb
cmp
loop
dec
in
cld
mov
jl
mov
nop
divl
push
jecxz
xor
dec
cli
stc
jecxz
mov
add
sbb
lahf
pop
pusha
into
fninit
ds
mov
jnp
jg
cmp
std
test
dec
cmp
pop
aaa
jo
inc
lret
inc
outsb
addb
popf
push
cmp
push
gs
es
add
hlt
rorb
add
xor
push
adc
mov
into
add
xor
xchg
dec
fiaddl
mov
sbb
add
mov
pop
or
seto
sarb
xchg
or
fsts
cmpsl
add
outsb
jle
jp
filds
cmpsb
loope
add
out
add
sbb
mov
testl
mov
cmpsl
pop
pushf
jmp
pop
out
xchg
pop
inc
in
std
pop
sbb
fstpl
sbb
in
imul
insb
xor
ds
fwait
std
es
push
or
sub
sub
scas
aam
dec
icebp
push
add
outsb
dec
outsl
cwtl
push
or
insl
inc
push
ret
cmp
test
test
shl
jb,pt
sbb
push
negl
push
testb
mov
std
and
and
cli
add
mov
std
cs
xor
addr16
mov
pusha
push
ss
jge
fwait
and
mov
pop
jle
aam
dec
dec
dec
sub
inc
mov
sub
mov
pop
jb
or
mov
lea
push
xchg
adc
out
leave
rcll
jge
jne
cltd
lret
sar
mov
or
lret
add
call
mov
lds
dec
push
jg
pop
mov
mov
shll
sbb
and
fbld
push
xor
add
xchg
out
sbb
add
sbb
in
neg
or
push
dec
xor
xchg
cmp
arpl
out
mov
jmp
dec
dec
mov
xchg
mov
push
popf
pop
dec
jae
dec
fimull
or
ficoml
movsl
hlt
mov
cli
mov
ds
mov
mov
cmpsb
dec
out
arpl
aas
mov
shrl
jmp
pop
mov
cmpsl
loopne
pop
adc
sub
mov
clc
xchg
push
arpl
mov
es
loop
jmp
dec
add
aaa
rorb
pop
mov
cwtl
movsl
fisttpl
in
add
cmpsb
cs
cmpsl
xchg
clc
pop
inc
inc
les
jns
lret
aaa
outsl
add
jp
mov
push
xchg
stc
push
cmp
dec
outsl
push
jnp
shl
ja
push
movsl
fistpl
mov
cmp
stos
push
mov
cmpsb
dec
jg
dec
dec
adc
lret
push
jge
xlat
shll
mov
sbb
xor
mov
sbb
adc
aaa
add
imul
adc
dec
ret
adc
stc
rcll
repz
mov
mov
xor
mov
adcl
out
ja
ret
dec
jns
testb
les
cmpsl
or
gs
popf
test
xchg
jecxz
push
mov
jecxz
es
pop
cmpsb
push
jle
scas
dec
push
pop
xchg
dec
jmp
jnp
mov
add
adc
pop
popf
xchg
pop
insl
mov
sub
fdivrl
out
es
pusha
rol
xchg
xlat
mov
test
cmp
out
jae
push
mov
adc
sub
pushf
xor
popf
inc
inc
mov
xchg
xor
mov
ljmp
mov
add
pop
adc
arpl
jo
orl
mov
jbe
xchg
push
push
jnp
test
sahf
test
dec
cmp
sub
push
mov
pop
jb
inc
ja
jne
inc
imulb
sub
andb
pop
imul
mov
lret
xchg
xchg
scas
dec
stc
mov
call
pusha
lret
ret
push
cli
xchg
xlat
xor
push
inc
mov
and
fmuls
repnz
xlat
mov
jecxz
cli
ficomps
push
push
cld
mov
sbb
fidivs
sarb
pop
das
push
data16
add
mov
and
xchg
leave
mov
scas
subl
sbb
mov
pop
stc
xchg
jl
xchg
imul
aaa
daa
adc
fsub
cmc
add
dec
mov
jbe
std
push
repz
add
out
jmp
out
stc
popa
std
cmp
xchg
dec
imul
inc
inc
dec
xchg
add
dec
stos
add
adc
and
mov
scas
pop
lock
sub
or
dec
hlt
adc
dec
repnz
lahf
pop
nop
jecxz
add
sbb
insl
jbe
add
jbe
push
pop
addr16
or
push
dec
push
push
push
lea
sbb
or
jle
sbb
push
loop
inc
loop
in
or
xchg
sub
xlat
xchg
decb
or
imul
in
push
jo
push
clc
xchg
pop
push
popf
pop
push
jp
mov
imul
sahf
les
add
pop
stos
cli
jae
push
mov
adc
dec
push
cli
ljmp
std
adc
adc
lret
fadds
mov
sti
aaa
push
or
divl
outsl
and
fabs
pop
int
rclb
in
jp
dec
sbb
adc
cmp
clc
stos
cmp
push
mov
dec
stos
imul
movsl
pop
icebp
out
cmp
in
adc
addr16
cmp
loop
cwtl
mov
inc
jle
xchg
jo
out
test
stos
adc
cli
int3
cs
or
stc
sarb
push
ja
xor
ljmp
fdivrl
mov
pop
pop
jns
jge
inc
fwait
push
icebp
pop
mov
jge
mov
or
into
fwait
sbb
insl
pop
jns
adc
sbb
adc
imul
scas
inc
or
adc
dec
mov
adc
sub
rcrb
pop
xchg
xor
cmp
stos
dec
mov
pop
repnz
jb
cli
cmp
xor
push
adc
aas
scas
mov
adc
and
les
fs
push
add
jo
add
clc
push
int
lret
test
rol
scas
or
add
scas
aas
ds
cmp
cltd
addr16
js,pt
enter
mov
orb
sub
add
sbb
sbb
or
fistps
lcall
hlt
fmull
cltd
iret
fisubl
ss
rcl
cli
pusha
repz
push
clc
inc
mov
pop
icebp
ret
and
mov
jg
mov
push
lret
pop
xchg
and
es
or
push
les
xchg
mov
rol
cs
jg
dec
es
inc
xchg
pmaxub
cld
aam
jae
inc
pop
sbb
loop
xchg
mov
mov
outsl
iret
in
mov
dec
push
cmp
pop
loope
popf
and
jbe
sub
push
push
cmp
clc
je
and
testb
test
or
dec
andl
sbb
dec
data16
movsl
cmp
dec
xchg
push
push
dec
movsb
push
sbb
mov
dec
lret
into
inc
imul
cs
clc
dec
push
inc
mov
in
sbb
inc
je
imul
lods
adc
sub
fistpl
cmp
dec
repnz
incb
push
lcall
dec
adc
cmp
into
or
scas
cmp
ljmp
inc
jg
xor
stos
fidivs
int
push
push
sbb
iret
fldt
stos
inc
cmpl
loopne
fdivrp
addr16
notb
jb
inc
jae
insb
fldt
cltd
test
daa
test
dec
andl
inc
dec
pop
mov
test
cmp
lods
dec
push
dec
pop
push
pop
push
lea
adc
cmpsb
mov
add
mov
mulb
mov
jne
test
jo
imul
inc
lret
repnz
cmpb
mov
adc
sbb
sbb
stos
inc
movzbl
fsubs
bound
xor
movsb
lock
sbb
cmpsb
mov
jmp
mov
imul
jmp
inc
sub
pop
push
fwait
lock
pop
jae
out
jns
lret
notl
jno
sub
es
repnz
popf
mov
dec
pop
es
push
jae
or
out
sarl
ficoms
pushf
xchg
pusha
and
xor
xchg
push
xor
or
rcl
xchg
add
movb
xchg
push
pop
or
fildl
imul
push
mov
int
push
xor
das
inc
adc
repz
scas
jno
or
cltd
mov
stos
add
fnsave
cmp
xor
or
jne
into
in
dec
xor
ficoms
pop
daa
clc
cmp
notl
and
clc
stc
es
fwait
rclb
movsl
mov
rorb
shrb
je
cld
mov
fwait
push
in
fs
mov
cld
into
or
scas
mov
mov
jg
adcl
sbb
sbb
fwait
mov
movsb
pop
movsb
out
push
mov
or
mov
xor
cwtl
mov
sbb
and
sarb
adc
aam
pop
shl
xor
jl
cmp
adc
dec
rorb
std
jp
pop
mov
lahf
subl
lcall
imul
sbbb
daa
in
data16
push
push
fisttpll
push
jg
pushf
aas
mov
mov
outsb
sub
rolw
pushf
push
test
aas
idivl
enter
mov
add
cwtl
add
gs
dec
adc
ret
push
cmpsb
xor
scas
sahf
je
push
andb
adc
mov
stos
popa
mov
adc
mov
adc
jne
in
mov
loope
fadd
sti
add
and
out
add
mov
dec
mov
inc
adc
push
aaa
in
icebp
cmp
inc
loope
xor
and
or
add
cmpsb
or
inc
ja
int3
xor
ret
jmp
mov
push
xchg
notb
outsb
or
add
pop
sbb
push
insl
inc
xchg
xchg
and
outsb
int3
or
repnz
je
dec
pop
ss
jbe
das
adc
mov
xor
xor
jae
stos
pop
mov
rcrb
xor
mov
clc
aaa
cltd
dec
rorl
pop
sub
or
nop
mov
push
cwtl
adc
push
in
mov
sub
je
das
lahf
jg
inc
mov
jne
or
out
clc
dec
dec
in
mov
pop
aaa
loope
dec
xchg
cmp
sbb
push
jge
imul
or
popf
mov
xlat
mov
dec
sbb
daa
jo
or
jae
icebp
aad
adc
orb
inc
inc
jg
fistps
adc
jl
psubsb
and
test
and
scas
sbbb
dec
mov
aaa
int3
stos
repz
sbb
dec
and
jae
mov
mov
aaa
jae
and
imul
loope
sbb
jb
add
test
mov
pop
dec
push
cmp
fdivrl
imul
stos
test
aad
push
jp
jns
mov
add
jecxz
aas
loop
fwait
sbb
cmp
dec
jecxz
pop
push
or
push
filds
adc
sub
cmp
push
or
and
loope
or
icebp
in
adc
jb
mov
mov
xor
xchg
std
out
pop
xor
xlat
inc
adc
mov
mov
dec
mov
jnp
in
lcall
cmp
in
imul
add
lds
mov
jns
ror
cmp
push
fimuls
add
adc
cmp
ljmp
pop
xchg
loope
inc
inc
js
jo
or
imul
pop
or
fs
mov
push
xchg
fsubrs
and
jg
bound
cs
and
lock
insl
notb
xchg
cmpsb
push
ds
xchg
sub
fs
add
dec
movsl
xor
and
mov
sub
gs
cmp
push
cwtl
cmpsl
cmp
idivb
jle
pop
dec
and
imul
inc
popf
mov
push
sbb
push
or
lods
mov
test
insl
pusha
std
push
repnz
and
fwait
lret
int3
cmp
mov
sub
cs
fisubs
xor
aas
xor
int
int3
mov
add
sahf
push
mov
add
or
jg
sbb
insl
lock
add
cmp
lahf
dec
sub
mov
aaa
adc
rclb
inc
sbb
fcomi
daa
xor
adc
and
lods
xchg
es
push
and
into
inc
repnz
add
sbb
sub
scas
dec
repnz
sti
fidivrl
jbe,pn
ret
jo
ds
mov
mov
sub
dec
in
sbb
push
lahf
clc
lea
xchg
and
inc
test
inc
jne
mov
fidivrl
mov
lcall
cs
mov
fcomps
sub
xor
cld
notb
pushf
inc
repnz
lret
xchg
jge
sbb
push
sti
pop
jns
sub
lahf
outsb
out
cs
es
xor
xchg
and
push
aad
add
js
imul
sbb
aam
pop
add
pop
mov
dec
shlb
ss
in
dec
cmp
cmp
adc
inc
xchg
push
cmp
sub
mov
ret
mov
daa
add
xlat
inc
into
push
ja
mov
testl
xor
adcb
iret
fsts
inc
cli
jo
pop
push
cmp
jp
push
push
sub
mov
ret
xchg
and
sbb
xlat
pushf
into
mov
cmp
into
enter
aas
rcrl
es
jnp
adc
mov
lds
xchg
jp
xchg
sub
xchg
cmp
sti
adc
lcall
les
out
mov
xchg
xchg
cmp
mov
bound
outsl
push
add
sub
fldt
push
mov
jns
cmp
jl
jp
add
mov
mov
sahf
pop
jecxz
pushf
adc
jmp
outsl
lret
cwtl
add
cs
pop
or
fsubrs
cwtl
inc
lcall
sub
adcl
mov
pusha
mov
mov
outsl
pop
mov
inc
lret
adc
pop
push
inc
lods
mov
pop
dec
ret
out
add
pop
mov
stc
lods
push
mov
jae
mov
jg
sbb
pusha
xlat
scas
mov
pop
fsub
imul
push
adc
adc
pop
or
jp
fwait
cmp
lret
mov
push
mov
nop
push
lcall
xlat
das
adc
pop
xchg
rclb
pop
lds
lods
repnz
pushf
into
push
and
or
push
inc
inc
je
sbb
jbe
aam
iret
pushf
imul
jb
pusha
add
pop
lret
pop
mov
push
mov
mov
xor
inc
xchg
lods
mov
mov
popf
outsb
out
je
push
aad
fisubs
insb
roll
push
sbb
xchg
mov
mul
jae
imul
pusha
shrb
or
inc
cmp
cmpsb
cmp
add
pop
jb
aas
das
push
test
adc
inc
dec
xchg
lds
push
shlb
push
arpl
push
scas
push
inc
adc
fs
push
push
daa
das
adc
mov
pop
jnp
xorl
scas
loopne
out
pop
pop
repnz
sub
test
pop
je
jne
movsb
lret
push
movd
pop
lret
add
sub
dec
sub
jno
fcoml
sub
xor
movsl
dec
pop
jns
inc
pushf
xchg
ds
add
jae
dec
xchg
dec
mov
and
test
dec
std
push
loopne
sub
movsl
ret
ss
adc
aam
into
mov
nop
sbb
xchg
lret
dec
jge
xchg
or
pop
arpl
or
xor
fcomps
lret
xchg
sub
ret
imul
adc
es
xor
fidivs
jecxz
jp
jnp
inc
jg
shrb
std
xlat
push
sbb
and
mov
jle
scas
add
into
repnz
jns
jae
int3
fmuls
loop
sub
lcall
sbb
in
daa
xor
cld
loopne
pop
add
loope
loop
mov
iret
sub
pop
or
dec
imul
mov
mov
sub
lods
stos
xor
jb
jg
daa
adc
jmp
adc
add
test
sub
rcll
icebp
pop
lcall
daa
xorl
mov
mov
movsl
fdivrs
out
in
repz
stos
mov
lea
ss
push
mov
ss
rorl
adc
sti
pushf
xchg
mov
mov
lret
fcompl
dec
repz
ja
ja
ja
cmpsl
fnsave
lret
mov
pop
sub
and
xor
pop
or
push
adc
jns
jb
push
xor
aam
movsl
sub
push
cmp
sub
add
mov
or
sbb
sbb
cltd
imul
scas
jb
xor
sbb
nop
xor
pop
psubd
mov
jge
pop
sahf
lcall
dec
aaa
cmc
push
push
rsqrtps
push
push
dec
into
pop
gs
sbb
pop
mov
lret
and
dec
jno
stos
shrb
xor
or
mov
xchg
jg
lahf
adcb
scas
push
gs
jg
movsl
pop
jp
push
mov
sbb
mov
or
mov
rolb
repnz
inc
mov
int3
inc
add
sbb
pushf
stos
test
negb
xor
inc
xchg
cmp
mov
jmp
add
fimuls
arpl
jecxz
push
pop
mov
sbb
mov
into
or
es
into
fs
or
das
jb
loopne
sub
jb
daa
enter
fwait
jae
dec
lahf
insb
jecxz
aas
adc
lods
mov
xchg
mov
push
pop
adc
ljmp
loope
ja
inc
pop
xor
mov
int
cltd
je
xor
jg
xorps
mov
fistpll
sub
js
add
xchg
xor
sbb
push
hlt
dec
xchg
inc
and
cmpl
xor
sub
mov
push
jmp
shrb
cmp
outsl
pop
inc
mov
add
andb
shlb
call
loop
repnz
dec
loope
cmc
aaa
loopne
fildl
arpl
push
push
xor
add
bound
imul
les
xor
aad
cli
ds
xchg
adc
jb
imul
xchg
push
mov
repz
or
sub
add
mov
call
cmc
mov
out
sub
dec
insb
pop
ret
clc
jb
cmp
lods
dec
pop
xor
hlt
push
cmp
push
add
jne
or
sbb
out
mov
jae
jns
hlt
jns
nop
cld
xor
shlb
mov
dec
pop
and
inc
dec
jmp
lahf
addr16
pop
aam
jp
insl
fcompl
and
push
data16
add
ds
gs
sub
pop
sub
mov
dec
xor
fadds
in
adc
sub
push
mov
adc
pushf
out
add
pop
adc
jnp
push
outsb
sarl
in
frstor
xlat
cmp
icebp
adc
jno
mov
jae
push
pop
mov
adc
pop
sbb
xor
xor
pop
out
cld
push
mov
and
lret
mov
cmp
jg
jb
aas
push
or
lret
pop
loopne
sbb
cmc
sbbb
subl
roll
and
insb
stos
outsl
int
jmp
push
mov
mov
jge
mov
pop
call
fwait
lea
fsub
hlt
inc
sub
push
or
bnd
push
daa
mov
dec
lods
inc
stos
mov
adc
fwait
loopne
pop
jmp
jge
add
xor
inc
ss
stos
scas
insb
inc
adc
jb
mov
sti
adc
inc
dec
jle
js
or
pop
cmp
enter
push
jo
out
jg
gs
fdivl
iret
jge
sbb
sub
and
repz
cli
pop
xorl
xchg
xor
add
dec
pop
sbb
cltd
sbb
decb
pop
loop
add
fists
arpl
push
push
sahf
mov
fmulp
nop
push
pop
mov
xchg
or
and
imul
mov
insb
adc
movsb
cmp
push
inc
push
pop
mov
inc
fwait
lods
push
bound
scas
ret
fcmovb
mov
or
ficompl
int3
jo
add
xchg
lret
aaa
xchg
push
jno
adc
add
pop
pop
les
add
dec
mov
push
dec
push
stos
push
or
popf
ja
scas
lret
or
cmp
push
push
out
cmp
push
push
sbb
lock
test
cmp
in
mov
inc
sbb
mov
ja
push
jg
fldl
pop
stc
add
mov
pop
dec
add
push
mov
push
sbbb
sbb
lret
loope
sbb
in
daa
xchg
mov
or
inc
test
test
mov
pop
xor
bound
lea
push
int3
shlb
cmp
ret
mov
cmpsl
xlat
pop
mov
pop
les
lahf
jecxz
and
outsb
inc
dec
clc
imul
jle
and
sub
dec
jmp
and
insl
mov
sub
dec
or
push
ret
cwtl
stos
cld
pop
fldenv
jo
cltd
lock
fimuls
lods
mov
or
or
add
loope
mov
sahf
outsl
scas
xchg
jle
fucomp
dec
or
xchg
dec
mov
pop
lret
les
sbb
mov
sbb
scas
repnz
rcl
add
jg
jnp
cld
cmp
flds
bound
lea
push
adc
jno
sub
ret
jecxz
jg
rcrb
fnsave
and
fnstcw
mov
sub
sahf
cli
es
lret
pop
inc
add
mov
jbe
xchg
dec
jo
xor
jg
mov
mov
xchg
or
xchg
mov
adc
imul
repz
adc
xchg
cmpb
data16
out
arpl
push
aas
arpl
rcll
xor
pop
cli
jnp
stos
mov
pop
push
pop
mov
inc
jmp
out
arpl
in
in
stos
mov
stos
add
xchg
mov
sahf
jle
insb
and
mov
leave
mov
jne
icebp
les
push
jns
enter
push
or
sets
jle
adc
xlat
push
sti
bound
mov
pop
stos
jb
bound
or
aam
pushf
mov
jns
ficoms
out
rcr
push
jle
mov
mov
jg
cltd
shll
sbb
nop
mov
aas
fidivrs
xchg
sbb
push
inc
ret
push
xchg
xchg
push
pop
mov
jp
mov
sbb
pop
add
mov
push
sub
mov
pop
in
repz
das
push
lret
add
dec
in
mov
push
movsb
lret
fsubr
push
push
inc
in
mov
loope
cmpl
outsb
imul
loopne
arpl
and
sbb
idivb
mov
into
out
dec
daa
sub
insl
jnp
push
push
lea
adc
jl
lods
mov
xor
icebp
sub
rolb
fwait
insl
or
dec
sub
ljmp
dec
adc
orb
jnp
sub
inc
mov
mov
loope
outsl
pop
daa
push
dec
stos
or
mov
dec
leave
pushl
mov
jbe
cmp
idivb
sbb
cld
bound
mov
inc
xchg
sub
pushl
fsub
ficomps
xchg
outsl
in
adc
mov
pop
or
cli
jge
fidivs
shlb
je
sub
test
push
mov
push
aaa
ds
setge
data16
jle
dec
leave
jbe
mov
dec
pop
mov
pop
push
lcall
or
pusha
inc
pop
mov
out
dec
and
sbb
cmp
pushl
rorl
push
push
and
adc
sbb
dec
loope
mov
cmp
lods
jo
scas
popa
add
fwait
mov
dec
sbb
sub
push
and
outsl
in
adc
dec
pushf
sbb
lods
shlb
leave
pop
mull
in
dec
loop
mov
jl
xchg
or
cmp
sar
dec
fnstenv
scas
push
test
in
xchg
imul
rorl
das
cli
inc
stos
jle
pop
gs
push
add
sub
pop
push
and
jp
sbb
mov
push
fmul
cmc
cmp
pop
inc
lret
push
pop
push
add
loope
into
pop
imul
out
adc
adc
mov
adc
jg
sbb
fadd
dec
and
xchg
lahf
jnp
data16
xchg
cmp
aam
fs
adc
dec
outsb
cmp
popf
xor
sbb
into
push
aas
inc
jge
pop
in
add
arpl
adcl
pop
icebp
push
cltd
jg
inc
cmp
dec
aad
dec
fstpl
ljmp
stos
push
dec
push
pop
aas
cmpsl
sahf
imul
dec
mov
inc
adc
xor
jg
mov
in
adc
cmp
dec
pop
push
jg
push
dec
repz
lcall
fbld
cmc
inc
cmp
push
mov
pop
mov
gs
iret
mov
mov
mov
mov
pop
fxch
push
and
test
xchg
stos
sub
push
cmpsl
cmp
push
sbb
ss
adc
push
gs
addb
aas
sbb
insb
jge
push
mov
cli
lahf
mov
test
nop
push
clc
nop
popf
mov
lahf
jae
inc
dec
loop
je
aaa
sbb
in
hlt
or
shl
imul
test
mov
push
lcall
or
iret
mov
rdtsc
add
scas
repnz
mov
or
out
enter
test
adc
fsubr
push
dec
or
aad
and
sub
jg
cmc
movsb
imul
jbe
lods
out
mov
and
cmpsl
jns
in
push
inc
inc
jae
jle
into
cltd
das
pop
inc
loope
lods
loop
lds
ja
xor
movsb
testb
maskmovq
sbb
dec
fmuls
add
push
xor
mov
jecxz
inc
jmp
int3
dec
mov
fcmovb
jne
pop
mov
imul
sbb
cmpsb
xor
shll
hlt
push
arpl
sbb
ljmp
pop
stos
dec
bound
jg
inc
pop
loop
lds
stos
ljmp
push
xor
jg
cmp
or
mov
add
fmull
or
or
dec
out
dec
addr16
aad
test
aam
cmp
dec
sbb
push
dec
mov
add
or
nop
test
adc
dec
dec
mov
lods
daa
stc
sbb
je
dec
dec
arpl
push
ss
cwtl
sbb
jl
mov
push
popf
pop
push
xchg
mov
adc
xor
rorb
pop
sub
add
sub
push
dec
loop
push
std
xchg
fildll
andb
push
mov
sub
mov
jns
in
mov
xchg
cmp
bound
adc
mov
imul
test
cld
sahf
sbb
mov
adc
cwtl
xor
test
inc
inc
sbb
pop
push
mov
sbb
inc
pushf
mov
xor
or
dec
xchg
pop
in
fwait
inc
sbb
dec
pop
add
lock
pop
mov
xchg
add
dec
mov
insb
jge
fcomip
fwait
mov
aad
xchg
popf
data16
ret
push
mov
lcall
fldt
repnz
fistpll
hlt
dec
aaa
push
push
leave
fstpt
cltd
loope
or
addr16
push
lret
outsb
push
arpl
inc
cmc
rolb
push
dec
repz
cmpsb
out
sbb
rcrl
outsb
sub
dec
loope
fstpt
ljmp
sbb
push
push
sbb
out
add
into
movsb
cmp
aad
inc
or
dec
enter
in
mov
jne
in
gs
jne
std
fldl
out
push
xor
adc
mov
mov
lcall
enter
dec
xchg
jmp
into
pushf
rolb
jo
aaa
mov
fidivrl
push
pop
xchg
pop
jecxz
adc
pop
or
and
sbb
pop
outsl
adc
addr16
jb
mov
push
xor
pop
cmp
cs
enter
insl
and
stos
leave
sub
sub
adc
mov
mov
add
cmpb
je
cld
je
pop
push
je
iret
shl
add
enter
jmp
and
sahf
xchg
inc
mov
sbb
fwait
dec
lret
aaa
cld
jecxz
andb
jne
jg
mov
sub
lret
dec
xor
cmpsl
call
sbb
sbb
cmc
dec
gs
pushf
int
inc
into
inc
cli
xor
pop
or
subb
outsl
xor
pop
lret
or
push
sbb
jmp
push
sub
sub
cmp
add
rcrl
xor
dec
adc
push
xchg
aam
sbb
push
and
or
sbb
mov
pop
push
or
aas
mov
pusha
fidivs
fildll
push
xor
mov
jb
ds
mov
push
ja
int3
negl
pop
fidivs
sti
popa
lret
lods
cli
push
mov
fildl
adc
leave
fistl
adc
aaa
mov
xor
sbb
pop
sahf
dec
fidivrl
cmpsb
and
cltd
dec
idivl
mov
mov
inc
push
mov
mov
pusha
mov
push
iret
mov
and
mov
lcall
jmp
dec
mov
rorb
or
sbb
inc
xor
push
adc
adc
dec
sub
cmovns
and
and
stos
test
add
cld
cmpl
fnsave
lods
pop
cmp
fwait
stos
mov
out
cmpsl
lods
sub
ficomps
adc
into
add
pop
mov
sub
mov
scas
lcall
dec
mov
popf
sbb
mov
sbb
add
cmp
sbb
jb
dec
xchg
push
aaa
xor
adc
cmpsl
bnd
iret
fimuls
adc
mov
mov
sbb
cmc
or
dec
cmp
dec
mov
roll
xchg
pop
aam
movsl
addr16
fisttpll
adc
pop
inc
sbb
in
jo
in
and
xor
sbb
or
and
leave
int
popf
sarb
mov
pop
pop
jne
cmp
and
aam
mov
imul
push
out
sub
movsb
shll
cmp
sub
test
es
scas
cwtl
mov
xlat
mov
pop
pop
xlat
mov
jnp
lret
inc
xchg
jle
or
sub
push
scas
adc
xor
cltd
cwtl
adc
lods
add
shll
inc
cmpsb
jae
xchg
xor
sub
dec
das
xchg
mov
scas
jecxz
mov
xchg
pop
add
lcall
pop
std
or
fmull
fs
fisubrs
xchg
pop
stc
or
inc
sbb
dec
pop
out
adc
mov
mov
xor
jno
mov
test
and
jmp
jg
push
int
scas
xchg
cmp
pop
pop
cmp
cmpsb
adc
rcll
sbb
cmpsl
mov
aas
into
mov
and
pusha
pop
adc
jecxz
push
push
pop
inc
adc
mov
or
or
daa
sahf
xchg
adc
pop
pop
mov
std
rcr
dec
cmpb
scas
subb
pop
inc
jno
dec
and
idivl
pop
xor
shlb
push
subl
sbb
xorl
mov
sub
mov
test
gs
xor
pop
sub
jbe
outsl
repz
push
mov
mov
sbb
pop
sub
dec
adc
or
stc
push
or
lahf
shll
mov
xor
jb
push
cmp
add
arpl
pop
inc
dec
mov
push
mov
dec
cmp
aam
dec
movsb
xor
jecxz
cmpsb
cmp
inc
add
push
ljmp
jne
cmp
dec
ds
pop
popa
xchg
mov
mov
inc
pop
sub
add
pop
cld
adc
js
xchg
adc
fistpll
scas
jno
pop
scas
pop
pop
xchg
mov
dec
divb
stc
cmp
arpl
lret
in
and
outsb
lret
inc
push
imul
adc
push
mov
stos
cli
xchg
xchg
adcb
mov
insb
stos
or
int3
loop
lret
add
jnp
insb
jmp
lods
add
xlat
push
bswap
inc
inc
inc
ja
xchg
aaa
pop
jae
shr
mov
inc
mov
push
dec
dec
push
sub
shrl
adc
stos
enter
sub
dec
cmp
jb
sbbb
popa
mov
sub
add
es
jb
add
out
add
push
cs
mov
xchg
aam
into
and
arpl
xor
sbb
dec
cmpsl
push
mov
add
jle
jns
out
jle
mov
popf
push
add
call
scas
add
in
iret
out
lock
stc
inc
mov
jle
push
popf
movsb
or
add
inc
mov
add
push
mov
pop
cmpsl
in
fnstcw
loopne
inc
pop
fstps
insl
movsl
pop
pusha
jl
fsubrs
jb
add
icebp
pop
add
test
mov
push
mov
push
dec
inc
decl
inc
sbb
adc
or
call
inc
dec
cmp
test
add
sbb
xor
sbb
in
aad
dec
out
pop
or
inc
dec
cmp
jae
mov
adc
int3
les
dec
cmp
dec
pop
mov
dec
test
lods
push
xchg
or
mov
or
push
out
or
mov
mov
pushf
push
iret
clc
lods
and
mov
dec
xchg
add
push
lcall
pop
xor
cmp
into
rorb
cmp
adc
xlat
adc
pop
jnp,pn
jne
aam
lcall
icebp
adc
xchg
mov
incb
loope
mov
xchg
div
sbb
adc
push
in
jle
dec
sub
pop
inc
popa
mov
mov
addr16
mov
fwait
add
pop
in
pop
fcomip
inc
xchg
add
xchg
push
pop
shl
or
scas
adc
xchg
cmp
or
xlat
xor
ret
xchg
jle
push
sarb
xchg
push
je
xchg
cs
enter
dec
sbb
lret
je
out
pop
mov
xchg
pop
fcmovnbe
xchg
cs
les
ret
out
mov
dec
sbb
lock
xchg
sbb
cmp
mov
jnp
inc
fwait
xchg
outsl
scas
fsubr
ljmp
fistpl
mov
ds
sbb
out
push
and
in
and
enter
xor
jns
jmp
or
out
and
mov
test
out
add
mov
mov
sub
jnp
scas
data16
sbb
jns
sbb
inc
out
mov
fistl
mov
sub
shlb
and
addr16
mov
cmp
call
js
push
sarl
repnz
sub
inc
scas
cmp
push
pop
pop
push
out
rcrl
jb
aad
mov
leave
andb
jne
hlt
popf
push
xchg
shrl
adc
jno
imul
lods
cmp
orb
iret
jb
insb
add
pusha
cwtl
lds
add
xor
lds
aas
or
je
mov
inc
cmp
jb
xchg
push
inc
fadds
lds
aaa
cmp
pusha
sbb
sub
std
and
nop
cli
cmp
mov
sub
rol
dec
sahf
fadd
bound
pop
add
popf
mov
shl
jp
iret
or
dec
mov
push
jg
add
pusha
xor
mov
mov
mov
jmp
xchg
popa
mov
cs
mov
mov
xchg
in
or
jae
popa
push
or
dec
push
cltd
dec
and
sbb
mov
pop
xor
cmp
call
xor
xchg
mov
fs
inc
inc
push
sub
pusha
dec
mov
or
sbb
loope
xor
ss
ficoml
mov
push
dec
xor
dec
aam
mov
sbb
mov
jge
jae
jg
adc
bound
push
push
sbbl
push
adc
cmp
push
xlat
jg
sbbl
imul
sbb
or
mov
push
idivl
hlt
xchg
imul
jle
fs
mov
adc
xchg
xor
mov
sbb
fwait
dec
xchg
xor
std
clc
or
fs
je
fildll
dec
je
add
imul
jb
sbb
fwait
sbb
adc
adc
ficompl
dec
and
xlat
dec
popf
arpl
mov
hlt
call
inc
sbb
pop
inc
outsl
xchg
out
xlat
jo
sti
rcll
je
fs
and
dec
loop
jns
stc
mov
outsl
das
loope
sbb
cs
sub
xchg
insl
insb
cmpsl
je
adc
add
shr
xchg
cltd
pop
xchg
inc
cli
jns
out
jl
push
loope
inc
out
xlat
push
xchg
jnp
cmp
outsl
sahf
sbb
push
xchg
shrb
push
loopne
dec
xchg
rcrl
pop
dec
add
cmp
adc
jo
xchg
cs
xor
and
add
fidivs
call
push
cmp
add
pop
and
sbb
jle
nop
mov
xchg
mov
ds
jg
xor
xor
push
loop
je
in
shlb
imul
sub
lahf
add
cmp
sarb
ss
mov
or
ss
arpl
and
jnp
enter
sub
sbb
iret
add
mov
mov
scas
enter
dec
sub
cmp
movsl
test
adc
mov
outsl
repnz
sub
cltd
loopne
jno
sbb
jle
inc
insl
test
add
aad
cmp
xchg
dec
xchg
sbb
jle
je
test
test
cli
cmp
xchg
dec
xchg
lock
jmp
pop
popa
loopne
add
popf
jge,pt
pop
les
adc
dec
jb
cmp
mov
mov
popf
test
rcll
loop
sub
add
cmp
xor
loop
pop
sub
or
ljmp
data16
das
data16
sarl
xchg
es
add
iret
add
mov
popa
jge
aad
xchg
sub
cmp
push
mov
xchg
push
mov
outsl
jmp
shrl
push
jge
push
ja
scas
fwait
iret
cmp
jle
cmp
add
add
aas
add
mov
jbe
fldl
and
loopne
jle
add
jno
jle
mov
xor
hlt
jb
and
xlat
pop
data16
sbb
es
sarb
sub
push
cmp
lods
sub
jo
sbbb
stc
lahf
les
mov
shrb
jb
sub
cmp
add
movsl
push
push
adc
es
outsl
xchg
add
pusha
pop
cmp
hlt
iret
gs
adc
out
jle
jno
loop
jb
jae
ljmp
jo
add
xchg
push
jmp
pop
aad
das
jnp
inc
add
stos
popa
push
inc
data16
call
and
lea
loopne
scas
inc
sbb
and
inc
jl
out
icebp
pop
mov
das
out
mov
fcmove
mov
jle,pn
adc
insl
push
jp
out
pop
pushf
rolb
mov
les
adc
push
iret
mov
sub
cmpsl
dec
cmp
xor
xchg
rcl
xchg
adcb
push
ficompl
idivl
inc
js
or
sarb
sarb
lahf
aam
imul
mov
inc
sub
js
loop
lea
xchg
cmpsb
outsl
mov
test
das
sbb
les
add
add
ss
test
xchg
stc
mov
or
push
jns
mov
mov
je
repz
and
or
sub
data16
sbb
and
inc
and
call
js
push
addr16
lea
cld
sbbb
inc
dec
fildl
lods
ljmp
test
mov
jl
inc
cld
fstpl
fisubrl
mov
addr16
mov
xchg
push
jmp
das
pop
pop
mov
or
pop
mov
mov
out
xor
cmp
in
cwtl
pop
jl
or
mov
outsl
sub
sbb
into
inc
push
mov
lahf
adc
or
jle
add
imul
and
lcall
pop
clc
cmpb
sahf
inc
xor
in
mov
js
sahf
dec
jle
cmpsl
fwait
mov
aaa
ret
js
es
pushf
sub
imul
fwait
jg
dec
push
nop
xor
fwait
sbb
pop
push
jns
add
imull
inc
dec
sub
lahf
and
jae
in
inc
jp
cld
arpl
jl
shl
pop
jbe
repz
pusha
into
mov
jns
or
cmc
in
dec
cld
jp
jnp
paddw
out
push
jl
pop
out
dec
jle
mov
out
ret
ret
mov
mov
mov
aaa
std
arpl
cmc
int
mul
daa
dec
enter
xor
xchg
cmpsl
outsl
rorl
dec
flds
cmp
and
mov
dec
push
imul
add
add
pop
loopne
push
and
lcall
cmpsl
aam
in
dec
dec
imul
inc
push
mov
sbb
pop
and
mov
and
dec
mov
movsb
sbb
fbld
int3
push
adc
lock
fmuls
push
jg
fmul
mov
iret
mov
push
and
mov
decl
out
fcmovbe
or
or
scas
mov
or
jecxz
pop
sbb
xorb
bound
sbb
aad
cmp
mov
loopne
enter
xlat
pop
and
aad
lret
xchg
andb
inc
ret
sahf
inc
ss
inc
rorl
inc
sub
mov
mov
cmp
jo
push
les
sbb
adc
dec
jmp
jnp
popa
push
sbb
xchg
imull
mov
dec
xor
cmp
xchg
jl
rorb
popa
subl
dec
fadd
sub
lcall
mov
xor
das
pop
pop
mov
dec
call
lds
dec
push
pop
ret
push
pop
or
adc
data16
sbb
into
mov
gs
adc
cmpl
into
and
ja
jg
mov
xchg
or
insl
adc
cld
shl
cmp
pop
sub
sub
pop
cmp
xchg
cmpsb
xor
pop
xchg
jp
adc
rolb
ss
pop
call
test
jl
inc
in
cmp
dec
jge
stos
aaa
rcrl
dec
mov
sarb
mov
xor
or
roll
lcall
pop
inc
push
xchg
xchg
xchg
out
test
cmpsb
popf
out
sbb
pop
jp
lock
lcall
dec
fiaddl
xchg
sbb
hlt
pop
dec
ss
push
add
pop
push
mov
repz
xor
push
add
xchg
mov
addr16
push
inc
sub
nop
iret
cs
mov
sbb
push
or
dec
add
mov
push
out
dec
sbb
cs
add
adc
and
mov
mov
dec
add
xchg
imul
push
inc
dec
in
hlt
pop
aaa
sbb
fildl
add
mov
pop
mov
or
xor
push
pop
and
loop
pshufw
push
xchg
mov
push
adc
cs
orl
sub
pusha
out
pop
jmp
adc
push
xor
fnstsw
sbb
les
sbb
mov
out
xchg
jmp
movsb
cmovbe
loope
cmpsb
test
daa
sub
sub
mov
bound
out
pop
lcall
mov
sbb
add
adc
filds
inc
jo
sbb
sbb
sbb
movsb
push
sub
std
popa
mov
jmp
fistps
cmp
movsb
and
inc
decl
addr16
bound
push
xlat
cs
fwait
push
testl
aam
fidivrl
hlt
pop
into
imul
push
pop
adc
sbb
add
sub
xchg
outsl
sbb
xor
sub
jl
cmc
test
ljmp
fwait
pushf
fisubs
pop
mov
mov
ficompl
sub
xchg
addr16
xor
sbb
loop
push
mov
mov
dec
push
fsubl
sub
popf
into
mov
aas
imul
inc
push
cwtl
or
into
add
jp
and
inc
mov
ss
xchg
cs
xchg
xor
sub
cmpsb
xor
rcrl
cmp
fimuls
dec
inc
rorb
addr16
bound
push
xlat
cs
mov
mov
mov
hlt
imul
jno
aam
mov
mov
lea
adcl
in
and
into
jle
mov
pop
mov
into
jno
adcb
cltd
jbe
inc
ljmp
mov
dec
xchg
mov
sar
pop
jne
sbb
or
sbb
icebp
out
inc
add
adc
push
add
in
dec
mov
or
out
push
pop
adc
add
rorl
out
mov
or
leave
cmp
imul
adc
adc
fdivs
mov
xor
or
ljmp
icebp
adc
mov
gs
shlb
and
enter
push
mov
lods
pop
je
xor
in
addr16
add
js
mov
pushf
push
pop
jnp
out
orl
movb
shll
xor
xor
in
mull
data16
push
xchg
xchg
adc
sbb
lcall
push
adc
ds
xor
clc
push
push
outsb
push
jnp
mov
sbb
repnz
divl
lea
push
inc
scas
or
pop
aas
lcall
mov
pop
cmpsb
mov
jmp
push
sub
pop
and
push
lret
int
cmpsb
mov
sub
adc
ret
stos
mov
testb
dec
rcll
dec
and
ja
jle
add
shl
outsl
xor
and
or
pop
pop
xchg
frstor
nop
stos
iret
or
pop
mov
cmp
xchg
fmull
in
and
mov
lock
insb
fimuls
cmpsb
pop
jmp
daa
ds
add
pop
sbb
adc
mov
jne
and
add
xor
sbb
addr16
popf
repz
testl
adc
es
mov
mov
pop
jno
sbb
fisttpll
mov
testb
mul
mov
sbb
orb
pop
sub
inc
fcmovnb
dec
stc
es
shrl
sbb
in
inc
cmp
xor
outsl
mov
pop
cli
or
push
mov
daa
mov
xor
imull
jb
dec
notb
rolb
stc
inc
or
inc
pop
inc
cld
mov
jbe
shll
sbb
dec
mov
js
jle
loope
idivb
ret
shrl
fisubl
adc
mov
repz
ret
das
es
jbe
out
mov
icebp
and
push
ja
jmp
mov
mov
cmp
mov
icebp
jmp
call
inc
sbb
mov
cmp
test
jne
cmpl
push
imul
adc
push
mov
clc
ret
adc
push
mov
mov
push
cli
and
push
lea
loop
or
inc
pop
pop
xchg
jmp
insl
xchg
pushf
cs
push
ja
jl
enter
aaa
mov
out
adc
mov
in
in
xchg
sbb
inc
or
or
int
into
sbb
addb
in
cmp
or
pop
mov
notb
sti
les
adc
adc
cld
mov
sbb
leave
xor
aad
add
mov
mov
in
imul
fcomps
sbb
lahf
adcl
pop
mov
or
fnstcw
pop
or
xor
mov
mov
inc
aaa
pop
pusha
inc
inc
clc
or
lret
popf
cmp
int3
ljmp
mov
push
inc
loopne
or
lods
imul
imul
ljmp
xchg
sbb
pcmpeqb
lahf
loop
out
adc
je
lea
mov
and
push
mov
sbb
mov
sub
pusha
add
fwait
mov
scas
orb
jb
shr
rorl
negb
mov
push
mov
inc
in
lods
fsubl
jp
adc
cmp
pop
insb
stos
pop
pop
jae
sbb
outsl
jns
icebp
push
mov
or
call
and
mov
sbb
enter
xor
sbb
push
push
sbb
pop
jge
and
or
pop
cli
stc
daa
xchg
xor
nop
mov
clc
cs
clc
dec
cmp
enter
or
or
push
test
bswap
sub
fisttps
pop
dec
sbb
rcl
xor
inc
xchg
fcomps
sahf
inc
lret
or
jae
cmp
jmp
ret
pop
push
jnp
pop
push
fistpl
sub
xor
mov
clc
lea
jp
notl
pop
jne
cs
push
push
adc
sub
xchg
sbb
ds
out
int3
ficoms
in
jge
daa
sbb
push
data16
jge
mov
push
je
dec
test
fisttpl
aaa
xchg
push
add
outsb
pop
hlt
pop
daa
adc
pop
insb
pop
hlt
mov
push
mov
jge
mov
jmp
je
sub
xchg
aam
or
adc
pop
add
sbb
fsubs
inc
pop
pop
add
add
cmpsl
ss
stos
adc
lcall
into
out
xchg
push
ficoms
push
loopne
sub
inc
mov
mov
dec
push
in
cmp
mov
dec
int
fnclex
dec
lret
out
lahf
scas
pop
shlb
pop
cltd
out
push
sbb
or
iret
movb
xchg
inc
mov
iret
leave
les
imul
push
xchg
addr16
testb
add
scas
mov
js
mov
call
std
into
in
outsb
inc
mov
adc
mov
aas
sub
jnp
repz
scas
or
dec
jl
and
fildll
iret
into
aad
jb
int3
jmp
cmp
inc
adc
das
outsb
push
aas
cld
fwait
repnz
cmp
arpl
and
pusha
les
aas
xchg
mov
push
or
cs
ret
das
pop
add
out
out
and
jbe
jg
cmp
cmpsb
das
jle
pusha
push
xor
mulb
out
push
jb
lock
imul
js
fidivl
mov
pop
loop
scas
in
fsubs
adc
fildl
stos
and
sbb
call
out
daa
pop
mov
dec
mov
scas
pop
mov
mov
fldt
adc
repz
sub
cmp
scas
fiadds
insb
mov
adc
movsl
sbb
stc
jnp
ret
cs
scas
mov
jnp
mov
pop
dec
sub
and
sarb
addr16
jge
mov
stc
xorl
cs
dec
pop
cmp
or
into
add
dec
pop
dec
cmp
dec
dec
jb
stc
push
mov
cltd
andl
push
aam
testb
add
js
jp
int3
and
adc
pop
dec
push
push
ds
popa
fcompl
inc
xchg
out
mov
cmp
mov
popa
sbb
lods
ss
pop
jecxz
hlt
adc
aad
imul
lods
mov
and
inc
outsb
xchg
xor
push
sub
xor
and
sub
cs
loopne
or
mov
inc
sbb
xchg
leave
sbb
jecxz
cmp
push
loope
add
les
pop
mov
ds
outsb
mov
neg
insl
add
cmp
sti
lcall
jg,pt
dec
push
shlb
jo
xchg
jge
mov
jmp
ds
mov
push
cmp
fisttps
dec
push
mov
xchg
arpl
mov
or
std
inc
inc
lea
or
repnz
xorb
sbb
pop
xor
fwait
push
rcl
call
sbb
dec
inc
rorb
add
sahf
shlb
call
push
in
push
sub
lcall
aam
sbb
push
stos
scas
jge
mov
mov
sti
hlt
or
mov
inc
sbb
xchg
sbb
jmp
add
dec
shll
insl
into
jle
ds
push
mov
and
cs
push
out
push
jo
cli
push
adc
jbe
dec
mov
adc
gs
add
jmp
inc
push
ret
loopne
orb
push
xchg
jbe
scas
push
and
pop
mov
cltd
mov
jmp
clc
pop
decl
inc
adc
push
out
mov
insl
pop
bound
outsb
xchg
mov
test
clc
mov
icebp
and
les
lods
lods
xchg
pop
rcrl
adc
xor
imul
xchg
je
js
jae
jg
jo
dec
andb
and
fsubrs
sub
cli
movsl
adc
xchg
movsl
sub
push
or
jb
xchg
cli
pop
mov
add
and
das
mov
repnz
and
jecxz
fcmovb
cmp
ja
inc
rcll
push
pop
bound
mov
add
jo
jno
pop
jl
jp
rcll
loopne
das
jae
cmpsb
adc
jle
push
add
xor
outsl
std
xor
mov
or
xorl
xchg
fadds
xchg
xchg
lret
push
rcr
lret
clc
mov
imul
iret
push
int
xchg
sbb
xchg
jecxz
imul
add
cmp
push
testb
aas
adc
xchg
adc
push
jp
push
cli
cmc
jb
shl
mov
push
and
sarb
pop
ret
xchg
imul
jae
push
js
dec
inc
test
mov
jnp
iret
push
or
outsb
jge
mov
les
xor
mov
popa
jl
push
push
and
cmp
out
dec
int
or
and
add
cmp
pop
adc
mov
popa
fs
jo
cmp
lcall
insb
frstor
xchg
imul
outsl
or
cmp
out
stos
rorb
push
rorb
scas
dec
push
push
inc
xchg
call
mov
pushf
xor
xchg
stc
popf
or
inc
mov
adc
hlt
xchg
pop
sbb
movsb
push
call
inc
dec
loopne
mov
xor
adc
push
cwtl
fmuls
xchg
xor
push
into
testl
in
mov
inc
dec
mov
dec
sbb
push
xchg
andb
push
nop
lods
dec
pushw
mov
mov
sti
inc
cli
pop
push
adc
outsb
stc
mov
mov
xchg
data16
les
and
or
add
mov
push
imul
in
call
popl
and
arpl
push
in
and
test
loope
sahf
aaa
scas
lret
loopne
jecxz
pushf
xchg
mov
push
jg
ss
cmp
dec
pushf
dec
dec
nop
mov
cmp
cmpsb
push
dec
ds
outsb
outsl
pop
jae
sub
xchg
outsb
jo
mov
jno
dec
clc
push
cmp
dec
sub
pop
ficoml
fstps
mov
insb
mov
fwait
outsl
fcmovnu
out
ret
cmp
mov
pop
inc
mov
cmp
inc
cli
das
test
test
ljmp
and
inc
pusha
into
inc
sbb
and
push
mov
sbb
dec
adc
xchg
ret
dec
mov
outsl
and
popl
scas
pop
mov
inc
rcl
mov
jno
cmpsb
es
outsb
sbb
sbb
sahf
jb
push
cmp
inc
rcr
cmp
dec
xorl
stos
mul
enter
movsb
pop
mov
mov
out
or
push
enter
adc
idivb
sbb
xlat
imul
movsb
leave
jbe
dec
in
pop
movsb
orb
push
pop
insb
movsb
into
enter
fisubrl
or
sub
jmp
pop
enter
or
xchg
lcall
push
xor
and
xor
inc
loope
js
adc
sbb
mov
imul
xor
ret
mov
dec
mov
mov
inc
test
mov
lods
jecxz
js
call
dec
jbe
xchg
ret
mov
inc
push
add
mov
ret
mov
lahf
int3
sbb
mov
xor
pusha
popa
cltd
fisubl
or
daa
xor
js
cmp
mov
jnp
dec
inc
add
jle
push
push
mov
lcall
je
or
insl
push
hlt
imulb
xlat
xor
jle
xor
pop
sbb
loope
pop
aas
ds
std
cmp
mov
stos
pop
ja
or
ds
inc
cmp
cmpb
orb
mov
cmpb
xchg
xorb
lcall
xchg
fs
push
xor
inc
and
xor
xchg
xchg
and
test
add
movsl
hlt
sub
inc
sub
les
gs
movsb
cmp
sub
push
cmp
sub
xor
xchg
sub
jno
push
sub
dec
das
imul
test
inc
pop
ret
test
shrl
test
aam
cwtl
lcall
and
out
popa
clc
out
pop
clc
sahf
out
xor
mov
push
adc
or
adc
push
gs
cmp
int3
inc
gs
int3
push
jp
jns
gs
cltd
gs
scas
gs
mov
fmul
lds
int3
in
gs
repnz
adc
mov
adcb
mov
and
and
xor
popl
lcall
jnp
gs
mov
cmp
dec
clc
fwait
out
mov
jo
js
ret
iret
call
pusha
inc
mov
adc
stos
cmp
sbb
outsb
arpl
outsb
or
push
cmp
iret
outsl
data16
bound
test
cli
test
inc
add
cmp
es
int
movsb
or
add
push
std
adc
enter
adc
mov
js
outsb
cmp
outsb
mov
outsb
mov
push
repnz
or
addb
xchg
data16
push
fwait
pop
xchg
shrb
or
jo
mov
aad
ret
dec
aad
ret
sub
mov
rolb
or
mov
xor
clc
imul
clc
aaa
cwtl
ljmp
ss
insb
sub
mov
int3
sub
adc
xor
adc
clc
push
jnp
adc
xor
in
xor
pop
xchg
push
andb
les
iret
test
fdivr
aas
outsb
insl
mov
dec
loopne
push
insb
adc
adc
test
aad
ret
pop
adc
outsb
sub
jp
push
jno
popf
sub
xchg
test
sub
sti
mov
je
jp
add
push
ret
les
ret
divl
imul
roll
push
rcll
jle
shll
pop
aas
jle
xchg
into
sbb
pusha
and
inc
push
fistpll
negl
fdivs
mov
rcl
jle
shll
iret
into
outsb
mov
loopne
sub
pop
iret
jle
arpl
pop
cmpl
push
ret
mov
adc
dec
ret
out
aad
ret
aam
jbe
fcmovnbe
sbb
cmpsb
aad
ret
xchg
aad
ret
pusha
aad
ret
dec
aad
shlb
mov
ret
sub
test
add
and
mov
or
push
aaa
out
push
js
push
adc
cmp
filds
rolb
inc
cmp
lea
mov
inc
or
pop
xor
dec
cltd
in
jge
fmull
adc
cltd
lods
cmp
jo
sahf
xchg
cmpb
nop
sarl
js
rcr
js
ror
js
sar
jnp
gs
push
out
in
inc
out
aam
jne
clc
gs
mov
repz
outsb
add
js
outsb
and
inc
mov
jnp
sbbb
sub
mov
cwtl
or
outsl
pop
call
outsl
add
jns,pt
and
mov
jae
xor
cmpsl
mov
sub
inc
inc
inc
xor
jae
and
dec
iret
push
pop
iret
inc
pushw
je
jp
fs
xchg
lcallw
iret
mov
mov
test
sub
ljmp
rcr
out
inc
out
clc
ja
sub
addr16
outsb
pop
js
outsb
pop
js
inc
aaa
in
fs
xchg
lcallw
iret
mov
mov
iret
aam
fcmove
les
cmc
hlt
jmp
ret
or
adc
sbb
int3
sub
int3
cmp
int
xchg
ljmp
test
mov
jnp
mov
ror
js
rol
js
sar
js
hlt
scas
xchg
ret
push
arpl
push
adc
mov
adc
mov
cmp
sub
outsb
cmp
cs
iret
xlat
mov
gs
ret
pop
test
push
out
ret
sbb
add
ret
sbb
ret
dec
push
ret
inc
push
icebp
test
inc
ret
push
push
int3
outsb
mov
mov
js
shrl
mov
fdivrl
shl
jno
rcrb
add
adc
rorl
js
roll
jp
jno
js
roll
sarl
shll
shrl
shll
shll
mov
mov
js
rcl
js
sar
jno
rcll
rorl
push
roll
push
sarl
shll
roll
outsb
shll
shrl
shll
rcrl
mov
rcr
js
rcl
js
ror
js
rol
iret
call
out
clc
inc
out
clc
jnp
fdivrp
jae
mov
mov
cmp
lcall
out
mov
fucomip
jb
xlat
out
jp
ret
out
dec
clc
fwait
out
ds
xchg
out
es
mov
cs
sub
clc
mov
xor
cmp
sarb
ja
fidivrl
outsl
and
ss
cs
ret
mov
and
jbe
fcmovnb
jle
rol
data16
ret
outsb
aad
ret
cmp
mov
cs
and
pushl
push
scas
stos
lcall
imul
clc
arpl
xchg
jo
out
mov
clc
aaa
out
jle
iret
out
clc
out
push
out
push
clc
imul
pop
clc
out
out
ss
mov
stos
lret
mov
adc
adc
or
sbb
mov
push
aas
inc
xchg
push
sub
ret
push
ds
xchg
mov
xchg
orb
or
xchg
cli
orb
addb
orb
scas
addb
xchg
cmpb
sahf
xorb
xchg
push
ljmp
sub
movb
mov
or
push
roll
push
sarb
decb
mov
sub
add
ja
lahf
cltd
push
mov
ds
sbb
add
test
jns
sbb
cmp
lea
mov
clc
or
scas
clc
add
xchg
clc
cmp
lahf
clc
xor
xchg
sub
clc
and
ja
fcmovu
into
pop
pop
adc
mov
mov
pushf
push
or
mov
sbb
fsubl
pusha
ret
sub
jmp
dec
xor
hlt
xchg
ljmp
outsb
in
js
outsb
mov
xchg
fadds
sub
push
std
das
jne
lret
xchg
mov
pop
in
mov
imul
int3
fldenv
lahf
movsb
mov
dec
adc
xchg
pop
push
popa
sub
out
in
push
inc
adc
lds
push
inc
mov
in
pop
ret
imul
jl
xchg
int
movsb
adcb
push
mov
xor
mov
jecxz
loope
xchg
shrb
mov
psubb
xor
fistl
enter
mov
or
jle
add
push
adc
data16
jno
popf
mov
fwait
adc
mov
mov
mov
jmpw
callw
loope
mov
and
lock
ret
sbb
shll
fdivrs
cmp
ljmp
mov
hlt
adc
dec
sub
mov
insl
test
sub
imul
repz
mov
dec
js
outsb
daa
js
outsb
fnstsw
push
cli
add
mov
adc
mov
imul
push
int
aas
hlt
popf
ret
sbb
sub
inc
test
insl
test
sub
loopne
push
imul
push
int
xor
inc
xor
outsb
lods
sbb
sub
ret
dec
mov
fists
dec
mov
inc
adc
mov
adc
mov
xchg
bswap
push
sahf
cld
xor
scas
or
outsb
mov
adc
adc
inc
push
mov
pop
cwtl
mov
inc
xchg
push
lret
outsb
repz
cwtl
mov
je
pusha
adc
mov
jmp
dec
clc
lahf
out
ds
xlat
cmpsb
jo
mov
push
in
mov
or
roll
jp
mov
cmp
cltd
xchg
int
xchg
fists
outsb
das
leave
mov
mov
sub
push
sahf
pop
scas
lret
int3
push
aas
jne
fs
scas
sub
mov
iret
arpl
fisubs
data16
aam
fxch
shll
icebp
jns
enter
in
inc
sub
hlt
pop
sarl
insb
mov
push
roll
std
das
push
popl
fidivl
dec
dec
ljmp
xchg
ret
xchg
push
ret
stos
push
ret
mov
pusha
test
sahf
data16
pop
enter
out
adc
push
sub
dec
sbbb
sub
mov
xchg
or
pop
xor
xor
jge
fmull
adc
xor
add
roll
js
shll
js
rol
jp
cmp
xor
clc
dec
out
in
clc
jge
fsubrl
sbb
cltd
lods
fisttps
pusha
outsb
int3
jo
sahf
int3
andb
test
sub
rolb
xor
push
inc
aad
insb
inc
mov
clc
jle
int
xchg
pop
aas
inc
xchg
fwait
aas
adcl
out
fadds
and
sbb
enter
xchg
push
inc
cmpsb
xor
es
push
jbe
adc
in
adc
inc
jl
test
sarb
and
jp
ljmp
inc
insb
fcompl
in
xor
hlt
pop
mov
int
sbb
test
xchg
jnp
adc
js
repnz
ret
jb
enter
and
and
push
gs
int
sub
xchg
or
mov
cmpsl
lds
mov
es
rcrb
test
out
xor
lret
cmp
test
lods
test
mov
pop
sub
push
out
jp
jl
arpl
out
arpl
stc
xchg
aaa
adcb
gs
xchg
andb
add
dec
mov
and
jnp
js
sub
popa
clc
ret
mov
shlb
outsb
pusha
mov
iret
adc
mov
dec
push
leave
mov
std
es
cwtl
shl
mov
pushf
cmp
xor
xor
dec
adcb
test
sbbb
ds
adc
in
ret
test
push
cs
and
fidivrl
inc
lds
negb
enter
es
test
xchg
mov
outsb
nop
js
push
mov
inc
in
pop
push
shl
mul
je
xor
xor
jne
xchg
pop
cmp
adc
jg
out
aas
ret
lds
js
outsb
xlat
js
outsb
ret
js
outsb
out
js
push
xchg
add
notb
cli
mov
imul
movsb
inc
inc
popa
dec
fdivrl
cmc
cwtl
inc
cmc
in
aas
sti
xchg
cli
es
rolb
add
fistl
in
pop
mov
add
sub
lods
push
push
mov
js
outsb
or
movsb
sub
add
push
mov
int
std
sub
pop
gs
push
cmp
mov
inc
rclb
rol
xchg
push
xor
inc
jo
cmp
xchg
clc
cmpsl
outsl
or
test
pop
adc
adcb
mov
aas
nop
fwait
mov
add
lock
out
sub
das
dec
ror
into
dec
mov
fidivrl
add
pop
lret
js
repz
xchg
cli
movsl
rcrl
mov
or
lcall
mov
scas
arpl
out
popa
fsubrl
cmp
loope
fmull
mov
or
fdivrs
outsl
fcmovbe
xchg
xor
clc
lahf
mov
das
leave
je
int
xchg
sub
xchg
stc
int
cmp
nop
test
sub
ljmp
scas
mov
ljmp
es
push
je,pt
pop
dec
rcrl
push
mov
add
dec
xchg
arpl
iret
mov
icebp
sub
sub
fdivl
cs
push
ljmpw
cli
mov
cli
inc
call
mov
add
imul
arpl
push
sbb
push
adc
pop
fiaddl
ret
stos
aad
ret
xchg
aad
and
sbbb
jbe
adc
inc
jle
iret
lcall
push
fwait
out
lock
add
outsb
push
js
inc
dec
in
add
iret
cmp
xchg
mov
ret
inc
ss
cmp
loop
rclb
sbb
xor
cmp
cmp
lahf
and
push
dec
ss
xchg
sbb
add
xor
mov
int3
adc
lahf
cmp
ret
aad
ret
inc
ss
lret
test
clc
ljmp
adc
addr16
cmp
lods
adc
into
into
rol
pop
mov
pop
dec
movsb
lret
adc
ss
push
mov
sbb
adc
mull
movsb
mov
iret
insl
mov
xchg
jp
mov
out
out
test
inc
xor
mov
push
mov
dec
jmp
dec
cltd
xlat
jo
iret
dec
das
sbb
mov
or
sbb
rcrb
inc
sbb
jae
jle
pusha
mov
fcompl
gs
cmp
cmp
push
ret
gs
ret
test
ret
scas
push
ret
leave
jb
imul
data16
rorb
and
aas
ret
sbb
mov
clc
mov
push
mov
cmp
popl
cwtl
jno
xchg
push
mov
and
int3
dec
fs
repnz
and
xor
and
repnz
xchg
dec
clc
sub
imul
loopne
ret
push
aad
outsb
fstpt
or
es
pop
pusha
inc
push
inc
jo
pop
mov
loop
push
inc
shr
adc
iret
push
xchg
ds
mov
pusha
sbb
lret
push
fldl
push
int3
mov
cmc
xor
rolb
dec
sub
cli
and
icebp
outsb
and
push
cmc
and
int
dec
push
addb
jns
pushf
out
mov
adc
push
xor
xor
cmp
sub
roll
cs
cmp
adc
xchg
ret
int3
adc
mov
inc
pop
sub
jne
dec
or
cmp
add
btc
adc
lods
adc
jno
rol
jnp
sbb
push
shll
jo,pt
aaa
push
jb
push
add
ss
push
and
mov
int3
enter
push
ljmp
imul
jg
add
sbb
push
mov
push
inc
mov
int
test
inc
shll
push
mov
pop
push
mov
and
dec
mov
incl
clc
repnz
dec
clc
inc
xor
cmp
shrb
popf
adc
xchg
aas
ret
jno
cmp
sahf
sarb
or
outsb
push
xchg
pushf
outsb
inc
js
outsb
sbb
mov
addr16
cld
mov
push
inc
and
dec
xchg
add
add
ss
jns
push
xor
jge
mov
and
jae
mov
jmp
sti
push
clc
push
cwtl
dec
popf
mov
mov
adc
mov
ret
mov
push
ficoms
or
ret
mov
push
ret
fldenv
out
data16
fistpl
hlt
dec
ret
bound
xlat
data16
jne
adc
mov
pop
imul
push
imul
cmp
or
sub
imul
imul
cmp
push
xor
iret
inc
data16
mov
push
mov
cs
add
std
xchg
imul
faddp
cmc
es
mov
leave
das
jne
and
nop
mov
push
test
dec
stos
push
loop
sub
add
iret
pop
lret
ljmpw
or
les
arpl
mov
xchg
add
outsl
popa
shrb
mov
and
lea
repz
push
shrb
mov
xor
outsb
js
outsb
out
dec
sahf
jg
mov
xchg
mov
loopne
insb
enter
add
test
xchg
ja
out
jo
idivl
in
fs
and
push
in
jb
repnz
flds
cmp
and
clc
push
fiaddl
mov
xor
dec
leave
lret
mov
ret
movsb
mov
flds
adc
pop
aaa
shrb
push
adc
jmp
sar
jp
jae
scas
loopne
xchg
mov
mov
clc
and
dec
pop
and
sub
push
mov
cli
push
pop
stos
sbb
push
xlat
in
pop
inc
inc
sbb
and
sub
dec
sahf
iret
inc
lea
int3
lahf
gs
iret
push
les
mov
xor
ds
jmp
fidivs
test
into
data16
iret
ljmp
addr16
das
xor
mov
aas
loope
sub
cmp
les
push
dec
and
cli
ret
cmp
ret
int3
adc
cmp
fwait
mov
call
call
mov
ja
ja
lea
test
mov
dec
iret
ss
push
push
stc
imul
xor
fldt
je
mov
and
test
lret
iret
loop
adc
add
int
sbb
or
fs
mov
jge
mov
loopne
ss
push
dec
scas
aam
mov
iret
loope
or
or
sub
xorb
mov
ljmp
mov
sub
mov
test
fmull
or
xor
xor
xlat
adc
lahf
push
sub
js
loope
lds
iret
xchg
fnstsw
xchg
inc
int
pop
addr16
out
ret
repz
imul
cli
js
mov
add
push
cld
push
pushf
push
dec
daa
ret
and
pop
test
js
xchg
adc
push
xchg
push
fmulp
xchg
or
mov
dec
test
pushf
dec
mov
imul
adc
int
pop
mov
fsubrl
hlt
push
ret
insb
push
int3
jne
push
aad
mov
mov
orb
and
movsb
xor
leave
dec
mov
push
pop
jecxz
cmp
xchg
hlt
jp
inc
std
sub
hlt
mov
sahf
pop
mov
into
adc
outsl
stos
push
out
std
repz
ljmp
mov
xchg
adc
js
fcoms
je
movl
pop
popf
mov
aam
cmp
cwtl
pop
sarb
add
arpl
stos
in
xor
mov
add
adc
adc
fwait
xchg
xchg
fcoms
outsl
mov
ficoms
fnstsw
clc
xor
fnstcw
fs
popf
xchg
loop
leave
js
outsb
and
jb
mov
lahf
leave
xlat
fs
mov
pop
inc
pop
mov
shll
test
mov
fildl
mov
outsb
cs
push
adc
sub
pusha
movsl
inc
outsl
pop
lods
xor
add
cmp
sbb
add
push
int
push
push
xchg
test
stos
xchg
fidivrl
push
mov
cmp
js
push
in
mov
bound
sub
or
rcrb
in
rclb
and
pop
push
mov
mov
fnstcw
or
addr16
sub
lea
repz
scas
mov
xchg
or
js
rcrb
int
pusha
clc
and
push
cmp
aad
ret
inc
ss
and
push
stos
jp
mov
loope
inc
js
outsb
cmp
mov
pop
inc
ret
fsub
insb
adc
mov
inc
jbe
fcmovne
fsubrp
xchg
pop
ret
inc
inc
add
cs
mov
mov
cmp
lret
jp
sahf
mov
enter
cmpb
xchg
add
cwtl
fwait
push
popa
jg
gs
sbb
jmp
lea
js
roll
adcl
mov
aad
ret
imul
fisubs
sbb
je
add
negl
inc
xor
fs
jo
bound
rcrl
push
pushf
push
mov
ljmp
inc
loope
ljmp
clc
insb
imul
pushf
push
push
enter
push
arpl
jb
and
sub
mov
repnz
inc
bound
leave
ret
inc
scas
xchg
mov
repz
dec
mov
sbb
cmp
dec
mov
ffreep
imul
jmp
cmp
movnti
xor
or
out
mov
data16
shl
sbb
jo
popa
cltd
mov
jmp
push
cmpsb
data16
repnz
adc
push
pop
mov
aas
out
sbb
mov
daa
jl
fisttps
sub
xlat
decl
and
addb
adc
std
push
fcoms
rclb
inc
xchg
clc
int3
popf
jno
lcall
mov
das
je
push
mov
fsubl
shr
fcomps
cmp
push
jb
lods
add
xor
mov
mov
mov
jmp
add
inc
pop
enter
xchg
push
aas
jns
test
popa
inc
scas
mov
rcrl
xor
out
jl
push
nop
inc
sbb
mov
imul
loop
rcr
imul
sarb
dec
stc
and
pop
and
mov
push
dec
cmp
xor
lea
shlb
mov
xchg
lret
jecxz
xorb
lock
popf
add
push
sbb
in
push
into
popa
cltd
and
and
mov
clc
inc
or
loop
stos
cmp
inc
or
xchg
ret
dec
push
ret
pop
popa
inc
in
in
push
shrl
push
cmp
cs
mov
leave
fidivrs
in
negb
push
dec
push
push
adc
jae
jnp
out
jae
in
xor
loop
daa
sbb
pop
popf
adc
in
pop
push
pusha
add
push
cmp
out
xchg
sub
push
cwtl
add
nop
scas
and
mov
push
lcall
sbb
mov
mov
cld
mov
push
mov
loopne
add
sbb
add
aad
ret
ljmp
inc
fisubrl
hlt
and
add
push
int3
pop
fs
xchg
sbb
je
out
in
pushf
adc
push
add
inc
hlt
cmpb
lcall
add
sarb
bound
stos
or
faddl
fsub
aam
xchg
es
aas
js
outsb
cmpl
mov
cmp
ja
adc
or
js
call
daa
shll
cli
inc
and
pminub
and
jo
cvtpi2ps
ds
pusha
jp
jb
xlat
out
and
sbb
or
sbb
mov
hlt
sbb
mov
pop
pop
sti
lods
cmp
ss
loopne
xchg
jg
dec
mov
jcxz
ljmp
imul
lods
mov
les
sbb
push
adc
add
jp
pushf
fsubr
and
shrd
int
ds
mov
out
or
les
clc
cs
xor
pop
fadds
sub
shll
icebp
or
jnp
ja
dec
push
dec
mov
dec
cmp
into
push
mov
and
and
xchg
mov
jle
imul
in
icebp
imul
push
incb
add
mov
dec
imul
aam
xor
push
jle
outsl
dec
jle
in
jne
xchg
or
stos
jne
push
outsb
sbb
xor
mov
or
out
push
inc
bound
mov
stos
push
pop
lods
xchg
mov
adc
addr16
jbe
push
scas
xchg
jp
or
aam
sbb
imul
stc
adcb
dec
shl
jne
cmp
bound
repz
jns
and
adc
and
adc
stos
je
and
and
jnp
sub
jae
out
mov
hlt
adc
sub
adc
fs
insb
loopne
scas
sub
and
xorb
scas
mov
insl
xchg
xchg
jae
addr16
arpl
aaa
inc
dec
or
scas
ret
mov
fwait
sahf
cmp
call
jb
sub
push
imul
cmp
xchg
test
jae
push
adc
cmp
or
inc
mov
shlb
addl
pop
mull
loopne
data16
lcall
mov
xchg
nop
jp
fdivl
add
and
cmpsb
fwait
pop
jg
clc
mov
push
jl
sbb
stos
testb
data16
mov
jge
orb
pop
js
lock
push
mov
or
js
inc
adc
out
adcb
movsl
pop
in
or
fs
mov
repz
mov
mov
jnp
sub
lods
fs
sub
imul
cmp
sbb
push
cmp
and
adc
ljmp
jle
or
stc
clc
sahf
or
out
xor
mov
adc
rclb
pop
into
xor
jae
lock
scas
js
jnp,pn
aas
pop
cmp
pusha
sahf
pop
ja
xor
lahf
inc
shl
idivb
or
sarb
sbb
adc
pop
and
jbe
sub
iret
addr16
sbb
les
jecxz
mov
mov
or
pop
mov
dec
cmp
popf
sahf
xor
in
push
icebp
lahf
out
xor
mov
xor
shl
xor
sbb
cmp
lock
dec
fwait
or
movhlps
lea
mov
lds
and
or
adc
push
mov
mov
mov
inc
sub
sti
sbb
mov
push
mov
fbstp
aas
out
je
xor
fwait
insb
inc
pop
int
es
cmp
pop
jecxz
xchg
movsbl
dec
inc
or
xlat
jb
loopne
cmpsb
inc
fcoms
in
cmp
push
jne
ficoml
outsb
es
fldt
lret
inc
lret
adc
mov
pop
dec
xchg
cli
lret
pop
inc
mov
inc
mov
sub
jp
xor
ljmp
push
push
and
sbb
dec
xchg
pop
xchg
call
inc
lcall
xor
inc
and
sbb
jl
xchg
adc
mov
je
mov
lret
sbb
adc
xor
push
dec
cmc
or
xor
add
jp
push
mov
fsubrl
cmovae
xchg
jmp
loopne
ljmp
and
sarb
mov
push
mov
sbb
sbb
cwtl
stos
fists
lock
and
lods
dec
sbb
test
int3
stos
adc
jle
js
and
mov
mov
add
std
pop
outsl
sub
add
movsl
ja
sub
inc
adc
aam
mov
or
daa
pop
cmp
ds
push
mov
push
rclb
pop
sub
jne
dec
ret
push
fimuls
and
cmp
mov
movsbl
dec
iret
imul
sbb
fisubrs
pop
xor
pop
push
xor
fwait
mov
repnz
cmp
adc
or
daa
ja
push
aad
daa
push
xchg
xchg
push
pop
sbb
es
jmp
mov
in
push
xor
insb
sarl
fisubrs
inc
les
cli
js
clc
repnz
mov
aad
jmp
jbe
outsb
xchg
and
and
out
or
xchg
out
ljmp
jae
gs
inc
pop
and
rolb
call
pop
sub
sub
not
sub
sub
or
shr
shl
btr
shl
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
mov
and
bt
sub
add
not
sub
test
dec
jmp
lcall
ret
or
bsf
xor
sub
btr
bsf
sub
and
dec
jmp
lcall
xor
add
add
pop
xor
xchg
push
shr
or
test
btr
cmp
btr
adc
mov
call
lcall
incl
ret
neg
sub
xor
neg
mov
not
add
or
sub
test
dec
jmp
lcall
bts
movzwl
cmp
or
and
dec
bsf
test
mov
mov
xchg
push
push
xchg
dec
add
add
call
bt
test
bts
cmp
bts
bt
inc
bsf
add
add
mov
and
btr
xor
movsbl
test
test
or
adc
mov
mov
shl
sub
xchg
mov
movzwl
mov
cmp
btr
test
add
xor
jmp
lcall
ret
or
shr
test
inc
movswl
sub
neg
cmp
bts
call
lcall
add
xorl
pop
xor
xchg
push
bt
bswap
sub
test
cmp
cmp
add
bts
jmp
lcall
stc
add
xchg
ret
neg
sub
test
dec
cmp
sub
add
test
test
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
neg
bts
sub
and
btc
and
xor
jmp
lcall
or
call
bt
movzwl
xor
bsf
bt
adc
xor
add
mov
or
or
sub
bts
add
xor
call
lcall
add
sub
btc
shr
xor
sub
btr
bts
dec
call
lcall
or
and
xor
add
shl
sub
test
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
shl
or
xor
and
add
xor
call
lcall
or
bswap
neg
test
sub
add
adc
xor
inc
jmp
lcall
sbb
dec
mov
mov
sub
rcl
or
mov
mov
xor
add
adc
shr
add
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
cmp
neg
adc
mov
sub
adc
test
btc
push
dec
btc
test
sub
test
add
cmp
add
btr
btr
neg
cmp
adc
sub
test
and
inc
add
mov
bt
shl
movzwl
mov
cmp
or
mov
mov
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
mov
xor
neg
test
test
cmp
sub
neg
call
lcall
add
adc
shr
not
shr
bt
add
mov
sub
mov
add
neg
and
or
test
xor
cmp
cmp
neg
cmp
shl
sub
mov
movzbl
and
btr
movzbl
movzwl
sub
bts
bts
call
lcall
mov
cmp
btr
not
adc
mov
not
test
shl
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
cmp
or
shr
or
dec
add
movzbl
shr
shr
bswap
cmp
test
adc
adc
xor
btr
bts
jmp
lcall
cmp
imul
inc
not
add
mov
mov
mov
add
add
xor
bsf
cmp
test
inc
cmp
movswl
and
xor
call
lcall
add
shr
neg
cmp
btc
inc
or
sub
or
and
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
adc
bsf
test
sub
test
test
xor
or
shr
sub
mov
inc
and
btc
bts
movzwl
adc
mov
mov
movswl
add
sub
test
or
movzwl
cmp
and
shl
and
mov
add
dec
add
cmp
bts
shl
xor
or
bts
test
lea
inc
cmp
jne
xor
test
test
test
bsf
and
bswap
adc
sub
add
movzwl
mov
or
cmp
add
xor
adc
add
call
lcall
je
sub
neg
dec
adc
inc
btr
cmp
inc
or
sub
mov
cmp
adc
sub
shl
test
btc
call
lcall
mov
bts
bt
shl
sub
sub
add
shl
dec
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
test
mov
adc
and
btc
bswap
adc
inc
call
lcall
bt
shl
not
dec
bsf
bsf
bsf
not
btc
or
add
btr
and
cmp
bts
btr
bt
or
dec
jmp
lcall
btr
movswl
cmp
inc
btr
btc
sub
inc
mov
add
bsf
inc
bt
neg
adc
sub
inc
or
dec
call
lcall
add
add
shr
xor
neg
shr
xor
mov
push
pop
inc
add
loop
bts
add
sub
cmp
add
not
cmp
push
decl
mov
add
test
adc
xor
neg
mov
dec
shl
call
lcall
jmp
lock
add
test
mov
repnz
push
add
sub
push
shll
shl
sub
test
test
neg
or
dec
push
cmp
cmp
cmp
btr
inc
or
shl
mov
add
sub
mov
btr
shr
sub
add
xor
add
sub
push
push
pop
add
add
call
xor
adc
adc
bsf
shl
test
sub
xchg
cmp
test
bts
add
xor
cmp
mov
sub
bt
sub
adc
adc
btc
call
lcall
mov
test
xor
test
not
or
and
not
bts
and
add
add
shr
cmp
shr
test
and
test
xor
call
lcall
lock
adc
jae
lock
roll
mov
mov
clc
in
bts
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
xor
and
cmp
sub
movsbl
test
movzwl
btr
mov
sub
adc
btc
adc
movzbl
mov
bsf
call
lcall
rorl
enter
cmp
or
not
adc
dec
xor
mov
adc
add
xor
or
add
sub
btr
cmp
je
add
test
adc
or
not
bt
test
btc
test
add
or
neg
bsf
and
or
sub
bt
call
lcall
movswl
sub
cmp
and
or
or
test
shl
sub
and
xor
bsf
shl
test
bswap
mov
cmp
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
cmp
xor
add
test
bt
neg
sub
push
decl
mov
add
add
or
mov
sub
cmp
cmp
xor
inc
push
decl
mov
add
and
mov
test
and
bt
neg
bts
bt
add
bt
not
movzwl
bts
bswap
neg
add
neg
sub
jmp
btr
xor
cmp
mov
or
shl
mov
movswl
btr
xor
adc
xor
xor
add
mov
shl
shr
sub
btr
sub
and
adc
add
mov
bsf
cmp
add
xor
adc
movswl
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
bsf
adc
bts
sub
and
cmp
xor
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
adc
shl
btr
mov
btc
shr
btc
movsbl
push
push
and
or
adc
add
cmp
or
adc
btr
push
sub
mov
adc
neg
or
add
dec
bt
bts
xor
test
mov
sub
cmp
test
or
sub
btc
test
call
lcall
js
cli
mov
xor
sub
adc
movzbl
shl
sub
btr
lea
sub
shr
bts
shr
mov
btr
shl
add
mov
test
shl
shr
shl
cmp
mov
test
adc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
mov
out
test
add
bt
neg
sub
inc
bsf
mov
btc
sub
mov
btc
xor
xor
btc
sub
cmp
btc
neg
btr
push
mov
neg
inc
adc
add
or
add
xor
push
shl
xor
bts
or
btc
not
add
shl
cmp
push
sub
not
btc
xor
not
test
and
adc
call
lcall
mov
bts
inc
test
or
xor
and
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
bsf
add
shl
shr
bts
shr
and
add
and
call
lcall
sub
arpl
out
roll
not
btr
bts
adc
add
and
cmp
and
shl
or
or
btc
call
lcall
mov
xor
bswap
neg
and
mov
add
xor
cmp
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
add
add
mov
add
or
add
or
pop
pop
pop
cmpsb
pop
popa
subb
xor
pop
pop
xor
pop
mov
aad
xor
mov
and
pop
ret
or
sub
pushf
or
sbb
pusha
xor
xchg
push
push
add
leave
pop
mov
sbb
and
push
xchg
aad
ret
test
mov
mov
outsb
adc
scas
inc
dec
subl
jae
mov
push
popa
ljmp
xchg
xor
jge
das
add
xorl
add
pop
ljmp
cli
pop
sbb
add
clc
sti
xor
ret
leave
ss
push
outsb
les
cmpsb
add
iret
or
jbe
or
pop
adc
pop
dec
cmp
test
push
inc
std
dec
ja
sub
pop
push
loopne
xlat
or
add
shlb
cmp
orb
sbb
or
jle
and
pop
sub
sub
dec
or
and
fsubl
mov
fmull
mov
push
movsl
mov
lea
andb
add
and
nop
inc
mov
subl
add
mov
adc
push
call
pop
mov
add
inc
dec
inc
push
dec
push
out
xor
inc
pop
inc
aaa
cmp
pop
in
dec
je
in
inc
in
jge
jnp
call
pop
mov
push
mov
ja
jl
sqrtps
pop
inc
push
dec
push
inc
push
in
in
cmp
push
hlt
inc
aas
xor
jecxz
inc
aaa
mov
test
jle
dec
orb
ss
push
push
inc
inc
call
dec
mov
shll
dec
inc
cmc
dec
inc
and
pop
push
push
test
push
pop
aaa
xor
dec
inc
nop
inc
dec
dec
push
cmp
inc
cmp
aaa
push
pop
cmp
dec
out
push
mov
dec
dec
inc
incb
aad
xor
inc
sarl
cmp
lds
mov
in
push
pop
push
inc
pop
inc
cmp
dec
dec
push
sbb
push
mov
lahf
cmpsl
ss
mov
imul
mov
sub
pop
outsl
jae
and
jne
test
outsb
stc
sarl
pop
outsl
cs
cmpsl
outsl
addr16
dec
insl
add
insb
push
outsb
je
bound
sbb
pop
add
ret
and
lds
sub
ffreep
push
push
push
imul
mov
push
and
push
jle
out
and
jo
scas
arpl
movq
in
cmp
lahf
mov
adc
mov
inc
test
shll
dec
sarl
int3
sbb
loope
push
dec
divl
aam
outsb
repnz
push
outsb
add
jb
and
and
jo
push
outsl
xor
jbe
jbe
test
inc
xchg
jmp
movsb
enter
pushw
push
decl
jne
adc
xchg
inc
cs
test
xchg
add
add
pop
mov
push
push
add
push
push
je
or
add
inc
push
call
sbb
add
pusha
adc
insl
mov
xlat
mov
popa
addr16
mov
inc
ret
jns
je
or
loope
negl
icebp
add
or
fs
repz
pop
je
daa
int
iret
out
vpabsw
pop
sub
push
js
mov
fs
xor
push
in
aad
push
dec
popa
jns
mov
xchg
jecxz
or
cmp
cs
add
pusha
pushf
sbbb
push
dec
inc
push
push
inc
push
inc
dec
pop
mov
xchg
aad
popa
or
inc
daa
add
fadds
