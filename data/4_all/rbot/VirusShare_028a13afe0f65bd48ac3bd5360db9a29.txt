push
add
test
mov
arpl
xor
in
ficompl
mov
pop
adc
add
sub
xor
or
pop
sbb
sti
inc
inc
adc
jl
sbbb
mov
mov
xor
push
add
imul
orb
or
jg
orb
mov
mov
or
xchg
mov
mov
pusha
out
imul
jne
mov
xchg
sbb
cld
stc
sub
sub
mov
xchg
jb
or
repnz
add
inc
pushf
mov
or
out
andl
je
cmp
sub
or
lea
fadds
xchg
fwait
pop
sbb
jmp
mov
int
nop
mov
nop
arpl
mov
popf
inc
sbb
sbb
fs
mov
push
lock
mov
pop
cmp
mov
lods
bound
into
cmp
xchg
xor
cmpsb
les
and
out
push
sbb
lods
lods
dec
xchg
mov
mov
mov
shll
repz
out
out
mov
mov
in
cltd
data16
test
pop
pop
test
pusha
and
lahf
mov
insl
into
cmp
aad
add
cmp
ljmp
int3
loop
mov
mov
jb
pop
dec
push
pop
xor
out
dec
jo
jnp
xor
push
pop
dec
sub
lea
cmp
add
inc
push
or
adc
call
or
je
out
dec
add
test
cmp
aas
daa
insb
push
mov
scas
or
mov
fdivrl
adc
sbb
icebp
mov
in
fcmovne
xor
or
mov
movsl
cmc
dec
inc
jne
and
sub
bound
adc
nop
rolb
push
ficomps
sub
imul
xor
mov
loop
push
and
mov
nop
shrl
imul
dec
jae
jecxz
aad
push
cmp
push
sbb
icebp
loopne
in
sub
cmp
orb
or
xchg
lret
adc
shlb
xchg
pusha
cltd
daa
cld
clc
push
ja
jmp
cmp
repz
inc
sub
hlt
cmp
leave
inc
in
daa
mov
add
add
pushf
scas
lcall
mov
mov
inc
mov
dec
xor
cmpsb
sarb
rcl
lcall
xchg
repnz
jmp
cmp
out
xchg
shlb
dec
add
push
xor
pusha
shll
xor
ds
inc
xor
mov
inc
ret
or
cltd
arpl
and
lods
imul
aad
xchg
adc
ret
sbb
stc
adc
jmp
subl
in
cwtl
out
fwait
mov
adc
and
xchg
push
mov
js
call
dec
aad
mov
jb
mov
cmp
stc
or
shl
es
cld
ljmp
pop
jp
pusha
xor
pop
pop
adc
shll
mov
jns
not
xchg
mov
js
decl
xorb
mov
lds
mov
cs
add
int
lret
jnp
push
loope
xor
fistpll
je
rclb
in
data16
lret
fwait
sub
adc
pop
mov
iret
lcall
jns
mov
popa
jmp
or
sbb
daa
jge
and
jb
mov
mov
jo
out
inc
dec
push
insl
mov
cmpl
lods
pop
mov
fs
cmp
mov
dec
pop
or
lods
xchg
push
adc
lret
stos
loop
pushf
pop
popa
adc
lock
leave
fldcw
les
fmuls
xchg
push
xlat
add
mov
xchg
scas
sub
mov
inc
sbb
cmpsb
or
rorw
add
cmp
mov
jg
ss
and
cmpsb
mov
adc
out
fs
hlt
or
adc
addr16
and
or
push
push
icebp
jno
mov
ror
shlb
stos
cmpsl
adc
lret
sbb
push
mov
add
xchg
pop
cld
fs
add
push
lret
stos
das
add
push
inc
imul
inc
dec
sbb
push
push
cltd
popw
sub
push
mov
sub
adc
sbb
test
xor
lret
jg
inc
mov
scas
push
push
fsubrs
imul
lods
arpl
sbb
nop
push
mov
jns
sbb
rcrl
mov
sahf
movb
test
xor
push
sbb
push
sub
push
aas
and
sub
cmpsl
xor
xchg
mov
inc
rolb
dec
enter
inc
push
adc
xor
daa
mov
lods
and
cmp
push
push
push
mov
jno
xorl
sub
jbe
push
out
insb
andb
aam
sub
jle
push
cmp
mov
and
push
push
nop
mov
je
adcb
add
mov
aas
xchg
xchg
xor
out
ljmp
jle
aam
data16
movl
ljmp
test
lock
adc
ret
pop
adc
sahf
loopne
pusha
clc
sub
inc
pop
aad
sbb
inc
xchg
daa
and
xchg
sbb
cmp
pop
arpl
jnp
fisttpll
xorb
ret
cmpsl
pushf
xor
and
and
xchg
mov
xor
mov
loop
add
out
jnp
out
mov
adc
xchg
sbbb
inc
imul
or
xchg
icebp
inc
inc
inc
inc
mov
in
xchg
lahf
bound
mov
popf
cli
dec
cltd
hlt
inc
in
mov
inc
add
paddusb
push
mov
test
jo
inc
mov
and
sbb
sub
insl
out
repnz
inc
pushf
out
cmpsl
xlat
adc
jl
jo
movsl
or
or
xor
jns
subb
nop
or
jecxz
adc
sbb
sbb
aaa
fstpl
push
jo
mov
dec
inc
cmp
push
dec
bound
mov
add
aad
add
movl
repnz
mov
mov
cwtl
and
mov
mov
arpl
mov
pop
leave
and
mov
lret
mov
adc
add
mov
mov
imul
popf
cmp
stos
sub
push
ret
div
dec
lahf
dec
test
add
adc
subb
cmp
out
fidivs
push
adc
or
test
sti
arpl
fcomp
mov
repz
or
mov
jnp
cmpb
push
es
push
push
push
pop
repnz
xchg
cs
xchg
outsl
jp
jbe
push
xor
and
adc
mov
inc
mov
nop
testl
xor
test
arpl
xchg
or
shll
cmpsl
roll
in
lods
fisttpll
jp
cmpsb
cmp
jb
and
add
dec
popf
lcall
cli
pop
and
pand
nop
pop
or
mov
xor
rcll
push
lret
data16
jecxz
fldenv
popa
pop
xor
xorl
dec
xchg
pushw
notb
inc
dec
and
imul
call
inc
and
mov
ror
mov
fucomp
dec
mov
popa
pop
cmpsb
int
test
in
mov
sbb
int
jp
jp
dec
add
xchg
cwtl
push
jne
and
addb
fdivp
push
mov
sbb
test
sbb
jo
push
inc
in
mov
and
mov
xchg
dec
and
add
mov
pop
xchg
sahf
sbb
stos
loop
mov
jb
arpl
adc
or
sbb
mov
pop
add
adc
adc
stc
dec
push
jg
jns
push
sbbl
ret
lods
iret
and
cmpsl
outsl
pop
jmp
pushf
xchg
sti
arpl
nop
xchg
and
pusha
xor
jmp
dec
ljmp
inc
fsubs
imul
pop
inc
mov
addr16
jnp
mov
jmp
rclb
shrl
shrb
xchg
jmp
fldt
lds
pusha
stos
jg
ljmp
xor
in
cmp
xor
adc
xchg
add
in
enter
fistps
cmp
rcll
and
mov
inc
push
es
adc
mov
push
jb
jne
mov
cmp
mov
jo
inc
mov
push
pop
xor
dec
sub
or
es
orb
lock
je
imul
adc
or
sbb
scas
loope
sub
cmp
test
lret
and
mov
pop
and
push
mov
popl
adc
movsb
push
mov
gs
sbbb
out
subl
mov
pop
cmp
mov
mov
les
inc
add
movsb
push
xor
nop
lods
xchg
or
adc
loope
pop
in
cmp
mov
je
inc
cmp
add
mov
aad
sbb
scas
pusha
and
pop
pusha
aaa
loop
cltd
add
daa
xchg
iret
cmp
jne
dec
shll
mov
adc
mov
xchg
ret
and
cwtl
adc
dec
movsl
sub
xchg
arpl
aam
xchg
xchg
jne
movsb
jbe
xchg
add
jb
xchg
mov
mov
mov
and
int
andl
jns
sbb
mov
adc
gs
mov
cmpsl
mov
mov
mov
mov
fistpll
lods
insl
and
hlt
fisubl
test
mov
xchg
pop
daa
fwait
orl
xor
adc
imul
test
setge
add
adc
sbb
pushf
leave
dec
mov
ret
shlb
mov
mov
cltd
push
jne
fsubrs
mov
notl
jno
pop
sbb
test
hlt
outsl
outsb
stos
sub
push
jl
insl
stos
mov
cmp
push
xchg
mov
clc
icebp
mov
ret
sbb
or
loope
or
mov
es
mov
adc
or
das
fsubrs
test
sbb
jecxz
inc
add
jo
mov
std
loop
jns
cli
adc
xchg
enter
and
loope
mov
add
dec
cld
clc
inc
inc
and
sbb
xchg
andl
pop
jb
jge
sub
mov
pusha
add
enter
dec
jmp
mov
rclb
repnz
sbb
dec
loop
movsl
xor
push
xchg
cmp
xchg
std
fwait
xlat
sahf
or
shr
cltd
shll
aam
or
cld
lock
or
cmpsl
mov
pop
out
mov
test
loop
dec
shll
dec
add
add
outsl
pop
mov
mov
jmp
sahf
dec
pop
or
push
add
sub
outsl
inc
sbb
inc
nop
bnd
lea
mov
jle
mov
cs
aas
adcb
fdivrl
add
addb
out
pop
cmp
push
cld
dec
dec
pop
mov
enter
scas
dec
push
jae
mov
loop
je
xor
mov
push
push
dec
test
fs
lret
repnz
test
add
repz
icebp
je
push
aaa
push
sbb
lods
loop
arpl
adc
xorb
push
gs
or
jne
ss
sbb
dec
xchg
xor
andl
test
dec
and
push
sbb
and
test
jo
mov
mov
pop
in
lods
stos
inc
aad
mov
dec
rolb
popa
push
jne
adc
lret
pop
and
loop
xchg
roll
scas
pop
sbb
mov
add
lods
fisubrs
in
xorl
pop
mov
jne
mov
mov
add
fildl
add
ljmp
sbb
push
popa
sbbb
sbbb
test
sarb
inc
cmp
stos
ret
mov
fisubrl
sub
jecxz
scas
test
xor
in
or
repz
mov
stc
xchg
repnz
inc
dec
adc
sub
es
xor
pop
sub
lea
arpl
dec
sbb
xchg
add
dec
mov
lahf
xchg
rol
sub
xor
loop
out
push
mov
movsb
sbb
pop
push
xor
jbe
xchg
shrb
mov
lods
decl
imul
aam
jne
push
ljmp
sbb
pop
inc
lea
add
mov
test
mov
cmp
nop
lock
adc
cwtl
jne
dec
jg
lahf
pushf
daa
test
loope
push
fistl
dec
jbe
xchg
or
or
stos
push
sti
adc
sub
mov
bound
mov
sbb
aaa
jmp
inc
sub
mov
jns
movsl
xor
sbb
into
xor
or
sarl
fisttpll
ret
xor
lock
lret
push
imul
mov
lods
stos
push
cmp
adc
push
lods
mov
add
or
mov
sub
repz
sub
inc
ret
inc
jg
push
aaa
ljmp
pop
sub
sub
insb
sbb
loop
sbb
pop
mov
jnp
stos
xlat
rolb
lret
and
fcomi
in
mov
and
mov
adc
bound
inc
lods
stc
xorl
subb
or
push
mov
addl
jle
mov
add
cmp
pop
aad
jb
shlb
rorb
scas
ret
push
popa
xor
and
cmpsb
adcb
lahf
lret
adc
pop
mov
add
andb
xchg
jecxz
shll
mov
jge
xor
sbb
stc
mov
mov
call
inc
icebp
ss
int3
stc
sub
adc
mov
pusha
inc
loop
jne
push
outsl
pop
jo
push
xchg
pop
push
lcall
xor
shlb
inc
cmp
add
xchg
aaa
jl
add
movsl
add
mov
in
icebp
addb
testb
js
and
clc
add
js
adc
fistpll
icebp
flds
les
mov
pushf
std
sbb
xchg
pop
loopne
xrelease
or
ds
dec
mov
push
or
xchg
mov
outsb
xorb
push
aaa
mov
ja
xchg
mov
mov
push
push
and
mov
mov
add
enter
and
mov
cld
xchg
imul
adc
jb
inc
inc
ret
iret
or
stos
mov
mov
sub
insb
and
loope
xchg
negb
movb
xor
pop
nop
cltd
jl
mov
pop
les
and
mov
xor
loop
sbb
adc
sarl
and
mov
stos
icebp
push
adc
lea
adc
and
icebp
jb
js
and
clc
add
js
outsb
adc
jl
inc
inc
mov
loope
loop
sbb
int3
iret
lret
lcall
jge
mov
sbb
mov
xor
adc
pusha
jns
push
inc
icebp
icebp
add
pop
adc
cli
push
inc
jne
inc
pop
das
adc
jl
into
or
and
adc
xor
xchg
shlb
adc
or
pushf
sub
push
or
add
insb
shrb
mov
push
rcrb
stos
mov
addr16
xchg
in
dec
int
sti
push
cmp
cltd
fnstcw
mov
sbb
test
enter
lret
lods
movb
call
mov
and
mov
loop
sbb
mov
push
mov
adc
cmp
inc
leave
push
and
stc
mov
and
add
into
push
cmp
mov
je
ss
cli
cmp
and
movsb
pop
xchg
sub
int
and
mov
divb
insl
shl
aam
push
dec
or
mov
xchg
xor
les
xor
cmp
xor
out
movl
je
jmp
mov
mov
enter
xchg
mov
faddl
repz
les
xor
push
nop
cmp
xor
pop
xor
ljmp
mov
loop
sbb
in
enter
movsb
mov
loop
sbb
cwtl
sbb
sub
adc
ljmp
xchg
pop
fs
xor
pop
hlt
mov
or
in
xor
sarb
xchg
cwtl
arpl
and
loop
sbb
mov
adc
arpl
enter
repnz
mov
lret
push
clc
push
push
xor
test
push
ret
and
nop
cmp
pushf
aad
and
cmpb
cwtl
push
add
jg,pt
ja
mov
les
mov
adc
sub
adc
or
cmpsl
cmp
loope
jge
inc
imul
call
aad
jae
pop
pop
repz
fcomi
and
mov
call
sbb
jo
lret
mov
sub
cltd
pop
mov
adc
jns
mov
outsl
xor
aam
movups
and
bound
call
pushf
add
cltd
mov
push
jo
mov
hlt
mov
xor
pushf
pushf
test
aam
jcxz
sbb
mov
adcl
dec
push
sub
lds
jnp
jge
int
cmp
outsb
push
fiadds
push
dec
cli
pop
mov
inc
stc
pop
mov
enter
and
mov
or
mov
xlat
mov
adc
or
adc
adc
push
sbb
inc
push
pminsw
cltd
and
push
lods
pop
std
or
std
jne
hlt
jbe
pop
jle
fstl
test
loope
mov
mov
ljmp
test
movsl
xchg
lret
cmc
push
in
cli
sub
or
inc
sub
int3
xchg
js
repz
insb
lea
sbb
dec
lret
inc
add
int3
push
aad
insl
scas
popa
shll
sbb
fnstenv
pop
mov
lret
leave
xor
mov
and
lcall
ret
dec
aaa
pop
iret
adc
movb
lock
jae
sbb
push
stc
pop
lods
popa
iret
imul
cmp
ljmp
mov
fisubl
jecxz
add
add
and
push
push
add
mov
dec
sbb
inc
xlat
and
xchg
cmp
loop
sbb
or
cmp
repz
mov
and
dec
fucomp
loop
loope
jle
and
push
or
repz
pusha
lds
adc
rol
add
and
clc
xchg
pop
and
sbb
and
mov
inc
subb
or
xorl
mov
xchg
pop
adc
enter
iret
mov
inc
jle
xor
das
mov
sub
xchg
mov
dec
xor
movsl
push
cld
inc
and
sbb
fsub
cmp
add
push
movb
mov
lds
arpl
adc
mov
mov
fdiv
sti
or
pop
adc
and
clc
jg
mov
cmp
xchg
aam
jecxz
test
xchg
pop
les
test
inc
ja
push
inc
pop
les
xor
shlb
sub
and
mov
test
sub
popa
aam
pop
dec
bound
xchg
data16
sbb
into
shl
xor
and
mov
jecxz
sbb
and
sbb
fmull
inc
pop
sub
roll
inc
jge
cmp
arpl
add
sbb
cmp
push
pop
stc
xor
and
and
inc
fwait
mov
test
mov
adc
pop
mov
mov
scas
xor
filds
aas
sbb
movb
sbb
mov
and
clc
xchg
rcrb
rcl
pop
mov
add
push
mov
mov
stc
jecxz
sub
dec
pop
cli
ja
push
mov
insl
sub
and
enter
push
sti
fdiv
push
cmp
movl
arpl
push
sarb
jb
or
add
pop
pop
push
insl
ljmp
cld
fisttpll
das
bound
mov
lahf
call
sub
fistps
xchg
sbb
adc
mov
shlb
out
inc
mov
pop
or
push
xor
push
lea
mov
ss
inc
add
xchg
cwtl
or
aam
sub
mov
lods
inc
mov
xchg
jne
or
mov
outsb
popa
inc
mov
arpl
sbb
inc
mov
push
sub
bound
in
cmpsl
xchg
mov
dec
add
mov
es
adc
pop
inc
ja
xchg
xlat
mov
clc
inc
jns
adc
inc
mov
xor
and
decb
dec
in
in
test
inc
xor
rcrb
sbb
xor
inc
cmpsl
icebp
mul
mov
adcb
test
fstl
xchg
jne
lods
cmpsl
loop
sub
enter
inc
lods
or
sub
dec
mov
iret
xchg
dec
ss
jnp
fisubrs
sub
and
cmp
aam
addl
mov
add
shl
out
ja
add
lods
popa
test
lahf
mov
xchg
lcall
les
cmp
daa
push
push
dec
bound
push
mov
sub
lds
inc
test
movl
pop
mov
xchg
test
jae
imulb
jp
test
mov
adc
pop
icebp
xor
jp
cmp
and
stos
iret
js
movsb
inc
pop
push
mov
jo,pt
cmp
push
popa
daa
adc
cs
jmp
fcomps
xor
push
xor
dec
rcll
pop
test
movsb
lds
das
or
stos
fadds
adc
xlat
scas
test
and
mov
je
pop
jb
push
cwtl
pushf
nopl
sahf
shl
adc
mov
subb
add
aad
or
inc
dec
ret
hlt
add
pop
xorb
add
popf
xchg
sbb
and
and
fistpl
push
mov
fsubs
xchg
pop
sub
inc
mov
pop
and
pop
adc
sbb
or
mov
call
pop
mov
nop
dec
scas
lea
stos
jo
sbb
dec
jmp
aam
int3
lds
and
sahf
xchg
pop
mov
cmp
hlt
inc
mov
fstpt
inc
adc
push
and
mov
and
lret
lods
sub
f2xm1
fistps
arpl
mov
ds
push
scas
jecxz,pt
mov
cmpsl
dec
ffree
xchg
mov
jae
clc
lahf
jecxz
sbb
jnp
push
ret
cmp
pop
lds
mov
icebp
pop
cltd
dec
mov
push
push
adc
mov
sbb
sub
in
lock
mov
add
loope
jp
xorl
cmp
in
push
xor
pusha
push
xor
inc
sbb
adc
pop
lsl
inc
mov
add
cmp
icebp
inc
or
xchg
out
mov
xor
jb
pop
popf
test
pushf
out
arpl
jle
ja
mov
and
cmpsl
ffree
fsub
push
lea
mov
mov
fidivrl
jb
push
mov
mov
test
or
nop
test
jmp
into
adc
adc
xor
stos
shlb
jnp
sahf
into
mov
pop
add
jecxz
in
xchg
stos
std
cmpsl
shlb
imull
push
jg
lds
inc
shl
jno
nop
rcrb
in
pop
daa
sbb
cmp
push
lock
scas
mov
adc
xchg
cmpsb
and
and
jge
cmp
adc
fwait
inc
lds
rorb
fcmovnb
sub
add
negb
dec
push
ljmp
das
imul
dec
in
cmp
xchg
loop
dec
mov
add
lods
pushf
cmpsl
aas
jmp
loop
xor
sbb
fsubrp
mov
mov
lods
inc
negb
adc
fbld
add
std
es
xchg
jne
pop
pusha
test
bound
xor
dec
test
jnp
push
and
xor
js
inc
roll
cmp
lahf
fsubl
mov
xchg
pop
push
fadds
sbb
subb
cmp
cld
sub
popf
jecxz
cmp
xchg
das
xlat
int3
lods
mov
in
sub
int3
ror
sbb
inc
pop
sub
push
in
les
pusha
jmp
jge
and
leave
adc
sbbl
pushf
xor
insb
fwait
movaps
mov
push
and
lods
adc
sahf
sahf
mov
xchg
xchg
fwait
adc
sar
pop
inc
outsl
negl
gs
pop
xchg
test
sbb
and
notb
and
pop
test
cs
fwait
popf
xchg
pop
sbb
mov
movsl
xchg
push
dec
es
or
push
push
adc
sub
xor
outsb
mov
and
lock
sbb
xchg
sbb
inc
lods
adc
seto
and
lcall
aam
test
mov
or
ss
or
es
in
mov
lods
mov
int3
iret
test
ss
loopne
mov
add
adcl
jl
out
fildl
and
cwtl
cltd
pop
in
sub
out
dec
xor
cmp
roll
adc
push
iret
mov
mov
gs
mov
push
and
aad
sub
enter
or
arpl
data16
mov
fiadds
jecxz
lds
sbb
jns
sbb
rcrb
pop
loopne
test
push
sub
pop
mov
movsb
push
xchg
fstps
lods
inc
inc
xor
or
imul
or
sub
inc
mov
stos
xorl
orb
lods
filds
push
orl
outsl
paddq
aam
lcall
inc
cmc
xor
inc
stc
or
shrl
xchg
mov
adc
xchg
subps
daa
jnp
inc
xor
test
aad
dec
pop
aam
arpl
lods
sbb
add
mov
fcomps
mov
aam
add
inc
xchg
hlt
xor
and
sbb
dec
and
popa
daa
xchg
movsl
push
adc
jbe
fbstp
sbb
and
shll
insl
lds
cmpl
dec
cmpsl
lcall
adc
dec
push
into
ljmp
stc
lock
int3
lods
sbb
ds
sbb
mov
test
popf
jo
icebp
rorl
or
clc
xor
sarl
std
bound
sbb
inc
or
jge
pop
mov
ret
adcl
mov
enter
mov
sbb
inc
adc
repnz
adc
jmp
sub
fs
adc
inc
add
push
mov
jo
push
iret
stos
xchg
in
push
and
lcall
xor
jle
or
gs
mov
sub
jmp
and
inc
push
push
cmp
push
fstps
pop
push
xchg
xchg
sti
dec
pop
dec
jmp
mov
pop
mov
cmpsl
out
mov
xchg
push
and
test
pop
aad
lods
mov
in
fidivrs
enter
popa
or
push
sbb
pop
pop
xchg
mov
stos
movsb
xor
add
jl
sbb
lahf
out
ret
ss
movsl
rolb
mov
push
mov
push
xlat
daa
out
xorb
ljmp
repnz
aam
imulb
ret
stc
mov
pop
jnp
push
push
enter
jg
loopne
xorl
mov
cmp
mov
andb
in
mov
ds
outsb
sar
mov
or
lods
jnp
in
mov
lods
arpl
ljmp
enter
sbb
cltd
or
das
in
iret
mov
fs
fildl
scas
mov
lahf
sti
repnz
stos
rorb
mov
js
push
sub
jno
dec
xor
out
not
push
pop
cmp
ret
cmp
outsb
in
mov
arpl
inc
adc
cmp
xchg
mov
ljmp
hlt
fadd
nop
mov
cmp
pop
mov
xor
add
push
mov
lods
aad
lods
loope
dec
popa
and
mov
xchg
cmpsb
push
adc
ja
pop
aam
sub
mov
cmpsl
shr
mov
jp
mov
insl
adc
xchg
fwait
jns
sbb
insb
fistpll
aad
sarb
mov
mov
insl
out
decb
and
inc
lret
and
push
xor
add
push
mov
inc
dec
repz
ljmp
inc
dec
bound
add
adc
aad
jne
xchg
cmp
sub
jge
mov
lcall
mov
push
inc
cmpsb
inc
aaa
cli
push
sbb
mov
filds
adc
push
mov
pop
add
mov
call
sti
ds
mov
mov
rorl
push
mov
loop
or
and
stos
push
mov
test
pop
cmpsl
sbb
mov
jle
imul
inc
test
aad
lcall
push
int3
sub
xchg
pop
lds
jge
pop
ror
leave
into
cmpsb
mov
xlat
adc
mov
sub
imul
and
cs
hlt
push
and
mov
sbb
sbb
out
ret
sub
sub
stos
or
addr16
pop
clc
lahf
js
fs
push
sbb
adcb
out
insl
adc
xor
xchg
cmpsb
and
xchg
mov
int3
adc
mov
lcall
mov
mov
mov
cwtl
fwait
adc
rol
adc
or
push
add
fs
push
add
pop
xor
xchg
xor
and
xlat
dec
ficoml
pop
cmp
js
sub
imul
ret
enter
repnz
lret
cmp
lock
out
push
mov
pop
rclb
popa
adc
scas
repnz
fldenv
xlat
sub
sub
sub
lcall
test
fildl
push
xchg
mov
test
dec
insb
xchg
or
pop
fildll
mov
dec
data16
pop
push
rol
outsb
movsl
inc
lds
gs
mov
movsl
enter
mov
stos
ficoml
scas
cmp
cmp
jge
mov
les
out
pop
mov
fs
lret
jg
clc
mov
mov
jb
jne
fsubrs
insb
inc
sbbb
or
scas
rcrl
stos
movb
popa
or
mov
push
in
in
pop
ret
popa
loop
sbb
stos
ret
xchg
mov
insl
xlat
ds
mov
jb
mov
leave
cmp
mov
mov
jmp
mov
jnp
push
mov
push
test
pop
inc
inc
das
cmc
mov
ss
std
pop
cmpsb
enter
and
inc
pcmpgtb
pop
out
cld
data16
push
dec
ror
or
xor
sub
stos
rorb
xor
dec
in
push
cs
xor
dec
pop
sti
js
adc
out
or
mov
xchg
xchg
movsl
fstl
lcall
sahf
mov
sbb
pop
and
and
mov
mov
sub
push
js
inc
pushw
adc
stos
cmc
cmp
cmpsb
jae
add
push
fstpl
ljmp
aad
mov
sbb
dec
xchg
dec
pop
shll
cmpsl
pop
fisubs
push
aam
jb
mov
mov
in
daa
das
mov
cmp
cmp
push
pop
dec
repnz
aas
ja
jecxz
aas
lahf
push
pop
fadds
sbb
jbe
repnz
xorl
inc
inc
das
fld
pop
mov
push
das
xchg
stos
pop
adc
add
pop
or
xor
sti
adc
adc
popa
test
and
mov
popf
xor
dec
lea
das
mov
cmpsl
test
mov
loop
daa
stos
mov
jmp
iret
or
ucomiss
pusha
adc
cmpsb
jle
repz
outsl
fsubs
dec
xabort
or
or
shrb
sub
pop
mov
jecxz
xchg
cmp
rcr
jmp
push
mov
xchg
inc
call
sub
xor
mov
ljmp
shll
cwtl
movsb
and
or
pop
repz
mov
repnz
xchg
push
sub
xor
pop
xchg
inc
repz
idiv
adc
mov
sbb
mov
xor
push
lods
sbb
jl
mov
mov
stc
ret
fwait
sbb
test
xlat
dec
inc
hlt
sbb
ret
je
mov
and
popa
into
stos
addl
pop
in
mov
mov
adc
int3
cmp
jno
pop
int
mov
mov
xchg
clc
sbb
mov
loope
mov
xchg
and
sub
cmp
mov
mov
pop
xchg
or
xor
adc
lods
arpl
lock
lock
ljmp
or
jmp
std
orb
pop
xchg
sub
push
sub
sub
sbb
pop
mov
jne
pop
push
dec
mov
jmp
std
sub
xchg
mov
dec
test
loop
addl
mov
ja
fwait
dec
scas
mov
mov
mov
jae
fldcw
adc
dec
dec
das
xchg
xchg
in
mov
stos
sub
fnstsw
fldt
icebp
inc
jmp
dec
cs
or
insl
mov
push
push
or
jmp
and
dec
add
enter
mov
clc
inc
inc
scas
lods
mov
sbb
push
or
test
jge
push
mov
stos
mov
sbbl
inc
inc
outsl
mov
xchg
pop
xchg
mov
mov
test
push
enter
lahf
push
add
cltd
loope
cmp
andb
fnstcw
pop
mov
or
and
test
sbb
xchg
jb
int
sub
jns
cs
pop
cmp
add
and
out
mov
outsl
into
fcmovb
lds
cmp
aam
sbb
enter
lds
pop
pop
push
test
rcr
dec
jae
test
bound
repz
testb
cltd
pushf
adc
push
rcr
dec
aam
fwait
inc
mov
ja
clc
mov
nop
adc
add
jmp
push
outsb
and
int3
pushf
mov
jno
sahf
mov
mov
xchg
jge
ffreep
dec
inc
or
add
jbe
cmp
lret
cmp
mov
cwtl
pop
gs
pusha
mov
inc
clc
push
cs
je
nop
mov
adc
gs
lahf
dec
lret
jae
out
pusha
jmp
out
or
lret
fistpl
push
mov
fs
mov
push
and
xchg
push
enter
fidivl
or
add
subb
xlat
push
sbb
and
ss
xchg
xor
mov
test
jecxz
or
sbb
xlat
test
mov
push
adc
mov
test
cli
mov
stos
cmp
mov
xchg
imul
mov
dec
sbb
jns
out
lret
pop
adc
movsb
fwait
dec
fildl
popa
fsubs
into
add
pop
mov
or
push
inc
push
js
in
sub
mov
cmpsl
jg
cmp
test
inc
mov
jbe
lcall
cwtl
loop
sbb
jae
push
and
les
xor
mov
data16
adc
and
mov
hlt
ljmp
outsl
loope
add
dec
pop
in
mov
lods
add
repnz
ds
test
push
sbb
xchg
xor
pop
std
pop
fcomip
cmp
arpl
ds
shrl
or
xor
xchg
lea
xchg
mov
cmp
adc
mov
jo
pop
test
fbstp
mov
hlt
mov
subb
ds
test
dec
idiv
mov
imul
leave
adc
and
in
jne
scas
cltd
jle
aas
es
inc
mov
fstpl
adc
lods
mov
pop
test
or
xchg
mov
adc
pop
mov
js
push
cmc
jnp
fisubl
icebp
inc
inc
mov
or
pop
add
shr
xchg
test
mov
aad
push
pop
mov
sub
mov
pop
sub
movsl
ret
push
mov
arpl
sub
ret
rclb
xchg
push
aad
cs
pop
add
mov
fcoms
ret
cld
pop
or
xor
adc
jb
jo
sbb
fimull
pop
inc
mov
in
in
clc
icebp
cmpsl
out
and
out
fistpll
movsl
in
cmp
fildll
fstpl
mov
mov
pop
add
insb
xchg
rcll
lcall
mov
fdivrp
movsb
xchg
push
notb
or
rorl
lcall
or
add
jo
popl
mov
or
add
or
fs
out
cld
sbb
les
cmc
roll
inc
sbb
sbb
xchg
xor
lods
roll
js
test
inc
mov
pop
pop
sub
push
xchg
cmc
bound
in
pop
xor
scas
mov
lret
pop
mov
lods
mov
push
xchg
add
leave
loope
ljmp
jmp
fdivl
mov
in
xchg
xor
jle
mov
adc
hlt
xor
rolb
mov
popa
pop
xor
jle
pop
in
fstl
push
int3
mov
and
pop
push
pusha
mov
ffreep
ds
cltd
push
repz
js
inc
mov
aas
inc
mov
xchg
jno
bound
xchg
pop
lods
push
xchg
xlat
dec
aad
inc
dec
cli
pushf
add
xor
mov
hlt
fdivrs
adc
stos
pop
andl
pushf
les
mov
or
fstpl
push
push
push
ss
sbb
addb
movsb
push
mov
dec
mov
mov
pop
jae
repnz
mov
xchg
mov
jmp
aam
push
adc
lock
sub
cmc
les
mov
jno
jp
insl
popf
sbb
or
iret
rcr
rolb
cmp
sbb
pop
sub
cmc
mov
xlat
test
ljmp
in
cli
sbb
jae
cltd
mov
pop
pop
fs
sti
es
jbe
xor
ror
stos
jge
or
sbb
inc
ja
test
xor
lds
adc
popf
dec
daa
jmp
lret
and
mov
mov
jg
mov
sub
and
rclb
push
mov
shll
std
ljmp
mov
mov
clc
out
lock
push
dec
in
xchg
call
adc
jg
in
int
in
scas
and
lea
mov
push
sti
loop
jg
and
dec
int
dec
lds
repz
ja
or
mov
into
inc
push
imul
call
add
fsubrp
jbe
pop
pop
adc
jmp
xlat
test
sub
mov
in
adc
scas
je
popf
and
xor
js
xor
mov
jnp
mov
xor
ret
add
fildll
sub
daa
movsb
insb
mov
notl
repz
inc
mov
push
cmp
fldenv
add
mov
push
in
mov
aad
adc
call
xchg
inc
xor
add
js
dec
jo
jle
bound
add
mov
imul
push
sarl
repz
les
pop
mov
ficoml
add
dec
ret
stos
jns
cli
push
push
rol
pusha
stc
clc
pushf
push
jmp
push
add
icebp
shll
scas
lcall
push
add
jnp
fadds
lret
inc
push
fidivl
or
jg
pop
mov
das
sahf
or
xlat
xor
cmp
lret
lret
shrb
sbb
inc
insl
scas
outsb
enter
xchg
or
mov
es
nop
adc
fidivrl
mov
mov
mov
loopne
or
jg
mov
in
cmp
jl
lahf
lods
push
and
imul
inc
int
dec
mov
mov
and
jne
dec
push
mov
and
mov
adc
test
xchg
fwait
inc
and
lcall
outsb
in
iret
loop
and
mov
adc
stc
ss
sub
dec
psubb
cmc
or
mulb
dec
jmp
and
pop
loope
dec
ljmp
adc
mov
pusha
imul
inc
or
das
mov
lea
mov
repz
and
insb
cmovae
push
lods
xor
push
sbb
push
out
lahf
cmpsl
stos
repnz
dec
mov
nop
add
mov
mov
sarb
mov
xchg
add
movsl
mov
leave
fwait
in
xchg
loope
push
mov
xlat
pop
cmp
xlat
dec
pop
sbbb
sahf
adc
or
dec
adc
movb
lret
xor
add
aam
loopne
lret
sbb
aad
fwait
xchg
xor
cmp
xchg
popf
xor
int3
push
adc
loop
push
lea
jle
pop
sbb
push
jbe
add
cli
mov
lods
inc
jno
sahf
push
ljmp
lea
mov
pushf
sbb
cmp
es
pop
mov
popa
out
jno
andl
xor
icebp
cmp
popa
inc
nop
pop
sub
in
add
hlt
aam
jae
cmp
pop
push
ljmp
pop
push
jae
cs
cmc
cwtl
dec
adc
jp
push
sub
lret
repz
adc
mov
or
out
mov
fisttps
addr16
adc
push
aaa
mov
xor
mov
mov
adc
mov
pop
xchg
inc
push
mov
jl
dec
mov
aaa
or
pop
jno
xchg
call
sbb
inc
fimull
inc
pop
mov
adc
mov
loopne
orb
mov
inc
and
jns
mov
sub
sbb
lds
push
xchg
sub
subb
inc
pop
enter
adc
sbb
push
mov
and
add
insl
add
pop
jmp
cld
dec
pop
pop
xor
or
les
dec
jnp,pn
test
insl
pop
mov
xchg
adc
cmp
pop
push
and
and
pop
jno
mov
adc
dec
push
sub
aad
and
cltd
fidivrs
cmpsb
dec
mov
xor
sbb
cmp
test
cli
jnp
xor
mov
faddp
shlb
mov
mov
and
sub
popa
loope
scas
pop
les
in
cmp
pop
mov
mov
sub
int3
mov
dec
rolb
or
je
add
xor
cmpsb
repz
pop
gs
iret
andl
test
cmp
cs
popa
arpl
imul
add
testb
stc
stos
jmp
andb
out
jle
test
jle
test
clc
stos
fadds
add
mov
adc
lahf
insl
inc
pop
aam
inc
dec
or
pop
orb
xchg
loope
push
adc
push
and
pop
or
clc
mov
scas
aam
mov
test
xchg
or
notb
fwait
adc
enter
push
leave
inc
leave
adc
stc
xchg
xor
cmpsl
sub
test
adc
inc
pop
pop
inc
call
in
or
push
xchg
push
in
lock
in
cmp
loop
out
in
add
adc
orl
xor
rcl
repz
push
aaa
orb
mov
imul
ret
xchg
sahf
mov
sub
nop
and
cmp
aam
mov
out
xlat
lods
jmp
lock
clc
mov
bound
popa
fisubrs
xor
push
pop
ja
xchg
xor
sti
aad
xchg
loopne
stc
cmp
jmp
pop
shll
xchg
jge
sub
inc
sub
inc
test
mov
cmp
jp
jno
cli
mov
cmp
inc
add
dec
sbb
jb
sub
test
setg
jp
insb
das
rcr
add
call
dec
imul
ljmp
out
pop
sbb
jmp
hlt
dec
dec
inc
iret
cmp
cld
hlt
jb
pop
in
insb
stos
mov
sub
mov
mov
cld
push
sub
out
add
pop
mov
fcmovbe
adc
daa
and
insl
movsl
jne
add
movsl
ret
scas
insb
test
xor
add
cli
or
mull
adc
stc
rcll
andb
add
sub
cmp
out
mov
loop
pop
add
jbe
aam
jl
mov
sbb
lock
inc
mov
or
mov
fcmovb
out
mov
or
jmp
sbb
outsb
lcall
loop
loopne
adc
jmp
and
push
movl
mov
dec
cltd
mov
leave
xor
repz
sti
add
pop
nop
stos
pop
jmp
lock
lock
sbb
shll
fsubrs
cli
lods
lcall
cmp
jo
pop
xor
push
inc
push
mov
mov
mov
mov
jp
jae
or
scas
mov
xorl
mov
mov
test
pop
sahf
popf
hlt
xor
fsubl
xor
or
enter
loop
jp
sbb
xor
lahf
mov
xlat
sub
cwtl
cli
outsl
sti
mov
aaa
fcomp
fisubl
es
daa
xchg
fs
outsl
leave
insl
insw
inc
adc
sub
mov
mov
jae
jmp
cmp
xchg
sbb
ja
xor
rclb
sub
mov
cmpsl
sbb
sbb
sub
or
adc
dec
mov
lods
nop
pop
jl
push
popf
jl
jno
add
or
in
mov
push
cmpsl
push
subl
inc
sbb
pop
add
and
stos
mov
and
or
sbb
cmp
sbb
mov
ss
daa
sub
inc
add
idivl
outsb
inc
xor
dec
es
push
and
in
lods
dec
sti
adc
sbb
adc
mov
add
xchg
cltd
jno
popa
xor
aad
add
dec
imul
cmp
cmpsb
div
xor
out
sub
push
jle
movsl
int3
dec
and
cmc
fldt
nop
jl
int3
dec
dec
push
jg
dec
xlat
fsubl
xchg
pushl
or
pusha
rclb
pop
xor
stc
ret
das
fnstcw
les
mov
les
hlt
and
mov
xorb
inc
pop
loopne
or
inc
es
inc
or
lods
xchg
sbb
std
addb
mov
insl
mov
push
rclb
push
jge
push
mov
mov
dec
lods
pop
ljmp
push
mov
mov
jmp
cltd
xor
xacquire
in
push
sub
fdivrp
pop
xor
fbstp
clc
aad
push
out
in
jl
and
pop
cli
std
scas
dec
pop
es
fdivrs
lret
push
test
cmp
inc
lods
out
dec
pop
or
loop
sub
sub
popa
push
inc
and
xor
imul
adc
bound
enter
add
shl
xchg
pusha
lock
and
and
and
inc
lods
dec
in
leave
hlt
lds
bound
aad
adc
inc
popa
mov
xchg
test
cmpsb
push
push
jg
in
push
cmpsb
push
add
lods
flds
push
shlb
out
push
jnp
sbb
jp
jge
adc
es
push
test
gs
shl
pop
out
xchg
jle
jbe
mov
push
add
or
push
dec
adc
sahf
inc
adc
adc
fisubs
and
in
xchg
adc
add
pop
mov
xchg
sahf
or
ja
popf
cmc
stc
in
jb
int3
imul
rclb
into
pop
cld
fisttpll
xchg
fdivrs
test
mov
adc
adc
mov
pop
add
arpl
adc
clc
or
ja,pn
adc
mov
mov
das
or
popa
mov
sahf
xor
movsb
fs
pop
jnp
call
or
loopne
dec
arpl
pop
adc
xor
jb
or
pusha
test
fisubs
shr
xchg
orl
lock
cwtl
adc
js
arpl
cld
std
fsubp
adc
int
es
pop
pushf
loop
xchg
push
aas
test
mov
jmp
inc
sub
int3
sahf
mov
in
adc
lret
inc
adc
sub
insl
pusha
mov
lds
jmp
dec
push
mov
insl
ljmp
loop
cmp
sbb
pop
outsb
cmp
cmpsl
pusha
fmull
dec
into
and
int3
jae
out
mov
aaa
jnp
jne
in
in
xchg
scas
mov
in
inc
ds
movsb
jns
cwtl
mov
jb
popa
sbb
dec
inc
dec
and
push
xor
jecxz
xor
pop
push
adc
sbb
int
gs
cmp
fabs
adc
shrl
imul
push
fildll
decl
mov
pop
dec
imul
sub
popa
sub
negl
ds
es
lods
adc
inc
insb
adc
mov
jmp
sub
and
loope
mov
push
iret
push
addr16
scas
jmp
push
mov
add
rorb
pop
push
pop
add
pxor
popf
add
xchg
test
aad
xor
inc
fistpl
sti
inc
inc
cmp
pop
pusha
inc
xor
mov
lret
fwait
shrb
and
mov
in
or
inc
push
mov
int3
insb
sub
outsl
push
cli
mov
movsl
dec
push
push
and
cmp
inc
cltd
rcrl
push
push
mov
stc
je
mov
aaa
mov
ljmp
cmp
nop
push
in
and
cmp
mov
dec
nop
inc
nop
and
das
and
or
ss
or
mov
dec
sbb
xchg
push
jecxz
addr16
cmpsl
repz
cwtl
adc
jo
test
xor
icebp
cmp
sti
inc
icebp
loopne
mov
cltd
xchg
call
dec
jmp
cmc
xchg
xchg
repnz
je
sub
shl
movsl
clc
mov
dec
inc
repz
leave
push
test
xchg
lock
cltd
out
sbb
xchg
sbb
repnz
fiaddl
mov
sub
iret
out
mov
xchg
cmpb
inc
cmpsl
xor
sub
hlt
xor
test
xchg
call
dec
xor
jmp
add
mov
js
mov
mov
int3
scas
int
xor
sti
std
cld
aas
mov
ret
call
movsl
xchg
pop
mov
pop
add
repnz
mulb
xchg
push
mov
push
add
pop
test
sahf
loop
sbb
insb
mov
cmp
std
shll
sub
or
mov
lcall
sub
and
cmp
fs
aad
lcall
jmp
adc
repz
push
push
in
mov
xchg
loop
stos
popf
mov
mov
dec
ljmp
fs
sbb
adc
int
gs
je
push
jae
sbb
adc
outsl
out
insl
mov
notb
cmp
xchg
push
scas
addl
add
fmuls
nop
insb
inc
dec
stos
stos
jb
sub
or
sub
iret
scas
fisttps
js
push
outsl
add
repz
lret
sar
stos
jp
jb
stc
loop
or
mov
movb
jle
mov
jl
cwtl
int
dec
xlat
lahf
push
add
and
xor
nop
sbb
and
ret
sbbl
pop
fdivr
fldenv
xlat
jmp
xchg
mov
xorb
enter
shlb
insb
dec
clc
xchg
frstor
dec
jnp
stos
cmpb
and
xchg
out
hlt
and
and
mov
adc
jno
mov
pushf
cmc
adc
roll
pop
and
xor
add
sbb
mov
das
pop
dec
jne
or
sub
bnd
or
jmp
mov
xchg
and
pushf
jbe
mov
sub
rorl
sbb
inc
rclb
push
sub
and
mov
outsb
jl
sub
mov
shl
leave
sub
ret
mov
fnsave
mov
ret
in
push
fisttpl
aam
in
pushf
xchg
jae
mov
cwtl
cmp
mov
mov
ds
inc
mov
or
lods
mov
cli
repz
cmpsb
adc
jnp
mov
mov
fcmove
sbb
ljmp
hlt
dec
call
lretw
push
mov
mov
lcall
push
push
adc
add
mov
mov
leave
inc
push
xchg
add
dec
loop
dec
mov
jmp
addr16
cmp
mov
dec
gs
adc
inc
mov
dec
mov
dec
cmpsb
mov
add
jmp
fldl2t
in
test
push
ret
sub
push
aam
xor
loope
push
lods
fwait
test
mov
in
push
mov
or
movsl
pop
push
fidivl
lcall
aas
js
mov
xchg
push
add
imul
imul
inc
or
jns
pop
sub
fmulp
enter
xor
je
mov
cmpsb
sti
rolb
icebp
movsb
in
lods
sbb
mov
rorl
inc
cmp
mov
popl
iret
adc
test
ret
std
jge
adc
fadds
or
ja
lods
jo
test
les
mov
pop
push
mov
push
gs
inc
inc
sub
mov
inc
mov
in
mov
test
ret
mov
aas
add
xchg
sbb
jmp
add
test
and
jl
add
push
adc
aaa
mov
jge
scas
pop
cltd
invd
xchg
scas
test
aaa
sub
ret
xchg
sub
rcr
and
or
test
dec
inc
dec
adc
mov
mov
or
push
mov
scas
or
dec
or
imul
push
popf
xchg
push
xchg
adc
jecxz
movsl
es
repz
fists
ljmp
mov
push
adc
pusha
lock
adc
or
sbb
nop
call
xchg
fisubs
adc
sahf
or
xor
and
jge
stos
or
add
popf
pop
pop
testb
inc
stos
cmc
iret
lret
fwait
push
hlt
in
lods
xor
cwtl
out
call
test
xchg
pusha
hlt
mov
jae
cld
imul
setb
inc
push
nop
movntq
push
outsb
shlb
inc
xor
jns
pop
push
fildl
mov
and
pop
mov
int
xchg
add
ret
leave
jp
jnp
sbb
mov
call
test
movsl
push
imul
sahf
out
dec
sub
mov
jno
sahf
jle
sub
xlat
push
test
push
push
mov
add
sub
insb
inc
inc
lret
sbb
into
sbb
les
push
pop
and
mov
jo
hlt
pushf
repz
icebp
notl
adc
inc
inc
inc
xchg
sub
sbb
adc
xor
pop
pop
sti
dec
mov
xor
dec
dec
scas
mov
push
outsb
cmp
jl
stos
js
jae
push
sti
fbld
in
shrl
sbb
xor
fs
jge
outsl
or
sub
jo
push
daa
mov
mov
sub
nop
xchg
sub
out
adc
loope
repz
sub
addr16
movsl
je
push
nop
pusha
fcoms
push
mov
call
test
loope
ffree
xchg
xchg
jne
movsl
sub
ja
fwait
dec
push
call
lds
jnp
xchg
jb
pusha
lds
lcall
pop
rcll
jne
or
repnz
in
test
rcll
pop
inc
fisttps
and
lods
xor
pop
xchg
xor
aas
jbe
nop
inc
pop
int3
pusha
out
mov
sub
mov
in
mov
sbb
cli
js
push
mov
cli
movsb
dec
jno
out
into
inc
xor
cmp
dec
mov
test
adc
subl
cmpsb
cmp
adcb
mov
iret
loope
rcl
xor
lret
and
lret
stos
lods
mov
sub
ficoml
aas
mov
mov
or
into
lcall
adc
adc
movsb
push
jae
arpl
in
add
fadds
and
dec
push
scas
adc
mov
fs
popa
addb
inc
add
cmpsl
shlb
mov
iret
test
pop
xchg
ss
xlat
in
test
push
adc
movl
ja
sbb
lea
xchg
dec
ds
or
mov
add
dec
dec
mov
pop
in
andl
movsl
pop
sbb
mov
jp
fsubs
lahf
andb
xchg
mov
movsl
pop
xlat
xchg
xor
add
test
pop
sub
loop
or
outsl
mov
cmp
cmp
sbb
jae
push
lea
or
pop
lods
vpaddq
clc
add
xor
ret
cmp
push
sbb
pop
out
outsb
nop
clc
push
jge
mov
and
test
push
insl
dec
testl
cmp
pop
jae
mov
rcll
movsb
jp
adc
mov
aas
pop
std
sub
sub
pop
sub
mov
dec
mov
lock
fstpl
aaa
sub
mov
fcoml
pop
mov
pusha
dec
fs
sub
mov
sbb
loop
stos
xchg
and
test
inc
lret
ret
test
jbe
xchg
loop
push
cmp
push
in
sbb
and
stos
mov
popa
or
ljmp
or
add
or
cmpsb
adc
pop
cmpsl
dec
mov
push
pop
imul
lods
dec
add
loope
sti
fs
loop
lret
insb
jns
add
inc
sti
mov
add
pop
sbb
repz
fists
mov
sti
push
xchg
pusha
imul
push
imul
mov
cli
loope
fsts
pop
fistps
mov
jecxz
and
scas
leave
mov
bound
dec
test
push
out
mov
bound
out
stc
sbb
push
or
movhps
or
or
test
add
dec
xchg
push
or
or
push
enter
xchg
dec
jae
push
jp
mov
jge
xchg
leave
lods
cwtl
sbb
outsl
pop
std
ficoms
mov
repnz
mov
sbb
add
test
xchg
fsubs
or
loop
inc
dec
lret
mov
cmpsl
test
cmpsl
jns
and
cmpl
xrelease
xor
enter
push
sbbb
mov
cld
les
cmpsl
jo
dec
sub
movsb
in
cmpsl
inc
pop
movsb
adc
mov
roll
insl
lods
ret
or
sbb
xor
xor
jecxz
outsb
or
out
adc
dec
xor
loope
pop
das
outsb
lods
pop
pop
js
dec
shrb
gs
adc
xor
sub
inc
jno
into
push
pop
neg
inc
add
push
inc
mov
jp
out
sbb
pop
push
dec
dec
mov
lahf
clc
dec
sbb
lcall
inc
jmp
push
mov
js
sbbl
cmc
mov
es
dec
sbb
sub
sbb
pop
repz
aas
bound
cli
xchg
sbb
sbb
stos
cmpl
adc
aaa
nop
sub
jae
jp
insl
ret
add
nop
dec
icebp
vcvtdq2ps
push
add
bound
push
lcallw
add
lods
insb
mov
inc
mov
inc
and
adc
insb
mov
inc
dec
mov
mov
and
inc
jp
dec
mov
pop
lock
dec
mov
cmpsl
ja
jo
mov
das
jno
clc
pop
insl
sahf
enter
dec
or
sub
popa
sub
sbb
fisubl
inc
aad
mov
lock
and
push
out
addr16
subl
inc
pop
jno
lret
aad
push
inc
and
or
adc
cmp
xchg
pop
push
adc
push
add
push
pusha
xor
cmp
subb
cltd
aad
jae
cmpsl
and
lret
dec
jbe
jne
int3
push
sub
test
fnstenv
mov
push
jle
push
push
test
mov
mov
sub
sub
pop
add
inc
or
das
push
mov
lods
sbb
cwtl
mov
adc
rcll
orl
add
jae
mov
out
pushf
inc
mov
mov
xor
and
aaa
mov
push
mov
aas
dec
adc
scas
pop
mov
sbb
xor
mov
in
sub
pushf
xor
dec
je
stos
repnz
push
xchg
adc
push
stos
xlat
mov
fmuls
stos
pop
sbb
inc
sbb
je
into
scas
add
stos
push
dec
cs
mov
inc
fs
adc
and
es
stc
aad
and
scas
mov
lret
pop
jne
loope
arpl
lcall
fbld
cmpb
cltd
arpl
mov
mulb
jp
push
sbb
cmp
add
sub
ss
mov
addr16
lret
jmp
clc
and
add
pop
out
jb
mov
popw
movsb
push
mov
adcl
cwtl
push
jmp
aas
inc
aas
mov
sbb
pusha
and
pop
imul
xchg
sbb
add
mov
nop
or
test
aam
into
in
mov
push
and
pop
pop
inc
push
sarb
aad
fdivs
xchg
hlt
movsb
xor
insl
push
fistpl
clc
fs
adc
ss
jmp
jmp
testl
xchg
cmpsl
lea
sbb
andb
mov
test
push
das
adc
pop
jns
test
push
stos
andl
mov
aas
stc
or
adc
push
inc
mov
mov
cmp
inc
out
dec
sbb
shr
and
jmp
jbe
pop
insl
sbb
arpl
cmp
jg
andb
and
mov
dec
movsb
xchg
adc
jecxz
adc
cmc
pop
movq
scas
inc
js
std
stos
jl
xchg
cmp
or
pushf
std
cmp
je
push
aam
and
in
mov
jb
jb
out
sub
fmull
xor
jae
fcmovnu
add
mov
aaa
pusha
leave
or
sti
xor
adc
popf
xchg
inc
lcall
pop
cmp
lret
outsl
xor
aas
mov
jmp
pusha
ss
push
adc
test
pop
and
sub
popa
and
outsl
out
andl
fwait
mov
addb
aad
jl
jecxz
sbb
fists
inc
divb
sti
repz
sbb
aaa
mov
bound
jge
insl
jecxz
sbb
mov
push
xchg
mov
sub
inc
pop
cmp
xor
cmp
push
dec
adc
hlt
pop
rcrb
ror
mov
mov
or
push
ja
ficompl
cmc
jle
lahf
aam
sbb
jns
les
shld
and
push
mov
sbb
push
jge
mov
cs
mov
addr16
push
popa
std
cwtl
sbb
fwait
lods
sbb
int
mov
lods
mov
ljmp
and
out
int3
mov
mov
test
daa
lea
inc
ret
and
inc
fildl
inc
sub
repnz
or
lcall
rcll
lret
or
pop
dec
adc
dec
imul
mov
stc
xor
and
add
inc
inc
jno
jnp
ds
pop
shl
pop
notb
data16
mov
loope
shll
cmp
lcall
fs
mov
out
cmp
stos
push
outsl
xor
jns
mov
add
dec
dec
mov
push
cmp
sbb
nop
fisubrs
push
mov
mov
xlat
subb
and
push
pop
shlb
rclb
testb
jp
push
inc
scas
xor
movb
push
and
gs
pop
push
or
xor
in
pushf
or
insl
pop
pushf
sbb
dec
adc
js
out
cmp
sub
hlt
gs
sbb
data16
add
adc
movsb
xchg
sub
aam
push
push
dec
adc
adc
sub
sbb
popa
lods
lock
push
push
xchg
add
scas
sti
arpl
mov
push
or
dec
mov
cmpsl
sub
leave
cmp
imul
and
jge
ja
nop
sub
lea
pop
xor
mov
xchg
sbb
sbb
into
icebp
jns
sbb
popa
dec
mov
movaps
cmpsb
roll
in
jmp
or
mov
push
pop
add
sub
inc
sbb
sbb
xor
xchg
andb
popf
sub
testb
gs
gs
fsubrs
bound
fwait
push
incl
jmp
rcrl
lods
or
dec
fsubr
int
movsb
mov
loop
xchg
push
push
cmp
dec
nop
mov
add
and
das
fadds
mov
loop
rorb
cmpsb
sti
insb
sbb
sub
mov
int
iret
inc
cmp
das
push
sub
lods
xchg
insb
inc
ret
add
push
fdivs
lret
mov
xchg
aam
mov
popl
out
outsb
mov
xor
xchg
xlat
mov
mov
and
xchg
test
xor
and
jbe
movsl
jo
fsubs
mov
add
xchg
mov
adc
ljmp
cmp
sbbl
dec
nop
in
notl
add
adc
imul
les
mov
icebp
mov
cld
jno
fs
jns
cmpsl
dec
int
mov
sbb
gs
mov
sbb
sbb
and
int3
inc
lret
shlb
add
mov
out
mov
mov
xchg
push
sub
dec
xchg
cs
push
jmp
adc
inc
into
daa
mov
inc
or
cwtl
xchg
int3
iret
scas
ljmp
sbb
lret
call
dec
xchg
xor
roll
insb
imul
push
add
add
nop
xlat
pop
sub
sbb
push
test
hlt
pop
fsubr
dec
das
xorl
add
and
jl
dec
out
aaa
push
dec
adc
bound
lahf
daa
in
aas
loope
xor
push
pop
test
mov
imul
lods
orl
mov
xor
out
daa
pop
sbb
push
mov
pusha
mov
sahf
or
adcl
fwait
mov
jns
cmp
inc
push
dec
cli
mov
mov
push
xor
in
push
out
cwtl
fs
iret
mov
xor
mov
jp
push
pop
adc
add
cmp
or
mov
cmp
mov
adc
fdivrs
mov
mov
and
mov
aam
jle
xor
dec
lods
pusha
push
jl
mov
push
out
mov
loope
add
daa
mov
ss
add
sbb
and
pop
fidivl
and
push
je
stos
add
and
jo
add
gs
and
push
mov
dec
dec
cwtl
add
jb
lds
jl
stos
cmp
push
mov
xor
in
jae
xor
test
decb
lods
xchg
mov
subl
push
push
xor
stos
out
or
jb
test
rol
ss
nop
in
mov
rcll
xchg
shlb
imulb
out
out
test
outsb
out
dec
outsl
test
sbb
dec
fstpl
and
jecxz
xor
aad
arpl
cmp
testb
scas
testl
in
or
loop
push
pop
xor
jmp
fs
lret
or
jmp
stos
sti
inc
push
ja
sbb
mov
sarl
dec
dec
lahf
jge
jne
mov
push
xor
loop
mov
xchg
stc
pop
lcall
call
pop
out
push
test
aad
or
fisttps
test
out
mov
xor
push
adc
push
pop
add
in
arpl
mov
jb
pop
rclb
mov
jbe
ljmp
mov
lods
mov
cmp
or
aas
adc
mov
mov
addr16
pop
fimuls
xchg
js
movsl
cmc
fcmovne
and
leave
fprem1
jae
das
icebp
aam
int
movsl
pop
push
data16
lds
imul
stos
xchg
dec
sub
jge
jns
lahf
insb
mov
out
dec
out
cmc
and
pop
pop
gs
mov
enter
mov
test
mov
dec
test
mov
push
xchg
leave
xchg
insl
ret
jno
in
xchg
lret
popf
cwtl
std
cmp
out
mov
push
push
pop
insb
rol
xchg
lods
aaa
or
cmp
sbb
dec
int3
xchg
and
into
cmp
sub
loopne
popa
push
imul
cwtl
test
pop
enter
and
mov
lret
loopne
out
cmc
sbb
andl
cmpsl
xchg
loop
es
jnp
sahf
pop
mov
in
into
mov
xchg
cmpl
rol
mov
and
rolb
add
enter
mov
daa
cmp
cmp
sbb
dec
inc
das
xor
repnz
loopne
movsl
out
fistps
out
sbb
mov
hlt
add
dec
movsb
lcall
lcall
daa
xor
filds
incl
or
outsb
stos
add
push
repz
inc
or
mov
jne
mov
aas
arpl
ds
add
movsb
cltd
cmp
pop
jbe
xchg
hlt
fisubrl
cmp
dec
es
mov
movsl
dec
mov
inc
scas
mov
addl
das
lds
call
daa
gs
push
rolb
inc
cmpsl
adc
les
sti
int
in
outsl
out
lock
int3
jnp
mov
pop
push
sti
mov
lea
pop
pop
cld
xor
pop
xor
xor
xchg
inc
sarb
inc
cmp
sub
cli
into
add
nop
mov
lret
mov
fisubrl
or
inc
inc
dec
jbe
ret
fidivrs
leave
call
popa
add
xor
and
in
or
fsubrs
xor
scas
movsl
adc
repnz
repz
push
outsb
inc
sub
shlb
jb
mov
jbe
loop
add
sbb
adc
mov
in
lret
andl
inc
xchg
pop
mov
enter
or
dec
popa
pop
scas
adc
mov
cmp
cmp
arpl
sub
out
jmp
gs
xor
rcll
adcb
and
nop
cmp
and
lret
icebp
sti
cmc
push
dec
push
push
cmp
sub
mov
mov
cmp
inc
dec
xor
jle
dec
sub
or
mov
ljmp
sub
xchg
pop
inc
add
aad
pop
sub
push
push
mov
push
negb
sbb
cltd
push
cmpsb
and
std
push
mov
cwtl
add
lea
in
aas
xor
mov
fbstp
repz
inc
dec
mov
lods
add
ret
imull
push
imul
leave
fnstsw
jg
bound
repnz
fistps
cmp
adc
pop
int3
inc
lods
xor
mov
fists
sub
or
int
push
in
jne
mov
mov
in
cmpsl
jge
js
imulb
sub
mov
jbe
mov
inc
jmp
xchg
cmp
jge
mov
insb
pop
icebp
aad
sahf
int3
das
fiadds
rcll
jns
cmp
cmp
cmp
rcpps
xchg
pusha
dec
mov
xchg
rorl
adc
iret
clc
nop
test
or
pop
fidivrs
jge
aad
push
into
pop
push
out
jb
loope
cld
jmp
push
jle
adc
in
xchg
mov
ljmp
cmpsl
inc
sub
cwtl
cltd
fs
fbld
mov
test
inc
lret
je
filds
jecxz
pop
loope
cmpsl
or
imul
fists
insb
sbb
stos
addr16
push
lcall
push
out
dec
sub
shrl
push
sub
push
inc
ds
in
or
jge
adc
mov
mov
jo
sbb
je
adcb
add
sbb
cmpsb
mov
push
js
xchg
xor
xchg
pop
xchg
mov
test
cli
pop
ja
inc
push
dec
sbb
pusha
adc
mov
inc
sbb
push
and
hlt
cmp
test
movsb
xlat
xor
repnz
rclb
xor
mov
hlt
dec
sahf
ror
test
mov
inc
adc
dec
push
inc
mov
xchg
xchg
pop
lcall
mov
inc
inc
push
je
ds
out
outsb
stos
jbe
push
pop
jb
bnd
sbb
sti
mov
jmp
add
add
mov
and
repz
inc
sub
stos
adc
jecxz
pop
jmp
push
jle
add
aad
xchg
cltd
ret
add
test
adc
rolb
adc
sbb
mov
add
add
fidivs
and
add
mov
data16
mov
out
dec
push
ljmp
xor
jmp
pushl
jbe
ljmp
daa
adc
jg
je
test
leave
repz
xchg
mov
dec
orb
or
jg
pop
adc
bound
or
mov
aaa
jb
loopne
xchg
xchg
out
andl
sbb
dec
inc
push
je
mov
repnz
lods
mov
dec
subl
in
test
push
adc
dec
push
jne
inc
or
inc
rclb
inc
inc
in
sbb
ss
aam
and
xor
loop
ret
out
inc
dec
test
arpl
xchg
or
add
or
pop
or
add
or
push
xchg
les
dec
std
dec
aas
inc
adc
cwtl
nop
daa
cwtl
push
popa
and
dec
push
sbb
or
imul
lret
adc
inc
pop
push
inc
pop
adc
test
ljmp
mov
popa
test
test
and
adc
nop
add
add
ljmp
fwait
push
sub
es
push
and
iret
mov
inc
mov
mov
add
sbbb
inc
pop
mov
push
xor
rolb
stc
nop
xchg
push
add
andb
cmp
sahf
or
jmp
aam
dec
ror
addr16
mov
adcl
pop
push
and
roll
aam
lahf
test
fwait
mov
addr16
mov
adc
fadds
inc
inc
adc
int
sub
iret
adc
in
inc
mov
inc
sbb
cmpsb
mov
sub
and
in
push
mov
gs
mov
fdivr
push
xchg
popf
fsubl
imul
fbstp
test
fnsave
cmp
lock
cwtl
adc
push
or
inc
jo
sbb
pusha
xor
dec
lret
xor
dec
imul
aam
xchg
dec
pusha
cwtl
nop
mov
es
mov
iret
dec
push
and
adc
dec
int3
dec
loop
nop
inc
nop
sub
in
inc
popa
sbb
fistpl
dec
js
sbb
cltd
ret
inc
mov
sbb
or
sub
mov
dec
pop
nop
test
or
xor
dec
or
fisubs
mov
or
push
dec
mov
jno
mov
mov
or
pusha
in
xorl
vpunpckhwd
push
pop
cmpsb
addb
or
push
or
mov
add
xlat
or
pop
jno
cmpsl
pop
sub
lds
cmpsl
pop
arpl
pusha
cmpsl
ljmp
cmpsl
and
and
arpl
out
das
adc
adc
test
inc
adc
les
ds
or
add
sbb
inc
addl
sbb
ja
or
push
daa
add
sbb
es
dec
sti
inc
adc
inc
add
xor
add
adc
add
xchg
adc
nop
fadds
daa
int
push
mov
push
dec
pop
lret
jbe
movsb
fldt
data16
push
mov
push
mov
aaa
arpl
dec
pop
stos
in
sbb
add
popl
les
nop
enter
int3
arpl
add
repz
pop
es
add
jg
arpl
jecxz
sbb
dec
scas
or
pop
rorb
pop
jo
and
aas
sub
hlt
adc
pop
add
cmp
and
xchg
xchg
push
xor
lcall
and
inc
mov
adc
and
icebp
adc
push
sbb
dec
cmp
xchg
adc
xor
into
mov
xchg
add
out
and
aam
in
mov
loop
enter
pop
in
sub
jle
repnz
loope
hlt
inc
aas
cmp
xchg
xor
push
lret
pop
xchg
mov
xchg
in
and
xor
adc
rcll
ljmp
or
jb
and
inc
adc
or
insb
ret
hlt
andb
sbb
xor
sub
hlt
jbe
adc
nop
add
add
or
pop
xor
pop
xchg
movsl
push
es
nop
dec
repnz
fistps
pop
orb
dec
xchg
bnd
and
and
adc
adc
and
mov
pop
or
ja
inc
push
fisubs
fimuls
push
inc
add
adc
adc
nop
or
dec
xor
adc
inc
xor
sub
andb
scas
mov
adc
pop
mov
dec
cmp
xchg
jmp
pop
jg
and
pop
jne
insb
jge
pusha
xchg
lahf
ljmp
xor
int
dec
repz
cld
inc
adcl
lds
xor
add
fstps
inc
inc
inc
mov
lea
push
mov
inc
mov
sbb
inc
icebp
in
push
inc
roll
adc
add
gs
inc
imul
adc
pop
fsubrs
and
dec
inc
cmp
adc
push
aas
imul
and
pop
clc
rclb
push
insb
adc
in
outsb
or
popf
pop
sbb
stos
cwtl
inc
or
loopne
ds
cs
add
out
mov
and
xchg
scas
stos
movsb
sub
mov
fistpl
pushf
or
or
sbb
ret
ljmp
add
lea
enter
pop
inc
xor
insl
out
das
pop
ds
int3
ja
shlb
jns
lods
ffreep
adc
push
jae
outsl
test
mov
arpl
fimuls
ret
jne
xchg
adc
dec
mov
test
sub
jmp
sbb
adc
lret
pop
mull
mov
insl
cmp
andl
ljmp
push
add
mov
sbb
sub
add
xlat
xor
xchg
push
xchg
cmc
idivl
gs
cmp
inc
mov
xchg
cmp
xor
xchg
call
adc
cli
loop
aam
cld
and
shr
sbb
into
fisubrs
pop
xchg
stos
stos
leave
aaa
add
cmp
xchg
ret
cwtl
rol
sub
jle
inc
xlat
sbb
push
stos
repz
push
mov
iret
dec
lock
lcall
mov
data16
mov
scas
ret
aam
jae
cmp
int3
push
test
fdivrs
dec
inc
xor
imul
pop
or
xchg
mov
push
ljmp
icebp
mov
in
ds
push
mov
test
cmp
pop
inc
or
popa
hlt
ret
roll
mov
aaa
mov
js
loopnew
push
fwait
movsl
mov
sub
push
pop
sti
shrb
push
push
push
lea
add
inc
sbb
pop
icebp
jae
ror
int
arpl
mov
adc
shr
mov
cwtl
lds
mov
push
inc
xchg
lock
ds
pop
test
push
cmpsl
xchg
test
sub
les
popf
add
or
pop
push
in
mov
icebp
xchg
push
sbb
scas
loop
cltd
pop
scas
outsb
dec
mov
ljmp
or
jl
sub
lds
sub
or
or
lock
adc
and
cli
xchg
call
xor
shl
out
mov
les
fiaddl
hlt
popa
out
ja
fiaddl
cmpl
rol
inc
fld
push
scas
adc
fdivs
push
js
adc
movsl
adc
or
lret
add
pop
scas
test
sbb
fnstsw
sub
push
call
cmp
scas
or
fwait
mov
aaa
mov
dec
xlat
popa
push
mov
xlat
push
int
add
xchg
dec
jle
mov
lahf
jecxz
mov
scas
test
mov
inc
jg
fistpl
call
lret
enter
add
mov
andb
pop
stos
inc
inc
sub
xor
push
out
mov
mov
outsl
je
and
clc
inc
adc
and
mov
add
and
push
fcoms
inc
test
mov
jl
adc
out
fwait
arpl
mov
and
mov
mov
lret
mov
loope
pandn
aas
mov
mov
sub
ss
jg
out
jge
aad
filds
popf
pop
mov
cld
aas
stos
xor
stos
int3
lds
test
push
and
inc
and
sub
mov
and
lret
sbb
add
mov
test
or
push
mov
jns
xchg
pop
and
pop
fsub
ret
mov
jns
adc
adc
mov
mov
lret
aas
push
mov
push
inc
push
cmp
cmpsl
mov
jp
add
cmp
mov
scas
clc
cmp
clc
sub
loop
ljmp
and
js
jbe
pop
lahf
or
popa
jmp
sub
cmpsl
ljmp
cmpb
sti
repz
sti
andb
inc
popa
sub
mov
pop
out
bound
sti
xor
sti
aam
icebp
ja
movsl
pop
rcll
adc
sarb
xor
dec
adc
nop
sbb
out
sti
lea
ss
push
mov
sbb
pop
push
es
push
shrl
cs
repz
adc
mov
adc
pop
jle
sub
aam
push
jmp
idivl
inc
loope
jne
ret
stos
cmp
les
imul
dec
fcmovbe
cmp
mov
jmp
pop
cli
fsubrp
ljmp
mov
jl
clc
imull
pop
cld
mov
jo
or
out
xchg
popa
xor
outsl
inc
insl
adc
data16
jg
ret
outsl
xchg
xchg
sarb
gs
jle
jne
aas
jge
loop
jp
aas
sbb
push
sahf
and
jb
decb
call
pop
xchg
push
outsl
in
pop
push
xchg
imul
stos
lcall
or
mov
arpl
nop
cli
arpl
push
loope
jl
cli
jne
cltd
fs
push
lds
pop
pushf
in
and
or
pushf
jge
into
mov
mov
mov
mov
jb
call
lods
mov
movsl
outsl
or
mov
insb
rclb
or
cmpl
adc
mov
scas
xchg
out
sbb
push
pop
cmpb
in
adc
push
or
mov
mov
cld
push
cli
or
cli
dec
xor
jmp
scas
push
fimuls
inc
sbb
push
add
push
jp
std
nop
ja
dec
push
mov
or
fmul
jo
add
out
jo
push
inc
fs
push
loopne,pn
lret
and
mov
int
mov
in
mov
xchg
mov
in
or
pop
dec
js
leave
push
mov
inc
jmp
sub
aas
push
add
repnz
adc
inc
cmp
jg
cmp
fimuls
sub
push
mov
call
gs
mov
and
cs
dec
dec
stc
idiv
inc
add
clc
push
dec
les
pop
dec
out
movsb
jae
or
outsb
je
push
je
push
pop
pop
mull
ret
mov
arpl
popf
adc
outsb
rcrl
lods
aam
mov
lods
aas
sbb
add
mov
xchg
cmpsb
fisubs
test
in
rcrb
repz
inc
sub
das
sub
push
sti
imulb
hlt
int
push
out
int
scas
js
inc
orb
dec
dec
jns
sub
fwait
adc
loopne
mov
adc
fisubrl
cld
push
movsl
mov
jne
or
stos
mov
or
jmp
jl
out
cmpsb
jb
lret
add
arpl
or
pusha
push
testl
push
fidivs
add
lret
addr16
sub
mov
adc
inc
add
cmp
pop
pop
fildl
push
pop
test
cmpsb
cmp
lods
jne
sub
pushf
scas
mov
mov
xorb
repz
lcall
add
mov
mov
incl
insb
dec
scas
jmp
or
push
hlt
mov
dec
xlat
and
es
es
data16
cmp
and
out
ljmp
mov
fs
add
pusha
cmpsb
test
mov
psubq
fdivs
xchg
jg
enter
bound
push
cltd
sahf
sbb
je
cmp
stos
sub
fwait
push
loop
xchg
test
jns
fs
popf
jbe
lcall
mov
repnz
mov
in
inc
push
xlat
and
jbe
or
sub
dec
or
jae
push
mov
sub
mov
sbb
add
scas
icebp
or
stos
int
push
out
xlat
inc
sbb
or
cmc
pmaddwd
movsl
mov
mov
loopne
sbb
xchg
iret
or
idivl
dec
pop
repz
loopne
in
cmp
xchg
or
in
popa
inc
lods
dec
mov
mov
in
mov
push
inc
sub
xchg
xchg
testl
call
fstps
jecxz
movsb
or
mov
jmp
mov
adc
or
ss
fsts
loopne
int3
dec
sub
mov
inc
jl
pop
addr16
pop
fldenv
push
mov
dec
push
dec
dec
or
ss
xchg
fwait
sub
jno
xchg
cmpsl
sub
addl
push
sbb
push
xor
sbb
pop
imul
das
or
push
xor
ljmp
pop
add
push
in
cli
adc
mov
cli
pushf
mov
sbb
ss
push
and
mov
jne
fnstenv
xchg
jo
fwait
cli
test
dec
pop
dec
sbb
push
jge
cmp
dec
mov
in
push
sarl
mov
inc
pop
insl
pop
add
in
and
cwtl
cwtl
jne
inc
mov
push
mov
cmpl
jne
xchg
in
inc
das
mov
les
mov
push
push
loopne
jno
incl
dec
pop
scas
adc
xchg
and
aad
inc
xchg
inc
outsl
pop
imul
xchg
or
lods
add
or
popa
dec
cmc
insl
mov
push
jbe
jg
lret
adc
sub
loope
dec
daa
adc
jge
push
or
repz
ja
inc
xor
and
mov
das
arpl
cmp
xchg
jmp
mov
dec
movsl
mov
pop
gs
xor
jns
xor
fldl
adc
xor
cmp
repz
shlb
call
or
pop
jns
andl
jge
lret
push
sbb
test
sbb
std
rclb
popa
rcl
add
or
mov
mov
bound
pop
test
mov
xchg
lock
int
mov
and
les
ljmp
jg
lret
lods
fcmovnu
xor
mov
mov
mov
outsb
clc
mov
xor
and
sbb
xchg
mov
lcall
and
fs
sbb
sbb
addr16
fisubl
inc
or
sub
insl
mov
xchg
mov
add
jo
loopne
popl
loope
gs
pop
test
adc
addr16
pop
xor
mov
in
mov
push
adc
inc
iret
inc
lahf
or
lcall
xchg
movsl
cmpsl
andb
jge
fildll
enter
pop
xor
xor
mov
jmp
cmpsb
stos
out
lcall
lcall
dec
mov
andl
das
xor
add
decl
xchg
adc
pop
ljmp
adc
loope
stos
adc
cwtl
into
jge
push
fsubr
les
div
nop
cmp
in
xchg
jmp
mov
std
ss
test
mov
or
mov
icebp
or
std
shl
dec
mov
inc
mov
push
inc
push
ds
push
aam
in
loopne
mov
nop
and
sbb
repnz
stos
stos
mov
xchg
mov
and
cmc
lea
mov
push
add
movsb
loopne
loopne
lods
mov
repz
push
insb
mov
mov
pop
mov
cmp
adc
setns
rol
in
dec
add
adc
bound
adcl
or
fcomps
sar
cmc
mov
popf
fists
and
in
das
sbb
les
adc
push
sub
xlat
add
loop
push
add
arpl
jns
test
mov
pop
in
stos
adc
nop
mov
sbb
jl
mov
push
test
add
dec
repnz
ljmp
sub
xor
push
xchg
gs
out
subl
mov
mov
sbb
fbstp
push
movsb
in
sbb
sbb
test
and
ljmp
js
jnp
cmc
repnz
das
dec
enter
cmp
adc
jg
pop
jno
pop
jl
pop
sbb
aam
mov
and
push
pushf
dec
test
or
push
lret
fidivrl
enter
out
mov
dec
sub
ds
dec
cmpsb
pushf
xlat
and
and
fs
pop
push
sbb
mov
inc
cmc
inc
shl
mov
out
mov
push
mov
mov
pop
mov
aaa
jnp
mov
inc
repz
sub
cwtl
movsl
adc
cmc
clc
push
pop
mov
loop
mov
lods
cmpsl
pop
fdivrl
push
sbb
push
and
insl
stos
mov
mov
imul
ja,pt
cli
jp
lahf
leave
or
mov
jg
sbb
jge
fimull
mov
jle
push
add
xor
xchg
sub
xor
or
adc
add
push
hlt
and
jbe
stos
rclb
xchg
mov
adc
sub
mov
mov
mov
enter
test
inc
pop
mov
pop
or
and
push
mov
mov
insb
lods
dec
xor
or
jle
insb
cld
xchg
or
int
rcrb
es
jne
loopne
in
in
ficoml
daa
add
xchg
lea
xor
push
addl
cmp
ja
xor
data16
inc
add
or
aad
push
dec
js
jae
jg
fisttpll
std
xorb
push
push
leave
lds
aad
xchg
imul
inc
cmp
fwait
cmp
pop
inc
push
insl
adc
int
call
inc
pop
ss
imul
add
pushf
shr
subl
sub
inc
mov
lcall
push
in
andl
stos
and
enter
jecxz
dec
jo
nop
mov
jo
push
mov
mov
std
xchg
test
andl
in
mov
out
imull
mov
and
nop
push
in
ret
xor
scas
add
jne
imul
jle
push
scas
fmull
or
rclb
loope
xchg
fnstsw
sbbb
jb
sbb
imul
and
mov
mov
js
xlat
aas
mov
das
pop
pop
adc
cmp
sub
adc
lods
adc
cld
insb
rolb
popa
call
testl
push
lods
movl
cmpsl
xor
shrd
or
rorl
mov
push
outsb
xor
ficoms
int3
jmp
inc
fwait
addr16
push
into
call
nop
push
jno,pt
stos
mov
push
aas
inc
and
fs
adc
dec
and
push
push
rorb
shr
stos
ret
scas
std
adc
xchg
call
mov
cmpsb
movsl
sbb
mov
ja
adc
mov
popf
push
mov
xchg
aam
outsb
imul
push
xor
inc
push
mov
dec
je
lret
popa
icebp
movl
adc
test
cmp
sub
push
je
aad
lret
repz
fcoms
inc
or
test
inc
mov
int
out
cli
sbb
in
cli
jmp
sub
movsb
rorl
mov
out
outsl
aam
nop
insl
push
aaa
jp
fmuls
in
inc
sub
adc
adc
repnz
nop
mov
daa
popf
pop
jecxz
xchg
mov
jmp
scas
pop
lahf
lcall
mov
jns
je
icebp
push
mov
ret
add
mov
sbb
sbb
insb
sbb
dec
mov
test
sub
fsubs
pop
or
jo
pushf
mov
jne
mov
lret
mov
xor
push
stos
push
xor
in
pop
push
jp
jge
xlat
xchg
push
mov
and
mov
and
push
test
cld
in
jbe
out
ljmp
jno
nop
mov
mov
stc
inc
and
xor
xlat
dec
and
add
lcall
ret
jmp
aas
call
xchg
hlt
mov
sti
push
xlat
lret
ljmp
jmp
movsb
cmp
jbe
xor
inc
jae
sub
stos
cs
jno
add
cmp
jae
scas
pushf
or
xchg
andb
dec
sbb
xchg
lock
sbb
std
sub
xchg
neg
sbb
enter
ss
aam
dec
xor
adc
and
cmp
pop
sub
pop
sub
imul
insl
incl
cs
lods
mov
push
leave
in
cmp
rol
push
ljmp
jmp
gs
jl
jge
inc
addr16
inc
sub
xor
movsb
inc
dec
ljmp
aad
leave
cmp
and
sub
lret
mov
test
or
mov
pop
dec
mov
mov
ret
push
add
pop
das
and
mov
ret
out
fs
sub
sub
lret
mov
sti
push
or
cld
jl
iret
inc
stos
inc
mov
pop
test
xor
int3
fldcw
lods
fcoms
test
scas
mov
es
push
sub
jo
add
adc
hlt
sub
dec
dec
fdivl
or
insl
xor
lcall
mov
xor
pop
mov
lret
ds
xchg
fcoms
or
xchg
add
or
sti
lcall
lret
push
fistpl
xlat
mov
mov
jo
xor
dec
cmp
add
outsb
mov
mov
sarl
or
mov
pop
leave
sub
aas
imul
aas
mov
lods
jo
push
mov
scas
mov
test
push
add
movsb
push
stos
test
in
xor
lcall
test
ret
pop
out
jp
xor
cmpsb
mov
daa
jge
or
jecxz
aad
lods
push
or
lods
jmp
jge
inc
push
pop
add
push
xchg
sub
std
push
xor
push
or
dec
or
add
jmp
loop
jno
pop
jb
mov
cli
out
int3
cmp
mov
mov
and
mov
xchg
xchg
cltd
mov
aaa
js
mov
stos
mov
mov
or
enter
xor
xor
out
test
lds
bound
jno
xchg
movsb
shlb
pusha
lret
or
insb
pop
testl
notl
ljmp
mov
adc
mov
movsb
xor
in
mov
inc
loopne
insl
hlt
loop
mov
in
lods
mov
call
jmp
push
jl
cwtl
adc
sbb
xchg
out
pop
mov
mov
push
out
in
in
cs
popa
mov
xor
dec
inc
mov
frstor
das
std
xor
and
push
jno
sbb
jl
ja
loop
inc
cmc
rcrl
and
pop
xlat
jge
mov
sub
push
xchg
adcb
or
icebp
push
mov
push
ja
es
mov
push
fwait
xor
cs
cmc
jge
inc
cwtl
ljmp
jne
jmp
mov
cmc
in
mov
pusha
inc
xlat
adc
jne
jge
adc
sbb
les
mov
nop
cmp
fildll
scas
jecxz
dec
arpl
mov
mov
sub
decb
jns
lahf
cmp
insb
shrl
pop
mov
lret
mov
into
loope
mov
out
xchg
mov
addr16
in
push
outsl
mov
test
sbbl
bndstx
or
cmpsb
cmovg
cmpb
outsb
decb
mov
outsb
loope
mov
insl
rclb
adc
push
mov
sahf
pop
push
sub
and
lea
mov
mov
ja
mov
out
or
mov
or
mov
ljmp
jno
mov
push
div
daa
and
out
mov
pop
ret
sub
imul
xchg
xchg
ds
pop
xor
xchg
dec
add
push
push
pop
insl
mov
pop
jno
mov
popa
jl
mov
jge
xchg
fsqrt
mov
mov
imul
xchg
adc
sub
je
movsb
xor
adc
stos
sub
mov
filds
pop
lahf
fadds
and
gs
out
push
leave
jmp
pop
popa
pop
movsl
jnp
bound
lods
mov
inc
add
pop
sti
outsb
add
pop
push
aad
fisubl
xor
sub
mov
stc
push
xlat
inc
and
push
shll
push
je
frstor
cmpsl
ja
sti
add
clc
cmpl
add
xor
push
add
pushf
fwait
mov
gs
inc
jo
aad
add
sbb
adc
lods
push
xor
rorl
inc
dec
dec
lcall
xor
mulb
mov
clc
shlb
ret
jo
add
mov
shlb
lods
movsl
and
sbb
ret
add
pop
aaa
sbb
push
js
js
in
pop
sub
jg
hlt
add
sub
mov
dec
mov
cmpsb
mov
testb
xorb
sbb
popa
addr16
lea
cmpsb
jno
lods
xor
cmp
mov
dec
xor
pushf
test
scas
shrl
nop
into
arpl
addb
cmp
in
xor
xchg
and
ljmp
jle
popf
inc
xchg
sbb
mov
cmp
xchg
int3
fcompl
xchg
xchg
ds
ds
dec
sarb
mov
mov
sub
ljmp
mov
ljmp
inc
push
and
jg
or
inc
mov
int3
and
pop
ret
nop
dec
xchg
fsubp
scas
aad
push
les
or
mov
fiaddl
loop
push
or
aad
test
lods
dec
je
dec
xor
mov
pop
addb
stc
push
pushf
stc
add
push
pushl
cmp
stos
sbb
lock
cmp
xor
mov
arpl
dec
rorl
mov
clc
jp
xchg
outsl
std
and
sub
mov
sbb
mov
push
sub
addl
push
xchg
add
cmc
fs
std
push
out
mov
pop
adc
mov
lea
sub
pusha
sub
mov
andl
out
popa
xor
or
xor
stos
sarl
push
das
stos
sub
jmp
and
push
ljmp
lods
adc
adc
fisubrs
shr
popa
addr16
xchg
xor
pop
out
mov
pop
in
cmp
dec
sti
xchg
push
dec
pop
ja
pop
jne
xchg
add
cmpsl
add
sbb
fsubrs
pop
stos
mov
gs
inc
xchg
ds
add
out
sub
inc
mov
push
bnd
push
mov
jp
test
jmp
push
mov
cmp
or
sbb
stos
sbb
or
lret
daa
adc
xchg
imul
fnsave
and
add
das
aam
dec
shlb
out
pop
es
push
mov
scas
sarl
cltd
popf
lea
gs
mov
insb
leave
ret
add
aaa
xchg
into
xchg
loope
jp
out
aad
dec
sahf
lret
sub
loopne
cmp
push
mov
jecxz
stos
movsb
call
iret
inc
sub
push
lods
outsb
sub
push
cmpsl
jo
int3
mov
sbb
mov
inc
ss
jmp
subb
cli
sub
jne
scas
xor
sbb
sbb
aaa
and
xchg
sbb
into
mulb
sbb
sbb
movsb
fldt
sub
out
sbb
mov
jo
cmpsl
dec
stos
jp
pop
loop
adc
and
xlat
jbe
or
jl
out
sarl
add
fildll
ds
in
rclb
mov
mulb
jbe
ljmp
adc
out
push
push
xor
jmp
stos
in
push
std
loope
and
dec
and
lret
adc
paddb
out
mov
lods
dec
cs
sub
sbb
mov
lcall
outsb
xchg
sahf
pop
push
pop
sub
inc
or
popa
inc
test
dec
mov
cmpsb
jnp
push
adc
jle
call
nop
and
xchg
iret
add
cmp
sub
xchg
dec
repnz
addl
stos
loopne
outsl
cmpsl
adc
ja
insb
and
mov
push
insb
out
xor
pop
sub
inc
jecxz
mov
lret
inc
push
jg
xchg
add
pop
bound
test
data16
out
sub
pop
inc
loop
sbb
cmp
dec
sahf
xchg
repnz
lods
and
insl
sub
mov
push
test
lods
add
push
lahf
pop
imul
fildll
cld
fs
int
push
inc
push
pop
pop
adc
jle
push
dec
negb
mov
xor
xor
test
fcoms
fstl
xchg
adc
lret
fs
pop
pop
push
add
jecxz
inc
cwtl
inc
mov
push
or
adcl
xchg
aad
mov
mov
lods
xchg
pop
fcoms
lret
cli
lret
lods
jnp
jg
cs
push
pop
push
push
cmpsb
push
ja
inc
add
aad
jmp
or
inc
in
nop
dec
pop
lods
in
jb
lret
rolb
pop
loopne
add
int
mov
por
out
or
pop
popf
sub
data16
icebp
mov
mov
scas
pushl
repz
pop
mov
adc
test
aaa
shl
sbb
imul
aad
lahf
pop
sbb
xchg
in
push
mov
or
icebp
sub
dec
scas
fldt
push
sub
mov
mov
xor
sub
out
xchg
push
scas
pop
xchg
xchg
push
test
ret
mov
mov
ret
dec
cmp
lds
in
test
cmp
pop
je
jnp
push
pusha
dec
cmpsb
andl
daa
push
cmp
popf
test
xchg
int3
xor
popf
lea
stc
cmp
mov
sub
imul
pop
icebp
jo
pop
arpl
and
xor
mov
in
mov
sub
xchg
hlt
arpl
lahf
int3
les
ja
fs
pop
cltd
fisttpll
or
aas
jne
stos
in
in
xor
fnstsw
bound
adc
inc
scas
cltd
nop
add
aam
push
shrl
movsb
inc
adc
pop
mov
mov
test
lret
stos
dec
push
inc
cmp
in
fdecstp
lods
data16
ljmp
lret
clc
movsb
test
lea
dec
out
movsl
fmuls
push
mov
mov
mov
rol
mov
xlat
mov
adc
xchg
or
push
iret
inc
movsb
dec
bound
adc
dec
mov
imul
lret
mov
or
mov
cli
popf
cmp
mov
std
cli
aas
loop
enter
cmp
add
fwait
andl
je
popf
sbb
xchg
mov
and
dec
scas
ljmp
mov
dec
adc
nop
int
scas
push
pop
lret
sub
sbb
lods
fnstsw
mov
add
stos
aam
sti
ds
jno
mov
jb
addr16
popa
shrl
jg
daa
sbb
or
or
add
addr16
dec
jecxz
popa
jg
or
ret
fs
xchg
ret
cmp
mov
int3
and
inc
cmpb
cmp
cmp
cmp
stos
leave
aad
dec
cmc
push
pop
outsl
adc
out
and
ljmp
dec
popa
movsl
adc
jo
mov
push
pop
bound
xlat
xorl
lods
mov
xor
push
or
jns
arpl
out
aaa
repnz
cmp
nop
mov
mov
ss
inc
jp
push
rcll
push
mov
lret
mov
dec
inc
pop
test
mov
cmpb
shl
dec
xchg
push
test
call
ficoms
sub
mov
mov
inc
xchg
push
mov
stos
and
je
insl
pop
std
flds
add
sub
cmp
imul
imul
sub
pop
aad
mov
and
sub
int
popf
mov
and
mov
pusha
fwait
adc
adc
stos
inc
cwtl
sbb
add
gs
cmp
add
xor
js
pop
out
xor
xor
jno
imulb
adc
push
aas
add
movsb
sbb
sbb
insb
and
adc
mov
es
push
sub
leave
add
xchg
fidivrl
mov
popa
sbb
add
into
sbb
test
sub
mov
dec
push
xchg
jecxz
outsb
xchg
pop
mov
add
inc
sub
adc
pop
lds
daa
and
xchg
daa
xlat
insl
test
shll
mov
pop
push
ret
xchg
jp
mov
pop
mov
jnp
push
push
dec
mov
push
dec
xchg
pop
and
fadds
xor
test
aas
sub
scas
or
adc
xor
mov
pop
adc
inc
clc
shll
pusha
mov
stos
mov
sbb
and
cld
out
scas
aaa
test
sub
jl
xor
pop
sub
pop
data16
jmp
xchg
loop
inc
roll
ret
and
aam
sub
rol
adc
inc
aas
mov
rorl
sub
scas
rolb
test
xor
sub
mov
jecxz
push
jns
jg
xlat
sbb
rorl
sti
mov
test
push
out
testb
loope
outsb
mov
outsl
mov
cmp
cmp
xchg
fst
in
dec
out
cwtl
decb
out
mov
scas
hlt
aaa
mov
andb
repnz
or
xchg
xchg
or
mov
jnp
cmp
divl
lea
push
and
xor
stos
push
jp
push
xor
movsb
addb
subl
sub
xor
nop
adcb
adc
les
cmp
pop
pop
lods
inc
xchg
xchg
stos
ljmp
lahf
adc
adc
xor
jns
out
pop
push
cld
pop
sub
pop
in
nop
or
mov
inc
lods
in
cmp
pop
sti
jmp
jg
mov
fsubrl
pop
fisubrs
fcoml
dec
scas
push
outsl
test
pand
nop
xchg
xchg
cmp
jg
pop
or
lods
cmp
jecxz
or
aad
js
push
pop
jmp
mov
push
test
cli
lahf
sbb
mov
sub
shlb
in
mov
jb
not
fs
adc
pop
dec
adc
inc
jp
mov
int3
test
add
iret
xor
push
push
and
lret
adc
mov
jne
test
fildl
sahf
jne
mov
cwtl
mov
test
fnsave
push
sbb
push
int
sub
or
aad
jnp
jl
cltd
inc
or
mov
jp
fmull
push
push
mov
mov
stos
dec
cli
divb
popf
xchg
and
daa
add
sbb
addb
out
imul
icebp
xchg
push
subb
xorl
filds
pop
sbb
lds
sub
mov
sbbb
incb
sub
js
stos
hlt
repz
dec
stos
xor
stos
incl
outsb
mov
jbe
inc
les
inc
jne
js
xchg
mov
push
and
jg
out
pop
xchg
mov
outsl
mov
imul
aad
add
addl
mov
xor
pop
cwtl
dec
roll
icebp
in
add
sbb
inc
or
dec
pop
cld
test
pusha
ret
sub
decb
sbb
shlb
cs
std
js
fsubl
cld
mov
cmp
xchg
xorl
jge
add
jg
or
pushf
push
xchg
gs
cmp
xchg
hlt
dec
fbld
pop
jge
push
cmpsb
push
adc
sub
inc
pop
mov
adc
repz
add
int
aad
aaa
xor
mov
lods
daa
jae
xor
and
int
add
imul
test
sbb
cmpsb
and
dec
pop
add
mov
mov
imul
out
push
xor
xchg
mov
xor
out
mov
bound
add
popf
xchg
leave
adc
pop
test
add
xor
ja
adcb
roll
sbb
jmp
mov
in
pop
subb
jmp
jmp
cmp
mov
scas
out
push
inc
jl
mul
pop
ss
sub
adc
push
sbbl
or
mov
inc
sar
sarb
popf
int3
mov
push
lds
insl
inc
movl
adc
mov
ljmp
adc
outsb
adc
adc
test
jmp
stc
int3
pusha
mov
jp
push
js
xchg
sahf
sbb
and
jae
mov
adc
aad
or
movb
push
cmp
dec
pop
jae
jge
outsb
dec
cmp
aas
cmp
pop
push
or
test
push
push
cmp
and
rcll
pop
and
imul
popa
adc
mov
into
rclb
jmp
push
je
pusha
cmp
sbb
xlat
xor
push
xor
push
leave
mov
pusha
inc
sbb
in
scas
mov
sbb
jmp
bound
adc
in
addr16
pop
jbe
jb
sbb
cs
adc
lods
xchg
frstor
test
in
add
or
pop
sbb
inc
lret
jmp
cli
dec
push
adc
inc
push
jnp
cmpsl
aaa
clc
push
jno
popl
pop
add
push
add
repz
sub
ficompl
fidivs
loop
test
jns
mov
aam
sahf
push
jbe
pop
pop
sub
sub
out
dec
cs
imul
pop
subl
lods
ljmp
xorl
sbb
inc
pop
or
bnd
pop
or
mov
cld
xchg
testb
rorb
push
cmpsl
jge
mov
mov
shrl
dec
sbb
inc
ret
mov
xor
arpl
jo
push
fcomi
fidivrl
pushl
xchg
xor
cld
pushf
jbe
sbb
scas
test
js
outsl
je
hlt
xchg
or
fistl
pop
mov
and
clc
iret
fs
ror
add
test
dec
aaa
gs
push
inc
mov
or
dec
mov
mov
fisubl
or
das
ret
sahf
xchg
leave
sub
push
sub
fists
jp
mov
arpl
ljmp
or
cmp
test
outsl
ret
push
fiaddl
adc
cltd
dec
pushf
stos
mov
sbb
cmp
adc
push
inc
cmp
shrb
jecxz
adc
or
sub
jne
dec
std
lds
loope
cmc
mov
xchg
adc
or
and
rcl
xor
add
push
rcll
xor
mov
jmp
xchg
pop
adc
outsb
and
or
xchg
fldenv
arpl
movsb
adcl
mov
sbb
pop
cmp
and
pop
aad
lods
sbb
add
jbe
jge
push
sub
cmpb
leave
test
idiv
fdivrs
xchg
fstps
push
cmp
and
sub
das
or
mov
cmp
cmp
shrb
stc
es
jle
xor
cltd
dec
ss
mov
push
popf
imulb
sub
mov
fistpll
xor
jbe
jo
push
mov
test
and
and
adc
fsubr
pop
out
xchg
inc
jne
mov
test
pop
xchg
and
pop
out
cmp
mov
test
sbb
sub
arpl
fmuls
pusha
xchg
cmp
popf
into
jecxz
cmp
jns
add
push
div
gs
pop
adc
push
push
or
lock
pusha
adc
cld
xchg
leave
jge
daa
mov
jne
pushf
mov
fnstenv
aam
sbb
or
mov
loop
add
ds
je
and
movsb
loopne
sbb
mov
xor
add
pop
lcall
bound
mov
in
adc
push
mov
add
addr16
dec
dec
sbb
rolb
inc
ror
adc
movsl
inc
stos
pop
aaa
nop
nop
sbb
decb
nop
mov
sti
mov
lods
cmpsb
mov
xchg
push
sub
jge
test
lret
pop
cmpsb
mov
orb
mov
dec
ljmp
popa
dec
fcomps
lods
fistpll
mov
mov
sti
sub
call
ja
push
sbb
mov
cwtl
mov
push
xchg
loopne
mov
test
adc
rcl
sbb
jae
fldl
cmpsb
sbb
in
mov
ret
hlt
in
clc
adc
push
add
movsl
orl
inc
mov
andb
imul
ss
pop
push
jbe
xchg
xor
adc
movsl
mov
xor
pop
daa
add
lahf
mov
mov
dec
mov
mov
in
stos
test
leavew
xor
pop
inc
xchg
std
cli
pop
xchg
adc
xlat
mov
mov
das
out
das
daa
push
fdivrl
inc
fs
enter
push
test
pop
pop
das
push
pop
cmpsb
xchg
int3
mov
pop
sub
jb
mov
insl
dec
lea
add
sub
cwtl
jb
fs
sub
loope
imul
adc
cs
mov
sahf
jbe
inc
into
push
iret
sbb
adc
or
in
and
and
stos
movsb
mov
xor
out
sti
cmpsl
mov
scas
mov
std
pop
xor
sub
fdivl
sub
popf
sti
aad
sahf
ss
pop
aad
and
pop
jae
xchg
ja
icebp
xabort
adc
ljmp
dec
sub
movsb
inc
in
pop
add
mov
hlt
icebp
inc
adc
fnstcw
mov
test
cmc
pop
negb
sbb
sub
popa
sbb
add
test
push
loope
lods
cli
push
mov
mov
push
repnz
pop
movsl
or
mov
inc
pop
dec
pop
inc
push
sbb
mov
xchg
std
lods
xor
std
test
sti
dec
pop
dec
adc
inc
stos
cmc
xchg
ss
dec
add
lods
mov
inc
jb
xor
mov
insb
loop
jbe
cmp
mov
sub
movl
mov
shlb
xor
in
sub
mov
sub
push
ja
sarl
shrb
sub
and
aam
stos
rorb
lds
shr
lar
imul
loop
jnp
cs
stos
adc
orb
in
lock
lahf
call
push
test
jg
and
mov
jmp
cwtl
shrb
jne
sub
mov
out
out
stos
faddl
stos
fistpl
sub
or
pop
push
pop
subb
or
loopne
and
cmpsl
popa
and
fnstsw
imul
xor
cmc
cmp
sti
bound
xlat
rcrl
cld
inc
mov
jne
inc
xchg
pop
cmpb
xchg
xchg
add
mov
lcall
aas
gs
clc
dec
fldcw
mov
pop
sub
ret
xchg
adc
pop
test
xlat
push
dec
dec
sub
or
sbb
xchg
fisttps
inc
inc
test
adc
pop
ret
dec
mov
push
cmpsb
cld
shrl
mov
inc
inc
sbb
fmuls
shrl
or
xchg
sub
inc
push
and
fwait
popa
pop
or
sbb
mov
inc
and
iret
inc
and
call
lds
cmp
and
clc
mov
xchg
push
xor
mov
shll
loopne
xchg
and
cltd
cwtl
movsb
mov
rol
aas
mov
bound
xchg
into
scas
cmp
imul
scas
scas
xchg
push
ljmp
je
dec
shlb
pop
inc
cwtl
pop
or
push
fstpl
xchg
sbb
add
and
and
xor
scas
dec
xor
popa
mov
loop
dec
or
int
aaa
out
adc
sub
dec
cli
jle
adcb
mov
xchg
cld
stos
mov
pop
test
lret
les
push
cmp
in
mov
aam
jle
outsl
fistps
xchg
mov
addr16
push
adc
push
push
test
sbb
sub
sub
cmc
scas
mov
sti
or
pop
inc
dec
sti
repnz
lea
test
sbb
mov
pusha
pusha
push
jne
or
data16
cmp
pop
xchg
jbe
stos
sbb
bound
cmp
sub
nop
cmp
push
outsl
imul
insl
insl
jnp
mov
adc
adc
cmc
inc
xchg
mov
rolb
inc
sti
test
add
inc
loop
jp
mov
dec
out
and
mov
js
inc
fsubrs
pop
rcrl
push
push
scas
loopne
repnz
inc
rorb
cmpb
repnz
out
pop
roll
jns
test
in
sub
sub
fcmove
mov
adc
stc
and
jb
flds
pop
lock
inc
rorb
cwtl
xlat
inc
sbb
pop
mov
mov
or
enter
mov
bound
pop
push
pop
cmpb
cltd
popf
push
mov
pop
imul
ja
lret
cmp
xchg
lds
movsl
add
mov
enter
adc
dec
rcrl
or
lea
cmp
shrb
push
pop
pop
adc
mov
std
les
adc
sti
test
cmc
movsl
in
pop
inc
cmpsl
jge
ficoml
add
jns
stos
push
data16
test
data16
jns
rcrl
cli
pop
call
or
inc
xor
xchg
pop
adc
jmp
or
out
insb
adc
xor
cli
stos
shlb
fisttpl
mov
cmp
std
cmpsl
mov
enter
fs
ljmp
ljmp
enter
bound
pusha
pusha
stos
mov
inc
sahf
outsl
setnp
dec
stc
bound
cltd
js
subb
dec
cmp
dec
in
mov
stos
test
push
or
push
push
push
mov
dec
adc
push
stos
cs
cmp
js
mov
call
test
or
dec
hlt
test
cmp
jge
clc
pusha
push
xor
mov
sbb
arpl
mov
sbb
push
push
jb
cmp
lahf
data16
jne
xchg
ret
adc
cli
push
push
jg
orl
pop
xor
int
mov
mov
fsts
aas
push
popf
test
jnp
mov
jge
into
xor
lret
js
jl
dec
pop
stos
std
xlat
inc
mov
out
out
jg
jmp
outsb
mov
push
push
ret
repz
pop
mov
cld
pusha
dec
dec
push
imul
xchg
outsb
dec
ja
sbb
pop
adc
push
mov
mov
add
ja
mov
mov
lock
aas
sti
fcmove
scas
idivl
lahf
les
pop
cmc
jnp
repnz
out
fdivs
js
xchg
pop
dec
cmpsb
repz
xchg
push
jmp
pop
sarb
mov
sub
jbe
cmp
aam
add
push
pop
pushf
fildll
push
andb
cwtl
ja
pop
in
sbb
push
pushf
lahf
inc
add
sbb
sar
and
push
rorl
xchg
hlt
lods
push
inc
inc
inc
cld
jns
in
mov
pop
xor
inc
call
lcall
je
jno
jne
mov
xor
arpl
in
inc
push
fmull
ds
mov
pop
xlat
mov
sbb
adc
bndstx
jge
lret
dec
dec
orb
rcll
inc
dec
jbe
dec
stos
or
mov
cltd
mov
sub
aam
push
cmc
mov
or
mov
push
cmp
inc
pop
xor
in
repnz
pop
enter
and
push
dec
sbb
cmp
or
mov
dec
push
jns
push
mov
fcomi
rcl
jg
sbb
test
mov
xlat
and
or
pop
lret
int
mov
sub
repz
subl
pop
pop
sbb
fsubr
nop
xchg
jne
test
and
cltd
jne
xchg
push
cli
lret
pop
stc
and
xchg
lods
arpl
inc
and
mov
lods
int
pop
or
lahf
jg
call
pusha
push
loopne
mov
jg
push
pmulhuw
dec
roll
pop
jne
mov
jnp
loope
xchg
ret
shrb
dec
data16
aad
clc
repz
push
lret
adc
or
scas
mov
cmpb
in
sbb
sti
xchg
inc
cmpsl
jo
int3
inc
movsl
push
lret
xchg
fcmovnbe
out
mov
inc
pop
pop
sub
push
cmp
stos
jp
xlat
sbb
ljmp
push
jmp
cmp
cltd
jp
fcmovnbe
lods
scas
stos
insl
xchg
leave
push
scas
dec
jns
repnz
add
jl
jnp
in
jo
popf
rorl
bound
push
lods
outsb
lret
jmp
adc
lds
jne
xor
push
pop
and
in
xor
int3
add
stos
add
push
sbb
aas
dec
stos
fistps
cmpsl
fsubrp
sbb
fs
pop
or
roll
cmp
push
out
mov
and
lds
scas
xchg
pop
mov
insb
addb
or
es
mov
test
mov
clc
mov
sbb
cmpsl
mov
push
xchg
dec
mov
jmp
pop
sub
sub
sub
repz
xchg
orl
sub
orb
xchg
sub
es
lcall
jns
and
stc
jnp
aad
dec
mov
pusha
jle
mov
push
lret
mov
or
adc
sahf
in
cmp
and
sbb
gs
mov
jne
inc
and
push
cmp
pop
lds
sub
test
push
lods
inc
ljmp
inc
lock
shrb
pop
mov
push
adcb
sbb
jp
mov
imul
mov
stos
sbb
pop
inc
inc
mov
cmp
cs
pop
inc
inc
mov
push
scas
or
testl
icebp
fcoms
testl
out
adcl
repnz
mov
push
push
and
jmp
xor
repnz
adc
scas
push
sub
sbbb
dec
cmc
and
jmp
xor
jne
inc
sub
dec
inc
movsl
test
repnz
sbbb
icebp
sti
xchg
out
inc
xor
es
mov
push
xchg
sub
and
jb
cmp
fisubrl
mov
stos
sub
lds
dec
js
pop
xor
insb
std
mov
ss
xchg
pop
clc
mov
mov
and
das
es
int
lret
insb
jo
mov
xchg
cmpsl
insb
shr
push
mov
mov
loop
and
enter
jge
jmp
loopne
ds
mov
scas
imul
loopne
fwait
inc
push
lea
push
sbb
xor
js
mov
xchg
subl
in
mov
shlb
sahf
mov
mov
push
mov
insl
frstor
insl
xrelease
ja
mov
sbb
std
xorb
test
sub
sbb
lcall
push
mov
imull
xchg
popa
push
push
cmp
imul
inc
js
xor
xor
nop
inc
out
xchg
outsb
pop
fnstsw
scas
scas
xor
xor
fdiv
fbstp
and
dec
push
sbb
mov
jle
mov
mov
cli
push
add
push
testb
mov
xor
int
push
pop
add
and
mulb
adc
ja
fs
pop
adc
push
jge
mov
pop
lods
mov
andl
add
cltd
xchg
adc
fstpl
shll
stos
dec
lcall
add
push
aam
popf
push
jecxz
mov
rcl
in
and
inc
test
cld
testb
adc
gs
push
xchg
jg
cmp
push
stos
mov
cmpsb
dec
pop
inc
lret
add
and
mov
sub
enter
xchg
loopne
and
lret
xor
ja
lock
ret
jnp
fs
ja
pop
lods
div
mov
and
jge
pop
ffreep
jae
and
adc
daa
repz
aad
loope
mov
call
aaa
pop
and
mov
push
out
out
cltd
add
stos
insb
push
outsb
and
add
inc
xor
mov
xchg
jb
das
insb
sbb
imul
cmp
mov
mov
cmpl
movsb
bound
sti
sti
jle
addr16
mov
mov
stc
negl
lods
out
aad
sub
cs
int
sahf
js
orb
cmpsl
repz
lret
push
or
cmc
xor
or
cmc
push
xor
mov
or
pop
lods
inc
and
mov
xchg
scas
loop
mov
mov
cmp
jnp
sub
scas
ret
les
push
ja
mov
sub
nop
mov
test
sbb
push
inc
int
ret
scas
in
iret
inc
loop
imul
cli
xchg
test
lahf
shrl
adc
or
push
and
loopne
xor
jne
push
icebp
int3
sbb
or
mov
shl
int
jge
and
in
cmpsl
js
pop
scas
jmp
mov
test
sbb
adc
push
cmp
mov
inc
sarl
push
scas
stc
hlt
push
or
ficomps
rcll
add
or
pusha
sbb
pop
pop
fstl
and
inc
mov
pop
loop
sti
scas
in
and
cmpxchg
mov
mov
in
movsl
ljmp
sahf
hlt
or
mov
mov
sub
pop
adc
subb
xor
repnz
mov
cmp
ljmp
in
pusha
dec
cmp
xor
mov
and
bound
fiadds
js
jne
mov
mov
mov
inc
test
push
stos
leave
dec
shl
xchg
add
pop
mov
xchg
cmp
movb
inc
test
loope
popa
xchg
cwtl
or
orl
add
mov
xlat
loopne
sub
ss
and
cmpsb
adc
ss
pop
xor
push
or
jecxz
jnp
mov
xchg
add
lahf
sub
out
cltd
cli
sbb
sub
sbb
jmp
sub
add
dec
jecxz
add
sti
in
mov
scas
sti
push
add
in
mov
cmpsb
mov
mov
cltd
ds
mov
lahf
aam
rorb
shr
aas
pop
jl
loop,pn
add
push
xor
dec
pusha
fisubrs
fsubl
push
mov
imul
push
or
pop
cmp
fs
or
pop
andl
stos
xchg
dec
daa
or
and
sarl
test
in
movsb
hlt
inc
stos
cwtl
push
mov
movsb
mov
pop
sub
fcoml
bound
push
lea
mov
jne
or
arpl
dec
jae
or
pop
rcr
jno
mov
scas
mov
outsl
les
test
and
test
out
std
adc
sub
adc
aas
je
mov
or
cmp
inc
sbb
inc
mov
sub
imul
loope
mov
arpl
xor
dec
clc
jno
imul
imull
mov
xchg
stos
out
pop
mov
pop
add
mov
outsl
stos
or
and
or
add
and
daa
xchg
cmpl
mov
gs
ljmp
arpl
cmc
adc
inc
cmp
scas
mov
inc
or
or
fldl
int
movsl
mov
sbb
push
jne
mov
arpl
in
imul
mov
jns
frstor
push
mov
ljmp
sub
mov
les
add
dec
dec
mov
xor
xchg
adc
mov
pop
or
sbb
imul
push
pop
push
push
rclb
lret
pushl
pop
adc
dec
push
push
or
or
adc
test
pop
fldcw
rorb
das
adc
adc
xchg
imul
subb
test
scas
push
hlt
push
stos
leave
add
jns
jnp
stos
push
mov
int
add
mov
ja
jns
and
in
in
mov
sbb
stos
cmc
insb
xor
ret
insl
popf
add
jg
ret
call
hlt
fisubrs
decl
cmpsb
andb
es
es
pop
andb
es
andb
and
cmp
add
xchg
inc
cltd
cli
jmp
and
dec
adc
mov
lret
and
testl
mov
mov
add
and
add
jb
and
bound
add
lods
jmp
adcb
dec
mov
xchg
ss
mov
movsl
inc
adc
adc
ss
outsl
lcall
ljmp
xchg
or
jg
mov
subl
lahf
xlat
pop
out
popf
das
jmp
jge
scas
out
xchg
jg
adcb
sbb
imul
cmpsb
jle
movsb
mov
aad
ja
xchg
insb
inc
in
jge
loopne
negl
mov
pop
jl
cli
pop
cmp
das
mov
in
cld
stos
xchg
test
repz
ljmp
add
out
lds
or
push
adc
add
lds
inc
fnstenv
imul
and
mov
cmp
test
je
jno
mov
ret
and
ja
stos
pop
loop
push
out
xchg
out
leave
aam
and
add
inc
sbb
and
pop
jecxz
leave
js
mov
lods
add
aas
dec
jns
cmp
xchg
xchg
pop
and
push
cmp
out
scas
xchg
xchg
fcoml
push
ret
in
sub
dec
mov
pop
mov
in
jmp
dec
shlb
and
fsubrl
cmpxchg
dec
hlt
loopne
inc
push
test
jp
push
xchg
sbb
jge
jns
pop
arpl
and
xchg
iret
mov
fadds
imul
jmp
jmp
int3
jae
shr
dec
add
cs
jmp
inc
inc
les
aam
adc
xchg
dec
add
jmp
cld
sbb
aad
jp
stc
xchg
sbb
orb
mov
stos
out
adc
inc
inc
das
push
lods
inc
adc
loop
push
cmpsb
cs
mov
rorl
adc
fucomp
out
adc
stos
popf
add
inc
mov
hlt
or
add
repz
or
int3
pop
mov
scas
pop
xchg
mov
dec
mov
daa
jns
xor
cmpb
push
adc
fnstsw
out
adc
or
shll
add
outsb
lock
fildl
dec
inc
lods
dec
popf
and
into
push
push
cmp
mov
ret
add
add
sub
bound
psubd
scas
jmp
incl
sbb
arpl
pop
push
pop
sbb
xor
negl
push
outsb
inc
mov
push
mov
inc
mov
cli
and
or
cli
sbb
jl
xor
ljmp
movsb
es
andl
test
push
jle
add
inc
xchg
pushf
dec
adc
push
outsl
xchg
or
orb
rcll
pop
push
popa
mov
sar
xor
into
insb
push
xor
shlb
stc
jecxz
aaa
pusha
mov
push
lds
xor
into
and
aam
enter
inc
inc
data16
js
aam
out
inc
xchg
xor
ss
into
fisubrl
and
aaa
pop
pusha
mov
adc
jns
popa
fnstcw
mov
push
sbb
pop
xchg
jne
or
mov
lret
and
mov
jl
mov
xlat
pop
pop
mov
and
je
pop
push
movsl
or
jae
mov
subb
jmp
filds
sti
outsl
add
sti
inc
jp
push
lret
adc
inc
push
adc
lock
fistpll
leave
xchg
xor
dec
or
cmc
aaa
scas
in
mov
out
enter
jecxz
inc
push
pop
dec
mov
cs
mov
test
pop
sahf
in
int3
sub
sub
nop
mov
and
loope
es
dec
bound
mov
mulb
jmp
dec
inc
pop
rcrl
lods
pop
lds
cmp
xchg
dec
sbb
in
push
inc
mov
cmc
xor
mov
test
and
aam
jnp
or
inc
dec
into
cwtl
test
xchg
dec
jecxz
lret
lock
cmp
negl
out
fiaddl
dec
or
pop
mov
jge
clc
outsl
and
scas
aas
or
clc
mov
lea
pop
dec
xorl
loope
mov
push
imul
jnp
lret
dec
lods
fdivrs
jne
nop
add
pop
pop
inc
or
out
mov
scas
mov
or
imul
push
jne
lret
in
cmc
xchg
in
outsl
test
addl
mov
bound
mov
les
aas
scas
imul
out
xlat
loop
push
and
mov
stos
xor
sbb
insl
adcl
or
aam
inc
add
jbe
cmp
jecxz
and
mov
sti
xor
mov
cmpsb
sub
popf
scas
sbb
push
dec
and
addb
cli
mov
stos
jno
push
and
icebp
add
mov
mov
pop
lods
cltd
push
sub
lods
push
and
push
insb
add
add
mov
mov
adc
add
clc
or
or
fisubs
mov
and
jo
or
or
mov
imul
es
nop
loop
cmp
mov
and
mov
icebp
xchg
sbbb
imul
out
ret
outsl
std
rcrl
lods
ret
test
lret
mov
lds
inc
push
insl
jecxz
mov
divb
lds
mov
mov
mov
in
push
aas
mov
or
pop
xchg
xchg
xor
aas
std
xor
push
push
imul
shr
loop
cmc
pop
rolb
or
repnz
insb
cwtl
dec
xor
or
pop
sbb
in
imul
add
popf
aaa
jae
xor
pop
lods
push
jmp
mov
sbb
mov
cmc
mov
jne
mov
shll
pop
lods
icebp
adc
push
bnd
xorb
and
fwait
int3
insb
and
std
mov
aad
push
sub
lods
mov
lods
jo
in
cld
jae
aad
mov
jle
add
sbb
add
sub
xchg
insb
aaa
scas
xchg
fisubrs
int3
add
xor
bound
lea
mov
sti
mov
in
sbb
lret
and
mov
add
pop
sti
imul
movb
pop
adc
fisttpl
dec
loop
int3
call
test
mov
sbb
gs
adc
push
or
jge
icebp
cltd
pop
jle
in
pop
sbb
aas
int
and
ljmp
imul
lods
pop
out
add
inc
jl
cltd
rolb
pop
sub
in
mov
push
sbb
xor
fs
and
cmpsb
cmp
inc
jge
jp
ja
rcr
scas
scas
pop
and
cli
inc
inc
mov
push
mov
lods
or
frstor
fisttpll
roll
xchg
xchg
loop
push
jnp
cltd
out
insb
daa
clc
and
sub
test
test
test
test
mov
into
orl
es
imul
jbe
jb
mov
xchg
mov
push
push
lods
shrb
inc
andl
pop
push
lcall
scas
or
jb
mov
jmp
ja
pop
dec
push
out
das
jno
outsb
scas
jge
imul
clc
xor
inc
and
in
inc
pop
stos
pop
sbb
or
or
clc
cvttps2pi
cmp
mov
scas
jne
testl
mov
or
jb
dec
aad
out
scas
jecxz
dec
sti
movsb
mov
sub
aad
test
mov
lods
push
les
jae
mov
popa
lods
push
jmp
lahf
push
adc
pop
or
pushf
aam
xchg
mov
jbe
or
inc
mov
stos
std
push
scas
xchg
xor
lods
push
das
dec
adc
lds
xchg
sbb
sbb
jno
xor
xor
push
stos
scas
mov
dec
xchg
shlb
loop
cli
repz
push
int3
pop
call
and
shll
add
xchg
stos
mov
sbb
and
orl
pop
cmp
sub
push
test
or
popf
jne
in
into
xor
add
jmp
mov
fmull
jge
out
clc
mov
sbb
mov
cmp
stos
aam
mov
icebp
push
mov
sbb
fs
mov
fstl
in
add
inc
and
in
xor
pop
mov
test
ret
jg,pn
out
dec
push
xchg
jbe
fs
jl
pop
and
sub
sub
lret
scas
stc
or
sarl
mov
out
adc
cmc
ds
lret
decb
ja
add
dec
mov
dec
pop
les
add
cmc
pop
lea
out
aad
dec
pop
repnz
or
mov
mov
hlt
fidivrs
aaa
mov
je
out
mov
rolb
test
xlat
inc
or
insl
dec
jmp
scas
leave
mov
ja
and
subb
mov
cmp
xchg
test
stos
lret
inc
or
repnz
mov
jge
mov
inc
cmp
std
test
xlat
stos
sahf
les
fistl
cmp
lret
push
lock
adcb
xchg
jno
mov
jmp
mov
dec
sub
movsb
pop
div
into
xor
fcmovnb
cmp
sub
cltd
cmpsb
fnstcw
sbb
lods
rorb
rol
jb
out
ds
rclb
sbb
mov
sub
pusha
cli
rorl
inc
ficomps
lcall
test
mov
push
ss
shll
rcll
dec
in
sub
jg
pop
sub
enter
mov
or
out
adc
sub
and
pop
jle
fmull
xor
inc
and
xchg
inc
leave
push
das
fdivrp
fcmovu
lods
aad
out
scas
insl
dec
rorb
mov
sbb
adc
mov
insl
movsb
adc
out
jge
jbe
and
ret
jne
std
and
bound
cmp
push
stc
lret
jae
mov
arpl
ficompl
mov
xchg
rolb
add
pop
push
push
or
push
mov
gs
xchg
add
daa
inc
out
push
mov
cmp
jnp
xchg
cmpsl
dec
pop
adc
roll
dec
insb
add
mov
jg
outsb
icebp
add
inc
jg
ss
std
mov
pop
mov
ficomps
mov
mov
jmp
mov
ja
dec
add
inc
or
push
lock
add
je
jl
lea
movsb
or
pop
in
test
xchg
arpl
add
dec
stc
xchg
add
fcoml
push
fcmove
rorl
je
add
pop
mov
cld
push
mov
sub
call
enter
and
and
jmp
add
xchg
lret
pushf
add
mov
stos
ret
test
xlat
push
mov
mov
insl
pop
pusha
inc
cmpb
sbb
inc
arpl
lret
mov
imul
popa
lret
test
loopne
arpl
stc
insb
ret
gs
pop
jb
push
jmp
stc
inc
cwtl
cmpsb
movsb
roll
lock
cmp
ds
aas
jge
std
shl
stos
bound
adc
xchg
in
push
xchg
sbb
sbb
mov
adc
test
iret
dec
inc
loopne
pop
pop
imul
sbb
les
mov
pop
pop
mov
test
les
xor
sub
xorl
stc
idiv
jno
push
pop
jne
cmp
and
loop
ljmp
icebp
cmc
cli
ja
je
mov
test
fldl
gs
shll
mov
mov
aaa
test
sarl
and
mov
in
mov
cmpsl
fsubl
mov
mov
jmp
jecxz
out
mov
and
lret
push
and
icebp
pop
add
jne
fists
pop
push
out
loopne
addr16
jb
mov
add
push
push
inc
jg
sbb
mov
scas
aad
or
or
cmpb
scas
aam
cmp
adc
aam
dec
je
jge
or
ja
pusha
sbb
lods
fwait
pop
adc
lret
mull
or
scas
cli
sbb
mov
dec
xchg
cld
sub
mov
rcl
pop
push
mov
or
push
ds
xor
push
arpl
xor
push
xchg
loopne
sbb
jg
mov
or
or
dec
adc
add
mov
imul
inc
mov
pcmpeqw
mov
ficoms
int3
adc
sbb
lahf
push
mov
add
call
rclb
push
inc
ss
or
inc
cmp
mov
call
add
fisubl
lds
sub
xor
in
add
add
add
pop
jmp
cld
mov
xor
xor
cld
scas
inc
adc
hlt
movsl
test
arpl
mov
loope
inc
add
mov
dec
add
mov
push
out
test
loopne
mov
sbb
loope
mov
sbb
pop
iret
and
jbe
adc
mov
mov
int3
popa
add
arpl
push
pop
movlps
sbb
imul
mov
scas
test
cmp
shl
sub
mov
cmp
icebp
cltd
xor
adc
mov
and
std
inc
jnp,pt
hlt
insb
cmp
loopne
int
out
jecxz
and
sub
sub
xchg
push
dec
stos
sub
inc
xchg
ljmp
jle
cmpsl
jno
mov
leave
rorb
lods
test
xor
dec
jo
jb
mov
xchg
jo,pt
mov
nop
xchg
cs
pop
cltd
nop
push
cmp
inc
daa
mov
push
ss
xchg
and
jne
push
sub
lret
xchg
sarl
mov
or
xlat
ljmp
push
push
aam
popf
sbb
pop
scas
in
xor
inc
mov
adc
mov
insl
add
insl
and
outsb
fldt
cwtl
pop
scas
and
out
int3
push
orb
jne
cs
mov
adc
stos
sbb
sti
sahf
mov
inc
xchg
jb
cmpsl
pop
dec
jmp
insb
ljmp
cwtl
enter
shl
lret
push
add
add
push
inc
add
adc
jno
mov
xchg
scas
push
dec
dec
adc
or
cmp
mov
inc
mov
xor
pusha
icebp
data16
xor
rorl
dec
ja
xor
in
adc
ss
pop
sbbl
pop
es
push
shl
shrl
insb
insb
xor
shll
je
orb
mov
mov
xchg
mov
mov
cmp
push
ljmp
ja
lds
mov
arpl
push
bound
and
inc
dec
in
adc
fidivl
cmc
xor
push
jp
mov
mov
loop
call
push
sub
xor
mov
in
stos
ret
mov
or
mov
add
or
ds
adc
add
popa
xchg
enter
leave
lds
mul
mov
insb
gs
call
push
xor
mov
add
xor
rcll
pop
pop
xor
in
sahf
dec
cmp
leave
add
add
lcall
lcall
fwait
hlt
test
lods
jl
jnp
jg
in
roll
loopne
sub
mov
lock
in
dec
pop
cmpsl
push
dec
mov
mov
aaa
js
je
icebp
dec
insl
mov
inc
jl
inc
rorl
das
enter
inc
jecxz
dec
scas
popa
out
outsb
xlat
movsb
std
inc
push
dec
and
push
stos
inc
scas
jle
sahf
sub
sbb
xlat
rolb
test
cmovl
dec
jno
subb
inc
sbb
sub
out
mov
mov
xchg
aad
ljmp
dec
enter
dec
into
mov
std
push
jnp
xlat
jmp
pop
mov
add
notl
je
and
stc
jne
into
pop
or
loope
push
mov
or
pop
test
jb
jge
test
pop
fnsave
insb
das
stos
mov
pop
ret
adc
mov
lock
adc
cmc
cwtl
lret
or
inc
in
call
inc
jp
aam
sub
mov
cmp
and
dec
adc
push
das
fbld
inc
xchg
xchg
sub
sbb
in
sahf
mov
xorb
cmpl
mov
lret
shlb
out
xlat
mov
mov
xchg
lea
cli
pop
cmpsl
mov
inc
push
sbb
pop
mov
je
inc
sbbb
aam
add
add
rorl
mov
rolb
cmp
mov
cmpsl
icebp
jl
push
int
cmpsl
adc
es
dec
push
cmp
cmc
lock
push
sbb
jmp
clc
lcall
les
or
idivl
jae
stos
push
push
je
xor
fdivrs
inc
das
loop
out
xchg
dec
pop
gs
push
data16
add
dec
aas
adcb
mov
or
in
aad
dec
out
dec
fildll
mov
mov
lods
cmp
adcb
mov
scas
and
mov
stos
adc
mov
mov
pushf
repnz
int3
call
and
mov
pusha
cmp
or
dec
cmpsl
mov
mov
jl
lret
mov
xchg
test
les
fdivrl
adc
pop
adc
jae
jmp
push
sarl
fsts
ffreep
or
jo
sub
sub
mov
cmp
inc
lret
jne
jmp
repnz
fdivs
mov
pop
adc
lret
mov
dec
adc
jp
mov
orl
sub
fsubrs
sub
fistpll
packssdw
adc
and
cmp
sti
call
inc
or
fisubs
jno
jns
push
sar
int
sub
or
adc
mull
repnz
adc
dec
dec
add
test
repnz
inc
mov
add
das
lret
inc
fs
lret
jne
and
cwtl
or
push
dec
lock
push
jnp
jl
nop
mov
mov
xorb
adc
arpl
jns
cmp
jo
jae
adc
arpl
dec
adc
xor
movsl
sbb
xchg
mov
fmul
out
hlt
xor
mov
adc
xchg
pushl
scas
in
movsb
stos
push
dec
icebp
xchg
push
cmp
scas
pushf
repz
adc
and
bound
mov
stos
mov
jg
inc
inc
inc
out
jnp
lcall
push
mov
orb
dec
and
pop
call
sbb
push
mov
push
jae
mov
adc
push
push
inc
mov
test
add
stos
lods
adc
sub
cli
in
das
dec
bound
jmp
in
mov
pop
adc
fsubp
das
mov
aas
iret
cld
nop
adc
inc
sbb
ja
xchg
aam
adc
mov
sub
andl
inc
xchg
mov
sti
pop
pop
push
push
dec
out
fbstp
repz
repnz
xchg
push
scas
or
dec
xchg
jg
inc
insl
decl
in
lods
mov
and
mov
gs
adc
fs
cli
cmp
mov
and
inc
insl
adcl
stc
movsl
std
sub
lahf
xchg
stc
stos
enter
jne
xchg
cmp
cmp
mov
push
mov
insl
dec
psubq
ja
ror
push
add
clc
in
or
push
stos
subl
inc
jle
mov
and
mov
or
loop
mov
sub
dec
addl
stc
mov
pop
lods
sbb
cmp
sub
and
decl
push
inc
or
fcompl
cmp
push
pop
sub
imul
iret
xor
loopne
sub
add
mov
bnd
xchg
bound
push
jp
xor
test
stos
xchg
ljmp
adc
ficoml
jge
lods
in
inc
sub
jp
push
inc
cs
add
inc
inc
or
xor
inc
cmp
cmp
xor
les
stos
scas
aad
pop
lods
mov
sbb
loope
mov
mov
add
cld
aam
xchg
loopne
ret
mov
scas
pushl
push
sub
or
sub
cld
movsl
jns
add
cmpsl
lret
scas
adc
xchg
ss
loopne
adcb
inc
xchg
sub
movl
and
and
cli
test
sbb
mov
jmp
push
adc
sub
cli
in
inc
psrlq
mov
cli
je
aaa
mov
std
lret
out
lret
repz
movsb
jae
lahf
hlt
std
fs
sti
xor
fldt
in
aad
cmpsl
pusha
cmc
imul
stos
push
and
push
fisubrl
cmp
pop
outsl
dec
push
dec
inc
rcrb
add
jno
xchg
or
jmp
leave
stos
dec
push
popa
inc
dec
das
bound
xchg
fsubrl
sbbb
or
les
sub
pop
adc
mov
movsl
sub
add
mov
and
jb
subl
pusha
and
add
or
enter
fdivr
imul
pop
cmp
test
lods
mov
std
mov
sub
arpl
mov
push
mov
andb
aam
mov
dec
push
popf
jge
sub
clc
mov
gs
stc
sub
xor
pop
subb
arpl
xor
sub
hlt
loopne
rolb
aas
and
dec
mov
out
xchg
sahf
test
inc
push
push
loop
ljmp
jnp
and
pop
es
rorl
les
fnsave
out
xor
popf
fisubrs
arpl
icebp
in
aaa
add
dec
sbb
mov
sti
in
or
pop
data16
test
sub
and
and
loop
in
sbb
mov
lock
add
cld
mov
movl
in
jg
pop
pop
pop
out
xchg
sub
mov
int
imul
mov
xor
gs
xchg
push
js
lods
push
mov
inc
jno
roll
test
mov
xlat
pop
jg
imul
push
inc
cmp
jmp
jp
dec
dec
pop
add
fmuls
inc
std
sti
or
cmpsl
and
xchg
xor
adc
jns
bound
lods
xchg
sub
sbb
and
repnz
jne
or
mov
or
fcomps
out
xchg
push
jle
and
imul
jne
int3
push
pop
pop
es
pop
dec
jne
shrb
mov
loop
das
adc
xchg
mov
push
es
imul
cld
rorb
jne
mov
mov
mov
aad
mov
test
movsl
mov
mov
inc
cmp
iret
add
test
cwtl
jne
jl
or
jbe
call
jbe
stos
pop
jnp
sub
pop
push
popa
lret
in
dec
js
imul
xchg
cmpsb
sbb
test
adc
or
arpl
add
mov
dec
into
icebp
and
aad
imul
add
jnp
ret
adc
enter
sbb
push
movl
je
shlb
cmc
mov
repnz
mov
and
jbe
mov
sbb
icebp
out
push
sub
cs
dec
imul
or
test
jo
inc
mov
mov
jne
fistpl
xor
adc
cmp
push
insl
pushf
push
pop
dec
fcomps
scas
xor
das
mov
out
js
or
out
jmp
and
inc
ja
loopne
push
push
fiaddl
mov
cld
add
inc
xor
into
adc
andl
mov
imul
loope
adc
data16
and
lahf
sbb
fs
jge
mov
test
outsl
dec
inc
test
adc
clc
ds
add
in
addr16
xor
test
xchg
push
aas
adc
call
mov
loop
movl
aaa
inc
mov
xchg
shrb
pop
out
enter
rcl
jnp
scas
ret
xlat
lods
lds
les
mov
mov
sbb
jge
pusha
mov
inc
jl
decl
int3
pushf
add
adc
imul
mov
push
xchg
popa
xchg
ret
dec
jecxz
cmp
dec
in
outsb
jbe
fwait
enter
incb
out
mov
cmp
push
and
and
push
xorl
or
and
mov
xchg
dec
xor
push
popa
out
icebp
jge
lret
sub
imul
stos
sbb
int3
jbe
daa
cmc
pushf
and
cld
int3
jle
or
cld
cld
outsb
iret
pop
xchg
mul
push
cld
das
repnz
incb
cltd
out
mov
mov
push
in
ret
mov
pop
pop
sub
ret
jmp
add
sarl
adc
lea
dec
test
push
jae
adc
cmp
popf
push
scas
stos
fsts
or
je
fimuls
rcrb
jp
or
pop
mov
cmpsb
inc
arpl
arpl
mov
punpckhbw
jb
or
movb
test
and
shll
pop
push
xor
std
and
enter
or
lods
add
ljmp
subb
jge
or
icebp
aas
dec
cmpsl
fs
lock
add
div
popl
test
cwtl
hlt
push
sbb
sub
sub
call
sub
cmpsl
scas
hlt
mov
sub
push
hlt
out
lods
and
mov
sbb
xchg
testl
push
pop
call
fdivs
jl
mov
call
inc
repnz
and
mov
mov
test
ret
push
pop
sarl
nop
mov
movsl
movsl
test
add
loop
lods
xchg
pop
fwait
aad
test
test
idiv
add
shlb
adc
xchg
adc
add
lret
nop
push
es
push
leave
popa
mov
push
pop
xchg
mov
jp
jb
xchg
fwait
jge
rcll
sub
rcr
fs
inc
xchg
or
cltd
push
or
inc
aam
sbb
mov
pop
int
test
shll
test
inc
dec
aad
lea
pop
cmp
push
jmp
push
jne
leave
push
pop
sub
stos
sub
xchg
push
pop
aas
pop
jge
push
loope
aam
inc
jmp
jp
ss
jne
cli
sbb
jmp
push
mov
xor
test
popa
jg
sub
leave
add
cmp
lods
push
mov
loop
add
out
pop
mov
push
pop
cwtl
xor
movswl
lcall
pop
aad
bound
pop
shlb
mov
aad
push
sbb
pop
push
sbb
xchg
test
xchg
inc
std
push
out
mov
fidivs
and
sahf
aas
int3
pop
dec
sub
jmp
test
or
inc
mov
mov
std
test
mov
cld
jle
inc
push
fldl
repz
popa
loopne
xor
cmp
and
pop
popa
dec
mov
into
jnp
jb
jbe
add
repz
add
addl
jmp
fistpll
inc
mov
movsb
dec
in
jle
or
int
repz
rol
in
dec
in
jbe
lahf
cs
jmp
add
push
mov
repz
lret
mov
imul
js
sbb
xchg
mov
push
add
dec
jp
or
xchg
xor
leave
das
in
sahf
adc
xchg
mov
imul
cmp
test
leave
dec
dec
iret
push
adc
xchg
mov
fst
lahf
incb
sbb
call
mov
incl
adc
ljmp
mov
and
ss
sti
jae
mov
xor
sbbl
loopne
pop
icebp
je
add
incb
lea
sbb
sub
insl
pop
and
xchg
pusha
sub
dec
dec
or
add
outsb
les
outsl
mov
pusha
ljmp
adc
push
sbb
mov
push
test
ljmp
lods
call
test
push
outsl
sbb
adcl
xchg
outsl
or
in
mov
test
iret
test
in
movsl
hlt
les
push
in
or
daa
mov
mov
pusha
int
add
and
jecxz
jae
mov
bound
jns
outsl
adc
cmpsl
data16
loop
sbb
jecxz
mov
jns
jge
popf
cmp
mov
or
and
jns
cs
std
jge
add
ja
arpl
imull
pop
fisubrs
add
jg
jns
sub
ja
jb
sbb
nop
fdivrp
std
into
fabs
aaa
xchg
es
in
out
ret
add
jp
push
shr
fwait
lods
loope
popa
imul
fisubrl
sub
and
adcl
mov
fcoms
clc
pop
into
adcl
mov
enter
mov
pop
inc
into
mov
jbe
mov
sbb
jecxz
mov
sub
sub
lock
mov
and
sti
inc
aam
inc
and
mov
xchg
rcrl
or
mov
lret
dec
call
rclb
data16
or
sub
push
hlt
jge
mov
mov
in
nop
je
mov
fst
lock
jo
dec
pop
mov
jle
out
pop
or
int3
pop
pop
aad
jl
xorl
mov
out
stos
movsb
sbb
or
sbb
popf
rcl
into
push
sub
loop
pop
sbb
jle
and
push
test
add
inc
xchg
loop
push
push
cmp
or
dec
or
sub
repnz
jp
loop
in
xchg
cmc
in
and
mov
push
add
xchg
testb
imul
jae
fcmove
sahf
jbe
mov
mov
push
test
sti
test
je
mov
jbe
or
mov
out
adc
dec
ficompl
xor
push
xor
fcomps
dec
sub
inc
hlt
divl
jo
cli
xchg
lods
mov
mov
jmp
lahf
js
pop
sub
sbb
xchg
test
je
mov
pusha
jmp
call
loope
andb
nop
add
xorl
xchg
and
stos
or
jge
or
pop
or
jl
and
add
mov
mov
sub
or
adc
mov
add
aam
int3
sbb
lahf
insl
pusha
sub
cmp
xchg
sbbl
jno
pop
dec
scas
mov
jmp
das
xor
sub
cmpsb
xor
pop
sub
into
inc
xor
iret
fwait
pop
fnstsw
lods
inc
call
dec
imul
int3
mov
bound
jp
add
inc
iret
xor
js
inc
push
fs
fucomp
pusha
sub
ja
imul
dec
imul
jle
leave
sub
fstps
test
jmp
jb
inc
orl
mov
popa
dec
add
push
imul
pop
insb
mov
out
and
mov
dec
cmpb
cmc
push
push
cmpsb
push
sbb
cmc
mov
xlat
push
cmpsb
lods
addr16
stos
add
xchg
addb
jmp
outsb
test
mov
push
mov
or
push
mov
push
int3
mov
add
into
mov
hlt
std
pop
lods
cltd
mov
adc
int3
les
mov
sbb
data16
test
mov
stos
push
loope
and
in
pusha
push
push
lds
inc
imul
test
or
inc
inc
adc
scas
test
mov
scas
cmp
pop
fcoml
dec
mov
lea
add
imul
test
xchg
loope
push
rorb
and
sub
xlat
or
and
ret
nop
inc
mov
mov
add
mov
out
imul
lods
pop
pop
cltd
pop
mov
cmc
testb
xchg
or
fstl
cld
fsub
and
xchg
jmp
xchg
jecxz
cmpsl
data16
xor
sub
movnti
push
shlb
js
addr16
sbb
loopne
les
cmp
cmp
inc
dec
sbb
mov
popf
fs
push
mov
dec
xchg
cmp
add
stos
aas
scas
ljmp
movsb
push
mov
push
cmp
cmp
dec
pop
xor
into
push
push
cmp
fucom
or
adc
stc
mov
sub
cwtl
fdivl
loope
add
call
mov
jne
mov
cltd
scas
in
lahf
sbb
fs
mov
addr16
mov
mov
lret
sbb
lahf
test
nop
sbb
cmp
jecxz
in
dec
push
rclb
cmc
xchg
in
fldl
in
cltd
pop
cmpsb
dec
cld
sbb
mov
addr16
pop
push
repnz
mov
xchg
cmp
jnp
push
lock
fcomps
adc
cmp
cmp
stos
cmp
xchg
fldcw
subl
in
insb
xor
das
pop
xlat
movsb
out
inc
add
test
fidivs
or
jle
stc
arpl
arpl
rcr
lcall
and
mov
dec
lahf
cmp
lcall
sahf
std
jno
fsubrl
xchg
orl
adc
fdivrl
loope
mov
jns
xchg
push
addl
jns
loopne
data16
sbb
fcoms
lea
or
xor
jg
inc
iret
inc
dec
jg
dec
jb
ljmp
mov
jmp
movsl
jg
fidivl
or
inc
pop
call
btc
dec
sub
mov
and
push
mov
mov
cmc
mov
pop
or
add
or
filds
popf
outsl
add
mov
addb
add
adc
xchg
sub
or
cmp
out
mov
jmp
adc
in
jmp
xchg
sbb
xlat
jb
jle
jl
xor
or
out
lods
xchg
or
mov
add
add
jns
push
xor
pop
push
repz
mov
repz
pop
lock
popa
andb
jge
mov
loope
mov
scas
or
or
add
flds
dec
mov
mov
ss
jb
scas
arpl
xor
lcall
into
in
xor
sub
pop
test
mov
in
xchg
inc
dec
rcl
repnz
pop
popa
pop
dec
mov
push
mov
inc
xor
sarb
outsb
xor
lods
stc
push
push
adc
dec
ret
wrmsr
aam
shll
stos
jecxz
push
lds
or
clc
or
xlat
inc
pop
sub
inc
xor
dec
dec
and
mov
testb
in
pop
stc
mov
push
mov
dec
loopne
inc
xchg
into
mov
mov
sub
push
movb
xchg
aad
mov
sahf
scas
pop
or
lcall
mov
adc
and
mov
add
push
mov
mov
pop
pusha
fldl
fwait
sub
fildll
and
dec
mov
mov
sub
lock
dec
pop
dec
iret
push
test
scas
push
pop
cmpsb
fcmovu
mov
push
xchg
xchg
push
and
in
jg
and
jns
pop
pop
push
inc
ljmp
outsl
adc
sbb
das
mov
aas
in
dec
sarl
fists
jno
arpl
pop
add
adc
mov
mov
xlat
nop
subb
lcall
out
mov
dec
sub
scas
xchg
or
loop
pop
push
outsb
ljmp
je
cmp
enter
loope
in
push
push
insb
jmp
fs
cmp
pop
test
xchg
xor
sbb
xchg
sarb
push
scas
or
mov
sub
pop
into
sbb
sub
in
in
cmp
pop
sbb
mov
outsb
adc
xor
popa
loope
lret
shll
cmpsb
mov
xor
aas
mov
in
mov
scas
push
inc
lea
fwait
cmp
or
sarb
and
xchg
into
imul
add
lods
insb
dec
push
cmp
ss
xor
adc
add
jbe
ljmp
push
ret
xor
cs
stc
adc
lds
in
push
jecxz
idivl
push
cmp
inc
mov
mov
stos
popf
ret
aam
stc
xorl
imul
leave
jge
cwtl
jne
int3
adc
add
sbbl
insb
and
mov
cwtl
xchg
fwait
pusha
scas
insl
push
gs
adcb
cmp
push
test
and
cmp
mov
xchg
ret
dec
push
testb
mov
cli
jo
adc
imul
inc
out
pop
push
loopew
subl
ret
push
ljmp
in
call
dec
jle
sub
mov
mov
out
sbb
arpl
repz
sbb
or
mov
ljmp
pusha
jne
gs
push
xor
jns
xor
lock
xchg
and
mov
cld
cmp
ja
add
pop
cld
adc
inc
and
and
xchg
fcomi
push
adc
lds
ret
mov
filds
inc
lea
iret
pop
and
cmp
stos
jecxz
imul
or
add
in
insl
outsb
and
cmp
push
iret
cmp
imul
dec
pop
mov
sbb
lods
test
test
test
imul
or
insb
jle
and
shlb
stc
mov
andb
negl
in
mov
adc
push
mov
enter
ficoml
xchg
lea
dec
rorl
jge
cmc
lret
push
lods
out
test
fs
mov
pop
or
inc
test
clc
scas
push
lods
ds
lret
fmuls
push
push
push
sbb
das
cmpsl
stos
push
repz
jmp
lahf
cmpsl
jge
xchg
ror
pop
adc
stos
hlt
shl
fwait
mov
push
cltd
adc
repz
and
loope,pt
adc
imul
mov
out
outsb
adc
inc
bound
pop
xchg
lcall
cmpsl
mov
and
lret
cmp
jmp
xrelease
adc
mov
icebp
or
sbb
xchg
xor
rclb
cmpsl
jecxz
insb
inc
gs
ds
push
test
int
pusha
stos
stos
push
movb
leave
mov
mov
ret
inc
sub
mov
add
add
add
sub
sbb
lret
daa
lcall
push
divb
dec
jne
loope
mov
loope
addr16
pop
push
jbe
loopne
sub
lret
cmp
mov
stos
adc
mov
ja
push
repnz
xchg
addr16
in
and
in
sub
xor
mov
out
aaa
pop
push
push
or
nop
imull
stos
mov
push
jae
int3
sub
xchg
push
push
mov
cli
in
adc
scas
xor
jbe
data16
mov
mov
add
movsb
les
popa
xchg
adc
dec
lds
stc
sti
repz
dec
sub
and
out
aam
rcrl
adcb
cmp
xor
sti
pop
scas
clc
fsub
addb
pusha
mov
cmp
pushf
das
dec
cltd
jno
xchg
sub
xchg
outsl
adc
push
insl
shlb
call
pop
lods
sbb
imul
sub
mov
lds
lret
jmp
xchg
call
pop
adc
add
fistps
mov
dec
pop
mov
xchg
cmp
lods
and
mov
mov
mov
aam
inc
cmp
call
inc
push
and
sub
cmpsl
fcomps
dec
daa
mov
ret
sbb
pop
pop
or
les
mov
sub
add
dec
inc
add
cs
dec
popa
push
mov
xchg
scas
mov
dec
adc
std
cltd
shrb
cmp
pop
mov
push
or
add
jbe
or
jae
mov
lcall
push
push
into
stos
push
ret
sbb
test
jl
xor
add
mov
xchg
arpl
adc
dec
inc
jl
mov
or
inc
push
movsl
fsubs
test
notl
out
or
xor
testb
jge
mov
nop
inc
enter
cli
xor
inc
cmp
cmc
mov
lock
lds
imul
bound
pop
fwait
mov
lds
inc
cltd
addr16
sbb
mov
fcmovu
sub
out
sbb
popf
and
pop
repz
jp
lcall
sbb
cmpsb
add
xor
aad
sub
inc
je
pusha
lcall
mov
int3
test
mul
jg
fnstenv
cmc
arpl
push
cwtl
sbb
pushl
dec
lds
cmpsb
mov
adc
inc
lea
jne
fisubrs
in
and
in
sbb
cmp
test
or
fisubrl
lods
mov
mov
xchg
fistl
xlat
cmp
pusha
mov
xor
vpaddq
cs
xchg
ja
xlat
sti
cltd
cmp
loopne
stos
inc
or
jg
movsl
dec
std
inc
clc
mov
cmp
repz
add
mov
or
xor
in
or
add
pusha
or
fcompl
mov
shrb
inc
xchg
lods
jg
loopne
push
mov
int
test
mov
pop
xchg
mov
mov
test
cmp
inc
in
sbb
int
out
inc
repnz
push
inc
cld
pushf
push
mov
daa
std
inc
mov
jb
adc
popa
cltd
lods
aad
mov
mulb
aam
sbb
dec
xor
push
inc
andb
imul
mov
das
sahf
add
fidivrl
adc
push
dec
push
cmp
rol
add
xchg
aad
lcall
imul
psraw
arpl
shll
mov
push
lcall
fildll
jl
subb
cmc
mov
or
xor
pop
test
dec
push
dec
mov
scas
ja
adc
push
pop
call
fwait
shlb
fwait
push
mov
or
push
arpl
nop
sbb
add
sahf
mov
lahf
push
xchg
pop
pusha
fistpl
push
sti
dec
pop
subl
lods
jp
pop
bound
es
loop
adc
test
dec
lods
adc
scas
fcom
insl
sbb
jg
sub
add
xchg
pop
xchg
push
or
sub
mov
scas
cwtl
inc
repnz
mov
xchg
scas
or
repnz
xor
mov
frstor
cmp
scas
pop
in
push
aad
test
xchg
loop
in
jmp
leave
outsb
inc
cwtl
sahf
cmp
inc
in
xor
mov
or
jmp
push
inc
mov
clc
popa
inc
and
xchg
ds
mov
jp
lods
mov
ljmp
shrl
mov
pop
xor
cmp
js
push
inc
and
sbb
inc
aas
jl
loopne
xor
das
ret
aas
jno,pt
adc
jmp
add
xchg
repnz
out
lods
mov
icebp
ja
xchg
hlt
or
imul
pop
adc
lret
mov
outsl
mov
nop
fldt
or
or
ficomps
and
popa
mov
ret
lahf
push
roll
nop
outsl
les
sti
xorb
popf
out
mov
scas
add
dec
addr16
jo
and
out
mov
aas
enter
addr16
or
cli
mov
pop
enter
cmpsb
es
cmpb
add
add
add
ret
add
pop
add
inc
jo
es
xchg
cmp
ljmp
std
or
push
lret
rcrl
xor
push
test
push
adc
pop
pop
rclb
pop
mov
and
jo
stos
test
cmp
jl
cwtl
push
and
xor
xlat
fbld
lcall
fwait
std
test
xchg
stos
fistl
stos
cli
xchg
cmp
lret
push
xchg
add
xor
lea
xor
addr16
or
dec
fwait
push
xchg
icebp
mov
mov
sti
and
adc
inc
shl
xor
jnp
mov
and
cs
outsl
lock
dec
mov
clc
mov
jno
sti
xor
add
fs
test
jp
inc
jno
cmp
xor
or
push
cs
mov
cmp
ss
ja
or
das
aaa
imul
xchg
xor
out
cmp
loopne
adc
mov
mov
cmp
cmp
pop
pop
mov
jb
mov
xchg
mov
addr16
dec
stos
or
ljmp
sbb
mov
rcrb
lret
lods
ffree
push
inc
fdivrs
xor
and
jp
cmp
test
jno
or
and
lcall
add
dec
inc
test
adc
and
pop
aad
ds
push
adc
arpl
call
fstl
call
fidivl
adc
jnp
testl
push
fsts
nop
jae
mov
pop
add
in
add
lock
dec
xchg
fs
addl
inc
cmp
icebp
sahf
dec
pop
jl
xor
sub
std
or
fnstcw
pop
test
jg
and
aaa
dec
lods
and
dec
sub
movb
cmp
jbe
pushf
fdivrp
test
dec
pop
add
push
lds
and
xor
repnz
out
lods
mov
sbb
aad
enter
or
mov
in
mov
xor
enter
loope
pop
pop
adc
add
and
loop
push
push
push
fs
jnp
std
xchg
sub
push
jle
push
outsb
jmp
jne
or
sbb
test
hlt
xchg
add
inc
in
dec
sub
xchg
insb
test
jne
xor
mov
loopne
sub
mov
pop
xchg
cmp
rcr
xchg
inc
insl
leave
daa
inc
vorpd
mulb
gs
int3
fwait
call
or
adc
push
or
mov
jns
add
inc
stos
sbb
bound
mov
lds
adc
xor
clc
adc
push
js
ret
cs
stc
inc
movb
dec
cld
fwait
push
scas
hlt
dec
xlat
fidivrl
adc
jle
sar
mov
sar
js
mov
imul
dec
xchg
pop
mov
sub
lods
pushf
cmp
xchg
js
add
fwait
sub
or
adc
gs
int
stos
and
lret
mov
mov
arpl
inc
movsb
imul
lods
sub
add
ja
ljmp
mov
or
insb
imul
xchg
push
mov
inc
lods
inc
rcl
lret
lret
ss
mov
sub
insl
push
add
ret
adc
enter
lds
push
std
sub
xchg
dec
out
fsubs
xchg
dec
fadds
jnp
test
or
push
loope
fs
in
jae
fsubs
push
popa
inc
push
jl
lea
cmpsl
fs
sub
sbb
xor
inc
cmp
lcall
ljmp
or
mov
bnd
es
sub
push
jb
jns
ret
ror
lcall
xchg
hlt
pop
fnstcw
mov
movl
adc
int
ljmp
rcll
insl
notl
mov
repnz
mov
cmp
dec
js
stos
sbb
movsb
cmp
mov
shrl
loopne
ljmp
in
xlat
cmp
pop
rcl
jns
push
je
jo
es
dec
cmc
mov
sahf
jle
gs
push
lds
and
fldenv
les
or
cmpsb
cmp
stos
pusha
fstpl
test
mov
daa
shl
push
mov
lahf
xor
or
mov
movsb
push
mul
lods
xchg
jp
and
adc
xor
mov
dec
ljmp
sbb
mov
ret
push
fstl
in
jb
and
jae
cmpsl
dec
pop
adc
rclb
outsb
dec
popa
shrb
int3
xchg
add
mov
mov
subl
shrl
popf
jne
cmp
es
rcrb
xor
cmovbe
rorl
test
add
lret
sarb
js
jbe
xor
dec
xor
push
xor
mov
cmovbe
into
lcall
jne
adc
push
int
jle
rcrl
add
aas
rolb
pop
stos
ficompl
imul
pop
ss
cmp
cli
add
inc
rcll
sub
or
push
rclb
cmpsl
sub
push
sub
std
arpl
aam
mov
les
mov
sbb
pop
pop
and
xchg
adc
ljmp
pop
lea
push
add
cmp
das
adc
sti
lods
push
mov
push
push
es
mov
jne
pop
cmc
movsb
inc
jecxz
fwait
or
movsb
mov
lahf
xchg
loopne
jle
mov
or
subb
aad
imul
enter
lods
sbb
lret
sub
lods
stos
inc
nop
neg
sub
dec
inc
mov
mov
int
fisubs
xchg
vmptrst
adc
push
mov
out
sub
lcall
imul
sbb
pop
xor
sub
push
mov
or
xor
push
rclb
outsb
fcmovb
dec
test
mov
neg
test
fnstenv
and
xchg
mov
pop
dec
sub
cmp
xchg
mov
stc
call
je
movsb
test
addr16
push
cmpsb
push
mov
xor
push
mov
sub
xor
push
jb
sbb
sbb
loope
inc
rclb
test
or
cmp
cs
lea
out
mov
adc
cmp
into
mov
mov
mov
push
outsl
add
xchg
xchg
sbb
cmpsb
out
xor
aaa
shrl
or
loope
mov
cmpb
jge
sbbb
mov
mov
data16
jl
mulb
into
xor
mov
js
mov
nop
adc
cmpsl
dec
push
add
xchg
pop
ja
sbb
pop
pop
pop
je
pop
leave
mov
mov
cmp
xor
pop
aaa
stos
movsl
das
shrl
jne
add
in
or
cltd
rcrb
addr16
int
sub
sub
call
jno
add
mov
popf
lea
jmp
cmpsl
mov
jbe
inc
repnz
adcl
push
sti
hlt
ja
scas
movsl
inc
scas
aam
rorl
mov
lret
inc
inc
lahf
clc
sub
sub
fwait
sbb
icebp
lret
sarb
push
into
xchg
xchg
pop
sub
pop
out
sub
shll
or
pop
dec
adc
xor
jo
fwait
inc
das
arpl
add
jbe
and
push
cli
inc
inc
push
sub
repz
inc
cli
jp
add
jns
mov
xlat
fadds
pusha
call
mov
mov
add
jns
xlat
push
push
pushl
test
push
lods
sar
or
xlat
out
gs
cmp
adc
dec
iret
mov
fnstcw
sbb
inc
inc
add
push
repnz
aas
mov
in
shrb
pop
sahf
sub
jmp
lcall
xchg
aam
fstl
push
xorb
fnstsw
bound
negb
ret
outsl
clc
cmc
push
dec
pop
inc
je
lods
push
std
sbb
mov
adc
mov
sub
mov
out
hlt
ja
shlb
lds
addr16
add
dec
test
outsl
jnp
dec
adc
pop
lods
xchg
sbb
addb
test
cli
je
es
es
icebp
jbe
lret
repz
mov
ja
test
push
push
jns
pop
iret
je
mov
je
mov
push
push
jle
push
xchg
cli
mov
jecxz
shll
loope
scas
xchg
xor
inc
inc
add
add
push
inc
rcrb
sub
cmp
push
jbe
xor
jmp
adc
cmp
push
inc
inc
imul
imul
icebp
cmp
mov
shll
das
test
jne
inc
popl
lcall
jmp
mov
mov
cmp
pop
fldl
daa
jbe
pop
roll
add
mov
fsubrl
enter
lods
nop
sbb
jmp
add
ja
ret
andl
push
jmp
adc
inc
data16
fimull
or
andb
in
mov
scas
mov
loopne
in
push
xchg
xchg
ja
mov
ret
push
inc
jne
mov
inc
adc
test
in
gs
mov
jmp
xor
jo
mov
lahf
or
push
mov
xlat
jp
repz
sbb
jne
dec
orl
outsb
scas
gs
mov
scas
cmp
pop
jmp
and
xchg
imul
scas
pusha
inc
pop
loope
call
inc
dec
pop
mov
das
les
or
inc
push
lret
stc
lea
sub
xchg
cmpsb
nop
std
push
mov
addl
jb
rolb
mov
rcrl
hlt
clc
rclb
or
add
or
mov
dec
mov
inc
in
push
std
sbb
inc
push
mov
jb
or
repnz
sbb
pop
inc
dec
jae
jp
insb
xchg
sub
and
fsts
in
lret
sahf
add
inc
sbb
add
and
mov
cli
mov
sti
sub
xchg
out
xchg
sbb
cmp
lods
push
xchg
ret
pop
rorb
rcr
or
mov
ljmp
xorb
movsl
add
movsb
push
imul
sbb
loopne
adc
dec
out
jle
ds
loop
pop
cmpl
jle
movzbl
sub
sbb
push
adc
ljmp
popf
sub
lods
into
out
shlb
pop
lds
inc
repnz
sbb
adc
jg
add
scas
out
ljmp
jb
mov
out
sbb
pop
push
push
push
and
and
vmwrite
lds
scas
loopne
les
loopne
test
push
inc
add
out
ljmp
mov
btc
inc
inc
cs
add
arpl
stos
xchg
jp
loopne
cmp
xchg
sbb
cli
mov
out
or
mov
test
or
ljmp
sbb
dec
dec
arpl
cmpsl
out
enter
or
lcall
mov
sub
push
pop
shll
pop
mov
push
les
push
adc
lret
jns
jnp
adc
fldpi
mov
jne
stos
fisubrl
jo
mov
loop
cmc
adc
imul
insl
and
ds
stos
mov
cwtl
loop
xor
inc
jmp
push
push
pop
dec
fsincos
adc
popa
pop
repnz
inc
or
int
push
leave
or
mov
loope
xorl
ret
and
dec
std
adc
mov
loope
add
dec
mov
add
cld
lods
outsb
sub
jno
sbbb
pusha
xchg
das
push
roll
push
ror
add
add
mov
test
xor
push
cmp
push
out
sbb
daa
sub
mulb
sub
fmuls
mov
adc
lock
xchg
adcl
jb
sub
xor
add
push
jg
addr16
sbb
outsl
add
adc
xlat
sub
in
out
cmp
xlat
inc
mov
ret
mov
pop
xchg
insb
shl
fcompl
jmp
xchg
imul
xchg
xchg
and
inc
arpl
jmp
call
xchg
pushf
je
mov
sub
xchg
xchg
adc
fnsave
jnp
stos
sbb
insb
divl
jp
and
push
or
sbb
hlt
cmp
or
in
gs
ja
std
xchg
sub
push
adc
and
dec
cmpsb
sub
sub
test
jae
into
push
pop
sub
jne
xchg
xchg
cmpsb
scas
test
stos
mov
mov
cmovb
cld
xor
js
cmpsb
fs
cwtl
insl
imul
jmp
inc
mov
xlat
lcall
int
aad
mov
mov
mov
jmp
mov
pop
push
loopne
pop
jnp
jne
stc
add
sub
in
push
stc
sbb
call
jns
xchg
jae
sub
xchg
jb
or
push
adc
adc
arpl
jg
sbb
push
addr16
shll
repnz
pop
lods
cmp
xor
pop
add
push
cmp
pop
sub
leave
fistpll
xor
std
aaa
lret
sub
mov
dec
inc
test
lds
shr
mov
subl
add
test
into
ja
sti
clc
mov
mov
mov
push
test
sahf
jg
shl
lcall
hlt
les
sbb
pop
jg,pn
sub
pop
cmc
out
jg
jmp
decl
test
dec
stos
add
jne
loopne
aad
or
pop
test
pop
into
popf
fs
dec
insl
mov
nop
push
push
sbb
mov
scas
lea
sub
fisubs
mov
out
jge
pusha
adc
outsl
pop
dec
jo
jae
popf
popf
or
pop
cmp
xchg
test
pop
dec
mov
rclb
jno
rolb
sub
or
mov
add
jmp
jg
cmp
adc
or
mulb
jle
inc
je
roll
xchg
lahf
aam
fnstenv
pop
aam
xlat
inc
repz
sub
inc
xorb
lods
es
add
cmc
push
mov
push
xchg
mov
xlat
mov
cmpsb
cmc
sub
call
out
test
push
fcmovnu
and
test
xor
into
dec
outsb
mull
xchg
popf
sub
and
sbb
les
sub
inc
pop
sub
ror
dec
pop
add
adc
push
ss
int
sub
xchg
das
mov
dec
addr16
bound
jle
ljmp
cld
mov
mov
jbe
mov
cltd
and
jl
xchg
xchg
stos
out
test
pop
out
incl
mov
lock
ret
jl
jae
inc
lods
shl
aam
pushf
in
xchg
xchg
out
bound
rol
aad
rsqrtps
mov
out
ja
cmp
push
movsb
stos
mov
icebp
push
sub
lods
and
mov
mov
adc
jbe
fs
test
fucomp
pop
sub
imul
cmpsl
lcall
cmp
xchg
int3
aaa
lcall
and
movsl
fwait
les
stos
push
in
pop
dec
in
pop
push
call
dec
cltd
ficoml
inc
repnz
cmp
add
xchg
dec
pop
mov
push
or
jmp
fcmove
push
jno
lahf
pop
jle
pop
outsb
and
outsl
mov
mov
leave
push
xor
jnp
lret
pop
pop
int
push
enter
and
stc
int
lea
adc
ds
sub
sub
and
add
mov
stos
fidivrs
jg
dec
cli
cli
xchg
or
stos
popa
inc
aad
sarb
test
leave
fsubrl
jg
inc
sti
popa
stos
jmp
xor
out
mov
pop
into
loop
jbe
fistpll
cmpsb
sbb
imul
lret
push
call
push
xor
mov
xchg
add
pop
mov
testl
cmp
cwtl
mov
movntps
pop
inc
jbe
nop
out
push
hlt
sbb
data16
pop
jnp
inc
pop
sbbl
lea
sti
dec
dec
push
or
aas
stos
pushf
out
cmp
mov
and
xor
out
into
stos
cli
ss
cmp
and
inc
add
fwait
xchg
out
pop
leave
ljmp
xchg
cmpsl
pop
pop
mov
push
mov
dec
mov
stos
or
pop
popf
xchg
test
clc
gs
jno
adc
repz
cs
aaa
pop
and
mov
test
push
mov
lea
add
insl
out
mov
push
sbb
xchg
jge
mov
add
sbb
cmp
movsl
jg
xor
sub
jnp
rcrb
int
decb
jg
jbe
fldcw
sti
shlb
dec
adc
mov
lods
pushf
loope
adc
xor
mov
sub
das
jl
mov
fs
adc
movsb
into
and
push
rcr
leave
jg
xor
mov
ret
lods
xchg
pop
cmp
xchg
mov
cmc
les
inc
adc
sbb
inc
icebp
adc
fsubrl
sub
sub
push
jl
test
sbb
adcb
lret
repnz
scas
mov
test
inc
shll
inc
dec
adc
test
hlt
addr16
cli
mov
test
mov
xor
in
rcl
cmp
mov
mov
les
decl
lret
inc
mov
sarl
stos
popf
pushf
sbbl
mov
les
loope
movsl
pop
dec
mov
or
jnp
repz
xor
pop
insl
imul
lret
sbb
dec
sbb
xchg
gs
aad
scas
stc
adc
mov
and
and
sub
or
out
sub
sbb
test
push
in
push
aam
push
xor
lods
cmp
inc
pop
jmp
arpl
scas
add
leave
lods
xor
mov
inc
cwtl
mov
push
push
call
inc
orb
mov
test
js
push
pushf
fs
pusha
cs
xor
pop
push
mov
push
xor
fistl
jns
out
pop
imul
push
rcll
xor
push
cltd
mov
test
fwait
xchg
daa
sbb
cmp
sahf
dec
dec
pop
lahf
gs
push
notl
flds
fs
adc
push
in
pushf
pop
shrd
mov
lods
xchg
out
sbb
movsb
jns
xchg
cs
lret
out
adc
sbb
lea
mov
mov
xchg
lcall
add
aad
mov
outsl
std
push
and
pop
inc
sbb
ds
call
lock
sahf
sub
mov
adc
mov
cmpl
inc
stc
daa
les
adc
jb
das
not
std
shl
cmc
xchg
leave
and
jle
adc
cmp
jns
and
xchg
test
push
ficoml
mov
or
cmp
loope
mov
fidivrs
lret
rcrb
mov
mov
mov
dec
inc
cltd
sbb
clc
enter
dec
adc
arpl
mov
insl
push
and
loope
inc
test
ljmp
lock
jp
int3
mov
adc
mov
push
fstcw
xorl
movsl
dec
mov
js
push
push
bound
loop
jg
pop
nop
loopne
or
movsl
adc
rcrb
stos
and
xor
lds
mov
jmp
cli
jbe
ljmp
push
icebp
test
sub
roll
sbb
pop
dec
adc
mov
idivb
sbb
push
pop
in
sbb
stc
shrl
mov
inc
ret
js
sbb
pop
cmp
add
sarb
pop
mov
daa
fsubrl
push
pop
idivl
push
or
js
or
xchg
ja
loope
lea
notb
lret
or
and
and
cmpsb
bound
in
sbb
leave
out
push
scas
gs
mov
adc
lods
inc
xor
popf
mov
jecxz
mov
or
cmp
jns
xchg
pusha
push
lcall
cli
jmp
jl
in
jno
lcall
push
repnz
xchg
xchg
pop
das
push
xchg
ficoml
cwtl
cmp
fsubl
lahf
mov
lret
jecxz
dec
or
shll
test
xor
adc
push
push
scas
jmp
inc
mov
pop
stc
cmp
rclb
fnstenv
scas
push
pop
xor
stos
jmp
mov
ret
sub
les
aaa
std
mov
lock
notb
out
mov
lcall
cmp
fisubs
rcll
loopne
gs
movsb
insl
fstl
inc
mov
jbe
ljmp
lea
sub
test
dec
sub
mov
sbb
pop
or
or
shll
popf
imul
add
ret
insl
jns
push
jo
sbb
or
push
ret
mov
fcompl
sbb
mov
loope
stos
sbb
fldt
inc
xor
in
mov
shrb
int
or
mov
outsl
pop
or
jmp
dec
add
imul
fwait
and
mov
sbb
jnp
pop
xor
rcrb
insb
fdivs
pop
out
mov
movsb
and
out
je
push
repnz
je
and
adc
jae
adc
addr16
pop
or
jge
dec
mov
scas
or
push
je
and
add
or
loopne
movsb
int
pop
loop
incl
or
testb
lret
xor
inc
xchg
mov
xchg
adc
outsl
cs
fcomps
or
add
and
and
adc
mov
js
aad
enter
aad
dec
or
pop
push
inc
std
mov
xchg
iret
sub
jne
mov
out
in
in
pop
cmp
adc
jae
sub
mov
jecxz
jae
dec
add
pop
test
adc
test
and
fistps
mov
lods
cmp
cmp
pop
ja
mov
jge
xor
dec
loopne
mov
xor
enter
mov
sbb
or
or
push
add
loope
and
sub
movsb
jmp
and
mov
mov
test
sub
rolb
ss
xor
dec
inc
shlb
sarb
sbbb
sub
xor
adc
xor
jb
mov
cmp
jg
ret
sub
lods
pop
fistpl
int3
call
fidivs
fmull
cmpsl
sbb
lds
jmp
mov
shr
cli
or
fidivs
jl
gs
fildll
call
jle
das
jl
xchg
mulb
cmp
in
aaa
mov
pop
rcll
mov
nop
inc
dec
mov
mov
fs
push
cmp
lret
sbb
adc
push
sbb
popf
jo
xlat
test
push
inc
pop
or
cmpsb
stos
test
rol
push
loop
popa
sbb
pop
hlt
push
hlt
or
add
aam
dec
pop
aas
orb
aad
adcl
jp
rsm
stos
add
pop
mov
dec
loope
or
js
inc
aam
sub
or
xor
and
fwait
jp
inc
jns
mov
sub
pop
push
lahf
in
inc
stos
mov
mov
cli
stos
enter
cmp
pop
cmpsb
jns
aad
std
jp
jo
xchg
and
pop
pop
pop
dec
insl
or
mov
cli
les
pop
andb
sti
lret
cli
shrl
ja
dec
idivb
ss
clc
or
push
popf
inc
pop
adc
mov
scas
pop
jmp
popf
sbbl
cmp
mov
mov
xchg
push
rclb
mov
xchg
insl
out
dec
loopne
jl
std
jmp
movsb
cmpsl
jmp
jnp
shll
sti
test
jo
xchg
cmc
push
outsl
js
nop
cld
mov
bts
fsubrl
pop
cmc
iret
call
inc
cltd
or
fs
ds
imul
les
sub
and
or
cmpl
push
cli
mov
or
mov
lock
xchg
mov
loope
fsubl
mov
sub
lock
dec
and
sub
jns
in
sbb
mov
mov
mov
lods
subl
push
mov
xchg
dec
movsl
and
movsl
cmpsb
in
mov
jmp
xchg
pop
xor
sbb
outsb
imul
jle
sub
inc
mov
xor
movsb
sub
pop
dec
lods
and
fiaddl
ljmp
inc
enter
xor
dec
aas
out
ljmp
dec
xor
mov
adc
test
loope
pop
xchg
sub
mov
lods
es
xchg
daa
xchg
iret
and
push
jns
andb
incb
xchg
idivb
cmpsb
adc
xchg
sub
movsl
xorb
movsl
rclb
and
or
mov
in
movsl
adc
add
iret
inc
loopne
mov
cmp
mov
leave
mov
lods
or
push
ds
push
jl
add
inc
inc
xchg
pop
cmp
jl
mov
sub
test
out
je
push
or
and
sub
int
fstpl
fwait
notb
xchg
mov
call
mov
dec
fbld
add
pusha
cltd
in
add
xor
ds
cmc
push
shrl
ljmp
in
je
inc
outsl
ss
in
push
cmp
add
dec
loopne
push
rcrl
dec
inc
jne
cld
rcrb
incl
xchg
jge
mov
or
add
add
xchg
aas
insb
pop
out
xchg
push
cmp
mov
xor
xchg
mov
mov
jmp
push
xchg
sti
clc
xchg
in
inc
cmc
cs
sub
and
sub
std
xchg
cli
mov
mov
lret
jae
out
xchg
into
clc
pop
xchg
lcall
andnps
mov
loope
pop
xorb
push
notl
sbbb
shll
mov
imul
inc
mov
or
jne
ja
repnz
cmp
cs
and
test
test
pop
sbb
xchg
dec
sbb
xor
xor
pop
popa
fldcw
shl
sbb
cs
jo
adc
incl
adc
pop
push
lcall
into
out
popa
arpl
leave
jae
adc
mov
pop
out
xchg
push
push
stc
mov
mov
cmp
out
pop
inc
loope
xchg
out
test
fsts
adc
aad
iret
lock
cltd
cs
fwait
out
jmp
xor
addr16
cltd
aam
fldt
mov
add
addr16
fwait
scas
popa
scas
push
push
outsl
jae
and
fcompl
mov
fnstenv
jno
test
sub
bound
outsb
fdivrl
push
pop
cmpsb
in
dec
pop
loopne
adc
pop
adc
dec
mov
xchg
pop
mov
je
or
scas
dec
sub
and
inc
and
shrl
aaa
jne
mov
icebp
movsb
push
aad
sub
adc
rcrl
cmp
loope
cmp
xchg
lds
dec
xchg
cwtl
add
or
ljmp
pushf
dec
jne
rol
and
loope
pop
popa
in
add
outsl
sti
xor
iret
cmc
push
xchg
imul
inc
add
aaa
cwtl
jmp
gs
mov
stc
dec
retw
xor
outsl
in
paddsw
jl
ds
aam
iret
fbstp
movb
cmc
iret
xlat
mov
push
rcll
mov
aad
add
das
cmpsl
mull
sbb
lods
mov
mov
out
mov
mov
icebp
fldcw
lahf
scas
push
mov
push
xchg
aad
clc
dec
pop
cmp
jne
fistpll
test
xchg
mov
cmpl
sbb
imul
cmpsb
inc
fisubl
push
js
clc
jge
stc
js
leave
and
inc
aas
mov
mov
mov
divl
stos
mov
xchg
jmp
stos
fcmovb
sub
add
int3
lock
test
loope
xor
cld
fistpl
mov
fs
aad
mov
adc
aam
mov
rorl
pop
sub
mov
inc
je
push
pop
cmc
lea
popf
lods
movsl
lcall
mov
stos
jmp
test
inc
jae
mov
stos
lahf
repz
stos
nop
push
adc
mov
not
and
jns
aam
lahf
adc
lods
imull
add
xlat
outsb
push
imul
sub
push
adc
cli
xor
adc
rclb
test
data16
inc
out
fnstenv
jmp
lret
mov
sarb
repz
lods
lahf
outsl
pop
sub
and
dec
mov
jecxz
jle
mov
xor
lret
cmp
adc
enter
fisubrl
xor
dec
xchg
push
subb
dec
jge
loope
sahf
stos
mov
je
ljmp
mulb
mov
sub
jae
adcl
jmp
dec
aam
inc
push
mov
push
fwait
add
pop
dec
ret
fdivrl
loope
mov
stos
push
and
mov
arpl
xchg
jnp
mov
shr
xor
inc
lahf
out
mov
xchg
push
and
adc
dec
mov
push
or
lcall
cwtl
xchg
lcall
dec
jae
push
sti
iret
movl
mov
mov
jb
imul
dec
mov
cmp
inc
xor
outsl
or
add
stos
mov
mov
inc
repz
adc
pop
and
dec
out
mov
push
cwtl
sbb
lcall
lcall
arpl
jnp
pusha
jg
mov
cmpl
clc
stos
xlat
mov
hlt
sub
jne
sub
je
sbb
call
scas
in
ljmp
mov
out
ljmp
pop
divl
cmp
pop
mov
mov
orl
or
pop
push
popf
aad
add
imul
addr16
xchg
lcall
div
add
or
xchg
xchg
mov
clc
out
pop
push
test
cmp
cwtl
andb
xchg
dec
xchg
jns
lcall
inc
addr16
add
mov
and
orl
cmp
out
cmp
push
or
jb
ficoms
movsb
adc
rorb
cli
mov
mov
jb
mov
ds
xchg
enter
out
and
adc
cld
vpaddb
push
push
lods
cmp
sbbb
loopne
jmp
mov
fsub
test
lret
cmc
sbb
xchg
add
cli
jns
sbb
mov
mov
stos
loope
test
in
pop
pop
cmp
icebp
lret
xchg
add
les
sti
test
mov
leave
push
mov
lods
mov
out
iret
pusha
data16
call
push
mov
mov
mov
arpl
pop
es
cld
xchg
pop
push
les
xchg
push
inc
lods
ficoml
seta
push
add
dec
pop
and
pushf
cmp
repz
mov
int
mov
sbb
repnz
xor
jns
cmp
sbb
dec
push
or
out
cld
pop
xlat
pop
or
jae
and
test
add
cmp
movsb
cld
int
stos
fnsave
ja
lea
pop
adc
lods
or
shrl
cmp
leave
iret
sbbl
mov
xchg
push
ljmp
jbe
jns
jno
xor
mov
stos
stos
jb
ja
adc
std
imull
leave
dec
and
push
inc
push
jno
cwtl
push
mov
push
in
mov
loope
fsts
ja
notl
outsl
xor
push
sbb
hlt
clc
mov
es
mov
sub
push
scas
out
xchg
adc
sahf
adc
jne
aad
stos
add
mov
imul
xchg
cmp
loop
inc
leave
lea
lds
sub
sarb
lds
dec
stos
mov
cmpsl
mov
ljmp
in
mov
lea
pop
lea
movsb
into
pop
xorb
pusha
cmc
mov
pop
xchg
stc
pop
pop
dec
mov
ficomps
or
pop
je
inc
popf
lahf
mov
lahf
sub
aad
imul
leave
gs
nop
fadd
scas
cli
enter
loopne
dec
push
inc
adc
xchg
jbe
gs
xor
xchg
pop
dec
add
xor
lods
and
repnz
ss
and
and
mov
in
pop
mov
ret
loop
scas
adc
xchg
lds
shl
mov
iret
add
mov
mov
mov
ja
jmp
arpl
out
sti
push
sbb
enter
mov
fidivrs
or
outsb
xchg
dec
popf
mov
push
in
add
jmp
lds
mov
aaa
dec
mov
adc
cs
push
scas
push
jb
pop
es
lods
sahf
bnd
pop
mov
call
xchg
pop
pusha
pop
pop
sub
push
insb
xor
movsl
scas
mov
cmp
adc
ds
sbb
insb
cld
push
xchg
jg
jl
mov
popf
into
nop
push
insb
dec
xchg
mov
aam
xlat
les
mov
mov
xchg
pop
push
or
pop
push
repnz
cmpsl
jp
daa
mov
dec
mov
dec
jge
adc
les
fucomip
arpl
cli
test
test
mov
ja
in
cmp
mov
xlat
pop
es
pop
pop
push
ret
gs
scas
fildl
lods
sbb
outsl
icebp
out
and
or
stos
imul
jl
pop
loopne
adc
fidivl
aam
gs
dec
stos
and
cmc
call
mov
lahf
xchg
cmp
and
xchg
pop
inc
imul
and
push
jecxz
mov
roll
pop
scas
dec
stc
cmp
sub
jg
and
jge
and
in
cwtl
aam
lock
lds
cld
mov
xchg
cld
inc
push
scas
mov
pop
mov
fwait
mov
inc
stos
pop
mov
mov
or
rcrl
mov
jmp
insl
xor
arpl
sbb
push
xor
cmp
dec
cmp
shll
dec
int3
xor
mov
jb
sti
js
popf
pop
add
mov
pop
fistl
or
pop
xchg
repnz
jp
xor
fsubp
bound
push
ffreep
jno
sbb
mov
pop
hlt
cmp
jmp
xchg
ds
push
mov
ret
popf
mov
adc
adc
add
test
stos
call
adc
imul
adc
ret
xchg
xchg
stos
xor
jecxz
test
mov
push
std
shl
cmp
cmp
das
daa
fcoms
xchg
dec
push
rclb
iret
leave
jg
push
mov
test
test
enter
xor
add
xor
ljmp
cwtl
roll
mov
int3
repz
ds
rcr
sub
loope
stos
dec
pop
and
lea
cmp
jg
mov
mov
call
mov
mov
daa
pushf
lods
adc
jmp
ss
mov
or
pusha
and
adc
inc
inc
mov
xchg
sub
cmpsb
loop
call
lret
add
jmp
mov
pop
sbb
lret
mov
lcall
sbb
pop
inc
pop
idiv
mov
mov
shrl
rcrb
jbe
in
mov
cmpsb
aam
iret
push
in
das
xor
cmp
xor
sub
sub
xchg
test
xorb
xlat
lds
push
int3
sbb
enter
or
and
sti
lods
pop
sbb
enter
push
xor
cwtl
leave
rol
cmp
addr16
jmp
push
loop
cwtl
ficomps
notl
in
dec
insl
push
pop
mov
or
xchg
xor
movsb
cli
adc
xor
and
dec
jmp
inc
dec
movsl
sbb
pop
push
pop
and
ss
mov
push
inc
rcll
fisubrl
jp
mov
addb
dec
fildll
fs
jl
call
jge
mov
jo
push
push
jo
fwait
shrb
insb
je
lods
mov
mov
fcmovnu
adc
inc
nop
push
cwtl
stos
fucomip
mov
mov
scas
add
out
jmp
lcall
in
inc
popl
cmp
movsl
adcl
gs
test
jbe
in
das
scas
lret
add
adc
shr
add
add
call
jbe
jl
sub
pusha
and
sbb
push
in
sbb
jge
andb
aaa
jmp
pop
and
rcl
cs
dec
movsb
mov
dec
xchg
mov
pop
adc
fnstenv
push
in
pop
ret
add
les
or
xlat
sti
adc
pop
lods
xchg
mov
jmp
loopne
loope
sub
fcompl
lds
sub
inc
scas
xchg
outsb
ret
call
int
in
jns
jnp
jb
ljmp
mov
mov
push
orl
inc
push
pop
imul
sub
jge
outsl
out
mov
bound
adc
inc
sub
push
xor
push
jbe
outsl
or
mov
roll
pusha
arpl
outsb
fwait
cmc
and
pop
in
mov
mov
icebp
andb
arpl
jno
mov
cld
pop
jecxz
pusha
filds
push
xor
xchg
add
inc
decb
cs
sti
pop
adc
ret
push
add
add
and
out
imul
gs
and
lea
movsb
sub
and
cmp
jmp
out
aad
stos
sub
arpl
lods
ljmp
hlt
xor
daa
adc
push
outsl
xor
repz
cpuid
cmp
push
mov
mov
cmpsl
push
ret
sbb
mov
add
in
mov
inc
push
movb
stos
jg
mov
ja
xorb
mov
sbb
adc
sbb
cltd
adc
sub
or
sbbb
xlat
insl
popf
repz
loop
push
jno
call
imul
pop
push
pop
add
sbb
ret
cs
adc
mov
dec
mov
outsb
ret
jno
gs
test
add
push
xchg
cmp
js
neg
stc
sub
ljmp
xor
dec
cmp
jb
and
and
jge
pushf
cwtl
sbb
sub
push
sbb
aam
sbb
xchg
and
outsb
jle
scas
inc
jne
fdivrl
jecxz
enter
xchg
lea
xor
sub
je
jle
push
ret
sbb
or
push
push
cmc
in
sbbb
push
negb
and
test
insb
stc
movsl
mov
and
ret
mov
push
xchg
fidivrl
es
pop
jb
sbb
pop
in
mov
sub
jnp
inc
dec
jne
and
xchg
pusha
inc
jns
outsb
cli
adc
mov
repz
mov
cmp
push
sub
pop
imul
jnp
jmp
jp
es
pop
bound
addr16
das
imul
sub
scas
shll
push
sbb
rolb
nop
or
xor
sub
shll
in
imul
mov
push
decb
jno
mov
test
dec
add
inc
roll
fstl
stos
out
ljmp
mov
ficomps
mov
test
mov
fisubrs
bound
or
adcb
jle
mov
fwait
mov
ficoml
mov
jmp
mov
mov
adc
mov
ljmp
or
lods
pop
dec
mov
das
lods
sti
push
and
lret
pop
shrb
in
cmpb
mov
lea
or
test
sub
sbbb
mov
sub
pop
faddl
jbe
cmc
adc
dec
aas
inc
add
add
bound
lret
test
mov
xchg
arpl
inc
and
test
addl
popa
and
xchg
pop
add
lret
or
ljmp
pusha
pop
xlat
fimuls
pop
add
arpl
rol
mov
xchg
fs
push
and
sbb
push
pop
and
ret
test
cmp
dec
aad
arpl
int3
pop
out
inc
sub
das
sarl
loope
push
mov
scas
inc
pop
lods
inc
adc
je
dec
mov
pop
jmp
hlt
mov
inc
cmpb
cmp
adc
cmp
jns
test
mov
cmpsb
lock
mov
mov
lods
cld
ja
in
insl
push
decl
hlt
js
push
sbb
pop
or
xor
in
aaa
or
or
cmp
xchg
cmp
out
xchg
test
ja
or
pop
adc
xchg
or
mov
mov
in
lahf
mov
test
dec
sti
cltd
adc
jmp
rclb
test
lds
mov
sahf
sub
mov
xchg
ret
jnp
imul
movsb
dec
or
int3
ss
sub
cmpsl
std
ret
out
mov
dec
cmp
jbe
nop
mov
adc
and
dec
jg
xchg
mov
adc
and
dec
add
mov
push
and
and
push
outsl
divb
adc
sbb
sub
subb
cmpsb
push
pop
cltd
pop
push
and
sti
mov
pop
jb
clc
mov
lahf
mov
sahf
pop
stc
icebp
ja
cld
adc
nop
fists
jne
and
nop
loop
mov
xchg
jns
or
popf
xchg
movsl
adc
movsb
out
mov
sub
sub
adc
es
callw
mov
ds
ret
mov
and
inc
sbb
fldenv
xchg
or
test
mov
adc
cmpsb
out
rcrl
outsb
add
mov
and
adc
pop
ret
repnz
jl
andb
jmp
inc
xor
mov
xchg
pop
fstps
movsb
ds
addb
inc
jl
lret
js
icebp
jle
push
lds
mov
or
insl
in
cmp
daa
fcomps
pop
popf
rcll
inc
loope
dec
jnp
aad
lea
es
nop
imul
add
fwait
mov
adc
enter
inc
test
popf
out
mov
cmpsl
add
inc
push
roll
pop
test
xor
mov
mov
xor
pusha
movsl
fdiv
insw
sub
inc
ror
cmp
popa
dec
xchg
cld
xchg
dec
mov
xchg
push
stos
cmpsl
lea
in
mov
insl
and
jns
jbe
mov
inc
rcl
jge
shrl
mov
div
dec
ds
dec
pop
mov
int3
mov
pop
into
mov
pop
inc
scas
pop
test
lret
test
lea
mov
mov
sahf
incb
das
stos
std
jne
mov
mov
inc
psllw
push
clc
mov
pop
cs
cli
shl
pop
and
or
imul
imul
int
lret
int
adc
mov
pop
push
push
sahf
aam
fdiv
pop
lahf
sbb
xor
or
iret
fwait
mov
lret
jg
xchg
or
mov
mov
mov
lods
jg
cmc
cmp
inc
pop
fbstp
test
inc
cmp
scas
adc
stos
cmpsl
cltd
flds
and
orl
scas
clc
decl
xchg
mov
cmpsl
inc
cmp
lds
call
fcompl
jbe
dec
push
mov
in
popa
sub
cmovg
adc
inc
sub
pop
cld
pop
add
dec
scas
leave
and
popf
cli
pop
sahf
movb
xor
sub
in
mov
loope
sub
pop
adc
leave
mov
cwtl
sub
jns
xchg
add
leave
mov
mov
and
add
jle
jae
mov
ljmp
xchg
pop
pop
pop
and
push
scas
loope
fstps
scas
push
dec
or
mov
mov
cmp
fs
sub
mov
fildl
bound
push
movsl
ljmp
movsl
pop
sahf
movsl
pop
jle
sub
rclb
mov
gs
mov
and
sub
mov
xor
jo
sbb
cmp
scas
xchg
inc
push
push
test
loope
fisttpll
and
xchg
dec
rorb
into
push
mov
rcl
repnz
pop
out
leave
loop
mov
inc
aam
iret
mov
popf
es
std
or
pop
pop
rolb
pop
das
hlt
adc
daa
jb
rorb
mov
out
pop
cli
insb
jmp
cmp
lahf
jo
mov
sub
rcll
xor
div
push
pop
mov
sub
into
push
cs
mov
mov
mov
or
pusha
dec
repz
and
cmp
push
xchg
mov
mov
iret
mov
push
push
xorb
xchg
jg
test
sub
rcl
ja
and
arpl
imul
inc
dec
sbb
push
dec
adc
add
jl
xor
fmull
ja
ljmp
loop
cmc
mov
dec
out
xchg
xor
xchg
loope
inc
movsb
gs
push
in
dec
pop
test
and
and
loop
pushf
jge
mov
test
mov
inc
insl
mov
sarl
xchg
xchg
out
pop
jbe
xchg
rorb
sahf
pop
lret
fbstp
test
and
or
popa
movsl
inc
xchg
jle
loopne
lods
addb
push
bound
enter
rclb
sbb
imul
dec
in
add
push
fs
fildll
out
xor
or
loop
nop
sub
enter
stos
notl
lea
xchg
xor
mov
hlt
inc
mov
push
pusha
pop
aam
cmp
push
stos
jle
clc
test
cmc
pushf
call
test
mov
int
xchg
stos
sub
mov
lret
push
jae
fwait
ja
sub
pop
jb
shl
cmp
test
faddl
jno
pusha
leave
fsubr
jmp
in
fucom
fnstsw
xchg
dec
push
sbb
xchg
xchg
xlat
nop
mov
push
jns
ffree
add
ja
popf
pop
push
sub
out
mov
fucom
andb
mov
ss
fcomp
jne
sub
xchg
int3
in
jle
mov
mov
jns
sar
in
dec
cmovo
pop
mov
adc
insb
or
in
sub
xlat
xor
jnp
dec
ljmp
repz
scas
mov
data16
pop
in
adc
xor
nop
xchg
mov
testb
adc
jmp
xor
mov
mov
jnp
xchg
js
and
mov
roll
pop
adc
sub
sbbb
xchg
insb
push
push
adc
xlat
movsb
xchg
mov
icebp
popa
sub
pop
sbb
and
and
pop
into
add
gs
dec
mov
jmp
add
mov
pop
mov
pop
aaa
cmp
xlat
add
test
cmp
iret
mov
sbb
xor
sbb
imul
imul
sub
ret
mov
bound
rorl
push
xor
out
fisubrs
cmpsb
test
lcall
lcall
lcall
dec
scas
mov
lret
dec
or
xor
ror
dec
fsubs
xor
je
je
or
sbb
mov
dec
mov
xor
rcl
and
adc
sub
cmpsb
inc
pusha
lcall
lcall
dec
hlt
ret
rcr
dec
xchg
mov
dec
inc
push
xor
sarl
dec
xor
out
clc
lcall
lcall
xor
xchg
or
jb
shrb
add
outsl
mov
je
test
add
pop
enter
cld
or
nop
in
mov
mov
mov
sarb
pop
out
add
hlt
lods
fildl
push
not
and
pop
mov
popa
lock
jbe
test
in
js
mov
loope
sub
add
in
inc
jg
clc
fucomip
add
xor
add
jle
testb
jge
pop
dec
adc
push
insb
insl
xor
icebp
incl
add
mov
and
adc
sbb
lahf
push
daa
adc
iret
mov
and
loope
addl
dec
push
mov
jns
popf
or
add
xor
add
sbb
xchg
add
sbb
sbb
push
out
ds
imul
fsubrs
add
xchg
xchg
add
stc
aaa
cmp
movsl
add
mov
sub
nop
pop
mov
adc
sti
mov
xlat
and
add
cmc
test
lock
jle
pop
scas
jecxz
add
cwtl
push
lds
insl
add
imul
add
arpl
push
add
push
int
add
push
mov
pop
ds
add
fldenv
sub
dec
add
das
sub
add
sub
out
pop
mov
fildl
mov
xor
add
and
jge
daa
shl
inc
cld
inc
jb
enter
movsl
mov
mov
jno
add
sbb
jno
xchg
inc
fdivr
pop
fs
int3
call
push
pop
pop
push
addb
push
sub
adc
cmp
ds
or
add
cwtl
push
mov
mov
add
xchg
add
lds
cli
mov
add
scas
lods
mov
add
xchg
add
add
add
cmpsl
jns
add
xor
pop
jp
std
cmp
mov
add
xor
subl
shll
add
in
inc
cmpsb
push
cmp
outsb
xor
aas
in
lahf
lret
loopne
leave
add
mov
mov
add
jg
adc
outsb
pop
add
pusha
aaa
xor
push
repnz
sub
mov
scas
pop
fsubrl
dec
add
xlat
dec
cmp
dec
add
push
iret
cmp
ds
imul
stc
push
push
scas
pop
sbb
xor
das
inc
dec
push
ds
ret
xchg
inc
movb
push
lds
lret
ljmp
mov
mov
add
jl
rcrl
aas
and
ret
test
daa
mov
and
jmp
add
mov
into
jmp
ljmp
mov
cmp
and
or
dec
jbe
or
add
add
outsl
rcrl
in
ret
mov
idivb
mov
sbb
stos
sbb
mov
add
sub
xor
push
mov
add
add
push
fdivl
inc
loopne
movsb
add
xchg
loop
push
push
jo
ljmp
dec
add
test
or
jns
ds
divb
sbb
mov
bound
inc
out
pop
int
xchg
pop
add
test
imul
xchg
dec
xchg
xchg
xchg
lds
add
loope
push
add
mov
fxch
pop
pushf
inc
pop
add
aas
sarb
push
dec
das
loopne
add
sbb
adc
push
jmp
jnp
jb
fstpl
and
out
add
stos
jle
add
xchg
rcll
nop
aas
mov
xor
xor
ss
mov
sub
add
test
add
dec
imul
add
mov
ss
fidivl
jns
jle
add
mov
verw
sbb
or
mov
add
and
jb
call
ffreep
add
sbb
rcrl
hlt
add
push
mov
mov
daa
xor
pushf
dec
xchg
push
mov
stos
pop
or
inc
orl
ja
jno
jno
xor
pop
imul
data16
data16
pop
add
push
ja
adc
js
ja
adc
ret
xor
push
add
inc
inc
inc
push
add
push
leave
and
push
or
adc
jl
and
sbb
outsb
push
mov
mov
mov
add
mov
scas
lods
clc
test
mov
jno
andb
mov
add
cmp
incl
idiv
in
fst
aad
ret
iret
enter
aam
out
push
sub
ljmp
add
mov
jecxz
mov
adc
jl
xchg
xchg
pop
push
lret
leave
dec
test
dec
loop
sub
inc
xor
xchg
and
push
sbb
cltd
sbb
movsb
dec
push
dec
lock
je
addr16
add
push
popa
push
sarl
dec
sub
sub
and
cmp
arpl
jp
sub
fs
pusha
dec
imul
push
lea
inc
xchg
lds
addl
addb
push
cs
push
mov
stos
stos
xchg
cmp
or
inc
inc
pop
push
push
add
dec
add
insl
inc
stos
push
rdpmc
dec
add
or
inc
mov
mov
inc
loop
mov
outsb
mov
sub
or
sbb
je
dec
mov
cmp
bound
stos
popa
sub
mov
lock
mov
cmp
popa
cs
push
sub
leave
movsl
xor
fadds
pop
mov
test
dec
inc
sub
adc
rolb
or
pop
add
dec
cmp
imul
sbb
adc
pop
rcrb
jle
insl
jns
jl
jbe
clc
filds
sarl
mov
cmp
mov
mov
mov
cmpb
test
test
xchg
pop
call
cmc
push
rcl
les
sbb
out
in
mov
lea
xchg
mov
sub
scas
xchg
jnp
cmp
lcall
adc
aas
sub
hlt
cmpsl
and
int
leave
daa
and
sub
adc
jmp
jne
dec
inc
mov
outsl
xor
in
dec
pusha
and
pop
sub
dec
pop
daa
jbe
fs
sti
andb
adc
fistpl
jmp
push
outsl
addr16
push
pusha
imul
imulb
setg
rcll
mov
push
ljmp
mov
ljmpw
loopne
sti
lods
mov
leave
aaa
pop
mov
sti
jne
jmp
sar
push
mov
sub
sbb
cli
and
fsts
faddl
adc
add
out
xor
push
lods
std
inc
mov
jl
pop
jae
adc
imul
mov
inc
out
int3
jmp
outsl
lods
jb
dec
pushf
mov
mov
mov
pop
sbb
mov
aad
rorb
fdiv
bound
int3
loop
popf
popa
mov
dec
je
popf
int3
or
in
xor
push
stc
jmp
sbb
push
dec
div
mov
aaa
sti
push
and
ret
and
dec
pop
out
mov
push
popa
pop
pop
adc
lea
sbb
push
jl
and
push
loop
cmpsb
jp
sbbl
scas
jge
arpl
dec
xchg
lods
insb
mov
stos
mov
fisubl
sbb
in
jecxz
int
mov
aam
stos
out
cld
out
std
gs
scas
jne
inc
pushf
ss
add
addl
aas
stos
out
ss
mov
je
cld
lret
imul
outsl
jp
stos
jl
int
dec
icebp
push
jb
cmp
lcall
pop
sub
mov
lcall
cli
or
ret
jb
ret
shrb
in
subb
ret
add
leave
lcall
add
stos
sub
cmpsl
out
jae
xor
inc
xor
imul
jne
pop
cmpsl
out
cmpsl
fwait
negl
push
xchg
orb
add
imul
ret
mov
mov
mov
rclb
mov
and
ror
cli
in
and
dec
js
cltd
aad
aam
sub
insl
push
xor
push
fistps
imul
sub
dec
jp
dec
push
repnz
imulb
adc
das
bound
push
sub
test
imul
xchg
push
out
pop
push
sub
dec
mov
fisubrl
push
inc
mov
sbb
lds
jecxz
jne
out
and
enter
cltd
rcll
dec
and
jno
cltd
jle
adc
mov
xor
out
fimuls
movsl
push
pop
sahf
pop
xor
mov
ret
rcrl
sti
jns
jge
aaa
in
push
jg
mov
jne
or
dec
push
rorb
mov
ja
stos
push
xchg
mov
push
loop
sbb
scas
dec
ja
push
das
insb
mov
push
gs
scas
cmp
jl
jl
ja
ljmp
mov
dec
mov
xor
in
sbb
xor
shr
cmp
or
mov
fisttps
or
mov
pop
xor
sti
add
outsl
xchg
add
mov
push
pop
sbb
sbb
push
push
cwtl
mov
enter
dec
pop
push
jmp
add
inc
cmp
aaa
xlat
mov
pushf
mov
pop
adcb
add
rolb
lcall
add
dec
xlat
adc
testl
arpl
flds
jl
in
addl
add
loopne
cmp
mov
adc
flds
and
out
xor
fld
inc
xorl
inc
movsb
sub
push
mov
insl
sbbl
cmpsb
mov
clc
jmp
push
add
sahf
int
add
enter
dec
and
sub
js
inc
sub
out
jmp
sub
stos
fwait
lcall
fbstp
push
loope
add
lcall
inc
push
cltd
add
xor
dec
ss
sub
insb
sbb
xor
mov
adc
movsl
inc
and
das
mov
dec
dec
in
and
pop
nop
addr16
into
xlat
shl
dec
xor
cli
jo
cltd
inc
dec
xor
cwtl
loopne
clc
pusha
scas
mov
in
or
sub
pop
cmp
inc
xor
mov
xor
lea
in
lret
leave
inc
outsl
movsb
sti
leave
push
mov
cmp
ja
push
mov
mov
lods
fiadds
repnz
jae
push
adc
jmp
mov
test
pusha
mov
orl
mov
xchg
jb
pop
xor
jmp
push
cmpsl
xchg
lret
cltd
pop
xchg
mov
adc
xor
mov
sbbl
cs
ss
jnp
mov
xor
inc
xor
cmp
fcmovnb
aas
jmp
bound
shr
ljmp
dec
sahf
fsubrs
push
mov
repz
jae
test
sbb
mov
push
sbb
pusha
popf
adc
sbb
inc
mov
sbb
jg
inc
or
nop
sbb
rol
cli
or
enter
fistps
and
sti
mov
mov
and
popf
cltd
decl
and
xchg
add
sbb
lcall
fistpll
mov
in
movsl
dec
jg
add
test
inc
jl
lods
aaa
add
dec
xor
xor
jnp
pop
aaa
rcrb
sbb
gs
mov
lods
bound
pop
mov
push
dec
sbb
adc
aad
push
pop
lock
add
fcom
stos
add
add
pop
and
jae
rorb
push
pop
popa
inc
xor
pop
add
add
and
sbb
sbb
mov
cmp
jbe
mov
icebp
mov
fiaddl
sbb
dec
or
loop
mov
dec
inc
dec
lock
mov
jo
prefetchw
js
sbb
push
es
popf
in
sub
mov
addr16
out
jl
int3
pop
sub
mov
sbb
pop
and
stos
test
push
in
mov
fistpll
movl
push
cmp
add
xor
push
loop
jecxz
insb
xchg
push
cmp
js
mov
mov
mov
xor
cmp
and
in
js
ret
ret
xchg
fdivr
add
cld
idiv
test
adc
pop
inc
push
nop
outsb
jne
pop
push
dec
inc
xchg
sub
or
pop
pusha
and
add
aas
or
sti
into
movl
or
pop
or
into
cmp
sbb
fadd
dec
push
sti
std
loop
je
pop
sahf
mov
xor
repz
scas
aas
sbbl
add
push
rcll
xor
jns
push
mov
jns
popf
mov
push
sahf
mov
mov
int3
andl
mov
or
and
push
mov
mov
lret
jecxz
inc
jle
insb
and
cmp
inc
add
xor
je
loop
dec
inc
pop
jge
rorb
aas
ret
add
je
lret
std
ret
aas
das
adc
sub
or
and
xchg
and
rclb
add
mov
jb
add
ds
mov
dec
inc
dec
jnp
mov
and
aas
loopne
or
pop
subb
add
jns
dec
in
mov
inc
fsubp
mov
mov
stos
leave
jmp
ss
add
mov
cli
sbb
outsb
adc
dec
or
add
mov
mov
shll
add
lea
mov
int
and
lret
and
test
inc
sub
mov
xor
sub
rcl
jne
loopne
jae
jo
imul
push
inc
sbb
adc
in
and
adc
sub
xchg
loopne
xor
sub
mov
bound
push
jb
int3
scas
sbb
nop
adc
cmpsl
push
add
sub
lret
add
leave
aad
rcl
insl
dec
add
pop
push
je
push
add
dec
dec
cmp
add
and
mov
cmovns
jne
loopne
mov
jle
jnp
push
je
sbb
lahf
ret
xchg
sarl
xchg
stos
mov
mov
inc
nop
xchg
mov
xchg
cmpsb
out
mov
sbb
je
cmp
je
imul
cmpsb
ss
loopne
and
pusha
jno
jle
push
inc
imul
push
add
insb
or
ss
inc
insb
outsl
into
xchg
mov
jne
das
mov
lods
or
dec
movsl
mov
stos
or
mov
fwait
bound
popf
mov
mov
and
addr16
rcl
scas
int
sub
push
pop
arpl
pop
add
mov
aad
push
stos
push
lods
ss
jae
std
mov
and
adc
or
sub
fcompp
inc
lcall
or
imul
das
nop
mov
push
fstps
cmpb
xchg
inc
mov
in
lcall
mov
ja
lods
cwtl
cmp
test
add
std
fidivs
jmp
lods
clc
mov
dec
testl
shrb
sbb
loope
pop
jno
and
cmp
xor
xchg
repz
mov
adc
add
cwtl
or
lret
mov
repz
repnz
adc
popa
cmpsb
mov
mov
sahf
xchg
mov
pusha
lcall
xchg
xchg
ret
sbb
rol
fdivr
mov
sahf
mov
mov
pop
pop
mov
xchg
pop
jo,pn
add
aaa
daa
int3
cmp
or
and
adc
call
pop
jne
sbb
jnp
add
xor
xor
add
sub
sbb
xor
cmp
pushf
jb
or
das
adc
push
jns
jne
aad
sbb
popf
les
pusha
xchg
mov
cmp
pushf
sahf
test
xor
test
push
pop
mov
cld
mov
cmp
cmp
insb
pop
dec
clc
loopne
xchg
ss
test
mov
dec
enter
aam
xor
or
daa
cmp
fdivrl
sub
popa
shl
test
cwtl
mov
test
int3
hlt
pop
inc
in
and
test
xor
and
or
cmp
and
test
xor
lock
cmp
dec
push
inc
push
bound
pusha
inc
inc
sbb
or
rclb
adc
js
inc
lods
nop
loopne
cmp
ror
push
inc
loopne
pusha
ret
das
adc
or
int3
sbb
rorl
mov
call
adc
inc
pop
nop
flds
push
inc
or
call
lods
inc
push
sbb
andb
enter
push
xor
jae
sbb
or
and
mov
or
xchg
pusha
xor
and
dec
jnp
or
sub
xchg
add
mov
shl
rcrl
repnz
test
pushf
cmpsb
test
call
inc
loope
dec
jmp
out
adc
outsl
push
jp
or
pextrw
ss
adc
dec
push
pop
cmp
xchg
or
or
adc
sub
rdtsc
ret
fmulp
adc
jo
adc
shrl
sarb
and
data16
xorb
js
jo
sbb
sbb
into
outsl
int
aas
mov
test
daa
adc
ds
sbb
inc
xchg
mov
push
faddl
fmul
test
xchg
sar
pop
lret
xchg
cmc
fstpt
pop
xchg
jne
ret
repnz
cmc
cs
and
ljmp
int3
call
push
push
lea
push
and
mov
mov
and
lods
or
sbb
xchg
js
sarl
test
ret
xchg
mov
testl
pop
jge
and
inc
lods
push
xor
mov
shlb
stos
sbb
pushf
movsb
mov
jo
fistpl
xlat
lcall
in
repnz
enter
idivb
loop
lahf
fs
cwtl
test
mov
sub
stos
ss
imul
cltd
nop
punpckhbw
jle
addr16
lock
xchg
fwait
movsl
out
ret
out
je,pt
pop
cmp
mov
ret
sbb
xor
xlat
jns
ficoms
icebp
xor
dec
jbe
cmc
scas
enter
mov
out
in
xchg
loope
fdivrs
int
leave
leave
cmp
pop
cmp
popf
or
or
pop
pop
push
mov
inc
ljmp
or
ret
or
repz
dec
dec
dec
cmp
inc
and
lahf
lcall
dec
hlt
dec
cld
les
push
push
xor
lds
xor
adc
and
lret
mov
imul
or
jmp
int3
std
adc
jb
jo
jns
push
mov
fistpl
rol
iret
sub
pop
subl
outsl
pop
rcll
test
pusha
ret
jo
cmpl
loopne
mov
mov
test
es
es
aas
fimull
in
adc
rcrl
ja
push
xlat
add
sti
hlt
out
call
pop
pop
adc
into
sub
movsl
popf
dec
subb
inc
jno
imul
into
popf
fstpl
pop
addb
fiaddl
fs
shll
mov
adc
xor
jecxz
dec
movsl
insb
pop
xor
xor
stos
jecxz
push
loop
push
mov
mov
outsb
loopne
push
pop
out
ret
imul
sbb
xorb
dec
test
jno
jg
icebp
jl
inc
dec
inc
in
cmp
xor
neg
in
fldenv
pusha
std
cld
adc
lods
xlat
lds
xor
add
cmp
stc
inc
andb
stos
cmpsw
fidivrl
and
cmp
gs
xchg
dec
jno
push
pop
jo
jp
scas
push
mov
fimull
jecxz
fsub
jno
fsubrs
mov
repz
pop
sbb
xor
dec
fwait
pop
cmc
daa
lcall
push
mov
mov
xchg
adc
fcmovbe
stc
or
or
fbld
test
sub
lret
movsl
ljmp
xor
iret
ffreep
dec
fsubrl
cmp
mov
addr16
inc
xor
jb
pop
das
dec
push
mov
mov
fs
or
std
xor
and
out
popf
dec
insl
cmp
dec
mov
imul
inc
ficoml
and
in
int3
rol
into
sbb
jne
adc
ret
adc
dec
es
fwait
and
xchg
inc
lods
fwait
scas
cpuid
repz
or
mov
mov
test
popa
in
fcoml
inc
imul
jp
dec
stos
jg
add
addb
outsb
popa
pop
push
and
into
movsl
push
ss
mov
mov
cmp
idivl
test
in
repz
ss
mov
mov
xlat
sub
repnz
in
inc
fildll
fldcw
adc
mov
repz
clc
loope
jmp
repz
xor
out
aaa
xchg
scas
add
sub
jbe
xchg
push
jo
pop
xchg
dec
pop
addl
xchg
nop
test
loop
addr16
sub
jne
mov
mov
pop
xchg
shrb
push
imull
test
pop
mov
mov
or
in
mov
rcrb
out
cmpsb
loope
cmpsl
ljmp
mov
sahf
inc
jnp
inc
cld
mov
inc
mov
mov
jbe
mov
fwait
popf
ja
cltd
pushf
push
clc
push
rol
bound
es
pop
or
lods
mov
sub
iret
add
gs
mov
push
sub
xchg
jl
iret
inc
add
push
cmpsb
in
test
inc
int
aam
xchg
icebp
mov
stos
cmpsl
mov
or
int
mov
les
out
cmp
push
rorb
dec
int
loopne
inc
outsl
fcmovnu
dec
adc
ljmp
shlb
cmp
lret
popa
xchg
es
pop
pop
xor
aam
rcll
xchg
mov
pop
mov
mov
add
cld
add
data16
in
notb
mov
jbe
cmp
xor
ror
sbb
shr
fnstcw
cmc
test
popa
cmp
push
sbbl
testl
pop
pop
cmp
push
adc
les
loop
mov
repnz
aad
nop
mov
xchg
jb
mov
lds
lret
into
stc
fmulp
pop
xor
into
mov
inc
mov
out
pop
les
push
pushl
ret
ficomps
into
fidivrs
xlat
pop
push
test
sbb
mov
or
sbb
add
jbe
lds
cmc
test
enter
stos
xor
jno
xchg
lods
test
ljmp
insb
loop
imulb
in
out
mov
mov
mov
push
push
pop
shlb
sbb
test
cmp
out
xor
add
xchg
daa
sahf
sahf
je
ss
stc
sbb
jmp
pop
push
xor
insb
mov
dec
lea
dec
les
cs
out
out
ja
insb
push
cmp
addr16
jle
sub
pop
pop
mov
dec
pop
pop
push
mov
out
je
gs
fsubr
fisttpll
loopne
push
dec
dec
pop
sub
pop
call
mov
mov
scas
push
jnp
jbe
fsts
in
fimuls
stos
dec
inc
xlat
mov
fsubrs
mov
cmp
mov
dec
mov
mov
push
fildl
idiv
outsb
jnp
lock
xor
xor
dec
push
out
sub
jl
xor
imul
xlat
jl
pop
aam
xlat
fbld
mov
sub
xchg
mov
pop
push
cmpsl
sub
mov
popa
xor
pop
iret
fisubl
sub
jp
mov
int3
sbb
pop
sbb
out
push
bound
cmp
cmp
aas
repnz
fisubrl
loopne,pn
jle
stos
sahf
cli
inc
lret
xlat
mov
jnp
mov
lds
dec
pop
stc
lods
inc
lret
jno
mov
dec
mov
dec
fwait
mov
push
iret
inc
pop
fxch
sub
cmpsb
mov
aad
loope
add
jae
mov
push
dec
mov
push
lea
fsub
inc
inc
loopne
cmpsb
inc
pop
sub
aam
xchg
mov
movsb
pop
mov
xchg
mov
mov
ffree
imul
popl
ja
xor
les
aad
mov
pop
daa
xor
xchg
ss
ss
mov
lahf
outsb
and
mov
mov
xchg
pop
xchg
ficoms
ja
mov
lret
push
fld
fidivrs
in
mov
xor
push
cwtl
pop
daa
xor
lds
inc
pop
jae
cmpsl
adc
repz
arpl
dec
add
adc
mov
call
push
lea
sbb
rcll
push
mov
cltd
lret
int
rep
int
enter
lret
and
or
test
push
popf
add
pop
lret
negl
adc
xchg
pop
xor
icebp
sub
fdivs
mov
inc
adc
out
int3
inc
mov
jle
sarl
cmp
fs
mov
lods
lock
adc
out
mov
inc
out
or
xor
or
xor
mul
lods
push
push
out
cltd
sbb
cmp
pop
or
jno
mov
jno
jb
mov
mov
insl
xor
test
pop
jno
add
fld
mov
jns
xlat
dec
insl
in
pop
outsb
out
loop
sbb
bound
cmp
dec
mov
sub
push
push
es
jno
mov
jge
pusha
or
cmp
ds
sbb
test
loopne
mov
shl
push
leave
jae
in
push
jno
lods
sub
les
mov
call
cmp
out
lahf
fwait
add
stos
cmp
outsl
pop
push
iret
add
cmp
adc
cmp
push
sub
adc
ficompl
xor
jae
cmp
repz
sbb
scas
mov
into
push
cmpsb
jno
out
cwtl
imull
test
mov
xlat
int
rol
hlt
mov
pop
push
pavgw
fcompl
xor
push
insl
pop
shl
sub
aaa
mov
mov
pop
push
mov
int
fs
loop
cmp
dec
xchg
popf
int3
mov
repnz
rcrb
ss
or
test
sar
adc
sbb
mov
pop
mov
add
lea
js
sub
inc
jnp
pop
inc
xchg
add
push
call
xchg
adc
xor
xor
ss
les
and
fisubrl
pop
imul
movsl
fcomps
sbb
mov
enter
cmp
xor
inc
jo
outsl
inc
ret
jmp
lret
pop
sub
inc
leave
cld
clc
pop
js
mov
and
lret
inc
fcomps
sbb
inc
cmpsb
mov
dec
xor
inc
push
inc
gs
mov
and
mov
push
mov
pop
xchg
sbb
out
pusha
or
xchg
fidivrl
scas
push
test
aam
scas
dec
sahf
push
pop
rcll
xor
test
push
fwait
pop
das
repz
pop
cmp
rcrl
mov
enter
add
dec
in
mov
or
mov
stos
lahf
loop
mov
adc
sbb
lahf
lret
ss
stos
sti
mov
or
stc
pushf
mov
sub
insb
int3
outsb
mov
pop
ljmp
jae
xchg
gs
sub
aad
xlat
into
and
fildll
popl
adc
or
sbb
push
xor
pop
ds
cwtl
jbe
fstps
out
stc
sahf
mov
mov
cmc
mov
push
fwait
lret
ljmp
popf
xchg
pop
push
pusha
test
push
out
idivb
xchg
lds
out
dec
jne
and
push
stos
sbb
pusha
pop
outsl
jae
sbbl
sarb
xchg
scas
pop
push
addl
jns
daa
mov
jo
inc
or
fsubrl
movsl
clc
lods
lret
movsl
lcall
in
in
lock
fcmovnbe
in
out
js
ljmp
gs
pusha
imul
pop
cltd
sub
xor
sar
aaa
ror
sbb
in
pop
repnz
test
insb
mov
adc
cmp
popa
imul
sbb
out
arpl
test
mov
out
out
xchg
push
popl
movl
jmp
out
pusha
cmc
ja
push
cmc
inc
inc
test
cmp
and
add
in
jp
add
cmp
push
clc
inc
ret
in
ret
ret
xlat
inc
loop
pop
cmpsl
push
jmp
xchg
lds
mov
outsl
aam
pop
filds
testb
lea
mov
sbbl
fimuls
cmp
cltd
push
outsb
inc
out
mov
mov
scas
or
into
arpl
mov
imul
cltd
cwtl
int
dec
je
adc
inc
int3
mov
xor
xchg
das
jne
or
fcomi
and
sbb
stc
xor
jbe
pop
mov
push
cwtl
fcmovnbe
sbb
movsl
xchg
lods
hlt
mov
out
loope
and
clc
cld
xchg
data16
or
sub
lods
pop
repz
daa
sbb
lods
cwtl
sbb
mov
mov
fsubl
push
fcomp
testb
jg
lea
jge
fwait
pop
mov
movsl
mov
daa
test
sbb
pop
cmpsl
adc
into
loope
outsb
mov
lea
dec
sub
test
cmpsb
cmp
out
push
sbb
pop
xor
inc
inc
negl
fwait
popf
std
or
xchg
pop
cwtl
jge
test
mov
mov
dec
cmp
std
jle
pop
out
xor
icebp
mov
stos
xor
js
sbb
adc
loope
iret
mov
lods
xchg
xlat
test
adc
cmp
test
rorb
or
int3
mov
fcmovnu
ret
add
enter
jae
cmc
hlt
mov
sbb
leave
lds
inc
test
repz
jl
dec
push
jne
and
sub
xchg
nop
cltd
xchg
popf
dec
xchg
movsl
xchg
sbb
cmpsb
aaa
loop
pop
mov
cld
fcmovnb
ret
psubusb
pop
jge
aad
cmc
xchg
cmp
std
or
jle
and
push
jae
mov
fmull
xor
mov
bswap
push
pop
cmovbe
dec
xchg
dec
sub
in
test
outsl
xchg
cld
movswl
out
mov
lret
or
addl
cwtl
and
std
outsl
mov
ret
jbe
das
push
add
test
rcrb
test
xchg
stos
mov
fmul
fildl
push
out
fucomi
out
dec
push
jmp
loopne
hlt
mov
mov
dec
and
mov
sbb
push
insl
push
gs
dec
ret
mov
pop
cmp
sub
imul
fs
pop
bound
mov
jne
lahf
ja
fsubs
call
mov
jmp
jb
out
out
pop
lret
cmp
fprem
gs
jo
into
fs
in
mov
loopne
xor
js
cvtps2pd
pushf
push
mov
ja
xchg
mov
add
shrb
cs
dec
mov
xor
inc
pop
sbb
dec
test
iret
inc
xchg
mov
add
mov
sbb
aam
push
cmp
and
or
push
mov
scas
ljmp
or
stos
fwait
dec
fcomip
int
loope
popaw
popf
test
add
push
cltd
fs
push
mov
push
rcrb
xchg
jae
cwtl
incb
mov
inc
adc
fsubl
lods
dec
xor
or
mov
call
test
jecxz
mov
repnz
xlat
pushf
js
cmc
mov
mov
int3
mov
xchg
mov
mov
dec
dec
ret
int3
cld
xchg
shr
stos
call
and
cmp
lcall
aas
cmp
xor
lret
sbb
test
inc
outsl
in
dec
inc
punpckhbw
jns
ficompl
jns
stos
dec
lahf
cmp
arpl
in
mov
outsl
fdivrs
pushf
xor
sbb
es
out
pop
push
repnz
mov
mov
into
hlt
cli
cli
jne
push
negl
not
cwtl
test
mov
mov
sbb
in
mov
out
push
adc
or
jl
push
xchg
je
dec
push
push
jae
xchg
adc
pop
or
sbb
scas
loope
call
sbbb
mov
lock
into
fstl
loop
push
stos
mov
movsb
imul
orb
xchg
fwait
jp
rcrl
je
add
inc
popf
nop
xchg
gs
mov
mov
cwtl
lods
test
mov
add
scas
into
pop
loope
push
jle
in
cwtl
mov
mov
push
cli
in
ret
add
pushf
mov
fiaddl
stos
xor
jns
pop
fidivs
sub
mov
and
lods
jno
mov
out
mov
pop
das
mov
jp
lea
mov
jbe
add
bsr
jl
lret
repz
adc
popl
rorb
imul
sub
xlat
in
ret
sub
hlt
scas
push
cmp
fcmovb
pop
pop
add
loop
test
and
mov
sbb
xchg
inc
pushf
or
in
mov
enter
insb
loop
and
pusha
insl
loope
adc
mov
inc
add
and
cmp
sub
int
bound
xor
shll
mov
pop
aas
inc
cld
divb
pop
setne
push
pop
test
jbe
or
sbbl
xchg
popl
sub
xchg
mov
sarl
jmp
mov
lods
push
dec
dec
pop
push
inc
add
xchg
xchg
cmc
pop
bound
xchg
inc
sub
xchg
or
push
sbb
pop
pop
sub
loope
clc
push
rcl
push
ficompl
xchg
insb
je
pop
lret
mov
xchg
scas
sub
lcall
cs
out
cmp
std
add
sti
daa
or
inc
mov
outsl
pushf
xchg
push
jle
std
sub
rclb
fnstenv
loopne
sahf
sub
rclb
push
jbe
in
scas
aam
pop
mov
push
sub
cltd
xchg
jle
jno
sbb
pop
pop
sbb
xchg
fidivrs
pop
enter
cmpsb
jle
jbe
xlat
filds
idivb
cmp
dec
cmp
cld
and
inc
xor
inc
cltd
popa
mov
and
rorb
or
sbb
or
cmp
shl
int3
sub
add
add
dec
ljmp
add
mov
aas
iret
sbb
add
int
fildl
sub
mov
push
xor
pop
mov
add
pop
add
fsubs
call
clc
cmpsl
push
sbb
call
or
mov
or
call
add
lods
jo
xor
sub
adc
adc
or
mov
lcall
push
call
fbld
jns
jge
data16
mov
test
daa
lahf
xor
cmp
mov
push
jmp
xor
and
inc
sub
insb
xor
push
mov
leave
or
out
or
mov
icebp
sbb
cltd
mov
cmp
fsubl
inc
repnz
iret
pusha
and
sbb
cmpsb
js
lcall
les
mov
add
clc
lret
hlt
add
inc
mov
mov
pop
mov
pusha
sbb
xchg
andb
cmpsl
out
in
add
and
in
bound
lds
add
or
andl
popf
movb
pop
pop
sub
mov
add
push
test
add
ja
xchg
cmpb
mov
mov
test
insl
cld
jle
sbb
xchg
mov
arpl
cli
xchg
mov
test
pop
mov
jle
inc
mov
popa
sarb
js
adc
adc
add
stos
add
lods
or
xor
fmuls
lods
mov
outsb
out
imul
in
sub
xor
outsl
mov
push
stc
movsl
sub
subb
cwtl
sbb
iret
xchg
fiaddl
out
or
sbb
in
cwtl
insl
cld
sbb
and
cmpsb
xor
ret
out
mov
inc
int
testl
ror
sub
in
loop
in
jle
xor
call
or
je
stc
test
pop
push
dec
push
push
xchg
jl
mov
pop
cmp
ja
mov
movq
pop
pop
adc
les
sub
add
or
add
jo
add
pushf
fistpl
imul
insb
rcl
add
js
pop
cmp
push
sbbb
sub
stos
jae
out
mov
stos
aam
leave
lds
sti
inc
fnstcw
pop
fstpt
mov
cmp
aam
cmp
cmp
adc
add
nop
mov
int3
stos
ret
les
dec
sub
dec
push
add
aad
add
incb
xor
cld
leave
push
xor
addr16
out
call
in
add
lea
and
inc
and
fcomps
jne
adc
push
push
sub
inc
scas
popf
rorl
inc
outsl
push
std
jo
pop
ds
xchg
jecxz
jno
xlat
adc
push
pop
push
pop
push
mull
stos
test
lods
or
pop
cltd
dec
mov
incl
mov
mov
icebp
add
icebp
push
jecxz
inc
pop
aad
mov
cli
rol
xor
mov
and
pushf
loope
test
mov
add
mov
lret
adc
cmpsl
xchg
pop
xor
mov
lret
stos
loop
cmp
lcall
sarb
in
out
lret
int
out
sub
push
outsl
add
sub
inc
mov
xor
stos
mov
xor
jmp
insl
mov
iret
push
out
imul
outsb
std
es
sbb
sbb
add
ss
xor
sbb
loope
pop
pop
push
ret
jl
sbb
mov
fidivrl
jo
bound
inc
mov
xchg
mov
sbb
addr16
nopl
mov
lret
mov
arpl
add
or
sti
jg
adc
sbb
pop
or
add
mov
fdivrl
mov
push
ss
fwait
ja
dec
outsl
imul
lcall
ret
and
mov
movsb
ror
daa
jle
lds
loop
pusha
dec
mov
jg
outsb
mov
sbb
loopne
mov
xorb
inc
vmwrite
out
hlt
xor
enter
add
call
adc
mov
adc
mov
out
out
adc
mov
jb
mov
sub
dec
mov
jmp
icebp
scas
out
jl
scas
add
cmp
dec
ss
outsl
dec
mov
out
ret
in
sub
xor
cmp
shrl
push
jge
popa
push
push
dec
xchg
mov
jno
std
jecxz
xor
out
xor
jecxz
idiv
mov
popa
mov
mov
or
sub
sti
mov
std
dec
repz
stos
dec
pop
pop
rcrb
mov
dec
and
fwait
adc
jne
leave
xchg
imul
ret
pushf
nop
in
inc
int
pop
add
sbb
call
push
mov
and
pop
stos
in
or
aas
inc
std
mov
lds
and
shlb
mov
aad
stos
or
xchg
lret
mov
jb
test
mov
aaa
ficoml
hlt
mov
pop
mov
popf
pusha
icebp
or
fwait
xchg
rcll
mov
iret
mov
mov
mov
loopne
mov
dec
subl
push
scas
out
insb
sbb
sbb
test
lahf
test
mov
xchg
testl
cmp
sarb
push
mov
lods
mov
inc
xchg
out
ljmp
out
inc
sbb
rcll
sti
nop
or
clc
repnz
and
jge
loopne
xchg
pop
pop
hlt
icebp
jmp
imul
mov
mov
arpl
push
pop
inc
inc
es
gs
xor
push
aam
jl
mov
adc
jns
fisttps
pop
pop
jmp
push
dec
add
pop
push
pop
push
xchg
movsl
pusha
pop
loopne
fs
pusha
push
xor
out
pushf
pop
loopne
stc
stc
mov
jmp
ljmp
sbb
stos
push
pop
flds
dec
mov
mov
enter
ffree
enter
xchg
jno
es
aas
lcall
lea
fcmovnu
jg
xchg
cmp
call
out
mov
inc
addb
sbb
dec
dec
mov
xor
sbbb
outsl
push
xor
push
sub
xor
cld
pushf
pop
hlt
bound
jecxz,pt
vsqrtsd
movl
pop
pop
sbb
add
pop
out
aas
jns
jbe
push
pop
sbb
mov
fcompl
add
adc
in
push
mov
mov
xor
and
rorb
and
in
dec
mov
and
out
sub
mov
pop
mov
cld
push
inc
mov
out
sbb
mov
out
xchg
mov
out
outsb
mov
mov
xor
dec
mov
inc
jmp
jnp
out
pop
cmpsl
mov
testb
leave
mov
push
push
pop
sti
sub
ret
scas
lock
mov
shl
mov
sbb
out
std
sub
stc
in
stos
mov
or
repz
fucomi
mov
or
test
inc
push
sub
sbb
cmpsl
call
leave
inc
ja
lahf
fwait
xor
inc
mov
pop
enter
ret
ret
pop
jge
mov
adc
mov
pop
inc
popf
pop
mov
cli
cmp
cmp
jge
cmpsl
repnz
sub
div
stc
scas
xor
arpl
je
xor
add
add
sbb
in
add
subb
or
jo
xchg
aas
cmp
fadds
mov
add
sbb
in
add
adc
or
add
push
cmp
outsl
mov
sbbl
add
popa
sbb
loop
leave
mov
call
dec
dec
dec
sub
cs
sbb
out
orb
jp
jbe
jge
pop
xor
adc
or
adc
add
xor
cmp
adc
into
rol
inc
mov
shll
adc
or
call
adc
les
xor
xor
adc
or
cmp
inc
pop
adc
xor
cmp
add
inc
pusha
add
loope
xor
or
fsubrs
fadds
cmp
sub
sub
lods
jbe
adc
add
mov
adc
adc
push
test
xor
divl
or
mov
push
fadds
sub
ret
mov
jae
or
sub
dec
pop
and
test
ret
rolb
popa
dec
inc
pusha
add
out
adc
ud0
add
mov
rolb
or
sub
addb
adc
mov
shl
adc
xchg
mov
xor
insb
repnz
add
loopne
or
sbb
cwtl
add
add
push
sbb
or
add
jae
xchg
popaw
dec
inc
pusha
add
out
adc
add
push
popa
shlb
mulb
arpl
push
movb
sti
test
repz
xor
adc
xchg
mov
sbb
in
xor
fimuls
mov
jne
loope
clc
xor
pop
fs
aaa
aad
scas
movsl
or
dec
ret
nopl
xchg
aad
dec
or
into
add
push
push
push
push
pop
inc
or
call
pop
pop
pop
xor
sub
popa
das
inc
das
sbbl
cmp
mov
mov
or
call
in
ljmp
jl
iret
add
iret
rcl
leave
cld
sbb
pusha
es
jge
pusha
aaa
sub
lods
pop
scas
fucomip
sbb
mov
outsb
sarb
mov
mov
lcall
mov
dec
lds
cmp
lret
mov
push
cmp
mov
arpl
sbb
test
mov
push
cmp
xor
lahf
rorl
arpl
sbb
xchg
lret
mov
sbb
out
ja
ljmp
adc
inc
cs
push
aam
xor
out
gs
ret
jne
subb
loope
mov
pusha
sub
sti
es
xor
pop
jns
pop
inc
in
jns
jge
mov
mov
loop
or
rcrl
lock
xchg
jae
ds
lods
jo
mov
xchg
loope
pop
cmp
jne
aad
popa
std
fildll
adc
add
sub
inc
insb
jne,pt
loopne
jae
arpl
jle
xor
inc
push
pop
push
push
push
sahf
and
xor
shrl
push
mov
mov
das
mov
insl
xor
lods
inc
sti
loope
mov
xchg
pop
in
push
inc
jmp
xchg
sub
scas
mov
pop
arpl
negl
inc
loope
cli
xchg
push
bound
inc
adc
call
and
je
aad
jbe
bound
or
loopne
lock
es
and
movsl
mov
addl
jnp
xchg
movsl
push
ret
pusha
inc
scas
cli
jle
in
sbb
fs
stc
mov
insb
push
sub
pop
js
pop
jmp
add
sti
xchg
push
xor
lods
popa
popa
ja
mov
xor
fdivrl
stos
xchg
and
cwtl
mov
add
out
out
sbb
pop
in
addl
sub
lods
mov
pop
cmp
outsl
jns
in
popa
loope
add
pop
fdivl
sbb
ret
dec
insb
js
inc
xchg
lahf
ror
ljmp
sbb
lret
push
xchg
or
rol
xor
sub
cmp
pop
clc
int3
lds
rol
sbb
loopne
bound
or
enter
dec
mov
clc
std
push
add
cmp
or
add
xor
add
out
cltd
lret
sub
sar
dec
pop
pop
xor
test
mov
orb
mov
loope
call
fcomps
rolb
or
jecxz
ror
xrelease
or
int3
lods
insl
pop
ret
jo
sub
pop
cli
cmpsl
lock
mov
sbb
jle
mov
insb
pop
call
push
inc
pop
inc
scas
push
dec
pop
movsb
inc
dec
inc
dec
mov
nop
xor
xchg
out
shlb
cwtl
pop
dec
sbb
shll
mov
cmp
neg
loope
mov
call
fdiv
repnz
loopne
xchg
sub
ret
testl
scas
out
push
cli
lods
pushf
push
out
sbb
jecxz
es
lock
xor
sbb
mov
pop
sbb
mov
or
cmp
scas
dec
push
sbb
shrd
in
sahf
cmpsl
jg
inc
sub
icebp
xor
cmpsl
push
inc
inc
cld
leave
int3
pop
sub
mov
in
pop
xchg
stos
mov
jecxz
out
sub
outsl
sub
ret
ja
jnp
mov
hlt
mov
fdivrs
fbld
inc
fnstsw
add
xor
mov
iret
cld
cs
jle
push
cmpsl
call
shlb
cld
push
es
jne
cmp
mov
mov
cmp
lcall
repnz
fwait
pop
test
mov
lods
int3
mov
fmuls
cmpsl
stos
movsl
popa
sub
xor
lret
dec
and
sub
mov
insl
popaw
loop
mov
adc
xchg
out
inc
popf
adc
cmpsb
push
inc
add
mov
cmp
aas
nop
mov
sarb
popf
xchg
and
and
addr16
mov
jno
call
cli
xor
dec
ds
cmpl
sub
stc
cli
les
cli
push
or
fnstcw
repz
ds
sub
add
lock
jne
or
and
call
xor
or
cld
cmp
int3
add
dec
dec
sbb
fstps
cld
ss
imul
decb
or
lret
jmp
cld
xor
imul
lods
nop
test
xchg
inc
test
push
iret
push
std
jge
repz
lds
in
loope
fwait
pop
cwtl
push
sarb
int
pusha
popf
rorl
js
imul
adc
jg
pusha
dec
leave
lret
lcall
adcb
mov
mov
inc
xor
sub
loope
inc
int
sbbb
icebp
mov
cmpsl
pop
mov
jge
jecxz
xchg
or
loope
stc
xlat
push
loope
mov
out
loop
mov
sarb
push
mov
loop
in
pop
in
rcr
in
or
ja
mov
jp
faddp
lds
mov
sbb
pop
out
push
xor
jmp
jg
cmp
xchg
pop
sbb
loopne
inc
ja
fcompl
jb
out
xor
shlb
inc
and
cli
and
dec
jae
lcall
push
ret
lcall
mov
js
push
in
fmuls
mov
cltd
enter
xchg
mov
add
inc
and
subl
lret
stc
pop
xor
push
and
repnz
sbb
ds
test
cmp
shll
push
ss
mov
mov
insl
add
shlb
subl
cmp
mov
push
inc
ljmp
or
or
xrelease
xchg
add
pop
stc
add
mov
test
out
movsl
call
in
cmpl
push
dec
add
hlt
sahf
orl
inc
repnz
push
pop
es
push
nop
pop
sbb
rclb
push
add
outsb
lea
pop
es
fcoms
add
jp
mov
sbb
in
mov
dec
sbb
dec
inc
add
push
mov
add
fstpt
leave
ret
add
push
stc
loop
push
imul
inc
xchg
inc
aas
sbb
subb
test
es
xor
jmp
icebp
adc
popl
out
push
pop
ret
sub
mov
adc
ds
stos
adc
push
inc
or
jnp
mov
xchg
aad
or
mov
inc
repnz
or
cmc
inc
pop
and
and
xor
ja
mov
lock
cmpsl
stos
and
pop
lahf
aad
call
or
or
loopne
aad
pushf
mov
and
test
inc
dec
shrl
jnp
pushf
dec
jg
push
xor
roll
push
mov
bound
sub
pop
hlt
jmp
jnp
xchg
int
jge
sub
cmc
ret
aam
mov
xor
xor
push
jb
xor
fsts
pop
stos
mov
cmpl
jge
jg
lea
xor
jns
jns
xchg
cmpsl
jb
jge
mov
sub
adc
inc
sbb
xchg
pop
call
in
sub
or
inc
ljmp
jecxz
mov
add
pusha
mov
sbb
xchg
inc
cs
popf
fcmovne
rcl
mov
sahf
je
or
xchg
cmpsl
push
test
test
rorb
inc
push
lahf
pop
outsb
push
inc
mov
es
and
pop
aaa
sarl
inc
pop
stc
or
sbb
in
jp
push
movsl
mov
cld
mov
cltd
adc
in
and
scas
mov
mov
pop
shl
jle
pop
insb
cmp
shr
outsb
lret
sub
inc
fisubrl
jl
in
push
je
push
xchg
pop
or
inc
sarb
pminub
inc
inc
sbb
and
xchg
push
out
sub
outsl
out
in
leave
xchg
pushf
rcr
mov
cmpsl
icebp
stc
mov
mov
std
mov
ljmp
mov
and
push
mov
ss
aad
sub
sbb
xor
pop
push
mov
adc
add
inc
out
fwait
add
icebp
jg
add
scas
ret
iret
dec
add
push
std
pushf
fiadds
and
test
jbe
add
mov
lahf
xchg
dec
jo
pop
cmp
sar
push
ret
fdivrs
mov
dec
filds
xchg
inc
stos
movsb
pop
adc
push
sub
or
ret
jp
jle
xlat
ficoms
shlb
push
pop
and
add
and
push
lods
mov
adc
sbb
and
jle
dec
adc
push
adc
arpl
outsb
outsl
fs
add
sbb
xchg
scas
in
decl
in
andb
push
ja
adc
or
fwait
jge
out
add
cmp
out
mov
mov
xchg
or
out
mov
dec
repz
jo
popf
cltd
aam
jge
sub
mov
mov
push
inc
fld
fdivrs
sahf
cmpsl
ljmp
xchg
jno
mov
sbb
jmp
mov
mov
movq
push
sub
cmc
jne
cmc
pop
stos
fistps
and
jne
rorb
mov
xor
xchg
fisubrl
jge
cwtl
mov
mov
mov
mov
cmpsb
rol
adc
mov
divb
jns
xchg
mov
or
shrb
call
mov
movsl
divb
andb
fnstsw
jge
adc
jge
pop
pop
mov
scas
mov
mov
jl
mov
dec
scas
push
je
int
in
push
aad
mov
sbb
cld
test
add
sbb
dec
dec
xor
pop
push
pusha
mov
adc
cltd
divb
dec
or
fidivrl
inc
fdivl
sbb
out
add
push
and
push
test
mov
movsb
cltd
pusha
pop
das
imul
cmp
shr
cmc
lret
jg
in
ret
mov
xadd
ret
out
scas
mov
pop
or
scas
cld
cmp
jnp
pushf
or
gs
je
inc
mov
loop
mov
jp
sar
fld
loopne
mov
test
mov
adc
ret
ret
daa
adc
mov
iret
insl
sbb
insb
sarl
lret
icebp
shrl
cmc
gs
pop
push
notl
sbb
cld
pushf
sbb
cmp
or
shr
scas
rol
pop
stc
lcall
lahf
imull
xchg
push
dec
and
push
mov
xlat
imull
pop
faddl
arpl
xchg
push
js
push
imul
cld
sbb
data16
mov
idivb
sarl
out
fadds
leave
push
mov
push
inc
incb
mull
enter
push
outsb
in
ret
adc
mov
out
cmp
cmc
jne
sub
push
mov
mov
scas
movsb
negl
xor
inc
rol
xorb
fwait
aaa
mov
adc
lds
int3
mov
sub
jns
inc
push
sub
movl
pop
jns
out
push
aam
inc
aam
loop
je
shll
loop
fprem1
inc
xlat
shrl
addb
aam
ss
lcall
les
push
jmp
inc
jl
cld
scas
test
mov
or
lret
fwait
out
sbb
jno
cmp
bound
xchg
test
pusha
xchg
pop
push
cmp
ja
pushf
repz
push
sub
pop
je
pop
pop
enter
pushf
test
xlat
ljmp
xchg
fwait
jne
pop
jb
stc
mov
push
push
pop
jecxz
data16
jbe
push
fldl
jae
fistpl
push
jno
popa
imulb
pushw
xor
xor
pop
sbb
decl
sbb
out
or
sub
pop
xchg
fs
xor
insl
mov
mov
push
push
lods
fucomi
jle
sub
int3
lret
loopne
xor
nop
lds
add
push
cmc
addps
sbb
mov
rcl
or
jge
lahf
sub
mov
mov
andb
cmp
mov
dec
out
ljmp
stos
sub
pop
jmp
in
mov
xchg
popf
fwait
arpl
mov
xor
xchg
btcl
mov
lods
mov
mov
fstl
hlt
push
or
mov
mov
cli
shrb
xchg
ljmp
dec
ja
push
jg
loopne
bound
push
int
sbb
je
jns
add
ljmp
mov
cli
repnz
jmp
jno
add
xchg
int3
push
outsb
cltd
into
je
mov
fisttpll
jl
pop
mov
cli
clc
ret
mov
daa
popa
adc
mov
fstl
jb
popf
mov
fstsw
adc
lea
mov
filds
or
push
mov
sub
dec
idivl
bound
jge
xchg
call
sub
push
lods
stos
pop
call
dec
pusha
fadd
out
push
xchg
nop
loopne
mov
add
loope
pop
clc
xor
dec
jecxz
outsl
push
mov
ljmp
fwait
xchg
cmp
cmp
sub
pop
aas
outsl
sbb
xchg
xor
push
lods
xorb
or
outsb
push
in
adc
sti
lods
push
stos
aaa
sbb
in
mov
xlat
ljmp
sahf
mov
adc
stc
outsb
jmp
jecxz
in
xchg
in
xor
push
adc
arpl
mov
xor
jno
sub
fldenv
inc
mov
mov
jb
jbe
lock
inc
outsb
stos
nop
push
leave
insb
leave
lret
outsl
popf
xchg
sub
cmpsb
push
fsubrs
mov
outsb
push
adc
stos
rcrb
xchg
or
mov
loope
outsl
mov
dec
xchg
xchg
ds
hlt
mov
cmc
xchg
outsb
out
xchg
push
call
jecxz
ret
inc
mov
dec
pop
dec
mov
ja
clc
js
je
lret
dec
mov
icebp
xchg
ret
pop
ljmp
mov
fnsave
pusha
inc
mov
cli
push
clc
or
fmull
fistps
jmp
les
daa
push
bound
mov
mov
cs
pop
sti
add
repz
stos
push
pop
sbb
dec
inc
jp
enter
andb
imul
int
xor
xor
mov
xor
inc
test
jecxz
ffreep
cmpsb
fwait
call
pop
push
in
outsb
jmp
push
lahf
in
jg
or
dec
imul
inc
add
jne
jno
push
mov
pop
mov
lret
dec
ljmp
push
lods
rcll
ljmp
dec
loop
mov
aas
add
test
jg
mov
loopne
inc
jbe
out
xchg
les
stos
mov
cmp
stc
outsb
inc
loope
daa
mov
stc
incl
or
mov
xchg
cmc
or
pushf
xor
insl
xor
dec
fistl
out
cmp
scas
clc
or
in
or
orl
sub
mov
jnp
divb
rorb
iret
xor
pop
mov
cld
hlt
test
add
aam
xor
inc
imul
xchg
arpl
xor
sar
dec
aam
xor
shll
sbb
xor
rorb
add
sbb
adc
hlt
dec
xchg
in
dec
fsubrl
cmp
dec
dec
pop
jo
js
pusha
dec
cwtl
mov
test
cwtl
dec
in
cld
xor
rcr
movsb
cmp
push
and
dec
pop
andl
insb
lcall
andl
clc
lcall
inc
cmpsb
push
js
pusha
fs
sahf
xchg
mov
xchg
xor
shl
dec
call
cmp
pop
xor
sarl
adc
shll
dec
sbb
jmp
cld
imul
mov
push
lcall
lcall
lcall
dec
xor
and
adc
je
xor
rcll
xor
fsubrs
fadd
in
rol
dec
fcom
xor
shrl
leave
mov
mov
rcrb
cmp
sub
cmpsb
or
lcall
dec
shlb
loopne
cwtl
mov
mov
js
mov
insb
mov
inc
mov
fdivl
shl
dec
call
add
xor
shll
pop
xor
rcr
dec
aam
xor
shl
dec
mov
fs
lcall
lcall
lcall
lcall
lcall
dec
fsubr
xor
rorl
test
mov
dec
inc
inc
xor
shrl
leave
add
sbb
lcall
lcall
lcall
lcall
dec
pop
dec
xor
rcll
shl
dec
in
fdivl
sarl
jo
mov
or
lcall
lcall
lcall
or
cmp
cltd
in
and
ror
dec
ror
mov
test
mov
mov
mov
mov
cld
xor
rcr
and
ds
sub
adc
imul
fsubrl
cmpsb
clc
aam
fsubrs
cmpsb
orb
dec
dec
ror
rcl
call
adc
or
adc
sarl
pop
xor
leave
mov
lcall
lcall
lcall
cltd
lock
and
shll
rorl
jl
xor
sbb
test
xor
rcr
dec
lods
mov
push
cmpsb
je
andl
cmp
or
sbb
in
cld
lcall
lcall
dec
xchg
dec
in
cld
xor
rcr
dec
xor
xor
rcrl
rcll
dec
cmp
xor
enter
enter
imul
cwtl
test
int3
imul
sbb
and
sarl
dec
add
xor
sarl
pop
xor
rol
dec
enter
shl
dec
call
test
jp
pusha
imul
imul
or
sbb
or
lcall
sarl
push
pop
xor
leave
mov
fdivs
sar
dec
in
pushf
xor
shll
dec
roll
xor
shll
dec
in
xor
leave
add
es
lcall
lcall
lcall
lcall
lcall
dec
js
xor
shrl
cmp
push
dec
add
xor
shll
rorl
inc
xor
rcll
mov
imul
mov
inc
cmpsb
dec
push
lcall
adc
adc
shrl
dec
and
roll
push
xor
shll
lock
dec
mov
dec
dec
es
jo
push
cmp
hlt
loopne
fsubrl
cmpsb
cmp
lcall
dec
test
dec
loopne
xor
rcr
dec
int3
cmp
sub
pusha
dec
je
xor
rorl
dec
cmp
xor
decb
cmpsb
int3
rcrb
nop
mov
xchg
xchg
lcall
lcall
dec
xor
xor
shll
push
in
icebp
xchg
test
mov
repz
xor
cmp
mov
xlat
daa
sbb
mov
lret
mov
mov
cmpb
sub
cmp
addl
mov
loope
add
pop
or
jns
arpl
arpl
pop
push
shlb
mov
gs
in
int
or
push
jg
cltd
popa
jo
cwtl
pop
mov
xor
dec
sti
daa
daa
lods
jg
fmul
popa
push
cmpsb
inc
mov
mov
push
xchg
arpl
test
test
loope
clc
cmpsl
adc
leave
push
cmc
xor
js
clc
mov
insl
notl
xor
jbe
mov
lds
stos
cmp
pop
ja
ss
aaa
push
int
dec
sub
imul
mov
pop
scas
cltd
cmc
rep
andl
cmp
repnz
jmp
call
mov
rcr
ffree
les
fcmove
leave
ror
lds
cmp
cmp
sub
pop
fnstcw
js
es
outsl
cmp
pop
out
and
adc
push
jb
arpl
jg
dec
inc
gs
es
mov
inc
das
insb
stos
pop
jnp
femms
ss
xor
into
fdivrl
insb
jecxz,pt
fadd
ret
push
sbb
sub
das
or
in
mov
popa
mull
iret
jp
sub
int
cmp
mov
mov
aam
ljmp
mov
sahf
movsb
cmp
xor
inc
add
jns
popa
jb
sbb
ret
add
out
out
xor
mov
mov
push
lahf
jp
jp
xor
nop
into
push
lods
xchg
int3
mov
mov
xchg
std
in
out
pop
sub
mov
imul
mov
ss
aam
push
xchg
popa
jp
cmpsl
iret
jg
outsl
sub
adc
xor
pop
push
adc
fcomps
mov
and
sub
push
popa
pusha
jo
jbe
insb
mov
popa
imul
dec
xor
sti
ss
jb
js
pop
lock
lea
mov
subb
shll
jo
push
es
fdivl
leave
iret
mov
xor
mov
inc
inc
outsb
push
jno
bound
jl
mov
add
xchg
push
mov
fs
pop
pushw
test
insb
outsl
cmp
xlat
or
mov
inc
adc
lea
stos
mov
insb
lret
int
ret
ret
adc
mov
call
std
leave
push
pop
popa
xchg
and
xor
leave
cs
sbb
mov
xchg
sub
fs
sbb
dec
cmp
insb
addr16
andl
bound
adc
pop
lods
orl
mov
xchg
push
ja
or
adc
push
fwait
xchg
xchg
nop
push
addr16
xchg
call
lret
dec
ret
mov
pop
int3
int3
jl
pop
cwtl
enter
in
push
add
out
data16
mov
or
sub
cmp
mov
scas
popf
stos
and
jb
and
imul
mov
sbb
test
repz
cwtl
inc
jo
pushf
inc
jecxz
pop
push
cmp
rol
ret
push
mov
lea
aas
pushf
cmp
sub
arpl
inc
andl
rcrb
push
pushw
mov
jge
mov
jo
pop
inc
out
push
pop
push
push
xor
jg
stos
dec
sbb
orb
jne
rclb
pushf
fs
sti
xor
mov
sti
jg
movsb
mov
xor
repnz
dec
cmpsb
popa
loop
pop
mov
xor
cmp
gs
xor
sbb
mov
aam
pushw
pop
pop
sbb
push
icebp
xchg
js
lds
xor
and
loop
inc
icebp
dec
jnp
pop
dec
movsb
leave
mov
fcomps
pop
cmp
in
mov
cmpsb
sbbl
pop
cmp
icebp
fucomi
mov
push
fcoms
fcomps
leave
add
fidivl
xchg
and
xchg
add
lret
sti
xor
arpl
fnstsw
notl
adc
adc
gs
inc
xchg
push
inc
jb
mov
int3
ret
xchg
push
xchg
out
mov
outsl
insl
scas
inc
add
clc
xchg
movsb
shll
push
ret
decb
int3
and
pop
jbe
loope
sub
test
out
pop
jae
pop
adc
cmp
push
and
sahf
movsl
inc
xor
out
scas
or
in
push
arpl
lock
jo
xchg
xchg
arpl
cwtl
test
jmp
sub
sbb
je
push
pop
in
adc
cwtl
add
dec
mov
xchg
daa
pop
loope
test
pop
xor
jnp
sbb
sbb
pop
jb
ss
cmc
pop
dec
bound
outsb
out
adc
pop
mov
sbb
mov
dec
push
mov
sub
in
test
xor
xlat
lods
fs
add
in
stc
out
inc
sbb
cltd
daa
mov
xor
or
rcll
add
push
faddl
aad
sarb
push
div
sub
xor
push
rclb
dec
call
mov
pop
inc
adc
push
pop
xchg
cltd
pop
or
inc
dec
mov
mov
call
xor
inc
fistps
mov
gs
mov
dec
bound
cwtl
faddl
fsubs
popa
jle
sbb
push
push
jno
je
std
shrl
adc
adc
jbe
jg
sub
pop
inc
cli
dec
addr16
scas
lock
mov
loope
mov
test
dec
ja
rclb
xor
enter
sbb
test
ret
mov
and
dec
lock
mov
cmpsb
into
rcr
mov
push
mov
stos
insb
sbb
stos
jne
or
mov
pop
push
lea
xlat
insl
fcom
push
andl
arpl
cmp
lods
push
mov
mov
adc
popw
outsb
out
cmpsl
push
stos
or
or
mov
loope
in
mov
test
pop
cmp
inc
mov
xor
fdivl
xor
cmp
int3
cmp
jns
cmp
stos
int3
push
imul
dec
cmp
dec
mov
lock
pop
inc
xchg
push
push
inc
push
ss
insb
mov
mov
rcll
nop
xchg
cwtl
jl
mov
cwtl
jl
cmpsl
mov
mov
int
call
out
int3
fbld
push
rcl
pushw
fwait
ret
aad
sbb
ss
and
dec
or
or
jg
dec
pop
outsl
bound
xor
jg
bound
pop
mov
xor
jmp
xor
jge
int3
cs
roll
addr16
jmp
lods
out
cli
fdivrl
enter
xor
daa
outsl
inc
popa
out
out
xchg
lret
dec
pop
adc
stos
pop
xor
xor
sbb
push
cmpsb
push
or
in
jl
pusha
out
jecxz
jnp
jg
lea
mul
add
mov
mov
jo
mov
jp
add
jmp
lds
ss
push
int
fcomps
jnp
into
sahf
ss
jle
shrb
jo
cmp
mov
adc
cltd
xchg
lahf
dec
add
mov
pop
pop
les
xchg
ret
ret
or
notl
ds
sub
sub
movsl
lock
jne
xchg
popf
xchg
in
mov
scas
lods
mov
fsubrl
mov
enter
push
inc
xor
ret
push
not
test
cmpsl
and
mov
movsb
daa
loop
test
in
dec
test
out
adc
xchg
push
out
xor
mov
dec
lods
xor
cwtl
pop
hlt
jbe
push
loop
pop
xor
sub
shll
je
pop
cmpsb
dec
testl
sbb
aam
repnz
xor
jno
fsubs
int3
sub
or
xor
int3
ret
push
push
mov
lods
mulb
sbb
add
sub
ret
cld
lods
push
std
pop
ret
or
aam
sahf
xor
dec
jb
mov
sbb
enter
sub
popa
imul
or
cltd
test
or
push
call
insb
popa
inc
mov
xchg
push
dec
mul
es
stos
inc
jecxz
mov
mov
outsl
loopne
out
push
cmp
push
int3
cs
push
sub
sub
xor
loop
incb
fnsave
xor
jno
ret
outsl
and
rorb
inc
popa
jno
and
int3
das
jbe
xor
into
bound
push
jle
mov
push
rolb
mov
xchg
mov
js
loopne
xor
rol
jg
lcall
pop
ljmp
jnp
xchg
pop
movsl
push
pusha
cwtl
pop
pop
mov
not
push
cmp
xchg
pop
jbe
sub
jb
dec
outsb
insb
jno
xor
xor
xchg
mov
mov
les
cmp
lret
cwtl
es
add
sbb
pop
loope
cs
sub
or
pop
fisubrl
mov
lds
data16
mov
sub
inc
ret
daa
sbb
stc
aas
ret
into
stc
dec
icebp
shll
icebp
sbb
xchg
mov
and
jae
mov
inc
inc
lret
pop
inc
push
ss
and
nop
pop
lret
in
xchg
daa
ljmp
push
mov
loope
pushf
sahf
es
pop
and
ja
leave
rcl
mov
popa
in
xchg
adc
pop
fadds
jmp
ja
ret
int3
outsl
mov
insl
test
jl
pushf
dec
push
insb
int3
jae
lods
push
mov
and
or
push
scas
cmp
mov
xchg
mov
pop
mov
in
popaw
lock
es
jne
mov
ret
lds
mov
outsl
iret
jl
hlt
mov
ja
xchg
fs
test
insl
out
jmp
test
insb
sub
cmpsl
stos
das
jo
sbb
shlb
insl
xchg
es
ss
bound
fwait
pushf
lret
xchg
cs
fmull
cmp
push
scas
ja
ret
aad
call
lcall
outsl
hlt
ret
xor
cwtl
in
cmp
lret
mov
sbb
cld
sbb
jbe
or
jg
fs
mov
xchg
enter
out
das
or
inc
ret
inc
outsb
mov
inc
popaw
lcall
xchg
or
test
xchg
lods
pop
pop
cli
and
cwtl
pop
mov
int3
in
fisubrs
int3
bound
cmp
in
cmp
sub
insb
out
push
push
adc
in
mov
js
jp
stos
jb
and
mov
push
dec
pop
cmp
mov
bound
and
addr16
lods
sar
xchg
cwtl
imul
popa
pop
and
mov
xchg
jae
mov
mov
mov
call
mov
pushl
push
loop
js
xchg
sub
jbe
pop
xor
sub
xchg
loop
loop
mov
mov
hlt
int3
cs
std
cmp
stc
lahf
mov
cmc
and
cs
mov
in
xor
lret
cli
xor
sti
mov
mov
pusha
cmpsl
jnp
cwtl
jnp
jno
inc
push
dec
add
cmp
into
push
push
mov
xor
lods
dec
out
sbb
movq
mov
sub
push
ret
xchg
dec
mov
mov
mov
fildl
or
and
pop
push
inc
popf
pop
fcomp
push
push
lea
es
sbb
jmp
sub
rcrb
adc
jno
stos
or
xchg
repz
in
pop
adc
mov
rorb
adc
scas
fcompl
mov
adc
stos
sub
iret
add
jcxz
pop
hlt
and
loope
adcl
mov
aaa
sub
movsl
cwtl
test
cs
int
mov
mov
push
push
out
pop
test
or
iret
lds
roll
jg
inc
mov
scas
mov
dec
notb
das
push
jmp
xor
push
in
aaa
enter
add
and
sbb
pop
mov
push
add
in
scas
mov
mov
mov
cltd
lahf
filds
sbb
rcrl
xorl
mov
cmpsb
pop
mov
in
jg
sbb
mov
test
aad
mov
idivl
mov
rol
call
mov
add
cmp
sbb
lcall
pop
iret
pop
xlat
addr16
xlat
cmp
ret
xorl
and
jge
push
xor
push
cmp
cmp
pop
in
dec
xorl
hlt
adc
iret
xor
popl
fs
nop
cmp
dec
jge
xchg
out
insl
mov
cmp
daa
xorl
mov
das
and
lret
push
fstpt
repnz
out
mov
or
and
in
mov
and
cmpsb
pop
jl
xorl
and
ja
mov
jecxz
jge
sbb
mov
cmp
test
iret
pop
fs
sbb
insb
fsts
fs
in
xchg
bound
enter
jecxz
scas
xorl
and
add
sarb
and
in
xchg
xorl
and
push
enter
or
stc
daa
pop
rcrb
out
mov
fs
nop
pop
jbe
dec
fldenv
sbb
pop
pop
fs
sbb
ret
fprem1
pop
fs
sbb
repz
mov
mov
rorl
pop
fs
popf
xchg
pop
jge
mov
in
sub
adc
jbe
das
pop
imul
mov
movl
pop
pop
mov
push
pop
bnd
sahf
gs
into
push
mov
lret
inc
mov
pop
jnp
into
sub
fisttpll
xor
movsl
push
inc
stos
leave
call
pop
out
pop
sti
mov
xor
mov
mov
pop
and
push
mov
aas
push
or
out
pop
dec
cmc
sub
xchg
mov
jg,pn
jnp
mov
xchg
mov
stos
loopne
mov
push
pop
adc
dec
out
cs
decl
shrb
out
cmp
push
sub
js
test
and
mov
mov
sete
je
hlt
or
mov
fs
sbb
or
fdivrs
mov
cmp
mov
dec
aas
icebp
arpl
or
movsl
jnp
sbb
outsb
das
divl
pop
pop
cwtl
fwait
adc
add
mov
jae
sbb
out
mov
xchg
pop
adc
rol
dec
sti
or
xorl
jle
pop
sbb
mov
dec
push
pop
inc
push
roll
xor
jae
stos
data16
inc
arpl
xor
in
add
rcr
rolb
mov
jmp
je
mov
cmp
or
add
mov
stc
inc
xchg
mov
loop
in
cld
aam
mov
sarl
sbb
lods
je
iret
xchg
and
outsb
pop
lcall
mov
jb
mov
fstpt
jle
push
xor
cmc
mov
pop
ja
inc
sbb
dec
dec
ljmp
out
int
cmp
xor
mov
loop
pandn
icebp
adc
test
stos
cld
mov
sub
mov
cs
xor
xchg
mov
pushf
push
iret
add
xchg
fcoms
stc
js
sahf
cs
mov
or
mov
out
xor
ljmp
shll
xchg
sub
jns
pop
push
push
dec
mov
jne
xor
insl
push
fcoml
dec
mov
mov
aas
jne
mov
ljmp
stc
xchg
adc
jge
cwtl
aad
sbb
movl
stos
pop
stos
out
rcr
in
xor
into
test
mov
cld
jns
pop
xor
addr16
mov
jmp
push
iret
or
scas
stos
addr16
pusha
xlat
scas
rcll
scas
cmpsb
xor
and
cmpsl
adc
push
bound
xor
test
outsb
push
aaa
pop
mov
out
jecxz
adc
jp
gs
das
xchg
pop
hlt
popf
loopne
sub
and
and
and
sub
outsl
sub
ljmp
outsl
outsl
outsl
outsl
outsl
outsl
push
outsl
ljmp
adc
popl
push
mov
call
xlat
cwtl
fildll
inc
jmp
mov
cmc
repz
xchg
ficompl
add
addl
mov
aaa
lret
ljmp
xchg
fiaddl
iret
cmc
jmp
loop
repz
mov
or
xchg
sub
dec
rcll
push
or
stc
cmp
inc
andb
and
rolb
es
dec
inc
shll
insb
inc
incl
xchg
add
or
fiaddl
pusha
xor
insb
cs
cmpsb
dec
and
add
mov
xchg
pushf
jmp
jp
icebp
fsubrp
cld
nop
dec
fcompl
xor
in
in
insb
in
outsb
mov
sub
jne
or
stc
mov
mov
loop
dec
test
push
add
xor
roll
dec
xor
shll
xor
in
sar
dec
lock
xchg
sbb
xchg
or
add
xor
rcll
dec
push
push
pusha
pusha
jb
imul
lock
sub
sub
out
pop
es
sbb
sub
sbb
jmp
jae
outsl
fsub
pop
cmp
sub
sbb
dec
sbb
push
push
dec
and
cmp
rorb
es
lcall
lcall
jnp
pop
cwtl
fs
lcall
jg
fdivrs
lahf
xchg
cmpsl
in
test
pusha
mov
mov
mov
imul
test
pushl
leave
mov
push
dec
dec
pop
pop
xor
rorl
mov
enter
xor
sar
dec
int3
shlb
rcl
bound
es
lcall
lcall
shrl
and
push
dec
xor
xor
rorl
clc
and
shl
rcll
dec
adc
cmp
and
and
aas
xor
jo
je
in
rorl
mov
xor
std
pop
pusha
in
xor
out
pop
loopne
nop
pop
mov
cmp
shl
rorl
adc
and
pusha
mov
lods
mov
lods
in
jl
xor
icebp
aad
mov
sbb
dec
mov
ret
leave
jnp
std
pop
sub
jp
addr16
call
fnsave
hlt
ja
jl
cld
and
or
cmpsb
out
xor
xlat
movsl
aaa
push
sbb
and
shrb
jl
mov
pop
rcr
movsl
stos
inc
sub
xor
mov
insl
or
or
add
cmpsl
icebp
dec
dec
shrl
jbe
pop
call
xchg
fstl
clc
cmpsb
push
pushw
xor
ds
mov
mov
xchg
adc
or
stos
mov
sbb
mov
mov
cmp
test
out
jmp
bound
push
stos
lds
pop
inc
insl
xchg
mov
mov
call
fstps
jnp
das
fsubl
jo
outsl
mov
add
mov
jnp
mov
ret
push
lods
lea
sbb
outsl
loop
inc
insl
and
popf
insb
jg
xchg
ficoml
cmp
fnop
sub
imul
inc
in
cli
loopne
cmc
jmp
aad
int
aas
xchg
xor
xor
jb
dec
dec
lahf
mov
es
jne
gs
fidivrl
ret
add
cld
cs
xchg
jecxz
les
aaa
mov
std
push
mov
popa
cld
dec
mov
lahf
lret
xchg
adc
mov
aad
mov
rcl
mov
add
pop
arpl
xlat
pop
into
pop
cmp
andl
enter
add
mov
adc
lds
icebp
dec
sbb
cmp
pop
dec
jl
push
shr
fdivrs
adc
pop
fdivrs
xchg
lea
inc
outsl
xlat
dec
imul
loopne
or
popf
addl
mov
cmc
jne
mov
fwait
mov
cmc
or
sbb
cltd
jle
mov
scas
stc
xor
sbb
or
gs
mov
je
cs
jnp
outsl
pop
fdivp
into
dec
xlat
enter
or
or
popf
addl
popa
fdivr
mov
mov
jae,pn
pop
inc
repnz
or
lcall
data16
jnp
lds
je
mov
lahf
inc
bound
mov
into
add
frstor
ret
into
inc
out
loope
xor
mov
jle
cmp
xchg
aaa
and
pop
enter
push
xchg
mov
dec
and
movl
dec
push
rorb
dec
fwait
js
xchg
js
dec
pushf
in
dec
mov
jne
pop
subl
jle
enter
push
push
push
ret
adc
xor
jnp
ja
js
push
pop
incl
or
cmp
jp
sbb
nop
mov
mov
gs
pop
sarb
mov
mov
and
xchg
cmp
call
enter
mov
repz
pop
jge
cmp
fists
ja
loope
push
push
fcmovb
lcall
cltd
sub
lahf
push
mov
and
inc
xchg
jge
adc
cmp
int
mov
ljmp
adc
mov
jbe
mov
imul
fld
push
pop
sbb
xchg
push
js
je
dec
inc
pop
insb
mov
mov
sub
push
jmp
ljmp
call
lret
mov
cli
iret
sub
mov
int3
jo
scas
sbb
ror
bound
cmp
mov
aam
std
lods
add
mov
leave
sub
mov
push
imulb
imul
repnz
mov
inc
mov
cmp
push
mov
test
ret
fimuls
clc
jp
jno
pop
push
pop
push
iret
fs
mov
dec
cmpsb
cmc
sbb
js
add
cwtl
mov
sbb
dec
adc
sbb
dec
xchg
jnp
dec
pop
inc
pop
mov
jns
inc
xchg
sub
out
bnd
jge
xchg
fldln2
mov
push
pop
push
adc
or
shlb
jl
xor
adc
dec
scas
lock
shrl
jecxz
repnz
dec
lcall
pop
sbb
cli
in
in
dec
call
rcll
jmp
pop
mov
cwtl
mov
mov
enter
rclb
jae
jo
inc
inc
clc
xor
add
outsb
add
mov
add
mov
mov
cmovp
pop
push
inc
or
ret
xor
mov
xor
mov
inc
clc
sub
jge
cmp
ret
out
mov
pop
adc
clc
sbb
or
lret
ret
hlt
clc
adc
shlb
test
mov
cmp
pusha
push
mov
pop
dec
push
movsl
dec
mov
mov
or
push
adc
sbb
addr16
mov
mov
scas
imul
cmp
ljmp
out
jle
cld
push
iret
jmp
loop
or
nop
in
fsubrp
mov
jo
mov
adc
filds
mov
pop
inc
ja
ja
js
push
rcr
xchg
mov
out
lods
jno
sub
cli
cmp
xor
jle
mov
je
loop
mov
enter
jge
out
bound
cmp
test
pop
and
js
push
loopne
imul
adc
pop
lock
sti
and
dec
pop
dec
cmp
sub
imul
xchg
pop
or
jge
call
leave
shll
je
rol
lds
notl
cmpsb
rcr
das
loope
ds
xlat
int
pop
jns
aad
out
in
push
push
lds
xchg
push
sti
pop
xchg
push
mov
pusha
out
es
push
cmpsb
jb
rcrl
in
fcmovb
das
pusha
sub
pop
xor
inc
add
cmp
pop
adc
push
jno
sbb
popa
jne
fidivrl
and
jns
dec
jns
cli
mov
dec
cmc
bound
pushl
stos
xchg
popf
add
and
andl
adc
jl
addr16
outsl
mov
xor
pop
cmp
imul
add
xchg
aam
out
sbb
scas
mov
add
lods
out
mov
mov
jb
ss
adc
jg
sahf
mov
or
adc
adc
push
lods
cld
scas
gs
test
pop
stc
lock
fidivrl
jg
std
movsl
lea
jl
lea
fidivrl
push
mov
addl
dec
jns
jne
mov
push
lcall
sbb
gs
pop
push
lea
movl
roll
lret
into
in
int3
jp
mov
sahf
inc
stc
or
in
pop
mov
add
mov
jnp
mov
clc
and
pop
mov
icebp
dec
mov
push
xchg
mov
dec
xchg
into
or
cwtl
mov
lock
insl
outsb
mull
xchg
aad
cmpl
inc
mov
ficoml
and
pop
sub
and
inc
call
ljmp
mov
loopne
push
jb
cmp
sub
lea
lret
shrl
nop
mov
popa
cli
adc
movb
or
in
stc
mov
adc
adc
jno
xchg
int3
inc
shrb
insb
dec
pop
dec
sbb
fnsave
pop
and
jge
std
mov
mov
sbb
andl
fidivrs
ljmp
fs
fisubs
push
xlat
jo
or
pop
pop
aas
cs
xlat
adc
movsb
sbb
add
dec
pushf
fisttps
jb
sbb
add
rorb
pusha
sub
xor
push
mov
sbb
push
inc
pop
inc
pop
pop
cs
fistpll
inc
jo
pop
adc
mov
adc
subl
loopne
testl
jmp
mov
lock
rorb
cld
adc
adc
add
fbld
fadds
out
imul
xorb
fxtract
ja
and
fsts
addb
mov
lock
sub
rcl
pusha
aad
add
mov
pop
lods
add
pop
pushf
out
mov
aas
stos
mov
or
daa
inc
or
ret
or
xor
cmp
or
int3
ss
jg
sbb
stc
les
mov
mov
dec
insl
adc
sarl
mov
add
hlt
test
je
shll
inc
jecxz
cwtl
lea
outsb
adc
and
int
adc
adc
adc
mov
inc
mov
sarb
push
cltd
ret
dec
jo
pop
add
mov
add
or
int3
mov
mov
test
xchg
sbb
mov
es
mov
mov
je
mov
push
jg
add
inc
and
add
nop
out
mov
stc
or
mov
mulps
popa
addr16
aad
aad
sub
add
mov
stos
mov
cmpsl
mov
sbb
not
cltd
mov
jl
mov
mov
add
jmp
push
or
or
stc
or
ret
aam
les
pop
push
push
bound
inc
fs
gs
adc
insb
cmp
add
aaa
nop
jb
enter
or
sub
rolb
pop
mov
test
rorb
mov
mov
dec
and
cmp
mov
mov
pop
dec
fcompl
mov
cli
inc
in
push
insl
xchg
cltd
movsb
jl
push
movsb
fsubl
adc
imul
pusha
addr16
inc
add
cmp
and
add
sub
dec
mov
mov
xchg
es
and
rol
push
pusha
lret
add
fdivrl
cmpsb
add
sti
push
js
shlb
sbb
inc
xchg
push
pusha
bound
divl
call
in
rcr
dec
rcl
xor
rol
fs
mov
mov
lcall
adc
das
mov
inc
sub
or
xor
jno
pop
cmp
shll
inc
pop
xchg
inc
dec
or
aam
push
and
das
adc
sbb
mov
push
leave
fadds
mov
adc
mov
sub
jl
jp
and
mov
pushf
aam
adc
leave
xchg
pop
arpl
iret
imull
lcall
xlat
and
fsts
push
and
or
jne
andl
mov
or
inc
mov
or
cs
or
cmpsl
pop
adc
add
sbb
pop
xor
in
mov
xor
fmull
imul
imul
adc
push
xor
shll
add
xor
rcrl
dec
jne
and
add
push
sub
jbe
scas
jmp
mov
pushf
mov
aam
in
movsb
cmp
shlb
adc
inc
mov
shlb
adc
sbb
and
repz
or
loope
and
pushf
adc
data16
mov
and
hlt
xor
nop
stc
and
lret
adc
sub
pop
add
and
flds
mov
or
stos
add
mov
lock
adc
dec
addr16
mov
or
mov
inc
jle
lods
jnp
add
pusha
add
adc
dec
mov
cmpsb
inc
add
mull
repnz
cld
add
sub
ret
adc
insb
push
add
aas
sub
mov
movsl
jae
sub
sbb
push
adc
add
fisubl
add
lock
add
lcall
into
sarl
add
movsl
push
lret
scas
pop
or
shrb
jge
stos
dec
add
sub
jle
add
or
mov
mov
mov
and
in
fs
add
inc
push
adc
xchg
pusha
xchg
add
outsb
and
sbb
add
daa
jns
lss
iret
push
sti
in
add
shrl
xchg
filds
adc
and
lods
outsl
cmp
add
pusha
mov
mov
movsb
das
xchg
std
add
daa
cs
push
push
fildl
cltd
mov
in
ss
add
xchg
jbe
push
sbb
ret
mov
add
adc
mov
daa
std
push
jge
add
cmp
add
insl
adc
out
hlt
adc
aaa
push
inc
mov
repnz
sahf
xchg
or
js
pop
push
xchg
add
mov
dec
repnz
pop
mov
or
and
or
inc
sbb
fsubp
jo
lret
mov
push
mov
add
adc
add
scas
lret
sub
mov
jl
xchg
jge
add
lcall
add
das
sub
call
push
add
inc
jg
subb
or
repnz
in
xchg
pop
xchg
jmp
ljmp
hlt
push
jecxz
adc
add
sbb
jb
adc
add
lcall
sub
push
ror
loopne
mov
ja
and
add
jae
jmp
push
fwait
jae
xchg
mov
into
add
.byte
movsl
fimull
cmp
add
sahf
dec
push
lret
mov
add
lea
add
push
mov
add
push
push
push
mov
call
push
call
inc
push
push
dec
push
and
inc
outsl
jb
jne
je
inc
popa
je
and
mov
push
pushl
mov
pushfw
pusha
push
push
mov
mov
add
lea
mov
mov
push
push
push
push
push
push
push
push
push
push
push
call
sub
pop
rep
pop
add
add
rep
call
pop
lea
mov
btr
jae
mov
std
mov
mov
add
add
rep
add
cld
jmp
add
mov
test
je
mov
mov
add
push
lea
jmp
pop
pop
pop
pop
je
jmp
add
jne
mov
sub
adc
ret
cmp
jae
push
push
mov
jmp
cmp
jae
push
push
mov
jmp
push
push
mov
push
xor
dec
movsb
xor
cmp
jle
call
jb
movsb
xor
dec
jmp
inc
call
adc
call
jb
ret
xor
call
sub
jae
mov
inc
jmp
mov
movzbl
call
adc
dec
jne
xor
cmp
adc
cmp
adc
mov
call
adc
call
adc
jne
call
add
add
push
sub
lea
rep
pop
jmp
cs
ficomps
xorb
cld
outsl
or
mov
pop
add
add
add
add
sub
add
sbb
or
ss
add
add
add
xchg
adc
add
or
insb
and
add
sub
add
pop
add
add
or
shll
cmp
add
jb
add
add
add
or
data16
add
or
mov
add
add
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
push
imul
jb
je
arpl
add
dec
gs
popa
addr16
outsl
js
add
add
jo
imul
inc
push
dec
inc
dec
xor
cs
insb
add
gs
xor
fs
insb
