push
mov
mov
push
test
je
mov
test
je
jmp
pushl
pushl
pushl
call
add
mov
test
jne
jmp
mov
movb
mov
mov
mov
mov
mov
pop
pop
ret
pusha
cld
movzbl
or
jne
mov
sub
mov
mov
add
mov
call
mov
movb
cmpl
jne
popa
jmp
popa
pushl
push
call
push
call
ret
pushl
push
call
push
call
ret
mov
push
mov
push
or
push
pop
je
mov
mov
mov
inc
inc
dec
jne
push
pop
pop
pop
ret
mov
or
je
mov
push
mov
push
pop
mov
push
mov
push
pop
shl
mov
shr
rep
push
pop
and
rep
pop
pop
mov
ret
push
push
pop
sub
lea
push
call
or
pop
jne
lea
push
call
pop
leave
ret
enter
nop
nop
mov
mov
push
push
pushl
add
push
lea
call
lea
mov
push
push
pushl
lea
call
or
je
cmp
jne
lea
lea
push
lea
push
push
call
or
je
cmpl
jne
mov
sub
mov
lea
push
lea
pushl
mov
mov
mov
call
cmp
jbe
mov
lea
lea
lea
push
push
push
call
or
je
cmpl
jne
mov
or
je
mov
lea
add
push
push
lea
push
call
or
je
mov
cmp
jne
inc
cmp
jb
lea
call
sub
jmp
lea
call
push
pop
lea
call
push
pop
pop
pop
leave
ret
push
push
pop
push
pop
mov
push
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
pop
pop
ret
push
push
pop
push
mov
push
mov
push
push
push
pop
andl
andl
mov
mov
or
jne
sub
jmp
mov
sub
mov
sub
jne
push
pop
call
or
jne
jmp
mov
cmp
jb
push
pop
mov
push
add
mov
push
mov
add
push
call
add
add
sub
sub
add
cmpl
jne
mov
pop
pop
pop
leave
ret
push
push
pop
push
push
push
push
push
pop
andb
push
mov
mov
lea
mov
add
mov
lea
push
push
pop
pushl
call
mov
or
jne
and
jmp
mov
sub
mov
mov
lea
push
push
push
mov
add
push
push
call
sub
or
je
sub
jmp
andb
lea
push
push
pop
pushl
call
andl
add
mov
pop
pop
pop
leave
ret
push
mov
push
call
or
pop
jne
push
call
or
pop
jne
push
call
or
pop
jne
mov
or
je
mov
push
mov
add
push
mov
mov
add
push
call
sub
sub
pop
ret
push
push
pop
push
push
mov
push
push
mov
or
je
mov
push
pop
mov
sub
mov
je
mov
add
push
add
jmp
mov
or
mov
je
mov
andl
sub
shr
or
jle
mov
mov
push
pop
and
cmp
jne
and
add
mov
add
add
mov
incl
cmp
jl
add
cmp
jb
pop
pop
sub
pop
leave
ret
push
push
pop
mov
push
push
push
mov
or
je
mov
lea
jmp
add
push
call
or
mov
je
mov
mov
mov
add
or
push
pop
je
lea
cmpl
je
push
pop
push
pop
sub
mov
or
jns
and
jmp
lea
push
pushl
call
or
je
mov
mov
add
push
pop
cmpl
jne
add
mov
or
jne
sub
pop
pop
pop
pop
ret
push
pop
jmp
push
push
pop
mov
mov
or
je
mov
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
sub
push
push
pushl
call
mov
pushl
push
push
call
sub
pop
cmpb
je
pushl
pushl
pushl
call
sub
pop
ret
push
push
pop
pushl
call
sub
pop
mov
mov
mov
pop
ret
mov
or
jne
sub
jmp
mov
sub
push
mov
cmp
push
jae
or
jne
sub
jmp
mov
sub
pushl
sub
push
pushl
call
jmp
or
je
mov
push
pop
sub
cmp
jae
add
push
push
call
pop
pop
ret
mov
or
jne
sub
jmp
mov
sub
sar
push
mov
cmp
push
jae
or
jne
sub
jmp
mov
sub
sar
pushl
sub
push
pushl
call
jmp
or
je
mov
push
pop
sub
sar
cmp
jae
lea
push
push
call
pop
pop
ret
push
push
pop
push
push
mov
push
push
pop
push
mov
mov
sub
cmp
jae
mov
or
je
push
pop
sub
cmp
jb
push
pop
or
jne
sub
jmp
sub
lea
or
mov
jge
sub
push
call
pop
mov
push
pop
mov
jmp
or
je
mov
mov
inc
inc
cmp
jne
or
push
pop
jbe
push
pop
or
je
mov
mov
mov
inc
dec
jne
mov
lea
cmp
je
push
pop
sub
sub
add
or
je
mov
mov
inc
inc
cmp
jne
pushl
call
mov
mov
pop
add
mov
mov
or
jne
sub
jmp
mov
sub
add
mov
add
mov
jmp
mov
push
pop
sub
cmp
jae
cmp
lea
je
push
pop
sub
or
je
mov
mov
mov
inc
inc
cmp
jne
mov
mov
push
pop
sub
add
je
mov
or
je
mov
mov
inc
decl
jne
mov
jmp
mov
mov
inc
cmp
jne
jmp
or
jbe
push
pop
push
pop
sub
jmp
or
je
mov
mov
mov
inc
inc
cmp
jne
mov
push
pop
sub
cmp
je
dec
dec
cmp
mov
mov
jne
lea
jmp
mov
mov
mov
inc
cmp
jne
add
pop
pop
pop
leave
ret
mov
push
mov
push
mov
jmp
mov
mov
inc
inc
cmp
jne
mov
mov
pop
pop
ret
push
push
pop
push
push
push
push
push
pop
push
mov
mov
mov
sub
sar
cmp
jae
mov
or
je
push
pop
sub
sar
cmp
jb
push
pop
or
jne
sub
jmp
sub
sar
add
or
mov
jge
sub
shl
push
call
push
pop
mov
pop
mov
jmp
or
je
mov
mov
mov
mov
add
add
cmp
jne
or
push
pop
jbe
mov
mov
or
je
mov
mov
mov
mov
add
decl
jne
mov
push
pop
shl
cmp
mov
lea
je
push
pop
sub
sub
add
or
je
mov
mov
mov
mov
add
add
cmp
jne
pushl
call
mov
mov
pop
mov
or
lea
mov
jne
sub
jmp
mov
sub
sar
add
mov
lea
mov
jmp
mov
push
pop
sub
sar
cmp
jae
push
pop
shl
cmp
mov
lea
je
push
pop
sub
or
je
mov
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
push
pop
sub
sar
sub
mov
je
mov
or
je
mov
mov
mov
mov
add
decl
jne
mov
jmp
mov
mov
mov
mov
add
cmp
jne
add
jmp
or
jbe
shl
push
pop
push
pop
mov
sub
jmp
or
je
mov
mov
mov
mov
mov
add
add
cmp
jne
mov
push
pop
sub
cmp
je
sub
sub
cmp
mov
mov
mov
mov
jne
lea
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
add
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
je
push
mov
add
mov
mov
mov
add
cmp
jne
pop
mov
mov
pop
ret
enter
nop
nop
push
push
push
mov
sub
sub
sub
movl
mov
mov
test
je
add
jmp
movzbl
inc
lea
test
je
mov
mov
inc
inc
jmp
sub
mov
inc
test
je
add
jmp
movzbl
inc
lea
push
pop
shr
and
test
lea
je
add
jmp
movzbl
inc
lea
test
je
cmp
jne
mov
jmp
movzbl
add
shl
add
inc
cmp
je
inc
mov
test
je
add
jmp
movzbl
inc
lea
push
pop
shr
and
test
je
add
jmp
movzbl
inc
lea
push
pop
shr
and
lea
or
jne
inc
test
je
add
jmp
movzbl
inc
lea
push
pop
shr
and
test
lea
je
add
jmp
movzbl
inc
lea
test
je
inc
inc
mov
mov
cmp
sbb
neg
add
mov
push
pop
sub
mov
add
mov
mov
inc
inc
mov
mov
inc
inc
decl
jne
jmp
mov
pop
mov
push
pop
sub
cmp
pop
pop
sbb
and
add
neg
sbb
and
leave
ret
add
add
add
push
orb
add
add
sub
dec
add
add
orb
add
add
mov
add
or
pop
mov
add
add
or
orb
add
add
add
or
mov
add
or
orb
add
add
add
jo
insb
insb
outsl
arpl
inc
add
je
jb
arpl
jae
gs
jo
add
jo
jb
add
add
je
jb
arpl
fs
jae
add
ret
outsl
popa
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
sti
jbe
add
or
popl
and
filds
add
ja
inc
add
mov
push
fs
mov
mov
decl
outsl
insl
jo
popa
arpl
mov
jl
fs
jbe
push
xor
cmp
sub
fistpl
dec
add
call
test
loop
jl
sub
cld
add
fs
pop
jae
mov
and
les
decl
push
decb
in
cwtl
call
xchg
lcall
mov
sbb
mov
fdivrp
std
sbb
aaa
sub
mov
pop
push
and
inc
mov
je
pushl
cmp
ds
mov
xor
and
adc
call
aas
inc
fst
lock
incl
push
les
inc
icebp
xor
stos
call
jno
mov
pushl
push
int
out
cld
pop
mov
jmp
xchg
daa
loop
outsl
lcall
push
push
jg
push
popf
pop
push
mov
daa
jbe
xchg
cmp
arpl
jecxz
pushl
dec
rcl
dec
pop
stc
mov
jmp
mov
pop
decl
pop
sbb
clc
inc
mov
dec
lcall
in
nop
lcall
cwtl
js
incl
xor
xlat
jb
cmpsb
pushl
ss
xchg
mov
jmp
and
adc
fidivl
ljmp
mov
xchg
mov
imul
or
lods
stos
mov
or
push
dec
es
in
add
push
out
fldl
pop
jo
ret
into
ret
inc
call
mov
out
outsl
std
clc
inc
lcall
jp
dec
mov
lock
fdivrs
cmp
movl
dec
das
push
or
test
pop
xor
pushl
cmc
nop
lock
jae
pushf
call
xor
flds
adc
mov
push
lods
jmp
and
int
stos
aas
mov
push
ret
nop
lcall
insl
mov
rcrb
leave
cmp
clc
mov
pop
cmpsl
xlat
adc
mov
mov
movsl
and
mov
or
nop
push
shll
lods
pop
cmc
in
incl
dec
mov
repz
jno
adc
sti
fmull
outsl
jg
jmp
pop
jnp
cld
out
lock
adc
mov
mov
mov
ret
inc
push
push
cmp
fistl
divb
imull
xchg
sub
pop
cs
adc
or
or
mov
test
call
insb
imul
adc
pop
lods
fwait
mov
sub
in
inc
pop
shrl
insb
cwtl
pushf
mov
clc
cmpsl
lret
jb
ljmp
push
sub
test
call
sub
jne
mov
pusha
inc
adc
stos
imul
out
lcall
pop
mov
pop
cmp
fcos
cmpsb
cltd
sub
add
jp
adc
xchg
loop
in
sbb
call
inc
sub
or
mov
sbb
or
aad
lcall
sub
xlat
fstpt
das
arpl
repz
inc
or
and
cmp
jp
inc
xchg
incl
jo
insb
mov
inc
mov
dec
mov
notb
adc
mov
jmp
pop
xchg
scas
call
mov
cmp
pusha
lods
incl
je
stc
lcall
or
dec
arpl
aaa
ljmp
ja
mov
das
ljmp
les
xor
dec
pop
call
mov
int
jecxz
sahf
sub
xor
mov
rorb
das
jecxz
mov
movsl
call
or
xchg
incl
loope
mov
mov
mov
shll
push
repz
xchg
mov
inc
ss
xchg
dec
mov
pop
decl
inc
mov
mov
pop
iret
add
lcall
jle
lcall
sub
sub
decl
int
cmp
lret
cli
and
dec
and
loopne
and
incl
push
sbbl
loopne
call
pusha
and
add
pushf
int3
call
mov
in
incl
cs
lcall
mov
mov
add
and
int3
nop
mov
lock
sahf
cmp
stc
adc
sub
out
push
stc
call
in
inc
push
incl
aas
xor
add
idiv
in
leave
mov
incl
adc
ljmp
inc
xor
ljmp
into
add
in
outsl
mov
pop
xchg
pop
hlt
dec
push
into
incl
xchg
xchg
pop
jge
ljmp
lods
aam
int
lcall
jo
mov
ljmp
or
lcall
mov
sub
cmp
jmp
popf
in
push
jecxz
push
or
daa
scas
mov
clc
jns
dec
ret
sbb
and
decl
mov
mov
push
pushw
decl
cld
outsb
out
xchg
fists
and
sub
pop
je
movsb
jmp
fsubrs
dec
jmp
fcmovnb
mov
sbb
test
aas
test
sbb
or
lret
sbbb
js
mov
adc
das
clc
stos
shr
sar
insl
cmpsb
ljmp
sbbb
pop
add
movsl
pop
cmp
dec
or
call
int3
xor
sbb
repnz
mov
mov
jns
and
dec
sbb
rcr
mov
push
inc
pop
mov
repnz
push
jecxz
inc
sbb
jg
addb
sbb
cmpsl
add
testb
cmp
jl
jmp
jmp
mov
clc
shlb
notb
decl
call
je
push
ljmp
dec
push
lret
or
push
decl
cmc
arpl
cmpsl
pop
into
dec
push
incb
out
call
xor
cmp
stos
shlb
movsb
pavgw
mov
jmp
mov
outsb
push
xchg
pusha
repz
lahf
int
icebp
adcl
dec
call
mov
push
ljmp
mov
dec
decl
sbb
adc
or
mov
cmpsb
stc
pushl
les
mov
jge
jmp
shrl
shlb
test
jmp
cmpsl
add
add
pushl
outsl
lret
cmp
stos
std
xchg
xchg
pusha
lret
adc
add
pop
ljmp
rcll
das
push
daa
rcr
and
cli
adc
pop
push
adc
jp
cli
dec
lcall
sahf
rcl
cmp
jnp
push
add
mov
enter
mov
ret
or
call
and
test
mov
mov
jns
fists
push
dec
inc
add
hlt
decl
mov
add
xorb
std
xchg
sbb
insl
dec
lcall
sti
inc
loope
jl
out
cmp
sbb
decb
dec
cltd
lock
or
sar
lds
shr
and
loop
out
dec
adc
xchg
jbe
leave
test
pop
repz
jns
add
sub
mov
push
lods
jg
loopne
idiv
jb
loopne
loope
xor
arpl
xor
add
loop
xchg
dec
shld
mov
mov
push
ljmp
loop
cmpsb
pushl
xlat
push
sarl
inc
movsb
incl
cmp
roll
mov
decb
out
mov
fcoml
pop
cli
fwait
movsl
and
clc
jno
adc
dec
movsb
sbb
push
ud0
popa
sbb
jbe
mov
lret
jmp
mulb
xor
cmp
cmp
dec
dec
xchg
inc
popf
ljmp
dec
arpl
jmp
pushl
movsl
xchg
decl
fs
ljmp
out
mov
xor
sub
fbstp
ljmp
pop
int3
jmp
xchg
inc
add
mov
in
jp
sbb
fnstenv
mov
sub
or
lcall
cmp
jp
pop
adc
incl
push
xchg
jecxz
incl
sub
aad
jp
and
dec
push
call
int3
mov
mov
ret
jmp
pop
decl
inc
jmp
dec
rcrb
jmp
or
sarb
adc
daa
insl
adc
pusha
pop
in
xchg
cmp
mov
adc
ja
dec
ret
inc
lcall
xor
cwtl
clc
and
push
insl
data16
ret
mov
mov
ljmp
pop
addr16
incl
lods
stc
js
insl
mov
imul
or
js
or
lods
lcall
fs
movb
adcl
arpl
hlt
aas
cmpsl
xchg
sbb
clc
adc
push
adc
pop
addr16
mov
imul
dec
je
sti
call
pop
fadds
test
jno
cmp
jns
stos
test
in
fists
imul
or
push
push
std
lcall
mov
mov
orb
cs
loopne
sub
aad
jmp
inc
jno
std
in
cmpsl
mov
jns
das
inc
push
xor
and
jmp
adc
mov
inc
movsl
decl
inc
dec
ja
in
cli
add
lds
rcr
dec
and
sub
incb
push
sbb
pushl
stos
popa
mov
out
adcb
push
aaa
dec
cmc
jmp
or
lret
call
inc
aaa
inc
into
jbe
imul
xchg
fidivrs
sub
xor
dec
cld
mov
int
outsl
cwtl
mov
fldt
inc
adc
test
dec
jmp
movsb
cmp
xchg
sbb
xor
fcmovnu
decl
mov
lcall
shlb
popf
in
out
push
cld
in
lock
ja
cmpsl
and
insb
adc
adc
pushf
mov
rol
jno
sbb
push
in
rcrb
cmp
or
jge,pn
movsl
sbb
incl
sbb
xlat
add
dec
idiv
ljmp
dec
xchg
int
inc
push
imul
gs
ret
arpl
jbe
leave
cmp
cmp
xchg
mov
sub
fwait
aam
cmp
lods
sbb
ss
ss
lcall
xlat
aaa
outsb
and
call
push
outsl
xor
sti
lcall
lods
lret
inc
jge
sub
sar
enter
imul
movsl
or
dec
mov
arpl
cltd
xchg
leave
mov
gs
jae
push
add
sar
jb
imul
test
push
ret
add
test
pop
and
jmp
addr16
jg
adcb
in
push
ss
pushf
ljmp
mov
fs
jmp
dec
push
push
xchg
in
push
push
call
mov
or
test
add
pop
out
int3
pop
push
popf
fcmovnb
dec
call
inc
shrl
mov
sti
or
inc
xchg
cmpsb
mov
xor
leave
data16
push
xchg
aas
push
loopne
aad
cli
stos
dec
xor
jns
lcall
enter
adc
ret
sbb
out
fisttps
int3
dec
popa
daa
cs
fiadds
shrl
std
loope
aad
adc
stos
ljmp
outsb
inc
pop
xor
in
decb
pushl
les
lods
and
repz
mov
sub
xchg
or
adc
pop
jp
jmp
add
and
mov
divl
cwtl
push
out
cmp
in
adc
pushl
stos
in
add
jns
std
aam
pushf
aad
movsb
outsl
xchg
mov
lods
cltd
outsl
loopne
lahf
mov
in
mov
mov
incl
adc
pop
aas
loop
out
jg
dec
arpl
insb
in
std
rclb
mov
dec
insl
sbb
imul
push
lcall
dec
repz
pop
test
mov
rcr
or
sbb
xchg
leave
vpsrlw
ret
sub
call
jb
adc
sbb
adc
test
sti
jle
mov
call
decl
sti
cmc
pop
ljmp
sbbl
and
jb
insl
cmp
ljmp
or
push
jp
pushl
shll
inc
pusha
dec
push
outsl
lahf
cld
mov
in
mov
mov
mov
push
lahf
xchg
dec
fucomi
enter
and
decl
sbb
add
hlt
cmpsb
pop
imulb
mov
pushf
dec
lock
pusha
mov
into
sbb
in
loopne
or
daa
xor
and
xor
icebp
mov
or
push
clc
aaa
cld
in
adc
rcr
mov
sbb
push
mov
add
insb
lcall
fs
out
mov
and
jmp
pop
add
cmp
xor
fdivrl
add
or
mov
cltd
jmp
mov
jb
push
popf
jmp
lods
das
lcallw
sub
notrack
test
int
daa
incl
movsb
or
mov
mov
adc
jnp
jno
xchg
cmp
int3
cmp
fnstcw
bound
push
xchg
inc
add
push
fisubrs
loope
inc
call
cltd
nop
mov
iret
sbb
xor
sahf
sub
pushf
mov
insb
ljmp
sub
iret
into
jg
sti
nop
daa
mov
ljmp
mov
and
aaa
pop
movsb
and
gs
adc
out
int3
fdivs
mov
bound
mov
aad
adc
pushl
dec
mov
and
add
ljmp
mov
xchg
xor
jnp
sbb
pop
fucomip
adc
iret
fists
cld
push
sar
into
cltd
loop
into
testb
dec
aam
inc
mov
push
fcos
sbb
jno
push
adc
jmp
mov
in
jmp
pushf
jae
lock
popfw
jmp
dec
fcmovnb
sub
sbb
pop
pop
jl
scas
cmp
out
loopne
mov
adc
lcall
sbb
adc
xor
loop
aad
add
sbb
xchg
add
mov
dec
rcrb
out
push
stc
inc
push
ds
sub
cmp
stos
cmp
cld
push
jne
imul
jnp
aad
adc
mov
xchg
cmpsl
mov
mov
mov
test
xchg
or
sahf
sub
mov
mov
dec
adc
mov
std
dec
jmp
lahf
scas
pop
ja
jo
sbb
jle
rol
mov
out
push
pushl
mov
ret
inc
mov
cld
pop
cmp
mov
stos
outsl
scas
xchg
sbb
pushl
sbb
std
incl
out
icebp
sbb
loopne
mov
adc
pop
stos
in
outsb
fwait
in
clc
ret
inc
rcll
lds
and
mov
lea
inc
pop
jno
jmp
cmc
mov
ljmp
inc
std
mov
outsl
jecxz
sub
mov
jo
daa
aas
dec
loop
icebp
dec
fcomip
push
mov
lcall
test
les
loopne
jmp
jmp
outsb
movsl
incl
mov
movsl
push
lcall
ret
xor
mov
cli
xor
sbb
jmp
xor
jecxz
aad
xor
imul
xchg
pop
enter
fistpll
call
iret
scas
jmp
add
pop
addr16
add
nop
jg
push
shlb
aaa
xchg
inc
ljmp
sub
cmp
dec
sbb
out
in
into
incl
fnstsw
in
mov
sti
or
inc
add
incl
add
lret
sub
sbb
cs
js
push
dec
decl
pop
add
sbb
xor
and
std
add
rolb
mov
mov
push
test
incl
popf
pop
into
loope
and
call
push
jge
mov
incl
repz
incl
in
or
shlb
lcall
iret
mov
pushl
fcoml
out
mov
push
incl
sbb
jle
mov
std
in
add
mov
inc
out
inc
jae
pop
ret
incl
ficompl
mov
clc
ss
lea
les
and
inc
idiv
mov
inc
mov
mov
push
jne
xchg
or
mov
in
jl
jmp
pusha
mov
pop
inc
sbb
mov
and
pop
pop
ret
fmuls
sahf
subl
ja
lea
fwait
cld
xchg
or
adc
pop
add
add
cld
mov
fisttpll
out
mov
dec
push
into
ss
xor
xchg
push
pop
jmp
xor
mov
call
jne
xchg
sub
dec
pop
xchg
daa
sbb
aam
mov
bound
inc
mov
das
loopne
aaa
push
pop
or
hlt
jb
cld
push
adc
jg
push
xor
outsl
lock
outsl
dec
decl
or
push
insb
xchg
subb
addl
in
pop
std
outsb
pop
mov
pop
and
pop
out
dec
mov
adc
loope
stc
outsl
xlat
shll
add
dec
addr16
push
in
in
in
ds
sbb
push
inc
xor
arpl
out
fst
decl
lds
incl
push
sbbb
inc
cmp
clc
sti
push
call
jg
dec
push
jecxz
inc
ljmp
add
cmc
sbb
dec
and
mov
iret
xchg
mov
insl
cli
inc
dec
in
rcll
inc
cmp
mov
fwait
das
adcl
inc
mov
mov
jmp
addr16
decl
cmpsb
pushf
jo
pushf
stc
inc
adc
pushl
adc
in
hlt
lods
cmc
shll
add
ret
iret
cmpsl
fldcw
fldl
xchg
pop
lahf
fcomi
and
and
pop
andb
ljmp
push
es
dec
fwait
mov
xor
divl
clc
lods
and
mov
jbe
pop
inc
cmp
add
les
rcrl
or
sbb
and
incl
mov
adc
jmp
fcmovnu
aaa
jmp
xchg
shlb
dec
add
lcall
sub
outsb
scas
xchg
and
int3
cmpsb
cltd
arpl
sub
cli
es
mov
rorb
pushf
sbb
xchg
sub
mov
or
aad
sti
lds
jg
xchg
addr16
jp
aas
push
and
or
cmp
mov
xor
xor
lock
incl
out
dec
frstor
pushl
test
push
xor
sub
js
fimuls
ljmp
or
loopne
pop
pop
dec
and
mov
sbbl
loopne
or
fildll
fistpl
dec
and
call
cli
and
jns
lods
xchg
iret
xlat
movsb
lcall
dec
testb
das
or
fcoms
rcrb
test
mov
jbe
sbb
decl
leave
jmp
xchg
bound
int
pushl
mov
sub
dec
and
out
sbb
ljmp
mov
jo
jmp
sub
or
mov
testl
sub
fcomip
and
mov
adc
lcall
sbb
cli
dec
jnp
sahf
pmullw
loop
fwait
adc
stos
loopne
push
aas
stos
outsl
in
jecxz
ljmp
dec
or
jp
std
stos
mov
loope
pop
mov
xor
stos
sub
sub
call
in
popf
inc
mov
fidivl
call
lods
cmpsl
fstpl
pop
pushl
mov
mov
inc
and
push
pop
mov
dec
repnz
or
sbb
add
insb
out
test
aas
pushl
fldenv
mov
and
dec
jo
decl
loopne
scas
stos
jne
add
notb
xor
icebp
decl
sub
scas
fndisi(8087
lcall
outsb
mov
mov
lock
in
repnz
cli
loopne
sbbb
xchg
test
inc
ud0
adc
ljmp
mov
inc
fisttpll
mov
daa
in
aaa
jp
xor
cmc
test
aam
es
lods
fwait
inc
and
fucomip
lcall
mov
cltd
mov
lcall
pushf
xchg
cmp
push
cmp
test
inc
jno
dec
lret
pop
pop
jnp
cmc
or
add
jne
ret
cmp
mov
test
add
aad
mov
int3
jp
negl
clc
mov
ret
std
push
add
dec
mov
cmpsb
adc
repnz
decl
sbb
xchg
jmp
jge
test
mov
nop
pushl
subb
lcall
jge
dec
stc
push
mov
push
cli
lock
xor
iret
sub
call
sbb
les
mov
or
lcall
cmc
mov
lcall
icebp
fdivrp
jecxz
out
mov
pop
decl
dec
adc
mov
dec
jns
in
decl
xchg
addr16
aad
push
pushl
mov
xor
lea
pop
pop
fimuls
or
jmp
movsb
push
dec
xor
movsb
rorb
jge
mov
push
push
sub
in
mov
mov
fisubrs
mov
std
call
popf
dec
lock
sbb
popa
mov
or
dec
jle
pop
xor
pushf
jbe
pop
in
mov
inc
ficompl
xchg
int3
lea
bound
xor
lcall
fwait
and
subl
lds
pop
sbb
jmp
push
sbb
mov
cmp
lcall
lea
xchg
mov
lahf
cmp
xor
pop
push
add
jmp
mov
fcomps
movsb
clc
gs
lea
add
push
test
xchg
pop
ljmp
fcoms
test
inc
aas
jmp
aam
cmp
mov
stc
adc
cli
int3
es
jle
and
aas
mov
test
mov
mov
inc
adc
inc
or
jmp
std
inc
fs
bound
lods
out
mov
pop
sub
bound
movsl
into
jmp
or
lret
push
cltd
cli
push
adc
data16
jae
xor
ljmp
and
add
pop
cltd
and
js
mov
and
or
or
hlt
insb
repz
mov
push
ljmp
pop
sub
or
stos
jg
pushf
inc
rorb
lcall
jl
dec
aas
sbb
iret
sub
scas
jmp
and
cltd
and
pop
push
xor
call
outsb
into
arpl
xor
fistps
loop
pop
test
inc
iret
fnstenv
test
js
inc
popf
and
addr16
call
jo
mov
mov
incl
fisubl
rclb
jle
scas
fxch
sahf
jl
das
xadd
xchg
dec
and
ret
addr16
sbb
in
xor
fwait
lods
lcall
mov
jle
repnz
cld
inc
sub
xchg
incl
dec
das
loopne
add
js
push
mov
movsl
push
adc
sbb
push
pushl
ljmp
or
xchg
jmp
inc
adc
rclb
adc
clc
pop
jg
ret
mov
sub
sbb
cmp
cli
mov
pushl
ds
adcl
cmp
xchg
incl
icebp
rol
sub
jp
iret
mov
mov
lcall
adc
mov
add
mov
lods
sar
lds
int3
pushf
jmp
and
les
rorl
and
in
clc
pushl
aam
dec
ret
incl
cmp
lods
jl
sahf
dec
xchg
xchg
popf
inc
clc
and
ljmp
imul
cmp
push
add
fabs
jmp
pop
add
pushl
fistps
lock
and
aad
dec
mov
mov
les
sub
pushf
xchg
es
adc
pop
push
fdivl
lcall
cli
das
jbe
sbb
mov
int
call
mov
add
addr16
cmp
or
jmp
ret
call
insb
jp
int
pushf
decl
mov
jmp
pushf
pop
movsl
popf
out
ja
mov
outsl
ret
mov
sbb
push
pop
cmp
adc
scas
dec
and
cmpsb
fs
push
cli
test
mov
stos
fistps
fsub
xor
mov
adc
lcall
sub
out
or
jmp
xchg
int3
imul
neg
aaa
sar
popf
xor
lret
push
jne
and
mov
ret
push
call
in
ficomps
and
xchg
test
stc
in
sarb
cmc
mov
jg
mov
in
arpl
stos
mov
ret
fwait
or
xor
mov
loop
dec
inc
das
std
in
push
clc
aas
clc
or
mov
cwtl
adc
outsb
aas
jo
fbld
mov
push
clc
stos
lcall
mov
sbb
sti
decl
cmp
xchg
lds
inc
incl
sub
jo
push
pop
pushl
xor
pop
sub
fbstp
cmp
inc
mov
jb
mov
ficomps
sbb
fcoml
mov
lret
pushl
sti
jo
std
shll
mov
decl
test
jmp
mov
in
dec
clc
jno
sub
out
push
insl
mov
mov
je
out
pop
lret
and
jle
jmp
pop
dec
xchg
leave
adcl
stos
mov
js
lahf
leave
mov
repz
test
cmc
add
lods
outsl
push
and
mov
hlt
lcall
ljmp
sub
add
lret
sarb
cmp
cli
gs
cmp
pop
dec
stc
dec
cli
xor
and
pop
xchg
pop
xchg
stc
decl
subl
mov
std
out
lret
test
cli
and
xchg
pusha
adc
add
lcall
jno
insb
lds
add
jae
call
test
xor
pop
in
aam
fimuls
add
mov
dec
push
mov
cld
scas
lds
push
push
aad
in
aaa
loopne
lock
push
aaa
std
leave
pushl
dec
and
aas
and
inc
inc
jb
xchg
jl
jb
pop
lock
cmc
les
xchg
lods
int
movsl
cli
test
aaa
mov
enter
or
adc
jmp
sub
push
cmp
test
decl
add
jl
and
push
push
outsb
adc
push
movsb
leave
test
into
pop
xchg
adc
push
jnp
push
push
dec
imull
mov
and
ss
ficomps
das
inc
adc
mov
test
mov
and
aad
aam
cmpsb
pop
sti
pushf
sbb
xchg
mov
and
fiadds
sti
push
nop
loope
icebp
xchg
fnstcw
fwait
lds
or
jmp
test
jmp
jb
cli
fwait
push
scas
cli
jmp
pop
mov
lcall
nop
popf
std
popa
out
xchg
add
or
xchg
out
cmp
xchg
mov
mov
incl
ret
mov
ljmp
xor
xchg
inc
pop
sbb
inc
fstpl
sbb
push
imul
and
cmp
inc
cmp
shrl
jbe
jp
jmp
add
push
int
inc
push
push
fistl
ss
mov
cs
sar
shr
pop
xchg
call
imul
mov
ss
push
icebp
js
push
icebp
cmp
adc
and
xor
sub
pushl
popf
cwtl
lock
dec
sbb
dec
sahf
sub
arpl
lcall
rorb
cmp
aad
sub
mov
out
lcall
fucomi
xchg
or
aaa
iret
call
loopne
sub
sub
fimuls
adc
lods
mov
sub
addl
and
arpl
sub
incl
in
sub
lret
lret
mov
xor
loop
lcall
incl
test
lcall
std
nop
jecxz
lock
mov
push
cli
in
lcall
call
pushf
in
dec
adc
incl
pop
xchg
adc
rol
or
cmp
loop
cltd
inc
jmp
mov
dec
push
inc
fcmovbe
and
ficomps
xor
xchg
pushf
inc
push
idivl
mov
pop
out
xchg
repnz
es
cmp
sti
in
into
sahf
icebp
incl
lret
aad
aas
cmp
fsubl
pop
adcb
test
jle
aam
fucom
fstpl
stos
fsubrl
ss
in
addr16
ja
je
xor
and
xor
or
add
stc
je
cmpb
icebp
lods
mov
sub
call
outsl
cmc
loop
sbb
dec
dec
cmp
inc
iret
inc
mov
call
mov
call
mov
testb
lds
sbb
call
call
jmp
pop
sbb
gs
lods
lds
cld
lods
jb
jle
subb
dec
xlat
out
cli
mov
push
popa
call
inc
clc
mov
mov
xor
lods
pushf
mov
icebp
jg
pop
jmp
mov
mov
jns
std
pushf
cmpsl
insb
rcrl
dec
jge
xchg
mov
mov
pop
cmpsb
icebp
nop
int
adc
add
aas
hlt
xchg
fwait
call
push
mov
dec
inc
jp
lcall
add
decl
cmpsl
mov
pushl
loopne
roll
xchg
pop
mov
sbb
sar
dec
test
pop
repnz
jge
mov
xchg
test
pushl
inc
out
icebp
inc
ret
jmp
pop
maxps
call
mov
adc
jno
arpl
xor
add
xchg
ljmp
divl
imul
jmp
bound
pop
insb
arpl
aad
loopne
cmpsb
mov
jge
clc
inc
incl
dec
sub
shl
popf
mov
inc
in
xchg
insl
push
stc
xlat
cmp
sbb
xchg
in
jo
mov
lret
test
jb
pop
fsubs
mov
adc
dec
mov
adc
push
adc
push
and
lock
push
mov
pop
cmc
jmp
mov
xor
cld
sub
jne
dec
xchg
clc
imul
dec
mov
ljmp
xchg
sub
pushl
test
inc
pusha
decl
jnp
or
push
push
add
inc
push
cmp
in
push
mov
xchg
xor
mov
sub
loope
mov
cmp
sbb
call
mov
mov
fisttpll
push
std
outsb
jns
mov
inc
dec
clc
pop
jno
loop
xchg
jp
hlt
ljmp
std
decl
in
mov
jne
leave
test
mov
rorb
push
ds
xor
mov
orl
mov
stc
ret
xor
jle
sti
xchg
enter
cmp
cld
cmc
jecxz
or
cli
icebp
lret
xor
xchg
mov
mov
movsl
add
incl
sbb
sarb
test
xor
jle
or
mov
ljmp
mov
push
out
sahf
xor
jb,pt
push
ljmp
icebp
out
sti
ljmp
jae
fsubrl
jl
data16
cmp
scas
sahf
daa
xlat
loopne
ljmp
push
push
stc
popf
fcos
pop
lret
and
dec
inc
or
insb
dec
incl
xor
jbe
adc
pop
js
orb
xor
jmp
sub
sub
push
addr16
imul
mov
push
jo
nop
popa
stos
rcrl
mov
lock
fs
push
mov
xchg
dec
mov
xor
jmp
fcomp
inc
nop
xor
decl
jmp
js
das
xchg
imul
or
in
dec
jmp
push
push
les
ljmp
arpl
jecxz
sub
scas
lret
outsl
cmovnp
addl
mov
xchg
outsl
push
mov
in
lods
mov
mov
insl
adc
rolb
andb
and
andb
call
leave
into
ffreep
repnz
sti
loope
adc
lds
push
or
pop
pop
jmp
xor
nop
jne
mov
push
stos
dec
push
call
call
flds
dec
xchg
das
iret
cld
nop
inc
jmp
or
jg
or
call
cltd
xor
int3
mov
pop
leave
adc
cmp
mov
sub
insb
fadd
mov
and
cwtl
int3
or
push
sahf
fcomps
mov
and
je
fs
js
add
sub
enter
jle
jp
les
test
out
mov
notl
iretw
lret
lcall
cmpsb
decl
into
repnz
sbb
push
mov
mov
sub
sbb
fcos
xorb
cwtl
mov
ss
add
inc
in
test
sahf
mov
push
xchg
int3
outsl
adc
jmp
lds
mov
cmp
std
adc
pop
stos
dec
jmp
jle
inc
incl
dec
cmp
imul
sbb
pop
cltd
es
sar
int3
aam
or
js
lahf
ljmp
loop
test
mov
fdivrp
repz
jecxz
dec
jnp
incl
insb
mov
jae
pop
add
movsl
dec
adc
out
ret
out
incl
adc
test
push
int3
ss
test
inc
mov
jo
int
mov
out
pop
ficoms
das
add
pop
fidivrl
add
ljmp
xlat
mov
cli
xor
shl
and
cmp
call
push
sbb
push
cltd
pshufw
in
fldl
aaa
adc
int
call
int3
lret
mov
orb
jnp
icebp
fwait
sub
pusha
mov
mov
cld
adc
dec
xchg
pushf
push
pop
and
mov
repz
out
arpl
mov
cmc
xchg
idiv
inc
subl
std
adc
mov
imulb
mov
sarl
scas
dec
sbbb
mov
loopne
add
clc
pop
outsl
xchg
stos
lock
movsl
sub
es
imul
test
fsubrs
and
sbb
xchg
data16
mov
xor
mov
jge
mov
ja
jg
arpl
sbb
decl
xor
sar
movsl
mov
dec
jmp
jnp
xor
mov
gs
loop
or
sahf
rcr
mov
and
cs
jmp
mov
jae
xor
leave
mov
jne
rcl
jb
mov
shlb
cwtl
sub
mov
sub
push
pop
xor
adc
jns
stos
inc
add
mov
sbb
push
jno
lahf
push
ljmp
mov
imul
sub
fwait
lock
rcll
cmp
fldl
dec
sub
push
mov
mov
pop
xchg
jmp
into
jl
mov
cmp
cld
outsl
ljmp
nopl
push
stc
iret
xchg
loopne
sub
pop
lcall
fdivs
aas
fs
and
jmp
lods
addr16
ret
shr
fistl
pop
imul
and
incl
sbb
pop
clc
and
scas
les
fwait
dec
pushl
imul
ljmp
sub
jp
scas
clc
pop
ljmp
stc
dec
movsl
arpl
enter
into
jmp
shlb
lret
push
incl
inc
dec
cmp
call
shl
mov
cltd
mov
decl
add
fwait
dec
mov
mov
mov
js
aaa
imul
addr16
inc
pop
cltd
jbe
call
stc
push
js
fistps
jle
in
push
cld
mov
lcall
pop
je
ds
mov
aas
movsb
insl
xlat
push
sub
int
adc
dec
mov
lcall
jb
sub
mov
ljmp
js
mov
dec
mov
push
ss
jmp
iret
std
sarl
and
pop
das
loopne
mov
xor
sub
dec
pushl
cmp
decl
and
or
cmp
mov
subb
mov
cwtl
or
push
add
roll
pop
imulb
cli
push
icebp
cmp
push
sti
mov
pop
mov
hlt
xchg
push
pop
dec
xchg
daa
sub
xor
xor
test
in
insl
and
pop
sbb
mov
push
outsl
les
aaa
std
push
jnp
jmp
cmpsl
das
lcall
xor
cmp
inc
pop
sub
aas
mov
sub
cmp
jge
ljmp
or
pop
shll
add
out
aaa
or
into
negb
adc
push
push
xchg
adc
and
rcrl
roll
decl
xchg
add
xchg
call
shll
sub
or
or
xchg
add
aaa
lcall
inc
rorb
cld
aad
inc
lods
int
in
lahf
sbb
out
push
pop
mov
scas
iret
shlb
xchg
lods
sbb
lock
mov
es
pop
rorb
in
mov
lds
jg
out
xchg
push
stc
movsb
decl
pusha
out
xlat
cli
pushl
dec
ficomps
mov
loopne
mov
cs
negl
cmp
inc
or
lods
clc
fldenv
cmp
daa
filds
stos
rcrb
mov
cmc
enter
data16
add
lcall
jp
sbb
pop
inc
pop
incl
pop
push
out
daa
mov
cltd
add
and
or
ljmp
cmp
clc
movsb
add
popa
or
fldt
fwait
jmp
cmc
fbld
mov
addl
xor
dec
inc
decl
lods
jns
dec
div
lcall
out
push
clc
pop
int3
jmp
ljmp
subl
aad
clc
adcl
sbb
repz
sub
movsb
sti
outsl
jmp
dec
dec
mov
aad
xchg
jb
scas
sti
scas
mov
cli
sar
cli
pop
dec
popf
int
push
fwait
xchg
push
repz
lds
dec
ret
ja
jp
incl
mov
mov
jmp
add
decl
push
lcall
into
mov
jbe
call
popa
ljmp
inc
movsb
pop
mov
call
scas
fdivs
into
ljmp
call
std
fsubrs
mov
clc
loop
js
insb
pop
iret
pusha
pop
jo
xor
dec
xchg
jecxz
xor
sub
cmp
mov
aas
cmp
cmp
push
stos
adc
push
lods
xchg
rcl
divl
int3
dec
push
cld
lcall
fidivrl
push
xor
jne
test
push
aaa
decl
sub
cmpsl
cmp
stc
hlt
fwait
pop
fldl2t
outsl
push
pop
mov
jmp
mov
rclb
sub
inc
lods
mov
icebp
pushl
loope
in
incl
dec
je
push
sub
fiaddl
clc
rol
xchg
inc
adc
mov
fcoms
xchg
test
ds
or
or
lahf
xchg
into
outsb
sub
repz
pop
sbbb
ret
jmp
mov
adc
push
dec
inc
lcall
mov
lods
pushl
add
call
mov
mov
push
popa
jno
in
das
ljmp
pop
std
dec
call
add
imul
dec
mov
cmpsb
adc
fidivrs
pop
sbb
jge
call
stos
into
test
push
outsl
sub
add
jge
push
inc
gs
sub
decl
imul
pushl
xor
inc
and
mov
push
pop
test
stos
mov
pop
push
int
jnp
call
outsl
mov
mov
xor
push
or
fwait
call
jae
xor
orb
les
lcall
pushf
mov
ds
xor
outsl
sub
jb
bound
cltd
cmpsl
and
js
xchg
xchg
jg
pop
xor
pop
idiv
aad
adc
ret
lea
push
ljmp
dec
xchg
push
jmp
push
mov
shlb
sbb
dec
rorl
in
decl
inc
stos
hlt
pushl
shrb
cmpsb
ljmp
cmp
mov
or
mov
jmp
mov
pushf
cmc
ret
fmull
stos
popa
jo
jnp
dec
lcall
pusha
ficomps
clc
fwait
shrl
das
pop
aas
inc
and
dec
loopne
divb
mov
or
je
xchg
dec
dec
pushl
sahf
fs
cmpsl
push
clc
inc
dec
push
push
pop
filds
jmp
cmp
xchg
mov
lea
imul
loopne
clc
lahf
bnd
movsb
mov
into
ficoms
push
xchg
or
out
xchg
xor
decl
mov
sti
loop
push
sub
jae
pop
xchg
sbb
pop
mov
push
jbe
sbb
call
test
add
jmp
mov
enter
mov
add
sbb
in
xchg
jg
jbe
inc
idivl
loope
clc
sub
cs
push
cmc
jg
popa
cwtl
lods
dec
mov
test
cltd
scas
pop
je
and
adc
dec
inc
and
in
lcall
loopne
mov
aas
loope
or
daa
inc
cmc
repz
incl
mov
fdivr
into
cmp
lods
mov
jg
lret
push
aad
call
adc
cltd
cmp
int3
jg
ljmp
mov
cwtl
cli
mov
sbb
sti
ljmp
clc
adc
mov
mov
and
jmp
mov
outsl
out
cmp
and
mov
inc
cltd
cmpsb
adc
fldt
mov
inc
sar
mov
dec
fdivr
add
pop
xor
inc
jle
inc
aad
daa
test
call
pop
pop
cmpsb
or
enter
cmp
cmp
cmp
cmpl
cli
jle
cmp
push
sub
xchg
outsl
cmp
test
into
mov
sbb
stc
aam
shlb
and
or
popf
inc
xchg
mov
das
jge
mov
mov
xchg
jnp
adc
into
inc
add
dec
mov
or
into
lcall
add
sub
xor
mov
stos
xor
jmp
jg
loope
sbb
fmulp
mov
xchg
insl
pop
and
inc
mov
mov
fisubrl
mov
xlat
xchg
xor
cmp
outsb
stos
lock
call
ret
ljmp
sahf
rolb
mov
inc
shrb
cltd
sahf
nop
das
cmp
and
mov
ljmp
fnsave
pushl
jmp
mov
add
cli
pop
sbbl
mov
mov
mov
aaa
mov
xchg
jge
pop
mov
add
dec
sbb
and
cmp
cwtl
xchg
out
lcall
int
and
icebp
rcrb
in
sbb
gs
sbb
add
cmp
pop
add
mov
dec
push
cmp
dec
xchg
jmp
sub
decl
sbb
fmul
ljmp
and
and
and
mov
rolb
inc
mov
or
ljmp
aad
and
add
mov
daa
mov
jecxz
movsb
lcall
jmp
ret
sbb
hlt
dec
push
imul
ss
stc
mov
call
jg
leave
idiv
clc
mov
std
mov
pop
jg
mov
fcomi
inc
pop
out
xor
mov
movsb
mov
xchg
aam
repnz
decl
xchg
fcmovb
incl
ljmp
pop
adc
dec
xchg
roll
lea
mov
and
shlb
pushl
insb
push
pushf
xor
xor
rolb
sti
ja
lods
xor
xlat
and
mov
cmp
jl
outsl
push
sub
incb
fisubrs
pop
push
xor
push
sub
mov
pop
aaa
loopne
lcall
pop
jle
data16
call
add
sar
cmp
push
fsub
test
clc
add
sbb
pop
push
scas
lock
dec
pop
cmpsl
decl
test
fwait
and
incl
fbstp
cli
xchg
gs
hlt
and
fmul
push
pop
jg
fistpll
insb
lcall
outsb
std
ss
scas
sbb
mov
mov
pop
sub
adc
mov
mov
shr
lcall
or
jo
fiaddl
inc
incl
push
or
decl
inc
xlat
in
push
fnstcw
out
jae
sbbb
and
es
jnp
inc
scas
cltd
push
outsb
adc
je
addr16
push
pop
imul
scas
or
jg
push
mov
adc
dec
jl
adc
cmpb
loop,pt
and
mov
mov
stc
shrb
icebp
adc
in
test
incb
mov
sbb
arpl
shl
adc
and
jno
mov
mov
xor
cmp
inc
dec
sub
sbb
dec
fnstsw
stc
mov
xor
adc
adc
inc
jb
sbb
pop
subl
inc
int
out
adc
incl
mov
jmp
das
jmp
test
sbb
pop
mov
dec
int
cmp
repnz
cli
fidivrl
lea
xchg
cmp
loope
mov
add
cli
aam
aad
dec
xchg
int3
pop
mov
or
push
pop
cmpsl
incl
pop
cmp
mov
stc
adc
int
mov
pusha
leave
mov
jno
dec
inc
adc
test
mov
pop
fmul
js
call
or
cmpb
push
mov
or
and
test
out
call
addl
fst
push
enter
pop
test
dec
add
loop
mov
sbb
inc
lods
jge
push
mov
pop
decl
int
mov
lods
stos
xor
out
xchg
outsl
outsb
jg
xchg
inc
pop
bound
xchg
mov
mov
xchg
xchg
pushl
sbb
jnp
push
in
popa
adc
push
xchg
jns
ljmp
adc
xchg
fldenv
dec
jmp
mov
add
sti
pop
adc
push
adc
movsl
dec
inc
repz
mov
ror
lcall
nop
push
sbb
jns
aaa
test
call
mov
mov
repnz
xor
push
ljmp
dec
xorl
out
jmp
out
inc
nop
das
xor
cwtl
rorb
pop
icebp
out
rcll
jo
jnp
ljmp
imul
mov
call
push
inc
cmpsl
cmp
and
pop
sbb
rep
cmp
push
loop
mov
iret
imul
ljmp
sub
incl
outsb
daa
call
adcl
cmp
fmull
pop
dec
xor
test
adc
pop
lcall
out
sub
aad
mov
push
pop
or
add
mov
xchg
mov
sub
mov
jle
ffreep
fnstcw
mov
insl
dec
faddl
aaa
cld
pop
idiv
xchg
std
pop
sbb
lret
pushl
arpl
adc
jns
into
sub
mov
shlb
mov
mov
aas
add
sbb
and
hlt
jp
jecxz
jnp
ud0
sub
pmulhuw
fdivr
cld
es
daa
lret
xlat
out
std
ret
add
outsl
dec
decl
mov
inc
push
jb
cmp
clc
sti
sub
int3
sbb
popl
in
add
pusha
lret
push
decl
push
iret
pop
jge
enter
test
loope
clc
lods
or
outsb
inc
mov
clc
xchg
and
cs
jl
incl
adc
and
rcl
outsl
in
xchg
lcall
inc
fwait
mov
xchg
inc
cld
push
inc
sbb
in
lcall
mov
les
icebp
jo
outsl
mov
mov
sbb
decl
in
dec
inc
xor
call
xor
sar
in
mov
sar
arpl
cmp
cmp
fcmovu
icebp
jle
lds
les
arpl
mov
loop
lahf
call
mov
js
xchg
testb
sub
inc
mov
cmp
mov
adc
jmp
adc
fistpl
add
arpl
mov
pusha
lcall
test
addr16
addb
xor
pop
nop
or
pushf
inc
pop
jmp
ss
dec
icebp
adc
decl
je
cmp
sbb
jmp
cltd
push
sbb
sbb
dec
divb
mov
dec
mov
movsb
mov
pop
mov
push
push
pop
stos
mov
out
jecxz
lock
aam
inc
cli
subb
dec
pop
push
js
sar
and
mov
cmpsb
decl
inc
push
gs
imul
fwait
incl
xchg
push
cwtl
popa
arpl
sti
call
fwait
add
cli
fidivrs
or
pop
push
add
cmp
mov
call
scas
inc
lock
mov
inc
mov
and
jecxz
push
push
clc
jg
lcall
sbb
ja
add
adc
pop
ljmp
sub
call
pop
gs
dec
call
cli
xchg
xchg
pop
in
lret
movsl
popa
sbb
addr16
mov
int
mov
dec
outsl
mov
int3
lcall
cmp
mov
pop
push
ds
mov
in
cmp
outsb
arpl
sahf
dec
mov
pop
add
sbb
mov
xor
xchg
imul
pop
shlb
notrack
sbb
or
pop
fists
pushl
adc
sub
adc
push
push
icebp
xchg
mov
mov
cmp
cmp
add
push
pop
incb
popf
rcr
or
popf
jmp
lcall
inc
icebp
xor
pusha
jmp
mov
and
mov
int3
push
loop
or
cmp
sub
aad
imul
pop
call
cltd
sbb
imul
dec
std
daa
or
pushf
repnz
xchg
sbb
cmc
decl
in
mov
jmp
xchg
sub
cli
sub
decl
lcall
pop
and
mov
push
xor
shrb
inc
lahf
roll
mov
decl
jae
ljmp
add
jecxz
pushf
cmp
jo
jmp
test
bound
lcall
iret
and
mov
incl
aam
xchg
js
in
int3
push
xchg
loopne
push
neg
inc
and
sub
inc
or
pop
lcall
insl
subl
ret
add
imul
adc
das
fists
pop
call
nop
dec
jae
incl
mov
call
test
inc
icebp
dec
sub
mov
stos
push
push
call
sti
in
jmp
xchg
loopne
dec
stos
jae
sub
lcall
xor
popa
push
push
sub
mov
lds
jp
stc
ljmp
insb
mov
xor
add
push
subl
add
cmp
aam
push
cmp
sahf
adc
sbb
decl
into
xchg
mov
fldt
data16
mov
imul
outsl
stc
ja
decl
xor
orl
fsubrs
mov
shrl
hlt
mov
xchg
lods
pop
stc
pop
lret
or
sbb
aam
push
dec
dec
mov
out
dec
push
jno
aam
jns
js
xor
roll
cmp
mov
fstps
or
ret
icebp
and
decl
or
imul
mov
inc
pop
adc
jo
lock
or
sub
adc
inc
pop
idiv
sti
loopne
xchg
enter
jmp
cmovne
mov
or
push
ss
jecxz
dec
xchg
dec
inc
bound
sbb
imul
fmuls
cwtl
inc
mov
mov
call
aaa
dec
mov
dec
adc
ret
xchg
push
and
push
cwtl
xchg
cld
out
cmp
jmp
cld
mov
icebp
dec
in
aas
lret
je
jle
add
xor
xchg
sbb
mov
in
dec
enter
lcall
outsb
or
loop
mov
mov
cltd
push
jl
inc
lcall
cmp
mov
add
int3
adc
push
out
dec
ja
repz
push
iret
cmp
scas
mov
cmp
lcall
mov
inc
pushl
mov
adc
repz
xor
js
jge
xor
xchg
daa
xchg
inc
mov
push
jmp
pushf
xchg
outsl
stos
stc
subb
cwtl
pop
and
pushl
mov
mov
xor
sub
call
mov
stc
mov
lea
add
lock
dec
ljmp
sbb
loopne
decl
cmpl
push
pop
inc
decl
jae
sub
and
add
xchg
push
push
and
and
mov
jle
xchg
ss
insb
scas
jns
inc
ljmp
push
push
jmp
mov
pop
mov
iret
subb
lods
rolb
std
scas
jmp
mov
test
mov
mov
dec
xchg
fmuls
imul
mov
pop
outsl
jbe
das
fs
sub
pushl
adc
mov
cmp
push
jg
imul
sub
iret
mov
inc
xchg
ljmp
jp
pop
icebp
cmp
lock
jae
jg
jge
std
lods
mov
movsb
iret
pushl
mov
in
sbb
mov
cwtl
pop
or
popa
adc
repnz
adc
jb
pop
add
jp
push
mov
adc
cmp
push
dec
idiv
les
outsb
xchg
or
ja
mov
cmp
out
mov
dec
outsl
mov
ja
call
push
loop
popa
push
or
insb
jmp
lcall
outsb
add
addr16
cltd
scas
adc
popf
fs
add
ljmp
jae
add
push
xchg
arpl
push
out
das
mov
jbe
cmpxchg
xorb
xor
mov
cli
push
pop
ljmp
incl
sub
add
aam
xchg
fsubrs
pop
mov
pop
pop
xchg
daa
scas
pop
push
iret
aam
xor
jbe
dec
push
and
mov
sub
test
xchg
and
push
xchg
aaa
sarb
ljmp
int3
sbb
cmc
mov
sbb
or
inc
mov
or
jbe
pop
les
mov
mov
or
mov
stc
mov
pop
cwtl
clc
lcall
push
ficomps
jno
jns
push
mov
lock
add
xchg
inc
cmp
incl
inc
cmc
mov
lcall
mov
stos
dec
mov
inc
sbb
xchg
pop
hlt
cmp
std
cmp
and
inc
jmp
insb
inc
and
jnp
mov
into
pop
call
add
jp
movsb
incl
aaa
pushl
inc
cmp
sub
test
cmp
inc
and
cmpsl
outsb
call
xor
sub
mov
cld
outsl
push
icebp
cmpb
mov
mov
movsb
or
call
daa
fiaddl
aad
adc
mov
pop
xchg
lods
testl
push
jmp
popa
jp
sbb
jnp
xchg
iret
xor
push
jne
jecxz
std
cmp
add
xor
push
inc
imul
jns
inc
clc
out
xor
dec
outsb
out
imul
jns
dec
pop
lret
aam
clc
out
loope
dec
mov
pop
jo
or
jecxz
cmpl
pop
insb
outsl
add
pop
mov
jmp
adc
jns
push
sbb
mov
and
or
xchg
push
inc
fmuls
rcll
test
aam
mov
int3
dec
xor
decl
js
xor
mov
jo
aam
mov
lea
pushl
mov
lock
test
xor
pop
jge
pop
int
in
sub
fistps
out
cld
out
mov
xlat
sbb
pop
pop
pushl
stos
mov
cli
sub
fisttps
sti
mov
adc
fnsave
cmp
mov
aas
jp
in
push
cmp
pop
jnp
xchg
xor
leave
xchg
decl
inc
in
cltd
push
cmpl
jg
push
bound
cli
lods
and
sub
cmp
incl
insl
add
mov
imull
push
scas
jbe
dec
clc
scas
popa
or
or
inc
xchg
push
cmp
cmp
je
fildl
push
aam
adc
je
fnsave
sbb
pop
push
pop
cmp
jbe
jb
add
cmp
adcl
jo
mov
lds
mov
lods
push
jnp
fwait
test
sbb
daa
incl
clc
sub
mov
mov
sbb
xchg
ljmp
or
enter
repnz
cmpsb
fcomps
hlt
mov
jge
in
sbb
jmp
push
xchg
fidivrs
shrb
inc
push
repz
add
adc
ficoml
mov
fisubs
dec
lahf
pushf
pop
in
sbb
add
xor
cld
rcrl
in
sub
scas
lcall
cld
add
lods
cmp
fs
insl
sub
outsl
sub
ret
inc
lret
adcb
in
jmp
sahf
lds
sub
popa
xchg
in
push
ret
inc
mov
ficomps
mov
and
dec
dec
cli
out
sub
aam
jbe
sbb
and
mov
cld
insb
xchg
mov
enter
mov
insl
jnp
ja
pop
ljmp
imul
aam
jnp
push
rep
cwtl
mov
rolb
pushf
movsb
test
fildl
jg
fwait
cmp
call
xchg
sub
mov
popf
sbb
jae
jp
fwait
ds
mov
sti
push
jg
pusha
testl
sahf
decl
dec
imul
jge
xchg
inc
das
mov
loope
push
mov
or
jl
mov
jmp
aaa
lock
fs
xlat
ljmp
out
shrb
mov
sbb
sbb
cli
and
jns
cs
pop
mov
lds
ja
add
aaa
inc
sti
dec
mov
movsl
lret
mov
out
cmpsl
aaa
mov
push
in
test
mov
lcall
xor
popa
lcall
dec
or
out
xchg
jnp
push
add
incl
adc
jns
inc
pop
rcrb
mov
push
cld
jmp
mov
lods
fdivs
loope
loop
fists
call
mov
adc
lods
inc
cmp
stos
jnp,pt
and
adc
insb
dec
add
jge
cli
xchg
cmp
dec
mov
push
sahf
rcrl
ja
cli
push
push
aas
andl
jle
xchg
repnz
rcl
out
in
inc
out
cmp
pop
mov
pushl
aad
adc
jo
js
mov
gs
sar
mov
lahf
f2xm1
out
xchg
fildll
sbb
test
dec
mov
sbb
and
pop
cmpb
jmp
inc
aad
scas
ret
dec
and
or
neg
sbb
stc
push
decl
mov
adc
inc
mov
fsubrs
incl
scas
fldl2t
pusha
push
cmpl
incl
mov
sar
adc
jne
xlat
push
mov
addl
jne
cmpsl
scas
loopne
cmp
fildll
movsl
stos
rcr
decl
fwait
jnp
cld
sub
into
scas
aam
loopne
aam
fistps
cmp
jmp
mov
and
sub
adcl
dec
pop
dec
insl
pop
shrl
inc
cmp
jnp
cli
call
lock
inc
inc
dec
mov
jno
cmp
xor
negb
sub
pop
loopne
insl
dec
pushl
jb
jo
sbb
xchg
xchg
and
sub
int3
mov
push
call
xor
or
lcall
and
insb
mov
inc
mov
add
adc
sub
pop
pop
adc
stos
dec
jo
xchg
sbb
movsl
dec
test
jns
pop
fwait
push
pop
scas
test
cld
pop
adc
ret
outsl
lods
inc
stos
dec
add
jnp
jbe
clc
std
pop
inc
cli
xor
pop
lds
push
push
fmuls
popl
jb
jnp
popa
lcall
lods
scas
push
xchg
pop
push
dec
das
shll
mov
and
jae
xor
inc
mov
jns
mov
cmp
pop
jne
ljmp
repz
and
jo
xchg
dec
stos
in
push
cmpsb
adc
inc
mov
icebp
in
lods
dec
imul
push
push
add
sbb
add
sub
mov
inc
lret
outsl
icebp
mov
adc
jnp
mov
shrl
lock
cmp
cltd
iret
loopne
jmp
pushf
cmc
pop
adc
inc
ss
mov
mov
cs
mov
decl
lahf
jns
jmp
cs
adc
inc
and
mov
xchg
cli
pop
pushl
sub
cmp
jmp
scas
scas
out
hlt
push
jg
mov
in
stos
pushl
jp
cld
shrb
cmp
jae
adc
jg
push
push
sbb
outsl
das
mov
cmp
pop
mov
orl
pop
push
ja
in
jns
roll
lods
lahf
shr
lea
sub
fwait
jne
cmpsl
in
incl
pop
jae
push
mov
push
mov
xor
lahf
mov
dec
lods
stos
jmp
dec
lods
fxch
hlt
cmp
jae
cmp
xor
lods
xor
mov
mov
cmp
movsl
aam
mov
jg
xchg
fisubl
mov
rolb
outsl
fstpt
jne
push
aad
pop
lock
pushl
sti
stc
dec
dec
add
or
push
mov
test
cmp
push
adc
scas
pushl
pop
in
cli
iret
inc
ja
ret
add
jne
negb
pop
cld
fiaddl
add
mov
ja
jl
imul
imul
movsl
insb
mov
adc
push
mov
sbb
decl
push
insl
cli
cli
sub
xchg
call
xchg
adc
iret
jo
adc
out
lcall
pusha
stos
ljmp
inc
mov
cmc
dec
or
stos
outsl
shlb
incl
jo
ja
inc
out
ljmp
cmp
call
sahf
mov
mov
idivl
test
incb
iret
incl
call
pop
push
pop
out
mov
cmp
in
xchg
push
xor
cmp
adc
jecxz
add
cmp
or
push
mov
adc
xchg
and
int3
sub
mov
mov
loop
push
mov
int3
jp
pop
cmpsl
push
pop
ljmp
jl
scas
mov
jge
lock
lea
outsl
rolb
xorl
jo
dec
jmp
and
outsl
scas
rcrl
mov
xchg
lahf
dec
cwtl
ljmp
fdivr
ljmp
lods
dec
xchg
cltd
cwtl
push
ljmp
mov
sbb
std
jmp
cmp
jp
mov
jne
mov
mov
inc
sbb
mov
fdivrs
sub
lea
cmpsl
fsubs
sub
js
adc
test
dec
arpl
xchg
mov
sub
xor
xor
lds
incl
mov
push
xor
sbb
pop
out
cmp
push
sub
fmuls
aaa
sub
push
fcomi
jg
lret
int
cmc
jnp
cld
sub
dec
jge
in
xchg
inc
push
ret
fidivrl
rclb
xor
push
das
jnp
mov
rolb
lahf
insl
fisubl
ret
gs
cmp
call
pushl
fsubs
decl
sarl
jbe
xor
mov
push
push
push
xchg
sub
fisubrs
arpl
outsl
push
dec
push
lock
fisubl
ljmp
mov
dec
cwtl
inc
std
decl
gs
xchg
imul
test
jl
dec
pop
push
mov
sti
fstpl
scas
stc
sbb
sbb
push
cmpsl
adc
push
stos
stos
pop
lods
xchg
cmpl
adc
aas
push
mov
pop
or
or
icebp
xlat
scas
sbb
sub
push
lock
mov
add
ljmp
cmpsl
sahf
fs
imul
outsl
add
push
add
sbb
cmp
xchg
cld
sub
ljmp
add
cli
push
stos
jns
push
push
jbe
inc
imul
cld
lds
pushf
jae
sbb
cld
xchg
loopne
mov
pop
outsl
xor
pop
hlt
les
fs
push
add
lret
sbb
stc
jge
mov
pop
pushl
and
cmp
mov
fbld
out
scas
mov
cmp
test
out
sbb
push
xchg
incl
adc
movd
mov
or
scas
xchg
and
call
dec
out
and
loop
ret
add
jp
incl
ret
pushf
jne
mov
mov
and
jle
mov
daa
xchg
fnsave
mov
cmp
adcl
fistl
pushf
dec
sbb
ret
jbe
jns
jecxz
shlb
adc
ss
cltd
sub
nop
scas
test
push
inc
jae
ljmp
xor
push
je
mov
int
ljmp
pop
push
shr
outsl
adc
fnsave
push
js
push
sub
jg
hlt
inc
jb
sti
cmp
push
sbb
pop
das
jg
cmc
in
clc
inc
popa
mov
nop
xchg
jne
lea
gs
sbb
into
aas
roll
xor
cwtl
testb
testb
cltd
pop
xchg
xor
cmp
cwtl
lcall
jge
push
jg
loopne
mov
scas
push
rcrb
jb
mov
inc
mov
stos
pushl
xor
icebp
cmp
cld
das
jns
ljmp
lock
jl
cltd
nop
icebp
in
pushf
outsl
sub
fs
stos
loop
and
arpl
fmull
push
ljmp
jbe
mov
adc
sti
adc
pop
push
jecxz
not
jg
pop
sub
stos
test
sub
lahf
adc
add
jns
cmp
imul
jg
push
cmc
add
std
cmp
int3
outsl
in
lods
addr16
in
rcrl
xor
aad
fdivrl
fldl
seto
dec
incl
push
sarb
mov
xor
ljmp
ljmp
xor
js
icebp
pmullw
outsb
das
push
jbe
xchg
pushl
xor
lcall
inc
and
leave
decl
mov
push
call
mov
pop
decl
out
lock
inc
push
lret
daa
mov
ljmp
div
xchg
or
lret
cmp
data16
popf
inc
rcl
ja
adc
xor
dec
test
mov
std
pop
addr16
sarl
push
mov
cltd
pop
lods
imul
imul
dec
call
push
ljmp
ljmp
pop
pop
sbbb
cmpsb
stc
xchg
inc
push
daa
mov
test
pushl
cmp
sub
lcall
dec
jb
push
cwtl
dec
into
decl
adc
enter
decl
ret
shlb
mov
imul
scas
gs
pushl
pop
jmp
decl
xchg
je
sbb
cli
js
jecxz
fbstp
jb
les
test
jns
test
les
pop
adc
cmp
jae
popf
adc
jae
jo
nop
mov
leave
mov
call
jl
pushf
daa
leave
hlt
push
stos
cmp
arpl
inc
dec
enter
and
mov
nop
int
lahf
lahf
sbb
adc
sahf
pop
aad
stos
stos
push
jg
outsb
es
lcall
das
xor
bnd
mov
ds
out
xor
shlb
or
dec
lods
sar
int
sub
cmp
inc
lea
push
gs
jge
ljmpw
cs
mov
js
cmp
sub
hlt
push
rcll
mov
sti
inc
jmp
jg
lahf
inc
add
mov
or
push
sub
mov
cwtl
add
clc
xor
and
loopne
jg
cmp
xor
inc
jle
cld
cltd
call
cmpb
sub
sbb
cmp
mov
and
popa
jge
in
insl
lcall
sbb
ljmp
push
out
aaa
jecxz
filds
and
or
xor
mov
fistpll
enter
insl
cmpsl
out
ljmp
dec
int
dec
cmp
jmp
mov
xchg
sbb
ljmp
adc
loope
add
dec
mov
enter
rcll
mov
iret
outsb
call
adc
test
sbb
test
sbb
pop
jnp
mov
sub
cwtl
jmp
fwait
sub
mov
fdivl
cs
jno
addr16
in
fwait
mov
push
cmc
jmp
cwtl
into
and
mov
shrl
push
add
icebp
push
jmp
jg
mov
dec
rcl
sbb
mov
dec
jge
into
cs
movsb
clc
inc
push
and
in
aaa
dec
cmp
mov
pop
sar
xchg
adc
xor
das
sar
in
arpl
cltd
pop
xchg
lods
stc
xchg
xchg
shrb
mov
dec
xchg
xchg
pop
in
or
dec
push
push
mov
cmpsl
mov
call
stos
lcall
push
sbb
rcrl
idivb
stos
mov
ds
pop
ss
ret
push
pop
jg
das
sbb
jb
sub
bound
loope
inc
sbb
jmp
push
cli
adc
popa
mov
data16
ljmp
inc
lods
scas
aaa
or
sub
cs
cmp
mov
sub
ja
ficoml
mov
pop
pop
mov
jecxz
sub
jg
sbb
pop
jg
ljmp
lahf
push
into
cmpl
int
or
xchg
stos
lcall
pusha
outsb
test
mov
add
aas
dec
test
jne
inc
xor
push
repnz
cmp
cmp
aam
jmp
or
icebp
inc
adc
sti
jg
icebp
xor
fwait
rclb
dec
decl
insb
jae
int
cmp
pop
jg
push
mov
lea
movsl
mov
movl
call
mov
mov
inc
jmp
push
imul
jb
rcr
sar
call
lcall
sar
cld
scas
pushl
sbb
decl
mov
test
cmc
sub
stos
xchg
mov
jg
dec
pop
insb
and
cmp
mov
mov
xor
and
ret
adc
xchg
data16
and
mov
xchg
inc
push
xchg
mov
jecxz
and
or
shlb
fsts
mov
add
pop
sub
cmp
jmp
daa
icebp
stc
pop
cli
pop
outsb
mov
imul
mov
ss
push
shrb
dec
ljmp
xchg
daa
in
out
stos
je
call
jmp
sub
shrb
jmp
jg
sub
fwait
ret
jg
sti
imul
sti
dec
pop
arpl
sar
test
int3
adc
daa
decl
repnz
push
bound
lds
lret
mov
shlb
loope
aas
or
decl
iret
retw
and
mov
adc
arpl
test
das
add
cli
dec
inc
loope
or
aaa
adc
fs
push
pop
jo
mov
shl
add
adc
jae
inc
out
call
mov
dec
mov
les
leave
jns
mov
decl
rclw
mov
mov
sub
out
dec
nop
in
xor
fcmovnb
add
mov
es
orb
loopne
xlat
cmp
dec
fistps
lcall
cmp
jg
fsubr
pop
or
lcall
mov
lods
lock
lcall
cld
xor
std
rcrb
stc
fdivr
xchg
decb
jbe
xchg
xchg
pop
cli
lock
dec
jno
das
adc
cmp
jl
and
testb
sub
mov
inc
ljmp
inc
lret
cmp
xchg
jl
sub
xchg
xor
xor
inc
into
push
cs
loopne
mov
out
ss
lock
es
ljmp
jbe
inc
imulb
out
loopne
filds
xchg
xlat
or
les
lock
jge
mov
mov
mov
aas
pop
and
and
cltd
sahf
std
and
mov
mov
les
imul
pusha
cmp
push
dec
das
inc
call
mov
incl
sbb
cmc
push
jecxz
mov
insl
lcall
sbb
mov
push
xlat
cltd
push
enter
jge
dec
sub
dec
stc
pop
pop
and
and
dec
rcl
and
or
xor
sar
outsl
decl
or
sti
dec
cmp
sbb
les
push
sar
xlat
adcl
das
mov
dec
dec
incl
mov
adc
mov
add
incl
push
xchg
ja
jmp
pop
insl
fdivr
xor
and
push
in
dec
idiv
cmpl
movsb
pop
pop
pop
fiaddl
lock
dec
sti
pushl
or
or
jecxz
pushf
xchg
cli
dec
fs
mov
sbb
mov
and
stos
dec
ljmp
mov
xor
cmp
sbb
jmp
outsb
lods
pop
or
mov
out
mov
add
adc
ljmp
pop
push
pop
pushl
push
ja
adc
cmp
fxch
in
mul
mov
es
xchg
sbb
enter
jle
test
and
jge
sub
incl
jmp
int3
push
negl
xchg
sahf
ja
push
bound
sbb
lods
or
loopne
jmp
jb
test
xchg
xchg
sarb
push
pop
cli
aam
mov
mov
adc
fdivrp
pop
jg
lret
cmp
mov
outsl
mov
decl
cli
add
incl
sub
lock
jae
clc
and
push
cmpsl
adc
insb
pop
adc
or
inc
and
call
pop
xchg
rcll
jmp
cli
mov
std
es
and
push
pop
das
andb
jl
mov
enter
push
nop
jmp
mov
and
rep
aam
popa
lahf
mov
fnstenv
cmp
jle
cmc
dec
lea
js
push
decl
inc
hlt
sbb
fs
or
sbb
jbe
ljmp
addr16
or
or
xor
ret
mov
cli
das
mov
jmp
push
cmpb
xchg
mov
fwait
mov
mov
out
leave
push
test
jmp
cmpsb
imul
xlat
mov
xor
movsb
mov
inc
add
popa
jg
jne
dec
cs
mov
scas
and
fstps
dec
push
sub
std
je
push
mov
cmp
inc
icebp
jmp
clc
pushl
cmp
mov
testb
push
push
fiadds
jl
add
or
mov
push
inc
add
mov
xchg
imul
push
lods
xchg
push
jmp
lods
out
loopne
pop
ret
out
push
fwait
lea
outsb
lret
add
rclb
mov
popa
outsl
mov
mov
stc
adcb
mov
adc
loope
outsl
or
aam
jmp
jp
push
and
adc
jmp
mov
popf
je
mov
dec
fsubr
add
incl
jo
aad
push
lahf
cmpsl
std
std
push
xor
mov
pop
in
sbb
fistps
nop
add
and
ljmp
lods
cli
int3
jle
xchg
jmp
out
inc
push
lock
popa
xchg
das
int
jecxz
call
popa
mov
ja
out
inc
aam
mov
or
push
fs
pop
movsl
mov
shrl
enter
mov
loop
push
dec
roll
mov
push
sub
outsb
hlt
jmp
dec
dec
adc
dec
or
sbb
and
mov
test
std
aas
arpl
pop
fstps
pop
adc
sub
sbb
adc
dec
pushf
movsl
iret
callw
fstpl
jbe
arpl
dec
cvtps2pi
pop
ljmp
or
ja
inc
or
sbb
mov
insb
mov
lods
je
jns
call
movsl
add
shrl
or
mov
push
inc
js
rclb
test
pop
icebp
ds
call
jno
stc
out
and
decl
test
cs
repz
sbb
xchg
inc
lock
sub
stos
jne
xchg
outsb
dec
xchg
lcall
mov
pop
pop
andb
call
lea
les
leave
jmp
cmp
lret
xor
jl
jle
sbb
arpl
mov
jg
in
mov
pop
xchg
push
or
int3
mov
add
rcl
iret
aam
cmp
mov
in
add
in
xchg
mov
add
icebp
test
leave
push
stos
add
mov
jmp
mov
pop
jno
and
fdivrs
add
aas
jle
cmp
pop
pop
fbld
cmp
push
and
adc
imul
popa
xchg
mov
incl
je,pt
jb
and
nop
jbe
xchg
cmp
and
decl
in
cwtl
incl
bound
mov
push
call
data16
fisttpll
push
add
adc
clc
in
std
jae
pop
add
push
push
or
cmp
pushl
in
fmulp
sub
repnz
push
add
fwait
dec
mov
loope
std
daa
push
cmc
test
call
jnp
leave
pop
clc
jle
xchg
xor
test
pop
mov
jbe
adc
mov
in
push
pop
ljmp
pop
xor
mov
xor
adc
and
sub
cs
std
cltd
out
xchg
xchg
mov
mov
jl
pop
push
scas
shl
mov
sub
push
out
xor
adc
jne
or
mov
orb
jnp
mov
bnd
orb
nop
mov
mov
add
enter
push
ljmp
adc
ret
jbe
ljmp
pop
inc
ljmp
bound
call
cmc
outsl
mov
mov
call
mov
decl
and
adc
cs
andl
gs
adc
movsl
add
and
sarl
call
hlt
mov
or
pusha
rclb
add
insb
mov
outsl
mov
dec
outsb
ljmp
adc
dec
push
inc
mov
jb
icebp
jge
mov
je
lock
int
jnp
xchg
jecxz
jmp
sarb
pushl
cs
dec
outsb
aad
call
divb
pop
mov
incl
pop
jecxz
mov
scas
add
jbe
call
cli
je
sahf
mov
gs
fisttps
adc
rcll
xchg
dec
in
pop
mov
xchg
inc
xor
pushl
pop
and
cmpsl
jns
in
stc
xor
mov
gs
sbb
call
les
or
mov
lcall
add
ljmp
sub
sbb
iret
mov
repz
int3
aam
jmp
cld
js
xor
idivb
fidivl
mov
lock
cmp
jb
pop
inc
push
decl
rol
scas
aas
jmp
pusha
sub
dec
add
ficomps
jmp
pop
sbb
mov
fs
jb
mov
dec
mov
rcrb
add
xchg
dec
mov
shll
gs
adc
mov
das
inc
cli
cltd
out
push
inc
fsubrl
aas
or
mov
pushl
lods
sbb
mov
insb
in
jmp
sub
adc
pushl
cmp
adc
mov
push
jo
pushl
mov
inc
ret
cltd
rol
andb
mov
jg
inc
sbb
adc
inc
pushl
das
sti
mov
stc
mov
adc
adc
lds
push
sub
sahf
jmp
dec
sahf
adc
and
inc
lock
loop
aad
push
imul
hlt
xor
std
test
sbb
mov
sbb
data16
out
inc
cmovbe
jmp
jg
cmp
sub
punpcklbw
jmp
les
xchg
out
shl
ljmp
sbb
adc
jl
jp
jmp
add
icebp
pop
dec
or
repz
mov
adc
lahf
movsl
dec
lcall
mov
test
cmp
push
cmp
sub
add
mov
xchg
out
ljmp
pop
xchg
decl
or
inc
push
push
mov
jl
mov
mov
push
clc
int
lock
loope
jmp
mov
xchg
add
jo
cmc
or
xchg
dec
shl
pop
push
pop
jmp
stos
scas
std
decl
xor
xchg
into
mov
inc
mov
rcrb
dec
xchg
lea
jne
sahf
xchg
ljmp
pop
pop
incl
lcall
decl
inc
or
lcall
into
data16
push
mov
nop
mov
or
mov
mov
insl
jo
dec
or
mov
push
repnz
xchg
test
ljmp
stos
repz
dec
jnp
xor
xchg
lods
sbb
inc
cltd
cmp
mov
sahf
pop
je
sub
call
testb
xchg
mov
scas
repnz
pushl
pop
lcall
test
jmp
push
lret
popf
dec
cli
cld
fs
sbb
mov
repnz
inc
int3
aam
mov
lods
insl
cmc
loop
sub
outsl
in
xor
call
pop
pop
outsl
pop
in
cmp
fidivrs
cmp
xchg
mov
xchg
cmp
pop
fcompl
ss
dec
push
aam
out
insb
arpl
mov
cmpsl
mov
or
inc
xchg
inc
adc
fisubrs
rcr
inc
sub
gs
xchg
ljmp
mov
push
addr16
jno
jmp
and
out
xor
mov
mov
loop
mov
aas
out
jbe
pop
jecxz
daa
xchg
out
mov
mov
mov
add
add
mov
dec
aas
xchg
loop
add
and
and
cld
mov
mov
addr16
je
cmp
inc
mov
cmc
les
lcall
pop
dec
or
and
cmc
mov
and
inc
mov
xlat
pop
pop
mov
insb
xor
xchg
inc
iret
pushl
xchg
scas
outsb
jmp
call
int3
pop
pop
mov
ret
push
in
je
push
shrb
stos
sub
add
shll
and
xchg
pop
addr16
into
repz
fisubl
lret
sbb
sbb
fdivr
out
cltd
mov
jge
inc
fsubs
rcrb
jecxz
fildll
mov
pop
rcrb
xchg
test
sahf
inc
and
mov
outsb
ljmpw
jecxz
iret
add
or
dec
xchg
sbb
xchg
test
das
mov
repnz
sub
mov
lods
mov
xor
jmp
pusha
mov
dec
xchg
jp
inc
mov
xchg
shlb
incb
push
in
xor
and
pop
push
adc
idivl
sti
xor
xor
jns
push
les
xor
ret
std
sub
pop
mov
sub
ja
decl
sbb
stos
jno
rol
cmp
daa
jno
push
jecxz
stc
jg
push
mov
rol
xchg
pop
inc
push
mov
enter
int3
xchg
cltd
jo
pop
inc
lock
push
mov
or
in
adc
mov
sbb
push
mov
es
aad
jmp
cmpsb
jle
xor
mov
mov
popa
jle
mov
out
fcomps
in
or
jmp
mov
clc
js
nop
fdivl
lds
push
int
fwait
jmp
dec
sbb
rclb
xchg
xchg
shlb
mov
cmp
add
cmp
es
lea
nop
cwtl
cmp
das
jo
lcall
mov
test
push
std
das
jne
jne
inc
and
test
jmp
mov
popa
push
push
arpl
iret
mov
ljmp
insb
push
pop
lea
add
sbb
mov
mov
add
dec
cmp
mov
dec
mov
cld
and
in
std
outsl
mov
sbb
int3
and
or
xchg
ljmp
jecxz
fsub
lcall
loope
pusha
jmp
in
pop
cmpsl
mov
or
mov
mov
xchg
jge
mov
xchg
dec
mov
sbb
das
pop
mov
sahf
or
stc
aam
sub
pop
or
aam
mov
scas
outsl
pop
test
das
fidivs
push
insl
adc
cli
xor
cmp
shrb
push
call
adc
scas
lret
bound
andl
pushl
loope
mov
jmp
jb
mov
orps
decl
cmpsl
les
out
outsb
loop
jmp
pop
add
sbb
lods
aas
subb
mov
call
jno
push
call
in
outsl
popw
push
ljmp
lds
xor
iret
sbb
cmp
lcall
lods
cld
dec
add
cmp
mov
in
repnz
add
movsl
sub
adc
pusha
fisttps
arpl
clc
fisubrs
decl
sahf
imul
out
mov
test
or
xchg
fldt
sahf
dec
call
push
rolb
xlat
aad
mov
pop
lcall
jp
or
int3
push
add
hlt
inc
mov
aaa
cli
add
jle
adc
jge
mov
and
fstpl
cmc
pushf
leave
dec
jg
jg
add
faddl
lods
push
push
stc
fs
xchg
lock
or
outsb
out
arpl
pop
or
mov
sub
jnp
fnstsw
xor
add
mov
xchg
incl
ficomps
ficoms
test
jo
mov
xor
decl
dec
data16
mov
jl
fistpll
mov
lret
cmp
mov
mov
xchg
in
loope
cmpsb
into
cmpsb
popf
ljmp
xchg
insl
cmpsl
jmp
jbe
jmp
inc
jbe
cmp
std
adc
jge
add
pop
fldenv
sbb
bndstx
inc
sbb
test
mov
pop
lods
sub
enter
rcrl
mov
add
sub
sahf
lcall
pop
popa
rcrl
or
sbb
push
sbb
pop
add
incl
jmp
pop
push
jmp
iret
movsb
inc
inc
inc
cld
mov
subl
sbb
sar
enter
sbb
mov
fwait
incl
mov
rcrb
fstpt
sbb
pop
fstpt
hlt
aad
lcall
pushl
jge
imul
rcr
and
popa
js
loopne
inc
jmp
mov
psubusb
insb
ret
jnp
cli
icebp
mov
xorl
outsl
jb
fstpt
add
dec
lock
in
mov
dec
out
push
dec
pop
imul
xchg
mov
mov
int
call
sbb
adc
push
imul
lds
sti
outsl
or
mov
das
or
xchg
lock
loope
mov
lods
push
decl
in
cmp
das
inc
dec
jne
xor
call
gs
mov
int3
cld
sbb
mov
fsub
decl
jae
sub
jb
out
mov
in
push
js
ds
xchg
pop
jmp
shr
mov
icebp
ja
sbb
out
sbbl
ljmp
cmp
mov
cmpb
popf
aas
aaa
pop
sahf
mov
stos
xchg
data16
xor
jmp
fisubs
cmp
dec
or
insb
jno
hlt
sbb
sbb
xor
dec
aad
ljmp
shl
mov
out
cmpl
ret
mov
and
and
mov
cltd
sti
mov
inc
je
fnstsw
clc
std
lods
mov
lret
mov
mov
add
xchg
and
les
xchg
call
pop
frstor
fildl
shrl
rcll
iret
adc
ds
pushf
adc
sbb
xchg
fwait
inc
sti
std
xchg
sarl
das
mov
cmpsb
dec
imul
decl
fsts
jb
cs
das
fwait
stos
xor
pushl
pop
cltd
xchg
mov
xchg
iret
mov
cmp
ret
mov
push
jl
mov
pop
jecxz
or
or
rcrb
mov
sbb
decl
aad
or
test
incl
aaa
aas
xor
jae
std
dec
mov
or
decl
in
in
jno
cwtl
push
push
fstp
adc
fmulp
cld
sti
jge
jbe
lcall
pop
incl
sti
inc
call
jmp
bound
jg
jae
adc
clc
push
mov
repnz
js
sub
jae
jb
inc
dec
push
fidivs
lea
ljmp
or
inc
mov
pop
jge
outsl
cmp
icebp
decl
imul
sarb
in
cli
pop
lods
dec
lcall
pop
mov
outsl
inc
xorl
sbb
jbe
pop
sbb
sbb
call
scas
dec
pop
pop
loop
icebp
cld
mov
mov
cltd
sbb
or
icebp
mov
mov
xchg
add
dec
xchg
icebp
fists
mov
cmp
xchg
ret
call
ljmp
pop
lcall
incl
pop
push
push
push
lods
mov
je
std
in
ljmp
outsl
jb
incl
in
les
gs
jae
roll
ss
jg
dec
mov
push
pop
std
sbb
ret
aad
mov
mov
movsb
or
popa
pop
add
stc
scas
ss
cld
inc
cs
shll
icebp
je
cld
mov
loop
movsb
add
icebp
push
adc
xor
and
inc
lahf
and
xor
pop
sbb
ds
clc
add
pop
mov
mov
dec
sti
divl
mov
cltd
out
adc
sahf
ljmp
clc
clc
jo
pop
xchg
aaa
or
sub
inc
mov
cmp
icebp
xchg
push
sub
or
outsb
ljmp
or
fistpl
int
movsl
mov
out
ss
scas
cwtl
mov
fcmovb
dec
lcall
lods
popa
xor
mov
test
clc
mov
cltd
lcall
rorb
in
sbb
and
in
push
push
rcrb
sbb
cmp
out
jne
dec
inc
cmp
ljmp
dec
cmp
out
pop
test
fbld
add
inc
mov
lret
incb
dec
aam
add
std
sarl
jnp
bound
mov
mov
push
xor
xchg
sbb
push
enter
ljmp
pop
sub
test
add
dec
and
sbb
outsb
sub
mov
push
ret
fwait
negl
pop
push
mov
jge
shlb
xlat
stos
jg
loope
and
sti
lods
repz
inc
xor
scas
pop
repnz
and
pop
gs
sbb
ljmp
and
dec
out
adc
dec
leave
pop
sub
mov
pop
mov
rcll
stc
or
dec
cs
dec
push
test
insb
scas
mov
lcall
js
jne
jmp
sub
add
push
cltd
dec
sbb
jmp
push
jmp
cmpsl
mov
dec
mov
std
lcall
decl
push
dec
sub
aaa
sahf
mov
push
loopne
pop
loop
jnp
call
sub
and
push
mov
mov
in
mov
push
lcall
ret
jg
mov
xchg
add
xchg
in
loope
push
pushl
push
repnz
mov
jmp
pop
aaa
adc
test
add
lahf
fdivr
push
ljmp
bound
test
nop
push
mov
xor
mov
sbb
push
pop
mov
jmp
add
mov
adc
jl
lret
add
jmp
outsl
sbb
jge
jnp
cmc
push
mov
stos
mov
sbb
outsl
or
ljmp
lahf
outsb
decl
xor
pop
sub
cld
repz
mov
jmp
stos
fchs
and
xchg
fsubrl
mov
push
imul
xchg
fbld
or
les
ud2
pushl
lods
test
les
or
test
push
inc
out
add
decl
lea
stc
lea
jg
adc
fcoms
jmp
jg
adc
jb
jb
lds
ds
or
add
jmp
int
xchg
mov
pop
xchg
int
clc
outsl
cmp
in
lods
movsb
ret
inc
mov
rcrb
push
dec
mov
mov
les
loopne
push
xor
out
cltd
int3
mov
add
movsl
inc
mov
les
lcall
dec
adc
lahf
mov
dec
jno
jnp
test
or
pop
or
adc
les
cli
pushl
je
leave
call
xor
jo
lock
push
ljmp
jns
incl
je
mov
adc
inc
or
repz
xorb
sub
in
imul
adc
out
mov
mov
jae
fimuls
jbe
aaa
and
fists
cmpb
adc
or
adc
dec
cld
or
ret
scas
and
pop
pop
pushl
addr16
lcall
or
pop
pushl
add
mov
xchg
push
fs
mov
inc
xchg
incl
sahf
fadd
dec
in
andl
lcall
outsl
sbb
repz
jmp
or
jmp
adc
stos
ljmp
or
sar
jl
lea
testl
inc
xchg
mov
lcall
sahf
cltd
mov
push
xchg
mov
xor
xchg
xor
mov
inc
mov
inc
daa
pop
pusha
inc
call
dec
cmc
push
fdivp
lcall
push
mov
or
lods
pusha
test
in
dec
decl
lret
xor
in
pushf
and
dec
pop
sahf
es
es
idiv
mov
popf
push
cli
and
in
mov
xchg
cmp
pushl
call
cli
jecxz
mov
loope
hlt
pop
inc
mov
mov
add
dec
rcrl
or
fucomip
repnz
dec
rol
into
cli
dec
dec
lret
mov
add
clc
cs
sbb
xchg
ror
js
loopne
push
or
shl
ret
push
lds
lcall
add
icebp
in
sbb
incl
xchg
push
xchg
pop
xor
xorl
xchg
lahf
test
mov
pop
fnstsw
push
or
incl
adc
mov
and
jne
mov
xchg
xbegin
jmp
jo
loope
sbb
push
inc
pushl
dec
add
std
addb
lcall
jo
cmpsb
xchg
cmp
cli
dec
das
pushf
insb
cmp
or
enter
out
fstpl
imul
xchg
add
cmp
popf
popa
fisubl
mov
out
mov
inc
inc
pushl
popf
xchg
mov
jge
jp
mov
push
lret
push
out
call
leave
dec
test
jmp
dec
jns
xchg
dec
pushf
sbb
push
cmp
mov
ljmp
pop
sbb
jmp
data16
and
pusha
or
cld
js
fisttps
cltd
dec
aas
push
ss
addr16
daa
dec
or
pop
add
inc
ljmp
and
adc
xchg
lock
outsb
das
push
push
xchg
cli
inc
pop
fwait
xchg
in
inc
sbb
imul
xchg
incl
adc
adc
test
mov
cmp
hlt
icebp
sbb
xchg
or
mov
mov
jnp
lods
cld
lock
push
sub
dec
inc
push
popa
sti
xchg
test
adc
out
pop
jl
call
aam
jmp
or
cmp
ljmp
mov
dec
pop
stos
sti
inc
jb
insb
test
icebp
sahf
mov
and
adc
inc
xor
mov
pop
adc
pop
scas
fistps
jo
and
out
push
mov
inc
mov
lcall
or
call
jmp
mov
cmp
out
imul
outsl
in
cmp
ljmp
ret
std
repz
or
xlat
decb
cwtl
fidivs
push
ljmp
popf
inc
lods
sbb
lea
jb
jecxz
scas
mov
jmp
or
jae
cmpb
push
inc
dec
arpl
jle,pn
jne,pn
mov
pushl
fstps
fwait
cmp
test
sbb
xor
pop
cmc
shll
arpl
cmp
repz
in
pop
into
incl
rorl
fistpl
ljmp
pop
lods
pushf
in
xchg
xor
adc
cmp
addr16
mov
lret
pushl
sbb
call
mov
outsb
xchg
ror
add
add
loop
pop
sbb
push
fcmovbe
mov
mov
mov
inc
lods
addr16
nop
clc
and
fucomip
mov
test
lret
jo
mov
notl
pop
sahf
ljmp
ljmp
decl
sbb
decl
sar
lcall
ret
cmp
fs
jle
add
push
xchg
mov
lcall
inc
dec
test
pop
addl
jecxz
test
daa
inc
push
push
leave
movsl
cli
decl
mov
fisttpl
pushl
push
fildll
frstor
adc
inc
test
cwtl
pop
fidivrl
mov
and
int
dec
gs
out
xchg
insb
out
pop
cwtl
incb
test
push
lods
call
in
ret
outsl
outsb
adc
sub
scas
adc
ficoms
inc
pop
ljmp
add
stos
mov
loope
cmp
sub
mov
push
fwait
popa
pop
call
lock
fistpll
ljmp
adc
mulb
ds
mov
out
xchg
pop
inc
lods
into
sub
call
mov
add
mov
andb
lcall
popa
lds
xchg
pop
dec
int
test
mov
leave
es
or
popf
or
decl
stos
ficomps
cli
pop
push
mov
sbb
ret
xchg
fucomip
into
ljmp
dec
mov
lret
test
scas
enter
loopne
repz
out
inc
cmpsb
and
or
mov
mov
test
out
adc
sub
je
mov
add
and
pop
xor
mov
xor
call
inc
outsb
mov
sbb
inc
pushl
or
dec
leave
ljmp
sub
jmp
push
xor
sub
pushf
sub
test
jg
xchg
int
lock
push
stos
pop
mov
push
push
clc
jns
inc
push
out
mov
jne
daa
mov
lret
adc
push
mov
out
push
out
sar
shll
or
shll
in
add
xchg
add
lods
xchg
fwait
fwait
inc
ljmp
bound
int
fwait
add
repz
nop
lock
mov
push
js
imul
pushl
incl
push
and
clc
xchg
jns
or
pop
in
cmp
test
dec
inc
push
push
xchg
jb
pop
incl
insl
icebp
cmc
sub
jl
inc
call
nop
psubd
aaa
push
in
stos
pop
ljmp
cmp
lods
stc
jmp
jg
in
jo
idiv
lcall
inc
call
test
ret
jbe
ror
in
mov
es
cwtl
fiadds
cli
cmp
cmp
mov
pop
lods
add
cli
int
iret
inc
faddl
lds
jle
dec
sub
mov
and
push
push
insb
cmpsl
mov
fs
jmp
icebp
lcall
and
adcl
dec
jb
fdivr
in
ja
sub
sbb
sar
ret
mov
fstpl
mov
dec
lret
ud0
or
aam
decl
iret
test
pop
and
jg
cli
fldenv
js
lret
and
in
xchg
jp
jmp
xchg
pop
lods
jmp
loopne
xchg
sbb
out
add
push
leave
popa
push
ljmp
mov
sar
notl
xor
fcos
mov
inc
and
xor
fs
rclb
imul
mov
das
mov
jge
inc
push
decb
stc
in
out
mov
push
jle
lods
sub
dec
idivl
mov
call
dec
sbb
int
sub
clc
or
je
sbb
push
fstp
sub
pop
mov
pop
out
adc
add
xchg
cmc
in
jmp
je
and
mov
cltd
icebp
xor
xorl
push
cltd
cwtl
cli
cmp
push
js
xlat
in
xor
sti
out
mov
setnp
in
mov
lods
lods
pushl
add
fmulp
ret
fdivl
insl
filds
inc
out
lcall
jb
bound
mov
jne
push
das
and
and
sbbl
test
cmp
lahf
mov
repnz
cmp
jecxz
loop
outsl
jg
clc
lret
ljmp
lret
arpl
outsb
jg
je
addr16
in
add
leave
lret
pop
popf
aaa
dec
dec
xor
xor
cmp
loopne
dec
jecxz
and
mov
mov
sub
mov
sub
pop
push
icebp
fcmove
es
pushl
mov
stos
or
cmc
cmp
sub
or
sub
push
je
mov
jns
mov
ljmp
mov
add
testl
xchg
call
mov
js
icebp
into
jb
cs
sbb
aaa
decl
outsb
call
test
leave
lret
in
stos
jl
mov
adc
sbb
mov
test
cmpsb
pop
imul
ret
add
sbb
xor
xchg
leave
test
ds
or
cld
ljmp
jns
cmp
outsb
push
scas
pop
outsl
and
xchg
pop
fists
ljmp
push
roll
daa
incl
pop
add
cli
addr16
or
insl
mov
mov
pop
jle
adc
pop
cmp
int
or
jmp
loope
cmp
fistpl
fsub
arpl
xchg
incl
mov
xor
jl
mov
lods
mov
call
mov
inc
ljmp
xchg
mov
call
shl
jle
mov
fisubl
test
pushl
test
lds
lret
jb
push
imul
movsl
dec
pushl
pushf
movsl
or
dec
es
insl
incl
or
mov
jg
pop
das
mov
push
cld
or
call
outsl
in
lret
mov
decl
jle
pushf
lcall
push
push
lcall
movsb
pop
cs
jg
call
dec
jg
push
inc
xor
mov
pop
incb
bound
mov
int
xlat
push
dec
aaa
gs
jne
sbb
sbb
outsl
add
pop
xlat
std
add
mov
arpl
jecxz
mov
scas
adc
jb
test
mov
mov
fsubl
pop
sbb
inc
lock
inc
mov
test
jmp
fisubs
cmp
cmp
js
int3
mov
or
fwait
leave
in
scas
or
int
jmp
jecxz
pushf
aaa
in
mov
fdivrs
adc
push
sti
mov
insl
and
pushl
mov
mov
sti
push
fimuls
mov
jo
and
adc
cmc
outsl
sbb
dec
in
int3
mov
pop
out
cs
mov
push
rcr
sub
decl
xor
jge
incl
je
in
mov
jmp
in
fs
int
mov
mov
ja
push
sbb
gs
pop
sarb
enter
sarl
xchg
mov
call
add
sahf
clc
mov
stc
jl
mov
outsl
push
js
mov
pushl
or
rcrl
mov
pop
jmp
pop
inc
ja
pop
xor
adc
dec
ja
mov
mov
cmp
pushw
orb
movsb
cmp
outsl
shrb
cmp
fiadds
adc
decw
mov
loope
dec
call
les
jo
sti
ljmp
pop
sub
orb
or
mov
jg
inc
rcll
jmp
mov
loopne
mov
add
stos
pop
push
incl
loopne
lcall
in
movsl
push
mov
jnp
jg
and
mov
bound
sbb
fsubl
mov
adc
rcll
jl
testb
int
pushl
fidivrl
mov
test
push
sub
add
cmp
ss
aaa
cmpsb
sub
les
das
mov
aaa
pop
negb
xchg
in
imul
pop
sub
pop
fsubl
test
rcrl
dec
clc
ljmp
lock
popa
mov
pushl
aaa
xchg
inc
ljmp
or
xor
lcall
in
sbb
xchg
incl
into
push
adc
dec
paddb
iret
sbb
test
dec
cmp
clc
out
mov
incl
repnz
mov
add
xchg
add
jmp
lcall
imul
pop
lret
cltd
loop
fcomps
mov
sbb
fabs
lcall
add
fwait
jmp
mov
test
hlt
sbb
jae
cwtl
addb
xor
decl
inc
push
cmp
outsb
mov
lret
cmp
sbb
cmpsl
add
ljmp
testb
iret
jle
jmp
xor
and
jle
movsb
leave
adc
popf
popf
call
mov
lcall
jo
xor
in
decb
mov
pop
mov
adc
jge
cld
les
mov
sub
add
dec
xor
xchg
mov
mov
push
cld
dec
mov
outsl
nop
cmp
insl
pop
mov
dec
xchg
std
notl
jb,pn
les
pusha
mov
xchg
cmp
lcall
std
pop
mov
repz
jmp
fwait
push
ja
or
sysexit
push
icebp
xor
loop
pop
adc
call
rol
shrb
sbb
adc
adc
aaa
mov
sub
stc
mov
movsb
mov
adc
mov
mov
sarl
clc
push
cli
and
mov
push
rcrb
incl
gs
inc
es
adc
dec
shlb
mov
addl
sub
test
loop
mov
mov
call
ret
sub
out
dec
incl
sub
outsb
pop
inc
fnstsw
andb
or
mov
dec
xchg
and
mov
pop
outsl
and
arpl
test
mov
jae
loopne
lcall
jmp
lock
inc
repnz
movswl
push
pop
sub
xchg
jo
lock
pop
ljmp
fildll
mov
movsb
or
push
dec
aas
rcrl
cmp
mov
adc
data16
es
in
out
mov
stos
xchg
adc
cli
loop
rcr
sub
ficoml
push
pushl
gs
sub
sti
int3
call
adc
cwtl
enter
mov
aam
adc
push
divb
call
push
push
cmpl
xchg
push
jb
cltd
sahf
idivl
mov
mov
scas
daa
dec
sbb
ljmp
or
or
imul
mov
ds
call
bound
pop
clc
sub
ds
push
cltd
push
push
pop
mov
dec
sbb
cmp
loopne
mov
fcoms
stc
sahf
fistl
jmp
arpl
ret
cmpsb
add
add
sbb
les
rcll
add
gs
mov
in
push
ds
jb
push
add
seto
call
test
ret
fcmovb
loopne
pop
cmpsw
cwtl
sarl
testl
stos
mov
mov
call
stc
mov
pop
lea
idiv
in
sbb
dec
arpl
add
clc
icebp
mov
outsb
mov
lcall
mov
pushl
pop
lcall
and
fwait
call
sub
jl
outsl
push
or
out
jno
negl
adc
cli
mov
jge
enter
gs
jl
loope
mov
out
int
les
rolb
mov
in
sbb
in
out
int3
icebp
xor
dec
test
pop
lahf
aam
imul
sub
pop
add
mov
aam
into
inc
inc
fcoml
mov
adc
xor
mov
xchg
addr16
imul
int
outsl
fdivr
cmp
inc
sbbb
in
jmp
and
in
fs
ret
cwtl
out
or
roll
push
cmpb
mov
and
shll
dec
jmp
pop
mov
jbe
in
push
push
pop
rcrl
out
adc
sbb
jp
fcompl
cli
test
inc
fidivs
sub
mov
add
adc
lahf
std
test
test
cmc
mov
xor
call
jmp
adc
sar
cmpsb
flds
scas
aas
in
scas
sbb
inc
add
call
into
pop
add
and
add
jbe
inc
inc
cld
repnz
push
loop
dec
mov
mull
in
adc
jp
adc
ss
xlat
testl
sbb
push
add
sahf
pushl
jmp
pop
sbb
ljmp
cmpl
fwait
stos
pushl
not
paddb
rclb
das
jno
lret
mov
pop
mov
inc
lods
lcall
imul
ds
sbb
ss
pop
jns
sbb
das
push
xlat
ljmp
rorl
ljmp
mov
push
or
mov
lret
sahf
xchg
sub
lahf
mov
rcrb
scas
imul
arpl
pop
pushl
sbb
mov
xor
sbb
icebp
out
das
cmpsl
jl
outsl
sti
jle
mov
filds
fistl
push
add
sahf
push
mov
pop
and
orb
fwait
mov
jp
popf
lahf
stc
mov
or
lret
dec
mov
decl
push
sub
ds
lret
fmuls
cmp
fimull
mov
add
in
icebp
xchg
jge
ja
add
bound
dec
jnp
inc
cmc
decl
stos
xor
mov
insl
data16
jmp
ja
mov
mov
cmp
jnp
or
jnp
decl
leave
in
decl
ss
lcall
sub
mov
jns
iret
inc
mov
add
mov
adc
js
decl
mov
dec
mov
lods
push
cmpsb
test
dec
sbb
push
xor
out
lods
or
push
hlt
shll
call
inc
mov
jmp
inc
adc
and
mov
sbb
and
inc
jmp
pop
loope
inc
push
and
mov
dec
xchg
push
or
dec
sbb
xchg
and
pop
xchg
sti
or
fwait
scas
incl
lods
shlb
xor
es
pop
inc
xor
into
mov
cmp
pushf
mov
jg
aad
fcomps
call
gs
push
and
cld
add
add
movsl
icebp
repz
inc
lds
mov
sub
mov
imul
shr
jno
dec
mov
adc
sub
add
js
out
pushl
push
xor
lcall
sub
xchg
fdivs
jae
xor
or
addr16
push
fldt
cmpsb
xor
out
lock
xchg
push
push
mov
sub
call
call
mov
mov
decl
push
shlb
dec
inc
iret
in
dec
frstor
dec
mov
insb
shl
push
mov
sbb
inc
std
out
xchg
jmp
inc
ja
aad
dec
mov
popf
inc
int3
movsl
pushf
pop
aam
aaa
inc
ja
sub
jle
mov
pop
movsb
enter
ljmp
cmp
mov
popa
pop
add
or
lock
fisttpl
into
mov
lcall
scas
xchg
xlat
cli
cltd
push
insb
jno
pop
test
pop
loop
dec
loop
mov
and
cmp
mov
push
incl
das
rorl
ds
les
shrl
push
mov
cmpsl
imul
dec
jmp
negb
mov
ljmp
loop
push
cmp
aam
mulb
std
sub
cmp
sar
jmp
mov
adc
stc
jle
sti
cmpsl
jmp
insb
repnz
xchg
sbb
sar
xchg
lea
mov
in
cmpsl
repnz
clc
and
dec
loopne
jne
sbb
pop
pop
inc
lods
xor
or
adc
pop
outsl
ret
dec
movsl
cmp
scas
mov
movsl
mov
sbb
xlat
scas
out
inc
cmp
fstpt
scas
shl
js
xor
mull
call
clc
js
ljmp
dec
rclb
lods
out
enter
dec
daa
outsb
lcall
repnz
xor
call
out
fistpll
jecxz
inc
cmpsb
adc
xor
mov
xor
sub
cmp
fisubrl
pushl
cmp
push
jns
add
js
repnz
push
call
nop
mov
push
dec
notl
sti
dec
js
pop
sbbl
int
jmp
pop
or
or
mov
pusha
call
out
jmp
stos
ss
cmp
loope
cmc
fdivrp
andb
daa
xchg
out
dec
icebp
mov
outsl
ja
push
out
ljmp
cmpsl
xchg
add
int3
repz
hlt
cmc
cmp
scas
xor
dec
xor
mov
ffree
cltd
dec
sub
mov
lds
dec
pop
sbb
loopne
adc
decl
sub
adc
fcoms
and
inc
call
rclb
jmp
dec
dec
pop
iret
lret
push
dec
fnstsw
xor
cld
mov
lock
adc
notb
jle
pop
loopne
sub
xchg
pushl
cmpsl
push
cmc
clc
xchg
mov
jnp
xchg
aad
adc
xor
push
arpl
mov
in
fisubl
pop
inc
jle
decl
sub
scas
inc
inc
or
rcrb
jp
cmp
in
xorl
ljmp
pushl
mov
ljmp
jl
push
pushl
cmp
in
sar
mov
scas
sbb
lods
mov
movsb
outsl
call
xchg
inc
testb
and
add
adc
push
cmp
int3
rcl
adc
pop
inc
aaa
lods
cmp
incl
adc
sub
testb
insl
loopne
cmp
nop
inc
repz
incl
push
repz
add
cmp
or
lea
add
jbe
sub
fdivp
mov
jl
ds
dec
xchg
sbb
sbb
mov
adc
outsl
cld
mov
insl
test
or
call
test
mov
nop
aas
incl
or
shlb
push
dec
dec
ret
nop
jmp
repz
inc
adc
dec
jl
filds
sub
sbb
pop
cmpsb
lahf
decl
jmp
roll
icebp
cli
jns
popa
fmul
into
cli
cmp
mulb
lcall
or
xchg
cmp
and
push
mov
xlat
inc
les
bound
dec
lret
das
cmp
daa
push
rcrb
jnp
cmp
cli
lret
cmp
movsl
push
call
ja
loop
ss
jmp
cwtl
jbe
repnz
scas
pushl
mov
cld
pop
in
pop
dec
or
icebp
adc
mov
mov
lods
sub
mov
int
cltd
sbb
sar
sbb
mov
cs
and
xlat
fdivrp
pop
out
inc
lcall
and
mov
mov
cmpsb
ret
push
or
int3
popf
dec
sar
mov
lahf
and
sbb
ret
pushl
mov
add
outsl
xor
jae
xchg
call
push
pushl
inc
cmc
add
aam
je
das
aaa
enter
adc
sub
aam
adc
lods
push
pop
jnp
ljmp
mov
and
aaa
xchg
jmp
inc
mov
neg
pushl
push
cmpsb
mov
sar
into
mov
hlt
adc
popf
das
ja
repnz
aam
frndint
sar
mov
int
mov
sbb
mov
sbb
ljmp
int
or
pop
scas
mov
data16
lock
cmp
rcrb
dec
decl
pop
fsubs
out
incl
in
xchg
call
hlt
xor
lods
mov
movsb
ficoms
in
lea
decl
jnp
xor
and
sbb
in
call
or
mov
jns
movsl
orl
rorl
inc
insl
jnp
imulb
adcl
call
push
test
outsb
repnz
cmp
xchg
and
jno
mov
cli
das
adc
clc
std
shrb
imul
mov
xchg
pop
pop
mov
sbb
test
shll
cmp
cmp
stos
inc
mov
cs
fidivs
and
mov
fsubrs
pushf
mov
ds
mov
adcl
jae
cmp
sarb
outsl
cli
mov
lret
push
imul
mov
mov
sbb
jg
ds
mov
gs
rclb
std
sub
stos
jle
mov
rorl
hlt
loope
push
cld
aaa
and
sub
inc
or
jmpw
int3
and
test
into
sub
cld
add
add
lds
das
add
sbb
mov
into
add
js
out
lods
lock
adc
or
xchg
fmuls
icebp
call
leave
stc
decl
mov
cmpsb
or
incl
lea
mov
xchg
cmpb
ret
daa
mov
fmuls
cltd
ljmp
sbb
inc
clc
scas
ret
fs
pop
in
add
cmc
es
jae
outsl
and
mov
fstl
and
cs
in
jl
dec
aad
nop
das
xchg
mov
adc
sahf
hlt
and
mov
in
int
cli
stc
mov
loop
xchg
mov
test
pop
or
cmpsb
or
mov
push
or
mov
and
call
sub
sbb
mov
lret
in
mov
mov
sahf
pusha
idiv
adc
into
int3
cmp
push
push
fs
jnp
rcrb
ss
cltd
push
dec
mov
mov
add
add
cmp
pop
call
inc
lea
and
icebp
loopne
mov
xorl
imul
sbbl
out
lret
and
jb
lock
and
xchg
push
divb
sbb
pop
mov
sbb
lcall
stos
outsb
jge
pop
xor
xor
inc
inc
arpl
nop
fists
xor
in
mov
and
mov
jle
mov
jne
lds
subl
cld
das
add
test
sbb
lret
sub
jo
sbb
add
adc
call
inc
sbb
rclb
out
test
call
ret
add
es
adc
lahf
hlt
cmp
icebp
ljmp
jns
stc
js
cmpl
ret
imul
mov
add
dec
es
mov
mov
push
insb
jmp
cwtl
incl
cmp
fidivrl
push
jmp
cmp
sbb
popf
sub
lds
sarl
mov
outsb
xchg
inc
outsb
dec
arpl
je
add
inc
ja
nop
push
pop
sar
xchg
jp
xor
fadd
incl
lahf
xor
jge
jb
arpl
btr
in
push
dec
adc
leave
adc
stc
jae
add
adc
cmp
xor
pop
push
inc
sarl
cld
pushf
movsl
incb
mov
jmp
divb
sub
jo
lcall
dec
mov
mov
pop
xor
mov
cmp
inc
les
and
lret
lret
in
adc
clc
lock
and
stos
mov
pop
cmp
mov
sub
sahf
add
push
imul
sbb
jmp
gs
pop
push
xchg
pop
add
rcl
dec
push
sub
pop
clc
jnp
iret
pop
inc
mov
inc
jae
hlt
insl
pop
jle
popw
movsl
inc
mov
adc
clc
roll
aaa
int
test
call
mov
xchg
jmp
incl
xchg
je
leave
inc
mov
jg
cmp
xchg
jle
out
arpl
push
and
aas
pop
lods
dec
and
mov
popa
das
dec
mov
adc
mov
push
jp
fdivs
incl
push
push
aas
jo
test
xor
xorb
jg
ljmp
inc
aaa
jmp
sub
outsl
imul
jmp
push
pop
ret
sub
xchg
outsl
test
gs
jecxz
mov
inc
jecxz
rclb
test
dec
decl
loopne
or
and
sbb
xchg
dec
xchg
adc
mov
dec
jmp
mov
loop
loopne
mov
leave
decl
shll
dec
in
pop
decl
add
jns
mov
addl
sti
dec
xchg
imul
sub
out
or
cmc
clc
mov
jecxz
movsl
frstor
sahf
stos
pushf
popf
sbb
jb
movsl
cmp
in
lods
cmc
hlt
std
cltd
mov
sbb
adc
stos
decl
es
lret
inc
push
int
aaa
adc
dec
mov
pop
pop
dec
jp
push
stc
push
out
call
lret
jno
jp
mov
jg
jne
add
xlat
xchg
xchg
ficompl
incl
icebp
pop
mov
scas
xchg
lock
xlat
pop
das
lods
mov
adc
sub
cld
pop
xor
cmp
jl
push
notb
lcall
movsb
or
fdivrp
xor
shl
cmp
adc
shr
cltd
imul
in
sahf
subb
jl
xor
outsl
jl
dec
jns
ja
arpl
or
repnz
push
push
inc
xchg
sub
hlt
cmp
push
adc
cmp
mov
ja
adc
lods
test
jb
push
mov
inc
add
enter
ljmp
push
incl
lret
in
dec
inc
mov
addl
out
mov
jecxz
cmp
incl
dec
pushf
filds
and
cltd
mov
in
movb
idiv
push
sbb
xchg
cmp
repz
loopne
mov
xor
jecxz
push
inc
pop
pop
pop
les
mov
cld
mov
sub
popf
loope
into
inc
sar
adc
ss
sub
push
or
dec
xchg
pop
push
jecxz
inc
cmp
aad
lds
mov
cmp
decb
xor
xchg
jmp
int3
cli
sbb
pop
cltd
sahf
aaa
scas
les
icebp
rorb
jne
std
iret
cmc
sti
fisubs
add
in
push
pop
mov
ret
or
clc
insb
push
outsb
xchg
aam
das
fwait
pop
ljmp
adc
clc
lods
and
call
pop
fists
adc
nop
add
ret
cli
fsubl
mov
aaa
hlt
pop
jl
movsl
pop
xchg
cld
js
sbb
dec
xlat
sbb
cmp
arpl
cmp
dec
jg
add
jg
cmp
pop
sahf
aam
arpl
sub
jae
jl
ret
mov
movsb
xor
mov
mov
out
xchg
cmpsb
cmp
dec
dec
insb
clc
pop
cmp
in
mov
stos
int
test
aaa
mov
imul
imul
jl
cltd
nop
sbb
clc
jecxz
lock
inc
aaa
mov
decl
sub
dec
push
das
clc
clc
xchg
and
aaa
xor
ja
xchg
xchg
cmp
into
xlat
dec
push
lahf
mov
fisubrs
int3
clc
inc
dec
xor
cmpsb
xchg
mov
stos
call
aam
xor
jb
std
pushl
push
imul
pop
pusha
adc
loop
mov
loope
test
mov
stc
add
sar
xchg
mov
hlt
mov
outsb
sub
pop
enter
mov
xor
add
mov
out
and
shlb
add
mov
xorb
cmpsl
dec
aaa
cs
mov
in
jb
je
hlt
push
cmp
sbb
hlt
pop
ret
ret
xchg
mov
mov
stos
mov
std
lock
mov
out
dec
push
xchg
xchg
dec
lods
mov
pop
or
sbb
jnp
pop
call
jns
int3
push
sub
sub
xor
jae
sub
push
dec
rclb
inc
jne
and
aas
gs
mov
in
cmc
or
xchg
lock
call
mov
mov
jbe,pt
mov
decl
lock
ja
jg
xchg
jbe
jp
xchg
in
in
inc
ud0
je
shl
or
shrl
jle
test
sti
sbb
lds
fnstcw
push
mov
out
sub
sub
xchg
pusha
jo
popa
out
inc
jb
clc
pop
aas
cmpsb
xorb
insl
sub
jmp
sbbl
std
jp
out
aas
mov
xor
dec
sbb
decl
xchg
neg
orb
and
jg
mov
jmp
mov
inc
popa
jmp
popa
jb
jnp
add
pop
inc
rol
pop
mov
lea
outsl
test
fisttpll
loope
pop
test
cld
in
loopne
adc
jb
ds
cmovp
pushl
mov
flds
test
ret
pop
in
inc
daa
icebp
xchg
mov
fimuls
movsb
sub
add
jnp
mov
in
int
push
incl
sarl
jge
mov
cmp
xchg
or
fs
data16
sub
and
mov
push
dec
outsb
mov
pusha
mov
ret
std
sbb
ret
push
decl
les
and
adcl
add
stc
lea
rcr
pushf
mov
jb
inc
int3
adc
xor
cmp
mov
sub
std
xchg
sahf
lret
or
push
decl
ja
xchg
jmp
lahf
inc
jne
addr16
loope
pop
lret
sarb
lea
mov
insb
mov
jg
call
cmp
cmp
xchg
jle
xchg
insl
sarl
pop
stos
and
pushl
bound
cmpsb
std
inc
jo
fmul
adc
or
jae
adc
mov
xchg
adc
pushf
jns
in
mov
mov
and
aaa
cmp
iret
jo
sbb
xor
mov
inc
aas
xchg
jecxz
fsubrs
pop
and
jmp
daa
inc
and
ficomps
xor
out
push
sbb
incl
imul
jb
insb
movsl
cmp
inc
add
mov
jne
mov
and
push
sub
mov
push
jmp
movsl
int3
xlat
dec
mov
icebp
jmp
or
jge
add
push
incl
arpl
mov
pop
cld
arpl
lock
or
xchg
xor
jp
lea
add
mov
adcl
aam
mov
outsb
jl
pop
sbb
mov
ljmp
mov
push
jbe
out
ljmp
pop
pop
mov
mov
sub
dec
jbe
scas
movsb
xor
shlb
mov
ret
dec
pop
mov
inc
cmp
sub
mov
popa
stc
incl
inc
add
xchg
push
pop
sahf
jne
outsl
scas
ret
jmp
mov
push
mov
mov
ljmp
pop
mov
xchg
scas
jg
jle
and
bound
jle
sbb
mov
subps
in
mov
xchg
test
xchg
jg
adc
insb
test
aad
inc
mov
push
std
mov
insl
das
bound
xchg
jbe
out
jg
fisubl
mov
mov
subb
call
stos
mov
ds
add
jl
mov
xchg
add
loopne
outsb
cs
push
mov
push
mov
pushl
or
jns
sarb
out
aad
adc
imul
sbb
repz
pushf
push
movsb
in
lock
mov
popf
xchg
fwait
and
pushl
push
clc
negl
popl
mov
test
jge
subb
pop
or
outsl
xchg
lock
fs
jmp
insl
jl
jmp
ud0
addr16
add
xor
mov
cmp
push
std
push
or
jecxz
jg
popa
int
lods
mov
ret
out
cmp
xorl
mov
dec
sbb
mov
out
xlat
jecxz
inc
aaa
hlt
adc
xor
cmp
adc
sub
sar
inc
outsl
sbb
dec
pop
fdivrp
or
mov
push
adc
imul
enter
add
inc
clc
or
loope
xchg
rcrb
incl
adc
pop
lcall
jnp
xor
jg
incl
push
inc
out
mov
jecxz
xchg
mov
cmp
jae
repz
decl
push
mov
test
lds
fnstcw
mov
ds
notl
movsl
xchg
js
les
aas
pushf
sub
testb
lea
add
pop
mov
ljmp
call
test
fdivl
sub
icebp
sub
lea
lret
cmp
ljmp
incl
loopne
lahf
incl
cwtl
das
and
testl
not
and
sub
test
das
cmpb
scas
je
inc
lcall
cmpsb
cmp
cmp
mov
mov
pop
mov
adc
push
jmp
or
xchg
fistpll
push
cld
cmp
xchg
mov
lret
pop
fs
cmpsl
repnz
insb
in
fisttpll
in
mov
test
aam
sbb
jae
ljmp
pop
fxch
mov
out
hlt
bound
hlt
jmp
dec
jae
jno
sbb
dec
inc
call
mov
mov
push
push
jl
pop
add
stos
dec
adc
pop
ret
call
add
xchg
xor
loop
cmpsb
lret
xor
dec
lock
push
and
lret
loopne
pop
fists
add
int3
fimull
in
sub
pusha
leave
and
add
test
loop
mov
lret
mov
fldenv
or
inc
loop
cmpsl
cmp
sbb
repz
cmp
cmp
fadd
mov
insb
xor
loop
ljmp
mov
les
pop
les
sub
or
ljmp
pop
cld
shll
pop
jo
pop
pop
mov
js
xchg
mov
sbb
stos
fnstenv
cli
rcrb
mov
rcll
jg
ror
stos
jecxz
fstpl
jle
ds
imul
pop
and
fists
stos
popa
and
jecxz
sbb
and
cmpsl
arpl
incl
and
lcall
test
add
jecxz
out
fisttpll
popa
xchg
or
xchg
xor
cs
aaa
cmc
jae
lea
xchg
nop
sbb
das
ja
in
test
xchg
dec
incl
les
mov
push
aaa
sub
xorl
leave
pop
inc
jle
mov
movsl
and
cmp
cmpsl
ljmp
and
xchg
and
xor
xchg
lret
inc
cmp
cld
mov
xor
jp
ljmp
xchg
ret
and
mov
in
pushl
sub
mov
cli
shll
xchg
lahf
xor
pushl
fidivl
mov
ljmp
ficomps
fs
add
loope
popa
data16
push
incl
aas
xchg
jbe
test
mov
sub
addr16
push
in
jb
outsl
outsl
or
movsb
or
sbb
cmp
or
push
sti
dec
scas
icebp
repz
sarl
ja
ljmp
std
push
pushl
ss
mov
and
sub
add
cmp
jnp
fbstp
push
lahf
add
jmp
stos
sahf
add
fisubrl
push
cwtl
mov
jno
mov
pop
icebp
and
ret
out
mov
imul
call
adc
outsb
cmp
cld
jnp
imul
lcall
adc
mov
cmp
sbb
lcall
shll
mov
test
aam
cmp
outsl
cs
pop
inc
incl
nop
je
in
sub
or
adc
cwtl
dec
mov
aaa
push
out
pop
stc
dec
js
jmp
dec
call
cmp
loope
mov
and
push
les
inc
inc
inc
pushl
aas
cmc
xchg
outsl
or
mov
inc
js
sub
js
and
dec
fidivs
xor
xor
push
loope
mov
out
lcall
stos
lods
mov
cmp
js
cmp
hlt
imul
out
push
ret
aam
lcall
dec
adc
pop
xor
cli
sub
pop
aam
orl
pop
ljmp
push
leave
push
jmp
jae
ljmp
std
jp
mov
adc
movsl
lret
push
cltd
and
test
mov
rcrl
sub
call
lds
sbb
jg
test
adcl
dec
lds
cwtl
js
xchg
call
cs
repnz
xor
popl
icebp
pop
push
in
incl
int3
lcall
stos
xor
push
lret
cli
outsl
popf
push
outsb
scas
pop
xchg
push
dec
decl
lods
pushf
xor
hlt
jmp
into
jb
mov
int3
orl
fwait
mov
add
jmp
mov
les
sbb
mov
pop
call
cmpsb
ficomps
sti
imul
adc
cmp
jmp
adc
lods
call
sbb
mov
in
dec
cli
pop
loop
sub
mov
insb
dec
add
jns
and
jl
sbb
loop
sbb
mov
in
jmp
fdivrp
enter
hlt
iret
mov
test
push
jecxz
push
jmp
es
pop
filds
stc
fsubl
dec
inc
sar
testb
ret
pusha
loop
dec
fbstp
std
enter
test
ljmp
ljmp
mov
adc
jb
fdivrs
das
mov
dec
fdivrp
mov
fcomps
aad
cmpl
mov
mov
aaa
add
xor
test
movsl
mov
ffree
mov
pop
fistps
nop
call
gs
sar
std
pop
push
or
aaa
xchg
jg
andb
dec
ljmp
test
decl
pop
cmp
xchg
and
push
jnp
mov
dec
fidivrl
cmpsl
pop
lods
mov
pop
pop
loope
mov
jb
js
fdivr
jp
aaa
imul
popf
cmc
xor
cmp
call
and
inc
repz
pop
mov
outsb
cmc
daa
jl
xchg
push
mov
mov
mov
stc
pop
pop
and
loope
cmp
jecxz
stos
sbb
or
popf
push
xlat
add
lcall
es
movsl
lcall
insl
mov
cmp
inc
repnz
sbb
and
xchg
xchg
roll
test
and
imul
inc
stos
push
mov
xor
jmp
mov
pop
outsl
inc
push
bound
nop
dec
and
jmp
push
pop
ds
fdivrp
sbb
pop
adc
dec
scas
jle
stc
adcb
call
fwait
pushf
sub
ret
mov
pushl
sbb
out
jl
push
jbe
mov
push
push
call
push
jne
push
jmp
adc
dec
pop
push
test
jmp
cmp
aam
loop
jmp
xchg
div
mov
in
inc
fwait
mov
inc
call
and
in
insb
jecxz
lods
ret
call
xor
mov
inc
outsl
sbb
dec
xchg
loopne
mov
sti
call
incl
jne
outsl
bound
js
cmpsl
outsb
adc
pushl
in
inc
mov
lock
aas
inc
fs
in
pop
mov
sar
decl
stos
sub
lcall
and
mov
mov
add
add
xor
add
std
stos
repz
dec
dec
cmp
popa
jo
pop
lock
aas
ljmp
lods
xlat
and
cmpb
lcall
lret
call
test
aad
mov
filds
cmp
aam
in
push
rorb
push
repnz
inc
add
xchg
call
and
push
filds
cmp
or
daa
sar
and
ficompl
cli
mov
jno
icebp
mov
mov
imul
ret
cmp
imul
sub
ret
adc
mov
vucomiss
xchg
cltd
jns
jno
ror
lret
enter
mov
push
xchg
repz
ljmp
xlat
int
jmp
dec
push
repz
inc
rol
lret
mov
lea
ret
sub
lahf
pop
pusha
adc
jno
push
jns
mov
xchg
sbb
cwtl
sub
mov
test
cmp
lcallw
xlat
inc
cmp
sbb
addr16
inc
adc
mov
lods
jmp
in
outsl
xchg
or
das
fcmovnbe
mov
fcos
xor
call
cmp
xchg
jmp
js
mov
adc
sub
fldcw
insb
leave
sbb
decb
out
daa
xchg
xchg
xor
adc
cmc
sbb
mov
sbb
sub
stos
pushl
aad
dec
xchg
nop
pop
sbb
aaa
out
jle
pop
dec
mov
test
inc
fldl
out
jle
sbb
jge
mov
xor
jmp
outsl
call
mov
out
add
insb
pop
inc
xchg
jnp
pop
mov
leave
jne
mov
int
pushl
ret
mov
sub
fildll
inc
js
int
loopne
pop
fnstcw
je
std
mov
std
rolb
pop
xor
mov
mov
sti
cmc
jbe
add
or
stos
xchg
std
fimull
mov
add
and
xor
mov
cmpsl
mov
flds
xor
sub
push
mov
out
cmp
push
pop
out
and
and
jl
xchg
aaa
sub
dec
push
push
xorb
cmp
pop
addl
add
jns
clc
cli
and
push
outsb
cltd
push
cmp
mov
or
fsubrs
lods
aad
adc
sbb
jnp
outsl
decl
arpl
jmp
xchg
push
adc
test
add
stos
addr16
mov
mov
cld
sub
out
pushf
loop
mov
sbb
outsb
orb
jg
pop
shlb
popf
jle
lds
adcl
mov
sub
outsl
inc
and
fmuls
pop
pop
cwtl
cld
lcall
iret
mov
mov
inc
inc
lret
mov
fsub
daa
pop
mov
push
into
ret
adc
and
rol
lock
sbb
dec
xchg
sub
xchg
push
pop
cs
in
fistps
jmp
insl
fcompl
sbb
mov
pop
inc
shlb
mov
pop
sbb
mov
sarb
fsubr
hlt
leave
incl
lods
and
cmp
lret
mov
cli
mov
scas
in
mov
xor
lahf
push
add
lret
xchg
mov
mov
mov
cmpsb
addr16
pop
scas
adc
mov
insl
or
pushf
push
arpl
mov
flds
fs
and
sbb
call
inc
add
in
xor
xchg
jns
jo
xor
xchg
sti
decl
dec
cmp
movmskps
sub
shll
std
sub
stos
push
dec
imul
adc
loopne
mov
jo
clc
std
les
jp
mov
cs
mov
sbb
daa
pop
pop
push
add
jmp
std
imul
ror
sti
inc
fadds
jecxz
fnsetpm(287
outsl
call
jne
pushl
test
stos
and
sub
decl
sub
and
adcb
stos
jo
pop
movsl
add
adc
inc
xor
mov
icebp
dec
xlat
xchg
push
fists
jge
push
pop
or
cmc
loop
push
ljmp
aas
jp
pushl
shl
lret
insl
ljmp
loope
sub
hlt
inc
mov
mov
mov
out
mov
mov
sub
fstpl
jnp
xchg
jle
push
dec
mov
push
in
xchg
mov
add
add
fildll
inc
jns
push
jae
lock
xor
outsl
rcrb
sahf
aam
outsl
popa
or
das
out
mov
ljmp
cmp
fsubr
push
es
pop
jle
add
fisttpll
lret
jae
fisubrl
cli
adc
sub
push
jg
jg
bound
cli
mov
addr16
clc
push
xor
cmp
jns
push
or
scas
jge
pushf
in
addl
fisttpl
push
sub
movsb
stos
es
fcomps
scas
xchg
in
inc
or
lcall
fnstenv
int3
inc
addr16
xchg
mov
out
jg
pop
jg
test
or
gs
inc
adc
mov
pushl
pop
pop
sbb
add
test
xor
daa
test
in
test
stos
or
aaa
mov
cs
ja
jg
jne
adc
sub
mov
xchg
incl
ja
stc
add
dec
ss
aaa
mov
insl
test
out
cmp
xchg
and
adc
enter
sti
cld
in
cs
pushl
dec
dec
pushl
xor
mov
shrb
outsb
and
push
lahf
decl
test
jmp
sahf
faddl
pop
shll
push
pop
divl
lcall
sub
pushl
cmp
test
push
popf
sub
fdiv
repnz
sbb
lods
cmp
incl
in
ss
repz
xlat
call
leave
mov
decl
or
xor
add
scas
in
lock
mov
ljmp
addr16
adc
jmp
push
lret
inc
sbb
push
pop
lcall
popf
cs
movsb
sti
and
cmp
sub
push
dec
je
jmp
xor
cmp
mov
sub
rolb
les
mov
or
cmpsb
ljmp
lock
add
jl
loop
add
pusha
xor
jp,pt
inc
test
inc
decl
fnsave
adc
lods
mov
cmp
add
lret
cmp
outsb
and
add
and
push
and
sbb
in
pop
ja
jae
movb
fs
aas
call
or
xor
sarb
jb
jb
subb
in
push
outsl
loop
sbb
inc
mov
mov
jmp
jg
cmpsl
jge
inc
push
inc
andl
lods
icebp
sbb
push
xchg
pop
arpl
inc
dec
cmp
incl
cltd
jnp
lock
and
mov
sbb
cwtl
fadds
mov
and
jmp
inc
fcomi
aaa
into
ja
loopne
nop
cld
fistpll
push
pop
dec
loopne
cmp
cmp
aam
xchg
mov
arpl
fstpl
inc
daa
sar
jle
cmc
xor
sbb
insl
das
dec
jbe
fistps
test
sbb
imul
scas
dec
dec
mov
mov
rclb
pop
jae
and
test
or
mov
pop
push
xor
insb
pop
rorb
mov
xchg
insl
mov
push
cmp
aaa
popf
sub
inc
mov
frstor
mov
mov
fcmovb
shlb
pushf
jo
fwait
cmpsl
cmp
pop
pop
sar
add
xchg
dec
test
add
sbb
icebp
or
pushl
ljmp
shr
jge
or
cli
pop
mov
fcom
push
lds
mov
jae
data16
gs
mov
sbb
mov
add
lret
cli
mov
lods
adc
sbb
and
rcll
sub
or
sub
cltd
mov
loope
rcr
sarb
pop
cld
xor
pop
pop
mull
lock
push
jle
movsl
adc
popf
nop
inc
pop
rcll
dec
cwtl
jp
jle
ret
mov
dec
arpl
lds
test
cli
cmp
call
incl
inc
popa
clc
sbb
mov
cmpl
xor
in
aad
repz
add
test
xchg
lods
lods
pop
test
jbe
out
mov
lods
daa
std
cli
movsl
outsb
pop
adc
pop
cld
cmp
mov
mov
decl
sbb
and
fisttpl
divb
push
outsb
fwait
cmp
mov
cmp
lcall
sbb
decl
repz
cmc
sbb
push
inc
mov
fisttps
shr
call
push
inc
push
ret
out
sub
fcomps
incl
rcrl
dec
clc
int
icebp
cmpsl
push
insb
sbb
fdivl
test
fcoms
xchg
push
lcall
aas
push
int
test
loopne
int
fists
mov
inc
mov
inc
add
fwait
xchg
xchg
and
dec
jno
mov
jae
lea
pop
in
scas
jbe
test
fildll
inc
mov
popa
repz
mov
rcr
add
or
mov
inc
ljmp
add
dec
int3
ljmp
xor
sbb
or
inc
push
mov
jo
call
test
jnp
outsl
and
stos
pop
lcall
mov
daa
push
into
test
pop
push
mov
icebp
into
das
movb
maxps
lcall
jnp
movsl
inc
jmp
roll
ret
adc
xchg
mov
call
cmp
and
xchg
decb
add
imul
jnp
jbe
pop
lea
sbb
je
mov
popa
jl
sbb
and
ret
icebp
pop
cmpsl
pusha
jmp
mov
sub
jmp
cld
jp
dec
push
dec
cs
adc
add
add
jl
es
xchg
jmp
jp
and
aad
ljmp
fcmovbe
jae
jge
jbe
push
mov
mov
cwtl
lcall
std
roll
cmp
decl
push
mulb
stos
test
insl
icebp
stos
inc
mov
xchg
and
and
clc
push
lcall
jle
idiv
xchg
sti
jb
pop
push
fdivrp
mov
shl
jl
mov
decl
cmpsl
mov
dec
adc
push
inc
incl
cmpsl
mov
pop
incl
adc
adc
dec
test
or
jmp
push
mov
cld
jecxz
dec
cmp
hlt
rcl
pop
mov
decl
mov
into
jmp
lea
pop
jle
jge
pop
xorl
inc
sub
mov
sti
pop
jg
sub
mov
cmp
or
decl
imul
shlb
xlat
jl
in
add
test
decb
fwait
sar
je
or
test
cmp
sahf
inc
xor
icebp
clc
jno
fs
fildll
cmp
and
adcl
push
or
add
aam
mov
stc
add
mov
push
dec
jb
jp
xchg
push
sub
loopne
popa
aam
mov
jg
test
dec
call
and
fwait
jmp
adc
movsb
lcall
decl
mov
test
push
test
movsl
cmp
push
inc
jbe
call
pop
leave
movsl
jmp
xchg
out
cli
lret
adc
js
add
sub
mov
add
sub
sub
lock
mov
dec
lock
sbb
cld
pushl
aas
mov
stos
pushw
ljmp
adc
jo
fdivrp
cmp
inc
adc
inc
mov
mov
jmp
incl
mov
sar
mov
xchg
mov
ror
loope
andl
lret
insb
lods
pop
decl
shrb
lcall
mov
adc
push
orb
and
cmp
jmp
inc
mov
std
sahf
inc
push
gs
std
stos
jmp
pop
fwait
and
sub
fs
push
decl
test
cmp
dec
sti
pop
bnd
scas
jnp
mov
lea
dec
out
push
pop
data16
xchg
mov
data16
lods
cwtl
stos
loope
jg
in
jnp
dec
xchg
pushl
cmp
cmc
mov
xor
push
pop
mov
cld
inc
jae
pop
push
adc
xor
sub
push
les
jmp
mov
mov
lock
pushf
jns
mov
dec
das
sbb
cmp
mov
sub
and
out
enter
sbb
clc
sahf
xchg
mov
sbb
clc
rcl
jmp
xchg
aaa
and
dec
std
pop
test
dec
repz
or
fstpt
dec
cmp
rcrb
dec
inc
out
push
lret
xchg
dec
sub
decl
test
daa
push
mov
dec
add
push
hlt
push
push
es
loopne
jmp
sbb
lods
leave
out
lcall
xchg
stos
movsb
jge
popf
inc
cmp
cmpsb
call
xchg
in
jno
sti
cmpsb
mov
mov
and
xchg
lcall
sbb
and
movsl
add
and
incl
or
in
mov
jmp
ljmp
push
pushl
sahf
jg
xor
leave
jg
dec
add
mov
mov
dec
les
lods
sub
subl
outsb
decl
out
mov
pop
lods
cmp
add
push
repnz
mov
and
cld
push
in
clc
pushf
popa
dec
sub
movb
push
ljmp
xchg
mov
push
sbb
add
inc
ficompl
mov
decl
data16
mov
adcb
daa
unpckhps
sbb
xor
sbb
mov
movsb
pop
add
jg
mov
mov
mov
in
xchg
inc
lods
popf
mov
in
out
xchg
daa
ret
jno
stos
decl
lea
movsl
sbb
ljmp
pop
inc
inc
pop
sti
mov
in
sub
je
incl
or
call
adc
in
and
rcrl
lea
pushl
dec
ret
push
lods
push
mulb
call
bound
xchg
es
jmp
push
insl
pusha
adc
inc
pop
xlat
xchg
or
fstpl
or
push
mov
insl
shrb
xchg
lahf
lret
fimuls
jno
jb
shlb
ljmp
adc
sub
mov
or
add
dec
sahf
or
icebp
mov
ljmp
cld
xchg
pushf
repz
mov
mov
jmp
outsl
sub
add
popa
ret
js
std
cs
or
adc
in
mov
mov
stos
sbb
test
fnstenv
lret
jmp
add
cmpb
sbb
imul
insb
add
push
ljmp
adc
add
cmp
fwait
test
jno
dec
ljmp
pop
and
test
push
push
xchg
jb
mov
pop
cmp
mov
ds
push
or
lahf
ret
dec
repnz
jmp
jg
cs
sti
shufps
aad
xor
loopne
adc
adc
lea
mov
ljmp
mov
dec
mov
sbb
clc
aam
pushf
cmp
jmp
jnp
xchg
mov
jne
xlat
jle
jmp
jmp
test
nop
std
xchg
jle
fstpt
rorl
movsb
ss
insb
pop
push
repz
jle
pop
xor
cld
lock
sbb
mov
sub
xor
rcrl
add
cld
xchg
inc
sbb
js
or
pusha
sub
scas
ljmp
push
pop
jecxz
push
jmp
push
aam
dec
jns
add
fs
lahf
pushl
daa
cmp
cmp
out
cmp
jmp
insb
dec
mov
ss
insb
sub
mov
cld
push
jnp
and
cwtl
pop
sbb
aad
cmpsb
call
aaa
cmp
xor
arpl
clc
mov
flds
test
adc
out
shlb
inc
jns
cmp
push
fstpl
cli
scas
and
stos
outsb
inc
dec
rclb
jmp
inc
lods
outsb
cmp
in
sbb
adc
insl
jg
mov
or
mov
daa
idivl
sahf
mov
and
push
decl
xchg
pop
cmp
inc
xor
test
pushl
leave
lods
mov
and
cmp
xor
pop
mov
mov
ljmp
push
fimuls
push
sbb
add
xchg
fists
mov
outsl
aaa
or
sub
lods
loop
mov
xlat
push
idivb
mov
adc
sbb
mov
dec
jmp
jg
xor
mov
xchg
jmp
cli
jle
cmp
inc
sbb
cmp
jp
imul
jns
cmp
jl
or
jo
push
iret
sub
sub
addr16
jge
and
pop
imul
scas
push
insl
push
js
mov
and
std
xor
push
fld
jae
imul
fadds
shll
mov
ud0
cmp
push
test
nop
cmc
pop
popf
push
xchg
dec
ret
push
cmp
call
push
adc
mov
cmpsb
jg
fwait
leave
insl
add
mov
push
pop
outsb
mov
test
fwait
cwtl
xor
push
ljmp
or
ljmp
daa
adc
stos
mov
inc
add
repz
icebp
das
cmp
lcall
in
jmp
jb
pop
aad
mov
mov
sbb
pushl
stos
xlat
xchg
push
icebp
incl
pop
cmp
je
cmp
loopne
pop
sbb
xchg
clc
inc
push
cmp
xchg
lcall
and
stos
lret
aad
mov
rcll
inc
jmp
movsb
ficomps
cltd
out
xor
jmp
lcall
pop
fiaddl
int
adc
adc
sub
lret
mov
push
jno
ljmp
inc
popf
jecxz
and
mov
jmp
jl
pop
push
lock
call
or
mov
fcoms
shlb
test
cmp
mov
pop
pop
nop
dec
stos
xchg
std
push
xor
jbe
out
outsl
ret
adc
sbb
push
aaa
call
sar
dec
push
bound
shll
lret
mov
xchg
dec
and
mov
fdivrl
sbb
fcmovnb
cmpl
aas
mov
mov
push
scas
enter
aaa
lcall
notb
movsl
pop
inc
cmp
dec
js
mov
inc
cmpsb
icebp
ljmp
xchg
sbb
outsl
lea
test
icebp
std
mov
dec
pop
adc
lcall
je
sub
je
push
dec
aad
mov
les
mov
sbb
jmp
xchg
adc
mov
mov
inc
adc
clc
fsubp
icebp
sub
pop
loopne
jmp
sub
push
aad
rcr
xor
pop
jnp
sti
fldl
decl
mov
stc
out
inc
rcrb
xlat
std
movsl
push
ss
xchg
mov
mov
shll
mov
sub
decl
shrl
call
xchg
and
test
mov
push
fdivrp
add
adc
and
jmp
sbb
fwait
jo
insl
push
lock
mov
das
inc
add
bound
jge
js
pushl
rolb
cmp
jmp
dec
jle
call
in
and
incl
test
ss
enter
or
stos
jmp
adc
popa
pop
mov
pop
fcos
daa
ret
scas
call
push
aaa
pusha
jbe
dec
push
test
loopne
adc
aam
mov
push
mov
fwait
clc
inc
inc
lock
shll
mov
shrb
cmp
xor
and
sahf
rorb
cmp
popf
out
add
fs
adcl
clc
pop
mov
mov
pop
dec
dec
call
cltd
mov
inc
pop
jmp
repz
test
fchs
cwtl
les
cmc
jne
mov
mov
ljmp
adc
xor
xchg
cmp
incl
mov
or
push
inc
clc
push
sub
outsl
push
cmpl
pop
xchg
and
jne
inc
scas
push
ss
pop
call
cmp
or
mov
pop
roll
outsb
pop
pushf
jmp
cmc
mov
jmp
movsl
push
scas
jl
dec
inc
xchg
and
cmp
outsl
xchg
sub
test
loopne
cmc
std
pop
xchg
popf
and
cld
ljmp
les
ljmp
push
lret
xchg
lret
jae
fists
adc
fcmovnb
decl
ljmp
lcall
adc
push
sbb
incl
rolb
call
lods
xchg
cmpsb
daa
adc
mov
sub
inc
ss
aam
xchg
clc
fisttps
push
fs
fdivr
das
dec
mov
add
inc
pop
into
jge
lahf
test
dec
dec
mov
dec
adc
adc
adc
push
addr16
call
insl
and
sbb
sub
nop
mov
push
pop
imul
fistpl
aam
push
popf
leave
nop
mov
movsb
cmc
jb
sub
lods
pop
sar
xchg
jmp
std
jl
dec
jne
decl
outsl
add
mov
adc
xchg
xchg
insb
xchg
orl
cwtl
aam
jp
leave
test
xchg
fsts
jmp
ficomps
popf
ds
or
and
lret
pushl
cli
mov
lock
stos
repz
idiv
jecxz
mov
std
arpl
int
sub
and
add
sbb
or
ljmp
jns
adc
mov
mov
ljmp
dec
int3
idiv
repnz
fwait
sbb
sbb
sarb
pushl
lds
or
ds
sbb
jne
std
adc
ret
adc
arpl
xchg
add
add
lcall
loope
aam
inc
jns
lods
call
aaa
cmpsl
sti
sbb
fsts
ud0
or
call
pop
stc
inc
lret
jg
jb
fstl
jge
sub
xor
ljmp
cmpsb
lahf
xorb
fsubs
xchg
lods
rorb
add
adc
out
iret
enter
andnps
std
push
inc
lock
imul
sahf
mov
inc
or
cmpsb
stos
pop
sbb
mov
ror
dec
or
dec
mov
test
jle
dec
sahf
jg
cs
mov
cld
call
mov
loopne
cltd
test
push
pop
xchg
loop
out
jecxz
xchg
repnz
arpl
push
stc
das
pop
add
mov
push
jbe
shll
cmp
out
das
fdivrp
lret
jl
mov
sub
scas
outsb
jbe
arpl
xchg
push
adc
mov
jecxz
cli
outsb
pop
hlt
mov
hlt
cmp
enter
xor
stc
inc
inc
xchg
push
sar
mov
in
fldl
mov
in
mov
dec
call
xchg
mov
dec
jle
or
lahf
decl
mov
jl
xchg
mov
mov
cld
clc
add
mov
and
xor
jne
cmp
enter
mov
or
pop
sar
fs
jnp
mov
lret
lea
inc
jle
or
sbb
call
inc
lods
xchg
jmp
cwtl
xlat
push
sub
stos
je
lret
pop
fildl
push
xchg
inc
sbb
mov
hlt
addr16
mov
xchg
cmp
ficompl
and
int3
mov
pop
xchg
ljmp
in
push
fstpt
lret
xor
push
mov
push
jb
jmp
ret
add
xchg
sub
lcall
xchg
ljmp
outsl
dec
ds
xchg
xchg
lods
clc
lcall
lds
jg
fldl
ret
cmp
mov
lahf
icebp
inc
dec
xor
outsb
xchg
aaa
jns
ret
xor
sar
adc
es
dec
cmp
mov
jbe
inc
test
call
rcrb
lret
gs
jg
bound
lds
test
and
lcall
repnz
mov
mov
repnz
das
xchg
fs
decl
movsl
jp
stos
xor
test
or
outsb
bnd
cmpsl
cmpl
xor
outsl
loop
int
decl
cmp
pop
js
push
incl
mov
pop
fisubl
decl
gs
decl
add
jnp
loop
pushl
cmc
xchg
xchg
push
mov
outsb
cmc
mov
jle
insl
mov
nop
ret
adc
mov
out
xchg
mov
movsl
jmp
pop
lods
adc
ja
add
inc
imulb
out
xor
jno
fwait
call
or
dec
mov
sbb
out
std
es
xchg
and
call
stos
mov
out
ud0
ficompl
xlat
cs
call
adc
sub
sbb
stos
dec
outsl
jo
mov
ljmp
xchg
or
and
pop
and
cltd
sub
sahf
les
cmp
pop
fmuls
push
pushl
fcomps
rorl
jbe
dec
fnstenv
mov
out
incl
cmp
inc
mov
hlt
push
mov
cltd
leave
loopne
inc
xchg
jle
push
mov
mov
mov
mov
adc
pop
xor
roll
xchg
push
sbb
and
call
push
dec
cwtl
incl
dec
xchg
test
into
ret
jle
cmp
jmp
int3
inc
push
inc
mov
jbe
push
push
aad
mov
xor
addr16
mov
imul
testb
fwait
test
std
jmp
mov
lahf
mov
sar
je
and
dec
lods
sbb
hlt
jno
sarb
dec
ret
in
fmul
mov
pushl
aad
adc
cld
pop
test
das
inc
inc
pop
cmp
jae
mov
movsb
cmp
rcll
lcall
movsb
mov
jne
xor
roll
mov
push
pushl
and
cmpsl
push
das
mov
push
daa
cmc
fld1
das
sub
lret
xor
fldcw
aam
clc
inc
stos
jmp
jle
cld
out
sub
mov
ja
jg
rcll
sub
das
adc
in
loopne
or
cmp
mov
movsb
sti
pop
sbb
repnz
push
mov
pop
mov
add
and
out
mov
fsubl
push
mov
clc
leave
call
or
sub
mov
dec
loopne
cwtl
hlt
and
lret
cli
cltd
xchg
lods
icebp
je
pop
jp
fistps
cli
inc
adc
call
aad
xor
cmp
jecxz
adc
or
ss
lahf
ljmp
or
xchg
push
push
add
sub
fadds
or
or
fcmove
add
scas
out
pop
ss
mov
adc
push
xchg
sahf
popf
jg
loope
cmp
cmp
or
sub
mov
adc
incl
outsb
push
test
or
add
cld
iret
pop
mov
xchg
push
push
aaa
pushw
lcall
es
jmp
lret
lea
mov
or
ficoml
mov
call
jnp
cmp
dec
outsl
add
imul
sub
jg
jne
aam
les
decb
xor
dec
pop
scas
shlb
aam
pusha
pop
fistps
pop
mul
fildll
aaa
loope
incl
cli
cmp
inc
dec
or
sbb
cmp
rcll
icebp
cmpsl
pop
xor
lret
rol
fisttps
and
call
add
lcall
and
jmp
cmp
adc
push
fiadds
push
xchg
cmpb
inc
call
jb
add
adc
out
inc
cld
mov
adcb
jb
divl
lcall
sub
pop
xchg
dec
mov
fdivrl
mov
clc
pop
rcl
push
cli
and
and
cmp
notb
xor
pushf
iret
pop
xchg
lcall
scas
loopne,pt
cmpl
faddl
xlat
sub
xlat
inc
inc
stos
mov
sub
pop
bound
cmp
pop
sbb
int3
cld
ja
sahf
lods
push
call
dec
push
adc
call
test
push
mov
cmp
mov
mov
or
dec
cwtl
sub
int3
rcr
mov
mov
mov
cli
sub
clc
je
popf
xor
call
or
es
ret
imul
and
loope
sar
dec
and
xchg
aaa
jo
xchg
cli
repz
rcl
orb
push
inc
aad
outsb
xor
mov
mov
enter
flds
addb
cmp
faddl
mov
sub
push
pop
lahf
mov
insb
jnp
sbbl
iret
jo
js
int
mov
pop
out
sub
mov
push
sub
push
je
fsubrs
sbb
cmpsb
lcall
lods
jae
cld
dec
dec
incl
pop
pop
call
fisubrs
mov
fldt
lock
cmpsb
cmpsb
adc
mov
mov
std
inc
daa
ds
xchg
ret
loop
push
push
xchg
sub
ja
mov
mov
add
inc
pop
fbstp
out
inc
cmpsl
mov
leave
insl
jb
outsl
stos
xchg
pop
call
mulb
sbb
cmovs
mov
mov
dec
cwtl
cld
aam
inc
dec
stos
rorl
ret
mov
sub
stos
or
clc
fisttps
jne
pop
call
lods
mov
incl
mov
addr16
popa
lcall
or
pushl
pop
out
cmc
decl
cld
or
mov
cli
fsubr
hlt
call
pop
jnp
fwait
mov
mov
stc
lods
imul
push
xor
pop
add
mov
pop
or
aam
jae
jmp
mov
mov
xchg
shlb
hlt
mov
and
hlt
mov
cmp
sahf
push
ljmp
andl
or
pushl
inc
xchg
sahf
push
push
xchg
ljmp
js
cld
xor
ljmp
js
ret
cmpl
shr
dec
mov
pop
test
mov
jg
mov
es
or
xor
mov
ja
decl
scas
inc
or
xchg
call
dec
imul
xor
fisttpll
xor
hlt
pop
mov
stos
insb
das
jmp
mov
and
jne
dec
sbb
mov
mov
outsl
ljmp
cltd
loop
les
cs
and
fbstp
pop
addr16
sbb
aaa
aaa
mov
sti
xorb
lods
inc
out
in
inc
daa
icebp
loop
sbb
loop
xchg
imul
subl
icebp
popf
rep
lahf
inc
adc
xchg
bound
xor
insl
push
leave
jb
fdivrl
stc
sub
sti
in
loope
dec
fstpt
idiv
jo
xor
sbb
fwait
sbb
mov
leave
mov
cld
xchg
call
outsl
inc
clc
sahf
loope
or
mov
dec
pop
mov
mov
ds
arpl
fcmovbe
push
cld
jae
repnz
cli
pop
ljmp
sarb
dec
cmc
aam
test
cmc
sub
mov
mov
mov
ljmp
jns
mov
add
adc
inc
arpl
ljmp
lods
pusha
hlt
decl
lds
call
roll
mov
scas
daa
pop
pop
int
push
jmp
jg
int
test
cmp
loop
push
pop
sbb
pop
out
shl
je
sub
aas
dec
ret
add
mov
jge
insb
iret
mov
mov
mov
das
xorb
je
sbb
sarb
jbe
cli
xlat
pop
dec
xchg
xchg
mov
xchg
lret
jmp
push
push
cmp
pushf
inc
mov
in
mov
xchg
notb
cmp
push
out
cld
lcall
decl
scas
jae
lcall
ret
les
lcall
repnz
push
push
xor
popa
mov
dec
std
std
popa
iret
cmp
add
sti
mov
sub
addr16
push
fsubp
xorb
ljmp
lock
data16
in
jmp
fwait
int
and
and
rcrb
insl
jle
sbb
push
fistpll
xchg
ljmp
ljmp
call
adc
decb
xor
scas
rorb
mov
sarl
subl
shll
outsl
pop
test
push
roll
mov
cwtl
lock
arpl
das
nop
adc
jns
cmp
mov
push
push
ds
aad
or
or
aad
inc
mov
lcall
ds
popf
jns
call
mov
cs
fcmovnbe
das
js
mov
bound
fcmovnb
xchg
lahf
cmp
stos
jecxz
cmp
mov
pushf
dec
dec
jmp
push
or
xlat
mov
pop
lds
pop
test
push
mov
mov
ja
push
stos
bnd
popf
cwtl
ud0
and
push
push
mov
outsb
dec
mov
test
aaa
and
insl
decl
ret
add
pop
fiaddl
int3
jnp
cltd
cld
inc
lahf
das
cmp
lock
mov
daa
sar
cli
mov
ret
lcall
std
push
fadds
cs
sti
jb
inc
fistpl
jle
jo
push
sbb
sub
xchg
iret
xor
aad
cmp
ror
sub
lods
adc
js
std
test
ljmp
xor
jg
or
pop
ljmp
fwait
movsl
shll
pop
sti
mov
and
mov
or
add
inc
call
test
xchg
mov
notb
and
cmc
jo
incl
icebp
fdivl
pmuludq
fwait
dec
outsl
add
push
subl
add
cmpsb
jp
or
loope
mov
xchg
notb
loope
std
xchg
xchg
in
mov
outsl
bound
xchg
call
xor
push
mov
inc
ja
and
lret
and
mov
push
jno
add
cmp
lahf
pusha
in
cld
inc
aaa
xchg
mov
std
call
enter
xor
fadd
sbbl
mov
mov
jno
daa
xor
inc
cmp
lea
imul
and
int
fcoml
dec
pop
sahf
cli
jl
xor
loop
adc
add
out
jg
test
jmp
sub
dec
mov
lods
loop
outsb
lcall
sub
and
negl
cs
fbld
fdivr
xchg
sbb
pushl
out
data16
ljmp
mov
push
jns
sub
aad
popf
jmp
sbb
xchg
pop
lahf
aaa
data16
sbb
add
cmp
in
int
cmp
cmp
mov
ljmp
jns
push
xor
dec
cmc
repz
add
mov
jne
push
mov
fldenv
jge
aaa
test
lods
imul
xor
mov
sub
add
adc
ljmp
pop
std
std
repz
movsl
testb
push
test
cwtl
adc
pop
dec
and
inc
pushl
xchg
icebp
xchg
shlb
decl
add
popa
lret
inc
mov
lret
lods
and
pop
sbb
cmpsb
test
sbb
mov
pop
mov
and
loope
push
mov
je
lret
xlat
jno
arpl
addr16
cmp
sahf
das
lods
ljmp
push
push
decl
sbb
mov
idivb
jbe
call
cltd
dec
push
pushl
mov
cltd
jmp
lahf
dec
pmulhw
arpl
dec
ds
das
outsb
mov
mov
push
mov
dec
pop
mov
out
outsb
xchg
pop
mov
jp
dec
inc
ret
lock
jle
lock
cli
fs
cld
out
jno
sbb
stos
ljmp
mov
jb
cld
mov
mov
xchg
nop
xchg
xchg
loop
add
hlt
rcrb
pop
xorl
xor
lahf
inc
add
push
push
pop
mov
cmp
mov
lods
cmp
jg
cmc
pop
aas
inc
mov
call
jb
scas
insl
mov
das
lods
daa
mov
add
adcl
fdivl
in
and
mov
fwait
clc
pushf
push
inc
mov
aaa
test
xchg
icebp
mov
decl
xchg
pushf
pushf
jmp
push
sub
std
jl
imul
and
popa
test
sub
fcomps
or
test
dec
mov
or
sub
sbb
pop
sub
aam
pusha
popf
ljmp
stos
into
or
add
xchg
xchg
incl
das
mov
mov
mov
xor
les
loopne
jl
push
out
les
out
add
and
pop
sbb
mov
adc
ret
xor
xchg
adc
lret
mov
pop
mov
adc
jle
or
call
mov
ljmp
jp
jno
cmp
outsb
xchg
sbb
incl
dec
xor
mov
and
lods
nop
inc
test
jnp
pop
or
movsl
pushf
push
cwtl
loop
jle
dec
cmp
je
fdivr
out
outsl
sarl
cmp
pop
jno
add
pop
adcl
push
pop
aam
xor
ret
adc
add
mov
inc
rcrl
xchg
testb
push
sbb
out
in
xchg
jnp
mov
imul
in
scas
das
fidivrl
mov
push
or
sahf
incl
shrl
mov
dec
cltd
xchg
cmp
mov
push
mov
mov
xor
hlt
ja
in
sub
mov
je
outsl
subl
dec
ror
outsl
pushf
pusha
jo
pushl
fwait
test
incl
push
or
cli
add
movsl
decl
mov
ja
dec
push
dec
mov
cmp
xor
call
ja
pop
movsb
fwait
pop
sub
jmp
sbb
sti
mov
test
lret
ja
ljmp
pop
add
mov
inc
adc
or
je
aam
mov
orb
jo
mov
lock
or
jge
adc
push
rcll
lock
xchg
jg
loopne
rorb
pop
es
jmp
mov
cmp
andl
mov
mov
flds
incl
movsb
ljmp
mov
or
pop
in
sbb
or
lods
sbb
xchg
and
repz
mov
cmp
jnp
lahf
or
iret
dec
xchg
and
jmp
xchg
call
es
and
int3
call
pop
test
inc
sbb
sarb
push
negl
inc
adc
cmp
pushl
pop
add
insb
jbe
hlt
decl
or
jae
pop
lods
push
or
adc
mov
xchg
jbe
outsb
call
jb
sbb
sbb
decl
daa
inc
roll
cmp
rcll
into
jg
add
pop
fistps
mov
xor
xchg
cwtl
test
std
cltd
lcall
mov
cmp
mov
idiv
out
stos
gs
fimuls
jo
jbe
adc
mov
inc
push
add
mov
fs
out
cwtl
sbb
mov
neg
mov
sub
ds
push
xor
sub
lods
push
mov
jbe
mov
repnz
lea
dec
popa
or
sbb
cmp
inc
pop
cs
mov
cmpsl
inc
adc
pop
push
push
test
mov
pop
lret
incl
sar
int
xchg
test
fildll
nop
mov
jl
jmp
mov
sbb
sub
mov
xor
test
rcr
incb
xor
inc
sbb
ljmp
pop
je
aam
incl
pop
dec
mov
adc
pop
in
mov
cld
inc
jmp
xor
and
mov
test
hlt
xor
and
outsl
das
inc
mov
fsubp
sahf
jno
jge
psubd
add
mov
or
jmp
jns
or
lds
jmp
sub
int3
push
lahf
sub
or
lock
pop
xlat
in
rcrl
mov
sbb
xor
cld
add
sahf
pop
movsb
shl
fstps
popa
mov
je
outsl
push
jae
or
push
aas
inc
int
ss
fimuls
aaa
fisubrs
inc
jbe
mov
mov
pop
or
fsub
insb
cmp
js
dec
outsb
movsl
incl
je
push
cmc
push
jmp
jmp
push
into
and
rcll
push
lods
stos
xchg
push
jmp
movhps
adc
in
pop
mov
decl
pushf
or
pop
pusha
inc
jbe
call
je
and
mov
mov
xor
lea
out
dec
jg
jne
and
adc
out
dec
nop
fistpll
push
dec
mov
jnp
jnp
insb
insl
decl
inc
mov
nop
fdivl
xchg
sub
mov
fldenv
jg
sub
test
adc
lahf
jno
incl
push
dec
loopne
arpl
ljmp
mov
in
mov
cmpsb
scas
sti
sub
ja
fidivrl
out
out
xchg
incl
sub
cmp
pushl
push
insb
call
jns
lods
xchg
inc
aaa
repnz
data16
mov
push
pop
ja
push
sub
les
mov
mov
inc
cmp
lds
les
aaa
xor
icebp
add
lods
add
dec
xchg
and
dec
sub
les
adc
or
jmp
aas
push
xor
in
outsl
cmp
bound
xor
xor
and
int3
jmp
aad
fs
cmpsl
imul
dec
dec
inc
push
xchg
popa
and
xchg
mov
lds
mov
call
sbb
pop
sti
mov
push
fisubrl
mov
decl
adc
lcall
dec
mov
sub
pop
pusha
rcrb
mov
stc
xchg
xchg
jmp
mov
inc
shr
lcall
pop
sti
popf
fisubrs
xchg
fdivrl
cmp
mov
ret
aas
jg
imull
in
push
outsl
inc
pushl
sar
out
xchg
xchg
dec
je
loop
sub
pop
jne
out
sbb
lods
lds
push
xchg
fbld
repz
xor
dec
test
inc
cmp
or
loope
std
movsl
add
aas
int3
cli
lahf
js
fidivl
sub
aas
out
xor
sar
mov
push
dec
cmp
test
enter
jg
fisubrl
push
incl
pop
imul
pop
and
es
loop
out
xchg
sbb
ljmp
adc
idivb
adc
iret
mov
pop
hlt
mov
incl
adcl
pop
mov
incl
andl
fwait
bound
bnd
daa
xchg
dec
mov
cli
test
das
pop
cmpb
cwtl
repnz
ljmp
mov
push
sbb
incl
lret
pop
lock
int
mov
loopne
or
mov
xor
test
pushf
dec
dec
push
int
and
pop
incl
sub
bt
add
jbe
push
pop
pop
adc
push
push
jmp
dec
popf
mull
testb
cmp
js
sbb
sbbb
int3
outsl
cli
loope
rcrl
jge
add
outsl
xor
leave
mov
cmp
movsl
insb
test
inc
mov
out
mov
jg
call
sbb
fsts
jecxz
test
mov
sub
movl
cmc
mov
jecxz
pushf
loope
mov
mov
out
scas
mov
incl
sub
call
sbb
aaa
neg
iret
mov
clc
jg
add
call
inc
mov
icebp
mov
pop
roll
call
mov
rcr
sub
cmc
int3
pop
jmp
dec
in
ds
out
pushl
push
stos
pop
je
dec
popa
loop
add
add
stc
xchg
xchg
shlb
pushl
loop
in
fwait
lgs
mov
inc
rcrb
mov
negl
sub
andb
popa
stos
js
dec
clc
sub
outsb
jle
cltd
sbb
adc
mov
jns
lods
sub
aas
push
dec
lahf
movsb
fcmovbe
xchg
popa
lret
leave
icebp
adc
inc
movsl
arpl
sti
ffreep
aaa
aad
ret
insl
in
inc
ret
and
loop
movsl
clc
aam
in
fdivr
pop
test
xchg
daa
sahf
lock
and
push
aam
mov
lds
mov
call
mov
sarb
aam
decl
je
test
stos
mov
call
inc
jg
push
push
mov
inc
mov
and
mov
or
sbb
jmp
push
lcall
jle
movsl
adc
shrl
xchg
cld
enter
dec
outsb
dec
mov
jle
xorb
das
lcall
inc
mov
pop
cwtl
ficomps
test
add
xchg
xchg
dec
jmp
pop
sahf
aaa
std
push
push
lcall
rcr
fistl
dec
mov
pop
gs
mov
std
dec
jns
mov
mov
loop
mov
sub
fcomps
dec
xchg
enter
and
cmpsb
jecxz
xchg
mov
fidivrs
push
xchg
mov
fsubrs
js
loop
fs
enter
add
fsubrs
mov
sarl
daa
ljmp
adc
cmp
fdivr
mov
pop
add
nop
leave
ret
outsl
or
cld
xchg
jecxz
sbb
jle
or
and
incl
xchg
out
mov
mov
jmp
jmp
notb
jnp
call
addr16
or
and
outsb
mov
cmc
stos
decb
test
cld
insl
sub
jge
cmpsb
fistpll
mov
add
add
or
ja
or
cld
jnp
out
pop
xchg
sub
mov
jmp
mov
call
repnz
lcall
jo
ss
cli
hlt
incl
loopne
mov
cld
call
xchg
pop
mov
stc
mov
outsl
sub
lock
xchg
cmp
inc
push
push
fdivr
inc
dec
icebp
xchg
xchg
jns
mov
fldcw
dec
sbb
mov
mov
cmpsl
loope
sbb
adc
jl
test
mov
adc
lcall
jge
cltd
ljmp
add
jecxz
lret
incl
mov
jl
jns
inc
int
in
pusha
icebp
fs
inc
insb
add
outsl
mov
test
fdivs
ret
adc
adc
cmp
fisubrs
add
xchg
mov
push
push
out
lds
mov
sti
clc
stos
pop
lods
decl
sbb
pop
adc
das
pop
out
dec
outsb
cmp
or
arpl
call
dec
cs
add
int
ljmp
pop
movsb
in
pop
cwtl
negb
or
into
movsl
lods
inc
inc
push
pop
stc
sbb
add
ljmp
mov
scas
shll
pop
jb
cmp
sub
ss
dec
pop
pop
jg
xchg
cli
rcrb
or
aas
push
cli
jmp
or
lcall
popa
in
decl
cltd
xchg
mov
dec
cmp
pushl
loope
push
leave
mov
imul
repnz
cld
mov
or
mov
lcall
or
cmp
or
cli
push
in
jmp
xchg
jb
mov
mov
or
stc
stos
cmpb
push
jae
lcall
sub
or
xor
push
sbbl
push
jns
cmp
fdivrp
cltd
cmc
push
test
ljmp
adc
pop
cmp
xor
xchg
xor
push
cmpsl
mov
loope
call
je
cli
sub
out
xor
mov
mov
ljmp
cmpsl
fldlg2
fstp
stc
aad
adcb
inc
insl
inc
inc
mov
icebp
adc
mov
mov
or
mov
xchg
inc
sub
jl
fnstenv
fbstp
fists
push
mov
or
in
icebp
cmp
add
ljmp
aas
mov
outsl
sbb
test
sbbb
mov
xchg
pop
cmp
adc
pop
inc
movsb
pop
call
push
mov
imul
mov
jmp
fcomi
add
and
and
xor
js
scas
das
and
mov
xchg
push
je
fadd
sbb
push
jmp
adc
insl
scas
in
movsb
pushl
push
in
mov
hlt
cmpsl
and
inc
fdivl
aas
push
out
pop
sti
push
call
mov
out
push
rcr
lcall
and
dec
frstor
js
jmp
dec
xchg
push
and
mov
lock
jae
ret
jbe
call
testl
adc
mov
rcrb
or
icebp
std
mov
pop
sub
hlt
in
add
pop
frstor
mov
dec
push
sub
pop
mov
decl
call
outsl
push
sbb
push
decl
dec
mov
stc
mov
outsl
push
pushf
aaa
push
ret
int
jnp
fistps
xchg
enter
push
xchg
data16
fdivr
dec
bnd
aaa
cmp
mov
and
addb
mov
push
decl
pop
ja
cmp
ror
sub
pushl
add
mov
mov
pop
mov
mov
jl
jae
xchg
xor
jo
mov
push
sarb
call
lret
mov
mov
daa
jmp
add
loopne
pushl
ss
in
jg
ljmpw
mulb
movsl
jns
mov
nop
jle
jne
mov
inc
lret
out
dec
stos
or
and
jge,pt
icebp
xor
addr16
add
sub
sub
add
cmp
ret
lock
and
lock
add
xor
mov
ret
mov
call
inc
repz
inc
test
sbbb
das
push
xorl
pop
dec
fsubrp
mov
inc
mov
lods
jp
mov
inc
inc
or
pop
loop
rol
inc
les
je
mov
call
jp
jmp
je
pop
mov
cmp
xor
xor
pop
xor
xor
fcompl
es
xchg
ss
icebp
push
out
addr16
xchg
in
les
sbb
jmp
icebp
adc
cmp
sub
outsl
sub
cmp
xor
stos
adc
in
add
and
or
add
xchg
fs
movsb
fdivr
scas
les
das
pop
xor
jb
mov
les
cmp
lcall
mov
fidivs
je
sub
incb
imul
stos
lea
jge
ficoms
xchg
aaa
xchg
in
hlt
lds
out
lods
dec
iret
aad
jno
ficoms
pop
sbb
dec
insl
cmp
push
sub
pop
jle
fmuls
pop
les
xchg
hlt
jmp
pop
stos
ja
daa
mov
or
jmp
testl
imul
divb
xchg
and
jnp
jb
sbbl
fsubr
jae
pop
sbbb
fsubp
adcl
incl
pop
clc
test
mov
jns
movl
xchg
and
jne
xor
test
fs
call
not
mov
cmp
jl
push
sub
mov
pop
sub
es
sbb
call
das
nop
stos
mov
push
dec
dec
adc
pusha
shrl
push
incl
lods
adc
nop
daa
xlat
loop
jle
call
xchg
lock
xlat
test
mov
int
cli
cli
adc
mov
out
call
inc
std
mov
cmp
call
adc
cmp
out
cmp
ud0
fmul
inc
xor
bound
fcomps
outsb
inc
sub
fimuls
xchg
pop
inc
dec
call
sbb
xchg
lods
aaa
cmc
jmp
mov
and
gs
and
je
call
dec
cmp
aam
xchg
scas
push
je
cmp
mov
pushf
xchg
stc
dec
jae
lods
jp
cmp
in
jecxz
jp
enter
mov
sti
dec
push
mov
jmp
rclb
loope
push
std
nop
outsl
add
push
xor
or
mov
xchg
inc
mov
adc
cld
dec
sub
dec
push
pop
jmp
ret
ljmp
mov
fdivr
std
jae
aas
faddl
js
clc
sub
mov
int3
or
xor
add
bound
sar
in
xchg
xchg
cmp
into
ja
dec
mov
pop
cmc
inc
sar
shll
cmp
lods
pop
mov
inc
mov
jecxz
cmp
jmp
loope
repz
in
cltd
mov
add
dec
clc
and
jl
idivb
incl
and
scas
jns
or
hlt
stos
cmp
ljmp
outsb
sub
data16
mov
cmpsl
inc
cmp
mov
aad
dec
pop
add
xor
mov
push
xor
insb
test
stc
xor
in
inc
ljmp
and
pusha
add
pop
decl
push
notl
jae
cmp
pop
lret
cwtl
repz
ja
ret
mov
inc
sti
ljmp
ficompl
mov
ret
jns
jmp
out
cmp
stos
mov
jl
and
into
scas
cmp
fimuls
cs
enter
and
pop
icebp
das
insb
outsb
and
xor
adc
jns
inc
testl
jo
sbb
cli
lret
nop
pop
scas
fistpll
inc
divb
ljmp
insl
mov
call
aad
cmpsb
cmp
negb
fucomp
out
dec
decl
inc
imul
push
incl
cli
push
or
fstps
nop
add
push
add
stos
inc
jnp
jge
orw
add
outsb
fucomip
and
jo
pushl
cltd
int
or
inc
popa
xor
jecxz
fdivr
pushl
test
sub
fstps
xor
mov
mull
pop
adc
call
test
lcall
js
out
jno
jge
mov
pusha
or
lea
mov
add
mov
inc
mov
sub
lcall
cmpsl
pop
cmp
movsl
decl
sarl
fstl
fdivr
in
and
fidivl
dec
xchg
lret
pop
aaa
int
push
push
xor
decl
pop
push
add
arpl
inc
ljmp
push
sbb
cmp
or
std
popf
pop
je
test
icebp
cmp
in
sub
fdivrp
jo
stos
sub
push
cli
dec
test
lret
push
pop
pushl
paddusb
jmp
stos
call
push
pop
xor
adc
and
rcl
in
jns
mov
sbb
sti
ljmp
dec
jmp
imul
decl
hlt
test
ret
adc
mov
and
xchg
pop
and
test
pop
scas
cwtl
test
pusha
in
push
rcl
daa
call
in
jno
dec
jno
dec
lahf
std
or
push
add
arpl
mov
push
sbb
addl
test
in
xchg
insb
fmuls
xchg
in
or
jae
sbb
in
imul
enter
mov
jg
push
jne
out
lods
push
mov
xchg
push
sub
loopne
adc
ljmp
xchg
or
leave
push
decl
test
or
add
inc
out
movl
and
xor
cli
hlt
popa
rorb
out
fcomps
and
sub
call
sti
or
pop
ret
cmp
dec
sbb
lahf
call
sub
hlt
flds
aas
scas
dec
dec
repz
fisttpl
fnstsw
xchg
loope
repz
jae
push
repz
sbb
rcl
mov
orl
jnp
sar
scas
lds
xchg
daa
lea
ds
aas
mov
push
dec
dec
or
cmc
dec
pushl
es
adc
pop
add
out
hlt
fdiv
jmp
ds
lcall
fisubl
lcall
mov
push
mov
incl
adc
shrb
divl
test
iret
ljmp
int
or
inc
xchg
inc
pusha
into
push
decl
sahf
xor
mov
mov
mov
fistpll
pushl
lds
push
cltd
jg
popf
sbb
mov
je
mov
cltd
dec
incl
sbb
jmp
insb
frstor
cmp
pop
call
adc
pop
mov
in
lcall
and
inc
outsl
popf
in
mov
dec
out
mov
jl
push
call
push
incl
cmp
incl
push
mov
stc
or
incl
shl
rorl
les
mov
pop
stos
fstl
imul
mov
insb
fists
stos
fisttpll
test
fidivrs
xor
mov
ret
mov
ds
cli
popf
cmp
hlt
and
das
jg
addl
pushl
adc
lock
fsubrl
call
stos
jecxz
adc
idiv
mov
js
push
lods
outsb
or
xchg
xor
mov
pop
push
add
ljmp
es
xor
jmp
mov
repnz
dec
pop
js
aaa
in
adc
loopne
lds
call
mov
mov
inc
xor
mov
pushl
hlt
scas
mov
cmp
xchg
lods
push
jmp
xchg
stc
adc
mov
fwait
xchg
fdivp
shlb
lret
popf
dec
lcall
or
in
lods
ret
add
sti
iret
adc
xor
mov
or
inc
xor
dec
or
mov
int
mov
add
mov
push
hlt
jp
in
xlat
lcall
adc
stc
pop
cwtl
cmp
jns
jecxz
add
mov
addb
dec
mov
je
daa
jmp
xor
jo
cmp
adc
inc
fdivrs
xchg
pushl
insb
xor
sub
lods
and
pushl
jg
push
sub
movsl
decl
test
add
cld
sbb
js
mov
sarl
ret
add
pop
sub
cld
pop
dec
bound
jle
xchg
or
pusha
dec
mov
cltd
jmp
mov
mov
and
mov
and
and
cmp
xchg
push
push
dec
inc
mov
cld
inc
sub
sub
xor
mov
mov
in
bound
mov
shlb
lahf
mov
push
out
push
jecxz
pop
cmc
in
lcall
fldl
decl
movsl
es
adc
mov
and
jmp
pop
sub
mov
in
mov
and
and
push
jmp
mov
push
outsl
push
call
movsl
cs
adc
loop
popa
pop
ficoml
push
icebp
and
jbe
jae
ret
arpl
aad
ds
aaa
push
fs
mov
push
push
imul
sbb
adcl
lods
cmp
mov
xor
shll
icebp
sbbb
pop
scas
jmp
xor
fcmovnb
dec
xchg
cmpsb
jne
mov
popa
sbb
cmp
scas
in
out
incl
jmp
jl
adc
or
ljmp
add
xchg
sub
pop
in
jmp
lea
cmp
stc
lret
lret
inc
xor
cmc
daa
ds
mov
sbb
push
jmp
iret
inc
call
test
mov
call
jecxz
imul
add
mov
pop
test
jb
jo
das
js
push
pop
add
movsb
or
iret
fs
lcall
rcll
sbb
insb
push
ss
mov
stos
jmp
fsubrs
addr16
xchg
loop
mov
decl
push
jg
inc
call
decl
insb
xchg
das
pop
sbb
pushl
sti
add
inc
scas
std
stc
insl
and
das
fs
andl
das
pushf
inc
icebp
repnz
inc
incl
mov
ja
push
icebp
mov
mov
in
or
mov
mov
iret
inc
jno
or
lcall
pop
test
int
clc
and
lods
jnp
xchg
cmp
jb
xchg
sub
mov
or
lods
jo
add
sti
scas
cmp
cmp
pop
push
add
das
mov
movsb
add
lret
loopne
push
cli
inc
iret
popf
fldt
test
pushf
ss
xchg
push
clc
lcall
movd
push
mov
dec
dec
add
pop
sub
xchg
push
test
lcall
enter
into
repnz
sub
inc
icebp
lcall
jae
andb
jb
stc
push
mov
sbb
nop
das
loope
movsb
pop
mov
push
hlt
adc
mov
sarb
mov
fdivr
lea
fucomip
mov
xchg
sbb
bound
push
mov
pusha
incl
pmuludq
xlat
xchg
sbb
sbb
loope
xor
jl
mov
es
sub
cmp
mov
mov
xor
jno
arpl
mov
mov
int3
cltd
xchg
pop
jmp
and
ds
cmp
lods
mov
and
scas
inc
xchg
lock
clc
mulb
dec
xor
xor
clc
pop
or
jmp
in
mov
in
sbb
js
movl
loopne
mov
push
test
and
call
repz
xchg
insb
adc
das
jmp
mov
xlat
fisubrl
fisubs
movsb
movl
loope
sbb
push
adc
mov
and
insl
dec
xor
sarl
and
inc
shll
stos
cmpsb
adc
inc
dec
and
scas
mov
cmpsb
decl
adc
sahf
call
movsb
cli
jl
ret
call
mov
cmp
mov
popa
enter
and
sahf
lcall
icebp
idivb
outsb
fsubl
cmp
jnp
jl
mov
inc
xlat
into
jg
out
push
lret
dec
jb
mov
aad
sbb
lcall
lcall
fcmovne
notb
dec
mov
lock
and
mov
sbb
mov
sarl
decl
xor
cli
and
sub
or
dec
std
jo
xor
pop
push
add
jmp
xor
dec
jge
stos
xchg
fbld
dec
cld
stc
adc
imul
outsl
stos
xchg
pop
or
pop
nop
mov
mov
sbb
adc
mov
dec
pusha
mov
or
sbb
cmp
pop
call
cmp
clc
xchg
ljmp
cmp
jge
decl
fldcw
add
scas
incl
aam
test
jae
xor
je
imul
stos
mov
test
scas
mov
inc
ljmp
mov
mov
jl
mov
test
sbb
stc
push
mov
stos
movsb
jg
push
js
or
out
shrb
pop
push
cmp
xchg
push
dec
fcmovnb
cmpsl
fidivs
out
adc
lret
xchg
pop
pop
cmp
rol
jge
or
sub
dec
dec
adc
repz
push
lcall
mov
push
es
movsb
adc
mov
jmp
cld
mov
call
cli
and
lods
lcall
idivb
fcompl
xchg
add
insb
and
icebp
aas
imul
mov
mov
mov
fisubl
mov
pop
adc
lds
cs
inc
scas
repz
insl
adc
sahf
sti
pop
xchg
mov
incl
or
xchg
jmp
addr16
sub
aaa
mov
push
dec
lcall
mov
cmpsl
xlat
cmp
loop
cmp
cmp
test
push
int
dec
xor
xor
lods
push
sbb
inc
call
leave
aaa
mov
pusha
mov
xorl
inc
mov
add
decl
leave
dec
ds
cwtl
cld
cld
cmpsl
cmp
leave
out
dec
fisubrs
lods
dec
insl
decl
jp
test
mov
outsl
and
mov
data16
pop
and
js
pop
mov
mov
push
push
push
rcr
mov
in
pushf
lcall
loope
push
jle
mov
push
sbb
and
sbb
hlt
mov
cmp
outsl
and
mov
xor
add
xlat
cwtl
fcomip
shlb
jg
enter
or
cwtl
lock
les
test
dec
lods
loopne
insb
out
inc
push
or
ljmp
pop
lods
pop
ds
sbb
xchg
into
movb
icebp
bound
or
stos
sbb
bswap
mov
jne
popl
or
sahf
jne
pop
jae
mov
mov
rclb
incl
mov
add
lea
jg
mov
pop
jmp
stc
add
lret
and
jg
test
into
cld
sbb
out
pop
rcrl
dec
dec
fcompl
cmp
fcompl
aas
idiv
testl
dec
add
fdivrs
das
loop
in
pop
jne
aaa
ss
pop
pop
outsl
mov
pushl
fbld
add
movsb
out
cmpsl
mov
int
jmp
xchg
leave
mov
pop
ffree
cmc
cld
icebp
ljmp
adc
mov
push
shrl
fmuls
cmc
lcall
mov
cmc
lcall
and
jae
jge
das
shrl
xor
leave
test
and
std
out
sbb
int
mov
lcall
push
ds
test
or
incl
out
gs
xchg
mov
xchg
cld
adc
aad
add
cld
js
mov
pop
pop
or
xchg
popf
divps
fadds
mov
daa
mov
jne
jmp
lcall
adc
gs
ja
cmpsl
arpl
insb
and
in
pop
test
ret
ljmp
and
mov
outsb
cmp
lea
inc
and
mov
in
xchg
add
std
sub
in
cmp
out
sbb
inc
pushl
dec
jmp
ljmp
and
sahf
cli
or
push
mov
lods
jge
les
aas
sar
mov
inc
lock
scas
inc
ljmp
lea
mov
add
aas
pop
inc
addr16
call
push
nop
adc
jmp
mov
xchg
fdivl
dec
cmp
sub
aas
popa
mov
test
sbb
es
push
fwait
jns
add
jg
dec
jae
jno
mov
xlat
and
stos
or
and
sub
mov
lcall
push
icebp
xchg
inc
pushf
ficoml
ret
pop
incl
or
das
cmc
dec
call
movsl
xchg
sbb
mov
sbb
fisubl
cmp
das
pop
packsswb
add
inc
cli
push
fists
add
pusha
iret
ljmp
bound
aam
arpl
ret
mov
lock
call
lods
mov
sbb
incl
jo
jle
jecxz,pt
pop
mov
cmc
fidivl
push
pop
pop
and
loop
mov
cmpsl
push
jmp
adc
in
jg
cmc
out
cmp
xchg
mov
sahf
bound
ds
das
cltd
loop,pn
sbb
push
sahf
mov
inc
aam
dec
mov
pop
dec
add
xchg
sbb
cld
in
jmp
mov
shrb
adc
ss
sub
or
mov
in
stos
cmc
xor
sbb
int
cmpsl
xor
incb
stos
in
pop
ljmp
movsl
sub
push
jmp
aaa
mov
adc
es
jle
mov
arpl
xchg
adc
ljmp
idivl
inc
ret
loopne
lret
push
fucomip
iret
dec
repnz
xor
dec
jo
sub
aas
push
leave
mov
and
mov
and
jle
pusha
dec
push
orb
arpl
and
incl
dec
call
incl
inc
cli
mov
ss
ljmp
lcall
loop
icebp
fs
add
pushf
fsubrs
adc
lret
xor
lret
idivl
repz
scas
jb
scas
adc
call
or
mov
mov
adc
fcomps
std
cld
addl
repnz
outsl
idiv
daa
or
ds
sti
mov
add
push
mov
sar
xchg
inc
sbb
lds
pop
lcall
sbb
cmc
pop
pop
xor
addr16
iret
stos
pop
insb
pcmpgtb
icebp
inc
rcll
xchg
movsb
mov
add
ljmp
in
inc
loop
xchg
faddl
push
shrl
jle
lds
movsl
dec
cmpsb
jmp
lret
mov
cmp
incl
xor
xlat
or
sti
cmp
js
sub
xchg
cmp
mov
inc
and
icebp
xlat
xchg
ret
aas
outsl
push
pop
orl
sbb
jl
cmp
outsl
mov
scas
inc
lods
cli
lret
mov
and
mov
cmp
lcall
sub
ret
jecxz
cltd
inc
dec
pushf
adc
icebp
mov
adc
lods
cmpsb
scas
cmp
xchg
jg
xchg
sub
mov
mov
dec
lahf
mov
inc
dec
repnz
test
or
xor
cmp
ljmp
mov
mov
repnz
mov
iret
ret
in
andl
aas
push
incb
cmp
jmp
out
std
arpl
or
aad
je
or
lods
jo
cmc
clc
lret
outsl
sbb
push
jo
sub
cwtl
popa
dec
loope
xchg
or
repnz
shl
sub
pop
out
sub
incl
movsb
daa
stos
dec
push
push
cmp
loop
push
jle
mov
das
into
cmp
mov
cmp
dec
in
imul
lds
and
lods
movsl
push
dec
jmp
test
jle
sbb
add
lcall
and
sub
lds
mov
call
je
or
add
inc
mov
out
shlb
fcmovbe
dec
lea
arpl
fwait
out
jmp
inc
in
xchg
add
pop
int3
icebp
cmp
lock
xchg
mov
push
cld
fisubs
jo
test
clc
inc
lret
adc
out
lcall
add
addr16
in
sbb
add
inc
add
mov
loop
pop
pop
xor
arpl
das
lock
add
aas
call
sbb
mov
dec
aad
mov
lret
add
enter
mov
xlat
addl
stc
fsub
push
dec
clc
fcoml
pop
lcall
jp
pop
inc
sahf
negl
lea
fisttpll
les
and
sti
fwait
hlt
hlt
aad
sbb
jns
ljmp
sbbl
call
and
add
dec
mov
pop
lea
aaa
notl
pop
jmp
mov
cs
fidivrs
cmp
test
pop
mov
bound
add
push
jecxz
mov
or
cmp
pusha
add
mov
push
out
cli
push
add
push
xchg
mov
test
sub
xchg
stos
repnz
xorl
mov
add
test
incl
call
xor
xchg
add
cmp
and
adc
sbb
in
add
out
ljmp
loope
aad
lods
pop
push
and
add
loope
dec
jne
jg
aad
xor
inc
jp
mov
push
popf
jle
pop
bnd
push
insl
inc
xchg
fnstcw
mov
sbb
mov
hlt
lcall
ljmp
push
mov
jo
js
inc
mov
call
fildll
xor
or
push
incl
mov
pop
mov
pushf
shl
push
ds
fdivr
mov
jbe
jns
ss
stos
and
mov
mov
or
dec
mov
push
cmp
sbb
mov
inc
in
jg
aam
sar
fucomip
mov
xor
decl
push
ror
jo
jmp
pop
xchg
push
push
add
fisttpl
jle
insb
sbb
in
jbe
lds
aam
xchg
mov
mov
in
adc
das
int3
movsb
bound
or
pop
pop
xchg
int
adc
mov
rcrb
and
hlt
scas
xor
daa
mov
adc
push
push
cmc
idivl
and
dec
xor
jns
push
insl
in
dec
int
inc
mov
out
stos
in
jb
ljmp
or
jns
xor
jp
and
fiadds
lods
inc
andb
lock
lret
cli
outsb
sub
inc
xchg
dec
cmp
pop
mov
in
shr
xchg
xchg
sbb
mov
fbstp
scas
lods
call
icebp
popa
pop
sub
cmpsb
mov
iret
mov
icebp
cmp
test
add
ljmp
ss
mov
sub
in
jle
dec
rclb
call
out
sbb
call
jmp
testb
dec
push
sbb
xchg
xorb
sbb
push
std
leavew
jns
incl
sub
aad
sahf
and
pop
dec
inc
decl
testb
and
pop
or
cmovle
test
pop
inc
sub
push
jg
jmp
ja
mov
pushl
xor
and
adc
xchg
adc
std
loope
ljmp
std
pop
popa
test
out
call
nop
pop
sub
fdivr
andl
test
ljmp
js
test
fiaddl
das
ljmp
jl
mov
hlt
lds
aam
popf
clc
jg
inc
outsl
dec
mov
lcall
xchg
clc
push
pop
popa
clc
push
ljmpw
push
test
adc
std
pop
push
lret
std
popa
cmc
mov
and
aad
jne
push
adc
pop
fistps
incl
add
fwait
adc
adcl
add
pop
pop
movsb
xor
xorl
xor
pop
ljmp
aas
pusha
push
push
fwait
out
jmp
ljmp
xorl
pusha
jecxz
adc
incl
and
pop
aas
jmp
jp
and
push
rcrb
pop
push
jg
push
loop
out
jmp
mov
pop
lcall
loope
fstl
adc
jmp
sbb
xor
cmp
inc
xchg
insb
rcr
adc
jecxz
and
pushf
pushf
out
add
outsb
test
pop
or
push
iret
cmc
xchg
aas
sbb
cmp
push
inc
ljmp
jns
mov
cmp
push
sub
lcall
dec
mov
hlt
jmp
push
cmp
dec
cli
cld
sub
mov
and
rcl
movaps
sbb
imul
push
lret
jb
test
add
mov
daa
mov
sahf
decl
jge
or
ljmpw
mov
insl
in
pop
push
movsl
jb
sub
xor
je
pushl
leave
mov
and
pop
lcall
jo
in
mov
adc
mov
out
dec
dec
jp
imulb
add
cwtl
push
lds
fdivr
fst
notb
pusha
or
xor
sbb
push
outsb
mov
add
rclb
jmp
movsb
lret
add
je
cld
call
arpl
iret
add
adc
cli
sub
in
lock
movsl
sub
outsb
sahf
int
sub
lahf
pop
cmp
or
stc
incl
repz
push
mov
movsl
cmpsl
je
call
xchg
push
ljmp
xchg
dec
call
fstps
cmp
ljmp
adc
hlt
in
ret
loop
lcall
leave
pushf
stos
call
imul
xchg
lock
insl
and
int
in
sbb
lods
xor
je
loope
cmp
mov
add
lock
mov
push
sub
pop
or
inc
orb
ss
fisttpl
xlat
mov
xor
push
mov
pushl
jmp
mov
loopne
sub
iret
ljmp
mov
jl
push
sbb
or
mov
push
lcall
lcall
ja
jl
std
mov
movsl
shrl
mov
test
jle
fcomps
bnd
movsl
scas
xlat
and
xor
repnz
shr
pushl
out
jo
sbb
pushl
pop
ja
call
sahf
mov
incl
sub
call
sub
jmp
aaa
mov
test
in
in
sub
jbe
arpl
cmp
pop
ljmp
subb
or
leave
pop
xchg
jg
clc
mov
inc
leave
aaa
jae
xchg
or
aaa
out
loopne
adcl
jmp
and
mov
mov
imul
addr16
fists
sub
out
mov
ret
pusha
jg
xchg
push
push
xor
xor
call
rorl
add
cli
push
in
js
fcomip
mov
das
scas
and
or
jmp
adc
add
scas
lcall
test
movsb
rorb
add
sti
call
stos
sbb
add
hlt
jae
adc
loop
aaa
dec
gs
cmc
jbe
xchg
into
call
stos
outsb
sub
imul
lcall
sub
pop
incl
pushf
adc
lahf
in
mov
adc
cmp
sub
aas
nop
es
sub
loopne
decl
or
mov
movsb
pop
insl
cwtl
push
incl
inc
cmp
push
sahf
out
sub
sbb
cli
aas
lahf
dec
out
mov
leave
pop
and
testb
sbb
popf
call
mov
call
mov
add
hlt
xchg
in
jl
sbb
loopne
enter
fbld
decl
loop
mov
decl
mov
enter
addr16
cld
push
in
pop
imul
das
push
sbb
lock
aam
mov
notl
daa
inc
fcmovb
jl
add
xor
shll
les
fisttps
mov
dec
fucomi
daa
adc
pop
mov
ficomps
cmpsb
out
and
add
decl
in
push
ljmp
add
ljmp
jp
out
push
shl
pop
scas
pop
and
jmp
scas
mov
negb
mov
sub
inc
stos
cwtl
iret
mov
das
dec
lea
push
ljmp
test
cmp
and
std
insl
test
int
sti
std
popa
enter
jae
js
jne
clc
loope
pop
inc
mov
lcall
adc
outsb
inc
div
ljmp
push
jge
jmp
cmp
mov
loope
jne
jb
sub
ret
cmp
lahf
insb
enter
push
cli
lock
inc
outsl
cmp
fisttpl
dec
ljmp
stc
ret
jge
std
popa
mov
das
add
jge
in
jmp
push
xor
sub
loop
lds
fstpt
nop
and
test
mov
repnz
mov
scas
aad
sub
mov
cld
sub
xor
dec
cmp
sysret
mov
mov
mov
test
aaa
les
stos
aad
dec
jno
insl
dec
cmc
sub
sarl
arpl
or
aas
bound
test
imull
lods
incl
mov
xor
mov
jge
insb
inc
cmp
xlat
dec
int3
int
call
mov
jb
lcall
lahf
xchg
push
outsl
cmc
xlat
lds
outsb
imull
dec
call
les
aas
cmp
decl
jnp
sbb
rcll
jmp
out
aad
fildll
cmp
inc
cmp
lods
cmp
xor
jmp
sarb
js
jmp
push
dec
dec
jge
ret
adc
test
inc
pop
mov
les
das
pushf
sahf
lds
mov
dec
mov
repz
rcrb
jp
xor
vpmacsdql
incl
arpl
mov
pop
rol
aaa
add
decl
jb
mov
pushl
pop
imul
leave
out
lcall
jae
aaa
jecxz
bound
inc
out
pop
pop
mov
ret
in
fwait
in
outsl
mov
adc
cmp
int
incl
aaa
into
cmc
inc
hlt
out
sub
and
loopne
into
call
mov
hlt
xchg
dec
dec
das
das
addr16
pop
call
sub
xor
inc
out
cli
test
cmp
cmpsl
cld
loope
stos
nop
pushf
jg
dec
outsb
pushl
adc
call
ret
aad
leave
lcall
pop
test
in
fbld
lcall
add
inc
psubusb
push
cmp
sub
or
inc
leave
dec
in
psubq
xlat
jmp
scas
fwait
es
lcall
adc
insl
testl
push
xchg
push
lcall
ret
fbld
not
je
ud0
or
xchg
fisubs
xchg
stos
fwait
pop
test
jae
xchg
iret
decb
popf
mov
mov
lahf
jmp
mov
ja
pushl
cmpsb
or
sbb
dec
xchg
mov
imul
jmp
pushl
add
call
int3
outsl
mov
mov
jne
adc
inc
cli
movsb
in
mov
das
incl
mov
dec
fmul
clc
dec
rcrb
aam
ret
pop
cmp
aas
in
adc
jle
sub
dec
pushl
je
andb
insb
pop
ds
jmp
push
bnd
test
enter
jns
lock
pop
mov
push
mov
mov
ret
mov
pop
lret
xor
ljmp
pop
xor
jnp
mov
int
div
cmpb
jg
sub
pop
add
in
pop
stc
lods
add
lock
pop
cmp
lcall
loopne
rolb
mov
or
push
decl
pop
pop
sti
mov
xchg
cmpsb
push
pop
sub
ljmp
adc
xchg
xchg
xchg
ljmp
ret
adc
ljmp
in
xchg
jp
cmp
es
fcompl
push
sarl
jbe
ret
adcb
mov
and
sti
cmp
in
pushl
xchg
repnz
mov
sub
dec
fisubrs
pop
out
mov
outsl
mov
add
mov
cmp
push
cmp
lcall
cwtl
push
dec
adc
jb
adc
push
incl
scas
lods
push
mov
repnz
mov
leave
jmp
js
sub
sahf
out
not
imul
mov
mov
lret
pop
sbb
xlat
push
les
sti
cmp
stos
dec
test
adc
add
movsb
jne
aad
add
jno
xchg
aad
xor
rcrl
int
sbb
mov
lods
mov
out
test
mov
cmp
repz
call
sub
ret
jmp
mov
lock
aas
mov
insb
outsb
call
dec
push
sar
pop
int3
lods
iret
stos
scas
push
call
sbb
aaa
cld
jmp
loopne
inc
jle
jmp
cmpsl
xor
insb
out
xchg
push
insb
cli
adc
xor
sbb
sub
out
add
call
sub
fnsave
xor
outsl
jg
sahf
outsl
push
mov
pop
clc
push
test
lahf
mov
dec
out
sub
ljmp
cli
fldl
xchg
mov
decl
repz
jp
mov
lods
icebp
push
jp
aad
sub
jg
loopne
lret
xor
jmp
cmp
std
lods
mov
popf
or
or
pop
push
push
and
bound
sbb
sarb
lock
mov
lcall
imul
jecxz
out
xchg
ss
push
jg
jecxz
sbb
lcall
pop
dec
push
push
mov
pushl
mov
mov
rcl
clc
aad
incl
dec
adc
pop
cmp
mov
and
ljmp
or
adc
jnp
dec
jno
pop
add
jecxz
jmp
push
and
sti
pop
aaa
push
adc
pop
mov
inc
push
cmpsb
aas
inc
xor
std
and
xlat
loope
add
flds
sar
lahf
ss
call
pushl
das
mov
xchg
push
and
aaa
lock
mov
mov
decl
push
adc
push
mov
arpl
enter
xlat
outsb
orl
inc
sbb
jmp
mov
mov
lcall
sbb
pop
xorl
pusha
add
or
pop
rcll
stc
xor
fldt
xchg
pushl
adc
mov
sub
test
insl
ss
ljmp
inc
xchg
mov
dec
adc
std
loopne
das
fistl
or
add
mov
cmp
or
add
jg
fs
shll
dec
or
push
shr
inc
out
leave
loopne
adc
jmp
jg
ja
jecxz
mov
clc
lock
stos
xchg
pushl
icebp
dec
pop
mov
mov
fs
pop
mov
rorb
xrelease
ss
repnz
dec
shll
xchg
popa
ret
rorb
std
jp
out
or
lcall
clc
loop
adc
stos
pushl
ret
lds
and
cmp
faddl
mov
xchg
jnp
nop
xor
mov
add
push
adc
pop
ljmp
mov
dec
xchg
add
mov
lock
adc
add
out
je
push
mov
repz
mov
mov
inc
lcall
xor
sub
adc
inc
call
xlat
cld
arpl
jnp
fsubr
lea
decl
pop
cmp
loop
popf
inc
sar
dec
insl
push
mov
mov
hlt
cmpsl
outsl
xor
ljmp
xor
add
repz
shlb
push
pop
push
adc
push
mov
and
add
or
jge
jmp
cmovne
in
cld
mov
lret
jle
lret
xchg
cmp
xchg
or
test
or
cmp
mov
lcall
in
leave
mov
roll
and
cmp
and
jmp
inc
test
incl
sub
fiaddl
lret
ds
add
and
push
mov
mov
jae
sbb
popa
ljmp
popf
mov
adc
lret
cli
sti
daa
push
and
cmpsb
je
fistps
stc
call
cmp
je
fwait
pushl
xchg
inc
sub
out
inc
jo
in
les
xchg
pop
or
sti
mov
inc
mov
into
mov
cmp
pop
xchg
xor
rcrl
inc
adc
fisttpl
inc
cli
ds
sub
jle
mov
popa
mov
jmp
or
sahf
sbbb
lcall
and
xor
stos
jbe
and
adc
sub
push
pushl
outsb
cmp
lcall
mov
daa
add
call
lds
pop
cwtl
dec
or
enter
add
loope
jae
lea
dec
inc
lret
and
jge
pop
mov
lock
mov
das
fisttps
or
icebp
lea
dec
loopne
leave
and
lcall
push
pop
pop
fimuls
pushl
pop
filds
sbb
scas
mov
movsb
and
jecxz
and
or
push
aas
imul
push
repz
or
test
pop
fnsave
sbb
jecxz
rcrb
xor
add
aam
sbb
mov
decb
mov
lock
jp
les
bound
mov
mov
and
rcll
mov
dec
lcall
dec
adc
aas
jmp
push
mov
shlb
cli
ja
mov
es
cmpsl
arpl
out
inc
fistpl
adc
sub
cmp
pop
jmp
fimull
pop
popa
lcall
movsl
test
rcr
adc
sbb
filds
shrl
sbb
incl
pushf
sar
arpl
mov
mov
cmp
mov
int3
push
adc
mov
mov
iret
cmp
aas
pop
leave
xlat
pop
mov
pop
loop
sbb
pop
pusha
mov
dec
js
lcall
cmp
gs
in
cli
aas
fisubrs
std
xor
or
and
mov
dec
add
mov
fbld
lret
xor
mov
add
test
mov
jle
jmp
inc
fdivr
jge
cmp
decl
xor
mov
ret
sbb
adcl
sub
mov
stos
nop
adc
xor
into
cmpsb
and
dec
mov
sarl
in
incb
fimuls
lret
in
lods
ret
test
iret
pop
test
pop
cmp
ss
sub
mov
ret
xor
and
js
push
jle
daa
fiadds
inc
loopne
and
push
sub
or
stos
loopne
shlb
je
mov
dec
sub
jg
push
pop
cwtl
les
mov
cltd
adc
mov
mov
pop
jmp
ljmp
test
sbb
loope
jmp
push
adc
leave
bnd
pop
ret
pop
jae
fs
mov
mov
lods
lock
nop
inc
imul
sbb
fists
and
mov
out
cmp
ljmp
jnp
jnp
jne
js
std
int
mov
shrl
dec
push
sar
std
fdivrl
sub
aam
fwait
or
xchg
cli
mov
repz
xchg
cmpsl
outsl
lret
aaa
mov
sar
pop
aas
iret
fs
cld
incb
call
adc
daa
mov
cmc
loop
ljmp
xor
push
cmpsb
pop
dec
push
push
fwait
push
test
cli
repnz
fcomps
shll
cmpsl
stc
mov
nop
cld
pop
in
pop
jecxz
pop
repz
jo
xchg
outsb
xor
push
mov
int3
sub
gs
ljmp
cmpsb
mov
incl
lahf
push
jmp
mov
xor
inc
mov
fsts
pop
mov
pop
dec
push
sti
lret
mov
add
or
cmp
enter
bound
cld
aas
roll
lods
adc
dec
sbb
push
inc
mov
insl
incl
outsl
loop
addr16
sarl
cmc
cld
sbb
or
xor
pop
iret
test
ljmp
scas
add
decl
fstps
lods
lcall
dec
cld
out
mov
xchg
pushl
or
popf
out
sbb
jg
std
xchg
cmp
leave
inc
into
cltd
adcb
ljmp
adc
sub
das
sahf
mov
idivl
notl
cli
adc
xor
xchg
popf
pop
and
and
pop
pop
or
cmp
cmp
push
xchg
decl
push
test
mov
dec
push
xor
jmp
or
inc
clc
dec
fnsave
pop
mov
xor
pop
aad
std
push
cmp
sub
jle
mov
cmpl
testl
idivb
add
pop
add
push
or
xchg
sbb
xor
imul
pop
ljmp
scas
out
mov
cmpsb
pop
fcompl
call
add
add
aam
lret
mov
mov
mov
push
ror
decl
push
mov
mov
or
dec
movsl
xchg
fwait
inc
aad
addr16
pop
dec
decl
movb
cli
mov
push
sbb
psrlq
std
push
lcall
sbb
mov
inc
data16
jmp
subb
in
es
aas
aad
push
inc
push
les
lret
idiv
shll
int3
jns
mov
flds
icebp
inc
incb
push
mov
cmp
out
test
test
push
jbe
cmp
sbb
add
jge
sahf
imul
jns
pop
pushl
mov
test
mov
xor
rclb
push
inc
fdivl
mov
mov
jmp
shr
inc
je
or
xor
adc
xor
mov
incl
outsb
in
push
roll
call
clc
cmp
ljmp
cli
jnp
lcall
sarb
push
and
cmp
adc
je
imul
dec
cmpsb
ljmp
out
insb
ret
cld
in
cwtl
inc
cwtl
call
call
aam
add
pushl
dec
das
sbb
decl
mov
lcall
cmpsb
les
ljmp
xor
inc
jae
jne
mov
jns
pusha
cltd
mov
jge
push
pop
call
fldcw
and
adc
xlat
or
push
aas
cmp
stos
inc
fadd
push
or
fwait
pop
adc
aam
pop
lods
sub
xchg
sub
sbb
andl
call
jmp
pop
add
lock
adc
adc
and
testl
adc
test
lds
ret
in
repz
dec
add
fiaddl
stos
in
inc
jmp
ss
loop
cli
inc
xchg
pop
jg
movsl
cltd
cmpl
cld
or
push
je
rorb
jg
inc
and
or
pushf
pushl
xlat
outsl
add
jmp
adc
hlt
sbb
inc
sbb
sbb
add
incl
push
in
adc
jae
test
nop
push
clc
mov
xor
jae
sbb
enter
out
mov
movb
fimuls
pushl
sbb
xchg
mov
mov
cmpsb
xchg
sar
lods
mov
or
ret
incl
rcrb
loope
std
inc
lret
mov
leave
fcoml
jno
add
sarb
test
mov
out
push
xor
int
and
inc
movsl
flds
loopne
cmovb
inc
loop
loope
add
sbb
add
outsb
stos
or
jae
jl
pop
push
ljmp
mov
xorl
pop
cmp
fistpl
lds
and
adc
popa
out
xlat
and
repnz
mov
add
pusha
dec
sbb
jp
lea
mov
jbe
mov
jg
lock
clc
push
or
pusha
les
cs
add
jb
sti
mov
mov
xor
jae
ror
popl
dec
fwait
out
pushl
and
ljmp
sub
pop
ss
jmp
dec
jno
push
icebp
jmp
adc
popa
mov
mov
xchg
int3
popa
lock
sub
out
dec
shlb
mov
fisubs
loopne
pushf
sbb
inc
push
jp
stos
and
mov
cli
inc
jecxz
decl
sysenter
sbb
adc
mov
mov
or
pop
sub
test
xor
or
mov
mov
fwait
cli
jmp
dec
leave
mov
pop
aad
or
push
call
xchg
imul
xchg
jge
fwait
jmp
aam
mov
imul
loope
dec
adc
imul
gs
loopne
jno
push
call
lods
repz
decl
rolb
nop
lcall
adc
pushf
mov
pop
sahf
jno
jnp
sar
xchg
pop
push
cltd
jg
or
pop
mov
pushl
jns
int3
mov
std
pushl
sbb
cmp
xor
call
out
call
test
cmp
lcall
mov
cli
and
loope
xchg
fiaddl
outsl
xor
out
inc
sar
push
hlt
lock
jmp
sarb
mov
pop
out
cwtl
imul
push
add
mov
fidivs
add
cmp
jmp
cmp
sub
xchg
sub
rep
in
and
or
cmp
jp
icebp
inc
mov
daa
dec
shrl
xor
js
incl
movsb
bound
in
cmp
movsl
test
lahf
xlat
insb
add
and
add
sub
jmp
mov
setge
xor
clc
or
out
mov
xchg
fdivp
cwtl
test
in
cwtl
xchg
or
sbb
or
fcmovu
hlt
mov
xchg
push
fistpl
pushf
aam
loope
movsb
jae
mov
decl
pop
lods
iret
pushl
out
cwtl
cwtl
fadds
loopne
mov
jmp
push
cmc
pop
jne
lret
call
ret
dec
mov
out
push
inc
out
dec
gs
or
in
shll
sahf
pushl
inc
out
cld
mov
sub
jmp
mov
aas
ljmp
int3
add
ljmp
adc
push
jecxz
leave
sti
jl
repz
int3
pop
sub
outsl
xchg
push
dec
lea
scas
inc
jns
dec
dec
xor
jmp
cmp
popa
sub
sarb
fisttps
jmp
arpl
dec
mov
daa
insl
daa
fcmovnu
mov
daa
ljmp
xchg
and
push
call
int
dec
and
pop
inc
xchg
jae
aaa
psubusb
xchg
and
aas
int3
pop
pop
dec
push
mov
incl
jb
jmp
jl
data16
xchg
call
xor
push
sahf
pop
xchg
or
lcall
in
cmp
dec
dec
je
push
es
faddl
iret
ljmp
sti
sbb
pop
call
in
xor
jne
push
cmc
cmpsl
std
sets
in
sbbb
push
cmc
test
mov
cmp
js
dec
jmp
mov
mov
lret
and
xor
data16
sub
pop
pop
pop
pop
test
jne
sbb
insb
mov
decl
ljmp
cmpsb
std
mov
adcb
in
inc
dec
cmpb
inc
jno
cld
idivb
fwait
adc
push
mov
add
mov
stos
imull
mov
loop
repz
fistps
incl
jb
shll
xor
movsl
movb
fimull
mov
pop
xchg
jno
mov
jmp
loop
mov
mov
mov
ljmp
jns
inc
enter
call
ds
inc
daa
pop
sahf
and
mov
push
fists
in
mov
aaa
jmp
xlat
shrl
into
dec
mov
scas
inc
insl
cld
fsubrp
hlt
cmpsl
mov
push
cmpl
pop
adcl
adc
arpl
dec
mov
pop
pop
es
test
jmp
add
cld
lods
mov
push
das
sbb
nop
mov
mov
push
mov
push
adc
dec
call
push
or
mov
or
sbb
stc
test
pop
mov
loope
jmp
add
dec
push
jmp
add
dec
jecxz
push
hlt
sbb
sti
loopne
jae
mov
daa
pop
cld
mov
andb
es
sub
arpl
mov
mov
mov
mov
movsl
pushl
call
push
mov
pop
sbb
or
imul
sub
ret
mov
jg
rclb
mov
cmp
popa
test
fdivr
adc
das
push
add
and
pop
ljmp
add
lret
out
call
fstpl
jmp
out
cmp
and
jae
lds
dec
and
push
idivb
ljmp
jo
mov
out
push
loope
dec
loopne
adc
ret
cmp
mov
flds
dec
fists
std
push
adc
sbb
lea
lds
jae
jmp
mov
adc
add
jne
ljmp
mov
lret
add
or
cli
push
cmp
lock
stos
daa
mov
push
xchg
mov
mov
jmp
push
mov
sbb
aas
call
inc
cmp
negl
push
inc
inc
cld
pushl
cltd
aam
insl
mov
stos
ljmp
inc
inc
inc
jae
dec
jecxz
nop
mov
add
mov
pusha
push
decl
ficoms
dec
fcoml
movsl
divb
mov
pop
cmp
or
enter
stos
mov
popf
adc
or
cmp
repz
mov
xchg
incl
test
cmp
dec
cmc
ljmp
inc
loopne
push
call
stc
mov
test
lcall
push
push
imul
push
loope
mov
lods
jno
mov
push
daa
pop
leave
cwtl
or
fsubrl
call
insb
cltd
test
js
jb
sub
adcb
ret
mov
shr
sbb
pop
cwtl
in
jl
and
movsb
stos
pop
lcall
imul
jno
popf
mov
pop
xchg
dec
mov
decl
rep
cmp
adc
xchg
cltd
stc
and
sub
pop
fdiv
push
aad
push
movsl
incl
inc
and
mov
lods
jns
inc
fidivrs
pop
ljmp
inc
gs
sub
bnd
fistpl
incb
lret
mov
arpl
add
dec
sub
ljmp
scas
clc
out
mov
jmp
clc
jnp
jno
aam
mov
or
cmp
jle
cmp
loope
jg
mov
aad
sahf
cmpsl
ficompl
sub
ss
inc
test
sar
mov
pushf
outsl
mov
mov
cmpsb
insl
stc
and
rolb
cmp
test
repnz
mov
cmpsl
out
rol
insb
icebp
mov
scas
add
pop
mov
and
pushl
stc
and
call
xchg
push
push
decl
lret
mov
lds
add
adc
mov
loope
incl
loopne
pop
xchg
insl
std
mov
xchg
pop
out
lcall
mov
cmpsb
in
push
iret
out
jb
lret
pop
hlt
push
sbb
lea
mov
jg
mov
xchg
aam
inc
pusha
es
stos
in
stc
mov
inc
mov
xlat
lea
incl
xor
icebp
push
paddd
and
scas
into
gs
fdiv
lcall
jmp
lods
mov
xor
stos
jecxz
cmp
sar
rcll
xchg
mov
push
dec
mov
stc
xor
fcos
std
fisubrl
cwtl
les
fdivrs
stos
xchg
mov
or
repz
ret
call
and
stc
push
loopne
es
mov
ja
ljmp
mov
ja
mov
mov
dec
daa
xor
sbb
repz
add
push
cwtl
pop
or
inc
push
aam
mov
mov
mov
cmpsl
cltd
das
pop
loope
je
jecxz
test
addr16
mov
lret
xchg
cltd
push
outsl
lea
or
inc
out
sbb
add
adc
sub
mov
sbb
incl
mov
mov
jle
push
lds
sbb
sbb
pop
fld
in
mov
adc
dec
jmp
xlat
sti
shl
pop
stos
ljmp
mov
das
mov
jmp
pusha
call
test
dec
mov
inc
jo
decl
dec
enter
jbe
jle
sbb
aad
fildl
pushl
mov
or
xchg
das
aaa
repz
pop
sub
aad
cmp
cli
loope
push
pop
dec
adc
push
cmp
lods
movsb
push
adc
sbb
mov
ljmp
jbe
stos
xchg
ret
fsubs
aas
insl
push
mov
daa
mov
ljmp
lods
hlt
stos
push
add
lahf
cmp
lods
call
pop
cmp
dec
int3
addr16
or
std
or
cmpsb
mov
std
push
ljmp
sub
sbb
outsb
pop
cmp
mov
inc
sbb
pushf
lock
add
dec
xchg
incl
fiaddl
call
pop
cmpsl
inc
add
inc
loop
es
cld
sub
mov
dec
mov
adc
imul
cmpl
xchg
leave
fbld
cmp
xchg
push
lods
jbe
adc
mov
stc
outsl
inc
negl
fstl
adc
lret
push
push
xchg
cld
lods
sahf
test
dec
repz
mov
sbb
lcall
test
rcll
mov
clc
adc
cwtl
into
xor
mov
stos
fbld
shl
in
add
test
es
ljmp
neg
mov
ljmp
adcb
fstpl
lods
and
cld
jl
sbb
sbb
repz
in
mov
icebp
xor
sar
test
xchg
xchg
pushl
not
jb
sub
cmp
mov
and
pushl
mov
stc
pushl
inc
jp
incl
or
call
xor
push
add
dec
jmp
shrl
mov
divl
movsb
dec
call
adc
sar
pusha
sub
adc
jno
rorl
sahf
int
loope
pop
in
ljmp
lcall
lcall
std
rorb
rorl
and
pop
jecxz
pushl
cmpsl
pop
pusha
mov
pop
mov
pushl
in
pop
test
cmc
loopne
mov
and
add
notl
enter
or
ljmp
sbb
test
push
push
lea
loop
jp
mov
mov
mov
jnp
leave
jg
sub
insb
sbb
jno
add
sub
ud0
test
daa
push
subb
sti
jno
popa
stos
jns
jg
jl
jno
test
push
mov
pop
mov
or
insl
mov
js
int3
inc
sahf
ljmp
xchg
out
into
shll
lcall
imul
icebp
sbb
outsl
cmp
bound
shl
outsl
test
or
popf
ljmp
fstp
push
pop
push
sub
cli
cmpb
sub
mov
dec
bound
jp
push
pop
pop
pop
stos
xchg
hlt
and
jbe
pop
sub
push
inc
in
mov
je
repnz
jne
jp
push
int
push
stos
pop
pushl
xrelease
mov
adc
ret
mov
test
and
push
sbb
je
jmp
jb
mov
xchg
pop
ja
mov
or
jmp
push
push
push
into
push
in
push
cli
push
rcl
decl
inc
cmpsb
std
mov
push
pop
pop
lcall
les
add
sub
xchg
mov
push
cmp
adc
sub
mov
sbb
scas
stos
sar
loop
jp
inc
test
mov
inc
movl
sub
cmp
sub
pop
cmpsb
jns
cmpsl
push
incl
or
stos
and
mov
inc
sbb
fadds
jmp
adc
dec
lds
aad
dec
mov
jne
lcall
xorl
pop
xchg
sti
std
cmp
nop
jne
jg
pop
mov
in
inc
inc
jmp
leave
iret
dec
mov
fsubrs
mov
gs
test
stc
je
dec
daa
sbb
jle
jg
mov
jmp
mov
jp
xorl
mov
imul
jl
test
adc
arpl
lcall
mov
decl
mov
fdiv
adc
ja
fidivs
or
fcos
stc
mov
ret
repnz
inc
std
repnz
decl
das
or
fidivrs
decl
jge
lret
ret
mov
push
bound
shlb
repz
ljmp
sbb
sub
jp
cmpsl
jno
xchg
cli
add
mov
xlat
xchg
loopne
dec
push
fbstp
cli
loop
mov
push
xchg
jnp
dec
outsl
pop
lock
dec
mov
cmp
enter
jl,pn
fldl
pop
xlat
out
decl
enter
cmpsb
push
jmp
xchg
and
xor
pushl
add
push
enter
in
pop
adc
in
jp
push
cmp
rcr
ja
mov
out
fcoml
jmp
das
cmpsb
gs
ds
idivl
call
lret
incl
cmpb
aam
jle
xchg
pop
mov
cmpsl
sbb
idiv
and
je
mov
ds
incl
sahf
cltd
repnz
cld
jg
out
pop
les
cmp
push
push
ljmp
ret
add
lcall
mov
flds
or
mov
sbb
js
jae
jecxz
jmp
push
sarl
jmp
lcall
iret
cmpsl
loope
push
or
leave
mov
lock
clc
popf
stos
inc
jns
add
xchg
enter
sub
outsl
cwtl
add
push
sub
cli
stos
scas
lods
out
dec
je
decl
std
pop
xchg
pop
push
pushl
mov
fdivl
ss
call
xchg
mov
dec
les
mov
xor
dec
cltd
cmpsb
adc
aaa
mov
dec
enter
rep
mov
jge
cmp
dec
or
mov
call
pop
jae
nop
outsb
loop
sbb
fnstenv
cmp
ljmp
ds
xor
mov
out
push
push
outsb
std
pop
push
mov
sbb
dec
or
incl
outsl
xchg
xor
movsl
gs
mov
or
out
add
xor
or
mov
filds
lret
jge
jne
push
push
lods
pop
jl
fidivrs
push
cmp
call
or
dec
mov
cmp
cmp
xor
inc
fstl
ljmp
push
fidivs
in
mov
int3
cld
aad
repnz
jg
push
sub
inc
pop
mov
hlt
cltd
inc
cmp
loop
aad
aaa
adc
shll
loop
jp
mov
xor
icebp
jns
les
lcall
insl
test
decl
cmp
jl
adc
and
or
call
jp
dec
fcoms
imull
push
idiv
cwtl
add
arpl
nop
cmp
add
test
inc
sub
push
mov
fsub
fs
shl
nop
stos
addr16
sub
xchg
shll
xchg
dec
mov
fwait
repnz
stc
push
lea
and
mov
inc
jle
ljmp
ja
push
xchg
push
mov
outsl
jp
push
push
pop
je
decl
imul
in
cmp
dec
imul
jmp
fdivl
add
push
mov
int
mov
jmp
xchg
sbb
idivl
aas
or
jmp
lret
bound
jae
mov
sbb
jmp
or
jle
test
lcall
add
daa
adc
jp
mov
or
mov
or
ret
aaa
loopne
push
ret
js
add
scas
sbb
xchg
decl
stc
dec
mov
in
xchg
les
sub
lods
ror
ljmp
dec
fstl
ljmp
je
adc
add
call
pushl
cmp
sar
gs
adc
into
inc
aaa
cmpsl
cmp
cmp
jp
sbb
cmp
lcall
imul
rolb
dec
in
jmp
lret
sub
or
pop
out
incb
pop
shlb
ljmp
icebp
rcrb
movsb
inc
loope,pt
mov
or
es
mov
sbb
lods
call
gs
cmp
movl
adc
dec
mov
test
inc
in
jge
mulb
xchg
roll
iret
jb
mov
pop
mov
fists
or
xchg
cmc
stos
push
push
sbb
mov
sub
jmp
xchg
data16
je
notb
sbb
call
repnz
aam
insl
push
decl
adc
imul
pop
cmp
push
sub
push
jno
rcl
mov
stos
pop
out
mov
cmc
cltd
pop
lcall
xchg
mov
or
mov
mov
sahf
mov
or
jg
jg
inc
leave
mov
mov
cltd
lock
repnz
mov
test
xor
popf
loope
jns
xchg
imull
in
xor
adc
pusha
repnz
cmp
or
pop
push
int3
dec
fsts
stc
jmp
xor
test
rolb
mov
lret
mov
mov
xchg
in
loop
cmc
cmp
iret
outsl
dec
mov
sub
xchg
mov
xchg
movsb
jns
pop
mov
repnz
icebp
aam
aad
cld
in
les
bound
cld
sub
add
sub
lret
jp
mov
cmp
push
mov
jb
sub
jp
into
clc
stc
stos
fucomi
jbe
or
xchg
pop
sub
sbb
dec
ljmp
xchg
pop
inc
add
mov
inc
dec
jmp
lcall
loop
les
cmp
or
iret
shl
imulb
sahf
cmc
mov
jbe
push
ss
sbb
dec
dec
call
inc
dec
roll
scas
mov
cmp
push
lahf
rolb
mov
std
mov
or
push
test
xchg
pushl
jbe
mov
std
push
pop
ret
sbb
jl
imul
fbstp
pop
mov
stos
mov
cwtl
ljmp
lahf
gs
xor
idivl
mov
imul
pushl
stos
sbb
test
or
pushl
into
mov
jmp
adc
xchg
std
sbb
jl
mov
push
pop
push
cwtl
mov
cmp
outsl
mov
push
and
mov
decb
shrb
lea
fimuls
js
lcall
mov
js
adc
mov
cmp
xor
cs
ficompl
pop
jecxz
pop
ljmp
xchg
ja
jmp
fstpt
icebp
xchg
outsl
inc
outsl
movzwl
std
push
adc
pop
stos
or
jg
sub
xor
or
push
jmp
imul
pushl
or
out
jge
std
loop
ret
sbb
dec
lds
fisttpll
jnp
out
mov
xor
outsb
pop
xor
mov
inc
push
push
jmp
scas
call
test
xor
shlb
jb
inc
stos
loope
sti
lret
or
push
test
sub
subb
int
repz
lahf
adcl
bound
jmp
push
mov
jnp
cld
mov
xlat
dec
mov
movsb
sbb
mov
push
js
adc
dec
sbb
lcall
xchg
sbb
jp
ret
clc
mov
lcall
jle
lea
scas
notb
xchg
mov
dec
gs
sub
ljmp
pop
and
in
jmp
jl
dec
insb
test
xchg
cmp
cld
je
shrb
dec
ds
pop
jo
xchg
andl
incl
pop
lcall
cli
aaa
mov
cmpl
push
sahf
gs
mov
pop
and
sahf
ret
mov
mov
sub
test
stos
jecxz
insl
rcrb
and
mov
jp
das
cmp
jae
out
jae
cmp
int
or
loopne
imul
mov
in
and
ljmp
push
jns
cmpsb
or
mov
xchg
inc
cmp
ljmp
aad
sbb
pop
pushl
sub
ljmp
or
out
push
fnstsw
repz
jl
nop
and
xchg
and
dec
out
cli
ret
addr16
pop
mov
stos
xor
mov
mov
out
dec
push
mov
xchg
pop
mov
aam
iret
or
idiv
xchg
out
jle
mov
pop
inc
sub
push
push
incl
lahf
add
ljmp
adcl
jo
pop
sbb
movsb
xor
into
cmc
lahf
jne
jmp
jl
lcall
or
rorb
imul
push
dec
ljmp
sbb
mov
imul
movsl
fsubr
push
and
pop
push
movsb
pop
pop
lcall
dec
push
cld
orl
decl
fs
test
popa
xchg
imul
incl
mov
fistl
sti
xchg
mov
mov
mov
fs
incb
sbb
aaa
scas
daa
sbb
and
ret
mov
pop
das
dec
mov
and
data16
adcl
mov
jmp
push
subb
shrl
fstpt
mov
xor
jmp
or
sub
adc
cmpl
cld
mov
int
jmp
cld
cmc
jne
jp
xchg
test
or
dec
dec
loop
gs
push
pusha
sbb
and
or
cmp
fwait
mov
aam
inc
push
mov
or
fcmovnb
xchg
popf
subl
aam
movsl
lods
cmp
sub
inc
mulb
decl
cmp
xor
add
popa
shrb
ljmp
sub
sbb
pop
sbb
xchg
jecxz
test
dec
sub
adc
inc
sub
xchg
pushl
push
lcall
emms
cmp
addr16
mov
mov
data16
cmp
ret
mov
loope
and
push
sub
jnp
pop
pushl
shrb
add
mov
nop
lret
adc
xor
mov
sar
cmpsb
shrd
test
js
mov
fs
loopne
or
incl
adc
incl
popf
sub
std
push
push
jmp
mov
inc
adc
mov
stc
ds
xor
jge
sub
ds
fcmovnbe
cmp
push
adc
xchg
and
push
lods
std
mov
outsl
mov
and
inc
jg
test
mov
mov
xchg
lcall
or
inc
frstor
std
pop
iret
add
insl
call
in
mov
ror
mov
les
and
push
push
test
incl
add
mov
adc
xor
int
lahf
xchg
stc
cmp
fcos
fwait
sbb
insb
outsb
dec
pop
mov
in
aaa
lcall
lds
jb
xlat
mov
lock
fdivr
push
sahf
jnp
pop
enter
enter
shrb
cmp
xor
and
das
push
aas
cld
add
xchg
and
insb
fisubrs
in
xchg
push
into
outsl
push
js
jmp
adc
out
push
test
lret
jmp
or
cmpsb
call
or
push
aad
mov
xlat
decl
add
sbb
out
pop
rolb
cmp
xlat
and
dec
cmp
es
sbb
out
sbb
inc
lahf
ljmp
jne
pushl
repnz
xchg
jns
mov
dec
xchg
mov
nop
mov
mov
jae
and
cwtl
decb
mov
out
test
dec
js
mov
ficoml
xchg
leave
pop
jae
push
rcrl
icebp
cmp
call
dec
lds
jl
nop
insl
out
xor
cmp
decl
adc
dec
in
rcrl
mov
pop
out
or
ud0
lret
mov
leave
ljmp
pop
je
incb
add
sbbb
mov
movsl
sbb
push
lods
mulb
movsl
adc
push
mov
cmc
sbb
lcall
test
shll
std
adcl
lea
nop
pop
ss
rcrb
add
enter
fwait
jo
sti
aaa
or
inc
cli
jns
pop
mov
or
ret
sbb
in
or
add
icebp
xlat
movsl
decb
pop
pop
lods
jb
daa
test
mov
or
test
movsb
aam
mov
out
jbe
ljmp
movsb
gs
mov
push
jle
sub
xor
mov
jge
stos
jp
jg
mov
incl
daa
pop
in
nop
je
xor
aad
insb
std
and
sub
bound
sbb
pop
dec
testb
jbe
and
cmpsl
push
cmp
js,pt
dec
inc
or
ret
fs
rorl
leave
cli
rorb
xchg
lret
push
mov
fsubl
adc
push
lcall
loopne
mov
jo
fcompl
icebp
or
mov
aam
xchg
in
sub
into
dec
adc
adc
stos
adc
push
outsb
sub
iret
fdivr
incb
dec
push
call
lret
pop
sub
clc
jb
rcll
pushl
arpl
inc
imul
jge
push
mov
and
lods
jne
jp
fcomip
cmp
inc
leave
or
cs
cli
fwait
dec
jmp
xor
adc
push
mov
imul
and
mov
loop
push
aaa
pop
addb
call
ret
mov
xchg
in
lahf
inc
clc
ds
pop
testb
inc
cmp
das
sbb
push
and
daa
add
xchg
sub
in
jo
repz
or
cmp
mov
inc
mov
pop
int3
jg
ss
push
xchg
and
cmpsb
or
push
call
pop
inc
mov
mov
cs
adc
pushl
decl
pop
push
push
pop
mov
jg
pusha
and
mov
jae
dec
jae
jno
bound
leave
or
aam
std
outsb
dec
jg
mull
xor
jg
push
xor
ljmp
mov
xchg
decl
adc
pop
jae
mov
or
test
mov
test
jbe
ret
jbe
cld
ljmp
fstps
fstl
mov
shr
mov
add
pop
into
test
mov
leave
sub
addr16
test
fsts
test
dec
sub
jae
jmp
ret
call
ficoms
or
psllq
dec
icebp
mov
scas
scas
and
jno
push
or
jae
sub
shlb
add
jecxz
adc
mov
fs
fists
jmp
pop
mov
loopne
xchg
dec
fs
repz
xor
das
dec
int
jnp
push
pop
fwait
sbb
ficomps
inc
psubq
arpl
mov
dec
test
pop
into
mov
sbb
pushf
jmp
stc
loop
cmp
lods
les
loopne
jnp
out
aad
pop
mov
sbb
dec
into
push
jp
adc
mov
daa
fdivrl
iret
sub
push
int3
or
cmp
mov
and
enter
imul
orb
mov
push
mov
call
xchg
imul
std
and
popf
mov
jmp
jmp
test
test
iret
test
cmp
cmp
insl
adc
lcall
jo
movsb
mov
data16
and
mov
jle
pushl
test
pop
xor
xchg
cmp
je
xor
outsb
outsl
add
std
jbe
jmp
push
pop
outsl
loopne
mov
loopne
unpcklps
xor
jg
cmc
cli
adc
fistps
pop
xchg
shl
cltd
testb
icebp
iret
jp
ret
xchg
cmp
std
movsb
pop
push
add
jmp
inc
xchg
or
jmp
mov
mov
gs
dec
cwtl
fldt
in
inc
pop
hlt
lea
jb
jge
jg
inc
adc
pop
imul
push
sbb
shll
dec
sti
hlt
mov
out
movsl
mov
lahf
loope
outsl
ljmp
cli
scas
daa
loopne
inc
xchg
pushf
adc
stos
jg
imul
sub
push
clc
movsl
xchg
inc
add
cmp
mov
fldenv
inc
sub
adc
jne
daa
mov
adcl
jg
pop
pop
insl
leave
mov
arpl
mov
mov
push
cwtl
call
sbb
sbb
decb
jl
add
cwtl
shll
pusha
ret
xor
or
or
cld
xchg
fwait
and
in
jne,pt
cmpsl
lock
pushl
push
cli
mov
aad
add
mov
loop
adc
jp
and
or
xlat
mov
push
fwait
jmp
fmul
pop
mov
mov
cli
pop
pop
lcall
in
bound
push
adc
into
or
dec
sub
push
imulb
movsb
out
add
arpl
or
ds
mov
pop
jno
and
jno
int3
decl
xchg
jmp
icebp
leave
ljmp
imul
jge
jnp
mov
fldcw
lock
xor
jp
sub
cs
xor
in
inc
ret
adc
push
cltd
mov
incl
repnz
ljmp
lret
mov
push
stos
test
push
xchg
xchg
movl
ficomps
cld
jbe
inc
call
popl
enter
mov
pop
cmp
inc
mov
mov
fistpll
data16
movsl
repz
pop
sub
jmp
jo
xor
test
adc
push
add
cmp
lods
mov
add
mov
ljmp
js
add
cmc
btr
fldenv
repz
xlat
pusha
je
pop
ror
leave
sub
call
imul
pop
jp
xchg
outsl
fidivrs
test
pushl
add
dec
aas
scas
adc
fs
add
stos
mov
cmpsb
add
pop
mov
enter
int3
mov
cmp
aaa
xor
mov
cwtl
fadds
cmp
jmp
clc
into
or
pop
mov
adc
mov
popa
or
shl
dec
pushf
pushf
push
dec
dec
pushl
add
mov
xor
jg
cmc
pop
pop
add
xor
inc
push
cld
imul
mov
sbb
inc
mov
int3
ds
mov
push
cmp
jl
pushl
pop
cltd
jmp
inc
add
ljmp
add
dec
adc
cmp
lcall
mov
xlat
mov
frstor
jmp
or
dec
or
arpl
ja
jmp
push
out
mov
or
xchg
call
jno
cli
inc
adc
pusha
mov
sub
ret
cwtl
incl
cmpsb
jns
lcall
stos
or
std
data16
push
fs
xchg
test
lea
fildll
dec
push
jmp
push
fs
pause
popf
mov
js
out
sbb
push
int
int
test
xchg
stos
and
lods
ret
call
data16
mov
mov
jmp
pop
jbe
clc
popf
jo
pushf
js
mov
repz
or
mov
into
fistps
cmpsb
cmpsb
jmp
iret
xor
sti
inc
xor
adc
lcall
jg
aaa
imul
jmp
ret
xchg
jne
fiaddl
push
aas
and
cwtl
shrb
lods
ljmp
pop
jge
dec
pop
cli
jo
or
mov
repz
sarl
dec
incl
mov
loopne
lcall
lock
call
or
pushf
lcall
pushf
loope
in
mov
mov
adc
xor
pop
call
push
mov
outsl
incl
inc
jne
dec
dec
cld
je
adc
cld
sub
cmpl
jns
mov
ds
mov
imul
inc
add
jle
lret
cltd
in
and
faddl
call
add
loope
or
call
ljmp
aas
pop
sbb
dec
loop
imul
mov
jae
test
jg
inc
cli
pushl
or
mov
jns
movsb
pushl
jecxz
fidivrl
dec
stc
jmp
cli
jecxz
repnz
ljmp
push
out
jmp
jae
out
push
arpl
xor
inc
pop
aad
dec
mov
mov
mov
stc
movsb
mov
lea
fbstp
pop
xchg
lods
push
movsl
faddp
mov
cmp
mov
ja
icebp
jp,pn
movsl
pop
fwait
stos
add
stos
decl
push
mov
adc
mov
pop
aam
add
sbb
add
dec
add
jmp
lods
dec
or
cmp
push
clc
sti
mov
filds
sub
fsubs
incl
nop
mov
jmp
sub
ds
stc
jne
inc
movsb
or
pop
aad
call
sub
push
jge
fisttps
daa
lcall
arpl
int
subb
lcall
stos
nop
mov
mov
push
push
decb
out
test
add
jmp
inc
xchg
lcall
lret
xor
cltd
lcall
in
or
pushl
and
lcall
test
jge
dec
mov
inc
icebp
decl
mov
sub
pop
cmpsb
mov
lcall
xchg
sub
cwtl
mov
cld
outsb
xbegin
adc
test
add
inc
cmp
negl
aas
pop
jmp
pop
inc
nop
jg
sbb
jl
mov
mov
xchg
jge
aam
pushl
mov
sub
fistpl
adc
popa
adc
rcll
call
and
jmp
jb
je
pop
pop
ljmp
imul
incl
enter
sbb
jmp
jg
scas
inc
cwtl
dec
dec
jno
sbb
or
clc
mov
lods
sbb
div
fsts
leave
push
sbb
jp
psrlw
pop
xchg
rcr
jecxz
xor
push
fnstsw
cltd
xor
mov
dec
push
decl
movsl
mov
push
out
ja
js
or
out
push
rcl
lock
fwait
sub
add
faddl
jmp
mov
pop
fcompl
insl
iret
mov
pop
adc
andb
adc
fistpll
inc
pop
addr16
jmp
adc
add
hlt
mov
and
inc
jmp
flds
in
sub
movb
in
adcb
jmp
add
xor
and
adc
aam
jns
loop
shll
loop
adc
mov
lods
test
incl
mov
aaa
jl
hlt
testl
push
or
push
pop
std
ret
sbb
mov
js
push
test
jno
dec
mov
cld
adc
xor
sub
scas
mov
jnp
mov
inc
jne
incl
jne
lret
sub
std
pushl
nop
out
sahf
in
inc
sub
mov
pop
loop
sub
xor
out
inc
sbb
imul
leave
aaa
lock
pop
fst
xchg
pop
in
repnz
nop
sbb
mov
test
fwait
jecxz
cmp
cwtl
rcr
inc
inc
lcall
stos
xlat
ret
mov
mov
jmp
sub
cmpsl
stos
and
outsl
mov
cmp
xor
shlb
add
scas
pop
scas
clc
dec
ficompl
mov
push
inc
mov
inc
js
sbb
jnp
or
pop
movsb
scas
inc
xchg
mov
sarl
lcall
in
add
scas
push
aam
xor
mov
and
shl
ss
push
imul
rcl
cmp
mov
sbb
call
fcomip
loope
jg
lcall
data16
ljmp
shl
lods
mov
mov
stos
lret
push
add
cwtl
inc
out
mov
xchg
cmp
inc
mov
loop
sbb
jmp
imul
push
xor
addr16
cwtl
dec
cmp
jp
pop
repnz
pop
faddl
aas
decl
pop
test
outsl
dec
scas
xchg
and
dec
stc
add
push
lret
pop
fwait
pop
mov
or
in
inc
lahf
mov
outsl
aaa
fistpll
push
mov
lret
mov
dec
or
dec
lret
dec
pop
mov
dec
lret
mov
xor
xchg
js
lcall
insl
xchg
hlt
ficomps
in
inc
pop
cmpsb
inc
jb
sub
xchg
popf
xchg
aam
add
bound
dec
aam
and
test
mov
jmp
fcmovnu
xor
cmp
and
mov
in
mov
mov
shl
aaa
xadd
lret
and
jg
mov
jne
enter
insl
dec
lods
xor
loope
pop
hlt
push
jg
xchg
insb
xchg
insl
loopne
movsl
add
cmp
lcall
cli
xlat
ljmp
or
incl
add
cmp
cmpb
cmp
inc
mov
decl
std
xchg
ud0
mov
mov
adc
fists
and
orl
incl
inc
mov
and
insl
jne
or
sub
inc
jmp
xlat
lds
cwtl
mov
fdivr
push
jg
mov
test
jb
fs
orw
scas
pop
xchg
sub
call
aam
mov
xor
scas
icebp
pop
adc
outsl
cmp
jmp
lods
dec
xchg
icebp
or
adc
add
dec
push
jne
and
xchg
and
cmp
cmpsl
mov
sarl
fnstenv
xor
incl
lcall
decl
add
not
outsl
jecxz
in
ljmp
js
push
pop
in
jae
incl
pushf
aaa
xchg
add
test
jns
xchg
hlt
mov
popa
sar
add
adc
mov
xlat
ljmp
sub
movsb
dec
in
pop
mov
cli
dec
lcall
add
into
mov
jne
push
movsb
movsl
cmp
push
cmpsl
out
xchg
aaa
lods
dec
call
jle
lcall
std
and
mov
pop
lret
imul
jp
int3
push
jp
pop
inc
out
sub
decl
testl
push
or
cli
cld
mov
fwait
or
and
push
or
pushl
pop
sub
xor
loopne
outsl
rclb
nop
sub
cs
lods
mov
push
jle
cmpsl
ret
xchg
arpl
loopne
jmp
cmp
inc
iret
gs
mov
aaa
in
sbb
pop
cmp
scas
sub
out
out
lods
sub
incl
mov
xor
mov
mov
movsb
or
cmp
int3
jecxz
dec
mov
rcll
sub
and
fwait
inc
push
push
out
jnp
clc
inc
outsb
or
jge
je
cld
clc
xor
stc
xchg
push
lahf
inc
sbb
adc
mov
mov
mov
fimuls
pop
lock
in
das
shlb
fsubs
sbb
push
subb
push
jb
xchg
pop
xor
xchg
adc
lcall
pushl
inc
ds
decl
xchg
xchg
pushl
je
mov
cld
lods
sbb
push
imul
lea
cltd
cs
mov
jnp
scas
mov
lahf
iret
mov
arpl
imul
scas
mov
lods
incl
pop
out
sub
mov
pop
daa
inc
inc
sahf
mov
mov
les
jl
cmp
call
fstps
aam
aaa
cmpsb
rolb
inc
jae
mov
stos
or
mov
lea
in
adc
xor
add
mov
sub
push
incl
test
pushf
add
jg
pop
sub
push
clc
mov
into
xchg
cmp
push
in
jl
call
mov
subb
mov
sbb
cmp
sahf
inc
fildl
lcall
adc
out
and
jne
rcl
aas
sbb
jnp
aaa
fs
scas
ss
ljmp
xchg
and
decl
outsb
out
movsl
imul
adc
dec
pusha
fnstcw
mov
mov
push
sbb
repnz
mov
sub
mov
std
sbb
mov
inc
cmp
mov
shlb
enter
popa
mov
aad
ret
sbb
loope
and
add
ds
ss
sub
scas
mov
cmp
lock
call
inc
jne
std
fcmovbe
sub
jns
pop
arpl
jb
mov
or
inc
into
jne
je
nop
mov
hlt
push
hlt
cmp
das
mov
loop
inc
sub
lret
mov
fwait
lods
call
add
popa
mov
add
cmp
daa
push
clc
cmp
xchg
mov
pop
jae
fistl
add
xchg
jmp
add
mov
daa
outsb
mov
cmpb
int3
jno
push
mov
iret
sahf
mov
jg
and
fwait
dec
cld
or
bound
or
mov
mov
ja
dec
dec
jg
dec
inc
fcmovu
dec
cld
fs
dec
sbb
jns
into
mov
aad
int
fdivs
call
incl
xor
xchg
test
pop
movl
pop
popa
pop
jne
jp
test
fxch
mov
dec
out
addl
inc
lea
jg
add
xchg
icebp
ret
arpl
fwait
data16
xor
mov
and
ret
das
xlat
sbb
cmp
adc
fcos
dec
push
fstpt
jmp
imul
pushl
dec
or
jmp
nop
pop
out
sbb
jge
jns
pop
jg
adc
stos
fwait
cmp
das
jle
cmpsl
dec
ds
pop
add
leave
popa
sbbl
jo
pushl
lods
jp
mov
lods
rcrl
out
fisttps
ljmp
popa
ja
pop
sbb
lcall
mov
pslld
pop
jge
mov
lods
popf
cmp
cli
loop
shr
les
lods
or
rep
xchg
xchg
dec
jb
ud0
mov
outsl
mov
jno
lods
mov
cld
test
dec
outsl
stos
iret
cld
jp
fcompl
sub
add
daa
movsl
clc
in
shlb
mov
int3
loope
mov
imul
scas
push
or
stos
je
adcl
popf
jp
xor
das
add
xor
aas
pop
outsl
ljmp
mov
push
dec
incl
testb
add
dec
lcall
repz
aad
inc
imul
cmp
cmp
cmp
popa
dec
into
mov
test
fisttps
jmp
xchg
jp
rcll
cli
outsl
cmp
stc
and
jb
fmul
and
mov
mov
sbb
mov
dec
push
ds
mov
xor
pop
sbb
inc
rcrl
js
jbe
jmp
adc
lods
leave
cmp
in
or
mov
pop
testb
gs
data16
jnp
call
and
jp
cld
decl
mov
mov
ja
cmp
nop
aaa
ljmp
out
jp
add
jo
jbe
lea
cmp
or
mov
aas
es
mov
pushl
mov
mov
ficoml
jmp
jno
cmp
clc
ja
decl
sbb
cmp
add
or
add
incb
mov
sbb
divb
das
stos
jecxz
dec
test
call
xor
fisttps
inc
stos
inc
call
imul
mov
les
stc
test
enter
xor
hlt
jno
push
xor
xor
mov
add
dec
in
jns
lock
push
jnp
test
jo
mov
xor
jne
aad
jmp
sub
cs
mov
int
inc
jne
dec
mov
mov
popa
mov
push
fwait
push
xlat
mov
push
mov
repnz
mov
jg
pop
or
imul
add
pushl
mov
nop
enter
sub
pushl
hlt
mov
filds
aas
jb
sbb
push
callw
sub
push
loop
mov
or
mov
and
daa
mov
cs
shll
pop
ljmp
enter
dec
mov
add
push
jle
lods
or
inc
decb
mov
out
lcall
pusha
push
pop
lcall
lds
call
or
insb
lea
xchg
std
jecxz
sahf
mov
pop
or
xor
fdivrs
aaa
mov
cwtl
fdivrp
fidivrs
and
repnz
int3
inc
xchg
daa
jno
clc
or
ror
add
imul
xchg
inc
add
aaa
pop
pop
enter
inc
xchg
fs
daa
cmc
add
adc
incl
iret
in
bound
push
hlt
int
mov
outsb
sti
push
xchg
add
rolb
pusha
fwait
pop
dec
sub
mov
jg,pt
or
cld
dec
adc
decb
aad
push
fmull
mov
fwait
mov
mov
scas
bound
adc
mov
jae
js
shll
loopne
insb
push
xor
jne
ss
adc
out
fdivr
jmp
test
fstpt
dec
mov
jmp
clc
pop
lock
jp
out
or
fdiv
xor
xor
scas
inc
int3
mov
fsubrl
jmp
incl
das
cli
dec
mov
cmc
cltd
mov
nop
outsl
sarl
dec
xchg
cmp
ljmp
mov
xchg
loop
fcomip
outsl
push
jnp
sti
pop
mov
lahf
adc
lea
decl
inc
jmp
dec
out
test
pop
outsb
fidivrl
int3
cld
out
leave
aaa
mov
inc
or
out
mov
jmp
out
jb
pop
lret
insl
int3
test
jno
push
mov
jbe
call
sbb
xchg
ret
pop
icebp
push
ljmp
out
ljmp
xor
mov
jae
or
shlb
pop
leave
pop
test
lahf
cmpsb
mov
xor
cmp
mov
es
pop
dec
ret
inc
scas
icebp
lret
sub
insb
aad
sbb
cmp
cmc
cltd
and
fbstp
insb
ljmp
shll
ds
dec
pop
je
ljmp
inc
jns
pushl
cmp
mov
jae,pn
mov
ljmp
rcrb
call
sub
lret
popf
call
cwtl
mov
fwait
jmp
push
je
fsubrl
std
std
sub
xchg
ret
popf
int3
dec
rcrl
scas
mov
hlt
imul
xlat
push
imulb
jbe
leave
pushl
mov
lods
xorb
pop
lods
pop
sti
icebp
rorb
fldt
push
push
fsubr
enter
xor
push
jle
sbb
idiv
jmp
pop
add
xor
pop
cmp
mov
leave
out
fbstp
inc
or
xchg
lcall
mov
jae
push
movsb
add
hlt
sahf
mov
fsubs
lcall
add
add
incl
daa
and
stc
jnp
inc
arpl
std
insb
xor
push
rolb
clc
popa
pushl
and
cmc
in
imulb
orb
adc
out
inc
and
sar
mov
xlat
lods
mov
cwtl
sti
jb
movb
cmp
scas
mov
mov
decl
push
outsb
scas
cmc
sub
in
das
cmpsl
mov
sbb
fwait
es
stc
add
pop
std
popf
rcll
sbb
push
clc
and
outsb
cwtl
or
pop
scas
and
rcrl
mov
cmp
mov
rorl
add
loop
mov
jbe
insl
scas
fcos
cwtl
mov
jmp
hlt
testl
add
jo
xorb
sub
insl
decl
dec
and
pop
push
test
in
inc
dec
jnp
lcall
and
dec
push
outsb
sti
call
lock
and
popa
lcall
push
ljmp
test
hlt
inc
cli
lret
mov
fidivs
das
inc
xchg
mov
jmp
dec
and
shl
lcall
jnp
clc
pop
fwait
pop
cmpsl
bound
dec
xchg
pushw
ss
inc
sbb
iret
fadds
jns
call
mov
outsb
js
decl
dec
test
scas
int3
and
cld
stos
dec
mov
std
dec
das
dec
ret
outsl
lds
call
and
movsl
mov
lods
int
xchg
cmp
mov
sub
decl
push
push
mov
inc
test
outsl
add
movsb
cli
adc
ss
push
lea
ret
in
inc
aam
pushl
dec
mov
mov
mov
push
cli
in
cwtl
cmpsl
push
or
lods
jp
pop
mov
lods
jno
incl
je
jns
lret
jmp
pop
xor
mov
adc
add
lock
es
outsl
inc
or
and
xchg
xchg
pop
ljmp
push
divl
call
inc
sub
mov
inc
or
mov
sbb
fwait
call
push
add
outsl
es
cmp
divl
bound
push
cld
lcall
push
jae
sbb
or
lcall
daa
clc
pop
sahf
shl
ret
dec
xchg
jp
movsl
dec
aas
pop
jbe
fdivr
xlat
hlt
and
imul
sub
insb
icebp
push
push
sbb
scas
pop
notrack
and
add
mov
sub
mov
hlt
sub
test
and
inc
cmp
loopne
repnz
xchg
out
adc
leave
pushl
push
ucomiss
ljmp
xor
jbe
lock
ljmp
ret
cmp
repnz
xor
jns
aam
pop
iret
pop
sti
lods
mov
mov
incl
jb
aaa
cli
lea
or
clc
add
lahf
scas
decl
add
mov
push
mov
cmp
pop
mov
popf
mov
call
and
incb
and
repz
sti
or
scas
inc
or
inc
xchg
jecxz
arpl
sbb
add
insb
mov
pop
and
jmp
mov
sbb
mov
lret
call
mov
and
int3
in
fsubrl
out
jl
mov
dec
cmp
imul
dec
movsl
lcall
decl
lock
outsl
jo
or
dec
gs
out
add
sti
addb
cmpsl
mov
int3
clc
mov
leave
pop
dec
aaa
jmp
push
dec
insl
pop
and
sub
mov
in
movsl
call
cld
add
adc
imul
adc
jne
mov
inc
loop
sub
pop
mov
jl
and
dec
adc
xor
push
push
or
pop
mov
clc
adc
xor
jmp
pop
or
imul
push
jg
enter
fistpl
jae
insb
pop
fcompl
mov
adc
jmp
std
push
and
cmpsl
push
cmpsb
call
loop
sbb
lret
mov
cli
sub
cmp
lcall
nop
adc
mov
cli
jge
incb
xchg
dec
inc
je
push
shll
jg
stos
jle
into
data16
call
movsl
cli
lcall
or
inc
jg
idiv
pop
xchg
fistpl
lock
sarb
dec
or
adc
mov
jp
icebp
shlb
mov
mov
mov
jo
dec
rclb
incl
adc
mov
xor
and
lock
aad
out
lods
or
fsubrs
clc
call
adc
stos
adc
pop
add
jmp
repnz
xlat
xlat
mov
inc
popa
xor
adc
lcall
pusha
inc
sbb
push
enter
lods
pop
and
xor
or
in
ss
outsb
dec
repnz
aam
jb
dec
mov
pop
pop
jne
mul
ljmp
sti
lcall
repz
test
add
mov
push
movsb
cwtl
cld
in
jp
je
sub
mov
pop
cwtl
test
lcall
call
in
inc
mov
xchg
add
push
clc
stos
jmp
push
jnp
sarl
pushl
jg
mov
pop
or
fsub
adc
push
adc
lea
filds
and
jb
popa
lahf
and
out
mov
mov
adc
xor
test
push
inc
xchg
cmp
popa
int3
mov
sbb
pop
mov
js
imul
mov
xchg
pop
nop
and
in
add
aaa
pop
inc
push
das
or
ret
inc
cmp
inc
cmp
mov
jle
pop
push
xchg
mov
lcall
fstenv
lahf
pop
xor
lods
decl
cli
pop
xchg
or
xor
mov
xchg
jno
ja
jno
push
lods
pop
push
enter
std
mov
icebp
sub
rorl
sub
push
jl
es
movsl
cmc
sub
push
or
xor
xor
in
ja
mov
decl
aaa
mov
dec
dec
inc
sbb
inc
call
push
dec
es
fsubrl
mov
jp
pushl
and
fnstsw
adc
cmp
fcompl
mov
decl
adc
enter
jo
pop
or
jmp
fistpl
sub
sbb
push
cltd
cmp
inc
push
mov
push
or
xchg
adcl
push
ss
sub
inc
jge
lcall
xchg
hlt
sahf
pop
stos
cld
cmp
in
lcall
xchg
mov
cmp
mov
mov
in
adc
and
into
ljmp
decl
sbb
lods
mov
repz
call
mov
xor
jle
push
add
cli
mov
repnz
pop
jb
dec
jne
dec
xlat
mov
xor
ss
xor
xchg
leave
lret
mov
je
cmp
lcall
insl
jo
xor
std
push
adc
cld
dec
dec
fdivrp
lcall
lahf
xlat
mov
leave
mov
pop
rcl
loop
out
int3
hlt
or
push
dec
loope
pop
insb
movsb
in
enter
dec
pop
enter
push
clc
mov
fisubl
cmc
int
mov
mov
adc
fcmovu
arpl
fwait
adcb
mov
xchg
cmp
shrb
enter
cwtl
repnz
iret
cmc
lds
push
or
push
push
dec
adc
fistpll
inc
jo
test
movsl
jne
call
fists
jg
push
ror
repz
call
jbe
out
dec
fstl
hlt
jno
gs
pushf
push
sbb
clc
or
sub
cltd
movsl
test
jg
sti
fldenv
cltd
cmp
pop
or
inc
push
add
adcb
imul
outsl
cmp
lret
dec
sbb
and
sbb
cmp
cmp
into
test
cwtl
cmpb
call
jo
jl
dec
ss
test
addl
cmp
das
iret
daa
sarb
in
call
rcll
bnd
xchg
loope
xchg
mov
mov
js
mov
xchg
imul
push
cltd
loope
or
ljmp
dec
sbb
call
ss
push
dec
inc
cmpsb
pop
decl
xor
mov
cli
add
movsb
add
pop
adc
xchg
xchg
rolb
push
push
pushl
jge
inc
mov
popa
lcall
inc
call
and
and
bound
lock
cmp
das
pop
es
decl
and
incl
xor
orb
scas
jmp
ss
push
ljmp
sbb
push
call
and
sbb
call
repnz
push
mov
imul
test
test
xchg
push
or
stc
loope
add
mov
cltd
inc
sub
jbe
enter
push
cmp
cmp
aas
fdivrp
mov
jne
nop
fimuls
sub
js
incb
nop
pop
mov
jbe
fildll
mov
icebp
inc
ud1
adc
test
cld
jnp
andl
jo
xor
js
mov
lcall
mov
mov
repz
sub
push
shll
in
mov
lods
das
movb
mov
das
addl
lods
mov
xor
lea
inc
cmc
inc
pushl
xchg
dec
test
dec
jp
ja
fwait
dec
sbb
call
cld
inc
push
daa
in
jns
repz
xchg
cmp
in
sub
cmpsb
repnz
js
or
lcall
xchg
jp
incl
xchg
xchg
daa
push
in
jmp
cmpsl
inc
push
in
push
test
fs
das
lcall
movsl
or
aad
ror
ljmp
adc
mov
out
daa
push
aas
xor
ja
pop
push
fs
xorb
xchg
inc
aas
sub
das
cmp
xchg
mov
add
ljmp
clc
adc
repnz
mov
enter
jo
pop
pop
je
or
mov
mov
pop
sub
fisttps
sarl
sti
out
xchg
pushf
mov
xor
sub
sahf
mov
in
push
call
gs
test
test
dec
xor
jle
inc
mov
mov
sbb
sbb
push
stc
imul
inc
decl
psubq
jmp
mov
dec
and
dec
sbb
push
sub
mov
mov
jecxz
xor
mov
push
outsl
lahf
jno
jle
cld
cmpb
pop
and
push
icebp
lods
cs
gs
aad
decl
in
sub
jmp
mov
mov
jno
sub
jmp
ljmp
cs
inc
loopne
loope
jle
ret
fiadds
push
outsb
xor
mov
adc
mov
push
jmp
nop
pushl
jno
rcl
push
fidivrs
jecxz
inc
sbb
cmp
inc
and
adc
jne
push
add
or
ja
sbb
mov
lcall
ljmp
cmp
dec
and
mov
lret
push
fsubrs
mov
mov
xor
hlt
mov
add
clc
or
les
push
jg
push
pop
cmp
popa
xchg
stc
xor
jmp
cmp
stc
fisttpl
dec
jle
push
ljmp
inc
jmp
push
mov
mov
mov
in
push
xor
xor
call
pop
fwait
aaa
mov
mov
insb
or
sbb
cld
in
mov
xchg
test
xchg
push
std
loopne
dec
mov
fwait
daa
fiadds
je
cmc
sbb
loop
mov
stc
lcall
sub
mov
mov
dec
sbb
and
jne
out
cld
cmp
inc
or
decl
sarb
stos
jb
sub
inc
out
ret
push
ljmp
out
push
loope
and
cmc
cltd
push
pop
adc
jmp
scas
jge
pop
cli
mov
cmpsb
and
mov
popf
xchg
push
pop
cmp
mov
ds
add
sub
lcall
dec
fisubrl
pop
inc
push
flds
je
and
jb
sarb
push
cmpsl
imul
imul
movw
inc
push
and
aaa
jl
push
lret
aas
adc
decl
cmp
shll
aad
sub
iret
decl
sub
mov
mov
jmp
jmp
mov
stos
cmp
insl
xchg
push
ljmp
mov
scas
sub
push
dec
add
push
xor
add
add
or
in
xchg
adc
jb
mov
movsb
inc
lcall
push
and
mov
les
call
std
mov
sti
insb
scas
push
cmc
ret
jmp
xor
dec
jp
loope
cmc
pop
addl
fdivr
in
sub
sbb
mov
cmp
fldt
mov
xchg
cmp
push
jmp
and
sbb
outsl
xchg
cli
repnz
clc
lea
lds
test
and
adc
shl
add
jg
jmp
pushf
imul
test
push
adc
push
shrl
imul
inc
sub
loope
xchg
mov
fxch
dec
cmp
in
mov
std
inc
push
xlat
shlb
in
das
inc
es
jl
fcompl
iret
push
mov
jmp
ljmp
loop
enter
push
mov
lods
call
sbb
jae
mov
inc
ljmp
out
out
movsl
sub
aad
addr16
pop
inc
jecxz
idiv
xchg
mov
and
mov
aam
incl
and
fs
xchg
into
std
push
adc
jl
mov
or
mov
and
setae
lods
push
leave
mov
inc
mov
lahf
ss
pop
inc
push
cli
mov
jnp
jne
sub
push
loopne
jb
ds
inc
lcall
fstps
call
addr16
pushl
xor
cli
pop
and
pop
push
lret
push
insb
pop
xchg
adc
lahf
movsb
mov
jecxz
psubd
stos
out
push
or
js
lcall
xor
lcall
out
inc
lcall
cmp
push
pushf
lds
ljmp
mov
shrb
lds
cwtl
push
pusha
push
or
cmp
aaa
xchg
mov
mov
les
or
je
mov
cmp
lods
pusha
dec
xchg
push
mov
xchg
sub
sahf
enter
cmp
mov
adc
inc
adc
jo
mulb
cld
jg
call
xor
test
das
push
cmp
cmp
mov
fs
outsl
cli
stos
xor
push
pop
aad
mov
sub
ret
test
xchg
jne
sub
shll
imul
push
pop
lods
mov
rolb
shlb
adc
xchg
aad
fs
movsb
sar
sbb
test
xor
cli
test
add
adc
test
xchg
gs
fnstcw
pop
pop
ljmp
push
inc
push
incl
cltd
add
jmp
jg
lds
ret
clc
jle
pop
mov
jg
scas
inc
loopne
sbbb
inc
cwtl
int3
dec
cmpsl
fwait
inc
in
jmp
out
fdivs
dec
xchg
les
mov
cmp
mov
lcall
sahf
xchg
loope
xor
inc
fildll
sbb
in
das
lds
cld
jg
or
push
lea
and
add
arpl
repz
mov
aas
jp
inc
ljmp
repz
in
pop
xchg
mulb
xor
sbb
es
cmpsb
sbb
xchg
cmp
mov
dec
cmc
out
push
xchg
decl
cmp
jbe
cli
loop
and
ljmp
dec
testl
sahf
push
rcrl
jp
xchg
test
pop
stos
inc
xorb
ljmp
dec
mov
sbbl
into
neg
lods
cmp
call
leave
pop
scas
stos
aas
add
scas
add
xor
ja
cli
mov
repz
pop
cmp
fidivl
fildl
movsl
add
jns
adc
jg
xchg
pop
cmp
xchg
mov
mov
ljmp
mov
xchg
sbb
inc
and
push
mov
les
mov
mov
call
mov
jl
adc
or
cs
mov
icebp
mov
mov
ficoml
outsl
push
call
fwait
clc
inc
mov
inc
mov
inc
sahf
xchg
iret
jbe
pusha
push
cltd
sar
pop
dec
sub
popl
cli
sbbb
jae
push
mov
push
jnp
adc
or
cmp
adc
arpl
mov
inc
bound
push
bound
mov
or
adc
leave
std
std
push
cli
jno
out
fnsave
nop
imul
lds
decl
inc
fildl
outsl
jnp
push
lcall
sub
pop
decl
scas
stc
fisubrs
jge
sbb
int3
xchg
addr16
dec
jg
jb
xor
pushf
std
push
test
adc
mov
and
jmp
lahf
mov
dec
arpl
push
std
loope
xchg
out
cmp
je
stc
call
movsl
imulb
repz
ljmp
jge
mov
fs
arpl
shrl
cmp
in
sub
popf
stos
jnp
mov
fmul
jno
xchg
outsb
pop
aas
xchg
pop
mov
jbe
xor
jb
or
js
outsl
sbb
mov
and
mov
xchg
iret
xchg
bound
mov
ja
fstps
jg
test
mov
or
cltd
int
or
call
negb
push
std
fcomp
adc
mov
dec
stos
jmp
dec
inc
les
xchg
xor
fcomp
mov
popa
jmp
sbb
xchg
add
adc
daa
inc
lock
pushl
sti
movsl
inc
and
dec
sub
pop
mov
bound
mov
mov
cmpsl
decl
ret
incl
jecxz
enter
fcmovnu
sbb
insb
sarb
pop
rclb
incb
out
pop
aam
fbld
or
xchg
call
cmc
or
xor
pop
ja
xchg
fwait
or
mov
ja
pop
lret
mov
xor
xor
imul
mov
rolb
add
mov
jge
xchg
icebp
mov
in
jnp
aas
mov
pop
jns
xchg
mov
mov
popa
inc
ljmp
xchg
xchg
cmp
jne
sar
das
fistpll
hlt
call
xchg
inc
mov
jl
out
mov
cmp
clc
cmpsl
xor
loopne
sbbb
jp
test
int3
mov
sub
jne
mov
jge
xchg
fisttps
mov
mov
lods
rclb
shll
add
nop
addr16
and
push
sub
movsl
jg
mov
dec
ljmp
in
aas
add
and
add
call
inc
clc
rcll
jbe
push
and
push
lock
inc
aam
inc
out
mov
add
lcall
push
jl
scas
nop
pop
pop
lea
test
ret
daa
setb
sbbb
ljmp
int
and
cmp
sar
ficomps
incb
lahf
xor
clc
mov
fbstp
xchg
lds
sub
mov
mov
lea
addr16
lods
mov
jg
sub
cmp
addr16
int
push
pop
mov
sbb
sbb
scas
xor
lea
jae
ret
mov
outsb
fnstcw
rcr
jecxz
nop
push
pushf
sub
lahf
out
rcrl
out
mov
pop
jb
inc
ljmp
jmp
addl
out
jl
adc
cli
cmp
fisubrs
mov
lock
pop
test
imul
or
aas
call
or
adc
add
mov
push
push
push
jns
stos
sub
jg
fbstp
or
rol
pop
in
dec
cwtl
mov
or
mov
xor
push
cltd
das
clc
or
pop
jg
jp
xchg
incl
int3
iret
mov
xor
cli
dec
mov
decl
push
loopne
cld
dec
fidivrl
pop
jecxz
or
jne
mov
xchg
rclb
inc
ds
dec
cmp
push
mov
add
mov
call
enter
mov
int3
jecxz
sub
rcrl
call
aad
lcall
daa
test
incl
mov
imul
jg
stc
push
pop
sub
shl
je
push
sti
xor
mov
mov
repz
clc
add
adc
sbb
lods
imul
add
cmp
mov
cli
addb
adc
mov
movsl
mov
and
mov
jbe
or
push
add
pushf
push
mov
fcomps
and
dec
jle
jmp
and
mov
cld
sub
pushf
cmc
sub
xlat
dec
mov
test
lcall
fstpl
test
and
push
pop
popa
aam
mov
hlt
sub
adc
lcall
cmp
ljmp
pop
dec
push
push
call
add
sub
mov
icebp
add
mov
push
add
int
js
scas
call
loopne
and
pop
inc
cmpsl
or
mov
int
cmp
push
and
pusha
sbb
cwtl
scas
movsl
cmp
add
in
push
fimuls
sbb
jg
mov
jmp
fldl
and
test
dec
lds
stos
out
xchg
push
adc
repz
data16
decl
in
ja
insl
ljmp
iret
pusha
jp
xchg
pop
mov
dec
call
push
data16
dec
lahf
incl
add
jmp
jae
xor
shlb
test
jecxz
mov
jge
adc
cmpsb
sbb
fsts
xor
call
cmpsl
aam
xor
daa
popa
pop
mov
push
push
stos
dec
sbb
out
fcmovne
mov
loopne
or
loope
hlt
in
push
nop
mov
add
clc
incl
and
adc
out
stc
mov
jno
push
and
fcmove
lret
cltd
pop
ljmp
daa
adcl
push
mov
das
and
jg
dec
xor
jmp
mov
push
rorl
inc
stc
fs
fidivl
push
jmp
mov
cmc
mov
lret
aad
push
mov
adc
pop
xor
clc
xchg
lds
dec
mov
pop
adc
test
and
fcos
je
pop
push
das
cs
scas
add
push
int
sub
inc
cld
lret
jge
and
or
cmc
daa
rcrl
pushf
outsl
and
jp
loope
jmp
jbe
pushl
xchg
mov
jo
cmpsl
imul
outsl
jo
aad
and
stos
or
and
es
fisubl
lahf
insl
push
stos
in
dec
cmp
push
fbld
lea
add
clc
sub
sub
outsb
int3
xchg
int
mov
pushl
lret
nop
mov
xchg
enter
and
std
xor
or
mov
rcll
lcall
pop
mov
ja
sub
mov
ljmp
or
nop
dec
or
int
cmp
mov
aam
mov
dec
das
adc
push
bound
movsb
leave
stc
push
int
push
lea
push
jp
jne
xor
movsl
pop
push
pop
inc
dec
lahf
imul
push
add
dec
jmp
add
outsl
incb
sbbb
mov
lcall
neg
daa
mov
sti
inc
or
mov
movsl
outsl
ljmp
dec
adc
aam
sbb
decl
cmp
add
dec
and
test
xor
clc
repnz
mov
or
int3
aaa
das
out
js
cmc
ss
mov
pop
ja
and
jmp
lcall
xchg
xor
ss
or
push
xlat
cs
sub
mov
je
enter
xorl
sar
scas
push
jecxz
inc
dec
cltd
jg
outsl
nop
cmpsb
rdmsr
cmc
out
add
bound
and
sub
lods
iret
lea
dec
jecxz
sub
fcompl
call
lock
or
aas
and
aas
mov
fstl
cld
jmp
das
into
out
add
rcrb
negb
mov
lret
and
push
jecxz
push
out
ljmp
adc
sbb
dec
xchg
jl
mov
lret
insb
pop
add
or
cmp
das
cltd
jg
jmp
jg
stos
xor
ss
mov
push
cmc
dec
enter
and
ljmp
or
inc
xchg
decb
add
push
adc
jmp
fbstp
pop
mov
push
orl
fs
sbb
adc
push
dec
mov
jns
jg
mov
in
pop
xor
decl
adc
lcall
mov
lock
out
outsl
mov
xchg
xor
in
out
push
mov
dec
inc
cli
mov
fbstp
and
shll
or
add
dec
std
sub
jecxz
clc
fists
daa
jbe
jmp
fwait
xchg
or
stos
adc
xchg
sbb
ljmp
pop
cmp
inc
shlb
das
outsl
outsl
pop
push
xlat
cld
add
inc
cmp
push
loopne
jns
sbb
sub
in
xor
dec
hlt
mov
lds
lds
push
leave
jp
rorb
jns
pop
jg
cld
mov
and
push
stos
or
cwtl
pop
fwait
jbe
out
push
mov
jge
clc
sbb
imul
lcall
mov
enter
and
shll
cli
shrb
jp
mov
ljmp
bnd
adcb
test
or
test
lock
dec
jne
ret
mov
lds
dec
push
lock
icebp
sbb
xorb
rcrl
gs
loopne
jl
jmp
out
ret
fldenv
pop
mov
pop
ret
stos
cmp
in
rorl
sbbl
incl
shll
push
pushf
aam
outsl
cmp
xchg
mov
icebp
aam
dec
sub
push
push
jae
mov
or
fwait
dec
pushf
adc
sub
aaa
out
movsl
loopne
and
pop
ret
int
xchg
jl
loop
mov
mov
adc
fdivr
mov
test
push
mov
call
cs
inc
pushl
lea
xor
mov
and
pop
loopne
push
pop
xor
add
lcall
leave
adc
bound
cmp
and
push
or
mov
daa
sub
cmp
lea
arpl
lcall
sub
pop
sub
push
movsb
pop
push
xor
sub
pop
mov
lret
push
into
bound
incl
in
pop
sbb
cmp
shlb
or
imul
xchg
xlat
out
pop
jl
xchg
xchg
popf
movsb
cltd
inc
adc
popa
or
cmp
flds
xor
ret
ljmp
mov
xlat
jg
scas
jle
inc
stos
lea
push
dec
ljmp
call
arpl
push
aad
faddl
sbb
sbb
hlt
pop
pop
repnz
outsl
or
mov
outsl
inc
repz
dec
or
add
push
or
decb
jmp
pop
or
xchg
cmp
arpl
jg
jecxz
pushl
mov
add
loopne
lret
xor
jle
ljmp
nop
bound
cld
rorb
jnp
popf
mov
pop
xor
sub
fcompl
testl
add
call
push
das
adc
xchg
inc
jmp
lds
dec
xchg
cmpsb
add
ficoml
xchg
pop
lods
jmp
ljmp
push
and
fistpll
jle
decl
sbb
mov
cwtl
mov
sar
test
jl
ds
pop
pop
cmpsb
shlb
cmp
jg
mov
sbb
nop
jb
aaa
je
dec
mov
or
cld
lea
xlat
dec
shlb
mov
mov
inc
mov
xor
jmp
bnd
jp
lods
sbb
mov
sahf
adc
fisubs
inc
cmp
clc
or
out
xchg
pop
loopne
adc
bound
stos
mov
and
loopne
mov
das
fcoml
cs
or
ja
xchg
sbb
sti
jnp
xchg
notl
fdivr
cmp
ds
ja
adc
mov
jbe
insb
or
mov
sbb
ret
sahf
xchg
lcall
xchg
mov
xchg
notl
mov
and
push
mov
and
and
jmp
popf
cmp
icebp
imul
dec
mov
xchg
mov
lock
sub
idivl
fisttpl
dec
add
loop
adc
ljmp
insl
or
sbb
decl
jne
clc
outsb
stc
lock
leave
dec
inc
dec
add
jbe
icebp
xchg
nop
aam
mov
loopne
ficompl
add
dec
sub
ja
std
inc
adc
es
fdivrs
mov
inc
shl
cltd
xchg
aaa
loop
push
mov
xchg
pop
push
popf
pop
clc
je
lret
jmp
sti
mov
adc
sub
pop
aas
sar
add
inc
std
mov
mov
add
push
repz
fdivrl
fdiv
lret
lods
pushl
out
jns
in
or
std
xchg
pop
push
pop
clc
or
rcrl
cli
push
mov
mov
out
scas
sahf
xchg
push
xchg
xchg
mov
fcos
inc
les
and
cmp
repnz
lock
xor
cltd
jmp
lods
mov
mov
aam
stc
and
sbb
lea
xor
je
aam
fwait
call
xchg
push
pop
in
inc
mov
add
inc
std
lods
loop
fcmovnbe
cmp
aam
mov
xor
call
gs
ds
pop
lock
push
pop
inc
mov
popa
fcmovnbe
ss
mov
call
imul
add
sub
inc
mov
clc
mov
filds
aas
sub
rep
push
cmp
pop
add
popa
ds
les
ljmp
aaa
dec
sbbl
or
push
aad
add
decl
sub
fisttpll
jmp
pop
les
inc
pop
adc
jge
es
out
jg
xor
lods
mov
xor
mov
or
and
inc
sbb
sbb
icebp
std
fsubrs
xchg
movsb
xor
and
lret
loopne
ds
lahf
jg
xchg
pop
adc
ljmp
mov
ret
clc
lcall
xchg
push
mov
push
aad
add
push
mov
sbb
mov
cmp
dec
mov
cmpl
mov
sub
xor
adc
cmpsb
inc
pop
js
inc
decl
sub
mov
push
inc
or
test
js
outsl
aam
xor
lea
call
cmp
das
mov
or
rclb
mov
cli
cmp
inc
jnp
stos
mov
imul
cld
movsb
mov
pop
mov
add
xchg
lock
and
sub
data16
test
cmpsl
mov
movsb
pop
fmulp
add
jbe
mov
adcl
out
scas
inc
ja
insb
lcall
mov
jae
iret
ljmp
arpl
jl
mov
mov
jns
fsubr
mov
push
lods
lock
sbb
ja
mov
xchg
fsts
add
lods
rcll
popw
xlat
std
jns
adc
ljmp
in
es
xchg
ljmp
cli
stos
cmc
lret
pop
and
sbb
push
popa
hlt
push
iret
pop
das
sbb
js
call
push
push
mov
pop
lcall
sti
or
pop
inc
push
nop
lea
or
jns
shll
pop
ret
xchg
xchg
xchg
push
xchg
jecxz
sbb
push
inc
jb
sbb
std
cmp
int
jle
or
xchg
sarl
sbb
xchg
add
stos
push
popf
jg
jbe
rcl
rcll
mov
in
pushl
sti
sbb
jmp
cmp
gs
das
stos
sub
xchg
sub
push
and
lcall
inc
add
mov
pop
pop
das
decb
filds
mov
jmp
js
mov
adc
js
cmpsb
lea
xchg
jl
adc
and
fstl
imul
pop
mov
incl
inc
cmc
fwait
mov
sub
add
add
adc
xrelease
mov
int
adc
es
insb
xlat
daa
jl
dec
nop
mov
and
sbb
add
and
gs
gs
xor
xor
fs
insb
adc
dec
outsl
popa
decl
jb
jb
inc
jg
inc
gs
push
jb
arpl
hlt
fs
fnstenv
and
push
imul
inc
xor
and
jge
push
add
mov
push
add
sub
andl
inc
mov
jmp
or
dec
add
xor
pop
decl
push
mov
jb
jne
cmp
or
dec
xchg
sar
inc
push
icebp
pop
or
dec
std
sar
addr16
add
xorps
cli
inc
cmp
inc
aam
cmp
mov
pop
loopne
dec
jecxz
call
add
sbb
pusha
add
in
hlt
pushl
in
jge
int3
es
decb
clc
je
sub
jg
pop
jno
rep
in
dec
or
push
sub
or
pop
clc
fisttps
loop
out
pop
jne
outsl
dec
jmp
sbb
orb
cld
xchg
or
or
rcrl
mov
in
and
faddp
add
cmp
lea
jae
lahf
ljmp
cld
fwait
int
adc
popf
incl
incl
js
or
setg
dec
out
or
scas
icebp
cmp
std
cmp
jg
icebp
cmp
rcll
arpl
xor
aaa
xchg
push
hlt
jmp
movsb
add
pop
sub
aam
mov
call
in
inc
add
imul
pop
mov
pop
cli
lea
outsl
jmp
lahf
repz
ds
sub
call
test
push
sub
lock
nop
pop
push
jne
or
pushf
or
addr16
outsb
mov
and
cld
movsb
cmpsb
pop
or
pop
adc
in
mov
mov
test
test
sbb
pop
andb
dec
sub
mov
pushl
xor
mov
lea
add
cli
mov
or
incl
jmp
popa
andb
lcall
xchg
and
bound
adc
decl
test
mov
cwtl
lock
jmp
cmpsl
outsb
or
addr16
lahf
test
cmp
sbb
addr16
jl
frstor
cmp
xor
std
add
je
sahf
adc
call
pusha
mov
dec
pushf
lret
mov
cmpsb
ljmp
xchg
mov
dec
outsb
lods
and
inc
inc
jns
cltd
in
push
cltd
dec
fmull
pop
lcall
adc
jge
push
dec
xchg
pop
lods
pop
movl
in
add
jmp
movsb
decl
lea
push
mov
incl
mov
xchg
adcl
jmp
xor
mov
mov
jo
mov
mov
push
cli
jae
inc
pop
sub
lds
ljmp
jne
sub
leave
in
decl
popf
rorl
dec
clc
test
adc
ret
push
imul
sub
cmp
sbbl
test
lcall
inc
call
fsubrl
inc
outsb
xor
jp
xchg
dec
jae
mov
call
lea
mov
dec
fstp
or
out
out
pushl
push
add
mov
shl
out
mov
or
adc
mov
mov
loop
dec
push
adc
enter
ljmp
cli
adc
or
mov
insl
or
xor
xor
inc
adc
and
sbb
notb
mov
or
popa
jno
or
and
das
mov
jmp
push
pushf
bound
aad
adc
xor
fistpl
mov
fsubs
lock
fcompl
jmp
inc
mov
rcrl
mov
movsb
call
sar
inc
jecxz
lcall
jg
xchg
mov
call
nop
or
incb
mov
sub
adc
mov
addr16
sbb
out
icebp
insl
add
jb
js
cld
in
xchg
lock
lea
mov
cli
adc
dec
mov
xchg
push
imul
popf
insb
push
push
sbb
inc
decl
jo
fimull
mov
call
lock
stc
xchg
jecxz
jp
adc
add
push
mov
sar
mov
test
inc
jo
mov
call
sub
jle
add
call
jno
push
std
sub
das
movsl
lea
or
into
nop
sbb
jmp
dec
incl
adc
mov
adc
push
rorl
add
push
adc
lea
decl
sahf
push
and
inc
mov
lds
je
das
sub
dec
adc
jo
lock
lret
add
push
pop
call
mov
pop
std
inc
dec
addb
dec
cmp
sbb
jb
pop
xchg
pop
adc
pop
mov
mov
dec
inc
arpl
push
sub
inc
add
cltd
push
pop
idiv
jne
cmp
pop
pop
cmp
test
adc
mov
xchg
fbstp
jmp
loop
xchg
leave
add
add
push
call
push
cld
add
mov
mov
shr
sbb
sbb
jo
adc
push
push
lea
test
mov
push
dec
or
std
dec
test
push
inc
mov
inc
pop
loopne
jle
pushf
sbb
add
jg
sbb
or
mov
and
rorb
add
cmpsl
sub
mov
subl
out
sub
sub
hlt
push
addb
xor
push
adc
push
arpl
dec
jg
cmpsl
mov
out
dec
mov
push
add
jo
mov
fmull
push
push
push
jno
add
or
dec
adc
das
fiaddl
cmp
sbb
mov
les
jbe
add
pop
lds
lods
stos
and
add
xorb
jae
test
fmull
mov
mov
cli
rep
out
iret
and
cmp
das
sbb
push
arpl
pop
stc
lcall
test
nop
add
pusha
mov
mov
dec
pushf
and
lret
jnp
xchg
aaa
and
mov
test
or
xchg
ret
mov
rorb
xchg
shrl
lcall
push
and
nop
cmpsl
add
mov
xor
leave
adc
pop
mov
xor
push
push
outsb
incl
je
mov
int
scas
gs
mov
sub
test
je
push
pop
and
xchg
or
incl
xor
push
aas
pop
push
decl
sbb
sbb
inc
pop
push
aas
lods
call
push
test
push
stos
mov
xor
jmp
jmp
or
aaa
fimuls
inc
xor
pop
roll
xor
push
jmp
mov
mov
sbbb
movsl
fbld
aaa
sbb
nop
adc
xchg
mov
call
push
pop
pop
ret
call
adc
cld
dec
mov
pop
sub
cld
loopne
push
add
lret
das
jmp
adc
cmpb
ret
jb
pop
idiv
dec
jbe
mov
jle
ret
push
jmp
loop
xor
dec
add
jmp
in
popa
lods
or
leave
push
or
shlb
pusha
call
mov
ud0
add
xlat
add
cmp
or
test
pop
push
aam
jb
dec
pop
or
or
or
and
push
and
pop
cs
jmp
sub
mov
ficoml
test
jne
in
push
pushl
xchg
lods
jp
jns
sbb
pop
adc
xorb
jne
cmp
iret
sti
jge
or
add
pop
sub
adc
shll
enter
jne
sub
ret
lock
outsl
adc
les
mov
cli
out
or
enter
and
outsb
cmp
stos
xor
and
call
cltd
pop
test
js
loopne
dec
pop
push
mov
adc
std
add
in
add
dec
mov
lods
push
stos
jmp
sbb
pusha
aas
push
lcall
bound
aas
mov
push
lret
test
pop
xchg
incl
jae
xor
jge
dec
or
loop
stc
push
add
movsl
pop
sbb
loope
jnp
xchg
cli
jmp
stos
clc
dec
test
cmp
xor
cmp
ret
lods
or
mov
adc
push
lcall
lock
push
call
xchg
xchg
mov
mov
mov
cmp
cli
enter
push
add
jl
jg
pusha
mov
push
hlt
push
xchg
outsl
jle
dec
in
xor
jle
into
push
in
iret
call
ret
enter
xchg
mov
inc
out
adc
cmc
lahf
jmp
pop
outsb
enter
pop
jge
jne
stc
jmp
inc
ficompl
add
and
or
loopne
ljmp
sti
test
pushf
pushf
fimull
mov
lods
sar
sub
lret
in
sbb
add
pop
fwait
movsl
mov
cmp
push
pushl
add
jge
inc
incl
push
dec
or
mov
call
iret
and
push
ffreep
pop
push
sub
sbb
shr
lds
jae
shrl
lret
lods
lret
jmp
test
sbb
or
incl
adc
inc
mov
pushl
out
mov
aas
dec
rolb
cs
xor
jmp
dec
jmp
adc
ja
leave
lret
jge
add
test
mov
mov
ljmp
mov
outsl
incb
jg
jno
or
and
shr
mov
or
add
data16
mov
dec
inc
cli
pop
pop
shrl
pop
nop
dec
popa
sarb
mov
inc
pushf
lods
pushl
mov
stos
outsl
div
mov
icebp
mov
std
movsl
call
or
nop
lea
cld
jmp
ss
ret
imull
sbb
push
and
sbb
scas
or
cmp
mov
adc
jae
add
incl
shr
jmp
out
lea
pushl
sti
push
add
mov
test
testb
decl
out
push
dec
sbb
test
test
or
and
cmpsl
call
dec
hlt
scas
mov
xchg
jnp
jecxz
lea
lock
ljmp
mov
cmpsb
jp
dec
ja
mov
and
popa
std
je
outsl
push
outsb
and
cmpb
cmp
and
cs
push
push
jmp
pushl
jae
xchg
insb
iret
outsb
dec
je
bound
ss
imul
dec
sbb
andb
jp
and
or
push
daa
cmp
insb
dec
jne
push
jae
xor
jbe
push
in
testb
js
push
ja
pop
js
je
adc
imul
fdivr
insb
aas
inc
js
imul
dec
addl
push
fs
sti
orl
sbb
aad
ljmp
jl
call
hlt
mov
push
arpl
lcall
mov
stos
jmp
cltd
cmp
dec
push
adc
cmp
dec
dec
xor
rorl
sbb
or
fnsave
xor
outsl
aaa
mov
xor
shlb
jae
sub
or
xor
call
inc
mov
inc
mov
jae
jl
stos
jmp
sbb
loopne
insl
fdivl
push
inc
or
sub
leave
das
ljmp
lods
call
add
test
push
sub
jg
inc
mov
jg
mov
push
mov
add
add
add
jne
add
rol
shll
out
pop
push
fldl
out
push
jb
ret
sub
cltd
mov
ret
sahf
aad
ficompl
dec
push
lcall
mov
sub
push
sub
das
inc
pop
aaa
frstor
mov
lock
adc
sbb
mov
push
or
add
lret
cld
shl
ret
mov
popl
add
mov
js
push
lea
push
sbb
sub
bound
cmp
pushl
add
add
mov
add
rcrb
clc
push
aam
mov
and
and
xchg
sbb
push
repnz
or
lea
xchg
addr16
jmp
inc
or
flds
or
mov
xlat
or
fistps
dec
adc
jmp
xor
subb
call
loopne
pop
pop
loopne
pop
pop
incl
inc
add
add
add
incl
