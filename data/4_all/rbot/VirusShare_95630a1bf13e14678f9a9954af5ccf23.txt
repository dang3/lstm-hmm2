lds
adc
adc
push
lret
xchg
add
cmc
ds
movsb
test
mov
xchg
adc
and
testb
cmc
mov
test
stos
or
std
jp
cli
sub
cmc
push
icebp
pop
in
dec
in
ljmp
leave
mov
adc
mov
popl
cmp
nop
dec
gs
mov
mov
cmp
fldcw
lret
leave
nop
or
roll
test
jnp
cmc
jbe
in
iret
in
jmp
ljmp
fstp
gs
xchg
rcrb
dec
xchg
add
iret
dec
xchg
mov
mov
ficoms
lock
sbb
adc
push
adc
xlat
aad
jae
mov
cs
and
arpl
inc
jg
pop
mov
mov
in
in
insl
sahf
ret
fs
jle
pop
fwait
cmp
mov
push
adc
in
jmp
cmp
ljmp
stos
sub
scas
fsubl
sbb
aad
cltd
adc
dec
dec
int3
xor
ret
inc
andb
pop
and
insb
aaa
imul
lock
xor
dec
movsb
fcmovnu
in
aam
pop
xchg
dec
mov
imul
loope
mov
and
mov
jb
sbb
insb
xchg
test
and
test
out
inc
mov
adcl
leave
mov
cwtl
in
mov
insb
pop
js
std
pop
shrb
jmp
imul
pusha
push
paddq
cwtl
roll
into
xchg
or
xchg
xchg
cmp
cmp
int
xchg
xor
mov
jne
push
add
and
inc
scas
test
inc
test
arpl
insb
pop
div
hlt
jne
in
xor
mov
imul
inc
fcoml
jno
sbb
push
xor
rcrl
push
jae
sbbb
mov
mov
addr16
xor
test
or
pusha
pop
fmuls
test
fcomps
add
cli
mov
aam
and
rclb
outsl
dec
pop
fisubs
xchg
dec
aaa
imul
xor
cwtl
or
pop
mov
add
test
pop
pop
mov
pop
mov
int
add
dec
cmpsl
inc
stos
js
mov
std
mov
jo
outsl
imul
pusha
add
pop
sbb
xchg
jg
push
fstpl
nop
in
mov
xor
mov
test
xor
mov
ficoml
pusha
sub
fcomps
neg
lods
ficomps
lret
inc
xchg
push
cld
cli
jnp
xchg
jp
dec
jne
pop
repnz
rcrb
jnp
xchg
mov
xor
and
test
cmp
movsl
nop
mov
out
sub
jno
mov
lods
lahf
inc
scas
into
adc
bnd
and
jne
mov
push
cmp
ficomps
or
push
jo
hlt
hlt
jge
cmp
shlb
cmp
aaa
sbbb
mov
xchg
xchg
sbb
cmp
pop
xchg
ret
push
mov
fcomp
stc
cmpsb
inc
dec
adcl
jbe
push
shrb
popa
push
dec
push
les
sarl
cwtl
push
adc
insl
pop
rorl
add
adc
mov
rcr
aaa
lock
test
add
fadds
inc
das
int3
cmpb
cli
push
and
shrb
cmpsl
mov
mov
iret
outsl
mov
out
fs
xchg
inc
fsubl
jl
decb
xor
adc
dec
adc
add
test
xor
testl
add
dec
cmp
pop
aaa
ror
dec
aaa
adc
stc
cmpsb
ret
jbe
cmp
cmpsl
mov
jae
and
push
cltd
dec
inc
loope
and
xchg
dec
xchg
cli
add
lret
push
mov
fidivrs
movsb
xchg
bound
or
xchg
pushf
pusha
push
int
mov
push
hlt
sub
dec
es
and
inc
aad
clc
call
mov
push
les
pop
pop
in
or
pop
jge
js
jo
rorb
xchg
test
scas
fdivrl
cmp
fidivrl
das
lods
xchg
popf
mov
adc
ret
jg
pusha
dec
pop
mov
adc
sub
and
fwait
pop
js
mov
imul
test
daa
dec
fs
shl
fs
notb
out
mov
outsb
out
cmp
popa
add
inc
aas
jp
mov
repz
out
mov
pop
aam
nop
push
xchg
or
adc
cmpsl
dec
stos
mov
aam
jmp
mov
dec
push
int3
cmpsl
inc
sbb
push
popf
sbb
pop
adc
out
or
cmp
add
jp
sub
lods
sbb
pop
and
out
pop
mov
dec
lds
push
push
adc
and
shl
pushf
stc
negl
out
mov
or
jmp
adc
fidivrs
cmp
xor
mov
cmpsl
lock
mov
mov
ds
bound
imul
xchg
fisubrs
imul
mov
pop
ficoms
push
push
or
sub
orl
mov
pop
in
jp
cmp
jae
hlt
lods
dec
push
sub
sbb
pop
int3
sbb
inc
adc
or
jmp
jge
insl
in
mov
mov
fildll
mov
push
pop
fwait
add
add
int
adc
rorl
push
cld
movsb
aas
jb
std
xorl
outsl
inc
or
outsl
mov
rcl
lret
add
mov
adc
jae
imull
mov
ss
mov
inc
imulb
push
imul
mov
arpl
sbb
stc
stos
enter
and
std
sub
jbe
jb
mov
adc
imul
rcr
arpl
xchg
xchg
adc
dec
test
je
nop
dec
enter
add
scas
push
sub
stos
push
in
mov
clc
ret
inc
cmp
nop
idivb
sub
fld
inc
xor
call
xor
inc
imul
addl
rorl
mov
inc
sub
add
mov
aas
testb
pop
cmpsl
arpl
xchg
outsb
push
add
mov
push
or
cmp
mov
push
jl
jp
cmpl
dec
insb
push
or
movsl
and
fistps
sbb
adc
dec
adcb
add
inc
fstpt
cli
jne
das
sub
adc
xchg
popf
pop
jle
fstpl
lods
push
rclb
ret
dec
enter
mov
jle
ret
mov
test
outsl
jmp
push
mov
lds
cmpsb
and
sbb
out
lea
cmp
sub
add
gs
cld
cld
mov
mov
mov
imul
inc
add
sahf
sbb
push
rcll
rclb
inc
lods
mov
and
shlb
mov
psubusw
jecxz
ret
xchg
and
fidivl
push
shll
or
cmpsb
movl
sub
ja
scas
lods
sub
dec
push
imul
fcoms
outsl
dec
dec
int
andb
inc
or
sbb
aas
xor
mov
push
lock
jmp
xchg
in
in
jmp
push
jg
push
jnp
xchg
adc
mov
jmp
popa
aas
inc
mov
stos
ds
scas
jne
xor
pop
or
fcoms
push
orb
sbb
xchg
inc
jg
movsb
cli
inc
push
mov
icebp
mov
sbb
bound
in
sub
push
inc
sbb
icebp
lea
or
pop
mov
repz
jl
mov
hlt
aam
xor
lods
mov
sbb
sbbl
mov
pop
push
rorl
mov
sarb
ja
inc
sbb
and
repnz
dec
jmp
fdivrl
shl
cli
bswap
jnp
xchg
les
jg
push
pop
or
or
inc
and
icebp
pop
sub
scas
outsb
into
mov
imul
in
ficompl
add
sub
lret
dec
mov
in
xchg
xorb
xchg
and
iret
outsl
inc
xchg
sub
cmp
pop
inc
mov
adc
mov
shrb
dec
ret
mov
xchg
xor
sub
mov
dec
xchg
sub
push
push
mov
mov
ret
xchg
imul
into
mov
icebp
mov
push
ror
pop
int
fiadds
xchg
arpl
xorl
cmp
lods
arpl
xchg
test
cmp
loope
sub
lahf
and
fistps
lret
rclb
add
push
lods
leave
mov
arpl
jb
clc
jns
call
das
push
jb
jbe
adc
sahf
push
fs
inc
xchg
push
xchg
jo
mov
or
and
xor
mov
fidivl
push
stos
fs
insb
sub
adc
add
push
ss
xchg
adc
leave
dec
cmp
cmpsl
icebp
lods
push
stc
divl
call
test
popa
pop
xchg
inc
and
nop
cs
push
xchg
or
inc
mov
cmp
scas
cs
lea
stos
cmp
mov
mov
mov
push
ret
lret
inc
das
mov
pop
js
std
movsl
shrb
cmpsb
xchg
pop
mov
dec
pop
in
or
pop
fidivl
push
insl
mov
test
mov
mov
mov
daa
and
sbb
mov
bound
ja
push
rclb
lods
int3
test
movl
cmp
and
cli
jae
in
out
imul
loop
adc
inc
leave
mov
decl
dec
push
nop
dec
add
sbb
cmp
ljmp
xor
test
sbb
and
popa
cmp
rorl
cmpsb
dec
dec
mov
roll
popf
cld
sub
and
xor
pop
in
in
int3
leave
rcrl
push
loopne
mov
icebp
adc
dec
xchg
mov
or
inc
popf
add
mov
scas
in
mov
scas
mov
cmp
cwtl
aam
push
int
dec
int3
dec
enter
mov
mov
jae
sub
jmp
call
pop
sbb
xor
or
sbb
in
stos
ja
mov
mov
cltd
push
add
jnp
xchg
mov
push
iret
in
ljmp
dec
pop
and
mov
cli
jnp
cmp
jne
jo
push
filds
out
es
or
pop
xor
adc
xchg
je
and
pop
loop
addr16
mov
xor
or
mov
push
movsb
andl
mov
push
xchg
jne
ds
outsb
jmp
clc
gs
jl
mov
xor
outsb
out
insl
jmp
in
filds
dec
negl
adc
or
and
sbb
mov
sub
pusha
andl
lahf
xorb
mov
or
movl
xor
pop
jb
mov
jbe
pop
hlt
jecxz
loop
into
add
mov
shll
dec
xchg
or
sbb
cmp
jne
aas
jmp
mov
lods
jmp
adc
xchg
or
add
lea
leave
movb
les
sub
xor
nop
mov
mov
std
dec
push
dec
mov
xchg
adc
mov
daa
ja
push
test
nop
jmp
cmp
xchg
lea
mov
sbbb
negl
dec
int3
add
invd
rol
inc
shlb
and
jbe
xchg
sahf
mov
insl
es
leave
loope
push
xorb
popf
jnp
jae
mov
push
aam
add
call
jne
lods
sub
adc
or
cmpsb
add
pop
arpl
int
int3
push
inc
mov
inc
ficoms
inc
push
js
mov
jl
push
out
lods
mov
loopne
pop
jle
xlat
sub
nop
xadd
push
push
outsb
cmp
push
gs
add
divl
stos
stos
sub
arpl
flds
lock
rclb
repz
leave
dec
mov
int
orl
pop
jne
jae
test
out
rclb
popa
call
inc
inc
inc
cld
push
pop
jbe
cmc
hlt
sub
sbbl
mov
xchg
sbb
mov
mov
lahf
fwait
ss
and
adc
push
lods
or
test
movl
cli
mov
sub
pop
fldcw
jmp
out
pop
push
xchg
xchg
arpl
aam
xchg
nop
or
xchg
mov
mov
mov
bound
rorb
loope
sub
and
mov
aaa
aam
pushf
xor
stos
leave
std
cld
scas
or
ja
inc
cld
jnp
and
jo
sbb
jmp
in
outsl
pop
and
mov
roll
rclb
or
test
lock
fs
sbb
push
sub
cs
push
sbb
test
sbb
pop
xchg
xor
or
adc
inc
iret
int
mov
jnp
jmp
int3
popa
sbb
not
stos
dec
imul
pop
sub
jbe
sti
shll
push
jmp
lret
hlt
lds
out
pop
jl
xchg
cmpsb
pop
xchg
hlt
jno
sub
or
pusha
sbb
pop
fsubrs
push
aam
add
dec
mov
mov
xchg
mov
not
sub
inc
add
ret
fwait
ret
sbb
xchg
jp
dec
mov
xchg
cmpsb
xchg
cmp
mov
hlt
lea
test
mov
sbb
xchg
roll
mov
aad
or
inc
or
dec
cld
jnp
addr16
cmp
push
push
jecxz
popa
popa
ljmp
ficoml
push
cmc
or
pushf
add
jmp
movsl
mov
adc
sub
jecxz
cmp
int3
mov
leave
test
add
pop
mov
jae
sbb
rcl
mov
xchg
popf
lods
and
addl
pop
clc
daa
inc
xor
and
in
les
inc
hlt
push
sti
jo
jns
push
repnz
shrb
dec
movsb
cs
push
mov
pop
mov
aaa
les
cmp
cmpsl
jg
aaa
imul
aad
fdivs
int
pop
addr16
ljmp
dec
pop
fdiv
cmpl
leave
ret
add
mov
outsb
and
cs
lea
pop
push
mov
adc
mov
rorb
dec
aad
jp
inc
mov
jo
ret
scas
mov
jne
lods
out
out
js
cmpsl
dec
in
and
int3
pop
jnp
pushf
mov
sbb
jg
mov
mov
pusha
aad
cwtl
jb
imul
lahf
mov
mov
or
lods
sub
inc
std
jl
lods
adc
aad
jae
and
inc
loope
and
fsubs
mov
adc
mov
movsb
jg
jmp
mov
mov
in
mov
mov
dec
dec
sbb
aam
push
or
ds
or
jecxz
xor
jg
jne
sbb
mull
sub
inc
aam
sbb
scas
pop
js
aad
xor
or
les
out
outsb
lock
push
in
jp
mov
pop
cmp
scas
repnz
in
aas
lahf
popf
mov
push
mov
push
mov
inc
mov
das
sahf
jns
shlb
mov
lock
sub
icebp
mov
add
sbb
iret
sbb
nop
leave
or
adc
add
idivl
gs
notb
outsb
dec
scas
test
loopne
popf
sbb
mov
shrl
dec
leave
movl
pop
fidivrl
jne
lahf
clc
xor
jb
push
cmc
sub
jne
cmp
inc
out
jmp
sarl
dec
neg
add
xlat
jmp
jle
xlat
lea
sbb
mov
mov
rcrl
push
jmp
mov
inc
std
jl
xor
cmc
inc
cmpsl
mov
lock
cmpsb
push
inc
arpl
ds
sbb
loopne
adc
xchg
jp
add
jns
mov
mov
push
out
lods
jecxz
es
test
fwait
daa
mov
cmp
mov
inc
cmp
sub
stos
jl
cmc
cmc
inc
or
push
lock
mov
repnz
rcr
push
fbld
push
xchg
xchg
arpl
push
jne
nop
leave
or
adc
enter
ljmp
sub
lods
xchg
xchg
xchg
sbb
aad
jne
mov
cmp
inc
and
jns
daa
xor
mov
dec
out
ljmp
fadd
sbb
sub
xor
pop
je
inc
or
or
test
jns
xor
xor
int
dec
fs
insb
rcl
inc
and
popf
xchg
mov
adc
mov
mov
ss
xor
jnp
and
xor
dec
fisubrl
mov
jle
sbb
push
loopne
sti
inc
addr16
or
testb
jp
gs
filds
cmp
insl
mov
cli
mov
sub
sbb
adc
ror
xchg
mov
roll
mov
cld
jnp
cmc
inc
or
push
lock
mov
icebp
call
in
je
cltd
sbb
xchg
ffreep
push
jb
mov
adc
inc
test
mov
xchg
mov
clc
xlat
cmp
outsl
mov
jnp
sub
rcrb
adc
push
xchg
mov
mov
ret
pop
xor
stos
ret
inc
mov
push
icebp
ljmp
je
lret
jo
dec
insb
xchg
pop
test
lock
into
stos
inc
jae
std
xchg
mov
push
sub
inc
out
daa
rcrw
mov
mov
int3
push
mov
pop
lea
lcall
in
ljmp
pop
ficomps
cld
cmpsb
dec
xchg
xchg
xchg
nop
sbb
leave
in
xchg
decb
push
xchg
ss
fsubrl
test
and
sbb
cli
adc
rorl
push
cmp
dec
leave
dec
xor
push
cmp
ret
lea
stos
jbe
push
sahf
out
in
popa
ljmp
fildll
shll
push
lods
les
test
add
jl
repnz
mov
mov
sub
cmpsl
pushf
scas
add
mov
aaa
fcmovu
add
add
pushw
scas
dec
mov
add
xor
and
push
jo
in
jbe
sub
in
test
into
lret
add
mov
adc
xchg
cmpsb
push
loop
and
mov
mov
cli
xor
lods
push
pop
ret
dec
sub
pop
js
and
mov
push
dec
movl
je
ret
ss
jne
aam
push
xor
int3
int3
dec
fstpl
sbb
pop
pop
iret
repnz
xchg
leave
popa
pop
add
pop
cmpl
jb
lods
sub
mov
daa
cmp
ds
into
xchg
push
push
mov
cmp
dec
mov
shll
xor
mov
outsl
sub
arpl
pusha
inc
mov
jge
fucomip
adc
int
lea
or
lret
mov
sbb
icebp
mov
xchg
frstor
push
ss
aam
out
dec
dec
mov
xor
and
mov
inc
fdivs
imul
mov
dec
in
xchg
mov
faddl
fcmovu
xchg
adc
div
aas
rcr
pop
add
or
pop
inc
ja
lods
sub
in
adc
pop
fidivs
lahf
popf
fnstsw
fcompl
sbb
push
shll
mov
jnp
mov
outsb
push
fbld
xchg
pop
lcall
xchg
push
iret
adc
mov
outsb
int3
inc
mov
mov
mov
cs
jae
xor
cmpsb
and
fwait
xchg
and
adc
cmpsb
scas
push
into
xchg
push
push
inc
movb
jp
jl
cltd
dec
jbe
out
out
jnp
sub
jb
rcrl
pushf
pop
push
adc
mov
push
imul
jmp
push
out
xchg
or
test
out
mov
lods
inc
mov
testb
rcll
sarb
jg
sub
fsubl
icebp
pop
adc
pop
rcr
icebp
jmp
loop
loope
xchg
imul
pop
push
or
lret
sub
mov
pop
aas
mov
sbb
ljmp
movsb
test
orl
xlat
mov
dec
jne
push
sbb
pop
pop
pop
fs
insl
jmp
test
adc
sbb
xor
push
xor
stc
clc
sub
leave
cmp
mov
lock
mov
rep
mov
mov
adc
fnstsw
dec
xchg
inc
jo
dec
dec
or
aaa
mov
xor
jbe
divl
shrl
cmpsb
out
sbb
dec
fnclex
insb
lds
push
fstl
push
lret
enter
inc
mov
sub
xor
loope
pop
cmp
sahf
add
gs
mov
xchg
out
inc
dec
mov
mov
popa
test
lock
adc
hlt
jne
lea
jmp
dec
insl
push
push
dec
push
push
and
mov
xchg
or
ret
mov
dec
flds
loop
aaa
mov
daa
nop
lods
sub
jno
adc
cltd
xchg
pop
add
rorl
and
fwait
inc
sub
cmp
mov
out
insl
jmp
daa
pop
popa
fstpl
or
je
adc
xor
test
cmp
lret
scas
pop
lcall
and
mov
mov
int3
aam
ds
test
sarb
dec
pop
js
imul
jmp
rcrb
inc
adc
xchg
adc
push
inc
mov
test
mov
fidivrs
mov
js
sub
and
sub
mov
enter
dec
mov
ja
inc
ss
pop
imul
repnz
outsl
jmp
scas
sub
pop
loopne
inc
nop
inc
lock
xchg
mov
pop
shl
add
in
in
add
jge
hlt
adc
xchg
daa
sub
fisttpll
mov
mov
pushf
pop
fistps
cmp
push
sarb
inc
lock
leave
dec
mov
pop
loop
mov
cli
inc
pop
out
icebp
movsl
jb
imul
imul
cmpsb
and
xchg
push
dec
loope
icebp
adc
add
or
arpl
out
insl
jns
in
jnp
sub
test
out
insb
pop
cmpsb
and
mov
ficompl
js
xchg
adc
ret
int3
dec
xor
pop
inc
inc
stos
sub
inc
or
cs
lods
in
ljmp
inc
fiadds
adc
or
aam
nop
je
jae
jnp
cmp
inc
sbb
mov
aaa
lods
out
or
xchg
mov
pushf
pop
fcomps
xchg
or
int
xchg
or
or
add
incb
stos
aaa
ret
or
pushf
in
sub
lret
inc
jo
xchg
mov
ret
mov
xor
or
test
or
loope
jo
fsubl
cmp
cmpsl
xor
jecxz
mov
ja
ror
dec
nop
sub
lret
jl
mov
jae
mov
nop
jecxz
inc
and
ficomps
jecxz
adc
mov
out
ret
jecxz
sarb
xor
pusha
sbb
daa
test
and
rcll
sbb
sub
or
push
inc
jle
fwait
sti
movsb
scas
cltd
sbb
sub
imul
push
insl
std
cltd
mov
sti
inc
lea
iret
dec
push
add
mov
jp
aaa
add
xchg
scas
out
sub
test
subb
aad
ds
stos
dec
mov
stos
dec
sbb
js
bnd
xor
jmp
push
push
addr16
enter
les
xchg
jp
rcr
or
dec
pop
mov
mov
add
cs
icebp
insb
sub
pusha
fstps
shrl
ror
dec
inc
pop
es
fadds
fistl
icebp
mov
adc
in
lahf
cmp
adc
adc
mov
mov
add
out
inc
mov
jnp
mov
mov
push
loopne
mov
daa
or
fxch
scas
mov
aam
and
into
dec
adc
inc
std
jle
mov
jae
subb
insb
sub
stos
daa
loopnew
pop
push
in
xchg
in
adc
push
or
mov
mov
add
in
imul
mov
cmp
xchg
addr16
and
fcomps
aaa
push
mov
mov
mov
shrl
add
idivb
and
out
xor
stos
mov
fisttps
lcall
jae
push
out
mov
add
ds
jo
xor
xchg
out
imul
flds
push
rclb
cmp
sub
lods
ud0
bnd
popf
pop
outsb
xchg
imul
rcr
loop
jo
cltd
cmc
cmp
pop
sub
or
or
roll
cmpb
fidivrs
mov
jne
and
movsb
cmpsb
cs
push
mov
fcoms
dec
enter
into
mov
xor
xchg
inc
inc
shlb
xorb
outsb
call
icebp
inc
pusha
inc
adc
ss
insl
leave
es
lcall
add
stc
xchg
inc
sub
sarl
movsb
fistps
xlat
push
push
sarb
inc
jl
dec
movsb
inc
mov
inc
sub
or
push
cmc
jno
in
insl
hlt
cmp
xor
jmp
inc
adc
or
sub
pop
in
add
aam
jle
cmp
leave
xor
andl
mull
dec
int3
dec
aam
test
jo
dec
js
mov
pop
dec
push
scas
fildl
xchg
pop
xchg
enter
pushf
jbe
jp
jnp
ret
hlt
int3
mov
aaa
dec
outsl
mov
mov
repnz
test
jmp
fwait
adc
rcrb
or
push
sbbb
cmc
sahf
mov
insl
and
pop
pop
sbb
icebp
adc
xchg
xchg
test
repnz
mov
out
lahf
adc
outsb
movsl
sub
sub
mov
aas
sbbb
les
leave
dec
cmp
icebp
sub
stc
mull
push
adc
cmpsb
in
sbb
xchg
out
fstpl
mov
xchg
clc
add
je
addb
push
in
sub
pop
mov
jb
sub
aaa
mov
pop
ficompl
jne
pop
iret
dec
cmp
mov
sub
sarb
cmp
cld
mov
insl
rcl
push
addr16
push
sahf
cltd
popf
xchg
hlt
adc
mov
inc
pop
add
std
sbb
mov
xchg
and
gs
gs
sub
sbb
and
push
ss
push
mov
mov
lods
ret
sub
mov
mov
imul
mov
jmp
inc
arpl
xchg
in
pop
sbb
fwait
xlat
icebp
adc
jno
enter
add
cmp
mov
mov
movsl
movsb
mov
push
sbb
dec
push
outsl
popf
dec
add
les
add
std
sti
mov
jmp
inc
repz
sbb
rcrb
inc
fs
fldt
lds
ljmp
sti
or
dec
imul
mov
inc
add
lods
adc
mov
mov
cmpsl
mov
int
int3
test
xchg
jp
xlat
ja
hlt
in
dec
outsl
jmp
mov
test
loopne
ffree
adc
push
xchg
jo
nop
sti
dec
xchg
or
cmp
cltd
jmp
jo
mov
ljmp
test
repnz
popf
or
xor
mov
xor
inc
ret
stos
stos
lods
fidivrs
dec
sbb
mov
lock
jmp
cmp
ret
fbld
sbb
aad
mov
pop
jbe
push
in
js
mov
and
das
lods
sbb
mov
jo
pop
cwtl
ret
push
orb
das
mov
pop
sti
cmpsb
and
push
jo
xor
sub
inc
lea
xchg
xchg
fdivs
cmc
rorb
test
xchg
mov
jl
dec
xor
lods
outsb
into
mov
mov
inc
adc
sbbb
xchg
push
adc
mov
push
pop
add
ret
rcrb
stc
jbe
lods
repz
sub
aad
aam
jecxz
cmp
fcoml
jae
dec
xchg
inc
mov
orb
and
jns
pop
xor
scas
lcall
jmp
jo
xchg
sub
dec
dec
int3
pop
cmp
ret
pop
add
test
push
mov
inc
in
mov
xchg
icebp
aaa
sbb
add
jnp
xchg
ret
jle
cmp
mov
cs
lods
sub
lods
adc
mov
push
push
sarl
sbb
mov
xchg
and
mov
pop
loop
inc
ljmp
mov
inc
xchg
pop
js
lock
into
stos
inc
push
jp
xchg
sub
cmp
fstp
push
int3
xchg
insb
sbb
popf
iret
pop
sub
aad
mov
dec
ljmp
inc
add
cli
outsl
push
lods
divb
pop
aaa
scas
jmp
fs
arpl
inc
xchg
pop
sbb
cwtl
pushf
push
mov
iret
mov
int3
wbinvd
xchg
fidivrs
outsl
adc
js
mov
popf
inc
cmp
mov
fstps
fnstsw
enter
into
xchg
push
dec
jo
inc
lods
stos
test
in
cli
jns
ljmp
std
xor
add
sub
xchg
adc
or
int3
inc
mov
bound
xor
in
xor
xchg
icebp
insb
ds
movsb
and
call
pop
pop
fcoml
sarb
int
mov
mov
cmpsl
icebp
popf
dec
stc
idivl
pop
inc
mov
subb
fistps
sbb
xchg
xchg
lret
stos
scas
or
rcrl
mov
mov
add
popf
sub
movsl
push
cwtl
mov
sbb
ret
int3
pop
lret
leave
or
dec
or
sar
sti
xor
test
outsl
rcrl
jns
xlat
imul
int3
xchg
sbb
xchg
jns
mov
mov
mov
cld
out
xor
mov
fisubs
and
sub
xor
lds
mov
sbb
inc
add
fwait
xor
dec
push
jne
xor
insl
gs
je
fbld
and
sar
push
mov
mov
idivb
mov
push
mov
sub
and
pop
cwtl
pop
lret
adc
mov
movl
cmpb
mov
out
outsb
xor
inc
loop
test
lcall
xchg
push
sbb
push
rcll
orb
mov
mov
js
stos
mov
repz
mov
cmp
pusha
rcll
fistpl
sbb
push
int
lods
and
add
add
pop
dec
repz
mov
dec
xor
rcrl
loopne
mov
adc
mov
mov
add
adc
pusha
push
int
lock
inc
add
and
ficoml
iret
out
dec
dec
leave
mov
mov
xchg
frstor
cmp
fildll
push
sub
shr
mov
mov
aam
mov
addr16
ds
fidivrl
shrl
stos
adc
mov
adc
or
mov
stos
dec
mov
pop
mov
sbb
sahf
call
fldenv
imul
inc
imul
loope
pop
inc
fmuls
jp
or
insl
inc
ss
aas
mov
stc
mov
inc
and
sub
mov
mov
arpl
jne
cli
sub
dec
clc
divb
in
repnz
in
dec
dec
dec
dec
roll
inc
call
sets
push
inc
roll
loop
mov
sub
push
lods
jecxz
es
pop
roll
and
sti
xchg
sub
add
ror
int
dec
std
xor
das
sarb
jl
scas
push
jo
insl
mov
arpl
int
int
pop
data16
mov
xchg
int3
or
pop
mov
mov
icebp
xor
cmp
icebp
or
mov
lahf
and
pop
cwtl
sub
iret
ret
leave
dec
lea
leave
mov
cmpsl
icebp
and
jnp
cmp
and
lods
in
in
jl
dec
push
pop
push
lcall
rorb
mov
add
daa
popa
pop
cmpsb
or
cs
dec
push
iret
mov
ficompl
rcrl
mov
cmpsb
dec
sub
dec
mov
pop
gs
mov
xor
jmp
pop
ficoms
sbb
montmul
cmpsb
xchg
mov
add
xor
lods
mov
out
xchg
stos
mov
cmp
dec
push
mov
inc
mov
cmp
cmp
cli
inc
es
icebp
mov
out
movsl
loopne
imul
mov
inc
inc
xchg
fsub
dec
outsl
mov
addb
jp
mov
mov
jmp
lods
movsl
popf
xor
jmp
inc
sahf
sbb
mov
int
dec
mov
int
jl
jle
cmpsl
and
push
jo
lea
call
jne
pop
dec
sbb
sub
adc
xchg
je
lret
lods
test
cmc
inc
adc
bound
push
xor
es
dec
mov
pop
rcr
pop
sbb
add
dec
leave
push
test
mov
jmp
mov
cs
imul
jge
jl
inc
pop
pop
mov
rorl
pusha
adc
pop
inc
push
xor
xor
mov
daa
cmpsb
and
sbb
sbb
movsb
mov
sahf
and
mov
dec
or
lahf
insb
enter
ss
subl
pop
test
popa
and
jl
pop
inc
adc
adc
jp
jne
cmpsb
in
inc
mov
mov
cmp
mov
xchg
mov
sbb
jg
test
rclb
jnp
push
iret
into
int3
dec
leave
push
mov
and
cmpsl
icebp
cmp
idivl
outsb
push
mov
and
jcxz
sub
inc
popf
xlat
int
adc
xchg
in
leave
inc
jbe
mov
xchg
xor
daa
lock
push
sbb
sbb
push
rclb
enter
ret
shrl
sbb
sub
icebp
jo
adc
mov
popf
gs
dec
xchg
push
nop
fcompl
xchg
xor
adc
or
test
mov
mov
sub
sub
scas
sub
aas
push
mov
fcoms
cwtl
fbstp
fnstsw
aas
jle
jl
stos
jns
jne
out
jnp
sub
and
mov
sbb
les
jp
mov
test
mov
adc
sub
sub
and
adc
jae
pop
inc
mov
dec
test
xor
test
out
in
jbe
sub
in
popf
addr16
iret
and
iret
sub
jne
jo
pop
adc
out
cmpb
pop
and
sti
je
in
pop
fcoms
push
push
xchg
jecxz
enter
push
and
xchg
mov
add
lods
inc
cld
sahf
aam
ret
pop
or
outsl
out
xlat
out
jbe
stos
lret
mov
lahf
jl
push
fists
or
xchg
add
jbe
cmp
loope
push
pop
jmp
int3
or
push
mov
fcmovu
adc
into
mov
push
mov
loop
jns
outsl
shrl
out
sub
ja
in
and
lret
push
mov
push
adc
xchg
sbb
or
pop
adc
aas
jb
xor
outsb
push
xor
push
mov
mov
pop
adc
int3
mov
cmpsb
fisubrs
mov
sub
cmpsb
jle
std
ds
push
outsl
mov
lcall
pop
pop
aad
push
jnp
mov
je
push
pop
xchg
ljmp
cmc
sbb
fucomip
sbb
pop
mov
mov
sbb
pop
push
rclb
dec
xor
and
mov
and
outsl
dec
ja
cmp
repz
js
fs
pop
stc
cwtl
fidivs
xor
icebp
test
adc
ljmp
pop
cmp
cltd
mov
je
repnz
sbb
push
insb
mov
cmp
mov
cli
cs
xstore-rng
cmpsl
xchg
shrb
push
andb
cmp
jno
xor
loopne
dec
lods
daa
fsubs
pop
les
pop
aam
jnp
mov
icebp
rcrl
cltd
sbb
lcall
adc
xchg
xor
test
pop
cwtl
test
push
mov
mov
enter
or
and
push
shll
int
stos
dec
jcxz
push
repz
nop
push
dec
sbb
aad
xor
jae
enter
mov
cmp
jns
mov
xor
mov
sbbb
rcrl
pextrw
pop
inc
daa
lret
outsb
and
shl
mov
arpl
mov
loopne
pop
mov
mov
out
sub
or
gs
inc
std
add
mov
xchg
cs
and
mov
daa
jmp
fwait
add
aaa
dec
rcll
pop
inc
into
adc
inc
leave
ds
jnp
cmc
inc
sub
push
lock
pop
xlat
mov
dec
dec
dec
popa
fnstenv
lea
dec
loop
push
test
xor
pop
add
ret
push
push
ss
stos
and
cmp
movsb
and
pop
xchg
sub
dec
dec
leave
mov
jnp
inc
inc
mov
xor
jb
mov
imul
lret
enter
or
lea
jmp
out
out
out
push
push
mov
std
rorl
xor
sti
xchg
add
mov
jl
sahf
sbb
add
fcompl
lock
push
int
mov
and
inc
leave
lret
cmp
jnp
sbb
aad
divl
push
rcrb
dec
int3
cmpsb
and
lcall
jno
mov
mov
xchg
daa
inc
arpl
imulb
jnp
xor
lock
dec
mov
sub
aad
negb
mov
test
xor
inc
sarb
and
mov
pop
out
or
imul
fbld
aas
jecxz
fimull
xchg
xchg
adc
adcl
or
aaa
add
xchg
scas
xchg
xor
test
sbb
mov
and
mov
inc
les
push
xorb
mov
jno
lods
mov
cs
push
cltd
lcall
clc
mov
or
pop
cli
movsb
jns
mov
stos
xor
cmpsb
daa
adc
sbb
int
push
rclb
shlb
dec
mov
js
lret
lret
push
jae
jmp
leave
jmp
pop
pop
fadd
popf
jnp
pop
mov
add
lret
xchg
add
jns
repz
push
repnz
dec
stos
lock
bound
ret
aad
mov
pusha
js
fcoms
mov
xor
ret
cld
dec
stos
mov
and
mov
or
or
push
addr16
test
les
push
mov
jmp
nop
adc
sbb
test
pop
cli
and
pop
mov
mov
xor
xchg
or
cmpsl
popa
inc
push
fcomps
orl
dec
inc
das
or
clc
mov
sbb
in
insl
push
push
loopne
mov
pop
cltd
pop
pop
seto
mov
sbb
mov
das
pop
cmp
cltd
mov
fwait
dec
mov
loop
mov
inc
loope
mov
rcrb
sub
movl
pop
movsb
mov
mov
insl
push
fidivrs
sbb
rolb
sti
xchg
sarb
xlat
dec
mov
push
test
or
andb
test
cmpsl
sub
push
mov
mov
fwait
add
icebp
xor
push
rol
mov
or
roll
shr
cli
jns
cwtl
dec
iret
lods
out
lods
inc
jmp
add
mov
pop
ret
adc
dec
mov
lret
inc
cli
cmp
xchg
mov
jne
scas
lods
sub
mov
push
fistpl
ficoms
push
ret
ret
jp
pop
cmp
fisubl
inc
stc
idivl
pop
inc
dec
sub
sub
push
scas
sub
arpl
popa
fadds
xchg
adc
or
addl
jge
mov
xor
mov
jmp
sub
je
pop
fimull
dec
dec
int3
aaa
mov
jno
mov
cmp
cs
divl
xor
push
lods
sub
loope
popa
inc
and
xchg
sub
jo
je
push
movl
lahf
pop
cli
jne
scas
sub
adc
and
mov
pushf
fcmovu
sbb
rclb
ret
dec
mov
push
ja
inc
jle
mov
out
fbld
imul
das
movsl
loope
pop
popa
out
sti
sbb
pop
scas
adc
nop
fistpl
incl
insl
jmp
ret
mov
daa
adc
sahf
cmp
pop
in
xchg
push
sbb
jnp
mov
jnp
and
inc
les
imul
cmc
sbb
in
insl
pop
cmp
movsb
sub
lahf
adc
xchg
mov
iret
push
out
insl
mov
mov
js
mov
xor
sbb
xchg
sbb
xor
stos
loopne
rclb
rcrl
dec
mov
ret
scas
add
mov
push
int
repz
mov
adc
lods
lcall
xor
sbb
push
adc
mov
and
sbb
pop
jne
rcll
lods
and
leave
std
into
mov
pusha
inc
sarb
jge
fdiv
mov
insl
rcr
in
out
movsb
andl
rcrl
push
jnp
int3
inc
pop
addb
gs
mov
and
lods
in
lret
xor
sbb
and
push
add
ret
int
stos
or
mov
fdivp
xlat
ret
cld
cli
es
inc
popf
loope
out
xor
jl
rorb
in
fs
push
jbe
push
outsb
jmp
mov
add
cmp
scas
lcall
sub
jg
fimuls
dec
xor
aaa
xor
sahf
gs
and
mov
daa
jmp
inc
repz
mov
jae
or
lods
mov
gs
push
ffreep
mov
xchg
xchg
ret
ret
rorl
inc
add
or
push
je
xor
xchg
sti
mov
jae
mov
or
or
sti
cmp
push
in
sub
imul
jmp
xchg
push
jb
dec
orb
loope
cwtl
in
clc
fbstp
out
mov
mov
inc
lods
cmp
xor
sub
sahf
cmpsb
ret
fs
jnp
popf
cli
sbb
dec
push
icebp
adc
loope
fidivs
mov
inc
adc
addps
mov
jo
push
jmp
mov
add
cmc
addb
fdivrl
stos
xchg
jne
popf
nop
fildll
and
cltd
or
adc
pop
cmp
jmp
mov
jbe
and
divb
ss
loop
mov
mov
rorb
aam
sbb
cmp
add
xchg
mov
sub
xchg
test
jmp
in
pop
lods
mov
pushf
adc
xor
inc
mov
sub
aaa
jno
mov
imul
fisubrs
jae
jg
inc
cmp
xchg
adc
push
rol
mov
aad
add
push
push
in
mov
mov
test
icebp
cmp
and
pushf
flds
add
pop
inc
push
push
int
mov
xchg
arpl
jl
clc
mov
je
in
mov
push
cltd
cli
loope
popa
inc
dec
and
clc
add
dec
sub
or
js
mov
xor
xchg
and
scas
sub
push
push
push
pop
fwait
test
dec
mov
int3
dec
xor
std
fiadds
test
pop
aaa
xchg
imul
pusha
pop
mov
dec
add
mov
adc
notl
add
mov
fnstenv
icebp
and
and
or
icebp
aad
push
sarb
xchg
insl
or
sub
dec
aad
cld
hlt
or
ljmp
je
or
test
fcompl
inc
inc
lret
jae
aad
mov
test
and
lret
test
daa
mov
outsl
imul
mov
fistpll
push
mov
dec
lret
das
mov
test
cli
idivb
sub
jo
push
fistps
add
push
cltd
xchg
push
xchg
adc
nop
mov
mov
ret
jle
ss
pop
cmpsb
rcrl
push
adc
inc
rorl
mov
pop
mov
add
inc
cmp
jo
cli
jns
ss
stc
in
pop
pop
rcll
jo
and
fbld
xor
adc
jg
mov
cmc
mov
ret
ret
out
pop
push
inc
cmp
xchg
in
jnp
xchg
xor
aaa
sub
xchg
imul
xchg
and
adc
dec
dec
or
das
negb
dec
cld
movsl
jnp
mov
sub
aad
out
gs
dec
dec
dec
leave
mov
mov
nop
push
mov
push
pop
stos
sub
aas
cmp
mov
mov
xor
sub
or
aas
sbb
cmpsl
mov
add
mulb
cmpsb
jp
cmpsl
icebp
lods
inc
stc
imull
push
pop
pop
push
fcoml
in
and
push
aad
mov
xchg
xchg
adc
and
sub
popf
outsb
stc
fidivrs
xor
xor
repnz
fisubrl
mov
add
imul
cmpb
push
sbb
jle
dec
nop
sub
cwtl
cmpsl
add
mov
jns
pop
and
inc
and
pop
mov
cmp
leave
pop
in
or
aad
dec
sbb
mov
inc
mov
fnstsw
xor
xchg
mov
imul
daa
mov
arpl
aam
iret
lock
aaa
push
adc
scas
test
in
add
jb
mov
jo
rcl
cmpb
fbld
adc
adc
int
or
or
add
mov
cmp
mov
xchg
stos
pushf
and
mov
popa
fisttpl
rcll
ret
inc
push
lret
leave
xor
jg
mov
fwait
es
dec
jmp
stos
pop
gs
push
fbld
pop
rorl
adc
push
xor
push
outsb
leave
inc
jb
mov
ja
lods
sub
sub
mov
cs
lcall
int
aaa
xor
inc
cmpsl
add
xor
jns
je
jmp
outsb
xchg
ljmp
filds
popf
lret
xchg
push
xchg
xlat
ljmp
mov
insl
mov
mov
sti
js
mov
lods
sub
mov
mov
testb
push
into
mov
push
ja
movsl
jb
data16
jbe
jmp
insb
push
shl
outsl
int3
popl
dec
dec
inc
ret
push
mov
adc
mov
mov
mov
push
mov
xor
push
lea
xchg
adc
in
lods
mov
lret
xchg
neg
sbb
mov
or
inc
es
out
repz
mov
jnp
push
and
daa
add
fucom
push
ret
pop
mov
xchg
xchg
adc
pop
lret
pop
add
cmpl
mov
or
mov
jmp
sti
sahf
sahf
pop
fwait
pop
daa
add
mov
into
int3
test
or
inc
inc
shlb
mov
jns
hlt
lods
jbe
sub
pop
pop
call
cmc
movsb
inc
imul
mov
adc
or
xchg
fwait
ss
cmp
lds
out
insb
inc
mov
test
inc
pop
push
push
adc
xchg
push
push
or
lahf
cmc
bound
movsl
push
xor
popa
inc
insb
les
pushf
mov
adc
shll
add
mov
ljmp
stos
sub
scas
or
sbb
into
ret
daa
aad
xchg
repz
vphaddwq
das
rorl
sbb
lea
dec
push
leave
repz
into
add
dec
and
sbb
gs
or
cmpb
mov
cmp
daa
sub
out
pop
add
cmc
add
add
dec
ret
mov
dec
rolb
jo
inc
js
cmp
negl
into
mov
push
dec
add
pop
adc
xchg
in
lds
jmp
mov
mov
scas
and
pop
sub
movsb
pop
and
test
lcall
int
enter
add
stos
sbb
mov
add
or
jno
das
push
lock
dec
fsubl
and
sbb
fistps
dec
nop
std
int
mov
aas
jmp
sbb
mov
out
and
sti
sbb
fadds
or
int3
mov
shlb
arpl
lea
jbe
jne
jo
mov
loopne
jcxz
dec
popa
fsub
lcall
xor
iret
push
mov
xchg
cmp
mov
bound
mov
scas
cmpsl
xor
ret
sbbb
inc
rclb
aaa
int3
test
iret
aad
mov
divb
sahf
mov
in
fildll
out
daa
dec
pushf
in
pop
int3
stc
ret
popf
xchg
xchg
xchg
sarb
mov
dec
and
xchg
mov
rcll
cltd
add
mov
flds
rclb
lock
jbe
addr16
je
xchg
sti
aaa
inc
jns
mov
add
jecxz
test
mov
cwtl
pushf
negl
sti
sti
cli
ret
push
or
fwait
cmp
jge
das
lods
sub
lock
and
ficompl
aad
cmp
call
pop
jge
jp
inc
mov
icebp
sbb
fdivrp
ljmp
dec
adc
ficomps
pop
mov
or
test
stc
add
and
or
mov
insb
pop
push
dec
adc
add
sbb
push
cmp
aam
cmc
movsb
inc
or
icebp
movsb
xor
jae
mov
dec
push
mov
and
addl
sarl
adc
jl
imul
andl
add
and
imul
pop
xor
mov
pop
and
xor
leave
dec
push
shl
hlt
and
cwtl
ljmp
daa
shlb
addr16
sub
adc
push
mov
jnp
lret
addr16
and
sbb
icebp
aad
sub
and
mov
or
dec
lret
cli
mov
xor
mov
sahf
fldenv
insb
push
mov
sub
inc
inc
or
and
push
xor
dec
dec
or
mov
sub
mov
push
jne
dec
cmpsb
movsb
mov
inc
dec
cmp
push
rcl
pop
nop
ss
leave
dec
mov
std
jg
ss
ds
jae
dec
outsb
es
stos
mov
cmpsl
mov
pop
fcoml
fwait
mov
sbb
cmpsl
mov
add
loope
pop
inc
jg
test
aaa
mov
jne
scas
sub
or
pop
or
aaa
aam
push
testl
or
mov
jg
scas
sub
fucom
shrb
or
shrl
mov
sbb
orb
or
frstor
xor
mov
sub
add
movsl
loope
inc
aad
rcll
add
or
rolb
sti
inc
imul
out
outsl
mov
packuswb
lret
dec
pop
lcall
adc
xchg
decl
cmpb
aaa
push
xchg
and
sub
addr16
lods
loope
xchg
and
and
inc
test
xchg
aam
jbe
imul
in
int
jmp
sbb
push
iret
jbe
mov
stc
inc
fsubp
add
xor
cmp
loope
push
pop
jmp
fistpl
xchg
fisubl
mov
add
cs
pop
sub
movsl
fxch
iret
jmp
xchg
push
sub
dec
push
notl
mov
mov
jne
jno
xchg
cltd
mov
dec
mov
scas
hlt
outsl
adc
mov
sbbl
xlat
aad
xchg
icebp
mov
out
les
rcr
pop
jl
outsl
jno
ja
sahf
xor
fldenv
pop
call
rcrl
jl
mov
inc
fsub
call
test
aas
push
push
jnp
push
sub
stos
push
mov
pushf
pop
test
cmc
add
mov
js
roll
aas
mov
out
iret
outsl
rcrl
out
fs
mov
rcrb
aaa
out
jne
sti
shrl
push
jmp
mov
test
mov
scas
sbb
jo
aam
mov
mov
sbb
leave
dec
ja
mov
push
sbb
and
aad
repnz
xor
mov
scas
clc
jg
mov
adc
iret
dec
test
mov
aas
mov
bound
lea
insl
out
mov
mov
pop
ds
dec
mov
or
rolb
shl
jns
sbb
in
insl
push
scas
leave
xchg
dec
test
std
xchg
inc
popf
testl
jle
subl
std
js
xor
scas
test
ljmp
flds
dec
pop
pop
push
push
xchg
xor
andb
inc
stos
es
jle
jbe
cs
mov
push
inc
filds
inc
fistpl
fcoms
mov
mov
out
insl
mov
mov
sti
cwtl
movsb
sbb
xchg
movsb
xchg
out
mov
mov
add
pop
xor
aam
ret
fnop
lret
leave
mov
pop
mov
push
xor
jns
cli
hlt
pop
out
outsb
insl
jmp
fs
stc
ja
cltd
rorl
cs
adc
aam
add
jno
adc
mov
stos
jae
lds
fcmove
mov
xlat
fiaddl
ror
dec
mov
iret
mov
xor
das
jae
pop
hlt
pop
jae
mov
jmp
push
mov
pop
xchg
push
dec
mov
icebp
adc
add
mov
push
inc
daa
mov
ficompl
cmp
jnp
subl
mov
pusha
cmp
pop
fdivrs
shrl
dec
int
inc
pop
push
enter
int3
test
sahf
ljmp
inc
rcrl
pop
adc
and
fisubl
mov
inc
or
push
subl
sub
cwtl
jmp
fwait
pop
orb
push
push
adc
mov
mov
mov
dec
or
js
hlt
jae
jno
sbb
push
pop
adc
push
inc
adc
mov
mov
lods
fnstsw
cmp
mov
cmp
mov
je
sbbb
push
push
sbb
jg
dec
dec
add
or
in
fwait
jnp
cmp
mov
push
push
arpl
das
mov
pop
adc
sahf
test
xor
loopne
mov
mov
push
push
shlb
sbb
dec
adc
pop
loop
and
sbb
add
cwtl
push
rcl
push
adc
leave
dec
xor
in
pop
cld
mov
jae
out
into
push
pop
pusha
insl
arpl
push
dec
popf
xchg
push
inc
nop
ja
sbb
insl
jbe
xchg
xchg
std
cmp
daa
mov
leave
mov
in
popf
mov
add
out
xor
aad
cli
sub
les
mov
jge
xchg
and
jo
in
fs
pop
sbb
xchg
mov
mov
sub
mov
mov
test
mov
jb,pn
lods
xchg
xchg
nop
inc
pop
mov
fbstp
push
push
rolb
and
or
inc
std
mov
add
sahf
fwait
mov
in
pop
in
imul
call
pop
cltd
xchg
mov
adc
lret
out
out
js
jne
fildll
mov
jb
insl
cmpsl
es
pop
popf
pop
ficompl
push
rclb
add
mov
fisubrs
push
cld
mov
jae
int3
das
dec
push
gs
int3
arpl
push
sbb
pop
imul
dec
addl
aas
rcr
popa
imul
xor
jg
or
out
and
pop
pop
inc
sbb
cmc
dec
dec
int3
adc
pop
mov
xchg
movsb
cmp
out
push
rcll
sub
loop
and
xchg
mov
adc
or
lds
inc
mov
mov
cmc
push
jae
mov
movsb
mov
cmp
sbb
adc
sub
clc
arpl
jbe
cmp
in
cmpsb
fs
arpl
pushf
xchg
pop
xchg
jmp
sarl
sub
addb
mov
xlat
mov
xlat
push
mov
in
jmp
arpl
pop
pop
fcomp
in
push
push
int
adc
insb
and
jp
jbe
aad
out
outsb
jmp
or
fs
and
fcompl
ret
lret
pop
sti
push
mov
leave
push
cmp
lods
cmp
aas
cmc
jb
pop
sub
or
cmp
sbb
aas
mov
test
jo
cmpb
idivl
jo
inc
es
sub
out
pop
fcomps
pop
sbb
adc
inc
lcall
mov
incb
mov
out
int3
sub
enter
ljmp
ror
dec
cmpsb
inc
ds
dec
inc
ret
or
movsb
and
cmc
jb
mov
repz
push
dec
xchg
pop
cltd
fnstcw
push
dec
mov
dec
ret
addb
stc
jbe
cmp
outsb
cmpsb
daa
mov
sbb
fistpl
cmp
rorb
mov
jecxz
cmp
out
jns
pop
imul
inc
subb
fiadds
mov
adc
add
out
jmp
cmp
in
xor
push
jae
leave
daa
cmpsb
and
sahf
pushf
pop
jnp
leave
mov
int3
dec
rcrb
and
jge
es
sbb
xor
addr16
lret
loopne
cltd
pop
mov
nop
icebp
adc
dec
adc
mov
mov
mov
lods
sub
sahf
cmpsb
and
dec
pop
mov
push
rclb
or
test
ret
mov
out
iret
cmp
test
mov
scas
pmulhuw
bound
pusha
jg
loope
movsl
cmp
push
push
repnz
test
lret
lahf
cmp
mov
mov
jmp
hlt
jno
sub
adc
pusha
jmp
pop
fdivrs
dec
loop
push
dec
xchg
dec
nop
or
sub
std
jge
jnp
mov
outsl
jmp
mov
arpl
ret
int
leave
sbb
adc
or
movb
cmp
xor
cmpsb
cmpsb
and
pop
pushf
ficompl
mov
test
mov
mov
std
mov
jb
jo
pushw
call
paddusw
fidivrl
sbb
lcall
call
aas
aas
mov
inc
dec
scas
mov
call
scas
mov
cmc
pop
fstps
fcoml
pop
dec
push
int
lret
ret
les
jecxz
std
jl
fcmovnb
cmp
outsb
push
fisttps
mov
rorb
push
sbb
stos
adc
mov
je
add
jmp
popa
aas
insl
imul
sub
mov
test
movsb
or
js
ficompl
sbb
sbb
dec
int3
dec
rcrl
add
inc
inc
std
cld
jnp
mov
outsb
push
xor
int3
pop
inc
pop
and
push
iret
and
mov
outsb
mov
cwtl
cmp
push
bound
pop
addl
movsl
cmp
push
rclb
ret
dec
enter
mov
imull
lret
push
aad
addr16
jg
into
decb
in
icebp
lea
cmc
or
sahf
xor
stos
jge
fdivl
mov
xor
jbe
clc
adc
or
fs
loopne
or
adc
inc
lods
mov
das
inc
push
pop
hlt
fwait
in
in
outsl
jmp
or
hlt
bound
fstpl
fcmove
xchg
adc
mov
xchg
pop
loop
out
sarb
cmp
xchg
jb
and
clc
mov
arpl
outsl
dec
rcll
push
ljmp
xor
sub
jns
scas
jle
mov
push
jmp
pusha
loop
adc
cltd
sbb
or
fcoms
mov
mov
icebp
add
fwait
mov
push
xor
mov
daa
pop
xor
cmpsb
std
sti
push
mov
sbb
push
push
jmp
int
int3
std
nop
roll
rorb
pop
mull
xor
jo
imul
shl
fistpl
xchg
adc
test
addl
popa
add
xchg
mov
xor
mov
pushf
test
xchg
outsb
mov
pop
fcoml
int3
push
push
int
inc
imul
movb
jbe
clc
jns
out
int3
popa
pop
loop
jmp
call
sbb
cltd
sbb
mov
je
sub
or
xchg
jp
xchg
scas
xor
mov
and
mov
js
push
rcll
mov
outsb
or
rol
rcl
mov
inc
mov
out
insl
dec
inc
and
rorb
fbld
sbb
jecxz
xchg
adc
or
call
mov
xchg
lods
pop
push
hlt
outsl
mov
push
fstps
sbb
call
inc
rol
enter
clc
jg
sti
mov
enter
in
jae
jmp
mov
test
popa
popa
fldl
data16
enter
xchg
jnp
mov
test
test
jns
scas
stc
jge
xor
sarb
xchg
loop
jmp
mov
in
push
rclb
jmp
mov
mov
cmp
je
repnz
jmp
fsubrl
mov
inc
popf
xlat
mov
adc
xchg
dec
lds
cs
cmp
cmpsl
lods
sub
xchg
out
imul
mov
pop
ficompl
jbe
adc
dec
mov
cmc
inc
inc
shlb
cli
inc
or
outsl
jmp
push
aam
in
dec
mov
int3
pop
xchg
adc
sets
push
add
clc
xchg
inc
cld
das
mov
xor
cmc
jb
cmpsl
sub
mov
int3
push
push
roll
mov
stc
stos
enter
ljmp
push
cld
mov
leave
callw
pop
fidivrl
les
jg
push
insl
xchg
jle
outsb
cmp
aas
sarl
aaa
mov
rorb
mov
lods
in
lret
xor
jge
dec
add
fs
mov
rclb
xor
inc
scas
cs
leave
and
fwait
jnp
cmp
mov
imul
jle
shll
xor
adc
mov
decl
bound
xor
addr16
mov
cmp
pushf
mov
popf
and
pop
ds
mov
iret
dec
xchg
push
sub
inc
sub
and
jmp
and
xchg
push
adc
cmpsl
fldt
addr16
mov
sbb
xchg
push
iret
roll
jo
les
cs
ss
divl
loope
cmp
and
loopne
cmpsb
mov
push
adc
dec
leave
movl
std
jg
mov
push
fdiv
and
adc
jmp
sub
out
lcall
jecxz
pusha
fadds
adc
adc
lret
je
add
aas
mov
xchg
adc
sub
jmp
mov
fistps
jb
push
sarb
dec
xor
sbb
sti
jp
jns
cli
bnd
das
into
jmp
sbb
sub
inc
decb
inc
xchg
nop
adc
xchg
iret
dec
and
xor
mov
jnp
dec
lods
sub
xchg
cmpsl
arpl
add
into
call
adcb
and
jb
jl
lods
out
aam
jne
mov
jmp
jmp
bound
lahf
subb
mov
adc
inc
or
xchg
out
dec
ret
sbb
mov
mov
scas
loopne
xchg
popf
pop
fwait
pop
orb
aam
adc
ret
enter
mov
sbb
cld
mov
jae
pop
arpl
imul
sub
in
cmpsl
and
pop
fcompl
inc
inc
or
xchg
xchg
adc
cmc
rorb
xchg
test
cli
test
mov
popa
cmp
push
movsl
and
mov
inc
dec
int
int3
or
leave
or
shlb
neg
cs
xor
mov
popf
insl
adc
cltd
sbb
mov
inc
clc
in
push
dec
lds
bound
push
cmp
in
inc
cmpsb
movsb
push
repnz
sbb
test
push
int
int3
test
iret
xor
cmp
cmc
pop
and
xchg
push
lods
mov
ret
rcll
push
lods
xchg
dec
or
xchg
dec
jbe
aaa
mov
hlt
ljmp
jp
and
aas
pushf
orb
aam
ds
out
mov
or
enter
orl
ftst
int
insb
ljmp
push
pusha
pop
cltd
mov
aam
mov
cmpsb
xor
scas
jecxz
sbb
and
pop
rorl
mov
cmp
xor
sub
dec
dec
popa
fs
mov
sbb
testl
call
mov
out
icebp
adc
add
add
push
inc
daa
xchg
cmp
cmp
aas
jbe
mov
cs
movsl
test
das
fldl
pop
mov
iret
pop
popl
enter
es
div
jbe
aad
pop
aaa
scas
and
push
aas
pop
fstpl
pusha
int3
sbb
xchg
jp
add
xchg
mov
ds
mov
scas
loopne
sub
add
push
roll
cmp
jl
dec
leave
mov
dec
or
fdivrp
jg
es
shll
sahf
pop
mov
or
addr16
fwait
in
imul
xlat
es
nop
pmaddwd
dec
mov
jl
repnz
xchg
sbb
loop
test
lods
scas
outsb
dec
mov
imul
push
push
aad
aad
cmp
xchg
ljmp
leave
rorl
push
cli
add
pop
loop
call
jne
sub
inc
rcrl
lea
in
dec
ret
cmp
sbb
xor
and
out
pop
ficompl
mov
dec
int3
xor
orl
jl
sbb
stos
aam
es
lret
fs
xchg
and
ficomps
pushf
stos
adc
fucomip
jmp
int
jle
add
mov
xor
jo
fisubs
mov
mov
lock
push
int
xor
ret
and
je
jge
div
fdivs
mov
push
mov
fs
popf
adc
sbb
pop
jns
sti
fcoms
or
mov
rorb
ficoml
sub
sbb
push
mov
jne
push
sarl
dec
leave
or
mov
movsb
mov
icebp
sbb
imul
in
imul
movsb
mov
mov
cli
mov
aas
cltd
cmp
cmpsb
adc
dec
xor
inc
mov
dec
ljmp
adc
leave
dec
xor
mov
mov
mov
out
fsubs
call
jb
mov
ror
inc
xchg
lock
mov
pusha
orl
lods
cs
cs
into
mov
ljmp
iret
add
aad
mov
int3
dec
xor
leave
rorl
popf
cld
cmpb
hlt
jae
in
push
mov
add
lods
pusha
ficomps
int
notl
mov
jno
flds
addl
or
xor
jo
clc
and
mov
mov
outsl
iret
push
int
inc
mov
inc
test
int3
push
sbbb
imul
scas
sub
loop
loopne
fstpl
sbb
les
adc
xchg
inc
adc
xchg
pop
cmp
icebp
xor
mov
lods
imul
add
shlb
cmp
fcoms
lea
jge
dec
mov
xchg
push
jecxz
out
scas
dec
xor
pop
or
rcrb
mov
adc
pusha
subl
jp
sub
xor
ljmp
cmp
dec
push
iret
mov
add
xchg
std
jg
jl
cmc
sub
iret
push
jb
arpl
jecxz
imul
cmp
fcompl
inc
inc
or
adc
dec
mov
mov
push
loope
iret
fistl
adc
sbb
pop
popf
test
xchg
add
ds
movb
mov
jnp
cmp
pop
dec
push
adc
and
inc
xchg
pop
push
sub
jmp
jnp
add
aaa
xor
and
enter
daa
cwtl
popf
pusha
xchg
popf
fstpt
fiaddl
xor
inc
iret
add
mov
movsb
and
outsb
fcmovbe
shrl
mov
cmpsb
and
sbb
int3
adc
imul
add
jl
mov
mov
or
scas
cs
xchg
test
lret
addl
adc
fimull
jg
jne
idiv
jnp
sbb
xor
xor
pop
cmpsb
in
or
sti
dec
inc
adc
cwtl
cltd
sbb
xadd
test
jge
lods
repz
mov
aas
mov
mov
xor
xchg
bound
scas
in
add
xchg
pop
pop
mov
rcrl
adc
inc
mov
test
jbe
xor
dec
jmp
loopne
fs
arpl
jne
cmp
dec
in
arpl
lock
loopne
mov
outsb
sub
fsubrp
push
ss
sbb
push
jo,pt
ror
dec
dec
add
cli
jle
sti
jp
leave
cmc
scas
inc
es
dec
jmp
rcrb
pusha
in
and
in
mov
adc
or
mov
jecxz
andl
lock
or
sbb
cld
popf
pop
cwtl
int3
push
push
int
cmp
add
inc
scas
movsl
jl
mov
xlat
jne
cld
cmpsb
scas
into
insb
xor
dec
cmpsb
and
xchg
lret
je
adc
dec
ret
mov
pop
xor
mov
addr16
push
xlat
sub
or
fisttpl
dec
outsb
iret
int3
dec
mov
mov
cs
je
add
movsl
jno
and
call
lcall
sbb
xchg
xchg
pop
push
int
mov
addl
mov
mov
jnp
xchg
sub
stos
fldl
push
mov
sbb
mov
xchg
jbe
mov
mov
mov
mov
pop
je
jae
outsb
xchg
imul
aam
arpl
lahf
andb
cli
adc
jg
or
sbb
push
movsb
xchg
scas
jbe
daa
pusha
sub
or
bound
adc
iret
mov
and
movsl
test
sbb
repz
push
outsl
push
pusha
out
in
es
aad
ret
fwait
xlat
cmc
nop
nop
jnp
enter
add
cmp
mov
xor
out
imul
rcll
pop
push
emms
inc
cs
int3
dec
mov
mov
dec
lods
lock
add
fwait
jae
aam
dec
push
gs
dec
sub
dec
mov
hlt
adc
add
les
call
aaa
mov
jmp
push
jne
lea
cld
add
push
aam
icebp
pop
xchg
push
sub
inc
sub
sbb
fldt
out
jo
fstps
jne
xchg
in
out
inc
cmova
nop
lea
xchg
push
scas
adc
push
test
jge
mov
jns
adc
scas
or
add
in
or
cmp
lcall
testb
mov
jmp
divb
ljmp
push
ficomps
fdivl
nop
cltd
adc
insb
xchg
jbe
pop
stc
fidivrs
adc
loop
or
mov
sbbb
rolb
dec
add
std
add
imul
insl
jo
out
xchg
or
insl
cltd
sbb
mov
adc
int
and
in
in
xor
cmp
mov
loope
lods
xchg
xchg
cmpsl
xor
jge
cmp
pop
mov
xor
inc
movsb
ror
adc
ret
jl
cmc
mov
jo
jle
push
mov
fs
cltd
sbb
fs
sbb
mov
add
jmp
adc
popa
jno
into
arpl
sub
pop
cmp
leave
lret
push
iret
fsubrl
leave
dec
enter
mov
mov
out
divb
adc
mov
pop
popf
jno
push
pop
jno
pusha
mov
stc
pop
adc
lds
dec
addb
popf
cmp
mov
insl
lods
das
mov
es
repz
pop
test
pop
cmp
or
mov
cltd
cmpsl
test
jg
cli
jp
jbe
imul
adc
jg
xchg
push
xchg
dec
ds
aad
jo
mov
outsb
add
jecxz
ds
mov
push
cmp
sub
and
dec
dec
push
aam
mov
js
inc
inc
aas
rol
push
cmp
jns
sbb
cltd
imul
adcb
inc
inc
pop
pop
notl
adc
int
stos
add
mov
mov
nop
xchg
cs
and
mov
mov
fcmovne
xchg
sub
int
test
xor
xchg
sti
pop
sbb
jl
lock
das
push
hlt
lods
sub
loop
popa
xchg
out
xchg
sbb
add
mov
jae
xor
aas
out
mov
stos
xchg
xor
sbb
xchg
add
psubsb
push
mov
xchg
push
dec
lret
push
iret
adc
cmp
inc
cmp
sarb
movsl
out
mov
mov
sahf
jle
lahf
add
xchg
adc
or
into
push
jo
mov
inc
and
xchg
xchg
sub
bound
pop
aad
or
mov
sub
or
rorl
jl
jnp
aaa
lock
icebp
jae
outsl
xor
in
sub
mov
pop
stc
cwtl
pop
xchg
icebp
mov
xchg
jbe
mov
scas
push
hlt
outsl
dec
test
cmpsb
sbb
addb
adcl
aad
sbb
mov
and
roll
test
pop
js
jbe
pop
fnstenv
jmp
inc
in
fcmovnu
pop
lods
and
clc
orl
imul
shll
mov
pop
jns
shll
adc
loop
and
mov
jp
push
sarb
dec
movb
pushf
xchg
cli
jp
and
out
xor
dec
popa
fcomps
notb
dec
push
in
cmpb
aaa
mov
jmp
call
data16
pop
fstps
or
add
dec
invd
out
inc
shlb
mov
pop
stc
fldcw
mov
mov
sahf
cltd
xchg
rcrb
xchg
add
mov
jo
jecxz
jno
insb
inc
mov
stos
xor
xor
jo
daa
movsb
mov
adc
pop
aad
mov
dec
or
inc
inc
jg
cld
and
shr
jne
sahf
pop
mov
insb
out
addr16
fwait
jecxz
imul
aaa
jle
pop
iret
add
or
or
xor
cltd
mov
mov
mov
push
cmpsl
sahf
and
cld
fcomp
fcomps
dec
inc
dec
dec
dec
int3
lret
pushf
jg
add
das
mov
pop
hlt
sahf
fldenv
jmp
scas
sub
bound
and
push
xchg
dec
sbb
push
or
cmp
cmp
sarb
mov
scas
push
mov
xchg
mov
and
pop
push
sbb
mov
inc
mov
cmp
jnp
cmc
inc
pop
loope
lock
cs
es
in
pop
and
xchg
pop
movl
clc
addl
cld
movsl
xchg
mov
icebp
and
lods
sub
jb
xchg
or
sahf
xlat
pushf
fcmovu
sbb
push
add
xchg
ret
xor
jns
stos
cmp
fistpll
fsubl
fmull
inc
xchg
cwtl
sub
mov
or
or
fs
xor
cmpsl
xchg
mov
lea
pop
mov
xchg
ds
rcl
iret
mov
movb
push
sbbb
cli
jnp
xor
lods
je
xor
push
les
push
fcompl
decb
inc
or
lret
mov
pop
enter
loopne
sbb
lcall
cmpsl
es
xor
rorb
lret
dec
into
adc
adc
jnp
lret
out
jo
mov
mov
jnp
jecxz
fdivl
sbbl
stos
mov
arpl
int3
mov
aaa
push
cmp
cmc
xchg
dec
filds
push
and
not
push
aam
xchg
lods
jp
inc
inc
into
mov
repz
mov
aad
das
dec
loope
outsl
aaa
and
mov
xlat
in
nop
pmaddwd
dec
sbb
fistpll
mov
jae
icebp
lods
sub
mov
loope
pop
fstps
test
cwtl
push
cmp
filds
dec
inc
les
aas
int3
idivl
sub
fs
fs
test
arpl
xchg
inc
dec
xchg
jp
jae
or
lret
sub
test
fcompl
jno
mov
sub
xchg
scas
mov
and
fbld
or
sub
sbb
mov
jle
sub
mov
popa
cmp
mov
mov
push
lods
imull
jmp
cmpsb
mov
sbb
cwtl
pop
or
adc
cmp
out
hlt
ret
or
xor
or
cmp
pop
out
enter
ficompl
push
dec
cmp
mov
ljmp
jle
idivl
aam
jb
xchg
lods
mov
jecxz
arpl
pusha
adc
pop
sbb
mov
mov
int3
sub
mov
cmp
jb
sub
mov
sub
push
pop
fcoms
push
int
cmp
movb
jne
std
jl
push
js
hlt
and
sub
lods
lret
std
mov
lods
push
notb
rorb
push
test
mov
mov
lods
sub
and
rcrl
sbb
add
jecxz
into
dec
dec
aam
pop
movsl
inc
or
cltd
mov
and
cmc
inc
or
shl
mov
push
shrb
popa
inc
shrb
sti
jnp
fwait
aad
push
nop
pcmpeqb
inc
mov
cmpb
inc
aam
aaa
mov
jns
add
lods
sub
cmp
ljmp
fcomp
push
lcall
dec
dec
cmp
sub
pop
repz
mov
icebp
mov
push
pushf
dec
pop
xor
ficomps
cmp
mov
or
rorl
cmp
add
out
mov
xor
comiss
sub
sbb
push
push
sarb
mov
or
inc
inc
orb
cmc
mov
out
jo
scas
xor
push
loopne
fstl
ror
adc
jae
dec
cltd
cmpsl
xor
out
in
inc
pop
pop
mov
fpatan
or
pop
mov
mov
pop
aad
or
dec
jne
mov
adc
cmp
cmpsl
and
iret
outsl
pop
mov
bound
inc
inc
jl
ret
sub
repz
nop
mov
push
jo
xchg
inc
pusha
aas
cmp
pop
mov
ret
mov
or
sbb
shll
xchg
mov
mov
sub
and
mov
and
pop
sbb
xchg
jl
jmp
scas
popa
xchg
push
inc
pusha
mov
mov
xchg
lea
add
mov
sub
sbbb
adc
push
or
inc
ds
popf
int
cmp
jnp
inc
push
shrl
push
outsl
es
cmc
or
jmp
int
outsb
mov
adc
mov
add
sbb
push
jle
jmp
sbb
mov
ret
iret
mov
xor
fcomip
mov
andb
sub
sbb
adc
int3
ljmp
pop
pop
pop
cltd
dec
mov
nop
mov
push
jo
ja
pusha
aas
cmp
pop
mov
ret
mov
xchg
sbb
mov
cltd
out
daa
inc
inc
insb
mov
mov
arpl
push
lock
cwtl
and
iretw
mov
popf
lcall
add
xchg
jl
std
dec
insb
xchg
inc
pusha
mov
mov
mov
test
js
sbbb
xchg
mov
or
inc
ds
popf
int
cmp
jnp
jl
shll
push
outsl
es
inc
or
sahf
jle
sbb
xchg
pop
sbb
jo
testl
fs
mov
xchg
nop
cs
lahf
imul
rolb
jmp
jnp
fprem1
or
and
mov
aad
insb
xor
icebp
stos
jge
jp
sub
in
insl
rolb
push
jns
hlt
xchg
mov
sub
add
aas
mov
pop
mov
fnstenv
mov
scas
push
and
mov
fiaddl
xor
mov
ret
shr
lea
xchg
mov
jb
sbb
push
ss
lahf
inc
xchg
push
jl
adc
mov
or
jp
call
idiv
sbb
in
outsb
push
sub
data16
jl
mov
and
mov
ror
add
xor
push
jne
jb
jno
jmp
pusha
pop
fcompl
inc
jl
xchg
std
adc
shrl
xchg
push
cmp
cmpsb
outsb
mov
xchg
xor
ret
push
sub
fwait
loope
and
sbb
scas
and
push
scas
dec
add
movsb
call
jmp
pushf
jnp
jbe
jne
jle
dec
jmp
push
inc
cs
pop
stc
cwtl
xchg
addb
lock
pushf
add
je
loop
mov
xchg
scas
lods
pop
loopne
ja
pusha
add
ret
or
cmp
dec
dec
jb
pop
movsl
and
cmpsl
push
inc
cmp
hlt
fisubs
mov
mov
popa
or
imul
shll
addr16
add
cmp
jns
mov
push
movswl
in
push
sub
add
xchg
es
cmpsl
lahf
xchg
rorb
mov
mov
ret
imul
jo
mov
push
jecxz
incb
sbb
or
insl
or
in
mov
mov
addr16
adc
insb
and
lahf
sub
sbb
fimull
mov
lods
sub
xchg
incb
lahf
jl
fs
fsts
add
lret
ljmp
pop
dec
scas
pop
adc
outsl
mov
ficoml
inc
out
mov
cltd
cmp
inc
xchg
jb
cs
pop
mov
mov
mov
push
mov
iret
mov
enter
cli
mov
loope
xlat
jne
pop
int3
sti
out
lret
imul
fld
jns
rcrl
int
insl
dec
insb
xchg
loop
xchg
mov
mov
xchg
repz
jmp
or
fnsave
cmp
xchg
mov
xor
test
call
decb
ljmp
jo
out
loop
movsl
hlt
aas
or
js
nop
mov
roll
aad
add
cmp
popf
addr16
xchg
lea
pop
and
leave
xchg
stc
add
pop
and
dec
jbe
pop
stos
cmpsb
ret
adc
push
cld
cli
in
xchg
aam
pop
sub
dec
imul
fmulp
sub
xchg
mov
or
push
inc
add
sub
pop
sbb
scas
lods
push
xchg
mov
fstpt
fadd
or
or
inc
inc
outsl
mov
and
cld
cmpsb
or
ss
icebp
out
cltd
and
dec
imul
pusha
pop
or
cld
notl
outsl
mov
fs
push
add
fstpt
aaa
and
xchg
nop
cs
lods
push
xchg
aaa
add
adc
push
push
stc
add
xchg
mov
lods
fcmovbe
jne
add
adc
jo
inc
scas
push
fyl2xp1
xchg
xchg
mov
or
ficompl
sub
mov
xor
pop
popa
cmpsl
or
daa
adc
popa
add
ret
mov
mov
enter
inc
jo
js
mov
cmp
div
fisubs
mov
popa
or
pop
std
jnp
ret
iret
repnz
in
outsl
push
pop
jle
cmp
and
cwtl
adc
mov
test
xchg
mov
sar
add
xor
and
jg
mov
fdiv
mov
jmp
xchg
inc
jbe
and
fildll
pusha
fcomps
xchg
adc
pop
movsb
lret
movb
cmpb
or
js
mov
hlt
cs
lods
xchg
inc
data16
sbb
mov
data16
push
pop
nop
std
dec
leave
dec
mov
inc
inc
mov
push
sarl
push
outsl
jne
lea
fs
out
xor
jle
arpl
pop
xchg
adc
sub
insb
or
dec
popf
add
jp
cmp
jbe
xor
push
outsl
and
push
ss
adc
into
dec
leave
daa
push
dec
add
ret
aas
cld
jnp
aam
pop
xor
lock
test
jns
movsl
pop
cld
insl
aam
stc
cwtl
rorb
popa
arpl
mov
js
adc
clc
push
xchg
mov
sbb
loopne
xorb
pop
mov
and
mov
sub
incb
sbb
xchg
mov
iret
rol
into
insb
movsb
test
pusha
pop
out
push
dec
xchg
in
lods
push
aas
mov
pcmpgtw
loopne
into
xor
sbb
adc
sub
xchg
mov
mov
popf
xchg
int3
push
iret
dec
add
inc
in
xor
and
icebp
out
cltd
mov
push
ss
mov
int
cli
jbe
std
mov
mov
add
stc
sbb
aaa
and
xor
xlat
data16
mov
xchg
xor
cmc
sub
inc
scas
xchg
rolb
lahf
jl
fs
pop
push
icebp
sbb
jns
lret
ljmp
pop
dec
scas
jmp
js
adc
dec
insb
or
mov
gs
pop
jge
mov
and
scas
out
xchg
shl
andl
cwtl
cmp
movsl
scas
pop
decb
out
dec
sbb
lret
js
jg
sar
into
insb
movsb
outsl
ret
hlt
jbe
ret
pop
clc
mov
mov
lock
or
stos
jge
jmp
ret
xor
mov
sahf
sub
lret
out
adc
iret
jb
inc
or
mov
inc
rolb
mov
shlb
xchg
mov
inc
in
ret
inc
inc
fadd
sbb
nop
cli
lahf
pop
dec
ljmp
fistpll
imul
xor
mov
idivl
andl
xchg
mov
psubusw
int
iret
es
inc
adc
negl
lock
jmp
ljmp
mov
sbb
pop
fadds
adc
push
icebp
add
ja
bound
in
aas
notb
mov
js
loop
and
enter
mov
lea
dec
dec
jne
inc
test
ret
add
pushf
div
fildll
in
push
outsl
fdivrs
fs
push
push
inc
std
cltd
inc
sub
aam
xchg
nop
mov
or
push
mov
daa
outsb
ficompl
xchg
xor
ret
push
sub
push
lcall
push
sbb
fbstp
scas
int3
aaa
fstpt
insb
sbb
inc
mov
mov
jo
lcall
in
enter
sar
jo
into
jno
jmp
gs
cltd
sbb
in
mov
movsb
push
sub
mov
add
test
xor
pop
mov
dec
pop
popa
cmp
jg
inc
push
loope
lock
dec
imul
pop
pop
pop
cltd
sbb
pop
clc
jne
nop
cmp
call
jg
fistpll
imul
mov
es
add
jmp
sbb
push
mov
lods
out
or
inc
int
iret
movsl
je
inc
adc
pushf
negl
lock
jmp
ljmp
mov
clc
xchg
push
ljmp
or
jge
imul
jge
mov
divb
jle,pn
jmp
mov
and
cmp
mov
loope
lea
test
std
jl
lods
lds
jne
lcall
fldcw
inc
pop
push
int
jnp
xchg
std
mov
mov
add
sarl
cmp
and
aam
adc
mov
cmc
lcall
iret
mov
sub
mov
cmp
rclb
jmp
in
out
mov
out
ja
adc
lea
daa
push
xchg
repz
dec
cwtl
xchg
xor
lods
pop
loopne
mov
pusha
add
ret
xor
push
adc
iret
fisttps
int
jecxz
int3
jne
jl
pop
push
xor
lea
sub
loope
pusha
lahf
jl
pop
adc
mov
jge
call
sub
fcompl
jno
cs
fstl
push
mov
mov
mov
fdivp
mov
mov
mov
and
jl
or
ss
jne
pop
and
dec
call
ret
xchg
push
and
into
jno
into
inc
gs
xchg
sbb
in
orl
loopne
add
xchg
mov
enter
lods
stc
sub
cwtl
sbb
mov
cmp
ja
icebp
jo
jnp
dec
ljmp
xlat
repnz
cltd
cld
notl
inc
xchg
mov
or
js
add
sub
mov
xor
adc
scas
out
test
popa
xor
mov
pop
imul
enter
ret
sub
sub
xor
insl
ljmp
jns
jns
add
xchg
jg
dec
xchg
bound
orl
in
add
mov
and
pop
sub
and
sahf
or
pop
adc
enter
int
in
fldenv
sarb
xlat
hlt
cmp
call
pop
xor
pop
pop
xchg
xchg
adc
cmc
cmc
or
mov
push
cmp
mov
adc
insl
test
cmpsb
jmp
and
add
jl
into
mov
or
lods
cmpsl
cmpsl
sti
mov
jmp
jmp
jae
xchg
jg
fsubrl
dec
fs
jns
cli
xchg
sbb
xchg
adc
nop
inc
xor
push
outsb
mov
push
aaa
mov
sbb
test
xor
mov
adc
shrb
or
roll
and
neg
icebp
jb
mov
insb
out
addr16
dec
dec
popa
pop
loop
pop
adc
xchg
bound
or
rcrl
inc
pusha
mov
mov
out
xchg
shrd
push
shlb
popf
fcmovu
pop
add
ds
or
inc
repz
out
pop
fwait
jg
push
cli
mov
cmc
push
jne
shr
xor
push
out
pop
and
pop
les
sub
pop
fcoms
mov
add
test
fiaddl
lods
addr16
andl
fmuls
xchg
mov
mov
xor
enter
ret
sti
cmpsb
mov
in
addr16
insl
stos
mov
shr
inc
pop
pop
jae
hlt
loopne
ja
fcoms
or
jmp
subl
sti
js
xor
lods
xchg
xchg
xchg
cmpsl
loop
pop
mov
jle
xor
mov
and
test
mov
das
push
pop
push
jne
out
sbb
insb
push
lods
sub
loop
dec
inc
inc
sbb
adc
adc
jecxz
cmp
xchg
mov
sbb
das
lods
loopne
nop
or
pop
popf
pop
popa
fistpl
rcll
cmp
dec
push
int
jmp
inc
roll
mov
out
dec
inc
lods
lret
call
loopne
push
lcall
mov
dec
or
jmp
inc
das
aaa
mov
aam
mov
add
cmpsb
popa
mov
mov
push
push
rolb
mov
leave
mov
mov
add
cld
js
cmc
mov
jae
sbb
xchg
cli
clc
fwait
jge
push
insl
adc
or
dec
xchg
add
ja
addr16
mov
xor
fcomi
jb
sub
cmpsl
xchg
mov
mov
pop
fcomps
js
xchg
adc
lret
int3
dec
fisubrs
ret
out
jnp
mov
lahf
and
push
lret
popa
lea
mov
aad
mov
or
add
sbb
fidivrs
jo
cld
lods
test
mov
cmp
mov
iret
dec
mov
iret
pop
dec
aaa
mov
clc
inc
pushf
xor
imul
fs
fs
xchg
enter
jo
or
dec
sub
mov
mov
mov
adc
loope
xchg
xchg
es
jg
add
popa
xlat
fldenv
push
cmp
movl
es
leave
mov
jne
bound
call
repnz
faddp
mov
jp
sarb
mov
jbe
test
insl
call
cmp
aad
mov
shrl
cmpsl
loop
pop
and
add
mov
adc
lret
int3
dec
xor
ret
pusha
mov
jae
lock
ffreep
sbb
push
dec
cmpsl
and
fcmovnu
sbb
rcll
dec
mov
add
cmpb
popa
push
jae
cltd
daa
movsb
mov
aam
lret
sbb
lcall
int
or
cli
jnp
inc
shrb
mov
fwait
fwait
out
jnp
sub
call
gs
mov
popf
xlat
ret
adc
mov
or
or
adc
fidivrs
je
xor
pop
sbb
dec
imul
cli
bound
into
sbb
aam
in
cs
mov
test
mov
and
pop
aaa
iret
lea
int3
pop
inc
mov
pop
sbb
jmp
push
iret
mov
frstor
std
xchg
xchg
ja
pop
outsl
movsl
arpl
out
insb
push
cmpsb
and
aas
pushf
orb
aam
sbb
repz
ret
in
repnz
cmp
jns
sahf
mov
insl
rcr
cs
data16
sub
pop
lret
jae
ja
xchg
cmp
fs
mov
jmp
xor
notl
push
xchg
popf
test
das
xchg
lahf
lds
fdivl
push
mov
dec
das
jnp
in
rolb
pop
mov
icebp
cwtl
fidivs
lahf
imul
inc
mov
xchg
sti
push
cmp
jb
add
cmp
xor
std
jl
lods
pusha
stos
in
or
push
pushf
or
leave
aam
push
iret
adc
push
cmpsb
cwtl
in
inc
ret
inc
dec
sub
or
jne
mov
push
arpl
inc
xchg
cwtl
push
sbb
adc
fs
in
insb
fistpll
fidivs
test
lods
push
and
test
inc
fisttpll
add
aad
mov
int3
dec
xor
ret
inc
add
movsl
ds
adc
xlat
loope
and
xchg
xchg
sbb
lret
mov
out
mov
sub
jnp
sub
mov
push
in
pop
jbe
sbb
dec
scas
push
lods
inc
mov
mov
jae
and
mov
jmp
daa
xor
xchg
daa
inc
mov
cmp
je
enter
mov
adc
aam
mov
cmpsb
daa
push
push
fcomps
fwait
mov
aad
cmp
dec
ljmp
mov
jl
mov
jae
fsts
fcoml
adc
cltd
sbb
fwait
jbe
cli
push
iret
and
test
add
cmp
aad
ja
stc
stos
lods
sub
cmp
arpl
inc
fstps
mov
enter
into
aam
lods
dec
mov
inc
std
mov
clc
sahf
pop
mov
push
shl
outsl
rcrb
xchg
rcrb
adc
mov
imul
ret
mov
mov
add
lods
xchg
ficomps
lea
mov
sbb
aad
into
rorb
divb
les
sub
jg
int3
mov
add
outsl
and
dec
in
jmp
sahf
jle
fwait
adc
push
test
pop
shrl
outsb
jo
or
fidivrs
xor
mov
test
or
sahf
pop
adc
mov
jnp
into
adc
cs
std
jl
mov
jae
in
pop
push
pushf
push
lods
daa
jne
fstpl
ret
notl
sti
push
mov
dec
push
sub
ja
cmpl
sarb
xor
test
and
pop
fmuls
cmp
pop
jne
enter
or
and
jge
jb
pop
insl
negb
enter
popa
in
fistpl
xchg
sbb
push
mov
jnp
nop
xchg
inc
arpl
cmp
das
lods
mov
out
lret
and
pop
ds
dec
xchg
push
incl
les
ljmp
bound
repnz
jmp
sbb
sub
dec
in
hlt
adc
add
dec
sub
mov
and
mov
test
adc
sbbb
xchg
rcl
push
andb
sub
inc
mov
jbe
cs
movsl
inc
fnstenv
push
popa
mov
cwtl
fdivs
jge
lods
sub
leave
cmp
ss
lea
in
jbe
and
aad
leave
popf
sbb
cld
popf
pop
mov
les
xor
test
cwtl
nop
jnp
js
push
jmp
dec
ljmp
shlb
jg
xchg
arpl
mov
leave
aad
addl
add
loopne
mov
outsb
movsl
sub
mov
fcomps
pushf
cmp
iret
cmp
mov
mov
divl
cmp
rcl
addr16
hlt
mov
sbb
jo
cmc
or
inc
cmp
jns
in
stc
dec
scas
xor
xor
out
mov
sbb
btc
fidivrl
inc
inc
mov
xchg
idivb
and
stos
lret
ljmp
fstpl
adc
rcrl
dec
xchg
push
add
mov
xchg
cmp
js
push
cmp
test
fidivrl
and
pop
aad
hlt
mov
add
int3
test
inc
std
xor
movsl
aas
jbe
test
xor
out
insl
lods
mov
in
in
mov
sbb
pop
xchg
adc
nop
cltd
and
dec
les
cmp
bound
int
mov
gs
mov
mov
out
mov
push
rcll
iret
push
int3
dec
xor
ret
inc
ss
test
lock
je
push
jo
outsl
shll
dec
ja
jecxz
addr16
mov
lcall
adc
es
mov
lret
dec
fwait
addl
outsb
fcoms
adc
mov
or
sbb
mov
mov
add
and
mov
aam
jge
sub
rclb
ret
pop
and
inc
pushf
add
inc
xchg
int3
pop
jnp
xorb
push
leave
cmp
ja
push
pushf
frstor
daa
dec
push
scas
sub
mov
loopne
xor
into
notrack
cmp
mov
inc
outsl
inc
ret
sarl
div
xchg
sbb
jmp
rcll
adc
lahf
xor
xchg
rorl
add
js
or
and
out
mov
stos
in
mov
sbb
loopne
sub
sahf
sbb
rclb
or
mov
jg
inc
ret
add
dec
xor
test
cltd
xor
fs
inc
shrd
ss
loopne
mov
jno
nop
sbb
xchg
int
adc
mov
fildl
xor
and
push
jo
hlt
int3
movsb
cmpsl
cmpl
cwtl
xor
aad
cmp
dec
mov
inc
ret
add
inc
push
mov
pop
xor
stos
icebp
push
mov
pop
push
leave
ficomps
pop
xorl
insb
and
pop
pop
imul
xorb
and
daa
mov
sbb
push
adc
mov
sbb
mov
sub
dec
std
jle
movsl
pushf
mov
lods
rorb
sub
push
rcl
add
mov
or
xchg
adc
clc
enter
inc
pop
or
pop
nop
aad
pop
mulb
dec
mov
test
and
xchg
fwait
dec
dec
jl
iret
int
push
mov
les
jmp
inc
xorl
in
je
fstps
mov
loopne
and
rcrb
push
int
jo
adc
mov
in
cmp
es
mov
push
mov
xchg
add
sbb
xlat
and
inc
or
dec
int3
xor
cld
clc
jg
cmpsl
sbb
fcmovnbe
xchg
xor
mov
jmp
and
and
ret
push
xchg
pop
xor
pop
cli
add
into
cs
orl
hlt
cmpsl
xor
pop
sub
dec
loop
mov
iret
fidivrs
pop
push
testb
cmp
insl
mov
jge
jp
std
jle
cli
inc
push
icebp
mov
and
mov
imul
ficomps
int
sbb
rorl
xor
aas
ret
jle
mov
jno
mov
sub
and
sub
cmp
rclb
in
test
lret
pop
cmp
ds
dec
mov
cmp
outsb
pop
rorl
bound
push
aaa
cli
sbb
pop
xchg
adc
or
and
in
cmp
mov
jno
jecxz
add
rcrb
rorb
pop
jns
sub
mov
jle
leave
out
fwait
jnp
ret
push
jo
xchg
fwait
pop
or
test
lret
int3
leave
jbe
cmp
nop
sbb
dec
in
xchg
loop
stc
jb
imul
pop
in
lcall
add
or
mov
aad
aam
push
jge
dec
dec
add
dec
or
jb
popa
idivl
lahf
sahf
daa
jno
outsb
ljmp
inc
faddp
push
lcall
prefetchnta
ljmp
pop
mov
es
mov
xor
sbb
stos
add
mov
sbb
push
push
sarb
cmp
aaa
nop
or
inc
inc
shrl
jle
jnp
mov
out
pop
insl
hlt
or
sbb
sbb
jp
out
cmp
stc
orl
cmp
mov
repnz
fidivl
insl
movsl
es
mov
add
mov
mov
sub
xor
sarb
jno
jl
in
jbe
test
movsl
lock
in
bound
xchg
pop
xchg
xchg
dec
pop
fdiv
xorl
mov
cs
xchg
mov
xor
fisubrs
lcall
sub
pop
add
mov
iret
ror
add
push
xor
leave
fdiv
jecxz
and
jno
ljmp
pop
jg
shll
out
add
lea
cmc
mov
outsb
mov
popf
cmp
jg
ret
mov
mov
bound
popf
push
add
fs
aam
push
mov
dec
lret
xor
ret
stos
hlt
sbb
cli
cmp
jl
ss
outsb
in
push
push
push
fistps
inc
sbb
rolb
je
push
or
lea
into
mov
js
scas
mov
bound
enter
std
mov
cmp
int3
dec
mov
nop
insl
inc
ret
test
or
cmc
je
popf
out
jnp
fcmovne
ljmp
pop
shll
cld
mov
push
mov
int
pop
je
insl
call
cmp
aad
ja
ror
sub
test
in
lahf
mov
cld
cmp
push
xor
lods
repz
ret
aaa
pop
mov
out
negb
int
xor
dec
mov
pop
xchg
dec
cltd
aad
sahf
or
test
addl
mov
jne
scas
lods
sub
jo
mulb
pusha
push
pop
or
mov
mov
imul
movb
dec
xchg
or
jp
mov
insb
outsb
in
shr
jne
xchg
adc
and
inc
incb
jno
or
mov
int3
dec
push
mov
cmp
adc
dec
jno
mov
pop
scas
and
pop
xchg
sbbl
jle
mov
mov
sub
jne
adc
scas
mov
clc
aam
add
pop
mov
push
adc
add
xchg
lds
mov
mov
iret
scas
hlt
push
sub
mov
sbb
pop
jnp
leave
mov
dec
nop
test
mov
fisubl
fdiv
and
icebp
adc
outsl
sub
dec
and
sbb
insl
add
out
push
xchg
or
jno
jno
cmp
cmp
lock
popa
adc
fwait
adc
int3
nop
mov
xchg
inc
cmpsl
roll
sahf
jl
outsl
sbb
ljmp
sahf
outsb
mov
pop
jae
testl
lds
cmp
jne
loopne
aas
xor
lods
mov
xchg
loope
and
pop
pop
fsubs
adc
mov
aam
pop
movsl
inc
lods
rorb
sbb
mov
dec
cld
imul
out
aas
in
sub
pushf
lea
dec
sub
jp
ret
stos
cmp
adc
gs
pop
mov
sub
and
aad
aam
sbb
lods
dec
inc
repz
clc
mov
jle
fcomip
js
sub
lahf
push
outsl
bound
mov
inc
pusha
adc
dec
inc
jae
add
mov
xchg
push
je
add
jle
jbe
xorb
cs
push
bound
pop
fcomps
pop
xorb
dec
cmp
xor
cmp
es
push
dec
jmp
mov
arpl
push
mov
repnz
dec
dec
stc
ror
cmp
test
mov
add
adc
mov
hlt
repz
sub
push
cmp
cwtl
xchg
sub
cs
inc
and
not
mov
cmpsl
fidivl
ret
cmp
dec
jmp
cmc
fsts
arpl
out
arpl
jnp
mov
or
mov
jb
xor
scas
adc
xor
pop
xchg
push
mov
sbb
sub
aad
push
jne
insb
scas
mov
and
mov
mov
shl
shlb
in
cmpsb
fiadds
stc
cwtl
jmp
repz
dec
push
in
mov
push
mov
add
cmp
and
and
and
aaa
leave
mov
cmp
pop
daa
ret
sub
and
sti
mov
sub
and
jne
and
loopne
and
jl
sbb
adc
aad
cmp
iret
dec
inc
addl
cmp
insb
cmp
mov
sub
rcrw
cmpsb
mov
push
iret
dec
push
push
jecxz
enter
popf
cs
ret
orl
or
in
out
insl
scas
lret
insl
leave
sahf
inc
inc
pop
cld
ret
jl
out
lret
pop
jne
xchg
lock
add
jno
push
mov
mov
jne
lea
adc
adc
cmp
leave
sahf
pop
addl
mov
testb
sub
cmp
in
nop
insb
ljmp
cli
pop
xlat
xchg
rcrl
dec
adc
nop
inc
in
jl
xchg
mov
repz
cld
repnz
mov
jmp
push
sub
scas
cmpsl
popa
sub
iret
int
sbb
xchg
mull
xchg
cmp
xor
movb
scas
outsl
jae
imulb
push
roll
lret
push
pop
add
mov
xlat
xchg
rorl
dec
test
inc
add
cld
pop
cmc
cmpsb
xor
mov
in
xchg
pop
js
and
xchg
adc
add
ret
inc
lods
add
sub
fwait
in
jne
jmp
xor
iret
andl
pushf
push
inc
notb
inc
sbb
mov
sub
xor
jae
popa
imul
test
rcr
jecxz
pop
push
js
cwtl
ss
push
stos
adc
mov
xor
inc
stos
jb
fcomi
js
pop
stc
in
mov
jo
sub
cmpsl
loope
pop
negb
aad
notl
push
ja
mov
and
inc
mov
loopne
cs
jmp
add
mov
rol
mov
cmp
movb
rclb
cmpsl
jp
repnz
repnz
push
jo
xor
and
cmpsb
ret
mov
stos
adcl
dec
ljmp
int3
lcall
in
mov
outsb
test
sbb
sub
jp
imul
jg
fimuls
dec
and
inc
cmp
inc
inc
aas
enter
and
divl
inc
ss
out
cmpsb
jo
enter
loop
data16
pop
cwtl
pop
xchg
lea
aas
xchg
cmp
mov
repz
xchg
mov
sub
enter
sbb
fnstsw
pop
mov
add
mov
iret
leave
andl
aas
cs
int
sub
mov
shrb
jge
adc
pop
mov
lret
adc
mov
fs
mov
sub
gs
and
pop
data16
cwtl
loope
fisubrs
es
adc
inc
push
or
cmpsb
inc
ljmp
dec
mov
xchg
jg
jp
movsb
stos
hlt
fwait
sbb
lret
call
sbb
sbb
inc
xchg
dec
sbb
fistpll
shll
icebp
mov
call
xchg
and
and
inc
push
rcll
xor
mov
jns
cmc
pop
cmpsl
out
repnz
insl
daa
in
jo
and
fbld
ja
adc
xchg
adc
cmp
addl
mov
aaa
mov
loopne
adc
daa
mov
pushf
fstps
adc
dec
test
jle
jae
roll
icebp
xor
jp
shlb
iret
push
and
jecxz
imul
pushf
cld
sbb
aaa
scas
inc
icebp
lea
daa
jae
addr16
cmp
cmp
mov
movsb
loopne
sbb
cmpsb
or
popf
adc
fistps
int
push
rclb
aam
dec
add
les
sti
jp
sbb
sub
movsl
aas
shl
popf
popa
popa
call
pop
xchg
mov
nop
adc
dec
fmull
popa
xor
add
push
pop
mulb
adc
iret
cmpsb
pop
ficompl
adc
sbb
and
test
lods
add
aas
sahf
sarb
scas
jg
sbb
jns
push
stos
xchg
jb
leave
xchg
nop
cltd
sbb
jmp
adc
xchg
or
out
outsl
xor
aas
mov
test
or
cmp
sub
inc
and
pushf
pop
mov
adc
xor
add
lods
dec
mov
lret
gs
pusha
lock
jb
xor
mov
inc
js
push
jns
dec
add
icebp
clc
cmpb
lea
mov
pop
xlat
mov
xchg
mov
mov
sub
insb
fs
push
mov
sbb
dec
jnp
push
rclb
jb
xchg
out
mov
sub
int3
cmp
sub
arpl
pop
call
cltd
sbb
jne
adcl
or
scas
outsb
xor
data16
popa
sub
mov
dec
test
jbe
leave
ror
lret
leave
push
jg
and
xor
es
xor
imul
movsb
cld
jno
pop
cwtl
rcrl
movl
push
repnz
repz
cmp
cmp
outsb
mov
aaa
mov
cmpsl
loop
ljmp
pop
sbbl
mov
dec
aam
pop
daa
inc
add
ret
js
icebp
mov
insl
xor
sub
dec
pop
hlt
and
sub
mov
inc
cli
mov
jp
jle
mov
sub
stos
sub
mov
sbb
push
mov
sbb
mov
sub
fdivr
jnp
idivb
in
push
push
rcrb
and
sbb
push
pop
rorl
push
jbe
subl
insb
ss
ja
lods
sub
xchg
xchg
adc
imul
xlat
pop
xchg
push
dec
int
mov
sub
mov
std
jl
stc
ds
fsts
rcr
fcoms
jecxz
test
pop
push
aas
stc
popf
clc
pop
push
xchg
lret
inc
xchg
jmp
or
mov
fistpll
xor
mov
mov
pop
mov
sbb
inc
xchg
xchg
add
push
rcll
mov
iret
addr16
inc
mov
push
cmp
jns
lahf
sbb
sbb
push
leave
fs
cmpsb
and
sbb
jae
ja
mov
or
mov
loopne
pop
test
pop
das
lods
jb
cmpsl
jmp
scas
in
pop
or
imul
mov
jl
jp
and
sahf
imul
je
and
fcompl
push
test
das
or
jle
int3
dec
add
mov
bound
ja
stos
in
dec
or
pop
scas
call
popf
xchg
insb
dec
leave
mov
inc
sarb
daa
mov
out
xor
jmp
test
fbld
rclb
int3
jnp
jg
je
adc
add
test
insl
call
and
mov
xchg
lods
jno
or
in
and
cmp
ds
into
add
inc
inc
roll
cmpsl
outsl
inc
bound
cmp
mov
in
loop
push
dec
std
cltd
rorl
push
into
or
test
out
imul
xor
cmp
push
lods
in
jo
movsb
mov
mov
repz
into
xchg
push
mov
lods
sub
fucom
clc
jns
pop
jae
test
xor
push
aaa
push
rcrb
sub
pop
rorl
outsb
jo
mov
sub
aad
mov
or
in
cmpsl
cmpsb
movsb
xchg
insb
xchg
add
aad
or
xchg
adc
leave
dec
xor
imul
je
int
xor
jmp
ret
arpl
adc
cltd
sbb
xchg
fsts
lea
mov
jae
out
mov
inc
pop
cmp
ficoml
jb
test
push
add
jnp
pop
mov
sbb
mov
xor
notl
sarb
jns
xor
ss
out
insl
and
dec
dec
pop
fstpt
pop
pop
xchg
xchg
adc
mov
inc
loop
push
sbb
lods
lods
sub
mov
xchg
popf
sbb
pop
pop
cwtl
push
push
rclb
xor
out
inc
roll
int
mov
in
and
in
xchg
xor
pop
pop
adc
dec
sbb
mov
add
mov
fiaddl
push
es
icebp
bound
and
sahf
or
jns
cwtl
dec
nop
inc
fimull
mov
scas
sbb
sarb
sbb
jae
fnstenv
in
stos
pop
insl
and
xchg
lahf
rcll
int3
outsl
lds
push
or
inc
lea
cmpsl
mov
sti
cwtl
lods
sbb
xchg
mov
mov
xchg
flds
nop
lret
or
scas
leave
movsl
jmp
pop
push
jae
jnp
xor
sbb
jmp
shrb
test
fbld
push
arpl
cwtl
incb
clc
rorb
xchg
test
jl
out
jbe
mov
fldcw
lods
outsb
dec
mov
and
push
and
aad
shrb
pop
or
cmpsl
dec
add
inc
push
xchg
icebp
cli
jp
sub
daa
push
icebp
pop
loop
or
pushf
sub
lcall
adc
xchg
add
daa
xchg
shll
cmp
loop
push
mov
daa
movsb
and
sbb
into
nop
repz
aam
xchg
adc
leave
dec
movl
ret
sti
mov
jmp
pop
hlt
jae
xchg
jge
stos
call
into
popa
ljmp
xlat
push
nop
push
lret
push
mov
movb
je
loop
aas
shlb
lods
jecxz
out
imul
mov
pop
mov
push
mov
push
jle
movb
dec
movsl
sti
aaa
inc
jns
cli
imul
inc
test
pop
ror
data16
mov
cmc
adc
nop
or
push
cmpb
add
mov
je
insl
jmp
mov
fisubl
das
mov
lret
sub
aam
inc
mov
xchg
rolb
cli
sub
icebp
jo
mov
sbb
cmp
mov
and
jmp
cmp
test
fdivrl
das
push
mov
mov
icebp
arpl
daa
mov
xor
sbb
xor
push
scas
test
repz
jl
jnp
pop
sub
xor
push
jnp
inc
in
mov
sbb
cmp
jo
addl
mov
adc
xor
in
sbb
xchg
out
or
lods
xchg
fdivrl
adc
mov
pop
dec
cmp
add
into
ret
stos
mov
inc
js
mov
scas
sbb
jmp
dec
cwtl
jbe
outsl
movsl
inc
sub
jae
rep
xchg
jb
out
push
in
rcrb
mov
xchg
jge
js
xorl
push
mov
push
mov
sbb
jge
aad
mov
dec
mov
mov
stc
add
dec
inc
jl
movsb
sub
cmc
jne
out
test
gs
pop
mov
fcompl
cmp
sbb
push
scas
adc
dec
enter
mov
cmp
jbe
test
sub
push
pop
pop
fwait
or
rclb
inc
lret
mov
or
inc
ret
inc
imul
cmp
out
outsb
push
xor
xlat
arpl
push
fs
clc
xchg
push
mov
xchg
sub
jp
mulb
push
mov
loopne
add
hlt
and
push
pop
pop
fwait
test
sarb
outsl
fmull
int
mov
sbb
js
pop
sti
mov
push
adc
lcall
inc
icebp
xchg
dec
jecxz
jae
jns
aas
shll
push
inc
testl
nop
les
pop
es
loopne
jge
nop
pop
cmp
pop
call
addr16
dec
mov
leave
je
jo
xor
call
gs
inc
rcrl
jbe
add
or
jmp
sub
andl
test
adc
test
fstpl
daa
popa
dec
mov
cltd
xor
mov
push
aad
inc
sub
dec
mov
xchg
std
cmp
jb
lock
sub
sub
ret
xlat
push
sbb
dec
lock
jmp
jae
pop
movl
mov
cs
and
inc
test
out
lods
addr16
pop
pop
fadds
ds
stos
leave
hlt
movsb
jne
add
dec
and
pop
divl
aaa
scas
mov
int
and
cmp
push
je
lods
lods
lea
inc
adc
je
mov
cmp
cmc
aad
mov
push
out
insl
jns
mov
sbb
xchg
in
int
mov
push
inc
je
rolb
cmc
pop
jae
shr
jno
sub
jmp
popa
fnstsw
push
popa
push
iret
xchg
pop
popf
int
mov
dec
out
jb
xchg
mov
cmp
mov
and
push
iret
fdivrl
cli
mov
ljmp
inc
std
fiadds
mov
xor
push
popa
dec
dec
enter
pop
je
fcoms
mov
mov
ljmp
pop
and
jg
add
mov
push
sub
jno
or
in
sub
sbb
fimull
push
mov
inc
xor
enter
loop
cltd
or
sbb
xor
aad
pop
mov
push
mov
mov
cwtl
dec
mov
adc
nop
imul
jae
popa
aas
ret
jle
mov
mov
mov
scas
cs
popf
repz
cmpsb
and
jl
pop
fcomps
and
lret
loope
ret
inc
shlb
xor
imul
jo
loopne
inc
nop
cmp
push
ficoml
nop
adc
test
jne
arpl
sbb
scas
loope
sub
scas
movsb
cs
loopne
popf
loope
mov
scas
mov
mov
scas
mov
sbb
aas
bound
imul
cld
adc
fs
jns
and
sbb
ljmp
mov
mov
add
pop
xlat
mov
scas
jno
stos
gs
lret
mov
mov
cwtl
jae
sub
push
jecxz
addr16
test
jne
cmp
xor
dec
jb
insb
rcl
cs
ljmp
test
hlt
xchg
clc
sarl
idivl
lret
inc
out
xor
push
sub
repnz
in
shll
pop
popf
add
mov
cmp
sub
or
call
cmpl
push
lods
aad
sub
xchg
das
cmp
pop
pop
or
adc
cmpsl
and
jle
add
jecxz
pop
into
fnsave
lods
in
dec
bound
sbb
rcrb
and
xchg
mov
cmpsb
insl
jle
dec
inc
ret
mov
imul
pop
imul
push
insl
and
rcrb
fstpl
xchg
arpl
aam
xchg
push
jo
inc
mov
dec
mov
addr16
xor
popa
test
and
cwtl
in
pop
mov
or
adc
and
cmpsb
and
jo
lahf
shrl
dec
pop
loop
test
pop
cmc
adc
pop
stos
push
mov
iret
push
dec
std
test
jmp
js
scas
mov
sub
push
sbb
inc
popf
sbb
lcall
inc
into
lret
inc
sub
or
mov
shlb
sub
jmp
loop
dec
pop
popf
fsts
cltd
shl
jnp
incb
push
dec
clc
cwtl
mov
jae
xor
push
xchg
sub
mov
xchg
mov
xchg
dec
in
dec
into
dec
nop
add
push
jg
nop
add
frstor
je
in
outsl
out
insl
lods
mov
in
in
fneni(8087
pop
loope
cld
xchg
pop
mov
icebp
mov
cwtl
inc
cs
pop
jno
lock
mov
mov
aas
sbb
scas
outsb
movsl
cmpsl
loop
and
test
lcall
repnz
insl
lea
inc
popa
addl
xchg
mov
sub
jmp
lcall
inc
inc
inc
dec
xchg
call
or
mov
out
icebp
pop
mov
push
mov
xor
add
xor
and
mov
pop
aad
xchg
lds
sahf
or
sub
sbbl
jp
xor
aad
fldenv
jmp
stos
mov
cltd
inc
push
lret
push
std
pop
adc
iret
popl
xchg
lea
ret
or
out
in
xor
fnstcw
xchg
cs
mov
adc
sbbb
lock
mov
divb
movsb
mov
outsb
mov
push
lahf
cmp
cwtl
pushf
jbe
jg
stc
xor
mov
cltd
fdiv
stos
jg
ss
mov
out
outsb
mov
mov
inc
add
fwait
mov
lods
das
or
clc
ss
es
push
js
mov
js
push
jmp
int
fwait
jecxz
imul
scas
adc
xchg
lahf
addr16
mov
add
lods
lcall
pushf
dec
mov
loope
or
cwtl
mov
push
cmpsb
jmp
dec
dec
test
push
bound
mov
inc
icebp
icebp
test
ret
inc
inc
fcoms
inc
in
push
or
inc
seto
or
adc
cmp
ja
into
and
inc
or
pop
xlat
aad
adc
iret
dec
xchg
cs
xor
cmp
push
jns
test
sbb
cmc
je
add
jno
xor
cli
out
fs
jmp
popf
jle
push
cld
fcompl
pcmpeqb
xchg
in
lds
enter
pop
fyl2xp1
ss
jo
jns
push
sub
sub
add
cmp
push
pop
push
mov
xchg
adc
or
loopne
jg
mov
stos
fdiv
sbb
jmp
mov
push
nop
fwait
jno
and
xchg
adc
push
lods
or
test
push
and
pushf
aaa
mov
aam
jbe
lret
cmpsl
mov
pusha
and
cmp
push
sarb
mov
clc
cmpsl
inc
mov
pushf
sarb
cmp
cmp
out
mov
out
repz
dec
inc
nop
inc
sbb
stos
xchg
or
fbld
mov
je
jae
je
push
test
and
mov
mov
dec
dec
movl
cli
inc
dec
mov
icebp
push
dec
sub
push
jle
and
push
iret
sub
clc
in
call
cmp
aad
fstp
call
les
lds
cltd
cmc
push
push
shlb
dec
jnp
in
rolb
mov
jae
in
test
push
cwtl
pushf
mov
fimuls
inc
sbb
jg
repnz
push
andb
ret
pop
add
mov
loopne
out
jne
sbb
dec
dec
movsl
movsb
and
pop
jno
push
push
rcl
pop
mov
cli
add
inc
shrb
xor
jns
std
cmp
inc
out
insb
test
adc
xchg
pop
push
xor
aad
je
mov
jnp
in
add
jns
xor
das
xor
adc
fs
out
mov
daa
arpl
mov
xchg
push
xor
inc
sub
andl
jp
ret
sub
pop
test
push
or
ret
fldcw
mov
adc
push
into
xor
pushf
cmpsb
cmp
mov
xor
hlt
outsl
push
es
or
fsts
push
iret
mov
mov
es
or
ret
cmp
jns
jb
stos
cltd
mov
arpl
out
cwtl
cmpl
cmpsl
cmp
xchg
xchg
lea
icebp
js
push
mov
ss
wbinvd
shl
cltd
jbe
jmp
sbb
fiaddl
cmpsl
cmpsb
and
pop
loopne
inc
pop
mov
cmp
cmpsb
pop
jae
cmpsb
ljmp
repnz
sub
jecxz
arpl
cltd
sbb
rolb
rorb
lods
subb
pop
cli
in
mov
in
xchg
xchg
popf
mov
daa
mov
pop
fcomp
cmp
sub
mov
lret
xor
cmp
jecxz
inc
pop
loope
lock
cmpsb
adc
xchg
mov
ficomps
mov
push
adc
or
lock
xchg
lds
jbe
arpl
xor
fnsave
lock
xchg
andl
pop
aad
negb
mov
test
mov
xchg
inc
inc
sarb
and
mov
pop
out
or
out
sbb
popa
frstor
aas
jecxz
fidivrl
adcl
push
aas
mov
add
xchg
scas
cwtl
jb
imul
adc
fwait
and
cmp
pop
inc
mov
les
push
mov
jae
cs
fwait
outsb
notl
sub
test
sbb
mov
xchg
adc
adc
xchg
aas
or
mov
fsubrl
jmp
lods
cmp
mov
pop
pop
cmpsb
xchg
lret
sbb
xorb
decl
lods
inc
inc
ret
sub
push
push
jecxz
into
xchg
into
jg
stos
lret
ljmp
movsb
sub
nop
sub
shlb
lds
cmp
aas
cmc
imul
sub
sbb
cmpsl
lods
pop
mov
ficoml
aas
dec
cmp
push
jl
jns
and
inc
sub
imul
pop
popw
insb
lcall
jnp
push
test
addb
aaa
add
xchg
scas
repz
arpl
mov
pop
popf
sbb
fistps
inc
push
push
sarb
int
dec
dec
rcrb
filds
imul
push
and
sub
pop
je
sub
int3
loop
add
mov
xchg
xchg
adc
pop
popa
out
fbstp
inc
cmp
cld
push
aaa
aaa
mov
xor
ljmp
pop
cmpsb
inc
sbb
aad
outsl
inc
ror
dec
push
jmp
push
sarb
cli
adc
jae
xor
jmp
mov
jnp
jnp
jg
je
adc
dec
sahf
add
mov
andb
mov
mov
cmpsl
es
dec
push
sbbl
rorl
fwait
sbb
mov
sub
ret
sbb
inc
mov
jo
cltd
imul
fldenv
pusha
pop
in
mov
pop
adc
mov
or
addb
mov
data16
mov
movsb
into
mov
int
rcll
mov
ss
scas
or
add
mov
jnp
cmp
jns
sbb
inc
pop
xor
test
loopne
push
sub
cli
sbb
sub
push
ficoml
lea
ds
mov
or
pop
mov
push
loop
adc
xchg
popf
pop
fsts
xchg
dec
mov
in
movb
cmp
sti
jp
cltd
inc
je
jmp
jmp
pop
pop
fnstsw
push
sbb
adc
cmpsl
inc
or
inc
jbe
aas
xor
mov
icebp
loope
lods
sub
mov
pop
xchg
add
xchg
or
int3
dec
test
das
or
mov
cli
adc
jbe
jae
js
insl
jmp
daa
pusha
fstpl
loop
xchg
adc
inc
and
xchg
add
das
fnstsw
out
popa
imul
xor
sub
sahf
sub
dec
mov
dec
or
dec
xor
and
add
inc
movsb
push
cmc
je
sub
outsl
mov
pop
push
xchg
test
cmp
fstp
cltd
or
scas
xchg
adc
xchg
jns
jle
jb
cmp
xchg
inc
fwait
loope
cmp
sub
jae
icebp
sub
sub
add
leave
and
lock
aas
jmp
jns
inc
sub
dec
inc
cmp
pop
jae
outsb
mov
jg
in
xlat
js
ror
ret
nop
push
outsl
aas
or
ret
cmp
mov
out
popa
xor
adc
xchg
mov
cmp
ds
into
mov
push
and
sub
andb
fcmovnu
aaa
scas
push
jmp
aas
enter
adc
xchg
ss
push
shl
or
jle
add
dec
mov
pop
fstpl
mov
daa
adc
pop
aad
outsl
sti
ja
int3
adc
sbb
ja
xor
bnd
scas
into
jmp
scas
sub
loop
loopne
or
jl
inc
mov
test
adc
mov
xchg
outsb
dec
ret
cmp
pop
jnp
xchg
lods
sub
xchg
cmpsl
ret
mov
fstps
negl
dec
int3
xor
inc
shrl
pop
jbe
cs
sbb
addr16
adc
mov
sarb
mov
mov
mov
xchg
sbb
clc
xor
insl
arpl
test
jmp
fwait
adc
adc
jecxz
dec
or
jo
push
stos
test
and
jbe
cs
pop
mov
shrl
addr16
mov
lea
mov
lcall
outsb
cmp
cmp
dec
cmc
xchg
mov
push
and
jl
cmpsb
xchg
mov
pop
xorb
xor
out
int
dec
leave
jns
sub
movsb
out
test
adc
mov
shr
out
ror
lret
pop
pop
in
pop
js
push
push
adc
xchg
in
add
add
jle
loope
mov
out
dec
gs
push
sbb
cli
ficoms
mov
dec
aaa
inc
gs
loop
mov
cmc
cmp
out
push
xor
adc
pop
mov
int3
cwtl
jae
outsl
setae
or
mov
idivb
in
xor
xor
sub
sbb
push
pusha
add
jbe
mov
ficompl
mov
orl
sbb
cmc
push
mov
cmpsb
push
outsl
xor
push
in
jecxz
aam
rcr
cltd
sbb
sub
shlb
xchg
imul
cmp
sbb
xchg
stos
sub
and
push
push
jne
xchg
adc
leave
dec
das
jnp
cmp
stos
lock
js
cmc
je
add
push
outsl
rcrl
test
lcall
test
or
lret
arpl
lods
in
jnp
out
jge
xor
xor
insb
adc
movsb
and
fstps
pop
jne
rclb
scas
inc
movb
mov
jns
hlt
hlt
jl
mov
jmp
mov
arpl
int3
fsubl
cmc
xchg
aad
int
mov
xchg
outsb
fidivs
insl
push
jmp
pop
pop
sub
sub
and
sbb
pop
sub
push
aam
pop
sub
jb
insl
pop
jne
jle
divb
nop
movsl
pop
jb
sbb
mov
push
add
push
sbb
fildll
in
or
add
push
xchg
mov
xor
or
daa
and
push
fwait
and
cltd
adc
leave
dec
lret
movl
cmp
jnp
sbb
cmp
test
popa
popa
fs
and
aad
xchg
mov
or
pop
cmp
cmp
lods
sub
xchg
cmpsl
xor
andb
fadds
mov
sub
mov
iret
sub
mov
cmc
jns
pop
mov
insl
push
push
lods
sub
loop
popa
mov
pop
fsts
mov
mov
push
leave
addb
mov
mov
lcall
jmp
fwait
add
cltd
stc
push
push
shlb
dec
or
xchg
enter
jnp
push
inc
inc
daa
xlat
lock
frstor
dec
jl
adc
mov
sbb
or
cmpsl
mov
push
out
mov
ljmp
adc
push
ficoml
push
rcll
cmp
inc
mov
es
or
stc
aaa
mov
push
push
adc
sahf
sbb
push
fistps
cmp
mov
inc
lret
push
in
orb
fnstsw
xchg
mov
jb
sub
jmp
lds
add
ret
or
int
lods
stc
sub
and
stc
dec
aaa
sti
cmp
cs
movsl
jno
and
lds
jecxz
inc
pop
fisubs
adc
xor
test
inc
cmpsb
mov
in
xor
sub
and
push
push
fdivl
inc
cmp
ret
dec
enter
and
and
adc
xor
push
push
ret
lahf
leave
ds
xchg
inc
pop
int3
xor
sbb
mov
ja
addb
push
xor
not
sub
stos
adc
insl
out
mov
pop
das
push
push
roll
stos
mov
sbb
add
dec
test
call
fwait
mov
jmp
int
cmpsb
and
push
sbb
mov
jnp
mov
add
pushf
cmp
push
cvtps2pi
loop
ljmp
inc
pop
adc
sar
rcrb
mov
leave
xor
xchg
jb
inc
mov
jbe
mov
cmp
shrl
lahf
out
ret
pop
dec
mov
adc
or
mov
std
mov
adcl
in
in
add
pop
mov
sub
add
repnz
adc
rcrl
sub
add
ret
ds
fwait
dec
insb
mov
mov
insl
rcr
fsubs
mov
dec
in
hlt
xchg
clc
addl
add
lds
sub
sahf
fsubl
mov
pop
orb
test
dec
leave
jns
mov
mov
or
xor
adc
out
pop
gs
xchg
pop
cltd
fnstcw
jmp
dec
call
repnz
lcall
xor
lods
sub
imul
sub
cmp
cmp
jne
movl
es
mov
jbe
pop
idivl
push
loop
cmpsb
and
xchg
fs
into
lock
aas
pop
xchg
mov
pop
test
jg
scas
outsb
dec
xor
and
xchg
aad
push
mov
scas
dec
xor
rcrl
mov
sub
insl
testb
dec
cmpsl
and
fcmovnu
sbb
dec
aam
adc
add
lret
dec
lds
mov
mov
mov
out
and
sti
sub
fcoml
pop
or
shrb
das
mov
xor
push
xor
xor
cs
lret
push
mov
adc
jp
scas
sub
jbe
cmp
xchg
hlt
jno
test
sbb
iret
xchg
in
pop
aad
negb
adc
dec
dec
xor
mov
push
divl
mov
push
test
jmp
mov
lret
fs
push
inc
ficoms
xchg
cwtl
pop
and
leave
jo
ret
in
in
add
mov
sbb
pusha
xchg
sbb
mov
out
iret
lock
adc
sarb
stc
pop
dec
jne
pop
imulb
shrl
dec
mov
fsub
dec
icebp
rclb
xchg
xchg
test
push
sbb
add
mov
clc
adc
sub
xchg
xchg
xchg
popf
fnstcw
push
iret
int
scas
jp
mov
jle
ds
inc
cmp
jnp
mov
aad
sahf
ret
push
xor
cli
sbb
mov
js
add
pop
fs
xorl
cmp
mov
xor
cmpsb
sbb
sbb
into
fsubrs
aam
icebp
mov
mov
inc
rcrl
loope
sbb
inc
cmp
jae
and
and
mov
rol
pop
xchg
mov
dec
icebp
adc
xor
aam
icebp
gs
xor
xchg
gs
or
xchg
pushf
inc
mulb
mov
cmp
push
inc
rorb
dec
jle
adc
mov
push
jnp
daa
iret
adc
jmp
xor
pop
lods
loope
pusha
and
ffree
ret
lret
roll
aad
inc
or
test
push
daa
shll
cmp
cmp
adc
in
mov
movd
or
int
push
or
mov
xorb
das
push
lods
leave
fucomip
and
push
out
jnp
enter
jno
mov
cld
push
dec
in
mov
mov
adc
sub
adc
mov
pop
aad
mov
dec
mov
cld
rclb
xor
sub
mov
dec
push
popa
sub
js
pop
cltd
dec
loopne
stos
cmp
repnz
out
jae
lea
cmp
loopne
mov
popf
mov
cmpsb
and
sbb
mov
lds
int
int3
adc
xor
jmp
lods
hlt
jae
sub
xor
movsb
push
and
pop
fcompl
rcrl
outsl
xchg
adc
or
mov
jecxz
xchg
xor
xor
xor
adc
scas
cmc
bound
pop
pusha
fwait
and
dec
aam
push
adc
xchg
ds
in
ret
testl
bnd
psrad
jmp
xor
lret
mov
push
add
sbb
sarl
nop
and
sub
mov
lods
mov
cmp
push
xor
and
xor
pop
mov
ret
cmp
cli
imul
or
call
pop
inc
push
faddl
mov
adc
push
leave
jbe
test
mov
clc
sbb
cs
outsb
dec
xor
imul
aad
add
sbb
mov
add
leave
stos
ds
jnp
je
lods
inc
out
sub
idivb
imul
data16
mov
insl
mov
jle
xor
dec
ret
mov
test
inc
scas
outsb
dec
scas
out
imul
add
xchg
fwait
push
pop
and
jmp
outsl
lea
repz
inc
add
fwait
in
sbb
insl
inc
or
inc
pop
movsb
int3
lcall
xchg
adc
or
cltd
int3
imul
fwait
cmp
mov
cli
ja
lods
sub
sub
mov
pop
sub
cltd
movsl
fwait
pop
and
nop
pop
push
das
ret
xor
ljmp
mov
divb
cld
aam
dec
push
test
arpl
push
data16
adc
cltd
push
clc
jnp
lds
sbb
mov
shrl
stos
and
pop
adc
mov
dec
icebp
fs
push
iret
inc
mov
xor
inc
roll
aad
movsb
mov
jo
push
lea
in
pusha
ficomps
inc
xchg
adc
testl
add
mov
cmpl
sub
mov
xlat
lock
popf
and
xchg
or
mov
es
or
jbe
cmp
push
jnp
pop
fsubl
pushf
dec
mov
or
aas
imul
ret
jle
mov
aaa
popa
lcall
adc
jne
mov
ficompl
xchg
rclb
aaa
inc
sbb
enter
sbb
cli
jns
adc
xchg
cs
push
arpl
dec
inc
adc
scas
cwtl
pop
xlat
xchg
jg
xor
or
test
outsb
jl
inc
aad
cmp
jae
lods
sub
and
jle
ficompl
push
push
push
iret
xchg
adc
dec
mov
js
adc
jle
pop
std
mov
fwait
and
pop
xor
les
hlt
push
out
cmc
inc
sbb
in
xor
rclb
lods
leave
loopne
ds
jo
aaa
mov
mov
pop
stos
or
dec
ffree
cmp
push
push
rorl
cmpsl
cwtl
mov
les
ret
add
js
cmp
mov
js
lret
mov
pop
loope
jecxz
dec
xchg
ja
pop
cltd
pop
stc
xchg
enter
push
push
mov
outsb
mov
ret
jle
cmp
nop
cs
and
daa
addr16
mov
xchg
or
pop
leave
in
out
iret
cmp
sub
pop
mov
push
stc
lahf
stos
sbb
sub
pop
cmc
andb
ret
repz
andb
pop
pop
xor
dec
xchg
mov
push
jp
push
arpl
mov
mov
je
ss
test
cltd
and
push
push
enter
into
mov
push
into
test
inc
std
sub
imul
scas
mov
sub
shlb
jns
xchg
movsb
adc
inc
sbb
sbb
popa
aas
cmp
mov
cmc
lds
xchg
loopne
adcl
pop
popf
sbb
pop
adc
enter
dec
mov
iret
std
mov
mov
divl
adc
inc
fwait
lahf
inc
loop
jp
push
jl
xchg
push
arpl
mov
sti
adc
cmpl
push
add
and
xor
loope
fstps
aad
aam
adc
dec
nop
or
sub
mull
repz
cs
push
arpl
fistps
fsubl
inc
push
xchg
adc
ret
or
push
arpl
cmp
js
pop
cmp
sub
mov
add
fidivl
iret
push
into
add
nop
or
movsl
jb
xchg
js
mov
out
jo
das
push
lock
xor
fcompl
roll
xor
adc
or
sarl
mov
jo
jns
lea
mov
ds
sahf
sbb
aad
inc
jae
dec
int3
adc
xchg
sbb
jp
and
outsb
sub
pop
mov
and
fcompl
or
dec
adc
lea
mov
or
js
ds
aaa
mov
jmp
and
jl
sub
lods
pop
xchg
movsb
fidivrs
sub
lea
pop
add
mov
sti
jp
cltd
jle
repz
and
sbb
xchg
mov
arpl
fidivl
inc
cltd
aam
push
or
push
leave
incl
add
pand
mov
repz
test
frstor
cmpsb
and
out
pushf
fiaddl
das
xchg
adc
inc
dec
cmp
sub
jle
jle
movsl
xchg
and
insl
cmpsb
inc
lods
cmpsb
test
cmpsb
rcr
push
cmp
adc
dec
popa
jns
cs
or
mov
mov
mov
or
cmpsl
es
test
fnstenv
adcl
lret
lea
and
inc
es
or
jbe
adc
push
outsl
xchg
ja
pop
cltd
fnstcw
mov
rorl
arpl
loopne
sti
mov
icebp
mov
mov
fbld
xchg
insb
adc
inc
fstpl
ficompl
aad
incl
int3
dec
nop
mov
dec
movsb
lock
fwait
mov
outsb
jo
loopne
sub
jmp
sbb
or
add
add
insl
xchg
cmpsb
mov
aaa
mov
aaa
iret
and
lods
jecxz
sub
xchg
dec
jno
sbb
into
es
aam
sbb
xor
inc
mov
lock
cmc
jbe
xchg
inc
gs
jmp
xor
stos
cltd
sbb
pop
mov
dec
xchg
jp
push
arpl
mov
imul
out
mov
orb
cmpsl
inc
sbb
mov
imul
adcb
or
movb
inc
cmp
jp
xor
je
es
mov
mov
fs
and
lret
movsb
sbb
mov
mov
ret
cmp
lcall
xchg
xchg
lods
sub
and
insb
mov
push
sarb
inc
mov
add
jl
mov
fdivs
addr16
lods
mov
pop
adc
cwtl
pop
fsts
lea
mov
aas
ja
add
add
and
pop
mov
data16
scas
sub
inc
test
fldenv
xor
push
shlb
dec
daa
stos
cmp
mov
cmc
jbe
push
sub
insl
or
dec
dec
pop
sti
xor
pop
mov
hlt
jbe
aam
sti
push
test
insl
mov
dec
cmp
gs
aad
in
add
enter
cmpsl
lcall
insb
pop
fadds
hlt
mov
dec
leave
and
rol
jl
jnp
cmc
stos
jae
outsb
pop
fistps
imul
in
push
sbb
xchg
xchg
scas
dec
adc
pop
push
test
inc
and
std
imul
outsl
xor
movsb
and
push
fstps
pop
sbb
push
int
jmp
dec
mov
jg
lcall
movsb
mov
into
push
leave
in
sbb
popf
mov
xchg
xchg
adc
es
add
inc
push
fistpll
scas
je
cmp
mov
fildll
and
pop
aad
push
insl
lods
or
dec
out
and
cli
jl
and
jb
out
test
call
in
pop
fadd
rorl
push
mov
inc
dec
mov
aaa
jnp
mov
stos
sub
imul
pop
add
fldt
ret
mov
dec
leave
push
test
jl
sti
sbbb
mov
out
out
outsb
xor
jl
out
dec
test
lcall
adc
sbb
int3
push
addl
cmp
mov
jmp
je
pop
fwait
arpl
push
dec
int
aaa
xor
sub
and
jbe
mov
mov
fs
test
mov
jge
pop
fdiv
xchg
xchg
adc
cmpsb
push
or
cmpb
adc
adc
inc
arpl
adc
popf
sbb
pop
jns
nop
pop
divb
dec
dec
leave
dec
and
rolb
clc
jns
stos
fiaddl
lock
or
push
sbb
mov
pusha
lret
inc
push
xchg
icebp
inc
nop
lret
into
call
mov
aaa
mov
cmp
stos
sub
sub
loop
and
cmpsb
adc
fcoml
enter
xor
inc
sub
xorl
jp
xchg
mov
bnd
loop
add
es
push
fwait
cmp
adc
mov
lds
adc
stos
sub
pop
pop
xchg
and
sbb
test
cmc
add
push
into
dec
int3
nop
add
inc
roll
push
mov
mov
sub
pop
es
ljmp
push
lock
cld
sbb
cld
inc
sbb
push
addl
add
mov
mov
out
enter
es
test
fldenv
rcll
sub
inc
movb
xor
outsb
xchg
hlt
jae
jnp
fisttpl
pop
or
ret
fbld
sbb
xchg
scas
adc
cwtl
int3
inc
popa
mov
cld
xchg
ss
xor
push
in
jne
and
fcomps
js
or
aas
ret
leave
dec
inc
fistps
mov
mov
jbe
imul
out
fldcw
jle
arpl
cli
stos
dec
sbb
adc
lea
aas
jecxz
test
jle
mov
mov
lods
sub
jo
lods
mov
mov
mov
push
push
push
inc
jnp
adc
inc
add
cmp
divl
push
loop
push
sbb
and
add
into
ljmp
cmp
js
xor
cmpsb
or
cmp
fsts
xchg
lds
xor
add
call
dec
cmpsb
and
xchg
sbb
movl
je
adc
add
inc
push
cmp
mov
xor
push
int
mov
jbe
pop
popf
pop
rclb
int
movsb
dec
shrb
ja
inc
jbe
jg
sbb
cmpsl
lret
or
pusha
and
inc
popa
fstpl
pop
daa
jbe
xchg
lret
in
add
jmp
cmp
jg
mov
notb
ss
sub
add
adc
add
and
push
rclb
test
inc
mov
lret
mov
jnp
mov
adc
push
fwait
mov
arpl
fidivl
inc
cltd
push
pop
jbe
mov
aad
add
add
aad
cmp
xchg
mov
adc
rorl
pop
mov
sub
dec
leave
and
push
push
ds
ret
addl
into
insb
push
in
jecxz
notb
inc
fidivl
ror
push
icebp
loope
or
ret
sti
fistpll
ss
gs
lea
sub
stos
pop
loope
mov
test
sbb
push
mov
inc
faddp
inc
std
sbbb
cmp
jo
push
outsl
xor
push
scas
pop
fcompl
mov
pushf
inc
daa
xchg
mov
mov
add
cltd
cmpsl
movsb
xchg
out
add
aad
cltd
adc
int
int3
xor
orl
fiadds
push
xor
cli
leave
mull
filds
pop
sbb
lret
outsl
adc
sti
cmp
adc
push
hlt
outsl
sbb
fsubl
fcomps
js
enter
push
sub
sbb
jg
scas
jl
mov
cmp
jmp
xor
sub
sbb
and
sbb
xchg
add
lret
test
xchg
shll
xchg
or
sti
add
dec
xchg
loope
pop
adc
sbb
mov
sub
pop
or
jl
cmp
cmc
je
test
imul
mov
je
int
clc
aad
jl
mov
outsb
add
test
and
mov
pop
jae
scas
xchg
cmp
std
enter
pop
fwait
sbb
mov
pop
dec
sub
cmp
sub
dec
popf
fsincos
jp
inc
cmp
icebp
jo
sub
scas
sub
push
xor
leave
xchg
test
jo
nop
pcmpeqb
fsubrs
lock
and
aaa
mov
out
jg
sub
and
pusha
or
fcoms
sarl
ret
insl
aas
dec
leave
xor
icebp
or
jns
cwtl
aam
lods
and
sbb
test
sub
cli
cwtl
inc
adc
sbb
adc
or
mov
jo
daa
repz
lods
out
or
push
pop
fimuls
inc
mov
mov
or
pop
jl
outsl
in
test
jne
xchg
cld
lods
mov
out
jl
in
cmp
jne
fimuls
aad
jl
mov
jp
shl
add
xor
ret
mov
divl
sub
sub
pop
sbb
and
and
test
push
mov
cmp
daa
clc
testb
xchg
jbe
mov
stos
or
sub
popf
enter
dec
sbb
lea
pop
jle
int3
inc
jae
ds
ret
js
add
int3
scas
out
imul
insb
pop
aam
sbb
mov
sarb
lock
jae
hlt
arpl
ljmp
fstpl
cmp
aam
test
mov
mov
dec
aas
mov
mov
pop
sbb
fisubs
xchg
imul
push
mov
stos
xor
inc
les
movb
rolb
mov
clc
jns
xchg
stos
jae
outsb
adc
js
in
outsl
stc
inc
fadd
lea
adc
push
scas
mov
ss
icebp
mov
punpckhwd
lods
sub
shrb
and
std
popf
popa
pop
pop
repz
rclb
mov
inc
mov
lret
xchg
jnp
mov
pop
shr
push
fwait
cmpsl
mov
arpl
fidivl
inc
cltd
push
jno
or
idivb
shll
jp
mov
bound
hlt
xor
scas
sub
xchg
push
adc
sbb
pop
cltd
cmc
sbbb
adcb
jle
movsl
cmp
and
mov
push
outsl
jmp
sahf
and
in
sti
test
mov
testb
addr16
mov
cmp
sbb
testl
jns
popf
xchg
outsl
aaa
iret
dec
mov
inc
idivl
inc
std
sub
mov
and
dec
in
adc
push
cmp
pop
pop
push
jns
adc
lock
push
mov
jmp
mull
xor
or
and
fidivrs
and
cmp
push
iret
cmp
test
xchg
cmpps
fsubl
inc
cmp
xlat
icebp
jo
mov
cltd
lods
lods
arpl
int3
and
js
xchg
cld
inc
fldcw
cmp
addl
hlt
nop
aaa
int
ljmp
mov
sub
xchg
rcl
sqrtps
mov
dec
dec
mov
std
jle
pop
in
or
jae
sbb
icebp
mov
lods
arpl
dec
and
lods
outsb
dec
nop
jnp
aad
xor
xor
loop
scas
rcll
mov
adc
ret
mov
test
push
rorl
rolb
fsubrl
inc
jbe
test
jbe
imul
and
jecxz
sti
xlat
fstpl
lretw
jne
inc
mov
jmp
cmp
add
add
repnz
lret
sub
pop
lock
xchg
fs
sarb
and
jno
mov
test
pop
cs
jle
inc
movb
or
xchg
nop
fldenv
pushf
popa
push
loope
lahf
sub
pop
rcrl
mov
test
inc
rcr
aas
scas
je
cmp
push
lods
inc
test
and
xchg
imul
mov
loope
iret
enter
xor
mov
mov
jnp
movsb
cmp
test
call
push
leave
stos
std
cltd
int
es
pop
mov
mov
jge
push
in
ss
out
push
out
mov
stos
sub
out
add
aad
fs
push
int
mov
idivl
inc
std
sub
repnz
daa
in
insl
jmp
mov
fists
stos
cli
sbb
cli
rcll
push
cmp
lcall
xchg
mov
pop
bound
in
and
mov
push
mov
dec
cld
cwtl
lea
sub
pop
cmpsl
ret
xlat
jne
sbb
cmp
pop
scas
cs
dec
mov
cmpb
jl
mov
inc
push
add
push
nop
insb
mov
lods
arpl
mov
sbb
fcom
push
roll
pop
out
fisubrs
inc
ret
mov
popa
sub
enter
scas
hlt
jae
mov
leave
in
mov
xchg
xchg
sbb
and
icebp
lea
xchg
repnz
mov
aad
lock
mov
out
jecxz
jnp
test
and
sbb
flds
ret
dec
xchg
dec
leave
xor
add
jl
and
icebp
fs
jmp
push
sub
shrb
insb
inc
fcompl
dec
into
and
adc
dec
es
ret
mov
aas
mov
pop
mov
shl
lods
sub
sub
sbb
jns
out
into
dec
mov
call
and
jl
lods
sub
cmp
fsubrs
and
fmulp
int
daa
jbe
push
push
pop
lea
dec
cmpsl
hlt
or
adc
cmpb
in
in
cwtl
xor
push
jmp
xchg
scas
sub
and
mov
push
into
mov
push
into
test
movsb
inc
std
cmpsl
mov
or
imulb
mov
mov
sub
sarb
jns
xchg
sbb
lea
sub
cmovs
add
cltd
mov
mov
outsl
dec
push
scas
call
mov
dec
push
fcoml
cmp
jnp
arpl
sbb
inc
xchg
je,pn
call
cs
arpl
popa
inc
nop
sub
sbb
lea
mov
ret
test
popf
sti
mov
mov
mov
iret
mov
movsb
adc
push
out
mov
aad
mov
lea
enter
testb
jl
mov
adc
imul
inc
ficoms
sahf
and
sti
pop
int
push
push
jo
scas
int
aas
scas
je
cmp
mov
hlt
mov
test
sbb
jo
popf
iret
or
pop
aad
pop
jae
aad
xchg
sub
enter
nop
and
jb
add
js
mov
sahf
js
test
ljmp
pusha
xchg
cmc
movsb
sbb
cwtl
push
icebp
in
or
loop
xor
js
pop
mov
test
add
fadds
hlt
mov
dec
leave
xor
loope
mov
cli
jnp
cmp
dec
jmp
push
fwait
ds
arpl
les
inc
cltd
rcrb
or
hlt
sti
pushf
shlb
and
stc
push
loopne
jne
push
lods
sub
test
push
cli
data16
test
cmc
add
sub
cwtl
adc
push
jl
cmp
mov
outsl
jmp
pop
xor
cmpsb
test
pop
inc
pushf
mov
outsb
lea
push
shl
add
mov
mov
scas
sbb
jbe
mov
sbb
pop
jns
sbb
popa
mov
into
mov
ret
js
xchg
jle
mov
aaa
shl
outsl
fsubs
stos
aaa
dec
cbtw
std
sub
dec
push
cmp
ficoms
lock
call
cmpb
jle
gs
scas
cltd
loopne
testl
mov
test
sbb
push
iret
cmp
sbbl
mov
inc
stos
aas
sbb
inc
mov
pop
mov
cltd
pop
sub
lret
inc
dec
jb
nop
cli
sarl
xchg
sub
lcall
xchg
mov
pop
bound
ret
mov
mov
push
mov
dec
cld
cwtl
mov
sub
pop
cmpsl
ret
aam
icebp
sbb
push
mov
sub
arpl
shll
outsb
leave
adc
loope
in
ja
dec
pop
mov
mov
out
sti
lea
mov
sbb
mov
rcll
int3
add
sbb
sarb
mov
insb
inc
test
xor
cmc
scas
sub
popa
inc
jb
inc
pop
push
pop
ss
jbe
jp
aad
push
or
and
test
mov
repz
or
sbb
dec
std
rclb
outsl
popf
sub
inc
rolb
std
cmp
icebp
fs
insl
jmp
loop
dec
push
mov
cli
sbb
sti
push
sub
nop
leave
xor
sub
mov
xor
xchg
xor
andb
mov
aam
mov
mov
mov
mov
jmp
cmp
icebp
pop
xor
pop
icebp
lods
fwait
inc
fs
sarl
jl
or
sahf
xchg
adc
lods
cli
adc
popa
jecxz
add
fidivrs
scas
jo
xor
pop
icebp
int
mov
aaa
add
mov
aas
pushf
into
push
pop
push
aam
adc
cmp
mov
inc
ret
lods
mov
or
mov
nop
pop
jne
add
in
iret
test
icebp
and
xchg
inc
aam
sti
xchg
dec
jmp
or
fistpll
mov
jne
pop
mov
addl
bound
popf
push
popf
loopne
aad
xchg
icebp
mov
dec
xor
mov
jne
divl
adc
call
das
rcrb
and
xchg
rcll
xchg
iret
imul
xchg
clc
ja
arpl
cmp
push
fnstsw
jo
push
test
sbb
sahf
pop
mov
dec
push
rclb
mov
notl
sbb
lock
cmpsb
jb
push
xor
daa
ficomps
pushf
mov
jmp
stc
out
push
in
mov
inc
cmp
mov
test
xchg
add
aad
pop
jae
aad
mov
dec
mov
or
aas
divb
mov
pop
jne
rolb
data16
out
jle
jl
mov
pushf
adc
jge
cs
adc
loopne
cmpl
mov
outsl
dec
push
scas
call
sahf
sbb
jg
aaa
push
inc
push
pop
dec
int3
cmp
fiaddl
sti
mov
sub
adcb
xor
push
sub
shrb
pop
neg
pop
sbb
fimuls
and
adc
repnz
and
pop
cmp
add
enter
adc
inc
mov
pop
stos
mov
aad
lea
sahf
sbb
inc
lods
add
sub
jg
divb
sub
leave
imul
fistps
out
adc
adc
imul
gs
cmc
jge
scas
cs
mov
stos
je
and
jecxz
pushf
pop
cltd
cmc
sbbb
test
cmp
mov
jnp
movsb
cmp
inc
insb
ljmp
rcr
repz
mov
pop
iret
xchg
jecxz
or
jg
cmc
mov
test
mov
pop
repz
lcall
and
test
sbbl
sbb
push
mov
mov
push
ret
inc
inc
cmp
mov
xchg
jbe
imul
out
fldcw
mov
arpl
fstpl
int
and
xchg
push
cmp
lret
cmpsl
repnz
add
mov
insl
test
into
repnz
adc
pop
pop
adc
mov
pop
xor
loopne
dec
enter
lods
enter
jnp
cmc
scas
jge
pop
mov
das
in
push
mov
mov
dec
lcall
inc
dec
add
push
xor
mov
ss
js
test
push
out
and
xchg
sub
push
mov
js
pop
std
jle
mov
or
cmpsb
repnz
xchg
stc
movsb
pop
cltd
inc
fidivl
rcrl
mov
jp
push
loop
xor
js
pop
mov
test
jle
add
aad
xchg
icebp
mov
dec
mov
dec
xor
outsl
jno
hlt
jne
xor
fnstenv
push
jle
bound
push
xor
pop
adc
nop
leave
push
jnp
out
dec
lds
mov
aam
scas
cs
dec
xchg
imul
in
aam
out
into
dec
mov
call
aad
jl
xor
stos
addb
jo
mov
sub
ljmp
rcrb
fstps
push
xchg
jae
mov
adc
out
cld
lea
mov
mov
push
push
mov
add
sbb
ret
pop
sub
mov
out
sub
sub
test
pusha
lret
inc
pusha
fdivs
dec
adc
inc
aam
add
mov
cmp
cs
mov
fidivs
and
mov
sbb
pop
adc
into
int3
dec
mov
cmp
jnp
jl
es
in
outsl
jmp
hlt
pop
lret
mov
dec
pop
fimuls
hlt
adc
repnz
into
push
dec
pop
pop
jp
mov
mov
xor
adc
in
mov
movsb
imul
aad
rorl
lods
leave
mov
sub
mov
cld
jnp
mov
xor
es
daa
sub
fstpl
sbb
push
lea
dec
jecxz
add
ja
dec
pop
mov
xor
pop
cmc
jb
test
or
sbb
cld
cmpsl
pop
cwtl
fcmove
push
int
lods
shll
xchg
es
mov
negb
fisttpl
cs
arpl
popa
push
add
fcompl
cwtl
je
pop
sarb
mov
mov
adc
aam
add
cltd
cmp
xchg
sahf
or
scas
test
pop
test
shl
mov
iret
dec
mov
inc
idivl
inc
std
sub
and
jo
and
imul
lret
jne
subl
or
dec
push
xorl
std
nop
mov
xchg
rorw
pusha
js
ficompl
mov
pop
xor
loopne
dec
enter
lods
cmp
aaa
divb
adc
mov
sbb
pop
fisubs
adc
or
aas
dec
xchg
cmp
test
outsb
cs
outsb
dec
xor
pop
jmp
mov
jp
ss
ds
sub
cmp
inc
sbb
pop
xlat
jne
mov
int
insb
push
dec
push
les
shl
fidivrl
and
jl
add
jmp
cmp
dec
addl
cmpl
in
and
add
or
xor
dec
test
dec
int3
mov
jnp
inc
cmp
mov
push
fdivs
imul
out
fldcw
fldenv
rclb
jnp
or
push
nop
adc
stos
cmc
shl
jns
int3
fistpll
scas
pop
cld
cmp
push
jne
mov
sbb
fstpt
sbb
mov
add
out
inc
ret
frstor
sbb
lret
fnstenv
mov
fbld
push
jg
je
adc
out
add
cli
cmp
mov
icebp
jp
test
sub
pop
fcomps
rolb
rcr
lods
dec
adc
cmpl
lods
notl
push
in
in
mov
loop
adc
or
or
jg
and
pop
cmp
out
pop
xor
mov
push
ljmp
xchg
fstps
fcoml
sbb
int
mov
dec
lods
idivl
mov
cmpsl
es
cmp
sub
dec
jecxz
xchg
lods
sbb
add
mov
inc
stc
stc
xor
mov
push
loopne
fisttpll
cmpsb
mov
mov
pop
ficomps
push
push
rolb
movsb
call
lahf
jl
inc
push
xchg
icebp
jae
jbe
jno
ljmp
push
jg
adc
push
fcomip
add
cmc
jmp
ljmp
mov
inc
pop
mov
data16
sub
sub
sbb
cmpsl
inc
xchg
mov
or
or
enter
decb
js
push
and
sbb
sub
sbb
leave
pop
cmc
mov
xchg
cmc
or
cmpl
inc
fistpll
call
sub
fmull
mov
nop
pop
or
ret
cs
or
rolb
mov
pop
negl
out
das
push
je
push
fs
pop
pop
pop
rcll
xchg
add
dec
sub
jae
lds
xor
sub
mov
leave
in
push
push
iret
cmp
dec
mov
mov
jne
mov
sub
loop
inc
dec
lahf
popf
icebp
adc
hlt
enter
cmpl
ljmp
js
test
push
out
and
sbb
rolb
dec
dec
mov
or
and
jb
idivl
mov
sahf
sub
inc
shll
pop
fldl
push
gs
mov
test
jl
push
aaa
jne
lods
sub
sti
add
ficomps
lret
push
iret
cmp
loope
inc
roll
inc
out
jle
cmc
je
adc
mov
es
lahf
mov
loop
sbb
pop
int
mov
adc
ret
mov
inc
aas
mov
mov
lods
lock
add
fisttpll
fstps
and
lea
ljmp
leave
sub
mov
icebp
int3
cli
mov
cmp
dec
lods
outsb
out
insl
call
popa
fstp
arpl
sarl
xchg
cli
cmc
ret
and
test
dec
ret
mov
xchg
xor
sub
enter
and
rcl
outsl
or
push
push
cld
xchg
rolw
inc
aas
sbb
shl
in
and
mov
data16
shll
jl
mov
xlat
adc
jge
cs
inc
in
hlt
xchg
jge
add
mov
mov
jmp
lods
addr16
push
xor
movsb
and
loopew
pop
fstps
push
inc
insl
mov
dec
mov
shl
int
sti
xchg
outsl
clc
sub
push
out
xor
inc
imul
pop
pop
fadd
inc
hlt
inc
adc
jp
push
push
inc
add
mov
cmp
jnp
sub
dec
xor
call
flds
dec
fnstsw
out
call
inc
movb
mov
or
jmp
mov
addps
lods
xchg
clc
fs
fldenv
or
rcll
cmc
adc
movsl
adc
add
jns
in
mov
push
jmp
xchg
scas
addr16
xor
popf
fwait
xchg
and
ret
cmp
addr16
test
push
jle
cmpb
int
xor
lock
xor
loop
fstp
gs
cmp
rorb
je
adc
jbe
in
push
rclb
sub
ljmp
popf
sbb
xchg
lahf
or
pop
mov
inc
dec
or
fs
dec
and
xor
cmpsl
or
stos
imul
in
mov
sbb
mov
xor
test
add
xor
jmp
jbe
sub
and
sti
or
push
push
or
mov
notl
sbb
lock
cmpsb
jb
xor
cmpsb
lahf
ficomps
pushf
mov
loopne
or
inc
stc
dec
int
add
not
loopne
jae
cmp
test
out
add
aad
pop
jae
aad
pop
pop
dec
enter
mov
mov
cld
outsl
sbb
divb
mov
pop
jne
mov
in
fs
out
sahf
sub
in
adc
jge
cs
adc
adc
xchg
inc
cltd
mov
mov
outsl
dec
push
scas
call
sahf
sbb
adc
aaa
push
inc
push
xchg
dec
int3
cmp
push
inc
std
sti
mov
sub
add
gs
jmp
push
sub
shrb
inc
in
fcompl
rcr
dec
popf
icebp
adc
repnz
and
or
mov
arpl
adc
adc
inc
mov
pop
aam
pop
aad
lea
mov
lcall
sub
out
divb
sub
leave
imul
fistps
loope
xchg
nop
adc
jae
imul
gs
cmc
sbb
scas
cs
mov
mov
xchg
push
adc
pushf
pop
cltd
cmc
sbbb
test
cmp
and
adc
jnp
ljmp
rcr
repz
jge
iret
push
xchg
xchg
push
jg
cmc
pop
leave
pop
cmp
test
xor
repz
lcall
and
test
mov
mov
rclb
adc
push
mov
ret
inc
inc
cmp
mov
test
jbe
imul
push
out
sub
arpl
fstpl
int
and
push
cmp
lret
cmpsl
repnz
fmull
aas
cmp
inc
xchg
xor
xchg
imul
test
pop
pop
adc
mov
pop
xor
loopne
dec
enter
lods
enter
jnp
cmc
scas
jge
js
dec
jmp
mov
in
push
mov
adc
dec
lcall
inc
movb
cmpl
bound
jbe
test
push
mov
pop
and
int
push
mov
js
mov
xchg
movsb
jle
movsb
cld
lock
insl
cmpsb
repnz
xchg
stc
pop
pop
cltd
inc
fidivl
rcrl
push
dec
bound
add
add
mov
mov
push
xacquire
popf
mov
add
xchg
scas
fwait
iret
dec
dec
push
sarl
jnp
jl
es
inc
clc
outsl
jmp
mov
inc
fists
or
xlat
mov
sbb
xchg
mov
or
mov
xchg
fistpll
scas
pop
clc
cmp
mov
mov
pop
sub
lock
push
aam
xchg
outsb
mov
inc
ret
sarl
imull
xor
mov
jo
push
out
in
popa
pop
out
test
adc
lea
or
cmpb
pop
mov
in
scas
sub
sub
sbb
adc
xor
inc
cmp
jecxz
dec
add
mov
sub
leave
stos
imul
in
jae
sbb
sub
fcmovnb
xchg
test
add
insl
cmp
inc
ja
test
and
sbb
mov
loope
test
rolb
sbb
inc
mov
outsb
sub
sahf
cmp
fs
adc
mov
sbb
lea
push
xorl
jne
xor
sub
jmp
negb
ficompl
sbb
ds
nop
out
ror
dec
inc
add
mov
mov
jl
mov
adc
imul
fstpl
mov
push
cmpb
jp
lret
arpl
cmp
js
pop
cmp
add
test
xchg
pusha
imul
push
add
rorl
inc
inc
mov
fwait
jnp
fnstenv
jne
sahf
xor
fyl2x
lods
xchg
ljmp
shlb
cli
cwtl
or
push
xchg
adc
push
lods
ja
leave
movsl
or
out
outsb
inc
sbb
cs
leave
xchg
addr16
mov
or
inc
push
int3
dec
mov
xor
mov
std
jl
xor
stos
pop
shlb
arpl
push
shrl
inc
popa
pop
cltd
xchg
push
pop
jp
jo
add
lds
mov
mov
sub
mov
mov
push
push
or
subb
sub
inc
ret
pop
cmpsl
ret
jbe
icebp
out
test
dec
in
stos
and
pop
dec
popf
mov
xchg
xchg
adc
push
lcall
test
aas
mov
test
lods
call
insl
in
pop
mov
pop
aad
push
mov
adc
ret
dec
das
divl
inc
std
xor
aam
js
into
ds
out
movsl
inc
stos
pop
sub
fs
cmpsb
and
xchg
xchg
sbb
xchg
push
adc
dec
sbb
ds
jbe
xchg
scas
hlt
outsl
cmp
cmpsl
es
aas
sbb
sbb
push
mov
pop
lret
int
xchg
or
mov
push
xchg
pusha
mov
je
ss
jne
push
imul
pop
js
push
fs
or
dec
adc
addb
inc
in
xor
ja
lods
lods
sub
jo
fsubl
and
push
push
pop
fdivrs
pop
xchg
add
dec
mov
sub
mov
std
jl
pop
lds
outsb
mov
jo
and
fistpll
inc
fwait
aad
or
or
movb
cmp
outsl
cs
sbb
jo
cwtl
pop
mov
daa
mov
cmp
xchg
adc
dec
int3
dec
mov
xor
aam
and
cli
inc
or
and
sub
loop
push
add
out
adc
inc
or
mov
and
inc
or
fcomps
pminub
std
inc
add
fildll
jbe
cmp
das
lret
sub
jecxz
loopne
data16
add
adc
stos
cmc
adc
xor
repz
cs
aaa
mov
repz
lcall
test
imul
mov
iret
adc
push
cmpsb
cmp
into
xchg
pop
inc
std
es
cmc
mov
outsb
push
insl
xchg
fwait
in
lret
xchg
xlat
cmp
mov
out
or
xchg
divl
addr16
mov
repnz
data16
sbb
cmpsb
adc
sbb
mov
pop
aam
aas
enter
into
xchg
push
std
jg
add
jbe
jns
sahf
mov
insl
and
fistpl
pop
and
fdivs
mov
mov
inc
mov
sbb
das
lods
xchg
stos
fs
fbld
adc
inc
jge
dec
int3
lret
cli
adc
inc
rolb
mov
clc
jns
mov
in
and
dec
in
xchg
xor
fcompl
loope
adc
out
push
in
cmc
sub
xor
int
push
jecxz
lcall
adc
mov
iret
dec
mov
daa
mov
mov
pop
jnp
jns
scas
jae
out
or
mov
fstpl
bound
pop
out
xchg
adc
or
ds
xor
mov
dec
scas
push
push
mov
push
pop
fdivrs
push
inc
testl
into
sarb
jl
insb
jo
icebp
jb
fsubr
and
loop
fstps
sbb
rcll
xchg
mov
push
jle
mov
mov
lcall
ljmp
leave
out
fmul
pop
adc
push
xchg
lock
push
push
and
nop
jg
jg
das
jns
pop
hlt
imul
or
and
test
lcall
test
lret
cmc
dec
es
xchg
fdivrl
das
xchg
or
mov
cmp
add
loopew
fcmovu
pop
and
push
push
iret
cmp
xor
cld
cli
mov
cmp
out
fcoms
repnz
bound
pop
aad
lea
aad
mov
clc
cmp
sar
jne
sub
scas
imul
pop
mov
push
push
sarl
dec
leave
lea
inc
pop
data16
fwait
push
adc
cli
jns
cmp
lock
jo
iret
push
fs
add
std
cltd
push
sbb
mov
jae
cmovs
mov
or
jg
insl
push
cmp
js
scas
mov
bound
jmp
mov
xor
pop
cmp
add
dec
mov
flds
orl
outsb
sbb
in
insl
rcl
fwait
or
arpl
pop
in
or
pop
fcomps
or
mov
loope
test
test
add
decl
sub
xor
mov
pop
cmpsb
mov
rcrb
sub
mov
mov
mov
jp
sub
ds
icebp
out
inc
jmp
inc
cmc
jecxz
inc
arpl
pop
in
sbb
cwtl
pop
xchg
pop
jne
inc
dec
rorb
add
test
in
inc
std
add
lock
lods
sub
adc
pusha
mov
iret
mov
xorps
xchg
int3
lret
cld
inc
addb
dec
add
in
stos
outsl
jmp
sub
popa
fnstsw
sbb
lea
ret
test
add
mov
xor
sub
sub
sub
cmpsb
and
mov
fcomps
push
outsl
ror
push
int
sti
adc
cmp
cmpl
jns
arpl
lahf
call
mov
pop
jnp
sti
fcoms
mov
sbb
add
cmp
xor
divl
dec
andb
and
inc
fmull
cmp
mov
pop
pop
int3
int3
dec
add
dec
mov
lock
inc
push
loope
lock
and
mov
in
cmp
fcompl
sbb
nop
ud0
ljmp
aas
sbb
xchg
jecxz
cmp
xchg
and
popf
arpl
pop
fwait
int
dec
xchg
cs
or
rolb
mov
sbb
jmp
and
arpl
fstp
popa
and
ds
push
mov
addl
idivb
mov
outsb
or
mov
mov
into
repz
push
mov
lret
leave
or
mov
add
out
mov
cltd
jg
arpl
fnsave
fimull
pop
ror
mov
mov
add
mov
cmp
lods
sub
ret
es
and
sbb
into
nop
mov
xchg
adc
leave
dec
cmp
sub
arpl
iret
mov
outsb
mov
popa
mov
pop
jg
adc
into
dec
mov
add
mov
jae
push
sub
scas
and
mov
fcoms
sub
pushf
xor
stos
leave
std
sti
push
es
std
es
sbb
out
ja
outsl
mov
data16
sbb
and
push
or
xchg
adc
jae
jp
imul
inc
cld
xchg
ss
out
js
lods
adc
push
fisubs
mov
nop
push
cmp
ljmp
dec
mul
cmp
ds
dec
insb
je
jne
sbb
mov
mov
fistpl
popf
rclb
xchg
xchg
dec
adc
or
mov
xor
das
lods
sub
cs
sub
push
fwait
push
add
testb
xchg
pop
ret
movl
std
jl
mov
lea
outsl
jmp
sub
int
arpl
popf
xchg
push
xchg
pop
xchg
jnp
xchg
out
add
sbb
mov
mov
scas
jne
add
aad
cltd
popf
sbb
pop
jns
adc
int3
cs
push
cmpsl
fldenv
movl
insl
jmp
sub
ffreep
ficomps
adc
mov
add
jle
adc
je
mov
mov
mov
in
inc
pop
pop
or
dec
aas
test
inc
mov
ret
adc
ja
jmp
loop
sti
sub
push
out
and
or
mov
jecxz
repz
inc
sbb
loope,pn
jo
stos
xchg
mov
gs
pop
xchg
pop
push
or
int
mov
enter
sti
sarb
addr16
push
sub
icebp
bnd
insl
push
imull
jp
loop
fnstsw
jae
xchg
push
xchg
pop
push
push
repnz
scas
add
mov
fidivrl
lods
sub
adc
or
mov
cwtl
lret
xchg
adc
dec
das
idivl
cmp
stos
fprem
es
dec
mov
int
movsl
jnp
imul
rorl
gs
ja
daa
in
pop
loopne
jle
and
aaa
aaa
mov
mov
scas
and
out
js
movsb
movsb
and
add
push
sbb
adc
inc
incb
jl
bnd
das
outsl
jmp
scas
sub
inc
nop
dec
push
sbb
shrb
out
leave
inc
jo
mov
sbb
mov
jae
mov
add
or
add
and
fidivrl
leave
inc
jo
mov
dec
ds
sub
lods
notb
cmp
mov
popf
imul
ret
xor
loop
popa
cmp
scas
and
jo
mov
or
test
sub
das
xor
and
lods
sub
and
pop
fidivs
aad
rorl
xor
ret
stos
or
scas
jl
imul
popa
cmpsb
rclb
xchg
adc
roll
or
outsb
add
das
fnstsw
jg
mov
xor
push
or
jmp
popf
push
movsl
mov
and
rcrb
mov
dec
cmp
inc
int3
and
outsb
jns
gs
jo
mov
sbb
pop
loopne
leave
nop
mov
mov
xchg
adc
das
add
sub
scas
mov
lods
stos
cmp
fsubl
mov
ljmp
iret
movb
enter
cld
sarb
pop
imul
bound
test
int3
push
call
or
xchg
adc
cs
add
sub
mov
cmp
imulb
test
pop
mov
ficompl
sbb
add
adc
sub
int3
cmpsb
jmp
mov
icebp
cmpsb
nop
enter
push
mov
ret
pop
pushf
xchg
sbb
add
inc
lods
in
or
ficompl
cmp
cs
xchg
push
loopne
mov
sbb
test
inc
sti
mov
cmp
xchg
ret
or
mov
icebp
fnstenv
out
pop
loopne
popa
cmp
lcall
mov
sub
addl
mov
xor
xlat
dec
xchg
sbb
mov
iret
sbb
in
and
into
int3
test
nop
mov
je
xorb
jo
fildll
pop
popa
pop
loop
sti
jo
jg
mov
adc
adc
or
inc
adc
in
mov
icebp
int
mov
arpl
sbb
mov
pop
push
aam
pop
xchg
aas
lahf
leave
dec
xor
sub
mov
js
adc
fldl2t
adcb
inc
in
mov
or
adc
xor
mov
lret
les
jne
jnp
mov
pop
sbb
sbb
and
inc
cmp
mov
xchg
sub
inc
ret
sub
and
shll
pop
scas
push
loop
popa
fsub
and
push
enter
ret
lea
sbbb
mov
mov
xor
jb
stos
stos
sub
ret
mov
nop
ficompl
jbe
sbb
packuswb
roll
jp
cli
jns
cmp
out
outsb
out
push
callw
jecxz
gs
fstpl
and
clc
xchg
jp
push
jmp
and
subl
loop
js
scas
xor
ljmp
aad
rcrl
mov
cmp
das
sub
aas
push
sahf
cld
movsb
and
inc
push
lock
insb
imul
loop
fidivrs
sahf
fadds
sbb
xchg
or
push
aas
mov
cltd
movsb
adc
mov
pop
pop
and
mov
aad
mov
dec
aas
or
jg
lret
je
bnd
loop
mov
push
fcompl
adc
into
mov
mov
mov
dec
test
or
mov
std
stos
ficoms
rcrl
xchg
pop
int
dec
int3
fs
inc
movb
jg
sti
jp
push
jl
hlt
jae
outsb
xchg
push
jnp
popa
fisttpll
and
rclb
mov
fs
sub
cmp
mulb
sub
in
mov
rolb
pop
cwtl
into
push
push
int
xor
ret
stos
sub
dec
and
pop
idivl
jo
adc
jmp
movsl
and
cmpl
loope
and
nop
nop
setae
lret
xchg
pop
mov
mov
xchg
lahf
adc
xchg
pop
mov
and
popf
adc
fcomps
sbb
aaa
xor
ret
inc
xor
add
out
test
pushf
in
bound
and
or
nop
adc
fadds
or
ds
adc
ss
adc
mov
fisubrs
push
leave
aad
pop
pusha
leave
int3
dec
push
add
add
jp
inc
cmpsl
lock
mov
push
jmp
mov
popa
frstor
ret
adc
dec
or
lds
cmp
xor
mov
dec
mov
sub
mov
pop
xchg
es
cs
or
shrb
aas
js
jbe
cmp
push
pusha
out
in
dec
cmpsl
and
pop
fcompl
into
arpl
xchg
adc
dec
push
add
mov
sarb
mov
lcall
adc
ds
rcl
push
push
hlt
test
dec
leave
es
and
mov
aad
nop
icebp
bnd
mov
out
push
inc
fcoml
xor
jns
cmp
push
mov
repz
inc
cld
int3
xor
pop
push
mov
adc
mov
pop
fsts
test
dec
cmp
mov
inc
sarl
divl
mov
insl
jmp
bound
mov
pop
cltd
popf
jnp
adc
or
dec
lahf
add
xchg
dec
xor
mov
jb
test
jg
andl
push
push
ror
push
adcl
jmp
ja
sub
inc
and
stos
es
mov
jne
scas
mov
inc
xchg
and
xchg
sti
inc
push
push
mov
nop
ljmp
mov
aaa
push
mov
scas
cs
outsb
call
lcall
push
shld
jp
cli
cli
rorl
sbb
shl
jae
and
cltd
aaa
push
arpl
and
arpl
xchg
fcoml
loope
cmc
cmc
mov
idiv
inc
call
popa
pop
sbb
adc
and
dec
or
push
cmp
movl
divb
cld
jnp
mov
outsb
out
push
movsb
push
nop
push
pop
ficoms
mov
adc
scas
jnp
add
cmc
ds
jae
jp
enter
jb
and
popa
mov
in
pushf
fldenv
xor
push
sarb
dec
mov
pusha
push
inc
jg
ljmp
pop
mov
push
pushf
imul
ficomps
cmp
pop
xlat
out
nop
andps
add
enter
add
out
xlat
xchg
pop
mov
pop
mov
adc
mov
mov
fcomps
jbe
adc
scas
dec
add
mov
incb
cmp
cmc
sub
rcrb
push
pop
addr16
les
inc
pop
les
and
pop
pop
aam
lea
mov
aas
sarb
add
cmp
shrl
and
aam
adc
sbb
int3
test
and
inc
shlb
repnz
divl
cmovl
mov
fstpl
popf
pop
xchg
push
xchg
sarb
inc
or
dec
test
mov
xorb
mov
xor
lds
daa
flds
rclb
enter
mov
lret
aaa
ret
test
js
jbe
jg
in
sbb
ljmp
pop
pop
fsubl
jl
sbb
scas
push
jnp
fwait
in
imul
xchg
stos
sbb
das
lods
popa
iret
subl
and
lret
inc
cmp
xchg
and
loope
int
dec
rorb
fsin
dec
mov
jmp
int
push
sbb
xchg
mov
pop
lcall
nop
adc
jns
dec
pop
addl
cmc
xor
xor
jno
cmpsl
adc
sbb
cli
mov
or
push
int
test
inc
into
push
bound
add
mov
jl
out
insl
mov
ja
jecxz
dec
adc
push
cltd
sbb
xchg
xchg
int3
popa
rcll
push
or
ret
mov
jnp
scas
jbe
or
cmpsl
es
dec
adc
mov
dec
int3
adc
jnp
xor
inc
add
mov
jae
shlb
mov
jne
jecxz
dec
dec
rorl
inc
adc
push
rcll
add
sbb
mov
jbe
fsts
js
mov
mov
mov
pop
aaa
shll
sub
inc
sub
insb
shr
bnd
les
fs
pop
outsb
dec
lcall
mov
pop
mov
dec
enter
mov
cltd
cmp
xor
xor
sub
and
leave
add
push
mov
push
es
inc
roll
lock
divb
jmp
mov
popa
fst
pop
sbb
cwtl
jg
xchg
lds
lea
adc
xchg
mov
mov
cmpsb
insl
mov
fisttpl
adc
repz
mov
or
push
add
dec
ja
mov
cld
jnp
and
sbb
jb
test
daa
inc
fcompl
adc
push
movsb
or
test
inc
push
mov
cld
enter
lcall
ljmp
sahf
sbb
add
cltd
mov
push
mov
movl
stos
jl
cmp
dec
mov
in
mov
loopne
lods
daa
lock
popa
fldl
int
clc
ja
sti
jp
sbb
jmp
mov
adc
cmp
sbb
mov
sti
popf
sahf
pop
mov
push
or
stos
dec
jl
inc
into
and
lods
xchg
std
outsl
jmp
int3
lods
sub
loop
popa
dec
mov
xchg
adc
shrl
repz
lds
mov
iret
xor
test
mov
std
pop
fwait
push
rcll
sub
jl
ret
inc
inc
mov
jmp
stos
jne
mov
pop
lret
lock
push
imul
and
sbb
mov
je
cld
sbb
in
imul
cmp
mov
shr
mov
in
icebp
mov
pop
lock
mov
cmp
cld
dec
rclb
xchg
ret
jbe
mov
jl
cmp
and
lock
outsl
mov
hlt
in
jecxz
push
loope
fcompl
loop
pop
je
les
dec
push
addb
jmp
cmp
scas
xor
cmpsb
daa
mov
gs
pop
cwtl
ficoms
push
cmpb
mov
ret
mov
je
xchg
inc
dec
nop
adc
gs
pop
and
dec
pop
inc
sbb
cmp
push
xchg
push
les
cmp
mov
inc
sub
add
and
xchg
and
push
ds
adc
dec
cld
enter
cld
sti
jl
xchg
mov
cmpsl
icebp
and
call
popa
movsb
and
cwtl
xchg
sbb
rsqrtps
xchg
addl
aas
mov
jp
lret
lods
jb
movsl
in
imul
cmp
pop
or
shrb
mov
add
xor
sti
and
jo
std
das
stos
mov
jecxz
sub
les
pushf
pusha
xchg
xchg
adc
jmp
add
out
popa
aas
inc
rol
aaa
mov
push
mov
lods
sub
push
lret
xchg
sub
imul
xor
dec
leave
mov
repnz
icebp
out
cli
inc
pop
out
icebp
pop
and
fcmovnbe
sbb
sarl
movsb
jl
mov
pop
xchg
adc
test
jge
xorl
jnp
bound
hlt
pop
iret
sub
push
sbb
mov
fcoms
push
enter
into
xor
inc
roll
sti
jl
jns
scas
hlt
jae
jo
mov
cmp
xchg
dec
sbb
nop
xadd
xchg
outsb
test
test
test
jno
test
leave
addr16
xlat
call
fcom
push
mov
sti
stos
dec
cmp
push
fmul
and
in
insl
jmp
loopne
movsb
lods
jl
or
dec
xchg
adc
lods
clc
adc
sub
pop
out
mov
cmp
call
cmpsb
daa
imul
subl
out
into
dec
mov
or
lods
cmp
cli
jns
cmp
out
insl
xchg
call
aad
pop
fmul
sub
jbe
jp
jo
or
push
leave
bound
mov
out
cmp
xchg
out
insb
test
gs
pushf
orb
aam
sbb
mov
sbb
jb
scas
idivl
pop
dec
mov
divb
cwtl
push
aam
std
out
les
inc
notl
xchg
jns
inc
cld
xchg
ss
out
cmc
shrd
push
push
and
adc
lcall
push
fimull
xor
cltd
mov
rcrb
std
cli
jnp
std
mov
xor
inc
imul
dec
inc
fadd
lea
mov
mov
cmc
or
mov
cmc
mov
sub
aas
lods
stos
inc
and
and
pop
fstps
nop
movsb
or
std
mov
imulb
mov
cld
mov
jae
shlb
pop
shrb
pop
adc
cwtl
pop
inc
push
ljmp
dec
cmpsb
mov
or
mov
xor
and
scas
out
pop
xor
mov
pop
fdivrs
push
cmp
mov
pushf
inc
std
jle
cli
fistl
adc
jmp
pop
repnz
rcr
and
xchg
ss
sub
mov
in
orb
hlt
mov
jo
daa
repz
lods
lock
or
pop
push
mov
xchg
xor
inc
imul
jnp,pn
cmp
jp
push
pop
scas
pop
loop
jle
pop
pop
cltd
les
push
popa
nop
adc
xchg
test
jns
in
fistpll
imul
imul
push
cmpsl
jle
dec
andl
addb
inc
add
movl
xchg
dec
cld
jnp
xor
hlt
lods
push
lock
scas
fst
inc
fmull
movsl
call
in
ret
adc
into
dec
adc
out
mov
xor
aaa
test
adc
test
sahf
mov
test
stos
int
leave
mov
pop
in
imul
addr16
jns
and
in
push
outsl
bound
call
imul
ret
xchg
iret
push
xchg
ret
push
mov
je
mov
or
jecxz
and
xchg
xor
call
movsb
mov
ret
sbb
xchg
fld
push
pop
leave
dec
inc
pusha
cmp
inc
xor
insl
and
or
jo
dec
add
in
push
ss
notl
adc
inc
or
addl
mov
sbb
mov
sarb
and
mov
xor
push
or
inc
and
push
mov
jns
push
dec
and
imulb
iret
cwtl
mov
shll
ja
lea
or
dec
jecxz
mov
cmp
or
mov
cmp
pop
fmuls
cmp
aad
dec
enter
sahf
std
jg
and
jp
out
insl
aad
lods
test
icebp
fcompl
pop
mov
adc
leave
ficoms
addl
mov
js
and
test
fdivl
add
xchg
inc
mov
shll
inc
int3
push
inc
dec
inc
std
movsb
movsb
mov
lea
fwait
and
ret
arpl
mov
mov
xchg
int3
cmpsl
test
jl
divl
xor
mov
lcall
mov
flds
push
cmpb
sub
mov
inc
mov
ljmp
fucomip
pop
imul
in
movsl
in
cwtl
pushf
lods
out
dec
nop
jnp
out
test
cmp
lods
bound
lods
sbb
and
fstps
jb
push
rclb
imul
xchg
or
sub
js
mov
lock
lahf
jmp
fs
jecxz
and
cltd
sbb
sbb
outsb
lea
mov
into
call
in
aas
mov
sbb
movsl
xchg
cmp
lods
icebp
insb
add
movsb
and
movsb
in
sbb
dec
jnp
push
sarb
mov
dec
mov
xchg
mov
jns
cli
repnz
inc
arpl
call
dec
popa
cmp
lcall
mov
jg
dec
in
dec
ret
cmp
xor
sbb
jmp
test
pop
mov
orb
mov
add
and
cli
xor
cmovl
jge
jecxz
pop
pusha
int3
fsubr
sbb
jae
adc
push
cmpsb
in
call
cmp
aad
test
loope
out
mov
sbb
sbb
fidivs
aad
sarl
cmp
ret
and
adc
jmp
ljmp
pop
pop
fmull
sbb
xchg
sti
fcoms
mov
jge
xchg
add
xor
push
jmp
and
movsb
mov
arpl
pop
cwtl
xchg
rclb
xchg
mov
hlt
sbb
jl
and
out
outsb
sub
push
push
loopne
fsub
adc
xor
mov
dec
mov
lcall
pop
mov
mov
xchg
adc
and
iret
hlt
or
add
xchg
leave
dec
enter
cmp
xor
add
scas
jae
outsb
cmpsl
and
mov
loop
iret
and
xlat
je
dec
cli
add
je
add
pop
std
ds
mov
loopne
xor
or
sub
mov
hlt
xor
scas
mov
dec
or
jg
xor
ss
out
insl
and
pop
fisttpl
sbb
test
jo
add
orl
loopne
mov
lcall
xlat
cmpsl
nop
pop
popf
mov
add
pop
fists
dec
xchg
lea
loop
mov
mov
outsb
lret
dec
insl
and
mov
sbb
cmp
jbe
lret
dec
addr16
addr16
dec
jp
inc
sbb
insl
loope
sbb
mov
xchg
cmpsb
into
or
int
push
std
xor
sub
mov
cmc
je
xchg
jp
repnz
movsl
ret
lds
icebp
adc
mov
xchg
scas
enter
mov
fwait
add
pop
test
mov
neg
pop
aad
mov
int3
dec
mov
jnp
mov
inc
add
mov
je
xor
insb
jmp
dec
loop
fstps
sbb
enter
rorb
xchg
test
jmp
mov
pop
pop
and
test
mov
fidivrs
pop
ds
dec
mov
sar
and
mov
sbbb
push
jle
icebp
int3
popf
imul
dec
loopne
sbb
fimull
xchg
int3
cmp
adc
aas
out
insl
ljmp
lods
sub
inc
fsubl
fcmove
xor
aam
cmp
dec
jge
dec
inc
ret
jbe
cmp
popf
out
test
imul
in
movsl
jecxz
cwtl
jg
or
lods
cmc
rorl
mov
cmp
js
scas
movsb
movsl
sub
sub
jmp
fwait
test
push
pop
push
pop
dec
dec
mov
dec
and
mov
scas
mov
jae
pop
fbstp
push
imul
popf
and
xchg
adc
mov
xrelease
sarl
aaa
mov
adc
sub
cmpsl
insb
xchg
sbb
rclb
add
adc
inc
shrb
aas
idivl
sub
fs
push
mov
sub
and
sbb
fs
hlt
insb
addr16
loope
sbb
jge
xor
cmpsb
daa
add
fisttps
cmp
xchg
and
arpl
int
aam
icebp
int
ret
mov
rorb
fincstp
jmp
hlt
jl
loopne
jmp
pop
adc
inc
in
xor
ficomps
xchg
xor
adc
adc
mov
repz
inc
fidivrs
das
xchg
mov
xor
mov
cmpsl
adc
sbb
popa
cltd
rclb
bound
cs
xor
int
inc
ret
inc
add
cmp
lods
sub
popa
rcrl
or
inc
xchg
adc
jo
dec
lret
push
addl
mov
jne
sub
ljmp
pusha
cmp
pop
or
xchg
mov
mov
imul
sbb
inc
and
pop
icebp
jo
lret
das
stos
mov
inc
push
les
pushf
sbb
inc
and
ljmp
xor
inc
ror
aaa
mov
push
mov
lods
sub
push
lret
xchg
sub
imul
ss
dec
leave
mov
repnz
icebp
out
cli
inc
pop
out
icebp
pop
and
fstpt
in
dec
or
cwtl
pop
mov
xchg
cld
inc
int
push
mov
fistpll
scas
mov
mov
mov
cmpsl
daa
mov
sbb
pop
jnp
lret
push
int
inc
dec
cmp
inc
stos
js
xchg
jg
sub
xchg
fwait
sub
lahf
push
cs
in
addr16
jge
jg
and
add
lret
popa
icebp
xchg
movsl
cmp
scas
das
lods
sub
cmpsl
adc
frstor
mov
push
adc
inc
lods
cmc
movl
sti
es
std
push
xchg
mov
imull
out
pop
out
in
and
pop
push
ficoms
xchg
inc
mov
or
rorl
mov
jg
cmp
aaa
clc
pop
aaa
jmp
mov
test
aaa
jns
das
shrb
cmp
cmp
mov
mov
js
inc
pop
jmp
in
add
out
stc
pop
sbb
adc
lret
insb
or
mov
fistpll
sarl
aaa
mov
daa
push
sbb
adc
mov
sbb
or
arpl
inc
roll
inc
lock
scas
cmc
jbe
xchg
jl
and
daa
push
fs
in
adc
inc
cltd
sbb
fwait
xlat
out
adc
push
outsb
cmp
push
push
stos
jle
xor
data16
mov
test
sbb
or
lods
leave
cld
fs
ret
inc
xor
in
adc
hlt
jne
repz
add
mov
ficoms
xchg
std
test
or
lret
cmpsl
repnz
or
addr16
adc
out
leave
das
mov
fimuls
sarl
leave
mov
or
ret
xor
pop
negl
lock
js
mov
xchg
cld
int3
pop
cltd
pushf
mov
lods
jnp
xchg
mov
push
xor
test
and
ficompl
shr
jge
scas
into
inc
jns
dec
xor
cld
cli
inc
sbb
push
icebp
fwait
in
fisubrl
test
jecxz
fisttps
addl
pop
adc
push
or
mov
add
cmp
lods
stos
xor
push
test
sbb
divl
push
rclb
adc
stc
jno
jnp
xor
inc
mov
aam
divl
and
mov
pop
dec
and
and
add
shrl
and
add
add
xor
mov
sub
fst
imul
push
mov
popf
sbb
fildl
or
mov
fxch
mov
popa
roll
fdivl
cli
jns
cmp
mov
inc
xor
loop
fdivrl
ffree
adc
lds
testb
out
incb
repz
inc
fidivrs
cs
scas
jbe
or
cmpsl
mov
mov
popf
pop
jle
xor
push
setg
xchg
adc
add
rcrb
jl
jns
xor
jp
out
insl
stos
mov
test
fbld
inc
adc
push
push
lcall
add
jns
mov
addr16
xchg
and
cmp
mov
push
cmp
inc
add
jbe
xor
lods
xor
aad
pushaw
call
subl
nop
dec
dec
xchg
push
rol
push
jo
subb
or
ds
pop
mov
push
mov
nop
xchg
cmp
add
push
add
lahf
loop
into
int3
test
sbb
roll
inc
aas
pop
imul
mov
jno
imul
mov
jnp
mov
mov
addr16
add
and
cmp
cmp
lods
sub
adc
xchg
mov
push
cmpsb
jp
pop
push
aam
adc
lret
mov
mov
into
stos
jno
jle
adc
jae
push
jo
fsubl
and
sbb
sbb
or
call
jmp
cld
lds
inc
cld
mov
bnd
cmpsb
cmpsl
es
sbb
push
sarl
inc
mov
int3
dec
sub
or
add
jo
out
mov
stc
out
out
sub
inc
mov
xchg
adc
loope
or
subl
loopne
testb
xchg
sbb
or
loopne
sub
cltd
xor
mov
push
roll
lods
stos
aaa
inc
and
cld
and
loope
lock
jp
call
loop
fdivrp
cmp
repz
lret
fisubl
ret
aaa
xchg
mov
sbb
xor
pop
test
aas
pushf
dec
jns
push
aam
in
sub
les
sub
jnp
sbb
das
js
in
pop
insb
ljmp
rcr
mov
push
xchg
adc
or
loop
bound
cmp
pop
push
xor
enter
out
jo
lock
roll
fcomps
add
xchg
adc
enter
dec
inc
inc
shlb
jbe
sbb
insl
jmp
out
fisubs
les
and
xor
aad
push
or
insb
add
mov
mov
jne
rep
movsb
mov
hlt
mov
pop
pop
push
rclb
imul
ret
idivl
cmp
cli
lock
and
push
cltd
out
dec
arpl
mov
xchg
pop
mov
push
mov
dec
push
mov
dec
cmp
mov
scas
lods
sub
popf
sub
or
cmp
pop
fmuls
cmp
aad
dec
enter
sahf
std
jg
scas
cld
lahf
insb
test
icebp
jb
adc
mov
cmp
jecxz
cmpsl
ret
sbb
push
pop
adc
adc
jne
or
jno
punpckhwd
loopne
ret
ss
mov
push
or
in
addr16
lret
sbb
push
rcrl
mov
mov
mov
ret
fldenv
jne
movsb
xor
data16
ds
aam
sbb
jl
push
testl
jnp
cmp
sbb
lods
out
insb
jbe
movsb
and
fstps
jns
aad
xchg
lods
dec
int3
dec
mov
or
rolb
pushf
and
jne
or
insl
jmp
inc
loop
dec
push
stc
cwtl
inc
fsts
mov
mov
or
xchg
mov
aam
aaa
mov
jns
sbb
lods
sub
push
aam
or
mov
xchg
or
mov
pop
std
sarb
sub
jbe
cmp
xorl
xchg
inc
or
rorb
xchg
test
inc
fistpll
mov
pop
divl
sub
xlat
cmp
sub
iret
rclb
scas
inc
xor
mov
inc
inc
sub
mov
inc
pop
jbe
sbb
dec
push
cs
push
xor
cltd
sbb
sarb
adc
add
mov
cmp
daa
daa
sub
mov
or
mov
scas
arpl
push
rcll
ret
test
mov
push
inc
jnp
and
out
insl
push
push
loop
xchg
sbb
outsb
leave
adc
mov
cwtl
out
add
sub
sqrtps
daa
mov
fwait
notb
aad
sub
imul
jle
aam
pop
notb
sub
out
xchg
scas
mov
imul
movsb
inc
pusha
adc
dec
add
notl
dec
insl
or
mov
inc
fwait
cmc
xchg
jge
adc
sub
mov
push
pop
fmuls
rclb
orb
mov
mov
jns
sahf
mov
icebp
out
mov
mov
fstpl
bound
dec
adc
or
incb
subl
out
jae
lods
lahf
shrl
cmpsb
daa
cwtl
movsl
push
lods
add
fstpt
xchg
push
test
adc
dec
inc
fiaddl
roll
cmp
outsl
faddp
divb
mov
out
pop
daa
insb
ret
arpl
loop
add
aad
adc
outsb
push
xchg
outsb
mov
sub
mov
xor
dec
push
popa
test
fwait
sar
jno
rcll
or
dec
movl
sarb
mov
insb
cmp
jae
gs
pavgw
adc
pop
hlt
add
mov
push
cmpsb
gs
test
test
mov
mov
mov
pop
repz
or
add
bound
lahf
popf
pop
shlb
rclb
push
dec
dec
das
mull
inc
std
movsb
cmpl
mov
dec
jmp
fdivrl
lret
fs
cmpsb
and
cltd
sbb
adc
mov
mov
rorb
inc
cld
xchg
mov
mov
daa
cmp
push
pop
aad
and
jbe
pop
fcoms
lea
jne
int3
dec
nop
mov
lea
mov
adc
loopne
insl
in
xlat
jo
sbb
cltd
pushf
mov
std
mov
add
add
jg
cltd
cmp
push
outsb
mov
lods
sub
scas
sbb
pop
and
push
jl
fcoms
outsl
or
push
push
mov
cmp
outsl
pop
and
jne
push
divb
jecxz
mov
and
xlat
pop
adc
lret
bound
mov
xor
mov
mov
xchg
popf
mov
add
pop
notb
dec
movb
sbb
stos
cmp
fwait
in
push
outsl
jmp
scas
sub
loop
loopne
outsl
les
xchg
jnp
pop
push
xor
rcll
or
jmp
mov
daa
ret
push
xchg
sub
in
pop
fstps
jp
rcll
sub
adc
mov
jnp
jns
cmp
divb
mov
xchg
in
xchg
mov
cwtl
jg
push
adc
xchg
arpl
mov
jbe
in
mov
dec
push
popa
test
mov
pushf
bound
cmp
sarb
cli
and
inc
add
push
lock
xor
inc
in
jecxz
fstp
fsubs
push
es
adc
jge
mov
les
test
test
xchg
test
push
xchg
jae
test
sahf
sahf
sbb
fsts
sub
iret
mov
pusha
roll
aaa
shrb
je
es
scas
dec
jmp
or
jcxz
cmp
fstpl
adc
iret
xchg
xchg
stos
dec
jnp
mov
mov
sarb
mov
loop
ja
adc
stos
sub
ljmp
cmp
stos
mov
fidivl
xor
dec
es
push
fidivl
mov
in
outsb
out
and
ljmp
pop
ficomps
dec
xchg
adc
or
andb
loop
mov
pop
cmp
out
or
outsb
ljmp
fchs
pop
lahf
rcl
push
cwtl
xor
adc
or
sahf
std
jg
movsb
outsl
sti
sbb
xor
insb
jmp
cwtl
dec
shll
mov
adc
nop
aad
test
iret
dec
cmpsb
add
mov
or
mov
outsl
out
lods
and
mov
pop
fdivs
ja
int3
test
and
inc
movb
int
jl
fmulp
jmp
fucom
jo
xchg
rcr
rcrb
in
adc
mov
mov
add
nop
mov
pop
xchg
lahf
and
fcoms
xchg
xchg
int
dec
mov
sub
aam
std
jl
sbb
mov
outsb
out
xor
sub
frstor
pushf
jbe
shll
xchg
jmp
add
bnd
cltd
cmp
push
scas
cs
cmp
xchg
pop
sbb
fsts
pop
in
iret
push
int
lea
enter
sub
and
es
push
js
sahf
cmp
clc
dec
sbb
fbld
aas
jecxz
ficompl
adc
adc
push
je
lret
leave
test
pusha
lcall
and
and
cmp
lcall
push
cmpsb
pop
rol
inc
sarl
sbb
push
jne
imul
int
in
and
pop
mov
xchg
sti
push
sbb
sub
add
pop
mov
push
jne
test
arpl
popf
add
xchg
mov
xchg
stos
dec
int3
dec
movl
cli
mov
ljmp
jp
adc
jecxz
loop
cmp
cltd
or
outsl
xchg
adc
push
iret
push
mov
in
call
cmp
testb
lods
sub
jecxz
adc
pop
fwait
xchg
and
test
jb
call
pop
sbb
pop
jae
dec
push
and
pop
jmp
int
fisttps
shrl
dec
ds
icebp
lea
je
add
test
add
jp
xor
jmp
mov
adc
jae
rorb
movl
icebp
inc
clc
jns
pop
jnp
xchg
outsb
loope
add
fldcw
pop
arpl
inc
lret
or
and
test
mov
nop
dec
mov
mov
xor
dec
out
sub
int3
mov
int3
push
rcll
stos
xchg
mov
and
stos
cmp
nop
jae
outsb
or
push
push
push
std
pop
int
pop
jbe
mov
jnp
add
add
cmp
test
scas
mov
mov
push
pop
push
push
mov
outsb
ds
aad
out
sub
int
int3
adc
cli
mov
movsl
mov
jae
clc
fisttps
imul
jmp
sbb
insl
mov
jno
mov
sarl
mov
aaa
aaa
push
outsb
xor
outsb
ljmp
pop
adc
xchg
pop
dec
int
adc
test
xor
jp
jmp
fwait
jne
xor
jne
add
int
and
popf
xlat
out
nop
adc
xchg
lret
mov
mov
mov
mov
test
out
and
cmp
mov
dec
int3
mov
cmp
sub
fdiv
mov
insl
and
inc
call
movsb
pop
or
lock
or
or
add
xchg
mov
mov
cmpsl
mov
adc
add
fstps
mov
xor
inc
cmp
leave
dec
xor
int3
sub
test
pop
js
aad
jb
pop
xor
daa
add
pop
loope
push
pusha
pop
xchg
adc
mov
les
test
dec
mov
mov
pop
daa
std
xchg
lods
lock
push
and
sbb
push
push
rclb
push
inc
les
mov
idivl
adc
push
out
sub
nop
daa
fs
push
std
pop
mov
xchg
les
mov
jae
jno
add
xchg
mov
lcall
leave
mov
and
mov
push
int
mov
add
es
sub
rorb
fincstp
mov
outsb
and
inc
jmp
movsl
and
cltd
rcr
icebp
and
nop
cmovs
loop
adc
loop
mov
mov
mov
gs
insb
or
jo
add
mov
mov
ficoml
dec
xor
pop
dec
roll
adc
xor
aad
subb
in
loop
adc
cltd
sbb
cmp
mov
and
add
clc
arpl
scas
push
pop
mov
adc
pop
insb
or
movsl
test
mov
sar
pushf
mov
sbb
ficoml
sub
sahf
inc
jg
aas
cmp
jbe
imul
mov
stos
hlt
cltd
push
dec
rorl
jl
idivl
outsb
push
jo
and
add
mov
fcomps
mov
pop
lock
xchg
jecxz
mov
enter
popf
fstpl
xchg
enter
mov
outsl
jle
mov
dec
or
and
jg
and
jne
mov
jmp
jmp
in
and
in
dec
adc
pop
shrl
into
addr16
test
sti
ds
mov
mov
imul
clc
mov
fcoms
mov
bound
into
inc
xor
enter
loop
mov
lock
js
sahf
jae
mov
add
push
fs
jns
clc
sub
xchg
xchg
adc
push
into
add
stc
fistpll
mov
jns
cmpsl
sub
xchg
pop
mov
test
and
push
sbb
mov
push
xchg
jg
mov
dec
data16
rcrl
loopne
xchg
mov
jne
xchg
adc
pushf
jp
mov
lea
push
mov
cltd
cmp
dec
call
inc
adc
cmpsb
ljmp
add
dec
push
aam
add
mov
inc
ret
inc
add
push
scas
push
icebp
fs
or
test
sbb
sbb
aam
jnp
inc
cmpl
notb
xor
addr16
mov
push
test
add
mov
nop
xor
ret
sub
add
iret
ljmp
or
mov
loope
sbb
pop
push
add
or
hlt
out
int3
inc
popa
mov
adc
sbb
cld
sbb
and
cltd
cmp
psubusb
cmp
mov
ja
mov
jnp
jns
call
das
push
inc
pop
xchg
mov
outsb
jbe
jbe
lcall
push
inc
or
push
js
mov
xor
repz
lcall
mov
popf
cwtl
lret
and
shlb
push
into
test
or
incb
xor
in
aad
icebp
mov
jne
and
int
fstl
pop
cld
sbb
scas
dec
xchg
adc
out
icebp
add
les
mov
sbb
mov
in
adc
cmpsb
and
pop
mov
enter
dec
add
cmpsl
inc
inc
mov
fwait
jnp
mov
imul
cmpsb
hlt
call
mov
aad
mov
inc
xchg
adc
jecxz
imul
push
mov
imull
xor
scas
adc
adc
mov
fmuls
push
int
xchg
cmp
push
mov
rol
rolb
popf
jae
mov
out
outsl
lods
mov
pop
mov
lcall
loop
push
ja
lds
jnp
mov
mov
jmp
mov
mov
fwait
out
sub
mov
xchg
cli
mov
push
aam
push
push
into
dec
aaa
xor
inc
jg
sarb
pop
jbe
aad
movsl
clc
push
push
jmp
in
mov
sbb
cltd
out
insb
or
es
mov
fidivrs
sbb
mov
mov
mov
push
out
ljmp
sub
mov
mov
negb
insl
jmp
in
xchg
cltd
jle
cltd
inc
pop
pop
lods
adc
nop
inc
xchg
je
insb
jecxz
add
fwait
xchg
mov
aam
sarl
jno
iret
dec
or
fs
xlat
push
mov
lods
dec
xor
jb
inc
andl
fcoml
jne
int
xor
insb
std
pop
or
xchg
push
xchg
enter
icebp
cmp
or
mov
popa
aas
jecxz
in
dec
xchg
xor
aas
aaa
lods
sub
push
popf
sub
bound
or
sub
lcall
adc
into
int3
test
ja
inc
ret
sti
inc
mov
and
pop
mov
push
int3
repnz
cwtl
rol
pop
fisubs
inc
enter
cli
shlb
cmp
lock
fs
mov
arpl
and
test
fmulp
cs
xchg
ror
adc
inc
inc
ret
test
outsl
and
jb
mov
jb
mov
sbb
arpl
sbb
pusha
pop
js
jae
push
into
sub
add
fidivrs
xor
jmp
hlt
outsl
dec
test
es
aas
sbb
and
push
xor
daa
ret
and
movb
jge
idivl
jnp
js
outsl
mov
lods
leave
fldt
inc
pop
dec
pop
in
xlat
js
push
push
adc
xchg
jnp
inc
clc
test
aaa
out
test
cmp
mov
and
sahf
xchg
sub
cmp
dec
mov
iret
dec
cmp
mov
movb
cmpsl
icebp
pop
aad
imull
lock
adc
arpl
movb
pop
push
aaa
mov
mov
leave
or
ret
lods
and
cmp
cltd
cmpsl
pop
cli
jne
das
sub
xchg
pop
mov
mov
push
sbb
int3
dec
enter
add
popf
cld
xor
ja,pn
insl
testb
data16
cltd
inc
pop
pop
mov
adc
imul
inc
mov
xor
mov
or
mov
add
loop
or
fs
dec
push
mov
pop
mov
inc
mov
ret
fldenv
jne
movsb
loopne
int3
push
inc
push
int
and
sbb
lock
xchg
adc
cmpsl
mov
insb
or
nop
inc
add
idivl
xchg
mov
push
mov
xchg
adc
pop
mov
jmp
push
dec
leave
jl
cmpsl
ret
inc
push
and
cmpsl
cmpsb
scas
pop
and
fsubrl
bound
lahf
jo
pop
cltd
lcall
nop
or
stos
xchg
xchg
mov
cmp
mov
test
adc
scas
outsb
dec
cs
imul
test
mov
int
popf
mov
push
ss
add
pop
out
mov
xchg
dec
ljmp
lahf
lcall
cmp
adc
sbb
jg
outsb
lcall
mov
pop
sbb
sbb
mov
dec
cmp
sbb
rorl
pop
sub
mov
mov
pop
icebp
xor
in
es
out
push
test
movsl
adc
lcall
nop
sti
push
out
mov
outsb
add
add
mov
sbb
mov
aad
sahf
pop
fwait
xor
sti
jns
push
mov
decl
incb
inc
ret
mov
jnp
xor
imul
neg
pop
arpl
fsubl
cmc
xchg
xchg
int3
sbb
push
mov
or
jo
fidivrs
loop
push
xchg
mov
repnz
mov
aaa
cmpsl
loop
jmp
fwait
adc
mov
push
mov
dec
or
inc
inc
jg
cld
and
rcll
icebp
sahf
pop
mov
insb
out
addr16
fwait
jecxz
imul
mov
adc
mov
sub
cmpsb
in
inc
mov
mov
mov
pop
push
scas
das
lods
sub
cmpsl
inc
pop
pop
or
pop
push
add
inc
xchg
int3
or
inc
lods
sub
add
sahf
dec
dec
lahf
push
call
rcr
cmp
pop
xchg
out
push
cmovs
push
jmp
outsb
add
fcomi
in
cmp
xor
shr
mov
jmp
mov
sbb
push
pushf
push
and
inc
mov
inc
cltd
mov
mov
div
jns
stc
lods
sbb
dec
iret
jmp
int
and
pop
fcompl
ret
rorb
hlt
xchg
adc
cs
push
push
jo
add
std
xor
mov
mov
sub
add
in
sbb
pop
push
push
rcll
int
or
xor
jnp
inc
inc
rolb
ret
cmc
jbe
push
mov
insl
arpl
in
popa
jp
push
inc
sbb
leave
adc
inc
mov
push
sub
das
lods
loopne
jnp
cmpsb
mov
mov
into
test
rcll
roll
cmpsb
leave
dec
mov
lret
cs
leave
sub
sub
xchg
outsb
sub
into
imul
jecxz
pop
xchg
shll
jne
out
in
dec
ss
xor
popa
popa
pop
daa
lods
sub
add
and
sahf
mov
sbb
test
pusha
cs
aaa
push
imul
add
ret
mov
test
mov
dec
inc
push
in
cmpsb
inc
pop
aas
cld
mov
adc
jae
idivb
std
flds
cli
inc
xor
xor
xchg
mov
and
fwait
lds
popf
sbb
test
mov
sbb
and
cmc
bound
sbb
push
jg
les
add
push
bound
jns
jp
sbb
mov
jle
int3
addr16
jno
jmp
mov
stc
adc
out
or
insb
xchg
mov
sbb
xchg
xor
fisubrs
mov
out
pop
push
int3
add
push
movsb
fdivrs
lcall
mov
xchg
int
mov
jnp
inc
cwtl
lock
xor
pushf
ja
movsb
stos
fs
add
or
cmp
stc
fildll
add
dec
inc
repnz
sbb
inc
or
stos
pushf
imulb
arpl
push
fwait
xlat
lret
inc
stc
pop
cltd
movb
xchg
inc
pop
lahf
outsl
mov
loopne
add
test
xor
je
xor
je
rorb
daa
jmp
adcl
mov
push
fidivl
or
aaa
into
jns
pop
shll
mov
xor
call
inc
pusha
inc
adc
push
push
jnp
push
test
and
sbb
push
fidivrs
jo
lods
test
mov
rolb
jae
push
push
int
lret
in
sub
push
ret
inc
shrb
div
jne
xor
jmp
jmp
add
pop
fsubl
xor
mov
rorl
xlat
lea
add
dec
add
cmp
pop
hlt
jno
test
es
mov
cmp
sbb
adc
shrb
sub
mov
jl
mov
shl
fidivl
into
mov
int
std
loop
jo
cltd
mov
cli
nop
ljmp
in
testb
ss
jns
ss
sub
mov
push
sbb
pop
jnp
fdivl
push
jne
int3
push
leave
dec
enter
hlt
sub
jl
stos
mov
jne
adc
test
dec
test
jg
lea
sbb
addl
mov
mov
mov
daa
data16
sub
lret
out
and
sbb
bound
mov
movl
std
icebp
sar
cmp
outsb
push
fbld
push
int3
dec
push
lret
sbb
jo
fdivr
push
jno
imul
jl
imull
mov
sbb
xchg
stos
sub
mov
ficompl
ficompl
negl
adcb
sbb
inc
inc
pop
jg
sub
jae
subb
push
and
sbb
jp
pop
dec
enter
pop
je
fcoms
mov
mov
dec
imul
fidivrs
scas
pushf
mov
xor
push
xchg
lods
fldenv
cmp
jle
dec
inc
roll
jb
shl
js
pop
negl
notl
lret
test
loop
fldl
std
add
lret
jae
or
rorb
jo
aas
mov
mov
fcompl
and
add
adc
rcrl
or
mov
aas
jl
cmc
fwait
jge
jle
lea
std
push
imul
arpl
pause
rorb
mov
aas
shll
xor
lea
xor
sbb
xor
sahf
xchg
mov
aam
xchg
outsb
mov
pop
mov
lret
jbe
in
jb
outsb
mov
jo
or
pop
gs
add
and
stos
xchg
xchg
adc
icebp
xchg
jns
std
inc
hlt
leave
cmp
cmp
dec
loope
dec
sbb
sub
mov
pop
ficompl
and
dec
sub
shrl
jle
or
jbe
cs
lods
lds
xchg
insb
leave
mov
inc
dec
mov
cltd
jmp
cmpsb
jg
mov
mov
xchg
xor
sub
movsb
sbb
popf
fwait
adc
rclb
cmp
clc
cmpsl
inc
lods
mov
push
mov
movsl
shlb
xor
jne
push
dec
sbb
bound
fyl2xp1
xchg
dec
xchg
std
lds
rcl
cmp
orb
fidivrs
mov
jne
scas
lods
sub
stos
xchg
inc
cmp
jge
push
xchg
xor
mov
push
mov
ffree
aas
js
mulb
push
jmp
in
mov
sbb
adc
lock
xchg
xchg
cmp
jns
arpl
aaa
mov
ja
xor
lea
and
rolb
rcrl
xchg
lds
in
std
jle
mov
mov
hlt
and
ljmp
inc
ficomps
pop
lods
hlt
cmp
dec
cmpsb
dec
ret
sub
test
sub
or
fstpt
pop
jl
sub
das
lods
loopne
jl
cmpsb
or
popf
loop
dec
aam
sarl
inc
inc
int
lret
mov
roll
movsb
out
rorl
cmp
lds
imul
add
pop
hlt
mov
xchg
test
insl
cmc
mov
pop
xor
pop
xor
jno
inc
cltd
cmp
and
ret
jge
push
or
test
and
inc
mov
sti
inc
popf
out
imul
push
int3
ljmp
adc
rorl
aad
xchg
mov
fcmove
out
insl
movl
pop
mov
mov
imul
pop
inc
sbb
push
rcll
jo
xchg
push
inc
inc
movb
cltd
repz
jl
jmp
pop
hlt
jae
xchg
jns
scas
loopne
jcxz
pop
in
fstp
fadd
inc
sbb
movsl
shl
adc
mov
test
mov
mov
mov
pop
pop
and
mov
jbe
ds
stos
dec
das
jnp
pop
rolb
int3
inc
fstpt
inc
sub
out
mov
fidivl
pop
push
sti
fcompl
adc
insl
inc
dec
outsl
mov
cmp
filds
out
mov
xor
mov
pop
add
inc
es
xor
push
jge
lock
cs
leave
cs
fwait
jnp
push
iret
icebp
jo
arpl
imul
xchg
adc
std
inc
jmp
leave
add
mov
pop
aas
mov
scas
xor
push
pusha
jb
cmp
bound
das
sbb
pusha
cli
xchg
aaa
mov
mov
mov
div
inc
and
fisttps
inc
fstpt
in
jl
inc
rcll
xchg
sub
loopne
jb
addr16
xlat
jo
ja
lods
mov
pop
data16
lcall
popf
pop
adcl
push
femms
xchg
or
mov
push
scas
jbe
pushf
std
jl
je
cwtl
cli
iret
dec
mov
sti
pop
pop
inc
loop
aam
test
rol
movsb
jo
inc
cwtl
hlt
mov
shll
jno
mov
pushf
repz
lcall
mov
push
inc
mov
cmp
cmpsl
leave
dec
mov
cmpsb
jl
inc
es
lods
idivl
jne
cld
into
fisttpll
movsl
jmp
push
out
cld
sbb
gs
push
xchg
insb
lea
add
sub
pop
mov
mov
xor
daa
cmpsb
adc
sbb
add
inc
xor
push
adc
xor
and
subb
sub
pop
xchg
and
jmp
ljmp
les
mov
jnp
xchg
mov
xor
mov
imul
movsb
and
pop
notl
mov
inc
les
fcompp
adc
mov
out
out
sub
sbb
cmp
fcmovne
sbb
call
jno
movsb
incb
lcall
adc
in
sub
rcrb
adc
sub
xor
pop
mov
add
inc
roll
pop
into
mov
jbe
xor
jmp
ret
arpl
mov
pushf
rcll
sti
les
adc
cmp
aaa
stc
fidivrl
adc
add
or
push
add
or
out
push
sbbl
inc
add
and
push
cmpsl
scas
push
jne
pop
ss
sbb
test
dec
fsubl
mov
insl
mov
mov
es
fistpll
out
or
test
cmc
sbbl
xchg
mov
cmp
pop
jns
push
sub
pop
cli
jnp
cwtl
call
sub
call
xor
ss
shl
xchg
jp
icebp
mov
push
test
outsb
arpl
jecxz
aam
mov
popa
repnz
xor
cmp
jmp
shll
cltd
mov
aad
cltd
xor
sbbl
sbb
enter
sbb
pop
ret
push
arpl
sahf
call
js
jp
dec
xchg
add
xchg
add
outsb
lea
jle
lea
xor
testb
popa
lods
gs
sub
mov
push
dec
test
nop
lret
dec
add
movsl
cmp
stos
hlt
insl
cmpsb
out
pop
jecxz
fs
dec
add
lcall
push
subl
or
insl
jne
jmp
cltd
mov
mov
scas
cmpsb
std
cwtl
in
ja
and
rorb
dec
int3
or
cmpsb
jp
inc
jg
popa
clc
inc
jl
aam
mov
dec
adc
loopne
inc
pop
sbb
sbb
or
or
int3
imul
sbb
xchg
pop
loop
pop
stos
sub
jns
les
xchg
aaa
rorl
int3
push
adc
sub
stos
pusha
or
mov
jne
fs
inc
jmp
push
imul
pop
push
mov
rclb
add
jmp
test
outsl
aas
mov
bound
addb
fildl
movsl
and
xlat
aad
ds
add
sbbb
sub
jl
or
rcr
loope
lock
das
cmp
imul
jns
add
push
adcl
repnz
dec
scas
add
mov
mov
mov
jbe
aam
sub
mov
divl
push
rclb
bnd
leave
mov
test
pusha
dec
sbbl
out
outsb
in
pop
push
sbb
int3
dec
mov
xchg
repnz
jne
xchg
imul
lcall
aaa
aaa
mov
sub
in
sub
and
mov
pop
scas
push
xor
ret
inc
andb
mov
jns
mov
jo
push
xor
out
call
fbld
dec
xchg
jp
icebp
mov
push
xchg
push
xor
loope
sub
sub
scas
sub
nop
cwtl
mov
in
loop
or
fs
or
xchg
jnp
js
jne
mov
out
insl
jmp
fs
push
fisttpl
adc
push
daa
or
mov
mov
imul
pop
fs
stos
and
push
xor
rorb
mov
jnp
sahf
sub
icebp
jae
fsubs
mov
dec
in
jmp
sahf
jle
pushf
mov
xchg
movsb
out
or
int
add
mov
pop
cmp
cs
gs
xchg
jge
mov
cmpsb
mov
cmp
sbb
mov
fildll
fs
mov
jbe
je
in
lds
fcoms
mov
popf
jle
adc
pop
pop
mov
and
outsb
mov
jmp
out
add
cmc
jb
test
stos
mov
sbb
lods
mov
rclb
jb
xchg
push
inc
inc
movb
stc
jge
movsl
add
sbb
jmp
sahf
pop
lahf
in
popa
ljmp
iret
ja
jae
ret
jle
icebp
clc
inc
push
popa
aas
cmp
xor
add
mov
adc
pop
mov
xor
push
inc
inc
les
pop
aad
jl
es
repnz
scas
into
jmp
cmc
fwait
xchg
mov
shlb
push
or
mov
je
rcrb
test
outsb
fdivrl
jbe
in
mov
imulb
in
adc
fildll
pop
mov
pop
sbb
mov
xchg
inc
sbb
jle
sbb
and
mov
sub
push
sbb
testl
cld
add
ja
add
mov
jne
xor
push
repnz
and
out
mov
inc
mov
dec
xor
popa
cmp
mov
mov
imul
jbe
test
dec
insb
xor
push
pusha
fstpl
rorl
xchg
call
stc
add
ret
mov
pop
xor
mov
addr16
push
xlat
pop
movsb
and
ret
pop
push
mov
dec
or
ret
mov
add
hlt
jne
sub
mov
jecxz
and
fistps
and
ret
mov
push
dec
outsb
or
xor
lock
sub
xor
and
test
mov
sub
dec
xchg
push
dec
inc
cmp
inc
std
movsb
lock
divb
cmc
push
je
out
mov
sbb
adc
adc
inc
mov
mov
sbb
lods
lcall
and
cmp
and
adc
push
jns
ret
leave
test
sti
jl
cmp
jne
jae
repnz
push
pop
jecxz
in
int
lret
xchg
mov
adc
mov
cmp
sbb
jp
jae
popa
cli
jne
lods
sub
xor
cltd
mov
push
push
jne
xchg
adc
leave
dec
das
jnp
cld
stos
mov
movsl
cmpsl
movsl
cltd
adc
loope
jmp
mov
fwait
jge
rcr
fcoml
adc
or
mov
aad
adc
push
pop
mov
aad
xchg
xor
pop
scas
dec
xor
ret
inc
lods
cmpsl
add
mull
icebp
pop
iret
outsl
insl
daa
call
fbld
imulb
pop
and
dec
enter
ds
adc
cmp
sub
mov
imul
arpl
fstps
loope
mov
mov
xlat
and
dec
xor
mov
cmp
jne
jae
sub
jmp
call
fcompl
add
nop
pmaddwd
jno
fs
add
nop
cs
stos
xor
out
mov
loop
aam
xlat
mov
punpcklbw
dec
inc
add
pop
scas
jge
sarb
sub
and
dec
call
mov
pop
mov
xchg
sti
push
sbb
cmc
or
addb
scas
test
lret
daa
mov
enter
jmp
shll
sahf
pop
add
xchg
lods
aad
mov
push
fdivrs
inc
sarb
inc
and
scas
jnp
sub
push
cmpsl
and
pop
fcompl
inc
mov
adc
jmp
push
int3
in
xchg
or
outsb
addb
cwtl
xor
xor
sub
add
popf
push
scas
pop
jae
roll
cld
dec
cmp
mov
pop
ftst
adc
ljmp
pop
jmp
pop
adc
adc
ret
lea
jg
ss
cmp
jl
and
mov
inc
movsb
mov
out
in
mov
pop
mov
sub
or
cmpsb
inc
lcall
jbe
aad
xor
in
leave
ljmp
and
jg
sbb
xchg
pop
xchg
cltd
scas
mov
inc
out
call
ja
scas
popa
nop
cmp
adc
mov
aas
cmp
fdivrl
les
stos
dec
mov
aas
mov
mov
insb
pop
test
fs
lahf
insl
jmp
test
pop
dec
enter
push
xchg
inc
push
push
dec
enter
ds
repz
jno
aaa
test
push
rcrb
fstps
push
ds
mov
int
push
std
pop
movsl
movb
dec
push
sub
jns
sahf
imul
imul
fs
mov
and
sbb
sbb
jmp
js
scas
mov
fdivr
mov
mov
mov
xchg
xchg
decb
dec
movl
outsl
xchg
aam
repnz
clc
xor
sbb
addr16
xchg
add
cwtl
ret
mov
inc
push
inc
mov
jge
cmp
sbb
mov
jl
adc
mov
popa
shll
xchg
push
mov
dec
mov
inc
add
mov
adc
in
ljmp
into
fcompl
stc
add
jp
outsl
pxor
out
clc
pushw
popa
aas
rcr
loop
mov
nop
shlb
jecxz
es
test
add
pop
fs
aad
insb
dec
ror
adc
xor
mov
stos
repz
push
icebp
mov
push
les
jb
data16
mov
sti
inc
fsubs
add
test
mov
mov
mov
adc
fnstsw
dec
sbb
fwait
xchg
xor
adc
or
cli
jns
fsub
push
jo
mov
int3
mov
popa
call
decb
sub
adc
bnd
sbb
pop
cvttps2pi
mov
data16
rcrl
mov
sbb
adc
lods
dec
add
inc
add
dec
inc
outsb
pop
cld
cli
xor
pusha
push
outsl
insl
xchg
push
loop
bound
jne
adcb
inc
adc
xchg
pop
les
jmp
cmp
ljmp
int3
adc
sbb
or
xor
push
and
lret
mov
das
sahf
jnp
mov
mov
jmp
int3
pop
ror
sub
movsb
jge
and
lcall
push
mov
add
addr16
mov
movsb
adc
jb
xor
mov
push
add
mov
mov
mov
mov
add
dec
das
or
inc
sub
out
sbb
cmc
inc
push
loope
out
push
and
dec
in
inc
cltd
dec
nop
lock
push
sbb
or
les
mov
xor
stos
lods
xlat
in
call
push
dec
je
sbb
loope
rcll
dec
movl
sti
jns
repnz
pop
mov
scas
mov
inc
loope
mov
add
push
call
cmpsl
mov
ds
mov
push
fidivrs
jno
cwtl
xchg
xchg
xchg
cltd
test
cmp
mov
add
lcall
leave
aas
rorb
icebp
sbb
idivl
divb
xchg
lods
pop
es
mov
stc
pop
or
incb
inc
pcmpeqb
push
lret
inc
cli
shll
icebp
aad
insl
dec
je
enter
shr
pop
push
xchg
jecxz
dec
jle
rcll
push
xchg
cmp
mov
out
stos
inc
leave
aad
fwait
jnp
fsubr
fwait
mov
push
rcrl
mov
pop
les
nop
shrl
push
dec
jmp
mov
sub
jmp
repnz
mov
mov
and
inc
mov
cmp
cld
les
inc
xchg
sbb
xor
pop
mov
dec
and
pop
or
inc
pop
rclb
xchg
inc
fnstsw
mov
mov
pop
lock
gs
cmp
mov
lods
lods
push
int
or
addl
inc
popa
mov
hlt
jp
mov
jo
out
lds
or
popa
push
add
aam
mov
or
out
inc
pusha
mov
jl
mov
scas
push
jae
test
mov
mov
bound
lods
mov
das
int3
lret
ret
leave
inc
ljmp
call
fstps
xlat
aam
push
dec
daa
xchg
pop
xchg
or
jmp
cli
push
lret
or
cmp
inc
fdivrl
insb
ss
xor
mov
cmp
jmp
test
pop
mov
int
push
shlb
sub
cmp
inc
cmp
jne
jo
jae
mov
dec
jl
push
loopne
inc
xchg
pop
js
out
lea
xchg
fidivrs
pop
pop
mov
fcoms
cs
rclb
stos
pop
int3
or
movsb
xchg
popf
push
mov
sbb
xor
cmpsb
stos
cmp
fnstsw
jae
xchg
push
push
dec
push
call
fidivl
mov
jbe
loopne
jo
movd
mov
mov
xchg
scas
lock
push
insl
or
mov
mov
adc
lret
xor
dec
mov
fincstp
cmp
loope
jmp
fcompl
sbb
mov
scas
outsl
add
mov
mov
gs
push
rcrb
sub
mov
and
ficoms
in
push
iret
cmp
enter
xor
test
repnz
shl
js
xchg
insl
jmp
push
int
ret
fcomi
mov
cld
cmovs
add
mov
push
mov
imull
negb
fbld
jo
subb
loop
xlat
imul
xor
pop
xchg
pop
sub
xor
inc
adc
negb
jmp
xor
in
dec
cmpsl
ret
push
loope
mov
addr16
push
mov
inc
mov
sbb
lea
out
mov
sbb
mov
xlat
mov
popf
popf
aad
lahf
or
jmp
pop
xor
ret
inc
and
ds
inc
mov
sub
push
filds
imul
fists
push
test
notl
incb
arpl
cmpsb
adc
insb
mov
mov
and
sub
cmpsl
mov
pop
and
jp
fisttpl
sbb
push
mov
imul
inc
sarb
inc
movsb
and
outsb
outsl
jmp
in
ret
inc
dec
dec
xchg
mov
adc
xchg
adc
add
loopne
push
lds
xchg
ljmp
xor
popf
dec
movsl
cmpsb
and
and
adc
push
iret
cmp
std
xor
push
add
cmpsb
sbb
adc
in
fistpll
push
pop
mov
xor
xchg
xor
inc
inc
or
jp
aas
jno
je
cmp
push
cmpsb
fbld
jnp
fcomps
xor
shrl
dec
and
inc
sbb
xor
ja
nop
test
imul
nop
cmpsb
sbb
jg
jo
inc
mov
add
cmpl
cmp
xchg
icebp
mov
aas
int3
or
pop
and
jg
and
scas
sub
or
dec
add
lret
sbb
mov
clc
xchg
dec
pop
aam
sbb
je
pop
dec
fistps
push
fs
xchg
sub
xchg
iret
adc
adc
pop
or
in
mov
push
testl
ljmp
sub
jnp
push
ret
pusha
ret
push
xchg
lahf
iret
push
cli
sub
scas
aam
ljmp
in
ja
popf
pusha
cltd
div
jbe
leave
mov
or
jne
cmpsl
and
xor
xor
mov
pop
xchg
push
mov
sbb
test
lret
dec
and
sbb
inc
cmpsl
add
mov
push
jo
or
jecxz
popa
fdivrs
notb
paddw
push
dec
std
mov
fstpt
aam
int
sub
sub
jmp
popf
loop
sarb
adc
into
push
jmp
inc
ret
sub
shll
jbe
repz
ljmp
je
fcompl
or
int3
adc
push
loop
or
andb
mov
mov
push
cmp
push
addr16
mov
inc
sbb
scas
push
rclb
dec
in
dec
notl
sarb
inc
add
pop
arpl
popa
out
shrl
or
sbb
mov
dec
scas
push
mov
and
jmp
hlt
sub
add
xchg
scas
push
jae
mov
add
add
aad
mov
lret
push
lods
test
popf
mov
push
sub
jns
test
or
mov
xlat
jmp
je
test
in
mov
mov
push
mov
lods
sub
push
lret
xchg
movsl
cmp
rclb
add
dec
aam
ja
inc
jbe
jg
pop
imul
mov
insl
sahf
out
ds
inc
in
ficomps
cmp
mov
adc
dec
out
test
and
inc
xchg
mov
lret
push
mov
push
inc
sbb
rclb
or
nop
or
jg
sar
jns
ljmp
jbe
test
dec
adc
lcall
pop
lea
clc
ja
test
outsb
insb
imul
sbb
lea
cmp
or
jns
push
rorl
or
dec
or
fiaddl
jl
add
loopne
aam
xor
call
add
cltd
sbb
mov
jae
int3
dec
sbb
jecxz
in
clc
rorb
lods
lods
sub
xor
data16
fwait
mov
and
xchg
mov
push
or
inc
jge
enter
inc
leave
sub
mov
out
outsb
mov
int
std
loop
jo
cltd
pushf
mov
nop
sbb
dec
in
xchg
mov
mov
pop
movsb
xchg
scas
in
int3
add
sub
sbb
jns
push
rcll
xchg
dec
leave
dec
movsb
mov
ds
pop
movsb
mov
jae
in
std
insb
ljmp
cmpsb
sarb
mov
adc
inc
or
jmp
cmp
cmp
cmp
jg
xchg
xor
mov
push
lock
andl
or
cmpsl
push
rclb
jb
xchg
push
and
inc
les
pop
jp
es
jne
dec
outsb
idivl
stos
dec
imul
fcompl
rcll
std
add
ret
jmp
out
in
cmp
mov
adc
xor
out
or
insb
out
lahf
and
pop
or
mov
rorb
cs
push
or
stc
jp,pt
mov
je
subl
cwtl
xchg
adc
sbb
mov
mov
push
fiadds
adc
cmp
scas
cs
into
mov
ljmp
and
mov
and
test
aam
pop
daa
inc
inc
mov
idivl
sahf
jae
pop
pop
int
xor
lret
imul
xchg
int3
jg
sbb
inc
fsubs
scas
cmc
cmp
jmp
hlt
outsl
pop
daa
cmpsl
mov
fstcw
rcll
mov
dec
mov
int
sbbl
jp
sub
out
jnp
sub
call
mov
fcompl
popa
adc
jne
out
jns
add
mov
mov
sbb
cld
test
cmp
and
pop
aad
negb
adc
lret
mov
stos
inc
pop
jg
sub
popf
fs
outsl
jmp
push
rcll
outsl
xor
notb
xchg
nop
adc
out
insl
mov
mov
les
scas
lods
jecxz
pushf
divb
fwait
daa
test
push
aas
cwtl
lds
enter
enter
jl
idivl
jne
xor
insl
jmp
fs
pusha
ficomps
mov
adc
adc
or
and
xor
mov
insl
cmp
stos
sub
and
sbb
rorb
int
mov
mov
arpl
aas
clc
js
cmc
mov
in
jbe
test
in
movsl
popa
pop
inc
inc
xchg
arpl
push
pause
shrl
enter
mov
add
repnz
lods
out
pop
adc
mov
fwait
pop
pop
fsubs
adc
int3
add
invd
roll
es
mov
jns
clc
mov
jo
pcmpeqw
call
and
sbb
xchg
int
adc
lret
decb
jmp
inc
std
cmp
mov
fldt
test
data16
xchg
cwtl
lds
enter
stos
lods
pop
cmp
idivl
outsl
out
insl
jecxz
mov
loopne
pop
cltd
mov
adc
aad
inc
or
test
lds
aas
mov
mov
jb
sub
test
mov
sub
xor
push
jne
lods
or
push
fnstenv
inc
jg
hlt
mov
jae
in
xchg
out
sbb
aas
jecxz
pop
or
andl
inc
cmp
mov
mov
pop
sbb
mov
push
sahf
scas
sarl
dec
movl
jg
adc
lock
out
rcrl
jmp
popf
jle
sbb
push
lcall
mov
or
jo
insl
repz
mov
aaa
xor
in
and
imul
sub
add
pushf
fiaddl
mov
orl
rorl
popf
cld
mov
ret
outsl
mov
dec
dec
pop
xor
ficomps
cmp
leave
cmp
adc
adc
in
lds
lock
jmp
sbb
jmp
push
cvtdq2ps
xor
jecxz
mov
fnstsw
inc
xchg
cmp
jmp
jnp
in
repz
insl
jae
hlt
lods
dec
push
imul
rolb
mov
xchg
lea
add
inc
fcompl
call
fdivl
mov
fwait
daa
gs
mov
push
or
adc
push
push
movl
cld
pop
jb
insb
jge
out
mov
ds
push
adc
cmpsl
mov
pop
xchg
lea
push
mov
or
xchg
lea
inc
pop
pop
test
jne
dec
pop
xor
pop
or
mov
fisubrl
adc
inc
cmpsb
enter
sarb
js
jg
push
out
iret
fsts
stos
daa
iret
sub
fistps
push
out
ror
push
dec
in
popa
inc
lock
std
js
xor
mov
cmpsb
jmp
dec
or
ficoms
inc
mov
mov
fisubl
jns
mov
pop
pop
push
scas
sub
jecxz
loopne
adc
cltd
sbb
aad
jl
mov
outsb
mov
jb
sarb
mov
lcall
push
pop
pop
stos
ds
in
push
int
adc
sub
jns
ljmp
je
leave
mov
cmpsb
and
xchg
push
dec
out
adc
mov
ret
xchg
mov
cmpb
fdivl
test
fistpll
daa
loope
xlat
fcoms
aaa
dec
lods
mov
xchg
inc
inc
roll
mov
cmp
out
jo
pop
orl
fbld
popf
fists
cwtl
add
mov
add
mov
xor
mov
fs
mov
movb
xchg
adc
push
int
test
mov
xchg
push
inc
std
sti
xor
imul
fs
mov
ret
adc
lea
mov
mov
jge
jo
out
lret
sub
sahf
prefetchw
jp
cmpb
sub
and
loope
ret
ret
negb
mov
fdivl
ljmp
add
jmp
sbb
adc
aad
imul
jne
movsb
cltd
cmpsl
mov
cld
fsubrs
scas
or
dec
cli
fisttpll
test
ljmp
jb
aad
sub
ret
jl
dec
leave
mov
push
or
xor
test
xchg
aam
div
test
fsubrp
in
sub
or
in
or
pop
pop
insb
out
inc
push
cltd
mov
lock
cmp
jmp
push
mov
push
pop
cmpsb
sbb
mov
fcomps
mov
push
out
mov
xor
ss
popf
iret
pop
lahf
mov
stos
shlb
push
addr16
shl
dec
pushf
mov
push
push
imul
jle
fildll
xchg
hlt
mov
aaa
data16
bound
lods
xchg
pop
push
and
jg
adc
or
dec
or
dec
mov
addr16
pop
inc
loopne
xchg
jge
sahf
pushf
pop
mov
faddp
mov
adc
cmc
scas
outsl
or
ret
daa
inc
lcall
xor
mov
add
mov
add
push
rorb
adc
stos
dec
movb
in
jl
mov
cmp
out
icebp
sub
xchg
pop
js
jl
push
into
mov
nop
jnp
call
aas
xor
push
adc
push
push
lea
xlat
add
jl
fstps
pop
shrd
lods
dec
lret
dec
imul
adc
jno
jo
dec
idivl
ret
arpl
jmp
push
xchg
xchg
mov
dec
jmp
rorl
pop
mov
mov
xor
mov
lea
imul
mov
push
int
push
mov
sub
enter
mov
xor
repz
fidivl
ret
cld
into
sahf
fisubrl
adc
shlb
cmp
ss
mov
pop
sub
or
stos
jmp
outsb
pop
fcoms
push
jnp
mov
inc
les
dec
xor
leave
mov
pop
repnz
mov
push
call
fistpll
fistl
dec
sub
rorb
push
push
test
scas
mov
xorl
scas
stos
test
data16
push
push
rorl
mov
cmpb
sub
in
inc
rolb
jp
adc
jne
xor
insb
insl
jmp
lcall
xchg
arpl
fst
outsl
das
jae
mov
popf
add
pop
pop
xor
adc
mov
pop
fdivrs
dec
xchg
std
mov
or
jle
shlb
jbe
jns
sub
or
call
iret
cmpsb
cmp
xchg
push
rcr
sahf
mov
mov
jae
sub
add
sarb
xor
stos
cmpsl
es
data16
pop
fwait
add
xchg
sbb
rolb
adc
test
dec
jp
jns
cmp
out
insl
xchg
jcxz
mov
sbb
dec
mov
rorb
add
loop
push
xor
bound
gs
das
lcall
xlat
daa
or
roll
add
inc
ljmp
xchg
mov
cli
jnp
xor
imul
dec
push
push
dec
cmpb
fsts
nop
adc
sub
out
leave
inc
jp
mov
test
out
dec
xor
mov
cltd
adcb
fistps
adc
push
sarb
mov
iret
icebp
andl
hlt
jae
and
push
cltd
dec
insb
arpl
int3
dec
push
jl
sbb
fiadds
sub
or
jmp
outsb
mov
jmp
lahf
lret
xchg
xor
and
aam
or
mov
and
pop
pop
cwtl
mov
push
int
xor
ret
and
jg
ret
inc
ljmp
mov
and
fs
lcall
xchg
adc
cmp
adc
jge
xchg
aad
mulb
out
and
stos
sub
or
adc
icebp
icebp
dec
int
fdivrl
xchg
sti
jp
sub
lock
outsl
pop
ret
or
popa
xchg
mov
scas
lods
pushf
repz
add
movzwl
aas
icebp
xchg
test
mov
aaa
xor
insl
and
jmp
pop
cmpsb
push
cmp
mov
dec
int3
je,pt
cmpsb
ret
stos
divb
cltd
jl
sbbl
sti
push
lods
sub
loop
fnstsw
inc
sbb
mov
jnp
add
xchg
cmp
jl
shrb
lods
sub
popf
or
cld
add
fxch
in
push
aam
ds
aad
jp
inc
or
call
jl
and
lods
xchg
out
jnp
sub
jecxz
aad
ljmp
xlat
xor
nop
xadd
cmp
push
add
mov
mov
and
and
flds
pop
cwtl
not
rclb
dec
pushw
inc
mul
sar
jg
pop
inc
mov
out
arpl
xchg
out
addr16
loopne
fstl
roll
cltd
idivl
addl
pusha
clc
cwtl
mov
scas
mov
pop
jne
dec
movsl
movsb
xchg
data16
add
aad
scas
fistpll
sbb
jge
jp
adc
aaa
scas
lea
call
pop
fstpl
insl
push
xchg
xor
push
iret
sub
mov
outsb
mov
mov
aaa
sub
mov
xchg
cmpsl
xor
movsl
fs
js
iret
push
adc
cmp
ret
enter
js
mov
adc
scas
ljmp
lahf
inc
ficomps
xchg
xchg
ds
icebp
ss
fisubrs
pop
lods
sahf
mov
mov
js
xor
stos
sub
dec
add
push
scas
pusha
cmp
dec
lret
test
jmp
add
mov
rcrb
pop
das
pop
push
and
xchg
fsubrs
fsubl
xchg
cmp
adc
or
mov
test
scas
movsb
pusha
sub
arpl
xchg
pop
stos
sahf
idiv
ficompl
leave
mov
aaa
int3
push
scas
or
ret
mov
aad
pop
je
jae
push
popa
cmpsb
jb
jbe
fs
cmp
loopne
cltd
xchg
adc
test
or
jae
pop
xor
jg
mov
sub
and
sbb
xchg
add
popf
test
int
sub
cmpsb
clc
test
and
cli
jns
loop
push
jb
arpl
ljmp
in
dec
xchg
cmp
inc
push
shr
mov
add
ret
or
pop
imul
mov
pop
add
mov
iret
pop
xor
cmp
fmul
dec
mov
fs
cmp
icebp
cmp
jbe
sahf
jmp
xor
fsubl
out
fs
loopne
dec
xchg
push
xchg
andl
adcl
add
add
add
cmpl
mov
push
jo
adcl
push
push
push
mov
mov
inc
jg
ret
jbe
mov
add
cli
push
sub
aam
popa
ffree
adc
testb
dec
outsb
mov
inc
std
jmp
mov
mov
fsubr
xchg
es
cltd
test
push
shlb
dec
idivl
int3
sub
xorb
cmp
lock
mov
dec
dec
pop
xor
ficomps
cmp
fwait
xlat
ret
adc
mov
hlt
les
inc
fsubl
insb
mov
lods
sub
xchg
pushf
xchg
sub
cmpsl
loop
ja
push
mov
dec
lret
and
decb
cmp
idivl
lock
outsb
iret
out
fiadds
in
jecxz
sbb
fyl2xp1
xchg
xchg
pop
mov
push
lret
test
cli
andb
rcrb
mov
ja
das
lods
sub
test
aad
test
mov
push
int
pop
mov
mov
roll
cmpsb
jp
jns
cmp
out
shr
add
pop
into
out
pop
fcompl
xor
nop
pcmpeqb
test
ds
mov
loopne
lcall
cmpsb
frstor
and
fidivrs
pop
scas
jl
jo
xchg
in
ljmp
jg
pop
in
shll
out
insl
jmp
daa
loopne
pop
les
pushf
mov
or
mov
mov
mov
lcall
decl
loop
jnp
push
sarl
shr
out
dec
lret
jmp
inc
roll
ja
je
in
sbb
orl
bound
in
fcompl
les
pop
jl
out
notb
dec
cmp
or
jmp
push
xor
adc
pop
sub
stc
jo
ficompl
dec
cltd
out
adc
mov
mov
sti
jp
cli
mov
subb
push
arpl
sbb
fcompl
sahf
bswap
dec
inc
fmuls
or
mov
push
jecxz
mov
mov
das
xor
test
pop
xor
and
data16
push
rclb
mov
inc
inc
roll
sti
jl
lahf
mov
jo
insl
xchg
jb
pop
sahf
mov
adc
nop
ja
nop
mov
test
popf
dec
add
mov
mov
loopne
mov
sbb
insl
mov
nop
cli
xor
push
mov
sub
sub
mov
std
jl
test
out
in
xchg
outsl
imul
cli
ss
mov
sbb
notl
cmpsl
test
popa
shl
mov
jne
jmp
lods
cmp
pop
mov
sahf
pop
fwait
pop
pop
lret
jns
aam
xchg
adc
dec
dec
cmp
cmpsl
icebp
jle
jnp
and
push
imul
in
push
mov
cltd
mov
adc
push
dec
pop
or
andb
cmpb
jne
sub
sub
and
jmp
shrl
int
dec
inc
pushf
fimull
or
cmpb
movsb
outsl
int3
arpl
hlt
jae
mov
movsb
ljmp
fsubl
mov
xor
insl
mov
test
addb
mov
cmp
das
lods
dec
imul
mov
sbb
mov
dec
lock
push
inc
ret
cmpw
jbe
imul
or
lret
ficoml
jg
pop
or
mov
cmpsl
lret
int
add
cmp
div
out
sub
outsl
inc
and
sahf
ret
and
push
dec
call
mov
sub
stos
or
out
movsb
mov
jae
mov
jmp
rcl
addr16
mov
test
sahf
shlb
hlt
push
push
out
cmp
cmpb
dec
mov
cmp
sub
sub
cmp
fiadds
xchg
xchg
into
dec
int3
mov
sub
inc
or
inc
sarl
mov
mov
insl
jmp
in
dec
cmpsb
and
sbb
pop
lea
mov
sbb
inc
fwait
add
mov
xchg
and
and
push
rcrb
mov
push
rclb
jb
jmp
or
ret
inc
stos
sub
imulb
enter
sub
xor
lods
in
addr16
mov
pushf
fcoms
inc
push
je
xlat
enter
movsb
ret
cmp
mov
mov
xchg
xchg
pop
addl
into
int
mov
push
mov
addb
cli
jns
cmp
sub
sub
loop
inc
xchg
inc
loopne
cwtl
pop
mov
outsl
popf
fisttpll
outsb
dec
ret
mov
pop
aaa
mov
sbb
jb
sub
cmpsl
adc
pop
iret
mov
fcoms
negb
dec
mov
sbb
repnz
stc
idivl
lods
out
mov
popf
repnz
fnstcw
in
fyl2xp1
pop
sbb
pop
lea
mov
sbb
dec
lds
pop
rcrl
mov
daa
fwait
xor
lods
icebp
insb
cmp
movsb
and
aam
inc
fcmovu
lcall
dec
or
adc
jl
mov
jae
mov
insl
jmp
daa
xor
pop
pop
lcall
adc
xchg
or
dec
inc
mov
sti
mov
aaa
test
jno
cmpsb
cmpsl
imul
sahf
pop
mov
cli
jne
ror
outsl
aaa
push
dec
sbb
stc
jo
dec
divl
cs
mov
push
pop
loope
ficomps
cmp
pushf
pop
jne
rorl
roll
add
sarl
aaa
mov
mov
es
arpl
or
add
pusha
fcomp
push
sbb
in
enter
inc
sarb
mov
test
movsb
jae
int3
ljmp
pusha
cli
dec
xchg
popf
minps
lea
mov
mov
mov
add
mov
out
mov
jbe
stos
stos
sub
pop
sbb
rcll
cs
int3
dec
mov
inc
iret
jb,pn
inc
xor
jnp
cmc
inc
pop
loope
out
pop
fbstp
out
rcl
into
add
ficomps
icebp
push
mov
cmp
int
mov
mov
add
add
push
in
fidivrs
repz
sub
movsb
add
lahf
popf
sbb
adc
ja
xor
mov
int3
inc
ret
xchg
inc
cmp
lcall
adc
in
jne
lahf
scas
add
xlat
mov
sbb
das
add
ret
mov
stos
jbe
scas
cs
jb
sub
adc
aaa
mov
fs
mov
push
rorl
push
mov
lock
inc
ret
test
xor
jbe
cs
pop
out
or
push
sbb
fbld
push
push
dec
sbb
ret
xchg
icebp
mov
xorl
das
mov
xor
pop
sbb
stos
xor
sahf
sbb
fsts
rclb
outsl
push
mov
and
mov
mov
hlt
mov
in
insl
call
dec
dec
and
push
dec
xchg
mov
aam
xchg
stc
orl
cmp
mov
xor
mov
imul
and
shlb
jmp
pusha
mov
push
xorl
into
push
lods
out
imul
fcompl
cwtl
ret
stos
aas
mov
mov
xor
out
mov
mov
in
pop
repnz
pop
and
in
inc
les
jl
mov
xchg
push
stos
insl
add
lods
sarb
lret
loopne
aam
mov
adc
imul
in
notb
sub
xor
push
filds
or
fidivrs
xchg
jnp
loope
pop
iret
push
push
adc
inc
les
sbb
cmp
pop
mov
lret
mov
inc
and
loop
jg
jnp
aaa
repz
scas
or
roll
icebp
add
pop
rclb
xor
ds
fistpll
jne
lea
loop
mov
and
xchg
pop
shll
dec
leave
dec
test
les
movsl
std
mov
movsb
mov
mov
sub
jg
lock
rcrl
xchg
adc
insb
xchg
mov
mov
xor
mov
out
sub
lods
jecxz
mov
sbb
out
xchg
out
adc
call
repz
jnp
push
xchg
push
aad
stos
icebp
insl
cmpsb
jl
pop
in
in
int
pop
push
imul
xchg
adc
jp
sbb
enter
add
add
or
adc
sub
sub
xchg
test
sbb
push
push
rclb
fdivrs
sub
pop
sar
mov
jg
sub
mov
in
loopne
les
xchg
push
mov
sub
cmpb
ss
loopne
push
ja
mov
mov
pusha
dec
cmp
sbb
ja
xor
adc
outsb
in
sub
mov
mov
icebp
mov
sbb
mov
fbld
mov
mov
cmpl
xchg
or
push
in
inc
mov
sti
push
inc
xor
lods
es
stos
and
repnz
pop
push
aam
sbb
xor
or
pusha
fwait
repz
nop
aad
data16
aad
sub
loope
popa
dec
inc
adc
cwtl
pop
rcrb
jnp
iret
mov
cmp
jg
xor
mov
push
and
scas
sub
jnp
xchg
lret
pop
rclb
lock
lods
in
add
pop
mov
cmc
cmc
je
fnstenv
cwtl
sub
sbb
mov
xchg
adc
xchg
xchg
enter
and
mov
jno
mov
shll
inc
sub
movsb
and
pop
pop
ficompl
jbe
cs
jo
iret
inc
aas
out
test
cmc
scas
pop
fldenv
jmp
sub
jmp
push
adc
fidivl
xchg
adc
scas
or
cltd
jmp
jo
jns
ljmp
lods
sub
jp
popf
sbb
cld
popf
add
dec
int3
or
mov
and
sarb
mov
sahf
fnstenv
mov
xchg
mov
clc
xchg
push
inc
pop
hlt
or
xchg
int3
inc
pop
addb
gs
cld
lret
mov
sbb
sbb
add
sbbl
pop
xchg
mov
dec
mov
sbb
jl
into
sub
mov
shlb
in
addr16
cmp
rcrb
sub
mov
jp
xchg
jg
and
add
pop
mov
mov
push
mov
xchg
adc
fsts
gs
int
int3
mov
or
xchg
cld
jp
and
adc
out
out
outsb
arpl
jbe
call
and
cltd
fcompl
inc
mov
adc
sti
cli
mov
imul
test
ds
stc
sbb
aaa
push
mov
xor
adc
mov
sbbb
mov
lret
int3
push
cmp
stc
xor
cmp
divl
divl
xchg
es
sub
stc
lahf
fdivr
adc
xor
aam
test
mov
pop
popa
add
bound
mov
mov
insb
fbld
loop
pop
mov
ret
test
leave
push
orl
aaa
out
or
mov
insb
and
out
xchg
and
negl
adc
push
add
pop
in
fidivrs
sbb
add
lcall
xor
or
sub
sub
sub
les
dec
mov
dec
aam
sub
scas
push
neg
je
sti
sbb
adc
sbb
call
ds
or
push
jle
cli
add
sbb
cmp
push
imul
adc
and
cmp
popf
or
or
cmp
ss
sub
aad
repnz
lods
icebp
mov
inc
adc
mov
push
mov
aam
hlt
je
dec
rorb
inc
incb
mov
xor
aad
xor
xor
mov
pushf
push
shrb
or
mov
test
daa
or
ret
add
out
divl
insl
outsl
pop
loope
out
addr16
sbbl
gs
int
push
add
mov
fisttpll
lods
in
xor
popa
stos
stos
sub
sahf
and
push
ficomps
das
jne
push
or
mov
dec
lahf
push
inc
pushf
add
outsl
push
clc
int
sub
shr
ret
pop
shlb
pop
or
mov
pop
inc
punpckhwd
lods
shrl
mov
or
add
xchg
add
lods
mov
sub
xchg
xchg
lea
rcr
test
pop
adc
leave
dec
push
add
arpl
cld
jnp
lahf
mov
mov
es
in
in
arpl
pop
pop
mov
xchg
rclb
rolb
or
stos
dec
sub
xlat
add
mov
lcall
pop
gs
cmpsb
and
jb
pop
fcom
nop
jl
push
adc
dec
mov
inc
testl
leave
inc
jo
jne
out
outsl
cmpsb
out
scas
xchg
xchg
ljmp
jmp
lcall
push
add
inc
cmpsb
fisubrl
out
pop
lods
jecxz
jmp
xchg
sbb
xchg
fwait
cmp
int
fidivrl
dec
mov
or
push
mov
cmpsl
xchg
cmp
xor
adc
test
filds
ficompl
xor
dec
inc
xor
jp
jg
je
xor
mov
xor
push
daa
mov
cmpsl
fistpll
jae
adc
mov
dec
xchg
sub
sarb
ret
fcmovu
mov
test
and
ffree
sbb
add
jo
scas
jmp
addr16
fildll
jae
pop
xchg
and
adc
xchg
xor
and
push
adc
xor
mov
sub
stos
ss
icebp
into
enter
mov
movlps
mov
test
lds
push
push
push
mov
add
out
scas
imul
cmp
in
xor
jno
movsb
xchg
movl
sarb
cwtl
mov
push
mov
mov
xchg
cmp
neg
div
jne
mov
inc
repz
insb
xchg
addr16
ficoml
lock
cli
js
shrb
xchg
inc
sub
movsb
xor
xor
stos
or
inc
lcall
test
addb
enter
leave
add
mov
jmp
lock
ljmp
popa
fcom
popf
jl
adc
call
out
pop
psubb
andb
push
mov
xor
push
outsb
mov
scas
jecxz
and
ficompl
adc
adc
inc
add
inc
out
inc
inc
inc
cmp
lcall
mov
arpl
sbb
loop
movsb
jmp
push
pop
xchg
adc
add
xchg
inc
cmpsb
sbbl
fdivrs
je
mov
imul
out
xor
sti
jp
sbb
cmp
adc
mov
loope
sbb
das
je
imul
out
fs
xchg
ficomps
bound
mov
mov
test
cmp
pushf
push
mov
xor
cs
daa
mov
fs
aad
daa
xchg
xchg
cmp
dec
xchg
fimull
test
es
negl
push
icebp
push
dec
jmp
adc
ljmp
inc
pop
pop
jnp
mov
or
xchg
mov
int3
mov
xchg
scas
hlt
adc
cmp
jmp
out
in
push
cld
dec
mov
adc
dec
mov
lret
sti
xchg
dec
pop
aaa
mov
lcall
movsb
fucom
pop
and
jl
adc
shl
test
loopne
imul
xchg
mov
cltd
mov
lea
pop
fidivrs
xchg
inc
xchg
lods
xchg
jl
cmpsl
or
jb
fwait
add
mov
bound
dec
scas
pop
sub
sbb
jg
adc
jns
push
aad
push
or
insl
rolb
pop
movl
mov
mov
xchg
xchg
cvtps2pi
cmpsl
insb
nop
add
push
ds
test
aad
mov
push
mov
or
add
test
sbb
jno
dec
out
dec
gs
fs
dec
add
xchg
aam
shrb
dec
imul
add
inc
fdivrl
jbe
add
and
lds
pop
popf
sbb
sub
push
xchg
ret
dec
push
add
inc
xchg
inc
inc
push
mov
idivl
out
pop
out
shlb
dec
imul
pop
xchg
xchg
dec
xchg
sarb
sbb
insb
loopne
mov
push
xor
pop
sbb
cmpsb
pop
push
andb
fstpt
push
mov
inc
dec
add
sti
adc
inc
and
jo
push
outsl
sti
adc
loop
adc
xchg
pop
mov
or
inc
lret
add
adc
add
xchg
mov
jns
xor
insl
or
sbbb
rcll
inc
push
mov
or
leave
subl
jae
hlt
hlt
ret
mov
xor
or
inc
filds
enter
ret
add
jno
add
imul
ljmp
jnp
stc
aas
je
je
outsl
or
xor
push
and
sbb
adc
into
or
mov
add
add
aas
fnstcw
repnz
mov
sub
sub
sub
and
sbb
pop
push
adc
adc
jmp
in
loopne
adc
lcall
lcall
xchg
movl
mov
cmpb
or
inc
xchg
fwait
jns
aad
lahf
sahf
xchg
rdmsr
lods
dec
imul
frstor
jg
fwait
js
aad
aam
nop
js
lods
es
jecxz
adcb
cltd
cmp
inc
dec
int3
xchg
loop,pn
sub
jno
popf
outsl
je
cmp
not
pop
movsb
int
dec
leave
jmp
clc
push
add
outsb
fidivl
jb
mov
pusha
das
dec
xchg
sbb
arpl
pusha
and
mov
hlt
add
dec
xchg
repnz
inc
mov
pop
fwait
sbb
fcoms
push
rclb
dec
int3
dec
imul
sbb
pop
aad
sbb
jmp
test
inc
inc
rolb
jg
divl
cmp
outsb
insb
ljmp
cli
add
mov
xchg
push
dec
test
outsb
or
sub
popa
aaa
sti
adc
mov
enter
lods
out
and
test
mov
jp
mov
cwtl
mov
push
mov
ret
or
pop
mov
ret
jb
lea
adc
dec
icebp
and
sbb
ds
cmc
push
push
outsb
fimuls
jne
add
add
cmp
mov
nop
push
mov
and
test
jne
jle
ljmp
add
jle
stc
outsl
ss
jo
mov
push
test
mov
jl
adc
cltd
mov
or
cmp
lgs
mov
cmp
inc
pusha
pushf
pusha
leave
pop
fstps
xor
jo
adc
enter
cli
pop
std
cli
jnp
xor
cmp
dec
jno
ret
mov
pop
lock
shl
cmp
adc
sub
mov
repz
cmp
xlat
mov
movsb
jmp
repz
dec
dec
out
mov
dec
push
add
loope
push
js
push
aam
or
dec
sub
and
jbe
cli
jbe
jne
add
mov
stos
mov
out
or
ds
add
lret
cmp
test
cs
sub
dec
mov
mov
ret
stc
cwtl
test
adc
icebp
lea
and
popa
mov
dec
or
jle
push
ret
inc
add
ret
sti
and
jo
jns
push
loopne
sti
insb
pusha
in
cs
xchg
lret
xchg
dec
data16
pushl
mov
jmp
cltd
sub
adc
stos
xor
aad
add
mov
push
cmp
pop
int3
dec
mov
int3
les
inc
sbbb
les
divb
imul
dec
cmp
cli
push
dec
fcoml
loop
add
push
mov
push
add
sub
fnstenv
pop
push
mov
call
insl
add
stos
cld
out
leave
fistpl
aas
outsl
xor
xor
icebp
add
std
adc
lcall
int
mov
je
cmp
mov
and
jne
out
jae
ja
xchg
mov
sub
cmp
iret
inc
lcall
dec
jns
cmp
mov
sarl
cmc
and
das
sahf
call
addr16
dec
adc
cwtl
sbb
dec
pop
dec
dec
or
rclb
jl
inc
mov
pop
pop
daa
out
lods
in
lret
cs
movsb
and
adcb
mov
rclb
sahf
int3
or
mov
sti
cli
jnp
cmp
sub
xor
jne
adc
hlt
mov
fdivr
jecxz
adc
lret
mov
inc
mov
sbb
fistpll
mov
xchg
mov
in
or
sub
mov
xchg
adc
mov
inc
or
sub
les
lret
divb
aam
mov
jo
jnp
fs
jecxz
dec
arpl
pop
sbb
fistl
lret
pop
or
inc
test
stc
out
cmp
fidivrs
ds
add
cmpsl
insb
movsb
jns
je
aad
sbb
mov
xchg
dec
aas
cli
mov
lret
push
out
dec
xchg
test
scas
loop
addr16
xchg
es
cltd
pop
mov
adc
dec
push
decb
jne
jle
loopne
pop
mov
imul
mov
mov
jns
pop
xchg
and
mov
mov
cmp
outsl
popf
dec
hlt
jne
xor
pop
es
pop
fidivrl
arpl
cmp
xchg
shl
adc
xchg
hlt
mov
add
cmp
cmp
xchg
push
dec
push
lcall
mov
out
cmp
cmp
jge
jae
jne
mov
fldenv
push
sub
jecxz
notl
rclb
mov
leave
es
popl
aas
lock
clc
fdivrs
je
es
test
xchg
mov
cwtl
mov
dec
mov
sarb
jns
push
or
xchg
lds
shrb
pop
xchg
dec
stc
pop
cltd
xchg
push
pop
xchg
insl
adc
sub
test
cmpsl
add
aad
cmp
and
sub
sub
cltd
xor
push
fadds
add
adc
fwait
mov
mov
leave
cs
pop
fsubl
or
repz
mov
add
out
add
test
jae
mov
sbb
xchg
adcb
mov
cmpsl
idivl
sbb
mov
and
mov
dec
sarb
fdivrl
les
jmp
jb
insb
test
sbb
inc
jl
jmp
sti
adc
adc
sbb
cmc
mov
cmp
jne
add
mov
cmpsl
je
movsb
lock
or
incb
add
push
int3
int
int3
dec
dec
movb
cmp
add
push
into
dec
leave
nop
mov
push
lahf
push
shlb
pop
inc
out
in
ljmp
loope
ja
push
mov
or
push
or
cs
pop
pushf
sub
bound
mov
stos
sub
in
inc
ljmp
lcall
jbe
out
mov
enter
inc
mov
divb
sub
inc
outsl
insb
ljmp
fistps
aad
dec
inc
ret
xor
out
or
aaa
shll
sti
mov
sub
out
cmpsl
aam
mov
pop
addr16
inc
popa
push
ds
sbb
dec
popa
add
xchg
scas
dec
cmp
sub
scas
loop
popf
jnp
cmpsl
and
mov
pop
mov
dec
icebp
bound
pop
popa
pushf
push
fs
mov
jge
ret
mov
jl
xchg
mulps
cmp
dec
loope
jmp
sbb
pop
cli
xchg
push
add
jo
into
sub
or
jg
sub
dec
mov
lcall
add
mov
adc
add
repnz
lahf
mov
cmp
mov
ficomps
jb
cwtl
xchg
push
push
out
loopne
and
pop
test
pop
dec
push
into
and
stos
dec
sub
rolb
mov
jns
imulb
pop
ljmp
xchg
negl
les
adc
out
call
jmp
adc
jle
in
pusha
mov
mov
push
adc
nop
je
push
mov
push
dec
sbb
inc
mov
aad
divl
shr
es
call
or
pop
fcompl
pop
mov
jns
jbe
lds
pushf
decl
ret
insl
mov
jp
xor
xchg
mov
das
orl
in
cmpsb
mov
mov
push
adc
aad
sub
dec
mov
imul
js
fnstenv
ljmp
sub
loope
mov
pushf
adc
xchg
push
mov
in
cmp
aas
add
jns
mov
cmc
aam
xor
jb
cmpsl
push
or
or
ss
lcall
sub
xchg
imul
divl
xchg
divl
xstore-rng
cmpsl
sub
out
jns
jecxz
mov
outsb
adc
inc
fisttpl
enter
mov
mov
mov
sub
adc
or
sbb
dec
push
xchg
mov
fwait
jmp
outsb
pop
daa
cld
mov
mov
fldcw
addr16
imulb
cmp
or
push
dec
pop
cwtl
dec
test
out
mov
cmp
cmp
sub
stos
xlat
cs
and
scas
pop
aad
enter
push
jg
sahf
int3
pop
mov
lahf
and
dec
lock
das
push
lock
pop
xchg
repnz
lea
insl
pop
xchg
pop
mov
mov
into
imul
loop
out
mov
xchg
pop
popf
jne
cmpsb
and
sbb
aad
xchg
dec
mov
add
cmp
push
test
stos
xor
cmc
xor
fcmovu
dec
push
gs
sbb
inc
jns
iret
push
pop
aaa
clc
clc
jnp
pop
orb
outsb
in
mov
adc
mov
xorl
scas
loope
cwtl
jmp
pop
or
adc
xor
adc
cmp
inc
xchg
mov
scas
push
jbe
lods
sti
fwait
in
inc
push
test
outsb
fstpl
loop
xchg
adc
cld
js
lods
sub
sub
and
js
add
cmp
filds
icebp
push
push
into
dec
or
lds
push
loop
sbb
js
lods
insb
mov
or
imul
imul
mov
pop
push
xchg
ror
adcl
push
inc
xor
mov
cmp
mov
xor
push
dec
jmp
mov
pop
into
fcoml
push
push
adc
fmuls
arpl
std
jl
lds
stos
and
imul
sahf
jecxz
mov
mov
mov
cs
cmp
add
fidivrl
dec
xor
mov
push
subb
xor
jle
pop
pop
pop
adc
into
int3
add
jl
mov
push
mov
sub
inc
hlt
adc
ljmp
inc
lock
dec
mov
in
jg
ja
mov
inc
incb
cld
cwtl
mov
lods
in
mov
jg
ret
aad
setnp
orb
into
andl
jb
pop
pop
shlb
lock
jb
xchg
jmp
je
fistpl
push
or
jae
jg
mov
cmp
adc
mov
pop
test
sub
lea
adc
ds
sbb
int3
dec
mov
mov
addb
std
mov
aas
cltd
iret
pop
out
lods
jp
ljmp
dec
loopne
bound
or
jo
adc
xchg
int
mov
jmp
stos
lcall
sub
xor
cmpsb
mulps
and
orb
scas
aad
mov
int
loop
inc
fistps
jne
fnsave
shr
push
rcl
lret
add
nop
xchg
fildll
mov
pop
mov
cld
xlat
addr16
cs
push
in
scas
pop
add
cltd
sub
push
sub
stos
lods
sub
xor
loop
fstpl
sbb
scas
dec
cli
jmp
jecxz
mov
sbb
loop
xchg
xorb
inc
pop
lea
mov
xchg
xor
jne
mov
into
adc
pop
shll
and
push
iret
pusha
jnp
xor
gs
inc
shrb
fcoml
xchg
repnz
mov
push
xor
cmp
fdivrl
xchg
add
pop
mov
loopne
mov
mov
inc
xchg
scas
incl
movsb
fnsave
sahf
sub
dec
mov
or
int
lods
stc
sub
lods
notl
inc
std
sub
sub
jmp
mov
push
inc
fsubp
cltd
sbb
ja
nop
mov
xchg
cmpsb
and
fstps
adc
xor
xchg
xor
iret
dec
cwtl
sti
xchg
mov
iret
ret
inc
mov
and
sarl
inc
icebp
xchg
pop
adc
jecxz
push
xchg
xchg
adc
push
mov
imul
testl
cmp
mov
adc
mov
or
fdivr
jl
jns
jbe
jae
dec
loop
dec
andl
jnp
sbb
mov
cli
insl
arpl
test
jnp
adc
cmp
inc
in
push
jnp
adc
cltd
or
mov
lods
sub
and
ds
jo
cs
ja
sub
xor
xchg
xor
mov
subl
push
stos
lods
sbb
add
movsb
aam
dec
cmpsb
into
inc
dec
pop
enter
ret
sbb
adc
rolb
ds
aaa
mov
jbe
jae
add
jecxz
mov
pop
xchg
sub
shrl
or
movsb
pusha
cmp
movsb
pop
jae
pop
xor
out
std
in
sub
add
ret
jle
movaps
into
jns
sub
jae
testl
sbb
xchg
mov
push
adc
cld
xchg
push
mov
rcrl
rcl
stos
push
fcompl
aad
push
push
mov
mov
pop
pop
inc
jge
outsb
cmp
inc
mov
xor
push
push
ret
js
in
rol
xchg
sub
pop
or
xchg
ret
mov
lea
mov
lods
sub
enter
lcall
push
mov
pop
rep
lock
scas
stos
shl
push
mov
pop
aad
psubusb
push
sub
test
push
add
add
pusha
xor
mov
insb
inc
adc
inc
movsl
push
bound
add
sahf
lea
rorb
mov
mov
sbb
fbstp
cld
popa
mov
xlat
push
or
scas
inc
xlat
sub
shll
xor
lock
iret
push
into
fucompp
mov
jae
xor
cmp
add
jle
cwtl
lods
shlb
push
dec
sbb
cltd
xchg
cwtl
push
xchg
nop
lea
inc
xor
cmc
repz
xor
clc
push
repz
mov
loopne
out
sbb
mov
pop
jmp
cli
ret
shrb
inc
aas
jle
andps
testl
sub
loopne
push
lea
leave
mov
lret
test
jbe
std
push
cwtl
clc
outsl
xor
mov
dec
scas
in
insl
and
mov
pop
sbb
aam
lret
mov
enter
andl
into
mov
pop
aam
jb
push
faddp
sub
inc
fwait
xlat
gs
rcrl
jbe
xchg
adc
out
mov
push
mov
jae
cli
mov
insl
out
or
lods
jmp
loope
pop
pop
jge
cs
into
or
outsb
into
dec
dec
enter
add
rcll
out
mov
mov
mul
data16
jecxz
sbb
lret
roll
push
lods
les
mov
mov
jge
mov
jo
cltd
xchg
popf
xor
push
movsb
outsb
fxtract
cmp
sbb
mov
lods
dec
in
stos
hlt
ljmp
mov
dec
int
ja
inc
scas
and
es
insl
jecxz
pop
pop
shlb
pop
push
ss
mov
inc
adc
incl
inc
out
add
mov
xor
je
test
or
xchg
fstps
mov
adc
push
ljmp
ret
jg
mov
insb
lock
or
jecxz
loop
pop
in
push
cmp
xchg
lret
lret
push
xchg
incb
pop
cltd
mov
push
sub
cmp
push
sub
fmull
xchg
popf
pop
mov
pop
mov
or
push
call
add
jbe
shrb
insl
jecxz
out
addr16
addr16
inc
lcall
jbe
xchg
sub
fstpl
fsubr
mov
imul
es
mov
aam
sbb
fstps
pop
lds
ret
dec
or
jp
decb
ljmp
out
jnp
pop
lret
stos
xchg
push
jg
xchg
iret
lcall
push
repnz
xlat
jne
shr
add
std
cwtl
jne
fildll
call
fcomip
or
cltd
andb
pop
pop
popf
xchg
movsb
or
mov
inc
xorl
jne
add
jnp
pop
int3
ljmp
sbb
push
in
xlat
push
mov
dec
mov
sub
add
pop
mov
pop
cmc
push
dec
popf
pop
push
daa
cmc
jbe
jae
outsl
dec
aad
mov
xor
stos
leave
pop
mov
sbb
sahf
cld
andps
jne
int3
popa
dec
sbb
jle
pusha
and
fstpl
in
mov
xor
mov
push
cmp
mov
sub
scas
cmpsl
popa
sub
mov
sbb
iret
sub
int3
or
mov
scas
popa
test
lock
jo
aad
cmc
stos
out
mov
push
push
std
xchg
push
sbb
movsb
adc
mov
xor
xor
sbb
add
sahf
cmpb
mov
inc
frstor
dec
pop
cmp
scas
ja
xchg
and
imul
add
sub
cmp
jns
xchg
push
lret
decb
xchg
test
fs
insl
add
mov
jne
mov
dec
xchg
pop
daa
jmp
push
add
mov
lods
adc
and
inc
add
int
fdivl
div
mov
fbstp
orb
mov
pop
pop
mov
ret
xor
or
cmp
add
pop
xchg
in
or
jae
stos
bound
aas
nop
faddp
xchg
push
stos
jne
dec
xor
mov
decl
mov
lods
lods
pop
jp
fcompl
mov
jo
xor
cmpsb
arpl
pop
jnp
pop
dec
out
push
pop
push
scas
or
andl
lea
sub
inc
xchg
int
outsl
pop
aad
cwtl
add
adc
xchg
stc
sub
xor
mov
sub
stos
sbb
pcmpeqw
jmp
push
jg
sbb
mov
or
xchg
xchg
mov
cmp
jp
cmp
jo
gs
mov
clc
rcl
mov
xor
iret
sub
leave
xchg
out
cmpsl
push
fdivrl
cli
sbb
xor
into
in
lea
xor
dec
stc
xchg
dec
adc
xchg
mov
mov
outsl
mov
mov
mov
pusha
jmp
jg
lcall
pop
jno
sub
in
inc
inc
out
inc
cli
pop
imull
loop
jmp
call
arpl
pop
fdivrl
mov
xchg
adc
xchg
lods
decl
cld
push
add
xchg
push
mov
mov
cmp
scas
gs
stos
jecxz
lods
fisubl
std
mov
subb
scas
add
ds
mov
jle
fincstp
sahf
je
cmc
loop
outsl
das
sub
outsl
in
sub
push
pop
pop
loop
ret
repz
imul
inc
mov
adc
mov
cmc
push
xor
inc
lcall
xor
xchg
mov
xor
jmp
divb
sahf
sbb
imul
imul
les
mov
inc
fmull
out
mov
mov
aad
imul
add
fisubrs
out
loope
push
fwait
pop
call
mov
enter
jae
std
aas
sbb
cmc
inc
push
loope
out
loop
ret
or
push
sahf
push
pop
cltd
les
adc
xor
in
dec
ss
jmp
sub
js
ja
mov
daa
addl
adc
cmpsb
out
sub
add
mov
sbbb
and
push
xchg
fnstenv
dec
ljmp
push
pop
adc
mov
lret
jg
adc
inc
cmp
jo
stos
mov
lods
adc
mov
pop
aad
mov
ds
dec
pushf
mov
mov
mov
out
adc
cmpsl
jno
dec
jne
addr16
int3
fstpl
jecxz
push
pop
xchg
scas
adc
lods
movl
loope
fisubrl
in
cs
test
xchg
pop
or
rorb
or
iret
adc
stos
dec
cmp
ret
inc
rolb
mov
jne
data16
aad
fstps
fdiv
sbbb
ja
shrl
add
lock
mov
aad
mov
pusha
stos
jne
adc
sbb
roll
iret
cmp
cmp
negl
ret
sub
xor
push
aam
jo
mull
fmull
cmp
dec
fists
adc
cltd
sbb
jns
js
add
mov
xor
mov
popf
jl
les
mov
and
add
mov
pop
jmp
mov
mov
inc
pop
out
icebp
ftst
mov
push
leave
ss
pop
push
ficomps
and
xchg
pop
pop
push
cmc
fnstenv
push
bound
ret
mov
scas
das
lods
outsb
mov
fsubl
push
cmpsl
cmp
cmpsb
aam
xor
movb
dec
jno
popf
cli
movsb
sbb
outsl
insb
and
loop
popa
pop
out
pop
out
pop
xchg
inc
mov
push
mov
andl
js
mov
pop
and
fcmovne
aad
aam
push
mov
dec
enter
add
andb
enter
xor
outsl
sub
arpl
shl
pop
jmp
ficoms
enter
shll
inc
lcall
clc
mov
pop
mov
aaa
sbb
imul
push
cmp
addb
aaa
add
mov
jp
pop
jp
sti
mov
insl
mov
imul
icebp
cltd
sbb
cmp
addr16
or
adc
inc
es
mov
sti
cmpsl
xchg
jne
in
adc
icebp
stos
dec
pushf
cmpsl
pushl
std
add
adc
or
dec
mov
or
movb
movb
mov
jno
dec
outsb
pop
ror
int
pop
je
fcompl
cltd
out
push
pop
jg
lret
xchg
mov
push
mov
mov
mov
lret
es
nop
rorl
fcoms
cmp
and
mov
add
mov
div
mov
lock
scas
dec
pop
jl
pop
bound
rcll
outsl
stc
adcl
les
adc
jge
jbe
mov
in
pushf
popf
or
out
sub
mov
enter
dec
rorb
jmp
push
push
ret
cli
leave
mov
xor
jmp
into
dec
mov
xchg
pop
cld
aas
add
lea
xchg
mov
clc
lcall
daa
xor
jecxz
push
mov
rcrl
mov
mov
enter
rolb
clc
stc
insb
push
divl
mov
insl
sub
inc
push
movsb
frstor
jae
sbb
loopne
out
xchg
jae
addb
inc
fsubrl
xor
mov
and
lds
clc
xchg
push
movlps
lock
js
stos
jns
hlt
jg
divl
aaa
iret
repz
fiadds
ljmp
std
xchg
fistps
adcb
xchg
push
je
or
movl
rcrb
sbb
xchg
cmpsl
movsb
dec
lods
test
sub
push
or
pushf
lret
or
push
sbb
ret
add
std
shl
sti
idivl
pop
out
jp
ss
ljmp
loop
pop
pop
jns
push
fst
rorl
in
in
addl
mov
ss
or
in
adc
jge
fnstcw
mov
int
push
push
out
lods
testl
dec
cmp
jl
cmp
push
push
add
adc
fstpl
xchg
lea
sub
movl
xor
scas
lods
in
movsl
adc
in
fisubl
mov
fstps
push
enter
pop
dec
leave
dec
sub
mov
std
std
cmp
jne
lock
jmp
fsubp
mov
adc
mov
dec
int
mov
int
aas
mov
cmp
pop
not
repnz
movsl
scas
push
and
mov
pusha
push
lret
jo
push
push
mov
lock
inc
ret
inc
or
add
std
mov
and
ljmp
jle
btc
cmp
dec
lods
pop
dec
out
push
dec
and
aas
mov
cmc
xor
lods
into
or
test
popf
sbb
or
mov
push
or
shlb
ret
shr
dec
je
out
push
mov
add
pop
sub
cmp
fnstenv
push
xor
jmp
xchg
scas
imul
insl
rcll
xor
popf
test
daa
xlat
and
popf
iret
inc
sbb
adc
into
dec
int3
outsl
sub
ret
sbb
jns
pop
jno
jecxz
outsl
jmp
dec
jno
sbb
inc
shll
notl
mov
bound
nop
or
popa
xor
adc
sub
cmpsb
and
pop
mov
inc
dec
leave
lcall
stc
es
idivl
lods
divl
outsb
mov
fucom
in
fbld
mov
jae
mov
add
jmp
dec
jmp
inc
mov
jb
sub
decl
and
pop
nop
push
xchg
repz
decl
int
mov
add
pop
outsb
idiv
xchg
imul
lahf
push
push
popa
popf
xlat
xor
pop
sbb
sahf
pop
mov
cmp
sbb
sub
or
lock
fstps
dec
push
push
push
iret
adc
add
jno
ret
inc
xorb
mov
pop
jnp
mov
jmp
into
mov
imul
cld
jnp
shrl
adc
enter
andb
xor
adc
push
sub
shrl
mov
arpl
into
jae
push
sbb
divb
or
dec
sbbb
lock
xchg
push
int3
popa
jmp
inc
mov
cltd
sbb
mov
or
xchg
inc
jae
fs
and
xor
mov
xor
push
pushf
or
mov
push
or
dec
inc
and
int3
inc
jl
je
je
and
and
push
pusha
sbb
jmp
adc
popa
aas
cli
adcb
jp
gs
loop
add
mov
insl
mov
adc
mov
fdivrs
fsubs
int
xchg
shll
roll
inc
lcall
out
outsl
jmp
jo
test
mov
xchg
push
and
lea
xorb
insl
cwtl
cmpsb
aaa
pop
aaa
xchg
in
add
outsl
cmp
stos
insb
dec
pusha
sub
dec
bound
aam
push
cmp
push
xchg
leave
ret
rorb
jle
insl
js
mov
jb
icebp
adc
out
data16
loope
rcrb
pop
popf
mov
push
roll
push
jmp
lret
inc
loop
cmp
jne
js
xor
mov
icebp
mov
or
bound
enter
int
push
insb
push
jae
in
inc
cmp
outsl
mov
je
mov
dec
xor
xor
cmpsb
imul
cwtl
lcall
pop
icebp
test
call
mov
cmpl
jae
push
imul
and
adcb
sbb
dec
push
or
push
cs
jns
pop
xor
cwtl
jb
icebp
adc
inc
fsubrp
popa
add
pop
arpl
cltd
nop
mov
lret
outsl
ds
test
cmpb
jbe
mov
or
sub
xor
xor
xchg
and
mov
mov
jb
xchg
cs
mov
sub
mov
lahf
insb
dec
repz
jb
adc
addr16
lahf
out
fldl
adc
iret
sbb
add
or
inc
sub
cmc
xor
mov
daa
lock
mov
sti
ds
outsl
cs
int3
cmp
cmpsl
ja
sti
mov
and
lcall
sub
add
mov
leave
xchg
mov
or
cmpb
add
xor
xor
xchg
cmpsl
arpl
mov
mov
push
sbb
ficompl
negl
xor
or
sti
jp
pop
insb
movsb
mov
and
ljmp
rcr
push
cli
cwtl
hlt
dec
hlt
xchg
repnz
out
mov
inc
call
and
xor
fnstsw
aaa
icebp
mov
mov
jp
iret
mov
inc
xchg
leave
dec
int3
cmp
and
jg
cmpsb
sbb
icebp
mov
test
in
test
fwait
insl
and
push
inc
xchg
dec
loop
mov
adc
test
mov
sbb
cwtl
jb
insb
sbb
imul
add
cwtl
hlt
adc
sbb
dec
loope
sub
sti
xor
jae,pn
outsb
das
push
jo
addr16
data16
add
inc
inc
inc
mov
jae
push
dec
or
ds
fisttpll
clc
mov
js
ja
test
adc
ljmp
pusha
fimull
mov
push
inc
ret
xorb
mov
dec
loop
aaa
icebp
mov
push
mov
mov
popf
sbb
xchg
aad
xchg
in
dec
data16
addl
test
mov
scas
sbb
and
mov
mov
inc
shrl
pop
daa
das
inc
xor
lock
js
lahf
and
in
repnz
ljmp
adc
cli
cltd
sbb
cmp
xchg
movsl
in
or
outsb
cmp
filds
clc
push
or
lods
imul
push
push
mov
sbb
into
push
adc
dec
or
les
in
cmpsb
mov
xchg
push
out
das
pop
adc
shl
ret
popa
mov
xchg
xchg
rcrb
mov
scas
or
add
pop
mov
dec
push
icebp
das
or
push
sub
lcall
lds
xchg
xchg
mov
jne
sub
jle
mov
repz
lods
int3
mov
push
es
sub
dec
sahf
out
pop
inc
fdivr
lcall
lret
loopne
out
cli
nop
cmp
and
mov
sbb
adc
dec
mov
test
fwait
ja
divl
in
push
imul
in
cmpsb
dec
popa
fstpl
fsts
cwtl
pop
iret
sbb
cltd
aam
adc
jmp
and
ret
jge
and
scas
outsb
imul
add
sbb
push
cmp
inc
push
jo
dec
enter
leave
pop
fdivrs
lods
mov
das
ljmp
fwait
imul
xchg
jg
sub
add
fs
mov
xchg
test
push
mov
sbb
popf
test
pop
lcall
dec
into
aam
dec
dec
inc
ret
add
xor
sarb
jbe
jb
divl
lock
pop
jecxz
fistps
xlat
adc
lret
pop
push
mov
adc
or
aas
ret
cmpb
xor
sub
adc
nop
loopne
xor
push
hlt
mov
lret
inc
pop
movl
cwtl
pop
jp
cmc
cmp
leave
lods
cmc
xor
out
lods
aas
inc
loopne
pop
xchg
pop
pop
push
insb
iret
pop
xlat
dec
xchg
mov
add
mov
cmpl
inc
cmpsb
gs
fs
test
jne
mov
push
loop
fmuls
pop
fcoms
mov
daa
lret
inc
inc
mov
jmp
js
icebp
sbb
out
sub
and
pop
hlt
mov
rcll
pusha
cmp
insb
xor
xchg
pushf
pop
ret
daa
cli
aas
pop
xchg
mov
cmp
shlb
mov
sub
mulb
inc
jl
and
cld
nop
aam
mov
pop
mov
pop
lret
addr16
pop
lret
sbb
rcll
mov
add
data16
sub
jne
daa
sub
mov
mov
cmp
mov
push
dec
leave
hlt
mov
mov
negb
cmp
std
mov
mov
sahf
movsb
jmp
loope
ljmp
cli
adc
movl
in
jmp
and
loopne
das
push
repnz
xchg
and
fidivl
dec
push
cmp
adc
dec
fsubrs
and
sub
mov
jbe
cmp
sbb
dec
insl
addl
pop
inc
or
sbb
xchg
fwait
or
imul
mov
xchg
cmpsb
in
dec
bound
adcb
roll
mov
dec
mov
cli
inc
mov
dec
cmp
aaa
in
jne
mov
out
jmp
push
arpl
mov
rcr
testb
ss
xchg
xchg
and
add
and
xor
xchg
lahf
push
lods
or
leave
xchg
mov
pop
pop
xchg
pop
cmc
mov
shrb
jecxz
enter
ret
popa
outsl
scas
std
mov
mov
jmp
sub
ret
popw
cmpsb
sbb
cwtl
push
lods
or
jge
xchg
aas
sbb
das
mov
scas
sub
and
popf
sbb
mov
lds
dec
or
inc
inc
add
repnz
cmpb
fnstcw
pushf
jne
mov
add
cmpsb
sbb
leave
fimuls
inc
shll
xor
mov
adc
popf
pop
sub
mov
mov
cs
xor
dec
into
int3
test
shll
std
jl
movsb
mov
scas
ss
cmpsl
inc
sub
and
pusha
fwait
addl
dec
push
inc
dec
incb
add
test
xchg
mov
pushw
cltd
lahf
sub
cmpsb
mov
push
add
addb
out
addl
fwait
out
clc
push
insl
mov
lock
shll
push
cmc
lods
xor
inc
adc
sbb
int
leave
inc
adc
in
std
push
pop
insl
loopne
fmull
mov
fistl
xor
sbb
mov
inc
xchg
mov
popf
xchg
push
add
test
enter
ret
and
cli
or
jmp
dec
stos
or
xor
mov
pop
mov
call
sub
add
stc
aam
and
sub
call
cmpsb
dec
out
xor
ficoml
rcl
dec
leave
or
cmpl
pop
jae
out
fisubrl
loopne
mov
pop
faddp
inc
pop
pop
xchg
lret
xchg
push
jo
or
orl
aas
mov
sub
sub
push
in
xchg
popa
inc
xchg
sbb
pushf
jb
inc
js
adc
roll
daa
inc
or
loopne
loopne
and
sub
stos
movsl
fsubl
inc
daa
out
aaa
jl
pushf
jns
cltd
stos
xor
rorl
mov
xchg
push
mov
xor
test
call
das
mov
aad
cwtl
xor
adc
cmp
testl
ljmp
xchg
out
jecxz
les
stos
cltd
xchg
pop
inc
outsl
leave
mov
int3
pop
or
test
cmp
cmp
in
dec
fdivl
push
mov
sbb
mov
adc
int3
dec
enter
ja
sarb
out
ja
mov
daa
jmp
dec
lcall
shrl
sti
lea
push
lret
cmp
les
or
mov
mov
jb
outsb
xchg
sbb
daa
frstor
pop
pop
aad
adc
iret
aad
dec
dec
enter
cmp
xchg
pop
js
xor
es
jmp
rcrl
in
arpl
dec
adc
sub
mov
xchg
fcoms
xchg
or
push
cmpb
inc
fsubl
xor
test
dec
gs
push
sbb
pop
aad
jg
xchg
cmp
movsl
dec
fbld
xor
push
je
jo
fldenv
mov
cmpsb
loope
sahf
or
inc
rorl
xchg
les
fs
out
jno
jecxz
daa
mov
scas
mov
stos
movsb
pop
iret
and
fcoms
mov
xchg
cmp
int3
lods
jp
sub
nop
inc
and
movsl
imul
hlt
outsb
shl
movsb
cld
call
fstl
negl
sbb
inc
pop
inc
pop
add
or
add
mov
cmp
movsb
scas
mov
aad
daa
mov
add
push
inc
sbb
aam
xor
dec
notl
mov
stc
in
ret
mov
lea
jb
outsb
cmpsl
es
stos
out
sahf
jmp
jle
mov
cltd
enter
arpl
mov
pop
cmp
mov
repz
push
popa
sub
mov
pop
dec
mov
xor
roll
daa
lret
inc
inc
mov
divl
imul
pop
in
mov
cmp
dec
insb
pop
xchg
pop
xchg
aam
dec
imul
mov
addl
imul
outsb
push
lods
icebp
out
dec
popa
mov
fsts
inc
cmp
into
dec
je
or
sti
jp
mov
je
out
ftst
sbb
push
and
xchg
fstpl
int
rol
mov
push
or
stos
add
cmp
mov
xchg
push
jno
aam
loope
insb
push
lret
in
dec
bound
mov
mov
push
cmpsl
in
les
ds
push
imul
lock
popa
int3
adc
pop
cltd
sbb
add
cltd
stos
adc
imul
idivl
lret
jl
inc
cmpl
cltd
mov
dec
push
lods
xchg
mov
xchg
sbb
test
jno
ss
je
xchg
cmpsl
inc
sub
add
ja
aaa
ret
enter
shl
lods
sub
and
sub
loop
inc
xchg
xchg
adc
adc
out
test
jecxz,pt
in
sub
pop
lcall
mov
popa
and
cmpl
into
por
add
sarl
xchg
xor
push
in
jae
push
push
or
dec
mov
xor
cli
int3
xchg
push
inc
sbb
idivl
test
mov
cmpsl
roll
dec
push
fdivrp
xchg
ficoml
push
xchg
out
cmp
lods
push
shlb
adc
je
aam
mov
data16
add
push
ficoms
pop
btc
add
push
popa
mov
add
cmpsl
movsb
imul
pop
fadds
hlt
mov
cmp
push
or
sub
stc
mov
jo
jne
lock
fs
loope
adc
rcr
adc
jo
lods
or
adc
das
jecxz,pt
add
je
jns
xor
lock
pop
cmpsl
pop
sub
popf
popf
pusha
aas
fmuls
orl
mov
mov
outsl
fwait
push
divb
adc
scas
mov
jmp
ret
out
inc
arpl
mov
mov
jns
mov
or
inc
mov
push
xchg
mov
lcall
fisubrs
daa
mov
mov
push
scas
jl
mov
and
mov
pushf
les
pop
js
jmp
push
in
pop
jmp
in
fneni(8087
popfw
insl
lcall
sti
stos
pop
dec
outsl
or
inc
mov
les
mov
dec
dec
ja
subl
and
aam
and
jne
push
rcrb
mov
adc
or
dec
xchg
inc
rolb
fwait
clc
inc
xchg
pop
rclb
divl
cmpsl
sub
mov
nop
nop
dec
imul
mov
xor
jb
sbbb
mov
std
les
sub
call
push
das
mov
dec
lods
icebp
mov
xor
pop
mov
mov
notb
xchg
sub
dec
int3
stos
ret
in
mov
inc
pop
push
mov
xchg
int3
xor
adc
mov
add
cmc
shrl
cmp
push
mov
sbb
insl
subl
cmp
loop
mov
stos
mov
mov
clc
mov
aam
jo
inc
addr16
pop
cwtl
dec
adc
mov
xor
add
cmpb
mov
sbb
push
sub
xlat
daa
mov
pop
adc
int3
inc
arpl
inc
popf
loop
sarb
cltd
adc
lods
cld
rcrb
pop
pop
gs
lcall
lea
fcmovnb
mov
add
sbbl
mov
lods
stos
cmp
fadds
sbb
push
jbe
cmp
enter
and
cld
divl
inc
xor
stos
fsubrp
and
sbb
mov
lcall
or
lods
mov
mov
mov
pop
or
lret
cmp
cli
clc
cmp
and
sbbb
xchg
cmp
fistps
pop
subl
xchg
adc
mov
jae
jmp
int3
pop
push
int
jge
pop
inc
pop
sbb
push
test
adc
or
or
xchg
and
cli
mov
mov
fs
or
sbb
adc
mov
shlb
dec
loopne
and
cmp
add
clc
ljmp
jp
jns
nop
adcl
xchg
icebp
jo
outsl
or
shrb
xor
add
add
in
mov
sbb
mov
mov
dec
invd
stc
ret
jg
cld
mov
cmp
push
shl
jg
lahf
inc
ficoms
mov
adc
push
orl
mov
loop
shl
jmp
ss
mov
sbb
lods
sub
xchg
ficompl
sbb
mov
pushl
mov
jne
aaa
mov
call
inc
pusha
adc
xchg
cmp
popa
into
repz
mov
sti
dec
mov
xor
adc
mov
dec
loop
pushf
mov
sbb
lcall
mov
pop
add
bound
mov
jo
cld
lods
pop
mov
fwait
addr16
pop
jecxz
mov
add
push
xchg
inc
out
mov
aad
pop
shl
push
push
in
adc
mov
flds
mov
ror
dec
leave
jmp
lahf
dec
aas
mov
mov
ss
sub
jno
mov
add
sbb
pop
or
aad
xchg
jns
xor
leave
jmp
add
xchg
sbb
mov
test
int3
pop
stos
fs
add
sbb
mov
push
das
stos
mov
dec
add
inc
mov
jbe
imul
dec
test
rcrl
and
pushf
ds
adc
mov
or
in
push
adc
xor
adc
sub
sahf
sub
mov
push
mov
inc
ret
inc
sbb
ret
jp
cmc
xor
das
fisttpll
xchg
push
cld
fistpl
in
mov
repz
xchg
repz
add
jp
mov
andl
cmp
bound
mov
rclb
cmp
jbe
rorl
dec
rorl
inc
xor
adc
mov
pop
jno
push
lock
cs
xchg
pusha
jb
fistps
pop
xchg
sbb
adc
and
xor
mov
sbb
xor
push
cmp
or
push
add
leave
ficoml
ja
or
mov
ret
mov
pop
repz
jb
fwait
in
shlb
insb
outsb
pop
add
and
push
xlat
mov
push
inc
jo
jge
jno
gs
loope
mov
jmp
repz
imul
popf
pop
inc
push
pop
cmp
aam
sti
pop
or
sub
dec
add
cmpsl
inc
dec
fdivs
mov
jo
lods
pop
loope
int
sub
loope
cltd
or
cmp
xchg
dec
adc
mov
or
inc
js
cmp
mov
xchg
mov
lock
stos
cmpsb
adc
aam
push
notb
mov
dec
sub
mov
cmpsl
jg
out
jge
sahf
insb
jl
xorl
scas
dec
bound
lahf
inc
adc
inc
jae
cmc
xchg
enter
or
sub
inc
call
lcall
add
pop
sbb
pop
pop
arpl
aaa
pop
mov
mov
add
inc
ret
in
mov
fadd
pop
pop
dec
imul
test
adc
sbb
adc
sarb
add
jno
dec
insb
addl
pushf
cmp
mov
adc
cmp
xchg
cmp
cmp
adc
dec
sub
xchg
stc
ds
iret
mov
jbe
mov
call
sub
lcall
pop
clc
mov
xchg
mov
mov
outsl
pop
dec
addr16
jle,pt
mov
xchg
aaa
push
icebp
adc
sub
mov
or
sbb
mov
into
push
shl
enter
push
call
sti
cld
inc
xchg
icebp
jo
das
xor
mov
out
pop
pop
pop
pop
int
fdivr
mov
lds
mov
push
push
mov
scas
in
aad
out
jmp
mov
aam
cmp
mov
dec
dec
push
xchg
inc
ret
jbe
and
mov
lock
jmp
jno
es
in
jmp
jge
mov
cwtl
scas
int
or
add
call
sub
cmpsl
outsb
adc
dec
test
push
and
xchg
mov
mov
xchg
or
rolb
mov
pushf
hlt
cmp
js
push
dec
cmp
es
fs
out
pop
cld
cltd
rcrb
ret
adc
and
inc
mov
mov
lahf
inc
sub
lods
stos
loope
and
sbb
mov
loope
sysexit
dec
aam
add
inc
or
fsubrp
jp
sbb
insl
mov
lock
into
sub
enter
in
cwtl
pop
xchg
push
scas
adc
popl
test
mov
ss
adc
xchg
pop
ljmp
ret
dec
cmp
xor
fs
rorl
mul
stos
push
imul
dec
and
sbb
push
nop
push
jae
int
mov
mov
or
ja
xor
daa
out
adc
pop
sub
int
pop
xor
jle
push
mov
lds
cld
add
inc
xchg
fwait
jmp
sub
xor
pop
jb
lret
in
in
or
and
flds
leave
subb
ret
inc
lret
mov
lods
les
ja
jle
mov
adc
xor
cmpsl
addr16
stos
push
push
mov
add
mov
add
pop
cs
fsubs
pop
dec
sbb
and
fistps
sahf
cmp
ds
push
subl
inc
xor
add
bound
xor
stos
gs
cli
lret
popf
push
aam
push
pop
les
lret
xchg
cmp
add
mov
xchg
outsl
jmp
xor
lods
cmc
dec
loop
push
repz
fwait
ss
adc
jb
push
std
cmp
jno
cmp
fcompl
cmp
cmp
jb
cmpsb
and
das
xchg
js
sbb
and
mov
mov
pop
mov
cld
jp
jbe
mov
jmp
push
arpl
pop
pop
loope
sahf
pop
cmp
fnsave
jns
sub
test
loopne
mov
repz
adc
insb
popf
push
push
sbbl
enter
push
movsb
fldenv
jg
sub
hlt
shll
sub
fsubl
aas
pop
inc
pop
popa
jp
insl
lret
je
addb
push
jle
sub
adc
inc
test
mov
add
popa
pop
xor
sbb
ret
jb
push
inc
dec
subl
aaa
sarb
cli
mov
in
fildll
push
jecxz
pop
pop
sbb
push
xchg
push
je
rol
mov
mov
dec
aas
mov
jnp
test
out
out
imul
out
and
pushf
fldl
fstps
cmp
mov
push
cmp
sub
push
add
inc
cmp
mov
cmc
out
mov
outsl
ljmp
sahf
mov
repnz
shll
add
jle
popa
xor
cmp
repz
das
fs
outsl
or
inc
mov
push
sbb
push
cwtl
cmp
pop
in
jmp
enter
repnz
std
jl
mov
cmp
in
scas
adc
jmp
inc
adc
push
mov
rorb
lret
insb
fldl
enter
test
jg
mov
adc
cmp
push
daa
and
xchg
mov
and
mov
inc
pop
inc
push
pop
stos
test
sbb
jmp
jno
es
in
int3
jns
jp
push
jo
ja
jp
mov
add
ljmp
pusha
cmp
add
xchg
scas
mov
sbb
sub
or
aas
pop
out
xchg
mov
adc
dec
mov
rolb
cmpl
push
out
xor
sub
rcll
jle
push
jmp
xchg
inc
nop
popa
lea
or
mov
lods
pop
cmp
pop
jp
mov
xor
bound
mov
mov
pop
xchg
mov
int3
mov
inc
jnp
mov
ss
mov
pop
sbb
into
sub
jecxz
enter
pushf
je
push
iret
sub
mov
ss
and
pop
jo
cmp
out
xchg
sub
test
push
and
add
cmc
pop
mov
leave
xchg
dec
add
ljmp
std
inc
cld
jnp
js
jne
fwait
jo
mov
lret
push
pop
and
pop
and
popf
xchg
enter
or
in
push
cmp
mov
xor
repz
sub
test
popa
pop
push
dec
rcll
xor
lock
iret
movb
rolb
ret
cmp
sub
mov
out
dec
push
pop
pusha
pop
fcoml
fwait
jnp
jae
push
jae
int
or
add
dec
fnstsw
jg
aad
xor
lret
movsl
inc
in
andw
adc
dec
into
dec
or
insb
lock
std
jmp
fsubl
sbb
lock
dec
push
enter
pushf
add
fsubl
xchg
push
push
mov
out
fwait
mov
mov
cmc
repz
cvtpi2ps
test
mov
push
fstpt
sahf
sbb
scas
dec
adc
mov
leave
xchg
sbb
jle
lock
outsl
cwtl
loop
stos
loope
pusha
and
xchg
mov
pshufw
mov
mov
in
push
xchg
push
cs
sub
test
sbbb
jle
mov
test
mov
rorb
iret
fldt
jbe
jne
cltd
xor
scas
dec
data16
mov
and
adc
int3
xchg
aam
adc
mov
insb
or
add
cmp
fidivs
ljmp
and
sahf
loopne
fstps
fsubrp
push
aam
xchg
bswap
adc
sub
movsl
push
jp
cli
pop
mov
test
and
in
clc
out
aam
test
pusha
and
fistpl
xchg
push
jne
iret
cmc
mov
enter
push
sbb
xor
adc
and
cwtl
scas
pop
sbb
aad
f2xm1
iret
push
into
or
or
sahf
add
divb
xor
xchg
arpl
movsl
jno
pop
imul
mov
aas
xchg
ja
xchg
clc
or
addl
push
cmp
xor
jb
scas
in
or
sbb
xlat
ror
push
pop
mov
or
fnstcw
and
test
out
outsl
jne
fs
in
pop
mov
adc
imul
jne
and
andb
clc
mov
in
mov
or
sub
loope
fdiv
push
cmp
add
mov
cmp
inc
adc
outsl
stos
scas
xchg
pop
lods
sahf
fs
push
jmp
and
adc
dec
out
je
pop
xchg
aas
cwtl
int3
push
popf
cmpb
stc
and
sub
leave
test
mov
arpl
sbb
adc
or
ds
mov
jmp
gs
and
xlat
pop
into
test
dec
xchg
inc
addl
shrl
fdivl
xchg
scas
mov
sub
adc
or
pop
ds
push
repz
ss
into
add
ret
cmp
cli
mov
mov
repnz
dec
xor
scas
movl
rcrl
dec
sbb
test
push
test
mov
jecxz
mov
cli
aam
lods
icebp
nop
xlat
inc
daa
mov
mov
sbb
pop
int3
orb
mov
call
and
push
xor
jae
ret
adc
push
pusha
dec
idivb
std
aad
fists
push
add
mov
scas
aam
xor
mov
arpl
fistps
mov
inc
pop
inc
inc
stos
mov
ds
jp
jns
jae
sub
insl
fsubp
cli
data16
bound
cwtl
pop
shll
dec
fcomi
aas
mov
xchg
jne
lcall
cmp
sbb
fisubl
fcomps
aad
xchg
add
add
scas
jbe
inc
std
jl
out
inc
iret
adc
insl
mov
out
aad
pop
arpl
sbb
adc
lods
cmc
into
rcrl
enter
cmc
mov
cmp
mov
lret
dec
sub
sbb
cmp
or
pop
lcall
out
aaa
push
add
pop
sti
cmp
lock
xchg
fldenv
push
imul
lahf
sbb
mov
dec
cwtl
bswap
xchg
aas
inc
cltd
xchg
or
fsts
pop
jne
aas
scas
adc
inc
pop
int3
pushf
sbb
das
test
ror
andl
sub
xchg
cmp
mov
in
jo
ljmp
addr16
fildll
pop
rcr
in
push
jb
add
les
sti
jmp
mov
mov
jne
fistpl
movsb
and
add
scas
push
lods
jg
int
es
sub
cli
aas
stc
mov
push
icebp
mov
and
icebp
pop
aad
inc
mov
adc
mov
cmp
inc
jle
pop
mov
aaa
in
cmp
cmpsl
push
and
cmc
xchg
cmp
out
mov
dec
mov
roll
mov
xor
icebp
ds
cmpsl
push
in
fbstp
in
ss
pop
xchg
es
lret
fmull
or
flds
out
into
aas
ss
cmp
mov
and
pop
and
sbb
xchg
mov
xchg
add
inc
ret
and
add
mov
in
out
stos
mov
mov
pop
cld
daa
out
sbb
pop
imul
nop
int
cwtl
dec
mov
ret
cltd
and
adc
push
loope
mov
add
nop
sbb
int
leave
add
or
dec
sti
pusha
shll
notb
push
sub
loope
cmp
jp
fldl
mov
adc
mov
mov
gs
ja
pop
xchg
adc
xchg
xchg
or
sbb
xor
orl
cmpsb
mov
shlb
mov
cmp
jne
mov
jmp
pop
outsl
inc
mov
pusha
xchg
loop
pop
lcall
push
jnp
out
or
loope
or
xor
mov
cmc
and
scas
cs
dec
imul
iret
xor
sub
pop
lods
into
or
ret
pop
sub
mov
adc
jmp
movsl
or
pop
mov
ficompl
xchg
adc
mov
or
or
mov
cmp
fcomi
ja
pop
adc
jge
into
lods
in
jmp
sahf
loopne
sbb
push
rol
adc
int3
push
leave
dec
mov
mov
mov
clc
jns
call
cmpsl
ret
in
and
pop
loop
cld
push
cmp
push
repnz
or
cwtl
mov
mov
push
xor
adcl
mov
push
xchg
js
scas
into
dec
jle
inc
movb
popa
cmp
push
bound
hlt
jae
pop
das
pusha
hlt
push
loope
pop
pop
push
loope
push
push
xchg
push
cmp
or
das
lret
loop
inc
sbbb
xor
in
fildll
sub
add
add
cmp
insl
lea
subl
aad
shlb
adc
sbb
jns
fwait
lret
in
pop
mov
arpl
cmc
sbb
lret
int
mov
ret
filds
xor
shll
cmpsl
es
imul
lock
cmpsl
movb
mov
sahf
stc
cmp
mov
repz
in
sub
sub
jno
add
lds
lcall
push
pop
xchg
cmc
cmc
into
inc
or
pop
xor
mov
xor
notb
lahf
mov
push
mov
cwtl
add
push
xchg
inc
push
mov
into
out
lea
dec
shlb
add
cmpsl
jno
mov
jne
stos
repnz
adc
push
jno
push
les
ret
add
cmp
cs
jno
sbb
and
arpl
xchg
push
mov
pop
or
stos
enter
popf
rorb
pop
imull
sub
adc
out
dec
imul
loope
dec
jle
or
adc
lea
inc
ret
mov
and
mov
mov
pop
subb
popf
mov
mov
fdivrl
lods
aam
adc
cmovns
dec
or
inc
mov
std
js
je
in
xor
mov
out
sub
out
cmp
sbb
adc
dec
test
xchg
push
mov
outsb
cmp
xchg
sub
mov
jno
mov
and
daa
pop
mov
push
xchg
sub
jecxz
inc
and
sbb
jmp
mov
shr
dec
jno
enter
inc
and
sbb
xchg
pop
iret
sub
push
lods
inc
mov
addb
pop
jp
cs
adc
mov
stos
or
sbbl
cli
xlat
pop
cwtl
push
mov
das
movsb
int3
jle
and
cmp
mov
sbb
data16
in
popf
call
and
pop
sbb
xchg
xchg
lret
adc
fildll
push
jle
cmp
mov
push
cli
add
loope
xor
pop
mov
inc
push
mov
les
sub
arpl
scas
lahf
idiv
hlt
jne
xor
in
fwait
pop
push
or
into
test
mov
sbb
mov
icebp
or
jle
mov
scas
aad
aaa
repnz
xlat
in
mov
popf
fistpll
ficoml
cmp
leave
and
orb
stc
cmpb
data16
outsl
jmp
cli
mov
dec
adc
cltd
sbb
cmp
or
or
addl
pop
ja
jp
xor
outsb
mov
outsb
fwait
test
mov
fldenv
shrl
cmp
mov
xchg
cmpsb
rolb
jns,pt
xor
jbe
jmp
xor
enter
stos
xchg
fistpl
lock
fcoms
dec
xor
pop
iret
dec
mov
cmp
pop
mov
mov
cli
jne
stos
lods
sub
xchg
in
sub
dec
cmp
sbb
mov
mov
dec
lds
ljmp
pop
rcl
jle
mov
out
mov
test
loop
fwait
popa
rol
lret
xchg
out
jne
dec
jb
mov
add
pop
mov
repnz
xlat
or
push
loop
aam
mov
or
int3
and
push
mov
fnsave
cmp
cmc
mov
imul
icebp
adc
arpl
loop
cmpsl
xchg
rcrb
xchg
xchg
adc
xchg
clc
addl
mov
sub
and
sbb
pop
rorl
movsb
lods
sar
mov
aaa
daa
std
jle
sti
rep
pushf
jne
jb
outsl
das
adc
push
push
or
int
pop
push
adc
inc
loopne
mov
cmpsl
lock
mov
mov
sub
jp
xchg
mov
popa
stos
sahf
mov
sahf
or
push
xchg
sbb
add
xchg
push
inc
ds
mov
cmp
jne
cmp
mov
mov
stos
ja
xchg
adc
nop
or
mov
push
mov
cltd
fidivl
push
pop
inc
aam
outsb
or
mov
sub
jno,pt
mov
push
sub
xor
mov
or
ret
xchg
push
test
or
cmpsb
ret
les
enter
scas
stc
sahf
ljmp
fbstp
xchg
out
cmp
pop
mov
adc
xor
ss
lea
inc
add
sarb
mov
mov
mov
fs
jbe
aad
fcoms
lock
or
les
add
xlat
mov
jae
nop
movsb
in
movsl
loop
sbb
push
cltd
js
or
mov
dec
jmp
push
jg
in
pop
pop
pop
jl
jnp
out
shlb
mov
mov
push
add
dec
dec
jmp
aas
jae
out
out
ss
jle
test
les
aaa
ret
cmp
gs
jmp
scas
leave
jmp
push
daa
inc
sbb
fincstp
adc
mov
out
xchg
jae
adcl
push
clc
mov
rcrb
xchg
sbb
push
fiadds
push
out
xchg
dec
cmpsb
out
popl
hlt
dec
xchg
arpl
pop
loop
push
dec
std
adcb
fucomp
imul
mov
pop
pop
add
add
into
testb
addl
je
xchg
dec
or
inc
and
sbb
mov
iret
lock
or
dec
cmp
fidivrl
mov
mov
sub
jmp
rcr
aas
dec
pushf
sbb
mov
mov
idivl
orl
mov
push
mov
out
imul
pop
and
mov
xchg
das
test
lret
cs
jo
call
imulb
mov
cmp
in
imul
mov
sbb
lcall
add
mov
movsl
cmp
js
mov
sbb
cwtl
or
adc
daa
loopne
xorb
mov
sub
and
xchg
scas
fmuls
xor
mov
imul
mov
xchg
xchg
xchg
push
out
pop
xchg
icebp
jo
xchg
nop
cmp
js
lcall
aas
shl
xor
data16
fidivrl
enter
into
mov
push
or
pushf
xchg
inc
popa
pop
jnp
mov
repnz
mov
cwtl
sub
fimuls
clc
xchg
leave
jmp
cld
add
mov
mov
divb
ljmp
xchg
add
xchg
xlat
iret
inc
ror
jl
jns
or
lods
jne
cld
cli
jnp
stos
int3
pop
in
mov
insl
sub
jae
sub
lds
xlat
push
adc
ss
cmp
xchg
mov
pop
mov
xchg
xor
outsb
scas
cwtl
sbb
cmp
add
popf
fidivs
mov
xchg
ret
aaa
jl
pop
ret
inc
adc
cltd
inc
cmp
dec
repz
lahf
shrb
xor
inc
cltd
popf
clc
sbb
push
mov
and
jno
ret
pop
loop
inc
xadd
repz
shr
lods
mov
popa
test
sbb
pop
jnp
leave
sbb
int3
push
push
xor
movl
test
and
ja
out
pop
push
dec
data16
icebp
out
push
jmp
xchg
dec
in
add
dec
sbb
imul
sbb
jno
cmp
mov
arpl
aaa
test
push
mov
movsl
addl
or
add
mov
push
stos
les
stos
jb
and
popf
insl
popa
fsub
lcall
adc
scas
adc
or
nop
cmpb
cmpl
aaa
stos
fs
fildll
xchg
sahf
into
int
rcll
icebp
push
mov
pop
leave
pop
inc
mov
leave
jl
imul
push
cwtl
test
pop
ficomps
aaa
pop
clc
arpl
add
imul
push
cmp
mov
or
in
gs
stos
sbb
js
lret
test
addr16
jmp
or
icebp
xchg
xor
mov
mov
pusha
ficomps
fcoml
lea
inc
adc
add
aas
mov
sub
je
out
arpl
mov
test
outsl
aad
rclb
lret
mov
dec
movb
shl
or
and
jno
jmp
cld
sub
inc
sbb
into
sbb
addb
mov
pop
addl
stc
push
out
mov
shlb
inc
push
mov
and
repz
mov
rcll
mov
mov
xchg
inc
mov
lock
cmpsl
div
xor
jae
in
lods
dec
xlat
loope
pop
rcr
inc
inc
pop
notl
or
mov
jnp
xorl
fiaddl
jno
stos
jecxz
incl
and
movsl
daa
clc
mov
shl
call
cmp
push
or
ja
movsl
add
ja
lock
into
jb
cmp
arpl
sahf
and
adc
rorl
dec
pusha
mov
aas
jbe
xor
aaa
out
mov
das
das
jmp
mov
shlb
testl
addl
std
pop
aas
mov
ss
jns
int3
lcall
filds
push
mov
xor
repz
xchg
xchg
mov
in
ret
roll
xchg
mov
mov
fbstp
aas
pop
ficoml
cmp
sahf
leave
dec
mov
stos
inc
andl
jl
mov
xchg
fs
push
push
test
jo
fcoml
mov
fistl
xchg
push
lods
cli
inc
inc
movl
cli
add
fldcw
mov
xchg
cs
cmpsb
es
xchg
xchg
sbb
adc
adc
xorb
inc
das
lods
or
add
and
xchg
idivb
jb
jg
pusha
mov
add
movsb
bound
mov
repz
push
test
adc
add
add
add
mov
mov
fldt
movsb
stos
xchg
lahf
mov
hlt
add
mov
dec
leave
mov
push
mov
inc
xor
and
call
jno
cmpsl
pop
out
arpl
pop
xchg
rol
push
jae
adc
xchg
xor
mov
mov
js
in
loopne
pushf
mov
and
aad
pop
push
mov
or
push
lods
lods
lods
xorl
xor
pop
aad
out
int
add
cwtl
pop
sar
cltd
pop
mov
inc
or
nop
jp
loope
cs
popa
pop
out
arpl
insl
push
add
and
stos
pop
push
aam
push
or
inc
ret
mov
jl
shl
jge
add
jmp
stos
leave
jo
sbb
xchg
sbb
gs
cltd
or
adc
push
mov
jg
xchg
mov
pop
lods
sub
daa
lods
lretw
mov
sub
fldenv
xchg
dec
xchg
fnstenv
les
add
xchg
mov
repnz
shr
mov
adc
mov
repnz
or
int
add
pop
adc
sahf
mov
push
mov
cmc
bound
jb
outsb
mov
and
push
sub
sbb
enter
mov
xor
or
hlt
sbb
push
lods
mov
sub
push
out
mov
mov
cltd
pushf
mov
cli
cmovs
jg
mov
mov
pop
pop
push
sub
aas
pop
stos
mov
push
mov
push
lea
push
pop
dec
mov
jmp
aaa
inc
jns
cli
hlt
jle
popa
dec
jmp
mov
sub
mov
jge
lea
mov
clc
div
cmpsl
and
cmp
cmp
mov
je
xor
stos
popf
fld
movsb
push
loopne
dec
sbb
dec
mov
push
mov
insl
mov
xor
shlb
or
jmp
nop
loopne
fs
aad
xchg
arpl
lods
inc
fsub
inc
adc
out
jl
push
xor
cmp
xorl
cmp
pop
xor
test
pop
int
dec
ficoml
or
push
jmp
rolb
enter
fnstenv
movsl
inc
in
jecxz
and
psrlw
adc
dec
pavgb
sbb
inc
fisttpll
loop
mov
sbb
in
jmp
ljmp
stos
fnsave
les
mov
outsl
inc
dec
lea
movsl
sbb
movsb
outsl
testl
pop
sub
jmp
pushaw
ficomps
inc
sbb
filds
xrstors
jno
nop
les
jge
mov
adc
mov
ret
pop
and
pop
or
pop
push
mov
mov
sbb
xchg
inc
mov
jne
adc
imul
loop
sbb
dec
dec
mov
xchg
jns
jbe
inc
or
dec
sti
xchg
scas
repnz
popa
xor
stos
adc
mov
cmp
mov
cmp
mov
mov
bnd
stc
divl
clc
cmp
hlt
mov
call
bound
xlat
jae
xchg
roll
mov
in
add
jge
mov
xchg
pushf
insb
sub
xor
test
aad
pop
pop
adc
test
dec
or
clc
arpl
jle
mov
js
jns
push
in
loope
insb
ljmp
and
pop
cltd
sbb
inc
xchg
push
mov
pop
rolb
sbbb
aam
mov
lahf
cmp
mov
arpl
loope
sarl
add
movl
inc
push
fdiv
cs
ss
jae
shr
call
addr16
clc
pusha
push
cltd
push
notl
out
adc
aas
pusha
stc
add
jbe
lods
fnsave
lods
sub
push
es
movsl
andl
dec
jb
or
sub
or
sahf
std
jge
mov
hlt
push
je
iret
out
rorb
enter
pop
pop
mov
aaa
aad
jns
btc
pop
add
add
xor
fidivs
mov
daa
mov
and
mov
inc
dec
dec
leave
mov
dec
push
sti
inc
std
jle
incl
pop
hlt
mov
jb
in
mov
dec
arpl
ret
loopne
sbb
pop
mov
xchg
adc
xchg
adc
push
lret
prefetch
popa
aas
aas
movsb
gs
pushf
je
jns
adc
push
icebp
add
roll
pop
mov
xchg
sub
call
ret
inc
popa
cmp
pusha
jg
adc
jo
loop
enter
test
mov
xchg
adc
std
insb
aam
or
push
fwait
pop
mov
test
lods
int3
fs
cmpsl
mov
andl
into
mov
cltd
push
iret
outsb
xchg
int3
bound
inc
add
jl
dec
push
mov
notb
in
in
fists
cwtl
aaa
int
xor
fldt
jmp
dec
push
xchg
fidivrs
outsl
cmp
or
or
push
pop
pushf
cmpsl
adc
sbbl
in
add
dec
cld
dec
sarl
fnstcw
mov
in
scas
jno
test
in
insb
sub
std
cltd
les
cltd
push
outsw
iret
loope
shlb
loop
inc
fwait
adcl
mov
cwtl
out
lods
jmp
incb
fidivl
mov
sub
mov
and
inc
jne
insl
jp
and
dec
xor
mov
dec
stc
and
vcmppd
pop
aaa
push
pop
cltd
sub
cmc
add
sbb
jp
pusha
xor
cmp
xor
mov
xor
and
cli
xchg
xlat
mov
mov
mov
mov
jl
daa
mov
ljmp
dec
push
dec
in
bound
in
ds
in
ja
adc
sti
add
je
inc
push
add
mov
daa
dec
sub
lock
adc
pushf
adc
xor
mov
test
cmp
inc
sahf
shlb
rorl
pop
iret
sub
inc
lahf
test
push
cmp
clc
mov
xchg
lds
xchg
stos
or
mov
fdivrs
ss
mov
or
test
xchg
shll
sbb
adc
cmp
imul
cli
jnp
and
push
mov
pop
aad
ret
push
ret
je
and
dec
dec
aad
or
adcl
mov
xchg
jecxz
sbb
inc
or
sbb
push
cmpsb
ljmp
push
fistpll
sarl
aaa
mov
lods
inc
ret
inc
push
and
andl
out
insl
scas
loop
xchg
popa
lea
xchg
adc
je
jmp
outsb
leave
in
dec
cmp
addr16
notb
mov
cs
xchg
mov
xorb
xchg
decl
int3
stos
stos
mov
mov
jmp
ljmp
fstpl
and
mov
dec
jmp
outsb
andl
ja
jl
jno
mov
cmp
pop
test
push
popf
pop
lahf
sbb
popl
jae
dec
or
hlt
gs
jge
repnz
mov
jo
lods
jge
dec
lds
xchg
push
pop
popf
ficomps
ja
sbb
xchg
es
ret
cmpb
cmp
mov
aaa
jbe
jb
push
mov
aaa
frstor
lcall
mov
xor
int
sarl
lods
inc
divl
loopne
jmp
lods
jno
arpl
sbb
rcrl
out
adc
int
or
add
lcall
negl
lods
lods
push
or
sub
mov
cmp
adc
into
lods
push
test
inc
push
add
sbb
sbb
enter
mov
les
xor
pop
in
lahf
jecxz
sbb
inc
popa
cltd
pushf
xor
js
mov
dec
xor
sub
fidivrs
repnz
aaa
loopne
das
scas
adc
mov
pop
test
pop
sub
pushf
push
push
and
add
mov
inc
cmp
jns
lds
loope
mov
scas
push
jmp
and
jno
inc
popa
fisubs
gs
gs
mov
sub
mov
enter
jg
pusha
ds
loope
xor
jmp
mov
fcoms
aad
daa
iret
adc
push
mov
xor
cmpsb
mov
cmp
lret
push
aam
xchg
jl
jnp
jp
shl
push
mov
dec
adc
mov
in
add
xor
cmp
imulb
or
mov
adc
ficompl
push
aam
sbb
dec
or
test
inc
std
pop
jbe
std
cmc
popa
mov
lods
or
shl
add
jnp
dec
jae
dec
outsl
shr
ret
add
sub
pusha
mov
xor
lcall
mov
push
cmp
xchg
xor
dec
cs
stos
fmuls
shrl
mov
dec
and
or
out
out
jbe
pop
adc
les
xlat
arpl
ss
jg
mov
jmp
lods
cmp
pop
mov
sbb
adc
lods
sbb
dec
stos
es
addl
sub
popa
nop
cmc
je
jmp
insb
inc
bound
dec
into
int3
adc
cmp
cmp
or
sub
add
and
jmp
imul
adc
pop
sub
daa
mov
sbbl
xorps
dec
mov
sahf
repnz
mov
mov
jne
jb
outsl
xor
ljmp
insl
sahf
iret
fistpl
fstps
aaa
jne
xchg
sahf
mov
sub
cmp
sub
xchg
push
mov
sbb
sub
pop
and
aad
xor
rorb
fadds
xor
jnp
jbe
shr
aaa
cld
inc
sub
popa
inc
xchg
and
pop
fwait
inc
mov
inc
nop
lea
mov
test
jg
test
cmc
xor
sub
popa
lea
pop
lcall
adc
psubsw
ret
outsb
mov
gs
lock
inc
adc
dec
fcomip
pop
popf
xchg
fdivr
pushf
pop
push
mov
xchg
daa
cmpl
popf
mov
orb
gs
dec
ljmp
stos
cwtl
les
mov
adc
mov
or
inc
andl
sbb
jno
or
xchg
cmp
mov
or
mov
xlat
mov
mov
jb
or
loop
sub
lcall
in
mov
stos
or
push
xchg
icebp
or
leave
dec
or
add
inc
mov
push
push
mov
jo
lock
iret
imul
in
pusha
sbb
push
mov
jb
mov
pop
mov
sub
pop
sbb
fstps
ja
push
push
pop
xchg
cwtl
and
adc
dec
pop
sub
dec
mov
divl
jle
fyl2xp1
jnp
jne
or
outsl
jmp
and
addr16
dec
lock
sbb
jns
jbe
jmp
add
fdivrl
xor
sub
xor
lea
stos
sbbl
add
dec
cli
mov
js
sub
lock
fbld
xor
adc
nop
jns
nop
subb
int
addl
add
arpl
or
loope
xor
test
and
jbe
sbb
and
pop
cwtl
mov
test
arpl
ret
inc
shlb
cwtl
dec
adc
fstps
incl
out
inc
bound
pop
inc
pushl
je
popa
fdivl
sbb
das
mov
sub
cltd
scas
in
or
and
mov
mov
push
xchg
xor
adc
mov
xorb
in
out
es
mov
std
mov
dec
fistl
stc
push
jbe
or
ret
loop
dec
mov
xor
das
out
pop
mov
mov
push
push
pop
fwait
pop
pushf
lea
push
xchg
mov
int
cmp
inc
rorl
pop
sbbb
jns
jns,pt
lods
hlt
mov
daa
xor
das
cltd
xor
pop
adc
mov
xchg
adc
xchg
cld
push
outsb
mov
mov
mov
xor
in
pop
xchg
inc
mov
scas
and
pop
mov
cmp
mov
xor
les
jle
or
stos
fidivl
insb
jno
jb
or
cli
es
adc
push
call
nop
add
pop
pop
jp
sub
cmp
jmp
and
inc
push
out
fists
sbb
fsubrs
sub
movl
mov
fwait
xor
or
push
mov
mov
imul
cwtl
movsl
stc
enter
or
add
add
sub
mov
cmp
xlat
sub
mov
fst
ficompl
fcoml
add
int
add
lret
stos
cmp
rorb
pop
idivl
xor
mov
adc
mov
xchg
les
push
inc
adc
mov
repnz
cmpsb
je
add
cmp
insb
add
outsl
sbb
lahf
jae
sbb
add
push
rclb
leave
ret
mulb
or
mov
stc
aaa
mov
insl
jmp
inc
arpl
adc
sbb
adc
lahf
test
inc
jo
mov
push
xor
daa
popa
inc
sub
sub
test
test
imul
mov
push
adc
dec
dec
invd
xor
inc
shlb
jno
negl
lock
inc
pop
fdivrp
lods
inc
addr16
cmp
sbb
pop
sti
xchg
jmp
inc
mov
add
js
xchg
mov
in
lahf
nop
scas
cltd
int
cmpsl
jns
or
adc
ficompl
lcall
sbb
or
movsb
cmp
and
cltd
inc
icebp
jp
outsl
arpl
sub
jmp
sub
movsb
popa
aas
jp
sbb
adc
jnp
or
andl
mov
jmp
or
lock
mov
sahf
and
mov
aad
xor
stos
jmp
subl
sub
aas
sbb
bnd
loop
or
imul
xor
pushf
ret
sbb
or
pop
nop
adc
daa
inc
in
push
dec
and
mov
jb
xor
xchg
test
jg
pop
pop
mov
int
daa
outsb
fs
bound
inc
push
leave
cltd
mov
jnp
js
mov
inc
xor
enter
jnp
cmp
mov
pop
mov
sbb
inc
mov
out
ret
jp
mov
xor
in
scas
es
fnstcw
idivl
pop
xchg
inc
xor
dec
or
and
shlb
js
xchg
push
mov
mov
jo
or
rolb
sahf
roll
cwtl
push
faddp
xlat
ja
ror
or
shll
inc
subb
jg
mov
xchg
loope
sub
mov
add
pop
mov
iret
int
xchg
aas
scas
mov
jle
and
aas
sbb
icebp
stos
ja
outsb
popfw
dec
in
loop
fbld
sbbb
sti
sti
aam
adc
mov
xchg
inc
mov
notb
xor
dec
jecxz
cltd
jmp
or
push
mov
push
mov
xchg
xor
es
mov
and
bound
ljmp
loopne
inc
stos
fdivl
push
int3
push
inc
fcompl
pop
insl
mov
mov
aaa
xchg
lcall
or
and
cltd
cmc
out
out
mov
or
dec
and
sti
rep
pushf
jne
jb
outsl
das
adc
cmpsl
jg
jg
movsw
mov
enter
xchg
or
push
cld
insb
add
fnstsw
fdivrs
das
and
in
or
push
mov
and
adc
push
int
cmp
push
sub
or
sbb
mov
cmc
adc
jnp
add
fwait
push
js
mov
enter
sub
ss
jg
mov
sub
lea
pop
push
push
lock
cmp
sbb
loope
sub
addr16
or
popa
or
xlat
add
inc
cld
xor
mov
outsb
fnstenv
outsl
inc
dec
jmp
pusha
ficoms
js
sbb
xchg
or
into
or
adc
loopne
cmpb
data16
mov
jne
lock
mov
and
jbe
push
push
into
dec
inc
cli
xor
repnz
push
icebp
and
outsl
jmp
ljmp
pusha
ficomps
rcrb
and
lock
bound
cs
in
mov
pop
out
and
mov
add
arpl
push
pusha
jl
movsb
sbb
mov
lods
rorl
sbb
aaa
lcall
mov
and
popa
pop
outsl
lahf
cli
in
aaa
int3
adc
or
rorb
cmpl
lods
lahf
jnp
cmpsb
daa
addr16
and
pop
mov
and
loopne
xorb
mov
iret
sub
sarb
pop
inc
outsl
pop
jl
das
sbb
dec
int
pop
outsl
popa
ljmp
sub
lret
jnp
int
xchg
inc
mov
cwtl
dec
mov
ja
and
daa
in
fs
adc
fstps
leave
pop
or
jo
jle,pt
hlt
popf
jg
movsl
sti
sti
fxtract
mov
jbe
loope
jo
repz
fs
jmp
imul
aaa
int
nop
leave
xchg
je
or
test
scas
mov
fdiv
push
cmpsb
fsubrp
xor
cmpsb
and
inc
std
sarb
cli
jns
jbe
jae
jle
mov
cmp
cmpb
cmp
cmp
movsl
in
popf
pusha
pop
fcoml
xchg
int3
lcall
movl
iret
cmp
xchg
mov
aam
cs
movsl
pop
cmpsb
loopne
popf
sbb
fsubrs
sbb
popf
nop
movsb
bound
ret
or
add
xchg
fincstp
ds
push
push
jo
or
add
je
cmpsb
arpl
fidivrl
push
jb
scas
add
dec
jmp
jmp
jo
sub
xor
clc
add
mov
dec
and
pop
mov
adc
lret
or
inc
add
shll
hlt
or
enter
shrb
sti
adc
ljmp
inc
sbb
mov
cmpsb
jmp
adc
mov
mov
adc
lods
dec
or
and
iret
ja
fadd
jno
rclb
xor
clc
or
mov
add
add
aas
fnstcw
in
int
loopne
sub
daa
shll
pop
mov
out
roll
jecxz
mov
cmp
sub
je
roll
mov
push
cmp
mov
aas
call
mov
jecxz
add
jl
stc
cmp
cmc
lahf
sahf
xchg
rdmsr
lods
push
out
inc
pusha
and
and
faddl
xor
or
or
mov
add
bound
sbb
notl
int3
out
out
loopne
and
fidivrs
jle
aad
aam
and
inc
dec
or
dec
mov
jns
dec
add
insl
in
call
shll
cltd
popf
cmp
pop
adc
adc
mov
xchg
and
sbb
lret
mov
lahf
std
add
lods
js
fcomp
cmp
movsb
jp
xor
ljmp
mov
cmc
cmc
adc
lods
enter
and
pop
mov
xchg
push
je
push
add
inc
mov
aaa
int3
mov
xchg
push
into
adc
hlt
jo
test
and
fidivrs
inc
push
adc
dec
or
enter
add
inc
mov
jo
add
jl
or
pop
pop
cmp
push
xor
sub
push
add
pop
cmp
xor
into
adc
icebp
ss
or
xor
add
loopne
loopne
cltd
mov
fsts
push
lret
mov
std
mov
push
ss
mov
mov
test
inc
movsb
xchg
adc
push
push
pop
or
addb
sbb
and
or
and
or
cmp
pop
xor
cmp
jmp
mov
rolb
xlat
je
shr
xor
xlat
mov
sub
pop
popf
stc
push
xlat
cmc
xchg
push
lock
in
or
imul
addr16
sbb
sub
sbb
and
inc
sbb
loop
fcmovbe
aad
mov
mov
movl
clc
pop
jno
icebp
xchg
mov
stos
callw
and
loope
push
ds
js
into
xor
xchg
cmp
in
or
xor
in
adc
shll
popf
fs
aad
sbb
lods
jno
push
mov
lret
dec
inc
fs
sar
inc
mov
jns
pop
data16
pop
push
sub
jmp
shl
orb
testl
cmp
jg
jl
lock
scas
into
and
mov
int3
jae
aad
mov
push
fmuls
cli
inc
ds
and
ret
out
call
arpl
push
pushf
loopne
outsl
outsl
fsubl
pop
sbb
jle
xchg
int
or
add
loope
aas
cmp
fstp
dec
jno
mov
rcrb
test
sbbb
sbb
lret
jge
mov
pop
repnz
jnp
js
xchg
insl
shlb
movsb
inc
stos
shl
jp
nop
aaa
cld
sbb
push
gs
out
lds
or
loop,pt
xor
sub
mov
or
ljmp
cli
into
and
into
dec
outsl
int3
les
std
jle
pop
jns
mov
jno
out
lcall
add
or
ficompl
fadds
dec
repz
imul
clc
aas
inc
mov
addr16
scas
cs
lods
movsl
fmull
pop
inc
fsqrt
pop
cmp
mov
push
mov
cmp
scas
aam
out
adc
sahf
ja
xchg
sub
xchg
pop
pop
sub
into
stos
ret
mov
mov
stc
push
outsb
mov
sub
mov
daa
and
jns
cwtl
dec
xchg
inc
sbb
and
sti
fistpll
sub
jmp
mov
arpl
lock
aad
or
out
bound
jbe
adc
lea
or
xchg
jl
cmp
sbb
cmp
xchg
cs
out
mov
jg
cli
sub
mov
outsl
int3
les
std
jle
cmc
lods
pushf
jne
out
outsl
jmp
int3
arpl
data16
pop
push
cwtl
pop
jne
push
mov
or
or
xchg
sti
xor
stos
xchg
in
movsl
or
push
cmp
rol
aad
scas
inc
dec
dec
movb
test
cmc
cltd
cli
cld
divl
jne
jo
adc
call
pop
lahf
clc
jb
mov
lret
mov
arpl
mov
stc
in
mov
mov
nop
test
test
inc
add
fcmove
das
sbb
leave
int3
enter
cmp
xor
push
sbb
gs
insl
jmp
addr16
pop
adc
aas
cld
xchg
xchg
xchg
adc
lret
xchg
stc
or
outsl
pop
mov
sbb
dec
imul
xchg
jbe
sbb
fdivr
pop
aad
adc
dec
dec
dec
jmp
orb
xchg
push
mov
cmp
jns
ja
ja
outsl
sub
in
in
xchg
push
sbb
out
or
int
test
andl
xor
adc
cs
stos
fs
xchg
or
cltd
push
fwait
adc
push
sbb
lods
dec
popl
sarb
sub
dec
push
ljmp
fwait
outsb
mull
dec
imul
les
les
push
xchg
inc
xlat
xor
mov
add
mov
mov
outsl
xor
xchg
xchg
pop
mov
mov
sbb
push
lock
int
jge
mov
insb
cmp
cmp
mov
jae
scas
dec
jle
pop
pop
mov
pop
xchg
cld
ficoms
dec
lret
inc
mov
mov
xchg
mov
mov
adc
fisttpl
movsb
pop
pop
mov
cmp
testb
enterw
lds
cmp
shrl
pusha
inc
jo
data16
into
cwtl
lret
xchg
jge
stos
orb
add
jl
push
aaa
cmc
mov
mov
popa
lods
sahf
test
pushf
xchg
cmp
aam
xchg
mov
dec
mov
loop
xorl
test
mov
jae
in
arpl
push
imul
push
jnp
addr16
xchg
xchg
test
and
push
test
inc
loop
jmp
pop
fcoms
adc
mov
scas
and
fcoms
mov
mov
scas
jg
ljmp
mov
out
jne
or
addr16
pop
xchg
adc
bound
mov
mov
push
push
cld
sahf
push
xor
test
shlb
sbb
xchg
sub
push
aam
iret
push
mov
inc
enter
mov
sarb
clc
jns
lock
adc
paddq
arpl
cwtl
xchg
xchg
xchg
or
jbe
test
outsl
jp
cmpl
mov
fnstsw
xorl
dec
sub
mov
jl
xchg
pop
aam
icebp
push
pop
dec
iret
dec
shll
roll
fdivr
xor
inc
outsl
adc
outsl
out
push
push
cmp
jmp
nop
adc
lcall
sti
or
mov
repnz
sub
cmpsb
jecxz
mov
ficompl
push
mulps
dec
orl
pop
sub
sbb
ja
push
sub
stos
adc
mov
push
out
cmpsl
inc
xchg
adc
push
out
pop
xchg
push
add
adc
and
cs
cmp
mov
out
daa
bound
addr16
repz
pop
adc
adc
cmp
xor
fdivrl
fxch
jns
sbb
pop
cli
out
mov
ficomps
xchg
mov
adc
inc
sbb
cld
pop
lock
daa
sub
gs
xor
repnz
addr16
test
inc
lcall
dec
xor
iret
adc
xor
jle
xchg
repnz
stos
test
mov
ss
jne
push
push
cs
xlat
jae
and
cltd
pop
inc
xchg
enter
cld
fadds
test
xchg
dec
sub
dec
mov
in
xor
das
in
in
or
inc
inc
dec
fistpl
push
or
inc
rol
inc
mov
loop
mov
jp
pop
jae
outsb
fnstenv
into
call
movsb
xchg
and
add
in
push
jo
in
call
insb
add
and
sbb
push
lods
js
sub
cltd
cwtl
dec
insb
test
add
orl
sub
add
test
movsl
dec
mov
dec
stos
mov
add
leave
jl
adc
imul
jg
movsb
jge
fsub
sti
pop
mov
into
mov
or
cmpsb
in
inc
mov
mov
lcall
cmp
mov
jmp
inc
ret
sbb
pop
aad
push
push
mov
xchg
cs
adc
movb
in
dec
gs
mov
mov
jg
lods
int
sub
arpl
xlat
shlb
push
xor
or
add
push
jnp
inc
clc
mov
mov
js
in
sbb
sub
loope
mov
fistl
push
rcr
inc
rorb
repnz
ss
and
push
xchg
pop
mov
stos
loopne
sub
leave
fs
roll
out
mov
push
inc
fistpll
repnz
lahf
sub
test
andl
push
shr
int
cs
add
cmpsb
cld
pop
cli
es
cmc
jbe
xchg
sahf
js
push
insb
ljmp
adc
fcompl
inc
dec
sbb
xor
lea
shrb
out
int3
addr16
mov
mov
mov
mov
push
sbb
mov
clc
test
shrl
or
pop
inc
sub
xchg
jle
sti
cmpsl
out
aad
loopne
push
lds
pop
int
inc
pop
adc
sbb
xchg
popf
testl
rorl
movsl
mov
mov
daa
xchg
sbb
and
mov
push
dec
xchg
push
rcll
lahf
mov
adc
inc
sarb
mov
push
push
arpl
lahf
out
movsb
andl
adc
adc
inc
xchg
ret
cmp
mov
xor
pusha
mov
mov
movsl
inc
dec
pusha
mov
jbe
jg
leave
dec
mov
jle
cmp
mov
mov
in
mov
outsb
das
out
pop
imul
jno
popa
mov
xor
je
push
push
adc
subl
loopne
dec
or
sahf
xchg
mov
push
adc
out
ss
jle
jge
sbb
cmpsl
movsb
and
mov
mov
iret
in
faddl
pop
bound
stos
adc
pop
xor
mov
sbb
jecxz
loopne
aaa
out
mov
icebp
or
mov
insb
cmpsl
mov
fistpll
iret
mov
dec
por
call
test
movsb
andb
xor
icebp
aad
es
jnp
mov
sbbb
ret
xchg
jmp
rcll
int
les
add
xchg
call
sbb
jmp
out
daa
in
pusha
sub
aaa
cwtl
push
mov
shr
dec
and
inc
inc
ret
add
xlat
cmp
jl
stc
jmp
mov
insl
lret
push
push
push
sbb
pop
popa
frstor
aas
loope
inc
inc
ret
mov
push
orl
je
call
popa
mov
scas
pusha
mov
xor
imull
sbb
fisttpll
pop
push
mov
push
fs
arpl
sbb
sub
loope
ret
sbb
adc
pop
movsb
push
jmp
jo
push
xor
xchg
test
notb
stos
shl
mov
jno
sahf
ljmpw
lcall
lds
scas
pop
sbb
testb
cmc
xchg
cs
push
sub
dec
dec
fsubrl
cld
jnp
mov
hlt
jae
lock
sbb
inc
xchg
pop
bound
pop
or
nop
into
or
sbbb
xor
and
jbe
jle
cmp
fidivs
xchg
lods
pushf
mov
lahf
mov
rcrl
outsl
jge
int
mov
dec
dec
movsl
sti
fsubrp
sarb
clc
mov
mov
cmpsl
jl
repnz
xchg
pusha
fistps
pop
jle
iret
scas
or
xchg
lret
stos
cmp
and
sti
cltd
cmp
pop
rorb
stos
pushf
mov
rcrb
bsr
push
ret
ror
dec
leave
dec
xchg
cmp
movsl
movsb
mov
out
and
lret
sub
push
inc
fsubl
push
popa
pop
lods
outsl
mov
push
mov
cmpl
cmpsl
jecxz
sub
add
ds
daa
pop
mov
int3
or
dec
xchg
shrl
das
inc
mov
aam
scas
push
jbe
repz
das
icebp
cltd
fxch
arpl
and
mov
or
in
int3
jl
cmp
loopne
adc
push
repnz
dec
xchg
lcall
fcmove
sbb
test
mov
mov
out
negb
sti
insl
ljmp
pusha
rclb
xchg
in
fadds
mov
jbe
add
aam
mov
fisttps
lods
inc
test
loopne
popf
loop
sub
push
sub
ljmp
daa
inc
test
pushf
hlt
repnz
pmuludq
leave
imul
fdivs
in
cmc
sbb
xchg
icebp
adc
jl
or
fnstsw
add
xor
inc
in
lods
mov
bound
jle
fwait
or
jns
sbb
pop
push
dec
into
int3
movsb
push
aas
stos
ret
jbe
or
outsl
mov
pop
in
mov
push
xorl
aam
cltd
fistps
xchg
adc
aad
test
out
mov
mov
mov
xor
or
imul
ret
lods
loopne
popf
pushf
lcall
xor
cmp
test
pop
add
jg
jne
clc
mov
dec
insb
lods
insb
inc
jnp
addr16
pushf
loopne
jbe
cwtl
js
or
outsb
ljmp
dec
mov
out
mov
xor
mov
movb
fistpl
mov
lret
sub
fwait
stos
xor
mov
stos
add
xchg
pop
hlt
hlt
push
xor
call
lahf
gs
ficompl
or
jae
lret
mov
in
or
sbbl
in
xchg
stos
add
inc
push
mov
fwait
in
and
push
xchg
jne
mov
into
leave
std
int3
xchg
lret
arpl
inc
ds
cld
sub
daa
mov
fiaddl
inc
lds
loope
cmp
xchg
pop
dec
arpl
imul
mov
or
scas
mov
sub
sub
xchg
aad
pushf
out
pop
sbb
and
mov
incl
testl
iret
jmp
out
aad
pop
ret
push
out
xor
divl
mov
andb
cmp
sbb
and
mov
scas
in
sbb
mull
pop
lea
mov
inc
ror
movb
inc
mov
sbb
push
dec
and
add
fmuls
inc
fs
pop
jns
jge
jp
sub
push
jno
outsb
inc
sbb
fwait
add
icebp
pusha
mov
mov
fs
sub
mov
fwait
xchg
and
push
iret
dec
mov
std
sub
popa
push
mov
jl
daa
inc
xchg
jns
sub
fcmovbe
jmp
adc
dec
leave
rcrl
inc
dec
xchg
jp
cli
adc
jo
js
push
jb
outsl
cmp
lock
sub
adc
das
jle
pushf
imul
sahf
sub
or
insb
dec
or
jg
fstps
mov
int
lods
jnp
or
ror
lret
mov
repnz
or
xor
out
lret
add
push
xchg
mov
xor
mov
and
mov
mov
and
xor
sbb
push
out
in
in
inc
push
sbb
std
add
out
xor
sub
outsl
data16
iret
out
fs
sahf
sbb
sarl
sti
popl
and
mov
pop
mov
xor
lahf
sub
insl
cwtl
ret
test
dec
add
aam
xchg
xor
inc
mov
inc
ret
mov
hlt
mov
into
neg
inc
shl
lahf
call
cmp
mul
pop
clc
inc
cmpsl
mov
and
in
sbbb
nop
je
ss
lods
outsl
inc
add
push
mov
mov
mov
push
mov
dec
sti
loop
mov
dec
adc
jb
repnz
fiaddl
out
and
lcall
push
fldt
loop
fs
mov
push
nop
mov
add
dec
push
test
mov
fmuls
sbb
ljmp
mov
cli
jp
xchg
push
icebp
icebp
push
inc
mov
fs
divl
hlt
mov
push
adc
bound
lock
arpl
pop
mov
xlat
repz
test
mov
insl
stos
mov
stos
scas
idivl
jae
rolb
leave
jbe
inc
std
jl
pop
std
xchg
jl
roll
xor
jl
sub
pop
in
sahf
pop
push
pop
dec
sbb
lods
lock
xchg
add
ds
frndint
fsubr
mov
in
cltd
int
add
xchg
or
or
xchg
cmp
push
jge
dec
push
inc
and
mov
imul
stos
call
pop
sub
enter
shlb
clc
pop
rclb
or
pop
pop
cli
imul
jo
mov
dec
call
gs
into
ljmp
lock
pop
jae
push
cmp
hlt
inc
mov
iret
dec
jp
leave
inc
sahf
bnd
and
aam
std
add
shrl
rcrb
arpl
aaa
inc
mov
mov
pop
mov
sub
test
bound
add
push
lahf
add
add
rclb
lret
movl
lahf
div
inc
lahf
lock
scas
push
dec
inc
ficomps
out
or
sub
les
add
scas
inc
cmp
aam
pop
sbb
orl
and
jbe
cmp
cmpxchg
in
scas
inc
or
sbb
jle
das
jp
in
xor
jecxz
sbb
jecxz
jecxz
scas
leave
js
movntq
rcrl
jbe
mov
mov
adc
out
insb
enter
mov
neg
lahf
aad
inc
stc
xchg
int
xor
popf
jg
int
cmp
jnp
cmp
icebp
jo
cmpxchg
mov
es
or
cmc
ss
pop
dec
or
xchg
stc
sub
mov
cmpsl
mov
je
xor
adc
xor
daa
mov
test
inc
push
rcll
push
mov
inc
ret
inc
lods
xchg
xor
es
outsl
jmp
sub
dec
adc
pop
push
adc
or
in
fidivrl
xor
xor
push
push
jae
sub
aam
rcr
lcall
shlb
lds
sbbb
xor
idiv
xor
hlt
in
mov
in
or
fsubs
push
mov
add
or
jg
imul
popf
sub
mov
push
mov
sub
push
fmuls
rcl
inc
mov
pop
outsl
dec
inc
mov
inc
std
sti
inc
fwait
out
hlt
add
and
and
int
aad
fstpl
pop
pushf
cmp
sbb
xchg
mov
pop
jge
test
scas
addl
xchg
push
cmp
adc
push
mov
cmp
lret
call
shrl
mov
jle
hlt
dec
out
leave
arpl
jmp
ljmp
sbb
dec
adc
ljmp
sub
loopne
rcrb
pop
xor
lods
xchg
cli
cmpsl
cmpsb
out
test
jg
sbb
cmp
fdivl
push
dec
mov
inc
sbb
sub
sbb
sbb
inc
scas
cmpsb
imul
and
sbb
dec
inc
or
cmp
imul
cmp
aad
adc
adc
xlat
arpl
dec
daa
decb
clc
xchg
mov
adc
imul
inc
fs
and
jns
adc
loope
fidivs
call
hlt
xor
inc
cmp
mov
or
int
lret
inc
jmp
jg
mov
sarb
pop
pop
and
adc
pop
fcomp
cmp
mov
dec
mov
xor
inc
rolb
divb
mov
leave
mov
pusha
adc
xchg
mov
shll
sub
fisubrs
cmc
push
std
fidivs
repnz
inc
pop
sub
dec
movsb
mov
xchg
xor
int3
leave
dec
or
imulb
cld
cmp
js
scas
cmc
lods
clc
pop
fbld
call
popa
fstp
pop
lea
leave
fidivl
incl
in
adc
lods
sub
cmp
xor
cld
je
jns
shll
or
add
out
dec
bound
sbb
adc
mov
ds
jb
aad
xor
sub
cmc
sahf
push
pop
loop
pusha
fsts
xchg
dec
lea
cmp
mov
add
jae
mov
xor
jno
aam
cmpsb
and
fstpl
cwtl
sbb
rorb
test
dec
bound
inc
repnz
jp
jbe
adc
jnp
dec
and
pop
arpl
and
fcompl
cwtl
mov
ucomiss
mov
inc
add
outsb
cmpsb
cmp
test
in
sub
es
mov
popf
jae
aam
xchg
outsb
into
dec
leave
or
mov
cmp
cmp
mov
mov
shl
mov
jmp
inc
mov
fistps
rorb
or
and
cmp
pusha
insb
cmp
shlb
add
and
fstps
movsb
pop
out
mov
aad
cmp
inc
test
dec
add
xchg
imul
out
outsb
xor
inc
icebp
jmp
out
mov
inc
decb
subb
mov
decl
or
pop
pop
mov
ss
addr16
fldt
mov
shlb
leave
inc
sub
or
jne
xlat
std
xchg
aad
lods
and
adc
out
movsl
and
movsb
dec
adc
sbb
push
imul
int3
adc
cmp
cltd
cmp
cmp
rcrb
cmpsb
adc
lahf
or
mov
mov
pop
imul
stos
pop
push
fs
lds
sarb
out
shrb
filds
leave
pusha
fs
and
jge
mov
out
push
adc
or
add
mov
add
mov
mov
mov
outsb
xchg
aam
sub
sti
rorb
sarl
rcl
dec
inc
pop
mov
add
sbb
adc
xor
or
sbb
pop
rcll
nop
cmpsb
cmpsl
inc
cmp
jp
arpl
je
clc
test
scas
lods
sub
push
xor
fsubl
lret
movsl
aam
inc
enter
jle
inc
xorl
jbe
js
in
dec
sub
daa
ljmp
sbb
int3
jae
scas
lret
dec
xchg
push
inc
sbb
and
inc
gs
sbb
imul
adc
insb
inc
daa
mov
fwait
adc
rclb
push
cmp
inc
movb
test
mov
add
jb
cmpsb
insb
jmp
sbb
fbld
cmp
sbb
xchg
adc
or
insb
nop
cmpsb
push
pop
ret
mov
pop
mov
add
pop
and
lock
rolb
test
cmp
mov
aad
jno
dec
bound
and
cld
movsb
les
ss
inc
shll
shl
imul
cld
loopne
cli
sbb
push
pop
cltd
sub
ret
aas
mov
add
outsb
in
xor
inc
xorb
shlb
mov
test
inc
pop
and
ret
push
cwtl
int
xor
js
leave
add
scas
ret
mov
jnp
sub
inc
andb
mov
jbe
push
xchg
aam
xchg
xchg
pop
jp
mov
mov
lea
rorl
add
fsts
rclb
adc
sti
and
in
pop
movsl
icebp
mov
fdivs
pop
loopne
outsl
jmp
jne
dec
xchg
fwait
arpl
ljmp
push
icebp
cmp
jae
inc
cli
xchg
pop
add
mov
push
es
and
pop
popf
sbb
mov
stc
aaa
enter
int3
sarb
pop
cli
inc
sarl
divl
call
shll
dec
xchg
sbb
fistps
lds
push
inc
ss
int3
mov
jo
dec
sub
stos
cltd
sahf
xchg
mov
lods
int3
lea
test
dec
or
aam
pop
xchg
inc
aad
pop
sub
and
js
inc
std
jl
and
sti
pop
popa
mov
fsubr
pop
sub
out
inc
adc
dec
push
loop
mov
lea
jmp
cmpl
mov
xchg
scas
sub
mov
mov
mov
pop
xor
dec
ss
decb
lds
cmp
xchg
out
xor
lods
sbb
data16
test
and
mov
xor
lods
sub
mov
mov
fcoms
mov
dec
movb
cli
mov
dec
dec
dec
leave
dec
mov
ds
fs
shlb
sbb
cmc
inc
mov
hlt
mov
test
popf
outsb
jl
loopne
fs
pop
out
aaa
jb
fnsave
insb
mov
sub
cltd
mov
mov
mov
lods
insl
fmull
movsl
mov
fstpl
pop
pop
adc
test
into
stos
test
cmp
mulb
scas
aas
fnsave
ret
icebp
jo
repnz
rorl
sti
cltd
lea
dec
bound
adc
bound
loopne
bound
pop
push
lods
xchg
imul
popf
sbb
orb
sbb
dec
mov
mov
insl
ret
cmp
cmp
loope
mov
in
cwtl
fs
sahf
int
cwtl
lret
push
pop
cwtl
testl
in
dec
sarl
stos
jnp
mov
scas
ss
and
mov
add
orb
push
rclb
jb
add
inc
inc
and
out
lahf
and
pop
outsb
sbb
outsl
pop
jecxz
icebp
in
es
and
pop
xor
bswap
mov
dec
decb
mov
int3
call
push
daa
mov
sbb
mov
push
xchg
xor
mov
cmp
movb
dec
stos
cmp
hlt
aaa
inc
lock
loope
jmp
ljmp
adc
sbb
xchg
std
ror
fdivr
push
push
insb
or
pop
call
jae
jl
aaa
roll
mov
push
and
dec
mov
mov
xor
notl
jle
jg
pop
jae
insb
je
jae
mov
imul
arpl
add
pop
jae
cli
in
jp
aam
dec
movsl
push
jmp
dec
call
cmp
rcrb
or
shr
mov
pop
push
loop
dec
mov
mov
xchg
into
dec
and
leave
or
inc
leave
pusha
fistpll
scas
jge
cmp
jae
lahf
pushf
adc
movsb
jnp
ffreep
nop
xchg
cmc
cmp
add
loopne
xor
sub
add
cmp
cmpsb
or
daa
pcmpgtd
add
mov
es
mov
notb
xchg
xor
mov
jmp
jecxz
lret
jne
mov
mov
xchg
adc
aam
iret
or
es
fsubr
xor
cmp
lock
in
mov
or
mov
pushf
pop
jnp
cwtl
hlt
or
inc
icebp
push
dec
or
sahf
pushl
aad
sub
and
cmp
ret
dec
insl
sbb
lret
in
dec
mov
cmp
mov
icebp
daa
pop
dec
out
add
cli
aam
xor
lods
mov
add
sbb
ficoml
stos
leave
dec
or
push
sbb
adc
adc
dec
loop
fistps
nop
fidivrs
nop
xchg
lea
lret
rep
insb
lds
fs
imulb
fcomip
adc
add
adc
add
fnstsw
lds
mov
add
jecxz
addl
stc
int
int3
fidivrs
lock
out
out
lret
jecxz
push
cmp
sbb
push
pop
dec
and
addb
cmp
out
add
inc
sti
pop
fstps
xchg
and
aaa
push
adc
rolb
test
cmp
outsb
lods
ja
icebp
dec
nop
and
adc
mov
idivl
push
pop
jo
dec
push
push
outsl
bswap
ljmp
mov
jl
and
adc
lea
out
push
pop
jl
xchg
popf
aad
mov
jae
mov
mov
ret
dec
test
testl
lock
jbe
jmp
test
outsl
cmp
daa
inc
pop
sahf
cmp
sar
insb
push
xchg
mov
mov
enter
lds
out
mov
mov
data16
lret
sahf
and
mov
push
xchg
pop
iret
push
fmull
dec
addr16
inc
xor
mov
jae
call
dec
sbb
pop
lret
loop
ret
sbb
cwtl
ror
rclb
lret
add
mov
call
in
xorb
or
and
and
mov
push
mov
xchg
js,pn
jnp
incb
and
mov
jne
je
push
cltd
in
fwait
cmpsl
es
and
insb
sbb
dec
mov
add
out
sub
insl
mov
fsubr
gs
and
sahf
or
mov
push
add
lods
jge
dec
inc
and
popf
push
push
out
scas
daa
jnp
scas
int
jmp
mov
push
pop
clc
adc
adc
int
or
mov
hlt
xor
sub
movsb
gs
and
sahf
mov
xchg
inc
mov
xor
mov
jo
push
pop
cld
lods
mov
jo
imul
enter
int3
adc
lock
sti
lret
or
xchg
popa
push
clc
push
pop
push
in
xor
outsb
pop
stos
add
pop
mov
and
aad
sbb
or
sbb
sub
mulb
jns
cli
imul
ljmp
mov
rcrb
lea
cmpsl
jbe
test
add
mov
jo
xor
mov
addr16
fisubrs
xchg
rcr
pop
fcomps
mulb
adc
or
dec
movl
cld
sub
and
inc
and
jmp
inc
out
imul
xchg
or
inc
std
jl
ret
hlt
cld
xchg
dec
xor
mov
sbb
scas
je
mov
push
sbb
mov
scas
popa
cmp
adc
pop
mov
mov
jnp
out
test
xor
mov
sarb
js
push
repz
dec
xchg
pop
daa
xchg
test
ror
dec
int3
ds
mov
pop
mov
ud0
push
jp
xor
cmp
ja
cs
sub
mov
xor
xor
jo
cmp
add
xor
jecxz
and
cmpsl
movsb
movsb
and
inc
jns
push
lock
mov
out
stos
lds
pop
enter
dec
mov
lret
cld
xchg
sti
std
clc
clc
ja
adc
lds
xchg
mov
cmp
pop
scas
das
lods
sub
fbld
mov
jns
sarb
shlb
mov
add
aaa
enter
call
fstps
dec
ja
mov
cwtl
pop
push
in
iret
loope
dec
pop
clc
mov
or
mov
subl
xor
mov
imulb
daa
mov
and
arpl
sub
test
mov
dec
pop
mov
jl
xor
xor
test
pushf
gs
and
mov
push
sbb
cwtl
hlt
adc
push
jo
hlt
mov
push
add
jge
popa
aas
std
flds
cli
pop
mov
xor
cmpsl
insl
add
push
call
std
adc
testl
cmp
fcmovu
ss
push
sar
lods
loope
outsl
fistpll
jnp
sahf
sbbb
pop
jns
out
shlb
pushf
push
repnz
xor
dec
inc
out
inc
add
mov
mov
sub
xchg
scas
rcrl
mov
adcl
pop
inc
iret
or
inc
sbbb
cltd
std
aaa
sbb
jo
xor
push
cmpsl
test
adc
movl
test
push
testb
nop
and
xchg
stos
stos
jno
mov
and
aas
lea
fsub
pop
aad
push
or
int
jnp
movl
imul
pop
xor
sub
push
shrl
repz
outsl
in
push
jmp
pop
int3
add
inc
stc
lret
inc
test
pop
lcall
aas
or
sub
repz
shl
or
pop
add
test
mov
or
push
es
lods
cld
and
jmp
stos
adc
pusha
and
adc
cmp
inc
lea
add
fnstsw
mov
dec
jne
and
and
or
jl
pop
lret
cmp
cmpsb
lret
lret
mov
mov
jbe
cmp
sbb
mov
sbb
pop
jp
jmp
mov
aam
mov
add
jecxz
inc
mov
xor
ret
xchg
sub
add
cmpsb
sbb
mov
push
psubusw
ljmp
and
stos
test
sbb
fs
xor
jno
jmp
in
pop
pop
movsb
scas
jmp
adc
std
in
push
rorb
mov
ret
pop
data16
out
outsb
test
xchg
add
fistl
push
mov
jne
dec
enter
add
mov
lods
inc
mov
pop
dec
sbb
pop
cmc
adc
adc
cmp
enter
mov
sub
jae
das
lcall
ds
and
jbe
mov
inc
lea
inc
testl
outsl
mov
xor
fnstenv
enter
test
jecxz
loop
fwait
dec
das
sbb
or
lea
add
xorb
jbe
mov
adc
daa
cmpsl
insb
sub
jno
adc
ss
xchg
sahf
add
aaa
xchg
push
rclb
dec
mov
cmpsb
jle
push
std
pushf
jbe
inc
jecxz
fiadds
pop
pop
insl
imul
sbb
int
movsl
sbb
faddl
mov
nop
cli
push
sbb
xchg
enter
ja
std
testb
xorb
add
and
sti
xchg
lahf
sbb
lods
cs
mov
daa
les
xor
cmp
enter
push
insb
or
fists
add
fsubrl
jnp
xor
into
lds
or
cmpsb
ret
mov
cmc
adc
jbe
scas
gs
in
scas
test
mov
addb
push
cltd
push
iret
dec
int3
mov
jl
addl
jns
aas
cmc
aas
out
xor
test
sbb
sub
and
pop
inc
fwait
mov
nop
adc
push
mov
pop
cmp
data16
push
sbb
mov
or
pop
xchg
mov
add
push
int
cmp
mov
sbb
aas
sbb
push
jl
cltd
insl
scas
std
sub
jae
leave
pusha
shlb
mov
stos
cmp
cmp
nop
stos
in
or
xor
add
cmp
adc
insl
add
nop
inc
daa
jns
pusha
mov
sti
sbb
enter
mov
das
or
iret
inc
aas
jbe
inc
lahf
imul
rcr
sahf
and
add
popa
les
xor
adc
loop
jne
cmpsl
sub
and
push
xor
.byte
.byte
sahf
.byte
.byte
sub
or
imul
gs
xor
cs
insb
add
nop
or
dec
nop
or
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
and
gs
je
popa
insb
je
and
ja,pn
bound
insb
insl
popa
jae
gs
arpl
call
pop
sub
mov
lea
mov
lods
rol
jmp
call
xchg
ror
sub
sub
clc
add
jmp
jmp
jmp
rol
dec
sub
sub
add
nop
add
clc
stos
loop
aas
fxch
inc
push
ja,pn
xor
dec
in
in
fildll
adc
and
xchg
push
mov
mov
inc
ret
fstpt
xchg
xor
sub
push
pusha
add
mov
pop
dec
adc
pop
icebp
stos
xor
pop
scas
mov
aam
mov
imul
sub
cli
movsb
fcompl
dec
adc
stos
dec
enter
add
pop
cltd
mov
js
xor
xchg
stos
out
mov
pop
das
dec
mov
mov
mov
or
cld
mov
icebp
pop
outsb
mov
ror
sub
cmc
pop
and
and
orl
sub
repz
test
mov
pushf
ficompl
cwtl
lds
scas
push
adc
inc
divl
aas
jbe
xlat
idivb
jmp
push
imul
idivl
and
jno
push
mov
adc
orl
sub
cmc
jb
test
test
add
fcomps
sub
and
rolb
sbb
xlat
jbe
ss
ret
rorl
push
addr16
cs
lcall
xchg
pushf
jns
ja
sbb
jge
loopne
add
fwait
jbe
cld
xchg
cmp
mov
mov
fidivl
xchg
and
out
mov
aad
sti
push
xlat
adc
push
dec
add
mov
idivl
lock
stc
les
sbb
lock
jp
adc
daa
fs
data16
mov
push
or
cs
mov
jge
daa
mov
sbb
jns
cs
xchg
xchg
and
add
jle
xor
imulb
je
lock
jmp
aad
xor
ret
lcall
dec
xlat
or
shl
pop
in
inc
mov
dec
out
cwtl
aaa
inc
aaa
mov
scas
mov
in
push
mov
cwtl
and
xchg
xor
fdivrs
lcall
or
lods
jne
jl
jnp
cmp
enter
fidivl
fs
sbb
jne
jo
fcoms
jmp
mov
mov
mov
sti
nop
push
mov
cmp
mov
fimull
push
aam
xchg
adc
call
sbb
jbe
fdivl
jne
leave
xchg
lods
int3
mov
addr16
mov
jns
int
int3
int3
xchg
add
jecxz
repz
cmc
jns
mov
cmp
call
sbb
popa
mov
adc
dec
adc
stos
mov
xor
shl
mov
and
dec
ret
xlat
mov
fwait
addr16
rcrl
dec
nop
cmpl
xor
js
mov
xor
scas
test
mov
xlat
in
jbe
mov
jle
adc
push
jb
jge
jmp
out
mov
pop
out
test
push
fiadds
repnz
out
jge
enter
or
js
cmpsl
sbb
jne
call
aaa
mov
push
ja
xchg
xorb
fldl
test
ficoml
loop
push
jl
cmp
mov
lock
push
lock
pop
xchg
adc
imul
ret
sbb
mov
cs
inc
adc
mov
ficompl
adc
ds
mov
jnp
or
std
pop
aad
xlat
imul
repz
xor
in
stos
inc
imul
lahf
fwait
pop
cltd
push
or
xor
mov
int
sbb
mov
ja
mov
push
repnz
or
mov
sbb
mov
mov
pop
icebp
inc
rorb
dec
lea
das
push
and
pop
es
or
dec
imul
out
notb
push
xor
push
cwtl
mov
bound
pusha
mov
jae
cli
ja
orl
adc
movsb
and
sahf
sti
nop
aad
mov
lahf
test
mov
inc
inc
mov
rcrl
jne
jmp
outsl
jmp
stos
and
movsb
mov
in
clc
pop
sti
push
aad
jnp
outsl
insl
insl
mov
mov
pop
pop
movsb
shrl
popf
in
xor
aad
mov
xchg
inc
lahf
test
clc
jo
std
jle
mov
sbb
jno
jmp
ljmp
ja
pop
push
cmp
rol
adc
push
imul
push
add
pop
pop
push
pop
mov
in
cmp
lods
sub
lahf
and
dec
sub
xlat
adc
int3
dec
or
cli
shrb
sub
fdivl
mov
mov
inc
nop
lods
pop
insl
mov
cwtl
cmpsl
inc
pusha
and
pop
dec
inc
xor
push
xor
enter
mov
idivl
mov
ja
scas
lods
sub
dec
or
and
mov
cmp
ss
rcll
dec
or
call
inc
add
mov
lret
xchg
jo
dec
cltd
fs
and
lcall
push
ficomps
cwtl
mov
xchg
mov
leave
push
out
loopne
pop
fwait
je
sub
mov
dec
out
dec
sbb
pushf
stc
dec
pushf
ficompl
shr
push
mov
fldt
hlt
cmp
cmp
mov
mov
repnz
mov
dec
rcll
cs
jp
pop
rolb
mov
repnz
cwtl
clc
imul
fs
mov
fisubrs
cwtl
and
ljmp
mov
sub
mov
test
mov
scas
fwait
ret
pop
lods
pushf
repz
ds
iret
mov
test
jecxz
and
pop
arpl
cwtl
lods
pop
ss
inc
add
cmp
xor
aam
sub
sub
stos
mov
lret
leave
int3
insl
std
sti
sti
add
add
fsubrp
jmp
xchg
out
in
jo
loope
mov
orl
ljmp
movsl
stos
hlt
fwait
lret
mov
inc
int3
aad
ret
push
imul
scas
or
and
push
or
cmp
push
iret
push
dec
call
or
jle
pop
xchg
js
jne
xor
imul
pusha
fimuls
ret
jg
jae
push
test
xchg
xchg
inc
jp
mov
xor
dec
leave
lods
sub
hlt
and
popf
sbb
fcomps
push
xorb
int3
stos
leave
repnz
inc
std
jl
jnp
jbe
jne
jo
outsl
jmp
fsubp
in
adc
fistpl
adc
mov
add
cmp
lods
sub
mov
sbb
ficompl
push
aam
iret
dec
into
dec
leave
dec
enter
ret
jl
jnp
jbe
jne
jo
outsl
jmp
ljmp
pop
ficomps
sbb
adc
push
xchg
mov
xor
xor
sub
and
aad
aam
iret
push
into
dec
leave
dec
enter
ret
jle
jnp
js
jne
jb
outsl
jmp
ljmp
pusha
ficomps
sbb
adc
or
aas
mov
mov
mov
scas
lods
sub
and
fcomps
push
rclb
dec
int3
dec
leave
dec
movb
rolb
cli
jnp
jbe
jne
jo
outsl
jmp
call
arpl
pop
fcompl
sbb
adc
push
test
mov
xor
xor
sub
and
aad
aam
iret
dec
into
dec
leave
dec
enter
ret
jl
jnp
jbe
jne
jo
outsl
jmp
ljmp
pop
ficomps
sbb
adc
push
xchg
mov
xor
xor
sub
and
aad
aam
iret
push
into
dec
leave
dec
enter
ret
jle
jnp
js
jne
jb
outsl
jmp
ljmp
pusha
ficomps
sbb
adc
or
aas
mov
mov
mov
scas
lods
sub
and
fcomps
push
rclb
dec
int3
dec
leave
dec
movb
rolb
cli
jnp
jbe
jne
jo
outsl
jmp
call
arpl
pop
fcompl
sbb
adc
push
test
mov
xor
xor
sub
and
aad
aam
iret
dec
into
dec
leave
dec
enter
ret
jl
jnp
jbe
jne
jo
outsl
jmp
ljmp
pop
ficomps
sbb
adc
push
xchg
mov
xor
xor
sub
and
aad
aam
iret
push
into
dec
leave
dec
enter
ret
jle
jnp
js
jne
jb
outsl
jmp
ljmp
pusha
ficomps
sbb
adc
or
aas
mov
mov
mov
scas
lods
sub
and
fcomps
push
rclb
dec
int3
dec
leave
dec
movb
rolb
cli
jnp
jbe
jne
jo
outsl
jmp
call
arpl
pop
fcompl
sbb
adc
push
test
mov
xor
xor
sub
and
aad
aam
iret
dec
into
dec
leave
dec
enter
ret
jl
jnp
jbe
jne
jo
outsl
jmp
ljmp
pop
ficomps
sbb
adc
push
xchg
mov
xor
xor
sub
and
aad
aam
iret
push
into
dec
leave
dec
enter
ret
jle
jnp
js
jne
jb
outsl
jmp
ljmp
pusha
ficomps
sbb
adc
or
aas
mov
mov
mov
scas
lods
sub
and
fcomps
push
rclb
dec
int3
dec
leave
dec
movb
rolb
cli
jnp
jbe
jne
jo
outsl
jmp
call
arpl
pop
fcompl
sbb
adc
push
test
mov
xor
xor
sub
and
aad
aam
iret
dec
into
dec
leave
dec
enter
ret
jl
jnp
sub
stos
movsb
cmpsb
dec
inc
les
arpl
rcll
push
lret
idiv
inc
jle
jge
push
xchg
jbe
hlt
imul
fucom
test
test
cmp
or
aas
cmpl
inc
ret
mov
xor
es
lock
jmp
ljmp
inc
push
rcl
dec
cwtl
pop
xchg
adc
je
inc
jge
jg
jg
cmc
add
imul
pop
addr16
test
add
movhps
aad
rclb
xor
add
mov
xor
jl
jnp
fisubrl
and
pushf
rcl
pop
faddl
add
add
push
pop
add
